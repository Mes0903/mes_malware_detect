
e6bfc001bd81e53f63bb79462e207c6faae50772ea9d4c9f8265fb9975ce4fb4.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x4493e8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x4493ec
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x4493f0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x4493f4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x4493f8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x4493fc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x449400
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x449404
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x449406
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417004
  4010e9:	test   eax,eax
  4010eb:	je     0x41534a
  4010f1:	push   0x1
  4010f3:	lea    edx,[ebp-0x10]
  4010f6:	push   edx
  4010f7:	call   DWORD PTR ds:0x417008
  4010fd:	lea    eax,[ebp-0x10]
  401100:	push   eax
  401101:	push   0x0
  401103:	push   0x0
  401105:	push   0x1
  401107:	call   DWORD PTR ds:0x41700c
  40110d:	mov    ecx,DWORD PTR [ebp-0x10]
  401110:	add    ecx,0x1
  401113:	mov    DWORD PTR [ebp-0x10],ecx
  401116:	lea    edx,[ebp-0x30]
  401119:	push   edx
  40111a:	lea    eax,[ebp-0x50]
  40111d:	push   eax
  40111e:	push   0x40
  401120:	push   0x7
  401122:	push   0x0
  401124:	mov    ecx,DWORD PTR [ebp-0x50]
  401127:	push   ecx
  401128:	call   DWORD PTR ds:0x417000
  40112e:	lea    edx,[ebp-0x50]
  401131:	push   edx
  401132:	push   0x0
  401134:	push   0x8003
  401139:	mov    eax,DWORD PTR [ebp-0x50]
  40113c:	push   eax
  40113d:	call   DWORD PTR ds:0x417010
  401143:	lea    ecx,[ebp-0x50]
  401146:	push   ecx
  401147:	push   0x0
  401149:	push   0x0
  40114b:	push   0x8003
  401150:	mov    edx,DWORD PTR [ebp-0x50]
  401153:	push   edx
  401154:	call   DWORD PTR ds:0x417018
  40115a:	lea    eax,[ebp-0x50]
  40115d:	push   eax
  40115e:	push   0x0
  401160:	push   0x0
  401162:	push   0x0
  401164:	mov    ecx,DWORD PTR [ebp-0x50]
  401167:	push   ecx
  401168:	call   DWORD PTR ds:0x417014
  40116e:	aam    0xfd
  401170:	pusha  
  401171:	pusha  
  401172:	(bad)  
  401173:	xor    ecx,esp
  401175:	push   esi
  401176:	push   ds
  401177:	cmp    DWORD PTR [edx+0x6],edi
  40117a:	mov    ebx,0x498d5941
  40117f:	mov    al,0x6f
  401181:	mov    esp,0xa9f98e08
  401186:	xor    bh,BYTE PTR [ecx+0x57310962]
  40118c:	sbb    DWORD PTR [eax+0x25],ebp
  40118f:	test   eax,0x4b0c8c16
  401194:	mov    ecx,0x1e41dbcf
  401199:	int3   
  40119a:	not    DWORD PTR [edi-0x6e89cf9c]
  4011a0:	mov    eax,ds:0xccec5490
  4011a5:	xor    BYTE PTR [edi],dl
  4011a7:	repz pop edx
  4011a9:	sbb    ecx,DWORD PTR [edi-0x8f88c14]
  4011af:	leave  
  4011b0:	mov    dl,0x58
  4011b2:	mov    WORD PTR [bx+0x209],gs
  4011b7:	push   ebx
  4011b8:	stc    
  4011b9:	aad    0x6a
  4011bb:	fmul   QWORD PTR [ebx+edx*8+0x6bc176b8]
  4011c2:	push   ds
  4011c3:	sub    dl,BYTE PTR [esi+ecx*8-0x18]
  4011c7:	or     al,0x89
  4011c9:	xchg   DWORD PTR [edi],ebp
  4011cb:	adc    al,bh
  4011cd:	sbb    dh,dl
  4011cf:	popf   
  4011d0:	mov    dh,0x59
  4011d2:	es stc 
  4011d4:	fidivr DWORD PTR [edx+0x73ae2394]
  4011da:	mov    edx,0xca611ea7
  4011df:	or     eax,0x74e5138e
  4011e4:	xchg   ecx,eax
  4011e5:	in     eax,dx
  4011e6:	rol    DWORD PTR [edi-0x28],1
  4011e9:	lods   eax,DWORD PTR ds:[esi]
  4011ea:	adc    DWORD PTR [edi],ecx
  4011ec:	in     al,0xe4
  4011ee:	out    0x3a,eax
  4011f0:	xor    BYTE PTR [ebp-0x78],bl
  4011f3:	(bad)  
  4011f5:	pop    ss
  4011f6:	arpl   WORD PTR [eax+0x53f61e9a],di
  4011fc:	or     dl,ah
  4011fe:	mov    ebx,0xe13e1fba
  401203:	sub    BYTE PTR [ebp+0x3bf1d04],dh
  401209:	lods   al,BYTE PTR ds:[esi]
  40120a:	push   ebx
  40120b:	or     DWORD PTR [ebx],eax
  40120d:	mov    WORD PTR [eax+0x6b],?
  401210:	mov    bl,0x2b
  401212:	ret    0x1d42
  401215:	xor    al,0x77
  401217:	adc    bh,BYTE PTR [ebx]
  401219:	cmp    BYTE PTR [esp+eax*1+0x0],dh
  40121d:	jp     0x401205
  40121f:	jg     0x4012a0
  401221:	shl    DWORD PTR [eax+edi*2-0x6b01cacc],1
  401228:	fwait
  401229:	cmp    eax,0x1bdea475
  40122e:	push   ebp
  40122f:	icebp  
  401230:	mov    ss,WORD PTR [edx+0x3a]
  401233:	popa   
  401234:	stos   DWORD PTR es:[edi],eax
  401235:	mov    esp,0xba3cae11
  40123a:	sub    al,0x6f
  40123d:	scas   al,BYTE PTR es:[edi]
  40123e:	or     esp,DWORD PTR [edx+0x7]
  401241:	jecxz  0x4012a9
  401243:	sbb    esp,DWORD PTR [edx]
  401245:	pop    ecx
  401246:	mov    WORD PTR [ebp+0x3e],?
  401249:	fcomp  QWORD PTR [edi-0x2b01c110]
  40124f:	mov    esp,0xa0d04216
  401254:	lods   eax,DWORD PTR ds:[esi]
  401255:	cmp    BYTE PTR [ebx-0x19],ah
  401258:	mov    al,ds:0x99dbf83c
  40125d:	xor    esp,ebx
  40125f:	cmp    DWORD PTR [edx],esp
  401261:	dec    esi
  401262:	add    cl,BYTE PTR [eax+eiz*4+0x13c8541a]
  401269:	add    esp,DWORD PTR [eax-0x5a92d543]
  40126f:	fs gs mov di,0xb267
  401275:	xchg   ebp,eax
  401276:	or     BYTE PTR [edi+0x3ac045ec],bh
  40127c:	cmp    DWORD PTR ds:0x1cf57f89,esp
  401282:	jle    0x401261
  401284:	mov    ah,dl
  401286:	xchg   DWORD PTR [eax-0x3a41065f],edi
  40128c:	jmp    eax
  40128e:	aaa    
  40128f:	fwait
  401290:	hlt    
  401291:	xor    ch,BYTE PTR [edi+0x70]
  401294:	push   es
  401295:	les    esp,FWORD PTR [eax+eax*4-0xa3afc5d]
  40129c:	mov    ebp,cs
  40129e:	rol    al,0x40
  4012a1:	mov    dh,0x64
  4012a3:	xlat   BYTE PTR ds:[ebx]
  4012a4:	daa    
  4012a5:	pop    ds
  4012a6:	pop    ebp
  4012a7:	jbe    0x40123c
  4012a9:	out    0x23,eax
  4012ab:	(bad)  
  4012ac:	mov    bh,0xb
  4012ae:	ret    
  4012af:	xor    DWORD PTR [ebx+0x12101f47],0x248f58c2
  4012b9:	or     dl,BYTE PTR [eax]
  4012bb:	dec    ebp
  4012bc:	mov    esi,0x5ed3410f
  4012c1:	lds    edi,FWORD PTR [edx]
  4012c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012c4:	mov    edx,?
  4012c6:	and    BYTE PTR [esi-0x3c],cl
  4012c9:	ins    BYTE PTR es:[edi],dx
  4012ca:	outs   dx,DWORD PTR ds:[esi]
  4012cb:	sub    cl,al
  4012cd:	xlat   BYTE PTR ds:[ebx]
  4012ce:	sub    al,0x24
  4012d0:	rcl    DWORD PTR [edi+0x5434a61b],1
  4012d6:	pop    ebp
  4012d7:	mov    WORD PTR [ebx+edi*1],?
  4012da:	cmp    al,0x92
  4012dc:	inc    ebp
  4012dd:	test   al,0x8d
  4012df:	adc    eax,0x9738bac0
  4012e4:	in     al,0x35
  4012e6:	int3   
  4012e7:	(bad)  
  4012e8:	std    
  4012e9:	cs mov ah,0x12
  4012ec:	scas   al,BYTE PTR es:[edi]
  4012ed:	pop    ecx
  4012ee:	pushf  
  4012ef:	cwde   
  4012f0:	mov    eax,ds:0x42c312ec
  4012f5:	mov    BYTE PTR [ebx],bl
  4012f7:	(bad)  
  4012f8:	fnsave [esi+0x69dbacf4]
  4012fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012ff:	aad    0x9d
  401301:	jae    0x401304
  401303:	out    0x6a,al
  401305:	pop    es
  401306:	mov    ecx,0xce5da684
  40130b:	pop    ss
  40130c:	push   edi
  40130d:	push   esi
  40130e:	sub    eax,0x6b785c04
  401313:	cmp    DWORD PTR [esi],ecx
  401315:	stos   BYTE PTR es:[edi],al
  401316:	jmp    0x4012f6
  401318:	arpl   WORD PTR [ebx-0x7a],dx
  40131b:	add    esp,ebp
  40131d:	mov    ds:0x580821d0,al
  401322:	(bad)  
  401323:	cmp    eax,0x9854561f
  401328:	or     esp,esp
  40132a:	adc    DWORD PTR [edi],0xa9e5baee
  401330:	mov    ebx,DWORD PTR [edi+ebx*1-0x1f]
  401334:	inc    ebp
  401335:	imul   esi,DWORD PTR [ebp-0x5c720167],0x1d09cadf
  40133f:	sub    bl,BYTE PTR [edx+ebp*1+0x25]
  401343:	rol    DWORD PTR [edi-0x77e5f4d4],cl
  401349:	lods   al,BYTE PTR ds:[esi]
  40134a:	clc    
  40134b:	or     al,0x2e
  40134d:	rcl    dl,cl
  40134f:	adc    bl,BYTE PTR ds:0x22040008
  401355:	pop    ebp
  401356:	pop    edx
  401357:	rcl    DWORD PTR [esi],0x3
  40135a:	scas   al,BYTE PTR es:[edi]
  40135b:	ret    0x932e
  40135e:	mov    WORD PTR [eax+0x48],gs
  401361:	mov    ebp,0xc215f9cb
  401366:	push   ss
  401367:	cmp    bl,BYTE PTR [eax+ebp*8-0x749140eb]
  40136e:	scas   eax,DWORD PTR es:[edi]
  40136f:	pop    edi
  401370:	xor    dl,BYTE PTR [eax]
  401372:	dec    eax
  401373:	shl    DWORD PTR [edx-0x6c43737],0xd5
  40137a:	jecxz  0x401395
  40137c:	loop   0x401336
  40137e:	adc    eax,0xf653b8c4
  401383:	ss dec ecx
  401385:	nop
  401386:	cmp    BYTE PTR [edx+0x54],bl
  401389:	in     eax,dx
  40138a:	stc    
  40138b:	test   DWORD PTR [ebp-0x130aae89],edi
  401391:	jl     0x401344
  401393:	jbe    0x401366
  401395:	push   ss
  401396:	in     eax,0x74
  401398:	inc    esp
  401399:	das    
  40139a:	dec    ebp
  40139b:	rol    BYTE PTR [eax],cl
  40139d:	sub    eax,0x6963c5dd
  4013a2:	es inc edi
  4013a4:	inc    ebx
  4013a5:	int    0x6a
  4013a7:	pop    esi
  4013a8:	mov    esi,0xc17194d3
  4013ad:	xchg   ecx,eax
  4013ae:	push   esi
  4013af:	mov    bl,0xf8
  4013b1:	pop    ss
  4013b2:	in     eax,dx
  4013b3:	cmc    
  4013b4:	cmp    dh,0x4e
  4013b7:	(bad)  
  4013b8:	mov    esi,0x317c0fbf
  4013bd:	(bad)  
  4013be:	fstp   TBYTE PTR [edx]
  4013c0:	ds in  eax,dx
  4013c2:	pop    edx
  4013c3:	mov    dl,0x1b
  4013c5:	push   ecx
  4013c6:	lods   al,BYTE PTR ds:[esi]
  4013c7:	rcl    DWORD PTR [ecx],cl
  4013c9:	fisttp DWORD PTR [edi]
  4013cb:	out    0x4,eax
  4013cd:	out    0xc0,al
  4013cf:	xchg   edx,eax
  4013d0:	push   eax
  4013d1:	jnp    0x401407
  4013d3:	and    BYTE PTR [edx-0x74d02efe],al
  4013d9:	push   es
  4013da:	daa    
  4013db:	xor    al,0x6d
  4013dd:	fsub   QWORD PTR [eax+0x68e4968f]
  4013e3:	(bad)  
  4013e4:	mov    fs,edx
  4013e6:	sub    bh,BYTE PTR [esi]
  4013e8:	sub    edi,DWORD PTR [ebx]
  4013ea:	xchg   esp,eax
  4013eb:	daa    
  4013ec:	iret   
  4013ed:	cwde   
  4013ee:	lock mov ds:0xae58617c,al
  4013f4:	cmp    cl,al
  4013f6:	sbb    ecx,DWORD PTR [ebp+0x36729016]
  4013fc:	or     DWORD PTR [ebx-0x23b2c45d],edx
  401402:	call   0x8265:0xe8e3a075
  401409:	push   0x7876042
  40140e:	sbb    eax,0xc459580b
  401413:	rcr    DWORD PTR [edx-0x55d10396],1
  401419:	scas   al,BYTE PTR es:[edi]
  40141a:	shl    BYTE PTR [eax+0x67b52b8a],cl
  401420:	fs mov ebx,0x92357902
  401426:	(bad)  
  401427:	ins    DWORD PTR es:[edi],dx
  401428:	enter  0x18bc,0x28
  40142c:	inc    ebx
  40142d:	xchg   ecx,eax
  40142e:	outs   dx,BYTE PTR ds:[esi]
  40142f:	pop    ss
  401430:	cdq    
  401431:	inc    esp
  401432:	nop
  401433:	dec    edi
  401434:	mov    ds:0xd8087028,eax
  401439:	ja     0x401403
  40143b:	test   BYTE PTR [edi+0x54],al
  40143e:	ins    DWORD PTR es:[edi],dx
  40143f:	iret   
  401440:	js     0x401435
  401442:	mov    esp,0x3d88df3
  401447:	xchg   DWORD PTR [esi+edx*1-0x3ce9c6c],esi
  40144e:	nop
  40144f:	ret    
  401450:	or     eax,0x6bde4e32
  401455:	add    al,0x9d
  401457:	hlt    
  401458:	jmp    0x401491
  40145a:	in     eax,dx
  40145b:	in     eax,0x14
  40145d:	loop   0x4013fc
  40145f:	fld    DWORD PTR [edi+edx*1-0x52]
  401463:	mov    ds:0x6e8e948d,al
  401468:	sub    BYTE PTR cs:[ebx-0x2ec1b3ed],dh
  40146f:	push   0xec4ed45d
  401474:	mov    bl,0xf2
  401476:	das    
  401477:	shl    al,1
  401479:	(bad)  
  40147a:	xchg   ebp,eax
  40147b:	and    eax,0x4f832322
  401480:	fist   WORD PTR [eax+0x4b]
  401483:	call   0x8eb2:0x1c931af5
  40148a:	sbb    BYTE PTR [esi],ch
  40148c:	mov    BYTE PTR [eax+0x5510658],dl
  401492:	es add eax,0x13b1509e
  401498:	xor    eax,0x79977f2d
  40149d:	mov    bl,0x6e
  40149f:	int3   
  4014a0:	jmp    0xf3d7e6a3
  4014a5:	mov    ecx,eax
  4014a7:	and    ch,BYTE PTR [ebx]
  4014a9:	test   al,0xe5
  4014ab:	jle    0x401507
  4014ad:	cld    
  4014ae:	stos   BYTE PTR es:[edi],al
  4014af:	in     al,dx
  4014b0:	aas    
  4014b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014b2:	shr    BYTE PTR es:[edi],0xdf
  4014b6:	mov    ebp,0x1139492b
  4014bb:	pop    edi
  4014bc:	sbb    al,BYTE PTR [ebx-0x5ae67012]
  4014c2:	rcr    edi,cl
  4014c4:	fcomp  DWORD PTR [esi+0x5e]
  4014c7:	and    al,0xbb
  4014c9:	ror    DWORD PTR [ebx+0x57],1
  4014cc:	pop    esp
  4014cd:	or     eax,0x683f9142
  4014d2:	xor    BYTE PTR [edi+0x4f],dh
  4014d5:	mov    edi,0x408aefbe
  4014da:	pmaddwd mm1,QWORD PTR [ecx+0x59f079ac]
  4014e1:	ja     0x4014f9
  4014e3:	xor    al,cl
  4014e5:	xor    BYTE PTR [eax+0x7d787955],dh
  4014eb:	push   eax
  4014ec:	mov    ah,0xcb
  4014ee:	push   ecx
  4014ef:	mov    al,BYTE PTR [esi]
  4014f1:	jb     0x401480
  4014f3:	mov    ebp,0x69a28a55
  4014f8:	popf   
  4014f9:	sbb    DWORD PTR [ecx],0xffffffe2
  4014fc:	mov    WORD PTR [edx+0x30],cs
  4014ff:	jp     0x4014e1
  401501:	jne    0x4014b2
  401503:	int3   
  401504:	push   edx
  401505:	mov    edx,0xf9c4cf71
  40150a:	cli    
  40150b:	lahf   
  40150c:	shl    ebp,0x9c
  40150f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401510:	add    eax,0x928a1f49
  401515:	mov    al,0x6f
  401517:	std    
  401518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401519:	stc    
  40151a:	call   0x9744:0x9822d27d
  401521:	sbb    eax,0x216416fc
  401526:	shl    BYTE PTR [ecx-0x293f585b],cl
  40152c:	out    0x74,al
  40152e:	fcomp  DWORD PTR [edi+0x1f0532ed]
  401534:	imul   eax,eax,0xb50d245e
  40153a:	inc    ecx
  40153b:	clc    
  40153c:	xchg   DWORD PTR [edx],esp
  40153e:	dec    esp
  40153f:	jne    0x4015c0
  401541:	inc    esp
  401542:	iret   
  401543:	adc    al,0x3a
  401545:	mov    al,ds:0xade0c970
  40154a:	out    dx,eax
  40154b:	(bad)  
  40154c:	nop
  40154d:	popf   
  40154e:	adc    ch,cl
  401550:	and    al,0xe8
  401552:	bound  ebx,QWORD PTR [edi+0x2b]
  401555:	ins    BYTE PTR es:[edi],dx
  401556:	or     eax,0x695a44
  40155b:	loopne 0x401508
  40155d:	xor    cl,BYTE PTR [ebp+0x706df5fb]
  401563:	and    eax,0xac6397f6
  401568:	sar    DWORD PTR [edi-0x4cf7ed9],0xd2
  40156f:	test   dl,0xd4
  401572:	xchg   ebp,eax
  401573:	icebp  
  401574:	xlat   BYTE PTR ds:[ebx]
  401575:	mov    esp,0x92ed8a72
  40157a:	std    
  40157b:	adc    dl,BYTE PTR fs:[esi]
  40157e:	fisttp QWORD PTR [ebx+edx*1]
  401581:	pop    ecx
  401582:	adc    esp,esi
  401584:	pop    edi
  401585:	dec    edi
  401586:	in     eax,0xf1
  401588:	cmp    ch,BYTE PTR [edx]
  40158a:	rcl    DWORD PTR [edx-0x3f],0xd4
  40158e:	mov    ebx,gs
  401590:	ret    
  401591:	mov    edx,0x90285344
  401596:	push   ds
  401597:	icebp  
  401598:	push   ecx
  401599:	fidivr DWORD PTR [esp+edx*8]
  40159c:	and    ecx,DWORD PTR [esi-0x15]
  40159f:	cs mov esp,0xf139abec
  4015a5:	xchg   ebx,eax
  4015a6:	mov    ds:0x778a782b,eax
  4015ab:	fidiv  WORD PTR [esp+esi*1]
  4015ae:	pop    ebx
  4015af:	movzx  edx,BYTE PTR [ebp-0x6c5fd993]
  4015b6:	adc    eax,0x72bbca35
  4015bb:	add    al,0x1
  4015bd:	jnp    0x4015eb
  4015bf:	inc    edi
  4015c0:	jnp    0x401598
  4015c2:	pop    edx
  4015c3:	jmp    0x40160f
  4015c5:	cwde   
  4015c6:	ret    0x777
  4015c9:	out    dx,al
  4015ca:	xor    BYTE PTR [ebx+0x5fad8d25],0x53
  4015d1:	mov    BYTE PTR [eax+0x7f2127c6],dl
  4015d7:	cmc    
  4015d8:	adc    dh,bl
  4015da:	jno    0x401632
  4015dc:	push   0x33bbb11d
  4015e1:	nop
  4015e2:	hlt    
  4015e3:	fadd   st,st(4)
  4015e5:	xchg   esp,eax
  4015e6:	aad    0x70
  4015e8:	and    BYTE PTR [eax+0x27],cl
  4015eb:	sbb    BYTE PTR [eax+0x4379dde2],ah
  4015f1:	ins    DWORD PTR es:[edi],dx
  4015f2:	xchg   DWORD PTR [ecx],esp
  4015f4:	test   al,0x8
  4015f6:	add    bl,dh
  4015f8:	ror    BYTE PTR [ebx+0xb],1
  4015fb:	or     DWORD PTR [esp+eiz*8],edx
  4015fe:	push   edi
  4015ff:	js     0x4015a8
  401601:	mov    ebx,0xff9116d5
  401606:	aam    0x23
  401608:	mov    dh,0x1e
  40160a:	les    esi,FWORD PTR [ebp-0x4d]
  40160d:	mov    ebp,0x8837d77f
  401612:	maxps  xmm5,XMMWORD PTR cs:[ecx+edi*1-0x48be0132]
  40161b:	push   0xffffffb1
  40161d:	call   0x17a8189d
  401622:	jp     0x401610
  401624:	xor    ebp,DWORD PTR [ebx+eax*2]
  401627:	and    eax,0x8006679b
  40162c:	push   ecx
  40162d:	or     BYTE PTR [edi],dh
  40162f:	jnp    0x401602
  401631:	or     eax,0x340f46f8
  401636:	pusha  
  401637:	aaa    
  401638:	daa    
  401639:	fisttp QWORD PTR ds:0x1f16c020
  40163f:	push   ds
  401640:	push   esi
  401641:	jb     0x4015cc
  401643:	jmp    0x9fa0564
  401648:	fistp  WORD PTR [eax]
  40164a:	das    
  40164b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40164c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40164d:	inc    ebx
  40164e:	xchg   ebx,eax
  40164f:	xor    edi,edx
  401651:	inc    ecx
  401652:	and    eax,0xb449c821
  401657:	js     0x401632
  401659:	mov    ch,0x4
  40165b:	cmp    edi,ebp
  40165d:	stos   DWORD PTR es:[edi],eax
  40165e:	aam    0x58
  401660:	sub    ebp,ebp
  401662:	add    BYTE PTR [esi+edx*1-0x32],ch
  401666:	and    eax,0xec43f709
  40166b:	jp     0x401646
  40166d:	outs   dx,DWORD PTR ds:[esi]
  40166e:	loope  0x4015f6
  401670:	fwait
  401671:	hlt    
  401672:	sub    DWORD PTR [ecx],ebp
  401674:	test   BYTE PTR [ebx+esi*1-0x35],bh
  401678:	cs repz inc edi
  40167b:	test   eax,0x279a8293
  401680:	stc    
  401681:	hlt    
  401682:	fwait
  401683:	aad    0xd4
  401685:	xor    cl,BYTE PTR [bx+di-0x632]
  40168a:	sti    
  40168b:	test   al,0xbd
  40168d:	push   esi
  40168e:	jg     0x401675
  401690:	fbstp  TBYTE PTR [ebp-0x661776bf]
  401696:	not    DWORD PTR [edx]
  401698:	shl    ch,cl
  40169a:	out    0x35,al
  40169c:	inc    eax
  40169d:	imul   edi,DWORD PTR [ebp+0xf594d79],0x8050d3cb
  4016a7:	fisttp WORD PTR ds:0x15c5f74
  4016ad:	cmp    al,0xa9
  4016af:	into   
  4016b0:	mov    eax,ds:0x867c6616
  4016b5:	mov    ebx,0x97c3d5e5
  4016ba:	sbb    al,0x28
  4016bc:	dec    ecx
  4016bd:	test   eax,0xd51a37d8
  4016c2:	adc    bl,BYTE PTR ds:0xf7b04552
  4016c8:	mov    edi,DWORD PTR [eax+0x2007db6a]
  4016ce:	retf   
  4016cf:	mov    DWORD PTR [edi+0x7b],edi
  4016d2:	pushf  
  4016d3:	mov    eax,ds:0x98e4ae0a
  4016d8:	ds and edi,eax
  4016db:	mov    es,eax
  4016dd:	add    al,BYTE PTR [eax+0x71]
  4016e0:	cmp    edx,DWORD PTR [esi+0x7d79ac70]
  4016e6:	loop   0x4016da
  4016e8:	adc    eax,0x5ae18e82
  4016ed:	retf   
  4016ee:	mov    ebp,0xf85b8dd5
  4016f3:	mov    ch,0xb2
  4016f5:	dec    ebp
  4016f6:	sbb    al,0x48
  4016f8:	aaa    
  4016f9:	lock ror DWORD PTR [esi-0x5e],0x4d
  4016fe:	(bad)  
  4016ff:	aad    0x43
  401701:	mov    eax,ds:0xed87c7b5
  401706:	loop   0x401701
  401708:	daa    
  401709:	arpl   dx,cx
  40170b:	daa    
  40170c:	adc    DWORD PTR [ecx+0x75],ecx
  40170f:	test   eax,0x7a8a0aa2
  401714:	test   al,0x24
  401716:	mov    ch,0x4e
  401718:	and    bl,BYTE PTR [ebp-0x49912f5f]
  40171e:	pop    ebp
  40171f:	mov    esi,0x796cc1e1
  401724:	sbb    DWORD PTR [edx+0x61c9e15b],eax
  40172a:	pop    es
  40172b:	cdq    
  40172c:	call   0x9cf5:0xcd8cebb
  401733:	fst    DWORD PTR [esi-0x1d]
  401736:	in     eax,dx
  401737:	jl     0x4016cf
  401739:	or     al,0xeb
  40173b:	ds (bad) 
  40173d:	jno    0x401734
  40173f:	xchg   ebx,eax
  401740:	pop    edi
  401741:	xchg   edi,eax
  401742:	in     eax,0xf1
  401744:	mov    esp,fs
  401746:	inc    edi
  401747:	ret    
  401748:	test   eax,0x64413eab
  40174d:	out    dx,al
  40174e:	into   
  40174f:	jle    0x4017bd
  401751:	aam    0xf7
  401753:	(bad)  
  401754:	push   cs
  401755:	xchg   BYTE PTR [ecx-0x66],dh
  401758:	xchg   ebp,eax
  401759:	ss add cl,al
  40175c:	aad    0x91
  40175e:	push   esi
  40175f:	in     eax,0x51
  401761:	sub    bh,BYTE PTR [ecx-0x27]
  401764:	inc    ecx
  401765:	repz addr16 inc ebp
  401768:	add    dh,BYTE PTR [edi]
  40176a:	pushf  
  40176b:	sub    ebx,ebx
  40176d:	cmp    dl,dl
  40176f:	test   al,0x56
  401771:	xor    ch,BYTE PTR [bx-0x6218]
  401776:	lods   eax,DWORD PTR ds:[esi]
  401777:	lods   eax,DWORD PTR ds:[esi]
  401778:	loope  0x4017af
  40177a:	aas    
  40177b:	sahf   
  40177c:	sti    
  40177d:	(bad)  
  40177f:	add    al,BYTE PTR [edx-0x60]
  401782:	mov    ch,0x4a
  401784:	outs   dx,BYTE PTR ds:[esi]
  401785:	pop    ss
  401786:	call   0x8eb:0x2d5d5e04
  40178d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40178e:	jmp    0x835bb184
  401793:	aad    0x13
  401795:	xchg   ecx,eax
  401796:	wbinvd 
  401798:	push   es
  401799:	inc    ecx
  40179a:	mov    esi,0xa5506afa
  40179f:	xor    dh,dl
  4017a1:	dec    edx
  4017a2:	mov    eax,ds:0x5dd7f48b
  4017a7:	mov    ch,0xbe
  4017a9:	adc    BYTE PTR [edx+0x39],0xb9
  4017ad:	cmp    BYTE PTR [ebx-0x75],bh
  4017b0:	add    eax,0x221214c
  4017b5:	xor    esp,DWORD PTR [eax-0x7de71202]
  4017bb:	and    BYTE PTR [ecx+0x7a],0x2f
  4017bf:	mov    esi,0x5404d057
  4017c4:	and    DWORD PTR ds:0x7057f1b,esp
  4017ca:	int    0x4f
  4017cc:	int3   
  4017cd:	js     0x401759
  4017cf:	cdq    
  4017d0:	jo     0x4017e8
  4017d2:	xlat   BYTE PTR ds:[ebx]
  4017d3:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4017d5:	pop    es
  4017d6:	cmp    al,0xf6
  4017d8:	(bad)  
  4017d9:	jae    0x401789
  4017db:	enter  0x9012,0x6b
  4017df:	mov    ds,WORD PTR [ecx-0x5d7bf5da]
  4017e5:	and    bh,BYTE PTR ds:0xaea7ac5e
  4017eb:	add    al,0xff
  4017ed:	jae    0x4017a1
  4017ef:	int    0xa1
  4017f1:	ins    DWORD PTR es:[edi],dx
  4017f2:	gs cmp edx,edx
  4017f5:	inc    ebp
  4017f6:	mov    eax,edi
  4017f8:	and    dh,ah
  4017fa:	mov    eax,ds:0x41f9e5dd
  4017ff:	neg    BYTE PTR [esi-0x1c]
  401802:	inc    edx
  401803:	mov    ecx,0x532c26a4
  401808:	inc    edi
  401809:	ds push edx
  40180b:	cmp    eax,DWORD PTR [ebx+0x3f]
  40180e:	out    dx,eax
  40180f:	add    dl,BYTE PTR [edx]
  401811:	ja     0x40182e
  401813:	sub    eax,DWORD PTR [ebp-0x70]
  401816:	cmp    ch,BYTE PTR [ebp-0x70bc8815]
  40181c:	xor    bl,BYTE PTR ds:0x744deb7b
  401822:	add    al,0xd8
  401824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401825:	add    DWORD PTR [esi-0x36],0x1f
  401829:	sbb    al,BYTE PTR [edx+0x2b9523cc]
  40182f:	in     al,dx
  401830:	xlat   BYTE PTR ds:[ebx]
  401831:	and    DWORD PTR [eax+0x549e0f34],0x64f56d4b
  40183b:	(bad)  
  40183c:	stc    
  40183d:	test   al,0xfd
  40183f:	pop    eax
  401840:	pop    ss
  401841:	cs sahf 
  401843:	jb     0x40180f
  401845:	sub    BYTE PTR [esi-0x52],ch
  401848:	mov    eax,0x5f7f841c
  40184d:	call   0xb2d7923a
  401852:	in     al,dx
  401853:	(bad)  
  401855:	pop    edi
  401856:	test   eax,0x8ee81b45
  40185b:	adc    edx,edi
  40185d:	jnp    0x401810
  40185f:	pop    ebx
  401860:	xlat   BYTE PTR ds:[ebx]
  401861:	mov    cl,0xdf
  401863:	pusha  
  401864:	int    0x88
  401866:	cwde   
  401867:	dec    esi
  401868:	mul    BYTE PTR [esi-0x7cc0da23]
  40186e:	ds lahf 
  401870:	sbb    al,0x9d
  401872:	daa    
  401873:	dec    edx
  401874:	pop    eax
  401875:	xor    DWORD PTR [esi+edi*1],esp
  401878:	pop    edx
  401879:	sub    DWORD PTR [ebx],edx
  40187b:	lahf   
  40187c:	jne    0x401820
  40187e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40187f:	cmp    DWORD PTR [ecx+esi*4],esi
  401882:	lahf   
  401883:	or     DWORD PTR ds:0xa4271c77,edx
  401889:	in     eax,dx
  40188a:	pop    esi
  40188b:	mov    ebp,0x8a96b196
  401890:	fisubr WORD PTR [edx-0x61]
  401893:	out    dx,eax
  401894:	js     0x4018c9
  401896:	aam    0xdb
  401898:	xor    ch,BYTE PTR [edi+0x23]
  40189b:	call   0x5b2b69cf
  4018a0:	clc    
  4018a1:	push   esi
  4018a2:	aas    
  4018a3:	jns    0x4018bf
  4018a5:	adc    al,0xf1
  4018a7:	sahf   
  4018a8:	xor    BYTE PTR [edx+0x61],dl
  4018ab:	rdtsc  
  4018ad:	cmp    eax,DWORD PTR [ebx+0x1a]
  4018b0:	(bad)  
  4018b1:	hlt    
  4018b2:	jns    0x4018e1
  4018b4:	inc    ecx
  4018b5:	sub    ch,ch
  4018b7:	add    DWORD PTR [edx+ebp*4-0x19bb6f59],ebx
  4018be:	jle    0x40187e
  4018c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018c1:	push   ebp
  4018c2:	mov    ds:0x1f27ce1a,al
  4018c7:	std    
  4018c8:	or     edx,DWORD PTR [esi]
  4018ca:	jnp    0x4018f8
  4018cc:	rcr    ecx,1
  4018ce:	xor    eax,0x94c9b8dd
  4018d3:	mov    BYTE PTR [edx],ah
  4018d5:	push   0x13
  4018d7:	lahf   
  4018d8:	cli    
  4018d9:	mov    eax,0x24552126
  4018de:	fldcw  WORD PTR [ebx+0x4e89e1b5]
  4018e4:	test   al,0xa8
  4018e6:	fadd   QWORD PTR [ebp-0x5f]
  4018e9:	je     0x401886
  4018eb:	push   cs
  4018ec:	push   edi
  4018ed:	mov    dl,0xc3
  4018ef:	scas   eax,DWORD PTR es:[edi]
  4018f0:	lock push eax
  4018f2:	dec    esp
  4018f3:	in     eax,dx
  4018f4:	repnz sub edx,DWORD PTR [ecx-0x62cb0227]
  4018fb:	dec    esi
  4018fc:	push   ebx
  4018fd:	(bad)  
  4018ff:	xor    al,0x55
  401901:	ins    BYTE PTR es:[edi],dx
  401902:	sub    eax,0x7b491436
  401907:	or     al,0x5e
  401909:	xchg   DWORD PTR ds:0x46ec9c5e,edi
  40190f:	fiadd  WORD PTR [eax+0x84c6492]
  401915:	mov    WORD PTR [edx+0x4c3a655b],ss
  40191b:	test   DWORD PTR [ebx],0x6ed041e5
  401921:	sub    cl,BYTE PTR [ecx]
  401923:	push   eax
  401924:	mov    ecx,DWORD PTR [edi-0x106d7ea8]
  40192a:	xor    eax,0x2deb987e
  40192f:	or     DWORD PTR [ebx],edx
  401931:	fiadd  WORD PTR [ecx]
  401933:	icebp  
  401934:	aad    0x40
  401936:	icebp  
  401937:	out    0x84,eax
  401939:	pop    ebp
  40193a:	les    ecx,FWORD PTR [ecx]
  40193c:	push   ds
  40193d:	mov    ds:0xffde4e49,eax
  401942:	sti    
  401943:	pushf  
  401944:	jge    0x40198e
  401946:	popf   
  401947:	jo     0x4018ff
  401949:	cs adc ebp,esp
  40194c:	xor    ecx,DWORD PTR [ebp+0x0]
  40194f:	pop    eax
  401950:	adc    al,0xa2
  401952:	mul    BYTE PTR [edx-0x1c]
  401955:	add    cl,BYTE PTR [ebx-0x47d229b]
  40195b:	jle    0x401957
  40195d:	xor    al,0xb6
  40195f:	enter  0x114c,0x51
  401963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401964:	sbb    BYTE PTR [ebp-0x74],0x1f
  401968:	adc    cl,BYTE PTR [esi-0x17]
  40196b:	mov    ecx,0x7ef9d9d3
  401970:	inc    edx
  401971:	inc    edi
  401972:	cld    
  401973:	popf   
  401974:	and    DWORD PTR [ecx],eax
  401976:	mov    ebx,0x641491ff
  40197b:	or     DWORD PTR [edx+0x68],edi
  40197e:	dec    esp
  40197f:	aaa    
  401980:	call   0x93108b7b
  401985:	(bad)  
  401986:	xchg   esi,eax
  401987:	pop    ds
  401988:	sbb    esp,DWORD PTR [edx-0x75]
  40198b:	inc    ecx
  40198c:	xchg   ebp,eax
  40198d:	ins    DWORD PTR es:[edi],dx
  40198e:	pop    eax
  40198f:	inc    edi
  401990:	jge    0x401934
  401992:	outs   dx,DWORD PTR ds:[esi]
  401993:	inc    esi
  401994:	inc    ebx
  401995:	cwde   
  401996:	sbb    ebp,eax
  401998:	jmp    0x3d1eccb4
  40199d:	cmp    edx,edx
  40199f:	pop    edi
  4019a0:	jb     0x4019c5
  4019a2:	repz jg 0x4019a6
  4019a5:	pop    edx
  4019a6:	loop   0x401965
  4019a8:	xor    al,0xc6
  4019aa:	or     eax,0xcb510c00
  4019af:	test   eax,0x34265888
  4019b4:	stc    
  4019b5:	or     edi,DWORD PTR [eax+eax*2-0xe]
  4019b9:	fwait
  4019ba:	xor    BYTE PTR [ebp+0x67c7b70c],0xc6
  4019c1:	stos   DWORD PTR es:[edi],eax
  4019c2:	add    eax,0x827374c0
  4019c7:	ja     0x401999
  4019c9:	out    dx,eax
  4019ca:	jecxz  0x401955
  4019cc:	std    
  4019cd:	(bad)  
  4019ce:	hlt    
  4019cf:	outs   dx,BYTE PTR ds:[esi]
  4019d0:	sbb    ebp,ecx
  4019d2:	xchg   ebx,eax
  4019d3:	rol    BYTE PTR [ebx-0x56],cl
  4019d6:	clc    
  4019d7:	dec    DWORD PTR [eax+ecx*4-0x60a1c002]
  4019de:	mov    ?,edi
  4019e0:	or     DWORD PTR [ecx+eiz*1-0x3bc6db6e],esp
  4019e7:	jl     0x401a48
  4019e9:	std    
  4019ea:	or     eax,0xafa137be
  4019ef:	or     ch,cl
  4019f1:	(bad)  
  4019f2:	cmp    esp,DWORD PTR [ebp-0x1a963a98]
  4019f8:	or     ch,BYTE PTR [eax+ecx*4+0x3f]
  4019fc:	mov    dh,0x79
  4019fe:	nop
  4019ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a00:	or     eax,0x2caa94b4
  401a05:	pop    ebp
  401a06:	inc    esi
  401a07:	stos   DWORD PTR es:[edi],eax
  401a08:	pop    ds
  401a09:	leave  
  401a0a:	and    DWORD PTR [edx+0x73e640ce],esp
  401a10:	fwait
  401a11:	retf   0x9a2d
  401a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a15:	outs   dx,BYTE PTR ds:[esi]
  401a16:	add    dl,BYTE PTR [edx+0x751d7a61]
  401a1c:	std    
  401a1d:	aas    
  401a1e:	pusha  
  401a1f:	add    bl,BYTE PTR [ecx]
  401a21:	add    esi,0xffffffb0
  401a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a25:	std    
  401a26:	mov    edi,0xbcd701dd
  401a2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a2c:	jp     0x401a3a
  401a2e:	mov    BYTE PTR [bx+0x167],bl
  401a33:	pop    ds
  401a34:	les    edi,FWORD PTR [eax+0x7c4286be]
  401a3a:	inc    ebx
  401a3b:	add    eax,0x3252ae1f
  401a40:	fdivr  DWORD PTR [eax]
  401a42:	sub    eax,0xa1de5cbc
  401a47:	jb     0x401a18
  401a49:	test   BYTE PTR [edi+0x6eabcad7],cl
  401a4f:	sbb    eax,0x4f665819
  401a54:	and    DWORD PTR [ecx+0x519248ad],esi
  401a5a:	fwait
  401a5b:	push   0xfe95868
  401a60:	dec    edx
  401a61:	sbb    al,0x52
  401a63:	stos   BYTE PTR es:[edi],al
  401a64:	adc    ecx,ebp
  401a66:	cmp    BYTE PTR [ebx-0x6b3ff4c6],ch
  401a6c:	xchg   edi,eax
  401a6d:	jmp    FWORD PTR [esp+ecx*8+0x74]
  401a71:	mov    esi,0xd51a8d9e
  401a76:	cdq    
  401a77:	(bad)  
  401a78:	jbe    0x401abe
  401a7a:	sub    BYTE PTR [eax],bh
  401a7c:	nop
  401a7d:	dec    edx
  401a7e:	aaa    
  401a7f:	retf   0x4080
  401a82:	mov    esi,0x50d98b0c
  401a87:	sahf   
  401a88:	adc    BYTE PTR [ecx-0x2d],0x67
  401a8c:	mov    WORD PTR es:[edi-0x2f2c52b3],ss
  401a93:	jnp    0x401a98
  401a95:	sub    al,0xd8
  401a97:	jne    0x401aaf
  401a99:	pop    es
  401a9a:	ret    
  401a9b:	les    eax,FWORD PTR [edi-0x259e53b4]
  401aa1:	imul   ebx,DWORD PTR [esi+0x7c],0x590dce01
  401aa8:	ror    ecx,0xb4
  401aab:	adc    edi,ebx
  401aad:	stos   DWORD PTR es:[edi],eax
  401aae:	js     0x401ac1
  401ab0:	leave  
  401ab1:	call   0xe7ab4d76
  401ab6:	push   0x22780305
  401abb:	int    0x48
  401abd:	or     BYTE PTR [edx],cl
  401abf:	pop    ebp
  401ac0:	lock mov al,ds:0xf5f35599
  401ac6:	adc    bl,cl
  401ac8:	(bad)  
  401ac9:	jae    0x401a64
  401acb:	mov    edi,0x20e295cc
  401ad0:	push   edi
  401ad1:	out    dx,al
  401ad2:	out    dx,eax
  401ad3:	xchg   DWORD PTR [ebp-0x644de283],esp
  401ad9:	nop
  401ada:	or     ch,cl
  401adc:	aas    
  401add:	jmp    0x401ae9
  401adf:	xor    bh,dh
  401ae1:	inc    edi
  401ae2:	inc    edx
  401ae3:	dec    ebx
  401ae4:	fidivr WORD PTR [eax+0x1a43b925]
  401aea:	imul   ebx,DWORD PTR [ebp-0x76],0x978d6712
  401af1:	cmp    al,0x67
  401af3:	cmp    al,dh
  401af5:	sub    BYTE PTR [edi],dh
  401af7:	aas    
  401af8:	and    BYTE PTR ds:0x8f23a412,0x4d
  401aff:	push   ebx
  401b00:	pusha  
  401b01:	dec    ebx
  401b02:	and    BYTE PTR [edx+0x77410677],dh
  401b08:	jae    0x401b6d
  401b0a:	mov    DWORD PTR [ebx],ebx
  401b0c:	arpl   WORD PTR [ecx-0x312b2c57],bx
  401b12:	mov    ebp,0x1a828c7f
  401b17:	xchg   esi,eax
  401b18:	xchg   edi,eax
  401b19:	mov    esp,0xb8e592d5
  401b1e:	sbb    edx,DWORD PTR [ebp+0x57]
  401b21:	sub    eax,0x3b3ed115
  401b26:	cmp    eax,0xdb9a95c7
  401b2b:	push   eax
  401b2c:	jle    0x401b6f
  401b2e:	xor    ch,dl
  401b30:	nop
  401b31:	retf   
  401b32:	inc    eax
  401b33:	pop    esp
  401b34:	shr    DWORD PTR [esi+eax*2-0xaea4a6d],cl
  401b3b:	repnz or al,0x83
  401b3e:	vaddps ymm5,ymm6,YMMWORD PTR ds:[edx+0xf21a363]
  401b47:	ins    BYTE PTR es:[edi],dx
  401b48:	mov    ebx,0xb24b16b5
  401b4d:	mov    al,0x3d
  401b4f:	arpl   si,dx
  401b51:	arpl   WORD PTR [ecx-0x65],di
  401b54:	pop    esi
  401b55:	mov    ds:0xd56b6739,al
  401b5a:	sahf   
  401b5b:	jl     0x401b64
  401b5d:	leave  
  401b5e:	ins    DWORD PTR es:[edi],dx
  401b5f:	pop    eax
  401b60:	adc    DWORD PTR [esi],0xffffffe2
  401b63:	addr16 ret 
  401b65:	jmp    0x8390:0xff362a9d
  401b6c:	daa    
  401b6d:	les    esp,FWORD PTR [esi-0x43]
  401b70:	jno    0x401bbb
  401b72:	call   0xbdae:0xa3825a8a
  401b79:	ss lahf 
  401b7b:	out    0xb,eax
  401b7d:	mov    esi,0xb187fd98
  401b82:	hlt    
  401b83:	in     al,0x9d
  401b85:	or     eax,0xa57bfc1a
  401b8a:	xchg   edi,eax
  401b8b:	jg     0x401b3a
  401b8d:	or     DWORD PTR [edx+0x30c33e2],ebp
  401b93:	lea    edi,[edi+0x33]
  401b96:	dec    eax
  401b97:	outs   dx,BYTE PTR ds:[esi]
  401b98:	mov    al,ds:0x2391cf69
  401b9d:	or     bh,BYTE PTR [esi+0x7e611a97]
  401ba3:	mov    ds:0x2660208,al
  401ba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ba9:	cmp    bh,BYTE PTR [eax]
  401bab:	sti    
  401bac:	cmp    eax,0x13eee9b7
  401bb1:	out    dx,eax
  401bb2:	jo     0x401bfe
  401bb4:	cmp    eax,0x87079c10
  401bb9:	mov    ds:0xc648d7e0,al
  401bbe:	cdq    
  401bbf:	pusha  
  401bc0:	pop    ebp
  401bc1:	dec    ecx
  401bc2:	sub    eax,0xfaf539da
  401bc7:	int    0xef
  401bc9:	push   ds
  401bca:	xchg   esi,eax
  401bcb:	or     ebp,DWORD PTR [edx+edx*4+0x2f]
  401bcf:	push   0x37
  401bd1:	sbb    al,0x55
  401bd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bd4:	fprem  
  401bd6:	loope  0x401bcf
  401bd8:	movhps xmm6,QWORD PTR [ebp+0x6f]
  401bdc:	mov    eax,ds:0xf79b247b
  401be1:	adc    DWORD PTR [ebx],eax
  401be3:	inc    ebp
  401be4:	inc    edi
  401be5:	stos   BYTE PTR es:[edi],al
  401be6:	cmp    edi,esp
  401be8:	jns    0x401c48
  401bea:	(bad)  
  401beb:	out    dx,al
  401bec:	loope  0x401b71
  401bee:	push   0xb0571f1e
  401bf3:	adc    eax,0xf75a8e5e
  401bf8:	xor    DWORD PTR [edx+0x1a55464d],esp
  401bfe:	mov    dl,0xff
  401c00:	jge    0x401c00
  401c02:	out    0xa1,eax
  401c04:	mov    cl,0x3a
  401c06:	push   es
  401c07:	push   edx
  401c08:	inc    eax
  401c09:	mov    esi,0x90979c2f
  401c0e:	aaa    
  401c0f:	jo     0x401b9c
  401c11:	mov    eax,0x538e91fa
  401c16:	inc    ecx
  401c17:	add    BYTE PTR [ecx-0x35684506],dh
  401c1d:	jp     0x401c40
  401c1f:	jl     0x401bf6
  401c21:	push   eax
  401c22:	cmp    BYTE PTR [ebx+edx*8+0xb],bh
  401c26:	inc    ebp
  401c27:	retf   0x796d
  401c2a:	lods   al,BYTE PTR ds:[esi]
  401c2b:	fwait
  401c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c2d:	int3   
  401c2e:	ins    BYTE PTR es:[edi],dx
  401c2f:	lea    ecx,[ecx-0x68]
  401c32:	sbb    BYTE PTR [esi+0x52140d94],ah
  401c38:	(bad)  
  401c39:	dec    eax
  401c3a:	mov    edx,0x92cc3598
  401c3f:	fisub  DWORD PTR [ebp-0x3a]
  401c42:	dec    edi
  401c43:	or     al,0x36
  401c45:	xchg   edx,eax
  401c46:	and    BYTE PTR [edx],al
  401c48:	loope  0x401bcc
  401c4a:	fistp  WORD PTR [edx+0x477faa8]
  401c50:	jl     0x401ccf
  401c52:	jns    0x401c92
  401c54:	xchg   esp,eax
  401c55:	test   al,0x5f
  401c57:	push   esp
  401c58:	sub    dl,BYTE PTR [edx+ebp*8-0x1f52134b]
  401c5f:	push   ss
  401c60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c61:	sub    esp,eax
  401c63:	push   ebx
  401c64:	outs   dx,DWORD PTR ds:[esi]
  401c65:	stc    
  401c66:	lods   al,BYTE PTR ds:[esi]
  401c67:	mov    esi,0xeb297734
  401c6c:	mov    ds:0x99a88079,eax
  401c71:	mov    ds:0x89c7221d,eax
  401c76:	hlt    
  401c77:	outs   dx,DWORD PTR ds:[esi]
  401c78:	ins    BYTE PTR es:[edi],dx
  401c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c7a:	add    eax,0x113ac1a3
  401c7f:	sbb    BYTE PTR [edi-0x46],ch
  401c82:	sub    esi,edx
  401c84:	add    DWORD PTR [ecx],esp
  401c86:	mov    eax,0x4d547b5e
  401c8b:	xchg   ebx,eax
  401c8c:	stc    
  401c8d:	adc    al,0x5b
  401c8f:	push   ecx
  401c90:	in     al,0x7
  401c92:	(bad)  
  401c93:	pop    eax
  401c94:	in     eax,dx
  401c95:	adc    al,0x98
  401c97:	pop    ecx
  401c98:	or     DWORD PTR [eax],ebp
  401c9a:	(bad)  
  401c9c:	add    bh,BYTE PTR [ecx+0x6c]
  401c9f:	rol    BYTE PTR [edx-0x56c879f6],1
  401ca5:	stos   BYTE PTR es:[edi],al
  401ca6:	daa    
  401ca7:	xor    eax,0x36fdab65
  401cac:	mov    ebp,0x30eccc30
  401cb1:	xor    al,0x39
  401cb4:	js     0x401d32
  401cb6:	out    0x63,al
  401cb8:	push   ss
  401cb9:	ret    
  401cba:	mov    WORD PTR [esi+esi*1],ds
  401cbd:	push   0x4c7d2eeb
  401cc2:	mov    ch,0x17
  401cc4:	(bad)  
  401cc5:	sbb    ebx,DWORD PTR [esi]
  401cc7:	retf   0x4a3b
  401cca:	sbb    BYTE PTR [eax-0x20],dh
  401ccd:	inc    ebx
  401cce:	idiv   DWORD PTR ds:0x3f2a
  401cd3:	imul   edx,DWORD PTR ds:0xf3225b39,0xffffffee
  401cda:	neg    BYTE PTR [esi+0x4c1266f2]
  401ce0:	js     0x401cf5
  401ce2:	(bad)  
  401ce3:	fmul   QWORD PTR [edx]
  401ce5:	sbb    BYTE PTR [edi],al
  401ce7:	int    0x32
  401ce9:	in     al,dx
  401cea:	jns    0x401c9c
  401cec:	or     al,0xd1
  401cee:	xchg   ecx,eax
  401cef:	and    al,0x72
  401cf1:	out    dx,al
  401cf2:	sbb    esp,DWORD PTR [ebp+eiz*1-0x72]
  401cf6:	outs   dx,BYTE PTR ds:[esi]
  401cf7:	push   es
  401cf8:	in     eax,dx
  401cf9:	sub    DWORD PTR [ebx-0x74],ebx
  401cfc:	adc    esi,DWORD PTR [ecx]
  401cfe:	xlat   BYTE PTR ds:[ebx]
  401cff:	test   DWORD PTR [ebp+0x1dfe94c9],0x398033b
  401d09:	push   ebp
  401d0a:	push   esi
  401d0b:	in     al,dx
  401d0c:	or     bl,ah
  401d0e:	stc    
  401d0f:	loopne 0x401d80
  401d11:	push   cs
  401d12:	mov    cl,0x94
  401d14:	jb     0x401cf6
  401d16:	in     eax,dx
  401d17:	test   BYTE PTR [eax-0x53354048],al
  401d1d:	mov    bl,0xe8
  401d1f:	add    esp,esi
  401d21:	jae    0x401cd9
  401d23:	xchg   ecx,eax
  401d24:	dec    ebx
  401d25:	jmp    0xe6a3:0x52df3898
  401d2c:	clc    
  401d2d:	mov    gs,WORD PTR [ebp+0x61]
  401d30:	cmp    ecx,DWORD PTR [edx-0x65]
  401d33:	pushf  
  401d34:	mov    dl,0xcd
  401d36:	sub    dl,BYTE PTR [ebx]
  401d38:	pop    esi
  401d39:	pop    edx
  401d3a:	test   DWORD PTR ds:0xd4eecfcd,esi
  401d40:	data16 outs dx,BYTE PTR ds:[esi]
  401d42:	inc    ebp
  401d43:	push   ebp
  401d44:	les    ecx,FWORD PTR [ebp-0x60]
  401d47:	imul   DWORD PTR [ecx+0x1fb3b1a4]
  401d4d:	cmp    bl,BYTE PTR [ebx-0x48f6ad5f]
  401d53:	sbb    eax,eax
  401d55:	cwde   
  401d56:	add    eax,0xd0e3a9f8
  401d5b:	or     DWORD PTR [ebx],esp
  401d5d:	mov    BYTE PTR [ebx],dl
  401d5f:	mov    dh,ch
  401d61:	mov    bh,0x60
  401d64:	cmp    al,0x42
  401d66:	mov    DWORD PTR [esi-0x798c6426],edx
  401d6c:	test   eax,0xc1d2b255
  401d71:	add    al,0xad
  401d73:	add    cl,BYTE PTR [ebx]
  401d75:	jnp    0x401de5
  401d77:	xor    BYTE PTR [esi+eiz*2-0x3c489db2],cl
  401d7e:	icebp  
  401d7f:	retf   
  401d80:	aaa    
  401d81:	xor    DWORD PTR [ebx+0x49],edi
  401d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d85:	pop    esp
  401d86:	mov    ebp,0x27d34110
  401d8b:	cmp    ch,ch
  401d8d:	or     bl,BYTE PTR ds:0x4dd7e3c2
  401d93:	mov    edi,0xbc2f4d6
  401d98:	ds pop eax
  401d9a:	fwait
  401d9b:	adc    dh,BYTE PTR [esi+0x4bc77312]
  401da1:	jmp    0x401ddc
  401da3:	outs   dx,BYTE PTR ds:[esi]
  401da4:	mov    edx,edx
  401da6:	mov    cs,WORD PTR [ebp+0x3545116f]
  401dac:	pushf  
  401dad:	cmp    ah,BYTE PTR [ebp-0x52]
  401db0:	dec    ebp
  401db1:	(bad)  
  401db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401db3:	loop   0x401db2
  401db5:	clc    
  401db6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401db7:	out    0x6d,eax
  401db9:	in     al,0x59
  401dbb:	xor    esp,ebp
  401dbd:	(bad)  
  401dbe:	call   0xa1a52d18
  401dc3:	jnp    0x401d58
  401dc5:	xchg   ebp,eax
  401dc6:	push   eax
  401dc7:	loopne 0x401d4b
  401dc9:	jge    0x401e20
  401dcb:	cmp    al,0x7b
  401dcd:	sbb    al,0xe2
  401dcf:	scas   al,BYTE PTR es:[edi]
  401dd0:	adc    al,0x6f
  401dd2:	iret   
  401dd3:	lods   al,BYTE PTR ds:[esi]
  401dd4:	cdq    
  401dd5:	cmp    eax,0xa2ef3abc
  401dda:	aad    0xb3
  401ddc:	mov    bh,0xe
  401dde:	or     eax,0xb77d629e
  401de3:	push   esp
  401de4:	idiv   edx
  401de6:	xchg   ch,al
  401de8:	sbb    al,0x51
  401dea:	mov    gs,WORD PTR ds:0x160762de
  401df0:	call   0xe5bafa55
  401df5:	ror    eax,1
  401df7:	lds    ebx,FWORD PTR [edi]
  401df9:	imul   ebp,ebx,0x8d7f3e4
  401dff:	cli    
  401e00:	push   ebx
  401e01:	scas   eax,DWORD PTR es:[edi]
  401e02:	push   es
  401e03:	xchg   ebx,eax
  401e04:	in     al,0x88
  401e06:	pop    es
  401e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e08:	mov    edi,0xef1aee65
  401e0d:	cdq    
  401e0e:	sbb    edi,DWORD PTR [ecx]
  401e10:	addps  xmm6,xmm1
  401e13:	stos   DWORD PTR es:[edi],eax
  401e14:	and    dh,BYTE PTR [edi+esi*4-0x3d]
  401e18:	stos   DWORD PTR es:[edi],eax
  401e19:	je     0x401e83
  401e1b:	cmp    dh,0xcd
  401e1e:	lods   al,BYTE PTR ds:[esi]
  401e1f:	pop    es
  401e20:	test   DWORD PTR [ebx],ecx
  401e22:	xor    al,0x1c
  401e24:	and    al,BYTE PTR [edx-0x23c5ef67]
  401e2a:	sub    edi,DWORD PTR [eax]
  401e2c:	sub    eax,0x44e7b022
  401e31:	dec    edi
  401e32:	cs jne 0x401e1f
  401e35:	mov    ch,0xc7
  401e37:	cwde   
  401e38:	stos   DWORD PTR es:[edi],eax
  401e39:	lock pop ebx
  401e3b:	mov    al,al
  401e3d:	xor    ecx,DWORD PTR [edi-0x67e1bcc0]
  401e43:	or     DWORD PTR [ebx-0x45061187],esp
  401e49:	fdivr  QWORD PTR [edx]
  401e4b:	sub    DWORD PTR [esi+0x6bbab473],ebp
  401e51:	lods   eax,DWORD PTR ds:[esi]
  401e52:	pop    esi
  401e53:	sub    al,0xd1
  401e55:	jae    0x401e44
  401e57:	push   ecx
  401e58:	imul   ebp,ebp,0x3fa61a6e
  401e5e:	xchg   DWORD PTR [esi+ebp*8],edi
  401e61:	xor    esi,edi
  401e63:	xor    dl,BYTE PTR [eax]
  401e65:	xlat   BYTE PTR ds:[ebx]
  401e66:	xchg   ebx,eax
  401e67:	or     eax,0xd06998ae
  401e6c:	jne    0x401e8e
  401e6e:	aas    
  401e6f:	adc    bh,0x9c
  401e72:	sub    DWORD PTR [edx],eax
  401e74:	test   al,0xe2
  401e76:	xlat   BYTE PTR ds:[ebx]
  401e77:	jmp    0x2d9c:0xb823d7f0
  401e7e:	jnp    0x401ea5
  401e80:	jp     0x401e6a
  401e82:	jae    0x401efb
  401e84:	shl    BYTE PTR [ebx+0x2f646ea0],1
  401e8a:	imul   ecx,DWORD PTR [ebx+0x1a445674],0xcac5da8c
  401e94:	adc    ebx,edi
  401e96:	(bad)  
  401e97:	mov    dl,0x1a
  401e99:	push   eax
  401e9a:	xor    ebx,esi
  401e9c:	push   edx
  401e9d:	sbb    dl,BYTE PTR [edx+eiz*4+0xc4cd939]
  401ea4:	leave  
  401ea5:	(bad)  
  401ea6:	and    bl,BYTE PTR [ecx]
  401ea8:	in     al,dx
  401ea9:	dec    ecx
  401eaa:	jne    0x401e3d
  401eac:	cmp    al,0x4d
  401eae:	jae    0x401f1e
  401eb0:	aam    0xd8
  401eb2:	test   BYTE PTR [edi+0x6d367ee5],dh
  401eb8:	mov    edi,0x44fe75a5
  401ebd:	nop
  401ebe:	das    
  401ebf:	lea    eax,[edx+edi*1-0x718a8bc0]
  401ec6:	es adc ebx,eax
  401ec9:	or     BYTE PTR es:[ecx-0x200c6ee4],bh
  401ed0:	outs   dx,BYTE PTR ds:[esi]
  401ed1:	retf   
  401ed2:	sbb    eax,0xb8bdd7c3
  401ed7:	push   ecx
  401ed8:	adc    eax,0x41917a70
  401edd:	popf   
  401ede:	sbb    BYTE PTR [edi+0x7bf7818],al
  401ee4:	jae    0x401f12
  401ee6:	bound  edx,QWORD PTR [ecx+0x16]
  401ee9:	mul    BYTE PTR [ecx]
  401eeb:	pushw  ss
  401eed:	sbb    bh,cl
  401eef:	mov    DWORD PTR [eax+0x21],ebp
  401ef2:	sbb    eax,0xe543129a
  401ef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ef8:	sahf   
  401ef9:	ret    0x2cdc
  401efc:	cli    
  401efd:	inc    edi
  401efe:	pop    ss
  401eff:	popa   
  401f00:	ss es cmp al,bh
  401f04:	sub    DWORD PTR [ebp+0x31],edi
  401f07:	out    0xf6,al
  401f09:	scas   al,BYTE PTR es:[edi]
  401f0a:	and    edx,ebp
  401f0c:	in     al,0x2a
  401f0e:	scas   al,BYTE PTR es:[edi]
  401f0f:	hlt    
  401f10:	mov    ecx,DWORD PTR [esp+eiz*2-0x7a]
  401f14:	mov    dl,0x58
  401f16:	cs jnp 0x401e9d
  401f19:	shl    eax,cl
  401f1b:	mov    eax,ss:0x20e3c000
  401f21:	mov    ch,0xc6
  401f23:	xchg   DWORD PTR [eax-0x76e66fa6],ebp
  401f29:	jb     0x401ed8
  401f2b:	and    eax,DWORD PTR [ecx]
  401f2d:	cmp    ebp,edi
  401f2f:	mov    eax,0xfba3948
  401f34:	jae    0x401f76
  401f36:	jp     0x401ef0
  401f38:	arpl   bx,di
  401f3a:	mov    esi,0xee8a7327
  401f3f:	popf   
  401f40:	stos   BYTE PTR es:[edi],al
  401f41:	fild   WORD PTR [esi+0x3c7457bd]
  401f47:	adc    bl,BYTE PTR [ebp+0x51]
  401f4a:	shl    dl,1
  401f4c:	xor    esi,edi
  401f4e:	scas   al,BYTE PTR es:[edi]
  401f4f:	xchg   ebx,esp
  401f51:	test   al,0xc1
  401f53:	mov    bh,0xa7
  401f55:	sub    eax,0xf297706a
  401f5a:	lods   al,BYTE PTR ds:[esi]
  401f5b:	lods   al,BYTE PTR ds:[esi]
  401f5c:	push   ebp
  401f5d:	lock or al,0x35
  401f60:	push   ebp
  401f61:	xchg   BYTE PTR [ebp+0x45faaeba],dl
  401f67:	pop    eax
  401f68:	shl    BYTE PTR [ecx],cl
  401f6a:	(bad)  
  401f6c:	inc    eax
  401f6d:	lods   al,BYTE PTR ds:[esi]
  401f6e:	dec    edi
  401f6f:	xlat   BYTE PTR ds:[ebx]
  401f70:	adc    ebp,DWORD PTR [ecx]
  401f72:	je     0x401f05
  401f74:	inc    esp
  401f75:	mov    ebx,0xf0a98f4c
  401f7a:	push   0x29
  401f7c:	hlt    
  401f7d:	xlat   BYTE PTR ds:[ebx]
  401f7e:	add    al,0x72
  401f80:	sbb    dl,BYTE PTR [esi+0x5b]
  401f83:	xchg   ebp,eax
  401f84:	lahf   
  401f85:	xlat   BYTE PTR ds:[ebx]
  401f86:	and    DWORD PTR ds:0x1c87d7c,ebx
  401f8c:	and    DWORD PTR [edx],edx
  401f8e:	inc    esp
  401f8f:	and    esi,DWORD PTR [ecx-0x9]
  401f92:	mov    al,ds:0xe5c182af
  401f97:	push   edi
  401f98:	mov    eax,ds:0xf098c1fb
  401f9d:	mov    ebx,edi
  401f9f:	mov    ecx,0x1ab99523
  401fa4:	aam    0x3d
  401fa6:	mov    bl,0x2d
  401fa8:	nop
  401fa9:	pop    ecx
  401faa:	jno    0x401fea
  401fac:	xor    ah,ch
  401fae:	sub    eax,0x4bf9a6f6
  401fb3:	sbb    BYTE PTR [ebx+0x281682a7],dh
  401fb9:	sub    ebx,DWORD PTR [edx]
  401fbb:	add    BYTE PTR [eax+edi*1+0x11],ah
  401fbf:	sub    BYTE PTR es:[esi+0x19],bh
  401fc3:	mov    fs,WORD PTR [ebp-0x4]
  401fc6:	adc    al,0x76
  401fc8:	sub    bh,BYTE PTR [edx+ebp*1]
  401fcb:	mov    esi,0xf8339083
  401fd0:	aas    
  401fd1:	pop    esi
  401fd2:	repz mov bh,0x79
  401fd5:	sub    ch,BYTE PTR [ebp+eax*1+0x6fd8e2ee]
  401fdc:	xchg   ecx,eax
  401fdd:	rol    BYTE PTR [eax+0x73],cl
  401fe0:	das    
  401fe1:	mov    eax,0xfc4a6376
  401fe6:	stc    
  401fe7:	push   esi
  401fe8:	dec    eax
  401fe9:	xchg   esp,eax
  401fea:	sub    al,0x29
  401fec:	out    0xc7,eax
  401fee:	xor    BYTE PTR [ecx+0x7d87c869],dh
  401ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ff5:	das    
  401ff6:	xor    al,0x71
  401ff8:	add    ebp,esp
  401ffa:	mov    al,BYTE PTR [ebp+eiz*8+0x23]
  401ffe:	shr    DWORD PTR ds:0x9f26c527,1
  402004:	rcl    DWORD PTR [ecx+esi*8+0x9],1
  402008:	adc    al,0x4e
  40200a:	aad    0xd3
  40200c:	mov    ds:0x5f1bcb74,eax
  402011:	(bad)
  402014:	cmp    al,0x3b
  402016:	add    DWORD PTR [edi],0x58254bb5
  40201c:	shl    BYTE PTR [edx],1
  40201e:	es pop eax
  402020:	add    eax,0x678abbe0
  402025:	adc    DWORD PTR [ebx],ecx
  402027:	mov    bh,0x67
  402029:	aaa    
  40202a:	mov    ebp,edx
  40202c:	aam    0x15
  40202e:	in     al,dx
  40202f:	sub    BYTE PTR [esi+0x364ea259],0x3f
  402036:	jg     0x402059
  402038:	jbe    0x402042
  40203a:	inc    ebp
  40203b:	xchg   edi,eax
  40203c:	icebp  
  40203d:	push   ecx
  40203e:	jl     0x401fd2
  402040:	mov    esi,0x2f2aa36e
  402045:	lods   eax,DWORD PTR ds:[esi]
  402046:	ins    BYTE PTR es:[edi],dx
  402047:	push   eax
  402048:	xchg   ecx,eax
  402049:	mov    edx,0x3439b745
  40204e:	sbb    al,0xde
  402050:	pop    edi
  402051:	dec    BYTE PTR [esi-0x22843f40]
  402057:	rcr    cl,0xb7
  40205a:	xchg   DWORD PTR [eax],eax
  40205c:	sbb    eax,edi
  40205e:	arpl   WORD PTR [ecx],dx
  402060:	adc    ch,BYTE PTR [ecx-0x436b782a]
  402066:	jp     0x4020ae
  402068:	push   0x35
  40206a:	push   eax
  40206b:	sbb    DWORD PTR [eax+0x33],edi
  40206e:	mov    ds:0xebd5fe59,eax
  402073:	sbb    al,0x19
  402075:	leave  
  402076:	dec    ebp
  402077:	mov    WORD PTR [edi+eax*4],fs
  40207a:	(bad)  
  40207b:	pop    ebx
  40207c:	xchg   ebp,eax
  40207d:	lods   al,BYTE PTR ds:[esi]
  40207e:	adc    DWORD PTR [ecx],edx
  402080:	jb     0x4020eb
  402082:	pop    edi
  402083:	sbb    al,0x1f
  402085:	jecxz  0x4020e4
  402087:	sub    eax,0x5d6f2cd1
  40208c:	mov    ah,0x13
  40208e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40208f:	arpl   WORD PTR [esi-0x69],sp
  402092:	xor    esi,ebx
  402094:	adc    DWORD PTR [esi],eax
  402096:	mov    BYTE PTR [edi-0x2c726d90],al
  40209c:	dec    ecx
  40209d:	sbb    DWORD PTR [esi+0x485648c9],ebp
  4020a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020a4:	inc    ebx
  4020a5:	inc    edx
  4020a6:	xlat   BYTE PTR ds:[ebx]
  4020a7:	push   es
  4020a8:	data16 (bad) 
  4020aa:	idiv   BYTE PTR [edi]
  4020ac:	loopne 0x4020bc
  4020ae:	dec    edi
  4020af:	mov    ebp,0x9d489561
  4020b4:	pop    eax
  4020b5:	js     0x402123
  4020b7:	std    
  4020b8:	aad    0x6c
  4020ba:	pop    esi
  4020bb:	stos   DWORD PTR es:[edi],eax
  4020bc:	jmp    0x1b96:0x6239f9c8
  4020c3:	pop    eax
  4020c4:	mov    dl,0xf8
  4020c6:	ins    DWORD PTR es:[edi],dx
  4020c7:	or     eax,0x25965029
  4020cc:	push   eax
  4020cd:	jb     0x4020c9
  4020cf:	das    
  4020d0:	and    ebx,DWORD PTR [esi+0x6dc25b2d]
  4020d6:	loop   0x402156
  4020d8:	out    dx,eax
  4020d9:	inc    ecx
  4020da:	jl     0x4020e3
  4020dc:	and    ebp,eax
  4020de:	inc    ebx
  4020df:	adc    BYTE PTR [edx],bl
  4020e1:	xchg   ecx,eax
  4020e2:	adc    dh,BYTE PTR [edx+0x32]
  4020e5:	jno    0x402166
  4020e7:	cmp    BYTE PTR [ebx-0x1624c9e5],al
  4020ed:	into   
  4020ee:	arpl   di,si
  4020f0:	adc    dl,BYTE PTR [ebx-0x24]
  4020f3:	adc    bl,cl
  4020f5:	ror    DWORD PTR [esp+edx*4],0xe2
  4020f9:	jbe    0x40207f
  4020fb:	lods   al,BYTE PTR ds:[esi]
  4020fc:	scas   eax,DWORD PTR es:[edi]
  4020fd:	or     BYTE PTR [ecx],0xda
  402100:	ret    0x7b1
  402103:	adc    al,0xed
  402105:	inc    ebx
  402106:	dec    ecx
  402107:	ds add edx,0x45
  40210b:	mov    ecx,0xedce6505
  402110:	inc    edx
  402111:	pusha  
  402112:	mov    ebp,0xbe9f570a
  402117:	fs pusha 
  402119:	jne    0x402135
  40211b:	js     0x40214d
  40211d:	shl    ecx,cl
  40211f:	lods   eax,DWORD PTR ds:[esi]
  402120:	or     BYTE PTR [ecx-0x54],ah
  402123:	fisttp WORD PTR [esi+0x43]
  402126:	das    
  402127:	loopne 0x40211a
  402129:	jb     0x4020d6
  40212b:	or     DWORD PTR [ecx+edi*1+0x9982416],ecx
  402132:	jb     0x4020fd
  402134:	popf   
  402135:	jle    0x402192
  402137:	stc    
  402138:	xor    eax,0x10737150
  40213d:	(bad)  
  40213e:	cmp    dl,BYTE PTR cs:[ecx+0x3a]
  402142:	cdq    
  402143:	xor    eax,0x8f00d06c
  402148:	or     al,BYTE PTR [ecx+0x5970412b]
  40214e:	sub    eax,0x42faa393
  402153:	mov    cl,0xf6
  402155:	(bad)  
  402156:	and    eax,DWORD PTR [edx]
  402158:	push   ss
  402159:	adc    esi,DWORD PTR [ecx+0x9]
  40215c:	and    BYTE PTR [edi-0x46],ch
  40215f:	fdiv   QWORD PTR [edi-0x31]
  402162:	pushf  
  402163:	in     al,0x1e
  402165:	sahf   
  402166:	clc    
  402167:	stc    
  402168:	fmul   st,st(5)
  40216a:	xchg   edx,eax
  40216b:	loop   0x402122
  40216d:	pop    ss
  40216e:	pop    es
  40216f:	mov    esp,0x5a598235
  402174:	pusha  
  402175:	imul   eax,DWORD PTR [esi],0xffffff88
  402178:	push   0xbdcea3a7
  40217d:	mov    ah,0xf5
  40217f:	xchg   esp,eax
  402180:	pop    ds
  402181:	out    dx,eax
  402182:	xchg   DWORD PTR [edi],ebx
  402184:	jae    0x4021a8
  402186:	cmp    eax,0xfaf241e5
  40218b:	mov    eax,ds:0x8c0172c2
  402190:	(bad)  
  402191:	fcom   QWORD PTR [ebp+0x32519fa5]
  402197:	lahf   
  402198:	stos   BYTE PTR es:[edi],al
  402199:	jbe    0x40213d
  40219b:	enter  0x7a22,0x23
  40219f:	sbb    dh,BYTE PTR [ecx+0x5bd3908e]
  4021a5:	test   cl,ah
  4021a7:	dec    edi
  4021a8:	(bad)  
  4021a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021aa:	mov    bh,0x4b
  4021ac:	cmp    eax,0xd4b94b5c
  4021b1:	(bad)  
  4021b2:	jo     0x40215d
  4021b4:	lods   al,BYTE PTR ds:[esi]
  4021b5:	das    
  4021b6:	xor    bl,bh
  4021b8:	xor    eax,0xa53af1b8
  4021bd:	stos   BYTE PTR es:[edi],al
  4021be:	jbe    0x4021d3
  4021c0:	repnz out 0x0,al
  4021c3:	daa    
  4021c4:	aad    0x8
  4021c6:	jnp    0x402228
  4021c8:	jne    0x402163
  4021ca:	inc    edx
  4021cb:	inc    eax
  4021cc:	push   ds
  4021cd:	mov    ch,0x66
  4021cf:	cli    
  4021d0:	pusha  
  4021d1:	xlat   BYTE PTR ds:[ebx]
  4021d2:	lods   eax,DWORD PTR ds:[esi]
  4021d3:	dec    ecx
  4021d4:	mov    al,BYTE PTR [edi+0x28]
  4021d7:	ja     0x40224a
  4021d9:	sub    ah,BYTE PTR [edx+0x31]
  4021dc:	fldcw  WORD PTR [edi]
  4021de:	(bad)  
  4021df:	jl     0x402238
  4021e1:	or     al,0x6c
  4021e3:	leave  
  4021e4:	pop    es
  4021e5:	aam    0x7a
  4021e7:	lods   eax,DWORD PTR ds:[esi]
  4021e8:	shr    DWORD PTR [ecx+ecx*2],1
  4021eb:	mov    BYTE PTR [eax-0x5e],ah
  4021ee:	and    eax,0xf3aaa7d3
  4021f3:	cmp    al,0xfa
  4021f5:	bound  esp,QWORD PTR [ebp-0x68e91192]
  4021fb:	adc    BYTE PTR [ebx-0x7336dd4c],bl
  402201:	in     al,0x23
  402203:	loop   0x4021fd
  402205:	mov    BYTE PTR [ecx-0x42],cl
  402208:	sub    edi,DWORD PTR [edi-0xb]
  40220b:	dec    ebx
  40220c:	mov    DWORD PTR [ebx-0x5b],ecx
  40220f:	ins    BYTE PTR es:[edi],dx
  402210:	arpl   dx,sp
  402212:	lahf   
  402213:	leave  
  402214:	mov    bl,0xc7
  402216:	inc    edx
  402217:	aad    0x60
  402219:	(bad)  
  40221a:	popf   
  40221b:	or     al,0xa
  40221d:	adc    al,0x67
  40221f:	add    BYTE PTR [esi],bh
  402221:	retf   0x332
  402224:	lock push eax
  402226:	pop    ds
  402227:	adc    ecx,DWORD PTR [ebx+0x3590b018]
  40222d:	js     0x402286
  40222f:	aas    
  402230:	mov    edi,0x4a27a65
  402235:	and    esi,edx
  402237:	or     al,BYTE PTR [eax+ecx*4-0x35]
  40223b:	mov    ah,0x86
  40223d:	or     al,0xf6
  40223f:	fwait
  402240:	aam    0xc4
  402242:	inc    ebp
  402243:	cmp    DWORD PTR [eax],ecx
  402245:	outs   dx,BYTE PTR ds:[esi]
  402246:	adc    BYTE PTR [eax],0x1
  402249:	ds jae 0x402249
  40224c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40224d:	aas    
  40224e:	int3   
  40224f:	jge    0x40229b
  402251:	xor    cl,BYTE PTR [ebp+eax*4-0x6e]
  402255:	push   ecx
  402256:	dec    edi
  402257:	mov    bl,0xae
  402259:	mov    al,ds:0x66e7f7ac
  40225e:	js     0x402281
  402260:	mov    bl,0x91
  402262:	sti    
  402263:	mov    esp,DWORD PTR [edi]
  402265:	add    al,BYTE PTR [ecx+0x73]
  402268:	mov    dh,0xb0
  40226a:	xchg   DWORD PTR [esi],ebp
  40226c:	ffree  st(7)
  40226e:	inc    esp
  40226f:	push   esi
  402270:	mov    edx,0xeb8a84d2
  402275:	mov    ebx,0xc931595c
  40227a:	pop    ebx
  40227b:	loopne 0x40221f
  40227d:	ret    0xc2bb
  402280:	inc    edx
  402281:	clc    
  402282:	and    eax,0xefc1bbe2
  402287:	xchg   ebp,eax
  402288:	bound  ebx,QWORD PTR [edi+0x62]
  40228b:	int    0x8d
  40228d:	jno    0x40228e
  40228f:	(bad)  
  402290:	lahf   
  402291:	sbb    al,0x89
  402293:	push   ds
  402294:	cmp    BYTE PTR [ebx],al
  402296:	mov    eax,0x9d015689
  40229b:	popa   
  40229c:	loope  0x402265
  40229e:	pop    ebx
  40229f:	std    
  4022a0:	xor    BYTE PTR [edx],al
  4022a2:	mov    ecx,0xf00b3f0c
  4022a7:	push   es
  4022a8:	jecxz  0x4022d3
  4022aa:	bound  esi,QWORD PTR [esi+0x44d21248]
  4022b0:	out    dx,eax
  4022b1:	mov    edi,0xc116c8df
  4022b6:	lea    edx,[esi]
  4022b8:	adc    cl,BYTE PTR [ebx-0x7b]
  4022bb:	xor    DWORD PTR [ecx+0x2bbf0e04],esi
  4022c1:	lds    ebx,FWORD PTR [esi-0x31e6fc51]
  4022c7:	pop    esi
  4022c8:	jno    0x402257
  4022ca:	cdq    
  4022cb:	xchg   ebx,eax
  4022cc:	xor    eax,0xc3a41011
  4022d1:	add    al,0xae
  4022d3:	pop    ebp
  4022d4:	dec    ecx
  4022d5:	jmp    0xe5b5:0x508bfd2c
  4022dc:	push   cs
  4022dd:	mov    edx,esi
  4022df:	mov    ah,0xfc
  4022e1:	fimul  DWORD PTR [edi]
  4022e3:	out    0x35,al
  4022e5:	sti    
  4022e6:	or     dl,bl
  4022e8:	or     DWORD PTR [ecx-0x26],edi
  4022eb:	outs   dx,DWORD PTR ds:[esi]
  4022ec:	in     eax,0x84
  4022ee:	(bad)
  4022f1:	or     bh,BYTE PTR [esi]
  4022f3:	test   eax,0xeb63c9a1
  4022f8:	mov    ebx,0xaacbaad4
  4022fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022fe:	and    al,0x8d
  402300:	fisubr DWORD PTR [ebp+0x23]
  402303:	jle    0x402375
  402305:	add    BYTE PTR [edx+0x3f],ah
  402308:	mov    al,BYTE PTR [edx-0x3b]
  40230b:	test   al,0x95
  40230d:	ds mov dh,0xfe
  402310:	adc    BYTE PTR [edx],al
  402312:	cs stos DWORD PTR es:[edi],eax
  402314:	adc    cl,cl
  402316:	pop    es
  402317:	lods   al,BYTE PTR ds:[esi]
  402318:	cmp    ecx,DWORD PTR [ebx-0x3bcdfc90]
  40231e:	loop   0x40230e
  402320:	enter  0xd4d7,0x15
  402324:	(bad)  
  402325:	cmp    al,ah
  402327:	out    0x7e,al
  402329:	mov    bl,BYTE PTR [ebp-0x2a]
  40232c:	sbb    eax,0xaa5d6785
  402331:	lahf   
  402332:	(bad)  
  402333:	sbb    edx,DWORD PTR [esi]
  402335:	dec    eax
  402336:	test   DWORD PTR [edi+eiz*4-0x62],ebx
  40233a:	jno    0x4023b6
  40233c:	xor    edi,DWORD PTR [eax-0x392a2895]
  402342:	xor    eax,0x81a89088
  402347:	out    dx,eax
  402348:	scas   eax,DWORD PTR es:[edi]
  402349:	lahf   
  40234a:	gs add al,0xc1
  40234d:	rcl    ch,cl
  40234f:	add    bl,BYTE PTR [eax]
  402351:	shl    edi,0x20
  402354:	dec    edi
  402355:	pop    ebp
  402356:	sbb    eax,0xee217184
  40235b:	(bad)  
  40235c:	sub    esi,eax
  40235e:	aaa    
  40235f:	int    0x2f
  402361:	frstor [edi-0x147f4ac7]
  402367:	cmp    DWORD PTR [ebx-0x54b03b40],ebp
  40236d:	dec    esi
  40236e:	(bad)  
  40236f:	pop    esi
  402370:	out    dx,eax
  402371:	push   esi
  402372:	push   eax
  402373:	fst    DWORD PTR [edi]
  402375:	mov    dh,0x79
  402377:	push   ebp
  402378:	and    eax,0x51af489c
  40237d:	adc    ah,BYTE PTR [eax+0x4d]
  402380:	jecxz  0x402324
  402382:	js     0x4023aa
  402384:	aad    0x4c
  402386:	lods   al,BYTE PTR ds:[esi]
  402387:	int    0x78
  402389:	sahf   
  40238a:	lock or BYTE PTR [ebp-0x75d496de],dh
  402391:	fistp  QWORD PTR [ecx-0x5dc848f0]
  402397:	mov    ecx,DWORD PTR [ecx]
  402399:	xor    al,0xc8
  40239b:	stos   DWORD PTR es:[edi],eax
  40239c:	repnz pop ds
  40239e:	mov    ah,bl
  4023a0:	ja     0x4023f8
  4023a2:	ret    0xf5ed
  4023a5:	pop    es
  4023a6:	mov    ds:0x920a0d3c,al
  4023ab:	pop    ebx
  4023ac:	fadd   DWORD PTR [eax+0x3b]
  4023af:	inc    eax
  4023b0:	pop    ecx
  4023b1:	inc    edi
  4023b2:	and    ah,ah
  4023b4:	xchg   edi,eax
  4023b5:	cmp    BYTE PTR [ebx],al
  4023b7:	imul   ebp,DWORD PTR [ebp-0x39f06258],0xffffffbc
  4023be:	pop    edi
  4023bf:	mov    WORD PTR [edi+0x6],gs
  4023c2:	(bad)  
  4023c3:	retf   0xfed4
  4023c6:	data16 mov bl,0xf0
  4023c9:	mov    dh,0xdd
  4023cb:	cdq    
  4023cc:	out    0xef,eax
  4023ce:	fldenv [esi]
  4023d0:	fcomp  QWORD PTR [ebx+0x151f87cf]
  4023d6:	jle    0x402401
  4023d8:	dec    ebp
  4023d9:	or     esi,ebx
  4023db:	cmp    eax,0x8c9dcc57
  4023e0:	and    eax,0x8a2eeaf7
  4023e5:	mov    cs,WORD PTR [ebx]
  4023e7:	push   es
  4023e8:	mov    eax,0x9af9a687
  4023ed:	stos   DWORD PTR es:[edi],eax
  4023ee:	nop
  4023ef:	dec    ebx
  4023f0:	jge    0x40243e
  4023f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023f3:	jb     0x40240a
  4023f5:	dec    eax
  4023f6:	push   ebp
  4023f7:	cmp    esp,ebx
  4023f9:	cmp    al,0x8d
  4023fb:	adc    DWORD PTR [eax+0x2c9030d8],0xffffffda
  402402:	mov    ebp,0xfc7e04b7
  402407:	cwde   
  402408:	ins    BYTE PTR es:[edi],dx
  402409:	pushf  
  40240a:	ja     0x4023f5
  40240c:	mov    ds:0xee91d250,al
  402411:	fistp  QWORD PTR ds:0xc4da6122
  402417:	mov    ecx,0x78b93abf
  40241c:	cmp    eax,0xb1e551bb
  402421:	daa    
  402422:	xchg   edx,eax
  402423:	xor    al,0x63
  402425:	jae    0x4023b8
  402427:	xchg   esi,eax
  402428:	cli    
  402429:	xchg   edi,eax
  40242a:	push   esi
  40242b:	jbe    0x402439
  40242d:	leave  
  40242e:	rcl    DWORD PTR [ebp+0x7e],1
  402431:	ins    DWORD PTR es:[edi],dx
  402432:	cwde   
  402433:	mov    ds:0xce2c33e,eax
  402438:	add    eax,0xe92340f
  40243d:	(bad)  
  40243e:	inc    edi
  402440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402441:	lds    esi,FWORD PTR [edx]
  402443:	jmp    0x9814361
  402448:	in     eax,dx
  402449:	sbb    eax,0xffffffc7
  40244c:	scas   eax,DWORD PTR es:[edi]
  40244d:	fisub  WORD PTR [ecx+edi*1-0x8]
  402451:	lods   eax,DWORD PTR ds:[esi]
  402452:	stc    
  402453:	sub    BYTE PTR [edi+edx*2-0x64],dl
  402457:	mov    DWORD PTR [ebp+edx*1-0x5d],ecx
  40245b:	cmp    bl,bh
  40245d:	xchg   edi,eax
  40245e:	mov    esi,0x47283a30
  402463:	scas   al,BYTE PTR es:[edi]
  402464:	xchg   ebx,eax
  402465:	test   al,0xc5
  402467:	pop    esp
  402468:	mov    cl,0x10
  40246a:	xor    al,0x8b
  40246c:	add    BYTE PTR [ecx+0x27d5efc8],dl
  402472:	xchg   BYTE PTR [edi],bh
  402474:	in     al,0x3b
  402476:	dec    ebp
  402477:	shr    DWORD PTR [ebx+0x3a],1
  40247a:	xor    esp,DWORD PTR [eax]
  40247c:	xor    esp,DWORD PTR [ebp+0xb7bb4ca]
  402482:	fwait
  402483:	sbb    eax,DWORD PTR [edi+0xcdd56aa]
  402489:	add    ebx,DWORD PTR [eax-0x54]
  40248c:	add    al,0x69
  40248e:	pop    ebp
  40248f:	jnp    0x4024db
  402491:	test   eax,0x8bac125f
  402496:	push   eax
  402497:	in     eax,0x20
  402499:	call   0x93340ddd
  40249e:	xor    eax,0xb8b5a7b0
  4024a3:	out    0xc1,al
  4024a5:	dec    eax
  4024a6:	clc    
  4024a7:	leave  
  4024a8:	push   eax
  4024a9:	aam    0xda
  4024ab:	push   ebp
  4024ac:	div    BYTE PTR [ecx+0x70b2064]
  4024b2:	lea    edx,[eax+0x3a]
  4024b5:	jle    0x402487
  4024b7:	pop    ebp
  4024b8:	rol    bl,1
  4024ba:	adc    eax,0x94969d9c
  4024bf:	in     al,dx
  4024c0:	sti    
  4024c1:	inc    esp
  4024c2:	cmp    ebx,eax
  4024c4:	rcr    dl,1
  4024c6:	dec    eax
  4024c7:	nop
  4024c8:	push   ds
  4024c9:	mov    bh,al
  4024cb:	dec    ebx
  4024cc:	push   es
  4024cd:	call   0xf769:0x52e45041
  4024d4:	pop    ds
  4024d5:	div    DWORD PTR [edx-0x72544c8d]
  4024db:	sbb    al,0x7c
  4024dd:	push   0x3334147b
  4024e2:	loop   0x402503
  4024e4:	int3   
  4024e5:	adc    al,0x80
  4024e7:	inc    eax
  4024e8:	loop   0x402534
  4024ea:	pop    esi
  4024eb:	imul   DWORD PTR [ebx]
  4024ed:	mov    esp,0x1c04b1d5
  4024f2:	retf   0x332
  4024f5:	(bad)  
  4024f6:	pop    ss
  4024f7:	in     al,0x57
  4024f9:	push   ebp
  4024fa:	sub    eax,edx
  4024fc:	pop    esi
  4024fd:	leave  
  4024fe:	sbb    DWORD PTR [ebp-0x14],ebx
  402501:	mov    eax,0x701fbe98
  402506:	lock sub BYTE PTR [ebx+0x41],ch
  40250a:	xor    BYTE PTR [edi],dh
  40250c:	pop    esp
  40250d:	inc    eax
  40250e:	stc    
  40250f:	mov    DWORD PTR [edx],edx
  402511:	in     eax,0x67
  402513:	mov    WORD PTR [ebx],fs
  402515:	(bad)
  402518:	(bad)  
  402519:	fimul  WORD PTR [eax-0x8]
  40251c:	retf   
  40251d:	xchg   ecx,eax
  40251e:	or     al,BYTE PTR [ebx+0x492ecf65]
  402524:	or     dl,bl
  402526:	repz out 0xf9,eax
  402529:	fisttp QWORD PTR [ebp+ebp*1+0x42]
  40252d:	cmp    bl,BYTE PTR [esi+0x40b76d31]
  402533:	sub    DWORD PTR [edx],ebx
  402535:	ja     0x4024c2
  402537:	adc    BYTE PTR [esi],al
  402539:	call   0x16d6:0x35e4ddc8
  402540:	ja     0x4024f0
  402542:	mov    edi,0xcb7582a5
  402547:	xchg   DWORD PTR [ebp+0x2],ebx
  40254a:	push   ebp
  40254b:	lods   eax,DWORD PTR ds:[esi]
  40254c:	mov    al,ds:0x82750b1e
  402551:	stos   BYTE PTR es:[edi],al
  402552:	mov    ch,0x85
  402554:	fs pop ds
  402556:	jmp    0x402504
  402558:	push   ecx
  402559:	outs   dx,DWORD PTR ds:[esi]
  40255a:	lds    ebx,FWORD PTR [edi-0x80]
  40255d:	in     al,dx
  40255e:	sbb    eax,0xdf05760a
  402563:	shr    DWORD PTR [esi+0x4d],1
  402566:	outs   dx,DWORD PTR ds:[esi]
  402567:	daa    
  402568:	pushf  
  402569:	cmp    eax,0xea13a824
  40256e:	add    bh,BYTE PTR ds:0xc0240a69
  402574:	xchg   esi,eax
  402575:	imul   eax,DWORD PTR [ebx],0xbaaec437
  40257b:	out    dx,eax
  40257c:	mov    ah,BYTE PTR [edx+edi*4]
  40257f:	or     BYTE PTR [eax+ebx*4],cl
  402582:	lods   al,BYTE PTR ds:[esi]
  402583:	ret    0xf752
  402586:	(bad)  
  402587:	fcom   DWORD PTR [ebp+0x170f7f42]
  40258d:	xchg   DWORD PTR gs:[edi-0x44112b7f],ebx
  402594:	cmp    al,0x30
  402596:	or     DWORD PTR [ecx],ebx
  402598:	outs   dx,BYTE PTR ds:[esi]
  402599:	mov    ds:0x164ff75b,al
  40259e:	xchg   edx,eax
  40259f:	fdivr  QWORD PTR [edi+0x6463b5d3]
  4025a5:	mov    esp,0x5b5759a
  4025aa:	pop    es
  4025ab:	push   eax
  4025ac:	xchg   esp,eax
  4025ad:	pop    esp
  4025ae:	xchg   ebx,eax
  4025af:	stos   BYTE PTR es:[edi],al
  4025b0:	pop    edi
  4025b1:	pusha  
  4025b2:	fucomip st,st(6)
  4025b4:	push   esp
  4025b5:	stos   DWORD PTR es:[edi],eax
  4025b6:	xchg   edi,eax
  4025b7:	fadd   QWORD PTR [ecx]
  4025b9:	xchg   esp,eax
  4025ba:	dec    edi
  4025bb:	in     al,0xda
  4025bd:	mov    ebx,0xe3dec938
  4025c2:	pop    ebx
  4025c3:	cli    
  4025c4:	icebp  
  4025c5:	sub    DWORD PTR [eax],eax
  4025c7:	xlat   BYTE PTR ds:[ebx]
  4025c8:	popf   
  4025c9:	mov    edx,0x28ab5a80
  4025ce:	call   0x215:0xaac3c3c0
  4025d5:	push   cs
  4025d6:	shr    DWORD PTR [ecx-0x46],cl
  4025d9:	add    ch,BYTE PTR [ebx+0x1507d048]
  4025df:	mov    ecx,0x288420d
  4025e4:	pop    ecx
  4025e5:	sbb    eax,0xc53c46e2
  4025ea:	add    DWORD PTR [ecx+0x22],ecx
  4025ed:	push   ebx
  4025ee:	push   0x3f01ceca
  4025f3:	jp     0x4025cf
  4025f5:	xor    ebx,DWORD PTR ds:0x7680211
  4025fb:	sub    DWORD PTR [esi],edx
  4025fd:	aam    0x1f
  4025ff:	xor    al,cl
  402601:	js     0x40264b
  402603:	xor    DWORD PTR [ebp+0x134150e2],ebx
  402609:	outs   dx,DWORD PTR ds:[esi]
  40260a:	push   ds
  40260b:	jae    0x4025bb
  40260d:	and    BYTE PTR [ecx-0x5f],ch
  402610:	mov    edx,0x497f152f
  402615:	push   eax
  402616:	mov    WORD PTR [edx+0x6],?
  402619:	push   es
  40261a:	adc    eax,0xdd3592ec
  40261f:	enter  0x768f,0xf9
  402623:	les    eax,FWORD PTR [ebx-0x70749a0c]
  402629:	mov    ecx,0xb80a0f5d
  40262e:	jp     0x4025f3
  402630:	retf   0x33a1
  402633:	call   0x10cc:0x7ac8e548
  40263a:	mov    esp,0xa7bc290a
  40263f:	adc    eax,0x9c785cef
  402644:	xchg   ebp,eax
  402645:	out    dx,al
  402646:	pop    edi
  402647:	xchg   BYTE PTR [ebx-0x30e0c777],al
  40264d:	icebp  
  40264e:	iret   
  40264f:	or     eax,0x8811675e
  402654:	pop    es
  402655:	imul   esi,DWORD PTR [edx-0x13fbc7a6],0x313eab7f
  40265f:	xchg   WORD PTR [ebx+0x5f],cx
  402663:	call   0xdd287dfa
  402668:	(bad)  
  402669:	aas    
  40266a:	mov    BYTE PTR [edi+0x4d],ah
  40266d:	(bad)  
  40266e:	mov    edi,0xcc9daba
  402673:	push   esp
  402674:	stos   BYTE PTR es:[edi],al
  402675:	xor    ecx,DWORD PTR [ebx+0x5ac1ad41]
  40267b:	nop
  40267c:	dec    edi
  40267d:	jmp    0x40268c
  40267f:	cmp    bl,BYTE PTR fs:[edx+ecx*4]
  402683:	dec    edi
  402684:	xchg   esp,eax
  402685:	in     eax,0x4a
  402687:	jbe    0x402658
  402689:	mov    dl,0x88
  40268b:	push   ss
  40268c:	addr16 add edi,esi
  40268f:	push   edx
  402690:	arpl   WORD PTR [edx-0x37],bp
  402693:	pop    esi
  402694:	dec    edx
  402695:	dec    ecx
  402696:	jnp    0x4026ef
  402698:	arpl   WORD PTR [edi+0x5121e604],si
  40269e:	loope  0x4026d6
  4026a0:	push   ds
  4026a1:	aad    0xc
  4026a3:	imul   DWORD PTR [eax+0x58]
  4026a6:	js     0x4026b0
  4026a8:	int    0x10
  4026aa:	and    bh,BYTE PTR [edi+0x2d0b6082]
  4026b0:	sub    edi,edx
  4026b2:	pop    ecx
  4026b3:	aam    0xf
  4026b5:	add    cl,BYTE PTR [ebx-0x77571b89]
  4026bb:	push   esi
  4026bc:	lock ffreep st(6)
  4026bf:	xchg   esp,eax
  4026c0:	and    DWORD PTR [edi],esi
  4026c2:	sub    bl,bl
  4026c4:	std    
  4026c5:	adc    ecx,ebp
  4026c7:	fs push ebx
  4026c9:	xchg   esp,eax
  4026ca:	inc    eax
  4026cb:	ds cmp al,0x74
  4026ce:	fst    QWORD PTR [esi]
  4026d0:	jne    0x40270c
  4026d2:	or     al,0x7
  4026d4:	mov    ss,WORD PTR [edx+0x2c]
  4026d7:	fcmovnb st,st(3)
  4026d9:	adc    eax,0x57b8caf7
  4026de:	push   0x76fd6410
  4026e3:	retf   0x15a4
  4026e6:	mov    ch,0xfb
  4026e8:	mov    al,bl
  4026ea:	or     DWORD PTR [ebx],ebp
  4026ec:	idiv   BYTE PTR [esi]
  4026ee:	xor    ch,ch
  4026f0:	jns    0x40275b
  4026f2:	std    
  4026f3:	cmp    BYTE PTR [ebp-0x3e],dh
  4026f6:	push   ebx
  4026f7:	push   es
  4026f8:	je     0x4026d1
  4026fa:	mov    esi,0x718d97f0
  4026ff:	adc    ebp,DWORD PTR [esi-0x29]
  402702:	pop    ds
  402703:	cld    
  402704:	jecxz  0x402732
  402706:	mov    esp,0xfd165942
  40270b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40270c:	mov    BYTE PTR [edi],bh
  40270e:	pop    ss
  40270f:	inc    edi
  402710:	gs clc 
  402712:	(bad)  [ecx+0x37]
  402715:	and    DWORD PTR [ebp+0x6a],esi
  402718:	pop    edx
  402719:	pop    ebp
  40271a:	push   eax
  40271b:	cdq    
  40271c:	call   0x2768:0x44ae
  402722:	xchg   DWORD PTR [ebp-0x51e45939],esp
  402728:	nop
  402729:	adc    DWORD PTR [ebx],ebx
  40272b:	int    0x3f
  40272d:	mul    DWORD PTR [eax]
  40272f:	iret   
  402730:	outs   dx,DWORD PTR ds:[esi]
  402731:	int3   
  402732:	add    al,0xb5
  402734:	push   esi
  402735:	inc    esp
  402736:	sub    al,0x4d
  402738:	inc    esi
  402739:	stc    
  40273a:	mov    ?,ebx
  40273c:	data16 and al,0x25
  40273f:	cs iret 
  402741:	adc    esp,DWORD PTR [ebp-0x72]
  402744:	adc    BYTE PTR [esp+eax*8],ah
  402747:	dec    eax
  402748:	test   BYTE PTR [esi],bl
  40274a:	mov    cl,BYTE PTR [ebx+eiz*4]
  40274d:	enter  0x5aa5,0x0
  402751:	popf   
  402752:	or     dh,ch
  402754:	scas   al,BYTE PTR es:[edi]
  402755:	mov    DWORD PTR [ecx],esi
  402757:	cmp    bh,BYTE PTR [esp+ecx*8-0x1c2f6635]
  40275e:	out    dx,al
  40275f:	clc    
  402760:	std    
  402761:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  402763:	push   0xd5265970
  402768:	out    dx,al
  402769:	pop    ebp
  40276a:	sub    al,0x93
  40276c:	adc    eax,esp
  40276e:	arpl   dx,di
  402770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402771:	outs   dx,BYTE PTR ds:[esi]
  402772:	xor    ebx,DWORD PTR [esi]
  402774:	or     edi,DWORD PTR [edx]
  402776:	inc    edx
  402777:	fsub   QWORD PTR cs:[esp+eax*2-0x2]
  40277c:	hlt    
  40277d:	leave  
  40277e:	pushf  
  40277f:	dec    edx
  402780:	add    eax,0xaf28b1a2
  402785:	or     dl,BYTE PTR [edi-0x1efda3fd]
  40278b:	xchg   bl,dl
  40278d:	fld    QWORD PTR [eax-0x287ae127]
  402793:	sbb    al,0x35
  402795:	sbb    eax,0xd12c28be
  40279a:	icebp  
  40279b:	imul   edi,ebp,0x7f5b6f16
  4027a1:	mov    dl,cl
  4027a3:	leave  
  4027a4:	iret   
  4027a5:	pop    esp
  4027a6:	xchg   esp,eax
  4027a7:	call   0x7afb1e57
  4027ac:	adc    ah,BYTE PTR [ebp-0x45c681a6]
  4027b2:	lahf   
  4027b3:	jp     0x4027db
  4027b5:	jb     0x4027dc
  4027b7:	pop    esi
  4027b8:	cmp    ebp,DWORD PTR [edi+edi*4]
  4027bb:	repz lds ebp,FWORD PTR [edi-0x72]
  4027bf:	xchg   ebx,eax
  4027c0:	jmp    0x4027d5
  4027c2:	adc    edi,ecx
  4027c4:	cmp    eax,0x1cbdb776
  4027c9:	xlat   BYTE PTR ds:[ebx]
  4027ca:	xcrypt-ecb (bad)
  4027cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027cc:	iret   
  4027cd:	loop   0x40278f
  4027cf:	cli    
  4027d0:	add    al,0x7
  4027d2:	cld    
  4027d3:	cmp    ebx,eax
  4027d5:	mov    ch,0xc3
  4027d7:	mov    esi,0x3d36dcf6
  4027dc:	xlat   BYTE PTR ds:[ebx]
  4027dd:	shl    BYTE PTR [edi-0x4],1
  4027e0:	xor    eax,esi
  4027e2:	aas    
  4027e3:	mov    al,ds:0xec1a9a57
  4027e8:	adc    BYTE PTR [edi],ch
  4027ea:	inc    esp
  4027eb:	in     eax,dx
  4027ec:	stos   BYTE PTR es:[edi],al
  4027ed:	repnz inc esp
  4027ef:	mov    DWORD PTR [edi-0x1f],edx
  4027f2:	out    0x83,al
  4027f4:	int3   
  4027f5:	and    al,0x32
  4027f7:	inc    eax
  4027f8:	fcom   QWORD PTR [edx+0x4637db51]
  4027fe:	sbb    ebp,ecx
  402800:	bound  edx,QWORD PTR [ecx+ecx*4-0x21]
  402804:	dec    ecx
  402805:	fisubr WORD PTR [eax]
  402807:	js     0x402842
  402809:	call   0x6451:0xf6feabc
  402810:	fiadd  WORD PTR [ebx+0x75]
  402813:	xchg   esp,eax
  402814:	(bad)  
  402815:	fisubr DWORD PTR [esi+ebx*1]
  402818:	jp     0x4027be
  40281a:	sbb    edi,0x64
  40281d:	or     ecx,DWORD PTR [esi]
  40281f:	cmp    eax,0xda1003c5
  402824:	cmp    al,BYTE PTR [eax]
  402826:	mov    ds:0x7509ce00,al
  40282b:	mov    dh,0xb4
  40282d:	aaa    
  40282e:	inc    ecx
  40282f:	push   0xffffffe8
  402831:	fcom   QWORD PTR [esi+0x11]
  402834:	xchg   ebp,eax
  402835:	mov    edx,0x33bfaadf
  40283a:	xor    ax,WORD PTR [eax-0x4bb246d]
  402841:	in     eax,0xe6
  402843:	cdq    
  402844:	xchg   BYTE PTR [ebx+esi*1+0x12],ah
  402848:	out    0x10,al
  40284a:	inc    esi
  40284b:	mov    al,ds:0x84c7ecd4
  402850:	adc    BYTE PTR [edx-0x63],ah
  402853:	jle    0x40289e
  402855:	fwait
  402856:	and    eax,0x28174b43
  40285b:	das    
  40285c:	cmp    esi,DWORD PTR [eax]
  40285e:	pop    ecx
  40285f:	dec    esp
  402860:	das    
  402861:	fsub   DWORD PTR ss:[ebx+ebx*8-0x18]
  402866:	xchg   esp,eax
  402867:	dec    ebp
  402868:	cmp    eax,DWORD PTR [ebx-0x7c]
  40286b:	(bad)  
  40286c:	dec    ebx
  40286d:	xchg   ebp,eax
  40286e:	adc    al,0x0
  402870:	in     eax,dx
  402871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402872:	call   0x9df566f5
  402877:	pop    es
  402878:	out    0xec,eax
  40287a:	jns    0x4028bd
  40287c:	aad    0xc2
  40287e:	add    BYTE PTR [esi+eiz*1+0x3a],ch
  402882:	repnz cmp DWORD PTR [edi+0x32],esi
  402886:	pop    ebx
  402887:	mov    ds:0x937b3e96,al
  40288c:	sub    DWORD PTR [esi-0x58],ecx
  40288f:	and    DWORD PTR [esi+eax*4],ebx
  402892:	mov    cl,0xbb
  402894:	(bad)  
  402895:	icebp  
  402896:	in     al,0x24
  402898:	pop    eax
  402899:	adc    BYTE PTR [ecx],ch
  40289b:	pusha  
  40289c:	loope  0x402872
  40289e:	jns    0x40284b
  4028a0:	loopne 0x4028b3
  4028a2:	cmp    bh,BYTE PTR [edx-0x61]
  4028a5:	es dec esi
  4028a7:	xchg   esi,eax
  4028a8:	je     0x4028cb
  4028aa:	sahf   
  4028ab:	ins    BYTE PTR es:[edi],dx
  4028ac:	and    eax,0xd25edbe2
  4028b1:	mov    DWORD PTR [edx-0x40],edi
  4028b4:	and    al,BYTE PTR [edx+0x22ac8115]
  4028ba:	xchg   dh,bh
  4028bc:	repz pop esi
  4028be:	dec    ecx
  4028bf:	xor    eax,0x46a51931
  4028c4:	dec    ebp
  4028c5:	jmp    0x547ab60f
  4028ca:	or     BYTE PTR [edx-0x59425a74],0xa
  4028d1:	in     al,0x34
  4028d3:	xor    eax,0xd4184d88
  4028d8:	mov    esi,0xf84f37f1
  4028dd:	sbb    al,0x47
  4028df:	mov    edi,0x75f576e1
  4028e4:	inc    edi
  4028e5:	inc    esp
  4028e6:	(bad)  
  4028e7:	mov    edx,0xfa68ee1d
  4028ec:	outs   dx,DWORD PTR cs:[esi]
  4028ee:	cwde   
  4028ef:	clc    
  4028f0:	in     eax,0xac
  4028f2:	add    BYTE PTR [eax],0xfc
  4028f5:	jo     0x402897
  4028f7:	je     0x4028fb
  4028f9:	mov    DWORD PTR [edx-0x2e53a83d],esp
  4028ff:	ret    0x4368
  402902:	fstp   QWORD PTR ds:0xc4cdca0a
  402908:	cmp    ah,cl
  40290a:	fcmovnu st,st(7)
  40290c:	adc    bh,al
  40290e:	(bad)  
  40290f:	push   edi
  402910:	jo     0x40297d
  402912:	xchg   edi,eax
  402913:	test   BYTE PTR [esi+0x7f],ch
  402916:	hlt    
  402917:	push   esi
  402918:	mov    dh,0x7e
  40291a:	jnp    0x4028f7
  40291c:	cmp    bh,BYTE PTR [edx-0x4f]
  40291f:	(bad)  
  402920:	(bad)  
  402921:	fnstsw WORD PTR [ebx]
  402923:	(bad)  
  402924:	fcmove st,st(6)
  402926:	(bad)  
  402927:	stos   BYTE PTR es:[edi],al
  402928:	adc    al,0x7b
  40292a:	shl    dl,cl
  40292c:	pop    ebx
  40292d:	or     BYTE PTR [ecx],dh
  40292f:	out    dx,al
  402930:	add    BYTE PTR [esi-0x43],0xcb
  402934:	rol    DWORD PTR [esi+0x6d],cl
  402937:	lods   eax,DWORD PTR ds:[esi]
  402938:	mov    dl,0x3e
  40293a:	jle    0x40298a
  40293c:	and    ch,BYTE PTR [edx]
  40293e:	mov    ah,0xde
  402940:	(bad)  
  402941:	xor    esp,ecx
  402943:	stc    
  402944:	mov    esi,0xf4734a44
  402949:	cmp    DWORD PTR [edi+eax*4+0x21],0x34
  40294e:	sub    cl,ah
  402950:	mov    al,ds:0xd791820
  402955:	test   BYTE PTR cs:[ebx],cl
  402958:	cmp    DWORD PTR [ebp-0x3f],ebx
  40295b:	add    ah,0xf0
  40295e:	shl    ecx,0xf8
  402961:	je     0x4029a2
  402963:	push   0x5c83c1ce
  402968:	int    0x4a
  40296a:	xor    DWORD PTR [ecx+0x7df111f3],ebx
  402970:	popf   
  402971:	dec    edi
  402972:	ja     0x40297b
  402974:	pop    esi
  402975:	sti    
  402976:	in     al,0xe1
  402978:	xchg   edi,eax
  402979:	fwait
  40297a:	xchg   edi,eax
  40297b:	pop    ebp
  40297c:	xchg   esp,eax
  40297d:	shl    esp,1
  40297f:	js     0x402984
  402981:	dec    edx
  402982:	dec    ebp
  402983:	xchg   ebx,eax
  402984:	xchg   DWORD PTR [ebx+0x7c5bb020],eax
  40298a:	jo     0x4029d8
  40298c:	pop    ds
  40298d:	div    BYTE PTR [esi]
  40298f:	(bad)  
  402990:	pop    ebx
  402991:	imul   esi,DWORD PTR [eax-0x2c],0xffffffe8
  402995:	adc    bh,ah
  402997:	(bad)  
  402998:	rol    DWORD PTR [edx+0x45acb11e],0xac
  40299f:	inc    ebx
  4029a0:	int    0xab
  4029a2:	mov    ah,0x90
  4029a4:	loope  0x4029a1
  4029a6:	sub    al,0x2
  4029a8:	jmp    0x558b19e2
  4029ad:	pushf  
  4029ae:	jecxz  0x402988
  4029b0:	inc    edx
  4029b1:	icebp  
  4029b2:	push   ebp
  4029b3:	cwde   
  4029b4:	mov    edx,0xfe82e4ac
  4029b9:	mov    eax,0x9ea484b5
  4029be:	pop    ebx
  4029bf:	xchg   edi,eax
  4029c0:	rcr    esi,1
  4029c2:	scas   al,BYTE PTR es:[edi]
  4029c3:	jmp    0x4166:0xc6166683
  4029ca:	sub    eax,0x686068f9
  4029cf:	sub    eax,DWORD PTR [esi+0x25]
  4029d2:	inc    edx
  4029d3:	out    dx,eax
  4029d4:	les    ebx,FWORD PTR [esi]
  4029d6:	xor    al,al
  4029d8:	out    dx,al
  4029d9:	sbb    BYTE PTR [esp+ebx*8+0x7d9cb1e3],cl
  4029e0:	pushf  
  4029e1:	jo     0x40296c
  4029e3:	jnp    0x40297f
  4029e5:	(bad)  
  4029e6:	sub    eax,0xd4ce28d7
  4029eb:	adc    BYTE PTR [ebx+0x3db89654],0xe0
  4029f2:	cmp    dl,BYTE PTR [edi]
  4029f4:	adc    esi,ecx
  4029f6:	lahf   
  4029f7:	sti    
  4029f8:	xchg   ebx,eax
  4029f9:	jg     0x402a2c
  4029fb:	sub    BYTE PTR [ecx-0x59682b52],dl
  402a01:	push   es
  402a02:	sbb    eax,0x743ffbf2
  402a07:	xor    al,0x7d
  402a09:	aas    
  402a0a:	lods   al,BYTE PTR ds:[esi]
  402a0b:	mov    esp,0xed8e4898
  402a10:	push   0x67
  402a12:	addr16 ss aas 
  402a15:	or     al,0x83
  402a17:	push   ebx
  402a18:	arpl   WORD PTR [edi+0x2b25bb0f],ax
  402a1e:	mov    dh,BYTE PTR [edx+0x7eb3d812]
  402a24:	jg     0x402a57
  402a26:	and    BYTE PTR [ecx],dl
  402a28:	ja     0x402a08
  402a2a:	bound  edx,QWORD PTR [ecx]
  402a2c:	loop   0x402aa7
  402a2e:	pop    es
  402a2f:	xor    dh,ch
  402a31:	sar    dh,1
  402a33:	cmp    DWORD PTR [eax],edi
  402a35:	aaa    
  402a36:	jnp    0x4029ff
  402a38:	mov    edx,0x2c7c2d1d
  402a3d:	stos   BYTE PTR es:[edi],al
  402a3e:	in     eax,dx
  402a3f:	pop    eax
  402a40:	(bad)  
  402a41:	sub    dl,BYTE PTR [esi+0x3d]
  402a44:	sti    
  402a45:	pop    ecx
  402a46:	jp     0x402a04
  402a48:	sbb    eax,ebp
  402a4a:	cmp    bl,ah
  402a4c:	pop    esp
  402a4d:	test   BYTE PTR [edx+0x44],0x1d
  402a51:	push   0x29126e67
  402a56:	jmp    0x9ad3a222
  402a5b:	scas   al,BYTE PTR es:[edi]
  402a5c:	sti    
  402a5d:	add    al,0xa2
  402a5f:	mov    ebp,0xba76539a
  402a64:	inc    esi
  402a65:	fwait
  402a66:	jge    0x402adf
  402a68:	xlat   BYTE PTR ds:[ebx]
  402a69:	test   al,0xd7
  402a6b:	sub    eax,0x9068e5f7
  402a70:	mov    cl,0xd
  402a72:	lahf   
  402a73:	jo     0x402aad
  402a75:	xchg   ebx,eax
  402a76:	(bad)  
  402a77:	pop    ecx
  402a78:	lea    edx,ds:0x5298b161
  402a7e:	dec    ebx
  402a7f:	hlt    
  402a80:	scas   eax,DWORD PTR es:[edi]
  402a81:	jecxz  0x402ab5
  402a83:	scas   al,BYTE PTR es:[edi]
  402a84:	fwait
  402a85:	cmp    ah,BYTE PTR [ebx+0x352d8456]
  402a8b:	ss sbb eax,edx
  402a8e:	ss push edx
  402a90:	call   0x9236cfe
  402a95:	jg     0x402a88
  402a97:	mov    bl,0x35
  402a99:	dec    esi
  402a9a:	stos   DWORD PTR es:[edi],eax
  402a9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a9c:	shl    DWORD PTR [esi+0x46],1
  402a9f:	inc    eax
  402aa0:	pop    ebp
  402aa1:	fcmovnb st,st(0)
  402aa3:	(bad)  
  402aa4:	popf   
  402aa5:	cmp    eax,0x6bd10aac
  402aaa:	fist   WORD PTR [edi+edi*1-0xc]
  402aae:	shl    cl,cl
  402ab0:	mov    ds:0x94a5ed38,al
  402ab5:	dec    eax
  402ab6:	xor    BYTE PTR [esi],bh
  402ab8:	mov    al,0xfd
  402aba:	lds    ebx,FWORD PTR [ebp+0x51aa24a8]
  402ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ac1:	push   eax
  402ac2:	jle    0x402ac8
  402ac4:	icebp  
  402ac5:	and    al,0x61
  402ac7:	outs   dx,DWORD PTR es:[esi]
  402ac9:	ret    
  402aca:	(bad)  
  402acb:	loope  0x402b06
  402acd:	mov    ebp,0x9da1d7ab
  402ad2:	fbld   TBYTE PTR [edi+0x272ae4a8]
  402ad8:	js     0x402afa
  402ada:	jg     0x402b3d
  402adc:	ss out dx,al
  402ade:	lods   al,BYTE PTR ds:[esi]
  402adf:	jmp    0x6f03:0x57dd49ef
  402ae6:	or     esp,ecx
  402ae8:	mov    eax,ds:0x5a26090e
  402aed:	push   ss
  402aee:	mov    bh,bh
  402af0:	cmp    dl,al
  402af2:	and    ah,0x20
  402af5:	or     ch,BYTE PTR [ebx+edx*4]
  402af8:	xchg   edi,eax
  402af9:	addr16 in eax,dx
  402afb:	rcl    DWORD PTR [ecx+0x44],cl
  402afe:	push   DWORD PTR [edi-0x3e]
  402b01:	pop    es
  402b02:	ss enter 0xe33b,0x9f
  402b07:	xor    DWORD PTR [esi-0x44c9c0ab],edi
  402b0d:	inc    eax
  402b0e:	lds    esp,FWORD PTR [ebx-0xc734c20]
  402b14:	and    DWORD PTR [ecx+0x3d0ff3c3],edx
  402b1a:	scas   eax,DWORD PTR es:[edi]
  402b1b:	in     al,0xa
  402b1d:	cs cmp ah,cl
  402b20:	inc    ecx
  402b21:	xchg   ebp,eax
  402b22:	call   0xa66f8f82
  402b27:	and    DWORD PTR [ebx],0xfffffffd
  402b2a:	inc    eax
  402b2b:	test   DWORD PTR [ebp+0x61042215],ecx
  402b31:	lods   eax,DWORD PTR ds:[esi]
  402b32:	ins    DWORD PTR es:[edi],dx
  402b33:	or     ecx,edi
  402b35:	xlat   BYTE PTR ds:[ebx]
  402b36:	sub    BYTE PTR [esi+0xb275989],dh
  402b3c:	lahf   
  402b3d:	lock test BYTE PTR [eax+0x28],al
  402b41:	xchg   edx,eax
  402b42:	pop    esi
  402b43:	cli    
  402b44:	inc    ecx
  402b45:	data16 das 
  402b47:	scas   eax,DWORD PTR es:[edi]
  402b48:	mov    ch,0xf8
  402b4a:	and    ebp,DWORD PTR [esi]
  402b4c:	add    dh,bh
  402b4e:	into   
  402b4f:	adc    al,0x11
  402b51:	in     al,0x3f
  402b53:	add    ch,cl
  402b55:	int    0x33
  402b57:	pop    edx
  402b58:	sti    
  402b59:	sti    
  402b5a:	sub    al,0xb8
  402b5c:	mov    bh,0x36
  402b5e:	adc    DWORD PTR [edi-0x368d2519],edx
  402b64:	cmp    al,0xd8
  402b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b67:	scas   eax,DWORD PTR es:[edi]
  402b68:	in     al,0xdf
  402b6a:	mov    dh,bh
  402b6c:	jbe    0x402b97
  402b6e:	icebp  
  402b6f:	pop    edi
  402b70:	outs   dx,BYTE PTR ds:[esi]
  402b71:	pop    edi
  402b72:	sbb    DWORD PTR [ebp+0x62318824],0xffffffca
  402b79:	mov    ebx,DWORD PTR [eax+edi*1-0x67]
  402b7d:	pop    esi
  402b7e:	dec    eax
  402b7f:	repz and esp,DWORD PTR [esi]
  402b82:	mov    ds:0x7856071f,eax
  402b87:	mov    DWORD PTR [edi+0x37e34773],ecx
  402b8d:	cmp    DWORD PTR [edi-0x3ac37539],0x4ac70442
  402b97:	stos   BYTE PTR es:[edi],al
  402b98:	adc    DWORD PTR [ebp+0x68],eax
  402b9b:	cld    
  402b9c:	gs (bad) 
  402b9e:	or     al,0x68
  402ba0:	out    dx,al
  402ba1:	jbe    0x402bb4
  402ba3:	mov    ds,edx
  402ba5:	mov    cl,0x69
  402ba7:	and    BYTE PTR [ecx+ebp*1-0xd],0x14
  402bac:	sti    
  402bad:	add    bh,BYTE PTR [ebx+0x55808385]
  402bb3:	cmp    al,0x45
  402bb5:	js     0x402b75
  402bb7:	test   ch,0xa1
  402bba:	cmc    
  402bbb:	sub    BYTE PTR [eax+0x5e4e634d],bl
  402bc1:	add    al,0x21
  402bc3:	je     0x402c31
  402bc5:	cmp    ah,bl
  402bc7:	mov    edx,0x35f78f30
  402bcc:	mov    ch,ch
  402bce:	sub    al,0xaa
  402bd0:	cwde   
  402bd1:	aaa    
  402bd2:	push   0xa787e31f
  402bd7:	aaa    
  402bd8:	jl     0x402b8a
  402bda:	xchg   ebx,eax
  402bdb:	cmp    eax,0xa366ac6b
  402be0:	out    dx,al
  402be1:	inc    esi
  402be2:	or     DWORD PTR [edi-0x71b9cb9a],0x379e9e3d
  402bec:	add    ch,bh
  402bee:	sub    BYTE PTR [ebx],ch
  402bf0:	outs   dx,BYTE PTR ds:[esi]
  402bf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bf2:	int3   
  402bf3:	dec    ebx
  402bf4:	push   esp
  402bf5:	dec    edx
  402bf6:	test   dl,al
  402bf8:	rcl    DWORD PTR [ecx-0x31],1
  402bfb:	mov    ecx,0xfa0fab3f
  402c00:	js     0x402b97
  402c02:	arpl   WORD PTR [eax+0x743ce7d5],di
  402c08:	lock pop ebx
  402c0a:	pop    ss
  402c0b:	pop    ecx
  402c0c:	jecxz  0x402c44
  402c0e:	(bad)  
  402c10:	mov    esp,0x3474154d
  402c15:	sti    
  402c16:	in     al,0xc2
  402c18:	jmp    0x85751796
  402c1d:	pop    ebx
  402c1e:	addr16 add esp,ecx
  402c21:	dec    ecx
  402c22:	sbb    dh,0xbd
  402c25:	xor    dh,BYTE PTR [esi+0x15]
  402c28:	xlat   BYTE PTR ds:[ebx]
  402c29:	in     eax,0x61
  402c2b:	out    dx,eax
  402c2c:	loop   0x402c6e
  402c2e:	fcmove st,st(5)
  402c30:	mov    al,0xcb
  402c32:	ja     0x402c58
  402c34:	jg     0x402c0c
  402c36:	jmp    0x402c74
  402c38:	and    ebx,DWORD PTR [ecx+0x36c64d86]
  402c3e:	repz jle 0x402c35
  402c41:	fmul   DWORD PTR [ecx-0xf861d8b]
  402c47:	shl    BYTE PTR [ebx-0x1],1
  402c4a:	push   esp
  402c4b:	in     al,dx
  402c4c:	sbb    eax,0xe1fde923
  402c51:	(bad)  
  402c52:	cmp    al,0xad
  402c54:	sbb    ebp,edx
  402c56:	shl    DWORD PTR [esi],cl
  402c58:	je     0x402cb0
  402c5a:	fnstcw WORD PTR ds:0x4634ad26
  402c60:	aaa    
  402c61:	push   ecx
  402c62:	das    
  402c63:	jae    0x402c23
  402c65:	mov    esp,0x1b68cf02
  402c6a:	sub    al,0xf9
  402c6c:	push   edx
  402c6d:	adc    eax,0xaea95423
  402c72:	or     eax,0x66e39551
  402c77:	add    eax,0xe76dd470
  402c7c:	fisttp WORD PTR [ecx-0xb2866bc]
  402c82:	es cmp ebx,edi
  402c85:	out    0x28,eax
  402c87:	fld    DWORD PTR [ebp-0x1e]
  402c8a:	push   ecx
  402c8b:	xlat   BYTE PTR ds:[ebx]
  402c8c:	ror    ebp,cl
  402c8e:	mov    esi,db0
  402c91:	das    
  402c92:	repz pop edi
  402c94:	jae    0x402d0a
  402c96:	push   ds
  402c97:	mov    ebx,0x79ceda0e
  402c9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c9d:	mov    ah,0x57
  402c9f:	je     0x402ce7
  402ca1:	cmp    eax,0x24194325
  402ca6:	mov    esp,DWORD PTR [edi]
  402ca8:	dec    edi
  402ca9:	addr16 jmp 0x9e2f:0xdd978528
  402cb1:	hlt    
  402cb2:	adc    DWORD PTR [edx],ecx
  402cb4:	sub    BYTE PTR [eax+0x45074c2f],dh
  402cba:	enter  0x9dfd,0x10
  402cbe:	pop    edi
  402cbf:	cld    
  402cc0:	adc    eax,0x82ff7e2
  402cc5:	dec    ebx
  402cc6:	das    
  402cc7:	cmp    al,0xfe
  402cc9:	push   ss
  402cca:	mov    esp,0xf328c8e8
  402ccf:	mov    edi,0xa60ae78
  402cd4:	sbb    BYTE PTR [ebx+0x20cd20f5],ch
  402cda:	sbb    al,0xe6
  402cdc:	inc    edx
  402cdd:	jae    0x402cee
  402cdf:	iret   
  402ce0:	scas   eax,DWORD PTR es:[edi]
  402ce1:	mov    ds:0x2fa10ffc,al
  402ce6:	inc    eax
  402ce7:	mov    edx,DWORD PTR [ecx-0x768c30c3]
  402ced:	jbe    0x402cc7
  402cef:	bound  ebp,QWORD PTR [edi]
  402cf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cf2:	fs ss aas 
  402cf5:	jle    0x402c87
  402cf7:	sub    ebp,DWORD PTR [ecx+0x63]
  402cfa:	or     DWORD PTR [edx+0x44879581],0xeef8c87b
  402d04:	mov    edi,0xbc1e1ca5
  402d09:	ret    
  402d0a:	jno    0x402d5a
  402d0c:	pop    esi
  402d0d:	pop    ebx
  402d0e:	(bad)  
  402d0f:	lock call 0xcd72:0xebf7bb1c
  402d17:	pop    ds
  402d18:	jp     0x402d72
  402d1a:	jo     0x402cab
  402d1c:	add    esi,ebp
  402d1e:	es hlt 
  402d20:	repz adc BYTE PTR [ecx+0x5a],al
  402d24:	fstp   QWORD PTR [ebx-0xa72e634]
  402d2a:	repnz retf 
  402d2c:	je     0x402cc4
  402d2e:	addr16 pusha 
  402d30:	sahf   
  402d31:	in     eax,0x5e
  402d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d34:	xlat   BYTE PTR ds:[ebx]
  402d35:	cmp    eax,0xd64fa3f5
  402d3a:	push   ebx
  402d3b:	inc    esp
  402d3c:	cld    
  402d3d:	cmp    bh,bh
  402d3f:	sar    BYTE PTR [eax+esi*1],1
  402d42:	mov    cl,0x20
  402d44:	jle    0x402cee
  402d46:	fdivr  st(4),st
  402d48:	pop    ebp
  402d49:	and    DWORD PTR [edi+0x1c],ecx
  402d4c:	jo     0x402cd0
  402d4e:	outs   dx,BYTE PTR ds:[esi]
  402d4f:	retfw  
  402d51:	in     al,dx
  402d52:	loop   0x402cd8
  402d54:	rol    BYTE PTR [esi],0xd3
  402d57:	cs jo  0x402d75
  402d5a:	stos   DWORD PTR es:[edi],eax
  402d5b:	loopne 0x402d3f
  402d5d:	xchg   BYTE PTR [edi],ah
  402d5f:	repz sbb eax,0x9d55b4cc
  402d65:	sbb    al,0xee
  402d67:	fucomip st,st(0)
  402d69:	in     eax,0x69
  402d6b:	ja     0x402cff
  402d6d:	(bad)  
  402d6e:	jg     0x402d95
  402d70:	dec    ecx
  402d71:	pop    ebp
  402d72:	cmp    esi,DWORD PTR [edi]
  402d74:	sbb    eax,0xb53e06cb
  402d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d7a:	js     0x402d56
  402d7c:	in     eax,dx
  402d7d:	xor    bl,0xae
  402d80:	fisub  DWORD PTR [ebp+0x50]
  402d83:	inc    edx
  402d84:	dec    edi
  402d85:	aam    0x28
  402d87:	aad    0x3f
  402d89:	lods   eax,DWORD PTR ds:[esi]
  402d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d8b:	jnp    0x402de7
  402d8d:	dec    esi
  402d8e:	aam    0x7d
  402d90:	or     eax,0xf0b9c346
  402d95:	lods   eax,DWORD PTR ds:[esi]
  402d96:	adc    ebp,DWORD PTR [esi-0x7e]
  402d99:	mov    ah,0xf6
  402d9b:	mov    ebx,0x4c639575
  402da0:	mov    bh,0x35
  402da2:	nop
  402da3:	cmp    BYTE PTR [ebp-0x7c],ah
  402da6:	bound  edi,QWORD PTR [edx-0x2ba67b2]
  402dac:	xchg   DWORD PTR [edx-0x7],esp
  402daf:	and    eax,0x98be5d8d
  402db4:	sahf   
  402db5:	cmp    edi,DWORD PTR [ebx]
  402db7:	xlat   BYTE PTR ds:[bx]
  402db9:	adc    al,0x75
  402dbb:	pop    ebx
  402dbc:	add    dl,bl
  402dbe:	rcl    BYTE PTR [ecx-0x77308074],1
  402dc4:	shr    BYTE PTR [eax+0x4e],1
  402dc7:	rol    BYTE PTR [ebx],0x76
  402dca:	push   eax
  402dcb:	xlat   BYTE PTR ds:[ebx]
  402dcc:	fsub   DWORD PTR [ecx+eiz*2-0xe]
  402dd0:	sub    edi,esp
  402dd2:	cmp    ah,bl
  402dd4:	jg     0x402da2
  402dd6:	sub    ebp,eax
  402dd8:	mov    esp,0xb3b60256
  402ddd:	hlt    
  402dde:	imul   esp,ebp,0x78
  402de1:	(bad)  
  402de2:	cdq    
  402de3:	jmp    DWORD PTR [eax]
  402de5:	(bad)  
  402de6:	repz mov al,0x76
  402de9:	mov    esp,DWORD PTR [esi]
  402deb:	push   0x2ee6c66c
  402df0:	sub    DWORD PTR [edx-0x6e398a81],ecx
  402df6:	and    edx,esp
  402df8:	or     eax,0xb50d6213
  402dfd:	dec    ecx
  402dfe:	in     al,dx
  402dff:	out    dx,al
  402e00:	mov    bl,0x4c
  402e02:	stc    
  402e03:	call   0x34e85e12
  402e08:	sub    edx,DWORD PTR [ebp+ecx*2-0x13]
  402e0c:	mov    ch,cl
  402e0e:	pushf  
  402e0f:	aas    
  402e10:	mov    BYTE PTR [edi+0x3009ed19],bh
  402e16:	mov    dl,BYTE PTR [ebp-0x45860429]
  402e1c:	xor    DWORD PTR [esi-0x3a],esp
  402e1f:	sub    al,0x7e
  402e21:	call   0x6f2a:0xe6426812
  402e28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e29:	and    al,0xfa
  402e2b:	sub    al,al
  402e2d:	adc    BYTE PTR [ebx-0xe6f4cef],ch
  402e33:	loopne 0x402e72
  402e35:	push   cs
  402e36:	cmp    ch,ah
  402e38:	iret   
  402e39:	jg     0x402e7e
  402e3b:	xchg   esp,eax
  402e3c:	mov    esi,0xe0fb63f3
  402e41:	ret    
  402e42:	mov    eax,0xe530e3eb
  402e47:	(bad)  
  402e48:	(bad)  
  402e49:	and    DWORD PTR [ecx-0x23141767],ebx
  402e4f:	sbb    BYTE PTR [esi-0x1524d1a2],dh
  402e55:	mov    esi,esi
  402e57:	dec    esp
  402e58:	mov    ebp,0x9a0a7548
  402e5d:	xchg   DWORD PTR ds:[esi+0x4b],esp
  402e61:	mov    DWORD PTR [edx],ebx
  402e63:	loope  0x402e7a
  402e65:	dec    BYTE PTR [ebx+0x68c6da51]
  402e6b:	stc    
  402e6c:	jmp    0x44f1:0xf47d73cd
  402e73:	push   edi
  402e74:	and    dh,ch
  402e76:	nop
  402e77:	push   0xffffff83
  402e79:	fnsavew [ebx]
  402e7c:	adc    DWORD PTR [edx],0xf2f1b0bd
  402e82:	into   
  402e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e84:	mov    eax,ds:0xc4b01a6d
  402e89:	call   0xefc92072
  402e8e:	fdivrp st(3),st
  402e90:	icebp  
  402e91:	not    DWORD PTR [edx]
  402e93:	add    BYTE PTR [edx+eiz*1],0x86
  402e97:	mov    ss,WORD PTR [esi-0x13]
  402e9a:	mov    al,0x33
  402e9c:	aam    0x3f
  402e9e:	shl    edi,1
  402ea0:	or     BYTE PTR ds:0x58d1f0b8,cl
  402ea6:	(bad)  
  402ea7:	daa    
  402ea8:	pop    ds
  402ea9:	fimul  DWORD PTR [edi]
  402eab:	ja     0x402edc
  402ead:	scas   al,BYTE PTR es:[edi]
  402eae:	mov    bh,0x87
  402eb0:	dec    DWORD PTR [eax+0x6da44804]
  402eb6:	xchg   esp,eax
  402eb7:	cmp    eax,0xf624e522
  402ebc:	fucomip st,st(2)
  402ebe:	or     esp,esp
  402ec0:	mov    cl,0x7d
  402ec2:	mov    edx,0xf524eead
  402ec7:	hlt    
  402ec8:	(bad)  
  402ec9:	push   edx
  402eca:	or     BYTE PTR [ecx],cl
  402ecc:	pop    es
  402ecd:	dec    edx
  402ece:	push   0x20
  402ed0:	ret    
  402ed1:	push   0x77cc334a
  402ed6:	adc    al,0x75
  402ed8:	dec    ecx
  402ed9:	jle    0x402e7d
  402edb:	jle    0x402e75
  402edd:	push   0xf3efa55
  402ee2:	push   es
  402ee3:	ror    BYTE PTR [ebp+0x788e14ed],0xd7
  402eea:	call   0x64b0ff4b
  402eef:	jb     0x402ee8
  402ef1:	mov    bh,0xf1
  402ef3:	sbb    DWORD PTR [eax-0xbf86d99],edx
  402ef9:	pusha  
  402efa:	js     0x402eb2
  402efc:	cmp    esi,0x589104e1
  402f02:	enter  0xe91e,0x76
  402f06:	scas   eax,DWORD PTR es:[edi]
  402f07:	not    BYTE PTR [esp+ebp*8+0x29]
  402f0b:	fdiv   st,st(6)
  402f0d:	int3   
  402f0e:	outs   dx,BYTE PTR ds:[esi]
  402f0f:	jp     0x402e98
  402f11:	add    dh,0x8a
  402f14:	mov    gs,WORD PTR [esi+0x4d7b3efb]
  402f1a:	in     al,0xad
  402f1c:	add    bh,cl
  402f1e:	mov    DWORD PTR [edi],ecx
  402f20:	(bad)  
  402f21:	test   eax,0xba9ee965
  402f26:	stos   BYTE PTR es:[edi],al
  402f27:	add    eax,DWORD PTR [edx+0x2b879f5a]
  402f2d:	aam    0xec
  402f2f:	daa    
  402f30:	inc    eax
  402f31:	repnz or eax,0xdf0513d4
  402f37:	and    al,0x1b
  402f39:	pop    ecx
  402f3a:	rcr    BYTE PTR [ebp+eax*1-0x84efdfb],cl
  402f41:	popa   
  402f42:	mov    edi,0xd6f2a179
  402f47:	pop    edx
  402f48:	xor    DWORD PTR [ebx+0x1bb370eb],0x5b6362e
  402f52:	call   DWORD PTR [ebx+0x5a0fed17]
  402f58:	mov    al,dh
  402f5a:	pusha  
  402f5b:	and    esi,ebp
  402f5d:	icebp  
  402f5e:	adc    BYTE PTR [edi+0x10625f06],0xd5
  402f65:	push   ebx
  402f66:	sbb    al,0xc8
  402f68:	(bad)  
  402f69:	push   ebp
  402f6a:	mov    dh,0xc0
  402f6c:	ret    0xd424
  402f6f:	lahf   
  402f70:	enter  0x6d94,0x7
  402f74:	pop    eax
  402f75:	pusha  
  402f76:	cli    
  402f77:	xor    esi,0x38
  402f7a:	call   DWORD PTR [edx-0x4]
  402f7d:	retf   
  402f7e:	repz and al,al
  402f81:	inc    esp
  402f82:	lea    esp,fs:[eax-0x670aacda]
  402f89:	jle    0x402fce
  402f8b:	xor    DWORD PTR [eax-0x593d047d],esp
  402f91:	add    al,0x37
  402f93:	xor    BYTE PTR [ebp+edi*8+0x5a9abd82],dh
  402f9a:	ja     0x402f2c
  402f9c:	inc    esi
  402f9d:	push   cs
  402f9e:	repz sub eax,0x15bb847f
  402fa4:	cdq    
  402fa5:	cwde   
  402fa6:	xchg   esp,eax
  402fa7:	push   esp
  402fa8:	and    al,0xe2
  402faa:	data16 jmp 0x402f6c
  402fad:	aas    
  402fae:	dec    esp
  402faf:	dec    edi
  402fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fb1:	inc    edx
  402fb2:	adc    ch,dh
  402fb4:	push   eax
  402fb5:	gs pop edi
  402fb7:	inc    ebx
  402fb8:	adc    bh,BYTE PTR [ecx]
  402fba:	fidiv  DWORD PTR [esi]
  402fbc:	lea    ecx,[edi]
  402fbe:	lds    ecx,FWORD PTR [ebx]
  402fc0:	add    DWORD PTR [eax+0xe],ebx
  402fc3:	cdq    
  402fc4:	das    
  402fc5:	test   BYTE PTR [ebx+0x7fb8ecb4],ah
  402fcb:	mov    dl,BYTE PTR [ebp+0x9]
  402fce:	xchg   esi,eax
  402fcf:	push   esi
  402fd0:	cwde   
  402fd1:	add    ah,dh
  402fd3:	and    edx,DWORD PTR [ecx-0x56c97af8]
  402fd9:	ret    
  402fda:	mov    ch,0x57
  402fdc:	fbld   TBYTE PTR [ecx]
  402fde:	(bad)  
  402fdf:	pop    esi
  402fe0:	jo     0x402f62
  402fe2:	and    al,0x59
  402fe4:	pushf  
  402fe5:	jg     0x402f8c
  402fe7:	and    esp,esp
  402fe9:	pusha  
  402fea:	rol    BYTE PTR [ecx+0x55],cl
  402fed:	pusha  
  402fee:	ret    0xe72
  402ff1:	inc    ebp
  402ff2:	shl    DWORD PTR [edi+0x67],cl
  402ff5:	repnz mov ebx,0x7ef6511f
  402ffb:	enter  0x5a8d,0x2c
  402fff:	das    
  403000:	mov    al,0x9
  403002:	mul    BYTE PTR [eax+eax*4]
  403005:	fsubr  QWORD PTR [edx]
  403007:	xor    DWORD PTR [eax-0x3d8a57be],ebp
  40300d:	out    dx,eax
  40300e:	in     al,dx
  40300f:	lods   al,BYTE PTR ds:[esi]
  403010:	mov    ds:0x9e2f04c7,al
  403015:	add    cl,dh
  403017:	pop    ebp
  403018:	pop    eax
  403019:	sub    BYTE PTR [edx+eiz*8-0x21],ah
  40301d:	pop    ecx
  40301e:	addr16 push ss
  403020:	imul   ecx,DWORD PTR [ebp+0x56],0xbf619e6e
  403027:	repnz push ds
  403029:	xchg   edi,eax
  40302a:	clc    
  40302b:	ficomp DWORD PTR [eax]
  40302d:	sbb    eax,0x703a2601
  403032:	lods   eax,DWORD PTR ds:[esi]
  403033:	mov    DWORD PTR [eax],ebx
  403035:	mov    edx,0x2205e3f7
  40303a:	outs   dx,BYTE PTR ds:[esi]
  40303b:	xor    edi,DWORD PTR [edi-0x39047d0b]
  403041:	neg    BYTE PTR [edi]
  403043:	(bad)  
  403044:	nop
  403045:	outs   dx,BYTE PTR ds:[esi]
  403046:	(bad)  
  403047:	sti    
  403048:	or     al,0x82
  40304a:	mov    dh,0xf1
  40304c:	pop    esp
  40304d:	shl    DWORD PTR [ecx],cl
  40304f:	or     al,BYTE PTR [ecx]
  403051:	ja     0x402fe3
  403053:	scas   al,BYTE PTR es:[edi]
  403054:	and    ebx,DWORD PTR [eax+eax*8+0x1d031512]
  40305b:	cwde   
  40305c:	inc    edx
  40305d:	sub    DWORD PTR [ebp+edi*2+0x40],ecx
  403061:	mov    ah,0xb2
  403063:	nop
  403064:	mov    bl,0x71
  403066:	sub    DWORD PTR [edx+0x1fee6ffa],0x70
  40306d:	inc    ecx
  40306e:	dec    edi
  40306f:	mov    edx,0x7718cbe2
  403074:	adc    eax,0x371ceb01
  403079:	jae    0x4030e1
  40307b:	pop    edx
  40307c:	mov    esp,0x35070bcf
  403081:	push   ebx
  403082:	push   cs
  403083:	test   eax,0xcf6f8f2e
  403088:	les    edi,FWORD PTR [ecx+0x37ca2a26]
  40308e:	ins    DWORD PTR es:[edi],dx
  40308f:	sbb    al,0xd4
  403091:	fisubr WORD PTR [esi]
  403093:	imul   esi,DWORD PTR [edi-0x61],0x27304b48
  40309a:	aaa    
  40309b:	pusha  
  40309c:	push   ss
  40309d:	xor    eax,0x9be5ab1d
  4030a2:	leave  
  4030a3:	daa    
  4030a4:	add    esi,DWORD PTR [esi+0x552ad157]
  4030aa:	mov    al,0x84
  4030ac:	sbb    DWORD PTR [ebx-0x7b],ecx
  4030af:	fist   WORD PTR [edi+0xfbb670a]
  4030b5:	out    0x38,eax
  4030b7:	xor    al,0x6b
  4030b9:	sbb    BYTE PTR [ebx+0x7b],dl
  4030bc:	fisub  DWORD PTR [eax]
  4030be:	add    ebx,DWORD PTR [ebp+edi*1-0x2e]
  4030c2:	stc    
  4030c3:	adc    edi,DWORD PTR [ebp+0x5]
  4030c6:	mov    bl,bh
  4030c8:	mov    dl,0x16
  4030ca:	or     BYTE PTR [edi+0x5d],bh
  4030cd:	cmp    al,0xe7
  4030cf:	mov    edi,0xd0ddf892
  4030d4:	(bad)  
  4030d5:	xor    eax,0x3093dec
  4030da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030db:	sub    BYTE PTR [ecx+0x2c4b9066],dh
  4030e1:	(bad)  
  4030e3:	leave  
  4030e4:	sti    
  4030e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030e6:	dec    ecx
  4030e7:	cmp    edi,edx
  4030e9:	adc    al,0xf2
  4030eb:	or     ebp,ecx
  4030ed:	inc    ebx
  4030ee:	cdq    
  4030ef:	xlat   BYTE PTR ds:[ebx]
  4030f0:	ins    DWORD PTR es:[edi],dx
  4030f1:	sti    
  4030f2:	sti    
  4030f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030f4:	pop    edx
  4030f5:	or     ebp,esp
  4030f7:	mov    dl,0x3d
  4030f9:	xor    eax,0xbeeb22d9
  4030fe:	imul   esp,DWORD PTR [ebp+esi*8-0x57],0xc58c36a2
  403106:	bound  ecx,QWORD PTR [ebp-0x30]
  403109:	xor    al,0xe7
  40310b:	push   edx
  40310c:	popf   
  40310d:	push   cs
  40310e:	push   edi
  40310f:	gs pop ebp
  403111:	stos   DWORD PTR es:[edi],eax
  403112:	pushf  
  403113:	sti    
  403114:	fidiv  DWORD PTR [ebp+0x1230017f]
  40311a:	or     DWORD PTR [edi],ebp
  40311c:	mov    WORD PTR [edi-0x27],fs
  40311f:	inc    esi
  403120:	dec    edx
  403121:	test   al,0xac
  403123:	add    ch,BYTE PTR [edx]
  403125:	push   edi
  403126:	sbb    dh,bl
  403128:	popf   
  403129:	mov    dh,0x23
  40312b:	mov    edi,edi
  40312d:	jg     0x40314c
  40312f:	pop    ecx
  403130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403131:	dec    edi
  403132:	pop    edx
  403133:	mov    eax,0xdbaec927
  403138:	mov    edi,0x4f90b145
  40313d:	xchg   ebp,eax
  40313e:	in     ax,dx
  403140:	jge    0x4031b5
  403142:	sbb    bh,BYTE PTR [eax]
  403144:	icebp  
  403145:	pop    ds
  403146:	mov    bl,0x6c
  403148:	pop    es
  403149:	imul   ebx,DWORD PTR [esi-0x63],0xffffffe8
  40314d:	call   0xe24cd1e6
  403152:	loop   0x4030e1
  403154:	fstp   DWORD PTR [ecx-0x327f17c1]
  40315a:	mov    ds:0xf8680842,eax
  40315f:	idiv   DWORD PTR [edx+esi*2+0x19]
  403163:	lock das 
  403165:	dec    edi
  403166:	sbb    BYTE PTR [esi-0x62da0c27],ah
  40316c:	cmp    ch,BYTE PTR [edi]
  40316e:	es ret 
  403170:	or     DWORD PTR [edi-0x64],eax
  403173:	mov    edi,0x596a732
  403178:	fdiv   QWORD PTR [esp+edx*8]
  40317b:	(bad)  [edi-0x3b]
  40317e:	and    eax,0xb1a6e543
  403183:	pop    edi
  403184:	or     DWORD PTR [edi+0x14],esp
  403187:	pop    ds
  403188:	mov    ebx,0xde02e9d6
  40318d:	test   eax,0x805a4915
  403192:	pushf  
  403193:	or     al,0x7b
  403195:	pop    esi
  403196:	sub    ebx,DWORD PTR [ecx+esi*1]
  403199:	outs   dx,DWORD PTR ds:[esi]
  40319a:	cdq    
  40319b:	cmp    al,0x76
  40319d:	js     0x4031e1
  40319f:	int    0xe6
  4031a1:	dec    esp
  4031a2:	push   0xffffff91
  4031a4:	fdiv   st,st(7)
  4031a6:	pop    edx
  4031a7:	lods   eax,DWORD PTR ds:[esi]
  4031a8:	jecxz  0x403214
  4031aa:	add    eax,0xc4662309
  4031af:	(bad)  
  4031b0:	repnz and eax,0x763cea51
  4031b6:	push   ebp
  4031b7:	xor    bh,BYTE PTR [eax]
  4031b9:	sbb    al,0xe0
  4031bb:	cmc    
  4031bc:	xlat   BYTE PTR ds:[ebx]
  4031bd:	loop   0x403238
  4031bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031c0:	push   0x4b
  4031c2:	mov    ds:0xb1bd333f,eax
  4031c7:	mov    cl,0xee
  4031c9:	stos   DWORD PTR es:[edi],eax
  4031ca:	add    al,0xdc
  4031cc:	mov    DWORD PTR [esi],esp
  4031ce:	in     eax,dx
  4031cf:	cli    
  4031d0:	jmp    0x106f:0x52c40d45
  4031d7:	leave  
  4031d8:	(bad)  
  4031d9:	cs push ebx
  4031db:	or     ebx,eax
  4031dd:	call   0xe89b:0x2d1042da
  4031e4:	icebp  
  4031e5:	add    eax,0xc138505f
  4031ea:	clc    
  4031eb:	int3   
  4031ec:	inc    edi
  4031ed:	dec    ecx
  4031ee:	scas   al,BYTE PTR es:[edi]
  4031ef:	and    ebx,edi
  4031f1:	pop    esp
  4031f2:	fstp   QWORD PTR [esi+0x3300cff6]
  4031f8:	sub    al,0xf
  4031fa:	loop   0x403268
  4031fc:	fnstsw WORD PTR [eax+0x65b2a0d3]
  403202:	sbb    BYTE PTR [ebp-0x36],bl
  403205:	jmp    0x403211
  403207:	sti    
  403208:	hlt    
  403209:	ja     0x403279
  40320b:	mov    ds:0x627cc15b,eax
  403210:	imul   eax,DWORD PTR [ebx],0x2f19fa69
  403216:	or     al,0x49
  403218:	inc    edx
  403219:	scas   eax,DWORD PTR es:[edi]
  40321a:	in     al,dx
  40321b:	cmp    al,0xfc
  40321d:	inc    esp
  40321e:	and    al,BYTE PTR [eax-0x4eb19a03]
  403224:	jno    0x4031c3
  403226:	addr16 sbb ebx,esi
  403229:	add    edi,DWORD PTR [ecx]
  40322b:	mov    dl,0x1b
  40322d:	(bad)  
  40322e:	lahf   
  40322f:	cmp    BYTE PTR [edx+0x49622fc1],dl
  403235:	dec    ebx
  403236:	jmp    0x2c987ea9
  40323b:	ins    DWORD PTR es:[edi],dx
  40323c:	push   ss
  40323d:	cli    
  40323e:	imul   BYTE PTR [ecx+0x53]
  403241:	addr16 push edx
  403243:	inc    esp
  403244:	push   ebx
  403245:	mov    ebx,0xa1b8db8c
  40324a:	sahf   
  40324b:	jae    0x4032ba
  40324d:	xchg   DWORD PTR [bx],esi
  403250:	sbb    esi,0x27
  403253:	cmp    ecx,DWORD PTR [ebx]
  403255:	sbb    DWORD PTR [edi],edx
  403257:	pop    ss
  403258:	ret    0xa19
  40325b:	rol    DWORD PTR [ebx-0x3d],1
  40325e:	pop    es
  40325f:	dec    edi
  403260:	jl     0x4031e7
  403262:	(bad)  [edi]
  403264:	aam    0x2f
  403266:	pop    esp
  403267:	iret   
  403268:	ret    0x9d74
  40326b:	pop    eax
  40326c:	cmp    eax,DWORD PTR [ebx]
  40326e:	jge    0x403284
  403270:	aam    0x18
  403272:	sti    
  403273:	js     0x4032c8
  403275:	xchg   DWORD PTR [ebx],ebx
  403277:	sbb    edi,DWORD PTR ds:0x4c3f9533
  40327d:	pop    ecx
  40327e:	xchg   ecx,eax
  40327f:	dec    ecx
  403280:	faddp  st(0),st
  403282:	or     esp,edi
  403284:	test   bl,bh
  403286:	aad    0xc7
  403288:	(bad)  
  403289:	lds    ebx,FWORD PTR [ecx+0x29782208]
  40328f:	scas   eax,DWORD PTR es:[edi]
  403290:	rcr    BYTE PTR [edx+eiz*2+0x4b17ca14],cl
  403297:	and    ah,dh
  403299:	sub    DWORD PTR [ebx-0x50],esi
  40329c:	mov    WORD PTR [edi-0x3daae37b],?
  4032a2:	xchg   esp,eax
  4032a3:	add    al,0xca
  4032a5:	mov    ebp,ebx
  4032a7:	call   0x3280e2cf
  4032ac:	mov    DWORD PTR [edx-0x43],ebx
  4032af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032b0:	out    0x86,eax
  4032b2:	fstp   TBYTE PTR [ecx]
  4032b4:	sbb    ebx,DWORD PTR [edi-0x78]
  4032b7:	std    
  4032b8:	sbb    al,0x5c
  4032ba:	jmp    0xafa1c82c
  4032bf:	hlt    
  4032c0:	imul   ebx,DWORD PTR [esp-0x3c],0x1c6ce386
  4032c8:	add    al,BYTE PTR [ecx+0x125e27ef]
  4032ce:	add    eax,0x99212a02
  4032d3:	and    ch,BYTE PTR [esi]
  4032d5:	adc    bl,ah
  4032d7:	into   
  4032d8:	sbb    BYTE PTR [ebp-0x988af61],dh
  4032de:	call   0xdf86523e
  4032e3:	xchg   edi,eax
  4032e4:	dec    eax
  4032e5:	lock jge 0x40329a
  4032e8:	dec    edi
  4032e9:	pop    ecx
  4032ea:	inc    edx
  4032eb:	dec    edx
  4032ec:	and    ah,BYTE PTR [edx]
  4032ee:	sbb    ah,BYTE PTR [ecx+0x4732c761]
  4032f4:	pop    ds
  4032f5:	inc    eax
  4032f6:	push   edx
  4032f7:	rol    cl,1
  4032f9:	stos   BYTE PTR es:[edi],al
  4032fa:	js     0x403280
  4032fc:	loopne 0x403297
  4032fe:	ret    0xe364
  403301:	cs sub eax,0xa65e6f86
  403307:	xor    edi,DWORD PTR [ebp-0x58e12d2b]
  40330d:	in     eax,0xf4
  40330f:	jb     0x40332f
  403311:	iret   
  403312:	(bad)  
  403313:	jmp    0x5f864b2
  403318:	pop    ds
  403319:	dec    edi
  40331a:	mov    bl,0x76
  40331c:	out    0xed,al
  40331e:	inc    ebx
  40331f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403320:	sbb    al,0x42
  403322:	pop    esi
  403323:	and    al,0x99
  403325:	ins    DWORD PTR es:[edi],dx
  403326:	sbb    BYTE PTR [ecx],bl
  403328:	mov    ecx,0x87a7454e
  40332d:	mov    DWORD PTR [ebx+0x25],edi
  403330:	xchg   DWORD PTR [ecx-0x236ddcc4],esi
  403336:	les    esi,FWORD PTR [eax-0xb]
  403339:	lods   eax,DWORD PTR ds:[esi]
  40333a:	push   0xfffffffe
  40333c:	ins    BYTE PTR es:[edi],dx
  40333d:	xchg   ebx,eax
  40333e:	nop    DWORD PTR [ebp+0x4a]
  403342:	sub    al,0xaa
  403344:	mov    bh,0x17
  403346:	stos   BYTE PTR es:[edi],al
  403347:	repnz cwde 
  403349:	imul   esi,eax,0xe64ec2b
  40334f:	(bad)  
  403350:	retf   0x877d
  403353:	dec    ecx
  403354:	push   eax
  403355:	cmp    ebx,ebp
  403357:	fldcw  WORD PTR [esp+esi*2]
  40335a:	add    dh,BYTE PTR [ecx+ebx*8+0x5f89d8c6]
  403361:	out    0xca,eax
  403363:	adc    al,BYTE PTR [esi-0x6c8718fd]
  403369:	(bad)  
  40336b:	xchg   ebx,eax
  40336c:	push   edi
  40336d:	fwait
  40336e:	push   esp
  40336f:	jno    0x403302
  403371:	fst    QWORD PTR [eax+0x24393dff]
  403377:	test   al,0xee
  403379:	xor    eax,0xe5f5947d
  40337e:	adc    eax,0x483c76b4
  403383:	ror    ecx,cl
  403385:	add    al,0xb2
  403387:	add    ah,dh
  403389:	aad    0xa6
  40338b:	adc    esi,DWORD PTR [edi]
  40338d:	rol    BYTE PTR [esi-0x2e],0xd2
  403391:	adc    ch,BYTE PTR [edi]
  403393:	ins    BYTE PTR es:[edi],dx
  403394:	lds    esp,FWORD PTR [eax+0x64]
  403397:	stc    
  403398:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403399:	add    BYTE PTR [edx-0x7c762e5e],cl
  40339f:	jmp    0x56a4746f
  4033a4:	or     al,0xe7
  4033a6:	push   edx
  4033a7:	mov    dl,0xdf
  4033a9:	push   cs
  4033aa:	adc    ah,BYTE PTR [ecx-0x5]
  4033ad:	sub    ah,BYTE PTR [ebx-0x46]
  4033b0:	xor    al,0x93
  4033b2:	and    BYTE PTR ds:0x73092c1,ah
  4033b8:	repnz push 0x811c1f1a
  4033be:	inc    ebx
  4033bf:	aas    
  4033c0:	or     ecx,DWORD PTR [eax+0x169d0167]
  4033c6:	fnstcw WORD PTR [edx+0x5dccc96c]
  4033cc:	adc    BYTE PTR [edx],cl
  4033ce:	stos   BYTE PTR es:[edi],al
  4033cf:	sub    al,0xc9
  4033d1:	js     0x40339c
  4033d3:	in     eax,0x7d
  4033d5:	mov    esi,0xa69ce9ab
  4033da:	data16 sbb al,BYTE PTR [ecx+edi*1]
  4033de:	outs   dx,DWORD PTR ds:[esi]
  4033df:	inc    ebx
  4033e0:	add    BYTE PTR [ecx],0xba
  4033e3:	jno    0x4033fb
  4033e5:	shl    DWORD PTR [ebx+eiz*4-0x2c],0xdc
  4033ea:	xor    DWORD PTR [ebx+0x355ac169],edi
  4033f0:	or     ch,dh
  4033f2:	aam    0xd7
  4033f4:	jmp    0x403390
  4033f6:	push   ss
  4033f7:	(bad)  
  4033f8:	outs   dx,DWORD PTR ds:[esi]
  4033f9:	nop
  4033fa:	or     BYTE PTR [edx-0x1926f208],0xcb
  403401:	jmpw   0xcbd7
  403405:	add    al,0xee
  403407:	mov    dh,0xb1
  403409:	call   0x21858d05
  40340e:	mov    ds:0xa206f506,eax
  403413:	xchg   esi,eax
  403414:	push   ebp
  403415:	mov    al,BYTE PTR [ebx-0x18606d9f]
  40341b:	dec    esi
  40341c:	and    eax,0x419215ee
  403421:	push   cs
  403422:	mov    ch,0xfe
  403424:	add    al,0xb4
  403426:	adc    al,0xd9
  403428:	cdq    
  403429:	dec    ebx
  40342a:	iret   
  40342b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40342c:	push   eax
  40342d:	shl    BYTE PTR [esp+eiz*2],1
  403430:	sbb    dh,dl
  403432:	xchg   ecx,eax
  403433:	rcl    BYTE PTR [ebx],0x4e
  403436:	pop    edi
  403437:	mov    ah,0x25
  403439:	push   ds
  40343a:	fs call 0xeb83aa3d
  403440:	lods   al,BYTE PTR ds:[esi]
  403441:	mov    DWORD PTR [edi+0x57],ebx
  403444:	fiadd  DWORD PTR [edi-0x4f7e05f2]
  40344a:	mov    ds:0x32fd812a,eax
  40344f:	ja     0x40347f
  403451:	popf   
  403452:	test   BYTE PTR [ebx],bl
  403454:	mov    cl,0x8c
  403456:	jmp    0xc760:0xcfb29fd0
  40345d:	mov    dh,0x4f
  40345f:	dec    ecx
  403460:	push   ds
  403461:	sbb    eax,0x55ebb733
  403466:	push   ebx
  403467:	push   ss
  403468:	lock pop esp
  40346a:	cmp    eax,0x14544485
  40346f:	push   ebp
  403470:	jmp    0x7becd279
  403475:	mov    WORD PTR [ebp-0x4e],cs
  403478:	cs jmp 0xb085:0x334bb635
  403480:	xchg   BYTE PTR [ebx],dh
  403482:	outs   dx,BYTE PTR ds:[esi]
  403483:	xchg   esi,eax
  403484:	lea    edx,[ecx-0x16df3118]
  40348a:	loope  0x403482
  40348c:	push   edx
  40348d:	call   DWORD PTR ds:0xb1a214ea
  403493:	xor    BYTE PTR [eax],dl
  403495:	cmp    bh,0x58
  403498:	mov    edx,0xfca3b02d
  40349d:	add    eax,DWORD PTR [ecx]
  40349f:	mov    DWORD PTR [edx-0x190e5998],edx
  4034a5:	cld    
  4034a6:	add    al,0x46
  4034a8:	adc    eax,0xaf857f05
  4034ad:	scas   eax,DWORD PTR es:[edi]
  4034ae:	push   ebx
  4034af:	mov    bh,0x21
  4034b1:	and    dl,BYTE PTR [ebp-0x3daa58eb]
  4034b7:	mov    esi,0x49d67eae
  4034bc:	push   esi
  4034bd:	daa    
  4034be:	jg     0x4034e2
  4034c0:	data16 adc al,bh
  4034c3:	or     al,al
  4034c5:	cdq    
  4034c6:	or     al,0xfb
  4034c8:	push   ss
  4034c9:	(bad)  
  4034ca:	jae    0x4034e8
  4034cc:	sar    DWORD PTR [ecx+0x1ccbd124],cl
  4034d2:	stc    
  4034d3:	ret    0x6c83
  4034d6:	or     al,0x2
  4034d8:	das    
  4034d9:	lea    eax,[ecx]
  4034db:	popf   
  4034dc:	mov    esi,0x7ecb7b2c
  4034e1:	js     0x4034f1
  4034e3:	push   es
  4034e4:	inc    eax
  4034e5:	mov    ds:0x760b77c9,eax
  4034ea:	pop    ebp
  4034eb:	fsubr  st,st(4)
  4034ed:	jge    0x403504
  4034ef:	pusha  
  4034f0:	adc    dh,BYTE PTR [ebp+0x6a670f2]
  4034f6:	sub    DWORD PTR [ebp+0x18],ebx
  4034f9:	daa    
  4034fa:	pop    ss
  4034fb:	push   edi
  4034fc:	gs call 0xbe4ef248
  403502:	jmp    0xba89:0xa808c0cb
  403509:	rol    ecx,cl
  40350b:	sar    al,cl
  40350d:	fnstenv [esi]
  40350f:	cmc    
  403510:	cmp    ebp,DWORD PTR [eax]
  403512:	xchg   DWORD PTR [eax-0x3f],edx
  403515:	inc    edi
  403516:	add    DWORD PTR [eax],edx
  403518:	xchg   edi,eax
  403519:	leave  
  40351a:	inc    ebx
  40351b:	sbb    DWORD PTR [edx],ecx
  40351d:	sub    BYTE PTR [esi-0x1d5ed295],0x7b
  403524:	xor    al,0xbb
  403526:	mov    WORD PTR [ecx+ebx*1+0x52],ss
  40352a:	xchg   ecx,eax
  40352b:	mov    dl,BYTE PTR [edx-0xeb9fbea]
  403531:	xchg   esi,eax
  403532:	xlat   BYTE PTR ds:[ebx]
  403533:	jmp    0x2dcc:0x62d23cde
  40353a:	es ror ah,0x41
  40353e:	out    0x21,eax
  403540:	bound  ecx,QWORD PTR ds:0xb293178a
  403546:	stos   BYTE PTR es:[edi],al
  403547:	push   esi
  403548:	cld    
  403549:	xchg   ecx,eax
  40354a:	in     eax,dx
  40354b:	mov    dh,0xa8
  40354d:	popf   
  40354e:	xor    DWORD PTR [ebx-0x62],ebx
  403551:	in     al,dx
  403552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403553:	out    0x4b,eax
  403555:	cwde   
  403556:	test   al,0x90
  403558:	sti    
  403559:	call   0x3bc7:0x96dfd152
  403560:	js     0x403507
  403562:	ins    BYTE PTR es:[edi],dx
  403563:	jmp    FWORD PTR [ebx-0x57]
  403566:	rol    bh,1
  403568:	js     0x4034fd
  40356a:	pop    es
  40356b:	clc    
  40356c:	sub    eax,0xca1870cf
  403571:	mov    BYTE PTR [ecx-0x11],0x44
  403575:	pop    es
  403576:	scas   al,BYTE PTR es:[edi]
  403577:	xor    DWORD PTR [ebx+0x6d4f27f0],ebx
  40357d:	and    al,BYTE PTR [esi]
  40357f:	dec    ebp
  403580:	fcomp  QWORD PTR ds:0xaab8d361
  403586:	fisttp WORD PTR [ebx+0x6b9a2823]
  40358c:	ins    BYTE PTR es:[edi],dx
  40358d:	pop    esi
  40358e:	lds    esp,FWORD PTR [esi]
  403590:	call   0x7f8421a6
  403595:	cld    
  403596:	fnstsw WORD PTR [esi-0x5596bd63]
  40359c:	jge    0x403619
  40359e:	sub    al,0x5d
  4035a0:	adc    DWORD PTR [ebx-0x23],edx
  4035a3:	xchg   ecx,eax
  4035a4:	addr16 push ebp
  4035a6:	ret    0x77f9
  4035a9:	dec    ebx
  4035aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035ab:	icebp  
  4035ac:	and    al,0x3
  4035ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035af:	test   al,0xc8
  4035b1:	nop
  4035b2:	and    BYTE PTR [ecx-0x6d1978b6],ch
  4035b8:	in     al,0xe5
  4035ba:	push   ebp
  4035bb:	jle    0x403559
  4035bd:	cmc    
  4035be:	jo     0x4035af
  4035c0:	mov    ah,0xc9
  4035c2:	xchg   edi,eax
  4035c3:	or     al,bh
  4035c5:	daa    
  4035c6:	jne    0x4035ba
  4035c8:	ror    edi,1
  4035ca:	ret    
  4035cb:	pop    ds
  4035cc:	popa   
  4035cd:	fild   QWORD PTR [ecx-0x210cc199]
  4035d3:	loop   0x40364a
  4035d5:	mov    DWORD PTR [eax],esi
  4035d7:	pop    ecx
  4035d8:	std    
  4035d9:	popf   
  4035da:	cmp    cl,dl
  4035dc:	mov    eax,0x6642dce2
  4035e1:	fidivr DWORD PTR [ebx-0x67dc1b]
  4035e7:	sub    edx,DWORD PTR [eax+0x51b4ee34]
  4035ed:	rol    ebp,cl
  4035ef:	in     eax,dx
  4035f0:	jmp    0x4035c5
  4035f2:	push   esi
  4035f3:	icebp  
  4035f4:	jne    0x4035ce
  4035f6:	pmovmskb edx,mm1
  4035f9:	cmc    
  4035fa:	cs out 0x27,al
  4035fd:	stos   BYTE PTR es:[edi],al
  4035fe:	fsubrp st(2),st
  403600:	sbb    bl,bl
  403602:	lock fninit 
  403605:	out    0x67,eax
  403607:	test   eax,0x5c86400c
  40360c:	les    esp,FWORD PTR [esp+edx*8+0x62]
  403610:	jnp    0x403600
  403612:	sbb    bh,BYTE PTR [eax-0x196337f7]
  403618:	jge    0x4035c7
  40361a:	pop    ss
  40361b:	fstp   DWORD PTR [ecx+eax*8]
  40361e:	hlt    
  40361f:	fstp   DWORD PTR [eax+edi*2]
  403622:	int3   
  403623:	cmp    esi,DWORD PTR ds:0x8e318ab5
  403629:	and    bl,BYTE PTR [eax]
  40362b:	(bad)  
  40362c:	fidivr DWORD PTR [esi+0x52e7ceb3]
  403632:	iret   
  403633:	ror    DWORD PTR [ebx+0x66765],cl
  403639:	clc    
  40363a:	stc    
  40363b:	ficom  WORD PTR [ecx+eiz*1]
  40363e:	dec    ecx
  40363f:	shr    ah,0x49
  403642:	mov    esi,0xc6dd3fca
  403647:	sub    bh,ch
  403649:	mov    eax,0x1c60ffc3
  40364e:	imul   esi,DWORD PTR [edi],0x5f
  403651:	and    esi,DWORD PTR [eax-0xe9afd63]
  403657:	sub    eax,0x9fad7e00
  40365c:	jb     0x40362a
  40365e:	(bad)  
  403660:	retf   
  403661:	aas    
  403662:	bound  ebx,QWORD PTR [ecx]
  403664:	repnz repnz sbb DWORD PTR [ebp+0x48],ecx
  403669:	push   eax
  40366a:	fsub   QWORD PTR [edx+0x22ced9d5]
  403670:	mov    esi,0xa64c910c
  403675:	pusha  
  403676:	or     WORD PTR [esi+0x5727775b],dx
  40367d:	cmp    bh,BYTE PTR [edi]
  40367f:	int    0x50
  403681:	ret    0x4a6c
  403684:	adc    edi,DWORD PTR [ecx-0x7b]
  403687:	in     eax,dx
  403688:	mov    ch,al
  40368a:	outs   dx,BYTE PTR ds:[esi]
  40368b:	xchg   ebx,eax
  40368c:	je     0x4036cb
  40368e:	jne    0x4036ea
  403690:	mov    dl,0x39
  403692:	stos   DWORD PTR es:[edi],eax
  403693:	mov    cl,0xfa
  403695:	mov    ah,0xdf
  403697:	inc    esi
  403698:	sbb    edx,DWORD PTR [eax+0x7ae77d6e]
  40369e:	mov    ds,WORD PTR [ebp+esi*8+0x1d]
  4036a2:	jne    0x403714
  4036a4:	popa   
  4036a5:	lahf   
  4036a6:	lods   al,BYTE PTR ds:[esi]
  4036a7:	arpl   WORD PTR [edx-0x1071928d],si
  4036ad:	loop   0x40367e
  4036af:	out    dx,al
  4036b0:	mov    ds:0xbbde8548,eax
  4036b5:	mov    dh,0xd2
  4036b7:	and    al,0xd
  4036b9:	or     eax,DWORD PTR [eax+0x5e]
  4036bc:	push   eax
  4036bd:	sbb    eax,0xbbd05819
  4036c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036c3:	test   BYTE PTR [ebp+0x5a1425c7],bl
  4036c9:	out    0xa8,al
  4036cb:	push   ebx
  4036cc:	lods   al,BYTE PTR ds:[esi]
  4036cd:	fwait
  4036ce:	adc    edx,DWORD PTR [ecx-0x1c]
  4036d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036d2:	ret    
  4036d3:	xchg   ebp,eax
  4036d4:	xchg   esp,eax
  4036d5:	scas   eax,DWORD PTR es:[edi]
  4036d6:	ret    
  4036d7:	jl     0x40371a
  4036d9:	or     al,0x6
  4036db:	(bad)  
  4036dc:	inc    DWORD PTR [ecx]
  4036de:	cmc    
  4036df:	ret    
  4036e0:	jae    0x403682
  4036e2:	inc    edi
  4036e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036e4:	shl    bl,0x4e
  4036e7:	(bad)  
  4036e8:	cs xchg edi,eax
  4036ea:	adc    al,0x9e
  4036ec:	and    edi,DWORD PTR [eax+eiz*2-0x7a2c047]
  4036f3:	dec    ebp
  4036f4:	pop    edx
  4036f5:	jmp    0xa42bbba4
  4036fa:	data16 shl BYTE PTR [esi],1
  4036fd:	xchg   ebp,eax
  4036fe:	xchg   BYTE PTR cs:[edi+ecx*2-0x25e3b2d1],al
  403706:	(bad)  
  403707:	nop
  403708:	xchg   ebx,eax
  403709:	dec    eax
  40370a:	mov    edx,0x86f9a08d
  40370f:	(bad)  
  403710:	xchg   esi,eax
  403711:	shr    al,1
  403713:	loope  0x403719
  403715:	push   0x3a65a8ee
  40371a:	repnz ficom WORD PTR [eax+eax*8+0x3bdc10cd]
  403722:	xor    eax,0x8388a256
  403727:	mov    al,0xed
  403729:	sbb    ecx,eax
  40372b:	(bad)  
  40372c:	mov    dl,0x56
  40372e:	mov    ds:0xfbf483c5,eax
  403733:	fstp   DWORD PTR ds:0xbccf24a8
  403739:	or     ah,BYTE PTR [edx+0x4ad4ebf7]
  40373f:	dec    eax
  403740:	ins    BYTE PTR es:[edi],dx
  403741:	arpl   bx,si
  403743:	mov    ebp,0x55973585
  403748:	fld    DWORD PTR [ebx+0x25]
  40374b:	outs   dx,DWORD PTR ds:[esi]
  40374c:	push   ecx
  40374d:	xchg   ebx,eax
  40374e:	jle    0x403715
  403750:	push   es
  403751:	or     BYTE PTR [eax-0x2a682321],dl
  403757:	or     eax,0x63f2e51f
  40375c:	pushf  
  40375d:	repnz test BYTE PTR [esi+0x33941200],bl
  403764:	jb     0x40376c
  403766:	push   edx
  403767:	es jae 0x4036fc
  40376a:	fdiv   QWORD PTR [edi+edx*8+0x0]
  40376e:	sar    DWORD PTR [edx-0x7a],1
  403771:	jne    0x4036fc
  403773:	loope  0x40378e
  403775:	jmp    DWORD PTR [eax-0x34b7b8dd]
  40377b:	icebp  
  40377c:	cwde   
  40377d:	push   edi
  40377e:	or     ebp,DWORD PTR cs:[esi]
  403781:	sub    al,0x2a
  403783:	adc    eax,0x250c2a36
  403788:	cdq    
  403789:	push   esi
  40378a:	cmp    al,0xe5
  40378c:	(bad)  
  40378d:	jbe    0x4037d7
  40378f:	gs cld 
  403791:	mov    ss,WORD PTR [ecx+0x729323ab]
  403797:	std    
  403798:	cmc    
  403799:	(bad)  
  40379a:	in     al,0x64
  40379c:	push   0xffffffa5
  40379e:	(bad)  
  4037a0:	in     eax,dx
  4037a1:	jne    0x4037dd
  4037a3:	gs mov esp,0x9459968a
  4037a9:	add    BYTE PTR [ebx],ah
  4037ab:	adc    BYTE PTR [esi+0xcac69b],0x87
  4037b2:	js     0x403814
  4037b4:	icebp  
  4037b5:	jae    0x4037de
  4037b7:	sub    DWORD PTR [edi-0x2a],0xadfffed
  4037be:	sbb    eax,0x69730a72
  4037c3:	adc    eax,0xe3d3124c
  4037c8:	mov    ecx,0x4f3aee1
  4037cd:	fcmovu st,st(3)
  4037cf:	inc    esp
  4037d0:	repnz pop eax
  4037d2:	pcmpgtw mm1,QWORD PTR [eax]
  4037d5:	ret    0xe3b2
  4037d8:	rcl    ecx,cl
  4037da:	dec    eax
  4037db:	xchg   edx,eax
  4037dc:	add    cl,BYTE PTR [ebx]
  4037de:	leave  
  4037df:	mov    eax,ds:0x7e0d4150
  4037e4:	fwait
  4037e5:	adc    BYTE PTR [ebx],0x24
  4037e8:	cs stc 
  4037ea:	lea    esi,[ecx-0x75af7c97]
  4037f0:	loope  0x403831
  4037f2:	jge    0x4037c3
  4037f4:	lea    ebp,[edi-0x2b5ae61e]
  4037fa:	adc    al,0xde
  4037fc:	lds    eax,FWORD PTR [edi+0x7587191c]
  403802:	and    al,BYTE PTR [ecx]
  403804:	cmp    esp,ecx
  403806:	push   edi
  403807:	test   ebp,esp
  403809:	sub    eax,0xaf5db1ba
  40380e:	mov    al,ds:0x9cfe8d70
  403813:	ja     0x40385b
  403815:	pusha  
  403816:	xchg   BYTE PTR [ebp-0x3b],bl
  403819:	fiadd  DWORD PTR [edi+0x6a78d7cf]
  40381f:	adc    eax,0x339b0e62
  403824:	mov    ebx,edi
  403826:	and    BYTE PTR [ebp-0x38],0xad
  40382a:	popa   
  40382b:	test   BYTE PTR [ebx+0x600c208f],bl
  403831:	mov    al,dh
  403833:	cwde   
  403834:	adc    BYTE PTR [edx+0x7d],bh
  403837:	push   0x61
  403839:	popf   
  40383a:	es popa 
  40383c:	xchg   edx,eax
  40383d:	mov    edx,DWORD PTR [ebp+0x5a]
  403840:	inc    ecx
  403841:	jecxz  0x40386c
  403843:	std    
  403844:	or     BYTE PTR [eax+0x52],bl
  403847:	pusha  
  403848:	int3   
  403849:	cdq    
  40384a:	and    cl,BYTE PTR [edi+0xde98f51]
  403850:	xor    ebp,esp
  403852:	inc    edi
  403853:	test   esp,ebx
  403855:	outs   dx,BYTE PTR ds:[si]
  403857:	sub    BYTE PTR [edi+edx*4+0x10],dh
  40385b:	sub    dl,BYTE PTR ds:0x13b1cd2d
  403862:	lock loop 0x403844
  403865:	xchg   ebp,eax
  403866:	mov    esp,0xc97f43c4
  40386b:	out    dx,al
  40386c:	add    BYTE PTR [ebx+0x11e4adf1],bh
  403872:	pop    ss
  403873:	cmc    
  403874:	mov    ecx,0x691193ba
  403879:	call   0xb2aa:0x80e71470
  403880:	xor    al,0x32
  403882:	int    0x3
  403884:	xchg   ebp,eax
  403885:	retf   
  403886:	dec    ebp
  403887:	and    DWORD PTR [ecx+0x64],esp
  40388a:	fimul  DWORD PTR [esi+0x209c3393]
  403890:	stc    
  403891:	pop    ds
  403892:	retf   
  403893:	test   eax,0x39b68c15
  403898:	fdivr  QWORD PTR [eax]
  40389a:	lods   eax,DWORD PTR ds:[esi]
  40389b:	int3   
  40389c:	add    DWORD PTR [edx+0x7059f689],0x34
  4038a3:	adc    eax,0xd584410
  4038a8:	imul   ecx,DWORD PTR [ebx],0xffffffbb
  4038ab:	stos   DWORD PTR es:[edi],eax
  4038ac:	and    BYTE PTR [edx],0x48
  4038af:	or     DWORD PTR [ecx],ecx
  4038b1:	into   
  4038b2:	fdivr  QWORD PTR [edx]
  4038b4:	lock add DWORD PTR [edi],0xffffffe7
  4038b8:	jmp    0x4038bc
  4038ba:	outs   dx,BYTE PTR ds:[esi]
  4038bb:	mov    dh,0x66
  4038bd:	jp     0x4038b3
  4038bf:	sub    BYTE PTR [ecx],ch
  4038c1:	aad    0x93
  4038c3:	scas   al,BYTE PTR es:[edi]
  4038c4:	cmp    al,0x90
  4038c6:	lock fist DWORD PTR [edx+ecx*1+0x54]
  4038cb:	call   0x9b413688
  4038d0:	jae    0x4038b3
  4038d2:	inc    eax
  4038d3:	int    0xd0
  4038d5:	add    BYTE PTR [ebx+0x1],0x7c
  4038d9:	loopne 0x403947
  4038db:	arpl   cx,sp
  4038dd:	cmp    DWORD PTR ds:0x4735af56,eax
  4038e3:	out    0x99,eax
  4038e5:	add    ch,BYTE PTR ds:0x39994f20
  4038eb:	stc    
  4038ec:	shr    eax,0x53
  4038ef:	pop    ebp
  4038f0:	adc    al,0x4d
  4038f2:	enter  0x7db8,0xd6
  4038f6:	(bad)
  4038f9:	push   esi
  4038fa:	rcr    ecx,1
  4038fc:	call   0xdef189e2
  403901:	sub    DWORD PTR [edx-0x4cfd446e],edx
  403907:	ds out 0x34,eax
  40390a:	cwde   
  40390b:	imul   ebx,DWORD PTR [esi+0x5f764c7a],0x89c32222
  403915:	adc    al,0x16
  403917:	add    al,0x7b
  403919:	xchg   esi,eax
  40391a:	pusha  
  40391b:	cdq    
  40391c:	push   ecx
  40391d:	mov    ch,0xc8
  40391f:	aad    0x5a
  403921:	ror    BYTE PTR fs:[ebp+0x45],0x8d
  403926:	sahf   
  403927:	std    
  403928:	mov    esi,0xbc95ddf4
  40392d:	adc    BYTE PTR [edi+0x470f15b],dh
  403933:	jb     0x4038d5
  403935:	aaa    
  403936:	lods   al,BYTE PTR ds:[esi]
  403937:	xchg   ebx,eax
  403938:	sbb    DWORD PTR [ebx-0x5],ebx
  40393b:	push   esi
  40393c:	pop    esp
  40393d:	bound  ebx,QWORD PTR [ecx]
  40393f:	out    dx,eax
  403940:	jbe    0x403931
  403942:	pop    ebp
  403943:	lods   al,BYTE PTR ds:[esi]
  403944:	or     ah,BYTE PTR [ebp+ebp*8-0x63]
  403948:	nop
  403949:	or     esp,eax
  40394b:	clc    
  40394c:	pop    ds
  40394d:	lods   al,BYTE PTR ds:[esi]
  40394e:	retf   
  40394f:	sub    dl,dl
  403951:	add    BYTE PTR [esi-0x577783b4],al
  403957:	scas   eax,DWORD PTR es:[edi]
  403958:	shl    DWORD PTR ds:0x544a55bb,cl
  40395e:	push   edi
  40395f:	test   DWORD PTR [ebx-0xfcabcae],edx
  403965:	or     DWORD PTR [ebx-0xfebb706],0xa0c1269a
  40396f:	xlat   BYTE PTR ds:[ebx]
  403970:	jnp    0x4038f4
  403972:	fsubr  QWORD PTR [ebx+edx*4+0x27]
  403976:	and    edx,DWORD PTR [eax]
  403978:	cmp    bh,dl
  40397a:	aad    0x17
  40397c:	mov    al,ds:0xaca88a7d
  403981:	sbb    ah,ch
  403983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403984:	pop    ebp
  403985:	out    dx,eax
  403986:	pop    ss
  403987:	cmp    eax,0xef133fa0
  40398c:	ret    0xa7b
  40398f:	(bad)  
  403990:	xor    BYTE PTR [ebx+0x21b02d0d],0xb
  403997:	loopne 0x403971
  403999:	add    bh,bl
  40399b:	enter  0x5eda,0x2c
  40399f:	call   0xd630c0e0
  4039a4:	(bad)  
  4039a5:	adc    BYTE PTR [ecx-0x70bd576a],bl
  4039ab:	cmp    edx,esp
  4039ad:	adc    eax,0x7e4b8d95
  4039b2:	xor    BYTE PTR [ebx+ecx*1+0x10],cl
  4039b6:	cmp    eax,0x64d3380b
  4039bb:	cmp    eax,0x12898e8f
  4039c0:	push   ss
  4039c1:	sbb    BYTE PTR [ebx+0x4f9073e2],ch
  4039c7:	sub    BYTE PTR [ebp+0x382cfa3d],ch
  4039cd:	mov    edx,esp
  4039cf:	in     eax,dx
  4039d0:	out    0x0,al
  4039d2:	sbb    ch,BYTE PTR [eax]
  4039d4:	sti    
  4039d5:	test   eax,0x4d411413
  4039da:	movnti DWORD PTR [esi],esi
  4039dd:	sub    ebp,DWORD PTR [ebx]
  4039df:	in     al,0x6c
  4039e1:	mov    ecx,DWORD PTR [edi-0xfd00cf2]
  4039e7:	mov    edx,0x92f2e2cb
  4039ec:	and    eax,0x957448c1
  4039f1:	mov    bl,0x5f
  4039f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039f4:	add    al,0x2
  4039f6:	scas   al,BYTE PTR es:[edi]
  4039f7:	fldcw  WORD PTR [edx+0x1f6872e4]
  4039fd:	and    BYTE PTR [ecx-0x7bd1b9ae],ch
  403a03:	jb     0x4039c9
  403a05:	mov    ebx,0xe6f7e325
  403a0a:	cmp    BYTE PTR ds:0x76e4d600,ch
  403a10:	adc    eax,0x5c6dff17
  403a15:	and    bh,BYTE PTR [edx+ebp*8-0xc]
  403a19:	ret    
  403a1a:	pop    ss
  403a1b:	pop    eax
  403a1c:	xor    al,0x8
  403a1e:	sti    
  403a1f:	jae    0x4039d7
  403a21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a22:	test   DWORD PTR cs:[edx+0x6fafd645],edx
  403a29:	sub    al,cl
  403a2b:	or     BYTE PTR [esi-0x1d],0x7c
  403a2f:	(bad)  
  403a31:	mov    DWORD PTR [ebx+0x31],edi
  403a34:	bound  esp,QWORD PTR [ebx-0x74]
  403a37:	pop    ecx
  403a38:	or     bl,ah
  403a3a:	cmp    eax,DWORD PTR [edi]
  403a3c:	cmc    
  403a3d:	loope  0x403a0b
  403a3f:	cmp    eax,0xdbf14bde
  403a44:	or     al,0x79
  403a46:	or     eax,DWORD PTR [edx+0x546f2718]
  403a4c:	aaa    
  403a4d:	das    
  403a4e:	fwait
  403a4f:	dec    ebx
  403a50:	rcl    BYTE PTR [ebx],cl
  403a52:	cmp    ah,BYTE PTR [esi-0x1c]
  403a55:	rcl    DWORD PTR [edi+0x4af35aca],0xae
  403a5c:	sti    
  403a5d:	xchg   edi,eax
  403a5e:	mov    al,ds:0x9db3ce48
  403a63:	ds (bad) 
  403a65:	fs dec ecx
  403a67:	cdq    
  403a68:	mov    esp,0x3037491a
  403a6d:	cmp    dl,BYTE PTR [edi-0x3c]
  403a70:	fcmovnbe st,st(6)
  403a72:	call   0xefe64485
  403a77:	aam    0xd0
  403a79:	std    
  403a7a:	je     0x403a10
  403a7c:	jmp    0xb644:0xba9eb0f5
  403a83:	dec    edx
  403a84:	pushf  
  403a85:	mov    gs,WORD PTR [ebx*8-0x4f075b6c]
  403a8c:	jb     0x403aa8
  403a8e:	jle    0x403a7c
  403a90:	fs adc bh,ch
  403a93:	aas    
  403a94:	or     al,BYTE PTR [eax-0x533f785]
  403a9a:	rol    DWORD PTR fs:[ecx+0x32],cl
  403a9e:	fmul   QWORD PTR gs:[ebx]
  403aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403aa2:	mov    al,ds:0xa30753f3
  403aa7:	pusha  
  403aa8:	pop    ebx
  403aa9:	jmp    0xe9aae2b4
  403aae:	sub    al,0x19
  403ab0:	aas    
  403ab1:	pop    es
  403ab2:	retf   
  403ab3:	mov    ah,0x7
  403ab5:	dec    esi
  403ab6:	jno    0x403b1a
  403ab8:	mov    BYTE PTR [ebx+0x68603acc],0x1f
  403abf:	mov    ah,0xda
  403ac1:	pop    es
  403ac2:	cli    
  403ac3:	add    DWORD PTR [ecx],0x91292c1e
  403ac9:	jae    0x403a5d
  403acb:	mov    ds:0xf9ee1cbe,al
  403ad0:	dec    eax
  403ad1:	out    0x5a,al
  403ad3:	icebp  
  403ad4:	nop
  403ad5:	jle    0x403b52
  403ad7:	sbb    eax,0x3eef21c8
  403adc:	clc    
  403add:	adc    dl,BYTE PTR [ecx-0x41]
  403ae0:	push   ds
  403ae1:	or     bl,BYTE PTR [eax]
  403ae3:	xchg   ebp,eax
  403ae4:	imul   ebx,DWORD PTR [edx-0x16],0x8dfa19d4
  403aeb:	je     0x403b63
  403aed:	or     eax,0xaaf69205
  403af2:	ss leave 
  403af4:	and    dl,cl
  403af6:	ficom  DWORD PTR [ecx+edi*8+0x2d]
  403afa:	in     eax,0xe
  403afc:	jecxz  0x403b10
  403afe:	push   edi
  403aff:	inc    eax
  403b00:	mov    esi,0x80c86e2e
  403b05:	push   0xc5af6ddd
  403b0a:	je     0x403b07
  403b0c:	xor    eax,0x4808934b
  403b11:	icebp  
  403b12:	(bad)  
  403b13:	jmp    0x403b3b
  403b15:	mov    eax,0xeae6b92a
  403b1a:	ins    BYTE PTR es:[edi],dx
  403b1b:	sub    DWORD PTR [ebx-0x11236ff3],esi
  403b21:	cld    
  403b22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b23:	and    dh,bl
  403b25:	inc    eax
  403b26:	sbb    eax,0x8907565
  403b2b:	xor    dh,BYTE PTR [edx+ecx*2-0x11664302]
  403b32:	cmp    BYTE PTR [ebx+0x12fdbdd],0x7a
  403b39:	or     DWORD PTR [edi-0x17],edx
  403b3c:	mov    bh,0x99
  403b3e:	add    ch,BYTE PTR ds:0xfc45c688
  403b44:	jns    0x403b81
  403b46:	sbb    BYTE PTR [edi+ebp*2-0x2d],0x49
  403b4b:	mov    eax,edx
  403b4d:	fs jp  0x403bb5
  403b50:	arpl   WORD PTR [edx],bp
  403b52:	add    ch,BYTE PTR [ecx+0x21]
  403b55:	cmp    al,ch
  403b57:	mov    dl,0xb4
  403b59:	loop   0x403b98
  403b5b:	sub    DWORD PTR [edi-0x3e4a4691],edi
  403b61:	sub    edi,DWORD PTR [ecx-0x47679fc6]
  403b67:	dec    DWORD PTR [ecx-0x575a43e4]
  403b6d:	std    
  403b6e:	push   edx
  403b6f:	mov    ebx,0x4de4b336
  403b74:	and    BYTE PTR [ebx+edx*2+0x65d7b3be],0x4e
  403b7c:	call   esi
  403b7e:	retf   
  403b7f:	cdq    
  403b80:	and    ch,0x62
  403b83:	inc    edx
  403b84:	cli    
  403b85:	test   BYTE PTR [edx-0x5f9f60e8],dl
  403b8b:	jecxz  0x403beb
  403b8d:	mov    edx,0x62d51eea
  403b92:	dec    eax
  403b93:	out    0xf0,al
  403b95:	pop    es
  403b96:	sub    eax,0x813b3019
  403b9b:	dec    eax
  403b9c:	out    dx,eax
  403b9d:	inc    esi
  403b9e:	mov    dl,0x5b
  403ba0:	lea    eax,[ebx]
  403ba2:	and    eax,0x46ed8eaa
  403ba7:	mov    bl,0x10
  403ba9:	cmp    bh,BYTE PTR [eax+0x47d06bb2]
  403baf:	test   dh,0x25
  403bb2:	push   ecx
  403bb3:	rcl    BYTE PTR [edx-0x71],0xbd
  403bb7:	adc    BYTE PTR [edi-0x5df66c50],bh
  403bbd:	mov    eax,ds:0x5b7b7736
  403bc2:	xchg   ecx,eax
  403bc3:	out    0x6e,al
  403bc5:	xor    ecx,DWORD PTR [edi]
  403bc7:	sbb    eax,0x426dc716
  403bcc:	mov    cl,BYTE PTR [edx]
  403bce:	gs push es
  403bd0:	test   BYTE PTR [edx+0x2daaa2a0],0x61
  403bd7:	(bad)  [esi]
  403bd9:	push   esi
  403bda:	xor    DWORD PTR [ebp+0x6ef58423],ecx
  403be0:	mov    eax,ds:0xbd2627cd
  403be5:	mov    eax,0x97d99967
  403bea:	popf   
  403beb:	mov    cl,0xf9
  403bed:	push   ds
  403bee:	pop    esp
  403bef:	mov    ebp,0xba16ec64
  403bf4:	mov    cl,0xe0
  403bf6:	(bad)  
  403bf7:	ins    DWORD PTR es:[edi],dx
  403bf8:	shl    dl,cl
  403bfa:	add    BYTE PTR [ebp+0x5a53357a],dh
  403c00:	mov    fs,WORD PTR [esi+0x32]
  403c03:	retf   
  403c04:	cmp    eax,0xf8429bf6
  403c09:	push   es
  403c0a:	xchg   BYTE PTR [ecx+0x74c2e927],ah
  403c10:	loop   0x403bcf
  403c12:	push   0x9a52e2aa
  403c17:	outs   dx,BYTE PTR ds:[esi]
  403c18:	or     al,0xcd
  403c1a:	fwait
  403c1b:	call   0xcc5ce5e
  403c20:	mov    al,0x3f
  403c22:	xchg   edi,eax
  403c23:	pop    esp
  403c24:	mov    esi,ebp
  403c26:	mov    eax,ds:0xbd113f71
  403c2b:	pop    ss
  403c2c:	cld    
  403c2d:	adc    cl,BYTE PTR [edx]
  403c2f:	mov    eax,DWORD PTR [eax]
  403c31:	leave  
  403c32:	mov    dl,0x3c
  403c34:	xchg   esp,eax
  403c35:	shr    DWORD PTR [edx+0x1ca55e13],0x17
  403c3c:	inc    esp
  403c3d:	or     al,0x75
  403c3f:	push   cs
  403c40:	(bad)  
  403c41:	out    0x36,al
  403c43:	retf   
  403c44:	mov    esi,0x773d680e
  403c49:	add    ebx,DWORD PTR [edx-0x3b]
  403c4c:	sub    al,0x49
  403c4e:	das    
  403c4f:	xchg   ecx,eax
  403c50:	aas    
  403c51:	jmp    0x70ee:0x895379f9
  403c58:	adc    eax,0xc8ec76a6
  403c5d:	ins    BYTE PTR es:[di],dx
  403c5f:	(bad)  
  403c60:	fimul  DWORD PTR [esi+0x1aba2289]
  403c66:	cli    
  403c67:	inc    edi
  403c68:	or     eax,0xdfe2048d
  403c6d:	push   ecx
  403c6e:	push   0xffffffee
  403c70:	sbb    DWORD PTR [esi+0x48e8001e],edi
  403c76:	cld    
  403c77:	push   ebx
  403c78:	cmp    esi,DWORD PTR [ebx-0x18b382fc]
  403c7e:	jle    0x403cb9
  403c80:	popf   
  403c81:	mov    eax,ds:0x7da1e523
  403c86:	mov    WORD PTR [ecx+0x1fd2658c],gs
  403c8c:	jne    0x403c38
  403c8e:	and    DWORD PTR [ebx],edx
  403c90:	imul   ebp,DWORD PTR [esi+0x6d37367c],0x36f58609
  403c9a:	dec    DWORD PTR [ebx-0x228ac731]
  403ca0:	inc    edi
  403ca1:	in     eax,dx
  403ca2:	shl    bh,0x79
  403ca5:	sti    
  403ca6:	jmp    0x403c2d
  403ca8:	push   0x8
  403caa:	std    
  403cab:	enter  0x94b2,0x2
  403caf:	out    dx,eax
  403cb0:	in     al,0x15
  403cb2:	(bad)  [eax+0x616ab1f4]
  403cb8:	jle    0x403c5f
  403cba:	repz jbe 0x403c58
  403cbd:	bound  ecx,QWORD PTR [esi+0x2e]
  403cc0:	xchg   ecx,eax
  403cc1:	js     0x403cb4
  403cc3:	neg    ebp
  403cc5:	or     eax,0x5e3cba41
  403cca:	xchg   edx,eax
  403ccb:	add    DWORD PTR [ebx-0x37],edi
  403cce:	mov    ebp,0xf5d79074
  403cd3:	ret    
  403cd4:	pop    ds
  403cd5:	pop    ss
  403cd6:	mov    dl,al
  403cd8:	mov    BYTE PTR [edi],al
  403cda:	icebp  
  403cdb:	add    al,0xfc
  403cdd:	and    ebx,ebx
  403cdf:	adc    edx,0x8607deaa
  403ce5:	(bad)  
  403ce6:	jl     0x403ce1
  403ce8:	shr    dl,1
  403cea:	pop    edx
  403ceb:	add    eax,DWORD PTR [esi-0x23]
  403cee:	cmp    DWORD PTR [ecx-0x5607228],eax
  403cf4:	push   edi
  403cf5:	inc    ebx
  403cf6:	adc    bh,BYTE PTR [ecx-0x4b]
  403cf9:	adc    ebx,DWORD PTR [edi]
  403cfb:	repz loopne 0x403cba
  403cfe:	shl    BYTE PTR [ecx],0x74
  403d01:	or     al,0x24
  403d03:	lock push ebx
  403d05:	call   0x596:0xba0dd5f8
  403d0c:	out    0x4e,eax
  403d0e:	pusha  
  403d0f:	dec    esi
  403d10:	dec    ecx
  403d11:	xor    eax,0x34f87d54
  403d16:	xchg   esp,eax
  403d17:	push   es
  403d18:	mov    dl,0xa3
  403d1a:	jne    0x403cc4
  403d1c:	retf   0xd329
  403d1f:	cmp    al,0xe4
  403d21:	and    bh,BYTE PTR [ecx]
  403d23:	jb     0x403d7e
  403d25:	fs cld 
  403d27:	jp     0x403cbc
  403d29:	pop    ecx
  403d2a:	mov    bh,0x3c
  403d2c:	xchg   DWORD PTR [esi-0x6aa26268],ecx
  403d32:	fld    TBYTE PTR [esi]
  403d34:	xchg   esp,eax
  403d35:	lea    edi,[esi]
  403d37:	mov    cl,0x40
  403d39:	repz pop ecx
  403d3b:	in     al,0xd4
  403d3d:	cdq    
  403d3e:	pusha  
  403d3f:	ins    BYTE PTR es:[edi],dx
  403d40:	je     0x403d2b
  403d42:	and    cl,BYTE PTR [esi+0x17]
  403d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d46:	pop    ecx
  403d47:	push   edi
  403d48:	ins    DWORD PTR es:[edi],dx
  403d49:	loope  0x403d0f
  403d4b:	adc    eax,0x8575812d
  403d50:	sub    DWORD PTR [esp+ebx*2-0x71e3134],ebx
  403d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d58:	ficom  WORD PTR [eax-0x33]
  403d5b:	add    ah,bh
  403d5d:	mov    ds,edi
  403d5f:	cld    
  403d60:	inc    edx
  403d61:	das    
  403d62:	pop    esp
  403d63:	mov    ?,ebx
  403d65:	xchg   ebp,eax
  403d66:	lds    ecx,FWORD PTR [esi]
  403d68:	loope  0x403d97
  403d6a:	push   cs
  403d6b:	push   edi
  403d6c:	mov    edi,0xa8f6a2ec
  403d71:	js     0x403d15
  403d73:	jg     0x403d78
  403d75:	cwde   
  403d76:	(bad)  
  403d78:	shl    DWORD PTR [eax+0x77428c82],0x96
  403d7f:	sbb    BYTE PTR [edx+0x3857a6e1],bl
  403d85:	loope  0x403db7
  403d87:	adc    DWORD PTR [eax],ebx
  403d89:	pusha  
  403d8a:	mov    edx,0x90f11230
  403d8f:	(bad)
  403d93:	jbe    0x403d3b
  403d95:	pop    ebp
  403d96:	and    eax,DWORD PTR [edi+ebp*2+0x464ab394]
  403d9d:	sub    BYTE PTR [edi+ebx*8],ah
  403da0:	adc    bl,BYTE PTR [edx-0xe0bd4ab]
  403da6:	mov    esi,0x823a5445
  403dab:	sub    eax,0x583769d7
  403db0:	sbb    bl,cl
  403db2:	push   ebx
  403db3:	inc    edi
  403db4:	push   0x6f6cd8c
  403db9:	rol    BYTE PTR [edi],1
  403dbb:	mov    dh,0x7a
  403dbd:	xchg   ebp,eax
  403dbe:	jmp    0x1d270a86
  403dc3:	repnz imul ebp,DWORD PTR [eax+0x263a3e4e],0xfffffff4
  403dcb:	push   cs
  403dcc:	dec    ebx
  403dcd:	hlt    
  403dce:	fstp   TBYTE PTR [edi-0x574f0b06]
  403dd4:	idiv   bh
  403dd6:	inc    esi
  403dd7:	push   ebp
  403dd8:	aad    0x64
  403dda:	cmp    ecx,DWORD PTR [esi+0x6c]
  403ddd:	xor    eax,0x61fae0dc
  403de2:	push   esi
  403de3:	inc    ebx
  403de4:	mov    edx,0xbb12ca3d
  403de9:	outs   dx,BYTE PTR ds:[esi]
  403dea:	xchg   edi,eax
  403deb:	fwait
  403dec:	inc    ebp
  403ded:	ror    DWORD PTR [ecx-0x15c866dc],cl
  403df3:	adc    eax,DWORD PTR [edi]
  403df5:	js     0x403d82
  403df7:	sbb    al,0xc9
  403df9:	adc    esp,esp
  403dfb:	fisub  WORD PTR [eax+esi*1-0x10aa6a91]
  403e02:	mov    eax,0xfcad98cd
  403e07:	sub    esp,ecx
  403e09:	or     DWORD PTR [ecx],0xffffff84
  403e0c:	inc    ebx
  403e0d:	test   eax,0x41b966b6
  403e12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e13:	imul   ebx,DWORD PTR [edi+0x7373eb4],0x623c9d56
  403e1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e1e:	mov    al,0x7a
  403e20:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  403e22:	je     0x403df4
  403e24:	pop    ebx
  403e25:	jle    0x403db9
  403e27:	clc    
  403e28:	repnz es inc ebp
  403e2b:	add    DWORD PTR [edi],ebx
  403e2d:	repz enter 0xf250,0x56
  403e32:	jno    0x403e96
  403e34:	xchg   ebx,eax
  403e35:	push   eax
  403e36:	push   edx
  403e37:	jl     0x403eb5
  403e39:	jo     0x403e2b
  403e3b:	xor    al,0x89
  403e3d:	cmp    ch,al
  403e3f:	nop
  403e40:	fdivr  QWORD PTR [edi]
  403e42:	loop   0x403e6f
  403e44:	in     al,dx
  403e45:	jg     0x403e48
  403e47:	(bad)  
  403e48:	jge    0x403ea4
  403e4a:	cmovg  ecx,DWORD PTR [edi-0x55a36ac8]
  403e51:	inc    edi
  403e52:	inc    esp
  403e53:	sub    DWORD PTR [eax-0x3b],esi
  403e56:	enter  0x1ffe,0x77
  403e5a:	fs jl  0x403e21
  403e5d:	clc    
  403e5e:	int3   
  403e5f:	sbb    BYTE PTR [edx-0x3bf1b0c6],0xe0
  403e66:	mov    eax,0x15ed42d7
  403e6b:	dec    ecx
  403e6c:	les    edi,FWORD PTR [ebx+0x50]
  403e6f:	shr    BYTE PTR [ebx+0x5a],0x81
  403e73:	mov    al,ds:0xf0ec8042
  403e78:	mov    edi,DWORD PTR [ecx+esi*1]
  403e7b:	fcomp  QWORD PTR [ecx+0x4b4baf37]
  403e81:	scas   al,BYTE PTR es:[edi]
  403e82:	addr16 push ds
  403e84:	xor    al,BYTE PTR [edx]
  403e86:	jo     0x403ef2
  403e88:	sbb    DWORD PTR [edi+esi*8+0x47bc2709],ecx
  403e8f:	inc    esp
  403e90:	mov    BYTE PTR [edx+0x1342c87],dh
  403e96:	sub    esp,ebx
  403e98:	xchg   esi,eax
  403e99:	ret    0xde65
  403e9c:	add    BYTE PTR [ebx+0x6],0x2e
  403ea0:	outs   dx,DWORD PTR ds:[esi]
  403ea1:	and    al,0x94
  403ea3:	dec    ebx
  403ea4:	and    BYTE PTR [edi],0x72
  403ea7:	inc    edx
  403ea8:	fidiv  DWORD PTR [ebp+ecx*2+0x57267233]
  403eaf:	pushf  
  403eb0:	gs invd 
  403eb3:	aad    0x89
  403eb5:	jecxz  0x403e4a
  403eb7:	mov    cl,0x98
  403eb9:	sub    eax,DWORD PTR [ebp+0x186a3964]
  403ebf:	sbb    DWORD PTR [ebx],ecx
  403ec1:	adc    ebp,DWORD PTR [eax-0xc]
  403ec4:	mov    ah,0x36
  403ec6:	fs das 
  403ec8:	pushf  
  403ec9:	push   ds
  403eca:	das    
  403ecb:	lock mov ah,0x27
  403ece:	shl    DWORD PTR [esi+0x207ccd10],1
  403ed4:	(bad)  
  403ed6:	jae    0x403f00
  403ed8:	add    BYTE PTR [ebx],ch
  403eda:	jg     0x403f0a
  403edc:	xor    DWORD PTR [ecx],esp
  403ede:	(bad)
  403ee2:	sub    BYTE PTR ds:0xfd205557,bl
  403ee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ee9:	ss pop esp
  403eeb:	inc    edi
  403eec:	jns    0x403e8f
  403eee:	js     0x403f27
  403ef0:	aas    
  403ef1:	add    BYTE PTR [esi],bl
  403ef3:	push   0x1690e409
  403ef8:	lds    eax,FWORD PTR [ebx-0x5f0369e8]
  403efe:	ins    DWORD PTR es:[edi],dx
  403eff:	xchg   edx,eax
  403f00:	sbb    DWORD PTR [esi+0x7f],edi
  403f03:	leave  
  403f04:	and    DWORD PTR [eax],ebp
  403f06:	add    al,0xbe
  403f08:	push   eax
  403f09:	jae    0x403f8a
  403f0b:	mov    WORD PTR [eax+0x23326b1c],ds
  403f11:	rcl    edx,cl
  403f13:	ins    DWORD PTR es:[edi],dx
  403f14:	mov    esp,ebp
  403f16:	icebp  
  403f17:	inc    ecx
  403f18:	sbb    dl,BYTE PTR [ebx]
  403f1a:	jmp    0xb0b5:0x7d39dcfb
  403f21:	sbb    DWORD PTR [edi-0x28d1f60f],esp
  403f27:	mov    ds:0x83943414,al
  403f2c:	xchg   esi,eax
  403f2d:	fsubr  QWORD PTR [ebx-0x4b60b3cd]
  403f33:	cmp    al,0x91
  403f35:	mov    ch,0x47
  403f37:	mov    bh,0xab
  403f39:	pop    es
  403f3a:	pop    esp
  403f3b:	iret   
  403f3c:	out    dx,eax
  403f3d:	std    
  403f3e:	lahf   
  403f3f:	out    0xa1,eax
  403f41:	es push edi
  403f43:	inc    ebx
  403f44:	imul   eax,edx,0xe4a51e08
  403f4a:	add    eax,0x8b452dcd
  403f4f:	out    0xe5,al
  403f51:	push   ds
  403f52:	jp     0x403fa0
  403f54:	enter  0x4cfa,0x2e
  403f58:	shr    DWORD PTR [esi+esi*8+0x26],1
  403f5c:	mov    ds:0xca19281,al
  403f61:	(bad)  
  403f63:	mov    DWORD PTR ds:0x53c608f8,esp
  403f69:	xor    dl,0xa7
  403f6c:	sub    BYTE PTR [esi-0x27622ebc],0x7c
  403f73:	aaa    
  403f74:	adc    cl,0xc5
  403f77:	push   ds
  403f78:	mov    eax,0xeb08b769
  403f7d:	dec    edx
  403f7e:	jmp    FWORD PTR [edi+0x2c]
  403f81:	ins    BYTE PTR es:[edi],dx
  403f82:	int3   
  403f83:	lea    edx,[ebp-0x57]
  403f86:	inc    esp
  403f87:	jge    0x403f8c
  403f89:	pusha  
  403f8a:	(bad)
  403f8d:	leave  
  403f8e:	jne    0x403f53
  403f90:	xchg   ebp,eax
  403f91:	mov    bl,0x93
  403f93:	adc    BYTE PTR [ebp-0x632ecdac],bl
  403f99:	jmp    0x403f89
  403f9b:	push   ebp
  403f9c:	fst    QWORD PTR [eax-0xabebfa0]
  403fa2:	add    eax,0x8e2e4f7b
  403fa7:	push   0xe18c0fb1
  403fac:	cmp    eax,0xefd34454
  403fb1:	(bad)  
  403fb2:	call   0x9a2fe8f5
  403fb7:	xchg   BYTE PTR [edi],dl
  403fb9:	jnp    0x403f95
  403fbb:	outs   dx,DWORD PTR ds:[esi]
  403fbc:	add    al,0x3e
  403fbe:	out    0xfe,al
  403fc0:	pop    ss
  403fc1:	sub    eax,0x948e768
  403fc6:	push   0x50459958
  403fcb:	mov    al,ds:0x582468e
  403fd0:	adc    DWORD PTR [edx-0x4e],0xffffffe0
  403fd4:	fist   DWORD PTR [esi-0x6fb34d6]
  403fda:	mov    esi,0x8e96a533
  403fdf:	sub    ecx,ecx
  403fe1:	out    0x54,eax
  403fe3:	mov    esi,0xd723cef6
  403fe8:	jle    0x404048
  403fea:	jg     0x403fe4
  403fec:	and    eax,0xc3c4aa84
  403ff1:	push   0xf8244080
  403ff6:	test   eax,0x45c8c65b
  403ffb:	xchg   edi,eax
  403ffc:	push   ecx
  403ffd:	jecxz  0x403fd0
  403fff:	daa    
  404000:	clc    
  404001:	mov    esi,0xde480914
  404006:	xor    eax,0xdbd5ea35
  40400b:	std    
  40400c:	sar    BYTE PTR [ebx],cl
  40400e:	sar    ch,1
  404010:	hlt    
  404011:	out    0xab,eax
  404013:	xor    al,0x7a
  404015:	retf   0x495e
  404018:	popf   
  404019:	mov    al,0x34
  40401b:	pop    ecx
  40401c:	bound  eax,QWORD PTR [ecx]
  40401e:	and    DWORD PTR [edx-0x73],eax
  404021:	ins    DWORD PTR es:[edi],dx
  404022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404023:	jmp    0x8126779
  404028:	pop    ds
  404029:	jbe    0x403fdc
  40402b:	pop    es
  40402c:	popa   
  40402d:	stos   DWORD PTR es:[edi],eax
  40402e:	mov    fs,WORD PTR [ebx-0x5a2a8e4e]
  404034:	and    al,0x39
  404036:	sbb    BYTE PTR [ecx+0x46],bh
  404039:	sti    
  40403a:	(bad)  [edi-0x5b99e5a6]
  404040:	mov    ecx,0x8e7b4ae5
  404045:	cmp    al,0x31
  404047:	aad    0x9d
  404049:	and    ah,BYTE PTR [ebp+0x6d]
  40404c:	cmp    al,0x29
  40404e:	and    BYTE PTR [edi-0x7d],al
  404051:	xor    al,0xbb
  404053:	sbb    DWORD PTR [eax-0x59],edi
  404056:	stc    
  404057:	leave  
  404058:	dec    ebx
  404059:	fist   WORD PTR [esi-0x7991cdce]
  40405f:	(bad)  
  404060:	xchg   ebx,eax
  404061:	mov    edi,0x7b083bf1
  404066:	jmp    0x404013
  404068:	sub    eax,0xfb5fe8ee
  40406d:	test   eax,0xfa038f99
  404072:	and    cl,BYTE PTR gs:[ebp-0x79f0ea3d]
  404079:	sar    BYTE PTR [edx],0xd7
  40407c:	dec    edi
  40407d:	mov    edi,0x89f2399e
  404082:	clc    
  404083:	sub    edi,DWORD PTR [edx]
  404085:	inc    esp
  404086:	jno    0x404012
  404088:	in     eax,0xea
  40408a:	aam    0x2d
  40408c:	das    
  40408d:	sub    DWORD PTR ds:0xdd562f77,edx
  404093:	je     0x4040fa
  404095:	push   eax
  404096:	outs   dx,DWORD PTR ds:[esi]
  404097:	nop
  404098:	mov    ebx,0xc2cbe4b0
  40409d:	out    dx,eax
  40409e:	sbb    DWORD PTR [esi+0x52],edi
  4040a1:	xchg   ecx,eax
  4040a2:	xchg   ecx,eax
  4040a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040a4:	add    BYTE PTR [edx+edx*2-0x3c],ah
  4040a8:	call   0x61030fe8
  4040ad:	lock jne 0x4040e2
  4040b0:	dec    ebp
  4040b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040b2:	paddsw mm5,QWORD PTR [esi+0x16]
  4040b6:	shl    BYTE PTR [ecx+0x5e],cl
  4040b9:	jns    0x40404d
  4040bb:	ds push es
  4040bd:	or     esi,DWORD PTR [ecx-0x26]
  4040c0:	in     eax,dx
  4040c1:	jmp    ecx
  4040c3:	sub    eax,0xb441009c
  4040c8:	pop    ds
  4040c9:	pop    edi
  4040ca:	and    DWORD PTR ds:0x6b620e1,esi
  4040d0:	pop    eax
  4040d1:	stc    
  4040d2:	dec    eax
  4040d3:	jge    0x4040bf
  4040d5:	sub    DWORD PTR [esi+0x513bbb0],eax
  4040db:	shl    DWORD PTR [edx+0x4961230a],0x61
  4040e2:	push   cs
  4040e3:	sbb    BYTE PTR [ebp-0x35],bh
  4040e6:	push   ebx
  4040e7:	mov    ds:0x850474cf,al
  4040ec:	outs   dx,DWORD PTR ds:[esi]
  4040ed:	popf   
  4040ee:	(bad)  
  4040ef:	mov    ch,0xee
  4040f1:	cmp    ah,BYTE PTR [eax-0x59ad4fd4]
  4040f7:	popf   
  4040f8:	test   DWORD PTR [edi+ebx*8+0x225e89b4],esi
  4040ff:	sti    
  404100:	js     0x40417f
  404102:	les    edx,FWORD PTR [ecx+0xe]
  404105:	int    0xb7
  404107:	pop    esi
  404108:	popa   
  404109:	clc    
  40410a:	add    ah,BYTE PTR [eax]
  40410c:	(bad)  
  40410e:	pop    edi
  40410f:	pop    ebp
  404110:	test   BYTE PTR [ebx+0x42],0xcd
  404114:	popa   
  404115:	push   ebx
  404116:	lods   eax,DWORD PTR ds:[esi]
  404117:	or     BYTE PTR [edx-0x69b47566],ah
  40411d:	mov    al,ds:0xe22862ef
  404122:	rcr    BYTE PTR [edi+eiz*8],0x9a
  404126:	or     DWORD PTR [edx+0x1537e785],ebx
  40412c:	add    BYTE PTR ds:0xf91259bb,0xda
  404133:	out    dx,eax
  404134:	sub    al,0x5
  404136:	sbb    esi,DWORD PTR [edi+0x49]
  404139:	stos   BYTE PTR es:[edi],al
  40413a:	cmc    
  40413b:	int    0x95
  40413d:	mov    edx,0xb3501679
  404142:	outs   dx,DWORD PTR ds:[esi]
  404143:	out    dx,eax
  404144:	lea    ebp,[eax]
  404146:	xchg   esp,eax
  404147:	cmp    ecx,DWORD PTR [edi]
  404149:	jbe    0x40410f
  40414b:	and    BYTE PTR [eax],bl
  40414d:	push   ebp
  40414e:	xor    al,0xa5
  404150:	call   0x39216d24
  404155:	sub    cl,BYTE PTR [edx]
  404157:	es jmp 0xdca0:0xfcd3c9d6
  40415f:	clc    
  404160:	aam    0x2c
  404162:	das    
  404163:	inc    eax
  404164:	xchg   edx,eax
  404165:	ins    BYTE PTR es:[edi],dx
  404166:	imul   ecx,esi,0x41
  404169:	dec    ebx
  40416a:	dec    esi
  40416b:	mov    ecx,0xc9ae738e
  404170:	add    BYTE PTR [edi-0x197ca071],0xae
  404177:	addr16 dec eax
  404179:	call   0x359a:0xa5f0f260
  404180:	jl     0x4041dd
  404182:	test   al,0xe
  404184:	mov    ecx,eax
  404186:	cdq    
  404187:	dec    edx
  404188:	sub    BYTE PTR [eax+0x54],0x27
  40418c:	xor    edx,DWORD PTR [edi]
  40418e:	sbb    DWORD PTR [edx],edx
  404190:	cli    
  404191:	neg    BYTE PTR [esi+ebx*4]
  404194:	ret    0xb627
  404197:	adc    DWORD PTR [eax],edx
  404199:	fistp  WORD PTR [esi-0x62bc2848]
  40419f:	mov    cl,0xb8
  4041a1:	dec    esi
  4041a2:	jp     0x404155
  4041a4:	scas   al,BYTE PTR es:[edi]
  4041a5:	xor    al,BYTE PTR ds:0xb8889c18
  4041ab:	xor    eax,ebp
  4041ad:	mov    esp,0x55c45d81
  4041b2:	mov    esi,0xb82c9353
  4041b7:	pop    edi
  4041b8:	(bad)  
  4041b9:	xchg   edx,eax
  4041ba:	ds cmp al,0x1c
  4041bd:	sbb    eax,0x6896da1c
  4041c2:	push   ecx
  4041c3:	adc    DWORD PTR [eax-0x69b47a51],edx
  4041c9:	push   esi
  4041ca:	inc    esp
  4041cb:	out    0xba,eax
  4041cd:	xchg   ebp,eax
  4041ce:	inc    eax
  4041cf:	shl    BYTE PTR [ecx+edx*2],1
  4041d2:	xchg   DWORD PTR [ecx],ebp
  4041d4:	push   edx
  4041d5:	sbb    eax,0xe2acf988
  4041da:	xchg   esp,eax
  4041db:	fistp  WORD PTR [edx+eax*1+0x72]
  4041df:	mov    edx,0x3e747bdd
  4041e4:	inc    ebp
  4041e5:	adc    eax,0x54621a7e
  4041ea:	iret   
  4041eb:	xor    DWORD PTR [eax-0x29d594b4],edi
  4041f1:	push   ds
  4041f2:	stc    
  4041f3:	int    0xcb
  4041f5:	mov    edi,0x5b6fbde1
  4041fa:	cmp    esp,DWORD PTR [edx]
  4041fc:	mov    ds:0x452e9339,al
  404201:	pop    ds
  404202:	cdq    
  404203:	mov    ebx,0xe57d99b7
  404208:	loope  0x4041a7
  40420a:	xchg   ebx,eax
  40420b:	xchg   esp,eax
  40420c:	xchg   BYTE PTR [eax],dl
  40420e:	icebp  
  40420f:	jmp    0x404289
  404211:	push   ds
  404212:	inc    eax
  404213:	fidiv  WORD PTR [ebp+0x68e76d8c]
  404219:	pop    esi
  40421a:	inc    esp
  40421b:	sub    al,0x20
  40421d:	push   cs
  40421e:	ins    BYTE PTR es:[edi],dx
  40421f:	push   cs
  404220:	cld    
  404221:	or     DWORD PTR [ebx],esi
  404223:	pop    edx
  404224:	lods   al,BYTE PTR ds:[esi]
  404225:	jno    0x404225
  404227:	ret    0x2fed
  40422a:	adc    bh,dh
  40422c:	xchg   edi,eax
  40422d:	retf   0xe09c
  404230:	stos   BYTE PTR es:[edi],al
  404231:	addr16 add eax,0x5442e4e2
  404237:	cmp    DWORD PTR [edx-0x53745446],0xf0ece8d6
  404241:	data16 repz mov WORD PTR [ebx-0x47],ss
  404246:	mov    cl,0xc6
  404248:	dec    esi
  404249:	mov    dl,0x28
  40424b:	mov    edi,0xe7baf69e
  404250:	push   0x4a9606a
  404255:	inc    ebp
  404256:	jmp    0x9758:0x90eed8a3
  40425d:	clc    
  40425e:	xor    DWORD PTR [edi-0x54],eax
  404261:	aad    0x2e
  404263:	test   eax,0xb9f3553e
  404268:	sbb    al,0x98
  40426a:	cmp    ebp,DWORD PTR [ecx+ebp*1+0x74437b48]
  404271:	in     al,0x6
  404273:	(bad)  
  404274:	fimul  DWORD PTR [ebx-0x5f]
  404277:	inc    edx
  404278:	add    esi,edx
  40427a:	mov    al,0xcd
  40427c:	cmp    dl,BYTE PTR [edi+0xc36f2b8]
  404282:	das    
  404283:	mov    DWORD PTR ds:0xdcec99fd,eax
  404289:	or     eax,0x3a3dc32f
  40428e:	and    BYTE PTR [ebp-0x3b1bdaca],dh
  404294:	mov    ds:0xc52de62,al
  404299:	leave  
  40429a:	stc    
  40429b:	add    esi,edx
  40429d:	sbb    edx,DWORD PTR [ebx]
  40429f:	xchg   esi,eax
  4042a0:	mov    dl,0x2f
  4042a2:	jns    0x40426e
  4042a4:	fadd   DWORD PTR [edx]
  4042a6:	and    ebp,edx
  4042a8:	ja     0x40428c
  4042aa:	les    eax,FWORD PTR [ebx-0x1e]
  4042ad:	xchg   DWORD PTR [esi+ebp*4-0x5a],edx
  4042b1:	shl    ebx,1
  4042b3:	aas    
  4042b4:	aad    0x87
  4042b6:	test   ah,ah
  4042b8:	lods   al,BYTE PTR ds:[esi]
  4042b9:	pushf  
  4042ba:	add    cl,bh
  4042bc:	pop    ebp
  4042bd:	add    edx,DWORD PTR [edi]
  4042bf:	dec    ebx
  4042c0:	dec    edi
  4042c1:	add    dl,BYTE PTR [ecx-0x28]
  4042c4:	cmp    al,0x5b
  4042c6:	int    0xf7
  4042c8:	das    
  4042c9:	int3   
  4042ca:	ds in  eax,dx
  4042cc:	and    al,0x98
  4042ce:	stos   BYTE PTR es:[edi],al
  4042cf:	cwde   
  4042d0:	xor    ah,BYTE PTR [eax]
  4042d2:	mov    dh,0xea
  4042d4:	loop   0x4042bb
  4042d6:	pop    edi
  4042d7:	xor    DWORD PTR [edx],ebp
  4042d9:	mov    ecx,0x42e919e3
  4042de:	aad    0x36
  4042e0:	in     eax,0xa4
  4042e2:	mov    al,0x45
  4042e4:	pop    esi
  4042e5:	pop    ebx
  4042e6:	jle    0x404361
  4042e8:	popf   
  4042e9:	pop    ebp
  4042ea:	mov    esp,0x91379008
  4042ef:	jp     0x404321
  4042f1:	mov    eax,ds:0x5eff61ef
  4042f6:	lea    eax,[edi+eax*2]
  4042f9:	aam    0xef
  4042fb:	pop    ss
  4042fc:	jb     0x4042a2
  4042fe:	mov    cl,0xcf
  404300:	push   esp
  404301:	xchg   edi,eax
  404302:	xchg   ebx,eax
  404303:	into   
  404304:	mov    eax,ds:0x1c9e1efd
  404309:	mov    al,ds:0x15e50d05
  40430e:	(bad)  
  40430f:	shl    BYTE PTR es:[ecx+0x817acc1],cl
  404316:	jg     0x404309
  404318:	jo     0x40429f
  40431a:	out    0x6e,eax
  40431c:	out    dx,eax
  40431d:	mov    al,0x65
  40431f:	scas   eax,DWORD PTR es:[edi]
  404320:	sbb    BYTE PTR [edx],cl
  404322:	hlt    
  404323:	cmc    
  404324:	add    dh,BYTE PTR [edx-0x68a03552]
  40432a:	cmp    esp,DWORD PTR [esi+0x4d]
  40432d:	out    0xd9,al
  40432f:	les    esi,FWORD PTR [ebp+0x49]
  404332:	and    bl,0x13
  404335:	xor    eax,0xba774da3
  40433a:	test   DWORD PTR [edi],ebp
  40433c:	jle    0x4042d4
  40433e:	inc    edx
  40433f:	add    al,0xeb
  404341:	cli    
  404342:	inc    edx
  404343:	(bad)
  404346:	xor    BYTE PTR [eax+0x1526e84f],ch
  40434c:	ret    
  40434d:	fadd   QWORD PTR [ebx+0x69]
  404350:	aaa    
  404351:	dec    edi
  404352:	jge    0x404398
  404354:	push   ecx
  404355:	ret    0x3de2
  404358:	cmp    ah,BYTE PTR [edx+ecx*8-0x3ab422a7]
  40435f:	lds    esi,FWORD PTR [edi-0x331a17a2]
  404365:	mov    WORD PTR [eax+0x20],ss
  404368:	dec    esi
  404369:	jb     0x40435a
  40436b:	repnz inc ebp
  40436d:	adc    BYTE PTR [ebx+0xaeb20b],dh
  404373:	xor    BYTE PTR [ecx-0x39e97b04],0x44
  40437a:	mov    ch,0xcf
  40437c:	mov    ecx,DWORD PTR [ecx]
  40437e:	stos   DWORD PTR es:[edi],eax
  40437f:	lock aas 
  404381:	ss push edx
  404383:	or     eax,0x82a88536
  404388:	or     BYTE PTR [eax+0x59],0x33
  40438c:	xchg   BYTE PTR [edi],cl
  40438e:	fcomp  DWORD PTR [edi+0x35]
  404391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404392:	push   ebx
  404393:	(bad)  
  404394:	fld    TBYTE PTR [ecx]
  404396:	hlt    
  404397:	test   eax,0x15e8f940
  40439c:	in     al,0x9e
  40439e:	mov    dl,BYTE PTR [ecx]
  4043a0:	xor    BYTE PTR [ecx],bl
  4043a2:	or     bl,BYTE PTR [ecx-0x1a]
  4043a5:	fnsave [esi+0x1e6774b8]
  4043ab:	mov    esp,0x949a5c19
  4043b0:	pop    ecx
  4043b1:	pop    edi
  4043b2:	or     eax,0x610b615c
  4043b7:	js     0x40440f
  4043b9:	xor    eax,0xaa1cdf89
  4043be:	sub    esi,DWORD PTR [ecx+0x15d407ec]
  4043c4:	(bad)  
  4043c5:	scas   eax,DWORD PTR es:[edi]
  4043c6:	into   
  4043c7:	in     eax,0xdf
  4043c9:	mov    ch,0x90
  4043cb:	js     0x404362
  4043cd:	gs dec esp
  4043cf:	cmp    DWORD PTR [ebp+0x44d0ab5b],edx
  4043d5:	dec    ebp
  4043d6:	or     edx,DWORD PTR [ecx]
  4043d8:	jns    0x404419
  4043da:	mov    esi,0x7ac4dbe5
  4043df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043e0:	mov    eax,0xe47fc83
  4043e5:	xlat   BYTE PTR ds:[ebx]
  4043e6:	das    
  4043e7:	(bad)  
  4043e8:	jmp    0x404425
  4043ea:	cmp    esi,DWORD PTR [esp+ebx*8+0x3e]
  4043ee:	mov    ebx,DWORD PTR [edi-0x14]
  4043f1:	aaa    
  4043f2:	mov    eax,0x3afedbbc
  4043f7:	outs   dx,BYTE PTR ds:[esi]
  4043f8:	add    BYTE PTR [edi],ah
  4043fa:	xchg   DWORD PTR [ebx],edi
  4043fc:	add    eax,0xb2a7170d
  404401:	xchg   ebp,eax
  404402:	rcl    BYTE PTR [edx+0xb],0x8d
  404406:	fist   DWORD PTR [esi]
  404408:	inc    ecx
  404409:	mov    dl,0x4c
  40440b:	ja     0x40438d
  40440d:	inc    ebp
  40440e:	cmp    cl,0xf0
  404411:	add    cl,dl
  404413:	sahf   
  404414:	mov    ebp,0x3006200c
  404419:	push   edi
  40441a:	sahf   
  40441b:	dec    eax
  40441c:	fidiv  DWORD PTR [eax]
  40441e:	retf   
  40441f:	lods   eax,DWORD PTR ds:[esi]
  404420:	xchg   esp,eax
  404421:	mov    esi,eax
  404423:	(bad)  
  404424:	es into 
  404426:	mov    ch,0x83
  404428:	test   BYTE PTR [esi+ebp*4+0x51a8257f],bh
  40442f:	jo     0x404464
  404431:	loop   0x40442a
  404433:	xor    DWORD PTR [ebx+0xb39068d],ebp
  404439:	sub    eax,0xf4ed9b11
  40443e:	xchg   esp,eax
  40443f:	xchg   ebx,eax
  404440:	mov    esi,0xa64bed8c
  404445:	out    dx,eax
  404446:	sbb    DWORD PTR [edx+eiz*4-0x656889fc],ecx
  40444d:	dec    esi
  40444e:	and    esi,DWORD PTR [ebx]
  404450:	ret    
  404451:	das    
  404452:	fbstp  TBYTE PTR [ebp+ebp*2+0x73804b84]
  404459:	jp     0x4044c0
  40445b:	mov    ecx,0x553703ad
  404460:	lea    ebp,[ebx+eax*1]
  404463:	push   ebp
  404464:	sbb    ah,BYTE PTR [ebx-0xb65d737]
  40446a:	and    eax,0x751aef74
  40446f:	daa    
  404470:	test   al,0xcb
  404472:	daa    
  404473:	inc    ecx
  404474:	cdq    
  404475:	bnd call 0x78fa1259
  40447b:	int3   
  40447c:	or     DWORD PTR [eax-0x15],ebx
  40447f:	not    DWORD PTR [eax-0x1b]
  404482:	outs   dx,DWORD PTR ds:[esi]
  404483:	jns    0x4044fb
  404485:	in     eax,0x7d
  404487:	inc    ebp
  404488:	and    BYTE PTR [ecx+0x45],0x39
  40448c:	and    ecx,DWORD PTR [edi]
  40448e:	fs out 0xc9,eax
  404491:	cwde   
  404492:	mov    ah,0xe9
  404494:	pop    eax
  404495:	cmp    eax,0xe073d303
  40449a:	push   0xffffff8e
  40449c:	lock xchg edx,eax
  40449e:	adc    DWORD PTR [ebx+ebp*4+0x3429b2ff],0x38
  4044a6:	mov    ah,0x69
  4044a8:	sub    al,0x0
  4044aa:	xchg   esi,eax
  4044ab:	xchg   edi,eax
  4044ac:	push   0xf64d268b
  4044b1:	call   0xae603283
  4044b6:	mov    DWORD PTR ds:0xe8d91449,eax
  4044bc:	push   ebp
  4044bd:	aas    
  4044be:	in     al,0xd6
  4044c0:	rol    DWORD PTR [ecx+ebx*8],1
  4044c3:	cmp    al,0x36
  4044c5:	js     0x40445e
  4044c7:	mov    ebx,0x5c89322c
  4044cc:	imul   edx
  4044ce:	mov    dh,0xc8
  4044d0:	push   eax
  4044d1:	mov    edi,0x9230ad86
  4044d6:	bound  ecx,QWORD PTR [edx-0x5008153c]
  4044dc:	test   ah,al
  4044de:	stos   DWORD PTR es:[edi],eax
  4044df:	imul   edi,ecx,0x1fed5cab
  4044e5:	push   cs
  4044e6:	xor    dl,BYTE PTR [eax]
  4044e8:	mov    ch,0xed
  4044ea:	sbb    al,0x4
  4044ed:	jno    0x404556
  4044ef:	mov    bh,0x7
  4044f1:	das    
  4044f2:	sub    DWORD PTR [edi+0x2b],ecx
  4044f5:	mov    ah,0xec
  4044f7:	lds    esi,FWORD PTR [ebx]
  4044f9:	sbb    eax,0xd3ef4e62
  4044fe:	push   es
  4044ff:	mov    es,WORD PTR [edx-0x66f804a2]
  404505:	mov    ecx,0xb9af5f17
  40450a:	fnstenv [ecx+0x69]
  40450d:	lock repz push edi
  404510:	add    eax,0x5c6f99ae
  404515:	jl     0x4044af
  404517:	mov    cl,0xe5
  404519:	sbb    DWORD PTR [ebx-0x23d0fc8b],ebx
  40451f:	in     al,0xee
  404521:	js     0x4045a1
  404523:	ja     0x404584
  404525:	mov    ecx,0xd8b9e472
  40452a:	ins    BYTE PTR es:[edi],dx
  40452b:	(bad)  
  40452c:	in     al,dx
  40452d:	jbe    0x4044bc
  40452f:	jp     0x404533
  404531:	pop    ebx
  404532:	mov    dh,0xc8
  404534:	and    ecx,DWORD PTR ds:0xcd2d2460
  40453a:	cmp    bh,cl
  40453c:	push   ebx
  40453d:	cmps   DWORD PTR cs:[si],DWORD PTR es:[di]
  404540:	xchg   ebp,eax
  404541:	shr    al,1
  404543:	into   
  404544:	ds and ebp,ecx
  404547:	iret   
  404548:	jbe    0x40455d
  40454a:	test   al,0xf1
  40454c:	pop    ecx
  40454d:	and    eax,edi
  40454f:	lods   al,BYTE PTR ds:[esi]
  404550:	mov    ds:0x470682f5,al
  404555:	push   esi
  404556:	retf   
  404557:	lds    ecx,FWORD PTR [edx-0x25]
  40455a:	xchg   edi,eax
  40455b:	jnp    0x4044ea
  40455d:	mov    esi,0xb4768988
  404562:	inc    edx
  404563:	push   0xb10cf35c
  404568:	jb     0x404501
  40456a:	gs inc esp
  40456c:	ficom  DWORD PTR [ebx-0x2f60a086]
  404572:	pop    DWORD PTR [esi+edi*2]
  404575:	inc    edx
  404576:	xor    cl,BYTE PTR [edx-0x58ddb7c3]
  40457c:	lea    ebp,[ebx-0x6d]
  40457f:	xchg   ebp,eax
  404580:	test   BYTE PTR [eax+esi*1+0x2b29bec0],dl
  404587:	jg     0x40450c
  404589:	inc    ebp
  40458a:	(bad)  
  40458c:	mov    ch,0xa5
  40458e:	fs cli 
  404590:	gs push edi
  404592:	inc    esi
  404593:	pop    eax
  404594:	adc    bh,dl
  404596:	test   DWORD PTR [ebx],edx
  404598:	popa   
  404599:	loop   0x4045b8
  40459b:	push   ss
  40459c:	add    BYTE PTR ds:0x31b4b0c2,al
  4045a2:	xchg   ebp,eax
  4045a3:	sbb    dh,ch
  4045a5:	and    BYTE PTR [esi-0x58],ah
  4045a8:	inc    ecx
  4045a9:	nop
  4045aa:	aas    
  4045ab:	inc    esp
  4045ac:	or     DWORD PTR [esi+0x6b3cc6b8],esp
  4045b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045b3:	retf   
  4045b4:	jmp    DWORD PTR [eax]
  4045b6:	(bad)  
  4045b8:	and    cl,0x4e
  4045bb:	ins    BYTE PTR es:[edi],dx
  4045bc:	push   edx
  4045bd:	into   
  4045be:	and    dh,BYTE PTR [ecx+0x4e]
  4045c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045c2:	and    DWORD PTR [ebx-0x49d71a48],ebp
  4045c8:	pop    eax
  4045c9:	xchg   esp,eax
  4045ca:	push   esp
  4045cb:	cwde   
  4045cc:	and    eax,0xcaefde59
  4045d1:	adc    eax,0xd3ef7458
  4045d6:	ds ret 
  4045d8:	sbb    eax,DWORD PTR [edi-0x6b]
  4045db:	xor    DWORD PTR [esi-0x14],ebp
  4045de:	fidivr WORD PTR [esi+0xd]
  4045e1:	(bad)  
  4045e2:	les    esi,FWORD PTR [edi+0x2e02209d]
  4045e8:	out    dx,eax
  4045e9:	xchg   esi,eax
  4045ea:	jno    0x4045f7
  4045ec:	or     al,0x27
  4045ee:	stc    
  4045ef:	test   DWORD PTR [edi],0xddae64a0
  4045f5:	loop   0x404626
  4045f7:	jmp    0x2af475f3
  4045fc:	xor    BYTE PTR [ebx+0x2c],bh
  4045ff:	sbb    ah,BYTE PTR [esi-0x42]
  404602:	xchg   esp,eax
  404603:	cmp    eax,0x73b95489
  404608:	sar    BYTE PTR [edi-0x13b8989d],0xd0
  40460f:	outs   dx,BYTE PTR ds:[esi]
  404610:	pop    esi
  404611:	inc    ebp
  404612:	lahf   
  404613:	jbe    0x40464e
  404615:	out    dx,eax
  404616:	fs mov ebx,0x6b352882
  40461c:	sar    ebp,cl
  40461e:	jnp    0x4045e0
  404620:	cmp    eax,0x9d5470b2
  404625:	mov    ds:0x9ed18c80,al
  40462a:	push   ss
  40462b:	pop    ebp
  40462c:	dec    edx
  40462d:	xor    dl,dh
  40462f:	cli    
  404630:	dec    esi
  404631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404632:	je     0x4045eb
  404634:	cmp    al,0xa1
  404636:	out    0xe2,al
  404638:	setbe  BYTE PTR [eax+0x70a7c1cb]
  40463f:	mov    ah,0xfe
  404641:	jno    0x404625
  404643:	mov    dh,0xf1
  404645:	pop    ds
  404646:	fcomp  DWORD PTR [ebx+0x39]
  404649:	sti    
  40464a:	sub    al,0xa1
  40464c:	mov    edi,0xe00cf36b
  404651:	adc    eax,DWORD PTR [ebx+0xd]
  404654:	lods   al,BYTE PTR ds:[esi]
  404655:	adc    al,0x40
  404657:	adc    al,0xed
  404659:	push   0xfffffffe
  40465b:	aaa    
  40465c:	pop    esi
  40465d:	lods   al,BYTE PTR ds:[esi]
  40465e:	dec    edx
  40465f:	cld    
  404660:	ins    DWORD PTR es:[edi],dx
  404661:	icebp  
  404662:	or     DWORD PTR [ebp+0x31],ebp
  404665:	mov    eax,0xc1071153
  40466a:	xchg   edi,eax
  40466b:	dec    edx
  40466c:	(bad)  
  40466d:	xlat   BYTE PTR ds:[ebx]
  40466e:	xor    al,BYTE PTR [eax*8-0x480a93e2]
  404675:	pop    edx
  404676:	in     eax,0xae
  404678:	into   
  404679:	je     0x404667
  40467b:	imul   edx,DWORD PTR [ebx+0x3c],0xfffffff3
  40467f:	jp     0x404631
  404681:	stos   DWORD PTR es:[edi],eax
  404682:	imul   esp,ebp,0xffffffbb
  404685:	cmp    edx,DWORD PTR [esi+0x6c2a87e6]
  40468b:	fcom   QWORD PTR [esi+0x76]
  40468e:	iret   
  40468f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404690:	pop    ss
  404691:	push   eax
  404692:	sub    DWORD PTR [ebp+0x57],0x7d
  404696:	inc    esp
  404697:	popf   
  404698:	or     eax,0x76d36469
  40469d:	jo     0x40462a
  40469f:	fadd   QWORD PTR [edx+0x3d427814]
  4046a5:	dec    ebp
  4046a6:	xchg   DWORD PTR [edx-0x7a2024d8],edi
  4046ac:	out    dx,eax
  4046ad:	ins    DWORD PTR es:[edi],dx
  4046ae:	xor    al,0x2b
  4046b0:	repnz (bad) 
  4046b2:	aas    
  4046b3:	inc    edx
  4046b4:	xchg   ebp,eax
  4046b5:	cmp    eax,esp
  4046b7:	cmp    dl,BYTE PTR [edx]
  4046b9:	pop    ebp
  4046ba:	stos   DWORD PTR es:[edi],eax
  4046bb:	sbb    ch,BYTE PTR [eax]
  4046bd:	adc    DWORD PTR ds:0xbf619fec,edi
  4046c3:	in     eax,0xff
  4046c5:	rcl    DWORD PTR [esi+0x10],0xdb
  4046c9:	jns    0x40474a
  4046cb:	rcr    cl,cl
  4046cd:	inc    ebp
  4046ce:	stos   BYTE PTR es:[edi],al
  4046cf:	push   ebx
  4046d0:	outs   dx,DWORD PTR ds:[esi]
  4046d1:	ret    0xcf6
  4046d4:	repnz mov ds:0x7c5c62d8,al
  4046da:	or     eax,0x8fd2f380
  4046df:	stos   BYTE PTR es:[edi],al
  4046e0:	imul   BYTE PTR [esi+0x5affac23]
  4046e6:	fscale 
  4046e8:	dec    ebp
  4046e9:	outs   dx,BYTE PTR ds:[esi]
  4046ea:	or     BYTE PTR [ebx],al
  4046ec:	dec    esp
  4046ed:	dec    eax
  4046ee:	test   al,0x4b
  4046f0:	retf   
  4046f1:	jne    0x4046e1
  4046f3:	mov    dl,0xd3
  4046f5:	inc    edi
  4046f6:	test   DWORD PTR [ecx+0x59],esp
  4046f9:	lds    esp,FWORD PTR [eax]
  4046fb:	cwde   
  4046fc:	dec    eax
  4046fd:	or     BYTE PTR [edi-0x47],dh
  404700:	cli    
  404701:	push   es
  404702:	aaa    
  404703:	call   0x2ae0:0x2d373166
  40470a:	xor    edx,DWORD PTR [ebx]
  40470c:	pmuludq mm7,QWORD PTR [eax]
  40470f:	pop    esi
  404710:	pushf  
  404711:	ins    BYTE PTR es:[edi],dx
  404712:	clc    
  404713:	cdq    
  404714:	popa   
  404715:	mov    dl,0x39
  404717:	pop    ebx
  404718:	cs mov ebp,0x47bb4405
  40471e:	xchg   ecx,eax
  40471f:	or     ecx,ecx
  404721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404722:	in     eax,dx
  404723:	pop    esp
  404724:	cli    
  404725:	cmp    al,0x3b
  404727:	es sahf 
  404729:	les    ebx,FWORD PTR [ecx+esi*8]
  40472c:	and    DWORD PTR [ebx-0x59],edx
  40472f:	pop    edx
  404730:	mov    edx,DWORD PTR [ebx-0x2e]
  404733:	mov    dh,0x87
  404735:	fcom   DWORD PTR [ebx+0x13]
  404738:	fnstsw WORD PTR [edi+0x51]
  40473b:	lock mov bh,0xae
  40473e:	std    
  40473f:	pop    ebx
  404740:	pop    es
  404741:	vpmacsww ymm0,ymm1,ymm1,YMMWORD PTR [esi-0x42]
  404748:	jg     0x404764
  40474a:	xlat   BYTE PTR ds:[ebx]
  40474b:	sub    eax,0x87c2a81e
  404750:	hlt    
  404751:	aaa    
  404752:	mov    esp,0x7ffc3afd
  404757:	add    DWORD PTR [ebp-0x26],0xe943feee
  40475e:	fnsave [edi+0x1b]
  404761:	cmp    al,0x31
  404763:	push   es
  404764:	into   
  404765:	xchg   ebp,eax
  404766:	rol    DWORD PTR [edi-0xc6d5e51],1
  40476c:	sar    DWORD PTR [eax],cl
  40476e:	xchg   ebx,eax
  40476f:	xchg   ecx,eax
  404770:	and    BYTE PTR [eax-0x3f],0xe0
  404774:	lahf   
  404775:	xchg   ebp,eax
  404776:	jl     0x4047e7
  404778:	xchg   esi,eax
  404779:	inc    edx
  40477a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40477b:	retf   
  40477c:	pushf  
  40477d:	cli    
  40477e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40477f:	mov    ebp,0x7e7d1ef1
  404784:	and    DWORD PTR [edx-0x6e],edx
  404787:	xchg   esi,eax
  404788:	push   edi
  404789:	and    ebx,DWORD PTR [ecx]
  40478b:	or     eax,0xb4a1fe
  404790:	es cwde 
  404792:	mov    ch,0x26
  404794:	outs   dx,DWORD PTR ds:[esi]
  404795:	mov    dh,0xdd
  404797:	loope  0x40477f
  404799:	pop    ebp
  40479a:	mov    bh,0x82
  40479c:	add    al,ch
  40479e:	and    BYTE PTR [ebx+0x37ca44aa],ah
  4047a4:	push   cs
  4047a5:	loopne 0x4047d8
  4047a7:	clc    
  4047a8:	xchg   DWORD PTR [eax],esi
  4047aa:	dec    esi
  4047ab:	das    
  4047ac:	fsub   DWORD PTR [ebx+ebx*4]
  4047af:	or     bh,BYTE PTR [ebp+0x6]
  4047b2:	sbb    eax,0xd5df2f52
  4047b7:	adc    ah,BYTE PTR [edx+0x4f]
  4047ba:	sub    BYTE PTR [ebx-0x40],dh
  4047bd:	pop    edx
  4047be:	sub    al,0xa2
  4047c0:	mov    eax,ds:0xdf49e9e8
  4047c5:	mov    WORD PTR [edi+0x61],es
  4047c8:	mul    ah
  4047ca:	add    DWORD PTR [edi],0x15
  4047cd:	sbb    ebx,DWORD PTR [ebx+0x38eb5ca0]
  4047d3:	and    al,0xaf
  4047d5:	jo     0x4047f1
  4047d7:	pop    ss
  4047d8:	dec    eax
  4047d9:	scas   eax,DWORD PTR es:[edi]
  4047da:	mov    DWORD PTR [edi],esp
  4047dc:	leave  
  4047dd:	addr16 in eax,dx
  4047df:	dec    dh
  4047e1:	es sub al,0xf9
  4047e4:	test   eax,0xdacf7cc8
  4047e9:	call   0x210b:0x3f1da483
  4047f0:	je     0x40478e
  4047f2:	clc    
  4047f3:	cmp    eax,0xfa57f216
  4047f8:	(bad)
  4047fc:	test   esi,0x51f5bfde
  404802:	mov    ch,0xe4
  404804:	mov    esp,0x8ad2f0e9
  404809:	outs   dx,BYTE PTR ds:[esi]
  40480a:	dec    edx
  40480b:	jecxz  0x40487e
  40480d:	out    0x1f,eax
  40480f:	add    BYTE PTR [ebx],al
  404811:	pop    ebp
  404812:	mov    esp,0x51a39bd3
  404817:	dec    esi
  404818:	push   edx
  404819:	fistp  QWORD PTR [edx]
  40481b:	aas    
  40481c:	sub    al,0xae
  40481e:	enter  0x659f,0x1
  404822:	icebp  
  404823:	fisubr WORD PTR [esi]
  404825:	sbb    edi,ecx
  404827:	inc    ebx
  404828:	sub    DWORD PTR [edi+0x44],edi
  40482b:	(bad)  
  40482c:	dec    eax
  40482d:	jns    0x40486f
  40482f:	adc    eax,0xaa34e82b
  404834:	cmp    eax,0x2bcac2d8
  404839:	ins    BYTE PTR es:[edi],dx
  40483a:	pop    edi
  40483b:	and    esp,edi
  40483d:	xor    al,0x6d
  40483f:	test   al,0x25
  404841:	sub    DWORD PTR ds:0xaac72ffa,ebx
  404847:	jp     0x404893
  404849:	mov    cl,0xf6
  40484b:	mov    cl,0x83
  40484d:	ss jge 0x4048bd
  404850:	stos   DWORD PTR es:[edi],eax
  404851:	xor    eax,0xa350969
  404856:	add    cl,BYTE PTR [esi-0x1a630e6c]
  40485c:	mov    al,BYTE PTR [edi-0x67857f0c]
  404862:	jae    0x40487d
  404864:	inc    ebp
  404865:	call   0x3003f8ef
  40486a:	xchg   BYTE PTR [edi+0x3b],bh
  40486d:	mov    WORD PTR [edx],?
  40486f:	sub    ah,ah
  404871:	cmp    eax,0x1f6faaae
  404876:	mov    al,ds:0x98dcd53
  40487b:	inc    ebp
  40487c:	leave  
  40487d:	pop    esp
  40487e:	mov    edx,0xd98e6cd
  404883:	xor    DWORD PTR [ebx+0x72],edi
  404886:	dec    ebp
  404887:	inc    ebp
  404888:	jmp    0xf353:0xe48e16a3
  40488f:	das    
  404890:	cmp    al,0x1e
  404892:	push   ss
  404893:	jp     0x40483e
  404895:	scas   al,BYTE PTR es:[edi]
  404896:	out    0x64,al
  404898:	(bad)  
  404899:	ss ins DWORD PTR es:[edi],dx
  40489b:	jnp    0x404864
  40489d:	in     al,0x2
  40489f:	jg     0x4048e5
  4048a1:	call   0x5da6:0x610694d3
  4048a8:	jae    0x404913
  4048aa:	retf   0x7e19
  4048ad:	aas    
  4048ae:	mov    DWORD PTR es:[esi+ecx*2+0x67],edi
  4048b3:	xchg   ebp,eax
  4048b4:	adc    dh,BYTE PTR [esi-0x5c6fde8c]
  4048ba:	jmp    DWORD PTR ds:0x2a33c0f4
  4048c0:	push   ss
  4048c1:	sub    al,0xdd
  4048c3:	sti    
  4048c4:	add    DWORD PTR [esp+ebx*1],eax
  4048c7:	stos   DWORD PTR es:[edi],eax
  4048c8:	fwait
  4048c9:	xchg   esp,eax
  4048ca:	adc    BYTE PTR [edx],ah
  4048cc:	sbb    ch,cl
  4048ce:	inc    esp
  4048cf:	aas    
  4048d0:	repz call 0xfdc2009f
  4048d6:	push   es
  4048d7:	hlt    
  4048d8:	test   al,0x78
  4048da:	mov    dl,0x86
  4048dc:	gs jmp 0xe9108601
  4048e2:	jge    0x40492f
  4048e4:	js     0x404962
  4048e6:	loopne 0x404940
  4048e8:	aaa    
  4048e9:	mov    eax,ds:0xf260262b
  4048ee:	jle    0x404881
  4048f0:	sbb    al,0x4
  4048f2:	add    dh,BYTE PTR [ebx-0x78f8a7fa]
  4048f8:	mov    ch,0xf3
  4048fa:	pop    edi
  4048fb:	xor    eax,0xdd26818b
  404900:	inc    esi
  404901:	adc    DWORD PTR ds:0x75108440,esi
  404907:	pop    edx
  404908:	ret    0x4547
  40490b:	int3   
  40490c:	outs   dx,DWORD PTR ds:[esi]
  40490d:	mov    esi,eax
  40490f:	adc    eax,0xa0a36d43
  404914:	repz or BYTE PTR [edx+0x35],ah
  404918:	(bad)  
  404919:	pop    edi
  40491a:	inc    ebx
  40491b:	ins    BYTE PTR es:[edi],dx
  40491c:	sbb    bh,dh
  40491e:	pusha  
  40491f:	sti    
  404920:	mov    ebp,eax
  404922:	popa   
  404923:	xchg   ebx,eax
  404924:	ret    0xc6b7
  404927:	dec    esi
  404928:	adc    BYTE PTR [edi+eiz*1-0x8e21053],0xaa
  404930:	mov    esi,0xe60e3e68
  404935:	mov    bl,0x1
  404937:	xchg   edi,eax
  404938:	jmp    0x404950
  40493a:	sub    ebp,edi
  40493c:	clc    
  40493d:	pop    ecx
  40493e:	rcl    BYTE PTR [ebp-0x5d6cc17d],cl
  404944:	lahf   
  404945:	jecxz  0x40494b
  404947:	push   esi
  404948:	or     al,0x56
  40494a:	and    eax,0x8af387a5
  40494f:	(bad)  
  404950:	or     eax,0x1fb264a
  404955:	xchg   edx,eax
  404956:	mov    bl,0xb3
  404958:	inc    ecx
  404959:	xor    BYTE PTR [edx-0x166a705d],al
  40495f:	out    0x8f,al
  404961:	call   0x5649ba30
  404966:	dec    eax
  404967:	inc    ebx
  404968:	sub    edi,0x46e08be4
  40496e:	daa    
  40496f:	jle    0x404901
  404971:	add    cl,al
  404973:	add    ecx,edi
  404975:	outs   dx,BYTE PTR ds:[esi]
  404976:	xchg   esi,eax
  404977:	ins    BYTE PTR es:[edi],dx
  404978:	and    DWORD PTR [eax],edx
  40497a:	ins    DWORD PTR es:[edi],dx
  40497b:	xchg   esi,eax
  40497c:	cs jmp 0x5f0c0f9a
  404982:	ret    0x3c1a
  404985:	push   ss
  404986:	stos   DWORD PTR es:[edi],eax
  404987:	lahf   
  404988:	jbe    0x404957
  40498a:	int3   
  40498b:	mov    eax,ds:0x7c4d6ab0
  404990:	enter  0x8672,0xc1
  404994:	out    0x7c,eax
  404996:	mov    al,0x32
  404998:	mov    cl,0xb1
  40499a:	shr    DWORD PTR [edx-0x7cad227],1
  4049a0:	cmc    
  4049a1:	or     bl,bl
  4049a3:	scas   eax,DWORD PTR es:[edi]
  4049a4:	pop    ds
  4049a5:	call   0xe8987ad
  4049aa:	sub    BYTE PTR [ecx],dh
  4049ac:	mov    al,ds:0x18a6c27e
  4049b1:	lock inc esi
  4049b3:	pop    ecx
  4049b4:	mov    ch,0xfc
  4049b6:	xchg   edx,eax
  4049b7:	mov    WORD PTR [esi+ebx*1+0x24],?
  4049bb:	xchg   edi,eax
  4049bc:	std    
  4049bd:	shr    BYTE PTR [eax],0x1a
  4049c0:	pop    gs
  4049c2:	std    
  4049c3:	push   ss
  4049c4:	rcl    BYTE PTR [esi+0x13],cl
  4049c7:	cli    
  4049c8:	(bad)  
  4049c9:	sbb    al,0xd0
  4049cb:	sahf   
  4049cc:	addr16 call 0x2c26a8a8
  4049d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049d3:	mov    eax,ds:0xd2f0c9ea
  4049d8:	jne    0x4049e2
  4049da:	hlt    
  4049db:	mov    DWORD PTR [esi],edi
  4049dd:	pop    edi
  4049de:	sub    DWORD PTR [eax],ebp
  4049e0:	out    dx,eax
  4049e1:	outs   dx,DWORD PTR ds:[esi]
  4049e2:	ficom  DWORD PTR [esi]
  4049e4:	and    al,0x28
  4049e6:	adc    BYTE PTR [ecx+0x2e],0xd0
  4049ea:	cmp    bl,dh
  4049ec:	xchg   ebx,eax
  4049ed:	mov    ch,0x42
  4049ef:	mov    ds:0x2e34a4ef,eax
  4049f4:	push   ecx
  4049f5:	push   ecx
  4049f6:	and    BYTE PTR fs:[edx],bl
  4049f9:	xor    edx,DWORD PTR [edx]
  4049fb:	dec    eax
  4049fc:	sub    eax,0xcdd9c397
  404a01:	dec    edi
  404a02:	xor    esp,DWORD PTR [edx]
  404a04:	fidiv  WORD PTR [esi+0x4c019163]
  404a0a:	bnd js 0x4049e5
  404a0d:	jg     0x4049bd
  404a0f:	mov    cl,0x2f
  404a11:	js     0x4049a7
  404a13:	xchg   edx,eax
  404a14:	pop    edi
  404a15:	clc    
  404a16:	add    dl,BYTE PTR [eax+0x7aaea92e]
  404a1c:	bound  ebx,QWORD PTR [edx-0x505996b]
  404a22:	(bad)  
  404a23:	jnp    0x404a90
  404a25:	add    eax,0x5b7e73cf
  404a2a:	xor    eax,0x44640e54
  404a2f:	popf   
  404a30:	call   0xa08:0x5754f328
  404a37:	mov    DWORD PTR [ebp-0x301578d3],esp
  404a3d:	mov    dh,0x6
  404a3f:	mov    dh,0x38
  404a41:	inc    eax
  404a42:	mov    esi,0x14896a85
  404a47:	jle    0x4049c9
  404a49:	xchg   edi,eax
  404a4a:	push   0x5f
  404a4c:	loopne 0x404ac7
  404a4e:	add    eax,DWORD PTR [eax+0x54]
  404a51:	xchg   ecx,eax
  404a52:	push   edi
  404a53:	sbb    bh,BYTE PTR [esi+0x4b]
  404a56:	out    0x30,eax
  404a58:	ret    0xf1a9
  404a5b:	mov    ds:0x20af2cd7,eax
  404a60:	out    0x3f,eax
  404a62:	inc    edi
  404a63:	inc    esp
  404a64:	pop    edi
  404a65:	mov    eax,ds:0xcc31a1ee
  404a6a:	cdq    
  404a6b:	daa    
  404a6c:	sbb    al,0xe1
  404a6e:	ret    
  404a6f:	les    esp,FWORD PTR [edx-0x80]
  404a72:	out    dx,eax
  404a73:	mov    bl,0x97
  404a75:	out    dx,eax
  404a76:	retf   
  404a77:	jp     0x404a68
  404a79:	lea    edx,[edi+0x6b]
  404a7c:	inc    esi
  404a7d:	imul   ebp,DWORD PTR [edi],0xffffff8d
  404a80:	frstor [ecx-0x5b]
  404a83:	mov    eax,ds:0xd8b6340d
  404a88:	lods   eax,DWORD PTR ds:[esi]
  404a89:	imul   esi,esp,0x10
  404a8c:	and    eax,0xa0e2b550
  404a91:	dec    edx
  404a92:	xor    eax,0x1bc2ab6c
  404a97:	pop    ebp
  404a98:	fimul  WORD PTR [ecx+0x71]
  404a9b:	sbb    bl,BYTE PTR [ebp-0x45846215]
  404aa1:	les    ebp,FWORD PTR [eax+ebx*4+0x26]
  404aa5:	xor    eax,0x789ad2da
  404aaa:	in     eax,0x61
  404aac:	shr    BYTE PTR [edx+ecx*1],0x2a
  404ab0:	mov    ebp,0xb780d8b
  404ab5:	mov    dl,0x71
  404ab7:	jle    0x404a75
  404ab9:	into   
  404aba:	aad    0x59
  404abc:	out    0x41,al
  404abe:	js     0x404b3e
  404ac0:	sub    eax,0x5e2a1473
  404ac5:	mov    cl,0xee
  404ac7:	or     al,0xc8
  404ac9:	fisttp WORD PTR [ecx-0x80]
  404acc:	into   
  404acd:	push   cs
  404ace:	rcr    DWORD PTR [ecx-0x43],1
  404ad1:	mov    eax,ds:0xece47956
  404ad6:	gs cmp eax,0x6b44c0a9
  404adc:	fnsave [edx]
  404ade:	mov    cl,0x1f
  404ae0:	pop    ebx
  404ae1:	dec    ebp
  404ae2:	sahf   
  404ae3:	dec    esi
  404ae4:	cmp    BYTE PTR [esp+esi*1],bh
  404ae7:	aam    0x83
  404ae9:	xor    esi,esp
  404aeb:	cmp    al,0xc2
  404aed:	mov    dh,0x3c
  404aef:	and    dl,bl
  404af1:	dec    esp
  404af2:	mov    ebp,0x2f6674a5
  404af7:	adc    BYTE PTR [esi+edx*8],ah
  404afa:	mov    eax,ds:0x8ac7131e
  404aff:	inc    ebp
  404b00:	sub    eax,0x4622e637
  404b05:	(bad)  
  404b07:	nop
  404b08:	int3   
  404b09:	inc    edi
  404b0a:	jo     0x404ac9
  404b0c:	repnz (bad) 
  404b0f:	add    cl,bh
  404b11:	and    DWORD PTR [ebx+esi*4+0x1b],0xffffffe0
  404b16:	psraw  mm5,QWORD PTR [esi]
  404b19:	loop   0x404b75
  404b1b:	repz sub eax,0x5ff92b13
  404b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b22:	add    DWORD PTR [eax-0x762e13bd],ecx
  404b28:	aad    0x4a
  404b2a:	jg     0x404b3b
  404b2c:	mov    BYTE PTR [eax+edi*4+0x34],0x3d
  404b31:	push   0x33
  404b33:	xchg   DWORD PTR [ebx+0x34],esp
  404b36:	js     0x404b54
  404b38:	adc    al,0xa0
  404b3a:	add    BYTE PTR ds:0xcd6bbcf8,0x8
  404b41:	add    cl,BYTE PTR [edx+0x6b5ac77b]
  404b47:	jle    0x404b2b
  404b49:	cmp    eax,0x117b189e
  404b4e:	dec    ecx
  404b4f:	ror    BYTE PTR [ecx-0x1e],1
  404b52:	mov    ch,0x23
  404b54:	stos   DWORD PTR es:[di],eax
  404b56:	mov    edi,0x39063003
  404b5b:	retf   0xc78c
  404b5e:	or     eax,0x28b0397d
  404b63:	and    BYTE PTR [edi],0x98
  404b66:	pop    DWORD PTR [edi-0x7e]
  404b69:	cmp    al,0xff
  404b6b:	repz pop ebx
  404b6d:	or     al,0x5d
  404b6f:	inc    edx
  404b70:	clc    
  404b71:	mov    ds:0x100a4393,al
  404b76:	shufps xmm5,XMMWORD PTR [ecx+ecx*8+0x25a30998],0x82
  404b7f:	pop    ebp
  404b80:	shl    esp,0xed
  404b83:	xchg   esi,eax
  404b84:	jle    0x404b44
  404b86:	into   
  404b87:	ja     0x404bab
  404b89:	or     eax,DWORD PTR [ebx*8+0x1a13d17e]
  404b90:	fst    QWORD PTR [edi+0x28a9e262]
  404b96:	adc    BYTE PTR [edx],0x93
  404b99:	mov    eax,ds:0x9816b43
  404b9e:	mov    DWORD PTR [ebx+0x4a8b9354],0x90dfc093
  404ba8:	lahf   
  404ba9:	mov    ebx,0x4831a677
  404bae:	repnz jmp 0xf727:0x6c379c3e
  404bb6:	ret    
  404bb7:	xchg   edx,eax
  404bb8:	and    dl,BYTE PTR [bp+di-0x36]
  404bbc:	retf   0x8019
  404bbf:	xchg   ebx,eax
  404bc0:	dec    esi
  404bc1:	mov    eax,ds:0x6f29f39a
  404bc6:	cdq    
  404bc7:	fldcw  WORD PTR [edx-0x2a]
  404bca:	aam    0x31
  404bcc:	or     DWORD PTR [ebx],esp
  404bce:	stos   BYTE PTR es:[edi],al
  404bcf:	jg     0x404b72
  404bd1:	xchg   ebx,eax
  404bd2:	pushf  
  404bd3:	(bad)  
  404bd4:	pushf  
  404bd5:	mov    al,0xb4
  404bd7:	fild   DWORD PTR [ebx]
  404bd9:	add    eax,0xb4e8ad63
  404bde:	push   eax
  404bdf:	scas   eax,DWORD PTR es:[edi]
  404be0:	jmp    0xaa6bbd96
  404be5:	daa    
  404be6:	dec    esi
  404be7:	retf   
  404be8:	scas   al,BYTE PTR es:[edi]
  404be9:	adc    DWORD PTR [ebp-0x392a9865],esi
  404bef:	inc    ebx
  404bf0:	cmp    al,0xc7
  404bf2:	std    
  404bf3:	dec    eax
  404bf4:	and    eax,0xe3ca188d
  404bf9:	xor    ah,BYTE PTR [eax+0x7d]
  404bfc:	adc    eax,0x63effaa
  404c01:	cli    
  404c02:	(bad)  
  404c03:	jnp    0x404c6c
  404c05:	shl    bh,1
  404c07:	repnz ins DWORD PTR es:[edi],dx
  404c09:	fadd   DWORD PTR [eax-0x5b]
  404c0c:	xchg   edi,eax
  404c0d:	sbb    DWORD PTR [edi],ebx
  404c0f:	shl    BYTE PTR [ecx+0x4e53b53c],cl
  404c15:	jb     0x404bcb
  404c17:	fwait
  404c18:	int    0xe
  404c1a:	imul   edx,DWORD PTR ds:0xb4ac48cb,0x4970dd7d
  404c24:	fdiv   QWORD PTR [esi+ebx*8]
  404c27:	iret   
  404c28:	cmc    
  404c29:	test   DWORD PTR [edi],eax
  404c2b:	jge    0x404bcf
  404c2d:	mov    edx,0xe92789e7
  404c32:	jecxz  0x404c78
  404c34:	mov    ch,0xf5
  404c36:	imul   eax,DWORD PTR [ebx-0x1a],0x11
  404c3a:	sar    BYTE PTR [ebp-0x15b6e34f],1
  404c40:	jnp    0x404c22
  404c42:	mov    edi,0x29a16edf
  404c47:	xor    bl,bh
  404c49:	not    dl
  404c4b:	leave  
  404c4c:	ss and eax,0x8299d56
  404c52:	dec    DWORD PTR [esp+esi*2]
  404c55:	sar    dh,cl
  404c57:	cmc    
  404c58:	icebp  
  404c59:	and    eax,0x68b66610
  404c5e:	retf   
  404c5f:	mov    eax,ds:0xac41a707
  404c64:	sub    BYTE PTR [eax+0x55],dh
  404c67:	xlat   BYTE PTR ds:[ebx]
  404c68:	inc    ebx
  404c69:	retf   0x38
  404c6c:	jmp    0x70e:0x54cbae32
  404c73:	aam    0xbc
  404c75:	cld    
  404c76:	(bad)  
  404c78:	sbb    BYTE PTR [edi+esi*4+0x34c81ff6],0x4b
  404c80:	sar    DWORD PTR [edx+0x77],0xe8
  404c84:	pop    ecx
  404c85:	jmp    0x404cd0
  404c87:	dec    eax
  404c88:	call   0x45f27a8c
  404c8d:	ret    
  404c8e:	sahf   
  404c8f:	ret    
  404c90:	mov    ch,0xe
  404c92:	out    0x35,eax
  404c94:	xchg   esi,eax
  404c95:	or     DWORD PTR [edx-0x6],ebx
  404c98:	gs ins DWORD PTR es:[edi],dx
  404c9a:	cbw    
  404c9c:	shl    ah,1
  404c9e:	or     al,0x66
  404ca0:	sub    DWORD PTR [ebx-0x35],ecx
  404ca3:	data16 test al,0x8a
  404ca6:	cmc    
  404ca7:	xor    al,0x8d
  404ca9:	inc    edi
  404caa:	mov    DWORD PTR [ecx-0x7c6da83a],ebp
  404cb0:	pop    eax
  404cb1:	into   
  404cb2:	push   edx
  404cb3:	imul   eax,DWORD PTR [edi-0x6a896cf3],0x72efe07d
  404cbd:	mov    al,ds:0x65e2a75d
  404cc2:	out    0x35,al
  404cc4:	sbb    cl,bl
  404cc6:	sar    DWORD PTR [edx],cl
  404cc8:	aas    
  404cc9:	ret    
  404cca:	push   edi
  404ccb:	adc    DWORD PTR [esi+0x5c],esp
  404cce:	icebp  
  404ccf:	dec    edx
  404cd0:	xlat   BYTE PTR ds:[ebx]
  404cd1:	mov    bl,0x81
  404cd3:	dec    ecx
  404cd4:	adc    eax,0x8c9489eb
  404cd9:	mov    BYTE PTR [ebx-0x5d],dh
  404cdc:	push   ds
  404cdd:	pop    ss
  404cde:	les    esi,FWORD PTR [eax]
  404ce0:	mov    ebx,0x11b74fc4
  404ce5:	dec    eax
  404ce6:	jmp    0xbd83800a
  404ceb:	das    
  404cec:	or     dl,ch
  404cee:	lods   al,BYTE PTR ds:[esi]
  404cef:	fmul   DWORD PTR [eax-0x15e0bca0]
  404cf5:	and    BYTE PTR [ebx-0x7773658f],ch
  404cfb:	std    
  404cfc:	and    al,0x45
  404cfe:	mov    ebp,0x9e7cb07e
  404d03:	repz or edi,DWORD PTR [ebp-0x2d5822c7]
  404d0a:	inc    esp
  404d0b:	stc    
  404d0c:	xchg   esi,eax
  404d0d:	sub    edx,eax
  404d0f:	xor    dl,dl
  404d11:	mov    ecx,0x6c4520c1
  404d16:	pop    ds
  404d17:	and    cl,cl
  404d19:	push   ebp
  404d1a:	sar    DWORD PTR [eax-0x4627e389],0x26
  404d21:	repz mov esi,DWORD PTR [ebx-0x5495fb75]
  404d28:	in     eax,0x2b
  404d2a:	ins    BYTE PTR es:[edi],dx
  404d2b:	adc    cl,bl
  404d2d:	mov    eax,0x6d5ac9
  404d32:	sub    DWORD PTR [ecx-0x73],eax
  404d35:	add    BYTE PTR [esi+0x70],ah
  404d38:	adc    al,0x89
  404d3a:	inc    edx
  404d3b:	add    eax,0x333896b6
  404d40:	sbb    DWORD PTR [edx+0x4a],eax
  404d43:	jg     0x404daa
  404d45:	push   0xffffff95
  404d47:	mov    esp,0x2876d297
  404d4c:	bnd jmp 0x1c9aebc1
  404d52:	adc    al,0x24
  404d54:	outs   dx,BYTE PTR ds:[esi]
  404d55:	xchg   esp,eax
  404d56:	pop    esp
  404d57:	pop    ds
  404d58:	lods   eax,DWORD PTR ds:[esi]
  404d59:	cli    
  404d5a:	in     al,dx
  404d5b:	not    BYTE PTR [ecx]
  404d5d:	(bad)  
  404d5e:	div    BYTE PTR [edx]
  404d60:	in     al,0xcf
  404d62:	adc    al,0x59
  404d64:	mov    ds:0x77baa916,eax
  404d69:	popa   
  404d6a:	and    dl,BYTE PTR [edi]
  404d6c:	js     0x404d6c
  404d6e:	shl    esp,1
  404d70:	(bad)  
  404d71:	in     al,dx
  404d72:	pop    esp
  404d73:	cmp    eax,0x2405f193
  404d78:	push   ecx
  404d79:	adc    eax,0x59c174c4
  404d7e:	ret    0x8f6d
  404d81:	inc    ebp
  404d82:	cmp    al,0x32
  404d84:	sbb    al,0xf2
  404d86:	inc    esp
  404d87:	stos   DWORD PTR es:[edi],eax
  404d88:	mov    bh,0x1d
  404d8a:	xchg   edx,eax
  404d8b:	test   al,0x54
  404d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d8e:	sbb    BYTE PTR [edx],bl
  404d90:	mov    bl,0xcb
  404d92:	pusha  
  404d93:	jge    0x404d28
  404d95:	xor    al,BYTE PTR [ecx-0x47fc4abd]
  404d9b:	fcomp  QWORD PTR [edx+0x15]
  404d9e:	shl    BYTE PTR [ebx+0x12],cl
  404da1:	int    0x4c
  404da3:	int    0x3
  404da5:	(bad)  
  404da6:	ret    0x2c6
  404da9:	xor    BYTE PTR [ebp+0x5],dh
  404dac:	push   edi
  404dad:	mov    esi,0xff1dfd6a
  404db2:	(bad)  
  404db4:	xor    DWORD PTR [edi-0x117dff37],ecx
  404dba:	xor    ebx,DWORD PTR [ebp-0x45]
  404dbd:	(bad)  
  404dbe:	std    
  404dbf:	stos   DWORD PTR es:[edi],eax
  404dc0:	in     al,0x85
  404dc2:	nop
  404dc3:	sub    eax,0x409b8a40
  404dc8:	and    DWORD PTR [edx-0x1a],0xffffffdd
  404dcc:	mov    ecx,0xc24eada2
  404dd1:	pop    esi
  404dd2:	adc    BYTE PTR [ebx-0x1a3a0807],ch
  404dd8:	jo     0x404dee
  404dda:	sub    ecx,ebp
  404ddc:	pop    esp
  404ddd:	outs   dx,DWORD PTR ds:[esi]
  404dde:	ja     0x404dc3
  404de0:	inc    edx
  404de1:	jge    0x404dfb
  404de3:	(bad)  [eax]
  404de5:	sbb    DWORD PTR [ebp+ebx*8-0x1d],esi
  404de9:	hlt    
  404dea:	jge    0x404dae
  404dec:	mov    BYTE PTR [esp+ecx*8],al
  404def:	ret    
  404df0:	scas   eax,DWORD PTR es:[edi]
  404df1:	cmp    ecx,DWORD PTR ds:0xfab342c2
  404df7:	push   eax
  404df8:	mov    cl,0xbe
  404dfa:	repnz pop ebp
  404dfc:	push   esi
  404dfd:	xor    ah,BYTE PTR [ecx]
  404dff:	sub    al,0x2b
  404e01:	std    
  404e02:	jmp    0xcaa21541
  404e07:	ss je  0x404def
  404e0a:	sbb    BYTE PTR [bp+di-0x4c3],cl
  404e0f:	pop    ebx
  404e10:	rcl    DWORD PTR [ebx+0x3],cl
  404e13:	xor    al,0xbb
  404e15:	mov    edi,0x9271bda5
  404e1a:	mov    edi,0xfa714350
  404e1f:	adc    al,0xff
  404e21:	cmc    
  404e22:	pusha  
  404e23:	lahf   
  404e24:	in     al,0xd4
  404e26:	adc    eax,DWORD PTR [esp+ebp*2]
  404e29:	adc    esp,esi
  404e2b:	clc    
  404e2c:	adc    BYTE PTR [edi],dl
  404e2e:	adc    bh,BYTE PTR [esi]
  404e30:	push   edx
  404e31:	add    DWORD PTR [ecx-0x583c2367],esp
  404e37:	es (bad) 
  404e39:	push   edx
  404e3a:	aam    0x99
  404e3c:	push   ss
  404e3d:	cli    
  404e3e:	test   al,0xdc
  404e40:	sub    al,0x8
  404e42:	pop    edi
  404e43:	std    
  404e44:	jecxz  0x404e25
  404e46:	adc    BYTE PTR [edi+edi*1+0xfba3c6b],bl
  404e4d:	fdivp  st(5),st
  404e4f:	in     eax,dx
  404e50:	out    dx,al
  404e51:	and    DWORD PTR [edx],edx
  404e53:	mov    ecx,0x7e09d68f
  404e58:	mov    esp,0x46041bd7
  404e5d:	jb     0x404e8f
  404e5f:	fidiv  DWORD PTR [eax+0xc]
  404e62:	mov    ebx,0x985b4a2a
  404e67:	shl    BYTE PTR [edi],1
  404e69:	sbb    BYTE PTR [eax-0x7d],0x82
  404e6d:	cmp    ebp,ebp
  404e6f:	ja     0x404e91
  404e71:	add    eax,0x17fd963f
  404e76:	jp     0x404e1e
  404e78:	and    DWORD PTR [ebp+0x378bbdb],ebx
  404e7e:	fisttp WORD PTR [eax+0x6d2712ff]
  404e84:	ds mov ecx,0x15010887
  404e8a:	cmp    eax,0xe54ed66
  404e8f:	inc    edi
  404e90:	lock jbe 0x404eb5
  404e93:	cmp    ebx,esp
  404e95:	data16 icebp 
  404e97:	add    ebx,DWORD PTR [ebx+esi*4+0x3054aa2c]
  404e9e:	mov    ch,BYTE PTR [ecx+edx*2+0x1c41cd95]
  404ea5:	mov    DWORD PTR [ebx-0x79],edi
  404ea8:	jl     0x404e5d
  404eaa:	out    dx,al
  404eab:	inc    ebp
  404eac:	(bad)  
  404ead:	retf   0x5e21
  404eb0:	or     eax,0x72749532
  404eb5:	pushf  
  404eb6:	test   al,0x3d
  404eb8:	adc    cl,BYTE PTR [ebx+0x47]
  404ebb:	adc    al,0x1c
  404ebd:	and    cl,BYTE PTR [ebp-0x32]
  404ec0:	xlat   BYTE PTR ds:[ebx]
  404ec1:	(bad)  
  404ec2:	fild   WORD PTR [ebx-0x4c]
  404ec5:	(bad)
  404ec8:	mov    WORD PTR [esp+ebp*8],fs
  404ecb:	or     BYTE PTR gs:[eax],ah
  404ece:	fimul  DWORD PTR [ebp+eax*8+0x4e]
  404ed2:	and    BYTE PTR [ebp-0x1d7b5e73],ah
  404ed8:	dec    esp
  404ed9:	leave  
  404eda:	(bad)  
  404edb:	inc    edx
  404edc:	add    eax,0x62737317
  404ee1:	pop    ds
  404ee2:	(bad)  
  404ee3:	in     eax,0x4b
  404ee5:	or     DWORD PTR [ecx-0x66642c63],edi
  404eeb:	mov    dl,0x4
  404eed:	dec    esi
  404eee:	push   esi
  404eef:	xchg   esi,eax
  404ef0:	jmp    0xe71e00ec
  404ef5:	mov    ecx,0xb140bda1
  404efa:	cmp    bl,BYTE PTR [eax+ecx*4]
  404efd:	or     al,0x17
  404eff:	mov    ebx,0x3a47e314
  404f04:	pop    es
  404f05:	mov    bh,bh
  404f07:	jecxz  0x404f57
  404f09:	inc    ebp
  404f0a:	inc    esi
  404f0b:	fcomi  st,st(5)
  404f0d:	(bad)  
  404f0e:	fs int3 
  404f10:	mov    esp,0xa3bd9dd
  404f15:	test   DWORD PTR [esi+0x6b],ebx
  404f18:	dec    eax
  404f19:	or     BYTE PTR [esi+esi*1-0x55],dh
  404f1d:	ins    DWORD PTR es:[edi],dx
  404f1e:	pop    ecx
  404f1f:	push   ebp
  404f20:	push   es
  404f21:	pop    edx
  404f22:	xor    al,0x47
  404f24:	js     0x404f9c
  404f26:	(bad)  
  404f27:	call   0x3e6ee964
  404f2c:	repnz mov dh,0xc3
  404f2f:	cmc    
  404f30:	enter  0x4c64,0xc0
  404f34:	jne    0x404ed0
  404f36:	out    0xe5,eax
  404f38:	xchg   ebx,eax
  404f39:	call   0x1dd9:0xcff69514
  404f40:	cmp    ebp,DWORD PTR [esi-0x38]
  404f43:	pop    esi
  404f44:	dec    edx
  404f45:	jbe    0x404f08
  404f47:	mov    ebx,0x1130a4f2
  404f4c:	mov    dh,0x90
  404f4e:	retf   
  404f4f:	xchg   DWORD PTR [ebx-0x46aabcc8],edx
  404f55:	lods   eax,DWORD PTR ds:[esi]
  404f56:	ins    BYTE PTR es:[edi],dx
  404f57:	sbb    edi,ebp
  404f59:	(bad)  
  404f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f5b:	mov    ch,0x76
  404f5d:	mov    esi,0xca8d70df
  404f62:	sbb    eax,0x42268006
  404f67:	add    ecx,DWORD PTR [eax-0x43]
  404f6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f6b:	and    DWORD PTR [ecx],eax
  404f6d:	inc    edx
  404f6e:	addr16 pop ebx
  404f70:	js     0x404fa0
  404f72:	sar    DWORD PTR [ecx-0x6ea51785],cl
  404f78:	test   ch,dl
  404f7a:	icebp  
  404f7b:	lahf   
  404f7c:	push   ecx
  404f7d:	add    DWORD PTR [ebx],ebx
  404f7f:	popf   
  404f80:	or     DWORD PTR [ebp-0x2c30ac7d],0x5f3b29ca
  404f8a:	or     esi,DWORD PTR ds:0x3d19936b
  404f90:	sub    eax,0xb7e9209d
  404f95:	mov    ah,0x20
  404f97:	inc    ebp
  404f98:	or     dh,BYTE PTR ds:0x6bb556c6
  404f9e:	dec    edx
  404f9f:	rcr    esp,cl
  404fa1:	mov    BYTE PTR [esi+0x23],bl
  404fa4:	inc    edx
  404fa5:	mov    ch,0x86
  404fa7:	or     eax,0x604391e5
  404fac:	sub    DWORD PTR [edx-0x1],edx
  404faf:	xlat   BYTE PTR ds:[ebx]
  404fb0:	in     al,0x73
  404fb2:	or     al,0x4
  404fb4:	jle    0x404f9a
  404fb6:	(bad)  
  404fb7:	rcr    BYTE PTR [esi],0xfd
  404fba:	xchg   ebx,eax
  404fbb:	mov    dh,0xe
  404fbd:	mov    edx,0xea681af
  404fc2:	cmp    bh,BYTE PTR [edi]
  404fc4:	data16 int3 
  404fc6:	xchg   DWORD PTR [edx+0xc4b1a53],esi
  404fcc:	shr    bh,1
  404fce:	mov    esi,0xfca82899
  404fd3:	daa    
  404fd4:	es pop esi
  404fd6:	call   0xb537:0xf23d34db
  404fdd:	gs xchg ebx,eax
  404fdf:	push   ss
  404fe0:	jge    0x40503c
  404fe2:	mov    cl,0xd0
  404fe4:	es mov edx,0x243ba7c8
  404fea:	sahf   
  404feb:	cmp    DWORD PTR [esi],0x51318a9f
  404ff1:	inc    edi
  404ff2:	push   edx
  404ff3:	gs pop edx
  404ff5:	cwde   
  404ff6:	das    
  404ff7:	std    
  404ff8:	mov    dl,0xfa
  404ffa:	ja     0x404fa9
  404ffc:	add    al,0x90
  404ffe:	call   0x627c84e9
  405003:	sbb    BYTE PTR [edi+0x1f],dl
  405006:	xlat   BYTE PTR ds:[ebx]
  405007:	(bad)  
  405008:	sub    BYTE PTR [ecx-0xe7d3ce9],bl
  40500e:	es add eax,0xda607aaa
  405014:	xor    al,0x9d
  405016:	lds    ecx,FWORD PTR [ecx+0x2b]
  405019:	xchg   ecx,eax
  40501a:	mov    ah,0x13
  40501c:	inc    edx
  40501d:	in     al,dx
  40501e:	dec    eax
  40501f:	or     dl,dh
  405021:	sbb    ch,dl
  405023:	pop    ss
  405024:	fwait
  405025:	js     0x40508c
  405027:	adc    esi,DWORD PTR [ecx-0x7365c38]
  40502d:	stc    
  40502e:	repnz mov edx,DWORD PTR [edx-0x7f2b800d]
  405035:	mov    esi,0xe5c8f9b2
  40503a:	rol    DWORD PTR [ebx-0xc],0x10
  40503e:	stc    
  40503f:	xchg   esp,eax
  405040:	cmp    dh,BYTE PTR [edx]
  405042:	mov    esp,0xabbf81cc
  405047:	jae    0x405002
  405049:	fdivrp st(7),st
  40504b:	or     al,0x79
  40504d:	sti    
  40504e:	mov    bh,0xe8
  405050:	pause  
  405052:	push   esp
  405053:	retf   0xfd1
  405056:	pop    es
  405057:	mov    edx,0xcc6138c3
  40505c:	xor    ah,ah
  40505e:	mov    ebx,0x7f9b7b2c
  405063:	jo     0x4050b4
  405065:	jno    0x4050ac
  405067:	call   0x5a55:0x50c8ba8d
  40506e:	xor    DWORD PTR [ebp+0x6146b3c2],esi
  405074:	dec    ebx
  405075:	test   eax,0x31e608bc
  40507a:	ror    ebx,0x7a
  40507d:	or     al,0x1c
  40507f:	mov    dh,0xb6
  405081:	mov    ah,0xba
  405083:	int3   
  405084:	mov    esp,0x73253b61
  405089:	inc    edx
  40508a:	enter  0x3637,0x3d
  40508e:	or     eax,0xbad87465
  405093:	mov    esp,0x16a79d94
  405098:	add    esp,DWORD PTR [esi+0x681ce437]
  40509e:	loop   0x40510c
  4050a0:	pop    ecx
  4050a1:	pop    ebp
  4050a2:	cmp    al,0x38
  4050a4:	test   BYTE PTR [ebx],ch
  4050a6:	push   es
  4050a7:	xor    al,0x92
  4050a9:	adc    BYTE PTR [edx*2+0x6f7d5741],ch
  4050b0:	jb     0x4050aa
  4050b2:	add    ah,0x3f
  4050b5:	add    al,0xcc
  4050b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050b8:	push   esp
  4050b9:	rcl    BYTE PTR [esi],cl
  4050bb:	sub    eax,0xac1e11b2
  4050c0:	nop
  4050c1:	cmc    
  4050c2:	aaa    
  4050c3:	or     eax,0x5a3e2189
  4050c8:	add    DWORD PTR [edi],edx
  4050ca:	jo     0x4050c5
  4050cc:	mov    esp,0x1e05731e
  4050d1:	xor    eax,0x6f0e135a
  4050d6:	stos   DWORD PTR es:[edi],eax
  4050d7:	jo     0x40509d
  4050d9:	pop    esi
  4050da:	xor    DWORD PTR [ebx],ecx
  4050dc:	mov    dh,0xc
  4050de:	shl    BYTE PTR [esi+0x68],cl
  4050e1:	ss stc 
  4050e3:	add    BYTE PTR [edi-0x4a],dh
  4050e6:	lods   al,BYTE PTR ds:[esi]
  4050e7:	out    0x9c,al
  4050e9:	xor    al,0x6
  4050eb:	push   cs
  4050ec:	jmp    0x7aacb0c7
  4050f1:	hlt    
  4050f2:	mov    dh,0xc7
  4050f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050f5:	adc    eax,0x25d23b17
  4050fa:	fisubr WORD PTR [ebx]
  4050fc:	fild   DWORD PTR [edi-0x7a3dbf4f]
  405102:	icebp  
  405103:	push   cs
  405104:	push   ecx
  405105:	mov    ecx,0x68d87720
  40510a:	xor    DWORD PTR [ebx+0x4f377686],eax
  405110:	stos   BYTE PTR es:[edi],al
  405111:	std    
  405112:	popa   
  405113:	stos   BYTE PTR es:[edi],al
  405114:	sar    BYTE PTR [edx-0x3],cl
  405117:	xchg   ecx,eax
  405118:	mov    edi,0x8640d2ce
  40511d:	lods   al,BYTE PTR ds:[esi]
  40511f:	ret    0x5b41
  405122:	ret    0x5f6f
  405125:	xor    al,0x4b
  405127:	pop    edi
  405128:	jmp    0x67cc12e3
  40512d:	sbb    al,0x58
  40512f:	icebp  
  405130:	je     0x40511f
  405132:	and    BYTE PTR [ebx-0x241ab8f8],0x8b
  405139:	jl     0x4051a9
  40513b:	dec    ecx
  40513c:	mov    dl,0xc3
  40513e:	mov    cs,WORD PTR [esi-0xd3cd30a]
  405144:	lock xlat BYTE PTR ds:[ebx]
  405146:	sbb    cl,BYTE PTR [edi]
  405148:	mov    dh,0x89
  40514a:	outs   dx,DWORD PTR ds:[esi]
  40514b:	add    DWORD PTR [ebx+0x23edcec0],edx
  405151:	test   BYTE PTR [edi],bh
  405153:	mov    DWORD PTR [ebx],0xb864b816
  405159:	call   edx
  40515b:	cmp    eax,0x5d5e365b
  405160:	in     eax,dx
  405161:	sbb    eax,0x8fdfde00
  405166:	mov    bh,0x84
  405168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405169:	repz push ds
  40516b:	cld    
  40516c:	xchg   ebp,eax
  40516d:	jl     0x4051e9
  40516f:	mov    BYTE PTR [ecx-0xd],dl
  405172:	push   ecx
  405173:	(bad)  
  405174:	test   eax,0x7d95adc0
  405179:	xor    ecx,DWORD PTR [esi-0x41]
  40517c:	sub    BYTE PTR [esi+0x786e3e43],al
  405182:	pop    ecx
  405183:	ins    DWORD PTR es:[edi],dx
  405184:	neg    DWORD PTR [edi]
  405186:	push   ebx
  405187:	retf   0x2edf
  40518a:	sbb    esi,DWORD PTR [ebx]
  40518c:	cmp    ebx,0xffffffb6
  40518f:	add    DWORD PTR [ebx-0x55],eax
  405192:	mov    ch,0x7e
  405194:	dec    ebp
  405195:	icebp  
  405196:	inc    eax
  405197:	stos   DWORD PTR es:[edi],eax
  405198:	je     0x405215
  40519a:	mov    ebx,0xdcd49878
  40519f:	xchg   esp,eax
  4051a0:	push   ebx
  4051a1:	loopne 0x40519d
  4051a3:	add    ecx,edi
  4051a5:	fnsave es:[esi+0x25dd262]
  4051ac:	ret    
  4051ad:	out    0x3e,eax
  4051af:	js     0x4051ed
  4051b1:	(bad)  
  4051b2:	jmp    0xd57e:0xcb461e3f
  4051b9:	jns    0x40521e
  4051bb:	imul   ecx,DWORD PTR [esi+ebp*1+0x167547d1],0x7d15700d
  4051c6:	out    0x9d,al
  4051c8:	das    
  4051c9:	and    DWORD PTR [edx],ecx
  4051cb:	mov    ?,WORD PTR [ebp-0xf9ad59c]
  4051d1:	fstp   DWORD PTR [ebp-0x3267fc39]
  4051d7:	mov    ebx,0x45bbd5b0
  4051dc:	scas   eax,DWORD PTR es:[edi]
  4051dd:	(bad)  
  4051de:	jb     0x405207
  4051e0:	push   eax
  4051e1:	sti    
  4051e2:	shl    BYTE PTR [eax+0x46],0x67
  4051e6:	dec    esi
  4051e7:	aaa    
  4051e8:	push   ebx
  4051e9:	cwde   
  4051ea:	jp     0x4051cd
  4051ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051ed:	or     BYTE PTR [ebx-0x1b],dl
  4051f0:	xchg   ebp,eax
  4051f1:	pop    ss
  4051f2:	add    ch,bh
  4051f4:	fld    QWORD PTR [edi+0x6e42e9b9]
  4051fa:	enter  0x7d15,0xd6
  4051fe:	data16 scas al,BYTE PTR es:[edi]
  405200:	inc    edx
  405201:	dec    ebp
  405202:	push   ds
  405203:	aam    0x2e
  405205:	adc    DWORD PTR [edi],esp
  405207:	xor    dh,BYTE PTR [eax+0x1b65e428]
  40520d:	ins    DWORD PTR es:[edi],dx
  40520e:	sub    al,0xab
  405210:	and    BYTE PTR [ebx-0x267943d2],cl
  405216:	cmp    al,0x7c
  405218:	sub    al,0x17
  40521a:	int    0x19
  40521c:	out    dx,eax
  40521d:	fld    DWORD PTR [ecx]
  40521f:	arpl   bx,ax
  405221:	pop    ebp
  405222:	and    dl,BYTE PTR [ecx+0x1b]
  405225:	xchg   ebp,eax
  405226:	push   ds
  405227:	in     eax,0x16
  405229:	mov    esp,0x7ab22c5b
  40522e:	outs   dx,BYTE PTR ds:[esi]
  40522f:	pop    ss
  405230:	push   ebp
  405231:	push   0xffffffb9
  405233:	inc    eax
  405234:	dec    ecx
  405235:	das    
  405236:	adc    al,0x4e
  405238:	fld    TBYTE PTR [esi]
  40523a:	jl     0x405279
  40523c:	(bad)  
  40523d:	clc    
  40523e:	push   esp
  40523f:	pop    esi
  405240:	mov    edx,DWORD PTR [ebp+edx*2+0x70]
  405244:	fiadd  WORD PTR [edi+0x4c]
  405247:	mov    bl,0x49
  405249:	addr16 std 
  40524b:	or     DWORD PTR ds:0xac18a06a,edi
  405251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405252:	jmp    0x4051ee
  405254:	daa    
  405255:	fiadd  DWORD PTR [edi]
  405257:	push   ds
  405258:	or     eax,0xe7da1d0a
  40525d:	mov    ds:0x6f187de0,al
  405262:	adc    DWORD PTR [ecx+eiz*8+0x55237e52],esp
  405269:	bound  ebp,QWORD PTR [ebp-0x76]
  40526c:	hlt    
  40526d:	mov    dl,0x17
  40526f:	push   ebp
  405270:	hlt    
  405271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405272:	(bad)  
  405273:	xchg   ecx,eax
  405274:	test   BYTE PTR [edi],ch
  405276:	or     BYTE PTR [ecx+0x5394fc5e],ah
  40527c:	scas   al,BYTE PTR es:[edi]
  40527d:	std    
  40527e:	cs pop esi
  405280:	inc    edi
  405281:	and    al,0x72
  405283:	mov    DWORD PTR ds:0xe28180d4,ebx
  405289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40528a:	mov    bh,0x48
  40528c:	mov    eax,ds:0x743a522e
  405291:	sar    DWORD PTR [edi+0x3b503452],0x1d
  405298:	add    al,0xb0
  40529a:	je     0x405305
  40529c:	cli    
  40529d:	cmp    al,0x53
  40529f:	cwde   
  4052a0:	pop    eax
  4052a1:	addr16 aas 
  4052a3:	adc    edi,DWORD PTR [esi]
  4052a5:	push   ebx
  4052a6:	adc    eax,0xb926dbdd
  4052ab:	aaa    
  4052ac:	jno    0x4052a2
  4052ae:	mul    DWORD PTR [eax+eax*8+0xaef2c4c]
  4052b5:	loopne 0x405328
  4052b7:	mov    DWORD PTR [ebp+0x1715bf8],ebp
  4052bd:	mov    esi,0x33091917
  4052c2:	into   
  4052c3:	jg     0x405262
  4052c5:	jae    0x40532a
  4052c7:	dec    eax
  4052c8:	mov    eax,0xb992d1e5
  4052cd:	mov    ebx,0x8344c52c
  4052d2:	pop    esp
  4052d3:	or     BYTE PTR [edi],bl
  4052d5:	cdq    
  4052d6:	sar    dh,0xae
  4052d9:	icebp  
  4052da:	pusha  
  4052db:	xchg   ebx,eax
  4052dc:	scas   al,BYTE PTR es:[edi]
  4052dd:	add    al,0xf7
  4052df:	xlat   BYTE PTR ds:[ebx]
  4052e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052e1:	mov    ebx,0x7a51197f
  4052e6:	inc    edx
  4052e7:	cmc    
  4052e8:	jle    0x40534c
  4052ea:	repz into 
  4052ec:	sub    eax,0x56aa4b0d
  4052f1:	cmp    edx,eax
  4052f3:	jns    0x4052cd
  4052f5:	(bad)  
  4052f6:	jmp    0x9c39db33
  4052fb:	xchg   DWORD PTR [edi-0x50059323],ebp
  405301:	jo     0x4052ca
  405303:	cmp    DWORD PTR [edi-0x24],edi
  405306:	jae    0x4052f9
  405308:	int3   
  405309:	clc    
  40530a:	js     0x4052c9
  40530c:	pop    ecx
  40530d:	test   eax,0x51f10e7f
  405312:	mov    WORD PTR [eax-0x7a],es
  405315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405316:	fimul  DWORD PTR [ecx-0x62066ac4]
  40531c:	or     al,BYTE PTR [ecx+0x2085c86d]
  405322:	out    0xec,eax
  405324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405325:	sub    al,0xb2
  405327:	inc    eax
  405328:	sub    bl,BYTE PTR [ebx+0x26]
  40532b:	fiadd  DWORD PTR [eax-0x1d95cbf9]
  405331:	xor    ebp,edi
  405333:	xchg   esi,eax
  405334:	cwde   
  405335:	jmp    0x4a4f:0xd9c84f58
  40533c:	sahf   
  40533d:	jmp    0x49d0:0xad86a476
  405344:	fisubr DWORD PTR [edx]
  405346:	(bad)  
  405347:	mov    ds:0x4a82583d,eax
  40534c:	push   esp
  40534d:	in     al,0x7b
  40534f:	or     eax,0x47b598c4
  405354:	out    dx,al
  405355:	mov    ah,0xfa
  405357:	sbb    eax,0xe957792d
  40535c:	and    bh,BYTE PTR [esi-0x5630084]
  405362:	out    dx,eax
  405363:	jecxz  0x405376
  405365:	aad    0x8d
  405367:	mov    ecx,DWORD PTR [edi-0x70]
  40536a:	shl    DWORD PTR [eax+0x2b],cl
  40536d:	push   esi
  40536e:	in     eax,0x60
  405370:	arpl   WORD PTR [edx-0x3155b748],sp
  405376:	mov    edi,0x3e61ea05
  40537b:	sbb    esi,eax
  40537d:	pop    eax
  40537e:	mov    eax,ds:0x8b665396
  405383:	inc    eax
  405384:	push   ds
  405385:	and    eax,0x3b2781f2
  40538a:	out    0x87,eax
  40538c:	push   edi
  40538d:	dec    edi
  40538e:	dec    edi
  40538f:	int    0xd
  405391:	test   DWORD PTR [eax],0x1695f272
  405397:	push   ebx
  405398:	lds    edi,FWORD PTR [ebp+0x4d397b54]
  40539e:	sbb    bh,ah
  4053a0:	addr16 retf 0x2c50
  4053a4:	pop    ebx
  4053a5:	stc    
  4053a6:	int    0x9d
  4053a8:	mov    ch,0xf1
  4053aa:	rol    BYTE PTR [edx+0x1f9a3378],cl
  4053b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053b1:	sub    ah,BYTE PTR [eax]
  4053b3:	in     eax,0x79
  4053b5:	sbb    eax,DWORD PTR [edi]
  4053b7:	inc    eax
  4053b8:	sar    BYTE PTR [edx-0x3dc53c26],0xa9
  4053bf:	pop    ebx
  4053c0:	scas   al,BYTE PTR es:[edi]
  4053c1:	mov    WORD PTR [edx-0x6977f0db],fs
  4053c7:	mov    WORD PTR [ebp+0xe7529e],?
  4053cd:	xchg   esp,eax
  4053ce:	or     al,0x43
  4053d0:	fild   DWORD PTR es:[eax]
  4053d3:	sbb    esp,DWORD PTR [ebp-0x3b]
  4053d6:	sub    eax,0x971cf17a
  4053db:	aaa    
  4053dc:	call   0x6599f306
  4053e1:	fwait
  4053e2:	sub    bh,BYTE PTR [edi]
  4053e4:	pop    esi
  4053e5:	into   
  4053e6:	push   ds
  4053e7:	pusha  
  4053e8:	inc    esp
  4053e9:	and    bh,BYTE PTR [edi+0x46]
  4053ec:	popa   
  4053ed:	fwait
  4053ee:	scas   al,BYTE PTR es:[edi]
  4053ef:	repz or al,0x94
  4053f2:	js     0x405417
  4053f4:	xor    bh,BYTE PTR [edi-0xee8c82f]
  4053fa:	in     al,0x31
  4053fc:	adc    BYTE PTR [eax],bh
  4053fe:	pop    edx
  4053ff:	push   ecx
  405400:	fcom   QWORD PTR ds:[edi-0x4ae3db82]
  405407:	leave  
  405408:	xchg   esp,eax
  405409:	ror    DWORD PTR [edx-0x43],0xaf
  40540d:	fnsave [ebx+0x692feee6]
  405413:	cmp    eax,0x9fa0dd58
  405418:	mov    al,0x80
  40541a:	sbb    bl,dh
  40541c:	repz into 
  40541e:	sub    ah,bl
  405420:	in     al,dx
  405421:	sbb    DWORD PTR gs:[esi],edi
  405424:	jl     0x405489
  405426:	jmp    0xfdd8:0x1b1da158
  40542d:	test   al,0x28
  40542f:	or     bh,BYTE PTR [eax+0x35]
  405432:	mov    edx,0x41a9b8bc
  405437:	enter  0x43f4,0xea
  40543b:	sbb    cl,BYTE PTR [eax+0x59]
  40543e:	mov    ch,0xaa
  405440:	pushf  
  405441:	dec    edi
  405442:	mov    edi,0x47d1d0f7
  405447:	adc    al,0x4
  405449:	or     esp,DWORD PTR [ecx+0x55ca9dff]
  40544f:	cmp    cl,dh
  405451:	sub    BYTE PTR [ebp+0x1f5910b4],bl
  405457:	jae    0x405408
  405459:	sar    BYTE PTR [eax+0x58],0x7c
  40545d:	push   edx
  40545e:	xchg   ecx,eax
  40545f:	bound  edi,QWORD PTR [edi+0x4aeebff9]
  405465:	mov    dh,0xa1
  405467:	and    al,0x32
  405469:	jl     0x40543a
  40546b:	jge    0x4054aa
  40546d:	retf   
  40546e:	aas    
  40546f:	stc    
  405470:	sar    BYTE PTR [edi],0x27
  405473:	sub    DWORD PTR [edx],0xd6a4f295
  405479:	inc    eax
  40547a:	(bad)  
  40547b:	out    0xb9,eax
  40547d:	inc    ebp
  40547e:	jo     0x405423
  405480:	inc    ecx
  405481:	pusha  
  405482:	dec    ebx
  405483:	pop    edi
  405484:	repnz test bl,0xcd
  405488:	pop    edx
  405489:	mov    eax,0xde7af30c
  40548e:	pop    es
  40548f:	push   es
  405490:	cld    
  405491:	add    bl,BYTE PTR [ebp-0x3af1a78a]
  405497:	adc    BYTE PTR [esi+0x3],al
  40549a:	call   0xc61fbc26
  40549f:	push   cs
  4054a0:	in     eax,dx
  4054a1:	dec    edx
  4054a2:	imul   ebx,esp,0x1570098f
  4054a8:	fs repnz xchg ecx,eax
  4054ab:	in     eax,0xc4
  4054ad:	retf   0x2307
  4054b0:	ffreep st(1)
  4054b2:	loopne 0x40551f
  4054b4:	and    ch,BYTE PTR [edi+edx*8]
  4054b7:	pop    ss
  4054b8:	push   0xffffff8b
  4054ba:	rcl    BYTE PTR ds:0x5c715b3,0x82
  4054c1:	pusha  
  4054c2:	mov    al,bh
  4054c4:	retf   
  4054c5:	sub    al,0x39
  4054c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054c8:	(bad)  
  4054c9:	leave  
  4054ca:	xchg   ch,ch
  4054cc:	(bad)  
  4054cd:	dec    eax
  4054ce:	dec    edi
  4054cf:	mov    dl,0xe9
  4054d1:	sbb    eax,0x3221be60
  4054d6:	dec    ecx
  4054d7:	cli    
  4054d8:	shl    BYTE PTR [edi],0x7c
  4054db:	adc    DWORD PTR [edi],ecx
  4054dd:	fwait
  4054de:	xlat   BYTE PTR ds:[ebx]
  4054df:	mov    eax,0x24c808d0
  4054e4:	mov    WORD PTR [ebp+0x3f833fa3],ss
  4054ea:	lods   eax,DWORD PTR ds:[esi]
  4054eb:	and    eax,0x16860d98
  4054f0:	daa    
  4054f1:	lahf   
  4054f2:	sub    DWORD PTR [esp+edi*2-0x4eb364ce],esp
  4054f9:	dec    ebp
  4054fa:	in     eax,0xba
  4054fc:	or     edi,ecx
  4054fe:	mov    ?,esp
  405500:	xlat   BYTE PTR ds:[ebx]
  405501:	dec    ecx
  405502:	push   ebx
  405503:	sub    eax,0xb5418d5d
  405508:	pop    ecx
  405509:	retf   
  40550a:	mov    al,ds:0x31ea4d0f
  40550f:	test   BYTE PTR [ecx+0x33884d4e],bh
  405515:	in     al,dx
  405516:	loopne 0x40556d
  405518:	pop    ebp
  405519:	adc    ebp,DWORD PTR [ecx]
  40551b:	stos   DWORD PTR es:[edi],eax
  40551c:	pop    edx
  40551d:	adc    dh,dl
  40551f:	cwde   
  405520:	push   eax
  405521:	xor    ecx,DWORD PTR [esi-0x371da3e6]
  405527:	int    0xa6
  405529:	adc    esp,esi
  40552b:	sbb    DWORD PTR [ecx],edx
  40552d:	call   0xe813:0xab8e5d64
  405534:	mov    es,WORD PTR [edx]
  405536:	sub    al,0x8e
  405538:	dec    esp
  405539:	pop    ss
  40553a:	jo     0x40557f
  40553c:	stos   BYTE PTR es:[edi],al
  40553d:	xchg   DWORD PTR [esi-0x18],edx
  405540:	shl    DWORD PTR [edx],cl
  405542:	mov    esp,0xe35ff232
  405547:	fist   WORD PTR [ebx-0x3725699e]
  40554d:	rcl    DWORD PTR ds:0x1b8e729b,0x96
  405554:	lds    esi,FWORD PTR [ecx]
  405556:	cld    
  405557:	js     0x405577
  405559:	test   eax,0x8ec0e30c
  40555e:	mov    edi,0xc518a22
  405563:	mov    ebp,0x67c1175d
  405568:	push   ss
  405569:	out    dx,eax
  40556a:	mov    dh,0x7d
  40556c:	std    
  40556d:	ja     0x4054ff
  40556f:	out    dx,eax
  405570:	pop    edx
  405571:	data16 mov ch,0xc1
  405574:	bnd js 0x405563
  405577:	sbb    bl,bh
  405579:	out    dx,eax
  40557a:	sub    ebx,DWORD PTR [esp+eax*1-0x51a185bf]
  405581:	fyl2xp1 
  405583:	dec    ebp
  405584:	jo     0x40556b
  405586:	mov    edx,0x9ec88354
  40558b:	dec    eax
  40558c:	aad    0xb4
  40558e:	mov    ax,0x4d65
  405592:	fmul   QWORD PTR [ecx]
  405594:	out    0x4f,al
  405596:	loop   0x405594
  405598:	enter  0xe16a,0x10
  40559c:	push   edi
  40559d:	cmp    al,0x82
  40559f:	stc    
  4055a0:	xor    al,0xe7
  4055a2:	pop    eax
  4055a3:	repnz scas al,BYTE PTR es:[edi]
  4055a5:	add    DWORD PTR [eax],esp
  4055a7:	out    dx,al
  4055a8:	ss mov esp,edi
  4055ab:	outs   dx,DWORD PTR ds:[esi]
  4055ac:	add    al,0x3c
  4055ae:	ins    BYTE PTR es:[edi],dx
  4055af:	mov    cl,0xae
  4055b1:	push   eax
  4055b2:	push   esp
  4055b3:	jbe    0x4055c2
  4055b5:	mov    esp,0x507e69bc
  4055ba:	mov    WORD PTR [ebx+0x15],fs
  4055bd:	inc    esp
  4055be:	sbb    eax,0x5f
  4055c1:	adc    dl,dl
  4055c3:	push   esp
  4055c4:	mul    esp
  4055c6:	and    eax,0xbe644677
  4055cb:	or     al,bh
  4055cd:	ret    
  4055ce:	inc    esp
  4055cf:	jmp    0xd371:0x377b688a
  4055d6:	in     al,dx
  4055d7:	imul   edi,DWORD PTR [edx-0x5e],0x2694dda7
  4055de:	sbb    eax,0x590092c9
  4055e3:	ins    DWORD PTR es:[edi],dx
  4055e4:	fidiv  DWORD PTR [ecx+0x55]
  4055e7:	push   es
  4055e8:	mov    ss,eax
  4055ea:	out    dx,al
  4055eb:	aaa    
  4055ec:	retf   
  4055ed:	out    0x90,al
  4055ef:	scas   eax,DWORD PTR es:[edi]
  4055f0:	cmp    al,0x75
  4055f2:	aaa    
  4055f3:	scas   al,BYTE PTR es:[edi]
  4055f4:	push   ss
  4055f5:	outs   dx,DWORD PTR ds:[esi]
  4055f6:	repnz xor BYTE PTR [edi],0x9c
  4055fa:	mov    cl,0x7c
  4055fc:	cs sahf 
  4055fe:	mov    dl,0x25
  405600:	(bad)  
  405601:	std    
  405602:	add    eax,0x78326046
  405607:	repz mov bl,0x86
  40560a:	arpl   WORD PTR ds:[ebp-0x534e1a9e],bp
  405611:	adc    ebx,edx
  405613:	sub    DWORD PTR [esi-0x6066ad80],esp
  405619:	xchg   ebp,eax
  40561a:	adc    BYTE PTR [edx-0x46],dl
  40561d:	out    dx,al
  40561e:	jl     0x40568e
  405620:	mov    al,0x1b
  405622:	das    
  405623:	hlt    
  405624:	inc    ebx
  405625:	nop
  405626:	mov    ebp,0xfcf8e526
  40562b:	fdivr  DWORD PTR [ebx]
  40562d:	mov    edi,0xadd59d97
  405632:	cdq    
  405633:	cmp    eax,0x37a48f4
  405638:	jmp    0x405658
  40563a:	jae    0x40565b
  40563c:	pop    edi
  40563d:	jmp    0x40563a
  40563f:	inc    eax
  405640:	adc    BYTE PTR [esi+0x6e],dh
  405643:	dec    esi
  405644:	inc    edi
  405645:	jecxz  0x4056ac
  405647:	(bad)  
  405648:	push   0xefd6c033
  40564d:	adc    DWORD PTR [ecx+0x12],esi
  405650:	es pop ss
  405652:	fsub   QWORD PTR [edx]
  405654:	sbb    al,0x5c
  405656:	sti    
  405657:	out    dx,eax
  405658:	fwait
  405659:	aad    0xda
  40565b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40565c:	imul   ecx,DWORD PTR [edx-0x3652f610],0x35
  405663:	add    eax,0x1745c637
  405668:	add    BYTE PTR [eax+0x26353f34],ch
  40566e:	jmp    0x40565b
  405670:	mov    ds:0x641edc2,al
  405675:	xchg   ecx,eax
  405676:	jbe    0x40567e
  405678:	rol    BYTE PTR [esi],cl
  40567a:	push   ds
  40567b:	(bad)
  40567f:	out    dx,eax
  405680:	dec    ebp
  405681:	or     al,0xf1
  405683:	sbb    cl,BYTE PTR [edi-0x7229ff22]
  405689:	add    DWORD PTR [eax+edx*8],ebx
  40568c:	cmp    bl,BYTE PTR [eax+ebp*1]
  40568f:	inc    ebp
  405690:	std    
  405691:	cmp    dh,bl
  405693:	out    dx,eax
  405694:	pushf  
  405695:	ins    BYTE PTR es:[edi],dx
  405696:	das    
  405697:	add    eax,0xb9b250a4
  40569c:	lock mov si,dx
  4056a0:	cmc    
  4056a1:	out    dx,eax
  4056a2:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056a4:	push   cs
  4056a5:	jno    0x405695
  4056a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056a8:	jne    0x405661
  4056aa:	sti    
  4056ab:	jne    0x405694
  4056ad:	addr16 mov al,ds:0x61d4
  4056b1:	lods   eax,DWORD PTR ds:[esi]
  4056b2:	inc    esp
  4056b3:	pop    esi
  4056b4:	xchg   edx,eax
  4056b5:	xor    BYTE PTR [ebp-0x1fcdd637],ah
  4056bb:	inc    esi
  4056bc:	mul    edi
  4056be:	in     eax,0x45
  4056c0:	fwait
  4056c1:	and    DWORD PTR [edx-0x26],0x4b
  4056c5:	rcr    ecx,0x63
  4056c8:	inc    ecx
  4056c9:	pop    ds
  4056ca:	lahf   
  4056cb:	jno    0x4056cb
  4056cd:	mov    ebx,DWORD PTR [ebp-0x7]
  4056d0:	dec    ebp
  4056d1:	int    0xa9
  4056d3:	pop    edi
  4056d4:	add    BYTE PTR [ebx-0x6a3f422d],0x7c
  4056db:	or     BYTE PTR [ebx+0xb],bl
  4056de:	lods   eax,DWORD PTR ds:[esi]
  4056df:	add    bl,BYTE PTR [ebp+0x42]
  4056e2:	aas    
  4056e3:	jbe    0x405682
  4056e5:	mov    eax,0x84868d0d
  4056ea:	dec    edx
  4056eb:	push   es
  4056ec:	mov    ecx,DWORD PTR [ebx+0x19]
  4056ef:	mov    edx,0x76f286fa
  4056f4:	mov    dl,0xe8
  4056f6:	dec    edx
  4056f7:	adc    eax,0x470b9478
  4056fc:	add    DWORD PTR [esi+0x29],edx
  4056ff:	fimul  WORD PTR [edx+0x59]
  405702:	enter  0xd5cd,0x94
  405706:	adc    ah,ch
  405708:	leave  
  405709:	ss cli 
  40570b:	sub    eax,0xa774f071
  405710:	div    BYTE PTR [esi+0x69b77cc2]
  405716:	arpl   bx,ax
  405718:	test   BYTE PTR [ecx],0x95
  40571b:	mov    ebp,0xe53d9417
  405720:	fucomi st,st(7)
  405722:	or     ch,ah
  405724:	mov    ds:0xd9938346,al
  405729:	inc    edx
  40572a:	fst    QWORD PTR [ecx+0x5f05496b]
  405730:	out    dx,al
  405731:	fstp   QWORD PTR [edi]
  405733:	mov    ebp,ebx
  405735:	jge    0x405774
  405737:	xor    ebx,DWORD PTR [edx+esi*8]
  40573a:	jge    0x40572f
  40573c:	xor    BYTE PTR [ecx+0x5fc5b71a],ch
  405742:	add    al,0x3b
  405744:	fmul   st,st(3)
  405746:	mov    esi,0xccc2d7ff
  40574b:	cmp    eax,DWORD PTR [ecx-0x22793c4f]
  405751:	(bad)  
  405752:	out    dx,al
  405753:	or     BYTE PTR [ecx+0x1d],bh
  405756:	mov    esi,0x4322cdb3
  40575b:	xlat   BYTE PTR ds:[ebx]
  40575c:	dec    eax
  40575d:	and    DWORD PTR [ecx-0x666e5252],esi
  405763:	fdiv   QWORD PTR [eax+0x6a]
  405766:	int3   
  405767:	cld    
  405768:	jns    0x405747
  40576a:	mov    BYTE PTR [ebp-0x3],ch
  40576d:	jecxz  0x40576a
  40576f:	mov    al,ds:0x126f7b0a
  405774:	imul   eax,ebx,0x1256d08
  40577a:	and    ecx,edi
  40577c:	loope  0x4057ca
  40577e:	repz jns 0x40576f
  405781:	xchg   ebx,eax
  405782:	jae    0x4057af
  405784:	mov    dh,0xf5
  405786:	pop    esp
  405787:	mov    DWORD PTR [eax-0x150e7547],edx
  40578d:	into   
  40578e:	jmp    0x81ee:0x82b14f77
  405795:	xchg   edx,eax
  405796:	xchg   DWORD PTR [eax-0x66],edx
  405799:	outs   dx,DWORD PTR ds:[esi]
  40579a:	sti    
  40579b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40579c:	mov    cl,0xe3
  40579e:	pop    ebx
  40579f:	push   eax
  4057a0:	cmp    edx,DWORD PTR [esi+0x7257d52f]
  4057a6:	xor    al,0x15
  4057a8:	mov    dh,BYTE PTR [esi+0x5861c132]
  4057ae:	dec    edx
  4057af:	and    DWORD PTR [edi+0x54ea798e],edx
  4057b5:	jae    0x405823
  4057b7:	scas   eax,DWORD PTR es:[edi]
  4057b8:	mov    ch,0xb8
  4057ba:	cmp    BYTE PTR [edx-0x7ddc3c94],dl
  4057c0:	inc    esi
  4057c1:	ins    BYTE PTR es:[edi],dx
  4057c2:	adc    bl,0xc3
  4057c5:	into   
  4057c6:	(bad)  
  4057c7:	push   edx
  4057c8:	push   ebp
  4057c9:	mov    fs,ecx
  4057cb:	dec    BYTE PTR [edx-0x40]
  4057ce:	imul   DWORD PTR [edx]
  4057d0:	int    0x6f
  4057d2:	arpl   WORD PTR [ebx+0x4d314d3d],dx
  4057d8:	mov    ch,0x22
  4057da:	ja     0x4057b9
  4057dc:	xor    BYTE PTR [esi-0x1],ch
  4057df:	and    esi,DWORD PTR [edi+0x51e367a4]
  4057e5:	(bad)  
  4057e6:	inc    ecx
  4057e7:	fs rcr edi,cl
  4057ea:	or     al,BYTE PTR [ebx+0x12]
  4057ed:	mov    al,ds:0x2095ecd6
  4057f2:	or     DWORD PTR [ebp-0x26c19f21],ebx
  4057f8:	adc    cl,bh
  4057fa:	push   ds
  4057fb:	loope  0x4057e2
  4057fd:	clc    
  4057fe:	ja     0x405814
  405800:	ds xchg esp,eax
  405802:	lds    ebp,FWORD PTR [edi+0x76]
  405805:	mov    cl,0x26
  405807:	mov    dh,0x6c
  405809:	bound  ecx,QWORD PTR [ecx+eiz*4-0x2b343397]
  405810:	mov    ds:0x7218358f,al
  405815:	push   edi
  405816:	xabort 0xa
  405819:	in     al,0xf9
  40581b:	or     bl,bh
  40581d:	mov    ecx,0x81272e51
  405822:	mov    ds:0xd987ed89,al
  405827:	mov    ebx,0x49b17768
  40582c:	jae    0x4057b9
  40582e:	or     al,0x73
  405830:	retf   
  405831:	(bad)  
  405832:	(bad)  
  405833:	hlt    
  405834:	add    edx,DWORD PTR [esi-0x3ec073f4]
  40583a:	cmp    dl,BYTE PTR [ebp+0x12]
  40583d:	dec    edi
  40583e:	scas   eax,DWORD PTR es:[edi]
  40583f:	sub    eax,0x1b3ebf8
  405844:	outs   dx,DWORD PTR ds:[esi]
  405845:	rcr    BYTE PTR [eax-0x3d],1
  405848:	dec    edx
  405849:	outs   dx,BYTE PTR ds:[esi]
  40584a:	mov    ds:0x3610c1db,eax
  40584f:	and    BYTE PTR [esi-0x6],dh
  405852:	mov    bh,0xb5
  405854:	xchg   esi,eax
  405855:	sbb    eax,0xfc10cf6e
  40585a:	lds    ebp,FWORD PTR [esi+ebp*2-0x69]
  40585e:	xchg   ebp,eax
  40585f:	sti    
  405860:	sbb    eax,0xd09b6542
  405865:	pop    esi
  405866:	js     0x4058da
  405868:	xlat   BYTE PTR ds:[ebx]
  405869:	(bad)  
  40586a:	jbe    0x405824
  40586c:	inc    ecx
  40586d:	mov    esp,0x34b8bc41
  405872:	adc    bl,dh
  405874:	pop    edx
  405875:	or     eax,0xef40f2
  40587a:	mov    al,0x16
  40587c:	xor    BYTE PTR [edx],al
  40587e:	stos   BYTE PTR es:[edi],al
  40587f:	mov    dl,BYTE PTR [eax+0x51]
  405882:	js     0x40582c
  405884:	mov    dl,0x63
  405886:	mov    edx,0xe5549e54
  40588b:	sbb    eax,ecx
  40588d:	pusha  
  40588e:	std    
  40588f:	ins    DWORD PTR es:[edi],dx
  405890:	xor    BYTE PTR [ebp+0x1a3e1f3c],ah
  405896:	push   eax
  405897:	je     0x405887
  405899:	sti    
  40589a:	or     BYTE PTR [eax+edi*1],0x30
  40589e:	std    
  40589f:	and    ah,BYTE PTR [ecx+ebx*2-0x44]
  4058a3:	sub    al,0x91
  4058a5:	shr    BYTE PTR [eax-0x231a0124],1
  4058ab:	or     eax,0x505f8386
  4058b0:	iret   
  4058b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058b2:	push   0x97d8af69
  4058b7:	adc    eax,0x6f7fa840
  4058bc:	sbb    al,0x9
  4058be:	pusha  
  4058bf:	push   0x50
  4058c1:	jo     0x40587b
  4058c3:	je     0x4058e8
  4058c5:	cwde   
  4058c6:	mov    ah,0xad
  4058c8:	xor    DWORD PTR [edi+0x1542bb72],eax
  4058ce:	inc    esp
  4058cf:	dec    ebp
  4058d0:	(bad)  
  4058d1:	in     al,dx
  4058d2:	shl    DWORD PTR [edx+eiz*8+0x35],1
  4058d6:	sbb    ah,bh
  4058d8:	sbb    ebp,DWORD PTR [edx+ebp*4+0x7e]
  4058dc:	ret    0xd414
  4058df:	pop    es
  4058e0:	outs   dx,BYTE PTR ds:[esi]
  4058e1:	dec    edi
  4058e2:	(bad)  
  4058e3:	fiadd  WORD PTR [ecx-0x4e]
  4058e6:	arpl   dx,di
  4058e8:	xchg   edi,eax
  4058e9:	adc    BYTE PTR [edi],bl
  4058eb:	sub    ah,BYTE PTR [ecx+0x4b65d732]
  4058f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058f2:	push   ebx
  4058f3:	jecxz  0x405967
  4058f5:	(bad)  
  4058f6:	xchg   esi,eax
  4058f7:	bound  ebx,QWORD PTR [ecx+0x3e7b04f0]
  4058fd:	mov    esp,0x7fa6e809
  405902:	fmul   QWORD PTR [esi-0x4e102ba2]
  405908:	mov    bl,0x48
  40590a:	es pop edx
  40590c:	jb     0x405972
  40590e:	sub    eax,ebp
  405910:	popf   
  405911:	popf   
  405912:	rep outs dx,BYTE PTR ds:[esi]
  405914:	add    esp,DWORD PTR [eax-0x30a8b3cf]
  40591a:	add    al,BYTE PTR [ecx]
  40591c:	in     al,dx
  40591d:	push   ebx
  40591e:	mov    edx,DWORD PTR [eax+0x7a046df5]
  405924:	retf   0xc9b7
  405927:	mov    bh,0xa8
  405929:	push   cs
  40592a:	fild   DWORD PTR [edx+0x798a0f6d]
  405930:	shr    DWORD PTR [eax-0x104b6af5],0x19
  405937:	or     DWORD PTR [edi+0x1f5bfd7a],ebp
  40593d:	or     DWORD PTR [esi],eax
  40593f:	retf   
  405940:	fisttp WORD PTR [ebx+0x51]
  405943:	imul   ebp,DWORD PTR [ebp-0x39],0x23
  405947:	inc    ebp
  405948:	cmp    BYTE PTR [ecx],cl
  40594a:	fldenv [edx+0x3a]
  40594d:	aaa    
  40594e:	popf   
  40594f:	pop    es
  405950:	scas   eax,DWORD PTR es:[edi]
  405951:	das    
  405952:	imul   ebx,edx,0x691ef8f4
  405958:	and    DWORD PTR [esi],edx
  40595a:	add    esp,esi
  40595c:	int3   
  40595d:	fs aas 
  40595f:	popf   
  405960:	fwait
  405961:	jae    0x405971
  405963:	ja     0x405998
  405965:	test   eax,0x19e8d139
  40596a:	xor    al,0x98
  40596c:	sti    
  40596d:	imul   ecx,esi,0x27fd98ed
  405973:	inc    edi
  405974:	sbb    al,0xa6
  405976:	jle    0x405937
  405978:	mov    cl,0x66
  40597a:	adc    eax,0x72558edf
  40597f:	and    al,0x5c
  405981:	add    eax,0xa91eed09
  405986:	lahf   
  405987:	xchg   esi,eax
  405988:	mov    edx,0xc9e9b5c4
  40598d:	adc    al,0x9c
  40598f:	imul   ax,WORD PTR [ecx-0x5474667b],0xffb6
  405997:	imul   eax,DWORD PTR [eax],0xfffffffb
  40599a:	inc    esi
  40599b:	mov    esi,0x1cd2e729
  4059a0:	add    DWORD PTR [ebx+0x7b5477b4],edi
  4059a6:	sub    al,0x56
  4059a8:	(bad)
  4059ad:	in     al,0xf4
  4059af:	add    ebx,DWORD PTR [edx-0x17cf3385]
  4059b5:	or     DWORD PTR [eax+0x61d8d14],eax
  4059bb:	mov    eax,0x3d518b46
  4059c0:	ret    
  4059c1:	xchg   BYTE PTR [ebp-0x591b8e56],bl
  4059c7:	mov    eax,ds:0x992a3080
  4059cc:	sub    BYTE PTR [ebx],0xa4
  4059cf:	sbb    edx,esp
  4059d1:	cmp    eax,0x9e81cdba
  4059d6:	adc    BYTE PTR [ecx],0x0
  4059d9:	xchg   ebp,eax
  4059da:	loopne 0x4059a1
  4059dc:	xchg   BYTE PTR [eax+0x79],dl
  4059df:	jbe    0x405a1f
  4059e1:	push   ds
  4059e2:	cmp    BYTE PTR [ecx-0x4a055614],ah
  4059e8:	and    eax,0xff1f8567
  4059ed:	jno    0x4059b4
  4059ef:	fucompp 
  4059f1:	sbb    BYTE PTR [ecx],bh
  4059f3:	xchg   edx,eax
  4059f4:	js     0x4059c9
  4059f6:	xchg   edi,eax
  4059f7:	or     edx,DWORD PTR [edx-0x1c87fce7]
  4059fd:	repnz dec edx
  4059ff:	pop    ebp
  405a00:	(bad)  
  405a01:	jecxz  0x405a59
  405a03:	shr    BYTE PTR [ecx-0x257bb720],0x57
  405a0a:	pushf  
  405a0b:	jmp    0x1504:0x831ca3a6
  405a12:	(bad)  
  405a14:	shl    BYTE PTR [ecx+0x37],0xc0
  405a18:	push   eax
  405a19:	loope  0x4059af
  405a1b:	(bad)  
  405a1c:	call   0x7482:0x6851c037
  405a23:	adc    BYTE PTR gs:[eax*1+0x27af536c],0x62
  405a2c:	jmp    0x405a7f
  405a2e:	es push cs
  405a30:	pop    ebx
  405a31:	and    DWORD PTR [ebp+eiz*4-0x7e],ecx
  405a35:	pop    es
  405a36:	(bad)  
  405a37:	adc    al,BYTE PTR [edi+0x13c3cb6e]
  405a3d:	inc    eax
  405a3e:	ins    BYTE PTR es:[edi],dx
  405a3f:	sub    al,0x8
  405a41:	in     al,0x7e
  405a43:	lea    ebx,[eax-0x6d2e34da]
  405a49:	push   DWORD PTR [edi-0x4706611d]
  405a4f:	or     al,0x9c
  405a51:	dec    esp
  405a52:	mov    bh,0xf0
  405a54:	mov    cl,0x5f
  405a56:	sub    ch,dh
  405a58:	(bad)  
  405a5a:	aaa    
  405a5b:	(bad)  
  405a5c:	and    BYTE PTR [esi-0x645faa8],dh
  405a62:	loope  0x405a50
  405a64:	inc    ebx
  405a65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a66:	jmp    0xbaed:0xefd5d81f
  405a6d:	sub    DWORD PTR [edi],edx
  405a6f:	push   eax
  405a70:	cwde   
  405a71:	or     ch,BYTE PTR [esi+eiz*2+0x306f0ebd]
  405a78:	pop    esi
  405a79:	jmp    0x405a56
  405a7b:	fadd   QWORD PTR [eax-0x4470f386]
  405a81:	inc    eax
  405a82:	call   0xd9b6:0xa79a944a
  405a89:	outs   dx,BYTE PTR ds:[esi]
  405a8a:	inc    ebx
  405a8b:	pop    ds
  405a8c:	in     al,0x44
  405a8e:	std    
  405a8f:	cs (bad) 
  405a92:	stos   DWORD PTR es:[edi],eax
  405a93:	push   edx
  405a94:	mov    ch,0x33
  405a96:	mov    esi,DWORD PTR [edi-0x343decf6]
  405a9c:	aaa    
  405a9d:	pop    edx
  405a9e:	or     eax,0x5d969916
  405aa3:	repnz data16 sbb al,0x5d
  405aa7:	ror    BYTE PTR [edi],0xf3
  405aaa:	mov    al,0xf
  405aac:	adc    esi,DWORD PTR [edi-0x7fce16d6]
  405ab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ab3:	adc    al,0x63
  405ab5:	inc    ebx
  405ab6:	adc    DWORD PTR [edx-0x53],ecx
  405ab9:	mov    ds:0x486ff769,eax
  405abe:	outs   dx,DWORD PTR ds:[esi]
  405abf:	pop    esp
  405ac0:	xchg   BYTE PTR [eax],bl
  405ac2:	lds    ecx,FWORD PTR [eax+ecx*1]
  405ac5:	cmp    al,0xa8
  405ac7:	test   esi,ebp
  405ac9:	pop    ebx
  405aca:	pop    edx
  405acb:	cmp    edi,DWORD PTR [eax]
  405acd:	adc    DWORD PTR [ecx],ebp
  405acf:	(bad)  
  405ad0:	imul   esp,DWORD PTR [ebp+0x5cc575a1],0xffffffae
  405ad7:	enter  0xb45b,0x11
  405adb:	sub    al,0x8a
  405add:	cmc    
  405ade:	adc    eax,0x9575cb5f
  405ae3:	es daa 
  405ae5:	pop    esp
  405ae6:	aaa    
  405ae7:	test   BYTE PTR [eax],al
  405ae9:	or     cl,ah
  405aeb:	hlt    
  405aec:	aas    
  405aed:	jle    0x405b0c
  405aef:	sar    BYTE PTR [esi+eax*2+0x7e],cl
  405af3:	push   esi
  405af4:	imul   esi,DWORD PTR [ecx-0x22420ad2],0xf
  405afb:	mov    edx,0x947f1639
  405b00:	add    esi,ecx
  405b02:	mov    al,ds:0x1fca9080
  405b07:	das    
  405b08:	in     eax,0x78
  405b0a:	sub    eax,0xda5253df
  405b0f:	add    al,0xeb
  405b11:	jp     0x405b1c
  405b13:	jo     0x405b0d
  405b15:	adc    ch,ah
  405b17:	enter  0xdf1f,0x39
  405b1b:	push   es
  405b1c:	ss div cl
  405b1f:	xchg   DWORD PTR [ecx],eax
  405b21:	(bad)  
  405b22:	aas    
  405b23:	pop    edi
  405b24:	stc    
  405b25:	pop    edx
  405b26:	mov    ecx,0xe16b038e
  405b2b:	pop    ecx
  405b2c:	ins    DWORD PTR es:[edi],dx
  405b2d:	scas   eax,DWORD PTR es:[edi]
  405b2e:	fucomip st,st(0)
  405b30:	(bad)  
  405b32:	xor    dl,dl
  405b34:	sub    ecx,edx
  405b36:	in     al,dx
  405b37:	adc    ch,BYTE PTR [eax+0x2]
  405b3a:	sbb    DWORD PTR [edx+0x2a7c90c7],eax
  405b40:	ret    
  405b41:	out    0x8c,eax
  405b43:	add    edx,DWORD PTR [esi]
  405b45:	cli    
  405b46:	inc    esi
  405b47:	fsub   DWORD PTR [eax-0x19]
  405b4a:	sbb    eax,0x482d678e
  405b4f:	leave  
  405b50:	lds    edx,FWORD PTR [ebp+0x42]
  405b53:	xor    eax,0xe57fc9c7
  405b58:	test   BYTE PTR [edx-0x7fd4525f],0xc1
  405b5f:	loopne 0x405b4a
  405b61:	sbb    eax,0xe88040e9
  405b66:	ret    
  405b67:	test   BYTE PTR [edx-0x22ac232f],ch
  405b6d:	jp     0x405b6f
  405b6f:	adc    al,0x39
  405b71:	jg     0x405beb
  405b73:	out    dx,al
  405b74:	cmp    al,0x4
  405b76:	stc    
  405b77:	div    BYTE PTR [ebx+ebx*1+0x5a]
  405b7b:	test   DWORD PTR [esi+0x22],edi
  405b7e:	add    eax,0x671c00c4
  405b83:	push   0x39
  405b85:	xor    eax,0xaa1ec9f6
  405b8a:	pop    es
  405b8b:	lods   eax,DWORD PTR ds:[esi]
  405b8c:	ss xchg ecx,eax
  405b8e:	cli    
  405b8f:	mov    eax,ds:0xb5e56433
  405b94:	lock add eax,0x3e8d0768
  405b9a:	loopne 0x405c03
  405b9c:	fiadd  WORD PTR [edi-0x1f]
  405b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ba0:	and    al,BYTE PTR [esi]
  405ba2:	jl     0x405b4c
  405ba4:	add    ah,BYTE PTR [esi-0x68]
  405ba7:	pop    ds
  405ba8:	jle    0x405bea
  405baa:	test   DWORD PTR [edx+0x2b],edi
  405bad:	stos   DWORD PTR es:[edi],eax
  405bae:	add    bl,BYTE PTR [eax-0x580c8f31]
  405bb4:	jae    0x405b8e
  405bb6:	daa    
  405bb7:	jbe    0x405c17
  405bb9:	(bad)
  405bbc:	lods   al,BYTE PTR ds:[esi]
  405bbd:	xchg   esi,eax
  405bbe:	(bad)  
  405bbf:	push   ecx
  405bc0:	xchg   ebx,eax
  405bc1:	sbb    BYTE PTR [eax+0x6b],cl
  405bc4:	cs mov esp,0xffb0059f
  405bca:	xchg   edi,eax
  405bcb:	mov    edx,0x364c2178
  405bd0:	sub    al,0x6e
  405bd2:	clc    
  405bd3:	inc    eax
  405bd4:	or     al,0xff
  405bd6:	retf   
  405bd7:	or     edx,DWORD PTR [ecx-0x50]
  405bda:	xchg   esp,eax
  405bdb:	(bad)  
  405bdc:	fisubr DWORD PTR [edx]
  405bde:	jmp    0x280f:0x6d5bc81b
  405be5:	xchg   ecx,eax
  405be6:	retf   
  405be7:	xchg   ebx,ebx
  405be9:	add    dl,BYTE PTR [edx-0x4a864d4f]
  405bef:	mov    bh,0x6e
  405bf1:	arpl   WORD PTR [edi-0x67],cx
  405bf4:	outs   dx,BYTE PTR ds:[esi]
  405bf5:	cmp    eax,0xace6caf6
  405bfa:	mov    DWORD PTR [eax+0x7c],edi
  405bfd:	gs call 0xbd0b:0xe3106218
  405c05:	(bad)  
  405c06:	hlt    
  405c07:	sub    BYTE PTR [edx+0x6e],0xb6
  405c0b:	aad    0xf9
  405c0d:	retf   
  405c0e:	aas    
  405c0f:	leave  
  405c10:	dec    ecx
  405c11:	ror    ebp,cl
  405c13:	imul   DWORD PTR [edi+ebx*4+0x4d30e47]
  405c1a:	(bad)  
  405c1b:	push   esp
  405c1c:	stos   DWORD PTR es:[edi],eax
  405c1d:	jmp    0x10838de4
  405c22:	pop    esp
  405c23:	cmp    eax,0x7b98f455
  405c28:	(bad)  
  405c29:	(bad)  
  405c2c:	push   eax
  405c2d:	ret    0x52af
  405c30:	ja     0x405bbb
  405c32:	sub    eax,0xec244c73
  405c37:	pop    esi
  405c38:	push   ebx
  405c39:	adc    ebp,DWORD PTR [edx]
  405c3b:	and    bh,al
  405c3d:	ja     0x405bca
  405c3f:	sub    eax,0x93de2a01
  405c44:	inc    edx
  405c45:	fcmovne st,st(1)
  405c47:	cmp    ah,BYTE PTR [ebx+0x42]
  405c4a:	fcom   DWORD PTR [ecx+0x537ec72a]
  405c50:	xor    DWORD PTR [ebp-0x2358f072],esp
  405c56:	inc    edi
  405c57:	ds cmp al,0xb0
  405c5a:	mov    ch,0xd8
  405c5c:	retf   0xae90
  405c5f:	adc    eax,ebp
  405c61:	pop    ds
  405c62:	dec    dh
  405c64:	mov    dh,BYTE PTR [esi+0x4e]
  405c67:	push   ss
  405c68:	pop    esp
  405c69:	lods   eax,DWORD PTR ds:[esi]
  405c6a:	xchg   edi,eax
  405c6b:	in     eax,0x56
  405c6d:	jns    0x405cde
  405c6f:	leave  
  405c70:	jne    0x405ce2
  405c72:	xchg   edx,eax
  405c73:	mov    al,BYTE PTR [ebx+0x25693b9e]
  405c79:	sbb    bh,0xca
  405c7c:	dec    esi
  405c7d:	js     0x405ccd
  405c7f:	mov    ecx,0xbbdb708e
  405c84:	aaa    
  405c85:	aam    0xf3
  405c87:	(bad)  
  405c88:	cmp    al,0xc3
  405c8a:	and    bl,BYTE PTR [edx]
  405c8c:	and    esp,DWORD PTR [edi+0x18]
  405c8f:	add    dl,bh
  405c91:	jle    0x405d05
  405c93:	pop    ebx
  405c94:	aas    
  405c95:	and    DWORD PTR [esi-0x5],eax
  405c98:	cmovs  ebp,edi
  405c9b:	test   DWORD PTR [esi],0x3a6feb83
  405ca1:	push   edi
  405ca2:	add    eax,0x5ad3b607
  405ca7:	test   BYTE PTR [ebp-0x798ef134],dl
  405cad:	xchg   BYTE PTR [edi],bl
  405caf:	jmp    0x405c62
  405cb1:	xor    eax,0x92e4fc07
  405cb6:	popf   
  405cb7:	xlat   BYTE PTR ds:[ebx]
  405cb8:	mov    ecx,ss
  405cba:	push   es
  405cbb:	sbb    ah,cl
  405cbd:	mov    ebx,0x21b5b962
  405cc2:	pop    esp
  405cc3:	push   eax
  405cc4:	mov    edx,0x6b24f4a6
  405cc9:	xor    edi,DWORD PTR [esi+0x14]
  405ccc:	inc    DWORD PTR [ecx+0x5d]
  405ccf:	and    eax,0x4a2a3725
  405cd4:	pop    edx
  405cd5:	nop
  405cd6:	jno    0x405c99
  405cd8:	jmp    0x3a7c8768
  405cdd:	cmc    
  405cde:	push   ebx
  405cdf:	mov    bh,BYTE PTR ds:0x79ec819d
  405ce5:	xchg   edx,eax
  405ce6:	xacquire xchg DWORD PTR [eax+ecx*8-0x67fbd9b1],eax
  405cee:	pop    ecx
  405cef:	pop    ebp
  405cf0:	or     DWORD PTR [ecx+0x3a5f97b2],esp
  405cf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cf7:	sub    esp,ecx
  405cf9:	and    ecx,DWORD PTR [edx+ebp*1+0x56]
  405cfd:	jg     0x405d50
  405cff:	stos   DWORD PTR es:[edi],eax
  405d00:	push   esi
  405d01:	push   ds
  405d02:	mov    dh,al
  405d04:	shr    BYTE PTR [ecx+0x4eed324a],0x7c
  405d0b:	ins    DWORD PTR es:[edi],dx
  405d0c:	std    
  405d0d:	push   esi
  405d0e:	ins    DWORD PTR es:[edi],dx
  405d0f:	pop    ecx
  405d10:	not    DWORD PTR [eax]
  405d12:	rcl    DWORD PTR [ecx+0x5f],0x31
  405d16:	push   ds
  405d17:	jecxz  0x405d1d
  405d19:	neg    dl
  405d1b:	fld    QWORD PTR [ebp+0x418888ef]
  405d21:	ja     0x405ca4
  405d23:	cld    
  405d24:	cdq    
  405d25:	mov    cl,0x50
  405d27:	xor    ecx,ebx
  405d29:	shl    DWORD PTR [ebp-0x61],0x9d
  405d2d:	mov    ebp,0x411e897e
  405d32:	push   eax
  405d33:	outs   dx,DWORD PTR ds:[esi]
  405d34:	loopne 0x405d85
  405d36:	jnp    0x405d35
  405d38:	mov    al,0x89
  405d3a:	mov    ebx,0x43f1c0f6
  405d3f:	xor    edx,DWORD PTR [edi+0x23f145aa]
  405d45:	xchg   esi,eax
  405d46:	ins    BYTE PTR es:[edi],dx
  405d47:	cli    
  405d48:	xchg   edx,eax
  405d49:	mov    ecx,0x23813f5
  405d4e:	les    ax,DWORD PTR [edi+0xb8d3796]
  405d55:	in     al,dx
  405d56:	sbb    eax,eax
  405d58:	popf   
  405d59:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d5c:	scas   al,BYTE PTR es:[edi]
  405d5d:	lock pushf 
  405d5f:	xor    al,0xc4
  405d61:	adc    edi,DWORD PTR [edx]
  405d63:	mov    bh,0xd8
  405d65:	sub    eax,ecx
  405d67:	out    dx,al
  405d68:	(bad)  
  405d69:	aad    0x23
  405d6b:	mul    dh
  405d6d:	ds nop
  405d6f:	cmp    al,0xac
  405d71:	xchg   esp,eax
  405d72:	retf   0xea18
  405d75:	xor    al,0x70
  405d77:	popf   
  405d78:	jmp    0xef11a87e
  405d7d:	int3   
  405d7e:	sub    al,0x6b
  405d80:	(bad)  
  405d81:	push   0xd7ea5894
  405d86:	call   0x5f3ecce5
  405d8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d8c:	push   esi
  405d8d:	(bad)  
  405d8e:	xor    eax,0xf999a281
  405d93:	rol    BYTE PTR [ecx],cl
  405d95:	hlt    
  405d96:	jno    0x405dbb
  405d98:	dec    ecx
  405d99:	add    BYTE PTR [eax+0x7543c065],0x6c
  405da0:	mov    ebp,DWORD PTR [ecx+0x2c1b9035]
  405da6:	(bad)  
  405da7:	inc    esp
  405da8:	mov    dl,0x1d
  405daa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dab:	and    BYTE PTR [ecx],0xc8
  405dae:	lds    esi,FWORD PTR [ebp+edx*1-0x2b305fc6]
  405db5:	mov    bh,0x18
  405db7:	enter  0x3d50,0x2d
  405dbb:	xchg   ebx,eax
  405dbc:	dec    ebp
  405dbd:	rcr    DWORD PTR [ecx-0x58],cl
  405dc0:	loop   0x405d76
  405dc2:	pop    ebp
  405dc3:	mov    BYTE PTR [esi+0x4c],dl
  405dc6:	cmp    al,0x3c
  405dc8:	sbb    eax,esi
  405dca:	xor    ebp,DWORD PTR [esi+0x58]
  405dcd:	popf   
  405dce:	dec    esp
  405dcf:	jge    0x405e10
  405dd1:	ins    DWORD PTR es:[edi],dx
  405dd2:	cmp    BYTE PTR [esi],bl
  405dd4:	inc    eax
  405dd5:	push   ecx
  405dd6:	cmp    al,0x4b
  405dd8:	inc    eax
  405dd9:	outs   dx,DWORD PTR ds:[esi]
  405dda:	ins    DWORD PTR es:[edi],dx
  405ddb:	out    dx,al
  405ddc:	in     al,0x31
  405dde:	test   al,0x71
  405de0:	call   0xb8bb:0xe8c94b03
  405de7:	mov    eax,ds:0x20f22e0
  405dec:	cwde   
  405ded:	mov    eax,0xa7770e0a
  405df2:	xlat   BYTE PTR ds:[ebx]
  405df3:	cdq    
  405df4:	jae    0x405d95
  405df6:	and    esi,DWORD PTR [esi-0x4e]
  405df9:	xchg   edx,eax
  405dfa:	sbb    al,0xb7
  405dfc:	sub    eax,0x53c2d782
  405e01:	cmp    DWORD PTR [ebx+0x23],edx
  405e04:	pop    esi
  405e05:	fld    DWORD PTR [esi-0x6c30b7bb]
  405e0b:	cmp    al,0x84
  405e0d:	div    cl
  405e0f:	cld    
  405e10:	cmp    BYTE PTR [esi+0x249400ba],ah
  405e16:	loop   0x405e3e
  405e18:	arpl   WORD PTR [ebx],sp
  405e1a:	call   0x317c:0xb064b199
  405e21:	js     0x405db1
  405e23:	daa    
  405e24:	popa   
  405e25:	xor    eax,0x5d5c784e
  405e2a:	pop    ebx
  405e2b:	pop    esi
  405e2c:	jno    0x405e96
  405e2e:	and    BYTE PTR [esi+0x538d27b4],0xfd
  405e35:	mov    al,0x58
  405e37:	push   ebx
  405e38:	mov    ch,BYTE PTR [esi]
  405e3a:	leave  
  405e3b:	push   ecx
  405e3c:	jg     0x405e75
  405e3e:	data16 scas al,BYTE PTR es:[edi]
  405e40:	loopne 0x405e89
  405e42:	std    
  405e43:	rcr    BYTE PTR [edi+0x2904f66b],1
  405e49:	fldcw  WORD PTR [edi]
  405e4b:	cmp    bh,BYTE PTR [ecx]
  405e4d:	das    
  405e4e:	sub    ah,BYTE PTR [edi]
  405e50:	es adc al,0xd4
  405e53:	mov    al,ds:0x69ffa17e
  405e58:	stos   DWORD PTR es:[edi],eax
  405e59:	test   al,0x80
  405e5b:	stc    
  405e5c:	idiv   DWORD PTR [eax*8+0x271f6345]
  405e63:	push   0x61364023
  405e68:	mov    al,ds:0xfce37fd
  405e6d:	sbb    esp,ecx
  405e6f:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  405e71:	repnz repnz lock lock mov edi,0xcb88a73
  405e7a:	dec    edx
  405e7b:	call   0xd102:0x5e26b258
  405e82:	cwde   
  405e83:	leave  
  405e84:	pusha  
  405e85:	(bad)  
  405e86:	jmp    0x405f04
  405e88:	xchg   esi,eax
  405e89:	adc    eax,DWORD PTR [ebx-0x20]
  405e8c:	cwde   
  405e8d:	lahf   
  405e8e:	sbb    al,0x96
  405e90:	jp     0x405e82
  405e92:	imul   ecx,DWORD PTR ds:0x35652358,0x2b5407f3
  405e9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e9d:	(bad)  
  405e9e:	jp     0x405f1c
  405ea0:	int3   
  405ea1:	dec    ebp
  405ea2:	pop    ss
  405ea3:	adc    DWORD PTR [eax+0x34cf7154],eax
  405ea9:	pop    ebx
  405eaa:	mov    edx,0xeed989be
  405eaf:	and    eax,0x42037e9
  405eb4:	xchg   BYTE PTR [esi-0x61d844c3],ah
  405eba:	cli    
  405ebb:	ret    
  405ebc:	arpl   WORD PTR [edx],sp
  405ebe:	xchg   DWORD PTR [eax-0x428de3bf],ecx
  405ec4:	call   0xeae18db2
  405ec9:	aam    0xdd
  405ecb:	inc    edx
  405ecc:	iret   
  405ecd:	in     eax,0xc9
  405ecf:	shl    BYTE PTR [edx],0xa0
  405ed2:	sbb    edx,edi
  405ed4:	sbb    esi,DWORD PTR [esi-0x32e21c67]
  405eda:	div    DWORD PTR [eax-0x7b]
  405edd:	jmp    0x405ecb
  405edf:	cmp    bl,al
  405ee1:	cmp    BYTE PTR [esi+0x15f4d074],0xfe
  405ee8:	jmp    0x405eaf
  405eea:	pop    ecx
  405eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eec:	cmp    ah,0x27
  405eef:	cwde   
  405ef0:	mov    al,ds:0xabfd6dc3
  405ef5:	push   0xffffffcc
  405ef7:	cli    
  405ef8:	popf   
  405ef9:	call   0x20992f06
  405efe:	repnz mov BYTE PTR [esp+eiz*2],bl
  405f02:	mov    al,0x16
  405f04:	and    al,0x4a
  405f06:	xchg   ebp,eax
  405f07:	sahf   
  405f08:	add    eax,DWORD PTR [edx-0x77592dd9]
  405f0e:	cld    
  405f0f:	arpl   WORD PTR [ecx-0x236a4bcf],bp
  405f15:	out    0x26,al
  405f17:	loop   0x405efa
  405f19:	out    0x82,eax
  405f1b:	pop    esi
  405f1c:	xchg   ebp,eax
  405f1d:	outs   dx,DWORD PTR ds:[esi]
  405f1e:	outs   dx,BYTE PTR ds:[esi]
  405f1f:	and    edi,DWORD PTR gs:0xf562ad79
  405f26:	dec    edi
  405f27:	test   DWORD PTR [di+0x57],edx
  405f2b:	and    al,0x73
  405f2d:	xchg   ebp,eax
  405f2e:	and    dl,BYTE PTR [edx-0x41]
  405f31:	pusha  
  405f32:	xor    eax,0xf05b6d64
  405f37:	jecxz  0x405efc
  405f39:	daa    
  405f3a:	sbb    BYTE PTR [esi+0x752cb858],cl
  405f40:	or     DWORD PTR [ebx+ebp*2],0xffffff90
  405f44:	xchg   ebx,eax
  405f45:	addr16 push ds
  405f47:	fsub   DWORD PTR [ebx+0x59bde823]
  405f4d:	jecxz  0x405f44
  405f4f:	push   0x5b
  405f51:	sbb    eax,0x9e6880ba
  405f56:	int    0x31
  405f58:	jae    0x405fcc
  405f5a:	sub    ebp,edi
  405f5c:	retf   
  405f5d:	ja     0x405fcf
  405f5f:	shl    esi,0xc3
  405f62:	xor    esp,DWORD PTR [edi]
  405f64:	lahf   
  405f65:	outs   dx,DWORD PTR ds:[esi]
  405f66:	gs cmp eax,0x9c707605
  405f6c:	sub    ebx,DWORD PTR [esi+esi*8]
  405f6f:	pop    eax
  405f70:	das    
  405f71:	inc    esp
  405f72:	scas   eax,DWORD PTR es:[edi]
  405f73:	ins    DWORD PTR es:[edi],dx
  405f74:	ja     0x405fd0
  405f76:	jnp    0x405f20
  405f78:	pusha  
  405f79:	test   eax,0xcf73dce9
  405f7e:	jne    0x405fcf
  405f80:	or     ecx,esi
  405f82:	sub    esi,DWORD PTR [esp+edi*1]
  405f85:	xor    eax,edx
  405f87:	scas   al,BYTE PTR es:[edi]
  405f88:	(bad)  
  405f89:	call   0xace5:0x47c17236
  405f90:	dec    esi
  405f91:	inc    ebp
  405f92:	shl    bh,0x65
  405f95:	and    cl,bh
  405f97:	(bad)  
  405f98:	bound  eax,QWORD PTR [ecx-0x6d]
  405f9b:	imul   esp,DWORD PTR [eax],0xbf90cdb
  405fa1:	lock jmp 0xf5a0552d
  405fa7:	jo     0x405fa0
  405fa9:	das    
  405faa:	jb     0x405f4c
  405fac:	fdivr  DWORD PTR [eax+0x56]
  405faf:	iret   
  405fb0:	rep ins BYTE PTR es:[edi],dx
  405fb2:	icebp  
  405fb3:	arpl   WORD PTR ds:0x1994eb7d,si
  405fb9:	cwde   
  405fba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fbb:	jne    0x405f6c
  405fbd:	and    eax,0x7887a167
  405fc2:	push   eax
  405fc3:	(bad)  
  405fc4:	fidivr DWORD PTR [edi]
  405fc6:	xchg   esi,eax
  405fc7:	lea    ebp,[edx+0x65]
  405fca:	inc    dl
  405fcc:	sbb    DWORD PTR ds:0x7243b65c,edi
  405fd2:	sti    
  405fd3:	imul   DWORD PTR [ebp+edi*8-0x32963693]
  405fda:	mov    ch,BYTE PTR [edx]
  405fdc:	xor    dl,ch
  405fde:	sbb    BYTE PTR [eax+0x45],ch
  405fe1:	xor    ebx,DWORD PTR [edx-0x30]
  405fe4:	jmp    DWORD PTR [ebp+0x6a]
  405fe7:	xor    bh,bl
  405fe9:	or     bh,BYTE PTR [edi+eiz*8-0x347edefc]
  405ff0:	or     ebp,ebx
  405ff2:	fmul   QWORD PTR [esi]
  405ff4:	inc    edi
  405ff5:	xor    DWORD PTR ds:0x2476a19a,ebx
  405ffb:	and    BYTE PTR [edx],0x95
  405ffe:	dec    ebx
  405fff:	xchg   edi,eax
  406000:	adc    DWORD PTR [edi-0x42478802],ecx
  406006:	inc    ebp
  406007:	sub    DWORD PTR [edi-0x46],esi
  40600a:	imul   esp,DWORD PTR [edi-0x790438fa],0x4d
  406011:	xchg   ebx,eax
  406012:	adc    BYTE PTR [eax+edi*8],dl
  406015:	and    BYTE PTR [esp+edi*8+0x683c8ea0],ah
  40601c:	ds jbe 0x405fd3
  40601f:	aam    0x8f
  406021:	icebp  
  406022:	stos   BYTE PTR es:[edi],al
  406023:	inc    eax
  406024:	pop    ss
  406025:	sbb    al,0x15
  406027:	pusha  
  406028:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406029:	fwait
  40602a:	mov    bl,0x21
  40602c:	mov    DWORD PTR [edi+ebx*4],esi
  40602f:	fcomp  DWORD PTR [ecx+0x12]
  406032:	and    edi,DWORD PTR [edi-0x281591df]
  406038:	gs inc ebp
  40603a:	pop    edx
  40603b:	loope  0x406081
  40603d:	xchg   ebp,eax
  40603e:	xchg   ebx,eax
  40603f:	sbb    cl,BYTE PTR [edi]
  406041:	shr    eax,cl
  406043:	mov    ecx,0x8d4c0db8
  406048:	sub    BYTE PTR [eax],cl
  40604a:	std    
  40604b:	and    esi,DWORD PTR [edx+0x6a]
  40604e:	loop   0x40606c
  406050:	or     BYTE PTR [ecx+esi*8-0x4c],cl
  406054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406055:	adc    DWORD PTR [ebp-0x47],ebx
  406058:	es inc eax
  40605a:	or     eax,0x8d7d3712
  40605f:	dec    edi
  406060:	mov    ds:0x77e96270,eax
  406065:	or     al,cl
  406067:	test   al,0xcc
  406069:	and    eax,0x6f6de97e
  40606e:	pop    ss
  40606f:	jb     0x406025
  406071:	ins    BYTE PTR es:[edi],dx
  406072:	cmp    al,0x6b
  406074:	idiv   DWORD PTR [ebx+0x8]
  406077:	int    0x5e
  406079:	mov    fs,esi
  40607b:	dec    ebp
  40607c:	mov    eax,ds:0x53b11a44
  406081:	push   edx
  406082:	pop    ss
  406083:	mov    dl,0x58
  406085:	mov    es,WORD PTR [ecx-0x77]
  406088:	add    dl,al
  40608a:	sub    DWORD PTR [ecx],edi
  40608c:	cmc    
  40608d:	icebp  
  40608e:	sbb    ebp,ecx
  406090:	lods   al,BYTE PTR ds:[esi]
  406091:	cwde   
  406092:	shr    DWORD PTR [edx+edx*4-0x7d4e1aa7],1
  406099:	leave  
  40609a:	mul    DWORD PTR [edi-0x3]
  40609d:	jecxz  0x406116
  40609f:	mov    dl,0xed
  4060a1:	pop    eax
  4060a2:	add    BYTE PTR [ecx],bh
  4060a4:	cli    
  4060a5:	lahf   
  4060a6:	mov    al,ds:0xb8011231
  4060ab:	addr16 inc esi
  4060ad:	inc    edx
  4060ae:	in     al,0xaf
  4060b0:	js     0x4060b0
  4060b2:	cs nop
  4060b4:	fistp  DWORD PTR [eax+0xd216d8]
  4060ba:	mov    eax,0xe04bea99
  4060bf:	jge    0x406129
  4060c1:	adc    al,0x70
  4060c3:	mov    ds:0x315ab0fe,eax
  4060c8:	and    al,0x9c
  4060ca:	outs   dx,BYTE PTR ds:[esi]
  4060cb:	mov    al,0x3b
  4060cd:	mov    al,ds:0x56bdbf2f
  4060d2:	retf   0xedac
  4060d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060d6:	fucom  st(1)
  4060d8:	cld    
  4060d9:	push   ecx
  4060da:	popf   
  4060db:	repnz mov edi,DWORD PTR [ebp+0x23]
  4060df:	xchg   ebp,eax
  4060e0:	popa   
  4060e1:	add    DWORD PTR [ebp+0x7af42ecc],edi
  4060e7:	ror    BYTE PTR [edi-0x3958c03c],0x63
  4060ee:	call   0xe56c:0xa2994783
  4060f5:	push   ecx
  4060f6:	pop    edi
  4060f7:	fcom   QWORD PTR [ecx-0x6e]
  4060fa:	(bad)
  4060fe:	int3   
  4060ff:	mov    al,ds:0x6715140a
  406104:	jge    0x406173
  406106:	and    al,0x83
  406108:	jae    0x406162
  40610a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40610b:	fmul   st,st(1)
  40610d:	daa    
  40610e:	cdq    
  40610f:	ins    DWORD PTR es:[edi],dx
  406110:	fistp  WORD PTR [ebx-0x5677aa0]
  406116:	in     eax,0x3b
  406118:	mov    edi,0x6c42e3df
  40611d:	jae    0x40618e
  40611f:	and    ah,BYTE PTR [ecx+0x5c4c7b9e]
  406125:	jae    0x4060ed
  406127:	(bad)  
  406128:	lods   al,BYTE PTR ds:[esi]
  406129:	pop    ebx
  40612a:	(bad)  
  40612b:	std    
  40612c:	cs stos DWORD PTR es:[edi],eax
  40612e:	mov    dl,0x3c
  406130:	enter  0x7607,0xd9
  406134:	jb     0x4061a0
  406136:	mov    esi,0xd6d9f32b
  40613b:	int3   
  40613c:	inc    esp
  40613d:	cmp    ebp,esi
  40613f:	cmp    eax,0xbef63e8
  406144:	sti    
  406145:	das    
  406146:	retf   
  406147:	int3   
  406148:	mov    ds:0x71bb6639,al
  40614d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40614e:	test   al,0x8c
  406150:	in     eax,0x2c
  406152:	fsubr  QWORD PTR [esi]
  406154:	std    
  406155:	outs   dx,DWORD PTR ds:[esi]
  406156:	lods   al,BYTE PTR ds:[esi]
  406157:	cli    
  406158:	add    ebp,0x1ab0777d
  40615e:	sbb    al,0x18
  406160:	shl    DWORD PTR [eax],0x72
  406163:	dec    ebx
  406164:	xchg   DWORD PTR [edi+0x1d],esp
  406167:	pushf  
  406168:	sbb    ecx,ebx
  40616a:	mov    ch,dh
  40616c:	nop
  40616d:	mov    edi,0xc9b417e9
  406172:	inc    esi
  406173:	outs   dx,BYTE PTR ds:[esi]
  406174:	fild   WORD PTR [eax-0x78ee869]
  40617a:	inc    esp
  40617b:	pushaw 
  40617d:	arpl   WORD PTR [esi+0x57888e3],di
  406183:	ja     0x406198
  406185:	or     DWORD PTR [ebx+0x4f],ebx
  406188:	test   DWORD PTR [eax],ecx
  40618a:	idiv   eax
  40618c:	repz mov cl,0x7e
  40618f:	scas   al,BYTE PTR es:[edi]
  406190:	into   
  406191:	nop
  406192:	mov    bl,BYTE PTR [edi-0x63b0eb1e]
  406198:	inc    eax
  406199:	adc    ch,BYTE PTR [edx+0xecd76ff]
  40619f:	repz inc ebp
  4061a1:	push   0xbfc5f9bd
  4061a6:	cmp    esi,DWORD PTR [ebx]
  4061a8:	pop    es
  4061a9:	cld    
  4061aa:	loopne 0x40615e
  4061ac:	out    0x38,eax
  4061ae:	aam    0xc0
  4061b0:	dec    edi
  4061b1:	js     0x4061ce
  4061b3:	jge    0x4061db
  4061b5:	mov    BYTE PTR [ebx+0x7a],0xa3
  4061b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061ba:	ret    0x3ae5
  4061bd:	ins    BYTE PTR es:[edi],dx
  4061be:	push   0x1d2f47d8
  4061c3:	jp     0x406241
  4061c5:	mov    DWORD PTR [esi],esi
  4061c7:	(bad)  
  4061c8:	pushf  
  4061c9:	(bad)  
  4061ca:	jmp    0x4061c1
  4061cc:	cwde   
  4061cd:	sbb    ch,BYTE PTR es:[ebx-0x3]
  4061d1:	sub    al,0xdb
  4061d3:	dec    ecx
  4061d4:	dec    edx
  4061d5:	aam    0xbf
  4061d7:	xchg   ecx,eax
  4061d8:	mov    esp,0x75c335e5
  4061dd:	shl    BYTE PTR [eax+0x33312a36],0x8b
  4061e4:	cmp    bh,BYTE PTR [esi-0x383c3f5a]
  4061ea:	rol    DWORD PTR [ebx-0x52],0x3b
  4061ee:	int3   
  4061ef:	dec    edx
  4061f0:	outs   dx,BYTE PTR ds:[esi]
  4061f1:	push   ds
  4061f2:	rcl    DWORD PTR [ebp-0xd721d75],0x58
  4061f9:	ficomp DWORD PTR [edx-0x454fdbda]
  4061ff:	jne    0x406201
  406201:	aas    
  406202:	adc    al,0xf4
  406204:	push   ebp
  406205:	mov    esp,0xc8a123a2
  40620a:	fldenv [edx-0x498f30c1]
  406210:	sbb    esp,esp
  406212:	bnd jp 0x4061a6
  406215:	out    0x86,al
  406217:	lods   al,BYTE PTR ds:[esi]
  406218:	mov    edi,ecx
  40621a:	imul   ebp,DWORD PTR [ebx-0x1ad0662d],0xffffffd0
  406221:	loope  0x406253
  406223:	fwait
  406224:	mov    esp,0x5f57c2f2
  406229:	stos   BYTE PTR es:[edi],al
  40622a:	xchg   ebp,eax
  40622b:	pop    edx
  40622c:	in     eax,dx
  40622d:	xchg   ebx,eax
  40622e:	retf   
  40622f:	cmp    al,0x9b
  406231:	ss dec ecx
  406233:	sub    esi,DWORD PTR [esp+edi*2-0x6fd494f9]
  40623a:	jge    0x40625c
  40623c:	cmp    eax,0x3e088a2
  406241:	ja     0x4061d5
  406243:	dec    ecx
  406244:	sub    edx,esi
  406246:	(bad)
  406249:	mul    BYTE PTR [eax]
  40624b:	es add eax,0xc741bbe4
  406251:	push   edx
  406252:	pushf  
  406253:	pop    edi
  406254:	dec    ebx
  406255:	bound  eax,QWORD PTR [esi+0x31]
  406258:	int    0x1d
  40625a:	push   ebp
  40625b:	dec    eax
  40625c:	pop    ss
  40625d:	jb     0x4062cb
  40625f:	lea    ebp,[edx+0x3a]
  406262:	pusha  
  406263:	jbe    0x4062cc
  406265:	sbb    bl,BYTE PTR [ecx+0x337aad23]
  40626b:	ret    
  40626c:	jp     0x406267
  40626e:	pushf  
  40626f:	jb     0x40620d
  406271:	pop    esi
  406272:	adc    eax,0xf3e3e8e9
  406277:	jb     0x406213
  406279:	or     esi,ebp
  40627b:	or     eax,DWORD PTR [esi+0x4a]
  40627e:	push   ecx
  40627f:	rcr    eax,cl
  406281:	sub    esi,DWORD PTR ds:0xc40b80bd
  406287:	lds    ebp,FWORD PTR [esi]
  406289:	xor    BYTE PTR [edx],ch
  40628b:	cmp    cl,cl
  40628d:	mov    bl,0xbc
  40628f:	or     BYTE PTR [esi+0xeeecbff],al
  406295:	or     eax,0x5ed5b249
  40629a:	call   0x947d:0x31f89fc1
  4062a1:	or     BYTE PTR [ebx+0x7d],dh
  4062a4:	leave  
  4062a5:	pop    esp
  4062a6:	and    al,0xd7
  4062a8:	jne    0x406242
  4062aa:	sub    al,0x4d
  4062ac:	retf   
  4062ad:	jmp    0x4062dc
  4062af:	xchg   esp,eax
  4062b0:	jp     0x406236
  4062b2:	fwait
  4062b3:	retf   0xe08
  4062b6:	mov    esi,?
  4062b8:	cmp    eax,0xbd012866
  4062bd:	push   cs
  4062be:	xor    eax,0xed4b82aa
  4062c3:	add    al,0x3e
  4062c5:	xchg   DWORD PTR [ebx],esi
  4062c7:	jae    0x406272
  4062c9:	std    
  4062ca:	jo     0x4062fc
  4062cc:	div    DWORD PTR [eax]
  4062ce:	outs   dx,BYTE PTR es:[esi]
  4062d0:	(bad)  
  4062d1:	and    eax,DWORD PTR [ecx+0x616dc3b3]
  4062d7:	fmul   DWORD PTR [ebp+esi*4+0x5e6a87f4]
  4062de:	cmp    eax,0x15a50790
  4062e3:	mov    al,ds:0xea870283
  4062e8:	jmp    0x4062e2
  4062ea:	mov    edx,0x42b1b80a
  4062ef:	js     0x406341
  4062f1:	pop    ebx
  4062f2:	mov    eax,ds:0x7b3cd4ca
  4062f7:	test   BYTE PTR [edi-0x67],ch
  4062fa:	sub    eax,0xfece7fca
  4062ff:	fidivr WORD PTR [ecx+0x5a1fd712]
  406305:	xlat   BYTE PTR ds:[ebx]
  406306:	push   edx
  406307:	ja     0x4062bc
  406309:	pop    ebx
  40630a:	aad    0xe0
  40630c:	and    al,dh
  40630e:	and    eax,0x5d02cb1a
  406313:	pop    ecx
  406314:	pop    ecx
  406315:	daa    
  406316:	push   es
  406317:	in     eax,0x29
  406319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40631a:	mov    eax,0x4f388481
  40631f:	or     eax,0x863ce990
  406324:	inc    ebx
  406325:	aad    0x9
  406327:	clc    
  406328:	rcr    dl,1
  40632a:	ins    BYTE PTR es:[edi],dx
  40632b:	push   ds
  40632c:	jns    0x4062c4
  40632e:	push   eax
  40632f:	stos   BYTE PTR es:[edi],al
  406330:	mov    dh,BYTE PTR [esi-0x13]
  406333:	xchg   ecx,eax
  406334:	mov    esi,DWORD PTR [ebx]
  406336:	adc    BYTE PTR [edx],dl
  406338:	into   
  406339:	mov    WORD PTR [edi],ss
  40633b:	sahf   
  40633c:	jae    0x4062ff
  40633e:	(bad)  
  406340:	pop    esp
  406341:	icebp  
  406342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406343:	clc    
  406344:	outs   dx,BYTE PTR ds:[esi]
  406345:	mov    edi,0x6ffd00a2
  40634a:	or     al,0x2f
  40634c:	sub    dl,dh
  40634e:	dec    esp
  40634f:	push   esp
  406350:	repz jbe 0x406349
  406353:	(bad)  
  406354:	out    dx,al
  406355:	cwde   
  406356:	daa    
  406357:	mov    dh,0x77
  406359:	sub    BYTE PTR [esi],0xc5
  40635c:	arpl   WORD PTR [edi-0x3edb6bc0],sp
  406362:	call   0xc7ac:0x3aabcccc
  406369:	jno    0x4063ae
  40636b:	sbb    ch,bh
  40636d:	int3   
  40636e:	sbb    dl,bh
  406370:	mov    bl,0xf6
  406372:	xor    DWORD PTR [eax+esi*4+0x41],ebp
  406376:	aam    0x1e
  406378:	shr    BYTE PTR [eax-0x15],cl
  40637b:	out    dx,eax
  40637c:	ret    0x6fd3
  40637f:	fimul  DWORD PTR ds:0x23534c64
  406385:	mov    fs,WORD PTR ds:0x34b33d2c
  40638b:	jo     0x40639a
  40638d:	sub    cl,bl
  40638f:	jmp    0x69087679
  406394:	pop    ss
  406395:	sbb    al,0x90
  406397:	sbb    al,0xe7
  406399:	mov    es,WORD PTR [edi]
  40639b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40639c:	mov    ah,0x3e
  40639e:	(bad)  
  40639f:	fcomp  DWORD PTR [esi-0x2f]
  4063a2:	sub    edi,DWORD PTR [edi]
  4063a4:	mov    bh,0xbb
  4063a6:	int    0x60
  4063a8:	(bad)  
  4063aa:	ret    0x1d1d
  4063ad:	mov    ecx,0x8c109c93
  4063b2:	pop    ebp
  4063b3:	adc    al,0x43
  4063b5:	jae    0x4063d5
  4063b7:	shr    dh,0x5e
  4063ba:	push   esp
  4063bb:	inc    ebp
  4063bc:	pop    ebx
  4063bd:	arpl   WORD PTR [eax-0x5b],bp
  4063c0:	xchg   DWORD PTR cs:[eax-0x4852cef2],ebx
  4063c7:	ja     0x4063d0
  4063c9:	stc    
  4063ca:	fs dec eax
  4063cc:	xchg   ecx,eax
  4063cd:	mov    esp,0x1780c540
  4063d2:	xchg   BYTE PTR [edi-0x31],dl
  4063d5:	sub    ah,BYTE PTR [edi-0x7c624910]
  4063db:	dec    esi
  4063dc:	retf   0x5f
  4063df:	xchg   ebp,eax
  4063e0:	iret   
  4063e1:	rcl    DWORD PTR [esi+0x5eddd2df],0xca
  4063e8:	test   DWORD PTR ds:[edx+0xf],ebx
  4063ec:	call   0xbba:0x8578a97e
  4063f3:	aas    
  4063f4:	fiadd  WORD PTR [ebx+0x7402d397]
  4063fa:	cmp    DWORD PTR ds:0xf622d3b6,esi
  406400:	test   BYTE PTR [ecx+edx*1+0x7b],dh
  406404:	jnp    0x40645a
  406406:	xlat   BYTE PTR ds:[ebx]
  406407:	nop
  406408:	mov    dh,0x2c
  40640a:	jbe    0x4063c8
  40640c:	fidivr WORD PTR [ebx]
  40640e:	neg    ecx
  406410:	xlat   BYTE PTR ds:[ebx]
  406411:	lea    ebx,[edx-0x7258afb8]
  406417:	xchg   ecx,eax
  406418:	cwde   
  406419:	mov    esi,0x902e2fc4
  40641e:	push   esi
  40641f:	out    0x6b,al
  406421:	fstp   TBYTE PTR [edi]
  406423:	scas   al,BYTE PTR es:[edi]
  406424:	stc    
  406425:	mov    dl,0x4c
  406427:	adc    ch,BYTE PTR [edi]
  406429:	inc    esp
  40642a:	sahf   
  40642b:	sub    ecx,ebx
  40642d:	cwde   
  40642e:	int3   
  40642f:	dec    ebx
  406430:	retf   
  406431:	rol    BYTE PTR [ebx+eax*8-0x162cd31],0x38
  406439:	sub    bh,dl
  40643b:	shr    DWORD PTR [edi-0x77],1
  40643e:	(bad)  
  406440:	je     0x4064a0
  406442:	mov    edx,0x50db336d
  406447:	inc    ebp
  406448:	out    dx,eax
  406449:	jecxz  0x4064a7
  40644b:	out    dx,al
  40644c:	jne    0x406482
  40644e:	jno    0x406492
  406450:	or     edx,0x768a340f
  406456:	cmp    al,0x7d
  406458:	test   al,0xf4
  40645a:	es sbb al,0xbe
  40645d:	rcl    eax,cl
  40645f:	ss jp  0x4063e8
  406462:	psubq  mm3,QWORD PTR [ecx+0x530b4746]
  406469:	dec    ecx
  40646a:	xchg   ebp,eax
  40646b:	ret    0x5afb
  40646e:	mov    dl,0xa0
  406470:	(bad)  
  406471:	pop    ebp
  406472:	jns    0x40648d
  406474:	lock xchg edx,eax
  406476:	out    0xd0,eax
  406478:	and    eax,0x4c55be37
  40647d:	sub    dl,BYTE PTR [esi-0x10f323c]
  406483:	push   0x40
  406485:	in     eax,0x47
  406487:	push   ebx
  406488:	aad    0x66
  40648a:	and    DWORD PTR [edi],eax
  40648c:	lods   eax,DWORD PTR ds:[esi]
  40648d:	aad    0xce
  40648f:	cdq    
  406490:	stos   DWORD PTR es:[edi],eax
  406491:	lock cdq 
  406493:	jb     0x406498
  406495:	popa   
  406496:	nop
  406497:	mov    al,ds:0x748b1390
  40649c:	jbe    0x406502
  40649e:	and    BYTE PTR ds:0x767eb01c,0x21
  4064a5:	bound  eax,QWORD PTR [ecx-0x7ab84a4]
  4064ab:	in     eax,dx
  4064ac:	xor    ch,ch
  4064ae:	aaa    
  4064af:	fld    QWORD PTR [edx-0x8]
  4064b2:	mov    bl,0xf0
  4064b4:	sar    BYTE PTR [edx+0x7b],0x34
  4064b8:	inc    ebx
  4064b9:	and    ebp,DWORD PTR [edi]
  4064bb:	adc    BYTE PTR [esi],dh
  4064bd:	xchg   BYTE PTR [esi-0x65],cl
  4064c0:	in     al,dx
  4064c1:	or     dh,bl
  4064c3:	(bad)  
  4064c4:	xor    al,BYTE PTR [ecx+0x3]
  4064c7:	stos   BYTE PTR es:[edi],al
  4064c8:	mul    DWORD PTR [edx+0x40bc0d3d]
  4064ce:	daa    
  4064cf:	or     al,0xc6
  4064d1:	mov    ah,0x5c
  4064d3:	xchg   ecx,eax
  4064d4:	repnz pushf 
  4064d6:	add    esi,DWORD PTR [ebx]
  4064d8:	leave  
  4064d9:	sbb    BYTE PTR [edx+eax*4-0x21d7f436],dh
  4064e0:	cli    
  4064e1:	inc    esp
  4064e2:	out    0xca,ax
  4064e5:	loope  0x406522
  4064e7:	and    eax,0xed09941c
  4064ec:	(bad)  
  4064ed:	je     0x40647c
  4064ef:	clc    
  4064f0:	and    DWORD PTR [eax-0x11],edx
  4064f3:	dec    ecx
  4064f4:	mov    DWORD PTR [ebx+0x72d23591],ebx
  4064fa:	icebp  
  4064fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064fc:	add    al,0x86
  4064fe:	add    BYTE PTR ds:0xb219ea0f,0x52
  406505:	aas    
  406506:	sub    BYTE PTR ds:0x56165cbc,ah
  40650c:	adc    DWORD PTR [ebx-0x61],ecx
  40650f:	(bad)  
  406510:	mov    WORD PTR [ebx],gs
  406512:	ss mov al,0x5a
  406515:	or     BYTE PTR [ecx-0x1413a653],0xc5
  40651c:	inc    ecx
  40651d:	xor    esi,DWORD PTR [eax-0x59547c35]
  406523:	or     BYTE PTR [esi-0x28],al
  406526:	mov    DWORD PTR [eax],edi
  406528:	xchg   edi,eax
  406529:	inc    ecx
  40652a:	mov    esp,0xa12962dc
  40652f:	add    ebx,esp
  406531:	jecxz  0x406524
  406533:	ds push ds
  406535:	or     ebp,eax
  406537:	rcl    ebx,cl
  406539:	call   0xca1538c
  40653e:	push   cs
  40653f:	pop    es
  406540:	pop    ss
  406541:	outs   dx,DWORD PTR ds:[esi]
  406542:	sti    
  406543:	pop    ebp
  406544:	retf   
  406545:	clc    
  406546:	push   0x650ef7bb
  40654b:	cmp    BYTE PTR [edi+0x7fd16901],ch
  406551:	mov    esi,0x9089da50
  406556:	int    0xce
  406558:	arpl   cx,cx
  40655a:	ret    
  40655b:	and    eax,0xba0e4580
  406560:	es or  al,0x6d
  406563:	test   eax,0xc7ec1e6e
  406568:	and    al,0x8b
  40656a:	test   ah,dl
  40656c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40656d:	sub    dl,ch
  40656f:	out    0x9a,eax
  406571:	arpl   WORD PTR [edi],bx
  406573:	adc    edx,DWORD PTR [edi]
  406575:	dec    esp
  406576:	loopne 0x4065b6
  406578:	pop    esp
  406579:	popa   
  40657a:	or     BYTE PTR ds:0xf0169be5,cl
  406580:	jmp    0x4065ff
  406582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406583:	xor    dh,cl
  406585:	call   0xa407:0x794c5c2b
  40658c:	aaa    
  40658d:	adc    ebp,DWORD PTR [esi]
  40658f:	sbb    ch,ch
  406591:	dec    eax
  406592:	add    esi,ecx
  406594:	jns    0x406530
  406596:	sbb    bh,bh
  406598:	sub    eax,0xcd2d7323
  40659d:	bound  esp,QWORD PTR [edi-0x6a]
  4065a0:	fs dec esp
  4065a2:	dec    bl
  4065a4:	adc    BYTE PTR [ebx+edi*8],bl
  4065a7:	imul   eax,DWORD PTR [eax-0x39],0x843ccf29
  4065ae:	hlt    
  4065af:	pop    ebp
  4065b0:	addr16 xor al,0xee
  4065b3:	data16 in al,0x0
  4065b6:	popa   
  4065b7:	int    0x76
  4065b9:	mov    ch,0xe3
  4065bb:	ja     0x406611
  4065bd:	mov    bh,0x5d
  4065bf:	inc    esi
  4065c0:	in     al,dx
  4065c1:	int    0x1
  4065c3:	push   edx
  4065c4:	mov    eax,ds:0xe4137658
  4065c9:	loopne 0x406620
  4065cb:	jmp    0x8adcb053
  4065d0:	push   ebp
  4065d1:	pop    ss
  4065d2:	fild   DWORD PTR [edx+0x78]
  4065d5:	out    0x45,eax
  4065d7:	sbb    eax,0xcb3ba5fb
  4065dc:	cli    
  4065dd:	mov    ah,0x64
  4065df:	add    edx,DWORD PTR [esi+0x46f207a3]
  4065e5:	inc    edx
  4065e6:	pop    edx
  4065e7:	addr16 ret 
  4065e9:	mov    ebp,0xdd70b775
  4065ee:	adc    bh,BYTE PTR [esi+0x3a]
  4065f1:	scas   eax,DWORD PTR es:[edi]
  4065f2:	jns    0x40665b
  4065f4:	mov    bl,0x66
  4065f6:	popa   
  4065f7:	outs   dx,DWORD PTR ds:[esi]
  4065f8:	jle    0x406651
  4065fa:	test   eax,0xbc46cea6
  4065ff:	or     ah,BYTE PTR [esi]
  406601:	mov    ds:0x499eb59d,al
  406606:	cmp    al,0xfa
  406608:	stos   DWORD PTR es:[edi],eax
  406609:	jecxz  0x4065ff
  40660b:	in     al,0x86
  40660d:	and    edx,DWORD PTR [ecx+0x520970b0]
  406613:	icebp  
  406614:	sbb    bh,bh
  406616:	jge    0x40661d
  406618:	pusha  
  406619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40661a:	in     eax,dx
  40661b:	jo     0x406676
  40661d:	inc    edi
  40661e:	xor    al,0xeb
  406620:	xchg   esp,eax
  406621:	xor    cl,BYTE PTR [edi]
  406623:	or     DWORD PTR [ecx+0xe],ebp
  406626:	fcomp  QWORD PTR [eax]
  406628:	(bad)  
  406629:	popf   
  40662a:	fldcw  WORD PTR [edi+0x13]
  40662d:	xor    al,0x35
  40662f:	out    dx,al
  406630:	sahf   
  406631:	xchg   ebx,eax
  406632:	fs call 0xe90:0xe19731fa
  40663a:	and    bl,BYTE PTR [eax+0x632439ca]
  406640:	mov    bl,cl
  406642:	fsub   DWORD PTR [eax-0x37d2534e]
  406648:	and    ebp,eax
  40664a:	pop    es
  40664b:	pop    esp
  40664c:	cmp    BYTE PTR [esi+0x41755d96],cl
  406652:	jo     0x406667
  406654:	lahf   
  406655:	mul    BYTE PTR [edx+0x37]
  406658:	dec    esp
  406659:	push   ecx
  40665a:	xlat   BYTE PTR ds:[ebx]
  40665b:	jne    0x4066b2
  40665d:	fsub   DWORD PTR [ebp+eax*8-0x7f]
  406661:	push   ebp
  406662:	sbb    eax,0xbd8f8a20
  406667:	sbb    esi,DWORD PTR [edi+0x7467eeaa]
  40666d:	sub    DWORD PTR [ebx+esi*1],ecx
  406670:	test   eax,0x3da4b2ec
  406675:	sbb    bp,WORD PTR [edx]
  406678:	rcl    BYTE PTR [esi+0x22b8be70],cl
  40667e:	inc    BYTE PTR [ebx+0x6ec441f3]
  406684:	mov    cl,0x11
  406686:	adc    esp,DWORD PTR [eax+0x1e055ed1]
  40668c:	fcmovu st,st(7)
  40668e:	fld    TBYTE PTR [ebp+ebp*8+0x8]
  406692:	inc    esi
  406693:	(bad)  
  406694:	(bad)  
  406695:	imul   ecx,DWORD PTR [ebx+0x2c],0x50
  406699:	inc    ebx
  40669a:	mov    esp,0x6171d61
  40669f:	cmp    al,BYTE PTR [ecx]
  4066a1:	out    dx,al
  4066a2:	xlat   BYTE PTR ds:[ebx]
  4066a3:	pop    ebp
  4066a4:	ja     0x4066da
  4066a6:	out    dx,al
  4066a7:	mov    DWORD PTR ds:0xe2b356e0,esi
  4066ad:	mov    bl,0xfc
  4066af:	pop    esi
  4066b0:	mov    ecx,0x8e1f7023
  4066b5:	inc    esp
  4066b6:	rcl    ah,cl
  4066b8:	dec    ecx
  4066b9:	fbld   TBYTE PTR [edx]
  4066bb:	bound  edi,QWORD PTR [edx+0x7c]
  4066be:	adc    cl,ah
  4066c0:	push   ebx
  4066c1:	call   0x47c9de4c
  4066c6:	and    bh,bl
  4066c8:	out    0x6f,al
  4066ca:	add    bl,BYTE PTR [ebp-0x69]
  4066cd:	jle    0x4066cc
  4066cf:	pop    ebp
  4066d0:	jbe    0x4066ba
  4066d2:	cmp    bh,al
  4066d4:	jno    0x40673c
  4066d6:	iret   
  4066d7:	mov    esi,0x72501d2e
  4066dc:	ret    0x806
  4066df:	lock mov eax,0x9302976f
  4066e5:	test   eax,edi
  4066e7:	int    0x2c
  4066e9:	dec    esp
  4066ea:	jl     0x4066a5
  4066ec:	pop    esp
  4066ed:	test   BYTE PTR [ecx],0x7
  4066f0:	adc    DWORD PTR [ecx],eax
  4066f2:	leave  
  4066f3:	xor    al,0x98
  4066f5:	push   edi
  4066f6:	std    
  4066f7:	call   0xe1ab3e3b
  4066fc:	fisttp QWORD PTR [eax+0x5639e201]
  406702:	mov    edi,DWORD PTR ds:0xc5e71069
  406708:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40670a:	je     0x406691
  40670c:	push   esp
  40670d:	int3   
  40670e:	lods   eax,DWORD PTR ds:[esi]
  40670f:	push   es
  406710:	retf   
  406711:	inc    eax
  406712:	and    BYTE PTR [esi],0x37
  406715:	dec    edi
  406716:	mov    eax,0xf833fd4e
  40671b:	adc    al,0x30
  40671d:	sbb    al,0xd
  40671f:	and    DWORD PTR [ebx],edi
  406721:	lods   eax,DWORD PTR ds:[esi]
  406722:	int3   
  406723:	add    BYTE PTR [esp+ebx*1+0x36],bl
  406727:	fbld   TBYTE PTR [ecx+0x3c797cb1]
  40672d:	call   FWORD PTR [edx-0x244273bf]
  406733:	scas   eax,DWORD PTR es:[edi]
  406734:	pop    ebx
  406735:	sub    DWORD PTR [eax+0x3],esi
  406738:	mov    ebp,0xce5ffd4e
  40673d:	ja     0x4066fe
  40673f:	mul    DWORD PTR [ecx-0x71]
  406742:	cld    
  406743:	mov    bh,0xa2
  406745:	rcr    BYTE PTR [eax],1
  406747:	mov    bl,0x55
  406749:	xchg   esi,eax
  40674a:	iret   
  40674b:	iret   
  40674c:	imul   ebx
  40674e:	fimul  DWORD PTR [ebx]
  406750:	out    dx,al
  406751:	sbb    eax,0x997cd87
  406756:	loop   0x40677b
  406758:	add    esp,esi
  40675a:	push   ebx
  40675b:	(bad)  
  40675c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40675d:	cwde   
  40675e:	out    0x7b,eax
  406760:	ret    0xa005
  406763:	addr16 pusha 
  406765:	repnz stos BYTE PTR es:[edi],al
  406767:	push   ds
  406768:	mov    ah,0x20
  40676a:	ins    DWORD PTR es:[edi],dx
  40676b:	mov    ch,0xac
  40676d:	frstor [edx]
  40676f:	shl    DWORD PTR [eax-0xcadba3a],0x4c
  406776:	lea    eax,[eax-0x30]
  406779:	das    
  40677a:	inc    esi
  40677b:	out    0x62,al
  40677d:	leave  
  40677e:	and    eax,0x74eec76f
  406783:	cs scas eax,DWORD PTR es:[edi]
  406785:	aam    0xd3
  406787:	add    bl,BYTE PTR [esi+0x61fac3aa]
  40678d:	sub    BYTE PTR [edi-0x5ea38701],al
  406793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406794:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406795:	inc    ecx
  406796:	je     0x40672c
  406798:	outs   dx,BYTE PTR ds:[esi]
  406799:	inc    ebp
  40679a:	add    eax,0xb68d3050
  40679f:	loop   0x4067be
  4067a1:	sahf   
  4067a2:	cmp    al,0x5d
  4067a4:	inc    eax
  4067a5:	(bad)  [ebx-0x6]
  4067a8:	(bad)
  4067ab:	lock pop edi
  4067ad:	fwait
  4067ae:	inc    ecx
  4067af:	je     0x40679b
  4067b1:	ja     0x4067c4
  4067b3:	dec    eax
  4067b4:	inc    eax
  4067b5:	dec    edi
  4067b6:	sub    edx,DWORD PTR [ecx-0x6d]
  4067b9:	push   ecx
  4067ba:	or     dh,dh
  4067bc:	lds    ecx,FWORD PTR [ebx-0x56]
  4067bf:	cdq    
  4067c0:	outs   dx,DWORD PTR ds:[esi]
  4067c1:	(bad)  
  4067c3:	clc    
  4067c4:	imul   edi,DWORD PTR [ebp+0x3e],0xffffffd7
  4067c8:	dec    esp
  4067c9:	and    ebx,DWORD PTR [edi+0x22b63902]
  4067cf:	loopne 0x406791
  4067d1:	add    ebp,esi
  4067d3:	sub    al,0xc9
  4067d5:	out    dx,eax
  4067d6:	add    cl,ah
  4067d8:	pop    eax
  4067d9:	inc    edi
  4067da:	mov    edi,0x20cb769
  4067df:	pop    esp
  4067e0:	idiv   BYTE PTR [ebx-0x62]
  4067e3:	mov    edi,0x4033153a
  4067e8:	or     ebp,DWORD PTR [ebp-0x7a]
  4067eb:	pop    eax
  4067ec:	xchg   edx,eax
  4067ed:	rcr    BYTE PTR [esi+edx*1-0xfd7f7a],0x61
  4067f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067f6:	jo     0x4067fd
  4067f8:	pushf  
  4067f9:	and    eax,0x9e6931f6
  4067fe:	(bad)  
  4067ff:	out    dx,eax
  406800:	jbe    0x406830
  406802:	es jge 0x406826
  406805:	cmp    al,0x34
  406807:	and    eax,0xedf68bde
  40680c:	dec    esp
  40680d:	aas    
  40680e:	pop    ebp
  40680f:	adc    al,0xbd
  406811:	lea    ebp,[ebx+0x4c79d44b]
  406817:	add    dl,BYTE PTR [edx]
  406819:	sahf   
  40681a:	pop    ss
  40681b:	loop   0x406892
  40681d:	or     eax,0x37986ae9
  406822:	aad    0xf1
  406824:	arpl   WORD PTR ds:0x12e0f2fb,bx
  40682a:	aaa    
  40682b:	mov    bl,0x6f
  40682d:	xlat   BYTE PTR ds:[ebx]
  40682e:	cmp    ebx,DWORD PTR [ecx+ebp*4+0x3f]
  406832:	adc    eax,0xed487bf8
  406837:	ret    0xe7cb
  40683a:	ret    
  40683b:	jae    0x40684a
  40683d:	jno    0x40687b
  40683f:	lods   eax,DWORD PTR ds:[esi]
  406840:	inc    ebp
  406841:	inc    edi
  406842:	cmp    eax,DWORD PTR [edi+0x6c4d613f]
  406848:	lods   eax,DWORD PTR ds:[esi]
  406849:	ins    BYTE PTR es:[edi],dx
  40684a:	jp     0x406856
  40684c:	in     al,0x3a
  40684e:	scas   al,BYTE PTR es:[edi]
  40684f:	test   DWORD PTR [eax+0x2f7e9a1b],edi
  406855:	jmp    0x83cecafe
  40685a:	out    0x4d,eax
  40685c:	pop    ebp
  40685d:	pop    esp
  40685e:	mov    ds:0xbdc07a61,al
  406863:	xchg   BYTE PTR [esi-0x247c09a8],bl
  406869:	add    dh,BYTE PTR [ebx+0x61]
  40686c:	fld    QWORD PTR [esi-0x163a0329]
  406872:	in     al,dx
  406873:	mov    ds:0xbf2c22ec,al
  406878:	cmc    
  406879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40687a:	retf   
  40687b:	aam    0x9e
  40687d:	(bad)  
  40687e:	xchg   DWORD PTR [edi],eax
  406880:	push   esp
  406881:	call   DWORD PTR [esp+ebx*2+0x4aae47d]
  406888:	and    ebx,DWORD PTR [eax+0x724eec81]
  40688e:	or     ah,BYTE PTR [ebx-0x13]
  406891:	push   DWORD PTR [edx]
  406893:	add    bl,bl
  406895:	imul   esp,ebp,0x7fe53766
  40689b:	(bad)  
  40689c:	push   ecx
  40689d:	sub    WORD PTR [edi],0x16
  4068a1:	fs stc 
  4068a3:	mov    ah,BYTE PTR [eax+0x78]
  4068a6:	push   0xffffffef
  4068a8:	ret    
  4068a9:	sbb    bh,ch
  4068ab:	test   DWORD PTR [ebp+0x4c8977b3],esp
  4068b1:	(bad)  
  4068b3:	test   eax,0xc9c0d48e
  4068b8:	aam    0x13
  4068ba:	sbb    DWORD PTR [ebp+0x1e],ebx
  4068bd:	xchg   edi,eax
  4068be:	xor    edx,DWORD PTR [eax]
  4068c0:	xchg   esi,eax
  4068c1:	xchg   ecx,eax
  4068c2:	lods   eax,DWORD PTR ds:[esi]
  4068c3:	mov    ds:0x58231b63,eax
  4068c8:	jns    0x4068be
  4068ca:	es dec edx
  4068cc:	sbb    BYTE PTR [ecx-0x267087d0],ch
  4068d2:	mov    ebp,0x8e2a3880
  4068d7:	adc    BYTE PTR [eax+0x10],cl
  4068da:	sti    
  4068db:	dec    edx
  4068dc:	xchg   ebp,eax
  4068dd:	push   0x5a86e2b5
  4068e2:	sahf   
  4068e3:	cmp    DWORD PTR [eax+0x2b198e59],esp
  4068e9:	push   ebp
  4068ea:	enter  0x4e46,0x99
  4068ee:	adc    esi,0x38864b0e
  4068f4:	pop    DWORD PTR [edi]
  4068f6:	or     ah,BYTE PTR [ecx-0x25]
  4068f9:	mov    bl,0x13
  4068fb:	mov    ebp,0x26a17234
  406900:	xlat   BYTE PTR ds:[ebx]
  406901:	jne    0x4068c2
  406903:	ret    
  406904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406905:	outs   dx,BYTE PTR ds:[esi]
  406906:	pop    edx
  406907:	int    0x16
  406909:	and    eax,0x8629d4f2
  40690e:	aad    0x3e
  406910:	mov    ah,0x82
  406912:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406914:	and    BYTE PTR [ecx],cl
  406916:	push   edi
  406917:	ins    BYTE PTR es:[edi],dx
  406918:	das    
  406919:	hlt    
  40691a:	in     al,0xb5
  40691c:	inc    eax
  40691d:	dec    eax
  40691e:	pop    ecx
  40691f:	push   ebp
  406920:	mov    DWORD PTR [edi-0x27],ebp
  406923:	outs   dx,BYTE PTR ds:[esi]
  406924:	sub    eax,0x2efac177
  406929:	xchg   DWORD PTR [ebx-0x6de87e25],edi
  40692f:	mov    cl,0xa0
  406931:	xchg   ecx,eax
  406932:	and    DWORD PTR [ebx],ecx
  406934:	add    DWORD PTR [ebp+0x6f],esi
  406937:	mov    BYTE PTR [edx],bh
  406939:	dec    edx
  40693a:	mov    ds:0xf955f3d4,al
  40693f:	(bad)  
  406940:	les    edx,FWORD PTR ds:0x2644edfe
  406946:	pop    edx
  406947:	sbb    al,0xf5
  406949:	inc    esp
  40694a:	add    al,0x65
  40694c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40694d:	icebp  
  40694e:	dec    esp
  40694f:	push   ecx
  406950:	adc    BYTE PTR ds:0x7e5716e0,al
  406956:	in     al,0x6f
  406958:	dec    eax
  406959:	iret   
  40695a:	push   ecx
  40695b:	mov    ch,0xcc
  40695d:	sub    esp,DWORD PTR [esi-0x41]
  406960:	mov    edx,0xbef540ff
  406965:	inc    ecx
  406966:	xor    DWORD PTR [esp+edx*4],edi
  406969:	adc    cl,dl
  40696b:	adc    al,0x3e
  40696d:	test   eax,0x99ef7560
  406972:	sub    eax,0x85dd5755
  406977:	or     BYTE PTR [edi+0x44],0x58
  40697b:	push   0x1a1e8b14
  406980:	leave  
  406981:	mov    ecx,0x176c388b
  406986:	in     al,0x3a
  406988:	call   0xf3dd:0xd5da7f4d
  40698f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406990:	lahf   
  406991:	push   0x21
  406993:	fsubr  DWORD PTR [esi-0x36]
  406996:	dec    eax
  406997:	xchg   edi,eax
  406998:	mov    DWORD PTR [ecx-0x34],edi
  40699b:	xor    al,BYTE PTR [ebx]
  40699d:	lea    ebp,[ebp-0x1a]
  4069a0:	(bad)  
  4069a1:	fwait
  4069a2:	out    dx,eax
  4069a3:	lods   al,BYTE PTR ds:[esi]
  4069a4:	add    al,0xc8
  4069a6:	add    ecx,esp
  4069a8:	lods   al,BYTE PTR ds:[esi]
  4069a9:	cmp    al,BYTE PTR [eax+0x6935ae2d]
  4069af:	jl     0x406a23
  4069b1:	mov    ch,0x11
  4069b3:	jge    0x4069c3
  4069b5:	(bad)  
  4069b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069b7:	add    ah,BYTE PTR [ebx]
  4069b9:	mov    ebx,0xd5463587
  4069be:	xchg   esi,eax
  4069bf:	mov    esp,0xff66ba54
  4069c4:	ss fxch st(5)
  4069c7:	in     al,dx
  4069c8:	je     0x4069ce
  4069ca:	jmp    0x406964
  4069cc:	xchg   BYTE PTR [edi],dl
  4069ce:	pusha  
  4069cf:	stos   DWORD PTR es:[edi],eax
  4069d0:	jae    0x406a05
  4069d2:	out    0x21,eax
  4069d4:	push   0x2e853d73
  4069d9:	xchg   esi,eax
  4069da:	std    
  4069db:	ror    BYTE PTR [esi+eiz*8+0x62],1
  4069df:	mov    ?,WORD PTR [edx+eax*2]
  4069e2:	sahf   
  4069e3:	mov    edi,0x23f40aaf
  4069e8:	ret    
  4069e9:	aaa    
  4069ea:	int    0xf
  4069ec:	sub    BYTE PTR [ebx+0x5],bl
  4069ef:	sub    cl,BYTE PTR [edx+0x7da9a911]
  4069f5:	(bad)  
  4069f6:	fsub   DWORD PTR [ebx+0x7185e2fc]
  4069fc:	sbb    al,BYTE PTR [esi]
  4069fe:	xchg   ebp,eax
  4069ff:	xor    ch,bh
  406a01:	xchg   esi,eax
  406a02:	jmp    0x3d75:0xe942c514
  406a09:	call   0x975e1f25
  406a0e:	aaa    
  406a0f:	inc    ebp
  406a10:	aaa    
  406a11:	in     al,0xa7
  406a13:	inc    edx
  406a14:	cld    
  406a15:	and    al,0x23
  406a17:	add    ebx,DWORD PTR [ebp-0x3646402c]
  406a1d:	pop    ebp
  406a1e:	imul   ebx,DWORD PTR cs:[eax],0xe8ed3e07
  406a25:	jb     0x4069d6
  406a27:	mov    esi,0xda5cc58c
  406a2c:	jl     0x4069bb
  406a2e:	cmp    eax,0xf8545b57
  406a33:	cmc    
  406a34:	(bad)  
  406a35:	pop    ebp
  406a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a37:	lock or al,0xf1
  406a3a:	fwait
  406a3b:	cmp    al,0xfa
  406a3d:	adc    ah,BYTE PTR [ecx-0x11]
  406a40:	sbb    al,0x3e
  406a42:	jb     0x4069f5
  406a44:	clc    
  406a45:	fcomi  st,st(7)
  406a47:	daa    
  406a48:	mov    ah,0xe8
  406a4a:	cmp    eax,eax
  406a4c:	pop    edi
  406a4d:	cmp    edi,ecx
  406a4f:	arpl   WORD PTR [esi+0x18],si
  406a52:	add    BYTE PTR [edx+0x3ef25543],0x74
  406a59:	scas   eax,DWORD PTR es:[edi]
  406a5a:	xor    bl,BYTE PTR [edx-0x69]
  406a5d:	sbb    eax,0x5083002f
  406a62:	pop    ss
  406a63:	into   
  406a64:	in     eax,0x4b
  406a66:	repnz adc edx,DWORD PTR [eax-0x4c]
  406a6a:	adc    DWORD PTR [esi],0xffffffe3
  406a6d:	inc    edx
  406a6e:	push   ds
  406a6f:	xor    ebx,DWORD PTR ds:0x69accdb3
  406a75:	jmp    0x5186:0x81e932dd
  406a7c:	dec    ebp
  406a7d:	mov    cl,0xa5
  406a7f:	jae    0x406a86
  406a81:	push   cs
  406a82:	lahf   
  406a83:	add    ah,0x98
  406a86:	stc    
  406a87:	mov    ch,0x9a
  406a89:	adc    BYTE PTR [edx],cl
  406a8b:	imul   esi,DWORD PTR [ebp-0x5c],0xa04ef9fc
  406a92:	jmp    0xe69c:0x4ae3d442
  406a99:	cmc    
  406a9a:	icebp  
  406a9b:	or     DWORD PTR [ebx],esi
  406a9d:	cmp    cl,0xb
  406aa0:	(bad)  
  406aa1:	fsubr  QWORD PTR [ecx+0x67]
  406aa4:	pop    esp
  406aa5:	jae    0x406a77
  406aa7:	pushf  
  406aa8:	mov    ds:0x2b5dd6d2,eax
  406aad:	push   eax
  406aae:	push   edi
  406aaf:	jge    0x406adf
  406ab1:	cmp    al,0x89
  406ab3:	jne    0x406b34
  406ab5:	add    dl,0xeb
  406ab8:	mov    ah,0x81
  406aba:	mov    ds:0x75052cae,eax
  406abf:	adc    bl,ch
  406ac1:	xor    dl,ah
  406ac3:	cmp    eax,0xbc4f04aa
  406ac8:	imul   eax,DWORD PTR [ebp-0x7d],0xfceffd44
  406acf:	pop    ebp
  406ad0:	mov    bl,BYTE PTR [eax+ebp*8+0x51]
  406ad4:	mov    bl,0xae
  406ad6:	in     eax,dx
  406ad7:	mov    bl,0xef
  406ad9:	arpl   WORD PTR [ebx+0x4d],cx
  406adc:	xlat   BYTE PTR ds:[ebx]
  406add:	retf   
  406ade:	inc    ecx
  406adf:	sbb    ch,bh
  406ae1:	shr    DWORD PTR [edi],0xc2
  406ae4:	int3   
  406ae5:	lahf   
  406ae6:	outs   dx,BYTE PTR ds:[esi]
  406ae7:	push   eax
  406ae8:	pop    es
  406ae9:	rcr    BYTE PTR [edi-0x78a8b247],0x5d
  406af0:	fcmovne st,st(1)
  406af2:	jg     0x406a74
  406af4:	add    BYTE PTR [edx-0x74],al
  406af7:	out    dx,al
  406af8:	rol    ecx,cl
  406afa:	shr    DWORD PTR [edi-0x57],0x52
  406afe:	and    BYTE PTR [eax-0x13cc270f],bl
  406b04:	inc    ecx
  406b05:	or     BYTE PTR [esi+0x63],bl
  406b08:	jno    0x406ad8
  406b0a:	retf   0xc70a
  406b0d:	call   0x4b4e522d
  406b12:	jmp    0x406b25
  406b14:	loopne 0x406b49
  406b16:	adc    ecx,DWORD PTR [ebp+edx*1+0x4e706b98]
  406b1d:	imul   esi,DWORD PTR [ebx],0x0
  406b20:	fldcw  WORD PTR [ecx]
  406b22:	xchg   edi,eax
  406b23:	test   DWORD PTR [edi+0x65],esi
  406b26:	gs out 0x31,eax
  406b29:	inc    DWORD PTR [ebx-0x5a]
  406b2c:	cs scas eax,DWORD PTR es:[edi]
  406b2e:	push   eax
  406b2f:	stos   DWORD PTR es:[edi],eax
  406b30:	mov    ebp,DWORD PTR [edx]
  406b32:	rcr    DWORD PTR [edx],1
  406b34:	mov    ah,0xe6
  406b36:	fwait
  406b37:	mov    ch,0x8d
  406b39:	add    dl,ah
  406b3b:	in     eax,dx
  406b3c:	add    BYTE PTR [eax+edx*8+0x4f],0x70
  406b41:	and    cl,BYTE PTR [edi+0x6cfd6a50]
  406b47:	adc    dh,BYTE PTR [ecx+ebx*4]
  406b4a:	bnd jno 0x406af2
  406b4d:	gs daa 
  406b4f:	jo     0x406b84
  406b51:	sub    BYTE PTR [ebx+0x68c9d525],0x35
  406b58:	inc    esp
  406b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b5a:	jmp    0x406b12
  406b5c:	adc    DWORD PTR [edx-0x3b],esp
  406b5f:	popf   
  406b60:	add    DWORD PTR [esi+esi*4+0x5d],edx
  406b64:	std    
  406b65:	xchg   ebp,esi
  406b67:	imul   ecx,ebp,0x7a6310b3
  406b6d:	lods   al,BYTE PTR ds:[esi]
  406b6e:	(bad)
  406b71:	loope  0x406af7
  406b73:	and    al,0xf
  406b75:	sar    DWORD PTR [ebp-0x72150f52],0xe2
  406b7c:	inc    ecx
  406b7d:	jbe    0x406b26
  406b7f:	data16 sub dh,BYTE PTR [ebx-0x3f]
  406b83:	mov    ?,WORD PTR [ebp+0x5a]
  406b86:	sub    ah,cl
  406b88:	add    DWORD PTR [ebp-0x17],edi
  406b8b:	daa    
  406b8c:	push   edx
  406b8d:	or     DWORD PTR [eax+0x70919904],0xb
  406b94:	sbb    DWORD PTR [esp+eiz*4-0x29],ecx
  406b98:	xlat   BYTE PTR ds:[ebx]
  406b99:	sub    edi,DWORD PTR [esi-0x7a]
  406b9c:	add    eax,0xe3e95de4
  406ba1:	inc    ebp
  406ba2:	ins    DWORD PTR es:[edi],dx
  406ba3:	mov    esp,0x72dd73a5
  406ba8:	inc    edi
  406ba9:	fstp   TBYTE PTR [ecx+0x59357e89]
  406baf:	cmc    
  406bb0:	getsec 
  406bb2:	push   ds
  406bb3:	not    BYTE PTR [esi]
  406bb5:	jle    0x406bb4
  406bb7:	repnz popa 
  406bb9:	jp     0x406baa
  406bbb:	cld    
  406bbc:	iret   
  406bbd:	inc    eax
  406bbe:	cmp    cl,ah
  406bc0:	adc    ah,dl
  406bc2:	or     DWORD PTR [ecx+0x2d8d0b0d],ebx
  406bc8:	ret    0xc6d2
  406bcb:	and    edx,ecx
  406bcd:	and    al,BYTE PTR [eax+0x10]
  406bd0:	test   esi,0xc16d3409
  406bd6:	cmp    al,0x12
  406bd8:	aaa    
  406bd9:	push   ebx
  406bda:	cli    
  406bdb:	aaa    
  406bdc:	ja     0x406c03
  406bde:	bound  edx,QWORD PTR [eax]
  406be0:	cmc    
  406be1:	pop    edi
  406be2:	sub    esp,DWORD PTR [esi-0x71]
  406be5:	popa   
  406be6:	rol    esi,cl
  406be8:	sub    al,BYTE PTR [ecx]
  406bea:	out    dx,eax
  406beb:	or     esp,DWORD PTR [esp+eax*4-0x74f718f5]
  406bf2:	and    eax,0xeb775971
  406bf7:	and    ch,BYTE PTR [eax+eiz*1]
  406bfa:	add    DWORD PTR [ebx-0x294bd76],edi
  406c00:	lods   eax,DWORD PTR ds:[esi]
  406c01:	ins    DWORD PTR es:[edi],dx
  406c02:	sub    ecx,esp
  406c04:	lods   al,BYTE PTR ds:[esi]
  406c05:	fld    QWORD PTR [edx+0x30]
  406c08:	shl    DWORD PTR [edx-0x39],cl
  406c0b:	pop    ecx
  406c0c:	xchg   DWORD PTR [ecx],ecx
  406c0e:	mov    dh,0xd3
  406c10:	leave  
  406c11:	adc    BYTE PTR [ebx],cl
  406c13:	adc    eax,0x725ce65a
  406c18:	adc    esi,ebp
  406c1a:	std    
  406c1b:	adc    al,0x2d
  406c1d:	push   ebx
  406c1e:	out    dx,eax
  406c1f:	aad    0x78
  406c21:	dec    ebx
  406c22:	shl    DWORD PTR [ebx-0x73],0x72
  406c26:	(bad)  
  406c27:	out    dx,al
  406c28:	loopne 0x406bf3
  406c2a:	sub    DWORD PTR [edi+0x6271f3a],ebx
  406c30:	lahf   
  406c31:	in     eax,dx
  406c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c33:	ins    DWORD PTR es:[edi],dx
  406c34:	xor    DWORD PTR [ebp*2+0x2e6d59b5],eax
  406c3b:	out    dx,al
  406c3c:	ret    0x9a8e
  406c3f:	pop    ebp
  406c40:	pusha  
  406c41:	sbb    eax,0x86a61e91
  406c46:	out    dx,al
  406c47:	int    0xd1
  406c49:	hlt    
  406c4a:	ss (bad) 
  406c4c:	cmc    
  406c4d:	jle    0x406c20
  406c4f:	mov    al,ds:0x2f8cbd8e
  406c54:	or     al,0x9
  406c56:	adc    al,BYTE PTR [ecx]
  406c58:	retf   0x7202
  406c5b:	pop    edi
  406c5c:	jmp    0x406c8c
  406c5e:	adc    al,BYTE PTR [eax+ebp*4-0x2d]
  406c62:	cli    
  406c63:	pop    edx
  406c64:	adc    dh,al
  406c66:	mov    ah,0xce
  406c68:	out    dx,al
  406c69:	jle    0x406c58
  406c6b:	lock addr16 xor ah,cl
  406c6f:	sub    ecx,DWORD PTR [ebx]
  406c71:	jmp    0x4d20:0xf719e97a
  406c78:	pop    es
  406c79:	adc    al,0xa1
  406c7b:	leave  
  406c7c:	mov    ecx,0x9e9912c1
  406c81:	mov    esp,0x7a10363c
  406c86:	fnsave [ecx+edi*1+0x3c]
  406c8a:	pop    edx
  406c8b:	stos   DWORD PTR es:[edi],eax
  406c8c:	aaa    
  406c8d:	outs   dx,BYTE PTR ds:[esi]
  406c8e:	pop    edx
  406c8f:	repnz in al,0xe6
  406c92:	pop    esp
  406c93:	push   esi
  406c94:	xor    eax,0x864a9cb1
  406c99:	mov    WORD PTR [edi],cs
  406c9b:	cwde   
  406c9c:	fwait
  406c9d:	(bad)  
  406c9e:	(bad)  
  406c9f:	xchg   ecx,eax
  406ca0:	push   es
  406ca1:	or     DWORD PTR [ebp-0x78],0xffffffbb
  406ca5:	rcr    DWORD PTR [esi+0x71],1
  406ca8:	pop    edx
  406ca9:	add    al,0x8c
  406cab:	mov    bh,0xd
  406cad:	jge    0x406c9c
  406caf:	mov    al,ds:0x92a1c92d
  406cb4:	(bad)  
  406cb5:	fadd   DWORD PTR [ebx]
  406cb7:	aad    0x4e
  406cb9:	jge    0x406cf8
  406cbb:	nop
  406cbc:	adc    DWORD PTR [ecx-0x288c9974],edi
  406cc2:	add    ebp,edi
  406cc4:	enter  0x328b,0x80
  406cc8:	jno    0x406d22
  406cca:	or     esp,ecx
  406ccc:	xchg   ecx,eax
  406ccd:	pusha  
  406cce:	(bad)  
  406ccf:	mov    edx,0x5503a819
  406cd4:	(bad)  
  406cd5:	mov    dl,0xba
  406cd7:	cmc    
  406cd8:	lods   eax,DWORD PTR ds:[esi]
  406cd9:	data16 daa 
  406cdb:	jmp    0x406ce1
  406cdd:	repnz cld 
  406cdf:	xchg   DWORD PTR [ecx+0x68cbb0ca],ebx
  406ce5:	add    BYTE PTR [eax-0x71],ah
  406ce8:	shr    DWORD PTR [ecx],1
  406cea:	test   eax,0x7dc3a444
  406cef:	pop    eax
  406cf0:	inc    esi
  406cf1:	cmp    DWORD PTR [ebx-0x40fc208e],esi
  406cf7:	mov    dh,0x3d
  406cf9:	in     eax,dx
  406cfa:	shl    DWORD PTR [ebp-0x5e8fa26a],1
  406d00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d01:	add    BYTE PTR [ebp+0x177bb640],dh
  406d07:	int    0x5f
  406d09:	pop    esi
  406d0a:	inc    esi
  406d0b:	push   ebx
  406d0c:	stos   BYTE PTR es:[edi],al
  406d0d:	ret    
  406d0e:	ud0    ebp,DWORD PTR [edx+ebx*1-0x63]
  406d13:	push   cs
  406d14:	push   es
  406d15:	inc    DWORD PTR [ebx-0x5a1e0670]
  406d1b:	push   0x23
  406d1d:	mov    dl,dh
  406d1f:	fisttp WORD PTR [eax+ecx*8]
  406d22:	sahf   
  406d23:	ldmxcsr DWORD PTR [ebx-0x4f7856b2]
  406d2a:	push   ss
  406d2b:	xor    ebp,DWORD PTR [ecx+0x7a]
  406d2e:	fwait
  406d2f:	outs   dx,DWORD PTR ds:[esi]
  406d30:	xchg   edi,eax
  406d31:	outs   dx,BYTE PTR ds:[esi]
  406d32:	ret    0x90c
  406d35:	inc    esp
  406d36:	in     al,dx
  406d37:	mov    WORD PTR [ecx-0x146a0e4d],es
  406d3d:	push   ebp
  406d3e:	das    
  406d3f:	dec    ecx
  406d40:	mov    dh,BYTE PTR [eax]
  406d42:	xor    eax,0x68ffff10
  406d47:	cmp    esp,esi
  406d49:	lock lods eax,DWORD PTR ds:[esi]
  406d4b:	sub    al,0xbf
  406d4d:	outs   dx,DWORD PTR ds:[esi]
  406d4e:	adc    eax,0x3db45c9c
  406d53:	das    
  406d54:	inc    ebp
  406d55:	pop    ebp
  406d56:	add    bl,ah
  406d58:	mov    esp,DWORD PTR [ebx-0x423e925e]
  406d5e:	mov    bl,0xf6
  406d60:	jnp    0x406d32
  406d62:	and    ebp,DWORD PTR [ebx-0x12b0b8c9]
  406d68:	pusha  
  406d69:	mov    dl,0x3d
  406d6b:	mov    edi,0x7cea2c06
  406d70:	jno    0x406d7c
  406d72:	jmp    0x46191abc
  406d77:	outs   dx,DWORD PTR ds:[esi]
  406d78:	cmp    ah,BYTE PTR [edx]
  406d7a:	jo     0x406de1
  406d7c:	pop    esp
  406d7d:	enter  0xace9,0xb1
  406d81:	jmp    0x406db5
  406d83:	ins    DWORD PTR es:[edi],dx
  406d84:	es xchg ah,dh
  406d87:	cdq    
  406d88:	outs   dx,BYTE PTR ds:[esi]
  406d89:	bound  edx,QWORD PTR [ebx-0x2e0cea15]
  406d8f:	into   
  406d90:	mov    ch,dl
  406d92:	dec    DWORD PTR [edx+0x4d]
  406d95:	pop    ecx
  406d96:	popf   
  406d97:	mov    ebp,0x96246f02
  406d9c:	cmp    ebp,edi
  406d9e:	ins    DWORD PTR es:[edi],dx
  406d9f:	jbe    0x406d83
  406da1:	adc    dh,ah
  406da3:	jmp    0x77243a33
  406da8:	loope  0x406df0
  406daa:	mov    esi,0x3478c5ac
  406daf:	cli    
  406db0:	test   al,0xe9
  406db2:	mov    esp,esp
  406db4:	dec    ecx
  406db5:	loope  0x406df2
  406db7:	jmp    0x9e37a41e
  406dbc:	push   eax
  406dbd:	xchg   BYTE PTR [edi+edx*4+0x3569add1],cl
  406dc4:	adc    al,0xe4
  406dc6:	add    al,0x72
  406dc8:	push   ds
  406dc9:	shr    al,cl
  406dcb:	(bad)  
  406dcc:	jge    0x406d7e
  406dce:	fs xchg edi,eax
  406dd0:	mov    esi,0xdb7f8e85
  406dd5:	es push cs
  406dd7:	test   BYTE PTR [ecx+0x20a5da86],dl
  406ddd:	and    ch,BYTE PTR [esi+0x25]
  406de0:	lds    edi,FWORD PTR [edx]
  406de2:	or     edx,ebx
  406de4:	dec    esp
  406de5:	sbb    BYTE PTR [ebx],bl
  406de7:	push   ebp
  406de8:	dec    eax
  406de9:	mov    dh,0x72
  406deb:	dec    ebx
  406ded:	jne    0x406dd5
  406def:	pop    ss
  406df0:	sahf   
  406df1:	cmp    esi,DWORD PTR [ecx+0x79c3a8ed]
  406df7:	jl     0x406dd1
  406df9:	cdq    
  406dfa:	mov    eax,0xd8bb142f
  406dff:	repnz sbb DWORD PTR [ecx+0x4],edx
  406e03:	bound  ebx,QWORD PTR [ebx+eax*2+0x62]
  406e07:	inc    BYTE PTR [ebx]
  406e09:	inc    edx
  406e0a:	mov    ds:0x9aafdd19,al
  406e0f:	or     eax,0xa1f99f73
  406e14:	aad    0xa1
  406e16:	push   cs
  406e17:	pop    es
  406e18:	scas   al,BYTE PTR es:[edi]
  406e19:	lds    ebp,FWORD PTR [edi+eax*2+0x35198fb0]
  406e20:	cli    
  406e21:	jae    0x406dfb
  406e23:	jne    0x406e29
  406e25:	or     ch,BYTE PTR [ecx+0x30dd9258]
  406e2b:	sbb    dh,cl
  406e2d:	mov    al,ds:0xe83ca0d8
  406e32:	mov    BYTE PTR [eax],ah
  406e34:	or     eax,0x36636721
  406e39:	pop    esi
  406e3a:	pushf  
  406e3b:	jb     0x406e3b
  406e3d:	int    0x6c
  406e3f:	xchg   esi,eax
  406e40:	jmp    0x499e6de4
  406e45:	popa   
  406e46:	lods   al,BYTE PTR ds:[esi]
  406e47:	and    DWORD PTR [esi+ecx*8],eax
  406e4a:	xchg   edi,eax
  406e4b:	fwait
  406e4c:	jge    0x406e56
  406e4e:	outs   dx,BYTE PTR ds:[esi]
  406e4f:	mov    ecx,DWORD PTR [ecx+eax*4+0x6f592c1]
  406e56:	call   FWORD PTR [ebx-0x71]
  406e59:	mov    ecx,DWORD PTR [edi]
  406e5b:	jnp    0x406ddd
  406e5d:	sbb    DWORD PTR [ebx-0x44a874ed],esi
  406e63:	cmc    
  406e64:	in     eax,0xe7
  406e66:	adc    bh,BYTE PTR [ecx]
  406e68:	in     eax,dx
  406e69:	xchg   ecx,eax
  406e6a:	mov    ch,0x72
  406e6c:	fxch   st(2)
  406e6e:	adc    DWORD PTR ss:[eax],esi
  406e71:	cmp    bl,BYTE PTR [ebp+eax*4-0x3afd0e34]
  406e78:	xor    edx,DWORD PTR [edi+0x5b]
  406e7b:	and    DWORD PTR [ebx+0x59],ecx
  406e7e:	xrelease xchg DWORD PTR [ebp+0x62],esp
  406e82:	mov    esi,esi
  406e84:	rcr    BYTE PTR [eax+0x53],cl
  406e87:	das    
  406e88:	pop    edx
  406e89:	and    ch,ch
  406e8b:	int3   
  406e8c:	jb     0x406e78
  406e8e:	xchg   ebx,eax
  406e8f:	outs   dx,DWORD PTR ds:[esi]
  406e90:	je     0x406e41
  406e92:	test   eax,0x8f57444c
  406e97:	pop    edi
  406e98:	iret   
  406e99:	and    al,0xea
  406e9b:	xor    al,bh
  406e9d:	or     BYTE PTR [edi+ecx*1-0x7132d648],bh
  406ea4:	mov    BYTE PTR [edi],0x43
  406ea7:	scas   eax,DWORD PTR es:[edi]
  406ea8:	mov    al,ds:0x6e5ebe69
  406ead:	jmp    0x85b80e1
  406eb2:	mov    edi,DWORD PTR [ecx-0x55afe785]
  406eb8:	xor    dl,BYTE PTR [edx+0x37]
  406ebb:	mov    edx,0x21cf5930
  406ec0:	push   cs
  406ec1:	int3   
  406ec2:	das    
  406ec3:	and    eax,0xedda1878
  406ec8:	add    ah,BYTE PTR [ebx+0x4c]
  406ecb:	repnz mov ds:0xb7459eae,al
  406ed1:	in     eax,dx
  406ed2:	mov    esp,0x3747eed1
  406ed7:	jo     0x406f1d
  406ed9:	xchg   esi,eax
  406eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406edb:	pop    ds
  406edc:	imul   esp,esi,0xaee021fb
  406ee2:	adc    bl,0xca
  406ee5:	jmp    0x7d2335de
  406eea:	popa   
  406eeb:	(bad)  
  406eed:	ss pop edx
  406eef:	pop    ds
  406ef0:	(bad)  
  406ef1:	xor    dl,cl
  406ef3:	imul   edi,ebx,0x7cccce34
  406ef9:	int3   
  406efa:	inc    eax
  406efb:	imul   dh
  406efd:	push   es
  406efe:	test   eax,0x512ddc05
  406f03:	lods   eax,DWORD PTR ds:[esi]
  406f04:	cwde   
  406f05:	out    dx,eax
  406f06:	shl    BYTE PTR [ecx+0x25],cl
  406f09:	xor    DWORD PTR [ebx+0x61e54c86],edx
  406f0f:	xchg   esi,eax
  406f10:	jne    0x406efa
  406f12:	sub    eax,0xa44376c4
  406f17:	call   esp
  406f19:	fsubr  QWORD PTR [esi-0x5b40f60]
  406f1f:	fadd   st,st(0)
  406f21:	dec    eax
  406f22:	jcxz   0x406f4a
  406f25:	jno    0x406f65
  406f27:	call   0xfe0e:0xca9dd9e3
  406f2e:	jnp    0x406ebc
  406f30:	in     eax,dx
  406f31:	jmp    0x2655:0xb08a9d45
  406f38:	add    BYTE PTR es:[esp+esi*1],0x48
  406f3d:	jmp    0xcdd21604
  406f42:	mov    al,ds:0x84e5ed95
  406f47:	xchg   ebp,eax
  406f48:	or     edx,DWORD PTR [ebp-0x4f144677]
  406f4e:	mov    WORD PTR [edi+0x8],ss
  406f51:	stos   DWORD PTR es:[edi],eax
  406f52:	lea    eax,[ebx]
  406f54:	pop    edx
  406f55:	pop    edx
  406f56:	dec    ebx
  406f57:	sbb    al,0x6b
  406f59:	and    BYTE PTR [esi-0x7ac95208],0x52
  406f60:	mov    ecx,0xd9f5eddc
  406f65:	or     dl,dh
  406f67:	stos   DWORD PTR es:[edi],eax
  406f68:	adc    eax,0x65681be9
  406f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f6e:	push   esp
  406f6f:	ret    0xfb2c
  406f72:	sub    DWORD PTR [ecx],ebx
  406f74:	(bad)  
  406f75:	aam    0xf9
  406f77:	aas    
  406f78:	inc    esp
  406f79:	loop   0x406ff8
  406f7b:	jmp    0xb044879e
  406f80:	ss out 0xe1,eax
  406f83:	mov    ds:0x35825c6,al
  406f88:	rcr    BYTE PTR ds:0xc2b5bb4f,1
  406f8e:	mov    ah,0x1
  406f90:	jp     0x406f1d
  406f92:	sub    eax,0xac4f9d82
  406f97:	clc    
  406f98:	sub    BYTE PTR [ebx+0x68],ch
  406f9b:	cwde   
  406f9c:	repz push ss
  406f9e:	scas   al,BYTE PTR es:[edi]
  406f9f:	les    ebp,FWORD PTR [edi-0x5b]
  406fa2:	push   ds
  406fa3:	icebp  
  406fa4:	imul   ebp,DWORD PTR [ebp-0x57e33f9b],0x27b9e2dc
  406fae:	or     ebp,DWORD PTR [eax-0x1e]
  406fb1:	adc    esi,ebp
  406fb3:	jns    0x406fe2
  406fb5:	sub    al,0xc6
  406fb7:	mov    ds,esi
  406fb9:	push   eax
  406fba:	adc    DWORD PTR [edi-0x43],esi
  406fbd:	lea    edi,[eax]
  406fbf:	add    ebx,DWORD PTR [esi+0x3a]
  406fc2:	cmp    ch,dh
  406fc4:	mov    bl,dl
  406fc6:	and    al,0xf7
  406fc8:	fsubr  QWORD PTR [edx+edx*2+0x76da3f35]
  406fcf:	inc    edi
  406fd0:	fmul   QWORD PTR [esp+ebp*8+0x2f]
  406fd4:	(bad)  
  406fd5:	push   eax
  406fd6:	adc    DWORD PTR [ebp-0x61],ecx
  406fd9:	adc    eax,0x279c3ef2
  406fde:	mov    edi,0xd3a16b10
  406fe3:	fbld   TBYTE PTR [edx-0x44dae3a]
  406fe9:	mov    BYTE PTR [esi],ch
  406feb:	js     0x407008
  406fed:	mov    al,0xbb
  406fef:	ins    DWORD PTR es:[edi],dx
  406ff0:	push   0x7c472fde
  406ff5:	call   0x5d1cf1c4
  406ffa:	push   esp
  406ffb:	test   eax,0x7c5c5d17
  407000:	mov    DWORD PTR [esi+0x34],esi
  407003:	push   ebp
  407004:	cmp    eax,0xe578aeb6
  407009:	mov    al,ds:0xdd6b594b
  40700e:	push   0x22
  407010:	out    0xe3,al
  407012:	inc    eax
  407013:	inc    ebp
  407014:	(bad)  
  407015:	loopne 0x406fbf
  407017:	jne    0x407085
  407019:	push   0x30
  40701b:	cmp    al,0x32
  40701d:	sub    dx,WORD PTR ds:0xfd10806e
  407024:	fcomp  DWORD PTR [ebx]
  407026:	bound  eax,QWORD PTR [esi]
  407028:	popf   
  407029:	xchg   ebx,eax
  40702a:	lock icebp 
  40702c:	jp     0x407073
  40702e:	jg     0x407002
  407030:	sub    bh,BYTE PTR [esi+0x72]
  407033:	arpl   WORD PTR [eax],di
  407035:	dec    esi
  407036:	sub    al,0x44
  407038:	frndint 
  40703a:	std    
  40703b:	jl     0x40708f
  40703d:	lahf   
  40703e:	xlat   BYTE PTR ds:[ebx]
  40703f:	daa    
  407040:	lods   eax,DWORD PTR ds:[esi]
  407041:	loop   0x406ff8
  407043:	jnp    0x406fca
  407045:	repz adc cl,bh
  407048:	jg     0x40706c
  40704a:	ror    DWORD PTR [edi+0x2c],0x84
  40704e:	cwde   
  40704f:	ja     0x407040
  407051:	jb     0x407039
  407053:	out    dx,eax
  407054:	jo     0x4070cf
  407056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407057:	repnz outs dx,BYTE PTR ds:[esi]
  407059:	xchg   ecx,eax
  40705a:	add    DWORD PTR [ebx],0xffffffdd
  40705d:	push   edi
  40705e:	cmp    BYTE PTR [ebx],ah
  407060:	imul   edx,DWORD PTR [esi],0xa51ffbfc
  407066:	loopne 0x40705f
  407068:	addr16 (bad) 
  40706a:	lods   al,BYTE PTR ds:[esi]
  40706b:	xor    al,0x93
  40706d:	xchg   esi,eax
  40706e:	push   ss
  40706f:	sbb    DWORD PTR [ecx+0x2c],edi
  407072:	cmp    ch,BYTE PTR [esi-0x4d9bb21e]
  407078:	push   ss
  407079:	cmovl  ebx,ebp
  40707c:	push   cs
  40707d:	leave  
  40707e:	ror    BYTE PTR ds:0x171c2d2f,0x74
  407085:	cli    
  407086:	repz adc BYTE PTR ss:[ecx],0x52
  40708b:	mov    esp,0x72adab2b
  407090:	mov    dl,0x39
  407092:	push   DWORD PTR [ebp-0x7d]
  407095:	or     BYTE PTR [eax],dh
  407097:	call   0x3c2fd15d
  40709c:	dec    esp
  40709d:	fnstsw WORD PTR [ebp-0x5]
  4070a0:	cwde   
  4070a1:	aam    0x3f
  4070a3:	and    esp,ecx
  4070a5:	jecxz  0x4070ed
  4070a7:	xor    BYTE PTR [ebp-0x342d629],bh
  4070ad:	pop    eax
  4070ae:	xchg   edi,eax
  4070af:	cmp    eax,0xda69fac2
  4070b4:	inc    edi
  4070b5:	jbe    0x407096
  4070b7:	sti    
  4070b8:	scas   al,BYTE PTR es:[edi]
  4070b9:	push   ss
  4070ba:	fsubr  DWORD PTR [eax]
  4070bc:	mov    edx,0xc278d276
  4070c1:	and    DWORD PTR [esi-0x38],edx
  4070c4:	mov    dl,0x24
  4070c6:	sub    BYTE PTR [ecx],dl
  4070c8:	cmp    cl,0x24
  4070cb:	fisubr DWORD PTR [edi+esi*8-0x2d]
  4070cf:	call   0x899d6802
  4070d4:	mov    DWORD PTR [edi+0xc9b53d1],edx
  4070da:	ficom  DWORD PTR [eax-0x48]
  4070dd:	aad    0x6b
  4070df:	neg    DWORD PTR [eax]
  4070e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070e2:	mov    ch,0xc2
  4070e4:	ror    BYTE PTR [ebx-0x1b0543d5],0x9c
  4070eb:	aaa    
  4070ec:	(bad)  
  4070ed:	jg     0x407135
  4070ef:	pop    edi
  4070f0:	lahf   
  4070f1:	cmp    bl,ah
  4070f3:	and    DWORD PTR [edi],ecx
  4070f5:	mov    eax,ds:0x4a4ceb5c
  4070fa:	adc    esi,ecx
  4070fc:	inc    edi
  4070fd:	mov    dh,0x67
  4070ff:	and    al,dh
  407101:	(bad)  
  407103:	call   0xf010dc65
  407108:	mov    eax,0x19d600f2
  40710d:	sbb    al,0x9d
  40710f:	out    0x50,al
  407111:	push   cs
  407112:	sbb    al,0x7e
  407114:	(bad)
  407118:	push   ebx
  407119:	pop    edx
  40711a:	lea    ebp,[edi-0x4f]
  40711d:	call   0x5d9170b2
  407122:	pushf  
  407123:	dec    edx
  407124:	jno    0x407122
  407126:	fwait
  407127:	and    BYTE PTR [ecx+eiz*4+0x41],bh
  40712b:	xor    ch,BYTE PTR [ebp+0x21]
  40712e:	push   cs
  40712f:	sbb    al,0xe5
  407131:	fidivr WORD PTR [edx+0x36f20867]
  407137:	pop    edi
  407138:	out    dx,al
  407139:	repnz lds ebx,FWORD PTR [eax]
  40713c:	push   edi
  40713d:	test   al,0x23
  40713f:	push   ds
  407140:	adc    al,BYTE PTR [ecx*1-0x1166f378]
  407147:	mov    DWORD PTR [eax],eax
  407149:	cmp    edx,edx
  40714b:	push   0x4a37f75b
  407150:	xor    DWORD PTR [ebx+ecx*2-0xe52a6ce],esp
  407157:	add    dl,BYTE PTR [ebx]
  407159:	or     DWORD PTR [ebx+ebx*1-0x1a74dd4],ecx
  407160:	mov    ds:0x3939928b,eax
  407165:	lds    eax,FWORD PTR [ecx-0xb2457b1]
  40716b:	cld    
  40716c:	out    dx,al
  40716d:	mov    esi,0xfd897c12
  407172:	xor    BYTE PTR [eax+0x2e],0xc8
  407176:	pop    edx
  407177:	adc    al,0x53
  407179:	push   esi
  40717a:	sahf   
  40717b:	sbb    BYTE PTR [edx+0x47],0x46
  40717f:	xchg   esi,eax
  407180:	gs cld 
  407182:	jl     0x40713f
  407184:	(bad)  
  407185:	int    0x2d
  407187:	bnd jge 0x407137
  40718a:	jp     0x40720a
  40718c:	rol    BYTE PTR [ebp+eax*1+0x53],0xe2
  407191:	mov    cl,0x4f
  407193:	adc    DWORD PTR [ebp+ebx*8-0x13],0xffffff9f
  407198:	push   cs
  407199:	test   DWORD PTR ds:0x955c0aa,edi
  40719f:	mov    ch,BYTE PTR [esp+edx*2]
  4071a2:	jne    0x4071d0
  4071a4:	repz mov bl,0x56
  4071a7:	ret    0xd66a
  4071aa:	aaa    
  4071ab:	in     al,dx
  4071ac:	neg    DWORD PTR [ebp+0x3f]
  4071af:	push   ss
  4071b0:	xchg   DWORD PTR [ecx+ebx*2-0x7eabdf82],esp
  4071b7:	push   ss
  4071b8:	in     al,0x3b
  4071ba:	ins    BYTE PTR es:[edi],dx
  4071bb:	pop    esi
  4071bc:	ficom  DWORD PTR [ecx]
  4071be:	cld    
  4071bf:	jmp    0x8a257d9c
  4071c4:	imul   BYTE PTR [ebp-0x76]
  4071c7:	dec    esi
  4071c8:	test   WORD PTR [ecx+ebx*2-0x2579aacd],sp
  4071d0:	mov    dh,0x9e
  4071d2:	jne    0x40717b
  4071d4:	xchg   edx,eax
  4071d5:	pop    ds
  4071d6:	icebp  
  4071d7:	inc    ecx
  4071d8:	bound  esp,QWORD PTR [edx]
  4071da:	mov    esp,esp
  4071dc:	cwde   
  4071dd:	sbb    al,0xb8
  4071df:	call   0x78e785b1
  4071e4:	mov    eax,ds:0xc04e7b5e
  4071e9:	mov    esp,0xe510c0e0
  4071ee:	push   0xffffffb7
  4071f0:	mov    al,0xa3
  4071f2:	xchg   esi,eax
  4071f3:	jnp    0x40717b
  4071f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071f6:	or     eax,0x79ef43af
  4071fb:	mul    BYTE PTR [ecx+0xba27fac]
  407201:	sbb    eax,0x11e1583
  407206:	sub    eax,0x8294189e
  40720b:	in     eax,0x8b
  40720d:	pop    es
  40720e:	jg     0x4071ab
  407210:	mov    al,ds:0xbf04fded
  407215:	pop    edx
  407216:	inc    ecx
  407217:	ret    
  407218:	jo     0x40719a
  40721a:	and    al,0xe5
  40721c:	out    0x6c,eax
  40721e:	mov    esp,0xed8043f8
  407223:	xor    BYTE PTR [ecx],bh
  407225:	in     eax,dx
  407226:	es xchg ebp,eax
  407228:	ror    DWORD PTR [eax],0x93
  40722b:	inc    edi
  40722c:	mov    BYTE PTR [esi+0x3a9a5523],ch
  407232:	xor    BYTE PTR [esi],0xd
  407235:	dec    ecx
  407236:	pop    ecx
  407237:	lahf   
  407238:	or     dh,al
  40723a:	stos   DWORD PTR es:[edi],eax
  40723b:	and    eax,0xb8bccb8b
  407240:	adc    BYTE PTR [esi+0x707bde0a],0xf8
  407247:	idiv   DWORD PTR [eax+0x4ad67da9]
  40724d:	out    0x59,eax
  40724f:	inc    ebx
  407250:	push   0x5e
  407252:	xchg   ebx,eax
  407253:	out    0x6b,eax
  407255:	mov    dh,BYTE PTR [edx+ecx*1]
  407258:	retf   
  407259:	lock sti 
  40725b:	in     eax,dx
  40725c:	ins    BYTE PTR es:[edi],dx
  40725d:	sub    ecx,edx
  40725f:	adc    ch,BYTE PTR [ecx+0x2]
  407262:	sar    DWORD PTR [ebx+0x6d],cl
  407265:	push   edi
  407266:	je     0x40722c
  407268:	hlt    
  407269:	mov    DWORD PTR [edi-0x6c],0xc040bd12
  407270:	push   edi
  407271:	mov    DWORD PTR [esi+0xd],ebx
  407274:	fimul  WORD PTR [ebx+0x45]
  407277:	enter  0x1c7e,0x23
  40727b:	dec    edi
  40727c:	aaa    
  40727d:	cwde   
  40727e:	sub    BYTE PTR [esi+0x782d175e],ch
  407284:	std    
  407285:	xor    DWORD PTR [esi],esi
  407287:	fimul  DWORD PTR [esi+0xf]
  40728a:	sub    eax,0xa46f2860
  40728f:	(bad)
  407293:	dec    esp
  407294:	fst    QWORD PTR [ebx+0x0]
  407297:	lods   eax,DWORD PTR ds:[esi]
  407298:	push   0x46
  40729a:	fsubr  DWORD PTR [eax-0x61]
  40729d:	outs   dx,BYTE PTR ds:[esi]
  40729e:	addr16 loopne 0x407278
  4072a1:	inc    ecx
  4072a2:	xchg   DWORD PTR [eax+0xe9dee84],esp
  4072a8:	pop    ss
  4072a9:	mov    dh,ch
  4072ab:	(bad)  
  4072ac:	mov    ebp,0x548f9db0
  4072b1:	clc    
  4072b2:	lea    ebx,[edx-0x30243f78]
  4072b8:	out    dx,al
  4072b9:	mov    dh,BYTE PTR [ebx]
  4072bb:	sbb    al,0x25
  4072bd:	into   
  4072be:	test   bl,ch
  4072c0:	xor    ah,BYTE PTR [ebp-0x5b5b74a0]
  4072c6:	stos   DWORD PTR es:[edi],eax
  4072c7:	jbe    0x40725a
  4072c9:	fucom  st(7)
  4072cb:	add    eax,esi
  4072cd:	mov    al,0x27
  4072cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072d0:	sbb    DWORD PTR ds:0xa5246904,edx
  4072d6:	push   ds
  4072d7:	nop
  4072d8:	mov    al,ds:0x90bf3eea
  4072dd:	leave  
  4072de:	aad    0x48
  4072e0:	icebp  
  4072e1:	or     bh,BYTE PTR [eax+esi*2]
  4072e4:	push   es
  4072e5:	imul   edx,DWORD PTR [ebp+0x6f],0x2ee87ff9
  4072ec:	sbb    eax,0x85592fac
  4072f1:	mov    ds:0xf0ea4ecb,al
  4072f6:	mov    ebp,0xbb5723b8
  4072fb:	mov    cl,0x76
  4072fd:	xor    al,0x34
  4072ff:	mov    DWORD PTR [esi],ebx
  407301:	mov    bh,0x7f
  407303:	sbb    al,0x8
  407305:	imul   BYTE PTR [ecx-0x2c7d4dbe]
  40730b:	mov    edi,DWORD PTR [esp+eax*8-0x65]
  40730f:	push   0xffffff87
  407311:	pop    ecx
  407312:	data16 clc 
  407314:	lds    ebp,FWORD PTR [ecx]
  407316:	fstp   st(5)
  407318:	mov    dl,0xd
  40731a:	or     BYTE PTR [ebx-0x47],bh
  40731d:	xor    BYTE PTR ds:0xed554f89,bh
  407323:	and    esi,DWORD PTR [ebx]
  407325:	inc    esi
  407326:	mov    WORD PTR [ebx-0x1],?
  407329:	sub    esi,DWORD PTR [ebx]
  40732b:	fcmovnb st,st(7)
  40732d:	lds    ecx,FWORD PTR [edx]
  40732f:	push   ss
  407330:	add    BYTE PTR [esi+0x48],0xf1
  407334:	push   ecx
  407335:	rcr    DWORD PTR [ebx-0x7169c03f],1
  40733b:	les    esp,FWORD PTR [esi]
  40733d:	pop    ds
  40733e:	xchg   ebx,eax
  40733f:	lods   al,BYTE PTR ds:[esi]
  407340:	jb     0x4072eb
  407342:	mov    esp,0xdd2e3857
  407347:	pushf  
  407348:	push   0xffffff95
  40734a:	call   0x977:0xf366fd4
  407351:	jo     0x4073b7
  407353:	cld    
  407354:	mov    edx,0xd33da84f
  407359:	and    eax,0x9f10c1f3
  40735e:	jmp    0x6abf:0x7dfad87d
  407365:	jle    0x407337
  407367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407368:	mov    bh,0x86
  40736a:	mov    eax,0xb3010e43
  40736f:	not    dh
  407371:	inc    esp
  407372:	xchg   ebp,eax
  407373:	(bad)  
  407374:	out    0x1d,eax
  407376:	loope  0x4073a0
  407378:	xlat   BYTE PTR ds:[ebx]
  407379:	push   ebp
  40737a:	xchg   ecx,eax
  40737b:	xor    edi,edi
  40737d:	mov    al,0xb
  40737f:	push   es
  407380:	mov    eax,ds:0x918035c0
  407385:	inc    ebp
  407386:	add    DWORD PTR [edi],edx
  407388:	xchg   ecx,eax
  407389:	rcr    cl,cl
  40738b:	xor    al,ch
  40738d:	aas    
  40738e:	shr    BYTE PTR [edi],cl
  407390:	pop    esi
  407391:	jmp    0xab24:0x761aa765
  407398:	lock push ebp
  40739a:	shl    DWORD PTR [edx+0x767ed42],0x52
  4073a1:	imul   esi,DWORD PTR [ecx-0x18402be4],0x71
  4073a8:	dec    edx
  4073a9:	sub    al,0x14
  4073ab:	sar    ecx,1
  4073ad:	imul   ebp,DWORD PTR [edx-0x327bcaba],0xb66fc80e
  4073b7:	ret    0xfcd
  4073ba:	and    esi,DWORD PTR [edx+0x74]
  4073bd:	hlt    
  4073be:	in     eax,dx
  4073bf:	jnp    0x407342
  4073c1:	sar    BYTE PTR [ecx],0x6d
  4073c4:	mov    al,ds:0x5782bf09
  4073c9:	or     eax,0xb100e2b6
  4073ce:	leave  
  4073cf:	and    eax,0xb70bfcb3
  4073d4:	inc    eax
  4073d5:	retf   
  4073d6:	mov    ch,0xa9
  4073d8:	(bad)  
  4073da:	dec    esp
  4073db:	test   DWORD PTR [esi-0x6e],esp
  4073de:	popf   
  4073df:	dec    ebp
  4073e0:	outs   dx,DWORD PTR ds:[esi]
  4073e1:	retf   0xc868
  4073e4:	out    dx,al
  4073e5:	inc    ebx
  4073e6:	mov    esp,edi
  4073e8:	push   ebx
  4073e9:	call   0x9b79bf30
  4073ee:	dec    bp
  4073f0:	xchg   DWORD PTR ds:0xb83eac2c,ebp
  4073f6:	in     eax,dx
  4073f7:	mov    cl,0xc8
  4073f9:	pop    eax
  4073fa:	cld    
  4073fb:	into   
  4073fc:	nop
  4073fd:	cmp    al,0x79
  4073ff:	mov    ebx,0x5a546bdd
  407404:	int3   
  407405:	shl    edi,cl
  407407:	jo     0x407463
  407409:	sbb    DWORD PTR [edx+0x74],ebx
  40740c:	sahf   
  40740d:	icebp  
  40740e:	in     eax,0x51
  407410:	daa    
  407411:	cmp    BYTE PTR [edi-0x7736a224],0x66
  407418:	inc    ebp
  407419:	jl     0x4073a3
  40741b:	cmp    dh,BYTE PTR [eax-0x6bb367a3]
  407421:	sbb    BYTE PTR [ecx],dl
  407423:	arpl   WORD PTR [ebx+ebp*8+0x46],di
  407427:	sub    BYTE PTR [edi],bl
  407429:	add    BYTE PTR [ebx-0x5d],bl
  40742c:	xrelease mov DWORD PTR [edx],ebx
  40742f:	jnp    0x40742e
  407431:	test   BYTE PTR [edx-0x51b0862e],bl
  407437:	or     DWORD PTR [ebx],0x5c
  40743a:	xor    DWORD PTR [edi],esp
  40743c:	std    
  40743d:	push   cs
  40743e:	fisubr WORD PTR [edx+0x23]
  407441:	nop
  407442:	inc    ebx
  407443:	cmp    bh,BYTE PTR [ebx+ecx*8-0x1d]
  407447:	mov    edi,0x9ac77ba6
  40744c:	cld    
  40744d:	clc    
  40744e:	inc    edi
  40744f:	and    al,0x28
  407451:	cmp    BYTE PTR [edx],bh
  407453:	pop    eax
  407454:	dec    ebx
  407455:	or     ebp,DWORD PTR [edx+0x1d11771f]
  40745b:	cmp    al,0xb0
  40745d:	out    dx,eax
  40745e:	out    dx,al
  40745f:	call   FWORD PTR [edi]
  407461:	dec    edi
  407462:	imul   esi,DWORD PTR [edi+ebp*1],0x726e47b4
  407469:	shl    ah,0x33
  40746c:	mov    dl,0x46
  40746e:	fisttp QWORD PTR [edx+0x5f]
  407471:	call   0x2c39:0xf829602c
  407478:	js     0x407483
  40747a:	sar    DWORD PTR [ebp+0x34],1
  40747d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40747e:	in     al,0x20
  407480:	mov    dh,0x2a
  407482:	hlt    
  407483:	cmp    al,0xf5
  407485:	push   0x15
  407487:	test   al,0x52
  407489:	addr16 push 0x2e
  40748c:	adc    al,0x19
  40748e:	add    BYTE PTR [edi+0x6aa93cf5],dl
  407494:	jae    0x4074c9
  407496:	lods   eax,DWORD PTR ds:[esi]
  407497:	adc    esp,eax
  407499:	out    0x3f,al
  40749b:	mov    ah,0x6e
  40749d:	xchg   esi,eax
  40749e:	add    BYTE PTR [eax],cl
  4074a0:	nop
  4074a1:	fisub  WORD PTR [edx+ebx*1-0x77f8acf6]
  4074a8:	push   ss
  4074a9:	call   0x14be:0xd82531da
  4074b0:	sub    BYTE PTR [ebp-0x7d6055c9],dh
  4074b6:	or     al,0x2b
  4074b8:	pop    es
  4074b9:	sahf   
  4074ba:	sub    DWORD PTR [ebx],edi
  4074bc:	repnz inc esi
  4074be:	(bad)
  4074c2:	pop    edi
  4074c3:	sub    ch,BYTE PTR [edi-0x35a24073]
  4074c9:	dec    edx
  4074ca:	xor    dl,al
  4074cc:	into   
  4074cd:	add    BYTE PTR [eax-0x51813844],al
  4074d3:	mov    eax,0xa845ab07
  4074d8:	mov    edi,0x5d209301
  4074dd:	rcr    BYTE PTR [edx],0xf1
  4074e0:	pop    ebp
  4074e1:	imul   edi,DWORD PTR [eax+0x8],0xffffffde
  4074e5:	cmp    edi,DWORD PTR [ecx+edi*1+0x73]
  4074e9:	sub    dh,BYTE PTR [edi-0x3f]
  4074ec:	jae    0x40754f
  4074ee:	pusha  
  4074ef:	pop    ss
  4074f0:	clc    
  4074f1:	(bad)  
  4074f2:	(bad)  
  4074f3:	clc    
  4074f4:	inc    esp
  4074f5:	pop    ecx
  4074f6:	sub    eax,0x6bb07608
  4074fb:	arpl   WORD PTR [edx+0x15],di
  4074fe:	stc    
  4074ff:	(bad)
  407504:	xor    ah,BYTE PTR [esi]
  407506:	dec    eax
  407507:	xor    BYTE PTR [edx],ch
  407509:	idiv   DWORD PTR [ecx]
  40750b:	inc    ecx
  40750c:	mov    BYTE PTR [eax+0x1d],dh
  40750f:	loopne 0x40753e
  407511:	out    0xcb,eax
  407513:	call   0xba61:0x6cd64682
  40751a:	aad    0xa0
  40751c:	out    0x85,al
  40751e:	fld    QWORD PTR [esi-0x30]
  407521:	pop    DWORD PTR [edi-0x1]
  407524:	xchg   edx,eax
  407525:	add    al,0x2
  407527:	test   DWORD PTR [edi],eax
  407529:	xchg   edi,eax
  40752a:	shr    dh,cl
  40752c:	or     al,0x4c
  40752e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40752f:	sti    
  407530:	xchg   esi,eax
  407531:	xor    BYTE PTR [ebp-0x7b],dl
  407534:	arpl   WORD PTR gs:[ecx+0x4ed73c2b],sp
  40753b:	fst    st(3)
  40753d:	je     0x4074c2
  40753f:	mov    esi,esp
  407541:	xor    BYTE PTR [edi-0x14],dh
  407544:	fisttp QWORD PTR [ecx-0x7d]
  407547:	rol    BYTE PTR [esp+edx*8-0x7e],0xaa
  40754c:	(bad)  
  40754d:	fst    DWORD PTR [edi]
  40754f:	loope  0x407520
  407551:	mov    ebp,0x5e517c06
  407556:	ror    BYTE PTR ds:0xd9dccc70,1
  40755c:	call   0x6aa360b
  407561:	inc    esp
  407562:	mov    eax,ds:0x6769f5bd
  407567:	mov    eax,ds:0x8675afe6
  40756c:	jecxz  0x407506
  40756e:	adc    DWORD PTR [ebp+edx*4-0x6357832b],ecx
  407575:	sbb    eax,0x4a0b1982
  40757a:	push   ebp
  40757b:	inc    esi
  40757c:	cmc    
  40757d:	dec    ebx
  40757e:	fcmovnbe st,st(2)
  407580:	bound  ebp,QWORD PTR [esi+esi*2]
  407583:	xchg   edx,eax
  407584:	adc    BYTE PTR [edi-0x737a9571],dl
  40758a:	mov    eax,eax
  40758c:	or     al,0xd3
  40758e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40758f:	mov    ds:0xa0fb77dd,al
  407594:	icebp  
  407595:	lahf   
  407596:	mov    ebp,0x635c6af2
  40759b:	scas   eax,DWORD PTR es:[edi]
  40759c:	xor    al,0xf1
  40759e:	pop    edx
  40759f:	push   esi
  4075a0:	bound  esi,QWORD PTR [ecx+ecx*1+0x156c0cf5]
  4075a7:	les    eax,FWORD PTR [ebx-0x7edfeaf3]
  4075ad:	mov    esp,0x317726f3
  4075b2:	mov    cl,0x93
  4075b4:	imul   edx
  4075b6:	or     eax,0xe9bcbe66
  4075bb:	adc    al,0x38
  4075bd:	inc    esi
  4075be:	jae    0x4075c2
  4075c0:	js     0x407614
  4075c2:	inc    BYTE PTR [esi]
  4075c4:	or     eax,0x956025f3
  4075c9:	test   BYTE PTR [eax+0xbd5fb1d],ah
  4075cf:	leave  
  4075d0:	mov    dl,0x0
  4075d2:	or     eax,0x95d86f52
  4075d7:	outs   dx,DWORD PTR ds:[esi]
  4075d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075d9:	fsubr  QWORD PTR [edx]
  4075db:	jnp    0x40759c
  4075dd:	std    
  4075de:	fisttp QWORD PTR [ebx+0x2e522e44]
  4075e4:	jmp    0x11e9a91d
  4075e9:	iret   
  4075ea:	jp     0x407572
  4075ec:	imul   eax,esi,0x20
  4075ef:	lea    edi,[eax+0x34]
  4075f2:	push   cs
  4075f3:	pop    esi
  4075f4:	jge    0x407642
  4075f6:	inc    eax
  4075f7:	push   esp
  4075f8:	out    dx,al
  4075f9:	in     al,0x49
  4075fb:	ja     0x4075da
  4075fd:	rol    BYTE PTR [ecx+0x13366f54],1
  407603:	pop    esp
  407604:	loop   0x4075a4
  407606:	adc    dh,bh
  407608:	pop    ebp
  407609:	sbb    BYTE PTR [ebp-0x6f],dl
  40760c:	fnstsw WORD PTR [eax]
  40760e:	cmp    esp,edi
  407610:	push   ds
  407611:	mov    dl,0x3f
  407613:	(bad)  
  407614:	das    
  407615:	or     edi,edx
  407617:	mov    dl,0x39
  407619:	dec    esp
  40761a:	lock inc ebx
  40761c:	inc    ebx
  40761d:	out    dx,eax
  40761e:	lock push ebp
  407620:	aas    
  407621:	call   0x12953ba4
  407626:	dec    edx
  407627:	xchg   ebx,eax
  407628:	ja     0x4075e6
  40762a:	mov    ah,0xc3
  40762c:	xchg   esp,eax
  40762d:	inc    esp
  40762e:	test   eax,0x40331029
  407633:	cld    
  407634:	or     al,0x41
  407636:	mov    edx,0x7af6756e
  40763b:	mov    edx,0xaaf40336
  407640:	sbb    edi,DWORD PTR [eax-0x13]
  407643:	dec    edx
  407644:	pop    ss
  407645:	mov    ah,0xc0
  407647:	fmul   QWORD PTR [edi+0x11]
  40764a:	add    BYTE PTR [ecx+0x5c811ea1],bh
  407650:	push   eax
  407651:	outs   dx,BYTE PTR ds:[esi]
  407652:	add    edx,DWORD PTR [ebx-0x10]
  407655:	pop    eax
  407656:	cld    
  407657:	rcl    BYTE PTR [esi],0x3b
  40765a:	add    esi,DWORD PTR [edx-0x75439d34]
  407660:	cli    
  407661:	mov    BYTE PTR [esi],ch
  407663:	retf   
  407664:	and    eax,0x71709ea2
  407669:	pop    esp
  40766a:	xor    edx,esp
  40766c:	ja     0x40763c
  40766e:	(bad)  
  40766f:	addr16 and eax,0xeb830f05
  407675:	ins    BYTE PTR es:[edi],dx
  407676:	scas   eax,DWORD PTR es:[edi]
  407677:	div    BYTE PTR [ebp+0x1babbb41]
  40767d:	rcl    BYTE PTR [ebx+0x7d7b5e1a],1
  407683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407684:	dec    eax
  407685:	mov    cl,0x9c
  407687:	push   ss
  407688:	mov    edx,0xb2afb637
  40768d:	nop
  40768e:	out    dx,al
  40768f:	pop    ebx
  407690:	mov    ds:0x1a83782b,al
  407695:	xchg   DWORD PTR [esi+0xd66cc53],ebx
  40769b:	jge    0x407702
  40769d:	loopne 0x407665
  40769f:	or     BYTE PTR [eax-0x5f],dh
  4076a2:	sar    DWORD PTR ds:0xe8d9896,0x3d
  4076a9:	ficom  WORD PTR [eax-0x37]
  4076ac:	shr    DWORD PTR [edi+0x1acc2363],0xeb
  4076b3:	cdq    
  4076b4:	inc    ecx
  4076b5:	lds    esp,FWORD PTR [edi+0x35]
  4076b8:	mov    esi,0x3e6f35da
  4076bd:	dec    ecx
  4076be:	push   ss
  4076bf:	fbld   TBYTE PTR [eax+0xe9f5c13]
  4076c5:	push   es
  4076c6:	fstp   DWORD PTR [edx+0xe]
  4076c9:	loopne 0x4076ad
  4076cb:	aaa    
  4076cc:	push   ss
  4076cd:	push   eax
  4076ce:	or     esi,DWORD PTR [esi]
  4076d0:	mul    BYTE PTR [esi-0x34825b30]
  4076d6:	xchg   ebx,eax
  4076d7:	hlt    
  4076d8:	sub    al,0x7b
  4076da:	jne    0x4076a6
  4076dc:	outs   dx,BYTE PTR ds:[esi]
  4076dd:	sbb    ch,ah
  4076df:	sbb    DWORD PTR ds:0xc12753b0,eax
  4076e5:	jb     0x407753
  4076e7:	aad    0xa
  4076e9:	cmp    esi,edi
  4076eb:	cld    
  4076ec:	(bad)  
  4076ee:	daa    
  4076ef:	fucomip st,st(6)
  4076f1:	jecxz  0x4076dd
  4076f3:	dec    ecx
  4076f4:	mov    bh,0xf2
  4076f6:	test   al,0x97
  4076f8:	jae    0x40767c
  4076fa:	fdiv   DWORD PTR [ecx+0x37]
  4076fd:	stos   BYTE PTR es:[edi],al
  4076fe:	inc    esi
  4076ff:	push   ds
  407700:	pop    es
  407701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407702:	test   ecx,esi
  407704:	ret    0x5083
  407707:	jne    0x407720
  407709:	adc    bh,BYTE PTR [esp+ebp*4-0x1235f78c]
  407710:	dec    edx
  407711:	rcr    DWORD PTR [ebx],1
  407713:	into   
  407714:	aam    0x39
  407716:	add    DWORD PTR [edx-0x3aa4d19d],esi
  40771c:	arpl   WORD PTR [edi],sp
  40771e:	cmp    DWORD PTR [edx+0x54],edx
  407721:	ins    BYTE PTR es:[edi],dx
  407722:	push   ds
  407723:	in     al,0x9
  407725:	inc    esi
  407726:	fwait
  407727:	or     ah,dh
  407729:	imul   esp,DWORD PTR [ecx],0x1e967220
  40772f:	bound  ebx,QWORD PTR [edx]
  407731:	jne    0x40779e
  407733:	jae    0x407788
  407735:	push   esp
  407736:	stos   DWORD PTR es:[edi],eax
  407737:	jle    0x407770
  407739:	or     ebx,ebp
  40773b:	jp     0x407702
  40773d:	enter  0x188d,0x5e
  407741:	xlat   BYTE PTR ds:[ebx]
  407742:	sub    dl,BYTE PTR [ebx-0x182237c6]
  407748:	dec    edi
  407749:	mov    esi,0xb61c79a7
  40774e:	adc    bh,bh
  407750:	ss cli 
  407752:	ret    0xed1d
  407755:	mov    bh,0xad
  407757:	js     0x4077b4
  407759:	fisub  WORD PTR [edi-0x3891ebc6]
  40775f:	mov    ds:0x7d308b8c,al
  407764:	xchg   ecx,eax
  407765:	jmp    0x9bcd2785
  40776a:	cmp    al,0xd
  40776c:	div    eax
  40776e:	sub    DWORD PTR [ebp-0x2f26d57c],esp
  407774:	jge    0x4077ee
  407776:	add    ch,BYTE PTR [ebx-0x12]
  407779:	and    eax,0x2c1e57e3
  40777e:	sbb    BYTE PTR [edi-0x14],al
  407781:	push   ss
  407782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407783:	mov    dh,0xb8
  407785:	pop    ss
  407786:	call   FWORD PTR [eax]
  407788:	cli    
  407789:	addr16 clc 
  40778b:	adc    ch,BYTE PTR [edi]
  40778d:	lds    ebp,FWORD PTR [eax]
  40778f:	ret    
  407790:	sahf   
  407791:	lods   eax,DWORD PTR ds:[esi]
  407792:	ins    DWORD PTR es:[edi],dx
  407793:	push   0x235835f6
  407798:	lock call 0x6a72:0x2bbc06d4
  4077a0:	xor    BYTE PTR [ecx],cl
  4077a2:	mov    dh,0x7
  4077a4:	pop    eax
  4077a5:	dec    esp
  4077a6:	mov    edx,fs
  4077a8:	jecxz  0x4077b5
  4077aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077ab:	out    dx,eax
  4077ac:	stos   BYTE PTR es:[edi],al
  4077ad:	mov    cl,0x54
  4077af:	repnz aad 0x21
  4077b2:	ds jb  0x40781a
  4077b5:	dec    esp
  4077b6:	or     ebx,ebx
  4077b8:	leave  
  4077b9:	or     al,0xb5
  4077bb:	mul    edx
  4077bd:	lds    edi,FWORD PTR [ecx-0x55]
  4077c0:	in     al,0x92
  4077c2:	mov    cl,0xdd
  4077c4:	jp     0x40777f
  4077c6:	test   DWORD PTR [edi+0x5f7396a],0xd3a9424
  4077d0:	dec    edx
  4077d1:	ja     0x407832
  4077d3:	jae    0x40781f
  4077d5:	mov    edx,edi
  4077d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077d8:	adc    DWORD PTR [ebx-0x3086f95f],edi
  4077de:	cli    
  4077df:	xor    al,0x57
  4077e1:	iret   
  4077e2:	jmp    0x4077d4
  4077e4:	fcomi  st,st(5)
  4077e6:	repnz sbb al,0x60
  4077e9:	mov    ah,cl
  4077eb:	xor    eax,0xe1958aa9
  4077f0:	add    DWORD PTR [esi+esi*2-0x36db453c],ebx
  4077f7:	add    BYTE PTR [ecx+ecx*4],bl
  4077fa:	stc    
  4077fb:	retf   0x53a1
  4077fe:	pop    ds
  4077ff:	jmp    0x8fe:0x8035a8cf
  407806:	dec    ecx
  407807:	sbb    DWORD PTR [edi-0x7c085361],edx
  40780d:	xchg   ecx,eax
  40780e:	or     ebp,esp
  407810:	imul   BYTE PTR [edx+0x4e9d7374]
  407816:	pop    esp
  407817:	icebp  
  407818:	sub    edx,ebp
  40781a:	mov    ebx,0x66d65cb0
  40781f:	dec    ebx
  407820:	ins    BYTE PTR es:[edi],dx
  407821:	lahf   
  407822:	fild   QWORD PTR [edi-0x6]
  407825:	jp     0x4077fc
  407827:	cli    
  407828:	jmp    0x87b5410a
  40782d:	js     0x407865
  40782f:	fist   WORD PTR [eax-0x43]
  407832:	push   ecx
  407833:	adc    ah,dh
  407835:	pop    esi
  407836:	mov    ds:0x1058ad9b,al
  40783b:	es push 0x32
  40783e:	les    esp,FWORD PTR [eax+0x1a]
  407841:	mov    esp,0x45b50731
  407846:	push   ecx
  407847:	sbb    DWORD PTR [edi+0x69b5e1b],eax
  40784d:	sbb    DWORD PTR [ebx+edx*2-0x73],ecx
  407851:	adc    BYTE PTR [eax-0x5e],0xa8
  407855:	or     al,al
  407857:	xchg   esp,eax
  407858:	mov    esp,0x4430b2a9
  40785d:	mov    ds:0xfdb6dcbb,eax
  407862:	dec    eax
  407863:	and    eax,0xa7915d9d
  407868:	ja     0x407892
  40786a:	(bad)  [ebp-0x2ccc925e]
  407870:	sub    eax,0xe500ca80
  407875:	cwde   
  407876:	aam    0x58
  407878:	push   esi
  407879:	mov    bh,0x23
  40787b:	hlt    
  40787c:	add    eax,ebx
  40787e:	lock mov cl,0x1d
  407881:	xor    eax,0xd9241b5d
  407886:	stos   DWORD PTR es:[edi],eax
  407887:	fwait
  407888:	adc    BYTE PTR [edx-0x5ba0ea87],cl
  40788e:	idiv   al
  407890:	int    0x6a
  407892:	pop    ebx
  407893:	mov    esi,0x22f9e758
  407898:	push   esp
  407899:	out    0x2d,al
  40789b:	xchg   edi,eax
  40789c:	lar    edx,WORD PTR [esi]
  40789f:	jno    0x40784c
  4078a1:	int3   
  4078a2:	push   ds
  4078a3:	cmp    ah,ah
  4078a5:	mov    eax,0x652bcb21
  4078aa:	in     eax,0x4d
  4078ac:	cmp    edi,DWORD PTR [edx]
  4078ae:	hlt    
  4078af:	push   edx
  4078b0:	lahf   
  4078b1:	(bad)  
  4078b2:	fwait
  4078b3:	add    ah,cl
  4078b5:	jmp    FWORD PTR [ecx+esi*2]
  4078b8:	jmp    0xd33ce72e
  4078bd:	cmp    al,ch
  4078bf:	and    edx,esp
  4078c1:	xchg   edi,eax
  4078c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078c3:	imul   ebx,DWORD PTR ds:0xb1ede36f,0x44
  4078ca:	int3   
  4078cb:	and    DWORD PTR [ebx-0x379a96bf],ebx
  4078d1:	inc    sp
  4078d3:	and    BYTE PTR [eax],cl
  4078d5:	jge    0x407898
  4078d7:	das    
  4078d8:	and    BYTE PTR [esi+0x52],al
  4078db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078dc:	dec    edx
  4078dd:	add    DWORD PTR [ebp+0xc],esi
  4078e0:	out    0x9b,eax
  4078e2:	pop    ss
  4078e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078e4:	shr    DWORD PTR [esi+0x30],cl
  4078e7:	dec    ebp
  4078e8:	xor    BYTE PTR [edx+eax*1+0x4d],bh
  4078ec:	clc    
  4078ed:	into   
  4078ee:	xchg   esi,eax
  4078ef:	fwait
  4078f0:	fwait
  4078f1:	xor    BYTE PTR [edi-0xbab70b3],al
  4078f7:	sub    bh,BYTE PTR [esi-0x7b]
  4078fa:	cs xchg ebp,eax
  4078fc:	sbb    al,0xa9
  4078fe:	xor    ebp,DWORD PTR [ecx+0x3b21c2d7]
  407904:	pop    edi
  407905:	(bad)  
  407906:	pop    esi
  407907:	jp     0x4078ca
  407909:	sub    cl,cl
  40790b:	popf   
  40790c:	push   esp
  40790d:	mov    WORD PTR [ebx+0x59852ac2],?
  407913:	aam    0x8c
  407915:	out    dx,al
  407916:	sbb    edx,DWORD PTR [edx-0x3abbda9d]
  40791c:	add    DWORD PTR [ebx-0x56f74955],edi
  407922:	retf   
  407923:	mov    ah,0x90
  407925:	xchg   edx,eax
  407926:	add    al,0x74
  407928:	inc    esi
  407929:	es sahf 
  40792b:	sub    eax,0xfef09cd9
  407930:	das    
  407931:	dec    edx
  407932:	jmp    0xe830aae5
  407937:	cdq    
  407938:	dec    esi
  407939:	mov    gs,WORD PTR [ebp-0x3c]
  40793c:	int3   
  40793d:	sub    ecx,DWORD PTR [edi-0x6f]
  407940:	mov    eax,ds:0xc6e0dc14
  407945:	adc    BYTE PTR [ebx+0x6e],0x32
  407949:	sub    DWORD PTR [ebx+0x45b166b8],edi
  40794f:	stos   BYTE PTR es:[edi],al
  407950:	mov    esp,0xe732cb8b
  407955:	sub    eax,DWORD PTR [ecx-0x13]
  407958:	stos   BYTE PTR es:[edi],al
  407959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40795a:	pop    es
  40795b:	(bad)  
  40795c:	mov    ebp,0x503952f7
  407961:	scas   eax,DWORD PTR es:[edi]
  407962:	sub    edi,DWORD PTR [esp+esi*1]
  407965:	sahf   
  407966:	stc    
  407967:	jnp    0x407998
  407969:	pushf  
  40796a:	mov    ds:0xdd0d6e81,eax
  40796f:	xchg   DWORD PTR ds:0x4476c53c,edx
  407975:	push   edx
  407976:	rcl    ebx,1
  407978:	sbb    DWORD PTR [edi-0x674f8dc8],edi
  40797e:	adc    DWORD PTR [edx+0x461a1196],0xffffff82
  407985:	pop    ebx
  407986:	addr16 inc eax
  407988:	ret    
  407989:	adc    edi,DWORD PTR [eax-0xc]
  40798c:	test   eax,0xf1c16896
  407991:	and    DWORD PTR [edi+0x6fcbcc40],ebp
  407997:	out    dx,al
  407998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407999:	in     eax,dx
  40799a:	shr    al,cl
  40799c:	jbe    0x4079e8
  40799e:	xchg   ebx,eax
  40799f:	sahf   
  4079a0:	adc    al,0x33
  4079a2:	dec    esi
  4079a3:	pushf  
  4079a4:	fmul   st(4),st
  4079a6:	aas    
  4079a7:	and    DWORD PTR [ebx+0x4d],0x716ecb3
  4079ae:	bound  ebx,QWORD PTR [esi]
  4079b0:	cmp    DWORD PTR [ebx],edi
  4079b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079b3:	pop    ds
  4079b4:	loop   0x407940
  4079b6:	and    cl,BYTE PTR [edi]
  4079b8:	push   0x39
  4079ba:	mov    bl,0x16
  4079bc:	jecxz  0x4079d3
  4079be:	push   edi
  4079bf:	aam    0x4f
  4079c1:	ins    DWORD PTR es:[edi],dx
  4079c2:	xor    al,0xc0
  4079c4:	std    
  4079c5:	add    al,0x97
  4079c7:	sbb    BYTE PTR [edx-0x7b2c9aef],al
  4079cd:	loop   0x407993
  4079cf:	aam    0x9f
  4079d1:	outs   dx,BYTE PTR ds:[esi]
  4079d2:	mov    ds:0xc7182d95,al
  4079d7:	pop    esp
  4079d8:	push   ebp
  4079d9:	loopne 0x4079f5
  4079db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079dc:	or     eax,0x99ad4acb
  4079e1:	sub    dl,ah
  4079e3:	sub    eax,0xbe305827
  4079e8:	sar    BYTE PTR [edx+0xc9316f],1
  4079ee:	cmp    DWORD PTR [edi-0x4d],ebp
  4079f1:	aam    0x78
  4079f3:	and    edx,esp
  4079f5:	shr    BYTE PTR [edi+ecx*2+0x69a8b93b],0x84
  4079fd:	arpl   bx,bp
  4079ff:	mov    DWORD PTR [edx-0x56],edx
  407a02:	add    BYTE PTR [eax-0x11],ah
  407a05:	outs   dx,DWORD PTR ds:[esi]
  407a06:	fst    QWORD PTR [edx]
  407a08:	xor    eax,0x911808c7
  407a0d:	mov    dh,0x54
  407a0f:	(bad)  
  407a10:	fist   WORD PTR ds:0x205aa09e
  407a16:	mov    edi,DWORD PTR [edx+0x7dedb1ad]
  407a1c:	in     al,0x7b
  407a1e:	mov    edi,eax
  407a20:	inc    ecx
  407a21:	push   es
  407a22:	pop    es
  407a23:	jg     0x4079fc
  407a25:	int3   
  407a26:	int3   
  407a27:	mov    edi,0x7e9a80cf
  407a2c:	mov    esi,DWORD PTR [ecx]
  407a2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a2f:	mov    esi,0x87bf822
  407a34:	fs xor eax,0xff9a2523
  407a3a:	sbb    ecx,DWORD PTR [esi]
  407a3c:	jbe    0x4079ff
  407a3e:	in     eax,0xb1
  407a40:	mov    cl,0x27
  407a42:	pop    es
  407a43:	adc    al,0x49
  407a45:	sbb    al,0x49
  407a47:	adc    DWORD PTR [ecx+0x1d],0x2e
  407a4b:	ins    DWORD PTR es:[edi],dx
  407a4c:	xlat   BYTE PTR ds:[ebx]
  407a4d:	push   ebp
  407a4e:	popf   
  407a4f:	mov    ebx,DWORD PTR ds:0x63a44038
  407a55:	(bad)  
  407a56:	aaa    
  407a57:	fwait
  407a58:	hlt    
  407a59:	rol    BYTE PTR [ecx],cl
  407a5b:	popf   
  407a5c:	aam    0x48
  407a5e:	inc    ecx
  407a5f:	into   
  407a60:	inc    edx
  407a61:	sub    al,0x31
  407a63:	sti    
  407a64:	cs inc edi
  407a66:	cld    
  407a67:	leave  
  407a68:	add    BYTE PTR [ebp-0x7938292b],bh
  407a6e:	lds    esp,FWORD PTR [edx+edx*8]
  407a71:	and    dh,bl
  407a73:	enter  0x18be,0x2a
  407a77:	ins    DWORD PTR es:[edi],dx
  407a78:	mov    bl,0xee
  407a7a:	loop   0x407ab1
  407a7c:	loopne 0x407a5b
  407a7e:	pushf  
  407a7f:	pop    esi
  407a80:	sbb    ebp,esp
  407a82:	scas   al,BYTE PTR es:[edi]
  407a83:	mov    WORD PTR ds:0x7e607a38,fs
  407a89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a8a:	call   0x5b2c8575
  407a8f:	test   edi,edx
  407a91:	mov    ebp,0x543568e0
  407a96:	jp     0x407a80
  407a98:	and    al,0x66
  407a9a:	retf   0x20fb
  407a9d:	loop   0x407a6d
  407a9f:	and    esi,0xf85ece6c
  407aa5:	emms   
  407aa7:	inc    eax
  407aa8:	xchg   esi,eax
  407aa9:	mov    esi,0x8db05f3
  407aae:	adc    al,0x8
  407ab0:	inc    ecx
  407ab1:	jne    0x407af5
  407ab3:	xor    BYTE PTR [esi+0x2d461937],0x2a
  407aba:	imul   ecx,ebp,0xb089a38
  407ac0:	into   
  407ac1:	sbb    dh,BYTE PTR [ecx-0x38]
  407ac4:	imul   edi,DWORD PTR [edx-0x53f87123],0x30
  407acb:	xchg   esp,eax
  407acc:	test   eax,0x190bc67f
  407ad1:	popf   
  407ad2:	xor    edi,ecx
  407ad4:	sub    al,0x86
  407ad6:	fs push esi
  407ad8:	popf   
  407ad9:	ins    BYTE PTR es:[edi],dx
  407ada:	xor    ecx,DWORD PTR [ebp-0xd]
  407add:	and    bh,BYTE PTR [esi+0x6d]
  407ae0:	lods   eax,DWORD PTR ds:[esi]
  407ae1:	dec    edx
  407ae2:	fidivr DWORD PTR [ecx+0x77]
  407ae5:	je     0x407aa8
  407ae7:	cld    
  407ae8:	iret   
  407ae9:	pop    ebx
  407aea:	pop    esp
  407aeb:	rol    BYTE PTR [ecx-0x2540ef2e],0x83
  407af2:	or     al,0x3f
  407af4:	dec    eax
  407af5:	addr16 and al,0x7d
  407af8:	popa   
  407af9:	sbb    al,0xcf
  407afb:	inc    eax
  407afc:	xchg   ebp,eax
  407afd:	std    
  407afe:	pop    esi
  407aff:	mul    ebp
  407b01:	in     eax,0x3f
  407b03:	neg    ah
  407b05:	lock in al,0x11
  407b08:	pop    edi
  407b09:	ficomp DWORD PTR [esi-0x1789cc5b]
  407b0f:	mov    WORD PTR [edi],fs
  407b11:	mov    al,ds:0x9027bde1
  407b16:	dec    ecx
  407b17:	jnp    0x407ae7
  407b19:	or     esi,0x17
  407b1c:	sar    DWORD PTR [ecx-0x56119a52],cl
  407b22:	mov    BYTE PTR [ebp-0x6a],0x44
  407b26:	mov    bl,0xe3
  407b28:	cli    
  407b29:	aas    
  407b2a:	or     BYTE PTR [ecx+edi*1],ah
  407b2d:	and    eax,0xa5efd7d8
  407b32:	pop    edx
  407b33:	adc    eax,0xb67e1f42
  407b38:	outs   dx,DWORD PTR ds:[esi]
  407b39:	lea    si,[eax-0x78d92c7e]
  407b40:	outs   dx,BYTE PTR ds:[esi]
  407b41:	dec    ecx
  407b42:	cli    
  407b43:	out    dx,eax
  407b44:	mov    ecx,0x4ec316c5
  407b49:	add    DWORD PTR [edi-0x538f930b],eax
  407b4f:	bound  esp,QWORD PTR [edi+ecx*8-0x23]
  407b53:	and    ah,ch
  407b55:	retf   
  407b56:	loope  0x407b7f
  407b58:	add    bh,ch
  407b5a:	into   
  407b5b:	mov    eax,ds:0xbba25bb1
  407b60:	mov    bh,0x17
  407b62:	out    dx,eax
  407b63:	mov    eax,0xa0f78a7d
  407b68:	(bad)  
  407b69:	ret    
  407b6a:	inc    ebx
  407b6b:	or     edi,DWORD PTR ds:0xca9abac8
  407b71:	lock (bad) 
  407b73:	repnz pop ds
  407b75:	arpl   WORD PTR [eax],di
  407b77:	(bad)  [ebp-0x1]
  407b7a:	sub    al,0x23
  407b7c:	ds pop ebx
  407b7e:	mov    eax,0x7f6aa4d8
  407b83:	push   0x73
  407b85:	test   eax,0x9d5afb5f
  407b8a:	ss add al,bh
  407b8d:	ret    0x1dae
  407b90:	or     eax,0x612c07e5
  407b95:	ret    
  407b96:	mov    esi,cs
  407b98:	loope  0x407b3b
  407b9a:	mov    eax,0x9fa04a04
  407b9f:	dec    ecx
  407ba0:	(bad)  
  407ba1:	aam    0xb2
  407ba3:	sub    eax,0xb8555c57
  407ba8:	and    eax,DWORD PTR [ecx]
  407baa:	push   cs
  407bab:	pop    edx
  407bac:	add    DWORD PTR ds:0x46927231,edi
  407bb2:	push   esp
  407bb3:	jg     0x407b6d
  407bb5:	adc    esp,DWORD PTR [si+0x70de]
  407bba:	sub    BYTE PTR [ebx-0x3d],ah
  407bbd:	or     al,0x79
  407bbf:	arpl   WORD PTR [eax+0x53],bp
  407bc2:	rol    BYTE PTR [edi],0x52
  407bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bc6:	jmp    0xd0b6:0xb0fd6526
  407bcd:	pop    ebx
  407bce:	mov    dl,0xfa
  407bd0:	loope  0x407bff
  407bd2:	out    dx,eax
  407bd3:	sbb    eax,0x96a99d58
  407bd8:	or     eax,0x58f85886
  407bdd:	inc    ecx
  407bde:	clc    
  407bdf:	add    DWORD PTR [ecx+0x55],0x39
  407be3:	jb     0x407bce
  407be5:	fucom  st(4)
  407be7:	sti    
  407be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bea:	shr    BYTE PTR [ebx+0x180a5502],cl
  407bf0:	shl    bl,0x77
  407bf3:	test   DWORD PTR [ecx+0x71],0x494e4b8c
  407bfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bfb:	cdq    
  407bfc:	neg    BYTE PTR [ebx+0x41a9f303]
  407c02:	add    ebx,DWORD PTR [edx+0x3358741d]
  407c08:	fcmovnbe st,st(3)
  407c0a:	imul   BYTE PTR [ebp-0x65]
  407c0d:	es pusha 
  407c0f:	repz push 0x5fe5ba83
  407c15:	xchg   al,dl
  407c17:	scas   eax,DWORD PTR es:[edi]
  407c18:	sub    eax,0xfd816b27
  407c1d:	xor    BYTE PTR [edi-0x5],dl
  407c20:	ret    
  407c21:	sbb    eax,0x38d2ce64
  407c26:	mov    dh,0x86
  407c28:	mov    dh,0xbf
  407c2a:	imul   ecx,DWORD PTR [edi-0x5fe19c5f],0xb4be30de
  407c34:	sbb    DWORD PTR [ecx],0x2319a8e9
  407c3a:	fldcw  WORD PTR [esi+0x2f]
  407c3d:	push   eax
  407c3e:	dec    al
  407c40:	and    BYTE PTR [esi-0x64f763e2],cl
  407c46:	pop    esi
  407c47:	scas   al,BYTE PTR es:[edi]
  407c48:	loop   0x407c8e
  407c4a:	sbb    DWORD PTR [ecx+0x544fc24d],edi
  407c50:	jge    0x407c1c
  407c52:	jg     0x407cc8
  407c54:	pop    ss
  407c55:	lods   eax,DWORD PTR ds:[esi]
  407c56:	push   ecx
  407c57:	(bad)
  407c5a:	shl    DWORD PTR [ebx+ebp*1+0x656aab69],cl
  407c61:	loope  0x407c9c
  407c63:	xchg   ebx,eax
  407c64:	push   esi
  407c65:	mov    ebp,0x8ed3c932
  407c6a:	js     0x407cca
  407c6c:	outs   dx,BYTE PTR ds:[esi]
  407c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c6e:	ficom  WORD PTR [esi-0x1d5717d3]
  407c74:	(bad)  
  407c76:	fmul   st(2),st
  407c78:	stc    
  407c79:	jns    0x407ca5
  407c7b:	pusha  
  407c7c:	sbb    BYTE PTR [edx-0x63ba1161],cl
  407c82:	mov    bl,0x3
  407c84:	stos   DWORD PTR es:[edi],eax
  407c85:	ja     0x407cc1
  407c87:	sbb    DWORD PTR [ebx-0x48],ecx
  407c8a:	test   bl,dh
  407c8c:	test   BYTE PTR [edi],bh
  407c8e:	pop    ebp
  407c8f:	in     al,0xe4
  407c91:	pop    edi
  407c92:	mov    dh,0xb4
  407c94:	pop    ds
  407c95:	sub    bl,BYTE PTR [esi-0x39]
  407c98:	mov    DWORD PTR [edx+0x2878c6d1],ebx
  407c9e:	fisubr DWORD PTR [ecx]
  407ca0:	pop    ss
  407ca1:	xchg   ecx,eax
  407ca2:	out    0xe0,eax
  407ca4:	dec    ebx
  407ca5:	jno    0x407cda
  407ca7:	stos   BYTE PTR es:[edi],al
  407ca8:	push   ss
  407ca9:	cmp    cl,BYTE PTR [ebp+0x73]
  407cac:	xchg   edx,eax
  407cad:	fdiv   QWORD PTR [esi-0x7f]
  407cb0:	fst    QWORD PTR [edx]
  407cb2:	loop   0x407c72
  407cb4:	mov    ch,0x91
  407cb6:	mov    esp,0x8c796d3b
  407cbb:	ret    
  407cbc:	pop    es
  407cbd:	jmp    0x2a39:0x594c32a6
  407cc4:	push   0xbb7d31c1
  407cc9:	cmc    
  407cca:	mov    esp,0xae1e8423
  407ccf:	jle    0x407d14
  407cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cd2:	sub    eax,0x6c0e06f3
  407cd7:	sub    al,0xd0
  407cd9:	push   ds
  407cda:	xchg   BYTE PTR [edi+0x0],ch
  407cdd:	sub    BYTE PTR [ecx+0x37],0x3a
  407ce1:	sbb    eax,0x1154d481
  407ce6:	lahf   
  407ce7:	mov    cs,ebx
  407ce9:	mov    bh,0x69
  407ceb:	dec    esp
  407cec:	inc    esi
  407ced:	mov    cl,0xa1
  407cef:	push   ds
  407cf0:	sbb    DWORD PTR [esi-0x12],eax
  407cf3:	and    eax,0xf208d92a
  407cf8:	fnstsw WORD PTR [eax+ebx*4]
  407cfb:	or     eax,DWORD PTR ds:0x72c0beca
  407d01:	ror    DWORD PTR [ebx],1
  407d03:	je     0x407cc4
  407d05:	test   BYTE PTR [eax-0x5b],al
  407d08:	jg     0x407cf5
  407d0a:	popf   
  407d0b:	(bad)  [ecx]
  407d0d:	or     esp,DWORD PTR [ebx+ebx*4-0x6c]
  407d11:	es aad 0x82
  407d14:	test   al,0x20
  407d16:	icebp  
  407d17:	(bad)  
  407d18:	daa    
  407d19:	sub    DWORD PTR [ebp-0x1f],eax
  407d1c:	and    DWORD PTR [esi],esp
  407d1e:	test   eax,0x9aaa6fd3
  407d23:	cs ds es sub ah,bl
  407d28:	add    dl,BYTE PTR [edi]
  407d2a:	pop    ds
  407d2b:	jl     0x407cf2
  407d2d:	sub    bl,bh
  407d2f:	xor    edi,DWORD PTR [edx+0x57]
  407d32:	add    ebp,DWORD PTR [edx-0x2825e1d7]
  407d38:	mov    al,BYTE PTR [esi-0xf38f48b]
  407d3e:	push   0xfffffffb
  407d40:	dec    edi
  407d41:	cdq    
  407d42:	inc    ebp
  407d43:	sub    al,0x62
  407d45:	ficom  WORD PTR [esi-0x387cf570]
  407d4b:	ds jae 0x407d6e
  407d4e:	retf   0xc266
  407d51:	sar    BYTE PTR [edi+0x224588f9],0xd4
  407d58:	in     al,0xa1
  407d5a:	aam    0xe0
  407d5c:	pop    eax
  407d5d:	jmp    0x407d23
  407d5f:	std    
  407d60:	cs fcom QWORD PTR ss:[edi]
  407d64:	icebp  
  407d65:	ins    DWORD PTR es:[edi],dx
  407d66:	imul   BYTE PTR [esp+edx*2]
  407d69:	sub    dl,dh
  407d6b:	mov    eax,0x9171febd
  407d70:	mov    ch,0xbf
  407d72:	adc    al,0x3
  407d74:	jns    0x407cf8
  407d76:	jl     0x407d61
  407d78:	xchg   edx,eax
  407d79:	(bad)  
  407d7a:	in     al,0x4
  407d7c:	and    BYTE PTR [ecx+0x43d4c85a],al
  407d82:	sbb    al,al
  407d84:	and    al,0xb8
  407d86:	cmp    dh,BYTE PTR [esi+0x6d]
  407d89:	arpl   cx,si
  407d8b:	dec    ebp
  407d8c:	mov    esi,fs
  407d8e:	test   eax,0x873245db
  407d93:	fst    DWORD PTR [esi]
  407d95:	push   esi
  407d96:	pop    ebx
  407d97:	inc    edi
  407d98:	sub    dl,0xfe
  407d9b:	call   0xef8a:0x7d8cf3a0
  407da2:	push   ebp
  407da3:	or     ecx,0x62ec2801
  407da9:	loopne 0x407d59
  407dab:	cmc    
  407dac:	add    DWORD PTR [edx],esp
  407dae:	enter  0x9fd2,0xba
  407db2:	(bad)  
  407db3:	and    DWORD PTR [esi-0x6d],0x4e
  407db7:	or     BYTE PTR [ecx],0xf6
  407dba:	out    dx,al
  407dbb:	sub    al,0x3c
  407dbd:	fnsave [ebx+0x65]
  407dc0:	jb     0x407dd4
  407dc2:	aaa    
  407dc3:	fidivr DWORD PTR ds:0x338eaaaf
  407dc9:	inc    edx
  407dca:	call   edx
  407dcc:	push   ds
  407dcd:	repnz pop ecx
  407dcf:	xor    DWORD PTR [esi+0x3aecac28],ebx
  407dd5:	mov    edi,DWORD PTR [esi-0x1a321139]
  407ddb:	pop    ebp
  407ddc:	adc    BYTE PTR [ecx+ecx*1-0x45],0x2e
  407de1:	or     dl,dl
  407de3:	jge    0x407e21
  407de5:	lds    eax,FWORD PTR [ebx+0x64]
  407de8:	xor    cl,BYTE PTR [ebx-0x12e31a1f]
  407dee:	je     0x407da1
  407df0:	(bad)  
  407df1:	push   cs
  407df2:	imul   edx,ecx,0xd1822dcd
  407df8:	(bad)  
  407df9:	jae    0x407dc5
  407dfb:	sub    bh,BYTE PTR [edx+0x5c616b59]
  407e01:	xchg   edi,eax
  407e02:	dec    edx
  407e03:	jnp    0x407e23
  407e05:	ins    BYTE PTR es:[edi],dx
  407e06:	repnz shr DWORD PTR [edx+edx*2],cl
  407e0a:	ja     0x407dab
  407e0c:	gs pop cx
  407e0f:	inc    ebx
  407e10:	aam    0x8c
  407e12:	xchg   DWORD PTR gs:[eax+0x7b910a3c],esi
  407e19:	test   BYTE PTR [esi],dh
  407e1b:	jmp    0x2f0c:0xaff63429
  407e22:	jl     0x407e98
  407e24:	xchg   edx,eax
  407e25:	jecxz  0x407e54
  407e27:	cdq    
  407e28:	xchg   edx,eax
  407e29:	mov    ecx,0xa892e64b
  407e2e:	fmul   st(5),st
  407e30:	(bad)  
  407e31:	or     DWORD PTR [ebp+eiz*2+0x10],esp
  407e35:	mov    ecx,0xc03367c8
  407e3a:	sti    
  407e3b:	hlt    
  407e3c:	push   0x231f6e18
  407e41:	sub    BYTE PTR [esi-0x5cf4c3eb],0x6c
  407e48:	stos   DWORD PTR es:[edi],eax
  407e49:	call   0x4bc0f7a1
  407e4e:	aam    0xf4
  407e50:	jg     0x407df6
  407e52:	push   edx
  407e53:	in     al,0x94
  407e55:	and    eax,0x2d6f0df1
  407e5a:	xchg   BYTE PTR ds:0x21531fa1,al
  407e60:	(bad)  
  407e61:	sbb    eax,0xa33609dc
  407e66:	call   0xd616:0x285409b5
  407e6d:	scas   eax,DWORD PTR es:[edi]
  407e6e:	stos   DWORD PTR es:[edi],eax
  407e6f:	push   ebx
  407e70:	fst    QWORD PTR [ecx+0x3ac2a6c9]
  407e76:	neg    DWORD PTR [esi-0x4]
  407e79:	call   0x44a0:0x60aa25f
  407e80:	mov    ecx,0x796c7c00
  407e85:	mov    edi,0xccb80b5b
  407e8a:	shl    BYTE PTR [esi],cl
  407e8c:	je     0x407e89
  407e8e:	pop    ds
  407e8f:	fucom  st(5)
  407e91:	xchg   edx,eax
  407e92:	inc    edx
  407e93:	xor    ch,ah
  407e95:	stos   DWORD PTR es:[edi],eax
  407e96:	mov    fs,WORD PTR [edi-0x34]
  407e99:	out    0x35,al
  407e9b:	cmp    eax,0x873cc90e
  407ea0:	mov    edx,0xf81df85b
  407ea5:	retf   0x7338
  407ea8:	jg     0x407f08
  407eaa:	push   ds
  407eab:	ror    esi,1
  407ead:	xchg   ebx,eax
  407eae:	sub    ebp,DWORD PTR [edi+ecx*1-0x6f]
  407eb2:	inc    esp
  407eb3:	cmp    al,0x32
  407eb5:	(bad)  
  407eb6:	cmp    esi,DWORD PTR [esi-0x3afdd2e7]
  407ebc:	(bad)  
  407ebe:	add    DWORD PTR [esi+0x3cb9261b],esp
  407ec4:	fisub  WORD PTR [edx-0x1bf085e8]
  407eca:	pop    edx
  407ecb:	shl    DWORD PTR [ebx-0x41642430],0xa8
  407ed2:	pop    ecx
  407ed3:	pop    ebp
  407ed4:	xchg   ecx,eax
  407ed5:	mov    esp,DWORD PTR [eax-0x7a]
  407ed8:	aad    0x1e
  407eda:	xchg   ebp,eax
  407edb:	cmp    ebp,DWORD PTR [esi-0x5dd08d75]
  407ee1:	sub    DWORD PTR [eax+0x23a055ac],0x541ed740
  407eeb:	stc    
  407eec:	stos   BYTE PTR es:[edi],al
  407eed:	push   0x982bc286
  407ef2:	les    ecx,FWORD PTR [ecx]
  407ef4:	ret    
  407ef5:	mov    ah,0xe2
  407ef7:	xchg   esi,edi
  407ef9:	sbb    dh,BYTE PTR [ebx]
  407efb:	stos   BYTE PTR es:[edi],al
  407efc:	adc    eax,0xff5c5135
  407f01:	in     eax,0x8b
  407f03:	and    dl,cl
  407f05:	stc    
  407f06:	inc    edx
  407f07:	sub    BYTE PTR [edi-0x67],ch
  407f0a:	sbb    eax,DWORD PTR [ecx-0x144aa872]
  407f10:	inc    ebx
  407f11:	mov    DWORD PTR [eax-0x3b],edi
  407f14:	in     al,0xa1
  407f16:	fidivr WORD PTR [ecx-0x3bd2ce37]
  407f1c:	cmc    
  407f1d:	mov    ch,al
  407f1f:	fldcw  WORD PTR [edx-0x54]
  407f22:	sub    esp,DWORD PTR [ebx+0x28694c3e]
  407f28:	adc    dl,BYTE PTR [ecx+eax*4]
  407f2b:	sbb    eax,0xcf0726cf
  407f30:	scas   al,BYTE PTR es:[edi]
  407f31:	fdiv   DWORD PTR [esi-0x2149f226]
  407f37:	(bad)  
  407f38:	fcom   DWORD PTR ds:0x5b6ae46a
  407f3e:	ds pushf 
  407f40:	clc    
  407f41:	xchg   ebp,eax
  407f42:	dec    esp
  407f43:	or     eax,0xb0728e51
  407f48:	rcr    BYTE PTR [edx-0x3c],0xa2
  407f4c:	sub    esi,DWORD PTR [eax+0x5d5ab9b4]
  407f52:	imul   ecx,DWORD PTR [ecx+0x3d],0x26
  407f56:	dec    esp
  407f57:	sbb    BYTE PTR [ecx-0x7c],0xcc
  407f5b:	ret    
  407f5c:	inc    eax
  407f5d:	fst    DWORD PTR [ebx+edx*2+0xe]
  407f61:	lea    ebx,[esi]
  407f63:	xlat   BYTE PTR ds:[ebx]
  407f64:	(bad)  
  407f65:	cmp    edx,DWORD PTR [edx-0x48face6b]
  407f6b:	xor    BYTE PTR [ebp-0x4],0x6b
  407f6f:	pop    ebp
  407f70:	out    0xb3,eax
  407f72:	and    eax,0x899b4ee7
  407f77:	jg     0x407fac
  407f79:	inc    esi
  407f7a:	xor    bh,bl
  407f7c:	push   eax
  407f7d:	cmp    eax,0xffa67b13
  407f82:	(bad)  
  407f83:	sbb    eax,0x726a11c5
  407f88:	sbb    bl,BYTE PTR [ecx]
  407f8a:	jbe    0x407ff1
  407f8c:	xchg   edi,eax
  407f8d:	add    DWORD PTR ds:0x74e2424c,esi
  407f93:	xchg   edx,eax
  407f94:	or     DWORD PTR ds:0x68d3d557,edx
  407f9a:	jl     0x407ffc
  407f9c:	jno    0x407f88
  407f9e:	setno  cl
  407fa1:	repnz xchg edx,eax
  407fa3:	sub    al,0x6d
  407fa5:	outs   dx,DWORD PTR ds:[esi]
  407fa6:	push   0xffffffab
  407fa8:	mov    bl,0x4d
  407faa:	mov    gs,WORD PTR ds:0x41eb81eb
  407fb0:	sub    edx,ebx
  407fb2:	mov    edx,fs
  407fb4:	sbb    dh,al
  407fb6:	mov    edi,0x9a7bbc15
  407fbb:	jg     0x40801a
  407fbd:	daa    
  407fbe:	punpckldq mm3,DWORD PTR [ebx+0x3aab0f3f]
  407fc5:	mov    al,0xdd
  407fc7:	fld    TBYTE PTR [edx+0x6b3630fb]
  407fcd:	fiadd  WORD PTR [esi+0x7379630]
  407fd3:	fcomip st,st(1)
  407fd5:	aam    0x31
  407fd7:	nop
  407fd8:	xchg   DWORD PTR [edx],eax
  407fda:	pop    ss
  407fdb:	(bad)  
  407fdc:	out    0xbd,al
  407fde:	daa    
  407fdf:	mov    ds:0x39af465e,eax
  407fe4:	in     eax,dx
  407fe5:	dec    edx
  407fe6:	pop    ds
  407fe7:	imul   ebx,DWORD PTR [ecx-0x4b],0xffffffad
  407feb:	mov    edx,ecx
  407fed:	lock arpl WORD PTR [ebx-0x27c8bb50],bp
  407ff4:	mov    esi,0x5a2c001b
  407ff9:	xchg   ebx,eax
  407ffa:	stos   DWORD PTR es:[edi],eax
  407ffb:	frstor [esi+ebx*4-0xc4bc98f]
  408002:	sbb    dl,bh
  408004:	icebp  
  408005:	adc    DWORD PTR [ebp-0x24],esp
  408008:	mov    al,ds:0xb3346701
  40800d:	push   ebx
  40800e:	bound  esp,QWORD PTR [edi-0x33]
  408011:	fbstp  TBYTE PTR [edi+0x56]
  408014:	and    eax,0xbb4b8630
  408019:	xchg   ecx,eax
  40801a:	jg     0x407fed
  40801c:	jne    0x407fd1
  40801e:	mov    dl,BYTE PTR [eax+0x32]
  408021:	push   0x3c0fcea2
  408026:	xlat   BYTE PTR ds:[ebx]
  408027:	add    eax,DWORD PTR ds:0x16ec175e
  40802d:	loope  0x408008
  40802f:	(bad)
  408033:	jg     0x407fef
  408035:	pop    es
  408036:	mov    bh,0x5b
  408038:	(bad)  
  40803a:	dec    edx
  40803b:	adc    bl,dh
  40803d:	jns    0x407fe9
  40803f:	(bad)  
  408040:	popf   
  408041:	daa    
  408042:	push   edx
  408043:	mov    ecx,0xefcf2d4d
  408048:	sub    BYTE PTR [ebx],0xc8
  40804b:	mov    fs,WORD PTR [esi]
  40804d:	inc    esp
  40804e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40804f:	xchg   edi,eax
  408050:	dec    eax
  408051:	inc    edi
  408052:	jmp    0x40808d
  408054:	add    al,0xae
  408056:	dec    edi
  408057:	(bad)  
  408058:	(bad)  
  408059:	xor    ebp,DWORD PTR [eax]
  40805b:	cmp    eax,0xcfbf0a3d
  408060:	adc    eax,0x8bd11215
  408065:	mov    ebp,0x6b5e15f6
  40806a:	sahf   
  40806b:	xchg   ecx,eax
  40806c:	mov    dh,0x6f
  40806e:	popa   
  40806f:	ffree  st(4)
  408071:	inc    esi
  408072:	call   FWORD PTR [edx+eax*2+0x46]
  408076:	bnd jmp 0x6df7acb
  40807c:	aaa    
  40807d:	dec    ebx
  40807e:	lahf   
  40807f:	jo     0x4080af
  408081:	pop    ss
  408082:	or     eax,0xe4ba1665
  408087:	add    ch,BYTE PTR ds:0xca3aa80
  40808d:	out    dx,al
  40808e:	bound  ebp,QWORD PTR [eax-0x80]
  408091:	xchg   edx,eax
  408092:	lock inc edi
  408094:	pop    ebp
  408095:	loope  0x4080cf
  408097:	mov    ebp,0x6a4d9d2b
  40809c:	add    ah,BYTE PTR [edx-0x47]
  40809f:	das    
  4080a0:	data16 and bl,dl
  4080a3:	pminsw mm2,QWORD PTR [ebx+edi*4-0x3f80eda5]
  4080ab:	(bad)  
  4080ac:	repz popa 
  4080ae:	ret    
  4080af:	aas    
  4080b0:	inc    esi
  4080b1:	leave  
  4080b2:	push   0xffffff86
  4080b4:	adc    al,0xef
  4080b6:	xor    ah,ch
  4080b8:	call   0x3861:0x501bee0c
  4080bf:	int    0xd0
  4080c1:	test   eax,0xf2c902f9
  4080c6:	xchg   edi,eax
  4080c7:	xchg   bh,ah
  4080c9:	push   ss
  4080ca:	mov    esp,0xc8389d7f
  4080cf:	push   esi
  4080d0:	sub    al,0x5a
  4080d2:	shl    BYTE PTR [ebx],0xf1
  4080d5:	dec    edx
  4080d6:	lds    ebx,FWORD PTR [ebp-0x59]
  4080d9:	imul   si,WORD PTR [edi-0x1a],0x69ec
  4080df:	test   DWORD PTR [edx+0x764ffaf2],ebp
  4080e5:	pop    ebx
  4080e6:	dec    ecx
  4080e7:	mov    eax,ds:0x4ef639ed
  4080ec:	mov    ebp,0xddeb8fd1
  4080f1:	jmp    0x9cb30773
  4080f6:	clc    
  4080f7:	icebp  
  4080f8:	icebp  
  4080f9:	scas   eax,DWORD PTR es:[edi]
  4080fa:	and    eax,edi
  4080fc:	jge    0x4080d4
  4080fe:	mov    WORD PTR [esi],?
  408100:	aaa    
  408101:	lock and eax,0xbd6be752
  408107:	pop    es
  408108:	imul   ebx,DWORD PTR [ebx+eax*1+0x753e51df],0x72
  408110:	xchg   esi,eax
  408111:	stc    
  408112:	cs call 0xa81:0xb4c0cfd4
  40811a:	daa    
  40811b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40811c:	add    eax,0x2931aacd
  408121:	arpl   WORD PTR [ecx+0x32],ax
  408124:	ret    
  408125:	push   ebx
  408126:	out    0xd,eax
  408128:	push   es
  408129:	jg     0x408148
  40812b:	fld    DWORD PTR [eax-0x33dd082a]
  408131:	sbb    eax,0x15ec129a
  408136:	fnsave [eax]
  408138:	jnp    0x4080e0
  40813a:	inc    edx
  40813b:	ss jae 0x4080fe
  40813e:	pop    esi
  40813f:	popf   
  408140:	rcr    DWORD PTR [edi-0xdd43ead],cl
  408146:	imul   ebp,DWORD PTR [edi+0x64d6cc48],0x8f1768d3
  408150:	std    
  408151:	jmp    0xd6bb:0xa118ea50
  408158:	clc    
  408159:	(bad)  
  40815a:	pop    ss
  40815b:	inc    ecx
  40815c:	inc    eax
  40815d:	jmp    0x44285151
  408162:	loope  0x40814b
  408164:	mov    gs,WORD PTR [ebp+0x4d]
  408167:	jb     0x408113
  408169:	aad    0xde
  40816b:	jg     0x408120
  40816d:	cmp    al,0x97
  40816f:	cmc    
  408170:	js     0x4081ac
  408172:	test   BYTE PTR [esi-0x58],cl
  408175:	mov    eax,ds:0x5d02854
  40817a:	jecxz  0x408112
  40817c:	xchg   ebp,eax
  40817d:	call   0xa3fe:0x1f6a8934
  408184:	lods   eax,DWORD PTR ds:[esi]
  408185:	loope  0x4081d8
  408187:	pusha  
  408188:	aad    0xca
  40818a:	lock cld 
  40818c:	mov    edx,0xc9b6e4d1
  408191:	ds hlt 
  408193:	dec    ebx
  408194:	and    eax,0x1d8b70aa
  408199:	scas   eax,DWORD PTR es:[edi]
  40819a:	leave  
  40819b:	push   edx
  40819c:	adc    eax,0x6774c745
  4081a1:	inc    edx
  4081a2:	add    BYTE PTR [ecx],0x15
  4081a5:	mov    ds:0x2b095f3f,eax
  4081aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081ab:	xchg   ecx,eax
  4081ac:	repnz and eax,0x8361248c
  4081b2:	std    
  4081b3:	fwait
  4081b4:	ror    BYTE PTR [edx],1
  4081b6:	mov    dl,BYTE PTR [edx]
  4081b8:	stos   BYTE PTR es:[edi],al
  4081b9:	scas   al,BYTE PTR es:[edi]
  4081ba:	pusha  
  4081bb:	xchg   esi,eax
  4081bc:	repz mov eax,ds:0x7a9270c6
  4081c2:	mov    ds:0xd50136dc,al
  4081c7:	lock mov ch,0xda
  4081ca:	stos   DWORD PTR es:[edi],eax
  4081cb:	jae    0x4081ca
  4081cd:	add    BYTE PTR [esi+0x3f],cl
  4081d0:	xchg   esi,eax
  4081d1:	or     eax,0xcaaa3866
  4081d6:	leave  
  4081d7:	jle    0x4081e7
  4081d9:	popa   
  4081da:	mov    edi,0xd3202ed9
  4081df:	ret    
  4081e0:	punpckhbw mm7,QWORD PTR [edx+0x1ae1518]
  4081e7:	lods   al,BYTE PTR ds:[esi]
  4081e8:	dec    edi
  4081e9:	mov    esi,DWORD PTR [ecx]
  4081eb:	mov    al,ds:0x15dd1f43
  4081f0:	cwde   
  4081f1:	outs   dx,BYTE PTR ds:[esi]
  4081f2:	and    eax,0xe1800591
  4081f7:	jno    0x408213
  4081f9:	inc    esp
  4081fa:	iret   
  4081fb:	ja     0x40821d
  4081fd:	or     al,BYTE PTR [esi]
  4081ff:	or     eax,0x55885fe5
  408204:	mov    ecx,0xeaf2520f
  408209:	retf   
  40820a:	std    
  40820b:	xchg   ecx,eax
  40820c:	call   0x6909:0xcecc13cc
  408213:	mov    al,0x3e
  408215:	jne    0x4081b9
  408217:	add    bl,BYTE PTR ds:0xc88a46a6
  40821d:	bound  esi,QWORD PTR [ebx+ecx*1]
  408220:	mov    ds:0xe3a3f5a3,eax
  408225:	add    dh,BYTE PTR [eax-0x40470961]
  40822b:	xchg   edi,eax
  40822c:	sub    al,0xb6
  40822e:	jle    0x4081fa
  408230:	jg     0x408276
  408232:	add    BYTE PTR [ecx],0xf7
  408235:	jg     0x4081e1
  408237:	loopne 0x408236
  408239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40823a:	cmp    bh,BYTE PTR [ebx]
  40823c:	loopne 0x4082ab
  40823e:	mov    ch,0x4d
  408240:	or     al,BYTE PTR [eax-0x33ac750]
  408246:	aas    
  408247:	cmp    eax,0x3557f1ed
  40824c:	outs   dx,DWORD PTR ds:[esi]
  40824d:	and    edi,ecx
  40824f:	call   0xff7c08ff
  408254:	lods   eax,DWORD PTR ds:[esi]
  408255:	and    bl,BYTE PTR [edx]
  408257:	cld    
  408258:	dec    ebx
  408259:	xor    al,BYTE PTR gs:[ebp+0x468548ac]
  408260:	mov    al,0xbc
  408262:	sti    
  408263:	sbb    al,0x9a
  408265:	jnp    0x4082d4
  408267:	not    BYTE PTR [edx+0x4c]
  40826a:	xor    eax,0x8ebaf355
  40826f:	aaa    
  408270:	add    BYTE PTR [ebp+esi*4+0x3f],0x73
  408275:	loopne 0x408260
  408277:	cli    
  408278:	add    al,0x7e
  40827a:	(bad)  
  40827b:	dec    ebx
  40827c:	cdq    
  40827d:	sbb    cx,WORD PTR [edi]
  408280:	cdq    
  408281:	out    0xaa,eax
  408283:	inc    ebp
  408284:	pop    edi
  408285:	data16 mov bl,0xa6
  408288:	adc    al,0xb
  40828a:	add    eax,0x328cde05
  40828f:	xchg   ecx,eax
  408290:	jg     0x40828c
  408292:	sub    DWORD PTR [ecx+0x71],eax
  408295:	add    al,0x6a
  408297:	fyl2xp1 
  408299:	jae    0x408279
  40829b:	adc    DWORD PTR [edx-0x13],edx
  40829e:	pop    esp
  40829f:	test   BYTE PTR [ebx+esi*8],0xf2
  4082a3:	test   BYTE PTR [ecx+0x12aff22d],ah
  4082a9:	rcl    BYTE PTR [ecx+0x54],cl
  4082ac:	mov    esp,0xe9e4cfff
  4082b1:	sub    BYTE PTR [ebp+0x2b0cb1a8],0xe4
  4082b8:	cld    
  4082b9:	cli    
  4082ba:	cmp    eax,0x73a79b2
  4082bf:	or     eax,0x859a029e
  4082c4:	inc    eax
  4082c5:	mov    eax,ds:0xd82c02a8
  4082ca:	or     dl,BYTE PTR [ecx-0x30]
  4082cd:	jg     0x408349
  4082cf:	jae    0x408276
  4082d1:	test   eax,0x9b6a9afc
  4082d6:	sbb    BYTE PTR [ebx-0x51],bh
  4082d9:	stos   BYTE PTR es:[edi],al
  4082da:	jge    0x40827e
  4082dc:	out    dx,eax
  4082dd:	es xor ebx,edx
  4082e0:	cdq    
  4082e1:	jge    0x40830e
  4082e3:	push   0x33
  4082e5:	fimul  WORD PTR [esi+0x6f]
  4082e8:	mov    ecx,0x9b8168fa
  4082ed:	mov    ss,WORD PTR [ebx+ecx*1+0x49]
  4082f1:	dec    ecx
  4082f2:	test   BYTE PTR [esi],bh
  4082f4:	push   0xa4fa3ed0
  4082f9:	and    DWORD PTR [edi-0x3b],0x6d
  4082fd:	add    BYTE PTR [ecx],0x62
  408300:	xor    al,0xdc
  408302:	(bad)  
  408303:	outs   dx,BYTE PTR ds:[esi]
  408304:	(bad)  
  408305:	xchg   edi,eax
  408306:	bound  ecx,QWORD PTR [edx+0x65]
  408309:	sub    eax,edi
  40830b:	sbb    BYTE PTR [esi+0x32ef0ddf],ah
  408311:	push   edi
  408312:	or     bh,BYTE PTR [ecx]
  408314:	and    BYTE PTR [edx+0x9],0xda
  408318:	jb     0x408324
  40831a:	lds    ecx,FWORD PTR [ebp-0x21]
  40831d:	test   BYTE PTR [eax+ecx*4],dh
  408320:	push   ax
  408322:	rol    BYTE PTR [ecx+esi*4+0x4f],cl
  408326:	xor    eax,0xe59bc01e
  40832b:	or     BYTE PTR [esi-0x6c],0x9b
  40832f:	push   edi
  408330:	sub    BYTE PTR [edx],cl
  408332:	aam    0x8d
  408334:	xchg   ecx,eax
  408335:	inc    edi
  408336:	jle    0x408350
  408338:	mov    ch,0x75
  40833a:	mov    al,ds:0x21d75123
  40833f:	mov    esp,0x6e16aef7
  408344:	mov    edx,0xe8a94887
  408349:	or     esi,DWORD PTR [edi]
  40834b:	cdq    
  40834c:	imul   ebx,DWORD PTR [eax],0xdde8e264
  408352:	cmp    eax,0x9957928b
  408357:	jge    0x40830c
  408359:	ds enter 0x2c11,0xc0
  40835e:	xor    esi,ebx
  408360:	adc    ch,BYTE PTR [edi+0x27fce022]
  408366:	adc    eax,esi
  408368:	in     al,dx
  408369:	xor    eax,0xce2ee542
  40836e:	int    0x85
  408370:	dec    ecx
  408371:	test   al,0x6f
  408373:	push   edx
  408374:	fldenv [ebp+esi*1+0x21]
  408378:	(bad)  
  408379:	cld    
  40837a:	ss ss rcl ebp,0x84
  40837f:	lods   al,BYTE PTR ds:[esi]
  408380:	cbw    
  408382:	fimul  WORD PTR [esi-0x72]
  408385:	adc    al,0x91
  408387:	jge    0x408328
  408389:	test   DWORD PTR [edi+0x42],ecx
  40838c:	jb     0x4083c3
  40838e:	scas   eax,DWORD PTR es:[edi]
  40838f:	hlt    
  408390:	inc    edi
  408391:	ins    BYTE PTR es:[edi],dx
  408392:	stc    
  408393:	test   al,0x5c
  408395:	ror    BYTE PTR [ebx+ebp*2+0x34231a98],0x20
  40839d:	cmp    ecx,DWORD PTR [esi+0xfd69552]
  4083a3:	add    bh,dl
  4083a5:	jmp    0xb2fb:0x3c8dd86e
  4083ac:	in     al,dx
  4083ad:	mov    WORD PTR [esp+eiz*8],ss
  4083b0:	ds aam 0xc3
  4083b3:	xor    eax,0x372cddb8
  4083b8:	pop    esi
  4083b9:	sub    edi,DWORD PTR [eax]
  4083bb:	ret    0xca6d
  4083be:	(bad)  
  4083bf:	fisttp WORD PTR [esi]
  4083c1:	mov    ebx,0x27948ceb
  4083c6:	and    eax,0xf2ea5094
  4083cb:	jg     0x408433
  4083cd:	jmp    FWORD PTR [edi+0xbbde062]
  4083d3:	mov    ch,0xf9
  4083d5:	xchg   ebp,eax
  4083d6:	xor    bl,dh
  4083d8:	adc    eax,0x64193ba
  4083dd:	or     bh,cl
  4083df:	adc    eax,0x660bca8
  4083e4:	out    dx,eax
  4083e5:	sbb    eax,0xa7dd4b0a
  4083ea:	sti    
  4083eb:	lds    ecx,FWORD PTR [esi+eiz*8-0x29886e37]
  4083f2:	cmp    edx,0x8035de7b
  4083f8:	popf   
  4083f9:	fidivr DWORD PTR [edx+0x1302810d]
  4083ff:	dec    esi
  408400:	call   0x2c9:0x365fbdf7
  408407:	inc    eax
  408408:	and    ecx,ecx
  40840a:	adc    edx,DWORD PTR [ebx-0xaa3de86]
  408410:	sbb    eax,0x725139d4
  408415:	cmp    bl,dh
  408417:	jl     0x408469
  408419:	xchg   ebx,eax
  40841a:	cs pop ebp
  40841c:	xor    cl,ch
  40841e:	and    al,0x59
  408420:	cmp    bl,al
  408422:	xchg   edi,eax
  408423:	mov    bh,0x11
  408425:	jmp    0xce8aebb8
  40842a:	sbb    al,BYTE PTR [edi+edi*1]
  40842d:	jnp    0x408452
  40842f:	or     ebp,DWORD PTR [ecx]
  408431:	loope  0x408420
  408433:	(bad)  
  408434:	shl    BYTE PTR [edx-0x470a03e],cl
  40843a:	pop    ebx
  40843b:	ficom  DWORD PTR [eax]
  40843d:	hlt    
  40843e:	inc    esp
  40843f:	mov    ecx,0xe94c6db1
  408444:	and    DWORD PTR [esi+0x3a],esi
  408447:	call   0xc6468bd
  40844c:	(bad)  
  40844d:	out    dx,al
  40844e:	adc    BYTE PTR [edi],ah
  408450:	aad    0x47
  408452:	retf   0x4b36
  408455:	mov    esp,0x75c0d302
  40845a:	enter  0x6e8,0xf6
  40845e:	jg     0x4083f7
  408460:	inc    esp
  408461:	ins    DWORD PTR es:[edi],dx
  408462:	int3   
  408463:	leave  
  408464:	scas   eax,DWORD PTR es:[edi]
  408465:	or     ch,BYTE PTR [esi]
  408467:	std    
  408468:	in     al,dx
  408469:	fcomp  QWORD PTR [ecx-0x7]
  40846c:	mov    eax,ds:0xe34e8b5a
  408471:	sub    eax,0x2c16adfc
  408476:	sub    BYTE PTR ds:0x9825d0cf,dl
  40847c:	outs   dx,DWORD PTR ds:[esi]
  40847d:	mov    esi,0xb5360f15
  408482:	sub    bl,cl
  408484:	sar    BYTE PTR [ebp+0x365201dd],0x20
  40848b:	mov    esi,ebx
  40848d:	lds    edi,FWORD PTR [edi+0x14]
  408490:	xor    eax,DWORD PTR [ebx-0x28a75c85]
  408496:	and    edi,DWORD PTR [edi-0x60]
  408499:	ret    0xbfb8
  40849c:	mov    eax,ds:0x4e0d29f
  4084a1:	jecxz  0x4084c6
  4084a3:	sub    DWORD PTR [ebx-0x4],eax
  4084a6:	jl     0x40845f
  4084a8:	mov    esi,edx
  4084aa:	jl     0x408444
  4084ac:	push   edx
  4084ad:	in     eax,dx
  4084ae:	cmp    BYTE PTR [edi-0x52],dh
  4084b1:	add    al,0x87
  4084b3:	sbb    ah,bh
  4084b5:	mov    ecx,0x5ea403de
  4084ba:	out    dx,eax
  4084bb:	pusha  
  4084bc:	in     al,dx
  4084bd:	cmp    al,0xa7
  4084bf:	jp     0x408458
  4084c1:	xchg   edx,eax
  4084c2:	out    0x1a,eax
  4084c4:	popf   
  4084c5:	div    BYTE PTR [edi+0x316974f6]
  4084cb:	ss cmp esp,esp
  4084ce:	inc    edx
  4084cf:	pop    ds
  4084d0:	mov    esp,0x602531c2
  4084d5:	mov    bh,0x26
  4084d7:	shl    DWORD PTR gs:[edi-0x74],1
  4084db:	mov    cl,bl
  4084dd:	or     ch,BYTE PTR [ebx+esi*8]
  4084e0:	sub    DWORD PTR [ebx+ebp*8-0x6ddf79df],eax
  4084e7:	sbb    al,0x4d
  4084e9:	pop    esi
  4084ea:	ins    BYTE PTR es:[edi],dx
  4084eb:	test   BYTE PTR [ebp-0x5f],dh
  4084ee:	ret    
  4084ef:	push   eax
  4084f0:	mov    dl,0xf3
  4084f2:	lods   eax,DWORD PTR ds:[esi]
  4084f3:	mov    al,ds:0x8efd531d
  4084f8:	call   0xa2b5:0x8e91b81e
  4084ff:	push   edi
  408500:	retf   0x4f0a
  408503:	dec    ecx
  408504:	mov    DWORD PTR [ebp+ebp*2+0x43],0x68cf15e8
  40850c:	mov    eax,ds:0x35eb74d7
  408511:	adc    cl,ch
  408513:	popa   
  408514:	cmp    eax,0x4912e44f
  408519:	sar    DWORD PTR [ecx+0x47],cl
  40851c:	cmp    DWORD PTR [ebx],edx
  40851e:	cmp    al,0x59
  408520:	or     eax,0xeb1369c5
  408525:	dec    ecx
  408526:	repnz fwait
  408528:	sbb    al,0xdd
  40852a:	pusha  
  40852b:	dec    ebp
  40852c:	xor    eax,0xc05d92d3
  408531:	or     eax,0xaafaac13
  408536:	(bad)  
  408537:	mov    ecx,0xfae1b604
  40853c:	xor    eax,0x7d29f403
  408541:	imul   esp,DWORD PTR [ebp-0x46],0x65eaa21d
  408548:	sbb    BYTE PTR [ebp-0x56],ah
  40854b:	cmp    al,0x37
  40854d:	aam    0x27
  40854f:	and    bl,BYTE PTR [ecx+0x20]
  408552:	pusha  
  408553:	mov    cl,0x16
  408555:	daa    
  408556:	push   edi
  408557:	mov    ah,0x18
  408559:	ficom  DWORD PTR [esi+0x39]
  40855c:	cld    
  40855d:	jg     0x4085d1
  40855f:	and    ah,bl
  408561:	mov    ebp,0xb819e1a
  408566:	shl    dh,0x83
  408569:	aad    0x2e
  40856b:	or     al,0x2d
  40856d:	scas   eax,DWORD PTR es:[edi]
  40856e:	mov    ?,WORD PTR [eax]
  408570:	pop    ds
  408571:	mov    eax,?
  408573:	lahf   
  408574:	scas   eax,DWORD PTR es:[edi]
  408575:	shl    ebx,cl
  408577:	es popf 
  408579:	push   ebp
  40857a:	mov    ch,0x28
  40857c:	mov    eax,ds:0xb2a00861
  408581:	fld    TBYTE PTR [esi+0x24]
  408584:	enter  0x5a71,0xba
  408588:	icebp  
  408589:	push   es
  40858a:	inc    esp
  40858b:	jbe    0x408579
  40858d:	pop    esi
  40858e:	fistp  WORD PTR [edx-0x12]
  408591:	pop    eax
  408592:	mov    dl,0xc2
  408594:	cmp    BYTE PTR [ebx-0x37b0f9a5],0x27
  40859b:	leave  
  40859c:	xor    DWORD PTR [esi+0x29],0x24
  4085a0:	sub    DWORD PTR [eax],0x5e8e5673
  4085a6:	push   ebp
  4085a7:	inc    edx
  4085a8:	add    edi,ebp
  4085aa:	fnstcw WORD PTR [ecx-0x67]
  4085ad:	jnp    0x408591
  4085af:	in     al,dx
  4085b0:	mov    dh,BYTE PTR [ebx]
  4085b2:	xor    al,0x37
  4085b4:	mov    esi,0xb276c848
  4085b9:	xor    esp,DWORD PTR ds:0x730cef36
  4085bf:	adc    eax,0x135c271b
  4085c4:	mov    cl,0x73
  4085c6:	in     eax,0xa1
  4085c8:	shl    BYTE PTR [ecx],1
  4085ca:	das    
  4085cb:	or     ecx,DWORD PTR [ebp-0x9]
  4085ce:	popa   
  4085cf:	jmp    0xb6299549
  4085d4:	xor    DWORD PTR [edx-0x6b],esi
  4085d7:	sbb    ecx,DWORD PTR [edx]
  4085d9:	(bad)  
  4085da:	cwde   
  4085db:	hlt    
  4085dc:	cmp    eax,0x80cccf8b
  4085e1:	call   0xc798ad35
  4085e6:	and    bh,BYTE PTR [ebp+esi*2-0x415637cc]
  4085ed:	outs   dx,BYTE PTR ds:[esi]
  4085ee:	(bad)  
  4085ef:	pop    ecx
  4085f0:	fisubr DWORD PTR [edx+eax*2+0x261d1506]
  4085f7:	jmp    0x93a:0x66b66b53
  4085fe:	push   ebx
  4085ff:	mov    bh,0xd8
  408601:	pop    ebx
  408602:	sbb    edx,0x923e243e
  408608:	lods   eax,DWORD PTR ds:[esi]
  408609:	sub    bl,BYTE PTR [edi+0x3cdda845]
  40860f:	sti    
  408610:	mov    edi,0xfb5cdb0e
  408615:	jns    0x40863d
  408617:	js     0x4085d2
  408619:	das    
  40861a:	pop    ds
  40861b:	sbb    BYTE PTR [ebp-0x107b5c22],ch
  408621:	out    0xdd,al
  408623:	mov    esp,DWORD PTR ds:0x7518b151
  408629:	jbe    0x4085d4
  40862b:	jmp    0x838d:0xdcd50d0c
  408632:	das    
  408633:	inc    esi
  408634:	stc    
  408635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408636:	je     0x408611
  408638:	loop   0x408631
  40863a:	shl    DWORD PTR [esi],1
  40863c:	fnstcw WORD PTR [eax]
  40863e:	int3   
  40863f:	lods   al,BYTE PTR ds:[esi]
  408640:	dec    esi
  408641:	or     eax,0x881fb064
  408646:	xchg   edi,eax
  408647:	adc    bl,BYTE PTR [edi-0x54]
  40864a:	inc    edi
  40864b:	ja     0x40866d
  40864d:	jae    0x408665
  40864f:	ror    DWORD PTR [ebx+ecx*1+0x60],0x13
  408654:	inc    edi
  408655:	jo     0x4086b9
  408657:	fst    DWORD PTR [ecx+0x44]
  40865a:	ret    0x9e84
  40865d:	fidivr WORD PTR [ebx+0x67c5228c]
  408663:	(bad)  
  408664:	(bad)  
  408665:	imul   ebp,DWORD PTR [ebx],0x72
  408668:	adc    eax,DWORD PTR [eax+0x52]
  40866b:	jo     0x40869d
  40866d:	add    ah,BYTE PTR [eax+0x23]
  408670:	add    eax,0xeb4dda84
  408675:	mov    esp,0x326ebff2
  40867a:	test   BYTE PTR [eax-0x36b881f2],ch
  408680:	out    0x69,al
  408682:	xchg   ebx,eax
  408683:	test   DWORD PTR [ebx+eax*8],0x9180791d
  40868a:	ret    
  40868b:	pop    edx
  40868c:	sbb    edi,0xffffffaa
  40868f:	add    BYTE PTR [ebx],0x73
  408692:	(bad)  
  408693:	dec    ecx
  408694:	pushf  
  408695:	jns    0x4086eb
  408697:	sar    BYTE PTR [ecx],1
  408699:	push   ss
  40869a:	jbe    0x40869b
  40869c:	pop    es
  40869d:	in     al,dx
  40869e:	icebp  
  40869f:	dec    ecx
  4086a0:	cs ins DWORD PTR es:[edi],dx
  4086a2:	cwde   
  4086a3:	addr16 out 0x82,al
  4086a6:	mov    WORD PTR [eax],gs
  4086a8:	jmp    FWORD PTR [esi+eax*4+0x54daf9fe]
  4086af:	das    
  4086b0:	sbb    bl,BYTE PTR [eax+0x25f7397c]
  4086b6:	adc    eax,0x58fecfe1
  4086bb:	cmp    DWORD PTR [esi-0x114e0301],esi
  4086c1:	sub    bh,BYTE PTR [esi]
  4086c3:	das    
  4086c4:	test   eax,0xcdaf59db
  4086c9:	pusha  
  4086ca:	push   eax
  4086cb:	inc    ecx
  4086cc:	imul   ecx,DWORD PTR [edx+ebp*2-0x3299ffe3],0xb232ac2
  4086d7:	aam    0x8e
  4086d9:	shl    BYTE PTR [ebx+0x7d],cl
  4086dc:	xor    DWORD PTR [edi],esp
  4086de:	shr    BYTE PTR [edi+0x7cdaaea2],0xab
  4086e5:	push   0x2db79633
  4086ea:	xor    eax,0xede50db9
  4086ef:	fnsave [ebp+ebx*1+0x16]
  4086f3:	iret   
  4086f4:	leave  
  4086f5:	push   ebx
  4086f6:	jae    0x408765
  4086f8:	push   esi
  4086f9:	repz and BYTE PTR [ebp+0x44152c0a],al
  408700:	in     al,0x58
  408702:	out    dx,eax
  408703:	(bad)  
  408704:	push   ebp
  408705:	mov    bl,BYTE PTR [eax-0x1b]
  408708:	fsub   QWORD PTR [esi+0x3cfca08d]
  40870e:	dec    esp
  40870f:	(bad)
  408712:	add    al,0x3e
  408714:	scas   eax,DWORD PTR es:[edi]
  408715:	inc    ebx
  408716:	dec    esi
  408717:	aaa    
  408718:	add    eax,0xa7c9d5d7
  40871d:	mov    edx,0xe2260413
  408722:	mov    ebp,0x6a153a0f
  408727:	push   es
  408728:	sti    
  408729:	mov    ch,0x95
  40872b:	or     eax,0x76ecf8d0
  408730:	pop    ecx
  408731:	pop    esp
  408732:	xchg   BYTE PTR [edx],ch
  408734:	jno    0x40876b
  408736:	stos   BYTE PTR es:[edi],al
  408737:	icebp  
  408738:	fidiv  WORD PTR [ebp-0x3a]
  40873b:	dec    esi
  40873c:	push   edx
  40873d:	sub    BYTE PTR [edx],dh
  40873f:	out    dx,al
  408740:	push   eax
  408741:	push   ecx
  408742:	or     DWORD PTR [edx+eax*8+0x580075d3],esp
  408749:	fxch   st(2)
  40874b:	mov    al,0x41
  40874d:	dec    ecx
  40874e:	add    al,0xfb
  408750:	mov    WORD PTR [esi+0x6c3a3d9f],?
  408756:	lea    ebx,ds:0xb8e7737
  40875c:	jb     0x408770
  40875e:	sbb    eax,0x5d55f370
  408763:	ror    DWORD PTR [ebp-0x2f],1
  408766:	das    
  408767:	inc    eax
  408768:	std    
  408769:	jnp    0x40877c
  40876b:	ficomp DWORD PTR [esp+ecx*2-0x22]
  40876f:	lea    edx,[esi+edx*1-0x3e]
  408773:	xchg   esi,eax
  408774:	repz jge 0x408743
  408777:	repz mov ebx,0x8fef57ad
  40877d:	rcr    DWORD PTR [eax],1
  40877f:	or     BYTE PTR [ebp+esi*2-0x6c],bh
  408783:	push   eax
  408784:	jmp    0x55b5:0x10f869c4
  40878b:	enter  0x6d66,0xd1
  40878f:	mov    ecx,0x80952177
  408794:	out    0x32,eax
  408796:	inc    esp
  408797:	cmp    esi,DWORD PTR [edx]
  408799:	imul   edx,esp,0xffffff86
  40879c:	xor    BYTE PTR [esi+0x676131da],0xfd
  4087a3:	adc    ecx,eax
  4087a5:	pop    edi
  4087a6:	lods   eax,DWORD PTR ds:[esi]
  4087a7:	pop    ebx
  4087a8:	dec    esp
  4087a9:	fisub  DWORD PTR [esi+esi*4+0x16fbbada]
  4087b0:	and    dl,BYTE PTR [ebp-0x1d1a099d]
  4087b6:	cli    
  4087b7:	inc    DWORD PTR [eax-0x80]
  4087ba:	sbb    dh,al
  4087bc:	iret   
  4087bd:	jle    0x4087f9
  4087bf:	sbb    esi,esi
  4087c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087c2:	mov    cs,WORD PTR [esi]
  4087c4:	int3   
  4087c5:	and    DWORD PTR [esi],0xffffff9e
  4087c8:	mov    edx,0x8ef8157b
  4087cd:	xchg   edx,eax
  4087ce:	(bad)  
  4087d0:	test   DWORD PTR [ebx-0x1adf165f],ebx
  4087d6:	xlat   BYTE PTR ds:[ebx]
  4087d7:	mov    ds:0x65983c4f,al
  4087dc:	fbstp  TBYTE PTR [edi+0x55797420]
  4087e2:	int    0x8c
  4087e4:	retf   
  4087e5:	in     al,dx
  4087e6:	jb     0x40884a
  4087e8:	js     0x4087f1
  4087ea:	scas   eax,DWORD PTR es:[edi]
  4087eb:	js     0x408819
  4087ed:	into   
  4087ee:	test   al,0x51
  4087f0:	jne    0x40886a
  4087f2:	dec    ecx
  4087f3:	and    al,0x25
  4087f5:	ja     0x40881e
  4087f7:	sub    DWORD PTR [ebx],edx
  4087f9:	add    bl,BYTE PTR [edi]
  4087fb:	jmp    0x40883a
  4087fd:	add    edi,DWORD PTR [edi-0x798ca30f]
  408803:	cdq    
  408804:	imul   ebp,DWORD PTR [ecx+0x2a99c53e],0xb7888cbd
  40880e:	push   ecx
  40880f:	sub    esi,DWORD PTR [ebx]
  408811:	and    BYTE PTR [ebp+0x7c],0xc7
  408815:	mov    edx,0x312c23df
  40881a:	push   edx
  40881b:	jmp    0x9e1a:0x20fabb20
  408822:	pop    eax
  408823:	mov    ebx,DWORD PTR [edx]
  408825:	xchg   edx,eax
  408826:	adc    al,0xbb
  408828:	jnp    0x40889c
  40882a:	pop    edx
  40882b:	icebp  
  40882c:	fsub   QWORD PTR [esi]
  40882e:	sti    
  40882f:	ret    
  408830:	sbb    al,0x40
  408832:	push   ecx
  408833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408834:	test   al,0x46
  408836:	shl    DWORD PTR [eax-0x37faad37],0x4
  40883d:	es inc esp
  40883f:	fimul  DWORD PTR [esi]
  408841:	mov    esi,0x6241be8c
  408846:	mov    ch,al
  408848:	fistp  WORD PTR [edi+0xb]
  40884b:	aaa    
  40884c:	and    al,0x22
  40884e:	add    eax,0xb9de6f4d
  408853:	aas    
  408854:	cdq    
  408855:	jne    0x408800
  408857:	jns    0x4088c0
  408859:	mov    ah,0x48
  40885b:	sub    esp,DWORD PTR [edx+0x436e1b19]
  408861:	or     edi,DWORD PTR [eax+0x22f4fa85]
  408867:	nop
  408868:	lods   eax,DWORD PTR ds:[esi]
  408869:	add    edi,DWORD PTR [edx+0x5dfa884a]
  40886f:	or     esp,DWORD PTR [ecx]
  408871:	(bad)  
  408872:	shl    ch,1
  408874:	pop    esp
  408875:	(bad)  
  408876:	stos   DWORD PTR es:[edi],eax
  408877:	xchg   esi,edx
  408879:	and    al,0xaf
  40887b:	scas   al,BYTE PTR es:[edi]
  40887c:	les    eax,FWORD PTR [esi-0x59a192cb]
  408882:	sbb    edi,DWORD PTR [eax-0x7abd99d3]
  408888:	arpl   bp,sp
  40888a:	xchg   esp,eax
  40888b:	add    DWORD PTR [ebx-0x12],0xffffffda
  40888f:	ins    DWORD PTR es:[edi],dx
  408890:	or     edx,DWORD PTR [edx]
  408892:	mov    DWORD PTR [eax+0xe019a9e],0x3c9bd6b7
  40889c:	fwait
  40889d:	test   BYTE PTR [eax-0x7d],ch
  4088a0:	xchg   esp,eax
  4088a1:	inc    ebx
  4088a2:	push   es
  4088a3:	lock popf 
  4088a5:	shl    al,0x8d
  4088a8:	sbb    BYTE PTR [esi-0x29d91157],ah
  4088ae:	fsubr  st(5),st
  4088b0:	cmp    ebp,DWORD PTR [edi+esi*8-0x27]
  4088b4:	dec    edx
  4088b5:	mov    cl,BYTE PTR ss:[esi]
  4088b8:	repnz sub DWORD PTR [ebp+0xe],0x7
  4088bd:	xchg   BYTE PTR [esp+ebp*1+0x67],cl
  4088c1:	out    0x4f,al
  4088c3:	enter  0xc2f,0xff
  4088c7:	adc    ebp,DWORD PTR [ebx]
  4088c9:	add    DWORD PTR [eax-0x1a],0x74
  4088cd:	lods   eax,DWORD PTR ds:[esi]
  4088ce:	addr16 (bad) 
  4088d0:	lods   eax,DWORD PTR ds:[esi]
  4088d1:	test   DWORD PTR [ebx-0x1a],0xa8819c47
  4088d8:	jmp    0xe01ee1a1
  4088dd:	dec    edx
  4088de:	adc    esi,edx
  4088e0:	mov    ebx,DWORD PTR [ecx+0x399b593c]
  4088e6:	sub    BYTE PTR [eax],ch
  4088e8:	adc    al,0x1e
  4088ea:	adc    DWORD PTR [esi],0xffffffae
  4088ed:	inc    ebx
  4088ee:	xor    eax,0xcc818ce9
  4088f3:	es mov ah,0xcd
  4088f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088f7:	es push edx
  4088f9:	add    DWORD PTR [esi+0x40],esi
  4088fc:	sahf   
  4088fd:	adc    dl,BYTE PTR [ecx]
  4088ff:	and    DWORD PTR [ecx-0x14],edx
  408902:	push   es
  408903:	test   eax,0x9a2ca730
  408908:	adc    bl,0xc9
  40890b:	in     al,dx
  40890c:	add    DWORD PTR [ebp+ecx*4-0x68ba9715],ebp
  408913:	cmp    eax,DWORD PTR [ecx]
  408915:	mov    ah,0x61
  408917:	jbe    0x408957
  408919:	dec    ebp
  40891a:	sahf   
  40891b:	push   0x16
  40891d:	fnstsw WORD PTR [eax-0x26]
  408920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408921:	sbb    eax,DWORD PTR [ecx]
  408923:	sub    cl,BYTE PTR [ebp-0x5c5ce0cb]
  408929:	sub    eax,0xc8424999
  40892e:	jno    0x40894e
  408930:	(bad)  
  408931:	(bad)  
  408932:	call   0x478a:0xdd8d7fb9
  408939:	pushf  
  40893a:	gs inc edi
  40893c:	test   al,0x53
  40893e:	dec    esp
  40893f:	sub    ebp,ebp
  408941:	inc    edx
  408942:	cmp    al,BYTE PTR [edx-0x52]
  408945:	push   ecx
  408946:	xor    DWORD PTR [ecx],0x660d252d
  40894c:	in     eax,dx
  40894d:	sar    DWORD PTR [ecx+0xc062602],0x94
  408954:	clc    
  408955:	test   al,0x15
  408957:	(bad)  
  408958:	jae    0x40897d
  40895a:	(bad)  
  40895b:	jmp    0x4088e0
  40895d:	call   0x25f6:0x5b2cf541
  408964:	mov    esi,0x2fb5fef1
  408969:	dec    edx
  40896a:	cmp    eax,0xa5d70b05
  40896f:	xlat   BYTE PTR ds:[ebx]
  408970:	cmp    bl,BYTE PTR [edx+0x6ae3cd77]
  408976:	jbe    0x4089e5
  408978:	add    edx,0xffffffa7
  40897b:	add    eax,0x3eff1140
  408980:	retf   0x3fb9
  408983:	xchg   DWORD PTR [ebp+0x24bd4b44],edi
  408989:	adc    ch,BYTE PTR [edi+0x4d]
  40898c:	loopne 0x408983
  40898e:	stos   DWORD PTR es:[edi],eax
  40898f:	repnz xchg esi,eax
  408991:	or     BYTE PTR [edi-0x1456cb56],ah
  408997:	pusha  
  408998:	lds    edx,FWORD PTR [esi]
  40899a:	ror    al,cl
  40899c:	dec    ecx
  40899d:	or     eax,0x405f8938
  4089a2:	jns    0x408956
  4089a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089a5:	jbe    0x40897d
  4089a7:	mov    bl,0x9c
  4089a9:	sub    esi,eax
  4089ab:	mov    edi,0xfa1d5745
  4089b0:	mov    DWORD PTR [edi+0x5d],edx
  4089b3:	cmp    bl,ah
  4089b5:	rcl    DWORD PTR [edi+eax*1-0x5b],1
  4089b9:	dec    esp
  4089ba:	enter  0x19a6,0xcb
  4089be:	ja     0x4089c2
  4089c0:	addr16 pop es
  4089c2:	inc    eax
  4089c3:	ds cmp eax,0xa40bb4bd
  4089c9:	push   cs
  4089ca:	inc    esi
  4089cb:	out    0x79,al
  4089cd:	and    ah,dl
  4089cf:	mov    eax,ds:0xa977cb4d
  4089d4:	or     ecx,DWORD PTR [eax-0x436bca3f]
  4089da:	add    al,0x5b
  4089dc:	pop    eax
  4089dd:	dec    ecx
  4089de:	and    BYTE PTR [eax],ah
  4089e0:	push   ecx
  4089e1:	dec    eax
  4089e2:	sub    ebp,esi
  4089e4:	mov    ch,0x62
  4089e6:	sti    
  4089e7:	push   esi
  4089e8:	and    dh,BYTE PTR [ebx+ecx*4-0x62]
  4089ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089ed:	and    BYTE PTR [eax+0xc],al
  4089f0:	and    BYTE PTR [edx+0x3f5da9e7],dh
  4089f6:	dec    edi
  4089f7:	std    
  4089f8:	cmp    dh,BYTE PTR [ebx-0x1c61b301]
  4089fe:	sahf   
  4089ff:	mov    bh,0x1c
  408a01:	(bad)  
  408a02:	ds cmp ah,dh
  408a05:	push   0x182de923
  408a0a:	mov    eax,ds:0xee3944c5
  408a0f:	add    bl,BYTE PTR [edx]
  408a11:	mov    al,0xd9
  408a13:	push   0xffffff84
  408a15:	sub    ebx,DWORD PTR [ebp-0x4a48ed8a]
  408a1b:	sar    DWORD PTR [ecx+0x6f285784],0x78
  408a22:	push   ebx
  408a23:	and    esi,DWORD PTR [ebx]
  408a25:	and    BYTE PTR [edi+esi*1+0x1e894a9c],0x8d
  408a2d:	adc    esi,DWORD PTR [ecx-0x76]
  408a30:	hlt    
  408a31:	ficom  DWORD PTR [edx+0x2c]
  408a34:	push   edx
  408a35:	lahf   
  408a36:	mov    edx,0x94e54f66
  408a3b:	or     DWORD PTR [esi-0x2],0x81499c27
  408a42:	std    
  408a43:	cmp    dh,dh
  408a45:	shl    DWORD PTR [eax],0xd8
  408a48:	aas    
  408a49:	imul   ecx,DWORD PTR [esp+eax*4+0x3fe745f5],0x7e
  408a51:	mov    ebp,0xa737bb66
  408a56:	pop    eax
  408a57:	in     eax,dx
  408a58:	fcmove st,st(3)
  408a5a:	pop    edi
  408a5b:	jb     0x408a4c
  408a5d:	add    cl,al
  408a5f:	push   edx
  408a60:	mov    ds:0x5a9bdda6,al
  408a65:	sbb    BYTE PTR [ebx+edi*4],bh
  408a68:	or     ah,BYTE PTR [eax-0x9d8aaf8]
  408a6e:	sti    
  408a6f:	mov    al,ds:0x92f69f06
  408a74:	in     eax,0x83
  408a76:	xlat   BYTE PTR ds:[ebx]
  408a77:	dec    ecx
  408a78:	push   0x17
  408a7a:	sub    DWORD PTR [edx-0x6b],ebp
  408a7d:	retf   0x41c6
  408a80:	or     DWORD PTR [edi-0x59],edx
  408a83:	jg     0x408a6f
  408a85:	inc    esp
  408a86:	sbb    eax,0xfa27d48b
  408a8b:	inc    esi
  408a8c:	xchg   esp,eax
  408a8d:	mov    ds:0xdacfb560,eax
  408a92:	shr    DWORD PTR [ecx+0x4d],cl
  408a95:	xchg   esi,eax
  408a96:	adc    DWORD PTR [esi+0x2d9217c3],edi
  408a9c:	push   ss
  408a9d:	xor    BYTE PTR [edx+0x22799cab],al
  408aa3:	rcr    BYTE PTR [ebp-0x1e57911b],0xe4
  408aaa:	pop    ds
  408aab:	ins    BYTE PTR es:[edi],dx
  408aac:	ss (bad) 
  408aae:	(bad)  
  408aaf:	sbb    eax,0xb2c160ce
  408ab4:	(bad)  
  408ab6:	dec    ecx
  408ab7:	clc    
  408ab8:	mov    cl,0xf4
  408aba:	pop    es
  408abb:	push   esi
  408abc:	mov    al,ds:0xd61a1fce
  408ac1:	and    al,0xb7
  408ac3:	addr16 xchg esp,eax
  408ac5:	push   0x3e
  408ac7:	pop    ss
  408ac8:	inc    ebp
  408ac9:	push   ds
  408aca:	mov    esi,0x2826df13
  408acf:	push   eax
  408ad0:	popa   
  408ad1:	sub    BYTE PTR [edx+esi*2],dh
  408ad4:	mov    eax,0x359e098d
  408ad9:	mov    eax,0x20f1372a
  408ade:	mov    ds:0x34912fbe,al
  408ae3:	add    DWORD PTR [ebp+0xe],0x4c
  408ae7:	xor    BYTE PTR [ebx+0x44],cl
  408aea:	out    0x75,al
  408aec:	test   BYTE PTR [ebx+0x2149e30],ah
  408af2:	leave  
  408af3:	bound  edx,QWORD PTR [eax+0x3f371827]
  408af9:	add    edx,esp
  408afb:	aas    
  408afc:	(bad)  
  408afd:	sahf   
  408afe:	adc    BYTE PTR [esi+ebp*8-0x34],0x42
  408b03:	jno    0x408b48
  408b05:	scas   al,BYTE PTR es:[edi]
  408b06:	dec    esi
  408b07:	sbb    bh,dh
  408b09:	jl     0x408b73
  408b0b:	out    dx,eax
  408b0c:	xor    al,0x3
  408b0e:	xor    al,BYTE PTR [ecx]
  408b10:	jno    0x408b81
  408b12:	jae    0x408b4d
  408b14:	inc    ebp
  408b15:	(bad)  
  408b16:	pop    eax
  408b17:	xchg   esi,eax
  408b18:	outs   dx,DWORD PTR ds:[esi]
  408b19:	cwde   
  408b1a:	lea    esi,[ecx-0x5e74a31a]
  408b20:	iret   
  408b21:	xlat   BYTE PTR ds:[ebx]
  408b22:	jbe    0x408b75
  408b24:	sbb    bh,ch
  408b26:	xlat   BYTE PTR ds:[ebx]
  408b27:	jne    0x408aaf
  408b29:	out    0xdd,eax
  408b2b:	mov    dh,BYTE PTR [ebp+0x1ac0e6c8]
  408b31:	fsub   QWORD PTR [ecx-0x4b]
  408b34:	bound  ebp,QWORD PTR [edx]
  408b36:	or     ch,BYTE PTR [esi]
  408b38:	mov    cl,0x49
  408b3a:	das    
  408b3b:	bound  esi,QWORD PTR [edx]
  408b3d:	sub    BYTE PTR [edx-0x7],0xb2
  408b41:	scas   al,BYTE PTR es:[edi]
  408b42:	int    0x13
  408b44:	xchg   edi,edi
  408b46:	xor    eax,0xa2b45b92
  408b4b:	imul   BYTE PTR [esi-0x140719d0]
  408b51:	mov    dh,cl
  408b53:	ins    BYTE PTR es:[edi],dx
  408b54:	xchg   ebx,eax
  408b55:	ins    DWORD PTR es:[edi],dx
  408b56:	pop    ss
  408b57:	push   edx
  408b58:	cmp    ebx,DWORD PTR ds:0x3e949e60
  408b5e:	mov    bl,0xf6
  408b60:	enter  0x4b9f,0x22
  408b64:	pusha  
  408b65:	in     al,dx
  408b66:	(bad)  
  408b67:	sbb    ebp,DWORD PTR [eax]
  408b69:	into   
  408b6a:	es mov ds:0x3d675400,al
  408b71:	pushf  
  408b72:	add    eax,0xb9018cb4
  408b77:	mov    ah,0xb1
  408b79:	xor    ch,BYTE PTR [eax-0x1335e9ad]
  408b7f:	lods   al,BYTE PTR ds:[esi]
  408b80:	icebp  
  408b81:	test   eax,0xfefcc0f7
  408b86:	jo     0x408bd3
  408b88:	push   edx
  408b89:	(bad)  
  408b8a:	enter  0x4bdc,0x1b
  408b8e:	(bad)
  408b92:	xchg   ebx,eax
  408b93:	xor    ebx,DWORD PTR [ebp-0x13]
  408b96:	jae    0x408b25
  408b98:	inc    edx
  408b99:	pop    ebp
  408b9a:	xor    BYTE PTR [eax-0x34ad390b],ah
  408ba0:	(bad)  
  408ba1:	int3   
  408ba2:	(bad)  
  408ba3:	push   eax
  408ba4:	(bad)  
  408ba5:	out    0x70,al
  408ba7:	and    ecx,0x5f392d79
  408bad:	js     0x408b4f
  408baf:	pop    edx
  408bb0:	ins    DWORD PTR es:[edi],dx
  408bb1:	cmc    
  408bb2:	xchg   DWORD PTR [eax-0x22d8d10b],ebx
  408bb8:	int3   
  408bb9:	jmp    0xcfa4:0x9a692d51
  408bc0:	push   esi
  408bc1:	jge    0x408bff
  408bc3:	pop    ss
  408bc4:	mov    dl,0x8
  408bc6:	test   DWORD PTR fs:[esi+0x5c],0x87a87ac5
  408bce:	into   
  408bcf:	test   DWORD PTR [esi],0x2b7d9897
  408bd5:	rol    BYTE PTR [ecx+0x7e],1
  408bd8:	into   
  408bd9:	cmp    eax,DWORD PTR [esi-0xe504092]
  408bdf:	mov    ch,0xaa
  408be1:	scas   al,BYTE PTR es:[edi]
  408be2:	pushf  
  408be3:	popf   
  408be4:	aam    0x69
  408be6:	sti    
  408be7:	out    0x5,eax
  408be9:	in     eax,0x1d
  408beb:	mov    esi,0x8ee5e1de
  408bf0:	add    ah,bh
  408bf2:	sti    
  408bf3:	lds    ecx,FWORD PTR [edi]
  408bf5:	xor    BYTE PTR [ebx+0x15],cl
  408bf8:	adc    bh,al
  408bfa:	clc    
  408bfb:	dec    ecx
  408bfc:	(bad)
  408bff:	in     al,dx
  408c00:	sahf   
  408c01:	dec    edi
  408c02:	adc    al,0x6e
  408c04:	jge    0x408be9
  408c06:	sub    eax,0xfae4a285
  408c0b:	rcr    BYTE PTR [ebp+eax*4-0x71],0x3e
  408c10:	jge    0x408c40
  408c12:	iret   
  408c13:	adc    al,0xa3
  408c15:	pushf  
  408c16:	jb     0x408c64
  408c18:	sti    
  408c19:	sbb    esp,ecx
  408c1b:	xor    ah,dh
  408c1d:	rcl    BYTE PTR [esi+edi*2-0x51],cl
  408c21:	es (bad) 
  408c23:	and    BYTE PTR [edi+0x69c910ae],bh
  408c29:	sub    DWORD PTR [eax-0x46],0x6c
  408c2d:	std    
  408c2e:	jbe    0x408c64
  408c30:	enter  0x28ae,0xac
  408c34:	fstp   TBYTE PTR [edi+eax*4+0x16c905ab]
  408c3b:	xor    DWORD PTR [ebp+0x6afcd17b],eax
  408c41:	inc    edi
  408c42:	in     al,dx
  408c43:	jp     0x408c46
  408c45:	jns    0x408c0f
  408c47:	mov    dh,0x5b
  408c49:	inc    ebp
  408c4a:	in     al,dx
  408c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c4c:	push   edx
  408c4d:	jl     0x408c54
  408c4f:	add    ebp,DWORD PTR [esi+0x53]
  408c52:	and    BYTE PTR [ecx],0x82
  408c55:	pop    es
  408c56:	imul   ecx,DWORD PTR [ebp+0x351ceb4a],0xc73d9a32
  408c60:	pop    edi
  408c61:	cli    
  408c62:	cmp    DWORD PTR [ebx-0x4fc3f528],esp
  408c68:	test   WORD PTR [edi],cx
  408c6b:	dec    ebx
  408c6c:	stc    
  408c6d:	mov    eax,0x9df23d7e
  408c72:	mov    ecx,0xbbd4bc2a
  408c77:	or     eax,0x48b79051
  408c7c:	push   es
  408c7d:	mov    ecx,ds
  408c7f:	addr16 (bad) 
  408c81:	xchg   ebp,eax
  408c82:	push   0xf77bea3e
  408c87:	sub    edi,DWORD PTR [edx]
  408c89:	ins    DWORD PTR es:[edi],dx
  408c8a:	fistp  WORD PTR [esi+edi*8+0x47]
  408c8e:	mov    DWORD PTR [edx-0x43f4dfc7],eax
  408c94:	jae    0x408c84
  408c96:	(bad)  
  408c97:	ins    DWORD PTR es:[edi],dx
  408c98:	adc    edx,ebx
  408c9a:	mov    dl,0x2a
  408c9c:	js     0x408c72
  408c9e:	jle    0x408c45
  408ca0:	or     DWORD PTR [esi-0xdb545bc],0x59efc5c
  408caa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cab:	push   edx
  408cac:	or     al,bl
  408cae:	xchg   ebx,eax
  408caf:	mov    ebp,0xee0fef3
  408cb4:	imul   ebp,DWORD PTR [ecx+0x7c],0x3f
  408cb8:	imul   esi,DWORD PTR [esi],0x5
  408cbb:	inc    edi
  408cbc:	inc    eax
  408cbd:	jne    0x408c85
  408cbf:	inc    eax
  408cc0:	sub    esi,DWORD PTR [edx+0x3c]
  408cc3:	dec    ecx
  408cc4:	mov    bl,0x45
  408cc6:	jo     0x408d0b
  408cc8:	jle    0x408c5e
  408cca:	fwait
  408ccb:	add    esi,DWORD PTR [edx]
  408ccd:	pushf  
  408cce:	mov    al,ds:0xef89143
  408cd3:	stos   BYTE PTR es:[edi],al
  408cd4:	add    DWORD PTR [eax-0x77212402],0x20
  408cdb:	in     eax,dx
  408cdc:	jnp    0x408d39
  408cde:	dec    DWORD PTR [esi-0x59c3ce07]
  408ce4:	bnd jl 0x408c86
  408ce7:	test   DWORD PTR [ebx],ebx
  408ce9:	jno    0x408cd8
  408ceb:	in     al,dx
  408cec:	pop    edi
  408ced:	fs inc ecx
  408cef:	push   ss
  408cf0:	minps  xmm0,XMMWORD PTR ds:[esi+0x7d3a13c3]
  408cf8:	scas   al,BYTE PTR es:[edi]
  408cf9:	jo     0x408d79
  408cfb:	dec    ebp
  408cfc:	xchg   esi,eax
  408cfd:	call   0x2a24:0x5a5eb7e2
  408d04:	add    BYTE PTR [eax+0x1c],bl
  408d07:	adc    al,0x79
  408d09:	repz out 0x99,eax
  408d0c:	ret    
  408d0d:	and    al,0x1f
  408d0f:	jo     0x408d61
  408d11:	out    dx,eax
  408d12:	xchg   ecx,eax
  408d13:	sub    dl,BYTE PTR [esp+eax*4]
  408d16:	addr16 adc al,0xb5
  408d19:	mov    edx,0x96f53bbf
  408d1e:	neg    BYTE PTR [edx]
  408d20:	jmp    0x15fcbbf0
  408d25:	mov    eax,ds:0xee7f7ea2
  408d2a:	test   BYTE PTR [ebx],dh
  408d2c:	in     eax,0xaf
  408d2e:	fisttp WORD PTR [ebx]
  408d30:	into   
  408d31:	dec    esp
  408d32:	and    BYTE PTR [edx],bh
  408d34:	stos   BYTE PTR es:[edi],al
  408d35:	iret   
  408d36:	arpl   WORD PTR [edx+eiz*8-0x5b27dcff],dx
  408d3d:	mov    al,ds:0xff8a526c
  408d42:	mov    edi,DWORD PTR cs:[ebp+0x22627572]
  408d49:	cdq    
  408d4a:	stos   DWORD PTR es:[edi],eax
  408d4b:	mov    ds:0xda5d3d89,eax
  408d50:	cmp    esp,edi
  408d52:	mov    ebp,0x266a7556
  408d57:	iret   
  408d58:	fldenv [esi+0x17]
  408d5b:	enter  0x81ab,0x5d
  408d5f:	xchg   BYTE PTR [eax],dl
  408d61:	and    dh,cl
  408d63:	push   cs
  408d64:	mul    BYTE PTR [ebx+0x69]
  408d67:	or     eax,0x8d8833c5
  408d6c:	inc    esp
  408d6d:	ds std 
  408d6f:	je     0x408d68
  408d71:	xor    al,0x2a
  408d73:	arpl   WORD PTR ds:0x6ab09b93,dx
  408d79:	retf   
  408d7a:	data16 or dh,BYTE PTR [ebp+esi*4+0x7c]
  408d7f:	jae    0x408dc4
  408d81:	std    
  408d82:	mov    dl,0x9
  408d84:	jb     0x408d62
  408d86:	mov    ebp,0xd29044ad
  408d8b:	gs dec eax
  408d8d:	fcom   QWORD PTR [edi-0x39717299]
  408d93:	pop    edi
  408d94:	or     BYTE PTR [edx],al
  408d96:	shl    ah,1
  408d98:	dec    esp
  408d99:	push   0x283ee88f
  408d9e:	imul   BYTE PTR [ecx-0x2]
  408da1:	add    BYTE PTR [edi-0x27],al
  408da4:	adc    al,0x57
  408da6:	arpl   WORD PTR [edi],bp
  408da8:	loope  0x408d83
  408daa:	adc    eax,0xc8bf017f
  408daf:	aam    0x16
  408db1:	xchg   esp,eax
  408db2:	cld    
  408db3:	pop    ecx
  408db4:	(bad)  
  408db5:	sar    BYTE PTR [edx+0x59],1
  408db8:	push   edx
  408db9:	repnz vpmacssdql xmm5,xmm4,xmm3,XMMWORD PTR [eax]
  408dc0:	ins    BYTE PTR es:[edi],dx
  408dc1:	fadd   st,st(1)
  408dc3:	mov    dl,0xca
  408dc5:	push   ecx
  408dc6:	out    0x19,eax
  408dc8:	or     al,0xcc
  408dca:	mov    dl,0xcd
  408dcc:	mov    edx,0xe7f3ab16
  408dd1:	or     BYTE PTR [ebp-0x3ab65765],ch
  408dd7:	std    
  408dd8:	inc    ecx
  408dd9:	(bad)  
  408dda:	push   esp
  408ddb:	aas    
  408ddc:	jmp    0xcbc5:0x1e60318e
  408de3:	dec    esp
  408de4:	or     BYTE PTR [edi+edi*8+0x3e25bf31],dl
  408deb:	gs stos DWORD PTR es:[edi],eax
  408ded:	nop
  408dee:	jb     0x408e51
  408df0:	jnp    0x408dda
  408df2:	fsubrp st(7),st
  408df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408df5:	cmp    eax,DWORD PTR [edi+0x605f31a2]
  408dfb:	mov    esp,0x1931274c
  408e00:	push   ebx
  408e01:	cmp    eax,0xe9301a39
  408e06:	pusha  
  408e07:	jae    0x408dc1
  408e09:	sbb    ebp,DWORD PTR [ebp-0x64]
  408e0c:	daa    
  408e0d:	add    BYTE PTR [esi+esi*8],0x6b
  408e11:	cmp    ch,bh
  408e13:	je     0x408e7a
  408e15:	and    eax,0xdb62a152
  408e1a:	and    DWORD PTR [esi+0x6d],0xffffffde
  408e1e:	inc    esi
  408e1f:	mov    esp,0x800ba06f
  408e24:	(bad)  
  408e25:	into   
  408e26:	jns    0x408da8
  408e28:	outs   dx,DWORD PTR ds:[esi]
  408e29:	jo     0x408e93
  408e2b:	xor    eax,0xc139244c
  408e30:	cmp    BYTE PTR [edi+eax*1],ah
  408e33:	push   0x8b570588
  408e38:	sbb    eax,esp
  408e3a:	mov    ecx,0x46fe4acf
  408e3f:	mov    bh,0xaf
  408e41:	daa    
  408e42:	pusha  
  408e43:	sub    eax,0xeef88c5
  408e48:	or     BYTE PTR [ecx+0x3b2faa03],bl
  408e4e:	mov    bh,0x7f
  408e50:	inc    edi
  408e51:	xchg   ebp,eax
  408e52:	aad    0xf4
  408e54:	xchg   ecx,eax
  408e55:	inc    ebp
  408e56:	fsubr  QWORD PTR [edi]
  408e58:	push   edx
  408e59:	rol    BYTE PTR [edi-0x7a],1
  408e5c:	jmp    0x408ec6
  408e5e:	mov    eax,ds:0x3ef52786
  408e63:	pop    ss
  408e64:	and    al,BYTE PTR [edx+0x27]
  408e67:	lea    eax,[esi+0x50]
  408e6a:	cmp    DWORD PTR [edx+esi*4],ebx
  408e6d:	cwde   
  408e6e:	and    DWORD PTR [esi],eax
  408e70:	sbb    al,0x82
  408e72:	stos   DWORD PTR es:[edi],eax
  408e73:	cmp    eax,0xdd76ecb6
  408e78:	sbb    DWORD PTR [edx+0x1d],0x83f702a1
  408e7f:	in     eax,0x61
  408e81:	out    0x31,al
  408e83:	cdq    
  408e84:	xor    al,0x34
  408e86:	ds mov esi,0x9673f9da
  408e8c:	rcl    DWORD PTR [edx],cl
  408e8e:	jp     0x408e95
  408e90:	cdq    
  408e91:	popf   
  408e92:	pop    ss
  408e93:	sbb    al,0x68
  408e95:	in     al,0x1b
  408e97:	mov    cl,0x7c
  408e99:	push   ebx
  408e9a:	jg     0x408e2e
  408e9c:	xchg   ecx,eax
  408e9d:	push   cs
  408e9e:	les    eax,FWORD PTR [ecx+edx*2]
  408ea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ea2:	add    eax,0x2f850d27
  408ea7:	enter  0x2831,0xb7
  408eab:	cld    
  408eac:	jmp    0x408e9c
  408eae:	stc    
  408eaf:	fsub   DWORD PTR ds:0x19f8c3d8
  408eb5:	xor    DWORD PTR [edx-0x7c],0xffffffe5
  408eb9:	lods   eax,DWORD PTR ds:[esi]
  408eba:	icebp  
  408ebb:	jl     0x408eee
  408ebd:	mov    al,0x3d
  408ebf:	push   edi
  408ec0:	xchg   esp,ebp
  408ec2:	adc    eax,0xf29e15c7
  408ec7:	in     al,dx
  408ec8:	push   eax
  408ec9:	data16 dec sp
  408ecc:	sub    BYTE PTR [edi-0x2a0f3362],ah
  408ed2:	or     BYTE PTR ss:[ecx],bl
  408ed5:	cmp    eax,DWORD PTR [eax]
  408ed7:	dec    ecx
  408ed8:	pop    edx
  408ed9:	add    BYTE PTR [ecx],bl
  408edb:	aam    0xb9
  408edd:	sub    BYTE PTR [edi+0x26],cl
  408ee0:	imul   ebp,DWORD PTR ds:0x276a18ac,0x9
  408ee7:	adc    BYTE PTR [edi],ah
  408ee9:	sub    eax,0x18f8662d
  408eee:	mov    ds:0xc7bf19,eax
  408ef3:	and    DWORD PTR [si+0x4a88],edi
  408ef8:	inc    eax
  408ef9:	mov    dh,0xed
  408efb:	cmp    DWORD PTR [edi],0x27
  408efe:	ret    
  408eff:	inc    eax
  408f00:	inc    ebp
  408f01:	fst    st(5)
  408f03:	std    
  408f04:	push   esp
  408f05:	sbb    DWORD PTR [edx+0x59],edx
  408f08:	shl    BYTE PTR [ebp-0x635264e],0xee
  408f0f:	out    dx,al
  408f10:	jb     0x408ecb
  408f12:	inc    esp
  408f13:	in     al,0x7b
  408f15:	shl    dl,0x9
  408f18:	cdq    
  408f19:	inc    ebp
  408f1a:	push   ecx
  408f1b:	sbb    al,0xf7
  408f1d:	mov    DWORD PTR [ecx+ebx*1+0x680d288a],ebp
  408f24:	mov    BYTE PTR [edi+0x23],ch
  408f27:	xlat   BYTE PTR ds:[ebx]
  408f28:	loop   0x408ec1
  408f2a:	out    0x99,al
  408f2c:	dec    ebp
  408f2d:	adc    al,0x4a
  408f2f:	popa   
  408f30:	adc    DWORD PTR [ebx+0x2b],edx
  408f33:	int3   
  408f34:	repz popf 
  408f36:	cs std 
  408f38:	(bad)  
  408f39:	int3   
  408f3a:	shl    edi,1
  408f3c:	sub    BYTE PTR [esi-0x609cf2d3],ch
  408f42:	xchg   ecx,eax
  408f43:	ja     0x408ec7
  408f45:	sbb    eax,0xdd06554c
  408f4a:	or     dl,0xea
  408f4d:	or     BYTE PTR [ecx],ch
  408f4f:	pop    ds
  408f50:	pop    eax
  408f51:	shr    BYTE PTR [ebx+0x5b0fedd0],1
  408f57:	pop    es
  408f58:	clc    
  408f59:	cmp    ebp,ebp
  408f5b:	dec    esp
  408f5c:	iret   
  408f5d:	cmp    eax,0x799f9499
  408f62:	fst    DWORD PTR [ecx]
  408f64:	popa   
  408f65:	adc    al,BYTE PTR [eax+0x2882a713]
  408f6b:	shl    DWORD PTR [esi+ecx*4],1
  408f6e:	jo     0x408f7b
  408f70:	in     eax,dx
  408f71:	jge    0x408fb6
  408f73:	es enter 0xa4d4,0x56
  408f78:	out    0x3,al
  408f7a:	into   
  408f7b:	stc    
  408f7c:	inc    edx
  408f7d:	mov    ah,0x96
  408f7f:	call   0x4b6e:0x570b6dae
  408f86:	and    BYTE PTR [esi],bh
  408f88:	xchg   ecx,eax
  408f89:	sahf   
  408f8a:	stos   DWORD PTR es:[edi],eax
  408f8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f8c:	xchg   edx,eax
  408f8d:	jb     0x408fc5
  408f8f:	popa   
  408f90:	mov    DWORD PTR [ebx+eax*8],ebx
  408f93:	sub    esi,ecx
  408f95:	push   DWORD PTR [ebp-0x5b]
  408f98:	cmp    eax,0xe998b736
  408f9d:	loopne 0x408f76
  408f9f:	stc    
  408fa0:	ds dec ebp
  408fa2:	push   0x59
  408fa4:	mov    esp,0xe4ab5c1b
  408fa9:	rcl    ecx,1
  408fab:	pop    edi
  408fac:	aam    0x46
  408fae:	sbb    BYTE PTR [ebp-0x14],0x39
  408fb2:	and    al,0x92
  408fb4:	or     al,0x13
  408fb6:	test   al,0xf4
  408fb8:	ins    DWORD PTR es:[edi],dx
  408fb9:	and    BYTE PTR [esp+ebx*4-0x13],ah
  408fbd:	xor    eax,ebp
  408fbf:	lea    edi,[edx]
  408fc1:	push   0x7004f60b
  408fc6:	xor    al,0x55
  408fc8:	pop    esi
  408fc9:	jg     0x40900f
  408fcb:	jo     0x408fe5
  408fcd:	loop   0x409001
  408fcf:	hlt    
  408fd0:	jl     0x408fe9
  408fd2:	mov    dl,0x27
  408fd4:	cmp    ebp,DWORD PTR [esi]
  408fd6:	in     al,dx
  408fd7:	mov    DWORD PTR [edx-0x6d823935],edx
  408fdd:	call   0xa6e2bf8
  408fe2:	bound  ebp,QWORD PTR gs:0x1e8060e4
  408fe9:	fiadd  DWORD PTR [edi+0x4c]
  408fec:	lahf   
  408fed:	push   esp
  408fee:	or     ebp,DWORD PTR [edx]
  408ff0:	push   esi
  408ff1:	adc    esi,DWORD PTR [ecx+0x72]
  408ff4:	adc    DWORD PTR [ecx],eax
  408ff6:	mov    ds:0x1e0e2403,al
  408ffb:	adc    al,0x7
  408ffd:	imul   esi,DWORD PTR [esi-0xbb6c907],0x271702a5
  409007:	pop    ecx
  409008:	cmp    DWORD PTR [esi+0x2bd5a576],edi
  40900e:	adc    eax,0xa94fe773
  409013:	test   eax,0x73e5a209
  409018:	adc    al,0x75
  40901a:	add    ecx,DWORD PTR [eax-0x5b]
  40901d:	add    al,bl
  40901f:	or     al,0x69
  409021:	(bad)  
  409022:	mov    bl,0x92
  409024:	fisubr WORD PTR [ecx]
  409026:	imul   bp,WORD PTR ds:0xbc8cf0d1,0xff98
  40902e:	inc    ebx
  40902f:	sub    al,0x1e
  409031:	(bad)  
  409032:	loope  0x408fe0
  409034:	inc    ebp
  409035:	cli    
  409036:	inc    ecx
  409037:	fsubr  QWORD PTR [edi+0x20]
  40903a:	cs jl  0x409079
  40903d:	in     eax,0xc8
  40903f:	imul   esi
  409041:	fsub   DWORD PTR [edx+0x6f]
  409044:	or     eax,0x24da7862
  409049:	js     0x409012
  40904b:	jmp    0x409050
  40904d:	loop   0x408fdb
  40904f:	dec    edx
  409050:	fdivr  QWORD PTR [edi]
  409052:	jmp    0x71e5:0xe5390442
  409059:	jae    0x4090af
  40905b:	add    dl,BYTE PTR ds:[esi+0x327eba9b]
  409062:	iret   
  409063:	imul   ebp,DWORD PTR [ecx+0x48],0x64
  409067:	iret   
  409068:	loop   0x409047
  40906a:	neg    bl
  40906c:	jle    0x4090bf
  40906e:	in     al,0x52
  409070:	loop   0x409026
  409072:	fst    DWORD PTR [eax]
  409074:	adc    BYTE PTR [esi*2+0x2ea30d73],bl
  40907b:	test   eax,0xdb84c445
  409080:	mov    ah,0x95
  409082:	lock imul ebx,DWORD PTR [esi-0x4e],0xb6c8fc
  40908a:	daa    
  40908b:	xchg   edx,eax
  40908c:	mov    ebx,0xa7782208
  409091:	out    dx,al
  409092:	das    
  409093:	into   
  409094:	sub    ah,BYTE PTR [edx-0x546c8d5]
  40909a:	bound  ebp,QWORD PTR [esi]
  40909c:	xchg   ecx,eax
  40909d:	mov    bh,0xe1
  40909f:	outs   dx,BYTE PTR ds:[esi]
  4090a0:	lods   eax,DWORD PTR ds:[esi]
  4090a1:	push   edx
  4090a2:	ds out 0x87,eax
  4090a5:	adc    al,0x62
  4090a7:	imul   edi,DWORD PTR [edx],0xffffffc4
  4090aa:	mov    dl,0x5e
  4090ac:	or     ebp,0x84a00fe3
  4090b2:	and    al,0xa3
  4090b4:	int3   
  4090b5:	outs   dx,BYTE PTR ds:[esi]
  4090b6:	into   
  4090b7:	in     al,0xe2
  4090b9:	js     0x40906e
  4090bb:	cld    
  4090bc:	dec    esp
  4090bd:	outs   dx,BYTE PTR ds:[esi]
  4090be:	retf   
  4090bf:	or     ah,BYTE PTR [edi]
  4090c1:	mov    ds:0x899dbeaa,eax
  4090c6:	jmp    0x4857:0x49681eb4
  4090cd:	les    ebx,FWORD PTR ds:0x5dda1b8b
  4090d3:	das    
  4090d4:	ja     0x40905e
  4090d6:	push   0xf78cc629
  4090db:	pop    ss
  4090dc:	jge    0x4090f3
  4090de:	adc    BYTE PTR [ecx],cl
  4090e0:	add    edx,DWORD PTR [esi-0x31]
  4090e3:	rol    DWORD PTR [ebx+0x4d591726],1
  4090e9:	mov    DWORD PTR [edi-0x1d],eax
  4090ec:	sub    cl,0x74
  4090ef:	or     eax,0xa92b1a46
  4090f4:	in     al,0xdc
  4090f6:	jmp    0x424f:0xfb660de3
  4090fd:	in     eax,0x89
  4090ff:	cmp    esi,ebp
  409101:	mov    WORD PTR [ecx+0x210bc4ee],gs
  409107:	or     ebx,ebp
  409109:	push   eax
  40910a:	add    al,0xfb
  40910c:	int    0x39
  40910e:	ror    BYTE PTR [ebx-0x29],0x5e
  409112:	retf   
  409113:	mov    dl,0xac
  409115:	dec    ebx
  409116:	out    0x8f,eax
  409118:	cwde   
  409119:	jmp    0xac8c8e52
  40911e:	or     DWORD PTR [esi],edi
  409120:	loope  0x409166
  409122:	push   esp
  409123:	mov    ah,0x8a
  409125:	inc    ecx
  409126:	das    
  409127:	js     0x4090cd
  409129:	cdq    
  40912a:	add    bl,0x42
  40912d:	sub    al,0x70
  40912f:	sub    eax,0x831a0c5f
  409134:	mov    WORD PTR [esi],?
  409136:	js     0x4091a7
  409138:	jb     0x40913b
  40913a:	dec    edi
  40913b:	shl    DWORD PTR [ebp+ebx*1+0x45],0xa
  409140:	pusha  
  409141:	test   BYTE PTR [eax-0x2d],0x27
  409145:	xlat   BYTE PTR ds:[ebx]
  409146:	call   0xa4f91a08
  40914b:	sub    ch,BYTE PTR [ebx]
  40914d:	jecxz  0x4090ee
  40914f:	daa    
  409150:	mov    cl,0xa6
  409152:	scas   al,BYTE PTR es:[edi]
  409153:	aas    
  409154:	add    al,0x4c
  409156:	mov    DWORD PTR [edx],esi
  409158:	jae    0x409192
  40915a:	push   eax
  40915b:	or     DWORD PTR [edi-0x6e],esi
  40915e:	retf   
  40915f:	mov    eax,0x2c854ab
  409164:	ins    BYTE PTR es:[edi],dx
  409165:	mov    eax,0xa4b358d7
  40916a:	pop    esi
  40916b:	mov    bh,0xb0
  40916d:	and    DWORD PTR [eax+0x19],edx
  409170:	adc    al,0x64
  409172:	shr    BYTE PTR [esi+0x345662ad],cl
  409178:	addr16 jg 0x409109
  40917b:	in     al,0x1e
  40917d:	retf   
  40917e:	js     0x4091c9
  409180:	mov    ebx,0x4dd80b10
  409185:	fiadd  DWORD PTR [ebx-0x6f]
  409188:	fsub   DWORD PTR [ecx-0x21]
  40918b:	push   ss
  40918c:	xchg   DWORD PTR [eax-0x34],ecx
  40918f:	shr    DWORD PTR [edi+0x1577239],cl
  409195:	test   al,cl
  409197:	dec    edx
  409198:	pop    ss
  409199:	mov    eax,0xd7a57f8f
  40919e:	and    cl,BYTE PTR ds:0x70d4a57f
  4091a4:	cs mov edx,0x21853328
  4091aa:	sti    
  4091ab:	sub    BYTE PTR [edx+esi*1+0x1232fbac],0xdf
  4091b3:	sub    ebx,DWORD PTR [esi+ecx*4-0x79]
  4091b7:	mov    cl,0x35
  4091b9:	xchg   ecx,eax
  4091ba:	xchg   ebx,eax
  4091bb:	sub    al,0x64
  4091bd:	jg     0x40920d
  4091bf:	mov    bh,0x5a
  4091c1:	je     0x409193
  4091c3:	mov    ch,0xec
  4091c5:	add    eax,0x9e692dff
  4091ca:	and    al,0x2e
  4091cc:	adc    edx,esp
  4091ce:	sbb    ch,BYTE PTR [ebx]
  4091d0:	cmp    BYTE PTR [ecx],bl
  4091d2:	test   eax,0x9a7a896c
  4091d7:	pop    eax
  4091d8:	add    esp,DWORD PTR [esi+0x72fed546]
  4091de:	and    ebx,DWORD PTR [esi]
  4091e0:	jle    0x409183
  4091e2:	xchg   BYTE PTR [ebx-0x4d],bh
  4091e5:	pop    ds
  4091e6:	iret   
  4091e7:	mov    edx,DWORD PTR [esi]
  4091e9:	mov    ch,0xb
  4091eb:	in     eax,0x2b
  4091ed:	cmc    
  4091ee:	xor    eax,0xe74953d8
  4091f3:	sub    DWORD PTR [eax],ebx
  4091f5:	cli    
  4091f6:	lock test BYTE PTR [ecx+0x7ad7ec0c],ch
  4091fd:	cmp    al,0x6a
  4091ff:	inc    eax
  409200:	pop    esp
  409201:	in     al,0x4e
  409203:	jp     0x40919a
  409205:	xor    eax,0x485f2835
  40920a:	cmp    DWORD PTR ss:[eax],ebx
  40920d:	jp     0x409289
  40920f:	loope  0x409257
  409211:	call   eax
  409213:	add    ecx,DWORD PTR ds:[eax-0x7fa0ca65]
  40921a:	xor    dh,dh
  40921c:	jns    0x4091a2
  40921e:	or     al,0x1b
  409220:	push   0xb
  409222:	dec    esp
  409223:	mov    WORD PTR [ecx],ss
  409225:	jecxz  0x4091d9
  409227:	out    dx,al
  409228:	xor    eax,0xfd983023
  40922d:	ss pop esi
  40922f:	bound  ebp,QWORD PTR [esi]
  409231:	jge    0x4092b0
  409233:	pop    ss
  409234:	pusha  
  409235:	fs sub eax,0xa1535924
  40923b:	call   0x944f3748
  409240:	jne    0x4091c3
  409242:	push   cs
  409243:	push   edx
  409244:	pop    esp
  409245:	or     eax,0xf7b8986c
  40924a:	mov    ds:0x6a9f5112,al
  40924f:	clc    
  409250:	int    0xf9
  409252:	leave  
  409253:	xor    ch,bl
  409255:	out    dx,eax
  409256:	ficom  WORD PTR [esi]
  409258:	loopne 0x409207
  40925a:	dec    ecx
  40925b:	fsubr  QWORD PTR [edx-0x24]
  40925e:	outs   dx,DWORD PTR ds:[esi]
  40925f:	push   edx
  409260:	bound  eax,QWORD PTR [ecx+ebx*8+0x41]
  409264:	push   es
  409265:	popa   
  409266:	fdivr  st(7),st
  409268:	inc    edx
  409269:	jo     0x40921d
  40926b:	fimul  DWORD PTR [edi+esi*4+0x2e]
  40926f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409270:	xchg   ebp,eax
  409271:	pushf  
  409272:	ins    BYTE PTR es:[edi],dx
  409273:	cmp    al,0xb9
  409275:	dec    DWORD PTR [esi-0x9a52796]
  40927b:	lods   eax,DWORD PTR ds:[esi]
  40927c:	adc    bl,dh
  40927e:	pop    ss
  40927f:	xchg   esp,eax
  409280:	jg     0x409221
  409282:	cdq    
  409283:	dec    edx
  409284:	jb     0x40926f
  409286:	dec    esp
  409287:	neg    eax
  409289:	retf   0xf9c3
  40928c:	cld    
  40928d:	dec    edx
  40928e:	stos   DWORD PTR es:[edi],eax
  40928f:	mov    dh,0xd4
  409291:	or     dh,BYTE PTR [ebx-0x3d310641]
  409297:	daa    
  409298:	out    0x91,al
  40929a:	fild   DWORD PTR [ebx-0x3b]
  40929d:	push   esp
  40929e:	std    
  40929f:	xchg   ebx,eax
  4092a0:	fwait
  4092a1:	jmp    0x2f04e603
  4092a6:	stos   DWORD PTR es:[edi],eax
  4092a7:	(bad)  
  4092a8:	fmul   st,st(1)
  4092aa:	das    
  4092ab:	push   ecx
  4092ac:	jo     0x4092ec
  4092ae:	xor    ecx,DWORD PTR [edi-0x1e600c3c]
  4092b4:	xchg   ebp,eax
  4092b5:	cdq    
  4092b6:	leave  
  4092b7:	pop    ebp
  4092b8:	push   ebx
  4092b9:	jmp    0x3eb6:0x8f5170c5
  4092c0:	mov    al,0x37
  4092c2:	stos   BYTE PTR es:[edi],al
  4092c3:	pop    esp
  4092c4:	pop    es
  4092c5:	daa    
  4092c6:	xor    eax,0x1b608fba
  4092cb:	lds    ebp,FWORD PTR [edx]
  4092cd:	in     eax,0x9
  4092cf:	aad    0x7f
  4092d1:	addr16 pop ds
  4092d3:	fcom   DWORD PTR [edx-0x29]
  4092d6:	lds    ebx,FWORD PTR [ecx+edx*1-0x293d1fcb]
  4092dd:	repz xlat BYTE PTR ds:[ebx]
  4092df:	(bad)
  4092e2:	cmp    al,0x41
  4092e4:	mov    bh,0xf5
  4092e6:	pusha  
  4092e7:	pop    ds
  4092e8:	adc    eax,edx
  4092ea:	pushf  
  4092eb:	aas    
  4092ec:	clc    
  4092ed:	shr    ah,1
  4092ef:	int    0xf9
  4092f1:	push   0xffffff86
  4092f3:	add    DWORD PTR [eax],edx
  4092f5:	mov    eax,ds:0xd9cd538c
  4092fa:	jp     0x409378
  4092fc:	pop    eax
  4092fd:	das    
  4092fe:	dec    ebp
  4092ff:	pop    edx
  409300:	pop    ebx
  409301:	xor    bl,BYTE PTR [esi-0xe]
  409304:	mov    esp,0x862b1b5
  409309:	ins    BYTE PTR es:[edi],dx
  40930a:	lods   al,BYTE PTR ds:[esi]
  40930b:	mov    bh,0x3
  40930d:	pop    ax
  40930f:	lahf   
  409310:	pop    esi
  409311:	psubsw mm0,QWORD PTR [edx-0x18]
  409315:	loope  0x409361
  409317:	pop    esi
  409318:	test   al,0xdc
  40931a:	jo     0x4092f2
  40931c:	cmp    DWORD PTR [edi-0x1d],eax
  40931f:	mov    ecx,0x4490788f
  409324:	sub    esi,DWORD PTR [edi+ebp*2]
  409327:	xchg   ebx,eax
  409328:	cs jg  0x4092cb
  40932b:	sbb    ch,cl
  40932d:	pop    edx
  40932e:	arpl   WORD PTR [esi],dx
  409330:	push   ds
  409331:	retf   0x2290
  409334:	and    al,0xae
  409336:	int3   
  409337:	pusha  
  409338:	lahf   
  409339:	fisubr DWORD PTR [esi]
  40933b:	sub    al,0xef
  40933d:	ins    DWORD PTR es:[edi],dx
  40933e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40933f:	fld    QWORD PTR [ecx-0x52246a1c]
  409345:	mov    al,0x1f
  409347:	stos   DWORD PTR es:[edi],eax
  409348:	sub    al,0x7e
  40934a:	dec    esp
  40934b:	mov    ah,BYTE PTR [ecx+0x2d9f5b79]
  409351:	mov    eax,0x25049153
  409356:	mov    dh,0xbb
  409358:	fbstp  TBYTE PTR [esi+0x3c757a7]
  40935e:	sar    DWORD PTR [edx],cl
  409360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409361:	mul    cl
  409363:	adc    BYTE PTR [ecx+0x14287b82],ch
  409369:	rcr    BYTE PTR [esi],1
  40936b:	xor    al,0x93
  40936d:	mov    ebp,0x78665b0b
  409372:	xlat   BYTE PTR ds:[ebx]
  409373:	xchg   ecx,eax
  409374:	mov    bh,0x4b
  409376:	js     0x4093ef
  409378:	inc    esp
  409379:	mov    edi,0x15f51c3d
  40937e:	cmp    BYTE PTR [ebx],dh
  409380:	jg     0x409358
  409382:	or     ecx,DWORD PTR [ecx-0x1c48b570]
  409388:	mov    ecx,0x90ab9fa7
  40938d:	fbstp  TBYTE PTR [edx]
  40938f:	test   al,0x49
  409391:	pop    edx
  409392:	mov    ebx,0xf59bd5f0
  409397:	sub    al,0xf
  40939a:	(bad)  
  40939b:	push   ebx
  40939c:	or     eax,0x600b579e
  4093a1:	jecxz  0x409386
  4093a3:	mov    ecx,0x1504f6ff
  4093a8:	dec    edi
  4093a9:	rcl    BYTE PTR [edx+0x464588b0],0xbc
  4093b0:	leave  
  4093b1:	rol    BYTE PTR [ebx+0x6b4d704f],cl
  4093b7:	popa   
  4093b8:	lds    esi,FWORD PTR [ebp+0x598a6f12]
  4093be:	ret    
  4093bf:	ret    
  4093c0:	push   eax
  4093c1:	and    ah,al
  4093c3:	lock ins DWORD PTR es:[edi],dx
  4093c5:	push   ebx
  4093c6:	out    0xda,al
  4093c8:	push   ds
  4093c9:	xchg   ebp,eax
  4093ca:	xor    DWORD PTR [ecx+0x280faf3a],ebx
  4093d0:	int3   
  4093d1:	out    0x62,al
  4093d3:	in     eax,0xb4
  4093d5:	inc    ebx
  4093d6:	js     0x409363
  4093d8:	out    0x70,al
  4093da:	xor    BYTE PTR [esi-0x33],dh
  4093dd:	daa    
  4093de:	push   es
  4093df:	fiadd  DWORD PTR [edi-0x24]
  4093e2:	mov    gs,edi
  4093e4:	cmp    ebx,DWORD PTR [ebx-0x2b31c72f]
  4093ea:	add    eax,0x3f7d081f
  4093ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093f0:	sbb    eax,0x147e8a13
  4093f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093f6:	pop    edi
  4093f7:	shl    DWORD PTR [edi+esi*2+0x10],1
  4093fb:	mov    bl,0xa4
  4093fd:	cdq    
  4093fe:	xchg   ebx,eax
  4093ff:	ret    
  409400:	dec    esi
  409401:	stc    
  409402:	jecxz  0x4093cf
  409404:	xor    BYTE PTR [ebx],ch
  409406:	mov    ebp,0xec32dd71
  40940b:	push   ds
  40940c:	out    dx,al
  40940d:	inc    esi
  40940e:	cli    
  40940f:	mov    bh,0xe5
  409411:	gs (bad) 
  409414:	lahf   
  409415:	sub    bl,BYTE PTR [edi]
  409417:	pop    esp
  409418:	ror    DWORD PTR [esi-0x24],0x25
  40941c:	(bad)  
  40941d:	fwait
  40941e:	pop    ecx
  40941f:	dec    ebp
  409420:	jns    0x4093ae
  409422:	adc    bh,bl
  409424:	mov    eax,ds:0xc358b5de
  409429:	xor    esp,ebx
  40942b:	mov    WORD PTR [ebp-0x6d],?
  40942e:	add    ebp,DWORD PTR [edi]
  409430:	sub    eax,0x20495510
  409435:	test   eax,0x44d6d4a3
  40943a:	std    
  40943b:	je     0x40943d
  40943d:	jne    0x4094af
  40943f:	pextrw edx,mm7,0x67
  409443:	inc    esp
  409444:	aas    
  409445:	adc    ebx,DWORD PTR [esi+0x6e]
  409448:	push   ebp
  409449:	jne    0x4093fe
  40944b:	pop    esi
  40944c:	shl    BYTE PTR [edi-0x70],1
  40944f:	pop    eax
  409450:	out    0xd6,eax
  409452:	mov    edx,0x167251ee
  409457:	adc    ecx,DWORD PTR [edx-0x3ff10b70]
  40945d:	nop
  40945e:	outs   dx,DWORD PTR ds:[esi]
  40945f:	xor    al,0x5e
  409461:	mov    ecx,0x782e1c6d
  409466:	pop    ecx
  409467:	jno    0x4093ea
  409469:	and    eax,0x1719ac25
  40946e:	and    eax,0xb4e6bf2f
  409473:	addr16 out 0x21,al
  409476:	enter  0x2672,0x61
  40947a:	xchg   ebx,eax
  40947b:	mov    ch,0x82
  40947d:	xor    DWORD PTR [ecx-0x18],ecx
  409480:	pop    edi
  409481:	out    0x4f,eax
  409483:	push   esi
  409484:	jbe    0x409446
  409486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409487:	mov    ch,ah
  409489:	out    0xa6,eax
  40948b:	jmp    0x40947a
  40948d:	or     BYTE PTR [ecx],0x4
  409490:	call   0x84bd:0xcf1dcfbf
  409497:	fisttp QWORD PTR [ecx-0x201f43b1]
  40949d:	ss loope 0x409452
  4094a0:	test   BYTE PTR [eax*1-0x4e17c103],ch
  4094a7:	cs pop ss
  4094a9:	push   eax
  4094aa:	cmp    ah,BYTE PTR [ebx+eax*4-0x56]
  4094ae:	and    eax,0xe999400
  4094b3:	sar    DWORD PTR [ecx+ebp*1],1
  4094b6:	dec    esi
  4094b7:	rcr    BYTE PTR [eax],0xa
  4094ba:	stc    
  4094bb:	push   esp
  4094bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094bd:	sbb    DWORD PTR [esi+0x58],esi
  4094c0:	mov    ebx,0x2e2606f0
  4094c5:	xchg   ebp,eax
  4094c6:	stc    
  4094c7:	imul   ebp,ebx,0xcb0ded39
  4094cd:	push   ebx
  4094ce:	scas   al,BYTE PTR es:[edi]
  4094cf:	cwde   
  4094d0:	inc    esp
  4094d1:	cmp    al,0xb1
  4094d3:	shr    DWORD PTR [edx+esi*8],1
  4094d6:	ret    0x1d81
  4094d9:	sbb    al,0x83
  4094db:	mov    ds:0xde809b3b,eax
  4094e0:	add    ebx,ecx
  4094e2:	add    eax,0x31bfa1bc
  4094e7:	lods   al,BYTE PTR ds:[esi]
  4094e8:	repnz and BYTE PTR [eax+0x17],cl
  4094ec:	push   ecx
  4094ed:	jle    0x40955d
  4094ef:	lods   al,BYTE PTR ds:[esi]
  4094f0:	jp     0x4094cc
  4094f2:	mov    BYTE PTR [ebx+0x3bf09a15],bl
  4094f8:	adc    ebx,DWORD PTR [eax+0x146f08be]
  4094fe:	mov    esi,0xe41273a8
  409503:	pop    ecx
  409504:	cmp    BYTE PTR [eax+0x6e],ah
  409507:	push   ecx
  409508:	and    bh,BYTE PTR [esi-0x51]
  40950b:	hlt    
  40950c:	xor    edx,DWORD PTR [eax]
  40950e:	push   edi
  40950f:	(bad)  
  409510:	sbb    DWORD PTR [ecx+0x14960fd6],esi
  409516:	or     al,0x89
  409518:	arpl   bx,bx
  40951a:	jle    0x40958c
  40951c:	sar    DWORD PTR [ecx],1
  40951e:	jl     0x4094a9
  409520:	push   edx
  409521:	(bad)  
  409522:	fucomip st,st(5)
  409524:	cli    
  409525:	repz or ch,BYTE PTR [eax-0x74]
  409529:	cld    
  40952a:	and    esi,DWORD PTR [ebx+0x7034b3d1]
  409530:	adc    al,0xf0
  409532:	xor    eax,0x11509c5f
  409537:	sahf   
  409538:	out    0xa3,eax
  40953a:	jmp    0x83eb:0x431b098a
  409541:	jne    0x4094f5
  409543:	mov    eax,0xba9562b3
  409548:	push   ds
  409549:	pop    eax
  40954a:	xchg   BYTE PTR [esi+0x2],al
  40954d:	add    DWORD PTR [ebp+ebp*4+0x6107e465],0x5460c40c
  409558:	push   ebp
  409559:	pop    ebx
  40955a:	cmp    al,0x57
  40955c:	stc    
  40955d:	add    DWORD PTR [eax+0x38f60b37],ebx
  409563:	push   edi
  409564:	mov    ds:0x1ed73280,al
  409569:	mov    es,WORD PTR [ebp+0x1a32f3c1]
  40956f:	ficom  WORD PTR [eax-0x51]
  409572:	mov    esp,0xf45b59b2
  409577:	push   ebx
  409578:	adc    al,ch
  40957a:	cwde   
  40957b:	or     BYTE PTR [ebp-0x27a740ed],dh
  409581:	inc    esi
  409582:	pop    es
  409583:	adc    eax,0xabb8ebb8
  409588:	xor    eax,0x7fcba047
  40958d:	push   edx
  40958e:	sub    eax,0x9362157d
  409593:	es loopne 0x4095e3
  409596:	sub    eax,0x7bbbabfa
  40959b:	dec    edi
  40959c:	mov    ebx,0xa3881620
  4095a1:	jnp    0x4095f3
  4095a3:	push   cs
  4095a4:	push   edx
  4095a5:	sbb    ebp,edx
  4095a7:	aad    0xb0
  4095a9:	stc    
  4095aa:	mov    eax,ds:0xd6e121b5
  4095af:	dec    edi
  4095b0:	dec    esp
  4095b1:	popf   
  4095b2:	jne    0x4095f9
  4095b4:	ds xor al,0x23
  4095b7:	loopne 0x4095f0
  4095b9:	call   0x73ef94f7
  4095be:	sbb    al,cl
  4095c0:	pop    edi
  4095c1:	pop    eax
  4095c2:	addr16 std 
  4095c4:	bndstx [edx],(bad)
  4095c7:	jp     0x40959c
  4095c9:	add    bl,BYTE PTR [ecx]
  4095cb:	loopne 0x4095ac
  4095cd:	ss sub eax,0xb1893a97
  4095d3:	mov    eax,0x26852a2d
  4095d8:	stos   BYTE PTR es:[edi],al
  4095d9:	clc    
  4095da:	add    DWORD PTR [ecx+0x6f1a8788],edi
  4095e0:	xlat   BYTE PTR ds:[ebx]
  4095e1:	mov    ch,0x22
  4095e3:	sti    
  4095e4:	cld    
  4095e5:	cmp    ebx,DWORD PTR [esi]
  4095e7:	add    ah,ch
  4095e9:	daa    
  4095ea:	les    ebp,FWORD PTR [ebp-0x1a]
  4095ed:	adc    BYTE PTR [edx+0x5f8f7b45],0xed
  4095f4:	out    dx,al
  4095f5:	aaa    
  4095f6:	mov    edx,ebx
  4095f8:	xor    eax,0x78cade18
  4095fd:	add    eax,0x831314a
  409602:	inc    edi
  409603:	hlt    
  409604:	arpl   WORD PTR [ebx],cx
  409606:	jp     0x40958f
  409608:	inc    esp
  409609:	jecxz  0x40967e
  40960b:	xchg   edi,eax
  40960c:	clc    
  40960d:	dec    esp
  40960e:	xchg   edx,eax
  40960f:	test   al,0x9e
  409611:	add    DWORD PTR [eax],esp
  409613:	outs   dx,BYTE PTR es:[esi]
  409615:	cmp    DWORD PTR [edx],edx
  409617:	mov    ds:0xc1805dbd,eax
  40961c:	cmp    eax,0x96e69d1a
  409621:	shl    DWORD PTR [eax+esi*2],1
  409624:	jbe    0x409612
  409626:	mov    al,0x33
  409628:	enter  0xbfa4,0x4a
  40962c:	fistp  WORD PTR [edx-0x37]
  40962f:	dec    DWORD PTR [esi+0x2c]
  409632:	shr    DWORD PTR gs:[eax+0xa],0x6e
  409637:	cmp    DWORD PTR [eax+edx*4+0x7d],ebp
  40963b:	(bad)  
  40963c:	pop    esi
  40963d:	in     eax,dx
  40963e:	pop    ebp
  40963f:	mov    BYTE PTR [esi],dh
  409641:	pop    esp
  409642:	mov    ecx,0xa68c751b
  409647:	(bad)  
  409649:	xchg   esp,eax
  40964a:	xchg   ecx,eax
  40964b:	pop    ebx
  40964c:	push   ss
  40964d:	jecxz  0x409629
  40964f:	xchg   ebp,eax
  409650:	aam    0x85
  409652:	pop    ebp
  409653:	push   ss
  409654:	test   eax,0xdbaef516
  40965a:	sub    al,0xb2
  40965c:	pusha  
  40965d:	mov    bh,0xca
  40965f:	pop    esp
  409660:	std    
  409661:	mov    bl,0xfc
  409663:	cdq    
  409664:	and    DWORD PTR [esi-0x5d3a59bf],0xfc12dc5d
  40966e:	xor    eax,0xd6f969a
  409673:	xchg   esi,eax
  409674:	jmp    0xc103:0x43fea85f
  40967b:	mov    BYTE PTR [eax],al
  40967d:	mov    eax,0x3d4bcb70
  409682:	(bad)  
  409683:	sbb    ecx,ebx
  409685:	ficom  DWORD PTR [edx+0x0]
  409688:	mov    WORD PTR [edx+0x48],?
  40968b:	sbb    DWORD PTR [edi],ebp
  40968d:	sub    al,0x68
  40968f:	mov    ah,0x13
  409691:	cli    
  409692:	in     eax,dx
  409693:	shl    esp,0x7d
  409696:	inc    esi
  409697:	out    0x68,al
  409699:	inc    ebp
  40969a:	scas   eax,DWORD PTR es:[edi]
  40969b:	mov    BYTE PTR [edx-0x70dbce43],bl
  4096a1:	adc    DWORD PTR [edi+0x5a9f6b5e],edx
  4096a7:	and    cl,cl
  4096a9:	add    ebx,DWORD PTR [edx]
  4096ab:	sub    ebp,DWORD PTR [edx+edi*4+0x1ce42ac7]
  4096b2:	fbld   TBYTE PTR [ebx+0x218d7d50]
  4096b8:	xchg   BYTE PTR [ecx-0x1c6667de],bl
  4096be:	lock mov ebp,esi
  4096c1:	sub    BYTE PTR [edi+0x27],al
  4096c4:	or     BYTE PTR [ebp-0x1fe61a78],ch
  4096ca:	clc    
  4096cb:	mov    ch,0x47
  4096cd:	mov    BYTE PTR [edx+0x18],ch
  4096d0:	or     eax,0x17eb7d0f
  4096d5:	adc    BYTE PTR [ecx+0x46],dh
  4096d8:	scas   al,BYTE PTR es:[edi]
  4096d9:	sub    DWORD PTR [edi+0x20346565],0x3ad5c247
  4096e3:	in     al,0x18
  4096e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096e6:	fidivr DWORD PTR [edi+esi*4-0x72fcdcc]
  4096ed:	mov    ds:0x4541a2a,eax
  4096f2:	xchg   esi,eax
  4096f3:	xchg   DWORD PTR [ecx+0x6c],ecx
  4096f6:	mov    ebp,0x59c7f280
  4096fb:	sub    eax,0x45a97954
  409700:	in     al,0xda
  409702:	mov    dl,0xdc
  409704:	les    ebp,FWORD PTR [edx+0x9]
  409707:	push   ss
  409708:	pop    ds
  409709:	call   0xf84f:0x84f1fee9
  409710:	push   eax
  409711:	lahf   
  409712:	fidivr DWORD PTR [edi+0x65c79599]
  409718:	pop    ds
  409719:	sahf   
  40971a:	push   0xffffffb3
  40971c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40971d:	mov    edx,0x5b21c477
  409722:	outs   dx,BYTE PTR ds:[esi]
  409723:	sbb    eax,0xbe4f1ec
  409728:	rcr    BYTE PTR [ebx-0x22c48fe9],0x6a
  40972f:	aaa    
  409730:	mov    dl,BYTE PTR ds:0x8a0c7e33
  409736:	add    al,0x46
  409738:	mov    eax,0xbc0ac465
  40973d:	ja     0x409759
  40973f:	(bad)  
  409740:	fcom   DWORD PTR ds:0x18cb11f3
  409746:	pushw  cs
  409748:	inc    ecx
  409749:	call   DWORD PTR [edx+0x745fe5dc]
  40974f:	mov    WORD PTR [edi+0x6409a556],ss
  409755:	lods   eax,DWORD PTR ds:[esi]
  409756:	test   al,0x17
  409758:	lea    ecx,[esi-0x44aace0d]
  40975e:	lods   al,BYTE PTR ds:[esi]
  40975f:	iret   
  409760:	add    edi,DWORD PTR [ebp+esi*8+0x26ca0ebf]
  409767:	(bad)  [ebx+0x491f70c0]
  40976d:	sub    ebx,esp
  40976f:	xlat   BYTE PTR ds:[ebx]
  409770:	lock or dh,0x21
  409774:	jo     0x409768
  409776:	leave  
  409777:	cmp    esp,eax
  409779:	aas    
  40977a:	lock xchg edi,eax
  40977c:	xchg   ecx,eax
  40977d:	int    0x6c
  40977f:	dec    esp
  409780:	jb     0x409741
  409782:	cmc    
  409783:	aas    
  409784:	dec    esi
  409785:	xor    edi,DWORD PTR [edx]
  409787:	test   BYTE PTR [edx-0x7aad64bc],ch
  40978d:	xchg   edi,eax
  40978e:	dec    edi
  40978f:	clc    
  409790:	mov    ebx,0x7afeadb3
  409795:	mov    ebx,0x7df394b5
  40979a:	jne    0x40976c
  40979c:	cmp    al,BYTE PTR [esi]
  40979e:	popa   
  40979f:	adc    al,0xd7
  4097a1:	or     dl,dh
  4097a3:	inc    ebx
  4097a4:	xor    eax,0xad8bd37c
  4097a9:	adc    bh,BYTE PTR [ebx-0x1447f887]
  4097af:	popf   
  4097b0:	dec    edi
  4097b1:	add    eax,0x8cbe9fb0
  4097b6:	cmc    
  4097b7:	adc    esi,DWORD PTR [ebx+0x6e]
  4097ba:	jmp    0xa53b:0x9b63f560
  4097c1:	mov    ah,0xdb
  4097c3:	mov    BYTE PTR [ebp-0x7ee201c3],bl
  4097c9:	aam    0xdd
  4097cb:	mov    edi,0x53463d13
  4097d0:	mov    BYTE PTR [eax-0x4bb92438],dl
  4097d6:	repnz neg ebx
  4097d9:	jecxz  0x409791
  4097db:	adc    dh,bh
  4097dd:	mov    edx,0xb6063f34
  4097e2:	lea    ebp,[esi+0x69d7ccf0]
  4097e8:	mov    eax,?
  4097ea:	dec    eax
  4097eb:	push   ebx
  4097ec:	jne    0x409806
  4097ee:	inc    edx
  4097ef:	fsub   QWORD PTR [ebp-0x4555f530]
  4097f5:	test   DWORD PTR [ecx],edi
  4097f7:	call   DWORD PTR [ebx+ecx*2+0x506074c]
  4097fe:	lds    ebx,FWORD PTR [esi+0x6473a296]
  409804:	les    esp,FWORD PTR [esi]
  409806:	pop    edx
  409807:	add    DWORD PTR [eax+0x346d0720],0x9fce50c1
  409811:	or     ch,dl
  409813:	adc    BYTE PTR [eax+0x1351289d],al
  409819:	cmp    al,0xd7
  40981b:	xchg   bl,dl
  40981d:	jp     0x4097bb
  40981f:	inc    eax
  409820:	adc    DWORD PTR [edi-0x3],ebp
  409823:	jg     0x4097af
  409825:	mov    bl,0xcf
  409827:	inc    edi
  409828:	jmp    0x380:0x138965d0
  40982f:	inc    edi
  409830:	es pop eax
  409832:	aaa    
  409833:	adc    BYTE PTR [edx],bl
  409835:	mov    ecx,0x8687fc32
  40983a:	mov    ds:0xb4720807,eax
  40983f:	mov    ebp,0x7e87e69a
  409844:	pop    es
  409845:	cmp    BYTE PTR [eax+ebx*2-0x72],bl
  409849:	in     al,0xeb
  40984b:	inc    eax
  40984c:	dec    ecx
  40984d:	jmp    0xc6057cb0
  409852:	jnp    0x40983a
  409854:	(bad)  
  409855:	inc    esi
  409856:	xchg   edx,esi
  409858:	xor    al,0xc
  40985a:	leave  
  40985b:	adc    ah,bl
  40985d:	mov    bh,0xa1
  40985f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409860:	fs or  cl,bh
  409863:	pop    eax
  409864:	push   edx
  409865:	pop    edx
  409866:	(bad)  
  409867:	push   ebx
  409868:	mov    esp,0x5af09370
  40986d:	lock mov cl,0x27
  409870:	(bad)  
  409871:	out    0x8,eax
  409873:	loopne 0x4098e1
  409875:	cdq    
  409876:	fcomp  QWORD PTR [esi]
  409878:	push   0x78028be0
  40987d:	push   ds
  40987e:	popf   
  40987f:	mov    DWORD PTR [eax-0x570bd57f],esp
  409885:	jl     0x409849
  409887:	div    dl
  409889:	out    dx,al
  40988a:	and    al,0xae
  40988c:	mov    eax,0x5fcfe022
  409891:	xlat   BYTE PTR ds:[ebx]
  409892:	call   FWORD PTR [ecx-0x67a6f11c]
  409898:	gs mov ebp,ss
  40989b:	sub    ebx,DWORD PTR [esi+0x5]
  40989e:	imul   ecx,DWORD PTR [ebx-0xb],0xa649fe4d
  4098a5:	push   cs
  4098a6:	call   0xfdfc:0xdbd2d555
  4098ad:	mov    ds,WORD PTR [eax-0x236d933c]
  4098b3:	xchg   esp,eax
  4098b4:	sub    ebx,0x9
  4098b7:	mov    ss,edx
  4098b9:	sub    DWORD PTR [eax],esi
  4098bb:	mov    edi,0x86f50d6f
  4098c0:	add    eax,0xdf202dc0
  4098c5:	pop    ds
  4098c6:	outs   dx,BYTE PTR ds:[esi]
  4098c7:	xchg   ch,dh
  4098c9:	xchg   esp,eax
  4098ca:	mov    esi,0x5c71e0d8
  4098cf:	push   ss
  4098d0:	mov    eax,0x35939ed0
  4098d5:	mov    esp,edx
  4098d7:	(bad)  
  4098d8:	cmp    al,0x62
  4098da:	cmp    eax,0xd7b64335
  4098df:	nop
  4098e0:	jns    0x409863
  4098e2:	lock imul ebx,DWORD PTR [esi],0x65eea9aa
  4098e9:	(bad)  
  4098ea:	dec    ebp
  4098eb:	test   BYTE PTR [esi+0x12ca1322],dl
  4098f1:	xchg   edx,eax
  4098f2:	and    eax,0x5b54ceec
  4098f7:	(bad)  
  4098f8:	repnz mov ss,WORD PTR [ecx-0x16dba24d]
  4098ff:	test   bl,0xa6
  409902:	fcomp  QWORD PTR [ebp-0x57]
  409905:	xor    ch,BYTE PTR [edi+0x1a]
  409908:	push   edi
  409909:	mov    bl,0x9
  40990b:	ret    
  40990c:	inc    esi
  40990d:	push   ebp
  40990e:	aaa    
  40990f:	pop    esp
  409910:	cmp    dh,BYTE PTR [ecx+0x1bf9d7ed]
  409916:	pop    edi
  409917:	out    0xed,al
  409919:	lock sub BYTE PTR [ebx+0x35ca0ca8],0x98
  409921:	div    BYTE PTR [eax+0x14b38792]
  409927:	mov    esp,0x1511c38c
  40992c:	rcr    eax,0x12
  40992f:	iret   
  409930:	xchg   esp,eax
  409931:	xor    esi,ebp
  409933:	mov    esp,0xc819a942
  409938:	pop    edx
  409939:	jae    0x4099b8
  40993b:	sbb    eax,0xb284c6ec
  409940:	pop    edi
  409941:	add    ch,BYTE PTR [ebx-0x6a141cc5]
  409947:	mov    esi,0x51d41457
  40994c:	mov    al,0x1d
  40994e:	retf   0xae74
  409951:	cmp    dh,BYTE PTR [edi]
  409953:	and    eax,0x143ef248
  409958:	into   
  409959:	xchg   esp,eax
  40995a:	jmp    0x8b34:0x2e4d865a
  409961:	nop
  409962:	and    eax,0x99d18510
  409967:	add    dh,ah
  409969:	shl    BYTE PTR [edx+0x75],cl
  40996c:	enter  0xe5a1,0xa0
  409970:	jne    0x40993e
  409972:	fdiv   QWORD PTR [eax+edx*1]
  409975:	sub    BYTE PTR [eax+0x3cc18504],dh
  40997b:	daa    
  40997c:	or     al,0xf5
  40997e:	sub    esp,DWORD PTR ss:[ebx+0x8]
  409982:	out    dx,eax
  409983:	jne    0x4099a4
  409985:	repnz mov ecx,0xf465ba92
  40998b:	out    0x8b,al
  40998d:	int3   
  40998e:	jg     0x40991a
  409990:	sub    eax,edi
  409992:	mov    DWORD PTR [eax],eax
  409994:	mov    eax,0x4a8137f1
  409999:	push   esi
  40999a:	mov    edx,0x6808b54a
  40999f:	push   ebp
  4099a0:	dec    ebp
  4099a1:	inc    eax
  4099a2:	ins    BYTE PTR es:[edi],dx
  4099a3:	fstp   st(6)
  4099a5:	add    al,0x69
  4099a7:	add    eax,0x3f2108a1
  4099ac:	pop    esi
  4099ad:	repnz pop edx
  4099af:	mov    bl,0xd2
  4099b1:	push   ebx
  4099b2:	sub    BYTE PTR [edi-0x1c],0xd9
  4099b6:	inc    ebx
  4099b7:	sti    
  4099b8:	(bad)  
  4099b9:	fdivr  QWORD PTR [edx-0x18]
  4099bc:	lods   al,BYTE PTR ds:[esi]
  4099bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099be:	nop
  4099bf:	rcr    edx,0xf5
  4099c2:	xchg   ecx,eax
  4099c3:	push   ds
  4099c4:	adc    eax,0x98531207
  4099c9:	xor    ch,BYTE PTR [esi+0x1e792e14]
  4099cf:	dec    esp
  4099d0:	push   ecx
  4099d1:	cwde   
  4099d2:	inc    edi
  4099d3:	jg     0x4099c4
  4099d5:	xchg   ebx,eax
  4099d6:	sub    al,0x27
  4099d8:	fistp  WORD PTR [ebp+0x10]
  4099db:	call   0xa499866d
  4099e0:	jb     0x409a25
  4099e2:	jae    0x4099e8
  4099e4:	dec    esi
  4099e5:	sahf   
  4099e6:	ins    BYTE PTR es:[edi],dx
  4099e7:	cmovg  ebp,DWORD PTR [ecx]
  4099ea:	ror    BYTE PTR [edi-0x62f68745],0x78
  4099f1:	push   ebp
  4099f2:	xor    ch,BYTE PTR [eax-0x18cb2b89]
  4099f8:	fmulp  st(6),st
  4099fa:	push   esp
  4099fb:	mov    ds:0xda18a7f0,eax
  409a00:	push   ebx
  409a01:	iret   
  409a02:	call   0xcef3016a
  409a07:	in     al,0xa4
  409a09:	out    0xe,eax
  409a0b:	jno    0x409a61
  409a0d:	rcl    esp,cl
  409a0f:	jne    0x409a09
  409a11:	fild   WORD PTR [eax-0x4e]
  409a14:	cmp    ch,BYTE PTR [ecx+0x597d0bb1]
  409a1a:	sar    bh,1
  409a1c:	(bad)  
  409a1e:	jecxz  0x409a53
  409a20:	adc    BYTE PTR [eax+0x0],dh
  409a23:	jne    0x409a04
  409a25:	out    0x6f,al
  409a27:	pop    esi
  409a28:	and    eax,0xbf966dfb
  409a2d:	adc    BYTE PTR [eax],al
  409a2f:	mov    ax,ds:0x5fab7419
  409a35:	out    dx,eax
  409a36:	and    eax,eax
  409a38:	xchg   BYTE PTR [eax+esi*1],al
  409a3b:	mov    cl,0x70
  409a3d:	leave  
  409a3e:	fsubr  st(0),st
  409a40:	pop    edx
  409a41:	and    dl,BYTE PTR [edi-0x2f743c2b]
  409a47:	retf   
  409a48:	cdq    
  409a49:	ss cwde 
  409a4b:	hlt    
  409a4c:	inc    edi
  409a4d:	mov    dh,BYTE PTR [ebp-0x66]
  409a50:	call   0x21ac979b
  409a55:	and    al,0x64
  409a57:	cmp    ebx,DWORD PTR [edi+0x32]
  409a5a:	adc    eax,0x1fa13bd1
  409a5f:	mov    esp,0x4d9457b3
  409a64:	gs sbb ch,al
  409a67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a68:	out    0x85,al
  409a6a:	pop    es
  409a6b:	inc    BYTE PTR [ebx]
  409a6d:	mov    edi,0xe466de2e
  409a72:	sbb    eax,0xe905ca76
  409a77:	(bad)  [edx+0x6c]
  409a7a:	sbb    DWORD PTR [edi+0xe166b38],eax
  409a80:	add    eax,0xe3481d00
  409a85:	out    dx,eax
  409a86:	inc    edx
  409a87:	adc    ch,BYTE PTR [edi+0x2f]
  409a8a:	cmc    
  409a8b:	arpl   WORD PTR [ecx-0x1133c3c5],dx
  409a91:	mov    bl,0x56
  409a93:	add    esp,DWORD PTR [edi-0x23c990e5]
  409a99:	jo     0x409ac2
  409a9b:	mov    eax,0xbe48ba
  409aa0:	and    dh,0xb7
  409aa3:	adc    dl,bh
  409aa5:	pop    DWORD PTR [edi]
  409aa7:	arpl   WORD PTR [eax+ecx*4-0x5d91c0f2],sp
  409aae:	inc    edi
  409aaf:	gs ret 
  409ab1:	jle    0x409b07
  409ab3:	test   DWORD PTR [ecx+0x7c],edx
  409ab6:	test   eax,0xa937c250
  409abb:	mov    dh,0xd2
  409abd:	loop   0x409b1d
  409abf:	je     0x409b08
  409ac1:	push   esp
  409ac2:	mov    BYTE PTR [edx+0x59],ch
  409ac5:	xor    DWORD PTR [edi+0x24],0x34
  409ac9:	aam    0xde
  409acb:	lahf   
  409acc:	sub    eax,0x4d872527
  409ad2:	xchg   ebp,eax
  409ad3:	xor    edx,0x7583be0d
  409ad9:	test   DWORD PTR [edi-0x57],esi
  409adc:	push   esp
  409add:	out    dx,al
  409ade:	add    al,0x25
  409ae0:	out    0xa8,eax
  409ae2:	(bad)  
  409ae3:	lea    ecx,ds:0x5c536e3
  409ae9:	stos   BYTE PTR es:[edi],al
  409aea:	clc    
  409aeb:	shl    DWORD PTR [ebx+0x4c932fc5],1
  409af1:	addr16 mov ds:0x7ea2,eax
  409af5:	inc    edx
  409af6:	test   BYTE PTR [ecx-0x28],bh
  409af9:	mov    esp,0x2a57f661
  409afe:	dec    esp
  409aff:	mov    ah,0x65
  409b01:	shr    BYTE PTR [edx+0x1c],0xaa
  409b05:	mov    ch,0xd9
  409b07:	jmp    0x581eba0b
  409b0c:	mov    edi,0xa3f5972
  409b11:	inc    ebp
  409b12:	mov    edx,0x59a3d52e
  409b17:	loope  0x409b6f
  409b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b1a:	stos   DWORD PTR es:[edi],eax
  409b1b:	leave  
  409b1c:	jnp    0x409b1b
  409b1e:	add    cl,BYTE PTR [edx-0xc308065]
  409b24:	push   edi
  409b25:	dec    ebp
  409b26:	popa   
  409b27:	cmp    DWORD PTR [edx-0x4b],ebx
  409b2a:	mov    ecx,0xebd18a87
  409b2f:	cld    
  409b30:	dec    esp
  409b31:	sbb    DWORD PTR [edi-0x23],0xffffffd7
  409b35:	aas    
  409b36:	or     ecx,DWORD PTR [ebp-0x7c]
  409b39:	das    
  409b3a:	mov    ah,BYTE PTR [ebp+0x4588a43e]
  409b40:	hlt    
  409b41:	push   es
  409b42:	pop    edx
  409b43:	push   0xafb13689
  409b48:	stos   BYTE PTR es:[edi],al
  409b49:	sbb    BYTE PTR [ebx],ah
  409b4b:	jno    0x409b63
  409b4d:	js     0x409b5c
  409b4f:	push   esi
  409b50:	and    cl,al
  409b52:	xchg   esi,eax
  409b53:	sbb    ecx,DWORD PTR [ebx]
  409b55:	xor    al,0xd1
  409b57:	(bad)  
  409b58:	sub    ebx,DWORD PTR [ebx+0xa0c6aa8]
  409b5e:	fisttp WORD PTR [ebp-0x344a322]
  409b64:	cli    
  409b65:	push   esp
  409b66:	sbb    BYTE PTR [eax+0x6a],0x66
  409b6a:	adc    dl,BYTE PTR [esi+0x6026981b]
  409b70:	cdq    
  409b71:	sahf   
  409b72:	push   ecx
  409b73:	sbb    eax,DWORD PTR [ebx+0x50]
  409b76:	pushf  
  409b77:	nop
  409b78:	inc    ebp
  409b79:	adc    al,0x80
  409b7b:	push   0x4c
  409b7d:	push   edx
  409b7e:	cwde   
  409b7f:	jmp    0xd0f98ef8
  409b84:	push   0x1b
  409b86:	xor    eax,0x192db8aa
  409b8b:	pop    ecx
  409b8c:	adc    dh,BYTE PTR [ebx]
  409b8e:	jl     0x409b46
  409b90:	xchg   esi,eax
  409b91:	mov    WORD PTR [eax-0x7f],cs
  409b94:	jp     0x409b3f
  409b96:	in     al,0xcc
  409b98:	xor    eax,0x90af56f1
  409b9d:	push   ebx
  409b9e:	or     al,0x6d
  409ba0:	sub    BYTE PTR [ecx+edx*2],bh
  409ba3:	or     cl,BYTE PTR [esi+0x3d2ece40]
  409ba9:	ja     0x409c2a
  409bab:	into   
  409bac:	xor    esi,ebp
  409bae:	lds    esi,FWORD PTR [edx+0x1b801539]
  409bb4:	dec    ebp
  409bb5:	and    eax,0x8627c388
  409bba:	pusha  
  409bbb:	push   eax
  409bbc:	pop    es
  409bbd:	mov    eax,ds:0xdeb489c8
  409bc2:	or     DWORD PTR [esi-0x6a],0x4d4a2681
  409bc9:	in     al,dx
  409bca:	jle    0x409c1d
  409bcc:	lock mov DWORD PTR [esi],0x40c7620b
  409bd3:	sahf   
  409bd4:	leave  
  409bd5:	pop    ecx
  409bd6:	int3   
  409bd7:	mov    dh,0xa8
  409bd9:	arpl   WORD PTR [edx+0x25],cx
  409bdc:	mov    dh,0x4b
  409bde:	mov    esp,0x294bdded
  409be3:	popf   
  409be4:	or     bl,BYTE PTR cs:[edi]
  409be7:	mov    ch,0x66
  409be9:	data16 sub ah,BYTE PTR [ecx]
  409bec:	aas    
  409bed:	inc    esp
  409bee:	lods   al,BYTE PTR ds:[esi]
  409bef:	lock hlt 
  409bf1:	outs   dx,BYTE PTR ds:[esi]
  409bf2:	cld    
  409bf3:	outs   dx,DWORD PTR ds:[esi]
  409bf4:	sar    BYTE PTR [ebx-0x4e85b3e3],0x13
  409bfb:	aam    0xee
  409bfd:	or     eax,0xff4da35e
  409c02:	add    al,0xd4
  409c04:	loope  0x409c35
  409c06:	scas   al,BYTE PTR es:[edi]
  409c07:	in     eax,0x36
  409c09:	sbb    DWORD PTR [esi],0x811f294c
  409c0f:	out    dx,al
  409c10:	pushf  
  409c11:	inc    ebp
  409c12:	cmp    al,bl
  409c14:	jns    0x409ba4
  409c16:	call   0x6d92:0xae049d47
  409c1d:	pop    ss
  409c1e:	js     0x409c03
  409c20:	mov    edx,0xab306398
  409c25:	stos   DWORD PTR es:[edi],eax
  409c26:	jmp    0x409c05
  409c28:	and    edx,DWORD PTR [ebx+0x50]
  409c2b:	fnsave [ecx]
  409c2d:	dec    eax
  409c2e:	aas    
  409c2f:	fcom   DWORD PTR [eax+0x3a]
  409c32:	in     al,0xdc
  409c34:	cmp    esi,edx
  409c36:	outs   dx,DWORD PTR ds:[esi]
  409c37:	and    DWORD PTR [ebp+0x143feadf],ecx
  409c3d:	mov    edi,0x67c050ab
  409c42:	mov    dl,0xd
  409c44:	retf   
  409c45:	test   al,0x29
  409c47:	mov    bh,0x44
  409c49:	jmp    0x409bf0
  409c4b:	push   ebx
  409c4c:	jl     0x409c1c
  409c4e:	ret    0x213
  409c51:	or     esp,DWORD PTR fs:[edx]
  409c54:	xchg   esi,eax
  409c55:	js     0x409c79
  409c57:	and    eax,DWORD PTR ds:0x61e08f9d
  409c5d:	pusha  
  409c5e:	jecxz  0x409c27
  409c60:	cmp    esp,DWORD PTR [ebp-0x1c]
  409c63:	sti    
  409c64:	repz fnstsw WORD PTR [esi-0x6a8907fb]
  409c6b:	pop    edi
  409c6c:	retf   0x5325
  409c6f:	sbb    al,0x22
  409c71:	or     dl,bh
  409c73:	push   0x19
  409c75:	jne    0x409c52
  409c77:	push   ecx
  409c78:	mov    ds,eax
  409c7a:	fisub  WORD PTR [edx+0x4b4ef5f6]
  409c80:	jno    0x409c4c
  409c82:	popa   
  409c83:	xchg   ecx,eax
  409c84:	push   ds
  409c85:	adc    esp,ebp
  409c87:	inc    esp
  409c88:	fwait
  409c89:	das    
  409c8a:	add    eax,DWORD PTR [esi-0x70959519]
  409c90:	mov    cl,0xc2
  409c92:	xchg   edx,eax
  409c93:	fisttp WORD PTR [ebx+0x594bbcc4]
  409c99:	and    edi,DWORD PTR [ecx+0xc]
  409c9c:	ins    BYTE PTR es:[edi],dx
  409c9d:	or     bl,BYTE PTR [ecx-0x1ebc9181]
  409ca3:	ins    BYTE PTR es:[edi],dx
  409ca4:	loope  0x409d10
  409ca6:	jl     0x409c86
  409ca8:	and    ebx,DWORD PTR [ecx]
  409caa:	dec    eax
  409cab:	inc    esi
  409cac:	ja     0x409cf2
  409cae:	push   esp
  409caf:	adc    al,0xc0
  409cb1:	jmp    DWORD PTR [ecx-0x5f377224]
  409cb7:	pop    ecx
  409cb8:	sub    eax,0x79bf3c0f
  409cbd:	pop    ss
  409cbe:	xor    al,0x65
  409cc0:	adc    eax,0x41107e22
  409cc5:	and    eax,0x61dc8e11
  409cca:	push   0xffffffcf
  409ccc:	inc    ebp
  409ccd:	jo     0x409c78
  409ccf:	push   edx
  409cd0:	pop    ecx
  409cd1:	ins    BYTE PTR es:[edi],dx
  409cd2:	into   
  409cd3:	test   edi,edx
  409cd5:	xor    BYTE PTR [edx],bl
  409cd7:	in     al,0x34
  409cd9:	sar    BYTE PTR [esi-0x78],0x17
  409cdd:	retf   
  409cde:	rcl    DWORD PTR [edx-0xf],0x1d
  409ce2:	mov    ecx,0xec088d32
  409ce7:	loope  0x409c9e
  409ce9:	js     0x409ca4
  409ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cec:	and    DWORD PTR [ecx+0x1c3e0b10],0x9
  409cf3:	sub    BYTE PTR [eax-0x2a],al
  409cf6:	adc    dh,BYTE PTR [ecx+0x7a]
  409cf9:	sahf   
  409cfa:	jle    0x409cc5
  409cfc:	loop   0x409cce
  409cfe:	stos   DWORD PTR es:[edi],eax
  409cff:	mov    DWORD PTR [ebp+0x54],esp
  409d02:	xor    edx,DWORD PTR [ebx]
  409d04:	fdivr  DWORD PTR [edi]
  409d06:	int3   
  409d07:	scas   al,BYTE PTR es:[edi]
  409d08:	lock and DWORD PTR [edi-0x44],0x512aa73d
  409d10:	clc    
  409d11:	mov    WORD PTR [eax-0x4caa32a2],?
  409d17:	idiv   DWORD PTR [eax+0x69e06c55]
  409d1d:	pop    edi
  409d1e:	xor    esp,0x3504282e
  409d24:	cmp    BYTE PTR [edi],al
  409d26:	and    eax,0x1bec6668
  409d2b:	jl     0x409d5d
  409d2d:	out    0x7b,eax
  409d2f:	or     DWORD PTR [ecx-0x47],0xffffffea
  409d33:	stc    
  409d34:	fnsave [ebx]
  409d36:	repnz xchg edx,eax
  409d38:	shl    DWORD PTR [ecx-0x53],cl
  409d3b:	test   BYTE PTR [eax-0x33],0x91
  409d3f:	pop    es
  409d40:	je     0x409ce4
  409d42:	outs   dx,BYTE PTR ds:[esi]
  409d43:	or     al,0x63
  409d45:	add    ah,BYTE PTR [ebx+0x29d50b73]
  409d4b:	adc    al,0xb5
  409d4d:	mov    edi,0xb9d720b7
  409d52:	nop
  409d53:	xor    al,0xc5
  409d55:	(bad)  
  409d56:	jbe    0x409d7a
  409d58:	les    edx,FWORD PTR [edi]
  409d5a:	pop    edx
  409d5b:	mov    dl,0xc0
  409d5d:	xor    ebp,DWORD PTR es:[edi]
  409d60:	dec    esp
  409d61:	(bad)  
  409d62:	cmp    BYTE PTR [ebp+0x66],dh
  409d65:	mov    edi,0x1555dfab
  409d6a:	xor    al,0xb6
  409d6c:	add    ah,0x4
  409d6f:	mov    eax,ds:0x68b26b54
  409d74:	call   0x7732:0xd506bba9
  409d7b:	xor    esi,edx
  409d7d:	arpl   WORD PTR [ecx],sp
  409d7f:	mov    eax,ds:0xfaf853b5
  409d84:	stc    
  409d85:	into   
  409d86:	cmp    BYTE PTR [edx+edx*1],bh
  409d89:	leave  
  409d8a:	(bad)  
  409d8b:	mov    BYTE PTR [ebx],ah
  409d8d:	push   esi
  409d8e:	xlat   BYTE PTR ds:[ebx]
  409d8f:	loope  0x409df0
  409d91:	xor    DWORD PTR [ecx+0x125381a3],edx
  409d97:	push   cs
  409d98:	mov    bh,0x4e
  409d9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d9b:	sub    DWORD PTR [edi+0x70],0x13
  409d9f:	es pop ebp
  409da1:	cwde   
  409da2:	lods   al,BYTE PTR ds:[esi]
  409da3:	push   eax
  409da4:	pop    ebx
  409da5:	je     0x409d35
  409da7:	ds adc ah,bh
  409daa:	fiadd  DWORD PTR [edx+0x58afbcf1]
  409db0:	imul   esi,DWORD PTR [esi],0xd7e450ca
  409db6:	in     al,dx
  409db7:	xor    esi,DWORD PTR [eax]
  409db9:	jno    0x409d55
  409dbb:	cwde   
  409dbc:	scas   al,BYTE PTR es:[edi]
  409dbd:	sub    al,0xf0
  409dbf:	add    BYTE PTR [edi-0xf],al
  409dc2:	ret    0x9355
  409dc5:	scas   al,BYTE PTR es:[edi]
  409dc6:	pop    eax
  409dc7:	pop    ebp
  409dc8:	ret    0x5bd3
  409dcb:	fwait
  409dcc:	aad    0x20
  409dce:	push   ecx
  409dcf:	xor    ebx,DWORD PTR [ebp-0x35]
  409dd2:	adc    al,0x5d
  409dd4:	sti    
  409dd5:	iret   
  409dd6:	jge    0x409e0d
  409dd8:	push   esp
  409dd9:	addr16 inc ebp
  409ddb:	ret    0xb90c
  409dde:	xor    al,0xc0
  409de0:	lds    eax,FWORD PTR [ebp-0x7c11516]
  409de6:	adc    dh,BYTE PTR [edi-0x20]
  409de9:	stos   BYTE PTR es:[edi],al
  409dea:	dec    eax
  409deb:	ins    DWORD PTR es:[edi],dx
  409dec:	out    0xa6,al
  409dee:	sar    ecx,0xa6
  409df1:	mov    bl,0xab
  409df3:	and    BYTE PTR [edi],al
  409df5:	test   al,0x51
  409df7:	sub    al,0xea
  409df9:	stos   BYTE PTR es:[edi],al
  409dfa:	xor    BYTE PTR [esi+0x5a],dl
  409dfd:	popf   
  409dfe:	iret   
  409dff:	outs   dx,BYTE PTR ds:[esi]
  409e00:	cmc    
  409e01:	dec    edi
  409e02:	(bad)  
  409e03:	aaa    
  409e04:	xchg   DWORD PTR [ebp-0x16a82a9],ecx
  409e0a:	in     al,dx
  409e0b:	das    
  409e0c:	push   edx
  409e0d:	test   eax,0xbaf9b23a
  409e12:	mov    ds:0x3df0bda7,al
  409e17:	mov    cl,0x84
  409e19:	or     DWORD PTR [edi-0x56],edi
  409e1c:	and    BYTE PTR [esi+0x5f],ch
  409e1f:	mov    ds:0x109bb843,al
  409e24:	push   ds
  409e25:	cmp    al,0xa5
  409e27:	rcr    DWORD PTR [edx+0x3e],cl
  409e2a:	dec    ecx
  409e2b:	mov    ecx,DWORD PTR [eax-0x35]
  409e2e:	in     al,0xfa
  409e30:	cdq    
  409e31:	imul   ebx,DWORD PTR [edi+edx*8],0xc
  409e35:	adc    DWORD PTR [ecx-0x6b8c4e82],ecx
  409e3b:	out    dx,eax
  409e3c:	push   ecx
  409e3d:	mov    ?,WORD PTR [esi-0x22]
  409e40:	xchg   ecx,eax
  409e41:	cmp    BYTE PTR [edx],al
  409e43:	(bad)  
  409e44:	cmp    DWORD PTR [eax*8-0x5487341d],eax
  409e4b:	repnz mov ds,esi
  409e4e:	xor    DWORD PTR [ebp+0x7a],0xffffffcf
  409e52:	mov    dl,0xa3
  409e54:	scas   al,BYTE PTR es:[edi]
  409e55:	popf   
  409e56:	pop    edx
  409e57:	pusha  
  409e58:	pop    eax
  409e59:	mov    dh,BYTE PTR [edx-0x71]
  409e5c:	lds    ebx,FWORD PTR [edi+ebp*8+0x66664749]
  409e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e64:	cwde   
  409e65:	in     eax,0x0
  409e67:	jg     0x409eb3
  409e69:	sub    esi,DWORD PTR [ebx+0x7e]
  409e6c:	aad    0x9e
  409e6e:	retf   
  409e6f:	mov    DWORD PTR [eax-0x6217d1dd],eax
  409e75:	push   ebx
  409e76:	je     0x409edf
  409e78:	cmp    ebp,DWORD PTR [ecx]
  409e7a:	xor    eax,0x1961f8e
  409e7f:	inc    ecx
  409e80:	sub    edx,DWORD PTR [esi]
  409e82:	ss hlt 
  409e84:	pop    es
  409e85:	shl    bl,cl
  409e87:	jl     0x409e88
  409e89:	and    bl,BYTE PTR [edi+0x694f739b]
  409e8f:	ja     0x409e41
  409e91:	fwait
  409e92:	mov    WORD PTR [esi],?
  409e94:	push   eax
  409e95:	cmp    ah,BYTE PTR [ebx]
  409e97:	test   al,0xaf
  409e99:	lods   al,BYTE PTR ds:[esi]
  409e9a:	mov    dl,0xdf
  409e9c:	add    dl,BYTE PTR [ebp+0x4c]
  409e9f:	push   ss
  409ea0:	gs push eax
  409ea2:	ror    DWORD PTR [ebp-0x36],0x8a
  409ea6:	loop   0x409e79
  409ea8:	mov    al,ds:0xff3aff23
  409ead:	and    edx,esp
  409eaf:	sbb    eax,0x8031463b
  409eb4:	adc    BYTE PTR [eax+0x64],0xc7
  409eb8:	arpl   WORD PTR [eax+0x46],di
  409ebb:	jl     0x409efb
  409ebd:	dec    eax
  409ebe:	or     bl,BYTE PTR [ebx-0x4a]
  409ec1:	xor    DWORD PTR [edi],0x73
  409ec4:	out    dx,al
  409ec5:	sbb    DWORD PTR [edx+0x35],edx
  409ec8:	arpl   WORD PTR [edi+ebp*8-0x27],di
  409ecc:	out    0x65,al
  409ece:	push   ebp
  409ecf:	push   0xffffffdd
  409ed1:	mov    esp,0x2a6bc9b6
  409ed6:	mov    ebx,0xd9ba7363
  409edb:	and    eax,0x82ee5eda
  409ee0:	stc    
  409ee1:	out    dx,al
  409ee2:	or     dh,BYTE PTR [esi]
  409ee4:	loope  0x409f08
  409ee6:	xlat   BYTE PTR ds:[ebx]
  409ee7:	out    0x0,al
  409ee9:	lahf   
  409eea:	pop    esp
  409eeb:	popa   
  409eec:	and    al,0x9e
  409eee:	int    0xea
  409ef0:	call   DWORD PTR [ebx+ecx*1]
  409ef3:	and    bh,dh
  409ef5:	cwde   
  409ef6:	test   DWORD PTR [esi],eax
  409ef8:	call   0xda28bb4e
  409efd:	fwait
  409efe:	addr16 mov al,ds:0x91a3
  409f02:	cmp    BYTE PTR [edx],al
  409f04:	sub    bl,BYTE PTR [edx-0x2dcbc5ff]
  409f0a:	cdq    
  409f0b:	dec    eax
  409f0c:	jbe    0x409f56
  409f0e:	fild   WORD PTR [esi+0x56]
  409f11:	xor    eax,0xfffffffc
  409f14:	outs   dx,DWORD PTR ds:[esi]
  409f15:	xchg   esi,eax
  409f16:	or     edi,0x3b
  409f19:	xor    dh,BYTE PTR [eax+0x75]
  409f1c:	or     ebx,DWORD PTR [edi]
  409f1e:	push   0x32
  409f20:	jle    0x409f49
  409f22:	bound  esp,QWORD PTR [ecx+0x18239408]
  409f28:	push   ecx
  409f29:	pop    ecx
  409f2a:	add    al,0x9a
  409f2c:	push   0x9a84ef52
  409f31:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  409f33:	xchg   edi,eax
  409f34:	popa   
  409f35:	and    dl,BYTE PTR [ecx]
  409f37:	mov    edi,0x541a98b1
  409f3c:	stc    
  409f3d:	sbb    BYTE PTR [ebp+0x77f0b50e],cl
  409f43:	jbe    0x409f55
  409f45:	inc    edx
  409f46:	lods   eax,DWORD PTR ds:[esi]
  409f47:	loopne 0x409f7c
  409f49:	dec    edi
  409f4a:	arpl   WORD PTR [edx+0xb],dx
  409f4d:	iret   
  409f4e:	in     eax,0xbd
  409f50:	sbb    BYTE PTR [esp+eax*1-0x6eb591e3],0xd9
  409f58:	add    BYTE PTR [esp+ebp*4+0x1a219890],0x48
  409f60:	push   ebx
  409f61:	push   edi
  409f62:	cmp    eax,0xf4e7850f
  409f67:	test   eax,0x8378a075
  409f6c:	push   esp
  409f6d:	test   DWORD PTR [ebx-0x484fdbe8],ebp
  409f73:	lods   eax,DWORD PTR ds:[esi]
  409f74:	jno    0x409f41
  409f76:	popa   
  409f77:	sbb    eax,0x1b9fdc86
  409f7c:	shl    BYTE PTR [eax-0x5d4684b3],1
  409f82:	imul   eax,DWORD PTR [ecx+0x398feb87],0x9700113a
  409f8c:	jecxz  0x409f22
  409f8e:	xor    eax,0x6206ea4f
  409f93:	push   edx
  409f94:	jg     0x409f22
  409f96:	mul    BYTE PTR [edi-0x76]
  409f99:	pop    esp
  409f9a:	ret    0xfa5d
  409f9d:	push   ds
  409f9e:	aaa    
  409f9f:	rol    DWORD PTR [edi-0x41ebee82],cl
  409fa5:	xor    eax,0x37f028d5
  409faa:	add    al,0xaf
  409fac:	rol    DWORD PTR [ebx],1
  409fae:	fwait
  409faf:	dec    bh
  409fb1:	pop    edx
  409fb2:	cmp    eax,0x72f67ab2
  409fb7:	fnstcw WORD PTR [bx]
  409fba:	push   cs
  409fbb:	sub    cl,al
  409fbd:	mov    ds:0x8bb9fffe,eax
  409fc2:	dec    ecx
  409fc3:	xor    DWORD PTR [ecx-0x7a79889f],edx
  409fc9:	hlt    
  409fca:	jmp    0x409fa0
  409fcc:	imul   esi,esi,0x27cfd11a
  409fd2:	jle    0x409fb8
  409fd4:	xchg   esi,eax
  409fd5:	pop    ecx
  409fd6:	or     edi,DWORD PTR [eax+eiz*4+0x5d]
  409fda:	pop    edi
  409fdb:	lods   eax,DWORD PTR ds:[esi]
  409fdc:	into   
  409fdd:	mov    BYTE PTR ds:0x4d983c79,ah
  409fe3:	jmp    0xe561d717
  409fe8:	out    0xdd,al
  409fea:	dec    edx
  409feb:	jne    0x409fcd
  409fed:	xor    ch,ah
  409fef:	jo     0x40a02a
  409ff1:	scas   eax,DWORD PTR es:[edi]
  409ff2:	dec    ecx
  409ff3:	call   0xd688:0xc6d44da8
  409ffa:	(bad)  
  409ffb:	jno    0x40a01e
  409ffd:	xchg   esi,eax
  409ffe:	jge    0x40a01c
  40a000:	sub    DWORD PTR [edx+0xa1ce1fc],0x65ecd773
  40a00a:	dec    ebp
  40a00b:	dec    ebx
  40a00c:	mov    ecx,0x4a1896dc
  40a011:	pop    ss
  40a012:	pop    es
  40a013:	jp     0x40a02e
  40a015:	in     al,dx
  40a016:	jno    0x40a03d
  40a018:	cdq    
  40a019:	sub    eax,0x62eeee10
  40a01e:	xor    al,0xc7
  40a020:	push   ebp
  40a021:	pop    edx
  40a022:	mov    esi,0xd38465b1
  40a027:	sbb    esi,DWORD PTR [edx+esi*8-0xb]
  40a02b:	mov    al,0xe2
  40a02d:	xchg   ecx,eax
  40a02e:	add    ch,dl
  40a030:	pop    esi
  40a031:	(bad)  
  40a032:	cmc    
  40a033:	call   0xdc90:0x744cd42b
  40a03a:	mov    ebp,0x88c434dd
  40a03f:	jae    0x40a094
  40a041:	xchg   edx,eax
  40a042:	jno    0x40a059
  40a044:	int    0xcc
  40a046:	iret   
  40a047:	sub    al,0xe
  40a049:	xor    dl,al
  40a04b:	adc    BYTE PTR [ecx+0x5],ch
  40a04e:	leave  
  40a04f:	stos   DWORD PTR es:[edi],eax
  40a050:	repnz imul ecx,DWORD PTR [edi-0x3ea8b4b3],0xffffff8e
  40a058:	gs pop eax
  40a05a:	mov    edi,0xf62fd7f2
  40a05f:	jp     0x40a051
  40a061:	ins    BYTE PTR es:[edi],dx
  40a062:	call   0x9736:0xef41b87c
  40a069:	clc    
  40a06a:	inc    esi
  40a06b:	fsubr  QWORD PTR [ecx-0x62f1b8ce]
  40a071:	fxch   st(2)
  40a073:	and    DWORD PTR [ecx-0x75],ebx
  40a076:	and    ah,BYTE PTR [esi]
  40a078:	pop    ebx
  40a079:	lds    edx,FWORD PTR [esi+0x5e]
  40a07c:	xchg   esp,eax
  40a07d:	or     al,0x57
  40a07f:	pop    eax
  40a080:	mov    bl,0xe
  40a082:	fisub  WORD PTR [ebx-0x3d]
  40a085:	push   edi
  40a086:	repnz and DWORD PTR [edi],ebp
  40a089:	gs inc ecx
  40a08b:	fsubr  DWORD PTR [edx+0x25e633f8]
  40a091:	cs add eax,0xa024cc1b
  40a097:	adc    ah,BYTE PTR [ecx+eax*8-0x42697dda]
  40a09e:	xlat   BYTE PTR ds:[ebx]
  40a09f:	rcl    ebp,1
  40a0a1:	xchg   edi,eax
  40a0a2:	sub    DWORD PTR [ebx],ecx
  40a0a4:	fidiv  DWORD PTR [edi-0x7348e3ba]
  40a0aa:	xchg   edx,eax
  40a0ab:	call   0x44ac:0xef731261
  40a0b2:	loop   0x40a059
  40a0b4:	mov    esp,0x2e49ada2
  40a0b9:	dec    esp
  40a0ba:	lods   eax,DWORD PTR ds:[esi]
  40a0bb:	mov    esp,0x7bbb626b
  40a0c0:	inc    esi
  40a0c1:	xchg   BYTE PTR [ebp-0x12489f3b],dl
  40a0c7:	jp     0x40a0cd
  40a0c9:	lea    edi,[eax-0x50]
  40a0cc:	pop    esi
  40a0cd:	jbe    0x40a0c3
  40a0cf:	cdq    
  40a0d0:	jle    0x40a0a5
  40a0d2:	neg    BYTE PTR [edi]
  40a0d4:	cmp    eax,0x3f1813f7
  40a0d9:	mov    bl,BYTE PTR [ebx+0x3ff36743]
  40a0df:	test   al,0x52
  40a0e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0e2:	jns    0x40a0ce
  40a0e4:	call   0xef66:0x82b890e7
  40a0eb:	pop    esi
  40a0ec:	xor    ch,cl
  40a0ee:	jne    0x40a0fb
  40a0f0:	push   ebp
  40a0f1:	inc    ebx
  40a0f2:	mov    al,0xe4
  40a0f4:	xor    al,0xd
  40a0f6:	std    
  40a0f7:	stc    
  40a0f8:	add    ch,BYTE PTR [edx-0x9]
  40a0fb:	das    
  40a0fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0fd:	int3   
  40a0fe:	int3   
  40a0ff:	pop    edx
  40a100:	add    eax,ebp
  40a102:	mov    edx,0xf6db8d24
  40a107:	mov    ch,al
  40a109:	cmp    al,0x8
  40a10b:	xchg   ecx,eax
  40a10c:	mov    ebx,0x6232b0cf
  40a111:	sub    DWORD PTR [edi+ebx*1+0x9],edx
  40a115:	inc    esp
  40a116:	pop    esp
  40a117:	mov    bh,0xcc
  40a119:	and    DWORD PTR [edi+ebx*1+0x75],eax
  40a11d:	lock push ds
  40a11f:	sub    BYTE PTR [ebx],al
  40a121:	les    ebp,FWORD PTR [edi+0x3e10e8b4]
  40a127:	adc    bl,BYTE PTR [eax+0x73ab558d]
  40a12d:	frstor [esi+0x79f9440a]
  40a133:	fadd   DWORD PTR [esi+0x563205b9]
  40a139:	jbe    0x40a1a6
  40a13b:	imul   esp,DWORD PTR [edi-0x6c7de918],0x41
  40a142:	sahf   
  40a143:	xor    edi,eax
  40a145:	cmp    DWORD PTR ds:0x81976456,eax
  40a14b:	sub    DWORD PTR [esi+0x5f93367e],esi
  40a151:	mov    esi,0x84e2a844
  40a156:	add    esp,DWORD PTR [eax+ebx*2-0x348adfb4]
  40a15d:	dec    ebx
  40a15e:	dec    ecx
  40a15f:	push   0x7e
  40a161:	and    BYTE PTR [ecx-0x62],cl
  40a164:	jge    0x40a151
  40a166:	and    eax,0x99fc3a2d
  40a16b:	jae    0x40a130
  40a16d:	sar    eax,0x3d
  40a170:	int3   
  40a171:	or     bh,ch
  40a173:	or     eax,0xa3a16a3b
  40a178:	pop    ds
  40a179:	jmp    0xbebf857e
  40a17e:	jo     0x40a13e
  40a180:	push   edx
  40a181:	sbb    al,0xbd
  40a183:	xor    al,0x7b
  40a185:	out    dx,eax
  40a186:	lods   eax,DWORD PTR ds:[esi]
  40a187:	outs   dx,BYTE PTR ds:[esi]
  40a188:	xchg   esi,eax
  40a189:	jg     0x40a152
  40a18b:	mov    al,ds:0x845e06dc
  40a190:	inc    edi
  40a191:	aam    0xf8
  40a193:	mov    esp,0x659106b1
  40a198:	popf   
  40a199:	rol    DWORD PTR [eax+ecx*8-0x6f7e91de],0x51
  40a1a1:	test   al,0xa5
  40a1a3:	in     al,0x3a
  40a1a5:	and    ebx,DWORD PTR [ecx]
  40a1a7:	sub    eax,0x6f695e11
  40a1ac:	(bad)  
  40a1ad:	test   eax,0x9ef7b610
  40a1b2:	das    
  40a1b3:	jmp    0x40a203
  40a1b5:	cmp    esi,ebp
  40a1b7:	xchg   esp,eax
  40a1b8:	mov    ds:0x4041d5dd,al
  40a1bd:	mov    eax,ds:0x1d2f2062
  40a1c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1c3:	lods   eax,DWORD PTR ds:[esi]
  40a1c4:	push   ss
  40a1c5:	shr    BYTE PTR [esi+0x3c],0xd3
  40a1c9:	cmp    bl,ah
  40a1cb:	sbb    al,0x94
  40a1cd:	pop    ds
  40a1ce:	clc    
  40a1cf:	xchg   ebp,eax
  40a1d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1d1:	scas   eax,DWORD PTR es:[edi]
  40a1d2:	setb   dl
  40a1d5:	pop    es
  40a1d6:	ja     0x40a160
  40a1d8:	test   al,0xa1
  40a1da:	cmp    eax,0xded97931
  40a1df:	stos   BYTE PTR es:[edi],al
  40a1e0:	and    dl,0x30
  40a1e3:	sub    DWORD PTR [ebx+0x3d],ecx
  40a1e6:	pop    ds
  40a1e7:	ror    BYTE PTR [eax],1
  40a1e9:	gs (bad) 
  40a1eb:	lahf   
  40a1ec:	data16 add al,0x6e
  40a1ef:	aaa    
  40a1f0:	gs pop edx
  40a1f2:	int3   
  40a1f3:	test   al,0x5a
  40a1f5:	pop    edi
  40a1f6:	cmp    ebp,DWORD PTR [ebp+ecx*8+0x469aa919]
  40a1fd:	(bad)  
  40a1ff:	cmp    ecx,DWORD PTR [esp+esi*2+0x3f]
  40a203:	mov    cl,0xb1
  40a205:	sbb    DWORD PTR [eax+0x74],0x406a4d2b
  40a20c:	xchg   ebp,eax
  40a20d:	retf   0x9348
  40a210:	mov    ebp,0x259a48fd
  40a215:	cmp    BYTE PTR [ebx],bl
  40a217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a218:	rcr    BYTE PTR ds:0x833f5da0,0xf6
  40a21f:	inc    ecx
  40a220:	aas    
  40a221:	(bad)
  40a225:	enter  0x3d91,0x1c
  40a229:	lahf   
  40a22a:	xor    dl,al
  40a22c:	ins    BYTE PTR es:[edi],dx
  40a22d:	pop    ebx
  40a22e:	sub    ebp,ebx
  40a230:	retf   
  40a231:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40a233:	ins    BYTE PTR es:[edi],dx
  40a234:	and    DWORD PTR [eax-0x460eb8b],edi
  40a23a:	stos   DWORD PTR es:[edi],eax
  40a23b:	fidivr DWORD PTR [eax-0x4f]
  40a23e:	mov    eax,ds:0x4800fb1e
  40a243:	cmp    DWORD PTR [edi+eax*1],0x600915d6
  40a24a:	pop    edi
  40a24b:	in     al,0x78
  40a24d:	inc    edi
  40a24e:	pop    eax
  40a24f:	adc    DWORD PTR [ebx+0x50],esi
  40a252:	div    dh
  40a254:	fdiv   QWORD PTR [esp+ebp*4]
  40a257:	or     ecx,DWORD PTR [ebx+0x68]
  40a25a:	inc    edx
  40a25b:	jg     0x40a1f7
  40a25d:	fld    QWORD PTR [eax]
  40a25f:	xor    ebp,DWORD PTR [esi+0x7b]
  40a262:	push   ss
  40a263:	push   ebx
  40a264:	cdq    
  40a265:	push   0xffffffcd
  40a267:	add    al,0x43
  40a269:	xor    DWORD PTR [ebx+edx*2-0x5b],edi
  40a26d:	push   esp
  40a26e:	fiadd  DWORD PTR [edi+0x41906a4b]
  40a274:	push   ss
  40a275:	push   es
  40a276:	scas   al,BYTE PTR es:[edi]
  40a277:	les    ecx,FWORD PTR [ebx+edi*2+0x42fb2afb]
  40a27e:	mov    ch,0xf2
  40a280:	pusha  
  40a281:	pop    esi
  40a282:	lods   al,BYTE PTR ds:[esi]
  40a283:	std    
  40a284:	mov    eax,ds:0xa14efbd9
  40a289:	in     eax,dx
  40a28a:	jo     0x40a27f
  40a28c:	shl    BYTE PTR [esi],0x36
  40a28f:	aam    0xac
  40a291:	jmp    0x40a309
  40a293:	sbb    cl,BYTE PTR [eax-0x74dd8089]
  40a299:	test   BYTE PTR [ebx-0x7a],0x1a
  40a29d:	rcl    DWORD PTR [esi+eiz*2+0x13],1
  40a2a1:	jp     0x40a2f3
  40a2a3:	sbb    DWORD PTR [edx],0x24f933cd
  40a2a9:	sub    al,0x69
  40a2ab:	je     0x40a240
  40a2ad:	int    0x5d
  40a2af:	mov    esp,0xc233d7f5
  40a2b4:	add    BYTE PTR [edx+0x77],dh
  40a2b7:	out    dx,eax
  40a2b8:	pop    ecx
  40a2b9:	jns    0x40a27a
  40a2bb:	xchg   edi,edi
  40a2bd:	mov    dl,0x70
  40a2bf:	jo     0x40a2d8
  40a2c1:	and    bl,bh
  40a2c3:	pop    es
  40a2c4:	dec    ebx
  40a2c6:	cwde   
  40a2c7:	test   al,0xfd
  40a2c9:	mov    ch,0xd
  40a2cb:	sbb    eax,ecx
  40a2cd:	pop    ebp
  40a2ce:	aam    0x4d
  40a2d0:	retf   
  40a2d1:	cwde   
  40a2d2:	retf   
  40a2d3:	nop
  40a2d4:	sub    al,0x78
  40a2d6:	mov    ds:0x73c130e5,al
  40a2db:	shl    bh,cl
  40a2dd:	inc    ecx
  40a2de:	jge    0x40a2c5
  40a2e0:	push   ss
  40a2e1:	fisubr DWORD PTR gs:[ebp+0x32]
  40a2e5:	dec    esi
  40a2e6:	xor    eax,0x876aa358
  40a2eb:	add    eax,esp
  40a2ed:	sbb    al,0x43
  40a2ef:	xchg   esi,eax
  40a2f0:	(bad)  
  40a2f1:	fidiv  DWORD PTR [ecx]
  40a2f3:	pop    esi
  40a2f4:	test   BYTE PTR [ebx-0x63],0x36
  40a2f8:	or     eax,0x9bb41007
  40a2fd:	in     al,dx
  40a2fe:	sar    BYTE PTR [eax-0x57b4e969],cl
  40a304:	stc    
  40a305:	retf   
  40a306:	jge    0x40a2e0
  40a308:	push   ecx
  40a309:	dec    esi
  40a30a:	fadd   DWORD PTR [esi]
  40a30c:	ret    0xf5f1
  40a30f:	mov    ebx,0x1437acbe
  40a314:	xchg   esp,eax
  40a315:	xchg   edi,eax
  40a316:	add    eax,0x1a9a5fbe
  40a31b:	and    eax,DWORD PTR [ebp+0x11]
  40a31e:	xor    bh,BYTE PTR [edx+0x566851f9]
  40a324:	xchg   BYTE PTR [esi-0x4400a289],dl
  40a32a:	je     0x40a2ca
  40a32c:	xchg   ebx,eax
  40a32d:	jo     0x40a372
  40a32f:	mov    ch,0x9c
  40a331:	push   ds
  40a332:	jmp    0x75564b20
  40a337:	mov    dl,0x7e
  40a339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a33a:	clc    
  40a33b:	mov    cl,ch
  40a33d:	xchg   edi,eax
  40a33e:	pop    ecx
  40a33f:	mov    ds:0xd3dbfddd,al
  40a344:	inc    ecx
  40a345:	xchg   DWORD PTR ds:0xabb28fc8,ebp
  40a34b:	xor    eax,DWORD PTR [ebx]
  40a34d:	and    al,0x2
  40a34f:	pop    edx
  40a350:	stc    
  40a351:	imul   esi,ecx,0x36fff164
  40a357:	push   edx
  40a358:	mov    bl,bl
  40a35a:	ins    DWORD PTR es:[edi],dx
  40a35b:	mov    WORD PTR [ebp+0x65],fs
  40a35e:	mov    al,0xa3
  40a360:	jmp    0x991a:0xc985a94b
  40a367:	clc    
  40a368:	sbb    BYTE PTR [ebx],0x34
  40a36b:	cwde   
  40a36c:	pop    ss
  40a36d:	mov    ch,0x85
  40a36f:	jecxz  0x40a3f0
  40a371:	pop    ecx
  40a372:	lds    eax,FWORD PTR [ebx+0x54]
  40a375:	test   ah,0xeb
  40a378:	mov    cl,0x56
  40a37a:	pop    ds
  40a37b:	and    eax,0xa32ebc33
  40a380:	loopne 0x40a32c
  40a382:	and    BYTE PTR [ecx-0x73d37b0d],ah
  40a388:	push   0xffffffeb
  40a38a:	mov    eax,0xa991bfba
  40a38f:	hlt    
  40a390:	inc    eax
  40a391:	pop    es
  40a392:	mov    bl,0xbe
  40a394:	cdq    
  40a395:	xor    al,0xde
  40a397:	(bad)  
  40a398:	out    dx,al
  40a399:	adc    eax,0xfed8b21f
  40a39e:	int    0x21
  40a3a0:	sbb    bl,BYTE PTR [ebp-0x3fed8f3f]
  40a3a6:	and    al,0x1d
  40a3a9:	mov    ecx,0x1a491719
  40a3ae:	jmp    0xeb34c37d
  40a3b3:	dec    ecx
  40a3b4:	mov    edx,0x64f1a54a
  40a3b9:	out    dx,eax
  40a3ba:	outs   dx,DWORD PTR ds:[esi]
  40a3bb:	sub    bl,bl
  40a3bd:	mov    al,0x4f
  40a3bf:	adc    BYTE PTR [ebx+0xe],al
  40a3c2:	sbb    esi,esp
  40a3c4:	iret   
  40a3c5:	(bad)  
  40a3c6:	inc    ecx
  40a3c7:	jae    0x40a378
  40a3c9:	mov    eax,ds:0x66e5aa9d
  40a3ce:	or     al,0xf0
  40a3d0:	mov    ebx,0x125309bf
  40a3d5:	repnz xor al,0x9f
  40a3d8:	mov    BYTE PTR [ebx+0x44],dl
  40a3db:	push   esp
  40a3dc:	mov    dl,0x26
  40a3de:	call   0xea977ba7
  40a3e3:	retf   
  40a3e4:	or     eax,0xd8240755
  40a3e9:	sub    esp,DWORD PTR [esi]
  40a3eb:	cmp    bh,BYTE PTR [esi+0x54ab6ef8]
  40a3f1:	(bad)  
  40a3f2:	pop    esp
  40a3f3:	out    0xd1,al
  40a3f5:	imul   ebx,DWORD PTR [ecx],0xffffffe7
  40a3f8:	or     BYTE PTR [ecx+0xf],dl
  40a3fb:	mov    ah,0x6c
  40a3fd:	leave  
  40a3fe:	lods   eax,DWORD PTR ds:[esi]
  40a3ff:	outs   dx,DWORD PTR ds:[esi]
  40a400:	push   0x1ffe981d
  40a405:	sbb    eax,0xe38c252d
  40a40a:	xor    esi,ecx
  40a40c:	cdq    
  40a40d:	sbb    dh,BYTE PTR [eax]
  40a40f:	xor    bl,BYTE PTR [ebx]
  40a411:	add    al,BYTE PTR [edi]
  40a413:	mov    ah,0xf5
  40a415:	(bad)  
  40a416:	fmul   QWORD PTR [edi-0x274101b5]
  40a41c:	add    BYTE PTR [eax+0xe71c8cd],bl
  40a422:	lea    esi,[esi-0x7]
  40a425:	mov    dl,BYTE PTR [edi]
  40a427:	out    dx,al
  40a428:	sbb    al,0xd7
  40a42a:	dec    edx
  40a42b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a42c:	outs   dx,BYTE PTR ds:[esi]
  40a42d:	or     al,BYTE PTR [eax+0x12895a1c]
  40a433:	fisub  DWORD PTR [ebp+ecx*1+0x43]
  40a437:	ror    BYTE PTR [ecx],1
  40a439:	xor    eax,0x42695097
  40a43e:	nop
  40a43f:	dec    ecx
  40a440:	and    DWORD PTR [edi],esp
  40a442:	stc    
  40a443:	call   0x2b10:0xc146b9bb
  40a44a:	data16 int3 
  40a44c:	test   DWORD PTR [esp+ebp*1+0x49],edi
  40a450:	mov    edi,0x256546b2
  40a455:	cmp    BYTE PTR [eax-0x5efacf16],dl
  40a45b:	js     0x40a471
  40a45d:	repnz lahf 
  40a45f:	fs push esi
  40a461:	jle    0x40a41f
  40a463:	and    DWORD PTR [ecx-0x72],eax
  40a466:	bound  edx,QWORD PTR [edi-0x7d1bf91f]
  40a46c:	out    0x95,al
  40a46e:	lods   eax,DWORD PTR ds:[esi]
  40a46f:	xchg   esi,eax
  40a470:	jns    0x40a3f5
  40a472:	push   ecx
  40a473:	(bad)  
  40a475:	pushf  
  40a476:	cwde   
  40a477:	pop    ss
  40a478:	aas    
  40a479:	iret   
  40a47a:	xchg   esp,eax
  40a47b:	and    al,0xf0
  40a47d:	xchg   esp,eax
  40a47e:	mov    edi,0x7a562a89
  40a483:	mov    edi,0x5d472244
  40a488:	xchg   esi,eax
  40a489:	mov    al,0xf2
  40a48b:	sbb    BYTE PTR [ecx-0xe32f351],0x75
  40a492:	inc    ecx
  40a493:	outs   dx,BYTE PTR ds:[esi]
  40a494:	and    al,0x23
  40a496:	out    dx,eax
  40a497:	sbb    BYTE PTR [ebx],dl
  40a499:	mov    BYTE PTR [ebx-0x1e],ah
  40a49c:	mov    ebp,0xfd370852
  40a4a1:	ds push cs
  40a4a3:	sbb    BYTE PTR [ecx+0x78],bl
  40a4a6:	xlat   BYTE PTR gs:[ebx]
  40a4a8:	inc    edi
  40a4a9:	std    
  40a4aa:	mov    al,ch
  40a4ac:	ror    BYTE PTR [ebx+eiz*2],0x27
  40a4b0:	add    dh,BYTE PTR [ebx+0x404d2ad6]
  40a4b6:	cmp    BYTE PTR [edi],bl
  40a4b8:	xchg   edi,eax
  40a4b9:	test   DWORD PTR [eax],ebx
  40a4bb:	mov    ds:0xc8d90924,al
  40a4c0:	test   BYTE PTR [ecx+0x4c],cl
  40a4c3:	jecxz  0x40a518
  40a4c5:	xchg   edi,eax
  40a4c6:	cmp    ecx,edi
  40a4c8:	dec    ebx
  40a4c9:	mov    eax,ds:0xb516d2dc
  40a4ce:	sub    eax,0xe912c9a
  40a4d3:	jge    0x40a50f
  40a4d5:	rcl    BYTE PTR [edx+ebx*1],0x85
  40a4d9:	cmp    cl,BYTE PTR [ebx+0x5b]
  40a4dc:	jge    0x40a4c5
  40a4de:	push   esp
  40a4df:	sbb    DWORD PTR [edx*1-0x67a22c8f],0x2c
  40a4e7:	je     0x40a527
  40a4e9:	popa   
  40a4ea:	pop    ebp
  40a4eb:	clc    
  40a4ec:	xlat   BYTE PTR ds:[ebx]
  40a4ed:	jge    0x40a47d
  40a4ef:	inc    ebx
  40a4f0:	add    al,0xaf
  40a4f2:	push   0xffffff8d
  40a4f4:	iret   
  40a4f5:	inc    ecx
  40a4f6:	mul    BYTE PTR [ebx+ecx*4]
  40a4f9:	xchg   ebp,eax
  40a4fa:	pop    edi
  40a4fb:	cdq    
  40a4fc:	cs jecxz 0x40a52b
  40a4ff:	mov    eax,0x3391f00e
  40a504:	lods   eax,DWORD PTR ds:[esi]
  40a505:	add    dh,bl
  40a507:	jnp    0x40a4c4
  40a509:	lock ror DWORD PTR [ecx+0x71ebf5f3],0x64
  40a511:	imul   ecx,DWORD PTR [edx-0x30682194],0x7
  40a518:	push   ebx
  40a519:	mov    BYTE PTR [edx-0x2dd0b39f],cl
  40a51f:	push   eax
  40a520:	lods   al,BYTE PTR ds:[esi]
  40a521:	sub    eax,0x24784c9
  40a526:	cmp    esi,ebp
  40a528:	aas    
  40a529:	jmp    0x80be1d99
  40a52e:	xor    al,0x6f
  40a530:	and    DWORD PTR [esi+0x4b],esp
  40a533:	fdivr  st,st(4)
  40a535:	rol    ch,0x6
  40a538:	xor    DWORD PTR [eax-0x78],edx
  40a53b:	sar    BYTE PTR [edx+0x5e5b0466],cl
  40a541:	test   eax,0xfd5177a4
  40a546:	mov    ah,0xc2
  40a548:	mov    bl,0x4
  40a54a:	out    0x90,eax
  40a54c:	add    dl,ch
  40a54e:	ds inc edi
  40a550:	or     edx,DWORD PTR [edx]
  40a552:	adc    al,0x86
  40a554:	mov    ebx,0x43e96e7b
  40a559:	sahf   
  40a55a:	jne    0x40a5d1
  40a55c:	mov    dh,0x43
  40a55e:	adc    DWORD PTR [eax+ebp*8-0x278b0dc6],0x2d41868a
  40a569:	push   edx
  40a56a:	(bad)  
  40a56b:	xor    bh,BYTE PTR [edx-0x10289167]
  40a571:	(bad)  
  40a572:	and    al,BYTE PTR [eax]
  40a574:	aaa    
  40a575:	and    al,0x82
  40a577:	push   edi
  40a578:	add    eax,DWORD PTR [edx+0x7268dacf]
  40a57e:	clc    
  40a57f:	xor    edx,DWORD PTR [ebx+0x7b518b60]
  40a585:	push   ds
  40a586:	and    edx,DWORD PTR [eax+ebx*8-0x316b462f]
  40a58d:	out    0xbd,eax
  40a58f:	mov    ebx,0x5b36409f
  40a594:	add    bh,BYTE PTR [edi-0x27]
  40a597:	sub    dh,al
  40a599:	data16 sahf 
  40a59b:	cwde   
  40a59c:	out    dx,eax
  40a59d:	add    al,0x55
  40a59f:	fmulp  st(5),st
  40a5a1:	jecxz  0x40a533
  40a5a3:	mov    BYTE PTR [ecx-0x4e],ah
  40a5a6:	dec    ecx
  40a5a7:	jl     0x40a5b3
  40a5a9:	jge    0x40a558
  40a5ab:	dec    esp
  40a5ac:	or     eax,0xc73b9e44
  40a5b1:	fsubr  QWORD PTR [edi-0x65a31b02]
  40a5b7:	shl    DWORD PTR [eax],0x7
  40a5ba:	mov    ch,0x1f
  40a5bc:	pop    edx
  40a5bd:	test   BYTE PTR [ebp+0x2f],0x74
  40a5c1:	inc    eax
  40a5c2:	sub    dl,BYTE PTR [edi]
  40a5c4:	nop    ebp
  40a5c7:	fbstp  TBYTE PTR [esp+edx*1+0x52b0be74]
  40a5ce:	hlt    
  40a5cf:	shl    DWORD PTR [edi-0x1c],cl
  40a5d2:	cmp    eax,0xcb076426
  40a5d7:	xlat   BYTE PTR ds:[ebx]
  40a5d8:	(bad)  
  40a5d9:	mov    eax,0x7842fba5
  40a5de:	test   al,0x66
  40a5e0:	push   ecx
  40a5e1:	in     al,0x61
  40a5e3:	es add esp,esp
  40a5e6:	dec    esp
  40a5e7:	jg     0x40a56d
  40a5e9:	out    0x6f,eax
  40a5eb:	cwde   
  40a5ec:	cdq    
  40a5ed:	and    BYTE PTR cs:[ebp+ecx*4+0x2f],dh
  40a5f2:	pop    eax
  40a5f3:	mov    dh,0x74
  40a5f5:	xor    ecx,DWORD PTR [edi]
  40a5f7:	jmp    0xa4d6921f
  40a5fc:	dec    eax
  40a5fd:	pop    ebp
  40a5fe:	xor    DWORD PTR [eax],esp
  40a600:	xlat   BYTE PTR ds:[ebx]
  40a601:	pop    edi
  40a602:	and    al,0x8b
  40a604:	jb     0x40a5a7
  40a606:	inc    eax
  40a607:	xor    al,0x3e
  40a609:	fsub   DWORD PTR [ecx]
  40a60b:	adc    al,0xa4
  40a60d:	adc    BYTE PTR [ecx+ebp*8],ah
  40a610:	push   esp
  40a611:	repz mov esi,0xd3dbc43
  40a617:	sub    edx,edx
  40a619:	dec    ebp
  40a61a:	or     ebp,DWORD PTR [edx-0x62]
  40a61d:	mov    ecx,0xaf1c5c8a
  40a622:	mov    al,ds:0x596f233f
  40a627:	push   esi
  40a628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a629:	imul   eax,DWORD PTR [edx],0xffffffca
  40a62c:	cmp    bl,bl
  40a62e:	or     dh,BYTE PTR [edx]
  40a630:	fistp  QWORD PTR [ecx-0x2607d0c3]
  40a636:	cmp    edi,DWORD PTR [ecx+0x6571ac83]
  40a63c:	push   0xffffffc8
  40a63e:	xor    eax,0xf3fb0e83
  40a643:	loope  0x40a688
  40a645:	test   eax,0x2a40eb6e
  40a64a:	test   DWORD PTR [ebx-0x6a],ebx
  40a64d:	jns    0x40a613
  40a64f:	jp     0x40a608
  40a651:	mov    dl,0x68
  40a653:	jnp    0x40a639
  40a655:	rcl    esp,cl
  40a657:	jge    0x40a639
  40a659:	jle    0x40a67c
  40a65b:	test   ecx,esi
  40a65d:	popf   
  40a65e:	stos   DWORD PTR es:[edi],eax
  40a65f:	inc    edx
  40a660:	push   edx
  40a661:	add    dl,BYTE PTR [edx]
  40a663:	xlat   BYTE PTR ds:[ebx]
  40a664:	adc    al,0x8d
  40a666:	or     eax,0xeaf1f73e
  40a66b:	fidivr WORD PTR [ebx-0x6dd674e5]
  40a671:	ja     0x40a697
  40a673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a674:	add    eax,0x261796a3
  40a679:	lahf   
  40a67a:	shl    BYTE PTR [eax-0xe],cl
  40a67d:	add    DWORD PTR [ebx-0x14],ebx
  40a680:	mov    esi,0x6930547f
  40a685:	inc    edi
  40a686:	sbb    bh,dl
  40a688:	sbb    al,0xbc
  40a68a:	adc    bh,al
  40a68c:	cdq    
  40a68d:	sbb    al,0xa1
  40a68f:	inc    ecx
  40a690:	out    dx,eax
  40a691:	pop    edx
  40a692:	test   BYTE PTR [edx-0x3],ah
  40a695:	out    0xc0,al
  40a697:	arpl   WORD PTR [bp+si-0x21ab],di
  40a69c:	mov    al,0xcb
  40a69e:	jbe    0x40a71e
  40a6a0:	cdq    
  40a6a1:	retf   0xa885
  40a6a4:	or     al,0x40
  40a6a6:	mov    ebp,0xe92fecf1
  40a6ab:	icebp  
  40a6ac:	dec    esp
  40a6ad:	mov    dh,0xee
  40a6af:	les    ecx,FWORD PTR [eax-0x7b]
  40a6b2:	loop   0x40a685
  40a6b4:	out    dx,eax
  40a6b5:	je     0x40a710
  40a6b7:	scas   eax,DWORD PTR es:[edi]
  40a6b8:	or     ebx,DWORD PTR [edx+0x13]
  40a6bb:	stos   BYTE PTR es:[edi],al
  40a6bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6bd:	inc    ecx
  40a6be:	ins    BYTE PTR es:[edi],dx
  40a6bf:	mov    esi,0x8129e993
  40a6c4:	push   es
  40a6c5:	inc    eax
  40a6c6:	fidivr DWORD PTR [edi+ebp*4-0x7f1984f0]
  40a6cd:	aam    0xdb
  40a6cf:	push   ds
  40a6d0:	lock sub eax,0xcac4fc44
  40a6d6:	out    dx,eax
  40a6d7:	jl     0x40a73d
  40a6d9:	xor    DWORD PTR [ebp+eiz*1+0x3cc0b382],ebx
  40a6e0:	or     eax,0x8e7916f
  40a6e5:	je     0x40a675
  40a6e7:	sub    bh,BYTE PTR [edx]
  40a6e9:	test   DWORD PTR [edx-0x2aab3744],0xe5db0e74
  40a6f3:	out    dx,eax
  40a6f4:	or     ch,BYTE PTR [esi]
  40a6f6:	push   es
  40a6f7:	jae    0x40a759
  40a6f9:	xchg   esi,eax
  40a6fa:	add    BYTE PTR [esi-0x4f],ch
  40a6fd:	push   esi
  40a6fe:	in     al,dx
  40a6ff:	cmp    BYTE PTR [ecx],bh
  40a701:	outs   dx,DWORD PTR ds:[esi]
  40a702:	cs adc al,0x3d
  40a705:	cmp    DWORD PTR ds:0xc77ec779,ebp
  40a70b:	cmp    edx,0x8c5ecd0a
  40a711:	imul   edi,eax,0xffffffbc
  40a714:	jl     0x40a699
  40a716:	jmp    0xe750:0xdbe13130
  40a71d:	inc    esi
  40a71e:	push   0x4a784e4a
  40a723:	sub    BYTE PTR [ebx],al
  40a725:	clc    
  40a726:	push   edi
  40a727:	adc    cl,cl
  40a729:	sbb    al,0xf
  40a72b:	or     ebx,edx
  40a72d:	jb     0x40a75a
  40a72f:	mov    DWORD PTR ds:0x59025bcd,0xf94e09b1
  40a739:	lods   al,BYTE PTR ds:[esi]
  40a73a:	sub    al,0x3c
  40a73c:	or     dh,bl
  40a73e:	and    eax,0xac266e42
  40a743:	(bad)  
  40a744:	and    bh,BYTE PTR [edi+0x39]
  40a747:	test   DWORD PTR [edi],edi
  40a749:	ins    BYTE PTR es:[edi],dx
  40a74a:	xor    ah,BYTE PTR [eax]
  40a74c:	stos   DWORD PTR es:[edi],eax
  40a74d:	arpl   dx,bp
  40a74f:	lds    edi,FWORD PTR ds:0x9fe78182
  40a755:	out    dx,al
  40a756:	mov    ds:0x385b688f,eax
  40a75b:	js     0x40a767
  40a75d:	push   esp
  40a75e:	loopne 0x40a6e5
  40a760:	pop    ds
  40a761:	(bad)  
  40a762:	inc    DWORD PTR [esi+0x7c]
  40a765:	push   0xffffffc2
  40a767:	dec    eax
  40a768:	ja     0x40a7ca
  40a76a:	or     DWORD PTR [esi+0xf7c8638],ebp
  40a770:	fisubr DWORD PTR [edx]
  40a772:	aaa    
  40a773:	addr16 push edx
  40a775:	cmp    eax,DWORD PTR [edi+eax*2]
  40a778:	xchg   BYTE PTR [ecx-0x271dbf83],cl
  40a77e:	mov    al,ds:0x892269bf
  40a783:	mov    esi,0x29914e3c
  40a788:	mov    WORD PTR [ebp-0x27],ss
  40a78b:	or     ecx,DWORD PTR [eax]
  40a78d:	leave  
  40a78e:	push   edx
  40a78f:	or     bl,BYTE PTR [ecx-0x22087566]
  40a795:	(bad)  
  40a796:	jns    0x40a7cd
  40a798:	shl    BYTE PTR [ecx+0x0],0xa8
  40a79c:	or     DWORD PTR [esi],esi
  40a79e:	fs aad 0x12
  40a7a1:	leave  
  40a7a2:	call   0xf5dc:0x3a466bec
  40a7a9:	dec    ecx
  40a7aa:	pop    ecx
  40a7ab:	mov    esi,0x5bb74900
  40a7b0:	pop    ebp
  40a7b1:	mov    edx,0x8d875407
  40a7b6:	dec    BYTE PTR [ecx+0x2a31b4cd]
  40a7bc:	std    
  40a7bd:	mov    ch,0x90
  40a7bf:	xchg   DWORD PTR [edx-0x78],eax
  40a7c2:	xchg   esi,eax
  40a7c3:	mov    BYTE PTR [ebx+eax*4],dl
  40a7c6:	repnz (bad) 
  40a7c8:	rcr    BYTE PTR [eax+eiz*8-0xd],cl
  40a7cc:	in     al,dx
  40a7cd:	cmp    eax,0x222d1e46
  40a7d2:	int3   
  40a7d3:	out    dx,eax
  40a7d4:	test   DWORD PTR [edi+0x41],esi
  40a7d7:	cmp    eax,0xa3ff6858
  40a7dc:	hlt    
  40a7dd:	or     ch,BYTE PTR [ebp-0x2f]
  40a7e0:	loopne 0x40a820
  40a7e2:	rol    BYTE PTR [edi*4-0x54022d73],1
  40a7e9:	out    dx,al
  40a7ea:	pop    ss
  40a7eb:	pop    edx
  40a7ec:	out    0xf7,eax
  40a7ee:	gs adc ecx,ecx
  40a7f1:	stc    
  40a7f2:	rcl    BYTE PTR [edi],1
  40a7f4:	int3   
  40a7f5:	sbb    esp,DWORD PTR [ebx]
  40a7f7:	ret    0xa197
  40a7fa:	imul   BYTE PTR [edi-0x42]
  40a7fd:	jge    0x40a857
  40a7ff:	rcr    DWORD PTR [esi-0x1e],0x9e
  40a803:	sbb    edx,DWORD PTR [ebp-0x73]
  40a806:	and    eax,0xc9d246c2
  40a80b:	iret   
  40a80c:	pop    ebp
  40a80d:	or     al,0x55
  40a80f:	pop    ss
  40a810:	sti    
  40a811:	dec    ebp
  40a812:	mov    ds:0xc573c5b6,eax
  40a817:	mov    eax,ds:0x6edbcc31
  40a81c:	test   eax,0xe3c9574c
  40a821:	and    ch,BYTE PTR [edi+eax*1-0x4e32479a]
  40a828:	leave  
  40a829:	shl    BYTE PTR [esi],0x4f
  40a82c:	and    ah,BYTE PTR [ebx]
  40a82e:	fistp  DWORD PTR [edx-0xbef9ce4]
  40a834:	js     0x40a85e
  40a836:	sub    eax,0x3cdabca0
  40a83b:	dec    esp
  40a83c:	inc    edi
  40a83d:	fwait
  40a83e:	adc    BYTE PTR [ecx+0x50],bh
  40a841:	or     BYTE PTR [esi],0xe2
  40a844:	sbb    BYTE PTR es:[ecx+ebx*2+0xc],0x51
  40a84a:	aad    0x45
  40a84c:	mov    ecx,0xc1a24abd
  40a851:	cmp    ecx,DWORD PTR [edx+0x30c5b281]
  40a857:	jbe    0x40a894
  40a859:	nop
  40a85a:	mov    al,BYTE PTR [eax-0x29]
  40a85d:	std    
  40a85e:	dec    esp
  40a85f:	push   0x8bf5216e
  40a864:	or     esp,DWORD PTR [ebp-0x77]
  40a867:	shr    BYTE PTR [edi],1
  40a869:	cld    
  40a86a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a86b:	mov    ebx,0xe0c4edd6
  40a870:	mov    al,ds:0x79c48214
  40a875:	mov    bl,0xa3
  40a877:	clc    
  40a878:	jp     0x40a8dc
  40a87a:	xor    al,0xde
  40a87c:	retf   0xebb3
  40a87f:	fcom   QWORD PTR [ecx+0x30296be4]
  40a885:	ins    BYTE PTR es:[edi],dx
  40a886:	sbb    ebx,esp
  40a888:	(bad)  
  40a889:	scas   eax,DWORD PTR es:[edi]
  40a88a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a88b:	mov    ah,0x7c
  40a88d:	mov    esp,0x38727e79
  40a892:	push   edx
  40a893:	je     0x40a87d
  40a895:	int    0xb
  40a897:	jl     0x40a878
  40a899:	aam    0x5e
  40a89b:	xor    BYTE PTR [edi-0x10357c00],bl
  40a8a1:	dec    esp
  40a8a2:	bound  eax,QWORD PTR [ebx+0xd]
  40a8a5:	(bad)  
  40a8a6:	jne    0x40a890
  40a8a8:	push   edi
  40a8a9:	or     ebp,ebp
  40a8ab:	sub    ah,cl
  40a8ad:	les    esp,FWORD PTR [esi+0x4c224a47]
  40a8b3:	out    dx,eax
  40a8b4:	or     edi,ecx
  40a8b6:	sar    DWORD PTR [ecx-0xb],cl
  40a8b9:	popa   
  40a8ba:	inc    esp
  40a8bb:	(bad)  
  40a8bc:	std    
  40a8bd:	sbb    DWORD PTR [eax],edi
  40a8bf:	sti    
  40a8c0:	sub    ecx,DWORD PTR [eax+edi*1+0x51]
  40a8c4:	leave  
  40a8c5:	or     BYTE PTR [eax+esi*4-0x78633598],dl
  40a8cc:	pop    edx
  40a8cd:	fnsave cs:[eax+ecx*4+0x14766552]
  40a8d5:	in     al,dx
  40a8d6:	jnp    0x40a883
  40a8d8:	lock pop edx
  40a8da:	mov    ds:0x8eb1c784,eax
  40a8df:	test   al,dh
  40a8e1:	push   0xd188d02b
  40a8e6:	mov    ecx,0x4c3409c
  40a8eb:	popf   
  40a8ec:	adc    eax,0xbc44834a
  40a8f1:	ret    
  40a8f2:	(bad)  
  40a8f3:	call   0x6a09:0x7c0794b1
  40a8fa:	mov    DWORD PTR [ecx-0x47],ebx
  40a8fd:	pop    esp
  40a8fe:	das    
  40a8ff:	xchg   esp,eax
  40a900:	or     DWORD PTR [edx+ebx*4+0x29a745b0],esi
  40a907:	das    
  40a908:	mov    ecx,0x6af5fdbf
  40a90d:	mov    bh,0x93
  40a90f:	jbe    0x40a98b
  40a911:	shl    DWORD PTR [edi+ebx*1+0x4a],cl
  40a915:	sbb    BYTE PTR ds:0x89e005ab,cl
  40a91b:	fmul   QWORD PTR [ebp-0x7d]
  40a91e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a91f:	push   ds
  40a920:	jae    0x40a8e4
  40a922:	cmp    BYTE PTR [edi],0x95
  40a925:	xor    DWORD PTR [edx],esi
  40a927:	mov    cl,0x85
  40a929:	aas    
  40a92a:	xor    ebp,ebx
  40a92c:	xchg   edi,eax
  40a92d:	jbe    0x40a929
  40a92f:	push   ecx
  40a930:	push   ebp
  40a931:	dec    esi
  40a932:	add    DWORD PTR [esi+0x29e333af],ecx
  40a938:	add    BYTE PTR [edi+esi*1],ch
  40a93b:	push   ds
  40a93c:	mov    ds:0x4b58130c,al
  40a941:	fisubr DWORD PTR ss:[eax+ebp*4-0x75a47e55]
  40a949:	ret    
  40a94a:	sub    DWORD PTR [edi],esp
  40a94c:	fstp   QWORD PTR [ebp+0xd335f95]
  40a952:	jl     0x40a978
  40a954:	jbe    0x40a98c
  40a956:	test   al,0xc3
  40a958:	mov    esi,0xc91571a5
  40a95d:	jge    0x40a920
  40a95f:	scas   al,BYTE PTR es:[edi]
  40a960:	and    edx,edi
  40a962:	dec    edx
  40a963:	scas   eax,DWORD PTR es:[edi]
  40a964:	jb     0x40a972
  40a966:	jnp    0x40a8ee
  40a968:	add    bh,ah
  40a96a:	(bad)  
  40a96b:	aas    
  40a96c:	mov    al,BYTE PTR ds:0x87740c87
  40a972:	mov    ebp,DWORD PTR [ebx+0x48]
  40a975:	inc    edi
  40a976:	sub    eax,0xfae34c27
  40a97b:	leave  
  40a97c:	pushf  
  40a97d:	outs   dx,BYTE PTR ds:[esi]
  40a97e:	add    ebp,0x99aed87
  40a984:	jno    0x40a90a
  40a986:	xor    edi,DWORD PTR [esi]
  40a988:	cli    
  40a989:	inc    edx
  40a98a:	lods   al,BYTE PTR ds:[esi]
  40a98b:	fcomp  DWORD PTR [ecx-0x7cde48f7]
  40a991:	aam    0x84
  40a993:	sahf   
  40a994:	enter  0x5c81,0x9d
  40a998:	push   eax
  40a999:	js     0x40a973
  40a99b:	ja     0x40a931
  40a99d:	mov    esi,0x6adce646
  40a9a2:	dec    ebx
  40a9a3:	xchg   ebp,eax
  40a9a4:	sbb    DWORD PTR [edi],ebx
  40a9a6:	lea    ecx,[edx-0x1ebc29f8]
  40a9ac:	and    eax,0x1a8a007
  40a9b1:	dec    DWORD PTR [esi]
  40a9b3:	mov    al,0x32
  40a9b5:	and    al,0x89
  40a9b7:	repz sbb esp,DWORD PTR [ebx+eiz*4+0x30802941]
  40a9bf:	out    dx,eax
  40a9c0:	jecxz  0x40a97c
  40a9c2:	or     eax,0xbbe328ab
  40a9c7:	scas   eax,DWORD PTR es:[edi]
  40a9c8:	and    BYTE PTR [edx],cl
  40a9ca:	in     al,0x22
  40a9cc:	cmp    BYTE PTR [ecx],al
  40a9ce:	xchg   ecx,eax
  40a9cf:	mov    ebx,0xe2ca601f
  40a9d4:	(bad)  
  40a9d5:	lds    edi,FWORD PTR [esi+0x57]
  40a9d8:	daa    
  40a9d9:	xor    BYTE PTR [edi+0x5d44cf0e],bh
  40a9df:	out    0xa0,eax
  40a9e1:	das    
  40a9e2:	lock xor eax,0x6ee9214e
  40a9e8:	adc    al,cl
  40a9ea:	jmp    0xc356:0x7a5cfb49
  40a9f1:	(bad)  
  40a9f2:	jno    0x40a9a8
  40a9f4:	lods   eax,DWORD PTR fs:[esi]
  40a9f6:	xchg   DWORD PTR [ebx-0x2b],edx
  40a9f9:	fstp   QWORD PTR [edi]
  40a9fb:	mov    bl,BYTE PTR [eax+0x6a]
  40a9fe:	add    ch,BYTE PTR [ebx]
  40aa00:	rcr    DWORD PTR [ecx+0x27d2d5a0],1
  40aa06:	(bad)  
  40aa07:	mov    ds:0x1187c193,eax
  40aa0c:	ror    BYTE PTR [edi-0x61288884],1
  40aa12:	enter  0xefce,0xbc
  40aa16:	pop    ebx
  40aa17:	imul   esi,ebp,0xa23c9ea5
  40aa1d:	and    BYTE PTR [edx],ch
  40aa1f:	xor    DWORD PTR [eax],ebx
  40aa21:	mov    cr6,edi
  40aa24:	xchg   esi,eax
  40aa25:	dec    BYTE PTR [edx+0x30181680]
  40aa2b:	xor    al,0x4c
  40aa2d:	dec    edi
  40aa2e:	inc    ecx
  40aa2f:	stos   DWORD PTR es:[edi],eax
  40aa30:	mov    esp,0xa4b9d810
  40aa35:	cmp    dl,ah
  40aa37:	inc    ebp
  40aa38:	xchg   esp,eax
  40aa39:	rcr    ebx,cl
  40aa3b:	popf   
  40aa3c:	and    al,0xcb
  40aa3e:	mov    bh,0xea
  40aa40:	sub    DWORD PTR [ebp-0x75368f66],0x4dc233d9
  40aa4a:	cmp    eax,0x41606b3b
  40aa50:	cmp    eax,0x377b80c3
  40aa55:	shl    BYTE PTR [eax+0x5390ff1b],cl
  40aa5b:	dec    edi
  40aa5c:	outs   dx,DWORD PTR ds:[esi]
  40aa5d:	pop    esp
  40aa5e:	pop    esi
  40aa5f:	jp     0x40aac0
  40aa61:	js     0x40aa2e
  40aa63:	cmp    BYTE PTR [ecx+0x71e34136],al
  40aa69:	sbb    esp,DWORD PTR [edi+0x5ce7e3c8]
  40aa6f:	jns    0x40aa04
  40aa71:	cmp    edi,esp
  40aa73:	(bad)  
  40aa74:	xor    ebx,DWORD PTR [ebx]
  40aa76:	push   eax
  40aa77:	mov    ?,ecx
  40aa79:	in     al,dx
  40aa7a:	ficom  WORD PTR es:[eax]
  40aa7d:	pop    eax
  40aa7e:	sti    
  40aa7f:	inc    ecx
  40aa80:	fidivr DWORD PTR [ecx]
  40aa82:	shr    DWORD PTR [esi+0x24],cl
  40aa85:	mov    al,0x6c
  40aa87:	cmp    ch,dh
  40aa89:	hlt    
  40aa8a:	inc    esp
  40aa8b:	dec    ecx
  40aa8c:	fiadd  WORD PTR [esi]
  40aa8e:	pushf  
  40aa8f:	jae    0x40aae5
  40aa91:	es std 
  40aa93:	stc    
  40aa94:	mul    DWORD PTR [edi-0x67]
  40aa97:	pop    es
  40aa98:	hlt    
  40aa99:	jecxz  0x40ab14
  40aa9b:	jmp    0x633feef3
  40aaa0:	cs mov edi,0x3f6d1642
  40aaa6:	pop    ds
  40aaa7:	cmp    ebx,ebx
  40aaa9:	adc    ecx,DWORD PTR [esi+0xa]
  40aaac:	cwde   
  40aaad:	inc    ebp
  40aaae:	aaa    
  40aaaf:	movzx  ecx,ah
  40aab2:	stc    
  40aab3:	arpl   WORD PTR [esi+eiz*4],sp
  40aab6:	mov    ah,BYTE PTR [edx-0xe]
  40aab9:	je     0x40aa5f
  40aabb:	and    ah,0x97
  40aabe:	and    ecx,DWORD PTR [ebp-0x60f747ab]
  40aac4:	mov    BYTE PTR [esi+ebx*2+0x51f401ee],bh
  40aacb:	push   cs
  40aacc:	sbb    eax,0x52d596f8
  40aad1:	fisttp WORD PTR [ebx+edx*4-0x32012ce7]
  40aad8:	sbb    eax,0x7b920b05
  40aadd:	inc    ebp
  40aade:	iret   
  40aadf:	push   esp
  40aae0:	mov    eax,ds:0xf10d2bc1
  40aae5:	(bad)
  40aae8:	mov    cl,0xe9
  40aaea:	inc    edx
  40aaeb:	arpl   sp,dx
  40aaed:	popf   
  40aaee:	adc    dl,BYTE PTR [edx-0x736841d5]
  40aaf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaf5:	repz sub DWORD PTR [edx],eax
  40aaf8:	mov    dl,0x4e
  40aafa:	xchg   BYTE PTR [ebp+0x0],bl
  40aafd:	xlat   BYTE PTR ds:[ebx]
  40aafe:	jecxz  0x40ab39
  40ab00:	inc    ebx
  40ab01:	adc    eax,0x5adef060
  40ab06:	xchg   ebx,eax
  40ab07:	push   0xa0f3be25
  40ab0c:	push   esi
  40ab0d:	jmp    0xd81df49c
  40ab12:	adc    dh,BYTE PTR [eax]
  40ab14:	mov    bl,0x87
  40ab16:	jg     0x40ab31
  40ab18:	out    dx,al
  40ab19:	or     al,0x66
  40ab1b:	pop    ss
  40ab1c:	pop    ebp
  40ab1d:	bound  esp,QWORD PTR fs:[edx+0x262e7543]
  40ab24:	fistp  DWORD PTR [eax-0x5dcc51cc]
  40ab2a:	jge    0x40ab32
  40ab2c:	leave  
  40ab2d:	loope  0x40ab79
  40ab2f:	cmp    al,0x6c
  40ab31:	neg    DWORD PTR [eax-0x38]
  40ab34:	loopne 0x40ab86
  40ab36:	sbb    eax,0xb8cf5d3f
  40ab3b:	xchg   esi,eax
  40ab3c:	in     eax,0xfa
  40ab3e:	mov    al,ch
  40ab40:	jle    0x40ab81
  40ab42:	js     0x40aad9
  40ab44:	es repnz leave 
  40ab47:	dec    ebx
  40ab48:	in     al,0x58
  40ab4a:	add    DWORD PTR [eax-0x7685c609],eax
  40ab50:	pusha  
  40ab51:	in     al,dx
  40ab52:	cmc    
  40ab53:	nop
  40ab54:	add    edi,0x1fb11f9
  40ab5a:	inc    esp
  40ab5b:	and    DWORD PTR [esi+edi*1],ecx
  40ab5e:	popa   
  40ab5f:	fs cli 
  40ab61:	out    dx,eax
  40ab62:	das    
  40ab63:	test   al,0xbc
  40ab65:	outs   dx,DWORD PTR ds:[esi]
  40ab66:	fisub  WORD PTR [eax-0x69a19e12]
  40ab6c:	pop    ebp
  40ab6d:	fdiv   DWORD PTR [esi]
  40ab6f:	sub    dl,ch
  40ab71:	arpl   WORD PTR [esi],bp
  40ab73:	inc    ebx
  40ab74:	rcr    esi,cl
  40ab76:	or     ecx,ebx
  40ab78:	jg     0x40ab0f
  40ab7a:	(bad)  
  40ab7b:	icebp  
  40ab7c:	and    dl,cl
  40ab7e:	adc    BYTE PTR [edi+0x23],0x89
  40ab82:	jae    0x40ab67
  40ab84:	jp     0x40abf8
  40ab86:	(bad)  
  40ab88:	stos   BYTE PTR es:[edi],al
  40ab89:	aam    0x87
  40ab8b:	rol    bl,cl
  40ab8d:	(bad)  
  40ab8e:	fucomip st,st(1)
  40ab90:	push   ds
  40ab91:	repz xchg edi,eax
  40ab93:	outs   dx,DWORD PTR ds:[esi]
  40ab94:	fcom   DWORD PTR [eax]
  40ab96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab97:	inc    ebp
  40ab98:	lods   eax,DWORD PTR ds:[esi]
  40ab99:	mov    BYTE PTR es:[ebp+0x4a],bl
  40ab9d:	(bad)  
  40ab9e:	push   edx
  40ab9f:	rcl    DWORD PTR [ebx-0x36a4de7b],cl
  40aba5:	mov    cl,0xeb
  40aba7:	fnstenv [ebx+0x33]
  40abaa:	ffreep st(6)
  40abac:	push   eax
  40abad:	jb     0x40ac24
  40abaf:	add    BYTE PTR ds:0xf76dd1f8,0x17
  40abb6:	add    al,0x92
  40abb8:	daa    
  40abb9:	mov    bh,0x6b
  40abbb:	inc    edi
  40abbc:	add    DWORD PTR [ecx+0x3d364c80],esp
  40abc2:	fldcw  WORD PTR [edx]
  40abc4:	scas   eax,DWORD PTR es:[edi]
  40abc5:	idiv   DWORD PTR [edi-0x6fe7489f]
  40abcb:	lods   al,BYTE PTR ds:[esi]
  40abcc:	inc    ebx
  40abcd:	mov    dh,0xb
  40abcf:	or     al,0x86
  40abd1:	in     eax,0x8f
  40abd3:	jno    0x40abec
  40abd5:	div    cl
  40abd7:	rol    DWORD PTR [ecx],0xab
  40abda:	push   esi
  40abdb:	push   0xb0720c2c
  40abe0:	cmp    eax,0xfc4bea3
  40abe5:	jbe    0x40ab73
  40abe7:	rcl    DWORD PTR [eax+0x4b16f501],0xf8
  40abee:	stos   BYTE PTR es:[edi],al
  40abef:	out    dx,al
  40abf0:	jmp    0x40ac6f
  40abf2:	pop    edx
  40abf3:	je     0x40ac0c
  40abf5:	cld    
  40abf6:	adc    al,0x45
  40abf8:	xor    edi,esp
  40abfa:	adc    DWORD PTR [eax-0x700c5841],ebp
  40ac00:	xor    bl,BYTE PTR [ebx+esi*1+0x3a0a1be5]
  40ac07:	cmp    ebx,edx
  40ac09:	mov    bl,0x79
  40ac0b:	scas   eax,DWORD PTR es:[edi]
  40ac0c:	jne    0x40ac21
  40ac0e:	mov    ah,0x55
  40ac10:	mov    BYTE PTR [esi+0x62083a12],al
  40ac16:	repnz cld 
  40ac18:	jbe    0x40ac2f
  40ac1a:	fnstsw WORD PTR [ebx+0x49]
  40ac1d:	inc    ebx
  40ac1e:	call   0xa51fe79f
  40ac23:	dec    edx
  40ac24:	pop    ds
  40ac25:	jmp    0x40ac6c
  40ac27:	ja     0x40ac2a
  40ac29:	sub    ebp,eax
  40ac2b:	popf   
  40ac2c:	hlt    
  40ac2d:	in     al,dx
  40ac2e:	mov    ds:0x683cf934,eax
  40ac33:	xchg   edi,eax
  40ac34:	lock fs adc al,0x51
  40ac38:	stc    
  40ac39:	sub    DWORD PTR [ecx-0x80],0x232613a7
  40ac40:	mov    eax,0xf89c1cab
  40ac45:	ins    BYTE PTR es:[edi],dx
  40ac46:	and    esi,esp
  40ac48:	or     BYTE PTR [esi-0x51b1bcfe],0xf3
  40ac4f:	mov    eax,ds:0x85c81347
  40ac54:	pop    edx
  40ac55:	xchg   ebp,eax
  40ac56:	icebp  
  40ac57:	inc    DWORD PTR [eax+0x79f3f108]
  40ac5d:	pop    edi
  40ac5e:	retf   0xed4a
  40ac61:	das    
  40ac62:	or     eax,0x20bcaa38
  40ac67:	(bad)  
  40ac68:	call   0xdf42819
  40ac6d:	into   
  40ac6e:	pop    edi
  40ac6f:	bnd jl 0x40ac48
  40ac72:	mov    DWORD PTR [ebx+0x56df2d00],esi
  40ac78:	jnp    0x40ac9f
  40ac7a:	mov    al,0x23
  40ac7c:	push   edx
  40ac7d:	jecxz  0x40acea
  40ac7f:	sbb    DWORD PTR [eax-0x2e94d23a],esp
  40ac85:	pop    ebx
  40ac86:	mov    al,0x64
  40ac88:	push   ss
  40ac89:	dec    ebx
  40ac8a:	ficom  WORD PTR [edi]
  40ac8c:	inc    esi
  40ac8d:	or     ah,bl
  40ac8f:	mov    ah,dh
  40ac91:	or     al,0x70
  40ac93:	sub    al,0x66
  40ac95:	jnp    0x40ad03
  40ac97:	sbb    ah,ah
  40ac99:	add    ebp,DWORD PTR [eax]
  40ac9b:	mov    ebx,ecx
  40ac9d:	out    0xbb,eax
  40ac9f:	jns    0x40acfa
  40aca1:	(bad)  [esi]
  40aca3:	pusha  
  40aca4:	outs   dx,DWORD PTR gs:[esi]
  40aca6:	lahf   
  40aca7:	pop    es
  40aca8:	cmp    BYTE PTR [ebp-0x53],al
  40acab:	scas   eax,DWORD PTR es:[edi]
  40acac:	pop    ds
  40acad:	cli    
  40acae:	xlat   BYTE PTR ds:[ebx]
  40acaf:	daa    
  40acb0:	test   ebp,esp
  40acb2:	mov    esi,0x195c69de
  40acb7:	and    ecx,DWORD PTR [ebp+edi*2-0x59274418]
  40acbe:	pop    ebp
  40acbf:	xlat   BYTE PTR ds:[ebx]
  40acc0:	inc    ebx
  40acc1:	(bad)  [edi-0x5f]
  40acc4:	dec    esi
  40acc5:	sbb    eax,0x79ec737b
  40acca:	out    0x14,eax
  40accc:	data16 adc al,0x52
  40accf:	sahf   
  40acd0:	call   0x19db:0xdda19f92
  40acd7:	imul   ecx,DWORD PTR [ecx+0x2f],0xffffff8a
  40acdb:	lock lock mov esp,0x5e679601
  40ace2:	imul   esi,DWORD PTR [edi-0x33eaa8ac],0xffffffc8
  40ace9:	inc    ebx
  40acea:	cli    
  40aceb:	test   al,0x4d
  40aced:	adc    eax,0xa9c57765
  40acf2:	fist   DWORD PTR [edi+ecx*8]
  40acf5:	test   BYTE PTR [eax],0x4e
  40acf8:	sbb    BYTE PTR [ebp-0x6b376f77],cl
  40acfe:	sub    BYTE PTR [eax+0x42e4fe24],al
  40ad04:	mov    ds:0x8a8bdf61,al
  40ad09:	cmp    DWORD PTR [edx],0xffffff9d
  40ad0c:	xor    DWORD PTR [ebp+0x6f],ecx
  40ad0f:	adc    BYTE PTR [ebp-0x6f],ch
  40ad12:	ret    0x978
  40ad15:	inc    eax
  40ad16:	sar    DWORD PTR [ebx-0x5f7f4016],cl
  40ad1c:	cmp    eax,0x24687716
  40ad21:	and    al,0x17
  40ad23:	(bad)  
  40ad24:	xor    eax,0xd23a5a19
  40ad29:	jne    0x40ad5e
  40ad2b:	xor    DWORD PTR [ebx+edx*4-0x686ec97d],0x34
  40ad33:	inc    esi
  40ad34:	fisub  DWORD PTR [ebp-0x58]
  40ad37:	rol    esi,cl
  40ad39:	mov    ecx,0x1cd9c960
  40ad3e:	js     0x40ad93
  40ad40:	ss mov cl,0x78
  40ad43:	fcom   st(1)
  40ad45:	outs   dx,DWORD PTR ds:[esi]
  40ad46:	push   edi
  40ad47:	in     al,0x4b
  40ad49:	cmp    al,0xd6
  40ad4b:	inc    esp
  40ad4c:	and    BYTE PTR [ebp+0x5f],cl
  40ad4f:	in     eax,0x36
  40ad51:	mov    DWORD PTR [esi-0xb],edx
  40ad54:	adc    DWORD PTR [ecx],eax
  40ad56:	fiadd  WORD PTR [esi]
  40ad58:	cmp    BYTE PTR [edx],bl
  40ad5a:	sbb    eax,0xbcb466cb
  40ad5f:	push   edi
  40ad60:	rol    BYTE PTR [ebx-0x7b9d84d2],0xe9
  40ad67:	inc    esp
  40ad68:	or     ecx,DWORD PTR [esi-0x42c47caa]
  40ad6e:	shl    BYTE PTR [esi-0x5d0fc1b4],cl
  40ad74:	neg    DWORD PTR [edi+ebx*4]
  40ad77:	lds    esp,FWORD PTR fs:[edi+0x15]
  40ad7b:	in     eax,dx
  40ad7c:	jns    0x40ad7d
  40ad7e:	push   ds
  40ad7f:	in     al,0x8a
  40ad81:	jge    0x40ad30
  40ad83:	cmp    bl,BYTE PTR [eax-0x99d5a81]
  40ad89:	jo     0x40ad40
  40ad8b:	outs   dx,BYTE PTR ds:[esi]
  40ad8c:	xor    eax,0xaa41083d
  40ad91:	sqrtps xmm7,xmm6
  40ad94:	fldcw  WORD PTR [ebx-0x68]
  40ad97:	dec    edx
  40ad98:	inc    eax
  40ad99:	data16 cmp dl,BYTE PTR [esi+edx*2]
  40ad9d:	xchg   DWORD PTR [eax+0x2b],ebx
  40ada0:	pushf  
  40ada1:	mov    dh,0xa5
  40ada3:	lahf   
  40ada4:	or     dh,BYTE PTR [esi+0x488dd02a]
  40adaa:	xchg   edx,eax
  40adab:	sbb    ecx,DWORD PTR [ebx]
  40adad:	ror    BYTE PTR [edx-0x13],cl
  40adb0:	jmp    0xbcdd:0xc9bb905a
  40adb7:	lock xchg BYTE PTR cs:[ecx+eiz*4+0x1a],ch
  40adbd:	iret   
  40adbe:	xchg   edi,eax
  40adbf:	fbld   TBYTE PTR [ecx]
  40adc1:	cwde   
  40adc2:	adc    BYTE PTR [ebx+eiz*8-0x43],dh
  40adc6:	jae    0x40adf2
  40adc8:	mov    ebx,DWORD PTR [ebx]
  40adca:	mov    BYTE PTR [edx-0x3c],dl
  40adcd:	mov    edi,0xa4e9cb02
  40add2:	clc    
  40add3:	cmp    bl,BYTE PTR [esi+0x12386946]
  40add9:	push   0xffffffc0
  40addb:	jo     0x40adc9
  40addd:	mov    DWORD PTR [esp+eax*2],esi
  40ade0:	out    dx,al
  40ade1:	sahf   
  40ade2:	and    esp,edx
  40ade4:	jns    0x40ad67
  40ade6:	add    edx,DWORD PTR [edi]
  40ade8:	(bad)  
  40ade9:	mov    ecx,0xb6e8c484
  40adee:	loop   0x40ae44
  40adf0:	pusha  
  40adf1:	mov    al,0x88
  40adf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adf4:	mov    al,dl
  40adf6:	(bad)  
  40adf7:	add    BYTE PTR [edx+0x4b],bl
  40adfa:	inc    ebx
  40adfb:	sahf   
  40adfc:	imul   eax,ebx,0xfc232b2e
  40ae02:	pop    ebp
  40ae03:	jmp    0x6344:0x3b5cbe85
  40ae0a:	sbb    al,BYTE PTR [edx]
  40ae0c:	(bad)  
  40ae0e:	(bad)  
  40ae10:	(bad)  
  40ae11:	mov    edx,0x9cf86a36
  40ae16:	loope  0x40add6
  40ae18:	push   ds
  40ae19:	mov    edi,ebx
  40ae1b:	(bad)  
  40ae1c:	pop    esp
  40ae1d:	cli    
  40ae1e:	test   DWORD PTR [edx],ebx
  40ae20:	xchg   esp,eax
  40ae21:	dec    ebp
  40ae22:	xor    dl,ah
  40ae24:	fld    QWORD PTR [edx+0x5b]
  40ae27:	xchg   eax,ecx
  40ae29:	push   ss
  40ae2a:	in     al,dx
  40ae2b:	(bad)  
  40ae2c:	pop    esp
  40ae2d:	fst    DWORD PTR [eax+ebx*2+0x5cdaf2d]
  40ae34:	std    
  40ae35:	push   ds
  40ae36:	or     eax,0x593a6064
  40ae3b:	cld    
  40ae3c:	ret    0x73dd
  40ae3f:	sbb    dl,ch
  40ae41:	jp     0x40adfc
  40ae43:	xor    ebx,DWORD PTR [edx+0x66bd728d]
  40ae49:	jnp    0x40ae98
  40ae4b:	xchg   ebp,eax
  40ae4c:	ds call 0x5fb3:0xde391bcb
  40ae54:	int    0xbc
  40ae56:	pop    ecx
  40ae57:	pop    ebp
  40ae58:	add    DWORD PTR [edi+0x697dca0e],esp
  40ae5e:	push   0x10079196
  40ae63:	nop
  40ae64:	jp     0x40ae7a
  40ae66:	js     0x40ae4c
  40ae68:	and    BYTE PTR ds:0xa1f76974,0x12
  40ae6f:	mov    edi,0x8819e756
  40ae74:	aad    0xa3
  40ae76:	push   esi
  40ae77:	aaa    
  40ae78:	cmp    ah,bh
  40ae7a:	jne    0x40ae73
  40ae7c:	lahf   
  40ae7d:	bound  eax,QWORD PTR [ecx+0x5a]
  40ae80:	fcomi  st,st(3)
  40ae82:	mov    ch,0x1e
  40ae84:	stos   DWORD PTR es:[edi],eax
  40ae85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae86:	lods   al,BYTE PTR ds:[esi]
  40ae87:	test   eax,0x412eb5da
  40ae8c:	or     bh,BYTE PTR [edi-0x5c68bfc1]
  40ae92:	cmc    
  40ae93:	jmp    0x5f3deb26
  40ae98:	and    BYTE PTR [ecx-0x35],ch
  40ae9b:	ds and dl,0xdc
  40ae9f:	xchg   ebx,edi
  40aea1:	cwde   
  40aea2:	hlt    
  40aea3:	out    0x93,al
  40aea5:	cmc    
  40aea6:	cmp    BYTE PTR [edi+0xc],ah
  40aea9:	lods   al,BYTE PTR ds:[esi]
  40aeaa:	(bad)  
  40aeab:	fstp   DWORD PTR ss:[ecx-0x73a41057]
  40aeb2:	aam    0xff
  40aeb4:	dec    esi
  40aeb5:	aaa    
  40aeb6:	pushf  
  40aeb7:	std    
  40aeb8:	sar    DWORD PTR [esi+0x680a3f03],0x1f
  40aebf:	out    0xb3,eax
  40aec1:	pop    edi
  40aec2:	addr16 jo 0x40aee4
  40aec5:	and    DWORD PTR [edx-0x6f],ebx
  40aec8:	test   DWORD PTR [esi+0x218d3b4],edi
  40aece:	xlat   BYTE PTR ds:[ebx]
  40aecf:	loop   0x40aefd
  40aed1:	jne    0x40aea1
  40aed3:	inc    edi
  40aed4:	xchg   edx,eax
  40aed5:	mov    ebx,0xf25c678d
  40aeda:	sahf   
  40aedb:	cs scas eax,DWORD PTR es:[edi]
  40aedd:	sti    
  40aede:	add    al,bh
  40aee0:	push   edi
  40aee1:	xchg   ebp,eax
  40aee2:	jno    0x40af5f
  40aee4:	das    
  40aee5:	neg    DWORD PTR [ebx+0x8]
  40aee8:	push   eax
  40aee9:	jno    0x40aeb2
  40aeeb:	jns    0x40aeb6
  40aeed:	push   edi
  40aeee:	(bad)  
  40aeef:	sub    BYTE PTR [esi],dl
  40aef1:	dec    ebp
  40aef2:	sti    
  40aef3:	pop    edi
  40aef4:	jp     0x40af6f
  40aef6:	jno    0x40af01
  40aef8:	lods   eax,DWORD PTR ds:[esi]
  40aef9:	xchg   bh,bh
  40aefb:	test   al,0xc0
  40aefd:	inc    esp
  40aefe:	inc    esi
  40aeff:	imul   DWORD PTR [edx]
  40af01:	retf   
  40af02:	fdiv   QWORD PTR [edi-0x4b56ded2]
  40af08:	pop    esi
  40af09:	xor    eax,0x80546563
  40af0e:	enter  0xa04,0x76
  40af12:	mov    bh,0x59
  40af14:	adc    dh,bh
  40af16:	sbb    dl,BYTE PTR [edx-0x53]
  40af19:	push   eax
  40af1a:	cs jecxz 0x40af3b
  40af1d:	aam    0x69
  40af1f:	cmp    al,0x65
  40af21:	jne    0x40af2f
  40af23:	mov    dh,0xf0
  40af25:	loop   0x40af33
  40af27:	push   ss
  40af28:	mov    edi,0x743b027b
  40af2d:	out    0xdf,al
  40af2f:	pop    esp
  40af30:	sub    al,0x74
  40af32:	loopne 0x40af88
  40af34:	inc    edx
  40af35:	inc    edx
  40af36:	pop    esp
  40af37:	or     esi,DWORD PTR [ecx]
  40af39:	mov    ds:0x3c5f6374,al
  40af3e:	and    cl,cl
  40af40:	sahf   
  40af41:	cs sbb dh,ch
  40af44:	out    dx,al
  40af45:	xchg   ecx,eax
  40af46:	pop    ebx
  40af47:	cmp    BYTE PTR [edi],bh
  40af49:	inc    edx
  40af4a:	fsubr  QWORD PTR [edi+edx*1-0x5965e2f2]
  40af51:	je     0x40afad
  40af53:	es cmc 
  40af55:	lahf   
  40af56:	lock xlat BYTE PTR ds:[ebx]
  40af58:	cld    
  40af59:	mov    DWORD PTR [edi],esp
  40af5b:	retf   0x6e6
  40af5e:	add    dh,ch
  40af60:	cli    
  40af61:	dec    eax
  40af62:	inc    esp
  40af63:	loope  0x40af2e
  40af65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af66:	lds    edi,FWORD PTR [ecx-0x4a]
  40af69:	mov    BYTE PTR [ebp-0x2b8d0c8e],ch
  40af6f:	push   ebx
  40af70:	xor    DWORD PTR [eax+0x57d51f95],esp
  40af76:	test   BYTE PTR [ecx],bl
  40af78:	pop    ds
  40af79:	cld    
  40af7a:	mov    cl,0xc7
  40af7c:	pop    eax
  40af7d:	mov    eax,0x8332b6fb
  40af82:	inc    edi
  40af83:	jmp    0x71318b6e
  40af88:	fs fs loope 0x40af23
  40af8c:	test   BYTE PTR [esi+0xa948744],0x9
  40af93:	cmp    DWORD PTR [ebx+0x6],ecx
  40af96:	push   ss
  40af97:	stos   BYTE PTR es:[edi],al
  40af98:	sub    bh,cl
  40af9a:	popf   
  40af9b:	fild   WORD PTR [ebx]
  40af9d:	test   edi,esi
  40af9f:	sti    
  40afa0:	mov    ds:0xe71e4ccf,al
  40afa5:	rcr    ebp,0x68
  40afa8:	pop    esp
  40afa9:	repz cli 
  40afab:	and    DWORD PTR [ecx],0xe052f1a7
  40afb1:	imul   DWORD PTR [eax]
  40afb3:	clc    
  40afb4:	jbe    0x40afe4
  40afb6:	mov    esi,0x7f020b20
  40afbb:	pop    ebp
  40afbc:	retf   
  40afbd:	or     bl,BYTE PTR [edx-0xad58916]
  40afc3:	into   
  40afc4:	xchg   ecx,eax
  40afc5:	std    
  40afc6:	inc    eax
  40afc7:	jge    0x40afeb
  40afc9:	leave  
  40afca:	mov    bl,0x36
  40afcc:	dec    ebx
  40afcd:	cs ins BYTE PTR es:[edi],dx
  40afcf:	scas   al,BYTE PTR es:[edi]
  40afd0:	ja     0x40afbc
  40afd2:	add    BYTE PTR [ecx+0x22],bh
  40afd5:	jno    0x40af8c
  40afd7:	push   edi
  40afd8:	mov    al,0x57
  40afda:	stos   BYTE PTR es:[edi],al
  40afdb:	fst    DWORD PTR [edi]
  40afdd:	mov    edx,0x9f20a27e
  40afe2:	jp     0x40afcc
  40afe4:	xlat   BYTE PTR fs:[ebx]
  40afe6:	call   0xc67f0eab
  40afeb:	and    eax,DWORD PTR [ecx-0x6c]
  40afee:	lods   eax,DWORD PTR ds:[esi]
  40afef:	adc    BYTE PTR [esi-0x6d3f1475],bh
  40aff5:	inc    ebx
  40aff6:	xchg   esp,eax
  40aff7:	iret   
  40aff8:	aaa    
  40aff9:	call   0x39c70bc0
  40affe:	xor    esp,esi
  40b000:	in     al,dx
  40b001:	inc    ecx
  40b002:	xchg   BYTE PTR [esi+0x512f6360],ah
  40b008:	sub    DWORD PTR ds:0xbf7bbf6f,esi
  40b00e:	mov    ds:0xdf317e5f,eax
  40b013:	in     eax,0xb5
  40b015:	jae    0x40afe3
  40b017:	or     eax,0x6b0761b7
  40b01c:	pop    edi
  40b01d:	fld    QWORD PTR [ecx-0x44]
  40b020:	cli    
  40b021:	dec    esp
  40b022:	loop   0x40b07a
  40b024:	cdq    
  40b025:	cmp    al,0xd2
  40b027:	cwde   
  40b028:	adc    al,0x3a
  40b02a:	stos   DWORD PTR es:[edi],eax
  40b02b:	jl     0x40b05e
  40b02d:	pop    edi
  40b02e:	dec    ecx
  40b02f:	mov    edx,0xb5ca762c
  40b034:	jno    0x40b069
  40b036:	pop    es
  40b037:	pop    esp
  40b038:	inc    edx
  40b039:	int3   
  40b03a:	(bad)  
  40b03b:	pusha  
  40b03c:	ins    BYTE PTR es:[edi],dx
  40b03d:	repz pusha 
  40b03f:	xchg   edi,eax
  40b040:	pusha  
  40b041:	jge    0x40b0ad
  40b043:	pushf  
  40b044:	test   al,0xa
  40b046:	adc    esi,edi
  40b048:	mov    cl,0xe2
  40b04a:	jb     0x40b035
  40b04c:	scas   al,BYTE PTR es:[edi]
  40b04d:	mov    edx,0x386ab05a
  40b052:	xor    dh,BYTE PTR [edx+edi*2+0x41]
  40b056:	test   DWORD PTR [esi+esi*1+0x7ef0d29],ecx
  40b05d:	mov    eax,0x87569484
  40b062:	xchg   edx,eax
  40b063:	mov    cl,0x45
  40b065:	rol    DWORD PTR [edx],1
  40b067:	or     bh,BYTE PTR [eax-0x2]
  40b06a:	jle    0x40b010
  40b06c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b06d:	mov    dl,0xe3
  40b06f:	aas    
  40b070:	stc    
  40b071:	les    esp,FWORD PTR [edx-0x77]
  40b074:	inc    edx
  40b075:	push   ebp
  40b076:	cmp    eax,0x7c3c8cf8
  40b07b:	add    ch,BYTE PTR [ecx+0x5131e720]
  40b081:	jl     0x40b074
  40b083:	push   ebp
  40b084:	cmp    al,0xfa
  40b086:	jae    0x40b0a5
  40b088:	(bad)  
  40b089:	xchg   edx,eax
  40b08a:	mov    bl,0xd1
  40b08c:	ds add eax,0xe1bdee74
  40b092:	ja     0x40b079
  40b094:	bound  ebp,QWORD PTR [esi-0x11]
  40b097:	sbb    DWORD PTR [ebx],eax
  40b099:	pop    ecx
  40b09a:	popf   
  40b09b:	jne    0x40b0af
  40b09d:	(bad)  
  40b09e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b09f:	scas   al,BYTE PTR es:[edi]
  40b0a0:	cld    
  40b0a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0a2:	xor    al,0x7b
  40b0a4:	add    BYTE PTR [eax+esi*2],ah
  40b0a7:	ds xchg ebp,eax
  40b0a9:	mov    WORD PTR [ecx-0x5455ea4a],?
  40b0af:	rcr    BYTE PTR [ecx],1
  40b0b1:	jmp    0x40b0f9
  40b0b3:	mov    fs,WORD PTR [edi]
  40b0b5:	fadd   QWORD PTR [ebx]
  40b0b7:	cld    
  40b0b8:	std    
  40b0b9:	ins    BYTE PTR es:[edi],dx
  40b0ba:	inc    edi
  40b0bb:	xchg   ecx,eax
  40b0bc:	daa    
  40b0bd:	jbe    0x40b0e7
  40b0bf:	or     ch,BYTE PTR [esi+0x6c49f393]
  40b0c5:	mov    WORD PTR [ecx],ds
  40b0c7:	outs   dx,BYTE PTR ds:[esi]
  40b0c8:	push   cs
  40b0c9:	sahf   
  40b0ca:	fmulp  st(1),st
  40b0cc:	cwde   
  40b0cd:	enterw 0x1095,0x3
  40b0d2:	mov    esp,0x93d97a42
  40b0d7:	ret    
  40b0d8:	in     eax,dx
  40b0d9:	and    BYTE PTR [ebx+ebp*4+0x4bedfe1a],cl
  40b0e0:	cdq    
  40b0e1:	and    DWORD PTR [ebx],0x40b8db1e
  40b0e7:	mov    ah,cl
  40b0e9:	jge    0x40b07d
  40b0eb:	loope  0x40b0c0
  40b0ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0ee:	repz dec ecx
  40b0f0:	xor    BYTE PTR [edx-0x5fc645b8],dh
  40b0f6:	push   0x1ed87ce
  40b0fb:	dec    edi
  40b0fc:	sub    ah,0x9e
  40b0ff:	(bad)  [ebx+0x3295c5cc]
  40b105:	pop    esp
  40b106:	mov    cl,dh
  40b108:	mov    cl,0x55
  40b10a:	inc    esp
  40b10b:	mov    eax,ds:0xa909f708
  40b110:	mov    ch,0x2d
  40b112:	jmp    0xf509:0xbc7dd42e
  40b119:	sbb    dh,BYTE PTR [eax]
  40b11b:	xchg   BYTE PTR [eax+ecx*8+0x5026d454],bl
  40b122:	outs   dx,BYTE PTR ds:[esi]
  40b123:	pop    es
  40b124:	or     DWORD PTR [edi+0x50],0x33
  40b128:	ds or  bl,dh
  40b12b:	xchg   DWORD PTR [ecx],edx
  40b12d:	(bad)  [bp+di+0x75]
  40b131:	mov    edx,0x31a4dfe8
  40b136:	add    eax,0x37d004e0
  40b13b:	xor    eax,0x85c450bc
  40b140:	add    bl,BYTE PTR [edx-0x75]
  40b143:	jnp    0x40b194
  40b145:	lea    edx,[ecx-0x5e]
  40b148:	push   eax
  40b149:	repz and bh,al
  40b14c:	stos   BYTE PTR es:[edi],al
  40b14d:	outs   dx,DWORD PTR ds:[esi]
  40b14e:	or     edx,DWORD PTR [ecx-0x2311c12d]
  40b154:	fadd   DWORD PTR ds:0x22b88120
  40b15a:	or     eax,edi
  40b15c:	add    al,0xe1
  40b15e:	cmp    al,0x98
  40b160:	push   eax
  40b161:	cmp    eax,0x36ac2fb0
  40b166:	loopne 0x40b1c4
  40b168:	hlt    
  40b169:	push   edx
  40b16a:	fcom   QWORD PTR [edx-0x7e]
  40b16d:	inc    ecx
  40b16e:	(bad)  
  40b16f:	ds cli 
  40b171:	pop    ebx
  40b172:	fstp   TBYTE PTR [esi]
  40b174:	dec    ch
  40b176:	dec    esi
  40b177:	xor    eax,0x66c98ad6
  40b17c:	jl     0x40b17d
  40b17e:	sbb    al,0xb1
  40b180:	std    
  40b181:	retf   
  40b182:	xchg   edx,eax
  40b183:	push   edi
  40b184:	add    BYTE PTR [edx-0x18],bh
  40b187:	dec    ebx
  40b188:	pop    edi
  40b189:	ret    0xb800
  40b18c:	mov    eax,0x6b9cb197
  40b191:	(bad)  
  40b192:	push   esi
  40b193:	in     al,dx
  40b194:	repz pop edx
  40b196:	sub    edi,DWORD PTR [esi+0x27c2227e]
  40b19c:	adc    al,BYTE PTR [edx]
  40b19e:	xor    eax,0x2cde3264
  40b1a3:	xchg   DWORD PTR [ebp+0x67570d67],eax
  40b1a9:	mov    esi,DWORD PTR [esi-0x6a6877c5]
  40b1af:	xor    ax,0x2124
  40b1b3:	sub    DWORD PTR [ebx],edx
  40b1b5:	call   0xcc79:0x651af00f
  40b1bc:	cmp    bh,bh
  40b1be:	jge    0x40b17d
  40b1c0:	pop    es
  40b1c1:	les    edi,FWORD PTR [edi+edi*8+0x1df0a7e8]
  40b1c8:	sub    edi,DWORD PTR [ecx+0xf03e68a]
  40b1ce:	pop    ss
  40b1cf:	lds    edi,FWORD PTR [ebx-0x49e04a22]
  40b1d5:	xchg   ebp,eax
  40b1d6:	pop    ss
  40b1d7:	call   0xde5e:0x84c9ee0c
  40b1de:	jbe    0x40b225
  40b1e0:	push   es
  40b1e1:	push   ebx
  40b1e2:	push   esp
  40b1e3:	adc    al,dh
  40b1e5:	xor    BYTE PTR [eax+0x73],0xae
  40b1e9:	mov    ebp,0x3bd5449b
  40b1ee:	push   ecx
  40b1ef:	shl    DWORD PTR [edx-0x266e24d8],0x9b
  40b1f6:	sub    DWORD PTR [edi-0x55e9dd4b],ebx
  40b1fc:	pop    ebp
  40b1fd:	scas   al,BYTE PTR es:[edi]
  40b1fe:	mov    edi,0xd1f53b88
  40b203:	mov    BYTE PTR [eax-0x62],dh
  40b206:	push   ecx
  40b207:	call   0x9ccd8158
  40b20c:	outs   dx,BYTE PTR ds:[esi]
  40b20d:	inc    esi
  40b20e:	mov    WORD PTR [ecx+0x7579b2e5],es
  40b214:	sahf   
  40b215:	adc    ah,BYTE PTR [ebx+esi*1]
  40b218:	pushf  
  40b219:	or     al,0x6b
  40b21b:	inc    ebp
  40b21c:	cdq    
  40b21d:	mov    ch,0x56
  40b21f:	pop    ebp
  40b220:	test   DWORD PTR [ebx-0x44],esi
  40b223:	sub    BYTE PTR [edi-0x1964c81],bl
  40b229:	in     eax,0xcc
  40b22b:	dec    ebp
  40b22c:	pop    ss
  40b22d:	das    
  40b22e:	sbb    DWORD PTR [edx+0x70],0x7431c4ab
  40b235:	and    eax,0x6ee65dc3
  40b23a:	mov    ebp,0x7e3efc8b
  40b23f:	add    al,0x95
  40b241:	jmp    0x40b25c
  40b243:	adc    BYTE PTR [eax-0x2aa9b911],cl
  40b249:	push   cs
  40b24a:	push   ss
  40b24b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b24c:	xchg   ecx,eax
  40b24d:	push   es
  40b24e:	jmp    0x9b51:0x8470a3bf
  40b255:	cmp    eax,0x6aa093ea
  40b25a:	icebp  
  40b25b:	adc    BYTE PTR [edx+0xba72675],cl
  40b261:	imul   edx,DWORD PTR [ecx+ecx*2-0x1a8eea44],0x2fbd5808
  40b26c:	inc    esp
  40b26d:	leave  
  40b26e:	jge    0x40b22a
  40b270:	add    eax,0x234eec88
  40b275:	ins    BYTE PTR es:[edi],dx
  40b276:	mov    cl,0x2b
  40b278:	add    edi,0x25c8bd20
  40b27e:	adc    eax,0x99bedb6b
  40b283:	fldenv [ecx+0x0]
  40b286:	xor    al,0xd8
  40b288:	inc    esp
  40b289:	and    esp,DWORD PTR [edx-0x581436a1]
  40b28f:	push   es
  40b290:	imul   eax,DWORD PTR [ebp+0xfb91035],0x426f0fc2
  40b29a:	push   ss
  40b29b:	ja     0x40b233
  40b29d:	aas    
  40b29e:	ret    0x3c46
  40b2a1:	cmp    BYTE PTR [ebx],ah
  40b2a3:	fwait
  40b2a4:	push   0x146bbf26
  40b2a9:	mov    ds:0xffb6df8d,eax
  40b2ae:	repnz inc edi
  40b2b0:	add    eax,0xd389efab
  40b2b5:	mov    WORD PTR [edi-0x74ae5705],fs
  40b2bb:	xchg   al,dl
  40b2bd:	sbb    edi,DWORD PTR [ecx-0x5b]
  40b2c0:	jne    0x40b2e3
  40b2c2:	es adc ebp,ebx
  40b2c5:	push   ds
  40b2c6:	dec    edi
  40b2c7:	mov    eax,ds:0xfdbcd110
  40b2cc:	vcvtsi2sd xmm5,xmm4,DWORD PTR [esi+0x33]
  40b2d1:	rcr    BYTE PTR [edi],cl
  40b2d3:	out    0xd1,eax
  40b2d5:	jo     0x40b272
  40b2d7:	cmc    
  40b2d8:	scas   al,BYTE PTR es:[edi]
  40b2d9:	repz mov ch,0xd0
  40b2dc:	xchg   edx,eax
  40b2dd:	jb     0x40b281
  40b2df:	(bad)  
  40b2e1:	jne    0x40b2e6
  40b2e3:	xchg   edi,eax
  40b2e4:	sbb    eax,0x3df77f13
  40b2e9:	pop    ss
  40b2ea:	loope  0x40b2c5
  40b2ec:	dec    esp
  40b2ed:	sahf   
  40b2ee:	pushf  
  40b2ef:	sub    BYTE PTR [edx+ebx*2],dh
  40b2f2:	sub    eax,0xf961b6a
  40b2f7:	mov    dl,0xfc
  40b2f9:	retf   0xffe0
  40b2fc:	test   al,0x3
  40b2fe:	(bad)
  40b302:	inc    ebp
  40b303:	int3   
  40b304:	test   BYTE PTR [edx],ah
  40b306:	bswap  esi
  40b308:	inc    esi
  40b309:	iret   
  40b30a:	jo     0x40b2da
  40b30c:	jbe    0x40b2f2
  40b30e:	retf   0x9749
  40b311:	test   eax,0xd8282d39
  40b316:	adc    dh,BYTE PTR [esi+0x4a]
  40b319:	int3   
  40b31a:	xchg   edi,eax
  40b31b:	pop    ss
  40b31c:	iret   
  40b31d:	in     al,dx
  40b31e:	scas   eax,DWORD PTR es:[edi]
  40b31f:	sub    dh,bl
  40b321:	sbb    BYTE PTR [edi],bh
  40b323:	mov    al,ds:0x819a8608
  40b328:	(bad)  
  40b329:	sub    esp,ebx
  40b32b:	or     dh,BYTE PTR [esi+0x3bff3e66]
  40b331:	xchg   esi,eax
  40b332:	cmp    ebp,ebp
  40b334:	shl    DWORD PTR [ecx+ebp*1],0xd8
  40b338:	neg    esi
  40b33a:	lock popf 
  40b33c:	not    DWORD PTR [edi-0x8]
  40b33f:	mov    al,ds:0x5e6add74
  40b344:	inc    ebp
  40b345:	frstor [ebp+edx*8+0x3d1f15f9]
  40b34c:	lds    eax,FWORD PTR [edx+0x22a8aedd]
  40b352:	cmp    al,0xe6
  40b354:	xchg   ecx,eax
  40b355:	add    dl,BYTE PTR [ebx+eiz*8+0x4e]
  40b359:	and    ebp,DWORD PTR [ecx-0x4bb6abc2]
  40b35f:	push   esp
  40b360:	jge    0x40b3c1
  40b362:	call   0x1e6b:0x56317cc0
  40b369:	dec    esi
  40b36a:	inc    ebp
  40b36b:	xor    esp,ebp
  40b36d:	mov    edi,0x7a146513
  40b372:	test   BYTE PTR [edi],bh
  40b374:	inc    esi
  40b375:	and    BYTE PTR [ebx-0x8ea6f37],dl
  40b37b:	and    ah,BYTE PTR [edx+0xe]
  40b37e:	jecxz  0x40b3bf
  40b380:	cmp    edx,0x45
  40b383:	loopne 0x40b3e8
  40b385:	div    dl
  40b387:	and    dl,cl
  40b389:	mov    bh,0xc7
  40b38b:	push   es
  40b38c:	jbe    0x40b379
  40b38e:	stos   DWORD PTR es:[edi],eax
  40b38f:	scas   al,BYTE PTR es:[edi]
  40b390:	pop    esp
  40b391:	jmp    0x8132:0xa38a644
  40b398:	stos   DWORD PTR es:[edi],eax
  40b399:	nop
  40b39a:	or     BYTE PTR [eax+0x57],bh
  40b39d:	loopne 0x40b333
  40b39f:	stos   BYTE PTR es:[edi],al
  40b3a0:	push   ss
  40b3a1:	adc    eax,0x9bc9ced
  40b3a6:	add    bl,dl
  40b3a8:	cmp    al,dl
  40b3aa:	sbb    al,0xe4
  40b3ac:	jmp    0x487f6730
  40b3b1:	cmc    
  40b3b2:	mov    ds:0xc7928499,al
  40b3b7:	or     al,0x85
  40b3b9:	stc    
  40b3ba:	inc    edi
  40b3bb:	push   eax
  40b3bc:	retf   0x2973
  40b3bf:	cs retf 
  40b3c1:	or     esi,esp
  40b3c3:	fist   WORD PTR [edi+ecx*4]
  40b3c6:	add    cl,BYTE PTR [ebp-0x65f50ca6]
  40b3cc:	into   
  40b3cd:	cmc    
  40b3ce:	shl    DWORD PTR [edx],0x2c
  40b3d1:	rcr    bh,1
  40b3d3:	inc    ebp
  40b3d4:	addr16 xchg ebx,eax
  40b3d6:	js     0x40b394
  40b3d8:	in     eax,0xc5
  40b3da:	xor    bh,cl
  40b3dc:	push   cs
  40b3dd:	ss xchg ecx,eax
  40b3df:	mov    es,WORD PTR [edx+0x2a41e906]
  40b3e5:	adc    al,0x65
  40b3e7:	pushf  
  40b3e8:	fdiv   QWORD PTR [eax+0x5]
  40b3eb:	iret   
  40b3ec:	ja     0x40b464
  40b3ee:	fmul   QWORD PTR ds:0x67bce8eb
  40b3f4:	pop    edx
  40b3f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3f6:	ror    BYTE PTR [ecx-0x70f590ef],1
  40b3fc:	fcmove st,st(6)
  40b3fe:	jae    0x40b41d
  40b400:	xchg   edi,eax
  40b401:	or     ah,BYTE PTR [ecx-0x1e]
  40b404:	popa   
  40b405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b406:	dec    esi
  40b407:	add    DWORD PTR [esi-0x36a8514d],eax
  40b40d:	and    ch,cl
  40b40f:	sub    dl,al
  40b411:	test   bh,cl
  40b413:	loopne 0x40b48f
  40b415:	jge    0x40b3e0
  40b417:	and    BYTE PTR [eax-0x18],0x76
  40b41b:	push   ss
  40b41c:	in     al,0xe1
  40b41e:	cmp    ebp,DWORD PTR [ebx-0x12]
  40b421:	gs ins BYTE PTR es:[edi],dx
  40b423:	mov    bl,0x67
  40b425:	xchg   esi,eax
  40b426:	xor    al,0xa5
  40b428:	lds    esp,FWORD PTR [esi+eax*2-0x32]
  40b42c:	push   ebx
  40b42d:	arpl   WORD PTR [edx+ebx*4],sp
  40b430:	cmp    DWORD PTR [edi+eiz*1],esi
  40b433:	je     0x40b413
  40b435:	push   edi
  40b436:	xchg   BYTE PTR [ecx+eiz*2+0x64b946ff],bl
  40b43d:	nop
  40b43e:	and    bl,BYTE PTR [edx-0xf]
  40b441:	push   eax
  40b442:	fiadd  DWORD PTR [esp+eax*1]
  40b445:	mov    dh,0x2c
  40b447:	pushf  
  40b448:	cld    
  40b449:	retf   0x5a3f
  40b44c:	test   DWORD PTR [ecx-0x7d55034c],ecx
  40b452:	ret    0x6240
  40b455:	repz ret 
  40b457:	and    BYTE PTR [eax],0xaa
  40b45a:	sub    al,0x7
  40b45c:	mov    edi,0xd02a2c84
  40b461:	lods   al,BYTE PTR ds:[esi]
  40b462:	sub    DWORD PTR [edi+edx*4],0x0
  40b466:	into   
  40b467:	and    eax,0x5b5e2d36
  40b46c:	outs   dx,BYTE PTR ds:[esi]
  40b46d:	fs xor al,0x86
  40b470:	xor    ah,BYTE PTR [edx+0x2833a12b]
  40b476:	mov    DWORD PTR [eax],esi
  40b478:	cdq    
  40b479:	ins    DWORD PTR es:[edi],dx
  40b47a:	push   cs
  40b47b:	adc    eax,0xdc86784f
  40b480:	jbe    0x40b467
  40b482:	iret   
  40b483:	(bad)  
  40b484:	adc    esi,edx
  40b486:	imul   ebp,DWORD PTR [ebp+eax*1-0x16],0xffffffa0
  40b48b:	mov    dl,0xb0
  40b48d:	stos   DWORD PTR es:[edi],eax
  40b48e:	repnz xchg esi,eax
  40b490:	jnp    0x40b4e8
  40b492:	cmp    al,0x27
  40b494:	test   eax,0x298f7ac0
  40b499:	inc    esi
  40b49a:	call   eax
  40b49c:	ror    al,0xa6
  40b49f:	shl    BYTE PTR [ebp-0x78dc066c],cl
  40b4a5:	lds    esi,FWORD PTR ds:0x7b47bd0
  40b4ab:	push   esi
  40b4ac:	push   ebx
  40b4ad:	jmp    0x7239f114
  40b4b2:	cmc    
  40b4b3:	xor    BYTE PTR [edx+0x3bd3b07e],cl
  40b4b9:	ds cmp eax,0x77d4e611
  40b4bf:	mov    bl,dh
  40b4c1:	mov    ebp,0x4fd1bec8
  40b4c6:	jg     0x40b47d
  40b4c8:	cmp    bl,ah
  40b4ca:	jns    0x40b49a
  40b4cc:	fcomp  DWORD PTR [edi-0x7a4bc750]
  40b4d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4d3:	and    bl,BYTE PTR [edi-0x4ddf1aa9]
  40b4d9:	cli    
  40b4da:	ficom  WORD PTR [esi-0x16]
  40b4dd:	(bad)  
  40b4de:	hlt    
  40b4df:	xor    al,0xa5
  40b4e1:	inc    esp
  40b4e2:	and    DWORD PTR gs:[esp+eiz*8],esi
  40b4e6:	mov    bh,0x74
  40b4e8:	inc    ebx
  40b4e9:	cwde   
  40b4ea:	jle    0x40b495
  40b4ec:	aas    
  40b4ed:	mov    edx,0x3394547c
  40b4f2:	cmp    esi,DWORD PTR [eax]
  40b4f4:	add    eax,0xb0c4ba26
  40b4f9:	into   
  40b4fa:	loop   0x40b4dd
  40b4fc:	sub    bl,dh
  40b4fe:	ds pop esp
  40b500:	push   ebx
  40b501:	lods   eax,DWORD PTR ds:[esi]
  40b502:	jecxz  0x40b576
  40b504:	mov    ebp,0xbdedb96c
  40b509:	popa   
  40b50a:	jmp    0x40b523
  40b50c:	(bad)  
  40b50d:	xor    BYTE PTR [esi],ah
  40b50f:	or     dh,BYTE PTR [edi]
  40b511:	cli    
  40b512:	(bad)  
  40b513:	popa   
  40b514:	mov    DWORD PTR [eax],esi
  40b516:	stos   DWORD PTR es:[edi],eax
  40b517:	mov    edi,0x659b1aec
  40b51c:	stc    
  40b51d:	jo     0x40b528
  40b51f:	inc    edx
  40b520:	cmc    
  40b521:	jmp    0x40b580
  40b523:	xchg   esp,eax
  40b524:	popa   
  40b525:	popf   
  40b526:	(bad)  
  40b527:	mov    ds:0x38999a6,eax
  40b52c:	mov    ebp,0x7b4d2736
  40b531:	out    dx,eax
  40b532:	hlt    
  40b533:	(bad)  
  40b534:	dec    edi
  40b535:	(bad)
  40b538:	xor    ecx,DWORD PTR [eax]
  40b53a:	cs jbe 0x40b594
  40b53d:	sbb    DWORD PTR [edi],ecx
  40b53f:	sub    ch,BYTE PTR ds:0x4eaeec59
  40b545:	add    cl,BYTE PTR [edx]
  40b547:	sbb    ecx,DWORD PTR [eax+0x51]
  40b54a:	xchg   esi,eax
  40b54b:	dec    ebp
  40b54c:	addr16 jne 0x40b4eb
  40b54f:	repnz sbb esp,eax
  40b552:	jo     0x40b57b
  40b554:	(bad)  
  40b555:	cmp    bl,BYTE PTR [ebp+0x5bfa470f]
  40b55b:	or     al,0x1f
  40b55d:	or     eax,0x6f1b5ae
  40b562:	sar    edx,1
  40b564:	xor    al,0x65
  40b566:	add    DWORD PTR [esi-0x57],ecx
  40b569:	sub    BYTE PTR [esi-0x6659b0bc],ch
  40b56f:	and    cl,BYTE PTR [edi-0x6952fdc7]
  40b575:	out    dx,eax
  40b576:	fstp   QWORD PTR ss:0xfa06e4b8
  40b57d:	getsec 
  40b57f:	retf   0x8785
  40b582:	mov    al,BYTE PTR [ecx]
  40b584:	pop    esp
  40b585:	sub    DWORD PTR [eax],ebp
  40b587:	add    cl,ah
  40b589:	pushf  
  40b58a:	mov    esi,0x50b05df6
  40b58f:	add    BYTE PTR [ebp-0x19],dh
  40b592:	xor    BYTE PTR [eax],ch
  40b594:	jne    0x40b566
  40b596:	cmp    al,0xd4
  40b598:	jb     0x40b560
  40b59a:	dec    esi
  40b59b:	pop    esp
  40b59c:	sub    DWORD PTR [ecx+0x4],esi
  40b59f:	sbb    eax,0xf4f08699
  40b5a4:	cmp    al,0xc7
  40b5a6:	sub    bh,BYTE PTR [ebx+ebx*4+0xe0a8182]
  40b5ad:	outs   dx,BYTE PTR ds:[esi]
  40b5ae:	pusha  
  40b5af:	or     DWORD PTR [ecx-0x46f0cdeb],ecx
  40b5b5:	iret   
  40b5b6:	(bad)
  40b5b9:	pushf  
  40b5ba:	call   0xab21d8ee
  40b5bf:	loop   0x40b57f
  40b5c1:	cmp    eax,0x83e994f7
  40b5c6:	js     0x40b5c8
  40b5c8:	cmp    eax,0x74e5486e
  40b5cd:	out    dx,al
  40b5ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5cf:	sbb    edx,DWORD PTR [edx]
  40b5d1:	mov    cl,0x94
  40b5d3:	dec    esp
  40b5d4:	mov    ebx,0x1cba10e9
  40b5d9:	mov    eax,0x10e6c6e5
  40b5de:	jo     0x40b589
  40b5e0:	jmp    0xac3:0x53780692
  40b5e7:	adc    eax,0xcef5d430
  40b5ec:	ret    0x6cdc
  40b5ef:	push   0xb49f2dbb
  40b5f4:	pop    ss
  40b5f5:	adc    DWORD PTR [ecx+0x57607ce9],ebx
  40b5fb:	xlat   BYTE PTR ds:[ebx]
  40b5fc:	jns    0x40b63d
  40b5fe:	mov    BYTE PTR [edx+0x7f],ch
  40b601:	inc    eax
  40b602:	pop    ds
  40b603:	mov    ch,0x4
  40b605:	rol    BYTE PTR [edi-0x7c13277],cl
  40b60b:	add    BYTE PTR [edx-0x53094302],dl
  40b611:	(bad)  
  40b612:	sbb    dl,BYTE PTR [eax+0x3de6efb]
  40b618:	retf   
  40b619:	js     0x40b636
  40b61b:	push   eax
  40b61c:	in     al,0xb2
  40b61e:	jnp    0x40b628
  40b620:	xor    dl,bh
  40b622:	cmp    al,0x2c
  40b624:	xchg   BYTE PTR [eax],ch
  40b626:	retf   
  40b627:	add    al,0xab
  40b629:	push   es
  40b62a:	lods   al,BYTE PTR ds:[esi]
  40b62b:	mov    al,ds:0x2f3541ab
  40b630:	mov    esi,0xd5be765e
  40b635:	mov    WORD PTR [esi-0x75177a63],gs
  40b63b:	mov    ds:0x7fbb0363,eax
  40b640:	fbstp  TBYTE PTR [edi-0x30]
  40b643:	xchg   bl,bl
  40b645:	pop    esi
  40b646:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40b648:	pop    esp
  40b649:	dec    ecx
  40b64a:	jmp    0xeae8e63e
  40b64f:	out    0x82,eax
  40b651:	or     BYTE PTR [esi],bh
  40b653:	mov    edx,0x854b2090
  40b658:	jmp    0xd21a0706
  40b65d:	xor    al,0x1f
  40b65f:	adc    ebp,esp
  40b661:	sti    
  40b662:	call   0x2336:0xe24cd1ca
  40b669:	pop    ecx
  40b66a:	addr16 jns 0x40b69a
  40b66d:	mov    dl,bh
  40b66f:	jmp    0x93bb:0xa3f9d1a8
  40b676:	je     0x40b6c2
  40b678:	sbb    bl,BYTE PTR [ebp+0x290969f6]
  40b67e:	add    edi,ecx
  40b680:	inc    ebp
  40b681:	xor    bh,ah
  40b683:	mov    ecx,0xf7312378
  40b688:	mov    BYTE PTR [ebx-0xf],ch
  40b68b:	int3   
  40b68c:	inc    ebx
  40b68d:	jge    0x272ee475
  40b693:	mov    ds:0xae59491a,eax
  40b698:	sbb    dh,BYTE PTR [edi+ecx*8+0x44]
  40b69c:	mov    al,ds:0xe5b25d9f
  40b6a1:	push   ebx
  40b6a2:	pushf  
  40b6a3:	sub    eax,0xdedc2e5c
  40b6a8:	xor    eax,0x485d10ee
  40b6ad:	je     0x40b70d
  40b6af:	xor    ebp,0xd2899d9f
  40b6b5:	mov    al,ds:0x2b8dc3d9
  40b6ba:	je     0x40b640
  40b6bc:	arpl   WORD PTR [esi+0x50b9b1bd],sp
  40b6c2:	mov    DWORD PTR [eax+0x6c9ff11c],0xabb1c297
  40b6cc:	sbb    ah,0x72
  40b6cf:	and    DWORD PTR [eax+0x6d],esp
  40b6d2:	mov    al,ds:0x9c8392f5
  40b6d7:	fnsave [edx+0xa7cf971]
  40b6dd:	stc    
  40b6de:	jmp    0x3138:0xd983c6de
  40b6e5:	retf   0xe818
  40b6e8:	sbb    eax,0x760e045b
  40b6ed:	xchg   BYTE PTR [ebx],dh
  40b6ef:	mov    BYTE PTR [ebx+0x277a54c9],cl
  40b6f5:	iret   
  40b6f6:	and    al,0x2
  40b6f8:	mov    al,0x42
  40b6fa:	in     eax,0x3f
  40b6fc:	in     eax,dx
  40b6fd:	(bad)  
  40b6fe:	loop   0x40b6e5
  40b700:	in     al,dx
  40b701:	ror    BYTE PTR [edi-0x27],1
  40b704:	and    ch,BYTE PTR [edx]
  40b706:	cmc    
  40b707:	jae    0x40b6c5
  40b709:	inc    eax
  40b70a:	popf   
  40b70b:	mov    eax,0x7e027634
  40b710:	pop    ebx
  40b711:	mov    esi,0xddc0b48
  40b716:	into   
  40b717:	repz dec esp
  40b719:	sub    DWORD PTR [eax],esp
  40b71b:	or     DWORD PTR [ebp+0x1ca9683a],edi
  40b721:	(bad)
  40b725:	test   BYTE PTR [ecx-0x21701aee],ch
  40b72b:	sbb    dh,BYTE PTR [esi-0x439f2fa9]
  40b731:	cli    
  40b732:	mov    bh,0xf8
  40b734:	sbb    DWORD PTR [edi],eax
  40b736:	pop    si
  40b738:	cmp    al,0x43
  40b73a:	xor    DWORD PTR [edi],esp
  40b73c:	(bad)  
  40b73d:	aas    
  40b73e:	je     0x40b6e4
  40b740:	std    
  40b741:	push   cs
  40b742:	dec    esi
  40b743:	inc    ebp
  40b744:	mov    ?,WORD PTR [esp+ebp*2+0x3a]
  40b748:	jg     0x40b6fc
  40b74a:	lods   eax,DWORD PTR ds:[esi]
  40b74b:	lods   al,BYTE PTR ds:[esi]
  40b74c:	fsub   st(1),st
  40b74e:	out    dx,eax
  40b74f:	es and bl,dh
  40b752:	repz adc eax,0x7d62e4bd
  40b758:	push   ds
  40b759:	jns    0x40b6f7
  40b75b:	lock jl 0x40b73f
  40b75e:	add    DWORD PTR [edx],esi
  40b760:	pop    esi
  40b761:	gs test al,0x97
  40b764:	or     eax,0xa7034326
  40b769:	in     al,dx
  40b76a:	push   esi
  40b76b:	push   es
  40b76c:	clc    
  40b76d:	ret    
  40b76e:	cmp    eax,DWORD PTR [esi+0x19b1d41]
  40b774:	fs pop ss
  40b776:	(bad)  
  40b777:	cld    
  40b778:	adc    BYTE PTR [ecx+0x7f],0x30
  40b77c:	loop   0x40b7e6
  40b77e:	mov    DWORD PTR [ebx-0x13],esp
  40b781:	jno    0x40b795
  40b783:	and    al,0xcc
  40b785:	shl    DWORD PTR [eax],cl
  40b787:	mov    al,ds:0x36d96d08
  40b78c:	cmc    
  40b78d:	sar    ebx,cl
  40b78f:	in     eax,0x9c
  40b791:	sub    esi,0x44c6cac7
  40b797:	lods   al,BYTE PTR ds:[esi]
  40b798:	dec    ebp
  40b799:	imul   ebp,ebp,0x26
  40b79c:	and    DWORD PTR [esp+0x3cccd5bd],0x505afb27
  40b7a7:	sti    
  40b7a8:	sti    
  40b7a9:	pop    ss
  40b7aa:	fisubr DWORD PTR [eax+0x4c]
  40b7ad:	shr    DWORD PTR [edx+0x7b],1
  40b7b0:	popf   
  40b7b1:	xchg   edi,eax
  40b7b2:	stc    
  40b7b3:	push   edx
  40b7b4:	std    
  40b7b5:	xchg   esi,eax
  40b7b6:	mov    dl,0xfa
  40b7b8:	lahf   
  40b7b9:	and    edx,DWORD PTR [eax]
  40b7bb:	call   0x13b5c391
  40b7c0:	inc    ecx
  40b7c1:	pop    ss
  40b7c2:	rcl    BYTE PTR [bx+si-0x2c4b],0x82
  40b7c8:	jns    0x40b823
  40b7ca:	push   ecx
  40b7cb:	pushf  
  40b7cc:	and    edx,ebx
  40b7ce:	add    BYTE PTR [esi-0x7d37802f],al
  40b7d4:	enter  0x33,0xc0
  40b7d8:	inc    edx
  40b7d9:	dec    esi
  40b7da:	xchg   edi,eax
  40b7db:	push   es
  40b7dc:	jg     0x40b777
  40b7de:	hlt    
  40b7df:	sbb    esp,DWORD PTR [eax-0x62]
  40b7e2:	mov    ecx,0x304affcf
  40b7e7:	push   0x2bcf1615
  40b7ec:	bnd jge 0x40b863
  40b7ef:	jbe    0x40b77a
  40b7f1:	sbb    al,0x2e
  40b7f3:	inc    ebp
  40b7f4:	cli    
  40b7f5:	mov    eax,0x33b83594
  40b7fa:	mov    WORD PTR [ebp-0x50],cs
  40b7fd:	add    DWORD PTR [eax+ebx*1],esp
  40b800:	or     eax,0xf18ee944
  40b805:	jp     0x40b883
  40b807:	test   eax,0xecda5ca6
  40b80c:	pop    edi
  40b80d:	xchg   BYTE PTR [ebp+0x59fdd44f],al
  40b813:	xor    al,0xb6
  40b815:	loop   0x40b883
  40b817:	cmp    al,0xf1
  40b819:	xor    eax,ebp
  40b81b:	mov    bl,0xe0
  40b81d:	mov    ch,0x71
  40b81f:	mov    ebx,0xef532a75
  40b824:	push   ecx
  40b825:	mov    edx,0x4c55cdcd
  40b82a:	ds cmp eax,0x38a6bc5
  40b830:	cli    
  40b831:	add    DWORD PTR [ebx-0x74f54b83],ecx
  40b837:	jp     0x40b7ea
  40b839:	call   0x66aef6fc
  40b83e:	dec    edi
  40b83f:	sub    BYTE PTR [esi-0x5f8a30cf],al
  40b845:	lock out dx,al
  40b847:	lea    esp,[ebx-0x11fd3c1e]
  40b84d:	lods   al,BYTE PTR ds:[esi]
  40b84e:	sbb    DWORD PTR [edx],ecx
  40b850:	ins    BYTE PTR es:[edi],dx
  40b851:	jno    0x40b82c
  40b853:	nop
  40b854:	icebp  
  40b855:	inc    ecx
  40b856:	add    ebx,DWORD PTR ds:0x8dc47fc3
  40b85c:	dec    edi
  40b85d:	ret    
  40b85e:	xchg   edi,eax
  40b85f:	mov    eax,0x7466cba2
  40b864:	push   ebx
  40b865:	mov    eax,ds:0x123dd707
  40b86a:	scas   eax,DWORD PTR es:[edi]
  40b86b:	jbe    0x40b873
  40b86d:	cld    
  40b86e:	pop    ebx
  40b86f:	adc    DWORD PTR [edi+0x3b7723f6],ebp
  40b875:	aaa    
  40b876:	cdq    
  40b877:	dec    ebx
  40b878:	xlat   BYTE PTR gs:[ebx]
  40b87a:	xchg   edx,eax
  40b87b:	pop    eax
  40b87c:	and    cl,BYTE PTR [ecx-0x457c56e7]
  40b882:	dec    ebp
  40b883:	retf   0xa1de
  40b886:	adc    al,0x63
  40b888:	dec    ecx
  40b889:	jecxz  0x40b819
  40b88b:	sub    DWORD PTR [edi-0x379a4bc1],edi
  40b891:	mov    esp,0xd9d63c9
  40b896:	in     al,dx
  40b897:	jg     0x40b900
  40b899:	cdq    
  40b89a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b89b:	mov    WORD PTR [ebp-0xc],es
  40b89e:	aad    0x53
  40b8a0:	leave  
  40b8a1:	dec    edi
  40b8a2:	cmc    
  40b8a3:	out    0xac,eax
  40b8a5:	adc    al,0x90
  40b8a7:	popa   
  40b8a8:	pop    esi
  40b8a9:	inc    esi
  40b8aa:	mov    eax,ds:0xd0c44e29
  40b8af:	mov    ds:0x92a9be64,eax
  40b8b4:	leave  
  40b8b5:	add    al,0x22
  40b8b7:	sub    ch,BYTE PTR [eax+0x3942f470]
  40b8bd:	lock rcl DWORD PTR [esi+0x2f0d5a0c],cl
  40b8c4:	or     eax,0xfa9c8b1d
  40b8c9:	and    DWORD PTR [edi+0xf8ab514],edi
  40b8cf:	repz gs mov ebp,0x35f836e8
  40b8d6:	mov    bh,0x62
  40b8d8:	(bad)  
  40b8d9:	sbb    ebp,DWORD PTR [esi+0x15]
  40b8dc:	leave  
  40b8dd:	aad    0x44
  40b8df:	pop    esp
  40b8e0:	or     eax,0x2010401c
  40b8e5:	pop    ss
  40b8e6:	leave  
  40b8e7:	bound  eax,QWORD PTR [ecx-0x2159ffe3]
  40b8ed:	xchg   ebp,ebp
  40b8ef:	inc    ebx
  40b8f0:	and    ah,ah
  40b8f2:	sub    bh,BYTE PTR [ecx+0x58de89b1]
  40b8f8:	pop    ebx
  40b8f9:	stc    
  40b8fa:	sub    eax,0x2ceb81f
  40b8ff:	mov    ch,0xaa
  40b901:	call   0x1e76:0x2846b81e
  40b908:	shl    BYTE PTR [edx+0x7c06a60c],1
  40b90e:	mov    DWORD PTR [edx],0xf0e70445
  40b914:	xchg   DWORD PTR [edx+esi*4],edi
  40b917:	fcmovb st,st(2)
  40b919:	mov    edi,0x98da717d
  40b91e:	add    ebx,DWORD PTR [edx+0x52f5c190]
  40b924:	mov    ebp,0xb575e0d5
  40b929:	xchg   edx,eax
  40b92a:	fnstsw WORD PTR ds:0xfd09faa3
  40b930:	mov    ch,0x15
  40b932:	shr    al,cl
  40b934:	xlat   BYTE PTR ds:[ebx]
  40b935:	sbb    DWORD PTR [ebp+0x6],eax
  40b938:	pop    ds
  40b939:	loop   0x40b959
  40b93b:	sub    al,0x11
  40b93d:	push   es
  40b93e:	cmp    al,0x18
  40b940:	pop    edx
  40b941:	inc    ebx
  40b942:	mov    ebx,0xb78e32d2
  40b947:	adc    eax,DWORD PTR ds:0x3130148
  40b94d:	jp     0x40b992
  40b94f:	popa   
  40b950:	inc    edi
  40b951:	aaa    
  40b952:	int    0x5e
  40b954:	outs   dx,DWORD PTR ds:[esi]
  40b955:	mov    cl,0x3b
  40b957:	mov    bh,0x7a
  40b959:	out    dx,al
  40b95a:	pop    edx
  40b95b:	xlat   BYTE PTR ds:[ebx]
  40b95c:	loope  0x40b92a
  40b95e:	mov    ch,0x88
  40b960:	sub    DWORD PTR [eax],edi
  40b962:	xor    esi,DWORD PTR [ebx+0x67]
  40b965:	fsubr  QWORD PTR [edx]
  40b967:	lods   eax,DWORD PTR ds:[esi]
  40b968:	xchg   BYTE PTR [edi+edx*8],ah
  40b96b:	stos   BYTE PTR es:[edi],al
  40b96c:	fsub   QWORD PTR [eax-0x67]
  40b96f:	mov    ebp,0xccc08925
  40b974:	lds    ebp,FWORD PTR [ebx+edx*4]
  40b977:	pop    esp
  40b978:	sub    DWORD PTR [eax],edx
  40b97a:	in     eax,0xb2
  40b97c:	out    0x57,eax
  40b97e:	mov    dh,0x4e
  40b980:	shl    DWORD PTR ds:0x88a36ac2,0xb3
  40b987:	cmp    ecx,DWORD PTR [ebx]
  40b989:	ss out dx,al
  40b98b:	add    al,0x56
  40b98d:	call   0x835a:0xdd92f943
  40b994:	test   DWORD PTR [eax+0x6b],eax
  40b997:	mov    esi,0xb70bdcb
  40b99c:	jge    0x40b9d1
  40b99e:	jle    0x40b9e5
  40b9a0:	mov    ch,0x31
  40b9a2:	and    ah,0x95
  40b9a5:	cdq    
  40b9a6:	pop    ss
  40b9a7:	jle    0x40b92d
  40b9a9:	daa    
  40b9aa:	ss inc ebp
  40b9ac:	imul   ebx,DWORD PTR [esi+0x6f97bdfc],0x13
  40b9b3:	pop    ebx
  40b9b4:	mov    edi,0xf1c5de22
  40b9b9:	mov    al,0x2d
  40b9bb:	mov    WORD PTR [edx-0x1a],es
  40b9be:	fmul   DWORD PTR [edx+0x2b]
  40b9c1:	mov    DWORD PTR [ebx-0x33],edx
  40b9c4:	sbb    al,0x30
  40b9c6:	pusha  
  40b9c7:	push   esi
  40b9c8:	inc    esi
  40b9c9:	dec    DWORD PTR [ebx+0x23]
  40b9cc:	test   al,0x8d
  40b9ce:	add    edx,ecx
  40b9d0:	pop    ds
  40b9d1:	ins    DWORD PTR es:[edi],dx
  40b9d2:	cmp    eax,0x1c428e09
  40b9d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9d8:	xchg   BYTE PTR [eax-0x72],ch
  40b9db:	pop    ecx
  40b9dc:	cmc    
  40b9dd:	xchg   al,dh
  40b9df:	xchg   ecx,eax
  40b9e0:	sub    BYTE PTR [ebx+0x4f],0x9f
  40b9e4:	inc    ecx
  40b9e5:	(bad)  
  40b9e6:	ins    BYTE PTR es:[edi],dx
  40b9e7:	push   es
  40b9e8:	xor    BYTE PTR [edi-0x1a],0x80
  40b9ec:	xchg   esp,eax
  40b9ed:	mov    ah,0x58
  40b9ef:	scas   eax,DWORD PTR es:[edi]
  40b9f0:	loopne 0x40ba1e
  40b9f2:	fnstsw WORD PTR [ecx+esi*1-0x6cb061b8]
  40b9f9:	fs pop ecx
  40b9fb:	in     al,dx
  40b9fc:	jb     0x40b9a9
  40b9fe:	xlat   BYTE PTR ds:[ebx]
  40b9ff:	pop    ebx
  40ba00:	inc    edx
  40ba01:	pop    ss
  40ba02:	dec    esp
  40ba03:	gs xchg ecx,eax
  40ba05:	sub    ch,bl
  40ba07:	mov    ah,BYTE PTR [edx+ebx*8-0xc]
  40ba0b:	(bad)  
  40ba0c:	(bad)  
  40ba0d:	inc    eax
  40ba0e:	mov    ecx,0xcd8b1f37
  40ba13:	adc    DWORD PTR [ecx-0x68a86378],ecx
  40ba19:	fcomp  st(6)
  40ba1b:	mov    al,ds:0xd9c06ee1
  40ba20:	imul   ebx,DWORD PTR [ecx-0x3e6eb3d3],0x2
  40ba27:	dec    esi
  40ba28:	xor    ebp,DWORD PTR [ebp+0x3c]
  40ba2b:	fldcw  WORD PTR ds:0x624ed9cc
  40ba31:	mov    ch,dl
  40ba33:	jo     0x40ba64
  40ba35:	fucom  st(5)
  40ba37:	dec    eax
  40ba38:	sub    BYTE PTR [ecx-0x63],0xd9
  40ba3c:	xchg   BYTE PTR [ecx-0x3],al
  40ba3f:	sub    dh,BYTE PTR [ebx-0x5182ba0c]
  40ba45:	ficom  WORD PTR [ecx-0x1e730348]
  40ba4b:	jle    0x40ba4f
  40ba4d:	icebp  
  40ba4e:	cmp    BYTE PTR [ebp+0x8],bl
  40ba51:	lahf   
  40ba52:	rcr    edx,1
  40ba54:	mov    WORD PTR [esi],?
  40ba56:	add    esp,DWORD PTR [eax-0x7e]
  40ba59:	dec    edx
  40ba5a:	stos   BYTE PTR es:[edi],al
  40ba5b:	das    
  40ba5c:	mul    dh
  40ba5e:	retf   
  40ba5f:	das    
  40ba60:	call   0x162ea6e0
  40ba65:	cmp    eax,DWORD PTR [edx]
  40ba67:	fcom   DWORD PTR [ebp+0x481f2aa9]
  40ba6d:	cmc    
  40ba6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba6f:	mov    ebp,0xaa138300
  40ba74:	mov    bl,0x32
  40ba76:	adc    al,0x50
  40ba78:	ins    BYTE PTR es:[edi],dx
  40ba79:	xchg   BYTE PTR [ebx+0x17],ch
  40ba7c:	pop    ecx
  40ba7d:	repnz stc 
  40ba7f:	ret    
  40ba80:	pop    ecx
  40ba81:	xor    ebx,DWORD PTR [ecx+ecx*2+0x53]
  40ba85:	cmp    DWORD PTR [ecx+0x3a],eax
  40ba88:	xor    DWORD PTR [eax],edi
  40ba8a:	imul   ebp,DWORD PTR [edx-0x5e]
  40ba8e:	gs lahf 
  40ba90:	mov    ecx,0xa4fccbc1
  40ba95:	mov    cl,0x95
  40ba97:	test   DWORD PTR [ebx+esi*1+0x5b],0x84d1cdc5
  40ba9f:	inc    ebp
  40baa0:	imul   esp,DWORD PTR [esi+0x2f],0x53
  40baa4:	lods   al,BYTE PTR ds:[esi]
  40baa5:	mov    dh,0xb7
  40baa7:	jo     0x40bad2
  40baa9:	adc    al,BYTE PTR [edi+0x26]
  40baac:	rol    DWORD PTR [ecx],0x4
  40baaf:	(bad)  
  40bab0:	call   0x268f:0xeb023312
  40bab7:	adc    edi,DWORD PTR [eax]
  40bab9:	shufps xmm4,XMMWORD PTR [ecx+esi*2+0x4df053a4],0xe5
  40bac2:	(bad)  
  40bac3:	xchg   edi,eax
  40bac4:	xchg   ebx,eax
  40bac5:	sbb    DWORD PTR [ebx],edx
  40bac7:	cmp    BYTE PTR [edi-0x5c7b19c1],bh
  40bacd:	pushf  
  40bace:	xadd   BYTE PTR [edx-0x55885e3f],dl
  40bad5:	retf   0x4053
  40bad8:	test   al,0x94
  40bada:	mov    bl,0xd0
  40badc:	jmp    0x5ba6:0x89860a5a
  40bae3:	and    al,0xb5
  40bae6:	bound  esi,QWORD PTR [eax+ebp*1+0x44]
  40baea:	dec    edx
  40baeb:	jge    0x40ba98
  40baed:	dec    edi
  40baee:	dec    esi
  40baef:	sub    bh,BYTE PTR [ecx]
  40baf1:	mov    WORD PTR [esi+0x64e14026],fs
  40baf7:	call   0x9e7f:0xcbf2c811
  40bafe:	dec    ecx
  40baff:	jg     0x40bb3d
  40bb01:	ror    esi,0x26
  40bb04:	aam    0x84
  40bb06:	fs cmc 
  40bb08:	loop   0x40bb62
  40bb0a:	out    0x2f,al
  40bb0c:	rcl    BYTE PTR [edx],cl
  40bb0e:	gs loop 0x40bb7c
  40bb11:	(bad)  
  40bb12:	sub    cl,dl
  40bb14:	scas   al,BYTE PTR es:[edi]
  40bb15:	mov    bh,0xcc
  40bb17:	xchg   DWORD PTR [edi+0x51],ebp
  40bb1a:	cdq    
  40bb1b:	dec    ecx
  40bb1c:	cs aam 0x39
  40bb1f:	test   eax,0xc9ec1a6b
  40bb24:	pop    eax
  40bb25:	and    eax,0xec6c292a
  40bb2a:	dec    ecx
  40bb2b:	jmp    0x12f1f597
  40bb30:	test   BYTE PTR [edx+0x1941256],ch
  40bb36:	xor    eax,0x9cd31503
  40bb3b:	jnp    0x40bb4c
  40bb3d:	aam    0x7
  40bb3f:	rol    DWORD PTR [ebx+ecx*4],0x46
  40bb43:	idiv   BYTE PTR [ebp+0x38]
  40bb46:	cmp    DWORD PTR [edi+edx*1],esp
  40bb49:	fdivp  st(1),st
  40bb4b:	imul   eax,DWORD PTR [esp+eax*4+0x8af98f4],0x55
  40bb53:	dec    edx
  40bb54:	cmp    BYTE PTR [ebp-0x7fe208ff],ah
  40bb5a:	push   ebp
  40bb5b:	mov    esi,0x7d5b1afe
  40bb60:	fcmovu st,st(1)
  40bb62:	xor    eax,0x81dcf4ff
  40bb67:	shr    ah,cl
  40bb69:	in     al,0xcc
  40bb6b:	int    0x8f
  40bb6d:	pop    ss
  40bb6e:	out    dx,eax
  40bb6f:	or     bl,ch
  40bb71:	scas   eax,DWORD PTR es:[edi]
  40bb72:	dec    BYTE PTR [edi+ebp*8+0xd]
  40bb76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb77:	retf   0xdbde
  40bb7a:	adc    DWORD PTR [eax+0x60],eax
  40bb7d:	into   
  40bb7e:	and    bh,BYTE PTR [esi+0x61]
  40bb81:	adc    ebp,DWORD PTR ds:0x27c69d9e
  40bb87:	ds add al,0x48
  40bb8a:	pop    edi
  40bb8b:	xchg   ebp,eax
  40bb8c:	xor    edi,DWORD PTR ss:[ebx-0x74]
  40bb90:	or     eax,0x93aa15e4
  40bb95:	aam    0x5f
  40bb97:	cld    
  40bb98:	cmp    eax,0xc1c51524
  40bb9d:	stos   DWORD PTR es:[edi],eax
  40bb9e:	mov    ebx,0xc38d36ae
  40bba3:	(bad)  
  40bba4:	out    0x98,al
  40bba6:	popf   
  40bba7:	mov    esi,0xf26a2747
  40bbac:	popa   
  40bbad:	fmul   st(0),st
  40bbaf:	outs   dx,DWORD PTR ds:[esi]
  40bbb0:	dec    esp
  40bbb1:	push   es
  40bbb2:	xor    eax,0x1164a6f4
  40bbb7:	xor    ebp,DWORD PTR ds:0x679abafd
  40bbbd:	shl    dh,0x40
  40bbc0:	cmp    bh,ch
  40bbc2:	xchg   ebx,eax
  40bbc3:	xchg   dl,dh
  40bbc5:	mov    al,0x36
  40bbc7:	push   es
  40bbc8:	jmp    0xa86e:0xdf3ce85a
  40bbcf:	(bad)  
  40bbd0:	mov    al,0x97
  40bbd2:	cmp    dl,BYTE PTR [esi+eiz*2+0x5f73ca93]
  40bbd9:	mov    ecx,0x517dab0c
  40bbde:	push   ss
  40bbdf:	and    eax,0xbd1369a7
  40bbe4:	cs pop ds
  40bbe6:	adc    DWORD PTR [esp+esi*1-0x3d1ce963],edx
  40bbed:	adc    al,0xad
  40bbef:	xlat   BYTE PTR ds:[ebx]
  40bbf0:	cli    
  40bbf1:	adc    bh,BYTE PTR [esi-0x6accefc6]
  40bbf7:	jno    0x40bbf7
  40bbf9:	mov    ch,0x20
  40bbfb:	sti    
  40bbfc:	stos   BYTE PTR es:[edi],al
  40bbfd:	push   0xffffffe4
  40bbff:	jnp    0x40bb9b
  40bc01:	pop    eax
  40bc02:	mov    edi,0x61093190
  40bc07:	jnp    0x40bc2e
  40bc09:	imul   ebx,esp,0x20
  40bc0c:	(bad)  
  40bc0d:	jp     0x40bc02
  40bc0f:	ret    0xa6fe
  40bc12:	outs   dx,DWORD PTR ds:[esi]
  40bc13:	test   al,0x74
  40bc15:	jmp    0x40bc17
  40bc17:	cmp    ah,BYTE PTR [edx+0x22147567]
  40bc1d:	shl    esp,cl
  40bc1f:	xor    ch,dl
  40bc21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc22:	rol    DWORD PTR [ecx],0x9c
  40bc25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc26:	cwde   
  40bc27:	arpl   WORD PTR [edx-0x1c],bp
  40bc2a:	xchg   ebx,eax
  40bc2b:	imul   esp,DWORD PTR [esi-0x6af5b9f6],0xffffffbb
  40bc32:	or     dl,BYTE PTR [ecx]
  40bc34:	add    edi,DWORD PTR [esi-0x77]
  40bc37:	js     0x40bc27
  40bc39:	add    al,0xeb
  40bc3b:	sti    
  40bc3c:	addr16 inc edi
  40bc3e:	pop    ecx
  40bc3f:	cli    
  40bc40:	in     al,dx
  40bc41:	add    al,0x99
  40bc43:	inc    edx
  40bc44:	mov    WORD PTR [eax+0xcf42cf0],fs
  40bc4a:	push   0x6230066d
  40bc4f:	jecxz  0x40bbdd
  40bc51:	enter  0x77c1,0x21
  40bc55:	sub    eax,0x8fc55a87
  40bc5a:	push   esp
  40bc5b:	mov    ah,ah
  40bc5d:	jge    0x40bbfd
  40bc5f:	push   es
  40bc60:	shl    ebp,cl
  40bc62:	cdq    
  40bc63:	xchg   edx,eax
  40bc64:	mov    esi,0xcb067d1f
  40bc69:	std    
  40bc6a:	adc    DWORD PTR [edx+edi*2-0x40],eax
  40bc6e:	or     BYTE PTR [ecx+0x55],dl
  40bc71:	fmulp  st(5),st
  40bc73:	cmp    DWORD PTR [ebp+0x4],esp
  40bc76:	mov    bl,0x34
  40bc78:	sbb    al,0x15
  40bc7a:	iret   
  40bc7b:	mov    ds:0x44a580f,eax
  40bc80:	mov    al,0xfd
  40bc82:	pop    ds
  40bc83:	out    0x94,eax
  40bc85:	popa   
  40bc86:	std    
  40bc87:	sub    ecx,0x4fde8032
  40bc8d:	ja     0x40bc44
  40bc8f:	rcl    DWORD PTR [ebx],1
  40bc91:	mov    es,WORD PTR [edx-0x144863e2]
  40bc97:	int    0x18
  40bc99:	(bad)  
  40bc9a:	ror    esi,1
  40bc9c:	add    eax,0x7c85fe46
  40bca1:	xchg   edi,eax
  40bca2:	test   DWORD PTR [eax-0x3d0496eb],ebp
  40bca8:	pusha  
  40bca9:	or     edx,esp
  40bcab:	sbb    eax,DWORD PTR [ecx]
  40bcad:	out    dx,al
  40bcae:	pop    ebx
  40bcaf:	jp     0x40bca1
  40bcb1:	int    0xd4
  40bcb3:	fcompp 
  40bcb5:	mov    bl,0xdb
  40bcb7:	dec    esi
  40bcb8:	stos   DWORD PTR es:[edi],eax
  40bcb9:	push   cs
  40bcba:	es inc esp
  40bcbc:	popf   
  40bcbd:	mov    dh,BYTE PTR [ebp-0x10d007c0]
  40bcc3:	cmp    DWORD PTR [esi+0x9],eax
  40bcc6:	mov    ds:0xcc71a76e,eax
  40bccb:	cmp    ah,dh
  40bccd:	add    ecx,DWORD PTR [eax-0x561a5306]
  40bcd3:	stc    
  40bcd4:	lods   al,BYTE PTR ds:[esi]
  40bcd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcd6:	xchg   edi,eax
  40bcd7:	fmul   QWORD PTR [ecx+0x506843dc]
  40bcdd:	push   edi
  40bcde:	aam    0xdb
  40bce0:	shl    BYTE PTR [eax+0x29a5b89],1
  40bce6:	cmp    edi,DWORD PTR [esi]
  40bce8:	cmc    
  40bce9:	push   esi
  40bcea:	cmp    al,cl
  40bcec:	fld    DWORD PTR [edi+eiz*4+0x13508a2e]
  40bcf3:	ja     0x40bcca
  40bcf5:	fild   QWORD PTR [ebp+0x3231a746]
  40bcfb:	add    ah,dl
  40bcfd:	and    BYTE PTR [esi+0x1e],0x94
  40bd01:	fsubr  QWORD PTR [ebx+0x4f5c8866]
  40bd07:	and    DWORD PTR [eax],edx
  40bd09:	mov    gs,WORD PTR [ecx-0x7e]
  40bd0c:	mov    dh,0xbb
  40bd0e:	jmp    0x83b6fdc4
  40bd13:	push   eax
  40bd14:	mov    ah,0x3b
  40bd16:	mov    ds:0xc17bd333,al
  40bd1b:	sub    al,0x5d
  40bd1d:	xchg   edi,eax
  40bd1e:	sahf   
  40bd1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd20:	int    0x76
  40bd22:	sti    
  40bd23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd24:	dec    edx
  40bd25:	int3   
  40bd26:	and    BYTE PTR ds:[edi+edi*1-0x36],bh
  40bd2b:	inc    ebx
  40bd2c:	dec    ecx
  40bd2d:	test   al,0xa3
  40bd2f:	push   0x2
  40bd31:	dec    ebp
  40bd32:	add    eax,0xf5b48c2
  40bd37:	retf   
  40bd38:	(bad)  
  40bd39:	and    BYTE PTR [edi],al
  40bd3b:	pusha  
  40bd3c:	push   ecx
  40bd3d:	div    BYTE PTR [edx]
  40bd3f:	dec    esp
  40bd40:	push   0x4f
  40bd42:	daa    
  40bd43:	sub    DWORD PTR [esi+ebp*1],eax
  40bd46:	adc    al,0x62
  40bd48:	es int3 
  40bd4a:	push   ebx
  40bd4b:	sar    bh,1
  40bd4d:	daa    
  40bd4e:	rcr    BYTE PTR [ecx-0x7b],cl
  40bd51:	je     0x40bce4
  40bd53:	call   0x7510461d
  40bd58:	fs pop edx
  40bd5a:	ficom  DWORD PTR [ecx-0x79878261]
  40bd60:	xlat   BYTE PTR ds:[ebx]
  40bd61:	stc    
  40bd62:	push   ebp
  40bd63:	cs and eax,0xc7c05b1d
  40bd69:	pop    ds
  40bd6a:	xchg   ecx,eax
  40bd6b:	pop    ebp
  40bd6c:	add    BYTE PTR [esi],dl
  40bd6e:	dec    ebx
  40bd6f:	retf   
  40bd70:	pop    ds
  40bd71:	dec    ebx
  40bd72:	arpl   WORD PTR [ebp-0x7a00b70c],cx
  40bd78:	neg    BYTE PTR [ebx+edx*4]
  40bd7b:	(bad)  
  40bd7d:	cmp    ah,ch
  40bd7f:	and    eax,DWORD PTR [ecx+0x27]
  40bd82:	(bad)  
  40bd83:	stc    
  40bd84:	jne    0x40bd79
  40bd86:	mov    edi,0x882105cf
  40bd8b:	sahf   
  40bd8c:	test   DWORD PTR [eax],edi
  40bd8e:	inc    ecx
  40bd8f:	xor    BYTE PTR [edi+0x63bac1cc],dh
  40bd95:	cmp    bh,BYTE PTR [ebp-0x1]
  40bd98:	(bad)  
  40bd9a:	(bad)  
  40bd9b:	and    eax,0x1ba401ee
  40bda0:	pop    edx
  40bda1:	jg     0x40bd7a
  40bda3:	cmp    DWORD PTR [edx-0x4b],ecx
  40bda6:	push   es
  40bda7:	or     ebp,edi
  40bda9:	jecxz  0x40bdda
  40bdab:	push   esp
  40bdac:	xlat   BYTE PTR ds:[ebx]
  40bdad:	imul   ecx,DWORD PTR [esi],0x7b9962f1
  40bdb3:	sbb    al,0x19
  40bdb5:	imul   edi,DWORD PTR [esi+0x384c9355],0x52039e40
  40bdbf:	retf   
  40bdc0:	cdq    
  40bdc1:	mov    al,0xdc
  40bdc3:	push   es
  40bdc4:	mov    ch,0x6d
  40bdc6:	sar    BYTE PTR [eax+0x75],cl
  40bdc9:	std    
  40bdca:	ret    
  40bdcb:	inc    esi
  40bdcc:	sbb    eax,0x6d563c1e
  40bdd1:	adc    ebx,DWORD PTR [edi]
  40bdd3:	push   ebp
  40bdd4:	mov    eax,0xca4c2280
  40bdd9:	out    0xbb,al
  40bddb:	ins    BYTE PTR es:[edi],dx
  40bddc:	out    dx,eax
  40bddd:	and    eax,0xd155c327
  40bde2:	mov    edi,0x3d35f4e7
  40bde7:	mov    edi,0x90baff4c
  40bdec:	out    dx,eax
  40bded:	mov    BYTE PTR es:[edx+0x66],ah
  40bdf1:	shr    DWORD PTR [ecx+0x64],1
  40bdf4:	sbb    al,0x26
  40bdf6:	or     al,0x44
  40bdf8:	or     DWORD PTR [ebx+0x7b],0xd1606ed5
  40bdff:	inc    ebx
  40be00:	stos   DWORD PTR es:[edi],eax
  40be01:	jl     0x40bde2
  40be03:	(bad)  
  40be04:	cld    
  40be05:	mov    eax,ds:0x3bcf7cda
  40be0a:	(bad)  
  40be0b:	imul   ebp,DWORD PTR [ecx-0x59],0x6966f57d
  40be12:	out    0x9b,eax
  40be14:	out    0x62,eax
  40be16:	scas   eax,DWORD PTR es:[edi]
  40be17:	into   
  40be18:	int    0x6d
  40be1a:	push   edi
  40be1b:	jo     0x40be9b
  40be1d:	jle    0x40be91
  40be1f:	dec    eax
  40be20:	les    eax,FWORD PTR [ebx+0x7b]
  40be23:	shl    DWORD PTR [ebp-0x29],0x1
  40be27:	inc    sp
  40be29:	(bad)  
  40be2a:	jns    0x40be0a
  40be2c:	inc    eax
  40be2d:	push   ds
  40be2e:	es ins BYTE PTR es:[edi],dx
  40be30:	(bad)  
  40be32:	pop    edx
  40be33:	lock inc edi
  40be35:	xchg   esi,eax
  40be36:	mov    ds:0xbc37b676,al
  40be3b:	mov    ecx,0x127e541f
  40be40:	in     al,dx
  40be41:	xlat   BYTE PTR ds:[ebx]
  40be42:	add    dl,BYTE PTR [ebp+edx*4+0x620732a4]
  40be49:	mov    ah,0x2
  40be4b:	mov    ebx,0xee6de33
  40be50:	mov    bl,0xe4
  40be52:	add    BYTE PTR [edx],ah
  40be54:	pop    ss
  40be55:	adc    BYTE PTR [esi+0x79],cl
  40be58:	xchg   BYTE PTR [ecx-0x4c],bl
  40be5b:	dec    esp
  40be5c:	inc    ebp
  40be5d:	(bad)  
  40be5e:	shl    DWORD PTR [eax+0x177507cb],cl
  40be64:	push   edi
  40be65:	jle    0x40be62
  40be67:	addr16 mov dh,al
  40be6a:	lds    ebp,FWORD PTR [ebx+0x33]
  40be6d:	push   cs
  40be6e:	adc    BYTE PTR [edi+ebp*4-0x19],bl
  40be72:	xor    esi,DWORD PTR es:[edx+esi*8]
  40be76:	jmp    0x82d6:0xeebc7cc5
  40be7d:	daa    
  40be7e:	fiadd  DWORD PTR [ebx+0x3e]
  40be81:	or     edi,edi
  40be83:	stos   BYTE PTR es:[edi],al
  40be84:	lds    ebx,FWORD PTR [eax+ebp*8]
  40be87:	jg     0x40bf08
  40be89:	dec    esi
  40be8a:	pop    ds
  40be8b:	push   eax
  40be8c:	or     eax,0xe8379af
  40be91:	jg     0x40be7a
  40be93:	push   edx
  40be94:	pop    edi
  40be95:	xor    eax,edx
  40be97:	push   esp
  40be98:	and    al,BYTE PTR [eax]
  40be9a:	(bad)  
  40be9b:	dec    edx
  40be9c:	ins    BYTE PTR es:[edi],dx
  40be9d:	xor    eax,0x94cffe4c
  40bea2:	adc    DWORD PTR [eax+0x20e9a361],eax
  40bea8:	lahf   
  40bea9:	jl     0x40bf2a
  40beab:	add    BYTE PTR [edx],0xc
  40beae:	and    DWORD PTR [edx+0x54],ebp
  40beb1:	mov    bh,0x99
  40beb3:	xor    al,0x51
  40beb5:	pushf  
  40beb6:	xchg   esi,eax
  40beb7:	dec    ebp
  40beb8:	mov    al,0xdd
  40beba:	dec    ebp
  40bebb:	test   BYTE PTR [ecx],dl
  40bebd:	fnstcw WORD PTR [esp+esi*4+0x55bcf963]
  40bec4:	inc    esi
  40bec5:	clc    
  40bec6:	imul   eax,DWORD PTR [ecx+0x6],0xbd4afe10
  40becd:	adc    al,0x5
  40becf:	push   ebx
  40bed0:	or     al,0x2c
  40bed2:	outs   dx,DWORD PTR ds:[esi]
  40bed3:	lea    esi,[esi-0x5f55e176]
  40bed9:	outs   dx,DWORD PTR ds:[esi]
  40beda:	jmp    0x40bee2
  40bedc:	xchg   ecx,eax
  40bedd:	aaa    
  40bede:	xor    al,0xe6
  40bee0:	out    0x72,al
  40bee2:	repz enter 0x45c0,0x66
  40bee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bee8:	dec    esi
  40bee9:	adc    ebx,eax
  40beeb:	jbe    0x40bf6c
  40beed:	stc    
  40beee:	mov    ebp,0xfeb46799
  40bef3:	cwde   
  40bef4:	mov    dl,BYTE PTR ds:0x43dd4764
  40befa:	mov    ds:0x1e88e85,al
  40beff:	pop    es
  40bf00:	push   ebx
  40bf01:	mov    ebx,0xadfcdf77
  40bf06:	sahf   
  40bf07:	dec    ecx
  40bf08:	out    0x55,eax
  40bf0a:	or     al,0x86
  40bf0c:	xchg   edx,eax
  40bf0d:	mov    bh,0x43
  40bf0f:	es push ebp
  40bf11:	mov    dl,0x7c
  40bf13:	js     0x40bf94
  40bf15:	mov    bh,0x5f
  40bf17:	aam    0x42
  40bf19:	pop    edi
  40bf1a:	mov    ds:0x9ed1602b,eax
  40bf1f:	sbb    esp,DWORD PTR [edi-0x20]
  40bf22:	gs dec esp
  40bf24:	xor    BYTE PTR ds:0xd1b47cd7,ah
  40bf2a:	pop    eax
  40bf2b:	and    DWORD PTR [ecx*4-0x43fe5fb2],esi
  40bf32:	ret    0xe8a8
  40bf35:	aad    0xd0
  40bf37:	push   esp
  40bf38:	mov    eax,ds:0xebec1fce
  40bf3d:	sbb    edx,DWORD PTR [ecx+0x7be2932e]
  40bf43:	lds    edi,FWORD PTR [edi+0x5a4a90b1]
  40bf49:	xchg   ebx,eax
  40bf4a:	pushf  
  40bf4b:	in     eax,dx
  40bf4c:	stos   DWORD PTR es:[edi],eax
  40bf4d:	mov    al,0xd0
  40bf4f:	xchg   DWORD PTR [eax+0x47e41459],eax
  40bf55:	sub    bh,BYTE PTR [eax+0x9]
  40bf58:	mov    esp,0x98b4dd4d
  40bf5d:	mov    edi,0xd1404c67
  40bf62:	cmp    eax,0x2b419a3d
  40bf67:	jge    0x40bf2d
  40bf69:	ror    DWORD PTR ds:0x3396c0a0,1
  40bf6f:	pushf  
  40bf70:	loopne 0x40bfc4
  40bf72:	dec    edx
  40bf73:	fmul   st(4),st
  40bf75:	mov    eax,0x2a2ed26f
  40bf7a:	and    al,0x52
  40bf7c:	jns    0x40bf67
  40bf7e:	out    dx,al
  40bf7f:	les    edx,FWORD PTR [edi+0x2a]
  40bf82:	sub    eax,0xe1cb1a67
  40bf87:	and    BYTE PTR [eax],dh
  40bf89:	add    cl,BYTE PTR [ebx]
  40bf8b:	xor    DWORD PTR [edx+0x73bf426c],esi
  40bf91:	aad    0x73
  40bf93:	sub    eax,0x37d0aefd
  40bf98:	cmp    al,0xed
  40bf9a:	out    0x37,eax
  40bf9c:	outs   dx,BYTE PTR ds:[esi]
  40bf9d:	cmp    eax,0x21faa4d4
  40bfa2:	pop    es
  40bfa3:	(bad)  
  40bfa4:	mov    edx,0x433f9acc
  40bfa9:	xchg   edi,eax
  40bfaa:	jae    0x40c006
  40bfac:	fldcw  WORD PTR [eax-0x7d]
  40bfaf:	call   0xd3ea:0x5c9666e1
  40bfb6:	aaa    
  40bfb7:	ja     0x40bf98
  40bfb9:	pop    ebx
  40bfba:	and    ch,bh
  40bfbc:	pop    edx
  40bfbd:	fiadd  WORD PTR [edi+eax*1+0x1aee61ed]
  40bfc4:	cwde   
  40bfc5:	imul   esi,DWORD PTR [eax],0xbd41404a
  40bfcb:	das    
  40bfcc:	xchg   edx,eax
  40bfcd:	or     edi,DWORD PTR [eax]
  40bfcf:	pop    ebx
  40bfd0:	mov    al,0x40
  40bfd2:	ret    0xf00b
  40bfd5:	shl    edi,cl
  40bfd7:	cwde   
  40bfd8:	push   eax
  40bfd9:	push   ebp
  40bfda:	ror    DWORD PTR [esi-0x3ce1d56e],0x2d
  40bfe1:	(bad)  
  40bfe2:	int3   
  40bfe3:	jbe    0x40bffc
  40bfe5:	cmp    ah,dl
  40bfe7:	fwait
  40bfe8:	mov    cl,0x1d
  40bfea:	jp     0x40c02d
  40bfec:	xchg   ecx,eax
  40bfed:	push   ebx
  40bfee:	arpl   WORD PTR [ebx],di
  40bff0:	iret   
  40bff1:	mov    dl,0x2c
  40bff3:	mov    dh,0x72
  40bff5:	xchg   esi,eax
  40bff6:	inc    eax
  40bff7:	jo     0x40bfa1
  40bff9:	mov    bl,0x98
  40bffb:	push   esp
  40bffc:	sbb    al,0x40
  40bffe:	cld    
  40bfff:	call   0x5557:0x75af1ba9
  40c006:	enter  0x8ed7,0x5c
  40c00a:	aaa    
  40c00b:	fs sti 
  40c00d:	les    eax,FWORD PTR [ebx]
  40c00f:	xchg   ebx,eax
  40c010:	data16 (bad) 
  40c012:	jp     0x40c014
  40c014:	adc    ecx,edx
  40c016:	push   cs
  40c017:	mov    eax,0x9f8f80d5
  40c01c:	je     0x40c024
  40c01e:	mov    ebp,0xcf27d94c
  40c023:	lds    ebx,FWORD PTR [ecx-0x206472c7]
  40c029:	in     eax,0x2a
  40c02b:	cmp    edi,DWORD PTR [edi-0x50cdf1b0]
  40c031:	sar    DWORD PTR [esi-0x74],0xb0
  40c035:	sub    eax,0x70083e17
  40c03a:	xchg   DWORD PTR [ebx+ebx*2],ebp
  40c03d:	mov    cl,0xbf
  40c03f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c040:	popa   
  40c041:	and    ch,BYTE PTR [esi+edx*8-0x6]
  40c045:	inc    edx
  40c046:	mov    ebp,0x61514f9f
  40c04b:	and    bh,bh
  40c04d:	retf   0x1e02
  40c050:	std    
  40c051:	mov    edx,0x74de57ed
  40c056:	push   edi
  40c057:	mov    gs,WORD PTR [ebx]
  40c059:	xlat   BYTE PTR ds:[ebx]
  40c05a:	dec    eax
  40c05b:	ins    BYTE PTR es:[edi],dx
  40c05c:	aad    0xd4
  40c05e:	and    al,0x8
  40c060:	gs sahf 
  40c062:	inc    eax
  40c063:	loope  0x40c0d4
  40c065:	push   eax
  40c066:	jg     0x40c071
  40c068:	stc    
  40c069:	push   eax
  40c06a:	sub    eax,DWORD PTR [ecx+eax*4+0x28]
  40c06e:	nop
  40c06f:	or     al,0x9
  40c071:	or     edx,0xffffffeb
  40c074:	push   di
  40c076:	adc    DWORD PTR [eax+0x70dcb669],0x6f
  40c07d:	test   al,0xd1
  40c07f:	test   ebx,edi
  40c081:	xchg   esp,eax
  40c082:	ret    
  40c083:	xchg   ecx,eax
  40c084:	ins    BYTE PTR es:[edi],dx
  40c085:	je     0x40c02d
  40c087:	pop    es
  40c088:	(bad)  
  40c089:	pop    esi
  40c08a:	add    al,0x9f
  40c08c:	cmp    BYTE PTR [ebx+0x2e2dde2b],dl
  40c092:	pushf  
  40c093:	dec    esi
  40c094:	loope  0x40c04d
  40c096:	and    DWORD PTR [edi],ebx
  40c098:	mov    edi,esi
  40c09a:	ret    
  40c09b:	mov    esp,0xd61bf524
  40c0a0:	jecxz  0x40c027
  40c0a2:	pushf  
  40c0a3:	mov    ah,0x20
  40c0a5:	cmp    al,0x97
  40c0a7:	shl    BYTE PTR [ecx-0x38],1
  40c0aa:	outs   dx,BYTE PTR ds:[esi]
  40c0ab:	xor    al,0xf4
  40c0ad:	aam    0x76
  40c0af:	test   eax,0x5f915dfc
  40c0b4:	mov    ds:0x1de1ed68,eax
  40c0b9:	xchg   ecx,eax
  40c0ba:	sub    DWORD PTR [ebx-0x7d7c3a71],ebx
  40c0c0:	push   esi
  40c0c1:	leave  
  40c0c2:	aam    0xdb
  40c0c4:	into   
  40c0c5:	pop    ecx
  40c0c6:	xchg   edx,eax
  40c0c7:	aam    0xd
  40c0c9:	adc    DWORD PTR [eax],0x9da5c63b
  40c0cf:	mov    ds,WORD PTR [edi]
  40c0d1:	inc    ebp
  40c0d2:	inc    esi
  40c0d3:	xchg   ebp,eax
  40c0d4:	call   0xfde1:0x60e09a68
  40c0db:	addr16 xchg esp,eax
  40c0dd:	lods   al,BYTE PTR cs:[esi]
  40c0df:	lea    edx,[edi-0x5a624429]
  40c0e5:	and    ch,BYTE PTR [edx]
  40c0e7:	fs test eax,0xdcf5c856
  40c0ed:	push   edi
  40c0ee:	inc    edx
  40c0ef:	fs pop es
  40c0f1:	xor    eax,ebp
  40c0f3:	js     0x40c0ff
  40c0f5:	stc    
  40c0f6:	push   ebx
  40c0f7:	test   BYTE PTR [ebx-0x60],dl
  40c0fa:	cmp    BYTE PTR [ecx+0x7537ac17],al
  40c100:	dec    edi
  40c101:	loope  0x40c119
  40c103:	mov    bl,0xbd
  40c105:	push   ecx
  40c106:	ins    BYTE PTR es:[edi],dx
  40c107:	leave  
  40c108:	cmp    BYTE PTR [esi-0x6a293fce],ah
  40c10e:	sbb    bl,bl
  40c110:	cwde   
  40c111:	retf   
  40c112:	xchg   BYTE PTR [eax+0x5eccfe65],bh
  40c118:	sub    BYTE PTR [esi-0x25],bl
  40c11b:	jbe    0x40c12d
  40c11d:	jmp    0xf2c4cbb8
  40c122:	pushf  
  40c123:	pushf  
  40c124:	inc    esp
  40c125:	aaa    
  40c126:	mov    ch,0xb3
  40c128:	mov    ch,ch
  40c12a:	jb     0x40c13d
  40c12c:	icebp  
  40c12d:	add    BYTE PTR [ebp+0x13e8fad0],ah
  40c133:	iret   
  40c134:	pop    ds
  40c135:	addr16 das 
  40c137:	(bad)  
  40c138:	lock fldcw WORD PTR [ebp-0x25]
  40c13c:	cs jmp 0x2dc3:0xbfa1a5e6
  40c144:	xor    eax,edx
  40c146:	test   al,0x10
  40c148:	jns    0x40c14a
  40c14a:	(bad)  
  40c14b:	cli    
  40c14c:	out    0xcd,al
  40c14e:	shr    DWORD PTR [esi],1
  40c150:	dec    edi
  40c151:	jns    0x40c10c
  40c153:	or     cl,bl
  40c155:	shl    DWORD PTR [esi],cl
  40c157:	cwde   
  40c158:	stos   DWORD PTR es:[edi],eax
  40c159:	(bad)
  40c15c:	fstp   DWORD PTR [ecx]
  40c15e:	fadd   DWORD PTR [eax]
  40c160:	xor    eax,0x2cd32284
  40c165:	inc    ecx
  40c166:	fwait
  40c167:	pop    edx
  40c168:	(bad)  
  40c169:	jge    0x40c11c
  40c16b:	repz inc ebp
  40c16d:	mov    ebp,?
  40c16f:	adc    edx,DWORD PTR [edi]
  40c171:	sub    al,BYTE PTR [esi-0x5a]
  40c174:	scas   al,BYTE PTR es:[edi]
  40c175:	pop    esi
  40c176:	and    al,0xcd
  40c178:	std    
  40c179:	and    al,0x9c
  40c17b:	push   ecx
  40c17c:	dec    ebx
  40c17d:	sbb    esi,ecx
  40c17f:	push   ss
  40c180:	and    BYTE PTR [edx-0x19eefa61],0xe2
  40c187:	cmc    
  40c188:	sbb    eax,0x7ddda4cb
  40c18d:	mov    bh,0x26
  40c18f:	add    dh,BYTE PTR [ebp-0x41]
  40c192:	adc    edx,ebx
  40c194:	fdiv   QWORD PTR [edi+esi*8+0x1c]
  40c198:	cmc    
  40c199:	cld    
  40c19a:	data16 sub BYTE PTR ss:[edx+0x3743a84c],dh
  40c1a2:	fs gs jg 0x40c19b
  40c1a6:	repnz lods eax,DWORD PTR ds:[esi]
  40c1a8:	xor    dh,BYTE PTR [ecx]
  40c1aa:	sub    al,0xfa
  40c1ac:	rcl    DWORD PTR [ecx+0x1a3d52b],0x5b
  40c1b3:	inc    esi
  40c1b4:	jns    0x40c1b3
  40c1b6:	push   ds
  40c1b7:	lods   al,BYTE PTR ds:[esi]
  40c1b8:	pop    eax
  40c1b9:	ss pop edi
  40c1bb:	cmp    eax,0xc8e7eaeb
  40c1c0:	out    0x25,al
  40c1c2:	aaa    
  40c1c3:	push   cs
  40c1c4:	daa    
  40c1c5:	int3   
  40c1c6:	imul   ebx,DWORD PTR [esi+0x6b],0xdc7a4450
  40c1cd:	outs   dx,DWORD PTR ds:[esi]
  40c1ce:	je     0x40c1e6
  40c1d0:	data16 neg BYTE PTR [ecx-0x36]
  40c1d4:	mov    al,ds:0x5d6e17c3
  40c1d9:	or     ch,BYTE PTR ss:[ebx]
  40c1dc:	data16 jbe 0x40c213
  40c1df:	cmp    ecx,DWORD PTR [ebp+0x30]
  40c1e2:	mov    ch,0x53
  40c1e4:	jo     0x40c170
  40c1e6:	ror    BYTE PTR [esi+0x5b],cl
  40c1e9:	aam    0x73
  40c1eb:	mov    cl,0xfb
  40c1ed:	xchg   edi,eax
  40c1ee:	cld    
  40c1ef:	adc    ebx,DWORD PTR [ebx-0x6c4128e5]
  40c1f5:	adc    al,0x1b
  40c1f7:	xchg   edi,eax
  40c1f8:	or     BYTE PTR [esi+0x5f],ch
  40c1fb:	shr    DWORD PTR [ecx-0x7f],0xce
  40c1ff:	test   DWORD PTR [ebx+0x30],esi
  40c202:	mov    ecx,0x253b4dea
  40c207:	cmp    al,BYTE PTR [eax]
  40c209:	aaa    
  40c20a:	mov    bh,0x9a
  40c20c:	aaa    
  40c20d:	pop    ebx
  40c20e:	scas   al,BYTE PTR es:[edi]
  40c20f:	fmul   st(5),st
  40c211:	inc    BYTE PTR [ecx-0x1417d976]
  40c217:	je     0x40c22e
  40c219:	(bad)  [ebx-0x78943db4]
  40c21f:	mov    BYTE PTR [ecx+0x73],bh
  40c222:	jo     0x40c295
  40c224:	cli    
  40c225:	adc    DWORD PTR [esi],0xffffffc0
  40c228:	data16 sti 
  40c22a:	icebp  
  40c22b:	enter  0x6169,0xd5
  40c22f:	dec    edi
  40c230:	repz mov ecx,0xd9e7bdb9
  40c236:	push   ebp
  40c237:	adc    DWORD PTR [eax-0x17],0x18
  40c23b:	aaa    
  40c23c:	sti    
  40c23d:	pusha  
  40c23e:	dec    ecx
  40c23f:	push   ebx
  40c240:	call   0x2a680b1c
  40c245:	ss mov ch,0x77
  40c248:	fmul   QWORD PTR [esi]
  40c24a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c24b:	fcomi  st,st(2)
  40c24d:	push   0xb3c43bbd
  40c252:	dec    ebx
  40c253:	loop   0x40c2a6
  40c255:	inc    edi
  40c256:	repz aad 0xc2
  40c259:	sbb    eax,0x5d83fe00
  40c25e:	out    dx,al
  40c25f:	mov    edi,DWORD PTR [ebp+0x62f5ff2a]
  40c265:	nop
  40c266:	(bad)  [esi-0x13]
  40c269:	xor    bh,BYTE PTR [eax-0x6d]
  40c26c:	fs or  eax,0x5b2d6cc3
  40c272:	loope  0x40c2d6
  40c274:	cmp    ch,bl
  40c276:	pop    esp
  40c277:	xor    eax,0xd9c19d5c
  40c27c:	aad    0xd0
  40c27e:	xor    ebp,DWORD PTR [edx-0x35c60452]
  40c284:	ror    bh,0xd4
  40c287:	xchg   esp,eax
  40c288:	adc    al,0x3e
  40c28a:	imul   ebx,DWORD PTR [edx],0x83eebad6
  40c290:	out    0xc5,al
  40c292:	clc    
  40c293:	pop    ebx
  40c294:	aaa    
  40c295:	imul   esp,DWORD PTR [edi],0x2a
  40c298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c299:	cld    
  40c29a:	sub    DWORD PTR [ebx+ebp*2+0x7f],esi
  40c29e:	adc    ebx,esp
  40c2a0:	(bad)  
  40c2a1:	pop    ebx
  40c2a3:	sub    BYTE PTR [ecx+ebx*4+0x44c05f21],al
  40c2aa:	inc    edx
  40c2ab:	sbb    BYTE PTR [edx+0x65],dl
  40c2ae:	cmp    eax,0x51e04452
  40c2b3:	cmp    DWORD PTR [ebp-0x75],edi
  40c2b6:	xor    ch,BYTE PTR [edi+0x17385593]
  40c2bc:	xchg   edi,eax
  40c2bd:	mov    ds:0xbb6ac58e,al
  40c2c2:	ss cld 
  40c2c4:	call   0x849c:0xe9da63ff
  40c2cb:	bt     DWORD PTR [ebx],esi
  40c2ce:	xchg   edx,eax
  40c2cf:	fisubr DWORD PTR ds:0x6f8d6168
  40c2d5:	mov    ebp,0x4b82b28b
  40c2da:	mov    DWORD PTR [ebp+0x56],0xdcf6b3c7
  40c2e1:	sar    DWORD PTR [ebp+0x75],cl
  40c2e4:	bound  edi,QWORD PTR [eax]
  40c2e6:	xlat   BYTE PTR ds:[ebx]
  40c2e7:	(bad)  
  40c2e8:	fisub  DWORD PTR [esi]
  40c2ea:	je     0x40c2ee
  40c2ec:	lahf   
  40c2ed:	popa   
  40c2ee:	jp     0x40c2b3
  40c2f0:	je     0x40c2c8
  40c2f2:	xchg   DWORD PTR ss:0x6c510a4,ebx
  40c2f9:	adc    eax,0xe68d5c23
  40c2fe:	mov    esi,0x4f27936
  40c303:	lahf   
  40c304:	into   
  40c305:	fbld   TBYTE PTR [edi]
  40c307:	or     BYTE PTR [edx],0x8e
  40c30a:	xchg   DWORD PTR [ebx-0x532766c4],ebx
  40c310:	inc    ebp
  40c311:	jnp    0x40c378
  40c313:	and    ebp,0xdbad472b
  40c319:	mov    ch,0xa8
  40c31b:	dec    ebp
  40c31c:	mov    DWORD PTR [ecx],ebp
  40c31e:	mov    al,ds:0x2c8713c7
  40c323:	add    eax,0xfa23bd8d
  40c328:	shl    esp,1
  40c32a:	and    BYTE PTR [ebx],cl
  40c32c:	in     eax,dx
  40c32d:	dec    eax
  40c32e:	je     0x40c353
  40c330:	add    BYTE PTR [esi+0x2cf98fd],ch
  40c336:	push   ss
  40c337:	sbb    edx,DWORD PTR [esi]
  40c339:	addr16 pop edi
  40c33b:	xor    BYTE PTR [edx-0xb],bl
  40c33e:	pop    ebx
  40c33f:	mov    esp,0x6d1abc32
  40c344:	fsubrp st(1),st
  40c346:	cdq    
  40c347:	mov    al,ds:0xf106a37c
  40c34c:	scas   al,BYTE PTR es:[edi]
  40c34d:	mov    esp,0x70a00ccd
  40c352:	cmp    esp,DWORD PTR [edi-0x7ea672d5]
  40c358:	lods   al,BYTE PTR ds:[esi]
  40c359:	mov    eax,ds:0x6f9b38f7
  40c35e:	inc    ecx
  40c35f:	mov    es,WORD PTR [edi+0x30d26507]
  40c365:	push   0xffffffd6
  40c367:	out    0x2,al
  40c369:	hlt    
  40c36a:	test   eax,0x7024fb2f
  40c36f:	jmp    0x4610be1d
  40c374:	sbb    eax,0xad43182e
  40c379:	repz add ecx,DWORD PTR [eax]
  40c37c:	add    DWORD PTR [ecx-0x308c3357],0xb97a5b9d
  40c386:	xchg   esi,eax
  40c387:	int    0x77
  40c389:	cli    
  40c38a:	xor    DWORD PTR [eax-0x3d069a68],ecx
  40c390:	mov    ds:0x1fc2d407,al
  40c395:	in     eax,dx
  40c396:	(bad)  
  40c397:	clc    
  40c398:	cmp    BYTE PTR [esi-0x1cacb344],ch
  40c39e:	cld    
  40c39f:	mov    bl,0xf9
  40c3a1:	cmp    DWORD PTR [ecx],0xec70c909
  40c3a7:	test   DWORD PTR [esi],ecx
  40c3a9:	data16 adc bl,cl
  40c3ac:	xchg   ecx,eax
  40c3ad:	fadd   st(7),st
  40c3af:	pop    ecx
  40c3b0:	or     bh,BYTE PTR [ecx+0x2624deff]
  40c3b6:	pushf  
  40c3b7:	sbb    dh,BYTE PTR [edx-0x179bef2e]
  40c3bd:	jb     0x40c425
  40c3bf:	(bad)  
  40c3c0:	mov    eax,ds:0x10c4e47f
  40c3c5:	(bad)  
  40c3c6:	cmp    BYTE PTR [eax],al
  40c3c8:	ret    
  40c3c9:	inc    esi
  40c3ca:	test   bl,0xae
  40c3cd:	sub    ebx,DWORD PTR [ebx+0x13]
  40c3d0:	std    
  40c3d1:	mov    edx,0x46fc2fd5
  40c3d6:	cmp    ebx,DWORD PTR [esi+0x4]
  40c3d9:	mov    WORD PTR [si-0x2cd3],cs
  40c3de:	(bad)  
  40c3df:	aas    
  40c3e0:	(bad)  
  40c3e1:	and    eax,0x661c2a6d
  40c3e6:	repnz test al,0xc6
  40c3e9:	jno    0x40c3b1
  40c3eb:	jae    0x40c398
  40c3ed:	mov    dh,0x3f
  40c3ef:	mov    ecx,0x534b5a10
  40c3f4:	mov    ch,BYTE PTR [edx]
  40c3f6:	mov    cl,0x8e
  40c3f8:	es mov al,BYTE PTR fs:[ecx-0x24]
  40c3fd:	lods   eax,DWORD PTR ds:[esi]
  40c3fe:	cmp    BYTE PTR [ecx-0x7b],bl
  40c401:	sub    bh,BYTE PTR [ebx]
  40c403:	pop    ebx
  40c404:	dec    esp
  40c405:	shl    edi,1
  40c407:	jne    0x40c3ee
  40c409:	xor    ch,cl
  40c40b:	frstor [ecx-0x26]
  40c40e:	aad    0xa3
  40c410:	jne    0x40c47f
  40c412:	push   es
  40c413:	cmc    
  40c414:	mov    ecx,DWORD PTR [ebp-0x1c7cf42d]
  40c41a:	pop    ebp
  40c41b:	test   al,0xb9
  40c41d:	jmp    0xb151:0x430b751
  40c424:	out    dx,eax
  40c425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c426:	cmp    al,BYTE PTR [edi]
  40c428:	fadd   st,st(2)
  40c42a:	xchg   ebp,eax
  40c42b:	and    BYTE PTR [ecx-0x37],bh
  40c42e:	adc    BYTE PTR ds:0x350a2a30,0x9e
  40c435:	mov    ah,0x3c
  40c437:	mov    al,ds:0xaac4442e
  40c43c:	inc    ebp
  40c43d:	adc    DWORD PTR [ecx+0x9],ebx
  40c440:	adc    cl,BYTE PTR [esi-0x110b23ef]
  40c446:	jmp    0x25ce:0xa3cc45ee
  40c44d:	xor    DWORD PTR [ebx],0xffffffe2
  40c450:	test   BYTE PTR [esi],ah
  40c452:	push   eax
  40c453:	push   esp
  40c454:	add    esi,ecx
  40c456:	dec    esp
  40c457:	jno    0x40c41e
  40c459:	es data16 ds hlt 
  40c45d:	push   ecx
  40c45e:	icebp  
  40c45f:	sub    al,0x42
  40c461:	(bad)  
  40c462:	fld    DWORD PTR [ecx-0x21]
  40c465:	jbe    0x40c4b1
  40c467:	mov    bh,0xaa
  40c469:	pushf  
  40c46a:	cmp    cx,WORD PTR [ebp+ebp*4-0x1b]
  40c46f:	pusha  
  40c470:	cmp    al,0xa7
  40c472:	fwait
  40c473:	addr16 and esi,edi
  40c476:	xor    DWORD PTR [edx+0x2b],ecx
  40c479:	sub    DWORD PTR [edi-0x34bb80f8],0x13a67f3d
  40c483:	mov    ds:0x1c8be04f,al
  40c488:	cld    
  40c489:	int    0xfd
  40c48b:	popf   
  40c48c:	outs   dx,DWORD PTR ds:[esi]
  40c48d:	mov    ds:0x8095df82,al
  40c492:	arpl   WORD PTR [ebp+0x47],dx
  40c495:	and    dh,BYTE PTR [ebp-0x51]
  40c498:	ret    
  40c499:	push   edi
  40c49a:	shl    BYTE PTR [eax+esi*8+0x4f1c65aa],1
  40c4a1:	and    al,cl
  40c4a3:	sbb    cl,BYTE PTR [esi-0x1e]
  40c4a6:	xchg   ebp,eax
  40c4a7:	repnz daa 
  40c4a9:	mov    gs,ebp
  40c4ab:	inc    edi
  40c4ac:	test   BYTE PTR [edi],cl
  40c4ae:	int    0xf
  40c4b0:	(bad)  
  40c4b1:	pop    ebx
  40c4b2:	mov    ds:0x72ddc26a,eax
  40c4b7:	les    eax,FWORD PTR [edi]
  40c4b9:	sbb    al,0xc6
  40c4bb:	push   cs
  40c4bc:	fwait
  40c4bd:	test   DWORD PTR [eax+0x725d2a33],esp
  40c4c3:	fdivr  DWORD PTR [edi+eax*4-0x163ddfc8]
  40c4ca:	sahf   
  40c4cb:	aam    0x4
  40c4cd:	mov    ?,WORD PTR [ebp-0x25aad885]
  40c4d3:	or     DWORD PTR [edx],ebp
  40c4d5:	popa   
  40c4d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4d7:	cmp    bl,BYTE PTR [ecx]
  40c4d9:	sbb    al,0xcf
  40c4db:	jne    0x40c52d
  40c4dd:	mov    edx,0x286a700c
  40c4e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4e3:	mov    esi,0x1792a6af
  40c4e8:	shl    DWORD PTR [eax-0x61371bbd],1
  40c4ee:	mov    esi,DWORD PTR [ebx+0x5e]
  40c4f1:	and    BYTE PTR [edi+edx*1-0x3eeb3afa],bl
  40c4f8:	mov    ch,0xf9
  40c4fa:	aaa    
  40c4fb:	sbb    eax,0x6262a7f3
  40c500:	dec    ecx
  40c501:	das    
  40c502:	adc    al,0xfa
  40c504:	pop    ebx
  40c505:	in     eax,dx
  40c506:	pop    ss
  40c507:	jmp    0x8e80:0x1fdb068f
  40c50e:	fwait
  40c50f:	cmp    eax,0xa7e6253
  40c514:	fwait
  40c515:	cmp    DWORD PTR [ebx+0x37c3e093],esi
  40c51b:	ss ins BYTE PTR es:[edi],dx
  40c51d:	imul   ecx,DWORD PTR [edi+edx*4-0x39052df0],0xffffffa6
  40c525:	jg     0x40c55c
  40c527:	sbb    al,0x76
  40c529:	jno    0x40c4ed
  40c52b:	out    dx,al
  40c52c:	retf   0x8afb
  40c52f:	daa    
  40c530:	lock ja 0x40c4fb
  40c533:	retf   
  40c534:	stos   DWORD PTR es:[edi],eax
  40c535:	std    
  40c536:	stos   DWORD PTR es:[edi],eax
  40c537:	push   0xd8d42b13
  40c53c:	out    0xae,al
  40c53e:	cmp    al,0x10
  40c540:	bound  ebx,QWORD PTR [edi+esi*2+0x59]
  40c544:	cmp    DWORD PTR [edi-0x40],ecx
  40c547:	dec    edx
  40c548:	mov    ah,BYTE PTR [bp+di+0x6]
  40c54c:	in     al,dx
  40c54d:	sbb    esi,esp
  40c54f:	jns    0x40c4f9
  40c551:	adc    BYTE PTR [edi],cl
  40c553:	repz sbb DWORD PTR ds:0x544e6650,0x54f5ee7b
  40c55e:	data16 adc al,0x17
  40c561:	dec    ecx
  40c562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c563:	out    dx,eax
  40c564:	sub    esp,DWORD PTR [edx]
  40c566:	push   es
  40c567:	or     al,0x1
  40c569:	lods   eax,DWORD PTR ds:[esi]
  40c56a:	mov    ds:0x2a34245f,al
  40c56f:	xor    al,0x4e
  40c571:	into   
  40c572:	lock ja 0x40c54d
  40c575:	xor    DWORD PTR [ebp+0x3d],ecx
  40c578:	pop    ebx
  40c579:	leave  
  40c57a:	ret    
  40c57b:	daa    
  40c57c:	imul   edx,DWORD PTR [ebp+0x76538085],0x6cf146aa
  40c586:	mov    al,ds:0x4d0965b0
  40c58b:	cmc    
  40c58c:	xchg   bl,dl
  40c58e:	je     0x40c533
  40c590:	xor    DWORD PTR [esp+eiz*2-0x4d],edx
  40c594:	inc    ecx
  40c595:	inc    ebx
  40c596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c597:	or     DWORD PTR [ebx-0x1f],0xc73cbbd9
  40c59e:	adc    al,0x48
  40c5a0:	scas   al,BYTE PTR es:[edi]
  40c5a1:	mov    BYTE PTR [eax],ah
  40c5a3:	aas    
  40c5a4:	cmp    bl,0xd4
  40c5a7:	pop    ecx
  40c5a8:	dec    ebx
  40c5a9:	adc    ah,BYTE PTR [eax]
  40c5ab:	icebp  
  40c5ac:	leave  
  40c5ad:	fldcw  WORD PTR [esi+0x30]
  40c5b0:	fwait
  40c5b1:	out    dx,al
  40c5b2:	or     ebx,DWORD PTR [ebp+0x2e87031d]
  40c5b8:	add    BYTE PTR [edi],ah
  40c5ba:	pop    ss
  40c5bb:	adc    al,0xf7
  40c5bd:	gs adc al,0x9e
  40c5c0:	jb     0x40c5ad
  40c5c2:	cmp    ecx,eax
  40c5c4:	repz cmp esi,0x9542bda1
  40c5cb:	in     eax,0x1f
  40c5cd:	mov    ebp,0xc94adaed
  40c5d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5d3:	push   ecx
  40c5d4:	lods   eax,DWORD PTR ds:[esi]
  40c5d5:	div    BYTE PTR [ecx]
  40c5d7:	retf   0x43a7
  40c5da:	cmp    dl,BYTE PTR [edx+edx*4]
  40c5dd:	call   FWORD PTR [edi]
  40c5df:	loopne 0x40c62f
  40c5e1:	stc    
  40c5e2:	xor    al,0xc3
  40c5e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5e5:	fs pop ecx
  40c5e7:	push   0x905f7dd4
  40c5ec:	sbb    eax,0xea28d82f
  40c5f1:	mov    ebp,0xfdf8477d
  40c5f6:	sub    ch,BYTE PTR [ebp+0x7b680f1]
  40c5fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5fd:	and    DWORD PTR [edx],eax
  40c5ff:	outs   dx,DWORD PTR ds:[esi]
  40c600:	out    dx,eax
  40c601:	pop    esp
  40c602:	pop    ebp
  40c603:	mov    fs:0xdf968333,al
  40c609:	adc    esp,DWORD PTR [ebx-0x6c]
  40c60c:	pop    ebx
  40c60d:	sub    eax,0x7dd046ef
  40c612:	ficom  DWORD PTR [eax]
  40c614:	add    al,0xd1
  40c616:	mov    cl,BYTE PTR [ebp-0x2a]
  40c619:	ror    BYTE PTR [ecx+0x6e],cl
  40c61c:	or     DWORD PTR [ecx-0x67b1d25d],esp
  40c622:	les    edi,FWORD PTR [ecx+0xa]
  40c625:	jl     0x40c672
  40c627:	clc    
  40c628:	pop    esp
  40c629:	ds xchg bl,bl
  40c62c:	sub    eax,0x11591ddc
  40c631:	pop    esi
  40c632:	sub    al,0x9c
  40c634:	clc    
  40c635:	jnp    0x40c6b5
  40c637:	fsub   st,st(7)
  40c639:	ss push 0x187d2f6
  40c63f:	fldpi  
  40c641:	add    bh,0x2e
  40c644:	xchg   ebx,eax
  40c645:	jns    0x40c6a4
  40c647:	sahf   
  40c648:	in     al,0x5
  40c64a:	enter  0x696,0x3d
  40c64e:	adc    DWORD PTR [eax+0x4b],ebp
  40c651:	lods   al,BYTE PTR ds:[esi]
  40c652:	jmp    0xb77f45b3
  40c657:	clc    
  40c658:	pop    es
  40c659:	xchg   edx,eax
  40c65a:	pop    ecx
  40c65b:	into   
  40c65c:	rol    ecx,0xb4
  40c65f:	outs   dx,DWORD PTR ds:[esi]
  40c660:	or     edx,edx
  40c662:	mov    edi,0xced90ba
  40c667:	jl     0x40c6c2
  40c669:	push   ss
  40c66a:	mov    eax,0x230e6549
  40c66f:	stos   BYTE PTR es:[edi],al
  40c670:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c671:	mov    ah,0xb0
  40c673:	xor    al,BYTE PTR [ecx+0x6e]
  40c676:	sbb    bh,dl
  40c678:	mov    DWORD PTR [ebp+0x5c],esi
  40c67b:	adc    cl,0x4a
  40c67e:	pushf  
  40c67f:	loop   0x40c6d2
  40c681:	sub    ch,BYTE PTR [ecx-0x2b]
  40c684:	icebp  
  40c685:	xchg   ebx,eax
  40c686:	or     cl,BYTE PTR [edi-0x58]
  40c689:	and    edx,eax
  40c68b:	xor    cl,BYTE PTR [edi+edx*8+0x6b]
  40c68f:	or     BYTE PTR [esi+0x3c],ah
  40c692:	mov    bh,BYTE PTR [edi+eiz*1+0x16]
  40c696:	sbb    BYTE PTR [esi],dl
  40c698:	outs   dx,BYTE PTR ds:[esi]
  40c699:	mov    eax,ds:0x989b0155
  40c69e:	mov    WORD PTR [edi-0x47],fs
  40c6a1:	or     al,0x53
  40c6a3:	cmp    ecx,edi
  40c6a5:	pop    ebx
  40c6a6:	add    al,0x6d
  40c6a8:	inc    ebp
  40c6a9:	lea    eax,ds:0x23cc301c
  40c6af:	xchg   edx,esi
  40c6b1:	std    
  40c6b2:	pop    ebx
  40c6b3:	xchg   ebx,eax
  40c6b4:	popa   
  40c6b5:	cmp    bl,BYTE PTR [esi-0x39]
  40c6b8:	stos   BYTE PTR es:[edi],al
  40c6b9:	mov    cl,0xdf
  40c6bb:	sti    
  40c6bc:	jo     0x40c6db
  40c6be:	jle    0x40c673
  40c6c0:	inc    edi
  40c6c1:	xchg   ecx,eax
  40c6c2:	adc    BYTE PTR [edx-0x7f395d0c],ch
  40c6c8:	push   ss
  40c6c9:	or     eax,0x7e629710
  40c6ce:	mov    edi,0xa6b10c3a
  40c6d3:	lods   eax,DWORD PTR ds:[esi]
  40c6d4:	jmp    0x6cb3:0xfe278bc0
  40c6db:	out    0xbc,al
  40c6dd:	daa    
  40c6de:	add    DWORD PTR [ebx],esp
  40c6e0:	sub    DWORD PTR cs:[edi],edi
  40c6e3:	cs mov cl,0x9c
  40c6e6:	jle    0x40c6a6
  40c6e8:	aaa    
  40c6e9:	shr    bl,1
  40c6eb:	cmp    al,0xd2
  40c6ed:	or     esi,DWORD PTR [eax+0x5281a402]
  40c6f3:	cmp    DWORD PTR [eax+0x40],ebp
  40c6f6:	mov    BYTE PTR [esi-0x69cb788],al
  40c6fc:	jg     0x40c761
  40c6fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c701:	xor    eax,0x88ec1d9
  40c706:	outs   dx,DWORD PTR ds:[esi]
  40c707:	ds dec edi
  40c709:	in     al,0xb9
  40c70b:	jg     0x40c777
  40c70d:	mov    eax,0x99a50d2c
  40c712:	shl    ah,0x4a
  40c715:	pop    edx
  40c716:	leave  
  40c717:	add    al,ah
  40c719:	fild   WORD PTR [eax-0x6]
  40c71c:	cdq    
  40c71d:	inc    ebx
  40c71e:	fwait
  40c71f:	push   esi
  40c720:	aad    0x5a
  40c722:	xchg   BYTE PTR [ecx],dl
  40c724:	push   es
  40c725:	xchg   ecx,eax
  40c726:	addr16 lock cmp eax,0x3e3b707f
  40c72d:	inc    eax
  40c72e:	push   ebx
  40c72f:	int    0x64
  40c731:	xlat   BYTE PTR ds:[ebx]
  40c732:	es cmc 
  40c734:	stos   BYTE PTR es:[edi],al
  40c735:	or     al,0xdc
  40c737:	shr    eax,0xb1
  40c73a:	inc    eax
  40c73b:	pop    esi
  40c73c:	out    0x66,eax
  40c73e:	dec    ecx
  40c73f:	xchg   esi,eax
  40c740:	imul   ebp,DWORD PTR [ebp-0x59],0xb7bccace
  40c747:	xor    ecx,DWORD PTR [edx]
  40c749:	mov    al,0x76
  40c74b:	das    
  40c74c:	mov    ds:0x16dd5c68,eax
  40c751:	outs   dx,DWORD PTR ds:[esi]
  40c752:	push   0x7e
  40c754:	loopne 0x40c6fe
  40c756:	mov    dl,ch
  40c758:	push   0x9a68e21
  40c75d:	push   edi
  40c75e:	(bad)  
  40c760:	and    ebp,esp
  40c762:	retf   0xcfc8
  40c765:	ja     0x40c715
  40c767:	addr16 cmp ch,cl
  40c76a:	xlat   BYTE PTR ds:[ebx]
  40c76b:	inc    edx
  40c76c:	loop   0x40c75f
  40c76e:	or     DWORD PTR [ecx],ecx
  40c770:	icebp  
  40c771:	icebp  
  40c772:	cmp    esp,0xf0f1e9f9
  40c778:	inc    ebp
  40c779:	sbb    eax,0xc93c1802
  40c77e:	push   ss
  40c77f:	cmp    edi,DWORD PTR [eax+eiz*8-0x6ad63cd1]
  40c786:	loopne 0x40c73f
  40c788:	or     al,0xeb
  40c78a:	lds    ebx,FWORD PTR ds:0xa42c9884
  40c790:	neg    DWORD PTR [ebp-0x21581e5d]
  40c796:	cmp    eax,0x8587bbf3
  40c79b:	es hlt 
  40c79d:	pop    ebp
  40c79e:	mov    WORD PTR [esi],es
  40c7a0:	pushf  
  40c7a1:	lock pop ebp
  40c7a3:	(bad)  
  40c7a4:	fdiv   QWORD PTR [ebx+edi*2+0x235632bb]
  40c7ab:	lods   eax,DWORD PTR ds:[esi]
  40c7ac:	and    al,0x23
  40c7ae:	dec    ebx
  40c7af:	jecxz  0x40c76e
  40c7b1:	sti    
  40c7b2:	jbe    0x40c831
  40c7b4:	ror    BYTE PTR [ebp+0x5c],1
  40c7b7:	pop    ebx
  40c7b8:	mov    ch,0x5c
  40c7ba:	fistp  DWORD PTR [eax-0x2a0d40f5]
  40c7c0:	or     al,0x9e
  40c7c2:	fidiv  WORD PTR [edi+0x4dd744b7]
  40c7c8:	xchg   ebx,eax
  40c7c9:	push   ecx
  40c7ca:	cmc    
  40c7cb:	clc    
  40c7cc:	and    al,0x55
  40c7ce:	loopne 0x40c7dd
  40c7d0:	scas   al,BYTE PTR es:[edi]
  40c7d1:	stos   BYTE PTR es:[edi],al
  40c7d2:	pushf  
  40c7d3:	mov    cs,WORD PTR [esi-0x2ace322d]
  40c7d9:	mov    ds:0x1f63c895,al
  40c7de:	ret    0x422a
  40c7e1:	retf   0x5a99
  40c7e4:	outs   dx,BYTE PTR ds:[esi]
  40c7e5:	ins    BYTE PTR es:[edi],dx
  40c7e6:	scas   eax,DWORD PTR es:[edi]
  40c7e7:	pop    ss
  40c7e8:	or     edx,DWORD PTR ds:0x3ed732db
  40c7ee:	mov    al,0xd
  40c7f0:	dec    eax
  40c7f1:	ss ret 
  40c7f3:	cmp    dl,ch
  40c7f5:	ds pop es
  40c7f7:	les    ebp,FWORD PTR [esi+edi*4-0x36af7d37]
  40c7fe:	mov    ebx,0x49631d55
  40c803:	pusha  
  40c804:	mov    al,0x88
  40c806:	adc    edx,DWORD PTR [ecx]
  40c808:	xor    DWORD PTR ds:0x2fc61611,0x71a34704
  40c812:	retf   0x5182
  40c815:	rol    BYTE PTR [ebp+0x6ce1dea6],1
  40c81b:	fidiv  DWORD PTR [eax+0x1e]
  40c81e:	call   0x535d7d26
  40c823:	popa   
  40c824:	test   al,0xaa
  40c826:	es clc 
  40c828:	(bad)  
  40c829:	into   
  40c82a:	push   0x54
  40c82c:	ins    DWORD PTR es:[edi],dx
  40c82d:	(bad)  
  40c82f:	je     0x40c7e7
  40c831:	xchg   ecx,eax
  40c832:	xor    BYTE PTR [eax],dl
  40c834:	xor    al,0xba
  40c836:	dec    ebx
  40c837:	cwde   
  40c838:	(bad)  
  40c839:	jmp    0xbc9:0x12ce6145
  40c840:	cdq    
  40c841:	idiv   BYTE PTR [ebx]
  40c843:	sbb    ebp,edi
  40c845:	jno    0x40c829
  40c847:	add    BYTE PTR [ecx-0x5626dfa6],dl
  40c84d:	ss fcmovnb st,st(4)
  40c850:	fld    DWORD PTR [ebp+edx*2+0x779c9a5b]
  40c857:	jmp    0x40c847
  40c859:	pop    edi
  40c85a:	es sti 
  40c85c:	imul   ebx,DWORD PTR [esi],0x458a3dca
  40c862:	shl    BYTE PTR [eax],0xf5
  40c865:	mov    ds:0xeddaa6a2,al
  40c86a:	clc    
  40c86b:	or     BYTE PTR [ebx+0x5e733c32],0x65
  40c872:	outs   dx,DWORD PTR ds:[esi]
  40c873:	mov    cl,0xab
  40c875:	add    al,0x7
  40c877:	jecxz  0x40c85f
  40c879:	loopne 0x40c805
  40c87b:	repnz fist WORD PTR [ebp+0x773823bd]
  40c882:	ja     0x40c856
  40c884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c885:	por    mm0,mm3
  40c888:	dec    edi
  40c889:	mov    ch,0xf6
  40c88b:	jnp    0x40c853
  40c88d:	mov    ah,0xa4
  40c88f:	mov    ebp,0x4b0d792d
  40c894:	pop    edx
  40c895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c896:	neg    edx
  40c898:	fs ja  0x40c825
  40c89b:	das    
  40c89c:	js     0x40c894
  40c89e:	cmp    al,0x95
  40c8a0:	dec    ebx
  40c8a1:	popa   
  40c8a2:	or     BYTE PTR [edi],0x6b
  40c8a5:	ret    0x4282
  40c8a8:	aad    0xa2
  40c8aa:	cmp    al,0xaa
  40c8ac:	int    0x86
  40c8ae:	outs   dx,BYTE PTR ds:[esi]
  40c8af:	fdivr  DWORD PTR [ebx+esi*2]
  40c8b2:	fild   WORD PTR [eax-0x14]
  40c8b5:	cmp    al,0x5c
  40c8b7:	in     al,0x70
  40c8b9:	mov    edi,0x5b35674b
  40c8be:	sbb    cl,BYTE PTR [edx+ebx*4-0x5c]
  40c8c2:	and    eax,0x4caaca14
  40c8c7:	push   esi
  40c8c8:	mov    ah,0x85
  40c8ca:	(bad)  [ebp-0x2]
  40c8cd:	adc    DWORD PTR [edx+0x40923149],ebx
  40c8d3:	dec    esi
  40c8d4:	push   0xa
  40c8d6:	out    0xfc,al
  40c8d8:	jns    0x40c954
  40c8da:	in     eax,dx
  40c8db:	cmp    edx,DWORD PTR [ebp-0x53]
  40c8de:	lock retf 0x343b
  40c8e2:	mov    ecx,DWORD PTR [edx-0x7173ef48]
  40c8e8:	adc    BYTE PTR [ebx+0x10],bl
  40c8eb:	repz or al,0x49
  40c8ee:	jae    0x40c877
  40c8f0:	aad    0x48
  40c8f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8f3:	out    0x6a,al
  40c8f5:	xchg   esp,eax
  40c8f6:	fnsave [edi-0xdce72b2]
  40c8fc:	hlt    
  40c8fd:	push   eax
  40c8fe:	add    BYTE PTR [ebp+0x6d],al
  40c901:	mov    eax,0x7d5a80d7
  40c906:	out    0x53,al
  40c908:	fcmovnbe st,st(4)
  40c90a:	aad    0x10
  40c90c:	sub    ebx,edx
  40c90e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c90f:	sub    al,0x84
  40c911:	rcr    ebp,cl
  40c913:	sbb    DWORD PTR [esi+ecx*2+0x1c],esi
  40c917:	fdiv   st(5),st
  40c919:	pop    edi
  40c91a:	int3   
  40c91b:	scas   al,BYTE PTR es:[edi]
  40c91c:	jecxz  0x40c938
  40c91e:	outs   dx,BYTE PTR ds:[esi]
  40c91f:	or     esp,DWORD PTR [ebx-0x38]
  40c922:	not    esp
  40c924:	lds    ebp,FWORD PTR [edx-0x7a]
  40c927:	dec    ebp
  40c928:	ins    DWORD PTR es:[edi],dx
  40c929:	push   ebx
  40c92a:	push   ebp
  40c92b:	mov    ?,WORD PTR [edi-0x49]
  40c92e:	cld    
  40c92f:	xor    eax,0x399ba0aa
  40c934:	sahf   
  40c935:	pop    esp
  40c936:	fld    TBYTE PTR [edi+0x9d552eb]
  40c93c:	jmp    0x40c944
  40c93e:	sbb    BYTE PTR [eax],dh
  40c940:	sub    eax,0x80bb4127
  40c945:	retf   
  40c946:	test   al,0xe1
  40c948:	fwait
  40c949:	and    eax,0x6dda9196
  40c94e:	mov    cl,0xc5
  40c950:	enter  0xe0ee,0x75
  40c954:	mov    eax,ds:0x8eb43f9a
  40c959:	fst    st(5)
  40c95b:	cmp    al,0x68
  40c95d:	int    0x46
  40c95f:	add    DWORD PTR [ebx],edx
  40c961:	and    bl,BYTE PTR [ecx]
  40c963:	push   edx
  40c964:	mov    esp,0x9a473826
  40c969:	push   edi
  40c96a:	pop    ecx
  40c96b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c96c:	int3   
  40c96d:	test   al,0x39
  40c96f:	xor    al,0x24
  40c971:	mov    ss,WORD PTR ds:0x5ffdbf9b
  40c977:	fisubr WORD PTR [eax]
  40c979:	push   es
  40c97a:	cmp    ebp,DWORD PTR [esi]
  40c97c:	pushf  
  40c97d:	es mov ah,0xe0
  40c980:	loopne 0x40c967
  40c982:	mov    ebx,0x4bd222eb
  40c987:	stos   BYTE PTR es:[edi],al
  40c988:	(bad)  
  40c989:	mov    edi,0xba52f465
  40c98e:	shr    DWORD PTR ds:0xc6a72762,cl
  40c994:	mov    ?,WORD PTR [edi-0x1ebe457b]
  40c99a:	shl    BYTE PTR [eax-0x6d2ac350],0x91
  40c9a1:	mov    ebx,0x43e469ba
  40c9a6:	jmp    0xef183a2b
  40c9ab:	push   esp
  40c9ac:	jae    0x40c9e8
  40c9ae:	sub    eax,0xef259bf5
  40c9b3:	int    0x80
  40c9b5:	pop    eax
  40c9b6:	test   eax,0xa4ed5814
  40c9bb:	and    DWORD PTR [eax+0x5790daee],edx
  40c9c1:	push   ds
  40c9c2:	fdiv   DWORD PTR [ebp+0x7694823f]
  40c9c8:	mov    bh,0xd6
  40c9ca:	jae    0x40ca27
  40c9cc:	xchg   esp,eax
  40c9cd:	mov    dh,0xb
  40c9cf:	(bad)  
  40c9d0:	fdivr  DWORD PTR [esi+0x67a82f9f]
  40c9d6:	mov    esi,0xb2838dec
  40c9db:	or     edi,DWORD PTR [ecx+0x52031139]
  40c9e1:	mov    BYTE PTR [eax+0x32],ch
  40c9e4:	js     0x40ca1b
  40c9e6:	pop    ebp
  40c9e7:	into   
  40c9e8:	jbe    0x40ca50
  40c9ea:	inc    esp
  40c9eb:	adc    DWORD PTR [ebx+eiz*8-0x1444d4da],0xffffffe2
  40c9f3:	add    DWORD PTR [esi-0x3056321d],ecx
  40c9f9:	sbb    eax,0x5a728d9e
  40c9fe:	jne    0x40ca2a
  40ca00:	popa   
  40ca01:	das    
  40ca02:	jmp    0x40c9bb
  40ca04:	xchg   ebx,eax
  40ca05:	(bad)  
  40ca08:	popf   
  40ca09:	pop    edx
  40ca0a:	(bad)  [eax]
  40ca0c:	push   ss
  40ca0d:	ss lahf 
  40ca0f:	bnd jmp 0x40ca28
  40ca12:	mov    esi,0x5fa9413b
  40ca17:	push   edi
  40ca18:	sub    eax,0xed1dd1b6
  40ca1d:	fdivr  st,st(5)
  40ca1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca20:	mov    bl,BYTE PTR [edi]
  40ca22:	or     al,BYTE PTR [edi-0x60]
  40ca25:	mov    ecx,0x9090a9ff
  40ca2a:	inc    esi
  40ca2b:	in     eax,0xb4
  40ca2d:	cmp    BYTE PTR [eax+0x5f],ah
  40ca30:	and    ebx,DWORD PTR [edx-0x617be9a3]
  40ca36:	cwde   
  40ca37:	lods   al,BYTE PTR ds:[esi]
  40ca38:	icebp  
  40ca39:	ret    0xf4cc
  40ca3c:	push   esp
  40ca3d:	shr    ecx,1
  40ca3f:	ins    DWORD PTR es:[edi],dx
  40ca40:	jg     0x40ca54
  40ca42:	pop    eax
  40ca43:	ror    DWORD PTR [edi],cl
  40ca45:	out    0xb6,eax
  40ca47:	arpl   WORD PTR [edx],ax
  40ca49:	sbb    BYTE PTR [esi+ebx*2],ch
  40ca4c:	xchg   ebx,eax
  40ca4d:	jns    0x40ca89
  40ca4f:	je     0x40ca4f
  40ca51:	(bad)  
  40ca52:	jno    0x40ca45
  40ca54:	mov    al,0x10
  40ca56:	or     ecx,DWORD PTR [ebx+0x71ea10c7]
  40ca5c:	dec    edi
  40ca5d:	adc    DWORD PTR [ebx],0xfae35da4
  40ca63:	and    eax,0xc3f13153
  40ca68:	mov    bl,cl
  40ca6a:	popf   
  40ca6b:	test   ecx,edx
  40ca6d:	sub    al,0x5f
  40ca6f:	test   BYTE PTR [edi],bh
  40ca71:	xchg   BYTE PTR [edx],cl
  40ca73:	repz xchg ebx,eax
  40ca75:	jmp    0xd620:0xce58f4a9
  40ca7c:	pop    ebx
  40ca7d:	fcomp  DWORD PTR [esi+ebp*1]
  40ca80:	pop    eax
  40ca81:	sbb    eax,0x7c3b4916
  40ca86:	mov    DWORD PTR [edi+0x733d98f2],edi
  40ca8c:	push   eax
  40ca8d:	rcl    DWORD PTR [edi-0x1d],0x95
  40ca91:	(bad)  
  40ca93:	mov    bl,0xe9
  40ca95:	xor    dl,BYTE PTR [esi]
  40ca97:	push   cs
  40ca98:	or     al,0x5e
  40ca9a:	in     al,0xda
  40ca9c:	ret    0x1633
  40ca9f:	jae    0x40caf6
  40caa1:	jmp    0x2e5:0x87dc8188
  40caa8:	dec    esi
  40caa9:	mov    al,ds:0x18a96d03
  40caae:	sub    eax,0xd790c480
  40cab3:	xor    BYTE PTR [edx],0x6
  40cab6:	lahf   
  40cab7:	aam    0xef
  40cab9:	outs   dx,BYTE PTR ds:[esi]
  40caba:	stos   DWORD PTR es:[edi],eax
  40cabb:	ins    DWORD PTR es:[edi],dx
  40cabc:	in     eax,0xe8
  40cabe:	bound  edx,QWORD PTR [edx-0x6e97dc2c]
  40cac4:	inc    esi
  40cac5:	jnp    0x40caa6
  40cac7:	(bad)  
  40cac8:	pop    ecx
  40cac9:	test   eax,0x2539d281
  40cace:	es pop edi
  40cad0:	dec    eax
  40cad1:	mov    eax,DWORD PTR [ebp+0x2a]
  40cad4:	add    al,0x31
  40cad6:	cld    
  40cad7:	aaa    
  40cad8:	ds dec esi
  40cada:	inc    ebp
  40cadb:	lods   al,BYTE PTR ds:[esi]
  40cadc:	jne    0x40cb1a
  40cade:	sbb    eax,0xf7a51569
  40cae3:	or     dl,dh
  40cae5:	sub    BYTE PTR [ecx+ebp*1+0x67313dc0],bh
  40caec:	push   edx
  40caed:	xchg   DWORD PTR [ecx+0x1b],esi
  40caf0:	loopne 0x40cb25
  40caf2:	push   ebp
  40caf3:	adc    al,0x5
  40caf5:	mov    bh,0xa3
  40caf7:	ficom  DWORD PTR [ebx+0x11]
  40cafa:	test   BYTE PTR [ecx],bl
  40cafc:	loopne 0x40cb34
  40cafe:	pop    es
  40caff:	pop    ds
  40cb00:	mov    ah,0x58
  40cb02:	(bad)  
  40cb04:	pop    es
  40cb05:	push   esi
  40cb06:	retf   
  40cb07:	pushf  
  40cb08:	fistp  DWORD PTR [ecx-0x39]
  40cb0b:	push   ds
  40cb0c:	scas   eax,DWORD PTR es:[edi]
  40cb0d:	dec    edx
  40cb0e:	pusha  
  40cb0f:	cdq    
  40cb10:	repnz mov ah,0x7c
  40cb13:	jns    0x40cb72
  40cb15:	adc    al,ch
  40cb17:	cmc    
  40cb18:	pushf  
  40cb19:	mov    ch,0xdb
  40cb1b:	and    al,BYTE PTR [ecx+ebp*1-0x547f2583]
  40cb22:	adc    BYTE PTR [ebx-0x78],0xf3
  40cb26:	and    al,BYTE PTR [edx+edi*2-0xc]
  40cb2a:	stos   DWORD PTR es:[edi],eax
  40cb2b:	add    BYTE PTR [edi+0x662f42cd],bh
  40cb31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb32:	jge    0x40cabc
  40cb34:	push   0xf23793d
  40cb39:	pop    esi
  40cb3a:	stos   BYTE PTR es:[edi],al
  40cb3b:	jle    0x40cb01
  40cb3d:	push   es
  40cb3e:	xchg   bh,bl
  40cb40:	and    esi,DWORD PTR [eax+0x4c]
  40cb43:	pop    ebp
  40cb44:	das    
  40cb45:	shl    BYTE PTR [ebx],cl
  40cb47:	mov    ebp,0x9d47f4aa
  40cb4c:	(bad)  [ecx]
  40cb4e:	jp     0x40cbc7
  40cb50:	xchg   edi,eax
  40cb51:	jl     0x40cb09
  40cb53:	xor    BYTE PTR [edx],ah
  40cb55:	or     al,0x3d
  40cb57:	hlt    
  40cb58:	test   al,0x56
  40cb5a:	sub    BYTE PTR [edi-0x64],bh
  40cb5d:	push   eax
  40cb5e:	paddusb mm2,QWORD PTR [eax-0xe661e2d]
  40cb65:	int3   
  40cb66:	sbb    ah,bh
  40cb68:	mov    bh,BYTE PTR [esi]
  40cb6a:	rol    DWORD PTR [esi+0x55bdce46],1
  40cb70:	lods   al,BYTE PTR ds:[esi]
  40cb71:	rol    BYTE PTR [edi],1
  40cb73:	in     al,dx
  40cb74:	iret   
  40cb75:	sub    dh,BYTE PTR [esi+ecx*2+0x2c6a5709]
  40cb7c:	add    DWORD PTR [esi],ecx
  40cb7e:	aam    0x84
  40cb80:	popa   
  40cb81:	(bad)  
  40cb82:	push   esp
  40cb83:	add    al,0x54
  40cb85:	and    al,0xc6
  40cb87:	sub    al,0x3b
  40cb89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb8a:	dec    ecx
  40cb8b:	aad    0x89
  40cb8d:	out    0x6,eax
  40cb8f:	shl    esp,1
  40cb91:	sbb    esp,0x6997bd51
  40cb97:	call   0x1cb26a81
  40cb9c:	(bad)  
  40cb9e:	inc    ebx
  40cb9f:	leave  
  40cba0:	mov    ebx,DWORD PTR [eax]
  40cba2:	adc    al,0x5a
  40cba4:	mov    ds:0xd53e6e2,al
  40cba9:	push   esi
  40cbaa:	push   edi
  40cbab:	lock sbb al,0xf0
  40cbae:	mov    eax,ds:0x174cddb6
  40cbb3:	pop    esp
  40cbb4:	mov    eax,ds:0xc1db6889
  40cbb9:	repz addr16 xor eax,0x24efdccc
  40cbc0:	ins    DWORD PTR es:[edi],dx
  40cbc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbc2:	and    DWORD PTR [edx],esp
  40cbc4:	sub    al,0x32
  40cbc6:	retf   0x72b3
  40cbc9:	sbb    DWORD PTR [ebx+0x53],esi
  40cbcc:	pop    ss
  40cbcd:	cmp    dl,cl
  40cbcf:	sub    esi,edi
  40cbd1:	xchg   esi,eax
  40cbd2:	sub    DWORD PTR [ebp-0x37],ebp
  40cbd5:	mov    DWORD PTR [ecx-0x30],ebx
  40cbd8:	aas    
  40cbd9:	adc    DWORD PTR [edx+ecx*1],ecx
  40cbdc:	je     0x40cbee
  40cbde:	xchg   edx,eax
  40cbdf:	or     eax,0x45322a9c
  40cbe4:	mov    eax,0x2ec7c045
  40cbe9:	out    0xf3,al
  40cbeb:	adc    DWORD PTR [edx-0x1ba40e3c],ecx
  40cbf1:	mov    al,0xf7
  40cbf3:	test   eax,0x37846ecc
  40cbf8:	xlat   BYTE PTR ds:[ebx]
  40cbf9:	in     al,dx
  40cbfa:	jle    0x40cc55
  40cbfc:	inc    esp
  40cbfd:	test   edi,0xca65c002
  40cc03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc04:	cdq    
  40cc05:	jns    0x40cb8f
  40cc07:	xchg   esi,eax
  40cc08:	repnz pop esi
  40cc0a:	push   edi
  40cc0b:	sti    
  40cc0c:	dec    edx
  40cc0d:	sbb    eax,0x38bd1a72
  40cc12:	xor    ch,ch
  40cc14:	in     eax,dx
  40cc15:	das    
  40cc16:	xchg   ebx,eax
  40cc17:	in     al,dx
  40cc18:	add    eax,0xd725896
  40cc1d:	stos   DWORD PTR es:[edi],eax
  40cc1e:	je     0x40cc60
  40cc20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc21:	and    cl,bl
  40cc23:	mov    bl,0xe4
  40cc25:	sbb    dh,BYTE PTR [esi-0xc]
  40cc28:	in     al,dx
  40cc29:	out    0xd5,eax
  40cc2b:	fild   WORD PTR [ebx-0x5c]
  40cc2e:	jmp    DWORD PTR [esi]
  40cc30:	push   0x44
  40cc32:	sub    al,0xc3
  40cc34:	fdiv   st,st(0)
  40cc36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc37:	fadd   DWORD PTR cs:[eax+0x7a]
  40cc3b:	push   ebx
  40cc3c:	mov    edx,0xc024426a
  40cc41:	leave  
  40cc42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc43:	out    dx,al
  40cc44:	pop    es
  40cc45:	xchg   edx,eax
  40cc46:	cmp    cl,cl
  40cc48:	add    BYTE PTR [esi],bh
  40cc4a:	scas   al,BYTE PTR es:[edi]
  40cc4b:	lahf   
  40cc4c:	mov    dh,0x35
  40cc4e:	(bad)  
  40cc4f:	enter  0xf20d,0xa2
  40cc53:	rcr    DWORD PTR [edi+esi*1],cl
  40cc56:	imul   eax,DWORD PTR [edx-0x2c],0xec91e249
  40cc5d:	xchg   DWORD PTR [ecx-0x7],ecx
  40cc60:	or     eax,0x4188caf3
  40cc65:	and    al,0xd7
  40cc67:	dec    ebp
  40cc68:	mov    ecx,0xf327beb0
  40cc6d:	pushf  
  40cc6e:	cld    
  40cc6f:	or     esi,DWORD PTR [edx]
  40cc71:	jmp    0x6d806d1b
  40cc76:	gs scas al,BYTE PTR es:[edi]
  40cc78:	movzx  edi,WORD PTR [edx+0x7f]
  40cc7c:	imul   edx,DWORD PTR [edx],0xe49798f2
  40cc82:	push   ds
  40cc83:	cmp    dl,0x39
  40cc86:	in     eax,0xe
  40cc88:	cmp    ebp,DWORD PTR [eax+0x50]
  40cc8b:	fsubr  DWORD PTR [ebx]
  40cc8d:	nop
  40cc8e:	xchg   ebx,eax
  40cc8f:	call   0xc375e03e
  40cc94:	inc    edx
  40cc95:	lea    edx,[eax-0x61]
  40cc98:	adc    eax,0xdf8f1c7
  40cc9d:	push   0x6b61f63f
  40cca2:	and    ebp,edi
  40cca4:	push   esi
  40cca5:	xchg   ecx,eax
  40cca6:	add    DWORD PTR [edx+ebp*8+0x63f9070e],ebx
  40ccad:	dec    edx
  40ccae:	rol    BYTE PTR [edx+0x3e],0x28
  40ccb2:	xor    al,0xf2
  40ccb4:	fidivr WORD PTR [esi]
  40ccb6:	out    dx,al
  40ccb7:	arpl   WORD PTR [ecx],dx
  40ccb9:	pop    ebx
  40ccba:	call   0x166330c5
  40ccbf:	mov    esi,0x8aac1946
  40ccc4:	(bad)  
  40ccc5:	xor    BYTE PTR [edi],dh
  40ccc7:	mov    BYTE PTR [esi],dl
  40ccc9:	ficomp DWORD PTR [ebp-0x2406c9bf]
  40cccf:	cld    
  40ccd0:	test   al,0x2e
  40ccd2:	sbb    DWORD PTR [esp+eiz*8+0x22f5997a],esp
  40ccd9:	ja     0x40cd29
  40ccdb:	(bad)  
  40ccdc:	jb     0x40cd1a
  40ccde:	test   al,0x3d
  40cce0:	scas   eax,DWORD PTR es:[edi]
  40cce1:	call   0xcf42:0x9607c46c
  40cce8:	and    BYTE PTR [edx+eiz*4+0x56],al
  40ccec:	enter  0xf31d,0x8
  40ccf0:	or     BYTE PTR [edi-0x1e],cl
  40ccf3:	loop   0x40ccc0
  40ccf5:	movlhps xmm5,xmm6
  40ccf8:	and    al,0x79
  40ccfa:	ret    
  40ccfb:	cmp    al,0xbf
  40ccfd:	ds fsubp st(6),st
  40cd00:	pusha  
  40cd01:	rcr    BYTE PTR [edi+0x59fe02ad],cl
  40cd07:	js     0x40cd20
  40cd09:	pop    ebp
  40cd0a:	retf   
  40cd0b:	in     al,dx
  40cd0c:	pop    eax
  40cd0d:	dec    ecx
  40cd0e:	jl     0x40cd1b
  40cd10:	das    
  40cd11:	arpl   WORD PTR [ebp+0x14e43fb5],cx
  40cd17:	sub    BYTE PTR [edi],dh
  40cd19:	xor    edi,edx
  40cd1b:	pop    edi
  40cd1c:	fnstcw WORD PTR [bx+si+0x15]
  40cd20:	fsub   DWORD PTR [eax-0x3a9d2705]
  40cd26:	or     eax,0x52de2007
  40cd2b:	fs js  0x40cdab
  40cd2e:	imul   ebx,esi,0xbcd77795
  40cd34:	lods   al,BYTE PTR ds:[esi]
  40cd35:	mov    al,0x11
  40cd37:	xchg   ebp,eax
  40cd38:	js     0x40cd02
  40cd3a:	outs   dx,DWORD PTR ds:[esi]
  40cd3b:	mov    esi,0xf9309107
  40cd40:	dec    eax
  40cd41:	push   edi
  40cd42:	mov    edx,0xe853cf26
  40cd47:	into   
  40cd48:	sbb    al,BYTE PTR [edx+0xcb1405b]
  40cd4e:	imul   ebp,ebx,0x9e29ad31
  40cd54:	sub    BYTE PTR [eax],dh
  40cd56:	xchg   esi,eax
  40cd57:	push   ss
  40cd58:	mov    eax,ds:0xdb5e5682
  40cd5d:	or     BYTE PTR [esi],cl
  40cd5f:	jg     0x40cd66
  40cd61:	mov    esp,ebp
  40cd63:	les    ecx,FWORD PTR [esi]
  40cd65:	fs sti 
  40cd67:	adc    DWORD PTR [ecx],0xdae7e415
  40cd6d:	push   ebx
  40cd6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd6f:	cwde   
  40cd70:	push   ebx
  40cd71:	inc    eax
  40cd72:	int    0x7e
  40cd74:	cwde   
  40cd75:	dec    edx
  40cd76:	sub    DWORD PTR [esi-0x2b95e7ee],esp
  40cd7c:	dec    BYTE PTR [ecx-0x1db5ae54]
  40cd82:	loopne 0x40cdbb
  40cd84:	adc    ah,BYTE PTR [edi-0x2023010d]
  40cd8a:	(bad)  
  40cd8b:	mov    eax,0x4da2b21
  40cd90:	aad    0x8d
  40cd92:	bound  ecx,QWORD PTR ds:0x908cb132
  40cd98:	dec    ecx
  40cd99:	xor    dl,ah
  40cd9b:	or     esp,DWORD PTR [edi+0x788b2e54]
  40cda1:	rol    ecx,0xc9
  40cda4:	sti    
  40cda5:	es (bad) 
  40cda7:	aad    0x5c
  40cda9:	stos   BYTE PTR es:[edi],al
  40cdaa:	inc    ebx
  40cdab:	nop
  40cdac:	loop   0x40cdde
  40cdae:	dec    eax
  40cdaf:	add    BYTE PTR [esi+0x6c138a08],0x36
  40cdb6:	(bad)  
  40cdb8:	or     cl,BYTE PTR [eax-0x13cc3dbe]
  40cdbe:	imul   eax,DWORD PTR cs:[ecx+ebx*8],0x29
  40cdc3:	or     DWORD PTR [ecx+0x34cf7b4],esp
  40cdc9:	sub    BYTE PTR [ecx-0xc9dab62],ch
  40cdcf:	push   esi
  40cdd0:	jno    0x40ce14
  40cdd2:	das    
  40cdd3:	(bad)  
  40cdd4:	pop    eax
  40cdd5:	cli    
  40cdd6:	dec    esi
  40cdd7:	xchg   ebp,eax
  40cdd8:	adc    al,0xf9
  40cdda:	test   eax,0xf8e177b9
  40cddf:	mov    eax,0x5752e029
  40cde4:	and    eax,ebp
  40cde6:	sub    al,BYTE PTR [esi+0x2a]
  40cde9:	call   0xb0d14d3a
  40cdee:	mov    eax,0xec197e11
  40cdf3:	aas    
  40cdf4:	sub    dl,dh
  40cdf6:	add    BYTE PTR [ebx],cl
  40cdf8:	mov    ds:0xe3a9132d,al
  40cdfd:	mov    WORD PTR [edi-0x6],ss
  40ce00:	imul   eax,DWORD PTR [edi],0x48
  40ce03:	pop    esp
  40ce04:	adc    eax,0x65d1847b
  40ce09:	stos   BYTE PTR es:[edi],al
  40ce0a:	test   DWORD PTR [ebx],ebx
  40ce0c:	jae    0x40cde3
  40ce0e:	mov    bl,0x2f
  40ce10:	(bad)  
  40ce11:	sbb    al,0xd8
  40ce13:	inc    esp
  40ce14:	push   0xd6772b1b
  40ce19:	dec    edi
  40ce1a:	push   ebp
  40ce1b:	test   al,0xa2
  40ce1d:	arpl   bp,bp
  40ce1f:	adc    al,0xb7
  40ce21:	jmp    0x40ce0a
  40ce23:	cli    
  40ce24:	hlt    
  40ce25:	mov    ebx,DWORD PTR [esi+0x1e89d645]
  40ce2b:	popa   
  40ce2c:	push   edi
  40ce2d:	lds    esi,FWORD PTR ds:0xbc228da3
  40ce33:	dec    eax
  40ce34:	push   ebp
  40ce35:	aad    0xbe
  40ce37:	and    edx,DWORD PTR [ecx-0x47]
  40ce3a:	int    0xe0
  40ce3c:	xor    BYTE PTR [esi+0x7f],ah
  40ce3f:	push   ss
  40ce40:	rcl    bh,cl
  40ce42:	add    eax,0x6118bb6d
  40ce47:	out    0x4,eax
  40ce49:	adc    cl,dh
  40ce4b:	sub    dh,al
  40ce4d:	push   ds
  40ce4e:	aas    
  40ce4f:	mov    ah,0xf0
  40ce51:	jp     0x40cea6
  40ce53:	pop    esi
  40ce54:	mov    al,ds:0xad0819c8
  40ce59:	ds cwde 
  40ce5b:	or     edx,DWORD PTR [ecx]
  40ce5d:	lds    edi,FWORD PTR [edi+0x6c040ef1]
  40ce63:	and    eax,0xe398178b
  40ce68:	inc    edx
  40ce69:	scas   eax,DWORD PTR es:[edi]
  40ce6a:	ja     0x40ced3
  40ce6c:	xchg   al,cl
  40ce6e:	aaa    
  40ce6f:	add    BYTE PTR [edx+0x3c],ah
  40ce72:	add    BYTE PTR [ecx+0x5e],al
  40ce75:	jl     0x40ceb4
  40ce77:	(bad)  
  40ce78:	sub    dl,BYTE PTR [edx+edi*4-0x41fcc498]
  40ce7f:	mov    ecx,0x5fb48205
  40ce84:	pop    ds
  40ce85:	jnp    0x40ce9c
  40ce87:	sub    ebx,DWORD PTR [esi-0xe]
  40ce8a:	adc    esp,ebx
  40ce8c:	arpl   WORD PTR [edx+0x7c148e3d],bp
  40ce92:	xchg   esp,eax
  40ce93:	rcl    DWORD PTR [ebp-0x4c],0x65
  40ce97:	push   edi
  40ce98:	lahf   
  40ce99:	inc    esi
  40ce9a:	xchg   DWORD PTR [esi],edx
  40ce9c:	sbb    DWORD PTR [ebp+edx*4-0x5d3ec339],0x6
  40cea4:	pop    ebx
  40cea5:	sbb    al,0x4f
  40cea7:	pop    eax
  40cea8:	out    0x3f,al
  40ceaa:	mov    BYTE PTR [eax+0x5ce1ca5c],ah
  40ceb0:	lods   al,BYTE PTR ds:[esi]
  40ceb1:	out    0x97,al
  40ceb3:	fs or  ebx,eax
  40ceb6:	shl    BYTE PTR [esi-0x3],0xdf
  40ceba:	pop    es
  40cebb:	xor    bh,al
  40cebd:	jg     0x40ce83
  40cebf:	ret    
  40cec0:	jle    0x40cead
  40cec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cec3:	cdq    
  40cec4:	jl     0x40cefa
  40cec6:	sub    edx,DWORD PTR [edx-0x44]
  40cec9:	cmp    DWORD PTR [ecx],eax
  40cecb:	cmp    al,cl
  40cecd:	mov    ebp,0xd1349a42
  40ced2:	inc    edi
  40ced3:	fild   DWORD PTR [eax]
  40ced5:	jp     0x40cf2e
  40ced7:	and    al,0x5a
  40ced9:	fdivr  st(3),st
  40cedb:	push   eax
  40cedc:	mov    dh,0x5
  40cede:	sbb    DWORD PTR [edi-0x611a879d],0x967a790e
  40cee8:	lahf   
  40cee9:	(bad)  
  40ceea:	push   ds
  40ceeb:	sbb    BYTE PTR [ebp+0x63],ch
  40ceee:	adc    ecx,DWORD PTR [edi+0x42507933]
  40cef4:	adc    edx,DWORD PTR [ecx]
  40cef6:	fild   WORD PTR [edi]
  40cef8:	int    0xbc
  40cefa:	nop
  40cefb:	int    0xc5
  40cefd:	or     al,al
  40ceff:	test   BYTE PTR [esi+0x30c76b7c],ah
  40cf05:	adc    BYTE PTR [ecx+0x59745d5a],dl
  40cf0b:	or     eax,0x3974f2e
  40cf10:	cwde   
  40cf11:	and    ebx,esp
  40cf13:	inc    edi
  40cf14:	neg    bh
  40cf16:	(bad)  
  40cf18:	xchg   cl,cl
  40cf1a:	pop    edi
  40cf1b:	xor    BYTE PTR [eax+0x1b2065c8],bh
  40cf21:	jno    0x40cf8b
  40cf23:	xor    eax,0x5589e7af
  40cf28:	sbb    DWORD PTR [ebp-0x519f0f40],edi
  40cf2e:	test   eax,0xd5439390
  40cf33:	mov    ebp,0x3b7454b0
  40cf38:	adc    DWORD PTR [edi+ebx*1+0x110fa7f2],0xffffffbb
  40cf40:	sub    dl,BYTE PTR ds:[ecx+0x204103e3]
  40cf47:	pop    ecx
  40cf48:	and    eax,0x817d31f2
  40cf4d:	sub    eax,0xe27def91
  40cf52:	sub    edx,DWORD PTR [ebp+0x27]
  40cf55:	sbb    cl,BYTE PTR [eax+0x6553a75a]
  40cf5b:	xchg   BYTE PTR [edx+0x57d25b5b],bl
  40cf61:	add    BYTE PTR [ecx-0x6bef1aa9],ch
  40cf67:	and    eax,0x6c2f2996
  40cf6c:	test   al,0x8b
  40cf6e:	or     dl,0xc5
  40cf71:	push   edx
  40cf72:	dec    ebp
  40cf73:	pop    ebp
  40cf74:	jno    0x40cf85
  40cf76:	and    al,0xff
  40cf78:	ror    BYTE PTR [ecx+eiz*1-0x18],1
  40cf7c:	push   esi
  40cf7d:	mov    ecx,0xdca006f7
  40cf82:	lock mov ebx,0x9d29aa93
  40cf88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf89:	loope  0x40cf2b
  40cf8b:	sbb    ebx,DWORD PTR [ebp+0x31606048]
  40cf91:	mov    eax,ds:0xf99e2a05
  40cf96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf97:	ins    DWORD PTR es:[edi],dx
  40cf98:	aaa    
  40cf99:	jecxz  0x40cfe9
  40cf9b:	stos   BYTE PTR es:[edi],al
  40cf9c:	sbb    edi,edi
  40cf9e:	ds xchg eax,ebx
  40cfa1:	adc    BYTE PTR [esi-0x3f],bl
  40cfa4:	bswap  ecx
  40cfa6:	cmp    cl,BYTE PTR ds:0xbc4b2b9d
  40cfac:	imul   edi,DWORD PTR [edi],0xd8393240
  40cfb2:	or     DWORD PTR [edi+0x50fe420f],ebx
  40cfb8:	sub    al,0x15
  40cfba:	sub    eax,0x4721ad81
  40cfbf:	pusha  
  40cfc0:	dec    eax
  40cfc1:	mov    ebp,0xbbe9f705
  40cfc6:	push   esi
  40cfc7:	add    al,0x9f
  40cfc9:	aas    
  40cfca:	jmp    0x5714:0x7f909dbe
  40cfd1:	addr16 mov ebp,0x389f9d38
  40cfd7:	and    BYTE PTR [esi+0x39ba3409],ch
  40cfdd:	mov    ds:0x1f7924b1,al
  40cfe2:	ret    
  40cfe3:	in     al,dx
  40cfe4:	xchg   DWORD PTR [ebx+0x39ddb6d],esp
  40cfea:	(bad)  
  40cfeb:	push   esi
  40cfec:	add    DWORD PTR [edi+0x27],ebx
  40cfef:	repz (bad) 
  40cff1:	pop    ds
  40cff2:	test   eax,0x1cdcb53a
  40cff7:	or     al,0xc7
  40cff9:	xchg   esi,eax
  40cffa:	push   cs
  40cffb:	aaa    
  40cffc:	ins    BYTE PTR es:[edi],dx
  40cffd:	hlt    
  40cffe:	jnp    0x40d032
  40d000:	xor    DWORD PTR [ebx-0x5263d433],eax
  40d006:	popf   
  40d007:	cwde   
  40d008:	sub    al,0x28
  40d00a:	push   ds
  40d00b:	pop    ecx
  40d00c:	dec    esp
  40d00d:	xchg   esi,eax
  40d00e:	xchg   DWORD PTR [ecx-0x4f5cd21b],edx
  40d014:	pop    ebp
  40d015:	outs   dx,DWORD PTR ds:[esi]
  40d016:	mov    fs,WORD PTR [ecx+0x6b]
  40d019:	jno    0x40d089
  40d01b:	out    dx,al
  40d01c:	xlat   BYTE PTR ds:[ebx]
  40d01d:	cmp    BYTE PTR [eax+0x2a],bh
  40d020:	push   0xb6f8e8c3
  40d025:	mov    ds:0x11b06813,eax
  40d02a:	jnp    0x40d097
  40d02c:	xor    BYTE PTR [edi],0xa4
  40d02f:	sub    eax,0xfffffff7
  40d032:	(bad)  
  40d033:	add    al,0x88
  40d035:	imul   eax,DWORD PTR [eax],0x24
  40d038:	fadd   DWORD PTR [edx]
  40d03a:	jo     0x40d04c
  40d03c:	xchg   ebx,eax
  40d03d:	dec    eax
  40d03e:	jp     0x40cfc1
  40d040:	aad    0x5b
  40d042:	dec    eax
  40d043:	fmul   DWORD PTR [ecx-0x79dce89c]
  40d049:	jecxz  0x40d072
  40d04b:	push   0xffffffde
  40d04d:	push   ecx
  40d04e:	(bad)  
  40d04f:	mov    ds:0xf20b2685,eax
  40d054:	jne    0x4415f6e9
  40d05a:	fld    DWORD PTR [ebx+0x53]
  40d05d:	pop    esp
  40d05e:	out    dx,eax
  40d05f:	cmp    esi,edi
  40d061:	pushf  
  40d062:	xor    ecx,DWORD PTR [ecx+ebp*1+0x1]
  40d066:	(bad)  
  40d067:	stos   BYTE PTR es:[edi],al
  40d068:	jno    0x40d0ab
  40d06a:	mov    dh,0x34
  40d06c:	mov    ebx,0x3283e7ee
  40d071:	sbb    dl,BYTE PTR [edx+0x23fefd86]
  40d077:	(bad)  
  40d078:	test   eax,0xdb9cc047
  40d07d:	cmp    DWORD PTR [ecx+0x2a],eax
  40d080:	outs   dx,BYTE PTR ds:[esi]
  40d081:	adc    eax,0xaa9efcf9
  40d086:	daa    
  40d087:	pop    eax
  40d088:	test   eax,0x351e2e88
  40d08d:	add    edx,edx
  40d08f:	sub    eax,0x7f91e240
  40d094:	int    0xad
  40d096:	push   esi
  40d097:	adc    BYTE PTR [ebx+0x2a],al
  40d09a:	mov    al,ds:0x2be517dd
  40d09f:	or     eax,0x2f0974b8
  40d0a4:	fldcw  WORD PTR [edi-0x1cbab221]
  40d0aa:	call   0x498480e5
  40d0af:	stos   DWORD PTR es:[edi],eax
  40d0b0:	mov    WORD PTR [ecx],es
  40d0b2:	loop   0x40d071
  40d0b4:	imul   edi,DWORD PTR [esi+0x6dd68ad2],0xffffffd8
  40d0bb:	dec    esp
  40d0bc:	xor    al,0x53
  40d0be:	mov    ebx,0x6c98f2d3
  40d0c3:	ss aaa 
  40d0c5:	xor    ecx,DWORD PTR [edi+0x70]
  40d0c8:	dec    edi
  40d0c9:	addr16 call 0x9518b7f1
  40d0cf:	jo     0x40d06c
  40d0d1:	and    eax,0x62c025d2
  40d0d6:	stc    
  40d0d7:	test   eax,0x1995105e
  40d0dc:	sbb    dl,BYTE PTR [esi+edx*2+0x26]
  40d0e0:	call   0x9c9c:0xcef4a801
  40d0e7:	(bad)  
  40d0e8:	lea    ebp,[eax+0xd]
  40d0eb:	inc    ebx
  40d0ec:	adc    edx,0x3dbc478d
  40d0f2:	aad    0x72
  40d0f4:	div    DWORD PTR [ebp+0x486af629]
  40d0fa:	fsubr  QWORD PTR [edx+0x21cb7623]
  40d100:	iret   
  40d101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d102:	pop    ebx
  40d103:	aas    
  40d104:	push   ss
  40d105:	dec    BYTE PTR [eax-0x22da7e14]
  40d10b:	push   ss
  40d10c:	pop    edi
  40d10d:	mul    BYTE PTR [ebx+eax*8]
  40d110:	push   eax
  40d111:	cmp    eax,0x9e195835
  40d116:	push   eax
  40d117:	pop    ds
  40d118:	or     eax,0x5eca5846
  40d11d:	sub    dh,ch
  40d11f:	cs fcom st(0)
  40d122:	dec    esp
  40d123:	cmp    edi,edi
  40d125:	ins    BYTE PTR es:[edi],dx
  40d126:	mov    BYTE PTR [ebx],bh
  40d128:	mov    BYTE PTR [ebx],al
  40d12a:	or     DWORD PTR [eax+0x5d81f913],esp
  40d130:	add    dl,BYTE PTR [edx]
  40d132:	mov    ch,0x97
  40d134:	inc    ecx
  40d135:	out    0x66,eax
  40d137:	popa   
  40d138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d139:	sahf   
  40d13a:	xchg   ebx,eax
  40d13b:	jmp    0xe7184ecf
  40d140:	push   ebp
  40d141:	icebp  
  40d142:	sbb    ebx,DWORD PTR [esi+edi*2]
  40d145:	outs   dx,DWORD PTR ds:[esi]
  40d146:	inc    edi
  40d147:	nop
  40d148:	cmp    esi,DWORD PTR [ebp-0x1c497d29]
  40d14e:	mov    edx,0x80b3635e
  40d153:	mov    ebx,eax
  40d155:	cmp    al,0x18
  40d157:	sbb    eax,0xffffffcc
  40d15a:	xor    bh,BYTE PTR [edx+0x36]
  40d15d:	sbb    al,0x92
  40d15f:	(bad)  
  40d160:	mov    dl,0x20
  40d162:	pop    esi
  40d163:	jg     0x40d1bc
  40d165:	mov    bl,BYTE PTR [edi]
  40d167:	sub    al,0x2d
  40d169:	inc    ebp
  40d16a:	std    
  40d16b:	mov    ds,WORD PTR [edx]
  40d16d:	daa    
  40d16e:	cli    
  40d16f:	scas   al,BYTE PTR es:[edi]
  40d170:	lods   eax,DWORD PTR ds:[esi]
  40d171:	ret    0x27f5
  40d174:	rcr    BYTE PTR [ebp-0x6859915e],1
  40d17a:	fisub  WORD PTR [esi-0x48]
  40d17d:	addr16 (bad) 
  40d17f:	jmp    0x8b694551
  40d184:	cmp    al,0xb
  40d186:	push   0xffffff9e
  40d188:	mov    ss,WORD PTR [edi+0x7b]
  40d18b:	push   0xffffff8a
  40d18d:	xchg   ebx,eax
  40d18e:	push   edi
  40d18f:	push   ebx
  40d190:	or     esi,DWORD PTR [esi+0xf]
  40d193:	pusha  
  40d194:	cmp    ebp,DWORD PTR [ecx+0x165b8f1d]
  40d19a:	ins    BYTE PTR es:[edi],dx
  40d19b:	adc    dh,BYTE PTR [ebp-0x2a]
  40d19e:	xor    cl,bh
  40d1a0:	mov    ds:0xe7f217ce,eax
  40d1a5:	inc    al
  40d1a7:	mov    ah,0xe5
  40d1a9:	inc    esi
  40d1aa:	lods   eax,DWORD PTR ds:[esi]
  40d1ab:	pop    ss
  40d1ac:	imul   ecx,DWORD PTR [eax-0x74869af8],0xbde9cd0f
  40d1b6:	and    eax,0x3dbc7a8
  40d1bb:	mov    al,0x97
  40d1bd:	sub    al,BYTE PTR [esi*4+0x7a61c3aa]
  40d1c4:	scas   al,BYTE PTR es:[edi]
  40d1c5:	jl     0x40d148
  40d1c7:	fwait
  40d1c8:	call   0x61d2:0x5749696d
  40d1cf:	mov    esi,0xf17dab3d
  40d1d4:	xchg   ecx,eax
  40d1d5:	adc    edi,DWORD PTR [ecx-0x3a912fbf]
  40d1db:	sub    BYTE PTR [ecx+0x19],0x53
  40d1df:	lds    edi,FWORD PTR [ebx]
  40d1e1:	push   DWORD PTR [edi+0x747cef5b]
  40d1e7:	ss pop esp
  40d1e9:	es push es
  40d1eb:	mov    dh,0x65
  40d1ed:	jbe    0x40d250
  40d1ef:	add    esi,DWORD PTR [ecx+0x6d]
  40d1f2:	jmp    0x40d213
  40d1f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1f5:	fdivr  QWORD PTR [edi-0x9]
  40d1f8:	mov    bh,0xe4
  40d1fa:	ds pop ebx
  40d1fc:	iret   
  40d1fd:	mov    esp,0xdf022fdd
  40d202:	mov    ch,0x56
  40d204:	gs cdq 
  40d206:	push   cs
  40d207:	(bad)  [ecx]
  40d209:	lods   al,BYTE PTR ds:[esi]
  40d20a:	inc    eax
  40d20b:	jle    0x40d1af
  40d20d:	rcl    cl,1
  40d20f:	cmp    eax,0xcc3e406b
  40d214:	aad    0x66
  40d216:	mov    ecx,0xfb09c15
  40d21b:	inc    esp
  40d21c:	sbb    eax,0x9f2d4eab
  40d221:	xchg   edi,eax
  40d222:	push   ds
  40d223:	xor    ch,ah
  40d225:	cmp    esi,0xfffffff9
  40d228:	sahf   
  40d229:	mov    dl,0x66
  40d22b:	cmp    ch,bh
  40d22d:	loope  0x40d1f0
  40d22f:	dec    ebx
  40d230:	pop    ebp
  40d231:	js     0x40d263
  40d233:	and    DWORD PTR cs:[edi-0x1bc78b54],0xa84dd8fc
  40d23e:	fwait
  40d23f:	add    ah,0x72
  40d242:	add    eax,0x8582860
  40d247:	fs std 
  40d249:	sbb    BYTE PTR [esi],bl
  40d24b:	mov    edx,0x9c775b2d
  40d250:	data16 into 
  40d252:	add    DWORD PTR [ebp+0x6a9055e7],ebp
  40d258:	jno    0x40d209
  40d25a:	fsubr  st,st(5)
  40d25c:	sbb    al,0x33
  40d25e:	xchg   DWORD PTR es:[esi],ecx
  40d261:	fstp   st(2)
  40d263:	cmp    ebx,ebp
  40d265:	nop
  40d266:	lds    eax,FWORD PTR [ecx]
  40d268:	jmp    0xf84e:0x9d83381
  40d26f:	fiadd  DWORD PTR [ecx+0x277c9d4e]
  40d275:	xor    dl,BYTE PTR [edx+0x63]
  40d278:	add    ecx,DWORD PTR [ebp+0x61e8f679]
  40d27e:	lahf   
  40d27f:	and    eax,DWORD PTR [ebp+0xf]
  40d282:	mov    DWORD PTR [eax],ebp
  40d284:	and    cl,dh
  40d286:	(bad)  
  40d287:	test   DWORD PTR [esi-0x34],0x41205b57
  40d28e:	push   edi
  40d28f:	jns    0x40d299
  40d291:	loopne 0x40d231
  40d293:	pcmpgtb mm6,QWORD PTR [eax-0x66df76fa]
  40d29a:	xchg   BYTE PTR [ebx+0x7],ah
  40d29d:	addr16 mov dh,0xef
  40d2a0:	pop    edx
  40d2a1:	aad    0xce
  40d2a3:	adc    eax,esp
  40d2a5:	pop    esp
  40d2a6:	mov    ds:0x1f8ea3f9,eax
  40d2ab:	inc    esi
  40d2ac:	jb     0x40d271
  40d2ae:	mov    bh,0x1f
  40d2b0:	shl    DWORD PTR [esp+edi*8-0x20],cl
  40d2b4:	clc    
  40d2b5:	shl    DWORD PTR [esi],0xdd
  40d2b8:	xchg   edi,eax
  40d2b9:	cmp    eax,0x75639be7
  40d2be:	sub    al,0x1a
  40d2c0:	mov    ebp,0x1d39fee3
  40d2c5:	loope  0x40d2fc
  40d2c7:	js     0x40d2f6
  40d2c9:	out    dx,eax
  40d2ca:	loope  0x40d273
  40d2cc:	xchg   esp,ecx
  40d2ce:	popa   
  40d2cf:	iret   
  40d2d0:	jecxz  0x40d2d6
  40d2d2:	xchg   bl,bl
  40d2d4:	and    eax,0xf50e31dd
  40d2d9:	je     0x40d267
  40d2db:	jo     0x40d2c1
  40d2dd:	rcr    DWORD PTR [ecx-0x51],1
  40d2e0:	ror    DWORD PTR [eax+0x10],cl
  40d2e3:	fisttp QWORD PTR [ebp+0x4b36bc1c]
  40d2e9:	(bad)  
  40d2eb:	lea    edx,[ebp+0x27]
  40d2ee:	call   0xc636:0xf3fb6352
  40d2f5:	jmp    0xc7afd17c
  40d2fa:	scas   al,BYTE PTR es:[edi]
  40d2fb:	push   esp
  40d2fc:	jmp    0x40d35f
  40d2fe:	cmp    eax,0xe938f6d4
  40d303:	cmp    eax,0xcf70fcb4
  40d308:	sub    esp,0x9d034340
  40d30e:	idiv   DWORD PTR [esi+0x16]
  40d311:	adc    al,0xa9
  40d313:	push   edi
  40d314:	mov    ds:0x4b5012,al
  40d319:	loop   0x40d34b
  40d31b:	aas    
  40d31c:	rol    DWORD PTR [ebx],1
  40d31e:	add    eax,0x5dc3e165
  40d323:	adc    eax,DWORD PTR [ebp+0x3fa8b0ee]
  40d329:	call   0x5f4762c0
  40d32e:	and    al,0x84
  40d330:	and    ecx,DWORD PTR fs:[edi]
  40d333:	mov    gs,WORD PTR [ebp+0xa5c60b9]
  40d339:	jbe    0x40d33b
  40d33b:	fsub   DWORD PTR [ebx]
  40d33d:	shl    DWORD PTR [esi-0x2c],1
  40d340:	jne    0x40d2ce
  40d342:	dec    DWORD PTR ds:0xc011652d
  40d348:	inc    esi
  40d349:	out    dx,al
  40d34a:	(bad)  
  40d34b:	fxch   st(2)
  40d34d:	push   cs
  40d34e:	xchg   ebp,eax
  40d34f:	push   edx
  40d350:	and    BYTE PTR [esi-0x17],cl
  40d353:	cmp    DWORD PTR [esp+ebx*2],0xffffffc0
  40d357:	std    
  40d358:	aas    
  40d359:	cmp    DWORD PTR [ecx+0x6e],0x57
  40d35d:	sti    
  40d35e:	xchg   ecx,eax
  40d35f:	jge    0x40d39f
  40d361:	sbb    DWORD PTR ds:0xa14e27bc,edi
  40d367:	pop    ecx
  40d368:	cs ret 0xf77c
  40d36c:	adc    DWORD PTR [ebp-0x22e4da15],0xffffffde
  40d373:	scas   al,BYTE PTR es:[edi]
  40d374:	jns    0x40d322
  40d376:	pop    edx
  40d377:	nop
  40d378:	call   0xf96b17b3
  40d37d:	js     0x40d3c2
  40d37f:	aaa    
  40d380:	daa    
  40d381:	aad    0x39
  40d383:	rol    DWORD PTR [ebx-0x439d8c90],0xb0
  40d38a:	cld    
  40d38b:	mov    cl,0x79
  40d38d:	(bad)  
  40d38e:	fcom   QWORD PTR [eax]
  40d390:	push   esp
  40d391:	and    DWORD PTR [eax+edx*4-0x56c201e4],esp
  40d398:	cwde   
  40d399:	jl     0x40d406
  40d39b:	add    eax,0xfe396dc8
  40d3a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3a1:	push   edi
  40d3a2:	xor    bl,dh
  40d3a4:	mov    ebp,0x705dbf26
  40d3a9:	mov    ecx,0x108cca97
  40d3ae:	loope  0x40d3ab
  40d3b0:	mov    edx,0xb18e355
  40d3b5:	imul   edi,DWORD PTR [edi+eax*1-0x61],0x7767e4fd
  40d3bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3be:	mov    ecx,0x617e849
  40d3c3:	sub    eax,0x2a07baf9
  40d3c8:	cmp    eax,0xcacd1341
  40d3cd:	xor    edi,DWORD PTR [esi-0x38]
  40d3d0:	push   cs
  40d3d1:	mov    ah,0x79
  40d3d3:	in     eax,0x8
  40d3d5:	adc    DWORD PTR [eax+edi*2],edi
  40d3d8:	retf   0x72d6
  40d3db:	adc    bh,BYTE PTR [ecx]
  40d3dd:	jmp    0x44cf8d50
  40d3e2:	test   DWORD PTR [esi-0x1c],eax
  40d3e5:	push   cs
  40d3e6:	xchg   edx,eax
  40d3e7:	retf   0x4a04
  40d3ea:	xchg   BYTE PTR [ecx-0x345621e9],dl
  40d3f0:	test   DWORD PTR [ebx+0x3977228b],0x312a8bf2
  40d3fa:	stos   DWORD PTR es:[edi],eax
  40d3fb:	(bad)  
  40d3fc:	(bad)  
  40d3fd:	cmp    DWORD PTR [edi],edx
  40d3ff:	pop    ds
  40d400:	fsin   
  40d402:	aas    
  40d403:	jl     0x40d3bc
  40d405:	jo     0x40d407
  40d407:	ror    al,0x5b
  40d40a:	ds jmp 0x349b777b
  40d410:	mov    eax,ds:0xc379a6ce
  40d415:	jle    0x40d473
  40d417:	add    ah,BYTE PTR [eax+ebp*2-0x159b5c4d]
  40d41e:	imul   ebx,DWORD PTR ds:0xc711c5e4,0xc2ba94fe
  40d428:	xor    ah,BYTE PTR [eax-0x1b5562ed]
  40d42e:	shl    BYTE PTR [edi+edx*4],1
  40d431:	sub    BYTE PTR [ebx-0x45f9a22c],bh
  40d437:	xchg   BYTE PTR [ebp-0x3d2057a],dl
  40d43d:	cmp    al,0xa5
  40d43f:	mov    BYTE PTR [edx+0x50],al
  40d442:	fsubr  DWORD PTR [eax-0x4d257619]
  40d448:	cmp    edi,ebp
  40d44a:	xchg   ecx,eax
  40d44b:	mov    edx,0x3f8bf95d
  40d450:	lods   eax,DWORD PTR ds:[esi]
  40d451:	or     ah,BYTE PTR [edi+edx*4-0x34]
  40d455:	inc    esi
  40d456:	xchg   DWORD PTR [esi],ecx
  40d458:	dec    ebp
  40d459:	inc    esi
  40d45a:	(bad)  
  40d45b:	xchg   esp,eax
  40d45c:	xchg   esi,eax
  40d45d:	pop    esp
  40d45e:	jae    0x40d4ad
  40d460:	jo     0x40d41f
  40d462:	push   ds
  40d463:	in     al,0xac
  40d465:	dec    esp
  40d466:	rdtsc  
  40d468:	(bad)  [ecx+ecx*8]
  40d46b:	jmp    0x40d410
  40d46d:	imul   eax,DWORD PTR [edx-0x20fb9e2c],0xe1148bc0
  40d477:	pop    ebx
  40d478:	push   es
  40d479:	mov    eax,ds:0xd9f7cc9e
  40d47e:	fcom   st(1)
  40d480:	push   edx
  40d481:	dec    ebp
  40d482:	ins    DWORD PTR es:[edi],dx
  40d483:	jecxz  0x40d4b8
  40d485:	jmp    0x26758d63
  40d48a:	and    eax,0xc1594f35
  40d48f:	xor    esp,eax
  40d491:	scas   al,BYTE PTR es:[edi]
  40d492:	(bad)  
  40d493:	push   eax
  40d494:	in     al,0x36
  40d496:	mov    BYTE PTR [ebx+0x19],al
  40d499:	cmp    dl,BYTE PTR [edi]
  40d49b:	sub    ch,ch
  40d49d:	jmp    0x40d42d
  40d49f:	pop    esi
  40d4a0:	out    0x3d,al
  40d4a2:	pushf  
  40d4a3:	aam    0xe8
  40d4a5:	add    dl,BYTE PTR [ecx+0xf332ed4]
  40d4ab:	out    dx,eax
  40d4ac:	dec    edi
  40d4ad:	and    BYTE PTR [esi+ecx*4],dl
  40d4b0:	dec    edx
  40d4b1:	sub    ebx,DWORD PTR [eax]
  40d4b3:	daa    
  40d4b4:	pop    ebx
  40d4b5:	out    dx,al
  40d4b6:	mov    ebx,0x2495f57f
  40d4bb:	icebp  
  40d4bc:	jp     0x40d524
  40d4be:	dec    ebx
  40d4bf:	lahf   
  40d4c0:	xchg   esi,eax
  40d4c1:	js     0x40d527
  40d4c3:	fisub  WORD PTR [edi]
  40d4c5:	imul   ebx,DWORD PTR [edi+0x2b],0xffffffd1
  40d4c9:	cld    
  40d4ca:	repz int3 
  40d4cc:	ins    DWORD PTR es:[edi],dx
  40d4cd:	aad    0xe0
  40d4cf:	mov    ebx,0xfb86f6a9
  40d4d4:	ja     0x40d510
  40d4d6:	mov    ds,WORD PTR fs:[ebx+0xe]
  40d4da:	dec    ebp
  40d4db:	mov    esi,0x97335734
  40d4e0:	popa   
  40d4e1:	ror    DWORD PTR [eax-0x66fbe92a],0xeb
  40d4e8:	inc    ecx
  40d4e9:	jge    0x40d4b9
  40d4eb:	fcomp  QWORD PTR fs:[ecx+ebp*2+0xd]
  40d4f0:	addr16 test eax,0x2ac873bf
  40d4f6:	mov    esp,DWORD PTR [eax]
  40d4f8:	mov    cl,0x7c
  40d4fa:	out    dx,eax
  40d4fb:	clc    
  40d4fc:	sbb    esi,DWORD PTR [ebp-0x2f]
  40d4ff:	inc    esp
  40d500:	stc    
  40d501:	inc    edx
  40d502:	lea    ebp,[esi-0x2178b74d]
  40d508:	loop   0x40d4b4
  40d50a:	jle    0x40d577
  40d50c:	(bad)  
  40d50d:	pop    esp
  40d50e:	daa    
  40d50f:	jo     0x40d535
  40d511:	xchg   BYTE PTR [edi-0x62],bl
  40d514:	add    BYTE PTR [esi+0x16b2ae92],al
  40d51a:	xchg   ebx,eax
  40d51b:	pop    eax
  40d51c:	or     eax,DWORD PTR [ecx+0x71483529]
  40d522:	cmp    esi,esi
  40d524:	lahf   
  40d525:	adc    al,0x95
  40d527:	aas    
  40d528:	into   
  40d529:	iret   
  40d52a:	rol    DWORD PTR [ebp-0x46531b25],0x9b
  40d531:	cs in  eax,dx
  40d533:	mov    ch,BYTE PTR [ecx+0x35f1304c]
  40d539:	mov    ds:0x17d0f259,eax
  40d53e:	add    eax,0x30bbfa9b
  40d543:	popf   
  40d544:	bound  esi,QWORD PTR [edi-0x36]
  40d547:	and    BYTE PTR [edi],bl
  40d549:	call   0xa58a7713
  40d54e:	push   edx
  40d54f:	pop    ds
  40d550:	loopne 0x40d501
  40d552:	xor    eax,0xeffdfa1a
  40d557:	and    ebp,0x65
  40d55a:	pop    esp
  40d55b:	int3   
  40d55c:	and    edi,DWORD PTR ds:0x6ec86988
  40d562:	sti    
  40d563:	or     dl,dl
  40d565:	or     eax,0xa29f0df9
  40d56a:	outs   dx,BYTE PTR ds:[esi]
  40d56b:	(bad)  
  40d56c:	imul   dl
  40d56e:	test   DWORD PTR [edx+0xf],esp
  40d571:	ins    DWORD PTR es:[edi],dx
  40d572:	xor    bl,BYTE PTR [ebx]
  40d574:	inc    ebp
  40d575:	cli    
  40d576:	jb     0x40d5ca
  40d578:	mov    ecx,0x1c841054
  40d57d:	lock stc 
  40d57f:	into   
  40d580:	hlt    
  40d581:	fld    QWORD PTR [edi]
  40d583:	ja     0x40d5d4
  40d585:	fwait
  40d586:	add    DWORD PTR [ebp-0x58c9b5e6],esi
  40d58c:	add    BYTE PTR [eax-0x21],al
  40d58f:	push   ebx
  40d590:	push   edx
  40d591:	or     ch,BYTE PTR [esp+eax*2-0x164a49c6]
  40d598:	and    ebp,DWORD PTR [esi+0x750e2355]
  40d59e:	shr    DWORD PTR [ecx],cl
  40d5a0:	bound  esp,QWORD PTR [edi-0x12]
  40d5a3:	xor    al,bl
  40d5a5:	iret   
  40d5a6:	xlat   BYTE PTR ds:[ebx]
  40d5a7:	or     ecx,DWORD PTR [esi]
  40d5a9:	push   0x37f12f38
  40d5ae:	sub    eax,DWORD PTR [esi]
  40d5b0:	mov    bh,BYTE PTR [edx+0x66]
  40d5b3:	aas    
  40d5b4:	xor    DWORD PTR [edi],ecx
  40d5b6:	test   al,0xd7
  40d5b8:	add    ecx,DWORD PTR [edi+0x5e]
  40d5bb:	or     BYTE PTR ds:0x21ad8e6f,dl
  40d5c1:	mov    ch,cl
  40d5c3:	daa    
  40d5c4:	out    0x44,al
  40d5c6:	mov    eax,ds:0xbad02a19
  40d5cb:	add    al,0xd1
  40d5cd:	sbb    al,0x2e
  40d5cf:	cmp    ch,BYTE PTR [eax-0x5f599ee]
  40d5d5:	stos   BYTE PTR es:[edi],al
  40d5d6:	jmp    0x40d5af
  40d5d8:	sti    
  40d5d9:	mov    ebp,0x5e218e49
  40d5de:	(bad)  
  40d5df:	arpl   WORD PTR [edi],bx
  40d5e1:	push   ebx
  40d5e2:	ret    
  40d5e3:	xor    esp,DWORD PTR [edi+eiz*8-0x6003e317]
  40d5ea:	or     DWORD PTR [edi],ebx
  40d5ec:	xchg   ebx,eax
  40d5ed:	jp     0x40d650
  40d5ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5f0:	mov    al,0x3f
  40d5f2:	sbb    DWORD PTR [ecx-0x48f93818],edx
  40d5f8:	icebp  
  40d5f9:	and    al,ah
  40d5fb:	and    ecx,DWORD PTR [edi+0x3a97a492]
  40d601:	aas    
  40d602:	adc    eax,0x64c92135
  40d607:	xor    cl,ch
  40d609:	je     0x40d5e2
  40d60b:	mov    edx,0xc768f521
  40d610:	adc    al,0xe0
  40d612:	cli    
  40d613:	shl    BYTE PTR [esi-0x2b3b0247],1
  40d619:	pop    eax
  40d61a:	in     eax,dx
  40d61b:	xchg   ebx,eax
  40d61d:	add    dl,bl
  40d61f:	xchg   DWORD PTR [esi],ecx
  40d621:	pop    ss
  40d622:	int    0xc6
  40d624:	sub    bh,BYTE PTR [esi-0x432011e5]
  40d62a:	pop    edx
  40d62b:	push   ecx
  40d62c:	and    eax,0xee2850
  40d631:	or     ebx,ebx
  40d633:	daa    
  40d634:	int    0x3a
  40d636:	(bad)  [edx+0x9]
  40d639:	mov    ebx,0x3456a39b
  40d63e:	inc    esp
  40d63f:	mov    DWORD PTR [esi],esi
  40d641:	and    edx,ebp
  40d643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d644:	push   edi
  40d645:	dec    ecx
  40d646:	jne    0x40d6a4
  40d648:	test   BYTE PTR [edi-0x45],0xe7
  40d64c:	leave  
  40d64d:	and    BYTE PTR [esi],dl
  40d64f:	xchg   ebp,eax
  40d650:	fidivr DWORD PTR [ecx+0x7e]
  40d653:	jo     0x40d67c
  40d655:	mov    edi,?
  40d657:	and    edx,DWORD PTR [edx+0x6d]
  40d65a:	jp     0x40d675
  40d65c:	leave  
  40d65d:	ror    BYTE PTR [eax-0x67],cl
  40d660:	jl     0x40d6cc
  40d662:	(bad)  
  40d663:	jmp    0x40d6bf
  40d665:	push   es
  40d666:	adc    eax,0x8a0c416a
  40d66b:	xchg   ebx,eax
  40d66c:	xchg   esp,eax
  40d66d:	mov    WORD PTR [eax+ebp*4],?
  40d670:	inc    edx
  40d671:	add    eax,0xda6198f9
  40d676:	in     eax,dx
  40d677:	int    0x2d
  40d679:	and    edx,DWORD PTR [ecx-0x13ea1444]
  40d67f:	mov    ebx,ss
  40d681:	mov    eax,ds:0x1153bd33
  40d686:	push   edi
  40d687:	nop
  40d688:	adc    edx,DWORD PTR [ebp+0x49]
  40d68b:	push   ecx
  40d68c:	cli    
  40d68d:	test   BYTE PTR [ecx+eiz*1],0x24
  40d691:	out    0x55,al
  40d693:	and    ebx,edx
  40d695:	into   
  40d696:	add    eax,0x2ae173c1
  40d69b:	loopne 0x40d69a
  40d69d:	test   BYTE PTR [eax-0x6c],ch
  40d6a0:	lods   al,BYTE PTR ds:[esi]
  40d6a1:	popa   
  40d6a2:	jmp    0x40d6b3
  40d6a4:	cmp    DWORD PTR [ebp+0x5dcf90d9],0xffffffa3
  40d6ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6ac:	lods   eax,DWORD PTR ds:[esi]
  40d6ad:	(bad)  [esi+edi*2+0x4]
  40d6b1:	xchg   ebp,eax
  40d6b2:	jle    0x40d69f
  40d6b4:	fs leave 
  40d6b6:	jmp    0x40d725
  40d6b8:	or     DWORD PTR [ecx+eiz*4],edx
  40d6bb:	out    dx,al
  40d6bc:	or     DWORD PTR [ecx-0x3fa4f79],ebx
  40d6c2:	or     esi,edx
  40d6c4:	stc    
  40d6c5:	icebp  
  40d6c6:	mov    ah,0x47
  40d6c8:	dec    ebp
  40d6c9:	add    edi,DWORD PTR [edx+ebp*8+0x10]
  40d6cd:	into   
  40d6ce:	push   0x3cc8e8e3
  40d6d3:	ds mov edi,0x148347d
  40d6d9:	adc    al,0xbe
  40d6db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6dc:	mov    eax,0x80f25671
  40d6e1:	pop    esi
  40d6e2:	les    esp,FWORD PTR [ecx-0x770a625]
  40d6e8:	(bad)  
  40d6e9:	jb     0x40d732
  40d6eb:	inc    edx
  40d6ec:	xor    al,0xf
  40d6ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6f0:	(bad)  
  40d6f2:	cmc    
  40d6f3:	pushf  
  40d6f4:	push   es
  40d6f5:	in     eax,0x60
  40d6f7:	xchg   esp,eax
  40d6f8:	popa   
  40d6f9:	push   eax
  40d6fa:	jl     0x40d6be
  40d6fc:	in     al,0x68
  40d6fe:	aad    0x1a
  40d700:	ins    DWORD PTR es:[edi],dx
  40d701:	rcl    BYTE PTR [eax],0x7a
  40d704:	bound  edx,QWORD PTR [edi+0x635b267]
  40d70a:	mov    dl,0x58
  40d70c:	mov    ebp,0xe4303a9a
  40d711:	push   0xc336585
  40d716:	retf   
  40d717:	sti    
  40d718:	or     al,bl
  40d71a:	adc    eax,0x1a6941c
  40d71f:	enter  0xa0e5,0x6a
  40d723:	dec    ebx
  40d724:	push   ebp
  40d725:	aad    0xdf
  40d727:	sub    DWORD PTR [ecx+0x16],esi
  40d72a:	dec    edx
  40d72b:	mov    al,0x16
  40d72d:	adc    cl,BYTE PTR [ebx+0x1a943e8a]
  40d733:	xor    eax,0xade4a49e
  40d738:	mov    dl,0x1a
  40d73b:	in     eax,0x52
  40d73d:	jge    0x40d719
  40d73f:	sub    eax,0xdf71baf2
  40d744:	xchg   ecx,eax
  40d745:	and    bh,ch
  40d747:	inc    esi
  40d748:	scas   al,BYTE PTR es:[edi]
  40d749:	or     DWORD PTR [ecx+0x130c4c7c],0x2f33d0b6
  40d753:	xlat   BYTE PTR ds:[ebx]
  40d754:	cli    
  40d755:	and    eax,ebp
  40d757:	rcr    DWORD PTR [ecx-0x3],cl
  40d75a:	inc    edx
  40d75b:	add    eax,0xacdab639
  40d760:	or     al,0x6c
  40d762:	sub    esi,ebx
  40d764:	xor    al,0xcb
  40d766:	dec    ecx
  40d767:	(bad)  
  40d768:	lock je 0x40d77e
  40d76b:	or     esp,edx
  40d76d:	popf   
  40d76e:	jbe    0x40d76b
  40d770:	or     BYTE PTR [edi-0x53],al
  40d773:	dec    ebx
  40d774:	jmp    0x40d73c
  40d776:	ror    DWORD PTR [ebx],cl
  40d778:	sub    BYTE PTR [eax],ah
  40d77a:	(bad)  
  40d77b:	test   al,0x15
  40d77d:	xor    ecx,DWORD PTR [edx-0x2c]
  40d780:	or     al,0x72
  40d782:	xlat   BYTE PTR ds:[ebx]
  40d783:	and    eax,DWORD PTR [ecx-0x3e]
  40d786:	push   ecx
  40d787:	pop    ebp
  40d788:	mov    BYTE PTR [ecx-0x4],dl
  40d78b:	lods   eax,DWORD PTR ds:[esi]
  40d78c:	iret   
  40d78d:	retf   0x26db
  40d790:	popa   
  40d791:	fistp  DWORD PTR [edi+0x465019fc]
  40d797:	popa   
  40d798:	and    al,0x36
  40d79a:	jne    0x40d736
  40d79c:	and    ebp,ecx
  40d79e:	imul   ebp,DWORD PTR [eax+0x4e],0x347fbbe7
  40d7a5:	lds    esp,FWORD PTR [ebx*4+0x79425f46]
  40d7ac:	push   edi
  40d7ad:	jno    0x40d7a5
  40d7af:	mov    ds:0xd341855e,eax
  40d7b4:	mov    ch,bh
  40d7b6:	or     BYTE PTR [edx],bl
  40d7b8:	das    
  40d7b9:	out    dx,al
  40d7ba:	test   DWORD PTR [ebx-0x39],esi
  40d7bd:	jnp    0x40d7b8
  40d7bf:	pop    esp
  40d7c0:	mov    dh,cl
  40d7c2:	test   eax,0xfe016ff8
  40d7c7:	sar    DWORD PTR [edi-0x70ba9b67],1
  40d7cd:	scas   eax,DWORD PTR es:[edi]
  40d7ce:	xchg   edi,eax
  40d7cf:	push   cs
  40d7d0:	mov    WORD PTR [esi],es
  40d7d2:	dec    ebx
  40d7d3:	mov    ebp,0x559e45c8
  40d7d8:	pop    edx
  40d7d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7da:	shr    DWORD PTR [ebp+0x18],cl
  40d7dd:	ret    
  40d7de:	mov    ah,0x6f
  40d7e0:	cmp    ebx,DWORD PTR [ebp+esi*2+0x39e854e3]
  40d7e7:	push   cs
  40d7e8:	pushf  
  40d7e9:	xor    bl,ah
  40d7eb:	aas    
  40d7ec:	dec    ebx
  40d7ed:	cmp    al,0xd2
  40d7ef:	pop    esi
  40d7f0:	data16 lods al,BYTE PTR ds:[esi]
  40d7f2:	push   ebx
  40d7f3:	fs jo  0x40d80f
  40d7f6:	or     BYTE PTR [esi-0x7c22d4cd],0x7f
  40d7fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7fe:	ret    
  40d7ff:	repz fwait
  40d801:	sti    
  40d802:	arpl   WORD PTR [edi-0x7c],si
  40d805:	sti    
  40d806:	call   0x9b67:0x8572ead4
  40d80d:	das    
  40d80e:	push   esi
  40d80f:	faddp  st(0),st
  40d811:	fiadd  DWORD PTR [esi+ebx*4]
  40d814:	es xlat BYTE PTR ds:[ebx]
  40d817:	push   ss
  40d818:	ret    
  40d819:	mov    ds:0x42d42826,eax
  40d81e:	add    al,0xbe
  40d820:	imul   esp,eax,0x84144d31
  40d826:	inc    edx
  40d827:	xchg   edi,eax
  40d828:	cld    
  40d829:	sbb    eax,0x70fa811
  40d82e:	jle    0x40d85b
  40d830:	out    dx,eax
  40d831:	lock dec eax
  40d833:	cld    
  40d834:	sub    BYTE PTR [ecx-0x20],bh
  40d837:	pop    ebp
  40d838:	das    
  40d839:	fisub  WORD PTR [edi+0xa]
  40d83c:	add    cl,cl
  40d83e:	les    esp,FWORD PTR [ecx+0x4faf861b]
  40d844:	aas    
  40d845:	pop    ebp
  40d846:	lahf   
  40d847:	enter  0x41b0,0xf3
  40d84b:	jmp    0xe5ee269c
  40d850:	pop    eax
  40d851:	adc    bh,al
  40d853:	xchg   edx,eax
  40d854:	aad    0x1d
  40d856:	dec    eax
  40d857:	pop    ebp
  40d858:	and    esp,DWORD PTR [eax]
  40d85a:	or     BYTE PTR [esi],bh
  40d85c:	adc    al,0x68
  40d85e:	push   cs
  40d85f:	mov    BYTE PTR [edi-0x271c2204],ah
  40d865:	leave  
  40d866:	inc    esp
  40d867:	imul   ebp,DWORD PTR [edx+esi*8],0x15
  40d86b:	cmp    al,0xdb
  40d86d:	ror    dl,1
  40d86f:	stc    
  40d870:	rol    DWORD PTR [ebx],cl
  40d872:	mov    es,WORD PTR [ecx+0x68]
  40d875:	inc    ecx
  40d876:	sbb    dl,0x37
  40d879:	dec    ebx
  40d87a:	jle    0x40d812
  40d87c:	(bad)  
  40d87d:	jb     0x40d87e
  40d87f:	adc    eax,0xdeac6c1d
  40d885:	cmp    DWORD PTR [ebp-0x28af5e84],esi
  40d88b:	cmp    cl,ah
  40d88d:	gs pop edi
  40d88f:	inc    ecx
  40d890:	sub    eax,0x8c63e0e4
  40d895:	mov    eax,0x529cb74d
  40d89a:	nop
  40d89b:	inc    ebp
  40d89c:	mov    eax,ds:0xd5dc32df
  40d8a1:	cmp    al,0x35
  40d8a3:	cdq    
  40d8a4:	xchg   edx,eax
  40d8a5:	ror    DWORD PTR [edi+0x36],0xfa
  40d8a9:	jle    0x40d850
  40d8ab:	jne    0x40d905
  40d8ad:	shl    DWORD PTR [eax],cl
  40d8af:	into   
  40d8b0:	xor    esp,edx
  40d8b2:	and    dh,dh
  40d8b4:	aam    0x75
  40d8b6:	mov    ah,0x80
  40d8b8:	mov    ds:0xd01d9d6f,eax
  40d8bd:	cmp    edx,DWORD PTR [esi-0x8518489]
  40d8c3:	mov    cl,BYTE PTR [edx]
  40d8c5:	push   ss
  40d8c6:	call   0x9330:0x4ec724a1
  40d8cd:	out    0x68,al
  40d8cf:	sbb    eax,0xdc81b273
  40d8d4:	stc    
  40d8d5:	fld    QWORD PTR [bp+si+0x78]
  40d8d9:	inc    ecx
  40d8da:	rol    BYTE PTR [ebx+eiz*1+0x59],cl
  40d8de:	loope  0x40d8a5
  40d8e0:	xor    ebp,esi
  40d8e2:	mov    bh,0x3e
  40d8e4:	(bad)  
  40d8e5:	mov    bh,0xa6
  40d8e7:	repz sub eax,0xc646aaf9
  40d8ed:	ss pop ds
  40d8ef:	dec    ebp
  40d8f0:	jbe    0x40d90c
  40d8f2:	out    0x2d,eax
  40d8f4:	cmp    edx,esp
  40d8f6:	or     edx,ebp
  40d8f8:	sub    al,0xe2
  40d8fa:	pusha  
  40d8fb:	aam    0xf3
  40d8fd:	idiv   esp
  40d8ff:	lea    esi,[eax-0x37]
  40d902:	jg     0x40d8d0
  40d904:	test   BYTE PTR [esp+eiz*2+0x24],ah
  40d908:	(bad)  [edx]
  40d90a:	ror    DWORD PTR [ebx+0x6fcb0e1f],cl
  40d910:	and    eax,0xee2f0ddd
  40d915:	adc    esp,ebp
  40d917:	nop
  40d918:	adc    eax,0x664a1e1
  40d91d:	xchg   DWORD PTR [ebx-0x6b7b8cfc],eax
  40d923:	test   eax,0xee26592
  40d928:	adc    al,0x1c
  40d92a:	xchg   ebx,eax
  40d92b:	mov    BYTE PTR [eax-0x1b45e7eb],cl
  40d931:	std    
  40d932:	(bad)  
  40d933:	mov    ah,0xec
  40d935:	shl    DWORD PTR [eax+0x53],cl
  40d938:	iret   
  40d939:	xchg   esp,eax
  40d93a:	mov    ah,0x2
  40d93c:	retf   0xb676
  40d93f:	adc    ah,BYTE PTR [edi+edx*1]
  40d942:	mov    ds:0x3b834fb,eax
  40d947:	fcomip st,st(3)
  40d949:	daa    
  40d94a:	inc    al
  40d94c:	inc    ecx
  40d94d:	ds mov ebx,0x64e5d040
  40d953:	and    BYTE PTR [eax-0x63fbc279],0x12
  40d95a:	movq   mm5,QWORD PTR [eax-0x6c]
  40d95e:	mov    ds:0xe6fc8500,eax
  40d963:	rcr    DWORD PTR [ecx],0x54
  40d966:	aad    0x29
  40d968:	push   cs
  40d969:	push   edx
  40d96a:	pop    edi
  40d96b:	stos   BYTE PTR es:[edi],al
  40d96c:	mov    ds:0xce2034ee,al
  40d971:	retf   0x61fe
  40d974:	retf   
  40d975:	mov    esp,0x8ffa8863
  40d97a:	fsub   st(5),st
  40d97c:	jp     0x40d935
  40d97e:	adc    edx,0x51
  40d981:	test   al,0x4d
  40d983:	outs   dx,BYTE PTR ds:[esi]
  40d984:	and    DWORD PTR [ebp*4-0x6a72936d],ecx
  40d98b:	bound  esi,QWORD PTR [ecx]
  40d98d:	mov    edi,0xa368e157
  40d992:	mov    dl,0x7b
  40d994:	(bad)  
  40d995:	not    dl
  40d997:	mov    ebx,0x1de104e8
  40d99c:	xlat   BYTE PTR ds:[ebx]
  40d99d:	xor    dh,bh
  40d99f:	mov    ecx,0xd7c67077
  40d9a4:	sbb    eax,0x776e32cb
  40d9a9:	int3   
  40d9aa:	adc    DWORD PTR [edx+0x59],0x43
  40d9ae:	dec    edx
  40d9af:	(bad)  
  40d9b0:	retf   
  40d9b1:	or     esi,DWORD PTR [edx+0x50b93cc2]
  40d9b7:	arpl   WORD PTR [ecx+ebx*8],bx
  40d9ba:	adc    al,0xfd
  40d9bc:	scas   eax,DWORD PTR es:[edi]
  40d9bd:	rcpps  xmm4,XMMWORD PTR [ebx-0x3b]
  40d9c1:	pop    esp
  40d9c2:	rep stos DWORD PTR es:[edi],eax
  40d9c4:	dec    edx
  40d9c5:	sub    DWORD PTR [esi-0x47cac1e7],ecx
  40d9cb:	and    BYTE PTR [edi+0x341df847],bl
  40d9d1:	repz cli 
  40d9d3:	cwde   
  40d9d4:	mov    dl,0x87
  40d9d6:	jg     0x40d9c8
  40d9d8:	test   BYTE PTR [ecx-0x4f6871fd],al
  40d9de:	push   es
  40d9df:	mov    ds:0xfff5c084,eax
  40d9e4:	cmc    
  40d9e5:	mov    ah,ch
  40d9e7:	inc    ecx
  40d9e8:	xchg   ebx,eax
  40d9e9:	jg     0x40da59
  40d9eb:	fidivr DWORD PTR [esi+0x1e038f20]
  40d9f1:	and    ch,BYTE PTR [edi+0x65ebddab]
  40d9f7:	xlat   BYTE PTR ds:[ebx]
  40d9f8:	dec    esp
  40d9f9:	jno    0x40da2a
  40d9fb:	retf   0xdaeb
  40d9fe:	(bad)  
  40d9ff:	or     al,0x59
  40da01:	mov    BYTE PTR [ebx+0x5a],dh
  40da04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da05:	cmp    al,0xc3
  40da07:	pop    esp
  40da08:	pop    es
  40da09:	pushf  
  40da0a:	les    edi,FWORD PTR [edi-0x20]
  40da0d:	jg     0x40da77
  40da0f:	dec    ebp
  40da10:	jmp    0x74f6:0x483b74d8
  40da17:	sub    al,0xba
  40da19:	jb     0x40da8b
  40da1b:	jnp    0x40da12
  40da1d:	sbb    ecx,DWORD PTR [ecx-0x39]
  40da20:	int3   
  40da21:	mov    eax,ds:0xdd9a04bf
  40da26:	retf   
  40da27:	adc    edx,DWORD PTR [eax+0x421347bc]
  40da2d:	xor    dl,al
  40da2f:	jmp    0x2315:0x25decd82
  40da36:	in     al,dx
  40da37:	xchg   DWORD PTR [edx],eax
  40da39:	xchg   edi,eax
  40da3a:	fs cmp edi,esp
  40da3d:	jg     0x40da8e
  40da3f:	push   0xffffff91
  40da41:	adc    dl,BYTE PTR [esi+0x33260103]
  40da47:	icebp  
  40da48:	mov    cl,0x48
  40da4a:	push   ebp
  40da4b:	cmp    bh,dl
  40da4d:	mov    ds:0xbee2a36b,eax
  40da52:	sbb    eax,0xc2350f48
  40da57:	xchg   edx,eax
  40da58:	ja     0x40da17
  40da5a:	(bad)  
  40da5b:	sar    DWORD PTR [esi-0x50],1
  40da5e:	test   DWORD PTR [edx+0x7c6771d5],eax
  40da64:	jmp    0x40dab2
  40da66:	lds    edx,FWORD PTR [edx]
  40da68:	ins    BYTE PTR es:[edi],dx
  40da69:	inc    edi
  40da6a:	test   DWORD PTR [esi-0x64],esi
  40da6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da6e:	(bad)  
  40da70:	push   0x43
  40da72:	mov    eax,ds:0xcfdf7872
  40da77:	stos   DWORD PTR es:[edi],eax
  40da78:	aas    
  40da79:	dec    ebp
  40da7a:	inc    ebx
  40da7b:	and    DWORD PTR [edx+0x77],0xe70f7171
  40da82:	mov    DWORD PTR [eax-0x34],ebx
  40da85:	dec    edx
  40da86:	(bad)  
  40da89:	dec    DWORD PTR [ecx+0x12]
  40da8c:	or     ch,BYTE PTR [edi-0x2d]
  40da8f:	scas   al,BYTE PTR es:[edi]
  40da90:	daa    
  40da91:	jecxz  0x40da41
  40da93:	shr    DWORD PTR ds:0x3e9d173c,cl
  40da99:	bound  esp,QWORD PTR ds:0xcfebced9
  40da9f:	loope  0x40daf8
  40daa1:	mov    dh,0xe2
  40daa3:	(bad)  
  40daa4:	out    0xa0,al
  40daa6:	pop    ecx
  40daa7:	add    cl,al
  40daa9:	or     ecx,ebx
  40daab:	jecxz  0x40da70
  40daad:	fadd   QWORD PTR [eax]
  40daaf:	cmp    esi,edx
  40dab1:	ss (bad) 
  40dab3:	ss gs dec ecx
  40dab6:	imul   ebx,DWORD PTR [edx+edi*1+0x5a2f7c25],0xc33e5c2a
  40dac1:	xchg   ebp,eax
  40dac2:	dec    esp
  40dac3:	ret    
  40dac4:	das    
  40dac5:	mov    dl,0xbd
  40dac7:	jno    0x40dad5
  40dac9:	into   
  40daca:	iret   
  40dacb:	add    BYTE PTR fs:[edx],0x27
  40dacf:	pushf  
  40dad0:	jl     0x40da6d
  40dad2:	dec    esi
  40dad3:	ja     0x40da80
  40dad5:	stos   DWORD PTR es:[edi],eax
  40dad6:	mov    ch,0x7b
  40dad8:	lods   al,BYTE PTR ds:[esi]
  40dad9:	cmp    bl,BYTE PTR [ecx+0x9a1461a]
  40dadf:	scas   al,BYTE PTR es:[edi]
  40dae0:	pop    esi
  40dae1:	sub    al,0xd4
  40dae3:	mov    bh,0x9d
  40dae5:	fisttp QWORD PTR [esi-0x47]
  40dae8:	ficomp DWORD PTR [ebx+0x36ac4879]
  40daee:	sub    al,0x1d
  40daf0:	mov    ah,0x1f
  40daf2:	rol    BYTE PTR [ebp+edx*4-0x508f6bc],cl
  40daf9:	ror    BYTE PTR [edx+0x16],1
  40dafc:	push   0x2c3c726c
  40db01:	lahf   
  40db02:	stc    
  40db03:	cli    
  40db04:	loopne 0x40db5a
  40db06:	xor    eax,0xd2451a07
  40db0b:	sar    BYTE PTR [edi-0xd027048],0x5f
  40db12:	mov    ah,0x17
  40db14:	cmp    BYTE PTR [edi-0x7b],0x61
  40db18:	out    dx,al
  40db19:	pop    edx
  40db1a:	retf   0x714
  40db1d:	jp     0x40db2b
  40db1f:	sbb    edi,DWORD PTR [edi+0x23]
  40db22:	sbb    BYTE PTR [esi+0x5f],0xe7
  40db26:	iret   
  40db27:	loop   0x40daad
  40db29:	push   ss
  40db2a:	and    al,BYTE PTR [esi+0x3c]
  40db2d:	inc    ebx
  40db2e:	es adc bl,dl
  40db31:	mov    bh,0x7a
  40db33:	ss nop
  40db35:	xchg   esi,eax
  40db36:	popf   
  40db37:	fimul  DWORD PTR [esi+eax*8+0x40]
  40db3b:	retf   0x6324
  40db3e:	lahf   
  40db3f:	fistp  DWORD PTR [ebx-0x461acd61]
  40db45:	xor    BYTE PTR [esi-0x16efc55],bl
  40db4b:	test   al,0xc9
  40db4d:	or     ch,dh
  40db4f:	jnp    0x40db7f
  40db51:	push   es
  40db52:	fmul   QWORD PTR [edi]
  40db54:	mov    al,ds:0x1ff3ec14
  40db59:	sbb    cl,ch
  40db5b:	sbb    DWORD PTR [esp+ebx*4+0x1],esp
  40db5f:	dec    edx
  40db60:	jnp    0x40dbb0
  40db62:	aaa    
  40db63:	je     0x40db89
  40db65:	pushf  
  40db66:	xor    ah,dh
  40db68:	mov    dl,0xdb
  40db6a:	or     DWORD PTR [edx-0x44],ebp
  40db6d:	adc    al,al
  40db6f:	sub    DWORD PTR [ebx-0xc],ebx
  40db72:	enter  0xa0d5,0xd0
  40db76:	stos   BYTE PTR es:[edi],al
  40db77:	mov    ebp,0x8b27449f
  40db7c:	fistp  DWORD PTR cs:[esi+0x29]
  40db80:	imul   dx,cx,0xff91
  40db84:	mov    eax,ds:0x28d311b
  40db89:	mov    al,0xbb
  40db8b:	push   es
  40db8c:	jp     0x40db9d
  40db8e:	add    bh,BYTE PTR [ecx]
  40db90:	pop    es
  40db91:	shl    DWORD PTR [ebx+0x7],cl
  40db94:	sub    cl,BYTE PTR [ebx]
  40db96:	xchg   ebp,eax
  40db97:	push   edi
  40db98:	mov    ds:0x2a0c0537,al
  40db9d:	pop    ecx
  40db9e:	jge    0x40dbae
  40dba0:	leave  
  40dba1:	test   eax,0x50aee94f
  40dba6:	in     eax,dx
  40dba7:	or     ah,bl
  40dba9:	push   ebx
  40dbaa:	mov    ebp,0x31cf17ea
  40dbaf:	cmp    eax,0xe482a93d
  40dbb4:	cwde   
  40dbb5:	pop    edi
  40dbb6:	test   DWORD PTR [edx+0x3c72c243],esp
  40dbbc:	ficom  WORD PTR [edi]
  40dbbe:	shl    DWORD PTR [edx+0x66],0xe
  40dbc2:	cmp    eax,0x6b043e79
  40dbc7:	xchg   DWORD PTR [ebx-0x63fb70dc],esi
  40dbcd:	shr    BYTE PTR [edi],cl
  40dbcf:	pop    es
  40dbd0:	stos   BYTE PTR es:[edi],al
  40dbd1:	out    0x6a,eax
  40dbd3:	(bad)  
  40dbd4:	ffreep st(7)
  40dbd6:	lods   eax,DWORD PTR ds:[esi]
  40dbd7:	pop    edx
  40dbd8:	xchg   esi,eax
  40dbd9:	pop    ebp
  40dbda:	lock xor eax,0xebd41fe3
  40dbe0:	xor    ebx,ebx
  40dbe2:	test   BYTE PTR [ebp-0xa],bl
  40dbe5:	sub    bh,ah
  40dbe7:	data16 lods al,BYTE PTR ds:[esi]
  40dbe9:	and    BYTE PTR [edi-0x5a],al
  40dbec:	call   FWORD PTR [esi-0x21]
  40dbef:	ja     0x40dc5b
  40dbf1:	and    al,0xbf
  40dbf3:	or     al,0x5d
  40dbf5:	in     eax,dx
  40dbf6:	xchg   esp,eax
  40dbf7:	or     bl,ah
  40dbf9:	aam    0xab
  40dbfb:	adc    BYTE PTR [ebx+0x68f6b784],dl
  40dc01:	inc    edx
  40dc02:	aad    0x3d
  40dc04:	or     ecx,DWORD PTR [esi-0x150550a9]
  40dc0a:	or     BYTE PTR [ebp+esi*1-0x3a],bh
  40dc0e:	imul   dh
  40dc10:	adc    eax,0x88c8771e
  40dc15:	loope  0x40dbb0
  40dc17:	mov    ah,0x64
  40dc19:	shl    DWORD PTR [ebx-0x462bf33b],0x5c
  40dc20:	xchg   BYTE PTR [ecx+0x6ee8c585],dl
  40dc26:	or     al,0x4b
  40dc28:	outs   dx,DWORD PTR ds:[esi]
  40dc29:	shr    cl,cl
  40dc2b:	sbb    BYTE PTR [ebx+0x7f],0xcc
  40dc2f:	mov    eax,0x15b69026
  40dc34:	test   BYTE PTR [eax+0xd],cl
  40dc37:	sub    bl,BYTE PTR [ebp+0x8]
  40dc3a:	ja     0x40dc60
  40dc3c:	ret    
  40dc3d:	jae    0x40dbf1
  40dc3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc40:	pushf  
  40dc41:	rol    BYTE PTR [ebx-0x71],cl
  40dc44:	jne    0x40dbeb
  40dc46:	jne    0x40dc25
  40dc48:	jecxz  0x40dbce
  40dc4a:	test   al,0xbf
  40dc4c:	rol    al,cl
  40dc4e:	sar    al,cl
  40dc50:	scas   al,BYTE PTR es:[edi]
  40dc51:	xor    eax,0x3c0a98ce
  40dc56:	popa   
  40dc57:	dec    ebx
  40dc58:	sahf   
  40dc59:	lahf   
  40dc5a:	out    dx,eax
  40dc5b:	jne    0x40dc05
  40dc5d:	jns    0x40dc3e
  40dc5f:	ret    
  40dc60:	into   
  40dc61:	lock ja 0x40dcb7
  40dc64:	cmp    ch,BYTE PTR es:[edi+0x22d2f9b5]
  40dc6b:	jge    0x40dc5c
  40dc6d:	mov    esi,0x3f02f03a
  40dc72:	or     DWORD PTR [eax],esi
  40dc74:	jp     0x40dc86
  40dc76:	leave  
  40dc77:	and    eax,0xb00240a2
  40dc7c:	cwde   
  40dc7d:	jle    0x40dc4a
  40dc7f:	cmp    BYTE PTR [ecx-0x12],dl
  40dc82:	add    al,0x26
  40dc84:	dec    ecx
  40dc85:	test   BYTE PTR [ecx-0x6e],ah
  40dc88:	add    esp,edi
  40dc8a:	pushf  
  40dc8b:	outs   dx,BYTE PTR ds:[esi]
  40dc8c:	jbe    0x40dc8d
  40dc8e:	es out 0x74,al
  40dc91:	pop    esp
  40dc92:	jnp    0x40dcb3
  40dc94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc95:	mov    ds:0x7677ae46,eax
  40dc9a:	sub    bl,BYTE PTR [eax]
  40dc9c:	push   esp
  40dc9d:	ins    BYTE PTR es:[edi],dx
  40dc9e:	xor    dl,bh
  40dca0:	xor    eax,0x49c46fec
  40dca5:	and    al,0xd2
  40dca7:	gs retf 
  40dca9:	gs dec ebx
  40dcab:	sahf   
  40dcac:	push   edx
  40dcae:	into   
  40dcaf:	inc    esp
  40dcb0:	out    dx,eax
  40dcb1:	stos   DWORD PTR es:[edi],eax
  40dcb2:	ja     0x40dcd3
  40dcb4:	int3   
  40dcb5:	xchg   edx,eax
  40dcb6:	(bad)  
  40dcb7:	pop    ebp
  40dcb8:	jle    0x40dc6e
  40dcba:	dec    esi
  40dcbb:	push   ebx
  40dcbc:	cmp    ah,dl
  40dcbe:	stos   BYTE PTR es:[edi],al
  40dcbf:	mov    ds:0x4702d9a8,al
  40dcc4:	and    edx,ebx
  40dcc6:	adc    ch,BYTE PTR [edi-0x2e6eb688]
  40dccc:	test   eax,0xe48bd096
  40dcd1:	test   DWORD PTR [esi],ecx
  40dcd3:	mov    esi,0x2b11cac
  40dcd8:	sub    eax,0x79faa41b
  40dcdd:	mov    bh,dh
  40dcdf:	mov    esi,0x72a6cc56
  40dce4:	push   ss
  40dce5:	or     esi,edx
  40dce7:	stc    
  40dce8:	pop    eax
  40dce9:	div    DWORD PTR [edx+0x43]
  40dcec:	push   eax
  40dced:	ja     0x40dc92
  40dcef:	inc    esi
  40dcf0:	(bad)  
  40dcf1:	cmc    
  40dcf2:	add    al,0xc0
  40dcf4:	fs jl  0x40dc7d
  40dcf7:	mov    cl,0x40
  40dcf9:	das    
  40dcfa:	jecxz  0x40dd16
  40dcfc:	cmc    
  40dcfd:	ins    DWORD PTR es:[edi],dx
  40dcfe:	(bad)  
  40dcff:	xor    BYTE PTR [ebp+eiz*1+0x78],dh
  40dd03:	xchg   esp,eax
  40dd04:	aam    0xf8
  40dd06:	jne    0x40dcbc
  40dd08:	idiv   DWORD PTR [ebx-0x53ac5c72]
  40dd0e:	xor    DWORD PTR [ebp+0x8],0xffffffa0
  40dd12:	mov    edx,0x6ff73ebb
  40dd17:	imul   BYTE PTR [ebx+0x4ec5e794]
  40dd1d:	lods   al,BYTE PTR ds:[esi]
  40dd1e:	sub    ecx,ebx
  40dd20:	inc    esi
  40dd21:	in     al,0x80
  40dd23:	lds    esp,FWORD PTR [esi]
  40dd25:	test   eax,0x6146473c
  40dd2a:	dec    eax
  40dd2b:	cmc    
  40dd2c:	mov    ds:0x7e9a4ba,eax
  40dd31:	push   ds
  40dd32:	mov    dh,0xed
  40dd34:	adc    al,0x52
  40dd36:	mov    ch,0x55
  40dd38:	sbb    esi,ebp
  40dd3a:	pushf  
  40dd3b:	mov    ds:0xd13ba6cf,al
  40dd40:	dec    esi
  40dd41:	add    al,0x21
  40dd43:	into   
  40dd44:	dec    edi
  40dd45:	rol    BYTE PTR [edx+0x27],1
  40dd48:	inc    esp
  40dd49:	sbb    BYTE PTR [ecx+0x4ec8d404],ah
  40dd4f:	mov    ebx,0x971b714f
  40dd54:	retf   
  40dd55:	xchg   edx,eax
  40dd56:	jecxz  0x40dd76
  40dd58:	aam    0xba
  40dd5a:	ret    0xe168
  40dd5d:	xor    ebp,DWORD PTR [ebx+0x2b]
  40dd60:	sub    ebp,DWORD PTR [esi]
  40dd62:	leave  
  40dd63:	enter  0x8bb6,0x28
  40dd67:	cmp    ch,cl
  40dd69:	popa   
  40dd6a:	xor    ecx,DWORD PTR [ebx]
  40dd6c:	cmc    
  40dd6d:	lods   eax,DWORD PTR ds:[esi]
  40dd6e:	(bad)
  40dd71:	add    al,0x78
  40dd73:	sbb    BYTE PTR [ecx-0x7],0x24
  40dd77:	inc    eax
  40dd78:	mov    ecx,0x613d9c39
  40dd7d:	pop    ds
  40dd7e:	es jnp 0x40dd30
  40dd81:	test   al,0xbb
  40dd83:	or     eax,0x27adef8b
  40dd88:	pop    esi
  40dd89:	neg    DWORD PTR ds:0x6d0904d3
  40dd8f:	xlat   BYTE PTR ds:[ebx]
  40dd90:	stc    
  40dd91:	push   ss
  40dd92:	jnp    0x40dd78
  40dd94:	dec    edi
  40dd95:	inc    eax
  40dd96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd97:	xor    dl,BYTE PTR [eax]
  40dd99:	pop    esp
  40dd9a:	mov    eax,0x1f6f968b
  40dd9f:	inc    edx
  40dda0:	iret   
  40dda1:	mov    edx,0x141d3a49
  40dda6:	inc    ebp
  40dda7:	mov    ch,0x37
  40dda9:	outs   dx,DWORD PTR ds:[esi]
  40ddaa:	push   edi
  40ddab:	std    
  40ddac:	(bad)  
  40ddad:	test   BYTE PTR [edx+0x1be8d697],0xde
  40ddb4:	popf   
  40ddb5:	or     DWORD PTR [edi+0x5fa9e22d],ecx
  40ddbb:	push   edx
  40ddbc:	aad    0xcc
  40ddbe:	bnd jns 0x40ddfd
  40ddc1:	xor    edx,edx
  40ddc3:	jge    0x40dd73
  40ddc5:	cmp    BYTE PTR [ebx+0x8],0xef
  40ddc9:	lods   al,BYTE PTR ds:[esi]
  40ddca:	out    0xde,al
  40ddcc:	adc    al,0xe1
  40ddce:	dec    ebx
  40ddcf:	sar    BYTE PTR [edx-0x21b6e659],1
  40ddd5:	popf   
  40ddd6:	inc    ebp
  40ddd7:	add    esp,esp
  40ddd9:	sbb    DWORD PTR [ecx],edi
  40dddb:	mov    esi,0xa7f5f999
  40dde0:	lahf   
  40dde1:	pop    ss
  40dde2:	xchg   edi,eax
  40dde3:	mov    cl,0xf2
  40dde5:	je     0x40dd97
  40dde7:	shr    DWORD PTR [ecx+0x3e91c06e],cl
  40dded:	fild   QWORD PTR [ebp-0xde117e4]
  40ddf3:	sbb    dh,BYTE PTR [eax]
  40ddf5:	es pop ss
  40ddf7:	mov    ebx,DWORD PTR [edx-0x4a]
  40ddfa:	dec    ebx
  40ddfb:	sbb    al,0x2b
  40ddfd:	add    bh,bh
  40ddff:	pusha  
  40de00:	dec    ecx
  40de01:	outs   dx,BYTE PTR ds:[esi]
  40de02:	pop    esp
  40de03:	mov    edi,0x847a09ff
  40de08:	mov    ds:0xc38b9b01,eax
  40de0d:	cmp    DWORD PTR [eax+0x44],edx
  40de10:	das    
  40de11:	mov    cl,0xb3
  40de13:	sti    
  40de14:	sub    al,0xe0
  40de16:	sbb    edi,DWORD PTR [esi+0x55661bb1]
  40de1c:	xchg   esi,eax
  40de1d:	aam    0xd9
  40de1f:	popa   
  40de20:	pop    esi
  40de21:	ror    BYTE PTR [ecx-0x6e],1
  40de24:	xchg   DWORD PTR [ebp+eiz*1-0x26],esp
  40de28:	mov    al,0x7
  40de2a:	sbb    BYTE PTR [eax],ah
  40de2c:	pop    ds
  40de2d:	pop    esi
  40de2e:	and    ax,0x786e
  40de32:	mov    ecx,0xd4c42aab
  40de37:	sub    DWORD PTR ds:0x67db6747,ecx
  40de3d:	std    
  40de3e:	out    dx,al
  40de3f:	cli    
  40de40:	mov    dl,0x78
  40de42:	popf   
  40de43:	cmp    DWORD PTR [esi+0x77],0x69
  40de47:	mov    ebp,0xb34225a1
  40de4c:	dec    ebx
  40de4d:	mov    dl,0x14
  40de4f:	les    esi,FWORD PTR [ecx-0x36]
  40de52:	push   cs
  40de53:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de55:	imul   edi,ebp,0x3bd704f
  40de5b:	icebp  
  40de5c:	scas   al,BYTE PTR es:[edi]
  40de5d:	adc    ch,dl
  40de5f:	imul   edx,DWORD PTR [eax-0x9],0xffffffd9
  40de63:	mov    ebp,0x10b38299
  40de68:	scas   al,BYTE PTR es:[edi]
  40de69:	out    dx,al
  40de6a:	mov    eax,ds:0xb3f48315
  40de6f:	daa    
  40de70:	nop
  40de71:	retf   0xe748
  40de74:	sub    DWORD PTR [edi],eax
  40de76:	rol    BYTE PTR [eax-0x30],cl
  40de79:	test   eax,0xdffc784b
  40de7e:	or     al,0x12
  40de80:	repnz and eax,0xbcc6b7ad
  40de86:	and    BYTE PTR [edi+0x736e458b],0x4d
  40de8d:	pop    ecx
  40de8e:	pop    ds
  40de8f:	ss cdq 
  40de91:	mov    bl,0x9e
  40de93:	pop    es
  40de94:	dec    esi
  40de95:	adc    esp,DWORD PTR [edx-0xf]
  40de98:	or     BYTE PTR [eax-0x9dbbcef],dl
  40de9e:	lahf   
  40de9f:	pop    eax
  40dea0:	sub    BYTE PTR [edx+ecx*4-0x1e],dl
  40dea4:	test   eax,0x3d590dde
  40dea9:	fldln2 
  40deab:	retf   0xaadd
  40deae:	pop    ebx
  40deaf:	imul   esp,DWORD PTR [eax+ecx*1-0x3778b7a0],0x63
  40deb7:	push   esp
  40deb8:	xchg   ebp,eax
  40deb9:	push   ebx
  40deba:	fld    DWORD PTR [ecx-0x25265f97]
  40dec0:	or     DWORD PTR ds:0xc78af6c2,ebx
  40dec6:	adc    DWORD PTR [esi-0x1d58d45f],esp
  40decc:	dec    esi
  40decd:	inc    edx
  40dece:	fcom   QWORD PTR ds:0x86fd27
  40ded4:	pushf  
  40ded5:	mov    ecx,0xcb294be1
  40deda:	or     DWORD PTR [edi+0x4ee2b539],edx
  40dee0:	push   es
  40dee1:	sahf   
  40dee2:	into   
  40dee3:	lds    esp,FWORD PTR [eax+ebx*1+0xb]
  40dee7:	pop    edi
  40dee8:	push   ds
  40dee9:	jge    0x40de79
  40deeb:	loope  0x40deca
  40deed:	or     al,0xd3
  40deef:	jae    0x40df67
  40def1:	sbb    DWORD PTR [ebx],0x106acfb8
  40def7:	nop
  40def8:	loop   0x40de9d
  40defa:	mov    esi,0xfbe4cea3
  40deff:	cmp    BYTE PTR [ebx+0x7c],dl
  40df02:	pop    ebp
  40df03:	mov    BYTE PTR [ecx+0x551ee092],bh
  40df09:	xor    eax,0x7926af19
  40df0e:	sbb    BYTE PTR [esp+edi*1+0x40],0xe5
  40df13:	jns    0x40ded4
  40df15:	fidivr DWORD PTR [edx+0x4dcbd59b]
  40df1b:	fcmove st,st(1)
  40df1d:	fild   QWORD PTR [esi-0x47250fb3]
  40df23:	outs   dx,BYTE PTR ds:[esi]
  40df24:	or     al,0xd6
  40df26:	mov    ecx,0x11d32258
  40df2b:	je     0x40df29
  40df2d:	aas    
  40df2e:	sbb    edi,ebp
  40df30:	(bad)  
  40df31:	xlat   BYTE PTR ds:[ebx]
  40df32:	xor    esp,DWORD PTR ds:0xbd23640b
  40df38:	jmp    0x53e1bc8
  40df3d:	lds    esi,FWORD PTR [edx]
  40df3f:	mov    bl,0x50
  40df41:	fwait
  40df42:	sub    BYTE PTR [edx-0x8],bl
  40df45:	shl    BYTE PTR [ecx+0x5e4d19ff],cl
  40df4b:	jne    0x40df48
  40df4d:	nop
  40df4e:	shl    BYTE PTR [eax],1
  40df50:	push   ss
  40df51:	adc    BYTE PTR [edx+edi*2-0x33],0xa6
  40df56:	(bad)  
  40df57:	xchg   ebx,eax
  40df58:	push   ebp
  40df59:	pusha  
  40df5a:	dec    ecx
  40df5b:	xchg   DWORD PTR ds:0x74e38d4f,esp
  40df61:	dec    eax
  40df62:	mov    eax,0xd73e6b6a
  40df67:	(bad)  
  40df68:	dec    esp
  40df69:	mov    BYTE PTR [eax-0x47],cl
  40df6c:	jg     0x40dfec
  40df6e:	in     al,dx
  40df6f:	push   es
  40df70:	pop    ds
  40df71:	push   eax
  40df72:	add    dh,BYTE PTR [eax-0x6a930e53]
  40df78:	xor    BYTE PTR [edx+0x59],al
  40df7b:	adc    DWORD PTR [ecx-0x65],0xffffff97
  40df7f:	dec    edi
  40df80:	adc    BYTE PTR [ebx+0x4abd7dcf],cl
  40df86:	xlat   BYTE PTR ds:[ebx]
  40df87:	loopne 0x40dfe2
  40df89:	xchg   esi,eax
  40df8a:	je     0x40df0f
  40df8c:	repnz dec ebx
  40df8e:	fwait
  40df8f:	add    eax,0x3c3c88c3
  40df94:	sahf   
  40df95:	add    DWORD PTR [ecx-0x3a],esi
  40df98:	enter  0xddf2,0xec
  40df9c:	jns    0x40dfb1
  40df9e:	pop    esp
  40df9f:	ror    BYTE PTR [esi],cl
  40dfa1:	aam    0x61
  40dfa3:	rcl    BYTE PTR [ebx+edi*2+0x69],1
  40dfa7:	sub    esi,DWORD PTR [ebx+0x1464bc6a]
  40dfad:	fnstcw WORD PTR [ebp-0x72299ab3]
  40dfb3:	pop    esp
  40dfb4:	xchg   ecx,eax
  40dfb5:	lds    eax,FWORD PTR [edx+0x7067264b]
  40dfbb:	inc    esp
  40dfbc:	cwde   
  40dfbd:	mov    BYTE PTR [ebx+0x2],bh
  40dfc0:	cld    
  40dfc1:	pop    ss
  40dfc2:	test   eax,0xdab7673a
  40dfc7:	pop    ss
  40dfc8:	push   es
  40dfc9:	rcr    BYTE PTR [esp+ecx*2+0x14],cl
  40dfcd:	mov    dh,0x48
  40dfcf:	jb     0x40df7a
  40dfd1:	xchg   BYTE PTR gs:[edx+0x3f],ah
  40dfd5:	imul   edx,DWORD PTR [edx],0xd60794ae
  40dfdb:	push   esi
  40dfdc:	rcl    BYTE PTR [esi-0x25],1
  40dfdf:	jmp    0x40dfad
  40dfe1:	fwait
  40dfe2:	in     eax,dx
  40dfe3:	xchg   esp,eax
  40dfe4:	xchg   esi,eax
  40dfe5:	mov    DWORD PTR [eax],0x68b43c4b
  40dfeb:	sub    DWORD PTR [ebx+0x39d81cb1],ebx
  40dff1:	inc    ebx
  40dff2:	ins    DWORD PTR es:[edi],dx
  40dff3:	ins    DWORD PTR es:[edi],dx
  40dff4:	cmp    al,0x84
  40dff6:	jno    0x40dfe8
  40dff8:	rcr    esi,0x1f
  40dffb:	mov    eax,0x1c4d0cd9
  40e000:	fcmovnb st,st(0)
  40e002:	and    eax,0xc76bb07b
  40e007:	ss cmp cl,dl
  40e00a:	into   
  40e00b:	mov    bh,0xcf
  40e00d:	or     eax,edi
  40e00f:	popf   
  40e010:	jmp    0x6913:0x87f20db7
  40e017:	jmp    0x3005775c
  40e01c:	xchg   ebp,eax
  40e01d:	and    bh,dh
  40e01f:	call   0x53133409
  40e024:	xor    BYTE PTR [ebx+ebp*4+0x29],0xd0
  40e029:	dec    edi
  40e02a:	jae    0x40e069
  40e02c:	inc    ebx
  40e02d:	fmulp  st(2),st
  40e02f:	or     al,0x42
  40e031:	cmp    BYTE PTR [esi-0x6f836c19],dl
  40e037:	test   al,0x92
  40e039:	test   al,0xd2
  40e03b:	sbb    al,0x69
  40e03d:	lahf   
  40e03e:	popf   
  40e03f:	in     eax,0xec
  40e041:	fistp  WORD PTR [bp-0x5c5b]
  40e046:	push   ecx
  40e047:	adc    eax,0xa2522f59
  40e04c:	ja     0x40e020
  40e04e:	mov    bl,0xd1
  40e050:	xchg   edi,eax
  40e051:	jle    0x40e06c
  40e053:	xor    ah,BYTE PTR [eax]
  40e055:	add    al,0xc5
  40e057:	fnstsw WORD PTR [eax+0x52]
  40e05a:	inc    esp
  40e05b:	mov    al,ds:0x1f585651
  40e060:	adc    DWORD PTR [edi+0x37],ebx
  40e063:	sbb    edi,DWORD PTR [ebp+ebx*1-0x6]
  40e067:	push   cs
  40e068:	and    eax,0xf9dce03b
  40e06d:	out    0x83,eax
  40e06f:	sti    
  40e070:	fwait
  40e071:	push   edx
  40e072:	push   esp
  40e073:	fld    st(3)
  40e075:	or     BYTE PTR [eax-0x6],dh
  40e078:	mov    DWORD PTR [edi],ebx
  40e07a:	imul   eax,DWORD PTR [ecx+0x6ab204bf],0xb978e56f
  40e084:	inc    ecx
  40e085:	inc    ebx
  40e086:	adc    edx,DWORD PTR [edi+0x73]
  40e089:	pop    ds
  40e08a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e08b:	adc    eax,0xee17ce0c
  40e090:	popf   
  40e091:	outs   dx,DWORD PTR ds:[esi]
  40e092:	jmp    0x9b0f6b88
  40e097:	daa    
  40e098:	mov    ebx,0xe2e6ddb9
  40e09d:	bound  ecx,QWORD PTR [edi-0x7bb983fe]
  40e0a3:	cwde   
  40e0a4:	push   cs
  40e0a5:	xchg   DWORD PTR [esi+0x687895b2],edi
  40e0ab:	(bad)
  40e0ae:	dec    edx
  40e0af:	hlt    
  40e0b0:	add    al,0xe
  40e0b2:	(bad)  [ecx-0x76b361e7]
  40e0b8:	loop   0x40e122
  40e0ba:	dec    ecx
  40e0bb:	ror    BYTE PTR ds:0xb09862e0,0x2a
  40e0c2:	cmp    eax,0xa2e60d82
  40e0c7:	xchg   ebx,eax
  40e0c8:	(bad)  
  40e0c9:	xchg   ebx,eax
  40e0ca:	stos   BYTE PTR es:[edi],al
  40e0cb:	and    esp,DWORD PTR [ebp+0x28]
  40e0ce:	add    BYTE PTR [ebp+eiz*1+0x4b4326fb],ch
  40e0d5:	lds    edx,FWORD PTR [esi]
  40e0d7:	stc    
  40e0d8:	(bad)  
  40e0da:	imul   edi,esp,0xc5d75fdf
  40e0e0:	mov    esp,0x16aadb5f
  40e0e5:	(bad)  
  40e0e6:	fcom   DWORD PTR [edi-0x2e]
  40e0e9:	mov    ebx,esi
  40e0eb:	lea    ecx,[ebp-0x4fd52480]
  40e0f1:	mov    ds:0x59ba4eab,al
  40e0f6:	push   0xffffffb7
  40e0f8:	mov    bl,0x9b
  40e0fa:	mov    al,ds:0x4ba4db34
  40e0ff:	rol    DWORD PTR [ecx+0x2c],1
  40e102:	aad    0x39
  40e104:	mov    BYTE PTR [ebx+0x3a],dh
  40e107:	shl    DWORD PTR [edi+edx*1+0x51],1
  40e10b:	sti    
  40e10c:	dec    edx
  40e10d:	loop   0x40e188
  40e10f:	rcr    BYTE PTR [esi],0xca
  40e112:	aaa    
  40e113:	retf   0x3853
  40e116:	inc    edx
  40e117:	loopne 0x40e0db
  40e119:	push   edx
  40e11a:	cmc    
  40e11b:	out    dx,al
  40e11c:	out    0x44,al
  40e11e:	test   eax,0xc2b9d084
  40e123:	inc    ebx
  40e124:	jnp    0x40e0d6
  40e126:	outs   dx,DWORD PTR ds:[esi]
  40e127:	daa    
  40e128:	push   es
  40e129:	repnz xor al,0x41
  40e12c:	inc    edi
  40e12d:	ss loop 0x40e0da
  40e130:	or     DWORD PTR ds:0x9655f097,eax
  40e136:	xchg   ebx,eax
  40e137:	(bad)  [ecx]
  40e139:	add    al,0x28
  40e13b:	pop    ecx
  40e13c:	mov    dh,0x44
  40e13e:	aas    
  40e13f:	out    0x3e,al
  40e141:	es jecxz 0x40e0cc
  40e144:	leave  
  40e145:	xchg   esp,eax
  40e146:	retf   
  40e147:	pop    ebp
  40e148:	sub    BYTE PTR [esi-0xffd1c3a],0x2f
  40e14f:	mov    dl,0xd3
  40e151:	mov    ebp,0xc9519306
  40e156:	sbb    DWORD PTR [edx+0x7d],edi
  40e159:	dec    esp
  40e15a:	xchg   edi,eax
  40e15b:	pop    ecx
  40e15c:	mov    ds:0x8e85df13,al
  40e161:	push   ds
  40e162:	fist   DWORD PTR [ebp-0xd]
  40e165:	ins    DWORD PTR es:[edi],dx
  40e166:	jae    0x40e1a0
  40e168:	jo     0x40e168
  40e16a:	pop    esi
  40e16b:	rcr    dh,1
  40e16d:	test   al,0x7d
  40e16f:	pushf  
  40e170:	(bad)  
  40e172:	and    bl,BYTE PTR [ebx]
  40e174:	mov    bl,0x2e
  40e176:	xor    BYTE PTR [ebx+0x42f2612d],dl
  40e17c:	mov    dh,BYTE PTR [ebp-0x39231b79]
  40e182:	jbe    0x40e188
  40e184:	mov    WORD PTR [edi-0x7d96e9c2],?
  40e18a:	xchg   edi,eax
  40e18b:	jo     0x40e1c3
  40e18d:	imul   esi,esi,0x66f4085
  40e193:	mov    ah,0x6d
  40e195:	xchg   ecx,eax
  40e196:	inc    esi
  40e197:	bnd jbe 0x40e15b
  40e19a:	push   ecx
  40e19b:	or     edi,DWORD PTR [edx-0x59]
  40e19e:	call   DWORD PTR [ecx]
  40e1a0:	jp     0x40e15a
  40e1a2:	push   ecx
  40e1a3:	test   al,0xac
  40e1a5:	jnp    0x40e1dc
  40e1a7:	xor    ebp,esi
  40e1a9:	mov    al,ds:0xf2d4369e
  40e1ae:	or     al,0x9b
  40e1b0:	adc    eax,0x6c4dfdef
  40e1b5:	mov    eax,esi
  40e1b7:	sbb    dl,BYTE PTR [ebp-0x14]
  40e1ba:	cmp    ch,BYTE PTR [esp+ebp*8-0x23ec6981]
  40e1c1:	(bad)  
  40e1c3:	outs   dx,DWORD PTR ds:[esi]
  40e1c4:	ja     0x40e1ae
  40e1c6:	cli    
  40e1c7:	cdq    
  40e1c8:	inc    edi
  40e1c9:	mov    ebp,0x24bc72e0
  40e1ce:	jbe    0x40e1c7
  40e1d0:	(bad)  
  40e1d2:	or     eax,0x7252825c
  40e1d7:	(bad)  
  40e1d9:	sti    
  40e1da:	inc    ebp
  40e1db:	int    0xde
  40e1dd:	bnd ret 0x1e2b
  40e1e1:	pop    ebp
  40e1e2:	and    eax,0x491e2910
  40e1e7:	push   ebp
  40e1e8:	cmp    dl,ch
  40e1ea:	das    
  40e1eb:	adc    al,0xbe
  40e1ed:	jecxz  0x40e235
  40e1ef:	enter  0xfc59,0x75
  40e1f3:	push   eax
  40e1f4:	add    esi,DWORD PTR [ebx+0x1a4ec386]
  40e1fa:	loopne 0x40e259
  40e1fc:	cmp    eax,0x4ed9ddf9
  40e201:	popa   
  40e202:	std    
  40e203:	fisttp QWORD PTR [ebp-0x67f35f9a]
  40e209:	jl     0x40e27c
  40e20b:	out    dx,al
  40e20c:	lds    esp,FWORD PTR [esp+edi*1+0x741bf929]
  40e213:	and    BYTE PTR [edi+0x42afccc],0x75
  40e21a:	add    al,0xea
  40e21c:	cmc    
  40e21d:	or     ah,cl
  40e21f:	xor    esp,DWORD PTR [eax-0x495d635b]
  40e225:	inc    ebp
  40e226:	outs   dx,BYTE PTR ds:[esi]
  40e227:	out    0x8a,eax
  40e229:	push   esi
  40e22a:	popf   
  40e22b:	shl    BYTE PTR ds:0xe9c01eb2,0x51
  40e232:	mov    fs,WORD PTR [eax+eax*2-0x5f5aab68]
  40e239:	les    esp,FWORD PTR [eax-0x3b2b6fe0]
  40e23f:	jnp    0x40e1c4
  40e241:	pop    ds
  40e242:	mov    ?,WORD PTR ds:0xbf0f2143
  40e248:	shr    ebx,cl
  40e24a:	add    BYTE PTR [ecx-0x53],al
  40e24d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e24e:	jmp    esp
  40e250:	push   edx
  40e251:	es xor eax,eax
  40e254:	shl    ebx,0x55
  40e257:	and    ch,BYTE PTR [ecx-0x53bec60e]
  40e25d:	mov    ecx,0x442a6080
  40e262:	loope  0x40e27a
  40e264:	popa   
  40e265:	sub    BYTE PTR [ebx-0x5870e3f2],cl
  40e26b:	sub    cl,BYTE PTR [ebx+esi*4]
  40e26e:	inc    esp
  40e26f:	in     al,0xc1
  40e271:	fdivr  QWORD PTR [esi-0x3a]
  40e274:	xor    ah,bh
  40e276:	cwde   
  40e277:	repnz cmp ecx,DWORD PTR [ebx-0x5eb1a9f7]
  40e27e:	cmp    DWORD PTR [ebp+0x207e5697],esp
  40e284:	pop    ax
  40e286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e287:	jo     0x40e2a3
  40e289:	cmp    DWORD PTR [ebx+0x11e2a5ae],0x68000228
  40e293:	arpl   cx,cx
  40e295:	sbb    BYTE PTR [esi-0x669e2e1a],bl
  40e29b:	mov    dl,0xdf
  40e29d:	scas   al,BYTE PTR es:[edi]
  40e29e:	push   0x204c416
  40e2a3:	jae    0x40e277
  40e2a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2a6:	loop   0x40e28a
  40e2a8:	repz push eax
  40e2aa:	adc    al,0x6d
  40e2ac:	outs   dx,BYTE PTR ds:[esi]
  40e2ad:	sbb    DWORD PTR [ecx+0x6ac1e068],edx
  40e2b3:	rcl    DWORD PTR [ecx+0xbfd42e3],0x5b
  40e2ba:	sub    eax,0xb8da8a29
  40e2bf:	mov    ebx,0x46883a69
  40e2c4:	aad    0x52
  40e2c6:	mov    dl,0xf1
  40e2c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2c9:	xlat   BYTE PTR ds:[ebx]
  40e2ca:	or     ebx,DWORD PTR [edx]
  40e2cc:	jbe    0x40e276
  40e2ce:	cmp    eax,0xbba21cd6
  40e2d3:	or     ah,BYTE PTR [ebp-0x7e]
  40e2d6:	pop    edi
  40e2d7:	sub    ebp,DWORD PTR [ebp+0x2]
  40e2da:	enter  0x8215,0x27
  40e2de:	gs adc eax,0x249cd5b
  40e2e4:	and    BYTE PTR [edx-0x2b0d91c4],cl
  40e2ea:	sbb    al,0x1b
  40e2ec:	retf   0xe7f0
  40e2ef:	imul   ebx,DWORD PTR [ecx+0xd31ba51],0x22
  40e2f6:	mov    ds:0xe6b220b3,al
  40e2fb:	xor    al,0xea
  40e2fd:	daa    
  40e2fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2ff:	or     BYTE PTR [ebp+0xa],ch
  40e302:	sbb    dh,bh
  40e304:	pop    ecx
  40e305:	inc    esp
  40e306:	push   0xf33f0666
  40e30b:	dec    ebp
  40e30c:	mov    ebx,ecx
  40e30e:	or     bh,al
  40e310:	mov    cl,0x26
  40e312:	push   esi
  40e313:	ja     0x40e2c6
  40e315:	lods   al,BYTE PTR ds:[esi]
  40e316:	cmp    DWORD PTR [ebp+0x4e],0x1f4039de
  40e31d:	mov    ebp,0x98fe3e89
  40e322:	repnz in eax,dx
  40e324:	mov    ebx,?
  40e326:	and    al,BYTE PTR [edx]
  40e328:	lds    esi,FWORD PTR [edi+0x25bee1cf]
  40e32e:	pop    ecx
  40e32f:	(bad)  
  40e330:	cmp    eax,0x473387b1
  40e335:	out    0x6a,al
  40e337:	pop    es
  40e338:	nop
  40e339:	xchg   ebx,eax
  40e33a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e33b:	nop
  40e33c:	jmp    0x40e2d0
  40e33e:	inc    ecx
  40e33f:	push   eax
  40e340:	push   eax
  40e341:	ret    
  40e342:	inc    edi
  40e343:	mov    eax,0x596e9bc4
  40e348:	sbb    DWORD PTR [edx+0x4f],eax
  40e34b:	fild   WORD PTR [edx-0x43d4800a]
  40e351:	int    0x8e
  40e353:	int    0x6
  40e355:	jo     0x40e36e
  40e357:	jbe    0x40e329
  40e359:	pop    es
  40e35a:	test   ebp,ebx
  40e35c:	or     eax,DWORD PTR [edx-0x54fcd3eb]
  40e362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e363:	int3   
  40e364:	adc    al,0xc3
  40e366:	xor    eax,0xd47c9887
  40e36b:	dec    ebx
  40e36c:	pop    edi
  40e36d:	push   ds
  40e36e:	lahf   
  40e36f:	push   eax
  40e370:	sahf   
  40e371:	loopne 0x40e3af
  40e373:	not    dh
  40e375:	repnz push 0xffffffbc
  40e378:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e379:	lods   eax,DWORD PTR ds:[esi]
  40e37a:	ins    BYTE PTR es:[edi],dx
  40e37b:	in     eax,dx
  40e37c:	outs   dx,DWORD PTR ds:[esi]
  40e37d:	xchg   ebx,eax
  40e37e:	nop
  40e37f:	mov    al,ds:0xa913e676
  40e384:	clc    
  40e385:	int    0x13
  40e387:	inc    ebx
  40e388:	ret    
  40e389:	mov    BYTE PTR [edx],bh
  40e38b:	mov    edi,0x8f593651
  40e390:	lahf   
  40e391:	dec    esp
  40e392:	into   
  40e393:	cmp    al,0xa7
  40e395:	mov    es,ebp
  40e397:	jae    0x40e350
  40e399:	fwait
  40e39a:	and    bl,ch
  40e39c:	fistp  QWORD PTR [ebp+0x5a94d21f]
  40e3a2:	neg    BYTE PTR [ecx-0x31]
  40e3a5:	outs   dx,BYTE PTR ds:[esi]
  40e3a6:	inc    ebx
  40e3a7:	push   ss
  40e3a8:	cli    
  40e3a9:	es scas eax,DWORD PTR es:[edi]
  40e3ab:	mov    eax,ebp
  40e3ad:	std    
  40e3ae:	outs   dx,BYTE PTR ds:[esi]
  40e3af:	scas   al,BYTE PTR es:[edi]
  40e3b0:	repz jle 0x40e3c8
  40e3b3:	mov    esp,0x4b621fff
  40e3b8:	(bad)  
  40e3ba:	jne    0x40e429
  40e3bc:	jmp    0x40e3da
  40e3be:	out    dx,eax
  40e3bf:	out    dx,al
  40e3c0:	add    eax,0x90b90a36
  40e3c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3c6:	cld    
  40e3c7:	outs   dx,BYTE PTR ds:[esi]
  40e3c8:	push   ebp
  40e3c9:	inc    ebp
  40e3ca:	jno    0x40e3e5
  40e3cc:	scas   al,BYTE PTR es:[edi]
  40e3cd:	push   edx
  40e3ce:	aaa    
  40e3cf:	jmp    0x40e36e
  40e3d1:	dec    ebx
  40e3d2:	dec    esi
  40e3d3:	mov    BYTE PTR [ecx],0x20
  40e3d6:	dec    ecx
  40e3d7:	repnz cmp BYTE PTR ds:0xbb072518,al
  40e3de:	into   
  40e3df:	mov    DWORD PTR [ecx-0x50],ebx
  40e3e2:	or     al,0x33
  40e3e4:	jmp    0x29adfbb
  40e3e9:	neg    DWORD PTR [edx+esi*1-0x164c9991]
  40e3f0:	cli    
  40e3f1:	add    DWORD PTR [edi],0x3db54417
  40e3f7:	push   es
  40e3f8:	dec    ebx
  40e3f9:	fldenv [edi-0x67]
  40e3fc:	shr    ch,1
  40e3fe:	and    ah,BYTE PTR ds:0x27a5ed1a
  40e404:	test   BYTE PTR [eax+eiz*4-0x5f719e51],ah
  40e40b:	mov    al,0xd6
  40e40d:	jae    0x40e481
  40e40f:	sbb    dh,BYTE PTR [ebx+ebp*4+0x73034bd9]
  40e416:	cmp    al,0xdd
  40e418:	imul   edx,DWORD PTR [ecx+0x6b],0x49
  40e41c:	cmp    dl,ah
  40e41e:	jbe    0x40e3d0
  40e420:	lods   al,BYTE PTR ds:[esi]
  40e421:	loop   0x40e3d8
  40e423:	or     al,BYTE PTR [esi]
  40e425:	or     BYTE PTR [edx-0x7a],dl
  40e428:	or     ecx,ebp
  40e42a:	add    dh,BYTE PTR [edi-0x103c45da]
  40e430:	sub    DWORD PTR [eax+ecx*1],ebx
  40e433:	inc    esp
  40e434:	mov    ah,0xe0
  40e436:	(bad)  
  40e437:	ja     0x40e498
  40e439:	das    
  40e43a:	pop    ecx
  40e43b:	mov    edx,0xc6b6bff1
  40e440:	enter  0x9fbf,0x76
  40e444:	xchg   ebx,eax
  40e445:	mov    cl,0x37
  40e447:	dec    ecx
  40e448:	push   ebp
  40e449:	adc    bl,0x12
  40e44c:	dec    ebx
  40e44d:	(bad)  
  40e44f:	test   DWORD PTR [edi],eax
  40e451:	shr    edx,0xcb
  40e454:	jp     0x40e3f0
  40e456:	int3   
  40e457:	add    DWORD PTR [ebx+0x6],edx
  40e45a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e45b:	ret    0xc2da
  40e45e:	add    BYTE PTR [edi+0x6d],0x8e
  40e462:	fcomp  QWORD PTR [ebp-0x1ab1a20a]
  40e468:	in     eax,dx
  40e469:	push   ebp
  40e46a:	pop    edx
  40e46b:	xchg   edx,eax
  40e46c:	jne    0x40e4b6
  40e46e:	push   ds
  40e46f:	push   ebp
  40e470:	pop    eax
  40e471:	fiadd  WORD PTR [esi-0x80]
  40e474:	jae    0x40e469
  40e476:	dec    ebp
  40e477:	push   ecx
  40e478:	enter  0xee89,0x56
  40e47c:	xchg   ebx,esi
  40e47e:	mov    dl,0xc
  40e480:	sbb    eax,DWORD PTR es:[eax+eax*8+0x37eb71b3]
  40e488:	push   eax
  40e489:	adc    DWORD PTR ds:0x13d00b7a,0xffffffbb
  40e490:	(bad)  
  40e491:	push   ebx
  40e492:	fisubr DWORD PTR [esp+edx*8+0x1d]
  40e496:	sar    DWORD PTR [ebx-0x6],0xf0
  40e49a:	ja     0x40e50a
  40e49c:	add    al,0x1e
  40e49e:	lock das 
  40e4a0:	lea    eax,[esi+0x42]
  40e4a3:	enter  0xf3ce,0x87
  40e4a7:	fs scas eax,DWORD PTR es:[edi]
  40e4a9:	xor    BYTE PTR [edi-0x4c],0x1b
  40e4ad:	sbb    al,0xd9
  40e4af:	adc    BYTE PTR [eax-0x3b],dh
  40e4b2:	dec    esi
  40e4b3:	aaa    
  40e4b4:	sbb    DWORD PTR [edi-0x79aa835c],0x1a
  40e4bb:	pcmpeqw mm0,mm3
  40e4be:	rol    BYTE PTR [eax-0x6f],1
  40e4c1:	mov    ebp,0x255eb434
  40e4c6:	add    al,0x8d
  40e4c8:	in     al,0x26
  40e4ca:	pop    esi
  40e4cb:	mov    gs,WORD PTR [esi+0x2dde15bc]
  40e4d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4d2:	lea    ebp,[eax-0x11]
  40e4d5:	inc    eax
  40e4d6:	sbb    BYTE PTR [eax-0x21],dh
  40e4d9:	ficomp WORD PTR [esi]
  40e4db:	arpl   WORD PTR [esi],sp
  40e4dd:	pop    esi
  40e4de:	and    dh,BYTE PTR [eax+esi*2-0x54]
  40e4e2:	shl    DWORD PTR [edx],0xd4
  40e4e5:	call   0x5f33:0x268d9339
  40e4ec:	mov    WORD PTR [ebp-0x2393fa9],ds
  40e4f2:	push   esi
  40e4f3:	mov    eax,0xf21eabf7
  40e4f8:	mov    ecx,0x3132d2cd
  40e4fd:	dec    esi
  40e4fe:	aaa    
  40e4ff:	outs   dx,DWORD PTR ds:[esi]
  40e500:	push   es
  40e501:	imul   eax,DWORD PTR [ecx+0x14],0x28
  40e505:	xchg   ecx,eax
  40e506:	or     ah,bh
  40e508:	jg     0x40e48f
  40e50a:	sbb    BYTE PTR [ebp-0x683b730e],0xf3
  40e511:	and    DWORD PTR [esi+0x59982b70],edx
  40e517:	sub    ebp,esi
  40e519:	in     eax,dx
  40e51a:	stos   DWORD PTR es:[edi],eax
  40e51b:	xchg   esp,eax
  40e51c:	ins    DWORD PTR es:[edi],dx
  40e51d:	lods   al,BYTE PTR ds:[esi]
  40e51e:	(bad)  
  40e51f:	loope  0x40e4b4
  40e521:	cdq    
  40e522:	cs inc esi
  40e524:	out    dx,al
  40e525:	cmp    eax,0xf3d1ab06
  40e52a:	addr16 aam 0x67
  40e52d:	out    dx,al
  40e52e:	cmp    bh,BYTE PTR [ebx+0x7e2a8455]
  40e534:	pop    esi
  40e535:	hlt    
  40e536:	xor    al,BYTE PTR [ecx+0x47]
  40e539:	cmp    BYTE PTR [edi+eiz*2+0x7ffb6bc6],bh
  40e540:	mov    ch,0x5c
  40e542:	mov    edx,0x785d869a
  40e547:	fxch   st(0)
  40e549:	stos   BYTE PTR es:[edi],al
  40e54a:	mov    eax,ds:0x6dc6c6d3
  40e54f:	scas   al,BYTE PTR es:[edi]
  40e550:	adc    BYTE PTR [esi+0x7e7c6959],bl
  40e556:	dec    eax
  40e557:	aaa    
  40e558:	out    0xf6,al
  40e55a:	dec    ebx
  40e55b:	push   ds
  40e55c:	xor    DWORD PTR [eax+0xb],esp
  40e55f:	add    BYTE PTR [esi-0x4e],ch
  40e562:	scas   al,BYTE PTR es:[edi]
  40e563:	dec    esi
  40e564:	jg     0x40e5dc
  40e566:	aaa    
  40e567:	cmp    eax,0x9e19bdd0
  40e56c:	daa    
  40e56d:	xor    ecx,DWORD PTR [eax-0x47]
  40e570:	out    0x3a,eax
  40e572:	fcmove st,st(3)
  40e574:	ins    BYTE PTR es:[edi],dx
  40e575:	mov    esi,0x9e36cd45
  40e57a:	or     BYTE PTR [edx+edx*4],ch
  40e57d:	or     DWORD PTR [eax],eax
  40e57f:	ins    BYTE PTR es:[edi],dx
  40e580:	xchg   edx,eax
  40e581:	adc    esi,ebx
  40e583:	mov    ebp,0xe5b6c773
  40e588:	and    edi,DWORD PTR [ecx]
  40e58a:	sbb    BYTE PTR [edx+0x5a],dl
  40e58d:	mov    ecx,0xb5ff1ccb
  40e592:	addr16 mov bh,0x5f
  40e595:	test   BYTE PTR ds:0xf186cb8e,bh
  40e59b:	cwde   
  40e59c:	push   esi
  40e59d:	imul   ecx,DWORD PTR [esi],0xffffff84
  40e5a0:	dec    edx
  40e5a1:	mov    edi,0xf493de5c
  40e5a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5a7:	idiv   DWORD PTR [ecx+0x57503b1c]
  40e5ad:	shl    esi,0xfe
  40e5b0:	add    ebp,ebp
  40e5b2:	push   ss
  40e5b3:	add    eax,0xe51b1458
  40e5b8:	sti    
  40e5b9:	xchg   esi,eax
  40e5ba:	repz (bad) 
  40e5bc:	int    0x12
  40e5be:	jnp    0x40e5e6
  40e5c0:	jmp    0x40e56f
  40e5c2:	(bad)  
  40e5c3:	cdq    
  40e5c4:	punpcklbw mm5,DWORD PTR [esi+0x71]
  40e5c8:	mov    ecx,0x74e14f01
  40e5cd:	xchg   esi,eax
  40e5ce:	xor    dh,BYTE PTR [ecx-0x49]
  40e5d1:	xor    al,0xd9
  40e5d3:	mov    esi,0x4943a46b
  40e5d8:	xchg   esp,eax
  40e5d9:	push   edx
  40e5da:	dec    edi
  40e5db:	fs cmp ebx,eax
  40e5de:	adc    al,0xcc
  40e5e0:	mov    eax,ds:0x561367d
  40e5e5:	popf   
  40e5e6:	js     0x40e5d0
  40e5e8:	push   ecx
  40e5e9:	retf   0x203
  40e5ec:	icebp  
  40e5ed:	xchg   ebp,eax
  40e5ee:	mov    ds:0xfeee583,al
  40e5f3:	mov    esi,0x48a70491
  40e5f8:	adc    eax,0x31c99178
  40e5fd:	pop    ecx
  40e5fe:	ret    0x362c
  40e601:	imul   edx,DWORD PTR [eax+0x0],0xa1cb3456
  40e608:	xchg   DWORD PTR [eax+0x2627d453],edi
  40e60e:	sub    ebx,DWORD PTR [edi]
  40e610:	jmp    0xcc1edd8b
  40e615:	dec    edi
  40e616:	cmp    al,0xc1
  40e618:	out    dx,eax
  40e619:	out    dx,eax
  40e61a:	jno    0x40e5a3
  40e61c:	sbb    BYTE PTR ds:[ebx],0xa7
  40e620:	inc    BYTE PTR [eax-0x565b78e5]
  40e626:	dec    edi
  40e627:	adc    BYTE PTR [ecx],ch
  40e629:	and    eax,eax
  40e62b:	scas   eax,DWORD PTR es:[edi]
  40e62c:	sbb    DWORD PTR [ecx],edx
  40e62e:	daa    
  40e62f:	or     dh,bh
  40e631:	inc    DWORD PTR [eax-0x41748f11]
  40e637:	in     eax,dx
  40e638:	inc    edi
  40e639:	cvtps2pi mm4,QWORD PTR cs:[edi]
  40e63d:	int3   
  40e63e:	mov    edx,?
  40e640:	sbb    ch,BYTE PTR [esi]
  40e642:	jmp    0x6ce6:0xbe2ffef2
  40e649:	mov    ebp,0x95064b5f
  40e64e:	icebp  
  40e64f:	pop    esp
  40e650:	nop
  40e651:	shl    ebx,1
  40e653:	jbe    0x40e665
  40e655:	xchg   ebp,eax
  40e656:	xchg   ebp,eax
  40e657:	lods   eax,DWORD PTR ds:[esi]
  40e658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e659:	sub    dl,ch
  40e65b:	xchg   ebx,eax
  40e65c:	xor    esp,ecx
  40e65e:	mov    dl,0x6a
  40e660:	jb     0x40e5e6
  40e662:	adc    eax,DWORD PTR [ebx+0x319c9562]
  40e668:	out    dx,al
  40e669:	cwde   
  40e66a:	xchg   ch,al
  40e66c:	jnp    0x40e6ea
  40e66e:	jge    0x40e6ca
  40e670:	retf   0xc093
  40e673:	lods   eax,DWORD PTR ds:[esi]
  40e674:	push   eax
  40e675:	aad    0x9d
  40e677:	push   edx
  40e678:	jp     0x40e642
  40e67a:	xor    dh,bh
  40e67c:	and    dh,BYTE PTR [ebp-0x7a521389]
  40e682:	out    0x84,al
  40e684:	rcr    DWORD PTR [ebx+0x4a],cl
  40e687:	out    0x9e,eax
  40e689:	push   eax
  40e68a:	jg     0x40e6b1
  40e68c:	pusha  
  40e68d:	xor    ebp,esi
  40e68f:	mov    WORD PTR ds:0xeea7b007,ss
  40e695:	out    0x22,al
  40e697:	mov    ah,0x2c
  40e699:	lods   al,BYTE PTR ds:[esi]
  40e69a:	cmp    BYTE PTR [esi+0x68],bl
  40e69d:	sub    al,0xae
  40e69f:	xor    al,0x6e
  40e6a1:	xor    ebx,DWORD PTR [ebp+0x515534f2]
  40e6a7:	in     eax,dx
  40e6a8:	lahf   
  40e6a9:	neg    edx
  40e6ab:	ret    
  40e6ac:	sbb    al,0x87
  40e6ae:	out    0x63,al
  40e6b0:	sub    al,0xa0
  40e6b2:	jo     0x40e706
  40e6b4:	inc    esi
  40e6b5:	lds    edi,FWORD PTR [edi-0x22]
  40e6b8:	add    BYTE PTR [ebx+0x2748724a],dl
  40e6be:	loope  0x40e6ed
  40e6c0:	inc    DWORD PTR [ecx-0x121600ee]
  40e6c6:	das    
  40e6c7:	fild   DWORD PTR [eax-0x26993c52]
  40e6cd:	dec    esi
  40e6ce:	sbb    edi,DWORD PTR [ecx+eiz*2-0x5ee8a19b]
  40e6d5:	out    dx,al
  40e6d6:	int3   
  40e6d7:	mov    dh,BYTE PTR [eax+0x25]
  40e6da:	or     DWORD PTR [eax-0x74],0x7a76a670
  40e6e1:	jnp    0x40e681
  40e6e3:	repnz ins BYTE PTR es:[edi],dx
  40e6e5:	mov    ah,cl
  40e6e7:	or     bh,BYTE PTR [edi+0x5171414a]
  40e6ed:	repnz leave 
  40e6ef:	dec    DWORD PTR [ecx]
  40e6f1:	dec    edi
  40e6f2:	mov    edi,0xadc9ea85
  40e6f7:	cs jle 0x40e71b
  40e6fa:	mov    edi,0x425ca2c2
  40e6ff:	ds xor bh,dh
  40e702:	rol    BYTE PTR [esi+ebp*8-0x6b],0x14
  40e707:	ret    
  40e708:	and    cl,0x4b
  40e70b:	aaa    
  40e70c:	jnp    0x40e6ef
  40e70e:	xor    al,0xf8
  40e710:	jnp    0x40e6df
  40e712:	stos   DWORD PTR es:[edi],eax
  40e713:	cmp    BYTE PTR [edi-0x6d21b805],0xe6
  40e71a:	stc    
  40e71b:	sar    BYTE PTR [ebp+0x57],0xf4
  40e71f:	jg     0x40e779
  40e721:	in     al,dx
  40e722:	cwde   
  40e723:	or     BYTE PTR [edi],ah
  40e725:	stc    
  40e726:	push   cs
  40e727:	inc    esp
  40e728:	and    ebx,ebx
  40e72a:	xchg   DWORD PTR [ecx+0x42],ecx
  40e72d:	jle    0x40e6bd
  40e72f:	and    ch,dl
  40e731:	cmp    eax,0xd7df0db2
  40e736:	loopne 0x40e75c
  40e738:	jp     0x40e6eb
  40e73a:	add    BYTE PTR [edx+0x461244b7],dh
  40e740:	pop    esp
  40e741:	retf   
  40e742:	mov    al,ds:0x826a4404
  40e747:	pop    edi
  40e748:	mov    ah,0xad
  40e74a:	js     0x40e767
  40e74c:	stos   BYTE PTR es:[edi],al
  40e74d:	ds adc edx,ebx
  40e750:	adc    al,0xc
  40e752:	stos   BYTE PTR es:[edi],al
  40e753:	int    0x74
  40e755:	push   0x5b
  40e757:	mov    esi,0xe280d793
  40e75c:	dec    ebp
  40e75d:	stos   BYTE PTR es:[edi],al
  40e75e:	jno    0x40e794
  40e760:	mov    esi,0x3deded59
  40e765:	adc    eax,0x69808a1
  40e76a:	xchg   edi,eax
  40e76b:	xor    eax,edi
  40e76d:	dec    esp
  40e76e:	sub    al,0x2c
  40e770:	cmp    eax,0x652c39c9
  40e775:	test   al,0xf4
  40e777:	icebp  
  40e778:	dec    eax
  40e779:	leave  
  40e77a:	cmc    
  40e77b:	and    al,0xed
  40e77d:	jg     0x40e7eb
  40e77f:	outs   dx,BYTE PTR ds:[esi]
  40e780:	mov    ecx,0x2f2509e3
  40e785:	mov    al,0xd0
  40e787:	push   ebx
  40e788:	cmpxchg DWORD PTR [eax+0x1d],esp
  40e78c:	adc    eax,0xced4d372
  40e791:	xchg   edx,eax
  40e792:	xor    BYTE PTR [ebx+0x22],bl
  40e795:	xor    eax,0x7c773a22
  40e79a:	cwde   
  40e79b:	inc    esi
  40e79c:	add    BYTE PTR [edi],ch
  40e79e:	call   0xf72c:0x5d37bc58
  40e7a5:	or     bl,BYTE PTR [esi+0x75]
  40e7a8:	xchg   ebp,eax
  40e7a9:	pop    ebx
  40e7aa:	xor    BYTE PTR [edi+ecx*2-0x6c1999cb],bl
  40e7b1:	out    dx,al
  40e7b2:	test   eax,0x1b489095
  40e7b7:	call   0x9699:0x65771781
  40e7be:	dec    esi
  40e7bf:	sub    eax,DWORD PTR [ebx]
  40e7c1:	mov    ecx,0x788b1e7f
  40e7c6:	sub    eax,0x1089f628
  40e7cb:	or     cl,BYTE PTR [edx-0x7c]
  40e7ce:	jl     0x40e842
  40e7d0:	xchg   ecx,eax
  40e7d1:	xlat   BYTE PTR ds:[ebx]
  40e7d2:	pop    ds
  40e7d3:	sar    DWORD PTR [ecx+0x43],cl
  40e7d6:	mov    dl,0x21
  40e7d8:	xor    BYTE PTR [ebp-0x43a6260a],al
  40e7de:	push   edi
  40e7df:	icebp  
  40e7e0:	aam    0xb4
  40e7e2:	into   
  40e7e3:	dec    edi
  40e7e4:	out    0xec,al
  40e7e6:	shl    DWORD PTR [edi+edi*4-0x18f7b70d],0x97
  40e7ee:	ret    
  40e7ef:	or     DWORD PTR [esi+esi*2],esp
  40e7f2:	idiv   ebp
  40e7f4:	scas   eax,DWORD PTR es:[edi]
  40e7f5:	jl     0x40e806
  40e7f7:	dec    edi
  40e7f8:	arpl   WORD PTR [eax],di
  40e7fa:	mov    DWORD PTR [ebp-0x29],ebx
  40e7fd:	shl    ebx,0x3c
  40e800:	fsub   QWORD PTR [ebp+0x442a8698]
  40e806:	mov    edx,DWORD PTR [edi-0x3c]
  40e809:	scas   al,BYTE PTR es:[edi]
  40e80a:	jnp    0x40e828
  40e80c:	lahf   
  40e80d:	adc    al,0x88
  40e80f:	sub    dl,BYTE PTR [ebp-0x37]
  40e812:	call   0xc0390ef8
  40e817:	pop    ebx
  40e818:	ret    
  40e819:	xchg   ebp,eax
  40e81a:	jbe    0x40e7e6
  40e81c:	enter  0x9ce4,0x56
  40e820:	xchg   BYTE PTR [ecx],ah
  40e822:	enter  0x9aa3,0x3c
  40e826:	lods   al,BYTE PTR ds:[esi]
  40e827:	cmp    dh,bl
  40e829:	jecxz  0x40e83e
  40e82b:	mov    bh,0x83
  40e82d:	jmp    0x19741723
  40e832:	push   0xed0c0802
  40e837:	mov    edi,DWORD PTR [edx-0x2d538dd8]
  40e83d:	(bad)  
  40e83f:	mov    ah,0x5b
  40e841:	xchg   DWORD PTR [edx-0x18489d34],ebp
  40e847:	lahf   
  40e848:	test   eax,0xf056a892
  40e84d:	adc    al,0x8e
  40e84f:	pop    esi
  40e850:	je     0x40e7ee
  40e852:	cmp    edx,ebp
  40e854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e855:	ror    DWORD PTR [ebp+edx*2-0x76],cl
  40e859:	mov    ds:0x872fba1d,eax
  40e85e:	fstp   QWORD PTR [ebp-0x28]
  40e861:	sub    BYTE PTR [edx-0x47d86258],cl
  40e867:	mov    esi,0xa5867e11
  40e86c:	push   0xffffffb8
  40e86e:	bound  ebp,QWORD PTR [ecx-0xf286877]
  40e874:	mov    eax,ds:0x4cc0121c
  40e879:	test   al,0x8b
  40e87b:	stc    
  40e87c:	retf   
  40e87d:	xchg   edx,eax
  40e87e:	mov    ebx,0x7780a49a
  40e883:	and    BYTE PTR [eax-0xc],dh
  40e886:	cmp    bl,dl
  40e888:	mov    dh,0xe4
  40e88a:	clc    
  40e88b:	out    dx,eax
  40e88c:	nop
  40e88d:	pop    esi
  40e88e:	rcl    DWORD PTR ss:[edx],0x4a
  40e892:	pop    esp
  40e893:	adc    BYTE PTR [eax-0x4a],al
  40e896:	gs ja  0x40e867
  40e899:	sar    DWORD PTR [edx],1
  40e89b:	inc    esp
  40e89c:	cwde   
  40e89d:	rcl    BYTE PTR [edx+0x6f],0xe8
  40e8a1:	aaa    
  40e8a2:	xchg   ebp,eax
  40e8a3:	in     eax,0xf
  40e8a5:	scas   al,BYTE PTR es:[edi]
  40e8a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8a7:	cld    
  40e8a8:	test   BYTE PTR [esi+0x19],ch
  40e8ab:	mov    BYTE PTR [ebx+0x7b],ch
  40e8ae:	ins    BYTE PTR es:[edi],dx
  40e8af:	bound  edi,QWORD PTR [ebx-0x3f]
  40e8b2:	mov    ds:0x383e6018,eax
  40e8b7:	fsubp  st(6),st
  40e8b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8ba:	fcmovnbe st,st(7)
  40e8bc:	sti    
  40e8bd:	ins    BYTE PTR es:[edi],dx
  40e8be:	les    edx,FWORD PTR [edx+0x2199b1be]
  40e8c4:	adc    DWORD PTR [ebx],0x9fd67051
  40e8ca:	pop    ds
  40e8cb:	dec    eax
  40e8cc:	jo     0x40e948
  40e8ce:	arpl   WORD PTR [edx+0x6305dbae],di
  40e8d4:	dec    edi
  40e8d5:	pop    ecx
  40e8d6:	das    
  40e8d7:	xchg   edi,eax
  40e8d8:	out    dx,eax
  40e8d9:	push   ecx
  40e8da:	int3   
  40e8db:	inc    edx
  40e8dc:	cmp    al,0x63
  40e8de:	cli    
  40e8df:	push   cs
  40e8e0:	sub    DWORD PTR [eax+eax*1+0x1987fe9a],edi
  40e8e7:	sub    BYTE PTR [edi-0x11b27bf8],0x2b
  40e8ee:	pop    eax
  40e8ef:	add    ebx,DWORD PTR [edi+0x2c]
  40e8f2:	inc    ebx
  40e8f3:	cld    
  40e8f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8f5:	inc    esi
  40e8f6:	jl     0x40e890
  40e8f8:	push   esp
  40e8f9:	and    al,0xb7
  40e8fb:	push   edx
  40e8fc:	stos   DWORD PTR es:[edi],eax
  40e8fd:	sub    dl,cl
  40e8ff:	fcomp  QWORD PTR [eax]
  40e901:	xchg   DWORD PTR [ebx-0x169b932],ecx
  40e907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e908:	mov    ebp,0xa551b697
  40e90d:	mov    DWORD PTR [ebx-0x9],ecx
  40e910:	aad    0x46
  40e912:	rcl    DWORD PTR [edi],1
  40e914:	sub    eax,0x791daca5
  40e919:	sub    DWORD PTR [esi+0xb],ecx
  40e91c:	jp     0x40e8e1
  40e91e:	inc    esp
  40e91f:	mov    esi,0x9f6ea52a
  40e924:	xchg   ebp,eax
  40e925:	pop    ebx
  40e926:	cmp    BYTE PTR [edi+edi*8+0x34],dl
  40e92a:	cli    
  40e92b:	push   esp
  40e92c:	(bad)  
  40e92d:	(bad)  
  40e92e:	int3   
  40e92f:	dec    esp
  40e930:	in     al,dx
  40e931:	add    DWORD PTR [ebx+0x40],ecx
  40e934:	sbb    eax,0xb2a95870
  40e939:	mov    edi,0xb836aa21
  40e93e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e93f:	inc    ebx
  40e940:	aas    
  40e941:	cmp    eax,0xa5dd1d1a
  40e946:	ins    BYTE PTR es:[edi],dx
  40e947:	in     al,dx
  40e948:	leave  
  40e949:	ins    DWORD PTR es:[edi],dx
  40e94a:	jbe    0x40e92f
  40e94c:	div    ch
  40e94e:	mov    eax,0x9b8063b9
  40e953:	mov    ch,0x6d
  40e955:	xchg   BYTE PTR [edx],al
  40e957:	adc    ch,BYTE PTR [edi]
  40e959:	push   ebx
  40e95a:	(bad)  
  40e95b:	cdq    
  40e95c:	and    eax,0xa180c7c9
  40e961:	mov    edi,0xc5534c78
  40e966:	mov    edi,0x9a812b6d
  40e96b:	pushf  
  40e96c:	xor    dl,BYTE PTR [edi+0x31]
  40e96f:	xor    DWORD PTR [edi-0x12cdff9f],esi
  40e975:	icebp  
  40e976:	iret   
  40e977:	mov    eax,ds:0x80f7b763
  40e97c:	repnz pop esp
  40e97e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e97f:	xchg   DWORD PTR [edi+edx*1+0x8],esi
  40e983:	scas   eax,DWORD PTR es:[edi]
  40e984:	sti    
  40e985:	mov    al,ds:0xa8a4ac3d
  40e98a:	push   ebp
  40e98b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e98c:	or     esp,DWORD PTR [edx-0x25]
  40e98f:	arpl   WORD PTR [eax+0x11],dx
  40e992:	lock mov eax,0x9352b70e
  40e998:	mov    esp,DWORD PTR [edx-0x33]
  40e99b:	ds pop edx
  40e99d:	aas    
  40e99e:	in     al,dx
  40e99f:	outs   dx,DWORD PTR ds:[esi]
  40e9a0:	fs mov esi,0x6800ac33
  40e9a6:	ds (bad) 
  40e9a8:	push   edx
  40e9a9:	enter  0x556,0x50
  40e9ad:	shl    dh,0x78
  40e9b0:	jge    0x40e9da
  40e9b2:	in     al,0x93
  40e9b4:	xlat   BYTE PTR ds:[ebx]
  40e9b5:	push   esi
  40e9b6:	popf   
  40e9b7:	out    0x8d,eax
  40e9b9:	xchg   ecx,eax
  40e9ba:	daa    
  40e9bb:	mov    dl,0x9a
  40e9bd:	fadd   QWORD PTR [ebx]
  40e9bf:	pop    ebp
  40e9c0:	sbb    DWORD PTR [ebx+0x39],ebx
  40e9c3:	sbb    BYTE PTR [ebp-0x61],bh
  40e9c6:	jmp    0x25c8684
  40e9cb:	jecxz  0x40e99b
  40e9cd:	daa    
  40e9ce:	popf   
  40e9cf:	inc    edx
  40e9d0:	push   0xb297a4e3
  40e9d5:	cmp    eax,DWORD PTR [edi-0x1d]
  40e9d8:	cmp    al,cl
  40e9da:	clc    
  40e9db:	mov    ds:0xe0974bef,al
  40e9e0:	or     ecx,ebp
  40e9e2:	rcr    esi,cl
  40e9e4:	mov    ebx,0xd3e6ee53
  40e9e9:	fld    QWORD PTR [ecx+0x55]
  40e9ec:	nop
  40e9ed:	ja     0x40ea49
  40e9ef:	jge    0x40e9a3
  40e9f1:	xor    BYTE PTR [ebp+0x60d8e4ad],dh
  40e9f7:	adc    eax,DWORD PTR [eax-0x68]
  40e9fa:	pop    esi
  40e9fb:	push   esp
  40e9fc:	fsubp  st(0),st
  40e9fe:	arpl   WORD PTR [ebp-0x52],di
  40ea01:	lods   eax,DWORD PTR ds:[esi]
  40ea02:	stc    
  40ea03:	cmp    eax,0x749db76c
  40ea08:	sub    di,0x5201
  40ea0d:	and    al,0xcc
  40ea0f:	adc    esp,DWORD PTR [edx-0x189cdf02]
  40ea15:	xchg   edx,eax
  40ea16:	pushf  
  40ea17:	push   ss
  40ea18:	adc    BYTE PTR [edi+0xaa9fd4],dh
  40ea1e:	in     eax,0xd5
  40ea20:	push   cs
  40ea21:	iret   
  40ea22:	or     eax,0xeea8392b
  40ea27:	mov    ch,0x64
  40ea29:	rcl    BYTE PTR [ecx],1
  40ea2b:	gs ins BYTE PTR es:[edi],dx
  40ea2d:	imul   ebx,ebp,0x5b
  40ea30:	mov    ds:0x68101145,al
  40ea35:	cwde   
  40ea36:	mov    edx,0xfe6cfdf5
  40ea3b:	test   dh,cl
  40ea3d:	sub    BYTE PTR [edx-0x69],0xe0
  40ea41:	scas   eax,DWORD PTR es:[edi]
  40ea42:	jmp    0x40e9fe
  40ea44:	xchg   ebp,eax
  40ea45:	ins    BYTE PTR es:[edi],dx
  40ea46:	sahf   
  40ea47:	mov    eax,0x459fe264
  40ea4c:	mov    bl,0x56
  40ea4e:	shl    bh,cl
  40ea50:	pop    edi
  40ea51:	xchg   ebp,eax
  40ea52:	mov    eax,ds:0x7152670e
  40ea57:	pusha  
  40ea58:	stos   DWORD PTR es:[edi],eax
  40ea59:	push   edi
  40ea5a:	jae    0x40ea7c
  40ea5c:	and    ebp,ebx
  40ea5e:	dec    ecx
  40ea5f:	or     eax,0xcba8eeef
  40ea64:	int3   
  40ea65:	int3   
  40ea66:	or     ebx,ebp
  40ea68:	leave  
  40ea69:	push   ss
  40ea6a:	int3   
  40ea6b:	pmuludq mm3,QWORD PTR [ebx-0x7e]
  40ea6f:	iret   
  40ea70:	sbb    edi,DWORD PTR [edi+esi*8-0x24eeff9f]
  40ea77:	jecxz  0x40ea0e
  40ea79:	push   ss
  40ea7a:	jne    0x40eaa0
  40ea7c:	pop    ebx
  40ea7d:	fbld   TBYTE PTR [ebx]
  40ea7f:	mov    esi,0x75a32463
  40ea84:	xor    al,0x3c
  40ea86:	(bad)  
  40ea87:	out    dx,al
  40ea88:	cmp    DWORD PTR [edx+0x25],ebp
  40ea8b:	sbb    dl,BYTE PTR [edx]
  40ea8d:	dec    ebx
  40ea8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea8f:	push   ds
  40ea90:	cwde   
  40ea91:	xchg   edx,eax
  40ea92:	call   0xea0f:0x2219cc61
  40ea99:	inc    ecx
  40ea9a:	sar    BYTE PTR [edx],0x7a
  40ea9d:	ins    BYTE PTR es:[edi],dx
  40ea9e:	xchg   BYTE PTR ds:0xa9bb7b40,bh
  40eaa4:	xor    al,0x7f
  40eaa6:	mov    eax,0xd9a3db
  40eaab:	aas    
  40eaac:	cmp    al,0xd1
  40eaae:	mov    bh,0x4f
  40eab0:	sti    
  40eab1:	stos   DWORD PTR es:[edi],eax
  40eab2:	call   0xd2d2:0x6a6aefed
  40eab9:	mov    BYTE PTR [esi+0x76],dh
  40eabc:	jno    0x40eb27
  40eabe:	nop
  40eabf:	cmc    
  40eac0:	cdq    
  40eac1:	or     al,0x7c
  40eac3:	sub    BYTE PTR [esi+0x484fe4fa],0xda
  40eaca:	cmp    ebx,edi
  40eacc:	in     eax,dx
  40eacd:	in     eax,dx
  40eace:	xor    eax,0x481c028c
  40ead3:	mov    eax,ds:0xda25b6cc
  40ead8:	mov    edx,fs
  40eada:	cmp    ah,al
  40eadc:	aad    0xb0
  40eade:	dec    ebp
  40eadf:	lds    esi,FWORD PTR [eax]
  40eae1:	pop    ecx
  40eae2:	cmp    al,0x1d
  40eae4:	xchg   edi,eax
  40eae5:	xor    al,BYTE PTR [edi]
  40eae7:	ror    DWORD PTR [ebx+0x560368ec],cl
  40eaed:	sbb    ebx,DWORD PTR [ebx]
  40eaef:	jb     0x40eaf4
  40eaf1:	cld    
  40eaf2:	(bad)  
  40eaf3:	call   0x65e2e63c
  40eaf8:	ret    
  40eaf9:	jae    0x40eaa6
  40eafb:	(bad)
  40eafe:	cwde   
  40eaff:	gs push ds
  40eb01:	and    DWORD PTR [edx],eax
  40eb03:	ror    BYTE PTR [ebx-0x3bbbf01a],cl
  40eb09:	es sub bl,0x85
  40eb0d:	(bad)  
  40eb0e:	jnp    0x40eb69
  40eb10:	fisubr WORD PTR [ebp-0x7a]
  40eb13:	mov    al,ds:0x8bedf284
  40eb18:	pop    edi
  40eb19:	add    eax,0x9c32e8a8
  40eb1e:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40eb20:	imul   ebx,DWORD PTR [edx],0xa67a32dd
  40eb26:	daa    
  40eb27:	push   cs
  40eb28:	jb     0x40eb58
  40eb2a:	fiadd  WORD PTR [edi]
  40eb2c:	mov    al,0xc0
  40eb2e:	(bad)  
  40eb2f:	dec    edi
  40eb30:	loopne 0x40ead0
  40eb32:	aad    0xc2
  40eb34:	mov    ebp,esi
  40eb36:	retf   0x514b
  40eb39:	xor    DWORD PTR [edi-0x10541390],edi
  40eb3f:	fsubr  QWORD PTR [esi+0x73]
  40eb42:	test   al,0xa4
  40eb44:	cld    
  40eb45:	mov    dh,0x58
  40eb47:	cmp    dl,BYTE PTR [esi]
  40eb49:	out    0xe4,al
  40eb4b:	rcr    DWORD PTR [ecx-0x14be5162],cl
  40eb51:	shr    BYTE PTR [ebp+edi*4-0x29a8efa4],0x1c
  40eb59:	fcomp  DWORD PTR [ecx-0xf2808c5]
  40eb5f:	outs   dx,DWORD PTR ds:[esi]
  40eb60:	loope  0x40ebda
  40eb62:	jmp    0x4976fb2b
  40eb67:	dec    ebx
  40eb68:	mov    bl,0xb5
  40eb6a:	jb     0x40eb8a
  40eb6c:	jns    0x40eafb
  40eb6e:	loop   0x40eb4c
  40eb70:	js     0x40eb20
  40eb72:	fwait
  40eb73:	call   FWORD PTR [ebx+eiz*8-0x20]
  40eb77:	or     eax,0x6feb41b
  40eb7c:	mul    ebx
  40eb7e:	mov    ch,0xfe
  40eb80:	mov    eax,ds:0xc95516fb
  40eb85:	ror    BYTE PTR [ecx],0x79
  40eb88:	push   es
  40eb89:	inc    esi
  40eb8a:	jb     0x40ebf7
  40eb8c:	push   eax
  40eb8d:	jecxz  0x40eb89
  40eb8f:	shl    DWORD PTR [edi],0x43
  40eb92:	dec    esi
  40eb93:	out    dx,al
  40eb94:	ins    DWORD PTR es:[edi],dx
  40eb95:	inc    DWORD PTR [ecx]
  40eb97:	scas   eax,DWORD PTR es:[edi]
  40eb98:	xor    eax,0x4cb413e
  40eb9d:	cmp    DWORD PTR ds:0xf27f7238,ebx
  40eba3:	stos   DWORD PTR es:[edi],eax
  40eba4:	(bad)  
  40eba5:	call   0x3b7d:0x159f1baa
  40ebac:	jge    0x40eb3e
  40ebae:	mov    ah,al
  40ebb0:	test   BYTE PTR [esp-0x59522fb0],cl
  40ebb7:	fst    DWORD PTR [ebx+esi*1]
  40ebba:	(bad)  
  40ebbb:	fcom   DWORD PTR [ecx+0x7c803d08]
  40ebc1:	ds push esi
  40ebc3:	imul   ebx,DWORD PTR [ebx],0x932ed800
  40ebc9:	sahf   
  40ebca:	sub    DWORD PTR [ebx],esp
  40ebcc:	sub    al,0xff
  40ebce:	fwait
  40ebcf:	jmp    0x1659:0xfbe16d9c
  40ebd6:	adc    al,0xdd
  40ebd8:	sub    BYTE PTR [esp+esi*1+0x344c1771],ch
  40ebdf:	cmp    eax,0x90a2738
  40ebe5:	cwde   
  40ebe6:	sub    edx,DWORD PTR [edi]
  40ebe8:	sti    
  40ebe9:	(bad)  
  40ebea:	adc    DWORD PTR [edx+0x53c7affd],eax
  40ebf0:	push   ecx
  40ebf1:	dec    edx
  40ebf2:	dec    ecx
  40ebf3:	sub    esp,DWORD PTR [edi]
  40ebf5:	xchg   edx,eax
  40ebf6:	xor    DWORD PTR [esi+ecx*2-0x3626c5cd],edx
  40ebfd:	cmp    ah,bh
  40ebff:	mov    DWORD PTR [esi],edx
  40ec01:	mov    eax,ds:0x54f9a104
  40ec06:	adc    cl,BYTE PTR [edx+0x18]
  40ec09:	xor    ah,BYTE PTR [ebx-0x7037dccb]
  40ec0f:	lods   eax,DWORD PTR ds:[esi]
  40ec10:	jge    0x40ec6d
  40ec12:	mov    esp,0xe983c6ea
  40ec17:	mov    edx,esi
  40ec19:	mov    edi,0x8df2009c
  40ec1e:	xchg   ebx,eax
  40ec1f:	adc    DWORD PTR [ebx-0x4256cdc7],esp
  40ec25:	push   esi
  40ec26:	pop    esi
  40ec27:	aad    0x4
  40ec29:	outs   dx,DWORD PTR ds:[esi]
  40ec2a:	xchg   ebx,eax
  40ec2b:	mov    ds:0xed670592,al
  40ec30:	and    BYTE PTR [ebx],ah
  40ec32:	inc    ebp
  40ec33:	mov    eax,ds:0xe8c6efc1
  40ec38:	lods   eax,DWORD PTR ds:[esi]
  40ec39:	and    edi,DWORD PTR [edi*2-0x552d2e93]
  40ec40:	lahf   
  40ec41:	inc    esp
  40ec42:	or     ebp,edi
  40ec44:	stc    
  40ec45:	iret   
  40ec46:	stc    
  40ec47:	enter  0x6b32,0x98
  40ec4b:	outs   dx,BYTE PTR ds:[esi]
  40ec4c:	mov    cl,0xfb
  40ec4e:	les    ebx,FWORD PTR [ebx-0x5b9ad634]
  40ec54:	sbb    bh,0xa3
  40ec57:	mov    edi,0xda25ddd0
  40ec5c:	adc    bh,BYTE PTR [eax-0x26312c50]
  40ec62:	out    dx,eax
  40ec63:	adc    BYTE PTR [ecx-0x6468f92f],bl
  40ec69:	or     edx,DWORD PTR [ecx+0x496846d6]
  40ec6f:	cmp    dh,BYTE PTR [esi+0x51]
  40ec72:	or     BYTE PTR [esi],al
  40ec74:	sub    DWORD PTR [eax*8-0x364051f3],ebp
  40ec7b:	je     0x40ec51
  40ec7d:	push   cs
  40ec7e:	stos   DWORD PTR es:[edi],eax
  40ec7f:	lahf   
  40ec80:	inc    edx
  40ec81:	cmc    
  40ec82:	xchg   DWORD PTR [eax+0x6837b4fd],eax
  40ec88:	dec    eax
  40ec89:	dec    edx
  40ec8a:	popf   
  40ec8b:	or     ch,BYTE PTR [ecx-0x73]
  40ec8e:	(bad)  
  40ec8f:	fmul   DWORD PTR [edi]
  40ec91:	jp     0x40ece1
  40ec93:	mov    dl,0x9b
  40ec95:	ror    DWORD PTR [ecx+edx*2-0x2ee4a546],1
  40ec9c:	xor    al,dh
  40ec9e:	inc    ebp
  40ec9f:	pop    ebp
  40eca0:	inc    ecx
  40eca1:	mov    esp,0xd65989c6
  40eca6:	lahf   
  40eca7:	les    edi,FWORD PTR [eax+0x5f]
  40ecaa:	in     eax,0x7c
  40ecac:	sar    edi,cl
  40ecae:	push   ds
  40ecaf:	retf   
  40ecb0:	jno    0x40ecba
  40ecb2:	pop    ebx
  40ecb3:	push   DWORD PTR [ecx-0x40]
  40ecb6:	jg     0x40ec85
  40ecb8:	dec    edi
  40ecb9:	cli    
  40ecba:	push   cs
  40ecbb:	dec    ebx
  40ecbc:	clc    
  40ecbd:	xor    al,0x30
  40ecbf:	add    edx,DWORD PTR [ebp-0x71]
  40ecc2:	push   ss
  40ecc3:	mov    eax,0xb83e4e45
  40ecc8:	test   DWORD PTR [ecx-0x1b],ebp
  40eccb:	dec    BYTE PTR [ebp-0x23361314]
  40ecd1:	push   ecx
  40ecd2:	bound  esp,QWORD PTR [eax-0x7937b1f4]
  40ecd8:	ss jp  0x40ecab
  40ecdb:	fbld   TBYTE PTR [ebx-0x6d9b866]
  40ece1:	(bad)  
  40ece2:	mov    cl,0x9f
  40ece4:	push   ds
  40ece5:	sbb    ebp,DWORD PTR [ebp+0x8]
  40ece8:	test   BYTE PTR ss:[edi+ebp*2+0x2bde1ea1],bl
  40ecf0:	cmp    DWORD PTR [eax+0x7480fae9],0x74
  40ecf7:	push   ebp
  40ecf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecf9:	push   edi
  40ecfa:	jge    0x40ed39
  40ecfc:	imul   DWORD PTR [edi-0x20]
  40ecff:	mov    dh,0xb5
  40ed01:	push   cs
  40ed02:	cmc    
  40ed03:	pop    ecx
  40ed04:	add    DWORD PTR [edi+0x219f8534],0x76a6779f
  40ed0e:	mov    WORD PTR [edx-0x27],gs
  40ed11:	mov    cs:0x27ed31e1,eax
  40ed17:	mov    al,0x2b
  40ed19:	jno    0x40ed84
  40ed1b:	js     0x40ecae
  40ed1d:	and    eax,0x8ca0ecc2
  40ed22:	idiv   DWORD PTR ds:0xde2aa1b7
  40ed28:	(bad)  
  40ed29:	imul   al
  40ed2b:	adc    eax,0x1a447ae1
  40ed30:	ret    
  40ed31:	shl    DWORD PTR [edi-0x6ceb5b40],cl
  40ed37:	sub    eax,0x859bfee2
  40ed3c:	mov    es,WORD PTR [ebx+0x25]
  40ed3f:	imul   esi,DWORD PTR [ebp+eiz*1-0x6e],0x7f2e3c7e
  40ed47:	in     eax,dx
  40ed48:	ss jg  0x40ed93
  40ed4b:	aaa    
  40ed4c:	call   FWORD PTR [eax]
  40ed4e:	or     eax,0xc5a69ce6
  40ed53:	ja     0x40ed6e
  40ed55:	xchg   ebx,eax
  40ed56:	outs   dx,DWORD PTR ds:[esi]
  40ed57:	dec    edi
  40ed58:	fdivr  QWORD PTR [eax]
  40ed5a:	xchg   esi,eax
  40ed5b:	mov    bl,0x52
  40ed5d:	or     ebx,DWORD PTR [edx]
  40ed5f:	cmp    eax,DWORD PTR [ecx+0x2b]
  40ed62:	or     esi,DWORD PTR [edx]
  40ed64:	in     eax,dx
  40ed65:	xchg   DWORD PTR [eax+0x10af7e4d],ebx
  40ed6b:	(bad)  
  40ed6c:	mov    edx,0x27468074
  40ed71:	(bad)  
  40ed72:	jmp    0x385c:0xfba72529
  40ed79:	inc    eax
  40ed7a:	pop    edi
  40ed7b:	pop    edx
  40ed7c:	xor    ebx,DWORD PTR [edi+0x57655ac7]
  40ed82:	test   esi,0x1822d87
  40ed88:	(bad)  
  40ed89:	dec    edi
  40ed8a:	cld    
  40ed8b:	mov    edi,0x277706db
  40ed90:	test   esp,esp
  40ed92:	push   ss
  40ed93:	push   esp
  40ed94:	ja     0x40ee01
  40ed96:	jo     0x40ed41
  40ed98:	xchg   esi,eax
  40ed99:	jge    0x40ed45
  40ed9b:	sub    al,0x70
  40ed9d:	add    DWORD PTR [eax+0x72],0x9126b48b
  40eda4:	cmp    edi,DWORD PTR [edi+edx*2]
  40eda7:	ja     0x40ed2d
  40eda9:	jnp    0x40ed8f
  40edab:	mov    eax,0x641cbd57
  40edb0:	xchg   edx,eax
  40edb1:	adc    ebx,edx
  40edb3:	adc    BYTE PTR [ebx+edi*1-0x10491c4c],bh
  40edba:	push   es
  40edbb:	rcl    DWORD PTR [edi+0x34],cl
  40edbe:	mov    ch,0x33
  40edc0:	inc    esp
  40edc1:	sbb    esi,DWORD PTR [edi+0xf]
  40edc4:	shl    BYTE PTR [ebx-0x7a],cl
  40edc7:	sbb    BYTE PTR [edx+0x2c72b980],al
  40edcd:	inc    esp
  40edce:	dec    esp
  40edcf:	mov    ebx,DWORD PTR [eax]
  40edd1:	lock xor eax,0x910d9018
  40edd7:	pop    edx
  40edd8:	shl    eax,cl
  40edda:	loop   0x40ed88
  40eddc:	mov    bl,0xcc
  40edde:	or     eax,0x639342a4
  40ede3:	imul   ebp,DWORD PTR [esi-0x48bc7a77],0x31
  40edea:	mov    bh,0x26
  40edec:	cmp    al,al
  40edee:	xchg   edx,eax
  40edef:	xchg   ebx,eax
  40edf0:	pushf  
  40edf1:	stos   BYTE PTR es:[edi],al
  40edf2:	clc    
  40edf3:	data16 cld 
  40edf5:	mov    eax,0xcdeac2f3
  40edfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edfb:	add    al,0x5f
  40edfd:	fidivr WORD PTR [edx+0x5c]
  40ee00:	mov    bl,0x8d
  40ee02:	inc    edx
  40ee03:	mov    edi,0xe12bf44a
  40ee08:	in     al,0xbd
  40ee0a:	mov    cl,0x1b
  40ee0c:	mov    edx,0xa0c9226c
  40ee11:	jg     0x40edc5
  40ee13:	sub    eax,0x404bf900
  40ee18:	daa    
  40ee19:	mov    eax,ds:0x98a5a56d
  40ee1e:	pop    ds
  40ee1f:	mov    edi,0x68c80aa8
  40ee24:	(bad)  
  40ee25:	or     DWORD PTR [edi+0x6895379],edi
  40ee2b:	pop    ds
  40ee2c:	psubusb mm1,QWORD PTR [ecx]
  40ee2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee30:	fld    QWORD PTR [eax]
  40ee32:	les    edx,FWORD PTR [esi+0x18351df9]
  40ee38:	mul    DWORD PTR [ebp-0x45]
  40ee3b:	mov    ds:0x5acca08e,eax
  40ee40:	jmp    0x40edf0
  40ee42:	mul    DWORD PTR [edx+0x62]
  40ee45:	jnp    0x40ee6a
  40ee47:	pop    eax
  40ee48:	jo     0x40eead
  40ee4a:	loope  0x40ee42
  40ee4c:	mov    cs,WORD PTR [ecx]
  40ee4e:	push   edi
  40ee4f:	out    dx,al
  40ee50:	or     BYTE PTR [ebp+0x5d],ch
  40ee53:	inc    ebx
  40ee54:	call   0x91c05ee5
  40ee59:	fistp  DWORD PTR [edx]
  40ee5b:	(bad)  
  40ee5d:	jge    0x40ee8a
  40ee5f:	sub    ebp,DWORD PTR [bx+di]
  40ee62:	ror    DWORD PTR [edx+0x34],0x68
  40ee66:	mov    DWORD PTR [ecx+0x651cd195],ebp
  40ee6c:	retf   
  40ee6d:	retf   
  40ee6e:	jnp    0x40eee1
  40ee70:	out    dx,eax
  40ee71:	mov    ebp,0x7e4b63ad
  40ee76:	outs   dx,DWORD PTR ds:[esi]
  40ee77:	jnp    0x40edfe
  40ee79:	out    0xde,eax
  40ee7b:	jmp    0x40ee6d
  40ee7d:	pushf  
  40ee7e:	sbb    BYTE PTR [ecx+0x50cd0db8],ah
  40ee84:	push   esp
  40ee85:	and    dh,BYTE PTR [edx+esi*2-0x28]
  40ee89:	bound  eax,QWORD PTR [ebp-0x2965cd8]
  40ee8f:	sbb    eax,0xb60f8dd7
  40ee94:	cs retf 0x7505
  40ee98:	mov    ebx,0x299c30fa
  40ee9d:	xor    DWORD PTR [esi-0x3b46b238],eax
  40eea3:	je     0x40ee8b
  40eea5:	cmp    eax,0x32427d93
  40eeaa:	mov    es:0x291d7d55,al
  40eeb0:	adc    ebp,ecx
  40eeb2:	sti    
  40eeb3:	mov    eax,ds:0x667e5411
  40eeb8:	xchg   DWORD PTR [ebx+0x36],esi
  40eebb:	cld    
  40eebc:	or     dl,al
  40eebe:	div    DWORD PTR [edi-0x44]
  40eec1:	xchg   ebx,eax
  40eec2:	in     al,dx
  40eec3:	test   eax,0x1d87d26f
  40eec8:	inc    edi
  40eec9:	icebp  
  40eeca:	jno    0x40eeba
  40eecc:	mov    cl,0xe1
  40eece:	sbb    al,0xa1
  40eed0:	out    0x31,al
  40eed2:	loopne 0x40eeb0
  40eed4:	xchg   esi,eax
  40eed5:	jge    0x40eea4
  40eed7:	idiv   BYTE PTR [ebx]
  40eed9:	loopne 0x40ef33
  40eedb:	push   ebp
  40eedc:	sti    
  40eedd:	outs   dx,DWORD PTR ds:[esi]
  40eede:	fwait
  40eedf:	lea    eax,[eax]
  40eee1:	popf   
  40eee2:	sub    DWORD PTR [eax],0xffffff82
  40eee5:	push   0xffffffcc
  40eee7:	jecxz  0x40ef36
  40eee9:	ret    
  40eeea:	test   BYTE PTR [esi-0x3b],ah
  40eeed:	fcomp  QWORD PTR [eax+0x1b26ca49]
  40eef3:	inc    esp
  40eef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eef5:	jne    0x40ef08
  40eef7:	xchg   ecx,eax
  40eef8:	cmp    ah,BYTE PTR [ebx-0x8]
  40eefb:	ins    DWORD PTR es:[edi],dx
  40eefc:	sub    eax,0x4bc09bb
  40ef01:	test   dl,bl
  40ef03:	or     al,0xae
  40ef05:	lock dec ebp
  40ef07:	xor    BYTE PTR [eax+eiz*4],al
  40ef0a:	mov    BYTE PTR [ecx-0x67bcd721],dh
  40ef10:	or     al,0xa0
  40ef12:	lahf   
  40ef13:	push   ecx
  40ef14:	in     al,0x6b
  40ef16:	call   0x6a19dfd6
  40ef1b:	dec    esi
  40ef1c:	(bad)  
  40ef1d:	dec    edi
  40ef1e:	dec    edx
  40ef1f:	shr    bh,cl
  40ef21:	push   edx
  40ef22:	push   esp
  40ef23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef24:	mov    BYTE PTR [ecx+ecx*8],bh
  40ef27:	pop    es
  40ef28:	add    edi,DWORD PTR [edi]
  40ef2a:	stos   BYTE PTR es:[edi],al
  40ef2b:	mov    eax,0xf143ac95
  40ef30:	adc    eax,0xa0c6ad1f
  40ef35:	dec    edi
  40ef36:	fs je  0x40ef72
  40ef39:	push   ss
  40ef3a:	jl     0x40ef1f
  40ef3c:	ret    
  40ef3d:	test   BYTE PTR [edi-0x2ad30d70],0xa9
  40ef44:	(bad)  
  40ef45:	xchg   cl,dl
  40ef47:	sbb    ebp,ebx
  40ef49:	fwait
  40ef4a:	mov    ds:0xc76ccc16,eax
  40ef4f:	cwde   
  40ef50:	xor    eax,DWORD PTR [ebx-0x14ce6c22]
  40ef56:	xlat   BYTE PTR ds:[ebx]
  40ef57:	xchg   esp,eax
  40ef58:	cmp    al,0xd3
  40ef5a:	ret    0x7431
  40ef5d:	push   edx
  40ef5e:	xor    BYTE PTR [ebp-0x71d4d2a6],bh
  40ef64:	inc    eax
  40ef65:	mov    al,ds:0x88d1070e
  40ef6a:	cmp    bl,BYTE PTR [ebx-0x1e6041aa]
  40ef70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef71:	mov    eax,0x2be15a1c
  40ef76:	int3   
  40ef77:	mov    BYTE PTR [edi+0x53],al
  40ef7a:	gs (bad) 
  40ef7d:	lods   eax,DWORD PTR ds:[esi]
  40ef7e:	ds popa 
  40ef80:	or     DWORD PTR ds:0xa81a2cfb,edi
  40ef86:	jle    0x40eff6
  40ef88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef89:	pop    ecx
  40ef8a:	sbb    BYTE PTR [ebp-0x1],ah
  40ef8d:	lods   eax,DWORD PTR ds:[esi]
  40ef8e:	xchg   ecx,eax
  40ef8f:	inc    ebp
  40ef90:	ins    DWORD PTR es:[edi],dx
  40ef91:	jno    0x40ef91
  40ef93:	push   edx
  40ef94:	add    al,0xca
  40ef96:	or     eax,0xe89b65b2
  40ef9b:	jp     0x40efc8
  40ef9d:	dec    eax
  40ef9e:	js     0x40ef32
  40efa0:	shl    DWORD PTR [ebp+0x48],1
  40efa3:	(bad)  
  40efa4:	shufps xmm4,XMMWORD PTR [edx-0x75],0x10
  40efa9:	mov    cl,BYTE PTR [esi-0x5c5e5a79]
  40efaf:	dec    esi
  40efb0:	push   ebx
  40efb1:	std    
  40efb2:	cli    
  40efb3:	arpl   WORD PTR [ebp-0x4d49d63b],di
  40efb9:	mov    ds:0xe94900de,eax
  40efbe:	and    BYTE PTR [edi],bl
  40efc0:	push   0xa6097080
  40efc5:	lods   al,BYTE PTR ds:[esi]
  40efc6:	lds    edx,FWORD PTR [edi-0x507bc03d]
  40efcc:	push   ds
  40efcd:	sub    BYTE PTR [edx+0x65bafafe],0xb2
  40efd4:	or     al,BYTE PTR [esi+0x72]
  40efd7:	xchg   edx,eax
  40efd8:	cmp    DWORD PTR [edx],eax
  40efda:	dec    esi
  40efdb:	rcl    BYTE PTR [esi],1
  40efdd:	fcomp  QWORD PTR [eax+0x7cc526fb]
  40efe3:	or     DWORD PTR [edi-0x3f],ebx
  40efe6:	xor    al,BYTE PTR [esp+esi*8+0x57b03a98]
  40efed:	adc    DWORD PTR [eax+0x30a49f3b],ecx
  40eff3:	fcos   
  40eff5:	mov    ecx,0xb357063e
  40effa:	xor    eax,0xcf278785
  40efff:	imul   BYTE PTR [edx]
  40f001:	push   esi
  40f002:	xlat   BYTE PTR ds:[ebx]
  40f003:	call   0xb213:0xc20264
  40f00a:	and    ecx,esi
  40f00c:	ror    ah,cl
  40f00e:	mov    edx,0xc2d5521
  40f013:	pop    ecx
  40f014:	sar    BYTE PTR [edx],1
  40f016:	(bad)  
  40f017:	and    ch,BYTE PTR [edx+edx*2-0x58]
  40f01b:	mov    esp,0x377ca960
  40f020:	pop    ss
  40f021:	mov    edi,0xe96a323a
  40f026:	mov    bh,0xfa
  40f028:	cmp    ah,ah
  40f02a:	sbb    BYTE PTR [esi+0x35],cl
  40f02d:	mov    al,0x65
  40f02f:	inc    esp
  40f030:	inc    ebp
  40f031:	sub    ecx,DWORD PTR [ebx-0x2e2fc3ef]
  40f037:	pop    ecx
  40f038:	sahf   
  40f039:	or     DWORD PTR ds:0x395a2ab9,ebp
  40f03f:	aas    
  40f040:	jbe    0x40f014
  40f042:	lds    ecx,FWORD PTR [ebx+0x7b250eba]
  40f048:	mov    eax,ds:0x79cffbda
  40f04d:	sub    al,0xbe
  40f04f:	mov    edi,0xf8eeee20
  40f054:	mov    BYTE PTR [eax+ecx*1],bl
  40f057:	dec    edi
  40f058:	(bad)  
  40f059:	mov    bh,0x5e
  40f05b:	dec    esi
  40f05c:	xchg   ebx,eax
  40f05d:	jle    0x40f073
  40f05f:	push   ebp
  40f060:	jg     0x40f0a2
  40f062:	in     al,dx
  40f063:	call   0x489ca662
  40f068:	push   esi
  40f069:	add    BYTE PTR [esi-0x4d],bl
  40f06c:	mov    ecx,0x5aafc609
  40f071:	cwde   
  40f072:	test   eax,0xb65a2025
  40f077:	mov    edi,0xcc9fb8e7
  40f07c:	ror    DWORD PTR [edx+0x3e],cl
  40f07f:	xlat   BYTE PTR ds:[ebx]
  40f080:	or     ebx,DWORD PTR [edx+0x34]
  40f083:	add    edi,DWORD PTR [ecx+0x7de7ad94]
  40f089:	or     DWORD PTR [edx+0x2a],ebp
  40f08c:	jb     0x40f092
  40f08e:	mov    ah,0x89
  40f090:	pop    edi
  40f091:	add    al,0xf4
  40f093:	sbb    al,0x92
  40f095:	mov    dh,0x44
  40f097:	pop    esi
  40f098:	lds    eax,FWORD PTR [ebx]
  40f09a:	jnp    0x40f093
  40f09c:	ins    BYTE PTR es:[edi],dx
  40f09d:	cmp    al,0xbe
  40f09f:	mov    eax,0x831031aa
  40f0a4:	lods   al,BYTE PTR ds:[esi]
  40f0a5:	adc    eax,0x8ab014ef
  40f0aa:	dec    edx
  40f0ab:	sbb    DWORD PTR [edx+eiz*1+0x26],edi
  40f0af:	outs   dx,DWORD PTR ds:[esi]
  40f0b0:	cmp    BYTE PTR [ecx+0x7d5aef85],bh
  40f0b6:	cwde   
  40f0b7:	and    BYTE PTR [ebp-0x69c1b087],dl
  40f0bd:	aas    
  40f0be:	xor    eax,DWORD PTR [ecx]
  40f0c0:	or     dl,BYTE PTR [eax+0x2e]
  40f0c3:	outs   dx,BYTE PTR ds:[esi]
  40f0c4:	cmp    ecx,DWORD PTR [edi-0x45]
  40f0c7:	adc    BYTE PTR [ecx],dl
  40f0c9:	sub    eax,0xea8aa78b
  40f0ce:	enter  0x5ad4,0x35
  40f0d2:	and    eax,0x615d9115
  40f0d7:	int    0x58
  40f0d9:	aas    
  40f0da:	jo     0x40f15b
  40f0dc:	dec    edx
  40f0dd:	xor    DWORD PTR [ebp+0x42],esi
  40f0e0:	pop    ebx
  40f0e1:	cmp    al,0x61
  40f0e3:	test   al,0xcc
  40f0e5:	aaa    
  40f0e6:	xor    al,BYTE PTR [esi]
  40f0e8:	test   eax,0x67104257
  40f0ed:	and    BYTE PTR [ebx],dh
  40f0ef:	out    0x2b,eax
  40f0f1:	gs xor al,0x3
  40f0f4:	or     dl,BYTE PTR [ebx-0x3d825dea]
  40f0fa:	sar    ch,0x44
  40f0fd:	inc    eax
  40f0fe:	mov    ch,0xfc
  40f100:	cmp    eax,0xcc44bd89
  40f105:	fimul  WORD PTR [eax-0x47b0b6ad]
  40f10b:	fistp  DWORD PTR [ebp+0x92ac7a4]
  40f111:	dec    eax
  40f112:	push   0x58b22d85
  40f117:	imul   eax,DWORD PTR [esi+0x61a14e10],0xe31fc1da
  40f121:	fstp   QWORD PTR [esp+eax*2+0x7c966f4e]
  40f128:	sub    ebx,DWORD PTR [ebx+0x234f359a]
  40f12e:	sbb    esi,DWORD PTR ds:0x690eed37
  40f134:	retf   
  40f135:	sbb    al,BYTE PTR [edi+ebp*1+0x2cd495f8]
  40f13c:	bound  ebx,QWORD PTR [eax+0x77f8dfe2]
  40f142:	pop    edx
  40f143:	xchg   ebp,ebp
  40f145:	lea    edx,[eax+ecx*2+0x6fff0c3e]
  40f14c:	jnp    0x40f1a7
  40f14e:	inc    esp
  40f14f:	jle    0x40f13d
  40f151:	sahf   
  40f152:	iret   
  40f153:	addr16 add esp,edi
  40f156:	ins    BYTE PTR es:[edi],dx
  40f157:	or     al,0xc1
  40f159:	test   eax,0x301b82c
  40f15e:	fiadd  WORD PTR [ecx-0x55]
  40f161:	inc    ebp
  40f162:	add    ebp,edx
  40f164:	repz mov bh,0xcd
  40f167:	xrelease mov DWORD PTR [edi+esi*1+0x2c],esi
  40f16c:	mov    ebx,0x76453388
  40f171:	and    eax,0xf8b6c2dc
  40f176:	mov    esp,?
  40f178:	rcr    DWORD PTR [esi],1
  40f17a:	or     ecx,ebp
  40f17c:	ins    DWORD PTR es:[edi],dx
  40f17d:	fs mov ah,0x61
  40f180:	mov    eax,DWORD PTR [ebx-0x38]
  40f183:	lods   al,BYTE PTR ds:[esi]
  40f184:	jb     0x40f117
  40f186:	cld    
  40f187:	mov    cl,0xfc
  40f189:	xor    edi,DWORD PTR [edi+0x44]
  40f18c:	icebp  
  40f18d:	dec    esp
  40f18e:	xchg   ebx,eax
  40f18f:	and    eax,DWORD PTR [esi+0x5e]
  40f192:	push   esp
  40f193:	ror    DWORD PTR [ebx-0x45f91229],cl
  40f199:	cs popf 
  40f19b:	cmp    DWORD PTR [eax+0x528dd5e4],0x2a619fd5
  40f1a5:	push   ss
  40f1a6:	jecxz  0x40f1fd
  40f1a8:	rep lods eax,DWORD PTR ds:[esi]
  40f1aa:	cs pop es
  40f1ac:	sbb    DWORD PTR [ecx-0x504add1e],0x78
  40f1b3:	push   edx
  40f1b4:	add    al,0xe3
  40f1b6:	imul   edx,edi,0x5ac45068
  40f1bc:	clc    
  40f1bd:	dec    esi
  40f1be:	icebp  
  40f1bf:	rol    DWORD PTR [edi+0x48a67497],cl
  40f1c5:	mov    edi,0xc0832868
  40f1cb:	sub    al,0x61
  40f1cd:	sub    BYTE PTR [esi+0x74],cl
  40f1d0:	das    
  40f1d1:	dec    edi
  40f1d2:	and    al,0x20
  40f1d4:	and    al,0xb1
  40f1d6:	xlat   BYTE PTR ds:[ebx]
  40f1d7:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40f1d9:	mov    dl,0xe1
  40f1db:	xor    DWORD PTR [eax-0x432bea27],ecx
  40f1e1:	loope  0x40f221
  40f1e3:	dec    eax
  40f1e4:	or     al,0x45
  40f1e6:	or     BYTE PTR [ecx],dl
  40f1e8:	or     DWORD PTR [edi-0xbc595a5],edi
  40f1ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1ef:	or     eax,0x4be5856c
  40f1f4:	add    dl,BYTE PTR [ebp+0x23]
  40f1f7:	xchg   ebx,eax
  40f1f8:	mov    ds:0x11553283,al
  40f1fd:	ror    BYTE PTR [eax],0x5e
  40f200:	adc    al,bh
  40f202:	ja     0x40f255
  40f204:	rsm    
  40f206:	sub    ah,BYTE PTR [edx-0xc]
  40f209:	sbb    al,0x87
  40f20b:	clc    
  40f20c:	int3   
  40f20d:	fnstenv [ebx]
  40f20f:	mov    ah,0xa4
  40f211:	data16 jl 0x40f20d
  40f214:	stc    
  40f215:	sti    
  40f216:	jp     0x40f277
  40f218:	jbe    0x40f1dc
  40f21a:	cmp    eax,0x179f4d69
  40f21f:	cwde   
  40f220:	ins    BYTE PTR es:[edi],dx
  40f221:	cli    
  40f222:	js     0x40f1c5
  40f224:	icebp  
  40f225:	ins    BYTE PTR es:[edi],dx
  40f226:	aad    0x60
  40f228:	cdq    
  40f229:	inc    eax
  40f22a:	rcl    dh,0x5a
  40f22d:	push   0xa344fb2c
  40f232:	test   BYTE PTR [edi],bh
  40f234:	outs   dx,DWORD PTR ds:[esi]
  40f235:	adc    eax,0x9b581354
  40f23a:	dec    esp
  40f23b:	mov    ds:0x82632235,eax
  40f240:	or     bh,bl
  40f242:	(bad)  
  40f243:	(bad)  
  40f245:	push   es
  40f246:	xchg   edx,eax
  40f247:	enter  0xac08,0x41
  40f24b:	and    ebx,eax
  40f24d:	adc    bh,dl
  40f24f:	xor    eax,0xf4411d17
  40f254:	popf   
  40f255:	loopne 0x40f248
  40f257:	jae    0x40f2ab
  40f259:	jecxz  0x40f1ea
  40f25b:	outs   dx,DWORD PTR ds:[esi]
  40f25c:	pop    ebp
  40f25d:	sub    DWORD PTR [edx-0x17],0xffffff85
  40f261:	xor    edi,eax
  40f263:	xor    dl,BYTE PTR [edx]
  40f265:	jnp    0x40f1ea
  40f267:	mov    cl,0xc1
  40f269:	cdq    
  40f26a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f26b:	push   ebp
  40f26c:	ror    ecx,cl
  40f26e:	inc    ebx
  40f26f:	jp     0x40f25e
  40f271:	in     al,dx
  40f272:	or     eax,0x1b31173d
  40f277:	and    eax,0x6e7e1c3b
  40f27c:	fstp   QWORD PTR [ecx-0x43]
  40f27f:	and    bl,BYTE PTR [esi]
  40f281:	mov    cl,0xa8
  40f283:	xchg   ebx,eax
  40f284:	push   ss
  40f285:	pusha  
  40f286:	jg     0x40f29f
  40f288:	mov    esi,0xd5ed096
  40f28d:	icebp  
  40f28e:	bswap  ebp
  40f290:	cmp    esi,DWORD PTR [ebx-0x3b606436]
  40f296:	jb     0x40f261
  40f298:	in     eax,0x67
  40f29a:	sub    BYTE PTR [esi-0x8b793d2],dh
  40f2a0:	(bad)  
  40f2a1:	jp     0x40f2f7
  40f2a3:	sub    DWORD PTR [esi+0x39],esi
  40f2a6:	repz es cwde 
  40f2a9:	ja     0x40f26b
  40f2ab:	fiadd  DWORD PTR [eax+0x41edf52]
  40f2b1:	in     al,dx
  40f2b2:	test   eax,0xb01e1a0d
  40f2b7:	xlat   BYTE PTR ds:[ebx]
  40f2b8:	pop    ds
  40f2b9:	shr    BYTE PTR [edx+0xb],0x7b
  40f2bd:	mov    ecx,0xcd1b98b1
  40f2c2:	lds    eax,FWORD PTR [eax+eiz*1+0x1395e686]
  40f2c9:	and    BYTE PTR [esp+ebp*1-0x7a],0x39
  40f2ce:	cmc    
  40f2cf:	and    DWORD PTR [edx],ecx
  40f2d1:	add    dl,BYTE PTR [edi+0x23]
  40f2d4:	fadd   QWORD PTR ds:0xbac96164
  40f2da:	mov    WORD PTR [ebp-0x2d],?
  40f2dd:	fldln2 
  40f2df:	jnp    0x40f2e7
  40f2e1:	add    dh,dh
  40f2e3:	pop    esi
  40f2e4:	or     dh,al
  40f2e6:	cli    
  40f2e7:	test   eax,0x7f850823
  40f2ec:	mov    dl,0x51
  40f2ee:	repnz sbb bh,BYTE PTR [ebp-0x1b]
  40f2f2:	fimul  DWORD PTR [eax-0x4a]
  40f2f5:	dec    edi
  40f2f6:	call   FWORD PTR [ecx+0x78]
  40f2f9:	jne    0x40f2c2
  40f2fb:	inc    eax
  40f2fc:	mov    ch,0x3e
  40f2fe:	pop    ss
  40f2ff:	ds rol ebx,cl
  40f302:	repz pop ds
  40f304:	push   ebx
  40f305:	sub    ah,BYTE PTR [edx-0x5]
  40f308:	pop    esi
  40f309:	test   al,0xa5
  40f30b:	scas   eax,DWORD PTR es:[edi]
  40f30c:	and    edx,DWORD PTR [eax-0x1f]
  40f30f:	jae    0x40f2af
  40f311:	fs icebp 
  40f313:	ss shr edi,0xd9
  40f317:	jp     0x40f30b
  40f319:	pop    ebx
  40f31a:	aas    
  40f31b:	cmc    
  40f31c:	lds    esi,FWORD PTR [eax+esi*2-0x38]
  40f320:	push   esp
  40f321:	out    dx,eax
  40f322:	mov    ecx,0xecbd5270
  40f327:	repz xchg ecx,eax
  40f329:	fcom   DWORD PTR [edx-0xcfa1729]
  40f32f:	pop    es
  40f330:	idiv   DWORD PTR gs:[edi+eax*8+0x2f446bba]
  40f338:	mov    dh,0x2e
  40f33a:	in     eax,0x74
  40f33c:	mov    bh,0xa4
  40f33e:	repz cmc 
  40f340:	es sbb ch,bl
  40f343:	ss (bad) 
  40f345:	fild   QWORD PTR [ebx-0x11e4f948]
  40f34b:	pop    eax
  40f34c:	rcl    ah,0x62
  40f34f:	test   BYTE PTR [esi+0x55847fdd],ch
  40f355:	in     eax,0x9b
  40f357:	out    0x21,eax
  40f359:	cmp    BYTE PTR [ecx+0x2162fe1],0x9c
  40f360:	dec    esi
  40f361:	and    al,0x2e
  40f363:	jg     0x40f2eb
  40f365:	jmp    0x40f32d
  40f367:	pushf  
  40f368:	add    DWORD PTR [edx+0x2f59cf74],0xa1831e53
  40f372:	mov    ebp,0xf3e4ab0b
  40f377:	mov    DWORD PTR [esi-0x51],esi
  40f37a:	add    DWORD PTR [eax],ebx
  40f37c:	cmp    edi,DWORD PTR [edx+0x78f81386]
  40f382:	xchg   esp,eax
  40f383:	rcl    edx,1
  40f385:	mov    ds:0x8de09ffb,eax
  40f38a:	mov    WORD PTR [esp+ebx*1],gs
  40f38d:	push   ds
  40f38e:	or     ebp,DWORD PTR [ecx+0x224f1bc3]
  40f394:	pop    es
  40f395:	adc    bh,bl
  40f397:	test   al,0x25
  40f399:	mov    al,0xd7
  40f39b:	inc    eax
  40f39c:	or     cl,dh
  40f39e:	dec    esi
  40f39f:	ret    0x5e1d
  40f3a2:	outs   dx,BYTE PTR ds:[esi]
  40f3a3:	(bad)  
  40f3a4:	lahf   
  40f3a5:	test   BYTE PTR [ebx+0x25],bh
  40f3a8:	jnp    0x40f36d
  40f3aa:	jne    0x40f363
  40f3ac:	fdiv   st(7),st
  40f3ae:	and    al,0xe1
  40f3b0:	xor    ah,ah
  40f3b2:	xor    al,0x8f
  40f3b4:	mov    cl,0xee
  40f3b6:	popa   
  40f3b7:	cmp    DWORD PTR [ebx],esi
  40f3b9:	mov    dh,0xf2
  40f3bb:	jp     0x40f3de
  40f3bd:	shl    BYTE PTR [ecx-0x4b550eff],1
  40f3c3:	mov    ebp,0x299053fc
  40f3c8:	test   eax,0x60dfa7b1
  40f3cd:	mov    edi,DWORD PTR ds:0x5eafb94d
  40f3d3:	mov    ah,0x2e
  40f3d5:	popa   
  40f3d6:	cdq    
  40f3d7:	sub    edx,ecx
  40f3d9:	dec    esi
  40f3da:	jo     0x40f41e
  40f3dc:	push   ebp
  40f3dd:	and    eax,0x367cb228
  40f3e2:	lock jp 0x40f3ad
  40f3e5:	and    BYTE PTR [eiz*2-0x67a50f66],dh
  40f3ec:	jmp    0x40f36e
  40f3ee:	clc    
  40f3ef:	cmc    
  40f3f0:	or     eax,0x1fbdd9e8
  40f3f5:	pop    ebx
  40f3f6:	pop    esi
  40f3f7:	mov    BYTE PTR [ebx],cl
  40f3f9:	(bad)  
  40f3fa:	push   eax
  40f3fb:	in     al,dx
  40f3fc:	(bad)  
  40f3fd:	mov    ds:0x4dd29246,al
  40f402:	rol    BYTE PTR [ebx+0x40],cl
  40f405:	sahf   
  40f406:	retf   0x6131
  40f409:	ror    esp,0x8d
  40f40c:	adc    eax,0x8a44d86f
  40f411:	test   eax,0xdf738d94
  40f416:	(bad)  
  40f417:	imul   esp,eax,0x2d
  40f41a:	mov    ah,0x4c
  40f41c:	mov    ebp,0x4a91852a
  40f421:	xlat   BYTE PTR ds:[ebx]
  40f422:	addr16 ret 0x409a
  40f426:	dec    ebx
  40f427:	sbb    BYTE PTR [eax],bl
  40f429:	mov    edi,0xa923cf9c
  40f42e:	sbb    al,0xe2
  40f430:	push   cs
  40f431:	sbb    BYTE PTR [esi],bh
  40f433:	addr16 ss inc eax
  40f436:	dec    esp
  40f437:	or     eax,0x9936681d
  40f43c:	aaa    
  40f43d:	rol    esp,0xee
  40f440:	mov    esp,0xd20e683d
  40f445:	(bad)  
  40f446:	imul   edx,DWORD PTR [eax-0x2f],0xf07f82db
  40f44d:	(bad)  
  40f44e:	es je  0x40f3fa
  40f451:	in     al,0x2d
  40f453:	add    BYTE PTR [eax+0x5c],0xfb
  40f457:	sar    bh,cl
  40f459:	test   al,0x2b
  40f45b:	or     eax,0xbe298f69
  40f460:	lea    ebx,[edx+0x3b187cfd]
  40f466:	fwait
  40f467:	dec    edx
  40f468:	add    DWORD PTR [ecx+edx*8+0x3f],0xd9461cec
  40f470:	(bad)  
  40f471:	jle    0x40f4c2
  40f473:	retf   0x30ae
  40f476:	dec    edi
  40f478:	lods   eax,DWORD PTR ds:[esi]
  40f479:	call   0x422550e5
  40f47e:	(bad)  
  40f47f:	in     eax,dx
  40f480:	(bad)  
  40f482:	sbb    eax,0xccd63d80
  40f487:	sti    
  40f488:	shr    DWORD PTR [esi-0x22],cl
  40f48b:	or     al,0x27
  40f48d:	inc    esp
  40f48e:	pop    ebp
  40f48f:	out    0xda,eax
  40f491:	stc    
  40f492:	mov    dh,0x97
  40f494:	push   ecx
  40f495:	sbb    DWORD PTR [ebp+0x6b8dbb5f],ebx
  40f49b:	pusha  
  40f49c:	jno    0x40f4e8
  40f49e:	cmc    
  40f49f:	call   0x53f7fb3f
  40f4a4:	cli    
  40f4a5:	and    eax,0xec7ca45b
  40f4aa:	jg     0x40f477
  40f4ac:	mov    WORD PTR [esi],gs
  40f4ae:	sbb    bl,cl
  40f4b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4b1:	loop   0x40f4ba
  40f4b3:	aad    0xed
  40f4b5:	xchg   ebx,eax
  40f4b6:	or     edx,esp
  40f4b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4b9:	adc    ebx,DWORD PTR [ebp+0x3a]
  40f4bc:	mov    ebp,0xf9d45bed
  40f4c1:	lods   al,BYTE PTR ds:[esi]
  40f4c2:	and    BYTE PTR [esi-0x16226975],al
  40f4c8:	xchg   DWORD PTR fs:[ecx+0x55c79a5a],edi
  40f4cf:	xchg   esp,eax
  40f4d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4d1:	mov    eax,ds:0xd4f6bc4f
  40f4d6:	xchg   esi,eax
  40f4d7:	adc    cl,bh
  40f4d9:	aas    
  40f4da:	mov    ebp,0xec00cf36
  40f4df:	call   0x12f3c162
  40f4e4:	xchg   ebp,eax
  40f4e5:	not    BYTE PTR [ecx]
  40f4e7:	test   BYTE PTR [edi+0x7acf2eff],dl
  40f4ed:	mov    ebx,0xa4a8905c
  40f4f2:	pusha  
  40f4f3:	fld    QWORD PTR [esi-0x61]
  40f4f6:	sub    al,0x53
  40f4f8:	push   eax
  40f4f9:	jge    0x40f49b
  40f4fb:	inc    ebx
  40f4fc:	mov    cl,0x14
  40f4fe:	adc    al,0x93
  40f500:	hlt    
  40f501:	shl    DWORD PTR [eax+ebx*1+0x24],0x42
  40f506:	sar    DWORD PTR [eax],1
  40f508:	dec    edi
  40f509:	lds    edx,FWORD PTR [ebx+0x6a]
  40f50c:	loope  0x40f57b
  40f50e:	mov    ds:0x531b91d3,eax
  40f513:	ins    DWORD PTR es:[edi],dx
  40f514:	xor    dh,BYTE PTR [edi-0x35]
  40f517:	jmp    0x40f4b0
  40f519:	das    
  40f51a:	loope  0x40f4eb
  40f51c:	ss aad 0xc
  40f51f:	pop    edi
  40f520:	sbb    BYTE PTR [eax],ch
  40f522:	mov    ebx,0x5e8fd6b4
  40f527:	mov    ch,0xea
  40f529:	jg     0x40f55f
  40f52b:	adc    bh,BYTE PTR [eax-0x41]
  40f52e:	push   0xbb5f1b15
  40f533:	push   ss
  40f534:	sti    
  40f535:	cmp    eax,0xd288aea7
  40f53a:	push   ss
  40f53b:	pop    ecx
  40f53c:	je     0x40f5ba
  40f53e:	outs   dx,BYTE PTR ds:[esi]
  40f53f:	ins    BYTE PTR es:[edi],dx
  40f540:	push   esp
  40f541:	mov    ch,0xa
  40f543:	jp     0x40f4cb
  40f545:	cs dec esp
  40f547:	mov    WORD PTR [esi+eax*1-0x9],ss
  40f54b:	push   ds
  40f54c:	sub    al,0x5e
  40f54e:	xor    BYTE PTR gs:[edx+0x4d],0x5c
  40f553:	(bad)  
  40f554:	mov    ds:0xfa4c13af,eax
  40f559:	ds cmc 
  40f55b:	enter  0xc689,0xcc
  40f55f:	imul   esp,esi,0xd50e7133
  40f565:	inc    ebx
  40f566:	repz inc edx
  40f568:	jo     0x40f510
  40f56a:	mov    edi,0x9043d772
  40f56f:	fistp  DWORD PTR [ebx+0x41]
  40f572:	icebp  
  40f573:	sbb    bl,BYTE PTR [edi+0x2eee5dfe]
  40f579:	mov    dh,0x12
  40f57b:	loope  0x40f564
  40f57d:	dec    edx
  40f57e:	xchg   esp,eax
  40f57f:	jp     0x40f534
  40f581:	mov    DWORD PTR [esi-0x1c],ebp
  40f584:	enter  0xf3b5,0x83
  40f588:	aam    0xc7
  40f58a:	ror    BYTE PTR [edi-0x47],cl
  40f58d:	mov    edi,0x7b9e1a49
  40f592:	dec    ebx
  40f593:	adc    DWORD PTR ds:0x80dcf1a4,ebp
  40f599:	mov    ecx,0xa4e97333
  40f59e:	ss into 
  40f5a0:	mov    ebp,0x40c20fcf
  40f5a5:	fcomp  QWORD PTR [edi-0x79320470]
  40f5ab:	mov    ds:0xc5bfdb03,eax
  40f5b0:	push   cs
  40f5b1:	xor    BYTE PTR [edi-0x34b04db5],ah
  40f5b7:	ins    DWORD PTR es:[edi],dx
  40f5b8:	pop    ecx
  40f5b9:	fs dec ebp
  40f5bb:	sbb    DWORD PTR [ebp-0x11],ecx
  40f5be:	neg    DWORD PTR [eax]
  40f5c0:	ins    DWORD PTR es:[edi],dx
  40f5c1:	jmp    0x7756:0x2a00f43e
  40f5c8:	jne    0x40f57d
  40f5ca:	test   eax,0xee2874fc
  40f5cf:	mov    bh,0xd
  40f5d1:	xor    BYTE PTR ds:0xeb9fa510,cl
  40f5d7:	xor    DWORD PTR [ecx+eiz*1],esp
  40f5da:	add    ebp,DWORD PTR [edx-0x7b]
  40f5dd:	cmp    al,0x55
  40f5df:	inc    edi
  40f5e0:	mov    bh,0xfa
  40f5e2:	outs   dx,DWORD PTR ds:[esi]
  40f5e3:	and    DWORD PTR [edx+0x47],edx
  40f5e6:	les    edx,FWORD PTR [edi]
  40f5e8:	(bad)  
  40f5ea:	xor    edi,esi
  40f5ec:	jnp    0x40f63f
  40f5ee:	and    eax,0x9b4a230a
  40f5f3:	add    cl,BYTE PTR [ebx+0x60e201c5]
  40f5f9:	xor    BYTE PTR [esi-0x3a57312],dh
  40f5ff:	rol    BYTE PTR [esi],cl
  40f601:	bound  esi,QWORD PTR [esi+0xb]
  40f604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f605:	enter  0xa0ce,0xbd
  40f609:	fsub   st(1),st
  40f60b:	xchg   edx,eax
  40f60c:	cmp    al,0xe
  40f60e:	push   es
  40f60f:	fidiv  WORD PTR ss:[esi]
  40f612:	test   BYTE PTR [ebx-0x2eb18de5],cl
  40f618:	cmp    eax,0x14db139f
  40f61d:	in     eax,0xb8
  40f61f:	xchg   edx,eax
  40f620:	out    dx,al
  40f621:	lock mov bl,0x7c
  40f624:	add    dh,BYTE PTR [ecx+0x4e]
  40f627:	(bad)
  40f62a:	inc    edx
  40f62b:	push   ebp
  40f62c:	dec    eax
  40f62d:	fincstp 
  40f62f:	cmp    BYTE PTR [esi-0x42],bh
  40f632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f633:	(bad)  
  40f634:	fimul  DWORD PTR [ebp-0x71]
  40f637:	sti    
  40f638:	dec    eax
  40f639:	fcomp  QWORD PTR [eax+0x3b86f197]
  40f63f:	call   0xb4d781ee
  40f644:	in     al,0xfa
  40f646:	cmc    
  40f647:	push   esi
  40f648:	out    dx,eax
  40f649:	mov    bh,0x3d
  40f64b:	aas    
  40f64c:	cmp    eax,0xadb340b7
  40f651:	(bad)  
  40f652:	test   al,0x28
  40f654:	ins    DWORD PTR es:[edi],dx
  40f655:	or     BYTE PTR [edi+ebx*2],0x46
  40f659:	aam    0xae
  40f65b:	daa    
  40f65c:	jge    0x40f692
  40f65e:	mov    dh,0xdb
  40f660:	imul   ebx,edx,0x960ad0c0
  40f666:	aam    0xab
  40f668:	cld    
  40f669:	dec    ecx
  40f66a:	shl    DWORD PTR [edx+0x38],1
  40f66d:	(bad)  
  40f66e:	sbb    al,BYTE PTR [ebp-0x4f]
  40f671:	scas   eax,DWORD PTR es:[edi]
  40f672:	xchg   edi,eax
  40f673:	test   DWORD PTR [ebx+0x27e094c],esi
  40f679:	js     0x40f677
  40f67b:	inc    edi
  40f67c:	and    edx,DWORD PTR [edi]
  40f67e:	adc    al,0xbe
  40f680:	inc    ebx
  40f681:	sub    DWORD PTR [edi],esi
  40f683:	clc    
  40f684:	sbb    eax,0x57847767
  40f689:	xchg   ecx,ecx
  40f68b:	gs push edi
  40f68d:	inc    esi
  40f68e:	aam    0x89
  40f690:	in     eax,0x72
  40f692:	cmp    edi,eax
  40f694:	inc    ecx
  40f695:	mov    al,0xb4
  40f697:	mov    bl,0xa5
  40f699:	out    0x0,eax
  40f69b:	div    DWORD PTR [esi]
  40f69d:	xor    edi,ebx
  40f69f:	add    DWORD PTR [eax-0x6ab99e12],esi
  40f6a5:	push   edx
  40f6a6:	das    
  40f6a7:	or     esi,esp
  40f6a9:	arpl   sp,ax
  40f6ab:	test   DWORD PTR [ecx],eax
  40f6ad:	xchg   esp,eax
  40f6ae:	push   ebp
  40f6af:	bnd ja 0x40f63f
  40f6b2:	dec    esp
  40f6b3:	sub    ah,bl
  40f6b5:	loopne 0x40f6ae
  40f6b7:	sbb    eax,0x16680703
  40f6bc:	cmp    BYTE PTR [edi],dl
  40f6be:	jp     0x40f6f1
  40f6c0:	cs nop
  40f6c2:	add    DWORD PTR [edx*4-0x75f26f9f],ecx
  40f6c9:	xchg   edi,eax
  40f6ca:	ror    BYTE PTR [edx+0x3e3dc6ba],1
  40f6d0:	(bad)  
  40f6d1:	sar    DWORD PTR [eax],1
  40f6d3:	sub    DWORD PTR [ebp-0x46],0xbaa679
  40f6da:	test   eax,0x9a808540
  40f6df:	dec    esp
  40f6e0:	std    
  40f6e1:	mov    bh,BYTE PTR [edx-0x500bd659]
  40f6e7:	jp     0x40f6d3
  40f6e9:	xchg   ebx,eax
  40f6ea:	inc    ebx
  40f6eb:	outs   dx,BYTE PTR ds:[esi]
  40f6ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6ed:	push   cs
  40f6ee:	not    BYTE PTR [eax-0x6]
  40f6f1:	pushf  
  40f6f2:	push   0x13aa16b9
  40f6f7:	push   edx
  40f6f8:	mov    bl,0xa8
  40f6fa:	dec    edi
  40f6fb:	jae    0x40f776
  40f6fd:	shr    DWORD PTR ds:0x62ddfca7,1
  40f703:	and    BYTE PTR [eax+0x2699c385],0xe0
  40f70a:	sti    
  40f70b:	repnz mov bh,0x1b
  40f70e:	sar    DWORD PTR [ebx],1
  40f710:	not    BYTE PTR [eax+0x4e4a2e07]
  40f716:	adc    edi,DWORD PTR [esi-0x44]
  40f719:	dec    ebp
  40f71a:	push   ebx
  40f71b:	cmp    BYTE PTR [edx],bl
  40f71d:	dec    esi
  40f71e:	sbb    al,0xd4
  40f720:	push   esi
  40f721:	jecxz  0x40f6f4
  40f723:	mov    ds,WORD PTR [esp+esi*8-0x2686d21]
  40f72a:	and    DWORD PTR [ebp+0x7a498cb4],ebp
  40f730:	cmp    BYTE PTR [edx+0x5a],0x23
  40f734:	jno    0x40f78e
  40f736:	fisubr WORD PTR [ebp-0x3bb038f5]
  40f73c:	cmc    
  40f73d:	pop    edi
  40f73e:	ins    BYTE PTR es:[edi],dx
  40f73f:	mov    ah,0x3
  40f741:	cmp    dh,BYTE PTR es:[ebx+0x7162babc]
  40f748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f749:	jl     0x40f769
  40f74b:	sbb    bh,cl
  40f74d:	add    eax,0x4a0544b3
  40f752:	sbb    ch,BYTE PTR [ebx]
  40f754:	or     edi,ebx
  40f756:	out    dx,eax
  40f757:	mov    BYTE PTR [esi],dl
  40f759:	gs push 0xffffff8c
  40f75c:	dec    esp
  40f75d:	cmp    ecx,DWORD PTR [ebx]
  40f75f:	inc    esi
  40f760:	dec    edx
  40f761:	aad    0x4d
  40f763:	jl     0x40f768
  40f765:	xchg   edx,eax
  40f766:	mov    ebx,DWORD PTR [esi]
  40f768:	jmp    0x389088c2
  40f76d:	sub    BYTE PTR [eiz*1+0x54887d79],dl
  40f774:	cdq    
  40f775:	jecxz  0x40f7e5
  40f777:	hlt    
  40f778:	jne    0x40f70a
  40f77a:	out    0x76,eax
  40f77c:	cmc    
  40f77d:	jp     0x40f7e1
  40f77f:	stos   BYTE PTR es:[edi],al
  40f780:	inc    ebx
  40f781:	pop    es
  40f782:	jmp    0x40f785
  40f784:	call   0x638f:0xfcc03c
  40f78b:	push   ebp
  40f78c:	push   edx
  40f78d:	xor    eax,0x3f1ee8bd
  40f792:	iret   
  40f793:	sub    BYTE PTR [edi-0x4a],dl
  40f796:	inc    ecx
  40f797:	js     0x40f73c
  40f799:	cmp    BYTE PTR [ebx-0x3f],dl
  40f79c:	cmp    DWORD PTR [ebp+0x5f7e77c0],edx
  40f7a2:	mov    bl,0xaf
  40f7a4:	and    al,0xdf
  40f7a6:	adc    eax,0x512e7c1d
  40f7ab:	cmp    ecx,DWORD PTR [esi]
  40f7ad:	out    0xcc,eax
  40f7af:	adc    eax,0xb9c257d3
  40f7b4:	bound  ecx,QWORD PTR [esi-0x5a5356fa]
  40f7ba:	pop    es
  40f7bb:	xchg   ebx,eax
  40f7bc:	xor    DWORD PTR [edi+0x78ace6e9],esp
  40f7c2:	adc    al,0xb9
  40f7c4:	fst    QWORD PTR [esi+0x5ae845c5]
  40f7ca:	das    
  40f7cb:	rol    DWORD PTR [eax],1
  40f7cd:	daa    
  40f7ce:	cld    
  40f7cf:	jge    0x40f827
  40f7d1:	mov    dl,0x80
  40f7d3:	cmp    dh,al
  40f7d5:	lahf   
  40f7d6:	dec    ecx
  40f7d7:	aam    0x92
  40f7d9:	lods   al,BYTE PTR fs:[esi]
  40f7db:	stos   DWORD PTR es:[edi],eax
  40f7dc:	dec    ecx
  40f7dd:	push   esi
  40f7de:	push   ebp
  40f7df:	mov    eax,ds:0x40d189c7
  40f7e4:	aas    
  40f7e5:	mov    esp,0x54288c77
  40f7ea:	sub    BYTE PTR [ecx],dh
  40f7ec:	shl    DWORD PTR [eax],1
  40f7ee:	outs   dx,BYTE PTR ds:[esi]
  40f7ef:	adc    ebx,ebp
  40f7f1:	pop    esi
  40f7f2:	mov    bl,0xf6
  40f7f4:	ret    
  40f7f5:	stc    
  40f7f6:	or     dl,BYTE PTR [esi+0x5d]
  40f7f9:	je     0x40f7d7
  40f7fb:	adc    DWORD PTR ds:0xfc9fe890,0x6b
  40f802:	sub    ecx,esp
  40f804:	sub    eax,0x8bb573f4
  40f809:	mov    edx,0x19575e7e
  40f80e:	push   ds
  40f80f:	sub    DWORD PTR [edx+edx*8],esi
  40f812:	in     eax,0x3b
  40f814:	ret    
  40f815:	push   ss
  40f816:	xchg   BYTE PTR [eax+ecx*1-0x13ba675b],cl
  40f81d:	jl     0x40f7d3
  40f81f:	outs   dx,DWORD PTR ds:[esi]
  40f820:	mov    WORD PTR [eax],cs
  40f822:	xlat   BYTE PTR ds:[ebx]
  40f823:	adc    cl,BYTE PTR [ebp+0x28]
  40f826:	push   cs
  40f827:	xchg   ecx,eax
  40f828:	inc    ebx
  40f829:	repz add BYTE PTR [edi-0xe3e0786],bl
  40f830:	or     eax,DWORD PTR [ebp-0x443aac50]
  40f836:	scas   eax,DWORD PTR es:[edi]
  40f837:	cld    
  40f838:	mov    ch,0xa4
  40f83a:	inc    DWORD PTR [eax]
  40f83c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f83d:	jle    0x40f7f8
  40f83f:	sbb    DWORD PTR [edi-0x59],edi
  40f842:	add    ebx,DWORD PTR [ecx+0x7d4fa14e]
  40f848:	rcr    DWORD PTR [edi+0x2822c011],1
  40f84e:	mov    bl,ch
  40f850:	je     0x40f7e5
  40f852:	dec    edx
  40f853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f854:	sti    
  40f855:	xor    BYTE PTR [ebp+0x89898e1],dh
  40f85b:	adc    BYTE PTR [eax+0x216a805c],al
  40f861:	jecxz  0x40f842
  40f863:	iret   
  40f864:	aas    
  40f865:	ror    DWORD PTR [ecx-0x5],1
  40f868:	jno    0x40f822
  40f86a:	daa    
  40f86b:	mov    dl,0x61
  40f86d:	loopne 0x40f824
  40f86f:	int3   
  40f870:	jno    0x40f80a
  40f872:	push   ds
  40f873:	clc    
  40f874:	shl    BYTE PTR [eax-0x74374691],1
  40f87a:	dec    esp
  40f87b:	xor    BYTE PTR [ebx+0x640ecd34],cl
  40f881:	xchg   ecx,eax
  40f882:	das    
  40f883:	inc    esi
  40f884:	jmp    0xb293d4f1
  40f889:	adc    ah,BYTE PTR [ecx-0x70]
  40f88c:	aaa    
  40f88d:	aad    0x76
  40f88f:	es pop es
  40f891:	dec    ebp
  40f892:	pop    eax
  40f893:	js     0x40f901
  40f895:	jp     0x40f8a7
  40f897:	cmp    eax,0x5f4186d8
  40f89c:	pop    ss
  40f89d:	jl     0x40f864
  40f89f:	adc    eax,0x4cb63448
  40f8a4:	outs   dx,BYTE PTR ds:[esi]
  40f8a5:	bound  esp,QWORD PTR [esi-0x58]
  40f8a8:	add    ebx,DWORD PTR [ecx]
  40f8aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8ab:	pushf  
  40f8ac:	rol    edi,0xf5
  40f8af:	repz mov eax,ds:0x9f714182
  40f8b5:	inc    edx
  40f8b6:	call   0xe164:0x2f8a012d
  40f8bd:	cmp    BYTE PTR [ebp-0x63],cl
  40f8c0:	dec    ebx
  40f8c1:	push   0x4e6568b0
  40f8c6:	push   eax
  40f8c7:	mov    DWORD PTR [edx-0x2e8896d1],ebp
  40f8cd:	ds in  al,0x3f
  40f8d0:	ja     0x40f858
  40f8d2:	xor    cl,dl
  40f8d4:	stc    
  40f8d5:	hlt    
  40f8d6:	scas   eax,DWORD PTR es:[edi]
  40f8d7:	je     0x40f937
  40f8d9:	jl     0x40f8a6
  40f8db:	cli    
  40f8dc:	sbb    DWORD PTR [esi+0x2f08fd34],esi
  40f8e2:	sbb    BYTE PTR [edx+esi*2-0xf],0x66
  40f8e7:	pop    ecx
  40f8e8:	in     eax,dx
  40f8e9:	int    0xce
  40f8eb:	jnp    0x40f894
  40f8ed:	xor    eax,ecx
  40f8ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8f0:	shr    BYTE PTR [edi-0x24cd9fd2],1
  40f8f6:	xchg   ebp,eax
  40f8f7:	fimul  DWORD PTR [esi-0x79b1790f]
  40f8fd:	inc    edx
  40f8fe:	mov    cl,0xb5
  40f900:	mov    edx,0x21d90d17
  40f905:	into   
  40f906:	stos   DWORD PTR es:[edi],eax
  40f907:	mov    ss,WORD PTR [esi-0x3345ba57]
  40f90d:	out    dx,eax
  40f90e:	push   edx
  40f90f:	ss popa 
  40f911:	inc    DWORD PTR [ecx]
  40f913:	js     0x40f958
  40f915:	mov    al,0x8e
  40f917:	loopne 0x40f904
  40f919:	aad    0xfa
  40f91b:	out    dx,eax
  40f91c:	sub    BYTE PTR [esi],ah
  40f91e:	cmp    al,0xe8
  40f920:	xchg   edi,esp
  40f922:	or     edi,DWORD PTR ds:0x263b200b
  40f928:	pop    esp
  40f929:	jb     0x40f902
  40f92b:	jmp    0x82a3e168
  40f930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f931:	pop    eax
  40f932:	push   ss
  40f933:	dec    ebp
  40f934:	lock lods eax,DWORD PTR ds:[esi]
  40f936:	rol    dl,cl
  40f938:	cmp    eax,DWORD PTR [esi+0x7d]
  40f93b:	xchg   cl,cl
  40f93d:	cmp    al,0xe1
  40f93f:	sbb    DWORD PTR [edx-0x6d],edi
  40f942:	cmp    DWORD PTR [eax*1-0x3df64edf],0x453f24bf
  40f94d:	xchg   esi,eax
  40f94e:	sbb    eax,0xb8e97974
  40f953:	mov    ds:0x30881ec9,eax
  40f958:	sbb    bl,BYTE PTR [esi+0x4a6cb7fb]
  40f95e:	and    ch,ah
  40f960:	or     al,0x4
  40f962:	aad    0x2e
  40f964:	mov    dl,0x32
  40f966:	lods   eax,DWORD PTR ds:[esi]
  40f967:	dec    ebp
  40f968:	xor    bh,cl
  40f96a:	jnp    0x40f964
  40f96c:	pop    es
  40f96d:	jbe    0x40f980
  40f96f:	sub    edi,DWORD PTR [ebp+0x4bb8a6d5]
  40f975:	jle    0x40f9b0
  40f977:	mov    al,0xcd
  40f979:	clc    
  40f97a:	mov    edx,0x7e947f00
  40f97f:	scas   eax,DWORD PTR es:[edi]
  40f980:	(bad)  
  40f982:	mov    ebx,0x33b5017f
  40f987:	mov    DWORD PTR [ecx],edi
  40f989:	mov    ds,eax
  40f98b:	pop    eax
  40f98c:	jb     0x40f994
  40f98e:	(bad)  
  40f98f:	ret    0x1081
  40f992:	sub    BYTE PTR [eax+0x29c033e2],ch
  40f998:	jmp    0x97a4:0xfff1ae16
  40f99f:	bound  edi,QWORD PTR [eax+esi*2-0x7f]
  40f9a3:	jbe    0x40f935
  40f9a5:	in     eax,dx
  40f9a6:	pop    ss
  40f9a7:	jl     0x40f948
  40f9a9:	jns    0x40f937
  40f9ab:	pop    esi
  40f9ac:	xchg   ecx,eax
  40f9ad:	add    eax,0x2957e2a0
  40f9b2:	sub    ebx,edi
  40f9b4:	dec    ebp
  40f9b5:	mov    ds:0xdbcc732c,eax
  40f9ba:	xor    dh,bl
  40f9bc:	jno    0x40f9b4
  40f9be:	sbb    eax,0x9ae8bdea
  40f9c3:	mov    edi,0x59789d30
  40f9c8:	mov    DWORD PTR [esi-0x46],esp
  40f9cb:	xor    al,0x60
  40f9cd:	mov    al,ds:0x63769778
  40f9d2:	pop    edi
  40f9d3:	push   edx
  40f9d4:	loop   0x40f9f8
  40f9d6:	cmc    
  40f9d7:	push   ss
  40f9d8:	jmp    0x40fa3a
  40f9da:	mov    WORD PTR [esi+edx*4+0x78],ss
  40f9de:	pusha  
  40f9df:	in     al,dx
  40f9e0:	dec    edi
  40f9e1:	jmp    0xba083f48
  40f9e6:	inc    ebx
  40f9e7:	data16 or bh,BYTE PTR [edx-0x3d68d66c]
  40f9ee:	in     eax,dx
  40f9ef:	xor    BYTE PTR [ecx],al
  40f9f1:	shl    esp,cl
  40f9f3:	pop    ebx
  40f9f4:	jge    0x40fa70
  40f9f6:	test   DWORD PTR [edi+0x4e],ebx
  40f9f9:	cmp    bh,BYTE PTR [ecx+0x42]
  40f9fc:	es dec ebp
  40f9fe:	ds icebp 
  40fa00:	xchg   DWORD PTR [edi+edi*1+0x7d],ecx
  40fa04:	inc    esp
  40fa05:	dec    edx
  40fa06:	mov    eax,0xacbb075a
  40fa0b:	push   0xb87eae9e
  40fa10:	mov    esp,esi
  40fa12:	xchg   edi,eax
  40fa13:	popa   
  40fa14:	push   esp
  40fa15:	xor    DWORD PTR [esi],esi
  40fa17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa18:	add    DWORD PTR [esp+edi*1],eax
  40fa1b:	inc    esi
  40fa1c:	mov    bl,0x4b
  40fa1e:	or     esp,ebx
  40fa20:	push   cs
  40fa21:	adc    BYTE PTR [ebp-0x7ed9f770],0xe8
  40fa28:	sbb    edx,DWORD PTR [ebx-0x23]
  40fa2b:	pop    ebp
  40fa2c:	cmp    bl,BYTE PTR [edi+esi*1+0x4c]
  40fa30:	lods   eax,DWORD PTR ds:[esi]
  40fa31:	rcr    dh,1
  40fa33:	jmp    0xd029:0xbfabbe48
  40fa3a:	int3   
  40fa3b:	in     eax,dx
  40fa3c:	push   es
  40fa3d:	loop   0x40f9dc
  40fa3f:	shr    BYTE PTR [eax],1
  40fa41:	xchg   ch,ch
  40fa43:	fnstsw WORD PTR [edx+eax*1+0x5c]
  40fa47:	pop    DWORD PTR [ebx+0x7b]
  40fa4a:	std    
  40fa4b:	lea    ecx,[esi+eiz*8+0x4055649d]
  40fa52:	xor    al,cl
  40fa54:	push   es
  40fa55:	retf   0xf3a9
  40fa58:	ja     0x40fa93
  40fa5a:	imul   ebp,DWORD PTR [edx-0x1f],0x30
  40fa5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa5f:	(bad)  
  40fa60:	(bad)  
  40fa62:	mov    ebx,DWORD PTR [ebp-0x58]
  40fa65:	dec    edi
  40fa66:	aam    0x62
  40fa68:	test   BYTE PTR [ebx-0x1fcb8fe5],dh
  40fa6e:	sbb    DWORD PTR [ebp+0x3c],0xf8722bb6
  40fa75:	jp     0x40fa06
  40fa77:	push   edx
  40fa78:	imul   ebp,DWORD PTR [eax],0xffffff8d
  40fa7b:	cwde   
  40fa7c:	push   ebp
  40fa7d:	lods   eax,DWORD PTR ds:[esi]
  40fa7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa7f:	retf   
  40fa80:	xor    dl,BYTE PTR [ebx+0x2d]
  40fa83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa84:	retf   0x3172
  40fa87:	push   ebx
  40fa88:	and    BYTE PTR [esi+0x1cfdf97],cl
  40fa8e:	inc    esp
  40fa8f:	jecxz  0x40fa7d
  40fa91:	dec    esi
  40fa92:	cmp    eax,0xa9c4752d
  40fa97:	in     eax,0x25
  40fa99:	push   edi
  40fa9a:	popf   
  40fa9b:	mov    ah,0x73
  40fa9d:	push   DWORD PTR [eax-0x1e3a2e09]
  40faa3:	ins    BYTE PTR es:[edi],dx
  40faa4:	push   0xffffff8a
  40faa6:	cmp    DWORD PTR [edx+0x1f3c56e],eax
  40faac:	nop
  40faad:	cmc    
  40faae:	arpl   bx,ax
  40fab0:	in     eax,0xd7
  40fab2:	lods   al,BYTE PTR ds:[esi]
  40fab3:	jne    0x40fa54
  40fab5:	inc    edx
  40fab6:	jp     0x40faa8
  40fab8:	mov    DWORD PTR [edx+ecx*4],esi
  40fabb:	push   cs
  40fabc:	push   eax
  40fabd:	outs   dx,BYTE PTR ds:[esi]
  40fabe:	int3   
  40fabf:	ja     0x40fa8d
  40fac1:	outs   dx,DWORD PTR ds:[esi]
  40fac2:	fsubr  QWORD PTR [ecx-0x690831b1]
  40fac8:	hlt    
  40fac9:	sbb    BYTE PTR [eax],bl
  40facb:	nop
  40facc:	shl    BYTE PTR [edi+edi*1+0xeb78013],0xf8
  40fad4:	inc    esi
  40fad5:	push   es
  40fad6:	mov    ebp,0xc7088984
  40fadb:	pop    ecx
  40fadc:	fimul  WORD PTR ds:0xcb593dc6
  40fae2:	scas   al,BYTE PTR es:[edi]
  40fae3:	popf   
  40fae4:	xor    ebp,DWORD PTR [ecx-0x66]
  40fae7:	loop   0x40faeb
  40fae9:	bound  esp,QWORD PTR [eax+0x2c]
  40faec:	jns    0x40faf9
  40faee:	and    eax,0x62d6ee0a
  40faf3:	pop    ss
  40faf4:	jecxz  0x40fb44
  40faf6:	sti    
  40faf7:	ficom  WORD PTR [ebp-0x7bfa3a29]
  40fafd:	cmp    eax,0xcdd293ce
  40fb02:	pop    ss
  40fb03:	xor    DWORD PTR [ebx-0x69],ecx
  40fb06:	gs cmp ah,cl
  40fb09:	cwde   
  40fb0a:	cmp    eax,0xedd2d581
  40fb0f:	mov    ebx,0x94899d88
  40fb14:	dec    edx
  40fb15:	jne    0x40fb72
  40fb17:	mov    al,ds:0x4660649c
  40fb1c:	adc    bh,0x30
  40fb1f:	mov    DWORD PTR [ecx],esp
  40fb21:	sub    DWORD PTR [eax-0x17eac5ec],0xcf5aee9c
  40fb2b:	dec    ebp
  40fb2c:	rcr    DWORD PTR [ebx+0x5540c820],0x8b
  40fb33:	mov    eax,0x51792a5a
  40fb38:	mov    ebx,0x6c35860c
  40fb3d:	inc    eax
  40fb3e:	std    
  40fb3f:	cmp    al,0x5b
  40fb41:	stc    
  40fb42:	adc    ebp,ecx
  40fb44:	pop    esi
  40fb45:	pop    ecx
  40fb46:	(bad)  
  40fb47:	stc    
  40fb48:	outs   dx,BYTE PTR ds:[esi]
  40fb49:	call   0xcfdaa99d
  40fb4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb4f:	mov    ds,WORD PTR [esp+eiz*8]
  40fb52:	aas    
  40fb53:	cmp    eax,DWORD PTR [ebp+0x6bd4159d]
  40fb59:	lahf   
  40fb5a:	and    BYTE PTR [ecx],0x61
  40fb5d:	jl     0x40fbde
  40fb5f:	loope  0x40fbd0
  40fb61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb62:	pop    edi
  40fb63:	inc    esi
  40fb64:	sbb    esi,ebx
  40fb66:	loop   0x40fb0b
  40fb68:	push   esi
  40fb69:	mov    ecx,0x798c1e51
  40fb6e:	sbb    DWORD PTR [eax],esi
  40fb70:	mov    bh,0x37
  40fb72:	bound  ebp,QWORD PTR ds:[ecx+esi*4+0xa]
  40fb77:	test   al,0x13
  40fb79:	push   esp
  40fb7a:	shr    DWORD PTR [eax-0x7d6d2548],cl
  40fb80:	in     eax,0xdc
  40fb82:	dec    ebx
  40fb83:	es xchg esp,eax
  40fb85:	fistp  WORD PTR [ebp-0x60f63190]
  40fb8b:	retf   
  40fb8c:	sub    eax,0x4b09b013
  40fb91:	jne    0x40fba0
  40fb93:	arpl   WORD PTR [esi-0x14],ax
  40fb96:	outs   dx,BYTE PTR ds:[esi]
  40fb97:	xor    BYTE PTR [edx-0x3d],al
  40fb9a:	add    DWORD PTR [ebx+ebx*2+0x20d038de],ecx
  40fba1:	lods   al,BYTE PTR ds:[esi]
  40fba2:	push   es
  40fba3:	ins    BYTE PTR es:[edi],dx
  40fba4:	push   ecx
  40fba5:	push   ebx
  40fba6:	sbb    al,0x17
  40fba8:	dec    esi
  40fba9:	ins    BYTE PTR es:[edi],dx
  40fbaa:	gs inc edx
  40fbac:	pshufw mm7,QWORD PTR [edx-0x5754bf91],0x2b
  40fbb4:	xor    dh,0xee
  40fbb7:	pop    ecx
  40fbb8:	mov    DWORD PTR [esi],ebx
  40fbba:	push   ds
  40fbbb:	(bad)  
  40fbbd:	or     DWORD PTR [esi],ebx
  40fbbf:	sbb    dh,BYTE PTR [edx+0x151950e]
  40fbc5:	adc    esp,ecx
  40fbc7:	push   esp
  40fbc8:	jmp    0x7147b59a
  40fbcd:	sbb    dh,BYTE PTR [esi+ebp*2]
  40fbd0:	cmp    BYTE PTR ss:[esi-0x3a],dh
  40fbd4:	shl    DWORD PTR [ecx],0xa1
  40fbd7:	push   es
  40fbd8:	sti    
  40fbd9:	pop    esi
  40fbda:	mov    ebp,0xfa2d8cd6
  40fbdf:	xor    eax,0x40616a56
  40fbe4:	stc    
  40fbe5:	int3   
  40fbe6:	adc    BYTE PTR [ebp+0x3b],al
  40fbe9:	mov    bl,0xa
  40fbeb:	fnstenv [ebp+0x7467d5a8]
  40fbf1:	xchg   ebp,eax
  40fbf2:	jb     0x40fc5b
  40fbf4:	popa   
  40fbf5:	mov    bh,0x44
  40fbf7:	test   al,0x45
  40fbf9:	push   DWORD PTR [eax]
  40fbfb:	out    0xd3,eax
  40fbfd:	imul   esi,DWORD PTR [edi+0x76],0x50
  40fc01:	adc    ah,BYTE PTR [ecx]
  40fc03:	jbe    0x40fbb2
  40fc05:	sub    esp,esp
  40fc07:	jl     0x40fbef
  40fc09:	cmc    
  40fc0a:	xchg   ebp,eax
  40fc0b:	mov    bl,0xec
  40fc0d:	out    0xef,eax
  40fc0f:	hlt    
  40fc10:	add    BYTE PTR [ecx-0x42f6fad7],ch
  40fc16:	and    eax,DWORD PTR [edi+0x13]
  40fc19:	call   0xaf737751
  40fc1e:	dec    ebp
  40fc1f:	mov    ch,0x38
  40fc21:	mov    BYTE PTR cs:[ebx-0x4f5dab34],bl
  40fc28:	mov    edx,0xdcda2f38
  40fc2d:	jge    0x40fc57
  40fc2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc30:	rol    ebx,0xb3
  40fc33:	icebp  
  40fc34:	xchg   ecx,edx
  40fc36:	fidivr DWORD PTR [ebp+0x72be3b3c]
  40fc3c:	outs   dx,BYTE PTR ds:[esi]
  40fc3d:	push   edi
  40fc3e:	pop    edx
  40fc3f:	pushf  
  40fc40:	les    edx,FWORD PTR [edx+0x5c]
  40fc43:	add    al,BYTE PTR [ecx+0x7f]
  40fc46:	dec    eax
  40fc47:	outs   dx,BYTE PTR ds:[esi]
  40fc48:	dec    ebx
  40fc49:	mov    cl,0x2b
  40fc4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc4c:	jmp    0x40fbf0
  40fc4e:	ja     0x40fc44
  40fc50:	mov    edx,0xb41c1ae2
  40fc55:	jno    0x40fc28
  40fc57:	push   esp
  40fc58:	lods   eax,DWORD PTR ds:[esi]
  40fc59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc5a:	retf   0x35a6
  40fc5d:	mov    cs,WORD PTR ds:[ebp-0x73e2c05]
  40fc64:	repz xchg ebx,eax
  40fc66:	jbe    0x40fc53
  40fc68:	mov    ds:0xba19b32a,al
  40fc6d:	int3   
  40fc6e:	repnz test cl,ah
  40fc71:	or     eax,0xca0f8747
  40fc76:	mov    cl,0xb9
  40fc78:	mov    al,0xb4
  40fc7a:	push   ecx
  40fc7b:	rcl    BYTE PTR [eax-0x58],0x60
  40fc7f:	xchg   ebp,eax
  40fc80:	xor    dh,0x43
  40fc83:	out    dx,eax
  40fc84:	inc    ebp
  40fc85:	sti    
  40fc86:	inc    eax
  40fc87:	stos   BYTE PTR es:[edi],al
  40fc88:	std    
  40fc89:	and    esi,edi
  40fc8b:	dec    eax
  40fc8c:	shr    BYTE PTR [eax+0x6dc52bd5],cl
  40fc92:	hlt    
  40fc93:	inc    esp
  40fc94:	inc    ebx
  40fc95:	mov    ebp,DWORD PTR [esi+0x114d33cc]
  40fc9b:	addr16 adc ch,ch
  40fc9e:	pop    esp
  40fc9f:	xor    eax,0x130d012a
  40fca4:	cmp    al,0x56
  40fca6:	cmc    
  40fca7:	push   esp
  40fca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fca9:	nop
  40fcaa:	mov    dl,0xf4
  40fcac:	sbb    ebp,DWORD PTR [eax+edx*4-0x79]
  40fcb0:	std    
  40fcb1:	dec    ebx
  40fcb2:	inc    esp
  40fcb3:	(bad)  
  40fcb4:	or     eax,0xddc62a27
  40fcb9:	ret    
  40fcba:	mov    DWORD PTR [edx],eax
  40fcbc:	cmp    DWORD PTR [edi-0x6b],edi
  40fcbf:	neg    DWORD PTR [ebx-0x48]
  40fcc2:	xor    ebx,DWORD PTR [edx+0x7f]
  40fcc5:	xor    bl,BYTE PTR [ebx-0x21976343]
  40fccb:	pusha  
  40fccc:	clc    
  40fccd:	inc    eax
  40fcce:	test   DWORD PTR [edi],ebp
  40fcd0:	das    
  40fcd1:	dec    edi
  40fcd2:	fcom   QWORD PTR [eax]
  40fcd4:	(bad)  
  40fcd6:	xor    dl,dh
  40fcd8:	sbb    dl,BYTE PTR [esi-0x1b]
  40fcdb:	inc    ebx
  40fcdc:	mov    ds:0x76e6de56,eax
  40fce1:	sbb    bl,BYTE PTR [eax+0x258f297d]
  40fce7:	mov    edx,0x45234409
  40fcec:	stos   BYTE PTR es:[edi],al
  40fced:	xlat   BYTE PTR ds:[ebx]
  40fcee:	mov    ch,0x58
  40fcf0:	adc    eax,0x8c649b51
  40fcf5:	test   al,0xa2
  40fcf7:	repz or dh,al
  40fcfa:	xlat   BYTE PTR ds:[ebx]
  40fcfb:	adc    eax,0x8ca45762
  40fd00:	inc    edx
  40fd01:	pop    ebx
  40fd02:	ds adc edi,edx
  40fd05:	daa    
  40fd06:	fmul   DWORD PTR [eax]
  40fd08:	pop    ds
  40fd09:	jl     0x40fd7d
  40fd0b:	xchg   ecx,eax
  40fd0c:	ret    0x5447
  40fd0f:	jp     0x40fccc
  40fd11:	scas   eax,DWORD PTR es:[edi]
  40fd12:	test   al,0x94
  40fd14:	push   ebx
  40fd15:	pusha  
  40fd16:	gs jge 0x40fd41
  40fd19:	lock cwde 
  40fd1b:	fbstp  TBYTE PTR [ebx+eax*1]
  40fd1e:	fwait
  40fd1f:	mov    cl,0x4c
  40fd21:	jle    0x40fd98
  40fd23:	fiadd  WORD PTR [esi-0x12]
  40fd26:	add    eax,0x86e0efbb
  40fd2b:	(bad)  
  40fd2c:	retf   
  40fd2d:	loop   0x40fdaa
  40fd2f:	sbb    eax,0x847b4cf5
  40fd34:	aam    0xa5
  40fd36:	add    BYTE PTR [ecx-0x77],al
  40fd39:	lods   eax,DWORD PTR ds:[esi]
  40fd3a:	adc    edx,DWORD PTR [eax]
  40fd3c:	xlat   BYTE PTR ds:[ebx]
  40fd3d:	jo     0x40fd36
  40fd3f:	dec    ebx
  40fd40:	out    0x9f,eax
  40fd42:	cmp    BYTE PTR ds:0xf8d74ecb,dl
  40fd48:	mov    ecx,0x7515df16
  40fd4d:	loope  0x40fdaf
  40fd4f:	fmul   QWORD PTR [ecx+0x4557c702]
  40fd55:	rol    BYTE PTR [esi],0x51
  40fd58:	imul   esp,esi,0x19
  40fd5b:	jp     0x40fdb5
  40fd5d:	cmp    cl,BYTE PTR [ecx-0xd]
  40fd60:	imul   edi,DWORD PTR [ebx+esi*2],0x3c
  40fd64:	scas   al,BYTE PTR es:[di]
  40fd66:	xor    eax,0x6b7843ad
  40fd6b:	std    
  40fd6c:	jns    0x40fdde
  40fd6e:	idiv   BYTE PTR [edx-0x1bb42c5c]
  40fd74:	push   ss
  40fd75:	out    0x5e,al
  40fd77:	dec    ecx
  40fd78:	pop    ebx
  40fd79:	push   0xffffffc9
  40fd7b:	cmp    al,0x45
  40fd7d:	add    edx,DWORD PTR [esi]
  40fd7f:	(bad)  
  40fd80:	iret   
  40fd81:	inc    esp
  40fd82:	cli    
  40fd83:	rol    DWORD PTR [ebp-0x2],0x18
  40fd87:	iret   
  40fd88:	test   al,0x18
  40fd8a:	test   eax,0x60ddcddf
  40fd8f:	rcr    BYTE PTR [ebx],cl
  40fd91:	ret    0x188e
  40fd94:	adc    DWORD PTR [edi-0x11b9106d],ecx
  40fd9a:	inc    esi
  40fd9b:	mov    esp,0x33ad5407
  40fda0:	sbb    BYTE PTR [esi-0xfff9607],0xf3
  40fda7:	jne    0x40fd5d
  40fda9:	inc    eax
  40fdaa:	sar    DWORD PTR [ecx+0x2d],1
  40fdad:	adc    BYTE PTR [edx],bl
  40fdaf:	inc    ecx
  40fdb0:	jnp    0x40fdae
  40fdb2:	outs   dx,BYTE PTR ds:[esi]
  40fdb3:	jmp    DWORD PTR [edi]
  40fdb5:	xchg   ebp,eax
  40fdb6:	xor    bh,BYTE PTR [edx+0x57]
  40fdb9:	jns    0x40fd65
  40fdbb:	pop    ebp
  40fdbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdbd:	xor    ebx,DWORD PTR [esi+eax*4]
  40fdc0:	adc    eax,DWORD PTR [eax+esi*2-0x75a8649d]
  40fdc7:	es rcr edx,0xf3
  40fdcb:	fidivr DWORD PTR [ebp*1-0x259f863a]
  40fdd2:	out    dx,al
  40fdd3:	sub    ch,al
  40fdd5:	sub    esp,DWORD PTR [ebp-0x3f]
  40fdd8:	xor    ch,BYTE PTR [esi+ebx*2+0x14]
  40fddc:	jp     0x40fe4f
  40fdde:	adc    BYTE PTR [ecx],cl
  40fde0:	jae    0x40fdc9
  40fde2:	dec    ebx
  40fde3:	xor    DWORD PTR ds:0x845f2b5f,edx
  40fde9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdea:	js     0x40fdf4
  40fdec:	inc    eax
  40fded:	or     edi,esp
  40fdef:	(bad)  
  40fdf1:	cmp    eax,0xff2a93b7
  40fdf6:	fild   WORD PTR [ebx-0x68]
  40fdf9:	push   ds
  40fdfa:	fsubr  DWORD PTR [eax+0x65fdf68b]
  40fe00:	cld    
  40fe01:	rol    DWORD PTR [ecx],cl
  40fe03:	sub    ebp,0x4a
  40fe06:	add    BYTE PTR [ecx+0x6b295800],0x4a
  40fe0d:	sbb    ah,bh
  40fe0f:	hlt    
  40fe10:	in     eax,0x73
  40fe12:	outs   dx,DWORD PTR ds:[esi]
  40fe13:	stos   BYTE PTR es:[edi],al
  40fe14:	scas   al,BYTE PTR es:[edi]
  40fe15:	xor    al,0xa3
  40fe17:	xor    eax,0x4a177beb
  40fe1c:	mov    ecx,0xfecb1e48
  40fe21:	adc    eax,DWORD PTR [ecx-0x40]
  40fe24:	(bad)  
  40fe26:	sub    esp,DWORD PTR [eax]
  40fe28:	imul   esi,esi,0x3
  40fe2b:	xlat   BYTE PTR ds:[ebx]
  40fe2c:	neg    DWORD PTR [ecx]
  40fe2e:	in     eax,dx
  40fe2f:	sub    eax,0x1a9fb0a6
  40fe34:	and    eax,0x23047dda
  40fe39:	in     al,dx
  40fe3a:	(bad)
  40fe3d:	pop    ss
  40fe3e:	cmp    bh,ch
  40fe40:	add    DWORD PTR [esi+0x49],eax
  40fe43:	mov    cl,0xe0
  40fe45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe46:	test   BYTE PTR [ebp+0x66],al
  40fe49:	stc    
  40fe4a:	mov    ds:0x1a69cc18,eax
  40fe4f:	push   ds
  40fe50:	scas   eax,DWORD PTR es:[edi]
  40fe51:	ja     0x40fe34
  40fe53:	nop
  40fe54:	scas   eax,DWORD PTR es:[edi]
  40fe55:	and    dl,bh
  40fe57:	jl     0x40fe69
  40fe59:	ja     0x40fea6
  40fe5b:	test   BYTE PTR [eax+ebx*8],ah
  40fe5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe5f:	scas   eax,DWORD PTR es:[edi]
  40fe60:	mov    ch,0x0
  40fe62:	or     WORD PTR [eax-0x5e67a15c],sp
  40fe69:	push   ebx
  40fe6a:	(bad)  ds:0x1caa17cc
  40fe70:	mov    bl,0xa2
  40fe72:	gs sbb ecx,esp
  40fe75:	xchg   edi,eax
  40fe76:	int    0x50
  40fe78:	fild   WORD PTR [ecx-0xd]
  40fe7b:	inc    ebx
  40fe7c:	aad    0xa0
  40fe7e:	stos   BYTE PTR es:[edi],al
  40fe7f:	inc    ebx
  40fe80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe81:	xor    ebx,DWORD PTR ds:0xf3db64d7
  40fe87:	ins    BYTE PTR es:[edi],dx
  40fe88:	ret    
  40fe89:	sub    al,0xbb
  40fe8b:	mov    ah,0x8a
  40fe8d:	mov    al,0x8a
  40fe8f:	shr    BYTE PTR [eiz*4-0x5ca95523],cl
  40fe96:	mov    al,0xed
  40fe99:	out    0xc0,al
  40fe9b:	inc    edi
  40fe9c:	mov    al,0xeb
  40fe9e:	or     al,0x57
  40fea0:	jae    0x40feb5
  40fea2:	sar    BYTE PTR ds:0x48ca931e,1
  40fea8:	or     edi,DWORD PTR [eax]
  40feaa:	mov    dh,BYTE PTR ds:0x8ad097b1
  40feb0:	fwait
  40feb1:	fwait
  40feb2:	rol    BYTE PTR [edx+esi*8+0x7d],0x23
  40feb7:	fdiv   QWORD PTR [esi-0x6bddf5]
  40febd:	int    0xaa
  40febf:	inc    ebx
  40fec0:	fiadd  WORD PTR [ebx+0x78]
  40fec3:	pop    ecx
  40fec4:	dec    bp
  40fec6:	cmp    bl,BYTE PTR ds:0x969474d9
  40fecc:	stos   DWORD PTR es:[edi],eax
  40fecd:	dec    edx
  40fece:	xor    ecx,DWORD PTR [esp+ebx*4-0x57b80691]
  40fed5:	inc    ebp
  40fed6:	mov    DWORD PTR [ebp+0xfd2ccb2],ebx
  40fedc:	mov    al,ds:0x1c60c1b6
  40fee1:	pop    edx
  40fee2:	push   0x128acc42
  40fee7:	sub    ebp,DWORD PTR [edi-0x4118dda0]
  40feed:	pushf  
  40feee:	pop    eax
  40feef:	das    
  40fef0:	push   DWORD PTR ds:0x22f401d6
  40fef6:	cli    
  40fef7:	dec    eax
  40fef8:	add    DWORD PTR [ecx+eax*1+0x512b961e],0xffffffb8
  40ff00:	cmp    cl,BYTE PTR [ecx+0x3a8da4ff]
  40ff06:	fwait
  40ff07:	or     al,0xaf
  40ff09:	in     eax,0x61
  40ff0b:	or     eax,0x561e80f
  40ff10:	scas   al,BYTE PTR es:[edi]
  40ff11:	into   
  40ff12:	ja     0x40fe98
  40ff14:	jge    0x40fed5
  40ff16:	enter  0xc1ab,0x72
  40ff1a:	mov    dl,0x60
  40ff1c:	lock ins BYTE PTR es:[edi],dx
  40ff1e:	(bad)  
  40ff1f:	xchg   esp,eax
  40ff20:	cmp    eax,0x258f8ab9
  40ff25:	mov    dh,0xfa
  40ff27:	and    ebx,DWORD PTR [ebp+ebx*8-0x69097964]
  40ff2e:	dec    ebp
  40ff2f:	adc    eax,0xeb1d6923
  40ff34:	cmp    BYTE PTR [eax],ah
  40ff36:	std    
  40ff37:	mov    ebp,0xf9e980ac
  40ff3c:	pop    eax
  40ff3d:	aam    0x91
  40ff3f:	jmp    0x3b840c3e
  40ff44:	aas    
  40ff45:	sub    dl,BYTE PTR [edi-0x4b]
  40ff48:	xor    eax,DWORD PTR [ecx]
  40ff4a:	cmp    DWORD PTR [edi],esp
  40ff4c:	mov    edx,0xb800c53c
  40ff51:	dec    ebp
  40ff52:	retf   0x88d8
  40ff55:	ja     0x40ff4a
  40ff57:	(bad)  
  40ff58:	(bad)  
  40ff59:	mov    al,ds:0x4160bec3
  40ff5e:	les    eax,FWORD PTR [eax+edi*2+0x31fad099]
  40ff65:	imul   DWORD PTR [ebp-0x49]
  40ff68:	je     0x40ffb1
  40ff6a:	add    eax,0x3a3152a3
  40ff6f:	xchg   edi,eax
  40ff70:	pop    eax
  40ff71:	push   eax
  40ff72:	xlat   BYTE PTR ds:[ebx]
  40ff73:	sub    eax,0x5b2fc4f8
  40ff78:	sub    BYTE PTR [esi-0x8],ch
  40ff7b:	aad    0x7d
  40ff7d:	jmp    0x57b9ad7a
  40ff82:	fwait
  40ff83:	or     esp,DWORD PTR [edi+0x55891a07]
  40ff89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff8a:	ficomp WORD PTR [edx+ebx*4+0x5d420401]
  40ff91:	mov    al,BYTE PTR [ebx]
  40ff93:	inc    edi
  40ff94:	add    eax,0x5ebde51d
  40ff99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff9a:	xor    BYTE PTR [edi],cl
  40ff9c:	adc    eax,DWORD PTR [eax-0x1373848]
  40ffa2:	inc    edx
  40ffa3:	das    
  40ffa4:	mov    bl,0xfd
  40ffa6:	cmp    BYTE PTR [eax+esi*4-0x6d],dl
  40ffaa:	gs or  cl,cl
  40ffad:	(bad)  
  40ffae:	(bad)  
  40ffb0:	mov    ecx,0xac81ed3a
  40ffb5:	push   edi
  40ffb6:	aam    0x19
  40ffb8:	mov    edi,0xf48218ac
  40ffbd:	jge    0x40ffbe
  40ffbf:	ret    
  40ffc0:	push   esi
  40ffc1:	inc    esi
  40ffc2:	call   0xd0b6:0x71c66d76
  40ffc9:	dec    edx
  40ffca:	jmp    DWORD PTR [edx]
  40ffcc:	dec    edx
  40ffcd:	cmp    esp,DWORD PTR [eax]
  40ffcf:	or     esi,DWORD PTR [ebp+0x78]
  40ffd2:	mov    dl,BYTE PTR [edx]
  40ffd4:	fcom   QWORD PTR [edi+ecx*4+0x9]
  40ffd8:	xor    eax,0xb2abade9
  40ffdd:	imul   edx,eax,0x788513ff
  40ffe3:	popa   
  40ffe4:	dec    DWORD PTR [ebx]
  40ffe6:	xchg   edi,eax
  40ffe7:	mov    ds:0x42932e07,al
  40ffec:	jle    0x40ffe3
  40ffee:	repz or esi,DWORD PTR [ebx]
  40fff1:	pop    ebx
  40fff2:	enter  0x5627,0xc4
  40fff6:	sub    al,BYTE PTR [eax-0x25155477]
  40fffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fffe:	adc    ecx,esi
  410000:	lods   al,BYTE PTR ds:[esi]
  410001:	dec    esi
  410002:	xor    BYTE PTR [eax+0x21a8062c],bh
  410008:	mov    esi,0xb1261f76
  41000d:	out    dx,eax
  41000e:	pop    eax
  41000f:	xchg   edx,eax
  410010:	outs   dx,DWORD PTR ds:[esi]
  410011:	add    ah,BYTE PTR [edx+eiz*8]
  410014:	retf   0xd909
  410017:	xor    eax,0x808ac221
  41001c:	jnp    0x410067
  41001e:	out    dx,eax
  41001f:	or     ecx,DWORD PTR [esi+0x27221ea]
  410025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410026:	bound  ebp,QWORD PTR [esi-0x1cbddb8f]
  41002c:	sahf   
  41002d:	dec    eax
  41002e:	sti    
  41002f:	std    
  410030:	(bad)  
  410031:	into   
  410032:	xchg   BYTE PTR [edi+0x1fad4dda],bl
  410038:	ss add al,0xd4
  41003b:	mov    al,0x12
  41003d:	loop   0x410077
  41003f:	daa    
  410040:	in     al,0xa4
  410042:	mov    bl,0x38
  410044:	arpl   WORD PTR [eax-0x33dc7fc9],bp
  41004a:	sar    BYTE PTR [edi],0xc8
  41004d:	sub    DWORD PTR [ecx+0x47],edi
  410050:	dec    esp
  410051:	sti    
  410052:	xor    edi,DWORD PTR [edi+edx*2]
  410055:	inc    edx
  410056:	popf   
  410057:	pusha  
  410058:	push   esi
  410059:	loop   0x40ffdf
  41005b:	cld    
  41005c:	and    dl,cl
  41005e:	ins    DWORD PTR es:[edi],dx
  41005f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410060:	mov    ecx,0x51ea3a8d
  410065:	fst    QWORD PTR [ebp+esi*4+0x6f]
  410069:	jecxz  0x4100bc
  41006b:	push   eax
  41006c:	or     DWORD PTR [edi-0x3d06375c],0xffffff9c
  410073:	adc    al,0x72
  410075:	mov    dl,0x3b
  410077:	push   ebx
  410078:	mov    dh,BYTE PTR ss:[ebp+0x3fe3f184]
  41007f:	in     eax,0x95
  410081:	js     0x41008b
  410083:	into   
  410084:	xchg   DWORD PTR [ebx+eiz*4-0x136f00c7],esi
  41008b:	ffree  st(3)
  41008d:	repnz inc ebp
  41008f:	dec    ebp
  410090:	jmp    0xe7f88576
  410095:	ret    0x5c19
  410098:	arpl   WORD PTR [edi],di
  41009a:	pop    esi
  41009b:	in     al,0xdb
  41009d:	pop    ss
  41009e:	push   eax
  41009f:	xor    BYTE PTR [esi],bh
  4100a1:	idiv   BYTE PTR [edx]
  4100a3:	push   ecx
  4100a4:	dec    ebp
  4100a5:	mov    ds:0xcca37e6c,eax
  4100aa:	fmul   st(0),st
  4100ac:	ret    
  4100ad:	adc    BYTE PTR [ecx-0xd3470b],dl
  4100b3:	dec    eax
  4100b4:	mov    ecx,0x3d22a589
  4100b9:	aad    0x33
  4100bb:	bound  eax,QWORD PTR [esi-0x30]
  4100be:	call   0xea83:0x7adaee19
  4100c5:	js     0x4100ac
  4100c7:	stc    
  4100c8:	fcmovnb st,st(4)
  4100ca:	pusha  
  4100cb:	push   es
  4100cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100cd:	and    edx,esp
  4100cf:	stos   DWORD PTR es:[edi],eax
  4100d0:	ret    
  4100d1:	daa    
  4100d2:	adc    BYTE PTR [edi+esi*2-0x542ef6a3],al
  4100d9:	mov    cl,0x97
  4100db:	adc    ebp,DWORD PTR [edx-0x64]
  4100de:	int    0xb7
  4100e0:	mov    ds:0x5ae0c5f,eax
  4100e5:	test   esp,edx
  4100e7:	adc    ch,BYTE PTR [ebp-0x47]
  4100ea:	inc    edi
  4100eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100ec:	cmp    eax,0x19a78055
  4100f1:	jecxz  0x41012b
  4100f3:	add    edx,DWORD PTR [esi]
  4100f5:	mov    ch,0xcb
  4100f7:	add    BYTE PTR [esi-0x4b16b381],al
  4100fd:	outs   dx,DWORD PTR es:[esi]
  4100ff:	icebp  
  410100:	push   edi
  410101:	sbb    cl,BYTE PTR [edx]
  410103:	cmp    eax,0xd4313e58
  410108:	std    
  410109:	ins    DWORD PTR es:[edi],dx
  41010a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41010b:	test   al,0x66
  41010d:	mov    dl,0xc1
  41010f:	add    ch,BYTE PTR [eax+0x97bdfe1]
  410115:	dec    ebx
  410116:	test   DWORD PTR [edi-0x61],ecx
  410119:	fisubr DWORD PTR [edi+0x3ada9cbc]
  41011f:	xacquire xchg BYTE PTR [ecx-0x6d8d8430],dl
  410126:	cwde   
  410127:	mov    edi,0x55837f43
  41012c:	dec    ecx
  41012d:	fucom  st(6)
  41012f:	ss aas 
  410131:	push   cs
  410132:	adc    al,0x3a
  410134:	add    BYTE PTR [ebp-0x3c],ch
  410137:	(bad)  
  410138:	call   0xa2ae976e
  41013d:	sub    BYTE PTR [eax-0x4e],bl
  410140:	rcr    BYTE PTR [esi],cl
  410142:	dec    ebx
  410143:	xlat   BYTE PTR ds:[ebx]
  410144:	adc    al,ch
  410146:	xor    al,0xd1
  410148:	aaa    
  410149:	inc    edi
  41014a:	clc    
  41014b:	xchg   ebx,eax
  41014c:	push   esi
  41014d:	test   DWORD PTR ds:[ecx],ebp
  410150:	int3   
  410151:	lar    ebp,cx
  410154:	pop    esi
  410155:	jns    0x41018b
  410157:	popf   
  410158:	fwait
  410159:	pop    ebp
  41015a:	mov    eax,ds:0x552efd02
  41015f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410160:	jbe    0x4100e4
  410162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410163:	add    dl,dl
  410165:	jno    0x4101a3
  410167:	jne    0x410186
  410169:	inc    esp
  41016a:	inc    edi
  41016b:	mov    WORD PTR [ecx+0x28],ds
  41016e:	xchg   ecx,eax
  41016f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410171:	cmp    DWORD PTR [edi+0x2f],esp
  410174:	adc    ah,BYTE PTR [eax+0x7c]
  410177:	push   es
  410178:	(bad)  
  410179:	add    ebp,DWORD PTR [ebp+0x8]
  41017c:	and    bh,cl
  41017e:	cwde   
  41017f:	jmp    0xddcf:0xaab17e00
  410186:	mov    esp,0xa0e1cd89
  41018b:	inc    ebx
  41018c:	(bad)  [eax-0x78491417]
  410192:	mov    al,ds:0xb3b1b418
  410197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410198:	dec    esp
  410199:	or     ebp,DWORD PTR [edi-0x3aed781d]
  41019f:	test   al,0x68
  4101a1:	or     bl,dh
  4101a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101a4:	push   ds
  4101a5:	lods   al,BYTE PTR ds:[esi]
  4101a6:	and    ch,BYTE PTR [esi]
  4101a8:	jp     0x410190
  4101aa:	and    dh,ah
  4101ac:	sub    al,0xb8
  4101ae:	mov    esp,DWORD PTR [eax+0x3d]
  4101b1:	mov    eax,ds:0x66978308
  4101b6:	call   0x73069c57
  4101bb:	ss daa 
  4101bd:	imul   ecx,DWORD PTR [eax-0x11],0x31
  4101c1:	lahf   
  4101c2:	adc    DWORD PTR [edi+ebx*4+0x46354c1b],esp
  4101c9:	(bad)  
  4101ca:	lods   eax,DWORD PTR ds:[esi]
  4101cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101cc:	test   bl,al
  4101ce:	das    
  4101cf:	jge    0x410213
  4101d1:	test   al,0xf4
  4101d3:	cs push edx
  4101d5:	scas   al,BYTE PTR es:[edi]
  4101d6:	in     al,dx
  4101d7:	jae    0x4101f8
  4101d9:	ss or  esi,edi
  4101dc:	xchg   esi,eax
  4101dd:	das    
  4101de:	adc    ch,ch
  4101e0:	inc    esi
  4101e1:	sahf   
  4101e2:	cmp    eax,0xc0c8c4bb
  4101e7:	loopne 0x4101e5
  4101e9:	add    BYTE PTR [eax],cl
  4101eb:	test   al,0x93
  4101ed:	inc    esi
  4101ee:	mov    DWORD PTR [edx-0x3],esp
  4101f1:	or     BYTE PTR [ebx],0xec
  4101f4:	xor    BYTE PTR [esi+0x4c],ah
  4101f7:	and    al,0x94
  4101f9:	inc    esp
  4101fa:	cs out dx,al
  4101fc:	mov    ebx,0x34972217
  410201:	loopne 0x4101f7
  410203:	xchg   dl,cl
  410205:	mov    bh,0x4b
  410207:	mov    ds:0x6724ea4f,eax
  41020c:	xor    dl,BYTE PTR ds:0x1bb767f2
  410212:	in     eax,dx
  410213:	dec    ebp
  410214:	jp     0x410229
  410216:	lods   al,BYTE PTR ds:[esi]
  410217:	ins    DWORD PTR es:[edi],dx
  410218:	jne    0x410202
  41021a:	xchg   ebx,esp
  41021c:	dec    edx
  41021d:	sub    eax,0x55e8ce3c
  410222:	bound  ebp,QWORD PTR [eax]
  410224:	jnp    0x410246
  410226:	test   eax,0x4cca517e
  41022b:	lds    edi,FWORD PTR [edi+0x74]
  41022e:	push   ebx
  41022f:	mov    dh,0x3d
  410231:	ins    DWORD PTR es:[edi],dx
  410232:	sbb    ebp,DWORD PTR [ebp+ebp*4+0x6b4c16fe]
  410239:	stos   BYTE PTR es:[edi],al
  41023a:	mov    esi,0x663b0412
  41023f:	shl    esi,1
  410241:	dec    esp
  410242:	mov    bl,BYTE PTR [edx-0x283a075a]
  410248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410249:	push   eax
  41024a:	cmp    DWORD PTR [esi+0x53],esi
  41024d:	pop    edi
  41024e:	xlat   BYTE PTR ds:[ebx]
  41024f:	das    
  410250:	push   ecx
  410251:	sbb    ebp,esi
  410253:	pop    ss
  410254:	sahf   
  410255:	(bad)  
  410256:	test   cl,dl
  410258:	popa   
  410259:	out    0xe,al
  41025b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41025c:	int3   
  41025d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41025e:	sbb    eax,0xec0a0c68
  410263:	bound  esp,QWORD PTR [ebx]
  410265:	call   0xb3e795cc
  41026a:	rcr    DWORD PTR [esi-0x67364fc5],0x75
  410271:	inc    esp
  410272:	iret   
  410273:	inc    ecx
  410274:	mov    edi,ebx
  410276:	mov    ebp,0x6671a186
  41027b:	cmp    ch,BYTE PTR [edi]
  41027d:	dec    ebp
  41027e:	neg    DWORD PTR [ecx]
  410280:	lock imul eax,DWORD PTR [ecx+0x13],0x76
  410285:	stos   DWORD PTR es:[edi],eax
  410286:	cld    
  410287:	push   esi
  410288:	jno    0x41023c
  41028a:	ins    BYTE PTR es:[edi],dx
  41028b:	or     BYTE PTR [edi+0x5a],al
  41028e:	mov    dh,0x57
  410290:	cmp    al,0x83
  410292:	dec    ecx
  410293:	lods   al,BYTE PTR ds:[esi]
  410295:	addr16 jae 0x410277
  410298:	cs (bad) 
  41029a:	fdivr  QWORD PTR gs:[esp+ebp*8]
  41029e:	mov    ds:0x14d0aa43,eax
  4102a3:	mov    ds:0x84ac9967,eax
  4102a8:	sbb    DWORD PTR [edi+0x27],0x93f3ee14
  4102af:	inc    ebp
  4102b0:	cmp    BYTE PTR [ebx+0x146faf91],ah
  4102b6:	(bad)  
  4102b7:	out    dx,eax
  4102b8:	cli    
  4102b9:	jp     0x4102fa
  4102bb:	mov    eax,0x270ea3a1
  4102c0:	pop    ds
  4102c1:	rcl    BYTE PTR [ecx+ebp*4],0x28
  4102c5:	(bad)  
  4102c6:	rcr    DWORD PTR [esi],1
  4102c8:	addr16 dec esi
  4102ca:	inc    edx
  4102cb:	pop    edi
  4102cc:	rcr    DWORD PTR cs:[eax-0x681d0451],cl
  4102d3:	cmp    BYTE PTR [edx+0x5122a3a4],dh
  4102d9:	or     DWORD PTR [edx],edx
  4102db:	dec    esp
  4102dc:	mov    es:0x92aff9f0,eax
  4102e2:	sbb    DWORD PTR [esi-0x1f],edi
  4102e5:	je     0x4102e1
  4102e7:	dec    ebp
  4102e8:	aad    0xac
  4102ea:	scas   eax,DWORD PTR es:[edi]
  4102eb:	and    esp,edx
  4102ed:	sub    BYTE PTR [eax+0x6],dl
  4102f0:	(bad)  ds:0x3e4d4424
  4102f6:	xor    BYTE PTR [ebx+0x1744fb6b],al
  4102fc:	add    al,0xd3
  4102fe:	mov    WORD PTR [edi+0x1a],?
  410301:	jnp    0x410333
  410303:	(bad)  
  410304:	stc    
  410305:	or     eax,0x740d0589
  41030a:	sar    DWORD PTR [eax+0x10eb95d2],cl
  410310:	and    al,0x38
  410312:	les    ecx,FWORD PTR [ebx+edi*4+0x422f5ff6]
  410319:	das    
  41031a:	push   ecx
  41031b:	shl    BYTE PTR [esi-0x49],0xb3
  41031f:	push   esp
  410320:	mov    edi,0x677a523e
  410325:	mov    esp,0xfbe85b17
  41032a:	les    edi,FWORD PTR [ebx+0x4d2a9819]
  410330:	sbb    edi,DWORD PTR [edi+0x4b9cba0d]
  410336:	shl    dl,cl
  410338:	mov    ss,WORD PTR [ebx-0x76e87606]
  41033e:	inc    edx
  41033f:	ret    
  410340:	call   0x7186:0xd14c3acc
  410347:	(bad)  
  410348:	mov    ecx,0xc8cc2090
  41034d:	imul   ebp,DWORD PTR [edx+esi*4],0xffffffb8
  410351:	sbb    esp,edi
  410353:	sbb    al,0x6b
  410355:	pop    ds
  410356:	fsubr  DWORD PTR [eax]
  410358:	jge    0x410356
  41035a:	fwait
  41035b:	in     al,dx
  41035c:	xchg   esp,eax
  41035d:	sbb    DWORD PTR ds:0x2e6f7869,ebx
  410363:	mov    ebx,0xf45c5a27
  410368:	pop    esi
  410369:	inc    esi
  41036a:	stos   DWORD PTR es:[edi],eax
  41036b:	mov    ds:0x5aa6b2ca,al
  410370:	cmp    bl,al
  410372:	sahf   
  410373:	cmc    
  410374:	sar    bh,0xad
  410377:	mov    ds:0xc0ede1bf,al
  41037c:	ja     0x4103e7
  41037e:	arpl   WORD PTR [ebx-0x1f],di
  410381:	push   eax
  410382:	ret    0x8d28
  410385:	dec    ebp
  410386:	lds    esi,FWORD PTR [esp+eiz*4]
  410389:	retfw  0x75af
  41038d:	das    
  41038e:	or     DWORD PTR [ebp+0x53],0xa2983edc
  410395:	outs   dx,DWORD PTR ds:[esi]
  410396:	jns    0x4103b8
  410398:	je     0x4103f2
  41039a:	lahf   
  41039b:	cdq    
  41039c:	pop    ecx
  41039d:	jmp    0xa5cd:0x83ab36ed
  4103a4:	sbb    cl,dl
  4103a6:	xchg   esp,eax
  4103a7:	push   0x5e
  4103a9:	call   0x3557:0xf3070873
  4103b0:	xchg   BYTE PTR [ebx+0x7579824d],al
  4103b6:	jae    0x4103b8
  4103b8:	imul   edi,DWORD PTR [ebx+0x2e],0xffffffca
  4103bc:	(bad)  
  4103bd:	out    dx,al
  4103be:	dec    esi
  4103bf:	retf   
  4103c0:	xchg   edx,eax
  4103c1:	inc    ecx
  4103c2:	or     ebp,edx
  4103c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103c5:	xor    eax,0x5c70cbfb
  4103ca:	(bad)  
  4103cb:	cdq    
  4103cc:	mov    ds:0x5b9261f7,al
  4103d1:	shl    BYTE PTR [ebp-0x7fb72f01],1
  4103d7:	dec    edi
  4103d8:	lahf   
  4103d9:	inc    eax
  4103da:	or     eax,0x7a54d541
  4103df:	(bad)  
  4103e1:	or     bl,BYTE PTR [esp+ecx*1+0xd]
  4103e5:	cmp    eax,0xc64d2730
  4103ea:	test   eax,0xfa922c8d
  4103ef:	lock scas eax,DWORD PTR es:[edi]
  4103f1:	fnstsw WORD PTR [ebx]
  4103f3:	dec    ecx
  4103f4:	ficomp DWORD PTR [edx+0x33]
  4103f7:	test   ecx,edx
  4103f9:	hlt    
  4103fa:	(bad)  
  4103fc:	mov    dh,0xff
  4103fe:	icebp  
  4103ff:	xchg   DWORD PTR [eax],ebx
  410401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410402:	aad    0xa
  410404:	in     al,dx
  410405:	pop    ss
  410406:	or     ebx,ebx
  410408:	pop    esp
  410409:	pop    ds
  41040a:	aam    0xb1
  41040c:	jle    0x4103db
  41040e:	(bad)  [eax+0x639c7276]
  410414:	outs   dx,DWORD PTR ds:[esi]
  410415:	arpl   WORD PTR [ebp-0x38],bp
  410418:	dec    edi
  410419:	leave  
  41041a:	xchg   edi,esi
  41041c:	icebp  
  41041d:	mov    dh,dl
  41041f:	adc    al,0x77
  410421:	shl    edi,1
  410423:	pusha  
  410424:	dec    edx
  410425:	sbb    eax,0x6b1898e
  41042a:	inc    esi
  41042b:	or     BYTE PTR [ecx],0x6c
  41042e:	inc    ecx
  41042f:	sub    esi,DWORD PTR [edi+edi*8-0x36]
  410433:	mov    esp,0xf88f6570
  410438:	ret    
  410439:	jb     0x41043f
  41043b:	popf   
  41043c:	pop    ss
  41043d:	or     eax,0xa77c716
  410442:	mov    ch,0xb
  410444:	add    eax,0xaaa839e7
  410449:	cmp    bl,BYTE PTR [ecx-0x15]
  41044c:	sub    cl,cl
  41044e:	fld    TBYTE PTR [edi]
  410450:	jns    0x41040e
  410452:	dec    ax
  410454:	dec    esi
  410455:	xchg   ecx,eax
  410456:	sar    BYTE PTR [eax+0x5],1
  410459:	or     ebp,ecx
  41045b:	test   eax,0xb78d85a4
  410460:	xchg   edi,eax
  410461:	cs jbe 0x41046d
  410464:	retf   
  410465:	mov    eax,ds:0x5d37d08a
  41046a:	dec    BYTE PTR [edx-0x370659b7]
  410470:	push   0x14ee411f
  410475:	cld    
  410476:	pop    ecx
  410477:	lods   eax,DWORD PTR ds:[esi]
  410478:	and    DWORD PTR [eax+0x7dee08e5],esi
  41047e:	leave  
  41047f:	add    DWORD PTR [esi],0x44
  410482:	fsub   DWORD PTR [ecx+0x6c]
  410485:	int    0x3d
  410487:	daa    
  410488:	outs   dx,BYTE PTR ds:[esi]
  410489:	lods   eax,DWORD PTR ds:[esi]
  41048a:	sti    
  41048b:	push   es
  41048c:	mov    esi,DWORD PTR [edi]
  41048e:	sbb    al,0xce
  410490:	jmp    0x7701bdb
  410495:	inc    ebx
  410496:	mov    esp,0x6cbbfc08
  41049b:	adc    ch,BYTE PTR [edx]
  41049d:	xor    ebx,DWORD PTR [ebx+0x3a037a07]
  4104a3:	pop    esi
  4104a4:	push   edi
  4104a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104a6:	ins    DWORD PTR es:[edi],dx
  4104a7:	ficomp WORD PTR ds:0xfccf049
  4104ad:	stos   DWORD PTR es:[edi],eax
  4104ae:	aad    0xe8
  4104b0:	push   0xfffffff4
  4104b2:	mov    edi,0xcfde9ae9
  4104b7:	fcom   DWORD PTR [edi+0x744ca12e]
  4104bd:	pop    edx
  4104be:	scas   al,BYTE PTR es:[di]
  4104c0:	adc    DWORD PTR [esi+0x55],0x5d
  4104c4:	add    BYTE PTR [eax-0x550b0eff],dl
  4104ca:	adc    bh,BYTE PTR [edx+0x4f]
  4104cd:	xchg   edi,eax
  4104ce:	add    eax,0x80a03d15
  4104d3:	daa    
  4104d4:	mov    bl,dh
  4104d6:	mov    cl,0xc1
  4104d8:	frstor [edx+0x20c91e15]
  4104de:	cwde   
  4104df:	aaa    
  4104e0:	sti    
  4104e1:	fild   QWORD PTR [edi-0x2642d7d1]
  4104e7:	and    ch,bl
  4104e9:	mov    esi,0x671fd8c1
  4104ee:	loope  0x4104a7
  4104f0:	mov    edx,0x5ad7ff59
  4104f5:	cwde   
  4104f6:	mov    ecx,0x946ff2f7
  4104fb:	cli    
  4104fc:	retf   0xc360
  4104ff:	mov    ah,0x36
  410501:	xor    DWORD PTR [ebx-0x366e8f19],ebp
  410507:	fsub   DWORD PTR [esp+ebp*2-0x8]
  41050b:	mov    al,ds:0x20317759
  410510:	mov    eax,ss
  410512:	es push esi
  410514:	push   esi
  410515:	and    ebx,DWORD PTR [edx+edx*1]
  410518:	sahf   
  410519:	in     eax,dx
  41051a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41051b:	stos   BYTE PTR es:[edi],al
  41051c:	not    BYTE PTR [edi+0xc1cb884]
  410522:	or     ch,BYTE PTR [ebp+0x7d9dce24]
  410528:	adc    DWORD PTR [esi-0x5465fe54],eax
  41052e:	ja     0x410500
  410530:	sbb    eax,ebp
  410532:	xchg   edx,eax
  410533:	(bad)  
  410534:	cmp    bl,bl
  410536:	mov    gs,WORD PTR [ecx-0x7f]
  410539:	push   ss
  41053a:	add    esi,esp
  41053c:	adc    DWORD PTR [ecx+0x4a],edi
  41053f:	sbb    ch,dh
  410541:	fst    DWORD PTR [edi+0x7f]
  410544:	inc    eax
  410545:	adc    BYTE PTR ds:0x43e2c3b2,ch
  41054b:	shl    BYTE PTR ds:0x4b011d28,cl
  410551:	cs ret 
  410553:	(bad)  
  410554:	cmp    BYTE PTR [edx+edi*4],dl
  410557:	icebp  
  410558:	sub    eax,0xf84289d9
  41055d:	int    0x1f
  41055f:	sbb    eax,0xc16e24bc
  410564:	dec    esi
  410565:	push   ebp
  410566:	and    dl,BYTE PTR [ecx+0x3202e769]
  41056c:	out    0x9e,al
  41056e:	jbe    0x4104fc
  410570:	jns    0x410590
  410572:	lahf   
  410573:	aam    0x0
  410575:	push   0x4a89ac29
  41057a:	daa    
  41057b:	and    dl,BYTE PTR [esi]
  41057d:	sbb    BYTE PTR [edx-0x1d],bl
  410580:	loop   0x410568
  410582:	std    
  410583:	push   ebp
  410584:	xlat   BYTE PTR ds:[ebx]
  410585:	int    0xca
  410587:	sbb    al,0x10
  410589:	mov    ds:0xbe98f2d2,eax
  41058e:	shl    BYTE PTR [ebx+0x7e],1
  410591:	sub    esp,DWORD PTR [ebx+0x6]
  410594:	int    0x86
  410596:	xchg   ecx,eax
  410597:	cmp    BYTE PTR [esi+0x66],dh
  41059a:	pop    ss
  41059b:	xor    eax,0xd64d08e1
  4105a0:	call   0x5c647cd2
  4105a5:	add    eax,0xac82f20
  4105aa:	xor    BYTE PTR [edx+0x6612488a],al
  4105b0:	imul   esi,eax,0xffffff87
  4105b3:	push   esp
  4105b4:	pop    esi
  4105b5:	fistp  DWORD PTR [edx]
  4105b7:	xor    dl,al
  4105b9:	in     al,dx
  4105ba:	inc    ecx
  4105bb:	stc    
  4105bc:	popa   
  4105bd:	jns    0x4105dc
  4105bf:	out    dx,eax
  4105c0:	leave  
  4105c1:	sub    dh,BYTE PTR [eax+0x12459262]
  4105c7:	xchg   bh,cl
  4105c9:	popf   
  4105ca:	aas    
  4105cb:	dec    esp
  4105cc:	pop    edx
  4105cd:	test   DWORD PTR [ebp-0x2a],edi
  4105d0:	les    ecx,FWORD PTR [ebp-0x14604292]
  4105d6:	out    dx,eax
  4105d7:	and    ebx,DWORD PTR [esi-0x30a51c44]
  4105dd:	add    DWORD PTR [ecx+0x9],edi
  4105e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105e1:	push   esi
  4105e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105e3:	fnstsw WORD PTR [ebp+0xba56705]
  4105e9:	mov    bl,0x2a
  4105eb:	rcr    BYTE PTR [eax-0x6e60d174],1
  4105f1:	outs   dx,BYTE PTR ds:[esi]
  4105f2:	mov    edi,0x5be9a45
  4105f7:	fistp  WORD PTR [esi]
  4105f9:	int3   
  4105fa:	mov    eax,0xa5362b38
  4105ff:	adc    ebx,esi
  410601:	dec    ecx
  410602:	cmp    BYTE PTR [edi-0x7e9a07e8],0xf
  410609:	je     0x410625
  41060b:	pop    ds
  41060c:	jnp    0x4105b5
  41060e:	push   0x1be3500
  410613:	rcr    ebx,0xb0
  410616:	sbb    ah,0xb
  410619:	cdq    
  41061a:	push   cs
  41061b:	(bad)  
  41061c:	jmp    0x20218f70
  410621:	lock out 0xcf,al
  410624:	xor    eax,0x835eb9b7
  410629:	cmp    esi,ebp
  41062b:	xor    DWORD PTR [ebx+0x22],edx
  41062e:	aad    0xec
  410630:	out    dx,eax
  410631:	jp     0x4105e7
  410633:	adc    BYTE PTR [edx+0x3825848a],dl
  410639:	mov    ecx,0x223d6939
  41063e:	in     eax,dx
  41063f:	enter  0xd081,0x7e
  410643:	and    BYTE PTR [eax],dl
  410645:	sar    cl,0x51
  410648:	aaa    
  410649:	sbb    al,0x30
  41064b:	retf   0xbc53
  41064e:	test   ebx,0xe5eac9b5
  410654:	dec    edx
  410655:	xor    ebp,0x8470dc16
  41065b:	leave  
  41065c:	jle    0x410676
  41065e:	mov    DWORD PTR [ebp+0x2ac24333],eax
  410664:	out    dx,al
  410665:	jp     0x410613
  410667:	sub    edi,DWORD PTR [ecx+ebp*4]
  41066a:	or     eax,0x72f71300
  41066f:	into   
  410670:	popa   
  410671:	dec    sp
  410673:	arpl   WORD PTR [ebx],bp
  410675:	xor    eax,0x2c2a6d30
  41067a:	rcr    dl,0x7e
  41067d:	test   eax,0x4491f758
  410682:	cmp    al,0x5c
  410684:	mov    ecx,DWORD PTR [edx-0x69b1a6d]
  41068a:	ds retf 0xe09d
  41068e:	jb     0x41067f
  410690:	mov    cl,0xcd
  410692:	inc    ebp
  410693:	dec    ecx
  410694:	popf   
  410695:	jae    0x41069e
  410697:	inc    edx
  410698:	xchg   edx,eax
  410699:	dec    esi
  41069a:	mov    DWORD PTR [esi+0x40],ecx
  41069d:	mov    eax,es:0x12369c72
  4106a3:	lds    ecx,FWORD PTR ds:0x8b381287
  4106a9:	pop    es
  4106aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106ab:	pop    ecx
  4106ac:	inc    eax
  4106ad:	pushf  
  4106ae:	or     edx,DWORD PTR [edi-0x3e]
  4106b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106b2:	punpckhwd mm1,QWORD PTR [esi]
  4106b5:	pop    ebp
  4106b6:	push   es
  4106b7:	adc    ebx,DWORD PTR [edi+0x39]
  4106ba:	sbb    ebp,DWORD PTR [esi-0x62e8c77]
  4106c0:	jge    0x4106dd
  4106c2:	daa    
  4106c3:	fs loope 0x410695
  4106c6:	lods   al,BYTE PTR ds:[esi]
  4106c7:	xchg   ebp,eax
  4106c8:	cmc    
  4106c9:	mov    dl,0xc1
  4106cb:	xor    DWORD PTR [ecx],ebp
  4106cd:	jns    0x4106d4
  4106cf:	cmp    DWORD PTR [eax+0x4ebe882a],esi
  4106d5:	out    0x2d,eax
  4106d7:	repz xor al,dh
  4106da:	clc    
  4106db:	and    DWORD PTR [edi+0x6e7f5478],0xeea3bd5e
  4106e5:	mov    ecx,0xfa107b49
  4106ea:	pop    esi
  4106eb:	sbb    al,0x8d
  4106ed:	retf   
  4106ee:	outs   dx,BYTE PTR ds:[esi]
  4106ef:	imul   esi,DWORD PTR [ebx+0x68],0x7f
  4106f3:	daa    
  4106f4:	lahf   
  4106f5:	enter  0x94a4,0x9d
  4106f9:	rcr    DWORD PTR [eax],cl
  4106fb:	outs   dx,BYTE PTR ds:[esi]
  4106fc:	gs clc 
  4106fe:	and    BYTE PTR [edx+0x1],cl
  410701:	push   cs
  410702:	test   bh,cl
  410704:	push   esi
  410705:	fcmovnu st,st(0)
  410707:	test   eax,0x8389301c
  41070c:	ds xor eax,0x32962f6
  410712:	loope  0x4106bf
  410714:	into   
  410715:	lds    ecx,FWORD PTR [edi]
  410717:	cmp    edi,esp
  410719:	(bad)  
  41071b:	push   esp
  41071c:	adc    BYTE PTR [ecx+0x7b],al
  41071f:	fidiv  WORD PTR [ebx]
  410721:	int    0x66
  410723:	retf   
  410724:	xor    BYTE PTR [esi],bh
  410726:	mov    eax,0x3c84b21f
  41072b:	std    
  41072c:	imul   esi,DWORD PTR [eax+0x62],0x30de0a2e
  410733:	sub    al,0xc
  410735:	dec    ecx
  410736:	rcr    DWORD PTR [ebx],0xc1
  410739:	sub    DWORD PTR [ebx+0x29],0x47
  41073d:	push   es
  41073e:	repnz mov bl,BYTE PTR [edx+0x9]
  410742:	lods   eax,DWORD PTR ds:[esi]
  410743:	cmp    edi,esi
  410745:	jns    0x410713
  410747:	leave  
  410748:	cld    
  410749:	push   0xf7b7faec
  41074e:	xchg   esp,eax
  41074f:	inc    ebp
  410750:	loop   0x41075c
  410752:	jb     0x4107c9
  410754:	retf   
  410755:	in     al,0x8e
  410757:	adc    edx,0xffffff9e
  41075a:	cmp    eax,0x6893dc45
  41075f:	lods   eax,DWORD PTR ds:[esi]
  410760:	mov    dh,0x2c
  410762:	pop    ecx
  410763:	push   esp
  410764:	mov    WORD PTR [edx-0x1e],?
  410767:	jno    0x4107da
  410769:	adc    al,0xbc
  41076b:	inc    ebp
  41076c:	xor    BYTE PTR [esi],0x22
  41076f:	outs   dx,DWORD PTR ds:[esi]
  410770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410771:	fdivr  DWORD PTR [eax+0x30fbc254]
  410777:	ss push edx
  410779:	fcomp  DWORD PTR [ebp+0x48017fee]
  41077f:	jmp    0xb825b8a8
  410784:	push   esi
  410785:	xor    al,0x90
  410787:	out    0xd5,eax
  410789:	mov    bl,0xce
  41078b:	push   ss
  41078c:	and    eax,0xf7f4fb86
  410791:	fldln2 
  410793:	jle    0x4107c8
  410795:	pop    es
  410796:	mov    DWORD PTR [edi-0xb],ecx
  410799:	xor    eax,0x4f6bda7f
  41079e:	adc    cl,BYTE PTR [esi-0x3697e6d8]
  4107a4:	int3   
  4107a5:	mov    ebp,0x843b4621
  4107aa:	inc    edi
  4107ab:	test   DWORD PTR [esi],ebx
  4107ad:	addr16 pop edx
  4107af:	enter  0xa94f,0x24
  4107b3:	mov    ah,0x39
  4107b5:	jmp    0x4860:0x8d16ce29
  4107bc:	jne    0x41074b
  4107be:	sbb    cl,BYTE PTR [ecx-0xa]
  4107c1:	ja     0x41083c
  4107c3:	xor    DWORD PTR [esi+0x3f6b198c],edi
  4107c9:	inc    edx
  4107ca:	mov    ebp,0x55b79364
  4107cf:	and    edx,DWORD PTR [esp+ebx*1+0x43]
  4107d3:	sbb    eax,0x391d124f
  4107d8:	call   0x4ce8a14a
  4107dd:	jmp    0x41077c
  4107df:	ins    DWORD PTR es:[edi],dx
  4107e0:	xchg   ecx,eax
  4107e1:	fistp  WORD PTR [esi+edx*4]
  4107e4:	enter  0xe167,0xe4
  4107e8:	xor    DWORD PTR [ebx-0x4dba6411],eax
  4107ee:	(bad)  
  4107ef:	mov    eax,ds:0x300021de
  4107f4:	cmp    DWORD PTR [ecx],0x7b0ec3c8
  4107fa:	jb     0x4107ca
  4107fc:	fwait
  4107fd:	cmp    DWORD PTR [ebp+0x3d036c6c],ebp
  410803:	push   ebx
  410804:	ins    BYTE PTR es:[edi],dx
  410805:	sub    ch,bh
  410807:	test   edx,ebp
  410809:	loope  0x4107c8
  41080b:	jno    0x410834
  41080d:	mov    eax,ds:0xdd1679e2
  410812:	xor    BYTE PTR [ebx],ah
  410814:	aas    
  410815:	dec    esi
  410816:	out    dx,al
  410817:	loop   0x410804
  410819:	test   al,0xf5
  41081b:	aad    0xd7
  41081d:	in     al,0xf6
  41081f:	(bad)  
  410820:	in     al,dx
  410821:	sub    edx,DWORD PTR [eax+0x40]
  410824:	inc    edi
  410825:	test   eax,0x99694d02
  41082a:	les    ecx,FWORD PTR [edi+0x23d0af08]
  410830:	push   esp
  410831:	mov    al,ds:0xa8204fbe
  410836:	cmp    dh,BYTE PTR [ebx]
  410838:	sub    edx,DWORD PTR [eax-0x2e]
  41083b:	push   cs
  41083c:	cmp    ecx,eax
  41083e:	popf   
  41083f:	xchg   esi,eax
  410840:	enter  0x4e8d,0xe
  410844:	push   ebp
  410845:	imul   ebp,esp,0x69
  410848:	out    dx,al
  410849:	clc    
  41084a:	icebp  
  41084b:	pop    ds
  41084c:	mov    ah,0xd6
  41084e:	or     al,0x70
  410850:	(bad)  
  410851:	dec    edx
  410852:	mov    ds:0x9acbd73b,eax
  410857:	and    eax,0xbdb07a6d
  41085c:	push   esp
  41085d:	fbstp  TBYTE PTR [ebp-0x4b]
  410860:	jg     0x410899
  410862:	lods   eax,DWORD PTR ds:[esi]
  410863:	arpl   WORD PTR [ecx+ebp*8-0x26dad38],bp
  41086a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41086b:	push   esi
  41086c:	mov    ebp,0x1d038dce
  410871:	xor    eax,0x11822a76
  410876:	std    
  410877:	loop   0x410816
  410879:	retf   0xe9ff
  41087c:	sbb    al,0x80
  41087e:	push   edi
  41087f:	sub    eax,0x52e186fa
  410884:	in     al,dx
  410885:	sub    BYTE PTR [ebx-0x2ee0dc86],0xe1
  41088c:	jecxz  0x410844
  41088e:	inc    edx
  41088f:	fnsave [ebp+0x48]
  410892:	addr16 push ds
  410894:	loop   0x410841
  410896:	cmp    al,0x33
  410898:	inc    ecx
  410899:	rcl    bh,0x2a
  41089c:	sbb    al,al
  41089e:	mov    cl,0x9d
  4108a0:	(bad)  
  4108a1:	mov    bl,0xff
  4108a3:	fbstp  TBYTE PTR [edx+esi*2-0x40db7a01]
  4108aa:	cmp    al,0x43
  4108ac:	pop    edi
  4108ad:	daa    
  4108ae:	aas    
  4108af:	or     eax,0x46442b61
  4108b4:	jecxz  0x410903
  4108b6:	xchg   edi,eax
  4108b7:	dec    ebx
  4108b8:	mov    ds:0xb0d76a15,eax
  4108bd:	push   0x2a
  4108bf:	cwde   
  4108c0:	repnz ss es mov bh,0x79
  4108c5:	stos   BYTE PTR es:[edi],al
  4108c6:	stos   BYTE PTR es:[edi],al
  4108c7:	push   cs
  4108c8:	mov    DWORD PTR [edx+0x5e3134b5],eax
  4108ce:	in     al,0x62
  4108d0:	pop    eax
  4108d1:	mov    bl,0x91
  4108d3:	xchg   edi,eax
  4108d4:	xor    eax,DWORD PTR [ebp+0x20bcb29f]
  4108da:	test   al,0xf3
  4108dc:	mov    bh,0xa
  4108de:	sbb    ah,ch
  4108e0:	or     al,0xe9
  4108e2:	add    eax,0x385b7a47
  4108e7:	dec    ebx
  4108e8:	std    
  4108e9:	(bad)  
  4108ea:	fcmovbe st,st(6)
  4108ec:	pop    esp
  4108ed:	mov    al,BYTE PTR [esp+esi*4+0x54a22a50]
  4108f4:	mov    bh,0x39
  4108f6:	xor    DWORD PTR [edx+0xe566818],edi
  4108fc:	fcomp  DWORD PTR [edx-0xd5f76fd]
  410902:	fs jp  0x410943
  410905:	jb     0x41092d
  410907:	test   al,dh
  410909:	dec    eax
  41090a:	out    dx,eax
  41090b:	ja     0x41092d
  41090d:	fs in  al,0x6d
  410910:	xor    ebx,0xd941d8bf
  410916:	hlt    
  410917:	data16 cmp cl,dh
  41091a:	es and eax,0x28ce5ec8
  410920:	push   0xfffffff0
  410922:	add    al,bl
  410924:	outs   dx,DWORD PTR ds:[esi]
  410925:	jb     0x41097e
  410927:	xchg   ebp,eax
  410928:	and    edx,esp
  41092a:	retf   
  41092b:	xor    BYTE PTR ds:0xa569fcc,al
  410931:	mov    edx,0x74f6d57c
  410936:	scas   al,BYTE PTR es:[edi]
  410937:	pop    edi
  410938:	dec    eax
  410939:	scas   al,BYTE PTR es:[edi]
  41093a:	popa   
  41093b:	jmp    0x410972
  41093d:	retf   0x70d5
  410940:	ins    BYTE PTR es:[edi],dx
  410941:	ja     0x41097e
  410943:	mov    ebx,0x1b76a704
  410948:	jp     0x4108f7
  41094a:	sub    edi,DWORD PTR [edx-0x13]
  41094d:	add    bh,BYTE PTR [edi-0x17]
  410950:	mov    cl,0xb3
  410952:	jbe    0x41099e
  410954:	outs   dx,BYTE PTR ds:[esi]
  410955:	push   edi
  410956:	stos   DWORD PTR es:[edi],eax
  410957:	jns    0x41094e
  410959:	inc    ecx
  41095a:	jbe    0x41099f
  41095c:	sbb    esp,DWORD PTR ds:0x18e678d7
  410962:	and    ebx,DWORD PTR [esi+0x5fd5e162]
  410968:	push   ebx
  410969:	int    0xb0
  41096b:	sub    ebx,esp
  41096d:	addr16 mov ebp,0x8a768b89
  410973:	cld    
  410974:	pop    es
  410975:	rol    cl,cl
  410977:	sahf   
  410978:	in     al,dx
  410979:	int    0x10
  41097b:	retf   0xc54f
  41097e:	push   es
  41097f:	popa   
  410980:	push   ds
  410981:	push   esi
  410982:	xchg   ebx,eax
  410983:	inc    esp
  410984:	push   ss
  410985:	jo     0x410920
  410987:	aaa    
  410988:	xor    BYTE PTR [ecx+ebx*4+0x32],bh
  41098c:	mov    DWORD PTR [ecx-0xa298078],ecx
  410992:	push   ss
  410993:	dec    esp
  410994:	sahf   
  410995:	jb     0x4109b2
  410997:	pop    edi
  410998:	push   ebp
  410999:	nop
  41099a:	push   ebp
  41099b:	pop    edx
  41099c:	jb     0x410998
  41099e:	mov    al,0xba
  4109a0:	push   0x57e1fc96
  4109a5:	aad    0x26
  4109a7:	dec    eax
  4109a8:	inc    eax
  4109a9:	js     0x4109d4
  4109ab:	retf   
  4109ac:	sahf   
  4109ad:	mov    ?,WORD PTR [ebx]
  4109af:	mov    cl,0x6a
  4109b1:	ss hlt 
  4109b3:	repz cdq 
  4109b5:	fs or  eax,esi
  4109b8:	and    DWORD PTR [edx-0x25a5f143],ebp
  4109be:	inc    ebp
  4109bf:	test   eax,0x842160e6
  4109c4:	lea    edi,[ebx]
  4109c6:	adc    cl,dl
  4109c8:	stos   DWORD PTR es:[edi],eax
  4109c9:	inc    ebx
  4109ca:	enter  0x22b6,0xce
  4109ce:	sbb    eax,0xf4e20b1a
  4109d3:	test   BYTE PTR [ebp+0x1df87174],bl
  4109d9:	add    esp,DWORD PTR [eax-0x6cdc5eb7]
  4109df:	mov    ds:0xde13e897,al
  4109e4:	lahf   
  4109e5:	cmp    BYTE PTR [edi-0x4b42cefa],ah
  4109eb:	mov    ebx,0x198118c2
  4109f0:	imul   ebx,DWORD PTR [ecx+0x4ca13ed],0xffffff8e
  4109f7:	cwde   
  4109f8:	sub    esp,esi
  4109fa:	inc    eax
  4109fb:	pop    edx
  4109fc:	(bad)  cs:[ebp*2-0x28d1a11e]
  410a04:	in     eax,0x4f
  410a06:	mov    ebx,0x844d4983
  410a0b:	in     al,dx
  410a0c:	xchg   edx,eax
  410a0d:	and    dl,BYTE PTR [edx-0x32]
  410a10:	pop    esi
  410a11:	mov    edi,0x62b41df1
  410a16:	sar    al,1
  410a18:	jl     0x410a0f
  410a1a:	outs   dx,DWORD PTR ds:[esi]
  410a1b:	mov    edx,0x64f25fe
  410a20:	jo     0x410a8f
  410a22:	pushf  
  410a23:	(bad)  
  410a24:	xor    eax,ebx
  410a26:	pop    esi
  410a27:	sbb    al,0x9a
  410a29:	mov    cl,0xf4
  410a2b:	or     eax,DWORD PTR [ebx+0x73a060d4]
  410a31:	inc    esi
  410a32:	ret    0x5d8a
  410a35:	scas   eax,DWORD PTR es:[edi]
  410a36:	and    dl,dh
  410a38:	or     edx,ecx
  410a3a:	adc    esp,DWORD PTR [ebp+0x7f]
  410a3d:	push   ecx
  410a3e:	inc    BYTE PTR [esi]
  410a40:	and    BYTE PTR [edx+0x77b956d7],0x4b
  410a47:	(bad)  
  410a49:	fs sub al,0x9c
  410a4c:	jg     0x410a15
  410a4e:	xchg   ebp,eax
  410a4f:	call   0xe3c25fb7
  410a54:	xchg   esi,eax
  410a55:	mov    dh,0xfd
  410a57:	out    dx,eax
  410a58:	loope  0x410ad3
  410a5a:	jmp    0x23d9285a
  410a5f:	loope  0x410a21
  410a61:	iret   
  410a62:	xchg   ebx,eax
  410a63:	push   ebx
  410a64:	pop    ds
  410a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a66:	jp     0x410a04
  410a68:	bound  esi,QWORD PTR [ebp+0x1d]
  410a6b:	inc    eax
  410a6c:	cmp    edi,ecx
  410a6e:	sub    bl,BYTE PTR [esi+edi*1+0x52]
  410a72:	(bad)  
  410a73:	popf   
  410a74:	in     eax,dx
  410a75:	in     al,dx
  410a76:	mov    eax,ds:0x76fbd17b
  410a7b:	mov    ebx,0x76aa2ecb
  410a80:	push   es
  410a81:	aad    0x50
  410a83:	cdq    
  410a84:	mov    ds:0x1376ec39,eax
  410a89:	imul   esp,DWORD PTR [ecx-0xaa94f6e],0x254b2faa
  410a93:	sbb    DWORD PTR [edi],edx
  410a95:	sbb    BYTE PTR [edx-0x589041bd],0xf3
  410a9c:	mov    ch,0x6a
  410a9e:	int    0x14
  410aa0:	stc    
  410aa1:	fnstenvw ds:0x9ecd542f
  410aa8:	jmp    0xee4d:0x381ca2d
  410aaf:	clc    
  410ab0:	pop    es
  410ab1:	sbb    al,dl
  410ab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ab4:	xchg   esi,esi
  410ab6:	mov    ah,0xb
  410ab8:	fimul  WORD PTR [esi]
  410aba:	adc    al,0xad
  410abc:	adc    BYTE PTR [ebp-0x78],0xf3
  410ac0:	sub    al,0x80
  410ac2:	aas    
  410ac3:	sti    
  410ac4:	sub    BYTE PTR [edi-0x6],dl
  410ac7:	lahf   
  410ac8:	stc    
  410ac9:	add    ch,al
  410acb:	pop    edi
  410acc:	xchg   DWORD PTR [edi+edx*2],ebx
  410acf:	mov    esp,DWORD PTR [edi+0xcce02c9]
  410ad5:	ja     0x410b0f
  410ad7:	add    DWORD PTR ds:0xb755a2af,edi
  410add:	sti    
  410ade:	lea    esi,[ebx-0x765f835a]
  410ae4:	lds    esi,FWORD PTR [eax-0x468e8228]
  410aea:	xchg   esi,eax
  410aeb:	pop    ebx
  410aec:	mov    bh,0xc4
  410aee:	pop    esp
  410aef:	mov    BYTE PTR [edi+0x609887f5],al
  410af5:	cwde   
  410af6:	jle    0x410b60
  410af8:	in     eax,0x5d
  410afa:	loope  0x410b05
  410afc:	jmp    0x26a2ca3e
  410b01:	rol    BYTE PTR [edi-0x1b],cl
  410b04:	mov    esi,0x30e28722
  410b09:	call   0x3e1a:0x6869bc84
  410b10:	jb     0x410aba
  410b12:	ss dec ebp
  410b14:	add    BYTE PTR [eax],0xaf
  410b17:	lds    ebx,FWORD PTR [esi+0x23]
  410b1a:	scas   al,BYTE PTR es:[edi]
  410b1b:	inc    ebp
  410b1c:	pop    eax
  410b1d:	jmp    0xaa70fe64
  410b22:	adc    dl,BYTE PTR [ecx+0x689924d1]
  410b28:	iret   
  410b29:	shr    DWORD PTR [eax+0x44a9380],cl
  410b2f:	jno    0x410b74
  410b31:	add    al,0xc9
  410b33:	cmp    BYTE PTR [ecx+0x51],0xe2
  410b37:	add    al,0xd6
  410b39:	in     eax,0x11
  410b3b:	inc    edi
  410b3c:	in     eax,0x66
  410b3e:	push   esi
  410b3f:	jo     0x410b29
  410b41:	sbb    BYTE PTR [eax],al
  410b43:	pop    DWORD PTR [eax+0x42]
  410b46:	push   esp
  410b47:	(bad)  
  410b49:	add    DWORD PTR ds:0x6243b908,ecx
  410b4f:	mov    ecx,0x5aa6859e
  410b54:	push   cs
  410b55:	pop    cx
  410b57:	cmp    dh,BYTE PTR [edi-0x53]
  410b5a:	outs   dx,BYTE PTR ds:[esi]
  410b5b:	sti    
  410b5c:	fwait
  410b5d:	cs inc edx
  410b5f:	mov    dh,0xe3
  410b61:	dec    edi
  410b62:	mov    bh,0xce
  410b64:	push   cs
  410b65:	inc    esi
  410b66:	dec    edx
  410b67:	in     eax,0x3c
  410b69:	pop    ds
  410b6a:	lods   al,BYTE PTR ds:[esi]
  410b6b:	xchg   ecx,eax
  410b6c:	mov    ebx,0xa4290503
  410b72:	inc    eax
  410b73:	(bad)  
  410b74:	pop    ecx
  410b75:	stos   DWORD PTR es:[edi],eax
  410b76:	push   ss
  410b77:	jecxz  0x410b21
  410b79:	out    0xd6,al
  410b7b:	mov    ebp,0xc2d6749a
  410b80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b81:	fld    TBYTE PTR ds:0xa77893c8
  410b87:	xor    esi,DWORD PTR [edi]
  410b89:	mov    esp,0xc30611e0
  410b8e:	cmc    
  410b8f:	or     cl,BYTE PTR [ecx]
  410b91:	jge    0x410bdc
  410b93:	mov    eax,ds:0xd67d7809
  410b98:	jecxz  0x410bd0
  410b9a:	ja     0x410b4a
  410b9c:	adc    DWORD PTR [eax],esp
  410b9e:	cmp    dl,BYTE PTR [ebp+0xb]
  410ba1:	fwait
  410ba2:	adc    dh,BYTE PTR [ebx]
  410ba4:	dec    ebx
  410ba5:	dec    eax
  410ba6:	bound  esi,QWORD PTR [eax]
  410ba8:	and    DWORD PTR [ecx+0x3a],0x27a6ceaa
  410baf:	retf   0x181e
  410bb2:	xchg   edx,eax
  410bb3:	xor    ch,BYTE PTR [edi-0x60c389a9]
  410bb9:	push   edx
  410bba:	popa   
  410bbb:	dec    ebx
  410bbc:	jae    0x410b8b
  410bbe:	sub    eax,0xbf38c810
  410bc3:	clc    
  410bc4:	cmp    DWORD PTR [ebp-0x64b77adb],ebp
  410bca:	sub    DWORD PTR [ebp+0x58],0x7586860e
  410bd1:	and    BYTE PTR [ebx-0x36893aa1],cl
  410bd7:	cmp    DWORD PTR [edi],eax
  410bd9:	imul   eax,esp,0xda157462
  410bdf:	pop    edi
  410be0:	inc    ebp
  410be1:	cld    
  410be2:	jb     0x410c14
  410be4:	dec    edx
  410be5:	cmp    bh,BYTE PTR [ebx+0x711afce2]
  410beb:	jb     0x410c49
  410bed:	and    al,0x7a
  410bef:	in     al,dx
  410bf0:	pop    esi
  410bf1:	gs pop ecx
  410bf3:	aam    0xf3
  410bf5:	sti    
  410bf6:	in     eax,0x8a
  410bf8:	sub    esi,DWORD PTR [eax+0x5dc7ef87]
  410bfe:	push   0xd52fcd86
  410c03:	mov    ah,0xdd
  410c05:	imul   ebx,DWORD PTR [edx],0x33
  410c08:	test   BYTE PTR [ebp+0x1f],bl
  410c0b:	pop    ds
  410c0c:	xchg   ecx,eax
  410c0d:	pop    ecx
  410c0e:	mov    bh,BYTE PTR [edi-0x3e]
  410c11:	cmp    DWORD PTR [eax],esp
  410c13:	mov    BYTE PTR [ebp-0x13723abb],ah
  410c19:	pop    edx
  410c1a:	sbb    al,0x74
  410c1c:	nop
  410c1d:	aaa    
  410c1e:	pop    ebx
  410c1f:	das    
  410c20:	mov    ebx,0xc163d3eb
  410c25:	loopne 0x410be0
  410c27:	jle    0x410bcc
  410c29:	mov    al,ds:0x7897e468
  410c2e:	pop    ebp
  410c2f:	je     0x410bba
  410c31:	in     eax,0xab
  410c33:	or     esi,ebx
  410c35:	push   0x76
  410c37:	push   es
  410c38:	pop    ss
  410c39:	jecxz  0x410c30
  410c3b:	mov    edi,0x69367507
  410c40:	bnd jnp 0x410c54
  410c43:	and    al,0x3a
  410c45:	add    eax,0xbcf39bd8
  410c4a:	call   0x666d19c
  410c4f:	xchg   BYTE PTR [edx-0x2f],ah
  410c52:	mov    esp,gs
  410c54:	in     al,0xcd
  410c56:	mov    bh,0x5c
  410c58:	jmp    0x410c44
  410c5a:	mov    esi,0xbeb4a14e
  410c5f:	mov    esi,0x903e3818
  410c64:	pop    ds
  410c65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c66:	or     ch,dl
  410c68:	ficom  WORD PTR [edi]
  410c6a:	ss out 0xca,eax
  410c6d:	xchg   esp,eax
  410c6e:	mov    cl,bh
  410c70:	jp     0x79912a27
  410c76:	dec    ebx
  410c77:	add    DWORD PTR [ecx+ebp*1],0xe281adc0
  410c7e:	dec    eax
  410c7f:	popf   
  410c80:	ins    BYTE PTR es:[edi],dx
  410c81:	sar    DWORD PTR [edx-0x34],cl
  410c84:	aaa    
  410c85:	xchg   edi,eax
  410c86:	pushw  0xffce
  410c89:	push   ebp
  410c8a:	fstp   DWORD PTR [esp+edi*4+0x78]
  410c8e:	mov    bl,0xb6
  410c90:	test   ecx,eax
  410c92:	clc    
  410c93:	lds    esp,FWORD PTR [edx]
  410c95:	(bad)  
  410c96:	popf   
  410c97:	and    eax,0x22e8c88e
  410c9c:	cld    
  410c9d:	add    eax,0x13a6d33e
  410ca2:	push   ecx
  410ca3:	aaa    
  410ca4:	dec    esp
  410ca5:	je     0x410c6e
  410ca7:	jp     0x410ce3
  410ca9:	adc    ah,dl
  410cab:	mov    esp,0xa28f23ba
  410cb0:	jmp    0x410c91
  410cb2:	sub    eax,0x70c58474
  410cb7:	push   ss
  410cb8:	mov    dl,0x2f
  410cba:	rcl    DWORD PTR [edi],1
  410cbc:	int3   
  410cbd:	jae    0x410c56
  410cbf:	aad    0xc1
  410cc1:	inc    ebx
  410cc2:	ret    
  410cc3:	xchg   edx,eax
  410cc4:	out    dx,eax
  410cc5:	in     al,0xdf
  410cc7:	xchg   ecx,eax
  410cc8:	jmp    0x410d40
  410cca:	repz popa 
  410ccc:	mov    fs,WORD PTR [ebx]
  410cce:	push   edi
  410ccf:	(bad)
  410cd4:	xchg   edx,eax
  410cd5:	rol    BYTE PTR [ecx+eax*8+0x43],1
  410cd9:	imul   edx,DWORD PTR [eax+0x5e],0x4
  410cdd:	out    0xe,eax
  410cdf:	jle    0x410d0b
  410ce1:	and    dh,al
  410ce3:	ja     0x410c6e
  410ce5:	sbb    bh,BYTE PTR [ebp-0x76]
  410ce8:	test   DWORD PTR [esi],ebx
  410cea:	xchg   ebp,eax
  410ceb:	clc    
  410cec:	mov    bh,0x29
  410cee:	dec    edi
  410cef:	aam    0x6d
  410cf1:	cmp    dl,BYTE PTR [edi]
  410cf3:	cmp    BYTE PTR [esi],0x3c
  410cf6:	fistp  DWORD PTR [eax+edx*4+0x6e]
  410cfa:	call   0x9785f267
  410cff:	xor    ebx,DWORD PTR [ecx+eiz*2]
  410d02:	imul   DWORD PTR [esi-0x5a]
  410d05:	sub    bh,BYTE PTR [ecx]
  410d07:	mov    ch,0xc9
  410d09:	push   ds
  410d0a:	les    eax,FWORD PTR [eax+0x7e]
  410d0d:	xchg   edx,eax
  410d0e:	xchg   BYTE PTR [esp+eiz*4+0x3],ah
  410d12:	cmp    BYTE PTR [ecx+0x32ff3cc5],dh
  410d18:	push   ecx
  410d19:	ja     0x410cb9
  410d1b:	mov    eax,ds:0x3da80826
  410d20:	out    0x73,eax
  410d22:	push   0xffffffda
  410d24:	mov    al,BYTE PTR [eax-0x78]
  410d27:	gs int3 
  410d29:	cs loop 0x410d3a
  410d2c:	push   esi
  410d2d:	or     al,0x22
  410d2f:	mov    dh,0x8
  410d31:	mov    edx,0x6893008
  410d36:	xchg   edx,eax
  410d37:	mov    bl,0x3a
  410d39:	retf   0xc691
  410d3c:	dec    eax
  410d3d:	call   0x5ee0:0xd72a3dc6
  410d44:	add    ecx,DWORD PTR [esi]
  410d46:	popf   
  410d47:	xor    BYTE PTR [ebx+ecx*1-0x24],ch
  410d4b:	(bad)  
  410d4c:	cld    
  410d4d:	push   ss
  410d4e:	or     dl,BYTE PTR [edx-0x10]
  410d51:	mov    ebx,0x1e055d36
  410d56:	gs sub eax,0x1379d10b
  410d5c:	repnz retf 0x2a0a
  410d60:	cmp    eax,0x939c8a50
  410d65:	pop    eax
  410d66:	test   eax,0x2353941e
  410d6b:	rcr    BYTE PTR [esi+0x75513a4a],0x71
  410d72:	ss (bad) 
  410d75:	xor    ebx,0x62
  410d78:	pop    esi
  410d79:	add    eax,ebx
  410d7b:	dec    DWORD PTR [ecx+ecx*8+0x1]
  410d7f:	out    0xdb,al
  410d81:	clc    
  410d82:	lods   eax,DWORD PTR ds:[esi]
  410d83:	pop    ss
  410d84:	adc    al,0xfa
  410d86:	and    ch,BYTE PTR [eax]
  410d88:	pop    ds
  410d89:	jg     0x410da4
  410d8b:	(bad)  [ecx+0x51]
  410d8e:	dec    esp
  410d8f:	inc    esp
  410d90:	bound  esp,QWORD PTR [ebp-0x1]
  410d93:	sub    eax,0x12352152
  410d98:	push   cs
  410d99:	nop
  410d9a:	shr    DWORD PTR [ecx-0xb],cl
  410d9d:	mov    al,ds:0x9b8bb4e1
  410da2:	arpl   WORD PTR [edx+ecx*1-0x44],dx
  410da6:	xor    eax,DWORD PTR [edx-0x4b]
  410da9:	jge    0x410d8e
  410dab:	js     0x410daf
  410dad:	fwait
  410dae:	inc    edi
  410daf:	mov    ?,WORD PTR [ebx+0xf692afa]
  410db5:	xor    ecx,DWORD PTR [eax+0x7bc19600]
  410dbb:	cmp    cl,BYTE PTR ds:0x3b611faa
  410dc1:	fmulp  st(7),st
  410dc3:	repz mov WORD PTR [edx],?
  410dc6:	mov    al,ds:0xfd95e485
  410dcb:	ror    BYTE PTR [eax-0x73],cl
  410dce:	fdivr  DWORD PTR [ebx+0x69]
  410dd1:	out    0x85,eax
  410dd3:	jmp    0x4ae53ce2
  410dd8:	mov    ds:0x20d71963,al
  410ddd:	xor    eax,0x1be94f27
  410de2:	out    0xde,eax
  410de4:	mov    WORD PTR [ecx-0x66],es
  410de7:	add    BYTE PTR [ebp+0x4a708d7e],0x4f
  410dee:	aas    
  410def:	cmp    DWORD PTR [ebx],0x54
  410df2:	dec    ebx
  410df3:	pop    edx
  410df4:	and    BYTE PTR [eax-0x40292fd4],ah
  410dfa:	jmp    0xcf75911f
  410dff:	xor    esp,edi
  410e01:	and    eax,0xb4b6ef48
  410e06:	std    
  410e07:	addr16 jp 0x410e25
  410e0a:	push   ss
  410e0b:	ins    BYTE PTR es:[edi],dx
  410e0c:	sub    eax,0x6e8c6e09
  410e11:	pop    ss
  410e12:	push   ebx
  410e13:	push   0x7b
  410e15:	gs ret 0x9ba4
  410e19:	jle    0x410da7
  410e1b:	and    al,0xdc
  410e1d:	ds push ebp
  410e1f:	adc    cl,bl
  410e21:	sbb    eax,0x1ad85f44
  410e26:	dec    ebx
  410e27:	push   ebp
  410e28:	not    DWORD PTR [ebp-0x363866d1]
  410e2e:	cmp    BYTE PTR [ebx+ecx*8+0x14],bl
  410e32:	jecxz  0x410e3a
  410e34:	ins    DWORD PTR es:[edi],dx
  410e35:	ins    DWORD PTR es:[edi],dx
  410e36:	dec    edx
  410e37:	dec    esi
  410e38:	mov    edx,0xc4ccca17
  410e3d:	jmp    0x4edd:0x48e02123
  410e44:	push   ss
  410e45:	loopne 0x410e39
  410e47:	js     0x410e78
  410e49:	test   BYTE PTR [esi+eiz*2-0x5fec2128],bl
  410e50:	popa   
  410e51:	pop    ds
  410e52:	mov    ebx,DWORD PTR [ebx]
  410e54:	pusha  
  410e55:	lods   eax,DWORD PTR ds:[esi]
  410e56:	jmp    0x410e56
  410e58:	in     eax,dx
  410e59:	push   edx
  410e5a:	addr16 and eax,0x6b4d88dd
  410e60:	xchg   edx,eax
  410e61:	mov    eax,0x4ac677e7
  410e66:	mov    ebx,0x47e8aa8c
  410e6b:	mov    esi,0x8e312852
  410e70:	stc    
  410e71:	mov    ecx,0x97cfa36c
  410e76:	cmp    DWORD PTR [edx+eiz*1],ebx
  410e79:	adc    esp,esi
  410e7b:	ins    BYTE PTR es:[edi],dx
  410e7c:	sbb    BYTE PTR [edx+0x299fdceb],bh
  410e82:	rcr    edi,0xd5
  410e85:	mov    ds:0xf91ff302,eax
  410e8a:	(bad)  
  410e8d:	mov    ch,0x59
  410e8f:	(bad)  
  410e90:	adc    BYTE PTR [esi-0x28],bh
  410e93:	addr16 mov ecx,0xe4da1961
  410e99:	or     DWORD PTR [edi-0x16a35f26],ebx
  410e9f:	imul   edx,DWORD PTR [edx+0x3a],0x64e36fc
  410ea6:	dec    ecx
  410ea7:	jns    0x410ebe
  410ea9:	mov    edi,0xf016efa3
  410eae:	and    eax,0x7c21ed89
  410eb3:	jb     0x410ec9
  410eb5:	jg     0x410ea3
  410eb7:	and    BYTE PTR [esi+0x49],0xe0
  410ebb:	sbb    BYTE PTR [ebx-0xcb9f4de],ah
  410ec1:	xchg   DWORD PTR [ebp-0x6d583782],esi
  410ec7:	(bad)  
  410ec8:	add    DWORD PTR [ecx-0x3a9ad62e],0x7f
  410ecf:	dec    ebp
  410ed0:	fiadd  DWORD PTR [ebx+0x70]
  410ed3:	sub    eax,0xac5bdd65
  410ed8:	repnz mov al,BYTE PTR ds:0x7dc18fa5
  410edf:	std    
  410ee0:	dec    ecx
  410ee1:	inc    eax
  410ee2:	xor    eax,0xdd6e664e
  410ee7:	lods   al,BYTE PTR gs:[esi]
  410ee9:	sahf   
  410eea:	adc    BYTE PTR [esi],dl
  410eec:	aas    
  410eed:	or     al,0x5f
  410eef:	pop    edi
  410ef0:	mov    dl,BYTE PTR [edx]
  410ef2:	iret   
  410ef3:	test   BYTE PTR [ecx+0x71],dl
  410ef6:	push   eax
  410ef7:	mov    cl,0xc3
  410ef9:	sbb    eax,0x3444c222
  410efe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eff:	stos   BYTE PTR es:[edi],al
  410f00:	clc    
  410f01:	std    
  410f02:	add    al,0xd8
  410f04:	adc    bl,BYTE PTR [edi+0x2e2253a7]
  410f0a:	or     bh,BYTE PTR [esi+0x73]
  410f0d:	push   0x1d2fc5aa
  410f12:	sbb    ecx,DWORD PTR [ebp+0x2b]
  410f15:	cmp    BYTE PTR [esi+0xb2aed7c],0xe7
  410f1c:	mov    dh,0x9c
  410f1e:	or     DWORD PTR [edi+0x33],ecx
  410f21:	jmp    0xb258:0x28e8bff4
  410f28:	add    eax,0x9eecd564
  410f2d:	int    0xc7
  410f2f:	pop    eax
  410f30:	xchg   esi,eax
  410f31:	dec    ebp
  410f32:	push   ds
  410f33:	pop    ebp
  410f34:	adc    DWORD PTR [esi-0x39451a39],eax
  410f3a:	cmp    DWORD PTR [eax+0x4d],esp
  410f3d:	leave  
  410f3e:	cmp    DWORD PTR [eax+0x24332ba0],edi
  410f44:	bswap  ebp
  410f46:	mov    cl,0xa2
  410f48:	mov    al,0x6c
  410f4a:	jmp    0x787072ff
  410f4f:	mov    ch,0x13
  410f51:	mov    ebp,0xb68e47ec
  410f56:	xor    bh,BYTE PTR [edi-0x5]
  410f59:	(bad)  
  410f5a:	(bad)  
  410f5b:	in     al,dx
  410f5c:	pushf  
  410f5d:	in     eax,dx
  410f5e:	std    
  410f5f:	mov    bl,0x3
  410f61:	fs push esi
  410f63:	(bad)  
  410f64:	push   ebp
  410f65:	jne    0x410efb
  410f67:	inc    ebx
  410f68:	retf   0xe8d3
  410f6b:	push   es
  410f6c:	adc    eax,0x2f656cb7
  410f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f72:	adc    DWORD PTR [eax+0x234a303e],esi
  410f78:	pop    ds
  410f79:	stc    
  410f7a:	push   ebp
  410f7b:	mov    ah,BYTE PTR [ebp-0x67]
  410f7e:	fistp  WORD PTR [ecx-0x62]
  410f81:	leave  
  410f82:	call   0x9a1a:0x10661588
  410f89:	xor    dh,bl
  410f8b:	and    DWORD PTR [eax],edi
  410f8d:	sub    ebp,esp
  410f8f:	jae    0x410f5d
  410f91:	push   ss
  410f92:	sbb    BYTE PTR [eax],cl
  410f94:	jg     0x410f67
  410f96:	int3   
  410f97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f98:	xor    BYTE PTR [ecx],al
  410f9a:	xchg   DWORD PTR [edx+0x49426976],edx
  410fa0:	xchg   esi,eax
  410fa1:	mov    cl,BYTE PTR ds:0xd4a161ef
  410fa7:	cmp    DWORD PTR [esi+0x56],eax
  410faa:	push   0x539073f8
  410faf:	jbe    0x410f67
  410fb1:	dec    ebx
  410fb2:	pop    ecx
  410fb3:	add    BYTE PTR [edx+eiz*1-0xd80984c],0x5e
  410fbb:	mov    cl,0x3f
  410fbd:	ficomp WORD PTR [edi]
  410fbf:	ins    BYTE PTR es:[edi],dx
  410fc0:	jmp    0x410fb5
  410fc2:	push   edi
  410fc3:	sbb    DWORD PTR cs:[eax+0x4068098e],esp
  410fca:	inc    ebp
  410fcb:	inc    esp
  410fcc:	mov    BYTE PTR [edx],dl
  410fce:	ret    
  410fcf:	cmp    al,al
  410fd1:	mov    cl,0xda
  410fd3:	push   esi
  410fd4:	inc    edi
  410fd5:	jbe    0x410fee
  410fd7:	mov    edx,0xbaa6c70d
  410fdc:	test   BYTE PTR ds:0x800c6e28,bh
  410fe2:	imul   ecx,ecx,0xfffffff9
  410fe5:	sahf   
  410fe6:	and    al,0xa2
  410fe8:	fcmovu st,st(5)
  410fea:	or     DWORD PTR [ebx-0x1a],esi
  410fed:	sub    eax,0xde16f453
  410ff2:	pop    esi
  410ff3:	xor    eax,0xfe2b27b5
  410ff8:	clc    
  410ff9:	mov    ah,0x4
  410ffb:	lods   al,BYTE PTR ds:[esi]
  410ffc:	call   0xad04:0x395e33fc
  411003:	mov    cl,0x98
  411005:	mov    ch,0xfa
  411007:	mov    BYTE PTR [edi+0x1518aa36],0xf0
  41100e:	hlt    
  41100f:	sbb    dl,0x7b
  411012:	mov    cl,0xee
  411014:	inc    eax
  411015:	outs   dx,BYTE PTR ds:[esi]
  411016:	mov    edx,0x5ea8991e
  41101c:	scas   eax,DWORD PTR es:[edi]
  41101d:	xor    edx,ebp
  41101f:	sub    DWORD PTR [edi-0x3d],ebx
  411022:	fs mov ebx,0x6a9a5def
  411028:	nop
  411029:	imul   edi,DWORD PTR [edx-0x4a],0x5243e57c
  411030:	dec    edx
  411031:	xchg   BYTE PTR [esi],al
  411033:	repz pop es
  411035:	or     DWORD PTR [ebp-0x65ca3407],eax
  41103b:	cmp    ch,BYTE PTR [edx+esi*4-0xc]
  41103f:	push   edx
  411040:	cmp    eax,0xb9c5ffd4
  411045:	xchg   edi,eax
  411046:	jp     0x411086
  411048:	mov    ebx,0xeb7894b8
  41104d:	lods   al,BYTE PTR ds:[esi]
  41104e:	stc    
  41104f:	lock call 0xb523a897
  411055:	in     al,0xe8
  411057:	pop    edi
  411058:	pop    esp
  411059:	dec    eax
  41105a:	push   ds
  41105b:	in     ax,dx
  41105d:	popf   
  41105e:	dec    ecx
  41105f:	sub    al,0x19
  411061:	ins    DWORD PTR es:[edi],dx
  411062:	mov    ebp,0x19658ffe
  411067:	fmul   QWORD PTR [ebx+0x306fe48d]
  41106d:	nop
  41106e:	fldenv [esi]
  411070:	mov    dh,0x2
  411072:	fs push eax
  411074:	push   ecx
  411075:	je     0x41103c
  411077:	(bad)  
  411078:	aas    
  411079:	test   BYTE PTR [eax+0x3248c101],0x5e
  411080:	fsubr  QWORD PTR [edx]
  411082:	and    al,0xf9
  411084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411085:	inc    esp
  411086:	mov    dh,0xa3
  411088:	fcom   DWORD PTR [ebx+0x1e]
  41108b:	stos   BYTE PTR es:[edi],al
  41108c:	mov    esi,gs
  41108e:	xchg   DWORD PTR [edi+0x71],ecx
  411091:	adc    edi,ebx
  411093:	xor    ebx,DWORD PTR [esi-0x12]
  411096:	mov    WORD PTR [ebx+eiz*8+0x13],es
  41109a:	jnp    0x411072
  41109c:	mov    bh,0xb7
  41109e:	cwde   
  41109f:	adc    al,0x7f
  4110a1:	or     al,0xd1
  4110a3:	jle    0x411055
  4110a5:	call   0xe387:0xd3ec21e1
  4110ac:	repz jo 0x411032
  4110af:	outs   dx,DWORD PTR ds:[esi]
  4110b0:	sub    DWORD PTR [edx],esp
  4110b2:	fwait
  4110b3:	push   edi
  4110b5:	mov    dl,BYTE PTR [ebx*2+0x59341945]
  4110bc:	mov    ecx,0x55e4b261
  4110c1:	inc    eax
  4110c2:	jmp    0x8d60:0x361abb36
  4110c9:	retf   0x6326
  4110cc:	and    BYTE PTR [ecx+0x3e],bh
  4110cf:	mov    ecx,DWORD PTR [ecx-0x4df15594]
  4110d5:	call   DWORD PTR [ecx-0x70]
  4110d8:	xsaveopt [edi+0x7f]
  4110dc:	loope  0x411109
  4110de:	adc    DWORD PTR [ebp+0x7c2b3aab],esi
  4110e4:	and    al,0xc3
  4110e6:	xor    eax,0xb994fe3f
  4110eb:	add    dl,0xad
  4110ee:	add    eax,DWORD PTR [edx]
  4110f0:	mov    al,0xed
  4110f2:	imul   esp,DWORD PTR [ebp+0x16],0x74ae321f
  4110f9:	xchg   edx,eax
  4110fa:	dec    esi
  4110fb:	jo     0x4110fa
  4110fd:	xchg   edx,eax
  4110fe:	scas   al,BYTE PTR es:[edi]
  4110ff:	push   0x20e5ae17
  411104:	das    
  411105:	mov    edi,0x9bdbd037
  41110a:	cmc    
  41110b:	sub    al,BYTE PTR [ecx+0x7d6d4fa6]
  411111:	dec    esi
  411112:	cmp    al,0x44
  411114:	jnp    0x4110bd
  411116:	js     0x38df48e1
  41111c:	addr16 or edi,0xffffffff
  411120:	ds cld 
  411122:	call   0x70edf986
  411127:	out    dx,al
  411128:	sub    eax,0x470a8e9a
  41112d:	ss jo  0x4110c4
  411130:	pop    esp
  411131:	pop    ss
  411132:	sar    BYTE PTR [esi+0xb452f29],cl
  411138:	lss    ebp,FWORD PTR [edi+0x1bd00966]
  41113f:	mov    ecx,0xd69741fa
  411144:	xor    bh,BYTE PTR [eax-0x5236fafa]
  41114a:	jecxz  0x41115a
  41114c:	jle    0x411149
  41114e:	jno    0x4110e1
  411150:	xor    edx,DWORD PTR [esi-0x1b]
  411153:	inc    eax
  411154:	mov    eax,ds:0x3874d41d
  411159:	ror    ebp,1
  41115b:	sbb    BYTE PTR [ebx-0x1f],cl
  41115e:	ret    
  41115f:	mov    ecx,0xf5623efc
  411164:	jmp    0xe48c:0xc240ba3a
  41116b:	hlt    
  41116c:	mov    eax,ds:0x9c28514b
  411171:	ficom  DWORD PTR [ebp+0x7bec6f28]
  411177:	or     eax,0xf3f092b3
  41117c:	ficom  DWORD PTR [ebx-0x7d05431f]
  411182:	mov    esi,DWORD PTR [edi+edx*8-0x1325e35b]
  411189:	jmp    0x9ae8:0x342f3b27
  411190:	mov    edx,0xfdfb8b62
  411195:	adc    BYTE PTR [ebp-0x50],al
  411198:	mov    ebp,0xb595ed6a
  41119d:	outs   dx,DWORD PTR ds:[esi]
  41119e:	jb     0x411150
  4111a0:	pop    es
  4111a1:	(bad)  
  4111a2:	jmp    0x41121f
  4111a4:	mov    esi,0x28431bef
  4111a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111aa:	and    edi,eax
  4111ac:	fadd   QWORD PTR [esi-0x5641f61e]
  4111b2:	loope  0x4111e5
  4111b4:	ins    DWORD PTR es:[edi],dx
  4111b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111b6:	dec    edx
  4111b7:	stc    
  4111b8:	cmp    ch,ch
  4111ba:	popa   
  4111bb:	sahf   
  4111bc:	loopne 0x4111e9
  4111be:	push   esi
  4111bf:	push   esi
  4111c0:	enter  0xe0ac,0x26
  4111c4:	pop    ecx
  4111c5:	scas   eax,DWORD PTR es:[edi]
  4111c6:	or     ch,0x6f
  4111c9:	popf   
  4111ca:	mov    ds:0xe1f2fe9d,eax
  4111cf:	jnp    0x4111a7
  4111d1:	out    dx,al
  4111d2:	or     esp,DWORD PTR [ebx-0x6d]
  4111d5:	mov    eax,ebp
  4111d7:	in     eax,dx
  4111d8:	jnp    0x4111a5
  4111da:	scas   eax,DWORD PTR es:[edi]
  4111db:	adc    eax,0xcd880901
  4111e0:	and    al,0x71
  4111e2:	push   esi
  4111e3:	lods   eax,DWORD PTR ds:[esi]
  4111e4:	popa   
  4111e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111e6:	sbb    DWORD PTR [ebx+0x72],ebx
  4111e9:	shl    DWORD PTR [ecx-0x67],1
  4111ec:	mov    ebx,0xeec6386b
  4111f1:	fwait
  4111f2:	test   BYTE PTR [edi+0x4a20d564],ch
  4111f8:	sub    ebx,DWORD PTR [edi-0x20]
  4111fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111fc:	shl    BYTE PTR [ecx],cl
  4111fe:	xchg   ecx,eax
  4111ff:	lods   eax,DWORD PTR ds:[esi]
  411200:	stc    
  411201:	mov    esi,0xc1042238
  411206:	scas   al,BYTE PTR es:[edi]
  411207:	add    BYTE PTR [edx-0x33],0xde
  41120b:	sahf   
  41120c:	sub    ch,BYTE PTR [eax-0x540428d9]
  411212:	mov    cl,0xb8
  411214:	mov    al,0xc5
  411216:	cmp    al,BYTE PTR [ecx-0x58ea2777]
  41121c:	mov    eax,0xf6ca78df
  411221:	mov    ebx,0x2f0006d
  411226:	xor    ecx,DWORD PTR [ecx]
  411228:	dec    DWORD PTR [ebp+edx*1+0x2a]
  41122c:	dec    ebx
  41122d:	add    DWORD PTR [esi+0x61467c62],ebp
  411233:	jb     0x41129c
  411235:	push   0xadefd49
  41123a:	(bad)  
  41123b:	(bad)  
  41123c:	and    edi,DWORD PTR [esi+0xa]
  41123f:	loop   0x411262
  411241:	test   al,0xb0
  411243:	fstp   QWORD PTR [ebp+0x1a8f95d0]
  411249:	pop    es
  41124a:	loope  0x4112ae
  41124c:	push   DWORD PTR [esi]
  41124e:	jae    0x4111dd
  411250:	pop    eax
  411251:	mov    ah,0x73
  411253:	dec    ebp
  411254:	mov    ah,BYTE PTR [edi+0x1d]
  411257:	in     al,dx
  411258:	mov    ebp,ecx
  41125a:	xor    eax,0x381399b8
  41125f:	fsubr  DWORD PTR [edx-0x3ed3854e]
  411265:	push   ecx
  411266:	and    BYTE PTR [ebp-0x5f],0xa7
  41126a:	ret    
  41126b:	xchg   BYTE PTR es:[edx],bl
  41126e:	push   edx
  41126f:	push   eax
  411270:	xchg   edx,eax
  411271:	add    al,0x63
  411273:	pop    esp
  411274:	dec    ecx
  411275:	je     0x4112d1
  411277:	fidivr DWORD PTR [ebp-0x49]
  41127a:	mov    edx,0x57261af9
  41127f:	jecxz  0x4112a1
  411281:	adc    dl,BYTE PTR [esp+esi*8-0x36]
  411285:	mov    dl,0xfd
  411287:	stos   DWORD PTR es:[edi],eax
  411288:	jl     0x411291
  41128a:	push   cs
  41128b:	push   esi
  41128c:	mov    eax,ds:0xc8df1606
  411291:	outs   dx,DWORD PTR ds:[esi]
  411292:	adc    dl,al
  411294:	mov    bl,BYTE PTR [edx]
  411296:	push   esi
  411297:	cmp    al,0x3b
  411299:	inc    esi
  41129a:	push   ebx
  41129b:	mov    ecx,0x70470030
  4112a0:	inc    esp
  4112a1:	add    BYTE PTR [ebx],al
  4112a3:	and    DWORD PTR [edx-0x48],esi
  4112a6:	outs   dx,DWORD PTR ds:[esi]
  4112a7:	stc    
  4112a8:	dec    eax
  4112a9:	push   esi
  4112aa:	adc    eax,ebp
  4112ac:	mov    ds:0x3326db8c,al
  4112b1:	jo     0x4112bf
  4112b3:	lods   eax,DWORD PTR ds:[esi]
  4112b4:	add    al,0xc2
  4112b6:	mov    eax,ds:0x820671e9
  4112bb:	retf   
  4112bc:	pop    ss
  4112bd:	sti    
  4112be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112bf:	mov    ebx,0xfe1526c2
  4112c4:	aam    0xa2
  4112c6:	(bad)  
  4112c7:	(bad)  
  4112c8:	addr16 call 0xf6659e2c
  4112ce:	fcmovbe st,st(0)
  4112d0:	mov    esi,0xd982ffbe
  4112d5:	les    edi,FWORD PTR [edi+eax*8+0x731553cd]
  4112dc:	or     eax,0xc0a69c92
  4112e1:	(bad)  [ebx]
  4112e3:	dec    DWORD PTR [esi]
  4112e5:	sub    ch,dl
  4112e7:	popf   
  4112e8:	nop
  4112e9:	dec    edi
  4112ea:	push   ebx
  4112eb:	xor    BYTE PTR [edi-0x76c5fc],bh
  4112f1:	sbb    al,0x38
  4112f3:	xchg   esp,eax
  4112f4:	fild   DWORD PTR [ebp+edi*1-0x61da7bb6]
  4112fb:	into   
  4112fc:	dec    esp
  4112fd:	xchg   esp,eax
  4112fe:	out    0x40,eax
  411300:	xchg   esi,eax
  411301:	or     eax,0xeddc5d15
  411306:	push   0x60
  411308:	pop    ebp
  411309:	jge    0x4112c0
  41130b:	xor    BYTE PTR [esi-0x33],0x44
  41130f:	pop    esi
  411310:	mov    es,WORD PTR [ecx+0x3d]
  411313:	cli    
  411314:	mov    ds:0x97fc0e40,eax
  411319:	enter  0x3b74,0x12
  41131d:	jmp    0x41137e
  41131f:	cmp    BYTE PTR [ecx],0xed
  411322:	inc    eax
  411323:	mov    ecx,edi
  411325:	inc    ecx
  411326:	imul   esp,DWORD PTR [ebx-0x5bf64c6e],0xf8d0f83a
  411330:	and    esi,DWORD PTR [ecx+0x619d23a5]
  411336:	out    0x10,al
  411338:	fisub  DWORD PTR [esi+0x6b730abe]
  41133e:	jae    0x4113b7
  411340:	fld    TBYTE PTR [eax-0x42f4b34]
  411346:	jp     0x4112db
  411348:	lea    ebp,[esi+0x742a67ba]
  41134e:	or     bh,BYTE PTR [edx]
  411350:	inc    esp
  411351:	mov    ds:0x8db920fd,al
  411356:	xchg   esp,eax
  411357:	jge    0x41133b
  411359:	daa    
  41135a:	sub    edx,eax
  41135c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41135d:	jne    0x4113ac
  41135f:	test   eax,0x965feba7
  411364:	or     eax,ecx
  411366:	and    esi,edx
  411368:	icebp  
  411369:	pop    es
  41136a:	(bad)  
  41136b:	aas    
  41136c:	cmp    edx,DWORD PTR [esi-0x15a92d06]
  411372:	mov    dl,0x52
  411374:	daa    
  411375:	pop    ss
  411376:	arpl   WORD PTR [edx-0x40],bp
  411379:	ds sti 
  41137b:	jo     0x4113f5
  41137d:	aaa    
  41137e:	mov    ebx,0x3e51c615
  411383:	inc    ebp
  411384:	ins    DWORD PTR es:[edi],dx
  411385:	jb     0x41133f
  411387:	jns    0x411327
  411389:	hlt    
  41138a:	pop    ss
  41138b:	pushf  
  41138c:	push   ecx
  41138d:	mov    BYTE PTR [esi-0x4d6b9546],0x31
  411394:	mov    bh,dl
  411396:	adc    al,0x59
  411398:	xor    al,0xec
  41139a:	mov    dh,0x5e
  41139c:	sbb    eax,0xecff5e66
  4113a1:	jno    0x411338
  4113a3:	jbe    0x411420
  4113a5:	inc    eax
  4113a6:	lahf   
  4113a7:	popf   
  4113a8:	xchg   edi,eax
  4113a9:	sbb    BYTE PTR [ebp-0x32f0e69a],dl
  4113af:	jle    0x411346
  4113b1:	les    ebx,FWORD PTR [eax+0x14b45c01]
  4113b7:	add    DWORD PTR [eax-0xb3bad5a],0x13
  4113be:	mov    bh,0x14
  4113c0:	int3   
  4113c1:	sbb    esp,edi
  4113c3:	ins    BYTE PTR es:[edi],dx
  4113c4:	mov    edi,0x999c9811
  4113c9:	pushf  
  4113ca:	fwait
  4113cb:	aad    0xa6
  4113cd:	pop    esi
  4113ce:	and    al,0x16
  4113d0:	fcomp  DWORD PTR [esi]
  4113d2:	adc    dh,0xa7
  4113d5:	bound  edi,QWORD PTR [ecx]
  4113d7:	cmc    
  4113d8:	stos   BYTE PTR es:[edi],al
  4113d9:	adc    DWORD PTR [esi+eax*2-0x54],edx
  4113dd:	int3   
  4113de:	aas    
  4113df:	lods   eax,DWORD PTR ds:[esi]
  4113e0:	mov    ?,WORD PTR [ebx+eiz*2]
  4113e3:	mov    edx,0x469b1e1a
  4113e8:	fbstp  TBYTE PTR [edx]
  4113ea:	dec    esp
  4113eb:	xor    eax,0xab28867c
  4113f0:	push   eax
  4113f1:	sub    eax,0x9ecf0ba4
  4113f6:	and    bl,al
  4113f8:	inc    esi
  4113f9:	dec    esp
  4113fa:	sbb    DWORD PTR [ecx+0x4164c63a],esp
  411400:	push   ss
  411401:	xchg   edx,eax
  411402:	scas   eax,DWORD PTR es:[edi]
  411403:	xor    bh,0x5f
  411406:	xor    DWORD PTR [esi+edx*2+0x58],edi
  41140a:	xor    DWORD PTR [eax+0x1fa00ac4],0x47
  411411:	xor    ah,BYTE PTR [edx-0x3443e8a3]
  411417:	lahf   
  411418:	out    dx,al
  411419:	jge    0x4113ac
  41141b:	out    0x66,al
  41141d:	jae    0x41149e
  41141f:	es pop eax
  411421:	adc    al,0xce
  411423:	xchg   ecx,eax
  411424:	mov    ds:0xa77fa5bc,al
  411429:	sahf   
  41142a:	out    0xc7,al
  41142c:	xchg   edx,eax
  41142d:	cmp    eax,0x22a94e88
  411432:	cmp    bh,BYTE PTR [ebp-0x648f5ab8]
  411438:	pop    esp
  411439:	int    0xfe
  41143b:	cld    
  41143c:	sbb    DWORD PTR [esi+0x6217bfec],ebx
  411442:	repz pusha 
  411444:	fwait
  411445:	mov    esi,0x7701d406
  41144a:	(bad)  
  41144b:	loopne 0x411421
  41144d:	arpl   WORD PTR [edx],bx
  41144f:	out    dx,al
  411450:	xchg   esp,eax
  411451:	push   ebx
  411452:	and    BYTE PTR [ebp+0x8],dh
  411455:	cwde   
  411456:	scas   al,BYTE PTR es:[edi]
  411457:	aas    
  411458:	mov    esp,0xeb7aecd2
  41145d:	inc    edi
  41145e:	jmp    0x7eaa:0x79afd9b7
  411465:	sub    BYTE PTR [esi+0x42],bl
  411468:	pop    ecx
  411469:	ror    esp,cl
  41146b:	nop
  41146c:	ss jmp 0x411423
  41146f:	(bad)  
  411470:	push   ss
  411471:	adc    al,0x71
  411473:	sbb    edi,ecx
  411475:	xlat   BYTE PTR ds:[ebx]
  411476:	and    al,0xf
  411478:	xchg   BYTE PTR [esi+eax*4-0x14b38007],bh
  41147f:	outs   dx,DWORD PTR ds:[esi]
  411480:	enter  0xbe21,0x4e
  411484:	repz jl 0x411443
  411487:	loop   0x411460
  411489:	mov    bh,0x11
  41148b:	xchg   DWORD PTR [edx-0x2c7b45c4],edi
  411491:	div    bh
  411493:	push   cs
  411494:	scas   al,BYTE PTR es:[edi]
  411495:	imul   eax,DWORD PTR [esi],0x10
  411498:	fs pop ss
  41149a:	std    
  41149b:	or     esi,DWORD PTR [edi]
  41149d:	(bad)  
  41149e:	xor    al,0xa3
  4114a0:	xchg   esi,eax
  4114a1:	push   0xcd04ff2e
  4114a6:	dec    eax
  4114a7:	sbb    BYTE PTR [eax-0x679013e4],dh
  4114ad:	js     0x411503
  4114af:	cmp    BYTE PTR [eax],0x38
  4114b2:	ja     0x41150b
  4114b4:	pop    esi
  4114b5:	mov    eax,gs
  4114b7:	lea    esp,[ebx]
  4114b9:	xchg   edx,eax
  4114ba:	lahf   
  4114bb:	fs push cs
  4114bd:	(bad)  
  4114be:	and    DWORD PTR [ebx+0x54a19b5c],ecx
  4114c4:	push   esi
  4114c5:	sbb    ebp,0xffffffe1
  4114c8:	fwait
  4114c9:	hlt    
  4114ca:	in     eax,dx
  4114cb:	xchg   edi,eax
  4114cc:	mov    esp,0xaba334db
  4114d1:	ret    
  4114d2:	xor    DWORD PTR [edx-0x35bf714a],ebx
  4114d8:	jmp    0xe46f:0x34be2c2
  4114df:	jnp    0x41150f
  4114e1:	mov    dh,0xc
  4114e3:	fcomip st,st(6)
  4114e5:	pop    ds
  4114e6:	aad    0xab
  4114e8:	adc    eax,esi
  4114ea:	rcl    bh,0xc9
  4114ed:	fstp   st(6)
  4114ef:	lds    edi,FWORD PTR [esi]
  4114f1:	dec    ecx
  4114f2:	inc    esi
  4114f3:	push   es
  4114f4:	jge    0x4114cf
  4114f6:	xchg   bh,bh
  4114f8:	ins    BYTE PTR es:[edi],dx
  4114f9:	cmp    al,0xeb
  4114fb:	popa   
  4114fc:	sub    al,0xff
  4114fe:	call   0xcf27:0xb0eb167a
  411505:	dec    esi
  411506:	out    0x16,al
  411508:	mov    bl,0x8e
  41150a:	ins    BYTE PTR es:[edi],dx
  41150b:	fsubp  st(5),st
  41150d:	push   cs
  41150e:	test   BYTE PTR [ecx+0x74],bl
  411511:	repz push ecx
  411513:	mov    eax,ds:0x78f2cdc7
  411518:	cld    
  411519:	jae    0x411591
  41151b:	aam    0xe3
  41151d:	mul    BYTE PTR ds:0xfc00ec33
  411523:	lods   al,BYTE PTR ds:[esi]
  411524:	inc    ebp
  411525:	iret   
  411526:	and    edi,eax
  411528:	xor    DWORD PTR [eax-0x3d],ebp
  41152b:	sub    al,0x41
  41152d:	add    BYTE PTR ds:[ecx+eax*8+0x6ba4a4b4],ah
  411535:	aaa    
  411536:	enter  0x75e7,0x4
  41153a:	aaa    
  41153b:	popf   
  41153c:	rcl    DWORD PTR [esi-0x3e],0xe1
  411540:	mov    esi,0x587fb5cc
  411545:	js     0x41150d
  411547:	inc    ecx
  411548:	es pushf 
  41154a:	push   cs
  41154b:	sbb    cl,ch
  41154d:	pop    ebp
  41154e:	xchg   edi,eax
  41154f:	jnp    0x411554
  411551:	dec    ebp
  411552:	stc    
  411553:	inc    edx
  411554:	add    eax,0xc0b5b2c2
  411559:	lock (bad) 
  41155b:	dec    ebx
  41155c:	mov    al,ds:0x1d3a1f5f
  411561:	push   ebp
  411562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411563:	ficom  DWORD PTR [eax+0x37]
  411566:	push   ecx
  411567:	push   cs
  411568:	sbb    esi,ecx
  41156a:	outs   dx,DWORD PTR ds:[esi]
  41156b:	xor    ebp,0x5e731f72
  411571:	mov    eax,0x31e5b2ac
  411576:	mov    ds:0x9b7ab562,eax
  41157b:	jnp    0x411579
  41157d:	mov    bh,cl
  41157f:	cli    
  411580:	inc    edx
  411581:	ret    0x6059
  411584:	bound  esp,QWORD PTR [edi+ebp*2-0x54]
  411588:	inc    esi
  411589:	mov    ah,al
  41158b:	into   
  41158c:	xchg   edi,eax
  41158d:	add    BYTE PTR [ebp-0x1d],ch
  411590:	add    dl,cl
  411592:	mov    bl,0x50
  411594:	dec    esp
  411595:	push   edx
  411596:	mov    bh,0xd2
  411598:	int    0xf1
  41159a:	ja     0x4115ba
  41159c:	(bad)  [ecx]
  41159e:	dec    esp
  41159f:	mov    al,ds:0x8fa9451b
  4115a4:	test   al,0x55
  4115a6:	dec    edi
  4115a7:	push   esp
  4115a8:	lock in eax,dx
  4115aa:	sbb    ch,BYTE PTR [esi]
  4115ac:	mov    dl,0xb8
  4115ae:	push   es
  4115af:	xor    DWORD PTR [ecx],ebx
  4115b1:	addr16 inc ebx
  4115b3:	div    DWORD PTR [ecx-0x64a34594]
  4115b9:	and    BYTE PTR [ebp-0x48e2f07b],bh
  4115bf:	push   cs
  4115c0:	or     BYTE PTR [ebx],ch
  4115c2:	add    BYTE PTR [ecx-0x5d],bl
  4115c5:	mov    ds:0xa42ea9db,al
  4115ca:	imul   esi,esi,0x3a
  4115cd:	cmp    BYTE PTR [ebx-0x6d55809c],ah
  4115d3:	js     0x4115ba
  4115d5:	lods   eax,DWORD PTR ds:[esi]
  4115d6:	dec    ebx
  4115d7:	shl    BYTE PTR [edx+0x32a28aa4],cl
  4115dd:	xchg   ecx,ebp
  4115df:	es test bh,bl
  4115e2:	mov    edi,0x21331f5
  4115e7:	cmc    
  4115e8:	ins    DWORD PTR es:[edi],dx
  4115e9:	jecxz  0x4115b4
  4115eb:	dec    edx
  4115ec:	push   ebx
  4115ed:	rcl    DWORD PTR [eax-0x17f08ede],0x36
  4115f4:	(bad)  
  4115f5:	mov    WORD PTR es:[eax+eiz*4-0x68623af5],cs
  4115fd:	add    eax,0x35ab43e2
  411602:	add    bh,bl
  411604:	xchg   esi,eax
  411605:	loopne 0x411598
  411607:	adc    eax,0x14fa5ac2
  41160c:	lea    edi,[esi-0xb]
  41160f:	push   ebp
  411610:	pop    ds
  411611:	push   es
  411612:	pop    esp
  411613:	add    al,BYTE PTR [eax+0x42]
  411616:	mov    ds:0x49c92cfc,eax
  41161b:	mov    ah,ch
  41161d:	xchg   esi,eax
  41161e:	mov    WORD PTR [esi-0x6739fdce],cs
  411624:	xor    dl,bh
  411626:	cmp    al,BYTE PTR [edx+edx*1]
  411629:	cmp    bh,BYTE PTR [edx+0x40]
  41162c:	push   ds
  41162d:	xor    ebp,ecx
  41162f:	pop    es
  411630:	mov    bh,0x62
  411632:	shl    DWORD PTR [eax+eax*2+0x6d],1
  411636:	jp     0x411606
  411638:	cmc    
  411639:	shr    dh,1
  41163b:	push   edx
  41163c:	xor    BYTE PTR [eax],ch
  41163e:	in     al,0xdf
  411640:	mov    WORD PTR [ecx+0x25],ds
  411643:	idiv   DWORD PTR [esi+0x37]
  411646:	sbb    DWORD PTR [ebp+eiz*2+0x14c8e940],eax
  41164d:	push   ds
  41164e:	dec    ebp
  41164f:	xor    BYTE PTR [edx-0x434a0c90],dh
  411655:	scas   al,BYTE PTR es:[edi]
  411656:	in     eax,0x91
  411658:	inc    ebp
  411659:	das    
  41165a:	hlt    
  41165b:	loop   0x41161c
  41165d:	rcl    DWORD PTR [ebp-0x4bea89a8],0x47
  411664:	int    0x57
  411666:	jbe    0x4115fc
  411668:	cmp    ah,cl
  41166a:	ror    DWORD PTR [ecx],cl
  41166c:	jge    0x41162f
  41166e:	jmp    0x5e506f7e
  411673:	ja     0x4116bb
  411675:	lock test BYTE PTR [edx+0x68e5e054],bl
  41167c:	fild   QWORD PTR [esi-0x7f346d5f]
  411682:	jecxz  0x4116c7
  411684:	mov    ecx,0x4f259666
  411689:	and    edi,DWORD PTR [ebx-0x7e9d3f84]
  41168f:	shr    BYTE PTR [ebx+0x228037e7],1
  411695:	bound  esi,QWORD PTR [ecx-0x527d46e8]
  41169b:	add    ebp,DWORD PTR [eax+0x6a27eef1]
  4116a1:	xchg   DWORD PTR [ebx+0x6],edi
  4116a4:	aad    0x91
  4116a6:	inc    ebp
  4116a7:	and    al,0xa5
  4116a9:	push   edi
  4116aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116ab:	arpl   WORD PTR [esi],dx
  4116ad:	cmp    ecx,ecx
  4116af:	pop    ebx
  4116b0:	in     eax,0x30
  4116b2:	inc    eax
  4116b3:	mov    al,0x56
  4116b5:	fcmovnbe st,st(4)
  4116b7:	retf   0x4067
  4116ba:	mov    ecx,esp
  4116bc:	sub    BYTE PTR [ebx],bl
  4116be:	retf   
  4116bf:	sub    bh,BYTE PTR [eax-0x2a]
  4116c2:	jns    0x411694
  4116c4:	push   esp
  4116c5:	aas    
  4116c6:	pop    esi
  4116c7:	xor    ch,BYTE PTR [esi-0x6c7649f0]
  4116cd:	int    0x88
  4116cf:	jo     0x411744
  4116d1:	out    dx,eax
  4116d2:	(bad)  
  4116d3:	or     ebx,DWORD PTR [ebx-0x38]
  4116d6:	jmp    0x1fce:0xfd71906
  4116dd:	js     0x411705
  4116df:	cmp    esi,DWORD PTR [edx+0x6105392c]
  4116e5:	ins    DWORD PTR es:[edi],dx
  4116e6:	push   ecx
  4116e7:	hlt    
  4116e8:	out    dx,al
  4116e9:	adc    BYTE PTR ds:0x34a1bb9b,al
  4116ef:	std    
  4116f0:	push   ss
  4116f1:	fwait
  4116f2:	lahf   
  4116f3:	jmp    DWORD PTR [ebx+0x3a]
  4116f6:	mov    esi,0xc91087ca
  4116fb:	mov    ecx,DWORD PTR [ecx-0xa]
  4116fe:	adc    al,0xb4
  411700:	push   edx
  411701:	paddusw mm5,QWORD PTR [ecx-0x4493ee7f]
  411708:	sbb    BYTE PTR [ebp-0x80],dl
  41170b:	sub    al,0x72
  41170d:	sbb    DWORD PTR [ecx],0x4d8303c7
  411713:	adc    BYTE PTR [ebp+0x20eaa9ad],0x93
  41171a:	gs push ss
  41171c:	lahf   
  41171d:	pop    es
  41171e:	jmp    0x41173a
  411720:	in     eax,dx
  411721:	outs   dx,BYTE PTR ds:[esi]
  411722:	mov    edi,0xe9546673
  411727:	ins    DWORD PTR es:[edi],dx
  411728:	mov    ecx,DWORD PTR [edi]
  41172a:	xchg   edx,eax
  41172b:	out    0x49,eax
  41172d:	and    BYTE PTR [edi+0x1867ed41],bh
  411733:	ins    BYTE PTR es:[edi],dx
  411734:	jmp    0x665012b7
  411739:	sbb    dh,BYTE PTR [ecx+0x178af8bf]
  41173f:	not    BYTE PTR [ecx+0x42026f2a]
  411745:	sbb    esi,edi
  411747:	xchg   esp,eax
  411748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411749:	jne    0x4116ce
  41174b:	cmp    eax,0x92978153
  411750:	dec    eax
  411751:	push   ebx
  411752:	jp     0x4117be
  411754:	mov    dl,0x2a
  411756:	pushf  
  411757:	icebp  
  411758:	stos   BYTE PTR es:[edi],al
  411759:	cmp    dl,BYTE PTR [eax]
  41175b:	(bad)  
  41175c:	adc    BYTE PTR [edx],0x32
  41175f:	nop
  411760:	xchg   edi,eax
  411761:	pop    eax
  411762:	sub    BYTE PTR [eax+0x8c65e83],bl
  411768:	into   
  411769:	jo     0x411788
  41176b:	les    edx,FWORD PTR [edi]
  41176d:	mov    eax,0x8de17de3
  411772:	in     eax,dx
  411773:	dec    ebx
  411774:	(bad)  
  411775:	jae    0x41179c
  411777:	lahf   
  411778:	sub    cl,cl
  41177a:	mov    ebx,0x5dbf6366
  41177f:	adc    al,0xe
  411781:	cmp    ebx,DWORD PTR [ebp+edi*8-0x7c]
  411785:	out    dx,al
  411786:	jge    0x411732
  411788:	sbb    bl,al
  41178a:	dec    edx
  41178b:	xchg   ecx,eax
  41178c:	mov    DWORD PTR [edx+0x7f],ecx
  41178f:	(bad)  
  411790:	daa    
  411791:	mov    esi,ebp
  411793:	and    DWORD PTR [edi+ebx*4-0x3],edi
  411797:	loop   0x411801
  411799:	jae    0x4117ae
  41179b:	leave  
  41179c:	push   cs
  41179d:	pop    edi
  41179e:	aad    0xe1
  4117a0:	dec    edi
  4117a1:	xchg   ecx,eax
  4117a2:	sahf   
  4117a3:	add    al,0x66
  4117a5:	hlt    
  4117a6:	aad    0xdb
  4117a8:	xchg   ah,ah
  4117aa:	and    ebp,DWORD PTR [ecx+esi*2]
  4117ad:	sahf   
  4117ae:	adc    edi,esp
  4117b0:	loop   0x41179a
  4117b2:	(bad)  
  4117b3:	ror    BYTE PTR [ebx],1
  4117b5:	sbb    ch,BYTE PTR [ecx-0x69]
  4117b8:	fadd   st(5),st
  4117ba:	fsub   st(6),st
  4117bc:	sub    BYTE PTR [ebp+0x78],dh
  4117bf:	stos   BYTE PTR es:[edi],al
  4117c0:	sbb    ebx,eax
  4117c2:	cmc    
  4117c3:	lea    ebp,[esi+ebx*4]
  4117c6:	call   0x7e79:0xdfd7afd4
  4117cd:	stos   BYTE PTR es:[edi],al
  4117ce:	jbe    0x411818
  4117d0:	or     ch,bl
  4117d2:	out    0x94,al
  4117d4:	mov    ds:0x8b0035d3,eax
  4117d9:	stos   DWORD PTR es:[edi],eax
  4117da:	out    dx,al
  4117db:	scas   eax,DWORD PTR es:[edi]
  4117dc:	jge    0x4117aa
  4117de:	pop    ecx
  4117df:	and    esi,edi
  4117e1:	jg     0x4117df
  4117e3:	xchg   ebx,eax
  4117e4:	mov    BYTE PTR [edx],ah
  4117e6:	pop    ss
  4117e7:	jle    0x411832
  4117e9:	(bad)  
  4117ea:	jl     0x41182c
  4117ec:	cdq    
  4117ed:	and    esi,ebx
  4117ef:	cs in  al,dx
  4117f1:	add    BYTE PTR [eax+0x52995172],al
  4117f7:	push   eax
  4117f8:	push   eax
  4117f9:	or     BYTE PTR [ecx+0x397719e8],dl
  4117ff:	xchg   esi,eax
  411800:	add    edx,DWORD PTR [ecx+0x7c6f30b8]
  411806:	xor    edi,DWORD PTR [edx-0x58ca97bb]
  41180c:	or     edx,eax
  41180e:	jmp    0x1197:0xb22edb9e
  411815:	mov    edx,0x7736be00
  41181a:	std    
  41181b:	in     al,0xfe
  41181d:	es repnz push esp
  411820:	push   ecx
  411821:	loopne 0x411893
  411823:	cmc    
  411824:	jb     0x4117b2
  411826:	adc    DWORD PTR [esi],esp
  411828:	mov    eax,0x55625bbc
  41182d:	retf   0x6c58
  411830:	les    ebp,FWORD PTR [esi]
  411832:	out    0x5b,eax
  411834:	push   ebx
  411835:	push   esi
  411836:	rcl    BYTE PTR [ecx-0x7b40127b],1
  41183c:	cmp    BYTE PTR [ecx-0x20],bh
  41183f:	jmp    0x411898
  411841:	jge    0x4117ce
  411843:	popa   
  411844:	out    0x3e,eax
  411846:	adc    dh,dh
  411848:	icebp  
  411849:	ret    0x6877
  41184c:	nop    esp
  41184f:	pop    esi
  411850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411851:	add    al,0x5c
  411853:	dec    edi
  411854:	xor    BYTE PTR [ecx],dl
  411856:	inc    ecx
  411857:	call   0x94df:0x5f284af
  41185e:	ja     0x4117e1
  411860:	jb     0x41188f
  411862:	ret    
  411863:	lahf   
  411864:	sti    
  411865:	push   ecx
  411866:	mov    al,ds:0x9a88e8ae
  41186b:	enter  0xd27e,0x4c
  41186f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411870:	mov    ecx,0x7bd50a68
  411875:	outs   dx,BYTE PTR ds:[esi]
  411876:	mov    ebp,DWORD PTR [esi+0x5f]
  411879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41187a:	mov    cl,0xce
  41187c:	std    
  41187d:	retf   0xa259
  411880:	push   ds
  411881:	push   esp
  411882:	push   ebp
  411883:	pop    es
  411884:	out    dx,eax
  411885:	int    0xf5
  411887:	stc    
  411888:	pusha  
  411889:	pop    es
  41188a:	jp     0x411886
  41188c:	test   BYTE PTR [ecx-0x4c5929e4],bl
  411892:	dec    edx
  411893:	jg     0x411828
  411895:	fsubr  DWORD PTR [esi+0x170038b3]
  41189b:	dec    ebp
  41189c:	sti    
  41189d:	mov    eax,ds:0xe061206c
  4118a2:	outs   dx,BYTE PTR ds:[esi]
  4118a3:	fs mov ecx,eax
  4118a6:	out    0xaf,eax
  4118a8:	fldenv [ecx-0x6a2576ff]
  4118ae:	(bad)
  4118b1:	xchg   ebx,esi
  4118b3:	aam    0xd2
  4118b5:	aam    0xe6
  4118b7:	into   
  4118b8:	scas   eax,DWORD PTR es:[edi]
  4118b9:	xchg   edi,eax
  4118ba:	sahf   
  4118bb:	inc    ebp
  4118bd:	rol    DWORD PTR ds:0x6cb1a622,1
  4118c3:	fdiv   st(4),st
  4118c5:	push   0x73
  4118c7:	add    ch,BYTE PTR [ebp+0x1f]
  4118ca:	int3   
  4118cb:	sub    ebx,DWORD PTR [esi]
  4118cd:	imul   esp,DWORD PTR [ebp-0x3a],0xabd7533d
  4118d4:	inc    eax
  4118d5:	xor    al,0x29
  4118d7:	fst    st(6)
  4118d9:	es aaa 
  4118db:	or     DWORD PTR [edi-0x4],eax
  4118de:	stos   BYTE PTR es:[edi],al
  4118df:	push   edi
  4118e0:	xchg   ebp,eax
  4118e1:	mov    ss,edx
  4118e3:	add    ch,al
  4118e5:	je     0x4118ea
  4118e7:	jbe    0x41193c
  4118e9:	lock adc eax,0x81e1d5c8
  4118ef:	mov    WORD PTR [eax],es
  4118f1:	inc    eax
  4118f2:	lds    ebx,FWORD PTR [ecx+ebx*8+0x303760cc]
  4118f9:	push   ds
  4118fa:	jo     0x411891
  4118fc:	retf   
  4118fd:	adc    DWORD PTR [eax-0x51155f49],ecx
  411903:	push   0x7a
  411905:	stos   BYTE PTR es:[edi],al
  411906:	cmp    esi,eax
  411908:	repz mov ebp,0x36be436b
  41190e:	popa   
  41190f:	repz jne 0x411917
  411912:	or     DWORD PTR [esi-0x41],esp
  411915:	scas   eax,DWORD PTR es:[edi]
  411916:	ds xchg esi,eax
  411918:	shld   edx,ebx,0x66
  41191c:	mov    ebx,0xbec633a8
  411921:	and    al,0xed
  411923:	or     BYTE PTR [edx+edx*1],ah
  411926:	cmp    bh,BYTE PTR ds:0xcb484a64
  41192c:	inc    eax
  41192d:	push   0x4d
  41192f:	adc    al,0xd9
  411931:	leave  
  411932:	sbb    DWORD PTR [ebx-0x17],esp
  411935:	scas   eax,DWORD PTR es:[edi]
  411936:	push   ss
  411937:	out    dx,eax
  411938:	adc    eax,0x743ef4b7
  41193d:	imul   esi,DWORD PTR [ebx],0xffffffac
  411940:	out    0x39,eax
  411942:	es pop edi
  411944:	dec    ecx
  411945:	cld    
  411946:	jecxz  0x4118f1
  411948:	(bad)  
  411949:	xlat   BYTE PTR ds:[ebx]
  41194a:	mov    bl,0x9a
  41194c:	push   ds
  41194d:	sub    eax,0xd7ce0707
  411952:	arpl   di,si
  411954:	aam    0x49
  411956:	das    
  411957:	adc    dl,al
  411959:	int    0xf1
  41195b:	xor    BYTE PTR [edx-0x6bc262fd],ah
  411961:	sti    
  411962:	and    al,0x44
  411964:	nop
  411965:	xchg   ecx,eax
  411966:	(bad)  
  411968:	fidiv  WORD PTR [eax-0x31]
  41196b:	mov    esi,0x992098aa
  411970:	in     al,dx
  411971:	adc    al,BYTE PTR [ebx+edx*8]
  411974:	je     0x4119b7
  411976:	add    ax,0xb571
  41197a:	call   0x1437:0x5d4d4ce3
  411981:	add    DWORD PTR [edx+0x24],esp
  411984:	je     0x4119e1
  411986:	sub    bh,BYTE PTR [eax-0x161e41c5]
  41198c:	or     esi,esi
  41198e:	rcl    BYTE PTR [edi],cl
  411990:	fld    QWORD PTR ds:0xeb872697
  411996:	(bad)  
  411997:	push   cs
  411998:	mov    al,ds:0x8e7203f2
  41199d:	xchg   esp,eax
  41199e:	lahf   
  41199f:	rol    DWORD PTR [esi-0x716c2087],cl
  4119a5:	add    dl,BYTE PTR [ecx+ecx*1+0x70]
  4119a9:	fstp   TBYTE PTR [edi-0x69]
  4119ac:	call   0x20a0:0xb2f5b3c0
  4119b3:	jne    0x4119b8
  4119b5:	mov    ebx,0x1028af18
  4119ba:	mov    ds:0x3d9d1e8a,eax
  4119bf:	mov    ds:0x918fd7b9,eax
  4119c4:	pop    ecx
  4119c5:	xchg   ebp,eax
  4119c6:	adc    bl,BYTE PTR [ebx]
  4119c8:	xchg   ebp,eax
  4119c9:	sub    dh,dl
  4119cb:	out    dx,al
  4119cc:	dec    eax
  4119cd:	pop    esp
  4119ce:	sbb    BYTE PTR [ecx+ebp*2+0x25],ch
  4119d2:	shr    BYTE PTR [ebx+0xe871dd5],1
  4119d8:	cmp    ecx,esi
  4119da:	nop
  4119db:	pop    esi
  4119dc:	sbb    bh,bh
  4119de:	sub    BYTE PTR [edi+edi*4],dh
  4119e1:	jns    0x4119e6
  4119e3:	sti    
  4119e4:	ja     0x411a48
  4119e6:	and    al,0x21
  4119e8:	test   ebx,0x3f9f4adb
  4119ee:	sbb    al,0xee
  4119f0:	adc    eax,0x4a4de012
  4119f5:	mov    esp,ebp
  4119f7:	loope  0x4119ec
  4119f9:	cmp    al,0xea
  4119fb:	sbb    BYTE PTR [edx-0x1a],0xb8
  4119ff:	mov    ecx,0xbdc84e06
  411a04:	push   ebp
  411a05:	and    al,0x83
  411a07:	icebp  
  411a08:	pop    ss
  411a09:	cwde   
  411a0a:	imul   edi,esi,0xffffffcc
  411a0d:	adc    esi,DWORD PTR [esi-0x7bc13453]
  411a13:	aam    0x6c
  411a15:	jg     0x411a8b
  411a17:	es rcr edi,0xe7
  411a1b:	or     al,0x75
  411a1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a1e:	inc    ebx
  411a1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a20:	jnp    0x411a67
  411a22:	dec    edx
  411a23:	in     eax,0x3a
  411a25:	pop    ebp
  411a26:	sub    al,0xca
  411a28:	push   edi
  411a29:	dec    ecx
  411a2a:	ja     0x411aa9
  411a2c:	xor    BYTE PTR [esi+0x4],dh
  411a2f:	shl    BYTE PTR [ebx-0x2c],1
  411a32:	out    dx,eax
  411a33:	mov    eax,0x3068f957
  411a38:	cmp    BYTE PTR [edx+0x71],bl
  411a3b:	jmp    0xfa61:0x546f0902
  411a42:	sub    DWORD PTR [eax],esp
  411a44:	mov    eax,ds:0x6172917c
  411a49:	popa   
  411a4a:	pop    edx
  411a4b:	sbb    eax,DWORD PTR [edx-0x3fa968d9]
  411a51:	pop    ecx
  411a52:	add    eax,0xd02e8d63
  411a57:	into   
  411a58:	pusha  
  411a59:	push   ebx
  411a5a:	inc    ebp
  411a5b:	sbb    eax,0x625827ee
  411a60:	mov    BYTE PTR [edi],ah
  411a62:	test   al,0xc3
  411a64:	and    ebp,eax
  411a66:	cmc    
  411a67:	sub    bh,BYTE PTR [ebx]
  411a69:	mov    ch,0xbf
  411a6b:	mov    bh,0x2b
  411a6d:	pop    ecx
  411a6e:	scas   eax,DWORD PTR es:[edi]
  411a6f:	inc    edi
  411a71:	inc    eax
  411a72:	sub    DWORD PTR [edi+ecx*4],eax
  411a75:	jo     0x411a5e
  411a77:	or     DWORD PTR [eax],eax
  411a79:	inc    ecx
  411a7a:	mov    ecx,0x6076821c
  411a7f:	or     DWORD PTR [ebp+0x6d],edx
  411a82:	repz shr BYTE PTR [ebx],cl
  411a85:	lods   eax,DWORD PTR ds:[esi]
  411a86:	inc    ebp
  411a87:	ret    
  411a88:	push   0xab1e0b4f
  411a8d:	sbb    al,0x2d
  411a8f:	inc    eax
  411a90:	(bad)  
  411a91:	aas    
  411a92:	aaa    
  411a93:	push   edx
  411a94:	xor    esp,DWORD PTR [edx+ecx*8+0x4480e234]
  411a9b:	adc    ecx,DWORD PTR [edx-0xf]
  411a9e:	lods   al,BYTE PTR ds:[esi]
  411a9f:	xchg   ah,dl
  411aa1:	sti    
  411aa2:	lock xor cl,BYTE PTR [ebx+ebx*8]
  411aa6:	push   ecx
  411aa7:	ret    
  411aa8:	and    eax,0xc4e32a8b
  411aad:	jno    0x411a75
  411aaf:	dec    ebp
  411ab0:	pop    ecx
  411ab1:	mov    edx,0x3778607e
  411ab6:	xchg   DWORD PTR [edi+0x46],esi
  411ab9:	setp   BYTE PTR [esi]
  411abc:	call   eax
  411abe:	repnz fidivr DWORD PTR [edi-0x64]
  411ac2:	outs   dx,DWORD PTR ds:[esi]
  411ac3:	dec    ebp
  411ac4:	pop    es
  411ac5:	or     esi,DWORD PTR ds:0x1cdf3d0
  411acb:	cwde   
  411acc:	ins    BYTE PTR es:[edi],dx
  411acd:	sbb    dh,bl
  411acf:	in     eax,0x42
  411ad1:	jle    0xc84c622e
  411ad7:	and    ah,BYTE PTR [edx]
  411ad9:	push   es
  411ada:	jmp    0x411ac6
  411adc:	and    al,0x42
  411ade:	adc    bl,bl
  411ae0:	jns    0x411af7
  411ae2:	fmulp  st(1),st
  411ae4:	in     al,dx
  411ae5:	jg     0x411b1d
  411ae7:	and    ebx,DWORD PTR [ebx-0x49]
  411aea:	cmp    ah,ch
  411aec:	inc    ebx
  411aed:	mov    DWORD PTR [ecx],0xe12c41ad
  411af3:	popa   
  411af4:	popf   
  411af5:	mov    dl,0x92
  411af7:	not    esp
  411af9:	das    
  411afa:	inc    ebp
  411afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411afc:	push   ecx
  411afd:	fdiv   st,st(5)
  411aff:	xchg   ebx,esi
  411b01:	ror    BYTE PTR [edx+0x1c],0x84
  411b05:	sub    al,0x5
  411b07:	clc    
  411b08:	pop    ebx
  411b09:	stos   BYTE PTR es:[edi],al
  411b0a:	lods   eax,DWORD PTR ds:[esi]
  411b0b:	push   ecx
  411b0c:	inc    eax
  411b0d:	push   0x24
  411b0f:	(bad)  
  411b10:	ja     0x411b87
  411b12:	dec    edi
  411b13:	cs leave 
  411b15:	fs pop ebx
  411b17:	inc    ecx
  411b18:	inc    esp
  411b19:	add    bl,BYTE PTR [eax-0x4260915c]
  411b1f:	jle    0x411b89
  411b21:	enter  0xf6de,0x70
  411b25:	mov    cl,0x84
  411b27:	cmp    al,0x6a
  411b29:	xor    al,0x7
  411b2b:	add    DWORD PTR [esi],eax
  411b2d:	mov    dl,0xcc
  411b2f:	fadd   QWORD PTR [ebx+0x19d2e637]
  411b35:	sub    eax,0x88ae9a9a
  411b3a:	pop    eax
  411b3b:	rcl    DWORD PTR [eax-0x2309bc75],cl
  411b41:	jne    0x411ac7
  411b43:	cmp    DWORD PTR [edi+0x41],edi
  411b46:	or     eax,edi
  411b48:	jle    0x411b35
  411b4a:	inc    esi
  411b4b:	push   ebx
  411b4c:	(bad)  
  411b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b4f:	adc    cl,dh
  411b51:	inc    edx
  411b52:	cmp    eax,0x42aa3e47
  411b57:	(bad)  
  411b58:	push   edx
  411b59:	xor    bl,BYTE PTR [edx+0xc]
  411b5c:	aad    0x38
  411b5e:	or     dl,BYTE PTR [ecx+0x56]
  411b61:	mov    ebp,0x45cd7586
  411b66:	push   eax
  411b67:	dec    ebx
  411b68:	pushf  
  411b69:	xchg   esp,eax
  411b6a:	shr    DWORD PTR [eax-0x454b614f],1
  411b70:	(bad)  
  411b72:	fld    DWORD PTR [eax+ebp*8-0x7c]
  411b76:	sbb    eax,0x905cc9f0
  411b7b:	fstp   QWORD PTR [ebp+edi*1+0x9bf93d7]
  411b82:	cmp    edi,DWORD PTR [ebx+0x1]
  411b85:	add    ah,al
  411b87:	mov    edi,0xc00f5145
  411b8c:	and    BYTE PTR [edi-0x37],cl
  411b8f:	cmp    al,0x7e
  411b91:	xchg   ecx,eax
  411b92:	fst    DWORD PTR [ebx-0x1f93fa75]
  411b98:	adc    al,0x33
  411b9a:	lods   al,BYTE PTR ds:[esi]
  411b9b:	test   eax,0x55ab1f5d
  411ba0:	pop    esp
  411ba1:	jb     0x411bbc
  411ba3:	xor    ch,al
  411ba5:	pop    edi
  411ba6:	push   ecx
  411ba7:	mov    al,0x5b
  411ba9:	xchg   ebx,eax
  411baa:	ja     0x411b81
  411bac:	sub    al,0xb3
  411bae:	xchg   ebx,eax
  411baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bb0:	fcom   DWORD PTR [ecx-0x47]
  411bb3:	daa    
  411bb4:	nop
  411bb5:	lds    edi,FWORD PTR [ebp+0x48bd4367]
  411bbb:	cmp    eax,0x7548d178
  411bc0:	int3   
  411bc1:	sbb    BYTE PTR [esi+0x5a],ah
  411bc4:	sub    al,0x79
  411bc6:	jmp    0x826f:0xfe26dd9
  411bcd:	push   ecx
  411bce:	inc    ebx
  411bcf:	rcr    BYTE PTR [edx-0x54be7c31],1
  411bd5:	adc    esi,ecx
  411bd7:	sub    dh,BYTE PTR [edi-0x79]
  411bda:	cli    
  411bdb:	adc    al,0x12
  411bdd:	mov    edi,0x25413753
  411be2:	je     0x411c33
  411be4:	fucom  st(3)
  411be6:	imul   ebx,DWORD PTR [ecx+0x3f],0xfc1f106a
  411bed:	and    al,0x9e
  411bef:	sbb    DWORD PTR [ebx],eax
  411bf1:	daa    
  411bf2:	jae    0x411b82
  411bf4:	pop    ebx
  411bf5:	data16 jecxz 0x411b85
  411bf8:	mov    bh,0x69
  411bfa:	retf   0x48e6
  411bfd:	xchg   ebx,eax
  411bfe:	mov    bh,0x37
  411c00:	pop    edx
  411c01:	mov    dl,0x2a
  411c03:	mov    ch,0x6f
  411c05:	jb     0x411b95
  411c07:	mov    ss,WORD PTR [eax]
  411c09:	xor    ecx,DWORD PTR [ecx+0xc]
  411c0c:	push   ecx
  411c0d:	rcl    BYTE PTR [edi-0x22],1
  411c10:	mov    bl,0xb1
  411c12:	cmp    eax,0xe10cd665
  411c17:	lock push cs
  411c19:	xchg   ebp,eax
  411c1a:	call   0x52466bc5
  411c1f:	imul   esi,edi,0xbc74e625
  411c25:	(bad)  
  411c26:	hlt    
  411c27:	mov    ds:0xda476896,al
  411c2c:	and    bh,dh
  411c2e:	jae    0x411c01
  411c30:	enter  0xaec6,0x63
  411c34:	mov    ebp,0x733f6a42
  411c39:	push   fs
  411c3b:	adc    ebx,DWORD PTR [edx-0x67b9e9a6]
  411c41:	sbb    cl,BYTE PTR [ebx]
  411c43:	xchg   esi,eax
  411c44:	xchg   esp,eax
  411c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c46:	adc    al,0x63
  411c48:	loop   0x411c7b
  411c4a:	inc    esi
  411c4b:	cmp    eax,0x92b2f7c3
  411c50:	sub    eax,0x57b09c68
  411c55:	(bad)  
  411c56:	xlat   BYTE PTR ds:[ebx]
  411c57:	sub    esi,DWORD PTR [ebp-0x74]
  411c5a:	sbb    DWORD PTR [ebx+eax*4+0x61],edx
  411c5e:	mov    al,ds:0x30216706
  411c63:	aam    0x66
  411c65:	jnp    0x411c23
  411c67:	xchg   edi,eax
  411c68:	inc    ecx
  411c69:	or     DWORD PTR [edx-0x46555763],esi
  411c6f:	ror    BYTE PTR [ebp-0x1d],0x44
  411c73:	inc    ecx
  411c74:	add    dl,BYTE PTR [edx+ebx*8+0x1a]
  411c78:	sub    BYTE PTR [edx+0x58],0x14
  411c7c:	xor    eax,DWORD PTR [eax+ecx*1]
  411c7f:	push   eax
  411c80:	leave  
  411c81:	test   al,0xd1
  411c83:	xchg   edx,eax
  411c84:	adc    al,0xb9
  411c86:	or     DWORD PTR [ecx],edx
  411c88:	or     dh,dl
  411c8a:	in     al,0x6d
  411c8c:	sub    eax,0x341d5bb2
  411c91:	int3   
  411c92:	lahf   
  411c93:	into   
  411c94:	out    0xf,eax
  411c96:	shl    DWORD PTR [eax+0x155a527b],cl
  411c9c:	cli    
  411c9d:	jge    0x411d09
  411c9f:	rcl    BYTE PTR [ecx-0x6af9c923],1
  411ca5:	ins    BYTE PTR es:[edi],dx
  411ca6:	call   0xf342:0xe77c9300
  411cad:	sub    ah,dl
  411caf:	fld    TBYTE PTR [eax-0x7a7617d0]
  411cb5:	je     0x411c71
  411cb7:	or     ebx,DWORD PTR [edi+edi*1-0x7f0c4097]
  411cbe:	adc    al,0xdc
  411cc0:	and    eax,esp
  411cc2:	adc    ebx,DWORD PTR [esi]
  411cc4:	dec    BYTE PTR [ecx+0x3b3b32b9]
  411cca:	repz cdq 
  411ccc:	sub    BYTE PTR [ebx-0x6e],ah
  411ccf:	out    0x4b,al
  411cd1:	cdq    
  411cd2:	cwde   
  411cd3:	push   ds
  411cd4:	push   ecx
  411cd5:	or     al,0xaa
  411cd7:	daa    
  411cd8:	or     ebx,DWORD PTR [edi+0x4e751ffa]
  411cde:	and    DWORD PTR [ecx],ebp
  411ce0:	cmp    eax,0x5f1a3f89
  411ce5:	mov    WORD PTR [edx],ds
  411ce7:	xchg   edx,eax
  411ce8:	add    BYTE PTR [edx-0x3f],0x3e
  411cec:	ret    0x4885
  411cef:	out    dx,eax
  411cf0:	(bad)  
  411cf1:	pop    esp
  411cf2:	add    bl,BYTE PTR [edx]
  411cf4:	xor    eax,0x4d839597
  411cf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cfa:	and    eax,0xd39724a7
  411cff:	int    0x14
  411d01:	jge    0x411ca1
  411d03:	neg    DWORD PTR [eax]
  411d05:	dec    ebp
  411d06:	xor    DWORD PTR [edi*1-0x7272b836],eax
  411d0d:	pop    esp
  411d0e:	cmp    DWORD PTR [edx-0x36],ebx
  411d11:	jp     0x411cb8
  411d13:	stos   DWORD PTR es:[edi],eax
  411d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d15:	rcl    edi,1
  411d17:	or     BYTE PTR [esi],ah
  411d19:	fsub   QWORD PTR [esi-0x64]
  411d1c:	sub    al,ch
  411d1e:	rcl    BYTE PTR [eax],0x25
  411d21:	pop    ss
  411d22:	push   0xffffffd4
  411d24:	sbb    eax,0x7cb3fc1d
  411d29:	jmp    0xd4e1:0x9c384563
  411d30:	and    eax,0xbe15c05b
  411d35:	adc    BYTE PTR [edx-0x4],cl
  411d38:	xchg   ecx,eax
  411d39:	rcr    dh,1
  411d3b:	push   es
  411d3c:	dec    edi
  411d3d:	imul   ebx,edx,0x7ef15130
  411d43:	fdivr  QWORD PTR [ecx+0x17]
  411d46:	call   0x1383:0x7974f2d6
  411d4d:	ret    
  411d4e:	popf   
  411d4f:	pop    es
  411d50:	mov    al,ds:0x13cddbf5
  411d55:	idiv   ah
  411d57:	xor    eax,0x85397d4
  411d5c:	fs mov dh,0xaf
  411d5f:	cli    
  411d60:	(bad)  
  411d61:	test   eax,0x89c14749
  411d66:	(bad)  
  411d67:	sub    DWORD PTR [ebp+0x6c],ebx
  411d6a:	loope  0x411dae
  411d6c:	js     0x411d1a
  411d6e:	int    0xd0
  411d70:	dec    esp
  411d71:	out    0x6f,al
  411d73:	ret    0x6af8
  411d76:	mov    dh,0xe2
  411d78:	bound  ebx,QWORD PTR [ebx-0x1662d3d]
  411d7e:	jno    0x411d3a
  411d80:	jg     0x411d03
  411d82:	pop    eax
  411d83:	dec    eax
  411d84:	xchg   BYTE PTR [edx],ah
  411d86:	push   ebx
  411d87:	mov    eax,ds:0x6b1d9ce2
  411d8c:	xchg   ebp,eax
  411d8d:	pop    edx
  411d8e:	ja     0x411d36
  411d90:	sahf   
  411d91:	gs leave 
  411d93:	xchg   edi,eax
  411d94:	jae    0x411db1
  411d96:	(bad)  
  411d97:	fninit 
  411d99:	jg     0x411d26
  411d9b:	lods   al,BYTE PTR ds:[esi]
  411d9c:	fbstp  TBYTE PTR [eax-0x9]
  411d9f:	mov    edi,0x1ffbbe3e
  411da4:	scas   al,BYTE PTR es:[edi]
  411da5:	adc    al,0xc3
  411da7:	imul   ebp,DWORD PTR [esp+edx*1],0xffffffb9
  411dab:	sub    ah,BYTE PTR [edx+0x44]
  411dae:	mov    cs,eax
  411db0:	jbe    0x411e06
  411db2:	test   DWORD PTR [ecx],ebp
  411db4:	fmul   QWORD PTR [ecx+0x29]
  411db7:	push   ecx
  411db8:	jnp    0x411d89
  411dba:	and    eax,0x2e5aed35
  411dbf:	rcl    ebx,0xf5
  411dc2:	xchg   esi,eax
  411dc3:	mov    ebx,0xe3b1acba
  411dc8:	ret    0xac49
  411dcb:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dcd:	rcr    DWORD PTR ds:0x1144c0c2,1
  411dd3:	jmp    0xf761:0x4ab757e2
  411dda:	popf   
  411ddb:	cmp    BYTE PTR [edx+0x56e0fbdf],bl
  411de1:	ficomp WORD PTR [edi+0x14]
  411de4:	lahf   
  411de5:	int    0x16
  411de7:	(bad)  
  411de8:	ins    BYTE PTR es:[edi],dx
  411de9:	push   ebx
  411dea:	mov    bh,0x62
  411dec:	inc    ebx
  411ded:	pop    ebx
  411dee:	jae    0x411dd1
  411df0:	scas   eax,DWORD PTR es:[edi]
  411df1:	shr    DWORD PTR [ebp+0x73],1
  411df4:	xor    edi,0x61
  411df7:	gs leave 
  411df9:	dec    esp
  411dfa:	push   edx
  411dfb:	ffree  st(0)
  411dfd:	pop    ds
  411dfe:	jo     0x411e19
  411e00:	int    0x72
  411e02:	iret   
  411e03:	arpl   WORD PTR [ecx+0x31],di
  411e06:	push   es
  411e07:	xor    BYTE PTR [ebx+0x33dbeec0],dh
  411e0d:	mov    gs,WORD PTR ds:0x6f3da6b8
  411e13:	adc    ah,BYTE PTR [ebx+0x5a]
  411e16:	sub    al,0x62
  411e18:	mov    ds:0x711ad670,al
  411e1d:	test   DWORD PTR [ebx+ebx*2],ebp
  411e20:	mov    ah,0xd7
  411e22:	(bad)  
  411e23:	les    esi,FWORD PTR [ebx]
  411e25:	push   esp
  411e26:	hlt    
  411e27:	cmp    eax,0x960fdb36
  411e2c:	add    eax,0xa401adf1
  411e31:	cmp    BYTE PTR [ebx+0x25],ch
  411e34:	xcrypt-ecb (bad)
  411e35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e36:	int    0x34
  411e38:	nop
  411e39:	mov    ds:0xc22c461f,al
  411e3e:	clc    
  411e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e40:	mov    eax,0x7e2a5adc
  411e45:	lock (bad) 
  411e47:	jnp    0x411eb2
  411e49:	sbb    esi,esi
  411e4b:	add    eax,0x74b6d551
  411e50:	add    ebp,DWORD PTR [ebx-0x473e8640]
  411e56:	adc    ebx,DWORD PTR [edi]
  411e58:	mov    eax,ds:0x43f32a03
  411e5d:	sbb    al,BYTE PTR [esi+0x38a8cd12]
  411e63:	pop    ebp
  411e64:	xor    eax,0x9e1c74ec
  411e69:	(bad)  
  411e6a:	in     al,dx
  411e6b:	leave  
  411e6c:	in     al,0x2
  411e6e:	inc    edx
  411e6f:	mov    ecx,0x2ccef2da
  411e74:	mov    edi,DWORD PTR [esi+0x1170f6b4]
  411e7a:	add    eax,esi
  411e7c:	aad    0x37
  411e7e:	or     al,0x38
  411e80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e81:	iret   
  411e82:	jmp    0xfca6:0x799f1ecc
  411e89:	mov    ds:0xa0c38c22,al
  411e8e:	inc    edx
  411e8f:	dec    esi
  411e90:	inc    ecx
  411e91:	dec    edi
  411e92:	mov    cl,0xe7
  411e94:	inc    ebp
  411e95:	out    dx,al
  411e96:	nop
  411e97:	les    edi,FWORD PTR [eax-0x7a]
  411e9a:	lods   al,BYTE PTR ds:[esi]
  411e9b:	test   eax,0x57d2e44f
  411ea0:	pop    eax
  411ea1:	push   edx
  411ea2:	call   0xdc6d:0x5d91580c
  411ea9:	fimul  DWORD PTR [ebp+0x1a]
  411eac:	sub    ebp,DWORD PTR [esi]
  411eae:	cmp    ecx,esp
  411eb0:	stos   DWORD PTR es:[edi],eax
  411eb1:	fnstsw WORD PTR [esi+0x1]
  411eb4:	int    0x3b
  411eb6:	push   ss
  411eb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411eb8:	sub    ebx,DWORD PTR [ebx+0x3b631ad7]
  411ebe:	fild   DWORD PTR [ebp+eiz*2+0x49]
  411ec2:	mov    al,ds:0xb2e2ab2b
  411ec7:	push   ds
  411ec8:	test   BYTE PTR [edi-0x23],ah
  411ecb:	sbb    ecx,DWORD PTR [ebx+esi*1-0x7871d5a3]
  411ed2:	adc    ecx,DWORD PTR [edi+0x18c01619]
  411ed8:	into   
  411ed9:	ja     0x411f57
  411edb:	and    ebx,0xffffffa2
  411ede:	inc    esi
  411edf:	mov    eax,ds:0xa4086857
  411ee4:	cs dec ecx
  411ee6:	sbb    al,0x6
  411ee8:	les    edx,FWORD PTR [edi-0xe79cc29]
  411eee:	rol    BYTE PTR [ebp+0x50c41be4],1
  411ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ef5:	leave  
  411ef6:	sub    BYTE PTR [esi+ecx*8-0x4d037d53],dl
  411efd:	leave  
  411efe:	mov    ecx,0x2dc8cd55
  411f03:	sub    BYTE PTR [edx+ebp*8+0x35f2597f],al
  411f0a:	dec    ebx
  411f0b:	outs   dx,BYTE PTR ds:[esi]
  411f0c:	loop   0x411f69
  411f0e:	pushf  
  411f0f:	in     al,dx
  411f10:	gs pop ecx
  411f12:	pop    edx
  411f13:	ror    DWORD PTR [esi],0x3c
  411f16:	dec    edi
  411f17:	retf   0xb808
  411f1a:	lock push edi
  411f1c:	jp     0x411f29
  411f1e:	aaa    
  411f1f:	sahf   
  411f20:	out    dx,eax
  411f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f22:	inc    esp
  411f23:	sbb    ah,BYTE PTR [edi-0x5d]
  411f26:	rol    edi,0xa6
  411f29:	jp     0x411f5d
  411f2b:	adc    BYTE PTR [esi],ch
  411f2d:	icebp  
  411f2e:	jg     0x411f95
  411f30:	pop    eax
  411f31:	mov    esp,DWORD PTR [esi+edi*1-0x55675e91]
  411f38:	ror    BYTE PTR [ecx+edx*1-0x7e],1
  411f3c:	clc    
  411f3d:	push   0xd1414815
  411f42:	(bad)  
  411f43:	lea    esi,[ebx+0x7944c9db]
  411f49:	je     0x411ee8
  411f4b:	push   es
  411f4c:	rol    BYTE PTR [ebx+ebx*1+0x19],0xf1
  411f51:	in     al,0xbf
  411f53:	or     al,0x97
  411f55:	es in  eax,0xfa
  411f58:	or     eax,0x5366442f
  411f5d:	mov    ebp,0x65470730
  411f62:	xchg   BYTE PTR [ebp-0xd],bl
  411f65:	scas   eax,DWORD PTR es:[edi]
  411f66:	sbb    DWORD PTR [eax-0x69423741],edx
  411f6c:	out    0xb3,al
  411f6e:	inc    edx
  411f6f:	cmp    al,0x51
  411f71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f72:	mov    ebx,DWORD PTR [eax+0x33b59c81]
  411f78:	xchg   ebx,eax
  411f79:	retf   0xb0e2
  411f7c:	fisub  DWORD PTR [eax+0x6592a6bb]
  411f82:	xchg   ecx,eax
  411f83:	out    dx,al
  411f84:	out    dx,eax
  411f85:	jns    0x411f1c
  411f87:	xchg   esi,eax
  411f88:	dec    DWORD PTR [edx-0x25e0824b]
  411f8e:	repz pop ss
  411f90:	sub    BYTE PTR [edx],ch
  411f92:	ins    BYTE PTR es:[edi],dx
  411f93:	pop    eax
  411f94:	fnsave [ebx+0x73]
  411f97:	push   esp
  411f98:	jnp    0x412005
  411f9a:	mov    ebp,0xdbee197f
  411f9f:	icebp  
  411fa0:	inc    ecx
  411fa1:	mov    esp,0x58bf3f1c
  411fa6:	push   esi
  411fa7:	and    eax,edi
  411fa9:	pop    esi
  411faa:	lahf   
  411fab:	fisttp WORD PTR [eax-0x30887e1e]
  411fb1:	mov    esp,0xb016517b
  411fb6:	cmp    BYTE PTR [esi-0x77],dl
  411fb9:	jmp    FWORD PTR ds:0xafde3111
  411fbf:	loope  0x411fef
  411fc1:	fldpi  
  411fc3:	neg    bl
  411fc5:	jg     0x412031
  411fc7:	dec    edx
  411fc8:	xchg   esi,eax
  411fc9:	div    BYTE PTR [esi]
  411fcb:	hlt    
  411fcc:	in     al,dx
  411fcd:	xor    esi,edi
  411fcf:	aam    0x76
  411fd1:	out    0xec,al
  411fd3:	repz scas eax,DWORD PTR es:[edi]
  411fd5:	(bad)  
  411fd6:	clc    
  411fd7:	retf   0x3eae
  411fda:	clc    
  411fdb:	cwde   
  411fdc:	outs   dx,DWORD PTR ds:[esi]
  411fdd:	pop    ss
  411fde:	hlt    
  411fdf:	call   0x8e586719
  411fe4:	mov    ebx,0x611e2569
  411fe9:	adc    edi,DWORD PTR [eax-0x3930885e]
  411fef:	clc    
  411ff0:	dec    esi
  411ff1:	adc    esi,0xffffffc6
  411ff4:	fadd   QWORD PTR [di-0x6f]
  411ff8:	not    BYTE PTR [ebp-0x23]
  411ffb:	loope  0x412058
  411ffd:	ror    dh,0x78
  412000:	fidiv  WORD PTR [ecx+0x55]
  412003:	cmc    
  412004:	cmp    ah,BYTE PTR [edx]
  412006:	mov    eax,0x4a9cc589
  41200b:	mov    al,0xf0
  41200d:	jnp    0x411fd0
  41200f:	mov    esi,esp
  412011:	or     eax,0x5e48c3f7
  412016:	addr16 jbe 0x41204e
  412019:	sub    al,0x49
  41201b:	cs inc ebp
  41201d:	cli    
  41201e:	les    ecx,FWORD PTR [ebp+0x60]
  412021:	pop    eax
  412022:	lods   eax,DWORD PTR ds:[esi]
  412023:	or     DWORD PTR ds:0xef4e3ff5,edi
  412029:	inc    ebp
  41202a:	push   ss
  41202b:	imul   ebx,ecx,0xd6bd9b5b
  412031:	je     0x412071
  412033:	clc    
  412034:	scas   eax,DWORD PTR es:[edi]
  412035:	sub    ecx,DWORD PTR [edi+0x59]
  412038:	cmp    cl,BYTE PTR [eax+0x2f]
  41203b:	loop   0x41205d
  41203d:	outs   dx,BYTE PTR ds:[esi]
  41203e:	stos   DWORD PTR es:[edi],eax
  41203f:	xor    BYTE PTR [ebp-0x28],0xa7
  412043:	aam    0xb
  412045:	inc    edi
  412046:	mul    BYTE PTR [esi+0x25]
  412049:	rcl    ch,1
  41204b:	(bad)  
  41204c:	lahf   
  41204d:	mov    bl,BYTE PTR [eax]
  41204f:	lahf   
  412050:	push   es
  412051:	pop    ebp
  412052:	fwait
  412053:	pusha  
  412054:	jmp    0xcb5f33e7
  412059:	stos   BYTE PTR es:[edi],al
  41205a:	lea    eax,[ebp-0x79052ed6]
  412060:	cwde   
  412061:	push   ds
  412062:	jb     0x41209e
  412064:	sub    DWORD PTR [eax+0x1eb2865e],0xffffffd6
  41206b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41206c:	push   es
  41206d:	imul   ecx,DWORD PTR [eax],0xffffffeb
  412070:	push   0xffffffe5
  412072:	pop    ebx
  412073:	mov    ecx,0xb73c2c5c
  412078:	rcr    BYTE PTR [esp+ebp*1],cl
  41207b:	aad    0x62
  41207d:	hlt    
  41207e:	cld    
  41207f:	ins    BYTE PTR es:[edi],dx
  412080:	mov    DWORD PTR [edi],edi
  412082:	xlat   BYTE PTR ds:[ebx]
  412083:	mov    WORD PTR [eax],ds
  412085:	or     eax,0x27db9d9f
  41208a:	jbe    0x41206f
  41208c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41208d:	sahf   
  41208e:	stos   DWORD PTR es:[edi],eax
  41208f:	xor    ebp,ebx
  412091:	adc    ecx,eax
  412093:	xlat   BYTE PTR ds:[ebx]
  412094:	mov    ds:0xe4210251,al
  412099:	push   edx
  41209a:	retf   0xf5b6
  41209d:	fadd   QWORD PTR [edi+0x54ff6033]
  4120a3:	jl     0x412053
  4120a5:	or     al,BYTE PTR [eax-0x40]
  4120a8:	dec    ebp
  4120a9:	mov    BYTE PTR [ecx],bl
  4120ab:	dec    edx
  4120ac:	lods   al,BYTE PTR ds:[esi]
  4120ad:	lahf   
  4120ae:	dec    ecx
  4120af:	aas    
  4120b0:	xchg   esp,eax
  4120b1:	ja     0x4120c5
  4120b3:	loopne 0x412058
  4120b5:	mov    esi,0x44f1b5f4
  4120ba:	(bad)
  4120be:	push   es
  4120bf:	mov    ebp,0x138ab549
  4120c4:	sbb    BYTE PTR [ebx+0x6d],0x59
  4120c8:	(bad)  
  4120c9:	sahf   
  4120ca:	jecxz  0x41212a
  4120cc:	cmp    ecx,DWORD PTR [ebx+0x4081fff0]
  4120d2:	pop    esp
  4120d3:	test   DWORD PTR [ebx+edx*8+0x681cbbe8],ebx
  4120da:	dec    ebx
  4120db:	jns    0x41215c
  4120dd:	repz aaa 
  4120df:	add    dl,bl
  4120e1:	xchg   ebx,eax
  4120e2:	fisub  WORD PTR [edi+ebp*4-0x4f]
  4120e6:	clc    
  4120e7:	test   eax,0xcd16c826
  4120ec:	mov    dl,0xc5
  4120ee:	cmp    BYTE PTR [ecx-0x232a8180],0xb7
  4120f5:	sbb    ebx,edi
  4120f7:	enter  0xf7da,0xc5
  4120fb:	mov    bh,0x19
  4120fd:	pop    esp
  4120fe:	fcmovu st,st(4)
  412100:	test   BYTE PTR [esi],bl
  412102:	xor    ah,BYTE PTR [esi-0x63fbcb8a]
  412108:	loope  0x4120fd
  41210a:	stos   DWORD PTR es:[edi],eax
  41210b:	inc    ebx
  41210c:	(bad)  
  41210d:	(bad)  
  41210e:	jmp    0xdf09:0xfa04a7f6
  412115:	retf   0x2984
  412118:	adc    eax,0x95e0b66
  41211d:	add    BYTE PTR [edx+0x70],bl
  412120:	jno    0x4120dc
  412122:	adc    eax,esp
  412124:	inc    ebx
  412125:	jns    0x41217e
  412127:	out    dx,eax
  412128:	add    al,0xc1
  41212a:	je     0x412131
  41212c:	pop    eax
  41212d:	xlat   BYTE PTR ds:[ebx]
  41212e:	out    0x8f,eax
  412130:	xchg   ecx,eax
  412131:	scas   al,BYTE PTR es:[edi]
  412132:	ja     0x4120ce
  412134:	repnz test eax,0x9fc61e4f
  41213a:	or     bl,bl
  41213c:	mov    ds,WORD PTR [ecx-0x5a]
  41213f:	inc    ebp
  412140:	mov    eax,0x1014046e
  412145:	shr    BYTE PTR [ebp-0x45],0x62
  412149:	dec    esi
  41214a:	jge    0x4120ea
  41214c:	js     0x412197
  41214e:	push   0x3c593da7
  412153:	jae    0x412173
  412155:	pop    esi
  412156:	(bad)  
  412157:	in     eax,dx
  412158:	fisttp WORD PTR [edx]
  41215a:	and    esp,DWORD PTR [ebx+0x71]
  41215d:	arpl   WORD PTR [esi+0x35663fee],dx
  412163:	inc    ebx
  412164:	or     DWORD PTR [edi+ecx*2],esi
  412167:	data16 xor dl,cl
  41216a:	daa    
  41216b:	int3   
  41216c:	inc    ecx
  41216d:	and    DWORD PTR [ebx],eax
  41216f:	outs   dx,BYTE PTR ds:[esi]
  412170:	clc    
  412171:	mov    ecx,0x4ea6ba31
  412176:	push   esi
  412177:	jp     0x412147
  412179:	cmp    eax,0x27a1a4ea
  41217e:	cmp    ah,bl
  412180:	(bad)  
  412181:	popa   
  412182:	(bad)  
  412183:	aam    0x55
  412185:	xor    dl,BYTE PTR [edi]
  412187:	loopne 0x41214f
  412189:	jns    0x4121de
  41218b:	sbb    edi,DWORD PTR [esi]
  41218d:	inc    ecx
  41218e:	jo     0x4121a2
  412190:	cli    
  412191:	sahf   
  412192:	mov    dh,0x22
  412194:	pop    ebx
  412195:	add    ebx,edi
  412197:	inc    edi
  412198:	adc    al,0x1f
  41219a:	pop    esp
  41219b:	push   0xa2a653a3
  4121a0:	(bad)  
  4121a1:	sbb    DWORD PTR [esi+0x6f65f16e],ecx
  4121a7:	mov    WORD PTR [edx+0x773ddb8c],cs
  4121ad:	and    ch,bl
  4121af:	ds inc edi
  4121b1:	int    0xd2
  4121b3:	inc    esp
  4121b4:	jmp    0x9437f7ae
  4121b9:	lahf   
  4121ba:	cdq    
  4121bb:	loopne 0x4121f3
  4121bd:	push   ebp
  4121be:	push   cs
  4121bf:	jnp    0x4121e3
  4121c1:	mov    ch,0x7a
  4121c3:	sbb    edx,DWORD PTR [ebp+0x718ac56a]
  4121c9:	xor    dh,ah
  4121cb:	out    dx,al
  4121cc:	enter  0x48a0,0xdf
  4121d0:	xchg   ebx,eax
  4121d1:	lods   eax,DWORD PTR ds:[esi]
  4121d2:	into   
  4121d3:	test   dl,ch
  4121d5:	dec    ebx
  4121d6:	jne    0x4121ed
  4121d8:	or     ecx,DWORD PTR [esi+0x1e]
  4121db:	mov    cl,0x3
  4121dd:	push   edi
  4121de:	jo     0x412251
  4121e0:	mov    WORD PTR ds:0xf7ab28db,fs
  4121e6:	xor    al,0x9b
  4121e8:	xchg   esi,eax
  4121e9:	dec    esi
  4121ea:	xor    DWORD PTR [ebp+0x5f7c25e8],esi
  4121f0:	stc    
  4121f1:	jg     0x4121f7
  4121f3:	jmp    0x6be9:0x230b6f13
  4121fa:	lds    ebp,FWORD PTR [eax-0x7ce8267e]
  412200:	out    0xef,eax
  412202:	es scas al,BYTE PTR es:[edi]
  412204:	and    al,0x40
  412206:	sbb    al,0xa4
  412208:	lds    eax,FWORD PTR [edx]
  41220a:	in     al,dx
  41220b:	movhps QWORD PTR [eax-0x5b],xmm5
  41220f:	lods   al,BYTE PTR ds:[esi]
  412210:	xchg   edx,eax
  412211:	arpl   WORD PTR [esi-0x520b0eb5],sp
  412217:	and    esp,edx
  412219:	call   DWORD PTR [esi-0x2d6b5d77]
  41221f:	pop    ebp
  412220:	mov    edi,0x5be0de53
  412225:	jle    0x4121bf
  412227:	inc    edx
  412228:	jmp    0x531b:0xf84bdd31
  41222f:	mov    dl,BYTE PTR [eax+0x3d14bb9b]
  412235:	push   ss
  412236:	shl    eax,1
  412238:	push   ecx
  412239:	test   DWORD PTR [ebx],0xcaa9cef8
  41223f:	test   BYTE PTR [eax],0xb1
  412242:	adc    ebp,DWORD PTR [ebx+0x71]
  412245:	dec    edi
  412246:	dec    ebx
  412247:	and    DWORD PTR [eax+0x51077153],eax
  41224d:	xor    al,0xd6
  41224f:	sub    ebx,ebx
  412251:	and    eax,0xe9259c19
  412256:	add    ecx,DWORD PTR [edx-0x39e71bf6]
  41225c:	adc    al,0xf3
  41225e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41225f:	mov    ah,0x53
  412261:	adc    dl,BYTE PTR [esi+eiz*2-0x247a3b38]
  412268:	test   BYTE PTR [esi+0x66011e3f],bh
  41226e:	sub    al,0xba
  412270:	cld    
  412271:	into   
  412272:	cmp    DWORD PTR [ebx+0x7fc8d980],edi
  412278:	cs ins DWORD PTR es:[edi],dx
  41227a:	inc    BYTE PTR [ebx-0x48]
  41227d:	mov    dl,0x5e
  41227f:	mov    ah,0x9c
  412281:	push   edi
  412282:	mov    BYTE PTR [ebp+0x32],0x5a
  412286:	and    DWORD PTR [ebp+0x23624b0c],0xd854df5c
  412290:	addr16 xchg ebp,eax
  412292:	xlat   BYTE PTR ds:[ebx]
  412293:	clc    
  412294:	pop    eax
  412295:	in     al,dx
  412296:	sub    bh,BYTE PTR [edi+0x28c16a30]
  41229c:	and    eax,0xf77db2cf
  4122a1:	and    al,0xf
  4122a3:	sbb    dl,BYTE PTR [esi-0x13bc8017]
  4122a9:	inc    eax
  4122aa:	cld    
  4122ab:	mov    dl,0x4e
  4122ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122ae:	int    0xed
  4122b0:	sbb    ebx,DWORD PTR [eax-0x55]
  4122b3:	add    cl,BYTE PTR [eax+0x48a2d484]
  4122b9:	in     eax,dx
  4122ba:	push   esp
  4122bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122bc:	xor    eax,0xb426430c
  4122c1:	push   ds
  4122c2:	cli    
  4122c3:	pop    ds
  4122c4:	aad    0x4e
  4122c6:	adc    BYTE PTR [ecx-0x65b11627],al
  4122cc:	mov    cl,0x8e
  4122ce:	das    
  4122cf:	cmp    eax,0xfa1c7af0
  4122d4:	cli    
  4122d5:	ins    DWORD PTR es:[edi],dx
  4122d6:	retf   0xe41a
  4122d9:	retf   0xbf70
  4122dc:	inc    esi
  4122dd:	cmp    al,0x43
  4122df:	mov    dl,0xe5
  4122e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122e2:	mov    ds:0x596c7676,al
  4122e7:	inc    ebp
  4122e8:	and    eax,0x333ecac2
  4122ed:	or     dl,BYTE PTR [esi+0x72]
  4122f0:	push   esp
  4122f1:	mov    ebx,0x1622df9b
  4122f6:	out    0x80,eax
  4122f8:	clc    
  4122f9:	inc    edx
  4122fa:	imul   DWORD PTR [ebx+0x4b]
  4122fd:	cmp    eax,0x320408cc
  412302:	pcmpeqb mm4,QWORD PTR [edi+0x49]
  412306:	adc    BYTE PTR [edx-0x508be5c8],dl
  41230c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41230d:	shr    BYTE PTR [ecx-0x198d93ce],cl
  412313:	push   0xffffffce
  412315:	sub    eax,0xc7523d34
  41231a:	stos   BYTE PTR es:[edi],al
  41231b:	pop    ss
  41231c:	ret    0xbbd4
  41231f:	mov    edi,DWORD PTR [edx+0x64]
  412322:	test   DWORD PTR [esi],edx
  412324:	std    
  412325:	fld    DWORD PTR [edi]
  412327:	pop    ds
  412328:	xor    eax,0x6d941f52
  41232d:	mov    esp,0xca776a02
  412332:	xchg   ecx,eax
  412333:	gs jp  0x412318
  412336:	push   eax
  412337:	and    eax,ebx
  412339:	mov    ebx,0x4e10aed2
  41233e:	inc    ebp
  41233f:	clc    
  412340:	fidiv  WORD PTR [ebp+0x5f44c3c0]
  412346:	jl     0x4122fc
  412348:	mov    ds:0x550eeeb1,al
  41234d:	sbb    ch,BYTE PTR [edi+0x6c]
  412350:	fst    DWORD PTR [esi-0x79]
  412353:	call   0xf5cb0ebb
  412358:	and    ebp,DWORD PTR [esp+ecx*1+0x45d85fd3]
  41235f:	or     DWORD PTR [bp+di],esi
  412362:	xor    BYTE PTR [esi],bl
  412364:	loopne 0x4123d9
  412366:	out    dx,eax
  412367:	pop    ds
  412368:	lds    esi,FWORD PTR [edi-0xc]
  41236b:	mov    ecx,0xe9d666d4
  412370:	adc    dl,BYTE PTR [esi+0x61]
  412373:	add    al,0xc5
  412375:	ffree  st(4)
  412377:	data16 sahf 
  412379:	loop   0x4123c0
  41237b:	aam    0x31
  41237d:	fcom   st(0)
  41237f:	cli    
  412380:	mov    al,0xc0
  412382:	fs (bad) 
  412384:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412385:	sar    BYTE PTR [esi-0x31014b7e],1
  41238b:	aas    
  41238c:	adc    ch,BYTE PTR [ecx-0x7bac676b]
  412392:	inc    esp
  412393:	fmul   QWORD PTR [ebx]
  412395:	sar    ah,1
  412397:	mov    ch,0x2e
  412399:	xchg   ecx,edx
  41239b:	sahf   
  41239c:	and    al,0x30
  41239e:	and    dh,BYTE PTR [ebp+0x2b]
  4123a1:	pop    ss
  4123a2:	xchg   DWORD PTR [ebp+0x5a],edx
  4123a5:	cs mov ah,0xb9
  4123a8:	add    ch,0x1c
  4123ab:	or     ch,cl
  4123ad:	add    BYTE PTR [esi+0x15187cac],bh
  4123b3:	in     al,0xc7
  4123b5:	mov    ah,0x45
  4123b7:	idiv   DWORD PTR ds:0x6c965a3a
  4123bd:	test   BYTE PTR [esi-0x62a55a41],al
  4123c3:	and    BYTE PTR [edx+0xc],dl
  4123c6:	add    al,0x47
  4123c8:	ss ds mov esi,0x226d156c
  4123cf:	add    ecx,DWORD PTR [esi-0x1f4a4f3d]
  4123d5:	scas   al,BYTE PTR es:[edi]
  4123d6:	sti    
  4123d7:	pusha  
  4123d8:	mov    esp,0x526989c2
  4123dd:	out    0x24,al
  4123df:	jge    0x412394
  4123e1:	int    0x4f
  4123e3:	push   es
  4123e4:	inc    esp
  4123e5:	cmp    DWORD PTR [ebx-0x2c40067c],esi
  4123eb:	sub    BYTE PTR [edi+edi*1+0x21b4e26d],dh
  4123f2:	mov    al,ds:0x7ccfed50
  4123f7:	aas    
  4123f8:	popa   
  4123f9:	rcl    DWORD PTR [eax+0x64],0xd6
  4123fd:	scas   eax,DWORD PTR es:[edi]
  4123fe:	repz inc ecx
  412400:	push   0x21f116a2
  412405:	dec    eax
  412406:	mov    BYTE PTR [ebx+0x6c],bh
  412409:	pop    edx
  41240a:	or     ch,BYTE PTR [eax+0x4f911474]
  412410:	cmp    eax,DWORD PTR [eax]
  412412:	add    al,ah
  412414:	jns    0x4123ef
  412416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412417:	out    dx,al
  412418:	cmp    esi,0xca700574
  41241e:	jecxz  0x412464
  412420:	popa   
  412421:	add    esi,DWORD PTR [edx+0x701c42f3]
  412427:	jo     0x4123cb
  412429:	mov    bh,0x8e
  41242b:	and    bl,dl
  41242d:	mov    eax,ds:0xad279eb1
  412432:	stc    
  412433:	xor    BYTE PTR [eax+0x5e1617fa],al
  412439:	stos   BYTE PTR es:[edi],al
  41243a:	mov    eax,0xef3e38ef
  41243f:	inc    esi
  412440:	and    al,0x10
  412442:	add    al,0xbd
  412444:	lds    esp,FWORD PTR [edi]
  412446:	sbb    ebx,ebp
  412448:	sbb    DWORD PTR [edx+0x3f619539],esp
  41244e:	mov    eax,0x87e99738
  412453:	jmp    0x19bfd62f
  412458:	stos   DWORD PTR es:[edi],eax
  412459:	pushf  
  41245a:	mov    bl,0x12
  41245c:	xchg   BYTE PTR [ebx-0x22396c80],dh
  412462:	dec    esp
  412463:	sub    ch,0xd2
  412466:	mov    ah,0x64
  412468:	hlt    
  412469:	es frstpm(287 only) 
  41246c:	sbb    DWORD PTR [edi+0xd8bd622],ecx
  412472:	repnz es (bad) 
  412475:	pop    ds
  412476:	sbb    eax,0x36239f5c
  41247b:	(bad)  
  41247c:	adc    al,0xc4
  41247e:	mov    ecx,DWORD PTR [edx]
  412480:	cs jge 0x4124fc
  412483:	push   edi
  412484:	jge    0x412414
  412486:	dec    ebp
  412487:	into   
  412488:	jne    0x4124cc
  41248a:	gs scas al,BYTE PTR es:[edi]
  41248c:	out    dx,eax
  41248d:	or     cl,BYTE PTR [ebp+0x706297c]
  412493:	sbb    eax,0xea571901
  412498:	out    dx,al
  412499:	aad    0x5a
  41249b:	daa    
  41249c:	push   0x48cfa42a
  4124a1:	aas    
  4124a2:	dec    ebp
  4124a3:	mov    edx,0xbe47c116
  4124a8:	sub    al,0x7a
  4124aa:	out    dx,al
  4124ab:	add    esp,DWORD PTR [edx+0x38faa9d9]
  4124b1:	add    bh,dl
  4124b3:	(bad)  
  4124b6:	push   edx
  4124b7:	pop    eax
  4124b8:	lahf   
  4124b9:	(bad)  
  4124bb:	ret    0xb539
  4124be:	mov    al,0x42
  4124c0:	sbb    dh,BYTE PTR [ebx+0x7c]
  4124c3:	stc    
  4124c4:	mov    esi,0x1e043da1
  4124c9:	inc    esp
  4124ca:	int3   
  4124cb:	(bad)  [edx]
  4124cd:	xchg   ecx,eax
  4124ce:	nop
  4124cf:	cmp    al,0xac
  4124d1:	push   esi
  4124d2:	mov    eax,DWORD PTR [eax-0x3f]
  4124d5:	lds    ebp,FWORD PTR [ecx-0x79]
  4124d8:	das    
  4124d9:	retf   0xd6e9
  4124dc:	pusha  
  4124dd:	push   ebx
  4124de:	pop    ds
  4124df:	fs in  eax,0xc6
  4124e2:	jmp    0xd053:0x480dad49
  4124e9:	stc    
  4124ea:	adc    DWORD PTR [ebp+edi*2-0x61],ebp
  4124ee:	scas   al,BYTE PTR es:[edi]
  4124ef:	adc    DWORD PTR [ecx-0x40],esi
  4124f2:	cmp    ebx,DWORD PTR [ebx-0x37]
  4124f5:	jge    0x412539
  4124f7:	jecxz  0x4124b9
  4124f9:	xchg   ecx,eax
  4124fa:	in     al,0xeb
  4124fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124fd:	dec    eax
  4124fe:	std    
  4124ff:	cld    
  412500:	xor    dh,BYTE PTR [ebp+0x523c0f46]
  412506:	or     BYTE PTR [edx+0xe],bl
  412509:	adc    dh,dl
  41250b:	popa   
  41250c:	push   ebp
  41250d:	sar    BYTE PTR [edx],cl
  41250f:	jecxz  0x4124bf
  412511:	aas    
  412512:	ret    0x5bb1
  412515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412516:	call   0xbd4d:0xc317ee56
  41251d:	mul    BYTE PTR [ecx+ebp*4+0x45440e0]
  412524:	sbb    DWORD PTR [edx],esi
  412526:	xlat   BYTE PTR ds:[ebx]
  412527:	push   edx
  412528:	rcl    DWORD PTR [eax],0xf4
  41252b:	mov    DWORD PTR [eax],ebp
  41252d:	test   ch,0x67
  412530:	call   0xb27e:0xde10b941
  412537:	or     ah,dl
  412539:	and    al,0x19
  41253b:	push   ds
  41253c:	in     eax,dx
  41253d:	cmp    dl,BYTE PTR [esi]
  41253f:	xor    eax,0xe5b664bc
  412544:	sub    ebx,DWORD PTR [ebx+ebx*8]
  412547:	neg    BYTE PTR [ecx-0x63dcbb95]
  41254d:	xlat   BYTE PTR ds:[ebx]
  41254e:	pop    ds
  41254f:	out    dx,al
  412550:	loope  0x412501
  412552:	sub    DWORD PTR [ebx+edi*4],ebx
  412555:	mov    WORD PTR [ebp-0x80],ds
  412558:	sbb    al,0x74
  41255a:	not    BYTE PTR [esi]
  41255c:	dec    esp
  41255d:	dec    ecx
  41255e:	xor    DWORD PTR [esi],ebp
  412560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412561:	in     al,0x90
  412563:	fst    QWORD PTR [ecx-0x3c]
  412566:	fwait
  412567:	mov    bh,0x98
  412569:	icebp  
  41256a:	(bad)  
  41256b:	jge    0x4125e9
  41256d:	or     al,0xb4
  41256f:	in     eax,dx
  412570:	in     eax,0xbb
  412572:	push   ecx
  412573:	ins    DWORD PTR es:[edi],dx
  412574:	dec    edx
  412575:	jbe    0x4125a1
  412577:	push   es
  412578:	je     0x412510
  41257a:	pop    edx
  41257b:	clc    
  41257c:	xor    cl,bh
  41257e:	mov    dh,ch
  412580:	fcom   DWORD PTR [eax]
  412582:	nop
  412583:	jns    0x412543
  412585:	jnp    0x412604
  412587:	call   0xd897:0x2bc36bbb
  41258e:	jp     0x4125f4
  412590:	ret    
  412591:	inc    edx
  412592:	cli    
  412593:	or     ebx,DWORD PTR [ebx-0x66ad6300]
  412599:	(bad)  
  41259a:	in     al,dx
  41259b:	dec    esp
  41259c:	cmp    eax,0xf12b206b
  4125a1:	pop    es
  4125a2:	pop    edx
  4125a3:	fistp  QWORD PTR [edi]
  4125a5:	dec    eax
  4125a6:	out    dx,al
  4125a7:	pop    eax
  4125a8:	shl    DWORD PTR [ebp+0x65033b93],1
  4125ae:	or     ah,BYTE PTR [edi-0x2004bc9e]
  4125b4:	ins    BYTE PTR es:[edi],dx
  4125b5:	icebp  
  4125b6:	in     eax,dx
  4125b7:	mov    cl,0x2
  4125b9:	popa   
  4125ba:	add    BYTE PTR [ebx+0x55],ah
  4125bd:	inc    edi
  4125be:	out    dx,eax
  4125bf:	cmp    DWORD PTR [ebp-0x2d],edx
  4125c2:	mov    ds:0x5426b59c,al
  4125c7:	xchg   ebx,eax
  4125c8:	loopne 0x41255b
  4125ca:	and    cl,ah
  4125cc:	mov    esp,ebx
  4125ce:	dec    esp
  4125cf:	mov    dh,0xa6
  4125d1:	mov    ecx,0x18637cc4
  4125d6:	jl     0x412566
  4125d8:	fwait
  4125d9:	fwait
  4125da:	mov    edx,0x418a827e
  4125df:	and    BYTE PTR [edx-0x80],cl
  4125e2:	retf   
  4125e3:	or     eax,0x2a03efb
  4125e8:	xor    al,0xfc
  4125ea:	pushf  
  4125eb:	dec    edi
  4125ec:	xor    cl,BYTE PTR [edx-0x6e4d6bf6]
  4125f2:	push   ecx
  4125f3:	fbld   TBYTE PTR [esi+0x694c07b7]
  4125f9:	mov    ecx,0x7c6d99d8
  4125fe:	mov    edx,0xdf8b5943
  412603:	sub    DWORD PTR [eax-0x4ebca263],0x8d36369a
  41260d:	test   ch,0x30
  412610:	adc    BYTE PTR cs:[ebx],al
  412613:	int3   
  412614:	stos   DWORD PTR es:[edi],eax
  412615:	ss jg  0x41259d
  412618:	jl     0x412642
  41261a:	push   ds
  41261b:	mov    dh,0x1d
  41261d:	jmp    0x412607
  41261f:	shr    DWORD PTR [eax],cl
  412621:	sbb    eax,0xe5e42882
  412626:	pop    esp
  412627:	inc    edi
  412628:	sub    BYTE PTR [ebp-0x543a15ac],cl
  41262e:	pop    esp
  41262f:	push   ecx
  412630:	in     eax,0x69
  412632:	push   ebp
  412633:	pop    ecx
  412634:	loopne 0x4126ac
  412636:	fs mov ds,ecx
  412639:	inc    esi
  41263a:	cmp    esi,DWORD PTR [ebp-0x6c]
  41263d:	adc    eax,0x1a544c4d
  412642:	stos   DWORD PTR es:[edi],eax
  412643:	inc    ebx
  412644:	mov    ds:0x863842b3,al
  412649:	leave  
  41264a:	add    DWORD PTR [eax-0x4b55e829],edi
  412650:	jmp    0x14a4e0b0
  412655:	xchg   BYTE PTR [edi-0x6a],bh
  412658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412659:	sbb    BYTE PTR [esi-0xb],al
  41265c:	sbb    al,0xb4
  41265e:	mov    edi,0x5f696ed0
  412663:	push   ebp
  412664:	mov    ebp,0x4aa011d7
  412669:	fldcw  WORD PTR [eax-0x14199c6f]
  41266f:	inc    ecx
  412670:	call   0xa505:0x6ec4c0fb
  412677:	(bad)  
  412678:	pusha  
  412679:	jecxz  0x4126a2
  41267b:	icebp  
  41267c:	fs mov esi,0xd9b635d8
  412682:	out    0x69,al
  412684:	and    eax,0x416e5924
  412689:	mov    ebx,0xc53d3443
  41268e:	lds    edx,FWORD PTR [ebx+0x1857d446]
  412694:	or     esp,esi
  412696:	and    esi,DWORD PTR es:[ebp+0x74]
  41269a:	xor    DWORD PTR [edx+0x428c7ccb],esi
  4126a0:	mov    al,0x19
  4126a2:	das    
  4126a3:	jmp    0x4126dc
  4126a5:	jmp    0xbb6c35ec
  4126aa:	inc    ecx
  4126ab:	(bad)  
  4126ac:	mov    eax,ds:0xa3101945
  4126b1:	mov    ebx,0xb4fcb53c
  4126b6:	pushf  
  4126b7:	mov    eax,0xbd342f33
  4126bc:	jge    0x412669
  4126be:	push   ebx
  4126bf:	cmp    ebx,eax
  4126c1:	mov    esp,0x15cff483
  4126c6:	in     eax,dx
  4126c7:	xor    ebx,DWORD PTR [ebx]
  4126c9:	popa   
  4126ca:	pop    ds
  4126cb:	mov    bl,0xb8
  4126cd:	icebp  
  4126ce:	pop    ebp
  4126cf:	call   0x71d8f9c9
  4126d4:	dec    esp
  4126d5:	or     cl,BYTE PTR [edx+0xf]
  4126d8:	sbb    ah,BYTE PTR [eax]
  4126da:	adc    al,0xcf
  4126dc:	jmp    0xb1b3ac88
  4126e1:	fwait
  4126e2:	push   ecx
  4126e3:	cmp    sp,bx
  4126e6:	lahf   
  4126e7:	aam    0x6a
  4126e9:	jl     0x4126ee
  4126eb:	(bad)  
  4126ec:	xchg   edi,eax
  4126ed:	xchg   ebp,eax
  4126ee:	call   DWORD PTR [esi-0x58]
  4126f1:	inc    esi
  4126f2:	popa   
  4126f3:	daa    
  4126f4:	mov    bh,0x8c
  4126f6:	and    BYTE PTR [esi-0x79],dh
  4126f9:	ins    DWORD PTR es:[edi],dx
  4126fa:	aad    0xbe
  4126fc:	sbb    DWORD PTR [edi+0x3],ebp
  4126ff:	push   edx
  412700:	loopne 0x41269c
  412702:	out    0xc8,eax
  412704:	lahf   
  412705:	in     al,0x23
  412707:	jbe    0x4126e5
  412709:	xor    ebp,ebx
  41270b:	fdivp  st(4),st
  41270d:	popf   
  41270e:	adc    dh,dl
  412710:	dec    edx
  412711:	add    al,0xa0
  412713:	bound  esi,QWORD PTR [ebx+0x187981be]
  412719:	and    esi,eax
  41271b:	jge    0x412778
  41271d:	rcl    DWORD PTR [edi],cl
  41271f:	fcom   st(6)
  412721:	mov    DWORD PTR [edx+0x2fdf32a6],0x5cf6e168
  41272b:	adc    BYTE PTR [eax+eax*8+0x65546c85],al
  412732:	mov    ds:0x3ba275ac,eax
  412737:	adc    dl,bh
  412739:	psubd  mm2,QWORD PTR [ecx+edx*2+0x64889323]
  412741:	mov    eax,0x630b42a1
  412746:	fidivr WORD PTR [ebp+0x6fa364fa]
  41274c:	in     al,0x8f
  41274e:	fstp   QWORD PTR [esp+eax*1-0x3bc0b27]
  412755:	dec    ebp
  412756:	outs   dx,DWORD PTR ds:[esi]
  412757:	xchg   ebx,eax
  412758:	nop
  412759:	imul   ebp,DWORD PTR [edi+0x499de570],0x761e58d5
  412763:	cmp    DWORD PTR [edi],edx
  412765:	dec    ebp
  412766:	sbb    BYTE PTR [edx+0xda21a3b],ch
  41276c:	aas    
  41276d:	dec    esp
  41276e:	std    
  41276f:	adc    DWORD PTR ds:0x5559bb00,edi
  412775:	imul   edi,eax,0xf3875abc
  41277b:	add    edi,DWORD PTR [edx]
  41277d:	cmp    BYTE PTR [esi+0x31313201],ch
  412783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412784:	out    0x19,eax
  412786:	imul   eax,DWORD PTR [ecx+0x53],0x49
  41278a:	mov    eax,ds:0xaf2123c1
  41278f:	pop    edi
  412790:	rcr    BYTE PTR [eax],1
  412792:	hlt    
  412793:	in     eax,0x9c
  412795:	mov    bl,0x5
  412797:	mov    cl,0x5a
  412799:	sti    
  41279a:	sahf   
  41279b:	mov    cl,0xec
  41279d:	aam    0x33
  41279f:	pusha  
  4127a0:	and    DWORD PTR [ebp+0x10],esi
  4127a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127a4:	pop    esp
  4127a5:	ins    BYTE PTR es:[edi],dx
  4127a6:	je     0x41280e
  4127a8:	in     al,0x9b
  4127aa:	jnp    0x41274a
  4127ac:	or     ebp,esp
  4127ae:	(bad)  
  4127af:	pop    ss
  4127b0:	jne    0x41275e
  4127b2:	cmp    cl,BYTE PTR [ebx-0x56]
  4127b5:	arpl   WORD PTR [ebx],bp
  4127b7:	sbb    eax,0xcec830e8
  4127bc:	jecxz  0x4127b5
  4127be:	mov    al,0x17
  4127c0:	pop    edx
  4127c1:	and    esi,DWORD PTR [ebx+0x1c]
  4127c4:	or     al,0x69
  4127c6:	das    
  4127c7:	xchg   DWORD PTR [ecx],esi
  4127c9:	push   cs
  4127ca:	sub    ecx,DWORD PTR [ebx]
  4127cc:	into   
  4127cd:	lods   al,BYTE PTR ds:[esi]
  4127ce:	test   eax,0xf1dd8971
  4127d3:	pop    es
  4127d4:	xchg   DWORD PTR [edx-0x7de3f512],ebx
  4127da:	dec    ebp
  4127db:	test   DWORD PTR [esi-0x67],esp
  4127de:	cmovs  eax,DWORD PTR [ecx+0x5f5471d6]
  4127e5:	scas   al,BYTE PTR es:[edi]
  4127e6:	sub    ah,bl
  4127e8:	sti    
  4127e9:	xchg   ebp,eax
  4127ea:	mov    edi,0x99d63b53
  4127ef:	scas   al,BYTE PTR es:[edi]
  4127f0:	ins    DWORD PTR es:[edi],dx
  4127f1:	xor    BYTE PTR [ebx],0x5a
  4127f4:	sahf   
  4127f5:	jmp    0x929e:0xcc71639
  4127fc:	test   BYTE PTR [ebx+0x7a72309c],0x3e
  412803:	fwait
  412804:	rcl    ecx,0x7c
  412807:	fidiv  WORD PTR [esi-0x5131cc10]
  41280d:	xor    ebp,DWORD PTR [ebx+0x3b]
  412810:	test   DWORD PTR ds:[edx-0x5c7b31bc],ecx
  412817:	or     edx,DWORD PTR [eax+0x64]
  41281a:	push   es
  41281b:	and    eax,0x6e2bead7
  412820:	test   al,0x98
  412822:	and    eax,0xa679cbb4
  412827:	fild   WORD PTR [esi-0x49f68b89]
  41282d:	push   ebp
  41282e:	xlat   BYTE PTR ds:[ebx]
  41282f:	(bad)  
  412830:	lds    ebx,FWORD PTR [ebp+0x6a]
  412833:	inc    esi
  412834:	sbb    al,0x51
  412836:	test   eax,0x36e55d27
  41283b:	in     eax,0xcc
  41283d:	(bad)  
  41283e:	out    dx,eax
  41283f:	lods   eax,DWORD PTR ds:[esi]
  412840:	repnz rcr DWORD PTR ds:0xf782f240,0x97
  412848:	fstp   DWORD PTR [edi-0x74]
  41284b:	fcom   st(4)
  41284d:	add    BYTE PTR [edi],0x34
  412850:	cdq    
  412851:	sbb    ebx,DWORD PTR [ebp+0x74]
  412854:	inc    ecx
  412855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412856:	arpl   dx,cx
  412858:	push   0x5b
  41285a:	push   ds
  41285b:	outs   dx,DWORD PTR ds:[esi]
  41285c:	cmp    eax,DWORD PTR [esi+0x1]
  41285f:	cwde   
  412860:	adc    eax,0xbe7e3e74
  412865:	xchg   DWORD PTR [edx],esi
  412867:	outs   dx,DWORD PTR ds:[esi]
  412868:	add    esi,DWORD PTR [ebx-0x3d1685f6]
  41286e:	fwait
  41286f:	lea    eax,[ecx+0x79]
  412872:	fs jno 0x4127f6
  412875:	pop    ebx
  412876:	fs sub eax,0xe628089c
  41287c:	push   esi
  41287d:	ret    0x2012
  412880:	sar    DWORD PTR [eax+0x6d3b0f61],0xa0
  412887:	mov    DWORD PTR [esi+0x16],esp
  41288a:	(bad)  
  41288b:	ret    0x3e7d
  41288e:	mov    edi,edx
  412890:	xlat   BYTE PTR ds:[ebx]
  412891:	lods   al,BYTE PTR ds:[esi]
  412892:	inc    esp
  412893:	fisttp QWORD PTR [ebp+0x62]
  412896:	leave  
  412897:	into   
  412898:	cmc    
  412899:	push   ebp
  41289a:	adc    BYTE PTR [ebx-0x667da131],bl
  4128a0:	sbb    BYTE PTR [ebp+0x7c83d4a3],bl
  4128a6:	lods   al,BYTE PTR ds:[esi]
  4128a7:	and    ecx,esp
  4128a9:	mov    eax,ds:0xc7650e79
  4128ae:	jnp    0x4128bf
  4128b0:	mov    ebp,0x7b27ef1f
  4128b5:	pop    sp
  4128b7:	bound  edx,QWORD PTR [esi+0x23]
  4128ba:	pop    edx
  4128bb:	sub    DWORD PTR [ebp-0x28],esp
  4128be:	das    
  4128bf:	sub    ebp,edx
  4128c1:	pop    eax
  4128c2:	clc    
  4128c3:	dec    edi
  4128c4:	imul   ebp,DWORD PTR ds:0x8cde61aa,0x15
  4128cb:	fisttp DWORD PTR [edi]
  4128cd:	push   ss
  4128ce:	dec    edx
  4128cf:	jns    0x412859
  4128d1:	out    0x5,al
  4128d3:	xchg   ecx,eax
  4128d4:	and    DWORD PTR [ebx+edx*4-0x3324204b],eax
  4128db:	ins    DWORD PTR es:[edi],dx
  4128dc:	ins    DWORD PTR es:[edi],dx
  4128dd:	in     al,0xb5
  4128df:	and    DWORD PTR [edx-0x40],ebp
  4128e2:	pushf  
  4128e3:	outs   dx,BYTE PTR ds:[esi]
  4128e4:	xor    DWORD PTR [edx+0x5488293c],0x32
  4128eb:	shr    edi,cl
  4128ed:	lds    esp,FWORD PTR [ebp-0x23]
  4128f0:	fst    DWORD PTR [esi-0x4bf940d5]
  4128f6:	sbb    DWORD PTR [ecx+0x369112f6],ebx
  4128fc:	mov    edi,0x43680379
  412901:	int3   
  412902:	lock mov es,WORD PTR [ebp+0x67f85503]
  412909:	mov    bl,0xb2
  41290b:	add    DWORD PTR [esi],ebp
  41290d:	sbb    bl,0xbd
  412910:	xlat   BYTE PTR ds:[ebx]
  412911:	lea    esi,[ecx]
  412913:	add    al,0x3f
  412915:	cld    
  412916:	inc    ebx
  412917:	retfw  
  412919:	sahf   
  41291a:	cmp    DWORD PTR [ebx-0x64ec250d],0xffffff8d
  412921:	push   esi
  412922:	int3   
  412923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412924:	inc    ebp
  412925:	int    0xbd
  412927:	or     eax,0x1a
  41292a:	es in  eax,dx
  41292c:	sbb    edx,ebp
  41292e:	push   ds
  41292f:	repnz mov bh,0xa8
  412932:	push   esi
  412933:	dec    ebp
  412934:	mov    ss:0xa3917430,eax
  41293a:	fsub   DWORD PTR [ebx]
  41293c:	adc    edx,DWORD PTR [esi+eiz*8]
  41293f:	(bad)  
  412940:	ins    BYTE PTR es:[edi],dx
  412941:	or     eax,0xabe785e4
  412946:	jmp    0x412941
  412948:	loope  0x412933
  41294a:	adc    eax,esi
  41294c:	xchg   ebp,eax
  41294d:	inc    ebx
  41294e:	sub    eax,0x88588644
  412953:	dec    edi
  412954:	dec    eax
  412955:	cmp    al,0x9f
  412957:	stos   DWORD PTR es:[edi],eax
  412958:	shl    BYTE PTR [edi-0x57],cl
  41295b:	cmp    DWORD PTR [edi],ebx
  41295d:	rol    BYTE PTR [edi],cl
  41295f:	mov    ds:0x1be620dc,eax
  412964:	call   0xe291:0xc9aeac2f
  41296b:	dec    edx
  41296c:	rol    ebx,1
  41296e:	dec    ecx
  41296f:	mov    al,0xdd
  412971:	mov    dl,0xb4
  412973:	jno    0x4129f1
  412975:	cmp    DWORD PTR [edi-0x7],edi
  412978:	inc    edi
  412979:	jg     0x41294c
  41297b:	shl    ebx,1
  41297d:	jae    0x412943
  41297f:	mov    BYTE PTR [edx-0x65],al
  412982:	push   ax
  412984:	adc    al,0x33
  412986:	lods   al,BYTE PTR ds:[esi]
  412987:	inc    ebx
  412988:	mov    dl,0xf9
  41298a:	and    ah,BYTE PTR [ebx+esi*2+0x7f]
  41298e:	xor    eax,edi
  412990:	or     bl,BYTE PTR [ecx]
  412992:	aaa    
  412993:	add    esp,DWORD PTR [esi-0x5e]
  412996:	mov    ebp,0x462b20f9
  41299b:	inc    edx
  41299c:	outs   dx,DWORD PTR ds:[esi]
  41299d:	pop    ecx
  41299e:	mov    ds:0x8bbcbb4f,eax
  4129a3:	nop
  4129a4:	pop    ebp
  4129a5:	mov    bh,0x39
  4129a7:	xor    ebp,DWORD PTR [edx]
  4129a9:	pop    esi
  4129aa:	jle    0x4129c0
  4129ac:	int3   
  4129ad:	mov    edi,0xd3eacc2d
  4129b2:	lds    ebx,FWORD PTR [edx+0x64]
  4129b5:	lds    edx,FWORD PTR [ecx]
  4129b7:	mov    ds,WORD PTR [esi]
  4129b9:	or     ecx,DWORD PTR [ecx+0x55cc7aee]
  4129bf:	xlat   BYTE PTR ds:[ebx]
  4129c0:	xchg   bh,bh
  4129c2:	xchg   ebp,eax
  4129c3:	out    0xd6,al
  4129c5:	cmp    edx,DWORD PTR [ebx+0x3152149c]
  4129cb:	dec    ebx
  4129cc:	and    DWORD PTR [eax],0x64c1ce07
  4129d2:	out    dx,eax
  4129d3:	scas   al,BYTE PTR es:[edi]
  4129d4:	or     al,0x8d
  4129d6:	pop    ecx
  4129d7:	test   eax,0x828c2e19
  4129dc:	aad    0x9e
  4129de:	fwait
  4129df:	xchg   ebp,eax
  4129e0:	cmp    eax,0xda0cd8c2
  4129e5:	clc    
  4129e6:	jge    0x4129a0
  4129e8:	push   ecx
  4129e9:	xchg   ebp,eax
  4129ea:	cmp    BYTE PTR [esp+edi*4],al
  4129ed:	rcl    DWORD PTR [ecx-0x6],cl
  4129f0:	int3   
  4129f1:	mov    al,gs:0x58a88af6
  4129f7:	int3   
  4129f8:	dec    edi
  4129f9:	add    ch,dl
  4129fb:	xchg   DWORD PTR [esi+0x42],eax
  4129fe:	cmp    dl,ah
  412a00:	mov    eax,ds:0x86a0e0de
  412a05:	pop    eax
  412a06:	xor    cl,bh
  412a08:	cwde   
  412a09:	repz push 0x39994639
  412a0f:	jle    0x412a52
  412a11:	fisub  DWORD PTR [edx-0x3a]
  412a14:	mov    al,0x44
  412a16:	jnp    0x412a93
  412a18:	jne    0x4129fe
  412a1a:	mov    al,ds:0x55d811cc
  412a1f:	cmp    BYTE PTR [ebx-0x1e],dl
  412a22:	popa   
  412a23:	xchg   ecx,eax
  412a24:	ret    
  412a25:	dec    eax
  412a26:	cmp    ebx,ebx
  412a28:	in     al,0x4c
  412a2a:	ret    0x2a18
  412a2d:	ds xchg ebx,eax
  412a2f:	sbb    eax,0xd2d0c278
  412a34:	inc    edx
  412a35:	aas    
  412a36:	sub    ch,BYTE PTR [ebp+0x6952cae8]
  412a3c:	mov    bl,0xb2
  412a3e:	out    0xcd,eax
  412a40:	adc    al,0x7
  412a42:	dec    edx
  412a43:	mov    al,0x47
  412a45:	add    dl,dh
  412a47:	push   0x7bcbbdfc
  412a4c:	pop    ss
  412a4d:	xchg   ebx,eax
  412a4e:	sub    eax,0x1f0c2b4b
  412a53:	sub    eax,0xfe25dc3
  412a58:	dec    esi
  412a59:	loop   0x412aae
  412a5b:	xchg   esp,eax
  412a5c:	fs push cs
  412a5e:	cld    
  412a5f:	pop    ebp
  412a60:	push   ebx
  412a61:	addr16 adc eax,0xffac51ac
  412a67:	xor    edx,esi
  412a69:	add    al,0x7c
  412a6b:	das    
  412a6c:	mov    al,0x51
  412a6e:	(bad)  
  412a6f:	into   
  412a70:	xor    BYTE PTR [edx+0x241ac0b8],dl
  412a76:	scas   al,BYTE PTR es:[edi]
  412a77:	(bad)  
  412a79:	pop    DWORD PTR [ecx]
  412a7b:	cmp    ch,BYTE PTR es:[ebx-0x4a]
  412a7f:	sub    BYTE PTR [esi+0x5d173e6],dh
  412a85:	sbb    eax,0xe20bbebe
  412a8a:	and    eax,0xd94107b6
  412a8f:	xchg   esp,eax
  412a90:	test   al,0xc2
  412a92:	mov    ds:0xea077992,al
  412a97:	cmp    ah,BYTE PTR [ecx+0x1e1941b8]
  412a9d:	test   al,0xbe
  412a9f:	(bad)  
  412aa1:	mov    bh,BYTE PTR [esp+ecx*8+0x2b]
  412aa5:	ja     0x412a2e
  412aa7:	ins    BYTE PTR es:[edi],dx
  412aa8:	cmp    eax,0xa07a767e
  412aad:	mov    ebx,es
  412aaf:	popf   
  412ab0:	push   es
  412ab1:	jb     0x412a9b
  412ab3:	cmp    BYTE PTR [edx],cl
  412ab5:	or     edx,DWORD PTR [edi]
  412ab7:	push   0x3b760272
  412abc:	fistp  QWORD PTR [ebx]
  412abe:	sub    DWORD PTR [ecx-0x77],0x5e
  412ac2:	cmp    ebp,edi
  412ac4:	mov    bh,0xc7
  412ac6:	sub    esp,DWORD PTR ds:0xf889c883
  412acc:	and    DWORD PTR [esi],esp
  412ace:	ret    
  412acf:	imul   ecx,DWORD PTR [ebx],0x20fcf3f9
  412ad5:	rcr    DWORD PTR [ebx+0x17],0x22
  412ad9:	jmp    0x412b08
  412adb:	jb     0x412ae8
  412add:	shr    DWORD PTR [ecx-0x48dfac94],0xcb
  412ae4:	dec    eax
  412ae5:	lea    esp,[ecx+eiz*4-0x29]
  412ae9:	lods   al,BYTE PTR ds:[esi]
  412aea:	mov    eax,0xe6cc7866
  412aef:	inc    eax
  412af0:	outs   dx,DWORD PTR ds:[esi]
  412af1:	into   
  412af2:	out    dx,al
  412af3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412af4:	mov    esp,0xd9674f24
  412af9:	(bad)  
  412afa:	jne    0x412aa5
  412afc:	lahf   
  412afd:	jb     0x412aef
  412aff:	cwde   
  412b00:	jl     0x412b4c
  412b02:	in     eax,0xe2
  412b04:	add    dh,al
  412b06:	frstor [edx-0x703ae1d7]
  412b0c:	cdq    
  412b0d:	mov    bh,0x1b
  412b0f:	(bad)  
  412b10:	jmp    0x412abf
  412b12:	mov    esp,0x943b015a
  412b17:	(bad)
  412b1a:	push   0x6d
  412b1c:	inc    ecx
  412b1d:	lods   eax,DWORD PTR ds:[esi]
  412b1e:	pushf  
  412b1f:	inc    edi
  412b20:	sub    eax,0xedbc1b1d
  412b25:	or     eax,0x9ee688b6
  412b2a:	jge    0x412b57
  412b2c:	repz inc edx
  412b2e:	test   dl,0x8
  412b31:	repnz inc ecx
  412b33:	mov    eax,ds:0xa971790a
  412b38:	dec    eax
  412b39:	mov    bh,BYTE PTR [ebx+0x7e]
  412b3c:	or     bl,BYTE PTR [ebx+ebp*8+0xb]
  412b40:	mov    ds:0xecba3d9f,al
  412b45:	sub    DWORD PTR ds:0x66410839,ecx
  412b4c:	xlat   BYTE PTR ds:[ebx]
  412b4d:	push   0x90b7ac0
  412b52:	shl    esi,1
  412b54:	dec    BYTE PTR [esi-0x56ecc452]
  412b5a:	sbb    DWORD PTR [ecx-0x12],0x3d
  412b5e:	dec    ecx
  412b5f:	dec    esp
  412b60:	scas   al,BYTE PTR es:[edi]
  412b61:	std    
  412b62:	mov    cl,0xd0
  412b64:	stc    
  412b65:	fisubr DWORD PTR ds:0x3a242d60
  412b6b:	ror    BYTE PTR [eax+0x3e4d7609],0x43
  412b72:	xor    al,0x36
  412b74:	push   es
  412b75:	shl    DWORD PTR [ecx+0x13],1
  412b78:	stc    
  412b79:	add    edi,ebp
  412b7b:	mov    esi,0x1359bc84
  412b80:	xor    ebx,DWORD PTR [ebp-0x3d]
  412b83:	mov    ah,0x29
  412b85:	add    BYTE PTR [esi],al
  412b87:	and    BYTE PTR [esi],al
  412b89:	das    
  412b8a:	les    ebx,FWORD PTR [esi-0x3557fcf]
  412b90:	data16 fiadd WORD PTR [esi+0x5]
  412b94:	idiv   BYTE PTR [edi-0x42aa9623]
  412b9a:	hlt    
  412b9b:	pop    eax
  412b9c:	xor    eax,0x9f67446d
  412ba1:	xor    eax,0xa6acfd06
  412ba6:	jb     0x412b74
  412ba8:	cmp    ebp,DWORD PTR [edi+0x7ad2b57e]
  412bae:	lahf   
  412baf:	or     BYTE PTR [edi+0x4f],ch
  412bb2:	mov    ds:0x1a0174c,eax
  412bb7:	dec    ecx
  412bb8:	outs   dx,DWORD PTR ds:[esi]
  412bb9:	mov    edi,0x97e58167
  412bbe:	add    dl,ah
  412bc0:	das    
  412bc1:	bound  esi,QWORD PTR [ecx+0x5d]
  412bc4:	and    DWORD PTR [ecx],ecx
  412bc6:	sbb    ah,BYTE PTR [esi+edi*8-0x68]
  412bca:	sub    eax,0xed8963d6
  412bcf:	test   BYTE PTR [ebx],cl
  412bd1:	jecxz  0x412b65
  412bd3:	(bad)  
  412bd4:	pop    edi
  412bd5:	xor    bh,al
  412bd7:	mov    bh,0x55
  412bd9:	fcom   QWORD PTR [edi-0xa]
  412bdc:	or     ecx,DWORD PTR [edi]
  412bde:	jl     0x412c0f
  412be0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412be1:	xchg   ebx,eax
  412be2:	jge    0x412c2b
  412be4:	sbb    eax,0x34edf957
  412be9:	lods   eax,DWORD PTR ds:[esi]
  412bea:	sbb    BYTE PTR [edx+esi*8+0x2a],0x7c
  412bef:	add    al,0xdb
  412bf1:	(bad)
  412bf5:	rcl    DWORD PTR [ebp-0x8],cl
  412bf8:	and    al,BYTE PTR [ebx+ebp*1+0x63]
  412bfc:	inc    ebx
  412bfd:	fimul  DWORD PTR [ecx]
  412bff:	retf   
  412c00:	adc    cl,bh
  412c02:	dec    ebp
  412c03:	sbb    eax,0xe627719a
  412c08:	shl    BYTE PTR [ebp-0x47],cl
  412c0b:	pop    edx
  412c0c:	in     al,dx
  412c0d:	sbb    ch,dl
  412c0f:	jo     0x412bd3
  412c11:	fcom   QWORD PTR [ebx-0x6074bcc7]
  412c17:	stos   DWORD PTR es:[edi],eax
  412c18:	dec    esp
  412c19:	lods   al,BYTE PTR ds:[esi]
  412c1a:	xchg   edi,eax
  412c1b:	inc    esp
  412c1c:	or     edi,edx
  412c1e:	dec    esp
  412c1f:	push   es
  412c20:	push   ebx
  412c21:	pop    esi
  412c22:	dec    esp
  412c23:	push   ds
  412c24:	inc    ebx
  412c25:	and    BYTE PTR [ebp-0x3faea5d2],ah
  412c2b:	inc    ebx
  412c2c:	loop   0x412c95
  412c2e:	lea    ebp,[ebp+0x48]
  412c31:	xor    DWORD PTR [eax],esi
  412c33:	js     0x412c1d
  412c35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c36:	cmp    DWORD PTR [ecx+0x69409400],edx
  412c3c:	add    BYTE PTR [ebx+0x6f82e826],0x80
  412c43:	repz out 0x17,al
  412c46:	xor    ch,BYTE PTR [edi-0x37405a5e]
  412c4c:	pop    edx
  412c4d:	xor    eax,0xcbe998ae
  412c52:	loop   0x412c6e
  412c54:	adc    eax,0x1785b2a
  412c59:	pop    esi
  412c5a:	(bad)  
  412c5b:	jno    0x412c10
  412c5d:	cli    
  412c5e:	xchg   ecx,eax
  412c5f:	int3   
  412c60:	xor    al,0x7a
  412c62:	mov    ebx,DWORD PTR [ecx+edi*2+0x1699caf0]
  412c69:	(bad)  
  412c6a:	fadd   QWORD PTR [ecx-0x3d8fa693]
  412c70:	ins    DWORD PTR es:[edi],dx
  412c71:	add    bl,BYTE PTR [ebx-0x3c]
  412c74:	adc    ecx,esi
  412c76:	mov    al,0xba
  412c78:	jno    0x412c5e
  412c7a:	mov    DWORD PTR [edx+0x572d6ca2],edx
  412c80:	inc    eax
  412c81:	jp     0x412c10
  412c83:	push   eax
  412c84:	xchg   edi,eax
  412c85:	sub    ebp,esp
  412c87:	inc    BYTE PTR [esi]
  412c89:	xor    BYTE PTR [eax+0x338291a7],ah
  412c8f:	ins    DWORD PTR es:[edi],dx
  412c90:	jmp    0x6ad6eb0d
  412c95:	inc    esp
  412c96:	xchg   BYTE PTR [edx+ecx*4],dl
  412c99:	jp     0x412d03
  412c9b:	xlat   BYTE PTR ds:[ebx]
  412c9c:	retf   
  412c9d:	idiv   DWORD PTR [ebx-0x7e]
  412ca0:	loope  0x412c32
  412ca2:	scas   al,BYTE PTR es:[edi]
  412ca3:	aad    0xb6
  412ca5:	push   0x72
  412ca7:	scas   al,BYTE PTR es:[edi]
  412ca8:	jl     0x412c53
  412caa:	shr    DWORD PTR [ebx+edx*1+0x20],1
  412cae:	ror    DWORD PTR [ebx-0x33],0xac
  412cb2:	rol    BYTE PTR [ecx],cl
  412cb4:	rol    bl,cl
  412cb6:	je     0x412c3e
  412cb8:	mov    esp,0x469f9914
  412cbd:	inc    ebp
  412cbe:	je     0x412cf4
  412cc0:	adc    eax,0x6b8beea2
  412cc5:	or     bh,dl
  412cc7:	jo     0x412ca4
  412cc9:	pop    ds
  412cca:	dec    esi
  412ccb:	loope  0x412d30
  412ccd:	mov    cl,0xe9
  412ccf:	imul   ebp,ebp,0x74784447
  412cd5:	fsub   DWORD PTR [ebp-0x46]
  412cd8:	sub    al,0xeb
  412cda:	ins    BYTE PTR es:[edi],dx
  412cdb:	inc    ebx
  412cdc:	sar    DWORD PTR [eax+0x66745c60],0x94
  412ce3:	out    0xad,eax
  412ce5:	and    al,0x97
  412ce7:	cmp    eax,0xfb2d7129
  412cec:	out    0x6f,al
  412cee:	outs   dx,DWORD PTR ds:[esi]
  412cef:	out    dx,al
  412cf0:	cmp    dh,BYTE PTR [eax+0x49]
  412cf3:	aaa    
  412cf4:	pop    es
  412cf5:	std    
  412cf6:	dec    ebx
  412cf7:	xchg   esp,eax
  412cf8:	je     0x412ce7
  412cfa:	inc    ebp
  412cfb:	sub    BYTE PTR [edx-0x30],0xfd
  412cff:	scas   eax,DWORD PTR es:[edi]
  412d00:	mov    eax,0xdb063454
  412d05:	push   esp
  412d06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d07:	loopne 0x412ce4
  412d09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d0a:	ficom  WORD PTR [ebx-0x7a]
  412d0d:	jne    0x412cf3
  412d0f:	addr16 popa 
  412d11:	rol    edi,1
  412d13:	and    ah,BYTE PTR [esp+edx*2-0x4a3f9fe9]
  412d1a:	adc    dl,0x75
  412d1d:	cmp    dl,BYTE PTR ds:0x2bc61d3e
  412d23:	jo     0x412d5c
  412d25:	rcpps  xmm2,XMMWORD PTR [eax-0x7a]
  412d29:	sbb    al,0x4f
  412d2b:	push   eax
  412d2c:	popa   
  412d2d:	mov    esp,0xca4d6967
  412d32:	aaa    
  412d33:	mov    WORD PTR [ebp+0x69c17491],?
  412d39:	stos   BYTE PTR es:[edi],al
  412d3a:	cdq    
  412d3b:	mov    bh,bh
  412d3d:	in     eax,0x2d
  412d3f:	add    al,0xe3
  412d41:	and    al,0x2c
  412d43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d44:	(bad)  
  412d45:	(bad)  [edi]
  412d47:	call   0x7faf:0x7a754658
  412d4e:	pop    esi
  412d4f:	xchg   esi,eax
  412d50:	or     al,0xa4
  412d52:	push   0xffffffb7
  412d54:	sub    edi,edi
  412d56:	xchg   esi,eax
  412d57:	push   ss
  412d58:	push   esp
  412d59:	(bad)
  412d5d:	sub    ah,BYTE PTR [ebp+0x15dcfaea]
  412d63:	sbb    eax,0xc219bb46
  412d68:	into   
  412d69:	iret   
  412d6a:	add    al,0xf
  412d6c:	cli    
  412d6d:	outs   dx,DWORD PTR ds:[esi]
  412d6e:	in     al,dx
  412d6f:	addr16 nop
  412d71:	mov    ah,0x34
  412d73:	cld    
  412d74:	push   eax
  412d75:	mov    edx,0x74530f0b
  412d7a:	loopne 0x412d68
  412d7c:	pop    ss
  412d7d:	dec    ebp
  412d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d7f:	mov    eax,ds:0xb8c38ff
  412d84:	sbb    eax,0xece75a00
  412d89:	push   ss
  412d8a:	push   ss
  412d8b:	ja     0x412d12
  412d8d:	cmp    cl,bh
  412d8f:	or     DWORD PTR [esi-0x63],esi
  412d92:	push   ecx
  412d93:	and    al,0x48
  412d95:	jl     0x412de2
  412d97:	test   dh,ch
  412d99:	pop    ebp
  412d9a:	ins    DWORD PTR es:[edi],dx
  412d9b:	fist   WORD PTR [edi+0x6e8b08d7]
  412da1:	xchg   esi,eax
  412da2:	cmp    esp,DWORD PTR [edx+0x24]
  412da5:	clc    
  412da6:	xor    eax,0x802fa29e
  412dab:	inc    edi
  412dac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dad:	pusha  
  412dae:	loop   0x412dac
  412db0:	cmp    ecx,0x6bc5ba2c
  412db6:	(bad)  
  412db7:	xor    WORD PTR [ebx-0x3c],dx
  412dbb:	pop    esi
  412dbc:	dec    esi
  412dbd:	loopne 0x412e27
  412dbf:	push   esi
  412dc0:	add    eax,0x94d7c92d
  412dc5:	xchg   ecx,eax
  412dc6:	jno    0x412e29
  412dc8:	ror    BYTE PTR [edx+0x398572d6],cl
  412dce:	xchg   edi,eax
  412dcf:	(bad)  [edi+0x694770e6]
  412dd5:	add    al,0x58
  412dd7:	jnp    0x412d8d
  412dd9:	imul   esp,DWORD PTR [eax+0x34eb80],0xffffffe8
  412de0:	aas    
  412de1:	jp     0x412dde
  412de3:	mov    eax,0x1579fb28
  412de8:	xchg   ebx,eax
  412de9:	push   ecx
  412dea:	cli    
  412deb:	pop    esp
  412dec:	sahf   
  412ded:	and    DWORD PTR [esi-0x4f],0xfffffffa
  412df1:	(bad)
  412df5:	mov    ch,0x92
  412df7:	in     eax,dx
  412df8:	adc    eax,0x2a0b410a
  412dfd:	ror    DWORD PTR [ebx-0x3a],0xbb
  412e01:	dec    edi
  412e02:	mov    eax,0xd445d94d
  412e07:	outs   dx,BYTE PTR ds:[esi]
  412e08:	jle    0x412e2e
  412e0a:	dec    ebp
  412e0b:	call   0xee670037
  412e10:	fmul   DWORD PTR [edi+0x2c]
  412e13:	sbb    al,0x53
  412e15:	dec    edx
  412e16:	dec    edx
  412e17:	ss fucomip st,st(4)
  412e1a:	cld    
  412e1b:	sti    
  412e1c:	pushf  
  412e1d:	jecxz  0x412dbb
  412e1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e20:	hlt    
  412e21:	xchg   BYTE PTR [ebx+0x2d724c4d],bl
  412e27:	inc    ebx
  412e28:	js     0x412e4b
  412e2a:	popa   
  412e2b:	fwait
  412e2c:	add    al,0xe0
  412e2e:	es sahf 
  412e30:	cmc    
  412e31:	aam    0xfe
  412e33:	sahf   
  412e34:	sub    DWORD PTR [ecx],edi
  412e36:	mov    ds:0xf0a79f69,al
  412e3b:	xor    al,0x22
  412e3d:	xor    eax,0xc34ffd00
  412e42:	adc    al,0xa0
  412e44:	xor    BYTE PTR [ebx+0x16924291],0x2e
  412e4b:	sbb    bh,BYTE PTR [edx+0xe24a728]
  412e51:	stos   DWORD PTR es:[edi],eax
  412e52:	sub    al,BYTE PTR [esi-0x16837290]
  412e58:	out    0x2e,al
  412e5a:	jmp    0x730e860c
  412e5f:	and    eax,0xaaa84f52
  412e64:	jg     0x412ec8
  412e66:	jle    0x412e43
  412e68:	aas    
  412e69:	push   es
  412e6a:	push   edi
  412e6b:	call   0x4106:0x14f077cb
  412e72:	pop    ss
  412e73:	pop    edx
  412e74:	hlt    
  412e75:	ror    BYTE PTR [ebx+0x7e],cl
  412e78:	or     DWORD PTR [edi],0xffffffcd
  412e7b:	sbb    eax,eax
  412e7d:	mov    ah,0x26
  412e7f:	mov    ch,0x13
  412e81:	aam    0xe1
  412e83:	pop    esp
  412e84:	nop
  412e85:	sahf   
  412e86:	aaa    
  412e87:	jb     0x412e7e
  412e89:	ins    DWORD PTR es:[edi],dx
  412e8a:	push   0x7bfbe571
  412e8f:	jmp    0x655e5a01
  412e94:	aaa    
  412e95:	cmp    BYTE PTR [esi+0x54b8d003],0x7f
  412e9c:	push   ebp
  412e9d:	aaa    
  412e9e:	(bad)  
  412e9f:	out    dx,ax
  412ea1:	test   edi,esp
  412ea3:	repnz popa 
  412ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ea6:	jge    0x412efe
  412ea8:	call   0xebc3:0x3eaa0977
  412eaf:	jmp    0x6090:0x872f8e5e
  412eb6:	dec    edx
  412eb7:	pop    eax
  412eb8:	(bad)
  412ebc:	cmp    bl,ah
  412ebe:	jnp    0x412f39
  412ec0:	retf   
  412ec1:	mov    edx,0xef407115
  412ec6:	sub    edi,DWORD PTR [ebp-0x34]
  412ec9:	pop    ebp
  412eca:	cmp    al,0xde
  412ecc:	xor    ah,BYTE PTR [eax-0x36]
  412ecf:	xchg   BYTE PTR [ecx-0x35de0e5a],bh
  412ed5:	dec    ecx
  412ed6:	cmc    
  412ed7:	dec    edi
  412ed8:	adc    DWORD PTR ds:0x9e084c4f,esp
  412ede:	mov    bl,0xc4
  412ee0:	ror    DWORD PTR [eax-0x305ef656],1
  412ee6:	mov    bl,0x70
  412ee8:	push   esp
  412ee9:	test   BYTE PTR [esi+0x4e],al
  412eec:	aaa    
  412eed:	ds inc ebx
  412eef:	gs jb  0x412f48
  412ef2:	ret    
  412ef3:	or     dl,bh
  412ef5:	mov    dh,0xd3
  412ef7:	and    ebx,DWORD PTR [ebx-0x64c92296]
  412efd:	in     al,dx
  412efe:	fnstenv [edi]
  412f00:	pop    ss
  412f01:	stc    
  412f02:	pop    edx
  412f03:	jno    0x412ee5
  412f05:	jp     0x412f5d
  412f07:	(bad)  
  412f08:	out    0xe8,eax
  412f0a:	in     al,dx
  412f0b:	adc    edx,ecx
  412f0d:	(bad)  
  412f0e:	out    0x84,eax
  412f10:	test   BYTE PTR [esi+ebx*2+0x67711ce7],dh
  412f17:	sub    DWORD PTR [ebp+0x42],ecx
  412f1a:	outs   dx,BYTE PTR ds:[esi]
  412f1b:	cmp    eax,0xaf3dc3ad
  412f20:	xor    DWORD PTR [ebx+0x2f],esp
  412f23:	xchg   edi,eax
  412f24:	pushf  
  412f25:	xlat   BYTE PTR ds:[ebx]
  412f26:	(bad)  
  412f27:	jae    0x412eac
  412f29:	das    
  412f2a:	xor    ebx,DWORD PTR [ecx+edx*1+0x4c]
  412f2e:	hlt    
  412f2f:	sub    DWORD PTR [esi-0x4d7d6c2a],eax
  412f35:	ret    0x1785
  412f38:	xor    esp,ebp
  412f3a:	clc    
  412f3b:	sbb    esp,DWORD PTR ds:0x284dd7b0
  412f41:	mov    WORD PTR [ecx],gs
  412f43:	adc    BYTE PTR ds:0xe1f0a494,bl
  412f49:	shr    ah,1
  412f4b:	and    al,0x91
  412f4d:	xor    al,0x15
  412f4f:	imul   edx,DWORD PTR [edi-0x789b7f1e],0x42
  412f56:	dec    eax
  412f57:	jp     0x412f7e
  412f59:	bound  esi,QWORD PTR [ecx]
  412f5b:	adc    eax,0xc0d83988
  412f60:	inc    BYTE PTR [ecx+0x5]
  412f63:	dec    esp
  412f64:	and    cl,bh
  412f66:	jne    0x412f1e
  412f68:	in     eax,0xdc
  412f6a:	push   ecx
  412f6b:	and    eax,0xd6a92f5f
  412f70:	sub    edi,DWORD PTR [edx+0x61bc29f7]
  412f76:	and    BYTE PTR [ecx+eax*1],bl
  412f79:	xchg   ebp,eax
  412f7a:	inc    ebx
  412f7b:	int3   
  412f7c:	je     0x412f0a
  412f7e:	adc    ecx,ebx
  412f80:	xor    dl,BYTE PTR [ebx+0x2e]
  412f83:	addr16 mov ds:0xdaa,eax
  412f87:	xchg   edx,eax
  412f88:	mov    DWORD PTR [ecx-0x733c150f],edx
  412f8e:	or     bl,dh
  412f90:	adc    al,0x25
  412f92:	push   eax
  412f93:	xchg   dl,bl
  412f95:	jno    0x413009
  412f97:	push   esi
  412f98:	mov    edi,DWORD PTR [ebx+0x3b15a5cc]
  412f9e:	or     BYTE PTR [edx-0x76],al
  412fa1:	sub    BYTE PTR [eax+0x6782dedf],bl
  412fa7:	(bad)  [edx]
  412fa9:	mov    ds:0x437d2308,al
  412fae:	leave  
  412faf:	sbb    cl,BYTE PTR [esi+0x74aa2527]
  412fb5:	mov    ebp,0xe99ffe47
  412fba:	ror    ah,cl
  412fbc:	ds stos DWORD PTR es:[di],eax
  412fbf:	imul   ecx,DWORD PTR [edx],0x681a87db
  412fc5:	sbb    DWORD PTR [eax],esp
  412fc7:	jle    0x413047
  412fc9:	xchg   DWORD PTR [edi],ebx
  412fcb:	add    al,0x1a
  412fcd:	jl     0x412fcb
  412fcf:	gs loope 0x412f86
  412fd2:	xor    DWORD PTR [edx+0x72],ecx
  412fd5:	imul   ebx,edx,0x4e
  412fd8:	sbb    BYTE PTR [edi+0x56],0x86
  412fdc:	fwait
  412fdd:	push   0x2508318f
  412fe2:	jbe    0x412fb6
  412fe4:	jle    0x413031
  412fe6:	sbb    ebx,DWORD PTR [ecx]
  412fe8:	sbb    DWORD PTR [ebx-0x475341d0],eax
  412fee:	rol    DWORD PTR ds:0x1f6dc8c2,0x74
  412ff5:	das    
  412ff6:	dec    edx
  412ff7:	mov    DWORD PTR [ecx+0x6],ebp
  412ffa:	iret   
  412ffb:	bound  ecx,QWORD PTR [edx]
  412ffd:	fcomp  QWORD PTR [ecx-0x68]
  413000:	mov    ch,0xc9
  413002:	push   esp
  413003:	repnz cmc 
  413005:	mov    ebx,0x619d2cbf
  41300a:	sub    BYTE PTR [ebx+0x78],bl
  41300d:	push   ss
  41300e:	cmp    al,cl
  413010:	inc    bh
  413012:	leave  
  413013:	cli    
  413014:	cs out 0x86,al
  413017:	push   cs
  413018:	dec    edx
  413019:	dec    esi
  41301a:	sbb    eax,0xe2a5b9c0
  41301f:	pop    ds
  413020:	imul   ebp,ebp,0xffffffb7
  413023:	adc    eax,DWORD PTR [edx+eiz*1+0x3912c98a]
  41302a:	in     eax,0x4f
  41302c:	test   ebx,ebx
  41302e:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  413030:	xchg   ch,bh
  413032:	pop    esp
  413033:	int3   
  413034:	dec    esi
  413035:	cmp    al,0x2d
  413037:	mov    ah,BYTE PTR [ecx-0x66918c3d]
  41303d:	sti    
  41303e:	icebp  
  41303f:	hlt    
  413040:	adc    ah,0xe7
  413043:	dec    ecx
  413044:	test   eax,0xeb945320
  413049:	sbb    edi,DWORD PTR [esi-0x13ec367a]
  41304f:	pop    esi
  413050:	push   ecx
  413051:	jl     0x41307a
  413053:	mov    DWORD PTR [edi+0x6ad24cf2],esi
  413059:	sbb    BYTE PTR [esi+0x44],dh
  41305c:	ret    0x86a9
  41305f:	aaa    
  413060:	pop    edi
  413061:	mov    esp,0xe8e3096c
  413066:	adc    eax,0x1e20d280
  41306b:	rcl    esp,1
  41306d:	in     al,0x6e
  41306f:	cmp    bh,BYTE PTR [edx+ebp*4+0x1]
  413073:	mov    ds:0xdbf10a56,eax
  413078:	pusha  
  413079:	fdivr  st,st(1)
  41307b:	sub    eax,0xfdd34249
  413080:	test   BYTE PTR [edi+eax*2-0x72d5948c],al
  413087:	inc    ebp
  413088:	pop    ss
  413089:	lods   al,BYTE PTR ds:[esi]
  41308a:	mov    ecx,0xfbcbbb2b
  41308f:	pushf  
  413090:	fldenv [edi+0x21ffa3dc]
  413096:	rcr    BYTE PTR [edx+0x5e],0xc9
  41309a:	pop    eax
  41309b:	xor    al,ah
  41309d:	nop
  41309e:	std    
  41309f:	sub    eax,0x4cec1e33
  4130a4:	fld    DWORD PTR [eax+0x3f5736d3]
  4130aa:	fbstp  TBYTE PTR [eax+0x4389a920]
  4130b0:	ror    BYTE PTR [ecx-0x2d],cl
  4130b3:	faddp  st(4),st
  4130b5:	pushf  
  4130b6:	or     BYTE PTR [edi],bh
  4130b8:	xchg   esp,eax
  4130b9:	in     eax,0x72
  4130bb:	into   
  4130bc:	mov    gs,esp
  4130be:	inc    ebp
  4130bf:	mul    bh
  4130c1:	cs cs clc 
  4130c4:	sub    al,0xa8
  4130c6:	dec    esi
  4130c7:	adc    eax,0x45889b35
  4130cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130cd:	dec    eax
  4130ce:	sbb    DWORD PTR [esi-0x6d],ebx
  4130d1:	das    
  4130d2:	in     eax,0x75
  4130d4:	jecxz  0x41308e
  4130d6:	inc    eax
  4130d7:	xchg   esp,eax
  4130d8:	push   0xd6abeb1d
  4130dd:	mov    esi,0x2f6cec5f
  4130e2:	xor    BYTE PTR [edi+0x46],bl
  4130e5:	punpckhdq mm1,QWORD PTR [eax]
  4130e8:	mov    esp,0x80d2b7ba
  4130ed:	inc    esi
  4130ee:	iret   
  4130ef:	mov    cs,WORD PTR [ebx]
  4130f1:	inc    edi
  4130f2:	mov    esi,0x6c0593d8
  4130f7:	ins    DWORD PTR es:[edi],dx
  4130f8:	mov    al,0x41
  4130fa:	imul   esp,edi,0xffffffb8
  4130fd:	or     eax,ebp
  4130ff:	pusha  
  413100:	xor    ebp,DWORD PTR [ecx]
  413102:	mov    esp,0xb7672649
  413107:	adc    edx,DWORD PTR [ecx-0x79]
  41310a:	daa    
  41310b:	loop   0x4130fd
  41310d:	int    0xf5
  41310f:	shl    DWORD PTR [ecx-0x6c],cl
  413112:	add    ch,BYTE PTR [esi+0x77366e59]
  413118:	push   0x96366287
  41311d:	xor    esi,0x5caeac84
  413123:	nop
  413124:	push   edi
  413125:	dec    edi
  413126:	neg    BYTE PTR [ebx-0x6af8c96f]
  41312c:	mov    ecx,0x5a94974d
  413131:	inc    esp
  413132:	popf   
  413133:	and    DWORD PTR ss:[eax+0x3836102b],esp
  41313a:	sub    ax,0x38cd
  41313e:	aam    0x48
  413140:	fnsave [esi-0x5d2bf348]
  413146:	jp     0x41315a
  413148:	fdivr  DWORD PTR [edi+ecx*2+0x56]
  41314c:	sbb    edx,DWORD PTR [edi-0x36]
  41314f:	jbe    0x413179
  413151:	push   esi
  413152:	or     eax,DWORD PTR [esp+ebx*1-0x55]
  413156:	sub    BYTE PTR [edx+0xe],dl
  413159:	popf   
  41315a:	and    ah,BYTE PTR [ebx+0x1a2ded93]
  413160:	cs push eax
  413162:	cs inc ebp
  413164:	sub    bl,dh
  413166:	dec    esp
  413167:	mov    dl,0xa2
  413169:	jg     0x4130f4
  41316b:	add    DWORD PTR [ebx],eax
  41316d:	shr    DWORD PTR [eax+0x66],1
  413170:	jmp    0x413124
  413172:	popa   
  413173:	xchg   ebx,eax
  413174:	and    al,0x4a
  413176:	cs jb  0x4131a8
  413179:	cmp    BYTE PTR [esi+0x7d],ah
  41317c:	xor    BYTE PTR [ebx],0x4b
  41317f:	lods   al,BYTE PTR ds:[esi]
  413180:	mov    ebx,0xade8b0c9
  413185:	mov    al,0x4e
  413187:	icebp  
  413188:	xchg   edx,eax
  413189:	test   BYTE PTR ds:0x35856bd9,0x70
  413190:	xor    eax,0xa2ee217e
  413195:	clc    
  413196:	xchg   edi,eax
  413197:	stos   DWORD PTR es:[edi],eax
  413198:	icebp  
  413199:	adc    cl,BYTE PTR [esi+0x61d890be]
  41319f:	dec    edi
  4131a0:	shl    DWORD PTR [edx+0x2e828b38],1
  4131a6:	dec    ebx
  4131a7:	jns    0x413198
  4131a9:	mov    ds:0x42fd0624,eax
  4131ae:	adc    BYTE PTR [ebp+0x42],ch
  4131b1:	add    ebx,edi
  4131b3:	arpl   WORD PTR [ecx-0x5eec3dc5],si
  4131b9:	jae    0x413140
  4131bb:	jae    0x413150
  4131bd:	mov    edi,0x623a495a
  4131c2:	sub    ecx,DWORD PTR [eax]
  4131c4:	mov    al,0x1d
  4131c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131c7:	rcl    ch,cl
  4131c9:	add    al,0x70
  4131cb:	ins    DWORD PTR es:[edi],dx
  4131cc:	mov    dl,BYTE PTR [ebx-0x2f834c15]
  4131d2:	fadd   QWORD PTR [edi+esi*4-0x18]
  4131d6:	in     al,0xb1
  4131d8:	pop    DWORD PTR [edi+0x7363e4c1]
  4131de:	xchg   BYTE PTR [esi-0x2f],bl
  4131e1:	sbb    ebp,edi
  4131e3:	pop    es
  4131e4:	sub    eax,0xb950534f
  4131e9:	cmp    ah,0x12
  4131ec:	push   edx
  4131ed:	dec    ecx
  4131ee:	push   esp
  4131ef:	fidivr WORD PTR [ebp+0x1f]
  4131f2:	neg    esi
  4131f4:	adc    DWORD PTR [ebp+0x2f],esi
  4131f7:	mov    WORD PTR [ebp-0x76],ds
  4131fa:	ret    
  4131fb:	js     0x4131c3
  4131fd:	sub    dl,ah
  4131ff:	into   
  413200:	xor    DWORD PTR [esp+edx*1],ebx
  413203:	inc    esi
  413204:	sub    al,0x87
  413206:	das    
  413207:	jb     0x413233
  413209:	pmullw mm0,QWORD PTR [edx+ecx*4+0x6db64cde]
  413211:	mov    edi,ecx
  413213:	lock mov esi,0xd8e0e997
  413219:	sub    al,0x1a
  41321b:	sbb    al,0x20
  41321d:	(bad)  
  41321e:	in     eax,0x80
  413220:	inc    edx
  413221:	bound  ebx,QWORD PTR [edi-0x5a]
  413224:	cmp    ah,bh
  413226:	loopne 0x4131e2
  413228:	lock pop ebp
  41322a:	inc    ebx
  41322b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41322c:	out    dx,eax
  41322d:	inc    eax
  41322e:	mov    ecx,0xd981ae3a
  413233:	mov    ah,0x5e
  413235:	addr16 data16 (bad) 
  413238:	mov    eax,ds:0x52193937
  41323d:	or     DWORD PTR [ebx],0x1b
  413240:	sahf   
  413241:	out    0x79,al
  413243:	(bad)  
  413245:	lds    edi,FWORD PTR [ebx+0x2c118104]
  41324b:	jae    0x41328b
  41324d:	arpl   WORD PTR [edi-0x2fd7bb36],si
  413253:	push   ebx
  413254:	(bad)  
  413255:	arpl   bx,cx
  413257:	(bad)  
  413258:	mov    dl,0xad
  41325a:	stc    
  41325b:	shl    DWORD PTR [eax+edx*2+0x54],0x20
  413260:	mov    esp,DWORD PTR [ebp+eax*2-0x77]
  413264:	jmp    0x413243
  413266:	inc    esp
  413267:	aas    
  413268:	hlt    
  413269:	pop    ss
  41326a:	push   0x21276f62
  41326f:	cdq    
  413270:	xchg   DWORD PTR [ebp+0x5c],edi
  413273:	ret    0x9cf0
  413276:	arpl   WORD PTR [esi+0x7c],si
  413279:	test   al,0xd7
  41327b:	push   ebx
  41327c:	loope  0x4132a6
  41327e:	(bad)  
  41327f:	out    dx,al
  413280:	fbstp  TBYTE PTR [ebx+ebp*8]
  413283:	leave  
  413284:	sub    al,0x8a
  413286:	mov    esi,0x8ec01944
  41328b:	lds    esi,FWORD PTR [ebx]
  41328d:	push   edi
  41328e:	add    ch,dh
  413290:	inc    esi
  413291:	in     eax,dx
  413292:	jae    0x4132a2
  413294:	mov    WORD PTR [eax+0x2a],fs
  413297:	retf   
  413298:	jo     0x413318
  41329a:	xchg   esp,eax
  41329b:	sbb    esi,DWORD PTR [ecx+0xf]
  41329e:	in     eax,0x67
  4132a0:	pop    ecx
  4132a1:	mov    edi,DWORD PTR [eax-0x10]
  4132a4:	push   esi
  4132a5:	fsubr  st(5),st
  4132a7:	out    0x73,eax
  4132a9:	sub    bh,BYTE PTR [esi-0xbedecb5]
  4132af:	push   edx
  4132b0:	stos   BYTE PTR es:[edi],al
  4132b1:	pusha  
  4132b2:	gs mov ebp,0xd9048c96
  4132b8:	js     0x41330d
  4132ba:	es cs (bad) 
  4132bd:	and    BYTE PTR [ebx+0x7f],0x67
  4132c1:	adc    BYTE PTR [edi-0x35db877e],bl
  4132c7:	cmc    
  4132c8:	fwait
  4132c9:	mov    bh,BYTE PTR [ecx-0x17]
  4132cc:	call   FWORD PTR [ecx-0x16a0973a]
  4132d2:	jae    0x4132ab
  4132d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132d5:	data16 loope 0x413342
  4132d8:	mov    esp,0x94abf911
  4132dd:	mov    esi,0x861dd551
  4132e2:	xchg   esi,eax
  4132e3:	push   ebp
  4132e4:	sbb    edx,ebx
  4132e6:	push   edx
  4132e7:	aas    
  4132e8:	jmp    0x4132e0
  4132ea:	add    bh,BYTE PTR [ecx]
  4132ec:	shl    eax,0xed
  4132ef:	pop    esp
  4132f0:	cmp    DWORD PTR [edx],ebp
  4132f2:	in     al,dx
  4132f3:	pop    eax
  4132f4:	xor    BYTE PTR [ecx+0x2d],cl
  4132f7:	loope  0x41329b
  4132f9:	mov    gs,WORD PTR [eax]
  4132fb:	movhps QWORD PTR [ebx-0x65],xmm4
  4132ff:	(bad)  
  413300:	loopne 0x4132ca
  413302:	ret    0xb474
  413305:	sbb    eax,0xc124f593
  41330a:	fiadd  WORD PTR [esi+0x27]
  41330d:	mov    BYTE PTR [ebx],dl
  41330f:	xchg   edx,eax
  413310:	xchg   esi,eax
  413311:	rol    BYTE PTR [ecx],1
  413313:	ss push cs
  413315:	jmp    0x413370
  413317:	or     al,0xf6
  413319:	push   edx
  41331a:	mov    bh,0x21
  41331c:	scas   al,BYTE PTR es:[edi]
  41331d:	pop    esp
  41331e:	dec    DWORD PTR [ecx+0x67]
  413321:	fist   DWORD PTR [esp+edx*1-0x69398841]
  413328:	loopne 0x413394
  41332a:	(bad)  
  41332c:	dec    edx
  41332d:	pop    edx
  41332e:	push   ebx
  41332f:	xchg   esp,eax
  413330:	jns    0x41336a
  413332:	adc    eax,0xd3d7f9d8
  413337:	loope  0x4132bb
  413339:	sahf   
  41333a:	pop    ebp
  41333b:	fisubr DWORD PTR [ebx+eiz*8+0x6d]
  41333f:	xor    DWORD PTR [ebx],ebx
  413341:	jbe    0x413391
  413343:	xor    DWORD PTR [edi],edx
  413345:	sub    eax,DWORD PTR [edi+eiz*2-0x2cd91792]
  41334c:	and    eax,0x46cc1803
  413351:	es ins BYTE PTR es:[edi],dx
  413353:	and    bl,BYTE PTR [esi+0x608ca237]
  413359:	repnz inc esi
  41335b:	xor    al,0x2f
  41335d:	retf   
  41335e:	das    
  41335f:	and    ecx,DWORD PTR [eax-0x72297d3]
  413365:	data16 rcr ch,1
  413368:	sahf   
  413369:	push   ecx
  41336a:	fstp   QWORD PTR [eax+0x5339a3f6]
  413370:	test   al,0xd6
  413372:	icebp  
  413373:	mov    WORD PTR [esi+0x10ea45f4],ss
  413379:	jne    0x4133ed
  41337b:	xchg   edx,ecx
  41337d:	int3   
  41337e:	jge    0x41339f
  413380:	and    eax,0xd3ad8c8a
  413385:	imul   esi,DWORD PTR [eax-0x16],0xffffff91
  413389:	cmp    edi,ebx
  41338b:	shl    BYTE PTR [edx+0x479721e8],cl
  413391:	xor    al,BYTE PTR [eax]
  413393:	repz call DWORD PTR [edi+0x59]
  413397:	pop    eax
  413398:	dec    edx
  413399:	mov    al,0xe9
  41339b:	pop    ds
  41339c:	mov    ebp,0x82955768
  4133a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133a2:	inc    esp
  4133a3:	fstp   QWORD PTR [ecx]
  4133a5:	xchg   edx,eax
  4133a6:	jns    0x413413
  4133a8:	daa    
  4133a9:	mov    ebp,0x543ebd6b
  4133ae:	mov    ch,0xf0
  4133b0:	imul   ecx,DWORD PTR [ecx+0xb],0xffffffdc
  4133b4:	dec    ebx
  4133b5:	mov    ds:0x9e672370,al
  4133ba:	out    0x6c,al
  4133bc:	aas    
  4133bd:	leave  
  4133be:	popa   
  4133bf:	mov    ds,WORD PTR [edi]
  4133c1:	retf   
  4133c2:	call   0x86f03743
  4133c7:	retf   
  4133c8:	int    0x8a
  4133ca:	adc    ebp,DWORD PTR [edi+0x10dae00]
  4133d0:	mov    ah,0x4f
  4133d2:	adc    al,0x71
  4133d4:	aas    
  4133d5:	add    eax,0x67cfb294
  4133da:	in     eax,dx
  4133db:	ins    BYTE PTR es:[edi],dx
  4133dc:	neg    BYTE PTR [edx+0x37]
  4133df:	xor    dh,BYTE PTR [esi+0x368d1161]
  4133e5:	retf   
  4133e6:	jae    0x41345e
  4133e8:	hlt    
  4133e9:	enter  0x6373,0x1a
  4133ed:	adc    al,BYTE PTR [eax]
  4133ef:	cmp    ebp,DWORD PTR [esi+0x6e582750]
  4133f5:	sub    dh,BYTE PTR [esi-0x29ef3a02]
  4133fb:	fs jmp 0x2d1d2882
  413401:	sahf   
  413402:	pusha  
  413403:	and    ah,BYTE PTR [eax-0x3827acd4]
  413409:	fst    QWORD PTR ds:0xf2b14f6b
  41340f:	sub    al,0x19
  413411:	jmp    0xd3897cbe
  413416:	test   DWORD PTR [ebx+0x64c723ad],esp
  41341c:	mov    dh,0x46
  41341e:	adc    al,0x5e
  413420:	cmp    al,0x80
  413422:	imul   ebx,DWORD PTR [edx-0x60],0x7c042479
  413429:	fist   DWORD PTR [ebp+0x5eda1ee9]
  41342f:	inc    eax
  413430:	pop    edi
  413431:	ins    BYTE PTR es:[edi],dx
  413432:	adc    esp,DWORD PTR [edi]
  413434:	loopne 0x4133f8
  413436:	les    edi,FWORD PTR ss:[eax]
  413439:	lds    ecx,FWORD PTR [esi+0x6]
  41343c:	mov    ds,WORD PTR [ecx]
  41343e:	inc    edx
  41343f:	xchg   ecx,eax
  413440:	in     eax,dx
  413441:	sub    BYTE PTR [eax],ah
  413443:	xchg   ecx,eax
  413444:	inc    esp
  413445:	frstor ds:0xc6bf05b6
  41344b:	or     BYTE PTR [esi+0x2c],bh
  41344e:	ds dec ebp
  413450:	stos   BYTE PTR es:[edi],al
  413451:	pop    ds
  413452:	js     0x413477
  413454:	cmp    BYTE PTR [ebx+0x11],dl
  413457:	das    
  413458:	add    eax,0x960c7689
  41345d:	ins    BYTE PTR es:[edi],dx
  41345e:	add    al,0x19
  413461:	mul    bh
  413463:	rcl    eax,1
  413465:	cmp    DWORD PTR [ecx],esp
  413467:	ins    DWORD PTR es:[edi],dx
  413468:	outs   dx,BYTE PTR ds:[esi]
  413469:	sbb    dl,BYTE PTR [eax-0x41]
  41346c:	push   esp
  41346d:	(bad)  
  41346e:	(bad)
  413471:	xchg   edi,eax
  413472:	add    al,0x8b
  413474:	dec    edx
  413475:	icebp  
  413476:	pop    es
  413477:	retf   0x3f48
  41347a:	out    dx,eax
  41347b:	add    DWORD PTR [esi],0x88463ca4
  413481:	(bad)  
  413482:	xor    ah,BYTE PTR [ebp+0x77]
  413485:	add    al,BYTE PTR [eax+ebx*8-0x74]
  413489:	xor    al,0xfd
  41348b:	sar    edx,0x28
  41348e:	stc    
  41348f:	mov    edx,0x60635ceb
  413494:	xchg   edi,eax
  413495:	data16 (bad) 
  413497:	fisttp WORD PTR [edi]
  413499:	ins    BYTE PTR es:[edi],dx
  41349a:	adc    al,0xab
  41349c:	xor    BYTE PTR [eax],0x7a
  41349f:	mov    esi,0x4d5080bb
  4134a4:	pop    ebx
  4134a5:	sub    BYTE PTR [eax-0xa],dl
  4134a8:	arpl   cx,ax
  4134aa:	shl    DWORD PTR [esi+0x39817b07],0x78
  4134b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134b2:	out    0x48,eax
  4134b4:	aam    0x47
  4134b6:	or     eax,0x6e08170b
  4134bb:	mov    bh,0x62
  4134bd:	jmp    DWORD PTR [edi-0x456f0f94]
  4134c3:	stos   DWORD PTR es:[edi],eax
  4134c4:	jecxz  0x4134ce
  4134c6:	test   eax,0x4881ff1f
  4134cb:	and    dh,BYTE PTR [esi]
  4134cd:	cmp    eax,0x7dce1c90
  4134d2:	js     0x4134c0
  4134d4:	and    esp,edx
  4134d6:	fst    QWORD PTR [ecx-0x21ef4ed2]
  4134dc:	xchg   ecx,eax
  4134dd:	sub    dl,BYTE PTR [edx]
  4134df:	pop    es
  4134e0:	ins    DWORD PTR es:[edi],dx
  4134e1:	xlat   BYTE PTR cs:[ebx]
  4134e3:	stc    
  4134e4:	push   ecx
  4134e5:	push   ebx
  4134e6:	adc    al,0x82
  4134e8:	outs   dx,BYTE PTR ds:[esi]
  4134e9:	ja     0x413504
  4134eb:	test   al,0xed
  4134ed:	mov    es,WORD PTR ss:[edi+0x77]
  4134f1:	push   es
  4134f2:	adc    dh,BYTE PTR [edx]
  4134f4:	cld    
  4134f5:	xchg   ecx,eax
  4134f6:	rcr    BYTE PTR [ebp-0x4e],cl
  4134f9:	push   ebp
  4134fa:	jo     0x41354e
  4134fc:	pushf  
  4134fd:	pop    es
  4134fe:	xchg   ebx,eax
  4134ff:	shr    BYTE PTR [ecx],1
  413501:	adc    BYTE PTR [ebp+eax*2+0x2978c63e],bh
  413508:	xor    ebx,edi
  41350a:	jmp    0x4134a7
  41350c:	fcom   QWORD PTR [ebp+0x148c5874]
  413512:	sub    cl,bh
  413514:	cmc    
  413515:	lods   al,BYTE PTR ds:[esi]
  413516:	mov    eax,ds:0xe880f48e
  41351b:	sbb    edi,DWORD PTR [eax]
  41351d:	outs   dx,DWORD PTR ds:[esi]
  41351e:	lods   eax,DWORD PTR ds:[esi]
  41351f:	or     al,0x91
  413521:	icebp  
  413522:	js     0x4134e2
  413524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413525:	pusha  
  413526:	sub    DWORD PTR [eax],eax
  413528:	aad    0xd
  41352a:	loopne 0x41359f
  41352c:	sub    cl,BYTE PTR [edx-0x40dc2e27]
  413532:	(bad)  
  413534:	add    ch,0x5d
  413537:	sub    eax,0x47e53152
  41353c:	xchg   esi,eax
  41353d:	pop    es
  41353e:	(bad)
  413541:	sbb    ch,al
  413543:	into   
  413544:	fadd   QWORD PTR [esp+edx*2]
  413547:	jb     0x413542
  413549:	loopne 0x413554
  41354b:	imul   DWORD PTR [edx]
  41354d:	xchg   ebx,eax
  41354e:	les    edx,FWORD PTR [edx+edx*8-0x6a21b810]
  413555:	mov    ds:0x4e0194c7,al
  41355a:	mov    al,ds:0x6bfbdc11
  41355f:	lock jbe 0x4135da
  413562:	mov    eax,ds:0xb481ffa9
  413567:	ins    DWORD PTR es:[edi],dx
  413568:	cli    
  413569:	push   es
  41356a:	xchg   edx,eax
  41356b:	or     bh,al
  41356d:	add    ebx,ebp
  41356f:	xchg   edi,eax
  413570:	sub    eax,0x9bc016fe
  413575:	push   0x37d02892
  41357a:	jbe    0x413538
  41357c:	sub    bl,0xc0
  41357f:	push   ecx
  413580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413581:	jecxz  0x4135d2
  413583:	hlt    
  413584:	xchg   edi,eax
  413585:	test   DWORD PTR [ebx+esi*2+0x459c9958],0x759a832e
  413590:	pushf  
  413591:	xor    DWORD PTR ds:0x3bc742d8,0x23
  413598:	in     al,0x3d
  41359a:	out    dx,eax
  41359b:	es stc 
  41359d:	xor    ch,bl
  41359f:	xchg   esp,eax
  4135a0:	dec    esi
  4135a1:	push   eax
  4135a2:	jl     0x41358d
  4135a4:	scas   al,BYTE PTR es:[edi]
  4135a5:	xchg   BYTE PTR [eax-0x6f8e27ec],al
  4135ab:	test   al,0x97
  4135ad:	nop
  4135ae:	out    0x67,al
  4135b0:	pushf  
  4135b1:	and    ebx,DWORD PTR [ecx]
  4135b3:	or     DWORD PTR [ecx],edx
  4135b5:	popf   
  4135b6:	leave  
  4135b7:	jmp    0xc74f:0xf269a42d
  4135be:	or     BYTE PTR [ecx],dl
  4135c0:	mov    edx,ecx
  4135c2:	std    
  4135c3:	bound  esp,QWORD PTR [ebx+0x55]
  4135c6:	popf   
  4135c7:	mov    esp,0x8787998b
  4135cc:	mov    eax,ds:0xb13bb57a
  4135d1:	xlat   BYTE PTR ds:[ebx]
  4135d2:	jmp    0x2f47c2b5
  4135d7:	mov    cs:0xfa843156,eax
  4135dd:	jb     0x4135e6
  4135df:	out    dx,al
  4135e0:	ins    DWORD PTR es:[edi],dx
  4135e1:	in     eax,dx
  4135e2:	(bad)  
  4135e3:	jecxz  0x41361f
  4135e5:	call   0x79d5:0x7c25233c
  4135ec:	push   ebp
  4135ed:	push   cs
  4135ee:	cmp    eax,0x91aa2996
  4135f3:	sahf   
  4135f4:	xchg   edx,eax
  4135f5:	dec    edi
  4135f6:	and    ah,BYTE PTR [ebx+eiz*1+0x2057dfa1]
  4135fd:	jo     0x413642
  4135ff:	and    ebp,DWORD PTR [ebp-0x358d8a0c]
  413605:	gs fwait
  413607:	ror    BYTE PTR [esp+ecx*2-0x7d],0x9b
  41360c:	or     dl,BYTE PTR [eax-0x37a18280]
  413612:	or     DWORD PTR [edx],0x75
  413615:	out    dx,al
  413616:	add    esp,DWORD PTR [eax+0xb99ac36]
  41361c:	sub    dl,BYTE PTR [edx]
  41361e:	cmp    BYTE PTR [esp+eax*4-0x7d],bh
  413622:	sbb    dh,BYTE PTR [eax-0xe]
  413625:	mov    bh,0xba
  413627:	ds fs and al,0x1c
  41362b:	outs   dx,DWORD PTR ds:[esi]
  41362c:	ss ja  0x413647
  41362f:	and    ecx,DWORD PTR [edx+0x70b1fa08]
  413635:	mov    BYTE PTR [eax-0x51],ch
  413638:	sub    al,ah
  41363a:	jg     0x4135bf
  41363c:	and    BYTE PTR [esi+0x7e],bh
  41363f:	or     BYTE PTR [ebx+ecx*2+0x6e],dl
  413643:	mov    cl,0x45
  413645:	push   0xffffffaf
  413647:	xlat   BYTE PTR ds:[ebx]
  413648:	mov    gs,eax
  41364a:	add    edx,DWORD PTR [ecx-0x38]
  41364d:	int    0x93
  41364f:	push   cs
  413650:	push   eax
  413651:	xor    BYTE PTR [esi-0x50],bl
  413654:	jns    0x4136aa
  413656:	or     eax,0x8de9aa70
  41365b:	shl    DWORD PTR [esi-0x2c],0x32
  41365f:	push   eax
  413660:	or     eax,0xb5eecf7e
  413665:	mov    eax,ds:0x110e8c1e
  41366a:	push   edi
  41366b:	rcr    BYTE PTR [esi+0x55],cl
  41366e:	stos   DWORD PTR es:[edi],eax
  41366f:	fs push es
  413671:	xlat   BYTE PTR ds:[ebx]
  413672:	mov    al,0x5d
  413674:	mov    ebx,0xda3c1d82
  413679:	sub    BYTE PTR [ebp+0x39],dh
  41367c:	mov    dl,0x34
  41367e:	jmp    ebx
  413680:	mov    ss,WORD PTR [eax+ecx*4]
  413683:	xchg   DWORD PTR [edx+esi*1-0x5037e42b],edi
  41368a:	and    al,dl
  41368c:	xor    al,0x75
  41368e:	sbb    BYTE PTR [esi-0x7a],0xe4
  413692:	sbb    al,0x21
  413694:	fs jbe 0x413684
  413697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413698:	mov    al,ds:0xc4247be0
  41369d:	push   esi
  41369e:	add    bh,BYTE PTR [eax+0x7090145c]
  4136a4:	outs   dx,DWORD PTR ds:[esi]
  4136a5:	pop    edi
  4136a6:	neg    dl
  4136a8:	xor    edi,ebp
  4136aa:	int    0xa2
  4136ac:	fs or  al,0xd6
  4136af:	or     DWORD PTR [ebp-0x46],0x43
  4136b3:	push   es
  4136b4:	pop    ebp
  4136b5:	test   ebp,0xd009d9c9
  4136bb:	mov    edx,0xde5f50e
  4136c0:	icebp  
  4136c1:	and    eax,0xbe6a29ef
  4136c6:	push   ss
  4136c7:	mov    eax,0x17ca182b
  4136cc:	and    al,0x59
  4136ce:	test   BYTE PTR [ebx-0x7],ah
  4136d1:	mov    gs,edx
  4136d3:	pop    ebx
  4136d4:	(bad)
  4136d7:	adc    dh,BYTE PTR [ecx-0x16c2b417]
  4136dd:	aam    0xfa
  4136df:	and    BYTE PTR [ebp+0x36],bl
  4136e2:	bound  eax,QWORD PTR [ecx-0x35]
  4136e5:	stos   DWORD PTR es:[edi],eax
  4136e6:	sbb    eax,0x676d1b4c
  4136eb:	pop    esi
  4136ec:	adc    bl,BYTE PTR [edx-0x77]
  4136ef:	dec    ebx
  4136f0:	sahf   
  4136f1:	ins    BYTE PTR es:[edi],dx
  4136f2:	jo     0x4136a3
  4136f4:	mov    al,ds:0xd2de71c0
  4136f9:	mov    bl,0x6a
  4136fb:	and    DWORD PTR [esi+0x77a42df8],0xa75321a8
  413705:	pop    edi
  413706:	pop    ebp
  413707:	and    edi,0xcf02c9fa
  41370d:	out    dx,eax
  41370e:	xchg   ebp,eax
  41370f:	pop    es
  413710:	fild   QWORD PTR [edx]
  413712:	arpl   dx,bx
  413714:	pop    edx
  413715:	dec    edi
  413716:	aaa    
  413717:	loope  0x41376c
  413719:	push   eax
  41371a:	jecxz  0x4136ea
  41371c:	test   eax,0x321f49c6
  413721:	add    cl,BYTE PTR [ebx+0x38]
  413724:	mov    ds:0x5a17591f,al
  413729:	mov    al,ds:0x65359c40
  41372e:	leave  
  41372f:	sbb    esp,DWORD PTR es:[esi-0x4f820dbf]
  413736:	add    BYTE PTR [ecx+0xd],bl
  413739:	add    al,0xc
  41373b:	push   eax
  41373c:	pushf  
  41373d:	and    ch,bl
  41373f:	dec    ebx
  413740:	call   0x7172cdea
  413745:	fs hlt 
  413747:	sub    dl,BYTE PTR [edx]
  413749:	mov    ah,0x89
  41374b:	outs   dx,BYTE PTR ds:[esi]
  41374c:	xchg   ecx,eax
  41374d:	in     eax,dx
  41374e:	in     eax,0xd4
  413750:	(bad)
  413754:	mov    edx,0x7431eb37
  413759:	dec    edi
  41375a:	scas   al,BYTE PTR es:[edi]
  41375b:	nop    DWORD PTR [ebx]
  41375e:	mov    edi,0x150451cc
  413763:	or     ah,ah
  413765:	mov    bl,0x70
  413767:	push   0x6f2fcb74
  41376c:	push   es
  41376d:	pop    edx
  41376e:	(bad)
  413771:	xor    BYTE PTR [ecx-0x71190313],ah
  413777:	fadd   DWORD PTR [edi]
  413779:	push   ebx
  41377a:	pop    ecx
  41377b:	and    esi,0x9c174f8a
  413781:	sub    BYTE PTR [edi+edi*8],0x3f
  413785:	iret   
  413786:	cdq    
  413787:	xchg   ebp,eax
  413788:	pop    ecx
  413789:	jle    0x413720
  41378b:	xchg   ebp,eax
  41378c:	hlt    
  41378d:	mov    DWORD PTR [esi+0x70],0xef71a146
  413794:	or     eax,0xc63561a8
  413799:	cmc    
  41379a:	add    ecx,DWORD PTR [eax+0x10]
  41379d:	pop    edi
  41379e:	add    DWORD PTR [edi],esp
  4137a0:	cli    
  4137a1:	mov    al,0xcc
  4137a3:	std    
  4137a4:	sub    edx,ebp
  4137a6:	cmp    eax,0x22bbbe8
  4137ab:	or     DWORD PTR [eax],edx
  4137ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137ae:	cmp    al,0x39
  4137b0:	xchg   BYTE PTR [edx-0x6d],al
  4137b3:	je     0x4137e7
  4137b5:	ins    BYTE PTR es:[edi],dx
  4137b6:	fs gs pop ds
  4137b9:	adc    eax,ebx
  4137bb:	loope  0x41382a
  4137bd:	fwait
  4137be:	push   edi
  4137bf:	mov    eax,0xf6e2ace6
  4137c4:	outs   dx,DWORD PTR ds:[esi]
  4137c5:	ds sbb al,0x28
  4137c8:	mov    bl,0x5c
  4137ca:	mov    ds:0x405188e2,al
  4137cf:	dec    edx
  4137d0:	jp     0x4137c6
  4137d2:	stos   DWORD PTR es:[edi],eax
  4137d3:	mov    ch,0x2
  4137d5:	sbb    dh,0x1d
  4137d8:	xchg   DWORD PTR [ebx-0x22],esi
  4137db:	and    DWORD PTR [eax+0x5a7f9c09],edx
  4137e1:	(bad)  ds:0x1365d0c5
  4137e7:	sub    DWORD PTR [edi],ecx
  4137e9:	or     cl,BYTE PTR [eax+0x4e]
  4137ec:	adc    bh,BYTE PTR [eax]
  4137ee:	cdq    
  4137ef:	cmp    edx,ecx
  4137f1:	leave  
  4137f2:	pop    es
  4137f3:	xchg   ebx,eax
  4137f4:	and    eax,0xf23d810d
  4137f9:	mov    ch,0x4d
  4137fb:	or     eax,0x5dc6bcf
  413800:	pop    edx
  413801:	repnz mov bh,0xd
  413804:	cli    
  413805:	in     eax,0x99
  413807:	data16 adc BYTE PTR [ecx],al
  41380a:	test   DWORD PTR ds:0x6bd389f1,edx
  413810:	out    0xff,eax
  413812:	jo     0x413850
  413814:	adc    eax,0x3be85806
  413819:	loope  0x41383e
  41381b:	(bad)  
  41381c:	jne    0x413894
  41381e:	and    bl,bh
  413820:	lods   eax,DWORD PTR ds:[esi]
  413821:	pop    es
  413822:	push   0xd6f1481c
  413827:	(bad)  
  413828:	push   edi
  413829:	cld    
  41382a:	in     eax,0xc9
  41382c:	ret    0x7bba
  41382f:	mov    WORD PTR [ebx-0x6aafe2b2],es
  413835:	mov    eax,ds:0x4b59f305
  41383a:	call   0xd84e4535
  41383f:	pop    es
  413840:	cpuid  
  413842:	jns    0x4137f6
  413844:	inc    edx
  413845:	push   edi
  413846:	imul   ecx,DWORD PTR [ebp-0x52],0x79085e03
  41384d:	das    
  41384e:	cmp    eax,DWORD PTR [ebp+0x5e8ca80e]
  413854:	adc    dh,BYTE PTR [edx]
  413856:	retf   0xa3c4
  413859:	jl     0x413890
  41385b:	(bad)  
  41385c:	dec    ebx
  41385d:	sbb    BYTE PTR [edx-0x10],cl
  413860:	and    cl,dh
  413862:	push   ss
  413863:	push   0xffffffbe
  413865:	leave  
  413866:	and    ecx,0xf
  413869:	jg     0x41381d
  41386b:	lods   eax,DWORD PTR ds:[esi]
  41386c:	jg     0x413851
  41386e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41386f:	(bad)  
  413870:	popf   
  413871:	retf   
  413872:	dec    ebx
  413873:	cmp    BYTE PTR [esi],al
  413875:	std    
  413876:	dec    edi
  413877:	(bad)  
  413878:	and    ecx,ebp
  41387a:	sbb    eax,0xb3373c45
  41387f:	lds    esp,FWORD PTR ds:0xbcfce0d0
  413885:	adc    ah,ah
  413887:	push   esi
  413888:	pusha  
  413889:	pop    eax
  41388a:	pop    esi
  41388b:	stos   BYTE PTR es:[edi],al
  41388c:	sub    edi,eax
  41388e:	add    DWORD PTR [ebx+eiz*8],0x58
  413892:	and    bh,cl
  413894:	adc    cl,BYTE PTR [ecx-0x1]
  413897:	test   BYTE PTR [edi+0x69433dc6],dh
  41389d:	in     al,0xcd
  41389f:	cdq    
  4138a0:	jmp    0xa082:0x7537aa1c
  4138a7:	cmp    al,0x58
  4138a9:	mov    al,0x86
  4138ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138ac:	fsubp  st(1),st
  4138ae:	push   ds
  4138af:	inc    edi
  4138b0:	(bad)  
  4138b1:	fisub  WORD PTR [esi]
  4138b3:	sti    
  4138b4:	sub    dh,BYTE PTR [edx-0x3f]
  4138b7:	xchg   edx,eax
  4138b8:	dec    ebx
  4138b9:	inc    esp
  4138ba:	fmul   DWORD PTR [ebx-0x36]
  4138bd:	adc    al,0x46
  4138bf:	lock dec edi
  4138c1:	das    
  4138c2:	pop    ss
  4138c3:	xlat   BYTE PTR ds:[ebx]
  4138c4:	jmp    0x652fc7ef
  4138c9:	sub    edi,edi
  4138cb:	sbb    eax,0x33c4193b
  4138d0:	cdq    
  4138d1:	cmp    eax,0x7667c040
  4138d6:	sti    
  4138d7:	sti    
  4138d8:	imul   esp,DWORD PTR [ebp+edi*4-0x43],0x524c4c41
  4138e0:	sub    ecx,DWORD PTR [ecx-0x7974ed18]
  4138e6:	aam    0x87
  4138e8:	in     eax,dx
  4138e9:	sbb    eax,0x480c07f0
  4138ee:	xchg   edx,eax
  4138ef:	push   edi
  4138f0:	inc    edx
  4138f1:	push   ss
  4138f2:	xchg   edi,eax
  4138f3:	mov    bh,BYTE PTR [eax+0x52]
  4138f6:	cmp    ecx,DWORD PTR [edx]
  4138f8:	xor    DWORD PTR [esi+0x36],esi
  4138fb:	jnp    0x4138d9
  4138fd:	xlat   BYTE PTR ds:[ebx]
  4138fe:	cmp    eax,0xf76e89ca
  413903:	jge    0x4138f6
  413905:	ins    DWORD PTR es:[edi],dx
  413906:	sub    al,0x3b
  413908:	call   0x255e:0xf312d3e3
  41390f:	nop
  413910:	or     eax,0x83308087
  413915:	repnz add bl,0x49
  413919:	ds cdq 
  41391b:	xchg   edx,eax
  41391c:	dec    DWORD PTR [ecx]
  41391e:	mov    cl,BYTE PTR [esi+0x3d]
  413921:	and    edx,DWORD PTR [ecx]
  413923:	adc    eax,0xe67270eb
  413928:	lods   eax,DWORD PTR ds:[esi]
  413929:	jno    0x413925
  41392b:	mov    ah,0xa5
  41392d:	out    0x66,eax
  41392f:	dec    ebp
  413930:	add    eax,0x1c736171
  413935:	inc    ebp
  413936:	fistp  DWORD PTR [ecx+0x143bdf55]
  41393c:	scas   eax,DWORD PTR es:[edi]
  41393d:	mov    WORD PTR [ecx-0x2f15738f],?
  413943:	je     0x413905
  413945:	lds    esp,FWORD PTR [ebx-0x4b]
  413948:	sbb    ch,BYTE PTR [edi+ecx*4-0x80]
  41394c:	sub    DWORD PTR ds:0xd5a1ff61,ebp
  413952:	and    dl,BYTE PTR [ebp-0x72066372]
  413958:	cmp    BYTE PTR [ecx],bh
  41395a:	rcr    BYTE PTR [esi+0x70ffebb4],cl
  413960:	fdiv   DWORD PTR [esi-0x48d26890]
  413966:	sub    edx,DWORD PTR [edi-0x31]
  413969:	jle    0x4138f0
  41396b:	in     al,0x2e
  41396d:	mov    ss,WORD PTR [edi]
  41396f:	leave  
  413970:	adc    ah,0x52
  413973:	xor    bh,BYTE PTR [ecx]
  413975:	or     eax,0xc656cb8c
  41397a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41397b:	mov    dl,0x88
  41397d:	stos   BYTE PTR es:[edi],al
  41397e:	and    dh,BYTE PTR [ebx+0x6e143708]
  413984:	mov    WORD PTR [edi-0x32],gs
  413987:	les    edi,FWORD PTR ds:0x9cec9057
  41398d:	add    al,BYTE PTR [edx]
  41398f:	adc    al,0x62
  413991:	mov    ds:0x2dcfde1,al
  413996:	aad    0xf4
  413998:	jae    0x413987
  41399a:	lahf   
  41399b:	ret    
  41399c:	iret   
  41399d:	pop    ss
  41399e:	or     al,0x1a
  4139a0:	mov    ebp,0x2c88cd3
  4139a5:	je     0x413990
  4139a7:	call   0xaddd7853
  4139ac:	jo     0x413970
  4139ae:	jl     0x4139c9
  4139b0:	mov    eax,ds:0x4302954a
  4139b5:	lods   al,BYTE PTR ds:[esi]
  4139b6:	arpl   WORD PTR ds:0xfd765919,bx
  4139bc:	inc    edx
  4139bd:	jmp    0x413992
  4139bf:	lods   eax,DWORD PTR ds:[esi]
  4139c0:	mov    ecx,0x9f375680
  4139c5:	mov    al,ds:0x71c114ca
  4139ca:	div    DWORD PTR [esi+0x5]
  4139cd:	stos   DWORD PTR es:[edi],eax
  4139ce:	dec    esp
  4139cf:	xor    eax,0xfaf1a836
  4139d4:	dec    edx
  4139d5:	cmp    DWORD PTR [ebp+0x6c],0xffffffee
  4139d9:	push   0x158cd83b
  4139de:	jg     0x4139b5
  4139e0:	iret   
  4139e1:	ins    DWORD PTR es:[edi],dx
  4139e2:	lods   eax,DWORD PTR ds:[esi]
  4139e3:	lods   eax,DWORD PTR ds:[esi]
  4139e4:	jne    0x413a2d
  4139e6:	dec    edi
  4139e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139e8:	inc    ebx
  4139e9:	lods   al,BYTE PTR ds:[esi]
  4139ea:	jmp    0x413a0f
  4139ec:	jae    0x4139e6
  4139ee:	into   
  4139ef:	jns    0x41398c
  4139f1:	sub    al,0xd
  4139f3:	cmp    al,0xad
  4139f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139f6:	pop    ebx
  4139f7:	jg     0x413992
  4139f9:	dec    edx
  4139fa:	push   ss
  4139fb:	inc    ecx
  4139fc:	pop    ss
  4139fd:	sub    eax,0x4e9f7ad4
  413a02:	mov    al,ds:0x76a860a9
  413a07:	push   ss
  413a08:	push   ebx
  413a09:	imul   edi,DWORD PTR [esi+edi*2-0x664338f8],0xf19f4d15
  413a14:	inc    esi
  413a15:	cdq    
  413a16:	cli    
  413a17:	stc    
  413a18:	mov    dl,0x96
  413a1a:	dec    esi
  413a1b:	sub    DWORD PTR [ebp-0x76],eax
  413a1e:	add    DWORD PTR fs:[ebp+edx*1-0x75731c65],ebp
  413a26:	pop    esp
  413a27:	loop   0x4139d1
  413a29:	jns    0x413a10
  413a2b:	add    eax,0x5762f491
  413a30:	daa    
  413a31:	ds inc edi
  413a33:	rcl    bh,0xc5
  413a36:	mov    dl,0x5b
  413a38:	cmp    edi,DWORD PTR [ecx]
  413a3a:	jmp    0xc53f4f3f
  413a3f:	pop    ebp
  413a40:	sub    eax,0x2dac3b6
  413a45:	jl     0x413a1f
  413a47:	or     esp,esi
  413a49:	push   ebp
  413a4a:	pushf  
  413a4b:	xor    DWORD PTR [ecx-0x38],0x14201a11
  413a52:	ret    0x45b5
  413a55:	jl     0x413a93
  413a57:	dec    DWORD PTR [ebx-0x56]
  413a5a:	out    0xca,al
  413a5c:	cmp    eax,0xaad3f970
  413a61:	rcl    DWORD PTR [edi+0x50b902a],0x90
  413a68:	and    eax,0x767db81a
  413a6d:	jmp    0x413a46
  413a6f:	mov    al,ds:0xb22209c7
  413a74:	adc    BYTE PTR [esp+edx*4-0x3b],dh
  413a78:	in     al,dx
  413a79:	daa    
  413a7a:	fwait
  413a7b:	hlt    
  413a7c:	push   edx
  413a7d:	enter  0x4338,0x27
  413a81:	lea    esi,[edx]
  413a83:	into   
  413a84:	mov    esi,0xef85f71b
  413a89:	cld    
  413a8a:	sbb    eax,eax
  413a8c:	jp     0x413acf
  413a8e:	popf   
  413a8f:	repz jbe 0x413aca
  413a92:	or     eax,0x63a88433
  413a97:	std    
  413a98:	sbb    al,ah
  413a9a:	cdq    
  413a9b:	inc    esi
  413a9c:	mov    al,ds:0x842bcde7
  413aa1:	push   eax
  413aa2:	sbb    al,0x7e
  413aa4:	retf   
  413aa5:	or     ch,BYTE PTR [edx]
  413aa7:	ss pop esp
  413aa9:	add    eax,0x1762ae37
  413aae:	scas   al,BYTE PTR es:[edi]
  413aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ab0:	pop    esp
  413ab1:	hlt    
  413ab2:	pop    edx
  413ab3:	leave  
  413ab4:	xchg   DWORD PTR [edi+0x5d],esi
  413ab7:	adc    bh,BYTE PTR ds:0x7ff8c050
  413abd:	xchg   ebp,eax
  413abe:	and    al,0x7
  413ac0:	jge    0x413aed
  413ac2:	pop    es
  413ac3:	or     BYTE PTR [edi+0x59],cl
  413ac6:	jecxz  0x413aff
  413ac8:	xchg   ebx,eax
  413ac9:	int3   
  413aca:	lea    edx,[eax-0x46b7ddc3]
  413ad0:	push   0xffffff82
  413ad2:	inc    esp
  413ad3:	dec    ecx
  413ad4:	test   esi,0xcbc39f6b
  413ada:	sbb    dl,BYTE PTR [esi]
  413adc:	cld    
  413add:	inc    edi
  413ade:	push   ds
  413adf:	jp     0x413ac8
  413ae1:	and    bh,BYTE PTR [ebx]
  413ae3:	push   ss
  413ae4:	je     0x413b0c
  413ae6:	jl     0x413aa7
  413ae8:	mov    si,0x7622
  413aec:	mov    WORD PTR ds:0x9a52816,ds
  413af2:	neg    ecx
  413af4:	sbb    cl,BYTE PTR ds:0xd79cd0ac
  413afa:	cld    
  413afb:	mov    esp,edi
  413afd:	pop    esp
  413afe:	push   0xeffba818
  413b03:	xchg   esp,eax
  413b04:	imul   ecx,edx,0xffffffb9
  413b07:	loopne 0x413b16
  413b09:	push   edi
  413b0a:	sub    al,0x8f
  413b0c:	add    ecx,ebx
  413b0e:	and    al,bh
  413b10:	push   ebx
  413b11:	pop    edi
  413b12:	mov    WORD PTR [edx+0x2b],?
  413b15:	xchg   esi,eax
  413b16:	and    edx,DWORD PTR [ecx]
  413b18:	mov    al,ds:0x134529f5
  413b1d:	pop    edx
  413b1e:	jae    0x413aa8
  413b20:	ja     0x413ae3
  413b22:	cmp    bh,al
  413b24:	adc    ebp,ecx
  413b26:	jmp    0x9726:0xa9d35f8b
  413b2d:	sbb    BYTE PTR [ebx+0x56],bl
  413b30:	xlat   BYTE PTR ds:[ebx]
  413b31:	sbb    eax,0xc12385a1
  413b36:	fwait
  413b37:	imul   esp,DWORD PTR [ebx+0x3e8c5473],0xa4580d21
  413b41:	(bad)  
  413b42:	outs   dx,BYTE PTR ds:[esi]
  413b43:	and    al,0x67
  413b45:	pop    ebx
  413b46:	ror    eax,1
  413b48:	jle    0x413b7c
  413b4a:	mov    ds:0x5f2030c5,eax
  413b4f:	sub    BYTE PTR [ecx-0x3],cl
  413b52:	sbb    DWORD PTR [esi-0x5e24ace1],eax
  413b58:	std    
  413b59:	and    al,0x41
  413b5b:	pop    ss
  413b5c:	cmp    DWORD PTR [eax-0x29b203d9],ebx
  413b62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b63:	addr16 xor al,0xc4
  413b66:	sbb    ch,BYTE PTR ds:0xeb1dbeec
  413b6c:	call   0xb27e:0x40eee960
  413b73:	mov    ds:0xc330b277,al
  413b78:	pop    es
  413b79:	mov    bl,0xc3
  413b7b:	in     al,dx
  413b7c:	jbe    0x413b36
  413b7e:	xchg   ebp,eax
  413b7f:	mov    eax,ds:0xdfb60359
  413b84:	out    0x4b,al
  413b86:	cmp    eax,0xe8c9dfb7
  413b8b:	ror    esi,1
  413b8d:	call   0x1b9a:0xa2156453
  413b94:	add    eax,DWORD PTR [eax]
  413b96:	lds    edi,FWORD PTR [eax]
  413b98:	cmp    esi,DWORD PTR [esi+eiz*8+0x7cb3e905]
  413b9f:	pop    esi
  413ba0:	jmp    0x14a3:0x34be43ce
  413ba7:	pop    ds
  413ba8:	xchg   esi,eax
  413ba9:	push   ecx
  413baa:	push   ebp
  413bab:	int3   
  413bac:	jno    0x413b80
  413bae:	push   ebp
  413baf:	fsubr  st(1),st
  413bb1:	outs   dx,BYTE PTR ds:[esi]
  413bb2:	mov    ?,ebp
  413bb4:	pop    es
  413bb5:	dec    esi
  413bb6:	lds    esp,FWORD PTR [ecx]
  413bb8:	or     BYTE PTR [esi],al
  413bba:	and    ebx,DWORD PTR [edi+0x19]
  413bbd:	cmp    dh,BYTE PTR [esi]
  413bbf:	addr16 call 0x891:0x13ebc79c
  413bc7:	pop    ss
  413bc8:	push   es
  413bc9:	mov    ds:0xa909a67b,eax
  413bce:	std    
  413bcf:	or     BYTE PTR [ecx],cl
  413bd1:	sbb    cl,bh
  413bd3:	in     al,0x55
  413bd5:	cmp    edx,DWORD PTR [esi+0x6a]
  413bd8:	mov    cl,0x4e
  413bda:	jne    0x413bce
  413bdc:	push   eax
  413bdd:	(bad)  
  413bde:	adc    ebx,ebp
  413be0:	nop
  413be1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413be2:	popa   
  413be3:	arpl   WORD PTR [ebp+0x1460df2d],dx
  413be9:	fidivr DWORD PTR [edx+esi*8]
  413bec:	dec    esp
  413bed:	lea    esi,[edx-0x4c]
  413bf0:	js     0x413c2e
  413bf2:	shr    DWORD PTR [edx+0xd146388],0xa3
  413bf9:	dec    ebp
  413bfa:	jb     0x413bc6
  413bfc:	mov    al,ds:0xb823189f
  413c01:	and    esp,DWORD PTR [edi-0x304e185b]
  413c07:	jno    0x413c73
  413c09:	push   ds
  413c0a:	(bad)  
  413c0b:	sti    
  413c0c:	cmp    al,0x5d
  413c0e:	test   BYTE PTR [ebx-0x50],ah
  413c11:	push   eax
  413c12:	pop    ebx
  413c13:	(bad)  
  413c14:	dec    ebp
  413c15:	or     al,0x26
  413c17:	cmp    ch,al
  413c19:	mov    DWORD PTR [edi-0x7d14365d],edi
  413c1f:	fsub   QWORD PTR [eax]
  413c21:	in     eax,dx
  413c22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c23:	dec    ecx
  413c24:	lahf   
  413c25:	pop    esi
  413c26:	bnd js 0x413bbc
  413c29:	adc    esi,edx
  413c2b:	xor    dh,BYTE PTR [edx+0x567d6ffe]
  413c31:	push   ebx
  413c32:	jl     0x413c8d
  413c34:	mov    ecx,0xbcb729a2
  413c39:	mov    ecx,ebp
  413c3b:	adc    BYTE PTR [esi],bl
  413c3d:	ret    0x78f4
  413c40:	dec    eax
  413c41:	or     al,BYTE PTR [edi-0x54]
  413c44:	jb     0x413c7b
  413c46:	inc    esp
  413c47:	sub    eax,0x51cf0238
  413c4c:	fnstcw WORD PTR [esi+eax*1-0x63]
  413c50:	cs out dx,eax
  413c52:	add    al,0xe2
  413c54:	push   edi
  413c55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c56:	popa   
  413c57:	xchg   BYTE PTR [edx-0x3f],ah
  413c5a:	shl    BYTE PTR ds:0x28631543,0x4d
  413c61:	and    bl,al
  413c63:	int    0x2b
  413c65:	mov    dl,0xd4
  413c67:	dec    eax
  413c68:	rcr    BYTE PTR [esi+0x3b],cl
  413c6b:	sbb    BYTE PTR [eax+0x45],ah
  413c6e:	retf   
  413c6f:	mov    edx,0xc9a99c4a
  413c74:	(bad)  
  413c75:	fidivr DWORD PTR [ebx+0x7e79d0f2]
  413c7b:	in     eax,0x1c
  413c7d:	xchg   edi,eax
  413c7e:	xchg   BYTE PTR [eax-0x3b27a4a3],bl
  413c84:	xchg   ebx,ebp
  413c86:	(bad)  
  413c87:	cli    
  413c88:	pusha  
  413c89:	dec    ebx
  413c8a:	test   al,0x65
  413c8c:	sbb    ah,BYTE PTR [edx]
  413c8e:	and    ebp,DWORD PTR [edi-0x5e04eb6a]
  413c94:	pop    edi
  413c95:	div    DWORD PTR [edi]
  413c97:	(bad)  
  413c98:	sbb    eax,ecx
  413c9a:	pop    ebx
  413c9b:	xchg   edi,eax
  413c9c:	and    bl,dl
  413c9e:	ror    DWORD PTR [esi+eiz*1-0x63],1
  413ca2:	cmp    eax,0x37964291
  413ca7:	push   ds
  413ca8:	(bad)  
  413ca9:	pop    ebp
  413caa:	retf   0xd6b3
  413cad:	out    dx,al
  413cae:	das    
  413caf:	jns    0x413c51
  413cb1:	jo     0x413d27
  413cb3:	push   0x7c
  413cb5:	jmp    0x215:0x51087d11
  413cbc:	fpatan 
  413cbe:	sar    esi,1
  413cc0:	pushf  
  413cc1:	scas   al,BYTE PTR es:[edi]
  413cc2:	mov    al,BYTE PTR [eax]
  413cc4:	mov    ds:0xbadc226a,al
  413cc9:	in     eax,dx
  413cca:	daa    
  413ccb:	pusha  
  413ccc:	imul   ebx,ebp,0xa2cb8445
  413cd2:	push   cs
  413cd3:	push   ebx
  413cd4:	in     al,dx
  413cd5:	xor    al,0x71
  413cd7:	xchg   edi,eax
  413cd8:	xchg   ebp,eax
  413cd9:	out    0x9a,al
  413cdb:	jmp    FWORD PTR [esi+0x73]
  413cde:	xchg   ebp,eax
  413cdf:	iret   
  413ce0:	je     0x413d5a
  413ce2:	adc    eax,0x223a3d93
  413ce7:	mov    ebx,0x7dafb5a8
  413cec:	int3   
  413ced:	std    
  413cee:	lahf   
  413cef:	out    0x3,eax
  413cf1:	pop    ecx
  413cf2:	pop    edi
  413cf3:	call   0xd6bdf656
  413cf8:	(bad)  
  413cf9:	imul   edx,DWORD PTR [ebx+0x79],0xffffffcd
  413cfd:	xchg   edi,eax
  413cfe:	push   cs
  413cff:	jne    0x413d3d
  413d01:	jge    0x413cce
  413d03:	mov    WORD PTR [esi+0x28],ds
  413d06:	jbe    0x413ce3
  413d08:	fisubr DWORD PTR [edi]
  413d0a:	pop    ss
  413d0b:	repz aas 
  413d0d:	mov    ebx,cs
  413d0f:	(bad)
  413d12:	aaa    
  413d13:	pop    edi
  413d14:	ins    BYTE PTR es:[edi],dx
  413d15:	jb     0x413d38
  413d17:	call   0x67fbe789
  413d1c:	mov    BYTE PTR [ebp+0x52eaea85],bh
  413d22:	push   esi
  413d23:	test   eax,0xdf65eac0
  413d28:	push   ebp
  413d29:	sahf   
  413d2a:	js     0x413d73
  413d2c:	(bad)  
  413d2d:	mov    ecx,0xf511e202
  413d32:	sub    esi,DWORD PTR [edx+0x5379f237]
  413d38:	jp     0x413cec
  413d3a:	dec    esp
  413d3b:	(bad)  
  413d3c:	mov    ebx,0x26637226
  413d41:	adc    DWORD PTR [ebx-0x6e],esp
  413d44:	icebp  
  413d45:	mov    ebx,0x6984269d
  413d4a:	jl     0x413d6e
  413d4c:	scas   eax,DWORD PTR es:[edi]
  413d4d:	test   edi,esi
  413d4f:	cwde   
  413d50:	mov    al,0xc7
  413d52:	mul    BYTE PTR [ebp-0x7d27d688]
  413d58:	ds (bad) 
  413d5b:	out    dx,eax
  413d5c:	push   cs
  413d5d:	and    al,0x7d
  413d5f:	ins    BYTE PTR es:[edi],dx
  413d60:	and    ebx,esp
  413d62:	add    al,0xe2
  413d64:	sub    al,0xde
  413d66:	or     ch,bh
  413d68:	push   0xfffffff7
  413d6a:	je     0x413d12
  413d6c:	daa    
  413d6d:	jmp    0x8300915e
  413d72:	and    eax,0x68dcace5
  413d77:	pop    edi
  413d78:	inc    esi
  413d79:	rcl    DWORD PTR [edi-0x7a6298e8],1
  413d7f:	je     0x413da4
  413d81:	and    eax,0xe9f95dfe
  413d86:	adc    ecx,ebp
  413d88:	xor    DWORD PTR [edi],0x87acd5d8
  413d8e:	les    edx,FWORD PTR [ecx-0x4]
  413d91:	jge    0x413d92
  413d93:	add    eax,eax
  413d95:	xor    BYTE PTR [ebx],0xa8
  413d98:	pop    edx
  413d99:	sahf   
  413d9a:	push   ds
  413d9b:	add    eax,0xc718127c
  413da0:	or     BYTE PTR [edx+ebp*4-0xbe29f90],dl
  413da7:	out    dx,al
  413da8:	or     ebx,esp
  413daa:	mov    ecx,0xfda55f95
  413daf:	dec    ebp
  413db0:	retf   0xf1fd
  413db3:	push   0x7e
  413db5:	mov    WORD PTR [edi+edx*2-0x65],gs
  413db9:	push   0xfffffff7
  413dbb:	test   eax,0x5886ec9b
  413dc0:	(bad)  
  413dc1:	xor    BYTE PTR [ebp+0x73],cl
  413dc4:	adc    DWORD PTR [ebp+0x68],0x12
  413dc8:	rcl    BYTE PTR [eax+edi*4],1
  413dcb:	mov    ebx,DWORD PTR [ebp-0x3d]
  413dce:	mov    eax,ds:0x6487e18a
  413dd3:	cmp    esp,eax
  413dd5:	and    ch,ah
  413dd7:	sub    esp,eax
  413dd9:	mov    WORD PTR [edi+0x63],ds
  413ddc:	scas   al,BYTE PTR es:[edi]
  413ddd:	ja     0x413dd1
  413ddf:	loope  0x413d66
  413de1:	mov    cl,0xe3
  413de3:	add    al,0xb9
  413de5:	pusha  
  413de6:	fst    DWORD PTR [edx+eax*2]
  413de9:	aad    0x1f
  413deb:	sbb    ecx,ebx
  413ded:	aas    
  413dee:	outs   dx,DWORD PTR ds:[esi]
  413def:	add    al,0x93
  413df1:	xor    ebx,DWORD PTR [edi+0x44b69894]
  413df7:	push   edx
  413df8:	test   al,0xc2
  413dfa:	lods   al,BYTE PTR ds:[esi]
  413dfb:	mov    dh,BYTE PTR [ebx+0xe7097d0]
  413e01:	in     al,0x35
  413e03:	call   0x8446:0xae09df13
  413e0a:	mov    bh,0x66
  413e0c:	adc    eax,0xef9efa25
  413e11:	add    ecx,ebp
  413e13:	pop    ebp
  413e14:	pop    ss
  413e15:	add    al,0xe9
  413e17:	sub    al,0x6e
  413e19:	mov    BYTE PTR [ebx-0x4f8e3288],cl
  413e1f:	neg    cl
  413e21:	inc    eax
  413e22:	fnstenv [edx]
  413e24:	cmp    eax,0x372404c9
  413e29:	enter  0xd59b,0xb6
  413e2d:	xlat   BYTE PTR cs:[ebx]
  413e2f:	je     0x413dfd
  413e31:	jmp    0x994622b7
  413e36:	adc    DWORD PTR [ecx-0x577dad4c],eax
  413e3c:	push   esp
  413e3d:	clc    
  413e3e:	stos   BYTE PTR es:[edi],al
  413e3f:	enter  0xa988,0xa
  413e43:	call   0x86d1a175
  413e48:	cwde   
  413e49:	pop    eax
  413e4a:	xchg   edi,eax
  413e4b:	test   eax,0xa4465eba
  413e50:	(bad)  
  413e51:	les    eax,FWORD PTR [ebp-0x6cc35773]
  413e57:	cmp    BYTE PTR [eax-0x11795c9a],ch
  413e5d:	(bad)  
  413e5e:	call   0x47b99556
  413e63:	ret    
  413e64:	xor    esp,DWORD PTR [ebp-0x3ff9753c]
  413e6a:	push   cs
  413e6b:	jp     0x413eb2
  413e6d:	push   edi
  413e6e:	xor    DWORD PTR [ebp+edi*4-0x33c420b4],0x384c8902
  413e79:	jge    0x413e0f
  413e7b:	int    0x78
  413e7d:	push   ds
  413e7e:	lods   al,BYTE PTR ds:[esi]
  413e7f:	xchg   ebx,eax
  413e80:	(bad)  
  413e82:	adc    al,0x1a
  413e84:	stos   BYTE PTR es:[edi],al
  413e85:	push   eax
  413e86:	bound  eax,QWORD PTR [eax+0x1f6987cb]
  413e8c:	xchg   edx,eax
  413e8d:	mov    edx,0xbff093e8
  413e92:	std    
  413e93:	jns    0x413ead
  413e95:	mov    ds:0xf61fb486,al
  413e9a:	or     ah,BYTE PTR [edx-0x5afd9786]
  413ea0:	xor    BYTE PTR [esi-0x214ffd69],ch
  413ea6:	das    
  413ea7:	pop    esi
  413ea8:	xchg   ebx,eax
  413ea9:	pop    edi
  413eaa:	adc    ebp,DWORD PTR [edi]
  413eac:	mov    ecx,0x73f93bff
  413eb1:	sbb    eax,0x6783abb4
  413eb6:	inc    ebx
  413eb7:	inc    ecx
  413eb8:	dec    esi
  413eb9:	mov    al,ds:0x9bb27063
  413ebe:	or     bh,BYTE PTR [edx+eax*1+0x194ca3eb]
  413ec5:	pop    es
  413ec6:	or     al,0xf6
  413ec8:	les    eax,FWORD PTR [edx+eax*4-0x2b]
  413ecc:	loope  0x413e99
  413ece:	(bad)  
  413ecf:	bound  ebx,QWORD PTR [ebx+eax*4+0x45]
  413ed3:	arpl   WORD PTR [eax+0x12],di
  413ed6:	scas   eax,DWORD PTR es:[edi]
  413ed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ed8:	mov    ds:0xf017cf85,al
  413edd:	fdiv   DWORD PTR [ebx]
  413edf:	into   
  413ee0:	loope  0x413f57
  413ee2:	sbb    ah,ch
  413ee4:	inc    edi
  413ee5:	sub    BYTE PTR [eax+edi*1+0x11e8a2d3],ah
  413eec:	dec    esp
  413eed:	jo     0x413f29
  413eef:	arpl   WORD PTR [esi-0xc],cx
  413ef2:	fs aam 0x5d
  413ef5:	dec    esi
  413ef6:	cmp    ebx,DWORD PTR ds:0x899b9585
  413efc:	dec    ebp
  413efd:	mov    ch,BYTE PTR [esi-0x64125329]
  413f03:	push   esp
  413f04:	fwait
  413f05:	cld    
  413f06:	xor    ebx,edi
  413f08:	mov    cl,0x86
  413f0a:	(bad)  
  413f0b:	neg    BYTE PTR [edi]
  413f0d:	sahf   
  413f0e:	xchg   ebp,eax
  413f0f:	fimul  WORD PTR [esi]
  413f11:	jno    0x413f6b
  413f13:	xlat   BYTE PTR ds:[ebx]
  413f14:	sub    eax,0xa31c60af
  413f19:	or     al,0xf
  413f1b:	jnp    0x413f76
  413f1d:	sete   BYTE PTR [edi+0x3f]
  413f21:	fcomp  st(5)
  413f23:	and    edi,DWORD PTR [eax+0x48ec0aea]
  413f29:	ror    BYTE PTR [edi],0x1a
  413f2c:	sar    DWORD PTR [ecx],0x3e
  413f2f:	pop    ebx
  413f30:	(bad)  
  413f31:	lock iret 
  413f33:	mov    al,0x28
  413f35:	dec    esi
  413f36:	(bad)  
  413f3a:	xor    DWORD PTR [eax-0xcb5c7b2],esp
  413f40:	mov    ebx,0x62d1cb7e
  413f45:	push   edx
  413f46:	xor    eax,0x10e35fd0
  413f4b:	loop   0x413f55
  413f4d:	sar    dl,cl
  413f4f:	and    esi,DWORD PTR [ebx]
  413f51:	aad    0xc7
  413f53:	inc    esi
  413f54:	sbb    edi,esi
  413f56:	xchg   ebx,eax
  413f57:	adc    eax,0xd4f788a3
  413f5c:	frndint 
  413f5e:	test   bl,dl
  413f60:	cmp    BYTE PTR [edi+ebx*2-0x61f90e3],0x7b
  413f68:	or     ah,ch
  413f6a:	outs   dx,BYTE PTR ds:[esi]
  413f6b:	push   cs
  413f6c:	fiadd  WORD PTR [ebp+0x33eb2db9]
  413f72:	aaa    
  413f73:	xor    ebp,edi
  413f75:	fstp   TBYTE PTR [eax]
  413f77:	cmp    BYTE PTR [edx-0x26],0xbc
  413f7b:	popa   
  413f7c:	sbb    esi,DWORD PTR [edi-0x30]
  413f7f:	mov    ?,WORD PTR [esi]
  413f81:	jle    0x413fca
  413f83:	xchg   esi,eax
  413f84:	(bad)  
  413f85:	pop    ebp
  413f86:	pop    esp
  413f87:	cdq    
  413f88:	sbb    ah,BYTE PTR [eax+0x7b]
  413f8b:	aas    
  413f8c:	mov    ds:0xb04c85e0,eax
  413f91:	or     ebx,DWORD PTR [esi-0x3a]
  413f94:	loope  0x413f60
  413f96:	mov    edx,0xfd4797d7
  413f9b:	clc    
  413f9c:	call   0x5084:0x916842ca
  413fa3:	(bad)  
  413fa4:	icebp  
  413fa5:	jnp    0x413f4d
  413fa7:	jge    0x413f8d
  413fa9:	cmp    DWORD PTR [ebx+0x4fdd969b],esi
  413faf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fb0:	ret    
  413fb1:	adc    DWORD PTR [ecx-0x56],ecx
  413fb4:	pop    edi
  413fb5:	ins    BYTE PTR es:[edi],dx
  413fb6:	xchg   edi,eax
  413fb7:	push   eax
  413fb8:	xor    eax,0xf774ccd1
  413fbd:	jmp    0x812579a8
  413fc2:	jg     0x413f66
  413fc4:	mov    esi,0xb2a02256
  413fc9:	add    ebp,DWORD PTR [esi]
  413fcb:	dec    edi
  413fcc:	jns    0x413fca
  413fce:	jno    0x413fbe
  413fd0:	and    DWORD PTR [eax-0x5d079255],ecx
  413fd6:	fwait
  413fd7:	mov    al,0x7a
  413fd9:	and    DWORD PTR [edi-0xd],esp
  413fdc:	sti    
  413fdd:	add    ebx,ecx
  413fdf:	call   DWORD PTR [ebp+ebp*1-0xaffdc48]
  413fe6:	adc    eax,0xdfbdf133
  413feb:	sub    al,0x3e
  413fed:	sar    DWORD PTR [eax],0x5e
  413ff0:	jg     0x414033
  413ff2:	jmp    0x38d02aac
  413ff7:	in     al,0x93
  413ff9:	or     eax,0x400cefc6
  413ffe:	push   ebx
  413fff:	cmp    eax,0x1b191b60
  414004:	xor    ch,BYTE PTR [ecx-0x1f]
  414007:	repz xchg ecx,eax
  414009:	iret   
  41400a:	outs   dx,BYTE PTR ds:[esi]
  41400b:	cmp    sp,si
  41400e:	loope  0x41401e
  414010:	not    edx
  414012:	test   DWORD PTR [ecx],esp
  414014:	call   0x33dd898e
  414019:	in     eax,dx
  41401a:	cli    
  41401b:	adc    eax,0xae351595
  414020:	or     esi,DWORD PTR ds:0xb3020b46
  414026:	jge    0x414030
  414028:	out    dx,eax
  414029:	xchg   esi,eax
  41402a:	idiv   BYTE PTR [eax]
  41402c:	shr    BYTE PTR [ebx+eax*1],0xa2
  414030:	pusha  
  414031:	js     0x413fd6
  414033:	jmp    0xf65b:0xccf62dda
  41403a:	hlt    
  41403b:	xor    eax,0x8ef84510
  414040:	subps  xmm7,XMMWORD PTR [esp+ebp*8-0x47]
  414045:	shl    dh,1
  414047:	mov    eax,0x80278229
  41404c:	pushf  
  41404d:	dec    edi
  41404e:	hlt    
  41404f:	int    0x5e
  414051:	out    0x7b,al
  414053:	call   0xbf8d0c15
  414058:	pop    ecx
  414059:	mov    cl,0x73
  41405b:	mov    bl,0xa7
  41405d:	xor    esp,0x657ae686
  414063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414064:	pop    ebx
  414065:	mov    dx,0x4707
  414069:	push   ebx
  41406a:	or     eax,0x48149556
  41406f:	inc    ebx
  414070:	or     ecx,ebp
  414072:	pop    ecx
  414073:	(bad)  
  414074:	fadd   QWORD PTR [ebx-0x72]
  414077:	mov    bl,0x9a
  414079:	pop    ss
  41407a:	sahf   
  41407b:	rcl    ah,1
  41407d:	enter  0xb3c0,0xb4
  414081:	pop    ebp
  414082:	ret    
  414083:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414084:	dec    esi
  414085:	mov    ds:0xa21bfc4c,al
  41408a:	mov    WORD PTR ds:0xe51529da,?
  414090:	push   ebx
  414091:	push   esp
  414092:	push   es
  414093:	ja     0x4140c0
  414095:	repnz mov ebp,0x18fc4ced
  41409b:	sbb    al,BYTE PTR [esi-0x4d]
  41409e:	jae    0x4140ea
  4140a0:	sub    ebx,DWORD PTR [edi-0x26]
  4140a3:	cld    
  4140a4:	icebp  
  4140a5:	jb     0x41408c
  4140a7:	jp     0x4140c4
  4140a9:	hlt    
  4140aa:	adc    DWORD PTR [edi+0x5c663685],ebp
  4140b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140b1:	cld    
  4140b2:	arpl   WORD PTR [edi+0x7f15ce44],sp
  4140b8:	test   DWORD PTR [ebx+0x32167048],0x1c1b6e64
  4140c2:	adc    BYTE PTR [eax],cl
  4140c4:	popa   
  4140c5:	xlat   BYTE PTR ds:[ebx]
  4140c6:	scas   al,BYTE PTR es:[edi]
  4140c7:	lods   al,BYTE PTR ds:[esi]
  4140c8:	sbb    bl,BYTE PTR [esi-0x7d]
  4140cb:	arpl   WORD PTR [esp+ecx*2-0x49196cb1],dx
  4140d2:	and    ah,BYTE PTR [ebx+0xa]
  4140d5:	mov    al,0xaf
  4140d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140d8:	add    DWORD PTR [esi+0x74],ecx
  4140db:	fild   WORD PTR [ebx+0x5d]
  4140de:	sub    edx,DWORD PTR [edi]
  4140e0:	add    DWORD PTR [ebp-0x13],esi
  4140e3:	pop    eax
  4140e4:	inc    ebx
  4140e5:	jl     0x414067
  4140e7:	stos   BYTE PTR es:[edi],al
  4140e8:	xchg   BYTE PTR [esi+0x4e],cl
  4140eb:	fnsave [eax+0x1622ad4a]
  4140f1:	adc    BYTE PTR [ebx+0x5c],0xc9
  4140f5:	(bad)  
  4140f9:	shr    DWORD PTR [ebx+eiz*8],cl
  4140fc:	jg     0x414149
  4140fe:	pop    esi
  4140ff:	cmp    ch,cl
  414101:	(bad)  
  414102:	mov    ebx,0x7ff12307
  414107:	(bad)  
  414108:	inc    edi
  414109:	sub    esi,DWORD PTR [edx-0x63]
  41410c:	lahf   
  41410d:	ret    0x2dec
  414110:	cmc    
  414111:	rcl    DWORD PTR [ecx],cl
  414113:	(bad)  
  414114:	das    
  414115:	pop    ds
  414116:	pop    esi
  414117:	dec    ebx
  414118:	sbb    eax,0x4767d107
  41411d:	mov    ebx,0x56eca3cc
  414122:	bound  ebp,QWORD PTR [esi]
  414124:	js     0x4140b8
  414126:	out    0xe7,al
  414128:	and    eax,0x9d1e391a
  41412d:	xchg   BYTE PTR [esi],ch
  41412f:	enter  0xf504,0x4b
  414133:	es popa 
  414135:	mov    dh,0x50
  414137:	adc    eax,0x87ea1de8
  41413c:	ins    DWORD PTR es:[edi],dx
  41413d:	mov    esi,DWORD PTR [ecx-0x4485302b]
  414143:	dec    esp
  414144:	push   ebp
  414145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414146:	and    al,cl
  414148:	pop    ecx
  414149:	out    dx,al
  41414a:	fmul   QWORD PTR ds:0xd84193c1
  414150:	push   edi
  414151:	sti    
  414152:	or     DWORD PTR [ecx],0xfffffff8
  414155:	ins    BYTE PTR es:[edi],dx
  414156:	push   0x1e
  414158:	outs   dx,BYTE PTR ds:[esi]
  414159:	into   
  41415a:	aam    0x90
  41415c:	jmp    0xc2023d20
  414161:	int3   
  414162:	xchg   esp,eax
  414163:	pop    edi
  414164:	inc    ebx
  414165:	pusha  
  414166:	sti    
  414167:	and    al,0x24
  414169:	push   0x80a49478
  41416e:	jecxz  0x41413a
  414170:	scas   al,BYTE PTR es:[edi]
  414171:	cmp    esi,DWORD PTR [ebx-0x79]
  414174:	test   DWORD PTR [ebx-0x51],ebx
  414177:	push   ecx
  414178:	mov    ds:0x7f8fb13d,eax
  41417d:	add    BYTE PTR gs:[esi+0x476c65a9],al
  414184:	dec    BYTE PTR [edx+0x18]
  414187:	push   ss
  414188:	push   edx
  414189:	jge    0x414110
  41418b:	xchg   edx,eax
  41418c:	pop    ss
  41418d:	dec    eax
  41418e:	add    al,0x3f
  414190:	repz ds push 0x19d6df77
  414197:	in     eax,0xa0
  414199:	jnp    0x4141f8
  41419b:	push   edi
  41419c:	xor    ah,ch
  41419e:	add    eax,0xc4a22725
  4141a3:	adc    DWORD PTR [eax+0x21f33553],0xffffff8f
  4141aa:	mov    ds:0xc64f4590,al
  4141af:	xor    edi,DWORD PTR [ecx+0x24]
  4141b2:	fst    DWORD PTR ds:0x32446760
  4141b8:	call   0x3d97b378
  4141bd:	add    eax,0x4971007a
  4141c2:	out    0x76,eax
  4141c4:	and    BYTE PTR ds:0xb221f274,bl
  4141ca:	bound  esi,QWORD PTR [ecx-0x23]
  4141cd:	in     al,0x40
  4141cf:	int3   
  4141d0:	or     al,0xda
  4141d2:	sbb    eax,DWORD PTR [eax-0x69]
  4141d5:	and    bh,BYTE PTR [esp+edx*2-0x6b27e669]
  4141dc:	add    edi,edx
  4141de:	push   ds
  4141df:	cmp    DWORD PTR [ecx-0x56],ecx
  4141e2:	retf   
  4141e3:	mov    BYTE PTR [edi],al
  4141e5:	sbb    al,BYTE PTR [eax+0x18bd1470]
  4141eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141ec:	fisub  DWORD PTR [esi+edx*2-0x320047ed]
  4141f3:	jb     0x414190
  4141f5:	retf   
  4141f6:	shr    DWORD PTR [ebx],1
  4141f8:	cmp    BYTE PTR [edx],cl
  4141fa:	cs push ebx
  4141fc:	idiv   BYTE PTR [ebx+edi*2+0x6e26d51c]
  414203:	std    
  414204:	lahf   
  414205:	inc    edi
  414206:	dec    ecx
  414207:	pop    esp
  414208:	loopne 0x4141c5
  41420a:	mov    edi,0x43fdf754
  41420f:	ins    BYTE PTR es:[edi],dx
  414210:	pop    ds
  414211:	rcr    cl,1
  414213:	sub    cl,BYTE PTR [edi+0x39072272]
  414219:	adc    edi,ebx
  41421b:	imul   eax,esi,0xf1254425
  414221:	push   es
  414222:	int    0x1d
  414224:	mov    ch,0xd6
  414226:	cli    
  414227:	mov    bl,0xb2
  414229:	add    al,0x3f
  41422b:	sar    BYTE PTR [ebx-0x11],0xf8
  41422f:	aam    0xbb
  414231:	sub    BYTE PTR [ecx+ebp*8],0x9
  414235:	xchg   ebp,eax
  414236:	dec    BYTE PTR [eax+ebp*2-0x2251ba3]
  41423d:	fninit 
  41423f:	jge    0x414275
  414241:	and    DWORD PTR [ebp+0x7d60f075],ebx
  414247:	pop    eax
  414248:	jecxz  0x414276
  41424a:	inc    ebp
  41424b:	jns    0x4142a9
  41424d:	add    edi,esp
  41424f:	adc    DWORD PTR ds:0x1e213852,ecx
  414255:	inc    ebp
  414256:	pop    ebp
  414257:	outs   dx,DWORD PTR ds:[esi]
  414258:	or     ch,BYTE PTR [edi]
  41425a:	std    
  41425b:	mov    ecx,0x66a765d0
  414260:	jmp    0xe65a:0xf9c82eb7
  414267:	js     0x41422a
  414269:	sbb    al,0xee
  41426b:	or     BYTE PTR [edi-0x2e],cl
  41426e:	xchg   ecx,eax
  41426f:	in     eax,dx
  414270:	xchg   ebx,eax
  414271:	jmp    0x9b8f:0x20e9f359
  414278:	stc    
  414279:	push   ecx
  41427a:	fdiv   QWORD PTR [esi]
  41427c:	sub    esp,DWORD PTR [esi]
  41427e:	pop    edi
  41427f:	jecxz  0x414274
  414281:	and    esp,DWORD PTR [ecx+0x6b]
  414284:	adc    eax,0x410fd37f
  414289:	adc    al,BYTE PTR [ecx]
  41428b:	mov    eax,0xe0012fb5
  414290:	fist   WORD PTR [edx+edi*1]
  414293:	inc    edi
  414294:	js     0x4142d7
  414296:	mov    ah,0x18
  414298:	test   eax,0xc6a6ee7a
  41429d:	xchg   edi,eax
  41429e:	lahf   
  41429f:	inc    edx
  4142a0:	(bad)  [ebx]
  4142a2:	xor    eax,0x9f15d72f
  4142a7:	mov    ch,0x41
  4142a9:	jnp    0x4142e8
  4142ab:	or     BYTE PTR [edx-0xe0d0c64],bh
  4142b1:	iret   
  4142b2:	xchg   DWORD PTR [esi],ebx
  4142b4:	in     eax,dx
  4142b5:	jmp    0x41424b
  4142b7:	cmp    eax,edx
  4142b9:	mov    ah,0xa7
  4142bb:	xor    DWORD PTR [esi],esp
  4142bd:	push   ebx
  4142be:	xchg   esp,eax
  4142bf:	dec    esi
  4142c0:	cmp    BYTE PTR [ebx+0x745e6477],dh
  4142c6:	cmp    dh,bl
  4142c8:	ins    DWORD PTR es:[edi],dx
  4142c9:	(bad)  
  4142ca:	jo     0x41427a
  4142cc:	lock push eax
  4142ce:	int    0xe6
  4142d0:	fiadd  WORD PTR [edi-0x301db5d5]
  4142d6:	xchg   esp,eax
  4142d7:	daa    
  4142d8:	dec    ebp
  4142d9:	inc    esp
  4142da:	add    bh,BYTE PTR [esi]
  4142dc:	inc    edx
  4142dd:	dec    ebp
  4142de:	leave  
  4142df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142e0:	(bad)  [edi]
  4142e2:	mov    ?,eax
  4142e4:	lea    eax,[ebx+0x227f1809]
  4142ea:	lods   al,BYTE PTR ds:[esi]
  4142eb:	repz ror DWORD PTR [esi+0x115ab67b],0x60
  4142f3:	addr16 popa 
  4142f5:	rcr    DWORD PTR [edi-0x1b],1
  4142f8:	jge    0x414295
  4142fa:	and    BYTE PTR [eax+0x4483576b],dl
  414300:	or     eax,0x9822e31e
  414305:	xrelease xchg BYTE PTR [esi],ah
  414308:	inc    eax
  414309:	jne    0x41429c
  41430b:	sub    DWORD PTR [esi],esi
  41430d:	push   es
  41430e:	xor    bh,BYTE PTR [esi-0x6b]
  414311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414312:	aad    0x47
  414314:	int3   
  414315:	cwde   
  414316:	or     ch,ah
  414318:	ja     0x414364
  41431a:	ds jbe 0x414321
  41431d:	cld    
  41431e:	jae    0x4142d8
  414320:	cmp    BYTE PTR [ebx+0x69],ah
  414323:	jmp    0x522b5eac
  414328:	mov    edi,0xe3a0d498
  41432d:	jmp    0xa5f0:0xb0c275d6
  414334:	and    bl,ah
  414336:	or     eax,0x94d1f24b
  41433b:	cmp    esi,DWORD PTR [ebx-0x6c]
  41433e:	dec    esi
  41433f:	pop    ebp
  414340:	clc    
  414341:	int3   
  414342:	sub    DWORD PTR [edi+0x694e90e6],ebx
  414348:	test   BYTE PTR [ebp+0x10a253e4],ah
  41434e:	xor    dl,ah
  414350:	mov    edx,0xb2cc7d0d
  414355:	xchg   DWORD PTR [ecx-0x1d],esp
  414358:	mov    esp,0xeda17456
  41435d:	sar    BYTE PTR [ebp+0x6a7c5234],0x71
  414364:	ret    0x2d4c
  414367:	sbb    edx,eax
  414369:	adc    bh,BYTE PTR [ebp+0x62]
  41436c:	ins    BYTE PTR es:[edi],dx
  41436d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41436e:	cmp    BYTE PTR [edi-0x6d],0x76
  414372:	xchg   ecx,eax
  414373:	mov    cs,WORD PTR [edi-0x45eb410e]
  414379:	imul   BYTE PTR [edi-0xb1d645b]
  41437f:	int3   
  414380:	mov    ss,WORD PTR [edi+0x74]
  414383:	adc    esi,esi
  414385:	fsub   DWORD PTR [eax]
  414387:	call   0x3967a722
  41438c:	xor    eax,esi
  41438e:	jmp    0x6de1:0x309da4c2
  414395:	in     al,0x2b
  414397:	test   ch,al
  414399:	and    dl,bh
  41439b:	leave  
  41439c:	dec    di
  41439e:	mov    esp,0x67c76e8f
  4143a3:	sbb    eax,0xbc213012
  4143a8:	popf   
  4143a9:	sub    DWORD PTR ds:0xc90a226,edx
  4143af:	xchg   esi,eax
  4143b0:	stos   BYTE PTR es:[edi],al
  4143b1:	pop    ebx
  4143b2:	adc    ebp,DWORD PTR [edi+0x6e]
  4143b5:	mov    edx,0x89b2b1d9
  4143ba:	and    al,0x81
  4143bc:	pushf  
  4143bd:	inc    esi
  4143be:	inc    eax
  4143bf:	dec    ecx
  4143c0:	int    0xb8
  4143c2:	lock shr BYTE PTR [edi-0x695cc696],0x2b
  4143ca:	sbb    al,0x61
  4143cc:	rol    BYTE PTR [ebx],cl
  4143ce:	je     0x41440f
  4143d0:	and    esi,DWORD PTR [ebp-0x4b]
  4143d3:	jl     0x4143de
  4143d5:	push   eax
  4143d6:	xchg   DWORD PTR [edi-0x27],ecx
  4143d9:	inc    edi
  4143da:	int3   
  4143db:	call   0x8f5871
  4143e0:	jl     0x414428
  4143e2:	lods   eax,DWORD PTR ds:[esi]
  4143e3:	fnstsw WORD PTR [edx+eax*1-0xd3032ca]
  4143ea:	inc    ebp
  4143eb:	cmp    DWORD PTR [eax+0x2cccf84d],0xc
  4143f2:	mov    ds:0x4a63e6df,eax
  4143f7:	inc    ebp
  4143f8:	xlat   BYTE PTR ds:[ebx]
  4143f9:	mov    ecx,0xa6850c29
  4143fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143ff:	(bad)  
  414400:	and    al,BYTE PTR [edi+0x66865983]
  414406:	mov    ecx,?
  414408:	ins    DWORD PTR es:[edi],dx
  414409:	push   eax
  41440a:	ss (bad) 
  41440c:	leave  
  41440d:	enter  0x4d03,0x7f
  414411:	retf   
  414412:	mov    esp,ecx
  414414:	cmc    
  414415:	lods   al,BYTE PTR ds:[esi]
  414416:	pop    ebx
  414417:	mov    esi,0x5f81dae1
  41441c:	pop    ecx
  41441d:	jmp    0xa836:0x40d66edf
  414424:	retf   0x67f
  414427:	shr    DWORD PTR [esi-0x1e4db9b8],0x2c
  41442e:	retf   0xb9dc
  414431:	scas   eax,DWORD PTR es:[edi]
  414432:	pop    ebp
  414433:	jg     0x4143df
  414435:	in     al,dx
  414436:	mov    bh,0xe1
  414438:	les    esi,FWORD PTR [ecx+0x4ffcd2fd]
  41443e:	js     0x414464
  414440:	data16 mov dh,0xca
  414443:	ins    DWORD PTR es:[edi],dx
  414444:	mov    ds:0xe4514061,al
  414449:	hlt    
  41444a:	test   eax,0x61c61bc3
  41444f:	mov    ch,0xc3
  414451:	imul   edx,DWORD PTR [ebx-0x58],0xffffff91
  414455:	test   eax,0x4d1025d9
  41445a:	gs push ecx
  41445c:	fisttp QWORD PTR [edi]
  41445e:	add    eax,0x2f8e1a2a
  414463:	dec    edi
  414464:	test   al,0x13
  414466:	jmp    0x3c3f:0x60b683ea
  41446d:	push   ebp
  41446e:	les    esi,FWORD PTR [ebp+0x6d]
  414471:	loopne 0x414430
  414473:	sbb    BYTE PTR [edi],cl
  414475:	popa   
  414476:	icebp  
  414477:	dec    edx
  414478:	add    cl,BYTE PTR [edi+0x68fe13d5]
  41447e:	aas    
  41447f:	dec    edx
  414480:	lock or BYTE PTR [ebx],bh
  414483:	jae    0x41446c
  414485:	lods   al,BYTE PTR ds:[esi]
  414486:	sbb    BYTE PTR [edx-0x1d66df93],al
  41448c:	std    
  41448d:	gs push ds
  41448f:	mov    WORD PTR [eax-0x33],ds
  414492:	jmp    0xc290168
  414497:	pop    ss
  414498:	mov    dh,0x41
  41449a:	repnz or DWORD PTR [ecx+0x4e],ecx
  41449e:	mov    bl,0x26
  4144a0:	stos   BYTE PTR es:[edi],al
  4144a1:	mov    bl,0x53
  4144a3:	inc    ecx
  4144a4:	dec    edx
  4144a5:	faddp  st(7),st
  4144a7:	sbb    eax,0xf6a10f
  4144ac:	ja     0x414450
  4144ae:	stos   DWORD PTR es:[edi],eax
  4144af:	mov    bh,0x5a
  4144b1:	out    0xa1,al
  4144b3:	ja     0x4144b4
  4144b5:	je     0x414488
  4144b7:	cdq    
  4144b8:	cmp    BYTE PTR [eax+0x52cc0916],0x9b
  4144bf:	jae    0x4144b9
  4144c1:	sbb    DWORD PTR [esi-0x37],0xffffffdd
  4144c5:	lods   eax,DWORD PTR ds:[esi]
  4144c7:	mov    al,BYTE PTR [edx]
  4144c9:	adc    eax,0xf1ee768c
  4144ce:	retf   0x6b8f
  4144d1:	jo     0x4144c4
  4144d3:	popf   
  4144d4:	or     eax,0x9b8ba019
  4144d9:	out    dx,eax
  4144da:	mov    cl,0xce
  4144dc:	inc    ebx
  4144dd:	jno    0x414510
  4144df:	mov    BYTE PTR ds:0x5c84e95f,bh
  4144e5:	fild   DWORD PTR [edi+eiz*2-0x4]
  4144e9:	scas   eax,DWORD PTR es:[edi]
  4144ea:	fdivr  DWORD PTR [ecx]
  4144ec:	cmc    
  4144ed:	daa    
  4144ee:	(bad)  
  4144ef:	out    0x6c,eax
  4144f1:	call   0x2ec6:0xf1552f96
  4144f8:	and    edi,DWORD PTR [ebx-0x18de4338]
  4144fe:	mov    ds:0xb323db23,eax
  414503:	ins    DWORD PTR es:[edi],dx
  414504:	aaa    
  414505:	cmp    edx,eax
  414507:	jmp    0x3172cc2
  41450c:	sub    DWORD PTR [ecx+0x2e],eax
  41450f:	ins    DWORD PTR es:[edi],dx
  414510:	shl    bl,0x24
  414513:	add    edi,DWORD PTR [esi-0x46]
  414516:	jmp    0xd05c:0x9a3f8216
  41451d:	mov    ch,0xfb
  41451f:	inc    BYTE PTR ds:[ecx]
  414522:	or     eax,0x597995ee
  414527:	pop    ebx
  414528:	inc    ebp
  414529:	adc    eax,DWORD PTR [ebx]
  41452b:	push   ebx
  41452c:	xchg   edi,eax
  41452d:	test   DWORD PTR [esi],0x9aa6c881
  414533:	fnsave [ebp-0x6]
  414536:	(bad)  [esi+0x74]
  414539:	lahf   
  41453a:	ds inc eax
  41453c:	imul   esp,ecx,0x2a
  41453f:	test   DWORD PTR [ecx+0x4595beaa],0xda99bfc4
  414549:	jno    0x4144cd
  41454b:	mov    eax,0xeefcd7a
  414550:	sbb    ah,BYTE PTR [ebp+0x46]
  414553:	xor    esp,edx
  414555:	jmp    0x414575
  414557:	push   ebp
  414558:	fs lahf 
  41455a:	push   ecx
  41455b:	and    al,0x1c
  41455d:	not    DWORD PTR [ebx]
  41455f:	rol    eax,0x2d
  414562:	stos   BYTE PTR es:[edi],al
  414563:	xlat   BYTE PTR ds:[ebx]
  414564:	dec    ebp
  414565:	mov    ch,0x39
  414567:	cmp    BYTE PTR [ebx+0x44],ch
  41456a:	cmc    
  41456b:	js     0x414501
  41456d:	mov    eax,ds:0x41c8b1dc
  414572:	inc    ebp
  414573:	xor    al,0x88
  414575:	fisubr WORD PTR [eax]
  414577:	es inc ebx
  414579:	cmc    
  41457a:	mov    edx,0x63af5f6
  41457f:	pop    esi
  414580:	mov    ?,WORD PTR [ecx+0x4f]
  414583:	ficomp DWORD PTR [esi-0x68]
  414586:	call   0xf7d6:0x3612ad01
  41458d:	push   cs
  41458e:	cwde   
  41458f:	leave  
  414590:	push   edi
  414591:	xchg   ecx,eax
  414592:	push   ss
  414593:	mov    bh,0x9a
  414595:	mov    edi,0xcd3ed439
  41459a:	repnz into 
  41459c:	jb     0x41458d
  41459e:	push   cs
  41459f:	pop    es
  4145a0:	xchg   ebx,eax
  4145a1:	pop    ebp
  4145a2:	and    ebp,DWORD PTR [edi]
  4145a4:	pop    edx
  4145a5:	mov    eax,ds:0x1d6a894c
  4145aa:	inc    esp
  4145ab:	int3   
  4145ac:	enter  0x34dd,0x55
  4145b0:	xor    DWORD PTR [ebp+0x4106201d],ecx
  4145b6:	dec    ebp
  4145b7:	repnz rol BYTE PTR [ebx+0x5a80a4f9],cl
  4145be:	jae    0x41455e
  4145c0:	xchg   ecx,eax
  4145c1:	in     al,0xc7
  4145c3:	shr    BYTE PTR [edi],1
  4145c5:	adc    DWORD PTR [eax],0x470380b1
  4145cb:	sub    eax,0xd231c518
  4145d0:	pop    ds
  4145d1:	dec    ecx
  4145d2:	jle    0x4145a0
  4145d4:	scas   eax,DWORD PTR es:[edi]
  4145d5:	dec    edi
  4145d6:	fs dec edx
  4145d8:	shl    DWORD PTR [eax+edi*8-0x48],1
  4145dc:	add    eax,0x9583a85f
  4145e1:	(bad)  
  4145e2:	mov    eax,ds:0x163807ee
  4145e7:	xchg   DWORD PTR [ebp-0x20],ebx
  4145ea:	adc    al,0xc0
  4145ec:	and    eax,0x5c31b9fc
  4145f1:	int3   
  4145f2:	outs   dx,DWORD PTR ds:[esi]
  4145f3:	dec    ecx
  4145f4:	(bad)  
  4145f5:	retf   
  4145f6:	add    DWORD PTR [edx],esi
  4145f8:	pop    eax
  4145f9:	xor    ebx,DWORD PTR ds:0xf38cb913
  4145ff:	int    0x2b
  414601:	sub    dl,BYTE PTR [edi-0x68feeddf]
  414607:	fndisi(8087 only) 
  414609:	shl    BYTE PTR [eax-0x2b],0xd5
  41460d:	push   es
  41460e:	pop    ecx
  41460f:	jb     0x414608
  414611:	pop    ds
  414612:	jg     0x41459b
  414614:	cmp    BYTE PTR [ebx-0x6f],dh
  414617:	sbb    al,0x42
  414619:	jl     0x4145a0
  41461b:	hlt    
  41461c:	xchg   DWORD PTR [edi+0x15aadf73],esp
  414622:	jno    0x4145ff
  414624:	xchg   ebx,eax
  414625:	push   ds
  414626:	popa   
  414627:	imul   edx,DWORD PTR [eax+0x7c9aa8c9],0x56
  41462e:	int3   
  41462f:	jle    0x41467a
  414631:	rol    ch,0x46
  414634:	jg     0x4146a5
  414636:	aas    
  414637:	sub    edi,DWORD PTR ds:0x82cb8995
  41463d:	out    dx,al
  41463e:	(bad)  
  41463f:	lea    ebx,[esi-0x1280d8bd]
  414645:	cmp    DWORD PTR [ebp-0x1d5fa2d5],ecx
  41464b:	mov    ch,0xc3
  41464d:	lock enter 0x541,0x6e
  414652:	bound  edx,QWORD PTR [ebx+0x2b74081d]
  414658:	loopne 0x4145da
  41465a:	pop    ebx
  41465b:	call   0x9fd6:0x757697e8
  414662:	sub    al,0xf
  414664:	inc    esp
  414665:	xchg   DWORD PTR [edx],edi
  414667:	addr16 popf 
  414669:	push   DWORD PTR [eax]
  41466b:	je     0x41461a
  41466d:	pop    edi
  41466e:	and    bh,BYTE PTR [esi+0x1e]
  414671:	add    DWORD PTR [ecx-0x3e74f545],ebx
  414677:	fcom   DWORD PTR [edi+esi*4-0x70]
  41467b:	add    al,0xa5
  41467d:	fmul   QWORD PTR [esi+edi*2]
  414680:	dec    esi
  414681:	xor    DWORD PTR [ebp+0x73b4523d],eax
  414687:	retf   
  414688:	push   ecx
  414689:	aaa    
  41468a:	call   0xae08:0x1d2a7e57
  414691:	mov    edi,0x1ddf466f
  414696:	cld    
  414697:	pushf  
  414698:	lds    edi,FWORD PTR [ecx+eax*1-0x3c]
  41469c:	subps  xmm3,XMMWORD PTR [edi-0x14]
  4146a0:	jge    0x4146ff
  4146a2:	jno    0x414656
  4146a4:	rcr    BYTE PTR [eax+0x1a],1
  4146a7:	xchg   edx,eax
  4146a8:	pop    ebp
  4146a9:	loop   0x414714
  4146ab:	out    dx,eax
  4146ac:	mov    edx,0x5c79bdd9
  4146b1:	mov    cl,0x46
  4146b3:	jecxz  0x414671
  4146b5:	adc    eax,0xb38bf7a3
  4146ba:	ja     0x41465b
  4146bc:	xchg   DWORD PTR [ebx-0x2cfdd44c],eax
  4146c2:	mov    dl,0x1b
  4146c4:	push   ss
  4146c5:	mov    WORD PTR [ecx],es
  4146c7:	push   edx
  4146c8:	push   eax
  4146c9:	out    dx,eax
  4146ca:	fs ins DWORD PTR es:[edi],dx
  4146cc:	add    al,0xf6
  4146ce:	push   ss
  4146cf:	or     edx,ebp
  4146d1:	fs inc esp
  4146d3:	cmp    esi,DWORD PTR [ecx-0x11f58687]
  4146d9:	fcmovnbe st,st(1)
  4146db:	xchg   ebx,eax
  4146dc:	sub    ecx,esi
  4146de:	xchg   BYTE PTR [ebx],bl
  4146e0:	jg     0x4146ea
  4146e2:	push   edi
  4146e3:	cs dec esi
  4146e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146e6:	push   ss
  4146e7:	hlt    
  4146e8:	mov    edx,0x924e7f74
  4146ed:	stos   BYTE PTR es:[edi],al
  4146ee:	bound  ecx,QWORD PTR [edi+0x1f]
  4146f1:	inc    edx
  4146f2:	mov    bh,0x2f
  4146f4:	jecxz  0x4146b5
  4146f6:	xor    ecx,DWORD PTR [ebx+0x5d1f4c2e]
  4146fc:	not    esp
  4146fe:	mov    eax,ds:0xc245aa18
  414703:	adc    al,0x91
  414705:	mov    BYTE PTR [ecx],0x37
  414708:	rcr    BYTE PTR [ebx],1
  41470a:	js     0x41468d
  41470c:	push   ds
  41470d:	mov    ch,0x3f
  41470f:	(bad)  
  414711:	call   0xc533:0xd116f5af
  414718:	les    ecx,FWORD PTR [eax+0x1e]
  41471b:	and    eax,0xfc0fb459
  414720:	ss int3 
  414722:	and    ebx,DWORD PTR [ebx+0x4]
  414725:	fcmovb st,st(2)
  414727:	mov    ds:0xf7a691b2,eax
  41472c:	mov    edi,0x5c3bace3
  414731:	xchg   esi,eax
  414732:	ror    DWORD PTR [eax-0x22],1
  414735:	loop   0x41478d
  414737:	ficomp DWORD PTR [eax-0x66b3c953]
  41473d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41473e:	xchg   esi,eax
  41473f:	mov    edi,0xdfb69946
  414744:	pushf  
  414745:	sbb    ebp,DWORD PTR es:[edx*4-0x61aa22ae]
  41474d:	add    DWORD PTR [edi+0x77],edi
  414750:	mov    ecx,0xae368a33
  414755:	pop    edi
  414756:	mov    edx,0x54ab0d03
  41475b:	ins    DWORD PTR es:[edi],dx
  41475c:	and    DWORD PTR [eax],esi
  41475e:	inc    edx
  41475f:	leave  
  414760:	xor    BYTE PTR [esi+0x26a68d76],bh
  414766:	(bad)  [eax+0x737d4ba]
  41476c:	pop    es
  41476d:	test   al,0xaf
  41476f:	inc    esi
  414770:	std    
  414771:	cs add eax,0x6d06d362
  414777:	push   ecx
  414778:	shr    dh,1
  41477a:	pop    ebp
  41477b:	into   
  41477c:	pop    ecx
  41477d:	push   ss
  41477e:	xchg   edx,eax
  41477f:	ins    BYTE PTR es:[edi],dx
  414780:	or     esp,DWORD PTR [ecx-0x5734d330]
  414786:	mov    esp,0xed99c9b7
  41478b:	pushf  
  41478c:	test   BYTE PTR [esi],dl
  41478e:	push   esi
  41478f:	(bad)  
  414790:	aaa    
  414791:	shl    dh,1
  414793:	jae    0x414800
  414795:	or     esp,edi
  414797:	jns    0x414724
  414799:	sahf   
  41479a:	sub    edx,DWORD PTR [esi]
  41479c:	jmp    0x12a6:0xadd5558e
  4147a3:	xrstors [eax]
  4147a6:	call   0xa47d:0x9f318a32
  4147ad:	mov    cl,BYTE PTR [esi+0x244874f7]
  4147b3:	mov    ebp,0x590a78ba
  4147b9:	xor    esp,DWORD PTR [ebx-0x51c125c2]
  4147bf:	adc    al,0x16
  4147c1:	int    0xcb
  4147c3:	xor    cl,0x47
  4147c6:	aam    0xa8
  4147c8:	cmp    DWORD PTR [esi-0x711fb67b],0xe185db65
  4147d2:	sti    
  4147d3:	outs   dx,DWORD PTR ds:[esi]
  4147d4:	xor    DWORD PTR [ecx-0x2e],ebp
  4147d7:	dec    ecx
  4147d8:	iret   
  4147d9:	aas    
  4147da:	pop    ecx
  4147db:	xchg   esp,eax
  4147dc:	aaa    
  4147dd:	and    esp,edi
  4147df:	or     DWORD PTR [ecx-0x4c130e9d],esp
  4147e5:	sbb    eax,0x6acabf2c
  4147ea:	mov    dl,0xa2
  4147ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147ed:	aaa    
  4147ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147ef:	mov    edx,DWORD PTR [ebp+0x25]
  4147f2:	daa    
  4147f3:	loope  0x414835
  4147f5:	adc    edi,DWORD PTR [ebx]
  4147f7:	and    cl,ah
  4147f9:	pop    es
  4147fa:	aas    
  4147fb:	dec    ebp
  4147fc:	imul   esp,DWORD PTR [esi+0x4f48e839],0xd111e231
  414806:	int    0xed
  414808:	mov    bl,BYTE PTR [esp+edi*1-0x12]
  41480c:	pushf  
  41480d:	fisub  WORD PTR [esi+0x55a990a2]
  414813:	sbb    eax,DWORD PTR [edx+eiz*1-0x28a3bd71]
  41481a:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41481c:	adc    eax,0xd169a628
  414821:	and    dl,BYTE PTR [edx+0x26]
  414824:	call   0x3fe66c6c
  414829:	or     DWORD PTR [ebx-0x42],ebx
  41482c:	and    al,0x33
  41482e:	xchg   ebp,eax
  41482f:	mov    esp,0xe3b7a977
  414834:	sbb    dh,BYTE PTR [eax]
  414836:	test   al,0xcb
  414838:	call   0x574c2068
  41483d:	shl    BYTE PTR [esi+0x71],0xe9
  414841:	xchg   ecx,eax
  414842:	nop
  414843:	mov    bl,0xc3
  414845:	dec    eax
  414846:	inc    edi
  414847:	dec    esp
  414848:	dec    esp
  414849:	ret    0x5687
  41484c:	test   DWORD PTR [eax-0x22],0xb0969d6e
  414853:	cmp    DWORD PTR [eax],edx
  414855:	fpatan 
  414857:	pusha  
  414858:	and    eax,0x9640d1df
  41485d:	and    BYTE PTR [ebp+0x4c],cl
  414860:	and    ecx,DWORD PTR [ebx+edi*8+0x4e0d9a4]
  414867:	adc    al,al
  414869:	mov    ecx,0xc6a60f5a
  41486e:	mov    ebx,0x62778954
  414873:	adc    eax,0x8845de5c
  414878:	or     cl,BYTE PTR [eax]
  41487a:	jmp    0xce49:0x98be4a8b
  414881:	or     ebp,DWORD PTR [edi-0x55267ca6]
  414887:	ins    BYTE PTR es:[edi],dx
  414888:	lock pop esi
  41488a:	pop    ss
  41488b:	mov    BYTE PTR [eax-0x12731cb4],bh
  414891:	pop    ds
  414892:	sar    ebp,cl
  414894:	xchg   esi,eax
  414895:	push   edx
  414896:	out    dx,eax
  414897:	popf   
  414898:	mov    eax,ds:0xf781ec01
  41489d:	push   edx
  41489e:	adc    eax,0x27e101f2
  4148a3:	and    DWORD PTR [eax-0x4e7c8a4f],esp
  4148a9:	ret    
  4148aa:	xchg   DWORD PTR [eax],eax
  4148ac:	shr    ebp,cl
  4148ae:	es xor eax,0x6c1cb7c0
  4148b4:	sub    eax,0x62dc6de
  4148b9:	out    dx,al
  4148ba:	inc    esp
  4148bb:	xor    esi,DWORD PTR [ebx+0x3e40579b]
  4148c1:	fcomip st,st(4)
  4148c3:	inc    ebp
  4148c4:	inc    edi
  4148c5:	sub    eax,eax
  4148c7:	retf   0x6c14
  4148ca:	push   esi
  4148cb:	cmp    bl,dh
  4148cd:	sub    al,0x41
  4148cf:	repnz in eax,0x1f
  4148d2:	cld    
  4148d3:	shl    bh,1
  4148d5:	jo     0x414908
  4148d7:	cmp    al,0xc2
  4148d9:	cld    
  4148da:	mov    eax,ds:0xa2172854
  4148df:	pop    ecx
  4148e0:	dec    esp
  4148e1:	dec    eax
  4148e2:	pop    ebx
  4148e3:	pcmpgtw mm5,QWORD PTR [ecx]
  4148e6:	push   ss
  4148e7:	and    ch,cl
  4148e9:	mov    ebx,0x2d558fd2
  4148ee:	jmp    0xd3b2:0x82a7290d
  4148f5:	pop    ebx
  4148f6:	cli    
  4148f7:	sahf   
  4148f8:	push   cs
  4148f9:	mov    dl,0x5b
  4148fb:	sbb    ebp,DWORD PTR [ebx]
  4148fd:	cmp    ch,BYTE PTR [edi-0x2ab8b81f]
  414903:	mov    esi,0xd5d8be95
  414908:	xor    DWORD PTR [eax-0x5c2ce535],ebp
  41490e:	fmul   DWORD PTR [eax-0x7e2b8ed4]
  414914:	pop    ecx
  414915:	(bad)  
  414917:	push   es
  414918:	jg     0x4148dc
  41491a:	rol    edi,cl
  41491c:	xor    al,0x2c
  41491e:	hlt    
  41491f:	sahf   
  414920:	pop    ebx
  414921:	(bad)  
  414922:	and    BYTE PTR [edi+0x2469f804],cl
  414928:	rcl    DWORD PTR [esp+esi*8],0x15
  41492c:	mov    edx,0xd61136bf
  414931:	ss inc esp
  414933:	push   ebp
  414934:	or     al,0x48
  414936:	adc    edx,DWORD PTR [edx+0x71]
  414939:	xor    eax,0xe8b590c8
  41493e:	sbb    dh,BYTE PTR [eax]
  414940:	out    0x99,eax
  414942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414943:	xchg   esi,eax
  414944:	pushf  
  414945:	arpl   WORD PTR [esi],dx
  414947:	mov    ds:0xcff14ae4,al
  41494c:	sar    BYTE PTR [ebx],cl
  41494e:	data16 fdiv DWORD PTR [edi]
  414951:	and    BYTE PTR [ebx],bl
  414953:	(bad)  
  414954:	(bad)  
  414955:	sub    edx,DWORD PTR [eax]
  414957:	arpl   sp,cx
  414959:	fnsave [edx+0x51]
  41495c:	cmp    ebp,DWORD PTR cs:[edx+ebp*4-0x3afdf446]
  414964:	les    edx,FWORD PTR [edx]
  414966:	test   eax,0x433a47a
  41496b:	nop
  41496c:	cmp    al,0xd4
  41496e:	lods   al,BYTE PTR ds:[esi]
  41496f:	xchg   ecx,eax
  414970:	dec    esp
  414971:	pusha  
  414972:	xchg   ecx,eax
  414973:	fadd   st,st(2)
  414975:	cmp    DWORD PTR [edi+edx*8+0x1b],ebp
  414979:	pop    eax
  41497a:	pop    ebx
  41497b:	idiv   DWORD PTR [esi+0x2e]
  41497e:	sub    al,0x9d
  414980:	es out dx,al
  414982:	xchg   esp,eax
  414983:	call   0x262b1e00
  414988:	leave  
  414989:	js     0x414a08
  41498b:	push   0xc2c96ba3
  414990:	xor    al,0x1e
  414992:	add    DWORD PTR [ecx],ebx
  414994:	mov    eax,0x40aa5f29
  414999:	or     DWORD PTR ds:0x61397017,eax
  41499f:	and    DWORD PTR [ebx+ebx*4+0x1],esi
  4149a3:	sub    ebp,ebp
  4149a5:	xchg   esp,eax
  4149a6:	jo     0x4149ea
  4149a8:	scas   al,BYTE PTR es:[edi]
  4149a9:	push   es
  4149aa:	mov    al,ds:0xe489eede
  4149af:	rep outs dx,DWORD PTR ds:[esi]
  4149b1:	mov    ch,0x8f
  4149b3:	mov    eax,0xdbc5285a
  4149b8:	jecxz  0x4149ac
  4149ba:	retf   
  4149bb:	jmp    0x1226:0x2acebea1
  4149c2:	aad    0x21
  4149c4:	mov    esi,0x6fdb7d0d
  4149c9:	jbe    0x414976
  4149cb:	mov    ebx,0x97f40b15
  4149d0:	and    BYTE PTR [ecx],0x99
  4149d3:	div    DWORD PTR [esi]
  4149d5:	sbb    eax,0xc524e93a
  4149da:	pop    es
  4149db:	imul   ebx,DWORD PTR [edx],0xfffffff9
  4149de:	or     DWORD PTR [ebp-0x7b],esp
  4149e1:	sbb    dl,dh
  4149e3:	xor    esp,DWORD PTR [eax+eax*2-0x6a]
  4149e7:	mov    ds:0x299f66ce,eax
  4149ec:	test   DWORD PTR [ebp-0x5c1d4b02],esp
  4149f2:	test   DWORD PTR [edx-0x36],eax
  4149f5:	and    ebx,esi
  4149f7:	push   0xffffffd3
  4149f9:	mov    dl,0xe3
  4149fb:	in     eax,dx
  4149fc:	rcr    BYTE PTR [edx+ebx*1+0x73],1
  414a00:	(bad)  
  414a02:	cwde   
  414a03:	test   BYTE PTR [ecx],0x84
  414a06:	jb     0x4149f1
  414a08:	das    
  414a09:	loop   0x4149c5
  414a0b:	add    ch,BYTE PTR [eax]
  414a0d:	sbb    al,0x1c
  414a0f:	mov    ecx,0xd55ef4a4
  414a14:	cmp    dl,BYTE PTR [ecx-0x39]
  414a17:	push   ecx
  414a18:	outs   dx,BYTE PTR ds:[esi]
  414a19:	loop   0x4149c8
  414a1b:	mov    edi,0xcb0411a3
  414a20:	jns    0x4149ae
  414a22:	add    DWORD PTR [ecx-0x772fe2da],edi
  414a28:	mov    ds:0xb8293e74,al
  414a2d:	imul   edi,DWORD PTR [ebp-0x3412462e],0xeb911cec
  414a37:	push   ecx
  414a38:	add    eax,DWORD PTR [esi]
  414a3a:	into   
  414a3b:	nop
  414a3c:	aas    
  414a3d:	dec    eax
  414a3e:	inc    eax
  414a3f:	cs and eax,0xd89aa1ae
  414a45:	pop    ebx
  414a46:	mov    edi,0xbb4fc6b0
  414a4b:	stos   DWORD PTR es:[edi],eax
  414a4c:	inc    edx
  414a4d:	mov    ah,BYTE PTR [edi-0x68]
  414a50:	out    dx,eax
  414a51:	repnz mov ds:0x82886831,eax
  414a57:	inc    ecx
  414a58:	call   0xa1dad986
  414a5d:	scas   eax,DWORD PTR es:[edi]
  414a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a5f:	rol    BYTE PTR [eax-0x78a8f5dc],cl
  414a65:	(bad)  
  414a66:	imul   edi,DWORD PTR [ebp+0x349e7777],0x4f
  414a6d:	sbb    DWORD PTR [ecx*4-0x36881600],esp
  414a74:	pop    ds
  414a75:	xor    edi,DWORD PTR [ebp-0x7b9ba546]
  414a7b:	fsub   st(2),st
  414a7d:	lahf   
  414a7e:	out    dx,al
  414a7f:	outs   dx,BYTE PTR ds:[esi]
  414a80:	xchg   ecx,eax
  414a81:	les    ebp,FWORD PTR [edi+0x25972f70]
  414a87:	mov    ebp,0x674658cb
  414a8c:	and    esp,ebp
  414a8e:	jno    0x414ae0
  414a90:	aas    
  414a91:	and    ebx,DWORD PTR [ebx-0x4f]
  414a94:	sub    eax,0x551110bd
  414a99:	sbb    eax,DWORD PTR [bp+si]
  414a9c:	inc    eax
  414a9d:	mov    esi,0x31643823
  414aa2:	xlat   BYTE PTR ds:[ebx]
  414aa3:	inc    edi
  414aa4:	imul   ebx,DWORD PTR [ebp+0x52],0x71424c35
  414aab:	addr16 jae 0x414a75
  414aae:	aam    0xa3
  414ab0:	popa   
  414ab1:	aas    
  414ab2:	cmp    DWORD PTR ds:0xbf2ff8cf,0xffffff93
  414ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aba:	jbe    0x414ab5
  414abc:	ror    al,cl
  414abe:	test   DWORD PTR [eax+0x74518574],edi
  414ac4:	or     DWORD PTR [ecx-0x6f],ebp
  414ac7:	and    ebp,DWORD PTR [esp+eax*2-0x19bd7e34]
  414ace:	fwait
  414acf:	pop    eax
  414ad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ad1:	jp     0x414a90
  414ad3:	aam    0x29
  414ad5:	enter  0x6b8b,0xbc
  414ad9:	ficomp WORD PTR [ecx*8-0x47f57e64]
  414ae0:	mov    eax,ds:0xbe5db24e
  414ae5:	adc    ch,cl
  414ae7:	sti    
  414ae8:	fistp  WORD PTR [esi-0x1c87d2a6]
  414aee:	popa   
  414aef:	test   BYTE PTR [ecx-0x3f67684],0x9e
  414af6:	stos   BYTE PTR es:[edi],al
  414af7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414af8:	cld    
  414af9:	or     DWORD PTR [ecx-0x5f],esi
  414afc:	jle    0x414ad6
  414afe:	in     eax,0x19
  414b00:	ds call 0x2989:0x67e30cc7
  414b08:	stos   BYTE PTR es:[edi],al
  414b09:	adc    BYTE PTR [esp+edi*4+0x1d],0xf5
  414b0e:	cld    
  414b0f:	add    ebx,0x708efbdf
  414b15:	mov    ah,BYTE PTR [eax]
  414b17:	pop    ebp
  414b18:	adc    DWORD PTR [edx],esp
  414b1a:	jnp    0x414b91
  414b1c:	adc    eax,DWORD PTR [esp+ebp*8-0x36]
  414b20:	lock dec eax
  414b22:	fbstp  TBYTE PTR [edx-0x2bd6c54c]
  414b28:	fdiv   QWORD PTR [edx-0x2ef934a2]
  414b2e:	scas   eax,DWORD PTR es:[edi]
  414b2f:	mov    ss,WORD PTR [ebx]
  414b31:	outs   dx,DWORD PTR ds:[esi]
  414b32:	ds push esp
  414b34:	mov    DWORD PTR [edi-0x7a39f71c],edx
  414b3a:	mov    al,0xac
  414b3c:	sbb    al,0x53
  414b3e:	mov    eax,ds:0x304ce514
  414b43:	aam    0x16
  414b45:	pop    ecx
  414b46:	adc    DWORD PTR [ecx+0x7a4dbfbb],ebx
  414b4c:	jmp    0x414aea
  414b4e:	xchg   esp,eax
  414b4f:	(bad)  
  414b50:	out    dx,eax
  414b51:	push   ecx
  414b52:	aaa    
  414b53:	add    DWORD PTR [ebp+0x19cef4f2],0x37f0155b
  414b5d:	imul   ebx
  414b5f:	mov    al,0xb2
  414b61:	lods   eax,DWORD PTR ds:[esi]
  414b62:	aam    0xeb
  414b64:	mov    ds:0x5c93f7b4,al
  414b69:	int3   
  414b6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b6b:	dec    ebx
  414b6c:	lods   al,BYTE PTR ds:[esi]
  414b6d:	inc    ebx
  414b6e:	sbb    eax,0x2aee2c61
  414b73:	mov    cl,0x1c
  414b75:	push   edi
  414b76:	out    dx,al
  414b77:	pop    esp
  414b78:	mov    edx,0x76118113
  414b7d:	dec    edi
  414b7e:	adc    BYTE PTR [ebp+0x4302ef05],al
  414b84:	xchg   esp,eax
  414b85:	imul   BYTE PTR [edx-0x1c]
  414b88:	lods   al,BYTE PTR ds:[esi]
  414b89:	arpl   WORD PTR [esi+0x711c58d],cx
  414b8f:	loopne 0x414bb1
  414b91:	les    ebx,FWORD PTR [edx-0x598f3672]
  414b97:	push   eax
  414b98:	push   0xffffffb4
  414b9a:	pushf  
  414b9b:	push   edi
  414b9c:	and    edi,esi
  414b9e:	cs pop ebx
  414ba0:	mov    ss,ebx
  414ba2:	(bad)  
  414ba3:	adc    eax,0xf3e0b8fa
  414ba8:	mov    ss,WORD PTR [ecx]
  414baa:	mov    edx,DWORD PTR [edx-0x65]
  414bad:	repz fsub DWORD PTR [ebx-0x79]
  414bb1:	nop
  414bb2:	add    bl,BYTE PTR [edx+0x60]
  414bb5:	and    eax,0x2ac26bef
  414bba:	in     eax,0x54
  414bbc:	push   ebx
  414bbd:	pop    ss
  414bbe:	push   0xffffff82
  414bc0:	add    al,0x66
  414bc2:	push   eax
  414bc3:	or     esi,ecx
  414bc5:	jecxz  0x414bdf
  414bc7:	mov    edi,0xd5924315
  414bcc:	repz jge 0x414c4d
  414bcf:	mov    eax,0x3033d451
  414bd4:	cdq    
  414bd5:	cmp    DWORD PTR [eax-0x78561d0e],eax
  414bdb:	pop    ds
  414bdc:	sar    BYTE PTR [ebx+0x8dd160f],cl
  414be2:	adc    al,0xed
  414be4:	mov    ds:0xe88dfea7,al
  414be9:	es mov cl,0xf4
  414bec:	mov    bl,0xb6
  414bee:	out    dx,al
  414bef:	dec    edi
  414bf0:	pop    ebx
  414bf1:	scas   eax,DWORD PTR es:[edi]
  414bf2:	enter  0x8c7d,0x10
  414bf6:	cli    
  414bf7:	inc    ecx
  414bf8:	test   eax,edi
  414bfa:	je     0x414c29
  414bfc:	or     al,0x8
  414bfe:	or     cl,ah
  414c00:	xchg   ebx,eax
  414c01:	stos   BYTE PTR es:[edi],al
  414c02:	rcr    BYTE PTR [ebx+edi*8],1
  414c05:	aas    
  414c06:	pop    edx
  414c07:	repz mov eax,ds:0xc60d28ef
  414c0d:	push   edx
  414c0e:	sti    
  414c0f:	or     ecx,0xe52a82d3
  414c15:	sbb    edx,eax
  414c17:	outs   dx,BYTE PTR ds:[esi]
  414c18:	popa   
  414c19:	les    esp,FWORD PTR ds:0x5bcf5ffd
  414c1f:	scas   eax,DWORD PTR es:[edi]
  414c20:	dec    eax
  414c21:	lahf   
  414c22:	orps   xmm5,XMMWORD PTR [edi]
  414c25:	inc    eax
  414c26:	fidivr WORD PTR [edi+0x77]
  414c29:	icebp  
  414c2a:	retf   0x1cd2
  414c2d:	and    dl,BYTE PTR gs:[ebx-0x12]
  414c31:	lods   eax,DWORD PTR ds:[esi]
  414c32:	sub    al,0x90
  414c34:	jecxz  0x414c96
  414c36:	fmul   DWORD PTR [ebp-0x74]
  414c39:	inc    edi
  414c3a:	and    al,0xd1
  414c3c:	je     0x414c89
  414c3e:	and    DWORD PTR [eax+esi*1-0x5067bd7e],ecx
  414c45:	jno    0x414c55
  414c47:	sub    eax,0xda1e2988
  414c4c:	inc    edx
  414c4d:	pop    edx
  414c4e:	push   eax
  414c4f:	jns    0x414cc4
  414c51:	xor    esp,DWORD PTR [esi]
  414c53:	dec    ecx
  414c54:	call   0xe70f:0x9e514dea
  414c5b:	loope  0x414c19
  414c5d:	fdiv   st,st(4)
  414c5f:	pop    ecx
  414c60:	pop    edi
  414c61:	out    dx,al
  414c62:	push   esp
  414c63:	sbb    al,0xa5
  414c65:	div    DWORD PTR [edx+0x33973344]
  414c6b:	push   eax
  414c6c:	arpl   dx,bp
  414c6e:	(bad)  
  414c6f:	ins    BYTE PTR es:[edi],dx
  414c70:	outs   dx,BYTE PTR ss:[esi]
  414c72:	mov    al,ds:0xa13673c1
  414c77:	cmp    ecx,DWORD PTR [esi+0x32]
  414c7a:	mov    cl,0xf9
  414c7c:	addr16 cli 
  414c7e:	mov    ds:0x4ccf24e2,eax
  414c83:	test   ch,bl
  414c85:	sahf   
  414c86:	add    dh,BYTE PTR [ecx-0x5c59a03b]
  414c8c:	mov    ds:0xbccadca0,al
  414c91:	push   edi
  414c92:	sub    BYTE PTR ds:0x287fa0e,ch
  414c98:	add    esp,DWORD PTR [edx+0xa4479e5]
  414c9e:	lods   al,BYTE PTR ds:[esi]
  414c9f:	aaa    
  414ca0:	fadd   st,st(6)
  414ca2:	xchg   BYTE PTR [ebx],dl
  414ca4:	xchg   esp,eax
  414ca5:	mov    DWORD PTR [ebp+0x4c],esi
  414ca8:	sbb    BYTE PTR [edi-0x170d8a53],al
  414cae:	dec    ecx
  414caf:	pop    esi
  414cb0:	jecxz  0x414cd3
  414cb2:	sub    eax,0x3d4847cd
  414cb7:	jle    0x414c4c
  414cb9:	add    al,0xae
  414cbb:	pop    edx
  414cbc:	inc    ebx
  414cbd:	imul   ebp,DWORD PTR [edi+edx*4],0xf24d914d
  414cc4:	adc    al,0x6a
  414cc6:	ds out dx,al
  414cc8:	mov    edx,0xbdacf35
  414ccd:	rsm    
  414ccf:	fldcw  WORD PTR es:[edi-0x42]
  414cd3:	and    esi,DWORD PTR [ebx+0x58f8982]
  414cd9:	sbb    BYTE PTR [ebx],cl
  414cdb:	mov    BYTE PTR [ebx+0x34],ch
  414cde:	loope  0x414cd0
  414ce0:	cmp    al,0x8b
  414ce2:	mov    ecx,0x58b133e
  414ce7:	pop    ebp
  414ce8:	int    0x72
  414cea:	sub    al,BYTE PTR [ebp-0x52]
  414ced:	into   
  414cee:	push   ds
  414cef:	add    BYTE PTR es:[esi],dl
  414cf2:	or     dh,cl
  414cf4:	add    eax,0xda132092
  414cf9:	lods   eax,DWORD PTR ds:[esi]
  414cfa:	dec    esi
  414cfb:	jmp    0x5fa2:0x3de791a9
  414d02:	mov    cl,0x83
  414d04:	cmp    al,0xbc
  414d06:	fsubrp st(6),st
  414d08:	mov    eax,ds:0x451b0db2
  414d0d:	dec    edx
  414d0e:	jl     0x414d0e
  414d10:	push   ss
  414d11:	and    eax,0x88eeba1c
  414d16:	mov    dh,cl
  414d18:	call   0xc3db7f52
  414d1d:	sub    al,BYTE PTR [edx-0x17]
  414d20:	stc    
  414d21:	sti    
  414d22:	ins    BYTE PTR es:[edi],dx
  414d23:	push   edi
  414d24:	pop    ds
  414d25:	ret    
  414d26:	popa   
  414d27:	div    eax
  414d29:	jnp    0x414d3d
  414d2b:	inc    ecx
  414d2c:	test   ah,al
  414d2e:	mov    bl,0xd0
  414d30:	sbb    ch,dl
  414d32:	sbb    cl,BYTE PTR [ebp+0x26247c7e]
  414d38:	sbb    ebx,0x34
  414d3b:	cmp    eax,0x2dd4fa43
  414d40:	sahf   
  414d41:	adc    bl,al
  414d43:	xchg   BYTE PTR [eax+esi*1-0x1],bl
  414d47:	inc    eax
  414d48:	lods   al,BYTE PTR ds:[esi]
  414d49:	sub    al,0x93
  414d4b:	jecxz  0x414da6
  414d4d:	scas   eax,DWORD PTR es:[edi]
  414d4e:	outs   dx,BYTE PTR ds:[esi]
  414d4f:	pop    esp
  414d50:	mov    al,bh
  414d52:	aam    0x23
  414d54:	jg     0x414d69
  414d56:	adc    BYTE PTR [edx],ah
  414d58:	cmc    
  414d59:	in     al,dx
  414d5a:	xor    al,0xa4
  414d5c:	push   ss
  414d5d:	(bad)  
  414d5e:	cmp    edi,ebx
  414d60:	inc    esp
  414d61:	(bad)  [ebx+0x590417c2]
  414d67:	adc    eax,0x4b75ca06
  414d6c:	cwde   
  414d6d:	adc    al,0xf6
  414d6f:	xchg   edi,eax
  414d70:	push   ebp
  414d71:	test   al,0xde
  414d73:	or     bh,BYTE PTR [edi+esi*4+0x38dbf356]
  414d7a:	test   al,0x69
  414d7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d7d:	nop
  414d7e:	das    
  414d7f:	stos   DWORD PTR es:[edi],eax
  414d80:	jo     0x414dc8
  414d82:	push   0x341f3222
  414d87:	je     0x414dd8
  414d89:	inc    ecx
  414d8a:	xor    BYTE PTR [eax+eax*8-0x1f8e21ae],ch
  414d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d92:	out    0xc6,al
  414d94:	sbb    al,0xb8
  414d96:	fwait
  414d97:	arpl   WORD PTR [ebx+0x69],ax
  414d9a:	push   ebp
  414d9b:	or     BYTE PTR [eax-0x1b38ddd4],0x1b
  414da2:	(bad)  
  414da4:	lods   al,BYTE PTR ds:[esi]
  414da5:	pop    esi
  414da6:	sbb    al,BYTE PTR [esi+0x7c]
  414da9:	stos   BYTE PTR es:[edi],al
  414daa:	out    dx,eax
  414dab:	dec    ecx
  414dac:	pop    es
  414dad:	sti    
  414dae:	loop   0x414e24
  414db0:	adc    eax,0xcd58d7df
  414db5:	adc    esi,DWORD PTR [edi-0xc]
  414db8:	and    DWORD PTR [ecx],0x28b29d69
  414dbe:	push   0xca89731b
  414dc3:	jge    0x414dd7
  414dc5:	sub    DWORD PTR [eax],0x22
  414dc8:	into   
  414dc9:	int    0x7a
  414dcb:	cs push eax
  414dcd:	aam    0x35
  414dcf:	fimul  DWORD PTR [edi-0x6844f3b3]
  414dd5:	or     bl,BYTE PTR [ecx]
  414dd7:	scas   eax,DWORD PTR es:[edi]
  414dd8:	sbb    al,0x36
  414dda:	jb     0x414e4c
  414ddc:	or     ebp,DWORD PTR [esi-0x1a]
  414ddf:	out    0x68,eax
  414de1:	in     eax,dx
  414de2:	das    
  414de3:	int3   
  414de4:	adc    al,0x1a
  414de6:	cmp    eax,0xec2c29c
  414deb:	jge    0x414e5e
  414ded:	aas    
  414dee:	and    DWORD PTR [eax+edi*8+0x19],0xc7a192eb
  414df6:	mov    esp,0x8f82a373
  414dfb:	popf   
  414dfc:	mov    esp,0x2d7ba833
  414e01:	retf   
  414e02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e03:	rcl    DWORD PTR [ecx-0x5a],0x70
  414e07:	and    cl,BYTE PTR [edi+esi*2+0x27]
  414e0b:	fcom   QWORD PTR [ecx-0x10e895b7]
  414e11:	xchg   esi,eax
  414e12:	dec    ecx
  414e13:	push   ebx
  414e14:	dec    esi
  414e15:	std    
  414e16:	lock push es
  414e18:	data16 xchg BYTE PTR [ecx+0x33],al
  414e1c:	and    dl,bl
  414e1e:	mov    ss,ebx
  414e20:	xor    bh,BYTE PTR [edx+ebx*8-0x7]
  414e24:	bound  ebx,QWORD PTR [ebx+eiz*2-0x2bb54ddf]
  414e2b:	fcom   DWORD PTR [ebx-0x16]
  414e2e:	push   0xf4453405
  414e33:	lods   eax,DWORD PTR ds:[esi]
  414e34:	cld    
  414e35:	and    bh,BYTE PTR [bx]
  414e38:	jp     0x414eb7
  414e3a:	aaa    
  414e3b:	ret    0x88d6
  414e3e:	push   cs
  414e3f:	imul   eax,eax,0x19
  414e42:	push   eax
  414e43:	jge    0x414e35
  414e45:	clc    
  414e46:	inc    ebx
  414e47:	mov    ch,0xfb
  414e49:	or     eax,0xdf1e9947
  414e4e:	pop    ebx
  414e4f:	mov    esi,0xf9c4dad1
  414e54:	out    dx,eax
  414e55:	pop    ss
  414e56:	mov    ds:0x3c6129ce,al
  414e5b:	mov    ebp,DWORD PTR [eax+0x148611f8]
  414e61:	lahf   
  414e62:	cs inc edx
  414e64:	jo     0x414eae
  414e66:	inc    ebx
  414e67:	(bad)  
  414e68:	bnd jmp 0x83fe3b7f
  414e6e:	sub    ch,BYTE PTR [ebx+eax*8+0x7483df0a]
  414e75:	lods   al,BYTE PTR es:[esi]
  414e77:	inc    ecx
  414e78:	mov    bl,0xee
  414e7a:	sbb    DWORD PTR [edx],0xd226224
  414e80:	xchg   esi,eax
  414e81:	xchg   esi,eax
  414e82:	(bad)  
  414e85:	jl     0x414e0c
  414e87:	hlt    
  414e88:	dec    esp
  414e89:	int3   
  414e8a:	and    esi,DWORD PTR [edx+0x29ccce7a]
  414e90:	cmp    eax,0xca2784e6
  414e95:	mov    DWORD PTR [ebx-0xa2ffd70],edi
  414e9b:	push   esp
  414e9c:	dec    edx
  414e9d:	cs clc 
  414e9f:	mov    ebp,0x1e8ddde3
  414ea4:	adc    al,0x8d
  414ea6:	fwait
  414ea7:	xchg   esi,eax
  414ea8:	imul   edx,DWORD PTR [edi+0x7e],0x18e87473
  414eaf:	clc    
  414eb0:	pop    esi
  414eb1:	pop    eax
  414eb2:	out    dx,eax
  414eb3:	and    DWORD PTR [ebp+esi*1-0x1b],esp
  414eb7:	add    al,0x36
  414eb9:	jmp    0x414ee3
  414ebb:	mov    ecx,0x2b4d107e
  414ec0:	push   edx
  414ec1:	jl     0x414ec7
  414ec3:	sub    esp,DWORD PTR [ecx*1-0x17692dd3]
  414eca:	sub    al,BYTE PTR ds:0x8be016ee
  414ed0:	jp     0x414ed8
  414ed2:	gs xor eax,0xfb957def
  414ed8:	xchg   ebp,eax
  414ed9:	cdq    
  414eda:	mov    al,0x5d
  414edc:	inc    ecx
  414edd:	xchg   edi,eax
  414ede:	jle    0x414f32
  414ee0:	int3   
  414ee1:	push   ebp
  414ee2:	dec    edx
  414ee3:	mov    eax,0xef71e19a
  414ee8:	push   ebp
  414ee9:	push   ds
  414eea:	clc    
  414eeb:	inc    ebp
  414eec:	aad    0xe7
  414eee:	sti    
  414eef:	push   eax
  414ef0:	jno    0x414f60
  414ef2:	lea    eax,[ebx+edi*8]
  414ef5:	nop
  414ef6:	jnp    0x414f00
  414ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ef9:	out    0xf9,al
  414efb:	nop    edx
  414efe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414eff:	xor    esp,ecx
  414f01:	rep stos BYTE PTR es:[edi],al
  414f03:	int3   
  414f04:	int    0xde
  414f06:	repz xor ecx,edi
  414f09:	xlat   BYTE PTR ds:[ebx]
  414f0a:	cmp    al,0x3
  414f0c:	sahf   
  414f0d:	cmp    DWORD PTR [eax+0x9],ecx
  414f10:	fsub   st,st(2)
  414f12:	and    al,0x1b
  414f14:	and    ebx,DWORD PTR [esi-0x1b]
  414f17:	sbb    eax,0x38ad8ded
  414f1c:	pop    ss
  414f1d:	pop    esp
  414f1e:	call   0x1f48:0x98d874a
  414f25:	leave  
  414f26:	mov    ebp,0x37223676
  414f2b:	test   BYTE PTR [eax-0x112a7e69],0x7b
  414f32:	cmc    
  414f33:	cmc    
  414f34:	inc    edi
  414f35:	fcom   QWORD PTR ss:[edi+0x4]
  414f39:	ja     0x414edd
  414f3b:	mov    edi,0x807f06a9
  414f40:	nop
  414f41:	fnstcw WORD PTR [ebx+0x64394400]
  414f47:	dec    ecx
  414f48:	push   0x9367a766
  414f4d:	ins    BYTE PTR es:[edi],dx
  414f4e:	sub    esp,DWORD PTR [ebx+eax*4]
  414f51:	push   0x7e
  414f53:	jo     0x414f63
  414f55:	out    0x69,eax
  414f57:	pop    ebp
  414f58:	out    0x1c,al
  414f5a:	loop   0x414ef6
  414f5c:	es sub eax,0xef7ce9f0
  414f62:	in     eax,dx
  414f63:	(bad)  
  414f64:	lahf   
  414f65:	lea    esp,[ebx-0x201f4690]
  414f6b:	pop    ds
  414f6c:	xchg   DWORD PTR [esi+0x23451bd8],esi
  414f72:	adc    edx,ebx
  414f74:	sbb    eax,0x1d39cdb4
  414f79:	pop    esp
  414f7a:	push   eax
  414f7b:	mov    bh,0xe7
  414f7d:	inc    DWORD PTR [esi+eiz*8]
  414f80:	stos   DWORD PTR es:[edi],eax
  414f81:	stc    
  414f82:	lfs    esi,FWORD PTR [edi+0x4f865287]
  414f89:	test   DWORD PTR [ebp+0x204f444e],ebx
  414f8f:	iret   
  414f90:	div    DWORD PTR [eax+0x252c8a66]
  414f96:	mov    esi,DWORD PTR [ebx]
  414f98:	dec    edi
  414f99:	add    eax,DWORD PTR [esi+0xd]
  414f9c:	fwait
  414f9d:	shl    DWORD PTR [eax],cl
  414f9f:	in     eax,0xc9
  414fa1:	mov    edx,0xd4bdd692
  414fa6:	fild   QWORD PTR ds:0xba6c4d38
  414fac:	adc    DWORD PTR [eax],edx
  414fae:	loope  0x415002
  414fb0:	js     0x414f72
  414fb2:	int3   
  414fb3:	mov    esi,0x98c7b4e9
  414fb8:	popf   
  414fb9:	mov    cl,0x4f
  414fbb:	pop    es
  414fbc:	dec    ecx
  414fbd:	popa   
  414fbe:	dec    esp
  414fbf:	dec    ebx
  414fc0:	xchg   al,dh
  414fc2:	push   esi
  414fc3:	rcr    DWORD PTR [eax],0x87
  414fc6:	inc    eax
  414fc7:	push   es
  414fc8:	xchg   ebx,eax
  414fc9:	jbe    0x414ff3
  414fcb:	mov    al,0x72
  414fcd:	or     edx,DWORD PTR [edi-0x1e]
  414fd0:	lahf   
  414fd1:	(bad)  
  414fd2:	(bad)  
  414fd3:	in     al,dx
  414fd4:	jb     0x414fcb
  414fd6:	mov    al,ds:0x6c698abc
  414fdb:	pop    ecx
  414fdc:	mov    eax,ds:0x8c4f299c
  414fe1:	cmc    
  414fe2:	lods   eax,DWORD PTR ds:[esi]
  414fe3:	daa    
  414fe4:	add    eax,0xd00a1001
  414fe9:	lea    ecx,[edx+0x5d7fa957]
  414fef:	jns    0x414ffc
  414ff1:	clc    
  414ff2:	push   es
  414ff3:	cmp    DWORD PTR [ecx+ebx*2],ebp
  414ff6:	js     0x414fb4
  414ff8:	and    DWORD PTR [edx+0x16],esp
  414ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ffc:	mov    edi,0x8575d4d4
  415001:	or     ebx,DWORD PTR [edx-0x49890e8c]
  415007:	push   0xffffffb5
  415009:	neg    ch
  41500b:	in     al,dx
  41500c:	adc    eax,0x6805d1c5
  415011:	xor    eax,0x1a12ca4e
  415016:	push   es
  415017:	mov    edi,DWORD PTR [edx]
  415019:	mov    al,0x4a
  41501b:	inc    esp
  41501c:	cld    
  41501d:	int3   
  41501e:	fst    QWORD PTR [edx+0x39]
  415021:	icebp  
  415022:	mov    ds:0x87182064,eax
  415027:	ds xchg ebx,eax
  415029:	fnstenv [edx-0x1311897a]
  41502f:	add    BYTE PTR [ecx-0x37],bh
  415032:	sub    BYTE PTR [edx-0x5f215030],al
  415038:	fcmovbe st,st(1)
  41503a:	out    dx,al
  41503b:	mov    esp,0xad652db8
  415040:	into   
  415041:	pop    ds
  415042:	or     eax,DWORD PTR [ebx]
  415044:	push   ss
  415045:	push   esi
  415046:	xor    al,0x70
  415048:	inc    edx
  415049:	or     cl,BYTE PTR ds:0x46079e8c
  41504f:	dec    ebp
  415050:	popf   
  415051:	push   cs
  415052:	sub    DWORD PTR [ebx-0x21693933],ebx
  415058:	pop    ds
  415059:	sbb    DWORD PTR [esp+edi*8+0x79],edx
  41505d:	mov    edx,0x3db7b3a5
  415062:	lds    esi,FWORD PTR [eax]
  415064:	mov    dl,0x5c
  415066:	out    0xab,eax
  415068:	jno    0x41505a
  41506a:	and    dh,0x6d
  41506d:	xchg   esi,eax
  41506e:	pusha  
  41506f:	cdq    
  415070:	das    
  415071:	sahf   
  415072:	pop    edi
  415073:	daa    
  415074:	ret    
  415075:	popa   
  415076:	mov    edx,0x8cf03ff5
  41507b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41507c:	adc    BYTE PTR [edx],ah
  41507e:	jbe    0x415049
  415080:	jnp    0x4150b8
  415082:	inc    ebp
  415083:	or     ebp,ebx
  415085:	xchg   esp,eax
  415086:	jg     0x4150cc
  415088:	adc    eax,0xd9adb49f
  41508d:	in     al,dx
  41508e:	or     al,bh
  415090:	sbb    esi,eax
  415092:	or     DWORD PTR [ebp+0x53f40d06],esi
  415098:	push   esp
  415099:	(bad)  
  41509a:	cmc    
  41509b:	in     al,dx
  41509c:	xchg   edx,eax
  41509d:	mov    bl,0xe
  41509f:	push   ecx
  4150a0:	fwait
  4150a1:	out    0x3a,al
  4150a3:	and    esp,DWORD PTR [ebx]
  4150a5:	or     ebp,DWORD PTR [eax]
  4150a7:	stos   BYTE PTR es:[edi],al
  4150a8:	or     eax,0xa8ab4ad2
  4150ad:	xchg   DWORD PTR ds:0x13421ce8,esi
  4150b3:	inc    esi
  4150b4:	mov    edx,0xa857cd04
  4150b9:	inc    esp
  4150ba:	add    bl,BYTE PTR [ecx+edi*4-0x27]
  4150be:	mov    ebx,0x6d3c6cf9
  4150c3:	push   eax
  4150c4:	xchg   esi,eax
  4150c5:	adc    BYTE PTR [ebp+eax*2-0x3f],dh
  4150c9:	stos   BYTE PTR es:[edi],al
  4150ca:	xchg   DWORD PTR [eax+0xc],ebp
  4150cd:	data16 icebp 
  4150cf:	inc    eax
  4150d0:	and    ebx,DWORD PTR [edi]
  4150d2:	jno    0x4150c6
  4150d4:	jge    0x415083
  4150d6:	xchg   ebx,eax
  4150d7:	mov    ebx,0x10ed8011
  4150dc:	retf   0xf219
  4150df:	inc    ecx
  4150e0:	add    eax,0xddafa583
  4150e5:	dec    eax
  4150e6:	hlt    
  4150e7:	in     eax,0x6b
  4150e9:	adc    al,0xc7
  4150eb:	mov    DWORD PTR [eax-0x4b],esi
  4150ee:	pusha  
  4150ef:	stc    
  4150f0:	lods   eax,DWORD PTR ds:[esi]
  4150f1:	lock (bad) 
  4150f3:	xor    ch,BYTE PTR [edi+esi*8-0x4e96e36f]
  4150fa:	push   ebx
  4150fb:	fcmove st,st(3)
  4150fd:	dec    ebx
  4150fe:	rol    ebp,1
  415100:	rcr    DWORD PTR [ebp+0x210e8469],0xfe
  415107:	sub    eax,0x7f4d0aac
  41510c:	frstor ds:[esp+eiz*8-0x29ef9e9f]
  415114:	call   0x4814:0xcea8dc8c
  41511b:	or     DWORD PTR [edi],0x16
  41511e:	ds dec esi
  415120:	dec    esi
  415121:	xor    DWORD PTR [edx+0x56],eax
  415124:	popa   
  415125:	mov    edi,0x25b4e9c6
  41512a:	leave  
  41512b:	arpl   WORD PTR [ecx+0x135d0c26],di
  415131:	add    BYTE PTR [ecx-0x78],dh
  415134:	icebp  
  415135:	inc    ecx
  415136:	ficom  DWORD PTR [edi+0x650018cc]
  41513c:	mov    bh,0x16
  41513e:	add    eax,0x452de525
  415143:	sbb    al,0xe1
  415145:	xor    ebx,DWORD PTR [bx-0x3d]
  415149:	ficom  WORD PTR [ebp+0x7f9037d]
  41514f:	jbe    0x41510e
  415151:	xlat   BYTE PTR ds:[ebx]
  415152:	add    ecx,ebp
  415154:	in     al,dx
  415155:	pop    eax
  415156:	loopne 0x41510c
  415158:	or     dh,bh
  41515a:	jne    0x41515d
  41515c:	xchg   ecx,eax
  41515d:	inc    esp
  41515e:	aaa    
  41515f:	mov    ds:0xcfaa4470,al
  415164:	cld    
  415165:	xchg   edx,eax
  415166:	xor    eax,0x6030cb99
  41516b:	mov    eax,ds:0x50135b11
  415170:	arpl   WORD PTR [ebp+0x3ee3e6cc],bx
  415176:	push   esi
  415177:	mov    dl,0x32
  415179:	push   0xffffffae
  41517b:	mov    WORD PTR [ebx],ss
  41517d:	jecxz  0x415135
  41517f:	xchg   esi,eax
  415180:	das    
  415181:	lods   eax,DWORD PTR ds:[esi]
  415182:	pushf  
  415183:	jne    0x41514a
  415185:	aaa    
  415186:	dec    edx
  415187:	pop    ecx
  415188:	fwait
  415189:	xor    esp,DWORD PTR [esi+0x2c270e9b]
  41518f:	inc    eax
  415190:	inc    ebx
  415191:	xor    ah,BYTE PTR [ebx-0x10045436]
  415197:	je     0x415174
  415199:	add    ebp,ecx
  41519b:	cmp    al,0xed
  41519d:	xor    al,0x66
  41519f:	imul   edx,eax,0xffffffb9
  4151a2:	cmp    esp,DWORD PTR [ecx+0x30]
  4151a5:	inc    eax
  4151a6:	mov    cl,0x52
  4151a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151a9:	call   0xe707:0xbe6dbc3d
  4151b0:	dec    edx
  4151b1:	mov    ch,0xa4
  4151b3:	xchg   ecx,eax
  4151b4:	imul   edi,ebp,0xffffffd6
  4151b7:	dec    edi
  4151b8:	cmp    al,0x46
  4151ba:	out    0x96,eax
  4151bc:	call   0x9b05:0x19eada2b
  4151c3:	sub    esp,eax
  4151c5:	jg     0x4151f2
  4151c7:	mov    ch,0xf9
  4151c9:	jmp    0x6d871eeb
  4151ce:	jns    0x41523a
  4151d0:	cmp    ebx,esp
  4151d2:	push   esp
  4151d3:	mov    BYTE PTR [eax+0x5f514291],0xaa
  4151da:	add    BYTE PTR [ecx],0x92
  4151dd:	in     al,dx
  4151de:	or     DWORD PTR [esi],eax
  4151e0:	inc    esp
  4151e1:	in     eax,0x4f
  4151e3:	adc    eax,0x8e1e316b
  4151e8:	call   0xc4d8bb03
  4151ed:	sbb    edx,DWORD PTR [eax+esi*8-0x792009ae]
  4151f4:	shl    DWORD PTR [esi-0xc],cl
  4151f7:	add    dl,BYTE PTR [eax]
  4151f9:	sar    BYTE PTR [edi-0x8],cl
  4151fc:	mov    fs,WORD PTR [eax]
  4151fe:	cmp    al,0x10
  415200:	les    esi,FWORD PTR [esi-0x3c]
  415203:	inc    eax
  415204:	nop
  415205:	lock cld 
  415207:	sub    DWORD PTR [eax-0x78],esp
  41520a:	xor    DWORD PTR [esi],edx
  41520c:	and    ch,ah
  41520e:	and    dl,BYTE PTR [ecx-0x570c9f95]
  415214:	sub    al,0xff
  415216:	mov    ah,BYTE PTR [ecx-0x1e]
  415219:	in     eax,dx
  41521a:	fld    QWORD PTR [edi+ecx*8+0x18]
  41521e:	in     al,0xee
  415220:	cld    
  415221:	mov    ds,WORD PTR ds:[esi+esi*2]
  415225:	pop    ebx
  415226:	ds fwait
  415228:	push   0xffffffec
  41522a:	inc    ecx
  41522b:	std    
  41522c:	xor    BYTE PTR [ecx+0x250a4647],cl
  415232:	jecxz  0x415227
  415234:	rol    BYTE PTR [ecx],cl
  415236:	push   ecx
  415237:	std    
  415238:	push   cs
  415239:	jae    0x415202
  41523b:	or     BYTE PTR [ecx],ah
  41523d:	or     BYTE PTR [eax+0x30],dh
  415240:	adc    eax,DWORD PTR ds:0x1c2aeae4
  415246:	mov    dl,0xcf
  415248:	jb     0x415233
  41524a:	sbb    dl,cl
  41524c:	mov    cl,0x9a
  41524e:	pushf  
  41524f:	es scas al,BYTE PTR es:[edi]
  415251:	adc    eax,0xc3dccf67
  415256:	add    DWORD PTR [eax+ebp*2+0x3e],esi
  41525a:	push   ss
  41525b:	std    
  41525c:	rol    ch,0xc8
  41525f:	mov    bl,BYTE PTR [edi-0x53a29a6a]
  415265:	out    dx,al
  415266:	test   DWORD PTR [eax+0x7fdec6f6],0xf992ccbe
  415270:	out    0xa6,eax
  415272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415273:	pop    eax
  415274:	scas   al,BYTE PTR es:[edi]
  415275:	fwait
  415276:	sbb    al,0x10
  415278:	in     al,0xc7
  41527a:	mov    edx,0xed3f6108
  41527f:	pop    esi
  415280:	clc    
  415281:	aad    0x4
  415283:	dec    esi
  415284:	bound  esi,QWORD PTR [ecx-0x730b1987]
  41528a:	push   edx
  41528b:	mov    cl,0xd9
  41528d:	jo     0x415266
  41528f:	add    esi,ebx
  415291:	xor    eax,0x86b4e6df
  415296:	jle    0x415298
  415298:	xor    eax,0xa879ee56
  41529d:	mov    BYTE PTR [edx-0x641aaf30],ch
  4152a3:	mov    ebx,0x28f6a19e
  4152a8:	push   ebx
  4152a9:	xchg   ebp,eax
  4152aa:	pcmpgtd mm7,QWORD PTR [esi]
  4152ad:	or     bl,BYTE PTR ss:[esi+ecx*1-0x57]
  4152b2:	jl     0x415314
  4152b4:	xor    eax,0xffea3e85
  4152b9:	nop
  4152ba:	jno    0x415303
  4152bc:	sub    al,0xd9
  4152be:	push   eax
  4152bf:	sbb    al,0xcc
  4152c1:	dec    ebx
  4152c2:	and    eax,DWORD PTR [ebx+0x7b]
  4152c5:	push   esp
  4152c6:	sbb    DWORD PTR [edx+0x30],0x9e3fb3ed
  4152cd:	mov    bh,0x15
  4152cf:	mov    ch,cl
  4152d1:	scas   eax,DWORD PTR es:[edi]
  4152d2:	aaa    
  4152d3:	push   esi
  4152d4:	sbb    DWORD PTR [edx],esp
  4152d6:	push   ecx
  4152d7:	stos   DWORD PTR es:[edi],eax
  4152d8:	hlt    
  4152d9:	add    DWORD PTR [edx],ebx
  4152db:	adc    cl,ch
  4152dd:	mov    ebx,0xd08cbfda
  4152e2:	add    ecx,esp
  4152e4:	shl    BYTE PTR [ecx],1
  4152e6:	std    
  4152e7:	xor    eax,0xf757f33b
  4152ec:	sbb    ecx,ebx
  4152ee:	push   ss
  4152ef:	fbstp  TBYTE PTR [esi+edi*2]
  4152f2:	neg    BYTE PTR [ebp+esi*2+0x3e]
  4152f6:	aam    0xaf
  4152f8:	iret   
  4152f9:	dec    edi
  4152fa:	mov    bh,0x67
  4152fc:	add    eax,0xfa581b3b
  415301:	sbb    al,0x5e
  415303:	dec    esp
  415304:	cmp    eax,0x3213d4d6
  415309:	loopne 0x41531c
  41530b:	fcmovnu st,st(7)
  41530d:	int3   
  41530e:	xor    eax,0xdd61b06d
  415313:	fmulp  st(5),st
  415315:	pop    es
  415316:	inc    eax
  415317:	fdiv   QWORD PTR [ecx-0x62f39a7c]
  41531d:	jle    0x415394
  41531f:	xchg   DWORD PTR [ecx-0x3b7087de],edi
  415325:	adc    esp,DWORD PTR ds:0x4203b348
  41532b:	daa    
  41532c:	cdq    
  41532d:	inc    edx
  41532e:	dec    eax
  41532f:	mov    esp,0x4020b2e
  415334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415335:	adc    esp,DWORD PTR [esi]
  415337:	out    0x81,al
  415339:	dec    edx
  41533a:	ret    0x3fe6
  41533d:	cli    
  41533e:	bound  edi,QWORD PTR [ebx+0x6c]
  415341:	dec    edi
  415342:	and    edi,DWORD PTR [ecx+0x3d13def5]
  415348:	ss xchg ebx,eax
  41534a:	call   DWORD PTR ds:0x41702c
  415350:	mov    DWORD PTR [ebp-0x2c],eax
  415353:	movzx  edx,WORD PTR [ebp-0x2c]
  415357:	cmp    edx,0x539
  41535d:	jne    0x41538e
  41535f:	mov    DWORD PTR [ebp-0x14],0xe0d
  415366:	lea    eax,[ebp-0x28]
  415369:	push   eax
  41536a:	call   DWORD PTR ds:0x417030
  415370:	mov    DWORD PTR [ebp-0x60],eax
  415373:	mov    DWORD PTR [ebp-0x54],0x3a
  41537a:	mov    BYTE PTR [ebp-0x34],0x0
  41537e:	mov    DWORD PTR [ebp-0x8],0xed6cabff
  415385:	mov    DWORD PTR [ebp-0x68],0x10acf7
  41538c:	jmp    0x415395
  41538e:	mov    BYTE PTR ds:0x419f40,0x0
  415395:	push   0x0
  415397:	call   DWORD PTR ds:0x417030
  41539d:	mov    DWORD PTR [ebp-0x2c],eax
  4153a0:	push   DWORD PTR ds:0x417030
  4153a6:	pop    edx
  4153a7:	mov    DWORD PTR [ebp-0x6c],edx
  4153aa:	lea    ecx,[ebp-0x40]
  4153ad:	push   ecx
  4153ae:	mov    edx,DWORD PTR [ebp-0x60]
  4153b1:	push   edx
  4153b2:	call   DWORD PTR ds:0x417038
  4153b8:	mov    DWORD PTR [ebp-0x44],eax
  4153bb:	push   DWORD PTR [ebp-0x30]
  4153be:	push   0x1000
  4153c3:	mov    eax,DWORD PTR [ebp-0x14]
  4153c6:	add    eax,0x23
  4153c9:	add    eax,0x23
  4153cc:	push   eax
  4153cd:	xor    eax,eax
  4153cf:	push   eax
  4153d0:	mov    ecx,DWORD PTR [ebp-0x44]
  4153d3:	call   ecx
  4153d5:	push   eax
  4153d6:	pop    ecx
  4153d7:	mov    DWORD PTR [ebp-0x4],ecx
  4153da:	mov    eax,DWORD PTR [ebp-0x68]
  4153dd:	sub    eax,0xdae0b
  4153e2:	mov    DWORD PTR [ebp-0x68],eax
  4153e5:	cmp    DWORD PTR [ebp-0x4],0x0
  4153e9:	jne    0x415403
  4153eb:	push   0x0
  4153ed:	push   0x0
  4153ef:	call   0x416aac
  4153f4:	push   0x0
  4153f6:	call   DWORD PTR ds:0x417040
  4153fc:	mov    BYTE PTR ds:0x42fed0,0x0
  415403:	mov    ecx,DWORD PTR [ebp-0x4]
  415406:	add    ecx,DWORD PTR [ebp-0x14]
  415409:	mov    edx,DWORD PTR [ebp-0x8]
  41540c:	mov    DWORD PTR [ecx],edx
  41540e:	mov    eax,DWORD PTR [ebp-0x4]
  415411:	add    eax,DWORD PTR [ebp-0x54]
  415414:	mov    DWORD PTR [ebp-0x5c],eax
  415417:	mov    ecx,DWORD PTR ds:0x417038
  41541d:	mov    DWORD PTR [ebp-0x4c],ecx
  415420:	mov    edx,DWORD PTR [ebp-0x4]
  415423:	add    edx,DWORD PTR [ebp-0x14]
  415426:	mov    eax,DWORD PTR [ebp+0x8]
  415429:	mov    DWORD PTR [edx+0x4],eax
  41542c:	mov    ecx,DWORD PTR [ebp-0x4]
  41542f:	add    ecx,DWORD PTR [ebp-0x14]
  415432:	mov    DWORD PTR [ebp-0xc],ecx
  415435:	cmp    DWORD PTR [ebp-0x68],0x0
  415439:	jbe    0x415456
  41543b:	mov    edx,DWORD PTR [ebp-0xc]
  41543e:	push   edx
  41543f:	mov    eax,DWORD PTR [ebp-0x14]
  415442:	push   eax
  415443:	mov    ecx,DWORD PTR [ebp-0x2c]
  415446:	add    ecx,DWORD PTR [ebp-0x68]
  415449:	push   ecx
  41544a:	mov    edx,DWORD PTR [ebp-0x4]
  41544d:	push   edx
  41544e:	call   0x4169bf
  415453:	add    esp,0x10
  415456:	cmp    DWORD PTR [ebp-0x5c],0x0
  41545a:	je     0x41546a
  41545c:	push   DWORD PTR [ebp-0x4c]
  41545f:	push   DWORD PTR [ebp-0x6c]
  415462:	mov    edx,DWORD PTR [ebp-0x5c]
  415465:	push   eax
  415466:	jmp    edx
  415468:	jmp    0x415470
  41546a:	mov    eax,DWORD PTR [ebp+0x8]
  41546d:	mov    DWORD PTR [ebp-0x18],eax
  415470:	mov    eax,0x1
  415475:	mov    esp,ebp
  415477:	pop    ebp
  415478:	ret    
  415479:	push   ebp
  41547a:	mov    ebp,esp
  41547c:	pop    ebp
  41547d:	ret    
  41547e:	push   ebp
  41547f:	mov    ebp,esp
  415481:	sub    esp,0x54
  415484:	mov    DWORD PTR [ebp-0x34],0x0
  41548b:	mov    DWORD PTR [ebp-0x4],0x0
  415492:	mov    DWORD PTR [ebp-0x50],0x0
  415499:	mov    DWORD PTR [ebp-0x4c],0x0
  4154a0:	mov    DWORD PTR [ebp-0x30],0x0
  4154a7:	lea    eax,[ebp-0x48]
  4154aa:	push   eax
  4154ab:	call   DWORD PTR ds:0x417028
  4154b1:	mov    ecx,DWORD PTR [ebp-0x34]
  4154b4:	push   ecx
  4154b5:	call   0x4154e4
  4154ba:	add    esp,0x4
  4154bd:	call   0x4169b0
  4154c2:	mov    DWORD PTR [ebp-0x54],0x0
  4154c9:	jmp    0x4154d4
  4154cb:	mov    edx,DWORD PTR [ebp-0x54]
  4154ce:	add    edx,0x1
  4154d1:	mov    DWORD PTR [ebp-0x54],edx
  4154d4:	cmp    DWORD PTR [ebp-0x54],0x64
  4154d8:	jae    0x4154dc
  4154da:	jmp    0x4154cb
  4154dc:	xor    eax,eax
  4154de:	mov    esp,ebp
  4154e0:	pop    ebp
  4154e1:	ret    0x10
  4154e4:	push   ebp
  4154e5:	mov    ebp,esp
  4154e7:	sub    esp,0x3c
  4154ea:	push   esi
  4154eb:	mov    DWORD PTR [ebp-0x3c],0x0
  4154f2:	mov    DWORD PTR [ebp-0x38],0x0
  4154f9:	mov    DWORD PTR [ebp-0x30],0x0
  415500:	mov    DWORD PTR [ebp-0x24],0x0
  415507:	mov    DWORD PTR [ebp-0x1c],0x0
  41550e:	mov    DWORD PTR [ebp-0x28],0x0
  415515:	mov    DWORD PTR [ebp-0x2c],0x449408
  41551c:	mov    DWORD PTR [ebp-0x24],0xe178f388
  415523:	mov    DWORD PTR [ebp-0x34],0x0
  41552a:	mov    eax,DWORD PTR [ebp-0x24]
  41552d:	mov    DWORD PTR [ebp-0x20],eax
  415530:	mov    DWORD PTR [ebp-0x4],0x0
  415537:	mov    ecx,DWORD PTR ds:0x41702c
  41553d:	mov    DWORD PTR [ebp-0x4],ecx
  415540:	push   0x0
  415542:	push   0x4e
  415544:	push   0x1e
  415546:	push   0x0
  415548:	push   0xffffffff
  41554a:	call   DWORD PTR ds:0x417034
  415550:	test   eax,eax
  415552:	je     0x41698f
  415558:	or     al,0x50
  41555a:	das    
  41555b:	or     al,0x83
  41555d:	push   ds
  41555e:	stos   DWORD PTR es:[edi],eax
  41555f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415560:	test   al,0xcd
  415562:	push   ebx
  415563:	nop
  415564:	sar    DWORD PTR [esi-0x7f4b40f6],1
  41556a:	push   ds
  41556b:	stos   DWORD PTR es:[edi],eax
  41556c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41556d:	lods   al,BYTE PTR ds:[esi]
  41556e:	int    0x53
  415570:	shr    BYTE PTR [esi],1
  415572:	inc    ecx
  415573:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41557a:	lods   al,BYTE PTR ds:[esi]
  41557b:	int    0x53
  41557d:	nop
  41557e:	cs inc ecx
  415580:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415587:	lods   al,BYTE PTR ds:[esi]
  415588:	int    0x53
  41558a:	nop
  41558b:	cs inc ecx
  41558d:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415595:	int3   
  415596:	push   ebx
  415597:	nop
  415598:	and    BYTE PTR [esi-0x50],bl
  41559b:	mov    cl,0xc
  41559d:	xor    al,0x17
  41559f:	data16 test BYTE PTR [esp+ecx*8],dl
  4155a3:	pop    ds
  4155a4:	pop    ebp
  4155a5:	unpckhps xmm4,XMMWORD PTR [edx-0x2a]
  4155a9:	jg     0x41554b
  4155ab:	outs   dx,BYTE PTR ds:[esi]
  4155ac:	fxch   st(2)
  4155ae:	retf   
  4155af:	mov    edi,0x220efd32
  4155b4:	imul   edx,ecx,0x62
  4155b7:	out    dx,eax
  4155b8:	push   0xffffff8b
  4155ba:	(bad)  
  4155bb:	leave  
  4155bc:	in     eax,dx
  4155bd:	and    ebp,esp
  4155bf:	inc    eax
  4155c0:	popa   
  4155c1:	arpl   cx,dx
  4155c3:	sub    al,0xc4
  4155c5:	push   ecx
  4155c6:	clc    
  4155c7:	test   ecx,eax
  4155c9:	mov    ds:0x4c00f537,al
  4155ce:	pop    es
  4155cf:	mov    ch,0x28
  4155d1:	sbb    BYTE PTR [esi],0xab
  4155d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155d5:	lods   al,BYTE PTR ds:[esi]
  4155d6:	int    0x53
  4155d8:	jmp    0xf8a2:0x818457e1
  4155df:	ret    
  4155e0:	xchg   ebp,eax
  4155e1:	or     edx,esp
  4155e3:	adc    BYTE PTR [ebp+0x3e],ch
  4155e6:	push   esi
  4155e7:	pushf  
  4155e8:	das    
  4155e9:	mov    edx,gs
  4155eb:	pop    ebp
  4155ec:	cmp    al,0x5
  4155ee:	fnsave [ecx-0x18]
  4155f1:	pusha  
  4155f2:	inc    edx
  4155f3:	repz (bad) 
  4155f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155f6:	(bad)  
  4155f7:	shl    DWORD PTR [ebp-0x468787d3],1
  4155fd:	arpl   WORD PTR [ebx],bp
  4155ff:	dec    ebp
  415600:	jg     0x41559b
  415602:	fldenv [edx+0x37]
  415605:	cs data16 jbe 0x41559b
  415609:	jp     0x415641
  41560b:	mov    fs,WORD PTR [edi-0x7728c680]
  415611:	fisubr DWORD PTR [ebx-0x3d]
  415614:	mov    cs,WORD PTR [ebx]
  415616:	aam    0x10
  415618:	ins    DWORD PTR es:[edi],dx
  415619:	ds push edi
  41561b:	pushf  
  41561c:	inc    ebx
  41561d:	adc    BYTE PTR [ebp+ebx*2-0x24],dh
  415621:	and    eax,0xfdfd71cf
  415626:	call   0x687abb1e
  41562b:	sar    ecx,1
  41562d:	mov    al,0xd3
  41562f:	js     0x4155ba
  415631:	(bad)  
  415632:	mov    cl,0x4d
  415634:	adc    edi,ebp
  415636:	jb     0x41569a
  415638:	sub    DWORD PTR [ebx+0x29a76fb],esi
  41563e:	mov    ch,0x8e
  415640:	ret    0x2247
  415643:	bound  eax,QWORD PTR [ecx-0x543c075e]
  415649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41564a:	lods   al,BYTE PTR ds:[esi]
  41564b:	int    0x53
  41564d:	nop
  41564e:	cs inc ecx
  415650:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415657:	lods   al,BYTE PTR ds:[esi]
  415658:	int    0x53
  41565a:	nop
  41565b:	cs inc ecx
  41565d:	or     bh,BYTE PTR [edi-0x54a42ff4]
  415663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415664:	loopne 0x415632
  415666:	push   eax
  415667:	nop
  415668:	dec    eax
  415669:	cmova  esi,eax
  41566c:	or     al,0x80
  41566e:	push   ds
  41566f:	stos   DWORD PTR es:[edi],eax
  415670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415671:	lods   al,BYTE PTR ds:[esi]
  415672:	int    0x53
  415674:	jo     0x4156a4
  415676:	inc    ebx
  415677:	or     esi,DWORD PTR [ebp+ecx*1+0x47ab1e8a]
  41567e:	test   al,0xcd
  415680:	push   ebx
  415681:	adc    al,0x28
  415683:	inc    ecx
  415684:	or     bh,BYTE PTR [edi+0x165d800c]
  41568a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41568b:	lods   al,BYTE PTR ds:[esi]
  41568c:	int    0x43
  41568e:	nop
  41568f:	cs inc ecx
  415691:	or     bh,BYTE PTR [edx-0x14e17ff4]
  415697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415698:	lods   al,BYTE PTR ds:[esi]
  415699:	fst    QWORD PTR [ebx-0x70]
  41569c:	cs inc ebx
  41569e:	or     bh,BYTE PTR [edi-0x54e07ff7]
  4156a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156a5:	lods   al,BYTE PTR ds:[esi]
  4156a6:	int    0x53
  4156a8:	xchg   ebp,eax
  4156a9:	cs inc eax
  4156ab:	or     bh,BYTE PTR [edi-0x54e17ff4]
  4156b1:	xchg   ebp,eax
  4156b2:	mov    al,ds:0x2e9453cd
  4156b7:	inc    ecx
  4156b8:	add    BYTE PTR [ecx+0x8],al
  4156bb:	sbb    BYTE PTR [ebx+ebp*4],0xe5
  4156bf:	sub    eax,0x2e8053cd
  4156c4:	inc    ecx
  4156c5:	sbb    bh,BYTE PTR [edi-0x44e17ff4]
  4156cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156cc:	lods   al,BYTE PTR ds:[esi]
  4156cd:	fst    QWORD PTR [ebx-0x70]
  4156d0:	cs inc ecx
  4156d2:	or     bh,BYTE PTR [edi-0x54e17fe4]
  4156d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156d9:	lods   al,BYTE PTR ds:[esi]
  4156da:	int    0x53
  4156dc:	nop
  4156dd:	cs inc ecx
  4156df:	or     bh,BYTE PTR [ebx-0xde173f4]
  4156e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156e6:	lods   al,BYTE PTR ds:[esi]
  4156e7:	int    0x53
  4156e9:	push   eax
  4156ea:	and    eax,0xc805f41
  4156ef:	sbb    BYTE PTR [esi],0xab
  4156f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156f3:	lods   al,BYTE PTR ds:[esi]
  4156f4:	int    0x53
  4156f6:	nop
  4156f7:	cs inc ecx
  4156f9:	or     bh,BYTE PTR [edi-0x54e17ff4]
  4156ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415700:	lods   al,BYTE PTR ds:[esi]
  415701:	in     eax,dx
  415702:	pop    edi
  415703:	nop
  415704:	ss inc ecx
  415706:	or     bh,BYTE PTR [edi-0x54e17ff4]
  41570c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41570d:	lods   al,BYTE PTR ds:[esi]
  41570e:	int    0x53
  415710:	nop
  415711:	cs inc ecx
  415713:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41571a:	lods   al,BYTE PTR ds:[esi]
  41571b:	int    0x53
  41571d:	nop
  41571e:	cs inc ecx
  415720:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415727:	lods   al,BYTE PTR ds:[esi]
  415728:	int    0x53
  41572a:	nop
  41572b:	cs inc ecx
  41572d:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415734:	lods   al,BYTE PTR ds:[esi]
  415735:	int    0x53
  415737:	nop
  415738:	cs inc ecx
  41573a:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415741:	lods   al,BYTE PTR ds:[esi]
  415742:	int    0x53
  415744:	nop
  415745:	cs inc ecx
  415747:	or     bh,BYTE PTR [edi-0x54e17ff4]
  41574d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41574e:	lods   al,BYTE PTR ds:[esi]
  41574f:	int    0x53
  415751:	nop
  415752:	cs inc ecx
  415754:	or     bh,BYTE PTR [edi-0x20cf7ff4]
  41575a:	rcl    ah,0xb9
  41575d:	push   ebx
  41575e:	nop
  41575f:	cs inc ecx
  415761:	mov    edx,0xe800cb4
  415766:	stos   DWORD PTR es:[edi],eax
  415767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415768:	lods   al,BYTE PTR ds:[esi]
  415769:	stos   DWORD PTR es:[edi],eax
  41576a:	push   edi
  41576b:	nop
  41576c:	cs inc ebp
  41576e:	or     bh,BYTE PTR [edi-0x66a23aa4]
  415774:	icebp  
  415775:	jecxz  0x415744
  415777:	push   ebx
  415778:	nop
  415779:	cs inc ecx
  41577b:	or     bl,BYTE PTR [edi-0x7a017ff4]
  415781:	xlat   BYTE PTR ds:[ebx]
  415782:	fistp  QWORD PTR [edi+0x412e9030]
  415788:	or     bl,bh
  41578a:	or     al,0x80
  41578c:	push   ds
  41578d:	imul   ebp,DWORD PTR [esi-0x6ffe3254],0x2e
  415794:	inc    ecx
  415795:	pusha  
  415796:	mov    ebx,0xab1e800c
  41579b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41579c:	lods   al,BYTE PTR ds:[esi]
  41579d:	int    0x53
  41579f:	nop
  4157a0:	cs inc ecx
  4157a2:	or     bh,BYTE PTR [edi+0x4b1e802c]
  4157a8:	mov    ebx,esi
  4157aa:	test   al,0x3f
  4157ac:	dec    DWORD PTR [ebp+0x41]
  4157af:	or     bh,BYTE PTR [edi-0x54e17ff2]
  4157b5:	test   DWORD PTR [eax+0x2e9253cd],esp
  4157bb:	inc    ecx
  4157bc:	or     al,BYTE PTR [ebx]
  4157be:	or     BYTE PTR [eax-0x535a54e2],al
  4157c4:	int    0x53
  4157c6:	nop
  4157c7:	cs inc ecx
  4157c9:	or     bh,BYTE PTR [edi-0x54e13ff4]
  4157cf:	lods   al,BYTE PTR gs:[esi]
  4157d1:	int    0x53
  4157d3:	nop
  4157d4:	cs inc ecx
  4157d6:	or     bh,BYTE PTR [edi-0x54e17ff4]
  4157dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157dd:	lods   al,BYTE PTR ds:[esi]
  4157de:	int    0x53
  4157e0:	nop
  4157e1:	cs inc ecx
  4157e3:	or     bh,BYTE PTR [edi-0x54e17ff4]
  4157e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157ea:	lods   al,BYTE PTR ds:[esi]
  4157eb:	int    0x53
  4157ed:	nop
  4157ee:	cs inc ecx
  4157f0:	or     bh,BYTE PTR [edi-0x54e17ff4]
  4157f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157f7:	lods   al,BYTE PTR ds:[esi]
  4157f8:	int    0x53
  4157fa:	nop
  4157fb:	cs inc ecx
  4157fd:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415804:	lods   al,BYTE PTR ds:[esi]
  415805:	int    0x53
  415807:	nop
  415808:	cs inc ecx
  41580a:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415811:	lods   al,BYTE PTR ds:[esi]
  415812:	int    0x53
  415814:	nop
  415815:	cs inc ecx
  415817:	or     bh,BYTE PTR [edi-0x54e17ff4]
  41581d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41581e:	lods   al,BYTE PTR ds:[esi]
  41581f:	int    0x53
  415821:	nop
  415822:	cs inc ecx
  415824:	or     bh,BYTE PTR [edi-0x54e17ff4]
  41582a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41582b:	lods   al,BYTE PTR ds:[esi]
  41582c:	int    0x53
  41582e:	nop
  41582f:	cs inc ecx
  415831:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415838:	lods   al,BYTE PTR ds:[esi]
  415839:	int    0x53
  41583b:	nop
  41583c:	cs inc ecx
  41583e:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415845:	lods   al,BYTE PTR ds:[esi]
  415846:	int    0x53
  415848:	nop
  415849:	cs inc ecx
  41584b:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415852:	lods   al,BYTE PTR ds:[esi]
  415853:	int    0x53
  415855:	nop
  415856:	cs inc ecx
  415858:	or     bh,BYTE PTR [edi-0x54e17ff4]
  41585e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41585f:	lods   al,BYTE PTR ds:[esi]
  415860:	int    0x53
  415862:	nop
  415863:	cs inc ecx
  415865:	or     bh,BYTE PTR [edi-0x54e17ff4]
  41586b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41586c:	lods   al,BYTE PTR ds:[esi]
  41586d:	int    0x53
  41586f:	nop
  415870:	cs inc ecx
  415872:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415879:	lods   al,BYTE PTR ds:[esi]
  41587a:	int    0x53
  41587c:	nop
  41587d:	cs inc ecx
  41587f:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415886:	lods   al,BYTE PTR ds:[esi]
  415887:	int    0x53
  415889:	nop
  41588a:	cs inc ecx
  41588c:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415892:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415893:	lods   al,BYTE PTR ds:[esi]
  415894:	int    0x53
  415896:	nop
  415897:	cs inc ecx
  415899:	or     bh,BYTE PTR [edi-0x54e17ff4]
  41589f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158a0:	lods   al,BYTE PTR ds:[esi]
  4158a1:	int    0x53
  4158a3:	nop
  4158a4:	cs inc ecx
  4158a6:	or     bh,BYTE PTR [edi-0x54e17ff4]
  4158ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158ad:	lods   al,BYTE PTR ds:[esi]
  4158ae:	int    0x53
  4158b0:	nop
  4158b1:	cs inc ecx
  4158b3:	or     bh,BYTE PTR [edi-0x54e17ff4]
  4158b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158ba:	lods   al,BYTE PTR ds:[esi]
  4158bb:	int    0x53
  4158bd:	nop
  4158be:	cs inc ecx
  4158c0:	or     bh,BYTE PTR [edi-0x54e17ff4]
  4158c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158c7:	lods   al,BYTE PTR ds:[esi]
  4158c8:	int    0x53
  4158ca:	nop
  4158cb:	cs inc ecx
  4158cd:	or     bh,BYTE PTR [edi-0x54e17ff4]
  4158d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158d4:	lods   al,BYTE PTR ds:[esi]
  4158d5:	int    0x53
  4158d7:	nop
  4158d8:	cs inc ecx
  4158da:	or     bh,BYTE PTR [edi-0x54e17ff4]
  4158e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158e1:	lods   al,BYTE PTR ds:[esi]
  4158e2:	int    0x53
  4158e4:	nop
  4158e5:	cs inc ecx
  4158e7:	or     bh,BYTE PTR [edi-0x54e17ff4]
  4158ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158ee:	lods   al,BYTE PTR ds:[esi]
  4158ef:	int    0x53
  4158f1:	nop
  4158f2:	cs inc ecx
  4158f4:	or     bh,BYTE PTR [edi-0x54e17ff4]
  4158fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158fb:	lods   al,BYTE PTR ds:[esi]
  4158fc:	int    0x53
  4158fe:	nop
  4158ff:	cs inc ecx
  415901:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415908:	lods   al,BYTE PTR ds:[esi]
  415909:	int    0x53
  41590b:	nop
  41590c:	cs inc ecx
  41590e:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415915:	lods   al,BYTE PTR ds:[esi]
  415916:	int    0x53
  415918:	nop
  415919:	cs inc ecx
  41591b:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415922:	lods   al,BYTE PTR ds:[esi]
  415923:	int    0x53
  415925:	nop
  415926:	cs inc ecx
  415928:	or     bh,BYTE PTR [edi-0x54e17ff4]
  41592e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41592f:	lods   al,BYTE PTR ds:[esi]
  415930:	int    0x53
  415932:	nop
  415933:	cs inc ecx
  415935:	or     bh,BYTE PTR [edi-0x54e17ff4]
  41593b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41593c:	lods   al,BYTE PTR ds:[esi]
  41593d:	int    0x53
  41593f:	nop
  415940:	cs inc ecx
  415942:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415949:	lods   al,BYTE PTR ds:[esi]
  41594a:	int    0x53
  41594c:	nop
  41594d:	cs inc ecx
  41594f:	or     bh,BYTE PTR [edi-0x54e17ff4]
  415955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415956:	lods   al,BYTE PTR ds:[esi]
  415957:	int    0xf8
  415959:	fisub  WORD PTR ds:0xcbf2541
  41595f:	nop
  415960:	push   ds
  415961:	stos   DWORD PTR es:[edi],eax
  415962:	(bad)  
  415963:	push   cs
  415964:	pop    ss
  415965:	daa    
  415966:	sub    eax,0x94187261
  41596b:	aaa    
  41596c:	mov    ebp,0xaa371ef1
  415971:	test   BYTE PTR [edx],cl
  415973:	popa   
  415974:	repnz repnz sbb eax,edi
  415978:	aaa    
  415979:	imul   eax,esi,0xfdde720
  41597f:	test   eax,0xd51fb9df
  415984:	imul   ecx,DWORD PTR [ebx+eiz*8+0x73],0x48
  415989:	push   ds
  41598a:	jge    0x415974
  41598c:	adc    BYTE PTR [ecx+0x421dc1a6],bl
  415992:	sub    al,0xb9
  415994:	es call 0x8bcc3a41
  41599a:	or     al,0xf9
  41599c:	push   cs
  41599d:	xor    al,0xc
  41599f:	cli    
  4159a0:	je     0x4159a9
  4159a2:	mov    esp,0x3c9f5deb
  4159a7:	or     al,0xc9
  4159a9:	push   ecx
  4159aa:	xchg   ebp,eax
  4159ab:	dec    edi
  4159ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159ad:	mov    edx,0x50ee2eb3
  4159b2:	addr16 mov esp,0xd6d60f76
  4159b8:	pop    esi
  4159b9:	xchg   edi,eax
  4159ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159bb:	dec    esp
  4159bc:	sahf   
  4159bd:	mov    eax,ds:0xf47538ec
  4159c2:	xchg   ebx,eax
  4159c3:	scas   al,BYTE PTR es:[edi]
  4159c4:	ja     0x41594d
  4159c6:	pop    ecx
  4159c7:	aaa    
  4159c8:	jmp    0xf546:0xd5b4f4d7
  4159cf:	mov    ebx,cs
  4159d1:	cs pushf 
  4159d3:	sahf   
  4159d4:	fs test ecx,ecx
  4159d7:	fidiv  WORD PTR [ebp+0x7bb4c42e]
  4159dd:	shl    DWORD PTR [ecx+0x78f2914d],1
  4159e3:	(bad)  
  4159e4:	repz xor cl,BYTE PTR [ecx-0x3a]
  4159e8:	xlat   BYTE PTR ds:[ebx]
  4159e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159ea:	mov    eax,0x1a2c803e
  4159ef:	push   0x1a5fb687
  4159f4:	mov    si,0x734
  4159f8:	sub    BYTE PTR [esp+edx*2+0x4a],al
  4159fc:	xlat   BYTE PTR ds:[ebx]
  4159fd:	fs push esi
  4159ff:	push   es
  415a00:	add    edi,DWORD PTR [edi+0x7e1d1a45]
  415a06:	jle    0x415a19
  415a08:	mov    ebp,0xc40c80da
  415a0d:	jns    0x4159ca
  415a0f:	sbb    eax,0x9cdd84a6
  415a14:	pusha  
  415a15:	mov    al,0xb9
  415a17:	add    edi,esp
  415a19:	cvtpi2ps xmm0,mm0
  415a1c:	jge    0x4159bc
  415a1e:	push   ds
  415a1f:	sbb    DWORD PTR [edi+eiz*1],esi
  415a22:	pop    ebp
  415a23:	mov    dh,0x72
  415a25:	shl    BYTE PTR [ebp-0x63],cl
  415a28:	jmp    0x69ca892e
  415a2d:	pop    ds
  415a2e:	mov    BYTE PTR [ebp-0x715fa68b],cl
  415a34:	mov    ds:0x76c50aa7,al
  415a39:	imul   esp,DWORD PTR [esi+0x4d],0x69439669
  415a40:	add    dl,dl
  415a42:	rcr    DWORD PTR [esi],cl
  415a44:	mov    dh,0xa7
  415a46:	and    bh,BYTE PTR [ecx]
  415a48:	sar    BYTE PTR [ebp+0x166bda58],1
  415a4e:	push   0x38
  415a50:	cmp    al,0xe4
  415a52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a53:	daa    
  415a54:	pusha  
  415a55:	cmp    al,0x54
  415a57:	cmp    ebp,DWORD PTR [edi+0x9]
  415a5a:	inc    edx
  415a5b:	push   edi
  415a5c:	lods   eax,DWORD PTR ds:[esi]
  415a5d:	jg     0x415a7a
  415a5f:	out    dx,al
  415a60:	sbb    DWORD PTR [esi+0xede82e6],edi
  415a66:	sbb    ebp,DWORD PTR [esi+0x28]
  415a69:	pause  
  415a6b:	in     al,0x6b
  415a6d:	(bad)  
  415a6e:	lods   al,BYTE PTR ds:[esi]
  415a6f:	xor    dh,bh
  415a71:	push   edi
  415a72:	jno    0x415a82
  415a74:	loope  0x415a70
  415a76:	ds das 
  415a78:	nop
  415a79:	xchg   edx,eax
  415a7a:	aam    0x2a
  415a7c:	fchs   
  415a7e:	pop    ds
  415a7f:	push   edx
  415a80:	sub    al,0x6d
  415a82:	or     eax,0xd8bf9e3
  415a87:	outs   dx,BYTE PTR ds:[esi]
  415a88:	gs dec ebx
  415a8a:	pop    ebp
  415a8b:	push   ss
  415a8c:	std    
  415a8d:	push   ebx
  415a8e:	into   
  415a8f:	retf   
  415a90:	and    BYTE PTR [esi+edi*4+0x5],cl
  415a94:	jmp    0x4aae57e6
  415a99:	(bad)  [eax+0x10]
  415a9c:	jl     0x415a21
  415a9e:	out    0x3e,eax
  415aa0:	push   edi
  415aa1:	xchg   DWORD PTR [esp+esi*4+0x60],ebp
  415aa5:	sub    dh,BYTE PTR [esi]
  415aa7:	out    dx,al
  415aa8:	call   0x598012bc
  415aad:	xor    al,0xe8
  415aaf:	pop    esp
  415ab0:	push   esp
  415ab1:	inc    esi
  415ab2:	shl    bl,0x8a
  415ab5:	and    DWORD PTR [ebx+0x6d],eax
  415ab8:	in     eax,0x83
  415aba:	cdq    
  415abb:	xchg   edx,eax
  415abc:	and    eax,0x47f8c458
  415ac1:	shl    DWORD PTR [ebx],1
  415ac3:	inc    ebx
  415ac4:	je     0x415abe
  415ac6:	addr16 fcmovu st,st(2)
  415ac9:	xor    al,0x43
  415acb:	js     0x415a75
  415acd:	rcr    DWORD PTR [eax+0x30839793],cl
  415ad3:	dec    ecx
  415ad4:	test   eax,0x8671ede4
  415ad9:	lock cli 
  415adb:	ror    DWORD PTR [esi+0x1d],1
  415ade:	enter  0x3a4d,0xdc
  415ae2:	out    0x4d,eax
  415ae4:	mov    ds:0x68dde3cf,al
  415ae9:	pop    edi
  415aea:	popf   
  415aeb:	arpl   WORD PTR [ecx-0x36],cx
  415aee:	mov    ah,BYTE PTR ds:0xf87f9553
  415af4:	shl    BYTE PTR [ecx+0x14],1
  415af7:	into   
  415af8:	adc    DWORD PTR [edx+0x50],ebx
  415afb:	nop
  415afc:	inc    ebx
  415afd:	jl     0x415a87
  415aff:	inc    edi
  415b00:	mov    WORD PTR [esi+0x22],fs
  415b03:	sub    ah,dl
  415b05:	pmuludq mm0,QWORD PTR [ebp+eiz*1+0x43be17fb]
  415b0d:	pusha  
  415b0e:	sub    BYTE PTR [ebx+0x46],bl
  415b11:	dec    edi
  415b12:	push   cs
  415b13:	outs   dx,BYTE PTR ds:[esi]
  415b14:	mov    BYTE PTR [ebx-0x52],al
  415b17:	out    0x79,eax
  415b19:	mov    al,ds:0xfb4f7e1e
  415b1e:	stos   BYTE PTR es:[edi],al
  415b1f:	dec    eax
  415b20:	mov    ds,WORD PTR [eax-0xb]
  415b23:	push   ebp
  415b24:	lds    edx,FWORD PTR [ecx+0x2c]
  415b27:	rol    BYTE PTR [edx+0x6acc7b19],0x46
  415b2e:	rol    BYTE PTR [ecx],0x11
  415b31:	rcr    BYTE PTR [eax],1
  415b33:	push   esp
  415b34:	loopne 0x415abd
  415b36:	repz push edx
  415b38:	cli    
  415b39:	pop    ebp
  415b3a:	cwde   
  415b3b:	mov    al,0xdb
  415b3d:	jb     0x415ada
  415b3f:	mov    WORD PTR [edx+0x28736500],es
  415b45:	fadd   DWORD PTR [esi+0x187684cb]
  415b4b:	jo     0x415b58
  415b4d:	cli    
  415b4e:	hlt    
  415b4f:	stos   DWORD PTR es:[edi],eax
  415b50:	pusha  
  415b51:	adc    BYTE PTR [eax+0x12098ef0],0x9d
  415b58:	ret    
  415b59:	fdivr  QWORD PTR [edx+0x4f576e61]
  415b5f:	jle    0x415b27
  415b61:	push   ebp
  415b62:	movhlps xmm7,xmm2
  415b65:	xchg   DWORD PTR gs:[ebp-0x1],ebp
  415b69:	retf   
  415b6a:	pop    edx
  415b6b:	jp     0x415b7f
  415b6d:	push   esi
  415b6e:	sub    al,0x7d
  415b70:	stc    
  415b71:	ja     0x415ba7
  415b73:	outs   dx,BYTE PTR ds:[esi]
  415b74:	mov    edx,0x391fa22a
  415b79:	js     0x415afb
  415b7b:	sbb    ch,BYTE PTR [ebx]
  415b7d:	cwde   
  415b7e:	fst    st(2)
  415b80:	pop    ss
  415b81:	fcomi  st,st(4)
  415b83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b84:	inc    ecx
  415b85:	out    dx,eax
  415b86:	jb     0x415bfe
  415b88:	dec    esp
  415b89:	into   
  415b8a:	ror    cl,1
  415b8c:	ja     0x415bda
  415b8e:	ror    ebp,0x6b
  415b91:	(bad)  
  415b92:	lock jle 0x415bd5
  415b95:	cmp    DWORD PTR [ebx+ebp*8+0x162d44f6],edx
  415b9c:	shr    BYTE PTR [ebx+0x5ae92fd2],0x79
  415ba3:	imul   ebp,DWORD PTR [edx-0x54],0xc
  415ba7:	xchg   esp,eax
  415ba8:	cmp    eax,DWORD PTR [ebx-0x5d9ecd74]
  415bae:	jmp    0x415c13
  415bb0:	pop    ebp
  415bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bb2:	jecxz  0x415bad
  415bb4:	jl     0x415b88
  415bb6:	call   0x19d88a
  415bbb:	nop
  415bbc:	mov    ebp,0x2c270f4e
  415bc1:	icebp  
  415bc2:	jl     0x415b6b
  415bc4:	pop    ss
  415bc5:	mov    al,0x18
  415bc7:	push   cs
  415bc8:	int    0x49
  415bca:	pop    eax
  415bcb:	cmc    
  415bcc:	inc    eax
  415bcd:	aad    0x3c
  415bcf:	repnz push edx
  415bd1:	jecxz  0x415be7
  415bd3:	sbb    DWORD PTR [eax+0x30],ecx
  415bd6:	push   ecx
  415bd7:	add    al,BYTE PTR [ebx-0x1afc2b65]
  415bdd:	mov    edi,0xe1f0e1ce
  415be2:	adc    esp,edi
  415be4:	dec    ebp
  415be5:	jp     0x415b74
  415be7:	lahf   
  415be8:	sar    BYTE PTR [eax],cl
  415bea:	fadd   QWORD PTR ds:0x87a10cbd
  415bf0:	jle    0x415c47
  415bf2:	and    DWORD PTR ds:0x1676d8ca,0xfffffff1
  415bf9:	push   eax
  415bfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bfb:	(bad)  
  415bfc:	mov    ds:0xa78b3d7e,eax
  415c01:	mov    ah,0xd
  415c03:	loopne 0x415bb9
  415c05:	xchg   ebx,eax
  415c06:	scas   eax,DWORD PTR es:[edi]
  415c07:	mov    ebp,DWORD PTR [edx]
  415c09:	push   edi
  415c0a:	and    DWORD PTR [ebp-0x4c16af1e],0x108d8ec6
  415c14:	gs push ebp
  415c16:	stos   DWORD PTR es:[edi],eax
  415c17:	js     0x415c5c
  415c19:	fcom   QWORD PTR [esi-0x67]
  415c1c:	dec    edi
  415c1d:	dec    esp
  415c1f:	shl    DWORD PTR [edi-0x45],0x60
  415c23:	xchg   ecx,eax
  415c24:	jmp    0x90e2ee07
  415c29:	push   es
  415c2a:	icebp  
  415c2b:	jmp    0xd824:0xd69c23c4
  415c32:	(bad)  
  415c33:	sub    al,0x32
  415c35:	dec    edi
  415c36:	hlt    
  415c37:	jbe    0x415c30
  415c39:	dec    DWORD PTR [ecx-0x3c]
  415c3c:	xor    dh,BYTE PTR [ebx]
  415c3e:	jno    0x415bc7
  415c40:	imul   ebp,ebx,0xcf3cc400
  415c46:	(bad)  
  415c47:	push   edx
  415c48:	retf   
  415c49:	xchg   ebx,eax
  415c4a:	xor    al,0xef
  415c4c:	mov    esp,0x413a05b0
  415c51:	cmp    eax,0x65881c8d
  415c56:	xor    al,0xea
  415c58:	and    eax,0x88b69f9
  415c5d:	add    esp,DWORD PTR [edi+0x4f2ce7e0]
  415c63:	loop   0x415c77
  415c65:	xchg   ecx,eax
  415c66:	push   esi
  415c67:	test   al,0x47
  415c69:	js     0x415c79
  415c6b:	adc    al,0x37
  415c6d:	jmp    0x7887dcea
  415c72:	clc    
  415c73:	loope  0x415c46
  415c75:	xor    edx,DWORD PTR [edx]
  415c77:	loop   0x415c4d
  415c79:	jne    0x415c3d
  415c7b:	xchg   ebx,eax
  415c7c:	pop    esp
  415c7d:	aam    0xb
  415c7f:	ficomp DWORD PTR [esi+ebp*1-0x51]
  415c83:	mov    al,0x77
  415c85:	pop    esi
  415c86:	out    0x42,eax
  415c88:	push   edi
  415c89:	mov    ds:0x13abd7c6,al
  415c8e:	retf   0x6f7f
  415c91:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  415c93:	dec    ecx
  415c94:	(bad)  [edx-0x4]
  415c97:	cmc    
  415c98:	jg     0x415cc1
  415c9a:	lahf   
  415c9b:	xadd   DWORD PTR [ecx-0x6a],esp
  415c9f:	xor    BYTE PTR [eax+0x51],dl
  415ca2:	ret    
  415ca3:	cmp    edx,edx
  415ca5:	push   esi
  415ca6:	cmc    
  415ca7:	and    esi,ebx
  415ca9:	retf   
  415caa:	and    al,0xf6
  415cac:	fldenv [bx+di-0x16c3]
  415cb1:	jle    0x415c80
  415cb3:	jnp    0x415cf7
  415cb5:	lods   al,BYTE PTR ds:[esi]
  415cb6:	mov    cs,WORD PTR [ecx+0x5b]
  415cb9:	mov    edi,0x7b2cd06a
  415cbe:	jae    0x415ca6
  415cc0:	pop    edx
  415cc1:	sti    
  415cc2:	popa   
  415cc3:	imul   ebx,DWORD PTR [edi-0x68],0xd0c91a16
  415cca:	data16 xor BYTE PTR [ebx+0x3287b532],0x21
  415cd2:	mov    edx,0x52e402b7
  415cd7:	loop   0x415c61
  415cd9:	pop    es
  415cda:	int    0x6d
  415cdc:	adc    edx,ebx
  415cde:	ins    BYTE PTR es:[edi],dx
  415cdf:	stc    
  415ce0:	and    al,0x35
  415ce2:	mov    cl,0x15
  415ce4:	cmp    ecx,edi
  415ce6:	fnstcw WORD PTR [eax+0xc]
  415ce9:	mov    edx,0x56dbb1ac
  415cee:	push   esi
  415cef:	mov    ebx,0x270a4010
  415cf4:	les    eax,FWORD PTR [esp+edx*8+0x29ef63f7]
  415cfb:	add    DWORD PTR [ebx+0x4133bdd6],eax
  415d01:	add    edx,DWORD PTR [esi+0x4d]
  415d04:	dec    edi
  415d05:	and    BYTE PTR [edx-0x4707459e],ch
  415d0b:	outs   dx,DWORD PTR ds:[esi]
  415d0c:	and    eax,DWORD PTR [ecx]
  415d0e:	sar    DWORD PTR [ebp+esi*1-0x29],0x3c
  415d13:	sub    esi,esp
  415d15:	fwait
  415d16:	nop
  415d17:	mov    esi,0x79991728
  415d1c:	fnsave [edi+edi*4]
  415d1f:	inc    edx
  415d20:	icebp  
  415d21:	ins    DWORD PTR es:[edi],dx
  415d22:	mov    ds:0x5df37b8,eax
  415d27:	lock inc esp
  415d29:	mov    al,ds:0x2e549c35
  415d2e:	sahf   
  415d2f:	jbe    0x415d42
  415d31:	(bad)  
  415d32:	pop    eax
  415d33:	add    al,0x0
  415d35:	pop    esi
  415d36:	sub    DWORD PTR [esi],0x27b3114b
  415d3c:	adc    eax,0xe97f0a54
  415d41:	fld    TBYTE PTR [ebx]
  415d43:	lods   eax,DWORD PTR ds:[esi]
  415d44:	lods   eax,DWORD PTR ds:[esi]
  415d45:	and    ebx,DWORD PTR [ebx]
  415d47:	(bad)  
  415d48:	fnsave [eax+ecx*2]
  415d4b:	dec    esp
  415d4c:	in     eax,dx
  415d4d:	xor    al,0x86
  415d4f:	imul   edx,DWORD PTR [edi+ecx*4+0xd],0xeecde098
  415d57:	push   0x41
  415d59:	cld    
  415d5a:	loopne 0x415db5
  415d5c:	js     0x415d82
  415d5e:	stos   DWORD PTR es:[edi],eax
  415d5f:	aad    0x1a
  415d61:	dec    ecx
  415d62:	rcl    DWORD PTR [edi+0x6d51b7a4],0x84
  415d69:	test   BYTE PTR ds:0xf5a53a88,dh
  415d6f:	inc    bh
  415d71:	not    DWORD PTR [edx]
  415d73:	popa   
  415d74:	mov    ecx,0x1f1e4e5d
  415d79:	dec    ebp
  415d7a:	jl     0x415da0
  415d7c:	int    0xd7
  415d7e:	xor    eax,0xcee361ce
  415d83:	(bad)  
  415d84:	mov    esp,0x58020502
  415d89:	add    esi,edx
  415d8b:	push   cs
  415d8c:	out    dx,al
  415d8d:	sub    ebp,DWORD PTR [edi-0x5a]
  415d90:	adc    DWORD PTR [ebx-0x25],0xfffffffd
  415d94:	push   DWORD PTR [ecx]
  415d96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d97:	call   0x5bfd5025
  415d9c:	cs mov bl,0xd
  415d9f:	jge    0x415d76
  415da1:	cmp    eax,0x6dd3f74f
  415da6:	repnz or ecx,esp
  415da9:	or     al,0xb6
  415dab:	int3   
  415dac:	scas   eax,DWORD PTR es:[edi]
  415dad:	add    ah,bh
  415daf:	mov    ch,0x34
  415db1:	jmp    DWORD PTR [ebx*4-0x7ac2c6b3]
  415db8:	pop    ss
  415db9:	mov    WORD PTR [ebx-0x39a30c7],?
  415dbf:	push   0x7e
  415dc1:	iret   
  415dc2:	pop    ecx
  415dc3:	ror    eax,1
  415dc5:	ins    DWORD PTR es:[edi],dx
  415dc6:	jle    0x415e09
  415dc8:	mov    esp,0xf605778e
  415dcd:	mov    ebp,0x50473fac
  415dd2:	jmp    0x54cd551
  415dd7:	mov    edx,0xc4f543d5
  415ddc:	gs mov ebx,0x8a81b173
  415de2:	gs inc ebx
  415de4:	cli    
  415de5:	sahf   
  415de6:	mov    DWORD PTR [esi+esi*4],ebp
  415de9:	xchg   edi,eax
  415dea:	mov    al,0x6b
  415dec:	call   0x171c7ce2
  415df1:	mov    eax,0xa9330395
  415df6:	pusha  
  415df7:	(bad)  
  415df8:	iret   
  415df9:	cmc    
  415dfa:	cmp    DWORD PTR [ebx-0x71a12c63],edx
  415e00:	popa   
  415e01:	mov    al,ds:0xce72e114
  415e07:	xor    edi,DWORD PTR [ebx+0x5d]
  415e0a:	retf   
  415e0b:	adc    ch,BYTE PTR [ebx+0x59]
  415e0e:	cs inc eax
  415e10:	pop    ebx
  415e11:	lods   al,BYTE PTR ds:[esi]
  415e12:	sbb    al,0x2d
  415e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e15:	enter  0x8035,0x56
  415e19:	xor    DWORD PTR ss:[ecx-0x38],ecx
  415e1d:	xchg   edx,eax
  415e1e:	(bad)  
  415e1f:	fidiv  DWORD PTR [ebp-0x6f204caa]
  415e25:	(bad)  
  415e26:	je     0x415e82
  415e28:	adc    al,BYTE PTR [esi]
  415e2a:	ret    
  415e2b:	dec    ebx
  415e2c:	dec    ebp
  415e2d:	adc    al,0x12
  415e2f:	fnstenv [edi-0x6e]
  415e32:	shl    eax,0x62
  415e35:	mov    edx,0x10a87f36
  415e3a:	jae    0x415e43
  415e3c:	xchg   ecx,eax
  415e3d:	ins    BYTE PTR es:[edi],dx
  415e3e:	sbb    eax,0x476ded24
  415e43:	out    0x46,al
  415e45:	or     esi,eax
  415e47:	shr    BYTE PTR [esi+0x5b57a252],cl
  415e4d:	xor    al,0x36
  415e4f:	mov    ebp,0xed2d1ab1
  415e54:	jecxz  0x415e97
  415e56:	stos   DWORD PTR es:[edi],eax
  415e57:	cmp    dh,BYTE PTR [edx+eiz*2-0x42]
  415e5b:	into   
  415e5c:	mov    eax,ds:0xa3dc27ee
  415e61:	stos   DWORD PTR es:[edi],eax
  415e62:	xor    cl,cl
  415e64:	pop    esi
  415e65:	xor    DWORD PTR [ecx],esp
  415e67:	inc    edx
  415e68:	mov    eax,ds:0xcdd3f117
  415e6d:	xchg   edi,eax
  415e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e6f:	push   ecx
  415e70:	mov    al,ds:0x1585c7a5
  415e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e76:	mov    BYTE PTR [ebx-0x30],0xcd
  415e7a:	and    al,0xf1
  415e7c:	jno    0x415ed6
  415e7e:	sbb    ebp,ebp
  415e80:	and    ecx,DWORD PTR [esi]
  415e82:	scas   al,BYTE PTR es:[edi]
  415e83:	bound  esi,QWORD PTR [esp+eax*4]
  415e86:	dec    eax
  415e87:	fisub  DWORD PTR [esi+0x45bfff34]
  415e8d:	rol    ch,cl
  415e8f:	and    eax,0x18055e14
  415e94:	fimul  DWORD PTR [eax+0x2f]
  415e97:	sti    
  415e98:	pop    esi
  415e99:	mov    ds:0x9a8aa85,eax
  415e9e:	push   0x139302f5
  415ea3:	ffree  st(2)
  415ea5:	test   eax,0x4ad87841
  415eaa:	fnstcw WORD PTR [eax]
  415eac:	popf   
  415ead:	sub    al,0x10
  415eaf:	pop    es
  415eb0:	cmp    esi,DWORD PTR [eax+0x72]
  415eb3:	pushf  
  415eb4:	fnstenv [eax+0x4c9cd519]
  415eba:	dec    ebp
  415ebb:	bound  ebp,QWORD PTR [esi+0x5e]
  415ebe:	add    al,ch
  415ec0:	es aas 
  415ec2:	js     0x415ea0
  415ec4:	cmp    esi,DWORD PTR [ecx]
  415ec6:	and    ebp,DWORD PTR [ecx-0x193d78cd]
  415ecc:	lahf   
  415ecd:	jb     0x415ebf
  415ecf:	jge    0x415edf
  415ed1:	in     al,dx
  415ed2:	iret   
  415ed3:	sub    ah,bl
  415ed5:	retf   
  415ed6:	cmp    eax,0x18076a19
  415edb:	cmp    eax,0xe1a3b60e
  415ee0:	fcomp  DWORD PTR [ebp+0x36eda2e6]
  415ee6:	jle    0x415ef1
  415ee8:	cmc    
  415ee9:	dec    edi
  415eea:	push   0xfcbfe3a7
  415eef:	(bad)
  415ef2:	mov    eax,0x7fed9c0
  415ef7:	neg    DWORD PTR gs:[ecx+ebp*8-0x175dd569]
  415eff:	lock mov ds:0xc0d816d5,al
  415f05:	mov    gs,eax
  415f07:	cwde   
  415f08:	pop    es
  415f09:	leave  
  415f0a:	pop    ss
  415f0b:	sub    ah,al
  415f0d:	sbb    dh,BYTE PTR [esi]
  415f0f:	fs or  al,al
  415f12:	jmp    0x415f65
  415f14:	xchg   edi,eax
  415f15:	xchg   ebx,eax
  415f16:	sar    edi,1
  415f18:	jbe    0x415f29
  415f1a:	clc    
  415f1b:	popa   
  415f1c:	outs   dx,BYTE PTR ds:[esi]
  415f1d:	(bad)
  415f21:	mov    edi,DWORD PTR [ebx]
  415f23:	mov    esi,esp
  415f25:	adc    al,0xbd
  415f27:	mov    ebp,0x9c93781b
  415f2c:	xor    DWORD PTR ds:0x455301af,ebp
  415f32:	mov    gs,ebp
  415f34:	dec    ebx
  415f35:	int3   
  415f36:	jg     0x415f83
  415f38:	jg     0x415f7d
  415f3a:	les    edi,FWORD PTR [eax]
  415f3c:	and    dh,BYTE PTR [eax-0xa309474]
  415f42:	mov    esp,0xe7ea26e0
  415f47:	jp     0x415f95
  415f49:	dec    ebx
  415f4a:	push   es
  415f4b:	pusha  
  415f4c:	xor    al,0x9d
  415f4e:	jne    0x415f9e
  415f50:	dec    edx
  415f51:	movaps xmm1,XMMWORD PTR [edx-0x7e9a0b6]
  415f58:	pop    eax
  415f59:	mov    WORD PTR [ebx-0x1cf8c90],cs
  415f5f:	jne    0x415ee3
  415f61:	push   edi
  415f62:	push   cs
  415f63:	enter  0x8d69,0x73
  415f67:	mov    DWORD PTR [edi],edx
  415f69:	jmp    0x279e:0xa03b1762
  415f70:	outs   dx,BYTE PTR ds:[esi]
  415f71:	mov    ch,0x1e
  415f73:	adc    eax,0xf1f2ed7a
  415f78:	lock add DWORD PTR [edx+0x27],ebx
  415f7c:	test   eax,0xee2b11bc
  415f81:	jo     0x415fc7
  415f83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f84:	mov    eax,ds:0x2373ef84
  415f89:	pop    edi
  415f8a:	daa    
  415f8b:	ret    0x2d2d
  415f8e:	mov    ecx,0xad241db5
  415f93:	loop   0x415fe6
  415f95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f96:	jl     0x415f99
  415f98:	fcom   QWORD PTR [esi+eax*1]
  415f9b:	shl    BYTE PTR [edx],1
  415f9d:	into   
  415f9e:	mov    ds:0xcfae09aa,al
  415fa3:	sti    
  415fa4:	and    edi,DWORD PTR [ecx]
  415fa6:	repnz lds esi,FWORD PTR [edi-0x1f]
  415faa:	out    0x33,eax
  415fac:	xor    esi,DWORD PTR [ebp-0x1f]
  415faf:	sub    dh,dh
  415fb1:	stc    
  415fb2:	fnsave [edx+0x185fddb4]
  415fb8:	adc    ah,cl
  415fba:	test   BYTE PTR [ebp+edi*4+0x1f],0xba
  415fbf:	sar    DWORD PTR [ecx],cl
  415fc1:	fcom   DWORD PTR [eax]
  415fc3:	daa    
  415fc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fc5:	xor    bh,ch
  415fc7:	sti    
  415fc8:	out    dx,eax
  415fc9:	hlt    
  415fca:	nop
  415fcb:	jo     0x41603c
  415fcd:	test   al,0x4d
  415fcf:	lahf   
  415fd0:	or     ebp,DWORD PTR [esi-0x15f2262b]
  415fd6:	enter  0x765b,0xff
  415fda:	xchg   ebp,eax
  415fdb:	ret    
  415fdc:	dec    esi
  415fdd:	or     DWORD PTR [esi],0xfffffff5
  415fe0:	loopne 0x416044
  415fe2:	(bad)  
  415fe3:	ins    DWORD PTR es:[edi],dx
  415fe4:	pop    ebx
  415fe5:	enter  0xa9ec,0x28
  415fe9:	fld    TBYTE PTR [edx-0x353aad86]
  415fef:	std    
  415ff0:	in     eax,dx
  415ff1:	sbb    ah,dh
  415ff3:	lds    ebp,FWORD PTR [edx]
  415ff5:	adc    eax,0x8a291828
  415ffa:	jl     0x41606c
  415ffc:	mov    ebp,0xbc933ac
  416001:	call   0x7b7ef917
  416006:	push   edi
  416007:	sbb    BYTE PTR [edi],0xb5
  41600a:	cwd    
  41600c:	pop    ebp
  41600d:	cmp    esp,DWORD PTR [edi+0x18]
  416010:	int3   
  416011:	test   BYTE PTR [ebp-0x23],bl
  416014:	jbe    0x415f9b
  416016:	das    
  416017:	cmp    ebp,eax
  416019:	cli    
  41601a:	(bad)  
  41601b:	sar    DWORD PTR [ebx+ecx*1+0x12],1
  41601f:	cmc    
  416020:	mov    eax,0x335a214c
  416025:	inc    esp
  416026:	icebp  
  416027:	aas    
  416028:	sbb    eax,0x3ac95f05
  41602d:	mov    ds:0x94bec2d1,eax
  416032:	xchg   ecx,eax
  416033:	fst    DWORD PTR [ebx-0x42125797]
  416039:	imul   esp,DWORD PTR [eax+0x7a],0xc0976628
  416040:	mov    ch,0xd9
  416042:	rcr    DWORD PTR [eax+0x7c],1
  416045:	je     0x415fd7
  416047:	(bad)  
  416048:	ins    BYTE PTR es:[edi],dx
  416049:	call   0x2db7a69a
  41604e:	cmp    eax,0x55c4e9ad
  416054:	dec    edi
  416055:	call   0xccd1:0xebd3e959
  41605c:	cli    
  41605d:	mov    ah,0xe4
  41605f:	iret   
  416060:	push   0xffffffba
  416062:	je     0x4160df
  416064:	loop   0x416019
  416066:	xor    al,0x8b
  416068:	dec    edx
  416069:	inc    esp
  41606a:	stc    
  41606b:	arpl   WORD PTR [ebp+0x46],cx
  41606e:	neg    BYTE PTR [esi-0x50]
  416071:	push   ebx
  416072:	jge    0x41603e
  416074:	cmp    DWORD PTR [eax-0x55],eax
  416077:	adc    eax,0xca80fd34
  41607c:	and    eax,0x9d4393ae
  416081:	ror    BYTE PTR [ebx+0x6bb4f6e3],1
  416087:	push   edx
  416088:	sbb    BYTE PTR [ecx],bl
  41608a:	jmp    0x416026
  41608c:	in     al,0x62
  41608e:	xor    al,0x2
  416090:	xor    ebx,DWORD PTR [edx-0x12]
  416093:	or     bh,BYTE PTR [eax+0x7a]
  416096:	mov    edx,0x223b23a7
  41609b:	mov    cs,WORD PTR [ecx]
  41609d:	addr16 (bad) 
  4160a0:	popf   
  4160a1:	or     eax,0x5aee4b52
  4160a6:	add    DWORD PTR ds:[ebp-0x48],esi
  4160aa:	daa    
  4160ab:	and    al,0xe5
  4160ad:	jmp    0x2e64:0x8a6ace74
  4160b4:	js     0x416096
  4160b6:	inc    ebx
  4160b7:	jmp    0x252f9578
  4160bc:	nop
  4160bd:	jnp    0x41611f
  4160bf:	mov    al,0xc9
  4160c1:	ds nop
  4160c3:	leave  
  4160c4:	cmp    DWORD PTR [edi],esi
  4160c6:	repz add ch,BYTE PTR [edx-0x75]
  4160ca:	pop    ebp
  4160cb:	push   edx
  4160cc:	ins    BYTE PTR es:[edi],dx
  4160cd:	mov    esp,0xbf50a187
  4160d2:	xchg   ebx,eax
  4160d3:	push   es
  4160d4:	hlt    
  4160d5:	cs stos DWORD PTR es:[edi],eax
  4160d7:	mov    BYTE PTR [edx+0x2c95df83],0xd8
  4160de:	inc    ebp
  4160df:	(bad)  
  4160e0:	jle    0x416065
  4160e2:	ret    
  4160e3:	push   ds
  4160e4:	dec    ecx
  4160e5:	idiv   DWORD PTR [edi+0x7c9976c7]
  4160eb:	mov    DWORD PTR [ebx+ebp*4+0x76],edx
  4160ef:	fs fwait
  4160f1:	shl    BYTE PTR [edi+edx*1-0x4fd38e31],cl
  4160f8:	pop    esp
  4160f9:	ja     0x4160d0
  4160fb:	jno    0x416110
  4160fd:	ffree  st(3)
  4160ff:	je     0x416125
  416101:	push   esp
  416102:	aaa    
  416103:	inc    ebp
  416104:	cdq    
  416105:	mov    esp,0x4e953248
  41610a:	in     al,dx
  41610b:	mov    WORD PTR [ebx],?
  41610d:	sahf   
  41610e:	xchg   ebp,edx
  416110:	int    0x51
  416112:	iret   
  416113:	inc    ebp
  416114:	loope  0x416169
  416116:	cmove  esp,DWORD PTR [eax+0x1c]
  41611a:	sbb    DWORD PTR [edx+0x251e16ab],ebp
  416120:	(bad)  
  416121:	es mov esi,0x9fd440ca
  416127:	push   0xffffffd4
  416129:	fwait
  41612a:	adc    dl,dl
  41612c:	retf   
  41612d:	add    eax,0x70b972b9
  416132:	dec    edx
  416133:	pop    esi
  416134:	inc    edi
  416135:	mov    dh,0x7c
  416137:	rol    BYTE PTR [edx-0x5a37d13c],0xf
  41613e:	sbb    ah,bl
  416140:	lds    esi,FWORD PTR [esi-0x3f]
  416143:	jp     0x416191
  416145:	ss jp  0x416173
  416148:	jg     0x416114
  41614a:	jl     0x41618f
  41614c:	inc    eax
  41614d:	mov    es,WORD PTR [edi-0x29bb514b]
  416153:	stos   BYTE PTR es:[edi],al
  416154:	test   al,0x5b
  416156:	fld    TBYTE PTR [ebx-0x14065e81]
  41615c:	fisttp WORD PTR [eax-0x73]
  41615f:	push   ecx
  416160:	popa   
  416161:	cmp    al,ch
  416163:	popf   
  416164:	or     ch,ch
  416166:	cmp    ch,BYTE PTR [eax+0x1e]
  416169:	iret   
  41616a:	mov    eax,ds:0x8daacd0b
  41616f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416170:	mov    edi,0x7ef2e3eb
  416175:	add    al,0xf
  416177:	test   eax,0x3f253659
  41617c:	dec    ebx
  41617d:	dec    eax
  41617e:	dec    eax
  41617f:	sub    al,0xc1
  416181:	jp     0x41614b
  416183:	imul   ecx,DWORD PTR [eax],0x13
  416186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416188:	pop    ecx
  416189:	into   
  41618a:	xchg   edi,eax
  41618b:	inc    edi
  41618c:	sbb    edx,edi
  41618e:	outs   dx,BYTE PTR ds:[esi]
  41618f:	add    eax,0x823d4e1b
  416194:	jae    0x41615b
  416196:	dec    eax
  416197:	xchg   ebp,eax
  416198:	leave  
  416199:	and    al,0x21
  41619b:	xchg   ebp,eax
  41619c:	mov    bh,0xe5
  41619e:	stos   BYTE PTR es:[edi],al
  41619f:	sub    DWORD PTR [edi],0x100a3ba6
  4161a5:	shl    BYTE PTR [ebx-0x6a],0x50
  4161a9:	addr16 mov ebp,0x94c82228
  4161af:	lds    esi,FWORD PTR [eax-0x47]
  4161b2:	retf   
  4161b3:	push   ebx
  4161b4:	adc    eax,0xc3892f5c
  4161b9:	sub    DWORD PTR [edx],eax
  4161bb:	and    eax,0x8cdbb79b
  4161c0:	sahf   
  4161c1:	lods   al,BYTE PTR ds:[esi]
  4161c2:	sar    ebx,1
  4161c4:	xchg   edx,eax
  4161c5:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4161c7:	cmc    
  4161c8:	pop    esp
  4161c9:	js     0x416171
  4161cb:	aas    
  4161cc:	popa   
  4161cd:	mov    ebx,0x72c889d8
  4161d2:	stos   DWORD PTR es:[edi],eax
  4161d3:	add    edx,edx
  4161d5:	scas   eax,DWORD PTR es:[edi]
  4161d6:	jnp    0x4161f9
  4161d8:	jg     0x416229
  4161da:	add    bl,BYTE PTR [edx+0x1130a529]
  4161e0:	mov    DWORD PTR [edi+0x6c76582c],edi
  4161e6:	mov    ch,0xa
  4161e8:	and    esi,DWORD PTR [edx]
  4161ea:	sub    al,0xd7
  4161ec:	jle    0x416197
  4161ee:	in     al,0x23
  4161f0:	lds    ecx,FWORD PTR ds:0xb1c26377
  4161f6:	fld    TBYTE PTR [edi]
  4161f8:	sub    DWORD PTR [edx+0x9],esp
  4161fb:	pop    ds
  4161fc:	stos   BYTE PTR es:[edi],al
  4161fd:	jbe    0x4161d1
  4161ff:	mov    edi,0x3407bf4f
  416204:	lahf   
  416205:	jns    0x4161aa
  416207:	inc    edx
  416208:	repz mov al,0x8e
  41620b:	sbb    eax,0x33d27ecb
  416210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416211:	add    ch,BYTE PTR [ecx+0x4]
  416214:	cmp    esi,DWORD PTR [eax+0x68]
  416217:	daa    
  416218:	jb     0x4161ed
  41621a:	xlat   BYTE PTR ds:[ebx]
  41621b:	gs out 0x6,eax
  41621e:	out    0x4d,al
  416220:	sahf   
  416221:	ds out dx,al
  416223:	mov    eax,0xcda9dce3
  416228:	fsub   DWORD PTR [edi-0x1d]
  41622b:	mov    DWORD PTR [ebx+0x1993c553],edi
  416231:	mov    dh,0x39
  416233:	xchg   ebp,eax
  416234:	stos   DWORD PTR es:[edi],eax
  416235:	fbld   TBYTE PTR [ebx-0x63]
  416238:	add    eax,ebx
  41623a:	sti    
  41623b:	xchg   DWORD PTR [edx],esi
  41623d:	and    eax,0xd3c48bd4
  416242:	cmp    esi,ecx
  416244:	xor    bl,BYTE PTR [edi-0x68e314d8]
  41624a:	mov    al,ds:0xda9e8b22
  41624f:	mov    edi,0x5d24087a
  416254:	xor    cl,BYTE PTR cs:[ebx-0x33c7acb3]
  41625b:	add    al,ch
  41625d:	or     ah,bl
  41625f:	out    dx,eax
  416260:	mov    cl,BYTE PTR [eax-0x6af667f3]
  416266:	jne    0x416274
  416268:	(bad)  
  416269:	das    
  41626a:	(bad)  
  41626c:	xor    al,0x19
  41626e:	jbe    0x41629e
  416270:	popf   
  416271:	in     eax,dx
  416272:	cmc    
  416273:	setno  BYTE PTR [esi+0x8]
  416277:	cmc    
  416278:	rcl    BYTE PTR [edi+0x7dcd97ac],0x7e
  41627f:	push   ecx
  416280:	sub    ecx,edi
  416282:	pop    esp
  416283:	fdivr  QWORD PTR [eax]
  416285:	outs   dx,BYTE PTR ds:[esi]
  416286:	sbb    BYTE PTR [eax+0x1a],cl
  416289:	xchg   esp,eax
  41628a:	mov    ds:0x5490d597,eax
  41628f:	ud0    ebp,DWORD PTR [ebp-0x7a]
  416293:	rcr    DWORD PTR [eax+eiz*1-0x351b4193],1
  41629a:	inc    esp
  41629b:	mov    eax,ds:0xed7a77a2
  4162a0:	jle    0x416294
  4162a2:	fnstcw WORD PTR [esi-0x61eea3fd]
  4162a8:	mov    ebx,0x3320c053
  4162ad:	adc    esp,DWORD PTR [edx-0x337236d9]
  4162b3:	sbb    DWORD PTR [edi],eax
  4162b5:	pop    edi
  4162b6:	pop    esi
  4162b7:	xchg   esi,eax
  4162b8:	data16 jno 0x416253
  4162bb:	adc    DWORD PTR [edx+0x42c5a9d],edi
  4162c1:	ins    BYTE PTR es:[edi],dx
  4162c2:	cmp    eax,0x8c3f1037
  4162c7:	scas   eax,DWORD PTR es:[edi]
  4162c8:	mov    dl,0xd7
  4162ca:	loope  0x41631d
  4162cc:	jp     0x416255
  4162ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162cf:	mov    al,ds:0x5bcfabfe
  4162d4:	pop    ss
  4162d5:	shr    BYTE PTR [eax-0x5113f009],cl
  4162db:	cli    
  4162dc:	mov    ds:0x677b3c7f,eax
  4162e1:	or     DWORD PTR [ecx+0x527088a5],esp
  4162e7:	ins    BYTE PTR es:[edi],dx
  4162e8:	sub    eax,0xce41d36b
  4162ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162ee:	and    eax,0x167c385
  4162f3:	(bad)  
  4162f4:	adc    al,0x5a
  4162f6:	mov    ebx,0xace7a457
  4162fb:	or     eax,0x1cdb7dc8
  416300:	jo     0x4162f5
  416302:	push   ecx
  416303:	mov    dh,0x54
  416305:	and    al,0x77
  416307:	xor    al,0xd1
  416309:	test   BYTE PTR [edx+0x55],0xb8
  41630d:	adc    eax,0xe887943b
  416312:	ret    
  416313:	adc    ah,BYTE PTR [ebx-0x42]
  416316:	cld    
  416317:	aaa    
  416318:	sbb    ebx,ecx
  41631a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41631b:	fdivrp st(2),st
  41631d:	sti    
  41631e:	imul   edi,DWORD PTR [ebx+edx*4],0xffffffdb
  416322:	dec    esi
  416323:	mov    bl,BYTE PTR [ebx]
  416325:	dec    eax
  416326:	sbb    al,0xc2
  416328:	adc    al,0xf6
  41632a:	and    al,0x3a
  41632c:	stos   DWORD PTR es:[edi],eax
  41632d:	push   esp
  41632e:	xchg   edi,eax
  41632f:	cli    
  416330:	dec    eax
  416331:	mov    DWORD PTR [ecx+0x63215820],esi
  416337:	aas    
  416338:	data16 daa 
  41633a:	cmovg  esi,DWORD PTR [esi+ebp*4-0x4e]
  41633f:	outs   dx,DWORD PTR ds:[esi]
  416340:	xor    BYTE PTR [ebx+0x71],cl
  416343:	retf   
  416344:	cmp    DWORD PTR [edx+0x5f],0x5cd47ab9
  41634b:	mov    DWORD PTR [ebx+ebx*2+0xde0927e],edx
  416352:	rcr    DWORD PTR [ebx],0x4e
  416355:	data16 daa 
  416357:	ret    
  416358:	and    al,0x55
  41635a:	pop    edi
  41635b:	inc    edx
  41635c:	jmp    0x41636b
  41635e:	dec    ebp
  41635f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416360:	mov    eax,ds:0xefd8c172
  416365:	ja     0x4163c4
  416367:	jecxz  0x416303
  416369:	add    ebp,DWORD PTR [ebx+ebx*2+0x5b2a7494]
  416370:	popa   
  416371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416372:	mov    esi,0x2de1e7b1
  416377:	in     eax,dx
  416378:	outs   dx,BYTE PTR ds:[esi]
  416379:	clc    
  41637a:	or     DWORD PTR [edx-0x7d46789c],ebp
  416380:	repnz outs dx,DWORD PTR ds:[esi]
  416382:	das    
  416383:	mov    eax,0x20508473
  416388:	sub    eax,ebp
  41638a:	add    ch,BYTE PTR [edi+0x49]
  41638d:	cli    
  41638e:	xlat   BYTE PTR ds:[ebx]
  41638f:	push   edx
  416390:	mov    al,ds:0x7ec53acf
  416395:	dec    esp
  416396:	mov    esp,0x66af44d4
  41639b:	idiv   DWORD PTR [ecx-0xd]
  41639e:	xchg   edx,eax
  41639f:	dec    ecx
  4163a0:	inc    esi
  4163a1:	test   BYTE PTR [edi+ebx*1+0x7b4fd0dd],bl
  4163a8:	mov    esp,0xbc37d621
  4163ad:	inc    ebx
  4163ae:	icebp  
  4163af:	enter  0x4364,0xda
  4163b3:	sar    BYTE PTR [ebx],0x22
  4163b6:	lods   eax,DWORD PTR ds:[esi]
  4163b7:	push   ebp
  4163b8:	xchg   esi,eax
  4163b9:	pop    esp
  4163ba:	mov    bh,0x6d
  4163bc:	add    eax,0xd36c8327
  4163c1:	jb     0x4163c3
  4163c3:	aas    
  4163c4:	fcom   QWORD PTR [ecx-0x27]
  4163c7:	push   esi
  4163c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163c9:	repz gs xchg esi,eax
  4163cc:	mov    bh,0x2e
  4163ce:	or     DWORD PTR [edi-0x1f73f373],ebp
  4163d4:	out    0x4,al
  4163d6:	jecxz  0x41637f
  4163d8:	mov    al,0x3b
  4163da:	jnp    0x416421
  4163dc:	jg     0x4163be
  4163de:	in     eax,0x11
  4163e0:	idiv   DWORD PTR [eax-0x7fa04b08]
  4163e6:	hlt    
  4163e7:	out    dx,eax
  4163e8:	add    BYTE PTR [ecx],bh
  4163ea:	mov    WORD PTR [ebx-0x1b9a9e33],fs
  4163f0:	mov    ss,WORD PTR [edi+edi*2+0x38]
  4163f4:	push   edx
  4163f5:	inc    esp
  4163f6:	mov    bh,0x76
  4163f8:	xchg   edi,eax
  4163f9:	addr16 sahf 
  4163fb:	and    bl,bh
  4163fd:	(bad)  [ecx+ebx*4-0x7f]
  416401:	adc    dl,BYTE PTR [ecx-0x52a63425]
  416407:	push   ds
  416408:	mov    eax,ds:0x1e111137
  41640d:	push   ebp
  41640e:	mov    cl,cl
  416410:	mov    ds:0x218f1a47,al
  416415:	mov    dh,0xe2
  416417:	push   ebx
  416418:	pushf  
  416419:	loope  0x41642b
  41641b:	sbb    DWORD PTR [edi+0x681f093d],edx
  416421:	shr    DWORD PTR [edi-0x47],0x29
  416425:	mov    ?,edi
  416427:	aad    0xfc
  416429:	push   ecx
  41642a:	stos   DWORD PTR es:[edi],eax
  41642b:	cmp    DWORD PTR [eax-0x25],ebp
  41642e:	ja     0x41645e
  416430:	and    BYTE PTR [ebx+0x49],dl
  416433:	xlat   BYTE PTR ds:[ebx]
  416434:	(bad)  
  416435:	addr16 cdq 
  416437:	icebp  
  416438:	enter  0xb985,0xc7
  41643c:	outs   dx,BYTE PTR ds:[esi]
  41643d:	mov    al,0x7f
  41643f:	mov    al,0xc9
  416441:	mov    esp,0xf9f9aa06
  416446:	mov    BYTE PTR [ebx+edx*4+0x165187c],al
  41644d:	add    BYTE PTR [ebx],bh
  41644f:	jle    0x416413
  416451:	jno    0x4164a5
  416453:	inc    ebx
  416454:	shl    BYTE PTR [esi+esi*2-0xb98c4ba],cl
  41645b:	jp     0x416454
  41645d:	aam    0x67
  41645f:	test   DWORD PTR [eax-0x27a6a2ee],esp
  416465:	ins    DWORD PTR es:[edi],dx
  416466:	sub    DWORD PTR [edi-0x73],0xffffffd7
  41646a:	and    DWORD PTR [eax-0x4e],edx
  41646d:	ja     0x4164af
  41646f:	test   DWORD PTR [esi-0x5c7755e5],esp
  416475:	lea    eax,[ebp+0xf544e11]
  41647b:	push   eax
  41647c:	push   cs
  41647d:	add    DWORD PTR [ebp-0x9a744a9],0xfffffff5
  416484:	mov    ds:0x9466bb0a,al
  416489:	mov    ebp,gs
  41648b:	sbb    DWORD PTR [esi],edx
  41648d:	sub    ah,BYTE PTR [ecx]
  41648f:	unpckhps xmm7,XMMWORD PTR [eax-0x2c6797a1]
  416496:	or     DWORD PTR [edi],ecx
  416498:	ds enter 0x7d39,0xb7
  41649d:	push   esp
  41649e:	sub    edi,DWORD PTR [edi-0x6d85c7a2]
  4164a4:	fcmovnu st,st(7)
  4164a6:	lahf   
  4164a7:	cs push edx
  4164a9:	inc    edi
  4164aa:	push   esi
  4164ab:	in     al,0xec
  4164ad:	outs   dx,DWORD PTR ds:[esi]
  4164ae:	or     BYTE PTR [esi],al
  4164b0:	mov    ?,WORD PTR [eax+0x6]
  4164b3:	pop    ebp
  4164b4:	jp     0x41645a
  4164b6:	dec    ebx
  4164b7:	pop    esp
  4164b8:	xor    BYTE PTR [edi+0x6],cl
  4164bb:	daa    
  4164bc:	es stc 
  4164be:	outs   dx,BYTE PTR ds:[esi]
  4164bf:	inc    eax
  4164c0:	lea    ebx,[edi+0x56]
  4164c3:	in     al,0x1
  4164c5:	cmc    
  4164c6:	xchg   edx,eax
  4164c7:	(bad)  
  4164c8:	lock and ecx,edi
  4164cb:	cmp    BYTE PTR [edi],al
  4164cd:	xchg   edx,eax
  4164ce:	mov    ds:0x5c0818b6,eax
  4164d3:	xchg   ecx,eax
  4164d4:	data16 mov dl,bl
  4164d7:	into   
  4164d8:	fild   DWORD PTR [esi-0x17698fad]
  4164de:	xchg   edx,eax
  4164df:	pop    eax
  4164e0:	aas    
  4164e1:	iret   
  4164e2:	gs sti 
  4164e4:	add    al,0x8a
  4164e6:	mov    ebp,0xbcad2dca
  4164eb:	pop    esi
  4164ec:	and    cl,BYTE PTR [esi+0x1885c2b5]
  4164f2:	aam    0xc5
  4164f4:	(bad)  
  4164f5:	xchg   bp,ax
  4164f7:	pop    eax
  4164f8:	mov    edx,0x43132de5
  4164fd:	in     al,dx
  4164fe:	enter  0x9833,0x3c
  416502:	jl     0x416507
  416504:	test   BYTE PTR [edi],bl
  416506:	icebp  
  416507:	shl    DWORD PTR [edx-0x7da4004e],0xd6
  41650e:	lods   eax,DWORD PTR ds:[esi]
  41650f:	sub    al,BYTE PTR [esi-0x409455b8]
  416515:	loop   0x41649e
  416517:	ficom  WORD PTR [edi]
  416519:	adc    DWORD PTR [ebx+edi*2-0x9],0xc82ff4a0
  416521:	add    dl,ah
  416523:	add    al,0xf3
  416525:	jge    0x41658c
  416527:	ret    0x6573
  41652a:	and    DWORD PTR cs:[ebp-0x5e],ebx
  41652e:	scas   eax,DWORD PTR es:[edi]
  41652f:	fild   WORD PTR [esp+edi*1-0x3]
  416533:	or     al,0xbc
  416535:	sub    al,0x8
  416537:	nop
  416538:	loop   0x416592
  41653a:	add    bh,bl
  41653c:	cmovs  eax,DWORD PTR [edx+ebx*8-0x3d8d6f02]
  416544:	sbb    ecx,DWORD PTR [ebp+0x2]
  416547:	daa    
  416548:	out    dx,al
  416549:	cld    
  41654a:	mov    al,BYTE PTR [edx-0x35b6d3c6]
  416550:	rol    DWORD PTR [eax+0x4c88a60d],0xe7
  416557:	mov    cl,0xd4
  416559:	dec    ecx
  41655a:	cmp    eax,0xdbc2ec24
  41655f:	je     0x4165bc
  416561:	push   ecx
  416562:	mov    bl,0xb4
  416564:	test   DWORD PTR [ebx-0x6a857762],ebp
  41656a:	jb     0x416559
  41656c:	cmp    al,0xcf
  41656e:	jmp    0x80b0:0x5b551916
  416575:	add    bl,BYTE PTR [eax+0x35]
  416578:	test   DWORD PTR [ecx],0x67616c8b
  41657e:	add    eax,0x74bd6949
  416583:	hlt    
  416584:	fcomp  QWORD PTR [ebx-0x2f01cbe8]
  41658a:	sbb    DWORD PTR [ebp-0x2071867b],eax
  416590:	add    eax,0xdc765a87
  416595:	test   al,0x8f
  416597:	leave  
  416598:	or     BYTE PTR [esi],bh
  41659a:	call   0xbe145e6d
  41659f:	pop    esi
  4165a0:	mov    esp,0xf677110e
  4165a5:	or     ah,BYTE PTR [esi+0x1f45c64]
  4165ab:	aad    0xb0
  4165ad:	jb     0x4165ce
  4165af:	push   eax
  4165b0:	retf   0x98e7
  4165b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165b4:	ins    DWORD PTR es:[edi],dx
  4165b5:	pop    ds
  4165b6:	popf   
  4165b7:	daa    
  4165b8:	je     0x4165fa
  4165ba:	jns    0x41655b
  4165bc:	dec    eax
  4165bd:	ja     0x4165f5
  4165bf:	push   ss
  4165c0:	rcl    BYTE PTR [ebx],cl
  4165c2:	(bad)  
  4165c3:	push   edx
  4165c4:	jp     0x416608
  4165c6:	in     eax,dx
  4165c7:	arpl   WORD PTR [ecx],di
  4165c9:	and    BYTE PTR [edx-0x4aaee062],bl
  4165cf:	out    0xee,eax
  4165d1:	mov    bh,0x67
  4165d3:	adc    dh,BYTE PTR [edx-0x2e]
  4165d6:	xchg   edi,eax
  4165d7:	sub    esp,edi
  4165d9:	ja     0x41656d
  4165db:	sbb    edi,DWORD PTR [edx]
  4165dd:	mov    dl,0x20
  4165df:	xchg   edi,eax
  4165e0:	cmp    BYTE PTR [eax-0x32e73d33],dh
  4165e6:	inc    eax
  4165e7:	inc    ecx
  4165e8:	lea    edi,es:[bx]
  4165ec:	cs fwait
  4165ee:	out    0x2e,al
  4165f0:	pop    ss
  4165f1:	mov    dl,0x9c
  4165f3:	imul   ebp,DWORD PTR [ebp+0x66d797f9],0x2c7edff7
  4165fd:	arpl   ax,sp
  4165ff:	out    0x4f,eax
  416601:	mov    ebp,0xa0adf26c
  416606:	jl     0x416644
  416608:	mov    ecx,0x7c1f9068
  41660d:	test   DWORD PTR [edx*1-0x72fee81a],edi
  416614:	pop    ebp
  416615:	cmp    DWORD PTR [ebp+0x44b5a009],edx
  41661b:	adc    al,0xde
  41661d:	add    ebx,DWORD PTR [ecx]
  41661f:	pusha  
  416620:	add    ebx,DWORD PTR [ebx]
  416622:	add    DWORD PTR [ecx+0x6963089b],eax
  416628:	ds pusha 
  41662a:	xlat   BYTE PTR ds:[ebx]
  41662b:	push   0x8b367a97
  416630:	mov    bl,0x29
  416632:	lahf   
  416633:	inc    esi
  416634:	jo     0x416697
  416636:	dec    ecx
  416637:	pushf  
  416638:	cmp    eax,0xdf72ec2f
  41663d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41663e:	ja     0x4165fe
  416640:	and    eax,0x8a498047
  416645:	cwde   
  416646:	jns    0x41660c
  416648:	dec    esi
  416649:	add    BYTE PTR [ecx],al
  41664b:	clc    
  41664c:	jae    0x416634
  41664e:	retf   0x258a
  416651:	push   edx
  416652:	test   DWORD PTR [ebx+0x37ce8d8d],0x64ca31b2
  41665c:	jp     0x41664c
  41665e:	mov    fs,WORD PTR [ebp-0x3a]
  416661:	dec    BYTE PTR [edx-0x79f64084]
  416667:	stc    
  416668:	in     eax,0x26
  41666a:	pop    edx
  41666b:	or     eax,0x11f742ed
  416670:	loopne 0x4166a3
  416672:	rcl    ebp,cl
  416674:	call   esp
  416676:	xor    ebx,0xfffffff8
  416679:	mov    dh,0x5e
  41667b:	aas    
  41667c:	loop   0x41669b
  41667e:	sbb    bl,BYTE PTR [esi-0x17]
  416681:	popf   
  416682:	jmp    FWORD PTR [ebp+0x98c0d40]
  416688:	ja     0x416671
  41668a:	jns    0x416666
  41668c:	cld    
  41668d:	mov    edx,?
  41668f:	dec    ebx
  416690:	xor    ecx,edi
  416692:	shl    BYTE PTR [edx+0x59a25364],0x2e
  416699:	rcl    DWORD PTR [ebx],1
  41669b:	mov    ebx,0xca943d5b
  4166a0:	idiv   DWORD PTR [ecx-0x6631a343]
  4166a6:	jmp    0x41669e
  4166a8:	push   edx
  4166a9:	js     0x4166d7
  4166ab:	data16 mov dh,0x44
  4166ae:	in     eax,0x54
  4166b0:	and    al,0x73
  4166b2:	(bad)  
  4166b4:	or     BYTE PTR [ebp+esi*1-0x6a],al
  4166b8:	loopne 0x416719
  4166ba:	dec    esi
  4166bb:	sub    ah,BYTE PTR [edi-0x2330e80]
  4166c1:	sti    
  4166c2:	(bad)  
  4166c3:	(bad)  
  4166c4:	in     eax,dx
  4166c5:	xlat   BYTE PTR ds:[bx]
  4166c7:	cld    
  4166c8:	mov    ds:0xb4fee5e,al
  4166cd:	repz addr16 pop ebx
  4166d0:	mov    es,WORD PTR [bx+0x335e]
  4166d5:	add    edx,DWORD PTR [ebp+eax*1-0x2b110c37]
  4166dc:	push   ecx
  4166dd:	repnz sub al,BYTE PTR [ecx+0x4]
  4166e1:	outs   dx,DWORD PTR ds:[esi]
  4166e2:	mov    DWORD PTR [edx],esi
  4166e4:	js     0x4166e4
  4166e6:	jge    0x416740
  4166e8:	sahf   
  4166e9:	mov    ecx,0x99bab9d4
  4166ee:	inc    eax
  4166ef:	mov    dl,0x2a
  4166f1:	xchg   edi,eax
  4166f2:	das    
  4166f3:	pop    esp
  4166f4:	shl    BYTE PTR [edx],1
  4166f6:	adc    DWORD PTR ds:0xfac685ba,eax
  4166fc:	xchg   ebx,eax
  4166fd:	mov    edx,0x22ee11af
  416702:	arpl   WORD PTR [ecx+0x67],bp
  416705:	mov    ch,0x4c
  416707:	cmp    DWORD PTR [ecx+edx*2-0x66],ebp
  41670b:	xchg   esi,eax
  41670c:	push   ebp
  41670d:	inc    esp
  41670e:	jp     0x41677c
  416710:	sti    
  416711:	xor    dh,BYTE PTR [edx+0x58]
  416714:	push   edi
  416715:	xchg   DWORD PTR [ebx-0x57],ebp
  416718:	mov    edi,0x755a9ffc
  41671d:	lea    eax,[ecx+0x7ae07bf]
  416723:	mov    al,ds:0x88cc5ee4
  416728:	gs call 0x1df4:0xd36928d0
  416730:	ja     0x4166bf
  416732:	mov    esi,0xd7c8b238
  416737:	push   edx
  416738:	rcr    BYTE PTR [ecx+0x19],1
  41673b:	push   es
  41673c:	mov    DWORD PTR [ebx+0x5f],esp
  41673f:	inc    edx
  416740:	call   0x3b9a:0x39f3748c
  416747:	test   bh,cl
  416749:	sub    cl,dl
  41674b:	scas   eax,DWORD PTR es:[edi]
  41674c:	mov    al,0xa3
  41674e:	jno    0x416751
  416750:	pop    es
  416751:	mov    bl,0x3c
  416753:	xor    ah,cl
  416755:	cld    
  416756:	daa    
  416757:	sub    bh,cl
  416759:	cmp    bh,BYTE PTR [edx]
  41675b:	cmp    BYTE PTR [edi+0x51bbae0],dl
  416761:	push   esi
  416762:	mov    ds,WORD PTR [ecx-0x18]
  416765:	mov    ds:0x1b837e0e,al
  41676a:	pop    ebp
  41676b:	inc    esp
  41676c:	dec    ebp
  41676d:	mov    ds:0x8d551312,al
  416772:	ins    BYTE PTR es:[edi],dx
  416773:	lods   eax,DWORD PTR ds:[esi]
  416774:	sti    
  416775:	cmp    ebp,DWORD PTR [esp+ebx*4-0x46]
  416779:	sub    eax,0xa7340c59
  41677e:	fdiv   QWORD PTR [edi]
  416780:	sahf   
  416781:	les    edi,FWORD PTR [eax+0x40]
  416784:	add    dl,ah
  416786:	mov    al,ds:0x1d37644f
  41678b:	dec    eax
  41678c:	neg    BYTE PTR [eax]
  41678e:	inc    edx
  416790:	mov    eax,0xde4bfbe9
  416795:	mov    ebx,0xf7e93f89
  41679a:	mov    esp,0x1b818b8c
  41679f:	jnp    0x416756
  4167a1:	out    0x19,eax
  4167a3:	mov    BYTE PTR [edx],ah
  4167a5:	in     al,0x69
  4167a7:	sbb    DWORD PTR [ebx+esi*1-0x5945b04f],0x4d
  4167af:	inc    ebp
  4167b0:	dec    eax
  4167b1:	xchg   BYTE PTR [esi*8-0x94eb6c3],dl
  4167b8:	cs cmp al,0xff
  4167bb:	and    BYTE PTR [edx-0x3a29542],dl
  4167c1:	inc    ebp
  4167c2:	add    edi,esp
  4167c4:	jmp    0x108e:0xc59e8d8b
  4167cb:	adc    eax,0x386abce3
  4167d0:	jl     0x4167f1
  4167d2:	cdq    
  4167d3:	loopne 0x4167b8
  4167d5:	sub    BYTE PTR [esi-0x50],dl
  4167d8:	iret   
  4167d9:	pop    esi
  4167da:	emms   
  4167dc:	(bad)  
  4167dd:	aam    0xf9
  4167df:	scas   eax,DWORD PTR es:[edi]
  4167e0:	jle    0x4167c3
  4167e2:	jno    0x4167ee
  4167e4:	sbb    eax,0xe69bf50
  4167e9:	in     eax,0xa0
  4167eb:	outs   dx,DWORD PTR ds:[esi]
  4167ec:	sbb    BYTE PTR [ebp-0x38],ah
  4167ef:	jns    0x41681f
  4167f1:	clc    
  4167f2:	pop    eax
  4167f3:	test   BYTE PTR [esi-0x4d],cl
  4167f6:	out    dx,al
  4167f7:	stos   BYTE PTR es:[edi],al
  4167f8:	xchg   ebp,eax
  4167f9:	pop    edx
  4167fa:	(bad)  
  4167fb:	out    0x8d,al
  4167fd:	test   eax,0x6c84fe42
  416802:	mov    edx,0x28d88cc6
  416807:	push   esp
  416808:	shl    DWORD PTR [edx+0x63],cl
  41680b:	js     0x41686b
  41680d:	cwde   
  41680e:	or     edx,ebx
  416810:	or     BYTE PTR [ecx+0x13],al
  416813:	jno    0x416833
  416815:	in     al,0x95
  416817:	jbe    0x4167d9
  416819:	sbb    ebx,DWORD PTR [ebp-0x46]
  41681c:	mov    ah,0x91
  41681e:	sar    DWORD PTR [eax+edi*2-0x2898447d],1
  416825:	push   0xffffff8a
  416827:	xchg   edi,eax
  416828:	or     DWORD PTR [edx-0x24],edi
  41682b:	sub    al,0x51
  41682d:	mov    ah,0xc5
  41682f:	addr16 lock aad 0x32
  416833:	test   BYTE PTR [esi+0x3d48880f],dl
  416839:	sahf   
  41683a:	fwait
  41683b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41683c:	data16 cmp al,ch
  41683f:	cmp    ebx,ebp
  416841:	ja     0x4168c1
  416843:	xchg   edi,eax
  416844:	inc    ecx
  416845:	fcomp  QWORD PTR [ebx+ebx*8+0x51258f08]
  41684c:	stos   DWORD PTR es:[edi],eax
  41684d:	ret    
  41684e:	cmp    BYTE PTR ds:0x9a6675c7,0x8c
  416855:	push   fs
  416857:	es sbb dh,ch
  41685a:	mov    eax,ds:0x1df865d4
  41685f:	adc    al,0x7f
  416861:	das    
  416862:	push   0x1d29876f
  416867:	sbb    cl,BYTE PTR [edi-0x63c2eed1]
  41686d:	cmp    DWORD PTR [eax],ecx
  41686f:	mov    dl,0xcc
  416871:	cmp    dl,BYTE PTR [esi]
  416873:	call   0xa707:0x8a6f0b44
  41687a:	jecxz  0x4168f7
  41687c:	cld    
  41687d:	(bad)  
  41687e:	in     eax,0x4e
  416880:	or     ecx,DWORD PTR [eax-0x69]
  416883:	rol    DWORD PTR ds:0xf69eb77b,cl
  416889:	cli    
  41688a:	add    BYTE PTR [ecx],ah
  41688c:	pop    esi
  41688d:	xchg   edx,eax
  41688e:	lock retf 0xe126
  416892:	inc    ecx
  416893:	ficom  DWORD PTR [edi+0xe625af1]
  416899:	sahf   
  41689a:	div    DWORD PTR [edx]
  41689c:	inc    eax
  41689d:	inc    esp
  41689e:	jae    0x41690c
  4168a0:	adc    BYTE PTR [edx+edx*2-0x17],ah
  4168a4:	fadd   DWORD PTR [ebp-0x3e8ae555]
  4168ab:	push   0xffffff94
  4168ad:	mov    edx,0x8ed84b92
  4168b2:	xor    bl,BYTE PTR [ebx+0x70]
  4168b5:	in     al,0xa3
  4168b7:	fadd   QWORD PTR [ecx+eax*4+0x28]
  4168bb:	sub    al,0xa5
  4168bd:	sbb    al,0x3a
  4168bf:	cs ret 
  4168c1:	mov    esi,0xf6d8f0f4
  4168c6:	or     BYTE PTR [edx-0x2d],ch
  4168c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168ca:	pop    esi
  4168cb:	loop   0x4168ea
  4168cd:	inc    ebp
  4168ce:	inc    edi
  4168cf:	dec    ebp
  4168d0:	sub    DWORD PTR [ebx-0x5c],ebx
  4168d3:	adc    edx,DWORD PTR [edi+0x28]
  4168d6:	mov    eax,0xc6e79530
  4168db:	xchg   dx,ax
  4168dd:	push   0xba51ffb2
  4168e2:	add    eax,0xe8788772
  4168e7:	in     al,0xb4
  4168e9:	dec    eax
  4168ea:	es xchg edi,eax
  4168ec:	fild   QWORD PTR [ebp+0xf5dd954]
  4168f2:	addr16 pop es
  4168f4:	popa   
  4168f5:	sub    al,BYTE PTR cs:[ecx]
  4168f8:	fs in  al,dx
  4168fa:	push   0x1d
  4168fc:	lea    esp,[ecx]
  4168fe:	ficomp WORD PTR [ecx]
  416900:	dec    ecx
  416901:	push   eax
  416902:	das    
  416903:	enter  0xdc1a,0x17
  416907:	lods   eax,DWORD PTR ds:[esi]
  416908:	sar    BYTE PTR [ebx],0x85
  41690b:	pop    ds
  41690c:	cs leave 
  41690e:	mov    ecx,0x3d398647
  416913:	inc    edx
  416914:	gs test al,0x1b
  416917:	fdivr  DWORD PTR [edi+0x4d]
  41691a:	int3   
  41691b:	push   esi
  41691c:	sbb    DWORD PTR [edi+edi*4-0x8053aa0],esp
  416923:	mov    esi,0x63090b33
  416928:	lahf   
  416929:	xchg   edx,eax
  41692a:	or     dl,dl
  41692c:	sub    edx,DWORD PTR [esi+ebx*1+0x6652f398]
  416933:	shl    BYTE PTR [edi-0x9],1
  416936:	mov    WORD PTR [edi],?
  416938:	xchg   edi,eax
  416939:	push   edx
  41693a:	add    al,0xc5
  41693c:	adc    esp,edi
  41693e:	jle    0x41690c
  416940:	mov    esp,0x44d34979
  416945:	icebp  
  416946:	aas    
  416947:	and    eax,0xf7addba2
  41694c:	pusha  
  41694d:	or     DWORD PTR [ebp-0x217cbd29],ebx
  416953:	js     0x416965
  416955:	fcom   QWORD PTR [ebp+esi*8-0x78]
  416959:	ret    0x2506
  41695c:	add    eax,0xacdef06c
  416961:	je     0x416936
  416963:	sbb    al,0xb
  416965:	push   es
  416966:	sbb    edi,DWORD PTR [esp+ecx*8]
  416969:	xor    al,0x72
  41696b:	hlt    
  41696c:	sub    bl,cl
  41696e:	std    
  41696f:	inc    ebx
  416970:	mov    al,ds:0x392c591f
  416975:	mov    eax,ds:0x7a626bbd
  41697a:	or     edi,DWORD PTR [edx+0x260c606e]
  416980:	stc    
  416981:	inc    esp
  416982:	inc    edi
  416983:	sub    BYTE PTR [ebx],ah
  416985:	dec    ebp
  416986:	lock aad 0x5f
  416989:	mov    DWORD PTR [ebx-0x77],ebp
  41698c:	and    eax,0x758b9fdc
  416991:	cld    
  416992:	call   esi
  416994:	mov    DWORD PTR [ebp-0x38],eax
  416997:	cmp    DWORD PTR [ebp-0x38],0x57
  41699b:	jne    0x4169a9
  41699d:	mov    edx,DWORD PTR [ebp-0x20]
  4169a0:	push   edx
  4169a1:	call   0x401000
  4169a6:	add    esp,0x4
  4169a9:	xor    eax,eax
  4169ab:	pop    esi
  4169ac:	mov    esp,ebp
  4169ae:	pop    ebp
  4169af:	ret    
  4169b0:	push   ebp
  4169b1:	mov    ebp,esp
  4169b3:	sub    esp,0x124
  4169b9:	xor    eax,eax
  4169bb:	mov    esp,ebp
  4169bd:	pop    ebp
  4169be:	ret    
  4169bf:	push   ebp
  4169c0:	mov    ebp,esp
  4169c2:	sub    esp,0x2c
  4169c5:	push   ebx
  4169c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4169cd:	mov    DWORD PTR [ebp-0xc],0x0
  4169d4:	mov    DWORD PTR [ebp-0x20],0x1
  4169db:	mov    DWORD PTR [ebp-0x10],0x0
  4169e2:	mov    eax,DWORD PTR [ebp+0xc]
  4169e5:	mov    DWORD PTR [ebp-0x1c],eax
  4169e8:	mov    DWORD PTR [ebp-0x18],0x0
  4169ef:	mov    DWORD PTR [ebp-0x8],0x0
  4169f6:	mov    DWORD PTR [ebp-0x24],0x0
  4169fd:	mov    ecx,DWORD PTR [ebp-0x4]
  416a00:	sub    ecx,0x1
  416a03:	mov    DWORD PTR [ebp-0x4],ecx
  416a06:	mov    edx,DWORD PTR [ebp+0x8]
  416a09:	mov    DWORD PTR [ebp-0x10],edx
  416a0c:	mov    DWORD PTR [ebp-0x28],0x1
  416a13:	mov    eax,DWORD PTR [ebp-0x4]
  416a16:	add    eax,0x2
  416a19:	mov    DWORD PTR [ebp-0x4],eax
  416a1c:	mov    ecx,DWORD PTR [ebp-0x1c]
  416a1f:	add    ecx,DWORD PTR [ebp-0x4]
  416a22:	mov    dl,BYTE PTR [ecx+0x1]
  416a25:	mov    BYTE PTR [ebp-0x11],dl
  416a28:	mov    eax,DWORD PTR [ebp-0x4]
  416a2b:	add    eax,0x1
  416a2e:	mov    DWORD PTR [ebp-0x4],eax
  416a31:	mov    cl,BYTE PTR [ebp-0x11]
  416a34:	mov    BYTE PTR [ebp-0x29],cl
  416a37:	push   edx
  416a38:	pop    ebx
  416a39:	mov    ecx,ebx
  416a3b:	mov    edx,DWORD PTR [ebp-0x10]
  416a3e:	add    edx,DWORD PTR [ebp-0x4]
  416a41:	mov    al,BYTE PTR [ebp-0x29]
  416a44:	mov    BYTE PTR [edx],al
  416a46:	mov    ebx,esi
  416a48:	mov    ecx,DWORD PTR [ebp+0x14]
  416a4b:	add    ecx,DWORD PTR [ebp-0x8]
  416a4e:	movzx  edx,BYTE PTR [ecx]
  416a51:	mov    DWORD PTR [ebp-0xc],edx
  416a54:	mov    eax,DWORD PTR [ebp-0x8]
  416a57:	mov    ecx,DWORD PTR [ebp-0x28]
  416a5a:	add    eax,ecx
  416a5c:	mov    DWORD PTR [ebp-0x8],eax
  416a5f:	mov    eax,DWORD PTR [ebp-0x8]
  416a62:	shr    eax,0x3
  416a65:	mov    ecx,0x1
  416a6a:	sub    ecx,eax
  416a6c:	mov    DWORD PTR [ebp-0x20],ecx
  416a6f:	shr    eax,cl
  416a71:	mov    edx,DWORD PTR [ebp-0x8]
  416a74:	imul   edx,DWORD PTR [ebp-0x20]
  416a78:	mov    DWORD PTR [ebp-0x8],edx
  416a7b:	shl    ebx,0x3
  416a7e:	mov    eax,DWORD PTR [ebp-0x10]
  416a81:	add    eax,DWORD PTR [ebp-0x4]
  416a84:	movzx  ecx,BYTE PTR [eax]
  416a87:	add    ecx,DWORD PTR [ebp-0xc]
  416a8a:	mov    edx,DWORD PTR [ebp-0x10]
  416a8d:	add    edx,DWORD PTR [ebp-0x4]
  416a90:	mov    BYTE PTR [edx],cl
  416a92:	mov    eax,DWORD PTR [ebp-0x4]
  416a95:	sub    eax,0x2
  416a98:	mov    DWORD PTR [ebp-0x4],eax
  416a9b:	mov    ecx,DWORD PTR [ebp-0x4]
  416a9e:	cmp    ecx,DWORD PTR [ebp+0x10]
  416aa1:	jl     0x416a13
  416aa7:	pop    ebx
  416aa8:	mov    esp,ebp
  416aaa:	pop    ebp
  416aab:	ret    
  416aac:	jmp    DWORD PTR ds:0x417020
