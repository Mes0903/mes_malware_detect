
0c839f901dc853454efd77f4a3b664c5526cc260f0911a58493b939768d1f5ce.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [eax+0x7c117742],edi
  402e97:	jl     0x402f15
  402e99:	jl     0x402e7b
  402e9b:	pop    edi
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax-0x54],0x6d6c6c62
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	sbb    esi,ebx
  402f43:	(bad)  
  402f44:	std    
  402f45:	lds    edx,FWORD PTR [ecx+0x702a860e]
  402f4b:	inc    edx
  402f4d:	lea    edi,[edi+0x61bc8a85]
  402f53:	push   ss
  402f54:	out    dx,al
  402f55:	cld    
  402f56:	mov    al,ds:0x1aad7354
  402f5b:	nop
  402f5c:	sub    al,0x66
  402f5e:	aam    0x25
  402f60:	nop
  402f61:	fadd   DWORD PTR [eax+edi*1+0x42]
  402f65:	jp     0x402f02
  402f67:	sub    ecx,esp
  402f69:	pop    esp
  402f6a:	mov    ecx,0x757c53d0
  402f6f:	icebp  
  402f70:	mul    dh
  402f72:	push   cs
  402f73:	cli    
  402f74:	dec    ebp
  402f75:	cmp    al,0x6
  402f77:	cmp    ch,BYTE PTR [ebp-0x7f866716]
  402f7d:	sub    eax,0x4216216
  402f82:	iret   
  402f83:	dec    esi
  402f84:	mov    esi,0x7b588281
  402f89:	arpl   si,sp
  402f8b:	in     al,dx
  402f8c:	xlat   BYTE PTR ds:[ebx]
  402f8d:	adc    eax,0x80873871
  402f92:	inc    esp
  402f93:	xchg   ebp,eax
  402f94:	ss sbb cl,ch
  402f97:	mov    bh,0xa1
  402f99:	xor    BYTE PTR [ebp+esi*1-0x1df25f4b],bh
  402fa0:	push   ebp
  402fa1:	enter  0x9636,0x33
  402fa5:	mov    ss,WORD PTR [ebp+0x6e6ecf3e]
  402fab:	xchg   ecx,eax
  402fac:	neg    cl
  402fae:	pushf  
  402faf:	pop    ebp
  402fb0:	jno    0x402ff5
  402fb2:	js     0x402fe9
  402fb4:	or     ebx,DWORD PTR [esi+ebx*8-0x28a74a15]
  402fbb:	mov    dh,0x83
  402fbd:	jo     0x402ffd
  402fbf:	inc    ebx
  402fc0:	fistp  QWORD PTR [eax+0x5a]
  402fc3:	xchg   esp,eax
  402fc4:	stos   BYTE PTR es:[edi],al
  402fc5:	ss test cl,0xf9
  402fc9:	dec    ebx
  402fca:	ret    
  402fcb:	fimul  DWORD PTR [esi]
  402fcd:	or     eax,0xd7a38bec
  402fd2:	adc    cl,BYTE PTR ds:0xdf19b409
  402fd8:	in     eax,0x67
  402fda:	aas    
  402fdb:	(bad)  
  402fdc:	and    al,0x40
  402fde:	outs   dx,BYTE PTR ds:[esi]
  402fdf:	or     eax,0xec794861
  402fe4:	adc    al,0xf0
  402fe6:	or     bp,WORD PTR [edx]
  402fe9:	outs   dx,DWORD PTR gs:[esi]
  402feb:	test   DWORD PTR [ebx],esp
  402fed:	pop    ss
  402fee:	outs   dx,BYTE PTR ds:[esi]
  402fef:	jo     0x402fcb
  402ff1:	jg     0x403027
  402ff3:	scas   eax,DWORD PTR es:[edi]
  402ff4:	ret    0x54a2
  402ff7:	daa    
  402ff8:	mov    eax,0xb558a85a
  402ffd:	popa   
  402ffe:	mov    ch,0x4
  403000:	ss sub ch,ch
  403003:	out    0xfe,eax
  403005:	dec    edx
  403006:	scas   eax,DWORD PTR es:[edi]
  403007:	gs cmp al,0xaf
  40300a:	cld    
  40300b:	adc    BYTE PTR [ebx-0x6551e371],bl
  403011:	xchg   bx,ax
  403013:	in     eax,0xe2
  403015:	cmp    DWORD PTR [esi],ecx
  403017:	hlt    
  403018:	test   edx,ebx
  40301a:	fnstcw WORD PTR [ebx-0x64]
  40301d:	dec    BYTE PTR [edi+0x53406955]
  403023:	cwde   
  403024:	fxtract 
  403026:	ficomp WORD PTR [ecx+0x3a1306ed]
  40302c:	push   0x5b
  40302e:	xchg   ebp,eax
  40302f:	xor    al,0xad
  403031:	mov    esi,DWORD PTR [ebp-0x546ae4af]
  403037:	idiv   bl
  403039:	cmp    eax,0x698f59b
  40303e:	xor    al,0x95
  403040:	(bad)
  403044:	mov    eax,ds:0xcd00c3a1
  403049:	and    dh,BYTE PTR [ebp-0x6f]
  40304c:	cdq    
  40304d:	push   ds
  40304e:	test   eax,edx
  403050:	adc    esi,ebx
  403052:	sahf   
  403053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403054:	mov    al,ds:0x3c6019fc
  403059:	cmp    al,0x7e
  40305b:	jecxz  0x4030ca
  40305d:	ds (bad) 
  40305f:	push   ebx
  403060:	sbb    ah,BYTE PTR [ecx-0x5254a2f4]
  403066:	nop    edx
  403069:	sub    DWORD PTR [edi-0x31],eax
  40306c:	pop    ebp
  40306d:	push   cs
  40306e:	sub    DWORD PTR [edx],eax
  403070:	addr16 in al,dx
  403072:	add    edi,ecx
  403074:	pop    ds
  403075:	push   ds
  403076:	jmp    0x2876:0xcd2d6ca6
  40307d:	xor    DWORD PTR ds:0x80a83083,ebp
  403083:	je     0x4030d5
  403085:	fdivr  st(7),st
  403087:	dec    esp
  403088:	fs jb  0x403084
  40308b:	fcom   QWORD PTR [edx]
  40308d:	dec    esi
  40308e:	or     DWORD PTR [ecx+0x79bd5e72],esi
  403094:	pop    ebx
  403095:	cdq    
  403096:	ins    BYTE PTR es:[edi],dx
  403097:	mov    edi,0xa3b1ea16
  40309c:	dec    ebx
  40309d:	fst    DWORD PTR [edi-0x51]
  4030a0:	loopne 0x4030c7
  4030a2:	jbe    0x4030d9
  4030a4:	mov    WORD PTR [eax+0x6ef8de74],gs
  4030aa:	imul   DWORD PTR [edi-0x4f]
  4030ad:	push   0xa7fe3894
  4030b2:	xchg   ebx,eax
  4030b3:	xchg   BYTE PTR [esi+0x674e3c36],dh
  4030b9:	(bad)  
  4030ba:	pop    edi
  4030bb:	jmp    0x4030a7
  4030bd:	daa    
  4030be:	jmp    0x30c879ef
  4030c3:	sbb    BYTE PTR [ecx],ah
  4030c5:	push   0xffffff8f
  4030c7:	push   eax
  4030c8:	inc    ebx
  4030c9:	mov    eax,eax
  4030cb:	sub    DWORD PTR [ecx+eax*1-0x6aa5361c],ecx
  4030d2:	loopne 0x403068
  4030d4:	inc    ecx
  4030d5:	das    
  4030d6:	pop    esp
  4030d7:	cmp    BYTE PTR [eax],bh
  4030d9:	mov    eax,eax
  4030db:	jecxz  0x4030c0
  4030dd:	test   DWORD PTR [ecx+0x234c9cf6],edx
  4030e3:	and    esi,DWORD PTR [edi-0x37c3498b]
  4030e9:	(bad)  
  4030ea:	xchg   ebx,eax
  4030eb:	clc    
  4030ec:	xchg   DWORD PTR [esi-0x380cdf5e],ebp
  4030f2:	int3   
  4030f3:	inc    esp
  4030f4:	out    0xde,al
  4030f6:	xchg   ebx,eax
  4030f7:	inc    edx
  4030f8:	outs   dx,BYTE PTR ds:[esi]
  4030f9:	lods   eax,DWORD PTR ds:[esi]
  4030fa:	xor    cl,BYTE PTR [eax]
  4030fc:	in     al,0x17
  4030fe:	stos   DWORD PTR es:[edi],eax
  4030ff:	cdq    
  403100:	adc    edi,edi
  403102:	hlt    
  403103:	popa   
  403104:	xor    al,0x7b
  403106:	in     eax,0x38
  403108:	sub    BYTE PTR [edx],dl
  40310a:	out    dx,eax
  40310b:	aam    0xc7
  40310d:	sti    
  40310e:	jno    0x40316b
  403110:	dec    eax
  403111:	jmp    0x3b31ee83
  403116:	jmp    FWORD PTR [edi-0x3420752c]
  40311c:	fmul   QWORD PTR [eax-0x61bb97d5]
  403122:	add    eax,0x8ad8ce2f
  403127:	adc    BYTE PTR ds:0x86ccac2a,ah
  40312d:	sbb    esi,DWORD PTR [eax-0x4cf2a1ad]
  403133:	and    ebp,edx
  403135:	jmp    0x46339f11
  40313a:	jo     0x4031a0
  40313c:	mov    ds:0x9b881e4,al
  403141:	pop    ds
  403142:	mov    WORD PTR [esi+ebp*4+0x2d],ss
  403146:	inc    esp
  403147:	(bad)  
  403148:	cdq    
  403149:	push   esp
  40314a:	aam    0xee
  40314c:	mov    bl,0x7d
  40314e:	sar    BYTE PTR ds:0x1ee1a2c4,1
  403154:	inc    edi
  403155:	cmc    
  403156:	fnsave [eax+0x10a078f6]
  40315c:	popa   
  40315d:	pop    eax
  40315e:	push   ebp
  40315f:	cmp    al,BYTE PTR [esi+0x64]
  403162:	jb     0x403104
  403164:	cwde   
  403165:	pushf  
  403166:	lods   eax,DWORD PTR ds:[esi]
  403167:	pop    edx
  403168:	adc    BYTE PTR gs:[ecx+0x27123502],bh
  40316f:	mov    esp,0x3dd45fd5
  403174:	ror    DWORD PTR [ebx+eiz*2+0x79f6c021],0xea
  40317c:	cdq    
  40317d:	sub    esi,DWORD PTR [ecx+edx*4]
  403180:	call   0xdee9:0x1cadb1aa
  403187:	fnsave [edi+0x38e280b3]
  40318d:	lods   al,BYTE PTR ds:[esi]
  40318e:	add    bh,BYTE PTR [eax]
  403190:	pop    esi
  403191:	jmp    0x695a:0xfd647f4f
  403198:	sub    dl,BYTE PTR [ecx]
  40319a:	sar    bl,cl
  40319c:	sub    BYTE PTR [edx],cl
  40319e:	out    dx,eax
  40319f:	stos   BYTE PTR es:[edi],al
  4031a0:	sbb    al,0xbd
  4031a2:	push   es
  4031a3:	inc    ecx
  4031a4:	and    BYTE PTR [eax-0x64],cl
  4031a7:	push   eax
  4031a8:	jae    0x403222
  4031aa:	mov    ebx,0xc5b7e7a3
  4031af:	iret   
  4031b0:	add    ah,cl
  4031b2:	and    bl,dh
  4031b4:	jle    0x4031c6
  4031b6:	and    BYTE PTR [edx-0x440ba501],bh
  4031bc:	shl    BYTE PTR [edi+edx*2+0x23],cl
  4031c0:	mov    dh,0x94
  4031c2:	js     0x403203
  4031c4:	or     BYTE PTR [ebp+0x2e3d4b4b],cl
  4031ca:	sar    DWORD PTR [eax+0x57],1
  4031cd:	mov    dl,bl
  4031cf:	popf   
  4031d0:	and    ch,BYTE PTR [edi+0x565f6835]
  4031d6:	mov    ebp,0x4765b886
  4031db:	out    0xd9,ax
  4031de:	adc    eax,0x3c114b70
  4031e3:	cli    
  4031e4:	call   0x62d7:0x24d50cd6
  4031eb:	int    0xbd
  4031ed:	mov    edi,0x3fc89b41
  4031f2:	push   esi
  4031f3:	and    edi,esi
  4031f5:	pop    ds
  4031f6:	jae    0x4031c3
  4031f8:	sahf   
  4031f9:	xor    esi,DWORD PTR [ebx+0x22]
  4031fc:	mov    al,ds:0xa9b3476c
  403201:	pop    ebp
  403202:	push   edx
  403203:	pop    ss
  403204:	push   ebp
  403205:	test   al,0x5e
  403207:	add    BYTE PTR [ebx+0x5b],cl
  40320a:	(bad)  
  40320b:	int    0xfb
  40320d:	pop    es
  40320e:	adc    eax,0xc3dfb38b
  403213:	mov    eax,ds:0xd361717a
  403218:	push   es
  403219:	aas    
  40321a:	sub    DWORD PTR [ebx],ebx
  40321c:	in     eax,0x9e
  40321e:	inc    edx
  40321f:	or     BYTE PTR ds:0x557ab0e8,cl
  403225:	xchg   esp,eax
  403226:	sbb    eax,0x6f467d0e
  40322b:	sub    DWORD PTR [edi-0x52275ce3],esi
  403231:	fstp   QWORD PTR [ebx+0x52]
  403234:	cmp    DWORD PTR [ebx+0x43f257ff],esi
  40323a:	(bad)  
  40323b:	dec    ebp
  40323c:	sub    al,BYTE PTR [eax+0x1f3c4d0b]
  403242:	scas   eax,DWORD PTR es:[edi]
  403243:	sub    DWORD PTR [edx-0x3a653b61],0xc81506e8
  40324d:	sbb    eax,edi
  40324f:	mov    al,ds:0x7286f24b
  403254:	mov    dl,0x42
  403256:	adc    DWORD PTR [ecx-0x707e918c],0xec340b5
  403260:	in     eax,dx
  403261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403262:	sbb    al,0x73
  403264:	cmp    al,0x41
  403266:	pop    es
  403267:	cmp    al,0x1
  403269:	push   eax
  40326a:	pop    ebp
  40326b:	ds add al,0xb8
  40326e:	mov    ecx,DWORD PTR [ebx-0x30caab57]
  403274:	adc    DWORD PTR [ebp-0x6eec74ec],edi
  40327a:	pushf  
  40327b:	aad    0x38
  40327d:	jmp    0x81c987d1
  403282:	jmp    0x8e09:0x8066d143
  403289:	into   
  40328a:	xchg   ebx,eax
  40328b:	jne    0x4032f7
  40328d:	fisub  DWORD PTR [ecx-0x69]
  403290:	mov    dh,0x83
  403292:	xcrypt-cbc (bad)
  403293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403294:	(bad)  
  403295:	outs   dx,DWORD PTR ds:[esi]
  403296:	ret    0xf271
  403299:	daa    
  40329a:	out    0x7,eax
  40329c:	rcr    DWORD PTR [esi+0x20],0x72
  4032a0:	mov    dl,bh
  4032a2:	cmp    al,0xbb
  4032a4:	jg     0x403298
  4032a6:	mov    ebx,0xb9bf1a78
  4032ab:	clc    
  4032ac:	and    ebp,DWORD PTR [edi]
  4032ae:	popf   
  4032af:	cmp    BYTE PTR [esi-0x73],dh
  4032b2:	or     DWORD PTR [ebx+0x65ffa9c4],ebp
  4032b8:	push   cs
  4032b9:	in     al,0xe3
  4032bb:	cld    
  4032bc:	push   cs
  4032bd:	pusha  
  4032be:	mov    eax,0x75375056
  4032c3:	cli    
  4032c4:	mov    bl,0x6a
  4032c6:	cmp    DWORD PTR [eax+0x29],eax
  4032c9:	outs   dx,BYTE PTR ds:[esi]
  4032ca:	(bad)  
  4032cb:	retf   
  4032cc:	and    eax,0xa33ba9c1
  4032d1:	retf   
  4032d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032d3:	addr16 inc esi
  4032d5:	sub    BYTE PTR [ebx],dl
  4032d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032d8:	adc    edi,DWORD PTR [ebx+0x9]
  4032db:	push   esp
  4032dc:	pusha  
  4032dd:	or     DWORD PTR [ecx-0x5a6459fa],ebx
  4032e3:	(bad)  
  4032e4:	std    
  4032e5:	in     al,0x8c
  4032e7:	rcr    BYTE PTR [edx-0xc6635dd],1
  4032ed:	sub    esp,DWORD PTR [ebp-0x3ea0e915]
  4032f3:	push   ebp
  4032f4:	pop    edi
  4032f5:	xor    dh,BYTE PTR [ecx+ebx*2+0x9c66b5]
  4032fc:	adc    esi,DWORD PTR [esi]
  4032fe:	fnstcw WORD PTR gs:[esi+esi*2+0x31]
  403303:	inc    edi
  403304:	hlt    
  403305:	iret   
  403306:	pop    ebp
  403307:	or     DWORD PTR [eax-0x7d],0x88a003b
  40330e:	add    esi,edi
  403310:	call   0xd61ba0b5
  403315:	aad    0xde
  403317:	xor    ebp,edx
  403319:	inc    ebp
  40331a:	popa   
  40331b:	es inc ebx
  40331d:	pusha  
  40331e:	sub    edx,DWORD PTR [esi]
  403320:	enter  0x3fb7,0x28
  403324:	jle    0x4032e1
  403326:	icebp  
  403327:	push   0x485aa00a
  40332c:	mov    dh,0x11
  40332e:	in     eax,dx
  40332f:	mov    WORD PTR [ecx],?
  403331:	xchg   esi,eax
  403332:	fwait
  403333:	into   
  403334:	xor    ebx,DWORD PTR [ebx]
  403336:	or     al,BYTE PTR [edx+0x1b41e960]
  40333c:	jge    0x4032e1
  40333e:	mov    DWORD PTR [ebx-0x13994a11],edx
  403344:	cmp    DWORD PTR [esi-0x721f9531],edi
  40334a:	leave  
  40334b:	or     cl,ah
  40334d:	jecxz  0x40338a
  40334f:	js     0x403327
  403351:	push   0x9b8e6467
  403356:	test   eax,edx
  403358:	repz xchg esp,eax
  40335a:	adc    DWORD PTR [edi],esp
  40335c:	repz sbb al,bh
  40335f:	pop    ebx
  403360:	int    0x41
  403362:	jns    0x40331c
  403364:	je     0x403323
  403366:	loope  0x403358
  403368:	push   0x598e39e1
  40336d:	pop    esi
  40336e:	pop    ebx
  40336f:	jg     0x403384
  403371:	icebp  
  403372:	scas   eax,DWORD PTR es:[edi]
  403373:	cld    
  403374:	dec    BYTE PTR [edi]
  403376:	cmp    edi,DWORD PTR [ecx+0x78]
  403379:	dec    edi
  40337a:	test   eax,0xbf4aa272
  40337f:	sbb    BYTE PTR [edi-0x11],al
  403382:	adc    bl,bh
  403384:	lahf   
  403385:	xchg   DWORD PTR [edi],eax
  403387:	pop    ss
  403388:	mov    edx,0x56068156
  40338d:	repnz add cl,bh
  403390:	mov    eax,ds:0x3a461348
  403395:	aad    0xe8
  403397:	cmp    eax,0x551545bf
  40339c:	cmp    dl,BYTE PTR [edx+0x48]
  40339f:	ret    0xdc94
  4033a2:	int3   
  4033a3:	sub    ah,BYTE PTR [ebx+0x6fee677e]
  4033a9:	xor    edx,esp
  4033ab:	adc    BYTE PTR [ebx-0x63],bh
  4033ae:	adc    BYTE PTR [ebp-0x11b5804],dh
  4033b4:	pop    ebp
  4033b5:	pusha  
  4033b6:	icebp  
  4033b7:	xor    eax,0x6fdcacd0
  4033bc:	xchg   DWORD PTR [ebx+eax*8-0x304f7e1c],ebp
  4033c3:	xor    al,0x85
  4033c5:	daa    
  4033c6:	mov    ds,WORD PTR [eax]
  4033c8:	sbb    bl,BYTE PTR [eax+0x15]
  4033cb:	push   ecx
  4033cc:	pop    eax
  4033cd:	fsubr  DWORD PTR [eax+0x6cc84a2c]
  4033d3:	sbb    BYTE PTR [esi+0x2f],ch
  4033d6:	cmp    al,0x6
  4033d8:	add    edi,ecx
  4033da:	and    ebx,DWORD PTR [ebx-0x4020cb1a]
  4033e0:	outs   dx,BYTE PTR ds:[esi]
  4033e1:	mov    ebp,0xe6b7bbe7
  4033e6:	push   ecx
  4033e7:	dec    esi
  4033e8:	cmp    dl,BYTE PTR [esi]
  4033ea:	je     0x40340f
  4033ec:	add    bh,cl
  4033ee:	retf   0xbe1
  4033f1:	shl    DWORD PTR [esi],0x81
  4033f4:	enter  0x2406,0xbb
  4033f8:	mov    esp,DWORD PTR [ebx-0x552d696]
  4033fe:	or     al,BYTE PTR [edx+eiz*4-0x65]
  403402:	retf   
  403403:	out    dx,al
  403404:	add    al,0x7
  403406:	xchg   DWORD PTR [eax+0x17],eax
  403409:	mov    cr1,ebp
  40340c:	inc    ebp
  40340d:	inc    eax
  40340e:	dec    ecx
  40340f:	cmp    BYTE PTR [edi],al
  403411:	xchg   ecx,eax
  403412:	sub    eax,0x4dad0162
  403417:	stos   DWORD PTR es:[edi],eax
  403418:	add    BYTE PTR [ebx-0x66],dl
  40341b:	pop    esp
  40341c:	mov    ah,BYTE PTR [edi-0x26]
  40341f:	jge    0x4033c3
  403421:	test   BYTE PTR [edx],bl
  403423:	sbb    dl,al
  403425:	jno    0x403442
  403427:	add    bl,dh
  403429:	pop    ecx
  40342a:	mov    esp,0xbeb21833
  40342f:	aad    0xe2
  403431:	push   ebp
  403432:	popa   
  403433:	sti    
  403434:	(bad)  [esi+0x3613b225]
  40343a:	push   ecx
  40343b:	push   ebx
  40343c:	sbb    edx,DWORD PTR [eax]
  40343e:	mov    ecx,gs
  403440:	pop    ss
  403441:	inc    esp
  403442:	pop    ds
  403443:	ins    WORD PTR es:[edi],dx
  403445:	push   ebx
  403446:	add    BYTE PTR [edi-0x5a],ch
  403449:	sub    ch,bl
  40344b:	sub    DWORD PTR [edx+0x73665db0],0xffffffc9
  403452:	push   ds
  403453:	push   edx
  403454:	add    eax,0x64490528
  403459:	and    DWORD PTR [edx+edx*2+0x642e42d],esp
  403460:	sub    dl,BYTE PTR [eax]
  403462:	cld    
  403463:	js     0x4034c5
  403465:	in     al,0xed
  403467:	lods   al,BYTE PTR ds:[esi]
  403468:	sahf   
  403469:	add    al,0x7e
  40346b:	rcl    BYTE PTR [ebx+edx*4-0x3],0xa1
  403470:	fnstcw WORD PTR [ecx-0x7b852cac]
  403476:	pusha  
  403477:	and    edi,DWORD PTR [ecx+0x2]
  40347a:	xchg   esi,eax
  40347b:	pushf  
  40347c:	cdq    
  40347d:	ins    BYTE PTR es:[edi],dx
  40347e:	jp     0x40343e
  403480:	add    ebp,DWORD PTR [ebp-0x18]
  403483:	sub    ch,ch
  403485:	xchg   ecx,eax
  403486:	jle    0x40348a
  403488:	mov    ds:0xfeccea13,eax
  40348d:	mov    ebx,0xc922f6f0
  403492:	fisubr WORD PTR [esi-0x5f31cb20]
  403498:	pop    ebx
  403499:	out    dx,al
  40349a:	enter  0xbca7,0xa8
  40349e:	adc    esp,DWORD PTR [edi]
  4034a0:	ret    
  4034a1:	push   ss
  4034a2:	sbb    esp,esp
  4034a4:	call   0x558d594
  4034a9:	mov    dh,0x8d
  4034ab:	dec    esp
  4034ac:	retf   0x18aa
  4034af:	jo     0x403489
  4034b1:	mov    bh,0xd5
  4034b3:	aad    0x9a
  4034b5:	push   edi
  4034b6:	xor    al,0x19
  4034b8:	ret    0x62b0
  4034bb:	pop    ds
  4034bc:	fstp   TBYTE PTR [eax]
  4034be:	cmp    al,BYTE PTR [edi+0x67]
  4034c1:	in     eax,dx
  4034c2:	mul    BYTE PTR [ebx+ebx*2]
  4034c5:	jecxz  0x403451
  4034c7:	sub    cl,cl
  4034c9:	and    ah,BYTE PTR [esi+0x513810b3]
  4034cf:	(bad)  
  4034d0:	jmp    0x4034a1
  4034d2:	bound  edx,QWORD PTR [edi-0x27]
  4034d5:	xor    eax,0x1e88f065
  4034da:	sar    ebp,1
  4034dc:	push   es
  4034dd:	inc    esp
  4034de:	sbb    BYTE PTR [eax],cl
  4034e0:	clc    
  4034e1:	jne    0x40350a
  4034e3:	xchg   ebx,eax
  4034e4:	dec    edx
  4034e5:	je     0x403517
  4034e7:	cwde   
  4034e8:	les    ebp,FWORD PTR [ecx-0x7cee5c87]
  4034ee:	icebp  
  4034ef:	fcomp  DWORD PTR [ecx+0x2fc2a0e4]
  4034f5:	ficomp WORD PTR [ecx+0x6946ef]
  4034fb:	lds    ecx,FWORD PTR [ebx-0x4d1bee7f]
  403501:	push   0xcf07bbd
  403506:	xor    DWORD PTR [ecx],eax
  403508:	pop    ebx
  403509:	ss xor eax,0x8d2d89c
  40350f:	push   esp
  403510:	dec    eax
  403511:	xor    ecx,DWORD PTR [edi+eiz*1-0x2415041c]
  403518:	std    
  403519:	stos   DWORD PTR es:[edi],eax
  40351a:	daa    
  40351b:	jbe    0x4034b5
  40351d:	and    esi,DWORD PTR [edx-0x4]
  403520:	dec    eax
  403521:	mov    eax,ds:0x741ee058
  403526:	push   cs
  403527:	in     eax,0x16
  403529:	aam    0x8f
  40352b:	cmc    
  40352c:	scas   eax,DWORD PTR es:[edi]
  40352d:	(bad)  
  40352e:	push   edi
  40352f:	inc    esi
  403530:	lss    eax,FWORD PTR [esp+ebx*8+0xbaeba14]
  403538:	in     al,0x10
  40353a:	or     al,0x8a
  40353c:	jg     0x40350c
  40353e:	pop    esp
  40353f:	ret    
  403540:	retf   
  403541:	jp     0x4035a7
  403543:	jns    0x4034dd
  403545:	xor    BYTE PTR [ebp+edi*8-0x17c592a4],dl
  40354c:	and    BYTE PTR [ebp+0x17],dl
  40354f:	(bad)  
  403550:	mov    edi,0xc740f8f5
  403555:	sahf   
  403556:	xor    eax,DWORD PTR cs:[ecx-0x52]
  40355a:	(bad)  
  40355b:	retf   0x6c8c
  40355e:	sbb    dh,BYTE PTR [ecx-0x78862623]
  403564:	cmp    DWORD PTR [ecx-0x48],ebp
  403567:	aad    0x9c
  403569:	aad    0xb0
  40356b:	pop    es
  40356c:	push   edi
  40356e:	jmp    0x1c28:0xdc4e988c
  403575:	pop    ebp
  403576:	dec    esp
  403577:	sub    ch,dh
  403579:	inc    edx
  40357a:	jae    0x4035dd
  40357c:	aam    0x53
  40357e:	pop    eax
  40357f:	iret   
  403580:	mov    edi,0xe9c6e255
  403585:	test   al,0xbc
  403587:	inc    eax
  403588:	inc    ecx
  403589:	cmp    eax,0x78f07f02
  40358e:	fs clc 
  403590:	mov    ds:0x3569e6d8,al
  403595:	inc    ebp
  403596:	jnp    0x4035b8
  403598:	jbe    0x40359b
  40359a:	mov    edi,DWORD PTR [ebp+0x3a]
  40359d:	jbe    0x4035ff
  40359f:	sub    BYTE PTR [ecx],0x15
  4035a2:	xor    esp,DWORD PTR ds:0x4e36670e
  4035a8:	add    ch,BYTE PTR [ecx+0x3a4b251e]
  4035ae:	aaa    
  4035af:	jnp    0x403552
  4035b1:	jne    0x403547
  4035b3:	dec    ebp
  4035b4:	imul   ecx,DWORD PTR [eax-0x1aca75ca]
  4035bb:	xor    DWORD PTR [ebp+0x6de24f77],esi
  4035c1:	mov    ebp,0x88355663
  4035c6:	pop    ss
  4035c7:	aam    0xa3
  4035c9:	fisub  DWORD PTR [edx]
  4035cb:	sbb    esi,DWORD PTR [ecx]
  4035cd:	mov    ds:0x161cfb34,eax
  4035d2:	cmc    
  4035d3:	cmp    BYTE PTR [ebp-0x662186bc],al
  4035d9:	jle    0x403571
  4035db:	daa    
  4035dc:	mov    esp,0x90815707
  4035e1:	pop    ebp
  4035e2:	mov    ch,0x9
  4035e4:	ret    
  4035e5:	outs   dx,DWORD PTR ds:[esi]
  4035e6:	sub    DWORD PTR [edx+0x1feceedd],0xffffffb6
  4035ed:	sbb    bl,BYTE PTR ds:0x789335f0
  4035f3:	loopne 0x4035fe
  4035f5:	fcmovb st,st(2)
  4035f7:	fwait
  4035f8:	push   cs
  4035f9:	or     eax,edi
  4035fb:	gs pop ecx
  4035fd:	jecxz  0x4035cc
  4035ff:	lock add DWORD PTR [eax+0x67],eax
  403603:	push   ebp
  403604:	cmp    DWORD PTR [esi],edi
  403606:	ja     0x40360c
  403608:	add    bl,BYTE PTR ds:0x23bca032
  40360e:	(bad)  
  40360f:	push   ss
  403610:	fimul  WORD PTR [eax-0x34e2c8af]
  403617:	dec    eax
  403618:	adc    eax,0x706fa6c1
  40361d:	daa    
  40361e:	mov    dh,BYTE PTR [ebp+0x50]
  403621:	dec    edi
  403622:	aad    0x9f
  403624:	ja     0x4035f1
  403626:	cmp    DWORD PTR ds:0xed7bc9e4,eax
  40362c:	add    ebp,DWORD PTR [ebx]
  40362e:	out    0xa7,al
  403630:	push   ebx
  403631:	shl    DWORD PTR [edx-0x2f9f213f],cl
  403637:	xchg   edx,eax
  403638:	sub    eax,0xdaff4811
  40363d:	es out 0x4d,eax
  403640:	scas   eax,DWORD PTR es:[edi]
  403641:	aam    0xbb
  403643:	or     ebx,DWORD PTR [esi]
  403645:	sti    
  403646:	dec    esp
  403647:	push   esp
  403648:	mov    ?,WORD PTR [ebp+0x47]
  40364b:	ficom  WORD PTR [eax+0x9]
  40364e:	hlt    
  40364f:	xor    eax,0xe85d62d4
  403654:	out    dx,eax
  403655:	pop    es
  403656:	mov    esp,0x978d5f02
  40365b:	dec    ebx
  40365c:	je     0x403638
  40365e:	stos   DWORD PTR es:[edi],eax
  40365f:	call   0x3b54e8b1
  403664:	loopne 0x40361f
  403666:	js     0x40364b
  403668:	push   cs
  403669:	(bad)  
  40366a:	leave  
  40366b:	adc    ah,BYTE PTR [edx+0x15]
  40366e:	mov    dl,0xa6
  403670:	inc    ebp
  403671:	pop    ecx
  403672:	les    edx,FWORD PTR [edx-0x78a09462]
  403678:	add    ebp,DWORD PTR [ebx+0x52]
  40367b:	stos   DWORD PTR es:[edi],eax
  40367c:	hlt    
  40367d:	adc    DWORD PTR [ecx-0x62ac5208],ebp
  403683:	xor    DWORD PTR [ebx-0x63],ecx
  403686:	test   eax,0xf12b3a99
  40368b:	xchg   esi,eax
  40368c:	and    al,0x77
  40368f:	or     cl,bh
  403691:	out    0xf2,eax
  403693:	loopne 0x403690
  403695:	fstp   QWORD PTR [esi]
  403697:	stos   DWORD PTR es:[edi],eax
  403698:	lods   al,BYTE PTR ds:[esi]
  403699:	icebp  
  40369a:	fwait
  40369b:	adc    BYTE PTR [edi],bh
  40369d:	test   al,0x47
  40369f:	push   esp
  4036a0:	xchg   ecx,eax
  4036a1:	mov    bl,0xfe
  4036a3:	pop    edx
  4036a4:	cmp    BYTE PTR [ebx+0x399cc6d5],dh
  4036aa:	xor    dl,BYTE PTR ds:0x157017af
  4036b0:	mov    ss,WORD PTR [ebx+0x4edef2f8]
  4036b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036b7:	call   0x4b42:0x3c9dee5b
  4036be:	sbb    esi,DWORD PTR [edi+0xf]
  4036c1:	push   ds
  4036c2:	hlt    
  4036c3:	push   cs
  4036c4:	sub    DWORD PTR [ebp+0x40c0bad5],0xc9660722
  4036ce:	in     al,0x5a
  4036d0:	sbb    edx,DWORD PTR [ebp+0x69fffe08]
  4036d6:	jae    0x40374e
  4036d8:	mov    al,0x8e
  4036da:	not    bh
  4036dc:	bound  ecx,QWORD PTR [ebx+0x48]
  4036df:	sti    
  4036e0:	nop
  4036e1:	dec    edx
  4036e2:	add    al,0x3
  4036e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036e5:	test   al,0x74
  4036e7:	adc    al,0x2f
  4036e9:	mov    bh,0xd6
  4036eb:	loope  0x4036cf
  4036ed:	dec    edi
  4036ee:	inc    ebx
  4036ef:	retf   0x63bf
  4036f2:	xor    cl,0x43
  4036f5:	push   ss
  4036f6:	nop
  4036f7:	push   edi
  4036f8:	sbb    dl,BYTE PTR [eax]
  4036fa:	or     al,0x6b
  4036fc:	shr    DWORD PTR [edi],cl
  4036fe:	ret    
  4036ff:	sbb    DWORD PTR [ebp+0x7c513d80],esp
  403705:	fild   QWORD PTR [eax]
  403707:	mov    al,ds:0x6b5b75c0
  40370c:	mov    ch,0x5f
  40370e:	call   0x8e9:0x4e64988f
  403715:	fidiv  DWORD PTR [esi-0x53f32d15]
  40371b:	adc    DWORD PTR [esi],esi
  40371d:	xchg   esi,eax
  40371e:	push   es
  40371f:	mov    ch,ah
  403721:	ins    BYTE PTR es:[edi],dx
  403722:	xlat   BYTE PTR ds:[ebx]
  403723:	inc    DWORD PTR [edx]
  403725:	push   0xffffffae
  403727:	and    bh,bl
  403729:	popa   
  40372a:	into   
  40372b:	out    0x30,al
  40372d:	jecxz  0x40376c
  40372f:	adc    DWORD PTR [edx+0x60b1358],ecx
  403735:	aad    0x12
  403737:	pop    eax
  403738:	inc    ebp
  403739:	fprem1 
  40373b:	sbb    edx,esi
  40373d:	jmp    0x19c1:0x29c92cfa
  403744:	add    BYTE PTR [ecx+0x72037c22],dl
  40374a:	fidivr DWORD PTR [eax+0x9fc5ca5]
  403750:	cs das 
  403752:	and    dh,BYTE PTR [ebx+0x5ac43387]
  403758:	push   ebp
  403759:	pop    esi
  40375a:	xor    cl,0x41
  40375d:	cdq    
  40375e:	xor    al,0x35
  403760:	jo     0x40374b
  403762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403763:	popf   
  403764:	sbb    ecx,DWORD PTR [edi+0x15]
  403767:	adc    DWORD PTR [eax-0x391b9972],ebp
  40376d:	popf   
  40376e:	xchg   ebp,eax
  40376f:	aas    
  403770:	sti    
  403771:	inc    ebp
  403772:	(bad)  
  403773:	lods   al,BYTE PTR ds:[esi]
  403774:	int3   
  403775:	pop    ebx
  403776:	pushf  
  403777:	cs (bad) 
  403779:	into   
  40377a:	leave  
  40377b:	popf   
  40377c:	ja     0x403740
  40377e:	add    al,0x2a
  403780:	xor    al,0xc2
  403782:	mov    dh,0x2f
  403784:	jno    0x40378c
  403786:	call   0xee89:0x552961b
  40378d:	jp     0x4037dc
  40378f:	mov    esp,0xc66ae72f
  403794:	das    
  403795:	xlat   BYTE PTR ds:[ebx]
  403796:	addr16 retf 
  403798:	push   esi
  403799:	imul   eax,DWORD PTR [ebx+ebx*1+0x32],0xfffffff0
  40379e:	dec    BYTE PTR [esi]
  4037a0:	push   esp
  4037a1:	sub    al,0x9a
  4037a3:	cli    
  4037a4:	cmp    DWORD PTR [ebx+0x25],edi
  4037a7:	mov    ds:0x79400e27,al
  4037ac:	jo     0x4037d5
  4037ae:	inc    edx
  4037af:	pop    esi
  4037b0:	fldcw  WORD PTR [edx-0x6]
  4037b3:	push   esi
  4037b4:	cmp    al,0x73
  4037b6:	add    BYTE PTR [ebp-0x1c19772e],0x15
  4037bd:	stos   BYTE PTR es:[edi],al
  4037be:	xchg   ebp,eax
  4037bf:	jo     0x403754
  4037c1:	sub    al,0xd4
  4037c3:	icebp  
  4037c4:	clc    
  4037c5:	loop   0x403846
  4037c7:	dec    eax
  4037c8:	inc    eax
  4037c9:	cmp    BYTE PTR [esi-0x469ad755],cl
  4037cf:	bound  ecx,QWORD PTR [esi-0x5]
  4037d2:	dec    esi
  4037d3:	mov    ds:0x22832705,al
  4037d8:	(bad)  
  4037d9:	sbb    al,0x48
  4037db:	fwait
  4037dc:	iret   
  4037dd:	mov    esi,0x9b00979d
  4037e2:	mov    ds:0x91f5903e,eax
  4037e7:	sahf   
  4037e8:	test   ebx,0x764520a7
  4037ee:	add    BYTE PTR [esi+0x48],0x85
  4037f2:	dec    esp
  4037f3:	cmp    eax,DWORD PTR [ebp-0x1f7e5a04]
  4037f9:	jne    0x4037e1
  4037fb:	xchg   esi,eax
  4037fc:	fwait
  4037fd:	mov    esp,0x23a4a6e9
  403802:	pop    edx
  403803:	daa    
  403804:	xor    BYTE PTR [ecx-0x6dab28df],ah
  40380a:	jle    0x4037ca
  40380c:	mov    edi,0xde7a83f
  403811:	cs leave 
  403813:	jle    0x40387e
  403815:	push   ds
  403816:	test   DWORD PTR [esi+ecx*2],esp
  403819:	shl    DWORD PTR [ecx-0x27],0xde
  40381d:	mov    bh,0xf7
  40381f:	sbb    al,0x30
  403821:	xor    eax,0x2aacae41
  403826:	pop    esi
  403827:	sbb    BYTE PTR [esi-0x6b],bl
  40382a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40382b:	sbb    DWORD PTR [ecx-0x45],edi
  40382e:	rcl    BYTE PTR [eax+0x1a4ad3ac],1
  403834:	jge    0x4037e9
  403836:	mov    bl,0x13
  403838:	or     eax,DWORD PTR [edx-0x4728897b]
  40383e:	push   edi
  40383f:	imul   esp,DWORD PTR [edi+0x1c65a4f3],0x95b5bca5
  403849:	(bad)  
  40384b:	cmp    al,0x9c
  40384d:	arpl   dx,bp
  40384f:	inc    esi
  403850:	out    dx,al
  403851:	lock xrelease xchg BYTE PTR [esi+0x768ee8e9],dh
  403859:	iret   
  40385a:	xor    ch,BYTE PTR [edi-0x223c5add]
  403860:	fisubr WORD PTR [ebp+0x35]
  403863:	mov    ah,BYTE PTR [eax-0x34]
  403866:	shl    BYTE PTR [ebx+eiz*8+0x1593c344],1
  40386d:	jb     0x403813
  40386f:	rol    esp,0x5f
  403872:	push   es
  403873:	push   ds
  403874:	jecxz  0x4038b6
  403876:	(bad)  
  403877:	stc    
  403878:	dec    ebx
  403879:	mov    al,0xe2
  40387b:	or     dh,BYTE PTR [ebx+ecx*1]
  40387e:	inc    esi
  40387f:	push   esp
  403880:	repnz not DWORD PTR [edx-0x5c5330ba]
  403887:	test   eax,0xa9c75b47
  40388c:	test   eax,0x36a0785
  403891:	xor    BYTE PTR [eax-0x397e7237],0xb2
  403898:	popa   
  403899:	cli    
  40389a:	cli    
  40389b:	in     al,0xed
  40389d:	add    eax,0xff3fc871
  4038a2:	and    dl,BYTE PTR [ebp-0x169b04a8]
  4038a8:	ins    BYTE PTR es:[edi],dx
  4038a9:	aam    0x14
  4038ab:	add    esi,DWORD PTR [edi-0x64863dee]
  4038b1:	sub    BYTE PTR [ebp+0x6],dh
  4038b4:	(bad)  
  4038b5:	bsr    ebx,edx
  4038b8:	jle    0x4038f5
  4038ba:	and    BYTE PTR ds:0x34b02b4c,bh
  4038c0:	pop    edx
  4038c1:	mov    ecx,0xcf4a022b
  4038c6:	xor    ah,BYTE PTR [eax]
  4038c8:	sub    eax,0x1d6afee3
  4038cd:	std    
  4038ce:	in     al,dx
  4038cf:	cmp    al,0x75
  4038d1:	inc    eax
  4038d2:	retf   0x3943
  4038d5:	inc    ebp
  4038d6:	sti    
  4038d7:	fsubr  DWORD PTR [eax]
  4038d9:	inc    ebp
  4038da:	rsm    
  4038dc:	mov    edx,0xf81cbff9
  4038e1:	div    DWORD PTR [edi-0x39614ad4]
  4038e7:	lds    edx,FWORD PTR [ebp+0x43]
  4038ea:	fdivr  DWORD PTR ds:0xc4cd33af
  4038f0:	aam    0xc
  4038f2:	push   ebp
  4038f3:	in     al,0xb3
  4038f5:	mov    dl,0x59
  4038f7:	aad    0x3d
  4038f9:	jb     0x403952
  4038fb:	scas   al,BYTE PTR es:[edi]
  4038fc:	mov    esp,0xa205127
  403901:	aam    0x50
  403903:	push   esp
  403904:	retf   0x5957
  403907:	cmp    eax,0xe529bc90
  40390c:	jmp    0x4038f9
  40390e:	ja     0x4038d3
  403910:	ret    0xf0de
  403913:	aas    
  403914:	lods   al,BYTE PTR ds:[esi]
  403915:	sbb    al,0x59
  403917:	test   eax,0xd9d41625
  40391c:	jne    0x403934
  40391e:	and    al,0x2b
  403920:	fisttp QWORD PTR [ebp-0x78]
  403923:	jle    0x403966
  403925:	push   0xb25fb108
  40392a:	in     eax,dx
  40392b:	das    
  40392c:	xchg   esi,eax
  40392d:	into   
  40392e:	xchg   ebp,eax
  40392f:	rcl    BYTE PTR [edx+0x4d2bc34f],0xd1
  403936:	and    eax,0xfe965b68
  40393b:	xor    BYTE PTR [ebx+0x2cd8cbe2],0xde
  403942:	fidivr DWORD PTR [ebx+0x23]
  403945:	ficom  WORD PTR [esi+0x50]
  403948:	xchg   ecx,eax
  403949:	add    BYTE PTR [esp+ebp*2-0x73],ch
  40394d:	fyl2xp1 
  40394f:	pop    es
  403950:	dec    eax
  403951:	in     al,dx
  403952:	push   0x7d6e8ed4
  403957:	and    ebx,edi
  403959:	sbb    eax,0xb9c503b0
  40395e:	int3   
  40395f:	mov    fs,WORD PTR [edx]
  403961:	leave  
  403962:	add    eax,0xbb5bf3d5
  403967:	rcl    BYTE PTR [esi+0x114634ea],cl
  40396d:	cli    
  40396e:	cmp    DWORD PTR [edi],edi
  403970:	mov    eax,0x74b2bc25
  403975:	not    dh
  403977:	sub    esi,DWORD PTR [ebx]
  403979:	inc    esi
  40397a:	mov    eax,ds:0x13d92a6d
  40397f:	add    al,dh
  403981:	pop    ebx
  403982:	jnp    0x4039f1
  403984:	nop
  403985:	adc    eax,0xc4fd6b3c
  40398a:	pop    esp
  40398b:	ja     0x4039a8
  40398d:	push   cs
  40398e:	sbb    ebp,0x38
  403991:	hlt    
  403992:	cld    
  403993:	pop    esp
  403994:	lahf   
  403995:	mov    cl,0x36
  403997:	hlt    
  403998:	pushf  
  403999:	cmp    ebp,ebp
  40399b:	arpl   WORD PTR [esi],di
  40399d:	fnstsw WORD PTR [ebp+0x32e22c46]
  4039a3:	xchg   edi,eax
  4039a4:	ja     0x403958
  4039a6:	xor    BYTE PTR es:[esi],dl
  4039a9:	fadd   QWORD PTR [edi]
  4039ab:	pop    ds
  4039ac:	adc    DWORD PTR [ecx+0x3d7c4055],esi
  4039b2:	or     eax,0x5e54bdae
  4039b7:	icebp  
  4039b8:	push   edx
  4039b9:	lahf   
  4039ba:	aam    0xb3
  4039bc:	jmp    0x40393e
  4039be:	or     BYTE PTR [ecx-0x7d80a2a1],dl
  4039c4:	and    bh,BYTE PTR [eax]
  4039c6:	sub    eax,0xdc4c4870
  4039cb:	out    dx,al
  4039cc:	push   eax
  4039cd:	cmp    ebx,ebp
  4039cf:	(bad)  
  4039d0:	inc    ebp
  4039d1:	stc    
  4039d2:	shl    DWORD PTR [eax],cl
  4039d4:	pushf  
  4039d5:	pop    ecx
  4039d6:	imul   esp,esp,0x2a
  4039d9:	in     eax,0x81
  4039db:	ret    0x71a3
  4039de:	push   eax
  4039df:	mov    eax,ds:0xc3d84fce
  4039e4:	pop    esp
  4039e5:	add    bl,BYTE PTR [ebx+0x1]
  4039e8:	repnz cli 
  4039ea:	out    dx,eax
  4039eb:	ror    al,0xdd
  4039ee:	and    cl,BYTE PTR [ebx]
  4039f0:	aam    0x9b
  4039f2:	sub    BYTE PTR [eax],al
  4039f4:	xor    eax,0x6aa8446c
  4039f9:	mov    dh,0xf1
  4039fb:	jns    0x4039a5
  4039fd:	ret    
  4039fe:	test   DWORD PTR [ecx],edi
  403a00:	ficom  WORD PTR [eax-0x57]
  403a03:	dec    edi
  403a04:	out    dx,eax
  403a05:	rcr    BYTE PTR [ecx+0x4c],cl
  403a08:	and    DWORD PTR [ebp+0x2d980c1d],0x6b
  403a0f:	test   al,0xef
  403a11:	pop    ebp
  403a12:	aaa    
  403a13:	cld    
  403a14:	sbb    al,0xe0
  403a16:	push   ecx
  403a17:	add    cl,BYTE PTR [ecx-0x4f93c69d]
  403a1d:	cdq    
  403a1e:	xchg   DWORD PTR [esi],eax
  403a20:	mov    dl,0x43
  403a22:	mov    al,ds:0xd8f855b2
  403a27:	jne    0x403a8f
  403a29:	ret    
  403a2a:	les    esi,FWORD PTR [edi]
  403a2c:	push   0x19
  403a2e:	pop    esi
  403a2f:	fs scas eax,DWORD PTR es:[edi]
  403a31:	lds    ebx,FWORD PTR [esi+0xe2f7ca9]
  403a37:	cli    
  403a38:	(bad)  
  403a39:	in     eax,dx
  403a3a:	scas   al,BYTE PTR es:[edi]
  403a3b:	mov    ebp,edi
  403a3d:	mov    cl,0xe4
  403a3f:	ss ja  0x403a08
  403a42:	mov    ah,BYTE PTR [edx]
  403a44:	adc    dl,cl
  403a46:	stc    
  403a47:	ss sti 
  403a49:	add    BYTE PTR gs:[ebx],dl
  403a4c:	push   ecx
  403a4d:	iret   
  403a4e:	sub    ebp,esi
  403a50:	retf   0xad26
  403a53:	int3   
  403a54:	retf   0xc8fe
  403a57:	xor    DWORD PTR [esi],ebp
  403a59:	mov    al,ds:0x9c6276e6
  403a5e:	call   0x4f:0x64c7edbb
  403a65:	cdq    
  403a66:	mov    edi,fs
  403a68:	sbb    DWORD PTR [edx],0xffffffa9
  403a6b:	xchg   esp,eax
  403a6c:	in     al,dx
  403a6d:	dec    edi
  403a6e:	mov    dh,0xeb
  403a70:	dec    ebp
  403a71:	addr16 xchg ecx,eax
  403a73:	sbb    edx,DWORD PTR [esi]
  403a75:	push   edi
  403a76:	or     eax,0x85909863
  403a7b:	retf   0x49ab
  403a7e:	dec    edi
  403a7f:	fild   QWORD PTR [ebp+0x6f]
  403a82:	aaa    
  403a83:	ror    BYTE PTR [ebx],0xbe
  403a86:	in     al,0x42
  403a88:	mov    edx,0xc19154ee
  403a8d:	dec    ebp
  403a8e:	fstp   QWORD PTR [ebp-0x71dc178d]
  403a94:	das    
  403a95:	repz push ecx
  403a97:	xor    cl,bh
  403a99:	ret    0x745f
  403a9c:	inc    esi
  403a9d:	and    BYTE PTR [ebx-0x4],ch
  403aa0:	fbld   TBYTE PTR [eax+0x19a27eff]
  403aa6:	xchg   esi,eax
  403aa7:	cld    
  403aa8:	outs   dx,BYTE PTR ds:[esi]
  403aa9:	mov    eax,ds:0xd4f7526c
  403aae:	jne    0x403a9e
  403ab0:	mov    esp,0xa98624b7
  403ab5:	js     0x403a92
  403ab7:	jo     0x403a4a
  403ab9:	or     al,0xf1
  403abb:	and    BYTE PTR [esi+ecx*4-0x46d1a38e],ah
  403ac2:	test   DWORD PTR [ecx],esi
  403ac4:	jp     0x403a65
  403ac6:	cmp    ecx,DWORD PTR [eax]
  403ac8:	mov    esi,0x13760565
  403acd:	and    al,0xe5
  403acf:	ins    BYTE PTR es:[edi],dx
  403ad0:	and    DWORD PTR [edx+0x4d4644b7],ebx
  403ad6:	pop    ss
  403ad7:	xchg   ebp,eax
  403ad8:	test   eax,0xf17310ce
  403add:	imul   ebp,DWORD PTR [eax],0xffffffc1
  403ae0:	fimul  WORD PTR [eax-0x2e]
  403ae3:	outs   dx,DWORD PTR ds:[esi]
  403ae4:	or     al,0xac
  403ae6:	sti    
  403ae7:	neg    BYTE PTR [ecx-0x458574ad]
  403aed:	arpl   WORD PTR [ebp+ebx*2+0x6c020d04],di
  403af4:	ds xor ch,BYTE PTR fs:[edx+0x279672d3]
  403afc:	inc    ebp
  403afd:	data16 adc al,0x68
  403b00:	ins    DWORD PTR es:[edi],dx
  403b01:	enter  0x5a40,0x30
  403b05:	pop    eax
  403b06:	jge    0x403b5d
  403b08:	popa   
  403b09:	ss add bl,dh
  403b0c:	sti    
  403b0d:	ret    
  403b0e:	mov    edx,0xbd6cf0b8
  403b13:	sub    al,0xb
  403b15:	mov    bl,0xdc
  403b18:	rcr    BYTE PTR [edi+0x5bf6175f],cl
  403b1e:	inc    esp
  403b1f:	shl    BYTE PTR [esi+eax*8+0x34ceabe9],1
  403b26:	and    BYTE PTR [ebx-0x43],ch
  403b29:	shl    esi,cl
  403b2b:	mov    al,0x9b
  403b2d:	push   eax
  403b2e:	sbb    eax,0x6e4b6cc6
  403b33:	xor    BYTE PTR [ebp+0x3b6f4dda],ah
  403b39:	jge    0x403b45
  403b3b:	ds jp  0x403af7
  403b3e:	fdiv   DWORD PTR ds:0x40dc85b2
  403b44:	pop    esp
  403b45:	adc    al,al
  403b47:	dec    ebp
  403b48:	cmp    ecx,DWORD PTR [esi+edx*8-0x7ef33603]
  403b4f:	pop    esi
  403b50:	jae    0x403b05
  403b52:	(bad)  
  403b53:	aas    
  403b54:	cmp    edi,ebp
  403b56:	cdq    
  403b57:	mov    al,ds:0x441467f1
  403b5c:	adc    bh,dl
  403b5e:	sbb    eax,0x99942f29
  403b63:	ins    BYTE PTR es:[edi],dx
  403b64:	and    eax,0xbe14632
  403b69:	aam    0x2e
  403b6b:	push   cs
  403b6c:	ret    0x7297
  403b6f:	pushf  
  403b70:	adc    al,0x4e
  403b72:	mov    ebx,0xf7c02ccc
  403b77:	mov    eax,ds:0xa8057375
  403b7c:	ins    DWORD PTR es:[edi],dx
  403b7d:	loop   0x403b9c
  403b7f:	lds    esi,FWORD PTR [edx]
  403b81:	inc    ebx
  403b82:	fs push ds
  403b84:	or     al,0x90
  403b86:	arpl   WORD PTR [ebx-0x46a77da4],sp
  403b8c:	or     eax,0x593994bc
  403b91:	outs   dx,BYTE PTR ds:[esi]
  403b92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b93:	cdq    
  403b94:	or     bl,BYTE PTR [ebx+0x71a5ec79]
  403b9a:	inc    esp
  403b9b:	(bad)  
  403b9c:	dec    DWORD PTR [ecx]
  403b9e:	push   ds
  403b9f:	daa    
  403ba0:	cmp    al,0xae
  403ba2:	sbb    BYTE PTR [ecx-0x35],ah
  403ba5:	adc    cl,BYTE PTR [esp+eax*8+0x7efd735a]
  403bac:	js     0x403b5e
  403bae:	xchg   esp,eax
  403baf:	push   ebp
  403bb0:	xor    bh,BYTE PTR [edi-0xf]
  403bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bb4:	xor    DWORD PTR [esi-0x45b84fbf],ebp
  403bba:	lahf   
  403bbb:	add    al,0xdf
  403bbd:	inc    edi
  403bbe:	adc    eax,0xb693fe42
  403bc3:	push   0x21b06045
  403bc8:	das    
  403bc9:	icebp  
  403bca:	test   eax,0x4c5f635d
  403bcf:	dec    edx
  403bd0:	cmp    esi,DWORD PTR ss:[ebp+0x78]
  403bd4:	arpl   WORD PTR [ecx+ecx*8],si
  403bd7:	jns    0x403bf7
  403bd9:	lahf   
  403bda:	fstp   QWORD PTR [ebx-0x6d]
  403bdd:	out    0xea,eax
  403bdf:	lods   eax,DWORD PTR ds:[esi]
  403be0:	dec    esp
  403be2:	sub    eax,DWORD PTR [edi]
  403be4:	jae    0x403bc5
  403be6:	out    dx,al
  403be7:	sbb    eax,0xdb414852
  403bec:	or     al,al
  403bee:	sbb    DWORD PTR [eax-0x4351af7d],0x43
  403bf5:	add    cl,bl
  403bf7:	lods   al,BYTE PTR ds:[esi]
  403bf8:	jl     0x403c58
  403bfa:	jle    0x403c23
  403bfc:	mov    esp,0x3d7c2528
  403c01:	add    DWORD PTR [ebx],esi
  403c03:	ins    BYTE PTR es:[edi],dx
  403c04:	inc    esi
  403c05:	shl    ecx,1
  403c07:	bound  ebx,QWORD PTR [ebp+0x4fa101fb]
  403c0d:	push   es
  403c0e:	sahf   
  403c0f:	adc    ebx,DWORD PTR [ecx]
  403c11:	add    eax,0x897a3875
  403c16:	hlt    
  403c17:	cvtpi2ps xmm1,QWORD PTR [ebx+eax*2-0x1b]
  403c1c:	(bad)  
  403c1d:	into   
  403c1e:	cmp    dl,BYTE PTR [edi-0x219a2ab1]
  403c24:	add    ah,BYTE PTR [edx]
  403c26:	stos   BYTE PTR es:[edi],al
  403c27:	jmp    0x78c13977
  403c2c:	dec    ecx
  403c2d:	cmp    al,0xb6
  403c2f:	cwde   
  403c30:	sub    DWORD PTR [edi+eax*8],ecx
  403c33:	xchg   ecx,eax
  403c34:	dec    eax
  403c35:	cmp    DWORD PTR [edi+0x7ab62b0a],0x4ca85063
  403c3f:	(bad)  
  403c40:	das    
  403c41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c42:	lods   eax,DWORD PTR ds:[esi]
  403c43:	bound  edi,QWORD PTR [esi-0x6]
  403c46:	add    eax,0xf5e08035
  403c4b:	push   eax
  403c4c:	push   edx
  403c4d:	cmp    eax,0xd0a03502
  403c52:	pop    esi
  403c53:	jb     0x403c1f
  403c55:	jb     0x403c9a
  403c57:	je     0x403be7
  403c59:	sti    
  403c5a:	and    BYTE PTR [edi],bl
  403c5c:	sbb    dl,0xc9
  403c5f:	and    BYTE PTR [edx+0x7f63a1a2],dh
  403c65:	movups xmm1,XMMWORD PTR [eax-0x231387dc]
  403c6c:	mov    ds:0xe685142f,eax
  403c71:	mov    DWORD PTR [ebp-0x10a8be07],edi
  403c77:	inc    ebp
  403c78:	(bad)  
  403c79:	push   edx
  403c7a:	fmul   QWORD PTR [edi+0x12508d05]
  403c80:	loop   0x403cda
  403c82:	xchg   dh,cl
  403c84:	repz adc al,0xbe
  403c87:	icebp  
  403c88:	mov    ?,ebx
  403c8a:	pop    edx
  403c8b:	or     dl,bl
  403c8d:	dec    esi
  403c8e:	dec    ebp
  403c8f:	and    dl,ch
  403c91:	daa    
  403c92:	pusha  
  403c93:	out    dx,al
  403c94:	dec    esp
  403c95:	(bad)  
  403c96:	xchg   ecx,eax
  403c97:	mov    al,0xc1
  403c99:	dec    ebx
  403c9a:	clc    
  403c9b:	or     edx,eax
  403c9d:	xchg   esp,eax
  403c9e:	jns    0x403c69
  403ca0:	pop    ecx
  403ca1:	pop    ss
  403ca2:	push   ss
  403ca3:	inc    esi
  403ca4:	mov    dl,0x85
  403ca6:	jge    0x403cd0
  403ca8:	mov    bh,0x1b
  403caa:	mov    al,0xfe
  403cac:	lock aas 
  403cae:	or     DWORD PTR [esi-0x760c76d7],edi
  403cb4:	clc    
  403cb5:	cdq    
  403cb6:	or     DWORD PTR [eax],esp
  403cb8:	sti    
  403cb9:	dec    ecx
  403cba:	das    
  403cbb:	out    dx,al
  403cbc:	outs   dx,BYTE PTR ds:[esi]
  403cbd:	push   ebx
  403cbe:	xchg   esi,eax
  403cbf:	dec    edx
  403cc0:	sahf   
  403cc1:	jae    0x403ca2
  403cc3:	ins    BYTE PTR es:[edi],dx
  403cc4:	push   edi
  403cc5:	mov    ch,0x83
  403cc7:	dec    ebx
  403cc8:	add    cl,dl
  403cca:	inc    ebx
  403ccb:	inc    sp
  403ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cce:	inc    DWORD PTR [ebx]
  403cd0:	inc    ebp
  403cd1:	in     eax,dx
  403cd2:	out    dx,al
  403cd3:	(bad)  
  403cd4:	into   
  403cd5:	stc    
  403cd6:	fistp  WORD PTR [esi+0x5e]
  403cd9:	test   al,0x1b
  403cdb:	xor    ebx,DWORD PTR [ebp+0x72]
  403cde:	mov    cl,0xc2
  403ce0:	sbb    DWORD PTR [edx-0x2],ebx
  403ce3:	out    0xfe,al
  403ce5:	cmp    dl,ah
  403ce7:	inc    ecx
  403ce8:	push   ecx
  403ce9:	dec    edi
  403cea:	rcl    DWORD PTR [ebx-0x4dfbc7d3],1
  403cf0:	ror    BYTE PTR [ebx+ecx*1+0x2e],1
  403cf4:	ret    
  403cf5:	push   eax
  403cf6:	pop    ebx
  403cf7:	fst    DWORD PTR [ecx+0x1482de26]
  403cfd:	add    dh,BYTE PTR [ebx+0x247ec12a]
  403d03:	jns    0x403d1c
  403d05:	mov    ecx,0xd1ec25b7
  403d0a:	test   eax,edx
  403d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d0d:	int3   
  403d0e:	sbb    esi,ebx
  403d10:	sub    al,0x4
  403d12:	xchg   ebx,eax
  403d13:	adc    BYTE PTR [esi+0x79],0x9f
  403d17:	loop   0x403cca
  403d19:	jmp    0xd17737ef
  403d1e:	(bad)  
  403d1f:	call   0x5d9bd6aa
  403d24:	sbb    eax,0x3853e688
  403d29:	mov    ecx,DWORD PTR [esp+eiz*4]
  403d2c:	mov    eax,0x32151a6b
  403d31:	lods   eax,DWORD PTR ds:[esi]
  403d32:	jbe    0x403cf7
  403d34:	and    eax,0xdc22c5f6
  403d39:	xchg   edi,eax
  403d3a:	and    bh,BYTE PTR [eax]
  403d3c:	jge    0x403d75
  403d3e:	adc    dh,BYTE PTR [ecx-0x50]
  403d41:	mov    ebx,DWORD PTR [esi]
  403d43:	(bad)  
  403d44:	(bad)  
  403d46:	adc    eax,0x57fa17e5
  403d4b:	pushf  
  403d4c:	je     0x403daf
  403d4e:	cli    
  403d4f:	pop    ds
  403d50:	int3   
  403d51:	mov    dh,0x8a
  403d53:	(bad)  
  403d54:	std    
  403d55:	adc    bl,ch
  403d57:	add    eax,DWORD PTR [eax+eax*1]
  403d5a:	sub    BYTE PTR [edi+0x7d],ah
  403d5d:	inc    edi
  403d5e:	test   BYTE PTR [ecx+0x69af303],bh
  403d64:	push   ebp
  403d65:	or     DWORD PTR [edi-0x67],ebp
  403d68:	fdivr  QWORD PTR [ebx]
  403d6a:	test   BYTE PTR [edi+0x1fe174a4],dh
  403d70:	imul   eax,DWORD PTR [edi],0x48b67f82
  403d76:	les    esp,FWORD PTR [ecx+0x2fc05cf6]
  403d7c:	(bad)  
  403d7d:	and    ebp,DWORD PTR ds:0xde82975b
  403d83:	loopne 0x403de0
  403d85:	ja     0x403de3
  403d87:	xlat   BYTE PTR ds:[ebx]
  403d88:	xor    DWORD PTR [ecx+0x3],esi
  403d8b:	imul   ecx,DWORD PTR [esp+ebp*8+0x2dc1ab9d],0x38
  403d93:	pop    edi
  403d94:	add    esp,DWORD PTR [edx-0x42]
  403d97:	mov    eax,0x823592af
  403d9c:	idiv   BYTE PTR [edi-0x66]
  403d9f:	fiadd  DWORD PTR [edi]
  403da1:	out    0x5a,eax
  403da3:	xlat   BYTE PTR ds:[ebx]
  403da4:	mov    dh,0x93
  403da6:	and    eax,0x25510fb8
  403dab:	adc    BYTE PTR [esi+eiz*8+0x23],0xa7
  403db0:	add    esi,0x26efe946
  403db6:	iret   
  403db7:	daa    
  403db8:	stos   DWORD PTR es:[edi],eax
  403db9:	(bad)  
  403dba:	fimul  WORD PTR [ebx+0x46]
  403dbd:	or     BYTE PTR [eax],dl
  403dbf:	cdq    
  403dc0:	icebp  
  403dc1:	mov    bh,0x91
  403dc3:	fdivrp st(6),st
  403dc5:	int3   
  403dc6:	aam    0xb5
  403dc8:	jg     0x403d9a
  403dca:	test   al,0xf8
  403dcc:	cmc    
  403dcd:	les    edi,FWORD PTR ds:0xa78e5404
  403dd3:	scas   al,BYTE PTR es:[edi]
  403dd4:	div    BYTE PTR [ebx]
  403dd6:	lahf   
  403dd7:	cli    
  403dd8:	(bad)  
  403dd9:	xlat   BYTE PTR ds:[ebx]
  403dda:	fcmovnu st,st(1)
  403ddc:	or     al,bl
  403dde:	in     eax,dx
  403ddf:	ja     0x403dbb
  403de1:	cmp    BYTE PTR [edi-0xb],cl
  403de4:	jbe    0x403df2
  403de6:	dec    esp
  403de7:	std    
  403de8:	popa   
  403de9:	(bad)  
  403dea:	popa   
  403deb:	cwde   
  403dec:	jecxz  0x403de2
  403dee:	jp     0x403e07
  403df0:	dec    edi
  403df1:	push   ebx
  403df2:	mov    eax,ds:0xcdf8dc14
  403df7:	loopne 0x403e60
  403df9:	loopne 0x403e12
  403dfb:	jmp    0x403df7
  403dfd:	mov    esp,0xff6845a2
  403e02:	and    DWORD PTR [ebx-0x7a],edx
  403e05:	lods   eax,DWORD PTR ds:[esi]
  403e06:	bound  ebx,QWORD PTR [ecx-0x31d5eb97]
  403e0c:	or     BYTE PTR [ebx],bh
  403e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e10:	xor    ch,BYTE PTR [edi-0x6f1541d3]
  403e16:	cmp    DWORD PTR [eax],ecx
  403e18:	pop    ebx
  403e19:	jbe    0x403e54
  403e1b:	in     al,dx
  403e1c:	dec    ecx
  403e1d:	lock aam 0xaf
  403e20:	pop    esi
  403e21:	popa   
  403e22:	mul    DWORD PTR [edx-0x5ebe9699]
  403e28:	xchg   BYTE PTR [esi-0x3c],cl
  403e2b:	sub    al,0x3b
  403e2d:	sbb    esp,esi
  403e2f:	push   edi
  403e30:	xor    edx,edi
  403e32:	mov    bh,0x7f
  403e34:	cmp    eax,0xc5749cc4
  403e39:	outs   dx,DWORD PTR ds:[esi]
  403e3a:	or     eax,0x23a0d86a
  403e3f:	test   al,0x89
  403e41:	cli    
  403e42:	sahf   
  403e43:	jge    0x403de0
  403e45:	or     al,0xce
  403e47:	dec    ecx
  403e48:	in     eax,0xff
  403e4a:	push   ds
  403e4b:	repz ja 0x403eca
  403e4e:	jns    0x403e75
  403e50:	lds    edi,FWORD PTR [esi]
  403e52:	dec    eax
  403e53:	fcmovne st,st(5)
  403e55:	cmp    al,0x35
  403e57:	or     eax,0xd7e93ec2
  403e5c:	data16 aaa 
  403e5e:	stc    
  403e5f:	and    BYTE PTR [edi-0x56783e2],dh
  403e65:	ins    DWORD PTR es:[edi],dx
  403e66:	dec    ecx
  403e67:	cmp    DWORD PTR [ebx-0x321901cd],0x63
  403e6e:	or     BYTE PTR [esi+0x2799b66b],cl
  403e74:	outs   dx,BYTE PTR ds:[esi]
  403e75:	aad    0xa7
  403e77:	inc    edx
  403e78:	hlt    
  403e79:	inc    eax
  403e7a:	imul   edi,DWORD PTR fs:[ecx-0x945530b],0xc01277c5
  403e85:	scas   eax,DWORD PTR es:[edi]
  403e86:	out    0xe2,eax
  403e88:	pushf  
  403e89:	out    0xbf,eax
  403e8b:	sti    
  403e8c:	fwait
  403e8d:	repnz cmp eax,0xd8409f57
  403e93:	jne    0x403e73
  403e95:	imul   ebx,DWORD PTR [ecx],0x254ae637
  403e9b:	jg     0x403f1a
  403e9d:	dec    edi
  403e9e:	call   0x86dc:0x725f79b9
  403ea5:	mov    dl,BYTE PTR [ebp-0x7e]
  403ea8:	enter  0x73ac,0xd2
  403eac:	and    ecx,ecx
  403eae:	or     eax,0xcf5c05d1
  403eb3:	fwait
  403eb4:	or     eax,0x76228e34
  403eb9:	pop    ss
  403eba:	push   ds
  403ebb:	cmp    eax,0xad3a6d77
  403ec0:	xchg   DWORD PTR [ecx+0x6bd24f82],ecx
  403ec6:	in     eax,dx
  403ec7:	ret    
  403ec8:	cmp    DWORD PTR [ecx-0x68fe2f4e],edx
  403ece:	fld    QWORD PTR [esi-0x14]
  403ed1:	stc    
  403ed2:	fs jne 0x403ebe
  403ed5:	pop    ss
  403ed6:	jno    0x403ef4
  403ed8:	push   ds
  403ed9:	repz xchg esp,eax
  403edb:	jg     0x403ee4
  403edd:	mov    fs,esp
  403edf:	(bad)  
  403ee0:	push   esi
  403ee1:	js     0x403f28
  403ee3:	xor    edi,esi
  403ee5:	daa    
  403ee6:	enter  0x7758,0xf3
  403eea:	call   0x8eae:0x5fa4db17
  403ef1:	fidiv  DWORD PTR [ecx+0x49]
  403ef4:	jmp    0x403ec1
  403ef6:	mov    al,ds:0xfb8da432
  403efb:	es mov bh,0x11
  403efe:	iret   
  403eff:	mov    cl,BYTE PTR [edx+0x776d10f2]
  403f05:	pop    edi
  403f06:	xchg   esi,eax
  403f07:	sti    
  403f08:	add    dl,dl
  403f0a:	repnz jmp 0x6562:0xb4fbd10b
  403f12:	inc    edx
  403f13:	xchg   edi,eax
  403f14:	mov    eax,ds:0xee9df4aa
  403f19:	cdq    
  403f1a:	mov    esi,ebx
  403f1c:	inc    eax
  403f1d:	fs aad 0xdb
  403f20:	sbb    eax,0xf3408042
  403f25:	xchg   ecx,eax
  403f26:	out    dx,al
  403f27:	or     eax,DWORD PTR [esi]
  403f29:	pop    edx
  403f2a:	xchg   edx,eax
  403f2b:	ffree  st(4)
  403f2d:	pop    eax
  403f2e:	lods   eax,DWORD PTR ds:[esi]
  403f2f:	pop    esi
  403f30:	bound  ebp,QWORD PTR [edi+ebx*1+0x79]
  403f34:	stos   DWORD PTR es:[edi],eax
  403f35:	les    ebp,FWORD PTR ds:0xd4fec019
  403f3b:	and    BYTE PTR [edx-0x79],0x9b
  403f3f:	stos   BYTE PTR es:[edi],al
  403f40:	mov    edi,0xaca71583
  403f45:	out    0x9f,al
  403f47:	rol    DWORD PTR [edx],0x96
  403f4a:	jns    0x403fc5
  403f4c:	ja     0x403ee6
  403f4e:	mov    ah,0x7d
  403f50:	xor    ebx,DWORD PTR ds:0x782ca6c4
  403f56:	pop    es
  403f57:	or     bh,0xdf
  403f5a:	ss inc edx
  403f5c:	jecxz  0x403fcc
  403f5e:	add    DWORD PTR [edi-0x60],ebx
  403f61:	stos   DWORD PTR es:[edi],eax
  403f62:	xor    BYTE PTR [edx-0x20],0x77
  403f66:	inc    ecx
  403f67:	jae    0x403fb1
  403f69:	jne    0x403f3c
  403f6b:	sahf   
  403f6c:	sbb    bh,BYTE PTR [esi-0x61]
  403f6f:	das    
  403f70:	mov    ch,0xdf
  403f72:	ret    
  403f73:	in     eax,dx
  403f74:	add    eax,0xfe714046
  403f79:	je     0x403f39
  403f7b:	inc    esi
  403f7c:	and    al,0x71
  403f7e:	or     eax,0xbf9ded57
  403f83:	mov    ebp,0x71e3114a
  403f88:	daa    
  403f89:	mul    DWORD PTR [esi+ecx*1+0x2c]
  403f8d:	cmc    
  403f8e:	jno    0x403f87
  403f90:	xor    DWORD PTR [esi-0x681dce44],0xffffff99
  403f97:	ja     0x403f33
  403f99:	not    DWORD PTR [ebx-0x14]
  403f9c:	ds jnp 0xc68e9266
  403fa3:	adc    al,0x4d
  403fa5:	fwait
  403fa6:	xchg   esp,eax
  403fa7:	retw   
  403fa9:	test   ebx,ebx
  403fab:	push   ss
  403fac:	mov    ah,0x6f
  403fae:	sbb    edi,edx
  403fb0:	(bad)  
  403fb1:	jl     0x403f93
  403fb3:	ret    
  403fb4:	repnz popa 
  403fb6:	mov    ?,WORD PTR [edx+esi*1-0x74]
  403fba:	sbb    al,0xaf
  403fbc:	sub    ecx,DWORD PTR [ebp+0x5e]
  403fbf:	dec    ebp
  403fc0:	or     DWORD PTR [ebx],eax
  403fc2:	push   esp
  403fc3:	fist   WORD PTR ds:[edx]
  403fc6:	arpl   WORD PTR [esi],dx
  403fc8:	and    ebp,ebx
  403fca:	popf   
  403fcb:	retf   
  403fcc:	cwde   
  403fcd:	jne    0x403f6b
  403fcf:	push   cs
  403fd0:	retf   0xa511
  403fd3:	jl     0x403fed
  403fd5:	js     0x403fd4
  403fd7:	xor    al,0xf
  403fd9:	mov    ecx,0x6681c1bd
  403fde:	cld    
  403fdf:	pushf  
  403fe0:	or     ah,BYTE PTR [edx]
  403fe2:	jne    0x403fa3
  403fe4:	push   cs
  403fe5:	xlat   BYTE PTR ds:[bx]
  403fe7:	sbb    ebp,DWORD PTR [ebx+0x76]
  403fea:	jae    0x403fe4
  403fec:	push   ebp
  403fed:	mov    al,ds:0xcc046c5
  403ff2:	shl    DWORD PTR [ecx+ecx*2-0x5a085ca2],0x20
  403ffa:	add    BYTE PTR [ebx],0x2b
  403ffd:	scas   al,BYTE PTR es:[edi]
  403ffe:	and    al,0x33
  404000:	stos   DWORD PTR es:[edi],eax
  404001:	mov    bl,0xfd
  404003:	and    bl,cl
  404005:	lahf   
  404006:	mov    cl,0x95
  404008:	fistp  WORD PTR [edx-0x52]
  40400b:	mov    eax,ds:0xad9df73
  404010:	cmp    eax,0xbf881a2
  404015:	mov    eax,0x1fa7c871
  40401a:	jp     0x403ffc
  40401c:	add    BYTE PTR [ecx+0x73],al
  40401f:	inc    eax
  404020:	xchg   edi,eax
  404021:	jo     0x403fc8
  404023:	and    al,0x22
  404025:	fwait
  404026:	sub    ebx,DWORD PTR [ebx]
  404028:	(bad)  
  404029:	rol    BYTE PTR [edx-0x78],0x63
  40402d:	mov    ds:0xd11bf261,al
  404032:	(bad)  
  404033:	jnp    0x4040aa
  404035:	pop    DWORD PTR [eax-0x11]
  404038:	xchg   esp,eax
  404039:	(bad)  
  40403b:	fadd   st,st(3)
  40403d:	xchg   ebx,eax
  40403e:	cmp    eax,0x71acacd9
  404043:	aas    
  404044:	pop    ds
  404045:	xor    DWORD PTR [esi*4+0x7656c4f7],0xffffffea
  40404d:	xchg   esp,eax
  40404e:	push   esp
  40404f:	rcl    DWORD PTR [ecx+esi*1-0x341e6828],1
  404056:	into   
  404057:	ret    0x9b72
  40405a:	shl    DWORD PTR [ebx],1
  40405c:	sub    BYTE PTR ds:0xd458fb33,ch
  404062:	pusha  
  404063:	in     al,0xe5
  404065:	loopne 0x4040c4
  404067:	cmp    dh,bh
  404069:	or     dh,al
  40406b:	jmp    0xeb84:0xec402061
  404072:	es inc edi
  404074:	add    eax,0x7656c2ec
  404079:	jmp    0xbc6:0xe047c384
  404080:	push   cs
  404081:	or     esi,DWORD PTR ds:0xfdf9886b
  404087:	jae    0x4040c7
  404089:	gs in  al,0xe
  40408c:	mov    ecx,0xb59c6857
  404091:	inc    ecx
  404092:	(bad)  
  404093:	xor    DWORD PTR [ebx-0x300fdce4],ebx
  404099:	out    0xa5,eax
  40409b:	dec    eax
  40409c:	mov    ecx,edi
  40409e:	push   es
  40409f:	pop    eax
  4040a0:	dec    ebx
  4040a1:	sahf   
  4040a2:	mov    eax,ds:0xeda4bf00
  4040a7:	mov    al,ds:0xb4e0dd70
  4040ac:	pop    ss
  4040ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040ae:	add    esi,DWORD PTR [edx+esi*1]
  4040b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040b2:	pop    ebp
  4040b3:	cwde   
  4040b4:	in     al,0x3f
  4040b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040b7:	enter  0x497b,0xf3
  4040bb:	ss stos DWORD PTR es:[edi],eax
  4040bd:	mov    esi,0x308b7f6b
  4040c2:	xchg   esi,eax
  4040c3:	loop   0x4040d9
  4040c5:	jmp    0x5cd5c89b
  4040ca:	pop    es
  4040cb:	data16 loope 0x4040ec
  4040ce:	mov    ah,0x29
  4040d0:	inc    eax
  4040d1:	sbb    edx,DWORD PTR [edx]
  4040d3:	outs   dx,DWORD PTR ds:[esi]
  4040d4:	push   es
  4040d5:	in     al,0x2a
  4040d7:	loope  0x4040ef
  4040d9:	aam    0xbe
  4040db:	jl     0x404111
  4040dd:	pop    ebx
  4040de:	dec    ebp
  4040df:	shl    DWORD PTR [eax+eax*2-0x5e9f2f17],0x16
  4040e7:	xchg   ecx,eax
  4040e8:	jne    0x404119
  4040ea:	and    BYTE PTR [edx],0xa7
  4040ed:	mov    eax,ds:0xb6d9d701
  4040f2:	adc    BYTE PTR es:[esi+edx*1],dl
  4040f6:	and    DWORD PTR [ecx],ebx
  4040f8:	xor    ebx,DWORD PTR [ebx+0x17]
  4040fb:	cmp    bh,dl
  4040fd:	mov    ebp,0x4492adf5
  404102:	jecxz  0x4040b1
  404104:	pop    esp
  404105:	xchg   ebp,eax
  404106:	cwde   
  404107:	push   es
  404108:	dec    ecx
  404109:	sub    al,0xcc
  40410b:	mov    ebx,0x65c24104
  404110:	cld    
  404111:	mov    ah,0x3b
  404113:	add    ecx,edx
  404115:	inc    edx
  404116:	mov    dl,bl
  404118:	ja     0x40412d
  40411a:	gs (bad) 
  40411c:	jmp    0x4040fc
  40411e:	xchg   edi,eax
  40411f:	mov    es,WORD PTR [esi]
  404121:	test   BYTE PTR [ecx],ch
  404123:	adc    DWORD PTR [edx+0x5],esi
  404126:	jbe    0x404124
  404128:	fwait
  404129:	lds    eax,FWORD PTR [ecx-0x2ce59469]
  40412f:	(bad)  
  404130:	addr16 sbb esi,eax
  404133:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404134:	ret    0x5784
  404137:	cmp    ebx,DWORD PTR [esi-0xcdcebad]
  40413d:	push   edx
  40413e:	(bad)  [ecx]
  404140:	in     eax,dx
  404141:	clc    
  404142:	pop    ss
  404143:	hlt    
  404144:	pop    ebx
  404145:	ret    0x8add
  404148:	or     DWORD PTR ds:0x81d3313d,eax
  40414e:	pop    eax
  40414f:	div    DWORD PTR [ebx]
  404151:	cdq    
  404152:	jno    0x4040db
  404154:	out    dx,al
  404155:	mov    al,0xa1
  404157:	not    DWORD PTR [ecx]
  404159:	mov    esp,ecx
  40415b:	vpaddw xmm4,xmm0,XMMWORD PTR [edi-0x41492321]
  404163:	xchg   esp,eax
  404164:	repz lock fucompp 
  404168:	test   cl,bh
  40416a:	fist   WORD PTR [ebx+0x3229bccd]
  404170:	lods   al,BYTE PTR ds:[esi]
  404171:	cmp    ebx,DWORD PTR [eax]
  404173:	mov    cl,0x53
  404175:	and    eax,0x4165030f
  40417a:	rcl    DWORD PTR [eax-0x1f4a96aa],cl
  404180:	(bad)  
  404181:	int3   
  404182:	out    0xac,al
  404184:	jb     0x4041de
  404186:	xchg   DWORD PTR [ecx+0x21],ecx
  404189:	icebp  
  40418a:	dec    edx
  40418b:	test   eax,0x6bb756b
  404190:	push   ebp
  404191:	cmp    DWORD PTR [ebp+0x528d9592],ebx
  404197:	sub    eax,0xd83a5e4d
  40419c:	add    al,0xd6
  40419e:	mov    ebx,0x19c5e18a
  4041a3:	test   al,0x2d
  4041a5:	es fwait
  4041a7:	dec    ecx
  4041a8:	mov    ah,0x9d
  4041aa:	sub    eax,0x539f997f
  4041af:	and    eax,0xce711f93
  4041b4:	mov    al,ds:0xcd0780bb
  4041b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041ba:	push   ss
  4041bb:	arpl   WORD PTR [esi+edx*8],ax
  4041be:	cmp    BYTE PTR [edx+0x27],al
  4041c1:	mov    ebx,0xe6497b8d
  4041c6:	lock bnd jbe 0x40421e
  4041ca:	fidivr DWORD PTR [ebp+0x10630e43]
  4041d0:	sbb    eax,eax
  4041d2:	push   eax
  4041d3:	add    al,0x83
  4041d5:	fist   DWORD PTR [ebx+0x79fdea92]
  4041db:	pop    ss
  4041dc:	sub    DWORD PTR [ecx],0xc5df279e
  4041e2:	repnz stos BYTE PTR es:[edi],al
  4041e4:	or     al,0x56
  4041e6:	call   0xdeb6ad0b
  4041eb:	xor    BYTE PTR [edx+0x3d69009d],cl
  4041f1:	dec    edi
  4041f2:	lods   eax,DWORD PTR ds:[esi]
  4041f3:	retf   
  4041f4:	idiv   bh
  4041f6:	and    eax,0x1a20080c
  4041fb:	mov    bl,0x4c
  4041fd:	stc    
  4041fe:	inc    ebp
  4041ff:	dec    ebp
  404200:	bnd jb 0x404267
  404203:	fs sub eax,0x83e01d63
  404209:	repnz (bad) 
  40420b:	mov    ch,0x2b
  40420d:	ret    
  40420e:	cmp    al,0x5a
  404210:	add    DWORD PTR [ebp+0x2f],0xa1c00cb5
  404217:	cmp    esi,edi
  404219:	sahf   
  40421a:	mov    ch,bh
  40421c:	stos   DWORD PTR es:[edi],eax
  40421d:	cmp    al,0x64
  40421f:	pop    ecx
  404220:	and    al,0xe9
  404222:	push   ecx
  404223:	enter  0x9ec,0xde
  404227:	dec    ebp
  404228:	cmp    dl,cl
  40422a:	or     DWORD PTR [ecx],esi
  40422c:	jmp    0xbeaaea2d
  404231:	push   esi
  404232:	sub    esi,DWORD PTR [eax]
  404234:	rcr    eax,cl
  404236:	pop    edi
  404237:	or     BYTE PTR [edi+eax*1-0x3d174381],dl
  40423e:	pop    ebp
  40423f:	mov    ch,ah
  404241:	mov    BYTE PTR [edi],al
  404243:	xchg   DWORD PTR [ebx+0x4db1dacd],ebp
  404249:	sbb    ebp,ebp
  40424b:	jne    0x4041e8
  40424d:	(bad)  
  40424f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404250:	inc    esp
  404251:	pushf  
  404252:	sbb    dh,bh
  404254:	cld    
  404255:	rol    BYTE PTR [edx+0x18c7146a],cl
  40425b:	fdiv   QWORD PTR [esi-0x742457c0]
  404261:	in     al,dx
  404262:	adc    edi,0x5aa240f1
  404268:	scas   eax,DWORD PTR es:[edi]
  404269:	push   ds
  40426a:	mov    esi,0xe990c9cc
  40426f:	sar    BYTE PTR [esi],0x4e
  404272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404273:	and    ebx,eax
  404275:	mov    ah,0xa0
  404277:	fwait
  404278:	sub    al,0xd
  40427a:	pop    ebx
  40427b:	adc    dh,BYTE PTR [esi+0x7b9215b4]
  404281:	xor    ebp,DWORD PTR [ebp+0x5840b25d]
  404287:	adc    dl,bh
  404289:	fidiv  DWORD PTR [ebp-0x231cbe16]
  40428f:	mov    ah,0x72
  404291:	loopne 0x404231
  404293:	xor    ah,BYTE PTR [edi]
  404295:	cmp    dh,BYTE PTR [ebx]
  404297:	or     esi,0x21226a45
  40429d:	push   0x5c
  40429f:	call   0xd8ae:0xf1e1bff5
  4042a6:	jbe    0x4042a6
  4042a8:	sub    cl,BYTE PTR [ebx-0x3]
  4042ab:	cwde   
  4042ac:	imul   ebp,DWORD PTR [edx+0x40],0x59aebc61
  4042b3:	sub    BYTE PTR [ecx+0x22],ah
  4042b6:	push   ecx
  4042b7:	stos   DWORD PTR es:[edi],eax
  4042b8:	pop    ebp
  4042b9:	jno    0x404261
  4042bb:	mov    WORD PTR [esi],?
  4042bd:	jmp    0xee0e6a15
  4042c2:	nop
  4042c3:	inc    edx
  4042c4:	push   cs
  4042c5:	push   0x2c
  4042c7:	mov    al,ds:0x389580a
  4042cc:	call   FWORD PTR [esi+0x48]
  4042cf:	scas   eax,DWORD PTR es:[edi]
  4042d0:	pop    esp
  4042d1:	dec    edx
  4042d2:	ret    
  4042d3:	clc    
  4042d4:	inc    ebx
  4042d5:	jns    0x404350
  4042d7:	icebp  
  4042d8:	push   edx
  4042d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042da:	jg     0x4042b5
  4042dc:	xor    eax,DWORD PTR [edx+eiz*8-0x12]
  4042e0:	call   ebx
  4042e2:	mov    ss,WORD PTR [edi-0xdbcf810]
  4042e8:	daa    
  4042e9:	lods   eax,DWORD PTR ds:[esi]
  4042ea:	out    0x9a,eax
  4042ec:	cmp    DWORD PTR [esi-0xf885b04],ecx
  4042f2:	xor    BYTE PTR [ebp+0x2a],0x3c
  4042f6:	rcr    DWORD PTR [edi-0x15],0xfd
  4042fa:	pop    ecx
  4042fb:	cmc    
  4042fc:	mov    bh,0x20
  4042fe:	in     al,dx
  4042ff:	popf   
  404300:	pop    ss
  404301:	out    0xf4,al
  404303:	push   esi
  404304:	leave  
  404305:	pop    ebx
  404306:	xchg   esp,eax
  404307:	add    eax,0xfbeae89
  40430c:	in     al,0xd7
  40430e:	dec    esi
  40430f:	xchg   ebp,eax
  404310:	push   esi
  404311:	into   
  404312:	sub    al,0x8b
  404314:	cmp    ecx,DWORD PTR [eax]
  404316:	and    ch,BYTE PTR ds:0x67319e2c
  40431c:	adc    eax,0x8a2578a
  404321:	dec    edi
  404322:	sub    eax,0x3c07d6ff
  404327:	into   
  404328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404329:	pushf  
  40432a:	stc    
  40432b:	xchg   ecx,eax
  40432c:	dec    esi
  40432d:	je     0x404381
  40432f:	jmp    0x404395
  404331:	inc    ebp
  404332:	xchg   esi,eax
  404333:	in     al,0x1b
  404335:	lock push cs
  404337:	(bad)  
  404338:	xchg   ebp,eax
  404339:	push   eax
  40433a:	pusha  
  40433b:	gs pop eax
  40433d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40433e:	sbb    eax,0x5ab3dec8
  404343:	mov    ch,0x96
  404345:	cwde   
  404346:	or     ebx,DWORD PTR [ebx-0x1c]
  404349:	adc    al,0xf2
  40434b:	or     al,0x17
  40434d:	pop    ebp
  40434e:	push   ebx
  40434f:	imul   ebx,edx,0xffffffe1
  404352:	mov    edx,DWORD PTR [esi]
  404354:	pop    ebx
  404355:	clc    
  404356:	cmc    
  404357:	loopne 0x404356
  404359:	xor    BYTE PTR [ebx-0x7921ed42],ah
  40435f:	add    ch,cl
  404361:	or     BYTE PTR [ecx],cl
  404363:	stos   DWORD PTR es:[edi],eax
  404364:	adc    ebx,DWORD PTR [ebx+0x26]
  404367:	jb     0x4043b0
  404369:	mov    edi,0x4a52ea55
  40436e:	lods   al,BYTE PTR ds:[esi]
  40436f:	sbb    eax,DWORD PTR [edi+0x29]
  404372:	stos   DWORD PTR es:[edi],eax
  404373:	xchg   esi,eax
  404374:	sub    ah,BYTE PTR [esi-0x3]
  404377:	mov    ebx,0x4ae0be0e
  40437c:	adc    dh,cl
  40437e:	mov    eax,ds:0xe74e6374
  404383:	pushf  
  404384:	sar    BYTE PTR [eax-0x5a],cl
  404387:	out    0x6a,al
  404389:	aas    
  40438a:	mov    dl,0xc6
  40438c:	into   
  40438d:	aam    0x52
  40438f:	retf   0x31d5
  404392:	jne    0x40438a
  404394:	xor    BYTE PTR [esp+ebp*8-0x60],bl
  404398:	aam    0x85
  40439a:	js     0x404348
  40439c:	outs   dx,BYTE PTR ds:[esi]
  40439d:	lods   eax,DWORD PTR ds:[esi]
  40439e:	xor    DWORD PTR [esi],ebp
  4043a0:	(bad)  
  4043a2:	ins    DWORD PTR es:[edi],dx
  4043a3:	push   esp
  4043a4:	loope  0x404369
  4043a6:	cmp    al,0x88
  4043a8:	xor    al,0x69
  4043aa:	nop
  4043ab:	daa    
  4043ac:	aad    0xfb
  4043ae:	dec    edi
  4043af:	and    BYTE PTR [ebp-0x78],al
  4043b2:	jbe    0x4043f8
  4043b4:	dec    eax
  4043b5:	sub    al,0x2b
  4043b7:	cld    
  4043b8:	xlat   BYTE PTR ds:[ebx]
  4043b9:	(bad)  
  4043ba:	clc    
  4043bb:	repnz ins BYTE PTR es:[edi],dx
  4043bd:	push   cs
  4043be:	addr16 (bad) 
  4043c0:	dec    edi
  4043c1:	int    0xa7
  4043c3:	jecxz  0x4043aa
  4043c5:	mov    ah,0xcc
  4043c7:	es dec edi
  4043c9:	frstor [ebp-0x46]
  4043cc:	xchg   esi,eax
  4043cd:	test   eax,0xcd11700e
  4043d2:	mov    dl,0xc7
  4043d4:	sub    eax,DWORD PTR [edx-0x29]
  4043d7:	jno    0x4043e3
  4043d9:	(bad)  
  4043da:	fstp   TBYTE PTR [ecx+edx*2]
  4043dd:	test   al,0xdf
  4043df:	jo     0x40444e
  4043e1:	mov    eax,0xe4e311b3
  4043e6:	mov    DWORD PTR [edx-0x6f],edi
  4043e9:	inc    esi
  4043ea:	aam    0x17
  4043ec:	adc    DWORD PTR [esi+eiz*4],esi
  4043ef:	dec    ebp
  4043f0:	mov    cl,0xc2
  4043f2:	mov    ecx,0x5e7908ee
  4043f7:	sbb    eax,0x6bdd4002
  4043fc:	ja     0x404469
  4043fe:	ins    BYTE PTR es:[edi],dx
  4043ff:	out    dx,eax
  404400:	dec    edi
  404401:	shl    ch,1
  404403:	sbb    eax,0x24e682bb
  404408:	cli    
  404409:	pop    eax
  40440a:	bound  ebx,QWORD PTR [ecx-0x15b745c1]
  404410:	jns    0x40440b
  404412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404413:	or     al,0x72
  404415:	loop   0x404440
  404417:	mov    DWORD PTR [edx-0x73],ebp
  40441a:	xchg   ebx,eax
  40441b:	mov    cl,0x36
  40441d:	les    ebp,FWORD PTR [esi]
  40441f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404420:	push   eax
  404421:	xchg   ebx,eax
  404422:	stos   BYTE PTR es:[edi],al
  404423:	cmp    BYTE PTR [ebx+0x4d8eb425],dl
  404429:	ss into 
  40442b:	mov    edx,0x5d89d3c5
  404430:	out    dx,al
  404431:	sub    ah,ch
  404433:	jmp    0xe2a9a754
  404438:	test   eax,0x5865306c
  40443d:	pop    ebp
  40443e:	xor    DWORD PTR [eax],edx
  404440:	call   0x7dcd:0xa58936bd
  404447:	fisttp DWORD PTR [ebx+0x20]
  40444a:	sub    ch,0x97
  40444d:	dec    eax
  40444e:	sbb    al,BYTE PTR [ecx+0x59]
  404451:	std    
  404452:	sub    DWORD PTR [eax+0x4624e3f9],0xc300bc01
  40445c:	inc    ebx
  40445d:	loop   0x404483
  40445f:	ins    DWORD PTR es:[edi],dx
  404460:	frstor [ebp+0xf]
  404463:	iret   
  404464:	lea    ecx,[edi]
  404466:	sub    DWORD PTR [edx-0x9],esi
  404469:	mov    eax,ds:0x3f0053e3
  40446e:	dec    ecx
  40446f:	ret    0xe4d
  404472:	xor    DWORD PTR ds:0xf128bee0,ecx
  404478:	or     DWORD PTR [edx+edi*8-0x34],esp
  40447c:	mov    si,0x68f0
  404480:	iret   
  404481:	shl    DWORD PTR [eax],cl
  404483:	nop
  404484:	test   eax,0x312724b0
  404489:	sub    esi,DWORD PTR [edx]
  40448b:	or     bh,al
  40448d:	pop    ecx
  40448e:	leave  
  40448f:	pusha  
  404490:	aas    
  404491:	mov    ebx,0xa7490b9a
  404496:	sti    
  404497:	inc    edx
  404498:	imul   esi,DWORD PTR [edx],0x21
  40449b:	add    dl,ch
  40449d:	fwait
  40449e:	nop
  40449f:	or     DWORD PTR [ecx],esp
  4044a1:	fucom  st(2)
  4044a3:	cdq    
  4044a4:	ss push edx
  4044a6:	fistp  DWORD PTR [ecx-0x4b]
  4044a9:	dec    edx
  4044aa:	xor    eax,DWORD PTR [edi+0xc]
  4044ad:	xchg   ecx,eax
  4044af:	jbe    0x404442
  4044b1:	xor    al,0x5c
  4044b3:	push   ds
  4044b4:	inc    edx
  4044b5:	ja     0x4044f4
  4044b7:	dec    edi
  4044b8:	aaa    
  4044b9:	pop    edi
  4044ba:	aad    0x93
  4044bc:	(bad)  
  4044bd:	(bad)  
  4044be:	cmp    BYTE PTR [edx-0xa],ah
  4044c1:	mov    esp,0xb445d2f
  4044c6:	loope  0x4044a5
  4044c8:	retf   
  4044c9:	icebp  
  4044ca:	outs   dx,DWORD PTR ds:[esi]
  4044cb:	xor    esi,DWORD PTR [ebx+edx*2-0x37]
  4044cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044d0:	mov    bl,0x72
  4044d2:	inc    esp
  4044d3:	data16 sti 
  4044d5:	out    dx,al
  4044d6:	les    eax,FWORD PTR [edx]
  4044d8:	cld    
  4044d9:	xchg   edi,eax
  4044da:	dec    edx
  4044db:	push   es
  4044dc:	mov    ds:0x37a0d67b,al
  4044e1:	cmp    esp,DWORD PTR [ebx+0x14af275f]
  4044e7:	sbb    DWORD PTR [ecx+0x4d1da186],ebp
  4044ed:	or     al,BYTE PTR [ebx+0x492f56e8]
  4044f3:	push   esp
  4044f4:	nop
  4044f5:	bound  eax,QWORD PTR [ecx+0x6b]
  4044f8:	jmp    DWORD PTR [edx+ebx*4]
  4044fb:	inc    edi
  4044fc:	sbb    dh,ah
  4044fe:	sar    edi,cl
  404500:	mov    dl,BYTE PTR [eax+eiz*4+0x8]
  404504:	mov    eax,ds:0x68180533
  404509:	daa    
  40450a:	daa    
  40450b:	and    ebx,DWORD PTR [edi+0x8]
  40450e:	lods   eax,DWORD PTR ds:[esi]
  40450f:	xchg   esp,eax
  404510:	es iret 
  404512:	mov    ah,BYTE PTR [ebp+0x7e616d54]
  404518:	mov    BYTE PTR [ebp-0x73a7f064],al
  40451e:	test   edx,ebx
  404520:	mov    bl,BYTE PTR [edi-0x80]
  404523:	into   
  404524:	(bad)  [edi]
  404526:	loope  0x404533
  404528:	or     BYTE PTR [ecx+ebx*1+0x200a97d3],0x7
  404530:	or     eax,0xcaa0b06b
  404535:	push   esp
  404536:	test   BYTE PTR [eax],dh
  404538:	push   0x64
  40453a:	mov    ah,0x2d
  40453c:	pusha  
  40453d:	js     0x4044c2
  40453f:	mov    ecx,0xef535354
  404544:	ret    0xd7ae
  404547:	dec    ecx
  404548:	sbb    cl,dl
  40454a:	dec    ebp
  40454b:	cdq    
  40454c:	sub    BYTE PTR [edx],dh
  40454e:	push   edx
  40454f:	sbb    ch,bl
  404551:	lahf   
  404552:	inc    esi
  404553:	leave  
  404554:	aam    0x34
  404556:	jne    0x404574
  404558:	dec    esp
  404559:	sbb    bl,BYTE PTR [eax]
  40455b:	hlt    
  40455c:	sub    ebp,edx
  40455e:	pop    ebp
  40455f:	enter  0xa62c,0xd2
  404563:	mov    edi,0x410dcd23
  404568:	mov    ebx,0x5740019
  40456d:	cmp    dl,BYTE PTR [eax+0x4d]
  404570:	jne    0x4045f1
  404572:	std    
  404573:	xchg   edx,eax
  404574:	bound  esp,QWORD PTR [edx]
  404576:	adc    DWORD PTR [eax-0x11],eax
  404579:	inc    edi
  40457a:	pop    esp
  40457b:	jns    0x404518
  40457d:	sti    
  40457e:	pop    ecx
  40457f:	sub    ebp,DWORD PTR [eax-0x11c2ca85]
  404585:	adc    al,0x62
  404587:	std    
  404588:	dec    ebp
  404589:	add    BYTE PTR [eax-0x711b7804],0xf1
  404590:	outs   dx,BYTE PTR ds:[esi]
  404591:	(bad)  
  404592:	lods   eax,DWORD PTR ds:[esi]
  404593:	shr    al,0xc
  404596:	cdq    
  404597:	in     al,0x66
  404599:	xchg   DWORD PTR [edx+0x1f],ecx
  40459c:	and    eax,0xde5f89e0
  4045a1:	jle    0x4045a7
  4045a3:	out    0xee,al
  4045a5:	mov    dh,0x1a
  4045a7:	dec    ebx
  4045a8:	rol    BYTE PTR [esi-0x8fedc78],cl
  4045ae:	push   ds
  4045af:	je     0x4045a1
  4045b1:	bound  ecx,QWORD PTR [ecx+0x44]
  4045b4:	in     al,dx
  4045b5:	push   ecx
  4045b6:	sub    edx,ebx
  4045b8:	inc    edi
  4045b9:	hlt    
  4045ba:	inc    BYTE PTR [esp+ebx*1-0x53]
  4045be:	inc    ebx
  4045bf:	cmp    al,0xc
  4045c1:	fidiv  WORD PTR [edi+0xc5c87cf]
  4045c7:	sub    al,0xf0
  4045c9:	dec    ebp
  4045ca:	xor    BYTE PTR [ecx],bl
  4045cc:	mov    ebp,0xe89424f2
  4045d1:	push   edi
  4045d2:	mov    eax,ds:0x49260ba7
  4045d7:	xchg   edi,eax
  4045d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045d9:	shl    dh,1
  4045db:	sbb    al,0xac
  4045dd:	add    BYTE PTR [esi+esi*2+0x17],al
  4045e1:	jecxz  0x4045a4
  4045e3:	loope  0x4045e8
  4045e5:	ins    DWORD PTR es:[edi],dx
  4045e6:	jmp    0x404621
  4045e8:	push   ss
  4045e9:	pop    esi
  4045ea:	xchg   esp,eax
  4045eb:	aam    0xe
  4045ed:	adc    BYTE PTR [edi+ecx*1-0x4],cl
  4045f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045f2:	mov    dh,0xa3
  4045f4:	out    dx,al
  4045f5:	cmp    eax,0x7466cd1c
  4045fa:	mov    es,WORD PTR [ebx-0x29]
  4045fd:	inc    edx
  4045fe:	pop    esp
  4045ff:	pop    es
  404600:	xchg   esp,eax
  404601:	ss mov cl,0xb9
  404604:	push   ds
  404605:	pop    ecx
  404606:	inc    esi
  404607:	mov    edx,0x9734e80e
  40460c:	mov    dh,BYTE PTR [edi+0x29]
  40460f:	dec    ebx
  404610:	leave  
  404611:	test   DWORD PTR [ebp+0x1c],edi
  404614:	or     eax,ebp
  404616:	test   eax,0xe548325
  40461b:	and    bh,BYTE PTR [edi-0x1b]
  40461e:	test   al,0x49
  404620:	ss jbe 0x40462a
  404623:	push   ecx
  404624:	sbb    DWORD PTR [edi-0x7a],edx
  404627:	or     esi,eax
  404629:	(bad)  
  40462a:	and    bh,BYTE PTR [edx]
  40462c:	hlt    
  40462d:	jge    0x4045c9
  40462f:	(bad)  
  404630:	ret    0xf38f
  404633:	fmul   DWORD PTR [edx]
  404635:	repnz xor ebp,eax
  404638:	loope  0x4046a7
  40463a:	in     al,0x36
  40463c:	or     BYTE PTR [esi],ah
  40463e:	pop    edx
  40463f:	jae    0x40464e
  404641:	push   cs
  404642:	jecxz  0x4046a7
  404644:	or     al,BYTE PTR [esi-0x7a]
  404647:	sub    eax,DWORD PTR [ebx-0x44]
  40464a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40464b:	imul   ecx,esi,0x2f8b8b66
  404651:	mov    dh,0x85
  404653:	xor    al,0x66
  404655:	add    BYTE PTR [ecx],ah
  404657:	inc    esp
  404658:	and    eax,0x31718e46
  40465d:	or     ebx,DWORD PTR [ebp+ebp*4+0x1892e4ec]
  404664:	cwde   
  404665:	jae    0x4045ef
  404667:	pushf  
  404668:	fnstcw WORD PTR ds:0x9a3e0710
  40466e:	lahf   
  40466f:	mov    al,ds:0x8a931a51
  404674:	in     eax,dx
  404675:	cs aaa 
  404677:	inc    edx
  404678:	mov    BYTE PTR [eax+edx*2-0x3e],bl
  40467c:	sti    
  40467d:	repnz mov eax,0x1a901ee7
  404683:	mov    ebp,0x6fe31035
  404688:	ret    0x3a6d
  40468b:	pusha  
  40468c:	mov    al,ds:0xa7cba2e7
  404691:	hlt    
  404692:	js     0x4046e8
  404694:	outs   dx,BYTE PTR ds:[esi]
  404695:	call   0xae05:0x4b3a448f
  40469c:	sbb    BYTE PTR [ebx-0x48e7fb25],dl
  4046a2:	adc    bl,bl
  4046a4:	shr    BYTE PTR [eax+0x4c20b486],1
  4046aa:	or     eax,DWORD PTR [edx+0x3]
  4046ad:	sbb    esp,DWORD PTR [ebp-0x37a0d9f1]
  4046b3:	cs push ebp
  4046b5:	(bad)  
  4046b6:	outs   dx,BYTE PTR ds:[esi]
  4046b7:	mov    al,ds:0x1bf39d59
  4046bc:	test   DWORD PTR [edx+0x59],ecx
  4046bf:	mov    al,0x1b
  4046c1:	cli    
  4046c2:	lds    esp,FWORD PTR [eax+0x717932fd]
  4046c8:	jmp    0x803:0x98384605
  4046cf:	mov    bl,BYTE PTR [ebp+0x3800df79]
  4046d5:	sub    DWORD PTR [esi-0x288b2e6e],ebp
  4046db:	popf   
  4046dc:	frstor [ebx]
  4046de:	or     DWORD PTR [ebx-0x152f4127],eax
  4046e4:	(bad)  
  4046e6:	ds mov esp,0x975cd061
  4046ec:	ror    DWORD PTR [esi],cl
  4046ee:	cmp    DWORD PTR [ebp+0x50],ecx
  4046f1:	cmp    cl,BYTE PTR [ecx]
  4046f3:	and    esp,DWORD PTR [esi]
  4046f5:	mov    ebx,0x50f875da
  4046fa:	ins    DWORD PTR es:[edi],dx
  4046fb:	enter  0x7265,0xef
  4046ff:	scas   eax,DWORD PTR es:[edi]
  404700:	xor    BYTE PTR [ebx],bl
  404702:	lahf   
  404703:	or     eax,0xbd907d6e
  404708:	xchg   esi,eax
  404709:	push   cs
  40470a:	stc    
  40470b:	pop    ds
  40470c:	sub    BYTE PTR [ebp+eiz*2+0x1a],dl
  404710:	and    edx,DWORD PTR [ecx-0x6f]
  404713:	pop    edx
  404714:	adc    ecx,0xffffffc1
  404717:	cmp    eax,0xddf78fbf
  40471c:	out    dx,al
  40471d:	stos   DWORD PTR es:[edi],eax
  40471e:	scas   eax,DWORD PTR es:[edi]
  40471f:	sub    DWORD PTR [ecx],ecx
  404721:	pop    edx
  404722:	pusha  
  404723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404724:	dec    eax
  404725:	mov    al,0xf7
  404727:	lods   eax,DWORD PTR ds:[esi]
  404728:	sbb    BYTE PTR [ecx+0x365a0640],ah
  40472e:	repz jmp 0xd801:0xf106fa2b
  404736:	ret    
  404737:	mov    dl,0xe8
  404739:	fst    DWORD PTR [eax-0x52bb122f]
  40473f:	hlt    
  404740:	lds    ebx,FWORD PTR [ebp+0x5e13df19]
  404746:	dec    ebx
  404747:	mov    dl,0x96
  404749:	push   edi
  40474a:	add    ch,al
  40474c:	push   edx
  40474d:	xor    esp,esi
  40474f:	mov    edx,0x1e4861c0
  404754:	push   edx
  404755:	loopne 0x404709
  404757:	pushf  
  404758:	sar    bl,0xa0
  40475b:	jns    0x4047c0
  40475d:	repnz mov edi,0x2a6c7f7f
  404763:	dec    ecx
  404764:	iret   
  404765:	mov    ds,WORD PTR [ebp-0x76]
  404768:	ret    
  404769:	mov    ebp,0x4b4c4e05
  40476e:	add    al,0x43
  404770:	xlat   BYTE PTR ds:[ebx]
  404771:	cmc    
  404772:	or     eax,DWORD PTR [edx+ebp*2-0x30]
  404776:	imul   edi,DWORD PTR [eax-0x112919a5],0x4d
  40477d:	pop    ecx
  40477e:	jns    0x40475f
  404780:	fs push edi
  404782:	(bad)  
  404783:	in     eax,dx
  404784:	sub    bl,BYTE PTR [ecx-0x27de41a8]
  40478a:	or     al,0xd2
  40478c:	icebp  
  40478d:	imul   ecx,DWORD PTR [eax+0x296e4a9c],0xffffff85
  404794:	mov    dl,0xb6
  404796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404797:	cmp    eax,0x61e694ec
  40479c:	shr    BYTE PTR [ecx-0x6f],0xa8
  4047a0:	jl     0x4047b8
  4047a2:	or     ebp,DWORD PTR [esi-0x8]
  4047a5:	xchg   edx,eax
  4047a6:	fisttp QWORD PTR [ebx-0x3323512e]
  4047ac:	xchg   esi,eax
  4047ad:	adc    dl,BYTE PTR [ecx+0x2841858e]
  4047b3:	retf   0x79ec
  4047b6:	in     al,0x61
  4047b8:	(bad)  
  4047b9:	repnz into 
  4047bb:	mul    BYTE PTR [ebp+0x52]
  4047be:	je     0x4047cb
  4047c0:	neg    DWORD PTR [eax]
  4047c2:	cs xchg dl,dh
  4047c5:	sbb    esi,esp
  4047c7:	(bad)  
  4047c8:	jmp    0x404819
  4047ca:	mov    ah,0x64
  4047cc:	mov    cl,0xb0
  4047ce:	mov    bh,0xbf
  4047d0:	ret    
  4047d1:	mov    ds:0x10769fca,al
  4047d6:	push   edx
  4047d7:	jb     0x40476b
  4047d9:	push   es
  4047da:	or     ah,dl
  4047dc:	jl     0x4047f7
  4047de:	pushf  
  4047df:	loope  0x4047d0
  4047e1:	xchg   DWORD PTR [edx+edx*1+0x45],ebx
  4047e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047e6:	scas   eax,DWORD PTR es:[edi]
  4047e7:	fimul  DWORD PTR [edx-0x36f2e398]
  4047ed:	mov    WORD PTR [ecx+0x14],fs
  4047f0:	test   BYTE PTR fs:[eax+0x490f173],al
  4047f7:	shl    ebp,0x5d
  4047fa:	cmp    eax,0xf6f84efe
  4047ff:	cmp    edi,ecx
  404801:	clc    
  404802:	popf   
  404803:	in     eax,0x3a
  404805:	and    cl,BYTE PTR [ebp+0x74]
  404808:	ret    
  404809:	rcl    DWORD PTR [esi],1
  40480b:	push   edi
  40480c:	fcmovnbe st,st(3)
  40480e:	inc    edi
  40480f:	sub    BYTE PTR [edx-0x42],0x93
  404813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404815:	(bad)  
  404816:	clc    
  404817:	pop    ebp
  404818:	hlt    
  404819:	inc    ebp
  40481a:	enter  0xc2f2,0x55
  40481e:	inc    ebp
  40481f:	rcl    BYTE PTR [esi],0x8e
  404822:	ror    BYTE PTR [ecx-0x3c],cl
  404825:	or     BYTE PTR [ebp-0x22],al
  404828:	shl    BYTE PTR [edi-0x57],0x22
  40482c:	(bad)  
  40482d:	and    ch,BYTE PTR [edi-0x47]
  404830:	data16 add BYTE PTR ds:[eax-0x1f],0x15
  404836:	push   edi
  404837:	and    eax,DWORD PTR [esi+0x7f]
  40483a:	sub    al,0x43
  40483c:	xor    al,0xbd
  40483e:	push   ds
  40483f:	int3   
  404840:	jle    0x404867
  404842:	and    al,0x42
  404844:	inc    esi
  404845:	aad    0xcc
  404847:	cwde   
  404848:	and    ecx,DWORD PTR [ecx]
  40484a:	xor    al,0x53
  40484c:	scas   eax,DWORD PTR es:[edi]
  40484d:	pop    ds
  40484e:	push   0xbc1e601a
  404853:	std    
  404854:	jb     0x40480f
  404856:	out    dx,al
  404857:	fst    DWORD PTR [ebp+0x76]
  40485a:	sbb    DWORD PTR [edi+0x47a85355],esi
  404860:	daa    
  404861:	pop    edi
  404862:	mov    WORD PTR [esi+0x68],ds
  404865:	push   edx
  404866:	pop    edx
  404867:	lock jp 0x404802
  40486a:	stos   DWORD PTR es:[edi],eax
  40486b:	imul   ebx,DWORD PTR [edi],0x1ba954b4
  404871:	push   ss
  404872:	pusha  
  404873:	sub    ah,BYTE PTR [edx+0x7a]
  404876:	xchg   DWORD PTR [ecx+edi*1+0x5fffe037],eax
  40487d:	mov    cl,ch
  40487f:	(bad)  
  404880:	leave  
  404881:	push   edx
  404882:	jecxz  0x4048a8
  404884:	push   esp
  404885:	and    BYTE PTR [eax-0x80],ah
  404888:	lock xchg BYTE PTR [ecx+0x2d],bl
  40488c:	repnz popa 
  40488e:	fst    QWORD PTR [ebx+0x17970f5c]
  404894:	imul   ebp,ecx,0xffffffec
  404897:	push   esi
  404898:	cmp    ch,BYTE PTR [ecx]
  40489a:	cmp    DWORD PTR [esp+eiz*4],edx
  40489d:	jae    0x40489d
  40489f:	adc    dl,BYTE PTR [eax-0x1]
  4048a2:	sahf   
  4048a3:	push   eax
  4048a4:	jmp    0x2aae11fc
  4048a9:	call   0xbd750cb3
  4048ae:	jle    0x404831
  4048b0:	push   eax
  4048b1:	sub    eax,0x901e7d6c
  4048b6:	inc    ebx
  4048b7:	in     eax,0x5f
  4048b9:	pop    es
  4048ba:	jb     0x404927
  4048bc:	loop   0x404921
  4048be:	out    0x8e,al
  4048c0:	aad    0x16
  4048c2:	push   ebx
  4048c3:	mov    edx,0xb956df9a
  4048c8:	gs or  esi,ebp
  4048cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048cc:	addr16 mov al,ds:0x7c75
  4048d0:	test   BYTE PTR [edx],ch
  4048d2:	sub    DWORD PTR [edx],0xe60f70d0
  4048d8:	pop    ss
  4048d9:	outs   dx,BYTE PTR ds:[esi]
  4048da:	adc    dl,al
  4048dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048dd:	(bad)  
  4048de:	inc    esi
  4048df:	in     al,0x9d
  4048e1:	lahf   
  4048e2:	in     eax,0xdf
  4048e4:	lds    eax,FWORD PTR [eax-0x4ae2c954]
  4048ea:	retf   0x4ac4
  4048ed:	lock in al,0x73
  4048f0:	cld    
  4048f1:	add    al,0x44
  4048f3:	lock jecxz 0x4048da
  4048f6:	mov    BYTE PTR [edi],al
  4048f8:	adc    esp,ecx
  4048fa:	(bad)  
  4048fb:	add    ebx,DWORD PTR [ecx-0x62]
  4048fe:	test   al,0x1e
  404900:	ficom  WORD PTR [ecx+0x30]
  404903:	cmp    eax,0x6f6bb19e
  404908:	dec    edi
  404909:	inc    eax
  40490a:	outs   dx,BYTE PTR ds:[esi]
  40490b:	mov    dl,0xa5
  40490d:	mov    al,ds:0x460484e2
  404912:	pop    eax
  404913:	adc    DWORD PTR [edx-0x56],esi
  404916:	or     eax,0x7d33d22
  40491b:	and    eax,DWORD PTR ds:0xc241737f
  404921:	dec    edi
  404922:	stos   DWORD PTR es:[edi],eax
  404923:	stos   DWORD PTR es:[edi],eax
  404924:	aad    0xdb
  404926:	out    dx,eax
  404927:	and    al,0xf1
  404929:	push   ss
  40492a:	stc    
  40492b:	ins    BYTE PTR es:[edi],dx
  40492c:	dec    esi
  40492d:	in     eax,dx
  40492e:	test   ch,bh
  404930:	xor    DWORD PTR [ebp-0x383d317f],0xe583b5f2
  40493a:	mov    ah,0xb9
  40493c:	lea    esp,[edi-0x10]
  40493f:	cmp    ecx,DWORD PTR [ecx+eiz*8]
  404942:	jmp    0x4049bb
  404944:	pop    edx
  404945:	or     ah,cl
  404947:	jns    0x40496b
  404949:	imul   edi,DWORD PTR [eax],0xe65244b5
  40494f:	xchg   edx,eax
  404950:	(bad)  
  404952:	in     al,0x3
  404954:	push   cs
  404955:	or     al,0x10
  404957:	xor    al,0xcb
  404959:	das    
  40495a:	mov    ds,edx
  40495c:	cwde   
  40495d:	jns    0x4048f2
  40495f:	push   0x55
  404961:	das    
  404962:	fdivr  QWORD PTR ss:[edx]
  404965:	jno    0x40493e
  404967:	in     al,dx
  404968:	cmc    
  404969:	jbe    0x4049d2
  40496b:	cs xchg edi,eax
  40496d:	pop    edx
  40496e:	or     eax,0x3c471674
  404973:	mov    esp,edx
  404975:	mov    ds:0xfeabdd98,eax
  40497a:	xchg   ecx,eax
  40497b:	push   0x6cea966a
  404980:	mov    cs,WORD PTR [ecx+0x7682a7ed]
  404986:	mov    ebx,0xd2501df8
  40498b:	lods   al,BYTE PTR ds:[esi]
  40498c:	pop    ebx
  40498d:	xchg   edi,eax
  40498e:	cdq    
  40498f:	add    al,BYTE PTR [ebx]
  404991:	jmp    0xa78a4ca4
  404996:	mov    esi,DWORD PTR [edx+0x70a5076d]
  40499c:	popa   
  40499d:	push   0xb67f4d
  4049a2:	add    al,BYTE PTR [edx+edi*8+0x4f]
  4049a6:	repz jnp 0x404a12
  4049a9:	retf   0x53d2
  4049ac:	xchg   edx,eax
  4049ad:	pop    edi
  4049ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049b0:	pop    ebx
  4049b1:	iret   
  4049b2:	inc    ecx
  4049b3:	scas   eax,DWORD PTR es:[edi]
  4049b4:	fsubp  st(3),st
  4049b6:	pop    esi
  4049b7:	out    0x2,al
  4049b9:	les    edi,FWORD PTR [edx+esi*2-0x64]
  4049bd:	lock test DWORD PTR [edi-0x35],0xfcdd0b29
  4049c5:	pop    eax
  4049c6:	sbb    eax,DWORD PTR [eax-0x4]
  4049c9:	loopne 0x4049f2
  4049cb:	xor    eax,0x7ed5f389
  4049d0:	mov    DWORD PTR [edi+0x18506c1a],ebx
  4049d6:	xchg   BYTE PTR [edi],al
  4049d8:	outs   dx,BYTE PTR ds:[esi]
  4049d9:	mov    ch,0xc4
  4049db:	jle    0x4049e4
  4049dd:	pop    edi
  4049de:	and    eax,ebx
  4049e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049e1:	mov    DWORD PTR [edi],ebp
  4049e3:	add    edx,DWORD PTR [esi]
  4049e5:	fistp  QWORD PTR [edi+ecx*8]
  4049e8:	push   0x3e
  4049ea:	lds    edi,FWORD PTR [ebx]
  4049ec:	add    DWORD PTR [ecx+ebx*1],ebp
  4049ef:	out    0xbe,al
  4049f1:	outs   dx,BYTE PTR ds:[esi]
  4049f2:	pushf  
  4049f3:	ret    
  4049f4:	dec    ecx
  4049f5:	fmul   DWORD PTR [ebp-0x6e68b053]
  4049fb:	push   cs
  4049fc:	ins    DWORD PTR es:[edi],dx
  4049fd:	(bad)  
  4049fe:	mov    edi,0xeda4b1b7
  404a03:	cld    
  404a04:	int    0x84
  404a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a07:	adc    eax,0x1e265bb5
  404a0c:	loopne 0x404a62
  404a0e:	pop    es
  404a0f:	or     al,0xb9
  404a11:	outs   dx,BYTE PTR ds:[esi]
  404a12:	xor    DWORD PTR [eax-0x63480d25],edx
  404a18:	ret    
  404a19:	and    BYTE PTR ds:0xcef48610,al
  404a1f:	push   ss
  404a20:	ret    0x512d
  404a23:	(bad)  
  404a24:	hlt    
  404a25:	pop    esp
  404a26:	imul   esp,DWORD PTR [eax-0x71],0x49
  404a2a:	inc    ebx
  404a2b:	add    BYTE PTR [edi+0x22],cl
  404a2e:	push   esi
  404a2f:	add    BYTE PTR [edx],0x7d
  404a32:	xchg   DWORD PTR [ebp-0x3501e62c],edi
  404a38:	and    eax,0xb41ff325
  404a3d:	jl     0x404a51
  404a3f:	adc    cl,BYTE PTR [ebx]
  404a41:	sub    al,dl
  404a43:	lds    esp,FWORD PTR [esi+0x26]
  404a46:	xor    eax,0x8366a999
  404a4b:	sbb    DWORD PTR [edi+0x35],ecx
  404a4e:	rol    DWORD PTR [ebx-0x57],0x94
  404a52:	pop    edi
  404a53:	arpl   WORD PTR [edi-0x4],si
  404a56:	retf   0x6f37
  404a59:	push   0xffffffd9
  404a5b:	int3   
  404a5c:	jnp    0x4049fd
  404a5e:	xchg   DWORD PTR [esi],ecx
  404a60:	repz cmp DWORD PTR [edi],0xa90051cd
  404a67:	int3   
  404a68:	jecxz  0x404a6e
  404a6a:	xchg   ecx,eax
  404a6b:	push   eax
  404a6c:	in     al,dx
  404a6d:	sub    ecx,DWORD PTR [ecx+edx*4]
  404a70:	fdiv   DWORD PTR [ebx-0x650a0ae]
  404a76:	ins    DWORD PTR es:[edi],dx
  404a77:	call   0xf3cb4162
  404a7c:	cmp    ch,BYTE PTR [ebp+0x53c58dc6]
  404a82:	out    dx,al
  404a83:	cmp    al,BYTE PTR [esi+0x78]
  404a86:	repz dec esp
  404a88:	mov    ah,0x4d
  404a8a:	xor    al,0xc
  404a8c:	fdiv   DWORD PTR [edi-0x20bace2e]
  404a92:	adc    edi,DWORD PTR [edx+0x45]
  404a95:	adc    bh,0xe0
  404a98:	sub    DWORD PTR [ebp+0x13605e9],eax
  404a9e:	ja     0x404a45
  404aa0:	(bad)  
  404aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aa2:	xlat   BYTE PTR ds:[ebx]
  404aa3:	lock push esp
  404aa5:	jp     0x404a32
  404aa7:	out    dx,eax
  404aa8:	lods   eax,DWORD PTR ds:[esi]
  404aa9:	mov    al,0x4
  404aab:	pop    ss
  404aac:	xchg   esp,eax
  404aad:	mov    ebx,0xb55279c2
  404ab2:	dec    edi
  404ab3:	nop
  404ab4:	xchg   ecx,eax
  404ab5:	add    esi,DWORD PTR [edx+0x58]
  404ab8:	mov    ebx,DWORD PTR [edx-0x1e53c96c]
  404abe:	xchg   BYTE PTR [edx-0x3970257c],dl
  404ac4:	fild   DWORD PTR [ebp+0x41]
  404ac7:	ds popa 
  404ac9:	cmp    BYTE PTR [ebx-0xc67659],ah
  404acf:	aas    
  404ad0:	repz cmp BYTE PTR [eax],bl
  404ad3:	mov    al,ds:0x21296a14
  404ad8:	daa    
  404ad9:	in     eax,0x63
  404adb:	loope  0x404aba
  404add:	scas   al,BYTE PTR es:[edi]
  404ade:	out    dx,al
  404adf:	cmp    ah,BYTE PTR [ebx-0x5c]
  404ae2:	mov    DWORD PTR [edx],edx
  404ae4:	mov    eax,0x5ccdb343
  404ae9:	dec    edx
  404aea:	fbld   TBYTE PTR [esi-0x7683c13c]
  404af0:	pusha  
  404af1:	xchg   DWORD PTR [edi+edx*8+0x33],ebx
  404af5:	ror    BYTE PTR [esi],0x34
  404af8:	push   edi
  404af9:	adc    al,BYTE PTR [edi+ebp*1-0x340f9131]
  404b00:	call   0x7069:0xb4d80252
  404b07:	push   ds
  404b08:	adc    DWORD PTR [edi],0x4a
  404b0b:	int3   
  404b0c:	and    eax,0x50e44c04
  404b11:	mov    esi,0x878a656a
  404b16:	and    BYTE PTR [ecx+ebp*2-0x384dc18d],dh
  404b1d:	mov    ds:0x4c23e2d4,eax
  404b22:	jo     0x404b12
  404b24:	dec    edi
  404b25:	daa    
  404b26:	push   ebp
  404b27:	out    0xfa,eax
  404b29:	and    al,0x14
  404b2b:	je     0x404b36
  404b2d:	ins    BYTE PTR es:[edi],dx
  404b2e:	sub    cl,BYTE PTR [ebp-0x49]
  404b31:	pop    ss
  404b32:	in     al,dx
  404b33:	or     dh,bl
  404b35:	test   edx,ebx
  404b37:	and    eax,0xaff57ce6
  404b3c:	fnstcw WORD PTR [eax]
  404b3e:	jge    0x404b46
  404b40:	ja     0x404b73
  404b42:	dec    esi
  404b43:	xchg   edx,eax
  404b44:	leave  
  404b45:	les    esp,FWORD PTR [edx+0xc]
  404b48:	mov    eax,0xa1cf2640
  404b4d:	mov    dh,BYTE PTR [edx+0x219b5022]
  404b53:	pop    ebp
  404b54:	xor    BYTE PTR [edx],al
  404b56:	sub    DWORD PTR [esi+0x67],edx
  404b59:	ror    DWORD PTR [edx+0x1b280c24],1
  404b5f:	shr    ebp,cl
  404b61:	sbb    esp,eax
  404b63:	xchg   ebx,eax
  404b64:	add    dh,BYTE PTR [edi-0x3d]
  404b67:	sbb    eax,0x6cfc61a3
  404b6c:	iret   
  404b6d:	popf   
  404b6e:	cli    
  404b6f:	test   al,0xb
  404b71:	inc    esi
  404b72:	pushf  
  404b73:	fwait
  404b74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b75:	sbb    al,0x70
  404b77:	retf   
  404b78:	arpl   WORD PTR [eax],bp
  404b7a:	hlt    
  404b7b:	ror    BYTE PTR [eax+0x484dddc9],cl
  404b81:	mov    edx,0xdd518960
  404b86:	idiv   BYTE PTR [ebp+0x592f51a0]
  404b8c:	rol    DWORD PTR [ebp-0x5993bd71],cl
  404b92:	in     eax,0x7e
  404b94:	out    dx,al
  404b95:	scas   al,BYTE PTR es:[edi]
  404b96:	lahf   
  404b97:	imul   ebp,DWORD PTR [edx-0x42],0xbd30d421
  404b9e:	call   0x2374:0x7cdbac02
  404ba5:	fwait
  404ba6:	jne    0x404c05
  404ba8:	dec    ebp
  404ba9:	xchg   esp,eax
  404baa:	or     bh,al
  404bac:	out    0x54,eax
  404bae:	push   eax
  404baf:	push   edx
  404bb0:	pop    ebx
  404bb1:	les    edx,FWORD PTR [ecx-0x74f2802d]
  404bb7:	leave  
  404bb8:	jne    0x404c1b
  404bba:	dec    esp
  404bbb:	loop   0x404c17
  404bbd:	or     BYTE PTR [edi],dh
  404bbf:	xlat   BYTE PTR ds:[ebx]
  404bc0:	sub    dl,dh
  404bc2:	dec    eax
  404bc3:	xor    bl,BYTE PTR [ecx]
  404bc5:	sub    eax,0xff0f3878
  404bca:	popf   
  404bcb:	loope  0x404c37
  404bcd:	push   cs
  404bce:	mov    eax,ebx
  404bd0:	iret   
  404bd1:	jg     0x404c4f
  404bd3:	icebp  
  404bd4:	mov    eax,ds:0x698bf1d1
  404bd9:	(bad)  
  404bda:	sbb    DWORD PTR [edx+0x5bac678f],ecx
  404be0:	ret    0x39eb
  404be3:	hlt    
  404be4:	cdq    
  404be5:	jo     0x404c5b
  404be7:	fmulp  st(0),st
  404be9:	push   ds
  404bea:	push   0xc9471802
  404bef:	dec    ebx
  404bf0:	adc    eax,0xd2274a14
  404bf5:	pusha  
  404bf6:	pop    edi
  404bf7:	sti    
  404bf8:	call   0xb142:0xa81ed506
  404bff:	jmp    0x404bda
  404c01:	fdivr  DWORD PTR [ebx-0x618ed558]
  404c07:	jbe    0x404ba8
  404c09:	or     eax,0x580321cb
  404c0e:	jmp    0x404c6d
  404c10:	iret   
  404c11:	inc    esi
  404c12:	cdq    
  404c13:	je     0x404c8a
  404c15:	div    DWORD PTR [esp+eax*4-0x694c4e2b]
  404c1c:	adc    ebp,ebx
  404c1e:	mov    bl,0xb1
  404c20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c21:	scas   eax,DWORD PTR es:[edi]
  404c22:	adc    ebx,edx
  404c24:	mov    cl,0x7e
  404c26:	les    ebp,FWORD PTR [esi]
  404c28:	ss aaa 
  404c2a:	lock jg 0x404bd9
  404c2d:	and    bh,BYTE PTR ds:0xdadc03e4
  404c33:	push   0xffffff82
  404c35:	mov    al,ds:0xc3a68901
  404c3a:	ret    0xd820
  404c3d:	into   
  404c3e:	das    
  404c3f:	ins    DWORD PTR es:[edi],dx
  404c40:	dec    esp
  404c41:	pop    edi
  404c42:	fistp  DWORD PTR [edi]
  404c44:	add    al,BYTE PTR ds:0x31b3666f
  404c4a:	xchg   edi,eax
  404c4b:	adc    al,0xf9
  404c4d:	ds adc eax,0x4e3309b7
  404c53:	stos   BYTE PTR es:[edi],al
  404c54:	mov    cl,0x62
  404c56:	div    DWORD PTR [ebp+0x18458a94]
  404c5c:	jg     0x404c2b
  404c5e:	jp     0x404c4f
  404c60:	jmp    0x671d:0xa6982ab6
  404c67:	iret   
  404c68:	pop    esi
  404c69:	jmp    0x404c53
  404c6b:	adc    BYTE PTR [ebx],0x59
  404c6e:	sub    al,0xee
  404c70:	mov    cl,0x8c
  404c72:	test   BYTE PTR [eax-0x9],dl
  404c75:	hlt    
  404c76:	dec    edx
  404c77:	dec    ebx
  404c78:	xor    al,0xe7
  404c7a:	vmovapd xmm2,XMMWORD PTR [ecx]
  404c7e:	lock call 0xad49:0x4581a0fa
  404c86:	cmc    
  404c87:	and    edi,DWORD PTR [eax+0x42]
  404c8a:	sub    BYTE PTR [ebx-0x3a7ad5a7],ah
  404c90:	mov    eax,ds:0x5a3814b1
  404c95:	dec    ebx
  404c96:	push   ebp
  404c97:	mov    edi,0x97a7cf79
  404c9c:	retf   
  404c9d:	into   
  404c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c9f:	mov    ah,0xe0
  404ca1:	pushf  
  404ca2:	push   eax
  404ca3:	add    esp,esp
  404ca5:	push   edi
  404ca6:	ins    BYTE PTR es:[edi],dx
  404ca7:	jbe    0x404d1c
  404ca9:	fidivr WORD PTR [edx-0x75]
  404cac:	mov    eax,ds:0x8cfa301c
  404cb1:	jae    0x404cb8
  404cb3:	push   ss
  404cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cb5:	jae    0x404ccd
  404cb7:	sahf   
  404cb8:	ss jmp 0x640e:0x9c6d22ea
  404cc0:	push   ebx
  404cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cc2:	sbb    ch,cl
  404cc4:	ret    0x6362
  404cc7:	add    BYTE PTR [edi+0x35ce7ba],bh
  404ccd:	lahf   
  404cce:	push   es
  404ccf:	fistp  WORD PTR [ebx+0x3145fbc0]
  404cd5:	sub    bl,BYTE PTR [edi]
  404cd7:	out    dx,eax
  404cd8:	xchg   ebx,eax
  404cd9:	aas    
  404cda:	loop   0x404cfb
  404cdc:	add    BYTE PTR [ebx-0x3632fa56],al
  404ce2:	sub    DWORD PTR [edi-0x35a52d1c],eax
  404ce8:	dec    esi
  404ce9:	pop    es
  404cea:	xchg   ebx,eax
  404ceb:	out    dx,eax
  404cec:	inc    ebp
  404ced:	das    
  404cee:	and    dh,cl
  404cf0:	rcr    esi,1
  404cf2:	dec    esp
  404cf3:	inc    esi
  404cf4:	pop    esp
  404cf5:	sar    DWORD PTR [ebx+edi*1+0x30511253],1
  404cfc:	adc    eax,0x7dfaf27b
  404d01:	inc    eax
  404d02:	xor    dl,BYTE PTR [ebx-0x52]
  404d05:	imul   ebx,DWORD PTR [ecx-0x13b99bde],0xd7b88ab8
  404d0f:	icebp  
  404d10:	inc    di
  404d12:	push   ecx
  404d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d14:	jo     0x404cca
  404d16:	stos   BYTE PTR es:[edi],al
  404d17:	mov    eax,0xaae5ff6b
  404d1c:	pop    ebp
  404d1d:	pop    ecx
  404d1e:	sbb    eax,0xfcb3ad11
  404d23:	test   al,0x61
  404d25:	inc    ebx
  404d26:	cmp    al,bl
  404d28:	mov    WORD PTR [ebx],gs
  404d2a:	jge    0x404d4c
  404d2c:	mov    ch,0xb7
  404d2e:	nop
  404d2f:	cli    
  404d30:	loop   0x404d29
  404d32:	mov    al,0xfc
  404d34:	ficomp DWORD PTR [eax]
  404d36:	fild   QWORD PTR [ebx+0x12d80ad3]
  404d3c:	jne    0x404d85
  404d3e:	mov    ds:0xda21c050,eax
  404d43:	xchg   edi,eax
  404d44:	int3   
  404d45:	sahf   
  404d46:	daa    
  404d47:	jmp    0x404d5f
  404d49:	mov    edx,0x8ba4c476
  404d4e:	push   edx
  404d4f:	jbe    0x404dbe
  404d51:	cld    
  404d52:	xchg   DWORD PTR [edx+0x6f],eax
  404d55:	repz or al,0x69
  404d58:	xchg   ecx,eax
  404d59:	stos   BYTE PTR es:[edi],al
  404d5a:	dec    esi
  404d5b:	imul   ebp,DWORD PTR [esi+0x5eddcdb8],0x5
  404d62:	or     esi,DWORD PTR [ebx]
  404d64:	push   0x11
  404d66:	xchg   edx,eax
  404d67:	jbe    0x404d47
  404d69:	inc    eax
  404d6a:	mov    edx,DWORD PTR [ecx+0x4f]
  404d6d:	sub    edx,0x82eb449
  404d73:	push   eax
  404d74:	int3   
  404d75:	mov    esi,0x5b17b588
  404d7a:	aam    0xb8
  404d7c:	inc    ebp
  404d7d:	data16 out dx,al
  404d7f:	outs   dx,DWORD PTR ds:[esi]
  404d80:	adc    DWORD PTR [edx+0x2cb2398a],ecx
  404d86:	fisttp WORD PTR [edi]
  404d88:	dec    esi
  404d89:	test   BYTE PTR [esi],ah
  404d8b:	leave  
  404d8c:	jbe    0x404d82
  404d8e:	xor    ecx,DWORD PTR [esi]
  404d90:	sar    ah,cl
  404d92:	inc    ebp
  404d93:	ficomp DWORD PTR [ecx-0x62]
  404d96:	and    bh,bl
  404d98:	(bad)  
  404d99:	call   0xde2bc795
  404d9e:	test   al,0xbd
  404da0:	ins    BYTE PTR es:[edi],dx
  404da1:	aad    0x4d
  404da3:	imul   eax,edx,0x2b8b14ce
  404da9:	adc    esp,esp
  404dab:	call   0xef8e7c18
  404db0:	xlat   BYTE PTR ds:[ebx]
  404db1:	shl    BYTE PTR [eax-0x18bbd88d],0xa2
  404db8:	jecxz  0x404d6d
  404dba:	dec    edi
  404dbb:	xor    al,0x86
  404dbd:	pop    esi
  404dbe:	outs   dx,DWORD PTR ds:[esi]
  404dbf:	jg     0x404dc0
  404dc1:	outs   dx,BYTE PTR ds:[esi]
  404dc2:	icebp  
  404dc3:	pop    edi
  404dc4:	and    BYTE PTR [ebp+0x7a],dl
  404dc7:	mov    esp,0xbdfa3807
  404dcc:	mov    edi,0xc232d681
  404dd1:	xchg   bl,bl
  404dd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dd4:	pop    ebp
  404dd5:	cmp    dl,dl
  404dd7:	inc    ecx
  404dd8:	and    al,0xff
  404dda:	aad    0x7a
  404ddc:	retf   
  404ddd:	aaa    
  404dde:	pop    es
  404ddf:	cmp    DWORD PTR [eax],ebp
  404de1:	dec    edi
  404de2:	jecxz  0x404d82
  404de4:	cmp    edx,DWORD PTR [esp+ebp*8+0x704bde69]
  404deb:	adc    esi,ecx
  404ded:	jae    0x404dbf
  404def:	adc    BYTE PTR [edi+0x66],ch
  404df2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404df3:	push   eax
  404df4:	adc    DWORD PTR [ebp-0x52],edx
  404df7:	or     ebx,DWORD PTR [esi+0xb71c88a]
  404dfd:	push   eax
  404dfe:	sbb    DWORD PTR cs:[esi+0x5f4f704c],esp
  404e05:	call   0x1254:0xfd914d1e
  404e0c:	cmp    eax,0x43cefcd
  404e11:	dec    esi
  404e12:	dec    esi
  404e13:	mov    eax,ds:0xf4aae240
  404e18:	mov    ah,0x35
  404e1a:	inc    ebx
  404e1b:	mov    ds:0x15bd6c4e,al
  404e20:	mov    ds:0x98670578,al
  404e25:	jmp    0x10c4d451
  404e2a:	cmp    eax,DWORD PTR [ecx-0x7503e2ae]
  404e30:	sbb    DWORD PTR [eax+0xb68cac3],esp
  404e36:	jb     0x404e07
  404e38:	jno    0x404e6a
  404e3a:	or     al,0x60
  404e3c:	xchg   ebp,eax
  404e3d:	ret    0xa08f
  404e40:	ficom  WORD PTR [esp+edx*1-0xe443c49]
  404e47:	xchg   BYTE PTR [edx-0x5b],bh
  404e4a:	sahf   
  404e4b:	and    eax,0x1501d753
  404e50:	adc    esi,eax
  404e52:	push   ss
  404e53:	jb     0x404e24
  404e55:	shl    DWORD PTR [ebx],cl
  404e57:	cmp    eax,0xc43c606a
  404e5c:	add    al,0x50
  404e5e:	mov    esi,0x1b463749
  404e63:	jmp    0x404e28
  404e65:	(bad)  
  404e66:	in     eax,0x2d
  404e68:	jne    0x404e0d
  404e6a:	int    0xbf
  404e6c:	pop    esp
  404e6d:	ins    BYTE PTR es:[edi],dx
  404e6e:	repz std 
  404e70:	loopne 0x404e77
  404e72:	pushf  
  404e73:	and    eax,0x41c72374
  404e78:	jns    0x404e4f
  404e7a:	out    dx,eax
  404e7b:	xor    DWORD PTR ds:0x8741e9aa,edi
  404e81:	fcom   st(4)
  404e83:	repnz push ebp
  404e85:	inc    ebp
  404e86:	push   esp
  404e87:	cmp    cl,BYTE PTR [edi-0x45]
  404e8a:	stos   BYTE PTR es:[edi],al
  404e8b:	and    esp,DWORD PTR [eax-0x69d03415]
  404e91:	push   cs
  404e92:	lock hlt 
  404e94:	mov    edi,0xc37cac6
  404e99:	ins    DWORD PTR es:[edi],dx
  404e9a:	sbb    BYTE PTR [esi-0x126e5c01],0x24
  404ea1:	or     eax,0x8e1897c
  404ea6:	jbe    0x404ed5
  404ea8:	mov    ds:0xd808a667,eax
  404ead:	pop    ds
  404eae:	jnp    0x404e78
  404eb0:	enter  0x8f44,0x30
  404eb4:	rcl    BYTE PTR [esi+0x36],1
  404eb7:	push   esp
  404eb8:	or     eax,0x6bd4c1f1
  404ebd:	js     0x404efa
  404ebf:	pop    ebp
  404ec0:	mov    ds:0xa12fbc8a,eax
  404ec5:	out    0x49,al
  404ec7:	popa   
  404ec8:	fsub   DWORD PTR [edx-0x48]
  404ecb:	stos   BYTE PTR es:[edi],al
  404ecc:	je     0x404f09
  404ece:	in     eax,0x13
  404ed0:	pop    esi
  404ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ed2:	push   esp
  404ed3:	jge    0x404ece
  404ed5:	inc    edi
  404ed6:	add    al,0xea
  404ed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ed9:	outs   dx,DWORD PTR ds:[esi]
  404eda:	ja     0x404f29
  404edc:	pop    ds
  404edd:	outs   dx,BYTE PTR ds:[esi]
  404ede:	aam    0x49
  404ee0:	cld    
  404ee1:	inc    esi
  404ee2:	push   esi
  404ee3:	pop    ecx
  404ee4:	aaa    
  404ee5:	xor    bl,cl
  404ee7:	pop    ss
  404ee8:	das    
  404ee9:	sbb    BYTE PTR ds:0x7fb70f2f,ah
  404eef:	sub    cl,BYTE PTR [edx+0x20]
  404ef2:	in     eax,0x23
  404ef4:	or     al,0x99
  404ef6:	retf   
  404ef7:	mov    bh,0x62
  404ef9:	loop   0x404eb2
  404efb:	aas    
  404efc:	imul   ecx,ecx,0x3a
  404eff:	das    
  404f00:	jae    0x404f71
  404f02:	daa    
  404f03:	cmp    DWORD PTR [ebp+0x44],ebx
  404f06:	clc    
  404f07:	jmp    0x22b1:0x15728e3b
  404f0e:	and    eax,0xdcf51e4
  404f13:	sub    ah,dl
  404f15:	cli    
  404f16:	call   0x78b9:0xa7c15e39
  404f1d:	jae    0x404eab
  404f1f:	lock dec edx
  404f21:	lea    ebx,[eax+eax*2-0x15]
  404f25:	sub    BYTE PTR [si+0x62bc],dh
  404f2a:	adc    al,0x92
  404f2c:	mov    ds:0x3c686791,eax
  404f31:	ffree  st(7)
  404f33:	sub    BYTE PTR [ebp+0x2afc0b9a],0x6f
  404f3a:	jp     0x404f91
  404f3c:	ficomp DWORD PTR [eax]
  404f3e:	pop    ds
  404f3f:	fldenv [ebp-0x7117e7d2]
  404f45:	sbb    dl,BYTE PTR [edi+0x55]
  404f48:	js     0x404f14
  404f4a:	push   edx
  404f4b:	or     eax,0xf000f115
  404f50:	push   0x6a
  404f52:	int3   
  404f53:	pop    edx
  404f54:	xchg   ebx,eax
  404f55:	jo     0x404f0e
  404f57:	mov    edx,0x7c863b32
  404f5c:	mov    gs,WORD PTR [eax]
  404f5e:	sbb    eax,0x3a3a087e
  404f63:	cmp    al,0x76
  404f65:	xchg   edx,eax
  404f66:	fucomp st(6)
  404f68:	rcr    BYTE PTR [eax+0x4e],0xfb
  404f6c:	aaa    
  404f6d:	fcom   QWORD PTR [esi-0x5]
  404f70:	dec    ecx
  404f71:	xor    eax,0x845607b1
  404f76:	ficomp DWORD PTR [esi+0x4a]
  404f79:	mov    edx,0xa3b7127b
  404f7e:	mov    ch,0x6d
  404f80:	xchg   BYTE PTR [eax+0x4c3dd6f7],al
  404f86:	call   0xc483a45
  404f8b:	push   edi
  404f8c:	inc    esi
  404f8d:	adc    DWORD PTR [eax-0x1625dd70],edi
  404f93:	fsub   QWORD PTR [edi-0xa7740fc]
  404f99:	sbb    BYTE PTR [eax-0x80],bl
  404f9c:	push   esp
  404f9d:	mov    ds:0xc85f6932,eax
  404fa2:	in     al,0x34
  404fa4:	sbb    eax,0x83a1cf4b
  404fa9:	xchg   esp,eax
  404faa:	test   BYTE PTR [edx+0x13880b7d],dl
  404fb0:	push   ecx
  404fb1:	jl     0x404fcb
  404fb3:	xor    al,0x52
  404fb5:	jae    0x404f5f
  404fb7:	fmulp  st(5),st
  404fb9:	neg    DWORD PTR [ebp-0x3d134c1d]
  404fbf:	add    BYTE PTR [esi-0x18],dl
  404fc2:	test   BYTE PTR [ebx+0x7f],bl
  404fc5:	mov    ch,0xea
  404fc7:	mov    bh,0x7f
  404fc9:	mov    eax,0x7193e87a
  404fce:	repnz call 0x55a8:0x9f05f716
  404fd6:	mov    ecx,0x2b4e1fb8
  404fdb:	imul   eax,DWORD PTR [edi],0x19417134
  404fe1:	das    
  404fe2:	out    0x5d,eax
  404fe4:	cmp    al,0xfd
  404fe6:	sub    dh,BYTE PTR [esi]
  404fe8:	mov    bl,0xab
  404fea:	div    DWORD PTR [edi+0x54]
  404fed:	dec    ebp
  404fee:	add    bl,bl
  404ff0:	shl    DWORD PTR [ebp-0x2c],1
  404ff3:	pop    ebp
  404ff4:	jae    0x404f98
  404ff6:	gs sahf 
  404ff8:	sbb    eax,eax
  404ffa:	int3   
  404ffb:	push   ds
  404ffc:	jae    0x40503f
  404ffe:	sub    eax,DWORD PTR [eax+0x35]
  405001:	dec    ebx
  405002:	xchg   BYTE PTR [edi],cl
  405004:	adc    DWORD PTR [edi+esi*4],esp
  405007:	dec    esi
  405008:	jle    0x404fe5
  40500a:	aam    0xb8
  40500c:	push   edi
  40500d:	addr16 daa 
  40500f:	sub    BYTE PTR [ebp-0x3d32c7cd],ah
  405015:	ficomp DWORD PTR [esi+0x3b]
  405018:	fwait
  405019:	inc    ebp
  40501a:	mov    edi,DWORD PTR [edx+0x190201a2]
  405020:	inc    esp
  405021:	js     0x405075
  405023:	push   esp
  405024:	jae    0x404fdb
  405026:	xchg   ebx,eax
  405027:	mov    edi,0x8717c4f2
  40502c:	dec    esp
  40502d:	cmp    edx,DWORD PTR [edx]
  40502f:	pushf  
  405030:	push   ds
  405031:	fs loopne 0x405076
  405034:	xor    eax,0xc6d10f16
  405039:	adc    edi,DWORD PTR [ebx]
  40503b:	add    al,0xae
  40503d:	push   esi
  40503e:	cwde   
  40503f:	dec    ecx
  405040:	lods   eax,DWORD PTR ds:[esi]
  405041:	ror    BYTE PTR [ebp+0x14e0a8af],cl
  405047:	sub    al,0x7f
  405049:	fs or  eax,0xf0184f5a
  40504f:	enter  0xf725,0x68
  405053:	fadd   QWORD PTR [edi-0xa]
  405056:	xchg   edi,eax
  405057:	cli    
  405058:	inc    edx
  405059:	aaa    
  40505a:	loopne 0x404ff9
  40505c:	aas    
  40505d:	sub    DWORD PTR [ebx],ebx
  40505f:	xlat   BYTE PTR ds:[ebx]
  405060:	sbb    eax,0x8f8cedfc
  405065:	mov    WORD PTR [edi+0x6e],?
  405068:	push   ds
  405069:	bound  ebx,QWORD PTR [edi+0x5ec29f82]
  40506f:	inc    esp
  405070:	jg     0x404ff4
  405072:	repnz push edi
  405074:	and    DWORD PTR [esi+0x1],eax
  405077:	or     ecx,DWORD PTR [edi]
  405079:	mov    BYTE PTR [ecx],dh
  40507b:	pop    esp
  40507c:	hlt    
  40507d:	fnstcw WORD PTR [eax+eiz*8]
  405080:	pop    es
  405081:	mov    ecx,ebx
  405083:	lahf   
  405084:	jb     0x405035
  405086:	push   ss
  405087:	into   
  405088:	push   cs
  405089:	lea    edi,[eax+0x7b27f6b9]
  40508f:	js     0x405070
  405091:	xchg   BYTE PTR [ecx+0x12],ah
  405094:	hlt    
  405095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405096:	sar    DWORD PTR ds:0xbc415808,0x1c
  40509d:	icebp  
  40509e:	inc    esi
  40509f:	jo     0x405093
  4050a1:	mov    ss,WORD PTR [ecx-0x16]
  4050a4:	or     eax,0x4742a072
  4050a9:	inc    edi
  4050aa:	add    BYTE PTR [ebp+0x5baedc13],bh
  4050b0:	cmp    bh,ah
  4050b2:	ins    DWORD PTR es:[edi],dx
  4050b3:	addr16 je 0x4050b7
  4050b6:	fistp  DWORD PTR [edi+0x3a76ff2f]
  4050bc:	add    BYTE PTR [edi+0x7c],0x9d
  4050c0:	mov    BYTE PTR [ebx+0x19],dh
  4050c3:	rcl    DWORD PTR [edi+ecx*8-0x68],0xfb
  4050c8:	(bad)  
  4050c9:	retf   
  4050ca:	pop    esp
  4050cb:	daa    
  4050cc:	inc    ebx
  4050cd:	push   ds
  4050ce:	retf   0x4366
  4050d1:	push   edi
  4050d2:	retf   0x9f01
  4050d5:	nop
  4050d6:	cmc    
  4050d7:	pop    ebx
  4050d8:	or     dh,bl
  4050da:	mov    edx,0x56da1f1e
  4050df:	inc    esp
  4050e0:	fcomp  QWORD PTR [edx]
  4050e2:	mov    dl,0x1b
  4050e4:	sub    dl,bh
  4050e6:	and    al,dh
  4050e8:	or     DWORD PTR [ebx+0x3be3d7e5],ebx
  4050ee:	mov    BYTE PTR [eax],cl
  4050f0:	xor    esp,DWORD PTR [edx]
  4050f2:	push   eax
  4050f3:	dec    edi
  4050f4:	popa   
  4050f5:	xchg   ebx,eax
  4050f6:	mov    esi,0xef171e79
  4050fb:	xchg   DWORD PTR [eax-0x6794c184],ebx
  405101:	loopne 0x405117
  405103:	dec    esp
  405104:	pop    ebx
  405105:	out    dx,al
  405106:	mov    dh,0x3e
  405108:	icebp  
  405109:	(bad)  
  40510a:	cld    
  40510b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40510c:	pop    es
  40510d:	(bad)  
  40510e:	(bad)  
  40510f:	gs pop ecx
  405111:	xlat   BYTE PTR ds:[ebx]
  405112:	inc    edi
  405113:	jecxz  0x405126
  405115:	test   al,0x65
  405117:	idiv   BYTE PTR [ecx-0x6d77c1f8]
  40511d:	xchg   esp,eax
  40511e:	loop   0x405185
  405120:	ret    
  405121:	arpl   WORD PTR gs:[esi+0x7195ad21],di
  405128:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405129:	mov    esp,0x51dc3b39
  40512e:	pop    ebp
  40512f:	(bad)
  405133:	or     DWORD PTR [edi+0x10d23afd],eax
  405139:	push   ss
  40513a:	int3   
  40513b:	in     eax,dx
  40513c:	or     ax,0x87a1
  405140:	jg     0x4050e4
  405142:	push   esp
  405143:	gs pusha 
  405145:	inc    ecx
  405146:	test   eax,0xd5ed2120
  40514b:	xlat   BYTE PTR ds:[bx]
  40514d:	data16 add al,0xef
  405150:	mov    edx,0xa077b791
  405155:	mov    BYTE PTR [esi],bl
  405157:	scas   eax,DWORD PTR es:[edi]
  405158:	jmp    0xd966:0xf83f41b8
  40515f:	sub    eax,0xa7ae77e6
  405164:	pop    ds
  405165:	cmp    BYTE PTR [ecx-0x71fdb627],ch
  40516b:	jae    0x4051df
  40516d:	or     ecx,DWORD PTR ds:0xecfcc0f7
  405173:	sub    eax,0x81fdf1b7
  405178:	xchg   edx,eax
  405179:	aad    0x8
  40517b:	add    BYTE PTR [eax-0x28],ch
  40517e:	xchg   edx,eax
  40517f:	aad    0xe7
  405181:	sbb    DWORD PTR [ecx-0x10],eax
  405184:	and    eax,0xa222a5b7
  405189:	repz scas eax,DWORD PTR es:[edi]
  40518b:	jbe    0x405205
  40518d:	adc    al,0xf3
  40518f:	xchg   BYTE PTR [esi-0x4a],cl
  405192:	and    al,0x84
  405194:	inc    ecx
  405195:	cdq    
  405196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405197:	or     eax,0xbdae5a8d
  40519c:	add    DWORD PTR [esi-0x4f],ecx
  40519f:	and    DWORD PTR [edx+edi*4],0xffffffe4
  4051a3:	js     0x405170
  4051a5:	pop    ecx
  4051a6:	mov    edx,0x70fb8223
  4051ab:	test   al,0xa1
  4051ad:	or     ecx,edx
  4051af:	lea    ebp,[ecx-0x3e]
  4051b2:	ror    esp,1
  4051b4:	hlt    
  4051b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051b6:	mov    al,ds:0x546a0056
  4051bb:	xchg   ebp,eax
  4051bc:	cmp    eax,0x5e561fa0
  4051c1:	pop    eax
  4051c2:	jbe    0x40517a
  4051c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051c5:	fcom   DWORD PTR [ebp+0x4ad0cdde]
  4051cb:	cmp    DWORD PTR [edx+ebx*8],esi
  4051ce:	imul   edi,esi,0x5c16e61d
  4051d4:	or     DWORD PTR [edi+ebp*1+0x3a000765],ebx
  4051db:	push   ebx
  4051dc:	inc    edi
  4051dd:	jp     0x405257
  4051df:	rol    DWORD PTR [ecx+0x66],0xc2
  4051e3:	mov    bh,0x92
  4051e5:	adc    cl,BYTE PTR [edi-0x6c]
  4051e8:	sbb    edx,DWORD PTR [eax]
  4051ea:	(bad)  
  4051eb:	cmp    eax,0xad54fe
  4051f0:	push   ebx
  4051f1:	cs mov dh,0x5c
  4051f4:	add    bh,BYTE PTR [esi+0x1f2d255b]
  4051fa:	les    edi,FWORD PTR [esi+0x76]
  4051fd:	outs   dx,BYTE PTR ds:[esi]
  4051fe:	call   0x7aa6:0x9a961f74
  405205:	jl     0x4051a6
  405207:	xor    edi,eax
  405209:	pop    ss
  40520a:	jb     0x40519e
  40520c:	jl     0x4051ef
  40520e:	and    edx,DWORD PTR [si+0x4c]
  405212:	sub    DWORD PTR [ecx],ebx
  405214:	jnp    0x4051ea
  405216:	out    0x0,al
  405218:	xor    BYTE PTR [ebx+0x6ba8301d],bl
  40521e:	aam    0xb1
  405220:	call   0x6038614
  405225:	fdiv   QWORD PTR [edx+0x32]
  405228:	add    cl,ch
  40522a:	add    DWORD PTR fs:[eax],eax
  40522d:	add    BYTE PTR [ebx+0x4d03c84d],cl
  405233:	or     BYTE PTR [ecx+0x4d8bf04d],cl
  405239:	in     al,0x85
  40523b:	leave  
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0x15a594ee
  405804:	daa    
  405805:	sbb    al,ah
  405807:	pop    edi
  405808:	jl     0x405886
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	test   BYTE PTR [ebp+0x28],0x5b
  405812:	not    BYTE PTR [eax]
  405814:	sbb    al,0x67
  405816:	cmp    ecx,DWORD PTR [ebp+0x15]
  405819:	imul   ebx,DWORD PTR [ebp+0x29],0xffffffaf
  40581d:	ret    0x520c
  405820:	outs   dx,BYTE PTR ds:[esi]
  405821:	rcl    DWORD PTR [ecx+ebp*1],0xa6
  405825:	stos   BYTE PTR es:[edi],al
  405826:	cmp    DWORD PTR [esi+0x49],edx
  405829:	xor    bl,BYTE PTR [eax+esi*2+0x3f1d0477]
  405830:	in     eax,dx
  405831:	jge    0x40585d
  405833:	neg    BYTE PTR [esi+0x69de975d]
  405839:	int    0x89
  40583b:	dec    ecx
  40583c:	aad    0x4
  40583e:	push   ebx
  40583f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405840:	int    0x18
  405842:	and    eax,0x9d7d8922
  405847:	or     eax,0xff09f4c0
  40584c:	lods   eax,DWORD PTR ds:[esi]
  40584d:	ins    BYTE PTR es:[edi],dx
  40584e:	push   eax
  40584f:	stc    
  405850:	test   al,0xd4
  405852:	jmp    0x405801
  405854:	call   0x3d26:0x44481315
  40585b:	sbb    DWORD PTR [ecx+0x5720959],ebx
  405861:	add    DWORD PTR [ecx+0x3126f3ba],ebx
  405867:	ficom  WORD PTR [ecx-0x77b554bf]
  40586d:	mov    ecx,0xae7c0f81
  405872:	mov    ch,0x5f
  405874:	loopne 0x4058ce
  405876:	or     al,0x88
  405878:	lds    ebx,FWORD PTR [ecx-0x35]
  40587b:	sub    dh,BYTE PTR [edi]
  40587d:	call   0xc15ba986
  405882:	push   cs
  405883:	cmp    eax,0x6f30e304
  405888:	dec    eax
  405889:	jg     0x405838
  40588b:	sbb    dh,BYTE PTR [esi-0x48]
  40588e:	dec    esi
  40588f:	mov    ah,0x94
  405891:	or     al,bh
  405893:	mov    eax,ds:0x4496c6d3
  405898:	adc    DWORD PTR [ecx-0x66363d25],0x5e
  40589f:	in     eax,dx
  4058a0:	xchg   esp,eax
  4058a1:	out    0xaa,eax
  4058a3:	pop    esi
  4058a4:	test   DWORD PTR [ebp-0x3b],edi
  4058a7:	ror    DWORD PTR [eax+edx*4],0xf7
  4058ab:	push   ebp
  4058ac:	shl    ebx,0x54
  4058af:	pop    edi
  4058b0:	(bad)  
  4058b1:	adc    edi,edx
  4058b3:	(bad)  
  4058b4:	mov    al,ds:0xc21a3748
  4058b9:	mov    al,ds:0xc58c36ee
  4058be:	jl     0x40591c
  4058c0:	xchg   ecx,eax
  4058c1:	mov    bh,0x35
  4058c3:	mov    edx,cs
  4058c5:	mov    dl,0x1a
  4058c7:	inc    edx
  4058c8:	scas   al,BYTE PTR es:[edi]
  4058c9:	xchg   BYTE PTR [ecx],dh
  4058cb:	repz push 0x1c6de19d
  4058d1:	xor    cl,BYTE PTR [edx]
  4058d3:	dec    ecx
  4058d4:	scas   al,BYTE PTR es:[edi]
  4058d5:	popf   
  4058d6:	push   esi
  4058d7:	adc    bl,BYTE PTR [ebx]
  4058d9:	(bad)  [eax-0x23]
  4058dc:	push   esi
  4058dd:	jo     0x4058c1
  4058df:	daa    
  4058e0:	jns    0x40587b
  4058e2:	(bad)  
  4058e3:	cld    
  4058e4:	fisttp DWORD PTR [esi-0x448b93b1]
  4058ea:	rol    DWORD PTR [eax+0x768bfc37],0x1
  4058f1:	scas   eax,DWORD PTR es:[edi]
  4058f2:	cli    
  4058f3:	jmp    0x4058a9
  4058f5:	test   al,ch
  4058f7:	inc    esi
  4058f8:	mov    dh,0x5b
  4058fa:	and    ch,al
  4058fc:	push   cs
  4058fd:	push   cs
  4058fe:	(bad)
  405901:	mov    bl,0xeb
  405903:	stc    
  405904:	(bad)  
  405905:	pop    esp
  405906:	gs inc esp
  405908:	test   DWORD PTR [eax+0x6ba31690],esi
  40590e:	mov    eax,0x8f575e62
  405913:	loopne 0x40592a
  405915:	test   al,0x4d
  405917:	pop    eax
  405918:	push   esp
  405919:	je     0x40589c
  40591b:	mov    eax,0xedc12fb6
  405920:	xor    BYTE PTR [eax+0x22],0x8a
  405924:	sub    bh,BYTE PTR [edx]
  405926:	mov    edi,0x288fc293
  40592b:	xor    esp,DWORD PTR [edx-0x3a]
  40592e:	sbb    eax,0x8c846db
  405933:	aaa    
  405934:	sqrtps xmm1,XMMWORD PTR [edx]
  405937:	push   ebp
  405938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405939:	imul   ebx,DWORD PTR [esi+0xbd05f6e],0xffffffe4
  405940:	rcl    DWORD PTR [eax],1
  405942:	mov    eax,0x56c7fd70
  405947:	loopne 0x405983
  405949:	mov    edx,0x187d0852
  40594e:	dec    edx
  40594f:	push   0xc4a09f85
  405954:	sub    ebp,0xffffffa8
  405957:	pop    esi
  405958:	mov    bl,0x2c
  40595a:	sub    cl,bh
  40595c:	lods   al,BYTE PTR ds:[esi]
  40595d:	xchg   BYTE PTR [edi+0x55],bl
  405960:	shr    DWORD PTR [esi],0x6d
  405963:	loopne 0x4059e1
  405965:	jmp    0x40597f
  405967:	or     ebx,edi
  405969:	mov    ebp,?
  40596b:	(bad)  
  40596c:	xchg   ecx,eax
  40596d:	or     bh,ah
  40596f:	dec    ebp
  405970:	cmc    
  405971:	loopne 0x4058f6
  405973:	scas   al,BYTE PTR es:[edi]
  405974:	add    al,0xd0
  405976:	pop    eax
  405977:	out    0xcc,al
  405979:	xchg   edx,eax
  40597a:	sub    eax,0x428b02bf
  40597f:	or     ebp,ebp
  405981:	ror    BYTE PTR [ecx-0x3d278941],cl
  405987:	and    eax,0x9502c84a
  40598c:	not    DWORD PTR cs:[edi+0x4626b407]
  405993:	add    al,0x32
  405995:	sar    DWORD PTR [edi],cl
  405997:	pop    edx
  405998:	jg     0x405998
  40599a:	xchg   ebx,eax
  40599b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40599c:	inc    eax
  40599d:	scas   eax,DWORD PTR es:[edi]
  40599e:	pushf  
  40599f:	mov    ecx,0x95a689d4
  4059a4:	dec    ebx
  4059a5:	test   edi,esp
  4059a7:	xor    ch,ch
  4059a9:	les    ebx,FWORD PTR [edi+edx*4+0x50e8acf0]
  4059b0:	jbe    0x405966
  4059b2:	fst    QWORD PTR [esi-0x1a]
  4059b5:	jle    0x405996
  4059b7:	xchg   al,dl
  4059b9:	rcl    BYTE PTR [ebp+ebx*2-0x40],1
  4059bd:	pop    edi
  4059be:	(bad)  
  4059bf:	sbb    al,0x7f
  4059c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059c2:	rcr    edx,1
  4059c4:	push   cs
  4059c5:	(bad)  
  4059c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059c7:	adc    eax,eax
  4059c9:	test   BYTE PTR [ecx+0x48444c2],dl
  4059cf:	fmul   QWORD PTR [edi-0x896c480]
  4059d5:	adc    ebp,esi
  4059d7:	mov    ds:0x28bc9d21,al
  4059dc:	das    
  4059dd:	mov    cl,0x99
  4059df:	adc    al,0xbb
  4059e1:	and    eax,DWORD PTR [edx-0x34]
  4059e4:	retf   
  4059e5:	(bad)  
  4059e7:	or     eax,DWORD PTR [edx+0x149a0b15]
  4059ed:	lahf   
  4059ee:	into   
  4059ef:	ret    
  4059f0:	(bad)  
  4059f2:	dec    esp
  4059f3:	clc    
  4059f4:	push   esi
  4059f5:	ds push es
  4059f7:	cmp    BYTE PTR [ebx+eax*2-0x3d3a3ff3],ah
  4059fe:	adc    ah,BYTE PTR [esi+0x16d0e4f9]
  405a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a05:	mov    ds:0x55eb2f45,eax
  405a0a:	and    edi,DWORD PTR [ecx-0x4fc80acb]
  405a10:	xchg   edx,eax
  405a11:	sub    eax,0x47387492
  405a16:	push   ds
  405a17:	clc    
  405a18:	xchg   edx,eax
  405a19:	les    edx,FWORD PTR [esp+eiz*4+0x686f6f1c]
  405a20:	in     eax,0x96
  405a22:	fsub   DWORD PTR [ebx+0x7de61432]
  405a28:	aad    0xa4
  405a2a:	mov    ecx,0xfdc197
  405a2f:	dec    edx
  405a30:	pop    es
  405a31:	hlt    
  405a32:	inc    ecx
  405a33:	sbb    BYTE PTR [eax],0x6c
  405a36:	and    al,BYTE PTR [ebp-0x3bee793f]
  405a3c:	mov    BYTE PTR [ebx+0x4282da9f],al
  405a42:	iret   
  405a43:	add    BYTE PTR [ebx+ebp*1],0x72
  405a47:	xchg   esp,eax
  405a48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a49:	iret   
  405a4a:	add    DWORD PTR [ebx],ebx
  405a4c:	test   DWORD PTR [edi+0x2b],edi
  405a4f:	imul   esp,DWORD PTR [edi+eax*8-0x10],0x7e24088e
  405a57:	out    dx,al
  405a58:	mov    edi,0xa9d7cc08
  405a5d:	(bad)  
  405a5e:	xchg   DWORD PTR [esi],ecx
  405a60:	and    BYTE PTR [eax],ah
  405a62:	loope  0x405a85
  405a64:	and    BYTE PTR [edi],dh
  405a66:	fcom   QWORD PTR [esi-0x33]
  405a69:	pop    esp
  405a6a:	xlat   BYTE PTR ds:[ebx]
  405a6b:	pop    ss
  405a6c:	add    al,al
  405a6e:	cmp    ebp,DWORD PTR [edx]
  405a70:	addr16 mov ch,0x57
  405a73:	add    DWORD PTR [edx],ecx
  405a75:	mov    edi,0x46c8d3fb
  405a7a:	jmp    0x4910ada8
  405a7f:	pusha  
  405a80:	xor    DWORD PTR [ebp+0x4f3a6d1f],ebp
  405a86:	sahf   
  405a87:	sbb    edi,eax
  405a89:	out    0x81,eax
  405a8b:	inc    ebp
  405a8c:	mov    edx,0x8f7c3fad
  405a91:	leave  
  405a92:	in     al,0x96
  405a94:	popw   ds
  405a96:	out    0x4e,al
  405a98:	mov    ecx,0x5d9c8a78
  405a9d:	mov    edx,0x25ef6b38
  405aa2:	daa    
  405aa3:	and    ebp,eax
  405aa5:	jl     0x405ad7
  405aa7:	sar    DWORD PTR [ebx+0x1ce24a8b],0x5
  405aae:	cld    
  405aaf:	jne    0x405a87
  405ab1:	pop    esi
  405ab2:	xor    cl,ah
  405ab4:	jb     0x405aa9
  405ab6:	xor    esi,ecx
  405ab8:	setl   cl
  405abb:	jb     0x405a9f
  405abd:	mov    bh,al
  405abf:	arpl   di,bp
  405ac1:	pop    eax
  405ac2:	mov    edi,0x9a198068
  405ac7:	inc    esp
  405ac8:	push   edx
  405ac9:	aas    
  405aca:	sbb    BYTE PTR [ebx+0x76bfe39f],bl
  405ad0:	push   es
  405ad1:	ret    0x205d
  405ad4:	inc    ebx
  405ad5:	mov    dh,0xa
  405ad7:	daa    
  405ad8:	mov    ebp,0x2fe31e4d
  405add:	nop
  405ade:	je     0x405b2e
  405ae0:	inc    BYTE PTR [edi+0x31440968]
  405ae6:	enter  0xf91b,0xa2
  405aea:	or     cl,BYTE PTR [ebp-0x7c]
  405aed:	ret    0x4853
  405af0:	pushf  
  405af1:	mov    dl,0x8b
  405af3:	adc    edx,eax
  405af5:	sbb    BYTE PTR [ebx+0x1],al
  405af8:	shl    BYTE PTR [esi-0x7c],1
  405afb:	dec    ebx
  405afc:	(bad)  
  405afd:	mov    ebp,0xc4ea1570
  405b02:	scas   al,BYTE PTR es:[edi]
  405b03:	(bad)  
  405b04:	mov    ch,0x12
  405b06:	out    0xa3,al
  405b08:	test   al,0x27
  405b0a:	repz dec ebx
  405b0c:	ds xchg ebx,eax
  405b0e:	push   esi
  405b0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b10:	push   ebx
  405b11:	jg     0x405ab3
  405b13:	mov    esi,DWORD PTR [ecx+eax*2]
  405b16:	arpl   WORD PTR [edx-0x492ed354],di
  405b1c:	push   ecx
  405b1d:	(bad)  
  405b1e:	frstpm(287 only) 
  405b20:	sub    al,0x7b
  405b22:	loop   0x405ae7
  405b24:	jmp    0x405ae2
  405b26:	ffree  st(7)
  405b28:	push   es
  405b29:	pop    edi
  405b2a:	je     0x405b94
  405b2c:	in     al,0xdf
  405b2e:	adc    eax,0xe7ffbf40
  405b33:	xchg   edi,eax
  405b34:	xchg   edx,eax
  405b35:	in     eax,dx
  405b36:	out    0xfe,eax
  405b38:	jne    0x405aca
  405b3a:	mov    ebp,0xe1b46acd
  405b3f:	out    dx,al
  405b40:	cmp    cl,cl
  405b42:	ja     0x405b64
  405b44:	inc    edx
  405b45:	mov    ds:0xef04a568,eax
  405b4a:	cmc    
  405b4b:	ror    bl,cl
  405b4d:	dec    eax
  405b4e:	lds    eax,FWORD PTR [edx-0x57]
  405b51:	inc    edi
  405b52:	sbb    ebp,DWORD PTR [ebx-0x2e4f8fc8]
  405b58:	mov    ebx,0x63ae5880
  405b5d:	mov    eax,0x66381ba9
  405b62:	sub    al,0xd8
  405b64:	inc    esi
  405b65:	mov    dl,0x4d
  405b67:	mov    ah,BYTE PTR [esi]
  405b69:	in     al,0x55
  405b6b:	imul   esi,DWORD PTR [edi],0x856117bd
  405b71:	sub    eax,0x8f7e366c
  405b76:	jns    0x405bc4
  405b78:	scas   al,BYTE PTR es:[edi]
  405b79:	pop    esp
  405b7a:	cmp    DWORD PTR [ebx+eiz*4+0x1bed51c4],ebx
  405b81:	es f2xm1 
  405b84:	pop    esp
  405b85:	test   ch,ch
  405b87:	xchg   BYTE PTR [ebp-0x3b],bh
  405b8a:	clc    
  405b8b:	std    
  405b8c:	add    BYTE PTR [ecx+0x2e],cl
  405b8f:	es push ds
  405b91:	fsubr  DWORD PTR [eax]
  405b93:	mov    dl,0xb
  405b95:	and    al,BYTE PTR [ebp+0x3fee6b6c]
  405b9b:	xchg   esi,eax
  405b9c:	xor    eax,0x8d46a61
  405ba1:	retf   0x37f0
  405ba4:	mov    DWORD PTR [ecx],eax
  405ba6:	sub    esi,DWORD PTR [eax-0x5993cd7b]
  405bac:	or     edi,DWORD PTR cs:[edx+0x6e]
  405bb0:	fimul  WORD PTR [edi+0x7728999e]
  405bb6:	call   0x3cd4ac21
  405bbb:	inc    ecx
  405bbc:	xchg   edi,esi
  405bbe:	popa   
  405bbf:	imul   esp,DWORD PTR [edi],0x2
  405bc2:	inc    edi
  405bc3:	stos   DWORD PTR es:[edi],eax
  405bc4:	xchg   ecx,eax
  405bc5:	jecxz  0x405b5e
  405bc7:	retf   
  405bc8:	repz sbb ecx,DWORD PTR [edi-0x23]
  405bcc:	ret    0x7aca
  405bcf:	lods   eax,DWORD PTR ds:[esi]
  405bd0:	fld    QWORD PTR [esi-0x12f08f7c]
  405bd6:	ret    0x1c64
  405bd9:	sbb    DWORD PTR [esi-0x6619f5c4],ecx
  405bdf:	gs out 0xfc,al
  405be2:	cmp    esi,edi
  405be4:	add    edi,DWORD PTR [esi+esi*4+0xe]
  405be8:	out    0x53,al
  405bea:	push   esp
  405beb:	stc    
  405bec:	repz iret 
  405bee:	sub    DWORD PTR [ebx-0x4bda229d],ebx
  405bf4:	mov    edi,DWORD PTR [ebx]
  405bf6:	mov    esi,0xc94e90b3
  405bfb:	pop    ebp
  405bfc:	in     eax,dx
  405bfd:	push   0x7f6d4ea9
  405c02:	push   0x3ddde591
  405c07:	(bad)  
  405c08:	enter  0xbc45,0x95
  405c0c:	sub    ch,BYTE PTR [eax+0x14cb5917]
  405c12:	sbb    ebp,ecx
  405c14:	das    
  405c15:	fbstp  TBYTE PTR [ecx-0x42d085e1]
  405c1b:	pop    ss
  405c1c:	sahf   
  405c1d:	int    0x57
  405c1f:	popf   
  405c20:	adc    eax,0xb7a8cad
  405c25:	sbb    ah,BYTE PTR [ecx+ebx*4]
  405c28:	sbb    edx,DWORD PTR [edx-0x688bd53d]
  405c2e:	test   BYTE PTR [ebp+0x12],ah
  405c31:	push   esp
  405c32:	ret    
  405c33:	push   ss
  405c34:	pop    ebx
  405c35:	outs   dx,DWORD PTR ds:[esi]
  405c36:	or     BYTE PTR [eax-0x34],bh
  405c39:	outs   dx,DWORD PTR ds:[esi]
  405c3a:	dec    esi
  405c3b:	or     ch,BYTE PTR [eax]
  405c3d:	mov    al,0xc
  405c3f:	xor    BYTE PTR [esi],bl
  405c41:	sahf   
  405c42:	jle    0x405be0
  405c44:	cmp    BYTE PTR [eax],dl
  405c46:	and    ch,bl
  405c48:	sbb    DWORD PTR [ebx],edx
  405c4a:	jl     0x405cb4
  405c4c:	repz inc esi
  405c4e:	sub    al,0x80
  405c50:	or     cl,BYTE PTR [edx]
  405c52:	xchg   edx,eax
  405c53:	js     0x405c83
  405c55:	arpl   WORD PTR [esi],ax
  405c57:	inc    esp
  405c58:	inc    ebx
  405c59:	shr    edx,1
  405c5b:	imul   edx,DWORD PTR [edx-0x4c],0x60
  405c5f:	xchg   DWORD PTR [eax],edi
  405c61:	(bad)  
  405c62:	cmp    eax,0xbded7760
  405c67:	adc    ah,BYTE PTR [edi*8+0xeb24ad4]
  405c6e:	aad    0x75
  405c70:	retf   
  405c71:	imul   esi,DWORD PTR [edi+0x28106133],0x1cdebc1b
  405c7b:	dec    esi
  405c7c:	enter  0x3674,0x4c
  405c80:	mov    eax,esi
  405c82:	xchg   esp,eax
  405c83:	ret    0x1037
  405c86:	pushf  
  405c87:	fcomp  QWORD PTR [edx+0x14]
  405c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c8b:	and    DWORD PTR [ecx+0x4ae25d59],ebp
  405c91:	push   cs
  405c92:	lods   al,BYTE PTR ds:[esi]
  405c93:	sahf   
  405c94:	cwde   
  405c95:	rol    DWORD PTR [edx-0x4f],cl
  405c98:	dec    ebp
  405c99:	adc    bh,bl
  405c9b:	push   es
  405c9c:	cld    
  405c9d:	frstor [edx-0xc]
  405ca0:	jbe    0x405d10
  405ca2:	adc    edx,DWORD PTR [esi+0x38a153a5]
  405ca8:	div    BYTE PTR [esi-0x39]
  405cab:	lods   eax,DWORD PTR ds:[esi]
  405cac:	std    
  405cad:	test   DWORD PTR [esi+0x79],ebx
  405cb0:	jecxz  0x405c34
  405cb2:	push   0x40
  405cb4:	dec    esp
  405cb5:	xor    DWORD PTR [edi],edx
  405cb7:	pop    es
  405cb8:	inc    ebx
  405cb9:	mov    al,ds:0xf25051d5
  405cbe:	xchg   edi,eax
  405cbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cc0:	mov    ah,0xda
  405cc2:	cs push es
  405cc4:	adc    DWORD PTR [edi],esp
  405cc6:	pop    edi
  405cc7:	xchg   esp,eax
  405cc8:	adc    eax,0x484c29b4
  405ccd:	dec    ebp
  405cce:	js     0x405ce1
  405cd0:	jo     0x405cef
  405cd2:	cld    
  405cd3:	cmp    dh,BYTE PTR [edx-0x63]
  405cd6:	pop    es
  405cd7:	and    esp,esp
  405cd9:	inc    edi
  405cda:	mov    ?,WORD PTR [ebp+0x5241103f]
  405ce0:	fldcw  WORD PTR [eax]
  405ce2:	or     ebp,DWORD PTR [ebp-0x1c9fd116]
  405ce8:	test   eax,0xc6cd9cb6
  405ced:	xchg   DWORD PTR ds:0xf2c9157c,ebp
  405cf3:	push   es
  405cf4:	(bad)  
  405cf5:	fucom  st(3)
  405cf7:	data16 jnp 0x405cd6
  405cfa:	cmp    bl,BYTE PTR [ecx-0x6f]
  405cfd:	pop    ecx
  405cfe:	repz mov al,ds:0x6e8f8319
  405d04:	pop    esp
  405d05:	fiadd  DWORD PTR [esi]
  405d07:	rcr    dl,cl
  405d09:	ret    
  405d0a:	jbe    0x405c9f
  405d0c:	cmp    edi,ecx
  405d0e:	adc    al,al
  405d10:	inc    ecx
  405d11:	mov    al,0x61
  405d13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d14:	test   DWORD PTR [ebx],ebp
  405d16:	cmp    al,0x6d
  405d18:	rcr    esp,0xc0
  405d1b:	jo     0x405d3a
  405d1d:	and    ebx,DWORD PTR [edx-0x76]
  405d20:	popa   
  405d21:	dec    edi
  405d22:	mov    dh,BYTE PTR [ecx+0x2]
  405d25:	stc    
  405d26:	repnz invd 
  405d29:	mov    ecx,0xb7ec42e6
  405d2e:	(bad)  [edx+0x434b90ce]
  405d34:	int3   
  405d35:	and    BYTE PTR [eax*2-0x73c43a57],ch
  405d3c:	aas    
  405d3d:	jnp    0x405d37
  405d3f:	enter  0x508b,0xa7
  405d43:	sbb    ah,BYTE PTR [edx-0x9c33fbf]
  405d49:	adc    eax,DWORD PTR [edx]
  405d4b:	xchg   eax,ecx
  405d4d:	xchg   BYTE PTR [ebp+0x9],al
  405d50:	cmp    ecx,DWORD PTR [ebp-0x1cb22871]
  405d56:	and    ebp,DWORD PTR [eax]
  405d58:	xor    esp,DWORD PTR [ebp+esi*8-0x6c]
  405d5c:	mov    esi,DWORD PTR [ecx-0xe]
  405d5f:	and    edi,ebp
  405d61:	adc    ebx,DWORD PTR [ebx]
  405d63:	ds leave 
  405d65:	sub    eax,0xb8854591
  405d6a:	arpl   WORD PTR [esi-0x17],di
  405d6d:	fdiv   st(6),st
  405d6f:	int    0xb1
  405d71:	fcom   st(6)
  405d73:	int    0x48
  405d75:	mov    DWORD PTR [edi+edi*1],ecx
  405d78:	shl    BYTE PTR [esi-0x7072034f],1
  405d7e:	pusha  
  405d7f:	fwait
  405d80:	mov    ds:0xbe12e4fd,al
  405d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d86:	rcr    DWORD PTR [ecx+0x62762f03],cl
  405d8c:	inc    ebp
  405d8d:	or     al,0x6d
  405d8f:	adc    eax,0x88b07f3e
  405d94:	and    dh,BYTE PTR [edx+0x22]
  405d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d98:	cmp    ecx,edi
  405d9a:	and    edi,edi
  405d9c:	daa    
  405d9d:	aaa    
  405d9e:	sbb    al,BYTE PTR ds:0xb9e39b6
  405da4:	mov    dl,0x33
  405da6:	push   esp
  405da7:	hlt    
  405da8:	sub    DWORD PTR [edi-0x73],ebp
  405dab:	adc    al,0x44
  405dad:	pop    edx
  405dae:	push   0xffffffc4
  405db0:	mov    ds:0xd42abdcd,eax
  405db5:	jmp    0xc797037e
  405dba:	pop    esp
  405dbb:	fidiv  DWORD PTR [esi]
  405dbd:	aam    0xbd
  405dbf:	out    dx,al
  405dc0:	mov    al,0x12
  405dc2:	jo     0x405df1
  405dc4:	cdq    
  405dc5:	sar    DWORD PTR ds:[esi-0x2e],cl
  405dc9:	or     ebp,edx
  405dcb:	push   ebp
  405dcc:	outs   dx,DWORD PTR ds:[esi]
  405dcd:	(bad)  
  405dce:	test   DWORD PTR [edi-0x2bcd8798],0x87d13b72
  405dd8:	sub    eax,edx
  405dda:	test   BYTE PTR [eax-0x21],dh
  405ddd:	ins    BYTE PTR es:[edi],dx
  405dde:	dec    esi
  405ddf:	and    edi,DWORD PTR [ebx-0x1d6fd04c]
  405de5:	int3   
  405de6:	lods   eax,DWORD PTR ds:[esi]
  405de7:	ret    
  405de8:	dec    edi
  405de9:	dec    edi
  405dea:	jb     0x405e4a
  405dec:	jae    0x405dec
  405dee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405def:	and    bl,0xf2
  405df2:	bound  esp,QWORD PTR [esi-0x6cd522d6]
  405df8:	xchg   BYTE PTR [ebx-0x1cddcb2d],ah
  405dfe:	idiv   DWORD PTR [ecx-0xb497e28]
  405e04:	out    0x1f,al
  405e06:	(bad)  
  405e07:	out    0x70,eax
  405e09:	sub    al,0x18
  405e0b:	push   ds
  405e0c:	jb     0x405e1f
  405e0e:	mul    DWORD PTR [eax-0x8afad42]
  405e14:	pop    edx
  405e15:	cmp    BYTE PTR [edi],ah
  405e17:	push   eax
  405e18:	inc    esp
  405e19:	lea    esi,[ebp-0x5aeb8ae6]
  405e1f:	or     al,al
  405e21:	clc    
  405e22:	push   ss
  405e23:	scas   eax,DWORD PTR es:[edi]
  405e24:	or     eax,0x60ed2a75
  405e29:	out    dx,al
  405e2a:	or     ecx,DWORD PTR [esp+eax*8]
  405e2d:	dec    esi
  405e2e:	das    
  405e2f:	daa    
  405e30:	or     eax,0xb2df26c1
  405e35:	retf   0xb89
  405e38:	mov    al,ds:0x51988c13
  405e3d:	cmp    al,BYTE PTR [ebp+0x50762940]
  405e43:	xor    BYTE PTR [edx],dl
  405e45:	(bad)  [edx]
  405e47:	xchg   ecx,eax
  405e48:	push   es
  405e49:	lods   eax,DWORD PTR ds:[esi]
  405e4a:	adc    al,0x8d
  405e4c:	xchg   edi,eax
  405e4d:	out    0x1,al
  405e4f:	sbb    ecx,DWORD PTR ss:[edi-0x8]
  405e53:	jg     0x405e0d
  405e55:	stos   BYTE PTR es:[edi],al
  405e56:	jns    0x405def
  405e58:	outs   dx,DWORD PTR ds:[esi]
  405e59:	mov    bl,0x18
  405e5b:	lds    edx,FWORD PTR [edi]
  405e5d:	loopne 0x405dff
  405e5f:	pushf  
  405e60:	lahf   
  405e61:	nop
  405e62:	and    edi,DWORD PTR [edx+edi*4]
  405e65:	jnp    0x405e6a
  405e67:	push   0xffffffd0
  405e69:	sub    al,0xe5
  405e6b:	aas    
  405e6c:	or     DWORD PTR [ebp-0x3],0xfffffffa
  405e70:	sub    bh,BYTE PTR [ebx+0x6c]
  405e73:	xchg   ebp,eax
  405e74:	(bad)  
  405e76:	mov    ds:0xe479ad1d,eax
  405e7b:	and    bh,BYTE PTR [ecx+eax*8+0x46]
  405e7f:	ins    DWORD PTR es:[edi],dx
  405e80:	int    0x44
  405e82:	push   esp
  405e83:	mov    ebx,0xbc0fb262
  405e88:	js     0x405eb0
  405e8a:	std    
  405e8b:	neg    BYTE PTR ds:0x91cd83da
  405e91:	sub    DWORD PTR [eax+0x6b],0x1a266575
  405e98:	sbb    eax,DWORD PTR [esi]
  405e9a:	test   eax,0xa4b01e06
  405e9f:	loope  0x405ef8
  405ea1:	sub    eax,0x7c29fbab
  405ea6:	nop
  405ea7:	popf   
  405ea8:	lods   eax,DWORD PTR ds:[esi]
  405ea9:	shl    DWORD PTR [ecx+ecx*1-0x77],cl
  405ead:	sub    al,0x15
  405eaf:	aaa    
  405eb0:	sbb    edx,DWORD PTR [esi-0x33000c67]
  405eb6:	add    al,0x7a
  405eb8:	inc    ecx
  405eb9:	rol    bh,cl
  405ebb:	inc    BYTE PTR [ebp+0x6f]
  405ebe:	pop    ss
  405ebf:	cwde   
  405ec0:	xchg   edx,eax
  405ec1:	inc    esi
  405ec2:	repnz mov bh,0x98
  405ec5:	ins    BYTE PTR es:[edi],dx
  405ec6:	idiv   DWORD PTR [ebp-0x224ba0bf]
  405ecc:	push   cs
  405ecd:	loope  0x405eef
  405ecf:	ret    0x8490
  405ed2:	rcl    BYTE PTR [ebp-0x29],1
  405ed5:	xchg   esp,eax
  405ed6:	push   edi
  405ed7:	mov    eax,DWORD PTR [edi]
  405ed9:	add    BYTE PTR [edx+0x5745dc54],cl
  405edf:	imul   ebp,DWORD PTR [ecx+0x39],0x5
  405ee3:	mov    eax,0xc5b35ce1
  405ee8:	sub    ebp,DWORD PTR [edx]
  405eea:	outs   dx,BYTE PTR ds:[esi]
  405eeb:	dec    ebp
  405eec:	out    0xcb,al
  405eee:	shl    BYTE PTR [ecx+0x131eccc1],0x9e
  405ef5:	aaa    
  405ef6:	ss jne 0x405f3b
  405ef9:	pop    edx
  405efa:	sbb    BYTE PTR [ebp+0x525d5070],ch
  405f00:	jae    0x405f0b
  405f02:	jns    0x405e9e
  405f04:	mov    edi,ecx
  405f06:	test   BYTE PTR [esi],dl
  405f08:	sbb    eax,0x97851ea2
  405f0d:	cmp    al,dl
  405f0f:	adc    ecx,DWORD PTR [ebp-0x27f80ea3]
  405f15:	test   al,0x10
  405f17:	out    0xb3,al
  405f19:	icebp  
  405f1a:	and    eax,0x739f3da5
  405f1f:	mov    esi,DWORD PTR [ebx+0x34b13baa]
  405f25:	jp     0x405f82
  405f27:	cmc    
  405f28:	mov    ebx,0xf63ad346
  405f2d:	test   BYTE PTR [ebx-0x70],ch
  405f30:	(bad)  
  405f31:	push   ebp
  405f32:	dec    edi
  405f33:	shl    ecx,0xae
  405f36:	add    DWORD PTR [ebp-0xf],esi
  405f39:	outs   dx,BYTE PTR ds:[esi]
  405f3a:	cld    
  405f3b:	(bad)  
  405f3d:	adc    bh,BYTE PTR [eax-0x48537594]
  405f43:	scas   eax,DWORD PTR es:[edi]
  405f44:	or     DWORD PTR [ecx-0x7],0xbbd01bd8
  405f4b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f4d:	mov    edi,0xad060094
  405f52:	pushf  
  405f53:	add    BYTE PTR [ebp+0x31abba2e],bh
  405f59:	pop    ecx
  405f5a:	cmp    BYTE PTR [esi],bh
  405f5c:	and    DWORD PTR [eax+0x5e],0x2205f036
  405f63:	jb     0x405f6f
  405f65:	lods   al,BYTE PTR ds:[esi]
  405f66:	sti    
  405f67:	sbb    al,0xba
  405f69:	mov    esi,0x52ca31c1
  405f6e:	mov    WORD PTR [esi-0x1469e28b],?
  405f74:	pop    ds
  405f75:	pop    ebp
  405f76:	jle    0x405f4f
  405f78:	and    BYTE PTR [ecx+edx*2+0x54077354],bl
  405f7f:	in     eax,dx
  405f80:	mov    ebx,0xc6f907d4
  405f85:	pop    esp
  405f86:	loop   0x405f36
  405f88:	jecxz  0x405f52
  405f8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f8b:	cmc    
  405f8c:	jmp    0xc4fb7934
  405f91:	enter  0x842b,0x8d
  405f95:	or     bl,ch
  405f97:	mov    edx,0x3a554e44
  405f9c:	nop
  405f9d:	mov    ecx,0x64fd97f6
  405fa2:	pop    es
  405fa3:	pusha  
  405fa4:	enter  0xa274,0xee
  405fa8:	or     ebp,ebx
  405faa:	rcr    DWORD PTR gs:0xca48c3eb,0x6b
  405fb2:	or     eax,0xa862b77c
  405fb7:	jbe    0x405f5c
  405fb9:	pop    esp
  405fba:	add    eax,ecx
  405fbc:	mov    ds:0x9488aef3,al
  405fc1:	inc    edi
  405fc2:	dec    esp
  405fc3:	arpl   bx,dx
  405fc5:	ins    BYTE PTR es:[edi],dx
  405fc6:	(bad)  [eax]
  405fc8:	adc    BYTE PTR [edx+0x6d],cl
  405fcb:	lods   al,BYTE PTR ds:[esi]
  405fcc:	rol    ebx,1
  405fce:	or     BYTE PTR [ebp+eiz*2+0x40],dh
  405fd2:	inc    eax
  405fd3:	ins    DWORD PTR es:[edi],dx
  405fd4:	cmp    eax,0x2c52cea7
  405fd9:	in     al,dx
  405fda:	xchg   edx,eax
  405fdb:	in     al,dx
  405fdc:	jno    0x405fc9
  405fde:	test   eax,0xbdf89ded
  405fe3:	retf   
  405fe4:	int    0x8e
  405fe6:	xchg   edx,eax
  405fe7:	mov    bl,ch
  405fe9:	jb     0x406064
  405feb:	inc    ebx
  405fec:	jg     0x406008
  405fee:	pushf  
  405fef:	lods   al,BYTE PTR ds:[esi]
  405ff0:	icebp  
  405ff1:	mov    al,BYTE PTR [eax+eiz*1+0x1dba8221]
  405ff8:	xchg   esp,eax
  405ff9:	in     eax,0xcb
  405ffb:	inc    eax
  405ffc:	cmp    edi,DWORD PTR [esi+0x346b487a]
  406002:	adc    bh,BYTE PTR [eax+ebx*8-0x7f]
  406006:	jge    0x40605c
  406008:	sahf   
  406009:	(bad)  
  40600a:	nop
  40600b:	call   0xa87d:0xd430bc86
  406012:	aad    0x68
  406014:	push   cs
  406015:	out    0x2d,eax
  406017:	push   es
  406018:	inc    edi
  406019:	test   al,0xa3
  40601b:	ins    DWORD PTR es:[edi],dx
  40601c:	pop    edx
  40601d:	sub    al,0xf6
  40601f:	xchg   ecx,eax
  406020:	shl    DWORD PTR [eax+esi*8],0x15
  406024:	and    edi,ebx
  406026:	dec    ecx
  406027:	ins    DWORD PTR es:[edi],dx
  406028:	adc    ebp,DWORD PTR [ebx+eiz*1+0x64]
  40602c:	xor    DWORD PTR [ecx-0x30],ecx
  40602f:	sbb    DWORD PTR [esi+ebx*1-0x3f],eax
  406033:	outs   dx,BYTE PTR ds:[esi]
  406034:	es (bad) 
  406036:	jle    0x406089
  406038:	sti    
  406039:	imul   eax,ebp,0x41ae9032
  40603f:	sbb    al,0x81
  406041:	ret    
  406042:	sbb    cl,BYTE PTR [ebx-0x61989e46]
  406048:	ins    BYTE PTR es:[edi],dx
  406049:	cmc    
  40604a:	addr16 or eax,0x66e6e13f
  406050:	retf   
  406051:	sub    ecx,DWORD PTR [ebx-0x411961fc]
  406057:	mov    al,ds:0x78ff8f6a
  40605c:	es out dx,eax
  40605e:	and    ah,ch
  406060:	stos   DWORD PTR es:[edi],eax
  406061:	inc    edi
  406062:	mov    ah,0xc4
  406064:	dec    esi
  406065:	jno    0x405ffd
  406067:	jp     0x40608a
  406069:	(bad)  
  40606b:	mov    edi,gs
  40606d:	mov    bl,0x8
  40606f:	dec    edx
  406070:	out    0x63,al
  406072:	sub    ch,ah
  406074:	fcmovnu st,st(1)
  406076:	jmp    0x9be4:0xa17b50f0
  40607d:	int    0x46
  40607f:	shr    BYTE PTR [esi-0x26],1
  406082:	mov    ch,0xb0
  406084:	mov    esp,0xc8e96d2e
  406089:	iret   
  40608a:	iret   
  40608b:	mov    esp,DWORD PTR [edi+0x34]
  40608e:	(bad)  
  40608f:	icebp  
  406090:	or     ebx,DWORD PTR [ebp-0x5f]
  406093:	mov    BYTE PTR ds:[edi],ah
  406096:	pushf  
  406097:	adc    dh,BYTE PTR [ebp+0x6c1b6e6e]
  40609d:	add    cl,BYTE PTR [edx-0x4f8bc4fb]
  4060a3:	les    edx,FWORD PTR [esi-0x141f3981]
  4060a9:	shr    BYTE PTR [esi+0x49],0x2e
  4060ad:	into   
  4060ae:	adc    BYTE PTR [edi+edi*2],al
  4060b1:	neg    BYTE PTR [esi-0x17]
  4060b4:	icebp  
  4060b5:	adc    eax,DWORD PTR ds:0xbc50c708
  4060bb:	in     al,0x80
  4060bd:	mov    ?,WORD PTR [ecx-0x33]
  4060c0:	sahf   
  4060c1:	in     eax,dx
  4060c2:	ret    0x526f
  4060c5:	adc    al,0x2a
  4060c7:	inc    ebp
  4060c8:	out    0x32,al
  4060ca:	leave  
  4060cb:	ss xor eax,0x58eb3512
  4060d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060d2:	shr    BYTE PTR [ecx-0x7fad8034],0x8b
  4060d9:	mov    bh,0xcc
  4060db:	dec    ebp
  4060dc:	xchg   DWORD PTR [ecx-0x10],eax
  4060df:	inc    ebp
  4060e0:	(bad)  
  4060e1:	test   al,0x69
  4060e3:	(bad)  
  4060e4:	fild   QWORD PTR [edx]
  4060e6:	dec    edi
  4060e7:	rep outs dx,DWORD PTR ds:[esi]
  4060e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060ea:	aaa    
  4060eb:	push   edi
  4060ec:	adc    BYTE PTR [edx],cl
  4060ee:	mov    bh,0x96
  4060f0:	ins    DWORD PTR es:[edi],dx
  4060f1:	aam    0x73
  4060f3:	and    eax,0xad1b7a1b
  4060f8:	xor    edx,eax
  4060fa:	or     al,0xe1
  4060fc:	mov    al,ds:0xdc1a26a5
  406101:	aaa    
  406102:	call   0x9119:0xc50b8442
  406109:	push   cs
  40610a:	inc    ecx
  40610b:	mov    WORD PTR [esi],es
  40610d:	mov    dl,0x36
  40610f:	mov    eax,ds:0x8b10317c
  406114:	lea    ebp,[eax+0x3f95025c]
  40611a:	adc    ch,dl
  40611c:	cmp    BYTE PTR [eax],0x9b
  40611f:	cmp    BYTE PTR ds:0x9c385be1,bh
  406125:	popa   
  406126:	shr    BYTE PTR [esi+0x165b4bdf],1
  40612c:	mov    al,ds:0xfc1b2f07
  406131:	push   0x7efadb45
  406136:	(bad)  
  406137:	ror    ah,0xf7
  40613a:	enter  0xd953,0x17
  40613e:	mov    ecx,0x89910c62
  406143:	push   ebp
  406144:	jmp    0xf653:0x39657d46
  40614b:	popa   
  40614c:	imul   esp,DWORD PTR [edi],0xffffffa7
  40614f:	cdq    
  406150:	test   BYTE PTR [ecx],cl
  406152:	add    al,0xd7
  406154:	cmp    al,0x20
  406156:	sub    al,0xcc
  406158:	and    eax,0x533006b9
  40615d:	adc    dh,BYTE PTR [esi+eiz*8]
  406160:	popf   
  406161:	pusha  
  406162:	scas   eax,DWORD PTR es:[edi]
  406163:	push   ecx
  406164:	(bad)  
  406165:	and    eax,0xb195080e
  40616a:	push   ss
  40616b:	push   ecx
  40616c:	int3   
  40616d:	inc    ebp
  40616e:	popa   
  40616f:	pop    ebp
  406170:	ja     0x40610e
  406172:	and    esi,DWORD PTR [eax+0x4c]
  406175:	cmp    ch,bl
  406177:	ret    0x8162
  40617a:	aaa    
  40617b:	or     BYTE PTR [edx*4+0x4e10ca57],al
  406182:	mov    ch,0x57
  406184:	call   0xcf2e:0x6452aad4
  40618b:	enter  0x4855,0x8
  40618f:	lea    ebp,[ebp-0x13]
  406192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406193:	inc    ecx
  406194:	sub    eax,0xf40b1d11
  406199:	cld    
  40619a:	jo     0x4061ab
  40619c:	adc    al,0xbc
  40619e:	mov    ebx,0x2e096270
  4061a3:	fwait
  4061a4:	outs   dx,DWORD PTR ds:[esi]
  4061a5:	cmp    bl,dh
  4061a7:	pop    edi
  4061a8:	sub    eax,0xa83eacf5
  4061ad:	dec    edi
  4061ae:	ret    0x80eb
  4061b1:	mov    BYTE PTR [edi+eiz*2+0x27],ah
  4061b5:	mov    esp,0x8994ffda
  4061ba:	push   esp
  4061bb:	adc    BYTE PTR [esi+0x31],dl
  4061be:	jmp    0x6ba7fa32
  4061c3:	aad    0xb3
  4061c5:	push   edi
  4061c6:	cdq    
  4061c7:	js     0x406169
  4061c9:	pushf  
  4061ca:	xor    WORD PTR [ecx+0x58ffd22e],0x8924
  4061d3:	push   0xffffffef
  4061d5:	push   eax
  4061d6:	xchg   edi,eax
  4061d7:	sub    BYTE PTR [edi+ebx*2+0x64],cl
  4061db:	hlt    
  4061dc:	mov    ah,0xa
  4061de:	scas   eax,DWORD PTR es:[edi]
  4061df:	sub    edi,DWORD PTR [edx-0x2a29a033]
  4061e5:	fisttp WORD PTR [edx-0x3aed596b]
  4061eb:	loop   0x4061ba
  4061ed:	add    BYTE PTR [esi+esi*2],bh
  4061f0:	xchg   esi,eax
  4061f1:	pusha  
  4061f2:	loop   0x406194
  4061f4:	icebp  
  4061f5:	sbb    eax,0xdf20232b
  4061fa:	mov    al,0xa4
  4061fc:	sbb    edi,edx
  4061fe:	in     al,dx
  4061ff:	mov    ah,0x93
  406201:	mov    ah,0x7
  406203:	sbb    edi,edi
  406205:	out    dx,eax
  406206:	call   0xc2b3fdb8
  40620b:	and    BYTE PTR cs:[esi+0xf],ch
  40620f:	clc    
  406210:	jb     0x406245
  406212:	test   esp,edi
  406214:	cld    
  406215:	add    eax,0xeb4efb16
  40621a:	xchg   ecx,eax
  40621b:	inc    edx
  40621c:	leave  
  40621d:	shl    DWORD PTR [ebx-0x76a11a80],0x39
  406224:	mov    ch,0x94
  406226:	sub    DWORD PTR [eax+0x5],esp
  406229:	xchg   ebp,eax
  40622a:	idiv   DWORD PTR [edi+0x4e]
  40622d:	jle    0x4061e4
  40622f:	inc    ecx
  406230:	das    
  406231:	jne    0x40624c
  406233:	push   ebp
  406234:	dec    esp
  406235:	cli    
  406236:	std    
  406237:	mov    ecx,0x11517c6f
  40623c:	push   0x3c8acd38
  406241:	xchg   edi,eax
  406242:	pop    esi
  406243:	fst    QWORD PTR [eax]
  406245:	push   ebx
  406246:	aas    
  406247:	shl    DWORD PTR [esi+0x103f9ef0],cl
  40624d:	sti    
  40624e:	sub    DWORD PTR [edx+0x3cfce4b4],esi
  406254:	shl    eax,cl
  406256:	nop
  406257:	nop
  406258:	or     al,0xd1
  40625a:	stc    
  40625b:	and    al,BYTE PTR [ecx+0x72afd2d8]
  406261:	fwait
  406262:	aaa    
  406263:	data16 jle 0x406201
  406266:	and    al,0xf4
  406268:	sbb    al,dh
  40626a:	in     al,0xd1
  40626c:	pop    ebp
  40626d:	mov    edx,0xf0dd8d63
  406272:	pop    eax
  406273:	pushf  
  406274:	xor    cl,BYTE PTR fs:[ebx]
  406277:	add    DWORD PTR [edx+0x43],esi
  40627a:	sub    DWORD PTR [ebp+0x30],ecx
  40627d:	retf   
  40627e:	shr    dl,1
  406280:	jb     0x4062cd
  406282:	outs   dx,DWORD PTR ds:[esi]
  406283:	adc    BYTE PTR [edi+0x5a63d21d],ah
  406289:	lock mov ds:0x2220f72,eax
  40628f:	add    ebp,DWORD PTR [eax]
  406291:	je     0x406253
  406293:	data16 add al,0x7a
  406296:	sub    al,0xd6
  406298:	inc    esp
  406299:	and    ch,BYTE PTR [eax-0x64]
  40629c:	pop    eax
  40629d:	dec    eax
  40629e:	xchg   ebx,eax
  40629f:	pusha  
  4062a0:	fstp   QWORD PTR [edx+0x3a]
  4062a3:	aas    
  4062a4:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062a6:	out    dx,al
  4062a7:	cmp    dl,BYTE PTR [ebp+0x72df2fb6]
  4062ad:	mov    cl,BYTE PTR es:[edx+0x34f69dd3]
  4062b4:	lock mov fs,WORD PTR [edi-0x60]
  4062b8:	cmc    
  4062b9:	pop    esi
  4062ba:	int3   
  4062bb:	repz icebp 
  4062bd:	fsub   st,st(3)
  4062bf:	int    0xa1
  4062c1:	lock push ss
  4062c3:	loope  0x4062b4
  4062c5:	cwde   
  4062c6:	loopne 0x406321
  4062c8:	sbb    eax,0x9db8f2a0
  4062cd:	add    ebp,esp
  4062cf:	test   DWORD PTR [ebx],eax
  4062d1:	cmp    cl,al
  4062d3:	gs jmp 0xa1523365
  4062d9:	loopne 0x406331
  4062db:	out    dx,eax
  4062dc:	mov    ss,WORD PTR [eax+0x67]
  4062df:	(bad)  
  4062e0:	mov    bl,0x63
  4062e2:	fdiv   DWORD PTR [eax+0x22]
  4062e5:	div    BYTE PTR [edx]
  4062e7:	mov    ds:0xd1e4ad9b,al
  4062ec:	sbb    BYTE PTR [eax+ebp*2-0x10],0x21
  4062f1:	in     al,dx
  4062f2:	xchg   ebp,eax
  4062f3:	pop    esi
  4062f4:	pushf  
  4062f5:	dec    ecx
  4062f6:	sub    eax,edx
  4062f8:	inc    ebx
  4062f9:	jge    0x4062d9
  4062fb:	mov    WORD PTR [esi+0x39],ss
  4062fe:	jge    0x406348
  406300:	rol    BYTE PTR [esi-0x4f],1
  406303:	mov    edx,0xa2a301b
  406308:	fwait
  406309:	out    dx,al
  40630a:	push   ebp
  40630b:	popa   
  40630c:	sub    BYTE PTR [ecx+0x67],cl
  40630f:	in     eax,dx
  406310:	test   DWORD PTR [eax],esp
  406312:	mov    edx,0xc04d9b77
  406317:	xchg   ecx,eax
  406318:	test   DWORD PTR [ebp-0x73],ecx
  40631b:	jo     0x406397
  40631d:	cmp    eax,DWORD PTR [ecx+0x1f]
  406320:	xchg   ebp,eax
  406321:	add    BYTE PTR ds:0x6db77efb,cl
  406327:	pop    ds
  406328:	(bad)  
  406329:	adc    ch,cl
  40632b:	mov    esp,?
  40632d:	bound  esi,QWORD PTR [ecx-0x6]
  406330:	scas   al,BYTE PTR es:[edi]
  406331:	pop    edi
  406332:	jmp    0x7a08:0xf30a4a9a
  406339:	inc    esp
  40633a:	mov    dl,0xe9
  40633c:	fwait
  40633d:	add    ebx,0xffffffa6
  406340:	add    al,cl
  406342:	xchg   DWORD PTR [ebx+0x48a7670c],ecx
  406348:	in     al,dx
  406349:	gs (bad) 
  40634c:	jle    0x40638f
  40634e:	add    al,BYTE PTR [eax+0x5caa58af]
  406354:	ret    
  406355:	mov    esi,0x38a90be1
  40635a:	std    
  40635b:	cmp    al,ch
  40635d:	jecxz  0x406343
  40635f:	ficomp WORD PTR [edi+esi*8]
  406362:	jno    0x406309
  406364:	xchg   ebp,eax
  406365:	push   esi
  406366:	push   ebp
  406367:	pushf  
  406368:	add    BYTE PTR [ecx+0x32553202],dl
  40636e:	jmp    0x88f232d6
  406373:	add    eax,0xb2047152
  406378:	jno    0x4063b4
  40637a:	int    0xce
  40637c:	popa   
  40637d:	fisubr WORD PTR [edx+eiz*2]
  406380:	push   edi
  406381:	or     al,0x7b
  406383:	dec    ebp
  406384:	dec    esi
  406385:	ret    
  406386:	out    0x88,eax
  406388:	cmp    BYTE PTR [esp+eax*8-0x460e1281],0x61
  406390:	leave  
  406391:	pop    esp
  406392:	push   ds
  406393:	pop    es
  406394:	or     al,0xfd
  406396:	add    ecx,DWORD PTR [esi-0x5e]
  406399:	icebp  
  40639a:	sbb    eax,DWORD PTR [ecx]
  40639c:	(bad)  
  40639d:	ficomp DWORD PTR [edi+eiz*1-0x43d7c7]
  4063a4:	inc    ecx
  4063a5:	xchg   edi,eax
  4063a6:	adc    eax,0xb7e426f
  4063ab:	and    al,0xb9
  4063ad:	ins    BYTE PTR es:[edi],dx
  4063ae:	adc    al,0xe5
  4063b0:	test   al,0xeb
  4063b2:	aaa    
  4063b3:	mov    cl,0x45
  4063b5:	imul   ecx,DWORD PTR [ecx+0x7f],0xffffff90
  4063b9:	sub    BYTE PTR [eax+0x870d357],ah
  4063bf:	xchg   DWORD PTR [ecx+edi*2-0x329b0fcf],edx
  4063c6:	inc    ebp
  4063c7:	sub    BYTE PTR [esi],ch
  4063c9:	sbb    ecx,DWORD PTR [edx+0x52bce946]
  4063cf:	pop    es
  4063d0:	mov    ah,0x69
  4063d2:	xor    esp,ecx
  4063d4:	stos   DWORD PTR es:[edi],eax
  4063d5:	adc    DWORD PTR [ebx],esp
  4063d7:	popf   
  4063d8:	fs mov cl,bl
  4063db:	pusha  
  4063dc:	xor    eax,DWORD PTR [edi-0x468e7131]
  4063e2:	fsub   DWORD PTR [ecx]
  4063e4:	nop
  4063e5:	mov    cl,0x38
  4063e7:	sub    esp,ecx
  4063e9:	gs ret 0x20ec
  4063ed:	adc    edi,DWORD PTR [ecx-0x17b4f46b]
  4063f3:	fs xchg esi,eax
  4063f5:	data16 addr16 mov dl,0xd3
  4063f9:	ins    DWORD PTR es:[edi],dx
  4063fa:	and    BYTE PTR [esi-0x274be818],ch
  406400:	pop    eax
  406401:	sub    BYTE PTR [edi-0x65],bh
  406404:	enter  0xdca2,0xc7
  406408:	pop    edx
  406409:	(bad)  
  40640a:	hlt    
  40640b:	ds push cs
  40640d:	push   0x2b
  40640f:	lods   al,BYTE PTR ds:[esi]
  406410:	xor    DWORD PTR [ecx+0x65],0x895c6575
  406417:	sbb    DWORD PTR [edx],ecx
  406419:	xor    DWORD PTR [esi],esp
  40641b:	ds pop di
  40641e:	test   al,0x61
  406420:	rcr    DWORD PTR [esi],cl
  406422:	ret    0x6c61
  406425:	cwde   
  406426:	cdq    
  406427:	mov    WORD PTR [ecx+0x8],cs
  40642a:	xor    DWORD PTR [edi+0x110240ee],edx
  406430:	cmc    
  406431:	ret    
  406432:	add    eax,esp
  406434:	cwd    
  406436:	add    bl,BYTE PTR gs:[ebp-0x233a0b9c]
  40643d:	ins    DWORD PTR es:[edi],dx
  40643e:	cwde   
  40643f:	in     al,0x7c
  406441:	pop    esi
  406442:	xor    cl,dl
  406444:	daa    
  406445:	adc    edi,edx
  406447:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  406449:	arpl   WORD PTR [ebx-0x34da76f8],bx
  40644f:	lea    ecx,[eax+edi*1+0x12]
  406453:	mov    esi,ebx
  406455:	xor    BYTE PTR [eax],ah
  406457:	sahf   
  406458:	dec    ebx
  406459:	aad    0xe1
  40645b:	outs   dx,DWORD PTR ds:[esi]
  40645c:	pop    eax
  40645d:	mov    ds:0xdefa5d56,eax
  406462:	retf   
  406463:	test   eax,0xb1d5ec3b
  406468:	mov    dl,BYTE PTR [ebx]
  40646a:	push   cs
  40646b:	rcl    DWORD PTR [edx+0x4f],1
  40646e:	xchg   edi,eax
  40646f:	jge    0x40646f
  406471:	(bad)  
  406473:	(bad)  
  406474:	xchg   ecx,eax
  406475:	dec    edx
  406476:	adc    eax,0x31b23cbd
  40647b:	jno    0x4064b6
  40647d:	mov    bh,BYTE PTR [edi+0x36df854a]
  406483:	mov    edi,DWORD PTR [edx]
  406485:	xchg   DWORD PTR [ebp-0x4de3050e],ebx
  40648b:	jno    0x4064d2
  40648d:	sbb    eax,0xa334fd3f
  406492:	jno    0x4064d4
  406494:	or     BYTE PTR [esi-0x7a1bbee5],ah
  40649a:	sub    al,bl
  40649c:	pop    esi
  40649d:	sub    eax,0xcd78a384
  4064a2:	(bad)  
  4064a3:	fdiv   DWORD PTR [bx+si-0x2f98]
  4064a8:	pop    esp
  4064a9:	sub    DWORD PTR [ebx-0x61faac6e],eax
  4064af:	scas   al,BYTE PTR es:[edi]
  4064b0:	xor    cl,al
  4064b2:	add    dh,BYTE PTR [ebx-0x7c]
  4064b5:	cmp    dl,cl
  4064b7:	pop    ebp
  4064b8:	jecxz  0x4064cd
  4064ba:	or     al,0x7b
  4064bc:	popa   
  4064bd:	and    ebx,esi
  4064bf:	xor    al,0x7b
  4064c1:	push   0x5bd47a4b
  4064c6:	ins    DWORD PTR es:[edi],dx
  4064c7:	or     DWORD PTR [esi],edx
  4064c9:	in     al,0x35
  4064cb:	(bad)  ds:0x3bed0a51
  4064d1:	or     DWORD PTR [edx],ebp
  4064d3:	ret    0xc34
  4064d6:	aas    
  4064d7:	dec    esp
  4064d8:	rcr    BYTE PTR [edx],cl
  4064da:	fcom   DWORD PTR [eax+0x54]
  4064dd:	xchg   ebx,eax
  4064de:	xor    al,0xb3
  4064e0:	mov    eax,ds:0xcc7b6e5c
  4064e5:	das    
  4064e6:	mov    ds:0x50c21295,eax
  4064eb:	push   eax
  4064ec:	cmp    DWORD PTR [eax-0x382de94],ecx
  4064f2:	jmp    DWORD PTR es:[ecx]
  4064f5:	dec    edx
  4064f6:	imul   edx,DWORD PTR [edx-0x27],0xe
  4064fa:	mov    BYTE PTR [edx+0xf],bh
  4064fd:	mov    dl,0x41
  4064ff:	(bad)  
  406500:	out    dx,al
  406501:	push   fs
  406503:	scas   al,BYTE PTR es:[edi]
  406504:	inc    esi
  406505:	call   0x87956f1f
  40650a:	pop    ebp
  40650b:	xchg   esp,ebp
  40650d:	out    dx,eax
  40650e:	and    BYTE PTR [eax-0x5b],ah
  406511:	aad    0x7a
  406513:	push   ebx
  406514:	ds mov esi,0x81986f0c
  40651a:	and    edx,ecx
  40651c:	xchg   ebp,eax
  40651d:	add    edi,esp
  40651f:	fsubr  DWORD PTR es:[ecx+0x6aad108f]
  406526:	jns    0x4065a0
  406528:	mov    bl,BYTE PTR [ebp+0x68]
  40652b:	shr    esi,0x79
  40652e:	adc    eax,0xb08234e0
  406533:	inc    esi
  406534:	dec    esp
  406535:	mov    ebx,DWORD PTR [edi-0x75f869ea]
  40653b:	push   es
  40653c:	cmp    BYTE PTR [ebx+0x98f40cb],bl
  406542:	imul   ebp,ebx,0xffffff85
  406545:	add    ecx,DWORD PTR [ecx+0x3c548d48]
  40654b:	aad    0x9e
  40654d:	jecxz  0x4065ca
  40654f:	(bad)  
  406550:	test   BYTE PTR [ebx+edx*1],0xe8
  406554:	data16 lods al,BYTE PTR ds:[esi]
  406556:	(bad)  
  406557:	push   ebx
  406558:	add    DWORD PTR [esi-0xc],0x366e393
  40655f:	adc    BYTE PTR [edx],0x60
  406562:	cld    
  406563:	inc    esp
  406564:	sbb    eax,0xef3732e7
  406569:	push   ecx
  40656a:	xchg   edx,eax
  40656b:	pop    esp
  40656c:	rcr    BYTE PTR [ebx],0xd8
  40656f:	and    DWORD PTR [ebp-0x72d09468],0x56
  406576:	inc    eax
  406577:	sub    bl,bl
  406579:	pop    ss
  40657a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40657b:	loopne 0x406524
  40657d:	jbe    0x406536
  40657f:	dec    ecx
  406580:	test   edi,0x17659f28
  406586:	sti    
  406587:	mov    cl,0xbc
  406589:	ret    
  40658a:	std    
  40658b:	jae    0x406534
  40658d:	ds loope 0x406521
  406590:	xor    al,0x60
  406592:	ret    
  406593:	xchg   edi,eax
  406594:	push   esi
  406595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406596:	into   
  406597:	jg     0x40654f
  406599:	hlt    
  40659a:	xchg   ebx,eax
  40659b:	leave  
  40659c:	rol    DWORD PTR [edi],0xe2
  40659f:	ret    
  4065a0:	sub    DWORD PTR [esi+0x13],eax
  4065a3:	repz pop esi
  4065a5:	rol    BYTE PTR [ebp+0x55],0xb9
  4065a9:	enter  0xd0e,0x6b
  4065ad:	mov    ebx,0x41f0254f
  4065b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065b3:	xchg   DWORD PTR [eax-0x1e],eax
  4065b6:	xchg   ebp,eax
  4065b7:	adc    esp,DWORD PTR [eax+0x51]
  4065ba:	push   ds
  4065bb:	inc    edi
  4065bc:	xor    cl,ah
  4065be:	cmp    al,0x84
  4065c0:	mov    bh,0xa
  4065c2:	cmp    al,0x1c
  4065c4:	pop    ebx
  4065c5:	fild   QWORD PTR [esi+eiz*2+0x115c841b]
  4065cc:	retf   0xbaf4
  4065cf:	out    dx,eax
  4065d0:	inc    ebx
  4065d1:	dec    esp
  4065d2:	mov    ds:0xab66c07b,eax
  4065d7:	jb     0x40659a
  4065d9:	inc    ecx
  4065da:	mov    DWORD PTR [edi],esp
  4065dc:	in     al,dx
  4065dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065de:	ret    
  4065df:	jp     0x4065d1
  4065e1:	cmc    
  4065e2:	pop    ss
  4065e3:	ja     0x4065a8
  4065e5:	add    ah,BYTE PTR [edx+0x7b]
  4065e8:	push   0x5f7624e4
  4065ed:	sub    DWORD PTR [esi+edx*2-0x6e96afca],esi
  4065f4:	lahf   
  4065f5:	int3   
  4065f6:	(bad)  
  4065f8:	dec    ecx
  4065f9:	aaa    
  4065fa:	std    
  4065fb:	xchg   edi,eax
  4065fc:	pop    ss
  4065fd:	pop    eax
  4065fe:	jae    0x4065c2
  406600:	or     eax,0x6421bd0a
  406605:	xor    DWORD PTR [esi],ecx
  406607:	in     al,0xed
  406609:	sbb    ecx,DWORD PTR [ecx]
  40660b:	xchg   BYTE PTR [edx],ah
  40660d:	jp     0x406645
  40660f:	pushf  
  406610:	inc    eax
  406611:	adc    eax,0x23b468e7
  406616:	dec    eax
  406617:	push   ss
  406618:	mov    DWORD PTR [esi+0x188c756e],ebp
  40661e:	sbb    eax,0x6c3b58b7
  406623:	jne    0x40667e
  406625:	scas   eax,DWORD PTR es:[edi]
  406626:	mov    esi,0x706827a9
  40662b:	xchg   edi,eax
  40662c:	jmp    0x57ed:0x31982057
  406633:	ins    BYTE PTR es:[edi],dx
  406634:	sti    
  406635:	xchg   esp,eax
  406636:	test   al,0x9d
  406638:	inc    esi
  406639:	jle    0x406609
  40663b:	sub    DWORD PTR [esi],edi
  40663d:	push   0x880c3182
  406642:	into   
  406643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406644:	mov    ds:0xdd68d3d1,eax
  406649:	mov    bh,0x37
  40664b:	int3   
  40664c:	test   DWORD PTR gs:[esi-0x14],eax
  406650:	inc    ebp
  406651:	int3   
  406652:	and    eax,0x4687b989
  406657:	push   edx
  406658:	jl     0x4065da
  40665a:	push   edx
  40665b:	mov    WORD PTR [esi+edx*4+0x14],fs
  40665f:	cmp    bl,cl
  406661:	cmp    cl,BYTE PTR [esi-0x4e]
  406664:	adc    ecx,0x857d88ea
  40666a:	cmp    DWORD PTR [edi-0x18],eax
  40666d:	xor    ebx,esp
  40666f:	jmp    0x4065f3
  406671:	sahf   
  406672:	fnstsw WORD PTR [eax-0x3fde0957]
  406678:	dec    esi
  406679:	dec    edx
  40667a:	aad    0x76
  40667c:	aas    
  40667d:	sub    eax,0x2a9e0cc0
  406682:	sbb    bh,BYTE PTR [esi]
  406684:	(bad)  [edi+0x65]
  406687:	push   eax
  406688:	jnp    0x40662d
  40668a:	cwde   
  40668b:	jbe    0x406657
  40668d:	xor    bh,bl
  40668f:	xor    ebx,ecx
  406691:	and    eax,0x23664308
  406696:	mov    ebx,0x7a727147
  40669b:	push   edi
  40669c:	xchg   ebp,eax
  40669d:	mov    esi,DWORD PTR [esi+ecx*2]
  4066a0:	or     DWORD PTR [ebx],0x98e79eb0
  4066a6:	inc    ebp
  4066a7:	and    al,0xe5
  4066a9:	xchg   al,bh
  4066ab:	and    bl,BYTE PTR ds:0xcca7b3d4
  4066b1:	aam    0x3e
  4066b3:	pop    esi
  4066b4:	mov    esi,0x63a003a7
  4066b9:	(bad)  
  4066ba:	shr    DWORD PTR [esi+0x7e6ff3db],1
  4066c0:	lds    ecx,FWORD PTR [edi-0x7cb8a838]
  4066c6:	jne    0x40670a
  4066c8:	jmp    0x23db:0x199ecdef
  4066cf:	dec    edx
  4066d0:	loop   0x4066d8
  4066d2:	pop    ecx
  4066d3:	lods   eax,DWORD PTR ds:[esi]
  4066d4:	sbb    ebp,DWORD PTR ds:[ecx-0x2db8a346]
  4066db:	jmp    0xac75:0x29763db
  4066e2:	jne    0x40666e
  4066e4:	xor    ecx,DWORD PTR [esi-0x16]
  4066e7:	adc    BYTE PTR [edx+eax*4-0x308bb012],bl
  4066ee:	into   
  4066ef:	aas    
  4066f0:	leave  
  4066f1:	cmc    
  4066f2:	rol    DWORD PTR [edx+0x688245e9],0x57
  4066f9:	aad    0x4c
  4066fb:	mov    ebp,0xed6318fa
  406700:	ficom  DWORD PTR [ebx]
  406702:	add    DWORD PTR [esi],0xffffff8d
  406705:	adc    al,0xc2
  406707:	add    edx,DWORD PTR [ecx+0x27]
  40670a:	addr16 sub bh,bl
  40670d:	(bad)  
  40670e:	sub    DWORD PTR [edx+0x74d980ef],esi
  406714:	(bad)  
  406715:	sub    DWORD PTR [ebx-0x78a4b4fc],ebp
  40671b:	push   0xffffffca
  40671d:	lds    esp,FWORD PTR [ebp-0x7f0a446c]
  406723:	inc    eax
  406724:	pop    ebp
  406725:	call   0xea402874
  40672a:	cmc    
  40672b:	pop    ecx
  40672c:	and    al,0xdf
  40672e:	push   ebp
  40672f:	js     0x4066f2
  406731:	sub    DWORD PTR [esi-0x29],ecx
  406734:	sbb    al,0x71
  406736:	xchg   DWORD PTR [esi-0x6c45527c],eax
  40673c:	jne    0x406708
  40673e:	cmc    
  40673f:	cmc    
  406740:	jp     0x4067aa
  406742:	jo     0x406764
  406744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406745:	jns    0x4066cc
  406747:	pop    ebx
  406748:	stos   DWORD PTR es:[edi],eax
  406749:	ret    
  40674a:	scas   al,BYTE PTR es:[edi]
  40674b:	pop    ds
  40674c:	xchg   edi,eax
  40674d:	xchg   esp,eax
  40674e:	call   DWORD PTR [edi-0x29f61fcb]
  406754:	call   0x5566c297
  406759:	mov    ecx,0xf4e34a86
  40675e:	pop    edx
  40675f:	xor    BYTE PTR [eax+ebx*4],dh
  406762:	adc    ebx,DWORD PTR [ebp-0x3fed1b4b]
  406768:	aam    0x2e
  40676a:	loop   0x40676b
  40676c:	sub    BYTE PTR [eax+0x62aa7364],0xc1
  406773:	mov    bl,0x35
  406775:	jge    0x4067b0
  406777:	inc    eax
  406778:	pop    es
  406779:	sub    DWORD PTR [ecx+0x248acfa4],esi
  40677f:	xchg   ecx,eax
  406780:	cdq    
  406781:	outs   dx,DWORD PTR ds:[esi]
  406782:	pop    ss
  406783:	and    bl,BYTE PTR [ebx-0x47f3dca]
  406789:	sbb    esi,DWORD PTR [esi-0x72f7965f]
  40678f:	push   ebp
  406790:	push   ebp
  406791:	arpl   si,cx
  406793:	jp     0x4067fd
  406795:	shl    dl,0x5b
  406798:	xor    al,0x1d
  40679a:	es inc ebx
  40679c:	push   edx
  40679d:	test   eax,0x8e5e2e7
  4067a2:	ja     0x4067f2
  4067a4:	shl    bh,0xb0
  4067a7:	scas   al,BYTE PTR es:[edi]
  4067a8:	mov    edx,0x20f72cce
  4067ad:	inc    edx
  4067ae:	icebp  
  4067af:	adc    al,0x2e
  4067b1:	mov    ebp,0x123cc541
  4067b6:	loope  0x40674d
  4067b8:	add    eax,0x2c8cc5fe
  4067bd:	inc    edx
  4067be:	xchg   BYTE PTR [ecx],ah
  4067c0:	sbb    al,0x3e
  4067c2:	mov    ebx,0xd9933aa5
  4067c7:	call   0xc4603487
  4067cc:	int3   
  4067cd:	mov    esp,0xaeb11afe
  4067d2:	push   ss
  4067d3:	enter  0xeabe,0x3c
  4067d7:	mov    dh,0x57
  4067d9:	sbb    bh,BYTE PTR [edx-0xeb3cf61]
  4067df:	push   esp
  4067e0:	clc    
  4067e1:	out    0xfb,al
  4067e3:	cmp    DWORD PTR [edi+0x1],edi
  4067e6:	test   eax,0x970dc7b0
  4067eb:	dec    edi
  4067ec:	test   dl,al
  4067ee:	or     eax,0xe9a118e4
  4067f3:	push   ecx
  4067f4:	inc    esi
  4067f5:	iretw  
  4067f7:	ret    0x9050
  4067fa:	push   edi
  4067fb:	xchg   esi,eax
  4067fc:	mov    ds:0xa996ceb8,al
  406801:	add    ebx,DWORD PTR [eax-0x33]
  406804:	sbb    dl,BYTE PTR [eax+0x59c46d81]
  40680a:	leave  
  40680b:	mov    bl,0xca
  40680d:	out    0x9d,al
  40680f:	mov    al,ds:0xd21fc849
  406814:	(bad)  
  406815:	adc    DWORD PTR [edi],ebx
  406817:	jmp    0x4067d4
  406819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40681a:	cmp    DWORD PTR [edx+0x3a],ebx
  40681d:	pop    ss
  40681e:	mov    esp,0x8683fa37
  406823:	daa    
  406824:	lock jl 0x4067ee
  406827:	add    DWORD PTR [edi],0x6ba03c2d
  40682d:	dec    edx
  40682e:	push   ebp
  40682f:	in     al,dx
  406830:	fdivr  QWORD PTR [esi+0x3f8bbaf5]
  406836:	dec    eax
  406837:	push   ss
  406838:	fisub  WORD PTR [edi+edi*2-0x79]
  40683c:	inc    esp
  40683d:	or     ebp,DWORD PTR [esi]
  40683f:	addr16 dec ebp
  406841:	scas   al,BYTE PTR es:[edi]
  406842:	mov    ds:0x12f89f3,eax
  406847:	mov    ds:0xb7b6cf57,eax
  40684c:	pop    ebx
  40684d:	jp     0x406884
  40684f:	sbb    ch,dh
  406851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406852:	xor    BYTE PTR [ebp+0x79],bl
  406855:	out    0xf1,al
  406857:	adc    BYTE PTR [ebx+edi*1],bh
  40685a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40685c:	aam    0x99
  40685e:	inc    ecx
  40685f:	std    
  406860:	jl     0x406866
  406862:	call   0x8780:0xd7e675a9
  406869:	inc    edi
  40686a:	cdq    
  40686b:	jno    0x4068d5
  40686d:	imul   ebx,edx,0xdfdd69b8
  406873:	pop    ebp
  406874:	and    ecx,DWORD PTR [ebp-0x7ab08152]
  40687a:	xchg   al,bh
  40687c:	jne    0x40687c
  40687e:	push   ebp
  40687f:	arpl   WORD PTR [eax],di
  406881:	inc    ecx
  406882:	in     eax,dx
  406883:	push   ds
  406884:	cmp    ebx,esi
  406886:	cwde   
  406887:	lahf   
  406888:	push   ss
  406889:	retf   
  40688a:	sbb    al,0x4b
  40688c:	test   BYTE PTR [ecx],bh
  40688e:	aam    0xf8
  406890:	mov    ?,esp
  406892:	mov    ebp,0xa0709d66
  406897:	lods   al,BYTE PTR ds:[esi]
  406898:	out    0x51,eax
  40689a:	inc    ebp
  40689b:	or     BYTE PTR [eax+edi*8+0x28],0x2b
  4068a0:	int    0x94
  4068a2:	scas   al,BYTE PTR es:[edi]
  4068a3:	loop   0x4068de
  4068a5:	and    ebx,DWORD PTR [ebp*1+0x648d2c5b]
  4068ac:	push   esp
  4068ad:	rcr    BYTE PTR [edi-0xa],cl
  4068b0:	sub    esi,DWORD PTR [edx+0x77]
  4068b3:	sbb    al,0x12
  4068b5:	push   0x4e
  4068b7:	aaa    
  4068b8:	(bad)  
  4068b9:	cli    
  4068ba:	sub    esp,DWORD PTR [ebp+ebx*1-0x746d8cbe]
  4068c1:	cld    
  4068c2:	(bad)  
  4068c3:	mov    ah,0xef
  4068c5:	jnp    0x4068c3
  4068c7:	pop    ds
  4068c8:	jecxz  0x4068e0
  4068ca:	cmp    al,0xf0
  4068cc:	sbb    BYTE PTR [ebp+eiz*2+0x41f9dea1],cl
  4068d3:	add    BYTE PTR [ebx+0x72920fbe],0xa8
  4068da:	jg     0x4068e1
  4068dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068dd:	test   al,0x74
  4068df:	sub    esp,DWORD PTR ds:0xb0686ee3
  4068e5:	sub    bl,BYTE PTR [ebp+0x6e26540c]
  4068eb:	je     0x406909
  4068ed:	iretw  
  4068ef:	cmp    edx,edi
  4068f1:	xor    al,0x4f
  4068f3:	ins    BYTE PTR es:[edi],dx
  4068f4:	fdivr  st(5),st
  4068f6:	and    DWORD PTR [eax+0x16c4c1a4],0x51
  4068fd:	sbb    al,0x3d
  4068ff:	adc    edi,DWORD PTR [esp+eax*1-0x1c1a2b6b]
  406906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406907:	shr    cl,cl
  406909:	addr16 push ds
  40690b:	xchg   esi,eax
  40690c:	jge    0x406917
  40690e:	xor    al,0xb6
  406910:	sbb    eax,DWORD PTR [eax+edx*4+0x1bd3dd9f]
  406917:	test   BYTE PTR [edx-0x7ea3c4a1],ch
  40691d:	sbb    edx,DWORD PTR [edx+edx*4]
  406920:	(bad)  
  406921:	jo     0x40692c
  406923:	add    eax,0x3395b9fc
  406928:	dec    edx
  406929:	push   cs
  40692a:	mov    DWORD PTR [edx-0x3e],0xa0aa626c
  406931:	inc    ebx
  406932:	rcl    DWORD PTR [ecx],0x5c
  406935:	jno    0x406943
  406937:	mov    ds:0x6f9ca0ed,eax
  40693c:	mov    ah,0x42
  40693e:	and    eax,0x2ea8a414
  406943:	mov    dl,0x12
  406945:	adc    al,0x9f
  406947:	adc    BYTE PTR [edi],ch
  406949:	or     DWORD PTR [ebp-0x2ba1475],esi
  40694f:	out    dx,al
  406950:	inc    ebx
  406951:	ret    
  406952:	int    0x33
  406954:	clc    
  406955:	mov    edx,0x7b26b524
  40695a:	pop    eax
  40695b:	mov    DWORD PTR ds:0x1d7950cb,ebp
  406961:	in     eax,0xf
  406963:	and    BYTE PTR [ebx-0x53],dh
  406966:	xbegin 0xc8b7f06f
  40696c:	clc    
  40696d:	outs   dx,DWORD PTR ds:[esi]
  40696e:	mov    cl,0x3
  406970:	lock add eax,0xd295c223
  406976:	mov    eax,0x10b9daad
  40697b:	lock test BYTE PTR ds:0xbca3247e,ah
  406982:	scas   eax,DWORD PTR es:[edi]
  406983:	or     eax,0xb32f19f9
  406988:	repz mov ebp,0xd0802db3
  40698e:	mov    ecx,0xb15a56db
  406993:	mov    dl,BYTE PTR [esi]
  406995:	or     al,0xf5
  406997:	fld    TBYTE PTR [edx+0x43074d48]
  40699d:	ror    DWORD PTR [edi-0x79],cl
  4069a0:	fstp   TBYTE PTR [edx-0x6c2e3678]
  4069a6:	cmp    eax,0x898a5b87
  4069ab:	out    dx,eax
  4069ac:	push   esp
  4069ad:	dec    ebx
  4069ae:	fsubrp st(2),st
  4069b0:	mov    ebp,0x19ea7f19
  4069b5:	mov    al,ds:0x72164b3d
  4069ba:	push   esp
  4069bb:	addr16 xchg dl,ah
  4069be:	cli    
  4069bf:	test   eax,0xb7fcdca0
  4069c4:	adc    al,0x80
  4069c6:	das    
  4069c7:	cld    
  4069c8:	pop    es
  4069c9:	mov    eax,ebx
  4069cb:	sbb    BYTE PTR [edi],bh
  4069cd:	pop    ecx
  4069ce:	or     edx,ebp
  4069d0:	cld    
  4069d1:	xor    DWORD PTR [edx],ecx
  4069d3:	add    dh,BYTE PTR [eax+edx*4+0x72bb4e91]
  4069da:	sub    eax,0x4ba3b8bd
  4069df:	mov    WORD PTR [ebx+0xa],ss
  4069e2:	jmp    0x40696f
  4069e4:	mov    cl,0x7f
  4069e6:	addr16 adc eax,0xef025762
  4069ec:	mov    ebx,0x1b3b8c35
  4069f1:	push   ss
  4069f2:	jnp    0x406a5f
  4069f4:	je     0x4069d9
  4069f6:	jp     0x406a10
  4069f8:	xchg   edx,eax
  4069f9:	ins    DWORD PTR es:[edi],dx
  4069fa:	pop    edx
  4069fb:	ret    0x933d
  4069fe:	cwde   
  4069ff:	int3   
  406a00:	sbb    ch,BYTE PTR [ecx-0x7faa0e0f]
  406a06:	mov    esi,0x4de7496b
  406a0b:	das    
  406a0c:	(bad)  
  406a0d:	xchg   esp,eax
  406a0e:	ret    
  406a0f:	xor    ebx,DWORD PTR [edi+0x6cc83ca6]
  406a15:	js     0x4069ff
  406a17:	call   0x1cd0:0xa99dc6d2
  406a1e:	inc    BYTE PTR [edx]
  406a20:	fwait
  406a21:	adc    eax,0x8569cf7f
  406a26:	push   esp
  406a27:	or     DWORD PTR [esi+0x45ec99b2],edi
  406a2d:	jmp    0x3eb352c5
  406a32:	push   esi
  406a33:	xchg   edx,eax
  406a34:	pop    esi
  406a35:	cs hlt 
  406a37:	cwde   
  406a38:	in     al,0x6
  406a3a:	loop   0x4069f2
  406a3c:	cmc    
  406a3d:	es jmp 0xd2f6dec0
  406a43:	lea    ebx,[eax+eax*1-0x56]
  406a47:	pop    ds
  406a48:	cmc    
  406a49:	adc    al,0x59
  406a4b:	and    bl,ch
  406a4d:	mov    ds:0x8be71f29,eax
  406a52:	arpl   WORD PTR [esi-0x77317b04],di
  406a58:	imul   eax,DWORD PTR [eax+0x6f],0x5c
  406a5c:	cmp    esi,DWORD PTR ds:0xb08f5ef4
  406a62:	pop    es
  406a63:	outs   dx,BYTE PTR ds:[esi]
  406a64:	cld    
  406a65:	sti    
  406a66:	lods   al,BYTE PTR ds:[esi]
  406a67:	fs mov dh,0x9c
  406a6a:	cmc    
  406a6b:	xchg   esi,eax
  406a6c:	xor    al,BYTE PTR [ecx]
  406a6e:	nop
  406a6f:	imul   ebp,DWORD PTR [ebx+0x518cbeec],0x34
  406a76:	adc    al,0x7f
  406a78:	daa    
  406a79:	and    edi,ebp
  406a7b:	mov    WORD PTR ds:0x7dec1b73,es
  406a81:	scas   eax,DWORD PTR es:[edi]
  406a82:	mov    eax,0xe4a51bf7
  406a87:	xchg   ebx,eax
  406a88:	push   ebp
  406a89:	int    0xb2
  406a8b:	mov    cl,0x40
  406a8d:	fistp  WORD PTR [ecx+0x68]
  406a90:	add    eax,0xadf2ffb7
  406a95:	jmp    0x94ec4f43
  406a9a:	or     bh,BYTE PTR [edi-0x6b191fc3]
  406aa0:	(bad)  
  406aa1:	and    dl,BYTE PTR [ebp+0x2d3947e6]
  406aa7:	(bad)  [eax-0x1d]
  406aaa:	retf   
  406aab:	or     ch,BYTE PTR [eax+0x1c0e146e]
  406ab1:	js     0x406b06
  406ab3:	ins    BYTE PTR es:[edi],dx
  406ab4:	xchg   esi,eax
  406ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ab6:	sti    
  406ab7:	mov    bl,0xf9
  406ab9:	inc    ecx
  406aba:	jnp    0x406a9c
  406abc:	lds    ebp,FWORD PTR [ebp+0x56]
  406abf:	jns    0x406acc
  406ac1:	push   edx
  406ac2:	cmp    al,0x48
  406ac4:	call   0x21f2a876
  406ac9:	int    0xe7
  406acb:	mov    esi,edx
  406acd:	in     eax,dx
  406ace:	cmc    
  406acf:	dec    eax
  406ad0:	cwde   
  406ad1:	(bad)  
  406ad2:	fild   DWORD PTR [ebx+edi*8]
  406ad5:	dec    edi
  406ad6:	lahf   
  406ad7:	fiadd  DWORD PTR es:[ecx+0x7f6317df]
  406adf:	push   ss
  406ae0:	cmp    ebx,esp
  406ae2:	mul    dl
  406ae4:	fwait
  406ae5:	arpl   WORD PTR [ecx],di
  406ae7:	out    dx,al
  406ae8:	loope  0x406aad
  406aea:	sub    ah,cl
  406aec:	push   0xffffffba
  406aee:	in     al,dx
  406aef:	sbb    bh,BYTE PTR [eax-0x5e]
  406af2:	mov    ah,0xee
  406af4:	(bad)  
  406af5:	xor    DWORD PTR [eax+eiz*2-0x131aa0a],ecx
  406afc:	pop    ss
  406afd:	inc    esp
  406afe:	arpl   WORD PTR [esi],ax
  406b00:	out    dx,al
  406b01:	shr    DWORD PTR [ecx],0xbd
  406b04:	sahf   
  406b05:	xchg   edx,eax
  406b06:	ret    
  406b07:	es ret 
  406b09:	jl     0x406aef
  406b0b:	push   eax
  406b0c:	test   DWORD PTR es:[ebx-0x25],ebp
  406b10:	gs push ecx
  406b12:	pop    esi
  406b13:	xchg   esp,eax
  406b14:	or     al,0x37
  406b16:	mov    ss,eax
  406b18:	iret   
  406b19:	adc    ecx,esi
  406b1b:	push   ecx
  406b1c:	pop    ebx
  406b1d:	push   esi
  406b1e:	(bad)  
  406b1f:	enter  0x47a1,0x7b
  406b23:	cmc    
  406b24:	push   edx
  406b25:	pop    ss
  406b26:	mov    ebx,0x70eb2bde
  406b2b:	out    0x85,al
  406b2d:	jo     0x406bae
  406b2f:	mov    al,ds:0x9dabc763
  406b34:	pop    ebp
  406b35:	jb     0x406ae8
  406b37:	test   al,0x11
  406b39:	xchg   edx,eax
  406b3a:	mov    BYTE PTR [edi+0x554cb657],bl
  406b40:	fst    st(5)
  406b42:	xor    DWORD PTR [eax+0x64],ebx
  406b45:	clc    
  406b46:	repz les eax,FWORD PTR [ecx+0x4049a96d]
  406b4d:	or     DWORD PTR [edx+ecx*4],esp
  406b50:	ror    BYTE PTR [ecx+0x2181bdc6],0x50
  406b57:	fcos   
  406b59:	push   ds
  406b5a:	lods   al,BYTE PTR ds:[esi]
  406b5b:	out    0xb7,eax
  406b5d:	jp     0x406b29
  406b5f:	add    al,0xac
  406b61:	fcom   DWORD PTR ds:0x2847cf46
  406b67:	mov    bl,0x8b
  406b69:	xor    ebx,DWORD PTR [ebx+0x55]
  406b6c:	adc    BYTE PTR [eax+0x551b7946],0x9c
  406b73:	or     BYTE PTR [ecx+0x3f],cl
  406b76:	push   ebx
  406b77:	in     al,0xaa
  406b79:	test   eax,0x887e5f10
  406b7e:	test   al,0xeb
  406b80:	adc    al,0xd
  406b82:	stos   BYTE PTR es:[edi],al
  406b83:	mov    ds:0x758c1e49,al
  406b88:	mov    esp,0x4ba85829
  406b8d:	(bad)  
  406b8e:	addr16 out dx,eax
  406b90:	pop    eax
  406b91:	leave  
  406b92:	inc    ebx
  406b93:	push   esp
  406b94:	and    al,0x22
  406b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b97:	add    cl,BYTE PTR [eax+0x63]
  406b9a:	mov    bl,BYTE PTR [edx-0x7611f6ec]
  406ba0:	add    al,0xee
  406ba2:	pop    esi
  406ba3:	add    al,BYTE PTR [ebp+0x69]
  406ba6:	jecxz  0x406b9d
  406ba8:	jae    0x406c29
  406baa:	xchg   esp,eax
  406bab:	fnstsw WORD PTR [eax+0x7b]
  406bae:	push   ss
  406baf:	mov    al,ds:0x2780fc06
  406bb4:	xchg   ebp,eax
  406bb5:	and    edx,edi
  406bb7:	aam    0xf2
  406bb9:	xchg   BYTE PTR [ebx],bl
  406bbb:	push   cs
  406bbc:	lds    eax,FWORD PTR [ebx+0x4d]
  406bbf:	mov    eax,ds:0x8afa3e85
  406bc4:	(bad)  
  406bc5:	fstp   TBYTE PTR [edi+0x0]
  406bc8:	loop   0x406bf8
  406bca:	inc    ecx
  406bcb:	pop    edx
  406bcc:	mov    edi,0xbc55f3d8
  406bd1:	mov    esi,0x525f1c37
  406bd6:	fimul  WORD PTR [eax+0x75]
  406bd9:	or     al,0x2d
  406bdb:	mov    bl,0x2
  406bdd:	mov    ebp,0x3bb65603
  406be2:	xor    DWORD PTR [edx+edx*2+0x13a3bdf3],0xdc09f8d9
  406bed:	jmp    0x1635d6d6
  406bf2:	cs mov edx,0xdc90ce85
  406bf8:	pop    eax
  406bf9:	xchg   ebx,eax
  406bfa:	mov    ecx,0x2f4e35b2
  406bff:	loopne 0x406bf6
  406c01:	daa    
  406c02:	xbegin 0x34692c83
  406c08:	sbb    DWORD PTR [ebp-0x65],ebp
  406c0b:	js     0x406c03
  406c0d:	fdivr  st,st(0)
  406c0f:	(bad)  
  406c11:	retf   0x2b81
  406c14:	mov    eax,ds:0x9b24c6e3
  406c19:	sbb    ecx,DWORD PTR [esi]
  406c1b:	push   edx
  406c1c:	mov    al,0xbf
  406c1e:	mov    ch,bh
  406c20:	xchg   esp,eax
  406c21:	jge    0x406bfc
  406c23:	gs push esp
  406c25:	arpl   WORD PTR [ebx-0x4c68962c],bx
  406c2b:	fnstcw WORD PTR [ebp*1+0x3c99d5bd]
  406c32:	jmp    0x406c10
  406c34:	loope  0x406bc4
  406c36:	jae    0x406ca2
  406c38:	les    esi,FWORD PTR [ebp+0x24]
  406c3b:	or     DWORD PTR [ecx],eax
  406c3d:	inc    eax
  406c3e:	jmp    0x406c60
  406c40:	pop    edx
  406c41:	mov    esp,0xca2ea1a9
  406c46:	leave  
  406c47:	mov    ch,BYTE PTR [ebp+0x47e31cb9]
  406c4d:	mov    al,BYTE PTR [edi+0x354f085f]
  406c53:	push   es
  406c54:	mov    bh,0xd1
  406c56:	fld    TBYTE PTR [ecx-0x34]
  406c59:	call   0xe6f6:0x13ef992f
  406c60:	int3   
  406c61:	sub    DWORD PTR [esi],ebp
  406c63:	sub    ah,BYTE PTR [ecx-0x245e54df]
  406c69:	je     0x406bef
  406c6b:	aaa    
  406c6c:	sub    DWORD PTR ds:0x86e8f169,edi
  406c72:	loopne 0x406c93
  406c74:	lods   eax,DWORD PTR ds:[esi]
  406c75:	mov    DWORD PTR [ebp+esi*4+0x1d],edi
  406c79:	imul   edi,DWORD PTR [edx+0x20f812b5],0xfffffffc
  406c80:	and    al,0x55
  406c82:	mov    edi,0x5dffdc81
  406c87:	jno    0x406cae
  406c89:	adc    dl,BYTE PTR [edx]
  406c8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c8c:	test   ah,bl
  406c8e:	sub    cl,BYTE PTR ds:[edx-0x7d]
  406c92:	(bad)  
  406c93:	(bad)  
  406c94:	pop    edi
  406c95:	stc    
  406c96:	mov    al,0xaa
  406c98:	pop    ss
  406c99:	jns    0x406cc0
  406c9b:	retf   0xcc16
  406c9e:	sbb    eax,0xa7484e2a
  406ca3:	xchg   edx,eax
  406ca4:	mov    ds:0x94fb8aa1,al
  406ca9:	test   DWORD PTR [edi],ebp
  406cab:	mov    edx,0xfb76586f
  406cb0:	jp     0x406c33
  406cb2:	add    edx,DWORD PTR [edi+0x7388d1cc]
  406cb8:	pop    edx
  406cb9:	xlat   BYTE PTR ds:[ebx]
  406cba:	pop    DWORD PTR [esp+ebp*8-0x9b70c2b]
  406cc1:	add    ebp,DWORD PTR [ebp-0x44]
  406cc4:	repz pop eax
  406cc6:	test   DWORD PTR [edx+0x669ca6c0],0x2c023fc1
  406cd0:	sbb    BYTE PTR [esi-0x58],0x5
  406cd4:	or     al,0x41
  406cd6:	fbstp  TBYTE PTR [esi]
  406cd8:	sahf   
  406cd9:	xor    al,0x37
  406cdb:	out    dx,eax
  406cdc:	stos   BYTE PTR es:[edi],al
  406cdd:	dec    ecx
  406cde:	daa    
  406cdf:	rol    DWORD PTR [esi-0x95ec63e],1
  406ce5:	xchg   edi,eax
  406ce6:	in     eax,dx
  406ce7:	jmp    0xf015318d
  406cec:	in     al,dx
  406ced:	pop    ecx
  406cee:	mov    ds:0x3baebafc,eax
  406cf3:	push   ss
  406cf4:	push   edi
  406cf5:	and    ch,cl
  406cf7:	sub    ebx,DWORD PTR [ebx]
  406cf9:	ror    edx,cl
  406cfb:	inc    ebp
  406cfc:	into   
  406cfd:	cmp    DWORD PTR [edi+0x2a9f355f],0x11
  406d04:	mov    eax,ds:0x759443ec
  406d09:	stc    
  406d0a:	not    DWORD PTR [ebp+ebx*2+0x55]
  406d0e:	das    
  406d0f:	sbb    DWORD PTR [edi],esp
  406d11:	mov    ecx,0xdafa7b3a
  406d16:	imul   ebp,DWORD PTR [ebp+0x19d890bf],0x73ab0d5
  406d20:	xchg   esp,eax
  406d21:	adc    eax,0x1eb0b1c1
  406d26:	in     al,0x64
  406d28:	add    BYTE PTR [eax-0x79],bh
  406d2b:	dec    edi
  406d2c:	dec    edi
  406d2d:	ss sysret 
  406d30:	sub    BYTE PTR [eax-0x6c5b9352],ch
  406d36:	stos   BYTE PTR es:[edi],al
  406d37:	pop    ebx
  406d38:	adc    BYTE PTR [esi],dh
  406d3a:	out    dx,al
  406d3b:	icebp  
  406d3c:	(bad)  
  406d3d:	and    al,0xa4
  406d3f:	jle    0x406d1a
  406d41:	dec    eax
  406d42:	adc    eax,0x83fea494
  406d47:	add    DWORD PTR [esi],ebx
  406d49:	in     eax,dx
  406d4a:	xchg   esp,eax
  406d4b:	fsubr  QWORD PTR [ecx-0x6bef0737]
  406d51:	add    esp,eax
  406d53:	repz out dx,al
  406d55:	push   esp
  406d56:	loop   0x406cf2
  406d58:	ja     0x406d36
  406d5a:	add    al,0x45
  406d5c:	retf   0x1e33
  406d5f:	imul   esp,edi,0x553d4a58
  406d65:	mov    ecx,0xf072452
  406d6a:	outs   dx,BYTE PTR ds:[esi]
  406d6b:	arpl   WORD PTR [ebx+ebp*1],sp
  406d6e:	inc    eax
  406d6f:	daa    
  406d70:	pop    edx
  406d71:	mov    eax,0x6ef31b57
  406d76:	jns    0x406d38
  406d78:	push   es
  406d79:	jne    0x406de8
  406d7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d7c:	xchg   bl,al
  406d7e:	and    eax,DWORD PTR [esi]
  406d80:	rol    BYTE PTR [ecx-0x35],0x33
  406d84:	test   eax,0xeb5acf41
  406d89:	xor    al,0x52
  406d8b:	adc    ebp,DWORD PTR [ebx+0x13e252cb]
  406d91:	iret   
  406d92:	or     ch,BYTE PTR [eax+0x19]
  406d95:	or     eax,DWORD PTR [edi]
  406d97:	popa   
  406d98:	out    0x49,al
  406d9a:	fisttp QWORD PTR [ebp+0x5f]
  406d9d:	push   edi
  406d9e:	mov    ah,0x2c
  406da0:	add    al,0x72
  406da2:	jno    0x406de8
  406da4:	sub    eax,ebp
  406da6:	or     ebp,DWORD PTR [eax]
  406da8:	mov    dl,0xd5
  406daa:	adc    ecx,DWORD PTR [ebp-0x3c65d06b]
  406db0:	inc    edx
  406db1:	mov    dh,0x24
  406db3:	pop    esp
  406db4:	mov    BYTE PTR fs:[ebx-0x37],cl
  406db8:	add    DWORD PTR [esi+eax*2+0x65],esp
  406dbc:	add    ah,dh
  406dbe:	cwde   
  406dbf:	xchg   DWORD PTR [eax+0x5ed1de57],eax
  406dc5:	pop    esi
  406dc6:	arpl   WORD PTR [edi+0x9],bp
  406dc9:	out    dx,eax
  406dca:	call   0x3812:0xb5b6c05c
  406dd1:	jnp    0x406e44
  406dd3:	in     al,0xfc
  406dd5:	cli    
  406dd6:	mov    ch,bh
  406dd8:	dec    esi
  406dd9:	out    0x3d,eax
  406ddb:	cmp    bh,BYTE PTR [edx-0x4c0d90be]
  406de1:	xchg   DWORD PTR [eax],edi
  406de3:	push   0x5053af1b
  406de8:	jb     0x406e64
  406dea:	jge    0x406df1
  406dec:	push   esi
  406ded:	sub    ecx,edi
  406def:	cmc    
  406df0:	lahf   
  406df1:	mov    WORD PTR [ebx+ebx*2+0x5e33fcc],?
  406df8:	adc    ebp,DWORD PTR [esi+0x2b]
  406dfb:	popa   
  406dfc:	cld    
  406dfd:	dec    ebx
  406dfe:	add    BYTE PTR [ecx+0x54],dh
  406e01:	cmp    esp,edx
  406e03:	cld    
  406e04:	nop
  406e05:	jae    0x406d94
  406e07:	mov    ch,0xa1
  406e09:	enter  0x862f,0xc1
  406e0d:	pop    ebp
  406e0e:	mov    bl,0x2d
  406e10:	pop    edi
  406e11:	fwait
  406e12:	xor    DWORD PTR [ebp-0x5e66d672],0x23428776
  406e1c:	mov    al,0x0
  406e1e:	inc    esp
  406e1f:	adc    eax,0x8ec0f5d6
  406e24:	pop    esi
  406e25:	lea    esp,[edi+ebp*4]
  406e28:	les    ebp,FWORD PTR [ebx+eax*1]
  406e2b:	into   
  406e2c:	pop    edx
  406e2d:	xor    cl,BYTE PTR [ebx+0x7a]
  406e30:	pop    esi
  406e31:	and    eax,0x6e268a5d
  406e36:	sub    DWORD PTR [ebp+0x65],esp
  406e39:	push   0xfed06e57
  406e3e:	mov    esp,0xc449dc6e
  406e43:	ss jle 0x406e94
  406e46:	rcr    DWORD PTR [ebp+0xb],0xf7
  406e4a:	add    BYTE PTR [ebx-0x30],dl
  406e4d:	popf   
  406e4e:	fild   DWORD PTR [eax+0x25]
  406e51:	fs xchg ebp,eax
  406e53:	and    eax,0xa38e21b7
  406e58:	stos   BYTE PTR es:[edi],al
  406e59:	adc    edx,DWORD PTR [edi+ebp*8-0x43875b68]
  406e60:	or     ebx,DWORD PTR [ebx]
  406e62:	inc    esi
  406e63:	lahf   
  406e64:	mov    eax,DWORD PTR [eax-0x5]
  406e67:	or     dl,al
  406e69:	pop    ebp
  406e6a:	sbb    ebx,DWORD PTR [eax]
  406e6c:	jbe    0x406df7
  406e6e:	scas   al,BYTE PTR es:[edi]
  406e6f:	and    al,0x1b
  406e71:	repnz das 
  406e73:	lahf   
  406e74:	ret    0x6480
  406e77:	and    DWORD PTR [edi+0x29],edx
  406e7a:	xchg   ecx,eax
  406e7b:	sbb    BYTE PTR [eax-0x1b3cdc46],al
  406e81:	ficomp DWORD PTR [ebx-0x1d563772]
  406e87:	pop    ebx
  406e88:	pusha  
  406e89:	add    eax,0xc83c76ea
  406e8e:	cmc    
  406e8f:	jl     0x406e6f
  406e91:	push   ecx
  406e92:	xor    eax,ebx
  406e94:	pop    edx
  406e95:	add    BYTE PTR [ecx],0xde
  406e98:	sbb    eax,0x4681faf1
  406e9d:	sar    DWORD PTR [ebp-0x20],0xf4
  406ea1:	call   0xc382df29
  406ea6:	inc    ebp
  406ea7:	jno    0x406ed8
  406ea9:	aam    0xaa
  406eab:	jmp    0xb024f6de
  406eb0:	mov    ebx,0xb35ce406
  406eb5:	pusha  
  406eb6:	inc    eax
  406eb7:	scas   eax,DWORD PTR es:[edi]
  406eb8:	test   eax,0x374acf04
  406ebd:	add    al,0xee
  406ebf:	aad    0xff
  406ec1:	mov    edx,0xf762dfa8
  406ec6:	add    DWORD PTR [esi-0x652b622b],esi
  406ecc:	call   0x4dbd:0xb0fc3efc
  406ed3:	cs push 0x94ac38d9
  406ed9:	fwait
  406eda:	test   BYTE PTR [ebp+0x6680f39c],ah
  406ee0:	jg     0x406f01
  406ee2:	mov    esi,0xa875d97d
  406ee7:	je     0x406f41
  406ee9:	push   es
  406eea:	mov    BYTE PTR ds:0xb1f29c95,ch
  406ef0:	xchg   ecx,eax
  406ef1:	jbe    0x406ee6
  406ef3:	pushf  
  406ef4:	clts   
  406ef6:	inc    ebp
  406ef7:	(bad)  
  406ef8:	mov    ?,WORD PTR [edx-0x56]
  406efb:	xchg   ebp,eax
  406efc:	dec    ebp
  406efd:	xor    al,0xd2
  406eff:	ret    0x44e5
  406f02:	sbb    al,0xd7
  406f04:	add    esi,DWORD PTR [ebx+0x1cd521bb]
  406f0a:	fwait
  406f0b:	(bad)  
  406f0c:	dec    edi
  406f0d:	iret   
  406f0e:	mov    ch,0x68
  406f10:	repz add eax,0x5142b336
  406f16:	addr16 inc ecx
  406f18:	cmp    esi,DWORD PTR [ebp+0x2982f318]
  406f1e:	mov    WORD PTR [edi-0x5a],gs
  406f21:	ja     0x406f30
  406f23:	call   FWORD PTR [ebp+0x71]
  406f26:	and    eax,DWORD PTR ds:0xba01643c
  406f2c:	outs   dx,BYTE PTR es:[esi]
  406f2e:	enter  0x1f3,0xdd
  406f32:	xchg   ecx,eax
  406f33:	mov    edi,0x5c19e7c8
  406f38:	dec    ecx
  406f39:	fs pop edx
  406f3b:	pop    es
  406f3c:	cmp    BYTE PTR es:[edi-0x41],al
  406f40:	test   DWORD PTR [ebx-0x37],ecx
  406f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f44:	xchg   esp,eax
  406f45:	cmc    
  406f46:	xchg   BYTE PTR [edi+esi*1+0x5d],bl
  406f4a:	push   ecx
  406f4b:	or     eax,0x9418413a
  406f50:	(bad)  
  406f51:	jb     0x406fc4
  406f53:	push   esi
  406f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f55:	(bad)  
  406f56:	xchg   ebp,eax
  406f57:	test   al,0x34
  406f59:	int3   
  406f5a:	cmp    ebp,ebp
  406f5c:	jne    0x406f57
  406f5e:	jl     0x406ef2
  406f60:	clc    
  406f61:	(bad)  
  406f62:	xor    cl,bh
  406f64:	outs   dx,DWORD PTR ds:[esi]
  406f65:	inc    esi
  406f66:	xchg   BYTE PTR [edi-0x7f],bh
  406f69:	sbb    eax,esi
  406f6b:	out    0xe5,al
  406f6d:	int    0x38
  406f6f:	adc    bl,BYTE PTR [esi]
  406f71:	jle    0x406f71
  406f73:	mov    BYTE PTR [edx+0x309ca9cb],bl
  406f79:	das    
  406f7a:	cmp    DWORD PTR [edi+ecx*8+0x1f],ebx
  406f7e:	ins    BYTE PTR es:[edi],dx
  406f7f:	push   0xad53a9e6
  406f84:	iret   
  406f85:	push   ss
  406f86:	out    dx,eax
  406f87:	push   esp
  406f88:	and    DWORD PTR [edx+0x4b9be6aa],ecx
  406f8e:	mov    dl,0xa8
  406f90:	nop
  406f91:	cmp    eax,0x382c211b
  406f96:	sbb    DWORD PTR ds:0x94490f1b,edi
  406f9c:	scas   eax,DWORD PTR es:[edi]
  406f9d:	scas   al,BYTE PTR es:[edi]
  406f9e:	add    al,0xe6
  406fa0:	pop    ebp
  406fa1:	dec    esp
  406fa2:	push   es
  406fa3:	fidiv  DWORD PTR ds:0xde56f199
  406fa9:	xor    al,0x22
  406fab:	scas   eax,DWORD PTR es:[edi]
  406fac:	xchg   ebx,eax
  406fad:	sbb    DWORD PTR [edi-0x18],0x18
  406fb1:	arpl   WORD PTR [ecx-0x2fb77a14],cx
  406fb7:	daa    
  406fb8:	pop    ebx
  406fb9:	add    BYTE PTR [ecx],dh
  406fbb:	mov    dh,0x38
  406fbd:	adc    DWORD PTR [eax],ecx
  406fbf:	adc    BYTE PTR [esi+0x33],cl
  406fc2:	push   esi
  406fc3:	jbe    0x406fb2
  406fc5:	jg     0x406f49
  406fc7:	ss (bad) 
  406fc9:	clc    
  406fca:	(bad)  
  406fcc:	or     eax,0x36811925
  406fd1:	cmc    
  406fd2:	add    eax,0x400b6cc2
  406fd7:	call   FWORD PTR [eax+0x183c5d47]
  406fdd:	mov    esi,0xfcc749ed
  406fe2:	jnp    0x407034
  406fe4:	inc    edx
  406fe5:	int3   
  406fe6:	fild   WORD PTR [ecx+0x3f8c803e]
  406fec:	hlt    
  406fed:	adc    bl,BYTE PTR [ebx+ebp*4+0x18ad254]
  406ff4:	les    esi,FWORD PTR [ebp+0x1db78998]
  406ffa:	dec    edi
  406ffb:	inc    esi
  406ffc:	jl     0x407006
  406ffe:	mov    dh,dh
  407000:	neg    DWORD PTR [ebx+0x77]
  407003:	std    
  407004:	jns    0x406fd7
  407006:	mov    cl,0x71
  407008:	loop   0x407040
  40700a:	mov    bh,0xe2
  40700c:	outs   dx,BYTE PTR ds:[esi]
  40700d:	mov    ds:0x4a3320a3,al
  407012:	leave  
  407013:	fs push ecx
  407015:	rcl    BYTE PTR [ebp+0x91aeea9],1
  40701b:	jl     0x407050
  40701d:	pop    ecx
  40701e:	adc    al,0x93
  407020:	dec    ebp
  407021:	xchg   ebx,eax
  407022:	adc    BYTE PTR [esi-0x40],0x81
  407026:	mov    al,0xeb
  407028:	aam    0x47
  40702a:	pop    ebx
  40702b:	push   ds
  40702c:	popa   
  40702d:	pusha  
  40702e:	loope  0x40703b
  407030:	and    eax,DWORD PTR [eax+0xa3935e4]
  407036:	call   0x7e70ee8c
  40703b:	test   edi,edi
  40703d:	test   DWORD PTR [esi],edx
  40703f:	push   es
  407040:	sub    eax,0x85e00bc5
  407045:	mov    ?,WORD PTR [esi-0x2]
  407048:	sbb    BYTE PTR ds:0xe98c8f7,bl
  40704e:	lods   al,BYTE PTR ds:[esi]
  40704f:	cmp    dl,bh
  407051:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407052:	jge    0x407021
  407054:	sbb    cl,cl
  407056:	jbe    0x407015
  407058:	adc    ah,BYTE PTR [ebp+edx*4-0x2a]
  40705c:	sub    DWORD PTR [eax+ebx*2+0x5191441e],0xb3d407e9
  407067:	add    dh,cl
  407069:	xor    DWORD PTR [ecx+esi*2],0xfffffff7
  40706d:	jle    0x40702a
  40706f:	cmc    
  407070:	xchg   cx,ax
  407072:	mov    ?,WORD PTR [ecx+0x33e7edb4]
  407078:	in     eax,0x35
  40707a:	xchg   DWORD PTR [edx*1+0x46fb64b6],edi
  407081:	fisubr DWORD PTR [esi-0x22]
  407084:	cmp    BYTE PTR [edx],ch
  407086:	add    DWORD PTR ds:0xdddadd5a,0x209cb1d
  407090:	add    ch,cl
  407092:	jns    0x4070ce
  407094:	cdq    
  407095:	loop   0x4070d9
  407097:	jns    0x40706a
  407099:	jle    0x4070ab
  40709b:	mov    esp,0xb7ce7347
  4070a0:	mov    ?,eax
  4070a2:	in     eax,0x2a
  4070a4:	xor    DWORD PTR ds:0xb753e240,esp
  4070aa:	add    al,0x29
  4070ac:	int3   
  4070ad:	jecxz  0x40707b
  4070af:	stos   BYTE PTR es:[edi],al
  4070b0:	fcmovnu st,st(4)
  4070b2:	aas    
  4070b3:	aaa    
  4070b4:	aas    
  4070b5:	pop    ss
  4070b6:	popf   
  4070b7:	daa    
  4070b8:	dec    esi
  4070b9:	popf   
  4070ba:	repz jmp 0x4070eb
  4070bd:	mov    ebp,0x7915ca79
  4070c2:	stos   BYTE PTR es:[edi],al
  4070c3:	mov    WORD PTR [edx],fs
  4070c5:	stos   DWORD PTR es:[edi],eax
  4070c6:	into   
  4070c7:	and    al,BYTE PTR [ebp-0x46]
  4070ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070cb:	pop    ds
  4070cc:	lahf   
  4070cd:	push   cs
  4070ce:	pop    es
  4070cf:	fld    TBYTE PTR [edi+0x65]
  4070d2:	into   
  4070d3:	sbb    al,0x50
  4070d5:	and    esi,DWORD PTR [eax+0x2b]
  4070d8:	nop
  4070d9:	fwait
  4070da:	jge    0x40706c
  4070dc:	xor    edi,DWORD PTR [edx]
  4070de:	jnp    0x40707c
  4070e0:	push   eax
  4070e1:	mov    WORD PTR ss:[ecx+0x7b],fs
  4070e5:	fucomi st,st(5)
  4070e7:	pop    ebx
  4070e8:	into   
  4070e9:	inc    ebx
  4070ea:	lods   al,BYTE PTR ds:[esi]
  4070eb:	adc    eax,edi
  4070ed:	scas   eax,DWORD PTR es:[edi]
  4070ee:	int3   
  4070ef:	ret    0x92c2
  4070f2:	xchg   DWORD PTR [ecx-0x6a],eax
  4070f5:	dec    edi
  4070f6:	icebp  
  4070f7:	add    al,0x2d
  4070f9:	test   eax,0x22f5ac48
  4070fe:	mov    ebp,0x4975466a
  407103:	int3   
  407104:	lock push ebx
  407106:	pop    ebx
  407107:	aad    0xe4
  407109:	jge    0x407143
  40710b:	dec    edx
  40710c:	sbb    ebx,DWORD PTR [edx-0xdccc1b]
  407112:	adc    ebp,edx
  407114:	or     ecx,DWORD PTR [ecx-0x4e]
  407117:	dec    eax
  407118:	leave  
  407119:	cli    
  40711a:	int3   
  40711b:	push   ebx
  40711c:	jae    0x40715e
  40711e:	xchg   BYTE PTR [ebp+ecx*2+0x60110143],bh
  407125:	push   esp
  407126:	jbe    0x4070d1
  407128:	adc    cl,BYTE PTR [esi]
  40712a:	daa    
  40712b:	adc    DWORD PTR [edx],0x6
  40712e:	pushf  
  40712f:	xor    esp,DWORD PTR [edx+0x3acc051d]
  407135:	fldcw  WORD PTR [eax+0x3a3b3e73]
  40713b:	lods   al,BYTE PTR ds:[esi]
  40713c:	out    dx,eax
  40713d:	mov    BYTE PTR [eax+eax*1+0x6eeaaf7c],ch
  407144:	mov    ss,ebp
  407146:	(bad)  
  407147:	mov    BYTE PTR [edi],al
  407149:	dec    edx
  40714a:	push   es
  40714b:	ret    0xd272
  40714e:	lahf   
  40714f:	push   ebx
  407150:	xor    al,BYTE PTR [eax+ebx*2-0x10]
  407154:	pusha  
  407155:	pop    ecx
  407156:	lahf   
  407157:	(bad)  
  407159:	ret    
  40715a:	or     cl,BYTE PTR [eax+0x23d868ec]
  407160:	gs jb  0x40719d
  407163:	mov    dl,0x96
  407165:	mov    ebp,0x67fb45fc
  40716a:	das    
  40716b:	test   BYTE PTR [ebp-0x56390e8c],dl
  407171:	xchg   ecx,edx
  407173:	mov    ds:0x9ce8f4b2,eax
  407178:	mov    ebx,0xf707b61c
  40717d:	add    ebp,eax
  40717f:	jne    0x4071e6
  407181:	xchg   edx,eax
  407182:	push   ebp
  407183:	jmp    0x40712b
  407185:	pop    esi
  407186:	xchg   ecx,eax
  407187:	retf   
  407188:	idiv   DWORD PTR [eax-0x4fbc6e8b]
  40718e:	or     ecx,edx
  407190:	stos   DWORD PTR es:[edi],eax
  407191:	mov    cr0,esp
  407194:	lods   al,BYTE PTR ds:[esi]
  407195:	push   cs
  407196:	inc    esi
  407197:	inc    edx
  407198:	popf   
  407199:	fcomp  st(5)
  40719b:	daa    
  40719c:	jae    0x407158
  40719e:	mov    fs,WORD PTR [ebp+0x3abf5153]
  4071a4:	imul   ecx,DWORD PTR ds:0x1ef30583,0xffffffa1
  4071ab:	jge    0x407172
  4071ad:	pop    ebx
  4071ae:	jo     0x40722c
  4071b0:	mov    dh,0x48
  4071b2:	nop
  4071b3:	fwait
  4071b4:	jp     0x407174
  4071b6:	arpl   WORD PTR [edx+eax*4-0x7],sp
  4071ba:	xor    dh,BYTE PTR [ebx+0x1c]
  4071bd:	xlat   BYTE PTR ds:[ebx]
  4071be:	shr    DWORD PTR [ecx+0x7f],0xb
  4071c2:	mov    esi,0x285d21fe
  4071c7:	xor    eax,DWORD PTR [eax]
  4071c9:	rcl    DWORD PTR [ebx],1
  4071cb:	xchg   esp,eax
  4071cc:	xchg   esi,eax
  4071cd:	pop    edi
  4071ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071cf:	(bad)  
  4071d3:	cld    
  4071d4:	loop   0x407172
  4071d6:	sahf   
  4071d7:	sbb    eax,0x6fd2ba4c
  4071dc:	mov    ds:0xf08d4341,eax
  4071e1:	int3   
  4071e2:	iret   
  4071e3:	inc    edx
  4071e4:	sub    bh,BYTE PTR [esi+0x16cf5ba1]
  4071ea:	out    0x2d,eax
  4071ec:	xchg   ecx,eax
  4071ed:	mov    edi,0x657e2584
  4071f2:	push   eax
  4071f3:	jnp    0x40726e
  4071f5:	and    eax,0x3908c14
  4071fa:	aam    0xb8
  4071fc:	push   ss
  4071fd:	mov    bl,0xcf
  4071ff:	mov    ch,0x18
  407201:	or     eax,0x56800e6e
  407206:	cmp    eax,0xb6bb2bc9
  40720b:	fld    st(3)
  40720d:	add    cl,bh
  40720f:	call   0x1d105c08
  407214:	out    0xa,al
  407216:	dec    edi
  407217:	bound  ebp,QWORD PTR [esi+esi*8]
  40721a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40721b:	mov    ecx,0x48947406
  407220:	jmp    0x6c82354e
  407225:	cmc    
  407226:	in     eax,0x68
  407228:	mov    BYTE PTR [ebx+0x20],ah
  40722b:	sar    BYTE PTR [ebx],0x6e
  40722e:	clc    
  40722f:	jmp    0x4071e1
  407231:	mov    dl,0xde
  407233:	scas   eax,DWORD PTR es:[edi]
  407234:	mov    ah,0xfe
  407236:	cmp    cl,BYTE PTR [ebx+0x238611aa]
  40723c:	push   ebx
  40723d:	add    al,0x11
  40723f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407240:	loope  0x4072a2
  407242:	mov    dl,0xb8
  407244:	ja     0x407245
  407246:	sbb    ebp,DWORD PTR [ebp-0x20965792]
  40724c:	data16 jg 0x4072a7
  40724f:	ss cmp ah,dl
  407252:	mov    eax,DWORD PTR es:[esi]
  407255:	scas   al,BYTE PTR es:[edi]
  407256:	sar    BYTE PTR [ebx],0xd6
  407259:	test   eax,0x31fc9d44
  40725e:	out    dx,al
  40725f:	les    edx,FWORD PTR [edi]
  407261:	ds mov dh,0x3c
  407264:	(bad)  
  407265:	jns    0x4072e3
  407267:	cwde   
  407268:	sub    al,0xb0
  40726a:	inc    edx
  40726b:	dec    ebx
  40726c:	pop    es
  40726d:	mov    ch,BYTE PTR [edi-0x4cc30d79]
  407273:	gs pop ebp
  407275:	xor    ebp,DWORD PTR [esi-0x77341fdf]
  40727b:	ret    0xfc4a
  40727e:	mov    eax,ds:0x7813a73e
  407283:	loope  0x407260
  407285:	out    0x18,al
  407287:	(bad)  
  407288:	in     eax,0x23
  40728a:	call   0xcb015297
  40728f:	mov    ebp,0xfc442135
  407294:	aaa    
  407295:	lods   al,BYTE PTR ds:[esi]
  407296:	aaa    
  407297:	call   0x7ee769e5
  40729c:	(bad)  
  40729d:	cli    
  40729e:	in     al,dx
  40729f:	xor    al,0xfc
  4072a1:	push   ds
  4072a2:	fcomp  st(4)
  4072a4:	push   esi
  4072a5:	lahf   
  4072a6:	stc    
  4072a7:	push   ds
  4072a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072a9:	xchg   BYTE PTR [eax+0x3d],ch
  4072ac:	popa   
  4072ad:	or     al,0xdd
  4072af:	adc    dh,ah
  4072b1:	inc    esp
  4072b2:	loop   0x40731a
  4072b4:	sbb    ch,BYTE PTR [ebx]
  4072b6:	jle    0x407325
  4072b8:	adc    DWORD PTR [ecx+esi*4+0xa],edx
  4072bc:	in     al,dx
  4072bd:	sbb    DWORD PTR [edi],ecx
  4072bf:	mov    esi,DWORD PTR [edx-0x596c73de]
  4072c5:	ret    0x4f1f
  4072c8:	adc    BYTE PTR [ecx],cl
  4072ca:	(bad)  
  4072cc:	dec    edi
  4072cd:	icebp  
  4072ce:	lods   eax,DWORD PTR ds:[esi]
  4072cf:	sbb    ah,BYTE PTR [ecx-0x7b]
  4072d2:	fcmovnu st,st(5)
  4072d4:	lock dec DWORD PTR [ebx]
  4072d7:	dec    esp
  4072d8:	jl     0x4072b4
  4072da:	in     al,0xb8
  4072dc:	adc    esi,DWORD PTR [ebp+0x598a6f50]
  4072e2:	jge    0x40730c
  4072e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072e5:	mov    dl,0x2b
  4072e7:	cwde   
  4072e8:	push   0x98850f70
  4072ed:	cs add eax,0x5239483d
  4072f3:	and    eax,0x1a271989
  4072f8:	aaa    
  4072f9:	jns    0x4072fd
  4072fb:	and    DWORD PTR [ebx+0xb719c72],esi
  407301:	leave  
  407302:	add    DWORD PTR [ebp+eax*2-0x77],eax
  407306:	jl     0x4072f0
  407308:	sub    BYTE PTR [ebp-0x60a2c536],cl
  40730e:	jno    0x407386
  407310:	mov    al,BYTE PTR [eax-0x5a]
  407313:	jg     0x407317
  407315:	mov    eax,ds:0xd5cd4c35
  40731a:	mov    ds:0x6d4cc75b,al
  40731f:	push   cs
  407320:	push   eax
  407321:	pop    esp
  407322:	jns    0x4072d6
  407324:	cmp    ebp,ebx
  407326:	enter  0xa573,0x67
  40732a:	cmp    BYTE PTR [esi+0x50],ah
  40732d:	mov    edx,0x1fcc95e4
  407332:	inc    ebx
  407333:	add    ah,BYTE PTR [ecx-0x65]
  407336:	sub    DWORD PTR [eax],eax
  407338:	xchg   edx,eax
  407339:	xchg   edi,eax
  40733a:	mov    ebp,0x509e7b96
  40733f:	pop    esi
  407340:	scas   al,BYTE PTR es:[edi]
  407341:	mov    eax,0x7afe040f
  407346:	push   eax
  407347:	and    DWORD PTR [edi+eiz*8+0x1df6d15c],esi
  40734e:	mov    ebp,0x7c7973e2
  407353:	lods   eax,DWORD PTR ds:[esi]
  407354:	ss pop edi
  407356:	mov    ds:0x17b96a56,al
  40735b:	cwde   
  40735c:	bswap  esp
  40735e:	retf   
  40735f:	rol    DWORD PTR [edi],1
  407361:	mov    esi,0x5ace61fe
  407366:	and    BYTE PTR [edi-0x51],ah
  407369:	push   eax
  40736a:	fwait
  40736b:	das    
  40736c:	mov    edx,DWORD PTR gs:[ebp-0x7f]
  407370:	ja     0x4072fd
  407372:	mov    edi,0xeeccfd42
  407377:	or     al,0x30
  407379:	add    dh,ch
  40737b:	xor    eax,0x8d702f56
  407380:	pop    esi
  407381:	jmp    0x40738b
  407383:	aad    0x66
  407385:	mov    BYTE PTR [edx],cl
  407387:	fstp   QWORD PTR [ecx+esi*2]
  40738a:	cmp    DWORD PTR [edx+0x13],0x36e1d7b7
  407391:	sub    al,0x32
  407393:	add    eax,0xd369e46
  407398:	pushf  
  407399:	mov    edx,0x90439a36
  40739e:	add    BYTE PTR [edx+0x5f7a76d6],ah
  4073a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073a5:	xchg   ebp,eax
  4073a6:	mov    ds:0xb0c509ec,al
  4073ab:	pusha  
  4073ac:	outs   dx,BYTE PTR ds:[esi]
  4073ad:	xchg   edi,eax
  4073ae:	mov    al,0x9e
  4073b0:	pusha  
  4073b1:	outs   dx,DWORD PTR ds:[esi]
  4073b2:	dec    ecx
  4073b3:	and    DWORD PTR [ebp-0x5c3b4c9e],0xf60810d0
  4073bd:	pop    ecx
  4073be:	or     BYTE PTR [ecx-0x6e],cl
  4073c1:	xchg   DWORD PTR [eax+ebp*4-0x745b0de8],ebx
  4073c8:	jns    0x40738d
  4073ca:	sub    dl,BYTE PTR ds:[edi-0x27294a]
  4073d1:	add    DWORD PTR [esi+eiz*1+0xc6849c],ebx
  4073d8:	mov    eax,0x4be217cd
  4073dd:	xor    BYTE PTR [edx],dh
  4073df:	mov    dl,0xc0
  4073e1:	loopne 0x407443
  4073e3:	xchg   esi,eax
  4073e4:	gs inc esp
  4073e6:	std    
  4073e7:	push   0xffffff9c
  4073e9:	push   eax
  4073ea:	sub    al,0xe
  4073ec:	mov    edi,ss
  4073ee:	xor    al,0x7b
  4073f0:	jae    0x407395
  4073f2:	sbb    DWORD PTR [eax+0x1c],ebx
  4073f5:	sub    DWORD PTR [edx],esi
  4073f7:	and    al,0xd4
  4073f9:	daa    
  4073fa:	jno    0x407446
  4073fc:	jbe    0x407427
  4073fe:	mov    esi,0xd67b29a7
  407403:	jg     0x40743c
  407405:	push   ecx
  407406:	jb     0x40744f
  407408:	std    
  407409:	sub    edi,DWORD PTR [edi+0x79f7c6e3]
  40740f:	shr    DWORD PTR [eax*2+0x7a3d72d3],0xf
  407417:	pop    ebx
  407418:	pusha  
  407419:	imul   eax,DWORD PTR [ecx+0x2],0x2a
  40741d:	into   
  40741e:	(bad)  
  40741f:	into   
  407420:	mov    al,ds:0x1c4e387
  407425:	pop    ecx
  407426:	sub    ch,BYTE PTR [edx+edi*1]
  407429:	cli    
  40742a:	jbe    0x4073f3
  40742c:	push   eax
  40742d:	cld    
  40742e:	pop    eax
  40742f:	lahf   
  407430:	sbb    eax,0x77eb5942
  407435:	mov    al,0xe3
  407437:	test   al,0x3f
  407439:	scas   eax,DWORD PTR es:[edi]
  40743a:	dec    ebp
  40743b:	loop   0x407419
  40743d:	dec    esi
  40743e:	mov    eax,ds:0x6d516d1
  407443:	push   esi
  407444:	bound  edi,QWORD PTR [ebx+0x5f]
  407447:	add    eax,0xa63e78c5
  40744c:	jmp    0x54e67936
  407451:	mul    BYTE PTR [ebx]
  407453:	stc    
  407454:	dec    edi
  407455:	popa   
  407456:	jns    0x407446
  407458:	int    0xa6
  40745a:	in     al,dx
  40745b:	(bad)  
  40745d:	lea    ecx,[ecx+0x4dcf11ed]
  407463:	mov    esi,0x8178485a
  407468:	dec    esp
  407469:	dec    eax
  40746a:	aas    
  40746b:	retf   
  40746c:	fidivr WORD PTR [edx-0x2a07b345]
  407472:	icebp  
  407473:	jge    0x40749c
  407475:	pop    eax
  407476:	aam    0x78
  407478:	and    al,0x6a
  40747a:	xor    ebx,eax
  40747c:	jnp    0x4074f3
  40747e:	dec    ebx
  40747f:	inc    esp
  407480:	mov    ds:0x244c4039,al
  407485:	mov    ebp,0x1d28864c
  40748a:	jecxz  0x407463
  40748c:	cmp    DWORD PTR [eax],0x68866531
  407492:	xor    al,0x50
  407494:	mov    ds:0x200bd36e,eax
  407499:	sub    bh,ah
  40749b:	xor    eax,0x730b6818
  4074a0:	aad    0xf5
  4074a2:	out    dx,al
  4074a3:	addr16 xchg edi,eax
  4074a5:	dec    edx
  4074a6:	popf   
  4074a7:	ja     0x4074f6
  4074a9:	ret    0x4f2e
  4074ac:	fld    DWORD PTR [ebx-0x37]
  4074af:	test   dl,al
  4074b1:	mov    ch,0x88
  4074b3:	icebp  
  4074b4:	dec    edx
  4074b5:	icebp  
  4074b6:	(bad)  
  4074b7:	stos   BYTE PTR es:[edi],al
  4074b8:	pop    esi
  4074b9:	in     al,dx
  4074ba:	arpl   WORD PTR [edx+0x49],bx
  4074bd:	sub    BYTE PTR [edi],ah
  4074bf:	pop    edx
  4074c0:	ret    
  4074c1:	push   0xffffff90
  4074c3:	popa   
  4074c4:	jge    0x4074bd
  4074c6:	rol    BYTE PTR [edx+0x42],1
  4074c9:	daa    
  4074ca:	std    
  4074cb:	push   ebp
  4074cc:	mov    dh,0xa4
  4074ce:	pop    es
  4074cf:	jb     0x4074e8
  4074d1:	jg     0x40751c
  4074d3:	sahf   
  4074d4:	push   eax
  4074d5:	je     0x4074d3
  4074d7:	or     DWORD PTR [ebx+esi*8-0x1cde01cd],esp
  4074de:	mov    ch,0xc1
  4074e0:	cmp    ecx,DWORD PTR [ecx]
  4074e2:	in     al,dx
  4074e3:	or     DWORD PTR [eax-0x1d3e1554],eax
  4074e9:	jbe    0x407477
  4074eb:	out    dx,eax
  4074ec:	repnz pusha 
  4074ee:	cmp    DWORD PTR [ebx],ecx
  4074f0:	push   es
  4074f1:	nop
  4074f2:	jmp    0x19aa:0xe6c0798
  4074f9:	mov    ah,BYTE PTR [ebp+0x20f1997d]
  4074ff:	sub    al,0x2d
  407501:	popf   
  407502:	out    dx,eax
  407503:	pop    es
  407504:	addr16 mov ds:0x9595,al
  407508:	xor    DWORD PTR [edi+0x7c],esi
  40750b:	dec    eax
  40750c:	aam    0x6e
  40750e:	jecxz  0x4074ba
  407510:	mov    WORD PTR ds:0xb666daf7,ss
  407516:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407517:	imul   ebx,DWORD PTR [ebx],0xffffffef
  40751a:	ror    DWORD PTR [esi-0x2ee63581],0x6e
  407521:	mov    WORD PTR [edi-0x78],?
  407524:	pop    esi
  407525:	or     eax,0x553fbb6
  40752a:	jg     0x40752a
  40752c:	cmp    DWORD PTR [esi-0x12],ebp
  40752f:	sbb    esi,DWORD PTR [ebx]
  407531:	jmp    0x43ce:0xf306bcf4
  407538:	imul   ebp,DWORD PTR [ebx],0xffffffd2
  40753b:	sbb    esp,0x925ed82f
  407541:	dec    eax
  407542:	pop    ss
  407543:	push   cs
  407544:	ds push eax
  407546:	adc    BYTE PTR [ecx+eax*8],0x2a
  40754a:	fs into 
  40754c:	and    cl,BYTE PTR [ebx-0x6f]
  40754f:	cmp    DWORD PTR [esi+ecx*4-0x66],ecx
  407553:	mov    edx,0xb0fad797
  407558:	and    DWORD PTR [eax+ecx*4+0x7d],esp
  40755c:	sub    cl,BYTE PTR [esi]
  40755e:	dec    esp
  40755f:	lods   al,BYTE PTR ds:[esi]
  407560:	dec    esi
  407561:	js     0x4074f1
  407563:	xor    DWORD PTR [eax+0x28],ebx
  407566:	aaa    
  407567:	mov    cl,0x57
  407569:	mov    eax,0xd27fa31
  40756e:	add    DWORD PTR [ebx+0x33b8d71d],edx
  407574:	add    ebx,ebx
  407576:	mov    ebx,0xaa3edf36
  40757b:	dec    ebx
  40757c:	xchg   esi,ecx
  40757e:	mov    al,0x9c
  407580:	jb     0x4075ca
  407582:	dec    edx
  407583:	push   ss
  407584:	and    eax,0x73e23fe6
  407589:	add    al,0x9c
  40758b:	leave  
  40758c:	jmp    0xd1071089
  407591:	jg     0x407536
  407593:	push   ebp
  407594:	popf   
  407595:	push   es
  407596:	ret    0x4895
  407599:	or     dh,bh
  40759b:	pop    ebp
  40759c:	icebp  
  40759d:	hlt    
  40759e:	cmp    al,0x63
  4075a0:	fld    st(6)
  4075a2:	dec    eax
  4075a3:	ins    DWORD PTR es:[edi],dx
  4075a4:	in     al,dx
  4075a5:	lock adc edi,DWORD PTR [esi+0x70c9cec]
  4075ac:	inc    esi
  4075ad:	sbb    eax,0xedcdf765
  4075b2:	push   ss
  4075b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075b4:	iret   
  4075b5:	stos   DWORD PTR es:[edi],eax
  4075b6:	cmp    dh,bl
  4075b8:	data16 hlt 
  4075ba:	mov    edx,0xff9073e6
  4075bf:	jl     0x4075c5
  4075c1:	jno    0x407560
  4075c3:	mov    esi,0xd808b6a7
  4075c8:	inc    edi
  4075c9:	jo     0x40754b
  4075cb:	xor    BYTE PTR [ebx+0x67c11cfc],dh
  4075d1:	stos   DWORD PTR es:[edi],eax
  4075d2:	stos   DWORD PTR es:[edi],eax
  4075d3:	cmp    al,0x25
  4075d5:	mov    ds:0x8b103589,al
  4075da:	addr16 jne 0x4075e7
  4075dd:	dec    ecx
  4075de:	in     al,dx
  4075df:	scas   eax,DWORD PTR es:[edi]
  4075e0:	mov    eax,0xcb20b80c
  4075e5:	repnz pusha 
  4075e7:	int    0xac
  4075e9:	or     BYTE PTR [edi+ecx*2],bl
  4075ec:	sbb    ebx,DWORD PTR [esi-0x1a]
  4075ef:	lods   eax,DWORD PTR ds:[esi]
  4075f0:	push   DWORD PTR [ebx+0x5673cc2e]
  4075f6:	jmp    0xa6fe7675
  4075fb:	xor    eax,DWORD PTR [esi-0x61]
  4075fe:	sbb    DWORD PTR [edi],0x32
  407601:	sti    
  407602:	scas   al,BYTE PTR es:[edi]
  407603:	mov    ds:0x608f95f4,eax
  407608:	pushf  
  407609:	xchg   ebp,eax
  40760a:	imul   esi,ebx,0xffffffd1
  40760d:	shl    DWORD PTR [edi],cl
  40760f:	inc    ebp
  407610:	inc    edx
  407611:	sub    BYTE PTR [edx+0x235c52f7],bl
  407617:	xchg   DWORD PTR [eax+0x7f],esp
  40761a:	jl     0x407605
  40761c:	sbb    esp,DWORD PTR [ebx+esi*1]
  40761f:	xlat   BYTE PTR ds:[ebx]
  407620:	fisub  DWORD PTR [ebp+0x4d]
  407623:	jle    0x4075a7
  407625:	aaa    
  407626:	inc    ecx
  407627:	ins    DWORD PTR es:[edi],dx
  407628:	adc    BYTE PTR [ebp+0x5b6a7d50],dl
  40762e:	or     eax,0xf437826a
  407633:	push   ds
  407634:	mov    al,ds:0x495e8f32
  407639:	mov    edx,0xeea81995
  40763e:	and    BYTE PTR [esi-0x19],0x40
  407642:	imul   esp,DWORD PTR [esi],0x1797114f
  407648:	push   ebx
  407649:	dec    ecx
  40764a:	mov    WORD PTR [eax],?
  40764c:	mov    eax,0x7a88dd5d
  407651:	mov    DWORD PTR [esi+esi*8+0x7e5274f6],ecx
  407658:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40765a:	jl     0x4075e0
  40765c:	xor    BYTE PTR [ecx+0x5717c026],dl
  407662:	adc    DWORD PTR [ecx+esi*1],ebx
  407665:	push   esp
  407666:	mov    ds:0x67e3cb6a,eax
  40766b:	push   es
  40766c:	fs sub eax,0x24803b7e
  407672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407673:	xchg   ecx,eax
  407674:	push   ss
  407675:	jmp    0xd4a1c6da
  40767a:	jne    0x407609
  40767c:	fsub   st,st(2)
  40767e:	xor    al,BYTE PTR [edi]
  407680:	xchg   ebx,eax
  407681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407682:	xchg   esi,eax
  407683:	mov    dh,0x3a
  407685:	or     al,0xb7
  407687:	jo     0x407654
  407689:	mov    eax,ds:0x12b83a3a
  40768e:	ss cmp ch,BYTE PTR ds:[edx+esi*8+0x10832343]
  407697:	int    0x52
  407699:	jno    0x40763c
  40769b:	pop    ss
  40769c:	fidiv  DWORD PTR ds:[eax]
  40769f:	inc    eax
  4076a0:	jle    0x4076f3
  4076a2:	nop
  4076a3:	cli    
  4076a4:	jmp    0x407679
  4076a6:	outs   dx,BYTE PTR ds:[esi]
  4076a7:	mov    al,0xee
  4076a9:	adc    ebp,DWORD PTR [esp+ecx*2]
  4076ac:	fisub  WORD PTR [esi-0x4ac7f467]
  4076b2:	cmp    esi,DWORD PTR es:[ebx+ecx*1+0x7846e929]
  4076ba:	nop
  4076bb:	xor    DWORD PTR [ecx+eax*1],ebx
  4076be:	dec    edx
  4076bf:	stos   DWORD PTR es:[edi],eax
  4076c0:	push   es
  4076c1:	imul   eax,DWORD PTR [esi-0x57633b3d],0x357fcc05
  4076cb:	sahf   
  4076cc:	sbb    al,0x2d
  4076ce:	js     0x40772c
  4076d0:	(bad)  
  4076d1:	push   ebp
  4076d2:	test   DWORD PTR [edx],0xc549c93b
  4076d8:	dec    esi
  4076d9:	mov    esp,0xaf0c6949
  4076de:	mov    eax,0x9582c520
  4076e3:	push   edi
  4076e4:	xchg   ebp,eax
  4076e5:	cmp    ch,bl
  4076e7:	les    ecx,FWORD PTR [ebx-0x5f]
  4076ea:	sbb    bl,BYTE PTR ss:[edx+0x2445342a]
  4076f1:	jle    0x407677
  4076f3:	mov    al,0x89
  4076f5:	mov    cl,0xa3
  4076f7:	sti    
  4076f8:	lock jg 0x4076fc
  4076fb:	push   cs
  4076fc:	popa   
  4076fd:	mov    al,0x55
  407700:	pop    ecx
  407701:	outs   dx,DWORD PTR ds:[esi]
  407702:	ror    BYTE PTR fs:[esi],0x4f
  407706:	mov    ah,0x99
  407708:	sbb    DWORD PTR [edx],edx
  40770a:	sbb    bl,BYTE PTR [ecx+0x660ccd2b]
  407710:	push   esi
  407711:	jne    0x407704
  407713:	push   esp
  407714:	scas   al,BYTE PTR es:[edi]
  407715:	cmp    esp,DWORD PTR [eax+esi*8-0x4a]
  407719:	ins    BYTE PTR es:[edi],dx
  40771a:	adc    BYTE PTR [edi-0x32],dl
  40771d:	loope  0x4076e8
  40771f:	or     eax,0xd4999ced
  407724:	cdq    
  407725:	mov    ebp,DWORD PTR [ebp+eax*8+0xc]
  407729:	add    BYTE PTR [bx-0x40],0x46
  40772e:	outs   dx,DWORD PTR ds:[esi]
  40772f:	aam    0x29
  407731:	popa   
  407732:	(bad)  [eax-0x420207b9]
  407738:	mov    ecx,0xf4df8547
  40773d:	leave  
  40773e:	mov    ah,0xb5
  407740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407741:	sti    
  407742:	push   esp
  407743:	push   ebx
  407744:	int    0xc0
  407746:	js     0x40773e
  407748:	loope  0x407744
  40774a:	push   ss
  40774b:	adc    ah,ch
  40774d:	sub    al,0x2d
  40774f:	cmp    DWORD PTR [edx-0x4f],esi
  407752:	jmp    0xa6ce:0xb8915a74
  407759:	js     0x407728
  40775b:	imul   eax,DWORD PTR [ecx-0xf],0x5b
  40775f:	or     ebp,DWORD PTR [ebp+0x1b]
  407762:	pop    es
  407763:	popf   
  407764:	sub    al,0x6d
  407766:	fisubr WORD PTR [edx-0x3c]
  407769:	cld    
  40776a:	xchg   edi,eax
  40776b:	add    BYTE PTR [eax],ch
  40776d:	mov    DWORD PTR [ecx+eiz*8-0x46701900],ecx
  407774:	xchg   ebx,eax
  407775:	jge    0x407798
  407777:	call   0x803f94a7
  40777c:	imul   esi,DWORD PTR [ebp-0xc82b347],0xda862841
  407786:	dec    edi
  407787:	jp     0x40771d
  407789:	dec    eax
  40778a:	mov    ds:0x132f0609,al
  40778f:	cmp    eax,0x2f92ef70
  407794:	div    esp
  407796:	mov    esi,0x62da365f
  40779b:	mov    eax,0x97f4c87a
  4077a0:	push   edx
  4077a1:	pushf  
  4077a2:	sub    DWORD PTR [edx+0x41f6fd46],eax
  4077a8:	mov    edx,0xe92ab1ab
  4077ad:	sub    edx,DWORD PTR [ebx-0x618a9220]
  4077b3:	aas    
  4077b4:	popf   
  4077b5:	sub    eax,0xc704386d
  4077ba:	repnz out dx,al
  4077bc:	mov    dh,0xb
  4077be:	aad    0xa9
  4077c0:	(bad)  
  4077c2:	pusha  
  4077c3:	retf   
  4077c4:	mov    dh,0xf7
  4077c6:	rcr    BYTE PTR ds:0x5b104339,cl
  4077cc:	dec    ebp
  4077cd:	xor    al,0x54
  4077cf:	inc    ecx
  4077d0:	test   BYTE PTR ds:0x5020ea05,ch
  4077d6:	mov    bl,0x4b
  4077d8:	inc    ebp
  4077d9:	xor    ecx,DWORD PTR ds:0xbf692766
  4077df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077e0:	inc    edi
  4077e1:	xchg   ebx,eax
  4077e2:	xchg   cl,dh
  4077e4:	cld    
  4077e5:	fild   DWORD PTR [edi]
  4077e7:	or     dl,BYTE PTR [ecx]
  4077e9:	aam    0x8b
  4077eb:	sub    DWORD PTR [eax+0x6f1f05b0],ebx
  4077f1:	jb     0x40782d
  4077f3:	sub    ch,bh
  4077f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077f6:	cmp    ebx,esp
  4077f8:	aas    
  4077f9:	sbb    bh,dl
  4077fb:	(bad)  
  4077fc:	fmul   DWORD PTR [eax-0x231c751]
  407802:	test   DWORD PTR [ebp-0x13],eax
  407805:	and    bh,BYTE PTR [ebx+0x5a]
  407808:	in     al,dx
  407809:	dec    esi
  40780a:	aad    0xb6
  40780c:	adc    DWORD PTR [eax-0x7b63fa29],ebx
  407812:	add    eax,0x873ab417
  407817:	jmp    0xb82:0x6a8d52a0
  40781e:	out    0x64,eax
  407820:	in     al,0x9b
  407822:	cld    
  407823:	cmp    ebx,DWORD PTR [eax+0x33]
  407826:	pop    eax
  407827:	test   DWORD PTR [ecx],ecx
  407829:	xlat   BYTE PTR ds:[ebx]
  40782a:	inc    ebx
  40782b:	(bad)
  40782f:	xchg   esi,eax
  407830:	ja     0x4077e9
  407832:	popa   
  407833:	sbb    BYTE PTR [eax],dl
  407835:	loope  0x40786d
  407837:	lahf   
  407838:	loop   0x40781d
  40783a:	mov    dl,0xa6
  40783c:	pop    ebx
  40783d:	cs jmp 0x4078ab
  407840:	adc    al,0x99
  407842:	pop    edx
  407843:	push   edx
  407844:	or     ch,0xb4
  407847:	or     al,0xb4
  407849:	test   al,0x7d
  40784b:	dec    ecx
  40784c:	xor    eax,0x29eacf3e
  407851:	pop    esp
  407852:	jge    0x407871
  407854:	pushf  
  407855:	outs   dx,DWORD PTR ds:[esi]
  407856:	ins    DWORD PTR es:[edi],dx
  407857:	add    eax,DWORD PTR [eax]
  407859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40785a:	inc    esp
  40785b:	dec    esp
  40785c:	mov    es,ebp
  40785e:	jmp    0xb408729c
  407863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407864:	call   0xf7ef1339
  407869:	(bad)  
  40786a:	bound  ebx,QWORD PTR [ebp-0x13fb3a52]
  407870:	mov    ecx,edx
  407872:	loop   0x40780c
  407874:	sar    al,cl
  407876:	jmp    DWORD PTR [edx-0x12]
  407879:	aad    0xe1
  40787b:	mov    al,ds:0xcc9d6e70
  407880:	mov    ebp,0x416b21a6
  407885:	cmp    DWORD PTR [edi+0x22cd9035],ecx
  40788b:	fstp   st(2)
  40788d:	fcomi  st,st(5)
  40788f:	dec    ecx
  407890:	mov    esi,0xad2ca0a7
  407895:	dec    edx
  407896:	dec    ebx
  407897:	test   eax,0xae526a31
  40789c:	dec    esi
  40789d:	out    0x51,eax
  40789f:	sub    bl,al
  4078a1:	xchg   esp,eax
  4078a2:	push   0xc33bd021
  4078a7:	mov    cl,0xac
  4078a9:	mov    al,0xc
  4078ab:	or     eax,0xbd9859bf
  4078b0:	jnp    0x407880
  4078b2:	or     al,ch
  4078b4:	fwait
  4078b5:	jmp    0xd1f8:0xed73b858
  4078bc:	inc    eax
  4078bd:	(bad)  
  4078be:	pop    ds
  4078bf:	scas   al,BYTE PTR es:[edi]
  4078c0:	outs   dx,BYTE PTR ds:[esi]
  4078c1:	xchg   ebp,eax
  4078c2:	xchg   ecx,eax
  4078c3:	es nop
  4078c5:	iret   
  4078c6:	outs   dx,BYTE PTR ds:[esi]
  4078c7:	shl    dl,0xa9
  4078ca:	and    bh,dh
  4078cc:	add    DWORD PTR [ecx],0x37
  4078cf:	jns    0x407911
  4078d1:	mov    cl,0x85
  4078d3:	push   ecx
  4078d4:	jae    0x407942
  4078d6:	repz xor BYTE PTR [edx+0x55],0xdb
  4078db:	fcmovu st,st(2)
  4078dd:	ins    BYTE PTR es:[edi],dx
  4078de:	test   DWORD PTR [ebx*4+0x6d9a276f],ebx
  4078e5:	test   bl,0xba
  4078e8:	js     0x4078d8
  4078ea:	stos   BYTE PTR es:[edi],al
  4078eb:	data16 jge 0x407875
  4078ee:	lahf   
  4078ef:	xor    DWORD PTR [ebp-0x641cb336],ebp
  4078f5:	jo     0x407920
  4078f7:	stos   BYTE PTR es:[edi],al
  4078f8:	xor    eax,0x3f1b1d77
  4078fd:	xchg   esp,eax
  4078fe:	inc    ecx
  4078ff:	add    al,BYTE PTR [edx]
  407901:	or     edi,ecx
  407903:	cdq    
  407904:	out    0x83,eax
  407906:	pop    ss
  407907:	stos   DWORD PTR es:[edi],eax
  407908:	addr16 leave 
  40790a:	shl    dl,1
  40790c:	enter  0x6ba3,0x8c
  407910:	out    0x56,al
  407912:	jp     0x40793d
  407914:	sub    BYTE PTR [ebx+0x5ebd553b],dh
  40791a:	gs sti 
  40791c:	jle    0x4078c6
  40791e:	popa   
  40791f:	push   0xffffffb6
  407921:	pop    edi
  407923:	xlat   BYTE PTR ds:[ebx]
  407924:	mov    edx,esp
  407926:	jmp    0x10ed827c
  40792b:	(bad)  
  40792c:	rcr    BYTE PTR [ebp+0x0],cl
  40792f:	mov    DWORD PTR [ebx-0x190f16b2],esi
  407935:	sub    cl,cl
  407937:	jg     0x407926
  407939:	sbb    cl,bl
  40793b:	add    ch,BYTE PTR ds:0x10ec606c
  407941:	sbb    BYTE PTR [edi+0x7f],cl
  407944:	stos   DWORD PTR es:[edi],eax
  407945:	(bad)  
  407946:	dec    esp
  407947:	aad    0xf9
  407949:	test   BYTE PTR [ebx+0x2f],bh
  40794c:	scas   eax,DWORD PTR es:[edi]
  40794d:	fidiv  WORD PTR [eax+0x1]
  407950:	shl    BYTE PTR [edx],0x3f
  407953:	inc    eax
  407954:	mov    esi,0xd542b6c
  407959:	adc    al,0x11
  40795b:	mov    ss,WORD PTR [edi+0x7cdfe3d2]
  407961:	gs sub al,0xb4
  407964:	and    eax,0xe4273edb
  407969:	(bad)  
  40796a:	test   DWORD PTR [edi-0x5b75c8a3],ecx
  407970:	not    DWORD PTR [ebp-0x4f538a80]
  407976:	add    bh,al
  407978:	leave  
  407979:	call   0x5c91:0x5a0a1a2f
  407980:	sti    
  407981:	cld    
  407982:	inc    edi
  407983:	je     0x407955
  407985:	mov    ch,0xa
  407987:	jge    0x40797e
  407989:	jecxz  0x40795d
  40798b:	in     al,dx
  40798c:	mov    bh,0xa6
  40798e:	jnp    0x407920
  407990:	lods   al,BYTE PTR ds:[esi]
  407991:	mov    esi,0xc28b9c65
  407996:	out    dx,al
  407997:	clc    
  407998:	push   ebx
  407999:	jp     0x40799b
  40799b:	cdq    
  40799c:	push   ebp
  40799d:	xchg   ebp,eax
  40799e:	pop    edx
  40799f:	sbb    DWORD PTR [ebx+eiz*1],ebp
  4079a2:	adc    eax,0x1bd5692b
  4079a7:	add    edx,edi
  4079a9:	and    BYTE PTR [esi+0x11],al
  4079ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079ad:	imul   ebp,DWORD PTR [eax+0x1c],0x31d977f1
  4079b4:	sub    DWORD PTR [eax],0x7e698777
  4079ba:	adc    DWORD PTR [eax+0x6d],0xffffffca
  4079be:	adc    edx,esp
  4079c0:	push   ebx
  4079c1:	test   DWORD PTR [edx-0x55],0xfe88234e
  4079c8:	pop    ebx
  4079c9:	stc    
  4079ca:	sahf   
  4079cb:	inc    esi
  4079cc:	into   
  4079cd:	inc    edx
  4079ce:	mov    esp,0xe720039e
  4079d3:	push   es
  4079d4:	push   edi
  4079d5:	fiadd  WORD PTR [eax-0x481a3ab7]
  4079db:	mov    cl,0xda
  4079dd:	jno    0x4079ca
  4079df:	stc    
  4079e0:	stc    
  4079e1:	fs sti 
  4079e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079e4:	push   esp
  4079e5:	dec    ebp
  4079e6:	jp     0x4079cc
  4079e8:	out    dx,al
  4079e9:	dec    esi
  4079ea:	pop    edx
  4079eb:	sbb    dh,BYTE PTR [eax-0x6cddf0aa]
  4079f1:	xor    al,BYTE PTR [esi+0x46]
  4079f4:	jp     0x407a4d
  4079f6:	mov    ecx,0x112888eb
  4079fb:	pop    es
  4079fc:	mov    DWORD PTR [esi+0x30],esi
  4079ff:	pop    ebp
  407a00:	xchg   ecx,eax
  407a01:	stc    
  407a02:	(bad)  [ecx-0x1f]
  407a05:	mov    eax,ds:0xb98b2d0
  407a0a:	popa   
  407a0b:	aaa    
  407a0c:	jns    0x4079a8
  407a0e:	in     eax,0x3f
  407a10:	daa    
  407a11:	mov    edx,0xa94c23ff
  407a16:	neg    BYTE PTR [esi+0xd4c2e26]
  407a1c:	push   edx
  407a1d:	lods   al,BYTE PTR ds:[esi]
  407a1e:	fstp   DWORD PTR [esi+0x65]
  407a21:	push   ss
  407a22:	mov    DWORD PTR [edi+0x46],eax
  407a25:	sub    eax,0xe0254493
  407a2a:	cmp    BYTE PTR [edi-0x38],0x4e
  407a2e:	or     al,0x5f
  407a30:	cmp    cl,dl
  407a32:	sbb    al,0x8b
  407a34:	jae    0x407a68
  407a36:	(bad)  
  407a37:	int    0x51
  407a39:	in     eax,0x45
  407a3b:	fnsave [esi-0x30]
  407a3e:	push   ss
  407a3f:	jmp    0xbbfa:0x84952327
  407a46:	ja     0x407a39
  407a48:	daa    
  407a49:	mov    ecx,0x91fa4afe
  407a4e:	(bad)  
  407a4f:	dec    esp
  407a50:	or     DWORD PTR [ecx],ebx
  407a52:	rol    BYTE PTR [edx+0x21c650e8],cl
  407a58:	jb     0x407a28
  407a5a:	scas   eax,DWORD PTR es:[edi]
  407a5b:	shl    DWORD PTR [eax-0xc46eb98],1
  407a61:	xlat   BYTE PTR ds:[ebx]
  407a62:	sahf   
  407a63:	fs aam 0x98
  407a66:	sar    ah,0x2b
  407a69:	cdq    
  407a6a:	mov    ds:0x84b49a7c,eax
  407a6f:	mov    eax,ds:0xd3c8bb51
  407a74:	push   edx
  407a75:	inc    edi
  407a76:	dec    ebx
  407a77:	mov    esi,0xe76fa9a8
  407a7c:	arpl   WORD PTR [eax-0x6c7429ea],si
  407a82:	jp     0x407a3c
  407a84:	lock adc ebp,ecx
  407a87:	stc    
  407a88:	cmp    DWORD PTR [edx],edi
  407a8a:	xchg   esi,eax
  407a8b:	loope  0x407a2f
  407a8d:	js     0x407a1a
  407a8f:	fs stos DWORD PTR es:[edi],eax
  407a91:	fiadd  WORD PTR [ebx]
  407a93:	push   esi
  407a94:	cmp    DWORD PTR [edx-0x171f3b6d],esi
  407a9a:	sar    BYTE PTR [ebx+edx*8],1
  407a9d:	(bad)  
  407a9f:	inc    ecx
  407aa0:	mov    cl,0xb2
  407aa2:	xor    eax,0xbe6f4a30
  407aa7:	data16 ja 0x407a9c
  407aaa:	push   ecx
  407aab:	call   0x28f21851
  407ab0:	loop   0x407a35
  407ab2:	xlat   BYTE PTR ds:[ebx]
  407ab3:	jg     0x407a93
  407ab5:	imul   edx,DWORD PTR [ebp+0x43],0x67
  407ab9:	inc    esp
  407aba:	xor    ch,al
  407abc:	into   
  407abd:	lds    edi,FWORD PTR [edx-0x5a]
  407ac0:	mov    dh,0x6f
  407ac2:	stc    
  407ac3:	xchg   ebp,eax
  407ac4:	aad    0x8e
  407ac6:	xor    ah,BYTE PTR [esi-0x73eb52f6]
  407acc:	mov    esp,DWORD PTR [edi]
  407ace:	rcl    BYTE PTR [eax-0x2],0x97
  407ad2:	adc    edx,DWORD PTR [eax]
  407ad4:	fcmovb st,st(4)
  407ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ad7:	fwait
  407ad8:	add    DWORD PTR [edx+0x4],edi
  407adb:	lods   eax,DWORD PTR ds:[esi]
  407adc:	push   es
  407add:	ds mov edx,0x3578bbe9
  407ae3:	sbb    DWORD PTR [ebp-0x6c0fbe49],esi
  407ae9:	sbb    DWORD PTR [esp+esi*4+0x3e8314f6],0xe28d2d26
  407af4:	call   0x5fd24072
  407af9:	and    edi,DWORD PTR [ebx*4+0x11af4ce9]
  407b00:	in     al,0x33
  407b02:	cmp    esp,edx
  407b04:	push   es
  407b05:	or     BYTE PTR [esi],ah
  407b07:	iret   
  407b08:	sub    eax,0x2cf29d92
  407b0d:	inc    edi
  407b0e:	fist   DWORD PTR [edx]
  407b10:	pop    esp
  407b11:	jno    0x407ac1
  407b13:	lds    esp,FWORD PTR [eax+0x26c57c50]
  407b19:	pop    ebp
  407b1a:	mov    cs:0xf08e050d,al
  407b20:	sbb    dh,BYTE PTR [edi+0x29]
  407b23:	imul   edx,ebx,0xffffffcf
  407b26:	loopne 0x407b44
  407b28:	movhps QWORD PTR [ebx+0x55],xmm3
  407b2c:	xchg   edx,eax
  407b2d:	jae    0x407bac
  407b2f:	fld    QWORD PTR [ecx]
  407b31:	out    0x3a,eax
  407b33:	and    ecx,DWORD PTR [edx]
  407b35:	xor    eax,0x74e301bf
  407b3a:	cdq    
  407b3b:	(bad)  
  407b3c:	dec    ebp
  407b3d:	xor    edi,ecx
  407b3f:	add    edi,0x3272db
  407b45:	not    edi
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0x670870e0
  407e5b:	out    0x33,eax
  407e5d:	iret   
  407e5e:	and    bh,BYTE PTR [esp+edi*2-0x2c]
  407e62:	pop    edi
  407e63:	jl     0x407ee1
  407e65:	xchg   esi,eax
  407e66:	rcl    BYTE PTR [edx-0x3f],1
  407e69:	sub    eax,0x2a5da5f5
  407e6e:	sti    
  407e6f:	xchg   ebp,eax
  407e70:	and    al,0xa0
  407e72:	dec    ecx
  407e73:	or     eax,0xc249c162
  407e78:	loopne 0x407e9f
  407e7a:	std    
  407e7b:	inc    ecx
  407e7c:	ret    0x6133
  407e7f:	outs   dx,DWORD PTR ds:[esi]
  407e80:	push   esi
  407e81:	mov    edi,0x652e04f7
  407e86:	sub    dh,BYTE PTR [ecx+0x78]
  407e89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e8a:	lods   eax,DWORD PTR ds:[esi]
  407e8b:	push   esp
  407e8c:	sub    ebx,DWORD PTR [edx]
  407e8e:	inc    esp
  407e8f:	sti    
  407e90:	adc    al,0x64
  407e92:	xlat   BYTE PTR ds:[ebx]
  407e93:	sub    al,0xe5
  407e95:	sub    al,0xb9
  407e97:	adc    DWORD PTR [edx+0x65],0xf07914f0
  407e9e:	cmp    eax,0x1c9d6edc
  407ea3:	scas   al,BYTE PTR es:[edi]
  407ea4:	xchg   ebp,eax
  407ea5:	bound  esi,QWORD PTR [ecx+esi*8+0x52b5af9b]
  407eac:	call   0xf8e909a
  407eb1:	test   al,0x6b
  407eb3:	shl    ah,1
  407eb5:	jecxz  0x407ef9
  407eb7:	xchg   esi,eax
  407eb8:	and    DWORD PTR [esi+esi*1+0x5e],ebp
  407ebc:	sahf   
  407ebd:	xor    ah,BYTE PTR [edi]
  407ebf:	leave  
  407ec0:	cmc    
  407ec1:	mov    esp,0xecb3e15e
  407ec6:	adc    al,0xf2
  407ec8:	(bad)  
  407ec9:	pusha  
  407eca:	dec    edi
  407ecb:	mov    DWORD PTR [ecx],edx
  407ecd:	lock ror DWORD PTR [edi],cl
  407ed0:	or     eax,0x5926fcea
  407ed5:	inc    eax
  407ed6:	add    eax,0xac309ebc
  407edb:	pop    ebp
  407edc:	dec    DWORD PTR [ecx-0x9]
  407edf:	int3   
  407ee0:	loopne 0x407f06
  407ee2:	popf   
  407ee3:	rol    ecx,0x9f
  407ee6:	push   es
  407ee7:	sbb    eax,edx
  407ee9:	or     edi,DWORD PTR ds:0xaea5066b
  407eef:	fist   WORD PTR [eax+0x6439aac8]
  407ef5:	fld    DWORD PTR [ebp-0x67]
  407ef8:	sti    
  407ef9:	clc    
  407efa:	push   edi
  407efb:	cdq    
  407efc:	retf   0xedd1
  407eff:	aam    0x15
  407f01:	or     eax,0xa06979d0
  407f06:	push   esp
  407f07:	sbb    BYTE PTR [ecx],al
  407f09:	in     eax,dx
  407f0a:	adc    al,0xda
  407f0c:	sub    edx,eax
  407f0e:	loopne 0x407ece
  407f10:	jbe    0x407ecd
  407f12:	mov    ah,ah
  407f14:	ins    DWORD PTR es:[edi],dx
  407f15:	retf   0x6b44
  407f18:	js     0x407ee0
  407f1a:	shl    BYTE PTR [edx],0x4a
  407f1d:	inc    ebp
  407f1e:	js     0x407ec5
  407f20:	cdq    
  407f21:	cmp    eax,0x58e4ea2d
  407f26:	jg     0x407f1b
  407f28:	pop    ecx
  407f29:	adc    ebp,DWORD PTR [edx]
  407f2b:	xor    cl,BYTE PTR [ecx-0x32]
  407f2e:	in     al,dx
  407f2f:	lods   eax,DWORD PTR ds:[esi]
  407f30:	cmp    al,ch
  407f32:	stos   BYTE PTR es:[edi],al
  407f33:	fs (bad) 
  407f35:	rol    edi,0x70
  407f38:	(bad)  
  407f3a:	dec    edx
  407f3b:	call   FWORD PTR [edx+0x61545c7]
  407f41:	fcom   QWORD PTR [esi+eax*4+0xe]
  407f45:	stos   BYTE PTR es:[edi],al
  407f46:	dec    ebp
  407f47:	jecxz  0x407f56
  407f49:	das    
  407f4a:	lock jecxz 0x407ef8
  407f4d:	dec    eax
  407f4e:	or     al,0x52
  407f50:	scas   eax,DWORD PTR es:[edi]
  407f51:	test   eax,0xee97804d
  407f56:	test   al,0xda
  407f58:	outs   dx,BYTE PTR ds:[esi]
  407f59:	fcomp  DWORD PTR [ebp+0x47f87642]
  407f5f:	retf   0xf863
  407f62:	rcl    BYTE PTR [ebp+eiz*8+0x2f],1
  407f66:	fisub  WORD PTR [ebp-0x3868e55a]
  407f6c:	xchg   ebx,eax
  407f6d:	fwait
  407f6e:	hlt    
  407f6f:	sbb    eax,0xb877c74c
  407f74:	in     al,dx
  407f75:	dec    ecx
  407f76:	and    eax,0x70bfd8b0
  407f7b:	repz push esi
  407f7d:	jb     0x407fc3
  407f7f:	test   eax,0xf86c25c9
  407f84:	int    0x43
  407f86:	ret    0x2d3e
  407f89:	sub    edi,DWORD PTR [eax+ebx*8]
  407f8c:	push   es
  407f8d:	leave  
  407f8e:	jmp    0xad6b365
  407f93:	cmc    
  407f94:	jnp    0x407fd5
  407f96:	mov    eax,ds:0x292d7665
  407f9b:	jb     0x407f5d
  407f9d:	mov    DWORD PTR [esi+edi*2-0x6e],ebp
  407fa1:	pushf  
  407fa2:	cmp    dh,BYTE PTR ds:0xc0487de
  407fa8:	shl    eax,0x77
  407fab:	scas   al,BYTE PTR es:[edi]
  407fac:	mov    bh,0xef
  407fae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fb0:	adc    bl,BYTE PTR [edx+0x60]
  407fb3:	mov    DWORD PTR [ebx],esp
  407fb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fb6:	adc    DWORD PTR [eax+0x5544a715],ebx
  407fbc:	jmp    0xba47:0x13454a36
  407fc3:	pusha  
  407fc4:	icebp  
  407fc5:	mov    dh,0xb5
  407fc7:	push   es
  407fc8:	push   eax
  407fc9:	mov    dh,0x94
  407fcb:	add    eax,0x1c40a3c3
  407fd0:	int3   
  407fd1:	retf   
  407fd2:	sub    ebp,esp
  407fd4:	cdq    
  407fd5:	test   al,0x1d
  407fd7:	inc    edi
  407fd8:	adc    DWORD PTR [ecx+0x62],edi
  407fdb:	scas   eax,DWORD PTR es:[edi]
  407fdc:	es pop ss
  407fde:	ficom  DWORD PTR [eax-0x46]
  407fe1:	out    dx,eax
  407fe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fe3:	test   eax,0xf527b07c
  407fe8:	mov    BYTE PTR ds:0x3c88d8fe,bh
  407fee:	arpl   WORD PTR ds:[ebx],di
  407ff1:	or     bl,BYTE PTR [ebx-0x73]
  407ff4:	cmp    ah,bl
  407ff6:	bound  ebp,QWORD PTR [edx]
  407ff8:	mov    bl,0xa0
  407ffa:	mov    BYTE PTR ds:0xbeb7ee7,dh
  408000:	(bad)  
  408001:	jns    0x408070
  408003:	int3   
  408004:	scas   al,BYTE PTR es:[edi]
  408005:	inc    edi
  408006:	sub    al,0xa9
  408008:	cmp    al,0xae
  40800a:	mov    dh,0x84
  40800c:	mov    esp,0x3e3fb4de
  408011:	and    ebx,DWORD PTR [edi]
  408013:	js     0x408028
  408015:	shr    BYTE PTR [esi-0xe],0x4e
  408019:	mov    al,0x5a
  40801b:	and    cl,BYTE PTR [edx+0x28]
  40801e:	jg     0x40801a
  408020:	in     eax,0x13
  408022:	xchg   ecx,eax
  408023:	fcom   DWORD PTR [esi+0x7]
  408026:	mul    dh
  408028:	mov    bh,0x9b
  40802a:	and    DWORD PTR [eax+eax*2-0x1168ba76],0xffffffbc
  408032:	add    BYTE PTR [edi+ebp*2-0x5a],cl
  408036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408037:	dec    ebx
  408038:	(bad)  
  408039:	mov    ecx,0x43d9248d
  40803e:	outs   dx,BYTE PTR ds:[esi]
  40803f:	je     0x407ffd
  408041:	and    al,0x77
  408043:	(bad)  
  408044:	pop    ebp
  408045:	sub    DWORD PTR [edx],edx
  408047:	loope  0x4080c6
  408049:	xchg   BYTE PTR [ebx+0x5f2e3c03],bh
  40804f:	mov    eax,?
  408051:	jbe    0x4080a6
  408053:	ds xchg ebp,eax
  408055:	call   0x193f:0x73bacd8
  40805c:	mov    ah,0x46
  40805e:	js     0x40802a
  408060:	inc    edi
  408061:	leave  
  408062:	aaa    
  408063:	push   es
  408064:	mov    edx,0x4908cf7b
  408069:	push   ss
  40806a:	mov    ds:0x8aef7739,eax
  40806f:	test   esp,esi
  408071:	clc    
  408072:	fwait
  408073:	sub    eax,0x54861c49
  408078:	bswap  esi
  40807a:	cli    
  40807b:	js     0x4080ca
  40807d:	dec    ebx
  40807e:	mov    al,0x76
  408080:	jnp    0x4080c9
  408082:	sub    eax,0xd75c51d2
  408087:	icebp  
  408088:	aaa    
  408089:	sub    eax,0xa71fb904
  40808e:	aas    
  40808f:	(bad)  
  408091:	jns    0x40805b
  408093:	fimul  DWORD PTR [ebp-0x54]
  408096:	lods   al,BYTE PTR ds:[esi]
  408097:	out    dx,al
  408098:	cmp    DWORD PTR [edx+0x5b61743d],ecx
  40809e:	cmp    DWORD PTR [esp+edx*4-0x28],0xd435bbad
  4080a6:	jo     0x40805a
  4080a8:	inc    edi
  4080a9:	xor    DWORD PTR [edi],esi
  4080ab:	loopne 0x4080eb
  4080ad:	cs sub dh,ch
  4080b0:	xchg   edi,eax
  4080b1:	outs   dx,BYTE PTR ds:[esi]
  4080b2:	adc    eax,0x35d485e5
  4080b7:	jb     0x40805d
  4080b9:	sbb    bl,BYTE PTR [ebx-0x68]
  4080bc:	in     al,0x12
  4080be:	sar    ebp,cl
  4080c0:	ret    0x1d89
  4080c3:	int    0xcb
  4080c5:	mov    eax,0xe41b5adc
  4080ca:	push   edi
  4080cb:	inc    ebx
  4080cc:	cli    
  4080cd:	xchg   bl,bh
  4080cf:	dec    esi
  4080d0:	rcl    DWORD PTR [ecx-0x42e489ab],cl
  4080d6:	xchg   edi,eax
  4080d7:	fidivr DWORD PTR [ebx-0x7b]
  4080da:	rcl    BYTE PTR [ecx+0x25],cl
  4080dd:	mov    edi,0xa7956af
  4080e2:	out    0x2,al
  4080e4:	sub    BYTE PTR [eax],0x9c
  4080e7:	int3   
  4080e8:	shr    BYTE PTR [edx],cl
  4080ea:	imul   esp,DWORD PTR [esi+edi*4+0x36],0xffffffac
  4080ef:	imul   edx,DWORD PTR [ebx-0x53],0xffffffe8
  4080f3:	and    DWORD PTR [eax-0x6d3d6554],esi
  4080f9:	pop    esp
  4080fa:	aad    0x71
  4080fc:	cmp    BYTE PTR [eax+0x37],ah
  4080ff:	sub    DWORD PTR [ecx],edi
  408101:	popa   
  408102:	out    dx,eax
  408103:	jnp    0x408114
  408105:	mov    bh,0xf4
  408107:	retf   
  408108:	cwde   
  408109:	dec    ecx
  40810a:	test   al,0xd1
  40810c:	outs   dx,DWORD PTR ds:[esi]
  40810d:	aas    
  40810e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40810f:	ds (bad) 
  408111:	iret   
  408112:	push   0xd3d0ae7d
  408117:	shr    DWORD PTR [edx+ecx*4],1
  40811a:	leave  
  40811b:	add    edi,DWORD PTR [ebp-0x7c]
  40811e:	dec    ebp
  40811f:	ret    0x4569
  408122:	sub    dl,BYTE PTR ds:0xf07c7a26
  408128:	mov    ah,0xdc
  40812a:	mov    cl,0x50
  40812c:	add    al,ch
  40812e:	lahf   
  40812f:	dec    edi
  408130:	fcomp  DWORD PTR [ebp+0x7a]
  408133:	pop    eax
  408134:	push   0x90c4a976
  408139:	div    BYTE PTR [ecx-0x2e]
  40813c:	push   esp
  40813d:	out    dx,eax
  40813e:	imul   edi,DWORD PTR [esi+0x4c7a11d0],0x8dffe1d3
  408148:	aaa    
  408149:	xchg   BYTE PTR [esi-0x65817542],ah
  40814f:	fs jg  0x4081c3
  408152:	das    
  408153:	enter  0x779f,0xa6
  408157:	adc    eax,0xdcb8241
  40815c:	mov    al,ds:0x5be16fb4
  408161:	inc    BYTE PTR [ecx-0x7357970c]
  408167:	jmp    0x4081bd
  408169:	pop    eax
  40816a:	in     al,0x9a
  40816c:	xchg   esi,eax
  40816d:	mov    esp,0x80e6b2d6
  408172:	outs   dx,BYTE PTR ds:[esi]
  408173:	inc    eax
  408174:	fist   DWORD PTR [edx]
  408176:	mov    ch,0x23
  408178:	inc    esp
  408179:	push   ecx
  40817a:	pop    ebp
  40817b:	mov    ch,0x5c
  40817d:	cld    
  40817e:	dec    edx
  40817f:	mov    ebp,ebx
  408181:	pop    ds
  408182:	inc    esp
  408183:	add    eax,0xde606e8e
  408188:	inc    ebp
  408189:	dec    edi
  40818a:	in     al,dx
  40818b:	lea    edx,[esi+0x28]
  40818e:	fnstcw WORD PTR [esp+eax*4]
  408191:	test   eax,0xffc1e69a
  408196:	lods   al,BYTE PTR ds:[esi]
  408197:	outs   dx,BYTE PTR ds:[esi]
  408198:	and    al,0xda
  40819a:	leave  
  40819b:	lock call 0xd411:0x863848ee
  4081a3:	push   0x67
  4081a5:	pop    ebx
  4081a6:	fisubr WORD PTR [edi]
  4081a8:	jae    0x4081c7
  4081aa:	mov    WORD PTR cs:[ecx-0x302a8d9d],es
  4081b1:	fidiv  WORD PTR [ecx+ebx*8-0x53]
  4081b5:	push   0x39012116
  4081ba:	test   BYTE PTR [ebx+0x2a33940a],ah
  4081c0:	pop    ds
  4081c1:	out    0x6,al
  4081c3:	xlat   BYTE PTR ds:[ebx]
  4081c4:	add    BYTE PTR [eax+0x59],bl
  4081c7:	xor    DWORD PTR [ebx],eax
  4081c9:	(bad)  
  4081ca:	or     al,0x75
  4081cc:	or     al,0xc9
  4081ce:	call   DWORD PTR [ebp+0x1f18e492]
  4081d4:	out    dx,al
  4081d5:	mov    ebx,0x69263b6
  4081da:	and    cl,BYTE PTR [eax+ebp*2+0x528563c]
  4081e1:	out    dx,eax
  4081e2:	xor    DWORD PTR [edi-0x2c],0xe722aa08
  4081e9:	fiadd  DWORD PTR [esi]
  4081eb:	fidivr DWORD PTR [ecx-0x35]
  4081ee:	jbe    0x40826f
  4081f0:	jno    0x4081ce
  4081f2:	mov    al,ds:0xf9d79920
  4081f7:	adc    bh,bh
  4081f9:	popa   
  4081fa:	daa    
  4081fb:	out    0xf2,al
  4081fd:	pop    esi
  4081fe:	data16 adc dl,ch
  408201:	shr    edi,cl
  408203:	pop    edx
  408204:	push   edi
  408205:	jmp    0xeb5f53a1
  40820a:	test   DWORD PTR [edx+eiz*1+0x5],0xce38e7ed
  408212:	fnstsw WORD PTR [ecx-0x669b8302]
  408218:	lods   eax,DWORD PTR ds:[esi]
  408219:	test   al,0xab
  40821b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40821c:	xchg   ebp,eax
  40821d:	cmc    
  40821e:	dec    eax
  40821f:	ficomp DWORD PTR [edx]
  408221:	mov    BYTE PTR [edx+0x6c],bh
  408224:	adc    DWORD PTR ds:0xe88e53d4,0x5e
  40822b:	into   
  40822c:	pushf  
  40822d:	xor    ch,BYTE PTR [eax-0x72662874]
  408233:	(bad)  
  408234:	sahf   
  408235:	lock shl DWORD PTR [edi+ecx*2],cl
  408239:	repz rcl BYTE PTR ds:0x9ed8eece,0x72
  408241:	add    al,0x84
  408243:	ins    WORD PTR es:[edi],dx
  408245:	push   esp
  408246:	dec    edi
  408247:	mov    dh,0x98
  408249:	loop   0x40823c
  40824b:	mov    ebp,0xa587fd15
  408250:	xor    al,0x47
  408253:	dec    ebx
  408254:	pop    edi
  408255:	pop    ds
  408256:	cmp    cl,ch
  408258:	push   edx
  408259:	cmp    BYTE PTR cs:[ecx-0x64ce3a83],dh
  408260:	dec    ecx
  408261:	mov    cl,0xbe
  408263:	imul   ebx,ecx,0x49d20c4f
  408269:	ins    BYTE PTR es:[edi],dx
  40826a:	sub    ah,ch
  40826c:	loope  0x408274
  40826e:	inc    ecx
  40826f:	mov    bh,0xfe
  408271:	enter  0x867f,0x8c
  408275:	lea    eax,[ebx+0x7f]
  408278:	mov    esi,0xa61bccab
  40827d:	mov    cl,0x32
  40827f:	outs   dx,BYTE PTR ds:[esi]
  408280:	and    edx,eax
  408282:	and    ebx,ebx
  408284:	std    
  408285:	inc    eax
  408286:	leave  
  408287:	lahf   
  408288:	jno    0x40820f
  40828a:	out    dx,eax
  40828b:	into   
  40828c:	mov    al,0x81
  40828e:	add    cl,al
  408290:	add    eax,0x9fad9682
  408295:	rcl    bh,1
  408297:	data16 jnp 0x4082ec
  40829a:	add    esi,DWORD PTR [esi+esi*8+0x2e5705c9]
  4082a1:	mov    ebx,0x69a23a78
  4082a6:	cmc    
  4082a7:	or     edx,DWORD PTR [ebp+ecx*8+0x152a4d7]
  4082ae:	pop    eax
  4082af:	fsubr  QWORD PTR [eax+0x48592d56]
  4082b5:	imul   ebx,DWORD PTR [edx],0x49a99732
  4082bb:	mov    BYTE PTR [esi],ah
  4082bd:	xchg   ebp,eax
  4082be:	jae    0x4082d9
  4082c0:	jmp    0xdf2d:0x3aef42bc
  4082c7:	xor    BYTE PTR [edx],bl
  4082c9:	jnp    0x517b752e
  4082cf:	cmp    ch,BYTE PTR [edx+esi*2-0x3cac4d19]
  4082d6:	add    ebx,DWORD PTR [esi+ebx*1-0x6041c10]
  4082dd:	xchg   ebp,eax
  4082de:	stos   DWORD PTR es:[edi],eax
  4082df:	std    
  4082e0:	jae    0x4082c0
  4082e2:	xchg   esi,eax
  4082e3:	mov    esi,0x5c065b9
  4082e8:	mov    ebx,0x9af8574b
  4082ed:	mov    bl,BYTE PTR [ebx-0x7e76fe7]
  4082f3:	ret    
  4082f4:	in     eax,dx
  4082f5:	mov    bh,0x5b
  4082f7:	xor    ch,BYTE PTR ds:0xb0f76c2c
  4082fd:	or     eax,0x31949e70
  408302:	mov    ch,BYTE PTR ds:0x5232a61e
  408308:	xor    BYTE PTR [edx+0x7d],0x63
  40830c:	add    al,0xfe
  40830e:	mov    al,ds:0xe17e2bb4
  408313:	cdq    
  408314:	sub    al,0x84
  408316:	test   eax,esp
  408318:	popa   
  408319:	fistp  WORD PTR [eax]
  40831b:	jnp    0x408323
  40831d:	sbb    BYTE PTR [esp+esi*1-0x1a],ah
  408321:	(bad)  
  408323:	test   al,0xaa
  408325:	push   esi
  408326:	pop    esp
  408327:	sbb    eax,0x5601c130
  40832c:	inc    edi
  40832d:	(bad)  
  40832e:	test   DWORD PTR [ebp+0x428d938c],0xbee14d5b
  408338:	pop    DWORD PTR [edi-0x52]
  40833b:	shr    DWORD PTR [ecx+0x1b],0xe8
  40833f:	sbb    edx,ebx
  408341:	dec    ebx
  408342:	retf   0x48b1
  408345:	mov    edi,0x50bd7890
  40834a:	jno    0x408356
  40834c:	inc    esi
  40834d:	rol    DWORD PTR [edi],0x4b
  408350:	fist   DWORD PTR [ecx+0x5c]
  408353:	mov    ebx,0x5684a597
  408358:	fldcw  WORD PTR [edx]
  40835a:	outs   dx,BYTE PTR ds:[esi]
  40835b:	out    dx,eax
  40835c:	(bad)  
  40835d:	pop    ss
  40835e:	mov    dl,BYTE PTR ds:0x2b2b1e49
  408364:	xchg   ecx,eax
  408365:	loop   0x4083e6
  408367:	mov    edi,eax
  408369:	inc    ebp
  40836a:	mov    al,ds:0xaeccd0a5
  40836f:	ins    BYTE PTR es:[edi],dx
  408370:	xor    DWORD PTR [ecx+0x16],ebp
  408373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408374:	out    0x9f,al
  408376:	daa    
  408377:	call   0x42f6dae8
  40837c:	or     al,BYTE PTR [ebx+0x2c]
  40837f:	xor    dl,BYTE PTR [ecx]
  408381:	xor    BYTE PTR [esi+esi*8],0x13
  408385:	xchg   DWORD PTR [edx+0x44],ebx
  408388:	loope  0x4083d7
  40838a:	mov    edi,0xe508107f
  40838f:	fucomi st,st(5)
  408391:	xor    ah,BYTE PTR [esi-0x3bcf083b]
  408397:	xchg   ch,ch
  408399:	cld    
  40839a:	jecxz  0x40840e
  40839c:	fdivr  st(2),st
  40839e:	dec    edi
  40839f:	das    
  4083a0:	cli    
  4083a1:	mul    BYTE PTR [edx+ecx*2-0x5f]
  4083a5:	push   cs
  4083a6:	pusha  
  4083a7:	call   0x4fbb2084
  4083ac:	not    DWORD PTR [ebp+0x11]
  4083af:	(bad)  
  4083b0:	shr    BYTE PTR [ebx-0x6fb2b69b],cl
  4083b6:	test   DWORD PTR [esi+ecx*8-0x2b7f9e4],0x54eb6ca7
  4083c1:	sub    BYTE PTR [edi],cl
  4083c3:	shr    ebx,1
  4083c5:	pop    ebp
  4083c6:	xchg   esp,eax
  4083c7:	fld    TBYTE PTR [esi-0x34ca3226]
  4083cd:	add    ebp,DWORD PTR [ecx-0x1b]
  4083d0:	jbe    0x408440
  4083d2:	shr    DWORD PTR [ebp+0x6d616ba2],0x56
  4083d9:	cld    
  4083da:	inc    ebx
  4083db:	es xor eax,0x91819fa4
  4083e1:	pop    ds
  4083e2:	aas    
  4083e3:	xor    esp,esi
  4083e5:	clc    
  4083e6:	stos   DWORD PTR es:[edi],eax
  4083e7:	les    ebp,FWORD PTR [esi-0x583df277]
  4083ed:	dec    edx
  4083ee:	push   0x3b5e6293
  4083f3:	ja     0x408385
  4083f5:	cmp    eax,0xc0eebcf2
  4083fa:	push   ebx
  4083fb:	sub    eax,0x3dc04e8
  408400:	pop    eax
  408401:	loop   0x4083e1
  408403:	pop    ebp
  408404:	add    dl,BYTE PTR [ecx+0x1dd0ec5f]
  40840a:	mov    ebx,DWORD PTR [edi-0x7d37433f]
  408410:	rcl    BYTE PTR [eax-0x3552ba0f],1
  408416:	in     al,dx
  408417:	xor    edi,DWORD PTR [edx+0x9]
  40841a:	pop    ecx
  40841c:	or     ah,BYTE PTR [edi]
  40841e:	(bad)  
  40841f:	fstp   st(0)
  408421:	mov    ebx,0x3e2c0342
  408426:	outs   dx,BYTE PTR ds:[esi]
  408427:	mov    eax,0xbacaab81
  40842c:	repnz mov eax,ds:0xa3462699
  408432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408433:	or     al,0x45
  408435:	pop    esi
  408436:	mov    eax,0xe0a3b282
  40843b:	xlat   BYTE PTR ds:[ebx]
  40843c:	jns    0x40846e
  40843e:	push   eax
  40843f:	out    dx,eax
  408440:	mov    esp,0x8051aca2
  408445:	sbb    eax,0xe0265b61
  40844a:	xor    al,0x96
  40844c:	sub    eax,0x5289e1a
  408451:	cmc    
  408452:	lahf   
  408453:	jno    0x4084c8
  408455:	inc    ecx
  408456:	sub    ch,BYTE PTR [edi+0x41]
  408459:	xchg   edi,eax
  40845a:	xchg   ebx,eax
  40845b:	cmp    al,0xb3
  40845d:	cmp    ch,BYTE PTR gs:[edx-0x87bb975]
  408464:	pop    esp
  408465:	cmp    cl,bl
  408467:	sub    al,0x24
  408469:	pop    esi
  40846a:	jg     0x4084a3
  40846c:	dec    esp
  40846d:	jle    0x408479
  40846f:	or     BYTE PTR [edx],bh
  408471:	push   ebx
  408472:	shl    BYTE PTR [esi+0x731914b6],0xc1
  408479:	out    0x42,eax
  40847b:	add    esi,esp
  40847d:	fstp   QWORD PTR [bp+di+0x4b]
  408481:	add    eax,0x8a6b9f3e
  408486:	dec    DWORD PTR [ebx]
  408488:	sub    BYTE PTR [bx+di],dh
  40848b:	push   es
  40848c:	or     dl,bh
  40848e:	hlt    
  40848f:	out    0xdf,al
  408491:	int3   
  408492:	pop    esi
  408493:	push   es
  408494:	pop    esp
  408495:	jnp    0x4084f1
  408497:	push   esi
  408498:	(bad)  
  408499:	xchg   BYTE PTR [eax],cl
  40849b:	arpl   cx,di
  40849d:	pop    ebp
  40849e:	jno    0x408462
  4084a0:	test   eax,0xbda62537
  4084a5:	add    esi,edi
  4084a7:	shr    DWORD PTR [edi+0x6],0x82
  4084ab:	test   al,0xbd
  4084ad:	inc    edi
  4084ae:	test   eax,0x8b2bed95
  4084b3:	adc    BYTE PTR [eax-0x27700122],ah
  4084b9:	int    0x47
  4084bb:	sbb    esi,DWORD PTR [esp+edi*4]
  4084be:	imul   edi,DWORD PTR [esi+0x3f491652],0x26d73cd9
  4084c8:	mov    ebp,0x8395ebe4
  4084cd:	or     ch,BYTE PTR [edx]
  4084cf:	enter  0x9203,0xaf
  4084d3:	clc    
  4084d4:	fstp   QWORD PTR [edi]
  4084d6:	shl    ecx,cl
  4084d8:	test   DWORD PTR [edi+eax*1+0x50e83015],0x8d228208
  4084e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084e4:	push   es
  4084e5:	test   DWORD PTR [ebx],eax
  4084e7:	push   ss
  4084e8:	push   0x36
  4084ea:	add    eax,0x18be83a5
  4084ef:	outs   dx,DWORD PTR ds:[esi]
  4084f0:	jae    0x4084e2
  4084f2:	xchg   DWORD PTR [esp+ebx*4-0x68],edx
  4084f6:	mov    edi,0x4ca27020
  4084fb:	pop    eax
  4084fc:	push   edi
  4084fd:	cs aaa 
  4084ff:	shl    DWORD PTR [ebx+0x30039e24],cl
  408505:	xchg   edi,eax
  408506:	inc    esi
  408507:	and    ah,BYTE PTR [eax-0x39]
  40850a:	addr16 out dx,eax
  40850c:	sbb    esi,ecx
  40850e:	push   es
  40850f:	sti    
  408510:	inc    ebp
  408511:	cwde   
  408512:	jge    0x408523
  408514:	mov    eax,edi
  408516:	push   ebp
  408517:	and    DWORD PTR [edi],eax
  408519:	mov    esi,DWORD PTR [ebx]
  40851b:	jo     0x4084bd
  40851d:	fild   QWORD PTR [edx-0x56]
  408520:	stos   BYTE PTR es:[edi],al
  408521:	xor    DWORD PTR [esp+edx*2-0x557c0cb2],esi
  408528:	imul   edi,DWORD PTR [edi-0x76],0x76db2353
  40852f:	es (bad) 
  408531:	xchg   ebx,eax
  408532:	and    DWORD PTR [ebx-0x66],esi
  408535:	ficomp WORD PTR [ebx]
  408537:	std    
  408538:	aas    
  408539:	mov    ebp,edi
  40853b:	pop    edi
  40853c:	cmp    eax,0xa3900939
  408541:	mov    ecx,0xad041322
  408546:	and    esi,esp
  408548:	add    DWORD PTR ds:0xbd64caf6,ebp
  40854e:	test   al,0xc8
  408550:	jo     0x40851e
  408552:	xchg   edi,eax
  408553:	sahf   
  408554:	std    
  408555:	inc    ebx
  408556:	pop    ecx
  408557:	hlt    
  408558:	cs cmp edi,edx
  40855b:	daa    
  40855c:	int3   
  40855d:	add    al,0x9e
  40855f:	fidiv  DWORD PTR [edx-0x1f]
  408562:	pop    ebx
  408563:	adc    DWORD PTR [edx+0x19],0x48
  408567:	mov    al,ds:0xc0b9807c
  40856c:	jns    0x40854b
  40856e:	jle    0x4085e5
  408570:	mov    ch,0x49
  408572:	mov    ah,0xad
  408574:	cld    
  408575:	test   al,0xb3
  408577:	(bad)  
  40857a:	pop    ebp
  40857b:	pop    eax
  40857c:	pop    ecx
  40857d:	mov    ebp,0xfa144a
  408582:	inc    edi
  408583:	add    al,0xeb
  408585:	lds    edi,FWORD PTR [edi-0x375c3a17]
  40858b:	mov    ds:0x70b72ff5,eax
  408590:	aad    0x6c
  408592:	in     al,0x1b
  408594:	push   0x1b4dd0a3
  408599:	sbb    eax,0x4d3a20d1
  40859e:	ds jg  0x40853a
  4085a1:	pop    ds
  4085a2:	xchg   esi,eax
  4085a3:	mov    ebp,eax
  4085a5:	faddp  st(6),st
  4085a7:	push   esi
  4085a8:	(bad)
  4085ab:	mov    cl,0x94
  4085ad:	lds    edx,FWORD PTR [ebx-0x7078ba10]
  4085b3:	fdiv   QWORD PTR [edi-0x46a3014b]
  4085b9:	in     eax,dx
  4085ba:	jecxz  0x40854d
  4085bc:	das    
  4085bd:	push   edi
  4085be:	push   ds
  4085bf:	and    al,0x20
  4085c1:	xchg   DWORD PTR [esi-0x51b891f5],esp
  4085c7:	dec    edx
  4085c8:	dec    ebx
  4085c9:	mov    dl,0x5
  4085cb:	das    
  4085cc:	jl     0x40861a
  4085ce:	push   0xb0c67bac
  4085d3:	xor    esi,DWORD PTR [ecx-0x77]
  4085d6:	icebp  
  4085d7:	dec    edx
  4085d8:	dec    eax
  4085d9:	mov    ecx,0xf32233c3
  4085de:	add    bl,BYTE PTR [ebx+0x1e]
  4085e1:	cld    
  4085e2:	es jmp 0x4085c9
  4085e5:	sbb    ebp,esi
  4085e7:	js     0x40859a
  4085e9:	pop    ebx
  4085ea:	and    ecx,DWORD PTR [edx+esi*4-0x74]
  4085ee:	(bad)  
  4085ef:	std    
  4085f0:	shl    BYTE PTR [ecx-0x32],1
  4085f3:	ja     0x408657
  4085f5:	mov    al,0xe5
  4085f7:	xlat   BYTE PTR ds:[ebx]
  4085f8:	xchg   esp,eax
  4085f9:	mov    cl,0x23
  4085fb:	loop   0x408668
  4085fd:	or     DWORD PTR [esi-0x5a],ebp
  408600:	jg     0x4085ff
  408602:	mov    BYTE PTR [edx-0x6a03500f],cl
  408608:	xchg   ecx,eax
  408609:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40860b:	cmp    cl,BYTE PTR [eax+edi*2+0x7a67086f]
  408612:	push   cs
  408613:	cmp    eax,0xe0b11cc3
  408618:	mov    ds:0xe88092d7,eax
  40861d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40861e:	frstor cs:[edi]
  408621:	fist   DWORD PTR [eax-0x2cc2b89d]
  408627:	mov    ebp,0x91c5b6e4
  40862c:	jbe    0x4085bd
  40862e:	sar    BYTE PTR [ecx+edi*1],0x68
  408632:	cmp    cl,BYTE PTR [ebp-0x11c41cf5]
  408638:	jns    0x408612
  40863a:	retf   0x32e2
  40863d:	shl    BYTE PTR [eax],cl
  40863f:	sti    
  408640:	xor    ah,BYTE PTR [edi-0x72]
  408643:	outs   dx,DWORD PTR ds:[esi]
  408644:	xchg   DWORD PTR [ebx],eax
  408646:	sahf   
  408647:	mov    BYTE PTR [ebx+0x2e],bl
  40864a:	cli    
  40864b:	nop
  40864c:	or     esi,edx
  40864e:	jecxz  0x408613
  408650:	aaa    
  408651:	ret    
  408652:	pop    ds
  408653:	bound  eax,QWORD PTR [ecx+0x4487dd23]
  408659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40865a:	dec    ebx
  40865b:	shr    BYTE PTR [esi-0x3ff434cf],0xf3
  408662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408663:	mov    edi,0xf588944e
  408668:	int    0xd8
  40866a:	jg     0x408697
  40866c:	repz hlt 
  40866e:	mov    ebx,0xdfdf0393
  408673:	and    ecx,ebp
  408675:	repnz in eax,0x7
  408678:	bound  edx,QWORD PTR [ebp+0x4]
  40867b:	bound  edx,QWORD PTR [edx+eiz*8-0x36277a36]
  408682:	daa    
  408683:	and    eax,0xd55b10f0
  408688:	inc    esi
  408689:	xchg   ebx,eax
  40868a:	pop    ebp
  40868b:	jmp    0x592e:0x19aed05d
  408692:	call   0xb30b:0xaaf87b8d
  408699:	ret    0xe2b4
  40869c:	push   eax
  40869d:	repz sub eax,0xfcbf3e09
  4086a3:	sub    eax,0x61519df9
  4086a8:	repnz test al,0xee
  4086ab:	ja     0x40866f
  4086ad:	sbb    ebx,edx
  4086af:	mov    gs,WORD PTR [esi]
  4086b1:	xchg   edi,eax
  4086b2:	jne    0x408660
  4086b4:	pop    eax
  4086b5:	add    al,0x47
  4086b7:	int3   
  4086b8:	loopne 0x40869e
  4086ba:	iret   
  4086bb:	push   0x78
  4086bd:	loope  0x408674
  4086bf:	pop    ds
  4086c0:	rcr    DWORD PTR [ecx-0x37744249],1
  4086c6:	call   0xe8c4b1c7
  4086cb:	pop    edx
  4086cc:	or     eax,0xeb59bb0b
  4086d1:	das    
  4086d2:	out    dx,al
  4086d3:	cmp    al,0xba
  4086d5:	jp     0x408677
  4086d7:	inc    BYTE PTR [ecx]
  4086d9:	add    BYTE PTR [eax+edx*1],dl
  4086dc:	push   DWORD PTR [edx]
  4086de:	sbb    DWORD PTR fs:[esi-0x2d],0x91118c5f
  4086e6:	outs   dx,BYTE PTR ds:[esi]
  4086e7:	sti    
  4086e8:	cmp    eax,0x1f3a7d60
  4086ed:	fwait
  4086ee:	js     0x408686
  4086f0:	adc    eax,0x83c04ba0
  4086f5:	lods   eax,DWORD PTR ds:[esi]
  4086f6:	int    0xa0
  4086f8:	sbb    DWORD PTR [ebp-0x16ee8f6],eax
  4086fe:	lahf   
  4086ff:	and    bl,BYTE PTR [edx+0xbf4412f]
  408705:	stos   DWORD PTR es:[edi],eax
  408706:	cli    
  408707:	hlt    
  408708:	or     eax,0x64331b34
  40870d:	dec    eax
  40870e:	ds test eax,0xec3cda30
  408714:	data16 ins BYTE PTR es:[edi],dx
  408716:	mov    edx,0xb6809073
  40871b:	add    al,0x70
  40871d:	mov    cl,0x2b
  40871f:	addr16 std 
  408721:	mov    WORD PTR [ecx],fs
  408723:	imul   esi,DWORD PTR [ebx],0x8564d398
  408729:	in     al,0x62
  40872b:	scas   al,BYTE PTR es:[edi]
  40872c:	stos   BYTE PTR es:[edi],al
  40872d:	imul   edx
  40872f:	jg     0x408771
  408731:	pop    esp
  408732:	sti    
  408733:	fbstp  TBYTE PTR [edx+0x6e46bd8f]
  408739:	xchg   BYTE PTR [edx],ah
  40873b:	leave  
  40873c:	call   0xd96416cd
  408741:	pop    ebx
  408742:	cli    
  408743:	rcr    ah,cl
  408745:	xor    DWORD PTR [edx+0x3665868f],esi
  40874b:	int    0x36
  40874d:	mov    esi,0x4da6f636
  408752:	xor    eax,0x7c98fa9f
  408757:	jne    0x408730
  408759:	jne    0x408726
  40875b:	sbb    al,0xaa
  40875d:	add    esi,edi
  40875f:	and    DWORD PTR [edx-0x2f6c8441],ebx
  408765:	ss or  edi,ebx
  408768:	(bad)  
  408769:	jnp    0x4087bd
  40876b:	inc    esp
  40876c:	cmc    
  40876d:	daa    
  40876e:	push   ebx
  40876f:	xchg   ecx,eax
  408770:	fnstcw WORD PTR [eax-0x47987802]
  408776:	mul    DWORD PTR [ecx-0x7671c56d]
  40877c:	hlt    
  40877d:	lods   eax,DWORD PTR ds:[esi]
  40877e:	retf   
  40877f:	pop    esp
  408780:	dec    edi
  408781:	mov    dh,BYTE PTR [ebp-0x574929b4]
  408787:	push   ebp
  408788:	push   esi
  408789:	and    BYTE PTR [edi],bl
  40878b:	mov    ebp,0xae9be4db
  408790:	sub    DWORD PTR [ecx-0x55a515c7],edi
  408796:	lods   al,BYTE PTR ds:[esi]
  408797:	or     DWORD PTR [edx+0x1d],0xf5308109
  40879e:	adc    esi,ebp
  4087a0:	or     al,0x0
  4087a2:	es scas al,BYTE PTR es:[edi]
  4087a4:	cld    
  4087a5:	jo     0x4087a7
  4087a7:	jns    0x408733
  4087a9:	pop    es
  4087aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087ab:	dec    eax
  4087ac:	mov    dh,0x68
  4087ae:	cli    
  4087af:	mov    WORD PTR [eax-0x593dbeb1],?
  4087b5:	ret    0x9fa8
  4087b8:	push   ds
  4087b9:	dec    esi
  4087ba:	ss test eax,0xc383461b
  4087c0:	xchg   ecx,eax
  4087c1:	nop
  4087c2:	xor    eax,0xcbf06868
  4087c7:	adc    bh,BYTE PTR [edi]
  4087c9:	aad    0x42
  4087cb:	mov    edi,0x2c42fc66
  4087d0:	call   0x961:0x52fc5ce3
  4087d7:	pop    ss
  4087d8:	mov    ecx,0xa5a23238
  4087dd:	pop    ebx
  4087de:	xor    al,0xfd
  4087e0:	cmp    al,0xbc
  4087e2:	push   ecx
  4087e3:	push   edx
  4087e4:	xor    esp,DWORD PTR [esi]
  4087e6:	jp     0x408813
  4087e8:	imul   esi,DWORD PTR [eax-0x592d86f5],0x68
  4087ef:	pop    edx
  4087f0:	outs   dx,BYTE PTR ds:[esi]
  4087f1:	inc    ecx
  4087f2:	push   cs
  4087f3:	jmp    0xd3d9c955
  4087f8:	jne    0x40886b
  4087fa:	ret    
  4087fb:	das    
  4087fc:	push   esp
  4087fd:	dec    esi
  4087fe:	stos   DWORD PTR es:[edi],eax
  4087ff:	mov    WORD PTR [ecx+esi*4+0x1f],gs
  408803:	sbb    BYTE PTR [ecx+0x7ea48eef],bl
  408809:	xor    dl,al
  40880b:	fdivp  st(2),st
  40880d:	scas   al,BYTE PTR es:[edi]
  40880e:	cmp    edx,ebp
  408810:	adc    al,0xe7
  408812:	cmp    BYTE PTR [ecx-0x419a5e3f],bl
  408818:	ja     0x408854
  40881a:	enter  0xa18d,0x5c
  40881e:	inc    ebx
  40881f:	inc    esp
  408820:	nop
  408821:	repz jp 0x4087b1
  408824:	dec    edx
  408825:	ror    DWORD PTR [ebx+0x9],cl
  408828:	aam    0x48
  40882a:	sub    edi,DWORD PTR [esi]
  40882c:	neg    BYTE PTR [ecx+eiz*4]
  40882f:	rcl    DWORD PTR [esi+0x1a7bb838],cl
  408835:	dec    eax
  408836:	xchg   ebx,eax
  408837:	inc    esi
  408838:	stc    
  408839:	and    ebp,DWORD PTR [ecx]
  40883b:	xor    cl,0x8d
  40883e:	in     al,0xc7
  408840:	mov    esi,0x5eb54105
  408845:	dec    DWORD PTR [ebx+0x3b]
  408848:	pop    edi
  408849:	sahf   
  40884a:	pop    es
  40884b:	jmp    0x8fdc:0x91227f3e
  408852:	cmc    
  408853:	inc    edi
  408854:	cwde   
  408855:	xor    ch,BYTE PTR [eax+0x47]
  408858:	push   ss
  408859:	inc    eax
  40885a:	cli    
  40885b:	xor    ebp,DWORD PTR [ebx-0x71463097]
  408861:	add    eax,0x326ccdc2
  408866:	sub    esi,ecx
  408868:	aaa    
  408869:	pop    esi
  40886a:	push   esp
  40886b:	mov    ds,WORD PTR [ebp-0x60]
  40886e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40886f:	xchg   ebx,eax
  408870:	sbb    DWORD PTR [ecx*4-0x68f55d2d],esp
  408877:	add    dh,bh
  408879:	xchg   esp,eax
  40887a:	aad    0x87
  40887c:	das    
  40887d:	mov    esp,DWORD PTR [edi+eiz*4+0x2e0de907]
  408884:	xor    ch,0x3f
  408887:	pushf  
  408888:	outs   dx,BYTE PTR ds:[esi]
  408889:	clc    
  40888a:	sbb    dl,ah
  40888c:	stos   DWORD PTR es:[edi],eax
  40888d:	push   es
  40888e:	dec    esi
  40888f:	cmp    eax,DWORD PTR [ecx]
  408891:	std    
  408892:	xor    DWORD PTR [esi-0x3b],edi
  408895:	outs   dx,BYTE PTR ss:[esi]
  408897:	popf   
  408898:	push   esi
  408899:	and    DWORD PTR [ebx-0x1ca854a4],eax
  40889f:	push   esp
  4088a0:	mov    ecx,0xf1ee7f7
  4088a5:	in     eax,0x81
  4088a7:	arpl   WORD PTR [eax],si
  4088a9:	add    ebx,DWORD PTR [ecx*4-0x47355fcb]
  4088b0:	inc    ecx
  4088b1:	int    0x10
  4088b3:	mov    ah,0xe9
  4088b5:	fisubr WORD PTR [esi-0x5b]
  4088b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088b9:	ffreep st(5)
  4088bb:	sbb    ebx,DWORD PTR [eax]
  4088bd:	cmp    DWORD PTR [edi],esi
  4088bf:	sub    dl,BYTE PTR [ebp+0x14]
  4088c2:	inc    ebx
  4088c3:	call   0x17e475c0
  4088c8:	add    al,0x43
  4088ca:	loopne 0x4088e7
  4088cc:	fild   DWORD PTR [ebx+0x1e]
  4088cf:	jg     0x408876
  4088d1:	aam    0x6b
  4088d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088d4:	nop
  4088d5:	mov    WORD PTR [ecx-0x4f8df789],gs
  4088db:	xchg   esp,eax
  4088dc:	push   ebx
  4088dd:	push   0xffffffc0
  4088df:	sub    DWORD PTR ds:0x6b99bc12,ebp
  4088e5:	pop    edi
  4088e6:	les    edi,FWORD PTR [ebx+0x2b]
  4088e9:	outs   dx,BYTE PTR ds:[esi]
  4088ea:	jmp    0x923a4321
  4088ef:	dec    edx
  4088f0:	xchg   ecx,eax
  4088f1:	inc    ebp
  4088f2:	sbb    cl,BYTE PTR [edx+0x4a]
  4088f5:	aam    0xeb
  4088f7:	mov    al,0x47
  4088f9:	mov    al,ds:0xfa93843a
  4088fe:	es pop ds
  408900:	mov    ebp,0x322658b8
  408905:	push   ds
  408906:	push   eax
  408907:	lods   eax,DWORD PTR ds:[esi]
  408908:	jnp    0x408898
  40890a:	fld    DWORD PTR [edx+edi*1+0x36716593]
  408911:	in     al,0x92
  408913:	mov    bh,0x43
  408915:	push   ds
  408916:	and    al,0xe1
  408918:	shl    BYTE PTR [ebx+eax*2],1
  40891b:	out    0x14,eax
  40891d:	out    0x4b,al
  40891f:	xor    dl,BYTE PTR [ebp-0x3403bb30]
  408925:	xlat   BYTE PTR ds:[ebx]
  408926:	popa   
  408927:	clc    
  408928:	mov    bh,0x28
  40892a:	retf   
  40892b:	cmp    eax,0xe5cfee3f
  408930:	pop    es
  408931:	into   
  408932:	inc    esi
  408933:	mov    edi,0x6111574a
  408938:	mov    al,0xca
  40893a:	cmp    ch,BYTE PTR [ecx]
  40893c:	or     ah,BYTE PTR [ebp+0x6f]
  40893f:	push   esp
  408940:	cld    
  408941:	mov    bl,0x45
  408943:	sti    
  408944:	sti    
  408945:	sub    DWORD PTR [ebp-0x7f79d8d2],ebx
  40894b:	les    esp,FWORD PTR [edx+eax*4+0xf]
  40894f:	adc    ah,ah
  408951:	mov    al,0x4e
  408953:	mov    cl,0x8b
  408955:	loope  0x408946
  408957:	ret    0x3804
  40895a:	fistp  DWORD PTR [esi+0x591b23bd]
  408960:	add    al,0xb
  408962:	or     DWORD PTR [ebx+0x5b],esi
  408965:	mov    esi,0xf3066450
  40896a:	add    DWORD PTR [edx+0x9fdccab],edx
  408970:	jnp    0x408989
  408972:	lods   eax,DWORD PTR ds:[esi]
  408973:	clc    
  408974:	and    ecx,DWORD PTR [esi]
  408976:	adc    ah,BYTE PTR [eax-0x2a65df82]
  40897c:	pop    ebx
  40897d:	adc    al,0x85
  40897f:	jg     0x40896e
  408981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408982:	loope  0x4089c4
  408984:	xor    BYTE PTR [edx+edx*2-0x40bb8269],ch
  40898b:	test   BYTE PTR es:[ecx],dh
  40898e:	jg     0x4089ae
  408990:	add    ebx,DWORD PTR [ecx+0x1]
  408993:	pop    ss
  408994:	xor    edx,DWORD PTR [ebx-0x1c]
  408997:	adc    BYTE PTR [eax+ecx*4-0x13],0xe
  40899c:	pop    ds
  40899d:	aaa    
  40899e:	pusha  
  40899f:	cmp    esp,DWORD PTR [edi+0x2]
  4089a2:	imul   edi,DWORD PTR [ebp+0x529664e5],0xffffffe5
  4089a9:	adc    dh,BYTE PTR [edx-0x33925332]
  4089af:	and    edx,DWORD PTR [ebx-0x52]
  4089b2:	and    BYTE PTR [ebx+edi*8],bl
  4089b5:	sti    
  4089b6:	and    dl,BYTE PTR [edx-0x62]
  4089b9:	adc    ebp,DWORD PTR [ebx+0x3f5711e1]
  4089bf:	push   ebp
  4089c0:	fwait
  4089c1:	std    
  4089c2:	repnz inc eax
  4089c4:	jmp    0x4089a4
  4089c6:	call   0x9cf3397
  4089cb:	mov    al,0x23
  4089cd:	rol    DWORD PTR [edi+0x2d43f6ea],0x1a
  4089d4:	(bad)  
  4089d5:	xlat   BYTE PTR ds:[ebx]
  4089d6:	loope  0x40898e
  4089d8:	cmc    
  4089d9:	out    dx,al
  4089da:	cwde   
  4089db:	enter  0xfe4c,0xce
  4089df:	in     eax,dx
  4089e0:	sti    
  4089e1:	cwde   
  4089e2:	out    dx,eax
  4089e3:	add    esi,0xd3f87048
  4089e9:	cld    
  4089ea:	push   es
  4089eb:	and    eax,0xe5eaaa6f
  4089f0:	fimul  DWORD PTR [edi]
  4089f2:	add    DWORD PTR [ecx],ebp
  4089f4:	fidivr WORD PTR [ecx]
  4089f6:	or     eax,0xc550eb1a
  4089fb:	iret   
  4089fc:	ds js  0x4089b9
  4089ff:	push   edi
  408a00:	sub    al,0x99
  408a02:	mov    ebp,0x659d0425
  408a07:	push   es
  408a08:	fwait
  408a09:	jnp    0x4089d6
  408a0b:	sbb    ebx,ebx
  408a0d:	lock mov BYTE PTR ds:0x4e5e9b1e,bl
  408a14:	jmp    0x408a7c
  408a16:	mov    ebp,0xee5ea8d9
  408a1b:	pop    eax
  408a1c:	ror    DWORD PTR [esi],cl
  408a1e:	fild   QWORD PTR [edx-0x4c]
  408a21:	sbb    ebx,DWORD PTR [ecx+0x19]
  408a24:	pusha  
  408a25:	mov    esi,0x95a9fe1
  408a2a:	adc    eax,DWORD PTR [edi+0x44]
  408a2d:	mov    esi,0x48b12ddf
  408a32:	push   ds
  408a33:	jmp    0x153d:0xd93b5cd7
  408a3a:	bswap  ebx
  408a3c:	xor    ebp,edi
  408a3e:	ficomp DWORD PTR [ecx-0x72]
  408a41:	mov    WORD PTR [ebp+0x72],fs
  408a44:	sbb    DWORD PTR ss:[ebx+0x43],esi
  408a48:	cmp    eax,0x143c8b90
  408a4d:	sub    bh,BYTE PTR [eax]
  408a4f:	popf   
  408a50:	sti    
  408a51:	mov    edi,0x32f69b00
  408a56:	js     0x408a35
  408a58:	fs push ebp
  408a5a:	xor    DWORD PTR [edi-0x771ca3dc],0xfffffff6
  408a61:	push   ebx
  408a62:	xchg   edi,eax
  408a63:	ds (bad) 
  408a65:	sub    DWORD PTR [ecx],ebx
  408a67:	mov    ah,0xb4
  408a69:	lahf   
  408a6a:	call   0xdecdf744
  408a6f:	cmp    dl,BYTE PTR [ecx+0x7262a5dc]
  408a75:	les    edi,FWORD PTR [ecx]
  408a77:	fist   DWORD PTR [edx+ebx*8+0x26a14982]
  408a7e:	hlt    
  408a7f:	outs   dx,DWORD PTR ds:[esi]
  408a80:	push   esp
  408a81:	push   ecx
  408a82:	stos   BYTE PTR es:[edi],al
  408a83:	push   ecx
  408a84:	and    eax,0x6a0af34a
  408a89:	pop    esi
  408a8a:	imul   ebp,DWORD PTR [ebx],0x54
  408a8d:	into   
  408a8e:	hlt    
  408a8f:	xor    bh,BYTE PTR [esi+0x135dc78e]
  408a95:	mov    ecx,cr0
  408a98:	push   esp
  408a99:	sbb    BYTE PTR [edx],bh
  408a9b:	jne    0x408b1a
  408a9d:	retf   0x1a13
  408aa0:	jmp    0x408af2
  408aa2:	in     al,dx
  408aa3:	retf   0x2c8d
  408aa6:	add    al,0xfe
  408aa8:	xlat   BYTE PTR ds:[ebx]
  408aa9:	mov    ah,BYTE PTR [ecx+eiz*2-0x6f]
  408aad:	xor    al,0x5f
  408aaf:	loopne 0x408a39
  408ab1:	pop    edi
  408ab2:	mov    esp,0x835122db
  408ab7:	xor    BYTE PTR [ebx],al
  408ab9:	sub    al,0x47
  408abb:	sbb    ebx,eax
  408abd:	call   0xf70c:0xf2bab7ab
  408ac4:	dec    esp
  408ac5:	add    al,0x98
  408ac7:	xchg   ecx,eax
  408ac8:	or     DWORD PTR [ebx],edi
  408aca:	dec    edi
  408acb:	dec    esp
  408acc:	ins    DWORD PTR es:[edi],dx
  408acd:	mov    dh,0xb5
  408acf:	repnz or eax,0x945b1d6c
  408ad5:	arpl   WORD PTR [ecx],si
  408ad7:	lock std 
  408ad9:	mov    eax,0xa5bd7ee4
  408ade:	cdq    
  408adf:	scas   al,BYTE PTR es:[edi]
  408ae0:	mov    edi,0xa5ab0d25
  408ae5:	jl     0x408b22
  408ae7:	(bad)  
  408ae8:	jmp    0xef52:0x3f4655d4
  408aef:	imul   eax,edx,0x5b6365bb
  408af5:	lds    ebx,FWORD PTR [ebx+0x277f724a]
  408afb:	pop    ecx
  408afc:	fidivr DWORD PTR [eax]
  408afe:	retf   
  408aff:	push   ecx
  408b00:	stc    
  408b01:	les    ecx,FWORD PTR [eax+eiz*1-0x61]
  408b05:	icebp  
  408b06:	lock sbb eax,0x4868b36a
  408b0c:	push   ebp
  408b0d:	daa    
  408b0e:	mov    edx,0x8da8fed2
  408b13:	mov    esp,0x3afc175e
  408b18:	imul   ebx,DWORD PTR [ecx+ecx*1],0xe93d1364
  408b1f:	sbb    eax,0x9338263f
  408b24:	xor    BYTE PTR ds:0x46ef7239,ah
  408b2a:	iret   
  408b2b:	add    edi,ecx
  408b2d:	sbb    al,0xec
  408b2f:	cmp    eax,0x9f75bc76
  408b34:	shl    ecx,1
  408b36:	sub    al,0xbc
  408b38:	aas    
  408b39:	enter  0x7576,0x44
  408b3d:	inc    ebp
  408b3e:	lds    ebp,FWORD PTR [esi-0x47785103]
  408b44:	jecxz  0x408ba6
  408b46:	dec    ebp
  408b47:	jg     0x408b0e
  408b49:	push   0x4a8cba84
  408b4e:	aam    0x18
  408b50:	sbb    dl,BYTE PTR [edx+0x22fc7c78]
  408b56:	xchg   ebx,eax
  408b57:	adc    dl,BYTE PTR [ecx+0x4aa4e6ea]
  408b5d:	mov    ecx,0x9ed95892
  408b62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b63:	(bad)  
  408b64:	jno    0x408b89
  408b66:	and    bl,ah
  408b68:	mov    cl,0x82
  408b6a:	(bad)  
  408b6c:	push   ss
  408b6d:	test   al,0xba
  408b6f:	in     al,dx
  408b70:	stos   DWORD PTR es:[edi],eax
  408b71:	aas    
  408b72:	xor    ecx,DWORD PTR [ebx+0x58193106]
  408b78:	shl    ch,cl
  408b7a:	leave  
  408b7b:	(bad)  
  408b7c:	paddd  mm4,QWORD PTR [ebx-0x1b3432e1]
  408b83:	pop    esi
  408b84:	nop
  408b85:	repz out 0x10,al
  408b88:	or     BYTE PTR [esi+0x4f],bl
  408b8b:	push   edx
  408b8c:	xchg   edi,eax
  408b8d:	fcmovnbe st,st(6)
  408b8f:	scas   eax,DWORD PTR es:[edi]
  408b90:	les    ebx,FWORD PTR [ebx-0x1b]
  408b93:	cmc    
  408b94:	pop    ebp
  408b95:	test   BYTE PTR [edx-0x37],al
  408b98:	clc    
  408b99:	mov    ebp,0x9a38f67c
  408b9e:	mov    al,BYTE PTR [esi+0x9]
  408ba1:	adc    al,0x5e
  408ba3:	inc    ebx
  408ba4:	jo     0x408bb4
  408ba6:	loop   0x408b92
  408ba8:	mov    bl,0x1d
  408baa:	mov    ebp,0xac1fef81
  408baf:	in     eax,0x8d
  408bb1:	into   
  408bb2:	int3   
  408bb3:	xor    DWORD PTR [esp+eax*8],esi
  408bb6:	push   ss
  408bb7:	cmp    DWORD PTR [edx+0x496e7011],esp
  408bbd:	add    DWORD PTR [edi+0x7e],ecx
  408bc0:	sbb    al,BYTE PTR [eax-0x3f]
  408bc3:	test   al,0xf8
  408bc5:	and    DWORD PTR [eax+0x44],0xfafcf4e2
  408bcc:	mov    al,ds:0x1503d792
  408bd1:	shl    ch,cl
  408bd3:	lea    edi,[edi+0xd]
  408bd6:	in     al,dx
  408bd7:	frstor [ecx+0x169da847]
  408bdd:	add    al,0xdb
  408bdf:	sub    eax,0x182aabd7
  408be4:	mov    ds:0x1a5bd521,al
  408be9:	push   esp
  408bea:	pop    ss
  408beb:	pop    eax
  408bec:	jns    0x408c0a
  408bee:	stos   BYTE PTR es:[edi],al
  408bef:	and    BYTE PTR [eax],ch
  408bf1:	popa   
  408bf2:	jmp    0xfb4a:0x4b8c1d49
  408bf9:	xor    al,0x32
  408bfb:	dec    esp
  408bfc:	hlt    
  408bfd:	(bad)  
  408bfe:	jnp    0x408ba4
  408c00:	shl    BYTE PTR ds:0x8e2802df,0xca
  408c07:	or     DWORD PTR [eax],edx
  408c09:	jbe    0x408bc4
  408c0b:	lock scas eax,DWORD PTR es:[edi]
  408c0d:	push   ds
  408c0e:	in     eax,dx
  408c0f:	fisub  WORD PTR [esi-0x53f1a463]
  408c15:	retf   
  408c16:	inc    ebp
  408c17:	rol    BYTE PTR [edx-0x3d],1
  408c1a:	jge    0x408c5b
  408c1c:	xor    eax,0xcfc57461
  408c21:	test   cl,0x56
  408c24:	xlat   BYTE PTR ds:[ebx]
  408c25:	or     al,dh
  408c27:	mov    ebx,0xda492b
  408c2c:	sti    
  408c2d:	or     eax,0x6b47e394
  408c32:	dec    ebp
  408c33:	xor    ebp,DWORD PTR [ebp-0xa803886]
  408c39:	daa    
  408c3a:	sub    ebx,DWORD PTR [eax-0x7fde8c3b]
  408c40:	mov    cl,0x49
  408c42:	mov    eax,ds:0xaf9c1443
  408c47:	out    dx,eax
  408c48:	pusha  
  408c49:	jnp    0x408c41
  408c4b:	mov    dl,0xdd
  408c4d:	jns    0x408c17
  408c4f:	xchg   ecx,eax
  408c50:	sbb    al,0x84
  408c52:	sbb    al,0x63
  408c54:	push   esi
  408c55:	or     dl,BYTE PTR [ecx]
  408c57:	jae    0x408bf8
  408c59:	outs   dx,BYTE PTR ds:[esi]
  408c5b:	and    eax,0x2911c1fa
  408c60:	popf   
  408c61:	test   DWORD PTR [eax-0x1e],0x24694a30
  408c68:	mov    DWORD PTR [edx+esi*8],esi
  408c6b:	push   0x4b
  408c6d:	mov    bl,0x1a
  408c6f:	leave  
  408c70:	call   0x694ad5f1
  408c75:	repnz dec ebx
  408c77:	push   0xe0b0d7e9
  408c7c:	pop    eax
  408c7d:	cmp    DWORD PTR [edi-0x47],eax
  408c80:	xchg   ebp,eax
  408c81:	test   DWORD PTR [edx],0x60bdaca4
  408c87:	inc    eax
  408c88:	mov    ch,0x9d
  408c8a:	aam    0xaf
  408c8c:	mov    ecx,0x1479f040
  408c91:	ins    DWORD PTR es:[edi],dx
  408c92:	ror    BYTE PTR [esi-0x50],cl
  408c95:	xor    esp,DWORD PTR [ebx+0x702a379]
  408c9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c9c:	sub    ebp,ebp
  408c9e:	mov    edx,DWORD PTR [edx+0x6658d567]
  408ca4:	jg     0x408cdb
  408ca6:	and    BYTE PTR [esi-0x5b6244f5],bl
  408cac:	sbb    ebp,eax
  408cae:	(bad)  
  408caf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cb0:	dec    ebp
  408cb1:	leave  
  408cb2:	jae    0x408c5a
  408cb4:	and    eax,0x6729ea75
  408cb9:	inc    ebx
  408cba:	push   edx
  408cbb:	and    al,0x54
  408cbd:	lods   eax,DWORD PTR ds:[esi]
  408cbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cbf:	(bad)  
  408cc0:	pop    esi
  408cc1:	jae    0xfb5b561
  408cc7:	pop    ebp
  408cc8:	jmp    DWORD PTR fs:[bp-0x621]
  408cce:	fiadd  DWORD PTR [esi]
  408cd0:	neg    bh
  408cd2:	mov    ch,0x4d
  408cd4:	std    
  408cd5:	adc    esi,DWORD PTR ds:0x98202383
  408cdb:	fcmovbe st,st(2)
  408cdd:	test   BYTE PTR [edx-0x1d],ah
  408ce0:	cdq    
  408ce1:	repz mov bh,0x24
  408ce4:	scas   al,BYTE PTR es:[edi]
  408ce5:	mov    dh,0x35
  408ce7:	std    
  408ce8:	sbb    eax,0xc4ddad4b
  408ced:	out    dx,eax
  408cee:	inc    esp
  408cef:	add    eax,edx
  408cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cf2:	js     0x408d49
  408cf4:	cs inc ecx
  408cf6:	js     0x408d5a
  408cf8:	mov    al,ds:0xe90f0d6a
  408cfd:	mov    eax,0x8cf567e4
  408d02:	icebp  
  408d03:	aad    0x35
  408d05:	pop    DWORD PTR [ecx-0x21]
  408d08:	jbe    0x408cd7
  408d0a:	(bad)  
  408d0b:	cld    
  408d0c:	adc    bh,BYTE PTR [esi-0x6d]
  408d0f:	sub    eax,0x1959596b
  408d14:	cmc    
  408d15:	stos   BYTE PTR es:[edi],al
  408d16:	cdq    
  408d17:	and    DWORD PTR [eax+0x66],esp
  408d1a:	or     DWORD PTR [edx],ebp
  408d1c:	scas   al,BYTE PTR es:[edi]
  408d1d:	cmp    al,0x17
  408d1f:	jp     0x408d73
  408d21:	iret   
  408d22:	xchg   edi,eax
  408d23:	dec    ebp
  408d24:	cmp    bl,BYTE PTR [ecx+0x6f]
  408d27:	push   ebp
  408d28:	iret   
  408d29:	(bad)  
  408d2a:	pop    edi
  408d2b:	scas   eax,DWORD PTR es:[edi]
  408d2c:	hlt    
  408d2d:	pop    es
  408d2e:	pop    ebp
  408d2f:	stos   DWORD PTR es:[edi],eax
  408d30:	mov    BYTE PTR [ecx-0x1b],0x16
  408d34:	inc    ecx
  408d35:	clc    
  408d36:	xor    eax,DWORD PTR [esi]
  408d38:	(bad)  
  408d39:	fisttp QWORD PTR [ebx+0x2e]
  408d3c:	sbb    BYTE PTR [ebx],al
  408d3e:	mov    ebx,0x7ff2dc05
  408d43:	imul   ebx,DWORD PTR [eax-0x5b82b440],0x2265634e
  408d4d:	xor    DWORD PTR [eax+edx*2+0x753b8058],ebp
  408d54:	inc    ecx
  408d55:	arpl   WORD PTR [ebx-0x2a6ab75a],di
  408d5b:	in     al,0x89
  408d5d:	out    0x3b,eax
  408d5f:	adc    BYTE PTR ds:0xad4eb535,bl
  408d65:	and    DWORD PTR [ecx],0x5b
  408d68:	nop/reserved BYTE PTR [edx]
  408d6b:	cmp    DWORD PTR [ebx-0x16],edi
  408d6e:	push   0xffffffc3
  408d70:	lds    ebx,FWORD PTR [edi+0x19503014]
  408d76:	ret    
  408d77:	shr    BYTE PTR [esi-0x29],cl
  408d7a:	aam    0x3c
  408d7c:	les    edx,FWORD PTR [ecx+edx*1]
  408d7f:	cmp    DWORD PTR [edi-0x718afd0a],ecx
  408d85:	mov    ds:0xa5723d17,eax
  408d8a:	aas    
  408d8b:	pop    esi
  408d8c:	dec    ecx
  408d8d:	sub    ebp,0x5b03022c
  408d93:	out    dx,al
  408d94:	xor    ebp,DWORD PTR [edi+eiz*4-0x32]
  408d98:	mov    ecx,0xa2d4d993
  408d9d:	mov    al,0xc4
  408d9f:	cmc    
  408da0:	add    dh,BYTE PTR [eax+0x76317f41]
  408da6:	sbb    ebx,ebx
  408da8:	mov    esi,0x5360056d
  408dad:	adc    dl,BYTE PTR [ebp-0x76]
  408db0:	in     al,0x91
  408db2:	(bad)  
  408db3:	jmp    0xbdb5:0xf22e359e
  408dba:	repz ja 0x408ded
  408dbd:	inc    eax
  408dbe:	nop    DWORD PTR [ebp+edx*8+0x3394c71e]
  408dc6:	xchg   ebx,eax
  408dc7:	sbb    al,0x82
  408dc9:	sti    
  408dca:	stos   DWORD PTR es:[edi],eax
  408dcb:	sbb    eax,DWORD PTR [ecx-0x676e8866]
  408dd1:	push   ebp
  408dd2:	pop    esi
  408dd3:	not    BYTE PTR [edx+0x534e4c3a]
  408dd9:	out    dx,eax
  408dda:	and    bh,BYTE PTR [ebx-0x64]
  408ddd:	sti    
  408dde:	imul   esp,DWORD PTR [edx-0x5086983d],0x4e
  408de5:	jl     0x408d84
  408de7:	mov    al,ds:0xf3f1f645
  408dec:	popf   
  408ded:	in     eax,0x6b
  408def:	aad    0xc7
  408df1:	and    eax,0xac823ad4
  408df6:	mov    edx,DWORD PTR [ebx]
  408df8:	lock aaa 
  408dfa:	popf   
  408dfb:	fisub  WORD PTR [ecx+0x6f389892]
  408e01:	lahf   
  408e02:	test   ebp,0x7d0b249f
  408e08:	xchg   edi,eax
  408e0a:	popa   
  408e0b:	rol    BYTE PTR ds:0xdcb9767a,0x51
  408e12:	or     bl,bh
  408e14:	in     eax,0x62
  408e16:	jg     0x408dfd
  408e18:	arpl   WORD PTR [ecx],bx
  408e1a:	popa   
  408e1b:	test   eax,0x15071ffc
  408e20:	lahf   
  408e21:	mov    ebx,DWORD PTR [ecx-0xb005c22]
  408e27:	sahf   
  408e28:	cld    
  408e29:	nop
  408e2a:	int    0xa9
  408e2c:	loopne 0x408e06
  408e2e:	jbe    0x408dbf
  408e30:	mov    ecx,0x18f3d525
  408e35:	rcr    BYTE PTR [ebx-0x8],0xd4
  408e39:	test   ecx,ecx
  408e3b:	es retf 0xc98d
  408e3f:	pop    ecx
  408e40:	and    BYTE PTR [eax],bl
  408e42:	sbb    BYTE PTR [ebx-0x1c],dh
  408e45:	rcl    DWORD PTR [edi+0x21],1
  408e48:	dec    eax
  408e49:	adc    BYTE PTR [ecx-0x46],0x2f
  408e4d:	lds    eax,FWORD PTR [edi+eax*1+0x6]
  408e51:	fisttp QWORD PTR [edx]
  408e53:	pop    ds
  408e54:	adc    DWORD PTR [ebx],0xffffffd1
  408e57:	jp     0x408eab
  408e59:	(bad)  
  408e5a:	mov    edx,DWORD PTR [ebp-0x2e4adbf]
  408e60:	cdq    
  408e61:	rol    edi,1
  408e63:	jo     0x408edd
  408e65:	xor    ch,BYTE PTR [bx]
  408e68:	(bad)  
  408e69:	scas   eax,DWORD PTR es:[edi]
  408e6a:	not    edx
  408e6c:	cmp    cl,ah
  408e6e:	or     al,BYTE PTR [edi-0x2187f419]
  408e74:	sub    DWORD PTR [edi],ecx
  408e76:	jbe    0x408eac
  408e78:	xor    BYTE PTR [esp+esi*8-0x7d],ch
  408e7c:	cmp    DWORD PTR [ecx+eiz*1-0x70],0x33
  408e81:	neg    eax
  408e83:	imul   DWORD PTR [edi]
  408e85:	cmc    
  408e86:	jo     0x408e51
  408e88:	or     al,0xd8
  408e8a:	call   0x29cd:0xf39143f9
  408e91:	push   0x3
  408e93:	fcomp  DWORD PTR [eax]
  408e95:	mov    ds:0x26146b33,eax
  408e9a:	mov    eax,0x99cb3caa
  408e9f:	and    eax,0xf6c55c48
  408ea4:	cmp    al,0x4e
  408ea6:	and    DWORD PTR ds:0xa563ec21,0x7f2b5040
  408eb0:	and    DWORD PTR [edi],ecx
  408eb2:	sahf   
  408eb3:	scas   eax,DWORD PTR es:[edi]
  408eb4:	rcr    BYTE PTR gs:[bx-0xd],0xaf
  408eba:	dec    esi
  408ebb:	je     0x408e99
  408ebd:	pop    es
  408ebe:	add    ecx,DWORD PTR [edx]
  408ec0:	or     eax,DWORD PTR [ecx+0x4]
  408ec3:	cmovl  edx,eax
  408ec6:	(bad)  
  408ec7:	jle    0x408ec6
  408ec9:	mov    edi,0x32747962
  408ece:	mov    BYTE PTR [ebp-0x3ca4ee20],bl
  408ed4:	inc    ecx
  408ed5:	jae    0x408f4c
  408ed7:	or     eax,0xb5d332e
  408edc:	or     dl,bl
  408ede:	cmp    ecx,DWORD PTR [ebx+0x4124c176]
  408ee4:	adc    eax,edx
  408ee6:	data16 and al,0x85
  408ee9:	loope  0x408e94
  408eeb:	out    dx,al
  408eec:	add    al,BYTE PTR [ecx]
  408eee:	jnp    0x408ee0
  408ef0:	inc    esp
  408ef1:	retfw  
  408ef3:	in     eax,0x4d
  408ef5:	daa    
  408ef6:	fisub  WORD PTR [ecx+0xa]
  408ef9:	push   edx
  408efa:	or     ebp,DWORD PTR [ecx+0x33b4ee26]
  408f00:	push   ecx
  408f01:	inc    ebp
  408f02:	retf   
  408f03:	mov    dh,0x7d
  408f05:	inc    ecx
  408f06:	pop    esi
  408f07:	gs jl  0x408e9a
  408f0a:	inc    eax
  408f0b:	push   ebx
  408f0c:	lahf   
  408f0d:	push   ds
  408f0e:	or     ecx,ecx
  408f10:	add    BYTE PTR [ebx],ah
  408f12:	sub    BYTE PTR [esi+0x25],ch
  408f15:	mov    esi,0x65e99322
  408f1a:	(bad)  [eax+0x44]
  408f1d:	(bad)  
  408f1e:	gs mov esi,0xb6e7f874
  408f24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f25:	pop    edi
  408f26:	xor    esi,0xffffffa7
  408f29:	inc    eax
  408f2a:	rep outs dx,DWORD PTR ds:[esi]
  408f2c:	xchg   ebx,eax
  408f2d:	fwait
  408f2e:	rol    eax,1
  408f30:	xor    eax,0x84a30d1a
  408f35:	pop    edx
  408f36:	add    BYTE PTR [ecx],al
  408f38:	outs   dx,BYTE PTR ds:[esi]
  408f39:	pop    edi
  408f3a:	sbb    eax,0x387af203
  408f3f:	out    0x29,eax
  408f41:	test   eax,0x2d05a980
  408f46:	fdivr  QWORD PTR [esi+0x3d]
  408f49:	add    DWORD PTR [edx-0x7b339fcd],edx
  408f4f:	scas   al,BYTE PTR es:[edi]
  408f50:	aas    
  408f51:	xchg   ebx,eax
  408f52:	rol    DWORD PTR [esi+0x4708ae34],0x5a
  408f59:	cdq    
  408f5a:	je     0x408fae
  408f5c:	cld    
  408f5d:	rcr    DWORD PTR [ebp-0x1c],0xcd
  408f61:	aaa    
  408f62:	dec    eax
  408f63:	pushf  
  408f64:	lock xor al,0x9d
  408f67:	pop    ebx
  408f68:	jbe    0x408f40
  408f6a:	xor    eax,0x6c560d39
  408f6f:	jmp    0x6077:0xbb0358ba
  408f76:	sbb    al,BYTE PTR [ebp+0x190a8e94]
  408f7c:	mov    ebp,cs
  408f7e:	aad    0x88
  408f80:	xchg   DWORD PTR [ebx+ecx*1],esp
  408f83:	jp     0x408f6a
  408f85:	ds pop edx
  408f87:	stos   BYTE PTR es:[edi],al
  408f88:	out    dx,eax
  408f89:	sub    BYTE PTR [ecx],bh
  408f8b:	ret    0xc77f
  408f8e:	dec    esi
  408f8f:	das    
  408f90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f91:	mov    WORD PTR [ebx+0x22],?
  408f94:	les    edi,FWORD PTR [esi]
  408f96:	lods   al,BYTE PTR ds:[esi]
  408f97:	fidiv  DWORD PTR cs:[edi-0x39]
  408f9b:	aas    
  408f9c:	sub    eax,0x3491c802
  408fa1:	call   0x81622de2
  408fa6:	je     0x408f7d
  408fa8:	pusha  
  408fa9:	inc    ebp
  408faa:	arpl   WORD PTR [esi+0x4254dc6],ax
  408fb0:	cmc    
  408fb1:	hlt    
  408fb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fb3:	clc    
  408fb4:	dec    esp
  408fb5:	gs data16 add bh,dh
  408fb9:	repnz pop esi
  408fbb:	sar    DWORD PTR [ecx+0x31bbdf58],1
  408fc1:	ss jecxz 0x408fc7
  408fc4:	xchg   esi,eax
  408fc5:	or     eax,0x58762187
  408fca:	ins    BYTE PTR es:[edi],dx
  408fcb:	mov    ds:0xdb124a10,eax
  408fd0:	mov    WORD PTR [ebx*2-0x15d1ba8f],ds
  408fd7:	or     eax,0xe53d2d15
  408fdc:	in     al,dx
  408fdd:	fistp  QWORD PTR [esi]
  408fdf:	jns    0x408fdc
  408fe1:	fsub   st(2),st
  408fe3:	fwait
  408fe4:	inc    esp
  408fe5:	in     al,dx
  408fe6:	jg     0x409016
  408fe8:	add    dh,cl
  408fea:	sbb    ecx,edx
  408fec:	xchg   esi,eax
  408fed:	xor    BYTE PTR [ebp-0x50],cl
  408ff0:	xlat   BYTE PTR ds:[ebx]
  408ff2:	stc    
  408ff3:	leave  
  408ff4:	(bad)  
  408ff5:	sti    
  408ff6:	adc    al,0x5d
  408ff8:	out    dx,al
  408ff9:	stos   DWORD PTR es:[edi],eax
  408ffa:	add    al,0x77
  408ffc:	sub    DWORD PTR [ebx+0x30],0xfffffff1
  409000:	inc    eax
  409001:	adc    DWORD PTR [ecx],0x30
  409004:	push   0x4583c759
  409009:	std    
  40900a:	ret    0xf1fd
  40900d:	add    al,BYTE PTR [ecx-0x69b7a08e]
  409013:	xchg   ebx,eax
  409014:	enter  0x588f,0xcc
  409018:	xchg   dh,bh
  40901a:	mov    ecx,0xa978a754
  40901f:	sub    BYTE PTR [esi],bh
  409021:	mov    db2,edx
  409024:	std    
  409025:	leave  
  409026:	test   al,0xd6
  409028:	ja     0x409004
  40902a:	sbb    al,0xa3
  40902c:	hlt    
  40902d:	cmp    ebp,ebx
  40902f:	mov    cl,0x5e
  409031:	mov    cl,0x50
  409033:	dec    ebp
  409034:	inc    ecx
  409035:	cs out dx,al
  409037:	jl     0x408fea
  409039:	loope  0x408fcc
  40903b:	dec    esp
  40903c:	jb     0x40903a
  40903e:	sub    esi,edi
  409040:	sbb    DWORD PTR [ebp-0x2],0xa5fc6193
  409047:	sbb    eax,0x801c420f
  40904c:	jg     0x40901a
  40904e:	ins    DWORD PTR es:[edi],dx
  40904f:	mov    ebp,0x9e6dc615
  409054:	es in  eax,0x13
  409057:	cs (bad) 
  409059:	inc    BYTE PTR [ebx+0x16]
  40905c:	xor    eax,0x62c533f8
  409061:	mov    esp,0x838a8248
  409066:	pop    ebp
  409067:	pop    esp
  409068:	fisub  WORD PTR [ebx]
  40906a:	jmp    0x45b:0x6539605
  409071:	call   DWORD PTR [edi+ecx*1]
  409074:	mov    esp,0xb9853d87
  409079:	in     al,0xd1
  40907b:	ins    BYTE PTR es:[edi],dx
  40907c:	mov    ebx,0x2328910b
  409081:	bound  eax,QWORD PTR [eax]
  409083:	fsubrp st(1),st
  409085:	sub    bl,ch
  409087:	xchg   ecx,eax
  409088:	mov    ah,0x7a
  40908a:	jnp    0x40903d
  40908c:	pusha  
  40908d:	in     al,0xce
  40908f:	pop    ss
  409090:	iret   
  409091:	(bad)  
  409092:	pop    esi
  409093:	js     0x4090b5
  409095:	and    BYTE PTR [edx+0x7fffd814],0xa0
  40909c:	push   0x5593e7a
  4090a1:	ss push edx
  4090a3:	lea    edi,[ecx-0x4a]
  4090a6:	fstp   DWORD PTR [eax-0x2dccbbd7]
  4090ac:	movsx  esi,WORD PTR [esi-0x305c390f]
  4090b3:	mov    al,0xb5
  4090b5:	ror    DWORD PTR [eax-0x20],1
  4090b8:	sub    eax,0x4f7e33e2
  4090bd:	ss (bad) 
  4090bf:	(bad)  
  4090c1:	cmp    BYTE PTR [esi+0x5d193da4],al
  4090c7:	fist   DWORD PTR [ecx]
  4090c9:	call   0xd9d0dc56
  4090ce:	arpl   WORD PTR [ebp+0x5af237f],ax
  4090d4:	into   
  4090d5:	nop
  4090d6:	mov    eax,0x4ab3ad50
  4090db:	fcmovnbe st,st(3)
  4090dd:	jbe    0x409133
  4090df:	outs   dx,BYTE PTR ds:[esi]
  4090e0:	(bad)  
  4090e1:	(bad)  
  4090e2:	push   esp
  4090e3:	call   0x59ba7f95
  4090e8:	sti    
  4090e9:	das    
  4090ea:	out    dx,eax
  4090eb:	mov    bl,0x96
  4090ed:	xor    dl,BYTE PTR [edi-0x36]
  4090f0:	mov    edx,DWORD PTR [ebp+0x2eda7f15]
  4090f6:	xchg   ebp,eax
  4090f7:	or     eax,0x6d3d441f
  4090fc:	call   0xbb6a:0x63515931
  409103:	add    DWORD PTR [eax+edi*8],edx
  409106:	scas   eax,DWORD PTR es:[edi]
  409107:	popa   
  409108:	xchg   esi,eax
  409109:	jmp    0x409173
  40910b:	test   al,0xca
  40910d:	das    
  40910e:	loop   0x40917a
  409110:	inc    esi
  409111:	int3   
  409112:	in     al,0xc
  409114:	cwde   
  409115:	dec    eax
  409116:	cmp    DWORD PTR [esi+ebp*2-0x7b73344],0x3dd4e5f8
  409121:	cli    
  409122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409123:	icebp  
  409124:	fmul   QWORD PTR cs:0x1f2a30d4
  40912b:	out    0x69,al
  40912d:	mov    cl,0x39
  40912f:	mov    ah,BYTE PTR [edx+0x7a]
  409132:	push   ecx
  409133:	dec    esi
  409134:	pop    ss
  409135:	(bad)  
  409136:	rcr    DWORD PTR [eax+0x75],1
  409139:	sub    ebx,DWORD PTR [edi]
  40913b:	dec    eax
  40913c:	mov    BYTE PTR [ebp+0x27b0bbca],dh
  409142:	fwait
  409143:	cmc    
  409144:	test   DWORD PTR [eax],ecx
  409146:	sbb    ah,BYTE PTR [esi+0xcaa2946]
  40914c:	or     DWORD PTR [edx+eiz*2],edx
  40914f:	bnd jae 0x40915f
  409152:	dec    eax
  409153:	mov    edi,0x996c0d7d
  409158:	mov    ecx,0xcc7c0be2
  40915d:	jns    0x4091d9
  40915f:	fimul  DWORD PTR [esi-0x7f]
  409162:	ret    0x42be
  409165:	daa    
  409166:	sub    al,0xb8
  409168:	scas   al,BYTE PTR es:[edi]
  409169:	jbe    0x409149
  40916b:	mov    esp,DWORD PTR [edi]
  40916d:	jl     0x409123
  40916f:	shr    BYTE PTR [esi],cl
  409171:	inc    ebx
  409172:	aas    
  409173:	loope  0x40911b
  409175:	sahf   
  409176:	(bad)  
  409177:	icebp  
  409178:	dec    esp
  409179:	lahf   
  40917a:	arpl   WORD PTR [ebx-0x7d],dx
  40917d:	das    
  40917e:	in     eax,0xec
  409180:	icebp  
  409181:	pushf  
  409182:	sub    eax,0x9e4c3f98
  409187:	es xchg esp,eax
  409189:	hlt    
  40918a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40918b:	add    BYTE PTR [ebp+0x2f],0x87
  40918f:	adc    DWORD PTR [edx+esi*8+0x409ea564],eax
  409196:	lahf   
  409197:	push   ebx
  409198:	stos   BYTE PTR es:[edi],al
  409199:	call   0x342ce5eb
  40919e:	loopne 0x40913f
  4091a0:	mov    edi,0x88818dbb
  4091a5:	mov    bh,0x30
  4091a7:	mov    edx,0x74ed4fab
  4091ac:	aad    0xc0
  4091ae:	nop
  4091af:	fild   WORD PTR [edi-0x25]
  4091b2:	inc    ebp
  4091b3:	mov    ebp,0xd66fd5ca
  4091b8:	pop    edx
  4091b9:	ror    BYTE PTR [ebp-0x7],1
  4091bc:	sbb    ah,BYTE PTR [ebx-0x14821299]
  4091c2:	mov    bh,0xa1
  4091c4:	fsubr  QWORD PTR [esi-0x39]
  4091c7:	jg     0x409175
  4091c9:	inc    esp
  4091ca:	cmp    bl,BYTE PTR [ebx]
  4091cc:	lods   eax,DWORD PTR ds:[esi]
  4091cd:	mov    esi,0x25a65819
  4091d2:	std    
  4091d3:	or     DWORD PTR [ebx+0x1d51f5f7],eax
  4091d9:	jne    0x409235
  4091db:	iret   
  4091dc:	mov    gs,edx
  4091de:	rcr    BYTE PTR [ebp+0x28fe1adc],cl
  4091e4:	sub    bl,BYTE PTR [edx+0x57acf4c7]
  4091ea:	fimul  DWORD PTR [esi-0x2f]
  4091ed:	inc    eax
  4091ee:	or     BYTE PTR [edi+0x2fb7a54a],ch
  4091f4:	scas   al,BYTE PTR es:[edi]
  4091f5:	outs   dx,BYTE PTR ds:[esi]
  4091f6:	in     al,0x53
  4091f8:	out    dx,eax
  4091f9:	loop   0x40920d
  4091fb:	push   edx
  4091fc:	mov    al,ds:0x551e2a93
  409201:	add    DWORD PTR [esi],ecx
  409203:	packsswb mm2,QWORD PTR [ebx+0x67]
  409207:	adc    ebx,DWORD PTR [ecx+edi*2+0x27]
  40920b:	and    BYTE PTR [ebx+0x50],cl
  40920e:	fisttp QWORD PTR [ebx+0x72]
  409211:	xchg   BYTE PTR [edi+0x5529b0af],bh
  409217:	loopne 0x40925a
  409219:	rcl    BYTE PTR [ebx+0x48a1638e],0x80
  409220:	xor    dh,BYTE PTR [eax-0x2b8aadc]
  409226:	xor    eax,0x49cf874c
  40922b:	jle    0x40926f
  40922d:	cmp    eax,0xc75b66db
  409232:	pop    ecx
  409233:	add    ah,dh
  409235:	loopne 0x40925e
  409237:	out    dx,eax
  409238:	add    ah,BYTE PTR [eax+0x19]
  40923b:	xchg   edx,eax
  40923c:	sbb    cl,al
  40923e:	jbe    0x409269
  409240:	xor    DWORD PTR [ebp-0x1c],edi
  409243:	and    eax,0x2cfc546a
  409248:	push   es
  409249:	not    esp
  40924b:	ss (bad) 
  40924d:	sbb    edx,DWORD PTR ds:0x2ed5e803
  409253:	lss    edi,FWORD PTR [eax]
  409256:	leave  
  409257:	xor    al,0x82
  409259:	cld    
  40925a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40925b:	or     eax,0x76c3735
  409260:	xor    cl,BYTE PTR [ecx-0x10]
  409263:	stos   BYTE PTR es:[edi],al
  409264:	pop    edi
  409265:	xor    al,BYTE PTR [edi]
  409267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409268:	lods   al,BYTE PTR ds:[esi]
  409269:	add    ch,cl
  40926b:	aaa    
  40926c:	mov    eax,0xd9d20dac
  409271:	or     eax,0xe189ed6f
  409276:	cmp    BYTE PTR [ecx],bl
  409278:	imul   esi,DWORD PTR [esi],0xffffff99
  40927b:	rcl    BYTE PTR [edi],cl
  40927d:	mov    al,0x4e
  40927f:	sbb    ch,BYTE PTR [ecx-0x53a42ac]
  409285:	xchg   dh,dl
  409287:	mov    al,ds:0xa3869e16
  40928c:	jge    0x4092ec
  40928e:	pop    edx
  40928f:	aam    0x85
  409291:	sti    
  409292:	adc    DWORD PTR [edx-0x2a6f0115],ebp
  409298:	fmul   DWORD PTR [edx]
  40929a:	daa    
  40929b:	cmp    ebp,DWORD PTR [eax]
  40929d:	shl    BYTE PTR [edx+edi*4-0x42cdc90e],cl
  4092a4:	jp     0x4092d7
  4092a6:	hlt    
  4092a7:	ret    0xcd7
  4092aa:	dec    ecx
  4092ab:	sbb    eax,0x5e98fe27
  4092b0:	fwait
  4092b1:	shl    BYTE PTR [edi+0xc],1
  4092b4:	jne    0x4092ff
  4092b6:	enter  0x3008,0xb3
  4092ba:	xor    BYTE PTR [ebx+0x4e],0x34
  4092be:	aas    
  4092bf:	and    BYTE PTR [edx-0xda8454a],dl
  4092c5:	and    al,0x68
  4092c7:	(bad)  
  4092c8:	rol    edx,cl
  4092ca:	xchg   esi,eax
  4092cb:	in     al,0x7b
  4092cd:	jns    0x409261
  4092cf:	scas   al,BYTE PTR es:[edi]
  4092d0:	xchg   ecx,eax
  4092d1:	dec    edi
  4092d2:	aad    0x6e
  4092d4:	or     ah,BYTE PTR [ebp-0x6ec38ecd]
  4092da:	mov    cl,0x79
  4092dc:	outs   dx,DWORD PTR ds:[esi]
  4092dd:	(bad)
  4092e0:	adc    eax,0xe2e01cd0
  4092e5:	inc    edx
  4092e6:	mov    ch,0x5b
  4092e8:	(bad)  
  4092ea:	add    eax,0x9ae095fc
  4092ef:	mov    dh,0xc3
  4092f1:	mov    ah,0xbd
  4092f3:	ret    0xc815
  4092f6:	mov    eax,0xc1b1d60e
  4092fb:	sti    
  4092fc:	and    al,0x4f
  4092fe:	sub    eax,0x81d8ec12
  409303:	enter  0xbfc,0x66
  409307:	in     al,0xca
  409309:	div    ebx
  40930b:	mov    al,ds:0xf46b3ca9
  409310:	fcomi  st,st(1)
  409312:	ss pop ds
  409314:	es mov esi,0x21f1ac81
  40931a:	mov    esp,0x2bdb2ca3
  40931f:	pop    ss
  409320:	mov    cl,0xf9
  409322:	fdiv   DWORD PTR [ecx]
  409324:	adc    al,0x47
  409326:	mov    dh,0xe
  409328:	(bad)  
  409329:	pop    ebp
  40932a:	scas   al,BYTE PTR es:[edi]
  40932b:	push   esi
  40932c:	add    DWORD PTR [eax-0x50],ecx
  40932f:	sub    al,0x77
  409331:	sub    esp,DWORD PTR [eax+ecx*2+0x21]
  409335:	shl    DWORD PTR [ecx+0x2],cl
  409338:	jb     0x409378
  40933a:	cld    
  40933b:	or     ecx,ebx
  40933d:	int    0x73
  40933f:	pop    ebp
  409340:	in     al,0x73
  409342:	jl     0x409397
  409344:	mov    ecx,DWORD PTR [edx-0x35]
  409347:	jae    0x409374
  409349:	fwait
  40934a:	stc    
  40934b:	jmp    0x4093c8
  40934d:	enter  0xbdf6,0xd9
  409351:	push   ss
  409352:	std    
  409353:	js     0x409349
  409355:	cs mov al,0xe2
  409358:	in     eax,0x86
  40935a:	add    ch,bh
  40935c:	fisubr WORD PTR [edi+0x6b]
  40935f:	xor    al,0xb6
  409361:	outs   dx,BYTE PTR ds:[esi]
  409362:	dec    edx
  409363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409364:	ret    
  409365:	mov    ch,0xa2
  409367:	ret    
  409368:	(bad)  
  409369:	mov    eax,esp
  40936b:	jb     0x409351
  40936d:	xor    BYTE PTR [edx-0x7e],cl
  409370:	dec    esi
  409371:	xchg   ecx,eax
  409372:	xor    BYTE PTR [edi+0x3b49c786],ah
  409378:	jbe    0x40938d
  40937a:	pop    ebx
  40937b:	and    eax,0xcc0d800b
  409380:	iret   
  409381:	mov    WORD PTR [ecx+0x6f],ds
  409384:	ror    BYTE PTR [eax+0x10d507e2],cl
  40938a:	and    bl,BYTE PTR [esi-0x19974c02]
  409390:	jecxz  0x4093ba
  409392:	pop    ss
  409393:	xor    al,BYTE PTR [ebx]
  409395:	sbb    cl,0xfe
  409398:	inc    edx
  409399:	add    al,0xb8
  40939b:	jne    0x40937a
  40939d:	rcl    BYTE PTR ds:0x9cc7e2f,0xf
  4093a4:	jmp    0x95c7:0x954d84b9
  4093ab:	cmc    
  4093ac:	inc    BYTE PTR [eax-0x74]
  4093af:	shr    BYTE PTR [esi-0x738fff91],1
  4093b5:	rol    BYTE PTR [eax],1
  4093b7:	iret   
  4093b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093b9:	pop    esp
  4093ba:	sub    bl,bl
  4093bc:	adc    ebx,ebp
  4093be:	aam    0xba
  4093c0:	inc    esp
  4093c1:	add    DWORD PTR [eax],esi
  4093c3:	fdiv   QWORD PTR [esp+ebp*2-0x47d1fbb6]
  4093ca:	xchg   BYTE PTR ds:0xb4b245e9,dh
  4093d0:	sahf   
  4093d1:	(bad)  
  4093d2:	and    ah,ah
  4093d4:	xor    eax,0xbdd1b38
  4093d9:	sub    esi,DWORD PTR ds:0xd0751cfd
  4093df:	popf   
  4093e0:	xor    BYTE PTR [esi-0x79c12b5c],ah
  4093e6:	in     al,dx
  4093e7:	ja     0x4093bd
  4093e9:	add    eax,0x7fd4e49c
  4093ee:	fcmovb st,st(7)
  4093f0:	cli    
  4093f1:	(bad)  
  4093f2:	mov    eax,0xa5d5433c
  4093f7:	cwde   
  4093f8:	and    al,0x4f
  4093fa:	int3   
  4093fb:	aad    0xfc
  4093fd:	mov    dh,0xee
  4093ff:	das    
  409400:	cmp    edx,DWORD PTR [edi+ebx*2]
  409403:	test   eax,0x271d3775
  409408:	fs pop edx
  40940a:	outs   dx,DWORD PTR ds:[esi]
  40940b:	jp     0x409443
  40940d:	ret    
  40940e:	mov    edx,0x89497bb2
  409413:	jbe    0x4093e2
  409415:	pop    esp
  409416:	or     al,0xde
  409418:	(bad)  
  409419:	out    0xb2,eax
  40941b:	imul   edi,DWORD PTR [ebx+0x39c9c004],0xfa65421f
  409425:	iret   
  409426:	inc    eax
  409427:	add    bh,BYTE PTR [esi-0x3]
  40942a:	mov    bh,0xf5
  40942c:	sub    eax,0x6050489e
  409431:	add    al,0x42
  409433:	sub    al,0xd7
  409435:	dec    esp
  409436:	out    0x4a,al
  409438:	cmp    BYTE PTR [ecx+esi*4-0x26],bl
  40943c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40943d:	cld    
  40943e:	adc    al,0x4b
  409440:	ins    BYTE PTR es:[edi],dx
  409441:	pop    ds
  409442:	ins    DWORD PTR es:[edi],dx
  409443:	stos   BYTE PTR es:[edi],al
  409444:	cli    
  409445:	fsubr  DWORD PTR [ebx-0x55]
  409448:	pop    eax
  409449:	jbe    0x4094c9
  40944b:	mov    dh,0xc8
  40944d:	mov    ebx,0xb15b733d
  409452:	jmp    FWORD PTR [ebp+ebp*2-0x4f]
  409456:	jle    0x40947d
  409458:	adc    eax,0x734fcb5
  40945d:	fstp   QWORD PTR [edi]
  40945f:	sar    edx,1
  409461:	push   0xffffffed
  409463:	jl     0x40940e
  409465:	lds    esp,FWORD PTR [edi-0x59b1ca9e]
  40946b:	inc    edi
  40946c:	mov    ch,BYTE PTR [edi]
  40946e:	(bad)  [edx+0x27de318a]
  409474:	aas    
  409475:	inc    esp
  409476:	mov    eax,ds:0xf95133f2
  40947b:	mov    ds:0x5e52290f,eax
  409480:	lock xlat BYTE PTR ds:[ebx]
  409482:	(bad)  
  409483:	mov    bl,0x73
  409485:	fldcw  WORD PTR [edi+0x2dbcd682]
  40948b:	xor    ebp,ebp
  40948d:	fsincos 
  40948f:	adc    eax,0xdb3f8786
  409494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409495:	les    ecx,FWORD PTR [eax-0x79]
  409498:	ja     0x4094e3
  40949a:	mov    ch,0x7d
  40949c:	ja     0x409486
  40949e:	(bad)
  4094a1:	retf   0x7f03
  4094a4:	mov    esi,0x87a712c6
  4094a9:	ins    BYTE PTR es:[edi],dx
  4094aa:	imul   ebx,DWORD PTR [ebx],0x7
  4094ad:	mov    eax,ds:0x63337d99
  4094b2:	mov    bl,0x68
  4094b4:	in     eax,0xe
  4094b6:	sahf   
  4094b7:	dec    esp
  4094b8:	or     BYTE PTR [ebp+0x66],ch
  4094bb:	pop    ds
  4094bc:	jmp    0x40945b
  4094be:	icebp  
  4094bf:	push   0x5b9a9058
  4094c4:	jge    0x4094f9
  4094c6:	dec    edi
  4094c7:	mov    dl,0x4a
  4094c9:	(bad)  
  4094ca:	neg    BYTE PTR [edi]
  4094cc:	push   esi
  4094cd:	mov    ebp,0x7bb9042e
  4094d2:	ds out dx,eax
  4094d4:	adc    eax,0xc694886
  4094d9:	jmp    DWORD PTR [eax+ecx*2]
  4094dc:	aaa    
  4094dd:	addr16 ja 0x409519
  4094e0:	arpl   di,sp
  4094e2:	mov    esi,0xf5e65fa5
  4094e7:	mov    al,ds:0x61908f52
  4094ec:	mov    ebx,0xf2e3d2a7
  4094f1:	xor    al,0x79
  4094f3:	fisubr DWORD PTR [ecx+0x2b]
  4094f6:	imul   eax,edi,0xffffffe7
  4094f9:	aad    0xdf
  4094fb:	sub    edi,DWORD PTR [ebx]
  4094fd:	xchg   ecx,eax
  4094fe:	adc    BYTE PTR [esi],ch
  409500:	test   eax,0x2d0106c1
  409505:	(bad)  
  409506:	sbb    DWORD PTR [ecx+0x62],esi
  409509:	pop    ss
  40950a:	scas   al,BYTE PTR es:[edi]
  40950b:	loop   0x409532
  40950d:	or     ebp,ebp
  40950f:	or     DWORD PTR [edi+esi*8],ebp
  409512:	cmp    ch,bl
  409514:	getsec 
  409516:	and    BYTE PTR [esi-0x53efab6e],0x78
  40951d:	in     al,dx
  40951e:	bound  eax,QWORD PTR [esi+ebx*8+0x47]
  409522:	sbb    ebp,esp
  409524:	fwait
  409525:	lock adc BYTE PTR [ebp-0x308376d0],cl
  40952c:	push   es
  40952d:	xor    ecx,DWORD PTR [ebx*2-0x706975e1]
  409534:	outs   dx,BYTE PTR ds:[esi]
  409535:	leave  
  409536:	xchg   BYTE PTR [ebx-0x2d],ch
  409539:	jge    0x409568
  40953b:	sahf   
  40953c:	mov    dh,0xad
  40953e:	push   0xffffffb2
  409540:	push   ds
  409541:	ins    BYTE PTR es:[edi],dx
  409542:	daa    
  409543:	pusha  
  409544:	inc    BYTE PTR [edx+edi*2-0x45]
  409548:	pop    es
  409549:	push   ds
  40954a:	mov    eax,ds:0x9a8289d2
  40954f:	cmp    eax,0x2819a216
  409554:	or     ebx,0xd98af543
  40955a:	(bad)  
  40955b:	mov    esp,0xe080d778
  409560:	and    al,BYTE PTR [ecx-0x2a0600f3]
  409566:	add    BYTE PTR [esi+0x52],0x9b
  40956a:	sub    edi,ebp
  40956c:	xchg   ebp,eax
  40956d:	ret    
  40956e:	dec    ebp
  40956f:	icebp  
  409570:	push   0x11239293
  409575:	mov    ch,0xda
  409577:	xchg   ecx,eax
  409578:	in     al,dx
  409579:	(bad)  
  40957a:	sub    bh,bh
  40957c:	je     0x409533
  40957e:	sbb    bl,BYTE PTR [esi-0x29e9cfd8]
  409584:	mov    gs,ebx
  409586:	test   BYTE PTR [edi],0xbf
  409589:	je     0x4095a9
  40958b:	or     al,0x93
  40958d:	cwde   
  40958e:	dec    edi
  40958f:	xlat   BYTE PTR ss:[ebx]
  409591:	push   eax
  409592:	mov    DWORD PTR [edi],eax
  409594:	ret    
  409595:	(bad)  
  409596:	xor    cx,WORD PTR [ebp+0x2b]
  40959a:	dec    ebx
  40959b:	call   0xdad7865b
  4095a0:	push   esi
  4095a1:	(bad)  
  4095a2:	sub    al,0xa
  4095a4:	std    
  4095a5:	adc    esp,DWORD PTR [eax+0x7e]
  4095a8:	adc    BYTE PTR [edi+ebp*1],ch
  4095ab:	push   esi
  4095ac:	and    al,0x9a
  4095ae:	push   0xffffffbf
  4095b0:	and    eax,0xa1078827
  4095b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095b6:	push   ebp
  4095b7:	aam    0xd9
  4095b9:	xchg   esi,eax
  4095ba:	dec    ebp
  4095bb:	mov    ch,0xde
  4095bd:	imul   eax,ecx,0xf
  4095c0:	or     eax,edi
  4095c2:	mov    edx,0xfac5a180
  4095c7:	lods   al,BYTE PTR ds:[esi]
  4095c8:	add    bh,BYTE PTR [edx]
  4095ca:	dec    edx
  4095cb:	xchg   edi,eax
  4095cc:	out    0x8d,eax
  4095ce:	in     al,dx
  4095cf:	int    0x91
  4095d1:	pop    edi
  4095d2:	jge    0x409647
  4095d4:	xchg   edi,eax
  4095d5:	xor    eax,0x12d50647
  4095da:	xchg   ebx,eax
  4095db:	inc    esi
  4095dc:	jl     0x409586
  4095de:	pop    ecx
  4095df:	std    
  4095e0:	jl     0x4095fc
  4095e2:	inc    edi
  4095e3:	and    DWORD PTR [esp+eiz*2],0xffffff82
  4095e7:	sbb    esp,esp
  4095e9:	add    eax,0x449688f8
  4095ee:	sub    al,bl
  4095f0:	mov    WORD PTR [ebp-0x10],ds
  4095f3:	sti    
  4095f4:	js     0x409642
  4095f6:	cdq    
  4095f7:	sbb    BYTE PTR cs:[edi+0x1686d07a],ah
  4095fe:	dec    ebp
  4095ff:	add    BYTE PTR [edi-0x361bdbfb],dh
  409605:	daa    
  409606:	jbe    0x409631
  409608:	adc    al,BYTE PTR [esp+eax*1-0x77199c11]
  40960f:	mov    ah,0x6c
  409611:	or     eax,0xb07be830
  409616:	arpl   WORD PTR [esi-0x48],ax
  409619:	xor    BYTE PTR [edi+edi*8+0x6b],al
  40961d:	sub    bl,BYTE PTR [ebp+0x2f5de87f]
  409623:	cli    
  409624:	jbe    0x409649
  409626:	ret    
  409627:	call   0x50b6:0x8c3878d2
  40962e:	dec    ecx
  40962f:	cwde   
  409630:	test   DWORD PTR [ecx+0x46aa78c3],0x390370d1
  40963a:	and    al,0xe5
  40963c:	mov    eax,0x5649c2ba
  409641:	out    0x12,al
  409643:	test   dl,dl
  409645:	mov    ebx,DWORD PTR [ebx-0x6b]
  409648:	fistp  QWORD PTR [ebp+0x7b390712]
  40964e:	mov    edi,0x13cd33d5
  409653:	mov    dl,0xe4
  409655:	das    
  409656:	rol    BYTE PTR [edx-0x7991ebc3],0xb2
  40965d:	push   es
  40965e:	aas    
  40965f:	mov    dh,0x70
  409661:	sbb    eax,0x23c623e0
  409666:	sub    BYTE PTR [ecx-0x5d4bb6cf],bh
  40966c:	jns    0x4096da
  40966e:	push   0x24
  409670:	adc    BYTE PTR [ebp+0x7f4b70cd],0xca
  409677:	ret    
  409678:	jb     0x4096ae
  40967a:	or     eax,0x20014927
  40967f:	xor    ch,BYTE PTR ds:[eax+0x2ff55885]
  409686:	and    eax,0xde9c376b
  40968b:	fsubr  DWORD PTR [edx+0x41dcf9f3]
  409691:	dec    esi
  409692:	fisttp WORD PTR [edi]
  409694:	xor    DWORD PTR [esp+ebx*1-0x67157194],eax
  40969b:	pop    ebx
  40969c:	rcl    BYTE PTR [ebx-0x4e],cl
  40969f:	sbb    esp,DWORD PTR [ecx+0x7d09bbf]
  4096a5:	adc    eax,0xdcdbd518
  4096aa:	leave  
  4096ab:	and    BYTE PTR [eax+edx*4],cl
  4096ae:	xchg   esi,eax
  4096af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096b1:	movlps QWORD PTR [esi+edi*8+0x45],xmm5
  4096b6:	hlt    
  4096b7:	call   0x7c50:0xf0a9e7e9
  4096be:	mov    ah,0x10
  4096c0:	or     cl,bh
  4096c2:	pop    edx
  4096c3:	xchg   ebp,eax
  4096c4:	aaa    
  4096c5:	jp     0x40971d
  4096c7:	loopne 0x409703
  4096c9:	pop    ds
  4096ca:	jmp    0x8d574ad9
  4096cf:	out    dx,al
  4096d0:	call   0x9d50f9d0
  4096d5:	int3   
  4096d6:	xchg   esp,eax
  4096d7:	xchg   ebp,eax
  4096d8:	stc    
  4096d9:	and    bh,al
  4096db:	outs   dx,BYTE PTR ds:[esi]
  4096dc:	xor    ch,BYTE PTR [edi-0x1e]
  4096df:	and    eax,0x5268b4ef
  4096e4:	xlat   BYTE PTR ds:[ebx]
  4096e5:	push   ss
  4096e6:	aam    0x36
  4096e8:	and    al,ch
  4096ea:	arpl   WORD PTR [esi],bx
  4096ec:	add    edx,DWORD PTR [edx+edi*8+0x6b6f30dd]
  4096f3:	lock test eax,0xc762f56a
  4096f9:	mov    al,ds:0x23c1d5d1
  4096fe:	mov    ebx,0x781e2a50
  409703:	outs   dx,DWORD PTR ds:[esi]
  409704:	cmp    eax,0x66783217
  409709:	rol    BYTE PTR [ecx],0x25
  40970c:	mov    esp,0xeae8a96f
  409711:	shl    BYTE PTR [ecx],1
  409713:	push   ecx
  409714:	add    eax,0x3ae839d6
  409719:	loope  0x409763
  40971b:	and    al,0xa5
  40971d:	call   0xb04f22dc
  409722:	xchg   ebp,eax
  409723:	(bad)  
  409725:	mov    ch,0x91
  409727:	shl    BYTE PTR [edx-0x66],0x5
  40972b:	jecxz  0x4096b3
  40972d:	aaa    
  40972e:	ror    ch,1
  409730:	ins    BYTE PTR es:[edi],dx
  409731:	dec    edx
  409733:	icebp  
  409734:	mov    dl,BYTE PTR [edx]
  409736:	jbe    0x4096e2
  409738:	xchg   ebp,eax
  409739:	fcmovnb st,st(1)
  40973b:	loopne 0x409702
  40973d:	adc    al,0xed
  40973f:	mov    edx,0xd2ce7b37
  409744:	xchg   edx,esp
  409746:	sub    BYTE PTR [eax-0x6b7e22e5],ch
  40974c:	out    0xbf,eax
  40974e:	loopne 0x409762
  409750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409751:	jbe    0x409722
  409753:	stc    
  409754:	outs   dx,BYTE PTR ds:[esi]
  409755:	push   eax
  409756:	jecxz  0x409769
  409758:	fistp  QWORD PTR [eax-0x62]
  40975b:	sub    dl,BYTE PTR [eax+ecx*8]
  40975e:	jl     0x409707
  409760:	cld    
  409761:	test   al,0xbc
  409763:	mov    dl,0x34
  409765:	push   esi
  409766:	dec    ecx
  409767:	ror    BYTE PTR [edx-0x9],1
  40976a:	dec    BYTE PTR [edi-0x3f97d21d]
  409770:	aas    
  409771:	cld    
  409772:	imul   ebx,edi,0xe64af5da
  409778:	rol    dh,cl
  40977a:	retf   0x24f5
  40977d:	sub    ebp,esp
  40977f:	inc    ecx
  409780:	mov    edx,0xaa4b4c96
  409785:	mov    esi,0x2a6af795
  40978a:	fadd   st(4),st
  40978c:	pop    eax
  40978d:	scas   eax,DWORD PTR es:[edi]
  40978e:	cmp    al,0x10
  409790:	pop    esi
  409791:	mov    gs,WORD PTR [ebx+ecx*4+0x47]
  409795:	adc    ebx,ecx
  409797:	xor    ebx,DWORD PTR [ebx+0x3c191209]
  40979d:	addr16 mov eax,0xbed98d89
  4097a3:	aam    0xd0
  4097a5:	lods   al,BYTE PTR ds:[esi]
  4097a6:	inc    DWORD PTR [edi]
  4097a8:	jmp    0x76d3:0xa821b843
  4097af:	lods   al,BYTE PTR ds:[esi]
  4097b0:	push   eax
  4097b1:	xor    eax,0x3cc8faee
  4097b6:	ss xchg edi,eax
  4097b8:	leave  
  4097b9:	inc    ebp
  4097ba:	leave  
  4097bb:	adc    bh,BYTE PTR [esi+0x4eac6f77]
  4097c1:	mov    edx,0xca881f1a
  4097c6:	mov    ebp,0x5adc95a1
  4097cb:	test   esi,ecx
  4097cd:	mov    ch,0xbc
  4097cf:	(bad)  
  4097d1:	and    ebx,DWORD PTR [ecx+0x302349be]
  4097d7:	sbb    ebp,eax
  4097d9:	repnz sar BYTE PTR [esi+eiz*8+0x76],0x84
  4097df:	cld    
  4097e0:	jp     0x409854
  4097e2:	pop    esp
  4097e3:	fistp  DWORD PTR [ecx]
  4097e5:	cmp    eax,0x6ad36b88
  4097ea:	ins    BYTE PTR es:[edi],dx
  4097eb:	ss mov edi,0xff03cda9
  4097f1:	cwde   
  4097f2:	imul   ebx,DWORD PTR [edi+0x78],0x4ee66630
  4097f9:	stc    
  4097fa:	(bad)  
  4097fb:	f2xm1  
  4097fd:	repnz push ebx
  4097ff:	mov    dh,0xb5
  409801:	inc    edi
  409802:	mov    ebp,0x569e28d3
  409807:	sub    dl,dl
  409809:	fcomp  DWORD PTR [ebx+0x58e460ca]
  40980f:	into   
  409810:	aam    0xec
  409812:	or     eax,0x4d4368ad
  409817:	jle    0x409892
  409819:	mov    dh,0xfb
  40981b:	retf   0x2a6f
  40981e:	xchg   cl,al
  409820:	xlat   BYTE PTR ds:[ebx]
  409821:	arpl   bx,ax
  409823:	adc    BYTE PTR [eax],0xdc
  409826:	mov    esp,0x1dd90f79
  40982b:	and    ebp,0x1a3718ed
  409831:	repz add esi,edi
  409834:	retf   
  409835:	sub    DWORD PTR [ebx],edi
  409837:	test   al,0x70
  409839:	sbb    ecx,DWORD PTR [ebx+edi*8-0x7b]
  40983d:	inc    eax
  40983e:	bound  esp,QWORD PTR [ecx+0x34]
  409841:	inc    edi
  409842:	sahf   
  409843:	jmp    DWORD PTR [edi+0x461a4b85]
  409849:	xor    eax,edx
  40984b:	rcl    cl,cl
  40984d:	inc    esp
  40984e:	and    BYTE PTR [edi+0x3c],0x0
  409852:	jmp    0xb4c3:0xc3776dc9
  409859:	imul   ecx,DWORD PTR [edx],0xffffff83
  40985c:	xchg   esp,eax
  40985d:	hlt    
  40985e:	sub    DWORD PTR [ecx+esi*1],0xa1c76b8
  409865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409867:	loop   0x409865
  409869:	jb     0x409823
  40986b:	inc    edi
  40986c:	mov    DWORD PTR [esi],0xa52ecf44
  409872:	xchg   ebp,eax
  409873:	aam    0x71
  409875:	xchg   esi,eax
  409876:	test   BYTE PTR [ebx+0xa],ah
  409879:	jno    0x409818
  40987b:	cmp    al,0x2d
  40987d:	cdq    
  40987e:	enterw 0x5eff,0xe1
  409883:	fcomp  DWORD PTR [edx-0x63]
  409886:	out    0x2b,al
  409888:	cmp    eax,DWORD PTR [edi-0x70]
  40988b:	retf   0x816e
  40988e:	cmp    eax,0x7f32fd94
  409893:	mov    ds,WORD PTR [eax+0x7e2fa7ff]
  409899:	stos   BYTE PTR es:[edi],al
  40989a:	dec    esp
  40989b:	or     edi,esi
  40989d:	jecxz  0x4098a3
  40989f:	xor    al,BYTE PTR [edi]
  4098a1:	and    DWORD PTR [ebx],0x57
  4098a4:	les    esp,FWORD PTR [ebx+0x6f]
  4098a7:	or     al,0x4
  4098a9:	and    BYTE PTR [bx+di],dl
  4098ac:	cmp    eax,0x55dcbff0
  4098b1:	inc    edx
  4098b2:	push   esp
  4098b4:	in     al,0x62
  4098b6:	xor    DWORD PTR [ecx],edi
  4098b8:	std    
  4098b9:	xchg   edx,eax
  4098ba:	addr16 push cs
  4098bc:	mov    ss,WORD PTR [ecx-0x1cf41414]
  4098c2:	outs   dx,DWORD PTR ds:[esi]
  4098c3:	test   al,0xf9
  4098c5:	mov    ebp,0xb5859ec8
  4098ca:	push   ebp
  4098cb:	inc    ecx
  4098cc:	jns    0x409934
  4098ce:	int3   
  4098cf:	pop    edx
  4098d0:	(bad)  
  4098d1:	xchg   esp,eax
  4098d2:	pusha  
  4098d3:	adc    BYTE PTR [edx],ah
  4098d5:	jecxz  0x40988c
  4098d7:	daa    
  4098d8:	cmp    DWORD PTR [edx-0x1d],0xffffff90
  4098dc:	dec    esi
  4098dd:	cmp    dl,BYTE PTR [edx]
  4098df:	xchg   ebp,eax
  4098e0:	fcomp  st(4)
  4098e2:	xor    DWORD PTR [edi+esi*2],eax
  4098e5:	fld    QWORD PTR [ebp+ebp*8+0x2f1f6d4f]
  4098ec:	or     al,0xb4
  4098ee:	push   DWORD PTR [ecx+0x416dd828]
  4098f4:	jge    0x409975
  4098f6:	cdq    
  4098f7:	add    eax,DWORD PTR [edi+0x2d]
  4098fa:	js     0x409919
  4098fc:	push   ds
  4098fd:	or     DWORD PTR [esp+eiz*2+0x4930ad17],esi
  409904:	add    cl,BYTE PTR [ebx+0x7b476879]
  40990a:	cmp    ebp,DWORD PTR [eax]
  40990c:	mov    esi,0xd851d4ff
  409911:	jne    0x4098cc
  409913:	sbb    al,0x69
  409915:	adc    BYTE PTR [ecx],ch
  409917:	and    cl,BYTE PTR [esi-0x69]
  40991a:	rcl    DWORD PTR [edi-0x2c],cl
  40991d:	sbb    ebx,DWORD PTR [eax+eax*2]
  409920:	mov    ebp,DWORD PTR [ebx]
  409922:	popf   
  409923:	mov    ecx,0xdb58bc8a
  409928:	and    al,0x40
  40992a:	icebp  
  40992b:	rcr    esp,1
  40992d:	add    eax,0xbfe033c6
  409932:	push   ecx
  409933:	test   BYTE PTR [ecx],dl
  409935:	pop    ebx
  409936:	ret    
  409937:	mov    ecx,0xec120acf
  40993c:	jae    0x409902
  40993e:	jmp    0x813d68bc
  409943:	pop    ss
  409944:	fidivr DWORD PTR [ebp+0x776f76b9]
  40994a:	push   0x7a
  40994c:	imul   esi,DWORD PTR [ecx],0xc
  40994f:	or     esp,ecx
  409951:	pop    ebx
  409952:	xchg   DWORD PTR [ebx+eax*2-0x4],ebp
  409956:	pop    ds
  409957:	and    cl,BYTE PTR [edx+ebp*2+0x21]
  40995b:	push   ds
  40995c:	ret    
  40995d:	outs   dx,DWORD PTR ds:[esi]
  40995e:	mov    ebx,0xda12609e
  409963:	and    DWORD PTR [edi+0x53b6e54d],esi
  409969:	mov    bl,0x55
  40996b:	xor    eax,0x87eeda78
  409970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409971:	aad    0xf0
  409973:	add    DWORD PTR [edi-0x2c],0xfffffff5
  409977:	push   ds
  409978:	inc    edi
  409979:	das    
  40997a:	pop    DWORD PTR [ebp+0x32]
  40997d:	mov    ss,WORD PTR [ecx]
  40997f:	ins    BYTE PTR es:[edi],dx
  409980:	adc    dh,BYTE PTR [edx]
  409982:	push   ebx
  409983:	ficom  WORD PTR [ebp+0x7e]
  409986:	xchg   ebp,eax
  409987:	ins    DWORD PTR es:[edi],dx
  409988:	or     ecx,DWORD PTR [ebp-0x6]
  40998b:	pusha  
  40998c:	mov    esp,0x4b17ca2b
  409991:	xlat   BYTE PTR ds:[ebx]
  409992:	add    edi,DWORD PTR [edx+0x7f]
  409995:	fist   DWORD PTR [ecx+0x77ea0dd7]
  40999b:	int    0xf0
  40999d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40999e:	(bad)  
  4099a0:	pop    esi
  4099a1:	pop    edx
  4099a2:	jne    0x409a18
  4099a4:	mov    ds:0x6ef62396,al
  4099a9:	aas    
  4099aa:	pop    ss
  4099ab:	adc    eax,0xff650d5c
  4099b0:	sub    al,0x49
  4099b2:	icebp  
  4099b3:	shl    BYTE PTR gs:[esi+0x4a9798ab],1
  4099ba:	jb     0x409a2c
  4099bc:	out    0x7f,al
  4099be:	mov    esi,0x9f0be909
  4099c3:	mov    ds:0xe9acb352,eax
  4099c8:	dec    edi
  4099c9:	ffreep st(1)
  4099cb:	(bad)  
  4099cc:	push   ecx
  4099cd:	xchg   edi,eax
  4099ce:	add    eax,0x2c7ed960
  4099d3:	xor    BYTE PTR [ebx+0x5c],0xd8
  4099d7:	stos   DWORD PTR es:[edi],eax
  4099d8:	hlt    
  4099d9:	cli    
  4099da:	jae    0x4099a1
  4099dc:	icebp  
  4099dd:	jecxz  0x409a53
  4099df:	cmp    edx,DWORD PTR [esi]
  4099e1:	(bad)  
  4099e3:	dec    edi
  4099e4:	in     eax,dx
  4099e5:	cmp    dl,dh
  4099e7:	fstp   TBYTE PTR [edx+0x7f19949]
  4099ed:	outs   dx,BYTE PTR ds:[esi]
  4099ee:	scas   al,BYTE PTR es:[edi]
  4099ef:	ja     0x409a4e
  4099f1:	pop    esp
  4099f2:	test   BYTE PTR ds:0x76253ff2,0x31
  4099f9:	jns    0x409a2d
  4099fb:	std    
  4099fc:	jge    0x4099e2
  4099fe:	hlt    
  4099ff:	cmp    DWORD PTR [esi],edi
  409a01:	pushf  
  409a02:	mov    al,ds:0x433cbebf
  409a07:	cmp    dl,BYTE PTR [ecx+edx*1-0x368b775b]
  409a0e:	add    eax,0xb1d982d1
  409a13:	bound  ebx,QWORD PTR [ebx]
  409a15:	fmul   st,st(0)
  409a17:	mov    ds:0x767e3d3c,al
  409a1c:	cmp    BYTE PTR [ebp-0x6],bl
  409a1f:	inc    ebp
  409a20:	movaps XMMWORD PTR [edx],xmm3
  409a23:	scas   al,BYTE PTR es:[edi]
  409a24:	(bad)  
  409a25:	mov    ch,0x9a
  409a27:	jle    0x4099ff
  409a29:	cmc    
  409a2a:	push   0x9247fafc
  409a2f:	shl    DWORD PTR [edx+esi*4-0x29],cl
  409a33:	rol    DWORD PTR [edi+0x559b2673],cl
  409a39:	test   dl,al
  409a3b:	lods   eax,DWORD PTR ds:[esi]
  409a3c:	dec    edx
  409a3d:	jp     0x409a74
  409a3f:	jnp    0x409a63
  409a41:	ins    BYTE PTR es:[edi],dx
  409a42:	scas   eax,DWORD PTR es:[edi]
  409a43:	sbb    cl,0x10
  409a46:	clc    
  409a47:	fmul   DWORD PTR es:[edx+0x2a]
  409a4b:	and    DWORD PTR [edx+0x581792f7],esi
  409a51:	push   ebx
  409a52:	cmp    al,BYTE PTR [ebx+0x44]
  409a55:	or     edi,DWORD PTR [edx-0x22]
  409a58:	dec    ecx
  409a59:	adc    edi,edi
  409a5b:	adc    ecx,ebp
  409a5d:	mov    edi,0x5c948bbe
  409a62:	lea    esp,[edi+0x3f]
  409a65:	sbb    eax,DWORD PTR [edx]
  409a67:	adc    BYTE PTR [ecx],ch
  409a69:	out    dx,eax
  409a6a:	jno    0x409a4f
  409a6c:	ret    0x4b16
  409a6f:	mov    edi,DWORD PTR [eax]
  409a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a72:	push   esi
  409a73:	fbstp  TBYTE PTR [edi]
  409a75:	sub    esi,DWORD PTR [edx-0x66736fe9]
  409a7b:	fadd   QWORD PTR [edi]
  409a7d:	stc    
  409a7e:	std    
  409a7f:	push   cs
  409a80:	outs   dx,BYTE PTR ds:[esi]
  409a81:	pop    ebx
  409a82:	jg     0x409a46
  409a84:	aaa    
  409a85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a86:	mov    cl,0x21
  409a88:	add    ah,dh
  409a8a:	xor    al,0x62
  409a8c:	pop    esp
  409a8d:	xchg   esp,eax
  409a8e:	sub    ebx,esi
  409a90:	pop    esp
  409a91:	pop    edx
  409a92:	dec    ecx
  409a93:	js     0x409ac7
  409a95:	add    al,0xf5
  409a97:	or     al,0xec
  409a99:	cli    
  409a9a:	(bad)  
  409a9b:	mov    BYTE PTR [ecx+ecx*1],0x54
  409a9f:	push   ebp
  409aa0:	pop    ebx
  409aa1:	pop    ebx
  409aa2:	or     BYTE PTR [esp+eiz*2],dl
  409aa5:	mov    ecx,0xc2b9c76f
  409aaa:	pop    ebx
  409aab:	cmp    al,0x26
  409aad:	inc    ebx
  409aae:	int3   
  409aaf:	(bad)  
  409ab0:	scas   eax,DWORD PTR es:[edi]
  409ab1:	mov    dl,0xbb
  409ab3:	mov    edx,ss
  409ab5:	push   ebp
  409ab6:	push   ebp
  409ab7:	call   0x679ebeef
  409abc:	data16 xor BYTE PTR [eax],ah
  409abf:	pop    ecx
  409ac0:	retf   0x5239
  409ac3:	adc    bh,BYTE PTR [edi-0x7d]
  409ac6:	(bad)  
  409ac7:	retf   0x551
  409aca:	icebp  
  409acb:	(bad)  
  409acc:	push   esp
  409acd:	clc    
  409ace:	xor    DWORD PTR [eax],0xa9a29956
  409ad4:	xor    dh,dl
  409ad6:	fisub  DWORD PTR [edi+0x57]
  409ad9:	add    BYTE PTR [eax],ch
  409adb:	inc    edi
  409adc:	xor    dl,al
  409ade:	cmp    BYTE PTR [ebp+0x3f],bl
  409ae1:	aas    
  409ae2:	and    DWORD PTR [edx+0x23],eax
  409ae5:	mov    edx,0x81cd0c80
  409aea:	push   0x11
  409aec:	ja     0x409b43
  409aee:	mov    ds:0x194ca98a,al
  409af3:	cmp    dl,cl
  409af5:	adc    al,0xdf
  409af7:	repnz bound ebx,QWORD PTR [edx]
  409afa:	loope  0x409b7a
  409afc:	mov    ah,0xaa
  409afe:	pop    ebx
  409aff:	cld    
  409b00:	je     0x409b09
  409b02:	mov    bh,0xea
  409b04:	jno    0x409ad9
  409b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b07:	and    BYTE PTR [edi+ecx*4+0xee3bf0e],cl
  409b0e:	inc    esp
  409b0f:	loope  0x409b62
  409b11:	mov    ecx,0xc8ca5a8b
  409b16:	mov    dh,0xaf
  409b18:	clc    
  409b19:	pop    ds
  409b1a:	aas    
  409b1b:	mov    edx,0x58457821
  409b20:	xor    eax,0xc2efcc58
  409b25:	scas   al,BYTE PTR es:[edi]
  409b26:	mov    edx,esp
  409b28:	into   
  409b29:	mov    cl,0x79
  409b2b:	je     0x409b45
  409b2d:	dec    eax
  409b2e:	or     ecx,edi
  409b30:	bound  edx,QWORD PTR [ebx+0x13499d60]
  409b36:	xor    eax,0x2fdddc60
  409b3b:	push   edx
  409b3c:	aas    
  409b3d:	jp     0x409b56
  409b3f:	mov    ah,0x4c
  409b41:	xchg   edx,eax
  409b42:	sbb    edi,DWORD PTR [eax]
  409b44:	push   esp
  409b45:	jne    0x409b61
  409b47:	int3   
  409b48:	and    DWORD PTR [ecx+0xf8a8f4a],edx
  409b4e:	rcr    edx,cl
  409b50:	cs in  al,dx
  409b52:	push   esi
  409b53:	repz icebp 
  409b55:	loopne 0x409b92
  409b57:	shl    ch,1
  409b59:	imul   ecx,edi,0x5d
  409b5c:	cmp    ch,BYTE PTR [edi+0x1f]
  409b5f:	xor    ah,dl
  409b61:	mul    BYTE PTR [eax]
  409b63:	popa   
  409b64:	mov    bl,0xa1
  409b66:	inc    esp
  409b67:	cmp    ah,ah
  409b69:	mov    ecx,esi
  409b6b:	addr16 mov al,ds:0xddc2
  409b6f:	xchg   BYTE PTR [eax+0x71a4945a],dh
  409b75:	push   es
  409b76:	and    eax,0x7d08c226
  409b7b:	or     esp,DWORD PTR [ecx-0x43]
  409b7e:	pop    edi
  409b7f:	js     0x409bff
  409b81:	lahf   
  409b82:	add    DWORD PTR [edi+eiz*1],ebx
  409b85:	or     BYTE PTR fs:[edx],dl
  409b88:	icebp  
  409b89:	inc    edx
  409b8a:	jb     0x409b34
  409b8c:	pop    esp
  409b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b8e:	push   esp
  409b8f:	imul   ebx,edi,0xe70938e2
  409b95:	out    dx,eax
  409b96:	pop    ecx
  409b97:	stos   DWORD PTR es:[edi],eax
  409b98:	(bad)  
  409b99:	xor    DWORD PTR [ebx+0x4c1a9c09],0xffffffdd
  409ba0:	push   edx
  409ba1:	sbb    BYTE PTR [esi+0x2b],al
  409ba4:	and    esi,DWORD PTR [eax-0x64]
  409ba7:	inc    ebp
  409ba8:	sahf   
  409ba9:	aam    0xd6
  409bab:	stc    
  409bac:	fdivr  DWORD PTR [edx]
  409bae:	mov    DWORD PTR [edx+ebp*4+0x1e],esi
  409bb2:	shl    BYTE PTR [edx-0x31],cl
  409bb5:	imul   eax,DWORD PTR [bx],0x605d6f55
  409bbc:	inc    edi
  409bbd:	arpl   sp,di
  409bbf:	inc    eax
  409bc0:	pop    esi
  409bc1:	retf   0xd92d
  409bc4:	inc    edx
  409bc5:	adc    ecx,DWORD PTR [ebp+eiz*4-0x4336e9c0]
  409bcc:	xchg   DWORD PTR ds:0xa12d6f7c,ebp
  409bd2:	mov    bl,0xae
  409bd4:	cmp    eax,0xcf22afdd
  409bd9:	xchg   esi,eax
  409bda:	add    ah,dh
  409bdc:	lods   eax,DWORD PTR ds:[esi]
  409bdd:	mov    esp,0xa2e34d1e
  409be2:	je     0x409c16
  409be4:	fdivr  DWORD PTR [edx]
  409be6:	nop
  409be7:	xor    edx,DWORD PTR [ecx+0x1a5b0435]
  409bed:	into   
  409bee:	out    dx,al
  409bef:	jg     0x409b87
  409bf1:	aam    0x4c
  409bf3:	shl    BYTE PTR [edi+ecx*1-0xa598210],0x9b
  409bfb:	push   ebx
  409bfc:	cmp    BYTE PTR [edi-0x6044d0c3],ah
  409c02:	pop    ds
  409c03:	ss xor ebx,0x74
  409c07:	pop    ebx
  409c08:	inc    ebx
  409c09:	xchg   ebp,eax
  409c0a:	pop    edi
  409c0b:	xor    edi,ecx
  409c0d:	stos   BYTE PTR es:[edi],al
  409c0e:	clc    
  409c0f:	cs pop ss
  409c11:	push   edi
  409c12:	es sub eax,0x91b92952
  409c18:	or     BYTE PTR [edi-0x3f],cl
  409c1b:	in     al,dx
  409c1c:	call   0x146c:0x55d81024
  409c23:	pop    ecx
  409c24:	inc    ecx
  409c25:	test   ecx,0xc34e158
  409c2b:	out    dx,al
  409c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c2d:	mov    dh,0x3e
  409c2f:	dec    edi
  409c30:	adc    eax,0x3d0a03df
  409c35:	add    al,0x24
  409c37:	cmp    esi,DWORD PTR ds:0x9b3208db
  409c3d:	in     al,dx
  409c3e:	(bad)  
  409c3f:	js     0x409c18
  409c41:	pushaw 
  409c43:	pushf  
  409c44:	push   0x4a
  409c46:	cli    
  409c47:	neg    BYTE PTR ds:0xf6f821d6
  409c4d:	loop   0x409c00
  409c4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c50:	dec    edx
  409c51:	jne    0x409c22
  409c53:	pop    esp
  409c54:	mov    ds:0xfb96513b,eax
  409c59:	arpl   bp,si
  409c5b:	push   0xffffffc9
  409c5d:	and    eax,0xe09b5b0b
  409c62:	jmp    0x2a050dbd
  409c67:	push   0x911b819
  409c6c:	sub    ebp,ecx
  409c6e:	jmp    0xc52c:0xc3a34105
  409c75:	arpl   WORD PTR [edx],si
  409c77:	jl     0x409c5f
  409c79:	dec    esi
  409c7a:	add    ebp,DWORD PTR [ecx-0x3b]
  409c7d:	leave  
  409c7e:	jne    0x409cee
  409c80:	mov    dh,0xd8
  409c82:	test   BYTE PTR [ebp-0x10bbb597],0xdb
  409c89:	scas   al,BYTE PTR es:[edi]
  409c8a:	xchg   ecx,eax
  409c8b:	adc    edx,DWORD PTR [edi+edx*1]
  409c8e:	icebp  
  409c8f:	ficom  WORD PTR [ecx-0x46f7762d]
  409c95:	xor    DWORD PTR [ecx+0x33],ecx
  409c98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c99:	les    esp,FWORD PTR [edx]
  409c9b:	push   cs
  409c9c:	neg    BYTE PTR [ebp+0x16aad0e5]
  409ca2:	cld    
  409ca3:	jb     0x409c6b
  409ca5:	dec    BYTE PTR [ebx+0x45d5ce87]
  409cab:	loopne 0x409c88
  409cad:	sub    eax,ebx
  409caf:	fs push 0x550af25d
  409cb5:	dec    esp
  409cb6:	dec    edi
  409cb7:	into   
  409cb8:	call   0xe32a682a
  409cbd:	pusha  
  409cbe:	or     DWORD PTR ds:0x9d30e3b6,eax
  409cc4:	inc    ecx
  409cc5:	mov    esp,0x66379494
  409cca:	push   DWORD PTR [eax]
  409ccc:	ins    DWORD PTR es:[edi],dx
  409ccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cce:	xlat   BYTE PTR ds:[ebx]
  409ccf:	adc    DWORD PTR ss:[ebp-0x2f],ebx
  409cd3:	fldcw  WORD PTR [edi]
  409cd5:	(bad)  
  409cd6:	test   eax,0xd8c0504a
  409cdb:	pushf  
  409cdc:	das    
  409cdd:	cmp    BYTE PTR [ecx-0x24],bl
  409ce0:	xor    bh,BYTE PTR [ecx]
  409ce2:	cli    
  409ce3:	div    edi
  409ce5:	(bad)  
  409ce6:	jmp    0x4045:0x78717593
  409ced:	imul   esi,DWORD PTR [edx+0x3ea4f4c1],0x56202220
  409cf7:	sub    DWORD PTR [ebp-0x35],ecx
  409cfa:	cmp    esi,DWORD PTR [edi+0x6669adca]
  409d00:	mov    esp,edx
  409d02:	push   ss
  409d03:	dec    esp
  409d04:	sub    cl,bl
  409d06:	dec    eax
  409d07:	adc    BYTE PTR [esp+edx*8+0x71],bh
  409d0b:	xlat   BYTE PTR ds:[ebx]
  409d0c:	nop
  409d0d:	test   DWORD PTR [ecx],esp
  409d0f:	or     DWORD PTR [esi+edx*1+0x223c52cf],ebx
  409d16:	stc    
  409d17:	push   edi
  409d18:	scas   eax,DWORD PTR es:[edi]
  409d19:	sbb    esi,ecx
  409d1b:	(bad)  
  409d1d:	outs   dx,BYTE PTR ds:[esi]
  409d1e:	sub    DWORD PTR [edx+0x119b5cf7],eax
  409d24:	sti    
  409d25:	or     eax,edx
  409d27:	adc    eax,0xb7a941ec
  409d2c:	outs   dx,BYTE PTR ds:[esi]
  409d2d:	push   eax
  409d2e:	sub    al,0x7c
  409d30:	mov    eax,ds:0x724d8aa0
  409d35:	je     0x409d2b
  409d37:	pusha  
  409d38:	mov    al,ds:0x78491410
  409d3d:	(bad)  
  409d3e:	clc    
  409d3f:	jmp    0xb93e81e9
  409d44:	out    0x8a,al
  409d46:	fcomi  st,st(5)
  409d48:	repnz push edi
  409d4a:	adc    DWORD PTR [ebp-0x217712a7],esp
  409d50:	mov    esp,0x94a7942f
  409d55:	nop
  409d56:	inc    eax
  409d57:	xchg   ecx,eax
  409d58:	xor    dl,ah
  409d5a:	mov    dh,0xfa
  409d5c:	fcom   DWORD PTR [edi]
  409d5e:	mov    WORD PTR [eax+esi*1],ds
  409d61:	sub    eax,0xaef0bd76
  409d66:	gs fwait
  409d68:	or     DWORD PTR [ebx],0x569dc423
  409d6e:	mov    ch,0x10
  409d70:	frstor [edx]
  409d72:	div    eax
  409d74:	scas   eax,DWORD PTR es:[edi]
  409d75:	sar    BYTE PTR [esi-0x66bb9d46],cl
  409d7b:	jbe    0x409d6f
  409d7d:	jb     0x409daa
  409d7f:	retf   
  409d80:	add    ah,BYTE PTR [edx+edx*4+0x34547cc8]
  409d87:	sbb    eax,0x9ddbcbad
  409d8c:	sbb    al,0xc0
  409d8e:	call   0x30da28c3
  409d93:	push   esi
  409d94:	jb     0x409e14
  409d96:	sub    eax,0x682fea6c
  409d9b:	sti    
  409d9c:	mov    esp,0x58f85f74
  409da1:	push   eax
  409da2:	add    ebp,DWORD PTR [edi+0x626e099f]
  409da8:	push   ds
  409da9:	fwait
  409daa:	push   ecx
  409dab:	xor    edx,edi
  409dad:	adc    ecx,esi
  409daf:	dec    eax
  409db0:	jno    0x409dad
  409db2:	lock cld 
  409db4:	sbb    eax,0x81d7c3e2
  409db9:	cs mov ecx,0xfbfcdc90
  409dbf:	in     al,dx
  409dc0:	test   al,0x22
  409dc2:	and    edx,DWORD PTR [ebx+edi*8+0x2037e74b]
  409dc9:	cmp    eax,0x8c0ace73
  409dce:	adc    eax,0x2cd60240
  409dd3:	pop    edi
  409dd4:	add    esi,DWORD PTR [ebp+0x8f3eadf]
  409dda:	clc    
  409ddb:	sub    DWORD PTR [ebp-0x7c181362],esi
  409de1:	mov    es,WORD PTR [esi+0x49]
  409de4:	add    esp,edx
  409de6:	dec    esp
  409de7:	inc    edi
  409de8:	xlat   BYTE PTR ds:[ebx]
  409de9:	xor    ah,BYTE PTR [edi-0x69]
  409dec:	push   es
  409ded:	mov    esi,0x96865073
  409df2:	mul    BYTE PTR [ebx]
  409df4:	(bad)  
  409df5:	ins    BYTE PTR es:[edi],dx
  409df6:	std    
  409df7:	jmp    0xad870252
  409dfc:	in     al,dx
  409dfd:	stos   BYTE PTR es:[edi],al
  409dfe:	add    DWORD PTR [ecx-0x4b500939],ebx
  409e04:	pushf  
  409e05:	das    
  409e06:	add    al,BYTE PTR [ebp-0x4f333e34]
  409e0c:	pop    edi
  409e0d:	jle    0x409df8
  409e0f:	push   ds
  409e10:	imul   esp,edi,0xffffff8e
  409e13:	retf   0x1746
  409e16:	or     cl,BYTE PTR [ebp+eiz*4+0x837092b]
  409e1d:	(bad)  
  409e1e:	(bad)  
  409e1f:	sahf   
  409e20:	or     DWORD PTR [ecx+0x41],ecx
  409e23:	add    BYTE PTR [edx],ah
  409e25:	in     eax,dx
  409e26:	(bad)  [ecx+0x1c28552]
  409e2c:	pop    edx
  409e2d:	push   es
  409e2e:	repz cmc 
  409e30:	fwait
  409e31:	or     ah,BYTE PTR [edi-0x46a98b1f]
  409e37:	mov    ebp,0x5b97b179
  409e3c:	lea    esp,[esi+0x21]
  409e3f:	in     eax,0x5f
  409e41:	mov    bh,BYTE PTR [eax+0x15]
  409e44:	mov    al,0x51
  409e46:	stos   DWORD PTR es:[edi],eax
  409e47:	mov    edi,0x915b8691
  409e4c:	cwde   
  409e4d:	jbe    0x409e69
  409e4f:	in     al,dx
  409e50:	mov    DWORD PTR [edx-0x7cd750b4],edx
  409e56:	sub    eax,0xa827ad87
  409e5b:	xlat   BYTE PTR ds:[ebx]
  409e5c:	gs in  eax,0x20
  409e5f:	xchg   esp,eax
  409e60:	fstp   DWORD PTR [edi+0x40bef1ac]
  409e66:	stc    
  409e67:	mov    dl,BYTE PTR [edx+0x24]
  409e6a:	push   0x76
  409e6c:	pop    es
  409e6d:	ror    BYTE PTR [esi],0x29
  409e70:	popa   
  409e71:	mov    eax,0xc15e68ce
  409e76:	xor    al,0xa1
  409e78:	shr    BYTE PTR [ebx+0xcba4e5d],1
  409e7e:	adc    bh,BYTE PTR [ebp-0x524edb23]
  409e84:	add    al,0x7
  409e86:	pop    ss
  409e87:	push   edx
  409e88:	pop    ss
  409e89:	sub    al,0x13
  409e8b:	push   edi
  409e8c:	ret    
  409e8d:	into   
  409e8e:	sub    esi,DWORD PTR [edi-0x46e02f2d]
  409e94:	cmp    al,0xbf
  409e96:	fmul   st(0),st
  409e98:	fwait
  409e99:	call   0x28481e2a
  409e9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e9f:	inc    esp
  409ea0:	xor    ecx,DWORD PTR [ebp-0x746a87a0]
  409ea6:	push   ebp
  409ea7:	enter  0xaacc,0x58
  409eab:	inc    ebx
  409eac:	repnz daa 
  409eae:	gs dec ebx
  409eb0:	into   
  409eb1:	adc    DWORD PTR [ebp+eax*1-0x53],0x7d
  409eb6:	int3   
  409eb7:	jbe    0x409ee3
  409eb9:	outs   dx,DWORD PTR ds:[esi]
  409eba:	retf   
  409ebb:	mov    ds:0x92f6eb5c,eax
  409ec0:	mov    ch,0x3c
  409ec2:	jns    0x409ee0
  409ec4:	pop    es
  409ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ec6:	inc    esi
  409ec7:	(bad)  
  409ec8:	out    dx,eax
  409ec9:	or     al,0x63
  409ecb:	lods   eax,DWORD PTR ds:[esi]
  409ecc:	aad    0xed
  409ece:	stos   DWORD PTR es:[edi],eax
  409ecf:	gs out 0xc7,al
  409ed2:	add    edx,esi
  409ed4:	scas   eax,DWORD PTR es:[edi]
  409ed5:	add    esi,DWORD PTR [eax+0x60154a50]
  409edb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409edc:	sar    BYTE PTR [edx],1
  409ede:	sub    BYTE PTR [ebx-0x53],dl
  409ee1:	(bad)  
  409ee2:	stc    
  409ee3:	xchg   DWORD PTR [ebx],ebx
  409ee5:	dec    ebx
  409ee6:	into   
  409ee7:	or     bl,BYTE PTR [ecx+0x6]
  409eea:	mov    ds:0xb645feaa,eax
  409eef:	cmp    esp,DWORD PTR [eax+0x59]
  409ef2:	adc    BYTE PTR [ebx-0xfcc1f0b],bl
  409ef8:	les    esp,FWORD PTR [edi+0x6d96c6ec]
  409efe:	pusha  
  409eff:	and    eax,0x2f341675
  409f04:	add    al,0xa
  409f06:	cmp    DWORD PTR [edi+0x39],ecx
  409f09:	mov    dl,0xee
  409f0b:	imul   ebx,DWORD PTR [esi],0x35
  409f0e:	les    ebp,FWORD PTR [ebx+ebx*8+0x69]
  409f12:	popf   
  409f13:	mov    eax,ds:0x946c634
  409f18:	mov    ds:0xd69dc190,al
  409f1d:	adc    al,0xd7
  409f1f:	lahf   
  409f20:	js     0x409eec
  409f22:	dec    esi
  409f23:	push   eax
  409f24:	and    BYTE PTR [esi+0x70fcbd14],0x19
  409f2b:	retf   
  409f2c:	ja     0x409eef
  409f2e:	mov    bh,0x3f
  409f30:	shl    BYTE PTR [edx+0x3a4593f5],1
  409f36:	pop    esp
  409f37:	or     ecx,DWORD PTR [eax+0x79]
  409f3a:	mov    cl,0xbf
  409f3c:	and    eax,eax
  409f3e:	leave  
  409f3f:	enter  0x853b,0xe9
  409f43:	cmp    al,BYTE PTR [ebx]
  409f45:	pop    ebx
  409f46:	sbb    al,0xfb
  409f48:	inc    ebp
  409f49:	adc    BYTE PTR [eax+0x9],dh
  409f4c:	stc    
  409f4d:	outs   dx,BYTE PTR ds:[esi]
  409f4e:	out    dx,al
  409f4f:	adc    esi,DWORD PTR [esp+edi*8]
  409f52:	(bad)  
  409f53:	daa    
  409f54:	data16 and BYTE PTR [esi+edi*8],al
  409f58:	(bad)  
  409f59:	pop    edi
  409f5a:	cmp    BYTE PTR [edi],0x3c
  409f5d:	cld    
  409f5e:	inc    edx
  409f5f:	adc    esi,DWORD PTR [edx+0x63]
  409f62:	pop    ds
  409f63:	xchg   edi,eax
  409f64:	inc    BYTE PTR [edi+0x79]
  409f67:	adc    bl,dh
  409f69:	jbe    0x409f64
  409f6b:	popf   
  409f6c:	push   ebx
  409f6d:	ja     0x409f99
  409f6f:	outs   dx,BYTE PTR ds:[esi]
  409f70:	fucom  st(6)
  409f72:	ins    BYTE PTR es:[edi],dx
  409f73:	inc    esi
  409f74:	and    al,0x74
  409f76:	push   es
  409f77:	mov    ebp,eax
  409f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f7a:	enter  0xb57d,0x77
  409f7e:	in     al,0x81
  409f80:	mov    dh,0xf5
  409f82:	push   0x4d
  409f84:	xchg   esi,eax
  409f85:	add    esp,edx
  409f87:	mov    cl,0xbb
  409f89:	lock pop eax
  409f8b:	fcmovnb st,st(2)
  409f8d:	pop    esp
  409f8e:	jle    0x409f98
  409f90:	cmp    DWORD PTR [ebp-0x4f06c921],edi
  409f96:	add    bl,BYTE PTR [ebx+ebp*4]
  409f99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f9a:	push   ebx
  409f9b:	pop    esp
  409f9c:	dec    edi
  409f9d:	(bad)  
  409f9e:	mov    al,ds:0x4374c15b
  409fa3:	xchg   ebp,eax
  409fa4:	pop    es
  409fa5:	and    DWORD PTR [ecx+0x69],0x671db7b3
  409fac:	add    BYTE PTR [edi],ah
  409fae:	test   al,0xb7
  409fb0:	sub    edx,DWORD PTR [ebx+ebx*1]
  409fb3:	inc    eax
  409fb4:	out    dx,al
  409fb5:	xchg   BYTE PTR [edi+0x5],bh
  409fb8:	(bad)  
  409fba:	mov    esp,0x4ef87c4c
  409fbf:	cld    
  409fc0:	mov    edi,0x7910954b
  409fc5:	jae    0x409ffb
  409fc7:	xor    eax,0x487a6b3e
  409fcc:	popa   
  409fcd:	shl    DWORD PTR [ebx],cl
  409fcf:	xor    bh,BYTE PTR [eax]
  409fd1:	bound  ebx,QWORD PTR [ebp-0x34]
  409fd4:	cli    
  409fd5:	mov    esi,0xd256c2cc
  409fda:	pop    ss
  409fdb:	add    al,0x97
  409fdd:	cwde   
  409fde:	xchg   BYTE PTR [eax-0x3d],ch
  409fe1:	xlat   BYTE PTR ds:[ebx]
  409fe2:	imul   edi,DWORD PTR ds:0xb55b2d2e,0x204d4ded
  409fec:	xor    dh,ch
  409fee:	sar    BYTE PTR [ebx+0x147dfcbc],1
  409ff4:	add    BYTE PTR [edi-0x4c],0x56
  409ff8:	push   ds
  409ff9:	push   ecx
  409ffa:	out    0x5e,eax
  409ffc:	pusha  
  409ffd:	mov    eax,ds:0x7df7545
  40a002:	vpmaddwd ymm5,ymm2,ymm3
  40a006:	push   ebx
  40a007:	push   0x3f
  40a009:	and    esp,DWORD PTR [edx-0x6]
  40a00c:	jmp    0x9a6b:0xa5dc3631
  40a013:	dec    edx
  40a014:	push   esi
  40a015:	inc    esp
  40a016:	sbb    eax,ebp
  40a018:	mov    ds:0x8bcbddb4,eax
  40a01d:	jecxz  0x409fc2
  40a01f:	xor    al,dh
  40a021:	mov    ch,0x9a
  40a023:	sbb    ch,ah
  40a025:	test   eax,0x6ea9e9b7
  40a02a:	sub    eax,0xf97864f0
  40a02f:	ret    
  40a030:	push   ecx
  40a031:	sbb    al,0xff
  40a033:	bound  esi,QWORD PTR [ebp-0x62d20ef7]
  40a039:	dec    ecx
  40a03a:	or     BYTE PTR [ecx+0x7ff90fa8],dh
  40a040:	ret    0x16fa
  40a043:	sbb    eax,0xb198828a
  40a048:	std    
  40a049:	mov    al,ds:0x5927a19d
  40a04e:	mov    esp,0x29e983a8
  40a053:	cmp    al,0x15
  40a055:	lds    edx,FWORD PTR [ecx+0x7a163872]
  40a05b:	repz fmul st(6),st
  40a05e:	mov    bh,0x46
  40a060:	or     BYTE PTR [eax+edx*8-0x46],0x47
  40a065:	xchg   esi,eax
  40a066:	mov    esi,0x3fc2e9fb
  40a06b:	push   ss
  40a06c:	pop    ebp
  40a06d:	mov    esp,0xe6084315
  40a072:	inc    esi
  40a073:	push   ss
  40a074:	test   DWORD PTR [eax-0x32180b85],esp
  40a07a:	loope  0x40a007
  40a07c:	push   ebp
  40a07d:	dec    esp
  40a07e:	pop    ebp
  40a07f:	push   ebp
  40a080:	pop    esi
  40a081:	mov    edx,DWORD PTR [ebx]
  40a083:	xor    al,0xa7
  40a085:	push   ecx
  40a086:	pop    eax
  40a087:	jmp    0x40a0d5
  40a089:	push   ebp
  40a08a:	adc    eax,DWORD PTR [edi]
  40a08c:	cli    
  40a08d:	push   edx
  40a08e:	mov    ebp,0x6b240657
  40a093:	mov    edx,0x8a566466
  40a098:	ja     0x40a06d
  40a09a:	stc    
  40a09b:	ss push ss
  40a09d:	dec    ebx
  40a09e:	cli    
  40a09f:	les    ebp,FWORD PTR [esi+ebx*8-0x1128f89a]
  40a0a6:	mov    al,0xa5
  40a0a8:	inc    ecx
  40a0a9:	sahf   
  40a0aa:	xchg   edx,eax
  40a0ab:	jp     0x40a066
  40a0ad:	add    eax,0xe37c8bc3
  40a0b2:	add    BYTE PTR [esi-0x1c51753b],al
  40a0b8:	jmp    0x40a0bb
  40a0ba:	inc    edi
  40a0bb:	mov    esp,0xf1e6eb5c
  40a0c0:	jge    0x40a0a8
  40a0c2:	loope  0x40a067
  40a0c4:	cmp    DWORD PTR ds:0xb64d0a86,eax
  40a0ca:	pushw  0x83e
  40a0ce:	cmp    BYTE PTR [ebp+0x28d9395f],dl
  40a0d4:	fidiv  DWORD PTR [edi]
  40a0d6:	mov    BYTE PTR [ebx+0x12ef551],al
  40a0dc:	test   eax,0xf7875521
  40a0e1:	sub    al,0x8
  40a0e3:	dec    ecx
  40a0e4:	ss shl bh,1
  40a0e7:	fnstsw WORD PTR [edx+0x73b6726c]
  40a0ed:	cs aam 0xc7
  40a0f0:	or     ecx,DWORD PTR [edx-0x6819bdf6]
  40a0f6:	sbb    al,0x72
  40a0f8:	mov    eax,ds:0x736eaf53
  40a0fd:	loop   0x40a0ba
  40a0ff:	cmp    esi,DWORD PTR [ecx-0x3c]
  40a102:	jbe    0x40a10e
  40a104:	inc    edi
  40a105:	push   ecx
  40a106:	adc    bh,al
  40a108:	mov    bh,0x84
  40a10a:	jno    0x40a141
  40a10c:	push   ebx
  40a10d:	sar    dl,1
  40a10f:	xchg   ecx,eax
  40a110:	es test al,0xca
  40a113:	push   0x1dfbee11
  40a118:	mov    cs,WORD PTR [ebp-0x30]
  40a11b:	mov    ds:0xeda67ffa,al
  40a120:	mov    ecx,0x71413aee
  40a125:	stc    
  40a126:	dec    ecx
  40a127:	or     BYTE PTR [edi],dl
  40a129:	fisubr DWORD PTR [ecx]
  40a12b:	inc    esi
  40a12c:	push   cs
  40a12d:	sub    bh,cl
  40a12f:	push   ebx
  40a130:	xchg   edx,eax
  40a131:	(bad)  
  40a133:	xor    eax,0xea3cf53d
  40a138:	sub    al,0xce
  40a13a:	out    dx,eax
  40a13b:	mov    ds:0x340ace30,al
  40a140:	sar    BYTE PTR [esi+0x2f],0x62
  40a144:	dec    eax
  40a145:	bound  ebx,QWORD PTR [edi-0x14717a67]
  40a14b:	dec    edi
  40a14c:	xor    edx,DWORD PTR [ecx-0x42]
  40a14f:	gs clc 
  40a151:	je     0x40a107
  40a153:	bnd ret 
  40a155:	xor    eax,ebx
  40a157:	cmc    
  40a158:	(bad)  
  40a159:	sti    
  40a15a:	mov    al,ds:0x39775e84
  40a15f:	or     bl,ch
  40a161:	mov    ah,BYTE PTR [esi+ecx*2]
  40a164:	loopne 0x40a194
  40a166:	test   al,0xa
  40a168:	jl     0x40a11c
  40a16a:	fcom   QWORD PTR [ebx+0x2e78c3b8]
  40a170:	xchg   ebx,eax
  40a171:	pop    ebx
  40a172:	sar    BYTE PTR [ebp+0x3f],0xac
  40a176:	jecxz  0x40a1dd
  40a178:	cmp    al,0x16
  40a17a:	pop    ds
  40a17b:	jnp    0x40a1ec
  40a17d:	stos   DWORD PTR es:[edi],eax
  40a17e:	sahf   
  40a17f:	push   eax
  40a180:	sbb    al,0xf0
  40a182:	push   ebx
  40a183:	push   es
  40a184:	mov    ch,0xf4
  40a186:	stos   DWORD PTR es:[edi],eax
  40a187:	(bad)  
  40a188:	cmp    bl,al
  40a18a:	(bad)  
  40a18b:	push   ecx
  40a18c:	inc    esp
  40a18d:	bound  eax,QWORD PTR [ebp*8-0x6b6c7ddb]
  40a194:	retf   
  40a195:	lds    esp,FWORD PTR [ebx+0x27]
  40a198:	(bad)  
  40a19a:	adc    al,0xd8
  40a19c:	outs   dx,BYTE PTR ds:[esi]
  40a19d:	pop    esi
  40a19e:	fcmovbe st,st(3)
  40a1a0:	mov    al,ds:0x5841c745
  40a1a5:	pop    esi
  40a1a6:	cmp    eax,0xf3776d9f
  40a1ab:	pop    ecx
  40a1ac:	or     al,0x9f
  40a1ae:	dec    edx
  40a1af:	and    eax,0x32d50322
  40a1b4:	outs   dx,BYTE PTR ds:[esi]
  40a1b5:	mov    DWORD PTR [ebx],ebx
  40a1b7:	shr    BYTE PTR [esi],cl
  40a1b9:	push   esi
  40a1ba:	sbb    ebx,DWORD PTR [eax]
  40a1bc:	mov    ds:0x622a13d,al
  40a1c1:	push   esp
  40a1c2:	daa    
  40a1c3:	out    dx,eax
  40a1c4:	test   DWORD PTR [eax-0x3c],esp
  40a1c7:	add    ch,BYTE PTR [ebx+0x1bc2851c]
  40a1cd:	stos   BYTE PTR es:[edi],al
  40a1ce:	push   ebx
  40a1cf:	ins    BYTE PTR es:[edi],dx
  40a1d0:	scas   al,BYTE PTR es:[edi]
  40a1d1:	sub    ch,BYTE PTR ds:0x9d3d8e14
  40a1d7:	mov    ecx,0x67ce7587
  40a1dc:	loope  0x40a195
  40a1de:	jns    0x40a1f6
  40a1e0:	data16 rcl al,0x72
  40a1e4:	rol    ecx,1
  40a1e6:	lods   eax,DWORD PTR ds:[esi]
  40a1e7:	out    0xe0,eax
  40a1e9:	repz stc 
  40a1eb:	addr16 pop ds
  40a1ed:	inc    ebx
  40a1ee:	imul   eax,DWORD PTR [ecx-0x24],0xeb4f591b
  40a1f5:	sub    al,0x3b
  40a1f7:	es call 0xef7842c9
  40a1fd:	cmp    esi,eax
  40a1ff:	jne    0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	enter  0xb166,0x7c
  40a5ec:	daa    
  40a5ed:	push   es
  40a5ee:	jl     0x40a66c
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	mov    ds:0x78910d30,al
  40a5f9:	add    al,0xa1
  40a5fb:	xchg   esi,eax
  40a5fc:	imul   edx,DWORD PTR [ebp-0x18],0x62
  40a600:	cld    
  40a601:	sti    
  40a602:	daa    
  40a603:	sbb    DWORD PTR [edi+0x37c0de5],eax
  40a609:	mov    ecx,0xb667d1e2
  40a60e:	jg     0x40a5c4
  40a610:	test   BYTE PTR [esi],al
  40a612:	inc    edi
  40a613:	cwde   
  40a614:	mov    ebx,DWORD PTR [ecx+0x197d71a4]
  40a61a:	or     ch,BYTE PTR [eax-0x51]
  40a61d:	xchg   edx,eax
  40a61e:	pop    es
  40a61f:	cld    
  40a620:	les    ebp,FWORD PTR [esi]
  40a622:	fdiv   QWORD PTR [edi+0x67acdf3d]
  40a628:	mov    al,0xe2
  40a62a:	xchg   ebp,eax
  40a62b:	dec    ecx
  40a62c:	cmp    al,0xab
  40a62e:	cmp    edx,ebx
  40a630:	test   BYTE PTR [edx-0x57],dl
  40a633:	adc    cl,dh
  40a635:	xor    al,BYTE PTR ds:0xf1e58b6e
  40a63b:	mov    edi,0xa7463cb0
  40a640:	cmp    BYTE PTR [edi+0x2a192dd7],bh
  40a646:	inc    edx
  40a647:	aaa    
  40a648:	sub    edi,esi
  40a64a:	(bad)  
  40a64b:	xchg   ebp,eax
  40a64c:	cmp    ah,ch
  40a64e:	retf   0xe818
  40a651:	push   DWORD PTR [edx+eiz*8]
  40a654:	int    0xd8
  40a656:	call   0x4305e782
  40a65b:	jns    0x40a684
  40a65d:	retf   
  40a65e:	inc    edx
  40a65f:	xchg   ebx,eax
  40a660:	jno    0x40a677
  40a662:	sub    eax,0x2c4f0780
  40a667:	mov    bl,0xc4
  40a669:	dec    esi
  40a66a:	jge    0x40a697
  40a66c:	into   
  40a66d:	aas    
  40a66e:	loop   0x40a643
  40a670:	xchg   ebx,eax
  40a671:	xchg   ebx,eax
  40a672:	jns    0x40a65f
  40a674:	xor    ch,dh
  40a676:	les    edi,FWORD PTR [esi+0x4c]
  40a679:	lea    esi,[ebx]
  40a67b:	inc    ebp
  40a67c:	jp     0x40a623
  40a67e:	out    0x96,eax
  40a680:	pop    eax
  40a681:	lock sub DWORD PTR [eax+ebx*2+0x1c1a3d8c],0x41869b44
  40a68d:	adc    BYTE PTR [ebp-0x3a],bh
  40a690:	loope  0x40a67a
  40a692:	addr16 (bad) 
  40a694:	(bad)  
  40a695:	mov    ebp,0x3086dc97
  40a69a:	aam    0x68
  40a69c:	adc    al,0x53
  40a69e:	lods   al,BYTE PTR ds:[esi]
  40a69f:	sbb    BYTE PTR [edx+0x7a],0xa9
  40a6a3:	push   ss
  40a6a4:	inc    esp
  40a6a5:	(bad)  
  40a6a6:	jecxz  0x40a6b7
  40a6a8:	add    BYTE PTR [eax-0x2d],ch
  40a6ab:	lods   eax,DWORD PTR ds:[esi]
  40a6ac:	jecxz  0x40a72d
  40a6ae:	test   eax,0xba788375
  40a6b3:	mov    ch,0xe6
  40a6b5:	arpl   WORD PTR [edx],si
  40a6b7:	xor    DWORD PTR [ecx+eiz*8+0x3],ebx
  40a6bb:	add    eax,0x6daed7a6
  40a6c0:	mov    ds:0xe5b9dc07,al
  40a6c5:	hlt    
  40a6c6:	rep outs dx,DWORD PTR ds:[esi]
  40a6c8:	test   al,0xe4
  40a6ca:	sahf   
  40a6cb:	and    eax,0xc4d98592
  40a6d0:	push   ss
  40a6d1:	xchg   ecx,eax
  40a6d2:	test   BYTE PTR [edi+0x254f8448],ah
  40a6d8:	int    0x1d
  40a6da:	mov    bh,0xb9
  40a6dc:	cld    
  40a6dd:	(bad)  
  40a6de:	out    dx,eax
  40a6df:	add    esi,DWORD PTR [edx]
  40a6e1:	jg     0x40a668
  40a6e3:	push   es
  40a6e4:	test   ecx,esp
  40a6e6:	sbb    DWORD PTR [edx-0x6b],0x24d96664
  40a6ed:	pop    ecx
  40a6ee:	js     0x40a67f
  40a6f0:	push   edi
  40a6f1:	push   es
  40a6f2:	or     eax,0x7497ea40
  40a6f7:	in     al,0x66
  40a6f9:	mov    esp,0x983b0aaa
  40a6fe:	(bad)  
  40a6ff:	and    eax,0xa79fa311
  40a704:	shl    BYTE PTR es:0x9da685c4,cl
  40a70b:	(bad)  
  40a70c:	fsub   DWORD PTR [edi-0xcdded8c]
  40a712:	sar    DWORD PTR [ecx],1
  40a714:	pushf  
  40a715:	popf   
  40a716:	xchg   esi,eax
  40a717:	jge    0x40a743
  40a719:	out    0x95,al
  40a71b:	cmp    DWORD PTR cs:[esi+ebp*2-0xf36dc44],esp
  40a723:	not    edx
  40a725:	mov    eax,fs
  40a727:	into   
  40a728:	enter  0xeeb6,0x93
  40a72c:	mov    edi,0xb85aed9b
  40a731:	ret    0xcf50
  40a734:	dec    ebx
  40a735:	ins    DWORD PTR es:[edi],dx
  40a736:	add    al,0xca
  40a738:	call   0x94f7:0xa6dd654d
  40a73f:	xor    ebx,DWORD PTR [esi-0x7bf8616f]
  40a745:	(bad)  
  40a746:	(bad)  
  40a747:	cld    
  40a748:	dec    eax
  40a749:	ficomp DWORD PTR [ebx+ebp*8-0x5ff2da16]
  40a750:	pop    edx
  40a751:	cs cwde 
  40a753:	inc    DWORD PTR [esi-0x21]
  40a756:	adc    esi,DWORD PTR ds:0x66b1bdd0
  40a75c:	cs ret 0xd5c6
  40a760:	int3   
  40a761:	mov    ah,0x11
  40a763:	lahf   
  40a764:	pop    eax
  40a765:	imul   ebx,DWORD PTR ds:0xf616,0x9b51a28e
  40a76e:	dec    BYTE PTR [ebp-0x39]
  40a771:	retf   0x3abd
  40a774:	outs   dx,DWORD PTR ds:[esi]
  40a775:	inc    eax
  40a776:	adc    al,0xaa
  40a778:	scas   eax,DWORD PTR es:[edi]
  40a779:	pushf  
  40a77a:	pop    edx
  40a77b:	xchg   edi,eax
  40a77c:	add    BYTE PTR [ecx+0x65f341e9],bh
  40a782:	xchg   ebx,eax
  40a783:	and    DWORD PTR [ebx-0x3f1bc5f8],esi
  40a789:	add    eax,0x319c81f8
  40a78e:	fimul  WORD PTR ds:0xc3115b24
  40a794:	pop    eax
  40a795:	mov    bh,0x84
  40a797:	outs   dx,DWORD PTR ds:[esi]
  40a798:	js     0x40a767
  40a79a:	dec    esp
  40a79b:	mov    cs,WORD PTR [edi]
  40a79d:	or     dl,BYTE PTR [esi-0xf]
  40a7a0:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40a7a2:	cmp    BYTE PTR [esi+0x1bffc510],ah
  40a7a8:	jge    0x40a7ae
  40a7aa:	cld    
  40a7ab:	and    DWORD PTR [ebx+0x382971b6],edi
  40a7b1:	cdq    
  40a7b2:	mov    esp,0x911be3c5
  40a7b7:	sbb    eax,0xd125954d
  40a7bc:	outs   dx,DWORD PTR ds:[esi]
  40a7bd:	jb     0x40a7b8
  40a7bf:	retf   
  40a7c0:	scas   eax,DWORD PTR es:[edi]
  40a7c1:	xor    al,0xf2
  40a7c3:	out    0x9a,eax
  40a7c5:	shr    DWORD PTR ds:0x667718d9,cl
  40a7cb:	arpl   WORD PTR [ebx+0x3814fb1b],si
  40a7d1:	and    DWORD PTR [ebp-0x186c8560],edx
  40a7d7:	mov    eax,ds:0xf8277aa1
  40a7dc:	outs   dx,BYTE PTR ds:[esi]
  40a7dd:	call   0xbe2c68d9
  40a7e2:	addr16 and edi,0xb3f64ceb
  40a7e9:	ja     0x40a847
  40a7eb:	or     BYTE PTR [edi],0xbd
  40a7ee:	dec    esi
  40a7ef:	mov    dl,0x6a
  40a7f1:	in     eax,0x53
  40a7f3:	pop    eax
  40a7f4:	(bad)  
  40a7f5:	ds sbb esp,ebx
  40a7f8:	xor    BYTE PTR [edi],ch
  40a7fa:	sar    ch,0xf2
  40a7fd:	(bad)  
  40a7fe:	loopne 0x40a87c
  40a800:	add    eax,0xd963ce9e
  40a805:	les    ecx,FWORD PTR [esi-0x30]
  40a808:	mov    ds:0x64e124ea,al
  40a80d:	and    al,0xaa
  40a80f:	add    al,0x7f
  40a811:	or     al,0xea
  40a813:	mov    edi,0xbc2a51d1
  40a818:	inc    ebx
  40a819:	add    eax,0xb78afc6f
  40a81e:	jno    0x40a859
  40a820:	test   al,0x1e
  40a822:	retf   
  40a823:	gs jne 0x40a84e
  40a826:	div    bl
  40a828:	xor    DWORD PTR [ebx+0x9],0x12
  40a82c:	cs leave 
  40a82e:	stos   BYTE PTR es:[edi],al
  40a82f:	retf   0x62ed
  40a832:	xchg   al,dh
  40a834:	dec    ebp
  40a835:	sbb    ch,BYTE PTR [eax-0x2ebab82d]
  40a83b:	jmp    0xa000:0x904d6713
  40a842:	jmp    0x4e96:0xd52c0bda
  40a849:	pushf  
  40a84a:	in     al,dx
  40a84b:	lods   al,BYTE PTR cs:[esi]
  40a84d:	(bad)  
  40a84e:	scas   eax,DWORD PTR es:[edi]
  40a84f:	inc    esp
  40a850:	inc    esp
  40a851:	in     al,0x8
  40a853:	cwde   
  40a854:	mov    WORD PTR [edi-0x74],gs
  40a857:	fs sbb bh,bl
  40a85a:	push   ebp
  40a85b:	and    al,0x35
  40a85d:	push   edi
  40a85e:	lods   al,BYTE PTR ds:[esi]
  40a85f:	shl    BYTE PTR [esi-0x364885cd],0xbc
  40a866:	mov    ecx,0xcdf5f99f
  40a86b:	loope  0x40a842
  40a86d:	dec    edx
  40a86e:	pop    edi
  40a86f:	div    DWORD PTR ds:0x3d396f6f
  40a875:	push   ss
  40a876:	dec    ebx
  40a877:	and    DWORD PTR [ebp-0x4060f455],edi
  40a87d:	pusha  
  40a87e:	rcl    BYTE PTR [eax+0x38],cl
  40a881:	frstor [eax+eiz*8-0x1d]
  40a885:	test   BYTE PTR [ebp+0x7fbb9ba6],al
  40a88b:	dec    ebx
  40a88c:	out    0x54,eax
  40a88e:	clc    
  40a88f:	or     al,ch
  40a891:	retf   
  40a892:	cmp    al,0x16
  40a894:	scas   eax,DWORD PTR es:[edi]
  40a895:	push   eax
  40a896:	push   ss
  40a897:	or     BYTE PTR [ebx-0x7f],bl
  40a89a:	lahf   
  40a89b:	ja     0x40a8e5
  40a89d:	repnz in eax,dx
  40a89f:	mov    dl,dh
  40a8a1:	pop    esi
  40a8a2:	int    0x2f
  40a8a4:	imul   edx,edx,0xffffff9c
  40a8a7:	sbb    esi,DWORD PTR ss:[edx+0x1d76b182]
  40a8ae:	push   ss
  40a8af:	mov    cl,0xf0
  40a8b1:	fst    DWORD PTR [ebx-0x6f]
  40a8b4:	pop    ecx
  40a8b5:	mov    ebp,0x32a80fdb
  40a8ba:	nop
  40a8bb:	ror    DWORD PTR [ebp-0x1b],0xec
  40a8bf:	ret    
  40a8c0:	jns    0x40a8b9
  40a8c2:	lods   al,BYTE PTR ds:[esi]
  40a8c3:	or     eax,ebp
  40a8c5:	nop
  40a8c6:	mov    ecx,DWORD PTR [edx+ebp*4+0x4f6e1617]
  40a8cd:	add    dh,BYTE PTR [esi-0x3e2bf074]
  40a8d3:	xchg   esi,eax
  40a8d4:	ja     0x40a92c
  40a8d6:	rcl    BYTE PTR fs:[ebx+eax*2],cl
  40a8da:	adc    WORD PTR es:[ebx-0x586060a3],di
  40a8e2:	mov    eax,ds:0xc20fd5c9
  40a8e7:	dec    ecx
  40a8e8:	in     al,0xd2
  40a8ea:	add    BYTE PTR [ecx-0x44fbc6a5],dh
  40a8f0:	jmp    0x6b4b:0xe8cb246c
  40a8f7:	lds    edx,FWORD PTR [ecx+0x3a]
  40a8fa:	stos   BYTE PTR es:[edi],al
  40a8fb:	mov    WORD PTR [ebx-0x7a343eb0],ss
  40a901:	add    bh,bh
  40a903:	dec    esi
  40a904:	pop    ebp
  40a905:	ret    0x12b3
  40a908:	adc    al,0xfb
  40a90a:	xor    DWORD PTR [edx+0x6b],0x763a711f
  40a911:	mov    al,0x2b
  40a913:	daa    
  40a914:	leave  
  40a915:	or     BYTE PTR [ebx-0x42511c96],al
  40a91b:	inc    edx
  40a91c:	jno    0x40a8f7
  40a91e:	mov    ebx,0x322166ec
  40a923:	out    0xdf,eax
  40a925:	pop    ecx
  40a926:	push   esp
  40a927:	add    BYTE PTR [esi+0x1e],0x49
  40a92b:	mov    ds:0xcd60b096,eax
  40a930:	sbb    ebp,ecx
  40a932:	int    0x1f
  40a934:	sub    eax,0x3710558d
  40a939:	sub    eax,0xc167de06
  40a93e:	(bad)  
  40a93f:	jbe    0x40a952
  40a941:	push   0x698b9f24
  40a946:	adc    ecx,DWORD PTR [eax+0x71578f74]
  40a94c:	pop    edi
  40a94d:	mov    ecx,0xd3ec1c98
  40a952:	inc    ecx
  40a953:	ja     0x40a9cf
  40a955:	pop    es
  40a956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a957:	mov    ah,0xf5
  40a959:	inc    edi
  40a95a:	jecxz  0x40a9be
  40a95c:	dec    esi
  40a95d:	pop    esp
  40a95e:	ror    DWORD PTR [edi+0x42dfcb3c],0x90
  40a965:	mov    cl,0xc6
  40a967:	scas   eax,DWORD PTR es:[edi]
  40a968:	adc    al,0xfc
  40a96a:	mov    edi,0x20a6991c
  40a96f:	imul   BYTE PTR [edi-0x65]
  40a972:	out    dx,eax
  40a973:	aam    0x78
  40a975:	jmp    0x40a9af
  40a977:	sub    DWORD PTR [edx-0x2d],ecx
  40a97a:	mov    al,0x16
  40a97c:	mov    al,ds:0xea3218b9
  40a981:	cmp    edi,DWORD PTR [ebx+0x51438ad]
  40a987:	inc    edi
  40a988:	data16 (bad) 
  40a98a:	mov    cl,BYTE PTR ds:0xf8dc5cff
  40a990:	inc    edi
  40a991:	inc    ebp
  40a992:	xor    BYTE PTR [ebx],bl
  40a994:	jge    0x40a996
  40a996:	or     al,0x70
  40a998:	mov    dh,0xe4
  40a99a:	sbb    bh,ah
  40a99c:	pop    edi
  40a99d:	add    DWORD PTR [esi-0x22],edi
  40a9a0:	adc    al,0xe2
  40a9a2:	mov    ch,0xcb
  40a9a4:	sahf   
  40a9a5:	fmul   QWORD PTR [edx+0x1523f956]
  40a9ab:	lods   eax,DWORD PTR ds:[esi]
  40a9ac:	call   0x671e:0xa3a83cfd
  40a9b3:	xor    BYTE PTR [bx-0x7cd],ch
  40a9b8:	test   al,0x96
  40a9ba:	retf   
  40a9bb:	adc    ebp,DWORD PTR [ecx]
  40a9bd:	js     0x40aa04
  40a9bf:	add    ecx,DWORD PTR [edi+0x5efbe463]
  40a9c5:	cmc    
  40a9c6:	dec    ecx
  40a9c7:	fiadd  WORD PTR [ecx+0x78]
  40a9ca:	inc    ebx
  40a9cb:	dec    esp
  40a9cc:	sahf   
  40a9cd:	adc    eax,0x3a687a5c
  40a9d2:	add    dh,BYTE PTR [ecx-0x4a]
  40a9d5:	xchg   ecx,eax
  40a9d6:	(bad)  
  40a9d8:	icebp  
  40a9d9:	aam    0x98
  40a9db:	cli    
  40a9dc:	jnp    0x40a994
  40a9de:	in     eax,0x6e
  40a9e0:	xchg   edi,eax
  40a9e1:	imul   ecx,ebp,0xd51be13
  40a9e7:	jmp    ebp
  40a9e9:	push   0xffffff9a
  40a9eb:	into   
  40a9ec:	sub    DWORD PTR [ecx+0x31efd25],esi
  40a9f2:	popa   
  40a9f3:	adc    DWORD PTR [edx],eax
  40a9f5:	outs   dx,BYTE PTR ds:[esi]
  40a9f6:	xor    eax,0x9f2a3538
  40a9fb:	lahf   
  40a9fc:	in     al,0x1e
  40a9fe:	and    al,BYTE PTR [edx]
  40aa00:	(bad)  
  40aa02:	loop   0x40a9c5
  40aa04:	sbb    BYTE PTR [edi+esi*2-0x2],ah
  40aa08:	outs   dx,BYTE PTR ds:[esi]
  40aa09:	ret    0xf609
  40aa0c:	xchg   DWORD PTR [ebp+0x12764be9],edi
  40aa12:	pop    esi
  40aa13:	cs pop ebp
  40aa15:	pop    eax
  40aa16:	ja     0x40a9a9
  40aa18:	lods   eax,DWORD PTR ds:[esi]
  40aa19:	dec    edx
  40aa1a:	(bad)
  40aa1d:	cmp    dh,dh
  40aa1f:	pop    ds
  40aa20:	push   ds
  40aa21:	(bad)  
  40aa23:	imul   cx,cx,0x65
  40aa27:	mov    bl,dh
  40aa29:	pop    ebp
  40aa2a:	push   eax
  40aa2b:	sbb    al,0xb6
  40aa2d:	shld   DWORD PTR [ebp-0x6a],edx,cl
  40aa31:	or     DWORD PTR [edi+0x7],ebp
  40aa34:	call   0xab3:0x495f7582
  40aa3b:	jbe    0x40aabb
  40aa3d:	lahf   
  40aa3e:	icebp  
  40aa3f:	dec    edx
  40aa40:	cli    
  40aa41:	sub    edx,DWORD PTR [esi-0x441f4307]
  40aa47:	mov    WORD PTR [eax+edi*1+0x2f],ds
  40aa4b:	scas   al,BYTE PTR es:[edi]
  40aa4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa4d:	xchg   ebp,eax
  40aa4e:	out    dx,ax
  40aa50:	mov    cl,0xcb
  40aa52:	add    ch,cl
  40aa54:	imul   ecx,DWORD PTR [ecx],0x389944e3
  40aa5a:	xlat   BYTE PTR ds:[ebx]
  40aa5b:	pushf  
  40aa5c:	inc    ebx
  40aa5d:	sbb    DWORD PTR [ecx+0x71802d92],ebp
  40aa63:	les    esp,FWORD PTR [esi-0x3afe5192]
  40aa69:	jmp    0x40aa9a
  40aa6b:	nop
  40aa6c:	clc    
  40aa6d:	ins    DWORD PTR es:[edi],dx
  40aa6e:	gs clc 
  40aa70:	fwait
  40aa71:	jg     0x40aa43
  40aa73:	adc    BYTE PTR [ebx],ah
  40aa75:	push   eax
  40aa76:	and    eax,DWORD PTR [edx+0x23b0f45a]
  40aa7c:	fdiv   DWORD PTR [edi-0x77609ad7]
  40aa82:	mov    ch,0xb8
  40aa84:	lods   al,BYTE PTR ds:[esi]
  40aa85:	test   al,0xe7
  40aa87:	outs   dx,DWORD PTR ds:[esi]
  40aa88:	inc    ecx
  40aa89:	nop
  40aa8a:	mov    esi,0x2cbc3983
  40aa90:	sbb    DWORD PTR [ebx+0x2ff8e50b],edi
  40aa96:	jecxz  0x40aa95
  40aa98:	sbb    DWORD PTR [esi-0x41],esp
  40aa9b:	jns    0x40aa43
  40aa9d:	mov    al,0x0
  40aa9f:	adc    al,0x57
  40aaa1:	mov    ebx,DWORD PTR ds:0x6bc0fd70
  40aaa7:	pop    edi
  40aaa8:	scas   eax,DWORD PTR es:[edi]
  40aaa9:	fwait
  40aaaa:	jmp    0xa1c41eb0
  40aaaf:	out    dx,eax
  40aab0:	loope  0x40aaad
  40aab2:	adc    DWORD PTR [ebx+ecx*4],ecx
  40aab5:	xor    cl,BYTE PTR [ecx-0x69]
  40aab8:	add    BYTE PTR [edi-0x4a767031],dl
  40aabe:	int    0xc
  40aac0:	xchg   edi,eax
  40aac1:	dec    esi
  40aac2:	adc    eax,0xd6f7eae0
  40aac7:	ret    0x558d
  40aaca:	setns  BYTE PTR [eax+0x3897f3a8]
  40aad1:	and    al,0xef
  40aad3:	fild   QWORD PTR [edx]
  40aad5:	push   ecx
  40aad6:	mov    ?,esp
  40aad8:	not    bh
  40aada:	pop    edx
  40aadb:	mov    ch,BYTE PTR [esi-0xabd2b83]
  40aae1:	loope  0x40ab18
  40aae3:	div    BYTE PTR [ebx]
  40aae5:	ja     0x40aa9a
  40aae7:	push   ebp
  40aae8:	jmp    0x8b86:0x272ba388
  40aaef:	call   0xdb6ff2dd
  40aaf4:	inc    edx
  40aaf5:	sub    ebx,eax
  40aaf7:	call   0xfb4c:0x29694618
  40aafe:	rcr    BYTE PTR [ebp-0x2ee59a63],0x82
  40ab05:	into   
  40ab06:	pop    ebp
  40ab07:	xor    esp,eax
  40ab09:	mov    eax,ds:0xa6ad03bd
  40ab0e:	push   edx
  40ab0f:	push   edx
  40ab10:	cmp    BYTE PTR [ebx+0x548b2650],bl
  40ab16:	mov    ebp,0xab8d533
  40ab1b:	mov    BYTE PTR fs:[ecx-0x527cac8c],dh
  40ab22:	arpl   di,sp
  40ab24:	out    0x4e,al
  40ab26:	cmp    dh,BYTE PTR [ebx-0x27a044d4]
  40ab2c:	mov    bl,0xbe
  40ab2e:	push   ebx
  40ab2f:	sti    
  40ab30:	ret    0xdc76
  40ab33:	ins    BYTE PTR es:[edi],dx
  40ab34:	fwait
  40ab35:	test   eax,0x648ecf95
  40ab3a:	shl    BYTE PTR [esi],1
  40ab3c:	je     0x40aae6
  40ab3e:	xor    edx,DWORD PTR [esi]
  40ab40:	add    al,0x19
  40ab42:	push   ebp
  40ab43:	jo     0x40aafc
  40ab45:	dec    ecx
  40ab46:	jnp    0x40aad4
  40ab48:	jns    0x40abb0
  40ab4a:	mov    WORD PTR [ecx+0x16935576],ss
  40ab50:	inc    edi
  40ab51:	push   edi
  40ab52:	pop    ss
  40ab53:	in     al,dx
  40ab54:	push   esi
  40ab55:	(bad)  
  40ab56:	(bad)  
  40ab57:	in     eax,dx
  40ab58:	in     al,0x17
  40ab5a:	push   ds
  40ab5b:	dec    edx
  40ab5c:	test   DWORD PTR ds:0x8d80f8c2,esi
  40ab62:	ins    DWORD PTR es:[edi],dx
  40ab63:	aad    0x79
  40ab65:	ret    
  40ab66:	lahf   
  40ab67:	outs   dx,BYTE PTR ds:[esi]
  40ab68:	jns    0x40abc3
  40ab6a:	adc    al,0x7a
  40ab6c:	imul   ebp,DWORD PTR [eax+0x532750],0xffffffd6
  40ab73:	inc    eax
  40ab74:	lock int3 
  40ab76:	lds    edx,FWORD PTR [ebx+0x493c3ac0]
  40ab7c:	add    eax,0x1700e838
  40ab81:	mov    ecx,0x209a7916
  40ab86:	jno    0x40ab81
  40ab88:	xchg   ebp,eax
  40ab89:	pop    edx
  40ab8b:	outs   dx,BYTE PTR ds:[esi]
  40ab8c:	xlat   BYTE PTR ds:[ebx]
  40ab8d:	jae    0x40abc4
  40ab8f:	ret    
  40ab90:	das    
  40ab91:	(bad)  
  40ab92:	je     0x40ab70
  40ab94:	es add edi,0xd
  40ab98:	rcl    BYTE PTR [edx],0x94
  40ab9b:	mov    esp,DWORD PTR [ecx-0xd]
  40ab9e:	arpl   bp,ax
  40aba0:	add    esi,DWORD PTR [edi+0x6c]
  40aba3:	out    0x1a,al
  40aba5:	sub    al,BYTE PTR [edi]
  40aba7:	sti    
  40aba8:	xchg   edx,eax
  40aba9:	int    0x26
  40abab:	xor    edi,edx
  40abad:	call   0x696b:0x8834157a
  40abb4:	out    0x6,al
  40abb6:	arpl   WORD PTR [esi+ecx*8+0x5ba00dbc],di
  40abbd:	loop   0x40ab91
  40abbf:	lock cmp al,0x8e
  40abc2:	imul   BYTE PTR [edi]
  40abc4:	add    DWORD PTR [edx+0x58b86ca1],edx
  40abca:	imul   ebp,ebx,0xa24bdf05
  40abd0:	dec    eax
  40abd1:	sub    ah,BYTE PTR [eax+0x64]
  40abd4:	pop    edi
  40abd5:	inc    ecx
  40abd6:	pushf  
  40abd7:	add    DWORD PTR [edx+0x64a5272b],edi
  40abdd:	mov    ds,WORD PTR [eax+0x5ea9ab39]
  40abe3:	or     ebp,ebx
  40abe5:	fcmovbe st,st(7)
  40abe7:	imul   ecx,ebp,0xa444d460
  40abed:	(bad)  
  40abee:	mov    dl,0x3a
  40abf0:	mov    ebp,0x2e06204c
  40abf5:	sahf   
  40abf6:	gs pop edi
  40abf8:	aaa    
  40abf9:	or     BYTE PTR [ebp-0x77dfe3af],ah
  40abff:	stos   DWORD PTR es:[edi],eax
  40ac00:	ret    0xcf9
  40ac03:	(bad)  
  40ac04:	in     eax,dx
  40ac05:	jno    0x40ac33
  40ac07:	stos   DWORD PTR es:[edi],eax
  40ac08:	shr    DWORD PTR [ebx+0x1c],0xd6
  40ac0c:	fwait
  40ac0d:	push   ebp
  40ac0e:	aaa    
  40ac0f:	enter  0x3123,0xea
  40ac13:	outs   dx,DWORD PTR ds:[esi]
  40ac14:	jge    0x40ac42
  40ac16:	sti    
  40ac17:	sub    DWORD PTR [ecx],ebp
  40ac19:	jmp    0x40abb9
  40ac1b:	mov    edx,0x72ff444f
  40ac20:	ins    BYTE PTR es:[edi],dx
  40ac21:	lock cmc 
  40ac23:	dec    ebx
  40ac24:	lods   al,BYTE PTR ds:[esi]
  40ac25:	call   0xb451:0x693bea41
  40ac2c:	rol    ebp,1
  40ac2e:	fmul   st(6),st
  40ac30:	mov    ds,WORD PTR [ebx-0x6512c3f]
  40ac36:	call   0x337fa9ac
  40ac3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac3c:	daa    
  40ac3d:	shl    ah,cl
  40ac3f:	mov    ds:0xd0bbc9af,eax
  40ac44:	sbb    edi,DWORD PTR [edx]
  40ac46:	lea    edx,[ecx+0x25]
  40ac49:	cmp    ah,dh
  40ac4b:	retf   0xfd3a
  40ac4e:	(bad)  
  40ac4f:	xor    ecx,DWORD PTR [eax+0x217ca652]
  40ac55:	jae    0x40ac70
  40ac57:	and    dh,bl
  40ac59:	out    dx,al
  40ac5a:	out    0x1e,al
  40ac5c:	dec    edx
  40ac5d:	jo     0x40ac6d
  40ac5f:	dec    ecx
  40ac60:	and    al,0x21
  40ac62:	pop    es
  40ac63:	out    0xb0,al
  40ac65:	leave  
  40ac66:	addr16 push eax
  40ac68:	jnp    0x40acaa
  40ac6a:	jne    0x40acc1
  40ac6c:	lds    edi,FWORD PTR [ecx]
  40ac6e:	mov    ecx,0x4c8c2798
  40ac73:	fbstp  TBYTE PTR ds:0x2c88720d
  40ac79:	outs   dx,BYTE PTR ds:[esi]
  40ac7a:	cmp    ch,BYTE PTR [edi]
  40ac7c:	or     eax,DWORD PTR [edx-0x2ba4f786]
  40ac82:	or     DWORD PTR [ebp-0x23811a1a],esi
  40ac88:	pop    ebp
  40ac89:	or     DWORD PTR [eax],ebp
  40ac8b:	lock jp 0x40aca4
  40ac8e:	adc    dl,ch
  40ac90:	ss cmp al,0xc2
  40ac93:	cmp    al,0x0
  40ac95:	sbb    al,0x9
  40ac97:	ret    
  40ac98:	stc    
  40ac99:	mov    ah,0x4b
  40ac9b:	xchg   ecx,eax
  40ac9c:	fwait
  40ac9d:	bound  eax,QWORD PTR [edi]
  40ac9f:	pop    ds
  40aca0:	cld    
  40aca1:	outs   dx,DWORD PTR ds:[esi]
  40aca2:	push   edi
  40aca3:	rol    DWORD PTR [ecx+0x7e],1
  40aca6:	and    al,0x13
  40aca8:	and    DWORD PTR [eax],eax
  40acaa:	gs mov dh,0x81
  40acad:	test   al,0xd0
  40acaf:	sub    al,0xb2
  40acb1:	call   0x4b13:0x552b4336
  40acb8:	ss jno 0x40acb5
  40acbb:	mov    ah,0x8a
  40acbd:	fcmovb st,st(2)
  40acbf:	and    al,0x8c
  40acc1:	push   ebp
  40acc2:	xor    eax,0xc26ad41d
  40acc7:	add    DWORD PTR [eax-0x38],0x98fa0b23
  40acce:	mov    al,ds:0x7b33157
  40acd3:	dec    esi
  40acd4:	mov    esi,0x6a249b0d
  40acd9:	mov    edi,esp
  40acdb:	into   
  40acdc:	mov    cs,WORD PTR ds:[eax-0x3144fb9d]
  40ace3:	dec    ecx
  40ace4:	out    0x6c,al
  40ace6:	inc    esp
  40ace7:	test   eax,0xff04a05a
  40acec:	addr16 hlt 
  40acee:	cld    
  40acef:	inc    edx
  40acf0:	enter  0x6147,0x5
  40acf4:	mov    bh,0x2d
  40acf6:	sub    al,0x73
  40acf8:	loope  0x40ad70
  40acfa:	push   0x42
  40acfc:	jnp    0x40ad05
  40acfe:	adc    al,0x6e
  40ad00:	ins    BYTE PTR es:[edi],dx
  40ad01:	enter  0x75aa,0xb4
  40ad05:	out    0x2c,eax
  40ad07:	in     eax,dx
  40ad08:	mov    bh,0x89
  40ad0a:	add    dh,dh
  40ad0c:	and    al,0x43
  40ad0e:	push   0x67
  40ad10:	ret    
  40ad11:	sbb    BYTE PTR [edi+0xc],ch
  40ad14:	mov    ebp,0xd141a0fb
  40ad19:	adc    al,0x62
  40ad1b:	cld    
  40ad1c:	jge    0x40acb8
  40ad1e:	imul   edi,DWORD PTR [ebx],0x2d
  40ad21:	(bad)  
  40ad22:	pop    eax
  40ad23:	adc    al,0xc3
  40ad25:	adc    eax,0xf0abf65
  40ad2a:	lock cmp eax,0xf6b35292
  40ad30:	les    eax,FWORD PTR [edi]
  40ad32:	adc    esp,DWORD PTR [eax+eiz*1]
  40ad35:	adc    dh,bh
  40ad37:	lds    ebx,FWORD PTR [eax]
  40ad39:	sub    al,0xf5
  40ad3b:	and    eax,0xf4842db2
  40ad40:	retf   0xe082
  40ad43:	cmp    dl,BYTE PTR [edi+0x3e1e8c0f]
  40ad49:	sub    dh,dh
  40ad4b:	clc    
  40ad4c:	ficom  DWORD PTR [eax+0xe]
  40ad4f:	jb     0x40ad5a
  40ad51:	bound  ebx,QWORD PTR [edi+0x28]
  40ad54:	adc    al,0x63
  40ad56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad57:	and    eax,0xdf51d92b
  40ad5c:	or     edx,DWORD PTR [ecx]
  40ad5e:	pop    ebx
  40ad5f:	add    edi,DWORD PTR [eax]
  40ad61:	xor    ecx,eax
  40ad63:	mov    ebx,esi
  40ad65:	lahf   
  40ad66:	xchg   ebx,eax
  40ad67:	ss push eax
  40ad69:	addr16 mov edi,0x28a2aae
  40ad70:	cmc    
  40ad71:	mov    esp,0x64c1ce6a
  40ad76:	mov    cs,esp
  40ad78:	imul   BYTE PTR [ecx-0x60b49e68]
  40ad7e:	add    eax,0xd0c39200
  40ad83:	fdiv   QWORD PTR [edx-0x6c]
  40ad86:	jge    0x40add6
  40ad88:	das    
  40ad89:	retf   
  40ad8a:	cmp    BYTE PTR ds:0xb82930c3,dh
  40ad90:	inc    ebp
  40ad91:	dec    ebp
  40ad92:	sbb    edi,eax
  40ad94:	(bad)  
  40ad95:	in     eax,dx
  40ad96:	or     eax,0xd5f7a852
  40ad9b:	dec    edx
  40ad9c:	je     0x40ad73
  40ad9e:	xlat   BYTE PTR ds:[ebx]
  40ad9f:	sub    ebp,DWORD PTR [edx]
  40ada1:	loope  0x40addb
  40ada3:	pop    edi
  40ada4:	fisubr WORD PTR [edi+0x1505e2a3]
  40adaa:	sbb    eax,0x8df30c2c
  40adaf:	cmp    eax,0x6e24b08
  40adb4:	push   cs
  40adb5:	push   ebx
  40adb6:	xchg   esi,eax
  40adb7:	adc    ebp,DWORD PTR [esi]
  40adb9:	add    ecx,esp
  40adbb:	add    eax,0x377bfb92
  40adc0:	inc    eax
  40adc1:	pop    edi
  40adc2:	xor    DWORD PTR [ebx],edx
  40adc4:	sahf   
  40adc5:	stos   BYTE PTR es:[edi],al
  40adc6:	inc    esi
  40adc7:	push   ss
  40adc8:	jmp    0x9186:0x3fe48e26
  40adcf:	add    DWORD PTR [edx-0x6f53c82f],ecx
  40add5:	sbb    eax,0xf1c1c880
  40adda:	lods   al,BYTE PTR ds:[esi]
  40addb:	and    al,0xef
  40addd:	(bad)  
  40adde:	imul   esi,DWORD PTR [ebp-0x55d61b97],0x3ab489dc
  40ade8:	xor    BYTE PTR [edi+esi*4+0x28],dh
  40adec:	cmp    BYTE PTR [ebx],al
  40adee:	mov    al,0xc
  40adf0:	dec    eax
  40adf1:	push   ebp
  40adf2:	stc    
  40adf3:	(bad)  
  40adf5:	in     eax,dx
  40adf6:	mov    DWORD PTR [edx-0x7ba0189f],eax
  40adfc:	inc    ecx
  40adfd:	push   cs
  40adfe:	outs   dx,BYTE PTR ds:[esi]
  40adff:	rcl    dl,cl
  40ae01:	lods   al,BYTE PTR ds:[esi]
  40ae02:	cli    
  40ae03:	cmp    cl,BYTE PTR ds:0x8572d80f
  40ae09:	cli    
  40ae0a:	shr    DWORD PTR [edx],cl
  40ae0c:	sub    DWORD PTR [ecx+eax*1-0x66],0xffffffb5
  40ae11:	add    ebp,esp
  40ae13:	jle    0x40ae34
  40ae15:	jo     0x40ae09
  40ae17:	xor    ebx,DWORD PTR [esi-0x49ba405a]
  40ae1d:	jmp    0x40ae72
  40ae1f:	(bad)
  40ae22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae23:	sub    al,BYTE PTR [ecx]
  40ae25:	ins    BYTE PTR es:[edi],dx
  40ae26:	jg     0x40adb6
  40ae28:	mov    eax,0xae115a73
  40ae2d:	scas   eax,DWORD PTR es:[edi]
  40ae2e:	mov    edx,DWORD PTR [eax-0x7f]
  40ae31:	mov    esp,0xb686f079
  40ae36:	fwait
  40ae37:	sbb    ebp,esi
  40ae39:	mov    eax,ds:0x7797f846
  40ae3e:	xchg   edx,eax
  40ae3f:	loop   0x40ae51
  40ae41:	ja     0x40ae7f
  40ae43:	add    DWORD PTR [edx+ebp*2],0xffffffbc
  40ae47:	and    edx,DWORD PTR [eax]
  40ae49:	cld    
  40ae4a:	ret    0x54fa
  40ae4d:	in     eax,dx
  40ae4e:	data16 adc BYTE PTR [ebx-0x4f0ad7a5],dh
  40ae55:	adc    al,0xf4
  40ae57:	xor    eax,0x44517c44
  40ae5c:	call   FWORD PTR [edx+0x7c]
  40ae5f:	pushf  
  40ae60:	and    eax,0x468dc0c9
  40ae65:	scas   eax,DWORD PTR es:[edi]
  40ae66:	add    eax,0x3171a851
  40ae6b:	adc    DWORD PTR [edx-0x63],ebp
  40ae6e:	shl    BYTE PTR [edx],0x96
  40ae71:	pop    es
  40ae72:	dec    edi
  40ae73:	ins    DWORD PTR es:[edi],dx
  40ae74:	dec    esi
  40ae75:	cmp    ah,dh
  40ae77:	jnp    0x40aecd
  40ae79:	in     al,0x52
  40ae7b:	ja     0x40ae5c
  40ae7d:	jns    0x40ae97
  40ae7f:	mov    cs,eax
  40ae81:	jbe    0x40ae44
  40ae83:	retf   0x87eb
  40ae86:	xchg   ebx,eax
  40ae87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae88:	ror    ecx,0x19
  40ae8b:	stos   BYTE PTR es:[edi],al
  40ae8c:	(bad)  
  40ae8d:	dec    ebx
  40ae8e:	out    0x9,eax
  40ae90:	xor    eax,0x2e801952
  40ae95:	mov    esp,0xaa92b60
  40ae9a:	cli    
  40ae9b:	mov    bl,BYTE PTR [edx-0x80a91b7]
  40aea1:	jmp    0x97a7:0xcaf0511
  40aea8:	stos   BYTE PTR es:[edi],al
  40aea9:	shl    dh,1
  40aeab:	pop    esi
  40aeac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aead:	in     eax,dx
  40aeae:	xor    al,0x8
  40aeb0:	push   ss
  40aeb1:	test   DWORD PTR [edx+0x10],esi
  40aeb4:	xchg   BYTE PTR [esi+0x36],ch
  40aeb7:	lds    esp,FWORD PTR [ebp-0x1e68c062]
  40aebd:	fisubr WORD PTR [ebx]
  40aebf:	sbb    ebp,DWORD PTR [edi-0x6b]
  40aec2:	add    DWORD PTR [ecx-0x79],0xd484a845
  40aec9:	pop    ebx
  40aeca:	aad    0x51
  40aecc:	jle    0x40aeb5
  40aece:	dec    ebx
  40aecf:	jmp    0x40aec2
  40aed1:	mov    al,ds:0x15162e06
  40aed6:	add    DWORD PTR [edx+0x6a35a580],0x66aa31da
  40aee0:	in     eax,0x48
  40aee2:	js     0x40aeac
  40aee4:	jae    0x40aefd
  40aee6:	mov    ds:0xda0fa2ef,eax
  40aeeb:	dec    edi
  40aeec:	jmp    0x5ad06e9c
  40aef1:	outs   dx,DWORD PTR ds:[esi]
  40aef2:	outs   dx,BYTE PTR ds:[esi]
  40aef3:	fnstenv [edx+0x0]
  40aef6:	or     BYTE PTR [esi],0xe1
  40aef9:	dec    edi
  40aefa:	popf   
  40aefb:	or     DWORD PTR [edx-0x7eadca50],ecx
  40af01:	jp     0x40af65
  40af03:	gs (bad) 
  40af05:	mov    esi,0xbf0c332a
  40af0a:	jo     0x40af5f
  40af0c:	mov    dl,BYTE PTR [esi]
  40af0e:	div    BYTE PTR [ebp+0x17885d12]
  40af14:	div    BYTE PTR [esi]
  40af16:	jns    0x40aecd
  40af18:	popf   
  40af19:	pop    eax
  40af1a:	ss push esp
  40af1c:	es jmp 0x40af34
  40af1f:	js     0x40aef2
  40af21:	aas    
  40af22:	sbb    bl,bh
  40af24:	repz mov eax,ds:0xf3277668
  40af2a:	cmp    DWORD PTR [edi],edx
  40af2c:	push   edi
  40af2d:	out    0xd4,eax
  40af2f:	jecxz  0x40af1b
  40af31:	add    bl,BYTE PTR [ebp+0x11]
  40af34:	(bad)  
  40af35:	cmp    ah,bh
  40af37:	call   0x836cc497
  40af3c:	jbe    0x40af3b
  40af3e:	fdiv   st,st(5)
  40af40:	pusha  
  40af41:	cdq    
  40af42:	inc    edx
  40af43:	mov    esp,0xd2424626
  40af48:	std    
  40af49:	mov    ds:0x6572ef04,al
  40af4e:	mov    bl,0xb
  40af50:	js     0x40afaa
  40af52:	dec    dx
  40af54:	test   DWORD PTR [eax+edx*1],ebp
  40af57:	addr16 das 
  40af59:	add    esp,edx
  40af5b:	and    edi,ebx
  40af5d:	xchg   edx,eax
  40af5e:	sbb    al,0xf2
  40af60:	popa   
  40af61:	out    0x12,eax
  40af63:	mov    bl,0xca
  40af65:	adc    eax,edi
  40af67:	fiadd  DWORD PTR [esi+0x61]
  40af6a:	jg     0x40af2c
  40af6c:	retf   
  40af6d:	dec    edx
  40af6e:	ss push ebx
  40af70:	jmp    0xf5c5:0xe841a2d0
  40af77:	xor    eax,0x2e129d9c
  40af7c:	lods   al,BYTE PTR ds:[esi]
  40af7d:	out    dx,al
  40af7e:	out    dx,eax
  40af7f:	icebp  
  40af80:	jbe    0x40afe0
  40af82:	cld    
  40af83:	sbb    dl,BYTE PTR [esi-0x2d]
  40af86:	add    eax,0x4ef2a265
  40af8b:	dec    esi
  40af8c:	inc    ecx
  40af8d:	ins    DWORD PTR es:[edi],dx
  40af8e:	xor    bh,dl
  40af90:	ins    DWORD PTR es:[edi],dx
  40af91:	sub    al,BYTE PTR [eax+0x30b8e5cf]
  40af97:	dec    edi
  40af98:	jb     0x40af1b
  40af9a:	popf   
  40af9b:	iret   
  40af9c:	push   ds
  40af9d:	dec    eax
  40af9e:	hlt    
  40af9f:	inc    edi
  40afa0:	and    cl,cl
  40afa2:	pop    ds
  40afa3:	push   edx
  40afa4:	loopne 0x40afe0
  40afa6:	fdiv   DWORD PTR [ecx]
  40afa8:	iret   
  40afa9:	cli    
  40afaa:	mov    DWORD PTR [eax+0x3d067928],edx
  40afb0:	cld    
  40afb1:	sbb    DWORD PTR [edi+0x2c05ed2e],0x25bac001
  40afbb:	into   
  40afbc:	inc    edx
  40afbd:	bound  esi,QWORD PTR ds:0x828199ed
  40afc3:	jmp    0x40afcb
  40afc5:	ret    
  40afc6:	cli    
  40afc7:	lods   eax,DWORD PTR ds:[esi]
  40afc8:	outs   dx,DWORD PTR ds:[esi]
  40afc9:	fs or  al,al
  40afcc:	div    BYTE PTR [ecx+0x1c]
  40afcf:	inc    ebp
  40afd0:	and    DWORD PTR [edx],eax
  40afd2:	lahf   
  40afd3:	(bad)  
  40afd4:	jbe    0x40afb2
  40afd6:	xchg   ebp,eax
  40afd7:	or     cl,bl
  40afd9:	xchg   ebp,eax
  40afda:	lods   al,BYTE PTR ds:[esi]
  40afdb:	or     DWORD PTR [edi+0x58],esi
  40afde:	mov    dh,0x1c
  40afe0:	mov    ebp,0x185a4d97
  40afe5:	sar    BYTE PTR [edi+0x31],cl
  40afe8:	cwde   
  40afe9:	jo     0x40af7e
  40afeb:	jne    0x40b048
  40afed:	mov    ch,0x57
  40afef:	pop    edx
  40aff0:	jbe    0x40af7b
  40aff2:	or     BYTE PTR [eax-0x14c4b02a],cl
  40aff8:	imul   edi,DWORD PTR [eax],0x25
  40affb:	pop    ebp
  40affc:	dec    esi
  40affd:	dec    eax
  40affe:	cld    
  40afff:	addr16 add al,0x25
  40b002:	aam    0xa9
  40b004:	fsubr  DWORD PTR [eax-0x77]
  40b007:	inc    esp
  40b008:	sub    ch,BYTE PTR [esi-0x36]
  40b00b:	xor    eax,0xc4e77266
  40b010:	out    dx,eax
  40b011:	sub    BYTE PTR [eax],bl
  40b013:	scas   eax,DWORD PTR es:[edi]
  40b014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b015:	mov    dl,0xcb
  40b017:	ins    BYTE PTR es:[edi],dx
  40b018:	das    
  40b019:	and    DWORD PTR [eax-0x343071b4],0x3c
  40b020:	imul   eax,edi,0x1faf9293
  40b026:	retf   
  40b027:	pop    esp
  40b028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b029:	dec    eax
  40b02a:	dec    esp
  40b02b:	jg     0x40aff2
  40b02d:	and    eax,DWORD PTR [ecx-0x1bd87a48]
  40b033:	cmp    cl,BYTE PTR [eax]
  40b035:	fist   WORD PTR [ecx+0x4a]
  40b038:	push   cs
  40b039:	xor    eax,0x7d9dc2ab
  40b03e:	in     al,0x65
  40b040:	adc    BYTE PTR [eax+0x3b],0x36
  40b044:	and    al,0xe6
  40b046:	dec    ebx
  40b047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b048:	jl     0x40b08d
  40b04a:	fisttp DWORD PTR [ebx+0x54b269e8]
  40b050:	inc    edx
  40b051:	rcr    DWORD PTR ds:0x76e3f729,1
  40b057:	scas   eax,DWORD PTR es:[edi]
  40b058:	push   cs
  40b059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b05a:	pmaddwd mm2,mm5
  40b05d:	sahf   
  40b05e:	fdivp  st(2),st
  40b060:	add    DWORD PTR [edx-0x32],edi
  40b063:	cwde   
  40b064:	es scas al,BYTE PTR es:[edi]
  40b066:	hlt    
  40b067:	sub    al,0x71
  40b069:	push   0xffffffab
  40b06b:	add    ebx,DWORD PTR [ebx]
  40b06d:	ds cli 
  40b06f:	cli    
  40b070:	mov    eax,0x4760c3d6
  40b075:	mov    ebp,0xdf2259ca
  40b07a:	enter  0x4997,0xb
  40b07e:	xchg   ebx,eax
  40b07f:	push   0xa2749cb6
  40b084:	fidivr WORD PTR [ebx]
  40b086:	lahf   
  40b087:	add    ecx,DWORD PTR fs:[esi+0x10924ce6]
  40b08e:	sub    ch,BYTE PTR [edi+0x42]
  40b091:	ret    0x80a9
  40b094:	jns    0x40b081
  40b096:	(bad)  
  40b098:	sahf   
  40b099:	mov    DWORD PTR [esi-0x2b],eax
  40b09c:	dec    esi
  40b09d:	dec    DWORD PTR [ebx+edx*8-0x16]
  40b0a1:	dec    ebp
  40b0a2:	and    DWORD PTR [edx],esp
  40b0a4:	push   esp
  40b0a5:	dec    esi
  40b0a6:	sti    
  40b0a7:	(bad)  
  40b0a8:	sbb    ch,al
  40b0aa:	call   0x621f:0x946851f4
  40b0b1:	mov    ebp,0x2f799dc0
  40b0b6:	or     BYTE PTR [ecx-0xa],bl
  40b0b9:	loop   0x40b092
  40b0bb:	nop
  40b0bc:	je     0x40b077
  40b0be:	ror    DWORD PTR [edi],cl
  40b0c0:	(bad)  
  40b0c1:	ja     0x40b0bf
  40b0c3:	and    bl,BYTE PTR [ebx+0x60fd7b6a]
  40b0c9:	xchg   cl,bl
  40b0cb:	aas    
  40b0cc:	ds push 0x36
  40b0cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0d0:	mov    ecx,0xf0796d9b
  40b0d5:	mov    ch,0xb0
  40b0d7:	cmp    edx,DWORD PTR [ecx-0x1aacad76]
  40b0dd:	xor    eax,0xa9e1a2e6
  40b0e2:	sbb    DWORD PTR [edi-0x271f160c],0xffffff98
  40b0e9:	rol    DWORD PTR [ebx+0x230e5af6],0xfa
  40b0f0:	or     eax,0xcf3937a0
  40b0f5:	pop    esp
  40b0f6:	jnp    0x40b118
  40b0f8:	hlt    
  40b0f9:	mov    BYTE PTR [edi],ch
  40b0fb:	and    al,0xa7
  40b0fd:	ss xchg edi,eax
  40b0ff:	mov    eax,0xfc3c3f14
  40b104:	stos   BYTE PTR es:[edi],al
  40b105:	mov    eax,0x28d66821
  40b10a:	int    0xc9
  40b10c:	fdiv   QWORD PTR [eax+0x6e]
  40b10f:	jno    0x40b091
  40b111:	lock pusha 
  40b113:	in     al,0x27
  40b115:	jmp    0x49a4:0x57124f00
  40b11c:	cmp    edx,esp
  40b11e:	jne    0x40b0fd
  40b120:	test   DWORD PTR [ebp*8+0x590a5dac],0x84b34840
  40b12b:	icebp  
  40b12c:	sub    DWORD PTR [ebp-0x62],edi
  40b12f:	ret    
  40b130:	mov    ah,0x8c
  40b132:	fmul   st,st(4)
  40b134:	ret    
  40b135:	and    eax,0x33f55ac9
  40b13a:	push   0xffffffe5
  40b13c:	nop
  40b13d:	cld    
  40b13e:	mov    ch,0xec
  40b140:	push   ebx
  40b141:	xchg   esp,eax
  40b142:	call   0x6b78:0x69c8d5a0
  40b149:	add    al,0xc9
  40b14b:	out    0x80,eax
  40b14d:	aad    0x60
  40b14f:	sbb    ecx,DWORD PTR [edx+0x7adeaff0]
  40b155:	mov    eax,ds:0x5040c08f
  40b15a:	int    0xe9
  40b15c:	fiadd  WORD PTR [bp+di]
  40b15f:	pop    ss
  40b160:	mov    ds:0x65c3c802,al
  40b165:	jmp    0x40b10e
  40b167:	ss pop esi
  40b169:	(bad)  
  40b16a:	retf   
  40b16b:	fs push cs
  40b16d:	aam    0xa5
  40b16f:	sar    BYTE PTR [ebx+0x3f],1
  40b172:	sub    al,0x2
  40b174:	push   esp
  40b175:	xlat   BYTE PTR ds:[ebx]
  40b176:	dec    edi
  40b177:	push   edi
  40b178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b179:	gs dec eax
  40b17b:	pop    ds
  40b17c:	xchg   BYTE PTR es:[ebx-0x7b],cl
  40b180:	jmp    0x40b127
  40b182:	xchg   ebx,eax
  40b183:	jae    0x40b191
  40b185:	sahf   
  40b186:	push   esi
  40b187:	add    eax,0x7f56f465
  40b18c:	inc    esi
  40b18d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b18e:	sbb    bl,al
  40b190:	ja     0x40b16c
  40b192:	jecxz  0x40b134
  40b194:	mov    cl,0x43
  40b196:	or     DWORD PTR [ecx-0x66],0x5b
  40b19a:	inc    eax
  40b19b:	pop    edi
  40b19c:	mov    eax,0x808377f6
  40b1a1:	stos   BYTE PTR es:[edi],al
  40b1a2:	call   0x5d22d45c
  40b1a7:	pop    eax
  40b1a8:	sbb    dh,BYTE PTR [esi-0x726df5fc]
  40b1ae:	(bad)  
  40b1af:	push   cs
  40b1b0:	adc    edi,DWORD PTR ds:[edx]
  40b1b3:	cmc    
  40b1b4:	loope  0x40b1c6
  40b1b6:	fiadd  WORD PTR [esi]
  40b1b8:	fwait
  40b1b9:	pusha  
  40b1ba:	push   eax
  40b1bb:	arpl   WORD PTR [edi-0x2caddf9a],bp
  40b1c1:	xchg   esp,eax
  40b1c2:	xchg   esi,eax
  40b1c3:	into   
  40b1c4:	or     al,0x97
  40b1c6:	inc    ebx
  40b1c7:	dec    ebp
  40b1c8:	jmp    0xd9be0216
  40b1cd:	cmp    BYTE PTR [edi-0x6],al
  40b1d0:	dec    edx
  40b1d1:	pop    esi
  40b1d2:	js     0x40b154
  40b1d4:	sbb    al,0xb1
  40b1d6:	in     al,0x7b
  40b1d8:	je     0x40b1a2
  40b1da:	fnstsw WORD PTR [ebx-0x4a]
  40b1dd:	cmp    eax,0xa0e37ba9
  40b1e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1e3:	jne    0x40b1c7
  40b1e5:	adc    DWORD PTR ds:0x3667,edx
  40b1ea:	fisttp QWORD PTR [eax]
  40b1ec:	stc    
  40b1ed:	pusha  
  40b1ee:	sub    eax,0xbc77e115
  40b1f3:	pop    ecx
  40b1f4:	adc    esi,esp
  40b1f6:	scas   eax,DWORD PTR es:[edi]
  40b1f7:	cmp    eax,0x5a4b15f2
  40b1fc:	bound  esi,QWORD PTR [esi]
  40b1fe:	mov    ebx,0x56cce8f9
  40b203:	pop    esi
  40b204:	sbb    al,0x4c
  40b206:	sbb    bh,0x2c
  40b209:	sub    BYTE PTR [eax+eax*1+0x18b60114],dh
  40b210:	test   DWORD PTR [eax-0x56],edx
  40b213:	cwde   
  40b214:	mov    esp,0x4bb5540b
  40b219:	jge    0x40b1b1
  40b21b:	and    eax,0x43ab660c
  40b220:	call   0x40478b13
  40b225:	jmp    0xce602245
  40b22a:	les    esi,FWORD PTR [edi+0xa]
  40b22d:	push   ecx
  40b22e:	push   ebp
  40b22f:	mov    ah,0xec
  40b231:	xchg   ecx,eax
  40b232:	mov    ds:0x7076a1bb,al
  40b237:	sub    DWORD PTR [edx+eax*8-0x53],edi
  40b23b:	jae    0x40b1dc
  40b23d:	sbb    DWORD PTR [esi],esi
  40b23f:	jmp    0x40b1dc
  40b241:	or     eax,0x53c02027
  40b246:	adc    BYTE PTR [esi+0x2e282eb0],bh
  40b24c:	dec    edx
  40b24d:	push   edx
  40b24e:	rol    BYTE PTR [esi+ebp*8],0x49
  40b252:	cmp    bl,BYTE PTR [eax+eax*8-0x3c]
  40b256:	cmp    al,0x66
  40b258:	cmp    BYTE PTR ds:0x4dbe2cc4,bh
  40b25e:	pop    edx
  40b25f:	call   0xfbe93a91
  40b264:	out    0x27,al
  40b266:	xchg   edi,eax
  40b267:	lds    ebx,FWORD PTR [edx-0xa]
  40b26a:	das    
  40b26b:	jbe    0x40b283
  40b26d:	gs stos DWORD PTR es:[edi],eax
  40b26f:	sub    al,0xcf
  40b271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b272:	sub    DWORD PTR [ebx+0x7119089f],esi
  40b278:	sub    al,0xcc
  40b27a:	mov    eax,0xae676fc6
  40b27f:	and    eax,0xf25d53
  40b284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b285:	jmp    DWORD PTR [eax-0x21]
  40b288:	or     dh,BYTE PTR [esi+0x25]
  40b28b:	stos   BYTE PTR es:[edi],al
  40b28c:	inc    ecx
  40b28d:	div    BYTE PTR [ecx-0x55]
  40b290:	pusha  
  40b291:	rcr    BYTE PTR [edi],0x4b
  40b294:	add    ah,BYTE PTR [eax]
  40b296:	jne    0x40b246
  40b298:	jne    0x40b2e2
  40b29a:	aad    0xa8
  40b29c:	fadd   st(0),st
  40b29e:	jmp    0x6af6:0xf612a683
  40b2a5:	mov    DWORD PTR [esi+0x49e3a93d],ebp
  40b2ab:	cmp    DWORD PTR [esi+0x72],ecx
  40b2ae:	xor    dh,bh
  40b2b0:	mov    esi,0xa369ada1
  40b2b5:	mov    bh,0x4
  40b2b7:	and    DWORD PTR [ebx],eax
  40b2b9:	dec    ebx
  40b2ba:	mov    ebx,0x3b8c0a4f
  40b2bf:	data16 out 0xcd,al
  40b2c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2c3:	xchg   ebp,eax
  40b2c4:	ficom  DWORD PTR [esi]
  40b2c6:	aas    
  40b2c7:	lock pop ds
  40b2c9:	(bad)  
  40b2ca:	shr    BYTE PTR [edi-0x7b],cl
  40b2cd:	out    dx,al
  40b2ce:	mov    eax,DWORD PTR [ebx]
  40b2d0:	xor    DWORD PTR ds:0x118aae05,esp
  40b2d6:	add    dl,dh
  40b2d8:	(bad)  
  40b2d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2da:	lock dec esp
  40b2dc:	add    eax,0x8d1f28e5
  40b2e1:	cmp    BYTE PTR [esi+0x56],al
  40b2e4:	stc    
  40b2e5:	push   es
  40b2e6:	jbe    0x40b2b4
  40b2e8:	std    
  40b2e9:	sub    DWORD PTR [edi-0x6c],ebp
  40b2ec:	jbe    0x40b2af
  40b2ee:	fsub   st(4),st
  40b2f0:	ficomp WORD PTR [ebx-0x20]
  40b2f3:	and    ch,ch
  40b2f5:	add    al,0x86
  40b2f7:	loop   0x40b290
  40b2f9:	sub    eax,0xf79722b1
  40b2fe:	rol    DWORD PTR [ebx-0x7b],1
  40b301:	inc    esi
  40b302:	je     0x40b2db
  40b304:	fs aaa 
  40b306:	pop    ds
  40b307:	sub    cl,BYTE PTR [eax-0x78dddd29]
  40b30d:	(bad)  
  40b30e:	pop    esp
  40b30f:	ja     0x40b337
  40b311:	mov    edi,0x3aea9795
  40b316:	call   0x592f:0x93387990
  40b31d:	aaa    
  40b31e:	jg     0x40b33c
  40b320:	adc    al,0x2a
  40b322:	ror    ch,cl
  40b324:	enter  0x805e,0x96
  40b328:	enter  0x7355,0xa6
  40b32c:	int3   
  40b32d:	mov    WORD PTR [ebx-0x32aff4cf],ss
  40b333:	loope  0x40b309
  40b335:	mov    dh,0xa3
  40b337:	sbb    DWORD PTR [ebx-0x616dc3e0],ecx
  40b33d:	add    BYTE PTR [esi-0x176cff31],0xcd
  40b344:	in     al,dx
  40b345:	mov    ss,WORD PTR [eax+0x10]
  40b348:	push   edx
  40b349:	inc    edx
  40b34a:	adc    ebx,ecx
  40b34c:	out    dx,al
  40b34d:	dec    edi
  40b34e:	out    dx,eax
  40b34f:	adc    al,BYTE PTR [ebx+0xdb51220]
  40b355:	push   0x62cedf6
  40b35a:	push   0xb0f9e3f1
  40b35f:	mov    esp,0x3c05150e
  40b364:	in     al,dx
  40b365:	in     al,0x8a
  40b367:	stos   DWORD PTR es:[edi],eax
  40b368:	dec    DWORD PTR [eax+0x2f9b70dc]
  40b36e:	mov    edx,0xd1beae8b
  40b373:	lea    esp,[edx-0x22]
  40b376:	sub    BYTE PTR [edx],bl
  40b378:	stos   DWORD PTR es:[edi],eax
  40b379:	test   BYTE PTR [ecx+0x3d7501af],dh
  40b37f:	adc    DWORD PTR [eax+0x1c5aff3e],ecx
  40b385:	mov    bl,0x69
  40b387:	test   BYTE PTR [ecx+0x7b],ah
  40b38a:	js     0x40b3b4
  40b38c:	ret    0x941d
  40b38f:	retf   0x2661
  40b392:	adc    eax,0x5d97da29
  40b397:	or     eax,0x44b6681e
  40b39c:	ret    0xbb4e
  40b39f:	aas    
  40b3a0:	and    eax,0x71f0c3e5
  40b3a5:	mov    eax,eax
  40b3a7:	xor    BYTE PTR [eax],al
  40b3a9:	dec    esi
  40b3aa:	jmp    0x40b35e
  40b3ac:	and    ecx,DWORD PTR [esi-0x50fd2d44]
  40b3b2:	(bad)  
  40b3b3:	inc    eax
  40b3b4:	add    edi,edx
  40b3b6:	cmp    eax,0xf50ecf29
  40b3bb:	sub    BYTE PTR [ecx-0x5df7533d],dl
  40b3c1:	inc    ebp
  40b3c2:	pop    ecx
  40b3c3:	repz into 
  40b3c5:	out    0xac,al
  40b3c7:	mov    dh,BYTE PTR [esi]
  40b3c9:	sahf   
  40b3ca:	out    dx,eax
  40b3cb:	pop    edi
  40b3cc:	enter  0x8c10,0x4d
  40b3d0:	in     al,dx
  40b3d1:	push   ss
  40b3d2:	sub    bh,BYTE PTR [ecx+0x4b]
  40b3d5:	out    0x2c,eax
  40b3d7:	out    dx,eax
  40b3d8:	sahf   
  40b3d9:	xor    cl,BYTE PTR [edi]
  40b3db:	dec    eax
  40b3dc:	push   es
  40b3dd:	dec    edx
  40b3de:	xchg   edx,eax
  40b3df:	outs   dx,DWORD PTR ds:[esi]
  40b3e0:	shl    BYTE PTR [esi+edx*8],1
  40b3e3:	mov    esp,0x724cd48c
  40b3e8:	xchg   esp,eax
  40b3e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3ea:	mov    esp,0xe1f1b50b
  40b3ef:	loopne 0x40b3ef
  40b3f1:	call   FWORD PTR [edx+0xd]
  40b3f4:	inc    eax
  40b3f5:	rcr    BYTE PTR [ebp-0x5d],1
  40b3f8:	jmp    0xe503:0x153129b1
  40b3ff:	adc    edi,0x4c52a398
  40b405:	fwait
  40b406:	dec    edi
  40b407:	imul   ebp,DWORD PTR [ecx+0x1b0cba50],0x452065f2
  40b411:	mov    bl,0x3
  40b413:	fadd   DWORD PTR [eax-0x7c]
  40b416:	adc    BYTE PTR ss:[ebp-0x4c],0x2b
  40b41b:	mov    DWORD PTR [ecx+0x49],ebx
  40b41e:	test   al,0x12
  40b420:	jge    0x40b47c
  40b422:	dec    ecx
  40b423:	inc    ebp
  40b424:	int    0x4b
  40b426:	inc    esi
  40b427:	mov    bh,0x58
  40b429:	imul   esp,DWORD PTR [edx+0x58],0x10aaf56a
  40b430:	mov    ds,WORD PTR [esi+0x60]
  40b433:	sbb    DWORD PTR gs:[esi-0x13ebc958],ebp
  40b43a:	and    BYTE PTR [ecx],cl
  40b43c:	cmp    BYTE PTR [esi-0x3546fb6e],ch
  40b442:	push   edx
  40b443:	aaa    
  40b444:	sbb    cl,BYTE PTR [ebx+0x67]
  40b447:	jb     0x40b486
  40b449:	xchg   edi,eax
  40b44a:	test   ecx,0xf26b6b19
  40b450:	and    edi,DWORD PTR ds:0x88054c0
  40b456:	mov    dh,0x8
  40b458:	js     0x40b4b0
  40b45a:	add    DWORD PTR [eax+ebx*2],edx
  40b45d:	pop    ss
  40b45e:	adc    DWORD PTR [esi],ecx
  40b460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b461:	xlat   BYTE PTR ds:[ebx]
  40b462:	stos   DWORD PTR es:[edi],eax
  40b463:	jnp    0x40b4b9
  40b465:	sbb    eax,0xfbe38a95
  40b46a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b46b:	sub    al,0x1e
  40b46d:	sar    DWORD PTR [edx-0x5c522f93],1
  40b473:	outs   dx,BYTE PTR ds:[esi]
  40b474:	sbb    eax,DWORD PTR [edx]
  40b476:	adc    BYTE PTR [edi-0x9705d8],bl
  40b47c:	or     eax,0x233ebbad
  40b481:	int    0x1f
  40b483:	xchg   BYTE PTR [eax],ah
  40b485:	or     eax,ecx
  40b487:	leave  
  40b488:	int    0x45
  40b48a:	clc    
  40b48b:	push   ss
  40b48c:	add    BYTE PTR [esi],cl
  40b48e:	mov    BYTE PTR [edx],ah
  40b490:	dec    ebp
  40b491:	add    edx,DWORD PTR [edi+0x57d4c6c2]
  40b497:	std    
  40b498:	jae    0x40b4c0
  40b49a:	lock adc ecx,DWORD PTR [esi]
  40b49d:	or     ebx,edx
  40b49f:	stc    
  40b4a0:	mov    ch,0x46
  40b4a2:	push   edx
  40b4a3:	bswap  ebx
  40b4a5:	gs sbb eax,0x6a33cff1
  40b4ab:	push   edi
  40b4ac:	shl    DWORD PTR [esi-0x19],0x32
  40b4b0:	add    bh,BYTE PTR [ebp+0x269d7cda]
  40b4b6:	loope  0x40b51e
  40b4b8:	(bad)  
  40b4b9:	push   ss
  40b4ba:	repz (bad) 
  40b4bc:	outs   dx,BYTE PTR ds:[esi]
  40b4bd:	mov    WORD PTR [edx],ds
  40b4bf:	mov    bl,ch
  40b4c1:	xchg   edi,eax
  40b4c2:	loope  0x40b455
  40b4c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4c5:	mov    ds:0x7b1920c6,al
  40b4ca:	push   0x364cc61c
  40b4cf:	enter  0xcbde,0x58
  40b4d3:	sbb    DWORD PTR [esi-0x7ef95716],ebp
  40b4d9:	stos   DWORD PTR es:[edi],eax
  40b4da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4db:	inc    esp
  40b4dc:	and    eax,0x39f4c592
  40b4e1:	popa   
  40b4e2:	adc    dh,cl
  40b4e4:	jbe    0x40b4b3
  40b4e6:	pop    ebx
  40b4e7:	dec    esp
  40b4e8:	xchg   esp,eax
  40b4e9:	enter  0x5a70,0xda
  40b4ed:	scas   eax,DWORD PTR es:[edi]
  40b4ee:	xchg   edx,eax
  40b4ef:	and    eax,0x7c1d2d19
  40b4f4:	xor    al,0xdf
  40b4f6:	js     0x40b569
  40b4f8:	xchg   DWORD PTR [esi+0x5c],eax
  40b4fb:	shl    BYTE PTR [esi-0x5f],cl
  40b4fe:	loop   0x40b4db
  40b500:	fistp  QWORD PTR ds:0x798696d8
  40b506:	stc    
  40b507:	and    eax,0x7e8acac9
  40b50c:	add    eax,0xe3f56a9f
  40b511:	lods   al,BYTE PTR ds:[esi]
  40b512:	ret    0xb642
  40b515:	add    DWORD PTR [eax+0x48d9ef86],ebx
  40b51b:	add    ecx,ebx
  40b51d:	adc    al,0xc4
  40b51f:	push   ss
  40b520:	test   DWORD PTR [edx+0x6b],0x1f4821
  40b527:	outs   dx,BYTE PTR ds:[esi]
  40b528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b529:	clc    
  40b52a:	stos   BYTE PTR es:[edi],al
  40b52b:	and    ah,BYTE PTR [esi-0x3d]
  40b52e:	mov    edx,0xf24f803c
  40b533:	dec    esi
  40b534:	jmp    0xb4dd:0xe099f7f2
  40b53b:	mov    al,ds:0x9e40861c
  40b540:	std    
  40b541:	add    dh,0x71
  40b544:	aas    
  40b545:	dec    ebp
  40b546:	adc    DWORD PTR [ebx],eax
  40b548:	add    cl,al
  40b54a:	dec    edx
  40b54b:	out    0x20,eax
  40b54d:	jbe    0x40b5ae
  40b54f:	sbb    al,0x60
  40b551:	lods   eax,DWORD PTR ds:[esi]
  40b552:	leave  
  40b553:	lahf   
  40b554:	sbb    DWORD PTR [ebx],esi
  40b556:	dec    eax
  40b557:	sub    DWORD PTR [ebx+0x586711f8],edi
  40b55d:	imul   DWORD PTR [ecx]
  40b55f:	(bad)  
  40b561:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b562:	loope  0x40b55a
  40b564:	xchg   DWORD PTR [ebp+0x6c81d0aa],ecx
  40b56a:	lods   al,BYTE PTR ds:[esi]
  40b56b:	stos   DWORD PTR es:[edi],eax
  40b56c:	xchg   ebx,eax
  40b56d:	std    
  40b56e:	jmp    0xe5701c73
  40b573:	adc    BYTE PTR [esi-0x2f],0x52
  40b577:	outs   dx,BYTE PTR ds:[esi]
  40b578:	add    BYTE PTR [ebx],cl
  40b57a:	push   ss
  40b57b:	inc    ecx
  40b57c:	sbb    ecx,esp
  40b57e:	dec    edx
  40b57f:	push   0xa9c3e976
  40b584:	xor    eax,0x89acae5a
  40b589:	dec    ecx
  40b58a:	out    dx,al
  40b58b:	mov    edx,0xf324b938
  40b590:	sub    esi,DWORD PTR [eax]
  40b592:	and    ebx,esi
  40b594:	fcomp  DWORD PTR [edi-0x6a]
  40b597:	scas   eax,DWORD PTR es:[edi]
  40b598:	jne    0x40b5c0
  40b59a:	gs pop es
  40b59c:	int    0xc9
  40b59e:	sbb    esi,DWORD PTR [ebx+0x77]
  40b5a1:	(bad)  
  40b5a2:	aaa    
  40b5a3:	cdq    
  40b5a4:	sahf   
  40b5a5:	push   eax
  40b5a6:	cmp    eax,0xb5aa43e0
  40b5ab:	dec    ebp
  40b5ac:	pushf  
  40b5ad:	push   ds
  40b5ae:	sbb    BYTE PTR [eax*8-0x10efdbb0],dh
  40b5b5:	dec    esp
  40b5b6:	push   ss
  40b5b7:	sub    ah,0x47
  40b5ba:	pop    eax
  40b5bb:	ins    BYTE PTR es:[edi],dx
  40b5bc:	shl    DWORD PTR [ebx],cl
  40b5be:	gs jge 0x40b54b
  40b5c1:	mov    cl,0x94
  40b5c3:	jns    0x40b58a
  40b5c5:	bound  edi,QWORD PTR [ebx+ebx*2-0x4f35263a]
  40b5cc:	jb     0x40b5ef
  40b5ce:	mov    ch,0x1a
  40b5d0:	imul   DWORD PTR [ebx+eiz*4+0x41]
  40b5d4:	test   DWORD PTR [edi],ebp
  40b5d6:	jno    0x40b636
  40b5d8:	xor    DWORD PTR [esi-0x65aa93b4],edx
  40b5de:	push   edi
  40b5df:	sub    BYTE PTR [edi],bl
  40b5e1:	pop    eax
  40b5e2:	repnz addr16 jmp 0x4480:0x362ab382
  40b5eb:	mov    al,0xdf
  40b5ed:	sub    BYTE PTR [ecx+0x6c8776b5],ch
  40b5f3:	mov    dh,0x13
  40b5f5:	or     ebx,esi
  40b5f7:	loope  0x40b598
  40b5f9:	add    DWORD PTR [ecx+ebx*4],ecx
  40b5fc:	mov    BYTE PTR [edi-0x2a],dl
  40b5ff:	jnp    0x40b67c
  40b601:	inc    eax
  40b602:	ins    DWORD PTR es:[edi],dx
  40b603:	ret    0xbcff
  40b606:	push   ds
  40b607:	ja     0x40b61d
  40b609:	pop    es
  40b60a:	std    
  40b60b:	add    al,ch
  40b60d:	les    edx,FWORD PTR [eax+edi*1]
  40b610:	push   0xffffff8b
  40b612:	jmp    0x40b5f2
  40b614:	fcmovnb st,st(3)
  40b616:	mov    bh,0x3b
  40b618:	add    BYTE PTR [esi+0x22],cl
  40b61b:	iret   
  40b61c:	cmp    edi,DWORD PTR [ebp-0x5f]
  40b61f:	in     eax,dx
  40b620:	jle    0x40b64b
  40b622:	sub    DWORD PTR [eax-0x64],esp
  40b625:	mov    edx,DWORD PTR [ebp+eax*2-0x6f9286b4]
  40b62c:	xchg   ebx,eax
  40b62d:	(bad)  
  40b62e:	xor    bl,dh
  40b630:	mov    ds:0xd65efe91,eax
  40b635:	xor    bl,cl
  40b637:	inc    ebx
  40b638:	jo     0x40b631
  40b63a:	xchg   esp,eax
  40b63b:	jg     0x40b627
  40b63d:	ror    edi,1
  40b63f:	(bad)  
  40b640:	xlat   BYTE PTR ds:[ebx]
  40b641:	mov    esp,0xf744bd33
  40b646:	(bad)  
  40b647:	push   ss
  40b648:	daa    
  40b649:	out    0x32,eax
  40b64b:	pop    ecx
  40b64c:	sub    ah,BYTE PTR [ecx+0x75]
  40b64f:	xchg   DWORD PTR [eax+ebx*1+0x676a525],eax
  40b656:	clc    
  40b657:	mov    ch,0x1f
  40b659:	into   
  40b65a:	sub    DWORD PTR [edx-0x2a],edi
  40b65d:	enter  0x2da,0xc1
  40b661:	not    cl
  40b663:	jl     0x40b638
  40b665:	pop    ds
  40b666:	cmp    eax,0xd3121858
  40b66b:	xchg   edx,eax
  40b66c:	dec    BYTE PTR [esp+esi*1]
  40b66f:	ins    BYTE PTR es:[edi],dx
  40b670:	dec    esi
  40b671:	push   edx
  40b672:	fld    QWORD PTR [ebp+0x7cb51f66]
  40b678:	mov    al,0x94
  40b67a:	and    al,BYTE PTR [ebx-0x32]
  40b67d:	addr16 ss inc ebx
  40b680:	push   esi
  40b681:	gs hlt 
  40b683:	popa   
  40b684:	jge    0x40b6fd
  40b686:	mov    ecx,0x39c409a6
  40b68b:	gs popf 
  40b68d:	pop    ds
  40b68e:	jmp    0x28e8:0xfae1aa98
  40b695:	mov    bh,0xdf
  40b697:	add    bh,BYTE PTR [edx+0x1]
  40b69a:	into   
  40b69b:	adc    BYTE PTR [esi],bl
  40b69d:	dec    esi
  40b69e:	mov    ebp,0x61beb7b8
  40b6a3:	mov    esi,DWORD PTR ds:0x43fcb7b6
  40b6a9:	in     al,0xd1
  40b6ab:	jo     0x40b635
  40b6ad:	jnp    0x40b705
  40b6af:	jbe    0x40b650
  40b6b1:	shl    DWORD PTR [edi],1
  40b6b3:	xchg   sp,ax
  40b6b5:	xor    esi,esi
  40b6b7:	push   0x7d
  40b6b9:	inc    ecx
  40b6ba:	call   0xefe60d0
  40b6bf:	sahf   
  40b6c0:	xchg   DWORD PTR [ebp-0x30b740bc],esi
  40b6c6:	xor    BYTE PTR [ebp+0xa],al
  40b6c9:	fstp   QWORD PTR [edi]
  40b6cb:	je     0x40b672
  40b6cd:	je     0x40b74c
  40b6cf:	mov    edi,db2
  40b6d2:	sahf   
  40b6d3:	pop    ebp
  40b6d4:	inc    ebp
  40b6d5:	mov    dh,0xd7
  40b6d7:	mov    dh,0xbf
  40b6d9:	xor    al,bl
  40b6db:	fadd   st(5),st
  40b6dd:	push   eax
  40b6de:	add    al,0xf8
  40b6e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6e1:	data16 lods al,BYTE PTR ds:[esi]
  40b6e3:	cld    
  40b6e4:	(bad)  [esi]
  40b6e6:	adc    BYTE PTR [ebx-0x61],dl
  40b6e9:	jecxz  0x40b6a9
  40b6eb:	jns    0x40b72d
  40b6ed:	push   0x45eaeb33
  40b6f2:	fnstenv ds:0x61760469
  40b6f8:	(bad)  
  40b6fb:	jge    0x40b699
  40b6fd:	jbe    0x40b6c9
  40b6ff:	icebp  
  40b700:	add    eax,0x6e60f1e7
  40b705:	div    BYTE PTR [edx+0xf539837]
  40b70b:	pop    edx
  40b70c:	(bad)  
  40b70d:	mov    esi,0x3ff814a4
  40b712:	push   edx
  40b713:	ds jne 0x40b727
  40b716:	and    ecx,DWORD PTR [ebx+0x4e]
  40b719:	call   0xc8c7:0xf33f9a80
  40b720:	jne    0x40b70c
  40b722:	fdivp  st(1),st
  40b724:	sub    dl,al
  40b726:	(bad)  
  40b727:	test   eax,0xfac60f06
  40b72c:	test   BYTE PTR [ebx+edi*1-0x48],bh
  40b730:	mov    fs:0xadbbad77,eax
  40b736:	fdiv   DWORD PTR [edx+0x2ae51225]
  40b73c:	jle    0x40b6ec
  40b73e:	data16 mov ds:0x5771b84b,al
  40b744:	and    cl,BYTE PTR [ebx+0x2666960c]
  40b74a:	ja     0x40b717
  40b74c:	pop    esi
  40b74d:	int    0x43
  40b74f:	push   eax
  40b750:	daa    
  40b751:	mov    esp,ecx
  40b753:	ficomp WORD PTR [edi-0x27]
  40b756:	or     BYTE PTR [ebx-0x69],dh
  40b759:	loopne 0x40b7d8
  40b75b:	dec    esp
  40b75c:	inc    ebx
  40b75d:	sbb    DWORD PTR [edx],ebp
  40b75f:	shl    BYTE PTR [eax],0x50
  40b762:	dec    ebx
  40b763:	xor    edx,DWORD PTR [ebx+0x63383c3d]
  40b769:	adc    BYTE PTR [edx-0x5aa450bb],ch
  40b76f:	xor    dl,BYTE PTR [ecx-0x1b]
  40b772:	xchg   ebx,eax
  40b773:	(bad)  
  40b774:	aam    0x88
  40b776:	and    al,0xf7
  40b778:	bound  edx,QWORD PTR [ecx+edx*4-0x80]
  40b77c:	pop    es
  40b77d:	sar    DWORD PTR [esi],0xbb
  40b780:	sub    dl,BYTE PTR [esi]
  40b782:	add    BYTE PTR [eax+0x70],0xa7
  40b786:	cld    
  40b787:	cmp    bl,BYTE PTR ds:0xc579f954
  40b78d:	mov    DWORD PTR [ebx],edi
  40b78f:	cmp    al,0x90
  40b791:	mul    BYTE PTR [esi+0x775cd53b]
  40b797:	inc    eax
  40b798:	and    al,al
  40b79a:	adc    al,0x34
  40b79c:	mov    edi,0x81c05d57
  40b7a1:	ret    
  40b7a2:	pop    edi
  40b7a3:	add    edi,DWORD PTR [edi-0x3f]
  40b7a6:	scas   al,BYTE PTR es:[edi]
  40b7a7:	push   0x6dca85e4
  40b7ac:	xor    al,0xff
  40b7ae:	mov    ah,0xe0
  40b7b0:	fcomp  DWORD PTR [ecx+ebx*1]
  40b7b3:	mov    al,0xa4
  40b7b5:	jnp    0x40b7ee
  40b7b7:	sbb    esp,DWORD PTR [esi]
  40b7b9:	sti    
  40b7ba:	mov    dl,0x66
  40b7bc:	mov    edi,0x7317825
  40b7c1:	mov    ch,0x50
  40b7c3:	fsubrp st(3),st
  40b7c5:	push   edx
  40b7c6:	repz clc 
  40b7c8:	pop    esp
  40b7c9:	push   cs
  40b7ca:	aaa    
  40b7cb:	push   eax
  40b7cc:	adc    eax,0x3ab62d79
  40b7d1:	jae    0x40b832
  40b7d3:	ret    0xec20
  40b7d6:	mov    ds:0xe9660315,eax
  40b7db:	fcom   DWORD PTR [bp+di+0x6184]
  40b7e0:	sar    BYTE PTR [ebx],cl
  40b7e2:	aaa    
  40b7e3:	je     0x40b7f3
  40b7e5:	(bad)  
  40b7e7:	xchg   esi,eax
  40b7e8:	dec    ebp
  40b7e9:	mul    DWORD PTR [esi-0x6c]
  40b7ec:	stos   DWORD PTR es:[edi],eax
  40b7ed:	sub    ch,BYTE PTR es:[eax]
  40b7f0:	stos   BYTE PTR es:[edi],al
  40b7f1:	addr16 ffreep st(7)
  40b7f4:	mov    ds:0x4ae07df1,eax
  40b7f9:	push   ebp
  40b7fa:	fld    DWORD PTR [ecx+0x70]
  40b7fd:	dec    esi
  40b7fe:	loop   0x40b87e
  40b800:	in     eax,0xed
  40b802:	jp     0x40b815
  40b804:	dec    ebx
  40b805:	jg     0x40b7c4
  40b807:	fisubr DWORD PTR [eax-0x62]
  40b80a:	std    
  40b80b:	add    ax,0x5f24
  40b80f:	cmp    al,0x96
  40b811:	mov    BYTE PTR [edx-0x57],ah
  40b814:	in     eax,0x6e
  40b816:	mov    ch,0x3b
  40b818:	fs adc esp,esi
  40b81b:	shl    DWORD PTR [esp+ebx*2-0x5a47222d],0x2c
  40b823:	cli    
  40b824:	mov    ecx,0x88265c1e
  40b829:	dec    eax
  40b82a:	add    al,0x92
  40b82c:	adc    eax,DWORD PTR [ebx+0xd7e9997]
  40b832:	stc    
  40b833:	pusha  
  40b834:	leave  
  40b835:	icebp  
  40b836:	pop    es
  40b837:	cld    
  40b838:	mov    al,0x1d
  40b83a:	dec    esi
  40b83b:	ins    BYTE PTR es:[edi],dx
  40b83c:	(bad)  
  40b83d:	sub    eax,0x1a567216
  40b842:	jg     0x40b815
  40b844:	dec    edx
  40b845:	mov    ebp,DWORD PTR [edx+0x3f]
  40b848:	lahf   
  40b849:	ror    DWORD PTR [ebp-0x34],1
  40b84c:	es out dx,al
  40b84e:	mov    eax,gs:0x3d83f2cb
  40b854:	mov    al,ds:0x557caa49
  40b859:	rol    DWORD PTR [ecx],cl
  40b85b:	leave  
  40b85c:	bound  edx,QWORD PTR [ecx]
  40b85e:	mov    ds:0xb6e63c4,eax
  40b863:	repz lds ebx,FWORD PTR [ebx]
  40b866:	inc    esi
  40b867:	inc    esp
  40b868:	jns    0x40b89d
  40b86a:	test   eax,0xd5f88272
  40b86f:	inc    esi
  40b870:	repnz push ebp
  40b872:	lods   al,BYTE PTR ds:[esi]
  40b873:	jns    0x40b8c6
  40b875:	xor    al,0x92
  40b877:	mov    ebp,0x6532e345
  40b87c:	push   esp
  40b87d:	sub    DWORD PTR [ecx],esp
  40b87f:	fild   QWORD PTR [ebx+ebp*4]
  40b882:	lds    ebp,FWORD PTR [ebx+0x2]
  40b885:	jge    0x40b89a
  40b887:	adc    eax,0x3e2965ed
  40b88c:	jo     0x40b845
  40b88e:	pop    esi
  40b88f:	in     eax,0xc8
  40b891:	into   
  40b892:	mov    eax,0x23517d9
  40b897:	loope  0x40b8cb
  40b899:	test   eax,0x2dcc1e4d
  40b89e:	mov    bh,0xf5
  40b8a0:	fwait
  40b8a1:	rol    DWORD PTR [esi-0x60],0x51
  40b8a5:	loop   0x40b870
  40b8a7:	aaa    
  40b8a8:	adc    ebp,DWORD PTR [eax]
  40b8aa:	cli    
  40b8ab:	cli    
  40b8ac:	xor    bh,BYTE PTR [ebx+ebp*2+0x51]
  40b8b0:	or     BYTE PTR [edi-0x58ba169b],0xf4
  40b8b7:	shr    DWORD PTR gs:[ecx+edx*8+0x2f],cl
  40b8bc:	jno    0x40b925
  40b8be:	or     dl,ah
  40b8c0:	cmp    BYTE PTR [edx+0x6c18e797],cl
  40b8c6:	ins    BYTE PTR es:[edi],dx
  40b8c7:	mov    ebx,0x89d2cfa1
  40b8cc:	lds    esp,FWORD PTR ds:[esi]
  40b8cf:	push   ds
  40b8d0:	pop    ds
  40b8d1:	sub    eax,DWORD PTR ds:0xccb0d23e
  40b8d7:	xchg   ebp,eax
  40b8d8:	into   
  40b8d9:	mov    eax,0x994dcc3a
  40b8de:	data16 loop 0x40b87d
  40b8e1:	cmp    ebx,DWORD PTR [ebx+0x1e]
  40b8e4:	imul   edx,DWORD PTR [eax-0x686a653d],0xb942307b
  40b8ee:	push   cs
  40b8ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8f0:	mov    bh,0xac
  40b8f2:	push   ds
  40b8f3:	xor    eax,0xe567fd93
  40b8f8:	pop    bp
  40b8fa:	repz pop ebp
  40b8fc:	jmp    0x40b8c3
  40b8fe:	enter  0xf82,0xb7
  40b902:	stos   DWORD PTR es:[edi],eax
  40b903:	pop    es
  40b904:	sahf   
  40b905:	gs ror eax,1
  40b908:	test   eax,0x7a05cf3
  40b90d:	and    cl,BYTE PTR [edx-0xefa2391]
  40b913:	ror    bl,0x52
  40b916:	sub    BYTE PTR [ebx],cl
  40b918:	bswap  ebx
  40b91a:	and    DWORD PTR [ebx+eiz*8-0x20c0613e],esp
  40b921:	xchg   ecx,eax
  40b922:	stc    
  40b923:	lock xor edi,DWORD PTR [esi]
  40b926:	pop    ecx
  40b927:	add    DWORD PTR [ebp+eiz*2+0x49],ebx
  40b92b:	pop    ecx
  40b92c:	push   esi
  40b92d:	sbb    eax,0xcc6d3c1e
  40b932:	and    ebx,DWORD PTR [ecx+0x2484a2b1]
  40b938:	and    eax,0x677814a5
  40b93d:	and    ebx,ebp
  40b93f:	aam    0x24
  40b941:	jbe    0x40b923
  40b943:	stos   DWORD PTR es:[edi],eax
  40b944:	rcr    BYTE PTR [edx],cl
  40b946:	daa    
  40b947:	scas   eax,DWORD PTR es:[edi]
  40b948:	repz pop eax
  40b94a:	stc    
  40b94b:	inc    edi
  40b94c:	dec    eax
  40b94d:	inc    ecx
  40b94e:	loope  0x40b9cf
  40b950:	and    al,0xa1
  40b952:	inc    edx
  40b953:	adc    eax,0xe5af6826
  40b958:	loop   0x40b967
  40b95a:	and    eax,0xda3ff167
  40b95f:	add    eax,0x3f06a77b
  40b964:	lea    ebx,ss:[esi-0x28]
  40b968:	out    dx,eax
  40b969:	leave  
  40b96a:	aas    
  40b96b:	pop    esp
  40b96c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b96d:	adc    ecx,DWORD PTR [edx]
  40b96f:	mov    ds:0xb730a35d,al
  40b974:	outs   dx,BYTE PTR ds:[esi]
  40b975:	xlat   BYTE PTR ds:[ebx]
  40b976:	jmp    0x8750bb86
  40b97b:	mov    ebp,?
  40b97d:	test   ebp,esp
  40b97f:	jecxz  0x40b930
  40b981:	jmp    0x40b99e
  40b983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b984:	dec    ebx
  40b985:	and    eax,0x22a41aa
  40b98a:	xlat   BYTE PTR ds:[ebx]
  40b98b:	shl    dh,1
  40b98d:	add    esp,DWORD PTR [eax+esi*4]
  40b990:	or     edi,DWORD PTR [ecx-0x2fecf51a]
  40b996:	(bad)  
  40b997:	jb     0x40b9b5
  40b999:	pop    ecx
  40b99a:	or     DWORD PTR [eax],0x75
  40b99d:	cli    
  40b99e:	neg    ebp
  40b9a0:	sub    DWORD PTR [edi-0x34ba2f65],edi
  40b9a6:	scas   eax,DWORD PTR es:[edi]
  40b9a7:	inc    esi
  40b9a8:	add    BYTE PTR [ebx+edx*8-0x5d9904ef],dh
  40b9af:	cwde   
  40b9b0:	or     al,0x23
  40b9b2:	pop    ecx
  40b9b3:	mov    cl,0x6
  40b9b5:	push   esp
  40b9b6:	loope  0x40ba1b
  40b9b8:	sti    
  40b9b9:	fsubr  QWORD PTR [edx-0x475dc63a]
  40b9bf:	or     cl,BYTE PTR [edi+0x135325c0]
  40b9c5:	pop    ebx
  40b9c6:	pop    ss
  40b9c7:	cmp    ebp,ecx
  40b9c9:	jmp    0x40b9a5
  40b9cb:	out    0x20,eax
  40b9cd:	sbb    BYTE PTR [ecx+0x15],cl
  40b9d0:	rsm    
  40b9d2:	sbb    eax,0x347ace24
  40b9d7:	pop    ss
  40b9d8:	ins    BYTE PTR es:[edi],dx
  40b9d9:	dec    ebp
  40b9da:	pop    eax
  40b9db:	inc    ebp
  40b9dc:	and    bl,BYTE PTR [ebx+0x18]
  40b9df:	mov    es,esp
  40b9e1:	imul   esi,DWORD PTR [eax+eiz*8],0x670950b8
  40b9e8:	or     edx,ecx
  40b9ea:	call   0x661a:0x70e12a62
  40b9f1:	in     eax,dx
  40b9f2:	clc    
  40b9f3:	inc    ebx
  40b9f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9f5:	mov    BYTE PTR [eax],dl
  40b9f7:	(bad)  
  40b9f8:	sub    eax,0x81df8f31
  40b9fd:	(bad)  
  40b9fe:	imul   DWORD PTR [esi-0x6ba5aca7]
  40ba04:	adc    eax,0x2ef0571e
  40ba09:	cmp    al,0xd
  40ba0b:	mov    ebp,0x9b109585
  40ba10:	push   ebx
  40ba11:	js     0x40ba07
  40ba13:	jno    0x40b9cd
  40ba15:	xlat   BYTE PTR ds:[ebx]
  40ba16:	(bad)  
  40ba18:	lods   al,BYTE PTR ds:[esi]
  40ba19:	adc    esi,0xffffff93
  40ba1c:	sahf   
  40ba1d:	arpl   WORD PTR [ecx],sp
  40ba1f:	sbb    eax,0x2eeaac08
  40ba24:	inc    esi
  40ba25:	and    ch,BYTE PTR ds:0x6b99504f
  40ba2b:	pop    ecx
  40ba2c:	clc    
  40ba2d:	not    DWORD PTR [edx+edi*8-0x10202458]
  40ba34:	pushf  
  40ba35:	out    dx,eax
  40ba36:	inc    ebx
  40ba37:	mov    dl,0xd5
  40ba39:	mov    eax,DWORD PTR [edi-0x5c1da368]
  40ba3f:	xchg   edi,eax
  40ba40:	inc    ebx
  40ba41:	nop
  40ba42:	mov    BYTE PTR [ebx],dl
  40ba44:	dec    ecx
  40ba45:	shl    edi,cl
  40ba47:	sbb    al,0xc5
  40ba49:	and    dl,BYTE PTR [ebx+0x68197a0]
  40ba4f:	push   ebp
  40ba50:	mov    esi,0x72f8ef8a
  40ba55:	mov    esp,0xcbffd0ba
  40ba5a:	(bad)  
  40ba5b:	loop   0x40ba05
  40ba5d:	sub    ch,BYTE PTR [ecx]
  40ba5f:	mov    al,ds:0x50e7d272
  40ba64:	adc    eax,0x6ffd8fc1
  40ba69:	xchg   ecx,eax
  40ba6a:	mov    ebx,0x1a4effa3
  40ba6f:	daa    
  40ba70:	mov    ebx,0x42106180
  40ba75:	and    DWORD PTR [edx+0x35],edx
  40ba78:	fs jns 0x40ba57
  40ba7b:	add    al,0x18
  40ba7d:	scas   al,BYTE PTR es:[edi]
  40ba7e:	sub    al,0x44
  40ba80:	sbb    bl,BYTE PTR [esi]
  40ba82:	sub    al,0x24
  40ba84:	pop    esi
  40ba85:	shr    dl,1
  40ba87:	pop    ss
  40ba88:	or     eax,0x6d753efd
  40ba8d:	sub    BYTE PTR [esi+0x25a62f4f],bl
  40ba93:	icebp  
  40ba94:	into   
  40ba95:	ret    
  40ba96:	jecxz  0x40ba77
  40ba98:	push   esi
  40ba99:	mov    ebx,0xbb325f0f
  40ba9e:	mov    esp,0xba56ce75
  40baa3:	(bad)  
  40baa4:	xor    al,0x6f
  40baa6:	int3   
  40baa7:	push   0xffffffa3
  40baa9:	ret    0xa8e
  40baac:	lods   al,BYTE PTR ds:[esi]
  40baad:	inc    edi
  40baae:	js     0x40ba3c
  40bab0:	cli    
  40bab1:	inc    esp
  40bab2:	(bad)  
  40bab4:	cli    
  40bab5:	(bad)  
  40bab6:	pop    eax
  40bab7:	(bad)  
  40bab8:	mov    dl,0xbd
  40baba:	mov    gs,WORD PTR [esi-0x73ddcad9]
  40bac0:	xchg   ecx,esp
  40bac2:	shr    DWORD PTR [edx],cl
  40bac4:	or     edx,DWORD PTR [esi]
  40bac6:	jmp    0x832a:0x8c547941
  40bacd:	jnp    0x40bb28
  40bacf:	push   cs
  40bad0:	push   ebx
  40bad1:	stc    
  40bad2:	mov    dl,0x56
  40bad4:	push   edx
  40bad5:	and    al,0x6a
  40bad7:	sti    
  40bad8:	xchg   ebp,eax
  40bad9:	mov    ch,BYTE PTR [ebx]
  40badb:	mov    ?,WORD PTR [ecx-0x59]
  40bade:	cmp    bh,ah
  40bae0:	sub    dl,ah
  40bae2:	xor    al,0xd7
  40bae4:	iret   
  40bae5:	addr16 push 0x6e
  40bae8:	inc    ecx
  40bae9:	sbb    eax,0xf88589d1
  40baee:	inc    edx
  40baef:	fisub  WORD PTR [ebx]
  40baf1:	push   edx
  40baf2:	dec    esp
  40baf3:	bound  ebp,QWORD PTR [ebp-0x6f1bb227]
  40baf9:	daa    
  40bafa:	lea    edi,[edi+0x2f]
  40bafd:	xchg   ecx,eax
  40bafe:	fiadd  WORD PTR [edi*8+0x3e8097e5]
  40bb05:	push   ds
  40bb06:	ins    DWORD PTR es:[edi],dx
  40bb07:	mov    al,0x3f
  40bb09:	scas   eax,DWORD PTR es:[edi]
  40bb0a:	cmp    al,0x6e
  40bb0c:	pop    ecx
  40bb0d:	push   edx
  40bb0e:	adc    BYTE PTR [ebp-0x5c],0xfc
  40bb12:	aad    0x8a
  40bb14:	mov    cl,0xc4
  40bb16:	aam    0xfa
  40bb18:	sub    ecx,DWORD PTR ds:0xcce488be
  40bb1e:	js     0x40bb48
  40bb20:	or     al,0xd7
  40bb23:	int3   
  40bb24:	add    eax,0x1578fd2a
  40bb29:	loop   0x40bb2d
  40bb2b:	jae    0x40bb92
  40bb2d:	cmc    
  40bb2e:	outs   dx,BYTE PTR ds:[esi]
  40bb2f:	jo     0x40baee
  40bb31:	xchg   esi,eax
  40bb32:	repnz sbb BYTE PTR ds:0xda55c70a,al
  40bb39:	cmp    bl,0x6
  40bb3c:	out    dx,al
  40bb3d:	pop    esp
  40bb3e:	fdivrp st(0),st
  40bb40:	je     0xd63afea8
  40bb46:	mov    BYTE PTR [edi],bh
  40bb48:	ins    DWORD PTR es:[edi],dx
  40bb49:	dec    edx
  40bb4a:	adc    BYTE PTR [eax+0x66],bl
  40bb4d:	arpl   cx,cx
  40bb4f:	sub    eax,0xa06921f0
  40bb54:	shr    BYTE PTR [ecx-0x5b694191],1
  40bb5a:	or     al,0x59
  40bb5c:	sub    DWORD PTR [ecx+0x44a55140],0x7f
  40bb63:	fld    QWORD PTR ds:0x7b34f64c
  40bb69:	stos   DWORD PTR es:[edi],eax
  40bb6a:	repz pop edx
  40bb6c:	fnstsw WORD PTR [edx]
  40bb6e:	cmp    dl,BYTE PTR [edi]
  40bb70:	push   edi
  40bb71:	scas   al,BYTE PTR es:[edi]
  40bb72:	sbb    eax,0x42dcd1bf
  40bb77:	sbb    DWORD PTR [edx],edx
  40bb79:	pushf  
  40bb7a:	mov    ds:0xa725fc97,eax
  40bb7f:	cmp    ebp,eax
  40bb81:	jno    0x40bb9f
  40bb83:	outs   dx,BYTE PTR ds:[esi]
  40bb84:	pop    eax
  40bb85:	push   cs
  40bb86:	xor    ebp,esi
  40bb88:	mov    ds:0x2135f939,eax
  40bb8d:	mov    dh,0xb9
  40bb8f:	fcomip st,st(6)
  40bb91:	jns    0x40bb64
  40bb93:	add    eax,DWORD PTR [ecx]
  40bb95:	sbb    dl,BYTE PTR [edi]
  40bb97:	push   eax
  40bb98:	mov    al,0xa3
  40bb9a:	loope  0x40bbbb
  40bb9c:	jmp    0x6f5321a4
  40bba1:	xor    dh,BYTE PTR [edi]
  40bba3:	stos   DWORD PTR es:[edi],eax
  40bba4:	mov    ebp,0xce1a6b8f
  40bba9:	fst    QWORD PTR [ebp-0x326b6e6d]
  40bbaf:	push   0xffffffa3
  40bbb1:	dec    edx
  40bbb2:	xchg   ebx,eax
  40bbb3:	xchg   DWORD PTR [esi-0x31],esi
  40bbb6:	dec    ebp
  40bbb7:	lahf   
  40bbb8:	dec    esp
  40bbb9:	lds    esi,FWORD PTR [eax-0x64]
  40bbbc:	inc    esp
  40bbbd:	repz dec ebp
  40bbbf:	xchg   esp,eax
  40bbc0:	and    dl,BYTE PTR [ecx+0x7c64edd0]
  40bbc6:	cmp    al,0xbe
  40bbc8:	and    edx,0xfa12cfa4
  40bbce:	cmp    al,0x8
  40bbd0:	add    DWORD PTR [edi+0x6f],edx
  40bbd3:	pop    ebp
  40bbd4:	imul   ecx,DWORD PTR [esi+0x6],0x3e
  40bbd8:	cmp    BYTE PTR [esi+0x2118b790],al
  40bbde:	rcl    ebx,1
  40bbe0:	push   ebx
  40bbe1:	clc    
  40bbe2:	adc    BYTE PTR [ecx+edx*4+0x748902b],al
  40bbe9:	and    bl,BYTE PTR [edi]
  40bbeb:	sbb    al,0xbb
  40bbed:	aad    0xc4
  40bbef:	mov    ebp,ebp
  40bbf1:	and    dl,ch
  40bbf3:	sbb    esp,DWORD PTR [eax+0x4b]
  40bbf6:	bound  edi,QWORD PTR [edx]
  40bbf8:	cdq    
  40bbf9:	into   
  40bbfa:	cli    
  40bbfb:	aaa    
  40bbfc:	cmp    bl,BYTE PTR [bx+di+0x7]
  40bc00:	ds (bad) 
  40bc02:	mov    ebp,0x1b1f5e51
  40bc07:	retf   
  40bc08:	mov    ebp,0xbfd39dcf
  40bc0d:	adc    eax,0x5e43490d
  40bc12:	les    esp,FWORD PTR [esi]
  40bc14:	jbe    0x40bc3f
  40bc16:	sahf   
  40bc17:	push   es
  40bc18:	lahf   
  40bc19:	ins    DWORD PTR es:[edi],dx
  40bc1a:	pop    ebx
  40bc1b:	push   edi
  40bc1c:	test   al,0xff
  40bc1e:	dec    ecx
  40bc1f:	aad    0x4
  40bc21:	push   es
  40bc22:	xchg   esi,eax
  40bc23:	adc    eax,DWORD PTR [ebp+0x9]
  40bc26:	iret   
  40bc27:	in     al,0x18
  40bc29:	mov    edi,0x7f901e5c
  40bc2e:	pop    esi
  40bc2f:	pop    edx
  40bc30:	add    eax,DWORD PTR [esi+0x2]
  40bc33:	jbe    0x40bc44
  40bc35:	add    al,0xef
  40bc37:	cmp    edi,DWORD PTR [ecx-0x37]
  40bc3a:	mov    ecx,0x95b1e657
  40bc3f:	jns    0x40bc7c
  40bc41:	dec    edx
  40bc42:	push   ebx
  40bc43:	loopne 0x40bc0b
  40bc45:	cmp    edi,edi
  40bc47:	and    DWORD PTR [ecx],eax
  40bc49:	and    eax,0xacd9024c
  40bc4e:	leave  
  40bc4f:	retfw  
  40bc51:	xchg   edi,eax
  40bc52:	xor    eax,0xc0886e03
  40bc57:	add    BYTE PTR [eax+0xb],dh
  40bc5a:	lods   al,BYTE PTR ds:[esi]
  40bc5b:	pusha  
  40bc5c:	xchg   ah,bl
  40bc5e:	sti    
  40bc5f:	push   0x34
  40bc61:	sar    DWORD PTR [eax],0xd6
  40bc64:	out    0x3e,al
  40bc66:	inc    ebp
  40bc67:	cmp    bl,BYTE PTR [esi+0x4f]
  40bc6a:	lods   eax,DWORD PTR ds:[esi]
  40bc6b:	inc    eax
  40bc6c:	add    bl,BYTE PTR [edi+0x14]
  40bc6f:	daa    
  40bc70:	ja     0x40bc92
  40bc72:	in     al,0x21
  40bc74:	mov    cs:0x8f3c3385,eax
  40bc7a:	jo     0x40bc59
  40bc7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc7d:	dec    ebx
  40bc7e:	addr16 inc esp
  40bc80:	jno    0x40bc59
  40bc82:	cmc    
  40bc83:	sub    DWORD PTR [ebp+0x1fca4696],0xe
  40bc8a:	inc    eax
  40bc8b:	enter  0x4f29,0x44
  40bc8f:	mov    dh,0x43
  40bc91:	mov    bp,0xe9f3
  40bc95:	inc    ecx
  40bc96:	cmp    al,0x19
  40bc98:	adc    al,0x7d
  40bc9a:	push   cs
  40bc9b:	enter  0x2280,0x59
  40bc9f:	fbstp  TBYTE PTR [ebp-0x69306c8e]
  40bca5:	mov    dh,0x69
  40bca7:	(bad)  
  40bca8:	mov    bh,BYTE PTR [esp+eax*2-0x14]
  40bcac:	cmc    
  40bcad:	stc    
  40bcae:	scas   eax,DWORD PTR es:[edi]
  40bcaf:	aas    
  40bcb0:	leave  
  40bcb1:	or     al,0xba
  40bcb3:	imul   ecx,ebx,0x4f40aeca
  40bcb9:	adc    esp,edi
  40bcbb:	leave  
  40bcbc:	push   ebx
  40bcbd:	test   BYTE PTR [ebx-0x25],0xc5
  40bcc1:	adc    DWORD PTR [edx+0x33047f37],ebx
  40bcc7:	sti    
  40bcc8:	xchg   esi,eax
  40bcc9:	mov    al,0xfc
  40bccb:	push   ebx
  40bccc:	pushf  
  40bccd:	(bad)  
  40bcce:	jecxz  0x40bc72
  40bcd0:	mov    ds:0xadf1149b,al
  40bcd5:	lods   eax,DWORD PTR ds:[esi]
  40bcd6:	into   
  40bcd7:	or     al,0x58
  40bcd9:	add    esi,ebp
  40bcdb:	inc    edi
  40bcdc:	mov    esp,0xb8ea936f
  40bce1:	and    eax,0x190328a
  40bce6:	push   cs
  40bce7:	add    dl,BYTE PTR [edx+edx*2+0x628c090f]
  40bcee:	ja     0x40bccd
  40bcf0:	cmp    cl,ch
  40bcf2:	mov    esi,0x11e3cde
  40bcf7:	add    ch,dh
  40bcf9:	jo     0x40bcbe
  40bcfb:	(bad)  
  40bcfc:	xor    DWORD PTR [ecx],edi
  40bcfe:	sti    
  40bcff:	into   
  40bd00:	stos   DWORD PTR es:[edi],eax
  40bd01:	and    dl,BYTE PTR [edi]
  40bd03:	test   DWORD PTR [esi+0x54ce5451],ebx
  40bd09:	mov    ss,WORD PTR [ebx]
  40bd0b:	push   cs
  40bd0c:	fisubr DWORD PTR [esi+0x70]
  40bd0f:	les    eax,FWORD PTR [ebx-0x1d]
  40bd12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd13:	push   ebp
  40bd14:	adc    eax,0x6e3076e3
  40bd19:	xchg   ebp,eax
  40bd1a:	pop    edx
  40bd1b:	mov    cl,0xf2
  40bd1d:	fmul   DWORD PTR [edx+0x3e]
  40bd20:	sbb    BYTE PTR [edx],al
  40bd22:	popf   
  40bd23:	push   ds
  40bd24:	jg     0x40bd27
  40bd26:	sbb    esi,DWORD PTR [eax]
  40bd28:	jnp    0x40bcc7
  40bd2a:	jmp    0x7518:0x72a98a21
  40bd31:	outs   dx,DWORD PTR ds:[esi]
  40bd32:	xchg   ecx,eax
  40bd33:	shl    edx,cl
  40bd35:	frstpm(287 only) 
  40bd37:	fldcw  WORD PTR [eax]
  40bd39:	test   al,0x82
  40bd3b:	cld    
  40bd3c:	in     eax,0x7a
  40bd3e:	xor    eax,0x50862bc6
  40bd43:	fst    DWORD PTR [edx+0x6dd13041]
  40bd49:	push   cs
  40bd4a:	aaa    
  40bd4b:	sub    DWORD PTR [ebp+0x76],esp
  40bd4e:	jle    0x40bd41
  40bd50:	push   es
  40bd51:	(bad)  
  40bd52:	fwait
  40bd53:	and    eax,DWORD PTR [edi+0x50e42a5f]
  40bd59:	push   cs
  40bd5a:	test   BYTE PTR [edx-0x63],bl
  40bd5d:	xchg   ebp,eax
  40bd5e:	push   eax
  40bd5f:	fld    TBYTE PTR [ebp-0x2]
  40bd62:	xchg   BYTE PTR [ebx],dl
  40bd64:	jge    0x40bdc8
  40bd66:	sbb    al,0x69
  40bd68:	cmp    bh,BYTE PTR [ebp+0x4232d9dd]
  40bd6e:	inc    edi
  40bd6f:	sbb    eax,0x42b67745
  40bd74:	cmp    DWORD PTR [edx+0xf],0xca2b7f17
  40bd7b:	mov    al,ds:0xf9d76897
  40bd80:	leave  
  40bd81:	xchg   ah,al
  40bd83:	daa    
  40bd84:	fdivr  QWORD PTR [ecx-0x330835d1]
  40bd8a:	mov    al,0xa9
  40bd8c:	mov    bh,0x65
  40bd8e:	and    dl,dh
  40bd90:	xchg   edx,eax
  40bd91:	sub    DWORD PTR [ebp+esi*1-0x276e3a8e],esi
  40bd98:	mov    dl,0x5a
  40bd9a:	shl    DWORD PTR [edi-0x2eb9b63e],cl
  40bda0:	cs inc eax
  40bda2:	fimul  DWORD PTR [eax-0x45]
  40bda5:	cmp    DWORD PTR [esp+edx*4-0x25],ecx
  40bda9:	clc    
  40bdaa:	push   ds
  40bdab:	pop    ecx
  40bdac:	out    dx,eax
  40bdad:	jnp    0x40bd90
  40bdaf:	ret    
  40bdb0:	arpl   WORD PTR [eax-0x1e],cx
  40bdb3:	and    DWORD PTR [edx],edi
  40bdb5:	call   0x29a74532
  40bdba:	mov    ebp,0xae90a78a
  40bdbf:	mov    dl,0x4d
  40bdc1:	ss repz cmp eax,0x62366a5b
  40bdc8:	xchg   esi,eax
  40bdc9:	std    
  40bdca:	xchg   esi,eax
  40bdcb:	mov    esp,0x3ce28736
  40bdd0:	push   esp
  40bdd1:	dec    eax
  40bdd2:	and    DWORD PTR [edx-0x266d6a1a],ecx
  40bdd8:	sub    BYTE PTR [ecx-0x787b73e8],al
  40bdde:	daa    
  40bddf:	push   ds
  40bde0:	lock dec ebp
  40bde2:	mov    cl,0xce
  40bde4:	pusha  
  40bde5:	cmp    ch,BYTE PTR [ecx-0x3f]
  40bde8:	xor    al,0x97
  40bdea:	adc    dl,cl
  40bdec:	mov    DWORD PTR [ecx+0x66],ebx
  40bdef:	xchg   esi,eax
  40bdf0:	mov    al,ds:0xe0050ffa
  40bdf5:	(bad)  
  40bdf6:	inc    BYTE PTR [eax+ebp*1+0x5]
  40bdfa:	icebp  
  40bdfb:	std    
  40bdfc:	sti    
  40bdfd:	ins    BYTE PTR es:[edi],dx
  40bdfe:	lahf   
  40bdff:	jmp    0xf3aa:0xce43abc
  40be06:	addr16 inc ebp
  40be08:	sahf   
  40be09:	mov    edx,es
  40be0b:	cdq    
  40be0c:	push   ds
  40be0d:	and    BYTE PTR [ebp+0xe],0x27
  40be11:	jbe    0x40be86
  40be13:	dec    esi
  40be14:	icebp  
  40be15:	jle    0x40bddc
  40be17:	lods   eax,DWORD PTR ds:[esi]
  40be18:	scas   al,BYTE PTR es:[edi]
  40be19:	test   eax,0xe20dc98
  40be1e:	lock fst DWORD PTR [ebx-0x1f6f8f23]
  40be25:	jmp    0x40bdf2
  40be27:	lds    esi,FWORD PTR [eax]
  40be29:	loopne 0x40be5e
  40be2b:	js     0x40be46
  40be2d:	repz in al,dx
  40be2f:	in     eax,dx
  40be30:	(bad)  
  40be31:	mov    ebp,0x619baab
  40be36:	cli    
  40be37:	test   bh,dl
  40be39:	es das 
  40be3b:	xchg   edx,eax
  40be3c:	jmp    0x40bea6
  40be3e:	test   eax,0x1f4ff181
  40be43:	xchg   edi,eax
  40be44:	mov    edx,0x79b70196
  40be49:	ds cmp esp,edi
  40be4c:	add    ah,BYTE PTR [edx+edi*1]
  40be4f:	inc    eax
  40be50:	in     eax,0xf0
  40be52:	or     al,0x44
  40be54:	mov    BYTE PTR [ecx-0x20b6b186],dl
  40be5a:	test   al,0xf0
  40be5c:	adc    al,0x9a
  40be5e:	pop    edx
  40be5f:	outs   dx,BYTE PTR ds:[esi]
  40be60:	jg     0x40be6a
  40be62:	pop    ss
  40be63:	xchg   esp,eax
  40be64:	fsub   st(5),st
  40be66:	mov    al,ds:0xe36c2367
  40be6b:	hlt    
  40be6c:	nop
  40be6d:	out    0x34,eax
  40be6f:	or     esi,ebx
  40be71:	jnp    0x40bebf
  40be73:	(bad)  
  40be75:	inc    edi
  40be76:	pop    es
  40be77:	mov    al,ds:0x9b949244
  40be7c:	mov    BYTE PTR [eax+0x1a61f41d],al
  40be82:	push   ecx
  40be83:	stc    
  40be84:	add    esp,ecx
  40be86:	(bad)  
  40be87:	jmp    0x10d3655d
  40be8c:	mov    BYTE PTR ds:0x7dcb80d6,bl
  40be92:	pop    ds
  40be93:	test   DWORD PTR [esi+0x51a354c6],0x775e1c6b
  40be9d:	std    
  40be9e:	arpl   WORD PTR [ebp-0x77],cx
  40bea1:	add    al,BYTE PTR [esi]
  40bea3:	test   eax,0x445ea497
  40bea8:	add    DWORD PTR [eax+0x31],0xffffff98
  40beac:	adc    dh,ah
  40beae:	lods   al,BYTE PTR ds:[esi]
  40beaf:	jns    0x40bee4
  40beb1:	jmp    0x40beb1
  40beb3:	dec    ebp
  40beb4:	inc    edx
  40beb5:	jns    0x40bee4
  40beb7:	sbb    DWORD PTR [edx],0xffffff83
  40beba:	push   ds
  40bebb:	jnp    0x40bf0d
  40bebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bebe:	xchg   ebp,eax
  40bebf:	and    DWORD PTR [eax+0x40],ebx
  40bec2:	pop    ecx
  40bec3:	sbb    eax,0xb5092fd8
  40bec8:	mov    al,ds:0x55a52a86
  40becd:	push   ss
  40bece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40becf:	enter  0x10a3,0x91
  40bed3:	push   edx
  40bed4:	mov    edi,0x468bc6dd
  40bed9:	pop    es
  40beda:	hlt    
  40bedb:	jp     0x40bf2d
  40bedd:	(bad)  
  40bedf:	inc    esp
  40bee0:	shl    DWORD PTR [edx-0x6f],1
  40bee3:	xchg   DWORD PTR [ecx+0xf],esi
  40bee6:	call   0xce469065
  40beeb:	mov    ?,WORD PTR ds:[esi+esi*8+0x4530138c]
  40bef3:	and    BYTE PTR [esi-0x37ff22cc],bl
  40bef9:	jmp    0x5937:0x1282b6bf
  40bf00:	push   0xa3678be6
  40bf05:	push   eax
  40bf06:	cld    
  40bf07:	mov    WORD PTR [eax],?
  40bf09:	sahf   
  40bf0a:	sar    BYTE PTR [edx+edi*4-0x471b2c98],cl
  40bf11:	adc    al,0xf6
  40bf13:	xchg   DWORD PTR [edx-0x674145ab],ebp
  40bf19:	neg    BYTE PTR [ecx+0x3e]
  40bf1c:	nop
  40bf1d:	ins    DWORD PTR es:[edi],dx
  40bf1e:	or     DWORD PTR [edx],esi
  40bf20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf21:	jmp    0x40bf68
  40bf23:	xchg   edx,eax
  40bf24:	or     al,0xd9
  40bf26:	iret   
  40bf27:	jb     0x40bf27
  40bf29:	xchg   edx,eax
  40bf2a:	retf   
  40bf2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf2c:	push   ebp
  40bf2d:	lock and ch,0x84
  40bf31:	adc    BYTE PTR [eax*4+0x3529cac8],dh
  40bf38:	mov    eax,0xe28d73b8
  40bf3d:	or     dl,BYTE PTR [edx+ebp*2+0x6]
  40bf41:	sbb    BYTE PTR [edi-0x62af946b],al
  40bf47:	sahf   
  40bf48:	add    bl,BYTE PTR [ecx+0x6b]
  40bf4b:	jp     0x40bee6
  40bf4d:	xor    al,0x10
  40bf4f:	add    ah,BYTE PTR [eax]
  40bf51:	jo     0x40bf2b
  40bf53:	push   eax
  40bf54:	nop
  40bf55:	add    ecx,DWORD PTR [ebx+0x46380fa7]
  40bf5b:	push   ecx
  40bf5c:	mov    cl,0xc7
  40bf5e:	cli    
  40bf5f:	rcl    ebx,0xeb
  40bf62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf63:	das    
  40bf64:	clc    
  40bf65:	fsubr  DWORD PTR gs:[esi]
  40bf68:	std    
  40bf69:	test   eax,0xc7eda669
  40bf6e:	bound  edi,QWORD PTR [ebx+0x77d4375f]
  40bf74:	xchg   esi,eax
  40bf75:	push   ecx
  40bf76:	loope  0x40bf6e
  40bf78:	jle    0x40bf97
  40bf7a:	ret    0xdef2
  40bf7d:	ficomp WORD PTR [ebx]
  40bf7f:	test   al,0x7e
  40bf81:	xor    ebp,eax
  40bf83:	shr    BYTE PTR [edi],0x2d
  40bf86:	mov    al,0x81
  40bf88:	(bad)  
  40bf89:	xchg   ebx,eax
  40bf8a:	mov    ds:0xffcd3b75,al
  40bf8f:	xor    edi,ecx
  40bf91:	fimul  WORD PTR [ecx+eax*8]
  40bf94:	retf   
  40bf95:	mov    cl,0x21
  40bf97:	push   ebp
  40bf98:	mov    eax,edi
  40bf9a:	std    
  40bf9b:	jae    0x40bff3
  40bf9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf9e:	sub    eax,0xee9b42a5
  40bfa3:	sub    ecx,DWORD PTR [ebp+0x602be0a0]
  40bfa9:	mov    edx,0xa160dcb5
  40bfae:	cwde   
  40bfaf:	je     0x40bfa9
  40bfb1:	xchg   DWORD PTR [ebx-0x6fd58b5],ebp
  40bfb7:	xchg   ebx,eax
  40bfb8:	icebp  
  40bfb9:	pop    ss
  40bfba:	das    
  40bfbb:	add    esp,DWORD PTR [esi-0x7d1fec7b]
  40bfc1:	mov    edx,0x4f20b2cd
  40bfc6:	sar    BYTE PTR [eax+esi*4-0x1c],0xad
  40bfcb:	pop    ds
  40bfcc:	ret    0xd4b
  40bfcf:	in     al,0x5b
  40bfd1:	out    0x36,eax
  40bfd3:	std    
  40bfd4:	ds cmc 
  40bfd6:	aas    
  40bfd7:	scas   eax,DWORD PTR es:[edi]
  40bfd8:	add    ah,dl
  40bfda:	xlat   BYTE PTR ds:[ebx]
  40bfdb:	cld    
  40bfdc:	mov    ch,0x57
  40bfde:	sub    ebp,DWORD PTR [ebp+0x25]
  40bfe1:	ficomp WORD PTR [ebx+0x6260c3ba]
  40bfe7:	int3   
  40bfe8:	jo     0x40bf6c
  40bfea:	mov    ebp,DWORD PTR [ebx+edx*4]
  40bfed:	pop    esp
  40bfee:	mov    ds:0xe7d7fdb8,al
  40bff3:	or     dl,BYTE PTR [ebx-0x1663ec0f]
  40bff9:	sub    eax,0x1d4f5494
  40bffe:	fsubr  st,st(0)
  40c000:	stos   BYTE PTR es:[edi],al
  40c001:	div    ch
  40c003:	add    esi,ecx
  40c005:	imul   ecx,DWORD PTR [ecx+0x8],0x4f2e9849
  40c00c:	les    ecx,FWORD PTR [ebx]
  40c00e:	fisubr DWORD PTR [edi+edx*4+0x4c9db79f]
  40c015:	iret   
  40c016:	xchg   DWORD PTR [edx+0x3d],ecx
  40c019:	addr16 mov al,ds:0x40c1
  40c01d:	imul   ebx,DWORD PTR [ebx],0x75
  40c020:	push   eax
  40c021:	pop    ecx
  40c022:	jg     0x40bfae
  40c024:	mov    esp,0xe07f0881
  40c029:	mov    bh,0xfd
  40c02b:	enter  0x483c,0x89
  40c02f:	adc    al,0xdf
  40c031:	cmp    al,0xe2
  40c033:	mov    al,ds:0x7931e12d
  40c038:	and    eax,0xff532460
  40c03d:	mov    WORD PTR [ebx-0x2f77b31f],?
  40c043:	shr    BYTE PTR [edx],0x1f
  40c046:	xchg   ecx,eax
  40c047:	inc    esi
  40c048:	out    dx,eax
  40c049:	shl    BYTE PTR [edi],0x32
  40c04c:	cmc    
  40c04d:	into   
  40c04e:	push   0x7ff9859
  40c053:	mov    al,0xb
  40c055:	mov    ?,WORD PTR [esp+edx*8-0x587a639f]
  40c05c:	cmc    
  40c05d:	adc    eax,DWORD PTR [edx+edx*8+0x44]
  40c061:	inc    esi
  40c062:	mov    cl,0xfd
  40c064:	imul   ebx,DWORD PTR ds:0xce4088f7,0x6e5b8c4c
  40c06e:	dec    ecx
  40c06f:	sti    
  40c070:	pushf  
  40c071:	xchg   edx,eax
  40c072:	fbld   TBYTE PTR [ebx-0x32]
  40c075:	push   es
  40c076:	js     0x40c01d
  40c078:	jmp    0xca52:0x296e7999
  40c07f:	inc    ebp
  40c080:	leave  
  40c081:	push   eax
  40c082:	je     0x40c011
  40c084:	stos   DWORD PTR es:[edi],eax
  40c085:	jbe    0x40c09e
  40c087:	push   es
  40c088:	out    dx,al
  40c089:	adc    DWORD PTR [ecx-0x2d],0xa
  40c08d:	std    
  40c08e:	cmp    esi,DWORD PTR [edx]
  40c090:	jl     0x40c067
  40c092:	add    edx,edx
  40c094:	jbe    0x40c087
  40c096:	mov    BYTE PTR [edi-0x36ccdae9],al
  40c09c:	ins    DWORD PTR es:[edi],dx
  40c09d:	fmul   QWORD PTR [ecx+0x1f]
  40c0a0:	jg     0x40c040
  40c0a2:	push   gs
  40c0a4:	je     0x40c098
  40c0a6:	aas    
  40c0a7:	lods   eax,DWORD PTR ds:[esi]
  40c0a8:	push   eax
  40c0a9:	sbb    eax,0xed44c09
  40c0ae:	outs   dx,BYTE PTR ds:[esi]
  40c0af:	mov    al,0x38
  40c0b1:	dec    edx
  40c0b2:	jbe    0x40c047
  40c0b4:	mov    ecx,0xc381d1d9
  40c0b9:	call   0xf06f:0xdbc801f5
  40c0c0:	add    bh,dh
  40c0c2:	inc    eax
  40c0c3:	daa    
  40c0c4:	inc    ebx
  40c0c5:	add    BYTE PTR gs:[eax-0x5439f641],cl
  40c0cc:	xchg   esi,eax
  40c0cd:	aas    
  40c0ce:	mov    WORD PTR [edi-0x5d1e87c3],cs
  40c0d4:	(bad)  
  40c0d5:	in     eax,dx
  40c0d6:	out    dx,al
  40c0d7:	cli    
  40c0d8:	jp     0x40c08f
  40c0da:	adc    al,0x63
  40c0dc:	lods   al,BYTE PTR ds:[esi]
  40c0dd:	push   0x89fa7bba
  40c0e2:	fcmovnu st,st(4)
  40c0e4:	adc    BYTE PTR [ebx+0x74cdb540],cl
  40c0ea:	in     al,0xbf
  40c0ec:	xchg   esp,eax
  40c0ed:	mov    DWORD PTR [ebp+0x408b13c3],0x92a2f0c1
  40c0f7:	and    eax,0x74e57958
  40c0fc:	or     edx,0xffffffee
  40c0ff:	dec    ebx
  40c100:	pop    ss
  40c101:	fwait
  40c102:	test   eax,0x2c0bec01
  40c107:	or     DWORD PTR [edx],ebp
  40c109:	test   al,0xb5
  40c10b:	push   ebx
  40c10c:	mov    eax,ds:0xcc99c60b
  40c111:	sahf   
  40c112:	sbb    BYTE PTR [esi-0x57c66c33],dl
  40c118:	sbb    BYTE PTR [edi],0xa4
  40c11b:	fdiv   DWORD PTR [ebp-0x5c7b9e21]
  40c121:	iret   
  40c122:	out    0x79,eax
  40c124:	test   al,0x79
  40c126:	leave  
  40c127:	(bad)  
  40c128:	cmc    
  40c129:	aaa    
  40c12a:	ins    BYTE PTR es:[edi],dx
  40c12b:	mov    esp,0xadf5e27c
  40c130:	inc    ebp
  40c131:	lock jbe 0x40c11a
  40c134:	call   0x3da:0x6e78bd0d
  40c13b:	add    DWORD PTR [esi],edx
  40c13d:	xor    BYTE PTR [edx+0x46],bh
  40c140:	std    
  40c141:	sub    al,0xf6
  40c143:	push   cs
  40c144:	sbb    esp,DWORD PTR [edi-0xbe3ce87]
  40c14a:	int3   
  40c14b:	mov    esp,DWORD PTR [ecx+0x5]
  40c14e:	div    ch
  40c150:	pop    ebp
  40c151:	repz mov WORD PTR [ebx],es
  40c154:	dec    ecx
  40c155:	push   eax
  40c156:	pop    es
  40c157:	test   BYTE PTR [esi-0x5f0e121],0xb6
  40c15e:	xor    eax,DWORD PTR [edx+0x36db4092]
  40c164:	(bad)  
  40c165:	mov    ss,WORD PTR [ebx+0x13058a68]
  40c16b:	cdq    
  40c16c:	into   
  40c16d:	pop    ds
  40c16e:	stos   DWORD PTR es:[edi],eax
  40c16f:	push   edx
  40c170:	shl    BYTE PTR [eax-0x34e3c10],0xd7
  40c177:	adc    ebx,edi
  40c179:	mov    ecx,0x35411826
  40c17e:	xchg   DWORD PTR [edx],esi
  40c180:	fidiv  WORD PTR [edi-0x24]
  40c183:	js     0x40c13a
  40c185:	outs   dx,BYTE PTR ds:[esi]
  40c186:	push   0xf49288db
  40c18b:	out    0xe8,al
  40c18d:	pop    edx
  40c18e:	xor    al,0x24
  40c190:	in     eax,0x79
  40c192:	call   0x8bce:0x3507933e
  40c199:	cli    
  40c19a:	test   BYTE PTR [eax-0x12],ah
  40c19d:	fidiv  WORD PTR [edx-0x245215b2]
  40c1a3:	dec    edx
  40c1a4:	jnp    0x40c1a2
  40c1a6:	pop    esp
  40c1a7:	outs   dx,BYTE PTR ds:[esi]
  40c1a8:	out    dx,eax
  40c1a9:	fnstsw WORD PTR ds:0xb0fb0c26
  40c1af:	rcl    edx,cl
  40c1b1:	push   ebx
  40c1b2:	fs add al,0xb5
  40c1b5:	in     al,dx
  40c1b6:	mov    esi,0xee22bc0e
  40c1bb:	fcos   
  40c1bd:	mov    ch,0x1c
  40c1bf:	mov    ds:0x5e86f9f0,al
  40c1c4:	rcr    DWORD PTR [esi],0x6c
  40c1c7:	leave  
  40c1c8:	(bad)  
  40c1ca:	sbb    DWORD PTR [ecx+0x4a56e5fc],0xffffffbc
  40c1d1:	in     eax,0xe
  40c1d3:	fld    TBYTE PTR [ebx-0x3bbe317e]
  40c1d9:	or     eax,0xd7116b29
  40c1de:	mov    bh,0x25
  40c1e0:	pop    ss
  40c1e1:	mov    DWORD PTR [ecx+0x2157d4e9],0xa28d23b
  40c1eb:	xchg   ebp,eax
  40c1ec:	sub    ebx,0xd637eb7
  40c1f2:	mov    ah,0x8f
  40c1f4:	ret    0x77f5
  40c1f7:	mov    dh,0x11
  40c1f9:	jg     0x40c1c3
  40c1fb:	add    BYTE PTR [ecx+0x5cf5df66],cl
  40c201:	push   es
  40c202:	or     edx,DWORD PTR [ebx+0x177548f6]
  40c208:	into   
  40c209:	push   esp
  40c20a:	inc    edx
  40c20b:	aam    0xbc
  40c20d:	dec    eax
  40c20e:	sbb    eax,DWORD PTR [edi+edx*2-0x36382421]
  40c215:	jne    0x40c24e
  40c217:	xor    eax,DWORD PTR [edx]
  40c219:	scas   eax,DWORD PTR es:[edi]
  40c21a:	out    dx,eax
  40c21b:	jle    0x40c1e9
  40c21d:	lock fild WORD PTR [ebp-0x6dcf7574]
  40c224:	out    dx,al
  40c225:	retf   
  40c226:	test   eax,0x6b12a9f6
  40c22b:	push   ebp
  40c22c:	inc    edx
  40c22d:	(bad)  
  40c22e:	scas   al,BYTE PTR es:[edi]
  40c22f:	cmc    
  40c230:	mov    esp,0xb0a0c0ca
  40c235:	push   ss
  40c236:	jl     0x40c20c
  40c238:	sub    esi,DWORD PTR [ebx+eiz*1-0x50]
  40c23c:	cli    
  40c23d:	adc    eax,0x8ab14a2c
  40c242:	and    eax,0x512bd428
  40c247:	ins    BYTE PTR es:[edi],dx
  40c248:	clc    
  40c249:	mov    es,ecx
  40c24b:	mov    dh,0x59
  40c24d:	test   BYTE PTR [ecx+0x44],bh
  40c250:	mov    al,0xbe
  40c252:	cs pop edx
  40c254:	fild   DWORD PTR [esi-0x2c]
  40c257:	not    DWORD PTR [eax]
  40c259:	jns    0x40c240
  40c25b:	je     0x40c201
  40c25d:	into   
  40c25e:	add    al,0xca
  40c260:	push   cs
  40c261:	pushf  
  40c262:	xor    eax,0x40349c18
  40c267:	not    DWORD PTR [esi-0xe40afce]
  40c26d:	add    bl,cl
  40c26f:	sar    esi,0xee
  40c272:	jl     0x40c22e
  40c274:	ret    0xee1c
  40c277:	mov    eax,0xd6814ebf
  40c27c:	sbb    eax,DWORD PTR [ebx]
  40c27e:	or     BYTE PTR [edi],0xd5
  40c281:	pop    esi
  40c282:	mov    cl,0x7f
  40c284:	(bad)  
  40c285:	fdivrp st(7),st
  40c287:	dec    ebp
  40c288:	add    al,0xd1
  40c28a:	sbb    al,0x1f
  40c28c:	imul   esp,DWORD PTR [esi+0x1867b2f3],0xad047e02
  40c296:	sub    DWORD PTR [ebx+0x1f],edx
  40c299:	mov    ecx,0x42fc5d3b
  40c29e:	shl    DWORD PTR es:[ecx-0x1627adcb],cl
  40c2a5:	lahf   
  40c2a6:	adc    ebp,DWORD PTR [ecx-0x6f0a5522]
  40c2ac:	xchg   ebx,eax
  40c2ad:	enter  0xee06,0xb1
  40c2b1:	jle    0x40c2bb
  40c2b3:	add    eax,0xc3141c3e
  40c2b8:	lods   al,BYTE PTR ds:[esi]
  40c2b9:	out    dx,eax
  40c2ba:	add    esp,DWORD PTR [ebp-0x44ea5fad]
  40c2c0:	stos   BYTE PTR es:[edi],al
  40c2c1:	push   cs
  40c2c2:	cwde   
  40c2c3:	and    BYTE PTR [edx],bh
  40c2c5:	pop    es
  40c2c6:	fisub  WORD PTR [ebx-0x5c]
  40c2c9:	xor    eax,0xd0d06c9f
  40c2ce:	icebp  
  40c2cf:	inc    eax
  40c2d0:	jb     0x40c350
  40c2d2:	adc    al,0x53
  40c2d4:	push   edx
  40c2d5:	outs   dx,BYTE PTR ds:[esi]
  40c2d6:	xor    BYTE PTR [edx+0x718573cf],cl
  40c2dc:	lds    ebx,FWORD PTR [edx+0x3b172d92]
  40c2e2:	mov    ebx,0x17af9911
  40c2e7:	add    bl,al
  40c2e9:	(bad)  
  40c2ea:	mov    edi,0xeaeae5a6
  40c2ef:	pop    edi
  40c2f0:	add    DWORD PTR [eax],edi
  40c2f2:	aam    0x5b
  40c2f4:	mov    esp,0xf312db53
  40c2f9:	loopne 0x40c315
  40c2fb:	pop    ds
  40c2fc:	push   es
  40c2fd:	push   0xbb16a62
  40c302:	sub    dl,dh
  40c304:	or     esi,DWORD PTR [esi-0x39cfe69a]
  40c30a:	icebp  
  40c30b:	scas   al,BYTE PTR es:[edi]
  40c30c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c30d:	lock pop ds
  40c30f:	repnz xor BYTE PTR [ebx+0x35],ch
  40c313:	mov    esp,0x7da21e16
  40c318:	into   
  40c319:	xor    ecx,DWORD PTR [esp+edi*4]
  40c31c:	or     dh,bh
  40c31e:	add    dl,ch
  40c320:	cmc    
  40c321:	scas   al,BYTE PTR es:[edi]
  40c322:	das    
  40c323:	pop    edx
  40c324:	mov    ch,0xb5
  40c326:	stos   DWORD PTR es:[edi],eax
  40c327:	ss ret 0xa3eb
  40c32b:	pop    eax
  40c32c:	sub    eax,0x873884d1
  40c331:	dec    ebx
  40c332:	ret    
  40c333:	mov    edi,0x4c75662d
  40c338:	pop    ebx
  40c339:	push   ebp
  40c33a:	dec    edi
  40c33b:	sub    DWORD PTR [edi],esi
  40c33d:	(bad)  
  40c33f:	popa   
  40c340:	nop
  40c341:	mov    ebp,0xf015b6c1
  40c346:	cmp    DWORD PTR [esi-0x9],esp
  40c349:	or     eax,0x6c13bf22
  40c34e:	fnstsw WORD PTR [edx+0x1e332313]
  40c354:	test   DWORD PTR [eax-0x4c],0xd0f80e4f
  40c35b:	js     0x40c371
  40c35d:	pop    ebp
  40c35e:	add    al,0xad
  40c361:	jp     0x40c384
  40c363:	ss jle 0x40c381
  40c366:	cwde   
  40c367:	adc    eax,0x3e06faab
  40c36c:	(bad)  
  40c36d:	dec    esi
  40c36e:	or     BYTE PTR [edi+0x2542a616],ah
  40c374:	mov    esi,0x767b1d40
  40c379:	mov    edi,0x9fa0187f
  40c37e:	push   0x8807e08a
  40c383:	xchg   DWORD PTR [edx+0x2120a7a8],esi
  40c389:	fisttp DWORD PTR [ebx-0x62]
  40c38c:	push   esi
  40c38d:	xchg   ecx,eax
  40c38e:	or     esi,edi
  40c390:	shl    DWORD PTR [eax-0x12],1
  40c393:	ja     0x40c3b8
  40c395:	cmp    al,0xd8
  40c397:	sub    dl,0x72
  40c39a:	(bad)  
  40c39b:	scas   eax,DWORD PTR es:[edi]
  40c39c:	xor    al,0xa8
  40c39e:	stos   DWORD PTR es:[edi],eax
  40c39f:	push   ebx
  40c3a0:	fisubr WORD PTR [esi+edi*1]
  40c3a3:	or     BYTE PTR [eax-0x72a956c8],0x3f
  40c3aa:	out    0x4,al
  40c3ac:	jbe    0x40c3bf
  40c3ae:	stos   DWORD PTR es:[edi],eax
  40c3af:	xchg   bh,ch
  40c3b1:	mov    eax,ds:0x93141ff6
  40c3b6:	fild   DWORD PTR [edx]
  40c3b8:	adc    eax,0xc7e9b939
  40c3bd:	out    dx,al
  40c3be:	push   eax
  40c3bf:	jmp    0xc339:0xf7c143c6
  40c3c6:	popf   
  40c3c7:	idiv   BYTE PTR [ebx-0x3f8be007]
  40c3cd:	jmp    0xb74b53f
  40c3d2:	xor    al,BYTE PTR [esi-0x23dad252]
  40c3d8:	test   BYTE PTR [ebx+0x27],dl
  40c3db:	jnp    0x40c413
  40c3dd:	xchg   edx,eax
  40c3de:	cwde   
  40c3df:	stos   BYTE PTR es:[edi],al
  40c3e0:	hlt    
  40c3e1:	lss    ecx,FWORD PTR [eax-0x689eb4f2]
  40c3e8:	sub    DWORD PTR [edx+0x39],0x502d8632
  40c3ef:	add    DWORD PTR [esi],ecx
  40c3f1:	pop    ss
  40c3f2:	lods   al,BYTE PTR ds:[esi]
  40c3f3:	std    
  40c3f4:	dec    esi
  40c3f5:	inc    ecx
  40c3f6:	mov    bh,0xdb
  40c3f8:	mov    dh,0x4e
  40c3fa:	js     0x40c42a
  40c3fc:	or     ebp,ecx
  40c3fe:	jg     0x40c387
  40c400:	add    BYTE PTR [edi-0x1818ba98],al
  40c406:	mov    eax,ds:0xd88717bf
  40c40b:	mov    dh,0x77
  40c40d:	sub    DWORD PTR ds:[eax],eax
  40c410:	stos   DWORD PTR es:[edi],eax
  40c411:	mov    al,ds:0x9d2b69df
  40c416:	push   eax
  40c417:	pop    DWORD PTR [edi]
  40c419:	push   eax
  40c41a:	jle    0x40c452
  40c41c:	lods   al,BYTE PTR ds:[esi]
  40c41d:	push   edx
  40c41e:	mov    edx,0xac8e0a69
  40c423:	inc    eax
  40c424:	cmp    ah,bh
  40c426:	ins    BYTE PTR es:[edi],dx
  40c427:	sub    ebx,DWORD PTR [edi]
  40c429:	push   esi
  40c42a:	mov    ecx,0xef5f7cf6
  40c42f:	out    dx,eax
  40c430:	xor    bh,BYTE PTR [eax]
  40c432:	and    edi,DWORD PTR cs:[edx-0x77]
  40c436:	je     0x40c479
  40c438:	sbb    DWORD PTR [edx-0x72],esp
  40c43b:	in     eax,0xa3
  40c43d:	cmp    dl,cl
  40c43f:	pop    esp
  40c440:	sub    DWORD PTR [ecx-0x62],edx
  40c443:	push   ds
  40c444:	loop   0x40c46e
  40c446:	pop    ebx
  40c447:	sahf   
  40c448:	dec    ecx
  40c449:	bound  ebp,QWORD PTR [ecx*8-0x2a749e3a]
  40c450:	push   ss
  40c451:	add    eax,0x8d5a2824
  40c456:	mov    bl,0xf9
  40c458:	inc    ebp
  40c459:	pusha  
  40c45a:	enter  0x5584,0x61
  40c45e:	pop    esp
  40c45f:	or     al,0x76
  40c461:	xchg   esp,eax
  40c462:	test   al,0xef
  40c464:	xor    DWORD PTR [eax-0x48],esi
  40c467:	mov    ebp,0xa9288dc
  40c46c:	sti    
  40c46d:	add    eax,0x138e80e9
  40c472:	sub    al,0xc
  40c474:	and    al,0x26
  40c476:	mov    dl,0x28
  40c478:	mov    esp,DWORD PTR [esi+0x6e4a5b13]
  40c47e:	fstp   DWORD PTR [esi]
  40c480:	dec    ebx
  40c481:	mov    dl,0xd
  40c483:	mov    ebp,0x75d750a
  40c488:	cmp    DWORD PTR [edi+0x29],edx
  40c48b:	shr    BYTE PTR [edi],cl
  40c48d:	cmp    DWORD PTR [eax+eiz*1+0x2a],edi
  40c491:	pop    eax
  40c492:	ret    0x17b6
  40c495:	dec    bh
  40c497:	adc    BYTE PTR [ebp+0x3dff4190],0x2b
  40c49e:	pop    edi
  40c49f:	rcl    dl,1
  40c4a1:	loop   0x40c44b
  40c4a3:	lods   al,BYTE PTR ds:[esi]
  40c4a4:	jecxz  0x40c43d
  40c4a6:	inc    eax
  40c4a7:	ins    BYTE PTR es:[edi],dx
  40c4a8:	lods   al,BYTE PTR ds:[esi]
  40c4a9:	push   ebp
  40c4aa:	adc    dl,BYTE PTR [esi+0x35181be2]
  40c4b0:	fwait
  40c4b1:	jge    0x40c523
  40c4b3:	mov    esi,0x531f4e27
  40c4b8:	xor    eax,0x262914da
  40c4bd:	out    dx,al
  40c4be:	xor    DWORD PTR ds:0x7e4e3a6b,0x8ac6a577
  40c4c8:	or     ecx,DWORD PTR [esi]
  40c4ca:	jl     0x40c45a
  40c4cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4cd:	std    
  40c4ce:	gs aaa 
  40c4d0:	inc    ebp
  40c4d1:	stc    
  40c4d2:	jne    0x40c516
  40c4d4:	add    dh,BYTE PTR [ebx]
  40c4d6:	sub    al,0x73
  40c4d8:	popf   
  40c4d9:	push   ebp
  40c4da:	icebp  
  40c4db:	pop    edx
  40c4dc:	pop    ecx
  40c4dd:	cmp    bl,cl
  40c4df:	ins    DWORD PTR es:[edi],dx
  40c4e0:	dec    eax
  40c4e1:	xchg   BYTE PTR [ebp+0x19],bh
  40c4e4:	test   DWORD PTR [ebp+0x54],ebx
  40c4e7:	cmp    bl,ch
  40c4e9:	push   ecx
  40c4ea:	or     al,0x92
  40c4ec:	xor    cl,dl
  40c4ee:	mov    dh,0x1c
  40c4f0:	lea    ebp,[esi-0x7f067e98]
  40c4f6:	xchg   esp,eax
  40c4f7:	into   
  40c4f8:	iret   
  40c4f9:	pushf  
  40c4fa:	sbb    ebx,esp
  40c4fc:	aam    0x8f
  40c4fe:	dec    ebx
  40c4ff:	mov    bh,0xa1
  40c502:	in     al,0xe0
  40c504:	sbb    al,0x2e
  40c506:	xor    edi,DWORD PTR [ebx+0x7368be50]
  40c50c:	loope  0x40c51a
  40c50e:	mov    esp,ecx
  40c510:	mov    dh,0xfa
  40c512:	or     BYTE PTR [ebx],0xfa
  40c515:	test   DWORD PTR [edi-0xb30baa9],esi
  40c51b:	cdq    
  40c51c:	dec    ecx
  40c51d:	push   0x32d55867
  40c522:	inc    ecx
  40c523:	xor    bh,BYTE PTR [ecx-0x56]
  40c526:	scas   al,BYTE PTR es:[edi]
  40c527:	stos   BYTE PTR es:[edi],al
  40c528:	mov    bh,0x7d
  40c52a:	or     BYTE PTR [edi],ch
  40c52c:	out    0xe3,al
  40c52e:	jae    0x40c527
  40c530:	inc    ebx
  40c531:	fsubr  QWORD PTR [ecx]
  40c533:	mov    BYTE PTR [edx+0x2f],bh
  40c536:	xchg   edi,ebx
  40c538:	ror    DWORD PTR [edi],0xc8
  40c53b:	cmp    BYTE PTR ds:0x5492734a,cl
  40c541:	or     DWORD PTR [edx+ebp*4],edx
  40c544:	daa    
  40c545:	mov    al,0x83
  40c547:	jae    0x40c5be
  40c549:	scas   eax,DWORD PTR es:[edi]
  40c54a:	ja     0x40c4ef
  40c54c:	psrad  mm2,QWORD PTR [ebx+eax*8]
  40c550:	out    0x1,al
  40c552:	mov    ds:0xcf2371c3,al
  40c557:	push   edx
  40c558:	pop    es
  40c559:	cs das 
  40c55b:	and    al,0xc4
  40c55d:	jle    0x40c555
  40c55f:	hlt    
  40c560:	iret   
  40c561:	cmp    DWORD PTR [edi+0x5b],0x62
  40c565:	push   ss
  40c566:	sti    
  40c567:	push   ecx
  40c568:	ins    DWORD PTR es:[edi],dx
  40c569:	sub    edx,DWORD PTR ds:0x83d9744f
  40c56f:	xchg   esp,eax
  40c570:	and    al,0xa0
  40c572:	icebp  
  40c573:	sar    DWORD PTR [ecx],1
  40c575:	inc    ebp
  40c576:	or     ebp,ecx
  40c578:	arpl   WORD PTR [ebp-0x5d],di
  40c57b:	dec    dh
  40c57d:	add    eax,0xa811e878
  40c582:	aaa    
  40c583:	(bad)  
  40c585:	mov    ch,0x56
  40c587:	hlt    
  40c588:	sub    ebp,DWORD PTR [ebp+0x31]
  40c58b:	ficom  WORD PTR [ebp+eax*4-0x4c]
  40c58f:	fcmovbe st,st(1)
  40c591:	push   edx
  40c592:	je     0x40c519
  40c594:	ret    
  40c595:	mov    eax,ds:0xdcff4b82
  40c59a:	sub    DWORD PTR [ebp+0x39],esp
  40c59d:	and    DWORD PTR [eax-0x27],ebx
  40c5a0:	adc    al,0xee
  40c5a2:	int    0xe3
  40c5a4:	sbb    ecx,DWORD PTR [ecx]
  40c5a6:	js     0x40c58a
  40c5a8:	addr16 repz dec ecx
  40c5ab:	adc    eax,0xa712abe1
  40c5b0:	pop    ebx
  40c5b1:	retf   
  40c5b2:	jo     0x40c592
  40c5b4:	add    BYTE PTR [edi-0x1ea0aa8b],cl
  40c5ba:	or     ecx,DWORD PTR [ebp+0x5be13751]
  40c5c0:	pop    ds
  40c5c1:	test   al,0xf8
  40c5c3:	push   eax
  40c5c4:	mov    ecx,0xea9af42e
  40c5c9:	xor    bl,BYTE PTR [ebp+0x7b]
  40c5cc:	ja     0x40c599
  40c5ce:	stc    
  40c5cf:	inc    eax
  40c5d0:	mov    cl,0xb2
  40c5d2:	popf   
  40c5d3:	sbb    edx,esp
  40c5d5:	(bad)  
  40c5d6:	call   0x8e3e:0xc0106724
  40c5dd:	pop    ecx
  40c5de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5df:	loope  0x40c5e2
  40c5e1:	xchg   ebx,eax
  40c5e2:	mov    WORD PTR [eax],?
  40c5e4:	sbb    al,0x59
  40c5e6:	int3   
  40c5e7:	xchg   BYTE PTR [ebx-0xfe49b7],cl
  40c5ed:	inc    ecx
  40c5ee:	push   esp
  40c5ef:	jmp    0xe2ac:0x1efe1a9a
  40c5f6:	aad    0xec
  40c5f8:	in     eax,0x20
  40c5fa:	ds aad 0x35
  40c5fd:	mov    dl,0x7a
  40c5ff:	mul    cl
  40c601:	call   0x55ef:0x51f00f75
  40c608:	test   eax,0xbf32446f
  40c60d:	outs   dx,DWORD PTR ss:[esi]
  40c60f:	push   0xa6679ed
  40c614:	(bad)  
  40c615:	xchg   ebx,eax
  40c616:	rol    DWORD PTR [edx-0x3],cl
  40c619:	adc    ebx,DWORD PTR [ecx-0x17]
  40c61c:	pop    ss
  40c61d:	xchg   DWORD PTR [ebx-0x10],esp
  40c620:	jp     0x40c61d
  40c622:	fmul   st,st(7)
  40c624:	or     eax,0xad46a130
  40c629:	pop    ebp
  40c62a:	and    eax,0xe93f0975
  40c62f:	sar    DWORD PTR [edi+ebp*8-0x417d0fa2],cl
  40c636:	cli    
  40c637:	sbb    DWORD PTR [esp+esi*8+0x6619502a],0xffffffbe
  40c63f:	mov    edx,0xcc4d85c2
  40c644:	inc    edi
  40c645:	jg     0x40c64e
  40c647:	add    BYTE PTR [ebx+0x7a19e13b],ah
  40c64d:	mov    dh,0x7d
  40c64f:	lods   eax,DWORD PTR ds:[esi]
  40c650:	or     eax,0x94f5e843
  40c655:	inc    esi
  40c656:	xor    edx,ebx
  40c658:	loope  0x40c605
  40c65a:	clc    
  40c65b:	mov    edi,0xd5f9f63b
  40c660:	pop    esi
  40c661:	out    dx,al
  40c662:	aam    0xaf
  40c664:	pop    ss
  40c665:	mov    al,0xf0
  40c667:	pop    edx
  40c668:	sbb    al,0xed
  40c66a:	pusha  
  40c66b:	(bad)  
  40c66c:	(bad)  
  40c66d:	and    al,0x8b
  40c66f:	cmp    BYTE PTR [edi-0x3f13efe],ah
  40c675:	sub    DWORD PTR [edx-0x27],0x7c27420f
  40c67c:	mov    ch,0xab
  40c67e:	mov    ecx,0xc1d15d96
  40c683:	mov    DWORD PTR [esi-0x5],esp
  40c686:	xchg   esi,eax
  40c687:	sub    DWORD PTR [eax+0x54],ebp
  40c68a:	jne    0x40c6b8
  40c68c:	inc    edx
  40c68d:	cmp    BYTE PTR [edi],0x2f
  40c690:	and    BYTE PTR [eax+edi*4+0x37],dh
  40c694:	mov    eax,0xf517a9ef
  40c699:	push   ecx
  40c69a:	add    BYTE PTR [edx+0x7733cb66],bh
  40c6a0:	add    eax,0x6fe05314
  40c6a5:	mov    ds:0x8e074ed5,eax
  40c6aa:	jno    0x40c71a
  40c6ac:	inc    ebx
  40c6ad:	jns    0x40c654
  40c6af:	dec    eax
  40c6b0:	rol    BYTE PTR [edi+edx*8-0x46],0xfb
  40c6b5:	adc    DWORD PTR [ecx+0x14817dad],esi
  40c6bb:	pop    esi
  40c6bc:	in     al,dx
  40c6bd:	mov    ebp,0x19e4bccf
  40c6c2:	ja     0x40c73a
  40c6c4:	pop    ds
  40c6c5:	outs   dx,DWORD PTR ds:[esi]
  40c6c6:	ins    BYTE PTR es:[edi],dx
  40c6c7:	inc    edi
  40c6c8:	add    dh,cl
  40c6ca:	and    al,0x90
  40c6cc:	or     bl,bh
  40c6ce:	push   ds
  40c6cf:	in     al,dx
  40c6d0:	mov    BYTE PTR [edx-0x162f1a7a],dl
  40c6d6:	pop    eax
  40c6d7:	in     al,dx
  40c6d8:	cmp    bh,bh
  40c6da:	sub    BYTE PTR [edi],dl
  40c6dc:	pop    edx
  40c6dd:	lea    ecx,[edx+esi*1]
  40c6e0:	outs   dx,DWORD PTR ds:[esi]
  40c6e1:	and    ch,BYTE PTR [esi+0x4]
  40c6e4:	aad    0xa0
  40c6e6:	ins    BYTE PTR es:[edi],dx
  40c6e7:	jecxz  0x40c687
  40c6e9:	call   0x23a1e7d1
  40c6ee:	sahf   
  40c6ef:	daa    
  40c6f0:	cmp    BYTE PTR ds:0xc4c92999,ch
  40c6f6:	cli    
  40c6f7:	cmp    eax,0xc5e39d3b
  40c6fc:	popf   
  40c6fd:	repnz mov edx,0xee46d1e2
  40c703:	scas   eax,DWORD PTR es:[edi]
  40c704:	jmp    0xf5d9:0xa81f16b5
  40c70b:	mov    gs,edi
  40c70d:	push   es
  40c70e:	mov    ah,0x95
  40c710:	fmul   QWORD PTR [ebp+0x8d1983f]
  40c716:	iret   
  40c717:	(bad)  
  40c718:	sub    ebx,DWORD PTR [edx+ebp*2-0x4a]
  40c71c:	or     DWORD PTR [ebx],ebx
  40c71e:	xlat   BYTE PTR ds:[ebx]
  40c71f:	popf   
  40c720:	mov    al,0x4d
  40c722:	enter  0x7911,0x8c
  40c726:	adc    al,0x89
  40c728:	pop    ebx
  40c729:	and    ebx,DWORD PTR [edx]
  40c72b:	mov    WORD PTR [ebp+ecx*8-0x3a],fs
  40c72f:	into   
  40c730:	inc    eax
  40c731:	xchg   BYTE PTR [esp+esi*1+0x68],dl
  40c735:	fnstsw ax
  40c737:	dec    esp
  40c738:	pop    eax
  40c739:	out    dx,al
  40c73a:	xor    eax,0xfa7bd483
  40c73f:	xchg   esp,eax
  40c740:	aas    
  40c741:	adc    bl,bl
  40c743:	push   ss
  40c744:	mov    ?,WORD PTR [edi-0x7f]
  40c747:	repnz sbb eax,0x13f108b4
  40c74d:	add    BYTE PTR [esi],ch
  40c74f:	stc    
  40c750:	pushf  
  40c751:	inc    ecx
  40c752:	xchg   edi,eax
  40c753:	loopne 0x40c75c
  40c755:	sub    DWORD PTR [bp+di+0x16],ebx
  40c759:	jnp    0x40c7aa
  40c75b:	rol    BYTE PTR [esi-0x24],1
  40c75e:	cld    
  40c75f:	push   ebp
  40c760:	pusha  
  40c761:	(bad)  
  40c762:	xchg   ebx,eax
  40c763:	inc    esi
  40c764:	mov    esp,0xe1032eed
  40c769:	xlat   BYTE PTR ds:[ebx]
  40c76a:	mov    cl,BYTE PTR [edx-0x61cce787]
  40c770:	in     eax,0x80
  40c772:	rcl    BYTE PTR [esi+0x62],cl
  40c775:	or     al,0x4c
  40c777:	cld    
  40c778:	in     eax,dx
  40c779:	sub    DWORD PTR [ebp-0x6e349a7e],ebp
  40c77f:	mov    al,ds:0x77d9dbda
  40c784:	jae    0x40c784
  40c786:	adc    ebp,DWORD PTR [eax+esi*2-0x32fcf288]
  40c78d:	int3   
  40c78e:	push   ds
  40c78f:	cdq    
  40c790:	out    dx,eax
  40c791:	sub    eax,0x85d6aa04
  40c796:	mov    ebx,0x968fe3d8
  40c79b:	leave  
  40c79c:	hlt    
  40c79d:	push   ebx
  40c79e:	add    al,0xed
  40c7a0:	inc    edx
  40c7a1:	xchg   DWORD PTR [edi],eax
  40c7a3:	push   0x58
  40c7a5:	xchg   edx,eax
  40c7a6:	xchg   esi,eax
  40c7a7:	std    
  40c7a8:	adc    ebp,DWORD PTR [eax+0x3d]
  40c7ab:	xor    eax,0x2219d9db
  40c7b1:	cli    
  40c7b2:	out    dx,al
  40c7b3:	mov    bh,0x7f
  40c7b5:	xor    eax,0x8b2675c1
  40c7ba:	call   FWORD PTR [edi-0x7c]
  40c7bd:	ins    BYTE PTR es:[edi],dx
  40c7be:	mov    eax,ds:0x4934e621
  40c7c3:	mov    al,0x4a
  40c7c5:	mov    ebp,0xcf1bb2a
  40c7ca:	inc    edi
  40c7cb:	push   0xbddc1d8d
  40c7d0:	icebp  
  40c7d1:	sub    bh,ah
  40c7d3:	clc    
  40c7d4:	ins    BYTE PTR es:[edi],dx
  40c7d5:	pop    ss
  40c7d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7d7:	aaa    
  40c7d8:	retf   
  40c7d9:	loop   0x40c778
  40c7db:	data16 and dh,cl
  40c7de:	aas    
  40c7df:	or     DWORD PTR es:[esi+0x7689971e],eax
  40c7e6:	adc    DWORD PTR [ebx],0x3b025c3b
  40c7ec:	fcomp  DWORD PTR [esi+0x60]
  40c7ef:	inc    ecx
  40c7f0:	mov    BYTE PTR [eax],ah
  40c7f2:	jnp    0x40c7d0
  40c7f4:	les    ecx,FWORD PTR [eax+0x7e]
  40c7f7:	cmc    
  40c7f8:	add    al,0x18
  40c7fa:	ins    BYTE PTR es:[edi],dx
  40c7fb:	shl    BYTE PTR [ebx],0xdd
  40c7fe:	jle    0x40c809
  40c800:	sar    BYTE PTR [ebx-0x26],1
  40c803:	lock gs call 0x58f3386c
  40c80a:	adc    DWORD PTR [esi],esp
  40c80c:	sahf   
  40c80d:	scas   eax,DWORD PTR es:[edi]
  40c80e:	lods   al,BYTE PTR ds:[esi]
  40c80f:	lods   al,BYTE PTR ds:[esi]
  40c810:	adc    esp,ecx
  40c812:	dec    ebp
  40c813:	pop    ss
  40c814:	pusha  
  40c815:	loope  0x40c7a2
  40c817:	pop    ds
  40c818:	daa    
  40c819:	xchg   esp,eax
  40c81a:	cmp    eax,0xfbc0d6db
  40c81f:	cdq    
  40c820:	add    DWORD PTR [ebx-0x1413e02f],0x18743ef6
  40c82a:	mov    cl,0x8d
  40c82c:	leave  
  40c82d:	xchg   esp,eax
  40c82e:	mov    bl,0xf1
  40c830:	adc    esi,0xffffffdf
  40c833:	and    DWORD PTR [ebx-0x16e3e5d6],esi
  40c839:	in     eax,0x32
  40c83b:	mov    cs,edi
  40c83d:	dec    ecx
  40c83e:	daa    
  40c83f:	outs   dx,BYTE PTR ds:[esi]
  40c840:	inc    eax
  40c841:	sbb    edx,DWORD PTR [eax+0x56]
  40c844:	sub    eax,DWORD PTR [ebx]
  40c846:	or     dh,ah
  40c848:	pop    ecx
  40c849:	xor    esi,DWORD PTR [ebx+0x6d]
  40c84c:	je     0x40c7e4
  40c84e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c84f:	fild   QWORD PTR [ecx]
  40c851:	retf   0x3a18
  40c854:	cmp    dh,BYTE PTR [ebp-0xb1aa050]
  40c85a:	push   0x93abc8a4
  40c85f:	loop   0x40c7e4
  40c861:	and    BYTE PTR ds:0x238625d9,bh
  40c867:	test   al,0x61
  40c869:	mov    bh,0x6b
  40c86b:	push   edi
  40c86c:	push   edi
  40c86d:	dec    esp
  40c86e:	mov    ah,dl
  40c870:	mov    bl,0x8d
  40c872:	out    dx,al
  40c873:	(bad)  
  40c874:	outs   dx,BYTE PTR ds:[esi]
  40c875:	mov    edi,DWORD PTR [edi]
  40c877:	mov    cl,0xfa
  40c879:	(bad)
  40c87c:	pop    edx
  40c87d:	outs   dx,BYTE PTR ds:[esi]
  40c87e:	rcr    BYTE PTR [ebp+0x2b],cl
  40c881:	jno    0x40c847
  40c883:	pushf  
  40c884:	mov    ecx,0x9979a03
  40c889:	jb     0x40c896
  40c88b:	ss iretw 
  40c88e:	sbb    eax,0xecdaedb1
  40c893:	in     eax,0x70
  40c895:	pop    eax
  40c896:	in     al,0xb2
  40c898:	push   esi
  40c899:	outs   dx,DWORD PTR ds:[esi]
  40c89a:	sub    DWORD PTR [ebx+0x5f],edi
  40c89d:	inc    esi
  40c89e:	repnz mov ds:0xc74d7663,al
  40c8a4:	xor    al,0x94
  40c8a6:	sub    ebx,edx
  40c8a8:	stos   BYTE PTR es:[edi],al
  40c8a9:	dec    ecx
  40c8aa:	xor    ebp,ecx
  40c8ac:	repz test BYTE PTR [ecx+edx*2-0x74bdae8c],dl
  40c8b4:	or     BYTE PTR [ebx+edx*4],ch
  40c8b7:	icebp  
  40c8b8:	in     eax,0xb9
  40c8ba:	dec    ecx
  40c8bb:	outs   dx,DWORD PTR ds:[esi]
  40c8bc:	int    0xab
  40c8be:	icebp  
  40c8bf:	test   DWORD PTR [edx-0x3e],esp
  40c8c2:	jne    0x40c84d
  40c8c4:	jno    0x40c933
  40c8c6:	adc    al,BYTE PTR [ebp-0x23]
  40c8c9:	add    al,0xf2
  40c8cb:	cmp    BYTE PTR [ecx],0x4a
  40c8ce:	inc    esp
  40c8cf:	jecxz  0x40c902
  40c8d1:	jg     0x40c932
  40c8d3:	cdq    
  40c8d4:	push   ss
  40c8d5:	mov    bl,0x69
  40c8d7:	mov    cs,WORD PTR [esi-0x6ac3283a]
  40c8dd:	xchg   ebx,eax
  40c8de:	jae    0x40c936
  40c8e0:	pop    ss
  40c8e1:	mov    esi,0x7781b7d4
  40c8e6:	cmp    al,0xcd
  40c8e8:	add    eax,0x8373b47a
  40c8ed:	and    eax,0x5ace1d50
  40c8f2:	je     0x40c87a
  40c8f4:	adc    DWORD PTR [esi],0x20
  40c8f7:	(bad)  
  40c8f8:	outs   dx,BYTE PTR ds:[esi]
  40c8f9:	js     0x40c939
  40c8fb:	loop   0x40c885
  40c8fd:	push   edx
  40c8fe:	pop    es
  40c8ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c900:	sub    dh,BYTE PTR [ebx+edi*4+0x785c22ec]
  40c907:	mov    bh,BYTE PTR [ecx-0x2c34a94e]
  40c90d:	push   ebp
  40c90e:	cdq    
  40c90f:	inc    esi
  40c910:	cmc    
  40c911:	(bad)  
  40c912:	nop
  40c913:	hlt    
  40c914:	xor    edx,DWORD PTR [edx+0x66]
  40c917:	repz xchg edi,eax
  40c919:	xor    ecx,0x28
  40c91c:	sbb    eax,0x6d5c3aaf
  40c921:	adc    eax,0xdec95574
  40c926:	loopne 0x40c8d0
  40c928:	push   fs
  40c92a:	xor    al,0x1c
  40c92c:	mov    esp,0x66fc4bfa
  40c931:	outs   dx,BYTE PTR ds:[esi]
  40c932:	icebp  
  40c933:	cmp    eax,DWORD PTR [ebx]
  40c935:	add    DWORD PTR [edx-0x1b81c984],ebp
  40c93b:	(bad)  
  40c93c:	cmp    al,0xaa
  40c93e:	daa    
  40c93f:	pop    edi
  40c940:	and    al,dh
  40c942:	dec    ecx
  40c943:	pushf  
  40c944:	xchg   ebp,eax
  40c945:	jle    0x40c907
  40c947:	ja     0x40c95d
  40c949:	pop    ebx
  40c94a:	sub    ebx,ecx
  40c94c:	ins    DWORD PTR es:[edi],dx
  40c94d:	inc    esi
  40c94e:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40c950:	mov    es,WORD PTR [ecx+0x56328f90]
  40c956:	xchg   BYTE PTR [esi+eax*2],cl
  40c959:	sub    ebx,DWORD PTR [ebx+edi*1-0x5f]
  40c95d:	aam    0x24
  40c95f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax-0x5bed94a3]
  40d00c:	push   ss
  40d00d:	mov    dl,0xe9
  40d00f:	jl     0x40d08d
  40d011:	pop    es
  40d012:	pop    edi
  40d013:	jl     0x40d091
  40d015:	cli    
  40d016:	test   al,0x17
  40d018:	and    bl,bh
  40d01a:	jp     0x40cfd1
  40d01c:	(bad)  
  40d01e:	mov    cl,0x57
  40d020:	fld    DWORD PTR [eax+0x4d]
  40d023:	add    eax,0x1b4f1a95
  40d028:	mov    WORD PTR [esp+eiz*4],ax
  40d02c:	push   esi
  40d02d:	cld    
  40d02e:	sbb    al,0xcd
  40d030:	sub    cl,cl
  40d032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d033:	push   ebx
  40d034:	pop    eax
  40d035:	jb     0x40d069
  40d037:	das    
  40d038:	div    DWORD PTR [edi-0x78]
  40d03b:	and    eax,0x756df58b
  40d040:	into   
  40d041:	push   edx
  40d042:	fnstenv [eax+0x79f3f046]
  40d048:	sub    eax,eax
  40d04a:	nop
  40d04b:	mov    eax,0x408e83e0
  40d050:	es mov ebp,0x4e320e57
  40d056:	mov    ds:0x38620f85,al
  40d05b:	mov    eax,0xbf7ccfde
  40d060:	jmp    0x39946597
  40d065:	inc    esi
  40d066:	cmp    al,0x95
  40d068:	jb     0x40d07e
  40d06a:	xor    esp,edx
  40d06c:	int3   
  40d06d:	fld    QWORD PTR [ebp+eiz*2+0xdbc088d]
  40d074:	daa    
  40d075:	sub    BYTE PTR [esi+ebp*2],bl
  40d078:	retf   
  40d079:	aaa    
  40d07a:	ins    BYTE PTR es:[edi],dx
  40d07b:	dec    edx
  40d07c:	mov    ebp,0x8bb0f7f1
  40d081:	adc    BYTE PTR [edi-0x6f2a89c0],0x1a
  40d088:	add    BYTE PTR [edx+0x7c102276],ah
  40d08e:	dec    eax
  40d08f:	pusha  
  40d090:	data16 out 0x31,al
  40d093:	rol    DWORD PTR [esi+0x6d4d37bf],cl
  40d099:	dec    edi
  40d09a:	pop    eax
  40d09b:	outs   dx,DWORD PTR ds:[esi]
  40d09c:	xchg   esi,eax
  40d09d:	push   ss
  40d09e:	inc    ebx
  40d09f:	mov    eax,ds:0x2c6fd6b3
  40d0a4:	idiv   DWORD PTR [edx-0x51]
  40d0a7:	fild   QWORD PTR [edx]
  40d0a9:	arpl   WORD PTR [esi-0x13e0e232],di
  40d0af:	adc    edx,edx
  40d0b1:	and    eax,0xfddcfd62
  40d0b6:	and    eax,0x8e212206
  40d0bb:	out    dx,al
  40d0bc:	call   DWORD PTR [edi+0x37]
  40d0bf:	xor    eax,0x48e8187c
  40d0c4:	xchg   edx,eax
  40d0c5:	test   DWORD PTR [ecx-0x1],edx
  40d0c8:	jo     0x40d0b4
  40d0ca:	push   cs
  40d0cb:	arpl   WORD PTR [esi+0x323b781c],cx
  40d0d1:	cmp    eax,0x279173ad
  40d0d6:	pop    ebx
  40d0d7:	sbb    DWORD PTR [ebx+0x52953845],ecx
  40d0dd:	jle    0x40d088
  40d0df:	add    ebp,eax
  40d0e1:	sbb    ecx,DWORD PTR [ebx+edx*1+0x70c29e47]
  40d0e8:	xor    ebx,DWORD PTR [ebx+0x6cc7c774]
  40d0ee:	daa    
  40d0ef:	nop
  40d0f0:	scas   eax,DWORD PTR es:[edi]
  40d0f1:	aad    0xc1
  40d0f3:	and    dl,0x3f
  40d0f6:	inc    edx
  40d0f7:	lahf   
  40d0f8:	push   cs
  40d0f9:	pop    esp
  40d0fa:	push   cs
  40d0fb:	outs   dx,BYTE PTR ds:[esi]
  40d0fc:	sbb    BYTE PTR [eax+edi*4-0x29],ah
  40d100:	call   0xb4fa:0x56fc179c
  40d107:	sub    ecx,DWORD PTR [eax-0x12]
  40d10a:	dec    edi
  40d10b:	sub    bh,BYTE PTR [esp+edi*1+0x3196ec66]
  40d112:	and    eax,0x31bd4282
  40d117:	sti    
  40d118:	aas    
  40d119:	mov    al,0x18
  40d11b:	xchg   esi,eax
  40d11c:	pop    ds
  40d11d:	inc    esp
  40d11e:	mov    DWORD PTR [ecx+0x2b0bf995],edx
  40d124:	push   0xbb1a6fe7
  40d129:	jno    0x40d1aa
  40d12b:	mov    WORD PTR [ecx],gs
  40d12d:	aaa    
  40d12e:	into   
  40d12f:	clc    
  40d130:	dec    ebp
  40d131:	add    BYTE PTR [eax-0x77b88cee],bh
  40d137:	in     al,dx
  40d138:	cmc    
  40d139:	cmc    
  40d13a:	or     DWORD PTR [esp+edi*1+0x6ea39a4c],0x7193cf86
  40d145:	cld    
  40d146:	pop    ebp
  40d147:	fisttp WORD PTR [eax]
  40d149:	lds    edx,FWORD PTR [esi+0x66]
  40d14c:	out    0x8c,eax
  40d14e:	das    
  40d14f:	pusha  
  40d150:	add    cl,bh
  40d152:	in     al,0x0
  40d154:	inc    ebp
  40d156:	cmc    
  40d157:	out    dx,al
  40d158:	push   edi
  40d159:	add    BYTE PTR [ebx+0x425e080f],bl
  40d15f:	aaa    
  40d160:	mov    ds:0xd0f18249,eax
  40d165:	inc    edi
  40d166:	pop    eax
  40d167:	cli    
  40d168:	jae    0x40d173
  40d16a:	sbb    dh,0x6a
  40d16d:	stos   DWORD PTR es:[edi],eax
  40d16e:	jae    0x40d170
  40d170:	icebp  
  40d171:	imul   bl
  40d173:	lds    edi,FWORD PTR [ebx+ebx*1+0x44]
  40d177:	out    0x8a,eax
  40d179:	push   es
  40d17a:	or     al,0x98
  40d17c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d17e:	loope  0x40d137
  40d180:	scas   eax,DWORD PTR es:[edi]
  40d181:	xchg   si,ax
  40d183:	pop    edx
  40d184:	push   esi
  40d185:	push   esi
  40d186:	in     al,0x46
  40d188:	imul   ebx,DWORD PTR [ebx-0x48],0xffffffaa
  40d18c:	out    dx,eax
  40d18d:	aad    0x73
  40d18f:	cld    
  40d190:	lea    ebp,[edx-0x38]
  40d193:	bound  edx,QWORD PTR [ebp+ecx*8+0x74]
  40d197:	xchg   esi,eax
  40d198:	and    eax,ebp
  40d19a:	and    edi,edx
  40d19c:	push   cs
  40d19d:	sub    edi,DWORD PTR [ecx-0x2e31d0b0]
  40d1a3:	pop    es
  40d1a4:	lahf   
  40d1a5:	sbb    al,0x62
  40d1a7:	fwait
  40d1a8:	mov    ecx,0xa285fcbe
  40d1ad:	dec    ecx
  40d1ae:	jns    0x40d157
  40d1b0:	jge    0x40d1bd
  40d1b2:	cmc    
  40d1b3:	xchg   edx,eax
  40d1b4:	push   ebp
  40d1b5:	adc    DWORD PTR [esi+0x68],esi
  40d1b8:	in     al,dx
  40d1b9:	stc    
  40d1ba:	jno    0x40d21c
  40d1bc:	pop    eax
  40d1bd:	aam    0x20
  40d1bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1c0:	retf   0x2f43
  40d1c3:	lods   eax,DWORD PTR ds:[esi]
  40d1c4:	fild   WORD PTR [eax+0x21]
  40d1c7:	test   al,0x6d
  40d1c9:	hlt    
  40d1ca:	in     eax,0x2b
  40d1cc:	pushf  
  40d1cd:	jns    0x40d216
  40d1cf:	mov    edi,ss
  40d1d1:	xchg   edi,eax
  40d1d2:	or     eax,DWORD PTR [edx-0x43]
  40d1d5:	in     eax,0x63
  40d1d7:	add    BYTE PTR [edx-0x57],cl
  40d1da:	loope  0x40d198
  40d1dc:	push   0x11
  40d1de:	xchg   esp,eax
  40d1df:	mov    ah,0xde
  40d1e1:	xchg   BYTE PTR [edx-0x611f1dbf],dl
  40d1e7:	sahf   
  40d1e8:	(bad)  
  40d1eb:	cli    
  40d1ec:	scas   al,BYTE PTR es:[edi]
  40d1ed:	dec    eax
  40d1ee:	aas    
  40d1ef:	retf   
  40d1f0:	shl    BYTE PTR ds:0xcf4caa1c,0x3c
  40d1f7:	adc    eax,0xddaac00
  40d1fc:	sbb    BYTE PTR [edi+edi*1],ch
  40d1ff:	mov    dh,0x99
  40d201:	gs dec ecx
  40d203:	fcmove st,st(6)
  40d205:	std    
  40d206:	push   esp
  40d207:	dec    ebp
  40d208:	dec    ecx
  40d209:	inc    eax
  40d20a:	xchg   esp,eax
  40d20b:	retf   0x2156
  40d20e:	sub    edx,esp
  40d210:	sbb    al,0xde
  40d212:	sub    ebx,DWORD PTR [esi+0x5906bbd0]
  40d218:	pop    ecx
  40d219:	rol    DWORD PTR [eax-0x49],cl
  40d21c:	loope  0x40d1a8
  40d21e:	jle    0x40d235
  40d220:	or     al,bl
  40d222:	data16 sbb al,0xc8
  40d225:	mov    esi,0x6176fc37
  40d22a:	das    
  40d22b:	shl    DWORD PTR [eax+0x55],1
  40d22e:	inc    ecx
  40d22f:	sahf   
  40d230:	js     0x40d2a3
  40d232:	sub    al,0x24
  40d234:	and    DWORD PTR [ecx-0x71],esp
  40d237:	sbb    BYTE PTR ds:0x5e296523,0x6e
  40d23e:	ret    
  40d23f:	adc    al,0x30
  40d241:	and    eax,0xa12fc8f1
  40d246:	or     al,0xb8
  40d248:	pop    esp
  40d249:	int3   
  40d24a:	retf   0xf256
  40d24d:	push   ecx
  40d24e:	xor    eax,0x2ee048dd
  40d253:	dec    esp
  40d254:	add    eax,0xddeee5f0
  40d259:	out    dx,al
  40d25a:	sub    edx,DWORD PTR [edx+0x29ca3a57]
  40d260:	outs   dx,BYTE PTR ds:[esi]
  40d261:	mov    dh,BYTE PTR [ebx+edi*2-0x45]
  40d265:	sub    DWORD PTR [eax+0x1420e3f5],esi
  40d26b:	stos   BYTE PTR es:[edi],al
  40d26c:	or     dh,cl
  40d26e:	pusha  
  40d26f:	mov    bl,0x5e
  40d271:	pop    es
  40d272:	push   ds
  40d273:	gs test al,0x23
  40d276:	or     ebx,ebx
  40d278:	push   0x861934be
  40d27d:	call   FWORD PTR [eax+0x311f8649]
  40d283:	pop    ebx
  40d284:	jmp    0x4d3fd886
  40d289:	shr    BYTE PTR [edx+0x67cd7edc],0xf4
  40d290:	fisttp DWORD PTR [eax-0x53]
  40d293:	cmp    al,0xc7
  40d295:	fadd   DWORD PTR [eax-0x38]
  40d298:	arpl   bp,di
  40d29a:	pop    ebp
  40d29b:	out    0x8a,eax
  40d29d:	neg    DWORD PTR [ebx]
  40d29f:	(bad)  
  40d2a0:	adc    dl,BYTE PTR [ebp-0x7e763445]
  40d2a6:	add    bh,cl
  40d2a8:	add    BYTE PTR [esi+0x3aa8b241],al
  40d2ae:	mov    ebx,0x7f1e0657
  40d2b3:	mov    ah,BYTE PTR [edx-0x7f3c5ac4]
  40d2b9:	(bad)  
  40d2ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2bb:	into   
  40d2bc:	test   al,0xa
  40d2be:	loop   0x40d31c
  40d2c0:	in     al,dx
  40d2c1:	cmp    al,0xa5
  40d2c3:	fsub   st(0),st
  40d2c5:	ins    BYTE PTR es:[edi],dx
  40d2c6:	retf   0x5b02
  40d2c9:	in     eax,0x93
  40d2cb:	sbb    esp,0xe528c25d
  40d2d1:	sub    al,ah
  40d2d3:	xchg   BYTE PTR [edx],dl
  40d2d5:	jle    0x40d2cd
  40d2d7:	jno    0x40d2d7
  40d2d9:	jge    0x40d268
  40d2db:	mov    dh,0xa5
  40d2dd:	mov    cl,BYTE PTR [ecx]
  40d2df:	sub    al,0x77
  40d2e1:	gs pushf 
  40d2e3:	outs   dx,DWORD PTR ds:[esi]
  40d2e4:	inc    ebp
  40d2e5:	fmul   QWORD PTR [edx]
  40d2e7:	pop    ecx
  40d2e8:	jnp    0x40d310
  40d2ea:	ret    0x631e
  40d2ed:	test   BYTE PTR [esi],cl
  40d2ef:	in     al,0x71
  40d2f1:	mov    ds:0x1663e3d,eax
  40d2f6:	jbe    0x40d349
  40d2f8:	pop    ebx
  40d2f9:	cmp    dl,BYTE PTR [edi+ecx*8]
  40d2fc:	cs test eax,0xc3907a38
  40d302:	out    dx,eax
  40d303:	fidiv  DWORD PTR [ebx-0x80]
  40d306:	xchg   ch,dl
  40d308:	cmp    al,0x7e
  40d30a:	mov    edi,0x41a3786b
  40d30f:	retf   
  40d310:	les    esi,FWORD PTR [ecx-0xe]
  40d313:	xchg   edx,eax
  40d314:	pop    edx
  40d315:	add    DWORD PTR [esi+ecx*4+0x725455fc],edx
  40d31c:	dec    ecx
  40d31d:	loop   0x40d2ba
  40d31f:	xor    esi,DWORD PTR [eax]
  40d321:	or     esp,DWORD PTR [ecx+0x493857aa]
  40d327:	cmp    ah,BYTE PTR [esi+ebp*4]
  40d32a:	rcr    BYTE PTR [ebx+0x44ca1e5f],0xf4
  40d331:	rcr    BYTE PTR [ecx],1
  40d333:	jnp    0x40d2c4
  40d335:	push   ds
  40d336:	sub    eax,0x45a3c02a
  40d33b:	push   0xae061b2a
  40d340:	mov    eax,0xb43a8783
  40d345:	enter  0xbdb5,0xdd
  40d349:	mov    esi,DWORD PTR [ebx+eax*2-0x20]
  40d34d:	mov    edi,0xfee2304d
  40d352:	and    DWORD PTR [ebx+ebp*4+0x513438ce],ebp
  40d359:	fwait
  40d35a:	test   eax,0x9a75e32f
  40d35f:	adc    dh,BYTE PTR [eax-0x32]
  40d362:	je     0x40d33a
  40d364:	adc    al,0x6
  40d366:	add    edi,DWORD PTR [ebp+0x47]
  40d369:	mov    WORD PTR [eax-0x4c],gs
  40d36c:	call   0x5d4c42af
  40d371:	jmp    0x38f7:0xb8d838a6
  40d378:	mov    ch,0xec
  40d37a:	pop    eax
  40d37b:	xchg   dl,dl
  40d37d:	bound  edx,QWORD PTR [edi-0x62e8d5aa]
  40d383:	mov    bh,0x10
  40d385:	inc    edi
  40d386:	int    0xb8
  40d388:	lds    ebp,FWORD PTR [edi-0x6b]
  40d38b:	cmp    DWORD PTR [esp+ecx*8],0xffffffc8
  40d38f:	add    eax,0x98a0aa8a
  40d394:	addr16 retf 0xb13
  40d398:	bound  edx,QWORD PTR [ecx]
  40d39a:	jbe    0x40d3fe
  40d39c:	jmp    0xc956ebae
  40d3a1:	iret   
  40d3a2:	jmp    0xd15038cb
  40d3a7:	push   ebx
  40d3a8:	jae    0x40d32b
  40d3aa:	std    
  40d3ab:	mov    ch,BYTE PTR [eax]
  40d3ad:	stos   BYTE PTR es:[edi],al
  40d3ae:	into   
  40d3af:	xor    DWORD PTR [eax+0x7a3b378b],eax
  40d3b5:	test   DWORD PTR [ebx-0x57],ebx
  40d3b8:	es add eax,0xc1bdde95
  40d3be:	repnz popa 
  40d3c0:	xchg   ebp,ebx
  40d3c2:	ins    BYTE PTR es:[edi],dx
  40d3c3:	adc    bh,ah
  40d3c5:	ins    BYTE PTR es:[edi],dx
  40d3c6:	pop    es
  40d3c7:	push   ds
  40d3c8:	jo     0x40d34d
  40d3ca:	jo     0x40d39d
  40d3cc:	mov    WORD PTR [esi+0x5709e971],cs
  40d3d2:	ins    DWORD PTR es:[edi],dx
  40d3d3:	jbe    0x40d398
  40d3d5:	adc    ebp,eax
  40d3d7:	pusha  
  40d3d8:	add    BYTE PTR [ebp-0xb],ah
  40d3db:	mov    bl,bl
  40d3dd:	ja     0x40d376
  40d3df:	shl    DWORD PTR [ebp+0x16],0xdd
  40d3e3:	in     eax,dx
  40d3e4:	mov    esp,0x3a988fa5
  40d3e9:	imul   esp,eax,0xffffff97
  40d3ec:	aaa    
  40d3ed:	inc    ecx
  40d3ee:	sub    bl,BYTE PTR [ecx]
  40d3f0:	inc    esp
  40d3f1:	js     0x40d381
  40d3f3:	inc    ecx
  40d3f4:	mov    edi,0xffba22df
  40d3f9:	xor    eax,0xc9aa4fd9
  40d3fe:	pop    es
  40d3ff:	sbb    esp,esi
  40d401:	mov    bh,0x94
  40d403:	mov    ebp,0xc8988b3c
  40d408:	clc    
  40d409:	arpl   bp,cx
  40d40b:	xchg   DWORD PTR [esi],ebx
  40d40d:	inc    esp
  40d40e:	inc    edi
  40d40f:	pop    eax
  40d410:	xchg   edx,eax
  40d411:	addr16 shl bl,cl
  40d414:	push   0x5c5b24a9
  40d419:	ret    
  40d41a:	out    0xc,al
  40d41c:	mov    fs,esp
  40d41e:	add    bh,BYTE PTR [eax]
  40d420:	fcmovnb st,st(7)
  40d422:	jb     0x40d40a
  40d424:	push   0x6f
  40d426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d427:	sbb    bh,dh
  40d429:	shl    esp,cl
  40d42b:	sub    DWORD PTR [ebx+0x32],esi
  40d42e:	addr16 dec eax
  40d430:	xchg   DWORD PTR [edi],edx
  40d432:	xchg   DWORD PTR [edx],esp
  40d434:	sbb    al,0x22
  40d436:	clc    
  40d437:	lea    eax,[eax]
  40d439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d43a:	pushf  
  40d43b:	mov    edi,ss
  40d43d:	xor    ebx,eax
  40d43f:	out    0x13,al
  40d441:	test   DWORD PTR [ebp-0x763178f],esp
  40d447:	jb     0x40d49e
  40d449:	test   al,0xe6
  40d44b:	add    al,BYTE PTR [edi+0x62]
  40d44e:	outs   dx,DWORD PTR ds:[esi]
  40d44f:	mov    ss,WORD PTR [esi]
  40d451:	fwait
  40d452:	sbb    dh,BYTE PTR [edi-0x5af754dc]
  40d458:	or     esi,DWORD PTR [edx-0x3426d7e6]
  40d45e:	mov    WORD PTR [edi-0x70],fs
  40d461:	ficom  DWORD PTR [eax+edi*8+0x41730fc4]
  40d468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d469:	adc    bh,cl
  40d46b:	rcr    ecx,0x64
  40d46e:	arpl   ax,sp
  40d470:	retf   
  40d471:	inc    edi
  40d472:	dec    edx
  40d473:	stos   BYTE PTR es:[edi],al
  40d474:	sar    DWORD PTR [edi],cl
  40d476:	test   al,0x75
  40d478:	dec    ebp
  40d479:	lock call 0xa48cbad7
  40d47f:	das    
  40d480:	xor    ecx,esi
  40d482:	jbe    0x40d501
  40d484:	ja     0x40d47f
  40d486:	outs   dx,DWORD PTR ds:[esi]
  40d487:	mov    BYTE PTR [edx],cl
  40d489:	(bad)  
  40d48a:	mov    edi,0xe3ea5a83
  40d48f:	xor    cl,bl
  40d491:	cwde   
  40d492:	sub    edi,DWORD PTR [edx-0x54]
  40d495:	mov    bl,BYTE PTR [esi]
  40d497:	jmp    0x40d4ff
  40d499:	mov    al,ds:0xb6e0034b
  40d49e:	sub    al,BYTE PTR ss:[ebx+0x52]
  40d4a2:	mov    ebx,0xb8bd78ae
  40d4a7:	je     0x40d4df
  40d4a9:	inc    ebx
  40d4aa:	push   ebp
  40d4ab:	push   0xf9fb8a25
  40d4b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4b1:	cmp    eax,0x50f23314
  40d4b6:	dec    edx
  40d4b7:	and    eax,0x7ade20b3
  40d4bc:	rcl    BYTE PTR cs:[eax],cl
  40d4bf:	or     BYTE PTR [edi],dh
  40d4c1:	mov    esp,0x1ddb00d9
  40d4c6:	add    BYTE PTR [esi],dl
  40d4c8:	aaa    
  40d4c9:	fisttp DWORD PTR [edi]
  40d4cb:	xchg   ecx,eax
  40d4cc:	sbb    BYTE PTR [edi-0x55],bl
  40d4cf:	and    BYTE PTR ds:0x24cd6648,al
  40d4d5:	inc    edi
  40d4d6:	je     0x40d467
  40d4d8:	and    eax,0xabc51d10
  40d4dd:	mov    ch,BYTE PTR [ebx+eiz*2-0x597c419e]
  40d4e4:	dec    edx
  40d4e5:	test   BYTE PTR [edi+0x30082476],0x9e
  40d4ec:	mov    cl,0x7c
  40d4ee:	jmp    FWORD PTR [ecx+0x3b]
  40d4f1:	popa   
  40d4f2:	icebp  
  40d4f3:	xor    eax,0xc349992d
  40d4f8:	mul    BYTE PTR [ebp+0x5]
  40d4fb:	sub    BYTE PTR [ebp+0x52],bh
  40d4fe:	push   edi
  40d4ff:	adc    esp,ebp
  40d501:	push   ebx
  40d502:	dec    eax
  40d503:	push   0x258a3682
  40d508:	push   ebp
  40d509:	inc    edx
  40d50a:	inc    ecx
  40d50b:	fst    QWORD PTR [edi-0x55]
  40d50e:	dec    esi
  40d50f:	clc    
  40d510:	xchg   ebx,eax
  40d511:	inc    esi
  40d512:	mov    ds:0x1656d603,eax
  40d517:	test   DWORD PTR [edi],ecx
  40d519:	aas    
  40d51a:	add    DWORD PTR ds:0xa204f1c6,edx
  40d520:	pop    es
  40d521:	sub    eax,DWORD PTR [ebx]
  40d523:	or     DWORD PTR [ebp-0x3e],ebp
  40d526:	add    BYTE PTR [esi+0x77],dl
  40d529:	adc    al,BYTE PTR [esi+0x7195ec7f]
  40d52f:	push   edi
  40d530:	and    bh,bl
  40d532:	sbb    al,0xb7
  40d534:	scas   eax,DWORD PTR es:[edi]
  40d535:	xor    eax,0xf409e45c
  40d53a:	jl     0x40d4cb
  40d53c:	pop    esp
  40d53d:	and    BYTE PTR [esi+ebx*2-0x4f8b6605],ch
  40d544:	pop    ds
  40d545:	fadd   DWORD PTR [ecx-0x29f2cd3f]
  40d54b:	sti    
  40d54c:	mov    al,0x48
  40d54e:	popf   
  40d54f:	and    BYTE PTR es:[ecx-0x43],dl
  40d553:	inc    si
  40d555:	lahf   
  40d556:	pushf  
  40d557:	mov    dh,0xba
  40d559:	xor    eax,DWORD PTR [esi-0x5a8eafe9]
  40d55f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d560:	retf   
  40d561:	push   ebp
  40d562:	xor    ebp,edx
  40d564:	dec    eax
  40d565:	je     0x40d595
  40d567:	lahf   
  40d568:	adc    esp,0x1
  40d56b:	jmp    0xb072d11a
  40d570:	and    edx,DWORD PTR ds:0xcb13a2e4
  40d576:	adc    DWORD PTR [esi-0x38],edx
  40d579:	neg    BYTE PTR [ebx+esi*1+0x2746cc41]
  40d580:	sbb    bh,BYTE PTR ds:0xb2179d81
  40d586:	sar    BYTE PTR [edi-0x41],1
  40d589:	in     eax,0x71
  40d58b:	shl    edx,cl
  40d58d:	enter  0xbe29,0x43
  40d591:	cmp    eax,0xb4546df2
  40d596:	fsubr  DWORD PTR [eax-0x2b]
  40d599:	in     al,0x8a
  40d59b:	(bad)  
  40d59d:	mov    ecx,0x204fc92
  40d5a2:	pop    ebx
  40d5a3:	dec    ebx
  40d5a4:	add    al,0x84
  40d5a6:	dec    ecx
  40d5a7:	test   al,0xa0
  40d5a9:	xchg   esi,edi
  40d5ab:	pusha  
  40d5ac:	add    BYTE PTR [edx+0x728657],bh
  40d5b2:	sbb    ebx,esp
  40d5b4:	jns    0x40d5e9
  40d5b6:	popf   
  40d5b7:	(bad)  
  40d5b8:	out    0xd,al
  40d5ba:	adc    esp,DWORD PTR [eax]
  40d5bc:	ret    
  40d5bd:	xchg   ecx,eax
  40d5be:	retf   
  40d5bf:	adc    BYTE PTR [ebx-0x1ddd2518],0x46
  40d5c6:	ffree  st(5)
  40d5c8:	(bad)  
  40d5ca:	fist   WORD PTR [ebx]
  40d5cc:	fadd   DWORD PTR [ebp-0x54]
  40d5cf:	(bad)  
  40d5d0:	pop    ebp
  40d5d1:	jbe    0x40d5ab
  40d5d3:	fwait
  40d5d4:	scas   eax,DWORD PTR es:[edi]
  40d5d5:	xor    edi,DWORD PTR gs:[edi]
  40d5d8:	outs   dx,DWORD PTR ds:[esi]
  40d5d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5da:	jmp    0xf7888270
  40d5df:	sbb    eax,0x6ea0a281
  40d5e4:	or     ebx,DWORD PTR [edi-0x25]
  40d5e7:	jbe    0x40d603
  40d5e9:	out    0xeb,al
  40d5eb:	nop
  40d5ec:	scas   eax,DWORD PTR es:[edi]
  40d5ed:	loopne 0x40d64e
  40d5ef:	es or  edx,edx
  40d5f2:	out    dx,al
  40d5f3:	rcr    DWORD PTR [edx],cl
  40d5f5:	mov    ecx,0xfff0f224
  40d5fa:	test   BYTE PTR [edi],ch
  40d5fc:	and    esi,ecx
  40d5fe:	push   0xffffffba
  40d600:	sahf   
  40d601:	int    0xa5
  40d603:	sbb    dh,BYTE PTR [ecx+0x30731b7e]
  40d609:	push   ebx
  40d60a:	fs stc 
  40d60c:	lods   al,BYTE PTR ds:[esi]
  40d60d:	jns    0x40d60c
  40d60f:	sbb    eax,0x8a265a8f
  40d614:	(bad)  
  40d615:	jl     0x40d618
  40d617:	inc    edx
  40d618:	jg     0x40d625
  40d61a:	in     al,dx
  40d61b:	pop    ecx
  40d61c:	sub    BYTE PTR [edi-0x3d],ch
  40d61f:	lods   al,BYTE PTR ds:[esi]
  40d620:	fisub  WORD PTR [ecx]
  40d622:	int    0xf4
  40d624:	push   ecx
  40d625:	push   edi
  40d626:	pop    ecx
  40d627:	(bad)  
  40d628:	cmp    al,0x5d
  40d62a:	lods   al,BYTE PTR ds:[esi]
  40d62b:	sti    
  40d62c:	sub    DWORD PTR [eax-0x52],0xe6bf84b2
  40d633:	jbe    0x40d667
  40d635:	sub    eax,0x428f9c8
  40d63a:	mov    ah,0xd7
  40d63c:	test   eax,0x9c76857c
  40d641:	pop    edx
  40d642:	or     ah,ch
  40d644:	or     al,0xd3
  40d646:	mov    bh,0x8b
  40d648:	jbe    0x40d5cc
  40d64a:	repz fnsetpm(287 only) 
  40d64d:	mov    esp,0x32a108b5
  40d652:	ins    DWORD PTR es:[edi],dx
  40d653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d654:	cmp    DWORD PTR [edx],0x1dfdce19
  40d65a:	ds shl ebx,0x1e
  40d65e:	lea    edi,ss:[ebx+0x294e982]
  40d665:	test   edx,esi
  40d667:	jmp    0x40d6b5
  40d669:	mov    cl,0x70
  40d66b:	push   es
  40d66c:	or     ah,0x59
  40d66f:	sar    BYTE PTR [eax],cl
  40d671:	jp     0x40d63a
  40d673:	mov    al,0x98
  40d675:	jecxz  0x40d6ed
  40d677:	pop    ecx
  40d678:	int    0xab
  40d67a:	(bad)  
  40d67b:	(bad)  
  40d67c:	imul   esi,DWORD PTR [esi],0xffffffcd
  40d67f:	frstor [eax]
  40d681:	pxor   mm6,mm6
  40d684:	push   esp
  40d685:	or     dl,ah
  40d687:	test   eax,0xbe03f324
  40d68c:	or     DWORD PTR [edi],esp
  40d68e:	mov    esi,0x91a5959a
  40d693:	xchg   ecx,eax
  40d694:	or     bl,ch
  40d696:	sbb    edi,esi
  40d698:	pusha  
  40d699:	sub    DWORD PTR [ebp+0x50],edi
  40d69c:	xchg   esi,eax
  40d69d:	and    ah,BYTE PTR [edi]
  40d69f:	(bad)  
  40d6a0:	cmp    dh,al
  40d6a2:	xchg   edx,eax
  40d6a3:	dec    edi
  40d6a4:	ror    BYTE PTR [ebx+0x66c40cd9],0x19
  40d6ab:	mov    al,ds:0x1fe5432d
  40d6b0:	push   es
  40d6b1:	mov    dl,0x50
  40d6b3:	ret    
  40d6b4:	pop    edi
  40d6b5:	mov    cl,0x3e
  40d6b7:	or     BYTE PTR [esi+0x7a],dl
  40d6ba:	data16 (bad) 
  40d6bc:	xor    DWORD PTR [edx-0x1091d1a],esp
  40d6c2:	push   ecx
  40d6c3:	sbb    BYTE PTR [ebp+0x62dff6e5],ah
  40d6c9:	(bad)  
  40d6ca:	or     BYTE PTR ds:[edx+0x58],al
  40d6ce:	mov    ebx,0x64c68e38
  40d6d3:	sub    al,BYTE PTR [eax+0x196c435e]
  40d6d9:	sub    eax,0x5f084cc5
  40d6de:	sub    eax,0x3f185378
  40d6e3:	imul   esp,DWORD PTR [edi+0x3f0fa526],0xa01b7385
  40d6ed:	call   0x7206:0xbae42cff
  40d6f4:	test   al,bl
  40d6f6:	mov    edi,0x76f28420
  40d6fb:	push   0x1e716073
  40d700:	mov    eax,ds:0x802e36e3
  40d705:	add    eax,0x8a8ea54c
  40d70a:	sub    al,0x57
  40d70c:	jno    0x40d75e
  40d70e:	outs   dx,DWORD PTR ds:[esi]
  40d70f:	dec    ebx
  40d710:	or     DWORD PTR [eax-0x27],edi
  40d713:	add    edi,DWORD PTR [esi-0x12]
  40d716:	jp     0x40d764
  40d718:	jne    0x40d72e
  40d71a:	shl    ecx,0xc1
  40d71d:	xor    eax,0x4f49ed9d
  40d722:	add    esi,esi
  40d724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d725:	push   edx
  40d726:	pop    ss
  40d727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d728:	les    eax,FWORD PTR [edx+0x8]
  40d72b:	adc    DWORD PTR [ebp+0x1093cab9],ebp
  40d731:	stc    
  40d732:	sar    BYTE PTR [ebx],1
  40d734:	inc    ecx
  40d735:	and    al,0x5f
  40d737:	mov    ebx,0x6188de16
  40d73c:	mov    esi,0x21d8087a
  40d741:	jo     0x40d766
  40d743:	loope  0x40d707
  40d745:	bound  edx,QWORD PTR ds:0xf25d7a7c
  40d74b:	xchg   ecx,eax
  40d74c:	dec    esi
  40d74d:	and    al,0x1c
  40d74f:	sub    bh,BYTE PTR [eax]
  40d751:	cmc    
  40d752:	(bad)  
  40d753:	fisttp WORD PTR [edx]
  40d755:	cmp    eax,0x23cca565
  40d75a:	dec    esp
  40d75b:	dec    ebp
  40d75c:	sahf   
  40d75d:	jg     0x40d73e
  40d75f:	or     ah,BYTE PTR [edi+0x1cb5c572]
  40d765:	mov    esp,0xcd643153
  40d76a:	mov    cl,0xd6
  40d76c:	adc    BYTE PTR [ecx],0x9b
  40d76f:	(bad)  
  40d770:	xor    ch,dl
  40d772:	leave  
  40d773:	test   BYTE PTR [edi+0x29],bh
  40d776:	sbb    bl,ch
  40d778:	dec    edi
  40d779:	xchg   ebp,eax
  40d77a:	fild   QWORD PTR [esi+0x189bc331]
  40d780:	int    0xf9
  40d782:	ret    0xc75a
  40d785:	aas    
  40d786:	jno    0x40d79d
  40d788:	sub    DWORD PTR [edi+0x6],eax
  40d78b:	add    ebp,ecx
  40d78d:	add    al,0x8
  40d78f:	out    dx,al
  40d790:	mov    bl,0xb0
  40d792:	stos   BYTE PTR es:[edi],al
  40d793:	mov    ah,BYTE PTR [edx-0x3c762eae]
  40d799:	dec    esi
  40d79a:	lds    ebx,FWORD PTR [ecx-0xfaf579b]
  40d7a0:	popa   
  40d7a1:	(bad)  [esi-0x44af5994]
  40d7a7:	push   ebx
  40d7a8:	and    BYTE PTR [esp+0x4792ed19],0xd7
  40d7b0:	push   edx
  40d7b1:	xor    BYTE PTR [ecx],dh
  40d7b3:	pop    ds
  40d7b4:	or     DWORD PTR [bp+di-0x21],0x51
  40d7b9:	mov    dl,0xec
  40d7bb:	and    DWORD PTR [ebp-0x33],ebp
  40d7be:	mov    esi,0x50a1eae9
  40d7c3:	and    DWORD PTR [ecx-0x66ff8a88],ebx
  40d7c9:	inc    esi
  40d7ca:	add    DWORD PTR [edx+eax*1+0x48],eax
  40d7ce:	rol    DWORD PTR [edi+0x1f9138b2],1
  40d7d4:	adc    eax,0x9b2ffc95
  40d7d9:	into   
  40d7da:	in     eax,0x6f
  40d7dc:	test   al,0x1a
  40d7de:	dec    edi
  40d7df:	dec    esi
  40d7e0:	dec    edi
  40d7e1:	cmc    
  40d7e2:	dec    eax
  40d7e3:	cmp    bh,bh
  40d7e5:	call   0x151b:0x40da6caf
  40d7ec:	mov    dh,0x67
  40d7ee:	mov    eax,0x258b208
  40d7f3:	jbe    0x40d803
  40d7f5:	cmp    BYTE PTR [ecx],dh
  40d7f7:	aam    0x91
  40d7f9:	(bad)  
  40d7fa:	lock pusha 
  40d7fc:	and    eax,0x2f827186
  40d801:	lock or BYTE PTR [esi+ebx*8-0x40019fb0],dl
  40d809:	ins    BYTE PTR es:[edi],dx
  40d80a:	mov    ecx,0x78ebba6f
  40d80f:	jge    0x40d79a
  40d811:	mov    bl,0xa0
  40d813:	or     al,0xeb
  40d815:	jnp    0x40d831
  40d817:	addr16 mov ebx,0xa5cf362a
  40d81d:	cdq    
  40d81e:	pop    ebx
  40d81f:	jmp    0x46fa:0x67ebab3a
  40d826:	xchg   ebp,eax
  40d827:	inc    esi
  40d828:	dec    ebp
  40d829:	mov    ds:0x9f3fe916,eax
  40d82e:	int3   
  40d82f:	adc    ebx,DWORD PTR [ecx]
  40d831:	sbb    al,0x90
  40d833:	outs   dx,BYTE PTR ds:[esi]
  40d834:	dec    edx
  40d835:	pushf  
  40d836:	js     0x40d887
  40d838:	push   0x9e3a1199
  40d83d:	imul   eax,DWORD PTR [ecx],0xffffffb1
  40d840:	int3   
  40d841:	or     ch,BYTE PTR [ecx+0x67]
  40d844:	sub    cl,BYTE PTR [eax]
  40d846:	mov    cl,0xad
  40d848:	ret    0xd96
  40d84b:	push   ds
  40d84c:	jne    0x40d872
  40d84e:	dec    edi
  40d84f:	xchg   esi,eax
  40d850:	push   0x8
  40d852:	xor    eax,0x53095432
  40d857:	mov    ds:0x546665c8,eax
  40d85c:	loopne 0x40d8cf
  40d85e:	sar    DWORD PTR [edi+edx*8],0x66
  40d862:	popa   
  40d863:	lods   al,BYTE PTR ds:[esi]
  40d864:	into   
  40d865:	outs   dx,BYTE PTR ds:[esi]
  40d866:	pushf  
  40d867:	pop    ebp
  40d868:	jo     0x40d8b9
  40d86a:	in     eax,dx
  40d86b:	jo     0x40d85a
  40d86d:	add    BYTE PTR [edi-0x18],cl
  40d870:	in     al,dx
  40d871:	mov    BYTE PTR [edi],al
  40d873:	mov    ds:0x5483649d,al
  40d878:	mov    ds:0x41a6f790,eax
  40d87d:	imul   esp,ebx,0x64
  40d880:	test   eax,0x8c18a16b
  40d885:	out    dx,eax
  40d886:	(bad)  
  40d887:	imul   ecx,DWORD PTR [esp],0xffffffb6
  40d88b:	or     eax,ecx
  40d88d:	pop    esi
  40d88e:	xor    esi,DWORD PTR [ecx+0x551c5d1f]
  40d894:	and    eax,0x2fd6bd7
  40d899:	and    eax,0x4b64f21f
  40d89e:	out    0x27,al
  40d8a0:	push   edx
  40d8a1:	sahf   
  40d8a2:	fstp   DWORD PTR [edx+edi*1-0x66]
  40d8a6:	or     BYTE PTR [eax+0x9],al
  40d8a9:	and    eax,0x99c12bfc
  40d8ae:	out    0x75,al
  40d8b0:	imul   edx,ebp,0xffffffea
  40d8b3:	lock aas 
  40d8b5:	adc    eax,0x2afc7c50
  40d8ba:	sti    
  40d8bb:	xchg   esi,eax
  40d8bc:	mov    WORD PTR [ecx+eax*4],cs
  40d8bf:	dec    ebp
  40d8c0:	add    esi,DWORD PTR [edx]
  40d8c2:	jle    0x40d89c
  40d8c4:	(bad)  
  40d8c5:	fnstcw WORD PTR [ebp-0x71]
  40d8c8:	mov    edi,0x83c9010d
  40d8cd:	or     BYTE PTR [edi+0x59808b06],ch
  40d8d3:	test   eax,0xda1bff1
  40d8d8:	test   eax,0x6379d6a9
  40d8dd:	test   eax,0x99023722
  40d8e2:	in     eax,0xda
  40d8e4:	std    
  40d8e5:	test   BYTE PTR [edi],ch
  40d8e7:	ficomp WORD PTR [edx+0x62bcce56]
  40d8ed:	fidivr WORD PTR [ecx-0x46]
  40d8f0:	add    BYTE PTR [esp+esi*1+0x1f383dfd],0x99
  40d8f8:	(bad)  
  40d8f9:	(bad)  
  40d8fa:	in     eax,dx
  40d8fb:	xlat   BYTE PTR ds:[ebx]
  40d8fc:	test   DWORD PTR [esp+eax*4],edi
  40d8ff:	clc    
  40d900:	(bad)  
  40d901:	scas   al,BYTE PTR es:[edi]
  40d902:	add    bh,dh
  40d904:	test   BYTE PTR [edx+0x2f],dh
  40d907:	lock cmp BYTE PTR [edi-0x8],0x9c
  40d90c:	dec    ecx
  40d90d:	hlt    
  40d90e:	cld    
  40d90f:	das    
  40d910:	adc    BYTE PTR ds:0x22bfb8,0xa3
  40d917:	jns    0x40d8f9
  40d919:	pop    edx
  40d91a:	(bad)  
  40d91b:	aad    0x33
  40d91d:	fdivr  DWORD PTR [ebp+ecx*4-0x12]
  40d921:	jnp    0x40d939
  40d923:	sti    
  40d924:	out    dx,eax
  40d925:	cdq    
  40d926:	mov    esi,0x61ce9146
  40d92b:	or     edi,DWORD PTR [ecx-0x384e5a25]
  40d931:	push   0x2dc0b2c1
  40d936:	pop    ebp
  40d937:	and    ch,BYTE PTR ds:0x1c249e06
  40d93d:	pop    eax
  40d93e:	je     0x40d929
  40d940:	das    
  40d941:	mov    al,ds:0xd874dcc8
  40d946:	mov    esp,edx
  40d948:	or     dh,BYTE PTR [ebx-0x2f]
  40d94b:	pop    ebx
  40d94c:	mov    eax,0x5be3e0d9
  40d951:	inc    edi
  40d952:	fdiv   DWORD PTR [esi+edx*2]
  40d955:	ins    BYTE PTR es:[edi],dx
  40d956:	mov    esi,0x5678786f
  40d95b:	add    ch,bh
  40d95d:	mov    eax,0xf873ad9b
  40d962:	stos   BYTE PTR es:[edi],al
  40d963:	(bad)  
  40d964:	and    al,0x71
  40d966:	lahf   
  40d967:	les    esp,FWORD PTR [edi+0x6d]
  40d96a:	dec    ebx
  40d96b:	push   ds
  40d96c:	mov    ecx,0x67b59dbb
  40d971:	adc    BYTE PTR [eax+eax*8-0x341c3b02],bl
  40d978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d979:	cmp    al,0x38
  40d97b:	and    eax,0x5fd62f7b
  40d980:	jmp    0x40d9fb
  40d982:	lds    edi,FWORD PTR [edx]
  40d984:	sub    dl,bh
  40d986:	in     al,0x5c
  40d988:	ret    
  40d989:	out    0xe5,ax
  40d98c:	cmc    
  40d98d:	pop    esi
  40d98e:	or     dh,BYTE PTR [ecx-0x531ea53f]
  40d994:	bnd jnp 0x40d99b
  40d997:	(bad)  
  40d998:	fidiv  WORD PTR [eax]
  40d99a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40d99c:	test   al,0x7a
  40d99e:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40d9a0:	jg     0x40d9c8
  40d9a2:	sbb    eax,0xb8482efb
  40d9a7:	mov    ebp,eax
  40d9a9:	mov    ecx,0xab320857
  40d9ae:	fdiv   QWORD PTR [esp+ebx*1-0x2e]
  40d9b2:	div    DWORD PTR [edx+0x2aa52d13]
  40d9b8:	mov    bh,0x91
  40d9ba:	sti    
  40d9bb:	repz sbb cl,BYTE PTR [ebx]
  40d9be:	(bad)  
  40d9bf:	and    eax,0xafe820bd
  40d9c4:	adc    bh,BYTE PTR [eax-0x6b]
  40d9c7:	inc    edi
  40d9c8:	stos   BYTE PTR es:[edi],al
  40d9c9:	or     esp,DWORD PTR [edx+0x79]
  40d9cc:	sbb    cl,BYTE PTR ss:[edx+0x0]
  40d9d0:	mov    al,0xf0
  40d9d2:	pop    edi
  40d9d3:	lods   al,BYTE PTR ds:[esi]
  40d9d4:	sahf   
  40d9d5:	pop    ss
  40d9d6:	fstp   DWORD PTR [ecx-0xb7a5895]
  40d9dc:	call   0xdd52:0x6142f82a
  40d9e3:	pop    esi
  40d9e4:	push   esp
  40d9e5:	dec    ebx
  40d9e6:	out    0x75,al
  40d9e8:	push   ebx
  40d9e9:	xor    ah,dh
  40d9eb:	cdq    
  40d9ec:	loope  0x40da60
  40d9ee:	sbb    ch,BYTE PTR [ecx-0x18c14b62]
  40d9f4:	jmp    0x7e3a:0xfb34940c
  40d9fb:	pop    esi
  40d9fc:	popa   
  40d9fd:	dec    eax
  40d9fe:	(bad)  
  40d9ff:	mov    ds,WORD PTR [ebx+0x7ffc5f5]
  40da05:	stos   DWORD PTR es:[edi],eax
  40da06:	pop    ebp
  40da07:	xchg   ecx,eax
  40da08:	test   cl,bh
  40da0a:	dec    ecx
  40da0b:	jmp    0x1d9038c9
  40da10:	pop    ebx
  40da11:	fcom   QWORD PTR ds:0x26c92996
  40da17:	out    dx,al
  40da18:	push   ds
  40da19:	xchg   BYTE PTR [esi],ch
  40da1b:	enter  0x9b0,0x3c
  40da1f:	or     eax,0x387deceb
  40da24:	ror    DWORD PTR [ecx-0x1d124d1c],cl
  40da2a:	mov    ebx,0xf47a9126
  40da2f:	scas   eax,DWORD PTR es:[edi]
  40da30:	sbb    DWORD PTR [eax-0x74],edx
  40da33:	pushf  
  40da34:	fs retf 0xdc5e
  40da38:	sub    BYTE PTR [edx+0x1c],bh
  40da3b:	ret    
  40da3c:	jbe    0x40da66
  40da3e:	jl     0x40daa7
  40da40:	dec    edi
  40da41:	sub    DWORD PTR [eax],edi
  40da43:	call   0xd927:0x48157324
  40da4a:	inc    edi
  40da4b:	jg     0x40da70
  40da4d:	and    al,0x55
  40da4f:	lds    edi,FWORD PTR [edi+0x77]
  40da52:	repz mov esp,0xe96b4e6
  40da58:	xor    eax,0x4289d7a1
  40da5d:	cdq    
  40da5e:	imul   DWORD PTR [edi]
  40da60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da61:	adc    BYTE PTR ds:[esi-0x20],0xcd
  40da66:	xlat   BYTE PTR ds:[ebx]
  40da67:	cwde   
  40da68:	mov    edi,0xe3551b5f
  40da6d:	pop    ds
  40da6e:	sub    BYTE PTR [ebx+0x37],bh
  40da71:	retf   0x8def
  40da74:	scas   eax,DWORD PTR es:[edi]
  40da75:	mov    cl,0xac
  40da77:	out    dx,eax
  40da78:	mov    DWORD PTR [ecx-0x954ca9d],ebx
  40da7e:	jmp    0x5a111537
  40da83:	dec    edx
  40da84:	fwait
  40da85:	sub    ah,ch
  40da87:	jbe    0x40da86
  40da89:	js     0x40da64
  40da8b:	xchg   edi,eax
  40da8c:	sti    
  40da8d:	xchg   ebp,eax
  40da8e:	add    edi,DWORD PTR [ecx+0x17]
  40da91:	outs   dx,DWORD PTR ds:[esi]
  40da92:	cwde   
  40da93:	jno    0x40da2a
  40da95:	add    DWORD PTR [ebx-0x30],esp
  40da98:	jnp    0x40dad3
  40da9a:	xchg   edx,eax
  40da9b:	lods   eax,DWORD PTR ds:[esi]
  40da9c:	push   esp
  40da9d:	pop    ss
  40da9e:	add    eax,0xec26d34a
  40daa3:	mov    ebx,0xbd23921d
  40daa8:	pop    es
  40daa9:	les    esp,FWORD PTR [esi]
  40daab:	(bad)  
  40daac:	(bad)  
  40daad:	jl     0x40da69
  40daaf:	loop   0x40da46
  40dab1:	and    dl,BYTE PTR [ecx+0x48eb6445]
  40dab7:	sbb    eax,0xaacda0ad
  40dabc:	dec    ebp
  40dabd:	retf   0x2f1a
  40dac0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dac1:	(bad)  [esi]
  40dac3:	jno    0x40db04
  40dac5:	and    ch,BYTE PTR [ebx-0x210aa24e]
  40dacb:	div    DWORD PTR [esi]
  40dacd:	push   edx
  40dace:	pop    esp
  40dacf:	and    esi,DWORD PTR [eax+0x22ffac07]
  40dad5:	jae    0x40db09
  40dad7:	fwait
  40dad8:	or     ebp,DWORD PTR [edx+0x24]
  40dadb:	fiadd  DWORD PTR [edi-0x705ff120]
  40dae1:	into   
  40dae2:	(bad)  
  40dae3:	adc    al,0xc4
  40dae5:	jmp    0x36d3:0x27e27cb1
  40daec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40daed:	adc    DWORD PTR [edi+0x3],edi
  40daf0:	in     al,dx
  40daf1:	pop    ebp
  40daf2:	sub    BYTE PTR [ecx-0x7a],0xa1
  40daf6:	mov    edi,0x46373fc2
  40dafb:	mov    edi,gs
  40dafd:	outs   dx,DWORD PTR ds:[esi]
  40dafe:	rcr    DWORD PTR [esi-0x776221f7],cl
  40db04:	or     BYTE PTR ds:0xae0b750f,al
  40db0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db0b:	mov    al,ds:0x7119eb58
  40db10:	mov    ah,0x72
  40db12:	sub    bh,BYTE PTR [edi+0x3248a5c]
  40db18:	pop    ss
  40db19:	mov    dl,0x96
  40db1b:	sbb    al,0x6
  40db1d:	mov    ch,0xb0
  40db1f:	imul   ebp,ecx,0x9bb6ad14
  40db25:	adc    eax,0x9f4ef8ca
  40db2a:	loopne 0x40db17
  40db2c:	rol    BYTE PTR ds:0x4b6e775e,1
  40db32:	into   
  40db33:	and    al,0xe8
  40db35:	pop    ebx
  40db36:	mov    ecx,0x6756ea0c
  40db3b:	adc    ebp,edx
  40db3d:	mov    esi,esp
  40db3f:	push   edi
  40db40:	in     eax,dx
  40db41:	sbb    ebx,DWORD PTR [eax]
  40db43:	inc    esp
  40db44:	push   edx
  40db45:	rcl    DWORD PTR [ebp+0x1f],1
  40db48:	(bad)  
  40db49:	jnp    0x40dbc3
  40db4b:	fmul   QWORD PTR [edi-0x3989316]
  40db51:	shr    BYTE PTR [eiz*1+0x4ef21f32],0xaa
  40db59:	(bad)  
  40db5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db5b:	rcl    DWORD PTR [eax+0xf],1
  40db5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db5f:	push   ds
  40db60:	cld    
  40db61:	cmp    al,0x77
  40db63:	in     eax,dx
  40db64:	xor    DWORD PTR [edi],edi
  40db66:	xchg   esi,eax
  40db67:	bound  esp,QWORD PTR [ecx]
  40db69:	addr16 push esp
  40db6b:	xor    esi,0xffffffdb
  40db6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db70:	lds    esp,FWORD PTR [edi+0x65dcc06e]
  40db76:	pop    ss
  40db77:	popf   
  40db78:	push   cs
  40db79:	xchg   ebx,eax
  40db7a:	mov    bh,0x14
  40db7c:	scas   eax,DWORD PTR es:[edi]
  40db7d:	cmp    DWORD PTR [edx+edx*2],edx
  40db80:	add    al,ch
  40db82:	(bad)  
  40db83:	jmp    0x40dbc5
  40db85:	rol    DWORD PTR [edi+ecx*8+0x15],0x3f
  40db8a:	int3   
  40db8b:	scas   al,BYTE PTR es:[edi]
  40db8c:	and    edx,0xedee8d91
  40db92:	test   eax,0xf8c2dfb7
  40db97:	sbb    edx,esp
  40db99:	das    
  40db9a:	cmp    bl,BYTE PTR [ebx-0x5e]
  40db9d:	ja     0x40dba2
  40db9f:	test   al,0xc1
  40dba1:	inc    edi
  40dba2:	fiadd  DWORD PTR [edx+edx*1]
  40dba5:	mov    ecx,DWORD PTR [ebx-0x57201fec]
  40dbab:	add    BYTE PTR [esp+ecx*8-0x3c177c9d],bl
  40dbb2:	push   ebx
  40dbb3:	(bad)  
  40dbb4:	mov    esi,0xf63315a1
  40dbb9:	in     al,dx
  40dbba:	xchg   esi,eax
  40dbbb:	gs sub al,0x7a
  40dbbe:	out    0xce,eax
  40dbc0:	xor    edi,esp
  40dbc2:	ins    BYTE PTR es:[edi],dx
  40dbc3:	dec    edi
  40dbc4:	pop    ds
  40dbc5:	fist   WORD PTR [edx+0x67255ae]
  40dbcb:	sub    DWORD PTR [edx-0x232933de],0xffffff9e
  40dbd2:	lods   al,BYTE PTR ds:[esi]
  40dbd3:	add    BYTE PTR [esi],cl
  40dbd5:	sahf   
  40dbd6:	(bad)  
  40dbd7:	jle    0x40dbaa
  40dbd9:	inc    eax
  40dbda:	pop    ebp
  40dbdb:	xor    al,BYTE PTR [edx+edx*4-0x2b]
  40dbdf:	out    0x93,al
  40dbe1:	inc    ecx
  40dbe2:	icebp  
  40dbe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbe4:	imul   edx,DWORD PTR [ebx+0x22291f56],0xe11a7175
  40dbee:	std    
  40dbef:	jmp    0x97:0xf2405e60
  40dbf6:	jmp    0xfe3bb2d6
  40dbfb:	jle    0x40dbeb
  40dbfd:	gs retf 0x1c48
  40dc01:	ja     0x40dc43
  40dc03:	cmp    DWORD PTR [eax+edi*4+0x7637a03e],ebp
  40dc0a:	sub    eax,0xb9034492
  40dc0f:	and    edi,ecx
  40dc11:	push   0xffffffa8
  40dc13:	mov    al,cl
  40dc15:	pop    ebp
  40dc16:	(bad)  
  40dc17:	mov    eax,0xef531955
  40dc1c:	retf   0x9563
  40dc1f:	jns    0x40dc20
  40dc21:	int    0x1d
  40dc23:	ror    BYTE PTR [eax+0x182be730],cl
  40dc29:	loope  0x40dc8b
  40dc2b:	js     0x40dc20
  40dc2d:	icebp  
  40dc2e:	imul   esi,DWORD PTR [ecx+0x7761870d],0xffffffdc
  40dc35:	or     DWORD PTR [ebx+0x5e],esi
  40dc38:	(bad)
  40dc3c:	loopne 0x40dc70
  40dc3e:	enter  0x7f26,0xb0
  40dc42:	lds    esi,FWORD PTR [ebp+0x17ae2e51]
  40dc48:	mov    dh,BYTE PTR [eax-0x2ddd48e6]
  40dc4e:	and    al,0xde
  40dc50:	jbe    0x40dbdb
  40dc52:	lods   eax,DWORD PTR ds:[esi]
  40dc53:	mov    ch,0x12
  40dc55:	cmp    ecx,DWORD PTR [ebx]
  40dc57:	fst    QWORD PTR [ebx+0x1aa9c58]
  40dc5d:	cmp    bl,BYTE PTR ds:[edx-0x2f]
  40dc61:	cmp    eax,0xa2a9c9b
  40dc66:	lahf   
  40dc67:	xor    eax,0xcc7db36d
  40dc6c:	es stos BYTE PTR es:[edi],al
  40dc6e:	inc    ebp
  40dc6f:	cld    
  40dc70:	popf   
  40dc71:	cmp    eax,0xf986146f
  40dc76:	mov    ebx,DWORD PTR [edi-0x67e346b4]
  40dc7c:	xchg   edi,eax
  40dc7d:	dec    eax
  40dc7e:	mov    DWORD PTR [ebp+edi*8-0x6b],esp
  40dc82:	jae    0x40dcf0
  40dc84:	inc    ebx
  40dc85:	std    
  40dc86:	call   0x3b93:0x51496c46
  40dc8d:	daa    
  40dc8e:	cmp    DWORD PTR [esi-0x7de38b2a],ebx
  40dc94:	jne    0x40dc6f
  40dc96:	imul   ebx,DWORD PTR [ecx+ebx*8+0x42090bca],0xc69e02c7
  40dca1:	jge    0x40dcfa
  40dca3:	adc    eax,0xe84f5c88
  40dca8:	fild   DWORD PTR [eax+eiz*8-0x3d21d8e8]
  40dcaf:	retf   
  40dcb0:	sbb    al,0x75
  40dcb2:	cld    
  40dcb3:	nop
  40dcb4:	mov    DWORD PTR [ebx+0x38],0x6654e936
  40dcbb:	lahf   
  40dcbc:	stos   BYTE PTR es:[edi],al
  40dcbd:	(bad)  
  40dcbe:	nop
  40dcbf:	(bad)  
  40dcc0:	rol    esi,cl
  40dcc2:	mov    esi,0xd999085d
  40dcc7:	sahf   
  40dcc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcc9:	cs cmp eax,0x9b2ce95c
  40dccf:	scas   eax,DWORD PTR es:[edi]
  40dcd0:	sahf   
  40dcd1:	push   0xfffffff8
  40dcd3:	push   esp
  40dcd4:	or     edi,ebx
  40dcd6:	add    eax,0x6c51949c
  40dcdb:	lock pusha 
  40dcdd:	inc    ecx
  40dcde:	mov    ebp,0xfcfd7d29
  40dce3:	out    0x51,al
  40dce5:	fistp  QWORD PTR [esi+ebp*4-0x6ed43737]
  40dcec:	jne    0x40dd20
  40dcee:	std    
  40dcef:	mov    bl,0xb7
  40dcf1:	mov    ebp,0xa68a42fe
  40dcf6:	repnz sbb eax,0x6b9bc2d2
  40dcfc:	mov    ebp,0x6bfad2db
  40dd01:	out    0xca,eax
  40dd03:	arpl   WORD PTR [esi-0x1bc07463],sp
  40dd09:	mov    eax,ds:0x381c7379
  40dd0e:	retf   0x54f9
  40dd11:	push   ebp
  40dd12:	cdq    
  40dd13:	retf   
  40dd14:	in     eax,0xfb
  40dd16:	out    0x16,eax
  40dd18:	pop    ds
  40dd19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd1a:	sub    BYTE PTR [esi-0x1b],dh
  40dd1d:	fcom   DWORD PTR [eax]
  40dd1f:	ret    0xc9f7
  40dd22:	fs push ds
  40dd24:	pop    edi
  40dd25:	lods   al,BYTE PTR ds:[esi]
  40dd26:	jns    0x40dd6e
  40dd28:	aam    0x4e
  40dd2a:	shr    DWORD PTR [edi+0x27],0x8c
  40dd2e:	sar    esp,0x5e
  40dd31:	or     DWORD PTR [ecx-0x9525294],edi
  40dd37:	sti    
  40dd38:	repz bound ebx,QWORD PTR ds:0x49b8e284
  40dd3f:	xchg   ebp,eax
  40dd40:	fsub   QWORD PTR [ebx]
  40dd42:	pop    esp
  40dd43:	xor    bh,BYTE PTR [eax+0x5e]
  40dd46:	fist   DWORD PTR [bx+di-0x2e02]
  40dd4b:	call   0x479d:0x1d76d01b
  40dd52:	xor    edx,DWORD PTR [ecx+0x66]
  40dd55:	imul   ebx,DWORD PTR [edi-0x77],0x12
  40dd59:	jg     0x40dda7
  40dd5b:	cld    
  40dd5c:	das    
  40dd5d:	inc    ebp
  40dd5e:	je     0x40dd92
  40dd60:	pop    ebx
  40dd61:	sbb    ecx,0x48f589ed
  40dd67:	sar    BYTE PTR [eax-0xc],1
  40dd6a:	test   BYTE PTR [eax],0x8b
  40dd6d:	outs   dx,BYTE PTR ds:[esi]
  40dd6e:	dec    esi
  40dd6f:	stc    
  40dd70:	je     0x40dda4
  40dd72:	mov    esi,0x2cae05fe
  40dd77:	call   0xfaef:0xf129063a
  40dd7e:	mul    BYTE PTR [edx+ebp*4-0x4e5aa239]
  40dd85:	jp     0x40ddd5
  40dd87:	pop    esi
  40dd88:	or     DWORD PTR [edi],ebx
  40dd8a:	inc    ecx
  40dd8b:	dec    esp
  40dd8c:	scas   al,BYTE PTR es:[edi]
  40dd8d:	clc    
  40dd8e:	mov    ebx,0x7b461749
  40dd93:	in     eax,dx
  40dd94:	push   esp
  40dd95:	and    al,0xbd
  40dd97:	stos   BYTE PTR es:[edi],al
  40dd98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd99:	outs   dx,DWORD PTR ss:[esi]
  40dd9b:	fist   DWORD PTR [ebx]
  40dd9d:	add    cl,BYTE PTR [ebx+0x5844bff2]
  40dda3:	hlt    
  40dda4:	push   0xffffffd5
  40dda6:	pop    ds
  40dda7:	mov    ecx,DWORD PTR [edi+0x12e9e8fa]
  40ddad:	dec    esp
  40ddae:	mov    bl,0x74
  40ddb0:	loope  0x40dd99
  40ddb2:	or     al,0x6
  40ddb4:	data16 jnp 0x40dd9a
  40ddb7:	jle    0x40dd75
  40ddb9:	clc    
  40ddba:	mov    al,ds:0xee4471bd
  40ddbf:	nop
  40ddc0:	mov    DWORD PTR [ecx],0xad7e686e
  40ddc6:	rol    DWORD PTR fs:[ecx+0x65877f43],0x88
  40ddce:	jns    0x40de25
  40ddd0:	(bad)  [esi+0x57]
  40ddd3:	push   edi
  40ddd4:	fld    TBYTE PTR [edi-0x51]
  40ddd7:	stos   DWORD PTR es:[edi],eax
  40ddd8:	in     al,0xaf
  40ddda:	ret    0x8633
  40dddd:	jae    0x40de47
  40dddf:	sahf   
  40dde0:	xor    eax,0x3833ba6
  40dde5:	cmp    dl,BYTE PTR [ebx+0x17fb2037]
  40ddeb:	adc    DWORD PTR [edi-0x3b338bb7],eax
  40ddf1:	shl    DWORD PTR [ebx-0x42],0xee
  40ddf5:	add    DWORD PTR [edi-0x4b],edi
  40ddf8:	inc    ecx
  40ddf9:	iret   
  40ddfa:	into   
  40ddfb:	sub    dh,BYTE PTR [esi+0x6b7df6ec]
  40de01:	inc    eax
  40de02:	dec    edx
  40de03:	push   edi
  40de04:	hlt    
  40de05:	fsub   DWORD PTR [edx+ebp*4+0x4]
  40de09:	cmc    
  40de0a:	js     0x40de1e
  40de0c:	xchg   edi,eax
  40de0d:	mov    al,0x8d
  40de0f:	mov    bh,0x1
  40de11:	cdq    
  40de12:	push   esp
  40de13:	push   ss
  40de14:	test   BYTE PTR [edi],ch
  40de16:	fnsave [ecx+0x6]
  40de19:	or     dl,BYTE PTR [ebp-0x40d0bebc]
  40de1f:	sbb    al,0x38
  40de21:	adc    BYTE PTR [ecx-0x7069e402],dh
  40de27:	cmp    dl,BYTE PTR [edi]
  40de29:	mov    WORD PTR [edx-0xd],fs
  40de2c:	mov    DWORD PTR [edx+0xaaf6d46],0x2bc669aa
  40de36:	out    0x40,al
  40de38:	nop
  40de39:	mov    edx,0x33db93a3
  40de3e:	mov    ss,WORD PTR ds:0x270547b5
  40de44:	pop    esp
  40de45:	scas   eax,DWORD PTR es:[edi]
  40de46:	sbb    al,0x26
  40de48:	lea    esp,[ebp-0x12]
  40de4b:	cdq    
  40de4c:	pop    ds
  40de4d:	cmp    ebx,DWORD PTR [bx+si]
  40de50:	lods   eax,DWORD PTR ds:[esi]
  40de51:	test   BYTE PTR [edx],ch
  40de53:	xor    BYTE PTR [esi],0x2a
  40de56:	adc    DWORD PTR [ebx-0x3b],eax
  40de59:	in     eax,0x40
  40de5b:	inc    esp
  40de5c:	aas    
  40de5d:	xchg   ebp,eax
  40de5e:	mov    ds,WORD PTR [ebx+edi*2-0x51]
  40de62:	es aam 0xaa
  40de65:	fwait
  40de66:	mov    ds,WORD PTR [esi]
  40de68:	inc    edi
  40de69:	and    eax,0x2e308dbc
  40de6e:	or     DWORD PTR [ebx],edi
  40de70:	add    DWORD PTR [eax],0x461f99f7
  40de76:	in     eax,0xfd
  40de78:	xchg   edx,eax
  40de79:	call   0x86f994c4
  40de7e:	xor    ecx,eax
  40de80:	mov    esi,DWORD PTR [edx+0x25]
  40de83:	je     0x40dee0
  40de85:	inc    esp
  40de86:	sbb    edx,eax
  40de88:	dec    edi
  40de89:	pusha  
  40de8a:	mov    eax,ds:0x705c11bf
  40de8f:	add    dl,BYTE PTR [ebx]
  40de91:	inc    ebx
  40de92:	adc    al,0x5e
  40de94:	adc    dl,BYTE PTR [edi+0xb]
  40de97:	sbb    BYTE PTR [edi],dl
  40de99:	in     al,0x10
  40de9b:	push   es
  40de9c:	leave  
  40de9d:	cli    
  40de9e:	xchg   edx,eax
  40de9f:	inc    ebx
  40dea0:	rsm    
  40dea2:	sar    DWORD PTR [eax+0x38],1
  40dea5:	scas   al,BYTE PTR es:[edi]
  40dea6:	cmp    eax,0x1ee6a1dc
  40deab:	adc    eax,DWORD PTR [edi-0x45]
  40deae:	push   ebx
  40deaf:	sub    BYTE PTR [eax+0x2f800abc],0x59
  40deb6:	push   ecx
  40deb7:	jp     0x40de48
  40deb9:	pop    ds
  40deba:	sub    ecx,ebx
  40debc:	or     cl,BYTE PTR [edi-0x287e392d]
  40dec2:	mov    ebx,0x6765928
  40dec7:	jp     0x40defe
  40dec9:	mov    eax,ds:0x655980b6
  40dece:	push   esp
  40decf:	mov    al,ds:0x45fef49e
  40ded4:	xlat   BYTE PTR ds:[ebx]
  40ded5:	mov    edx,DWORD PTR [edx+0x33002ac2]
  40dedb:	call   0xf524414a
  40dee0:	mov    ah,0x48
  40dee2:	xchg   esp,eax
  40dee3:	mov    ?,WORD PTR [esp+ecx*1+0x65]
  40dee7:	inc    esp
  40dee8:	xor    BYTE PTR [ecx+0x618c157a],ch
  40deee:	fst    st(2)
  40def0:	icebp  
  40def1:	push   ss
  40def2:	fisttp QWORD PTR [ecx-0x6f]
  40def5:	fidiv  DWORD PTR [ebx+0x49]
  40def8:	jmp    0x40df70
  40defa:	push   esi
  40defb:	pushf  
  40defc:	mov    gs,WORD PTR [ebp-0x3d]
  40deff:	scas   al,BYTE PTR es:[edi]
  40df00:	or     DWORD PTR [ebp+0x39],edi
  40df03:	fstp   DWORD PTR ds:0xc7143a55
  40df09:	sub    dh,BYTE PTR [edx]
  40df0b:	or     al,al
  40df0d:	repnz repnz mov edi,0x9de43752
  40df14:	push   ss
  40df15:	mov    eax,ds:0x5e725e31
  40df1a:	inc    edi
  40df1b:	(bad)  
  40df1c:	pushf  
  40df1d:	je     0x40df04
  40df1f:	and    eax,0x7d8883b
  40df24:	pusha  
  40df25:	iret   
  40df26:	sar    BYTE PTR [esi+0x33],0xe3
  40df2a:	maskmovq mm7,(bad)
  40df2b:	idiv   DWORD PTR [ecx-0x3e]
  40df2e:	sbb    BYTE PTR [eax+0x524b15b2],bh
  40df34:	cwde   
  40df35:	jg     0x40df09
  40df37:	xor    ecx,DWORD PTR [ecx*2+0x3e6b6fb4]
  40df3e:	pop    ss
  40df3f:	cmp    edi,DWORD PTR [esi-0x2c]
  40df42:	rol    BYTE PTR [ecx+0xa],1
  40df45:	xchg   edx,eax
  40df46:	xchg   ecx,eax
  40df47:	test   BYTE PTR [ecx-0x4345c3f],0x1c
  40df4e:	sub    dl,bl
  40df50:	popa   
  40df51:	mov    bl,0xd
  40df53:	dec    ecx
  40df54:	rcr    DWORD PTR [ebx+0x7b1e937a],1
  40df5a:	fidivr WORD PTR [esi]
  40df5c:	push   eax
  40df5d:	scas   al,BYTE PTR es:[edi]
  40df5e:	dec    ebp
  40df5f:	pop    edx
  40df60:	mov    bh,0x10
  40df62:	push   ecx
  40df63:	arpl   WORD PTR [edx-0x1ed11d7f],dx
  40df69:	xchg   DWORD PTR [ecx+ecx*1+0x79],edx
  40df6d:	arpl   ax,dx
  40df6f:	mov    edx,0x30d52d95
  40df74:	sub    al,0xf6
  40df76:	jecxz  0x40dfee
  40df78:	ins    BYTE PTR es:[edi],dx
  40df79:	sti    
  40df7a:	in     al,0xa
  40df7c:	fs (bad) 
  40df7e:	jns    0x40dfe1
  40df80:	subps  xmm3,XMMWORD PTR [esi]
  40df83:	pop    ebx
  40df84:	jmp    DWORD PTR [ebp+0x67]
  40df87:	test   DWORD PTR [ebx-0x3f],edi
  40df8a:	or     al,0xd3
  40df8c:	and    ebp,eax
  40df8e:	in     al,dx
  40df8f:	inc    ebp
  40df90:	pop    esp
  40df91:	xchg   ecx,eax
  40df92:	mov    ecx,0xc0c4ee2f
  40df97:	ror    DWORD PTR [esi],1
  40df99:	mov    BYTE PTR [esp+eax*4+0x4f79b9e4],0xbe
  40dfa1:	jns    0x40df73
  40dfa3:	mov    esp,0xa3e29fb9
  40dfa8:	in     al,dx
  40dfa9:	loop   0x40df54
  40dfab:	pop    eax
  40dfac:	pushw  ds
  40dfae:	fstp   DWORD PTR [ecx]
  40dfb0:	jge    0x40df7b
  40dfb2:	bound  esi,QWORD PTR [ebp-0x73]
  40dfb5:	sbb    cl,BYTE PTR ds:0x22a89c35
  40dfbb:	jmp    0x40df92
  40dfbd:	lds    esp,FWORD PTR [ecx+0x35]
  40dfc0:	cmp    eax,0xeb460d9a
  40dfc5:	mov    bh,0xd
  40dfc7:	ret    0x1486
  40dfca:	push   ebx
  40dfcb:	nop
  40dfcc:	push   edx
  40dfcd:	fdivp  st(2),st
  40dfcf:	mov    al,ds:0x5f06d837
  40dfd4:	mov    ebp,0xb8e94292
  40dfd9:	xor    DWORD PTR [ecx],0xffffffe3
  40dfdc:	pusha  
  40dfdd:	mov    edx,0xaf49c6ea
  40dfe2:	stc    
  40dfe3:	mov    bh,BYTE PTR [eax-0x49]
  40dfe6:	cmp    cl,BYTE PTR [ebx+0x2b8289fb]
  40dfec:	add    BYTE PTR [edx+edx*8+0x18ad1fc8],cl
  40dff3:	mov    ch,0x73
  40dff5:	dec    ecx
  40dff6:	mov    ebx,0x8a5c21f9
  40dffb:	in     eax,0xca
  40dffd:	es cli 
  40dfff:	mov    ebp,DWORD PTR [ebx-0x19cc5bfa]
  40e005:	in     al,0x40
  40e007:	mov    ds:0x262605a6,al
  40e00c:	ins    BYTE PTR es:[edi],dx
  40e00d:	lea    ebp,[ebp-0x1]
  40e010:	imul   eax,DWORD PTR [edi-0x10],0x9d31aadf
  40e017:	aaa    
  40e018:	xchg   ebx,eax
  40e019:	cmp    ebp,DWORD PTR [eax]
  40e01b:	xor    eax,0x77f8bff9
  40e020:	(bad)  
  40e021:	enter  0x7a67,0x43
  40e025:	xor    eax,0x9204c5eb
  40e02a:	div    DWORD PTR [edx]
  40e02c:	stc    
  40e02d:	in     al,dx
  40e02e:	neg    BYTE PTR [ecx-0x73d99064]
  40e034:	outs   dx,DWORD PTR ds:[esi]
  40e035:	repz inc ebx
  40e037:	push   esp
  40e038:	dec    edx
  40e039:	iret   
  40e03a:	aaa    
  40e03b:	push   ebx
  40e03c:	mov    ah,0x47
  40e03e:	repnz out 0x2c,al
  40e041:	jmp    0x6b87655b
  40e046:	or     DWORD PTR [edi+0x7e3c39f3],0x5b6e593e
  40e050:	mov    dh,0xbb
  40e052:	push   cs
  40e053:	pop    esp
  40e054:	ret    
  40e055:	dec    eax
  40e056:	popa   
  40e057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e059:	sub    al,0xd6
  40e05b:	sahf   
  40e05c:	jecxz  0x40e082
  40e05e:	jae    0x40e02b
  40e060:	dec    ecx
  40e061:	add    BYTE PTR [ecx-0x589578c4],ah
  40e067:	fsubr  QWORD PTR [ebx+esi*2-0x53ddfa5e]
  40e06e:	cdq    
  40e06f:	cmc    
  40e070:	rol    dl,cl
  40e072:	(bad)  
  40e073:	aas    
  40e074:	cmp    al,0xe4
  40e076:	jg     0x40e089
  40e078:	sub    DWORD PTR [esi],esi
  40e07a:	push   ss
  40e07b:	mov    bl,BYTE PTR [ebp-0x34b86902]
  40e081:	out    dx,eax
  40e082:	cdq    
  40e083:	add    bl,BYTE PTR [esi+0x50]
  40e086:	jl     0x40e043
  40e088:	cmc    
  40e089:	push   eax
  40e08a:	rcr    BYTE PTR [ecx],0x29
  40e08d:	scas   eax,DWORD PTR es:[edi]
  40e08e:	into   
  40e08f:	and    cl,BYTE PTR [edx-0x160569fa]
  40e095:	(bad)
  40e098:	inc    esp
  40e099:	mov    edx,0x5e4fb2a7
  40e09e:	mov    bh,0x8f
  40e0a0:	push   cs
  40e0a1:	arpl   WORD PTR [ebx+edx*4],di
  40e0a4:	(bad)  
  40e0a6:	lods   al,BYTE PTR ds:[esi]
  40e0a7:	jge    0x40e0cb
  40e0a9:	cmp    ebp,esp
  40e0ab:	and    BYTE PTR ds:0x3e24cd32,bh
  40e0b1:	mov    al,0x66
  40e0b3:	into   
  40e0b4:	sbb    cl,BYTE PTR [ecx+0x24]
  40e0b7:	pusha  
  40e0b8:	mov    eax,ds:0x3a905360
  40e0bd:	jnp    0x40e10d
  40e0bf:	xor    cl,ch
  40e0c1:	pop    esp
  40e0c2:	jmp    0xa84dac24
  40e0c7:	mov    eax,0xc0213ca8
  40e0cc:	les    ebx,FWORD PTR [ebx]
  40e0ce:	(bad)  
  40e0d0:	das    
  40e0d1:	(bad)  
  40e0d2:	(bad)  
  40e0d3:	enter  0xa49,0x1e
  40e0d7:	push   ss
  40e0d8:	daa    
  40e0d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0da:	jns    0x40e128
  40e0dc:	or     DWORD PTR [edi],0xffffffef
  40e0df:	mov    eax,0x85123488
  40e0e4:	fst    DWORD PTR [edi]
  40e0e6:	adc    ah,BYTE PTR [ecx+ebp*8]
  40e0e9:	fistp  DWORD PTR [eax-0x319d7dd5]
  40e0ef:	pop    ebx
  40e0f0:	sbb    eax,0xb9288bd2
  40e0f5:	add    eax,0x36ecbacb
  40e0fa:	mul    BYTE PTR [eax-0x38c1ce0f]
  40e100:	pop    es
  40e101:	mov    cl,0xa8
  40e103:	xlat   BYTE PTR ds:[ebx]
  40e104:	je     0x40e148
  40e106:	mov    esp,0x883323d7
  40e10b:	stc    
  40e10c:	icebp  
  40e10d:	nop
  40e10e:	repz mov ah,BYTE PTR [ebx+eiz*2]
  40e112:	call   0xafcbc348
  40e117:	push   ebx
  40e118:	test   ebp,eax
  40e11a:	cmp    eax,0xdbbd60bb
  40e11f:	push   ebx
  40e120:	push   cs
  40e121:	imul   esp,DWORD PTR [eax-0x38],0x80fcef5c
  40e128:	stos   DWORD PTR es:[edi],eax
  40e129:	sub    eax,0x56d03b5c
  40e12e:	inc    esp
  40e12f:	daa    
  40e130:	stos   DWORD PTR es:[edi],eax
  40e131:	adc    al,0x74
  40e133:	(bad)  
  40e134:	mov    cl,0xdc
  40e136:	xchg   ebp,eax
  40e137:	xchg   ax,ax
  40e139:	and    eax,0x3fa1cddc
  40e13e:	and    bl,BYTE PTR [edi+0x51]
  40e141:	inc    edx
  40e142:	loop   0x40e157
  40e144:	scas   al,BYTE PTR es:[edi]
  40e145:	mov    al,cs:0xb5160713
  40e14b:	jmp    0xe8362e8
  40e150:	inc    ebx
  40e151:	test   eax,0xb48c4d0
  40e156:	xor    DWORD PTR [ebx],edx
  40e158:	outs   dx,DWORD PTR ds:[esi]
  40e159:	mov    eax,ds:0x1bb8e8f5
  40e15e:	and    esi,DWORD PTR [edx]
  40e160:	inc    esp
  40e161:	lea    edi,[edi-0xc]
  40e164:	inc    ebx
  40e165:	pop    eax
  40e166:	mov    al,0x8a
  40e168:	cmp    al,0xd3
  40e16a:	xchg   esi,eax
  40e16b:	out    0x91,al
  40e16d:	jmp    0x40e131
  40e16f:	push   eax
  40e170:	sub    eax,0x3f6d5c38
  40e175:	stos   DWORD PTR es:[edi],eax
  40e176:	xor    al,0x55
  40e178:	pop    esi
  40e179:	mov    esp,0x9820c792
  40e17e:	sbb    ebp,DWORD PTR [edi+0x2f]
  40e181:	inc    eax
  40e182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e183:	dec    ebx
  40e184:	add    edi,DWORD PTR [ebx-0x7e]
  40e187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e188:	add    DWORD PTR [ebx-0x43],ebx
  40e18b:	or     cl,BYTE PTR [esp+eiz*2]
  40e18e:	cmp    BYTE PTR [edx-0x6279c08b],bl
  40e194:	jb     0x40e139
  40e196:	jl     0x40e11d
  40e198:	std    
  40e199:	push   esi
  40e19a:	das    
  40e19b:	pop    ebx
  40e19c:	mov    WORD PTR [ecx],ss
  40e19e:	push   esp
  40e19f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1a0:	sbb    DWORD PTR ds:[esi+0x4d],ebx
  40e1a4:	out    dx,eax
  40e1a5:	add    BYTE PTR [edi+0x72f463d0],bh
  40e1ab:	jo     0x40e1cb
  40e1ad:	cmp    ebx,DWORD PTR [ebx]
  40e1af:	xor    eax,0x280ac00
  40e1b4:	icebp  
  40e1b5:	add    DWORD PTR [esi-0x5f],esp
  40e1b8:	shl    BYTE PTR [ebx+0x17992f45],1
  40e1be:	cmp    bl,BYTE PTR [eax-0x5c]
  40e1c1:	mov    cl,0x4e
  40e1c3:	cwde   
  40e1c4:	xor    BYTE PTR [edi],cl
  40e1c6:	mov    esi,0x7609ba10
  40e1cb:	pushf  
  40e1cc:	push   edx
  40e1cd:	dec    ebp
  40e1ce:	xor    eax,0x24751b1c
  40e1d3:	mov    al,ds:0xe8747225
  40e1d8:	inc    ebp
  40e1d9:	inc    ebx
  40e1da:	mov    dl,0x30
  40e1dc:	ja     0x40e194
  40e1de:	jle    0x40e198
  40e1e0:	sti    
  40e1e1:	dec    edx
  40e1e2:	(bad)  
  40e1e4:	dec    edi
  40e1e5:	mov    ds:0xe002bd79,al
  40e1ea:	xor    ecx,esi
  40e1ec:	jp     0x40e24b
  40e1ee:	mov    bl,0x27
  40e1f0:	cmc    
  40e1f1:	push   esp
  40e1f2:	and    eax,0x4ae93a61
  40e1f7:	test   DWORD PTR [ecx],ecx
  40e1f9:	xchg   ah,bh
  40e1fb:	outs   dx,DWORD PTR ds:[esi]
  40e1fc:	ins    DWORD PTR es:[edi],dx
  40e1fd:	adc    ebx,DWORD PTR [ebp-0x4e]
  40e200:	cmp    esp,DWORD PTR [edi-0x12fc1085]
  40e206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e207:	xor    BYTE PTR [ebp+0x6fc670b3],dh
  40e20d:	fld1   
  40e20f:	xor    ebp,DWORD PTR [ebx]
  40e211:	jns    0x40e1a5
  40e213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e214:	xchg   ecx,eax
  40e215:	lods   eax,DWORD PTR ds:[esi]
  40e216:	retf   
  40e217:	adc    dl,BYTE PTR [edi]
  40e219:	out    dx,al
  40e21a:	xor    eax,0x92ba2f22
  40e21f:	and    al,0x90
  40e221:	fcom   QWORD PTR [ebp-0x927c1aa]
  40e227:	(bad)  
  40e228:	xchg   ebp,eax
  40e229:	mov    eax,ds:0x47d6dd7
  40e22e:	data16 (bad) 
  40e230:	mov    ebx,0x4c91884e
  40e235:	push   ecx
  40e236:	cmp    eax,0xb914a5e1
  40e23b:	mov    dl,0xaa
  40e23d:	sti    
  40e23e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e23f:	jb     0x40e1dd
  40e241:	cdq    
  40e242:	jg     0x40e1fa
  40e244:	in     al,0x5
  40e246:	xchg   BYTE PTR [edx-0x2b],al
  40e249:	punpckhdq mm0,QWORD PTR [ecx]
  40e24c:	scas   eax,DWORD PTR es:[edi]
  40e24d:	pop    es
  40e24e:	and    DWORD PTR [edx-0x8],edx
  40e251:	in     eax,dx
  40e252:	adc    ebx,DWORD PTR [ecx+0x56]
  40e255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e256:	or     al,0x8
  40e258:	jae    0x40e275
  40e25a:	xchg   DWORD PTR [ecx+0x4f0c297c],eax
  40e260:	mov    ds:0x756ee2e4,al
  40e265:	jno    0x40e1fd
  40e267:	push   0xb40a8f88
  40e26c:	les    ecx,FWORD PTR [esi+0x2b]
  40e26f:	test   BYTE PTR [edx],ch
  40e271:	mov    dl,0x6b
  40e273:	pop    edi
  40e274:	adc    ah,BYTE PTR [edx]
  40e276:	in     al,0x8c
  40e278:	cmp    al,0xa6
  40e27a:	sbb    BYTE PTR [edi-0x3c],ch
  40e27d:	push   ebp
  40e27e:	pop    edx
  40e27f:	(bad)  
  40e281:	sbb    ah,BYTE PTR [ecx-0x2c3f1cd6]
  40e287:	add    cl,dl
  40e289:	out    0x88,al
  40e28b:	cwde   
  40e28c:	in     eax,dx
  40e28d:	and    cl,bl
  40e28f:	or     dl,BYTE PTR [eax]
  40e291:	call   0xe98c:0x72b0caf4
  40e298:	push   eax
  40e299:	out    dx,eax
  40e29a:	clc    
  40e29b:	jle    0x40e265
  40e29d:	cmp    BYTE PTR [esi-0x1f5b832f],bh
  40e2a3:	loopne 0x40e310
  40e2a5:	retf   
  40e2a6:	fistp  DWORD PTR [esi+0x7d]
  40e2a9:	pop    esi
  40e2aa:	and    eax,0xdaf29d25
  40e2af:	rcr    DWORD PTR ds:0x56313cb6,cl
  40e2b5:	ja     0x40e25e
  40e2b7:	dec    esi
  40e2b8:	mov    al,ds:0x5328dd70
  40e2bd:	scas   eax,DWORD PTR es:[edi]
  40e2be:	sub    BYTE PTR [eax-0x71],dh
  40e2c1:	pop    esi
  40e2c2:	jecxz  0x40e30f
  40e2c4:	push   ebp
  40e2c5:	std    
  40e2c6:	js     0x40e31f
  40e2c8:	xor    BYTE PTR [ebp+0x7a6a5328],dl
  40e2ce:	xor    al,0x78
  40e2d0:	push   ecx
  40e2d1:	retf   0x6dad
  40e2d4:	push   eax
  40e2d5:	jle    0x40e293
  40e2d7:	add    eax,0x2fdbad7b
  40e2dc:	lahf   
  40e2dd:	or     eax,0x4e908f89
  40e2e2:	inc    esi
  40e2e3:	pop    edi
  40e2e4:	mov    ch,0xeb
  40e2e6:	hlt    
  40e2e7:	outs   dx,BYTE PTR ds:[esi]
  40e2e8:	inc    esi
  40e2e9:	or     al,0x8d
  40e2eb:	repnz push cs
  40e2ed:	sub    esp,edi
  40e2ef:	cli    
  40e2f0:	pop    ebx
  40e2f1:	shl    ah,1
  40e2f3:	test   DWORD PTR [ebx-0x3b],edi
  40e2f6:	stc    
  40e2f7:	fs push 0x976620f3
  40e2fd:	add    BYTE PTR [ebx-0x43262bb8],dl
  40e303:	and    BYTE PTR [esi-0x2218a04b],al
  40e309:	in     al,0x5
  40e30b:	mov    ecx,0xcdddfe3f
  40e310:	push   esp
  40e311:	push   edx
  40e312:	cmp    BYTE PTR [ebp-0x7967acb5],ah
  40e318:	test   eax,ebp
  40e31a:	ss ins BYTE PTR es:[edi],dx
  40e31c:	dec    ebx
  40e31d:	adc    DWORD PTR [esi],ebp
  40e31f:	inc    eax
  40e320:	fnsave [eax]
  40e322:	int3   
  40e323:	ss popa 
  40e325:	mov    ebp,0x73ced12e
  40e32a:	les    esi,FWORD PTR ds:0x1fb5bc03
  40e330:	fs ret 0xaa48
  40e334:	test   eax,0xd7b90db7
  40e339:	pop    edx
  40e33a:	ret    0xdca2
  40e33d:	push   cs
  40e33e:	mov    edi,0x2c515720
  40e343:	jecxz  0x40e3b9
  40e345:	xor    ch,0x6b
  40e348:	mov    edi,0x86f8becc
  40e34d:	xchg   ebp,eax
  40e34e:	jbe    0x40e2d6
  40e350:	sub    DWORD PTR [eax+0x31438076],ebp
  40e356:	shr    DWORD PTR [esi],0x46
  40e359:	cwde   
  40e35a:	jle    0x40e2e8
  40e35c:	fst    DWORD PTR [ebx+0x37]
  40e35f:	or     al,0xd5
  40e361:	cmp    ebp,DWORD PTR es:[esi-0x1f291f61]
  40e368:	jp     0x40e350
  40e36a:	dec    esi
  40e36b:	adc    edx,ecx
  40e36d:	jb     0x40e384
  40e36f:	push   ebx
  40e370:	inc    esi
  40e371:	jp     0x40e361
  40e373:	sub    cl,BYTE PTR [edx+0x432361de]
  40e379:	pop    es
  40e37a:	xchg   edi,eax
  40e37b:	fisttp WORD PTR [edx+0x5d66aac8]
  40e381:	ins    DWORD PTR es:[edi],dx
  40e382:	ins    BYTE PTR es:[edi],dx
  40e383:	arpl   WORD PTR [esi+0x1],bp
  40e386:	dec    eax
  40e387:	aas    
  40e388:	pop    DWORD PTR [ecx-0x36869435]
  40e38e:	pop    eax
  40e38f:	inc    eax
  40e390:	mov    eax,ds:0xaf98b5f3
  40e395:	mov    ds:0xddff0c9a,eax
  40e39a:	xor    ebx,DWORD PTR [edi]
  40e39c:	push   ecx
  40e39d:	inc    eax
  40e39e:	mov    WORD PTR [edi-0x73b42451],es
  40e3a4:	jge    0x40e38e
  40e3a6:	push   edx
  40e3a7:	lods   eax,DWORD PTR ds:[esi]
  40e3a8:	push   esp
  40e3a9:	xchg   ecx,eax
  40e3aa:	sbb    eax,0x99079f32
  40e3af:	ss call 0xc98b:0xa8731917
  40e3b7:	mov    dl,0x7
  40e3b9:	push   cs
  40e3ba:	xchg   ebx,eax
  40e3bb:	scas   al,BYTE PTR es:[edi]
  40e3bc:	xchg   ecx,eax
  40e3bd:	out    0x63,eax
  40e3bf:	sub    BYTE PTR [eax-0x72],dl
  40e3c2:	mov    dl,0xb1
  40e3c4:	or     BYTE PTR [edx-0x5edc7350],0xd5
  40e3cb:	xor    al,ah
  40e3cd:	xchg   ebp,eax
  40e3ce:	adc    DWORD PTR [ebx+ecx*1+0x3b],edi
  40e3d2:	out    dx,eax
  40e3d3:	lds    edi,FWORD PTR [edi-0x72]
  40e3d6:	mov    al,BYTE PTR [ecx-0x13]
  40e3d9:	jns    0x40e43c
  40e3db:	and    edi,DWORD PTR [ebx+0x2b]
  40e3de:	push   eax
  40e3df:	test   eax,0x338df5c9
  40e3e4:	xchg   BYTE PTR [ebx+0x30],dh
  40e3e7:	xor    bh,BYTE PTR [edi+esi*2]
  40e3ea:	jg     0x40e3d9
  40e3ec:	mov    al,0x14
  40e3ee:	and    ah,BYTE PTR [ecx]
  40e3f0:	popa   
  40e3f1:	or     eax,0x6753298f
  40e3f6:	jae    0x40e3fa
  40e3f8:	xchg   ecx,eax
  40e3f9:	pop    edx
  40e3fa:	sbb    edx,DWORD PTR [edx-0x21]
  40e3fd:	xchg   ecx,eax
  40e3fe:	mov    cl,0x10
  40e400:	pop    ecx
  40e401:	push   ebx
  40e402:	jae    0x40e46e
  40e404:	and    ebp,DWORD PTR [ebp-0x37]
  40e407:	sub    BYTE PTR ds:0xa1b66fe8,bh
  40e40d:	mov    eax,0x7c987e2d
  40e412:	jae    0x40e431
  40e414:	sbb    ebp,ecx
  40e416:	xchg   DWORD PTR ds:0xc1285c35,ecx
  40e41c:	les    edi,FWORD PTR [ebx+0x70]
  40e41f:	pop    esp
  40e420:	mov    BYTE PTR [esi],dh
  40e422:	ror    al,0xbe
  40e425:	cmp    BYTE PTR [esi],bh
  40e427:	sub    al,0x38
  40e429:	fbstp  TBYTE PTR [edx+esi*2-0x5f]
  40e42d:	repz (bad) 
  40e42f:	jno    0x40e45e
  40e431:	scas   eax,DWORD PTR es:[edi]
  40e432:	icebp  
  40e433:	jg     0x40e419
  40e435:	std    
  40e436:	or     edi,DWORD PTR [ecx]
  40e438:	pop    es
  40e439:	jno    0x40e453
  40e43b:	push   edi
  40e43c:	(bad)
  40e43f:	cmp    eax,0x193382a
  40e444:	imul   ecx,DWORD PTR [eax-0x1d9dfb54],0xf
  40e44b:	mov    DWORD PTR [ecx],0x2d8a8ead
  40e451:	bound  edi,QWORD PTR [ecx+0x49]
  40e454:	mov    esi,0x938cb359
  40e459:	lock mov ch,BYTE PTR [ebp+0x7c8ea14e]
  40e460:	adc    ebp,DWORD PTR [eax+0x5f2059c0]
  40e466:	imul   edi,eax,0xffffffdd
  40e469:	iret   
  40e46a:	int3   
  40e46b:	xor    DWORD PTR [esi],ecx
  40e46d:	dec    esp
  40e46e:	cld    
  40e46f:	into   
  40e470:	je     0x40e4aa
  40e472:	add    DWORD PTR [esi],0x1072c9d9
  40e478:	cli    
  40e479:	jno    0x40e4ef
  40e47b:	mov    WORD PTR [eax-0x5793a74c],gs
  40e481:	pop    edx
  40e482:	push   ebx
  40e483:	in     al,dx
  40e484:	jg     0x40e4fc
  40e486:	fst    QWORD PTR [ebx+ebx*2-0x22]
  40e48a:	cdq    
  40e48b:	outs   dx,BYTE PTR ds:[esi]
  40e48c:	mov    ah,0x15
  40e48e:	dec    ebp
  40e48f:	and    BYTE PTR [ecx+0x3e41bfb],cl
  40e495:	hlt    
  40e496:	in     eax,0xe9
  40e498:	mov    bh,0x8c
  40e49a:	in     eax,dx
  40e49b:	repnz add bh,BYTE PTR [esp+esi*1-0x50b95120]
  40e4a3:	out    0x4c,al
  40e4a5:	mov    ds:0xce96c387,eax
  40e4aa:	ss or  al,0x6d
  40e4ad:	xor    ebx,DWORD PTR [ecx+0x18]
  40e4b0:	inc    eax
  40e4b1:	and    dl,BYTE PTR [edi+0x5fe43f57]
  40e4b7:	cmp    eax,0x7fefe12e
  40e4bc:	inc    edi
  40e4bd:	sar    BYTE PTR [esi+edi*1-0x374b7bec],cl
  40e4c4:	or     ecx,ebp
  40e4c6:	push   edx
  40e4c7:	test   edi,0x717a14af
  40e4cd:	call   0xe7ca291
  40e4d2:	xchg   esi,eax
  40e4d3:	cmp    al,0xa6
  40e4d5:	jp     0x40e47f
  40e4d7:	rol    DWORD PTR [esi+ebp*1-0x7debea3e],cl
  40e4de:	add    al,dh
  40e4e0:	(bad)  
  40e4e1:	xchg   edx,eax
  40e4e2:	pusha  
  40e4e3:	add    al,0x16
  40e4e5:	pop    ecx
  40e4e6:	sub    dl,BYTE PTR [edi]
  40e4e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4e9:	imul   eax,edx,0xa98a1430
  40e4ef:	add    al,0x1c
  40e4f1:	rcr    DWORD PTR [edx],1
  40e4f3:	xchg   DWORD PTR [esp+edi*4],edi
  40e4f6:	adc    DWORD PTR [ebp+0x4f3e0610],ebx
  40e4fc:	shl    BYTE PTR [esi+eax*8-0x59],1
  40e500:	retf   0xf65e
  40e503:	mov    ebp,0x887ae09
  40e508:	fidivr DWORD PTR [ebp+edi*1-0x3b]
  40e50c:	mov    dh,0x9b
  40e50e:	ret    0xca00
  40e511:	dec    esp
  40e512:	out    dx,al
  40e513:	in     eax,0x76
  40e515:	lods   eax,DWORD PTR ds:[esi]
  40e516:	clc    
  40e517:	cmp    ebx,esi
  40e519:	xchg   edi,eax
  40e51a:	mov    edx,0x2252988e
  40e51f:	lock mov eax,0xe585231a
  40e525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e526:	imul   edx,DWORD PTR [esi-0x23],0x270746a7
  40e52d:	out    dx,al
  40e52e:	xlat   BYTE PTR ds:[ebx]
  40e52f:	xor    ch,BYTE PTR ds:0xd2c9e9dc
  40e535:	xor    ch,BYTE PTR [ecx+edx*4]
  40e538:	ret    
  40e539:	xor    cl,BYTE PTR [edi+edi*4]
  40e53c:	out    dx,al
  40e53d:	sbb    eax,DWORD PTR [ebx+edx*2]
  40e540:	inc    esi
  40e541:	test   al,0xbe
  40e543:	(bad)  
  40e544:	imul   ebp,DWORD PTR [edi+ebx*4],0xfffffffe
  40e548:	push   es
  40e549:	bound  edi,QWORD PTR [eax]
  40e54b:	loope  0x40e4d7
  40e54d:	fild   DWORD PTR [ebp+0x7e253d63]
  40e553:	and    ebx,DWORD PTR [edi+0x25]
  40e556:	mov    bh,0xa6
  40e558:	mov    edi,0xb7a6d11
  40e55d:	mov    DWORD PTR [edx+ebp*4-0x458163a8],eax
  40e564:	sub    eax,0x4f490aab
  40e569:	and    al,0xc6
  40e56b:	int    0x25
  40e56d:	push   esp
  40e56e:	pop    eax
  40e56f:	xor    di,WORD PTR [esi]
  40e572:	repz cmp ebp,DWORD PTR [ebx+0x4662745a]
  40e579:	push   esp
  40e57a:	rol    edx,cl
  40e57c:	ret    
  40e57d:	ror    DWORD PTR [edi],cl
  40e57f:	jle    0x40e53f
  40e581:	sub    esp,ecx
  40e583:	cmp    al,0xc6
  40e585:	fidiv  WORD PTR [edx+0x73]
  40e588:	sub    ecx,DWORD PTR fs:[ecx+esi*4+0x6a]
  40e58d:	mov    dl,0x13
  40e58f:	push   ebx
  40e590:	rcr    al,cl
  40e592:	and    DWORD PTR [edx],ebx
  40e594:	pusha  
  40e595:	push   0x95cc84d2
  40e59a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e59b:	mov    edx,0xa3384048
  40e5a0:	adc    ecx,DWORD PTR [edx]
  40e5a2:	add    bl,ch
  40e5a4:	sub    ch,dl
  40e5a6:	add    eax,ecx
  40e5a8:	xchg   edx,eax
  40e5a9:	pop    esp
  40e5aa:	and    eax,0x21f2591
  40e5af:	inc    ebp
  40e5b0:	fs leave 
  40e5b2:	test   DWORD PTR [eax+0x38],ecx
  40e5b5:	fmul   st,st(4)
  40e5b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5b8:	or     edi,DWORD PTR [ecx+0x4183048]
  40e5be:	xor    dl,al
  40e5c0:	bound  esi,QWORD PTR [edx]
  40e5c2:	jl     0x40e5b9
  40e5c4:	or     BYTE PTR [esi],al
  40e5c6:	pop    esp
  40e5c7:	out    dx,al
  40e5c8:	pop    esi
  40e5c9:	jo     0x40e580
  40e5cb:	in     eax,dx
  40e5cc:	inc    eax
  40e5cd:	cmp    eax,0x1abd7c4
  40e5d2:	(bad)  
  40e5d4:	neg    bh
  40e5d6:	dec    esp
  40e5d7:	in     al,0xfb
  40e5d9:	call   0xf6893b48
  40e5de:	xchg   ebp,eax
  40e5df:	fldenv [esi+0x77]
  40e5e2:	sbb    DWORD PTR [ebp+0x53409f95],esp
  40e5e8:	xchg   ebp,eax
  40e5e9:	mov    ebx,0xfb45d19b
  40e5ee:	mov    eax,ds:0x74bc3d99
  40e5f3:	xchg   cl,ah
  40e5f5:	add    al,0xcd
  40e5f7:	pop    edi
  40e5f8:	push   esp
  40e5f9:	xor    eax,0x70
  40e5fc:	fild   WORD PTR [ebp-0x20c57810]
  40e602:	mov    ?,WORD PTR [ecx-0x47f656e9]
  40e608:	push   edx
  40e609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e60a:	lods   al,BYTE PTR ds:[esi]
  40e60b:	bound  esp,QWORD PTR [eax]
  40e60d:	adc    BYTE PTR [esi-0xf],0x9d
  40e611:	into   
  40e612:	mov    edx,0x27dc7991
  40e617:	and    BYTE PTR [eax],ch
  40e619:	mov    ds:0xb950066d,eax
  40e61e:	mov    eax,ds:0xb599e856
  40e623:	mov    al,ds:0x216bf656
  40e628:	mov    edi,0xb9508023
  40e62d:	pusha  
  40e62e:	das    
  40e62f:	push   edx
  40e630:	test   DWORD PTR [ebx-0x61],0xfa5e464e
  40e637:	and    BYTE PTR [ecx],al
  40e639:	dec    ebp
  40e63a:	je     0x40e65e
  40e63c:	(bad)  
  40e63e:	xchg   BYTE PTR ds:0x9c23b14e,dl
  40e644:	cmp    dl,ah
  40e646:	mov    eax,0x663a7c36
  40e64b:	add    ebp,DWORD PTR [edi-0x635ebcdf]
  40e651:	mov    dl,BYTE PTR [ebx]
  40e653:	jns    0x40e64e
  40e655:	xor    ecx,edx
  40e657:	ins    BYTE PTR es:[edi],dx
  40e658:	push   ds
  40e659:	mov    bh,0xe9
  40e65b:	jp     0x40e627
  40e65d:	mov    esp,ecx
  40e65f:	cli    
  40e660:	push   esp
  40e661:	mov    eax,ds:0x848f000a
  40e666:	lods   eax,DWORD PTR ds:[esi]
  40e667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e668:	mov    ebp,DWORD PTR [ecx-0x38]
  40e66b:	stos   BYTE PTR es:[edi],al
  40e66c:	jl     0x40e5fe
  40e66e:	xchg   BYTE PTR ds:0xf8468828,bh
  40e674:	leave  
  40e675:	dec    edx
  40e676:	fcom   DWORD PTR [edi+0x37f43c2e]
  40e67c:	sub    BYTE PTR [ebx],cl
  40e67e:	jmp    FWORD PTR [edi+0x43]
  40e681:	dec    esp
  40e682:	and    eax,0xb0512e4f
  40e687:	clc    
  40e688:	fst    DWORD PTR [edi+0x3bf9c3c4]
  40e68e:	enter  0xb7b5,0xad
  40e692:	push   esp
  40e693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e694:	(bad)  
  40e695:	jne    0x40e64d
  40e697:	lods   eax,DWORD PTR ds:[esi]
  40e698:	fabs   
  40e69a:	es push ecx
  40e69c:	popf   
  40e69d:	pop    ds
  40e69e:	lock rcr ah,0x1d
  40e6a2:	popf   
  40e6a3:	call   0xcf0c97f9
  40e6a8:	sbb    dl,BYTE PTR [edx-0x6]
  40e6ab:	lods   eax,DWORD PTR ds:[esi]
  40e6ac:	test   DWORD PTR [edi-0x7abb360],0xd1e818
  40e6b6:	adc    eax,0x334b1559
  40e6bb:	int3   
  40e6bc:	loop   0x40e6ce
  40e6be:	jno    0x40e733
  40e6c0:	xchg   esi,eax
  40e6c1:	int3   
  40e6c2:	fcom   DWORD PTR [ebx+eiz*1+0x5a3aac31]
  40e6c9:	mov    cl,0x69
  40e6cb:	cmp    eax,0xa3ff89b0
  40e6d0:	xor    ebx,esi
  40e6d2:	mov    ds:0x51b02440,eax
  40e6d7:	mov    ds:0x54111ec9,eax
  40e6dc:	sub    DWORD PTR [esi],edi
  40e6de:	push   edx
  40e6df:	jb     0x40e74d
  40e6e1:	jmp    0xdb80:0x9c1863a3
  40e6e8:	mov    ah,ch
  40e6ea:	les    esp,FWORD PTR [eax]
  40e6ec:	jle    0x40e6a9
  40e6ee:	test   eax,0x420cc318
  40e6f3:	popf   
  40e6f4:	xor    cl,ah
  40e6f6:	repnz or cl,al
  40e6f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6fa:	or     eax,0x599c469f
  40e6ff:	dec    edi
  40e700:	pop    ebx
  40e701:	shl    DWORD PTR [ebp+ebp*1+0x3c],1
  40e705:	push   ebx
  40e706:	in     al,0xf
  40e708:	add    ch,BYTE PTR [edx+0x7c]
  40e70b:	inc    esi
  40e70c:	fwait
  40e70d:	mov    dl,cl
  40e70f:	mov    ebp,0xfa11a7a5
  40e714:	scas   al,BYTE PTR es:[edi]
  40e715:	call   0xac83:0x432638e0
  40e71c:	xchg   edi,eax
  40e71d:	mov    al,ds:0xe8a1f9d6
  40e722:	jno    0x40e773
  40e724:	into   
  40e725:	xchg   esp,eax
  40e726:	mov    ah,BYTE PTR [esi+0x5a]
  40e729:	and    esp,0xffffff9a
  40e72c:	rcl    DWORD PTR [ebp-0x1f611968],0xb
  40e733:	mov    esi,0xa7c9eb88
  40e738:	mov    cl,0x82
  40e73a:	inc    ebx
  40e73b:	xor    BYTE PTR [edx+0x1d826ea9],0x30
  40e742:	xor    dx,si
  40e745:	dec    esp
  40e746:	pushw  es
  40e748:	jle    0x40e74c
  40e74a:	out    0x55,eax
  40e74c:	mov    ds:0x1e0304db,al
  40e751:	xor    BYTE PTR [eax],ch
  40e753:	mov    dl,BYTE PTR [esi]
  40e755:	add    al,BYTE PTR [edi+0x5233850c]
  40e75b:	and    dh,BYTE PTR [ebx+ecx*8-0x7e]
  40e75f:	pop    ecx
  40e760:	mov    esi,0xff659656
  40e765:	jg     0x40e735
  40e767:	mov    bh,0xb2
  40e769:	retf   0x7721
  40e76c:	mov    al,BYTE PTR [edx]
  40e76e:	sar    DWORD PTR [eax+edx*4-0x5d1d9bcc],1
  40e775:	dec    esi
  40e776:	call   0x1e2d856d
  40e77b:	mov    ah,BYTE PTR [edx]
  40e77d:	jmp    0x40e721
  40e77f:	xchg   ebx,eax
  40e780:	jmp    0x40e780
  40e782:	(bad)  
  40e783:	out    0xf3,al
  40e785:	mov    eax,0x72fb3c03
  40e78a:	cli    
  40e78b:	xor    eax,0x895b0df6
  40e790:	mov    eax,ds:0x517a64ad
  40e795:	fcmovb st,st(0)
  40e797:	retf   0xecb
  40e79a:	mov    eax,0x2200687d
  40e79f:	mov    dh,0xf8
  40e7a1:	out    0x33,al
  40e7a3:	stos   DWORD PTR es:[edi],eax
  40e7a4:	jo     0x40e72f
  40e7a6:	xchg   esp,eax
  40e7a7:	mov    edi,0x75e9fc8
  40e7ac:	inc    edx
  40e7ad:	pop    ds
  40e7ae:	mov    eax,cs:0xb11797c6
  40e7b4:	mov    ecx,0x144f02e3
  40e7b9:	(bad)  
  40e7ba:	retf   0x24b5
  40e7bd:	adc    esp,esp
  40e7bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7c0:	clc    
  40e7c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7c2:	stos   DWORD PTR es:[edi],eax
  40e7c3:	movlps QWORD PTR [ecx],xmm6
  40e7c6:	les    edx,FWORD PTR [ecx-0x17]
  40e7c9:	fcomip st,st(3)
  40e7cb:	pop    edi
  40e7cc:	inc    ebp
  40e7cd:	jmp    0xc6e5:0x6f915736
  40e7d4:	into   
  40e7d5:	not    dh
  40e7d7:	and    eax,0xbc3b824
  40e7dc:	adc    esp,DWORD PTR [ecx+0x3794654d]
  40e7e2:	shl    BYTE PTR ds:0x8c12fd91,0x8f
  40e7e9:	mov    ds:0x2ca7fb89,eax
  40e7ee:	push   esp
  40e7ef:	or     BYTE PTR [ecx+0x5655777e],dh
  40e7f5:	dec    esi
  40e7f6:	or     dh,BYTE PTR [eax+0xc]
  40e7f9:	(bad)  
  40e7fa:	fisub  WORD PTR [eax]
  40e7fc:	mov    esi,0x5f880802
  40e801:	sbb    eax,0xbe4e2851
  40e806:	xchg   edx,eax
  40e807:	or     edi,0x17
  40e80a:	mov    al,0x1c
  40e80c:	daa    
  40e80d:	dec    esi
  40e80e:	inc    eax
  40e80f:	shr    BYTE PTR [ecx-0x2b6bbb12],1
  40e815:	sahf   
  40e816:	xor    eax,0xe92b7af9
  40e81b:	sahf   
  40e81c:	retf   0xd78a
  40e81f:	int3   
  40e820:	push   0xa40908dc
  40e825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e826:	lahf   
  40e827:	xor    bh,cl
  40e829:	ins    DWORD PTR es:[edi],dx
  40e82a:	mov    esp,ds
  40e82c:	call   0xe5061838
  40e831:	jp     0x40e7cb
  40e833:	or     ebx,DWORD PTR [eax]
  40e835:	loop   0x40e89a
  40e837:	pusha  
  40e838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e839:	xchg   esi,eax
  40e83a:	mov    cl,0xba
  40e83c:	fnsave [eax]
  40e83e:	cdq    
  40e83f:	and    BYTE PTR [esi],0xc9
  40e842:	push   0xbcc1fd89
  40e847:	jmp    0xb28c08f3
  40e84c:	ds inc ecx
  40e84e:	adc    al,0x46
  40e850:	repnz push 0xffffff8b
  40e853:	add    al,0xf4
  40e855:	add    eax,0x9eb4f0b3
  40e85a:	mov    dh,0x97
  40e85c:	ins    BYTE PTR es:[edi],dx
  40e85d:	xor    eax,0x9bc21516
  40e862:	lahf   
  40e863:	lahf   
  40e864:	add    al,0x56
  40e866:	out    0x69,al
  40e868:	mov    al,0x1a
  40e86a:	inc    edi
  40e86b:	xchg   edx,eax
  40e86c:	repnz cdq 
  40e86e:	repnz mov ds:0x87ec9e03,eax
  40e874:	pop    ss
  40e875:	pop    edi
  40e876:	das    
  40e877:	dec    esp
  40e878:	clc    
  40e879:	xor    bl,al
  40e87b:	and    al,0x2b
  40e87d:	xchg   ebx,eax
  40e87e:	stc    
  40e87f:	cmp    al,0x23
  40e881:	push   eax
  40e882:	jp     0x40e8e7
  40e884:	(bad)  
  40e885:	lods   al,BYTE PTR ds:[esi]
  40e886:	(bad)  [edx]
  40e888:	repnz lock scas eax,DWORD PTR es:[edi]
  40e88b:	mov    edi,DWORD PTR [ebx]
  40e88d:	jne    0x40e88d
  40e88f:	xor    eax,0xc787f81f
  40e894:	out    dx,eax
  40e895:	mov    ebx,0x528859fb
  40e89a:	sbb    ch,0x67
  40e89d:	daa    
  40e89e:	xchg   edi,eax
  40e89f:	inc    esi
  40e8a0:	and    eax,0x1f950abb
  40e8a5:	xor    ebx,ebx
  40e8a7:	in     eax,0x79
  40e8a9:	push   esp
  40e8aa:	jge    0x40e854
  40e8ac:	in     eax,0x38
  40e8ae:	inc    esp
  40e8af:	js     0x40e861
  40e8b1:	dec    eax
  40e8b2:	repz mov dl,0x82
  40e8b5:	pop    es
  40e8b6:	sbb    BYTE PTR ds:0xb2e365e4,ah
  40e8bc:	xchg   esi,eax
  40e8bd:	outs   dx,BYTE PTR ds:[esi]
  40e8be:	out    dx,eax
  40e8bf:	or     ebx,DWORD PTR ds:0xd9baeeb6
  40e8c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8c6:	jo     0x40e8a2
  40e8c8:	dec    ebx
  40e8c9:	push   0xa20a3dfd
  40e8ce:	into   
  40e8cf:	cld    
  40e8d0:	jle    0x40e876
  40e8d2:	jmp    0x2fa2:0x3e03a18e
  40e8d9:	pop    esi
  40e8da:	js     0x40e903
  40e8dc:	push   esp
  40e8dd:	imul   edx,DWORD PTR [ebx],0xdcab8d48
  40e8e3:	mov    esi,0x360cefcd
  40e8e8:	ds inc edx
  40e8ea:	fs xor eax,0x123bf6bd
  40e8f0:	(bad)  
  40e8f1:	out    dx,eax
  40e8f2:	add    eax,0xba346102
  40e8f7:	stc    
  40e8f8:	mov    esi,0x4d62ba6a
  40e8fd:	pop    es
  40e8fe:	ins    BYTE PTR es:[edi],dx
  40e8ff:	scas   al,BYTE PTR es:[edi]
  40e900:	retf   
  40e901:	jecxz  0x40e94b
  40e903:	jge    0x40e907
  40e905:	test   al,0xba
  40e907:	mov    ah,0xa4
  40e909:	xlat   BYTE PTR ds:[ebx]
  40e90a:	cmp    DWORD PTR [edx-0x38],edi
  40e90d:	mov    bl,BYTE PTR [esi-0x4f92a0fc]
  40e913:	jmp    0x7d8ae662
  40e918:	stos   BYTE PTR es:[edi],al
  40e919:	lods   al,BYTE PTR ds:[esi]
  40e91a:	imul   esp,DWORD PTR [eax-0x723ef7b1],0xfffffff0
  40e921:	xchg   BYTE PTR [ebx+0x2f],ch
  40e924:	cmp    eax,0xf8e27b66
  40e929:	pop    ebp
  40e92a:	push   ecx
  40e92b:	and    esi,DWORD PTR [edx+0x6e]
  40e92e:	retf   0xe66
  40e931:	inc    edx
  40e932:	and    ecx,DWORD PTR [edi]
  40e934:	add    DWORD PTR ds:0x79012ecd,eax
  40e93a:	adc    esi,DWORD PTR [esi-0x21749561]
  40e940:	sahf   
  40e941:	jbe    0x40e8e2
  40e943:	sub    DWORD PTR [edx*8-0x6762fe77],ecx
  40e94a:	jecxz  0x40e983
  40e94c:	mov    dh,BYTE PTR [edi+0x2f]
  40e94f:	sbb    BYTE PTR [edi+ebx*2-0x3d],dh
  40e953:	xor    BYTE PTR [eax+0x4efc6f74],bl
  40e959:	fnstcw WORD PTR [esi+0x4f]
  40e95c:	jp     0x40e8ee
  40e95e:	popa   
  40e95f:	pop    edx
  40e960:	sbb    DWORD PTR [esi-0x1c],ecx
  40e963:	xor    DWORD PTR [esi-0x5fd5655e],eax
  40e969:	ret    0x8b08
  40e96c:	mov    eax,0x65dbf8f4
  40e971:	jbe    0x40e937
  40e973:	cmp    BYTE PTR [ecx-0x5b],ah
  40e976:	pushf  
  40e977:	scas   eax,DWORD PTR es:[edi]
  40e978:	jecxz  0x40e9bc
  40e97a:	inc    ecx
  40e97b:	mov    ds:0x6e279af6,al
  40e980:	fwait
  40e981:	stos   BYTE PTR es:[edi],al
  40e982:	lds    ecx,FWORD PTR [edx-0x37]
  40e985:	icebp  
  40e986:	clc    
  40e987:	popa   
  40e988:	xchg   ecx,eax
  40e989:	dec    eax
  40e98a:	dec    esi
  40e98b:	cmp    eax,0xd28671c5
  40e990:	dec    BYTE PTR [ecx+0x22]
  40e993:	inc    edx
  40e994:	jmp    0x61db:0x4657ef6c
  40e99b:	cmp    eax,0x93bbc608
  40e9a0:	cwde   
  40e9a1:	in     al,0x4e
  40e9a3:	xor    al,0xdf
  40e9a5:	cmp    cl,dh
  40e9a7:	jns    0x40e9de
  40e9a9:	xlat   BYTE PTR ds:[ebx]
  40e9aa:	cmp    eax,0xfc66b0b4
  40e9af:	sbb    esi,esp
  40e9b1:	push   es
  40e9b2:	test   DWORD PTR [ecx-0x57763b03],0xf18dd59f
  40e9bc:	adc    esi,DWORD PTR [edi+edi*8+0x6d]
  40e9c0:	jne    0x40ea33
  40e9c2:	mov    ah,0xc0
  40e9c4:	fs popf 
  40e9c6:	call   0xa7c72f7
  40e9cb:	jmp    0x503bb337
  40e9d0:	mov    edx,0xc74ccec4
  40e9d5:	sbb    al,0x4
  40e9d7:	sub    DWORD PTR ds:0x58c29b2d,ebx
  40e9dd:	gs std 
  40e9df:	aas    
  40e9e0:	and    ah,BYTE PTR [edx+0x739ee20f]
  40e9e6:	push   0xc7743b1
  40e9eb:	mov    WORD PTR [ebx+ecx*2],ds
  40e9ee:	loope  0x40ea0b
  40e9f0:	mov    ds:0x1b060912,eax
  40e9f5:	adc    bl,al
  40e9f7:	pop    edi
  40e9f8:	(bad)  
  40e9fa:	sahf   
  40e9fb:	jne    0x40ea18
  40e9fd:	cmp    al,0xa0
  40e9ff:	mov    eax,ds:0x97e55955
  40ea04:	int    0x62
  40ea06:	aas    
  40ea07:	fisub  WORD PTR fs:[esi+0x7d682455]
  40ea0e:	cmc    
  40ea0f:	int3   
  40ea10:	cmp    dh,ah
  40ea12:	adc    al,0x27
  40ea14:	ins    BYTE PTR es:[edi],dx
  40ea15:	jno    0x40ea25
  40ea17:	sub    al,0x40
  40ea19:	lock push edi
  40ea1b:	xor    dl,BYTE PTR [ebx]
  40ea1d:	adc    al,0xd3
  40ea1f:	sub    ecx,esp
  40ea21:	data16 xor al,0xf5
  40ea24:	lds    ecx,FWORD PTR [esi+0xb6e6bf9]
  40ea2a:	stos   BYTE PTR es:[edi],al
  40ea2b:	das    
  40ea2c:	and    DWORD PTR [ebp+0x64],ebp
  40ea2f:	scas   eax,DWORD PTR es:[edi]
  40ea30:	mov    dh,0xe5
  40ea32:	(bad)  
  40ea33:	xchg   ecx,eax
  40ea34:	das    
  40ea35:	sub    eax,0x24a14305
  40ea3a:	nop
  40ea3b:	addr16 call 0xd426:0x31400bc9
  40ea43:	xchg   edx,eax
  40ea44:	and    DWORD PTR [ecx+ebp*4],ebp
  40ea47:	inc    edi
  40ea48:	retf   
  40ea49:	dec    ecx
  40ea4a:	or     edi,DWORD PTR [ebp+0x5d]
  40ea4d:	aas    
  40ea4e:	icebp  
  40ea4f:	and    BYTE PTR [ebp-0x23],ah
  40ea52:	xlat   BYTE PTR ds:[ebx]
  40ea53:	scas   al,BYTE PTR es:[edi]
  40ea54:	imul   ebx,DWORD PTR [edi+ecx*1+0x67cf40b8],0xffffff8a
  40ea5c:	pop    eax
  40ea5d:	(bad)  
  40ea5e:	retf   
  40ea5f:	cmp    al,0x39
  40ea61:	iret   
  40ea62:	mov    ah,0x1d
  40ea64:	mov    ebx,DWORD PTR [eax]
  40ea66:	jmp    0xe8a51196
  40ea6b:	int    0x24
  40ea6d:	out    dx,eax
  40ea6e:	ret    
  40ea6f:	cmp    ch,bl
  40ea71:	daa    
  40ea72:	arpl   WORD PTR [ebp+eax*1-0x56ca0201],ax
  40ea79:	out    0x39,al
  40ea7b:	sub    al,0x33
  40ea7d:	inc    ecx
  40ea7e:	sub    BYTE PTR [esi-0x681f5c8],0x49
  40ea85:	test   bl,dh
  40ea87:	lock clc 
  40ea89:	xor    BYTE PTR ds:0x571bbacd,0xd8
  40ea90:	and    BYTE PTR [eax],bl
  40ea92:	lods   al,BYTE PTR ds:[esi]
  40ea93:	adc    ecx,ecx
  40ea95:	dec    edi
  40ea96:	mov    ds,WORD PTR [eax]
  40ea98:	mov    cs,WORD PTR [edi]
  40ea9a:	aad    0x3
  40ea9c:	repnz popa 
  40ea9e:	test   al,0x60
  40eaa0:	mov    edx,0x7e049b4a
  40eaa5:	mov    ebx,0x330975c9
  40eaaa:	xlat   BYTE PTR ds:[ebx]
  40eaab:	test   DWORD PTR [edx-0x6fa871ac],0x86db49d4
  40eab5:	shl    eax,0xf3
  40eab8:	std    
  40eab9:	fnstenv [edx]
  40eabb:	iret   
  40eabc:	fiadd  WORD PTR [esi+eiz*8-0x3a71240a]
  40eac3:	mov    ds:0xdd0a5627,eax
  40eac8:	jo     0x40eaf9
  40eaca:	mov    bh,0x80
  40eacc:	push   ss
  40eacd:	cmp    eax,0x5124d657
  40ead2:	and    DWORD PTR [eax-0x2f],eax
  40ead5:	retf   0x1cbc
  40ead8:	xlat   BYTE PTR ds:[ebx]
  40ead9:	cmp    al,0x76
  40eadb:	ret    0xbf77
  40eade:	adc    BYTE PTR [esi+edi*8],ah
  40eae1:	xor    eax,0x4691f706
  40eae6:	jmp    0x1da80b95
  40eaeb:	xchg   ebp,eax
  40eaec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaed:	(bad)  
  40eaf0:	cwde   
  40eaf1:	pop    ecx
  40eaf2:	ins    DWORD PTR es:[edi],dx
  40eaf3:	pop    eax
  40eaf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaf5:	in     eax,0x23
  40eaf7:	cdq    
  40eaf8:	adc    eax,edi
  40eafa:	cmc    
  40eafb:	inc    ebp
  40eafc:	aam    0x56
  40eafe:	(bad)  
  40eaff:	addr16 push es
  40eb01:	mov    cl,dl
  40eb03:	fimul  WORD PTR [edi-0x5]
  40eb06:	add    eax,0x6fdec8ee
  40eb0b:	mov    bl,0x2a
  40eb0d:	mov    ah,0xc9
  40eb0f:	mov    ch,0x8f
  40eb11:	rcl    BYTE PTR [esi+0x42c7f966],cl
  40eb17:	adc    eax,0x2de54a26
  40eb1c:	jae    0x40eacc
  40eb1e:	push   esp
  40eb1f:	xor    edi,DWORD PTR [eax+0x48a7fd5e]
  40eb25:	add    BYTE PTR [esi-0x37666fc5],0x8e
  40eb2c:	not    ecx
  40eb2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb2f:	jecxz  0x40eb74
  40eb31:	mov    al,0xd9
  40eb33:	rcr    BYTE PTR [ecx+edi*8],cl
  40eb36:	imul   ebp,DWORD PTR [eax+0x1f],0x1f
  40eb3a:	(bad)  
  40eb3c:	mov    bl,0xc4
  40eb3e:	xlat   BYTE PTR ds:[ebx]
  40eb3f:	cmp    eax,0xd82d8b56
  40eb44:	out    0xbb,al
  40eb46:	neg    DWORD PTR [esi]
  40eb48:	gs push esp
  40eb4a:	iret   
  40eb4b:	push   ecx
  40eb4c:	enter  0x280f,0xa3
  40eb50:	add    eax,0xab037ed1
  40eb55:	pop    ds
  40eb56:	jae    0x40eb90
  40eb58:	xor    eax,0x43742eba
  40eb5d:	add    eax,0xcd4cd445
  40eb62:	packuswb mm2,QWORD PTR [edx+0x711ec706]
  40eb69:	fstp   DWORD PTR [edi-0x37]
  40eb6c:	aam    0x9e
  40eb6e:	mov    cl,0x8e
  40eb70:	in     eax,0xa3
  40eb72:	mov    DWORD PTR [edx+edx*2-0x6c1850d9],esp
  40eb79:	pop    esp
  40eb7a:	push   cs
  40eb7b:	(bad)  
  40eb7c:	xchg   ebx,eax
  40eb7d:	mov    eax,0xf3cf3490
  40eb82:	ret    0x33d0
  40eb85:	push   edi
  40eb86:	das    
  40eb87:	mov    edx,DWORD PTR [ebp+0xd]
  40eb8a:	fs retf 0x2b89
  40eb8e:	aad    0x3b
  40eb90:	cmp    al,0x22
  40eb92:	jno    0x40ebd2
  40eb94:	scas   al,BYTE PTR es:[edi]
  40eb95:	in     eax,0xa6
  40eb97:	xor    DWORD PTR [esi+0x75d09ed8],ecx
  40eb9d:	pcmpgtb mm6,QWORD PTR [ebx]
  40eba0:	sub    DWORD PTR [edi+0x4315f667],esp
  40eba6:	pop    ebp
  40eba7:	lock mov eax,0x78d21d42
  40ebad:	pop    es
  40ebae:	pop    ss
  40ebaf:	inc    esp
  40ebb0:	sub    bl,BYTE PTR [edi+ebp*2-0x4f7f2357]
  40ebb7:	test   DWORD PTR [ebp+0x40],0x87817e29
  40ebbe:	jg     0x40eb88
  40ebc0:	mov    esi,0x43b2d64f
  40ebc5:	das    
  40ebc6:	mov    esi,0x85a3ecc0
  40ebcb:	jb     0x40ebcc
  40ebcd:	pop    edi
  40ebce:	daa    
  40ebcf:	and    al,0xd7
  40ebd1:	mov    bh,0x6f
  40ebd3:	cli    
  40ebd4:	and    BYTE PTR [edi],dh
  40ebd6:	sub    eax,0x9cd8f6fd
  40ebdb:	pop    eax
  40ebdc:	or     al,dh
  40ebde:	(bad)  
  40ebdf:	jmp    0x40ebb5
  40ebe1:	mov    ds:0xa2a8c657,al
  40ebe6:	dec    ebx
  40ebe7:	jne    0x40ec32
  40ebe9:	jmp    0x2643:0x825d0a99
  40ebf0:	movd   DWORD PTR [eax+0x2],mm1
  40ebf4:	sub    esi,edi
  40ebf6:	stos   BYTE PTR es:[edi],al
  40ebf7:	push   0x5e
  40ebf9:	mov    ebp,0xfe0bc061
  40ebfe:	xchg   edx,eax
  40ebff:	cmp    al,0x8c
  40ec01:	push   cs
  40ec02:	pop    ebx
  40ec03:	pop    edi
  40ec04:	fs and al,0x3a
  40ec07:	xor    cl,BYTE PTR [edx]
  40ec09:	dec    esi
  40ec0a:	xchg   ebp,eax
  40ec0b:	sti    
  40ec0c:	or     BYTE PTR [edx],ch
  40ec0e:	retw   
  40ec10:	add    edx,esi
  40ec12:	(bad)  
  40ec14:	cmp    dh,BYTE PTR [esi]
  40ec16:	mov    al,ds:0x53bc2d8f
  40ec1b:	sub    al,0x6b
  40ec1d:	mov    dl,0x67
  40ec1f:	mov    dh,0x53
  40ec21:	fwait
  40ec22:	mov    esi,0x8a6a5ced
  40ec27:	adc    ecx,edx
  40ec29:	les    ebp,FWORD PTR [ebx+0x3a]
  40ec2c:	dec    ecx
  40ec2d:	sti    
  40ec2e:	inc    eax
  40ec2f:	popa   
  40ec30:	dec    ebp
  40ec31:	sub    eax,DWORD PTR [edx]
  40ec33:	or     al,0x1
  40ec35:	lds    ebp,FWORD PTR [eax+0x5e206582]
  40ec3b:	sar    BYTE PTR ds:0xe12ba913,1
  40ec41:	gs fs jo 0x40ec0a
  40ec45:	lods   al,BYTE PTR ds:[esi]
  40ec46:	das    
  40ec47:	(bad)  
  40ec49:	jne    0x40ecb0
  40ec4b:	sub    esp,DWORD PTR [edx+eiz*2-0x7e80bdbc]
  40ec52:	call   FWORD PTR [ebp+0x2a6555df]
  40ec58:	outs   dx,DWORD PTR ds:[esi]
  40ec59:	clc    
  40ec5a:	push   ebp
  40ec5b:	out    dx,al
  40ec5c:	jne    0x40ec2d
  40ec5e:	mov    ch,0xb2
  40ec60:	iret   
  40ec61:	shr    cl,cl
  40ec63:	dec    edx
  40ec64:	(bad)  
  40ec65:	jbe    0x40ebfc
  40ec67:	jge    0x40ec80
  40ec69:	or     DWORD PTR [ebx-0x56a47858],0xffffffce
  40ec70:	push   cs
  40ec71:	push   DWORD PTR ds:0xcc8d3792
  40ec77:	jbe    0x40ec10
  40ec79:	push   ebp
  40ec7a:	ret    0x35c7
  40ec7d:	mov    cl,0x9e
  40ec7f:	je     0x40ec51
  40ec81:	push   edi
  40ec82:	mov    esp,DWORD PTR [edx]
  40ec84:	test   al,0xcc
  40ec86:	je     0x40ec7e
  40ec88:	popa   
  40ec89:	pop    eax
  40ec8a:	aad    0x52
  40ec8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec8d:	rcr    ebp,cl
  40ec8f:	and    DWORD PTR [eax-0x5a],eax
  40ec92:	sub    DWORD PTR [edi-0x1e],esi
  40ec95:	push   0x26ff36ad
  40ec9a:	inc    esi
  40ec9b:	pop    esi
  40ec9c:	mov    dh,0x2a
  40ec9e:	cli    
  40ec9f:	pushf  
  40eca0:	xor    BYTE PTR [ebp+edx*2+0x3774400d],dl
  40eca7:	jo     0x40ecc9
  40eca9:	fst    DWORD PTR [ecx+0x65a8de04]
  40ecaf:	pop    edx
  40ecb0:	popf   
  40ecb1:	fcomp  QWORD PTR [edx-0x5be50de5]
  40ecb7:	pop    eax
  40ecb8:	add    esi,DWORD PTR [edx+0xa]
  40ecbb:	loope  0x40ec66
  40ecbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecbe:	pop    eax
  40ecbf:	mov    dl,0xf0
  40ecc1:	lods   eax,DWORD PTR ds:[esi]
  40ecc2:	dec    ebp
  40ecc3:	mov    edx,0xcd14191b
  40ecc8:	das    
  40ecc9:	aad    0x97
  40eccb:	out    dx,eax
  40eccc:	dec    esi
  40eccd:	adc    dh,ch
  40eccf:	out    dx,eax
  40ecd0:	(bad)  
  40ecd1:	xor    ebp,DWORD PTR [ebx*4+0x51b1a4a6]
  40ecd8:	ins    DWORD PTR es:[edi],dx
  40ecd9:	fisttp QWORD PTR [ecx]
  40ecdb:	mov    edi,0x54f8a8b
  40ece0:	cld    
  40ece1:	in     eax,0x57
  40ece3:	ror    eax,0x62
  40ece6:	cs stos DWORD PTR es:[edi],eax
  40ece8:	cs sub al,0xd
  40eceb:	or     dh,0x13
  40ecee:	xor    edx,ebp
  40ecf0:	sub    eax,0x1eb04166
  40ecf5:	push   edi
  40ecf6:	stc    
  40ecf7:	clc    
  40ecf8:	push   ecx
  40ecf9:	call   0x8c3260a7
  40ecfe:	cli    
  40ecff:	retf   
  40ed00:	mov    bl,0x45
  40ed02:	jns    0x40ec8e
  40ed04:	rol    DWORD PTR [edx+0x36],0xe6
  40ed08:	push   edx
  40ed09:	int3   
  40ed0a:	test   eax,0xeb02a666
  40ed0f:	push   esi
  40ed10:	push   es
  40ed11:	retf   0x6807
  40ed14:	mov    WORD PTR [edi+0x5738cee6],fs
  40ed1a:	out    0xa6,eax
  40ed1c:	sub    ch,bh
  40ed1e:	test   DWORD PTR [esi-0x47004856],esp
  40ed24:	arpl   WORD PTR [esp+edx*2-0x57f786df],bx
  40ed2b:	fsubr  DWORD PTR [ecx+0x35c61e76]
  40ed31:	mov    ds:0x59c32f2c,eax
  40ed36:	icebp  
  40ed37:	idiv   BYTE PTR [esi-0x34b18b3]
  40ed3d:	out    dx,al
  40ed3e:	sahf   
  40ed3f:	cdq    
  40ed40:	cs popa 
  40ed42:	je     0x40eced
  40ed44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed45:	pop    esi
  40ed46:	xchg   esp,eax
  40ed47:	mov    al,ds:0xed1e6d84
  40ed4c:	jecxz  0x40edc8
  40ed4e:	popf   
  40ed4f:	lods   eax,DWORD PTR ds:[esi]
  40ed50:	daa    
  40ed51:	push   esp
  40ed52:	test   al,0x90
  40ed54:	cs (bad) 
  40ed56:	mov    cl,bh
  40ed58:	push   0x63
  40ed5a:	in     eax,dx
  40ed5b:	into   
  40ed5c:	fistp  DWORD PTR [eax+0x75]
  40ed5f:	jae    0x40edb3
  40ed61:	jo     0x40ed5f
  40ed63:	adc    ch,BYTE PTR [ecx]
  40ed65:	push   ecx
  40ed66:	jmp    0x40edd9
  40ed68:	mov    WORD PTR [ebx-0x4373830],gs
  40ed6e:	xchg   ebx,eax
  40ed6f:	push   ebp
  40ed70:	ret    0x4a47
  40ed73:	nop
  40ed74:	ins    DWORD PTR es:[edi],dx
  40ed75:	sbb    DWORD PTR [bp-0x1],edx
  40ed79:	inc    esi
  40ed7a:	sub    esp,DWORD PTR [ebx]
  40ed7c:	test   BYTE PTR [ecx+0x111dc317],dh
  40ed82:	push   edx
  40ed83:	ja     0x40ed0b
  40ed85:	dec    esp
  40ed86:	dec    edi
  40ed87:	xchg   esp,eax
  40ed88:	push   ecx
  40ed89:	rcl    DWORD PTR [eax+eax*1],cl
  40ed8c:	dec    ebp
  40ed8d:	pop    ebp
  40ed8e:	mov    ds:0x3b1cbfcb,eax
  40ed93:	dec    ebp
  40ed94:	ins    DWORD PTR es:[edi],dx
  40ed95:	mov    al,ds:0x376c2233
  40ed9a:	je     0x40ed29
  40ed9c:	inc    ecx
  40ed9d:	sub    BYTE PTR [edx-0x38],ch
  40eda0:	cmp    DWORD PTR [edx-0x27de3a3b],ebp
  40eda6:	lock or al,0x9a
  40eda9:	ficomp WORD PTR [esi]
  40edab:	pushf  
  40edac:	fs xor eax,0x7c9cb1bd
  40edb2:	mov    ds:0xadaa0d0d,eax
  40edb7:	adc    esp,DWORD PTR [ebp+0x14779c3c]
  40edbd:	and    eax,0xc4fea7b8
  40edc2:	add    BYTE PTR [ebx+0x0],al
  40edc5:	and    BYTE PTR [ebp+0x74d56a61],al
  40edcb:	imul   edi,DWORD PTR [eax-0x27ac6cfc],0x2f
  40edd2:	in     eax,dx
  40edd3:	test   BYTE PTR [eax],cl
  40edd5:	int3   
  40edd6:	sub    al,0x6
  40edd8:	and    DWORD PTR [ecx+esi*1],0x3
  40eddc:	(bad)  
  40edde:	inc    esp
  40eddf:	jecxz  0x40edeb
  40ede1:	(bad)  
  40ede2:	icebp  
  40ede3:	jecxz  0x40edc3
  40ede5:	arpl   bx,bp
  40ede7:	iret   
  40ede8:	js     0x40edda
  40edea:	or     al,0x3e
  40edec:	mov    ds:0xb3071998,eax
  40edf1:	or     edx,DWORD PTR [eax-0x9b64835]
  40edf7:	mov    WORD PTR fs:[ecx],es
  40edfa:	xchg   ecx,eax
  40edfb:	push   ss
  40edfc:	jo     0x40ede7
  40edfe:	jbe    0x40ee69
  40ee00:	mov    esi,0x369fb783
  40ee05:	addr16 cmp dh,cl
  40ee08:	outs   dx,BYTE PTR ds:[esi]
  40ee09:	gs aad 0x74
  40ee0c:	pushf  
  40ee0d:	sar    ebp,cl
  40ee0f:	mov    BYTE PTR [eax+0x757eb53a],bl
  40ee15:	dec    edi
  40ee16:	popf   
  40ee17:	popa   
  40ee18:	sub    BYTE PTR gs:[ebx+0x2203cd1a],bh
  40ee1f:	sbb    BYTE PTR [ecx],al
  40ee21:	dec    esp
  40ee22:	jbe    0x40ee45
  40ee24:	aas    
  40ee25:	inc    ebx
  40ee26:	stos   DWORD PTR es:[edi],eax
  40ee27:	mov    edx,0x2002d37e
  40ee2c:	ins    BYTE PTR es:[edi],dx
  40ee2d:	ins    DWORD PTR es:[edi],dx
  40ee2e:	ss adc ecx,edi
  40ee31:	jp     0x40ee0c
  40ee33:	jg     0x40ee78
  40ee35:	mov    dh,0x52
  40ee37:	adc    DWORD PTR [esi-0x7],0x25
  40ee3b:	jge    0x40ee52
  40ee3d:	or     al,BYTE PTR [esi-0x9]
  40ee40:	loopne 0x40ee9e
  40ee42:	push   cs
  40ee43:	stos   DWORD PTR es:[edi],eax
  40ee44:	cmp    eax,0x8b0d1d82
  40ee49:	xor    al,ah
  40ee4b:	jle    0x40eea6
  40ee4d:	push   ss
  40ee4e:	xor    al,0xf2
  40ee50:	jne    0x40ee27
  40ee52:	int    0x5f
  40ee54:	inc    esi
  40ee55:	xlat   BYTE PTR ds:[ebx]
  40ee56:	fwait
  40ee57:	enter  0xf88c,0xc6
  40ee5b:	push   ds
  40ee5c:	inc    esp
  40ee5d:	jne    0x40ee87
  40ee5f:	out    0x57,al
  40ee61:	fs inc ebx
  40ee63:	mov    eax,0x7d30d51b
  40ee68:	nop
  40ee69:	and    dh,BYTE PTR [edx]
  40ee6b:	stos   DWORD PTR es:[edi],eax
  40ee6c:	cmp    esi,DWORD PTR [edx+0x248f8a1a]
  40ee72:	xchg   ebp,eax
  40ee73:	push   eax
  40ee74:	sub    eax,0x8fc50c6
  40ee79:	dec    eax
  40ee7a:	add    DWORD PTR [ecx-0x47],eax
  40ee7d:	xchg   esi,eax
  40ee7e:	mov    edi,0xadd1289f
  40ee83:	xor    DWORD PTR [eax],esp
  40ee85:	or     BYTE PTR [ebx-0x18],0xb
  40ee89:	or     eax,0x9b049e04
  40ee8e:	nop
  40ee8f:	jg     0x40ee61
  40ee91:	or     al,0x38
  40ee93:	pop    es
  40ee94:	outs   dx,BYTE PTR ds:[esi]
  40ee95:	mov    ?,WORD PTR [eax+edx*8+0x1e58f5bb]
  40ee9c:	mov    DWORD PTR [edi-0x5657e56d],0xb92e3f
  40eea6:	arpl   sp,ax
  40eea8:	leave  
  40eea9:	out    dx,eax
  40eeaa:	imul   edi,DWORD PTR [edx],0x7eb9be3a
  40eeb0:	ss add eax,0xbf56c359
  40eeb6:	add    BYTE PTR [esi+0x7d1ef9bd],dl
  40eebc:	call   0x9eb1:0x32f3f604
  40eec3:	iret   
  40eec4:	mov    esp,0x1d85ace6
  40eec9:	shl    BYTE PTR [ecx+0x3d],cl
  40eecc:	sub    ecx,ebx
  40eece:	popa   
  40eecf:	jmp    0xe03c0d22
  40eed4:	push   edx
  40eed5:	call   0xdaee3aa2
  40eeda:	popa   
  40eedb:	pop    ss
  40eedc:	leave  
  40eedd:	clc    
  40eede:	inc    esp
  40eedf:	fwait
  40eee0:	das    
  40eee1:	push   0xffffffc8
  40eee3:	add    dh,BYTE PTR [esi]
  40eee5:	mov    ds:0xfda16828,al
  40eeea:	dec    ecx
  40eeeb:	lods   al,BYTE PTR ds:[esi]
  40eeec:	or     eax,0x8f5a70d5
  40eef1:	mov    ebp,0x258864ac
  40eef6:	je     0x40ef2f
  40eef8:	sar    al,1
  40eefa:	inc    ecx
  40eefb:	jmp    0x73e8:0x67eba3b9
  40ef02:	out    dx,eax
  40ef03:	add    cl,ch
  40ef05:	lea    ebp,[ebx]
  40ef07:	sub    BYTE PTR [edi],ah
  40ef09:	out    dx,al
  40ef0a:	inc    ecx
  40ef0b:	stos   DWORD PTR es:[edi],eax
  40ef0c:	repz jg 0x40eed4
  40ef0f:	and    dh,BYTE PTR [eax-0x58]
  40ef12:	xchg   esi,eax
  40ef13:	mov    ebp,0x9457b9db
  40ef18:	in     al,0x0
  40ef1a:	nop
  40ef1b:	in     eax,dx
  40ef1c:	cmp    bh,BYTE PTR [edx+0x56478951]
  40ef22:	test   BYTE PTR [eax],0xe8
  40ef25:	push   eax
  40ef26:	dec    ebp
  40ef27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef28:	inc    ebx
  40ef29:	adc    ah,BYTE PTR [edx+0x498fc901]
  40ef2f:	jno    0x40eeba
  40ef31:	inc    ebp
  40ef32:	test   al,0x53
  40ef34:	clc    
  40ef35:	in     eax,dx
  40ef36:	aad    0x1e
  40ef38:	add    eax,0x7b9b4bc6
  40ef3d:	test   BYTE PTR [edi+0x2c],0x29
  40ef41:	stc    
  40ef42:	mov    eax,0x1ad39ab3
  40ef47:	test   ebx,esp
  40ef49:	pop    edx
  40ef4a:	pop    ecx
  40ef4b:	sbb    BYTE PTR [edx+0x7f],dh
  40ef4e:	fmul   DWORD PTR [ebp-0x424ef1c9]
  40ef54:	iret   
  40ef55:	daa    
  40ef56:	leave  
  40ef57:	cld    
  40ef58:	sbb    bl,0xe7
  40ef5b:	into   
  40ef5c:	cwde   
  40ef5d:	test   eax,0x4baf3906
  40ef62:	nop
  40ef63:	mov    eax,0xd5ebb6d0
  40ef68:	ins    DWORD PTR es:[edi],dx
  40ef69:	push   ebx
  40ef6a:	inc    edi
  40ef6b:	add    al,0x60
  40ef6d:	enter  0x2a9,0xea
  40ef71:	or     DWORD PTR [ebp+0x25],edx
  40ef74:	sbb    eax,0xd906a521
  40ef79:	jno    0x40efdf
  40ef7b:	jmp    0x6a2eb8b
  40ef80:	mov    ah,0x48
  40ef82:	push   ebx
  40ef83:	pop    ebx
  40ef84:	push   ebp
  40ef85:	mov    esp,es
  40ef87:	or     DWORD PTR [ebx],eax
  40ef89:	and    al,BYTE PTR [eax+0x4]
  40ef8c:	and    BYTE PTR [ecx-0x3fc0c157],ah
  40ef92:	dec    ecx
  40ef93:	mov    ch,0xcc
  40ef95:	sub    al,0x77
  40ef97:	or     esi,DWORD PTR [esi+esi*1-0x3f3e403c]
  40ef9e:	ds in  eax,0xdd
  40efa1:	hlt    
  40efa2:	mov    dl,0x16
  40efa4:	mov    dl,0xe3
  40efa6:	ret    0xba8a
  40efa9:	push   ebx
  40efaa:	pop    ebp
  40efab:	mov    ah,0x89
  40efad:	xor    ah,dl
  40efaf:	ss rcr BYTE PTR gs:[esi+0x17458fc7],0x51
  40efb8:	je     0x40efa8
  40efba:	ja     0x40ef5c
  40efbc:	outs   dx,DWORD PTR ds:[esi]
  40efbd:	add    al,0xb4
  40efbf:	push   ss
  40efc0:	push   ecx
  40efc1:	mov    ecx,0x85cfa034
  40efc6:	std    
  40efc7:	cwde   
  40efc8:	retf   0x4ee8
  40efcb:	xchg   ecx,eax
  40efcc:	scas   al,BYTE PTR es:[edi]
  40efcd:	push   ebx
  40efce:	aaa    
  40efcf:	jle    0x40f032
  40efd1:	loope  0x40f011
  40efd3:	enter  0xd628,0xaf
  40efd7:	outs   dx,BYTE PTR ds:[esi]
  40efd8:	sbb    ah,BYTE PTR [edi+0x46]
  40efdb:	cmp    al,0x92
  40efdd:	stc    
  40efde:	pop    eax
  40efdf:	enter  0xd183,0xff
  40efe3:	sub    eax,0xf7479165
  40efe8:	data16 into 
  40efea:	sub    ebx,DWORD PTR [esi-0x2df3d3b7]
  40eff0:	cwde   
  40eff1:	cmp    ch,bl
  40eff3:	mov    gs,esp
  40eff5:	popa   
  40eff6:	sub    bh,BYTE PTR [edx+0x3f]
  40eff9:	test   DWORD PTR [eax-0x5e91aa25],0xede70033
  40f003:	mov    eax,0xd4036e29
  40f008:	cmp    eax,0x1ffa24df
  40f00d:	pop    ebx
  40f00e:	pop    ebx
  40f00f:	cwde   
  40f010:	lods   eax,DWORD PTR ds:[esi]
  40f011:	sbb    BYTE PTR [eax],0xeb
  40f014:	mov    bl,0x72
  40f016:	sahf   
  40f017:	jae    0x40f04a
  40f019:	adc    eax,0x8dc6ae30
  40f01e:	push   cs
  40f01f:	in     eax,dx
  40f020:	mov    esp,0xd8f484fc
  40f025:	sub    DWORD PTR [edi],esp
  40f027:	or     eax,edx
  40f029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f02a:	ficom  WORD PTR [ecx-0x2e]
  40f02d:	mov    edi,0xb84a5e8d
  40f032:	mov    esp,eax
  40f034:	inc    edi
  40f035:	je     0x40efbc
  40f037:	popaw  
  40f039:	je     0x40efd2
  40f03b:	or     esi,ecx
  40f03d:	int    0x38
  40f03f:	adc    ebx,edx
  40f041:	out    dx,al
  40f042:	xchg   ebx,eax
  40f043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f044:	mov    dh,0x9e
  40f046:	jge    0x40f027
  40f048:	loop   0x40f0a3
  40f04a:	jmp    0x40efdf
  40f04c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f04d:	ds add al,0xd4
  40f050:	add    al,0x18
  40f052:	enter  0xc877,0x32
  40f056:	inc    ebx
  40f057:	xor    dh,BYTE PTR [edi-0x4307d6da]
  40f05d:	mov    eax,ds:0xae335de7
  40f062:	mov    edi,DWORD PTR [eax-0x137ef56c]
  40f068:	push   0xfa7613ae
  40f06d:	sub    ah,BYTE PTR [ebp+0x54]
  40f070:	xor    DWORD PTR [eax-0x13],ecx
  40f073:	cmp    al,0x19
  40f075:	add    eax,0xb3cda0db
  40f07a:	test   BYTE PTR [eax+ebp*8+0x19f66143],dl
  40f081:	jb     0x40f0e3
  40f083:	push   ebx
  40f084:	and    al,0xab
  40f086:	mov    ebx,0xa6814bf3
  40f08b:	(bad)  
  40f08c:	jo     0x40f019
  40f08e:	imul   ecx,DWORD PTR [ebx-0x118e064c],0x415edb91
  40f098:	fwait
  40f099:	sbb    ebx,ebx
  40f09b:	(bad)  
  40f09c:	ficom  WORD PTR [ecx-0x7d]
  40f09f:	das    
  40f0a0:	aaa    
  40f0a1:	and    BYTE PTR ds:0xc0b71f6e,dh
  40f0a7:	(bad)  
  40f0a8:	sti    
  40f0a9:	std    
  40f0aa:	fdivr  DWORD PTR [ebx-0x7e]
  40f0ad:	cmp    BYTE PTR [eax+0x42],0x34
  40f0b1:	or     eax,0xad5a4558
  40f0b6:	sub    al,0x3a
  40f0b8:	push   cs
  40f0b9:	jmp    0x40f098
  40f0bb:	push   edi
  40f0bc:	js     0x40f086
  40f0be:	jno    0x40f0ca
  40f0c0:	cmc    
  40f0c1:	xor    eax,0x6ac06313
  40f0c6:	aam    0x28
  40f0c8:	mov    BYTE PTR [ebp-0x25f23374],dh
  40f0ce:	cmp    al,BYTE PTR [edx+0x4b70a35b]
  40f0d4:	imul   ecx,DWORD PTR [edx+0x7a],0x733ea8eb
  40f0db:	pop    esi
  40f0dc:	imul   esp,DWORD PTR [eax],0x5268a578
  40f0e2:	sbb    al,0x12
  40f0e4:	out    0x65,eax
  40f0e6:	lock mov ch,0xc5
  40f0e9:	push   ebx
  40f0ea:	adc    DWORD PTR [edi],ecx
  40f0ec:	(bad)  
  40f0ed:	jle    0x40f14c
  40f0ef:	pop    es
  40f0f0:	cmp    BYTE PTR [eax+0x20],cl
  40f0f3:	mov    ah,0x5a
  40f0f5:	push   esp
  40f0f6:	sbb    eax,0x2d9da4f2
  40f0fb:	ficomp WORD PTR [edx]
  40f0fd:	std    
  40f0fe:	cli    
  40f0ff:	(bad)  
  40f100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f101:	(bad)
  40f104:	bound  ecx,QWORD PTR [edi]
  40f106:	sbb    DWORD PTR [ebx+ecx*2-0x241a6b69],esi
  40f10d:	cmp    DWORD PTR [edi-0x9],esp
  40f110:	ds adc eax,0xcbb97b2f
  40f116:	and    bh,BYTE PTR ds:[edi+0x75ecfd6a]
  40f11d:	gs es jb 0x40f0ed
  40f121:	mov    fs,WORD PTR [ecx]
  40f123:	stos   BYTE PTR es:[edi],al
  40f124:	dec    ecx
  40f125:	xor    al,0xd4
  40f127:	mov    DWORD PTR [edi+0x18a6b588],ebp
  40f12d:	push   ds
  40f12e:	rcl    BYTE PTR fs:[ecx-0x74],1
  40f132:	sub    dl,ah
  40f134:	mov    al,ds:0xe1e2bfb4
  40f139:	dec    edi
  40f13a:	add    eax,0xf2988bef
  40f13f:	mov    dl,BYTE PTR [esi+0x6a]
  40f142:	arpl   WORD PTR [edx+0x241d0f92],bx
  40f148:	test   DWORD PTR [ebp-0x5dbe6855],edx
  40f14e:	retf   0x6ac8
  40f151:	push   esp
  40f152:	push   esp
  40f153:	ds not ebp
  40f156:	retf   
  40f157:	shr    edx,cl
  40f159:	enter  0x1133,0xd6
  40f15d:	nop
  40f15e:	xchg   edx,eax
  40f15f:	mov    ebx,0x7cb3a78b
  40f164:	test   DWORD PTR [esi],ecx
  40f166:	xchg   esi,eax
  40f167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f168:	fwait
  40f169:	pusha  
  40f16a:	sbb    DWORD PTR [edi-0x72407a61],ebx
  40f170:	sahf   
  40f171:	pusha  
  40f172:	and    dl,ah
  40f174:	sub    al,0x59
  40f176:	(bad)  
  40f177:	pop    edx
  40f178:	push   es
  40f179:	lock in al,0xdc
  40f17c:	and    DWORD PTR [eax],edx
  40f17e:	fdivr  QWORD PTR [ebp+0x27]
  40f181:	mov    al,0x35
  40f183:	inc    ebp
  40f184:	(bad)  
  40f186:	inc    edi
  40f187:	cdq    
  40f188:	lock adc ch,BYTE PTR [edi]
  40f18b:	sub    bh,BYTE PTR [ebx-0x30be815f]
  40f191:	jo     0x40f175
  40f193:	add    DWORD PTR [eax*8+0x4f03291d],edi
  40f19a:	mov    edx,0xba4a424f
  40f19f:	jge    0x40f170
  40f1a1:	mov    bl,0x3e
  40f1a3:	shr    DWORD PTR [ebp+0x5843eefc],1
  40f1a9:	repnz mov cl,0xa4
  40f1ac:	test   al,0xc1
  40f1ae:	mov    ah,al
  40f1b0:	hlt    
  40f1b1:	add    dh,al
  40f1b3:	cmp    DWORD PTR [ecx+0x28032466],0x25da5eb8
  40f1bd:	rol    dh,cl
  40f1bf:	aaa    
  40f1c0:	push   esi
  40f1c1:	xchg   DWORD PTR [esi],esi
  40f1c3:	push   ds
  40f1c4:	push   ecx
  40f1c5:	xchg   ebx,eax
  40f1c6:	cmp    ah,al
  40f1c8:	sbb    eax,DWORD PTR [edi+0x5d]
  40f1cb:	or     ch,BYTE PTR [ebp-0x35]
  40f1ce:	sub    BYTE PTR [esi+0x377b2dd3],bh
  40f1d4:	nop
  40f1d5:	xor    edi,ecx
  40f1d7:	fild   WORD PTR [edi]
  40f1d9:	scas   al,BYTE PTR es:[edi]
  40f1da:	pop    edi
  40f1db:	inc    eax
  40f1dc:	popf   
  40f1dd:	mov    ebx,0xa7d39851
  40f1e2:	arpl   WORD PTR [edi+ecx*4+0xad1f70c],di
  40f1e9:	iret   
  40f1ea:	jae    0x40f267
  40f1ec:	ficomp DWORD PTR [edi]
  40f1ee:	shl    DWORD PTR [ecx+eiz*1+0x42],1
  40f1f2:	jmp    FWORD PTR [ebp+0x7ee847e]
  40f1f8:	rcl    DWORD PTR [ebx+0xa],cl
  40f1fb:	xor    cl,BYTE PTR [ebx-0x9]
  40f1fe:	bound  edx,QWORD PTR [esi+edx*8]
  40f201:	mov    dh,0x6a
  40f203:	call   0x2c01:0x184be4a0
  40f20a:	push   esp
  40f20b:	outs   dx,DWORD PTR ds:[esi]
  40f20c:	shl    DWORD PTR [ebx-0x66],0x8a
  40f210:	pop    edi
  40f211:	xor    dh,0x3a
  40f214:	out    0x5d,eax
  40f216:	pop    esi
  40f217:	sbb    DWORD PTR [ebx+0x3f],esp
  40f21a:	cmc    
  40f21b:	je     0x40f254
  40f21d:	push   edi
  40f21e:	sub    bh,0xb8
  40f221:	sbb    BYTE PTR [ebx],al
  40f223:	push   0x1312eeb9
  40f228:	popa   
  40f229:	out    0x49,ax
  40f22c:	jp     0x40f267
  40f22e:	pop    ebp
  40f22f:	aad    0x31
  40f231:	shl    bl,0x2a
  40f234:	dec    ebx
  40f235:	imul   ebp,edi,0x68f2e63b
  40f23b:	xchg   esp,eax
  40f23c:	push   esp
  40f23d:	push   cs
  40f23e:	cmp    esi,DWORD PTR [edx+0x4885cce5]
  40f244:	ffree  st(4)
  40f246:	out    dx,al
  40f247:	mov    cs,WORD PTR [eax-0xf]
  40f24a:	loop   0x40f1fa
  40f24c:	jmp    0xfdd171b7
  40f251:	out    0xf5,eax
  40f253:	retf   0x3795
  40f256:	mov    ah,ah
  40f258:	or     ch,ch
  40f25a:	pushf  
  40f25b:	and    DWORD PTR [ebp+0x65],esi
  40f25e:	in     al,dx
  40f25f:	outs   dx,BYTE PTR ds:[esi]
  40f260:	fwait
  40f261:	pop    esi
  40f262:	mov    cl,0x38
  40f264:	lea    ebx,[ecx+edx*4]
  40f267:	xor    eax,0x63dcb3ad
  40f26c:	scas   al,BYTE PTR es:[edi]
  40f26d:	dec    edi
  40f26e:	adc    al,0x1
  40f270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f271:	stos   DWORD PTR es:[edi],eax
  40f272:	ins    BYTE PTR es:[edi],dx
  40f273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f274:	inc    eax
  40f275:	add    eax,0x43f8088
  40f27a:	mov    BYTE PTR [eax],dl
  40f27c:	jmp    0xbabe9151
  40f281:	cmc    
  40f282:	pop    ebp
  40f283:	sbb    esp,DWORD PTR [edx-0x4a]
  40f286:	dec    esp
  40f287:	into   
  40f288:	out    dx,eax
  40f289:	sbb    eax,0x98116718
  40f28e:	or     BYTE PTR [edi+esi*4+0x28a50d73],bl
  40f295:	sub    DWORD PTR [ebx-0xc],ebp
  40f298:	xor    DWORD PTR [edi+0x149c309e],edx
  40f29e:	pusha  
  40f29f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2a0:	inc    ebp
  40f2a1:	or     DWORD PTR [esi+0x54ee0688],eax
  40f2a7:	jle    0x40f327
  40f2a9:	cmp    dl,al
  40f2ab:	outs   dx,BYTE PTR ds:[esi]
  40f2ac:	popf   
  40f2ad:	rcl    BYTE PTR [edx+eax*4-0x42],0x9f
  40f2b2:	das    
  40f2b3:	imul   edi,DWORD PTR [ebp+0x6f97d5ff],0x2
  40f2ba:	add    BYTE PTR [eax-0x70823aea],dh
  40f2c0:	dec    edx
  40f2c1:	je     0x40f26a
  40f2c3:	mov    esi,cs
  40f2c5:	pop    esi
  40f2c6:	jmp    0x1f79:0xa6ec6ce5
  40f2cd:	push   ebp
  40f2ce:	pop    edi
  40f2cf:	sbb    al,0x70
  40f2d1:	adc    edx,DWORD PTR ds:0x7377345c
  40f2d7:	and    eax,0x5c174d5e
  40f2dc:	mov    ds:0x4cdecec6,eax
  40f2e1:	out    0x83,al
  40f2e3:	mov    ch,0x16
  40f2e5:	fwait
  40f2e6:	xchg   ecx,eax
  40f2e7:	fisub  DWORD PTR [edx]
  40f2e9:	push   0xafd8fc37
  40f2ee:	jno    0x40f304
  40f2f0:	test   BYTE PTR [eax+0x15],0x14
  40f2f4:	sub    esp,eax
  40f2f6:	leave  
  40f2f7:	pop    eax
  40f2f8:	sti    
  40f2f9:	gs enter 0x6c4d,0xb9
  40f2fe:	push   esi
  40f2ff:	es mov ebx,0xa209759e
  40f305:	pushf  
  40f306:	mov    WORD PTR [edx+0x72b0c7b7],gs
  40f30c:	cld    
  40f30d:	sub    cl,BYTE PTR [ebx]
  40f30f:	fsubr  DWORD PTR [ecx]
  40f311:	dec    edi
  40f312:	push   edx
  40f313:	out    0xf5,eax
  40f315:	repz adc cl,ah
  40f318:	aad    0x7d
  40f31a:	pop    es
  40f31b:	aam    0xd0
  40f31d:	xchg   ecx,eax
  40f31e:	push   edx
  40f31f:	ret    0x2610
  40f322:	shl    DWORD PTR [ebp-0x383dbfd6],0xae
  40f329:	(bad)  
  40f32a:	out    dx,eax
  40f32b:	jmp    0x40f38c
  40f32d:	push   edx
  40f32e:	xchg   esi,eax
  40f32f:	shl    DWORD PTR [edx+esi*4-0x32],cl
  40f333:	push   esp
  40f334:	lds    ebp,FWORD PTR [ebp+0xfdd487d]
  40f33a:	xor    DWORD PTR [ebp+esi*8+0x41760000],edx
  40f341:	sbb    esp,ecx
  40f343:	hlt    
  40f344:	mov    al,ds:0x413c4d35
  40f349:	js     0x40f34b
  40f34b:	stc    
  40f34c:	jb     0x40f2df
  40f34e:	pop    esp
  40f34f:	lea    edi,[edi+ebx*1]
  40f352:	hlt    
  40f353:	ret    
  40f354:	inc    eax
  40f355:	and    al,0x15
  40f357:	sbb    BYTE PTR [edi],bl
  40f359:	dec    ecx
  40f35a:	push   0x68d8cb36
  40f35f:	sahf   
  40f360:	or     BYTE PTR [edx],al
  40f362:	jmp    DWORD PTR ds:0x1a226263
  40f368:	scas   al,BYTE PTR es:[edi]
  40f369:	ds jnp 0x40f364
  40f36c:	sub    BYTE PTR [esi+esi*1-0x62],dh
  40f370:	jge    0x40f30d
  40f372:	mov    dl,bh
  40f374:	jmp    0x40f393
  40f376:	mov    al,0xc8
  40f378:	stos   DWORD PTR es:[edi],eax
  40f379:	and    bh,BYTE PTR [ebx]
  40f37b:	cwde   
  40f37c:	fiadd  DWORD PTR [esi]
  40f37e:	mov    ds:0x331a8bf2,al
  40f383:	sti    
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0x38d381,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	inc    edi
  40f484:	push   es
  40f485:	fs xchg esi,eax
  40f487:	jecxz  0x40f40a
  40f489:	push   edx
  40f48a:	push   DWORD PTR [ebp+edi*4+0x16931a52]
  40f491:	push   esp
  40f492:	mov    al,ds:0xe334a2b1
  40f497:	cmove  edx,DWORD PTR [esi]
  40f49a:	xor    BYTE PTR [ebx+eiz*8-0x22185922],ah
  40f4a1:	stos   DWORD PTR es:[edi],eax
  40f4a2:	and    BYTE PTR [esi-0x7e],dl
  40f4a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4a6:	push   eax
  40f4a7:	xchg   DWORD PTR [ecx],esp
  40f4a9:	aas    
  40f4aa:	inc    ebp
  40f4ab:	fimul  DWORD PTR [eax+0x52e4fda]
  40f4b1:	xchg   esp,eax
  40f4b2:	test   DWORD PTR [esi],edx
  40f4b4:	pop    ds
  40f4b5:	adc    al,dh
  40f4b7:	adc    dl,BYTE PTR [edx+ecx*4+0x446d581e]
  40f4be:	mov    ds:0xdae01fe9,eax
  40f4c3:	inc    esi
  40f4c4:	fwait
  40f4c5:	inc    esp
  40f4c6:	pushf  
  40f4c7:	pop    ds
  40f4c8:	loopne 0x40f50f
  40f4ca:	cmc    
  40f4cb:	or     bh,ch
  40f4cd:	les    esi,FWORD PTR [esi]
  40f4cf:	out    dx,eax
  40f4d0:	popf   
  40f4d1:	mov    bh,0x7e
  40f4d3:	add    al,0x1c
  40f4d5:	hlt    
  40f4d6:	mov    DWORD PTR [eax+eax*4-0x535f85e5],ebp
  40f4dd:	in     eax,0x96
  40f4df:	pop    ss
  40f4e0:	sub    dh,al
  40f4e2:	xchg   ebx,eax
  40f4e3:	adc    BYTE PTR [edx-0x54b28fd7],dh
  40f4e9:	loopne 0x40f507
  40f4eb:	sub    ah,BYTE PTR [edi+0x11]
  40f4ee:	push   ebx
  40f4ef:	pusha  
  40f4f0:	xchg   esi,eax
  40f4f1:	mov    dl,0x81
  40f4f3:	mov    WORD PTR [ecx],?
  40f4f5:	add    ah,0x57
  40f4f8:	stos   BYTE PTR es:[edi],al
  40f4f9:	stos   BYTE PTR es:[edi],al
  40f4fa:	mov    dl,0xc7
  40f4fc:	push   cs
  40f4fd:	into   
  40f4fe:	outs   dx,DWORD PTR ds:[esi]
  40f4ff:	test   BYTE PTR [ebx-0x4d],bl
  40f502:	out    0x88,al
  40f504:	mov    bl,0x5f
  40f506:	ss mov ebp,0x96daf233
  40f50c:	mov    bl,0x53
  40f50e:	icebp  
  40f50f:	pop    ebx
  40f510:	test   BYTE PTR [esp+eax*4-0x4b1aff40],bl
  40f517:	(bad)  
  40f518:	ror    DWORD PTR [esi],0x6f
  40f51b:	dec    ebx
  40f51c:	xchg   ebp,eax
  40f51d:	cmp    bl,BYTE PTR [ebx-0x680d925c]
  40f523:	inc    ebx
  40f524:	and    eax,DWORD PTR [edi]
  40f526:	ficom  DWORD PTR [eax]
  40f528:	and    eax,esi
  40f52a:	xchg   ecx,eax
  40f52b:	ins    DWORD PTR es:[edi],dx
  40f52c:	push   es
  40f52d:	jo     0x40f5a9
  40f52f:	mov    dh,0x31
  40f531:	scas   al,BYTE PTR es:[edi]
  40f532:	int3   
  40f533:	call   0x9d0d:0x22261893
  40f53a:	out    dx,al
  40f53b:	mov    cs:0xab8ad249,eax
  40f541:	push   ecx
  40f542:	xchg   esp,eax
  40f543:	iret   
  40f544:	mov    ch,0xf8
  40f546:	(bad)  
  40f547:	jle    0x40f4d4
  40f549:	scas   eax,DWORD PTR es:[edi]
  40f54a:	in     eax,dx
  40f54b:	into   
  40f54c:	pushf  
  40f54d:	nop
  40f54e:	or     esi,esi
  40f550:	jecxz  0x40f51b
  40f552:	push   edi
  40f553:	call   0x1eab:0x194158d9
  40f55a:	add    ah,dl
  40f55c:	jmp    0x40f53b
  40f55e:	fbstp  TBYTE PTR [edx+0x45]
  40f561:	pop    ss
  40f562:	pop    ss
  40f563:	ret    0xad1f
  40f566:	mov    fs,WORD PTR [esi]
  40f568:	sbb    ah,BYTE PTR [eax+0x79]
  40f56b:	bound  esi,QWORD PTR [edi-0x198203f2]
  40f571:	mov    bh,0x79
  40f573:	loop   0x40f572
  40f575:	inc    ebp
  40f576:	and    cl,ah
  40f578:	xchg   esp,eax
  40f579:	adc    eax,0x15595bbb
  40f57e:	lods   al,BYTE PTR ds:[esi]
  40f57f:	mov    cl,0x38
  40f581:	mov    ds:0x93e0e63e,al
  40f586:	inc    esp
  40f587:	and    BYTE PTR [ecx+0x8d893aa],bh
  40f58d:	push   ds
  40f58e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f58f:	mov    esi,0x9671aecb
  40f594:	test   eax,0x180c412c
  40f599:	sar    BYTE PTR [edi+eax*2-0x1cb5b1ac],0x31
  40f5a1:	pop    ecx
  40f5a2:	push   ebp
  40f5a3:	mov    edx,0x81479b44
  40f5a8:	inc    esi
  40f5a9:	xchg   ebx,eax
  40f5aa:	rcl    DWORD PTR [edx],1
  40f5ac:	stc    
  40f5ad:	dec    DWORD PTR cs:[esi]
  40f5b0:	fild   WORD PTR [edx+ebp*4-0x265be5df]
  40f5b7:	adc    ch,BYTE PTR [ecx-0x2c]
  40f5ba:	rcr    BYTE PTR [ebp+0x3f788eb1],cl
  40f5c0:	shl    DWORD PTR [ebp-0x69d72639],1
  40f5c6:	aad    0xbd
  40f5c8:	mov    dh,0x47
  40f5ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5cb:	mov    ch,BYTE PTR [ebx-0x2d623b80]
  40f5d1:	mov    esp,0x8f87c080
  40f5d6:	mov    esp,0xc876ddea
  40f5db:	loope  0x40f5ae
  40f5dd:	les    edi,FWORD PTR [ebx]
  40f5df:	jno    0x40f65d
  40f5e1:	out    dx,eax
  40f5e2:	push   esi
  40f5e3:	xlat   BYTE PTR gs:[ebx]
  40f5e5:	or     al,0xe4
  40f5e7:	lahf   
  40f5e8:	jmp    0x42a0:0x7db9e5cb
  40f5ef:	sar    BYTE PTR [ebp+0x4afa4211],0x5
  40f5f6:	xchg   BYTE PTR [ecx],al
  40f5f8:	clc    
  40f5f9:	cmp    al,BYTE PTR [eax+0x26]
  40f5fc:	xchg   ebx,eax
  40f5fd:	mov    al,0xb0
  40f5ff:	neg    DWORD PTR [edi]
  40f601:	jmp    0x40f61c
  40f603:	sar    DWORD PTR [edx+0x57],0xe6
  40f607:	cdq    
  40f608:	fwait
  40f609:	or     al,0xb
  40f60b:	xchg   ebx,eax
  40f60c:	mov    cl,BYTE PTR [edx-0x38]
  40f60f:	pop    ecx
  40f610:	push   0x269e8870
  40f615:	adc    DWORD PTR [ebp+0x5c],esp
  40f618:	xor    esp,DWORD PTR [ebx+0x1dce9e9]
  40f61e:	pop    edi
  40f61f:	popf   
  40f620:	je     0x40f610
  40f622:	jbe    0x40f64b
  40f624:	dec    esp
  40f625:	push   cs
  40f626:	ins    DWORD PTR es:[edi],dx
  40f627:	loopne 0x40f60b
  40f629:	xor    ah,cl
  40f62b:	sbb    DWORD PTR [edi],ebp
  40f62d:	(bad)  
  40f62e:	mov    esp,0xf078e25
  40f633:	test   eax,0x2a3c2c70
  40f638:	push   esp
  40f639:	rcr    BYTE PTR [ecx-0x31be861],1
  40f63f:	leave  
  40f640:	push   cs
  40f641:	adc    al,0x4f
  40f643:	aam    0xa9
  40f645:	sub    al,0x8e
  40f647:	fld    DWORD PTR [edx-0x57]
  40f64a:	(bad)  
  40f64b:	jmp    0x440f1185
  40f650:	jne    0x40f6be
  40f652:	rol    edi,cl
  40f654:	sbb    edx,DWORD PTR [esi-0x44]
  40f657:	(bad)  [ebp+edi*2+0x40cea7f8]
  40f65e:	mov    edx,0x47c45d09
  40f663:	inc    edx
  40f664:	and    BYTE PTR [esp+edi*8+0x6978a63b],0x94
  40f66c:	cwde   
  40f66d:	jmp    0x40f632
  40f66f:	mov    edx,0x6f21214f
  40f674:	jnp    0x40f637
  40f676:	jno    0x40f6ed
  40f678:	jecxz  0x40f6e0
  40f67a:	shl    DWORD PTR [edi+0x55],cl
  40f67d:	cdq    
  40f67e:	xor    DWORD PTR ds:0xccb2fc2c,edx
  40f684:	mov    WORD PTR [esi+0x5b124963],es
  40f68a:	(bad)  
  40f68b:	jmp    0x40f6c8
  40f68d:	loope  0x40f6f1
  40f68f:	mov    ebp,?
  40f691:	kandnw k7,k3,k3
  40f695:	dec    esp
  40f696:	call   0x67e3:0xa01933f6
  40f69d:	hlt    
  40f69e:	clc    
  40f69f:	mov    ds:0x36a0f9d1,al
  40f6a4:	repz mov ebp,DWORD PTR [ecx+esi*2-0x51]
  40f6a9:	sub    al,0x45
  40f6ab:	mov    fs,WORD PTR [ecx-0x351cebfc]
  40f6b1:	outs   dx,BYTE PTR ds:[esi]
  40f6b2:	lock pop ds
  40f6b4:	mov    eax,0x79f74c47
  40f6b9:	sbb    al,0xb8
  40f6bb:	push   es
  40f6bc:	aaa    
  40f6bd:	(bad)
  40f6c0:	cmp    DWORD PTR [esi],ebx
  40f6c2:	mov    ch,0x53
  40f6c4:	dec    edx
  40f6c5:	fld    TBYTE PTR [ecx]
  40f6c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6c8:	std    
  40f6c9:	push   ecx
  40f6ca:	xor    BYTE PTR [ebx-0x3caf5840],cl
  40f6d0:	inc    edx
  40f6d1:	cdq    
  40f6d2:	jae    0x40f71a
  40f6d4:	mov    al,0xaa
  40f6d6:	push   0x7c
  40f6d8:	arpl   WORD PTR [edx+0x1c],cx
  40f6db:	cdq    
  40f6dc:	stos   DWORD PTR es:[edi],eax
  40f6dd:	dec    ebx
  40f6de:	inc    eax
  40f6df:	mov    ebx,0x52b1ac1d
  40f6e4:	cld    
  40f6e5:	sub    al,0xd2
  40f6e7:	jno    0x40f73a
  40f6e9:	adc    dh,BYTE PTR [ebp-0x415aa5d7]
  40f6ef:	in     eax,dx
  40f6f0:	push   es
  40f6f1:	add    dl,dl
  40f6f3:	mov    eax,0xd583a76c
  40f6f8:	fstp   TBYTE PTR [ebp+edx*4+0x2f]
  40f6fc:	stos   DWORD PTR es:[edi],eax
  40f6fd:	imul   edi,DWORD PTR [ebx],0x2eb57d33
  40f703:	ret    
  40f704:	retf   0x5255
  40f707:	sub    DWORD PTR [eax],0x8bd6acfc
  40f70d:	imul   DWORD PTR [edi]
  40f70f:	(bad)  
  40f710:	or     al,0x3d
  40f712:	or     BYTE PTR [esi+0x59],0x66
  40f716:	loope  0x40f74b
  40f718:	mov    ds:0x5288f411,eax
  40f71d:	mov    eax,ds:0x6041a94
  40f722:	shl    BYTE PTR [ebx+0x3e9a2874],1
  40f728:	inc    esp
  40f729:	retf   0x190b
  40f72c:	push   ecx
  40f72d:	inc    ecx
  40f72e:	or     esp,ebp
  40f730:	imul   edi,DWORD PTR [ebx],0xc255c674
  40f736:	cmp    al,0x47
  40f738:	push   edx
  40f739:	jg     0x40f757
  40f73b:	ret    
  40f73c:	or     eax,0x50e8baf3
  40f741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f742:	es iret 
  40f744:	dec    ebx
  40f745:	pop    esp
  40f746:	cwde   
  40f747:	jmp    0x2e91:0x75b50941
  40f74e:	adc    DWORD PTR [ebx-0x306fcfa2],ecx
  40f754:	mov    eax,0xa70fbdfe
  40f759:	add    esp,DWORD PTR [edi-0x3bf0de32]
  40f75f:	mov    ecx,0x4f6bb1ff
  40f764:	imul   esp,DWORD PTR [edx-0x6e95708d],0xffffffdc
  40f76b:	mov    edi,0xdae5f947
  40f770:	mov    ch,0xa6
  40f772:	mov    dl,0x1a
  40f774:	and    ax,dx
  40f777:	or     DWORD PTR [ebx],esi
  40f779:	xchg   esi,eax
  40f77a:	dec    edx
  40f77b:	and    al,0x38
  40f77d:	inc    edx
  40f77e:	xor    DWORD PTR [ecx],edx
  40f780:	imul   edx,DWORD PTR [edi-0x4721d73a],0xe5cf8aed
  40f78a:	cmp    cl,BYTE PTR [edx]
  40f78c:	cli    
  40f78d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f78e:	loop   0x40f80a
  40f790:	fwait
  40f791:	mov    ebx,0xdb88e469
  40f797:	xor    eax,0x8dc8904e
  40f79c:	mov    eax,0xe4373121
  40f7a1:	clc    
  40f7a2:	mov    ?,WORD PTR [ebp-0x57]
  40f7a5:	scas   al,BYTE PTR es:[edi]
  40f7a6:	mov    ebx,0x95e8512c
  40f7ab:	daa    
  40f7ac:	jecxz  0x40f7d1
  40f7ae:	xor    BYTE PTR ds:[ebp+0x3e],bl
  40f7b2:	pop    ds
  40f7b3:	in     al,dx
  40f7b4:	outs   dx,DWORD PTR ds:[esi]
  40f7b5:	sbb    eax,0x2d4b147f
  40f7ba:	jge    0x40f7a2
  40f7bc:	adc    ch,dl
  40f7be:	xchg   esi,eax
  40f7bf:	push   ds
  40f7c0:	mov    ebp,0x78be2c22
  40f7c5:	adc    ebp,DWORD PTR [eax-0x796ac40a]
  40f7cb:	inc    esi
  40f7cc:	sbb    al,0xc7
  40f7ce:	dec    esi
  40f7cf:	div    BYTE PTR [edi]
  40f7d1:	gs push ebp
  40f7d3:	repz adc eax,esp
  40f7d6:	adc    cl,BYTE PTR [ebp+0x401499eb]
  40f7dc:	push   ecx
  40f7dd:	jmp    0xb574b1dc
  40f7e2:	test   BYTE PTR [ebp-0x53],cl
  40f7e5:	test   DWORD PTR [ebp-0x4e62eafa],eax
  40f7eb:	into   
  40f7ec:	int3   
  40f7ed:	jecxz  0x40f861
  40f7ef:	cwde   
  40f7f0:	ins    DWORD PTR es:[edi],dx
  40f7f1:	jecxz  0x40f823
  40f7f3:	adc    bl,BYTE PTR [esi]
  40f7f5:	fisub  DWORD PTR [edi-0x790bb8c7]
  40f7fb:	test   al,0x9a
  40f7fd:	rcl    DWORD PTR [esi+0x5],1
  40f800:	scas   eax,DWORD PTR es:[edi]
  40f801:	lods   al,BYTE PTR ds:[esi]
  40f802:	sbb    al,0xcf
  40f804:	sub    BYTE PTR [edx],0xf0
  40f807:	aas    
  40f808:	mov    WORD PTR ds:0x3bfcc143,cs
  40f80e:	mov    esi,0x6d512912
  40f813:	cs stos DWORD PTR es:[edi],eax
  40f815:	popf   
  40f816:	mov    ch,0x75
  40f818:	das    
  40f819:	jge    0x40f7d2
  40f81b:	cmp    dl,BYTE PTR [ebp-0x2ebc909f]
  40f821:	sbb    ah,BYTE PTR [ebp-0x35]
  40f824:	mov    bl,0x23
  40f826:	xchg   BYTE PTR [esi+0x1b],dh
  40f829:	das    
  40f82a:	pop    es
  40f82b:	jg     0x40f850
  40f82d:	push   ecx
  40f82e:	push   0xffffff9d
  40f830:	(bad)  
  40f831:	mov    al,0xf9
  40f833:	xor    edi,DWORD PTR [ebx+0x37]
  40f836:	mov    ah,0x3b
  40f838:	enter  0xf73c,0xba
  40f83c:	sub    eax,0x4c5d037d
  40f841:	fimul  DWORD PTR [esi+0x563ee23c]
  40f847:	mov    dl,0xe2
  40f849:	retf   0xaed6
  40f84c:	xchg   edi,eax
  40f84d:	jno    0x40f80a
  40f84f:	or     eax,0x30770556
  40f854:	sbb    cl,BYTE PTR [ebp+0x30c03a2]
  40f85a:	loope  0x40f81b
  40f85c:	push   es
  40f85d:	mov    edx,0x2eafbae8
  40f862:	mov    WORD PTR [ecx],ss
  40f864:	xor    eax,0x46a3fd07
  40f869:	xor    BYTE PTR [edx+0xf2f17c4],al
  40f86f:	jg     0x40f8c0
  40f871:	or     eax,0x2008c2ae
  40f876:	jne    0x40f875
  40f878:	mov    edi,db5
  40f87b:	mov    al,0x62
  40f87d:	sbb    al,0xe
  40f87f:	cdq    
  40f880:	push   ds
  40f881:	add    edi,DWORD PTR [edx+0x12b6b9f0]
  40f887:	inc    ecx
  40f888:	xor    al,0x7f
  40f88a:	jle    0x40f81c
  40f88c:	dec    edi
  40f88d:	mov    esi,0x5d873807
  40f892:	xor    al,0xf0
  40f894:	in     al,dx
  40f895:	pop    edx
  40f896:	xor    eax,0xe0c00045
  40f89b:	repz and al,0xbd
  40f89e:	sub    BYTE PTR [esi-0x4b],ch
  40f8a1:	xor    edi,eax
  40f8a3:	daa    
  40f8a4:	jns    0x40f839
  40f8a6:	(bad)  
  40f8a7:	push   cs
  40f8a8:	int3   
  40f8a9:	and    DWORD PTR [eax-0x970e7da],eax
  40f8af:	or     bh,bl
  40f8b1:	cmp    al,bl
  40f8b3:	inc    edi
  40f8b4:	add    DWORD PTR [edx-0x10],edx
  40f8b7:	xchg   ebx,eax
  40f8b8:	adc    eax,0xaabc7a8c
  40f8bd:	xor    cl,BYTE PTR [edi-0x29b9ed9d]
  40f8c3:	shl    edi,0x67
  40f8c6:	adc    al,0xe4
  40f8c8:	retf   
  40f8c9:	push   esi
  40f8ca:	aam    0x3c
  40f8cc:	sar    bh,0x4d
  40f8cf:	inc    edx
  40f8d0:	xor    BYTE PTR [esi-0x16],0xe0
  40f8d4:	sbb    esp,0x7a
  40f8d7:	xchg   esp,eax
  40f8d8:	std    
  40f8d9:	cmp    BYTE PTR [eax-0x23],ch
  40f8dc:	aam    0xa1
  40f8de:	into   
  40f8df:	push   ebx
  40f8e0:	idiv   BYTE PTR [ebx+0x66]
  40f8e3:	push   esi
  40f8e4:	aad    0xeb
  40f8e6:	mov    ebp,0x28d46fc7
  40f8eb:	pushf  
  40f8ec:	sub    BYTE PTR [eax-0x761047c4],bh
  40f8f2:	pop    ebp
  40f8f3:	ds shl cl,0x2d
  40f8f7:	inc    esi
  40f8f8:	(bad)  
  40f8f9:	lock jne 0x40f8d0
  40f8fc:	push   ds
  40f8fd:	pop    ss
  40f8fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8ff:	cmp    bl,0xa4
  40f902:	pop    ss
  40f903:	adc    ch,al
  40f905:	pop    ecx
  40f906:	push   ss
  40f907:	mov    cl,BYTE PTR [ebp+esi*1+0x26c54a3d]
  40f90e:	imul   esp,DWORD PTR [eax-0x1c],0xf826d91b
  40f915:	jmp    0x4ed3:0x8b6cd84d
  40f91c:	xor    cl,0xd6
  40f91f:	sub    al,0x83
  40f921:	shl    esp,0x1
  40f924:	retf   0xa11c
  40f927:	dec    edi
  40f928:	xchg   edx,eax
  40f929:	xor    al,0x89
  40f92b:	jmp    0x40f99c
  40f92d:	call   0xeeea:0x74fcfd11
  40f934:	jge    0x40f8cb
  40f936:	inc    esp
  40f937:	adc    bh,BYTE PTR [edi+0x4a]
  40f93a:	dec    edi
  40f93b:	xor    al,0x7d
  40f93d:	popf   
  40f93e:	pushf  
  40f93f:	setae  BYTE PTR [edi+ebp*2-0x48146f62]
  40f947:	imul   ecx,DWORD PTR [ebx],0x44
  40f94a:	in     eax,dx
  40f94b:	dec    ebx
  40f94c:	into   
  40f94d:	sub    eax,0x5cc1a419
  40f952:	(bad)  
  40f954:	aad    0x14
  40f956:	adc    eax,0xb730a9e5
  40f95b:	pop    esi
  40f95c:	mov    WORD PTR [ecx-0x1cf35db6],ds
  40f962:	sbb    eax,0x6c4a4dab
  40f967:	push   edx
  40f968:	mov    al,0x1f
  40f96a:	and    esp,DWORD PTR [ecx+0x75eb6b27]
  40f970:	sti    
  40f971:	adc    eax,0xedd3a170
  40f976:	dec    edi
  40f977:	xlat   BYTE PTR ds:[ebx]
  40f978:	sahf   
  40f979:	loop   0x40f962
  40f97b:	sar    DWORD PTR [eax],0x38
  40f97e:	xor    DWORD PTR [esi-0x7277f33b],eax
  40f984:	rcl    BYTE PTR [edi-0x7bf9a72c],0x5f
  40f98b:	call   0xfc78:0xa7d5df08
  40f992:	jns    0x40f97f
  40f994:	aaa    
  40f995:	sahf   
  40f996:	(bad)  
  40f997:	imul   eax,DWORD PTR [esi-0x13b0dcab],0x4d
  40f99e:	mov    dh,0xe9
  40f9a0:	scas   al,BYTE PTR es:[edi]
  40f9a1:	gs icebp 
  40f9a3:	mov    al,0x80
  40f9a5:	push   ds
  40f9a6:	mov    ah,0xd9
  40f9a8:	test   edx,edi
  40f9aa:	lds    ebp,FWORD PTR [eax+0x40]
  40f9ad:	sbb    ch,dl
  40f9af:	aad    0xe
  40f9b1:	mov    bl,0x76
  40f9b3:	mov    ah,0x54
  40f9b5:	adc    BYTE PTR [ebx-0x1a],bl
  40f9b8:	pusha  
  40f9b9:	push   es
  40f9ba:	xchg   ebx,eax
  40f9bb:	push   edi
  40f9bc:	test   DWORD PTR [ebx-0x3a],0x124397b9
  40f9c3:	cmp    BYTE PTR [edx-0x4e],al
  40f9c6:	jl     0x40fa37
  40f9c8:	js     0x40fa0f
  40f9ca:	xchg   edx,eax
  40f9cb:	inc    esp
  40f9cc:	cdq    
  40f9cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9ce:	test   al,ch
  40f9d0:	adc    ebp,DWORD PTR [ecx+ebx*2+0x7a]
  40f9d4:	cwde   
  40f9d5:	iret   
  40f9d6:	push   ecx
  40f9d7:	cwde   
  40f9d8:	(bad)  [esi+0x3971e83a]
  40f9de:	xchg   esp,eax
  40f9df:	pop    ss
  40f9e0:	push   esi
  40f9e1:	fsubr  DWORD PTR [bx+0x47]
  40f9e5:	or     DWORD PTR [ebx],esi
  40f9e7:	pop    ebp
  40f9e8:	repnz push cs
  40f9ea:	sbb    eax,0x4272a62e
  40f9ef:	xor    eax,0xe349aa68
  40f9f4:	jo     0x40f9f5
  40f9f6:	das    
  40f9f7:	je     0x40f9fa
  40f9f9:	sbb    al,0xf5
  40f9fb:	dec    BYTE PTR ds:0xd6f08d76
  40fa01:	aaa    
  40fa02:	inc    esi
  40fa03:	jl     0x40fa7e
  40fa05:	jns    0x40fa6c
  40fa07:	pushf  
  40fa08:	cmp    eax,0xdb1b9431
  40fa0d:	inc    ebp
  40fa0e:	cli    
  40fa0f:	rcl    BYTE PTR [esi+0x30],cl
  40fa12:	mov    al,ds:0xf1ab9cc7
  40fa17:	mov    eax,ds:0xc4376647
  40fa1d:	jmp    0xb28ef966
  40fa22:	mov    ecx,0xcb9b7144
  40fa27:	mov    ebp,0x5fc58b35
  40fa2c:	cmp    eax,0xaabc3fc0
  40fa31:	adc    cl,bl
  40fa33:	in     eax,0x8d
  40fa35:	ss mul ah
  40fa38:	add    edi,esp
  40fa3a:	lods   eax,DWORD PTR ds:[esi]
  40fa3b:	pop    es
  40fa3c:	sti    
  40fa3d:	jge    0x40fa79
  40fa3f:	lock fsubr QWORD PTR [eax-0x41]
  40fa43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa44:	push   ds
  40fa45:	and    bl,ah
  40fa47:	dec    ecx
  40fa48:	loope  0x40fa87
  40fa4a:	mov    BYTE PTR [ebx],cl
  40fa4c:	mov    ds:0xc0e4e80d,al
  40fa51:	jae    0x40fa71
  40fa53:	push   ecx
  40fa54:	pop    edx
  40fa55:	test   BYTE PTR [edx],dl
  40fa57:	out    dx,al
  40fa58:	dec    ebx
  40fa59:	(bad)  
  40fa5a:	sti    
  40fa5b:	mov    edi,0xed412c07
  40fa60:	shr    DWORD PTR [edx+0x3b],0xe7
  40fa64:	stos   DWORD PTR es:[edi],eax
  40fa65:	rol    edi,1
  40fa67:	xchg   edi,eax
  40fa68:	test   DWORD PTR [edx-0x51a995c4],esi
  40fa6e:	pop    esp
  40fa6f:	aaa    
  40fa70:	in     al,0x6
  40fa72:	jo     0x40fa1b
  40fa74:	mov    al,ds:0x52ae1cfc
  40fa79:	mul    DWORD PTR [ecx-0x2ac592d7]
  40fa7f:	lods   al,BYTE PTR ds:[esi]
  40fa80:	out    0x57,eax
  40fa82:	cmp    ecx,DWORD PTR [eax-0x7e]
  40fa85:	pop    esp
  40fa86:	out    0x25,al
  40fa88:	mul    ecx
  40fa8a:	push   cs
  40fa8b:	imul   eax,DWORD PTR [esi],0x49
  40fa8e:	lods   eax,DWORD PTR ds:[esi]
  40fa8f:	pop    ds
  40fa90:	div    edi
  40fa92:	xchg   esi,eax
  40fa93:	(bad)  
  40fa94:	jmp    0x40fa99
  40fa96:	lea    ebx,[esi+0x3e]
  40fa99:	out    0x1d,al
  40fa9b:	shl    DWORD PTR [ebx+edi*2-0x7010feda],0xd8
  40faa3:	or     al,0xa0
  40faa5:	mov    edi,0x481a3965
  40faaa:	loope  0x40facf
  40faac:	or     eax,0xf5a6e73d
  40fab1:	xchg   ecx,eax
  40fab2:	pop    es
  40fab3:	pusha  
  40fab4:	imul   bh
  40fab6:	sahf   
  40fab7:	pop    ebx
  40fab8:	in     al,dx
  40fab9:	add    esi,DWORD PTR [ecx-0x153466d8]
  40fabf:	cwde   
  40fac0:	call   0xa551:0x7ceaa3f8
  40fac7:	push   es
  40fac8:	mov    al,0x60
  40faca:	sub    eax,0x1de0fb85
  40facf:	jo     0x40fa8e
  40fad1:	adc    edi,DWORD PTR [esi-0x80]
  40fad4:	cmp    DWORD PTR [esi],0x4d
  40fad7:	lahf   
  40fad8:	test   BYTE PTR cs:[eax-0x695effc6],bh
  40fadf:	repz push esi
  40fae1:	mov    ah,0x89
  40fae3:	push   esi
  40fae4:	add    ch,ch
  40fae6:	mov    BYTE PTR [esi-0x3b6223c0],cl
  40faec:	in     eax,0x94
  40faee:	dec    ebx
  40faef:	test   al,0xe5
  40faf1:	arpl   ax,bp
  40faf3:	mov    ds:0x6cc7600d,al
  40faf8:	(bad)  
  40faf9:	aad    0x7d
  40fafb:	aam    0x4a
  40fafd:	lods   al,BYTE PTR ds:[esi]
  40fafe:	cwde   
  40faff:	icebp  
  40fb00:	jp     0x40fb18
  40fb02:	add    BYTE PTR [edx-0x6e89e56f],bh
  40fb08:	aaa    
  40fb09:	sub    BYTE PTR [ebx-0x38],cl
  40fb0c:	scas   al,BYTE PTR es:[edi]
  40fb0d:	push   edi
  40fb0e:	adc    al,0xe8
  40fb10:	sbb    DWORD PTR [ebx+0x61b33b3],esp
  40fb16:	stc    
  40fb17:	jnp    0x40fb98
  40fb19:	push   cs
  40fb1a:	mov    eax,0x9a4ca93
  40fb1f:	jl     0x40fb53
  40fb21:	pop    ss
  40fb22:	sbb    BYTE PTR [ecx+eiz*8],cl
  40fb25:	arpl   WORD PTR [esi-0x2b],bp
  40fb28:	inc    eax
  40fb29:	xchg   edi,eax
  40fb2a:	cmp    edx,DWORD PTR [ebx-0x1d]
  40fb2d:	out    0x6,eax
  40fb2f:	outs   dx,BYTE PTR ds:[esi]
  40fb30:	shr    ecx,0xc0
  40fb33:	daa    
  40fb34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb35:	ins    BYTE PTR es:[edi],dx
  40fb36:	add    BYTE PTR [ecx],dl
  40fb38:	dec    ebx
  40fb39:	out    0x5,al
  40fb3b:	pop    ds
  40fb3c:	xchg   ah,ch
  40fb3e:	sub    ebx,ebx
  40fb40:	iret   
  40fb41:	mov    dl,BYTE PTR [edi-0x54]
  40fb44:	add    esi,DWORD PTR [edi+ecx*2+0x1d]
  40fb48:	lods   eax,DWORD PTR ds:[esi]
  40fb49:	and    edi,DWORD PTR [ebx-0x56dfce50]
  40fb4f:	jge    0x40fb86
  40fb51:	sahf   
  40fb52:	mov    eax,ds:0x61c66e16
  40fb57:	(bad)  
  40fb58:	cmp    BYTE PTR [ebx-0x4f42b779],ch
  40fb5e:	push   0x40
  40fb60:	xchg   edx,eax
  40fb61:	sbb    DWORD PTR [eax],esi
  40fb63:	xor    DWORD PTR [esi],edi
  40fb65:	mov    ah,0x68
  40fb67:	xchg   esp,eax
  40fb68:	lods   al,BYTE PTR ds:[esi]
  40fb69:	add    BYTE PTR [edx],bh
  40fb6b:	cmc    
  40fb6c:	shr    BYTE PTR [eax],0xe0
  40fb6f:	xchg   edx,eax
  40fb70:	xor    cl,ah
  40fb72:	rcl    esi,cl
  40fb74:	adc    esi,DWORD PTR [ebx+0x13]
  40fb77:	data16 xor ch,BYTE PTR ds:[eax]
  40fb7b:	int3   
  40fb7c:	xor    DWORD PTR cs:[edi+0x6],ebp
  40fb80:	out    0xa0,eax
  40fb82:	scas   al,BYTE PTR es:[edi]
  40fb83:	pusha  
  40fb84:	gs mov esp,0x319c60b3
  40fb8a:	int3   
  40fb8b:	call   DWORD PTR [edx+0x21f6b555]
  40fb91:	mov    esi,0x97b106b9
  40fb96:	pop    edi
  40fb97:	sub    al,0x1d
  40fb99:	pop    esp
  40fb9a:	push   ss
  40fb9b:	ss sbb eax,0xb841ee9
  40fba1:	bound  esi,QWORD PTR [esi]
  40fba3:	retf   
  40fba4:	mov    ebp,0x13e0a259
  40fba9:	mov    ah,bl
  40fbab:	test   esp,eax
  40fbad:	(bad)  
  40fbae:	push   ebp
  40fbaf:	sub    edi,ecx
  40fbb1:	adc    BYTE PTR [ecx+0x4593835e],cl
  40fbb7:	mov    dh,0xd7
  40fbb9:	or     DWORD PTR [eax],ebx
  40fbbb:	pushf  
  40fbbc:	jp     0x40fba4
  40fbbe:	pop    es
  40fbbf:	lea    edi,[edi+0x4b]
  40fbc2:	dec    ecx
  40fbc3:	add    eax,0x3809be12
  40fbc8:	test   al,0x92
  40fbca:	jp     0x40fc11
  40fbcc:	xchg   esp,eax
  40fbcd:	sub    ecx,DWORD PTR [ecx-0x31]
  40fbd0:	faddp  st(2),st
  40fbd2:	inc    esp
  40fbd3:	inc    ebx
  40fbd4:	sub    al,0xc0
  40fbd6:	aas    
  40fbd7:	in     eax,0xb9
  40fbd9:	scas   eax,DWORD PTR es:[edi]
  40fbda:	out    0x7f,al
  40fbdc:	shl    dh,1
  40fbde:	sahf   
  40fbdf:	call   0xaf7c:0x65e1418c
  40fbe6:	inc    eax
  40fbe7:	sub    BYTE PTR [ecx+edi*1-0x35],dh
  40fbeb:	push   ecx
  40fbec:	outs   dx,DWORD PTR ds:[esi]
  40fbed:	call   0x1a46:0x801fc9d6
  40fbf4:	mov    WORD PTR [esi],fs
  40fbf6:	js     0x40fbef
  40fbf8:	loope  0x40fc17
  40fbfa:	xchg   edx,eax
  40fbfb:	dec    ebp
  40fbfc:	sbb    eax,DWORD PTR [esi-0x17e5581c]
  40fc02:	(bad)
  40fc05:	fs jno 0x40fc82
  40fc08:	jnp    0x40fc01
  40fc0a:	inc    esi
  40fc0b:	or     al,0xb7
  40fc0d:	pop    ss
  40fc0e:	mov    ch,0x55
  40fc10:	push   esp
  40fc11:	dec    ecx
  40fc12:	adc    esi,edx
  40fc14:	imul   esp,edi,0xd45d9b2d
  40fc1a:	jo     0x40fc36
  40fc1c:	imul   eax,DWORD PTR [esi+ecx*4-0x5b1e7625],0xd
  40fc24:	mov    eax,0x1d3b7c18
  40fc29:	shr    DWORD PTR [edi],0x1d
  40fc2c:	or     ebx,ebp
  40fc2e:	mov    dh,0x6c
  40fc30:	pop    eax
  40fc31:	loop   0x40fc48
  40fc33:	push   0x6054bfea
  40fc38:	sub    eax,0xa713f193
  40fc3d:	call   FWORD PTR [esi]
  40fc3f:	inc    edi
  40fc40:	inc    ebp
  40fc41:	mov    ebx,0x19291213
  40fc46:	out    0x64,al
  40fc48:	test   DWORD PTR [esi-0x1f],0x56bbb3ac
  40fc4f:	jle    0x40fc6e
  40fc51:	pop    eax
  40fc52:	sar    DWORD PTR [esi],cl
  40fc54:	mov    ch,0xb8
  40fc56:	sbb    dh,BYTE PTR [eax+ebx*4+0x7b586bdb]
  40fc5d:	pop    esi
  40fc5e:	and    esi,esi
  40fc60:	pop    ebp
  40fc61:	test   DWORD PTR [eax],esi
  40fc63:	aad    0x69
  40fc65:	sbb    cl,dh
  40fc67:	in     al,0xba
  40fc69:	sub    eax,0x6d76f618
  40fc6e:	xchg   BYTE PTR [eax-0x4a],cl
  40fc71:	inc    esi
  40fc72:	add    al,0x80
  40fc74:	adc    BYTE PTR [esi],bh
  40fc76:	jne    0x40fcbd
  40fc78:	xor    BYTE PTR [ecx+0x45531be2],0x7d
  40fc7f:	shl    esp,1
  40fc81:	dec    edx
  40fc82:	mov    bh,0xd8
  40fc84:	push   ds
  40fc85:	xchg   esp,eax
  40fc86:	xor    dl,dh
  40fc88:	sbb    DWORD PTR [edi+0x5ba06446],0xcb287756
  40fc92:	nop
  40fc93:	test   BYTE PTR [ecx],dl
  40fc95:	mov    cl,0x7b
  40fc97:	adc    eax,0x710ee180
  40fc9c:	xor    al,0x60
  40fc9e:	scas   eax,DWORD PTR es:[edi]
  40fc9f:	mov    eax,ds:0x2bf44d6c
  40fca4:	into   
  40fca5:	aaa    
  40fca6:	jmp    0x8f02:0x8c438143
  40fcad:	cdq    
  40fcae:	ret    0xdc28
  40fcb1:	repnz cmp ch,BYTE PTR fs:[ecx+0x5d9c6643]
  40fcb9:	fistp  WORD PTR [ebp+0x6a]
  40fcbc:	rcl    dl,0xef
  40fcbf:	call   0xf64f:0xef018087
  40fcc6:	mov    ch,0xa6
  40fcc8:	fmul   QWORD PTR [ecx]
  40fcca:	push   0xe318cdb1
  40fccf:	aam    0x1a
  40fcd1:	jne    0x40fcc3
  40fcd3:	dec    esi
  40fcd4:	or     cl,BYTE PTR [ecx+ecx*2-0x16]
  40fcd8:	mov    esp,DWORD PTR [edi-0x41]
  40fcdb:	call   0xa78a0482
  40fce0:	out    0x4b,eax
  40fce2:	mov    ch,0x7a
  40fce4:	inc    ecx
  40fce5:	paddb  mm7,QWORD PTR [ecx]
  40fce8:	and    eax,0xf6bb61d4
  40fced:	fdivr  DWORD PTR [esp+eax*4]
  40fcf0:	jne    0x40fd6c
  40fcf2:	xchg   DWORD PTR [edi],eax
  40fcf4:	je     0x40fd31
  40fcf6:	mov    esp,0xa1d69028
  40fcfb:	push   es
  40fcfc:	cmc    
  40fcfd:	push   0x76
  40fcff:	fistp  QWORD PTR [ebp+0x50]
  40fd02:	cli    
  40fd03:	gs (bad) 
  40fd05:	sahf   
  40fd06:	js     0x40fcb8
  40fd08:	push   esp
  40fd09:	cvtpi2ps xmm7,QWORD PTR [edx-0x80]
  40fd0d:	inc    esp
  40fd0e:	call   0x93d57cdd
  40fd13:	in     al,dx
  40fd14:	jecxz  0x40fcd7
  40fd16:	scas   al,BYTE PTR es:[edi]
  40fd17:	faddp  st(4),st
  40fd19:	(bad)  
  40fd1b:	lock stc 
  40fd1d:	dec    esp
  40fd1e:	push   0xf6a32caa
  40fd23:	mov    ecx,0x6e0eb2fe
  40fd28:	sub    edx,edx
  40fd2a:	add    DWORD PTR [ecx+0x770ab014],esp
  40fd30:	icebp  
  40fd31:	inc    edi
  40fd32:	cmp    ah,BYTE PTR [edx]
  40fd34:	mov    esp,0x59e539e2
  40fd39:	sbb    DWORD PTR [ebp+0x17defedc],ecx
  40fd3f:	adc    al,0x65
  40fd41:	pushf  
  40fd42:	mov    bl,0x76
  40fd44:	mov    ah,0xc
  40fd46:	mov    BYTE PTR [ecx],0x27
  40fd49:	jl     0x40fd7c
  40fd4b:	inc    ebp
  40fd4c:	test   eax,0x156cfdb8
  40fd51:	sar    DWORD PTR [edi+0x6cf72405],cl
  40fd57:	scas   al,BYTE PTR es:[edi]
  40fd58:	popa   
  40fd59:	rcr    DWORD PTR [ecx],1
  40fd5b:	loop   0x40fd9b
  40fd5d:	leave  
  40fd5e:	cs iret 
  40fd60:	imul   esi,DWORD PTR [esi],0x1d14a60f
  40fd66:	push   ebp
  40fd67:	xor    bh,dl
  40fd69:	daa    
  40fd6a:	push   edx
  40fd6b:	daa    
  40fd6c:	in     al,0x1c
  40fd6e:	and    bl,BYTE PTR [ebx+0x79]
  40fd71:	dec    ebx
  40fd72:	mov    al,0x6b
  40fd74:	push   edx
  40fd75:	ficom  DWORD PTR [ecx+0x308541f4]
  40fd7b:	xor    ah,BYTE PTR [ecx]
  40fd7d:	adc    dh,dl
  40fd7f:	ret    
  40fd80:	and    eax,0xd98569a9
  40fd85:	cld    
  40fd86:	int    0x94
  40fd88:	and    eax,0xd3d411ad
  40fd8d:	enter  0x1aa2,0x5d
  40fd91:	ja     0x40fd81
  40fd93:	sysret 
  40fd95:	leave  
  40fd96:	daa    
  40fd97:	push   esp
  40fd98:	cmp    eax,0x93e7c685
  40fd9d:	pop    ds
  40fd9e:	sbb    BYTE PTR [edx-0x38],0xc5
  40fda2:	lea    esi,[eax]
  40fda4:	jecxz  0x40fd5b
  40fda6:	test   eax,0xc4f435b6
  40fdab:	fst    QWORD PTR [ebx+edi*8+0x104c5bcf]
  40fdb2:	ret    
  40fdb3:	test   al,0x7
  40fdb5:	xchg   esi,eax
  40fdb6:	pop    ecx
  40fdb7:	sub    eax,0x513322e
  40fdbc:	std    
  40fdbd:	mov    bl,0xea
  40fdbf:	jbe    0x40fdca
  40fdc1:	popa   
  40fdc2:	jo     0x40fdf0
  40fdc4:	push   es
  40fdc5:	jecxz  0x40fd60
  40fdc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdc8:	es dec esi
  40fdca:	push   es
  40fdcb:	cmc    
  40fdcc:	into   
  40fdcd:	push   es
  40fdce:	adc    al,BYTE PTR [ebx]
  40fdd0:	inc    ecx
  40fdd1:	repz inc ebp
  40fdd3:	aam    0xec
  40fdd5:	xor    al,0xe1
  40fdd7:	adc    al,0xcc
  40fdd9:	fimul  DWORD PTR [ecx+0x328e5ebd]
  40fddf:	mov    ch,0x69
  40fde1:	push   ecx
  40fde2:	add    ebp,esp
  40fde4:	retf   0xd9bb
  40fde7:	mov    esi,0x3fe6679
  40fdec:	dec    ebx
  40fded:	add    eax,0xdb8749a7
  40fdf2:	fwait
  40fdf3:	xor    al,0x9c
  40fdf5:	loop   0x40fda6
  40fdf7:	mov    esp,0xda220ee4
  40fdfc:	mov    esp,0x8bebc760
  40fe01:	or     eax,0xd2209b0b
  40fe06:	in     eax,0x48
  40fe08:	mov    es,esi
  40fe0a:	xor    BYTE PTR [ecx*4-0x16f947e1],ch
  40fe11:	lods   al,BYTE PTR ds:[esi]
  40fe12:	mov    cl,bl
  40fe14:	dec    ecx
  40fe15:	retf   0x9ced
  40fe18:	mov    eax,ds:0xc6c362f1
  40fe1d:	call   FWORD PTR [ecx]
  40fe1f:	loopne 0x40fe90
  40fe21:	pop    ecx
  40fe22:	adc    eax,0xc8e17e97
  40fe27:	(bad)  
  40fe28:	pop    eax
  40fe29:	jbe    0x40fdc3
  40fe2b:	inc    eax
  40fe2c:	jns    0x40fe5e
  40fe2e:	mov    ebx,0x842c2809
  40fe33:	xor    ah,BYTE PTR [ebx+0x33]
  40fe36:	cmp    eax,0x31cd4d37
  40fe3b:	mov    edx,0x5e3b143c
  40fe40:	xchg   ebx,eax
  40fe41:	lds    edx,FWORD PTR [ebp+0x2c]
  40fe44:	shr    BYTE PTR [esi+0x70],0xde
  40fe48:	frstor [ebx+edx*1-0x76]
  40fe4c:	stos   BYTE PTR es:[edi],al
  40fe4d:	ror    BYTE PTR [edx],0xd4
  40fe50:	imul   esi,DWORD PTR [ebp+esi*1+0x1fa06b85],0xf0d58c55
  40fe5b:	adc    eax,0xb52b08df
  40fe60:	push   es
  40fe61:	xchg   edi,eax
  40fe62:	pop    esp
  40fe63:	add    esi,ebp
  40fe65:	sub    ebx,0xdab28f6a
  40fe6b:	push   ebx
  40fe6c:	ret    
  40fe6d:	mov    cl,0xfa
  40fe6f:	in     al,0x8b
  40fe71:	mov    ebx,0x990cc61c
  40fe76:	xchg   esi,eax
  40fe77:	pop    ecx
  40fe78:	push   ecx
  40fe79:	xor    al,0xad
  40fe7b:	nop
  40fe7c:	or     ecx,DWORD PTR [edi+0x11031b15]
  40fe82:	lds    edx,FWORD PTR [eax]
  40fe84:	push   ds
  40fe85:	loop   0x40fe9b
  40fe87:	push   ebp
  40fe88:	adc    BYTE PTR [esp+eax*1+0x51],0x60
  40fe8d:	nop
  40fe8e:	imul   edx,DWORD PTR [ecx+edx*8],0xead94524
  40fe95:	pop    ds
  40fe96:	xor    DWORD PTR [ecx+edx*1+0x5b955b5e],esi
  40fe9d:	pop    ss
  40fe9e:	and    al,0x61
  40fea1:	loop   0x40fe6f
  40fea3:	(bad)  [ebx+0x7022aff4]
  40fea9:	jp     0x40fe86
  40feab:	mov    esi,0xa7699297
  40feb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feb1:	push   ecx
  40feb2:	add    ebx,DWORD PTR [ecx+0x3a87fe6c]
  40feb8:	jp     0x40fe9e
  40feba:	jg     0x40feed
  40febc:	out    0xe6,eax
  40febe:	test   DWORD PTR [edx+0x10],ecx
  40fec1:	bound  ecx,QWORD PTR [ebx]
  40fec3:	gs pusha 
  40fec5:	jp     0x40fef1
  40fec7:	out    0x1f,al
  40fec9:	fsubrp st(2),st
  40fecb:	mov    ecx,0x55acca1
  40fed0:	jns    0x40ff1f
  40fed2:	mov    eax,0x19912f9f
  40fed7:	and    DWORD PTR [ebp+0x381a89e0],ebp
  40fedd:	dec    esp
  40fede:	pop    ss
  40fedf:	loope  0x40fed4
  40fee1:	daa    
  40fee2:	fwait
  40fee3:	sar    DWORD PTR [bx+di-0xd],cl
  40fee7:	or     DWORD PTR [ebx+0x41df3e23],ebx
  40feed:	into   
  40feee:	lea    esi,[eax+0x7c211be]
  40fef4:	lea    ebx,[eax+0x167ea15d]
  40fefa:	xor    cl,BYTE PTR [edi+0x72]
  40fefd:	or     al,0x21
  40feff:	fwait
  40ff00:	cmp    ch,BYTE PTR [edi-0x43]
  40ff03:	aam    0x94
  40ff05:	ss cld 
  40ff07:	jg     0x40fef4
  40ff09:	cmp    eax,0x8d276cc0
  40ff0e:	mov    fs,WORD PTR [ebp+0x17]
  40ff11:	and    esp,DWORD PTR [ebx+0x1db4442b]
  40ff17:	jl     0x40fecf
  40ff19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff1a:	imul   BYTE PTR [ebp-0x20a9a878]
  40ff20:	mov    edx,0x8b2a54c0
  40ff25:	outs   dx,DWORD PTR ds:[esi]
  40ff26:	or     al,0x4a
  40ff28:	out    0x8b,al
  40ff2a:	dec    ecx
  40ff2b:	ror    bh,1
  40ff2d:	scas   al,BYTE PTR es:[edi]
  40ff2e:	ins    BYTE PTR es:[edi],dx
  40ff2f:	mov    ?,esp
  40ff31:	(bad)  
  40ff32:	xor    esp,DWORD PTR [edi]
  40ff34:	int3   
  40ff35:	mov    esi,0x6e5f7382
  40ff3a:	out    dx,al
  40ff3b:	gs nop
  40ff3d:	in     eax,0x61
  40ff3f:	std    
  40ff40:	bound  esp,QWORD PTR [eax]
  40ff42:	mov    ds:0xc5345bd8,eax
  40ff47:	push   0xa4a15a52
  40ff4c:	lods   eax,DWORD PTR ds:[esi]
  40ff4d:	ror    DWORD PTR [eax+eax*1],0x7a
  40ff51:	xor    al,0x60
  40ff53:	add    al,0x4e
  40ff55:	and    eax,0x8f2304d8
  40ff5a:	xchg   ecx,eax
  40ff5b:	sti    
  40ff5c:	and    cl,BYTE PTR [edi+0x357e95f]
  40ff62:	rcr    DWORD PTR [ecx],1
  40ff64:	or     bh,al
  40ff66:	dec    edi
  40ff67:	adc    BYTE PTR [esi],0x1e
  40ff6a:	loope  0x40ff87
  40ff6c:	(bad)  
  40ff6e:	out    dx,eax
  40ff6f:	rcr    BYTE PTR [esp+edx*2],1
  40ff72:	ja     0x40ff5e
  40ff74:	sub    edx,DWORD PTR [edi-0x716f368b]
  40ff7a:	jae    0x40ff9c
  40ff7c:	call   0x4397:0x632447d8
  40ff83:	lea    esi,[edx+0x3c]
  40ff86:	in     eax,dx
  40ff87:	adc    al,0x42
  40ff89:	xor    al,0x31
  40ff8b:	lds    edx,FWORD PTR [ecx]
  40ff8d:	xchg   ebp,eax
  40ff8e:	mov    bh,bh
  40ff90:	xor    ecx,DWORD PTR [ebp-0x4f]
  40ff93:	cmp    esp,DWORD PTR [edx]
  40ff95:	lock adc bh,al
  40ff98:	pop    es
  40ff99:	iret   
  40ff9a:	fld    QWORD PTR [ebx-0x29]
  40ff9d:	fnsave [edi-0x2e066baa]
  40ffa3:	mov    cl,0xc3
  40ffa5:	add    esi,DWORD PTR [ebx+0x68bcbbfa]
  40ffab:	jmp    0x40ff92
  40ffad:	xchg   esi,eax
  40ffae:	lock test al,0x97
  40ffb1:	sbb    ebp,ebx
  40ffb3:	data16 sti 
  40ffb5:	(bad)  
  40ffb6:	fisttp QWORD PTR [si+0x6a32]
  40ffbb:	mov    ds:0x80c38104,eax
  40ffc0:	jge    0x410009
  40ffc2:	sti    
  40ffc3:	adc    BYTE PTR [ebx-0x5b],bh
  40ffc6:	daa    
  40ffc7:	adc    esp,DWORD PTR [edi-0x2ceb940a]
  40ffcd:	inc    ebx
  40ffce:	push   es
  40ffcf:	jl     0x40ff61
  40ffd1:	mov    eax,0x23ea51c
  40ffd6:	sub    DWORD PTR [edi],0xe18bea61
  40ffdc:	sbb    al,0xda
  40ffde:	jnp    0x40ffe4
  40ffe0:	dec    cx
  40ffe2:	jo     0x410056
  40ffe4:	sub    eax,DWORD PTR [ebx-0x2d4533a9]
  40ffea:	or     ch,BYTE PTR [ebp-0x42]
  40ffed:	xor    ebx,DWORD PTR [esi]
  40ffef:	enter  0x8661,0xea
  40fff3:	fs jnp 0x40ffe8
  40fff6:	mov    bh,0xff
  40fff8:	clc    
  40fff9:	ja     0x40ffdb
  40fffb:	xchg   edx,eax
  40fffc:	jb     0x40ffba
  40fffe:	retf   0x9e57
  410001:	test   eax,edi
  410003:	and    eax,0xf9d8fbe8
  410008:	retf   0x2c6d
  41000b:	mov    dl,BYTE PTR [ebp-0x5e]
  41000e:	ret    0x3a06
  410011:	je     0x40ffb8
  410013:	repnz ds (bad) 
  410016:	loopne 0x40fffb
  410018:	add    al,0xc5
  41001a:	in     al,0x33
  41001c:	jl     0x40ffd1
  41001e:	arpl   WORD PTR [edi+eiz*1+0x67f8f8a4],di
  410025:	xchg   DWORD PTR [esi],edx
  410027:	sub    DWORD PTR [ebx-0x3c],ebx
  41002a:	les    ebp,FWORD PTR [esi-0x4c97c3a8]
  410030:	mov    WORD PTR [edx+ebx*1-0x3129fd0b],?
  410037:	ss fxch st(1)
  41003a:	lds    eax,FWORD PTR [eax-0x66b0e5cf]
  410040:	or     DWORD PTR [edi-0x38ff5708],edx
  410046:	sar    BYTE PTR [ebp+0x5abef381],cl
  41004c:	je     0x41006e
  41004e:	retf   
  41004f:	sub    ch,BYTE PTR [ebx-0x6227fb5b]
  410055:	ret    0x9a61
  410058:	xchg   DWORD PTR [edx],edi
  41005a:	dec    esi
  41005b:	shl    dl,1
  41005d:	adc    ebx,esi
  41005f:	cmp    edx,edx
  410061:	mov    eax,ds:0x6045362b
  410066:	jl     0x40ffed
  410068:	cmp    ebp,DWORD PTR [esi+0x33]
  41006b:	outs   dx,BYTE PTR ds:[esi]
  41006c:	mov    esp,0x669fe2dd
  410071:	or     eax,0xead041a3
  410076:	sub    DWORD PTR [eax],esi
  410078:	lock xchg esp,eax
  41007a:	pusha  
  41007b:	xor    esp,ebp
  41007d:	jne    0x410095
  41007f:	out    dx,al
  410080:	mov    eax,0x8d745689
  410086:	data16 test al,0xfc
  410089:	xor    esi,edx
  41008b:	rcl    BYTE PTR ds:0xe9fc2a80,0x3
  410092:	fimul  WORD PTR [esi]
  410094:	(bad)  
  410095:	adc    al,0xbc
  410097:	add    BYTE PTR [edi],bl
  410099:	loopne 0x4100ea
  41009b:	xchg   ebx,eax
  41009c:	mov    esp,0x1318339d
  4100a1:	repz dec eax
  4100a3:	or     esp,DWORD PTR [ecx+0x6e]
  4100a6:	or     eax,DWORD PTR [esi+0x46c934a6]
  4100ac:	test   DWORD PTR [edi+ebx*1+0x2b],0x7926b7b4
  4100b4:	popf   
  4100b5:	std    
  4100b6:	test   BYTE PTR [ebx+0x3191a070],bh
  4100bc:	and    BYTE PTR [esi+ebx*2-0x21],al
  4100c0:	xor    eax,0x1995d77d
  4100c5:	pushf  
  4100c6:	sbb    al,0x66
  4100c8:	xor    bl,BYTE PTR [ecx-0x8c57a29]
  4100ce:	inc    ebp
  4100cf:	mov    ?,WORD PTR [esi-0x25]
  4100d2:	and    esi,DWORD PTR [ebx-0x52]
  4100d5:	leave  
  4100d6:	sub    ebp,ebx
  4100d8:	jnp    0x4100e3
  4100da:	je     0x4100ca
  4100dc:	fcom   DWORD PTR [ecx]
  4100de:	outs   dx,DWORD PTR ds:[esi]
  4100df:	or     DWORD PTR [ecx+edx*4],eax
  4100e2:	mov    ebp,0x3789a970
  4100e7:	inc    esp
  4100e8:	and    dh,al
  4100ea:	les    esi,FWORD PTR ds:0xaa43313f
  4100f0:	mov    ebx,0xc673a728
  4100f5:	mov    al,BYTE PTR [edx+0x6c9c1acf]
  4100fb:	jmp    0x545fa5f8
  410100:	repz mov edi,0x5ad39558
  410106:	adc    cl,dl
  410108:	mov    ebp,0xc8fccf22
  41010d:	imul   esp,DWORD PTR [ecx-0x731d11d0],0xffffffda
  410114:	lods   eax,DWORD PTR ds:[esi]
  410115:	ss sub ebp,ebx
  410118:	or     eax,0xd916aa32
  41011d:	cdq    
  41011e:	pop    es
  41011f:	mov    cl,0x6f
  410121:	jge    0x4100ad
  410123:	push   eax
  410124:	dec    ebx
  410125:	push   esp
  410126:	fld    DWORD PTR [ebp-0x2d101bc3]
  41012c:	adc    BYTE PTR [ebx-0x30adc92c],0x6d
  410133:	dec    edi
  410134:	pop    ecx
  410135:	mov    ebx,0x6b0e50fd
  41013a:	pop    ss
  41013b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013c:	inc    ecx
  41013d:	inc    esi
  41013e:	inc    ecx
  41013f:	dec    ebp
  410140:	push   eax
  410141:	and    eax,0xf110205d
  410146:	xchg   esi,eax
  410147:	imul   bh
  410149:	pop    esi
  41014a:	clc    
  41014b:	mov    gs,WORD PTR [ecx+0xa]
  41014e:	ds jbe 0x410118
  410151:	popf   
  410152:	add    DWORD PTR [edx+edx*4],esp
  410155:	in     al,dx
  410156:	push   ebx
  410157:	inc    ecx
  410158:	jmp    0xf744:0x6798b703
  41015f:	dec    esi
  410160:	add    al,0x9
  410162:	cli    
  410163:	pop    edi
  410164:	sbb    ah,BYTE PTR [ebx+0x41c778d4]
  41016a:	scas   al,BYTE PTR es:[edi]
  41016b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41016c:	loopne 0x410137
  41016e:	dec    eax
  41016f:	imul   eax,DWORD PTR [edi],0x67
  410172:	add    BYTE PTR [ecx+0x6f594e57],dl
  410178:	pop    ecx
  410179:	xchg   edx,eax
  41017a:	(bad)  
  41017b:	lock dec edi
  41017d:	and    BYTE PTR [edi+0x4d546c6d],0xca
  410184:	jno    0x410194
  410186:	and    eax,0x4a8196bd
  41018b:	add    eax,0x24bb79a6
  410190:	push   ds
  410191:	outs   dx,DWORD PTR ds:[esi]
  410192:	dec    esp
  410193:	es push es
  410195:	loop   0x41017a
  410197:	sub    eax,0xc85eae56
  41019c:	and    esi,DWORD PTR [ebp-0x41]
  41019f:	and    eax,0x3cc7e0d7
  4101a4:	xchg   ecx,eax
  4101a5:	mov    ds:0x947c4160,al
  4101aa:	xchg   ecx,eax
  4101ab:	mov    ds:0xcacf8712,al
  4101b0:	shl    ch,cl
  4101b2:	div    ch
  4101b4:	sub    DWORD PTR [eax-0x7f45bc1b],ebp
  4101ba:	and    eax,0x15062255
  4101bf:	rcl    BYTE PTR [edx],0xf
  4101c2:	sbb    eax,DWORD PTR [eax+0x540e8396]
  4101c8:	in     al,dx
  4101c9:	imul   ecx,DWORD PTR [ebx+0x68],0x548cdba4
  4101d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101d1:	dec    ebx
  4101d2:	dec    esp
  4101d3:	push   ds
  4101d4:	ret    
  4101d5:	push   edi
  4101d6:	js     0x4101c5
  4101d8:	mov    cl,0xd1
  4101da:	(bad)  
  4101db:	add    bl,BYTE PTR [ecx+0x77145334]
  4101e1:	retf   0x7e13
  4101e4:	adc    dl,ch
  4101e6:	stos   DWORD PTR es:[edi],eax
  4101e7:	fisttp WORD PTR [eax+0x49]
  4101ea:	or     al,0xcb
  4101ec:	imul   edi,DWORD PTR [eax],0xfffffff9
  4101ef:	das    
  4101f0:	addr16 std 
  4101f2:	sub    BYTE PTR [ecx+0x5b],ch
  4101f5:	call   0xc3e9:0xd909aa7
  4101fc:	sub    eax,0x4fdd15a3
  410201:	fwait
  410202:	clc    
  410203:	jae    0x4101c6
  410205:	ja     0x4101de
  410207:	push   cs
  410208:	mov    bh,0x34
  41020a:	dec    eax
  41020b:	push   eax
  41020c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41020d:	ins    BYTE PTR es:[edi],dx
  41020e:	fs push 0xaa5417
  410214:	push   eax
  410215:	fwait
  410216:	test   BYTE PTR [eax-0x6879f2df],dh
  41021c:	adc    BYTE PTR [eax+0x5c],dl
  41021f:	cwde   
  410220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410221:	repnz mov ah,0xb
  410224:	hlt    
  410225:	retf   0x7c15
  410228:	or     al,0x9c
  41022a:	popa   
  41022b:	(bad)  
  41022c:	pop    edx
  41022d:	jne    0x41029d
  41022f:	popf   
  410230:	bound  ebp,QWORD PTR [esi-0x56]
  410233:	sub    BYTE PTR [ecx-0xd],bl
  410236:	mov    eax,ds:0xb816b4b2
  41023b:	dec    edx
  41023c:	hlt    
  41023d:	sar    ah,0xa
  410240:	dec    ebp
  410241:	fldcw  WORD PTR [edi]
  410243:	popf   
  410244:	loopne 0x410250
  410246:	jne    0x4102a7
  410248:	loop   0x41027a
  41024a:	aas    
  41024b:	rcr    DWORD PTR ds:0x5dfebb27,cl
  410251:	mov    ch,0x95
  410253:	mov    esi,0x64fd8be7
  410258:	(bad)  
  410259:	dec    esp
  41025a:	lgs    edx,FWORD PTR [esi]
  41025d:	inc    edi
  41025e:	aas    
  41025f:	out    0xfd,al
  410261:	sbb    ebx,esi
  410263:	inc    ebx
  410264:	add    BYTE PTR [ebx],bh
  410266:	clc    
  410267:	xchg   BYTE PTR [esi+0x58356506],ch
  41026d:	les    esp,FWORD PTR [eax]
  41026f:	addr16 mov edi,0xd709dc68
  410275:	lea    esp,[ecx]
  410277:	scas   al,BYTE PTR es:[edi]
  410278:	fucom  st(7)
  41027a:	in     eax,dx
  41027b:	sub    eax,0x4cd9687e
  410280:	sbb    ebp,esp
  410282:	pop    ss
  410283:	and    ebx,DWORD PTR [esi]
  410285:	push   esi
  410286:	js     0x41025e
  410288:	mov    DWORD PTR [esi+0x5d],ebp
  41028b:	aas    
  41028c:	push   ss
  41028d:	int3   
  41028e:	test   DWORD PTR [edx-0x38],edi
  410291:	mov    al,ds:0x5424067e
  410296:	aad    0x2a
  410298:	adc    eax,0x6303958d
  41029d:	or     ch,dl
  41029f:	int    0xf6
  4102a1:	push   cs
  4102a2:	pop    ds
  4102a3:	mov    gs,WORD PTR [ecx-0x36]
  4102a6:	mov    cl,0x96
  4102a8:	add    cl,BYTE PTR [esi-0x10a0970f]
  4102ae:	jl     0x410324
  4102b0:	jp     0x410295
  4102b2:	test   eax,0x6ba3d00d
  4102b7:	push   ebp
  4102b8:	sti    
  4102b9:	mov    edi,0x30403ac0
  4102be:	jae    0x410258
  4102c0:	jle    0x410254
  4102c2:	retf   
  4102c3:	into   
  4102c4:	jge    0x4102f0
  4102c6:	and    eax,ebp
  4102c8:	xchg   ecx,eax
  4102c9:	fwait
  4102ca:	sbb    al,0x5c
  4102cc:	xor    BYTE PTR [esi+0x4f],dh
  4102cf:	fimul  DWORD PTR [ecx]
  4102d1:	les    ebx,FWORD PTR [eax+edx*8+0x4b]
  4102d5:	sbb    al,0x24
  4102d7:	rcr    BYTE PTR [edx-0x3f],0x1e
  4102db:	loope  0x410305
  4102dd:	jo     0x410288
  4102df:	faddp  st(7),st
  4102e1:	xchg   esi,eax
  4102e2:	(bad)  
  4102e3:	into   
  4102e4:	mov    cl,0x9f
  4102e6:	leave  
  4102e7:	add    ebp,DWORD PTR [ecx]
  4102e9:	call   0x10bd:0x8cf2b3e9
  4102f0:	push   ds
  4102f1:	cmp    ch,dl
  4102f3:	jnp    0x41032a
  4102f5:	and    DWORD PTR [edx-0x46],eax
  4102f8:	lahf   
  4102f9:	push   0x4eae6b2d
  4102fe:	sub    DWORD PTR ds:0x1808ebad,eax
  410304:	push   es
  410305:	jnp    0x410345
  410307:	add    DWORD PTR [esi-0x24],ebp
  41030a:	fild   QWORD PTR [esi-0x53dea2f2]
  410310:	xchg   ecx,eax
  410311:	jb     0x4102b8
  410313:	add    dh,dl
  410315:	jae    0x41035e
  410317:	adc    al,0xeb
  410319:	out    0x38,al
  41031b:	scas   eax,DWORD PTR es:[edi]
  41031c:	push   ss
  41031d:	nop
  41031e:	add    eax,0x98f2da3c
  410323:	stc    
  410324:	inc    esi
  410325:	ret    
  410326:	pop    edi
  410327:	fst    QWORD PTR [edx-0x25]
  41032a:	retf   0x2d42
  41032d:	idiv   DWORD PTR [ebp-0xe]
  410330:	xor    eax,0xa2dda65f
  410335:	(bad)  
  410336:	leave  
  410337:	ds test ch,ah
  41033a:	xchg   ecx,eax
  41033b:	xor    al,0xd0
  41033d:	lahf   
  41033e:	ret    
  41033f:	or     al,0x67
  410341:	pop    esp
  410342:	pop    ebp
  410343:	pop    ebx
  410344:	aas    
  410345:	inc    esi
  410346:	std    
  410347:	mov    dl,0x21
  410349:	je     0x41038b
  41034b:	mov    dh,0xa0
  41034d:	sub    DWORD PTR [ebx-0x5a],0xfffffff7
  410351:	or     ebx,ebp
  410353:	and    edi,DWORD PTR [edx-0x75]
  410356:	scas   eax,DWORD PTR es:[edi]
  410357:	mov    DWORD PTR [edi+0x45321dde],esp
  41035d:	add    BYTE PTR [ebx-0xd],dh
  410360:	das    
  410361:	mov    ebp,gs
  410363:	pushf  
  410364:	dec    ebx
  410365:	icebp  
  410366:	jmp    0xef3a:0xb33c20f
  41036d:	add    esp,DWORD PTR [ebp+0x385dcdb9]
  410373:	sub    al,bl
  410375:	test   eax,0xec7a2c5d
  41037a:	lahf   
  41037b:	ins    DWORD PTR es:[edi],dx
  41037c:	xchg   ecx,eax
  41037d:	cmp    al,0xb9
  41037f:	pop    edx
  410380:	test   al,0x80
  410382:	je     0x41035e
  410384:	ds sbb eax,0xeecd4f30
  41038a:	lahf   
  41038b:	fucomp st(3)
  41038d:	cmp    eax,0xb09e6b95
  410392:	fs or  ebp,esp
  410395:	sub    BYTE PTR [eax+esi*8],al
  410398:	shr    BYTE PTR [ebp+0x290a97b8],cl
  41039e:	xchg   edx,eax
  41039f:	and    DWORD PTR [edi+0x74],ebx
  4103a2:	cmp    BYTE PTR [ebp+0x3c],ch
  4103a5:	jb     0x410426
  4103a7:	jge    0x410346
  4103a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103aa:	jnp    0x410425
  4103ac:	jmp    0x4103d1
  4103ae:	in     eax,0x5b
  4103b0:	push   esi
  4103b1:	and    al,0x10
  4103b3:	shr    ah,0x3f
  4103b6:	retf   
  4103b7:	lahf   
  4103b8:	ret    0xf2a3
  4103bb:	pop    ss
  4103bc:	or     DWORD PTR [ebp+0x75],0xb8537026
  4103c3:	xor    ah,cl
  4103c5:	dec    esp
  4103c6:	out    dx,eax
  4103c7:	hlt    
  4103c8:	inc    edi
  4103c9:	mov    esp,0xa8eb1a65
  4103ce:	lds    ebp,FWORD PTR [edx-0x6dc55]
  4103d4:	xor    ebx,DWORD PTR [ebp+0x64559928]
  4103da:	push   0xffffffee
  4103dc:	add    eax,0x71526b7a
  4103e1:	mov    esi,0x5e17485d
  4103e6:	out    dx,al
  4103e7:	stos   DWORD PTR es:[edi],eax
  4103e8:	ds push eax
  4103ea:	dec    eax
  4103eb:	dec    edx
  4103ec:	adc    DWORD PTR [edx],0x717a886e
  4103f2:	mov    ebx,0x4a287d4f
  4103f7:	ret    
  4103f8:	dec    esp
  4103f9:	jo     0x4103cb
  4103fb:	dec    ebx
  4103fc:	or     eax,ebp
  4103fe:	stos   BYTE PTR es:[edi],al
  4103ff:	mov    DWORD PTR [eax+0x1a8cd917],ebp
  410405:	(bad)  
  410406:	in     al,dx
  410407:	enter  0x685b,0xbd
  41040b:	xor    BYTE PTR [ebp+0x5d],ch
  41040e:	pop    ebp
  41040f:	call   0x8e3d:0x6a1e65b1
  410416:	dec    ebx
  410417:	and    al,0x5d
  410419:	sub    ax,0xa085
  41041d:	jne    0x410424
  41041f:	xchg   ebp,eax
  410420:	jle    0x410469
  410422:	xor    DWORD PTR [ecx+eax*2+0x1a7ea911],ebx
  410429:	stos   DWORD PTR es:[edi],eax
  41042a:	cld    
  41042b:	add    DWORD PTR [esi],esp
  41042d:	push   edi
  41042e:	ds nop
  410430:	div    BYTE PTR [edx+edi*2]
  410433:	lea    edx,[eax+0x29]
  410436:	pop    ds
  410437:	out    dx,al
  410438:	int3   
  410439:	or     BYTE PTR [esi],al
  41043b:	psrad  mm2,QWORD PTR [ecx+eiz*8]
  41043f:	shr    DWORD PTR gs:[esi],1
  410442:	and    al,0xf1
  410444:	lahf   
  410445:	and    al,0x4f
  410447:	sub    BYTE PTR [ebp-0x6efb324e],bh
  41044d:	mov    esp,0x82cfc24a
  410452:	pop    eax
  410453:	mov    esp,DWORD PTR [ecx]
  410455:	xor    eax,0xd3ad5dbf
  41045a:	rcl    ch,1
  41045c:	push   0x78
  41045e:	pop    esi
  41045f:	test   BYTE PTR [ecx-0x24b3a1e4],ah
  410465:	xchg   edi,eax
  410466:	push   ebp
  410467:	xchg   edx,eax
  410468:	call   0x8e94:0xbef421a4
  41046f:	jns    0x41043b
  410471:	add    ebx,DWORD PTR [ebx-0x41]
  410474:	mov    WORD PTR [ecx],ds
  410476:	rep outs dx,BYTE PTR ds:[esi]
  410478:	sbb    DWORD PTR [eax-0x40],ebx
  41047b:	inc    esi
  41047c:	jge    0x4104f9
  41047e:	add    DWORD PTR [edx-0xc],0xaf68a3b9
  410485:	push   esi
  410486:	rol    DWORD PTR [edx-0x10119b29],1
  41048c:	fdiv   st(1),st
  41048e:	jge    0x410452
  410490:	inc    eax
  410491:	sbb    BYTE PTR [edi-0x4618eba4],ah
  410497:	(bad)  
  410498:	dec    eax
  410499:	add    edx,DWORD PTR [esi]
  41049b:	inc    edx
  41049c:	ja     0x4104d3
  41049e:	inc    eax
  41049f:	add    al,0xd7
  4104a1:	int    0xbd
  4104a3:	cwde   
  4104a4:	js     0x4104e3
  4104a6:	add    eax,0x9adc763
  4104ab:	dec    DWORD PTR [ebp-0x2b]
  4104ae:	xchg   esp,eax
  4104af:	popf   
  4104b0:	sub    BYTE PTR ds:0x6386f6de,dh
  4104b6:	test   eax,0xd5090883
  4104bb:	sbb    ebp,DWORD PTR ds:0x354e5c23
  4104c1:	out    dx,al
  4104c2:	shl    DWORD PTR [eax],cl
  4104c4:	xchg   DWORD PTR [edi+ecx*8],ecx
  4104c7:	adc    DWORD PTR [ecx+ecx*1+0x3d],0xd1935e71
  4104cf:	aam    0x49
  4104d1:	sahf   
  4104d2:	push   ebp
  4104d3:	hlt    
  4104d4:	(bad)  
  4104d5:	je     0x4104d2
  4104d7:	adc    bl,BYTE PTR [eax]
  4104d9:	mov    cl,0x51
  4104db:	imul   edi,DWORD PTR [edx],0x18eb1629
  4104e1:	pop    edx
  4104e2:	push   ds
  4104e3:	clc    
  4104e4:	sti    
  4104e5:	stos   DWORD PTR es:[edi],eax
  4104e6:	push   edx
  4104e7:	inc    eax
  4104e8:	xchg   DWORD PTR [esi-0x13],ebp
  4104eb:	lahf   
  4104ec:	dec    edi
  4104ed:	inc    eax
  4104ee:	xor    al,0x79
  4104f0:	xchg   ecx,eax
  4104f1:	mov    ebp,0xd3c6e969
  4104f6:	sub    eax,0xf92d6a36
  4104fb:	fistp  QWORD PTR [ebx-0x78]
  4104fe:	call   0x4d2f:0x282c3c64
  410505:	ret    0xc14a
  410508:	xchg   esp,eax
  410509:	repnz mov ds:0x562e06a,eax
  41050f:	ret    0xdf7f
  410512:	div    DWORD PTR [edi-0x2c969d64]
  410518:	sbb    eax,0x3a86182f
  41051d:	out    0x41,eax
  41051f:	stc    
  410520:	jecxz  0x410510
  410522:	scas   al,BYTE PTR es:[edi]
  410523:	cmp    al,0x3c
  410525:	retf   0x6c19
  410528:	int3   
  410529:	(bad)  
  41052a:	lods   al,BYTE PTR ds:[esi]
  41052b:	shl    BYTE PTR ss:[ecx-0x53],0xc2
  410530:	je     0x41059d
  410532:	push   es
  410533:	pop    edx
  410534:	mov    ch,0x2f
  410536:	sysenter 
  410538:	std    
  410539:	shl    edi,cl
  41053b:	mov    edx,0x6012c1c0
  410540:	xchg   ecx,eax
  410541:	mov    dh,0xf
  410543:	mov    esp,0x492d4f9e
  410548:	repz inc edi
  41054a:	jb     0x410563
  41054c:	outs   dx,BYTE PTR ds:[esi]
  41054d:	test   esi,0xdd9a544
  410553:	les    esp,FWORD PTR [ebx+0x22]
  410556:	sub    eax,0x6101aad9
  41055b:	imul   esi,DWORD PTR [eax+0x68e8686c],0xffffff90
  410562:	repnz mov ah,0xad
  410565:	adc    DWORD PTR [ebx+0x52d8bfad],eax
  41056b:	mov    bh,0x69
  41056d:	stos   BYTE PTR es:[edi],al
  41056e:	(bad)  
  41056f:	out    dx,eax
  410570:	cmp    eax,0xf9951837
  410575:	mov    ebx,esi
  410577:	sub    eax,0xa3730af1
  41057c:	rcr    BYTE PTR [ebx*2+0x87182df],0xb5
  410584:	mov    ds:0xdcfb2336,eax
  410589:	mov    dl,0xcf
  41058b:	mov    ebx,0x2019bb6c
  410590:	sub    dh,BYTE PTR [edx-0x60ec2007]
  410596:	jnp    0x41057c
  410598:	pop    edi
  410599:	sbb    al,0xbd
  41059b:	sahf   
  41059c:	cmp    al,0xfb
  41059e:	sar    BYTE PTR [eax-0x6e],0x6a
  4105a2:	popa   
  4105a3:	imul   ebp,DWORD PTR ds:0x4b59e702,0x73ea8f26
  4105ad:	dec    ebx
  4105ae:	cmp    al,0x38
  4105b0:	jns    0x410611
  4105b2:	jmp    0xe672:0x9c2ccb68
  4105b9:	adc    eax,0x90973a95
  4105be:	fsub   DWORD PTR [edx+0x249b5c08]
  4105c4:	dec    ebx
  4105c5:	jp     0x410557
  4105c7:	das    
  4105c8:	add    DWORD PTR [ebp-0x431a7e06],edx
  4105ce:	(bad)  
  4105cf:	dec    edi
  4105d0:	add    BYTE PTR [ebp+0x72b5703e],cl
  4105d6:	sbb    bh,ch
  4105d8:	call   0xac32:0x519b1825
  4105df:	outs   dx,BYTE PTR es:[esi]
  4105e1:	aas    
  4105e2:	inc    ecx
  4105e3:	cmp    eax,0xe8bf9d3a
  4105e8:	xlat   BYTE PTR ds:[ebx]
  4105e9:	scas   al,BYTE PTR es:[edi]
  4105ea:	mov    cl,0x53
  4105ec:	ret    0xa8f1
  4105ef:	pop    ss
  4105f0:	sbb    edx,edx
  4105f2:	leave  
  4105f3:	jg     0x4105a0
  4105f5:	push   0xc6b4dccf
  4105fa:	(bad)  
  4105fb:	into   
  4105fc:	mov    eax,ds:0xbc9d0109
  410601:	mov    DWORD PTR [ebx+0x44aafebc],ebx
  410607:	arpl   WORD PTR [edi-0x60],di
  41060a:	fistp  QWORD PTR [ecx]
  41060c:	push   edi
  41060d:	mov    ch,0xd3
  41060f:	popa   
  410610:	pushf  
  410611:	(bad)  
  410612:	push   esp
  410613:	push   esi
  410614:	je     0x4105bc
  410616:	mov    ecx,0x1e593b73
  41061b:	or     al,BYTE PTR [edi+0x2f]
  41061e:	cmp    bh,BYTE PTR [edx-0x2fdc056]
  410624:	dec    eax
  410625:	dec    ecx
  410626:	loope  0x41065b
  410628:	js     0x4105c6
  41062a:	pusha  
  41062b:	(bad)  
  41062c:	sti    
  41062d:	jb     0x41062b
  41062f:	add    al,0x3a
  410631:	or     esi,eax
  410633:	leave  
  410634:	sti    
  410635:	shl    BYTE PTR [edi],0xc3
  410638:	xor    eax,0xf9d25652
  41063d:	daa    
  41063e:	xor    al,al
  410640:	dec    edi
  410641:	(bad)  
  410643:	sub    eax,0x4c2b542e
  410648:	pop    ebp
  410649:	outs   dx,DWORD PTR ds:[esi]
  41064a:	mov    ds:0x1f01996a,al
  41064f:	mov    esi,0x93eadb1e
  410654:	retf   0x318e
  410657:	test   eax,0x86b7bc53
  41065c:	pop    ebx
  41065d:	mov    dx,0x1b2c
  410661:	addr16 add al,0x87
  410664:	sbb    eax,0x349c0c59
  410669:	cdq    
  41066a:	xlat   BYTE PTR ds:[ebx]
  41066b:	mov    dh,0x6a
  41066d:	loop   0x410632
  41066f:	inc    ebp
  410670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410671:	fnstsw WORD PTR [ecx+esi*1+0x5adee26a]
  410678:	dec    edx
  410679:	or     bh,ch
  41067b:	mov    BYTE PTR [eax],bl
  41067d:	mov    bh,0x11
  41067f:	pop    ss
  410680:	fcmovnbe st,st(5)
  410682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410683:	cmc    
  410684:	mov    WORD PTR [ecx+0x6f2b2a70],?
  41068a:	arpl   WORD PTR [edi-0x1902022a],dx
  410690:	dec    ecx
  410691:	add    ebx,DWORD PTR [edx]
  410693:	in     al,dx
  410694:	mov    ds:0x6240313a,al
  410699:	mov    al,0xaa
  41069b:	add    bl,BYTE PTR [ebx+0x4a]
  41069e:	dec    edx
  41069f:	in     eax,0x93
  4106a1:	adc    al,0x95
  4106a3:	mov    cl,0x9a
  4106a5:	jno    0x410638
  4106a7:	lds    esi,FWORD PTR [edx-0xe]
  4106aa:	or     DWORD PTR [edi+0x5c],esp
  4106ad:	sub    ebp,DWORD PTR [edx+esi*8+0x75]
  4106b1:	fidivr DWORD PTR es:[edx]
  4106b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106b5:	lock or ecx,DWORD PTR [ebx+ebx*4-0x6c8f026c]
  4106bd:	scas   eax,DWORD PTR es:[edi]
  4106be:	inc    esp
  4106bf:	out    0xa7,eax
  4106c1:	and    ah,BYTE PTR [edi-0x7c]
  4106c4:	sub    al,0x87
  4106c6:	pop    ds
  4106c7:	dec    eax
  4106c8:	and    ecx,DWORD PTR [edx]
  4106ca:	dec    esp
  4106cb:	cmp    al,0x98
  4106cd:	in     al,0xbb
  4106cf:	fst    QWORD PTR [ebx+0x70f36c44]
  4106d5:	ja     0x4106d2
  4106d7:	push   0x1d
  4106d9:	xchg   edx,eax
  4106da:	sbb    ch,bh
  4106dc:	iret   
  4106dd:	push   eax
  4106de:	mov    cl,0xec
  4106e0:	cmp    ecx,esp
  4106e2:	jns    0x41070a
  4106e4:	fpatan 
  4106e6:	add    al,0xe6
  4106e8:	and    edi,DWORD PTR [esi+0x4979f139]
  4106ee:	lahf   
  4106ef:	adc    eax,0x85634d03
  4106f4:	jmp    0x2911:0x9c9291b0
  4106fb:	dec    ecx
  4106fc:	push   edi
  4106fd:	fs lahf 
  4106ff:	or     eax,0x1955892d
  410704:	pop    ss
  410705:	imul   edi,DWORD PTR [ebp+ebx*1+0x6ea59bae],0xffffff89
  41070d:	(bad)  
  41070e:	mov    edx,0x81d45dc3
  410713:	push   es
  410714:	not    eax
  410716:	dec    esp
  410717:	or     ebp,ebx
  410719:	aad    0xe0
  41071b:	xor    al,0x7
  41071d:	iret   
  41071e:	in     eax,dx
  41071f:	(bad)  
  410720:	pop    edi
  410721:	push   ds
  410722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410723:	sti    
  410724:	(bad)  [edi+ebx*8-0x4d]
  410728:	out    0xdb,al
  41072a:	or     BYTE PTR [eax-0x6],bh
  41072d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41072e:	sti    
  41072f:	call   0x9f94622a
  410734:	jp     0x4107a8
  410736:	pop    esp
  410737:	adc    BYTE PTR [ecx+0x6c],dl
  41073a:	std    
  41073b:	fidiv  WORD PTR [eax-0x28]
  41073e:	and    esi,DWORD PTR [eax]
  410740:	iret   
  410741:	rcl    DWORD PTR [ecx],0x3a
  410744:	jecxz  0x41077b
  410746:	nop
  410747:	adc    BYTE PTR [eax+0x6e],bl
  41074a:	pop    edx
  41074b:	jnp    0x410745
  41074d:	push   esi
  41074e:	mov    ebx,0x98a5c577
  410753:	int3   
  410754:	and    al,0x2a
  410756:	mov    ds:0x51adc83d,al
  41075b:	add    eax,0x5adfcacd
  410760:	jmp    0x5749:0xaf28c57e
  410767:	gs cmp al,0x83
  41076a:	test   DWORD PTR [esi+edi*8],edi
  41076d:	and    dl,BYTE PTR [edi]
  41076f:	cmc    
  410770:	popa   
  410771:	iret   
  410772:	mov    ecx,0x10aa2ec8
  410777:	(bad)  
  410779:	lea    eax,[esp+esi*2-0x761f6455]
  410780:	repnz rcl ecx,cl
  410783:	shl    BYTE PTR [eax],cl
  410785:	jle    0x41070d
  410787:	jp     0x4107c0
  410789:	sbb    BYTE PTR [edi],dl
  41078b:	push   0xe7e9181
  410790:	dec    edi
  410791:	(bad)  [ebp+0x350b3b78]
  410797:	jmp    0x41079b
  410799:	test   eax,0xd8d2cba8
  41079e:	sub    al,0xfe
  4107a0:	push   0x6a
  4107a2:	sub    eax,edx
  4107a4:	arpl   WORD PTR [ecx-0x78],di
  4107a7:	mov    cl,0xbc
  4107a9:	repnz out 0xe6,al
  4107ac:	cli    
  4107ad:	pop    ebx
  4107ae:	push   eax
  4107af:	inc    DWORD PTR [ebp+0x13]
  4107b2:	fwait
  4107b3:	xchg   edx,eax
  4107b4:	cmp    esi,ebx
  4107b6:	outs   dx,BYTE PTR ds:[esi]
  4107b7:	imul   edx,DWORD PTR [ecx],0xffffff8b
  4107ba:	xor    cl,dl
  4107bc:	int3   
  4107bd:	lahf   
  4107be:	cmp    dh,BYTE PTR [esi-0x26b407a5]
  4107c4:	xor    al,0x7c
  4107c6:	xor    bl,BYTE PTR [ebx]
  4107c8:	mov    ecx,0x43767628
  4107cd:	jbe    0x4107a7
  4107cf:	mov    dh,0xf2
  4107d1:	sbb    edx,DWORD PTR [eax+0x63b42c40]
  4107d7:	mov    bh,0x10
  4107d9:	(bad)  
  4107da:	imul   esi,DWORD PTR [ebp+0x20],0xffffffa4
  4107de:	mov    al,0x9d
  4107e0:	xor    BYTE PTR [edi+0x48603f1b],bl
  4107e6:	sub    dl,BYTE PTR [ecx+eax*1+0x5d02cc7e]
  4107ed:	sbb    eax,0x6457c89e
  4107f2:	imul   esp,DWORD PTR [edi-0x3d29461e]
  4107f9:	nop
  4107fa:	sti    
  4107fb:	hlt    
  4107fc:	test   BYTE PTR [ebp+0x165db75c],dh
  410802:	add    cl,BYTE PTR [esi+edi*1]
  410805:	dec    ebx
  410806:	pop    es
  410807:	mov    BYTE PTR [edi-0x26fdfd06],0x4c
  41080e:	lahf   
  41080f:	sbb    BYTE PTR [edi-0x4d10e07a],cl
  410815:	sbb    dl,BYTE PTR [edx-0x37]
  410818:	dec    ecx
  410819:	cmp    ecx,DWORD PTR [edi+ecx*1]
  41081c:	(bad)  
  41081e:	mov    al,ds:0xa2c2777f
  410823:	cmp    al,0x3e
  410825:	adc    edi,DWORD PTR [edx]
  410827:	sbb    edi,edi
  410829:	jmp    0xd468:0x4303177d
  410830:	push   eax
  410831:	inc    esp
  410832:	xor    cl,BYTE PTR [ecx-0x29]
  410835:	adc    esi,DWORD PTR [ebp+0x23]
  410838:	outs   dx,DWORD PTR ds:[esi]
  410839:	lods   eax,DWORD PTR ds:[esi]
  41083a:	xchg   esi,eax
  41083b:	(bad)  
  41083c:	xor    edi,DWORD PTR [edx]
  41083e:	xchg   ebp,ecx
  410840:	arpl   WORD PTR [ebx],sp
  410842:	es mov cl,0xbf
  410845:	popf   
  410846:	dec    esi
  410847:	sub    BYTE PTR gs:[esi+0x64220081],ch
  41084e:	outs   dx,DWORD PTR ds:[esi]
  410850:	es jge 0x41080f
  410853:	mov    eax,ds:0xa9974a2f
  410858:	mov    cs,WORD PTR [ebx-0x582695f4]
  41085e:	adc    DWORD PTR [edx-0x65],ecx
  410861:	call   0xcd730242
  410866:	pushf  
  410867:	lahf   
  410868:	daa    
  410869:	jmp    0x4108c1
  41086b:	adc    DWORD PTR [edx-0x4683f1d2],esp
  410871:	idiv   DWORD PTR [ebp-0x31782a7b]
  410877:	xor    DWORD PTR [ecx],ecx
  410879:	test   ebx,eax
  41087b:	jle    0x41088b
  41087d:	add    DWORD PTR [edi+0x60],0xffffffcc
  410881:	xor    eax,0x654c2bc9
  410886:	aas    
  410887:	test   bl,bh
  410889:	lahf   
  41088a:	bound  esi,QWORD PTR [edi+0x38]
  41088d:	into   
  41088e:	std    
  41088f:	out    dx,eax
  410890:	add    ebp,DWORD PTR [ebx+0x6d]
  410893:	mov    ds:0xe1cb5fcd,al
  410898:	add    eax,0xf03a7852
  41089d:	lock or DWORD PTR ds:0x7534a355,ecx
  4108a4:	test   al,0xce
  4108a6:	mov    edi,0xce39351e
  4108ab:	out    0xc3,al
  4108ad:	outs   dx,DWORD PTR ds:[esi]
  4108ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108af:	aam    0x1
  4108b1:	inc    edx
  4108b2:	push   0xf799fda3
  4108b7:	pop    edx
  4108b8:	adc    edx,ebx
  4108ba:	push   DWORD PTR [eax+0x5635f806]
  4108c0:	push   esi
  4108c1:	sub    bh,bl
  4108c3:	(bad)  
  4108c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108c5:	jmp    0x4108f4
  4108c7:	imul   edx,ebp,0xffffff90
  4108ca:	(bad)  
  4108cb:	cld    
  4108cc:	xor    ecx,esp
  4108ce:	ja     0x41091f
  4108d0:	jg     0x41085a
  4108d2:	into   
  4108d3:	les    ebx,FWORD PTR [esi+0x5b195d8a]
  4108d9:	or     al,bl
  4108db:	gs pushf 
  4108dd:	sar    BYTE PTR [edx-0x11a2e75d],cl
  4108e3:	pop    ebx
  4108e4:	lods   eax,DWORD PTR ds:[esi]
  4108e5:	adc    al,0xbd
  4108e7:	(bad)  
  4108e8:	sub    ebx,DWORD PTR ds:0xe6fa3a62
  4108ee:	mov    BYTE PTR [edx+0x160fba86],0x1e
  4108f5:	loopne 0x410883
  4108f7:	cmp    al,0x6d
  4108f9:	cwde   
  4108fa:	or     ebp,edi
  4108fc:	in     eax,0x1d
  4108fe:	mov    bh,0xe3
  410900:	push   es
  410901:	mov    bh,0xf4
  410903:	mov    BYTE PTR [esp+ebp*1-0x4b],ah
  410907:	dec    edx
  410908:	imul   dh
  41090a:	cli    
  41090b:	xchg   DWORD PTR [ebp-0x2e01b06b],edx
  410911:	or     ah,BYTE PTR [edx+0x6c]
  410914:	rol    DWORD PTR [ecx],0x55
  410917:	arpl   WORD PTR [ebx+0x2306b560],si
  41091d:	out    dx,al
  41091e:	loopne 0x4108e1
  410920:	push   ds
  410921:	pushf  
  410922:	mov    bl,0xe1
  410924:	in     eax,dx
  410925:	push   cs
  410926:	mov    dl,0xe
  410928:	arpl   WORD PTR [edx+0x4e],bp
  41092b:	push   ecx
  41092c:	repz xchg ebp,eax
  41092e:	sub    eax,0x930be683
  410933:	xchg   esi,eax
  410934:	loop   0x4108de
  410936:	sub    dh,BYTE PTR [edi]
  410938:	(bad)  
  410939:	jmp    0x4109b1
  41093b:	in     eax,0x70
  41093d:	xor    ebp,esp
  41093f:	cmp    BYTE PTR [ebp+0x1],0xc7
  410943:	(bad)  
  410944:	mov    esp,0x291ad8f5
  410949:	jns    0x410927
  41094b:	adc    BYTE PTR [eax-0x30],dl
  41094e:	pop    esp
  41094f:	jae    0x4108ed
  410951:	mov    eax,ds:0x4fd7ef30
  410956:	push   0x1d
  410958:	jnp    0x41098f
  41095a:	ins    BYTE PTR es:[edi],dx
  41095b:	jg     0x4108eb
  41095d:	sqrtps xmm3,XMMWORD PTR [esi+0x610f0d9b]
  410964:	imul   esp,DWORD PTR [ebx+0x24],0x3a
  410968:	inc    ebp
  410969:	xchg   BYTE PTR [edx+0x57964b53],bl
  41096f:	inc    edi
  410970:	jmp    0x410999
  410972:	ss div ah
  410975:	cmp    bl,BYTE PTR [edx-0x4ab1cae9]
  41097b:	imul   esi,DWORD PTR [eax-0x62],0x26
  41097f:	int3   
  410980:	push   cs
  410981:	fcom   DWORD PTR [edi-0x62]
  410984:	outs   dx,BYTE PTR ds:[esi]
  410985:	ins    BYTE PTR es:[edi],dx
  410986:	sub    eax,edi
  410988:	fs xchg edx,eax
  41098a:	jnp    0x4109c4
  41098c:	sbb    al,0x62
  41098e:	pop    esp
  41098f:	in     al,dx
  410990:	adc    ebx,DWORD PTR [esi]
  410992:	inc    eax
  410993:	push   es
  410994:	xchg   esi,eax
  410995:	fdiv   st(0),st
  410998:	pop    ss
  410999:	lock shl DWORD PTR [ebx+0x5b],1
  41099d:	out    0x64,al
  41099f:	jb     0x4109e1
  4109a1:	inc    eax
  4109a2:	xchg   ebx,eax
  4109a3:	pop    esi
  4109a4:	inc    eax
  4109a5:	or     cl,BYTE PTR [ebx+ebx*4]
  4109a8:	(bad)  
  4109a9:	mov    cs,WORD PTR [esi-0x1f]
  4109ac:	loope  0x4109cc
  4109ae:	push   edi
  4109af:	push   ds
  4109b0:	mov    bh,0x8c
  4109b2:	bound  esi,QWORD PTR [edx]
  4109b4:	push   edx
  4109b5:	jge    0x4109b3
  4109b7:	jnp    0x410a07
  4109b9:	sub    esi,DWORD PTR [ecx]
  4109bb:	arpl   WORD PTR [eax],si
  4109bd:	in     al,0xbc
  4109bf:	sar    BYTE PTR [esi-0x3f3f0290],1
  4109c5:	std    
  4109c6:	dec    esi
  4109c7:	mov    esp,0xbd7ac35b
  4109cc:	xchg   ebp,eax
  4109cd:	inc    esi
  4109ce:	pop    edi
  4109cf:	arpl   WORD PTR [ebx+0x47b94b6],bp
  4109d5:	mov    al,0xa3
  4109d7:	jmp    0x410a1d
  4109d9:	jl     0x410a04
  4109db:	adc    eax,0x1c0044e0
  4109e0:	mov    cl,0xe3
  4109e2:	mov    ebp,0x30a6754a
  4109e7:	call   0xa3fe:0xe2e66f34
  4109ee:	imul   esi,DWORD PTR [eax],0x2a04f721
  4109f4:	loope  0x410a13
  4109f6:	cmp    eax,0x30fd100e
  4109fb:	and    BYTE PTR [esi-0x2f],dh
  4109fe:	inc    ebx
  4109ff:	sub    BYTE PTR [edi+0x64],al
  410a02:	repnz loope 0x4109e8
  410a05:	rol    al,0xc3
  410a08:	(bad)  
  410a0a:	dec    ecx
  410a0b:	leave  
  410a0c:	cli    
  410a0d:	das    
  410a0e:	sbb    BYTE PTR [edi-0x6a0eac27],bh
  410a14:	and    ebx,DWORD PTR [ebp+esi*4+0x2893772c]
  410a1b:	sub    al,0x2e
  410a1d:	xchg   edx,eax
  410a1e:	jl     0x410a37
  410a20:	aas    
  410a21:	sub    dh,BYTE PTR [eax-0x7f]
  410a24:	fs (bad) 
  410a27:	pop    es
  410a28:	cli    
  410a29:	add    eax,0xe87e61ab
  410a2e:	es (bad) 
  410a30:	test   eax,0x88f66e84
  410a35:	dec    edx
  410a36:	push   0x41
  410a38:	sbb    BYTE PTR [edi],dh
  410a3a:	int3   
  410a3b:	fs push 0xffffffc4
  410a3e:	add    dl,BYTE PTR ds:0xe5509b46
  410a44:	mov    WORD PTR [eax+0x41],gs
  410a47:	mov    ecx,0x403d8888
  410a4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a4d:	test   eax,0xcf733414
  410a52:	sbb    BYTE PTR [edi],al
  410a54:	and    esi,DWORD PTR [ebx-0x3b5fe25b]
  410a5a:	push   cs
  410a5b:	icebp  
  410a5c:	add    eax,0xe683b41b
  410a61:	mov    esi,edi
  410a63:	cmp    ch,0x2d
  410a66:	icebp  
  410a67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a68:	dec    esi
  410a69:	or     bh,BYTE PTR [ecx-0x48322a24]
  410a6f:	aas    
  410a70:	sbb    BYTE PTR [eax],dl
  410a72:	lahf   
  410a73:	loop   0x410a75
  410a75:	pop    eax
  410a76:	sbb    al,BYTE PTR [edi-0x13]
  410a79:	jae    0x410a41
  410a7b:	or     DWORD PTR [ecx+0x1a],eax
  410a7e:	lahf   
  410a7f:	jg     0x410ab3
  410a81:	out    0xc6,eax
  410a83:	(bad)  
  410a84:	sbb    al,0xd0
  410a86:	retf   0xcddf
  410a89:	pop    ebp
  410a8a:	outs   dx,BYTE PTR ds:[si]
  410a8c:	fcomp  st(4)
  410a8e:	xchg   esp,eax
  410a8f:	stc    
  410a90:	sbb    dl,ah
  410a92:	loopne 0x410a41
  410a94:	aas    
  410a95:	inc    ebx
  410a96:	pop    ss
  410a97:	xchg   edi,eax
  410a98:	mov    cl,0x55
  410a9a:	div    DWORD PTR [eax-0x57987df4]
  410aa0:	int    0xaf
  410aa2:	jmp    0x410ab4
  410aa4:	icebp  
  410aa5:	xor    al,ah
  410aa7:	clc    
  410aa8:	inc    esp
  410aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aaa:	jp     0x410af0
  410aac:	mov    DWORD PTR [ecx],ebp
  410aae:	scas   eax,DWORD PTR es:[edi]
  410aaf:	jno    0x410b2c
  410ab1:	cmp    DWORD PTR [esi-0x42],ecx
  410ab4:	adc    eax,0x2c6d9af3
  410ab9:	std    
  410aba:	jl     0x410a52
  410abc:	fwait
  410abd:	push   0x24
  410abf:	cmp    eax,0xd7160408
  410ac4:	and    eax,0x5581369
  410ac9:	fadd   DWORD PTR [esi+0x37]
  410acc:	and    edi,DWORD PTR [ebx]
  410ace:	loop   0x410a62
  410ad0:	mov    ah,0x56
  410ad2:	mov    al,0xae
  410ad4:	jmp    0x60acc44c
  410ad9:	shl    BYTE PTR ds:0xdf1f209a,cl
  410adf:	int3   
  410ae0:	push   ss
  410ae1:	je     0x410a79
  410ae3:	test   eax,ebp
  410ae5:	sbb    eax,0x9faa993
  410aea:	loopne 0x410b16
  410aec:	fst    QWORD PTR [edx+ebx*1+0x39a0da5d]
  410af3:	jge    0x410b27
  410af5:	mov    al,ds:0xb234b533
  410afa:	call   0x6273f876
  410aff:	test   ebx,ebx
  410b01:	popa   
  410b02:	add    BYTE PTR [esi-0x67],bh
  410b05:	jne    0x410b7a
  410b07:	xor    eax,esp
  410b09:	adc    bl,dh
  410b0b:	scas   al,BYTE PTR es:[edi]
  410b0c:	cmp    cl,dl
  410b0e:	(bad)  
  410b0f:	sahf   
  410b10:	push   ecx
  410b11:	pop    ecx
  410b12:	mov    dh,0x5
  410b14:	mov    esp,0x3bcb06f1
  410b19:	xchg   ecx,eax
  410b1a:	xchg   esi,eax
  410b1b:	adc    ecx,esi
  410b1d:	(bad)  [ecx+0x59]
  410b20:	sub    BYTE PTR [ecx+0x48],0x7d
  410b24:	mov    cl,0x1f
  410b26:	fdivrp st(0),st
  410b28:	shr    ebx,0x56
  410b2b:	mov    ds:0x86d254d1,al
  410b30:	fidivr WORD PTR [edx+0x2b38903f]
  410b36:	xor    al,0x3b
  410b38:	out    dx,al
  410b39:	inc    eax
  410b3a:	dec    ecx
  410b3b:	push   cs
  410b3c:	mov    ds:0xb4c64b3,eax
  410b41:	cmc    
  410b42:	outs   dx,DWORD PTR ds:[esi]
  410b43:	fwait
  410b44:	dec    esi
  410b45:	pop    edx
  410b46:	out    dx,eax
  410b47:	clc    
  410b48:	xchg   esp,eax
  410b49:	repnz xchg ebx,eax
  410b4b:	aaa    
  410b4c:	xor    esp,DWORD PTR [ebx+0x619ea92c]
  410b52:	xor    BYTE PTR [edx-0x69f8da70],0x42
  410b59:	mov    edi,0x4be50a73
  410b5e:	fwait
  410b5f:	mov    ecx,0x2b0a088f
  410b64:	xor    cl,BYTE PTR [ecx-0x38]
  410b67:	fwait
  410b68:	es jmp 0x410b3f
  410b6b:	loop   0x410bcc
  410b6d:	cmp    esp,ecx
  410b6f:	cdq    
  410b70:	xor    cl,BYTE PTR [ecx-0x77]
  410b73:	jne    0x410b70
  410b75:	or     BYTE PTR [esp+eax*4+0x742424c3],ah
  410b7c:	dec    ecx
  410b7d:	jp     0x410bce
  410b7f:	mov    edi,0xaaab80dc
  410b84:	or     BYTE PTR [edx+0x310ed4c5],0x1
  410b8b:	push   esp
  410b8c:	adc    eax,0xe8c1df30
  410b91:	mov    BYTE PTR [esi],cl
  410b93:	sub    DWORD PTR [esi],eax
  410b95:	push   ds
  410b96:	out    dx,eax
  410b97:	loopne 0x410b6f
  410b99:	mov    BYTE PTR [eax-0x67],dh
  410b9c:	outs   dx,BYTE PTR ds:[esi]
  410b9d:	std    
  410b9e:	fs push ds
  410ba0:	adc    edx,edx
  410ba2:	fnstsw WORD PTR [ebp+0x45]
  410ba5:	shl    BYTE PTR [eax-0x357c582f],cl
  410bab:	dec    esp
  410bac:	popf   
  410bad:	inc    ebp
  410bae:	dec    DWORD PTR [edi+eax*8]
  410bb1:	jmp    0x3321:0x44abe47c
  410bb8:	aas    
  410bb9:	sub    eax,0xaff07ac1
  410bbe:	push   edx
  410bbf:	mov    dh,0xcb
  410bc1:	into   
  410bc2:	popa   
  410bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bc4:	out    dx,al
  410bc5:	cli    
  410bc6:	xor    ch,BYTE PTR es:[esi+0x4a]
  410bca:	xchg   ebp,eax
  410bcb:	lahf   
  410bcc:	stc    
  410bcd:	(bad)  
  410bce:	xchg   edi,eax
  410bcf:	popf   
  410bd0:	cs sub eax,0x909c616e
  410bd6:	lock out dx,al
  410bd8:	pop    ds
  410bd9:	mov    bl,0xb
  410bdb:	jo     0x410c0d
  410bdd:	add    al,0xcd
  410bdf:	aam    0x69
  410be1:	inc    ebx
  410be2:	cmp    al,0x79
  410be4:	lods   eax,DWORD PTR ds:[esi]
  410be5:	jnp    0x410bb4
  410be7:	mov    bl,0x3b
  410be9:	jp     0x410b77
  410beb:	ror    BYTE PTR ds:0xc97ea6e7,1
  410bf1:	adc    ebx,0xffffff9d
  410bf4:	cld    
  410bf5:	mov    dl,dl
  410bf7:	lock jmp 0x7e58:0xd9ebdf78
  410bff:	adc    BYTE PTR [edx-0x23],0xae
  410c03:	and    esi,DWORD PTR [edx]
  410c05:	jmp    eax
  410c07:	xchg   ebx,eax
  410c08:	imul   si,WORD PTR [edx-0x6],0x36
  410c0d:	or     al,0x17
  410c0f:	add    DWORD PTR [eax],0xffffffe3
  410c12:	dec    edi
  410c13:	sbb    eax,0x41b8d3b8
  410c18:	sbb    BYTE PTR [edx],0xbf
  410c1b:	imul   ebp,DWORD PTR [edi],0xffffffc1
  410c1e:	pop    esi
  410c1f:	and    DWORD PTR [ebp-0x78],ebp
  410c22:	lods   al,BYTE PTR ds:[esi]
  410c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c24:	fcomp  DWORD PTR [eax+0x6d38dd6e]
  410c2a:	sub    BYTE PTR [ebx+edi*4],0xf4
  410c2e:	add    al,0x38
  410c30:	mov    bl,0x42
  410c32:	xor    bl,BYTE PTR [edx+0x63e65aa]
  410c38:	bound  esi,QWORD PTR ds:0xa0b2165f
  410c3e:	mov    ebx,DWORD PTR [ecx-0x69a4c875]
  410c44:	sbb    eax,0x26d256d1
  410c49:	icebp  
  410c4a:	or     al,BYTE PTR [ebp-0x128ad52f]
  410c50:	sbb    al,0x5
  410c52:	adc    DWORD PTR [ebx+0x2e75763d],ebx
  410c58:	leave  
  410c59:	pushf  
  410c5a:	mov    bl,0x4a
  410c5c:	or     edx,DWORD PTR [edx+ebp*4+0x13e1b0e8]
  410c63:	pop    edx
  410c64:	or     al,0xb7
  410c66:	or     esi,ebx
  410c68:	jl     0x410cb3
  410c6a:	lods   eax,DWORD PTR ds:[esi]
  410c6b:	int3   
  410c6c:	ret    0x83a5
  410c6f:	inc    ebp
  410c70:	addr16 subps xmm4,xmm0
  410c74:	adc    cl,ah
  410c76:	xor    al,0x27
  410c78:	xchg   esp,eax
  410c79:	mov    edi,0x4765010e
  410c7e:	pop    ds
  410c7f:	mov    ds:0x7935602f,al
  410c84:	mov    edx,0xc91c9252
  410c89:	or     BYTE PTR [edi],ah
  410c8b:	pop    es
  410c8c:	in     al,dx
  410c8d:	sar    DWORD PTR [ebx],1
  410c8f:	ja     0x410cb9
  410c91:	and    BYTE PTR [esi-0x44],al
  410c94:	add    al,0x9a
  410c96:	pop    edi
  410c97:	test   BYTE PTR [eax-0x5ce85e18],dh
  410c9d:	cmc    
  410c9e:	lock jle 0x410cdc
  410ca1:	bound  eax,QWORD PTR [edi+eax*1-0x73]
  410ca5:	jbe    0x410c9d
  410ca7:	inc    ecx
  410ca8:	xchg   esi,eax
  410ca9:	xor    WORD PTR [ebp-0x54cc76b5],di
  410cb0:	jo     0x410cd4
  410cb2:	inc    edi
  410cb3:	sub    bh,BYTE PTR [ebp+0xd]
  410cb6:	push   esp
  410cb7:	cmp    DWORD PTR [edi],0x99b7c0cf
  410cbd:	inc    esi
  410cbe:	push   esp
  410cbf:	jne    0x410d04
  410cc1:	sbb    al,0x1a
  410cc3:	mov    ds:0xf9bd5cac,eax
  410cc8:	test   BYTE PTR [esi],bl
  410cca:	sar    DWORD PTR [ecx+0x39],0x71
  410cce:	ins    DWORD PTR es:[edi],dx
  410ccf:	inc    edx
  410cd0:	out    0x1b,eax
  410cd2:	mov    ch,0x9c
  410cd4:	call   0xd2882408
  410cd9:	repz and al,0x69
  410cdc:	aaa    
  410cdd:	dec    esi
  410cde:	iret   
  410cdf:	or     bl,BYTE PTR [edi-0x39ea2230]
  410ce5:	jmp    0xc62672df
  410cea:	retf   0xfa5e
  410ced:	(bad)  
  410cee:	cld    
  410cef:	mov    ebx,DWORD PTR [ebx-0x66]
  410cf2:	push   esp
  410cf3:	dec    esp
  410cf4:	push   ebx
  410cf5:	jae    0x410d33
  410cf7:	call   0x4a83a7ff
  410cfc:	xchg   esi,eax
  410cfd:	jmp    0x410d55
  410cff:	or     DWORD PTR ds:[esi+0x59],ebp
  410d03:	jge    0x410d54
  410d05:	xchg   edi,eax
  410d06:	pop    es
  410d07:	push   esp
  410d08:	push   ebp
  410d09:	call   0x1ffc:0x144d9210
  410d10:	enter  0xd686,0xab
  410d14:	daa    
  410d15:	cmp    ah,al
  410d17:	sbb    eax,0x86721efd
  410d1d:	xlat   BYTE PTR ds:[ebx]
  410d1e:	add    al,0x28
  410d20:	sbb    eax,0xe898a2b1
  410d25:	xlat   BYTE PTR ds:[ebx]
  410d26:	adc    DWORD PTR [ecx+0x3094775d],0x1
  410d2d:	mov    ebx,0xd89677ff
  410d32:	fadd   QWORD PTR [esi]
  410d34:	add    BYTE PTR [edx],cl
  410d36:	aam    0x8e
  410d38:	stos   BYTE PTR es:[edi],al
  410d39:	in     eax,dx
  410d3a:	and    eax,0x4b6a8e5e
  410d3f:	pop    eax
  410d40:	sti    
  410d41:	aam    0xc5
  410d43:	add    eax,0xed124403
  410d48:	into   
  410d49:	cld    
  410d4a:	push   es
  410d4b:	arpl   WORD PTR [ebp+0x40],ax
  410d4e:	adc    eax,0xec8d987
  410d53:	dec    edi
  410d54:	mov    ds:0x65832d18,eax
  410d59:	ins    DWORD PTR es:[edi],dx
  410d5a:	mov    edx,0x72b8abdc
  410d5f:	(bad)  
  410d61:	popa   
  410d62:	popa   
  410d63:	jns    0x410d0e
  410d65:	mov    dh,0x30
  410d67:	fistp  WORD PTR [edx-0x6842e5e6]
  410d6d:	cld    
  410d6e:	jmp    0x5042ed4b
  410d73:	or     al,0xf9
  410d75:	inc    esp
  410d76:	icebp  
  410d77:	or     BYTE PTR [esi],0x22
  410d7a:	cmp    ch,BYTE PTR [edi-0xa1893bc]
  410d80:	(bad)  
  410d81:	cmc    
  410d82:	fwait
  410d83:	push   0x68
  410d85:	adc    BYTE PTR [ecx-0x5b],bh
  410d88:	xor    al,0x24
  410d8a:	or     eax,0xd1bf3875
  410d8f:	imul   edi,DWORD PTR ds:0x3b783c00,0xb14f7e71
  410d99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d9a:	out    0xe4,eax
  410d9c:	test   BYTE PTR [ebx],ah
  410d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d9f:	fs fwait
  410da1:	mov    esi,ebx
  410da3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410da4:	add    eax,0x81195e86
  410da9:	dec    edi
  410daa:	out    0xee,al
  410dac:	push   edx
  410dad:	cld    
  410dae:	(bad)  
  410daf:	repz mov bl,0xa8
  410db2:	or     ebx,DWORD PTR [ebx+0xc]
  410db5:	scas   al,BYTE PTR es:[edi]
  410db6:	data16 jg 0x410db6
  410db9:	and    bx,WORD PTR [ebx]
  410dbc:	stos   BYTE PTR es:[edi],al
  410dbd:	mov    edi,0xac7ff29
  410dc2:	jge    0x410dd6
  410dc4:	jge    0x410d69
  410dc6:	dec    esp
  410dc7:	and    ah,BYTE PTR [ebp+ebp*8-0x6]
  410dcb:	push   esi
  410dcc:	adc    dl,BYTE PTR [ebx-0x66]
  410dcf:	hlt    
  410dd0:	or     esi,0xabeab848
  410dd6:	xchg   esp,eax
  410dd7:	xor    esi,esp
  410dd9:	dec    ebp
  410dda:	jae    0x410e21
  410ddc:	add    al,0xa8
  410dde:	sbb    esi,DWORD PTR [esi+0x3e]
  410de1:	jle    0x410d63
  410de3:	sbb    eax,0x1e79be8b
  410de8:	cs test eax,0xff0d4ca5
  410dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410def:	inc    ecx
  410df0:	pusha  
  410df1:	jb     0x410da1
  410df3:	dec    ebp
  410df4:	sti    
  410df5:	xchg   ebp,eax
  410df6:	cmp    eax,0xc77beb6f
  410dfb:	sub    DWORD PTR [ecx-0x1b65635],ebp
  410e01:	and    DWORD PTR [edx-0x572ea150],0x29
  410e08:	inc    eax
  410e09:	stc    
  410e0a:	(bad)  
  410e0b:	cmp    BYTE PTR [esi+ecx*8],ch
  410e0e:	cmp    BYTE PTR [eax],dl
  410e10:	push   ecx
  410e11:	ins    BYTE PTR es:[edi],dx
  410e12:	cmp    BYTE PTR [esi+ebx*1+0x3b],al
  410e16:	inc    esp
  410e17:	mov    al,0x3f
  410e19:	cdq    
  410e1a:	inc    eax
  410e1b:	jns    0x410dae
  410e1d:	scas   al,BYTE PTR es:[edi]
  410e1e:	sti    
  410e1f:	dec    ebx
  410e20:	adc    DWORD PTR [ecx+esi*4-0x40],0x20b9ac38
  410e28:	inc    ebp
  410e29:	int3   
  410e2a:	jmp    0x4f6d:0xdb65a227
  410e31:	xor    bh,BYTE PTR [edx+0x4ce71f25]
  410e37:	xor    al,0x7a
  410e39:	mov    esi,0x9e0295af
  410e3e:	jne    0x410eb8
  410e40:	rol    BYTE PTR [edx-0x50],0xfd
  410e44:	or     cl,dh
  410e46:	aam    0xf
  410e48:	pop    ebx
  410e49:	xchg   edi,eax
  410e4a:	xlat   BYTE PTR ds:[ebx]
  410e4b:	fcomp  QWORD PTR [esi]
  410e4d:	jg     0x410e14
  410e4f:	sbb    al,0xf1
  410e51:	inc    ebp
  410e52:	lea    edx,[ebx-0x5877c63a]
  410e58:	fucom  st(5)
  410e5a:	int3   
  410e5b:	cld    
  410e5c:	arpl   WORD PTR [ebx+0x1d],bp
  410e5f:	test   eax,0x91a0b909
  410e64:	ret    
  410e65:	and    BYTE PTR [esi+0xea38bb5],al
  410e6b:	pop    ss
  410e6c:	das    
  410e6d:	mov    eax,ds:0xa8910f6a
  410e72:	into   
  410e73:	mov    al,0x8
  410e75:	stos   BYTE PTR es:[edi],al
  410e76:	es daa 
  410e78:	push   esi
  410e79:	call   0xa2f9:0x67a5d298
  410e80:	std    
  410e81:	in     al,dx
  410e82:	pop    edi
  410e83:	pop    ebp
  410e84:	jns    0x410ea0
  410e86:	push   ecx
  410e87:	les    eax,FWORD PTR [edi+edx*4-0x766ed81e]
  410e8e:	mov    eax,ecx
  410e90:	and    esp,DWORD PTR ds:0xc2b20dd0
  410e96:	sbb    edx,ebx
  410e98:	adc    DWORD PTR [eax+0x70],ebx
  410e9b:	das    
  410e9c:	in     al,dx
  410e9d:	or     eax,0x4e121b5e
  410ea2:	and    DWORD PTR ds:0xec655eae,edx
  410ea8:	or     ecx,DWORD PTR [esi+0x58708502]
  410eae:	cmp    eax,DWORD PTR [edx]
  410eb0:	dec    ebx
  410eb1:	xchg   ebp,eax
  410eb2:	adc    ah,BYTE PTR [eax]
  410eb4:	mov    dh,0x9b
  410eb6:	mov    bl,0x22
  410eb8:	fmul   QWORD PTR [ebp+0x10]
  410ebb:	pushf  
  410ebc:	sbb    al,0xb7
  410ebe:	(bad)  
  410ebf:	lods   eax,DWORD PTR ds:[esi]
  410ec0:	sbb    DWORD PTR [edx-0x4d2d9ce1],esi
  410ec6:	push   es
  410ec7:	ss (bad) 
  410eca:	test   eax,0x41c14e98
  410ecf:	shr    BYTE PTR [eax+0xb686668],0xc2
  410ed6:	mov    edi,0x78f4c283
  410edb:	out    dx,eax
  410edc:	xchg   esp,eax
  410edd:	fimul  WORD PTR [edi-0x5f]
  410ee0:	sbb    al,0x5
  410ee2:	xchg   edx,eax
  410ee3:	push   ds
  410ee4:	shr    BYTE PTR [ebx+0x13359a6c],0x7
  410eeb:	stos   BYTE PTR es:[edi],al
  410eec:	fsub   QWORD PTR [eax-0x4f]
  410eef:	pop    ebx
  410ef0:	ja     0x410e98
  410ef2:	or     BYTE PTR [eax+edi*8+0x5d],dl
  410ef6:	pop    esi
  410ef7:	(bad)  
  410ef8:	sti    
  410ef9:	or     al,ch
  410efb:	mov    ebx,0x7ebad978
  410f00:	xchg   ebp,eax
  410f01:	int3   
  410f02:	cmp    bl,BYTE PTR [edi]
  410f04:	div    BYTE PTR [esp+edx*4-0x65]
  410f08:	mov    esp,0xbca1ddfe
  410f0d:	in     eax,dx
  410f0e:	daa    
  410f0f:	ins    DWORD PTR es:[edi],dx
  410f10:	push   0x1
  410f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f13:	cs jmp 0x4a6d:0xa35a2052
  410f1b:	ret    0x7761
  410f1e:	jo     0x410ef2
  410f20:	xchg   ebx,eax
  410f21:	js     0x410efe
  410f23:	add    edi,edi
  410f25:	add    ecx,DWORD PTR [edx+ecx*8+0x2196135]
  410f2c:	mov    dh,0x8d
  410f2e:	mov    gs,WORD PTR [ebx]
  410f30:	mov    BYTE PTR [ecx+0x4f376026],dh
  410f36:	mov    bh,0x29
  410f38:	das    
  410f39:	pop    edi
  410f3a:	or     BYTE PTR [ebx+0x42f7a3b5],dl
  410f40:	sub    ebp,esp
  410f42:	xchg   ebp,eax
  410f43:	inc    esi
  410f44:	cld    
  410f45:	lock mov eax,0x65fe3ede
  410f4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f4c:	pop    edx
  410f4d:	mov    edx,0xd049788f
  410f52:	push   0xd410c47f
  410f57:	ins    BYTE PTR es:[edi],dx
  410f58:	xchg   ecx,eax
  410f59:	xor    eax,0xe4393c08
  410f5e:	ds (bad) 
  410f60:	push   ebp
  410f61:	add    al,0xe0
  410f63:	mov    ah,0x2
  410f65:	icebp  
  410f66:	jl     0x410f3e
  410f68:	and    DWORD PTR [ebx-0x25],ebx
  410f6b:	sub    eax,0x5f6e760
  410f70:	xchg   ebp,eax
  410f71:	mov    eax,DWORD PTR [ebp+0x5f]
  410f74:	out    0xf2,eax
  410f76:	mov    esp,0x44ad34a6
  410f7b:	stos   DWORD PTR es:[edi],eax
  410f7c:	inc    edi
  410f7d:	cmp    DWORD PTR [edx],ebp
  410f7f:	xlat   BYTE PTR ds:[ebx]
  410f80:	sub    DWORD PTR [edi+0x65],eax
  410f83:	js     0x410f10
  410f85:	mov    ch,0x31
  410f87:	push   ds
  410f88:	and    bh,BYTE PTR [ebp+0x4f]
  410f8b:	push   es
  410f8c:	fbld   TBYTE PTR [ebx]
  410f8e:	cmp    al,0x77
  410f90:	or     al,0x47
  410f92:	fucomi st,st(3)
  410f94:	add    DWORD PTR [ecx+0x3ee1d8df],edx
  410f9a:	ins    BYTE PTR es:[edi],dx
  410f9b:	xor    cl,BYTE PTR [ecx+0x7cdad533]
  410fa1:	call   DWORD PTR [ebp-0x57]
  410fa4:	jmp    0x9718b74b
  410fa9:	push   esp
  410faa:	push   edi
  410fab:	ds aad 0x9f
  410fae:	xchg   ebp,eax
  410faf:	xor    al,0x3e
  410fb1:	sbb    al,0x37
  410fb3:	shr    edi,cl
  410fb5:	test   al,0xc3
  410fb7:	mov    bh,0xc0
  410fb9:	mov    eax,ds:0xac7f6842
  410fbe:	(bad)  
  410fbf:	es ds pop es
  410fc2:	add    BYTE PTR [ecx+edi*4],bh
  410fc5:	imul   ecx,DWORD PTR [edi-0x5107967],0x11
  410fcc:	int3   
  410fcd:	pop    ebp
  410fce:	mov    dl,BYTE PTR [edx]
  410fd0:	popa   
  410fd1:	rol    BYTE PTR [edi-0x72fa1504],1
  410fd7:	push   eax
  410fd8:	cmp    al,0xb9
  410fda:	xchg   edi,eax
  410fdb:	in     eax,dx
  410fdc:	mov    dh,0x59
  410fde:	inc    edi
  410fdf:	sahf   
  410fe0:	test   eax,0xd0525340
  410fe5:	mov    dl,0x11
  410fe7:	sbb    cl,cl
  410fe9:	fidivr DWORD PTR [esi+0x73]
  410fec:	jl     0x41101d
  410fee:	ss (bad) 
  410ff0:	pop    edx
  410ff1:	mov    cl,0x2c
  410ff3:	xchg   ecx,eax
  410ff4:	hlt    
  410ff5:	std    
  410ff6:	add    edx,edx
  410ff8:	fidivr DWORD PTR [edx]
  410ffa:	stos   DWORD PTR es:[edi],eax
  410ffb:	and    esi,edi
  410ffd:	xor    BYTE PTR [ecx-0x636c7a42],al
  411003:	pop    ebp
  411004:	jecxz  0x410fe1
  411006:	sbb    esi,eax
  411008:	clc    
  411009:	push   0xac8a5f33
  41100e:	add    BYTE PTR [ebp-0x2f],dh
  411011:	ficomp DWORD PTR [esi]
  411013:	fadd   QWORD PTR [ebx]
  411015:	(bad)  
  411016:	dec    esp
  411017:	and    ax,0xbb99
  41101b:	xchg   ebp,eax
  41101c:	adc    eax,0xb065348b
  411021:	into   
  411022:	mov    ds:0x6df7941d,eax
  411027:	int3   
  411028:	sar    BYTE PTR [ebp-0xf],0x43
  41102c:	mov    edx,0xb018b836
  411031:	inc    edi
  411032:	dec    edi
  411033:	and    dl,BYTE PTR [edi+0xb6fe37]
  411039:	rcr    edi,cl
  41103b:	sbb    ebx,DWORD PTR [edx-0xa]
  41103e:	adc    al,0xa3
  411040:	aas    
  411041:	push   ebx
  411042:	dec    ebx
  411043:	call   0xd99eff43
  411048:	retf   0x6a62
  41104b:	fucomp st(2)
  41104d:	imul   eax,DWORD PTR [esi],0xca86a7fb
  411053:	das    
  411054:	inc    edx
  411055:	lock jmp 0x41107c
  411058:	push   edx
  411059:	into   
  41105a:	(bad)  
  41105b:	imul   ebx,DWORD PTR [ecx-0x6],0x1d
  41105f:	mov    esi,0x27c812e6
  411064:	mov    dl,0x1f
  411066:	sbb    eax,0xf77680c4
  41106b:	sub    al,0x4
  41106d:	jg     0x411087
  41106f:	add    al,dh
  411071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411072:	in     al,0x2f
  411074:	xchg   DWORD PTR [ecx],edi
  411076:	das    
  411077:	mov    eax,0xd151543d
  41107c:	pusha  
  41107d:	and    ebp,eax
  41107f:	(bad)  
  411080:	mov    bh,0xde
  411082:	popa   
  411083:	cmp    dh,dh
  411085:	daa    
  411086:	test   DWORD PTR [ebx],0x1c6b806e
  41108c:	mov    ecx,0x99b6f8ef
  411091:	call   0xba1a:0x1c5b28cd
  411098:	adc    ebx,edx
  41109a:	mov    bl,BYTE PTR [edi]
  41109c:	inc    edx
  41109d:	and    eax,0x143b185c
  4110a2:	sahf   
  4110a3:	mov    cl,0xcf
  4110a5:	imul   ebx,esi,0x7a
  4110a8:	test   eax,0x1ca1b9b7
  4110ad:	clc    
  4110ae:	xchg   esi,eax
  4110af:	mov    ch,0x21
  4110b1:	xor    BYTE PTR [eax-0x20],ch
  4110b4:	pop    edi
  4110b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110b6:	xor    DWORD PTR [esi-0x7b50ceb5],0xffffffcf
  4110bd:	int    0xb6
  4110bf:	xchg   edx,eax
  4110c0:	dec    ecx
  4110c1:	xor    DWORD PTR [eax-0x7a045328],ecx
  4110c7:	into   
  4110c8:	and    cl,0x37
  4110cb:	inc    eax
  4110cc:	ja     0x41111a
  4110ce:	xlat   BYTE PTR ds:[ebx]
  4110cf:	ficom  DWORD PTR [esi-0x2d]
  4110d2:	test   al,0x4e
  4110d4:	sub    BYTE PTR [edx],dl
  4110d6:	pop    eax
  4110d7:	mov    esp,0x232192a1
  4110dc:	xor    edi,DWORD PTR [eax-0x42]
  4110df:	mov    dh,0x7e
  4110e1:	sub    edi,eax
  4110e3:	aaa    
  4110e4:	cmp    DWORD PTR [edi-0x10],eax
  4110e7:	cmp    dl,0xe8
  4110ea:	inc    esi
  4110eb:	push   0xffffffe7
  4110ed:	enter  0xc599,0xef
  4110f1:	sbb    eax,0x3fb43dae
  4110f6:	sub    dh,BYTE PTR [esi]
  4110f8:	imul   edi,DWORD PTR ds:0xbd1748f9,0x6363aedd
  411102:	mov    ah,0xb6
  411104:	and    ebx,ebp
  411106:	cs scas eax,DWORD PTR es:[edi]
  411108:	gs hlt 
  41110a:	cmp    al,0x89
  41110c:	jp     0x41117e
  41110e:	ss in  eax,0xcb
  411111:	fldcw  WORD PTR [eax-0x992e01e]
  411117:	outs   dx,BYTE PTR ds:[esi]
  411118:	and    al,0xa8
  41111a:	jmp    0x8dd1:0xf02a3948
  411121:	nop
  411122:	pmulhuw mm5,QWORD PTR [esi]
  411125:	inc    esi
  411126:	daa    
  411127:	je     0x411179
  411129:	push   ebx
  41112a:	ror    BYTE PTR [edi+0x6f2236ad],1
  411130:	and    dl,BYTE PTR [ecx-0x41ce3036]
  411136:	retf   
  411137:	inc    ebp
  411138:	mov    dl,0x32
  41113a:	inc    eax
  41113b:	jl     0x411125
  41113d:	adc    eax,0x9fc79eae
  411142:	or     DWORD PTR [edi+eax*1-0x7219e81f],ecx
  411149:	inc    edi
  41114a:	mov    bl,0x2c
  41114c:	ins    BYTE PTR es:[edi],dx
  41114d:	mov    ecx,0xa4f8c354
  411152:	enter  0xe7ef,0x88
  411156:	cwde   
  411157:	call   0x81ef4ff6
  41115c:	sub    dl,0x2e
  41115f:	pop    ebp
  411160:	dec    edi
  411161:	(bad)  
  411162:	cmc    
  411163:	scas   eax,DWORD PTR es:[edi]
  411164:	fmulp  st(0),st
  411166:	aas    
  411167:	in     eax,0xde
  411169:	dec    eax
  41116a:	(bad)  
  41116b:	push   cs
  41116c:	sbb    eax,0x9dfdee81
  411171:	js     0x4111b6
  411173:	sbb    DWORD PTR [edi-0x6f355d2d],ebp
  411179:	clc    
  41117a:	int3   
  41117b:	and    edx,DWORD PTR ds:[edx]
  41117e:	fwait
  41117f:	cdq    
  411180:	jl     0x411111
  411182:	hlt    
  411183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411184:	(bad)  
  411185:	fnstenv [ebp-0x7210d084]
  41118b:	mov    ebp,esp
  41118d:	lods   al,BYTE PTR ds:[esi]
  41118e:	inc    edx
  41118f:	mov    eax,DWORD PTR [edi+edx*8+0x7721b25f]
  411196:	pop    edx
  411197:	js     0x41117e
  411199:	in     al,dx
  41119a:	bound  ecx,QWORD PTR [edx]
  41119c:	pop    edi
  41119d:	out    dx,eax
  41119e:	dec    ebx
  41119f:	sub    DWORD PTR [ebx],edx
  4111a1:	mov    esp,0x7f7be33c
  4111a6:	data16 cmc 
  4111a8:	(bad)  
  4111a9:	xchg   ebx,eax
  4111aa:	dec    esp
  4111ab:	out    0xed,al
  4111ad:	imul   esp,DWORD PTR [ecx-0x209ed15d],0xf1794fe3
  4111b7:	popa   
  4111b8:	pop    ebx
  4111b9:	xchg   esp,eax
  4111ba:	ins    BYTE PTR es:[edi],dx
  4111bb:	daa    
  4111bc:	pop    edi
  4111bd:	xor    eax,0x27e7d3c6
  4111c2:	cmp    DWORD PTR [edx],esp
  4111c4:	xchg   ecx,eax
  4111c5:	scas   al,BYTE PTR es:[edi]
  4111c6:	add    ah,dl
  4111c8:	sti    
  4111c9:	jmp    0x411228
  4111cb:	repnz xchg al,dl
  4111ce:	out    0x5f,eax
  4111d0:	leave  
  4111d1:	mov    edi,esp
  4111d3:	(bad)  
  4111d4:	mul    DWORD PTR [ebx]
  4111d6:	cmp    DWORD PTR [esi+0x74805f44],ebp
  4111dc:	hlt    
  4111dd:	push   eax
  4111de:	push   ebp
  4111df:	aaa    
  4111e0:	and    eax,0x28f540e7
  4111e5:	sub    BYTE PTR [esi+0x62],0x8a
  4111e9:	sti    
  4111ea:	jge    0x4111cb
  4111ec:	sub    DWORD PTR [edi+0x1246823a],eax
  4111f2:	out    dx,eax
  4111f3:	cmp    ebp,DWORD PTR [ebx-0x24]
  4111f6:	push   es
  4111f7:	ret    0x976a
  4111fa:	out    dx,al
  4111fb:	mov    bl,0x47
  4111fd:	or     BYTE PTR [edi+0x31],0x7c
  411201:	test   al,0xf
  411203:	cld    
  411204:	retf   
  411205:	adc    cl,ah
  411207:	inc    edx
  411208:	dec    DWORD PTR [edx-0x5e36e04a]
  41120e:	les    ebp,FWORD PTR [ecx-0x24]
  411211:	cwde   
  411212:	sub    eax,edi
  411214:	or     esi,DWORD PTR [ecx]
  411216:	in     al,dx
  411217:	out    0x5,eax
  411219:	jb     0x411283
  41121b:	fst    DWORD PTR [eax]
  41121d:	fwait
  41121e:	in     eax,dx
  41121f:	fcom   DWORD PTR [edi]
  411221:	and    al,0x2
  411223:	enter  0x6c49,0x4b
  411227:	jl     0x4111dc
  411229:	push   cs
  41122a:	aam    0xaf
  41122c:	jl     0x4111f2
  41122e:	(bad)  
  411230:	adc    al,0x8d
  411232:	pushf  
  411233:	and    DWORD PTR [edx-0x1e],0xfffffffc
  411237:	out    0x5c,al
  411239:	add    esi,DWORD PTR [edx+0x372fa33]
  41123f:	lds    ecx,FWORD PTR gs:[ecx+0x6c]
  411243:	xor    BYTE PTR [edx+0x20],ch
  411246:	adc    ebp,eax
  411248:	jg     0x411249
  41124a:	sbb    dh,0x28
  41124d:	repz inc edi
  41124f:	push   ecx
  411250:	(bad)
  411255:	adc    edi,DWORD PTR [esi]
  411257:	mov    dh,BYTE PTR [esi+eax*2-0x43]
  41125b:	cmc    
  41125c:	or     bl,cl
  41125e:	push   edi
  41125f:	jle    0x4112c1
  411261:	and    ah,BYTE PTR [eax-0x72]
  411264:	cmp    bl,bl
  411266:	loopne 0x4111f6
  411268:	dec    esp
  411269:	jne    0x4112d1
  41126b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41126c:	jmp    0x411288
  41126e:	fcos   
  411270:	ss pop es
  411272:	fidiv  DWORD PTR [eax-0x47]
  411275:	pop    edx
  411276:	push   ebx
  411277:	and    al,0xe4
  411279:	add    al,0x60
  41127b:	mov    dl,0x69
  41127d:	scas   eax,DWORD PTR es:[edi]
  41127e:	mov    al,0xa4
  411280:	and    al,0x66
  411282:	call   0x77d03394
  411287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411288:	cs jae 0x41120e
  41128b:	mov    bh,0x26
  41128d:	(bad)  
  41128e:	jno    0x411233
  411290:	xor    DWORD PTR [ebx+0x1d247432],ebp
  411296:	pop    ecx
  411297:	mov    ch,0x93
  411299:	dec    ebp
  41129a:	(bad)  [edx-0x75646b21]
  4112a0:	lahf   
  4112a1:	adc    dh,BYTE PTR [ebx-0x904f69a]
  4112a7:	sub    eax,0x9f0d5454
  4112ac:	call   0x1adc5fa6
  4112b1:	or     dl,BYTE PTR [edi+0x4a]
  4112b4:	bound  edi,QWORD PTR [edi+0xe]
  4112b7:	aaa    
  4112b8:	add    al,0x9b
  4112ba:	sub    DWORD PTR [ebx-0x73],0x5a
  4112be:	cwde   
  4112bf:	push   0x24
  4112c1:	repnz sti 
  4112c3:	shl    BYTE PTR [ecx],cl
  4112c5:	out    0x2d,al
  4112c7:	cmc    
  4112c8:	cmp    DWORD PTR [eax+ecx*8],edi
  4112cb:	sub    BYTE PTR [esi-0x7642253c],bh
  4112d1:	enter  0xff7d,0x85
  4112d5:	lea    ebp,[edi-0x662c319b]
  4112db:	jmp    0x4112b9
  4112dd:	mov    esi,0x951ae342
  4112e2:	dec    edx
  4112e3:	adc    eax,0xa6fbed02
  4112e8:	sbb    DWORD PTR [edi],edx
  4112ea:	pop    ebx
  4112eb:	mov    ebx,0x2e2a3127
  4112f0:	jb     0x411310
  4112f2:	loop   0x41134a
  4112f4:	jle    0x411348
  4112f6:	adc    al,0xbb
  4112f8:	test   eax,0x406abb49
  4112fd:	sti    
  4112fe:	out    dx,al
  4112ff:	lahf   
  411300:	fs mov ecx,0xee48ee4e
  411306:	lods   eax,DWORD PTR ds:[esi]
  411307:	jnp    0x411327
  411309:	enter  0x6e9e,0x8a
  41130d:	(bad)  [ecx+0x46da868a]
  411313:	xchg   BYTE PTR [edx-0x7f28faff],ch
  411319:	loope  0x411369
  41131b:	cmp    DWORD PTR [ebp+0x17],0xffffffb8
  41131f:	adc    edi,DWORD PTR [edx+0x79]
  411322:	fwait
  411323:	xchg   DWORD PTR [edi+0x11516a77],ebx
  411329:	sbb    dl,BYTE PTR [edx-0x32b2128e]
  41132f:	je     0x41130c
  411331:	sbb    al,0xb2
  411333:	push   0x60f4a4cf
  411338:	rol    DWORD PTR [ebx+0xd],0x7
  41133c:	inc    eax
  41133d:	aad    0x33
  41133f:	dec    edi
  411340:	mov    esi,0x8c28eb14
  411345:	jecxz  0x411385
  411347:	pop    edi
  411348:	mov    dl,0x49
  41134a:	cwde   
  41134b:	mov    edx,0x3c713368
  411350:	cdq    
  411351:	pop    eax
  411352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411353:	xor    edx,DWORD PTR [ecx]
  411355:	cmp    eax,0xc2cdf038
  41135a:	fdiv   st,st(4)
  41135c:	mov    esi,0x2e17fd49
  411361:	(bad)  
  411362:	ffree  st(2)
  411364:	xchg   edi,eax
  411365:	cwde   
  411366:	add    DWORD PTR [ecx],esp
  411368:	into   
  411369:	imul   ebp,ecx,0x72
  41136c:	jmp    0x4112fc
  41136e:	fld    st(3)
  411370:	sbb    esp,DWORD PTR [ecx-0x7f]
  411373:	sub    eax,0x905c5174
  411378:	push   cs
  411379:	fbstp  TBYTE PTR [ebp-0x3b]
  41137c:	sub    eax,0xd4a55fca
  411381:	lahf   
  411382:	repnz loopne 0x41130b
  411385:	les    edi,FWORD PTR ds:0x52dde556
  41138b:	mov    esi,0x20c5088d
  411390:	xchg   ebx,eax
  411391:	mov    DWORD PTR [esi+ebp*2-0x4b],eax
  411395:	or     DWORD PTR [ecx-0x7d661434],0xa03a58ee
  41139f:	mov    ?,WORD PTR [eax+ecx*2+0x1]
  4113a3:	scas   al,BYTE PTR es:[edi]
  4113a4:	loop   0x4113bc
  4113a6:	xlat   BYTE PTR ds:[ebx]
  4113a7:	sub    al,0x83
  4113a9:	loope  0x41134c
  4113ab:	dec    esp
  4113ac:	sbb    ch,BYTE PTR [eax]
  4113ae:	aas    
  4113af:	mov    ds:0xcf5b11eb,al
  4113b4:	add    eax,0xdea3ca1e
  4113b9:	or     eax,0x1de7316c
  4113be:	ss mov ebx,0x25f508f1
  4113c4:	jmp    0x8146:0x20a8d2b
  4113cb:	mov    al,ds:0xd011ce46
  4113d0:	push   esp
  4113d1:	jns    0x41138d
  4113d3:	jg     0x411406
  4113d5:	dec    edi
  4113d6:	call   0x8b3b:0x6a9acb96
  4113dd:	mov    BYTE PTR [ecx],al
  4113df:	jle    0x411408
  4113e1:	xor    al,0x92
  4113e3:	sub    DWORD PTR [ecx+0x1847e754],esp
  4113e9:	jb     0x41137f
  4113eb:	pop    ebx
  4113ec:	mov    esp,0xb06db74b
  4113f1:	shl    BYTE PTR [esi+0xd],0xab
  4113f5:	loope  0x41140f
  4113f7:	xor    ah,bh
  4113f9:	pop    eax
  4113fa:	add    BYTE PTR [ebp-0x7],0x59
  4113fe:	xchg   edx,eax
  4113ff:	or     BYTE PTR [ebp+0x24d96585],bh
  411405:	inc    ebx
  411406:	jmp    0x3fe85fff
  41140b:	lahf   
  41140c:	jne    0x411466
  41140e:	xchg   edi,eax
  41140f:	aam    0x8f
  411411:	frstor [ebp+edi*1-0x4c22aaed]
  411418:	adc    DWORD PTR [ebx],0xffffffbe
  41141b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41141c:	xor    BYTE PTR [eax+0x663fcd6a],0xed
  411423:	mov    ebp,DWORD PTR [esi-0x66]
  411426:	inc    esi
  411427:	jmp    0xe4b9:0x8392c9bf
  41142e:	mov    bl,0xa8
  411430:	inc    eax
  411431:	pop    ds
  411432:	into   
  411433:	jmp    0x41148d
  411435:	shl    DWORD PTR [ecx+ebx*2+0x3b],1
  411439:	repnz or ah,BYTE PTR [edx-0x69]
  41143d:	xchg   ebp,eax
  41143e:	add    BYTE PTR [edi],bh
  411440:	ja     0x4114b8
  411442:	js     0x4114b3
  411444:	pop    edi
  411445:	sub    eax,DWORD PTR [ecx+0x1e]
  411448:	gs ret 
  41144a:	fisttp DWORD PTR [esi-0x5000d930]
  411450:	jmp    0xf198:0xcb364443
  411457:	cmp    al,0x2d
  411459:	push   ss
  41145a:	jmp    0x4113fb
  41145c:	in     eax,dx
  41145d:	test   eax,0x6b81ccb5
  411462:	clc    
  411463:	ins    BYTE PTR es:[edi],dx
  411464:	push   es
  411465:	jle    0x4114e0
  411467:	jge    0x4114ad
  411469:	jo     0x4114b6
  41146b:	int3   
  41146c:	lods   al,BYTE PTR ds:[esi]
  41146d:	xor    eax,ebx
  41146f:	clc    
  411470:	jmp    0x4ace793e
  411475:	add    eax,0x51a369da
  41147a:	mov    al,0xe8
  41147c:	js     0x411477
  41147e:	scas   al,BYTE PTR es:[edi]
  41147f:	psrlq  mm7,mm5
  411482:	add    eax,0x2e9619b1
  411487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411488:	data16 jbe 0x4114fb
  41148b:	mov    ds:0xa4bbcbc5,al
  411490:	test   al,0x86
  411492:	push   0xb
  411494:	inc    ecx
  411495:	int3   
  411496:	dec    eax
  411497:	std    
  411498:	adc    ecx,DWORD PTR [edx+0x56]
  41149b:	mov    ebx,0x2a160ce8
  4114a0:	std    
  4114a1:	popf   
  4114a2:	out    dx,eax
  4114a3:	sar    BYTE PTR [esp+eiz*8-0x74],cl
  4114a7:	mov    eax,ds:0xe90a1c7c
  4114ac:	sub    al,0xea
  4114ae:	or     edx,DWORD PTR [ecx-0x75]
  4114b1:	fisttp WORD PTR [eax]
  4114b3:	rcr    BYTE PTR [ebx],cl
  4114b5:	sub    eax,0x57163033
  4114ba:	cli    
  4114bb:	pop    ebx
  4114bc:	and    DWORD PTR [eax],edi
  4114be:	xor    esp,DWORD PTR [edi-0x4]
  4114c1:	xchg   esp,eax
  4114c2:	cli    
  4114c3:	dec    edx
  4114c4:	fsubr  st(1),st
  4114c6:	(bad)  
  4114c7:	xchg   edx,eax
  4114c8:	push   ebp
  4114c9:	dec    edx
  4114ca:	or     DWORD PTR [ebp-0x2e0033da],ecx
  4114d0:	test   BYTE PTR [ecx+0x1a8b0505],0x8c
  4114d7:	dec    esp
  4114d8:	sub    eax,0x8a346e7
  4114dd:	cdq    
  4114de:	jg     0x4114b7
  4114e0:	mov    edx,0xc3625496
  4114e5:	lock lds edx,FWORD PTR [ebx-0x58]
  4114e9:	in     eax,dx
  4114ea:	lods   al,BYTE PTR ds:[esi]
  4114eb:	cmp    dl,ch
  4114ed:	les    ecx,FWORD PTR [ebx+0x2cc6ee81]
  4114f3:	mov    ss,WORD PTR [ecx+0x28c7f05a]
  4114f9:	out    0x2d,al
  4114fb:	cmp    eax,0x865f81f0
  411500:	inc    esp
  411501:	push   0x29
  411503:	push   eax
  411504:	ss xchg bl,bh
  411507:	sar    BYTE PTR [edi-0x5c],1
  41150a:	test   eax,0x7797b6ca
  41150f:	fbld   TBYTE PTR [esi]
  411511:	and    al,BYTE PTR [eax]
  411513:	adc    ecx,ecx
  411515:	jno    0x4114d1
  411517:	cld    
  411518:	fwait
  411519:	(bad)  
  41151a:	ja     0x41152a
  41151c:	(bad)  
  41151d:	xchg   ebp,eax
  41151e:	popa   
  41151f:	ret    
  411520:	dec    esp
  411521:	in     eax,0x39
  411523:	mov    cl,0x49
  411525:	mov    ds:0xc8bc85b6,al
  41152a:	daa    
  41152b:	mov    DWORD PTR [eax-0x6c],esi
  41152e:	aam    0x99
  411530:	imul   edi,DWORD PTR [esi],0xe0183e45
  411536:	xor    BYTE PTR [eax],al
  411538:	gs jae 0x411533
  41153b:	test   al,0x99
  41153d:	mov    eax,ds:0x8df4c759
  411542:	cmp    esi,eax
  411544:	push   esp
  411545:	pop    edx
  411546:	arpl   ax,dx
  411548:	sbb    DWORD PTR [edi],ebp
  41154a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41154b:	aaa    
  41154c:	pop    es
  41154d:	pop    ebp
  41154e:	enter  0xe571,0xb5
  411552:	cmp    DWORD PTR [ecx+edi*8-0x7363926e],eax
  411559:	cmp    al,0xcd
  41155b:	das    
  41155c:	ds rol esp,cl
  41155f:	pop    edi
  411560:	sbb    ebp,DWORD PTR [ecx+0x34]
  411563:	sbb    DWORD PTR [ebp-0x5fa527cb],ebx
  411569:	bnd jle 0x4115b0
  41156c:	sub    BYTE PTR [ecx],cl
  41156e:	in     eax,0x7
  411570:	scas   eax,DWORD PTR es:[edi]
  411571:	adc    ah,dl
  411573:	or     al,dh
  411575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411576:	dec    ecx
  411577:	and    DWORD PTR [edx],eax
  411579:	mov    ebp,DWORD PTR [esi+ebx*4]
  41157c:	push   esi
  41157d:	pusha  
  41157e:	mov    esi,0x6f226ed8
  411583:	and    eax,0xfca4104a
  411588:	iret   
  411589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41158a:	adc    bh,BYTE PTR [ecx-0x4675a6a]
  411590:	xchg   ebx,eax
  411591:	adc    DWORD PTR [edi+0x77],ebx
  411594:	cwde   
  411595:	dec    ebx
  411596:	lock in al,dx
  411598:	push   cs
  411599:	rcr    BYTE PTR [ecx+0x57856607],1
  41159f:	add    eax,0x72fa7bda
  4115a4:	inc    esi
  4115a5:	mov    esi,0x3ce6c311
  4115aa:	mov    al,BYTE PTR [edx-0x535d729d]
  4115b0:	scas   eax,DWORD PTR es:[edi]
  4115b1:	imul   eax,DWORD PTR [ebp-0x1ee836e7],0x7f
  4115b8:	ins    DWORD PTR es:[edi],dx
  4115b9:	(bad)  
  4115bb:	icebp  
  4115bc:	mov    ch,BYTE PTR [eax+esi*1]
  4115bf:	adc    edi,eax
  4115c1:	jecxz  0x41163c
  4115c3:	adc    DWORD PTR [ecx],0x66
  4115c6:	jbe    0x411568
  4115c8:	mov    esp,0x65864bd
  4115cd:	inc    ecx
  4115ce:	call   0xe3a2:0x1897f347
  4115d5:	int3   
  4115d6:	cmc    
  4115d7:	sub    ah,dl
  4115d9:	fcomp  QWORD PTR [ebx]
  4115db:	inc    esi
  4115dc:	xchg   edx,eax
  4115dd:	sub    BYTE PTR [eax],bl
  4115df:	jmp    FWORD PTR [ecx]
  4115e1:	sbb    ebp,DWORD PTR [di]
  4115e4:	idiv   DWORD PTR [eax]
  4115e6:	mov    esp,esp
  4115e8:	pop    ecx
  4115e9:	clc    
  4115ea:	ret    0x9c31
  4115ed:	mov    bl,0xd7
  4115ef:	sbb    cl,BYTE PTR [ecx+0x4be564e6]
  4115f5:	sbb    esp,DWORD PTR [ecx-0x59]
  4115f8:	int3   
  4115f9:	stos   BYTE PTR es:[edi],al
  4115fa:	mov    bh,0x2b
  4115fc:	or     al,0x53
  4115fe:	icebp  
  4115ff:	mov    BYTE PTR [esi],dh
  411601:	add    eax,0x4c8e31cd
  411606:	jg     0x41158f
  411608:	(bad)  
  41160a:	fld    DWORD PTR [ebx]
  41160c:	push   ecx
  41160d:	ret    0xd308
  411610:	or     cl,bl
  411612:	mov    edi,0x66d7dea6
  411617:	cmp    ecx,DWORD PTR [edx-0x64746ccb]
  41161d:	jge    0x411674
  41161f:	mov    ecx,0x2cfc9e71
  411624:	pop    ecx
  411625:	repnz in eax,0xd2
  411628:	cld    
  411629:	lods   eax,DWORD PTR ds:[esi]
  41162a:	(bad)  
  41162b:	(bad)
  41162e:	xor    DWORD PTR [edx],edx
  411630:	aam    0xdf
  411632:	and    al,0x69
  411634:	cmp    eax,0x9a40be5e
  411639:	add    cl,bh
  41163b:	arpl   bp,bp
  41163d:	add    eax,ebp
  41163f:	fisttp QWORD PTR [eax+0x11e82db6]
  411645:	std    
  411646:	adc    bh,dh
  411648:	fidiv  WORD PTR [ebx+eax*1+0x5]
  41164c:	sbb    al,0xec
  41164e:	pop    es
  41164f:	mov    bh,0xca
  411651:	test   DWORD PTR [eax*1+0x41b305d2],ebp
  411658:	xor    eax,0xd2da7b77
  41165d:	xchg   edi,eax
  41165e:	or     eax,0x571dea9f
  411663:	push   ds
  411664:	xor    eax,0x22d6f43d
  411669:	xor    eax,0x2ffaf18
  41166e:	(bad)  
  41166f:	adc    BYTE PTR [eax-0x5fd938b5],bh
  411675:	add    DWORD PTR [eax-0x3b30a199],eax
  41167b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41167c:	xor    eax,DWORD PTR [edi+0x5baa3069]
  411682:	retf   
  411683:	mov    ebx,0xcc0b9c64
  411688:	call   0x254af684
  41168d:	pop    ebp
  41168e:	js     0x41162e
  411690:	jb     0x4116f5
  411692:	cmp    BYTE PTR [ecx-0x47a64065],ah
  411698:	add    dl,BYTE PTR [esi]
  41169a:	shr    DWORD PTR [edi-0x6081d4b2],1
  4116a0:	dec    esp
  4116a1:	jle    0x41167a
  4116a3:	cwde   
  4116a4:	push   ebx
  4116a5:	pop    ecx
  4116a6:	frstor [ebp+0x613de160]
  4116ac:	cmc    
  4116ad:	out    0xc8,al
  4116af:	inc    esi
  4116b0:	xchg   edx,eax
  4116b1:	fcom   DWORD PTR [esi+esi*8]
  4116b4:	lods   eax,DWORD PTR ds:[esi]
  4116b5:	pop    ebp
  4116b6:	push   ds
  4116b7:	clc    
  4116b8:	pop    edx
  4116b9:	repnz test eax,0xb66098b7
  4116bf:	adc    al,0xd1
  4116c1:	loopne 0x41172a
  4116c3:	repz cli 
  4116c5:	aad    0x6a
  4116c7:	jb     0x4116a4
  4116c9:	pop    esi
  4116ca:	rcl    esp,1
  4116cc:	pop    eax
  4116cd:	mov    dl,0xe1
  4116cf:	mov    al,ds:0x58a1723
  4116d4:	fstp   QWORD PTR [edi+0xb]
  4116d7:	stc    
  4116d8:	mov    ebx,DWORD PTR [eax+0x741f5f01]
  4116de:	pop    eax
  4116df:	cld    
  4116e0:	mov    edi,0xe8c99fde
  4116e5:	sbb    edi,DWORD PTR [edx]
  4116e7:	cld    
  4116e8:	add    eax,0xd6d48268
  4116ed:	sub    al,0x8e
  4116ef:	pop    eax
  4116f0:	push   ebp
  4116f1:	or     bl,bh
  4116f3:	dec    edx
  4116f4:	cld    
  4116f5:	add    bh,BYTE PTR [esi+edi*2+0x211434c5]
  4116fc:	out    dx,al
  4116fd:	sahf   
  4116fe:	aaa    
  4116ff:	or     eax,0x4409e392
  411704:	jbe    0x41174a
  411706:	dec    edi
  411707:	aaa    
  411708:	mov    ch,BYTE PTR [edi-0x340a0a0f]
  41170e:	xchg   esp,eax
  41170f:	test   al,0xe
  411711:	test   DWORD PTR [esi],ebp
  411713:	jp     0x41169a
  411715:	mov    al,0x65
  411717:	or     cl,ah
  411719:	jnp    0x41176c
  41171b:	sbb    eax,0x5d475819
  411720:	dec    edi
  411721:	jmp    0x4530:0x767900ad
  411728:	jo     0x411706
  41172a:	dec    esi
  41172b:	and    BYTE PTR ds:0x683c5e08,ah
  411731:	sbb    dh,bl
  411733:	sti    
  411734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411735:	loope  0x411701
  411737:	dec    edi
  411738:	and    eax,0x6c6ec891
  41173d:	fs ds or cl,dh
  411741:	sub    ch,cl
  411743:	xchg   DWORD PTR [edx+0xb],eax
  411746:	mov    esi,0xf8b97711
  41174b:	mov    dl,0x46
  41174d:	sbb    DWORD PTR [ebx-0x7cb0b060],0x26b93e46
  411757:	adc    BYTE PTR [ebx+0x69f558af],0x94
  41175e:	in     al,0xc7
  411760:	(bad)  
  411762:	inc    eax
  411763:	and    eax,0x75c1db71
  411768:	mov    edi,0xfdde2ec
  41176d:	xor    al,0xe8
  41176f:	mov    al,fs:0x4682207c
  411775:	dec    esi
  411776:	or     al,0x25
  411778:	mov    ah,0xf3
  41177a:	dec    ebp
  41177b:	dec    edi
  41177c:	cwde   
  41177d:	inc    ecx
  41177e:	arpl   WORD PTR [esi-0x46e393f8],bp
  411784:	icebp  
  411785:	outs   dx,DWORD PTR ds:[esi]
  411786:	xor    al,0x5d
  411788:	in     al,0x65
  41178a:	or     BYTE PTR [edi],ah
  41178c:	sub    BYTE PTR [esi],dh
  41178e:	lahf   
  41178f:	das    
  411790:	dec    edx
  411791:	pushf  
  411792:	and    dl,BYTE PTR [ebx+0x5c0b55f8]
  411798:	pop    ebx
  411799:	push   es
  41179a:	mov    BYTE PTR [eax+edi*4],dh
  41179d:	mov    ah,0xb
  41179f:	push   esi
  4117a0:	jg     0x4117c1
  4117a2:	loope  0x41175c
  4117a4:	ror    BYTE PTR [eax],1
  4117a6:	push   esp
  4117a7:	hlt    
  4117a8:	xchg   esp,eax
  4117a9:	sti    
  4117aa:	mov    cl,0x4e
  4117ac:	xor    bh,BYTE PTR [ecx-0x26]
  4117af:	dec    ecx
  4117b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117b1:	cdq    
  4117b2:	fild   QWORD PTR ds:0x9c81eede
  4117b8:	inc    ebp
  4117b9:	fisttp DWORD PTR [esi+0x29a908cb]
  4117bf:	jg     0x4117dc
  4117c1:	lahf   
  4117c2:	repz bound ecx,QWORD PTR [ebx-0x77527ea0]
  4117c9:	out    dx,eax
  4117ca:	jb     0x411764
  4117cc:	adc    edx,esi
  4117ce:	xlat   BYTE PTR ds:[ebx]
  4117cf:	rcl    BYTE PTR [esi-0x33],cl
  4117d2:	push   edx
  4117d3:	mov    ecx,DWORD PTR [ecx+0x7d]
  4117d6:	lds    edi,FWORD PTR [ebp+0x0]
  4117d9:	pop    ds
  4117da:	fs xchg ch,al
  4117dd:	ins    DWORD PTR es:[edi],dx
  4117de:	push   0x9935bbe7
  4117e3:	xchg   BYTE PTR [edx],dl
  4117e5:	cmp    eax,edi
  4117e7:	stos   DWORD PTR es:[edi],eax
  4117e8:	out    dx,al
  4117e9:	jecxz  0x41178b
  4117eb:	sub    BYTE PTR [ebx+0xe],bh
  4117ee:	sub    ecx,esi
  4117f0:	xor    ecx,eax
  4117f2:	mov    DWORD PTR [ebp+0x8],ecx
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	push   0xe8ee5543
  411871:	nop
  411872:	jl     0x4118f0
  411874:	pop    es
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	lea    eax,[esi-0x23]
  41187b:	cli    
  41187c:	dec    edx
  41187d:	das    
  41187e:	adc    al,0x7a
  411880:	xchg   al,cl
  411882:	outs   dx,DWORD PTR ds:[esi]
  411883:	aad    0x3f
  411885:	mov    ds:0x50af3192,al
  41188a:	aam    0x1b
  41188c:	add    BYTE PTR [eax-0x2327f7bf],bl
  411892:	and    DWORD PTR [ebx],eax
  411894:	rcl    DWORD PTR [esi-0x4831a964],cl
  41189a:	aas    
  41189b:	popa   
  41189c:	or     ecx,edx
  41189e:	out    0x6e,al
  4118a0:	or     eax,0xf0317de3
  4118a5:	mov    ds:0x83e5c1bd,eax
  4118aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118ab:	mov    ebx,0xb61680d9
  4118b0:	mov    ebx,0xf4b4fa7a
  4118b5:	(bad)  
  4118b6:	test   eax,0xa4b8456e
  4118bb:	sbb    DWORD PTR [edi+0xc],ebx
  4118be:	cmp    esi,esi
  4118c0:	imul   BYTE PTR [esi+0x4c]
  4118c3:	cmp    DWORD PTR [edx],edx
  4118c5:	push   edx
  4118c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118c7:	les    ecx,FWORD PTR [ecx-0x21]
  4118ca:	shl    BYTE PTR [ebx+0x18dbba59],1
  4118d0:	or     DWORD PTR [edx+ecx*2+0x4],ebp
  4118d4:	sbb    dh,ch
  4118d6:	push   cs
  4118d7:	outs   dx,BYTE PTR ds:[esi]
  4118d9:	mov    ss,WORD PTR [ebx+eax*8+0x619d44a5]
  4118e0:	sar    BYTE PTR [edx+0xf0ead47],0xbd
  4118e7:	xchg   esp,eax
  4118e8:	sar    DWORD PTR [ebp+0x73acf71c],cl
  4118ee:	and    DWORD PTR [esi+0x4],ecx
  4118f1:	clc    
  4118f2:	cli    
  4118f3:	jecxz  0x411875
  4118f5:	xor    BYTE PTR [edx+0x49db9631],dl
  4118fb:	lahf   
  4118fc:	repz mov eax,0x496dceaf
  411902:	add    eax,0xb7c92f15
  411907:	lds    edi,FWORD PTR [ecx-0x23ee6428]
  41190d:	xor    BYTE PTR [esp+edx*2-0x7a],dh
  411911:	mov    dh,0x39
  411913:	or     eax,0xb7f111aa
  411918:	sbb    al,0xdc
  41191a:	fnstcw WORD PTR [ebp-0x113d0e90]
  411920:	sub    ch,ch
  411922:	mov    ds:0x3d6fedf,eax
  411927:	sahf   
  411928:	xor    esp,DWORD PTR [ebp+eax*4-0x4f]
  41192c:	push   0x87f8fec1
  411931:	and    DWORD PTR [ecx],esp
  411933:	add    bh,BYTE PTR [edx]
  411935:	ss sahf 
  411937:	push   eax
  411938:	pop    esi
  411939:	pusha  
  41193a:	pop    ebx
  41193b:	(bad)  
  41193c:	push   esi
  41193d:	jecxz  0x411954
  41193f:	cmp    eax,0xc0a66935
  411944:	mov    al,0x48
  411946:	push   ebx
  411947:	pop    esp
  411948:	cs jmp 0x41191b
  41194b:	jecxz  0x411999
  41194d:	pushf  
  41194e:	fld    TBYTE PTR [edx-0x30cfadcc]
  411954:	inc    esi
  411955:	xor    eax,0xfafaf16d
  41195a:	fidiv  DWORD PTR [ecx]
  41195c:	sbb    eax,0x61acef30
  411961:	adc    BYTE PTR [edi-0x18fb10e4],al
  411967:	mov    al,ds:0x22004e4c
  41196c:	call   0x62a8:0xe08b1ecb
  411973:	xchg   edi,eax
  411974:	and    al,0x30
  411976:	jb     0x41190f
  411978:	lods   eax,DWORD PTR ds:[esi]
  411979:	jno    0x411907
  41197b:	jne    0x411907
  41197d:	shl    DWORD PTR [ebp+ebp*2-0x1bb34846],0x62
  411985:	aam    0xe8
  411987:	cs int 0x48
  41198a:	sahf   
  41198b:	stc    
  41198c:	ins    DWORD PTR es:[edi],dx
  41198d:	enter  0x9c6e,0x5a
  411991:	mov    ah,0xca
  411993:	xlat   BYTE PTR ds:[ebx]
  411994:	push   ebx
  411995:	adc    BYTE PTR [eax],0x40
  411998:	push   esi
  411999:	cmp    BYTE PTR [ecx],ah
  41199b:	outs   dx,DWORD PTR ds:[esi]
  41199c:	lods   eax,DWORD PTR ds:[esi]
  41199d:	test   BYTE PTR [edx+0x768976de],0x91
  4119a4:	xchg   DWORD PTR [ebp-0x7fe5b8af],eax
  4119aa:	or     DWORD PTR [eax],eax
  4119ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119ad:	out    0xa8,eax
  4119af:	sub    eax,esp
  4119b1:	jbe    0x411971
  4119b3:	and    BYTE PTR [ebp-0x4d756b10],cl
  4119b9:	pop    es
  4119ba:	mov    dh,0x10
  4119bc:	lods   eax,DWORD PTR ds:[esi]
  4119bd:	in     al,0x1c
  4119bf:	les    edi,FWORD PTR [ebx+0x1c]
  4119c2:	inc    ecx
  4119c3:	adc    ch,BYTE PTR [ebp+0x5fefe1a2]
  4119c9:	xor    dl,BYTE PTR [ecx+eiz*2-0x2bc90664]
  4119d0:	add    BYTE PTR [eax+0x2bc53239],cl
  4119d6:	outs   dx,BYTE PTR ds:[esi]
  4119d7:	ja     0x411a54
  4119d9:	js     0x4119f2
  4119db:	jmp    FWORD PTR [ebp+ebx*2+0x18e84ffe]
  4119e2:	sub    ch,BYTE PTR [ebp+0x46]
  4119e5:	(bad)  
  4119e6:	dec    ebp
  4119e7:	or     DWORD PTR [edx+0x64dfa05b],ebp
  4119ed:	mov    bl,0x44
  4119ef:	mov    esp,0x38ee834b
  4119f4:	mov    ecx,0x411751cc
  4119f9:	imul   ebx,DWORD PTR [ebp+0x5a8edef],0xfffffffd
  411a00:	clc    
  411a01:	jne    0x411a37
  411a03:	mov    BYTE PTR [ebx-0x12],dh
  411a06:	xchg   edx,eax
  411a07:	outs   dx,DWORD PTR ds:[esi]
  411a08:	stos   DWORD PTR es:[edi],eax
  411a09:	aas    
  411a0a:	cli    
  411a0b:	enter  0x92d5,0x65
  411a0f:	lds    edx,FWORD PTR [edx+0x75]
  411a12:	or     DWORD PTR [edx],0xffffff9e
  411a15:	stc    
  411a16:	scas   eax,DWORD PTR es:[edi]
  411a17:	stos   BYTE PTR es:[edi],al
  411a18:	sbb    eax,0x75b206a8
  411a1d:	outs   dx,BYTE PTR ds:[esi]
  411a1e:	jnp    0x411a84
  411a20:	or     DWORD PTR [ebx],0xffffffad
  411a23:	call   0x2d7a9d9d
  411a28:	je     0x411a50
  411a2a:	jg     0x411a4f
  411a2c:	ins    BYTE PTR es:[edi],dx
  411a2d:	in     al,dx
  411a2e:	sbb    eax,0x8c319938
  411a33:	(bad)  
  411a35:	call   0xf92b:0xfa3cb3a3
  411a3c:	test   al,0x1f
  411a3e:	jno    0x411a9b
  411a40:	dec    esp
  411a41:	inc    edi
  411a42:	fsubrp st(4),st
  411a44:	or     DWORD PTR [esi+ebx*2],edi
  411a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a48:	mov    ds:0x17ecda8f,al
  411a4d:	ret    
  411a4e:	mov    bh,0x73
  411a50:	ss loope 0x411aa7
  411a53:	xlat   BYTE PTR ds:[ebx]
  411a54:	hlt    
  411a55:	sar    BYTE PTR [ebx+0x49],cl
  411a58:	into   
  411a59:	xor    eax,0x20506feb
  411a5e:	or     ah,BYTE PTR [edx]
  411a60:	or     BYTE PTR [edi-0x12],0x57
  411a64:	not    cl
  411a66:	or     dh,BYTE PTR [eax-0x47]
  411a69:	aas    
  411a6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a6b:	xlat   BYTE PTR ds:[ebx]
  411a6c:	jne    0x411a7f
  411a6e:	ffree  st(1)
  411a70:	hlt    
  411a71:	sub    esi,esp
  411a73:	test   eax,0x76fd323a
  411a78:	xor    edi,ecx
  411a7a:	dec    edi
  411a7b:	inc    ebx
  411a7c:	sbb    eax,0x57ce8b33
  411a81:	xchg   edx,eax
  411a82:	dec    ecx
  411a83:	fistp  QWORD PTR [ebx-0x63]
  411a86:	int3   
  411a87:	mov    ebp,0x293accf2
  411a8c:	sub    ebx,DWORD PTR [ebx+0x6bb97f98]
  411a92:	mov    ah,0x97
  411a94:	jl     0x411a4c
  411a96:	dec    eax
  411a97:	sti    
  411a98:	xchg   edi,eax
  411a99:	test   DWORD PTR [eax+0x6e125020],esi
  411a9f:	mov    dl,0xea
  411aa1:	mov    al,0xcc
  411aa3:	xchg   edi,eax
  411aa4:	cwde   
  411aa5:	xchg   esi,eax
  411aa6:	pop    ecx
  411aa7:	xor    esp,DWORD PTR [eax+ebx*1]
  411aaa:	fldcw  WORD PTR [edi+0x3b]
  411aad:	jb     0x411a3c
  411aaf:	and    eax,0x37c11a41
  411ab4:	inc    esp
  411ab5:	add    BYTE PTR [ecx-0x4c],ah
  411ab8:	mov    ebp,0x56a8e607
  411abd:	xor    BYTE PTR ds:0xe3ae4038,0x7c
  411ac4:	mov    ah,0xb
  411ac6:	out    dx,al
  411ac7:	push   ds
  411ac8:	icebp  
  411ac9:	inc    eax
  411aca:	stos   BYTE PTR es:[edi],al
  411acb:	enter  0x3e7e,0xd7
  411acf:	jmp    0x6e325c60
  411ad4:	cdq    
  411ad5:	sar    BYTE PTR [eax-0x66],0x4e
  411ad9:	push   0x3a4fa42a
  411ade:	cmp    DWORD PTR [edx+0x39],esi
  411ae1:	outs   dx,BYTE PTR ds:[esi]
  411ae2:	sbb    eax,0x549d7868
  411ae7:	adc    al,0xf2
  411ae9:	cli    
  411aea:	mov    fs,eax
  411aec:	mov    ch,0x44
  411aee:	div    DWORD PTR [ebp+0x18d79e05]
  411af4:	jecxz  0x411b4b
  411af6:	push   es
  411af7:	mov    ebx,0x7d8aa896
  411afc:	or     al,0x41
  411afe:	or     ecx,edi
  411b00:	dec    ebp
  411b01:	push   ss
  411b02:	idiv   bh
  411b04:	aam    0xff
  411b06:	std    
  411b07:	pusha  
  411b08:	sbb    ebp,DWORD PTR [eax+0x47]
  411b0b:	ret    0x853b
  411b0e:	or     DWORD PTR ds:0x6592017e,edx
  411b14:	mov    esi,0x87b00c62
  411b19:	fadd   DWORD PTR [eax]
  411b1b:	fwait
  411b1c:	scas   eax,DWORD PTR es:[edi]
  411b1d:	sbb    dl,ah
  411b1f:	jg     0x411abd
  411b21:	inc    edi
  411b22:	jmp    FWORD PTR [ebx-0x4ea4b873]
  411b28:	xchg   esi,eax
  411b29:	adc    al,0xe5
  411b2b:	push   eax
  411b2c:	cmp    eax,0x145b13a2
  411b31:	pop    edx
  411b32:	test   cl,ah
  411b34:	popa   
  411b35:	cmc    
  411b36:	mov    esi,fs
  411b38:	xchg   esp,eax
  411b39:	jnp    0x411b86
  411b3b:	xlat   BYTE PTR ds:[ebx]
  411b3c:	jbe    0x411adb
  411b3e:	inc    esi
  411b3f:	addr16 out dx,al
  411b41:	fsub   st(1),st
  411b43:	mov    al,ds:0x328ac88e
  411b48:	pop    ecx
  411b49:	adc    BYTE PTR [esi-0x649a8752],dh
  411b4f:	jno    0x411b95
  411b51:	int    0x91
  411b53:	sbb    BYTE PTR [eax+0x5f],bh
  411b56:	in     eax,0xf5
  411b58:	pop    ss
  411b59:	push   0x41b04fce
  411b5e:	adc    BYTE PTR [esi-0x1f],dl
  411b61:	jle    0x411b03
  411b63:	cmp    al,0x8e
  411b65:	int3   
  411b66:	fnstcw WORD PTR [eax-0x6bfff43b]
  411b6c:	icebp  
  411b6d:	pop    esp
  411b6e:	lock and DWORD PTR [ebx-0x305086d6],esp
  411b75:	fsubr  QWORD PTR [esi+0x68]
  411b78:	lods   eax,DWORD PTR ds:[esi]
  411b79:	push   eax
  411b7a:	shl    DWORD PTR [edi+0x53ac8f00],cl
  411b80:	nop
  411b81:	test   eax,0xbdcdb939
  411b86:	test   al,0x5a
  411b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b89:	push   ebx
  411b8a:	ins    DWORD PTR es:[edi],dx
  411b8b:	cld    
  411b8c:	adc    cl,BYTE PTR [edi-0x59]
  411b8f:	jp     0x411bd2
  411b91:	pushf  
  411b92:	les    eax,FWORD PTR [edx+0x11a49500]
  411b98:	lea    eax,[ecx-0x1c331f8a]
  411b9e:	or     al,dl
  411ba0:	and    esp,DWORD PTR [ecx-0x3f0eeef9]
  411ba6:	lods   eax,DWORD PTR ds:[esi]
  411ba7:	jo     0x411b29
  411ba9:	das    
  411baa:	scas   al,BYTE PTR es:[edi]
  411bab:	jae    0x411c05
  411bad:	pop    ds
  411bae:	mov    ecx,0x5af1825c
  411bb3:	inc    ebp
  411bb4:	sar    bl,cl
  411bb6:	mov    ecx,0xa54f5294
  411bbb:	loop   0x411c25
  411bbd:	fisttp WORD PTR [ebp-0x616e0b81]
  411bc3:	loop   0x411bb9
  411bc5:	loope  0x411b85
  411bc7:	inc    ecx
  411bc8:	shr    edi,1
  411bca:	iret   
  411bcb:	add    eax,0x96ce2cfb
  411bd0:	xor    ah,BYTE PTR [edx]
  411bd2:	call   0x55d:0x3c108a2d
  411bd9:	test   ecx,esi
  411bdb:	iret   
  411bdc:	imul   edi,DWORD PTR [ecx],0xffffffc9
  411bdf:	div    BYTE PTR [esi]
  411be1:	data16 je 0x411c18
  411be4:	and    al,0x88
  411be6:	mov    WORD PTR [ebx],ss
  411be8:	leave  
  411be9:	or     eax,0x3de71fdc
  411bee:	xchg   ebp,eax
  411bef:	mov    bh,0xab
  411bf1:	arpl   WORD PTR [ebp-0x60990646],di
  411bf7:	leave  
  411bf8:	xor    BYTE PTR [ebx+0x62560ebd],0xf2
  411bff:	inc    edi
  411c00:	cwde   
  411c01:	mov    ebx,0xb29f5dfc
  411c06:	xchg   bl,bl
  411c08:	push   ecx
  411c09:	cmp    BYTE PTR [eax],ah
  411c0b:	xchg   ebp,eax
  411c0c:	mov    dl,0x70
  411c0e:	push   edx
  411c0f:	xor    DWORD PTR [edi],edi
  411c11:	fldcw  WORD PTR [ecx-0xe]
  411c14:	test   al,0xeb
  411c16:	jo     0x411c64
  411c18:	aas    
  411c19:	xor    DWORD PTR ds:0xbabd6f1a,esi
  411c1f:	clc    
  411c20:	inc    edi
  411c21:	(bad)  
  411c22:	jge    0x411bb3
  411c24:	aad    0x78
  411c26:	popa   
  411c27:	inc    edx
  411c28:	xchg   DWORD PTR ds:0x756aa932,esp
  411c2e:	mov    dl,0x7b
  411c30:	xchg   edi,eax
  411c31:	jmp    0x559d:0x5b34e68b
  411c38:	or     al,0x26
  411c3a:	mov    ds:0xe4b9d321,eax
  411c3f:	aas    
  411c40:	dec    edi
  411c41:	sti    
  411c42:	jle    0x411c8a
  411c44:	imul   BYTE PTR [edi+0x42d2b7a6]
  411c4a:	ja     0x411c0f
  411c4c:	mov    ah,0x9
  411c4f:	int3   
  411c50:	mov    DWORD PTR [ebx],ebx
  411c52:	sub    al,0xd1
  411c54:	xchg   esp,eax
  411c55:	push   ebx
  411c56:	cmp    cl,BYTE PTR [edi]
  411c58:	mov    al,ds:0x59040f4f
  411c5d:	dec    ecx
  411c5e:	retf   
  411c5f:	call   ebp
  411c61:	adc    BYTE PTR [edx+edi*4+0x223eb485],0xb6
  411c69:	es mov ecx,?
  411c6c:	fwait
  411c6d:	iret   
  411c6e:	jb     0x411c57
  411c70:	sub    DWORD PTR [ebp-0x10b41e44],eax
  411c76:	shl    dl,cl
  411c78:	mov    edx,edx
  411c7a:	and    ch,ah
  411c7c:	mov    dl,0xbb
  411c7e:	pop    bp
  411c80:	push   esp
  411c81:	jo     0x411d02
  411c83:	ds jns 0x411cd9
  411c86:	dec    edi
  411c87:	sub    al,0xea
  411c89:	div    DWORD PTR fs:[eax-0x19]
  411c8d:	and    cl,BYTE PTR [esi-0x3407f3a3]
  411c93:	(bad)  
  411c94:	(bad)  
  411c95:	mov    esi,0x79c24fa8
  411c9a:	or     ax,0x51a1
  411c9e:	mov    ds:0x73aa81a5,al
  411ca3:	mov    ecx,0x2aefd899
  411ca8:	(bad)  
  411ca9:	retf   
  411caa:	outs   dx,BYTE PTR ds:[esi]
  411cab:	pop    es
  411cac:	jecxz  0x411c66
  411cae:	pop    eax
  411caf:	dec    esp
  411cb0:	sti    
  411cb1:	into   
  411cb2:	dec    ecx
  411cb3:	cmp    ebp,DWORD PTR [ebx+edx*4-0x795c572]
  411cba:	pop    es
  411cbb:	cmp    ebp,DWORD PTR [edi+0x51]
  411cbe:	lea    edi,[edi]
  411cc0:	inc    esp
  411cc1:	or     bl,BYTE PTR [edx+0x20df6e0a]
  411cc7:	lods   eax,DWORD PTR ds:[esi]
  411cc8:	mov    esp,0x6c5c8c34
  411ccd:	dec    eax
  411cce:	jb     0x411c9a
  411cd0:	loop   0x411d49
  411cd2:	xor    BYTE PTR [edx+ebp*8],cl
  411cd5:	daa    
  411cd6:	inc    eax
  411cd7:	xchg   edx,eax
  411cd8:	dec    eax
  411cd9:	call   0x5c9b:0x1334e686
  411ce0:	add    al,0xff
  411ce2:	mov    esp,0x3b7d5b5a
  411ce7:	push   edi
  411ce8:	aad    0x83
  411cea:	not    DWORD PTR [ecx+0x30]
  411ced:	adc    cl,BYTE PTR [edx+0x2b]
  411cf0:	lods   eax,DWORD PTR ds:[esi]
  411cf1:	mov    dl,0x41
  411cf3:	jmp    0xf8ee:0xad7202a2
  411cfa:	jmp    0x7ba0:0x7ce6dd01
  411d01:	mov    ch,0x60
  411d03:	aaa    
  411d04:	(bad)  
  411d05:	(bad)  
  411d06:	stc    
  411d07:	dec    ebx
  411d08:	mov    cl,0xe0
  411d0a:	gs jno 0x411d0f
  411d0d:	bound  esi,QWORD PTR [esi-0x5a]
  411d10:	jns    0x411d81
  411d12:	sbb    al,0x83
  411d14:	(bad)  
  411d15:	fdivr  QWORD PTR es:[ecx+ecx*2-0x62c4b85e]
  411d1d:	ins    DWORD PTR es:[edi],dx
  411d1e:	outs   dx,BYTE PTR ds:[esi]
  411d1f:	test   al,0x3f
  411d21:	lahf   
  411d22:	cs jbe 0x411da3
  411d25:	dec    edx
  411d26:	pop    edi
  411d27:	jl     0x411cb9
  411d29:	mov    bh,0x2c
  411d2b:	retf   0x6dd0
  411d2e:	lock mov edx,0x8b1bf2a7
  411d34:	(bad)  
  411d35:	nop    DWORD PTR [edi]
  411d38:	iret   
  411d39:	mov    ds:0x49e1c42,eax
  411d3e:	jae    0x411cf5
  411d40:	retf   0x9f29
  411d43:	not    DWORD PTR [eax-0x6f396ff5]
  411d49:	xor    eax,0x4d9dc05e
  411d4e:	fwait
  411d4f:	repnz retfw 
  411d52:	ret    
  411d53:	mov    cs,WORD PTR [ebx+edi*1-0x6fda00c6]
  411d5a:	rol    BYTE PTR [ecx],1
  411d5c:	add    eax,esp
  411d5e:	test   eax,0x84c66503
  411d63:	or     eax,0xb4460612
  411d68:	cmc    
  411d69:	inc    esi
  411d6a:	cli    
  411d6b:	bound  ebp,QWORD PTR [ecx+eiz*2+0x6278444f]
  411d72:	(bad)  
  411d73:	(bad)  
  411d74:	adc    DWORD PTR [ebx-0x38],edi
  411d77:	in     eax,dx
  411d78:	adc    BYTE PTR [edi-0x73298461],cl
  411d7e:	pusha  
  411d7f:	movq   mm7,QWORD PTR [eax-0x5a917299]
  411d86:	call   0xa4921d7f
  411d8b:	ficom  DWORD PTR [ebp+0x2d]
  411d8e:	sub    edx,DWORD PTR [ecx-0x3bb5993a]
  411d94:	bound  eax,QWORD PTR [ebp+0x25]
  411d97:	add    al,0x46
  411d99:	pop    ebx
  411d9a:	mov    cl,0x5e
  411d9c:	pusha  
  411d9d:	jmp    0x914f:0xea33b91d
  411da4:	jmp    0x411d58
  411da6:	leave  
  411da7:	inc    ecx
  411da8:	call   0xe9b253c4
  411dad:	lahf   
  411dae:	mov    al,0xd9
  411db0:	jo     0x411d54
  411db2:	call   0x49674b0f
  411db7:	mov    ebp,0x3804af0a
  411dbc:	push   ebx
  411dbd:	addr16 push ecx
  411dbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dc0:	ret    0x742e
  411dc3:	push   ebp
  411dc4:	or     cl,0x5e
  411dc7:	dec    ecx
  411dc8:	pop    eax
  411dc9:	adc    eax,DWORD PTR [ebx]
  411dcb:	ins    BYTE PTR es:[edi],dx
  411dcc:	inc    edx
  411dcd:	adc    DWORD PTR [eax+0x69562674],0xffffff89
  411dd4:	fxch   st(2)
  411dd6:	or     eax,0x698367c3
  411ddb:	call   0x6b2a67ba
  411de0:	cmp    al,ah
  411de2:	lahf   
  411de3:	cld    
  411de4:	sbb    BYTE PTR [eax-0x8433be],dh
  411dea:	popf   
  411deb:	lods   al,BYTE PTR ds:[esi]
  411dec:	push   ecx
  411ded:	cmp    edx,DWORD PTR [edx]
  411def:	fbld   TBYTE PTR [ecx+ecx*2]
  411df2:	mov    esp,0x7794db7f
  411df7:	leave  
  411df8:	jp     0x411e17
  411dfa:	mov    ah,0xa3
  411dfc:	pop    edi
  411dfd:	out    0xa1,eax
  411dff:	shr    DWORD PTR fs:[ebp+0x61187030],cl
  411e06:	fsubrp st(7),st
  411e08:	dec    eax
  411e09:	mov    bh,0x5d
  411e0b:	push   es
  411e0c:	jno    0x411d93
  411e0e:	repnz mov ebx,0x12c6bc53
  411e14:	ja     0x411e84
  411e16:	lods   eax,DWORD PTR ds:[esi]
  411e17:	ins    BYTE PTR es:[edi],dx
  411e18:	aad    0xd3
  411e1a:	jns    0x411e2d
  411e1c:	ret    0x531d
  411e1f:	xor    bl,BYTE PTR [edx+0x24]
  411e22:	ror    ah,0xc7
  411e25:	sbb    bh,BYTE PTR [ebx-0x71752f96]
  411e2b:	(bad)  
  411e2d:	cwde   
  411e2e:	jae    0x411e66
  411e30:	aaa    
  411e31:	and    ecx,DWORD PTR [ebx]
  411e33:	icebp  
  411e34:	std    
  411e35:	jecxz  0x411df9
  411e37:	fsub   QWORD PTR ds:0xe2b423bd
  411e3d:	sbb    eax,0x656544b0
  411e42:	inc    edi
  411e43:	stos   BYTE PTR es:[edi],al
  411e44:	xor    esp,edx
  411e46:	mov    ?,WORD PTR [eax+0x18]
  411e49:	bound  ebx,QWORD PTR [ebp+0x2771528d]
  411e4f:	cli    
  411e50:	mov    ch,0xdb
  411e52:	jl     0x411ec1
  411e54:	push   0x605fb0f3
  411e59:	inc    ebx
  411e5a:	cwde   
  411e5b:	sahf   
  411e5c:	adc    esp,DWORD PTR [eax-0x20121385]
  411e62:	or     eax,0xa9be3a37
  411e67:	ins    BYTE PTR es:[edi],dx
  411e68:	aaa    
  411e69:	popf   
  411e6a:	gs cs jno 0x411e4f
  411e6e:	sub    eax,0x504bc0a0
  411e73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e74:	sub    BYTE PTR [esi],bh
  411e76:	lods   eax,DWORD PTR ds:[esi]
  411e77:	fsub   DWORD PTR [esi]
  411e79:	pop    esp
  411e7a:	or     al,0x6f
  411e7c:	pop    ebp
  411e7d:	jbe    0x411e5a
  411e7f:	sub    al,0x8e
  411e81:	mov    esp,0x70339d94
  411e86:	mov    eax,ds:0x61e5e9ed
  411e8b:	je     0x411e81
  411e8d:	in     eax,0x74
  411e8f:	mov    edx,0xbeb56e69
  411e94:	aam    0xc4
  411e96:	sub    eax,0xb96eb84a
  411e9b:	mov    eax,0xfc2c1823
  411ea1:	xor    eax,0x2d1268a
  411ea6:	push   es
  411ea7:	fs lahf 
  411ea9:	outs   dx,BYTE PTR ds:[esi]
  411eaa:	sar    DWORD PTR [eax-0xff77107],1
  411eb0:	call   0x22110984
  411eb5:	mov    edx,0x881c8f9c
  411eba:	ret    0x6f6a
  411ebd:	(bad)  
  411ebe:	cli    
  411ebf:	mov    WORD PTR [eax],ss
  411ec1:	shl    DWORD PTR [esi],0xce
  411ec4:	aad    0xf8
  411ec6:	loopne 0x411e72
  411ec8:	aad    0x23
  411eca:	or     al,BYTE PTR [ecx+edx*2+0x3e3a8ed]
  411ed1:	add    DWORD PTR [edi+eiz*8+0x3],edx
  411ed5:	clc    
  411ed6:	loopne 0x411e8a
  411ed8:	enter  0x1b69,0xd5
  411edc:	popa   
  411edd:	xor    al,BYTE PTR [esi-0x659a8e1a]
  411ee3:	pusha  
  411ee4:	jbe    0x411f4d
  411ee6:	sti    
  411ee7:	inc    edi
  411ee8:	test   al,0xa0
  411eea:	test   BYTE PTR [ebp-0x7b],0xcc
  411eee:	mov    ch,0x5c
  411ef0:	cmp    BYTE PTR [edi+0x28],dl
  411ef3:	mul    BYTE PTR [esi+0x2687c456]
  411ef9:	fstp   QWORD PTR [ebp-0x7ec9fd65]
  411eff:	les    esp,FWORD PTR [eax+0x5d64f686]
  411f05:	mov    cl,BYTE PTR [ebx+eiz*2+0x49]
  411f09:	mov    DWORD PTR ds:0x2f67db5,esi
  411f0f:	xor    edx,0xecd35bb6
  411f15:	mov    ch,BYTE PTR [eax]
  411f17:	js     0x411ec2
  411f19:	cmp    BYTE PTR [edx-0x5d4baf1e],al
  411f1f:	and    ebx,DWORD PTR ds:0x6bfb7f41
  411f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f26:	stos   BYTE PTR es:[edi],al
  411f27:	scas   al,BYTE PTR es:[edi]
  411f28:	lods   al,BYTE PTR ds:[esi]
  411f29:	cdq    
  411f2a:	int3   
  411f2b:	xor    al,0xf6
  411f2d:	xor    cl,bl
  411f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f30:	and    BYTE PTR [ecx+ebx*8],0xa4
  411f34:	add    dh,BYTE PTR [ebp+0x77ee3f13]
  411f3a:	mov    ebx,0x6106d16
  411f3f:	test   al,0x9b
  411f41:	test   BYTE PTR [edi-0x7c],dl
  411f44:	sub    ecx,DWORD PTR [ecx-0x48]
  411f47:	cmp    esp,DWORD PTR [esi+edx*1]
  411f4a:	xchg   DWORD PTR [eax],eax
  411f4c:	scas   eax,DWORD PTR es:[edi]
  411f4d:	icebp  
  411f4e:	xor    al,0xb4
  411f50:	stos   BYTE PTR es:[edi],al
  411f51:	imul   ebp,DWORD PTR [edi+0x65],0xccf4fa8d
  411f58:	xchg   BYTE PTR [ecx+0x31],bl
  411f5b:	and    al,0xd9
  411f5d:	mov    eax,0x6fb3d6be
  411f62:	sbb    cl,BYTE PTR [edx-0x80]
  411f65:	fiadd  DWORD PTR [ecx-0x7e]
  411f68:	or     BYTE PTR ds:0x955f81a7,cl
  411f6e:	(bad)
  411f71:	xlat   BYTE PTR ds:[ebx]
  411f72:	fucomp st(0)
  411f74:	aad    0xb6
  411f76:	xor    eax,0xdfdb34aa
  411f7b:	mov    esi,0x7f6a75fc
  411f80:	stos   BYTE PTR es:[edi],al
  411f81:	shl    BYTE PTR [esi-0x56],1
  411f84:	xchg   edi,eax
  411f85:	sar    DWORD PTR [ebx],0x1a
  411f88:	sub    eax,0x4f8c6c7d
  411f8d:	xchg   cl,al
  411f8f:	adc    al,0xfd
  411f91:	adc    al,0xf2
  411f93:	cmp    dl,BYTE PTR ds:0x92b87d6a
  411f99:	push   ebp
  411f9a:	or     BYTE PTR [ecx+edi*1+0x7d8b7a50],al
  411fa1:	xlat   BYTE PTR ds:[ebx]
  411fa2:	sar    BYTE PTR ds:0x6c91e06,0x45
  411fa9:	in     al,0xf1
  411fab:	repz cdq 
  411fad:	inc    edx
  411fae:	sahf   
  411faf:	fs pop ds
  411fb1:	xchg   edi,eax
  411fb2:	lahf   
  411fb3:	cmp    BYTE PTR [edx+0x5201e3d7],al
  411fb9:	lds    eax,FWORD PTR [ebp+0x55]
  411fbc:	lods   al,BYTE PTR ds:[esi]
  411fbd:	aaa    
  411fbe:	xor    al,0x26
  411fc0:	mov    edx,0x5bc2917e
  411fc5:	mov    eax,0x240b2262
  411fca:	fild   WORD PTR [eax+0x4dc8cf12]
  411fd0:	les    ebp,FWORD PTR [edi]
  411fd2:	jge    0x411fd9
  411fd4:	stc    
  411fd5:	pop    eax
  411fd6:	jae    0x412043
  411fd8:	addr16 push ebp
  411fda:	pop    ss
  411fdb:	and    al,0x5
  411fdd:	bound  ebp,QWORD PTR [edi-0x8]
  411fe0:	loop   0x411f87
  411fe2:	xchg   BYTE PTR [edi+0x6f01824a],cl
  411fe8:	push   ss
  411fe9:	mov    edx,0x29d52197
  411fee:	jge    0x412019
  411ff0:	sbb    edx,DWORD PTR [ebx-0x29]
  411ff3:	mov    ebp,0x6a21fd21
  411ff8:	iret   
  411ff9:	jne    0x41205c
  411ffb:	push   ds
  411ffc:	dec    esi
  411ffd:	pop    ecx
  411ffe:	ins    DWORD PTR es:[edi],dx
  411fff:	xor    edi,DWORD PTR [edx-0x25]
  412002:	or     bl,BYTE PTR [edi-0x5c83bcbc]
  412008:	sbb    eax,0xe318c91e
  41200d:	call   0xdede:0x52beff88
  412014:	dec    esi
  412015:	adc    dl,BYTE PTR [edi]
  412017:	sub    BYTE PTR [ecx+0x2fc4959f],0xc8
  41201e:	jg     0x41205b
  412020:	xchg   esp,eax
  412021:	adc    bl,BYTE PTR [ecx-0x3d]
  412024:	(bad)  
  412026:	js     0x411ff1
  412028:	pop    ds
  412029:	lahf   
  41202a:	and    DWORD PTR [eax-0x7c8cf955],ecx
  412030:	loope  0x412024
  412032:	push   esi
  412033:	shl    BYTE PTR [edx+0x18],1
  412036:	sub    DWORD PTR [eax],edi
  412038:	inc    esi
  412039:	cmp    eax,0xc60126c2
  41203e:	mov    edx,0xd55fbf34
  412043:	jle    0x412021
  412045:	push   ss
  412046:	cs sbb eax,esp
  412049:	pop    ebp
  41204a:	pop    ebp
  41204b:	icebp  
  41204c:	add    edx,ecx
  41204e:	push   0x42
  412050:	adc    bh,cl
  412052:	pop    es
  412053:	je     0x4120c8
  412055:	pop    edx
  412056:	mov    edi,0x5a8ad2c7
  41205b:	mov    esi,0xc96f56c4
  412060:	into   
  412061:	cmp    BYTE PTR [eax],bh
  412063:	in     eax,0x73
  412065:	xchg   DWORD PTR [edx-0x3e],ebx
  412068:	mov    ebp,0xdfaf4f50
  41206d:	jo     0x412085
  41206f:	sub    DWORD PTR [edx+0x3],ecx
  412072:	or     BYTE PTR [edx-0x1a4c6267],dl
  412078:	or     al,0x30
  41207a:	cdq    
  41207b:	data16 add BYTE PTR [ecx],bh
  41207e:	sbb    eax,0xf179f592
  412083:	pcmpeqd mm1,QWORD PTR [ebx+eax*8+0x33]
  412088:	sub    al,0x76
  41208a:	int    0x7b
  41208c:	leave  
  41208d:	and    BYTE PTR [esi+0x12],dl
  412090:	sbb    DWORD PTR ds:0x2b084c50,ebx
  412096:	or     bh,BYTE PTR [ebx+0x7f5fc0ae]
  41209c:	mov    esi,0x17e94beb
  4120a1:	add    BYTE PTR [edi],dh
  4120a3:	and    bl,dh
  4120a5:	cwde   
  4120a6:	sub    al,BYTE PTR [eax+0xe]
  4120a9:	or     BYTE PTR [edx-0x4be9a35d],ah
  4120af:	pushf  
  4120b0:	xchg   DWORD PTR [edi-0x43],ebx
  4120b3:	cmp    al,0xea
  4120b5:	inc    edx
  4120b6:	jb     0x4120a1
  4120b8:	loope  0x4120b3
  4120ba:	test   BYTE PTR [edx],ah
  4120bc:	lds    edx,FWORD PTR [esi+0x326957d9]
  4120c2:	cmp    esi,0x518d9e28
  4120c8:	scas   eax,DWORD PTR es:[edi]
  4120c9:	adc    edi,DWORD PTR [edi+esi*4-0x55]
  4120cd:	jns    0x41207f
  4120cf:	adc    al,0x42
  4120d1:	adc    ecx,0x6
  4120d4:	ret    
  4120d5:	and    bh,cl
  4120d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120d8:	mov    WORD PTR ds:0xa8e8f05d,ss
  4120de:	aad    0x2
  4120e0:	aaa    
  4120e1:	popa   
  4120e2:	ins    DWORD PTR es:[edi],dx
  4120e3:	lods   eax,DWORD PTR ds:[esi]
  4120e4:	xchg   ebx,eax
  4120e5:	je     0x4120c8
  4120e7:	(bad)  
  4120e8:	dec    edi
  4120e9:	push   ds
  4120ea:	mul    DWORD PTR ds:0x90817fc1
  4120f0:	aad    0xea
  4120f2:	lea    edx,[ecx+0x5]
  4120f5:	ss and edi,esi
  4120f8:	stos   BYTE PTR es:[edi],al
  4120f9:	and    DWORD PTR [edi-0x45],0xffffffcc
  4120fd:	lock dec eax
  4120ff:	(bad)  
  412100:	pop    ds
  412101:	xor    DWORD PTR [ebp-0x5a],esp
  412104:	mov    ds:0xc2eb5377,al
  412109:	jp     0x4120c4
  41210b:	xor    ah,cl
  41210d:	mov    al,ds:0xcdf3392
  412112:	sbb    ecx,eax
  412114:	mov    cl,0x4d
  412116:	add    DWORD PTR [edi],edi
  412118:	dec    ecx
  412119:	adc    ch,BYTE PTR [ecx-0x71]
  41211c:	cld    
  41211d:	rol    BYTE PTR [ecx+0x1e2e8e74],1
  412123:	retf   0x78a5
  412126:	sbb    eax,0xfa49630c
  41212b:	adc    BYTE PTR [edi+ecx*2+0x35],0xe8
  412130:	and    cl,dl
  412132:	push   0x6d
  412134:	aam    0x4
  412136:	fild   DWORD PTR [edx+0x57]
  412139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41213a:	sbb    bh,ah
  41213c:	and    al,0x9c
  41213e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41213f:	test   al,0xda
  412141:	bnd ja 0x4121b5
  412144:	mov    WORD PTR [esi-0x28],gs
  412147:	mov    dh,BYTE PTR [esi-0x2d]
  41214a:	mov    dl,0x90
  41214c:	sbb    DWORD PTR [esi],esi
  41214e:	cmp    ax,0x341
  412152:	(bad)  
  412153:	dec    edi
  412154:	frstor [eax-0x20]
  412157:	clc    
  412158:	ret    0x7017
  41215b:	jg     0x4120e6
  41215d:	ret    0xa7a2
  412160:	sbb    eax,0x9f9ab646
  412165:	push   cs
  412166:	sub    DWORD PTR [edx+0x6d],edx
  412169:	jnp    0x4120f7
  41216b:	dec    esi
  41216c:	sub    DWORD PTR [edx],edx
  41216e:	out    dx,al
  41216f:	or     eax,0x49dda240
  412174:	in     al,0x7a
  412176:	(bad)  
  412177:	mov    ecx,DWORD PTR [ebx-0x63]
  41217a:	rcl    BYTE PTR [edx-0x7],1
  41217d:	jns    0x4121e5
  41217f:	mov    eax,ds:0x5f188147
  412184:	dec    ecx
  412185:	dec    ecx
  412186:	call   edx
  412188:	lods   eax,DWORD PTR ds:[esi]
  412189:	sbb    DWORD PTR [ecx+eax*8+0x5c61d392],edx
  412190:	or     bl,bh
  412192:	call   0xe6a8c703
  412197:	into   
  412198:	call   FWORD PTR [ebx+0x4daae676]
  41219e:	pop    ds
  41219f:	cld    
  4121a0:	jle    0x412190
  4121a2:	aaa    
  4121a3:	paddusb mm0,mm1
  4121a6:	push   cs
  4121a7:	or     cl,bl
  4121a9:	sahf   
  4121aa:	and    ecx,DWORD PTR [edx]
  4121ac:	push   0x8f0fca69
  4121b1:	inc    ebx
  4121b2:	enter  0x6e61,0xd
  4121b6:	stos   BYTE PTR es:[edi],al
  4121b7:	in     eax,0x74
  4121b9:	pop    esi
  4121ba:	push   ebp
  4121bb:	lock loop 0x4121c0
  4121be:	aam    0xf2
  4121c0:	sub    eax,0x659357b8
  4121c5:	sub    DWORD PTR [ebx],ecx
  4121c7:	xor    DWORD PTR [edx],esp
  4121c9:	lea    edi,[esi-0x3372556e]
  4121cf:	pusha  
  4121d0:	nop
  4121d1:	(bad)  
  4121d2:	jp     0x412187
  4121d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121d5:	sub    al,0x94
  4121d7:	inc    ah
  4121d9:	fsub   st,st(0)
  4121db:	iret   
  4121dc:	pop    edx
  4121dd:	cmp    al,0x75
  4121df:	cs ins BYTE PTR es:[edi],dx
  4121e1:	scas   eax,DWORD PTR es:[edi]
  4121e2:	ja     0x412215
  4121e4:	nop
  4121e5:	xchg   esi,eax
  4121e6:	push   ds
  4121e7:	inc    ecx
  4121e8:	(bad)  
  4121ea:	jg     0x4121a5
  4121ec:	pusha  
  4121ed:	push   ds
  4121ee:	(bad)  
  4121ef:	and    bh,BYTE PTR [ecx+0x2b]
  4121f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121f3:	push   eax
  4121f4:	inc    esp
  4121f5:	test   edi,0x1c27384
  4121fb:	push   0x7f4c8974
  412200:	push   eax
  412201:	scas   eax,DWORD PTR es:[edi]
  412202:	or     DWORD PTR [edx+0x45],ebp
  412205:	sbb    DWORD PTR [edi+esi*2],0xffffffbe
  412209:	(bad)  
  41220a:	mov    eax,0x2276c49f
  41220f:	mov    WORD PTR [edi+0x620b6df0],cs
  412215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412216:	scas   eax,DWORD PTR es:[edi]
  412217:	inc    ebx
  412218:	push   ebp
  412219:	mov    ch,0x0
  41221b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41221c:	sar    DWORD PTR [eax-0x4b],1
  41221f:	mov    bh,bl
  412221:	mov    cl,0xe
  412223:	das    
  412224:	call   FWORD PTR [edi+0x55ff2757]
  41222a:	mov    ds:0xbf07b38b,al
  41222f:	pop    esp
  412230:	jo     0x4121c4
  412232:	cli    
  412233:	aad    0xb7
  412235:	test   BYTE PTR [edx-0x5f],bl
  412238:	(bad)  [ebp+0x2c8c1388]
  41223e:	jecxz  0x412231
  412240:	pop    ss
  412241:	shl    DWORD PTR [ecx+0x70],1
  412244:	pusha  
  412245:	mov    bl,0x17
  412247:	xchg   ebp,eax
  412248:	cmp    ebx,DWORD PTR [eax]
  41224a:	mov    cl,0xc6
  41224c:	aam    0xb6
  41224e:	aaa    
  41224f:	jp     0x412265
  412251:	fs mov dl,0x53
  412254:	xor    bl,BYTE PTR [edx-0x5b]
  412257:	jge    0x4121fb
  412259:	push   ebp
  41225a:	xor    esi,eax
  41225c:	addr16 cs adc ebp,ebp
  412260:	call   0x77b:0xe99d7352
  412267:	lahf   
  412268:	je     0x412257
  41226a:	data16 (bad) 
  41226c:	lahf   
  41226d:	or     BYTE PTR [edx],bl
  41226f:	xor    bl,cl
  412271:	pop    ebp
  412272:	jg     0x41226c
  412274:	dec    esi
  412275:	add    esp,esp
  412277:	jne    0x41226e
  412279:	dec    eax
  41227a:	(bad)  
  41227b:	fcmovb st,st(6)
  41227d:	lock cmp dl,cl
  412280:	sbb    eax,0xd7609878
  412285:	call   0x263d6651
  41228a:	push   ds
  41228b:	ss loopne 0x412303
  41228e:	xor    al,0x27
  412290:	mov    dh,0x56
  412292:	or     ebx,eax
  412294:	sbb    BYTE PTR [edi+eiz*8-0x1f],0x9c
  412299:	loope  0x412274
  41229b:	shr    DWORD PTR [ecx],cl
  41229d:	jbe    0x4122ce
  41229f:	retf   0xe802
  4122a2:	(bad)  
  4122a3:	mov    ch,0x35
  4122a5:	or     al,0xfa
  4122a7:	retf   
  4122a8:	xor    eax,0xda2907c1
  4122ad:	jae    0x4122b1
  4122af:	mov    al,ds:0x7b59998a
  4122b4:	mov    edi,0x844dcad5
  4122b9:	adc    eax,0xe48e1243
  4122be:	xor    esp,ecx
  4122c0:	xchg   edx,ecx
  4122c2:	or     BYTE PTR ds:0x8e0e911,0x8
  4122c9:	icebp  
  4122ca:	adc    al,0x34
  4122cc:	sub    DWORD PTR [ebx],esi
  4122ce:	mov    ch,0xa5
  4122d0:	xchg   BYTE PTR [edi],bh
  4122d2:	repnz push edi
  4122d4:	cmp    ebp,ebx
  4122d6:	imul   BYTE PTR [edi+0x2cb03e1e]
  4122dc:	xchg   edi,eax
  4122dd:	xor    dl,BYTE PTR [edi]
  4122df:	mov    bh,0x2a
  4122e1:	shr    BYTE PTR [eax],1
  4122e3:	or     ebx,ebx
  4122e5:	xchg   esp,eax
  4122e6:	inc    edx
  4122e7:	lock adc eax,0x48bf8fa2
  4122ed:	adc    DWORD PTR ss:[ebp-0x1c65e509],0x2d
  4122f5:	shl    ch,1
  4122f7:	cmc    
  4122f8:	sub    ebx,DWORD PTR [edi+0x458393b6]
  4122fe:	sti    
  4122ff:	loope  0x4122cc
  412301:	xchg   edx,eax
  412302:	pop    ss
  412303:	lea    eax,ds:0x97cf023a
  412309:	add    eax,0xf55073d2
  41230e:	push   esp
  41230f:	rcl    BYTE PTR [ebp+0x670061c9],cl
  412315:	dec    ebp
  412316:	cmp    edx,DWORD PTR ds:0x8f783210
  41231c:	pushf  
  41231d:	push   eax
  41231e:	lds    eax,FWORD PTR [ebx-0x51838ce]
  412324:	dec    eax
  412325:	inc    ebx
  412326:	xlat   BYTE PTR ds:[ebx]
  412327:	add    BYTE PTR [edi-0x69],0x1d
  41232b:	clc    
  41232c:	call   0x7027cb27
  412331:	push   0x13b2039a
  412336:	push   ecx
  412337:	add    DWORD PTR [ecx+0x45],ebx
  41233a:	bnd ret 
  41233c:	imul   ebx,DWORD PTR [edx+0x69c6b4fc],0x3
  412343:	xchg   edx,eax
  412344:	and    ecx,DWORD PTR [esi]
  412346:	xor    eax,0x3db02982
  41234b:	jmp    0x89ca8ecb
  412350:	and    eax,0xd7529cfa
  412355:	test   eax,0x6869c0a2
  41235a:	in     eax,dx
  41235b:	add    eax,0xfb1d3437
  412360:	mov    ebx,0x24b5dac0
  412365:	ss mov bh,cl
  412368:	stos   BYTE PTR es:[edi],al
  412369:	xchg   ebx,eax
  41236a:	js     0x4122f5
  41236c:	in     al,dx
  41236d:	xchg   esp,eax
  41236e:	arpl   WORD PTR [ebp-0x6f652035],dx
  412374:	out    0x4c,al
  412376:	pop    edx
  412377:	loopne 0x4123f6
  412379:	iret   
  41237a:	outs   dx,BYTE PTR ds:[esi]
  41237b:	not    dh
  41237d:	push   ds
  41237e:	in     eax,dx
  41237f:	cwde   
  412380:	fiadd  WORD PTR [ebx+0x61]
  412383:	inc    esp
  412384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412385:	jb     0x41235f
  412387:	test   BYTE PTR [ebx+0x31],dh
  41238a:	and    edx,DWORD PTR [ebp-0x7951b3c1]
  412390:	or     eax,0xc36f5a19
  412395:	mov    dh,0xb9
  412397:	jle    0x4123a9
  412399:	ret    
  41239a:	xchg   edx,eax
  41239b:	inc    esp
  41239c:	mov    bh,0x8
  41239e:	in     al,dx
  41239f:	jns    0x4123ee
  4123a1:	retf   0x5b44
  4123a4:	retf   0x308
  4123a7:	enter  0x5071,0xac
  4123ab:	(bad)  
  4123ac:	sbb    al,0xa2
  4123ae:	cs jl  0x41233d
  4123b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123b2:	gs mov esi,0xe6edf60
  4123b8:	(bad)  
  4123ba:	ins    DWORD PTR es:[edi],dx
  4123bb:	fwait
  4123bc:	(bad)  
  4123bd:	jnp    0x412384
  4123bf:	mov    edi,0xe09989aa
  4123c4:	and    al,0x8a
  4123c6:	xor    cl,ah
  4123c8:	jns    0x41240e
  4123ca:	xchg   ebp,eax
  4123cb:	addr16 aaa 
  4123cd:	push   ecx
  4123ce:	fcom   DWORD PTR ds:0xc2820648
  4123d4:	xor    DWORD PTR [eax],0x6e
  4123d7:	inc    esi
  4123d8:	xchg   DWORD PTR [ebp-0x1f],edx
  4123db:	push   esi
  4123dc:	leave  
  4123dd:	adc    dl,BYTE PTR [ebp-0x28302cdd]
  4123e3:	cmc    
  4123e4:	ss add eax,0x25b24cd7
  4123ea:	js     0x4123f7
  4123ec:	in     eax,dx
  4123ed:	cli    
  4123ee:	pusha  
  4123ef:	pop    ebx
  4123f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123f1:	out    0xf7,al
  4123f3:	and    eax,0x82300f9
  4123f8:	sbb    edx,edi
  4123fa:	pop    esp
  4123fb:	into   
  4123fc:	sbb    DWORD PTR [esi+0x4f0f8f53],ecx
  412402:	dec    esp
  412403:	inc    eax
  412404:	or     bh,BYTE PTR ds:0x299520b1
  41240a:	mov    bl,0x9f
  41240c:	and    eax,0x1df464d7
  412411:	inc    edx
  412412:	and    DWORD PTR [edx-0x23d7a97],edi
  412418:	mov    eax,0x941f793a
  41241d:	push   cs
  41241e:	or     DWORD PTR [eax],edi
  412420:	(bad)  
  412421:	gs inc eax
  412423:	out    0x8e,eax
  412425:	or     al,0xf6
  412427:	add    BYTE PTR ds:[edx],al
  41242a:	(bad)  
  41242b:	mul    DWORD PTR [eax]
  41242d:	and    DWORD PTR [ebp+0x2f],edi
  412430:	sub    DWORD PTR [esi+eiz*8+0x37bb1b88],ebx
  412437:	xor    BYTE PTR [ecx+0x5a],cl
  41243a:	and    ecx,ebp
  41243c:	aam    0x6c
  41243e:	xor    al,0xe6
  412440:	cmp    eax,0xcae6b9c6
  412445:	iret   
  412446:	pop    ebx
  412447:	add    al,0xc4
  412449:	sbb    eax,DWORD PTR [edi]
  41244b:	xchg   ebx,eax
  41244c:	addr16 mov bl,0x55
  41244f:	or     esp,DWORD PTR [eax]
  412451:	nop
  412452:	lods   al,BYTE PTR ds:[esi]
  412453:	lods   eax,DWORD PTR ds:[esi]
  412454:	lea    edx,[edx-0x1ecd5f30]
  41245a:	je     0x4124c4
  41245c:	data16 mov al,0xa
  41245f:	dec    ebx
  412460:	and    bh,ah
  412462:	sub    al,0x69
  412464:	lods   eax,DWORD PTR ds:[esi]
  412465:	xchg   esi,eax
  412466:	popf   
  412467:	pop    esp
  412468:	shl    DWORD PTR [edx],cl
  41246a:	int    0xc5
  41246c:	mov    ebp,0xdd2157cb
  412471:	shl    DWORD PTR ds:0x28548740,1
  412477:	(bad)  
  412479:	jno    0x4124d6
  41247b:	add    cl,BYTE PTR [eax-0x554f17ba]
  412481:	out    0xb8,al
  412483:	sbb    al,BYTE PTR [eax]
  412485:	call   0x252f:0x47cffe8f
  41248c:	ret    0xea71
  41248f:	pop    esp
  412490:	xchg   edi,eax
  412491:	jle    0x4124aa
  412493:	inc    edi
  412494:	adc    DWORD PTR [eax+0x2ff788b7],ecx
  41249a:	sqrtps xmm4,XMMWORD PTR [esi+0x4b]
  41249e:	mov    esi,0x82c8976b
  4124a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124a4:	imul   BYTE PTR [ebx]
  4124a6:	ja     0x4124ea
  4124a8:	mov    dh,ah
  4124aa:	fcomp  st(2)
  4124ac:	and    esi,DWORD PTR gs:[ecx+0x51]
  4124b0:	outs   dx,DWORD PTR ds:[esi]
  4124b1:	jmp    DWORD PTR [edi+0x3b]
  4124b4:	pop    ebp
  4124b5:	sub    bh,dh
  4124b7:	and    BYTE PTR [ecx],dh
  4124b9:	mov    edx,0x69c50da9
  4124be:	arpl   WORD PTR [ebx+0x61],cx
  4124c1:	ds test eax,0xd2490b0c
  4124c7:	push   esp
  4124c8:	jmp    0x412526
  4124ca:	call   0x55ea9f57
  4124cf:	aaa    
  4124d0:	stos   DWORD PTR es:[edi],eax
  4124d1:	inc    esp
  4124d2:	int    0x9e
  4124d4:	sbb    eax,0x3bb5bd43
  4124d9:	fwait
  4124da:	jae    0x41249c
  4124dc:	pop    es
  4124dd:	inc    ebx
  4124de:	and    BYTE PTR [edi],al
  4124e0:	popf   
  4124e1:	jno    0x4124c1
  4124e3:	inc    ebp
  4124e4:	mov    esp,DWORD PTR [esi+ebp*2+0x40b25eba]
  4124eb:	add    ch,BYTE PTR [ebp+0x75]
  4124ee:	stc    
  4124ef:	enter  0xe80,0xa1
  4124f3:	fwait
  4124f4:	cld    
  4124f5:	xchg   ebx,eax
  4124f6:	add    esp,esi
  4124f8:	sahf   
  4124f9:	enter  0xb14,0xe3
  4124fd:	or     ch,BYTE PTR ds:0x3fbc27b6
  412503:	xor    DWORD PTR [edi+0xe580fbf],ecx
  412509:	test   BYTE PTR [ecx-0x43],ch
  41250c:	add    eax,0x1de0956e
  412511:	std    
  412512:	dec    ebp
  412513:	das    
  412514:	mov    al,ds:0x4aabcd1b
  412519:	pop    edx
  41251a:	je     0x4124e6
  41251c:	and    eax,0x965e65ce
  412521:	lds    ebp,FWORD PTR [ecx-0x70bff66e]
  412527:	das    
  412528:	lahf   
  412529:	mov    bl,0xf6
  41252b:	mov    eax,0xc556c1dc
  412530:	jg     0x412503
  412532:	scas   al,BYTE PTR es:[edi]
  412533:	inc    esp
  412534:	add    eax,DWORD PTR [esi]
  412536:	fst    QWORD PTR ds:0xaaff6c5d
  41253c:	aas    
  41253d:	rcl    ecx,0x7
  412540:	xchg   ecx,eax
  412541:	mov    BYTE PTR [ebp-0x61ebf6c0],al
  412547:	out    dx,eax
  412548:	pop    eax
  412549:	jge    0x412533
  41254b:	fucom  st(1)
  41254d:	xchg   ebp,eax
  41254e:	stos   DWORD PTR es:[edi],eax
  41254f:	xor    al,0x64
  412551:	nop
  412552:	pop    edx
  412553:	mov    cl,0x49
  412555:	fisubr DWORD PTR [edx]
  412557:	outs   dx,BYTE PTR ds:[esi]
  412558:	in     al,dx
  412559:	(bad)  
  41255a:	in     eax,dx
  41255b:	ret    
  41255c:	add    dh,ch
  41255e:	cs aad 0x5a
  412561:	jmp    0x83d9:0x5480c2ec
  412568:	fnstsw WORD PTR [ebx-0x3b]
  41256b:	or     eax,0xcb2f8523
  412570:	int3   
  412571:	call   FWORD PTR [eax-0x18]
  412574:	test   al,0xd6
  412576:	stos   DWORD PTR es:[edi],eax
  412577:	xchg   DWORD PTR [esi],esi
  412579:	xor    ebp,DWORD PTR [esi-0x481fd05c]
  41257f:	sbb    dl,BYTE PTR [ebx+0x1b806876]
  412585:	xlat   BYTE PTR ds:[ebx]
  412586:	inc    ebx
  412587:	lds    ebp,FWORD PTR [esi]
  412589:	dec    edx
  41258a:	pop    esi
  41258b:	mov    al,0x36
  41258d:	and    al,0x8b
  41258f:	iret   
  412590:	jp     0x4125b0
  412592:	cli    
  412593:	stos   BYTE PTR es:[edi],al
  412594:	mov    al,ds:0x228f4314
  412599:	jne    0x41260a
  41259b:	out    dx,al
  41259c:	jnp    0x41260a
  41259e:	mov    al,0xbf
  4125a0:	dec    esi
  4125a1:	xchg   ebp,eax
  4125a2:	pop    edi
  4125a3:	test   BYTE PTR ds:0xbd50d57a,dh
  4125a9:	in     al,0x7e
  4125ab:	aam    0x83
  4125ad:	jmp    0x412625
  4125af:	or     al,0xc1
  4125b1:	repz ja 0x4125e1
  4125b4:	rcl    DWORD PTR [edi+eax*8+0x3],1
  4125b8:	fbld   TBYTE PTR [ecx-0x78]
  4125bb:	pop    ebx
  4125bc:	push   esi
  4125bd:	xor    al,0xe4
  4125bf:	inc    edi
  4125c0:	or     eax,0x98cf9902
  4125c5:	lods   eax,DWORD PTR ds:[esi]
  4125c6:	in     eax,dx
  4125c7:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4125c9:	outs   dx,BYTE PTR ds:[esi]
  4125ca:	dec    ebx
  4125cb:	scas   al,BYTE PTR es:[edi]
  4125cc:	sahf   
  4125cd:	xchg   edi,eax
  4125ce:	sbb    al,0x7b
  4125d0:	iret   
  4125d1:	jle    0x4125b9
  4125d3:	inc    esi
  4125d5:	pop    edi
  4125d6:	(bad)  
  4125d8:	sahf   
  4125d9:	mov    cl,0xfa
  4125db:	repnz cmp eax,DWORD PTR [edi+ebp*8-0x78]
  4125e0:	call   0x40c0460d
  4125e5:	call   FWORD PTR [ecx+0x76897e30]
  4125eb:	and    al,0x97
  4125ed:	pop    edx
  4125ee:	outs   dx,BYTE PTR ds:[esi]
  4125ef:	xor    eax,0xc8f53622
  4125f4:	inc    eax
  4125f5:	jno    0x412623
  4125f7:	ret    
  4125f8:	inc    edx
  4125f9:	mov    ebx,0xe197fa71
  4125fe:	js     0x412623
  412600:	mov    esi,0xbd9186e1
  412605:	mov    ebx,DWORD PTR [ecx-0x4b]
  412608:	mov    ah,0xb4
  41260a:	pop    edi
  41260b:	adc    BYTE PTR [edx],ah
  41260d:	dec    edi
  41260e:	int    0x6e
  412610:	mov    DWORD PTR [ebx],ecx
  412612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412613:	(bad)  
  412614:	fcomp  DWORD PTR [edi-0x5b4ebf79]
  41261a:	inc    esp
  41261b:	stc    
  41261c:	or     edx,ebx
  41261e:	sbb    al,BYTE PTR ds:0x53cc8f23
  412624:	loope  0x412650
  412626:	ror    BYTE PTR [eax],cl
  412628:	js     0x4125ae
  41262a:	cmp    dh,BYTE PTR [ebp-0x1c]
  41262d:	xchg   ecx,eax
  41262e:	sub    al,0xcd
  412630:	mov    es,WORD PTR [eax+eiz*1-0x210d215]
  412637:	add    dl,bl
  412639:	xchg   ebx,eax
  41263a:	add    eax,0x3bab078f
  41263f:	sahf   
  412640:	int3   
  412641:	sbb    bl,ah
  412643:	mov    esi,0x16e13729
  412648:	xchg   DWORD PTR [ebp-0x74b0aa70],esi
  41264e:	(bad)  
  41264f:	ret    
  412650:	int    0xa1
  412652:	sahf   
  412653:	or     BYTE PTR [esi+0x34e0d105],0xf1
  41265a:	cs jle 0x412616
  41265d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41265e:	mov    bh,0x54
  412660:	repnz sub ebp,DWORD PTR [edi+ecx*4+0x61]
  412665:	or     BYTE PTR [edi+0x25],bh
  412668:	add    eax,0x156911c9
  41266d:	and    bl,BYTE PTR [ebx+eiz*8+0x4b971ef4]
  412674:	in     eax,dx
  412675:	sub    eax,0x6a676089
  41267a:	fisttp DWORD PTR [edi+0x27]
  41267d:	sbb    BYTE PTR [ecx+edi*2+0xdf82fa9],al
  412684:	pop    edi
  412685:	aam    0x96
  412687:	dec    ebp
  412688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412689:	mov    cl,BYTE PTR [ecx]
  41268b:	push   0x2e
  41268d:	cld    
  41268e:	pop    esi
  41268f:	dec    edi
  412690:	xchg   ecx,eax
  412691:	xor    eax,0x1a8c03b8
  412696:	jge    0x412703
  412698:	mov    ecx,0x2b248cd8
  41269d:	jp     0x41266b
  41269f:	out    0x5c,eax
  4126a1:	lea    eax,[edx]
  4126a3:	cli    
  4126a4:	dec    ecx
  4126a5:	push   es
  4126a6:	(bad)  
  4126a7:	pop    esi
  4126a8:	inc    eax
  4126a9:	and    al,BYTE PTR [ecx+edi*1-0x31]
  4126ad:	data16 sbb cl,BYTE PTR [edi+0x4b1492ea]
  4126b4:	retf   
  4126b5:	daa    
  4126b6:	imul   BYTE PTR [esi+0x51]
  4126b9:	adc    al,0x22
  4126bb:	jle    0x41264f
  4126bd:	add    BYTE PTR [eax+0x68eb7fd6],0x85
  4126c4:	jecxz  0x41264f
  4126c6:	aas    
  4126c7:	cwde   
  4126c8:	add    eax,0x3ab38335
  4126cd:	pop    eax
  4126ce:	ins    BYTE PTR es:[edi],dx
  4126cf:	jmp    0x143c:0x78064db5
  4126d6:	sar    DWORD PTR [ebx-0xc9263e1],cl
  4126dc:	jmp    0x938f12b8
  4126e1:	test   DWORD PTR ds:0x9643755e,esi
  4126e7:	xchg   DWORD PTR [bx+di+0x7a34],edi
  4126ec:	loop   0x4126e4
  4126ee:	jbe    0x4126f4
  4126f0:	jnp    0x41272d
  4126f2:	fnstenv [edi-0xf55547b]
  4126f8:	push   esp
  4126f9:	and    al,0x5d
  4126fb:	clc    
  4126fc:	out    0x4b,eax
  4126fe:	adc    al,0x4
  412700:	push   es
  412701:	scas   eax,DWORD PTR es:[edi]
  412702:	inc    edx
  412703:	and    ch,BYTE PTR [esi+eax*1+0x75352e06]
  41270a:	out    0x21,eax
  41270c:	jmp    0x406eb031
  412711:	pop    esp
  412712:	rol    BYTE PTR [ebp-0x14e2d408],0xd8
  412719:	sbb    al,0x26
  41271b:	imul   edi,DWORD PTR [edi],0x61
  41271e:	(bad)  
  41271f:	dec    ebp
  412720:	jb     0x412795
  412722:	jne    0x412700
  412724:	inc    edi
  412725:	pop    eax
  412726:	cwde   
  412727:	(bad)  
  412728:	fstp   st(4)
  41272a:	rol    BYTE PTR [ecx+0x2e],cl
  41272d:	push   0xca6871aa
  412732:	rcl    DWORD PTR [edi-0x116c4602],1
  412738:	ret    
  412739:	cmp    cl,BYTE PTR [ecx+0x3c]
  41273c:	xor    esi,DWORD PTR ds:0xcf6c4b94
  412742:	mov    ds:0x78c15930,al
  412747:	mov    ecx,0x102be8b8
  41274c:	inc    ebp
  41274d:	popf   
  41274e:	gs mov ebp,0x8c9e3fd3
  412754:	ins    DWORD PTR es:[edi],dx
  412755:	inc    edx
  412756:	mov    al,0xef
  412758:	lds    esi,FWORD PTR [edi+0x66]
  41275b:	mov    ebp,DWORD PTR [ecx+edx*4]
  41275e:	bnd jge 0x4127bc
  412761:	sbb    cl,cl
  412763:	in     eax,0x2a
  412765:	shl    DWORD PTR [ecx+0x61],cl
  412768:	rcr    ah,1
  41276a:	shl    BYTE PTR [edx+0x6cd50ea4],1
  412770:	jmp    0x412729
  412772:	std    
  412773:	inc    edi
  412774:	into   
  412775:	test   al,0x1e
  412777:	jo     0x41279b
  412779:	cmp    DWORD PTR cs:[edx],edx
  41277c:	(bad)  
  41277d:	jbe    0x41273d
  41277f:	cmp    BYTE PTR [eax-0x5c9743af],bl
  412785:	pop    esp
  412786:	enter  0x5c4b,0x8b
  41278a:	pop    ebp
  41278b:	in     eax,0xa9
  41278d:	fld    QWORD PTR [edi-0x18]
  412790:	adc    ch,BYTE PTR [eax]
  412792:	inc    ebx
  412793:	fstp   QWORD PTR [edi]
  412795:	mov    al,ds:0x53be16ec
  41279a:	dec    ebx
  41279b:	fcmove st,st(5)
  41279d:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41279f:	push   ebx
  4127a0:	mov    ch,0xc
  4127a2:	shl    DWORD PTR [ebx],1
  4127a4:	and    al,0xe5
  4127a6:	stos   DWORD PTR es:[edi],eax
  4127a7:	or     dh,BYTE PTR [ecx+0x40e5f741]
  4127ad:	hlt    
  4127ae:	loop   0x412773
  4127b0:	add    al,0x1b
  4127b2:	adc    al,0x98
  4127b4:	mov    ah,0xe6
  4127b6:	std    
  4127b7:	or     eax,0xbf4d348a
  4127bc:	push   edi
  4127bd:	scas   eax,DWORD PTR es:[edi]
  4127be:	ins    DWORD PTR es:[edi],dx
  4127bf:	push   ss
  4127c0:	xchg   esp,eax
  4127c1:	cmp    BYTE PTR [ecx+0x73],ah
  4127c4:	imul   DWORD PTR [ecx-0x2a]
  4127c7:	push   ebx
  4127c8:	pushf  
  4127c9:	and    al,0x50
  4127cb:	cmp    DWORD PTR [ecx-0x1a62fa71],ebp
  4127d1:	mov    bh,0x39
  4127d3:	xchg   ebx,eax
  4127d4:	xchg   esi,eax
  4127d5:	pop    ecx
  4127d6:	in     eax,0xb2
  4127d8:	lods   al,BYTE PTR ds:[esi]
  4127d9:	(bad)  
  4127da:	out    0xb2,eax
  4127dc:	outs   dx,DWORD PTR ds:[esi]
  4127dd:	and    eax,DWORD PTR [esi+0x5da6da1]
  4127e3:	dec    esi
  4127e4:	xchg   esi,eax
  4127e5:	jle    0x4127a9
  4127e7:	mov    al,ds:0x319249d2
  4127ec:	and    BYTE PTR [edx],ch
  4127ee:	inc    esp
  4127ef:	sub    eax,edx
  4127f1:	add    dh,BYTE PTR [esi+ebp*4+0x7ec5fc39]
  4127f8:	stos   BYTE PTR es:[edi],al
  4127f9:	push   ss
  4127fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127fb:	mov    ah,0x22
  4127fd:	cs inc edi
  4127ff:	cmp    eax,0x1729b961
  412804:	inc    ecx
  412805:	pop    esi
  412806:	sub    ebx,DWORD PTR [edi]
  412808:	or     DWORD PTR [edx],eax
  41280a:	mov    ch,0xf3
  41280c:	sahf   
  41280d:	ficom  DWORD PTR [esi-0x41c311f4]
  412813:	lock fucomip st,st(1)
  412816:	out    dx,eax
  412817:	pop    es
  412818:	int    0x90
  41281a:	into   
  41281b:	add    al,0xc0
  41281d:	mov    dl,0x35
  41281f:	out    dx,eax
  412820:	sbb    dl,dh
  412822:	or     al,0xf
  412824:	dec    esi
  412825:	jp     0x4127e2
  412827:	(bad)  
  412828:	fs mov esp,0x5b8944cc
  41282e:	jmp    0x412869
  412830:	lea    ebp,[ecx+0x5c]
  412833:	inc    edx
  412834:	lahf   
  412835:	dec    ebx
  412836:	push   ebx
  412837:	pop    edi
  412838:	adc    edx,ebx
  41283a:	jo     0x412869
  41283c:	xchg   edx,eax
  41283d:	inc    DWORD PTR [edx+0x2e545281]
  412843:	pop    ebx
  412844:	in     eax,dx
  412845:	add    ah,BYTE PTR [edi-0x60]
  412848:	in     eax,dx
  412849:	js     0x41286c
  41284b:	push   0xac110b68
  412850:	into   
  412851:	aaa    
  412852:	idiv   BYTE PTR [edi-0x2734760a]
  412858:	or     al,0xba
  41285a:	loopne 0x412881
  41285c:	call   0x3f41:0x58580869
  412863:	inc    esi
  412864:	cmp    eax,0xc911e3e9
  412869:	fcmovnbe st,st(3)
  41286b:	ins    BYTE PTR es:[edi],dx
  41286c:	jmp    0x41289e
  41286e:	(bad)  
  41286f:	cmp    eax,0x3104b54
  412874:	sbb    al,0x91
  412876:	test   eax,0x7e7771a6
  41287b:	lahf   
  41287c:	add    bh,ah
  41287e:	fucom  st(6)
  412880:	iret   
  412881:	jbe    0x41283d
  412883:	(bad)  
  412885:	jns    0x412869
  412887:	test   bh,ah
  412889:	jecxz  0x412857
  41288b:	push   ebx
  41288c:	out    dx,al
  41288d:	xor    ch,BYTE PTR [edi+0x139d9dab]
  412893:	adc    ebx,edi
  412895:	out    0x9e,eax
  412897:	mov    al,0x4a
  412899:	mov    dl,0xb4
  41289b:	loop   0x41288d
  41289d:	sub    cl,BYTE PTR [esi]
  41289f:	cmp    bl,BYTE PTR [ebp-0x4c1d1f04]
  4128a5:	lods   eax,DWORD PTR ds:[esi]
  4128a6:	adc    DWORD PTR [edx+0x2c0ba1ea],ecx
  4128ac:	retf   0x3ae3
  4128af:	mov    dl,0x9f
  4128b1:	cs in  eax,dx
  4128b3:	fistp  DWORD PTR [ebp+0x2e21405f]
  4128b9:	and    DWORD PTR [edi+0x743912af],ebp
  4128bf:	sub    al,0xa2
  4128c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128c2:	aam    0x9b
  4128c4:	push   es
  4128c5:	stos   BYTE PTR es:[edi],al
  4128c6:	push   ss
  4128c7:	lods   eax,DWORD PTR ds:[esi]
  4128c8:	sub    BYTE PTR [ebx-0x6c],al
  4128cb:	adc    ebx,edi
  4128cd:	popa   
  4128ce:	sub    dl,0xc4
  4128d1:	sar    ah,0x90
  4128d4:	jnp    0x4128fb
  4128d6:	out    dx,al
  4128d7:	dec    ebx
  4128d8:	and    DWORD PTR [ecx],ebp
  4128da:	data16 test al,0x4
  4128dd:	lahf   
  4128de:	dec    ecx
  4128df:	and    dh,BYTE PTR [esi+0x10]
  4128e2:	xor    ebp,DWORD PTR [esi-0x15]
  4128e5:	je     0x412939
  4128e7:	mov    ?,WORD PTR gs:[ebx]
  4128ea:	ret    0xf781
  4128ed:	fs inc eax
  4128ef:	lods   al,BYTE PTR ds:[esi]
  4128f0:	dec    esp
  4128f1:	imul   ebx,DWORD PTR [ebx+0x51],0x1
  4128f5:	loope  0x412896
  4128f7:	into   
  4128f8:	adc    ebx,ebp
  4128fa:	bound  esi,QWORD PTR [esi+0x6919c4be]
  412900:	cwde   
  412901:	mov    ch,0x7d
  412903:	xor    BYTE PTR [ebx],bl
  412905:	inc    edx
  412906:	jae    0x4128ff
  412908:	mov    eax,ds:0x2f91e7e8
  41290d:	mov    dh,0x66
  41290f:	mov    esi,0xaa3fa644
  412914:	stos   DWORD PTR es:[edi],eax
  412915:	loopne 0x412962
  412917:	push   ebp
  412918:	fst    DWORD PTR [esi-0x1665dedf]
  41291e:	xor    eax,0x58b11714
  412923:	rcr    BYTE PTR [edi-0x2e],1
  412926:	inc    eax
  412927:	mov    bh,0x5
  412929:	pop    ebx
  41292a:	das    
  41292b:	cs repnz sbb edi,edx
  41292f:	sti    
  412930:	je     0x4128e3
  412932:	xchg   ecx,eax
  412933:	jg     0x4128b8
  412935:	lods   al,BYTE PTR ds:[esi]
  412936:	and    al,0x14
  412938:	stos   BYTE PTR es:[edi],al
  412939:	aam    0xda
  41293b:	popf   
  41293c:	cmp    ah,dh
  41293e:	push   esi
  41293f:	call   0x88f671b
  412944:	retf   0x7a84
  412947:	nop
  412948:	dec    esi
  412949:	in     eax,0xe8
  41294b:	push   ebp
  41294c:	push   edx
  41294d:	adc    bl,BYTE PTR ds:0xd7937193
  412953:	push   ebx
  412954:	out    0x1b,eax
  412956:	ret    
  412957:	or     BYTE PTR [edx+0x352dd49b],0x8d
  41295e:	sub    esi,DWORD PTR ds:0xad6bfc69
  412964:	jb     0x412973
  412966:	push   ebp
  412967:	and    al,BYTE PTR [edi]
  412969:	pop    esp
  41296a:	mov    ecx,0x180e9f91
  41296f:	ret    0xcc54
  412972:	xor    ch,BYTE PTR [eax-0xcd5c499]
  412978:	xchg   ecx,eax
  412979:	jbe    0x4129be
  41297b:	inc    ebx
  41297c:	rcl    DWORD PTR [eax-0x80],0xf9
  412980:	jg     0x412907
  412982:	fmul   st,st(0)
  412984:	xor    eax,0x77605d4d
  412989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41298a:	jg     0x412969
  41298c:	enter  0x2409,0x80
  412990:	out    0x8e,eax
  412992:	gs push edi
  412994:	or     al,0xc1
  412996:	shr    DWORD PTR [esi-0x1a],1
  412999:	or     ecx,DWORD PTR [edi-0x4d]
  41299c:	push   0xa223a1a2
  4129a1:	push   edx
  4129a2:	sahf   
  4129a3:	(bad)  
  4129a4:	sbb    eax,0x89c6e9e9
  4129a9:	push   esp
  4129aa:	sub    eax,0xd5b6acec
  4129af:	shl    DWORD PTR [eax+0x4ac7e7fb],1
  4129b5:	jno    0x4129b2
  4129b7:	and    eax,DWORD PTR [ecx+0xc61f4fc]
  4129bd:	fsubr  DWORD PTR [ebp+0x33]
  4129c0:	adc    DWORD PTR [edi],ecx
  4129c2:	sbb    esi,DWORD PTR [eax-0x2b]
  4129c5:	int3   
  4129c6:	mov    eax,ds:0x4d8affea
  4129cb:	mov    DWORD PTR [esi-0x738355fd],esi
  4129d1:	sbb    ebx,DWORD PTR [ebx]
  4129d3:	push   0x6d8fd2a7
  4129d8:	mov    ch,0xae
  4129da:	jb     0x4129a9
  4129dc:	mov    ds:0xe4e12d5a,al
  4129e1:	mov    ch,0xae
  4129e3:	pop    ss
  4129e4:	mov    eax,ds:0x26560f66
  4129e9:	mov    esi,0x1d4233ab
  4129ee:	fstp   QWORD PTR [esi]
  4129f0:	inc    ecx
  4129f1:	gs aad 0xec
  4129f4:	ja     0x412a10
  4129f6:	cmp    BYTE PTR [edx],0xab
  4129f9:	mov    dh,0xa5
  4129fb:	push   ecx
  4129fd:	mov    dh,0x9e
  4129ff:	jne    0x412a2f
  412a01:	mov    cl,0x28
  412a03:	xchg   ebx,eax
  412a04:	cmp    bh,BYTE PTR [edi]
  412a06:	mov    eax,0x8fa49889
  412a0b:	adc    al,0xbc
  412a0d:	stos   DWORD PTR es:[edi],eax
  412a0e:	stc    
  412a0f:	icebp  
  412a10:	cdq    
  412a11:	inc    cl
  412a13:	jmp    0xebe3e2b7
  412a18:	fdivr  st(7),st
  412a1a:	pop    ebx
  412a1b:	add    al,0x4e
  412a1d:	sbb    BYTE PTR [ecx+0x24],bh
  412a20:	or     al,0x51
  412a22:	push   esp
  412a23:	idiv   DWORD PTR [ebx-0x3d]
  412a26:	or     DWORD PTR [edi+eax*1],ecx
  412a29:	sub    al,ch
  412a2b:	xor    esi,DWORD PTR ss:[ebp+0x73]
  412a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a30:	jne    0x412a01
  412a32:	adc    DWORD PTR [edx+0x3f],0xffffff92
  412a36:	mov    bl,0x92
  412a38:	or     esp,DWORD PTR [ebp-0x23f0621]
  412a3e:	xchg   DWORD PTR [ebp+0x21],esp
  412a41:	push   ss
  412a42:	push   0xfffffff2
  412a44:	cs pop ecx
  412a46:	and    eax,0xcd2825bc
  412a4b:	ss adc ecx,0xd04e74ef
  412a52:	test   DWORD PTR [esi-0x41],ecx
  412a55:	dec    edi
  412a56:	xor    al,BYTE PTR [eax+0x38068e6d]
  412a5c:	xchg   ebx,ebp
  412a5e:	mov    al,0x67
  412a60:	bswap  edx
  412a62:	jbe    0x412a00
  412a64:	inc    ecx
  412a65:	scas   eax,DWORD PTR es:[edi]
  412a66:	mov    cl,ah
  412a68:	fcom   QWORD PTR [edx]
  412a6a:	or     BYTE PTR [esi-0x44],dh
  412a6d:	sar    DWORD PTR [ebp-0x6a],0x4f
  412a71:	jns    0x412a3d
  412a73:	stos   DWORD PTR es:[edi],eax
  412a74:	jo     0x412ad5
  412a76:	adc    BYTE PTR [edx-0x3d627518],cl
  412a7c:	popa   
  412a7d:	pop    esp
  412a7e:	adc    ebp,edx
  412a80:	sti    
  412a81:	shl    esp,1
  412a83:	push   0xe0bc9978
  412a88:	sub    BYTE PTR [eax+0x1bdec336],al
  412a8e:	and    BYTE PTR [ecx-0x7a],al
  412a91:	sub    edi,ecx
  412a93:	add    DWORD PTR [ebp-0x65a8ff16],ebx
  412a99:	pop    es
  412a9a:	sbb    BYTE PTR ds:0xd9f4b79e,al
  412aa0:	xor    al,0x1c
  412aa2:	adc    DWORD PTR [esi],edi
  412aa4:	xor    al,BYTE PTR [ebx-0x5b]
  412aa7:	(bad)  [edi-0x70e9b90b]
  412aad:	jno    0x412a4a
  412aaf:	sub    edi,DWORD PTR [edx]
  412ab1:	push   0x6588e147
  412ab6:	dec    esp
  412ab7:	jne    0x412ade
  412ab9:	in     al,0x36
  412abb:	push   ebp
  412abc:	xchg   edi,eax
  412abd:	(bad)  
  412abe:	ror    BYTE PTR [ebp+0x64],1
  412ac1:	stc    
  412ac2:	push   eax
  412ac3:	xlat   BYTE PTR ds:[ebx]
  412ac4:	lods   al,BYTE PTR ds:[esi]
  412ac5:	push   esp
  412ac6:	xchg   esp,eax
  412ac7:	out    dx,eax
  412ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ac9:	push   0x52
  412acb:	or     al,0xf1
  412acd:	jge    0x412ad5
  412acf:	loop   0x412a64
  412ad1:	sub    DWORD PTR [edx+0x427a7e7e],ecx
  412ad7:	mov    BYTE PTR [ecx+0x416d4b56],bl
  412add:	inc    esp
  412ade:	pop    ds
  412adf:	inc    esi
  412ae0:	pop    ebp
  412ae1:	push   eax
  412ae2:	in     eax,dx
  412ae3:	or     eax,0x9bbff562
  412ae8:	rol    DWORD PTR [esi+0x67487ae1],cl
  412aee:	jmp    0x412b0e
  412af0:	retf   0xb8d7
  412af3:	inc    ecx
  412af4:	mov    al,ds:0x4c93bf2d
  412af9:	imul   BYTE PTR [eax]
  412afb:	test   DWORD PTR [edx+0x76],edx
  412afe:	in     al,0x1e
  412b00:	mov    dh,0x39
  412b02:	sub    ah,BYTE PTR [eax-0x32389369]
  412b08:	xchg   ebx,eax
  412b09:	cmp    dh,dl
  412b0b:	pusha  
  412b0c:	lea    ebp,[ebp+0x11]
  412b0f:	(bad)  
  412b10:	cmp    al,0x61
  412b12:	and    esp,DWORD PTR [eax]
  412b14:	pop    es
  412b15:	imul   ebp,DWORD PTR [ebx+edi*1+0xc],0xffffffac
  412b1a:	das    
  412b1b:	jmp    0xfc4d468b
  412b20:	xor    eax,0x822b8414
  412b25:	jnp    0x412ac7
  412b27:	lds    ecx,FWORD PTR [ecx+edi*4]
  412b2a:	mov    al,ds:0x9131a826
  412b2f:	xchg   esp,eax
  412b30:	popf   
  412b31:	paddsw mm2,QWORD PTR ds:0x6e40f78e
  412b38:	sbb    DWORD PTR [ecx+0x19a21a78],0xffffffcb
  412b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b40:	jnp    0x412b2d
  412b42:	repnz sbb ch,BYTE PTR [esi]
  412b45:	enter  0x4d15,0xbd
  412b49:	push   0xffffff96
  412b4b:	inc    edi
  412b4c:	jmp    0x412b97
  412b4e:	test   DWORD PTR [edi],0x6c0dae15
  412b54:	sub    eax,0xed88203f
  412b59:	adc    al,0xb7
  412b5b:	les    edi,FWORD PTR [edi]
  412b5d:	jg     0x412b95
  412b5f:	test   DWORD PTR [ecx+0x7d],ebx
  412b62:	xor    al,0x50
  412b64:	(bad)  
  412b65:	xchg   ecx,eax
  412b66:	leave  
  412b67:	imul   esp,DWORD PTR [edi],0xffffff89
  412b6a:	aad    0x36
  412b6c:	or     al,0x8c
  412b6e:	shr    BYTE PTR [eax+0x5fe43e35],1
  412b74:	or     DWORD PTR [edi-0x4d],edi
  412b77:	push   ss
  412b78:	pop    edx
  412b79:	inc    esi
  412b7a:	adc    bh,BYTE PTR [ecx-0x48]
  412b7d:	scas   al,BYTE PTR es:[edi]
  412b7e:	pop    ebx
  412b7f:	loope  0x412bfe
  412b81:	mov    bh,0x9
  412b83:	xchg   esp,eax
  412b84:	inc    eax
  412b85:	popf   
  412b86:	popf   
  412b87:	clc    
  412b88:	push   es
  412b89:	call   0x587ae414
  412b8e:	je     0x412b5f
  412b90:	mov    esi,0xe4ade3e
  412b95:	sbb    BYTE PTR [edi],0xa1
  412b98:	mov    DWORD PTR [esi-0x5110d492],esp
  412b9e:	(bad)  
  412b9f:	add    DWORD PTR [ebx-0x96110e1],ebp
  412ba5:	mov    edi,0x5467cecf
  412baa:	pop    ecx
  412bab:	push   ss
  412bac:	xchg   esp,eax
  412bad:	test   DWORD PTR [eax],esp
  412baf:	cmp    bh,BYTE PTR [ecx-0x5a2b3985]
  412bb5:	push   ecx
  412bb6:	xchg   esi,eax
  412bb7:	test   DWORD PTR [edx],0xd6489531
  412bbd:	enter  0xdc93,0xb
  412bc1:	mov    bl,0x10
  412bc3:	adc    esp,DWORD PTR [edx-0x6cc5f7a4]
  412bc9:	out    dx,al
  412bca:	pop    es
  412bcb:	cmp    bh,BYTE PTR [edx-0x44]
  412bce:	push   ss
  412bcf:	mov    ss,ecx
  412bd1:	add    al,0x5d
  412bd3:	aam    0xe1
  412bd5:	push   es
  412bd6:	aam    0x33
  412bd8:	ficom  DWORD PTR [eax]
  412bda:	cld    
  412bdb:	jbe    0x412c04
  412bdd:	xor    DWORD PTR [ebp-0x50],edi
  412be0:	push   ss
  412be1:	jns    0x412b9c
  412be3:	sbb    BYTE PTR [esi+0x3aacb341],ch
  412be9:	add    eax,0xa8bef78c
  412bee:	mov    ebx,0x76c49a9e
  412bf3:	push   esp
  412bf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bf5:	ret    0xac19
  412bf8:	rcl    BYTE PTR [ecx-0x32],0xa8
  412bfc:	push   eax
  412bfd:	inc    esp
  412bfe:	(bad)  
  412bff:	std    
  412c00:	jbe    0x412bdb
  412c02:	hlt    
  412c03:	dec    ebp
  412c04:	mov    al,ds:0x9fd3c131
  412c09:	jp     0x412c35
  412c0b:	imul   ecx
  412c0d:	lea    ebp,[edi+0x2e]
  412c10:	nop
  412c11:	retf   0x606f
  412c14:	mov    cl,0x86
  412c17:	in     eax,0x55
  412c19:	retf   
  412c1a:	jne    0x412c4d
  412c1c:	in     eax,dx
  412c1d:	fisub  DWORD PTR [ebx+0x760d681b]
  412c23:	xchg   ecx,eax
  412c24:	popf   
  412c25:	popa   
  412c26:	loope  0x412c5d
  412c28:	or     BYTE PTR [ebx+0x3a299aa],al
  412c2e:	fcmovne st,st(4)
  412c30:	mov    fs,WORD PTR [edi+0x17f44c5c]
  412c36:	arpl   bx,bx
  412c38:	mov    ?,WORD PTR [ebx+0x2]
  412c3b:	push   ss
  412c3c:	lods   al,BYTE PTR ds:[esi]
  412c3d:	out    0x5a,al
  412c3f:	sub    ecx,ebx
  412c41:	and    eax,0x9d45b35a
  412c46:	pop    ecx
  412c47:	mov    cl,0xee
  412c49:	mov    ebp,0x51d2489a
  412c4e:	test   DWORD PTR [ecx-0x1],ebx
  412c51:	adc    al,0xbf
  412c53:	push   cs
  412c54:	mov    ebp,0x178726d9
  412c59:	jmp    DWORD PTR [edi+0x1c61c80f]
  412c5f:	fld    QWORD PTR [edi+0x73]
  412c62:	mov    ds:0x6ea2cb6d,eax
  412c67:	dec    cx
  412c69:	shl    BYTE PTR [ebp+0x71606633],0x97
  412c70:	not    bh
  412c72:	dec    ebx
  412c73:	imul   ecx,ecx,0x843785ce
  412c79:	mov    edi,0xe1703a03
  412c7e:	inc    ecx
  412c7f:	push   ebx
  412c80:	mov    dh,0x4a
  412c82:	(bad)  
  412c83:	mov    ebx,0x1ac9def9
  412c88:	mov    ch,0xa7
  412c8a:	and    BYTE PTR [ebx-0x6b5a8a3c],bl
  412c90:	jl     0x412ce5
  412c92:	inc    ebx
  412c93:	fs pop ds
  412c95:	sub    eax,0x30c91d35
  412c9a:	icebp  
  412c9b:	and    ecx,esi
  412c9d:	fiadd  WORD PTR [esi]
  412c9f:	das    
  412ca0:	popf   
  412ca1:	out    dx,eax
  412ca2:	lods   al,BYTE PTR ds:[esi]
  412ca3:	in     al,0x3c
  412ca5:	sub    DWORD PTR [ebx+eiz*8-0x6799c544],0xc0758531
  412cb0:	mov    esp,DWORD PTR [edx]
  412cb2:	add    esp,DWORD PTR [ebp-0x28d11043]
  412cb8:	and    DWORD PTR [ebx-0x7d7c7ecb],ecx
  412cbe:	jecxz  0x412d2a
  412cc0:	sbb    eax,0x21aaaefe
  412cc5:	jmp    0x877f2963
  412cca:	mov    cl,0x99
  412ccc:	mov    bl,0x1a
  412cce:	pop    edi
  412ccf:	add    al,0x0
  412cd1:	cli    
  412cd2:	test   DWORD PTR [ebx],esi
  412cd4:	daa    
  412cd5:	push   ecx
  412cd6:	inc    edx
  412cd7:	fmul   st,st(1)
  412cd9:	mov    al,ds:0x777f36cb
  412cde:	xchg   eax,ebp
  412ce0:	sbb    ecx,DWORD PTR [eax-0x5fb1f1a1]
  412ce6:	dec    esp
  412ce7:	in     eax,0xa2
  412ce9:	cmp    eax,0xa8c7b081
  412cee:	fnstenv [edx+eax*1]
  412cf1:	mov    edi,DWORD PTR [esi]
  412cf3:	test   DWORD PTR [esi+0x73f83c75],0x56d8faac
  412cfd:	out    dx,al
  412cfe:	push   ds
  412cff:	xor    DWORD PTR [ebx-0x43],0x86053c3e
  412d06:	fiadd  WORD PTR [edx+edi*1-0x5f]
  412d0a:	repnz or bh,BYTE PTR [ebp+edx*1+0x68d2291]
  412d12:	(bad)  
  412d13:	cmc    
  412d14:	mov    esi,0x1a70b524
  412d19:	test   eax,0x18265db5
  412d1e:	fadd   DWORD PTR [esi+ecx*4+0x19]
  412d22:	xor    bh,bl
  412d24:	sbb    DWORD PTR [eax+0xd294bff],edi
  412d2a:	rcr    DWORD PTR [eax+0x32],cl
  412d2d:	dec    ebp
  412d2e:	rcr    esp,1
  412d30:	stos   DWORD PTR es:[edi],eax
  412d31:	popf   
  412d32:	push   edi
  412d33:	xlat   BYTE PTR ds:[ebx]
  412d34:	jnp    0x412ceb
  412d36:	gs popf 
  412d38:	imul   esi,DWORD PTR [edi+0x2442df6d],0x25e0dcf7
  412d42:	sahf   
  412d43:	push   eax
  412d44:	clc    
  412d45:	pop    ebp
  412d46:	std    
  412d47:	push   cs
  412d48:	xchg   ecx,eax
  412d49:	push   0x28
  412d4b:	in     al,dx
  412d4c:	inc    edi
  412d4d:	or     BYTE PTR [edi+0x52],ah
  412d50:	ja     0x412ce9
  412d52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d53:	fst    DWORD PTR [edx]
  412d55:	and    DWORD PTR [ebp+0x3afd99a3],edi
  412d5b:	call   0xd550:0xb3d58629
  412d62:	pop    ebx
  412d63:	repnz and ch,BYTE PTR [edi-0x1d]
  412d67:	jbe    0x412d13
  412d69:	pusha  
  412d6a:	cmp    al,0xd
  412d6c:	(bad)
  412d70:	jbe    0x412d34
  412d72:	rcl    DWORD PTR [esi-0x48df23c9],0xb0
  412d79:	ins    DWORD PTR es:[edi],dx
  412d7a:	jg     0x412d9c
  412d7c:	dec    esp
  412d7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d7e:	xchg   esi,eax
  412d7f:	fwait
  412d80:	mov    ds:0x52483678,al
  412d85:	adc    edx,DWORD PTR [esi]
  412d87:	and    al,0xff
  412d89:	dec    edi
  412d8a:	mov    ebx,0x4123ff00
  412d8f:	lds    ebx,FWORD PTR [edi-0x2b]
  412d92:	cmpps  xmm6,XMMWORD PTR [ecx],0x56
  412d96:	shl    DWORD PTR [edx-0x62],0x64
  412d9a:	dec    eax
  412d9b:	mov    cl,BYTE PTR [edx+edi*8+0x78]
  412d9f:	or     DWORD PTR [ebp+0x4defaf9a],ebx
  412da5:	int    0x80
  412da7:	or     BYTE PTR [ebx+eiz*4-0x5],ah
  412dab:	ret    
  412dac:	jle    0x412d61
  412dae:	(bad)  
  412daf:	jns    0x412de5
  412db1:	cmp    ch,al
  412db3:	pop    esi
  412db4:	jmp    0x412d47
  412db6:	adc    al,BYTE PTR [edx-0x48]
  412db9:	jp     0x412dba
  412dbb:	cmc    
  412dbc:	fnstsw WORD PTR [edi+ebp*4-0x488d89a6]
  412dc3:	pop    ds
  412dc4:	(bad)  
  412dc5:	shl    DWORD PTR [ebx-0x1],cl
  412dc8:	mov    ebx,0x5fcb1fde
  412dcd:	call   0x4b057e5d
  412dd2:	mov    ds:0xde61aabf,eax
  412dd7:	outs   dx,DWORD PTR ds:[esi]
  412dd8:	call   0x92ac:0x7455f305
  412ddf:	mov    esp,0xbab2bbd1
  412de4:	xchg   ecx,eax
  412de5:	sub    al,0x55
  412de7:	pop    ecx
  412de8:	loopne 0x412e5d
  412dea:	and    eax,0x7fe0283
  412def:	sub    ecx,DWORD PTR [ebp-0x71]
  412df2:	mov    ecx,DWORD PTR [ebx+ecx*4+0x10]
  412df6:	and    BYTE PTR [esi],bh
  412df8:	arpl   WORD PTR [eax-0x4af8b9dd],sp
  412dfe:	cmp    esi,DWORD PTR [edi+0x74c2aa0d]
  412e04:	jl     0x412dc4
  412e06:	mov    cl,0x9c
  412e08:	out    0x26,al
  412e0a:	push   edi
  412e0b:	sbb    al,0xc4
  412e0d:	daa    
  412e0e:	cwde   
  412e0f:	dec    eax
  412e10:	loopne 0x412df3
  412e12:	jae    0x412da7
  412e14:	sbb    BYTE PTR [ecx-0x72],0x7e
  412e18:	ret    
  412e19:	cmp    eax,0xc5349444
  412e1e:	sbb    DWORD PTR [esi],esp
  412e20:	add    edi,DWORD PTR [esi+eiz*4+0x3c]
  412e24:	aad    0x9c
  412e26:	arpl   WORD PTR [esi-0x56226960],di
  412e2c:	mov    edx,0x87fa5658
  412e31:	retf   
  412e32:	cmp    cl,bh
  412e34:	mov    ds:0xfbac41a9,eax
  412e39:	nop
  412e3a:	push   ebp
  412e3b:	lock xor BYTE PTR [ebx+0x5c],dl
  412e3f:	push   eax
  412e40:	sar    bl,cl
  412e42:	and    edx,edx
  412e44:	push   ss
  412e45:	lahf   
  412e46:	xchg   ebx,eax
  412e47:	sub    BYTE PTR [edi-0x41],dl
  412e4a:	adc    ecx,DWORD PTR ds:0x5e98ea31
  412e50:	jae    0x412e39
  412e52:	xchg   BYTE PTR [edx+ebp*4+0x79e0b38d],bh
  412e59:	mov    esp,eax
  412e5b:	data16 mov ds:0xafd00c75,al
  412e61:	inc    ebp
  412e62:	jmp    0x447b:0x85360c69
  412e69:	test   BYTE PTR [eax-0x701d487d],dl
  412e6f:	dec    ecx
  412e70:	sbb    eax,0x6baab2a5
  412e75:	pop    ds
  412e76:	mov    dl,0x6e
  412e78:	retf   0x769f
  412e7b:	aaa    
  412e7c:	or     DWORD PTR [edi+0x5e],ebx
  412e7f:	out    dx,al
  412e80:	mov    al,ds:0x7e9a369a
  412e85:	out    dx,al
  412e86:	(bad)  
  412e87:	(bad)  
  412e88:	pop    ss
  412e89:	fdivr  QWORD PTR [ebx+eiz*8-0x222afe09]
  412e90:	ss aas 
  412e92:	mov    eax,0xc54720c1
  412e97:	retf   
  412e98:	ret    0xa432
  412e9b:	mov    cl,0x31
  412e9d:	lahf   
  412e9e:	daa    
  412e9f:	cmp    ecx,DWORD PTR [ecx-0x6a]
  412ea2:	add    eax,0x118d9802
  412ea7:	and    ah,BYTE PTR [edx+0xe8d4e3b]
  412ead:	sar    BYTE PTR [esi],1
  412eaf:	xchg   esp,eax
  412eb0:	sub    ah,BYTE PTR [edx]
  412eb2:	jecxz  0x412ef4
  412eb4:	test   DWORD PTR [esi],edx
  412eb6:	cmp    al,0xcf
  412eb8:	push   es
  412eb9:	inc    edi
  412eba:	xor    al,0xd
  412ebc:	ins    BYTE PTR es:[edi],dx
  412ebd:	or     eax,esp
  412ebf:	or     ecx,DWORD PTR [edi-0xb]
  412ec2:	(bad)  
  412ec3:	sbb    al,0x72
  412ec5:	jo     0x412ed1
  412ec7:	js     0x412e4d
  412ec9:	push   ebx
  412eca:	xor    al,0x20
  412ecc:	mov    ch,0xd1
  412ece:	mov    ah,0x1
  412ed0:	mov    esi,0x808cb32d
  412ed5:	fidivr WORD PTR [edx]
  412ed7:	add    ah,BYTE PTR [ebx]
  412ed9:	mov    fs,WORD PTR [eax]
  412edb:	or     BYTE PTR [edx+0x48],bl
  412ede:	pop    ss
  412edf:	jg     0x412efe
  412ee1:	cmc    
  412ee2:	fldenv fs:[ebx]
  412ee5:	xchg   dl,al
  412ee7:	and    ecx,DWORD PTR [edx]
  412ee9:	fstp   DWORD PTR [eax+edx*1-0x3808bc32]
  412ef0:	adc    al,0x22
  412ef2:	stos   BYTE PTR es:[edi],al
  412ef3:	pusha  
  412ef4:	mov    cl,0x2c
  412ef6:	test   DWORD PTR [ebx+eiz*1+0x7e9c248],ebp
  412efd:	push   es
  412efe:	push   es
  412eff:	int3   
  412f00:	fstp   TBYTE PTR [eax+esi*1+0x7f6fa67d]
  412f07:	mov    esi,0x148c877c
  412f0c:	pop    esi
  412f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f0e:	jp     0x412ec8
  412f10:	in     eax,0x43
  412f12:	addr16 dec ebx
  412f14:	je     0x412f27
  412f16:	sub    ch,bh
  412f18:	retf   0x9998
  412f1b:	push   eax
  412f1c:	mov    ebp,0xbc1f570c
  412f21:	mov    esi,0x738654af
  412f26:	into   
  412f27:	sbb    al,0x1f
  412f29:	xchg   BYTE PTR [ebp+0x23],bl
  412f2c:	mov    eax,ds:0x343b496
  412f31:	dec    esi
  412f32:	pop    edx
  412f33:	fs scas ax,WORD PTR es:[edi]
  412f36:	mov    ch,0xd
  412f38:	fwait
  412f39:	aad    0xb1
  412f3b:	xchg   esp,eax
  412f3c:	repz aad 0xb8
  412f3f:	ss out 0x22,eax
  412f42:	push   edi
  412f43:	push   ss
  412f44:	cwde   
  412f45:	add    bl,0x15
  412f48:	adc    al,0x13
  412f4a:	fmul   st(1),st
  412f4c:	and    eax,0x67dbaea6
  412f51:	xor    edx,DWORD PTR [ebp-0x6b]
  412f54:	(bad)  
  412f55:	and    BYTE PTR [ebx],bh
  412f57:	(bad)  
  412f58:	dec    esi
  412f59:	and    dl,bh
  412f5b:	xor    dh,BYTE PTR [eax+0x20]
  412f5e:	xor    dh,0xad
  412f61:	cmp    al,0x38
  412f63:	nop
  412f64:	add    al,0xe0
  412f66:	dec    ebx
  412f67:	pop    DWORD PTR [edi-0x4f13a8cb]
  412f6d:	xchg   ebx,eax
  412f6e:	mov    ah,0xbf
  412f70:	mov    ebp,0x9d0c0d98
  412f75:	mov    BYTE PTR [edx+0x76fd14ac],cl
  412f7b:	mov    al,0x1a
  412f7d:	lods   eax,DWORD PTR ds:[esi]
  412f7e:	sub    bh,al
  412f80:	call   0x189d:0x5ce8d500
  412f87:	popf   
  412f88:	inc    esi
  412f89:	adc    DWORD PTR [edi-0x39],0xd4fdd053
  412f90:	adc    eax,0xb91944aa
  412f95:	adc    DWORD PTR [edi],0xffffffb4
  412f98:	test   al,0xa5
  412f9a:	arpl   WORD PTR [edx+edi*8-0x2b0fc04e],di
  412fa1:	xor    cl,dh
  412fa3:	dec    edx
  412fa4:	and    edx,ebx
  412fa6:	cmp    al,cl
  412fa8:	(bad)  
  412fa9:	lods   eax,DWORD PTR ds:[esi]
  412faa:	and    bh,BYTE PTR [esi]
  412fac:	nop
  412fad:	lea    ebx,[esi]
  412faf:	or     ah,BYTE PTR [eax]
  412fb1:	and    al,0x90
  412fb3:	cs aam 0xa5
  412fb6:	inc    esp
  412fb7:	ret    
  412fb8:	pop    ebp
  412fb9:	(bad)  
  412fba:	fmul   QWORD PTR [edx-0x2f]
  412fbd:	test   BYTE PTR [ecx-0x2d3ffd2b],al
  412fc3:	inc    ecx
  412fc4:	int3   
  412fc5:	or     al,0xa0
  412fc7:	push   edx
  412fc8:	cmc    
  412fc9:	nop
  412fca:	mov    ds:0xbe828a12,eax
  412fcf:	jmp    0xb4ee5c7a
  412fd4:	push   edx
  412fd5:	mov    eax,ds:0x1975f53e
  412fda:	xor    BYTE PTR [ebx],cl
  412fdc:	xor    DWORD PTR [ebx-0x54],edi
  412fdf:	test   BYTE PTR [ebx-0x39457bca],ah
  412fe5:	jbe    0x412fc5
  412fe7:	scas   al,BYTE PTR es:[edi]
  412fe8:	and    al,BYTE PTR [ebx]
  412fea:	push   es
  412feb:	dec    ecx
  412fec:	pop    esi
  412fed:	mov    ds:0x5c66b50f,eax
  412ff2:	push   edx
  412ff3:	jl     0x412ff1
  412ff5:	jnp    0x413001
  412ff7:	enter  0x596d,0x1b
  412ffb:	mov    ebx,0xec3657f6
  413000:	sbb    ebp,DWORD PTR [edx+0x57]
  413003:	fisubr WORD PTR [ecx-0x47]
  413006:	das    
  413007:	in     al,0x68
  413009:	xchg   esp,eax
  41300a:	lds    eax,FWORD PTR [esp+edx*2-0x58]
  41300e:	mov    ss:0x650a27a4,al
  413014:	test   DWORD PTR [ebx+0xd9208ab],ebx
  41301a:	fild   QWORD PTR [ebx+0x5d7e41d0]
  413020:	or     esi,DWORD PTR [edx+esi*8+0x6e]
  413024:	pop    es
  413025:	jle    0x413016
  413027:	lea    ebx,[edx-0x2e21d1ed]
  41302d:	dec    edx
  41302e:	into   
  41302f:	prefetch (bad)
  413030:	or     eax,0x8a8255c3
  413035:	fs sub al,0x78
  413038:	inc    edx
  413039:	test   bh,ah
  41303b:	aaa    
  41303c:	scas   eax,DWORD PTR es:[edi]
  41303d:	or     eax,DWORD PTR ds:0x19eae443
  413043:	jae    0x413041
  413045:	inc    ebp
  413046:	jmp    0x56e126d4
  41304b:	mov    ecx,0xce952ab
  413050:	fs or  al,0x2d
  413053:	retf   0xb4de
  413056:	pop    ss
  413057:	sbb    edi,DWORD PTR [edx]
  413059:	(bad)  
  41305a:	in     eax,0x10
  41305c:	xchg   ebx,eax
  41305d:	gs test eax,0xc7bd562e
  413063:	and    edx,edi
  413065:	aad    0x2a
  413067:	jg     0x4130a3
  413069:	adc    BYTE PTR [esi+0x50],ah
  41306c:	push   ss
  41306d:	add    al,0x8d
  41306f:	pop    edi
  413070:	cs mov bh,0x81
  413073:	or     esp,DWORD PTR [ebx]
  413075:	pop    ss
  413076:	test   eax,0x1de1f90a
  41307b:	cmp    eax,0x63fe641e
  413080:	pop    edx
  413081:	xlat   BYTE PTR ds:[ebx]
  413082:	or     al,BYTE PTR [ecx-0x2ba491fa]
  413088:	arpl   WORD PTR [ecx+0x32],bp
  41308b:	sbb    al,0xfb
  41308d:	bound  esi,QWORD PTR [ebx-0x6d]
  413090:	stc    
  413091:	ror    dh,1
  413093:	add    esp,DWORD PTR [ecx]
  413095:	mov    eax,0x6f930fe4
  41309a:	pop    ecx
  41309b:	push   ebx
  41309c:	or     dl,ah
  41309e:	jecxz  0x413043
  4130a0:	push   edi
  4130a1:	outs   dx,DWORD PTR ds:[esi]
  4130a2:	sub    DWORD PTR [ebx-0x78],esp
  4130a5:	shr    dl,cl
  4130a7:	into   
  4130a8:	sahf   
  4130a9:	pop    esi
  4130aa:	mov    DWORD PTR ss:[ebx+ebx*2-0x41],esi
  4130af:	nop
  4130b0:	xor    eax,0x52e6445e
  4130b5:	in     eax,0x61
  4130b7:	ds in  eax,dx
  4130b9:	xor    BYTE PTR [ebx],0x93
  4130bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130bd:	pop    ds
  4130be:	and    DWORD PTR ds:0xaf793a9c,edx
  4130c4:	iret   
  4130c5:	add    DWORD PTR [esi],ebp
  4130c7:	pop    DWORD PTR [ebx+0x6a4dc74f]
  4130cd:	mov    ah,0xfd
  4130cf:	adc    BYTE PTR [ebx],0x5d
  4130d2:	fscale 
  4130d4:	(bad)  
  4130d5:	in     al,dx
  4130d6:	add    DWORD PTR [ebx+eax*2+0x3],ecx
  4130da:	outs   dx,BYTE PTR ds:[esi]
  4130db:	adc    eax,0xde5550a5
  4130e0:	fidiv  DWORD PTR [ebx+0x7d]
  4130e3:	push   ds
  4130e4:	adc    esi,DWORD PTR [eax-0x48bd265]
  4130ea:	fcomp  QWORD PTR [eax]
  4130ec:	xlat   BYTE PTR ds:[ebx]
  4130ed:	test   DWORD PTR [eax],0xc2d13cf9
  4130f3:	push   ecx
  4130f4:	mov    esp,0x3e7e5469
  4130f9:	pop    es
  4130fa:	cmp    BYTE PTR [ebx*1-0x36b4ecf7],0x8
  413102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413103:	add    BYTE PTR [ebx],bl
  413105:	inc    esi
  413106:	and    eax,0x69fef1ad
  41310b:	dec    esp
  41310c:	repnz push esp
  41310e:	aas    
  41310f:	jmp    0x4130bc
  413111:	in     al,0xc1
  413113:	lods   eax,DWORD PTR ds:[esi]
  413114:	push   ecx
  413115:	mov    bl,0x9c
  413117:	fist   WORD PTR [edx-0x338625e9]
  41311d:	or     eax,0xe828806d
  413122:	stc    
  413123:	sub    ecx,edi
  413125:	xchg   BYTE PTR [ebp+0x3b965939],ah
  41312b:	add    esi,0x2ea0cf64
  413131:	or     dh,ah
  413133:	fnstenv [ecx+0x6c76859b]
  413139:	inc    edx
  41313a:	fs mov edi,0x8de3b13f
  413140:	ret    
  413141:	or     bh,dl
  413143:	aas    
  413144:	push   ebx
  413145:	(bad)  
  413147:	inc    ecx
  413148:	idiv   DWORD PTR [ebx]
  41314a:	xchg   BYTE PTR [eax+0x693621b6],bl
  413150:	arpl   WORD PTR [eax-0x73818e8e],si
  413156:	add    esi,ebx
  413158:	or     al,0x17
  41315a:	(bad)  
  41315b:	jmp    0x76468478
  413160:	das    
  413161:	mov    dl,0xed
  413163:	ds leave 
  413165:	mov    BYTE PTR [ebp+0x2138404c],bh
  41316b:	cmp    DWORD PTR [eax+0x4e],eax
  41316e:	nop
  41316f:	cmp    dh,BYTE PTR [edi+0x72]
  413172:	jno    0x41316c
  413174:	loope  0x413165
  413176:	push   0xffffff9a
  413178:	lods   eax,DWORD PTR ds:[esi]
  413179:	mov    ecx,0xc261a12b
  41317e:	pop    ebx
  41317f:	repz sub dl,BYTE PTR [ecx]
  413182:	into   
  413183:	adc    eax,0x3e976f1c
  413188:	sub    eax,0x95f5fe5e
  41318d:	je     0x41311a
  41318f:	aad    0x38
  413191:	mov    ds:0x8bece157,eax
  413196:	ret    0x1ca2
  413199:	fistp  DWORD PTR ds:0xcce01912
  41319f:	out    dx,al
  4131a0:	sub    al,0xb3
  4131a2:	mov    ebp,0xa3945462
  4131a7:	dec    eax
  4131a8:	jne    0x413196
  4131aa:	aas    
  4131ab:	adc    edi,eax
  4131ad:	inc    edi
  4131ae:	ret    0xc54e
  4131b1:	in     al,0x5e
  4131b3:	fs pop gs
  4131b6:	jae    0x413225
  4131b8:	mov    eax,0x8d9cec24
  4131bd:	and    DWORD PTR [ecx+0x30ffb746],eax
  4131c3:	lock sbb cl,BYTE PTR [ecx]
  4131c6:	jge    0x413213
  4131c8:	mov    esi,0x9e420205
  4131cd:	lea    eax,[edx+0x31]
  4131d0:	clc    
  4131d1:	push   eax
  4131d2:	add    bh,BYTE PTR [edx]
  4131d4:	fild   QWORD PTR [eax]
  4131d6:	mov    al,ds:0x5992b531
  4131db:	sub    eax,0x672d5a77
  4131e0:	dec    ecx
  4131e1:	scas   al,BYTE PTR es:[edi]
  4131e2:	sbb    cl,al
  4131e4:	or     bh,BYTE PTR [ebx-0x601563cd]
  4131ea:	or     BYTE PTR [ebx-0x65],dh
  4131ed:	mov    eax,0x2bfe47eb
  4131f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131f3:	sub    edi,DWORD PTR [eax]
  4131f5:	dec    ecx
  4131f6:	xor    al,0xd1
  4131f8:	cld    
  4131f9:	fcomp  DWORD PTR [edx]
  4131fb:	pop    esp
  4131fc:	mov    ds:0x9e1acf3e,eax
  413201:	scas   eax,DWORD PTR es:[edi]
  413202:	dec    ebx
  413203:	test   eax,0x121ea167
  413208:	sbb    DWORD PTR [ebp+0x7a24a46d],eax
  41320e:	sbb    DWORD PTR [edi-0x13cc54b4],eax
  413214:	mov    ch,0x6d
  413216:	movq   QWORD PTR [eax+0xd95bca1],mm5
  41321d:	push   ebp
  41321e:	cwde   
  41321f:	stc    
  413220:	lock repz fs sub eax,0xefb86e14
  413228:	gs push ebp
  41322a:	sub    esp,DWORD PTR [ebp-0x538f485e]
  413230:	mov    cl,0x9a
  413232:	mov    ecx,0x994d9992
  413237:	inc    edx
  413238:	ret    
  413239:	mov    ah,0xdf
  41323b:	pop    ss
  41323c:	scas   al,BYTE PTR es:[edi]
  41323d:	inc    edi
  41323e:	ins    DWORD PTR es:[edi],dx
  41323f:	icebp  
  413240:	scas   al,BYTE PTR es:[edi]
  413241:	mov    cl,0xa8
  413243:	inc    ecx
  413244:	repnz inc edi
  413246:	mov    ch,0x95
  413248:	in     eax,dx
  413249:	xor    DWORD PTR [eax],0x17722420
  41324f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413250:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413251:	fmulp  st(5),st
  413253:	in     al,0xb7
  413255:	xchg   esi,eax
  413256:	das    
  413257:	xor    BYTE PTR [esi],ah
  413259:	xchg   BYTE PTR [eax],ah
  41325b:	or     DWORD PTR [edi+0x22d32f55],0xb
  413262:	xor    edi,DWORD PTR [ecx+0x5edd78a1]
  413268:	add    eax,0x74cdfffe
  41326d:	test   eax,0x3cdb6d1
  413272:	rcl    BYTE PTR [ecx-0x3b],1
  413275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413276:	xchg   DWORD PTR [eax],edx
  413278:	dec    edi
  413279:	sbb    eax,0xe7460f5b
  41327e:	out    0x16,eax
  413280:	fcmove st,st(1)
  413282:	cmp    ebx,ecx
  413284:	cld    
  413285:	loope  0x413271
  413287:	pop    esi
  413288:	jo     0x413293
  41328a:	sub    al,0x4c
  41328c:	cs imul ah
  41328f:	or     eax,ebx
  413291:	fimul  WORD PTR [edi+0x2c1eae09]
  413297:	adc    DWORD PTR [edx+edx*8+0x23f38efa],0xc3cd3416
  4132a2:	sbb    eax,0xe289300
  4132a7:	mov    dh,0xb8
  4132a9:	xchg   edx,eax
  4132aa:	inc    edi
  4132ab:	xchg   ebp,eax
  4132ac:	push   edx
  4132ad:	and    dl,dh
  4132af:	xchg   DWORD PTR [eax-0x60cdfe0d],ebp
  4132b5:	leave  
  4132b6:	xchg   edx,eax
  4132b7:	outs   dx,BYTE PTR ds:[esi]
  4132b8:	shl    DWORD PTR [ebx+0x66],0x3c
  4132bc:	push   ebx
  4132bd:	call   0xf92:0x2174115d
  4132c4:	mov    ebx,0x500fd00e
  4132c9:	call   0x37273e3d
  4132ce:	xor    edx,eax
  4132d0:	inc    eax
  4132d1:	cmp    DWORD PTR [edi+edx*1+0x5c231583],edi
  4132d8:	xor    eax,0xa4c6b35a
  4132dd:	cmp    ah,BYTE PTR [esi]
  4132df:	xchg   edx,eax
  4132e0:	adc    eax,0x20e09f15
  4132e5:	mov    edi,0xc166a640
  4132ea:	(bad)  
  4132eb:	cmp    DWORD PTR [edi],eax
  4132ed:	cdq    
  4132ee:	es xchg ebp,eax
  4132f0:	mov    al,ds:0x3174d319
  4132f5:	jo     0x413321
  4132f7:	ins    BYTE PTR es:[edi],dx
  4132f8:	pop    ecx
  4132f9:	sbb    eax,DWORD PTR [edx+0x579c442a]
  4132ff:	dec    edx
  413300:	inc    edx
  413301:	inc    eax
  413302:	je     0x4132d9
  413304:	sbb    DWORD PTR [esi],edx
  413306:	mov    ds,WORD PTR [ecx+0x2e]
  413309:	cmp    bl,cl
  41330b:	add    ch,BYTE PTR [ecx]
  41330d:	loopne 0x413317
  41330f:	mov    dl,0x2
  413311:	jne    0x4132f1
  413313:	inc    ebp
  413314:	jmp    0x8520:0xbdad2c16
  41331b:	pop    ebp
  41331c:	(bad)  
  41331d:	jg     0x41339a
  41331f:	(bad)  
  413321:	enter  0x889c,0x25
  413325:	fcomp  QWORD PTR [esi-0x36]
  413328:	mov    esi,0x1898f215
  41332d:	dec    ecx
  41332e:	ja     0x413365
  413330:	jmp    0x63a7:0xe49ea7f6
  413337:	jl     0x4132f5
  413339:	cmc    
  41333a:	enter  0x5fea,0x45
  41333e:	inc    ecx
  41333f:	jb     0x413305
  413341:	leave  
  413342:	icebp  
  413343:	stc    
  413344:	push   edi
  413345:	or     eax,0x4a1b4d21
  41334a:	sub    ebp,eax
  41334c:	fld    st(1)
  41334e:	sahf   
  41334f:	lods   eax,DWORD PTR ds:[esi]
  413350:	adc    al,0x51
  413352:	fsubr  DWORD PTR [ecx]
  413354:	jns    0x41330d
  413356:	out    0xc5,eax
  413358:	mov    dh,0x5d
  41335a:	xchg   DWORD PTR [eax-0x1b],ecx
  41335d:	push   0x7b
  41335f:	adc    DWORD PTR [edx+0x16087b88],0xffffffa2
  413366:	loopne 0x4132ed
  413368:	push   ds
  413369:	adc    cl,al
  41336b:	je     0x4132ed
  41336d:	add    eax,0xdf83d3da
  413372:	shr    ebp,cl
  413374:	cmp    cl,BYTE PTR [esi-0x51d46a87]
  41337a:	ins    BYTE PTR es:[edi],dx
  41337b:	pop    edx
  41337c:	stc    
  41337d:	sbb    BYTE PTR ds:0x4a158cb8,cl
  413383:	add    dh,BYTE PTR [edx-0x75bb601]
  413389:	jl     0x4133e5
  41338b:	dec    ebx
  41338c:	ret    
  41338d:	push   edi
  41338e:	iret   
  41338f:	fstp   TBYTE PTR [ebx+0x412402f6]
  413395:	sub    eax,0xbcbb6e01
  41339a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41339b:	aaa    
  41339c:	mov    cs,esp
  41339e:	cmp    eax,esp
  4133a0:	idiv   esp
  4133a2:	dec    eax
  4133a3:	addr16 test eax,0x98247aea
  4133a9:	sar    BYTE PTR [edx+0x53],0xf3
  4133ad:	mov    ebp,0xba6d2507
  4133b2:	sub    BYTE PTR [ebx-0x47],ch
  4133b5:	ret    0x19a8
  4133b8:	xchg   esi,eax
  4133b9:	jbe    0x41335f
  4133bb:	jmp    0x44cbe3b7
  4133c0:	ror    al,0x79
  4133c3:	enter  0x35c2,0xd7
  4133c7:	out    dx,eax
  4133c8:	ins    DWORD PTR es:[edi],dx
  4133c9:	in     al,dx
  4133ca:	mov    eax,ds:0x1e309944
  4133cf:	nop
  4133d0:	mov    WORD PTR [eax+0x45],es
  4133d3:	pop    ebp
  4133d4:	lds    ecx,FWORD PTR [esi+edx*4]
  4133d7:	mov    dh,0x73
  4133d9:	test   BYTE PTR [ebp+edi*8-0x76a042e9],dh
  4133e0:	aaa    
  4133e1:	add    cl,BYTE PTR [ebp+ecx*8-0x45e02919]
  4133e8:	fnsave [esp+edx*2]
  4133eb:	mov    eax,ds:0xdd961e2c
  4133f0:	call   0xdbe2c2ef
  4133f5:	add    al,0x4e
  4133f7:	retf   0xabea
  4133fa:	pop    esi
  4133fb:	outs   dx,DWORD PTR ds:[esi]
  4133fc:	xchg   esp,eax
  4133fd:	xor    al,BYTE PTR [esi+0x4fdf0f64]
  413403:	pop    es
  413404:	lahf   
  413405:	pushf  
  413406:	(bad)  
  413407:	clc    
  413408:	cmp    BYTE PTR [edi],0xad
  41340b:	sbb    al,0x94
  41340d:	pop    esi
  41340e:	adc    al,0xb7
  413410:	test   al,0xc1
  413412:	daa    
  413413:	cmp    BYTE PTR [edi-0x2b],dl
  413416:	mul    BYTE PTR [ebp+0x51]
  413419:	test   BYTE PTR [eax+0x7615be3e],ah
  41341f:	scas   eax,DWORD PTR es:[edi]
  413420:	sbb    eax,0x86b3fdac
  413425:	nop
  413426:	call   0xa2975f84
  41342b:	into   
  41342c:	mov    esp,0x69225db3
  413431:	inc    eax
  413432:	pop    ebp
  413433:	lods   al,BYTE PTR ds:[esi]
  413434:	cdq    
  413435:	push   ebx
  413436:	push   ebx
  413437:	fstp   TBYTE PTR [edx-0x54438b17]
  41343d:	cmp    ebp,DWORD PTR [esi]
  41343f:	mov    edi,0x6d28db5a
  413444:	dec    eax
  413445:	sub    al,0xa9
  413447:	inc    esi
  413448:	jmp    0x751b:0x20826e37
  41344f:	repnz outs dx,BYTE PTR ds:[esi]
  413451:	pop    esp
  413452:	or     eax,0x9dab029b
  413457:	rol    esi,0xfa
  41345a:	sub    esi,eax
  41345c:	xchg   edi,eax
  41345d:	dec    edx
  41345e:	mov    eax,0x6f6b211b
  413463:	test   eax,0x8927ba8e
  413468:	cld    
  413469:	ja     0x413409
  41346b:	ja     0x4133ed
  41346d:	push   ebp
  41346e:	sub    bl,BYTE PTR [ebx+eax*1-0x534c6b95]
  413475:	inc    esi
  413476:	xchg   esp,eax
  413477:	mov    bl,0xb8
  413479:	je     0x4134d0
  41347b:	cmp    esi,ebp
  41347d:	icebp  
  41347e:	outs   dx,BYTE PTR ds:[esi]
  41347f:	mov    esi,0x9921dfe9
  413484:	jmp    0x41344c
  413486:	pop    eax
  413487:	adc    dl,BYTE PTR [edx]
  413489:	and    eax,0x2199709a
  41348e:	pushf  
  41348f:	dec    esi
  413490:	jecxz  0x413434
  413492:	sub    DWORD PTR [ecx+edi*2+0x183c4d94],edi
  413499:	inc    edi
  41349a:	mov    ?,WORD PTR [ebx+ebp*8-0x20]
  41349e:	mov    ch,0x2e
  4134a0:	(bad)  
  4134a1:	cli    
  4134a2:	(bad)  
  4134a3:	inc    ebp
  4134a4:	rcr    esp,0x58
  4134a7:	or     BYTE PTR [edi],ch
  4134a9:	and    al,0x1e
  4134ab:	adc    al,BYTE PTR [ebp+0x40]
  4134ae:	xor    DWORD PTR [ebx+0x36504a8],esp
  4134b4:	push   es
  4134b5:	or     eax,DWORD PTR [ebp-0x63]
  4134b8:	in     al,0x53
  4134ba:	adc    DWORD PTR [eax+eax*2+0x30e5d287],0xace18e2
  4134c5:	fld    DWORD PTR [ebp-0x4a5d57e8]
  4134cb:	inc    edi
  4134cc:	mov    ebx,0x478f493
  4134d1:	(bad)  
  4134d2:	adc    BYTE PTR [edi+eiz*2],ah
  4134d5:	jns    0x413491
  4134d7:	sbb    bh,dl
  4134d9:	sbb    ch,ah
  4134db:	mov    bh,0x7b
  4134dd:	and    BYTE PTR [edi+0x15161bce],0x88
  4134e4:	(bad)  
  4134e5:	and    cl,BYTE PTR [ebx+ecx*4]
  4134e8:	sbb    BYTE PTR [edi-0x43],cl
  4134eb:	inc    ebp
  4134ec:	unpcklps xmm1,xmm6
  4134ef:	push   edx
  4134f0:	cmp    cl,BYTE PTR [esi-0x5f9992b3]
  4134f6:	xchg   ebx,eax
  4134f7:	mov    dl,0x60
  4134f9:	ret    0x5de6
  4134fc:	test   BYTE PTR [edx],0x63
  4134ff:	cmp    ecx,DWORD PTR [edi-0x2138dd66]
  413505:	neg    BYTE PTR [esi]
  413507:	mov    al,0x3
  413509:	mov    ebx,DWORD PTR [esi-0x4615bdf7]
  41350f:	fisttp QWORD PTR [ecx-0x2afff04e]
  413515:	imul   ebp,DWORD PTR [ebx],0x2b475713
  41351b:	sbb    al,0xaf
  41351d:	(bad)  
  41351e:	sbb    al,0x5a
  413520:	fwait
  413521:	pop    esi
  413522:	lahf   
  413523:	push   ebx
  413524:	add    BYTE PTR [edi-0x64],0xc2
  413528:	repz push edx
  41352a:	mov    cl,0x8b
  41352c:	jp     0x413511
  41352e:	dec    esi
  41352f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413530:	shl    BYTE PTR [edx-0x796baec4],cl
  413536:	test   eax,0x699d1930
  41353b:	jns    0x413580
  41353d:	sbb    BYTE PTR [ebp-0x27],al
  413540:	loop   0x4135b9
  413542:	xchg   ebx,esi
  413544:	pop    esp
  413545:	dec    edi
  413546:	adc    BYTE PTR [edx],0x59
  413549:	mov    DWORD PTR [ecx-0x2804e2a9],esi
  41354f:	out    dx,eax
  413550:	mov    bh,al
  413552:	call   0x60754fcd
  413557:	adc    DWORD PTR [ecx],esi
  413559:	(bad)  
  41355a:	imul   esi,esi,0x5c
  41355d:	adc    DWORD PTR [esi-0x66bb22b4],esp
  413563:	xchg   edx,eax
  413564:	xor    eax,0xc0eed2ca
  413569:	sub    eax,0xe80094c6
  41356e:	loope  0x413511
  413570:	xor    ah,BYTE PTR [esi-0x31]
  413573:	inc    eax
  413574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413575:	mov    bh,0x3
  413577:	push   esp
  413578:	sub    al,0x3f
  41357a:	mov    dl,BYTE PTR [esi+0xae0b98e]
  413580:	mov    al,BYTE PTR [eax]
  413582:	mov    al,BYTE PTR [esp+edx*8]
  413585:	jp     0x41358a
  413587:	add    DWORD PTR ds:0x7800a2eb,eax
  41358d:	push   eax
  41358e:	imul   eax,esp,0x47
  413591:	sysret 
  413593:	mov    ds:0x9e505d6a,ax
  413599:	push   ds
  41359a:	adc    al,BYTE PTR [esi]
  41359c:	xlat   BYTE PTR ds:[ebx]
  41359d:	mov    esi,0xc100fea8
  4135a2:	sub    edi,DWORD PTR [ecx]
  4135a4:	(bad)  
  4135a5:	cld    
  4135a6:	or     BYTE PTR [edi],dl
  4135a8:	imul   ebp,DWORD PTR [edi+0x17],0x75
  4135ac:	cli    
  4135ad:	shl    DWORD PTR [edi+0x1b],cl
  4135b0:	sbb    edi,DWORD PTR [ebx]
  4135b2:	out    0x7f,al
  4135b4:	mov    cl,0xe5
  4135b6:	shr    BYTE PTR [ebp+0x51],0xc3
  4135ba:	pop    ds
  4135bb:	outs   dx,DWORD PTR ds:[esi]
  4135bc:	cld    
  4135bd:	mov    esp,0xefd7fe16
  4135c2:	add    DWORD PTR [ebp-0x2ab230bd],eax
  4135c8:	(bad)  
  4135c9:	cmp    al,0x1d
  4135cb:	push   esp
  4135cc:	sub    ebp,DWORD PTR [esi-0x17582973]
  4135d2:	int    0xfc
  4135d4:	je     0x413607
  4135d6:	dec    eax
  4135d7:	int3   
  4135d8:	sub    al,0x91
  4135da:	(bad)  
  4135de:	sub    DWORD PTR [ebx],eax
  4135e0:	jecxz  0x4135b0
  4135e2:	push   ss
  4135e3:	les    eax,FWORD PTR [eax]
  4135e5:	pop    ebx
  4135e6:	imul   edi,DWORD PTR [edi],0x2e
  4135e9:	adc    eax,DWORD PTR [ebx+0x45152430]
  4135ef:	inc    ebp
  4135f0:	sbb    ebx,eax
  4135f2:	and    al,0x85
  4135f4:	cmp    bl,BYTE PTR [esi]
  4135f6:	sbb    al,0xd9
  4135f8:	test   BYTE PTR [edi+edx*2-0x7a68dbbb],dl
  4135ff:	inc    esp
  413600:	dec    ecx
  413601:	data16 mov dl,0x63
  413604:	mov    eax,edx
  413606:	sub    DWORD PTR [esi],edx
  413608:	into   
  413609:	add    al,0xfa
  41360b:	je     0x413673
  41360d:	scas   al,BYTE PTR es:[edi]
  41360e:	sub    ebx,0xffffffa5
  413611:	xchg   ebp,eax
  413612:	fcomi  st,st(3)
  413614:	or     esi,DWORD PTR [eax+0x6d]
  413617:	xor    edi,DWORD PTR [edx+0x2084cf0d]
  41361d:	lock sbb al,0x53
  413620:	stos   BYTE PTR es:[edi],al
  413621:	test   BYTE PTR [edi-0x5],ch
  413624:	adc    bl,BYTE PTR ds:[edx-0x13ab24bd]
  41362b:	sub    DWORD PTR [esi],0xffffffe3
  41362e:	pop    eax
  41362f:	(bad)  
  413630:	fdivr  st(4),st
  413632:	pop    edi
  413633:	loop   0x413620
  413635:	inc    eax
  413636:	aas    
  413637:	jns    0x413638
  413639:	push   ebp
  41363a:	push   es
  41363b:	outs   dx,DWORD PTR ds:[esi]
  41363c:	xlat   BYTE PTR ds:[ebx]
  41363d:	test   al,0x23
  41363f:	fidiv  DWORD PTR [edx]
  413641:	add    cl,ch
  413643:	cld    
  413644:	test   dl,cl
  413646:	in     eax,dx
  413647:	loop   0x4135ed
  413649:	fwait
  41364a:	sbb    BYTE PTR [ebp+edi*4-0x4b],ch
  41364e:	jne    0x413619
  413650:	int3   
  413651:	int3   
  413652:	not    DWORD PTR [eax+0x235d0ddc]
  413658:	inc    ebp
  413659:	mov    esp,0x7dacbd5f
  41365e:	int    0xe1
  413660:	mov    ebp,0xae1381de
  413665:	inc    ebp
  413666:	and    al,0x1b
  413668:	cli    
  413669:	mov    ch,0xd8
  41366b:	pop    eax
  41366c:	inc    esp
  41366d:	xchg   bh,al
  41366f:	inc    esp
  413670:	iret   
  413671:	ins    DWORD PTR es:[edi],dx
  413672:	xor    ebx,DWORD PTR [ebp-0x3]
  413675:	dec    esp
  413676:	jmp    FWORD PTR [esi+ebx*4-0x182a4346]
  41367d:	not    DWORD PTR [esi]
  41367f:	or     BYTE PTR [ecx+0x4],dh
  413682:	(bad)  
  413683:	cmp    eax,0xc3a4c166
  413688:	(bad)  [ecx-0x1564384c]
  41368e:	mov    eax,0xa3845653
  413693:	xchg   bl,bh
  413695:	jmp    0x41363c
  413697:	arpl   WORD PTR [edi+esi*1-0x44],cx
  41369b:	mov    ebp,0xd361edb4
  4136a0:	es jle 0x4136be
  4136a3:	inc    edi
  4136a4:	jb     0x41370d
  4136a6:	fcomip st,st(4)
  4136a8:	mov    dh,0x16
  4136aa:	push   es
  4136ab:	xchg   ecx,eax
  4136ac:	push   ebp
  4136ad:	jle    0x4136c7
  4136af:	push   eax
  4136b0:	sti    
  4136b1:	cmp    al,BYTE PTR [ebp-0x5d]
  4136b4:	(bad)  
  4136b5:	push   ds
  4136b6:	xchg   BYTE PTR [ebx-0x9],cl
  4136b9:	jo     0x4136f2
  4136bb:	pop    es
  4136bc:	loope  0x413655
  4136be:	mov    es,WORD PTR [ecx-0x2beae636]
  4136c4:	out    0xe0,eax
  4136c6:	mov    ecx,0xada63a3d
  4136cb:	fwait
  4136cc:	mov    esi,DWORD PTR [ebp+0x1215103c]
  4136d2:	or     al,0x86
  4136d4:	jmp    0x413747
  4136d6:	cmp    al,0xee
  4136d8:	fcomp  DWORD PTR [ebp-0x11]
  4136db:	mov    ebx,ecx
  4136dd:	xor    al,0x0
  4136df:	stc    
  4136e0:	pmulhuw mm7,QWORD PTR [ebx+eiz*2+0x68eba22f]
  4136e8:	fwait
  4136e9:	xor    eax,0x8e0ae42
  4136ee:	and    esi,DWORD PTR [esi+edx*8+0x5db365bc]
  4136f5:	or     ecx,DWORD PTR [esi+0x20]
  4136f8:	jg     0x4136a3
  4136fa:	pop    es
  4136fb:	int    0xed
  4136fd:	add    DWORD PTR [ebx+0xc],ecx
  413700:	shr    esp,1
  413702:	pop    ebx
  413703:	les    ebx,FWORD PTR [ebp-0x1a]
  413706:	rcr    BYTE PTR [esi+edx*1+0x4bf19517],1
  41370d:	fisttp QWORD PTR [edx+0x517b3b22]
  413713:	jne    0x413748
  413715:	cmp    al,0x63
  413717:	mov    ecx,0xb92ae663
  41371c:	xchg   edi,eax
  41371d:	popa   
  41371e:	xchg   ecx,eax
  41371f:	cmp    BYTE PTR [eax+0x1bf35675],0xef
  413726:	test   DWORD PTR [esi+ebx*2],ecx
  413729:	sahf   
  41372a:	sets   dh
  41372d:	jp     0x4137ae
  41372f:	xrelease xchg DWORD PTR [eax+0x54],edx
  413733:	mov    ebp,ecx
  413735:	cmp    BYTE PTR [ecx+0x27],bl
  413738:	ret    0x7256
  41373b:	mov    dh,0xfc
  41373e:	(bad)  
  413740:	mov    esi,0x16d92fd
  413745:	and    eax,edi
  413747:	imul   esp,DWORD PTR [edx-0x24dfc09e],0xda45e061
  413751:	outs   dx,BYTE PTR ds:[esi]
  413752:	mov    fs,WORD PTR [eax]
  413754:	fwait
  413755:	mov    ds:0x29471292,al
  41375a:	inc    ebp
  41375b:	cli    
  41375c:	aad    0x61
  41375e:	push   edx
  41375f:	cmp    esi,DWORD PTR [ebx+0x20]
  413762:	xchg   dh,bh
  413764:	jno    0x4137a7
  413766:	mov    dl,0xb9
  413768:	jmp    0xa3f53824
  41376d:	push   ecx
  41376e:	and    al,0x56
  413770:	fst    QWORD PTR [esi+0x5371b6dc]
  413776:	sub    ah,0x80
  413779:	mov    es,WORD PTR [ebx+0x28]
  41377c:	in     eax,dx
  41377d:	pop    ebp
  41377e:	dec    esi
  41377f:	into   
  413780:	and    al,BYTE PTR [ebx-0x37]
  413783:	sbb    eax,0xddd28a22
  413788:	jle    0x4137aa
  41378a:	gs adc eax,0x515943c6
  413790:	dec    esp
  413791:	dec    esp
  413792:	loop   0x41379d
  413794:	xor    DWORD PTR [ebx+ebx*8+0x1d],ebp
  413798:	into   
  413799:	sub    esp,DWORD PTR ds:0xd59c55f
  41379f:	jge    0x4137d2
  4137a1:	push   0x2bb013d4
  4137a6:	test   BYTE PTR [edi+0x4b6254bf],ch
  4137ac:	inc    ecx
  4137ad:	ds cmp eax,0x2919ce7e
  4137b3:	push   0xffffff8a
  4137b5:	add    esi,DWORD PTR [ecx]
  4137b7:	mov    bh,0xe4
  4137b9:	cs mov ebp,0xef6f3c4
  4137bf:	int    0x1a
  4137c1:	and    esp,DWORD PTR [esi]
  4137c3:	daa    
  4137c4:	ins    BYTE PTR es:[edi],dx
  4137c5:	mov    al,ds:0x66b7c6a2
  4137ca:	pop    DWORD PTR [ebp-0x23]
  4137cd:	ret    
  4137ce:	out    0x78,eax
  4137d0:	xor    BYTE PTR [edi+0x67],ah
  4137d3:	and    ebx,DWORD PTR [ebx-0xcb249b6]
  4137d9:	inc    esp
  4137da:	nop
  4137db:	or     eax,0x58da5c0e
  4137e0:	andps  xmm4,xmm1
  4137e3:	mov    dl,0x11
  4137e5:	dec    esp
  4137e6:	mov    dh,0x1a
  4137e8:	jae    0x4137a1
  4137ea:	mov    al,0xe2
  4137ec:	push   esi
  4137ed:	pushf  
  4137ee:	jns    0x4137b9
  4137f0:	rcr    BYTE PTR [ecx+0x27],0x6e
  4137f4:	push   ecx
  4137f5:	push   es
  4137f6:	sub    ah,BYTE PTR [edi+eiz*1+0x1d]
  4137fa:	fwait
  4137fb:	add    eax,esp
  4137fd:	cld    
  4137fe:	dec    esp
  4137ff:	jae    0x4137d6
  413801:	mov    ecx,0xbe9e43e8
  413806:	shl    ecx,0xe3
  413809:	shl    DWORD PTR [edx-0x49c7ee5c],1
  41380f:	mov    ds:0x3d54f153,eax
  413814:	add    DWORD PTR [eax+ebx*2+0x6a],ebp
  413818:	retf   0xb699
  41381b:	lahf   
  41381c:	and    BYTE PTR [ebp-0x5dd6eede],dl
  413822:	mov    ebx,0xa50d35ee
  413827:	(bad)  
  413829:	push   edx
  41382a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41382b:	sti    
  41382c:	dec    edi
  41382d:	mov    ecx,0x27e1d5d2
  413832:	jle    0x4138ae
  413834:	dec    edx
  413835:	jnp    0x4137c7
  413837:	xor    al,ah
  413839:	push   ecx
  41383a:	and    DWORD PTR [ecx+0x11f4fb98],esi
  413840:	icebp  
  413841:	xchg   ebp,eax
  413842:	aaa    
  413843:	(bad)  
  413844:	dec    esi
  413845:	cli    
  413846:	jmp    0x96b889c4
  41384b:	test   al,0x25
  41384d:	xor    eax,0x630a54f
  413852:	in     eax,dx
  413853:	sahf   
  413854:	xchg   ecx,eax
  413855:	lea    edx,[eax-0x3bbbb387]
  41385b:	loop   0x413832
  41385d:	(bad)  
  41385e:	mov    bh,0xe2
  413860:	mov    ebp,0xb51b2f34
  413865:	pop    edi
  413866:	xor    cl,BYTE PTR [esi+edx*1]
  413869:	mov    dl,0x73
  41386b:	sbb    eax,0xb4fa6665
  413870:	cmp    al,0xfe
  413872:	(bad)  
  413873:	and    al,0xe5
  413875:	call   0x519aaa5c
  41387a:	xchg   ebx,eax
  41387b:	sbb    BYTE PTR [esi+eiz*8+0x7d2ad9c1],dl
  413882:	pop    es
  413883:	ror    esp,cl
  413885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413886:	mov    bl,0x1b
  413888:	fiadd  WORD PTR [esi-0x6d048bd3]
  41388e:	mov    al,0xb9
  413890:	push   edx
  413891:	in     eax,dx
  413892:	sub    dh,BYTE PTR [ebx-0x5a]
  413895:	push   esi
  413896:	mov    ch,0x40
  413898:	dec    eax
  413899:	push   edx
  41389a:	jmp    0xa655:0x6c9a990c
  4138a1:	dec    ecx
  4138a2:	retf   0xe6cb
  4138a5:	popa   
  4138a6:	in     al,dx
  4138a7:	aas    
  4138a8:	add    ebx,edi
  4138aa:	jmp    0x7366d07e
  4138af:	gs std 
  4138b1:	dec    ebx
  4138b2:	rol    ebp,cl
  4138b4:	xchg   esi,eax
  4138b5:	mov    ch,BYTE PTR [ebp+0x6a]
  4138b8:	xor    bh,BYTE PTR ds:0x5a148c87
  4138be:	jmp    0xcb88f581
  4138c3:	in     al,dx
  4138c4:	mov    DWORD PTR [edi],ebp
  4138c6:	and    bh,BYTE PTR [ebx+0x48]
  4138c9:	sub    BYTE PTR [ebx+0x13060bac],bh
  4138cf:	shr    DWORD PTR [eax],0x58
  4138d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138d3:	pop    ds
  4138d4:	xlat   BYTE PTR ds:[ebx]
  4138d5:	jae    0x4138ed
  4138d7:	sub    eax,0xb42f7996
  4138dc:	imul   edx,edx,0x5e
  4138df:	pushf  
  4138e0:	popf   
  4138e1:	add    eax,0xbc53c684
  4138e6:	loopne 0x4138aa
  4138e8:	fld    DWORD PTR [ecx+0x10]
  4138eb:	sub    edi,edx
  4138ed:	jbe    0x4138dc
  4138ef:	mov    BYTE PTR [ebp+0x6a],dl
  4138f2:	mov    ds:0x4036748c,al
  4138f7:	retf   
  4138f8:	push   0xc773e0fb
  4138fd:	dec    ebx
  4138fe:	sbb    ch,BYTE PTR [edi]
  413900:	mov    dl,0x83
  413902:	and    eax,0xad68da4c
  413907:	xor    BYTE PTR [eax-0x2340a6ae],dh
  41390d:	pop    ebx
  41390e:	icebp  
  41390f:	cmp    dl,0x2b
  413912:	cdq    
  413913:	and    BYTE PTR [edi+0x66],cl
  413916:	push   cs
  413917:	sar    esp,1
  413919:	paddb  mm6,QWORD PTR [esi]
  41391c:	jle    0x413999
  41391e:	fistp  WORD PTR [edi-0x73]
  413921:	sub    edi,DWORD PTR [edi-0xcd494bd]
  413927:	push   eax
  413928:	pop    ecx
  413929:	adc    esp,DWORD PTR ss:[bx-0x56]
  41392e:	daa    
  41392f:	mov    WORD PTR [edx+0xc],es
  413932:	xor    al,0x6a
  413934:	sub    al,0xf3
  413936:	jo     0x4138d2
  413938:	dec    edi
  413939:	(bad)  
  41393a:	push   0xffffff87
  41393c:	imul   edi,DWORD PTR [esi-0xed3535e],0xffffff8f
  413943:	dec    edx
  413944:	lods   al,BYTE PTR ds:[esi]
  413945:	add    BYTE PTR [esi+0x68],al
  413948:	loop   0x413993
  41394a:	retf   
  41394b:	jns    0x4139b8
  41394d:	xchg   esp,eax
  41394e:	int    0x14
  413950:	retf   0x8bd4
  413953:	push   ebp
  413954:	popa   
  413955:	pop    ebp
  413956:	stc    
  413957:	mov    ds:0xcaf4a250,eax
  41395c:	ds pusha 
  41395e:	jne    0x413918
  413960:	sbb    bh,bh
  413962:	rol    BYTE PTR [edi+edx*1],cl
  413965:	clc    
  413966:	xchg   ebp,eax
  413967:	cwde   
  413968:	jo     0x41398f
  41396a:	imul   edi,DWORD PTR [ebp-0x448f3a69],0x304b0a77
  413974:	inc    ecx
  413975:	xor    bl,BYTE PTR [esi+0x2fee5e06]
  41397b:	add    ah,BYTE PTR [edi]
  41397d:	fisttp WORD PTR [edx]
  41397f:	fwait
  413980:	out    dx,al
  413981:	jle    0x41393b
  413983:	call   0x91d4189f
  413988:	lods   al,BYTE PTR ds:[esi]
  413989:	jo     0x4139a4
  41398b:	sub    al,0xa2
  41398d:	call   0x71b89b2d
  413992:	pusha  
  413993:	xchg   esi,eax
  413994:	cmp    al,0xc8
  413996:	push   ds
  413997:	push   ebp
  413998:	dec    esp
  413999:	pop    es
  41399a:	add    eax,0xbf7ce094
  41399f:	and    edi,DWORD PTR [esp+ebx*2+0x392fb2cc]
  4139a6:	mov    ah,0xea
  4139a8:	mov    BYTE PTR [edi-0x6f6adc4d],dl
  4139ae:	cmp    eax,0xd1440ea7
  4139b3:	clc    
  4139b4:	stc    
  4139b5:	ins    DWORD PTR es:[edi],dx
  4139b6:	aam    0x26
  4139b8:	inc    ebp
  4139b9:	div    BYTE PTR [eax]
  4139bb:	ja     0x4139ab
  4139bd:	pop    ss
  4139be:	jae    0x413a21
  4139c0:	outs   dx,BYTE PTR ds:[esi]
  4139c1:	into   
  4139c2:	pop    edx
  4139c3:	popa   
  4139c4:	in     eax,0xe9
  4139c6:	push   edi
  4139c7:	mov    DWORD PTR [ebx],eax
  4139c9:	xor    DWORD PTR [eax-0x37335bfa],0x478e65ca
  4139d3:	mov    ds:0x434159fe,al
  4139d8:	inc    esi
  4139d9:	out    dx,al
  4139da:	outs   dx,DWORD PTR ds:[esi]
  4139db:	inc    esp
  4139dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139dd:	and    DWORD PTR ds:0x2f1e552a,edi
  4139e3:	pop    eax
  4139e4:	and    DWORD PTR [ebx-0x1],0xffffffc0
  4139e8:	sbb    esp,esi
  4139ea:	lods   eax,DWORD PTR ds:[si]
  4139ec:	bound  esi,QWORD PTR [edx]
  4139ee:	popa   
  4139ef:	xchg   edi,eax
  4139f0:	mov    al,ds:0x12e228e6
  4139f5:	mov    al,ds:0x9feba0bf
  4139fa:	jno    0x4139c5
  4139fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139fd:	rcl    BYTE PTR [eax+0x4be5f4f1],0x5f
  413a04:	or     cl,BYTE PTR [eax+0x40d27101]
  413a0a:	clc    
  413a0b:	mov    DWORD PTR [edx+0x3dc5966],edi
  413a11:	js     0x4139ee
  413a13:	cld    
  413a14:	lods   al,BYTE PTR ds:[esi]
  413a15:	in     eax,dx
  413a16:	dec    ebx
  413a17:	lock mov edi,0x9d98eb95
  413a1d:	and    eax,0x5f561158
  413a22:	push   ds
  413a23:	and    esp,DWORD PTR [ebp+0x39]
  413a26:	xchg   edx,eax
  413a27:	cmp    DWORD PTR [esi],0x3e
  413a2a:	push   0xba255bf9
  413a2f:	jb     0x4139f2
  413a31:	retf   0x2891
  413a34:	cmp    edx,DWORD PTR [edi+0x6067e61e]
  413a3a:	mov    BYTE PTR [esi-0x76],bl
  413a3d:	fsub   QWORD PTR [esi]
  413a3f:	mov    ecx,0xec5d4989
  413a44:	ror    DWORD PTR [ecx+0x16f07a41],1
  413a4a:	fmul   DWORD PTR [eax]
  413a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a4e:	cmp    BYTE PTR [ebp-0x62],0x7f
  413a52:	adc    al,0x55
  413a54:	sahf   
  413a55:	ja     0x413a2c
  413a57:	dec    edi
  413a58:	int    0x7a
  413a5a:	call   0x9072:0xd0ce8011
  413a61:	pop    eax
  413a62:	out    dx,al
  413a63:	js     0x413a0e
  413a65:	fs sub al,0x0
  413a68:	jns    0x413acf
  413a6a:	adc    DWORD PTR [ecx+esi*1+0x411c786b],edx
  413a71:	jbe    0x413abe
  413a73:	sbb    ecx,DWORD PTR [esi+0x5e56e0bf]
  413a79:	xchg   BYTE PTR [ecx+0x39],dh
  413a7c:	add    BYTE PTR [edi+0x2e],ch
  413a7f:	(bad)  [esi-0xec1a377]
  413a85:	(bad)  
  413a86:	mov    bl,0x67
  413a88:	mov    ch,0xeb
  413a8a:	int    0x8
  413a8c:	cmp    DWORD PTR [ebp+0x513275fc],edi
  413a92:	and    eax,0x7359d400
  413a97:	outs   dx,BYTE PTR ds:[esi]
  413a98:	int3   
  413a99:	xchg   ecx,eax
  413a9a:	ror    DWORD PTR [edi-0x4176af46],cl
  413aa0:	fxch   st(3)
  413aa2:	jns    0x413ab2
  413aa4:	rdpmc  
  413aa6:	dec    esi
  413aa7:	ds pushf 
  413aa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413aaa:	jle    0x413ae5
  413aac:	hlt    
  413aad:	fs jb  0x413b11
  413ab0:	push   0xeeac9b6a
  413ab5:	pop    edx
  413ab6:	pop    ebx
  413ab7:	add    bh,BYTE PTR [edi+0x1f]
  413aba:	stos   DWORD PTR es:[edi],eax
  413abb:	cmp    edi,edx
  413abd:	xchg   esp,eax
  413abe:	loopne 0x413b30
  413ac0:	mov    ebp,0xa3d4da7f
  413ac5:	loop   0x413b0f
  413ac7:	mov    eax,esp
  413ac9:	add    eax,0x387c4282
  413ace:	sahf   
  413acf:	sbb    al,0x9a
  413ad1:	mov    eax,0xaac085e
  413ad6:	mov    ecx,0xaecacc0d
  413adb:	nop
  413adc:	mov    ds:0x48d7483d,eax
  413ae1:	rcl    DWORD PTR [ecx-0x36069338],1
  413ae7:	xor    ebx,eax
  413ae9:	dec    eax
  413aea:	push   eax
  413aeb:	jnp    0x413b07
  413aed:	aaa    
  413aee:	retf   0x6750
  413af1:	dec    esi
  413af2:	push   es
  413af3:	dec    edx
  413af4:	sbb    ebx,DWORD PTR [edx-0x5d]
  413af7:	cs lahf 
  413af9:	pop    ss
  413afa:	mov    bh,0x61
  413afc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413afd:	push   0xffffffd7
  413aff:	jg     0x413b2c
  413b01:	dec    edx
  413b02:	aam    0xae
  413b04:	adc    BYTE PTR [ebx+0x59],cl
  413b07:	cwde   
  413b08:	popf   
  413b09:	mov    WORD PTR [edi-0x4],fs
  413b0c:	test   BYTE PTR [esi+eiz*1],cl
  413b0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b10:	arpl   cx,bp
  413b12:	in     eax,0x63
  413b14:	mov    BYTE PTR [edi-0x61],0x97
  413b18:	mov    ecx,0x5f2eef3a
  413b1d:	enter  0x193f,0x73
  413b21:	inc    ebx
  413b22:	and    DWORD PTR [ebx],0x6479993d
  413b28:	repnz in al,dx
  413b2a:	je     0x413b83
  413b2c:	shl    DWORD PTR [edi+0x4b],0xe
  413b30:	dec    esi
  413b31:	sub    al,0xcc
  413b33:	pop    ebx
  413b34:	mov    BYTE PTR ds:0x522b060b,bl
  413b3a:	fnsave [edx-0x18]
  413b3d:	(bad)  
  413b3e:	mov    ds:0x594a91e2,eax
  413b43:	jp     0x413bb3
  413b45:	inc    ebp
  413b46:	test   ebx,edi
  413b48:	sub    BYTE PTR [ebx+0x65f9ef41],bl
  413b4e:	mov    dh,0xec
  413b50:	loop   0x413ba6
  413b52:	cwde   
  413b53:	jne    0x413bba
  413b55:	mov    ah,0xf7
  413b57:	pusha  
  413b58:	adc    dl,BYTE PTR [edx]
  413b5a:	mov    al,0x85
  413b5c:	cmc    
  413b5d:	jo     0x413b1e
  413b5f:	stc    
  413b60:	jo     0x413b9a
  413b62:	sbb    bl,BYTE PTR [ebp+0x4e]
  413b65:	sti    
  413b66:	and    al,0xbf
  413b68:	lods   al,BYTE PTR ds:[esi]
  413b69:	jp     0x413bda
  413b6b:	lahf   
  413b6c:	jl     0x413b32
  413b6e:	jo     0x413bc8
  413b70:	inc    edx
  413b71:	push   edi
  413b72:	fstp   QWORD PTR [edx-0x258114b9]
  413b78:	mov    ds:0xfb79547b,al
  413b7d:	(bad)  
  413b7f:	add    BYTE PTR [edx+0x74],dl
  413b82:	dec    edi
  413b83:	(bad)  
  413b84:	xchg   edi,eax
  413b85:	and    al,0xd4
  413b87:	retf   
  413b88:	xchg   ebp,eax
  413b89:	push   ebp
  413b8a:	sbb    al,0x58
  413b8c:	xor    BYTE PTR [edx+0x15696e],0x87
  413b93:	and    BYTE PTR [ebp-0x54397654],dh
  413b99:	shr    BYTE PTR [ebx],0x84
  413b9c:	(bad)  
  413b9d:	lock xor BYTE PTR [ecx],dh
  413ba0:	pushf  
  413ba1:	sub    eax,0x597d07cf
  413ba7:	sbb    al,0xff
  413ba9:	shr    DWORD PTR [ecx-0x3c359cad],cl
  413baf:	xchg   BYTE PTR [edx+0x92c9f6e],bl
  413bb5:	ss aas 
  413bb7:	ins    BYTE PTR es:[edi],dx
  413bb8:	call   0x1115:0x933448af
  413bbf:	mov    cl,0xb6
  413bc1:	pop    ds
  413bc2:	or     DWORD PTR [eax],edx
  413bc4:	and    bh,BYTE PTR [edi-0x435bc72f]
  413bca:	inc    ebx
  413bcb:	sub    al,0x8d
  413bcd:	jnp    0x413bc6
  413bcf:	xchg   dh,bl
  413bd1:	push   edx
  413bd2:	inc    eax
  413bd3:	dec    ebx
  413bd4:	cmp    BYTE PTR [edi+eiz*2+0x13fa842e],0xc2
  413bdc:	pop    ebx
  413bdd:	cmp    al,0x75
  413bdf:	imul   ebp,DWORD PTR [eax+0x4d8b8ab6],0xfffffff8
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	test   DWORD PTR [edx-0x45],ebx
  413d47:	mov    edx,0x4319c86e
  413d4c:	mov    BYTE PTR [ecx+ecx*4+0x13085bf5],dh
  413d53:	or     BYTE PTR [ecx],al
  413d55:	add    BYTE PTR [eax],al
  413d57:	add    BYTE PTR [ebp+0x3a],al
  413d5a:	pop    esp
  413d5b:	dec    ecx
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
