
6c1dc011161cedce775e7253b5956b5ebba4f03071bcd6492376d1fce62edd14.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	push   ebx
  401007:	mov    DWORD PTR [ebp-0x48],0x0
  40100e:	mov    DWORD PTR [ebp-0x18],0x0
  401015:	mov    DWORD PTR [ebp-0x70],0x0
  40101c:	mov    DWORD PTR [ebp-0x60],0x0
  401023:	mov    DWORD PTR [ebp-0x8],0x0
  40102a:	mov    DWORD PTR [ebp-0x6c],0x0
  401031:	mov    DWORD PTR [ebp-0x68],0x0
  401038:	mov    DWORD PTR [ebp-0x14],0x0
  40103f:	mov    DWORD PTR [ebp-0x4c],0x0
  401046:	mov    DWORD PTR [ebp-0x10],0x0
  40104d:	mov    DWORD PTR [ebp-0x58],0x0
  401054:	mov    DWORD PTR [ebp-0x4],0x0
  40105b:	mov    DWORD PTR [ebp-0x5c],0x0
  401062:	mov    DWORD PTR [ebp-0x30],0x0
  401069:	mov    DWORD PTR [ebp-0x54],0x0
  401070:	mov    DWORD PTR [ebp-0x2c],0x0
  401077:	mov    DWORD PTR [ebp-0x50],0x0
  40107e:	mov    DWORD PTR [ebp-0xc],0x0
  401085:	mov    eax,ds:0x449e08
  40108a:	mov    DWORD PTR [ebp-0x28],eax
  40108d:	mov    ecx,DWORD PTR ds:0x449e0c
  401093:	mov    DWORD PTR [ebp-0x24],ecx
  401096:	mov    edx,DWORD PTR ds:0x449e10
  40109c:	mov    DWORD PTR [ebp-0x20],edx
  40109f:	mov    al,ds:0x449e14
  4010a4:	mov    BYTE PTR [ebp-0x1c],al
  4010a7:	mov    ecx,DWORD PTR ds:0x449e18
  4010ad:	mov    DWORD PTR [ebp-0x40],ecx
  4010b0:	mov    edx,DWORD PTR ds:0x449e1c
  4010b6:	mov    DWORD PTR [ebp-0x3c],edx
  4010b9:	mov    eax,ds:0x449e20
  4010be:	mov    DWORD PTR [ebp-0x38],eax
  4010c1:	mov    cx,WORD PTR ds:0x449e24
  4010c8:	mov    WORD PTR [ebp-0x34],cx
  4010cc:	mov    dl,BYTE PTR ds:0x449e26
  4010d2:	mov    BYTE PTR [ebp-0x32],dl
  4010d5:	mov    DWORD PTR [ebp-0x30],0x40
  4010dc:	lea    eax,[ebp-0x40]
  4010df:	push   eax
  4010e0:	lea    ecx,[ebp-0x10]
  4010e3:	push   ecx
  4010e4:	call   DWORD PTR ds:0x418000
  4010ea:	test   eax,eax
  4010ec:	je     0x4167b5
  4010f2:	mov    edx,DWORD PTR [ebp-0x10]
  4010f5:	add    edx,0x1
  4010f8:	mov    DWORD PTR [ebp-0x10],edx
  4010fb:	inc    ebp
  4010fc:	ja     0x401147
  4010fe:	mov    WORD PTR [edi-0x66880ef3],ds
  401104:	cs inc edi
  401106:	fsubr  DWORD PTR [ecx-0x30]
  401109:	shl    DWORD PTR [ebp+eiz*4+0x298151d1],cl
  401110:	or     esi,ebp
  401112:	xchg   esp,eax
  401113:	in     al,dx
  401114:	imul   esi,ebx,0xffffff83
  401117:	sbb    BYTE PTR [ebx-0x77e7a988],bh
  40111d:	xchg   ecx,eax
  40111e:	fwait
  40111f:	xor    DWORD PTR [ebp+0x68515e6b],edx
  401125:	repnz lods eax,DWORD PTR ds:[esi]
  401127:	leave  
  401128:	stos   BYTE PTR es:[edi],al
  401129:	inc    ebp
  40112a:	mov    bh,0x61
  40112c:	lods   al,BYTE PTR ds:[esi]
  40112d:	jg     0x401171
  40112f:	lds    esp,FWORD PTR [esi-0x1b]
  401132:	fdiv   QWORD PTR [esi-0x33]
  401135:	cmp    cl,BYTE PTR [bx+si]
  401138:	sti    
  401139:	dec    esi
  40113a:	fldenv ds:0x8b713858
  401140:	in     eax,dx
  401141:	xchg   ecx,eax
  401142:	xor    al,0x23
  401144:	aam    0xee
  401146:	call   0x595d1fff
  40114b:	xchg   ecx,eax
  40114c:	call   0xd9d3:0xb2355a0
  401153:	aad    0xd2
  401155:	pop    ebx
  401156:	push   ss
  401157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401158:	cmp    ebp,DWORD PTR [ebx]
  40115a:	jns    0x401144
  40115c:	mov    al,ds:0xc431de97
  401161:	add    al,0x68
  401163:	add    eax,0xdb9f87a9
  401168:	cdq    
  401169:	and    eax,DWORD PTR [eax+0x4d]
  40116c:	sbb    dh,BYTE PTR [ebx+0x1be537cd]
  401172:	les    edi,FWORD PTR ds:0x3090e626
  401178:	mov    bl,dh
  40117a:	fnstcw WORD PTR [ecx]
  40117c:	call   0xe3e1e922
  401181:	inc    edi
  401182:	sub    DWORD PTR [esi-0x67],ebx
  401185:	sbb    eax,0xd88dcb09
  40118a:	inc    ebp
  40118b:	xor    DWORD PTR [ebx+0x15df5ff3],edx
  401191:	xchg   esp,eax
  401192:	or     DWORD PTR [edx],0xffffff82
  401195:	fnstsw WORD PTR [esi-0x3e]
  401198:	sub    DWORD PTR [edx],0x60
  40119b:	sbb    DWORD PTR [ebp-0x72],edx
  40119e:	or     al,BYTE PTR [ebp+0x55]
  4011a1:	and    dl,ch
  4011a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4011a4:	xor    DWORD PTR [ecx+0x3e659811],0x47
  4011ab:	xbegin 0xaaaafe19
  4011b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4011b2:	mov    edi,0x3fa78d7
  4011b7:	dec    eax
  4011b8:	test   DWORD PTR [ecx+0xc],ebx
  4011bb:	push   0xb0c35c2f
  4011c0:	dec    eax
  4011c1:	inc    edi
  4011c2:	(bad)  [edi]
  4011c4:	xchg   ebx,eax
  4011c5:	sbb    eax,0xb1d5953d
  4011ca:	jl     0x401166
  4011cc:	call   0x254720ff
  4011d1:	pop    ds
  4011d2:	js     0x4011df
  4011d4:	push   0x3
  4011d6:	add    cl,BYTE PTR [ebp+0x61]
  4011d9:	mov    ah,0xd7
  4011db:	cmp    ch,bl
  4011dd:	sub    BYTE PTR [edi-0xf],bh
  4011e0:	daa    
  4011e1:	mov    edx,0x3135bd05
  4011e6:	mov    dh,0xd1
  4011e8:	aaa    
  4011e9:	clc    
  4011ea:	psraw  mm3,QWORD PTR [eax]
  4011ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4011ee:	pop    ecx
  4011ef:	aas    
  4011f0:	push   edx
  4011f1:	jb     0x40117e
  4011f3:	fsubrp st(1),st
  4011f5:	jmp    DWORD PTR [edx-0x62]
  4011f8:	or     BYTE PTR [ebx],0xea
  4011fb:	mov    dl,0x59
  4011fd:	mov    ebx,0x9bed2eb4
  401202:	jns    0x40126d
  401204:	adc    ecx,0x42d4764
  40120a:	sti    
  40120b:	pop    ebx
  40120c:	out    dx,al
  40120d:	jg     0x401244
  40120f:	xchg   edx,eax
  401210:	mov    esp,0x3fa6e9b6
  401215:	mov    dh,0xc4
  401217:	pusha  
  401218:	pop    ss
  401219:	outs   dx,BYTE PTR ds:[esi]
  40121a:	push   0x1e
  40121c:	ja     0x4011b3
  40121e:	or     al,0x52
  401220:	push   ecx
  401221:	adc    ebx,0x92715e99
  401227:	dec    edi
  401228:	fsub   QWORD PTR [eax-0x54]
  40122b:	(bad)  
  40122c:	std    
  40122d:	popa   
  40122e:	xor    DWORD PTR [ebx-0x16],esi
  401231:	stc    
  401232:	int    0xcc
  401234:	cld    
  401235:	mov    edx,0x8ac0420b
  40123a:	sub    al,BYTE PTR [esi+edx*4-0x72]
  40123e:	cdq    
  40123f:	int    0x81
  401241:	cwde   
  401242:	jmp    0x4011f8
  401244:	out    dx,al
  401245:	sbb    dh,BYTE PTR [edi]
  401247:	xor    edx,ecx
  401249:	test   eax,0xcf019f32
  40124e:	dec    edi
  40124f:	adc    ecx,DWORD PTR [edx-0x13]
  401252:	les    ebx,FWORD PTR ds:0x527b436f
  401258:	hlt    
  401259:	sbb    al,BYTE PTR [esi-0x5a]
  40125c:	or     eax,0x9b25f63d
  401261:	adc    eax,0xe2b14ad3
  401266:	jmp    0x44ac2b18
  40126b:	in     al,dx
  40126c:	sub    edi,ebp
  40126e:	fwait
  40126f:	mov    edi,0x1eebd980
  401274:	sbb    al,0x77
  401276:	pop    es
  401277:	pop    eax
  401278:	jae    0x40120a
  40127a:	fs mov ebp,0xccd1b61f
  401280:	adc    ebx,edx
  401282:	add    dh,BYTE PTR [edx]
  401284:	cmp    bh,BYTE PTR [eax+ecx*4+0x7e5c8dc9]
  40128b:	fwait
  40128c:	or     ecx,DWORD PTR [edi-0x1e]
  40128f:	mov    ecx,edi
  401291:	xchg   BYTE PTR [esi-0x79],ah
  401294:	mov    ecx,0x2ad9da87
  401299:	mov    DWORD PTR [esp+edi*4+0xa94758e],eax
  4012a0:	pop    es
  4012a1:	xor    ecx,DWORD PTR [ebx-0x72a13694]
  4012a7:	push   esp
  4012a8:	xchg   edx,eax
  4012a9:	outs   dx,DWORD PTR ds:[esi]
  4012aa:	mov    edi,DWORD PTR [eax+eax*2]
  4012ad:	ss gs out 0xba,al
  4012b1:	or     BYTE PTR [ebx-0x76],ch
  4012b4:	dec    edx
  4012b5:	cwde   
  4012b6:	outs   dx,BYTE PTR ds:[esi]
  4012b7:	test   al,0xfb
  4012b9:	pop    DWORD PTR [eax+ebx*8+0x224b0c88]
  4012c0:	aas    
  4012c1:	xchg   edi,eax
  4012c2:	clc    
  4012c3:	aas    
  4012c4:	mov    al,0x12
  4012c6:	in     al,dx
  4012c7:	popf   
  4012c8:	loop   0x4012b5
  4012ca:	mov    cs,WORD PTR [edx]
  4012cc:	pop    ss
  4012cd:	cmp    al,0xb4
  4012d0:	pop    ecx
  4012d1:	scas   al,BYTE PTR es:[edi]
  4012d2:	shr    BYTE PTR [edx+0x24],0xb5
  4012d6:	lea    edi,[edi+0x1b]
  4012d9:	adc    ecx,DWORD PTR [eax+eax*1]
  4012dc:	adc    DWORD PTR [edi+0x1c65ec21],0x60
  4012e3:	jnp    0x40132b
  4012e5:	add    DWORD PTR [esi],edi
  4012e7:	jo     0x4012f9
  4012e9:	mov    edi,0x2984a519
  4012ee:	xor    esi,0xffffffd8
  4012f1:	xchg   edx,eax
  4012f2:	aad    0x2b
  4012f4:	in     al,0x4e
  4012f6:	jns    0x401297
  4012f8:	xchg   esi,eax
  4012f9:	sub    dl,0x91
  4012fc:	bound  edx,QWORD PTR [ebx]
  4012fe:	xchg   edi,eax
  4012ff:	pop    edi
  401300:	cld    
  401301:	jl     0x40131e
  401303:	pop    ecx
  401304:	mov    cl,0xd0
  401306:	cmp    DWORD PTR [edx-0x6d6620d9],eax
  40130c:	rol    DWORD PTR [ebp-0x3c58db73],cl
  401312:	mov    ecx,0xd06a3bd4
  401317:	fadd   DWORD PTR [edx]
  401319:	stos   BYTE PTR es:[edi],al
  40131a:	dec    edx
  40131b:	(bad)  
  40131c:	daa    
  40131d:	jge    0x401315
  40131f:	cwde   
  401320:	call   0x38c3:0x55d828b0
  401327:	jo     0x401335
  401329:	sar    BYTE PTR [edi+edx*2+0x18088fec],cl
  401330:	jp     0x401394
  401332:	dec    edx
  401333:	jge    0x401398
  401335:	pusha  
  401336:	add    DWORD PTR ds:0x377de8fb,eax
  40133c:	(bad)  
  40133d:	lds    esi,FWORD PTR [esi]
  40133f:	push   0xffffffe2
  401341:	mov    ebp,0x346f9c20
  401346:	xchg   esi,eax
  401347:	jecxz  0x401366
  401349:	psubd  mm7,mm2
  40134c:	mov    ebp,0x6084d029
  401351:	mov    bl,bl
  401353:	test   DWORD PTR [edi],edi
  401355:	jo     0x40133c
  401357:	xor    al,dh
  401359:	xor    ecx,0xfffffffd
  40135c:	dec    esp
  40135d:	sub    dl,0xbe
  401360:	or     DWORD PTR [esi+0x63],ebp
  401363:	out    dx,eax
  401364:	adc    ch,BYTE PTR [edx-0x4cf6cf7f]
  40136a:	push   cs
  40136b:	xor    DWORD PTR ds:0xe80908bf,eax
  401371:	mov    bl,0xc3
  401373:	lods   eax,DWORD PTR ds:[esi]
  401374:	sub    DWORD PTR [esi],edx
  401376:	in     eax,0x46
  401378:	mov    dh,0x45
  40137a:	mov    cl,0x1c
  40137c:	ret    
  40137d:	inc    edx
  40137e:	pop    esp
  40137f:	jns    0x4013aa
  401381:	sub    eax,0x875fc5f5
  401386:	sbb    bl,BYTE PTR [ebx-0x26]
  401389:	push   0xca1a9ead
  40138e:	retf   
  40138f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401390:	stos   DWORD PTR es:[edi],eax
  401391:	jb     0x401405
  401393:	bound  ecx,QWORD PTR [esi+ebp*2+0x9]
  401397:	jl     0x4013f6
  401399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40139a:	or     BYTE PTR [edx],0x36
  40139d:	xchg   BYTE PTR [ebx-0x794ca4ab],cl
  4013a3:	popf   
  4013a4:	adc    BYTE PTR [edi-0x4858aa71],dl
  4013aa:	cmc    
  4013ab:	addr16 imul dh
  4013ae:	xchg   edx,eax
  4013af:	out    dx,al
  4013b0:	sbb    BYTE PTR [ebx],cl
  4013b2:	scas   eax,DWORD PTR es:[edi]
  4013b3:	imul   edx
  4013b5:	fild   WORD PTR [ecx+0x1bd2fac6]
  4013bb:	inc    edi
  4013bc:	sti    
  4013bd:	clc    
  4013be:	jp     0x40136d
  4013c0:	outs   dx,BYTE PTR ds:[esi]
  4013c1:	and    al,0x3f
  4013c3:	dec    ebp
  4013c4:	(bad)  
  4013c5:	or     ah,dh
  4013c7:	inc    edx
  4013c8:	lods   eax,DWORD PTR ds:[esi]
  4013c9:	stos   DWORD PTR es:[edi],eax
  4013ca:	xor    eax,0x7459f253
  4013cf:	stos   DWORD PTR es:[edi],eax
  4013d0:	into   
  4013d1:	push   ebx
  4013d2:	or     dl,BYTE PTR [edx-0xa0562f3]
  4013d8:	pop    ebp
  4013d9:	or     al,0xdd
  4013db:	pop    ss
  4013dc:	aam    0x30
  4013de:	in     al,dx
  4013df:	pushf  
  4013e0:	dec    edi
  4013e1:	loope  0x401410
  4013e3:	jno    0x40137a
  4013e5:	aad    0xa
  4013e7:	int3   
  4013e8:	bound  eax,QWORD PTR [ebx]
  4013ea:	fild   WORD PTR [ebx+0xb]
  4013ed:	aad    0x9d
  4013ef:	xchg   DWORD PTR [esi-0x14],ecx
  4013f2:	stos   BYTE PTR es:[edi],al
  4013f3:	mov    bl,0x4f
  4013f5:	test   eax,0x9ecd8e3f
  4013fa:	scas   eax,DWORD PTR es:[edi]
  4013fb:	pop    ebx
  4013fc:	inc    ecx
  4013fd:	mov    cl,0xb5
  4013ff:	jo     0x4013d2
  401401:	xchg   edx,eax
  401402:	jne    0x40143c
  401404:	in     eax,dx
  401405:	ds pop ebp
  401407:	add    al,0xaf
  401409:	or     ecx,edi
  40140b:	loop   0x40147e
  40140d:	loop   0x401480
  40140f:	int3   
  401410:	(bad)  
  401411:	enter  0x41c4,0x8d
  401415:	cmp    BYTE PTR [edi-0x5249b00c],ah
  40141b:	jns    0x40139e
  40141d:	inc    esi
  40141e:	cmp    al,bh
  401420:	xlat   BYTE PTR ds:[ebx]
  401421:	pminub mm3,QWORD PTR [eax+0x421354ff]
  401428:	mov    dh,0xfe
  40142a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40142b:	push   ebx
  40142c:	adc    bh,BYTE PTR [ebx]
  40142e:	outs   dx,DWORD PTR ds:[esi]
  40142f:	pop    ebx
  401430:	mov    esi,0x1ff6ea1f
  401435:	or     ch,BYTE PTR [edi]
  401437:	repnz inc ebx
  401439:	test   BYTE PTR [esi],ch
  40143b:	cmp    esp,DWORD PTR [esi+0x16]
  40143e:	dec    eax
  40143f:	inc    edi
  401440:	(bad)  
  401441:	adc    bh,dh
  401443:	cmp    bh,BYTE PTR [esp+esi*2]
  401446:	out    0xc3,eax
  401448:	into   
  401449:	nop
  40144a:	stos   BYTE PTR es:[edi],al
  40144b:	add    ch,dh
  40144d:	daa    
  40144e:	cwde   
  40144f:	repnz pop eax
  401451:	iret   
  401452:	arpl   WORD PTR [eax+0x625b2af6],ax
  401458:	mov    ebx,0xb07f333d
  40145d:	mov    eax,0x9da90d7f
  401462:	cs xor al,0xc6
  401465:	and    WORD PTR [ecx],si
  401468:	enter  0x2ba8,0x6e
  40146c:	int    0x87
  40146e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40146f:	xchg   DWORD PTR [edx+0x6bd1dce1],edi
  401475:	inc    esp
  401476:	pop    ecx
  401477:	cli    
  401478:	inc    edi
  401479:	mov    DWORD PTR ds:0x5b8c1b83,edx
  40147f:	popa   
  401480:	fsubr  QWORD PTR [ebx-0x49]
  401483:	sub    esi,0xffffff8a
  401486:	mov    esi,0xc01d30c7
  40148b:	sbb    DWORD PTR [esi-0x126db47f],edx
  401491:	aad    0xad
  401493:	dec    esp
  401494:	adc    DWORD PTR [esi],edx
  401496:	push   0x842db670
  40149b:	mov    ds:0x8ce2498,al
  4014a0:	mov    bh,0x4c
  4014a2:	(bad)  
  4014a3:	(bad)  
  4014a4:	ja     0x401434
  4014a6:	adc    eax,0x3ef43fb
  4014ab:	pop    ds
  4014ac:	push   ebx
  4014ad:	stos   BYTE PTR es:[edi],al
  4014ae:	ret    
  4014af:	cs xchg esi,ebp
  4014b2:	or     BYTE PTR [esi],bh
  4014b4:	rcr    BYTE PTR [ebx-0xeae1e66],0x49
  4014bb:	push   es
  4014bc:	dec    ebp
  4014bd:	jl     0x401477
  4014bf:	sub    al,0xf3
  4014c1:	or     dh,bh
  4014c3:	arpl   WORD PTR ds:0x267ca28a,ax
  4014c9:	push   ebp
  4014ca:	mov    bl,0xc6
  4014cc:	pop    esp
  4014cd:	xchg   ebx,eax
  4014ce:	and    eax,0x271b29f1
  4014d3:	addr16 hlt 
  4014d5:	ds jg  0x401556
  4014d8:	je     0x401493
  4014da:	jno    0x40154d
  4014dc:	repz sbb ecx,ecx
  4014df:	in     eax,0x48
  4014e1:	push   ss
  4014e2:	mov    dl,0xdf
  4014e4:	aad    0xd0
  4014e6:	inc    eax
  4014e7:	in     al,dx
  4014e8:	adc    DWORD PTR [ebp-0x1d8353f1],0x67f7ae50
  4014f2:	sbb    eax,0x81a0404a
  4014f7:	sbb    ah,BYTE PTR [eax+0x28efecb7]
  4014fd:	sbb    BYTE PTR [ebp+0x1f],al
  401500:	fdivr  DWORD PTR [ebx]
  401502:	fisttp QWORD PTR [edi+esi*4-0x34]
  401506:	adc    eax,0xc4cc59ea
  40150b:	dec    esp
  40150c:	xchg   BYTE PTR [edx],bh
  40150e:	mov    ch,0x70
  401510:	retf   0x6e62
  401513:	(bad)  
  401514:	out    0x7,al
  401516:	hlt    
  401517:	adc    eax,ebx
  401519:	dec    ebx
  40151a:	std    
  40151b:	pusha  
  40151c:	mov    bh,ch
  40151e:	xchg   DWORD PTR [ebp-0x2c],esp
  401521:	aas    
  401522:	lods   eax,DWORD PTR ds:[esi]
  401523:	shl    BYTE PTR [ebx],0xc0
  401526:	push   eax
  401527:	adc    eax,0xd6704238
  40152c:	(bad)  
  40152e:	sti    
  40152f:	xchg   esi,eax
  401530:	out    0x23,eax
  401532:	add    ch,BYTE PTR [ecx]
  401534:	add    dl,BYTE PTR [ebx+ebp*8-0x4cea1cb7]
  40153b:	dec    esp
  40153c:	xor    ch,BYTE PTR [eax+0x47]
  40153f:	cld    
  401540:	lods   al,BYTE PTR ds:[esi]
  401541:	mov    DWORD PTR [edi+0x74],edi
  401544:	or     esi,edi
  401546:	call   0xd6fe:0xa53c13f5
  40154d:	icebp  
  40154e:	push   DWORD PTR [esi-0x1c5a8b76]
  401554:	lock adc bl,dl
  401557:	pop    esi
  401558:	popa   
  401559:	mov    ah,0x7
  40155b:	test   BYTE PTR [ebx-0x185249ce],dh
  401561:	mov    al,ds:0xc02b4236
  401566:	(bad)  
  401567:	sti    
  401568:	jg     0x4014ee
  40156a:	jl     0x4014fb
  40156c:	xchg   BYTE PTR [edx],dl
  40156e:	pop    ss
  40156f:	jecxz  0x401556
  401571:	sbb    al,BYTE PTR [esi+0x44]
  401574:	cli    
  401575:	or     DWORD PTR [esi+eax*2+0x5ac39d26],esp
  40157c:	outs   dx,BYTE PTR ds:[esi]
  40157d:	jle    0x401532
  40157f:	push   ebp
  401580:	mov    al,0x22
  401582:	and    esi,ebp
  401584:	mov    edi,0x8e2a76ee
  401589:	add    ebx,ecx
  40158b:	mov    DWORD PTR [edx-0x503ceca],ebp
  401591:	lock shr ecx,0x2
  401595:	xor    DWORD PTR [ecx],ecx
  401597:	stc    
  401598:	stos   DWORD PTR es:[edi],eax
  401599:	popa   
  40159a:	sub    al,0xf5
  40159c:	(bad)  
  40159d:	fucomi st,st(1)
  40159f:	adc    BYTE PTR [edx],dh
  4015a1:	jle    0x4015ce
  4015a3:	repz and BYTE PTR cs:[ebx+0x498e026],dl
  4015ab:	sbb    bh,BYTE PTR [edx*2+0xefbfd36]
  4015b2:	repnz xchg ecx,eax
  4015b4:	mov    ah,0x11
  4015b6:	dec    esi
  4015b7:	jmp    0xc6fc:0x16356fe1
  4015be:	xor    BYTE PTR [esi],ah
  4015c0:	xchg   esp,eax
  4015c1:	sahf   
  4015c2:	mov    esi,0xe346db49
  4015c7:	xor    BYTE PTR [ecx],al
  4015c9:	inc    edi
  4015ca:	add    DWORD PTR [edx],esp
  4015cc:	rol    BYTE PTR [ebx+eiz*8-0x710f3ffd],0x87
  4015d4:	xor    al,0xfe
  4015d6:	lahf   
  4015d7:	cmp    BYTE PTR [eax-0x44fd6e85],bl
  4015dd:	(bad)  
  4015de:	lods   eax,DWORD PTR ds:[esi]
  4015df:	inc    esp
  4015e0:	pop    ds
  4015e1:	cmc    
  4015e2:	push   0x6be46f33
  4015e7:	(bad)  
  4015e8:	stos   BYTE PTR es:[edi],al
  4015e9:	ja     0x40156d
  4015eb:	cmp    BYTE PTR [ecx],bh
  4015ed:	pop    ss
  4015ee:	shl    BYTE PTR [ecx],1
  4015f0:	jmp    0x4015f3
  4015f2:	repz sti 
  4015f4:	(bad)  [esi-0x37]
  4015f7:	lds    edx,FWORD PTR [esi-0x5823ae48]
  4015fd:	sbb    al,0xe3
  4015ff:	adc    al,0xf7
  401601:	push   esi
  401602:	in     eax,dx
  401603:	mov    ecx,0x7992c2e2
  401608:	xchg   esp,eax
  401609:	mov    dl,0x5
  40160b:	lea    ebx,[edx]
  40160d:	daa    
  40160e:	or     bl,BYTE PTR es:[edi-0x3]
  401612:	mov    edx,DWORD PTR [ebx-0x49]
  401615:	repz fdivr DWORD PTR [edi+edi*4-0x80]
  40161a:	mov    BYTE PTR [ebp-0x5263aa8c],ch
  401620:	call   0x9616bafb
  401625:	(bad)
  401628:	out    0xd1,eax
  40162a:	jecxz  0x4015c0
  40162c:	xchg   ebp,eax
  40162d:	sub    al,0x67
  40162f:	xor    ch,dl
  401631:	push   esp
  401632:	inc    edi
  401633:	mov    ebp,0xd5e5df01
  401638:	jne    0x401627
  40163a:	pop    ebp
  40163b:	xchg   edi,eax
  40163c:	repz adc BYTE PTR [ecx+0x69584171],0x74
  401644:	pop    edi
  401645:	jmp    0x5f88:0x74167d7b
  40164c:	and    BYTE PTR [edi],ah
  40164e:	or     eax,eax
  401650:	mov    eax,ds
  401652:	ins    BYTE PTR es:[edi],dx
  401653:	pop    esp
  401654:	xchg   esi,eax
  401655:	mov    ch,0x85
  401657:	dec    ebx
  401658:	pop    esp
  401659:	adc    BYTE PTR ds:0xf1ee5b15,bl
  40165f:	mov    ch,0x4d
  401661:	imul   edx,DWORD PTR [eax+0x34b9b9d9],0xffffffc5
  401668:	push   eax
  401669:	adc    dl,BYTE PTR [ebx-0x828a736]
  40166f:	dec    esi
  401670:	xchg   ecx,eax
  401671:	pop    eax
  401672:	cli    
  401673:	cmc    
  401674:	iret   
  401675:	retf   
  401676:	push   eax
  401677:	pop    ds
  401678:	imul   esi,DWORD PTR [ebx+0x27],0xffffffdc
  40167c:	jmp    0x40162e
  40167e:	jp     0x4016ff
  401680:	mov    ds:0xd9ce938f,al
  401685:	mov    ebp,0x9c2f2dd9
  40168a:	jo     0x401672
  40168c:	push   edx
  40168d:	push   esp
  40168e:	pushf  
  40168f:	imul   edx,DWORD PTR ds:0x15cb6716,0x46
  401696:	pop    ebp
  401697:	test   DWORD PTR [esi],0x77485e96
  40169d:	jo     0x40163a
  40169f:	add    BYTE PTR [ebx+0x44],dl
  4016a2:	inc    ebp
  4016a3:	mov    esi,DWORD PTR [ebx+0x3]
  4016a6:	sbb    dh,BYTE PTR [esi-0x339b4f13]
  4016ac:	xor    al,0xc8
  4016ae:	sub    eax,0xa324470d
  4016b3:	fdivr  st(6),st
  4016b5:	hlt    
  4016b6:	mov    edi,0x921008d5
  4016bb:	and    bh,BYTE PTR [ecx+0x5ebdc832]
  4016c1:	inc    ecx
  4016c2:	fidiv  WORD PTR [ebx]
  4016c4:	scas   al,BYTE PTR es:[edi]
  4016c5:	pop    es
  4016c6:	xchg   dl,al
  4016c8:	rcr    BYTE PTR [edi-0x274d37b1],cl
  4016ce:	sbb    al,0x2f
  4016d1:	pop    esi
  4016d2:	jne    0x4016a1
  4016d4:	jmp    0x6945:0x7c00ca45
  4016db:	fld    DWORD PTR [ebx-0x4e]
  4016de:	push   es
  4016df:	dec    bp
  4016e1:	daa    
  4016e2:	push   0x10
  4016e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016e5:	test   al,0x17
  4016e7:	xchg   esi,edx
  4016e9:	call   0xdbb49b3d
  4016ee:	add    edx,DWORD PTR [ebp+0x46ce7fb8]
  4016f4:	ret    0xa15
  4016f7:	inc    edx
  4016f8:	sti    
  4016f9:	dec    edx
  4016fa:	mov    dl,0xfb
  4016fc:	inc    esp
  4016fd:	aaa    
  4016fe:	pop    ecx
  4016ff:	jle    0x73d0a174
  401705:	xor    esp,DWORD PTR [ebp+esi*4-0x2e44e849]
  40170c:	aas    
  40170d:	arpl   WORD PTR [edi],sp
  40170f:	mov    ds:0xbc5b077,al
  401714:	mov    ?,WORD PTR [edi-0x4f]
  401717:	dec    esp
  401718:	aad    0x35
  40171a:	xchg   BYTE PTR [esi-0x1a],ch
  40171d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40171e:	lds    edx,FWORD PTR [ecx+0x44]
  401721:	cdq    
  401722:	mov    eax,0x7c3868e3
  401727:	lahf   
  401728:	jge    0x4017a7
  40172a:	ins    DWORD PTR es:[edi],dx
  40172b:	jnp    0x40170f
  40172d:	inc    edi
  40172e:	ror    BYTE PTR [eax+0x60e99567],0x94
  401735:	cmp    DWORD PTR [edi-0x56941891],edx
  40173b:	icebp  
  40173c:	mov    ds:0x1c1f2de9,al
  401741:	and    esi,DWORD PTR [edi+esi*4+0x13ca33c3]
  401748:	or     BYTE PTR [eax-0x6a],cl
  40174b:	dec    esi
  40174c:	sub    BYTE PTR [edx-0xf],0x83
  401750:	inc    ebx
  401751:	sbb    al,0xfb
  401753:	leave  
  401754:	out    dx,al
  401755:	(bad)  
  401756:	and    DWORD PTR cs:[esi],ebp
  401759:	repnz inc ebp
  40175b:	stos   DWORD PTR es:[edi],eax
  40175c:	push   ds
  40175d:	sub    ecx,DWORD PTR [bx+di]
  401760:	hlt    
  401761:	aaa    
  401762:	lea    edx,ds:0x934d9f1a
  401768:	jmp    0x50969f02
  40176d:	dec    ebx
  40176e:	mov    bh,0x80
  401770:	lods   eax,DWORD PTR ds:[esi]
  401771:	dec    esi
  401772:	inc    ebx
  401773:	add    esp,DWORD PTR [ebx-0x73]
  401776:	and    BYTE PTR [ecx+0x23a12139],bh
  40177c:	inc    edi
  40177d:	mov    BYTE PTR [ecx+0x64ef0704],al
  401783:	or     al,0xd0
  401785:	pop    ds
  401786:	sub    dh,BYTE PTR [ebx+0x4c]
  401789:	outs   dx,DWORD PTR ds:[esi]
  40178a:	shr    BYTE PTR [ebp+0x63d96097],1
  401790:	ds mov bl,0x1b
  401793:	repnz adc esi,0x22d77bb4
  40179a:	add    edx,edx
  40179c:	and    edx,DWORD PTR [ebp-0x680ad9a0]
  4017a2:	add    DWORD PTR [eax+0x7d160784],esi
  4017a8:	mov    dl,0x13
  4017aa:	call   0x5295:0xa693d66c
  4017b1:	(bad)  
  4017b2:	outs   dx,DWORD PTR ds:[esi]
  4017b3:	daa    
  4017b4:	hlt    
  4017b5:	and    bh,BYTE PTR [ebx]
  4017b7:	add    eax,0xf94b1edb
  4017bc:	jge    0x40181b
  4017be:	test   al,0x4c
  4017c0:	push   ebp
  4017c1:	xor    DWORD PTR [ebx-0x3785338b],esp
  4017c7:	mov    edx,0xd42268b0
  4017cc:	mov    ah,0x76
  4017ce:	adc    BYTE PTR [ebx+0x533f4d53],ah
  4017d4:	jo     0x401840
  4017d6:	lea    ecx,[esi]
  4017d8:	push   esi
  4017d9:	mov    bl,0x89
  4017db:	(bad)  
  4017dc:	inc    esp
  4017dd:	mov    dh,0x35
  4017df:	sti    
  4017e0:	out    0x3c,eax
  4017e2:	lea    edi,[eax]
  4017e4:	iret   
  4017e5:	xor    al,BYTE PTR [edi+ebp*8]
  4017e8:	sub    eax,0x4c365aea
  4017ed:	jmp    0x74a1:0x47f10d6f
  4017f4:	das    
  4017f5:	enter  0xfc9b,0xa2
  4017f9:	sub    BYTE PTR [esi+0x178d4de0],bh
  4017ff:	push   cs
  401800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401801:	cmp    DWORD PTR [edi],ecx
  401803:	sbb    DWORD PTR [edi],ebx
  401805:	fnstsw WORD PTR [esi]
  401807:	cs inc ecx
  401809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40180a:	xor    ebp,DWORD PTR [esi]
  40180c:	adc    al,bl
  40180e:	shl    BYTE PTR [ecx+0xbf03434],1
  401814:	sbb    bh,BYTE PTR [edx+0x3f]
  401817:	iret   
  401818:	aaa    
  401819:	mov    edi,0xe3b4f75d
  40181e:	dec    ebx
  40181f:	sbb    al,bh
  401821:	inc    ebp
  401822:	in     eax,dx
  401823:	push   es
  401824:	dec    edx
  401825:	mov    eax,0x1189cf46
  40182a:	ins    BYTE PTR es:[edi],dx
  40182b:	retf   0xefdd
  40182e:	imul   esp,ecx,0xffffffab
  401831:	mov    ebx,DWORD PTR [esi+0x6c5172d8]
  401837:	pop    esp
  401838:	cs mov dh,0x2c
  40183b:	jle    0x401801
  40183d:	adc    eax,0xad04f365
  401842:	dec    ebx
  401843:	sar    DWORD PTR [edi*4-0x65524fd3],cl
  40184a:	xor    al,0xef
  40184c:	xor    al,0x8f
  40184e:	mov    ecx,0x6f324c3
  401853:	cwde   
  401854:	jmp    0xf05b:0xbda9c836
  40185b:	fnstcw WORD PTR [esi+eax*4+0x350fb5f4]
  401862:	push   edi
  401863:	int    0x4d
  401865:	imul   esi,DWORD PTR [edx],0xf
  401868:	int    0x34
  40186a:	sbb    ah,ah
  40186c:	mov    dh,BYTE PTR [edx]
  40186e:	div    BYTE PTR [eax+edx*4+0x6c56397a]
  401875:	dec    ebp
  401876:	adc    eax,0x357633a5
  40187b:	aam    0x92
  40187d:	cs sbb ch,0x67
  401881:	fcmovnb st,st(7)
  401883:	lock out 0xc0,eax
  401886:	adc    eax,0x76e591a
  40188b:	xor    DWORD PTR [ebp+0x57c145df],esp
  401891:	sub    dh,BYTE PTR [edx+ebx*2-0x75]
  401895:	dec    ecx
  401896:	mov    edx,0x660d8ce3
  40189b:	outs   dx,DWORD PTR ds:[esi]
  40189c:	xor    ah,cl
  40189e:	lods   al,BYTE PTR ds:[esi]
  40189f:	pop    ecx
  4018a0:	ins    DWORD PTR es:[edi],dx
  4018a1:	(bad)  
  4018a2:	fwait
  4018a3:	scas   eax,DWORD PTR es:[edi]
  4018a4:	test   DWORD PTR [edi-0x18213955],esi
  4018aa:	test   BYTE PTR [edi-0x13],bh
  4018ad:	dec    edi
  4018ae:	lods   eax,DWORD PTR ds:[esi]
  4018af:	push   ds
  4018b0:	ins    DWORD PTR es:[edi],dx
  4018b1:	push   ebp
  4018b2:	pop    ebp
  4018b3:	leave  
  4018b4:	or     edi,DWORD PTR [ebx-0x5abfabfd]
  4018ba:	retf   0x1eaa
  4018bd:	cs add bl,dl
  4018c0:	pusha  
  4018c1:	pop    edi
  4018c2:	imul   ebx,DWORD PTR ds:0xe560ba86,0x979e098e
  4018cc:	pushf  
  4018cd:	dec    edi
  4018ce:	jne    0x4018a2
  4018d0:	jo     0x4018ee
  4018d2:	jbe    0x401874
  4018d4:	push   ecx
  4018d5:	xor    DWORD PTR [ecx],edi
  4018d7:	cs xor ah,cl
  4018da:	fmul   QWORD PTR [edx-0x373c078f]
  4018e0:	pop    edi
  4018e1:	lds    eax,FWORD PTR [ebp+0x5003589c]
  4018e7:	push   0xfffffff4
  4018e9:	rcr    eax,cl
  4018eb:	xlat   BYTE PTR ds:[ebx]
  4018ec:	div    BYTE PTR [ecx+0x30]
  4018ef:	(bad)  
  4018f0:	mov    al,0xbf
  4018f2:	sbb    DWORD PTR [esi-0x72],0xffffff98
  4018f6:	addr16 add eax,0xd8e4edd8
  4018fc:	stc    
  4018fd:	push   ebp
  4018fe:	jp     0x401922
  401900:	dec    edi
  401901:	mov    al,0x8b
  401903:	xchg   edx,eax
  401904:	adc    esi,eax
  401906:	sub    bl,BYTE PTR [ecx+0x28]
  401909:	std    
  40190a:	jg     0x40197d
  40190c:	jmp    0xfa3b804b
  401911:	jle    0x401901
  401913:	test   al,0x22
  401915:	cmp    ah,ch
  401917:	pushf  
  401918:	jl     0x401965
  40191a:	mov    edi,0x4e54cdc9
  40191f:	push   cs
  401920:	js     0x4019a0
  401922:	mov    ecx,0xc9d4d29e
  401927:	popa   
  401928:	dec    edi
  401929:	mov    dh,0x12
  40192b:	ds ds dec esp
  40192e:	push   ds
  40192f:	sar    al,cl
  401931:	push   ss
  401932:	addr16 cmp al,0x6f
  401935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401936:	dec    esp
  401937:	and    al,0xec
  401939:	ins    DWORD PTR es:[edi],dx
  40193a:	outs   dx,DWORD PTR ds:[esi]
  40193b:	test   BYTE PTR [eax-0x15e4b0f1],0x2b
  401942:	call   0x88be:0xfa1e69f6
  401949:	sub    eax,0x185ad030
  40194e:	jns    0x4018e4
  401950:	dec    edx
  401951:	pop    ebp
  401952:	lahf   
  401953:	jecxz  0x40199e
  401955:	in     eax,dx
  401956:	into   
  401957:	fs sahf 
  401959:	ror    BYTE PTR [eax],0x26
  40195c:	call   DWORD PTR [ecx+0x7db37fc0]
  401962:	xchg   edi,eax
  401963:	fnstcw WORD PTR [eax-0x65]
  401966:	mov    ch,0x20
  401968:	in     eax,dx
  401969:	iret   
  40196a:	adc    eax,0x9a6813a7
  40196f:	sbb    al,0xb3
  401971:	mov    ds:0x8da2f92e,eax
  401976:	ins    BYTE PTR es:[edi],dx
  401977:	xchg   DWORD PTR [edi+0x3591c0db],edx
  40197d:	in     al,dx
  40197e:	or     BYTE PTR [eax+ebx*4],ch
  401981:	mov    dh,0x17
  401983:	clc    
  401984:	outs   dx,DWORD PTR ds:[esi]
  401985:	and    eax,DWORD PTR [eax+0x588b01e9]
  40198b:	pop    ss
  40198c:	mov    dl,0x30
  40198e:	push   0x46
  401990:	cmp    esp,DWORD PTR [esi+0x21caaa74]
  401996:	hlt    
  401997:	add    BYTE PTR ds:0xa1387dd9,ah
  40199d:	or     al,BYTE PTR [eax+0x4]
  4019a0:	jbe    0x401967
  4019a2:	push   eax
  4019a3:	aas    
  4019a4:	mov    bl,0xe6
  4019a6:	ins    DWORD PTR es:[edi],dx
  4019a7:	and    BYTE PTR [ebx+0x2beaae2f],ch
  4019ad:	cmc    
  4019ae:	loop   0x4019a8
  4019b0:	lea    eax,[esi-0x201f5786]
  4019b6:	add    eax,0xe0532c2d
  4019bb:	push   es
  4019bc:	mov    dh,0xa2
  4019be:	inc    esi
  4019bf:	xchg   BYTE PTR [eax],cl
  4019c1:	stc    
  4019c2:	data16 ins BYTE PTR es:[edi],dx
  4019c4:	pop    ss
  4019c5:	enter  0xaf55,0x64
  4019c9:	and    DWORD PTR [ebx+0x5cfb573],edx
  4019cf:	rep outs dx,BYTE PTR ds:[esi]
  4019d1:	int    0x54
  4019d3:	mov    BYTE PTR [esi-0x94d4552],bl
  4019d9:	dec    ebp
  4019da:	mov    esp,0xc9cbc353
  4019df:	in     al,dx
  4019e0:	data16 int 0xd0
  4019e3:	xchg   ebx,eax
  4019e4:	jne    0x401999
  4019e6:	(bad)  
  4019e7:	mov    WORD PTR [ebp-0x4a],ss
  4019ea:	mov    bh,BYTE PTR [eax-0x7b]
  4019ed:	arpl   ax,si
  4019ef:	xor    edx,DWORD PTR [esp+ebp*1+0x7bcbfc8]
  4019f6:	aad    0x12
  4019f8:	add    eax,0xad80d61d
  4019fd:	dec    edx
  4019fe:	cmp    DWORD PTR [edi+0x47e80d0a],0x15
  401a05:	out    0xce,eax
  401a07:	add    esp,edx
  401a09:	icebp  
  401a0a:	je     0x401a16
  401a0c:	jmp    0x401a15
  401a0e:	push   edi
  401a0f:	adc    edx,0x59
  401a12:	dec    eax
  401a13:	fidiv  DWORD PTR [edi+0x5aed306c]
  401a19:	pop    es
  401a1a:	or     eax,DWORD PTR [eax+0x41017370]
  401a20:	icebp  
  401a21:	sub    al,al
  401a23:	mov    ecx,0x44262b4b
  401a28:	sar    DWORD PTR [edx+0x50f07e92],cl
  401a2e:	inc    eax
  401a2f:	mov    dl,0x1d
  401a31:	aas    
  401a32:	repz sub al,0xde
  401a35:	(bad)  
  401a36:	hlt    
  401a37:	push   0xffffffc3
  401a39:	dec    esi
  401a3a:	and    DWORD PTR [ecx-0x3],edx
  401a3d:	test   al,0xd6
  401a3f:	std    
  401a40:	adc    ebp,esp
  401a42:	lock push ebp
  401a44:	fcmovnbe st,st(1)
  401a46:	jmp    0x69e4fef3
  401a4b:	xor    al,0x60
  401a4d:	shl    DWORD PTR [edi],1
  401a4f:	mov    gs,WORD PTR [eax+0x2d]
  401a52:	daa    
  401a53:	add    DWORD PTR [ecx-0x5a],0xf181f89f
  401a5a:	mov    ah,0x65
  401a5c:	aaa    
  401a5d:	push   0x30
  401a5f:	cmp    eax,0xf1542f16
  401a64:	shl    DWORD PTR [ebp+0x284a29ad],cl
  401a6a:	(bad)  
  401a6b:	aam    0xe2
  401a6d:	data16 int 0x6b
  401a70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a71:	mov    edi,0xc4981886
  401a76:	or     eax,0x83588354
  401a7b:	in     eax,dx
  401a7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a7d:	jnp    0x401adc
  401a7f:	pop    ecx
  401a80:	pop    es
  401a81:	out    0xaf,eax
  401a83:	and    BYTE PTR [edx],al
  401a85:	pop    esi
  401a86:	test   DWORD PTR [ebx+0x2c630a2e],0xa76a5d6d
  401a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a91:	dec    edx
  401a92:	fcom   DWORD PTR [ebx+0x654af9e6]
  401a98:	jp     0x401af7
  401a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a9b:	mov    BYTE PTR [ebx+eax*8-0xd],dl
  401a9f:	arpl   WORD PTR [ebp+0x7a33081d],bp
  401aa5:	test   BYTE PTR [edx-0x509d4c18],0x26
  401aac:	mov    eax,DWORD PTR [ebp-0x2d076044]
  401ab2:	pop    edx
  401ab3:	add    edi,edx
  401ab5:	mov    ah,0x1d
  401ab7:	int3   
  401ab8:	ins    DWORD PTR es:[edi],dx
  401ab9:	mov    al,ds:0xb95fa193
  401abe:	daa    
  401abf:	and    DWORD PTR [edx-0x12],esp
  401ac2:	(bad)  
  401ac3:	rol    DWORD PTR [eax+ecx*4-0x799cd835],0xaa
  401acb:	shl    BYTE PTR [edx+esi*8-0x4b1b749b],cl
  401ad2:	sbb    al,0xd1
  401ad4:	mov    esi,0xa73f3f2a
  401ad9:	ror    DWORD PTR [esi+0x74514200],cl
  401adf:	inc    esp
  401ae0:	inc    ebp
  401ae1:	mov    WORD PTR [ebx],?
  401ae3:	mov    bl,0x4e
  401ae5:	xchg   DWORD PTR [eax+eiz*4+0x7a4e2641],esi
  401aec:	gs pop ebp
  401aee:	les    esi,FWORD PTR [ebx-0x13]
  401af1:	jmp    0x17de:0xb14fc06
  401af8:	xchg   esp,eax
  401af9:	sbb    bl,BYTE PTR [edx]
  401afb:	mov    ah,0x2c
  401afd:	sti    
  401afe:	pusha  
  401aff:	jbe    0x401aec
  401b01:	fs mov edi,0xbaa2982
  401b07:	inc    ecx
  401b08:	xor    eax,0x11b1349a
  401b0d:	out    0x8f,al
  401b0f:	leave  
  401b10:	lds    ebx,FWORD PTR [edx]
  401b12:	sbb    ah,BYTE PTR [edi]
  401b14:	and    ch,BYTE PTR [ecx+0x41561d34]
  401b1a:	push   0x8b12df94
  401b1f:	adc    al,0xb0
  401b21:	mov    eax,ds:0x89e4d9e1
  401b26:	test   DWORD PTR [esi+0x392b1eaf],ebp
  401b2c:	and    BYTE PTR [edi],0xbf
  401b2f:	lods   al,BYTE PTR ds:[esi]
  401b30:	xor    eax,DWORD PTR [edx-0x659c75d5]
  401b36:	pop    es
  401b37:	sbb    DWORD PTR [edx+ebp*1-0x76],edi
  401b3b:	aaa    
  401b3c:	cmp    al,0x82
  401b3e:	gs pop ecx
  401b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b41:	pop    esp
  401b42:	mov    eax,cs:0xddb50026
  401b48:	or     DWORD PTR [edx-0x4eb6eca9],ebx
  401b4e:	sub    BYTE PTR [ebx],dl
  401b50:	out    0x18,eax
  401b52:	jb     0x401b41
  401b54:	lock xor esp,ecx
  401b57:	pop    es
  401b58:	add    DWORD PTR [ebp+0x7e],0x3d0a544e
  401b5f:	shl    BYTE PTR [ecx+0x663326e4],cl
  401b65:	test   DWORD PTR [edi],edi
  401b67:	cdq    
  401b68:	push   cs
  401b69:	lahf   
  401b6a:	inc    esi
  401b6b:	add    eax,0xdd2ce01c
  401b70:	xchg   edi,eax
  401b71:	(bad)  
  401b72:	and    BYTE PTR [eax],dl
  401b74:	or     ebx,DWORD PTR [eax]
  401b76:	pusha  
  401b77:	ret    0x66cf
  401b7a:	xchg   esp,eax
  401b7b:	push   ebp
  401b7c:	ror    ch,0xc6
  401b7f:	cmp    bh,BYTE PTR [edx+esi*4]
  401b82:	out    dx,eax
  401b83:	fs retf 0x2510
  401b87:	pop    edx
  401b88:	jnp    0x401b15
  401b8a:	enter  0x7523,0x54
  401b8e:	adc    al,BYTE PTR [esi-0x7ee47361]
  401b94:	inc    ebp
  401b95:	jge    0x401bf7
  401b97:	std    
  401b98:	or     eax,0x11dbb91d
  401b9d:	mov    ch,0x85
  401b9f:	fist   DWORD PTR [esi]
  401ba1:	cdq    
  401ba2:	outs   dx,BYTE PTR ds:[esi]
  401ba3:	lahf   
  401ba4:	shl    BYTE PTR [eax],cl
  401ba6:	jo     0x401b3b
  401ba8:	jnp    0x401b55
  401baa:	inc    esp
  401bab:	sbb    al,0x5d
  401bad:	push   edx
  401bae:	inc    edi
  401baf:	add    eax,0xcf9a01a2
  401bb4:	jecxz  0x401b37
  401bb6:	sbb    BYTE PTR [edx+0x7b4b87a6],dl
  401bbc:	mov    al,0x97
  401bbe:	dec    edx
  401bbf:	mov    DWORD PTR [edi*4-0x5938a1f],ebp
  401bc6:	imul   edi,DWORD PTR ds:0x4012088f,0xa3efef4b
  401bd0:	ins    DWORD PTR es:[edi],dx
  401bd1:	or     BYTE PTR [edi-0x40097aff],ch
  401bd7:	add    DWORD PTR [eax+0x39],ecx
  401bda:	jo     0x401c3a
  401bdc:	call   0x1f845efe
  401be1:	adc    edi,DWORD PTR [edi+0x5f88a62]
  401be7:	pusha  
  401be8:	pushf  
  401be9:	add    ah,cl
  401beb:	fisubr WORD PTR [ebx]
  401bed:	xchg   BYTE PTR [esi+0x2bb16ed3],ch
  401bf3:	cmp    eax,0x489b1d34
  401bf8:	aad    0x9e
  401bfa:	pop    eax
  401bfb:	pop    es
  401bfc:	mov    edi,0xb3cf7da4
  401c01:	dec    ebp
  401c02:	mov    al,ds:0x9b520e18
  401c07:	and    al,0x24
  401c09:	(bad)  
  401c0a:	pop    es
  401c0b:	iret   
  401c0c:	retf   0x30fe
  401c0f:	add    BYTE PTR [edx],bh
  401c11:	pusha  
  401c12:	pop    ds
  401c13:	test   DWORD PTR [edi-0x4],edi
  401c16:	inc    ebx
  401c17:	jo     0x401c66
  401c19:	sub    eax,DWORD PTR [ebp+0x660878d1]
  401c1f:	call   0x8fd3e889
  401c24:	xlat   BYTE PTR fs:[ebx]
  401c26:	cli    
  401c27:	dec    edi
  401c28:	push   esi
  401c29:	sub    edx,DWORD PTR [ebp+0x2bbfee0d]
  401c2f:	add    DWORD PTR [eax],esp
  401c31:	xchg   esp,eax
  401c32:	je     0x401c29
  401c34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c35:	out    dx,eax
  401c36:	adc    BYTE PTR [ecx],0x57
  401c39:	or     DWORD PTR ds:0xbf276bed,0x2e
  401c40:	jmp    0x401c2b
  401c42:	test   bh,0x8f
  401c45:	ja     0x401c44
  401c47:	mov    cl,0x3d
  401c49:	mov    cl,0x7f
  401c4b:	(bad)  
  401c4c:	lock scas eax,DWORD PTR es:[edi]
  401c4e:	fnstsw WORD PTR [edi]
  401c50:	adc    bh,BYTE PTR ds:[edx+0x20]
  401c54:	neg    DWORD PTR [edx]
  401c56:	int    0xf
  401c58:	dec    ebp
  401c59:	ds xchg ecx,eax
  401c5b:	idiv   BYTE PTR [ebp+0x17]
  401c5e:	(bad)  
  401c5f:	pop    esi
  401c60:	push   ebp
  401c61:	sub    BYTE PTR [eax],bl
  401c63:	fdiv   QWORD PTR ds:0xf2430ce
  401c69:	js     0x401cba
  401c6b:	(bad)  
  401c6c:	sub    eax,0x5b432e46
  401c71:	sbb    eax,0xa31fd925
  401c76:	push   ax
  401c78:	pop    esp
  401c79:	ins    DWORD PTR es:[edi],dx
  401c7a:	out    dx,eax
  401c7b:	lods   al,BYTE PTR ds:[esi]
  401c7c:	add    eax,0xba26f9f5
  401c81:	neg    DWORD PTR [edi]
  401c83:	in     al,0x2f
  401c85:	add    DWORD PTR [eax+0x65],ecx
  401c88:	mov    cl,0x32
  401c8a:	mov    dh,0xc0
  401c8c:	retf   0x1b53
  401c8f:	add    eax,0x62d73474
  401c94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c95:	ds je  0x401c69
  401c98:	sti    
  401c99:	xor    eax,0xe5712b3d
  401c9e:	daa    
  401c9f:	pop    ebp
  401ca0:	cmc    
  401ca1:	dec    esp
  401ca2:	(bad)  
  401ca4:	add    edx,DWORD PTR [edi+0x3d186185]
  401caa:	cmp    ecx,eax
  401cac:	out    dx,eax
  401cad:	xchg   DWORD PTR [ebp-0x75],ecx
  401cb0:	mov    al,0xcc
  401cb2:	std    
  401cb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cb4:	out    0xd,al
  401cb6:	ret    
  401cb7:	sub    edi,ecx
  401cb9:	adc    al,0xef
  401cbb:	push   ebx
  401cbc:	pop    esp
  401cbd:	sbb    cl,ch
  401cbf:	mov    WORD PTR [ecx-0x6644e094],fs
  401cc5:	ja     0x401c7d
  401cc7:	in     al,0xb
  401cc9:	lock out dx,al
  401ccb:	imul   eax,ebx,0xc497b05b
  401cd1:	dec    esi
  401cd2:	fs dec esp
  401cd4:	xchg   esi,eax
  401cd5:	xchg   edi,eax
  401cd6:	cdq    
  401cd7:	nop
  401cd8:	xor    al,0x8
  401cda:	pop    es
  401cdb:	inc    ebp
  401cdc:	jae    0x401ca1
  401cde:	sbb    DWORD PTR [esi+0x38a6a1f5],0xffffffd9
  401ce5:	cs hlt 
  401ce7:	in     eax,dx
  401ce8:	xlat   BYTE PTR ds:[ebx]
  401ce9:	icebp  
  401cea:	sbb    DWORD PTR [ecx-0x658e65d],ebx
  401cf0:	pop    ebp
  401cf1:	sbb    eax,0x4ab9ec5
  401cf6:	dec    ecx
  401cf7:	loop   0x401d05
  401cf9:	cmp    BYTE PTR [ecx+0x25fcecd3],0x2a
  401d00:	adc    eax,0xa1bca536
  401d05:	push   es
  401d06:	dec    edi
  401d07:	mov    ds:0xd0fe8903,al
  401d0c:	dec    esp
  401d0d:	and    BYTE PTR [eiz*4-0x6b29c965],cl
  401d14:	cld    
  401d15:	and    ch,ch
  401d17:	sbb    bl,BYTE PTR [ecx]
  401d19:	push   0x1d
  401d1b:	and    BYTE PTR [ecx+esi*1],bl
  401d1e:	inc    esi
  401d1f:	(bad)  
  401d20:	xchg   esi,eax
  401d21:	cmp    dl,BYTE PTR [ebp-0x20e0c904]
  401d27:	mov    WORD PTR [edi],gs
  401d29:	push   0x624de2c0
  401d2e:	pop    es
  401d2f:	pop    eax
  401d30:	push   eax
  401d31:	mov    dh,0xf3
  401d33:	or     DWORD PTR [edx-0x5b6830ae],ebx
  401d39:	push   ss
  401d3a:	adc    ecx,DWORD PTR [ecx-0x79058c31]
  401d40:	gs jmp 0x706e:0xfc357ac5
  401d48:	fild   WORD PTR [eax+ebp*8+0x728874d5]
  401d4f:	pushf  
  401d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d51:	inc    ecx
  401d52:	add    al,0xda
  401d54:	leave  
  401d55:	outs   dx,BYTE PTR ds:[esi]
  401d56:	sbb    al,0x6b
  401d58:	add    DWORD PTR [edx-0x65],ebx
  401d5b:	cmc    
  401d5c:	xchg   ebx,eax
  401d5d:	retf   0x5ebd
  401d60:	es mov al,0xd1
  401d63:	fld    QWORD PTR [edx+edx*8]
  401d66:	adc    DWORD PTR [edx-0x5c],0xffffff8a
  401d6a:	rcr    bh,1
  401d6c:	psubsb mm2,QWORD PTR [ebx+ebx*2+0x35]
  401d71:	leave  
  401d72:	(bad)  
  401d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d74:	inc    edx
  401d75:	or     ebp,DWORD PTR [eax+edx*2-0x1]
  401d79:	dec    edi
  401d7a:	call   0x5eca17ad
  401d7f:	loope  0x401ddc
  401d81:	(bad)  
  401d82:	(bad)  
  401d83:	cmc    
  401d84:	sbb    ecx,ebp
  401d86:	clc    
  401d87:	popa   
  401d88:	int    0x1f
  401d8a:	mov    dh,0x36
  401d8c:	(bad)  
  401d8d:	jb     0x401db7
  401d8f:	adc    DWORD PTR [esi+0x2c965a3a],ebp
  401d95:	xchg   esi,eax
  401d96:	mov    DWORD PTR [edi-0x63472ddc],ecx
  401d9c:	xor    al,BYTE PTR cs:[esi+0x5da83a23]
  401da3:	pop    ebx
  401da4:	mov    ds:0x5494995,al
  401da9:	jmp    0x1515909e
  401dae:	sbb    DWORD PTR ds:0xa4bc43f0,0x16cbbd31
  401db8:	out    0xff,al
  401dba:	mov    bl,0x3a
  401dbc:	into   
  401dbd:	test   al,0x2e
  401dbf:	adc    BYTE PTR [eax-0x35],cl
  401dc2:	xor    dl,al
  401dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dc5:	jne    0x401de9
  401dc7:	retf   0xe902
  401dca:	fucomip st,st(6)
  401dcc:	jle    0x401e4c
  401dce:	aas    
  401dcf:	pop    ds
  401dd0:	push   ds
  401dd1:	sahf   
  401dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dd3:	cmp    al,0x68
  401dd5:	xor    ch,dh
  401dd7:	(bad)  
  401dd8:	dec    eax
  401dd9:	nop
  401dda:	dec    esi
  401ddb:	xchg   ebp,eax
  401ddc:	cmp    eax,0xfe80907c
  401de1:	inc    eax
  401de2:	stc    
  401de3:	les    edi,FWORD PTR [ebp+0x3b53d308]
  401de9:	and    DWORD PTR [eax],ebp
  401deb:	mov    edx,0x7da23ce2
  401df0:	sbb    edi,esp
  401df2:	mov    dh,0xad
  401df4:	xor    BYTE PTR [edi-0x541281e1],cl
  401dfa:	repnz scas al,BYTE PTR es:[edi]
  401dfc:	or     bh,dh
  401dfe:	jo     0x401e48
  401e00:	cmp    al,0x95
  401e02:	ret    
  401e03:	push   eax
  401e04:	std    
  401e05:	int    0x9
  401e07:	icebp  
  401e08:	sub    DWORD PTR [esi],edx
  401e0a:	add    al,0x97
  401e0c:	inc    esp
  401e0d:	inc    esp
  401e0e:	aad    0x52
  401e10:	lock (bad) 
  401e12:	sahf   
  401e13:	jle    0x401dd1
  401e15:	cmc    
  401e16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e17:	inc    eax
  401e18:	addr16 adc eax,0xb3b7968
  401e1e:	int    0xf8
  401e20:	adc    al,0xc3
  401e22:	push   0x4d
  401e24:	fwait
  401e25:	div    BYTE PTR [ecx]
  401e27:	bswap  esi
  401e29:	jae    0x401dc8
  401e2b:	sbb    DWORD PTR [edi-0x7922f419],0xffffffe0
  401e32:	sub    eax,DWORD PTR [ebx+0x27]
  401e35:	shr    DWORD PTR [eax-0xe],1
  401e38:	xchg   BYTE PTR [ecx],al
  401e3a:	xchg   ebx,eax
  401e3b:	mov    eax,ds:0x68f15eff
  401e40:	(bad)  
  401e41:	fild   DWORD PTR [ebx+0x17]
  401e44:	jmp    0x1ad5:0x2cab98a8
  401e4b:	push   es
  401e4c:	popa   
  401e4d:	in     eax,0x4
  401e4f:	jge    0x401ea6
  401e51:	repnz cdq 
  401e53:	sbb    ecx,ebp
  401e55:	or     dh,BYTE PTR [edi-0xf0f6f7e]
  401e5b:	int    0xe2
  401e5d:	dec    edi
  401e5e:	dec    esp
  401e5f:	or     bh,dh
  401e61:	or     DWORD PTR [edi+0x29],ebp
  401e64:	fstp   TBYTE PTR [esp+ebx*4]
  401e67:	sbb    ebp,DWORD PTR [edi-0x6f604384]
  401e6d:	and    eax,0xf9966da6
  401e72:	add    eax,0xcb28308e
  401e77:	add    cl,ah
  401e79:	add    DWORD PTR [edi],esp
  401e7b:	daa    
  401e7c:	pop    ebx
  401e7d:	stc    
  401e7e:	stos   DWORD PTR es:[edi],eax
  401e7f:	xor    al,0x76
  401e81:	jae    0x401f00
  401e83:	fadd   DWORD PTR [edi-0xd1e2ae7]
  401e89:	sub    dh,dl
  401e8b:	popf   
  401e8c:	dec    eax
  401e8d:	fiadd  DWORD PTR [edi+0x4]
  401e90:	cli    
  401e91:	or     dl,bh
  401e93:	fld    TBYTE PTR es:[eax]
  401e96:	jl     0x401e48
  401e98:	pusha  
  401e99:	int    0xc6
  401e9b:	iret   
  401e9c:	retf   0x6db6
  401e9f:	jecxz  0x401e32
  401ea1:	pop    DWORD PTR [esi-0x5f11504]
  401ea7:	sbb    al,0x57
  401ea9:	lahf   
  401eaa:	cmp    eax,0x883764e1
  401eaf:	sbb    BYTE PTR [ebp+0x39],dl
  401eb2:	sar    BYTE PTR [ecx-0x6fb3170b],1
  401eb8:	add    al,BYTE PTR [esi-0x65992dd4]
  401ebe:	test   al,0x30
  401ec0:	es lahf 
  401ec2:	and    DWORD PTR [ebp+eax*4+0x42],eax
  401ec6:	jl     0x401e71
  401ec8:	sbb    ch,BYTE PTR [ebp-0x7ce880a8]
  401ece:	xor    esp,edi
  401ed0:	sub    DWORD PTR [edx+0x55],0xffffffbb
  401ed4:	add    eax,0x73028f60
  401ed9:	mov    ebx,0xdde642d7
  401ede:	xchg   ebp,eax
  401edf:	loopne 0x401f11
  401ee1:	mov    al,0x10
  401ee3:	mov    ah,0xa2
  401ee5:	push   es
  401ee6:	js     0x401e6d
  401ee8:	inc    eax
  401ee9:	xor    al,0xce
  401eeb:	xor    DWORD PTR [edx+edx*8],edx
  401eee:	xchg   ecx,eax
  401eef:	test   al,0x64
  401ef1:	jl     0x401f5e
  401ef3:	iret   
  401ef4:	jno    0x401f34
  401ef6:	inc    eax
  401ef7:	loope  0x401ed9
  401ef9:	popa   
  401efa:	sub    ebx,DWORD PTR [eax-0x16]
  401efd:	int    0xfb
  401eff:	in     eax,0x1b
  401f01:	ins    DWORD PTR es:[edi],dx
  401f02:	push   edi
  401f03:	sub    eax,0xedd194b1
  401f08:	ds leave 
  401f0a:	or     esi,edx
  401f0c:	jecxz  0x401e9e
  401f0e:	jg     0x401ec7
  401f10:	hlt    
  401f11:	mov    eax,ds:0x6b9a00ea
  401f16:	inc    eax
  401f17:	push   ss
  401f18:	shl    DWORD PTR [eax+0x10cf6d98],cl
  401f1e:	leave  
  401f1f:	popf   
  401f20:	mov    es,WORD PTR ds:0x7389d8d6
  401f26:	push   0x4b
  401f28:	mov    cl,0x1c
  401f2a:	call   0x1242a3f4
  401f2f:	scas   al,BYTE PTR es:[edi]
  401f30:	daa    
  401f31:	or     ch,bh
  401f33:	and    ah,BYTE PTR [edi+0x10b5b9]
  401f39:	or     eax,0x9be1aacd
  401f3e:	daa    
  401f3f:	cdq    
  401f40:	mov    DWORD PTR [ecx],edi
  401f42:	mov    gs,WORD PTR [esi+0x77]
  401f45:	push   ss
  401f46:	push   ss
  401f47:	cmp    eax,DWORD PTR [edi-0xb30fa8d]
  401f4d:	mov    ecx,0x46230f4
  401f52:	ret    0x5729
  401f55:	lods   eax,DWORD PTR ds:[esi]
  401f56:	sub    edx,DWORD PTR [edi]
  401f58:	pusha  
  401f59:	push   ecx
  401f5a:	add    DWORD PTR [ecx-0x32c02c2f],edi
  401f60:	mov    bl,BYTE PTR [eax-0x53]
  401f63:	mov    ebx,0x49303038
  401f68:	in     eax,0xb8
  401f6a:	and    DWORD PTR ds:[ebp+0x12],ecx
  401f6e:	cdq    
  401f6f:	icebp  
  401f70:	je     0x401fe9
  401f72:	and    ch,BYTE PTR [ebx]
  401f74:	mov    edx,0xd948c0bd
  401f7a:	cli    
  401f7b:	adc    DWORD PTR [esi],esi
  401f7d:	jle    0x401f74
  401f7f:	pop    ecx
  401f80:	scas   eax,DWORD PTR es:[edi]
  401f81:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  401f83:	sbb    eax,0xb7db609d
  401f88:	bound  esi,QWORD PTR gs:[esp+ebp*8]
  401f8c:	repz cmc 
  401f8e:	push   esp
  401f8f:	lods   al,BYTE PTR ds:[esi]
  401f90:	mov    dh,0x3d
  401f92:	xor    eax,0xc93534cf
  401f97:	ret    0x7dee
  401f9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f9b:	pop    edx
  401f9c:	xchg   ecx,eax
  401f9d:	jbe    0x401fc8
  401f9f:	xchg   ebp,eax
  401fa0:	repz add DWORD PTR [edx],ebx
  401fa3:	push   es
  401fa4:	adc    BYTE PTR [eax+0x5ac9f795],cl
  401faa:	sbb    ecx,edx
  401fac:	cmp    DWORD PTR [ebx],edi
  401fae:	fstp   QWORD PTR [edx-0x2ad38ff3]
  401fb4:	idiv   BYTE PTR gs:[ebp+0x2bb539a0]
  401fbb:	shl    DWORD PTR [ebx-0x6f60b1d7],1
  401fc1:	in     al,0xae
  401fc3:	cmc    
  401fc4:	or     BYTE PTR [edx-0x2f558497],bl
  401fca:	(bad)  
  401fcb:	imul   ebp,DWORD PTR [edi-0x5fcd43a0],0x6
  401fd2:	inc    ecx
  401fd3:	or     eax,0xc29bac6e
  401fd8:	mov    al,ds:0x4fceea04
  401fdd:	aad    0xd7
  401fdf:	bound  esp,QWORD PTR [ecx+0x47fc46fe]
  401fe5:	into   
  401fe6:	mov    bl,BYTE PTR [ecx-0x2e]
  401fe9:	mov    cl,BYTE PTR [ebp+0x4a]
  401fec:	std    
  401fed:	jae    0x401f86
  401fef:	jmp    0x401f97
  401ff1:	adc    ebp,DWORD PTR [ebx-0x5b4767b9]
  401ff7:	fidiv  DWORD PTR [eax]
  401ff9:	xchg   esp,eax
  401ffa:	push   edx
  401ffb:	popf   
  401ffc:	fist   WORD PTR fs:[edx-0x4]
  402000:	and    edi,eax
  402002:	sbb    ebx,esp
  402004:	push   es
  402005:	or     eax,0xa8659f6b
  40200a:	lea    edx,[esi-0x7248b0fa]
  402010:	lea    edx,[ebp-0x10b34e36]
  402016:	adc    DWORD PTR [esi-0x26],ecx
  402019:	mov    ds:0xf7b1792e,eax
  40201e:	sbb    eax,0x38701f1a
  402023:	mov    ch,0xa6
  402025:	test   DWORD PTR [ebp-0x7764f250],0x37a4e024
  40202f:	jbe    0x401fca
  402031:	(bad)  
  402032:	(bad)
  402035:	mov    eax,0xc9b567b0
  40203a:	loop   0x40206a
  40203c:	sbb    DWORD PTR [esp+esi*4-0x31],0xffffff8a
  402041:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  402043:	mov    esi,0xb2455f6c
  402048:	retf   0xf5d4
  40204b:	fdivr  DWORD PTR [esi-0x753a548b]
  402051:	and    esi,DWORD PTR [edx+0x44]
  402054:	loope  0x40209e
  402056:	outs   dx,BYTE PTR ds:[esi]
  402057:	stos   DWORD PTR es:[edi],eax
  402058:	add    al,0xd7
  40205a:	gs (bad) 
  40205c:	icebp  
  40205d:	icebp  
  40205e:	(bad)  
  402060:	jb     0x402090
  402062:	or     al,0xdc
  402064:	inc    ebx
  402065:	into   
  402066:	(bad)  
  402067:	imul   edi,DWORD PTR [edx],0xffffffff
  40206a:	pop    ss
  40206b:	rcr    BYTE PTR [edx+0x4c737d33],cl
  402071:	movmskps edi,xmm0
  402074:	das    
  402075:	mov    esi,0x634ae4c5
  40207a:	out    0x8f,eax
  40207c:	xchg   esi,eax
  40207d:	sub    al,0x6e
  40207f:	std    
  402080:	xchg   edi,eax
  402081:	fdiv   st(4),st
  402083:	rol    BYTE PTR [esi+0x73],cl
  402086:	cld    
  402087:	lods   eax,DWORD PTR ds:[esi]
  402088:	inc    eax
  402089:	into   
  40208a:	mov    esi,0xa645fb34
  40208f:	cmp    cl,dl
  402091:	aas    
  402092:	rol    bl,cl
  402094:	pop    ss
  402095:	outs   dx,DWORD PTR ds:[esi]
  402096:	mov    ds:0xe224847b,eax
  40209b:	fnop   
  40209d:	pushf  
  40209e:	mov    dl,0x2c
  4020a0:	cmp    BYTE PTR [esi+0x73],0xdf
  4020a4:	pop    edx
  4020a5:	pop    ebp
  4020a6:	push   esp
  4020a7:	popf   
  4020a8:	outs   dx,DWORD PTR ds:[esi]
  4020a9:	or     eax,0x823c330d
  4020ae:	dec    eax
  4020af:	inc    eax
  4020b0:	mov    esi,0x670e7e70
  4020b5:	out    0x4f,al
  4020b7:	jne    0x402094
  4020b9:	sbb    eax,0xf9c83fb3
  4020be:	aaa    
  4020bf:	dec    edi
  4020c0:	call   0x27a689df
  4020c5:	out    0xc1,eax
  4020c7:	sti    
  4020c8:	pop    edx
  4020c9:	cld    
  4020ca:	out    dx,al
  4020cb:	adc    BYTE PTR [edi],al
  4020cd:	jo     0x40208c
  4020cf:	mov    cs,WORD PTR [eax]
  4020d1:	mov    dl,0x2
  4020d3:	xchg   ecx,eax
  4020d4:	add    eax,0x7f4a6d23
  4020d9:	dec    ebp
  4020da:	js     0x402086
  4020dc:	test   BYTE PTR [esi+0x7c209024],bl
  4020e2:	out    dx,al
  4020e3:	iret   
  4020e4:	arpl   WORD PTR [eax],bp
  4020e6:	cs push eax
  4020e8:	mov    ?,WORD PTR [edi]
  4020ea:	push   edx
  4020eb:	fs push cs
  4020ed:	out    0x45,al
  4020ef:	mov    ch,0x8
  4020f1:	jg     0x402093
  4020f3:	vmaxps xmm3,xmm4,xmm2
  4020f7:	scas   eax,DWORD PTR es:[edi]
  4020f8:	cmp    al,0x67
  4020fa:	xchg   BYTE PTR [ebp+0x67e3d995],cl
  402100:	addr16 inc ecx
  402102:	in     al,dx
  402103:	adc    DWORD PTR [ebp+0x443275b6],esi
  402109:	xchg   esp,eax
  40210a:	pop    eax
  40210b:	xchg   esp,eax
  40210c:	stos   BYTE PTR es:[edi],al
  40210d:	and    cl,dh
  40210f:	add    BYTE PTR [eax],cl
  402111:	dec    esi
  402112:	cld    
  402113:	out    dx,eax
  402114:	je     0x4020e1
  402116:	fist   DWORD PTR [esi]
  402118:	sar    ah,0x4f
  40211b:	and    BYTE PTR [ebx],cl
  40211d:	shl    ecx,cl
  40211f:	dec    ebx
  402120:	ja     0x402130
  402122:	fistp  DWORD PTR [ebx]
  402124:	jae    0x4020f1
  402126:	dec    eax
  402127:	lahf   
  402128:	jmp    0xc45e8ed2
  40212d:	arpl   WORD PTR [edi],bx
  40212f:	sbb    bh,dl
  402131:	mov    bh,0xe5
  402133:	fbstp  TBYTE PTR [edx-0x52]
  402136:	and    BYTE PTR [eax-0x25711c8a],ah
  40213c:	xor    edi,ebp
  40213e:	arpl   WORD PTR [ecx],dx
  402140:	xchg   edi,eax
  402141:	xchg   ecx,eax
  402142:	push   cs
  402143:	mov    ch,0xc8
  402145:	or     BYTE PTR [esi+0x23],ah
  402148:	stos   DWORD PTR es:[edi],eax
  402149:	das    
  40214a:	sbb    DWORD PTR [edx+0x21dbcc72],0xffffffa0
  402151:	ret    0xa535
  402154:	mov    dl,0xe4
  402156:	adc    ebp,DWORD PTR [ebx-0x54]
  402159:	jg     0x4020e6
  40215b:	pop    ebx
  40215c:	(bad)  
  40215e:	rcl    BYTE PTR [eax-0x5d29a769],0x5e
  402165:	popf   
  402166:	dec    ebx
  402167:	pop    esp
  402168:	or     al,0xf8
  40216a:	test   al,0xc1
  40216c:	inc    ecx
  40216d:	mov    esi,ebx
  40216f:	std    
  402170:	inc    ebx
  402171:	cmp    BYTE PTR cs:[ebx],bl
  402174:	xchg   ebx,eax
  402175:	in     al,dx
  402176:	or     eax,0x7c5d9fce
  40217b:	test   DWORD PTR [edx+0x2d],0xc45d1f83
  402182:	pop    edi
  402183:	test   cl,ch
  402185:	stc    
  402186:	sub    ecx,DWORD PTR [ecx-0x3e]
  402189:	or     bh,BYTE PTR [esi]
  40218b:	or     esp,DWORD PTR ds:0xc31edaed
  402191:	jg     0x402132
  402193:	je     0x4021f5
  402195:	stc    
  402196:	out    dx,al
  402197:	jg     0x4021fb
  402199:	sub    bl,BYTE PTR gs:[ebx-0x779abdaf]
  4021a0:	hlt    
  4021a1:	ins    DWORD PTR es:[edi],dx
  4021a2:	adc    eax,0x3a495fd3
  4021a7:	cld    
  4021a8:	xor    dh,BYTE PTR [edi]
  4021aa:	xor    eax,0x140317e0
  4021af:	loopne 0x402143
  4021b1:	jp     0x40222c
  4021b3:	repz jb 0x40216b
  4021b6:	and    eax,0x45221791
  4021bb:	mov    ebp,ebp
  4021bd:	cs out dx,eax
  4021bf:	push   ebx
  4021c0:	dec    esi
  4021c1:	gs pop ds
  4021c3:	jmp    0x4021f0
  4021c5:	ret    
  4021c6:	lahf   
  4021c7:	imul   BYTE PTR [edx+0x54]
  4021ca:	popf   
  4021cb:	jl     0x40217f
  4021cd:	cmp    BYTE PTR [ebp-0x16d6fb85],ah
  4021d3:	xchg   edi,eax
  4021d4:	sub    eax,0x77e2ecdf
  4021d9:	mov    ss,ebx
  4021db:	lods   eax,DWORD PTR ds:[esi]
  4021dc:	inc    ebx
  4021dd:	ja     0x4021f2
  4021df:	retf   
  4021e0:	xchg   edx,eax
  4021e1:	scas   eax,DWORD PTR es:[edi]
  4021e2:	(bad)  
  4021e3:	popf   
  4021e4:	and    ah,BYTE PTR [ecx+ecx*4]
  4021e7:	inc    eax
  4021e8:	xchg   esi,eax
  4021e9:	fstp   DWORD PTR [ebx+0x59]
  4021ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021ee:	lods   al,BYTE PTR ds:[esi]
  4021ef:	and    eax,0x6888b659
  4021f4:	lahf   
  4021f5:	xlat   BYTE PTR ds:[ebx]
  4021f6:	mov    ?,WORD PTR [edx+0x79d05a0f]
  4021fc:	mov    BYTE PTR [eax+0x43],ch
  4021ff:	push   cs
  402200:	mov    ds:0x6462da07,eax
  402205:	adc    BYTE PTR [esi+0x4c],cl
  402208:	fnstsw WORD PTR [eax+edx*1+0x2a]
  40220c:	dec    eax
  40220d:	imul   edx,DWORD PTR [esp+eax*2],0xffffffdc
  402211:	xchg   al,ah
  402213:	push   0xb0815f82
  402218:	pop    esp
  402219:	pop    es
  40221a:	pop    eax
  40221b:	adc    esp,DWORD PTR [esi-0x6657de5f]
  402221:	das    
  402222:	ds pop bx
  402225:	(bad)  
  402226:	mov    esi,DWORD PTR [ebp+ecx*4-0x23990680]
  40222d:	mov    bh,0x15
  40222f:	test   dl,dl
  402231:	in     eax,dx
  402232:	call   0x8b5c:0x480f2f7a
  402239:	imul   edx,DWORD PTR [ebp+0x6d3179c5],0x2d3f424e
  402243:	in     al,dx
  402244:	sub    BYTE PTR [edi],ch
  402246:	push   0x2
  402248:	es mov edx,ds
  40224b:	fsubr  QWORD PTR [esi]
  40224d:	mov    eax,ds:0x3dce72ec
  402252:	and    al,0xef
  402254:	fldenv [esi-0x50]
  402257:	inc    edi
  402258:	inc    ecx
  402259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40225a:	fwait
  40225b:	cmp    DWORD PTR [eax-0x5e],ecx
  40225e:	cmp    dl,BYTE PTR [ebx+0x11fdce7c]
  402264:	and    ebx,DWORD PTR [ecx-0x3f]
  402267:	aas    
  402268:	int3   
  402269:	loop   0x402253
  40226b:	int3   
  40226c:	mov    ebp,ebx
  40226e:	pop    ebp
  40226f:	sbb    bl,bl
  402271:	jmp    0x40229c
  402273:	fwait
  402274:	pop    ecx
  402275:	and    BYTE PTR [ebp-0x5a27ae45],dl
  40227b:	inc    edx
  40227c:	loopne 0x402280
  40227e:	aam    0xec
  402280:	cmp    BYTE PTR [ebx],ch
  402282:	loopne 0x402213
  402284:	mov    al,BYTE PTR [ebp-0x42b37417]
  40228a:	cwde   
  40228b:	cli    
  40228c:	pop    edi
  40228d:	dec    ebx
  40228e:	out    0xa,eax
  402290:	xchg   edx,eax
  402291:	adc    DWORD PTR [esi],edi
  402293:	pop    edi
  402294:	push   ds
  402295:	or     eax,0x4776f855
  40229a:	scas   eax,DWORD PTR es:[edi]
  40229b:	cmp    al,0xd7
  40229d:	cld    
  40229e:	arpl   WORD PTR [eax],dx
  4022a0:	xchg   esi,eax
  4022a1:	xor    ecx,DWORD PTR [esi+0x10]
  4022a4:	xchg   ecx,eax
  4022a5:	in     eax,0x59
  4022a7:	loope  0x402232
  4022a9:	sbb    ebp,DWORD PTR [eax]
  4022ab:	adc    eax,0xfffffff5
  4022ae:	not    BYTE PTR [ebx+0x2]
  4022b1:	mov    dl,0xe6
  4022b3:	xor    dh,BYTE PTR [edi-0xc]
  4022b6:	mov    ds:0xb823b7b1,eax
  4022bb:	inc    esi
  4022bc:	fidivr DWORD PTR [ebp-0x7836e75e]
  4022c2:	ret    0xb0ac
  4022c5:	(bad)  
  4022c6:	mov    al,ds:0xafb45b4c
  4022cb:	push   esi
  4022cc:	or     DWORD PTR [edi],eax
  4022ce:	push   edi
  4022cf:	mov    edi,0xbfc97ca1
  4022d4:	ror    BYTE PTR [esi+0x1f397218],cl
  4022da:	add    BYTE PTR [eax+ecx*4+0x31],al
  4022de:	sub    eax,0x7c721e96
  4022e3:	call   0xa356:0x3cff4c93
  4022ea:	out    dx,eax
  4022eb:	fld    TBYTE PTR [ecx+edx*1-0x5d417920]
  4022f2:	mov    ebp,0x4a3aeb35
  4022f7:	in     eax,dx
  4022f8:	mov    ds:0x7fb270ca,eax
  4022fd:	push   0xc5076d41
  402302:	daa    
  402303:	repz jl 0x4022cf
  402306:	std    
  402307:	jbe    0x40229b
  402309:	jo     0x4022a0
  40230b:	ja     0x40237d
  40230d:	cmp    eax,0xfcace970
  402312:	mov    al,ds:0xbf45f3cd
  402317:	ja     0x402338
  402319:	mov    ah,bh
  40231b:	mov    ebx,0x55f600ba
  402320:	jno    0x4022ab
  402322:	or     al,BYTE PTR [ebx+0x16091e0c]
  402328:	jns    0x40238d
  40232a:	xchg   ebp,eax
  40232b:	mov    ds:0xff68160f,eax
  402330:	int3   
  402331:	jb     0x402343
  402333:	lahf   
  402334:	loop   0x402315
  402336:	fwait
  402337:	sbb    BYTE PTR [edx+0x34],dh
  40233a:	and    DWORD PTR ds:0x37c0787d,eax
  402340:	(bad)  [ecx-0x16]
  402343:	xchg   edx,eax
  402344:	loope  0x4022ca
  402346:	inc    esp
  402347:	cld    
  402348:	xor    ebx,edi
  40234a:	popf   
  40234b:	fcomp  DWORD PTR [ebx+0x5b14d852]
  402351:	pop    esi
  402352:	xlat   BYTE PTR ds:[ebx]
  402353:	mov    dl,dl
  402355:	into   
  402356:	mov    edi,esp
  402358:	push   ds
  402359:	lock rol BYTE PTR [edi],cl
  40235c:	hlt    
  40235d:	dec    ebp
  40235e:	adc    esi,esp
  402360:	imul   edi,DWORD PTR [esi+0x2b],0x43
  402364:	or     dl,cl
  402366:	sbb    al,0xce
  402368:	jecxz  0x4022ef
  40236a:	pop    ebp
  40236b:	pop    ss
  40236c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40236d:	leave  
  40236e:	xchg   esi,eax
  40236f:	aam    0x13
  402371:	stos   DWORD PTR es:[edi],eax
  402372:	or     DWORD PTR [ebx+edi*1],ebx
  402375:	push   bp
  402377:	aaa    
  402378:	jae    0x40232d
  40237a:	inc    edi
  40237b:	icebp  
  40237c:	jne    0x4023be
  40237e:	ins    DWORD PTR es:[edi],dx
  40237f:	and    ah,BYTE PTR [ebp+0x28]
  402382:	xchg   esi,eax
  402383:	xchg   DWORD PTR [eax-0x1d9eeaaa],ebp
  402389:	scas   al,BYTE PTR es:[edi]
  40238a:	in     eax,0x11
  40238c:	pop    ss
  40238d:	cmp    esp,edi
  40238f:	arpl   WORD PTR [ebp-0x6b],sp
  402392:	hlt    
  402393:	aad    0x74
  402395:	or     eax,0x25c84aa2
  40239a:	inc    edi
  40239b:	out    dx,eax
  40239c:	dec    edi
  40239d:	cmp    al,0x4e
  40239f:	mov    bh,0xb
  4023a1:	lea    edi,[ebx-0x42617b06]
  4023a7:	scas   al,BYTE PTR es:[edi]
  4023a8:	inc    ebp
  4023a9:	jecxz  0x402414
  4023ab:	shr    BYTE PTR [edi-0x68],0xcb
  4023af:	repz or bl,BYTE PTR [esi+0x52]
  4023b3:	push   ss
  4023b4:	add    edi,0x86e78449
  4023ba:	loopne 0x4023f9
  4023bc:	xor    al,0x40
  4023be:	push   eax
  4023bf:	mov    ecx,0x3cfe2924
  4023c4:	ficom  WORD PTR [ebp+eax*4-0x69081e3]
  4023cb:	ret    0x23e6
  4023ce:	ror    BYTE PTR [edi],cl
  4023d0:	aaa    
  4023d1:	retf   
  4023d2:	mov    cs,ebx
  4023d4:	and    BYTE PTR [ecx],al
  4023d6:	loop   0x4023be
  4023d8:	cli    
  4023d9:	mov    ds,WORD PTR [ecx+0x73]
  4023dc:	add    al,0x26
  4023de:	jg     0x402448
  4023e0:	mov    ds:0xb7fdbb7d,al
  4023e5:	jno    0x40241b
  4023e7:	and    al,0x2d
  4023e9:	loop   0x402434
  4023eb:	ins    BYTE PTR es:[edi],dx
  4023ec:	mov    eax,ds:0xcfab01b0
  4023f1:	lods   eax,DWORD PTR ds:[esi]
  4023f2:	xchg   ebp,eax
  4023f3:	in     al,0xdb
  4023f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023f6:	sub    eax,0x1b9159ea
  4023fb:	loope  0x402400
  4023fd:	mov    ah,0x19
  4023ff:	mov    ebx,0x702c631e
  402404:	ud1    ebp,DWORD PTR [ebx-0x3b20f647]
  40240b:	hlt    
  40240c:	mov    DWORD PTR [edx-0x74],ebx
  40240f:	mov    WORD PTR [esi],fs
  402411:	pop    ecx
  402412:	js     0x4023db
  402414:	push   edi
  402415:	and    eax,0x399239ef
  40241a:	dec    eax
  40241b:	fisubr DWORD PTR [edi+esi*2+0x77]
  40241f:	lea    eax,[ebx-0x7b435dda]
  402425:	push   ds
  402426:	aad    0x1e
  402428:	outs   dx,BYTE PTR ds:[esi]
  402429:	in     al,0xaf
  40242b:	jmp    0x40248f
  40242d:	ss aas 
  40242f:	xchg   ecx,eax
  402430:	or     ah,BYTE PTR [eax-0x28173a8a]
  402436:	ret    
  402437:	out    0x8b,eax
  402439:	and    al,0x20
  40243b:	out    dx,al
  40243c:	or     edi,esp
  40243e:	data16 mov bl,0x6d
  402441:	sbb    edi,ecx
  402443:	(bad)  
  402444:	pusha  
  402445:	push   cs
  402446:	adc    DWORD PTR [esi+edx*1-0x2d0a854c],eax
  40244d:	(bad)  
  40244e:	gs mov esp,0x9a04edcf
  402454:	add    DWORD PTR [ebx+eiz*4-0x58c7d5ec],edx
  40245b:	pusha  
  40245c:	xlat   BYTE PTR ds:[ebx]
  40245d:	rep outs dx,DWORD PTR ds:[esi]
  40245f:	mov    bh,0x25
  402461:	mov    ?,WORD PTR [ebp-0x65]
  402464:	lahf   
  402465:	rcl    BYTE PTR [ebp+0x7ffb3db0],cl
  40246b:	inc    esi
  40246c:	retf   0xa2e6
  40246f:	push   0xbe752036
  402474:	jge    0x402439
  402476:	int    0x49
  402478:	retf   0x6ef5
  40247b:	inc    esp
  40247c:	cmp    ebp,DWORD PTR ds:0x3e0cabf0
  402482:	not    DWORD PTR [eax-0x474950d]
  402488:	inc    ecx
  402489:	aam    0xe0
  40248b:	cmc    
  40248c:	cmp    al,0xd2
  40248e:	test   DWORD PTR [ecx+0x2e4d0839],edi
  402494:	cli    
  402495:	cli    
  402496:	retf   
  402497:	sbb    ebx,ebx
  402499:	cmp    eax,0x95a8c47e
  40249e:	repnz pop edx
  4024a0:	push   edx
  4024a1:	icebp  
  4024a2:	push   esp
  4024a3:	push   edx
  4024a4:	leave  
  4024a5:	cmp    bh,BYTE PTR [edi+0x16eac576]
  4024ab:	sbb    eax,0xbf1dbbbe
  4024b0:	ret    
  4024b1:	and    DWORD PTR [esi],esi
  4024b3:	xchg   edx,eax
  4024b4:	fld    st(4)
  4024b6:	cld    
  4024b7:	retf   
  4024b8:	cmp    bh,BYTE PTR [edi-0x1c]
  4024bb:	dec    esp
  4024bc:	mov    al,ds:0x48ac9ee7
  4024c1:	and    al,0x4a
  4024c3:	stos   BYTE PTR es:[edi],al
  4024c4:	xchg   edi,eax
  4024c5:	adc    DWORD PTR [edi-0x408af0ea],esp
  4024cb:	(bad)  
  4024cc:	cli    
  4024cd:	push   ss
  4024ce:	nop
  4024cf:	add    BYTE PTR [ebp+eax*1-0x70a6099e],0x93
  4024d7:	fild   WORD PTR [esp+ecx*2-0x5cb7ca81]
  4024de:	sub    eax,0xcdbab8a2
  4024e3:	jp     0x40250b
  4024e5:	js     0x40246a
  4024e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024e8:	popa   
  4024e9:	mov    ebp,0x4b1d9acd
  4024ee:	fisttp DWORD PTR ds:0x8364e440
  4024f4:	inc    esi
  4024f5:	mov    ds:0x42f0500,al
  4024fa:	xlat   BYTE PTR ds:[ebx]
  4024fb:	fsub   st(7),st
  4024fd:	clc    
  4024fe:	or     BYTE PTR ds:0x3e57f72c,0x16
  402505:	inc    ebx
  402506:	mov    ecx,0xb5583187
  40250b:	xor    BYTE PTR [ecx],ah
  40250d:	loopne 0x402508
  40250f:	xchg   edx,eax
  402510:	push   DWORD PTR [ebx+0x70]
  402513:	shl    ebp,cl
  402515:	dec    ebx
  402516:	nop
  402517:	out    dx,al
  402518:	test   DWORD PTR [esi],edi
  40251a:	mov    esi,esp
  40251c:	mov    eax,ds:0xac69f5bc
  402521:	add    esi,ebp
  402523:	fisttp DWORD PTR [eax-0x6948741c]
  402529:	jno    0x402556
  40252b:	mov    bl,0x5b
  40252d:	test   al,0xee
  40252f:	imul   esi,DWORD PTR [ecx-0x664cc90b],0xffffffd4
  402536:	cmp    edi,DWORD PTR [edx]
  402538:	jno    0x40254d
  40253a:	dec    ebx
  40253b:	scas   al,BYTE PTR es:[edi]
  40253c:	je     0x4024cb
  40253e:	icebp  
  40253f:	push   ebp
  402540:	(bad)  
  402541:	mov    eax,0x20e1a9ca
  402546:	adc    ebx,DWORD PTR [eax-0x27]
  402549:	add    al,0x69
  40254b:	test   eax,0x3a0ff743
  402550:	(bad)  
  402551:	int3   
  402552:	or     BYTE PTR [edi+0x5264a0c0],al
  402558:	retf   
  402559:	and    DWORD PTR [ecx],eax
  40255b:	jbe    0x4024fe
  40255d:	std    
  40255e:	dec    BYTE PTR [ebx+0xd331592]
  402564:	mov    ebx,0xa482882b
  402569:	mov    cl,0x39
  40256b:	sub    BYTE PTR [eax-0x234aaa76],bl
  402571:	mov    ecx,DWORD PTR [eax+ebp*2+0x3fa4d06f]
  402578:	je     0x40257d
  40257a:	aam    0x7f
  40257c:	not    DWORD PTR [eax]
  40257e:	shr    DWORD PTR [esi+0x7cdff3f0],cl
  402584:	das    
  402585:	aas    
  402586:	dec    ecx
  402587:	cmp    BYTE PTR [esi],0x2b
  40258a:	or     cl,ch
  40258c:	mov    ds:0x50a4514b,eax
  402591:	mov    ds:0x4c671df,eax
  402596:	push   edx
  402597:	shl    BYTE PTR [ecx+0x4d40aa3f],0xdb
  40259e:	adc    DWORD PTR [eax],ebp
  4025a0:	pop    esi
  4025a1:	into   
  4025a2:	inc    edi
  4025a3:	mov    cl,0xa4
  4025a5:	aam    0x97
  4025a7:	lahf   
  4025a8:	lds    edi,FWORD PTR [esi+0x54]
  4025ab:	jecxz  0x4025a2
  4025ad:	scas   al,BYTE PTR es:[edi]
  4025ae:	icebp  
  4025af:	out    dx,al
  4025b0:	stc    
  4025b1:	pop    ebp
  4025b2:	es hlt 
  4025b4:	add    DWORD PTR [esi+0x37313c55],esp
  4025ba:	cdq    
  4025bb:	std    
  4025bc:	aam    0xf7
  4025be:	jg     0x4025a1
  4025c0:	or     eax,edx
  4025c2:	int3   
  4025c3:	and    al,0x1b
  4025c5:	repnz sub eax,0x813e8d9d
  4025cb:	jns    0x402594
  4025cd:	jle    0x4025a5
  4025cf:	push   ecx
  4025d0:	jo     0x4025c6
  4025d2:	shl    BYTE PTR [edx-0x59],1
  4025d5:	add    al,0x9e
  4025d7:	add    eax,0x45601dc1
  4025dc:	and    al,0xb2
  4025de:	push   es
  4025df:	das    
  4025e0:	mov    ch,0x26
  4025e2:	out    dx,al
  4025e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025e4:	addr16 out 0xd6,al
  4025e7:	jge    0x4025de
  4025e9:	adc    dl,0x50
  4025ec:	pop    eax
  4025ed:	mov    edx,0xafffd86a
  4025f2:	mov    DWORD PTR [edx],edi
  4025f4:	dec    ebp
  4025f5:	jne    0x40260d
  4025f7:	fs push es
  4025f9:	jae    0x4025e6
  4025fb:	sahf   
  4025fc:	cmp    eax,0x86d2f4cd
  402601:	cmp    edi,DWORD PTR [ecx-0x33525e]
  402607:	addr16 mov cl,0xc8
  40260a:	cld    
  40260b:	xor    BYTE PTR [edx+0x66008de8],bh
  402611:	js     0x402597
  402613:	je     0x402660
  402615:	out    dx,al
  402616:	xor    eax,0xd1b92b9f
  40261b:	outs   dx,DWORD PTR ds:[esi]
  40261c:	fmul   DWORD PTR [edx-0x7a]
  40261f:	test   al,0x60
  402621:	ja     0x40268b
  402623:	cld    
  402624:	inc    eax
  402625:	pop    esi
  402626:	imul   edx,esi,0xd78ab77
  40262c:	push   edi
  40262d:	and    al,ch
  40262f:	sub    eax,0xa6657f70
  402634:	ficomp DWORD PTR [edx+ebx*4+0xb]
  402638:	push   ebx
  402639:	jecxz  0x402699
  40263b:	ss or  al,0xac
  40263e:	in     eax,dx
  40263f:	fs or  bl,ch
  402642:	xchg   ebx,eax
  402643:	add    DWORD PTR [esi+0x8],ebx
  402646:	leave  
  402647:	mov    dh,0x6b
  402649:	rcr    DWORD PTR [eax-0x2f],1
  40264c:	test   eax,0x51b9e5ff
  402651:	aam    0xfd
  402653:	mov    BYTE PTR [edx+0x6e],bl
  402656:	mov    ch,0xc7
  402658:	sub    DWORD PTR [ecx],eax
  40265a:	stos   BYTE PTR es:[edi],al
  40265b:	ja     0x67203a60
  402661:	mov    al,0x6f
  402663:	or     eax,0x2928d45c
  402668:	sbb    BYTE PTR [ecx],ch
  40266a:	fld    QWORD PTR [ecx-0x4]
  40266d:	add    eax,0x23eb4bc3
  402672:	add    cl,BYTE PTR [eax-0x7cada7db]
  402678:	add    bl,BYTE PTR [edx]
  40267a:	pop    edi
  40267b:	or     al,0xd0
  40267d:	pop    eax
  40267e:	out    dx,al
  40267f:	jmp    0x5d8c:0xc210ab05
  402686:	cmp    ebx,edi
  402688:	into   
  402689:	stos   BYTE PTR es:[edi],al
  40268a:	lods   al,BYTE PTR ds:[esi]
  40268b:	test   BYTE PTR [ebx+edx*2],0x9
  40268f:	int    0x6d
  402691:	imul   eax,DWORD PTR ds:0x2b672350,0x29f22dc
  40269b:	leave  
  40269c:	xchg   ebp,eax
  40269d:	hlt    
  40269e:	jb     0x402694
  4026a0:	test   DWORD PTR [esi+0x1f],edx
  4026a3:	dec    eax
  4026a4:	dec    ebx
  4026a5:	fisttp QWORD PTR [edx+0x6d]
  4026a8:	inc    edi
  4026a9:	mov    ah,0xb
  4026ab:	and    al,0x6d
  4026ad:	test   BYTE PTR [esi-0x47],al
  4026b0:	cwde   
  4026b1:	out    0x21,al
  4026b3:	or     al,0x93
  4026b5:	dec    esi
  4026b6:	ret    
  4026b7:	mov    al,BYTE PTR [edi+0x16]
  4026ba:	sbb    eax,DWORD PTR [ecx-0xf]
  4026bd:	push   edx
  4026be:	in     eax,dx
  4026bf:	and    DWORD PTR [edx-0x23016595],0xffffffcc
  4026c6:	shl    BYTE PTR [edx-0x6e],1
  4026c9:	pop    eax
  4026ca:	sbb    DWORD PTR [ecx+ebp*4],eax
  4026cd:	fsubr  DWORD PTR [esi]
  4026cf:	mov    ebx,0xedae815c
  4026d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026d5:	in     eax,0x20
  4026d7:	mov    bh,0x2d
  4026d9:	and    al,0xdf
  4026db:	cwde   
  4026dc:	test   dl,dl
  4026de:	or     al,0x82
  4026e0:	mov    DWORD PTR [edx-0x18],0x4b9d070f
  4026e7:	fsub   QWORD PTR [esi+ecx*1-0x2b8d80cf]
  4026ee:	mov    ah,al
  4026f0:	push   esi
  4026f1:	dec    ebp
  4026f2:	js     0x402695
  4026f4:	ret    0x83d3
  4026f7:	inc    BYTE PTR [edx]
  4026f9:	cdq    
  4026fa:	in     eax,dx
  4026fb:	(bad)  
  4026fc:	fwait
  4026fd:	fwait
  4026fe:	push   ebx
  4026ff:	adc    bl,BYTE PTR [ecx-0x363f8e4]
  402705:	dec    ebp
  402706:	out    dx,al
  402707:	ins    DWORD PTR es:[edi],dx
  402708:	adc    dl,BYTE PTR [ebp-0x7d945e09]
  40270e:	mov    ch,0x8c
  402710:	idiv   BYTE PTR [ebp-0x65]
  402713:	sbb    eax,0xdf63b02a
  402718:	mov    ebx,0xe4975af2
  40271d:	rcl    BYTE PTR [edi+0x46],0x96
  402721:	sbb    al,0xf1
  402723:	fist   WORD PTR [esi]
  402725:	adc    eax,esi
  402727:	jbe    0x4027a7
  402729:	ror    al,0xbd
  40272c:	retf   0xa3f5
  40272f:	cmp    eax,0xb561f1a8
  402734:	outs   dx,DWORD PTR ds:[esi]
  402735:	mov    esp,0x83a864cb
  40273a:	das    
  40273b:	jae    0x4026cf
  40273d:	pop    eax
  40273e:	test   BYTE PTR [edx+0x1865a15b],ah
  402744:	sub    cl,0xbd
  402747:	xor    eax,0xb00e29da
  40274c:	scas   al,BYTE PTR es:[edi]
  40274d:	retf   0x694
  402750:	repnz jecxz 0x4026f7
  402753:	es aaa 
  402755:	xor    eax,0xf2996e3b
  40275a:	ret    
  40275b:	inc    edi
  40275c:	in     eax,dx
  40275d:	cmp    ecx,ebx
  40275f:	cs test al,0x49
  402762:	pushf  
  402763:	das    
  402764:	(bad)  
  402766:	loope  0x40277f
  402768:	mov    edx,0x2ea9edc0
  40276d:	mov    ds:0x364c164c,al
  402772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402773:	daa    
  402774:	int    0x97
  402776:	cmp    BYTE PTR [ecx+0x33],bh
  402779:	js     0x4027de
  40277b:	into   
  40277c:	mov    al,ds:0xbed880bb
  402781:	in     eax,dx
  402782:	mov    ds:0x40027d25,eax
  402787:	rcl    BYTE PTR [ecx+0x1e],0xaa
  40278b:	js     0x402780
  40278d:	pop    edi
  40278e:	jne    0x40279e
  402790:	enter  0x74,0xfa
  402794:	jmp    0x8b90db4c
  402799:	push   ecx
  40279a:	xor    dh,BYTE PTR [eax-0x1d]
  40279d:	leave  
  40279e:	jle    0x40274b
  4027a0:	inc    esi
  4027a1:	push   edi
  4027a2:	push   eax
  4027a3:	add    eax,0xbe9a1bf2
  4027a8:	(bad)  
  4027a9:	jecxz  0x4027c7
  4027ab:	xor    esp,ebx
  4027ad:	pop    ss
  4027ae:	xchg   edx,eax
  4027af:	call   0xef3d:0x9c61d6f3
  4027b6:	mov    fs,WORD PTR [edx-0x75]
  4027b9:	push   0xffffffe5
  4027bb:	shl    al,1
  4027bd:	shl    DWORD PTR [eax],0x37
  4027c0:	das    
  4027c1:	test   al,0x9b
  4027c3:	pop    eax
  4027c4:	mov    ebp,0xa2b4ed82
  4027c9:	or     bh,BYTE PTR [edx-0x273adac9]
  4027cf:	(bad)  
  4027d0:	push   ds
  4027d1:	xchg   ecx,eax
  4027d2:	pop    ecx
  4027d3:	in     eax,dx
  4027d4:	shl    BYTE PTR [edi-0x66],0x6f
  4027d8:	dec    esp
  4027d9:	mov    ch,0xd2
  4027db:	cli    
  4027dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027dd:	xchg   edi,eax
  4027de:	jne    0x402780
  4027e0:	mov    al,ds:0x6aaf0a9b
  4027e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027e6:	jbe    0x4027fe
  4027e8:	adc    bl,BYTE PTR [edx]
  4027ea:	mov    bh,0x4e
  4027ec:	jno    0x4027df
  4027ee:	in     al,0x49
  4027f0:	out    dx,al
  4027f1:	repnz add al,0xf5
  4027f4:	jae    0x4027fc
  4027f6:	bound  eax,QWORD PTR [ebx]
  4027f8:	shl    DWORD PTR [esi+0x4b],1
  4027fb:	(bad)  
  4027fc:	xchg   ecx,eax
  4027fd:	lea    eax,[si]
  402800:	pop    ds
  402801:	add    BYTE PTR [eax-0x2e0f7f44],cl
  402807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402808:	xchg   ebx,eax
  402809:	inc    esp
  40280a:	dec    eax
  40280b:	sub    DWORD PTR [eax+0x18cf0447],eax
  402811:	lock and eax,0xaf447c66
  402817:	icebp  
  402818:	mov    edx,0x1c962fc5
  40281d:	cmp    eax,0x5386a601
  402822:	and    esi,DWORD PTR [ebp-0x52]
  402825:	jno    0x402823
  402827:	dec    eax
  402828:	pop    esi
  402829:	fdivr  st(5),st
  40282b:	(bad)  
  40282c:	mov    esp,0xebe8cfdd
  402831:	adc    eax,0x4af7a20f
  402836:	sbb    al,0xbf
  402838:	jmp    0x40286c
  40283a:	fild   WORD PTR ds:0x5303438c
  402840:	sub    al,0x43
  402842:	mov    esp,0x352ba028
  402847:	mov    ebx,0xc3cf2120
  40284c:	sbb    al,0xdd
  40284e:	js     0x4027eb
  402850:	jnp    0x4028be
  402852:	outs   dx,BYTE PTR ds:[esi]
  402853:	push   edx
  402854:	mov    al,0xe4
  402856:	xchg   BYTE PTR [ecx],dl
  402858:	add    BYTE PTR [ebp+0x3798dc49],ah
  40285e:	lds    esi,FWORD PTR [ebx-0x356c4ade]
  402864:	inc    ebp
  402865:	xor    al,0xd8
  402867:	fld    TBYTE PTR [esi]
  402869:	(bad)  
  40286a:	and    DWORD PTR [esi+0x38],esp
  40286d:	test   BYTE PTR [ebx+0x2b],0xa7
  402871:	(bad)  
  402872:	into   
  402873:	(bad)  
  402874:	push   esi
  402875:	jl     0x402847
  402877:	push   ebp
  402878:	fld    TBYTE PTR [ecx+0x3726a578]
  40287e:	cmp    eax,0x11102908
  402883:	sahf   
  402884:	dec    ecx
  402885:	and    ecx,DWORD PTR [esi]
  402887:	mov    ch,0xfe
  402889:	mov    DWORD PTR [esi+0x40],edi
  40288c:	dec    eax
  40288d:	inc    ecx
  40288e:	scas   eax,DWORD PTR es:[edi]
  40288f:	mov    esp,0x4aeb3723
  402894:	rol    DWORD PTR ds:0x9a4e0912,cl
  40289a:	out    dx,al
  40289b:	cmp    dh,BYTE PTR [esi]
  40289d:	dec    esi
  40289e:	push   esi
  40289f:	mov    dh,0x3
  4028a1:	jns    0x4028e5
  4028a3:	sub    al,BYTE PTR [edi+eiz*1+0x5b3752f4]
  4028aa:	inc    esp
  4028ab:	mov    edi,fs
  4028ad:	push   ecx
  4028ae:	retf   0x2106
  4028b1:	or     BYTE PTR [edi+0x5c],bl
  4028b4:	cmp    eax,0x1a
  4028b7:	in     al,dx
  4028b8:	iret   
  4028b9:	jp     0x40284a
  4028bb:	rcr    DWORD PTR es:[esp+edx*4+0x2c],cl
  4028c0:	inc    ecx
  4028c1:	cli    
  4028c2:	stos   BYTE PTR es:[edi],al
  4028c3:	or     al,0x93
  4028c5:	(bad)  
  4028c6:	pop    ds
  4028c7:	stc    
  4028c8:	pop    ecx
  4028c9:	pop    ds
  4028ca:	hlt    
  4028cb:	dec    di
  4028cd:	je     0x4028e7
  4028cf:	and    BYTE PTR [eax-0xb948680],bl
  4028d5:	jecxz  0x402895
  4028d7:	mov    ds:0x3beb055,al
  4028dc:	and    cl,al
  4028de:	push   ds
  4028df:	and    eax,0xb9398a58
  4028e4:	aad    0xeb
  4028e6:	int3   
  4028e7:	dec    ebx
  4028e8:	test   eax,0xdcff9128
  4028ed:	fpatan 
  4028ef:	sub    BYTE PTR [ebp+0x10],dl
  4028f2:	adc    edx,DWORD PTR [edx]
  4028f4:	(bad)  
  4028f5:	in     al,0xa6
  4028f7:	push   eax
  4028f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028f9:	into   
  4028fa:	xor    BYTE PTR [esi+0x6a],dh
  4028fd:	mov    al,ds:0xd496a591
  402902:	ror    BYTE PTR [eax],cl
  402904:	sub    BYTE PTR [ecx-0x7c25495a],0xec
  40290b:	cmp    ch,BYTE PTR [edx+0x7f64c092]
  402911:	out    0xbd,al
  402913:	sbb    eax,0x4d6bdc91
  402918:	xchg   edx,eax
  402919:	int    0x67
  40291b:	mov    esp,0x4e0ab7ef
  402920:	jmp    0xec30c0ee
  402925:	pop    ds
  402926:	push   eax
  402927:	(bad)  
  402928:	cmp    eax,DWORD PTR [ebp-0xf823257]
  40292e:	mov    dh,BYTE PTR [ebx]
  402930:	xchg   esp,ebx
  402932:	and    eax,0x1c6393fe
  402937:	sbb    al,0x2b
  402939:	imul   esp,DWORD PTR [ecx-0x33aaa03e],0xffffff8b
  402940:	dec    edx
  402941:	sub    esp,DWORD PTR [esi]
  402943:	int    0x6e
  402945:	lahf   
  402946:	xchg   BYTE PTR [eax+0x668923a5],cl
  40294c:	dec    ecx
  40294d:	add    ecx,DWORD PTR [edi+0x24]
  402950:	ret    
  402951:	outs   dx,DWORD PTR ds:[esi]
  402952:	pop    es
  402953:	sub    bl,bh
  402955:	inc    edi
  402956:	(bad)  
  402957:	cmp    al,ah
  402959:	mov    dh,0xb2
  40295b:	stc    
  40295c:	mov    eax,ds:0xd123c96f
  402961:	stc    
  402962:	aas    
  402963:	mov    bh,0xd7
  402965:	rol    esi,cl
  402967:	pop    esi
  402968:	dec    ebp
  402969:	imul   ebx,DWORD PTR [eax+0x4da21c70],0xb28dfca8
  402973:	repz add eax,0x6efd44b9
  402979:	repnz push 0xffffffab
  40297c:	cdq    
  40297d:	mov    edx,0xc3c907f7
  402982:	pop    edi
  402983:	adc    eax,0xf1e7fd2
  402988:	adc    eax,0xaac329b0
  40298d:	js     0x402963
  40298f:	mov    WORD PTR [eax-0x2e],?
  402992:	rcl    DWORD PTR ds:0x2b1e400a,cl
  402998:	stos   DWORD PTR es:[edi],eax
  402999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40299a:	xchg   esi,eax
  40299b:	pop    esp
  40299c:	jl     0x40297e
  40299e:	dec    esi
  40299f:	mov    edx,DWORD PTR [edi+0x1]
  4029a2:	xor    DWORD PTR [edx-0x2e458b2c],esp
  4029a8:	imul   esi,DWORD PTR [ecx+eiz*4-0x198ca15d],0x26f85f8e
  4029b3:	sbb    eax,0xe84fa5cf
  4029b8:	cmp    BYTE PTR [esi],cl
  4029ba:	sbb    BYTE PTR [ecx],bh
  4029bc:	paddq  mm2,QWORD PTR [edi-0x17]
  4029c0:	add    al,0xe6
  4029c2:	in     eax,0xea
  4029c4:	dec    ebp
  4029c5:	xchg   ebx,eax
  4029c6:	icebp  
  4029c7:	dec    esp
  4029c8:	inc    edx
  4029c9:	adc    DWORD PTR [ebx-0xb04b096],ecx
  4029cf:	test   BYTE PTR [ecx+esi*2+0x27dd9670],ch
  4029d6:	aad    0x1b
  4029d8:	pop    ebx
  4029d9:	dec    ebx
  4029da:	retf   
  4029db:	pushf  
  4029dc:	xchg   esi,eax
  4029dd:	mov    edx,fs
  4029df:	dec    esi
  4029e0:	xor    BYTE PTR [ebx+0x17],0xd4
  4029e4:	out    0xf0,al
  4029e6:	test   BYTE PTR [edi+0x28952970],ah
  4029ec:	xchg   esp,eax
  4029ed:	jbe    0x402a21
  4029ef:	dec    eax
  4029f0:	xchg   DWORD PTR [edi+0x1c],esp
  4029f3:	push   0x4a
  4029f5:	or     DWORD PTR [edx+0x46],edi
  4029f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029f9:	fimul  WORD PTR [ecx]
  4029fb:	or     DWORD PTR [esi+0x67182c8c],ebp
  402a01:	add    eax,0x7c85d4d
  402a06:	cmp    al,0x8d
  402a08:	shl    BYTE PTR [esi-0x478c9591],1
  402a0e:	fsubp  st(4),st
  402a10:	jl     0x402a1c
  402a12:	mov    al,0x8a
  402a14:	mov    edx,0x170813e5
  402a19:	sahf   
  402a1a:	(bad)  
  402a1b:	or     ecx,DWORD PTR [edx+edi*1-0x1b353708]
  402a22:	push   ds
  402a23:	iret   
  402a24:	mov    ss,WORD PTR [ecx+ecx*8]
  402a27:	mov    esp,0xd7b40f99
  402a2c:	retf   0x3774
  402a2f:	mov    eax,ds:0x2b1ca0f8
  402a34:	sbb    eax,0xc50db5ec
  402a39:	mov    ch,0xdd
  402a3b:	ds nop
  402a3d:	pushf  
  402a3e:	add    eax,0x758322cc
  402a43:	out    dx,al
  402a44:	in     al,dx
  402a45:	and    DWORD PTR [edi-0x14],esi
  402a48:	jno    0x402a13
  402a4a:	sbb    dl,BYTE PTR [edi+0x43472070]
  402a50:	fisub  DWORD PTR [ebx]
  402a52:	mov    ch,0xeb
  402a54:	jae    0x191cddfc
  402a5a:	cmp    bh,BYTE PTR [edx+ebp*8+0x2d4e4f7f]
  402a61:	or     DWORD PTR [eax],0x145194b
  402a67:	clc    
  402a68:	jbe    0x402a75
  402a6a:	xor    BYTE PTR [esi+0x7b],bh
  402a6d:	gs pusha 
  402a6f:	xor    DWORD PTR [esi],esi
  402a71:	cmp    eax,0xb64b2852
  402a76:	xor    edx,edi
  402a78:	hlt    
  402a79:	retf   
  402a7a:	pushf  
  402a7b:	mov    ds:0xbdfc5913,eax
  402a80:	lds    esp,FWORD PTR [edi+0x454d111d]
  402a86:	mul    BYTE PTR [edi-0x6]
  402a89:	mov    ebp,0xe34ac125
  402a8e:	and    BYTE PTR [ecx],0xf5
  402a91:	in     eax,0x31
  402a93:	push   cs
  402a94:	mov    ebx,0x85eb997
  402a99:	xchg   BYTE PTR [ecx+0x42],ah
  402a9c:	mov    ah,0xdd
  402a9e:	ins    DWORD PTR es:[edi],dx
  402a9f:	pop    esi
  402aa0:	bound  ebp,QWORD PTR [ebx+0x31922fb8]
  402aa6:	add    BYTE PTR [esi-0x19ece29d],cl
  402aac:	push   ds
  402aad:	rcr    BYTE PTR [edi],1
  402aaf:	shl    DWORD PTR [edi-0x5d64eefb],0xa4
  402ab6:	jmp    0x2da8:0x845f5b7d
  402abd:	(bad)  
  402abe:	int3   
  402abf:	push   ebx
  402ac0:	ss out dx,al
  402ac2:	push   eax
  402ac3:	aas    
  402ac4:	mov    edx,DWORD PTR [edi-0x75]
  402ac7:	mov    dh,0x81
  402ac9:	mov    dh,0x1c
  402acb:	in     eax,0x7e
  402acd:	adc    eax,0x7cedd9b3
  402ad2:	mov    eax,0xd13f3efd
  402ad7:	iret   
  402ad8:	dec    edi
  402ad9:	cmp    al,0xca
  402adb:	out    dx,eax
  402adc:	xchg   ebx,eax
  402add:	push   es
  402ade:	fabs   
  402ae0:	sar    BYTE PTR [eax+0x47],1
  402ae3:	sbb    dh,BYTE PTR [esi-0x66ee3a66]
  402ae9:	xor    BYTE PTR [ecx],ah
  402aeb:	sub    al,0x49
  402aed:	xor    eax,0xd0e0f84b
  402af2:	mov    ecx,0x58c5929b
  402af7:	popf   
  402af8:	retf   0xfba8
  402afb:	pusha  
  402afc:	aad    0x47
  402afe:	mov    bl,0xe2
  402b00:	mov    ds:0x75b6a919,eax
  402b05:	not    DWORD PTR [ebp-0x72]
  402b08:	test   eax,0x92a47713
  402b0d:	sbb    eax,0x1098821b
  402b12:	imul   esp,DWORD PTR [esi+0x6ef91e5b],0xf
  402b19:	push   esi
  402b1a:	mov    edi,0x2b0de682
  402b1f:	clc    
  402b20:	pushf  
  402b21:	(bad)  
  402b22:	push   esi
  402b23:	rol    BYTE PTR [ebx-0x3ea9db03],0x44
  402b2a:	push   ecx
  402b2b:	sbb    edx,DWORD PTR [ebp+0x30]
  402b2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b2f:	add    BYTE PTR [ebx+esi*8],0x5d
  402b33:	or     BYTE PTR [ecx+ebx*2-0x39fc8bf8],bh
  402b3a:	fsubr  QWORD PTR [ecx+0x14]
  402b3d:	or     DWORD PTR [ecx+0x457b5db9],ebp
  402b43:	lahf   
  402b44:	jno    0x402b20
  402b46:	pushf  
  402b47:	sub    edi,edx
  402b49:	or     edi,eax
  402b4b:	dec    edx
  402b4c:	mov    ds:0x551c3a3f,al
  402b51:	jmp    0x402b80
  402b53:	fisub  WORD PTR [edx+eiz*8+0x1e]
  402b57:	jge    0x402b75
  402b59:	mov    WORD PTR fs:[edx],ss
  402b5c:	xchg   edi,eax
  402b5d:	mov    ecx,0x3d227fb0
  402b62:	push   ebp
  402b63:	ss mov ebp,0x3f25c55
  402b69:	push   esi
  402b6a:	(bad)  
  402b6b:	loope  0x402b21
  402b6d:	rcr    DWORD PTR [eax+0x1dec1e53],cl
  402b73:	stos   BYTE PTR es:[edi],al
  402b74:	out    dx,eax
  402b75:	add    esp,DWORD PTR [ebx-0x3fe84f41]
  402b7b:	idiv   cl
  402b7d:	jmp    FWORD PTR [eiz*8-0x468bca59]
  402b84:	jecxz  0x402bdc
  402b86:	inc    esi
  402b87:	repnz addr16 in eax,dx
  402b8a:	cmp    al,BYTE PTR [ebp+0x5df494d3]
  402b90:	test   esp,esi
  402b92:	pusha  
  402b93:	sub    ecx,DWORD PTR [ecx+0x2e]
  402b96:	mov    DWORD PTR [esi+0x6edacad3],eax
  402b9c:	xchg   BYTE PTR [ecx+0x963926c],al
  402ba2:	and    eax,0x50635336
  402ba7:	pop    es
  402ba8:	push   ebp
  402ba9:	mov    ebx,0xdb864666
  402bae:	je     0x402c0e
  402bb0:	or     al,0x2c
  402bb2:	mov    eax,0xdbb6f95f
  402bb7:	pop    esp
  402bb8:	into   
  402bb9:	gs push edi
  402bbb:	out    0x13,eax
  402bbd:	bound  ebx,QWORD PTR [edx-0x3]
  402bc0:	or     eax,0x1d5b793
  402bc5:	add    bl,BYTE PTR [esi]
  402bc7:	xchg   ecx,eax
  402bc8:	jo     0x402be2
  402bca:	in     al,0x62
  402bcc:	hlt    
  402bcd:	fnsave [eax+ebp*8]
  402bd0:	dec    ebx
  402bd1:	fistp  WORD PTR [eax+0x77]
  402bd4:	(bad)  
  402bd5:	dec    esi
  402bd6:	and    DWORD PTR [esi+0x50a977d],eax
  402bdc:	pushf  
  402bdd:	ffreep st(2)
  402bdf:	sbb    eax,0xdd70c2a
  402be4:	in     al,0xe5
  402be6:	fdivr  st(0),st
  402be8:	rol    DWORD PTR [edi-0x6d],1
  402beb:	or     DWORD PTR [edi-0x50],esp
  402bee:	inc    esi
  402bef:	adc    ch,BYTE PTR [ebp-0x1977d294]
  402bf5:	test   BYTE PTR [edx+0x12],bh
  402bf8:	les    esi,FWORD PTR [ebx-0x6e]
  402bfb:	xor    al,0x69
  402bfd:	ja     0x402c7b
  402bff:	pushf  
  402c00:	fstp   TBYTE PTR [edi+ecx*1-0xab2c4f9]
  402c07:	jmp    0x5d08:0x9657e2f0
  402c0e:	(bad)  
  402c10:	pop    eax
  402c11:	(bad)
  402c14:	pop    esi
  402c15:	push   edx
  402c16:	fisttp WORD PTR [edi+0x26474205]
  402c1c:	int    0xa7
  402c1e:	adc    esi,ecx
  402c20:	jle    0x402c16
  402c22:	arpl   WORD PTR [ebx],sp
  402c24:	fmul   QWORD PTR gs:[ebx+0x44]
  402c28:	push   eax
  402c29:	dec    ebx
  402c2a:	aad    0x69
  402c2c:	dec    ecx
  402c2d:	addr16 mov edx,0xf6c77e32
  402c33:	sbb    ch,BYTE PTR [ebp+0x168b8b66]
  402c39:	mov    eax,0xa3385ab6
  402c3e:	sub    al,bl
  402c40:	fwait
  402c41:	mov    ds:0x392dc399,al
  402c46:	js     0x402c31
  402c48:	jp     0x402bd4
  402c4a:	sub    eax,0x68842e81
  402c4f:	faddp  st(3),st
  402c51:	imul   esi,DWORD PTR [ebp+0x12],0x8101791d
  402c58:	sbb    bh,BYTE PTR ss:[ecx-0x306b6987]
  402c5f:	pop    esi
  402c60:	aaa    
  402c61:	cmp    DWORD PTR [edx+eiz*8],ebp
  402c64:	sbb    eax,0x6c8df213
  402c69:	imul   ebx,DWORD PTR [edi-0x7c6d0e92],0x7b
  402c70:	sbb    BYTE PTR [ecx+esi*8+0x141b1a92],bl
  402c77:	and    edx,DWORD PTR [edx]
  402c79:	mov    bh,0x4b
  402c7b:	stc    
  402c7c:	in     eax,0x38
  402c7e:	call   0xc7b9:0xf4aee4ba
  402c85:	or     BYTE PTR [ebp-0x44],bl
  402c88:	stos   DWORD PTR es:[edi],eax
  402c89:	push   es
  402c8a:	cmp    BYTE PTR [edx+0x7259a99a],0xc7
  402c91:	push   ebx
  402c92:	les    esp,FWORD PTR [edx]
  402c94:	and    ebx,DWORD PTR [ebp-0x7f8c99bc]
  402c9a:	mov    DWORD PTR [edx+edi*2],ebx
  402c9d:	mov    bl,0xf0
  402c9f:	fcmove st,st(1)
  402ca1:	(bad)  
  402ca2:	push   ebx
  402ca3:	dec    edx
  402ca4:	or     BYTE PTR [edi-0x7a],al
  402ca7:	mov    ds:0xcac78b1e,al
  402cac:	xchg   ebp,eax
  402cad:	int    0x2d
  402caf:	pusha  
  402cb0:	(bad)  
  402cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cb3:	adc    cl,bl
  402cb5:	sbb    al,0x7f
  402cb7:	(bad)  [edi]
  402cb9:	adc    eax,0x19415aa8
  402cbe:	repnz arpl WORD PTR [eax+0x5],di
  402cc2:	lods   al,BYTE PTR ds:[esi]
  402cc3:	jg     0x402c4f
  402cc5:	mov    ds:0xdd796db7,eax
  402cca:	mov    ebp,0xe2e2ede8
  402ccf:	and    BYTE PTR [edx-0x3542bba9],ch
  402cd5:	pusha  
  402cd6:	add    al,cl
  402cd8:	or     ecx,DWORD PTR [ebp+0x5c]
  402cdb:	mov    esp,0xec541f7
  402ce0:	in     eax,0xfe
  402ce2:	cmp    esi,edx
  402ce4:	test   eax,0x32752667
  402ce9:	jae    0x402cf7
  402ceb:	push   cs
  402cec:	pop    ds
  402ced:	jl     0x402ce1
  402cef:	mov    DWORD PTR [edx+ebx*1+0xb],esi
  402cf3:	rol    DWORD PTR [ecx],cl
  402cf5:	cmp    dh,BYTE PTR [ebx+eiz*8+0x5e]
  402cf9:	jle    0x402ca1
  402cfb:	inc    ecx
  402cfc:	sbb    BYTE PTR [eax-0x26],ch
  402cff:	sub    al,0xa
  402d01:	ret    
  402d02:	sbb    DWORD PTR [edi+0x19499cb4],edx
  402d08:	in     al,0xd0
  402d0a:	mov    ds:0xbbe7b974,eax
  402d0f:	adc    bl,0xc5
  402d12:	std    
  402d13:	les    esi,FWORD PTR [ecx+eax*1+0x4dfc8790]
  402d1a:	jae    0x402d26
  402d1c:	scas   eax,DWORD PTR es:[edi]
  402d1d:	pushf  
  402d1e:	int3   
  402d1f:	jmp    0x54f:0x2e939155
  402d26:	mov    ds:0x4a765cb,eax
  402d2b:	jmp    0xae948895
  402d30:	add    eax,0x87750344
  402d35:	nop
  402d36:	dec    edx
  402d37:	aam    0x77
  402d39:	scas   al,BYTE PTR es:[edi]
  402d3a:	mov    ds,WORD PTR [eax+0x397cb01b]
  402d40:	(bad)  
  402d41:	mov    ds:0x5df6e9e5,eax
  402d46:	cmp    eax,0xee3c3a99
  402d4b:	icebp  
  402d4c:	push   ss
  402d4d:	fwait
  402d4e:	inc    edx
  402d4f:	adc    DWORD PTR [edx+0x41],ebx
  402d52:	loop   0x402dbb
  402d54:	sub    al,0x62
  402d56:	dec    eax
  402d57:	ins    DWORD PTR es:[edi],dx
  402d58:	neg    BYTE PTR [edi+0x73]
  402d5b:	pop    esp
  402d5c:	sub    al,0xfb
  402d5e:	jbe    0x402d10
  402d60:	retf   0xad93
  402d63:	pop    ss
  402d64:	clc    
  402d65:	popf   
  402d66:	rcl    DWORD PTR ds:0xfa266d8b,1
  402d6c:	outs   dx,DWORD PTR ds:[esi]
  402d6d:	push   ecx
  402d6e:	cmp    bh,al
  402d70:	rcr    DWORD PTR ds:0x4ba774df,0x55
  402d77:	hlt    
  402d78:	stc    
  402d79:	out    0xef,al
  402d7b:	or     cl,BYTE PTR [edi+0x17]
  402d7e:	mov    bh,0x5e
  402d80:	repnz shr DWORD PTR [edi+edi*8+0x4b999c30],1
  402d88:	loope  0x402d5e
  402d8a:	ja     0x402d5d
  402d8c:	iret   
  402d8d:	xor    al,0x5b
  402d8f:	les    esi,FWORD PTR [esi]
  402d91:	fsub   DWORD PTR [ecx+0x35c71d22]
  402d97:	jae    0x402d69
  402d99:	stos   DWORD PTR es:[edi],eax
  402d9a:	outs   dx,BYTE PTR ds:[esi]
  402d9b:	mov    eax,DWORD PTR [edx]
  402d9d:	push   esi
  402d9e:	ins    DWORD PTR es:[edi],dx
  402d9f:	mov    BYTE PTR [edi+0x20],ah
  402da2:	fsub   st(3),st
  402da4:	stos   DWORD PTR es:[edi],eax
  402da5:	jmp    0x14b8:0xcadfeda
  402dac:	mov    ebp,0x9feb3f4
  402db1:	jl     0x402d8e
  402db3:	or     ebp,eax
  402db5:	mov    al,0x19
  402db7:	and    al,0xfa
  402db9:	push   ecx
  402dba:	call   0xc1cc:0xaed2fd82
  402dc1:	mov    edx,0x1d3b0519
  402dc6:	out    dx,al
  402dc7:	leave  
  402dc8:	mov    ebp,0xc65d9252
  402dcd:	rol    DWORD PTR [edi+ebp*4-0x2a],0x3d
  402dd2:	loop   0x402e48
  402dd4:	je     0x402dd5
  402dd6:	int    0xf8
  402dd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dd9:	aad    0xca
  402ddb:	pop    ebx
  402ddc:	jnp    0x608b2a62
  402de2:	mov    al,ds:0x75832d1a
  402de7:	push   esp
  402de8:	lea    ecx,[ebp-0x254ba6fd]
  402dee:	add    esi,DWORD PTR [ebx]
  402df0:	or     eax,0x70b6c074
  402df5:	pop    ebp
  402df6:	rcl    DWORD PTR [ebp+0x27],1
  402df9:	cmp    BYTE PTR [ecx+edi*8+0x54],bl
  402dfd:	sbb    BYTE PTR [eax+0x72036a7a],dl
  402e03:	xchg   DWORD PTR [edi+0x5d],edx
  402e06:	mov    ah,0x4c
  402e08:	mov    ecx,0x8edcfea8
  402e0d:	int3   
  402e0e:	ror    DWORD PTR [ecx-0x50],cl
  402e11:	pushf  
  402e12:	mov    bl,0xc8
  402e14:	and    DWORD PTR [esi-0x3f],ecx
  402e17:	or     BYTE PTR [eax+0x74ffd2b6],dl
  402e1d:	out    0xca,al
  402e1f:	int3   
  402e20:	push   eax
  402e21:	xchg   ebp,eax
  402e22:	test   al,0xaf
  402e24:	bound  esi,QWORD PTR [edi]
  402e26:	ror    DWORD PTR [ebp-0x13d7acee],cl
  402e2c:	cmp    edx,ebx
  402e2e:	pushf  
  402e2f:	xor    bl,cl
  402e31:	cmp    eax,0x3e1ae839
  402e36:	pop    ebp
  402e37:	sbb    BYTE PTR [edx-0xf],cl
  402e3a:	jl     0x402e62
  402e3c:	or     eax,0x766564d6
  402e41:	cdq    
  402e42:	dec    esp
  402e43:	adc    ebp,DWORD PTR [edx]
  402e45:	pop    ds
  402e46:	cmp    esi,esi
  402e48:	addr16 push ebp
  402e4a:	ret    
  402e4b:	out    0x85,eax
  402e4d:	pop    DWORD PTR [eax-0x65]
  402e50:	sub    bh,cl
  402e52:	sbb    DWORD PTR [ebx],ebp
  402e54:	es push ds
  402e56:	fsub   DWORD PTR [ecx]
  402e58:	in     eax,0x66
  402e5a:	je     0x402eb3
  402e5c:	add    DWORD PTR [edi+edi*2+0x77],eax
  402e60:	in     eax,dx
  402e61:	push   ds
  402e62:	out    0x9e,al
  402e64:	pop    esp
  402e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e66:	pop    ds
  402e67:	pushf  
  402e68:	inc    ebx
  402e69:	mov    ecx,0xe0c742ef
  402e6e:	fst    QWORD PTR [edi+0x7501a44a]
  402e74:	mov    al,0x45
  402e76:	imul   BYTE PTR [edi+0x4b]
  402e79:	in     eax,dx
  402e7a:	scas   al,BYTE PTR es:[edi]
  402e7b:	mov    dh,0xe3
  402e7d:	jge    0x402e1d
  402e7f:	sbb    eax,0xb35aae78
  402e84:	and    bl,0x5d
  402e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e88:	adc    BYTE PTR fs:[eax+ecx*8-0x18],dh
  402e8d:	lock data16 cmc 
  402e90:	aas    
  402e91:	outs   dx,BYTE PTR ds:[esi]
  402e92:	popa   
  402e93:	xchg   edx,eax
  402e94:	sub    BYTE PTR [esi+0x1af1a37d],al
  402e9a:	lods   eax,DWORD PTR ds:[esi]
  402e9b:	push   eax
  402e9c:	inc    edi
  402e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e9e:	pop    es
  402e9f:	shl    DWORD PTR [edi-0x4b9583b0],1
  402ea5:	push   edx
  402ea6:	mov    eax,ds:0xd83f9385
  402eab:	push   cs
  402eac:	sbb    bl,al
  402eae:	ja     0x402e67
  402eb0:	js     0x402ec6
  402eb2:	xchg   ebx,eax
  402eb3:	inc    esi
  402eb4:	bound  edi,QWORD PTR [edi+eiz*2-0x16c3ff42]
  402ebb:	xor    dh,ch
  402ebd:	sar    DWORD PTR [eax+0x24],1
  402ec0:	cmp    BYTE PTR [edx+0x3b],dh
  402ec3:	loop   0x402eca
  402ec5:	pushf  
  402ec6:	dec    esi
  402ec7:	out    dx,eax
  402ec8:	inc    edx
  402ec9:	xlat   BYTE PTR ds:[ebx]
  402eca:	xchg   esp,eax
  402ecb:	mov    BYTE PTR [eax+0x4481001b],bl
  402ed1:	xor    BYTE PTR [ebp-0x3f],0x67
  402ed5:	pop    edi
  402ed6:	popa   
  402ed7:	jp     0x402ed3
  402ed9:	call   0x7824:0x8b084ff7
  402ee0:	test   BYTE PTR [edx],ch
  402ee2:	xor    ebx,ebp
  402ee4:	retf   
  402ee5:	add    bh,ch
  402ee7:	mov    WORD PTR [edx-0x35],es
  402eea:	int3   
  402eeb:	mov    ds:0xbc621110,eax
  402ef0:	ret    0xd944
  402ef3:	xor    eax,0x8b6ba624
  402ef8:	loope  0x402f3f
  402efa:	xor    ebp,ecx
  402efc:	inc    ecx
  402efd:	sbb    al,BYTE PTR ds:0x1b42ee7
  402f03:	les    edi,FWORD PTR [esi+0x6fe8bfd7]
  402f09:	and    bl,BYTE PTR [ecx]
  402f0b:	bound  ebp,QWORD PTR [eax-0x4cfa5717]
  402f11:	popf   
  402f12:	pop    es
  402f13:	aam    0xe2
  402f15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f16:	mov    al,ds:0xaa2aa091
  402f1b:	pop    ss
  402f1c:	mov    ds:0xb7163998,eax
  402f21:	mov    ds:0xb6f5cc0,eax
  402f26:	rcr    BYTE PTR [esi+0x7c],1
  402f29:	daa    
  402f2a:	xor    dh,cl
  402f2c:	or     al,0xf8
  402f2e:	xchg   ebx,eax
  402f2f:	xchg   bl,cl
  402f31:	dec    ebx
  402f32:	or     DWORD PTR [esi],ebx
  402f34:	jge    0x402efe
  402f36:	sbb    DWORD PTR [eax-0x2a],0xffffff9e
  402f3a:	mov    eax,0x9079725b
  402f3f:	and    DWORD PTR [ecx+edi*2-0x77],0x3e
  402f44:	jge    0x402f75
  402f46:	sbb    BYTE PTR [ebp+0x21],bl
  402f49:	mov    al,0xd1
  402f4b:	pop    ss
  402f4c:	call   0xb911:0xf8e2718b
  402f53:	xor    BYTE PTR [ebx],0xfb
  402f56:	test   DWORD PTR [ecx-0x407c3ba8],esp
  402f5c:	mov    edx,0x2db3cf9
  402f61:	push   ss
  402f62:	pop    ds
  402f63:	mov    eax,0x3f527be8
  402f68:	jle    0x402f9d
  402f6a:	inc    eax
  402f6b:	stc    
  402f6c:	arpl   WORD PTR [ecx+0x7],dx
  402f6f:	xor    esp,DWORD PTR [edx+eax*2-0x53]
  402f73:	xor    al,0xab
  402f75:	int    0x8c
  402f77:	mov    bl,0x7f
  402f79:	push   0x33654541
  402f7e:	fwait
  402f7f:	add    esi,esi
  402f81:	in     eax,dx
  402f82:	fist   DWORD PTR [edi+0x7e]
  402f85:	outs   dx,DWORD PTR ds:[esi]
  402f86:	retf   
  402f87:	pop    edi
  402f88:	dec    edi
  402f89:	call   0xdf83:0x21fdf267
  402f90:	enter  0xe2e1,0x17
  402f94:	adc    BYTE PTR [edi],ch
  402f96:	push   ebp
  402f97:	xchg   ebp,eax
  402f98:	stos   DWORD PTR es:[edi],eax
  402f99:	adc    BYTE PTR [esi+0x66],bh
  402f9c:	test   DWORD PTR [esi-0x5a],ecx
  402f9f:	cmp    dl,BYTE PTR [edx]
  402fa1:	mov    edi,0x8660e687
  402fa6:	cli    
  402fa7:	cmc    
  402fa8:	push   0x2806b5f6
  402fad:	push   esp
  402fae:	ins    BYTE PTR es:[edi],dx
  402faf:	sar    DWORD PTR [ecx-0x5d],1
  402fb2:	mov    edi,0xbe94636d
  402fb7:	adc    al,0xbb
  402fb9:	and    BYTE PTR es:[eax],ah
  402fbc:	mov    eax,ds:0x5b734d2d
  402fc1:	mov    DWORD PTR [eax],esi
  402fc3:	fimul  WORD PTR [edi]
  402fc5:	fs sbb al,0x53
  402fc8:	adc    bh,BYTE PTR [eax]
  402fca:	loop   0x402f8b
  402fcc:	and    eax,0xef956714
  402fd1:	jl     0x402fe2
  402fd3:	clc    
  402fd4:	(bad)  
  402fd5:	sub    eax,0x82cca105
  402fda:	add    DWORD PTR [eax-0xe64d780],esi
  402fe0:	nop
  402fe1:	push   ds
  402fe2:	mov    ebp,0xdd280547
  402fe7:	iret   
  402fe8:	or     eax,ecx
  402fea:	add    BYTE PTR [eax-0x6c7681e4],ah
  402ff0:	pop    ss
  402ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ff2:	dec    esp
  402ff3:	pop    ebp
  402ff4:	js     0x403061
  402ff6:	in     eax,0xc7
  402ff8:	repz adc DWORD PTR [edi+0x72],edi
  402ffc:	fsub   QWORD PTR gs:0x6190c7a9
  403004:	xor    eax,0x675812db
  403009:	popf   
  40300a:	dec    eax
  40300b:	sbb    al,0x3a
  40300d:	jmp    0x402f90
  40300f:	lahf   
  403010:	and    eax,DWORD PTR [edi]
  403012:	arpl   WORD PTR [esi],cx
  403014:	icebp  
  403015:	stc    
  403016:	cwde   
  403017:	mov    eax,ds:0xbfe9f73d
  40301c:	lea    ebx,[esi-0x9]
  40301f:	ret    0x4908
  403022:	mov    ds:0x1a27cc69,al
  403027:	jmp    0x34ffb7de
  40302c:	inc    edi
  40302d:	test   BYTE PTR [ebp-0x5e7bf90c],ah
  403033:	push   0xf
  403035:	clc    
  403036:	les    edi,FWORD PTR [edx]
  403038:	lods   eax,DWORD PTR ds:[esi]
  403039:	cmc    
  40303a:	sub    bh,BYTE PTR [ebx+0x708db6e2]
  403040:	xchg   cl,dl
  403042:	xor    eax,0xf442bea9
  403047:	xor    al,BYTE PTR [ebp-0x19]
  40304a:	add    DWORD PTR [ebx+ecx*2-0x7dd4f400],eax
  403051:	imul   DWORD PTR [esi+eiz*2]
  403054:	mov    esi,0xf8292b8c
  403059:	dec    edx
  40305a:	add    DWORD PTR [ecx],edi
  40305c:	ins    DWORD PTR es:[edi],dx
  40305d:	add    esi,DWORD PTR [edx-0xc]
  403060:	cmp    al,0xa6
  403062:	or     edx,ecx
  403064:	sbb    al,0x8e
  403066:	adc    al,0x9b
  403068:	mul    BYTE PTR [ebx-0x9]
  40306b:	sbb    ah,BYTE PTR [edx-0x40]
  40306e:	mov    edi,0x23daf4e0
  403073:	pop    esi
  403074:	push   es
  403075:	and    al,0xc6
  403077:	arpl   WORD PTR [ebx-0x1607501c],ax
  40307d:	push   eax
  40307e:	fidivr DWORD PTR [ecx+esi*4+0x67]
  403082:	xlat   BYTE PTR ds:[ebx]
  403083:	aaa    
  403084:	and    esi,DWORD PTR [edi-0x2abccae4]
  40308a:	or     DWORD PTR [eax-0x1d],0xffffffe2
  40308e:	xchg   esp,eax
  40308f:	jl     0x403075
  403091:	sbb    eax,0xb1a14b4f
  403096:	or     bl,dl
  403098:	jae    0x4030b4
  40309a:	sbb    DWORD PTR [edx-0x45],ebp
  40309d:	(bad)  
  40309e:	cmp    dl,BYTE PTR [esi]
  4030a0:	shl    BYTE PTR [esi],cl
  4030a2:	aam    0x41
  4030a4:	cmp    al,0x11
  4030a6:	xchg   ebp,eax
  4030a7:	push   ds
  4030a8:	adc    dl,BYTE PTR [edx-0x4b]
  4030ab:	dec    eax
  4030ac:	int3   
  4030ad:	arpl   WORD PTR [ebp+ecx*8+0x3c],ax
  4030b1:	pop    ss
  4030b2:	jbe    0x403051
  4030b4:	in     al,0xa0
  4030b6:	push   0x56751af1
  4030bb:	icebp  
  4030bc:	cmp    BYTE PTR [ebx+0x303f7b72],bl
  4030c2:	hlt    
  4030c3:	jo     0x4030ce
  4030c5:	cs iret 
  4030c7:	cwde   
  4030c8:	jl     0x4030f8
  4030ca:	stos   DWORD PTR es:[edi],eax
  4030cb:	pop    ebx
  4030cc:	int3   
  4030cd:	cli    
  4030ce:	fs daa 
  4030d0:	out    0x23,al
  4030d2:	mov    ?,WORD PTR [ecx]
  4030d4:	inc    ebp
  4030d5:	jmp    0x4030e1
  4030d7:	pusha  
  4030d8:	mov    al,ds:0x9d836fc9
  4030dd:	shl    BYTE PTR [eax],cl
  4030df:	jae    0x4030e8
  4030e1:	lock jne 0x403142
  4030e4:	(bad)  
  4030e5:	mov    ebp,0x355524ec
  4030ea:	mov    dh,0x2a
  4030ec:	data16 neg BYTE PTR [ebx-0xb]
  4030f0:	xchg   ecx,eax
  4030f1:	adc    DWORD PTR [edx+0x39],esi
  4030f4:	and    esi,ecx
  4030f6:	into   
  4030f7:	sti    
  4030f8:	dec    edi
  4030f9:	stos   DWORD PTR es:[edi],eax
  4030fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030fb:	comiss xmm5,DWORD PTR [eax+0x79]
  4030ff:	mov    eax,ds:0xabb0b59e
  403104:	fisttp DWORD PTR [esi]
  403106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403107:	pop    esi
  403108:	lock mov ds:0xc47e1ba4,eax
  40310e:	and    DWORD PTR [esi-0x7a4a289e],esp
  403114:	xchg   ebp,eax
  403115:	xchg   edx,eax
  403116:	cmp    cl,BYTE PTR [eax-0x6d771cc4]
  40311c:	pop    esi
  40311d:	addr16 pop esi
  40311f:	dec    esi
  403120:	popf   
  403121:	icebp  
  403122:	ja     0x4030eb
  403124:	jge    0x403135
  403126:	push   edx
  403127:	mov    eax,0x9c4561bb
  40312c:	pop    ds
  40312d:	ja     0x4030f5
  40312f:	inc    ebx
  403130:	jge    0x4030eb
  403132:	leave  
  403133:	mov    WORD PTR [si+0x7d],fs
  403137:	cmp    bh,dl
  403139:	icebp  
  40313a:	test   DWORD PTR [esi-0x11],0xd76f441e
  403141:	sbb    eax,0xe60f42f1
  403146:	into   
  403147:	jno    0x4031c8
  403149:	dec    BYTE PTR [esi]
  40314b:	sbb    BYTE PTR [ecx+0x28246a57],bl
  403151:	push   cs
  403152:	arpl   WORD PTR [ebx+0x20],sp
  403155:	fs sub al,0xbd
  403159:	mov    bh,0x1b
  40315b:	int3   
  40315c:	jge    0x40315b
  40315e:	js     0x403133
  403160:	push   ss
  403161:	ret    
  403162:	in     eax,0x39
  403164:	and    eax,0x2a6e10b7
  403169:	pop    edi
  40316a:	(bad)  
  40316b:	out    0x9c,eax
  40316d:	ret    0x11bc
  403170:	rcr    DWORD PTR ds:0x196d6164,0x46
  403177:	out    dx,eax
  403178:	icebp  
  403179:	cdq    
  40317a:	fwait
  40317b:	aas    
  40317c:	stos   DWORD PTR es:[edi],eax
  40317d:	shl    BYTE PTR [eax-0x11345f44],cl
  403183:	xchg   DWORD PTR [ecx+edx*1],esp
  403186:	shl    DWORD PTR [eax],1
  403188:	std    
  403189:	push   edi
  40318a:	xchg   ecx,eax
  40318b:	aas    
  40318c:	ror    DWORD PTR [eax+ebx*2-0x292225c7],0xd4
  403194:	sub    DWORD PTR [ebp-0x3],esp
  403197:	inc    edi
  403198:	dec    edi
  403199:	cmp    bh,bh
  40319b:	inc    ecx
  40319c:	inc    ebx
  40319d:	out    dx,al
  40319e:	adc    al,0x54
  4031a0:	and    al,0xcb
  4031a2:	mov    esi,0xceae6086
  4031a7:	rol    BYTE PTR [ecx],cl
  4031a9:	ffree  st(3)
  4031ab:	xor    eax,0xdfb723bd
  4031b0:	cmp    ebx,DWORD PTR [eax+0x71]
  4031b3:	push   es
  4031b4:	daa    
  4031b5:	into   
  4031b6:	and    bh,BYTE PTR [esi+0x4d2026a5]
  4031bc:	test   eax,0x3c3e818
  4031c1:	ja     0x403239
  4031c3:	enter  0x5be9,0x65
  4031c7:	repnz mov edi,0x85df7087
  4031cd:	xor    bl,BYTE PTR [ecx+0x6f]
  4031d0:	gs aam 0xac
  4031d3:	mov    cl,0x5
  4031d5:	push   0x30
  4031d7:	adc    al,0x5a
  4031d9:	add    DWORD PTR [esi],0x59a20ab9
  4031df:	xor    BYTE PTR [esi],al
  4031e1:	aad    0xcb
  4031e3:	xchg   BYTE PTR [ebp-0x10940a15],bl
  4031e9:	jle    0x4031cd
  4031eb:	sbb    BYTE PTR [eax+0x41],0x5b
  4031ef:	or     ebx,DWORD PTR [esi-0x514ff9a2]
  4031f5:	cld    
  4031f6:	dec    ecx
  4031f7:	mov    esp,0xa33e2cdf
  4031fc:	mov    BYTE PTR [ebp-0x6e],0xd2
  403200:	xchg   esp,eax
  403201:	xor    bh,BYTE PTR [ecx+0x24ba3a26]
  403207:	test   al,0xe1
  403209:	sahf   
  40320a:	enter  0x601b,0x32
  40320e:	mov    eax,ds:0x7ca5c137
  403213:	ret    0x53fa
  403216:	pop    ss
  403217:	or     BYTE PTR [edx-0x6eb76bf5],al
  40321d:	out    dx,eax
  40321e:	mov    ebp,0xc9f703e5
  403223:	cdq    
  403224:	mov    bl,0x6c
  403226:	add    BYTE PTR [edi-0x5b7d4d2f],bl
  40322c:	fwait
  40322d:	inc    edx
  40322e:	dec    DWORD PTR [edx-0x2a]
  403231:	pop    ebx
  403232:	add    edx,eax
  403234:	add    al,0x42
  403236:	mov    ?,WORD PTR [ebp+0x13]
  403239:	push   cs
  40323a:	dec    ebp
  40323b:	cmp    BYTE PTR [ecx+0x35],0x17
  40323f:	push   ecx
  403240:	adc    bh,dh
  403242:	ds mov dh,0xc0
  403245:	cmp    eax,0x4b50fedb
  40324a:	mov    bl,0x3e
  40324c:	jle    0x40328e
  40324e:	mov    al,0x45
  403250:	cli    
  403251:	mov    ebx,0x3f0bebc2
  403256:	pop    edi
  403257:	cmp    eax,0xe93bd4b6
  40325c:	arpl   WORD PTR [esp+ebx*1],dx
  40325f:	mov    eax,0x3d2d39a5
  403264:	sbb    al,0x89
  403266:	aas    
  403267:	mov    dh,0xbc
  403269:	push   ss
  40326a:	enter  0x7ad5,0x98
  40326e:	push   ecx
  40326f:	loop   0x4032ba
  403271:	call   0x7c38:0xa39bf761
  403278:	ja     0x40327d
  40327a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40327b:	or     eax,0xa315bf9c
  403280:	int    0x36
  403282:	lods   al,BYTE PTR ds:[esi]
  403283:	xor    ebp,esi
  403285:	cld    
  403286:	mov    edi,edi
  403288:	xchg   ebx,eax
  403289:	fld    QWORD PTR [edi+0x10]
  40328c:	cmc    
  40328d:	imul   eax,DWORD PTR [edi],0x6351e7c1
  403293:	xchg   DWORD PTR [edx+ebp*4+0x36cc0ce8],esi
  40329a:	outs   dx,DWORD PTR ds:[esi]
  40329b:	fstp   QWORD PTR [esi-0x37060e81]
  4032a1:	sbb    eax,0xcddb8526
  4032a6:	fidivr WORD PTR [ecx]
  4032a8:	pop    edi
  4032a9:	or     cl,BYTE PTR [ebp+edi*2+0x49c53d9a]
  4032b0:	sbb    DWORD PTR [edi-0x41],eax
  4032b3:	mov    DWORD PTR [ebx-0x66db5d70],edx
  4032b9:	mov    edx,0xba32fca8
  4032be:	outs   dx,DWORD PTR ds:[esi]
  4032bf:	out    dx,al
  4032c0:	mov    dl,0x18
  4032c2:	cmc    
  4032c3:	sub    BYTE PTR [ecx],dl
  4032c5:	retf   
  4032c6:	nop
  4032c7:	dec    ebx
  4032c8:	jns    0x403345
  4032ca:	scas   al,BYTE PTR es:[edi]
  4032cb:	ror    esi,1
  4032cd:	int3   
  4032ce:	rol    BYTE PTR ds:0x9729d646,0xd3
  4032d5:	pop    ds
  4032d6:	jle    0x4032a5
  4032d8:	cmc    
  4032d9:	ds cmc 
  4032db:	test   BYTE PTR [ebx+0x26],cl
  4032de:	sbb    al,0xb9
  4032e0:	je     0x403353
  4032e2:	mov    esi,0xa6f2e4fc
  4032e7:	xchg   ebx,eax
  4032e8:	lock sub bh,BYTE PTR ds:[ecx+0x4dc662b7]
  4032f0:	add    eax,0xe935ddbb
  4032f5:	sbb    ebx,esi
  4032f7:	add    dh,dl
  4032f9:	imul   esp,DWORD PTR [esi-0x1f79098b],0xb3ac2d4e
  403303:	or     eax,0x400b8f44
  403308:	mov    ch,0x72
  40330a:	repnz sub BYTE PTR [edx-0x5c],ch
  40330e:	lods   eax,DWORD PTR ds:[esi]
  40330f:	ret    0x25fa
  403312:	mov    WORD PTR gs:[edi],?
  403315:	(bad)  
  403316:	push   edx
  403317:	mov    cl,0x2e
  403319:	jmp    0xfb990a30
  40331e:	dec    BYTE PTR [esi+0x52]
  403321:	clc    
  403322:	inc    ecx
  403323:	jecxz  0x403313
  403325:	call   0x6fa0:0x5b3358de
  40332c:	mov    ch,dh
  40332e:	jge    0x403375
  403330:	rcr    DWORD PTR [ebx],1
  403332:	fimul  DWORD PTR [eax+eiz*2-0x72c47bb2]
  403339:	call   0x1d84:0xb39b5e14
  403340:	sti    
  403341:	adc    eax,DWORD PTR [ebx]
  403343:	mov    edx,0x24091e2e
  403348:	and    bh,BYTE PTR ds:0xd5025406
  40334e:	pop    edx
  40334f:	test   BYTE PTR [ebx-0x7b47054c],0x51
  403356:	call   0xd46d7da6
  40335b:	js     0x40331a
  40335d:	inc    ebx
  40335e:	push   ecx
  40335f:	and    eax,0x8a834384
  403364:	outs   dx,BYTE PTR ds:[esi]
  403365:	mov    ebx,DWORD PTR [ebx-0x4c6a3748]
  40336b:	inc    esi
  40336c:	scas   eax,DWORD PTR es:[edi]
  40336d:	loope  0x4033ae
  40336f:	xchg   DWORD PTR [eax-0x6f],edx
  403372:	(bad)  
  403373:	pop    ecx
  403374:	jge    0x40337c
  403376:	dec    ebp
  403377:	mov    ebx,0x64a08592
  40337c:	or     BYTE PTR [ebx],ch
  40337e:	imul   eax,ebx,0x874835ea
  403384:	pop    esp
  403385:	inc    esi
  403386:	jl     0x403369
  403388:	mov    ah,0xc5
  40338a:	sub    al,0x5e
  40338c:	icebp  
  40338d:	idiv   BYTE PTR [eax+0x2d1d433b]
  403393:	add    dl,bh
  403395:	(bad)  
  403396:	aad    0xd6
  403398:	fist   WORD PTR [edx+0x1c]
  40339b:	jge    0x403371
  40339d:	mov    WORD PTR fs:[ebx-0x414bcb86],cs
  4033a4:	inc    eax
  4033a5:	adc    eax,0xf790da88
  4033aa:	jg     0x40334b
  4033ac:	mov    ebx,0xc38b6fad
  4033b1:	and    eax,0x47e40333
  4033b6:	cdq    
  4033b7:	pop    esi
  4033b8:	sub    eax,0x5a453c79
  4033bd:	daa    
  4033be:	rcl    DWORD PTR [esi],cl
  4033c0:	xlat   BYTE PTR ds:[ebx]
  4033c1:	cs nop
  4033c3:	lea    esp,ds:0x898837af
  4033c9:	ret    
  4033ca:	dec    eax
  4033cb:	bound  ebp,QWORD PTR [ebx+edi*4-0x4c]
  4033cf:	add    DWORD PTR [ebp+0x16270d4b],0xb9e8ee0
  4033d9:	push   es
  4033da:	jmp    0x320e:0xcfca90f
  4033e1:	pop    ebp
  4033e2:	in     eax,dx
  4033e3:	aam    0xed
  4033e5:	mov    esi,0x195dd835
  4033ea:	fs faddp st(3),st
  4033ed:	aaa    
  4033ee:	icebp  
  4033ef:	push   edx
  4033f0:	mov    esi,edx
  4033f2:	je     0x4033c8
  4033f4:	add    ebp,ecx
  4033f6:	sub    bh,0x14
  4033f9:	into   
  4033fa:	jge    0x4033f4
  4033fc:	xor    al,0xd7
  4033fe:	cmp    DWORD PTR [edi-0x6c4e93d5],edi
  403404:	pusha  
  403405:	mov    edi,0x2a5a1c60
  40340a:	or     eax,0x240191b8
  40340f:	push   ebx
  403410:	dec    eax
  403411:	pop    edi
  403412:	add    BYTE PTR [edx-0x19],ah
  403415:	int3   
  403416:	mov    bh,bl
  403418:	retf   
  403419:	jae    0x403493
  40341b:	add    dl,bh
  40341d:	retf   0x2070
  403420:	mov    edx,0x669e6c39
  403425:	xchg   DWORD PTR [edi+esi*1],ecx
  403428:	mov    ah,0xc1
  40342a:	fst    st(3)
  40342c:	sbb    BYTE PTR [eax],bl
  40342e:	inc    ecx
  40342f:	dec    edx
  403430:	nop
  403431:	fadd   st,st(1)
  403433:	and    eax,0xa13802c1
  403438:	push   edi
  403439:	ds and eax,0x1c405b7a
  40343f:	test   al,0x34
  403441:	and    BYTE PTR [edx-0x1],al
  403444:	pusha  
  403445:	jl     0x403436
  403447:	pop    esp
  403448:	pusha  
  403449:	mov    edx,0x471f4146
  40344e:	xchg   ebp,eax
  40344f:	shl    BYTE PTR [edi],1
  403451:	push   ds
  403452:	dec    ebx
  403453:	popf   
  403454:	jno    0x403495
  403456:	sub    dl,BYTE PTR [edx]
  403458:	and    ch,dh
  40345a:	cwde   
  40345b:	mov    ds:0x2bc2f6c6,eax
  403460:	push   ebx
  403461:	or     DWORD PTR [ebp-0x20],eax
  403464:	arpl   WORD PTR [ecx],dx
  403466:	mov    al,0x20
  403468:	sbb    ch,BYTE PTR [ecx-0x10e65aef]
  40346e:	repnz daa 
  403470:	jmp    0x618c:0x56f49d21
  403477:	pusha  
  403478:	push   es
  403479:	ds in  al,dx
  40347b:	lahf   
  40347c:	dec    ecx
  40347d:	(bad)  
  40347e:	aam    0xcc
  403480:	dec    ebp
  403481:	xchg   DWORD PTR [ecx-0xa399fc2],eax
  403487:	xchg   ch,bl
  403489:	dec    esp
  40348a:	add    al,0x27
  40348c:	xor    DWORD PTR [ebx],0xffffff9f
  40348f:	ins    DWORD PTR es:[edi],dx
  403490:	fdiv   st(5),st
  403492:	(bad)  
  403493:	jp     0x4034ad
  403495:	xor    dl,bh
  403497:	sub    eax,0x17e4c6b3
  40349c:	jb     0x4034ca
  40349e:	adc    eax,0xcd508259
  4034a3:	sub    ah,bh
  4034a5:	div    bh
  4034a7:	jle    0x4034e1
  4034a9:	lea    edx,[edi+0x30ffb593]
  4034af:	push   0xb2dad852
  4034b4:	imul   edi,DWORD PTR [eax],0x4cb786d5
  4034ba:	les    edx,FWORD PTR [ebp-0x49852734]
  4034c0:	aam    0xe3
  4034c2:	sbb    eax,0xf3f17555
  4034c7:	hlt    
  4034c8:	push   ecx
  4034c9:	inc    esi
  4034ca:	push   0x305c400b
  4034cf:	stos   DWORD PTR es:[edi],eax
  4034d0:	nop
  4034d1:	test   BYTE PTR [edi+0x1b6d8474],cl
  4034d7:	les    ebx,FWORD PTR [edx-0x37]
  4034da:	mov    ds:0xfb197a0c,eax
  4034df:	cwde   
  4034e0:	cmp    DWORD PTR [ecx+0x17b92209],ebx
  4034e6:	sti    
  4034e7:	ins    BYTE PTR es:[edi],dx
  4034e8:	in     al,dx
  4034e9:	(bad)  
  4034ea:	adc    eax,edx
  4034ec:	push   es
  4034ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034ee:	ja     0x4034ed
  4034f0:	jne    0x403534
  4034f2:	inc    ebp
  4034f3:	mov    cl,0xf9
  4034f5:	inc    ebp
  4034f6:	mov    dl,0x80
  4034f8:	out    dx,eax
  4034f9:	adc    BYTE PTR [ecx],dl
  4034fb:	mov    ds:0xadef4089,al
  403500:	mov    ?,WORD PTR [edx+0x3a]
  403503:	(bad)  
  403504:	mov    dh,0x8c
  403506:	int    0xf9
  403508:	popf   
  403509:	cld    
  40350a:	test   al,0x2f
  40350c:	mov    eax,ds:0xf25c23bd
  403511:	aas    
  403512:	mov    ebp,0xb9f155e2
  403517:	adc    BYTE PTR [edx-0x80],al
  40351a:	aas    
  40351b:	sti    
  40351c:	sbb    ecx,ecx
  40351e:	xchg   esi,eax
  40351f:	sti    
  403520:	jle    0x4034c3
  403522:	cs dec esp
  403524:	xor    al,0xb4
  403526:	scas   al,BYTE PTR es:[edi]
  403527:	or     BYTE PTR [eax+eax*2+0x2c4aab5a],dl
  40352e:	lea    ecx,[edi]
  403530:	add    ch,ch
  403532:	jl     0x403562
  403534:	cwde   
  403535:	dec    ecx
  403536:	jbe    0x4034bf
  403538:	jbe    0x40356d
  40353a:	ds jns 0x4035b7
  40353d:	pop    ecx
  40353e:	sbb    cl,BYTE PTR [ecx]
  403540:	inc    ebp
  403541:	sub    edi,DWORD PTR [ecx-0xd9c4c25]
  403547:	push   0xfa644ea0
  40354c:	(bad)  
  40354d:	pop    eax
  40354e:	test   al,0xa9
  403550:	xor    eax,0xcf62a0d9
  403555:	nop    DWORD PTR [edx-0x6b]
  403559:	dec    eax
  40355a:	xor    ecx,eax
  40355c:	pop    ecx
  40355d:	add    edx,edx
  40355f:	pop    ecx
  403560:	cmc    
  403561:	dec    eax
  403562:	push   edi
  403563:	loop   0x40352d
  403565:	ja     0x40351b
  403567:	(bad)  
  403568:	stos   DWORD PTR es:[edi],eax
  403569:	xchg   bh,bl
  40356b:	std    
  40356c:	lds    esi,FWORD PTR [ecx-0x19]
  40356f:	gs aaa 
  403571:	mov    dl,0x12
  403573:	(bad)  
  403574:	(bad)  
  403575:	icebp  
  403576:	or     dl,bl
  403578:	xchg   ebp,eax
  403579:	(bad)  
  40357a:	(bad)  
  40357b:	clc    
  40357c:	xor    edi,DWORD PTR [ecx]
  40357e:	inc    edx
  40357f:	(bad)  
  403581:	cdq    
  403582:	mov    ecx,0x72f0ea31
  403587:	cmp    ebx,ebx
  403589:	stc    
  40358a:	js     0x4035db
  40358c:	push   0xe5913733
  403591:	faddp  st(6),st
  403593:	loopne 0x403553
  403595:	xor    DWORD PTR [esi+0x4d4ecd54],ebx
  40359b:	cmp    BYTE PTR [ebx],al
  40359d:	inc    ebp
  40359e:	sar    DWORD PTR [ebx],cl
  4035a0:	aas    
  4035a1:	push   ds
  4035a2:	cmc    
  4035a3:	inc    edx
  4035a4:	xor    al,0xec
  4035a6:	daa    
  4035a7:	ds xor eax,0xf8c9ff7d
  4035ad:	fwait
  4035ae:	outs   dx,DWORD PTR ds:[esi]
  4035af:	icebp  
  4035b0:	in     eax,0xe7
  4035b2:	and    al,0x0
  4035b4:	sbb    BYTE PTR [edx+0x43],ah
  4035b7:	es mov al,0xfb
  4035ba:	cmp    DWORD PTR [ebx+esi*8+0x595e8039],esp
  4035c1:	mov    ds:0x3d380689,al
  4035c6:	fnstcw WORD PTR [esi-0x37]
  4035c9:	sub    edi,edi
  4035cb:	fwait
  4035cc:	push   ecx
  4035cd:	pushaw 
  4035cf:	push   edx
  4035d0:	stos   DWORD PTR es:[edi],eax
  4035d1:	add    eax,esp
  4035d3:	out    0xad,eax
  4035d5:	jmp    0x4296:0xf12d1d85
  4035dc:	fstp   TBYTE PTR [esi]
  4035de:	sbb    eax,0x7285bc8d
  4035e3:	int3   
  4035e4:	repz shr bh,cl
  4035e7:	daa    
  4035e8:	mov    dh,0x9e
  4035ea:	lods   eax,DWORD PTR ds:[esi]
  4035eb:	loopne 0x4035d6
  4035ed:	jmp    0x8820:0x2c2475b8
  4035f4:	(bad)  
  4035f5:	popa   
  4035f6:	mov    esp,0xf8e89cbd
  4035fb:	dec    ecx
  4035fc:	xor    eax,0xdd43d283
  403601:	sub    al,0x49
  403603:	mov    ch,BYTE PTR [eax-0x58]
  403606:	push   si
  403608:	mov    al,ds:0x1fe10740
  40360d:	ror    DWORD PTR [eax+0x45],0xa6
  403611:	jb     0x40365a
  403613:	mov    eax,0x53d20fcc
  403618:	dec    ebp
  403619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40361a:	lods   al,BYTE PTR ds:[esi]
  40361b:	push   DWORD PTR [ebx+0x5e]
  40361e:	pop    eax
  40361f:	xchg   ebp,eax
  403620:	mov    ebx,ds
  403622:	xor    ecx,eax
  403624:	jnp    0x4035eb
  403626:	inc    edx
  403627:	push   edi
  403629:	into   
  40362a:	xchg   esi,eax
  40362b:	out    dx,eax
  40362c:	(bad)  
  40362d:	enter  0xf23c,0x67
  403631:	pop    esp
  403632:	inc    ecx
  403633:	jle    0x403627
  403635:	cmp    BYTE PTR [edx-0x7f],bl
  403638:	out    dx,eax
  403639:	rcr    edi,1
  40363b:	out    dx,al
  40363c:	imul   esi,DWORD PTR [ebp+esi*2+0x3c2a0c5b],0x356cc8fb
  403647:	jge    0x4036c8
  403649:	xlat   BYTE PTR ds:[ebx]
  40364a:	or     ah,BYTE PTR [esi+eax*4]
  40364d:	add    ch,BYTE PTR [edx]
  40364f:	sub    eax,0x1ba671ad
  403654:	sub    DWORD PTR [ebx+0x61],edi
  403657:	mov    edi,0x8249726e
  40365c:	fcmovne st,st(5)
  40365e:	dec    ecx
  40365f:	mov    ds:0x448ea9ab,al
  403664:	imul   edi,DWORD PTR [edx+edx*8-0x2c],0x57
  403669:	jne    0x403693
  40366b:	sbb    DWORD PTR [edx+0x20669d4d],esp
  403671:	xlat   BYTE PTR ds:[ebx]
  403672:	into   
  403673:	nop
  403674:	sub    al,0xbf
  403676:	sbb    eax,0x8242723d
  40367b:	pop    ebp
  40367c:	cwde   
  40367d:	mov    eax,0x8893c54a
  403682:	js     0x4036a4
  403684:	lods   eax,DWORD PTR ds:[esi]
  403685:	pop    es
  403686:	ret    0xed58
  403689:	pop    ss
  40368a:	adc    bh,BYTE PTR [ecx]
  40368c:	mov    ebx,0xc7be9d5a
  403691:	xor    eax,0xaeaea736
  403696:	imul   edi,DWORD PTR ds:0x54279d9a,0x4f91c56
  4036a0:	cmp    BYTE PTR [edx],0x55
  4036a3:	iret   
  4036a4:	das    
  4036a5:	jb     0x4036ae
  4036a7:	sub    al,0xc
  4036a9:	add    eax,0xbdfce44a
  4036ae:	add    eax,0x9f257708
  4036b3:	mov    esi,0x428a3f6e
  4036b8:	xlat   BYTE PTR ds:[ebx]
  4036b9:	pop    esi
  4036ba:	aaa    
  4036bb:	popf   
  4036bc:	clc    
  4036bd:	mov    ds:0xc3e4ec73,al
  4036c2:	jp     0x403679
  4036c4:	inc    ebp
  4036c5:	xchg   ebp,eax
  4036c6:	out    0xc3,al
  4036c8:	leave  
  4036c9:	(bad)  
  4036ca:	cmc    
  4036cb:	int    0x5f
  4036cd:	push   ecx
  4036ce:	mov    ebp,0x1c0f2c21
  4036d3:	jnp    0x403709
  4036d5:	out    0x7e,eax
  4036d7:	add    al,0xe8
  4036d9:	inc    esi
  4036da:	scas   al,BYTE PTR es:[edi]
  4036db:	mov    al,ds:0xb9829717
  4036e0:	xor    edi,DWORD PTR [ebp-0x67d31757]
  4036e6:	repnz iret 
  4036e8:	mov    ebp,0xb70e634e
  4036ed:	in     al,dx
  4036ee:	jae    0x40369a
  4036f0:	push   cs
  4036f1:	push   ebx
  4036f2:	add    DWORD PTR [ebp+0x1b],0xfe4d40ad
  4036f9:	(bad)  
  4036fa:	in     al,dx
  4036fb:	mov    al,0x44
  4036fd:	mov    ebx,0x24f60e54
  403702:	and    DWORD PTR [edx-0x4e],esi
  403705:	int    0x61
  403707:	daa    
  403708:	nop
  403709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40370a:	push   0xf
  40370c:	mov    WORD PTR [ecx],?
  40370e:	adc    esp,esi
  403710:	(bad)  
  403711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403712:	mov    al,ds:0x68f8c925
  403717:	add    esp,eax
  403719:	or     BYTE PTR [ecx+0x75],ah
  40371c:	mov    ebx,0x821b1f2e
  403721:	iret   
  403722:	repnz dec esp
  403724:	rcl    ah,0x43
  403727:	repz pop ecx
  403729:	mov    ah,0x77
  40372b:	dec    esp
  40372c:	jns    0x4036f2
  40372e:	cdq    
  40372f:	pop    ebx
  403730:	pop    ebx
  403731:	sub    DWORD PTR [ebx-0x2156b1ef],0xb21c11f1
  40373b:	sub    ch,BYTE PTR [ebx-0x18a645c2]
  403741:	out    0x4e,al
  403743:	stc    
  403744:	push   ebx
  403745:	(bad)  
  403746:	pop    esp
  403747:	les    edx,FWORD PTR [ebx]
  403749:	mov    esi,0x8d532034
  40374e:	fs push esp
  403750:	retf   
  403751:	sahf   
  403752:	sbb    DWORD PTR [ecx-0x36],0x55
  403756:	adc    BYTE PTR [eax-0x33a2da32],0x79
  40375d:	sub    al,0x8a
  40375f:	sahf   
  403760:	out    dx,eax
  403761:	and    DWORD PTR [esi],ebp
  403763:	rcr    ebp,cl
  403765:	out    dx,al
  403766:	lock iret 
  403768:	test   DWORD PTR [edi],edi
  40376a:	aad    0x1b
  40376c:	xor    dl,bl
  40376e:	push   0xbfa51fe1
  403773:	xor    ah,BYTE PTR [ebx+0x6353c439]
  403779:	clc    
  40377a:	or     DWORD PTR [ecx+0x66],edi
  40377d:	add    BYTE PTR [ecx],0x40
  403780:	out    dx,al
  403781:	or     bh,BYTE PTR [eax+0x4577c7df]
  403787:	sahf   
  403788:	imul   DWORD PTR [ecx]
  40378a:	out    0x22,al
  40378c:	and    al,0xa6
  40378e:	repnz xor eax,0xc61ee73c
  403794:	bswap  esp
  403796:	rcr    ebx,0x8f
  403799:	pusha  
  40379a:	mov    fs,WORD PTR [edi]
  40379c:	addr16 mov al,0x20
  40379f:	dec    esi
  4037a0:	out    0xcc,al
  4037a2:	dec    ecx
  4037a3:	push   0x3c
  4037a5:	sti    
  4037a6:	out    0xa6,eax
  4037a8:	dec    eax
  4037a9:	rol    BYTE PTR [ebp-0x4c],0xc7
  4037ad:	repz test BYTE PTR [edx-0x401e1521],dh
  4037b4:	inc    esp
  4037b5:	dec    edi
  4037b6:	mov    edx,0x1e495a5c
  4037bb:	stos   BYTE PTR es:[edi],al
  4037bc:	and    eax,0xa5f8eb8c
  4037c1:	xor    ebp,edi
  4037c3:	push   0x57
  4037c5:	mov    edi,0xbbebb74f
  4037ca:	addr16 xor al,0x64
  4037cd:	jl     0x403791
  4037cf:	scas   al,BYTE PTR es:[edi]
  4037d0:	jmp    0xb046:0xf1808635
  4037d7:	into   
  4037d8:	out    dx,al
  4037d9:	outs   dx,DWORD PTR ds:[esi]
  4037da:	mov    dl,0xc8
  4037dc:	mov    ah,BYTE PTR [ecx+edx*8]
  4037df:	cdq    
  4037e0:	push   edi
  4037e1:	dec    ebp
  4037e2:	in     eax,dx
  4037e3:	inc    edi
  4037e4:	les    edx,FWORD PTR ds:0xad1f2da9
  4037ea:	add    dl,BYTE PTR [eax]
  4037ec:	adc    esp,DWORD PTR [ebx-0x7e]
  4037ef:	jp     0x4037bc
  4037f1:	xor    esi,esp
  4037f3:	cmp    cl,0x62
  4037f6:	clc    
  4037f7:	(bad)  
  4037f9:	fisubr WORD PTR [ecx+0x60]
  4037fc:	daa    
  4037fd:	int    0xfd
  4037ff:	jbe    0x4037cc
  403801:	test   BYTE PTR [ebx+0x44540614],bl
  403807:	mov    ds:0x46a96d85,al
  40380c:	ror    DWORD PTR [edx],cl
  40380e:	paddsb mm0,QWORD PTR [edx+eax*4-0xf0c6c0a]
  403816:	out    dx,al
  403817:	(bad)
  40381d:	jle    0x403827
  40381f:	div    BYTE PTR [edi-0x39]
  403822:	sbb    eax,0x5930103c
  403827:	xchg   ebx,eax
  403828:	icebp  
  403829:	mov    ds:0x87cb9e05,al
  40382e:	mov    ds:0xa8399fa5,al
  403833:	cmp    DWORD PTR [ebx],esi
  403835:	push   esi
  403836:	sub    bh,BYTE PTR [esp+edi*4]
  403839:	mov    ebp,0x83989afc
  40383e:	out    0x30,eax
  403840:	pop    ebx
  403841:	into   
  403842:	mov    esi,0x3ffc6026
  403847:	mov    al,0x64
  403849:	div    eax
  40384b:	ffree  st(4)
  40384d:	dec    eax
  40384e:	jmp    0x4037fe
  403850:	(bad)  
  403851:	mov    ebx,0x8605cd87
  403856:	faddp  st(1),st
  403859:	push   esp
  40385a:	pushf  
  40385b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40385d:	push   edx
  40385e:	push   di
  403860:	lock push cs
  403862:	push   edx
  403863:	ror    BYTE PTR [ebx+0x5d0d0c55],cl
  403869:	fcomp  QWORD PTR [eax]
  40386b:	add    BYTE PTR [ecx-0x6e],0xeb
  40386f:	xchg   ebp,eax
  403870:	jbe    0x403885
  403872:	sub    eax,ecx
  403874:	inc    ecx
  403875:	jno    0x40381b
  403877:	sbb    BYTE PTR [esi-0x2a],bh
  40387a:	aad    0x8d
  40387c:	pop    DWORD PTR [ebp+0x1c54e1c7]
  403882:	call   0x41571a7f
  403887:	in     al,dx
  403888:	pop    es
  403889:	cmp    dh,BYTE PTR [eax-0x26]
  40388c:	cwde   
  40388d:	xor    cl,BYTE PTR [eax-0x54]
  403890:	scas   eax,DWORD PTR es:[edi]
  403891:	call   0x9e6:0x3903a485
  403898:	jecxz  0x403851
  40389a:	xchg   esi,eax
  40389b:	sub    eax,0xa5036248
  4038a0:	aam    0xb4
  4038a2:	retf   0x95c4
  4038a5:	icebp  
  4038a6:	mov    edi,0x886ff88c
  4038ab:	jmp    0x1e998602
  4038b0:	lahf   
  4038b1:	aam    0x7
  4038b3:	mov    bh,0x11
  4038b5:	(bad)  
  4038b7:	loopne 0x40386d
  4038b9:	cmp    eax,DWORD PTR [edi]
  4038bb:	mov    al,BYTE PTR [ebp+0x5b8ee123]
  4038c1:	dec    esp
  4038c2:	push   esi
  4038c3:	xchg   edx,eax
  4038c4:	scas   al,BYTE PTR es:[edi]
  4038c5:	cmp    ah,bl
  4038c7:	in     al,dx
  4038c8:	imul   eax,DWORD PTR [edx+0x5f6588b0],0x3
  4038cf:	cmp    al,0x92
  4038d1:	aaa    
  4038d2:	inc    ebp
  4038d3:	push   0xffffff8a
  4038d5:	lods   eax,DWORD PTR ds:[esi]
  4038d6:	xlat   BYTE PTR ds:[ebx]
  4038d7:	push   ss
  4038d8:	imul   edx,DWORD PTR [ebp-0x13b4d87b],0x6bcba73d
  4038e2:	mov    ch,0x76
  4038e4:	jge    0x403928
  4038e6:	mov    edi,0x6a2bb992
  4038eb:	push   0xffffffa4
  4038ed:	adc    al,0x45
  4038ef:	jle    0x4038dc
  4038f1:	and    dl,BYTE PTR [eax]
  4038f3:	add    ebx,edx
  4038f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038f6:	jne    0x4038c6
  4038f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038f9:	pop    es
  4038fa:	inc    esi
  4038fb:	mov    bh,0xea
  4038fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038fe:	push   eax
  4038ff:	dec    ebp
  403900:	out    0xba,al
  403902:	retf   
  403903:	inc    edx
  403904:	cs add eax,0x9d0052f6
  40390a:	mov    ds:0x33263958,eax
  40390f:	or     ebp,eax
  403911:	arpl   dx,dx
  403913:	ss mov edx,0x3dcd02b7
  403919:	push   ebx
  40391a:	icebp  
  40391b:	and    edi,DWORD PTR [edx]
  40391d:	loope  0x4038ac
  40391f:	xor    BYTE PTR [edi+esi*1],cl
  403922:	ss ss or dl,BYTE PTR ds:[ecx+0x3f36e155]
  40392b:	adc    dl,ch
  40392d:	sbb    eax,0x8e8e700
  403932:	ret    0x1c08
  403935:	sub    DWORD PTR [esi+0x34df07ee],0xa0769a12
  40393f:	loop   0x40391e
  403941:	cmp    DWORD PTR [ecx],0xee066ad1
  403947:	inc    ebp
  403948:	mov    edx,0xc057b398
  40394d:	xchg   DWORD PTR [edx-0x51edf17e],edx
  403953:	jb     0x40395e
  403955:	sub    ch,BYTE PTR [edx]
  403957:	(bad)  
  403958:	repnz jmp 0x2461:0xac45e1a
  403960:	adc    eax,0x29042eda
  403965:	lahf   
  403966:	lahf   
  403967:	sahf   
  403968:	dec    ecx
  403969:	pop    ds
  40396a:	(bad)  
  40396b:	dec    edx
  40396c:	ficom  DWORD PTR [ecx-0x56]
  40396f:	or     BYTE PTR [ecx],bl
  403971:	into   
  403972:	icebp  
  403973:	and    ch,BYTE PTR [ebx]
  403975:	inc    ecx
  403976:	retf   
  403977:	push   ds
  403978:	repz sbb edi,esp
  40397b:	imul   esi,ebx,0x74818e82
  403981:	xchg   ebp,eax
  403982:	mov    BYTE PTR [edi+0x4fdacb35],al
  403988:	dec    ecx
  403989:	cwde   
  40398a:	aaa    
  40398b:	xchg   esp,eax
  40398c:	mov    WORD PTR [edi+edi*4-0x25d7a4f2],ss
  403993:	sbb    ebx,esi
  403995:	(bad)  
  403996:	popa   
  403997:	das    
  403998:	adc    dh,bl
  40399a:	add    al,0x75
  40399c:	cld    
  40399d:	cmp    al,0xfb
  40399f:	sahf   
  4039a0:	push   ebx
  4039a1:	popa   
  4039a2:	add    edi,ebx
  4039a4:	std    
  4039a5:	leave  
  4039a6:	sbb    eax,0x21bec9c5
  4039ab:	pop    ss
  4039ac:	adc    cl,BYTE PTR [eax-0x7afdf068]
  4039b2:	js     0x4039bc
  4039b4:	jge    0x4039b4
  4039b6:	mov    al,ds:0xdd2f6ee8
  4039bb:	inc    ecx
  4039bc:	cld    
  4039bd:	jg     0x40395d
  4039bf:	inc    esi
  4039c0:	out    dx,eax
  4039c1:	mov    al,0xf2
  4039c3:	push   es
  4039c4:	jo     0x4039ac
  4039c6:	mov    ebp,0x66d43a05
  4039cb:	fild   DWORD PTR [eax]
  4039cd:	add    BYTE PTR [ecx-0x6adaaea0],bl
  4039d3:	push   0xffffffbc
  4039d5:	and    eax,0xa43e806
  4039da:	icebp  
  4039db:	dec    ecx
  4039dc:	ficomp DWORD PTR [eax+0x3a]
  4039df:	(bad)  
  4039e0:	pop    es
  4039e1:	(bad)  
  4039e3:	mov    dh,0x4d
  4039e5:	dec    ebp
  4039e6:	into   
  4039e7:	xchg   esp,eax
  4039e8:	jl     0x403a54
  4039ea:	sbb    eax,0x8dafa489
  4039ef:	mov    al,ds:0x7473401f
  4039f4:	inc    edi
  4039f5:	outs   dx,BYTE PTR ds:[esi]
  4039f6:	mov    eax,ebx
  4039f8:	push   ds
  4039f9:	fcomp  QWORD PTR [ebx+0x69]
  4039fc:	stc    
  4039fd:	cli    
  4039fe:	push   ecx
  4039ff:	push   DWORD PTR [ebx]
  403a01:	aam    0x74
  403a03:	jle    0x403a63
  403a05:	stc    
  403a06:	adc    DWORD PTR ds:0x37d4d7aa,edx
  403a0c:	mov    DWORD PTR [edi+0x16db649a],eax
  403a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a13:	sar    BYTE PTR [edx+ebp*4+0x6537d999],0x27
  403a1b:	mov    al,ds:0xc69af53e
  403a20:	shr    DWORD PTR [ebx-0x42],cl
  403a23:	inc    esi
  403a24:	sub    DWORD PTR [ebx-0x13],ecx
  403a27:	pop    ecx
  403a28:	or     eax,0xf5efa393
  403a2d:	out    0xc4,eax
  403a2f:	sahf   
  403a30:	into   
  403a31:	jb     0x4039b3
  403a33:	mov    ah,0x5d
  403a35:	test   DWORD PTR [ebx],edi
  403a37:	xchg   edi,eax
  403a38:	and    al,BYTE PTR [ebx+0x5]
  403a3b:	dec    ebp
  403a3c:	daa    
  403a3d:	add    ah,BYTE PTR [esi]
  403a3f:	dec    esp
  403a40:	mov    ds:0xf3a3903a,eax
  403a45:	dec    esp
  403a46:	stos   BYTE PTR es:[edi],al
  403a47:	and    BYTE PTR [ebx+0x5e],bl
  403a4a:	push   ebp
  403a4b:	ds xor ecx,ebp
  403a4e:	cmp    ah,BYTE PTR [ebx+edx*2]
  403a51:	nop
  403a52:	xchg   esp,eax
  403a53:	add    eax,0xaf4df0c5
  403a58:	cmp    DWORD PTR [ecx],0xb
  403a5b:	shl    DWORD PTR [edi],cl
  403a5d:	call   0x451f:0x7cd8d077
  403a64:	and    cl,ch
  403a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a67:	clc    
  403a68:	add    esp,DWORD PTR [esi]
  403a6a:	rol    al,0x35
  403a6d:	aaa    
  403a6e:	out    0x79,al
  403a70:	stos   DWORD PTR es:[edi],eax
  403a71:	push   esp
  403a72:	jnp    0x403ae1
  403a74:	ret    
  403a75:	and    al,0x24
  403a77:	pop    edi
  403a78:	in     eax,0xfc
  403a7a:	and    al,0xe9
  403a7c:	repz enter 0x1797,0x4e
  403a81:	aaa    
  403a82:	test   DWORD PTR [esi+eax*4],0xe2cca768
  403a89:	sub    BYTE PTR [edx+ebp*2],0x61
  403a8d:	cmp    DWORD PTR [ecx],edi
  403a8f:	push   ebx
  403a90:	push   ss
  403a91:	push   edx
  403a92:	stc    
  403a93:	push   edi
  403a94:	inc    esp
  403a95:	inc    ebx
  403a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a97:	dec    edx
  403a98:	(bad)  
  403a99:	adc    al,0xcc
  403a9b:	test   BYTE PTR ds:0x61472396,dh
  403aa1:	andps  xmm1,XMMWORD PTR [ebx-0x79]
  403aa5:	fcmovne st,st(3)
  403aa7:	jmp    0x403ae7
  403aa9:	mov    ss,ebx
  403aab:	inc    edx
  403aac:	dec    ebp
  403aad:	fs aad 0x49
  403ab0:	inc    ebx
  403ab1:	int    0x7d
  403ab3:	cmp    al,0xe2
  403ab5:	bound  ebp,QWORD PTR [ebp-0x3fda1f2a]
  403abb:	xlat   BYTE PTR ds:[ebx]
  403abc:	push   eax
  403abd:	clc    
  403abe:	sar    BYTE PTR [ebp+0x12cc5a9a],1
  403ac4:	fild   QWORD PTR [eax+0x5bc0dd98]
  403aca:	clc    
  403acb:	cmp    al,0x10
  403acd:	test   eax,0xa7c15241
  403ad2:	jmp    0x3f8710e8
  403ad7:	sub    BYTE PTR [ebp+0x72fd45ff],dh
  403add:	pop    esi
  403ade:	hlt    
  403adf:	sar    al,1
  403ae1:	stos   DWORD PTR es:[edi],eax
  403ae2:	adc    ebp,DWORD PTR [ecx]
  403ae4:	ror    DWORD PTR [edx-0x5751e321],cl
  403aea:	push   edx
  403aeb:	addr16 addr16 push eax
  403aee:	mov    eax,ds:0xa601d690
  403af3:	test   esi,ebx
  403af5:	push   cs
  403af6:	or     eax,DWORD PTR [ecx-0x27938585]
  403afc:	xchg   edx,eax
  403afd:	fcmovbe st,st(2)
  403aff:	fidiv  DWORD PTR [eax-0x5f]
  403b02:	and    eax,DWORD PTR [ebx+eax*4+0x6d]
  403b06:	add    eax,0x3ad6c4f4
  403b0b:	stos   BYTE PTR es:[edi],al
  403b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b0d:	mov    edi,0xc755e5c4
  403b12:	pop    edx
  403b13:	inc    eax
  403b14:	mov    DWORD PTR ds:0x60824c49,edx
  403b1a:	xchg   ebx,ecx
  403b1c:	cdq    
  403b1d:	ret    0x965f
  403b20:	xor    al,0x61
  403b22:	lea    eax,[esi*8+0x69bc0551]
  403b29:	push   0x5f858f51
  403b2e:	xchg   edx,eax
  403b2f:	scas   eax,DWORD PTR es:[edi]
  403b30:	and    DWORD PTR [edx-0x74],0x78
  403b34:	mov    ?,WORD PTR [ecx]
  403b36:	mov    ebp,0x2b58faf
  403b3b:	(bad)  
  403b3c:	jl     0x403b2d
  403b3e:	leave  
  403b3f:	xor    dh,bh
  403b41:	outs   dx,DWORD PTR ds:[esi]
  403b42:	scas   al,BYTE PTR es:[edi]
  403b43:	cmp    al,BYTE PTR [edi]
  403b45:	sub    BYTE PTR [esi+0x41],0x98
  403b49:	sub    BYTE PTR [eax+0x664516da],cl
  403b4f:	mov    al,0x61
  403b51:	jns    0x403b61
  403b53:	ror    edi,1
  403b55:	xchg   DWORD PTR [ebp+0x44],ecx
  403b58:	scas   al,BYTE PTR es:[edi]
  403b59:	jmp    0x403b8f
  403b5b:	pop    eax
  403b5c:	daa    
  403b5d:	jno    0x403afc
  403b5f:	popf   
  403b60:	jl     0x403bda
  403b62:	mov    esp,0x37e2f0eb
  403b67:	cmpxchg BYTE PTR [edx],al
  403b6a:	add    esp,edx
  403b6c:	push   ebx
  403b6d:	jg     0x403b8e
  403b6f:	mov    dh,0xac
  403b71:	xchg   esp,eax
  403b72:	push   esp
  403b73:	push   es
  403b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b75:	in     al,0xb6
  403b77:	sbb    ah,BYTE PTR [esi+0x2c8ec0c4]
  403b7d:	out    dx,al
  403b7e:	(bad)  
  403b81:	(bad)  
  403b82:	(bad)  
  403b84:	jmp    0xbfeb:0x67dedfc5
  403b8b:	jp     0x403b43
  403b8d:	out    dx,eax
  403b8e:	pop    eax
  403b8f:	pminsw mm7,QWORD PTR [edx+0x2a9ca6e1]
  403b96:	xchg   edi,eax
  403b97:	or     al,0x88
  403b99:	retf   
  403b9a:	mov    ah,bh
  403b9c:	dec    ecx
  403b9d:	ret    
  403b9e:	cmp    bh,BYTE PTR [edi-0x69]
  403ba1:	cmp    al,0x80
  403ba3:	or     esp,esp
  403ba5:	and    eax,0x3d6fa21
  403baa:	mov    bl,0x2
  403bac:	sbb    ecx,DWORD PTR [ebp+0x1cd45e1]
  403bb2:	fmul   QWORD PTR [ebp+0x10]
  403bb5:	add    DWORD PTR [esp+ebx*4],ebp
  403bb8:	nop
  403bb9:	jmp    0x403bea
  403bbb:	aam    0x59
  403bbd:	xchg   ecx,eax
  403bbe:	inc    ebx
  403bbf:	fwait
  403bc0:	shl    ch,1
  403bc2:	call   DWORD PTR [edi+0x21b2d932]
  403bc8:	leave  
  403bc9:	xchg   esi,eax
  403bca:	popf   
  403bcb:	jmp    DWORD PTR [edi]
  403bcd:	cmp    al,BYTE PTR [edi-0x766009f8]
  403bd3:	jg     0x403bd5
  403bd5:	test   eax,0x54fcbd1
  403bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bdb:	dec    esi
  403bdc:	scas   eax,DWORD PTR es:[edi]
  403bdd:	add    cl,bl
  403bdf:	jle    0x403c4f
  403be1:	outs   dx,BYTE PTR ds:[esi]
  403be2:	push   edi
  403be3:	cmp    al,0xe1
  403be5:	lahf   
  403be6:	(bad)  
  403be7:	call   0xcd40:0x4d5af68d
  403bee:	mov    bl,0x57
  403bf0:	lock sub edx,DWORD PTR [eax-0x4c93542d]
  403bf7:	cmp    ebx,eax
  403bf9:	pop    eax
  403bfa:	inc    esi
  403bfb:	push   edi
  403bfc:	xor    bl,cl
  403bfe:	das    
  403bff:	xchg   esp,eax
  403c00:	sub    DWORD PTR [ecx+ebp*1],eax
  403c03:	ret    0x1a6e
  403c06:	xor    al,0x13
  403c08:	inc    eax
  403c09:	xchg   edx,eax
  403c0a:	xor    eax,0x4db4b3ef
  403c0f:	inc    edx
  403c10:	fistp  DWORD PTR [esp+ebx*2-0x444e41f5]
  403c17:	add    BYTE PTR [esi+0x72cd83ff],cl
  403c1d:	push   edi
  403c1e:	xchg   ebx,eax
  403c1f:	pop    ebp
  403c20:	mov    cl,0x20
  403c22:	push   eax
  403c23:	xlat   BYTE PTR ds:[ebx]
  403c24:	push   esp
  403c25:	fs mov esp,0x6ae67d6
  403c2b:	dec    eax
  403c2c:	cld    
  403c2d:	sar    dl,0xfd
  403c30:	cmp    DWORD PTR [ebx-0x79539e96],ebp
  403c36:	imul   eax,ebx,0x151393f5
  403c3c:	sar    BYTE PTR [edx],cl
  403c3e:	(bad)  
  403c3f:	dec    edx
  403c40:	sub    bl,ch
  403c42:	pop    ebp
  403c43:	or     ebx,DWORD PTR [edi+0x43]
  403c46:	test   BYTE PTR [ecx+eiz*2-0x5a],dh
  403c4a:	mov    esp,0x511bbf9c
  403c4f:	sbb    eax,0x6030e396
  403c54:	cmp    eax,0xd34c632b
  403c59:	jmp    0xc8e9:0xf1989443
  403c60:	loop   0x403bfa
  403c62:	add    BYTE PTR [edi+0x7b965a0e],dh
  403c68:	sub    eax,0xbce54010
  403c6d:	repz sub eax,0x4583ac9
  403c73:	in     eax,dx
  403c74:	jae    0x403c6f
  403c76:	push   es
  403c77:	cmp    edi,DWORD PTR ds:0x96befc7b
  403c7d:	in     eax,0x53
  403c7f:	dec    ebp
  403c80:	imul   ebx,ebp,0x6a
  403c83:	(bad)  
  403c84:	sbb    BYTE PTR [ebx-0x88bc1d2],cl
  403c8a:	sbb    DWORD PTR [esi],0xd86e5f3
  403c90:	sbb    al,0x32
  403c92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c93:	(bad)
  403c96:	lods   eax,DWORD PTR ds:[esi]
  403c97:	stos   DWORD PTR es:[edi],eax
  403c98:	(bad)  ds:0xa567eadf
  403c9e:	push   esp
  403c9f:	push   0x40
  403ca1:	fnstenv [ebx+0x716c3b83]
  403ca7:	in     al,0x22
  403ca9:	jecxz  0x403c70
  403cab:	mov    dl,0x2
  403cad:	fld    DWORD PTR [ebx]
  403caf:	mov    esi,0x2eba6465
  403cb4:	jmp    0x403ccf
  403cb6:	jo     0x403d13
  403cb8:	pop    ebp
  403cb9:	mov    ecx,0x4a1ab9b3
  403cbe:	test   al,0x5
  403cc0:	cld    
  403cc1:	add    eax,0x215d1707
  403cc6:	int    0x64
  403cc8:	lds    edx,FWORD PTR [ebx-0x72]
  403ccb:	pop    ebp
  403ccc:	mov    dl,0xa6
  403cce:	js     0x403c78
  403cd0:	addr16 sti 
  403cd2:	(bad)  
  403cd3:	addr16 push 0x4c
  403cd6:	shr    WORD PTR [eax],cl
  403cd9:	repz push ebx
  403cdb:	in     al,0xf
  403cdd:	add    BYTE PTR [eax+0x3d],dh
  403ce0:	repnz repz sar BYTE PTR [edi-0x4d],0xe3
  403ce6:	mov    ds,WORD PTR [edi]
  403ce8:	xchg   ecx,eax
  403ce9:	jbe    0x403c92
  403ceb:	xor    ebx,DWORD PTR [ebp+0x97d127c]
  403cf1:	in     al,0xa8
  403cf3:	sbb    ebx,esp
  403cf5:	jo     0x403c9e
  403cf7:	daa    
  403cf8:	mov    ebx,0xd79fd2de
  403cfd:	das    
  403cfe:	outs   dx,DWORD PTR ds:[esi]
  403cff:	lahf   
  403d00:	mov    eax,ds:0xe35509d1
  403d05:	sub    eax,0x63b1bcd1
  403d0a:	lock and DWORD PTR ds:0xdd373344,0x2f510d11
  403d15:	and    eax,0x2f273d41
  403d1a:	das    
  403d1b:	inc    edx
  403d1c:	push   ds
  403d1d:	inc    edx
  403d1e:	pushf  
  403d1f:	clc    
  403d20:	pop    ss
  403d21:	cwde   
  403d22:	pusha  
  403d23:	add    al,BYTE PTR [ebx]
  403d25:	js     0x403cd0
  403d27:	ins    DWORD PTR es:[edi],dx
  403d28:	cwde   
  403d29:	xlat   BYTE PTR ds:[ebx]
  403d2a:	mov    ds:0xa473330d,al
  403d2f:	push   0x83e6730a
  403d34:	fwait
  403d35:	xchg   BYTE PTR [ebx+0x83b0408],ch
  403d3b:	or     DWORD PTR [ebp+0x3b],esp
  403d3e:	pop    esi
  403d3f:	inc    esp
  403d40:	jp     0x403cf8
  403d42:	pop    esi
  403d43:	pop    esp
  403d44:	jl     0x403d75
  403d46:	cmp    al,0x66
  403d48:	mov    BYTE PTR [edi-0x4c],al
  403d4b:	outs   dx,BYTE PTR ds:[esi]
  403d4c:	aam    0xf1
  403d4e:	cmp    dh,cl
  403d50:	arpl   cx,sp
  403d52:	and    DWORD PTR [edx-0x2ae4fba1],0x5c95c89
  403d5c:	ins    DWORD PTR es:[edi],dx
  403d5d:	imul   edi,DWORD PTR [esi-0x67],0x44
  403d61:	xchg   edi,eax
  403d62:	sar    DWORD PTR [ebx+0x74],0x52
  403d66:	jae    0x403d6e
  403d68:	nop
  403d69:	mov    esi,0x16c956a4
  403d6e:	add    BYTE PTR [eax+0x7e],ch
  403d71:	fwait
  403d72:	mov    edx,0xbc652fdd
  403d77:	push   es
  403d78:	adc    DWORD PTR [edi+edi*1-0x18],ebp
  403d7c:	sbb    ah,BYTE PTR [esi+edx*1-0x59c5fb93]
  403d83:	pop    ecx
  403d84:	lea    eax,[ebx+0x3a]
  403d87:	or     BYTE PTR [edi+0x124e0d9a],bh
  403d8d:	inc    edx
  403d8e:	shl    BYTE PTR [esi+0x1f],cl
  403d91:	or     DWORD PTR [edi],esp
  403d93:	aad    0xc7
  403d95:	cmp    BYTE PTR [ebp-0x413b5acc],0x8b
  403d9c:	mov    eax,0x402ed06b
  403da1:	jae    0x403d78
  403da3:	add    BYTE PTR [edx],cl
  403da5:	ror    DWORD PTR es:[edx+0x2174bc01],1
  403dac:	lock dec esp
  403dae:	dec    ecx
  403daf:	adc    eax,0x155f66ee
  403db4:	out    dx,eax
  403db5:	iret   
  403db6:	clc    
  403db7:	xchg   edi,eax
  403db8:	nop
  403db9:	xchg   ebp,eax
  403dba:	fisub  DWORD PTR [ecx+esi*1]
  403dbd:	int3   
  403dbe:	imul   edx,DWORD PTR [eax-0x1b],0xffffff84
  403dc2:	ins    DWORD PTR es:[edi],dx
  403dc3:	mov    WORD PTR [esi-0x27260513],gs
  403dc9:	call   0x5bf212d2
  403dce:	sub    bh,bl
  403dd0:	cmc    
  403dd1:	ds out dx,al
  403dd3:	mov    esp,DWORD PTR [esi+0x72313b91]
  403dd9:	scas   al,BYTE PTR es:[edi]
  403dda:	mov    edi,0x95746182
  403ddf:	aad    0xa3
  403de1:	pop    ecx
  403de2:	sub    DWORD PTR [ecx-0x1ca9dd40],ebp
  403de8:	imul   edi,ecx,0x26
  403deb:	push   ds
  403dec:	adc    DWORD PTR [eax],edx
  403dee:	adc    esp,DWORD PTR [ebx-0x66220591]
  403df4:	push   eax
  403df5:	push   ebp
  403df6:	ror    bl,1
  403df8:	fwait
  403df9:	push   ebp
  403dfa:	icebp  
  403dfb:	jns    0x403e29
  403dfd:	or     ah,BYTE PTR [esp+edi*4-0x7f]
  403e01:	lds    edx,FWORD PTR [edi-0x52a6d12f]
  403e07:	mov    ebx,0x915675f5
  403e0c:	jbe    0x403e78
  403e0e:	sub    DWORD PTR [eax+0x23],esi
  403e11:	in     al,dx
  403e12:	shl    cl,1
  403e14:	loopne 0x403e46
  403e16:	pusha  
  403e17:	xchg   esi,eax
  403e18:	aaa    
  403e19:	sbb    bl,BYTE PTR [ebp+0x6cb553c0]
  403e1f:	push   ebp
  403e20:	mov    ebp,0xbdc528be
  403e25:	test   al,0xff
  403e27:	inc    esp
  403e28:	pop    ecx
  403e29:	xchg   ebp,eax
  403e2a:	jle    0x403e04
  403e2c:	cld    
  403e2d:	(bad)  
  403e2e:	scas   al,BYTE PTR es:[edi]
  403e2f:	mov    ebp,0x4f19e1a7
  403e34:	arpl   WORD PTR [ebp-0x5d],bx
  403e37:	jo     0x403e26
  403e39:	mov    al,ds:0x89b5ddb7
  403e3e:	outs   dx,BYTE PTR ds:[esi]
  403e3f:	ss call 0x8cc4a2ed
  403e45:	inc    esi
  403e46:	stc    
  403e47:	adc    al,0xee
  403e49:	adc    BYTE PTR [esi+0x32362779],al
  403e4f:	out    dx,eax
  403e50:	jecxz  0x403ddb
  403e52:	call   0x3756fd0d
  403e57:	ret    
  403e58:	xchg   ecx,eax
  403e59:	mov    bl,BYTE PTR [edx]
  403e5b:	lock and DWORD PTR [edi],eax
  403e5e:	lock mov ds:0x5a5448f2,al
  403e64:	les    esp,FWORD PTR [ecx+0x15]
  403e67:	inc    edx
  403e68:	movzx  esi,BYTE PTR [esi]
  403e6b:	stc    
  403e6c:	cmp    eax,0x34a21742
  403e71:	mov    ebx,0x84c01e34
  403e76:	mov    cl,0x4b
  403e78:	jp     0x403e21
  403e7a:	jae    0x403e65
  403e7c:	mov    ebp,0x567fec16
  403e81:	xor    al,0xc5
  403e83:	pop    ss
  403e84:	add    eax,edi
  403e86:	pop    ebp
  403e87:	retf   0x7607
  403e8a:	mov    DWORD PTR [ecx+0x5e4327f3],eax
  403e90:	dec    esi
  403e91:	ss adc eax,0xf9c16cda
  403e97:	push   esi
  403e98:	pusha  
  403e99:	stc    
  403e9a:	and    dl,BYTE PTR [esi+0x13]
  403e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e9e:	(bad)  
  403e9f:	out    dx,eax
  403ea0:	mov    bl,0x59
  403ea2:	je     0x403f1f
  403ea4:	push   0xc6d472f6
  403ea9:	std    
  403eaa:	mov    esi,0xcb6e886a
  403eaf:	ss jnp 0x403ed2
  403eb2:	ret    0x9cb6
  403eb5:	sub    DWORD PTR ds:0x2ab9413,edx
  403ebb:	jns    0x403e5f
  403ebd:	(bad)  
  403ebe:	mov    dh,0x58
  403ec0:	pop    ebp
  403ec1:	scas   eax,DWORD PTR es:[edi]
  403ec2:	mov    BYTE PTR [esi+0x30],ah
  403ec5:	mov    esp,0x7e1d823a
  403eca:	ja     0x403e82
  403ecc:	or     eax,eax
  403ece:	sbb    BYTE PTR [edx+0x62],ch
  403ed1:	out    dx,al
  403ed2:	aad    0x35
  403ed4:	shl    BYTE PTR [edi+0x75],0x8f
  403ed8:	in     al,0xc1
  403eda:	and    al,0xb5
  403edc:	fcmovnb st,st(4)
  403ede:	cdq    
  403edf:	ins    DWORD PTR es:[edi],dx
  403ee0:	jno    0x403ef8
  403ee2:	sub    ch,bl
  403ee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ee5:	clc    
  403ee6:	adc    BYTE PTR [edi+0x15a09f18],0xb6
  403eed:	xor    ecx,edx
  403eef:	jmp    0x403f09
  403ef1:	scas   eax,DWORD PTR es:[edi]
  403ef2:	shl    esp,1
  403ef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ef5:	ins    DWORD PTR es:[edi],dx
  403ef6:	mov    ebp,0x939520d3
  403efb:	call   0xe1db:0x55520c03
  403f02:	out    dx,eax
  403f03:	clc    
  403f04:	aas    
  403f05:	aas    
  403f06:	jle    0x403e92
  403f08:	(bad)  
  403f09:	cmp    ebx,ebx
  403f0b:	jne    0x403f53
  403f0d:	ror    BYTE PTR ds:0x2e74b0f2,0x53
  403f14:	inc    eax
  403f15:	fnsave [edx+0x25bf6d54]
  403f1b:	adc    al,0xfd
  403f1d:	test   al,0x92
  403f1f:	adc    al,0x7
  403f21:	mov    al,ds:0x1640e08a
  403f26:	ret    0x3402
  403f29:	jecxz  0x403ed8
  403f2b:	inc    ecx
  403f2c:	(bad)  
  403f2d:	push   esi
  403f2e:	enter  0xa9db,0xde
  403f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f34:	test   al,dl
  403f36:	xor    DWORD PTR [ecx+0x7943bac0],esi
  403f3c:	or     eax,0x1762473d
  403f41:	inc    ebp
  403f42:	mov    fs,WORD PTR [edi-0x3203c945]
  403f48:	push   edx
  403f49:	(bad)  
  403f4b:	ja     0x403fc1
  403f4d:	ror    DWORD PTR ds:[ecx],0xd9
  403f51:	jne    0x403f7b
  403f53:	out    dx,eax
  403f54:	dec    edi
  403f55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f56:	fwait
  403f57:	xor    BYTE PTR [ecx],0x4
  403f5a:	outs   dx,DWORD PTR ds:[esi]
  403f5b:	outs   dx,BYTE PTR ds:[esi]
  403f5c:	fs mov ebp,0xcc67936f
  403f62:	stos   DWORD PTR es:[edi],eax
  403f63:	hlt    
  403f64:	sbb    DWORD PTR [ebp-0x3b20688d],edx
  403f6a:	test   al,0xb3
  403f6c:	or     cl,BYTE PTR [esi-0x10]
  403f6f:	imul   esp,DWORD PTR [eax+0x24],0x92fea95f
  403f76:	aas    
  403f77:	inc    ecx
  403f78:	lds    eax,FWORD PTR [ebx+eax*1]
  403f7b:	mov    ebp,0x11ba1df9
  403f80:	retf   0x140d
  403f83:	enter  0xfb65,0xe9
  403f87:	ret    0x6c80
  403f8a:	cmp    eax,0x9772b603
  403f8f:	clc    
  403f90:	push   0xb214e376
  403f95:	std    
  403f96:	call   0xb1836ea0
  403f9b:	stc    
  403f9c:	adc    DWORD PTR [ebp-0x2ea6927],edx
  403fa2:	frstor [ebx-0x69]
  403fa5:	dec    edi
  403fa6:	and    DWORD PTR [esi+0x1f608e70],edi
  403fac:	jg     0x403f5a
  403fae:	jmp    0x8d43:0xf58fd4b3
  403fb5:	ss call 0xb409:0x8a5c39d0
  403fbd:	(bad)  
  403fbe:	scas   eax,DWORD PTR es:[edi]
  403fbf:	pop    es
  403fc0:	xor    al,0xae
  403fc2:	adc    ah,dh
  403fc4:	sbb    BYTE PTR [eax-0x3a],bh
  403fc7:	cld    
  403fc8:	sub    BYTE PTR [ebp+0x27],cl
  403fcb:	mov    eax,0x636f2876
  403fd0:	xchg   edi,eax
  403fd1:	out    dx,eax
  403fd2:	add    cl,BYTE PTR [esp+esi*8]
  403fd5:	sbb    dh,BYTE PTR ds:0xb8eeb358
  403fdb:	stos   BYTE PTR es:[edi],al
  403fdc:	outs   dx,BYTE PTR ds:[esi]
  403fdd:	outs   dx,DWORD PTR ds:[esi]
  403fde:	push   ebp
  403fdf:	test   DWORD PTR [ecx+ebx*2],esp
  403fe2:	and    dh,ch
  403fe4:	hlt    
  403fe5:	xchg   ebp,eax
  403fe6:	or     eax,0x821bb807
  403feb:	out    0xf9,eax
  403fed:	scas   al,BYTE PTR es:[edi]
  403fee:	sahf   
  403fef:	jbe    0x40401d
  403ff1:	xor    eax,0xa73a39a5
  403ff6:	mov    DWORD PTR [esi+edi*1],0x8b894c5
  403ffd:	adc    al,0xc7
  403fff:	mov    ebx,0x3c491cf0
  404004:	jecxz  0x403fed
  404006:	inc    BYTE PTR [edi]
  404008:	test   al,0xa8
  40400b:	mov    ds:0x721820e7,eax
  404010:	add    dl,dh
  404012:	and    eax,0x6dc4b74f
  404017:	ret    
  404018:	adc    cl,dh
  40401a:	sti    
  40401b:	test   ch,bh
  40401d:	push   es
  40401e:	mov    edx,0x71584abc
  404023:	call   0x36aec6af
  404028:	pop    edx
  404029:	dec    eax
  40402a:	(bad)  
  40402b:	cmc    
  40402c:	pop    ds
  40402d:	ins    BYTE PTR es:[edi],dx
  40402e:	lods   al,BYTE PTR ds:[esi]
  40402f:	mov    al,0x22
  404031:	pop    ss
  404032:	pop    ecx
  404033:	mov    WORD PTR [esi],ss
  404035:	jns    0x403fe8
  404037:	out    0x2e,al
  404039:	add    esi,ecx
  40403b:	dec    eax
  40403c:	adc    ecx,edx
  40403e:	mov    bl,0x32
  404040:	xor    edi,DWORD PTR [edi+eax*4+0x18b25858]
  404047:	lods   al,BYTE PTR ds:[esi]
  404048:	add    esp,DWORD PTR [edi]
  40404a:	mov    WORD PTR [esi-0x19],fs
  40404d:	xor    ebp,DWORD PTR ds:0xecb5a770
  404053:	and    BYTE PTR [edx+0x22a67e22],cl
  404059:	fdiv   st(6),st
  40405b:	fs xchg edi,eax
  40405d:	rcl    al,cl
  40405f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404060:	sbb    al,0xd4
  404062:	adc    al,0xa7
  404064:	aaa    
  404065:	lods   al,BYTE PTR ds:[esi]
  404066:	fist   DWORD PTR cs:[ebx]
  404069:	xor    eax,DWORD PTR [eax+0x5f288d0a]
  40406f:	xor    edi,DWORD PTR [ecx]
  404071:	cli    
  404072:	fsubr  QWORD PTR [esi+0x7c]
  404075:	sbb    eax,0x83ac8ee5
  40407a:	cld    
  40407b:	call   0xb7fe1008
  404080:	adc    DWORD PTR [esi-0x80],ebp
  404083:	aaa    
  404084:	pop    ss
  404085:	lods   al,BYTE PTR ds:[esi]
  404086:	pop    eax
  404087:	mov    esi,0xa57fb48a
  40408c:	in     al,dx
  40408d:	inc    ebp
  40408e:	mov    ds:0xe484c016,eax
  404093:	pop    ebx
  404094:	aas    
  404095:	pop    edi
  404096:	lds    esp,FWORD PTR [ebx]
  404098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404099:	retf   0x81c2
  40409c:	(bad)  
  40409d:	shr    DWORD PTR [bp+di+0x21],0x0
  4040a2:	ins    DWORD PTR es:[edi],dx
  4040a3:	nop
  4040a4:	sub    DWORD PTR ds:0x4495b78d,esp
  4040aa:	xor    DWORD PTR [ebp+0x4b],esp
  4040ad:	les    eax,FWORD PTR [ebx+0x1dc621fe]
  4040b3:	push   ds
  4040b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040b5:	pop    ebx
  4040b6:	xor    eax,0xe9a99fa6
  4040bb:	fisub  DWORD PTR [edi+0x2f]
  4040be:	fcomp  DWORD PTR [ebp-0x8]
  4040c1:	adc    ebx,ebx
  4040c3:	leave  
  4040c4:	out    0xc3,al
  4040c6:	sbb    DWORD PTR [ecx],0xffffffac
  4040c9:	stos   DWORD PTR es:[edi],eax
  4040ca:	xchg   DWORD PTR [eax-0x6f],ebx
  4040cd:	inc    edi
  4040ce:	mov    ?,WORD PTR [ecx-0x425de3c3]
  4040d4:	xlat   BYTE PTR ds:[ebx]
  4040d5:	outs   dx,BYTE PTR ds:[esi]
  4040d6:	dec    eax
  4040d7:	stc    
  4040d8:	add    DWORD PTR [edi+0x3a7b0942],ebx
  4040de:	pop    esi
  4040df:	mov    eax,ds:0x344bd4c8
  4040e4:	sbb    ecx,ebx
  4040e6:	push   ecx
  4040e7:	fsubp  st(6),st
  4040e9:	and    dh,BYTE PTR [edx+0x4d]
  4040ec:	jb     0x4040eb
  4040ee:	ror    BYTE PTR [esi+0x7e],0xaf
  4040f2:	dec    ebp
  4040f3:	in     al,dx
  4040f4:	fnstcw WORD PTR [ebp+edx*4-0x64]
  4040f8:	sub    BYTE PTR [edx+ebx*2],al
  4040fb:	inc    edx
  4040fc:	test   al,0xbc
  4040fe:	mov    edx,0xdb94d8ae
  404103:	jo     0x4040ba
  404105:	fst    DWORD PTR [eax]
  404107:	dec    ecx
  404108:	push   ds
  404109:	xchg   ecx,eax
  40410a:	fwait
  40410b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40410c:	adc    al,0xfb
  40410e:	dec    esp
  40410f:	xchg   ebp,eax
  404110:	rcr    BYTE PTR [ecx+0x59],1
  404113:	adc    esp,DWORD PTR [ebx+0x6c]
  404116:	or     DWORD PTR [edx+0x1a],ebp
  404119:	adc    dl,BYTE PTR [eax+0x24242f0e]
  40411f:	lea    edx,[ebx+ebp*8]
  404122:	retf   
  404123:	xlat   BYTE PTR ds:[ebx]
  404124:	das    
  404125:	sub    eax,0xeaaf19fe
  40412a:	popf   
  40412b:	dec    edi
  40412c:	and    BYTE PTR [edx],dh
  40412e:	addr16 xchg esi,eax
  404130:	rcl    BYTE PTR [eax-0x7460dbf1],1
  404136:	mov    ch,0x66
  404138:	jecxz  0x4041b3
  40413a:	ss test al,0xb1
  40413d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40413e:	imul   eax,DWORD PTR [ebx-0x7ac4eb8e],0xffffff81
  404145:	adc    eax,0xf015b403
  40414a:	jl     0x40416e
  40414c:	out    0xb7,eax
  40414e:	out    dx,eax
  40414f:	inc    esi
  404150:	sub    al,0x4e
  404152:	jge    0x404168
  404154:	sar    DWORD PTR [edi-0x7826da46],0xb4
  40415b:	mov    edi,0xb8558f19
  404161:	fdiv   DWORD PTR [esp+eiz*2]
  404164:	cwde   
  404165:	xchg   edx,eax
  404166:	fbstp  TBYTE PTR [ebp-0x53c0b4a8]
  40416c:	push   0xd25df14c
  404171:	and    al,0x2b
  404173:	inc    ebx
  404174:	cmp    esp,ebp
  404176:	inc    ebx
  404177:	repnz out dx,eax
  404179:	push   0xffffffdd
  40417b:	loope  0x404180
  40417d:	cmp    bh,BYTE PTR [edi-0x39]
  404180:	lock jmp 0xaa89:0xb180f638
  404188:	test   al,0x8b
  40418a:	aad    0xf2
  40418c:	adc    BYTE PTR [eax+0x3e],bh
  40418f:	push   ds
  404190:	lods   al,BYTE PTR ds:[esi]
  404191:	mov    al,BYTE PTR [edi-0x51]
  404194:	je     0x404201
  404196:	mov    ah,0x7f
  404198:	cmc    
  404199:	mov    eax,0x6f6cd02d
  40419e:	and    ebx,DWORD PTR [esi+0x4406240c]
  4041a4:	or     ecx,DWORD PTR [ecx]
  4041a6:	pusha  
  4041a7:	jns    0x4041b6
  4041a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041aa:	sbb    DWORD PTR [ecx-0x30],edx
  4041ad:	cs cwde 
  4041af:	mov    ecx,0xc0104073
  4041b4:	dec    esp
  4041b6:	test   al,0x7
  4041b8:	retf   0x1849
  4041bb:	or     eax,0x648b836a
  4041c0:	(bad)  
  4041c2:	arpl   bx,dx
  4041c4:	xchg   esi,eax
  4041c5:	xchg   DWORD PTR [ecx+edi*2+0x1a],esp
  4041c9:	inc    DWORD PTR es:[ecx*4+0xbd25bce]
  4041d1:	inc    esp
  4041d2:	test   BYTE PTR [edi+0x14],ch
  4041d5:	fistp  QWORD PTR [eax]
  4041d7:	add    DWORD PTR [ebx-0x1],edx
  4041da:	enter  0xc687,0xef
  4041de:	jge    0x40423d
  4041e0:	ja     0x4041b8
  4041e2:	aam    0x60
  4041e4:	mov    dh,BYTE PTR [edi+ecx*4]
  4041e7:	scas   al,BYTE PTR es:[edi]
  4041e8:	gs mov dh,0x7f
  4041eb:	es jp  0x404260
  4041ee:	pop    es
  4041ef:	mov    edi,0x92b91723
  4041f4:	xchg   DWORD PTR [ecx],esp
  4041f6:	mov    ecx,0x9614bbbc
  4041fb:	test   eax,0xeacdfed2
  404200:	lahf   
  404201:	in     al,0x76
  404203:	add    ch,0x16
  404206:	jmp    0x404276
  404208:	pop    ds
  404209:	stos   DWORD PTR es:[edi],eax
  40420a:	sbb    eax,0x32571e91
  40420f:	adc    ch,BYTE PTR [eax+0x32a4ea82]
  404215:	push   cs
  404216:	pushf  
  404217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404218:	jmp    0xa217:0x881e5bd1
  40421f:	repz stc 
  404221:	jl     0x4041d3
  404223:	dec    edi
  404224:	fsub   DWORD PTR ds:0xcf3d9825
  40422a:	cmp    dl,BYTE PTR [ecx+eax*4+0x5babf18f]
  404231:	push   edx
  404232:	sub    ecx,ebp
  404234:	mov    ah,0x49
  404236:	(bad)  
  404238:	(bad)  
  404239:	cmc    
  40423a:	mov    edx,0x5b377c8a
  40423f:	fcmovbe st,st(3)
  404241:	mov    ah,0xb9
  404243:	mov    ecx,0x3d8b2bc5
  404248:	daa    
  404249:	(bad)  
  40424a:	xchg   edx,eax
  40424b:	popf   
  40424c:	bound  esp,QWORD PTR [ebx+0x1de56f63]
  404252:	(bad)  
  404254:	retf   0x1ef1
  404257:	scas   eax,DWORD PTR es:[edi]
  404258:	addr16 or eax,0xfa6cb74
  40425e:	add    DWORD PTR [ecx],esi
  404260:	std    
  404261:	fistp  QWORD PTR [ebx]
  404263:	lea    esp,[eax+0x780f90a0]
  404269:	xlat   BYTE PTR ds:[ebx]
  40426a:	jg     0x404260
  40426c:	mov    cl,0xf2
  40426e:	cdq    
  40426f:	outs   dx,BYTE PTR ds:[esi]
  404270:	xchg   edi,eax
  404271:	iret   
  404272:	rcl    DWORD PTR [edi-0x6b],1
  404275:	cld    
  404276:	arpl   WORD PTR [ecx-0x53dfe8d7],ax
  40427c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40427d:	loop   0x4042af
  40427f:	gs dec eax
  404281:	adc    edi,DWORD PTR [edi]
  404283:	mov    bl,0x39
  404285:	push   bx
  404287:	clc    
  404288:	sub    ch,BYTE PTR [esi+esi*2+0x7b7d4520]
  40428f:	repnz lock pushf 
  404292:	fcomp  QWORD PTR [ecx-0x2881de77]
  404298:	pushf  
  404299:	outs   dx,DWORD PTR ds:[esi]
  40429a:	cmp    al,0x12
  40429c:	inc    edi
  40429d:	in     al,dx
  40429e:	mov    eax,fs
  4042a0:	sub    eax,DWORD PTR [eax]
  4042a2:	xor    eax,0xfe123a1
  4042a7:	into   
  4042a8:	or     BYTE PTR [esi-0x6071a772],0x1d
  4042af:	leave  
  4042b0:	sub    edx,eax
  4042b2:	and    esp,DWORD PTR [ebx+eiz*8]
  4042b5:	mov    bl,0xf6
  4042b7:	add    eax,0xce616c5b
  4042bc:	stc    
  4042bd:	stos   DWORD PTR es:[edi],eax
  4042be:	fwait
  4042bf:	adc    DWORD PTR [ecx+0x3a],ebp
  4042c2:	fld    st(2)
  4042c4:	jae    0x404310
  4042c6:	fwait
  4042c7:	add    bh,BYTE PTR [eax]
  4042c9:	inc    ebx
  4042ca:	dec    eax
  4042cb:	nop
  4042cc:	xchg   ebp,eax
  4042cd:	popa   
  4042ce:	shr    DWORD PTR [esi+0x1145f5a4],cl
  4042d4:	das    
  4042d5:	pop    eax
  4042d6:	aad    0xf8
  4042d8:	(bad)  
  4042d9:	push   edx
  4042da:	push   esi
  4042db:	push   0xffffff85
  4042dd:	push   esi
  4042de:	jno    0x404320
  4042e0:	gs (bad) 
  4042e2:	aad    0xdf
  4042e4:	jecxz  0x4042ce
  4042e6:	xor    eax,0x2a317040
  4042eb:	sti    
  4042ec:	clc    
  4042ed:	xchg   esi,eax
  4042ee:	fcos   
  4042f0:	fcom   DWORD PTR [edx]
  4042f2:	pop    esi
  4042f3:	shr    DWORD PTR [edx-0x33716199],0x78
  4042fa:	xor    DWORD PTR [esp+ebx*1],esi
  4042fd:	(bad)  
  4042fe:	jo     0x4042d2
  404300:	adc    DWORD PTR [ebx],edi
  404302:	aad    0x68
  404304:	ja     0x4042fe
  404306:	jns    0x40429c
  404308:	dec    eax
  404309:	pushf  
  40430a:	xor    al,0x75
  40430c:	and    ch,BYTE PTR [esi+0x57e17bbc]
  404312:	mov    ebx,0x5f05a395
  404317:	fs in  eax,dx
  404319:	push   esp
  40431a:	sahf   
  40431b:	push   edx
  40431c:	jbe    0x4042f7
  40431e:	les    ebp,FWORD PTR [ebp-0x5]
  404321:	cli    
  404322:	scas   al,BYTE PTR es:[edi]
  404323:	jecxz  0x4042b9
  404325:	sahf   
  404326:	sub    edi,DWORD PTR [ecx-0x61]
  404329:	int    0x72
  40432b:	jmp    0x40435c
  40432d:	or     eax,0xdb4e8d38
  404332:	add    esp,DWORD PTR [ecx+ebp*1-0x2]
  404336:	dec    esi
  404337:	repnz frstor [edi]
  40433a:	popa   
  40433b:	mov    ebx,0xd3624e13
  404340:	mov    ?,eax
  404342:	or     DWORD PTR [eax-0x6c],0xfeb40b37
  404349:	fwait
  40434a:	mov    ebp,0x963e6f16
  40434f:	pop    esi
  404350:	cmp    al,0x2a
  404352:	into   
  404353:	lock fdivr st,st(6)
  404356:	xor    al,BYTE PTR [edi-0x2248b4bb]
  40435c:	mov    bl,0xbc
  40435e:	mov    bh,0xca
  404360:	out    dx,al
  404361:	jns    0x4043cf
  404363:	mov    WORD PTR [esi],es
  404365:	inc    esp
  404366:	loope  0x4043d4
  404368:	je     0x4043bb
  40436a:	in     eax,dx
  40436b:	xchg   esi,eax
  40436c:	les    eax,FWORD PTR [esi+0x19c0ddbe]
  404372:	jmp    0x9812:0xb17ab0f1
  404379:	mov    ebp,0x6b7eb600
  40437e:	and    BYTE PTR [ebp-0x4f90f69e],al
  404384:	inc    edi
  404385:	in     al,dx
  404386:	inc    esi
  404387:	mov    ecx,0x8a2406
  40438c:	call   0x6122:0xd851476c
  404393:	mov    edx,0xcb937c28
  404398:	pusha  
  404399:	mov    ebp,0x7a68509b
  40439e:	sub    esp,DWORD PTR [esi]
  4043a0:	inc    DWORD PTR [ebx+0x27810131]
  4043a6:	push   0x40
  4043a8:	call   0xb5f5:0x41e2ba4b
  4043af:	int    0xe7
  4043b1:	mov    eax,ds:0x565d88d9
  4043b6:	sub    eax,0xc9c95624
  4043bb:	outs   dx,DWORD PTR ds:[esi]
  4043bc:	dec    ebp
  4043bd:	adc    ah,BYTE PTR [ebp-0x20]
  4043c0:	or     al,0x75
  4043c2:	pop    edi
  4043c3:	xchg   edi,eax
  4043c4:	mov    bl,0x22
  4043c6:	shl    DWORD PTR [eax-0x5b],0xd0
  4043ca:	aad    0x13
  4043cc:	test   BYTE PTR [ebx+0x2cda3f52],al
  4043d2:	(bad)  
  4043d3:	cmc    
  4043d4:	in     eax,dx
  4043d5:	pushf  
  4043d6:	cmp    DWORD PTR [edi+0x10],edx
  4043d9:	lea    esi,[ebx-0x3]
  4043dc:	loope  0x404430
  4043de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043df:	neg    BYTE PTR [eax+0xc]
  4043e2:	mov    edx,0x6df4a176
  4043e7:	pop    eax
  4043e8:	addr16 jg 0x40437d
  4043eb:	mov    ebp,0x3d4d617c
  4043f0:	push   0x15de243b
  4043f5:	inc    esp
  4043f6:	es mov ah,0xfe
  4043f9:	(bad)  
  4043fa:	not    BYTE PTR [ecx+ebx*1]
  4043fd:	xchg   ebp,eax
  4043fe:	jmp    0x4f3a:0x2ca456a0
  404405:	inc    edi
  404406:	nop
  404407:	xchg   esp,eax
  404408:	lods   eax,DWORD PTR ds:[esi]
  404409:	aaa    
  40440a:	gs retf 0x4770
  40440e:	fdiv   DWORD PTR [ecx+0x546fe7ab]
  404414:	test   eax,0x18785fe1
  404419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40441a:	sbb    BYTE PTR [ecx+0x39],bl
  40441d:	sbb    ecx,DWORD PTR [ecx]
  40441f:	shl    BYTE PTR ds:[esp+ebx*2+0x6752ee3d],0x7d
  404428:	mov    bl,0x2e
  40442a:	inc    eax
  40442b:	adc    bl,BYTE PTR [esi]
  40442d:	adc    BYTE PTR [ebx],0xd3
  404430:	pop    ss
  404431:	or     DWORD PTR [ecx],ebx
  404433:	xor    edi,DWORD PTR [esi+0x11]
  404436:	fiadd  WORD PTR [esi+eax*1-0x1e]
  40443a:	mov    ds:0xd5c82cca,al
  40443f:	in     al,dx
  404440:	push   0x8
  404442:	xchg   ebx,eax
  404443:	push   edi
  404444:	xlat   BYTE PTR ds:[ebx]
  404445:	fcomp  DWORD PTR [esi+0x13404f0]
  40444b:	fincstp 
  40444d:	push   esi
  40444e:	adc    esp,esp
  404450:	loop   0x404436
  404452:	jmp    0x5400d674
  404457:	mov    bh,0x61
  404459:	(bad)  
  40445a:	ins    DWORD PTR es:[edi],dx
  40445b:	mov    eax,ds:0x176d8ef5
  404460:	daa    
  404461:	sbb    DWORD PTR [esi+0x3],edi
  404464:	mov    ah,0xf9
  404466:	retf   
  404467:	jo     0x404421
  404469:	mov    ecx,0x73f8791a
  40446e:	xor    BYTE PTR [eax+0x1333218c],0x97
  404475:	mov    ds:0x950a5ed0,al
  40447a:	sti    
  40447b:	dec    esi
  40447c:	pop    ebx
  40447d:	adc    WORD PTR [esi+ebp*2],dx
  404481:	lods   al,BYTE PTR ds:[esi]
  404482:	mov    ds:0x8ce11bd1,eax
  404487:	call   0x38f247f3
  40448c:	mov    bl,0xa3
  40448e:	fldlg2 
  404490:	cmp    al,BYTE PTR [edi+0x6b]
  404493:	xchg   ch,dl
  404495:	xchg   BYTE PTR [ebp-0x48],dl
  404498:	dec    edi
  404499:	push   esp
  40449a:	shl    DWORD PTR [eax+eax*2+0x38],1
  40449e:	jo     0x4044eb
  4044a0:	(bad)  
  4044a1:	(bad)  
  4044a2:	push   ebp
  4044a3:	je     0x404475
  4044a5:	(bad)  [edx+edi*4]
  4044a8:	repnz adc al,0x12
  4044ab:	add    dh,BYTE PTR [esi]
  4044ad:	jg     0x4044a1
  4044af:	push   edi
  4044b0:	fwait
  4044b1:	xchg   DWORD PTR ds:[edi-0x3b],ecx
  4044b5:	ds iret 
  4044b7:	push   ecx
  4044b8:	mov    esp,0x5307e73e
  4044bd:	out    dx,al
  4044be:	cmp    cl,BYTE PTR [eax+0x778a02f5]
  4044c4:	sbb    ebx,esi
  4044c6:	pop    ds
  4044c7:	test   eax,0x4f8b7a45
  4044cc:	cdq    
  4044cd:	test   al,0xf1
  4044cf:	outs   dx,DWORD PTR ds:[esi]
  4044d0:	fld    DWORD PTR [ebx]
  4044d2:	call   FWORD PTR [edi]
  4044d4:	pop    esi
  4044d5:	cld    
  4044d6:	cmp    al,BYTE PTR [eax+edx*4+0x67]
  4044da:	push   ds
  4044db:	out    0x2b,al
  4044dd:	mov    ch,0xc8
  4044df:	pop    esp
  4044e0:	aam    0xd6
  4044e2:	fsubr  st(2),st
  4044e4:	sub    DWORD PTR [ebx],ebp
  4044e6:	in     eax,0xaa
  4044e8:	pop    edx
  4044e9:	or     ch,BYTE PTR [ecx+0x25a457b5]
  4044ef:	enter  0xb041,0x92
  4044f3:	xor    cl,BYTE PTR [ebx+edx*2+0x4797210]
  4044fa:	inc    ecx
  4044fb:	jmp    0x4044d2
  4044fd:	mov    dh,0x3c
  4044ff:	out    dx,al
  404500:	cmp    al,BYTE PTR [ebx+0x63]
  404503:	mov    ch,0x9d
  404505:	add    BYTE PTR [esi+0x420736f0],dl
  40450b:	jg     0x404501
  40450d:	mov    edx,0xa94711a9
  404512:	adc    al,0xf5
  404514:	lods   eax,DWORD PTR ds:[esi]
  404515:	adc    cl,bh
  404517:	lock cmp eax,0xdb599bd4
  40451d:	loop   0x40455f
  40451f:	jnp    0x4044a7
  404521:	shr    BYTE PTR [ebx+0xf],0x3a
  404525:	lea    eax,[ebx-0x7dded4dd]
  40452b:	aad    0x8d
  40452d:	push   0xffffffe3
  40452f:	add    al,0x92
  404531:	(bad)  
  404532:	int3   
  404533:	pop    es
  404534:	xchg   esi,eax
  404535:	jl     0x4044e8
  404537:	mov    eax,0x6a783453
  40453c:	push   edi
  40453d:	mov    dh,0x42
  40453f:	dec    eax
  404540:	stos   BYTE PTR es:[edi],al
  404541:	rcr    DWORD PTR ds:0xdc9552ff,0x90
  404548:	mov    esi,0x9d0b44c3
  40454d:	das    
  40454e:	fwait
  40454f:	sbb    al,0x8a
  404551:	aas    
  404552:	repnz adc eax,0xde058a68
  404558:	mov    cl,0xc9
  40455a:	cmp    al,ah
  40455c:	shr    bl,cl
  40455e:	xchg   edx,eax
  40455f:	dec    edi
  404560:	dec    ecx
  404561:	xor    DWORD PTR [ecx],eax
  404563:	scas   eax,DWORD PTR es:[edi]
  404564:	dec    ecx
  404565:	xor    ch,BYTE PTR [ebx-0x32acf00c]
  40456b:	pop    ecx
  40456c:	imul   esi,DWORD PTR [eax],0x172616bc
  404572:	or     esi,ebp
  404574:	dec    edi
  404575:	shr    DWORD PTR [ebx+0x1a1b8c50],1
  40457b:	daa    
  40457c:	and    eax,0x424d2a9e
  404581:	mov    esp,0x70c812dc
  404586:	cmp    BYTE PTR [ecx-0x59151d0c],cl
  40458c:	xor    ecx,DWORD PTR [edx-0x57ff5521]
  404592:	shr    DWORD PTR [esi-0xd92e1b2],cl
  404598:	in     eax,dx
  404599:	outs   dx,BYTE PTR ds:[esi]
  40459a:	add    BYTE PTR [ecx+0x18646350],dh
  4045a0:	popa   
  4045a1:	add    al,0x31
  4045a3:	mov    dh,0x2a
  4045a5:	or     BYTE PTR [ecx],al
  4045a7:	(bad)  [edx]
  4045a9:	in     eax,dx
  4045aa:	rcr    BYTE PTR [edx+0x47],0x2a
  4045ae:	(bad)  
  4045af:	scas   al,BYTE PTR es:[edi]
  4045b0:	xchg   BYTE PTR [eax+ebp*1],cl
  4045b3:	test   eax,0x2ba0b060
  4045b8:	jl     0x404587
  4045ba:	daa    
  4045bb:	iret   
  4045bc:	and    al,0x9c
  4045be:	xor    al,0xfe
  4045c0:	sahf   
  4045c1:	rol    al,1
  4045c3:	fcomp  st(7)
  4045c5:	adc    DWORD PTR cs:[edi-0x1e8ae00a],esi
  4045cc:	xlat   BYTE PTR ds:[ebx]
  4045ce:	popf   
  4045cf:	or     DWORD PTR [eax+0x4c5f3ecc],0x4
  4045d6:	and    eax,0x423530fe
  4045db:	pop    ds
  4045dc:	ins    DWORD PTR es:[edi],dx
  4045dd:	fisubr WORD PTR [esi]
  4045df:	bound  ecx,QWORD PTR [edx-0x3961d645]
  4045e5:	jl     0x4045c7
  4045e7:	xlat   BYTE PTR ds:[ebx]
  4045e8:	fstp   TBYTE PTR [edi]
  4045ea:	xchg   edx,eax
  4045eb:	ja     0x4045ca
  4045ed:	jmp    0xd929:0xe3b334e6
  4045f4:	cmp    bl,ch
  4045f6:	mov    al,ds:0x50f777a9
  4045fb:	and    eax,0xfdcc1b39
  404600:	jg     0x4045a0
  404602:	mov    dh,0x84
  404604:	nop
  404605:	repz push ebp
  404607:	imul   edi,DWORD PTR [esi+ebp*2-0x1e],0x21
  40460c:	jmp    0x404648
  40460e:	add    BYTE PTR [edi-0x48f97a7c],0x61
  404615:	nop
  404616:	pop    ss
  404617:	mov    dl,0xe
  404619:	(bad)  
  40461a:	cld    
  40461b:	out    0x49,al
  40461d:	jbe    0x40468d
  40461f:	mov    esi,0x796ad04c
  404624:	inc    ebx
  404625:	(bad)  
  404627:	out    dx,al
  404628:	cli    
  404629:	call   0x6f93:0xa3e1b511
  404630:	jg     0x404615
  404632:	lahf   
  404633:	push   ss
  404634:	xor    BYTE PTR [ecx],al
  404636:	aaa    
  404637:	mov    esi,0xb34cd2bb
  40463c:	cmp    al,0xcf
  40463e:	and    ebp,ebp
  404640:	rcr    DWORD PTR [edi],cl
  404642:	adc    BYTE PTR [ebx+ebx*2],cl
  404645:	sub    al,0x60
  404647:	mov    bl,BYTE PTR [ebp+0x3ee32c3f]
  40464d:	push   cs
  40464e:	jmp    0x4045e6
  404650:	or     DWORD PTR [esi+0x5c316bff],ebx
  404656:	outs   dx,BYTE PTR ds:[esi]
  404657:	inc    edx
  404658:	or     al,0xb
  40465a:	aam    0x20
  40465c:	jp     0x4045e1
  40465e:	mov    ds:0x25d331c8,eax
  404663:	iret   
  404664:	pop    edi
  404665:	sub    BYTE PTR [esi+0x3eda0a9c],0xee
  40466c:	xchg   esp,eax
  40466d:	retf   
  40466e:	(bad)  
  40466f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404670:	mov    ebx,0x6c0b84c2
  404675:	mov    DWORD PTR [edi-0x1c],0x89757262
  40467c:	int3   
  40467d:	fmul   QWORD PTR [eax+0x30]
  404680:	pusha  
  404681:	inc    edx
  404682:	int    0xac
  404684:	lea    edi,[eax]
  404686:	sti    
  404687:	sbb    eax,0x4a1fcfb9
  40468c:	sub    BYTE PTR [bx-0x4c43],dl
  404691:	mov    dl,BYTE PTR [eax+0x9]
  404694:	adc    cl,al
  404696:	lods   eax,DWORD PTR ds:[esi]
  404697:	and    al,0x2e
  404699:	shl    DWORD PTR [esi],1
  40469b:	test   eax,0x9980b5d4
  4046a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046a1:	pop    esp
  4046a2:	xchg   ebx,eax
  4046a3:	mov    esi,0xd763134c
  4046a8:	aad    0x31
  4046aa:	outs   dx,BYTE PTR ds:[esi]
  4046ab:	jge    0x404717
  4046ad:	neg    DWORD PTR [edx+0x1eddbcc]
  4046b3:	in     eax,0xf4
  4046b5:	cmovle esi,DWORD PTR ds:0x9a6d401d
  4046bc:	jnp    0x4046ca
  4046be:	inc    esp
  4046bf:	out    dx,eax
  4046c0:	push   0x3ad94955
  4046c5:	xor    DWORD PTR [esi],ebx
  4046c7:	outs   dx,DWORD PTR ds:[esi]
  4046c8:	int    0x96
  4046ca:	sub    edx,ebp
  4046cc:	data16 fstp DWORD PTR [ebp+0x39]
  4046d0:	cmp    al,0xbc
  4046d2:	stos   BYTE PTR es:[edi],al
  4046d3:	fild   QWORD PTR [ecx]
  4046d5:	inc    edx
  4046d6:	cmp    edx,DWORD PTR [eax+0x3a]
  4046d9:	and    esi,DWORD PTR [esi+0x10]
  4046dc:	push   ss
  4046dd:	jle    0x4046fd
  4046df:	push   eax
  4046e0:	pushf  
  4046e1:	add    al,0xc1
  4046e3:	pop    esi
  4046e4:	push   es
  4046e5:	push   edx
  4046e6:	out    0x30,eax
  4046e8:	sub    al,0xd2
  4046ea:	arpl   sp,si
  4046ec:	fwait
  4046ed:	jp     0x4046f1
  4046ef:	or     al,0x27
  4046f1:	dec    ecx
  4046f2:	sub    ah,0x59
  4046f5:	jge    0x404727
  4046f7:	sbb    dl,bl
  4046f9:	aas    
  4046fa:	pop    ecx
  4046fb:	lods   eax,DWORD PTR ds:[esi]
  4046fc:	lods   al,BYTE PTR ds:[esi]
  4046fd:	mov    ds:0x41ddd6e7,eax
  404702:	inc    edi
  404703:	in     eax,dx
  404704:	in     eax,0xbf
  404706:	scas   al,BYTE PTR es:[edi]
  404707:	(bad)  
  404708:	cmc    
  404709:	mov    eax,ds:0xccaa20db
  40470e:	shr    BYTE PTR [edi+0x7e7babef],0xf7
  404715:	imul   ebx,DWORD PTR [esi],0x9ce98a38
  40471b:	push   0xffffffd2
  40471d:	mov    bh,0x12
  40471f:	pushf  
  404720:	retf   0x880e
  404723:	loopne 0x4046e5
  404725:	popa   
  404726:	dec    edx
  404727:	mov    bl,BYTE PTR [eax+edx*8+0x54]
  40472b:	stos   BYTE PTR es:[edi],al
  40472c:	mov    al,BYTE PTR [esi+0x25]
  40472f:	hlt    
  404730:	or     ch,BYTE PTR [edi]
  404732:	lds    ebx,FWORD PTR es:[bx+di-0x1e]
  404737:	fbld   TBYTE PTR [ebp+0x34fac8f1]
  40473d:	inc    eax
  40473e:	daa    
  40473f:	call   0xe883:0x7011245
  404746:	les    dx,DWORD PTR [edx]
  404749:	(bad)  
  40474a:	addr16 or eax,0x37d5b625
  404750:	fwait
  404751:	dec    esi
  404752:	push   es
  404753:	outs   dx,BYTE PTR ds:[esi]
  404754:	lea    edx,[edi-0x6dd94126]
  40475a:	or     al,0xa6
  40475c:	jle    0x4046ec
  40475e:	jp     0x404712
  404760:	or     eax,0x2a241143
  404765:	imul   ebp,DWORD PTR [eax],0xb5171a9e
  40476b:	jl     0x4047e1
  40476d:	out    0xca,eax
  40476f:	dec    ebp
  404770:	(bad)  
  404771:	xchg   esp,eax
  404772:	jmp    0x45282072
  404777:	push   ecx
  404778:	xor    eax,0x40e71697
  40477d:	dec    edx
  40477e:	mov    eax,ds:0xcf01bad9
  404783:	mov    DWORD PTR [eax],ebp
  404785:	push   ds
  404786:	mov    al,ds:0xf09640b0
  40478b:	jecxz  0x40472b
  40478d:	jb     0x4047d5
  40478f:	mov    BYTE PTR [edx],bh
  404791:	outs   dx,BYTE PTR ds:[esi]
  404792:	js     0x40480e
  404794:	sti    
  404795:	pcmpeqb xmm3,xmm6
  404799:	push   eax
  40479a:	pusha  
  40479b:	or     BYTE PTR ds:0x592d8fdd,bh
  4047a1:	mov    dl,0x4f
  4047a3:	xor    BYTE PTR [eax+0x6f],dh
  4047a6:	(bad)  
  4047a7:	mov    ebp,0x1a701128
  4047ac:	push   cs
  4047ad:	out    dx,eax
  4047ae:	sub    BYTE PTR ds:0xee2410bf,bl
  4047b4:	les    edi,FWORD PTR [esi]
  4047b6:	inc    edx
  4047b7:	call   0x4af9:0x69f3d914
  4047be:	(bad)  
  4047bf:	or     DWORD PTR [ebx+0x14ffcfba],ecx
  4047c5:	stc    
  4047c6:	std    
  4047c7:	aad    0xa
  4047c9:	or     edx,DWORD PTR [ebp+0x53]
  4047cc:	xchg   ebp,eax
  4047cd:	add    al,0xae
  4047cf:	or     al,bh
  4047d1:	icebp  
  4047d2:	adc    eax,0x5d63f03b
  4047d7:	xchg   edi,eax
  4047d8:	(bad)  
  4047d9:	mov    esi,0x967afa17
  4047de:	jmp    0x40479b
  4047e0:	cwde   
  4047e1:	mov    edi,0xaaefee23
  4047e6:	int3   
  4047e7:	mov    ebp,0x2aba9d62
  4047ec:	push   edx
  4047ed:	jmp    0x404801
  4047ef:	pop    edx
  4047f0:	cmc    
  4047f1:	and    al,0xd6
  4047f3:	mov    eax,0xbb384491
  4047f8:	mov    eax,ds:0x1b01de9
  4047fd:	or     BYTE PTR [eax+edx*4-0x69],bl
  404801:	dec    esi
  404802:	cwde   
  404803:	mov    bh,0x6e
  404805:	adc    ebx,DWORD PTR [edi-0x68]
  404808:	iret   
  404809:	loopne 0x4047bb
  40480b:	fcomi  st,st(3)
  40480d:	fstp   TBYTE PTR [ecx-0x53b9d976]
  404813:	lahf   
  404814:	aam    0x60
  404816:	mov    bh,dl
  404818:	out    dx,eax
  404819:	fisubr DWORD PTR [esi-0x2e]
  40481c:	test   al,0x2b
  40481e:	and    ecx,eax
  404820:	test   al,0x38
  404822:	and    al,0xcf
  404824:	mov    BYTE PTR [edi+0x405a5008],bl
  40482a:	repz aas 
  40482c:	mov    eax,ds:0xbd590b96
  404831:	jmp    0xddee:0x52609800
  404838:	and    al,0xa0
  40483a:	in     eax,dx
  40483b:	mov    bh,0x3
  40483d:	push   ebp
  40483e:	mov    ds:0x972fab06,al
  404843:	rep lods eax,DWORD PTR ss:[esi]
  404846:	jge    0x404875
  404848:	mov    ah,0x7e
  40484a:	jmp    0x1168942e
  40484f:	cld    
  404850:	jl     0x404868
  404852:	cmp    edx,eax
  404854:	jns    0x404860
  404856:	push   ds
  404857:	cmp    esi,ecx
  404859:	jns    0x40484e
  40485b:	jns    0x40487b
  40485d:	je     0x40485e
  40485f:	hlt    
  404860:	imul   edx,DWORD PTR [ebx+0x6c],0x1944dd8c
  404867:	mov    WORD PTR [ebx+0x86e44],?
  40486d:	push   cs
  40486e:	cmp    ch,ah
  404870:	rcl    DWORD PTR [ecx-0x70],0x81
  404874:	data16 or al,BYTE PTR [eax+0x2c5d31ac]
  40487b:	lods   al,BYTE PTR ds:[esi]
  40487c:	add    BYTE PTR [esi+0x38d2ee2d],dl
  404882:	gs add BYTE PTR es:[edx+0x1ae781ce],ah
  40488a:	or     ecx,DWORD PTR [edi]
  40488c:	xor    DWORD PTR [edi],esp
  40488e:	das    
  40488f:	or     BYTE PTR [ecx+0x3],ah
  404892:	pop    es
  404893:	dec    eax
  404894:	test   BYTE PTR [eax],dl
  404896:	(bad)  
  404897:	iret   
  404898:	in     eax,0x83
  40489a:	call   0xeaa27197
  40489f:	mov    ah,0x9d
  4048a1:	sub    eax,0xd7bff3da
  4048a6:	mov    bl,0x22
  4048a8:	push   edx
  4048a9:	and    eax,0xb6ece7d6
  4048ae:	ss mov bl,0x2
  4048b1:	dec    eax
  4048b2:	sahf   
  4048b3:	sub    ch,BYTE PTR [edi]
  4048b5:	mov    esp,0xf82a06a9
  4048ba:	and    BYTE PTR [ecx],ch
  4048bc:	js     0x4048ed
  4048be:	loop   0x4048d7
  4048c0:	loop   0x404849
  4048c2:	lea    edi,[esi+esi*4]
  4048c5:	ins    BYTE PTR es:[edi],dx
  4048c6:	add    DWORD PTR [ebx+eiz*1],edx
  4048c9:	sub    cl,al
  4048cb:	pop    eax
  4048cc:	mov    esp,0x9fad5f6f
  4048d1:	mov    esi,0xd26b1364
  4048d6:	test   BYTE PTR [edi+ebp*1-0x714e052],dh
  4048dd:	xor    BYTE PTR [ebx-0x5f],ch
  4048e0:	in     al,dx
  4048e1:	cmp    al,0x4c
  4048e3:	popa   
  4048e4:	and    cl,bl
  4048e6:	sbb    DWORD PTR [esi-0x3e],ebp
  4048e9:	mov    cl,0xa8
  4048eb:	enter  0x9861,0xd5
  4048ef:	adc    al,0xa2
  4048f1:	cwde   
  4048f2:	fsub   QWORD PTR [ecx-0x51]
  4048f5:	loopne 0x4048c8
  4048f7:	fldcw  WORD PTR [edx-0x5fe5ae99]
  4048fd:	inc    edx
  4048fe:	xchg   ecx,eax
  4048ff:	dec    ebx
  404900:	sub    BYTE PTR ds:0x51a80f,dl
  404906:	xchg   edi,eax
  404907:	jp     0x4048b4
  404909:	lock cmp ecx,DWORD PTR [ecx-0x5c4d1db4]
  404910:	and    al,0x1
  404912:	aaa    
  404913:	sub    al,0x88
  404915:	dec    ebx
  404916:	adc    ebx,DWORD PTR [esi]
  404918:	xor    BYTE PTR [edx],bh
  40491a:	inc    ebx
  40491b:	mov    eax,ds:0xa74ff61d
  404920:	inc    esi
  404921:	lock inc ecx
  404923:	outs   dx,BYTE PTR ds:[esi]
  404924:	loopne 0x404946
  404926:	cmp    edi,eax
  404928:	inc    esi
  404929:	mov    eax,0x72d90813
  40492e:	sbb    eax,0x79cd71e6
  404933:	mov    DWORD PTR [edi],edx
  404935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404936:	outs   dx,DWORD PTR ds:[esi]
  404937:	push   ss
  404938:	or     al,0x81
  40493a:	stc    
  40493b:	aad    0x9b
  40493d:	(bad)  
  40493e:	and    dl,bh
  404940:	rcr    DWORD PTR [eax+edx*1+0x3f41b2f3],cl
  404947:	mov    ds:0xfa1ec080,eax
  40494c:	mov    eax,DWORD PTR [ebp-0x1388ee80]
  404952:	imul   esi,DWORD PTR [edx],0x7d
  404955:	shl    DWORD PTR [ecx],1
  404957:	push   cs
  404958:	dec    esp
  404959:	mul    BYTE PTR [edx-0x1]
  40495c:	mov    dl,0x87
  40495e:	adc    eax,0xde6d8099
  404963:	int    0xc
  404965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404966:	cdq    
  404967:	jle    0x404909
  404969:	sar    BYTE PTR [esi],cl
  40496b:	pop    ss
  40496c:	adc    eax,0x2bcde8ce
  404971:	cli    
  404972:	cli    
  404973:	adc    ebx,ebx
  404975:	pop    es
  404976:	cmp    al,0x5b
  404978:	loopne 0x404928
  40497a:	xchg   esp,eax
  40497b:	lds    esi,FWORD PTR [edx+edx*8-0x24401986]
  404982:	js     0x40490c
  404984:	inc    ecx
  404985:	and    al,0xe
  404987:	xor    ecx,edi
  404989:	cmp    ch,BYTE PTR [edx-0x3aa3f4e3]
  40498f:	sbb    cl,dh
  404991:	mov    edi,0x86b05e88
  404996:	pop    ebx
  404997:	iret   
  404998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404999:	or     ch,dh
  40499b:	and    al,0x98
  40499d:	ret    
  40499e:	sbb    DWORD PTR [edx+0x157f7eaf],ebp
  4049a4:	lods   eax,DWORD PTR ds:[esi]
  4049a5:	lock jnp 0x4049e7
  4049a8:	lock dec ebx
  4049aa:	jbe    0x4049a0
  4049ac:	pop    eax
  4049ad:	(bad)  
  4049ae:	fstp   TBYTE PTR [ecx+0x6c]
  4049b1:	push   esi
  4049b2:	fistp  DWORD PTR ds:0xd972f4e2
  4049b8:	xor    eax,0x1a655930
  4049bd:	lea    edx,ds:0x82c6862d
  4049c3:	and    esp,DWORD PTR [ebp-0x3c]
  4049c6:	adc    edi,DWORD PTR [edx+0x3ba148cb]
  4049cc:	push   0xac34d1ea
  4049d1:	xchg   al,ch
  4049d3:	sub    al,BYTE PTR [ebx-0x5f]
  4049d6:	adc    BYTE PTR [ebp+0x62],bh
  4049d9:	ds stos DWORD PTR es:[edi],eax
  4049db:	xchg   edx,eax
  4049dc:	retf   0x7d7d
  4049df:	ss and al,0x43
  4049e2:	push   0x60
  4049e4:	daa    
  4049e5:	push   DWORD PTR [edi+0x23]
  4049e8:	xor    bl,BYTE PTR [ebp+0x5]
  4049eb:	inc    ebx
  4049ec:	inc    ecx
  4049ed:	fld    DWORD PTR [edx]
  4049ef:	retw   
  4049f1:	dec    eax
  4049f2:	pushf  
  4049f3:	xor    BYTE PTR [ebx-0x60],dh
  4049f6:	inc    esi
  4049f7:	mov    al,0xcb
  4049f9:	jge    0x4049da
  4049fb:	(bad)  
  4049fc:	in     eax,0xe5
  4049fe:	xchg   edi,eax
  4049ff:	shr    BYTE PTR [ebp+0x45],cl
  404a02:	jle    0x404a45
  404a04:	push   ebx
  404a05:	add    ebp,esp
  404a07:	imul   edx,DWORD PTR [esi+0x67],0x3b038ec
  404a0e:	mov    bl,0x34
  404a10:	sub    esp,DWORD PTR [eax+ebx*8]
  404a13:	xlat   BYTE PTR ds:[ebx]
  404a14:	out    0x90,al
  404a16:	dec    edx
  404a17:	jae    0x404a20
  404a19:	sbb    BYTE PTR [esi+0x632a7367],cl
  404a1f:	(bad)  ds:0xda3aff95
  404a25:	leave  
  404a26:	je     0x4049d7
  404a28:	enter  0x610c,0xb4
  404a2c:	xchg   edi,eax
  404a2d:	(bad)  
  404a2f:	push   ecx
  404a30:	mov    ecx,0xce722a1
  404a35:	dec    eax
  404a36:	jmp    0x4d6c92aa
  404a3b:	xor    al,0x17
  404a3d:	pushf  
  404a3e:	or     al,0x1a
  404a40:	inc    ebp
  404a41:	aad    0x60
  404a43:	loopne 0x404a39
  404a45:	xchg   ebp,eax
  404a46:	and    dh,BYTE PTR [edi+eiz*2+0x69ff60db]
  404a4d:	adc    BYTE PTR [ebp-0x672b443a],ch
  404a53:	add    ch,BYTE PTR [ebp-0xa]
  404a56:	loop   0x404ac0
  404a58:	pop    es
  404a59:	fnstenv [ebx]
  404a5b:	jnp    0x95bf758d
  404a61:	test   edx,edx
  404a63:	pop    eax
  404a64:	sbb    al,0x2e
  404a66:	xlat   BYTE PTR ds:[ebx]
  404a67:	jns    0x404a1e
  404a69:	bt     DWORD PTR [ebx],edi
  404a6c:	ss mov bh,0x2c
  404a6f:	mov    al,ds:0x23bb1973
  404a74:	jmp    0xb6a62bd6
  404a79:	jmp    0x404ad5
  404a7b:	pop    ebp
  404a7c:	push   ds
  404a7d:	out    0x6d,eax
  404a7f:	cmp    dh,BYTE PTR [edx-0x7e0247b7]
  404a85:	scas   al,BYTE PTR es:[edi]
  404a86:	dec    DWORD PTR [ebp+0x7f]
  404a89:	sub    eax,0x3ac2abfa
  404a8e:	or     bh,BYTE PTR [eax]
  404a90:	lock xlat BYTE PTR ds:[ebx]
  404a92:	test   DWORD PTR [edx+0x7c],edx
  404a95:	lods   eax,DWORD PTR ds:[esi]
  404a96:	jns    0x404ae5
  404a98:	pushf  
  404a99:	jne    0x404a67
  404a9b:	fcmovu st,st(6)
  404a9d:	sub    edx,DWORD PTR [edx]
  404a9f:	out    dx,al
  404aa0:	call   0x650f:0xdc3181f7
  404aa7:	dec    ebp
  404aa8:	into   
  404aa9:	repz sar DWORD PTR [edx+0x60497673],0xb6
  404ab1:	jle    0x404a80
  404ab3:	push   esi
  404ab4:	sahf   
  404ab5:	call   0x4cdef84e
  404aba:	ins    DWORD PTR es:[edi],dx
  404abb:	push   esp
  404abc:	push   ebp
  404abd:	add    edx,DWORD PTR [edi+0x12]
  404ac0:	add    BYTE PTR [ecx+ecx*1-0x5a],dh
  404ac4:	into   
  404ac5:	test   DWORD PTR [edx],ebp
  404ac7:	stos   DWORD PTR es:[edi],eax
  404ac8:	jmp    0xec96cd66
  404acd:	(bad)  
  404ace:	adc    eax,0xcb15a5b7
  404ad3:	loope  0x404b2c
  404ad5:	push   cs
  404ad6:	pop    esp
  404ad7:	mov    al,ds:0x5e965a25
  404adc:	in     eax,dx
  404add:	xchg   edi,eax
  404ade:	xor    BYTE PTR [ecx+ebp*4],ah
  404ae1:	dec    esi
  404ae2:	inc    edi
  404ae3:	fidivr WORD PTR ds:0xddbe270d
  404ae9:	mov    cl,0x19
  404aeb:	fucomip st,st(4)
  404aed:	mov    bl,0x99
  404aef:	(bad)
  404af3:	scas   al,BYTE PTR es:[edi]
  404af4:	rcl    BYTE PTR [ebp-0x35dedeff],0x86
  404afb:	je     0x404aab
  404afd:	cdq    
  404afe:	pushf  
  404aff:	scas   al,BYTE PTR es:[edi]
  404b00:	bound  ecx,QWORD PTR [ebp+0x7e183207]
  404b06:	pop    eax
  404b07:	adc    ah,BYTE PTR [eax]
  404b09:	dec    edi
  404b0a:	inc    esp
  404b0b:	mov    esp,0xfa63e060
  404b10:	stos   DWORD PTR es:[edi],eax
  404b11:	mov    al,ds:0xbfd5f6c
  404b16:	out    0x65,eax
  404b18:	jecxz  0x404b5d
  404b1a:	lock xchg esp,eax
  404b1c:	or     eax,0x73b049e0
  404b21:	and    eax,DWORD PTR [ecx]
  404b23:	outs   dx,BYTE PTR ds:[esi]
  404b24:	jae    0x404ad3
  404b26:	pushf  
  404b27:	(bad)  
  404b28:	in     al,dx
  404b29:	xchg   esi,eax
  404b2a:	xor    al,0x19
  404b2c:	push   ecx
  404b2d:	lds    ebx,FWORD PTR [ecx]
  404b2f:	mov    ds:0xe2fef2a6,al
  404b34:	mov    cl,0x18
  404b36:	lods   al,BYTE PTR ds:[esi]
  404b37:	dec    edx
  404b38:	js     0x404b1d
  404b3a:	fnstcw WORD PTR [eax-0x3d]
  404b3d:	sar    ch,cl
  404b3f:	or     DWORD PTR [ecx+0x6],edx
  404b42:	jo     0x404b18
  404b44:	scas   eax,DWORD PTR es:[edi]
  404b45:	mov    ecx,0xe340c2f0
  404b4a:	cmc    
  404b4b:	loope  0x404afa
  404b4d:	jae    0x404acf
  404b4f:	sbb    eax,0x4bb114e4
  404b54:	dec    eax
  404b55:	loopne 0x404b56
  404b57:	cmp    BYTE PTR [eax+0x37],dl
  404b5a:	push   ds
  404b5b:	mov    edi,eax
  404b5d:	mov    dh,0xae
  404b5f:	inc    edx
  404b60:	pop    ebp
  404b61:	or     eax,0x62379d3a
  404b66:	cmp    ebx,DWORD PTR [esi-0x74]
  404b69:	outs   dx,DWORD PTR ds:[esi]
  404b6a:	mov    ds:0x203b716d,eax
  404b6f:	sti    
  404b70:	add    al,BYTE PTR [esi+0x46]
  404b73:	jo     0x404b6b
  404b75:	(bad)  
  404b76:	xchg   esi,eax
  404b77:	mov    ds:0x5707b9a6,al
  404b7c:	leave  
  404b7d:	adc    eax,0x18769c2b
  404b82:	lods   al,BYTE PTR ds:[esi]
  404b83:	lahf   
  404b84:	fstp   st(6)
  404b86:	in     al,dx
  404b87:	mov    dl,0xec
  404b89:	lahf   
  404b8a:	adc    DWORD PTR [ebx],0x5f
  404b8d:	cmp    bh,al
  404b8f:	(bad)  
  404b91:	jo     0x404b80
  404b93:	sub    DWORD PTR [eax],esp
  404b95:	cld    
  404b96:	push   edx
  404b97:	imul   ecx,DWORD PTR [ecx-0xa],0x26f32227
  404b9e:	sub    ecx,DWORD PTR [eax+0x3ee39c8d]
  404ba4:	mov    dl,0x21
  404ba6:	outs   dx,DWORD PTR ds:[esi]
  404ba7:	push   edi
  404ba8:	sub    dl,ch
  404baa:	iret   
  404bab:	mov    ebx,0xe10fa389
  404bb0:	ret    
  404bb1:	cmc    
  404bb2:	fdivr  DWORD PTR [edi-0x7f5b370f]
  404bb8:	push   0xffffff9f
  404bba:	fs xor eax,0xfc0ad18
  404bc0:	and    eax,0xc44ac88b
  404bc5:	icebp  
  404bc6:	sub    al,0xe
  404bc8:	outs   dx,DWORD PTR ds:[esi]
  404bc9:	and    BYTE PTR [esi-0x21e5f9a0],dl
  404bcf:	cmp    dh,0xe9
  404bd2:	mov    dh,0x14
  404bd4:	in     al,dx
  404bd5:	or     eax,0xdae05867
  404bda:	inc    esp
  404bdb:	push   0xe88f08a0
  404be0:	xor    DWORD PTR [edx-0x27809100],ebp
  404be6:	leave  
  404be7:	jno    0x404c41
  404be9:	mov    ecx,DWORD PTR [ecx+0x4c]
  404bec:	mov    dh,0x3a
  404bee:	jns    0x404b83
  404bf0:	cmp    eax,0xb6b959a2
  404bf5:	jge    0x404bee
  404bf7:	sbb    DWORD PTR [edi+0x19700ffd],eax
  404bfd:	lds    eax,FWORD PTR [esi+ebp*1-0x1d3d22c8]
  404c04:	test   BYTE PTR [edi],0x8b
  404c07:	mov    ch,BYTE PTR [eax]
  404c09:	int    0x59
  404c0b:	mov    esi,0x491b2d62
  404c10:	aad    0x78
  404c12:	ins    BYTE PTR es:[edi],dx
  404c13:	pop    esi
  404c14:	jne    0x404c4c
  404c16:	sub    eax,0x2f6c38bc
  404c1b:	(bad)  
  404c1c:	std    
  404c1d:	mov    BYTE PTR [edi],ch
  404c1f:	pusha  
  404c20:	and    ch,BYTE PTR [ebx-0x10947729]
  404c26:	inc    esp
  404c27:	mov    bh,cl
  404c29:	out    dx,al
  404c2a:	fldcw  WORD PTR ds:0x15763ee1
  404c30:	mov    ah,0x39
  404c32:	add    ah,bl
  404c34:	fsubr  st,st(4)
  404c36:	jns    0x404bec
  404c38:	mov    BYTE PTR [ecx+0x40],al
  404c3b:	scas   eax,DWORD PTR es:[edi]
  404c3c:	pop    ebp
  404c3d:	mov    bl,BYTE PTR [edi-0x28]
  404c40:	inc    eax
  404c41:	imul   ebp,DWORD PTR [ebp+ebp*4+0x4b],0xffffffb4
  404c46:	cli    
  404c47:	not    edx
  404c49:	lods   al,BYTE PTR ds:[esi]
  404c4a:	jb     0x404c18
  404c4c:	sub    eax,0xb8789cb
  404c51:	and    eax,0x22d54f8
  404c56:	sbb    eax,0x75ec8085
  404c5b:	sbb    eax,0xa08ee92b
  404c60:	into   
  404c61:	add    dl,dh
  404c63:	push   edi
  404c64:	inc    esi
  404c65:	sbb    eax,0x7f4f5a02
  404c6a:	sub    ecx,edi
  404c6c:	adc    DWORD PTR [ebx+edx*8],edi
  404c6f:	jb     0x404cda
  404c71:	ret    
  404c72:	fldenv [ebx+0x36]
  404c75:	fbld   TBYTE PTR [edx]
  404c77:	adc    DWORD PTR [edx],0x29
  404c7a:	ins    DWORD PTR es:[edi],dx
  404c7b:	mov    ebx,0xd2b256e5
  404c80:	xchg   ebp,eax
  404c81:	ret    
  404c82:	int3   
  404c83:	retf   0xa74f
  404c86:	lods   eax,DWORD PTR ds:[esi]
  404c87:	pminsw mm3,QWORD PTR [ecx]
  404c8a:	fwait
  404c8b:	outs   dx,DWORD PTR ds:[esi]
  404c8c:	out    dx,eax
  404c8d:	cmp    dl,BYTE PTR [ebp+0x72]
  404c90:	xchg   edx,eax
  404c91:	xor    eax,0xb05a1880
  404c96:	out    dx,eax
  404c97:	call   0xb3dc:0xf9a1072b
  404c9e:	xchg   esp,edi
  404ca0:	add    edx,eax
  404ca2:	jnp    0x404cc6
  404ca4:	cld    
  404ca5:	sbb    eax,esp
  404ca7:	dec    ebx
  404ca8:	xchg   ecx,eax
  404ca9:	fwait
  404caa:	jge    0x404c92
  404cac:	test   BYTE PTR [edi],al
  404cae:	je     0x404c4c
  404cb0:	mov    ss,WORD PTR [ebp-0x2a]
  404cb3:	sti    
  404cb4:	and    esp,ecx
  404cb6:	(bad)  
  404cb7:	or     eax,0x4e99f62c
  404cbc:	dec    ebp
  404cbd:	push   eax
  404cbe:	fdivp  st(3),st
  404cc0:	rol    BYTE PTR [edi],1
  404cc2:	sub    DWORD PTR [edx+0x63b42a11],ecx
  404cc8:	and    BYTE PTR [ecx-0x771e1955],0xc8
  404ccf:	arpl   WORD PTR [ebx-0x6257abfc],dx
  404cd5:	adc    ch,al
  404cd7:	dec    ebx
  404cd8:	mul    BYTE PTR [eax]
  404cda:	js     0x404cc1
  404cdc:	mov    bh,0xb6
  404cde:	jge    0x404d0a
  404ce0:	sbb    DWORD PTR [edi+0x13],ecx
  404ce3:	dec    ebx
  404ce4:	and    dh,BYTE PTR [ebx+0x28]
  404ce7:	jge    0x404d65
  404ce9:	cmp    BYTE PTR [esi-0x1126f369],cl
  404cef:	xchg   ebx,eax
  404cf0:	dec    esi
  404cf1:	sahf   
  404cf2:	enter  0x2b7b,0xfd
  404cf6:	dec    eax
  404cf7:	into   
  404cf8:	jbe    0x404d40
  404cfa:	ret    
  404cfb:	lock arpl WORD PTR [ebp-0x2f],si
  404cff:	sub    bh,0x2
  404d02:	jnp    0x404d30
  404d04:	enter  0x2b30,0xf9
  404d08:	push   ebp
  404d09:	inc    esi
  404d0a:	dec    esi
  404d0b:	push   DWORD PTR [ebx+0x1bb6d45d]
  404d11:	lock xchg ebx,eax
  404d13:	jp     0x404cab
  404d15:	xchg   esi,eax
  404d16:	call   0x9089:0x768a9585
  404d1d:	call   0x613:0xae430127
  404d24:	push   esp
  404d25:	mov    ch,bl
  404d27:	push   0x4d
  404d29:	sar    BYTE PTR [esi+edi*1],1
  404d2c:	adc    ch,BYTE PTR [eax+esi*8]
  404d2f:	ins    DWORD PTR es:[edi],dx
  404d30:	dec    edx
  404d31:	adc    al,0xb0
  404d33:	sbb    al,0x14
  404d35:	xchg   ebx,eax
  404d36:	mov    edx,0x8036e95c
  404d3b:	push   edi
  404d3c:	fcomp  QWORD PTR [edx-0x1cef1d18]
  404d42:	push   ds
  404d43:	inc    ebx
  404d44:	sub    DWORD PTR [esi-0x71],ebp
  404d47:	or     eax,0xea799a60
  404d4c:	xchg   esi,eax
  404d4d:	cmp    dl,BYTE PTR [edi+0x1]
  404d50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d51:	imul   esp,DWORD PTR [esi-0x6],0x6143be7e
  404d58:	retf   0x7c84
  404d5b:	jg     0x404d3c
  404d5d:	dec    eax
  404d5e:	ja     0x404d5c
  404d60:	retf   0xcac7
  404d63:	in     al,0x62
  404d65:	addr16 sub ebp,esi
  404d68:	pop    ds
  404d69:	int    0xe5
  404d6b:	pop    esi
  404d6c:	mov    db0,ebx
  404d6f:	and    eax,0x490eb7fa
  404d74:	add    esi,DWORD PTR [ecx]
  404d76:	gs imul ebx
  404d79:	fs repnz dec BYTE PTR gs:[esi-0x6300e544]
  404d82:	popa   
  404d83:	imul   ebx,edx,0xffffff98
  404d86:	push   edx
  404d87:	xchg   ebx,eax
  404d88:	arpl   WORD PTR [ebx+0x13],bp
  404d8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d8c:	cmp    edx,DWORD PTR [esi]
  404d8e:	and    edi,DWORD PTR [ebx]
  404d90:	stos   DWORD PTR es:[edi],eax
  404d91:	dec    ebp
  404d92:	dec    eax
  404d93:	es push edi
  404d95:	dec    edx
  404d96:	fadd   DWORD PTR [esi-0x61]
  404d99:	pushf  
  404d9a:	add    BYTE PTR ds:0x2ad94289,ah
  404da0:	fcomp  st(2)
  404da2:	sbb    DWORD PTR [eax-0x7d7a0964],0x70e0918e
  404dac:	cmp    eax,0xa25e9413
  404db1:	lds    edx,FWORD PTR [ebx+0x4]
  404db4:	cmp    DWORD PTR [edx+0x397277c1],esi
  404dba:	sti    
  404dbb:	jae    0x404dbd
  404dbd:	outs   dx,DWORD PTR ds:[esi]
  404dbe:	and    BYTE PTR [esi],ah
  404dc0:	mov    fs,ecx
  404dc2:	sbb    eax,0x7b74b775
  404dc7:	cmp    al,bh
  404dc9:	sub    bh,al
  404dcb:	mov    DWORD PTR [ebx+0x3b],ebx
  404dce:	xor    eax,0x55722f81
  404dd3:	cmp    DWORD PTR [eax+0x5e],esi
  404dd6:	push   ebp
  404dd7:	add    DWORD PTR [ebx+0x33c0c988],ebx
  404ddd:	cmp    al,0xb0
  404ddf:	cwde   
  404de0:	nop
  404de1:	arpl   WORD PTR [edi+0x509d4337],si
  404de7:	or     al,0x39
  404de9:	cwde   
  404dea:	mov    al,ds:0xe05950a1
  404def:	ficom  DWORD PTR [edi+esi*2]
  404df2:	jp     0x404e13
  404df4:	(bad)  
  404df5:	or     bl,BYTE PTR [esi-0x76]
  404df8:	adc    cl,BYTE PTR [eax]
  404dfa:	adc    al,BYTE PTR [ecx]
  404dfc:	push   ss
  404dfd:	push   ds
  404dfe:	cmp    BYTE PTR [esi],bl
  404e00:	adc    edx,ebp
  404e02:	sub    ah,BYTE PTR [esp+esi*2+0x57f217b0]
  404e09:	sbb    DWORD PTR ds:0x578a9e2,edi
  404e0f:	sbb    dh,BYTE PTR [ebx+0x210d28ec]
  404e15:	in     eax,dx
  404e16:	je     0x404e1b
  404e18:	pop    ebx
  404e19:	int3   
  404e1a:	rcr    DWORD PTR [ecx],cl
  404e1c:	jp     0x404e4c
  404e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e1f:	mov    bl,0xb3
  404e21:	retf   0x908a
  404e24:	cmp    eax,0xbdab92a1
  404e29:	imul   ebp,esi,0xbcdb3d58
  404e2f:	and    DWORD PTR [eax],esp
  404e31:	and    dh,BYTE PTR [edx+ebx*2+0x308e6b00]
  404e38:	xchg   edi,eax
  404e39:	push   esi
  404e3a:	inc    eax
  404e3b:	or     BYTE PTR [edx+0x55a80c6c],dh
  404e41:	cmc    
  404e42:	mov    edx,DWORD PTR [ebp-0x32253f1d]
  404e48:	cmp    eax,0xf37343f0
  404e4d:	test   BYTE PTR [ebx-0x38],0x7e
  404e51:	push   0x17
  404e53:	pop    ebx
  404e54:	push   eax
  404e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e56:	enter  0x5b8d,0x35
  404e5a:	add    DWORD PTR [ebp+0x5b],ebx
  404e5d:	clc    
  404e5e:	nop
  404e5f:	repnz xor al,0x7
  404e62:	mov    BYTE PTR [eax-0x7d],ch
  404e65:	jb     0x404e5b
  404e67:	test   ebp,0xa1ad2a12
  404e6d:	repz xchg ebp,eax
  404e6f:	out    dx,eax
  404e70:	or     DWORD PTR [edx],ebp
  404e72:	aaa    
  404e73:	test   BYTE PTR [esp+edx*2-0x29935b74],bh
  404e7a:	(bad)  
  404e7c:	mov    edi,0xe08f9605
  404e81:	(bad)  
  404e82:	ds mov dh,0x80
  404e85:	sahf   
  404e86:	arpl   WORD PTR [ebx+0x76e0a196],bp
  404e8c:	test   DWORD PTR [ecx],ebp
  404e8e:	ret    0x2dc0
  404e91:	cmp    dl,BYTE PTR [esi+0x2d]
  404e94:	jb     0x404e5a
  404e96:	ins    BYTE PTR es:[edi],dx
  404e97:	stos   BYTE PTR es:[edi],al
  404e98:	mov    edx,0x4b45ebcb
  404e9d:	stos   DWORD PTR es:[edi],eax
  404e9e:	loopne 0x404ea7
  404ea0:	jmp    0x87b75e40
  404ea5:	sub    DWORD PTR [esi],esi
  404ea7:	dec    ecx
  404ea8:	pop    ss
  404ea9:	sub    al,0x7a
  404eab:	fs mov edx,esp
  404eae:	retf   
  404eaf:	mov    esi,0xc017946e
  404eb4:	aad    0x19
  404eb6:	sbb    eax,0x642c0339
  404ebb:	push   edx
  404ebc:	jg     0x404e9f
  404ebe:	mov    BYTE PTR ds:0x60bb48fe,ch
  404ec4:	repnz scas al,BYTE PTR es:[edi]
  404ec6:	inc    esp
  404ec7:	mov    BYTE PTR [esp+edi*2],0xe6
  404ecb:	xor    eax,0xe953057c
  404ed0:	fstp   DWORD PTR [ebp+0x4b]
  404ed3:	pop    ds
  404ed4:	imul   esp,DWORD PTR [ebx+0x2e],0xaed7fd19
  404edb:	mul    BYTE PTR [esi-0x7481d0ec]
  404ee1:	imul   edi,DWORD PTR [esi+eiz*8],0x30
  404ee5:	add    esi,DWORD PTR [edi+0x3957889b]
  404eeb:	enter  0x534d,0x18
  404eef:	mov    WORD PTR [ecx+ebp*4+0x753d23ca],cs
  404ef6:	pushf  
  404ef7:	and    DWORD PTR [esi],esi
  404ef9:	cmp    al,0x9c
  404efb:	mov    ch,0xca
  404efd:	repnz pop es
  404eff:	aas    
  404f00:	fadd   DWORD PTR [ebp-0x2b]
  404f03:	jnp    0x404f1b
  404f05:	xchg   ebx,eax
  404f06:	call   0x8c009c3a
  404f0b:	xor    dh,BYTE PTR [ecx-0x20]
  404f0e:	mov    bl,0xbe
  404f10:	jb     0x404f5a
  404f12:	(bad)  
  404f13:	div    edi
  404f15:	jmp    0x875cd0e8
  404f1a:	repnz daa 
  404f1c:	add    BYTE PTR [edx+ebx*1],cl
  404f1f:	aaa    
  404f20:	aam    0x69
  404f22:	data16 mov cl,0xcf
  404f25:	and    ebx,ecx
  404f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f28:	push   0xc4cd4a88
  404f2d:	loope  0x404f85
  404f2f:	mov    WORD PTR [edx+0x6c6a9cc8],?
  404f35:	fld    TBYTE PTR [edx+eiz*2+0x216f3ee7]
  404f3c:	add    eax,0xe825f975
  404f41:	pop    ds
  404f42:	(bad)  
  404f44:	loope  0x404edf
  404f46:	jmp    0xa825:0x2bdc68ae
  404f4d:	dec    edx
  404f4e:	outs   dx,DWORD PTR ds:[esi]
  404f4f:	add    al,0x2
  404f51:	inc    edi
  404f52:	dec    ebx
  404f53:	nop
  404f54:	(bad)  
  404f55:	(bad)  
  404f56:	enter  0x86da,0xf9
  404f5a:	add    ebx,edi
  404f5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f5d:	adc    eax,0x1b307b89
  404f62:	or     BYTE PTR [eax+0x4a],0xbe
  404f66:	adc    al,0x1e
  404f68:	push   esi
  404f69:	mov    ebx,DWORD PTR [eax-0x4e]
  404f6c:	xchg   ecx,eax
  404f6d:	push   0x67
  404f6f:	outs   dx,DWORD PTR ds:[esi]
  404f70:	add    dh,BYTE PTR [edi+0x5a4be130]
  404f76:	sbb    ah,BYTE PTR [ebx-0x48774660]
  404f7c:	out    dx,eax
  404f7d:	adc    esi,0xffffffd8
  404f80:	dec    esp
  404f81:	mov    dh,0xf9
  404f83:	adc    eax,eax
  404f85:	xchg   ebx,eax
  404f86:	jge    0x404fe8
  404f88:	nop
  404f89:	fiadd  DWORD PTR [edx+0x79]
  404f8c:	ins    BYTE PTR es:[edi],dx
  404f8d:	sbb    eax,0x6a2603d0
  404f92:	ds push eax
  404f94:	rcl    DWORD PTR ds:0x852c547,0xd8
  404f9b:	retf   0x9464
  404f9e:	inc    edi
  404f9f:	inc    ecx
  404fa0:	pop    ebp
  404fa1:	and    esp,DWORD PTR [eax+0x1bba9b1b]
  404fa7:	popf   
  404fa8:	jmp    DWORD PTR [ebx]
  404faa:	shl    BYTE PTR [ebp+0x2b],cl
  404fad:	push   ecx
  404fae:	or     eax,0xe949c9d7
  404fb3:	out    dx,eax
  404fb4:	cmp    bl,BYTE PTR [ebp-0x57]
  404fb7:	popf   
  404fb8:	hlt    
  404fb9:	fnstcw WORD PTR [esi-0x1b]
  404fbc:	mov    dh,0x4c
  404fbe:	and    esi,ebp
  404fc0:	pop    esi
  404fc1:	test   eax,0xf5c7d352
  404fc6:	les    eax,FWORD PTR [esi+0x54]
  404fc9:	leave  
  404fca:	into   
  404fcb:	sub    eax,DWORD PTR ds:0xad501bb0
  404fd1:	mov    edi,0xaef48a82
  404fd6:	jecxz  0x405001
  404fd8:	fsubp  st(0),st
  404fda:	jno    0x404f7a
  404fdc:	add    al,0x92
  404fde:	scas   al,BYTE PTR es:[edi]
  404fdf:	imul   ebp,ebx,0x643a1856
  404fe5:	adc    DWORD PTR [ecx-0x7a231a15],ebp
  404feb:	test   DWORD PTR [ecx],edx
  404fed:	pop    edx
  404fee:	sbb    al,0x68
  404ff0:	dec    ebp
  404ff1:	xchg   ecx,eax
  404ff2:	mov    ds:0x56a410d4,eax
  404ff7:	test   eax,0xb67b686e
  404ffc:	mov    ds:0xf0946dff,al
  405001:	rol    DWORD PTR [eax+0xcd86950],0xe0
  405008:	dec    esp
  405009:	ins    DWORD PTR es:[edi],dx
  40500a:	xor    edx,eax
  40500c:	fs daa 
  40500e:	ds xchg ebx,eax
  405010:	and    ch,bl
  405012:	pop    edi
  405013:	push   es
  405014:	add    al,0xf4
  405016:	push   ebp
  405017:	cmc    
  405018:	jmp    0x4cc7fd01
  40501d:	cwde   
  40501e:	mov    ecx,0x1ab58184
  405023:	mov    al,0x2b
  405025:	fnsave [esi+eiz*4+0x6e]
  405029:	xor    eax,0x64528384
  40502e:	jl     0x404feb
  405030:	das    
  405031:	mov    ecx,0x18a5d4f5
  405036:	cmp    eax,eax
  405038:	xor    al,0x7f
  40503a:	push   0x5c
  40503c:	call   0x169d15a6
  405041:	scas   al,BYTE PTR es:[edi]
  405042:	mov    fs,ebp
  405044:	dec    ecx
  405045:	xor    eax,0x350c2bec
  40504a:	push   es
  40504b:	and    esi,DWORD PTR [edx+0x42]
  40504e:	fs mov ebp,0x406524
  405054:	and    BYTE PTR [bx+si-0x3b99],dl
  405059:	(bad)  
  40505a:	int3   
  40505b:	loop   0x404fec
  40505d:	aaa    
  40505e:	fnstcw WORD PTR [ebx]
  405060:	sub    eax,0x672c4e33
  405065:	stc    
  405066:	and    bl,0x9a
  405069:	cmp    al,0x25
  40506b:	ds pop ss
  40506d:	push   esi
  40506e:	or     ebx,eax
  405070:	xchg   DWORD PTR [eax-0x75],esp
  405073:	jb     0x4050a9
  405075:	or     eax,0x88e22fbe
  40507a:	call   0xe43d9de1
  40507f:	mov    ebx,DWORD PTR [ecx]
  405081:	jne    0x405007
  405083:	popf   
  405084:	adc    bh,BYTE PTR [esi]
  405086:	inc    esp
  405087:	loopne 0x40509f
  405089:	cli    
  40508a:	add    BYTE PTR [esi+0x60571c7d],ah
  405090:	test   BYTE PTR [eax+0x55],bh
  405093:	inc    ecx
  405094:	dec    ecx
  405095:	in     eax,0x49
  405097:	mov    dh,0x94
  405099:	mov    ebx,0x20dee5a8
  40509e:	aam    0x8d
  4050a0:	retf   
  4050a1:	in     al,dx
  4050a2:	inc    edi
  4050a3:	fcom   QWORD PTR [esi]
  4050a5:	test   al,0xf3
  4050a7:	or     al,0x92
  4050a9:	pop    ss
  4050aa:	mov    ah,0x85
  4050ac:	and    BYTE PTR cs:[ebp-0x1],ah
  4050b0:	dec    esi
  4050b1:	fsub   DWORD PTR [ebx]
  4050b3:	jbe    0x405036
  4050b5:	cmp    esp,DWORD PTR [edi]
  4050b7:	dec    ebx
  4050b8:	mov    ds:0xcc667d8b,al
  4050bd:	push   ebp
  4050be:	push   0xffffff97
  4050c0:	sahf   
  4050c1:	(bad)  
  4050c2:	xchg   ebp,eax
  4050c3:	je     0x405116
  4050c5:	mov    ds:0x8f770f90,al
  4050ca:	loop   0x4050d5
  4050cc:	cdq    
  4050cd:	retf   
  4050ce:	repnz adc DWORD PTR [ebx+0x7a],esp
  4050d2:	(bad)  
  4050d3:	imul   BYTE PTR [esi-0x78]
  4050d6:	mov    ah,0x4e
  4050d8:	xchg   BYTE PTR [ebp+edi*8+0xeb23f10],al
  4050df:	push   ss
  4050e0:	sub    esp,DWORD PTR [edx+0x28]
  4050e3:	test   DWORD PTR [ebp+0x3f],eax
  4050e6:	call   0xa7ca34da
  4050eb:	aam    0x74
  4050ed:	add    DWORD PTR [esi+edi*1-0x1d],edi
  4050f1:	dec    BYTE PTR [eax]
  4050f3:	mov    al,ds:0x8f2179b9
  4050f8:	jbe    0x4050b6
  4050fa:	nop
  4050fb:	sbb    esi,DWORD PTR [esi-0x2f292d94]
  405101:	xchg   esp,eax
  405102:	push   ds
  405103:	jg     0x405109
  405105:	neg    DWORD PTR [edx]
  405107:	mov    ds:0x62bb16de,al
  40510c:	mov    ecx,0xbf874579
  405111:	xchg   bp,ax
  405113:	jp     0x40513b
  405115:	mov    esi,0x4122610
  40511a:	in     al,dx
  40511b:	mov    ebx,edi
  40511d:	xchg   ecx,eax
  40511e:	cmp    bh,BYTE PTR [edi]
  405120:	push   edi
  405121:	mov    eax,ds:0x55967e90
  405126:	cld    
  405127:	lods   al,BYTE PTR ds:[esi]
  405128:	inc    ebp
  405129:	inc    esi
  40512a:	push   es
  40512b:	dec    ebp
  40512c:	push   ds
  40512d:	jp     0x40513b
  40512f:	fwait
  405130:	aas    
  405131:	les    eax,FWORD PTR [edi]
  405133:	pop    edx
  405134:	mov    eax,ds:0x938f0c5f
  405139:	dec    ecx
  40513a:	into   
  40513b:	rcr    BYTE PTR [ecx],cl
  40513d:	add    al,bl
  40513f:	retf   
  405140:	mov    eax,0xac157b09
  405145:	inc    esp
  405146:	repz dec edx
  405148:	test   ebp,ebp
  40514a:	adc    ah,ch
  40514c:	repnz add WORD PTR [eax],si
  405150:	scas   al,BYTE PTR es:[edi]
  405151:	(bad)  
  405152:	in     al,dx
  405153:	ins    BYTE PTR es:[edi],dx
  405154:	mov    ah,0xc3
  405156:	inc    eax
  405157:	xor    al,0xb3
  405159:	xchg   esp,eax
  40515a:	jecxz  0x405199
  40515c:	pop    eax
  40515d:	or     ecx,DWORD PTR cs:[ecx*2-0x7a538bd6]
  405165:	(bad)  
  405166:	hlt    
  405167:	cmp    al,0x52
  405169:	xchg   edx,eax
  40516a:	and    BYTE PTR [eax+0x2cd2dab6],ah
  405170:	add    DWORD PTR [eax+0x5a],edi
  405173:	outs   dx,DWORD PTR ds:[esi]
  405174:	mov    al,0x44
  405176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405178:	xor    esi,DWORD PTR [edi]
  40517a:	cmp    BYTE PTR [edx+0x9],0xf4
  40517e:	sub    DWORD PTR ds:0x84905adc,edi
  405184:	aaa    
  405185:	nop
  405186:	inc    DWORD PTR [edx+0x3c]
  405189:	xchg   ecx,eax
  40518a:	mov    bh,0x58
  40518c:	xchg   ebx,eax
  40518d:	arpl   dx,cx
  40518f:	or     ecx,ebp
  405191:	lock ret 
  405193:	mov    dh,0xb8
  405195:	cdq    
  405196:	les    eax,FWORD PTR [ebp-0x54b3d9a5]
  40519c:	mov    esp,0x2dfc551d
  4051a1:	or     al,0xf0
  4051a3:	rcr    BYTE PTR ds:0x9eec2a12,1
  4051a9:	clc    
  4051aa:	in     al,0xdf
  4051ac:	mov    cl,0x52
  4051ae:	xlat   BYTE PTR ds:[ebx]
  4051af:	or     edi,DWORD PTR [ebp-0x3bdc5486]
  4051b5:	xchg   ecx,eax
  4051b6:	stos   DWORD PTR es:[edi],eax
  4051b7:	repnz pushaw 
  4051ba:	jmp    0x4051a0
  4051bc:	ds mov ecx,0x687d870b
  4051c2:	test   al,0x3
  4051c4:	jae    0x4051cb
  4051c6:	cld    
  4051c7:	in     eax,dx
  4051c8:	mov    bh,0xed
  4051ca:	adc    al,0x35
  4051cc:	pusha  
  4051cd:	mov    dh,0x75
  4051cf:	shl    BYTE PTR [edi-0x1d],cl
  4051d2:	cdq    
  4051d3:	sahf   
  4051d4:	and    al,bl
  4051d6:	dec    esi
  4051d7:	adc    DWORD PTR [eax+0x3],ebp
  4051da:	push   edi
  4051db:	sbb    DWORD PTR [edi+0x48359bbb],0xf22e50b6
  4051e5:	ins    BYTE PTR es:[edi],dx
  4051e6:	xor    al,0x20
  4051e8:	sti    
  4051e9:	pusha  
  4051ea:	mov    ch,0xdd
  4051ec:	mov    ds:0x8d9bfeca,eax
  4051f1:	or     eax,0x741e4033
  4051f6:	in     eax,0x7a
  4051f8:	mov    bh,0x2a
  4051fa:	pusha  
  4051fb:	xchg   bh,bl
  4051fd:	fisttp QWORD PTR [edx-0x59]
  405200:	scas   eax,DWORD PTR es:[edi]
  405201:	mov    ecx,0x63b68f0e
  405206:	and    al,BYTE PTR [esi-0x3e]
  405209:	and    al,0xd4
  40520b:	ret    0x793f
  40520e:	sbb    DWORD PTR [ebx+0xe],edx
  405211:	or     ch,cl
  405213:	pop    esi
  405214:	push   ebx
  405215:	jae    0x405246
  405217:	sahf   
  405218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405219:	rcl    BYTE PTR [eax],0x6f
  40521c:	sbb    esi,ebx
  40521e:	(bad)  
  40521f:	or     BYTE PTR [esi+eiz*8-0x17cb4e3f],0xd1
  405227:	dec    edx
  405228:	push   esp
  405229:	fstp   TBYTE PTR [ebx-0x4a795abc]
  40522f:	scas   al,BYTE PTR es:[edi]
  405230:	cdq    
  405231:	pop    ss
  405232:	mov    edi,0x7e6e374
  405237:	and    BYTE PTR ds:[edx+ebp*1+0x25],cl
  40523c:	xor    eax,0x8ec0654a
  405241:	xor    al,0xdd
  405243:	push   eax
  405244:	push   cs
  405245:	mov    edx,0x90a385c5
  40524a:	xor    al,0x3e
  40524c:	cmc    
  40524d:	push   0x1a5ef30d
  405252:	fs pop esi
  405254:	xchg   esi,eax
  405255:	push   0x74
  405257:	pop    ebx
  405258:	mov    ebx,0xf812da55
  40525d:	gs add al,0x4b
  405260:	xor    eax,0x74514bc1
  405265:	xchg   DWORD PTR ds:0x2593ad01,ebx
  40526b:	jo     0x40522d
  40526d:	cdq    
  40526e:	lods   eax,DWORD PTR gs:[esi]
  405270:	mov    bl,bl
  405272:	push   ebx
  405273:	scas   al,BYTE PTR es:[edi]
  405274:	xchg   esp,eax
  405275:	inc    eax
  405276:	pop    edi
  405277:	ror    BYTE PTR [ecx+0x3a],cl
  40527a:	xor    BYTE PTR [ebp-0x64e3888],dl
  405280:	xchg   ebp,eax
  405281:	mov    ecx,0xf19d4c1
  405286:	out    dx,al
  405287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405288:	pop    ecx
  405289:	jge    0x4052d7
  40528b:	out    0xd3,al
  40528d:	inc    ebx
  40528e:	adc    ecx,edi
  405290:	add    al,0x5e
  405292:	pop    ebx
  405293:	fs int3 
  405295:	adc    ch,BYTE PTR [edx]
  405297:	jmp    0x1e85c2d3
  40529c:	xor    ah,cl
  40529e:	jo     0x4052ab
  4052a0:	push   edi
  4052a1:	mov    ebx,0xb6180878
  4052a6:	mov    esp,0xbc34fc15
  4052ab:	dec    esp
  4052ac:	dec    edi
  4052ad:	xchg   edx,eax
  4052ae:	sbb    eax,0xa6343e39
  4052b3:	fwait
  4052b4:	lods   al,BYTE PTR ds:[esi]
  4052b5:	dec    ebx
  4052b6:	gs sbb edi,ebx
  4052b9:	pop    es
  4052ba:	adc    BYTE PTR [ecx],cl
  4052bc:	mov    ah,0x30
  4052be:	mov    al,ds:0x8b74bf77
  4052c3:	data16 jb 0x4052af
  4052c6:	pop    esi
  4052c7:	pop    eax
  4052c8:	ja     0x40530a
  4052ca:	cmp    bh,ah
  4052cc:	cs scas eax,DWORD PTR es:[edi]
  4052ce:	inc    ecx
  4052cf:	mov    cl,0x77
  4052d1:	out    0xb,eax
  4052d3:	inc    ecx
  4052d4:	mov    ah,0x0
  4052d6:	xchg   BYTE PTR [eax-0x25],dl
  4052d9:	fmulp  st(5),st
  4052db:	xchg   edi,eax
  4052dc:	ins    BYTE PTR es:[edi],dx
  4052dd:	cli    
  4052de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052df:	xchg   esp,eax
  4052e0:	sar    cl,0x89
  4052e3:	and    al,0xcf
  4052e5:	mov    esp,0x43057ef3
  4052ea:	add    BYTE PTR [ecx-0x22],0x1b
  4052ee:	in     eax,dx
  4052ef:	sar    BYTE PTR ds:0xa20744c3,cl
  4052f5:	mov    ds:0xa5dedf1,eax
  4052fa:	shl    edx,1
  4052fc:	pop    ebp
  4052fd:	mov    ebp,0x83c22970
  405302:	and    bl,dh
  405304:	cmp    edx,edi
  405306:	inc    eax
  405307:	mov    ecx,0x7386cd0c
  40530c:	pop    es
  40530d:	(bad)  [edi+0x67]
  405310:	and    DWORD PTR [eax],esp
  405312:	sbb    bl,dl
  405314:	push   es
  405315:	xor    BYTE PTR [esi],al
  405317:	cmp    DWORD PTR [ebp-0x3a],edx
  40531a:	lds    esp,FWORD PTR [esi+0x21]
  40531d:	ins    BYTE PTR es:[edi],dx
  40531e:	leave  
  40531f:	cmp    eax,0x2b827553
  405324:	lea    edx,[edi]
  405326:	sub    al,0xde
  405328:	push   edx
  405329:	aad    0x2c
  40532b:	and    al,0xc1
  40532d:	inc    esi
  40532e:	dec    ebp
  40532f:	inc    edi
  405330:	adc    DWORD PTR [ebp-0x63e8a3d5],eax
  405336:	sbb    eax,0x1245bcb3
  40533b:	sbb    eax,0xf2f49808
  405340:	je     0x405335
  405342:	xor    ch,bl
  405344:	and    esi,edi
  405346:	xchg   ebx,edi
  405348:	inc    esp
  405349:	sub    eax,0x3f8977ff
  40534e:	push   es
  40534f:	mov    ecx,ecx
  405351:	outs   dx,BYTE PTR ds:[esi]
  405352:	mov    dh,0xab
  405354:	lods   eax,DWORD PTR ds:[esi]
  405355:	cmp    cl,BYTE PTR [ecx+0x5d2396f]
  40535b:	xchg   BYTE PTR [edx-0x36],ch
  40535e:	mov    edx,0x4244263e
  405363:	cmp    al,BYTE PTR [edi+0x2f]
  405366:	into   
  405367:	push   es
  405368:	mov    ebp,0x67fec9c1
  40536d:	pop    eax
  40536e:	mov    edx,0x106328ad
  405373:	int3   
  405374:	icebp  
  405375:	into   
  405376:	or     edx,DWORD PTR [ebx-0x7059a0d9]
  40537c:	je     0x405399
  40537e:	test   eax,0x35a3f1a6
  405383:	clc    
  405384:	(bad)  [esi-0x31]
  405387:	fst    DWORD PTR [eax]
  405389:	xchg   edi,eax
  40538a:	das    
  40538b:	addr16 (bad) 
  40538d:	in     al,dx
  40538e:	dec    ebp
  40538f:	sbb    eax,0x8b7dc857
  405394:	hlt    
  405395:	mov    ch,0x46
  405397:	pop    ebp
  405398:	xor    BYTE PTR [ecx+0xf],0x22
  40539c:	ins    BYTE PTR es:[edi],dx
  40539d:	mov    ebx,0xfc650308
  4053a3:	daa    
  4053a4:	mov    BYTE PTR [ebp+0x794fc85e],cl
  4053aa:	out    0xc6,eax
  4053ac:	adc    dl,0x58
  4053af:	cmp    BYTE PTR [ecx-0x75cba195],bh
  4053b5:	xor    BYTE PTR [edi-0x6963cbce],dl
  4053bb:	adc    eax,0x8722ff2b
  4053c0:	bound  ebp,QWORD PTR [edx+0x38]
  4053c3:	retf   
  4053c4:	loope  0x4053de
  4053c6:	and    dl,ah
  4053c8:	daa    
  4053c9:	imul   ebx,esi,0x9d4297a2
  4053cf:	cs jge 0x4053cb
  4053d2:	cmp    eax,0x2a392a26
  4053d7:	es call 0xabc7687d
  4053dd:	inc    esp
  4053de:	add    DWORD PTR [ecx-0x2b],esi
  4053e1:	cs fs ds hlt 
  4053e5:	mov    eax,0xed8aa6fd
  4053ea:	fdivr  DWORD PTR [eax-0x7d382172]
  4053f0:	iret   
  4053f1:	int    0xa1
  4053f3:	pushf  
  4053f4:	cli    
  4053f5:	loopne 0x4053e4
  4053f7:	inc    ebp
  4053f8:	push   esp
  4053f9:	shr    DWORD PTR [edx-0x471e3bff],1
  4053ff:	xor    BYTE PTR [esp+esi*8-0xd19cb9],bh
  405406:	lods   al,BYTE PTR ds:[esi]
  405407:	mov    bh,0xd9
  405409:	test   BYTE PTR [edi+esi*8-0x4c],ah
  40540d:	jl     0x4053cd
  40540f:	cdq    
  405410:	into   
  405411:	js     0x4053f2
  405413:	das    
  405414:	lods   al,BYTE PTR ds:[esi]
  405415:	test   DWORD PTR fs:0xd9e36d74,ebp
  40541c:	aam    0x6d
  40541e:	mov    BYTE PTR [edx+ebx*4+0x31f83039],dh
  405425:	rcl    DWORD PTR [edx*8+0x4f4eb559],0x27
  40542d:	add    DWORD PTR [ebx],ebp
  40542f:	push   edi
  405430:	loope  0x4053e0
  405432:	mov    fs,WORD PTR [edi+0x28]
  405435:	mov    edx,0xed6f0020
  40543a:	es sbb ax,0xe0e2
  40543f:	addr16 jl 0x405461
  405442:	repnz add eax,0x2ca2e086
  405448:	je     0x4053d7
  40544a:	sub    dh,ah
  40544c:	adc    BYTE PTR [ebp+0x5a15545d],0xa6
  405453:	adc    BYTE PTR [ecx-0x5a],cl
  405456:	idiv   DWORD PTR [ebx+0x725f51cc]
  40545c:	ins    BYTE PTR es:[edi],dx
  40545d:	cmp    ecx,DWORD PTR [edx+ebp*8+0x7753cd97]
  405464:	(bad)  
  405465:	loope  0x405407
  405467:	imul   ebp,DWORD PTR [ecx+edx*8],0x49
  40546b:	inc    esi
  40546c:	xor    bh,cl
  40546e:	in     al,0xa9
  405470:	sbb    dh,BYTE PTR [ecx-0x41d7db4c]
  405476:	loope  0x4054f7
  405478:	mov    ah,0x12
  40547a:	and    al,0x6a
  40547c:	ja     0x405497
  40547e:	mov    ds:0xf6b2308,al
  405483:	inc    ebp
  405484:	sahf   
  405485:	and    bh,al
  405487:	int3   
  405488:	push   esi
  405489:	push   0xffffffc7
  40548b:	mov    bl,0xd5
  40548d:	push   eax
  40548e:	pop    esi
  40548f:	outs   dx,BYTE PTR ds:[esi]
  405490:	repz (bad) 
  405492:	sbb    al,0xcb
  405494:	pushf  
  405495:	mov    ch,0xaa
  405497:	sahf   
  405498:	xor    ch,BYTE PTR [ebp+ebp*2+0x26]
  40549c:	mov    ecx,0x2dc9c67
  4054a1:	sbb    al,BYTE PTR [eax]
  4054a3:	sub    DWORD PTR [ebx+0x60],0x67bcae32
  4054aa:	into   
  4054ab:	add    al,0x9
  4054ad:	ficomp DWORD PTR [edx]
  4054af:	bound  edi,QWORD PTR [ebx+0x62]
  4054b2:	fucomip st,st(1)
  4054b4:	dec    edx
  4054b5:	mov    cl,0x2c
  4054b7:	sub    cl,bl
  4054b9:	adc    BYTE PTR [eax],0x4d
  4054bc:	mov    cl,0xef
  4054be:	xchg   ebp,eax
  4054bf:	cs leave 
  4054c1:	or     DWORD PTR ds:0x869e5011,edx
  4054c7:	cli    
  4054c8:	push   0x46
  4054ca:	out    0x68,al
  4054cc:	aad    0xf2
  4054ce:	mov    ch,0xab
  4054d0:	cvttps2pi mm1,QWORD PTR [ebp-0x7145aa8e]
  4054d7:	mul    esp
  4054d9:	cmc    
  4054da:	loopne 0x40546e
  4054dc:	mov    WORD PTR [edi+0x50],cs
  4054df:	leave  
  4054e0:	pop    es
  4054e1:	dec    edi
  4054e2:	sbb    BYTE PTR [eax],dl
  4054e4:	sbb    DWORD PTR [eax],esp
  4054e6:	xchg   esp,eax
  4054e7:	sub    eax,0x61b3d764
  4054ec:	lock sbb ebx,ebx
  4054ef:	and    eax,0xfc293c51
  4054f4:	inc    esi
  4054f5:	xchg   ecx,eax
  4054f6:	clc    
  4054f7:	mov    esp,DWORD PTR [ebx-0x39e519d1]
  4054fd:	mov    dh,0x7
  4054ff:	mov    edi,esp
  405501:	sar    edi,cl
  405503:	sti    
  405504:	and    eax,0x16ba3d25
  405509:	sub    eax,0x93601bad
  40550e:	clc    
  40550f:	jle    0x40556b
  405511:	dec    ebp
  405512:	cmp    ebp,DWORD PTR [eax-0x3b]
  405515:	or     ecx,esp
  405517:	jb     0x405542
  405519:	jmp    0x4054a4
  40551b:	inc    edi
  40551c:	aas    
  40551d:	jb     0x40558f
  40551f:	add    bl,bl
  405521:	ja     0x4054e8
  405523:	retf   
  405524:	adc    BYTE PTR [ecx-0x2fce23ac],ch
  40552a:	sub    edi,DWORD PTR [edi-0x2d8919d9]
  405530:	fild   DWORD PTR [edx+0x60]
  405533:	push   ds
  405534:	rcl    DWORD PTR [edi],cl
  405536:	or     al,0xf0
  405538:	push   edx
  405539:	(bad)  
  40553b:	std    
  40553c:	cmp    eax,DWORD PTR [edi+0x304835bc]
  405542:	popf   
  405543:	cmp    edi,DWORD PTR [esi+0x43]
  405546:	mov    ds,WORD PTR [esi-0xe]
  405549:	lahf   
  40554a:	ins    DWORD PTR es:[edi],dx
  40554b:	outs   dx,DWORD PTR ds:[esi]
  40554c:	mov    ecx,0xd3f32d61
  405551:	loopne 0x40552c
  405553:	sti    
  405554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405555:	xlat   BYTE PTR ds:[ebx]
  405556:	out    dx,al
  405557:	xchg   edi,eax
  405558:	in     al,0x99
  40555a:	std    
  40555b:	jns    0x405528
  40555d:	or     eax,0xa3e9467f
  405562:	inc    edx
  405563:	inc    ax
  405565:	xchg   esi,eax
  405566:	ret    
  405567:	cdq    
  405568:	loopne 0x40551f
  40556a:	mov    eax,ds:0xd24cf40a
  40556f:	enter  0xf3e7,0x9d
  405573:	xor    al,0x38
  405575:	mov    bl,0xf1
  405577:	imul   esp,DWORD PTR [eax],0x3e4238f6
  40557d:	mov    dh,0x5c
  40557f:	fcmovne st,st(7)
  405581:	sub    BYTE PTR [edx-0x2d],dl
  405584:	add    eax,0xae6fa120
  405589:	mov    edi,0xa7c99b14
  40558e:	ret    
  40558f:	cmp    BYTE PTR [edi-0x19],ah
  405592:	and    eax,0x17612d45
  405597:	mov    ah,0x4a
  405599:	inc    ecx
  40559a:	add    ebx,ebx
  40559c:	mov    WORD PTR [ebp+0x7814c496],cs
  4055a2:	push   edx
  4055a3:	ret    
  4055a4:	adc    esi,DWORD PTR [esi-0x78938e87]
  4055aa:	iret   
  4055ab:	sti    
  4055ac:	jns    0x40553b
  4055ae:	vpcmpgtw ymm1,ymm0,ymm1
  4055b2:	mov    ecx,0xc5db4751
  4055b7:	fstp   QWORD PTR [edi+0x2c]
  4055ba:	or     BYTE PTR [ecx+0x4f],0x44
  4055be:	daa    
  4055bf:	mov    al,0xd1
  4055c1:	xchg   ebp,eax
  4055c2:	jbe    0x40560b
  4055c4:	and    ch,BYTE PTR [ecx+ecx*1+0x4e]
  4055c8:	ror    DWORD PTR [ebp-0x3968e86],0x17
  4055cf:	push   eax
  4055d0:	jae    0x405638
  4055d2:	fs jb  0x4055cf
  4055d5:	mov    dh,0xe1
  4055d7:	push   ecx
  4055d8:	pop    esp
  4055d9:	(bad)  
  4055da:	std    
  4055db:	adc    BYTE PTR [ebx+ebx*1],ch
  4055de:	ss pop ebx
  4055e0:	xor    eax,0x7e298221
  4055e5:	adc    esp,edi
  4055e7:	ss (bad) 
  4055e9:	push   ebp
  4055ea:	mov    bh,0xd1
  4055ec:	mov    ?,WORD PTR [edx-0x5928140c]
  4055f2:	dec    esp
  4055f3:	ins    BYTE PTR es:[edi],dx
  4055f4:	sti    
  4055f5:	popa   
  4055f6:	xchg   esi,eax
  4055f7:	or     DWORD PTR [esi],ebx
  4055f9:	mov    dl,0x31
  4055fb:	(bad)  
  4055fc:	xor    eax,0x68675370
  405601:	jmp    0x981:0xf33b48f0
  405608:	mov    dl,0x94
  40560a:	outs   dx,BYTE PTR ds:[esi]
  40560b:	loopne 0x405672
  40560d:	fs loopne 0x4055a0
  405610:	and    al,0xb2
  405612:	inc    DWORD PTR [edi-0x31204f3f]
  405618:	inc    ecx
  405619:	mov    al,0x35
  40561b:	les    esp,FWORD PTR [ebx+eax*8]
  40561e:	pop    es
  40561f:	shr    BYTE PTR [eax-0x75],cl
  405622:	push   ecx
  405623:	icebp  
  405624:	xlat   BYTE PTR ds:[ebx]
  405625:	xor    eax,0x91559bda
  40562a:	pop    eax
  40562b:	mov    ah,0xf7
  40562d:	jb     0x405627
  40562f:	iret   
  405630:	jp     0x40560e
  405632:	loopne 0x405698
  405634:	(bad)  
  405635:	cdq    
  405636:	(bad)  
  405637:	lds    ecx,FWORD PTR [eax-0x3a]
  40563a:	loopne 0x4055f3
  40563c:	jmp    0xd515d600
  405641:	mov    ebx,0x14f7c4dc
  405646:	adc    esp,DWORD PTR [edi+0x51]
  405649:	retf   0x3739
  40564c:	aam    0x11
  40564e:	stos   BYTE PTR es:[edi],al
  40564f:	mov    ?,WORD PTR [ebx-0x1b07038b]
  405655:	push   esi
  405656:	and    al,BYTE PTR [ecx-0x5d]
  405659:	outs   dx,DWORD PTR ds:[esi]
  40565a:	add    DWORD PTR [ebp+edx*1+0x2c],esi
  40565e:	repz xchg esp,eax
  405660:	jle    0x405669
  405662:	xchg   esp,eax
  405663:	out    dx,al
  405664:	arpl   WORD PTR [edx],dx
  405666:	add    al,0xf6
  405668:	and    DWORD PTR [edi+0x7c3f936a],esi
  40566e:	lds    ebp,FWORD PTR [eax]
  405670:	dec    ebx
  405671:	inc    ebx
  405672:	push   0xffffff9c
  405674:	pop    es
  405675:	scas   eax,DWORD PTR es:[edi]
  405676:	push   0x6ab6382b
  40567b:	sahf   
  40567c:	lods   eax,DWORD PTR ds:[esi]
  40567d:	(bad)  
  40567e:	pop    eax
  40567f:	and    bh,ah
  405681:	cmp    cl,al
  405683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405684:	je     0x4056cc
  405686:	test   eax,0x6b16c02a
  40568b:	test   DWORD PTR [ebx+ebx*8],0xb421e1d3
  405692:	stos   BYTE PTR es:[edi],al
  405693:	das    
  405694:	les    ecx,FWORD PTR [esi+0x21]
  405697:	(bad)  
  405698:	repz mov ds:0x1a8efe61,eax
  40569e:	xlat   BYTE PTR ds:[ebx]
  40569f:	cld    
  4056a0:	inc    ecx
  4056a1:	xchg   esi,eax
  4056a2:	out    dx,al
  4056a3:	je     0x4056a3
  4056a5:	sub    bl,dl
  4056a7:	add    al,0x37
  4056a9:	ds js  0x405708
  4056ac:	(bad)  
  4056ae:	into   
  4056af:	(bad)  
  4056b0:	repnz lahf 
  4056b2:	cwde   
  4056b3:	push   ecx
  4056b4:	add    dl,BYTE PTR [ebx+0x6b]
  4056b7:	xor    eax,esi
  4056b9:	push   ebp
  4056ba:	je     0x4056e0
  4056bc:	fdivr  st,st(1)
  4056be:	loopne 0x405681
  4056c0:	pop    ecx
  4056c1:	jp     0x4056ba
  4056c3:	adc    al,0xdf
  4056c5:	jge    0x405693
  4056c7:	inc    eax
  4056c8:	shl    BYTE PTR [edi+0x176927be],cl
  4056ce:	into   
  4056cf:	mov    ss,WORD PTR [edx]
  4056d1:	xor    al,0xaa
  4056d3:	add    dl,0xf6
  4056d6:	inc    ebp
  4056d7:	fild   DWORD PTR [esi]
  4056d9:	pop    edi
  4056da:	arpl   WORD PTR [edx+0xc],dx
  4056dd:	hlt    
  4056de:	sub    cl,BYTE PTR [edi+0x393c4436]
  4056e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056e5:	lock cld 
  4056e7:	xchg   ecx,eax
  4056e8:	inc    esi
  4056e9:	ret    0x5d08
  4056ec:	iret   
  4056ed:	xchg   ebx,eax
  4056ee:	lods   al,BYTE PTR ds:[esi]
  4056ef:	mov    eax,0x1257675b
  4056f4:	cs call 0x9cc1f851
  4056fa:	ffree  st(6)
  4056fc:	or     DWORD PTR [ebp-0x4433ad94],0xc9448252
  405706:	pusha  
  405707:	sbb    eax,0xe4cbc0f2
  40570c:	inc    esp
  40570d:	xor    BYTE PTR [ecx-0x1e],al
  405710:	mov    eax,ds:0xb73d199f
  405715:	lods   eax,DWORD PTR ds:[esi]
  405716:	cwde   
  405717:	or     eax,0x3810d7e6
  40571c:	out    0xc5,al
  40571e:	cwde   
  40571f:	outs   dx,BYTE PTR ds:[esi]
  405720:	(bad)  
  405721:	mov    edi,0x8dd7a6af
  405726:	push   edx
  405727:	and    eax,0x72692077
  40572c:	mov    esp,0xf412a85a
  405731:	shl    BYTE PTR [ebp+0x9],1
  405734:	retf   
  405735:	pop    eax
  405736:	daa    
  405737:	mov    eax,0x74398de8
  40573c:	sbb    al,0xb6
  40573e:	or     DWORD PTR [esi-0x29],ebp
  405741:	mov    ah,BYTE PTR [ecx+0x549c25fd]
  405747:	pop    ecx
  405748:	lods   al,BYTE PTR ds:[esi]
  405749:	push   ecx
  40574a:	loop   0x4056f0
  40574c:	xchg   ebp,eax
  40574d:	jnp    0x405701
  40574f:	push   eax
  405750:	inc    edx
  405751:	dec    ecx
  405752:	out    0x3a,eax
  405754:	xor    ebp,DWORD PTR [ebx-0x4d]
  405757:	sar    BYTE PTR [ecx+0x5d],0xfd
  40575b:	sub    eax,edi
  40575d:	pop    esp
  40575e:	in     eax,0x4a
  405760:	jg     0x4057be
  405762:	jae    0x405770
  405764:	ins    BYTE PTR es:[edi],dx
  405765:	xor    dh,BYTE PTR ds:0xffe2034a
  40576b:	jne    0x405777
  40576d:	pop    ebx
  40576e:	lds    ebx,FWORD PTR [ecx-0x22]
  405771:	jo     0x4057c4
  405773:	push   esi
  405774:	pop    ecx
  405775:	or     eax,0x3bc99b0d
  40577a:	dec    esp
  40577b:	mov    bh,0xd2
  40577d:	test   al,0x1
  40577f:	mov    cs,WORD PTR [edx+0x48ecbee2]
  405785:	cwde   
  405786:	out    0xf2,al
  405788:	sbb    bl,0xc5
  40578b:	push   esi
  40578c:	xchg   ebx,eax
  40578d:	sub    DWORD PTR [ecx+0x3be7bd1b],ebp
  405793:	cvtps2pd xmm1,QWORD PTR ds:0xee80b15c
  40579a:	fcomi  st,st(6)
  40579c:	or     dh,BYTE PTR [eax+0x1e]
  40579f:	mov    edi,0xf8369e31
  4057a4:	lds    ebp,FWORD PTR [ebx]
  4057a6:	arpl   si,bp
  4057a8:	aaa    
  4057a9:	add    DWORD PTR [ebx-0x40],ebp
  4057ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057ad:	push   cs
  4057ae:	ins    DWORD PTR es:[edi],dx
  4057af:	ret    
  4057b0:	mov    bh,0xd0
  4057b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057b3:	pop    esi
  4057b4:	lods   al,BYTE PTR ds:[esi]
  4057b5:	push   ebp
  4057b6:	test   eax,0xa2f9d863
  4057bb:	loopne 0x4057cf
  4057bd:	cmc    
  4057be:	mov    al,0xe7
  4057c0:	jae    0x4057d6
  4057c2:	stos   DWORD PTR es:[edi],eax
  4057c3:	rcr    BYTE PTR [esi-0x52],cl
  4057c6:	dec    ebx
  4057c7:	adc    edi,DWORD PTR [ecx+0xc927173]
  4057cd:	jg     0x4057cb
  4057cf:	mov    ds,edi
  4057d1:	mov    ebp,0xa6ead241
  4057d6:	setge  dh
  4057d9:	loopne 0x405772
  4057db:	and    DWORD PTR ds:0x3f2628a8,ebx
  4057e1:	mov    edi,0x2df10ff1
  4057e6:	fld    QWORD PTR [edx+0x7b]
  4057e9:	push   ebx
  4057ea:	dec    ecx
  4057eb:	inc    edi
  4057ec:	push   0xffffff97
  4057ee:	imul   ecx,DWORD PTR [ecx+0x5963eefa],0xfffffff5
  4057f5:	sar    bl,0xa8
  4057f8:	push   0xffffffd0
  4057fa:	ss push 0x2d0ad950
  405800:	rcr    ch,cl
  405802:	sbb    cl,bh
  405804:	sahf   
  405805:	cmp    eax,0xdc3f3a91
  40580a:	arpl   WORD PTR [edi+esi*4-0x6a90298f],dx
  405811:	ins    BYTE PTR es:[edi],dx
  405812:	mov    cl,0x2b
  405814:	fidiv  WORD PTR [edi-0x3da7b48]
  40581a:	inc    ecx
  40581b:	jp     0x405897
  40581d:	or     eax,0xb48eee7b
  405822:	xor    edi,DWORD PTR [ebp+edx*1-0x745e3930]
  405829:	das    
  40582a:	or     eax,0xd3f5f023
  40582f:	xchg   ebp,eax
  405830:	shl    al,0xee
  405833:	xchg   ebp,eax
  405834:	std    
  405835:	jns    0x405829
  405837:	loope  0x40580c
  405839:	push   esp
  40583a:	adc    dl,ch
  40583c:	jns    0x405861
  40583e:	(bad)  
  40583f:	push   esi
  405840:	push   esp
  405841:	mov    ds,WORD PTR [edi-0x80]
  405844:	sub    BYTE PTR [esi+0x35e5ee7a],bl
  40584a:	in     eax,0x1
  40584c:	push   esp
  40584d:	ins    DWORD PTR es:[edi],dx
  40584e:	push   ecx
  40584f:	aas    
  405850:	arpl   WORD PTR [esi],bx
  405852:	inc    esi
  405853:	data16 cmp al,0xbb
  405856:	scas   al,BYTE PTR es:[edi]
  405857:	sahf   
  405858:	fidivr DWORD PTR [eax+ebp*1+0x65]
  40585c:	retf   0xd1d3
  40585f:	movzx  esi,BYTE PTR [ebx-0x41]
  405863:	xor    DWORD PTR [eax],edx
  405865:	jp     0x4058b9
  405867:	xchg   edi,eax
  405868:	pop    edi
  405869:	inc    ebp
  40586a:	add    ebp,ecx
  40586c:	fnstcw WORD PTR [esi+ebx*8-0x2c5208b4]
  405873:	pop    ebp
  405874:	(bad)  
  405875:	mov    dh,0x97
  405877:	or     BYTE PTR [edi],dl
  405879:	jg     0x40585b
  40587b:	inc    esi
  40587c:	out    dx,eax
  40587d:	bound  ecx,QWORD PTR [eax+0x32]
  405880:	fisttp QWORD PTR [edi-0x21]
  405883:	adc    DWORD PTR [ebp-0x5c],esi
  405886:	cs (bad) 
  405888:	jmp    0x4298:0x89e595b4
  40588f:	std    
  405890:	or     DWORD PTR [ecx-0x17],ecx
  405893:	xor    DWORD PTR [ebx+0x22],esp
  405896:	ret    0xb60f
  405899:	adc    ebx,DWORD PTR [edx+0x16]
  40589c:	in     al,0x1a
  40589e:	mov    cl,dh
  4058a0:	mov    al,0xd1
  4058a2:	xor    DWORD PTR [ebx+0x3caebb65],edi
  4058a8:	cmp    al,0xcd
  4058aa:	aam    0x9c
  4058ac:	lods   eax,DWORD PTR ds:[esi]
  4058ad:	sub    edi,DWORD PTR [edi+0x5be3f095]
  4058b3:	test   al,0x89
  4058b5:	xchg   ebp,eax
  4058b6:	das    
  4058b7:	pop    esp
  4058b8:	xchg   ebp,eax
  4058b9:	push   eax
  4058ba:	rcr    DWORD PTR [eax-0x18],1
  4058bd:	dec    ebx
  4058be:	and    edi,0x38d28af4
  4058c4:	mov    ?,WORD PTR [eax-0x7176dcb9]
  4058ca:	sub    DWORD PTR [edi],0x27
  4058cd:	mov    esi,0xea4a6c75
  4058d2:	rcr    BYTE PTR [esi],1
  4058d4:	fwait
  4058d5:	jmp    0xa356:0xd64b5398
  4058dc:	cmp    cl,BYTE PTR [esi+0x2ae77ea8]
  4058e2:	sub    cl,BYTE PTR [edi+0x62fa08e3]
  4058e8:	fdiv   st,st(1)
  4058ea:	inc    ebp
  4058eb:	mov    eax,0xdcada68a
  4058f0:	out    0xb9,al
  4058f2:	adc    ch,0xb0
  4058f5:	(bad)  
  4058f6:	and    al,0x15
  4058f8:	pop    ds
  4058f9:	in     al,dx
  4058fa:	push   esp
  4058fb:	adc    BYTE PTR [edi],bh
  4058fd:	or     DWORD PTR [edi+0xe],esi
  405900:	stos   DWORD PTR es:[edi],eax
  405901:	jge    0x40589b
  405903:	inc    ebx
  405904:	sahf   
  405905:	ss jno 0x405930
  405908:	add    DWORD PTR [esp+eax*8-0x8],ebx
  40590c:	or     eax,0xd03764b0
  405911:	aas    
  405912:	mov    BYTE PTR cs:[ebx+0x63241664],ch
  405919:	loopne 0x405913
  40591b:	std    
  40591c:	pop    eax
  40591d:	push   esi
  40591e:	mov    al,ds:0x75b68e02
  405923:	fs cli 
  405925:	mov    dl,dl
  405927:	stos   BYTE PTR es:[edi],al
  405928:	fist   WORD PTR [edi]
  40592a:	(bad)  
  40592c:	fwait
  40592d:	push   ss
  40592e:	xchg   BYTE PTR [edx-0x5b],ch
  405931:	(bad)
  405934:	mov    edx,0x6b83df03
  405939:	test   al,0xf3
  40593b:	leave  
  40593c:	fisttp QWORD PTR [eax-0x16]
  40593f:	inc    esi
  405940:	sbb    DWORD PTR [eax+ebp*2],eax
  405943:	mov    esi,0x119aac29
  405948:	test   DWORD PTR [eax-0x15483fa7],ebx
  40594e:	push   0xfffffffc
  405950:	xchg   esp,eax
  405951:	dec    esp
  405952:	lds    esp,FWORD PTR [ecx]
  405954:	mov    dh,0xbd
  405956:	out    dx,al
  405957:	clc    
  405958:	or     BYTE PTR [edx],cl
  40595a:	add    cl,BYTE PTR [eax+0x78]
  40595d:	fadd   QWORD PTR [eax]
  40595f:	fwait
  405960:	dec    edx
  405961:	xchg   esi,eax
  405962:	mov    ds:0x1f91c35c,eax
  405967:	leave  
  405968:	sub    edi,esp
  40596a:	outs   dx,BYTE PTR ds:[esi]
  40596b:	inc    esp
  40596c:	push   edi
  40596d:	mov    ecx,0x3e7f0509
  405972:	cmp    BYTE PTR [eax-0x64],dh
  405975:	leave  
  405976:	push   es
  405977:	mov    ebx,0xd2f6de22
  40597c:	out    0x37,eax
  40597e:	retf   0x18a8
  405981:	push   ecx
  405982:	aas    
  405983:	div    BYTE PTR ds:0x6f8438af
  405989:	fisubr WORD PTR [eax+ebx*4]
  40598c:	int3   
  40598d:	dec    ebp
  40598e:	retf   0xa1ba
  405991:	xchg   edi,eax
  405992:	(bad)  [ecx+0x3]
  405995:	int    0x6a
  405997:	inc    edx
  405998:	cmp    BYTE PTR [edi],dh
  40599a:	sub    DWORD PTR ds:0xe32b656f,esi
  4059a0:	std    
  4059a1:	inc    edi
  4059a2:	jbe    0x4059ae
  4059a4:	push   ds
  4059a5:	xor    BYTE PTR [eax+0x1e],0xff
  4059a9:	jbe    0x405a01
  4059ab:	(bad)  
  4059ac:	ins    BYTE PTR es:[edi],dx
  4059ad:	dec    ecx
  4059ae:	add    eax,0xc65c5863
  4059b3:	xchg   esp,eax
  4059b4:	out    0x7a,al
  4059b6:	inc    ebx
  4059b7:	inc    esi
  4059b8:	pop    esp
  4059b9:	(bad)  
  4059ba:	jo     0x40595d
  4059bc:	sbb    DWORD PTR [esi-0x1],esp
  4059bf:	sahf   
  4059c0:	xor    al,0x8
  4059c2:	cmp    dh,BYTE PTR cs:[ebx-0x47]
  4059c6:	push   ebx
  4059c7:	jmp    0x99fe:0xb27d0444
  4059ce:	outs   dx,BYTE PTR ds:[esi]
  4059cf:	push   edi
  4059d0:	popa   
  4059d1:	stc    
  4059d2:	sbb    dh,dh
  4059d4:	lock adc eax,0x4c3d8ae8
  4059da:	push   0x2d702532
  4059df:	mov    ebp,ecx
  4059e1:	nop
  4059e2:	fdivr  DWORD PTR [edi]
  4059e4:	enter  0xd00,0xa6
  4059e8:	add    eax,0x3b395a09
  4059ed:	xchg   eax,ebx
  4059ef:	data16 sti 
  4059f1:	jle    0x405a6b
  4059f3:	cmp    BYTE PTR [esi-0x73fc03ae],cl
  4059f9:	test   BYTE PTR [esi+esi*1],dl
  4059fc:	xlat   BYTE PTR ds:[ebx]
  4059fd:	(bad)  
  4059fe:	aaa    
  4059ff:	jb     0x4059b5
  405a01:	sub    al,0x84
  405a03:	inc    esi
  405a04:	fdivr  QWORD PTR [edi]
  405a06:	aad    0xe6
  405a08:	std    
  405a09:	pop    es
  405a0a:	ins    DWORD PTR es:[edi],dx
  405a0b:	xor    DWORD PTR [ecx+0x69],edx
  405a0e:	rcl    DWORD PTR [eax],1
  405a10:	arpl   WORD PTR [eax-0x5],di
  405a13:	cdq    
  405a14:	mov    edi,eax
  405a16:	jmp    0x967a7c6f
  405a1b:	ins    BYTE PTR es:[edi],dx
  405a1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a1d:	div    DWORD PTR [edx]
  405a1f:	retf   0x886c
  405a22:	adc    cl,BYTE PTR [eax+eiz*4]
  405a25:	aaa    
  405a26:	int    0x10
  405a28:	pop    edx
  405a29:	mov    ebp,0xa777e173
  405a2e:	stos   DWORD PTR es:[edi],eax
  405a2f:	jl     0x405aa6
  405a31:	jno    0x405a54
  405a33:	adc    DWORD PTR [edx],0xffffff9e
  405a36:	jns    0x4059d1
  405a38:	jecxz  0x405aac
  405a3a:	mov    DWORD PTR [edi],edx
  405a3c:	enter  0x97b6,0x99
  405a40:	retf   0xd2b1
  405a43:	fwait
  405a44:	arpl   WORD PTR [ecx-0x3e],ax
  405a47:	push   edi
  405a48:	retf   0xcf4e
  405a4b:	js     0x405aae
  405a4d:	pop    eax
  405a4e:	retf   0x8654
  405a51:	and    eax,edx
  405a53:	leave  
  405a54:	mov    ebx,0x2cdd7ad3
  405a59:	add    eax,0xe157fbcf
  405a5e:	mov    WORD PTR [ebp+0x14],cs
  405a61:	sti    
  405a62:	popa   
  405a63:	(bad)  
  405a64:	dec    edi
  405a65:	dec    esp
  405a66:	mov    edi,ecx
  405a68:	(bad)  
  405a69:	sbb    edi,DWORD PTR [edi+0x3c]
  405a6c:	mov    bl,0xaa
  405a6e:	dec    ebx
  405a6f:	test   al,0x7
  405a71:	mov    al,ds:0xd25a0a4b
  405a76:	cdq    
  405a77:	imul   ebx,ebp,0xffffffd3
  405a7a:	pop    ds
  405a7b:	and    ebp,edi
  405a7d:	pop    ebp
  405a7e:	shr    DWORD PTR [ecx+0x6b],0xb5
  405a82:	arpl   WORD PTR [edi+0x6e31947f],di
  405a88:	test   BYTE PTR [edi+esi*1],al
  405a8b:	clc    
  405a8c:	cmp    DWORD PTR [esi],0x2f
  405a8f:	jb     0x405aa2
  405a91:	sbb    ah,bl
  405a93:	repz dec esi
  405a95:	fild   DWORD PTR [ebp+0xc]
  405a98:	pop    eax
  405a99:	inc    esp
  405a9a:	outs   dx,DWORD PTR ds:[esi]
  405a9b:	add    al,0xd6
  405a9d:	jp     0x405a8f
  405a9f:	and    BYTE PTR [ecx+ebx*4-0x671627d2],bl
  405aa6:	enter  0xd804,0xe4
  405aaa:	addr16 jnp 0x405a5b
  405aad:	in     eax,dx
  405aae:	mov    bh,0x1
  405ab0:	(bad)  
  405ab1:	fcomp  st(5)
  405ab3:	scas   al,BYTE PTR es:[edi]
  405ab4:	mov    bl,0xdd
  405ab6:	mov    ecx,0x4344d370
  405abb:	mov    esi,0xb7dae6d6
  405ac0:	lds    edx,FWORD PTR [edi+ecx*1]
  405ac3:	ds and edx,0x2b
  405ac7:	cmc    
  405ac8:	jecxz  0x405ac3
  405aca:	lods   eax,DWORD PTR ds:[esi]
  405acb:	pop    ebp
  405acc:	lods   eax,DWORD PTR ds:[esi]
  405acd:	aam    0xda
  405acf:	push   edx
  405ad0:	rol    DWORD PTR [edi+0x1346f70],1
  405ad6:	fldenv [eax]
  405ad8:	scas   eax,DWORD PTR es:[edi]
  405ad9:	loopne 0x405b15
  405adb:	jne    0x405af4
  405add:	pop    ss
  405ade:	(bad)  
  405adf:	enter  0x2b1c,0xa8
  405ae3:	inc    ecx
  405ae4:	fcom   st(7)
  405ae6:	add    eax,0x52f590b6
  405aeb:	push   eax
  405aec:	push   0xffffffc0
  405aee:	icebp  
  405aef:	mov    BYTE PTR [esi-0x43],bh
  405af2:	leave  
  405af3:	inc    esp
  405af4:	xchg   ebx,eax
  405af5:	xchg   edi,eax
  405af6:	femms  
  405af8:	ret    0x5357
  405afb:	in     al,dx
  405afc:	jne    0x405b05
  405afe:	inc    edx
  405aff:	pop    ecx
  405b00:	imul   ebp,DWORD PTR [ebx],0xe5242739
  405b06:	xchg   ecx,eax
  405b07:	jae    0x405b72
  405b09:	pop    ds
  405b0a:	sbb    al,0x38
  405b0c:	in     eax,0x87
  405b0e:	or     ebx,DWORD PTR [edx-0x4c]
  405b11:	jmp    0x405ab7
  405b13:	jl     0x405af5
  405b15:	repnz retf 
  405b17:	cmp    DWORD PTR [eax-0x6312e9e9],edx
  405b1d:	in     eax,dx
  405b1e:	mov    dh,0x74
  405b20:	aas    
  405b21:	fldl2t 
  405b23:	or     DWORD PTR [ecx],edi
  405b25:	mov    al,0x1f
  405b27:	addr16 jo 0x405b0d
  405b2a:	cdq    
  405b2b:	xor    esi,DWORD PTR [esi]
  405b2d:	test   al,0x2f
  405b2f:	nop
  405b30:	leave  
  405b31:	cmp    al,0x5b
  405b33:	mov    ecx,0x5b7d6998
  405b38:	test   al,0xba
  405b3a:	and    DWORD PTR [ebx],ebp
  405b3c:	je     0x405aec
  405b3e:	dec    esi
  405b3f:	into   
  405b40:	xchg   ah,dh
  405b42:	iret   
  405b43:	sbb    ch,BYTE PTR [eax-0x6fb9ab74]
  405b49:	inc    eax
  405b4a:	imul   eax
  405b4c:	ins    BYTE PTR es:[edi],dx
  405b4d:	mov    dl,0x9f
  405b4f:	pop    edi
  405b50:	push   esi
  405b51:	lock outs dx,BYTE PTR ds:[esi]
  405b53:	push   cs
  405b54:	(bad)  
  405b55:	cdq    
  405b56:	adc    esi,esi
  405b58:	test   BYTE PTR [ebp+0x0],al
  405b5b:	retf   
  405b5c:	and    DWORD PTR [ecx],edx
  405b5e:	mov    al,0x2a
  405b60:	rol    DWORD PTR [esi+0x6f6a27d6],1
  405b66:	lea    esi,[ebp+0x3417cd51]
  405b6c:	leave  
  405b6d:	pop    ecx
  405b6e:	rol    DWORD PTR [ebx+eiz*8+0x49],1
  405b72:	scas   eax,DWORD PTR es:[edi]
  405b73:	mul    BYTE PTR [esi+0x6faf155c]
  405b79:	pusha  
  405b7a:	call   0x2c2f9be
  405b7f:	jno    0x405b25
  405b81:	dec    edi
  405b82:	mov    edx,0x7e38f7e1
  405b87:	sbb    dl,dh
  405b89:	push   ebp
  405b8a:	mov    ebx,edi
  405b8c:	es pop edi
  405b8e:	xor    DWORD PTR [esp+ebx*1-0x80],esp
  405b92:	or     BYTE PTR [esi],ah
  405b94:	adc    eax,esp
  405b96:	inc    edi
  405b97:	pop    edx
  405b98:	mov    ah,0xc7
  405b9a:	neg    BYTE PTR [esi]
  405b9c:	dec    esi
  405b9d:	pop    esi
  405b9e:	out    dx,al
  405b9f:	adc    esp,DWORD PTR ds:0xe26e153d
  405ba5:	mov    dl,0x3a
  405ba7:	cli    
  405ba8:	jne    0x405bd6
  405baa:	(bad)  
  405bab:	(bad)  
  405bac:	out    dx,eax
  405bad:	xchg   ecx,eax
  405bae:	adc    esi,0xa695b914
  405bb4:	inc    esi
  405bb5:	test   DWORD PTR [eax+0x108ebe2f],0x655ed83e
  405bbf:	dec    esp
  405bc0:	dec    ebp
  405bc1:	jno    0x405bc8
  405bc3:	imul   ecx,DWORD PTR [ecx+0x6e],0xffffffcd
  405bc7:	clc    
  405bc8:	mov    cl,0x4d
  405bca:	pop    esi
  405bcb:	addr16 dec esp
  405bcd:	aas    
  405bce:	pop    ss
  405bcf:	call   DWORD PTR [edx*2-0xd17e81a]
  405bd6:	enter  0x7df1,0x4b
  405bda:	stc    
  405bdb:	inc    ebx
  405bdc:	jb     0x405b94
  405bde:	mov    dl,0xb3
  405be0:	shl    DWORD PTR [ebp+0x4d],1
  405be3:	int    0x17
  405be5:	rcl    cl,1
  405be7:	mov    esp,ebp
  405be9:	jmp    0x405c02
  405beb:	mov    ecx,0x6fcd362c
  405bf0:	inc    esp
  405bf1:	mov    ds:0x61282f9a,eax
  405bf6:	mov    WORD PTR [eax],ss
  405bf8:	repnz imul esp,DWORD PTR [edi+0x59ff58bd],0x7e
  405c00:	jmp    0x405bbf
  405c02:	mov    ds:0xbf32ee1a,eax
  405c07:	add    DWORD PTR [eax],ebx
  405c09:	fcomip st,st(2)
  405c0b:	addr16 push ebp
  405c0d:	out    dx,eax
  405c0e:	dec    esi
  405c0f:	out    0x9a,al
  405c11:	mov    al,0xc3
  405c13:	into   
  405c14:	and    esi,ebp
  405c16:	push   edx
  405c17:	test   al,0x33
  405c19:	iret   
  405c1a:	push   es
  405c1b:	es cmp eax,0x6665f9db
  405c21:	loope  0x405c16
  405c23:	xlat   BYTE PTR ds:[ebx]
  405c24:	jno    0x405c4c
  405c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c27:	mov    cs,ecx
  405c29:	cmp    esp,DWORD PTR [edx-0x76f88794]
  405c2f:	xlat   BYTE PTR ds:[ebx]
  405c30:	xchg   esi,eax
  405c31:	cmp    al,0xfa
  405c33:	mov    dh,0xe5
  405c35:	stos   DWORD PTR es:[edi],eax
  405c36:	icebp  
  405c37:	das    
  405c38:	not    BYTE PTR [ecx+0x2039c1bb]
  405c3e:	mov    edi,0xac85102e
  405c43:	mov    al,ds:0x3bc60bf6
  405c48:	les    esi,FWORD PTR [ebx]
  405c4a:	sub    ch,al
  405c4c:	nop
  405c4d:	pop    ecx
  405c4e:	inc    eax
  405c4f:	bound  ebp,QWORD PTR [ebp-0x65]
  405c52:	and    ebx,esp
  405c54:	sbb    DWORD PTR [ebp-0x2961101f],esi
  405c5a:	lods   eax,DWORD PTR ds:[esi]
  405c5b:	cmp    al,0x1b
  405c5d:	sbb    BYTE PTR [esi],dl
  405c5f:	lods   eax,DWORD PTR ds:[esi]
  405c60:	pop    ebp
  405c61:	addr16 dec esi
  405c63:	mov    ds:0xc6a26350,eax
  405c68:	pop    ebp
  405c69:	add    al,0xc8
  405c6b:	jb     0x405c7a
  405c6d:	sub    ah,BYTE PTR [eax+0x18e83e5f]
  405c73:	fld    TBYTE PTR [ebx-0x1b]
  405c76:	div    BYTE PTR [edx+0x7]
  405c79:	or     DWORD PTR [edi+0x30db8364],0x38
  405c80:	mov    esi,0x16995bb3
  405c85:	shl    BYTE PTR [ebx+ebx*2-0x3f5277e9],0x21
  405c8d:	jg     0x405c81
  405c8f:	jmp    0x405c5f
  405c91:	std    
  405c92:	mov    ch,cl
  405c94:	and    eax,0xfcae90d0
  405c99:	ja     0x405d1a
  405c9b:	cmp    DWORD PTR [eax],0xd6e02dc9
  405ca1:	dec    eax
  405ca2:	or     al,0xc0
  405ca4:	xor    DWORD PTR [ebp-0x1bce0c84],edx
  405caa:	shl    DWORD PTR [ebp-0x439f3957],1
  405cb0:	and    cl,BYTE PTR [ebx+0x20]
  405cb3:	ficomp DWORD PTR [edx]
  405cb5:	daa    
  405cb6:	mov    al,ds:0x3abca25b
  405cbb:	imul   esi,DWORD PTR [eax+eax*8-0x361a3e6d],0x8dc31aa3
  405cc6:	test   al,0x3c
  405cc8:	loope  0x405cc7
  405cca:	das    
  405ccb:	xchg   ecx,eax
  405ccc:	mov    ds:0x90a9831d,al
  405cd1:	sbb    eax,0x857d4dab
  405cd6:	test   BYTE PTR [ebx],ch
  405cd8:	shr    DWORD PTR [ecx-0x19d7b078],0xa8
  405cdf:	or     ch,BYTE PTR [esp+ecx*4+0x4f1e24fb]
  405ce6:	arpl   WORD PTR ds:0xa291428c,bp
  405cec:	or     ebp,esp
  405cee:	xchg   esp,eax
  405cef:	sub    eax,0x50f9068a
  405cf4:	fs out dx,al
  405cf6:	cmp    DWORD PTR [edx-0x38],eax
  405cf9:	fistp  DWORD PTR [edi]
  405cfb:	pop    ss
  405cfc:	sub    edx,DWORD PTR [ecx+0x6089184a]
  405d02:	sbb    eax,0x3cd7fc9c
  405d07:	push   0x56
  405d09:	stc    
  405d0a:	icebp  
  405d0b:	repnz mov ecx,0xb4bde256
  405d11:	mov    ebp,ecx
  405d13:	aad    0x7b
  405d15:	call   0x84bbc103
  405d1a:	push   esi
  405d1b:	mov    edi,0xc7f84ea8
  405d20:	out    dx,eax
  405d21:	and    BYTE PTR [ebx+0x66],dh
  405d24:	push   ds
  405d25:	xchg   edi,eax
  405d26:	push   edx
  405d27:	adc    edi,ebp
  405d29:	jmp    0xb69271dd
  405d2e:	mov    BYTE PTR [edx+0x4f22687],dh
  405d34:	aad    0x38
  405d36:	xor    al,0x4b
  405d38:	jecxz  0x405d59
  405d3a:	cmc    
  405d3b:	in     al,0x33
  405d3d:	add    al,BYTE PTR [edi]
  405d3f:	jle    0x405d5e
  405d41:	inc    ebp
  405d42:	cmp    eax,0x3312431
  405d47:	adc    BYTE PTR [edx+0x7664c4ca],dh
  405d4d:	xor    BYTE PTR ds:0x2dbaa1d7,ah
  405d53:	add    al,BYTE PTR [ecx]
  405d55:	cmp    al,BYTE PTR [ecx+0x24]
  405d58:	push   ebx
  405d59:	xchg   BYTE PTR [edi-0x23],cl
  405d5c:	not    DWORD PTR [esi]
  405d5e:	sbb    DWORD PTR [ecx+0x20],0x5cbb707d
  405d65:	jge    0x405d18
  405d67:	mov    edi,0x44186e7f
  405d6c:	adc    BYTE PTR [esi+edi*1-0x7900b196],ah
  405d73:	data16 jae 0x405de7
  405d76:	test   al,0x26
  405d78:	out    dx,al
  405d79:	stc    
  405d7a:	xchg   BYTE PTR [edi],dh
  405d7c:	das    
  405d7d:	lock mov al,0xea
  405d80:	inc    edi
  405d81:	mov    eax,ds:0x5e5fa90e
  405d86:	repz and cl,BYTE PTR [edx-0x3ffaf4]
  405d8d:	(bad)  
  405d8e:	jmp    0x405d52
  405d90:	test   eax,0x7be73577
  405d95:	jne    0x405d85
  405d97:	adc    al,0x2b
  405d99:	mov    ecx,0xb26d2328
  405d9e:	(bad)  
  405d9f:	push   esi
  405da0:	popa   
  405da1:	stos   BYTE PTR es:[edi],al
  405da2:	sbb    ebx,eax
  405da4:	mov    eax,ds:0x4b441e74
  405da9:	and    dh,ch
  405dab:	cdq    
  405dac:	nop
  405dad:	push   eax
  405dae:	inc    esi
  405daf:	mov    bl,0x6
  405db1:	out    0x22,al
  405db3:	jae    0x405d5b
  405db5:	mov    cs,esp
  405db7:	shl    DWORD PTR [edi-0x63],1
  405dba:	or     DWORD PTR [ebx+ebx*4+0x6e9aa095],edi
  405dc1:	and    esp,DWORD PTR [edx-0x37]
  405dc4:	fldenv [ebx+0x426fa8c2]
  405dca:	push   ss
  405dcb:	loope  0x405d86
  405dcd:	fstp   QWORD PTR [ecx+0x4215412f]
  405dd3:	sbb    ah,BYTE PTR [ebp+0x17]
  405dd6:	in     al,0xe
  405dd8:	mov    ebp,0xf5f4122e
  405ddd:	mov    bh,0x9e
  405ddf:	std    
  405de0:	dec    esp
  405de1:	pop    ds
  405de2:	lahf   
  405de3:	ret    0x2c48
  405de6:	mov    edi,0xad2527bd
  405deb:	dec    edi
  405dec:	ins    BYTE PTR es:[edi],dx
  405ded:	(bad)  
  405dee:	jle    0x405e09
  405df0:	push   ebp
  405df1:	add    al,bh
  405df3:	and    DWORD PTR [esi+edi*2+0x2f],ebx
  405df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405df8:	inc    esp
  405df9:	test   DWORD PTR es:[eax+0x75d39b5b],0xa161cde7
  405e04:	sbb    esi,DWORD PTR [edx]
  405e06:	and    eax,0x8f66fba6
  405e0b:	pop    es
  405e0c:	fst    DWORD PTR ds:0xf11b46ec
  405e12:	call   0x2e37eed9
  405e17:	jle    0x405dda
  405e19:	pop    ds
  405e1a:	mov    BYTE PTR [ecx],ah
  405e1c:	dec    eax
  405e1d:	test   al,0x61
  405e1f:	jecxz  0x405e45
  405e21:	mov    ah,0x42
  405e23:	pop    ebx
  405e24:	or     dl,dl
  405e26:	add    BYTE PTR [ebx+0x16],0x7a
  405e2a:	add    al,0xeb
  405e2c:	mul    ch
  405e2e:	mov    eax,ds:0x75bd2f76
  405e33:	neg    al
  405e35:	or     DWORD PTR [ebp-0xffcd098],eax
  405e3b:	add    al,BYTE PTR [edi+edx*8+0xa]
  405e3f:	add    DWORD PTR [ebx+0x69e39b91],eax
  405e45:	mov    dh,0x14
  405e47:	shr    DWORD PTR [edi],cl
  405e49:	add    bl,BYTE PTR [edx+edi*4]
  405e4c:	test   eax,0x634f0bc6
  405e51:	cmp    bh,BYTE PTR [eax-0x5c]
  405e54:	mov    BYTE PTR [esi],al
  405e56:	mov    ch,0xe3
  405e58:	jg     0x405e48
  405e5a:	(bad)  
  405e5b:	fdivp  st(5),st
  405e5d:	cld    
  405e5e:	jb     0x405de8
  405e60:	jo     0x405e94
  405e62:	pop    edx
  405e63:	clc    
  405e64:	frstor [eax]
  405e66:	in     al,dx
  405e67:	jo     0x405ed0
  405e69:	mov    eax,0x49a93e35
  405e6e:	test   eax,0xc9ee1552
  405e73:	xor    al,0x79
  405e75:	cld    
  405e76:	clc    
  405e77:	xchg   DWORD PTR [ebp+0x11],esi
  405e7a:	jbe    0x405e8a
  405e7c:	je     0x405e3f
  405e7e:	std    
  405e7f:	push   eax
  405e80:	fsubr  QWORD PTR [edi*2+0x794f24f1]
  405e87:	cmp    cl,0xb4
  405e8a:	inc    ecx
  405e8b:	int3   
  405e8c:	mov    ch,0x3d
  405e8e:	jecxz  0x405e37
  405e90:	sub    edi,edx
  405e92:	cwde   
  405e93:	add    al,0x14
  405e95:	sub    ch,BYTE PTR [esi+0x46]
  405e98:	in     al,dx
  405e99:	fwait
  405e9a:	test   eax,0xef94747b
  405e9f:	data16 add al,0x56
  405ea2:	iret   
  405ea3:	retf   0xdf83
  405ea6:	fisub  DWORD PTR [ebx-0x4fad7d27]
  405eac:	mov    bh,0xb2
  405eae:	mov    bh,0x50
  405eb0:	inc    ecx
  405eb1:	add    ecx,ebx
  405eb3:	jb     0x405efb
  405eb5:	add    al,BYTE PTR [edx+0x6a]
  405eb8:	cli    
  405eb9:	mov    eax,ds:0x537ba804
  405ebe:	add    DWORD PTR [ebx],ecx
  405ec0:	pop    ecx
  405ec1:	dec    esp
  405ec2:	fsubr  st(7),st
  405ec4:	ficomp WORD PTR ds:0x710489f5
  405eca:	push   esp
  405ecb:	dec    ebp
  405ecc:	dec    ebx
  405ecd:	mov    esi,0xae87ec2d
  405ed2:	mov    ecx,0xa2949cc
  405ed7:	add    al,0xdc
  405ed9:	addr16 (bad) 
  405edc:	in     eax,dx
  405edd:	dec    esp
  405ede:	and    BYTE PTR [edx+edx*2-0x7],ah
  405ee2:	adc    al,0xe4
  405ee4:	fst    QWORD PTR [edx]
  405ee6:	dec    esp
  405ee7:	adc    al,0xdc
  405ee9:	dec    esp
  405eea:	pusha  
  405eeb:	dec    ebp
  405eec:	pop    ds
  405eed:	xor    al,0x52
  405eef:	mov    ecx,0x5b0e730e
  405ef4:	add    BYTE PTR [ecx+esi*8],ah
  405ef7:	addr16 mov eax,ds:0xcef5
  405efb:	rol    BYTE PTR ds:0xcea8,cl
  405f00:	push   ebx
  405f01:	dec    edx
  405f02:	jnp    0x405f00
  405f04:	mov    edi,0x4d3b775d
  405f09:	stc    
  405f0a:	out    0x99,al
  405f0c:	cs xor eax,0x2bb30af3
  405f12:	push   cs
  405f13:	sbb    al,0x7c
  405f15:	outs   dx,DWORD PTR ds:[esi]
  405f16:	adc    BYTE PTR [edi],bl
  405f18:	sahf   
  405f19:	mov    al,ds:0xc98dd879
  405f1e:	push   edx
  405f1f:	std    
  405f20:	cmp    DWORD PTR [edi-0x7100ba4d],esi
  405f26:	and    BYTE PTR [ebp+0x1b5c0154],ch
  405f2c:	(bad)  
  405f2d:	aad    0x22
  405f2f:	js     0x405f3d
  405f31:	fdiv   QWORD PTR [ebx+0xeca4e94]
  405f37:	cmc    
  405f38:	mov    bh,0xe5
  405f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f3b:	test   BYTE PTR [esi+0x79],bl
  405f3e:	inc    ebp
  405f3f:	sbb    eax,0xca400b02
  405f44:	adc    ecx,DWORD PTR [esi]
  405f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f47:	jns    0x405ef0
  405f49:	ds scas eax,DWORD PTR es:[edi]
  405f4b:	dec    esi
  405f4c:	dec    ebp
  405f4d:	out    0x46,al
  405f4f:	ins    DWORD PTR es:[edi],dx
  405f50:	ficomp WORD PTR [ebp+0x28]
  405f53:	stos   DWORD PTR es:[edi],eax
  405f54:	push   ebx
  405f55:	mov    eax,0xf5eb74f4
  405f5a:	pop    esp
  405f5b:	bound  ecx,QWORD PTR [ebx-0x35130a9e]
  405f61:	jb     0x405f92
  405f63:	cld    
  405f64:	inc    ebx
  405f65:	inc    eax
  405f66:	and    ebx,ebp
  405f68:	adc    al,0xf
  405f6a:	hlt    
  405f6b:	lahf   
  405f6c:	jg     0x405fe6
  405f6e:	in     eax,dx
  405f6f:	mov    BYTE PTR [ecx+0x75],al
  405f72:	dec    esp
  405f73:	xchg   BYTE PTR [ecx-0x1f],dl
  405f76:	aaa    
  405f77:	popf   
  405f78:	pusha  
  405f79:	adc    ebx,DWORD PTR [edi+ebx*2]
  405f7c:	sbb    DWORD PTR [eax+0x26e2f557],ebx
  405f82:	mov    ebx,cr7
  405f85:	es popa 
  405f87:	sbb    DWORD PTR [esi-0x10],ebx
  405f8a:	add    al,0xc1
  405f8c:	mov    esi,0x4ac0eefd
  405f91:	cdq    
  405f92:	cmp    dl,BYTE PTR [edx+0x14]
  405f95:	test   eax,0x2f2dfa68
  405f9a:	sub    ebx,DWORD PTR [edx-0x684d8f48]
  405fa0:	add    eax,ebp
  405fa2:	(bad)  
  405fa3:	jbe    0x406012
  405fa5:	sub    ah,BYTE PTR [edi+0x4b0009d0]
  405fab:	xchg   ebp,eax
  405fac:	push   ebx
  405fad:	cwde   
  405fae:	int3   
  405faf:	je     0x405f43
  405fb1:	xchg   BYTE PTR [esi-0x5a3a73c4],dl
  405fb7:	mov    es,WORD PTR [eax]
  405fb9:	push   cs
  405fba:	and    esp,DWORD PTR [edx-0x567c74fa]
  405fc0:	xchg   esi,eax
  405fc1:	int    0xf
  405fc3:	aam    0xea
  405fc5:	inc    esp
  405fc6:	ret    0xdc4d
  405fc9:	call   0x893f:0x26900247
  405fd0:	xchg   DWORD PTR [ebp+0x159acb2c],eax
  405fd6:	(bad)  
  405fd7:	das    
  405fd8:	mov    dl,0xf8
  405fda:	inc    ebx
  405fdb:	push   cs
  405fdc:	jge    0x406014
  405fde:	jno    0x405fb0
  405fe0:	xor    esi,DWORD PTR [eax-0x48947cd4]
  405fe6:	retf   0xfe24
  405fe9:	push   esi
  405fea:	inc    ebx
  405feb:	mov    al,0x6e
  405fed:	and    al,0x67
  405fef:	pop    edi
  405ff0:	aaa    
  405ff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ff2:	fwait
  405ff3:	dec    ebx
  405ff4:	and    DWORD PTR [eax],0x4cd44044
  405ffa:	call   0xbeaaaeff
  405fff:	lods   eax,DWORD PTR ds:[esi]
  406000:	loope  0x405fe0
  406002:	xchg   edi,eax
  406003:	imul   esi,ebx,0x5a61af63
  406009:	pushf  
  40600a:	call   0xd3fb:0x7bd920c8
  406011:	data16 mov bl,0x60
  406014:	push   cs
  406015:	adc    eax,0x64ebf7ed
  40601a:	jnp    0x40604c
  40601c:	and    ebp,ecx
  40601e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40601f:	in     al,dx
  406020:	lea    edx,ds:0x506fd84e
  406026:	pop    eax
  406027:	jge    0x406077
  406029:	adc    DWORD PTR [edx-0x203370b7],eax
  40602f:	pop    ss
  406030:	add    al,0x24
  406032:	dec    ebp
  406033:	xor    DWORD PTR [ebx+0x59d9ed3b],edi
  406039:	jnp    0x40609e
  40603b:	arpl   WORD PTR [eax+0x1fc2045],di
  406041:	push   ecx
  406042:	mov    cl,0x34
  406044:	ja     0x406032
  406046:	cmp    eax,0x76fd1e99
  40604b:	ds scas eax,DWORD PTR es:[edi]
  40604d:	stc    
  40604e:	sahf   
  40604f:	pop    ecx
  406050:	dec    edi
  406051:	lahf   
  406052:	mov    fs,WORD PTR [edi+0x10]
  406055:	mov    ds:0xe96e538b,eax
  40605a:	xor    DWORD PTR [ebp-0xbc8ae6a],esp
  406060:	xchg   ecx,eax
  406061:	int3   
  406062:	and    cl,dl
  406064:	fsub   QWORD PTR [edx]
  406066:	or     DWORD PTR [eax+edi*2],0xffffffa2
  40606a:	xchg   ecx,eax
  40606b:	inc    edx
  40606c:	stos   DWORD PTR es:[edi],eax
  40606d:	pop    esp
  40606e:	and    BYTE PTR [edx],bh
  406070:	fist   DWORD PTR [ebx]
  406072:	sub    ch,BYTE PTR [eax-0x2c12faaf]
  406078:	xabort 0x5e
  40607b:	mov    ebx,0x7ca45004
  406080:	mov    esi,0x3076db74
  406085:	xor    BYTE PTR [ecx+edi*8-0xe08231d],ch
  40608c:	jle    0x406066
  40608e:	test   DWORD PTR [edi+0x1a0c914e],ebx
  406094:	mov    esi,0xe5b2df52
  406099:	pop    ss
  40609a:	cmc    
  40609b:	or     bh,ah
  40609d:	div    BYTE PTR [edi+0x1]
  4060a0:	mov    ebx,0x2c62dba5
  4060a5:	add    BYTE PTR [ecx],0x31
  4060a8:	shl    esi,cl
  4060aa:	pop    edx
  4060ab:	add    DWORD PTR [ebx-0x61],0xffffffa3
  4060af:	pop    edx
  4060b0:	retf   
  4060b1:	dec    ebx
  4060b2:	dec    esi
  4060b3:	sbb    BYTE PTR [ebp+0x3d],bl
  4060b6:	shr    esi,1
  4060b8:	adc    DWORD PTR [edi-0x6b],ecx
  4060bb:	(bad)  
  4060bc:	sbb    eax,0x74b104f
  4060c1:	mov    al,ds:0x1f0234fb
  4060c6:	mov    eax,0xbe65f1e8
  4060cb:	loop   0x4060cd
  4060cd:	ss mov cl,0x7e
  4060d0:	adc    edx,0x9ff2aac3
  4060d6:	sbb    cl,ah
  4060d8:	lods   al,BYTE PTR ds:[esi]
  4060d9:	dec    esp
  4060da:	js     0x406156
  4060dc:	sbb    eax,0x4f30056f
  4060e1:	ret    
  4060e2:	push   edx
  4060e3:	lea    edi,[ebp-0x6a]
  4060e6:	clc    
  4060e7:	mov    ds:0x359021a5,eax
  4060ec:	hlt    
  4060ed:	mov    al,ds:0x6a4f0e
  4060f2:	jo     0x406114
  4060f4:	inc    edx
  4060f5:	leave  
  4060f6:	pop    edx
  4060f7:	add    bh,al
  4060f9:	jl     0x4060d9
  4060fb:	xlat   BYTE PTR ds:[ebx]
  4060fc:	sub    dl,BYTE PTR [ebp+0x153514e]
  406102:	push   edx
  406103:	push   es
  406104:	popf   
  406105:	pop    eax
  406106:	adc    al,0x25
  406108:	pop    eax
  406109:	pop    ebp
  40610a:	inc    edx
  40610b:	cmp    esp,esi
  40610d:	mov    ch,0xa6
  40610f:	xlat   BYTE PTR ds:[ebx]
  406110:	out    0x99,al
  406112:	and    BYTE PTR [edi-0x29ca44d2],dh
  406118:	jg     0x4060fe
  40611a:	mov    WORD PTR [eax-0x5ce5a084],fs
  406120:	jae    0x4060a5
  406122:	sub    dh,BYTE PTR [edx-0x43]
  406125:	mov    DWORD PTR ds:0x5ca42197,0x9a9da84
  40612f:	add    esp,0xffffffe4
  406132:	cmp    BYTE PTR [esi+ecx*1],ch
  406135:	fldcw  WORD PTR [esi]
  406137:	jno    0x406171
  406139:	into   
  40613a:	aam    0xb5
  40613c:	(bad)  
  40613d:	jb     0x406198
  40613f:	pushf  
  406140:	push   0x1b
  406142:	sbb    BYTE PTR [ecx+0x2e8e29eb],dl
  406148:	test   BYTE PTR [ecx+edx*2],al
  40614b:	dec    ecx
  40614c:	pop    edi
  40614d:	push   eax
  40614e:	adc    al,bl
  406150:	test   al,0xed
  406152:	add    ebx,DWORD PTR [edi]
  406154:	adc    bh,ch
  406156:	mov    cl,0xd6
  406158:	aam    0x1f
  40615a:	xor    DWORD PTR [edi],esp
  40615c:	mov    ch,0x2f
  40615e:	mov    ebp,0xb5a66051
  406163:	sub    DWORD PTR [ebp+ebx*4-0x5401dd9e],0x3bc2112
  40616e:	fst    QWORD PTR [edx-0x4b]
  406171:	pop    es
  406172:	lahf   
  406173:	and    edi,edx
  406175:	(bad)  
  406176:	sbb    DWORD PTR [ebx],edx
  406178:	shl    BYTE PTR [edx+edx*1],cl
  40617b:	and    BYTE PTR [ebx],ch
  40617d:	push   eax
  40617e:	and    esp,eax
  406180:	adc    bl,BYTE PTR [edi+ebx*8+0x50c92053]
  406187:	mov    bl,0xca
  406189:	inc    ebp
  40618a:	mov    es,WORD PTR [edi+0x29288754]
  406190:	sub    al,BYTE PTR [edi+0x4d0a282d]
  406196:	test   eax,0x481e9fe7
  40619b:	addr16 mov eax,edi
  40619e:	ss arpl ax,si
  4061a1:	mov    eax,0xb692e70a
  4061a6:	fsubr  st,st(4)
  4061a8:	mov    esp,0x74fd47ee
  4061ad:	pop    edx
  4061ae:	enter  0xfadc,0x82
  4061b2:	iret   
  4061b3:	jecxz  0x406185
  4061b5:	dec    eax
  4061b6:	xchg   edi,eax
  4061b7:	dec    ebx
  4061b8:	mov    BYTE PTR [ecx+ebx*1-0x1e],bh
  4061bc:	sar    dl,1
  4061be:	or     BYTE PTR [edx+ecx*1+0x33],dh
  4061c2:	imul   edi,DWORD PTR [edx],0xffffffb5
  4061c5:	stc    
  4061c6:	add    edi,esi
  4061c8:	or     ecx,edx
  4061ca:	ret    
  4061cb:	mov    dh,0xdd
  4061cd:	and    dh,al
  4061cf:	test   DWORD PTR [edi+esi*8+0x20],esi
  4061d3:	push   esp
  4061d4:	push   ecx
  4061d5:	adc    bl,BYTE PTR [edx]
  4061d7:	inc    ecx
  4061d8:	sbb    BYTE PTR [eax],bh
  4061da:	lds    edi,FWORD PTR [esi+edx*2]
  4061dd:	cli    
  4061de:	mov    WORD PTR [esi-0x32],cs
  4061e1:	ror    DWORD PTR [ebx-0x56],0x50
  4061e5:	repz and BYTE PTR [edi+ecx*8+0x0],dh
  4061ea:	dec    edi
  4061eb:	mov    dl,0x5f
  4061ed:	sti    
  4061ee:	mov    al,0x49
  4061f0:	call   0x6d2a:0x2a42406
  4061f7:	push   cs
  4061f8:	sbb    eax,0x5b1668a8
  4061fd:	jo     0x40623e
  4061ff:	sub    edx,esp
  406201:	leave  
  406202:	fs in  al,0x4f
  406205:	inc    esp
  406206:	fldenv [ecx+eax*4+0x6f]
  40620a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40620b:	xor    ch,ch
  40620d:	in     eax,0xa
  40620f:	mov    dl,0xaa
  406211:	mov    ebp,0xa45416d5
  406216:	sbb    esi,eax
  406218:	pop    ecx
  406219:	test   DWORD PTR [esi-0x3d6e7063],0x879f3c15
  406223:	pusha  
  406224:	pop    esi
  406225:	mov    ah,0x60
  406227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406228:	loopne 0x406242
  40622a:	out    dx,eax
  40622b:	or     al,0xa3
  40622d:	inc    esi
  40622e:	cdq    
  40622f:	stc    
  406230:	push   esp
  406231:	and    eax,0x54ea1a3d
  406236:	pop    ds
  406237:	cmp    esi,DWORD PTR [eax+0x15]
  40623a:	cmp    DWORD PTR [esi+ebx*1-0xb0597ad],edi
  406241:	xor    eax,0xe90b2f
  406246:	mov    eax,0x273790fa
  40624b:	fxch   st(3)
  40624d:	mov    esp,0x2983cc76
  406252:	mov    edx,0x7738a1ed
  406257:	pop    ecx
  406258:	fcom   QWORD PTR [esi+0x414f1b0e]
  40625e:	xor    al,0xbc
  406260:	ins    DWORD PTR es:[edi],dx
  406261:	adc    esp,edi
  406263:	jmp    0x406256
  406265:	pusha  
  406266:	aam    0xca
  406268:	mov    edx,0xad2ad94b
  40626d:	fnstenv [edi-0x7c]
  406270:	sub    ch,BYTE PTR [edx-0x292b1912]
  406276:	fnstcw WORD PTR ds:0x906f851d
  40627c:	jmp    0xab8dd55b
  406281:	jmp    0xf3a4:0x78035a01
  406288:	sbb    dh,ch
  40628a:	inc    esp
  40628b:	xlat   BYTE PTR ds:[ebx]
  40628c:	xor    bl,al
  40628e:	sub    al,0xea
  406290:	ds ffree st(0)
  406293:	outs   dx,DWORD PTR ds:[esi]
  406294:	test   eax,0xc95fca61
  406299:	into   
  40629a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40629b:	sbb    esp,DWORD PTR [edi]
  40629d:	jmp    0x97f5:0x87644a85
  4062a4:	outs   dx,DWORD PTR ds:[esi]
  4062a5:	add    BYTE PTR [eax-0x27],cl
  4062a8:	mov    edi,0x1ac819b9
  4062ad:	lods   eax,DWORD PTR ds:[esi]
  4062ae:	aaa    
  4062af:	out    dx,al
  4062b0:	pop    ss
  4062b1:	leave  
  4062b2:	cld    
  4062b3:	in     eax,0x99
  4062b5:	out    dx,al
  4062b6:	out    0x4d,eax
  4062b8:	cdq    
  4062b9:	outs   dx,BYTE PTR ds:[esi]
  4062ba:	stos   DWORD PTR es:[edi],eax
  4062bb:	mov    ?,WORD PTR [eax+0x1b]
  4062be:	cld    
  4062bf:	les    edi,FWORD PTR [ebp-0x16]
  4062c2:	or     eax,0x9b49332d
  4062c7:	sub    al,BYTE PTR [eax-0x5f]
  4062ca:	push   eax
  4062cb:	push   edi
  4062cc:	fnstenv [eax+0x4fc59b90]
  4062d2:	cmp    BYTE PTR [ebp-0x6242dcc3],dh
  4062d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062d9:	add    DWORD PTR [esi],ebx
  4062db:	sub    eax,0x7157ce6a
  4062e0:	cwde   
  4062e1:	rol    DWORD PTR [esi-0xb],cl
  4062e4:	daa    
  4062e5:	std    
  4062e6:	stos   DWORD PTR es:[edi],eax
  4062e7:	ret    0x5da4
  4062ea:	call   0x1e44:0xfc331361
  4062f1:	pop    ebp
  4062f2:	and    DWORD PTR [ebx],edx
  4062f4:	inc    eax
  4062f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062f6:	dec    edi
  4062f7:	jle    0x406334
  4062f9:	push   0x612425db
  4062fe:	addr16 mov ebx,0xea205c45
  406304:	and    esi,ebx
  406306:	out    dx,eax
  406307:	cld    
  406308:	rcr    BYTE PTR [ecx+eax*1],cl
  40630b:	(bad)  
  40630c:	push   eax
  40630d:	and    al,0x88
  40630f:	sub    eax,0xa2af1e6d
  406314:	cmp    eax,DWORD PTR [eax]
  406316:	ins    DWORD PTR es:[edi],dx
  406317:	out    0xe1,al
  406319:	xchg   DWORD PTR [ecx],eax
  40631b:	xor    eax,0xe92fdb88
  406320:	out    dx,eax
  406321:	add    BYTE PTR [ecx],ah
  406323:	dec    esi
  406324:	into   
  406325:	jbe    0x40632b
  406327:	cs dec ecx
  406329:	aad    0x0
  40632b:	mov    al,0xf9
  40632d:	fld    st(6)
  40632f:	push   ss
  406330:	loope  0x406397
  406332:	sub    al,BYTE PTR [edi+0x49]
  406335:	jecxz  0x406310
  406337:	cld    
  406338:	and    BYTE PTR [esi+edi*1],bh
  40633b:	test   BYTE PTR [ecx-0x6133a132],ah
  406341:	push   0xffffff9f
  406343:	jg     0x406343
  406345:	sar    DWORD PTR [edi-0x2d],cl
  406348:	push   edx
  406349:	mov    bp,0x34ba
  40634d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40634e:	scas   al,BYTE PTR es:[edi]
  40634f:	je     0x4063c0
  406351:	seto   BYTE PTR [esi-0x453bef10]
  406358:	call   0x29e1:0x29693600
  40635f:	mov    ebx,0x9a3d4876
  406364:	cs fs or al,0x9
  406368:	addr16 es ds ds test al,0xee
  40636e:	inc    esi
  40636f:	and    edx,0x40cf0f0c
  406375:	pop    ss
  406376:	imul   edi,DWORD PTR [ebx],0x2e5fa731
  40637c:	outs   dx,DWORD PTR ds:[esi]
  40637d:	mov    eax,0x54aed964
  406382:	stos   BYTE PTR es:[edi],al
  406383:	jnp    0x406337
  406385:	cmp    al,0x49
  406387:	sbb    BYTE PTR [edx+0x24fceea1],dh
  40638d:	adc    eax,0x1a9738fe
  406392:	push   0xffffffea
  406394:	mov    cl,0x31
  406396:	cmp    ecx,DWORD PTR [ebx+0x62]
  406399:	or     al,0xaa
  40639b:	jge    0x40638d
  40639d:	cmp    ebp,esp
  40639f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063a0:	jne    0x406413
  4063a2:	and    BYTE PTR [edx+0x556c46ac],bl
  4063a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063a9:	pop    es
  4063aa:	jl     0x4063e3
  4063ac:	fcom   DWORD PTR [esi-0x6]
  4063af:	mov    eax,0x9e6cc4b9
  4063b4:	and    DWORD PTR [ebp-0xab58d93],0xffffffa5
  4063bb:	in     eax,dx
  4063bc:	int3   
  4063bd:	fdiv   st(5),st
  4063bf:	pop    edx
  4063c0:	adc    DWORD PTR [esi-0x48],ebx
  4063c3:	mov    ah,0x12
  4063c5:	pop    ecx
  4063c6:	push   ss
  4063c7:	jmp    0xa60e:0xe19ee8f0
  4063ce:	iret   
  4063cf:	xor    BYTE PTR [edi+ebx*8-0x46],al
  4063d3:	outs   dx,BYTE PTR ds:[esi]
  4063d4:	js     0x4063a4
  4063d6:	fs dec ebx
  4063d8:	shr    DWORD PTR [ebx-0x57371f1a],cl
  4063de:	outs   dx,BYTE PTR es:[esi]
  4063e0:	or     dh,BYTE PTR [edi-0x6a9544a9]
  4063e6:	sub    dh,ah
  4063e8:	lea    esi,[edx+edi*8]
  4063eb:	cmp    al,0x57
  4063ed:	inc    esp
  4063ee:	mov    ebx,0x7b8e7c2e
  4063f3:	cdq    
  4063f4:	fld    st(2)
  4063f6:	ret    
  4063f7:	mov    esp,0x8f649a2e
  4063fc:	add    DWORD PTR [ecx+0x4a],0x322c744
  406403:	ins    DWORD PTR es:[edi],dx
  406404:	stc    
  406405:	leave  
  406406:	push   esi
  406407:	sub    BYTE PTR [eax+0x6d],0xad
  40640b:	cmp    ecx,0xe06f2213
  406411:	imul   ecx,DWORD PTR [ecx],0x47e86d26
  406417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406418:	adc    BYTE PTR [eax+0x21081c0b],dl
  40641e:	fnstenv [ebp+0x13]
  406421:	cmp    eax,0x8727b15c
  406426:	cs push ebp
  406428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406429:	out    0xee,eax
  40642b:	test   eax,0x438e7dc9
  406430:	push   edi
  406431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406432:	jne    0x4063f0
  406434:	sub    BYTE PTR [ecx-0x233b8d3b],0x8c
  40643b:	or     eax,esp
  40643d:	arpl   WORD PTR [edi-0x5c],di
  406440:	int    0x1e
  406442:	test   al,0xea
  406444:	mov    esi,0x2e4ecf6a
  406449:	or     esp,DWORD PTR [edi-0x292e7337]
  40644f:	or     al,0x56
  406451:	mov    eax,0xc9cbef68
  406456:	lahf   
  406457:	sbb    al,0x8a
  406459:	stos   DWORD PTR es:[edi],eax
  40645a:	jge    0x406455
  40645c:	ficom  WORD PTR [edi+0x3e]
  40645f:	jne    0x4064de
  406461:	xchg   ebx,eax
  406462:	mov    ds:0xf4e123e,al
  406467:	mov    DWORD PTR [eax+ebx*1-0x66],ebx
  40646b:	mov    ds:0x582516f7,al
  406470:	(bad)  
  406472:	data16 sub al,0x18
  406475:	ret    0x9846
  406478:	addr16 out dx,eax
  40647a:	cwde   
  40647b:	in     al,dx
  40647c:	(bad)  
  40647d:	sbb    al,0x71
  40647f:	push   0x4345b45e
  406484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406485:	pop    eax
  406486:	pop    ebx
  406487:	sbb    eax,0xa1bb3ac7
  40648c:	sbb    BYTE PTR [eax],0xd7
  40648f:	(bad)  
  406490:	pusha  
  406491:	ret    
  406492:	mov    ch,0x1
  406494:	leave  
  406495:	frstor [edx+0x2b]
  406498:	ja     0x406430
  40649a:	pop    esp
  40649b:	mov    ds:0xbcba5e18,al
  4064a0:	cdq    
  4064a1:	mov    dh,0xe1
  4064a3:	mov    bh,0x90
  4064a5:	js     0x406512
  4064a7:	cld    
  4064a8:	clc    
  4064a9:	lahf   
  4064aa:	loope  0x4064cd
  4064ac:	inc    ecx
  4064ad:	stos   BYTE PTR es:[edi],al
  4064ae:	inc    edi
  4064af:	(bad)  
  4064b0:	ss jnp 0x4064ac
  4064b3:	push   cs
  4064b4:	das    
  4064b5:	stos   BYTE PTR es:[edi],al
  4064b6:	lahf   
  4064b7:	outs   dx,BYTE PTR ds:[esi]
  4064b8:	dec    ebp
  4064b9:	call   0xdda0b1be
  4064be:	(bad)  
  4064c0:	mov    ecx,0x1363609
  4064c5:	inc    edx
  4064c6:	bound  esp,QWORD PTR [edi+0x2]
  4064c9:	add    DWORD PTR [edx],esi
  4064cb:	xor    esp,DWORD PTR [esi]
  4064cd:	nop
  4064ce:	js     0x406496
  4064d0:	sbb    DWORD PTR [ecx],0x69
  4064d3:	loop   0x406467
  4064d5:	sbb    ebp,DWORD PTR [edi+0x5b]
  4064d8:	add    eax,0xec7e868e
  4064dd:	mov    eax,ds:0xa050c16c
  4064e2:	jl     0x406490
  4064e4:	lock pop esi
  4064e6:	call   0x9bfd972f
  4064eb:	fsubr  QWORD PTR [ebx]
  4064ed:	lods   al,BYTE PTR ds:[esi]
  4064ee:	and    eax,0x2350c881
  4064f3:	int    0x40
  4064f5:	xor    esi,DWORD PTR [esi-0x5dcaf9a6]
  4064fb:	ret    
  4064fc:	or     edi,ebx
  4064fe:	pop    ebp
  4064ff:	and    dh,BYTE PTR [edx]
  406501:	nop
  406502:	pop    ebx
  406503:	fucom  st(0)
  406505:	mov    ?,eax
  406507:	and    BYTE PTR [ecx+ecx*1],0xfa
  40650b:	sub    ch,cl
  40650d:	retf   0xb2fa
  406510:	comiss xmm1,DWORD PTR [eax-0x46]
  406514:	(bad)  
  406515:	gs xchg ebp,eax
  406517:	call   0xfa9:0x320a
  40651d:	rcl    BYTE PTR [esi-0x4c0ca02d],1
  406523:	hlt    
  406524:	sahf   
  406525:	adc    ebx,DWORD PTR [esi]
  406527:	push   edx
  406528:	stos   BYTE PTR es:[edi],al
  406529:	ficomp DWORD PTR [edi-0x47]
  40652c:	inc    esp
  40652d:	cmc    
  40652e:	(bad)  
  40652f:	xlat   BYTE PTR ds:[ebx]
  406530:	daa    
  406531:	jno    0x406555
  406533:	(bad)  
  406534:	dec    eax
  406535:	(bad)  
  406536:	rcl    BYTE PTR [ecx+edx*1],1
  406539:	out    dx,al
  40653a:	adc    eax,0x558b747e
  40653f:	rcr    BYTE PTR [ebx-0x3b],1
  406542:	xchg   DWORD PTR [esi-0x10],esi
  406545:	test   al,0x67
  406547:	jb     0x406546
  406549:	jge    0x4065a6
  40654b:	cmp    al,0x78
  40654d:	shr    esp,1
  40654f:	xchg   BYTE PTR [ebp-0x64],al
  406552:	xchg   BYTE PTR [edx+eax*4-0x77463692],ah
  406559:	mov    ebp,0x420dbd77
  40655e:	sub    al,BYTE PTR ds:0x6c6de990
  406564:	icebp  
  406565:	call   0x59a3:0x7dea069b
  40656c:	fld    QWORD PTR [edx+esi*1-0x73]
  406570:	fld    TBYTE PTR [edx-0x1da59bdd]
  406576:	cmp    ah,BYTE PTR [edx-0x76]
  406579:	scas   al,BYTE PTR es:[edi]
  40657a:	jae    0x18837974
  406580:	pop    ecx
  406581:	mov    es,WORD PTR [edi-0x1a]
  406584:	js     0x4065c9
  406586:	mov    DWORD PTR [ebx+0x37],edi
  406589:	inc    esp
  40658a:	outs   dx,DWORD PTR ds:[esi]
  40658b:	push   eax
  40658c:	imul   ebx,DWORD PTR [eax],0xffffff9f
  40658f:	mov    esp,0xe2748932
  406594:	sub    BYTE PTR [edx],bh
  406596:	imul   ebx,ebp,0xac1de708
  40659c:	xchg   ecx,eax
  40659d:	neg    DWORD PTR [esi]
  40659f:	outs   dx,DWORD PTR ds:[esi]
  4065a0:	das    
  4065a1:	enter  0xf76e,0x2c
  4065a5:	mov    edi,es
  4065a7:	ror    DWORD PTR [ebp+0x78],cl
  4065aa:	shl    BYTE PTR [ebx],0xd6
  4065ad:	dec    edx
  4065ae:	loopne 0x40654e
  4065b0:	add    DWORD PTR [eax-0x1e],0xffffffbd
  4065b4:	es cli 
  4065b6:	mov    esp,0xea2e785e
  4065bb:	out    0x7f,eax
  4065bd:	adc    al,0xba
  4065bf:	mov    bl,bh
  4065c1:	les    ecx,FWORD PTR [esi+esi*4]
  4065c4:	xchg   WORD PTR [ebx],si
  4065c7:	cld    
  4065c8:	dec    edx
  4065c9:	pop    ebx
  4065ca:	mov    bl,0xd
  4065cc:	(bad)  
  4065cd:	jmp    0x4065b6
  4065cf:	in     eax,0x81
  4065d1:	xor    eax,0xf11610bb
  4065d6:	jns    0x406565
  4065d8:	jne    0x4065ae
  4065da:	out    dx,eax
  4065db:	test   al,0x60
  4065dd:	push   esp
  4065de:	(bad)  
  4065df:	addr16 cs inc ecx
  4065e2:	and    al,0xf3
  4065e4:	mov    ebp,0x4bb6bd65
  4065e9:	push   0xbcd2e3f9
  4065ee:	mov    ecx,edi
  4065f0:	mov    cl,0x0
  4065f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065f3:	push   ecx
  4065f4:	jp     0x40657f
  4065f6:	xchg   edi,eax
  4065f7:	iret   
  4065f8:	loopne 0x40665d
  4065fa:	adc    al,0xd2
  4065fc:	loope  0x406636
  4065fe:	data16 fwait
  406600:	dec    eax
  406601:	pop    esp
  406602:	pop    eax
  406603:	or     edx,DWORD PTR es:[ebp-0x7f]
  406607:	dec    ebp
  406608:	pusha  
  406609:	push   0xffffffb3
  40660b:	je     0x4065b7
  40660d:	pop    ds
  40660e:	and    dl,bh
  406610:	push   ebx
  406611:	nop
  406612:	xchg   esi,eax
  406613:	add    al,0x9d
  406615:	jl     0x3433faaf
  40661b:	mov    edx,0xc129d052
  406620:	call   0x6ada:0xbd99b5eb
  406627:	push   eax
  406628:	add    BYTE PTR [ebx],ah
  40662a:	sub    ah,BYTE PTR [edi]
  40662c:	mov    ebp,0x8f09d316
  406631:	out    0xbe,al
  406633:	(bad)  
  406634:	gs push esp
  406636:	fisubr WORD PTR [ebx-0x6e]
  406639:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40663b:	rol    DWORD PTR [eax+0x36fab26b],0x62
  406642:	and    eax,0x5868e9ec
  406647:	xor    eax,0x83aea45f
  40664c:	inc    esi
  40664d:	jp     0x406653
  40664f:	out    0x49,eax
  406651:	mov    ah,0x66
  406653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406654:	in     al,dx
  406655:	(bad)  [ecx+0x571dccd0]
  40665b:	adc    DWORD PTR [eax+ecx*2],edi
  40665e:	aad    0x19
  406660:	inc    eax
  406661:	pop    bx
  406663:	adc    DWORD PTR [edi+edi*4-0x69],ebp
  406667:	jns    0x406607
  406669:	mov    ds:0x3fd13538,eax
  40666e:	js     0x40661a
  406670:	fadd   QWORD PTR [ecx+0x14]
  406673:	jb     0x406659
  406675:	shr    BYTE PTR ds:0x717d8442,0x16
  40667c:	cmp    cl,bh
  40667e:	rcr    DWORD PTR [eax-0x42],cl
  406681:	mov    cl,0xbb
  406683:	pushf  
  406684:	(bad)  
  406685:	add    dh,dh
  406687:	in     eax,dx
  406688:	mul    al
  40668a:	push   esi
  40668b:	shl    DWORD PTR [ebx-0x4d],cl
  40668e:	jg     0x4066f7
  406690:	pop    esp
  406691:	push   edi
  406692:	sub    eax,0x997042c6
  406697:	stos   BYTE PTR es:[edi],al
  406698:	push   edi
  406699:	lds    eax,FWORD PTR [esi-0x7c]
  40669c:	jmp    0x58b0:0x7bd7eaa
  4066a3:	test   DWORD PTR [eax+0x3d72a22f],edx
  4066a9:	fdivr  QWORD PTR [ebp+0x33]
  4066ac:	sbb    al,0x1a
  4066ae:	sub    bl,bl
  4066b0:	cmp    eax,0x55a7ce82
  4066b5:	mov    BYTE PTR [ebp+0x1d],bl
  4066b8:	inc    edi
  4066b9:	add    esi,ebx
  4066bb:	sbb    eax,0x963b156
  4066c0:	rol    DWORD PTR ds:[eax],1
  4066c3:	pushf  
  4066c4:	bound  eax,QWORD PTR [ebx-0x2627238d]
  4066ca:	dec    edx
  4066cb:	popa   
  4066cc:	and    eax,0x5bd505f0
  4066d1:	ret    
  4066d2:	out    dx,al
  4066d3:	and    eax,0xf281d292
  4066d8:	adc    DWORD PTR ds:0x222507a,esp
  4066de:	jl     0x406699
  4066e0:	lock mov dh,0x8e
  4066e3:	cmc    
  4066e4:	push   ds
  4066e5:	fnsave [edx+eax*8]
  4066e8:	je     0x406677
  4066ea:	je     0x406672
  4066ec:	inc    ebp
  4066ed:	jmp    DWORD PTR [edi+eiz*1]
  4066f0:	jo     0x40674f
  4066f2:	sub    al,0x78
  4066f4:	(bad)  
  4066f5:	or     DWORD PTR ds:[ecx+0x3e092d4],eax
  4066fc:	inc    esi
  4066fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066fe:	sti    
  4066ff:	fwait
  406700:	and    BYTE PTR [edx-0x3a],0xa4
  406704:	lods   al,BYTE PTR ds:[esi]
  406705:	mov    cl,0x11
  406707:	jnp    0x4066d0
  406709:	in     eax,0xde
  40670b:	sbb    BYTE PTR [ecx+0x7fe7f15],dh
  406711:	inc    ebx
  406712:	mov    ch,0xed
  406714:	aas    
  406715:	mov    edi,0xbfc7d42d
  40671a:	cli    
  40671b:	push   ss
  40671c:	jne    0x40676f
  40671e:	mov    al,0xc0
  406720:	fwait
  406721:	fwait
  406722:	pusha  
  406723:	repz adc DWORD PTR [ebx-0x65],0xffffffd7
  406728:	sar    DWORD PTR [edx+0x23835aa4],0xa3
  40672f:	sbb    eax,0xb5e057da
  406734:	sub    BYTE PTR [ebx+ecx*2+0x50],dl
  406738:	sbb    al,0x3e
  40673a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40673b:	jl     0x406792
  40673d:	ins    DWORD PTR es:[edi],dx
  40673e:	pusha  
  40673f:	sub    al,0x96
  406741:	xchg   edx,eax
  406742:	fisub  WORD PTR [ecx+0x36307f78]
  406748:	retf   
  406749:	in     al,0xcc
  40674b:	mov    ebp,0x24ddb1a4
  406750:	jb     0x406794
  406752:	xchg   ecx,eax
  406753:	pop    edi
  406754:	jmp    0x155869ca
  406759:	add    al,0x68
  40675b:	lock jno 0x4067a8
  40675e:	sub    al,BYTE PTR [edx]
  406760:	dec    ebp
  406761:	not    edx
  406763:	and    DWORD PTR [esi+0x4f],esp
  406766:	jp     0x4067c9
  406768:	mov    ebx,0xb02b8626
  40676d:	xchg   edi,eax
  40676e:	inc    ebp
  40676f:	mov    ds:0xe02bd9e,eax
  406774:	sahf   
  406775:	frndint 
  406777:	or     al,0x71
  406779:	jle    0x40671c
  40677b:	mov    ds:0x1507a72b,al
  406780:	ret    0x76bf
  406783:	loope  0x406714
  406785:	mov    ch,0xc9
  406787:	xchg   edi,eax
  406788:	andps  xmm7,XMMWORD PTR [edi-0xfb407f6]
  40678f:	hlt    
  406790:	in     al,dx
  406791:	stos   DWORD PTR es:[edi],eax
  406792:	adc    eax,0xb6e044d8
  406797:	xlat   BYTE PTR ds:[ebx]
  406798:	push   0x5b
  40679a:	add    al,BYTE PTR [ebx-0x7df8d33a]
  4067a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067a1:	mov    ch,0x47
  4067a3:	jno    0x4067c8
  4067a5:	xchg   ebp,eax
  4067a6:	mov    DWORD PTR [edx],ebp
  4067a8:	cmp    al,0xa7
  4067aa:	pushf  
  4067ab:	arpl   WORD PTR [ebx+0x74],ax
  4067ae:	push   esi
  4067af:	jmp    0x40677d
  4067b1:	inc    edx
  4067b2:	call   0x39a6:0xc03ecfec
  4067b9:	inc    esi
  4067ba:	cmp    ebx,DWORD PTR [edx+0x62]
  4067bd:	xchg   esp,eax
  4067be:	push   ds
  4067bf:	xchg   edx,eax
  4067c0:	out    dx,eax
  4067c1:	inc    esi
  4067c2:	xchg   esi,eax
  4067c3:	aas    
  4067c4:	push   ebx
  4067c5:	inc    ecx
  4067c6:	into   
  4067c7:	das    
  4067c8:	adc    dh,BYTE PTR [ebx]
  4067ca:	dec    esp
  4067cb:	sbb    eax,0xe57a522a
  4067d0:	push   ebp
  4067d1:	scas   al,BYTE PTR es:[edi]
  4067d2:	jmp    0x406838
  4067d4:	or     ah,0x52
  4067d7:	inc    edi
  4067d8:	sub    esp,DWORD PTR [ebx+0x2d]
  4067db:	xchg   ebx,eax
  4067dc:	pop    ebx
  4067dd:	push   0xffffff8a
  4067df:	adc    BYTE PTR [edi-0x3d],dl
  4067e2:	mov    BYTE PTR [edx-0xffb50a1],bl
  4067e8:	jo     0x40676d
  4067ea:	mov    ?,WORD PTR [ebx]
  4067ec:	jmp    0x406841
  4067ee:	sub    al,0xdc
  4067f0:	mov    eax,0x947179a3
  4067f5:	out    0xdc,al
  4067f7:	mov    eax,ds:0x3baf57f0
  4067fc:	popf   
  4067fd:	sti    
  4067fe:	aam    0xcd
  406800:	and    eax,0x6df21ffb
  406805:	fs das 
  406807:	loop   0x406841
  406809:	(bad)  
  40680a:	call   0xe9138ec9
  40680f:	test   eax,0x2075af82
  406814:	sub    eax,0xd1bff9cf
  406819:	outs   dx,DWORD PTR ds:[esi]
  40681a:	cmc    
  40681b:	sbb    eax,0xa32d335e
  406820:	mov    dl,dh
  406822:	test   DWORD PTR [eax+ebx*2-0x2e073bf6],eax
  406829:	ins    BYTE PTR es:[edi],dx
  40682a:	mov    eax,0x4d9cbe51
  40682f:	adc    eax,0x4b455eeb
  406834:	push   0x572327d4
  406839:	xor    al,0x39
  40683b:	pop    esi
  40683c:	gs sub eax,0x988c8e3
  406842:	ret    
  406843:	std    
  406844:	pop    ss
  406845:	push   es
  406846:	adc    BYTE PTR [ebx+0xdf6f274],0x2d
  40684d:	mov    bh,0x16
  40684f:	mov    edx,0xb2c9bd9e
  406854:	rcl    BYTE PTR [eax+0x18],cl
  406857:	inc    edi
  406858:	je     0x40687f
  40685a:	mov    BYTE PTR [edi+0x6f07b26f],dh
  406860:	adc    DWORD PTR [edx+0x76716203],esi
  406866:	sub    eax,0x5582cdda
  40686b:	imul   esi,DWORD PTR [eax],0x17
  40686e:	shl    BYTE PTR [edi-0x4c983e2b],1
  406874:	cmp    BYTE PTR [edx+eax*2+0x89c98f5],ch
  40687b:	or     edi,edi
  40687d:	loop   0x4068a9
  40687f:	mov    eax,0x1d80ae05
  406884:	pop    esp
  406885:	add    eax,0x1d378261
  40688a:	sahf   
  40688b:	rcr    BYTE PTR [eax],0xea
  40688e:	push   esp
  40688f:	cmp    ah,dl
  406891:	call   0x1e0c:0x9c5c88b0
  406898:	mov    ch,0x17
  40689a:	mov    ebx,0xbfa3b9f4
  40689f:	sub    al,0x76
  4068a1:	mov    cl,0x83
  4068a3:	jle    0x406825
  4068a5:	dec    esi
  4068a6:	retf   0x94d9
  4068a9:	(bad)  
  4068aa:	pop    edi
  4068ab:	mov    ebx,DWORD PTR fs:[ebx-0x2]
  4068af:	push   ebx
  4068b0:	inc    edi
  4068b1:	rcl    DWORD PTR [esi],0xff
  4068b4:	(bad)  
  4068b5:	verw   WORD PTR [esi+eiz*8+0x3b03c55f]
  4068bd:	mov    DWORD PTR [ebp+0x40],edi
  4068c0:	xor    eax,0x9fe8543c
  4068c5:	pop    es
  4068c6:	xchg   esp,eax
  4068c7:	jo     0x40690e
  4068c9:	jns    0x406947
  4068cb:	adc    eax,0xdf28fab7
  4068d0:	push   0x53
  4068d2:	sbb    eax,DWORD PTR [esi+ecx*8-0x76d2319c]
  4068d9:	(bad)
  4068dc:	jo     0x406875
  4068de:	adc    bl,ch
  4068e0:	enter  0xef85,0x6e
  4068e4:	inc    esi
  4068e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068e6:	scas   al,BYTE PTR es:[edi]
  4068e7:	outs   dx,DWORD PTR ds:[esi]
  4068e8:	mov    ch,ch
  4068ea:	lods   al,BYTE PTR ds:[esi]
  4068eb:	jno    0x40686f
  4068ed:	fs sub eax,0xad977fd1
  4068f3:	push   eax
  4068f4:	add    ch,BYTE PTR [ecx+0x3034d33]
  4068fa:	ja     0x4068ae
  4068fc:	in     al,0x65
  4068fe:	mov    al,0xc1
  406900:	xor    al,0x69
  406902:	loopne 0x4068a8
  406904:	pop    es
  406905:	pop    eax
  406906:	jns    0x40688e
  406908:	mov    edx,0xf6370185
  40690d:	test   al,0x87
  40690f:	mov    dh,0x19
  406911:	jmp    0x406913
  406913:	ftst   
  406915:	dec    eax
  406916:	fdivr  st(5),st
  406918:	repz cmp DWORD PTR [ebp+ecx*8+0x36edbe9b],edi
  406920:	in     eax,0xb0
  406922:	sbb    cl,bl
  406924:	sbb    eax,0xcad95a0
  406929:	lods   al,BYTE PTR ds:[esi]
  40692b:	jmp    0x8e3d:0x3d45b2f1
  406932:	loope  0x406921
  406934:	adc    BYTE PTR [edx-0x46555ef9],0x8
  40693b:	mov    bh,0xae
  40693d:	jecxz  0x40697e
  40693f:	cmp    BYTE PTR [ecx+0x239bc06f],dl
  406945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406946:	lods   al,BYTE PTR ds:[esi]
  406947:	mov    edx,0x1c4494eb
  40694c:	xchg   ebp,eax
  40694d:	mov    eax,0x17c258db
  406952:	pop    esi
  406953:	fcmovbe st,st(1)
  406955:	stos   BYTE PTR es:[edi],al
  406956:	(bad)  
  406957:	jp     0x40696b
  406959:	scas   eax,DWORD PTR es:[edi]
  40695a:	sti    
  40695b:	add    DWORD PTR [ebp+0x3660124e],edx
  406961:	push   ebp
  406962:	lods   eax,DWORD PTR ds:[esi]
  406963:	out    dx,eax
  406964:	adc    al,0xa4
  406966:	mov    edi,0xdb72b111
  40696b:	inc    ebx
  40696c:	or     DWORD PTR [ebx],esp
  40696e:	jg     0x4069b0
  406970:	ins    DWORD PTR es:[edi],dx
  406971:	ds sbb ch,0xcf
  406975:	mov    ds:0xaf2ef009,al
  40697a:	dec    esp
  40697b:	cmp    ah,dh
  40697d:	pop    eax
  40697e:	and    BYTE PTR [ebx],0x80
  406981:	xchg   ecx,eax
  406982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406983:	out    0x9e,al
  406985:	frstor [ebp-0x6e]
  406988:	dec    esp
  406989:	(bad)  
  40698a:	aam    0x4
  40698c:	mov    eax,0x2a8b7ac6
  406991:	clc    
  406992:	arpl   WORD PTR [esi+0x62],bp
  406995:	add    BYTE PTR [esi],dh
  406997:	lds    esp,FWORD PTR [edi+edx*4]
  40699a:	mov    esi,0xd90924db
  40699f:	xchg   ch,al
  4069a1:	jmp    0x4069bc
  4069a3:	std    
  4069a4:	ror    DWORD PTR [esi+ebx*2],1
  4069a7:	xchg   esi,eax
  4069a8:	push   ebp
  4069a9:	test   al,0x63
  4069ab:	adc    ecx,DWORD PTR [eax-0x61]
  4069ae:	adc    BYTE PTR [ebx],al
  4069b0:	xor    edi,DWORD PTR [edx]
  4069b2:	jecxz  0x4069d9
  4069b4:	xchg   edi,eax
  4069b5:	pusha  
  4069b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069b7:	(bad)  
  4069b8:	out    0x5d,eax
  4069ba:	or     ch,BYTE PTR [edx]
  4069bc:	push   0xffffff85
  4069be:	xchg   BYTE PTR [ecx+0x7f],ch
  4069c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069c2:	mov    cl,0xc4
  4069c4:	into   
  4069c5:	xor    eax,edx
  4069c7:	sbb    al,0x2b
  4069c9:	(bad)  
  4069ca:	int3   
  4069cb:	mov    bl,0x7e
  4069cd:	xchg   esi,eax
  4069ce:	pop    ss
  4069cf:	sahf   
  4069d0:	rol    dh,1
  4069d2:	out    0xd6,al
  4069d4:	mov    al,ds:0x12e7d5a3
  4069d9:	into   
  4069da:	mov    cl,0xd0
  4069dc:	(bad)  
  4069dd:	pop    ss
  4069de:	es mov edi,0xcf42c4a3
  4069e4:	loopne 0x40698c
  4069e6:	ds mov eax,0x117c7b73
  4069ec:	cmp    eax,0xf300d7a2
  4069f1:	cmp    ebx,DWORD PTR [ecx+0x58799963]
  4069f7:	loop   0x406a21
  4069f9:	fisub  WORD PTR [ebx-0x67]
  4069fc:	and    al,0x20
  4069fe:	ins    DWORD PTR es:[edi],dx
  4069ff:	pop    ds
  406a00:	cmp    eax,0x5331c3e3
  406a05:	xlat   BYTE PTR ds:[ebx]
  406a06:	mov    esp,0x8c5ad6a7
  406a0b:	jnp    0x4069ae
  406a0d:	xchg   esp,eax
  406a0e:	test   BYTE PTR [esi-0x3b595a94],dh
  406a14:	xchg   esp,eax
  406a15:	sbb    eax,0xa7b73707
  406a1a:	xor    eax,0xc1a2d076
  406a1f:	aam    0x7f
  406a21:	cmc    
  406a22:	fs pop ebp
  406a24:	mov    eax,ds:0x83602738
  406a29:	sbb    ch,BYTE PTR [eax+ebx*4+0x35]
  406a2d:	mov    al,0xfd
  406a2f:	out    dx,al
  406a30:	jo     0x406a93
  406a32:	lods   eax,DWORD PTR ds:[esi]
  406a33:	add    cl,BYTE PTR ds:0x3c3afb29
  406a39:	adc    eax,0x39fa766d
  406a3e:	add    DWORD PTR [edi-0x59],edx
  406a41:	out    dx,al
  406a42:	or     bl,ch
  406a44:	pop    es
  406a45:	aad    0xbf
  406a47:	sahf   
  406a48:	(bad)  
  406a49:	stos   DWORD PTR es:[edi],eax
  406a4a:	adc    cl,BYTE PTR [eax-0x34]
  406a4d:	pop    fs
  406a4f:	push   0x71654614
  406a54:	or     DWORD PTR [eax-0x3e],0x3d237994
  406a5b:	ins    DWORD PTR es:[edi],dx
  406a5c:	xlat   BYTE PTR ds:[ebx]
  406a5d:	mov    ds:0x8e6f89b0,eax
  406a62:	(bad)
  406a66:	mov    ebp,0xe25ddc99
  406a6b:	lods   eax,DWORD PTR ds:[esi]
  406a6c:	jns    0x406a31
  406a6e:	cld    
  406a6f:	push   cs
  406a70:	inc    ebp
  406a71:	(bad)  [edx+0x4a9682b0]
  406a77:	mov    dh,0x55
  406a79:	sub    al,0x69
  406a7b:	mov    edx,0x42de5c7c
  406a80:	pop    esi
  406a81:	rcl    bl,cl
  406a83:	push   es
  406a84:	(bad)  
  406a85:	aas    
  406a86:	mov    al,ds:0xd58852ff
  406a8b:	aaa    
  406a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a8d:	das    
  406a8e:	or     ah,BYTE PTR [edx+0x3fe46866]
  406a94:	pop    ebp
  406a95:	dec    esp
  406a96:	out    dx,eax
  406a97:	dec    ebp
  406a98:	sbb    eax,0x76c936fa
  406a9d:	xchg   DWORD PTR [edx+0x7],esp
  406aa0:	jo     0x406a80
  406aa2:	push   cs
  406aa3:	xor    cl,BYTE PTR [ebx]
  406aa5:	add    ah,BYTE PTR [ebp-0x1e205d4b]
  406aab:	sbb    ch,ah
  406aad:	mov    eax,0xf0a4aa17
  406ab2:	jb     0x406b0c
  406ab4:	cmp    ebx,esp
  406ab6:	outs   dx,BYTE PTR ds:[esi]
  406ab7:	leave  
  406ab8:	pop    edx
  406aba:	into   
  406abb:	outs   dx,BYTE PTR ds:[esi]
  406abc:	xchg   esi,eax
  406abd:	stos   BYTE PTR es:[edi],al
  406abe:	lods   eax,DWORD PTR ds:[esi]
  406abf:	(bad)  
  406ac0:	daa    
  406ac1:	push   0x34
  406ac3:	or     bh,BYTE PTR [edi]
  406ac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ac6:	in     al,dx
  406ac7:	adc    ebx,0xffffffbf
  406aca:	gs push edi
  406acc:	pop    eax
  406acd:	dec    ebp
  406ace:	cld    
  406acf:	pop    ebp
  406ad0:	shl    eax,0xd4
  406ad3:	xor    BYTE PTR [ebx+0xa],0xa4
  406ad7:	shl    esi,cl
  406ad9:	mov    dl,0x58
  406adb:	stc    
  406adc:	mov    ds:0xc9820aa2,al
  406ae1:	mov    ah,0xf7
  406ae3:	push   ebp
  406ae4:	adc    al,0xc3
  406ae6:	mov    al,0xd6
  406ae8:	push   0xb44ff3c3
  406aed:	in     eax,dx
  406aee:	xor    eax,0xdc6088
  406af3:	loop   0x406b49
  406af5:	adc    esp,DWORD PTR [ecx-0x7f]
  406af8:	jmp    0xd7e4ab50
  406afd:	mov    eax,0x323303c0
  406b02:	pop    ds
  406b03:	outs   dx,DWORD PTR ds:[esi]
  406b04:	aas    
  406b05:	jp     0x406aca
  406b07:	popa   
  406b08:	cmp    DWORD PTR [edi+0x4b],0xffffff86
  406b0c:	loope  0x406b4b
  406b0e:	dec    esi
  406b0f:	pop    ds
  406b10:	pop    esp
  406b11:	in     al,0xd0
  406b13:	add    DWORD PTR [eax],esp
  406b15:	pusha  
  406b16:	inc    ebx
  406b17:	aam    0x6
  406b19:	aad    0x94
  406b1b:	mov    ch,0xda
  406b1d:	dec    ebx
  406b1e:	add    dl,bh
  406b20:	and    dh,ch
  406b22:	sub    eax,0xacf6ea9a
  406b27:	imul   edi,DWORD PTR [ebx+0x63cc36db],0x820ca9ca
  406b31:	cwde   
  406b32:	push   edx
  406b33:	pop    edx
  406b34:	gs jp  0x406b3c
  406b37:	imul   ebx,DWORD PTR [eax],0xfffffff4
  406b3a:	sbb    al,0xb5
  406b3c:	xchg   esp,eax
  406b3d:	xor    DWORD PTR [edx],ecx
  406b3f:	aas    
  406b40:	jno    0x406b43
  406b42:	inc    ebx
  406b43:	and    esp,DWORD PTR [eax]
  406b45:	lock lock (bad) 
  406b48:	adc    BYTE PTR [esi-0x683ffa82],ch
  406b4e:	ret    
  406b4f:	xor    al,0x47
  406b51:	fistp  WORD PTR [edx-0x4cd1fbf9]
  406b57:	clc    
  406b58:	sbb    al,0xeb
  406b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b5b:	push   edi
  406b5c:	sub    eax,0xbe981429
  406b61:	inc    esp
  406b62:	sub    eax,0x720a2c5d
  406b67:	jge    0x406b89
  406b69:	dec    edx
  406b6a:	sti    
  406b6b:	mov    al,0x81
  406b6d:	jg     0x406be5
  406b6f:	mov    DWORD PTR [edi],0x41f25cb1
  406b75:	cmp    eax,0x35d9313c
  406b7a:	push   cs
  406b7b:	and    cl,BYTE PTR [ebx]
  406b7d:	imul   esi,DWORD PTR [ebp+0x60de5018],0xb1fefcd6
  406b87:	mov    edx,DWORD PTR [edx-0x3faadc9a]
  406b8d:	mov    edx,gs
  406b8f:	cmp    al,0xf1
  406b91:	jb     0x406ba2
  406b93:	sar    DWORD PTR [edx+0x67a69efa],cl
  406b99:	mov    edx,0xf4c43128
  406b9e:	into   
  406b9f:	fld    DWORD PTR [eax+edx*8+0x2f13b0cf]
  406ba6:	rcr    esp,cl
  406ba8:	xchg   ebx,eax
  406ba9:	cmp    ch,BYTE PTR [esi+0x31]
  406bac:	pop    es
  406bad:	jmp    0xecd05473
  406bb2:	dec    esp
  406bb3:	sti    
  406bb4:	iret   
  406bb5:	ficom  WORD PTR [si]
  406bb8:	inc    ecx
  406bb9:	call   0x7370194c
  406bbe:	mov    WORD PTR [eax+0x7a831050],ds
  406bc4:	mov    BYTE PTR [edi-0x149b4041],al
  406bca:	(bad)  
  406bcb:	sti    
  406bcc:	arpl   WORD PTR [ebp+0x3c],bx
  406bcf:	push   ss
  406bd0:	or     DWORD PTR [ebx+0x5b5c3c58],ebx
  406bd6:	fstp   st(2)
  406bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bd9:	retf   
  406bda:	inc    ebx
  406bdb:	lock daa 
  406bdd:	cdq    
  406bde:	adc    BYTE PTR [edx-0x3],0x9d
  406be2:	cmp    DWORD PTR [ebx],0xffffffed
  406be5:	stos   DWORD PTR es:[edi],eax
  406be6:	cmp    al,0x4f
  406be8:	jle    0x406c56
  406bea:	cmp    DWORD PTR [edi],ebp
  406bec:	call   0xa7fc:0x7370427a
  406bf3:	mov    dh,bl
  406bf5:	iret   
  406bf6:	stc    
  406bf7:	cli    
  406bf8:	int    0xb9
  406bfa:	loopne 0x406c6c
  406bfc:	mov    eax,ds:0xd71b0622
  406c01:	and    al,0xd6
  406c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c04:	pop    edx
  406c05:	cmp    cl,dl
  406c07:	jae    0x406c61
  406c09:	xor    ebp,eax
  406c0b:	(bad)  
  406c0c:	clc    
  406c0d:	mov    al,ds:0x7b11d81
  406c12:	inc    edi
  406c13:	add    esp,DWORD PTR [esi+0x4773b6a8]
  406c19:	push   esi
  406c1a:	push   eax
  406c1b:	shl    DWORD PTR [bp+di-0xf],cl
  406c1f:	popa   
  406c20:	mov    bh,ah
  406c22:	and    BYTE PTR [esi],dl
  406c24:	arpl   WORD PTR [edx-0x13],bp
  406c27:	xor    DWORD PTR [ebp-0x532e1a46],esp
  406c2d:	fcom   DWORD PTR [ecx-0x24]
  406c30:	add    dl,BYTE PTR [edx+0x674f3f3d]
  406c36:	and    eax,0xa330a00b
  406c3b:	aas    
  406c3c:	xor    DWORD PTR [edi-0x3f0cb220],esp
  406c42:	in     eax,0x22
  406c44:	push   edx
  406c45:	pop    ecx
  406c46:	inc    eax
  406c47:	jecxz  0x406c8b
  406c49:	xor    BYTE PTR [ebx],0xa5
  406c4c:	mov    dl,BYTE PTR [edx]
  406c4e:	jmp    0x9c90488f
  406c53:	divps  xmm4,XMMWORD PTR [ebx+0x7dc881c9]
  406c5a:	add    ecx,eax
  406c5c:	xchg   DWORD PTR [eax],edi
  406c5e:	das    
  406c5f:	adc    al,0x68
  406c61:	push   ecx
  406c62:	pusha  
  406c63:	sub    edi,DWORD PTR [edi-0x7c]
  406c66:	mov    al,BYTE PTR [esi-0x2b]
  406c69:	cmp    ebx,edx
  406c6b:	jnp    0x406bfd
  406c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c6e:	adc    al,0x62
  406c70:	pop    edx
  406c71:	loop   0x406c9c
  406c73:	mov    esi,gs
  406c75:	out    dx,eax
  406c76:	adc    al,0x88
  406c78:	ret    
  406c79:	mov    bl,0xfe
  406c7b:	mov    ds:0x9ab3d78a,eax
  406c80:	sahf   
  406c81:	mov    esi,0xba97823d
  406c86:	cli    
  406c87:	in     al,dx
  406c88:	imul   eax,DWORD PTR [esp+ecx*8-0x6],0xffffff88
  406c8d:	dec    ebx
  406c8e:	popa   
  406c8f:	mov    edi,DWORD PTR [ebp-0x69]
  406c92:	cld    
  406c93:	add    al,dh
  406c95:	or     DWORD PTR [edi+edx*8+0x6e2f83d9],0x1a3b51c1
  406ca0:	sbb    DWORD PTR [ebx],edi
  406ca2:	and    DWORD PTR [ecx+0x1],edx
  406ca5:	jae    0x406c6f
  406ca7:	dec    ecx
  406ca8:	or     ebx,DWORD PTR ds:0x1b58f7b7
  406cae:	cmc    
  406caf:	inc    eax
  406cb0:	fnstsw WORD PTR [edi]
  406cb2:	sbb    DWORD PTR [edi+0x45],esp
  406cb5:	out    0x8e,al
  406cb7:	sub    edx,DWORD PTR [edx]
  406cb9:	out    dx,al
  406cba:	ins    DWORD PTR es:[edi],dx
  406cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cbc:	mov    cl,0x45
  406cbe:	dec    DWORD PTR [eax+0x25]
  406cc1:	in     eax,0x25
  406cc3:	shl    BYTE PTR [ecx-0x5719cb60],cl
  406cc9:	xor    eax,0xa3c3be87
  406cce:	fcom   QWORD PTR [esi+ebp*1-0x3e]
  406cd2:	fsubp  st(7),st
  406cd4:	cs leave 
  406cd6:	cs jg  0x406c96
  406cd9:	xor    eax,0x62fdf946
  406cde:	mov    DWORD PTR [eax+ebp*4],ebx
  406ce1:	push   edx
  406ce2:	pusha  
  406ce3:	fidiv  WORD PTR [ecx]
  406ce5:	sbb    ch,BYTE PTR [ecx]
  406ce7:	mov    eax,DWORD PTR [ecx-0x28717c60]
  406ced:	cld    
  406cee:	(bad)  
  406cef:	push   ds
  406cf0:	jne    0x406cd7
  406cf2:	(bad)  
  406cf3:	(bad)
  406cf6:	rol    DWORD PTR [ebx],cl
  406cf8:	and    BYTE PTR [edi],0xab
  406cfb:	std    
  406cfc:	inc    ecx
  406cfd:	scas   eax,DWORD PTR es:[edi]
  406cfe:	fdivr  DWORD PTR [eax-0x31]
  406d01:	test   BYTE PTR [esp],dh
  406d04:	push   ecx
  406d05:	pop    es
  406d06:	add    esi,edi
  406d08:	jb     0x406d6b
  406d0a:	push   ss
  406d0b:	cmp    edi,DWORD PTR ds:0xcdec23b
  406d11:	sbb    BYTE PTR [ebx+0x5f791ed5],bh
  406d17:	dec    ebp
  406d18:	cmp    DWORD PTR [ecx+edi*2-0x1416dd08],eax
  406d1f:	ret    0xca6b
  406d22:	dec    esi
  406d23:	mov    al,ds:0xaefed063
  406d28:	mov    edi,0x4b538ed7
  406d2d:	ret    
  406d2e:	xchg   ebp,eax
  406d2f:	jecxz  0x406d05
  406d31:	push   ebp
  406d32:	push   ds
  406d33:	jb     0x406d31
  406d35:	enter  0xdfaa,0x92
  406d39:	clc    
  406d3a:	pop    ecx
  406d3b:	mov    bl,0xed
  406d3d:	xchg   ebp,eax
  406d3e:	aaa    
  406d3f:	pop    ebx
  406d40:	jne    0x406d05
  406d42:	enter  0x88d7,0x5c
  406d46:	or     edx,esi
  406d48:	sbb    al,BYTE PTR [edi-0x45]
  406d4b:	push   edx
  406d4c:	inc    ebp
  406d4d:	inc    eax
  406d4e:	daa    
  406d4f:	inc    eax
  406d50:	fnstenv [ebp-0x26]
  406d53:	cmp    DWORD PTR [ebx-0x67],edx
  406d56:	(bad)
  406d59:	scas   eax,DWORD PTR es:[edi]
  406d5a:	and    esi,ebp
  406d5c:	mov    esi,0x42b0e452
  406d61:	cli    
  406d62:	mov    eax,ds:0x544fb919
  406d67:	dec    ebx
  406d68:	das    
  406d69:	or     esi,ecx
  406d6b:	nop    eax
  406d6e:	sbb    ecx,DWORD PTR [esp+eax*8-0x3b36398f]
  406d75:	ret    0x9e9f
  406d78:	sahf   
  406d79:	cmc    
  406d7a:	dec    eax
  406d7b:	(bad)  
  406d7c:	nop
  406d7d:	mov    DWORD PTR [esi],eax
  406d7f:	outs   dx,DWORD PTR ds:[esi]
  406d80:	aas    
  406d81:	cmp    DWORD PTR [ecx+0x50],ecx
  406d84:	nop
  406d85:	mov    ecx,0x930e85a7
  406d8a:	lods   al,BYTE PTR ds:[esi]
  406d8b:	in     eax,0x2c
  406d8d:	retf   
  406d8e:	ror    BYTE PTR [esi+0x5c22b04b],0xc3
  406d95:	and    al,ch
  406d97:	mov    ch,0x24
  406d99:	add    edi,DWORD PTR [ebp+0xb]
  406d9c:	xchg   DWORD PTR [edx+0x73],ebx
  406d9f:	cwde   
  406da0:	lahf   
  406da1:	call   0x9350f726
  406da6:	sbb    edi,DWORD PTR [esi-0x2a]
  406da9:	cmp    ah,BYTE PTR [esi+0x4ec454f5]
  406daf:	stc    
  406db0:	repnz adc esi,DWORD PTR [edi]
  406db3:	ja     0x406d3f
  406db5:	add    edx,DWORD PTR [edi+0x19]
  406db8:	hlt    
  406db9:	scas   eax,DWORD PTR es:[edi]
  406dba:	sahf   
  406dbb:	in     eax,0x81
  406dbd:	mov    ebx,0xdffeb5ff
  406dc2:	mov    al,0xed
  406dc4:	dec    edx
  406dc5:	fidivr DWORD PTR [edi]
  406dc7:	mov    ds:0x7b4adf4f,al
  406dcc:	stos   DWORD PTR es:[edi],eax
  406dcd:	aaa    
  406dce:	dec    ebp
  406dcf:	outs   dx,BYTE PTR ds:[esi]
  406dd0:	xlat   BYTE PTR ds:[ebx]
  406dd1:	pusha  
  406dd2:	(bad)  
  406dd3:	int    0x1f
  406dd5:	cmp    edi,ebp
  406dd7:	adc    BYTE PTR [eax+eax*2+0x61abcd6],cl
  406dde:	test   al,0x2d
  406de0:	repz retf 
  406de2:	cmp    ebx,esi
  406de4:	fcomp  QWORD PTR [eax+0x11a9d1b6]
  406dea:	xchg   ebx,eax
  406deb:	call   0x62d4:0x8669eaff
  406df2:	lock das 
  406df4:	out    0x3f,eax
  406df6:	add    BYTE PTR [edi],bh
  406df8:	pop    ebx
  406df9:	xor    eax,0x112c08ab
  406dfe:	mov    ebp,0x2312b88b
  406e03:	xchg   ebx,eax
  406e04:	dec    edi
  406e05:	sbb    bh,BYTE PTR [ebx+0x78761f3a]
  406e0b:	je     0x406d9d
  406e0d:	pop    eax
  406e0e:	mov    esp,0x7158675b
  406e13:	mov    edi,0xcc1d644e
  406e18:	dec    ebx
  406e19:	xlat   BYTE PTR gs:[ebx]
  406e1b:	dec    ebp
  406e1c:	mov    ebp,0xa08025e5
  406e21:	and    eax,0x487eb269
  406e26:	xor    edx,edi
  406e28:	in     al,dx
  406e29:	adc    eax,0x54263699
  406e2e:	dec    eax
  406e2f:	repz mov bl,0xe7
  406e32:	adc    BYTE PTR [edx+edx*4+0x7e],0xbb
  406e37:	das    
  406e38:	aam    0x47
  406e3a:	add    eax,0x29262c4e
  406e3f:	or     al,0xae
  406e41:	inc    esi
  406e42:	mov    BYTE PTR [edx-0x248447c5],0xdb
  406e49:	push   cs
  406e4a:	fs out dx,al
  406e4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e4d:	sbb    ecx,esi
  406e4f:	icebp  
  406e50:	imul   ecx
  406e52:	xchg   edx,eax
  406e53:	repz add DWORD PTR [ebx+0x5d],esp
  406e57:	jno    0x406e2c
  406e59:	and    eax,0x659ba3b9
  406e5e:	jl     0x406e96
  406e60:	clc    
  406e61:	add    ah,BYTE PTR [esi]
  406e63:	or     DWORD PTR [ebp+0x65],ecx
  406e66:	adc    DWORD PTR [ebx+0x6a34b722],esi
  406e6c:	stos   DWORD PTR es:[edi],eax
  406e6d:	leave  
  406e6e:	inc    edx
  406e6f:	jecxz  0x406e5e
  406e71:	test   eax,0xa2dfd173
  406e77:	mov    bl,0x48
  406e79:	pop    eax
  406e7a:	pop    ds
  406e7b:	mov    dh,0x7e
  406e7d:	stc    
  406e7e:	(bad)  
  406e80:	out    dx,al
  406e81:	in     al,dx
  406e82:	or     DWORD PTR [eax],edx
  406e84:	push   ds
  406e85:	in     eax,dx
  406e86:	inc    esi
  406e87:	imul   ebx,DWORD PTR [edx],0x2494388f
  406e8d:	pop    ebx
  406e8e:	cmp    ch,BYTE PTR [ebx+esi*2+0x4a]
  406e92:	jle    0x406eec
  406e94:	dec    eax
  406e95:	leave  
  406e96:	push   eax
  406e97:	lods   eax,DWORD PTR ds:[esi]
  406e98:	mov    ebx,0xab76626d
  406e9d:	stos   DWORD PTR es:[edi],eax
  406e9e:	cmp    bh,BYTE PTR [esi+ecx*2-0x3e3a50a1]
  406ea5:	jmp    0xcdf798a7
  406eaa:	xchg   ebp,eax
  406eab:	sub    BYTE PTR [ecx+0x4a],cl
  406eae:	popa   
  406eaf:	mov    eax,DWORD PTR [edx+0x1d1f4c1b]
  406eb5:	hlt    
  406eb6:	in     al,0x43
  406eb8:	sbb    BYTE PTR [edi-0x739fad8c],bl
  406ebe:	aam    0x78
  406ec0:	mov    esp,0xf868a70d
  406ec5:	hlt    
  406ec6:	adc    DWORD PTR [esi-0x3775be3],ecx
  406ecc:	fwait
  406ecd:	mov    al,0x4a
  406ecf:	mov    bh,0xa8
  406ed1:	xor    esi,DWORD PTR [edi]
  406ed3:	adc    eax,0xe879221f
  406ed8:	xchg   esi,edx
  406eda:	xchg   ecx,eax
  406edb:	or     eax,DWORD PTR [eax+0x35]
  406ede:	jne    0x406f3f
  406ee0:	xchg   edx,eax
  406ee1:	shl    BYTE PTR [ebx-0x59],1
  406ee4:	jge    0x406f3b
  406ee6:	mov    edi,0xbba7f87
  406eeb:	pop    ebx
  406eec:	sub    BYTE PTR [eax],0x56
  406eef:	les    ebx,FWORD PTR [ecx]
  406ef1:	mov    eax,0x928acf36
  406ef6:	(bad)  
  406ef7:	es mov dh,0xb7
  406efa:	xor    al,0xde
  406efc:	jmp    0x406ebe
  406efe:	call   0x2ee:0x53e52417
  406f05:	call   0x65f4:0x3763ec30
  406f0c:	mov    cs,WORD PTR [ebx]
  406f0e:	(bad)  
  406f0f:	data16 mov ch,0xfb
  406f12:	sti    
  406f13:	mov    dl,BYTE PTR [edx-0x255ccba6]
  406f19:	mov    edi,edi
  406f1b:	xchg   ebp,eax
  406f1c:	xchg   BYTE PTR [ebp-0x4a],ch
  406f1f:	repz push eax
  406f21:	or     al,0xc5
  406f23:	test   DWORD PTR [ecx+ecx*2],edx
  406f26:	push   ebp
  406f27:	push   ebp
  406f28:	mov    ecx,0x1a930174
  406f2d:	mov    ebp,0x85d89434
  406f32:	int3   
  406f33:	pop    ebx
  406f34:	std    
  406f35:	cmp    eax,0x67dfcb2f
  406f3a:	cmc    
  406f3b:	call   0x1047:0x94ffcbe2
  406f42:	or     eax,0x8ee39941
  406f47:	ret    
  406f48:	out    0x37,al
  406f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f4b:	aam    0x62
  406f4d:	pusha  
  406f4e:	pop    es
  406f4f:	sbb    ebp,DWORD PTR [ecx-0x61]
  406f52:	out    dx,al
  406f53:	cli    
  406f54:	and    eax,0xd97b264d
  406f59:	pop    esi
  406f5a:	in     al,0x4b
  406f5c:	pop    bx
  406f5e:	pop    ebx
  406f5f:	shl    ecx,1
  406f61:	adc    al,0xc1
  406f63:	fwait
  406f64:	fs jae 0x406fdb
  406f67:	int3   
  406f68:	add    edi,DWORD PTR [ebp-0x4ad25760]
  406f6e:	jae    0x406fb2
  406f70:	push   ebp
  406f71:	mov    ebp,DWORD PTR [edx]
  406f73:	xor    BYTE PTR [esi+eax*8+0x266fa9a9],cl
  406f7a:	outs   dx,BYTE PTR ds:[esi]
  406f7b:	imul   edi,esp,0x26c3f7e2
  406f81:	inc    edx
  406f82:	aad    0xeb
  406f84:	push   es
  406f85:	retf   
  406f86:	popa   
  406f87:	mov    bh,BYTE PTR [ebx-0x7a]
  406f8a:	xlat   BYTE PTR ds:[ebx]
  406f8b:	jne    0x406f1d
  406f8d:	call   0xbab478da
  406f92:	mov    eax,ds:0x3137a693
  406f97:	shl    DWORD PTR [eax-0x79],0xbc
  406f9b:	push   esp
  406f9c:	pop    ds
  406f9d:	(bad)  
  406f9e:	fs push edi
  406fa0:	js     0x406fba
  406fa2:	xor    bh,BYTE PTR [ecx]
  406fa4:	inc    DWORD PTR [ebp-0x7a]
  406fa7:	push   ecx
  406fa8:	add    cl,BYTE PTR [edi]
  406faa:	inc    edi
  406fab:	lods   al,BYTE PTR ds:[esi]
  406fac:	add    dl,BYTE PTR [ebx+0x5e]
  406faf:	ret    0x526c
  406fb2:	xor    cl,BYTE PTR [esi-0x2e515c99]
  406fb8:	jbe    0x407027
  406fba:	js     0x406f5d
  406fbc:	add    BYTE PTR [ebx+0x598f5bf4],bh
  406fc2:	jo     0x406fd5
  406fc4:	gs pop esi
  406fc6:	jmp    0x406f88
  406fc8:	mov    ds:0xe5d0e80,al
  406fcd:	inc    ecx
  406fce:	or     DWORD PTR [ebx+0x574a446],0xfffffff2
  406fd5:	mov    eax,ds:0x5c550f0
  406fda:	push   0x53d249f9
  406fdf:	popa   
  406fe0:	clc    
  406fe1:	dec    ebp
  406fe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fe3:	je     0x407048
  406fe5:	in     al,0xb8
  406fe7:	outs   dx,DWORD PTR ds:[esi]
  406fe8:	(bad)  
  406fea:	push   0x19
  406fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fed:	jle    0x40701a
  406fef:	and    ch,BYTE PTR [ecx]
  406ff1:	mov    gs,WORD PTR [edi]
  406ff3:	leave  
  406ff4:	sbb    eax,DWORD PTR [esi]
  406ff6:	call   0x8154858c
  406ffb:	sub    eax,edi
  406ffd:	stos   DWORD PTR es:[edi],eax
  406ffe:	mov    ebp,0x2c0e87b0
  407003:	pop    edx
  407004:	(bad)  
  407005:	aaa    
  407006:	mov    BYTE PTR [ebx-0x20],bl
  407009:	rcr    BYTE PTR [ebx],1
  40700b:	push   ecx
  40700c:	xchg   DWORD PTR [esi],eax
  40700e:	sar    DWORD PTR [ebp+0x29],0x49
  407012:	(bad)  [ecx+eiz*1-0x43]
  407016:	iret   
  407017:	sub    BYTE PTR ds:0x134182a1,0x8c
  40701e:	add    al,0xde
  407020:	repnz xchg esp,eax
  407022:	xor    eax,0xea503aee
  407027:	(bad)  
  407028:	xlat   BYTE PTR ds:[ebx]
  407029:	sub    eax,0x1fda40e3
  40702e:	ret    
  40702f:	add    bh,ch
  407031:	xor    esi,DWORD PTR [edx-0x34]
  407034:	sbb    DWORD PTR [ecx-0x4a],edx
  407037:	pop    ss
  407038:	sbb    ch,0xdf
  40703b:	add    BYTE PTR [eax],0x1c
  40703e:	sub    al,bh
  407040:	push   eax
  407041:	outs   dx,BYTE PTR ds:[esi]
  407042:	call   0x3f5f:0x3793c5be
  407049:	xchg   DWORD PTR [eax+0x848e900],ebp
  40704f:	mov    edx,0x9198ca9
  407054:	xchg   esi,eax
  407055:	xchg   ebp,eax
  407056:	(bad)  
  407057:	cli    
  407058:	or     ch,bh
  40705a:	jge    0x407056
  40705c:	add    al,0x4f
  40705e:	leave  
  40705f:	popa   
  407060:	test   al,0xe
  407062:	sub    ah,0x8d
  407065:	dec    ecx
  407066:	popf   
  407067:	push   eax
  407068:	jns    0x4070be
  40706a:	mov    ah,0x55
  40706c:	retf   0x2139
  40706f:	mov    ds:0xba591eff,al
  407074:	ror    DWORD PTR ss:[eax],cl
  407077:	std    
  407078:	or     DWORD PTR [edx-0x5db73ea2],esi
  40707e:	out    0x31,al
  407080:	mov    al,0x85
  407082:	mov    BYTE PTR [eax+0x3277728a],dh
  407088:	jbe    0x4070da
  40708a:	mov    edi,DWORD PTR [ecx-0xdac9e0e]
  407090:	add    al,0x3c
  407092:	push   ebp
  407093:	in     eax,dx
  407094:	into   
  407095:	aas    
  407096:	in     eax,0x3d
  407098:	or     bl,cl
  40709a:	lea    edx,[edi]
  40709c:	iret   
  40709d:	mov    esp,0xae43226f
  4070a2:	ins    DWORD PTR es:[edi],dx
  4070a3:	mov    esi,0x1c888da8
  4070a8:	in     eax,0x98
  4070aa:	add    al,0xf1
  4070ac:	shr    DWORD PTR [ebp+0x7c],0x1b
  4070b0:	pop    ebp
  4070b1:	dec    esp
  4070b2:	and    cl,BYTE PTR [ecx-0x4f]
  4070b5:	test   BYTE PTR [eax+0x1c5353ad],0x2f
  4070bc:	fwait
  4070bd:	repnz jecxz 0x407124
  4070c0:	mov    ch,0x99
  4070c2:	js     0x4070e3
  4070c4:	mov    bl,0x8f
  4070c6:	int3   
  4070c7:	clc    
  4070c8:	cmp    eax,edx
  4070ca:	mov    edi,0x95c0c01e
  4070cf:	xchg   DWORD PTR [ecx-0x4b2f0720],esp
  4070d5:	and    DWORD PTR [esi+0x258555c5],edi
  4070db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070dc:	rcr    BYTE PTR [eax],0x48
  4070df:	sub    cl,BYTE PTR [esp+eiz*2]
  4070e2:	mov    WORD PTR [esi+0x15],?
  4070e5:	xlat   BYTE PTR cs:[ebx]
  4070e7:	pop    esi
  4070e8:	mov    ah,BYTE PTR [esi-0x62604b65]
  4070ee:	mov    dh,0xb3
  4070f0:	mov    esi,0x9d5ff82e
  4070f5:	cmp    DWORD PTR [ecx-0x23],edx
  4070f8:	adc    BYTE PTR [edi+0xe5d2f80],cl
  4070fe:	jmp    0x3dd0:0x59fcaebd
  407105:	mov    edi,0x7bbfa037
  40710a:	rcl    BYTE PTR [ecx-0x55],0xbb
  40710e:	cs in  eax,dx
  407110:	xor    esi,ebp
  407112:	and    DWORD PTR [esp+ecx*8+0x40],ecx
  407116:	mov    ebp,?
  407118:	imul   edi,ebp,0x68c2d79a
  40711e:	cwde   
  40711f:	mov    ds:0xcce06ae2,eax
  407124:	sbb    BYTE PTR [ecx],bl
  407126:	mov    eax,0xdf5178e3
  40712b:	and    BYTE PTR [esi+0x4d],ah
  40712e:	push   0x48
  407130:	or     eax,0x1c6ba474
  407135:	mov    eax,0x1bc5bd47
  40713a:	cmp    al,0x1
  40713c:	sub    esp,DWORD PTR [esi-0x1bcb1dd]
  407142:	xchg   BYTE PTR [eax],dl
  407144:	pushf  
  407145:	int    0xd7
  407147:	or     eax,0x7b30e760
  40714c:	(bad)  
  40714d:	in     eax,0xd5
  40714f:	aaa    
  407150:	sbb    BYTE PTR [esp+eax*2+0x66],bh
  407154:	das    
  407155:	pop    eax
  407156:	mov    eax,0x6824de85
  40715b:	pop    eax
  40715c:	or     BYTE PTR [edi],ah
  40715e:	adc    al,0x5c
  407160:	dec    ebx
  407161:	repz and esp,ecx
  407164:	pusha  
  407165:	in     eax,0x35
  407167:	mov    ah,0x3a
  407169:	dec    edx
  40716a:	lea    esi,[edx]
  40716c:	shl    DWORD PTR [ecx],0x72
  40716f:	cdq    
  407170:	inc    ebp
  407171:	sbb    cl,0x6c
  407174:	jae    0x407194
  407176:	outs   dx,BYTE PTR ds:[esi]
  407177:	jno    0x4071c3
  407179:	cmp    DWORD PTR [ecx],ecx
  40717b:	or     ecx,DWORD PTR [ecx+0x6c11828d]
  407181:	mov    ebx,0xc93edf78
  407186:	(bad)  
  407187:	xchg   ebp,eax
  407188:	xchg   edi,eax
  407189:	lahf   
  40718a:	xchg   ecx,eax
  40718b:	pop    esi
  40718c:	and    eax,0xc75d201c
  407191:	(bad)  
  407192:	mov    eax,DWORD PTR [edx+esi*2]
  407195:	jns    0x407141
  407197:	mov    edi,0x42100cc4
  40719c:	inc    ebp
  40719d:	jb     0x40721b
  40719f:	ja     0x4071ce
  4071a1:	push   ebx
  4071a2:	cmp    edi,DWORD PTR [edi-0x2]
  4071a5:	push   ecx
  4071a6:	pop    es
  4071a7:	xor    ebx,eax
  4071a9:	cmp    DWORD PTR [esi+0x6c6a722d],edi
  4071af:	mov    WORD PTR [esi],cs
  4071b1:	add    al,0xcc
  4071b3:	mov    eax,ds:0x41d6fc82
  4071b8:	(bad)  
  4071b9:	add    al,BYTE PTR [edi+0x7a434cf]
  4071bf:	mov    ds:0x87741ab1,eax
  4071c4:	dec    ebp
  4071c5:	cdq    
  4071c6:	dec    esp
  4071c7:	or     cl,0xea
  4071ca:	cmc    
  4071cb:	sbb    DWORD PTR [ecx+0x378105],0xde72e1a9
  4071d5:	push   esp
  4071d6:	enter  0xeb43,0x6b
  4071da:	pusha  
  4071db:	dec    esi
  4071dc:	jle    0x407192
  4071de:	mov    WORD PTR [edx],es
  4071e0:	ins    DWORD PTR es:[edi],dx
  4071e1:	inc    edx
  4071e2:	push   bp
  4071e4:	xor    al,0xf6
  4071e6:	sar    DWORD PTR [edx+edi*8+0x51],1
  4071ea:	cmc    
  4071eb:	sbb    BYTE PTR [ebx+0x1a3f2be3],al
  4071f1:	push   ebx
  4071f2:	push   0x55
  4071f4:	inc    ebx
  4071f5:	jecxz  0x4071f1
  4071f7:	cdq    
  4071f8:	inc    esi
  4071f9:	xor    DWORD PTR [edi],0x69
  4071fc:	sub    al,0x36
  4071fe:	mov    bh,0x63
  407200:	sub    al,0x59
  407202:	pop    esp
  407203:	js     0x40721b
  407205:	lods   al,BYTE PTR ds:[esi]
  407206:	lea    ebp,[ecx+0x16f9db66]
  40720c:	xchg   ebx,eax
  40720d:	jg     0x40719f
  40720f:	cmp    al,BYTE PTR [ebp+0x23]
  407212:	jecxz  0x4071bb
  407214:	push   eax
  407215:	jcxz   0x407264
  407218:	pop    esi
  407219:	adc    eax,0xd498234e
  40721e:	lea    ecx,[esi-0x23]
  407221:	push   edi
  407222:	jp     0x407210
  407224:	int3   
  407225:	push   esp
  407226:	jnp    0x407221
  407228:	out    dx,eax
  407229:	mov    BYTE PTR [ebx-0x47],dl
  40722c:	xor    al,BYTE PTR [esi-0x35]
  40722f:	scas   al,BYTE PTR es:[edi]
  407230:	dec    esp
  407231:	in     eax,0xd0
  407233:	mov    al,ds:0xc89d902f
  407238:	or     BYTE PTR [edi+0x21],ch
  40723b:	pop    ss
  40723c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40723d:	mov    eax,0xa9a7b399
  407242:	inc    edi
  407243:	int3   
  407244:	repnz xor BYTE PTR [eax-0x5e],bl
  407248:	xchg   esi,eax
  407249:	or     al,0x22
  40724b:	in     eax,0xd5
  40724d:	je     0x7ada0f3a
  407253:	jns    0x40723c
  407255:	sbb    esi,esp
  407257:	or     esp,DWORD PTR [edx-0x8]
  40725a:	lea    eax,[esi]
  40725c:	and    DWORD PTR [esi],ecx
  40725e:	sub    dl,bl
  407260:	mov    ebx,0x7c372fb5
  407265:	rcl    esp,0x3
  407268:	sahf   
  407269:	pop    ss
  40726a:	fsubp  st(0),st
  40726c:	xchg   esi,eax
  40726d:	and    ebx,DWORD PTR [ebx+0x8ea59b6]
  407273:	imul   edx,DWORD PTR [edx-0x28],0xfffffff8
  407277:	call   DWORD PTR [ebx]
  407279:	ret    
  40727a:	jle    0x40723a
  40727c:	shr    DWORD PTR [esi+ecx*2-0x2e288f56],cl
  407283:	cmp    ch,BYTE PTR [edi+0x2069891e]
  407289:	cld    
  40728a:	sbb    eax,0x8a20e8d8
  40728f:	pop    esi
  407290:	fwait
  407291:	pop    ds
  407292:	retf   
  407293:	ja     0x407225
  407295:	and    ecx,DWORD PTR [eax]
  407297:	cli    
  407298:	addr16 sbb eax,0x4ba6fa
  40729e:	dec    esi
  40729f:	pop    ebx
  4072a0:	es pop ss
  4072a2:	mov    eax,0x6c5ef457
  4072a7:	ss inc esi
  4072a9:	cwde   
  4072aa:	mov    bh,0x2a
  4072ac:	mov    ah,0x91
  4072ae:	xchg   DWORD PTR [ecx+ebp*4+0x1a],edi
  4072b2:	stos   BYTE PTR es:[edi],al
  4072b3:	in     eax,dx
  4072b4:	dec    ebp
  4072b5:	ret    0xb40a
  4072b8:	int3   
  4072b9:	cli    
  4072ba:	sbb    ebx,eax
  4072bc:	xchg   DWORD PTR [eax],ecx
  4072be:	outs   dx,DWORD PTR ds:[esi]
  4072bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072c0:	nop
  4072c1:	outs   dx,DWORD PTR ds:[esi]
  4072c2:	in     al,dx
  4072c3:	mov    edx,0x50ab2846
  4072c8:	push   ss
  4072c9:	mov    bh,0x95
  4072cb:	mov    edx,0x81971340
  4072d0:	jbe    0x407291
  4072d2:	cmp    eax,esp
  4072d4:	inc    edx
  4072d5:	mov    eax,0x83fd1004
  4072da:	push   edi
  4072db:	xor    DWORD PTR [edx+0x28],ecx
  4072de:	div    DWORD PTR [ebx-0x3f]
  4072e1:	fs popf 
  4072e3:	cmp    DWORD PTR [edi-0x6d3606],esi
  4072e9:	sub    eax,0xe56a6dbe
  4072ee:	and    al,0xaf
  4072f0:	cs loopne 0x40734a
  4072f3:	cmp    al,0xc4
  4072f5:	mov    DWORD PTR [ebx+0x3c19c499],edi
  4072fb:	ins    DWORD PTR es:[edi],dx
  4072fc:	and    al,0x47
  4072fe:	into   
  4072ff:	mov    esp,0xdc23862b
  407304:	or     DWORD PTR [eax+0x42],edx
  407307:	lods   al,BYTE PTR ds:[esi]
  407308:	out    dx,eax
  407309:	sub    eax,0x4d2f8121
  40730e:	mov    eax,ds:0xc2b0bd0b
  407313:	push   ss
  407314:	sub    cl,BYTE PTR [edi+0x0]
  407317:	dec    eax
  407318:	mov    edx,0x11b3d3c1
  40731d:	arpl   bx,cx
  40731f:	loop   0x4072d1
  407321:	daa    
  407322:	test   al,0xf6
  407324:	cmp    bh,BYTE PTR [edx+0x7c]
  407327:	sub    eax,0x46d07cc3
  40732c:	add    BYTE PTR [ebp+0x56],0x6f
  407330:	into   
  407331:	inc    ebp
  407332:	xor    eax,0x122b9dce
  407337:	sub    eax,esi
  407339:	jle    0x4073b9
  40733b:	xchg   edi,eax
  40733c:	cwde   
  40733d:	out    0x15,eax
  40733f:	inc    edi
  407340:	daa    
  407341:	and    al,0xe
  407343:	mov    bh,bh
  407345:	in     al,dx
  407346:	mov    BYTE PTR [edi+ecx*2],dh
  407349:	stos   BYTE PTR es:[edi],al
  40734a:	es jl  0x40733e
  40734d:	test   al,0x2c
  40734f:	pop    eax
  407350:	push   ebx
  407351:	popf   
  407352:	sub    BYTE PTR [eax],bh
  407354:	xchg   ebp,eax
  407355:	push   0xffffffd3
  407357:	fs jae 0x4072e4
  40735a:	cwde   
  40735b:	and    eax,0x2ac18d44
  407360:	xor    BYTE PTR [edi-0xa],dl
  407363:	imul   edi,DWORD PTR [ebx+0x48],0x54
  407367:	imul   eax,DWORD PTR gs:[edi],0xe86ca0ac
  40736e:	fst    QWORD PTR [ebp+0x16]
  407371:	cmp    al,0xd2
  407373:	add    edx,ebp
  407375:	mov    edi,0x18767c89
  40737a:	sbb    al,0x71
  40737c:	jo     0x4073d7
  40737e:	(bad)  
  40737f:	mov    ebp,0x8c541726
  407384:	(bad)  
  407385:	cmc    
  407386:	jns    0x407403
  407388:	fldcw  WORD PTR [ebp+0x572aabe2]
  40738e:	inc    edx
  40738f:	mov    eax,0xd6eef23b
  407394:	test   DWORD PTR [ebp+0x24],0x7b0fa684
  40739b:	int3   
  40739c:	mov    ebp,0xfd82bc46
  4073a1:	fcmovu st,st(6)
  4073a3:	mov    ch,0xb8
  4073a5:	xchg   edi,eax
  4073a6:	in     eax,dx
  4073a7:	add    dl,BYTE PTR [ebx]
  4073a9:	pop    esp
  4073aa:	cmp    al,0xa6
  4073ac:	jno    0x407363
  4073ae:	lahf   
  4073af:	push   es
  4073b0:	pop    esi
  4073b1:	mov    ds:0x36a2d739,al
  4073b6:	in     al,dx
  4073b7:	cmp    bl,BYTE PTR [ebp+0x6c9da8ce]
  4073bd:	rcr    BYTE PTR [edx+0x48],0x43
  4073c1:	repz inc dx
  4073c4:	loop   0x4073fb
  4073c6:	popa   
  4073c7:	adc    BYTE PTR [eax-0x47ffcc16],ah
  4073cd:	mov    dl,0x1a
  4073cf:	push   0xffffffd6
  4073d1:	sbb    eax,0x219edef5
  4073d6:	ins    BYTE PTR es:[edi],dx
  4073d7:	cli    
  4073d8:	inc    esp
  4073d9:	cs imul ecx,ebp,0x459c40d
  4073e0:	gs push 0xffffff8c
  4073e3:	mov    ebp,0x8cc3a922
  4073e8:	mov    dh,0x99
  4073ea:	add    ecx,DWORD PTR [edi-0x1191dd3f]
  4073f0:	and    edx,DWORD PTR [edx]
  4073f2:	push   0xffffff95
  4073f4:	(bad)  
  4073f5:	clc    
  4073f6:	jmp    0x7bccc613
  4073fb:	cld    
  4073fc:	int    0x48
  4073fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073ff:	repnz mov dl,0xb8
  407402:	jb     0x407414
  407404:	rcr    BYTE PTR [ecx],0x37
  407407:	in     al,dx
  407408:	pop    esp
  407409:	mov    bl,0xb2
  40740b:	fsin   
  40740d:	fs mov ebx,0xb19157e
  407413:	sub    edx,DWORD PTR [ebp+0x137de073]
  407419:	retf   0x91cb
  40741c:	sbb    eax,0x54c8d0dc
  407421:	dec    esi
  407422:	adc    ch,BYTE PTR [edx]
  407424:	push   es
  407425:	stc    
  407426:	cmp    ch,ch
  407428:	and    eax,0x69ecbfe4
  40742d:	scas   al,BYTE PTR es:[edi]
  40742e:	jecxz  0x4073b5
  407430:	popf   
  407431:	sbb    eax,0x875ad96e
  407436:	adc    bl,dh
  407438:	fld    QWORD PTR [esi+eiz*8-0x7d]
  40743c:	xor    eax,0x740aa2af
  407441:	dec    ebp
  407442:	adc    eax,DWORD PTR [esi+0x17ffeb02]
  407448:	push   es
  407449:	rol    ecx,cl
  40744b:	cwde   
  40744c:	xchg   esp,eax
  40744d:	retf   
  40744e:	xor    dh,cl
  407450:	mov    al,ds:0x63de6186
  407455:	imul   DWORD PTR [ebx-0x49]
  407458:	aad    0xf3
  40745a:	ficom  WORD PTR [edx+0x2d]
  40745d:	dec    ebp
  40745e:	push   edi
  40745f:	inc    edx
  407460:	fnstcw WORD PTR [ecx]
  407462:	xchg   esi,eax
  407463:	fs das 
  407465:	test   al,0x3c
  407467:	dec    ebp
  407468:	repnz int3 
  40746a:	dec    edx
  40746b:	xor    ebx,DWORD PTR ds:0x2945553c
  407471:	pop    ecx
  407472:	sub    al,0x41
  407474:	out    0xa1,eax
  407476:	mov    ebx,0x9fe8fd
  40747b:	pop    esi
  40747c:	sub    bl,cl
  40747e:	inc    ebx
  40747f:	jmp    0xbccc0f49
  407484:	sbb    BYTE PTR [edi+0x5c],0xa
  407488:	pop    ebp
  407489:	inc    edi
  40748a:	xor    al,0x7e
  40748c:	jne    0x40746a
  40748e:	mov    bl,BYTE PTR [edx+0x10]
  407491:	mov    eax,0x1451a40f
  407496:	retf   0xc618
  407499:	lahf   
  40749a:	dec    ebp
  40749b:	ret    
  40749c:	xor    bh,BYTE PTR [ebp+ebp*2+0x78e376e2]
  4074a3:	jmp    0x4074f2
  4074a5:	out    0xad,al
  4074a7:	call   0x5754a92a
  4074ac:	outs   dx,DWORD PTR ds:[esi]
  4074ad:	cmp    al,0xee
  4074af:	jns    0x407473
  4074b1:	mov    bl,0x83
  4074b3:	adc    eax,0x4345d9b8
  4074b8:	fs and eax,0xabc5c7a0
  4074be:	adc    edx,edx
  4074c0:	xchg   edx,eax
  4074c1:	pop    eax
  4074c2:	mov    ebp,0xfeb6ba73
  4074c7:	mov    ds:0xa249edbc,al
  4074cc:	push   cs
  4074cd:	icebp  
  4074ce:	or     eax,0xc34c3ea9
  4074d3:	stos   BYTE PTR es:[edi],al
  4074d4:	sub    al,0x25
  4074d6:	jmp    0x3f2a:0xce518bbf
  4074dd:	sbb    eax,0xbd558c2c
  4074e2:	aas    
  4074e3:	out    dx,al
  4074e4:	xor    BYTE PTR [ecx+0x4b],dl
  4074e7:	retf   
  4074e8:	in     al,0x36
  4074ea:	js     0x40753d
  4074ec:	jecxz  0x40751d
  4074ee:	test   al,0xc0
  4074f0:	or     eax,0x48
  4074f3:	loopne 0x4074ab
  4074f5:	(bad)  [ecx-0x59]
  4074f8:	pop    ss
  4074f9:	imul   esi,DWORD PTR [ecx-0x17541203],0x208b2f5d
  407503:	pop    esp
  407504:	retf   
  407505:	call   0xe675:0x94aa7cc0
  40750c:	repz in eax,0x3b
  40750f:	dec    ebx
  407510:	dec    esp
  407511:	ret    0x506
  407514:	inc    ebx
  407515:	imul   ebp,ebp,0x542dfdb7
  40751b:	mov    al,0x9f
  40751d:	add    esp,DWORD PTR [ebp+0x73d82a6a]
  407523:	fmul   st(4),st
  407525:	push   edi
  407526:	jge    0x40750c
  407528:	mov    eax,0xc7882f09
  40752d:	call   0x32d55acf
  407532:	push   ecx
  407533:	xor    al,0x43
  407535:	xchg   esp,eax
  407536:	xor    bl,cl
  407538:	repnz adc BYTE PTR [esi],dh
  40753b:	fcmove st,st(2)
  40753d:	push   ss
  40753e:	jl     0x313de5f6
  407544:	mov    eax,0x3d632d6c
  407549:	aam    0x27
  40754b:	dec    ebp
  40754c:	aas    
  40754d:	pop    ecx
  40754e:	aad    0xe9
  407550:	cmp    edx,ebx
  407552:	and    DWORD PTR [edx+ebp*8+0x23c168bc],esi
  407559:	(bad)  
  40755a:	hlt    
  40755b:	mov    esi,ds
  40755d:	(bad)  
  40755e:	(bad)  
  407560:	ret    
  407561:	in     eax,0xf1
  407563:	jns    0x407573
  407565:	fwait
  407566:	loope  0x407573
  407568:	cld    
  407569:	test   al,0xc0
  40756b:	add    ebx,DWORD PTR [ecx-0x2b]
  40756e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40756f:	jnp    0x407533
  407571:	mov    BYTE PTR [edx],cl
  407573:	push   cs
  407574:	mov    BYTE PTR [esi-0x46a7b828],dl
  40757a:	push   edi
  40757b:	stos   BYTE PTR es:[edi],al
  40757c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40757d:	xchg   esp,eax
  40757e:	push   ebp
  40757f:	xor    BYTE PTR [ebx+0x5c],ah
  407582:	retf   
  407583:	push   edi
  407584:	imul   esi,DWORD PTR [eax],0xf4fdd836
  40758a:	cmp    al,0xe0
  40758c:	push   0x52
  40758e:	pop    ss
  40758f:	xchg   esp,eax
  407590:	dec    ebx
  407591:	fild   WORD PTR [eax-0x40]
  407594:	data16 xlat BYTE PTR ds:[ebx]
  407596:	xor    DWORD PTR [ecx+0x1a05e3f0],edi
  40759c:	pusha  
  40759d:	or     DWORD PTR [edi-0x7c41d31f],ecx
  4075a3:	(bad)  
  4075a4:	pop    esi
  4075a5:	pop    eax
  4075a6:	jb     0x407575
  4075a8:	(bad)  
  4075a9:	(bad)  
  4075aa:	clc    
  4075ab:	int    0x8b
  4075ad:	in     eax,dx
  4075ae:	jns    0x4075a4
  4075b0:	in     al,dx
  4075b1:	mov    eax,0x56ae7473
  4075b6:	cmp    esp,DWORD PTR [ebx+0x38964afe]
  4075bc:	mov    ds:0xc221df39,eax
  4075c1:	xor    DWORD PTR [eax+0x3d],esp
  4075c4:	jns    0x40760e
  4075c6:	sub    BYTE PTR [eax+0x182abc2b],ch
  4075cc:	retf   
  4075cd:	and    eax,0xcdcc45
  4075d2:	mov    DWORD PTR [esi],ebx
  4075d4:	push   cs
  4075d5:	ficomp WORD PTR [ebx+0x20c05529]
  4075db:	mov    esp,0x3e79d77d
  4075e0:	lea    esp,[edx]
  4075e2:	leave  
  4075e3:	jbe    0x4075ce
  4075e5:	cli    
  4075e6:	pop    edx
  4075e7:	cmp    eax,0xabe5ed8f
  4075ec:	mov    bh,0x24
  4075ee:	pop    edx
  4075ef:	mov    edi,0xff4e0c41
  4075f4:	dec    esi
  4075f5:	dec    esp
  4075f6:	jge    0x4075ac
  4075f8:	ret    
  4075f9:	dec    edx
  4075fa:	adc    BYTE PTR [esi+esi*8],al
  4075fd:	scas   eax,DWORD PTR es:[edi]
  4075fe:	sub    al,0xe3
  407600:	loop   0x4075d7
  407602:	push   ecx
  407603:	mov    ?,WORD PTR [ecx-0x5e]
  407606:	jl     0x40766d
  407608:	jns    0x407594
  40760a:	pop    edx
  40760b:	mov    edx,0x40453ff6
  407610:	xchg   edi,ecx
  407612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407613:	mov    eax,ds:0x3ca668c8
  407618:	xchg   BYTE PTR [esi-0xf],bl
  40761b:	shl    BYTE PTR [esi-0x7d],1
  40761e:	lods   al,BYTE PTR ds:[esi]
  40761f:	outs   dx,DWORD PTR ds:[esi]
  407620:	mov    esi,0xd90f55c4
  407625:	in     eax,0x8a
  407627:	ins    BYTE PTR es:[edi],dx
  407628:	inc    ebx
  407629:	pop    eax
  40762a:	rol    DWORD PTR [ecx+0x1f],0x4d
  40762e:	jg     0x407643
  407630:	lods   al,BYTE PTR ds:[esi]
  407631:	sbb    al,0xb1
  407633:	popa   
  407634:	outs   dx,DWORD PTR ds:[esi]
  407635:	add    esp,ebx
  407637:	jno    0x407687
  407639:	(bad)  
  40763a:	xchg   edx,eax
  40763b:	mov    ebp,0xc2905df1
  407640:	jne    0x407662
  407642:	sti    
  407643:	pop    edx
  407644:	adc    al,0x39
  407646:	int    0x8
  407648:	mov    cl,0xec
  40764a:	fcomp  DWORD PTR [esi+esi*8-0x5d9d8db4]
  407651:	das    
  407652:	or     esi,0x7332d067
  407658:	mov    ebp,0x86abc3f
  40765d:	retf   
  40765e:	xchg   DWORD PTR [edi-0x4d],edx
  407661:	inc    eax
  407662:	adc    eax,0x52a66541
  407667:	cdq    
  407668:	stos   DWORD PTR es:[edi],eax
  407669:	push   eax
  40766a:	and    eax,0x8d129ec4
  40766f:	(bad)  
  407670:	cmc    
  407671:	push   eax
  407672:	clc    
  407673:	inc    ebp
  407674:	cmp    DWORD PTR [ebx+0x7],ebp
  407677:	ret    
  407678:	fstp   QWORD PTR [ecx-0x37]
  40767b:	sbb    al,BYTE PTR [ecx]
  40767d:	cmp    al,0x72
  40767f:	pusha  
  407680:	pusha  
  407681:	pop    ebx
  407682:	xchg   ebx,eax
  407683:	xchg   esi,eax
  407684:	stos   BYTE PTR es:[edi],al
  407685:	push   edx
  407686:	add    eax,0x78e94ccf
  40768b:	xlat   BYTE PTR ds:[ebx]
  40768c:	xchg   esp,eax
  40768d:	cs dec ebx
  40768f:	in     al,0xcf
  407691:	jmp    DWORD PTR [edx-0x33d59d29]
  407697:	outs   dx,BYTE PTR ds:[esi]
  407698:	cmp    eax,0x8c2621fe
  40769d:	je     0x40768b
  40769f:	cmp    cl,BYTE PTR [ecx-0x3d]
  4076a2:	add    al,0xdf
  4076a4:	pusha  
  4076a5:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076a7:	jb     0x4076d2
  4076a9:	add    bl,BYTE PTR [ecx]
  4076ab:	add    al,0x73
  4076ad:	sar    DWORD PTR [ebx+0x23],cl
  4076b0:	cmp    bl,bl
  4076b2:	xlat   BYTE PTR ds:[ebx]
  4076b3:	adc    DWORD PTR [ebx],esp
  4076b5:	or     cl,BYTE PTR [eax]
  4076b7:	pop    ds
  4076b8:	sbb    eax,0x5f091153
  4076bd:	les    esp,FWORD PTR [edi-0x47850606]
  4076c3:	retf   0xa40
  4076c6:	sub    BYTE PTR [ebp+ebp*2-0x8],ch
  4076ca:	push   ss
  4076cb:	pop    edi
  4076cc:	mov    esp,edx
  4076ce:	inc    dh
  4076d0:	repnz add al,0xf5
  4076d3:	cld    
  4076d4:	pusha  
  4076d5:	pop    eax
  4076d6:	cmp    DWORD PTR [ecx-0x55],0xffffff8d
  4076da:	cmp    al,0x3b
  4076dc:	adc    edx,DWORD PTR [edi-0x3c]
  4076df:	(bad)  
  4076e0:	cmp    al,0x6a
  4076e2:	mov    al,ds:0x4f89a690
  4076e7:	sub    eax,0xf90ff813
  4076ec:	lahf   
  4076ed:	lods   eax,DWORD PTR ds:[esi]
  4076ee:	or     al,0x27
  4076f0:	inc    eax
  4076f1:	dec    edi
  4076f2:	cmp    ecx,DWORD PTR [edx+0x5d77a53a]
  4076f8:	xor    ecx,edx
  4076fa:	shr    DWORD PTR [esi+0xbf4b9b2],1
  407700:	inc    ecx
  407701:	not    DWORD PTR [ecx-0x12]
  407704:	or     dl,al
  407706:	sbb    dl,al
  407708:	ror    BYTE PTR [ecx],1
  40770a:	adc    esi,eax
  40770c:	xchg   ebp,eax
  40770d:	jge    0x4076ab
  40770f:	mov    WORD PTR [edx-0x27],ds
  407712:	sub    edx,eax
  407714:	cmp    DWORD PTR [ebp+0x70],edi
  407717:	(bad)
  40771a:	push   esp
  40771b:	mov    ds:0x53cc72ea,al
  407720:	push   ebp
  407721:	xlat   BYTE PTR ds:[ebx]
  407722:	mov    dl,0x4f
  407724:	push   ds
  407725:	cs dec eax
  407727:	inc    ebp
  407728:	mov    WORD PTR [ebp+0xd5413c7],ss
  40772e:	sub    BYTE PTR [ecx],dh
  407730:	adc    BYTE PTR [ebp-0x6e],ah
  407733:	pop    esi
  407734:	jae    0x40779f
  407736:	and    cl,BYTE PTR [edx-0x72]
  407739:	xchg   esp,eax
  40773a:	mov    WORD PTR [ebp+0x75],?
  40773d:	ret    0xe01c
  407740:	mov    al,ds:0x3722c6f4
  407745:	test   al,0x32
  407747:	mov    dh,dl
  407749:	rol    BYTE PTR gs:[ebp+esi*2+0x36],cl
  40774e:	add    edi,DWORD PTR [ebx]
  407750:	hlt    
  407751:	xchg   esi,eax
  407752:	fmul   st,st(1)
  407754:	mov    edx,0x38e0be4b
  407759:	cli    
  40775a:	inc    esi
  40775b:	stos   DWORD PTR es:[edi],eax
  40775c:	xchg   DWORD PTR [ebx-0x65],esp
  40775f:	ds dec ebp
  407761:	ja     0x40770d
  407763:	push   eax
  407764:	mov    cl,0x2c
  407766:	gs jae 0x407700
  407769:	repz out 0x16,al
  40776c:	push   ebp
  40776d:	imul   esi,edx,0xc8cc77ca
  407773:	sub    al,0xce
  407775:	icebp  
  407776:	add    al,cl
  407778:	fxch   st(0)
  40777a:	mov    ah,0xa8
  40777c:	rol    BYTE PTR [esi+0x681a4b8b],0xb5
  407783:	inc    ebx
  407784:	sub    eax,esi
  407786:	call   0xd4c16f52
  40778b:	or     bh,dl
  40778d:	adc    DWORD PTR [edx-0x5c],edi
  407790:	or     dl,bh
  407792:	in     al,0x28
  407794:	daa    
  407795:	stos   BYTE PTR es:[edi],al
  407796:	mov    esi,0x4fbee02b
  40779b:	fnstcw WORD PTR [ebp+0x7c]
  40779e:	sbb    DWORD PTR [eax+0x7d73a312],0x76
  4077a5:	cmp    al,0xe8
  4077a7:	gs (bad) 
  4077a9:	int    0x5c
  4077ab:	dec    edi
  4077ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077ad:	or     eax,0x7d4ee2a1
  4077b2:	ins    DWORD PTR es:[edi],dx
  4077b3:	call   0x428cb2dc
  4077b8:	pop    ebp
  4077b9:	imul   ebx,DWORD PTR [ecx],0x8
  4077bc:	loop   0x40782f
  4077be:	cmp    al,BYTE PTR [esi+0x2f]
  4077c1:	cmp    BYTE PTR [ebx+esi*1+0x71b48411],cl
  4077c8:	sbb    BYTE PTR [edi+0x13],dl
  4077cb:	inc    ebx
  4077cc:	ja     0x4077f5
  4077ce:	(bad)
  4077d3:	mov    ebp,0x7f26b978
  4077d8:	sbb    al,0x11
  4077da:	and    al,0x92
  4077dc:	sbb    DWORD PTR [edx+ecx*1],0x34c94e79
  4077e3:	std    
  4077e4:	mov    ch,0x3b
  4077e6:	mov    esi,0x3296ee8f
  4077eb:	xor    ebp,esi
  4077ed:	pop    edx
  4077ee:	pushf  
  4077ef:	jbe    0x407809
  4077f1:	mov    esp,0xa99a86da
  4077f6:	cli    
  4077f7:	dec    edx
  4077f8:	das    
  4077f9:	mov    eax,DWORD PTR [ecx-0x5eef12ae]
  4077ff:	dec    ebp
  407800:	pop    ss
  407801:	fadd   DWORD PTR [esi+0x6]
  407804:	leave  
  407805:	fcomp  QWORD PTR [esi-0x1ac06a31]
  40780b:	shl    DWORD PTR [esi],1
  40780d:	or     cl,BYTE PTR [eax]
  40780f:	or     ecx,0xffffffb5
  407812:	push   ebx
  407813:	xor    BYTE PTR [edi+0x71],0xb4
  407817:	inc    esp
  407818:	xor    al,0xd8
  40781a:	mov    bl,0xcb
  40781c:	es pop ds
  40781e:	sti    
  40781f:	rcl    DWORD PTR [edi+0x1fc786b4],1
  407825:	jne    0x407888
  407827:	cmp    ch,BYTE PTR [edx-0x4782f2f]
  40782d:	and    BYTE PTR [eax],0x7f
  407830:	add    al,0xd9
  407832:	cdq    
  407833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407834:	fcom   QWORD PTR [esi]
  407836:	mov    ebx,0x13b1dc37
  40783b:	sbb    BYTE PTR [ebx],dh
  40783d:	mov    eax,ds:0xdb87bab2
  407842:	ret    0xa3f2
  407845:	js     0x407842
  407847:	inc    edi
  407848:	adc    BYTE PTR [ebx+0x5302f804],dh
  40784e:	sbb    BYTE PTR [ecx+0x69fecfb5],0xc4
  407855:	pop    ebp
  407856:	and    eax,0xc6ba1cf2
  40785b:	jle    0x4078b5
  40785d:	push   ss
  40785e:	mov    ah,0xd5
  407860:	stos   BYTE PTR es:[edi],al
  407861:	and    DWORD PTR [ecx+0x671d11a0],edx
  407867:	aad    0xb2
  407869:	ja     0x40784a
  40786b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40786c:	popf   
  40786d:	ins    DWORD PTR es:[edi],dx
  40786e:	mov    dl,0xfb
  407870:	(bad)  
  407871:	in     eax,dx
  407872:	push   ebx
  407873:	adc    edx,ecx
  407875:	daa    
  407876:	inc    ecx
  407877:	fcomp  QWORD PTR [edi+0x77bf4469]
  40787d:	cli    
  40787e:	push   cs
  40787f:	mov    edx,0xc943086c
  407884:	hlt    
  407885:	lods   al,BYTE PTR ds:[esi]
  407886:	adc    al,0xa4
  407888:	mov    esp,0x940dc8f0
  40788d:	test   BYTE PTR [ebp+0x36],0x6
  407891:	sub    DWORD PTR [edi+ecx*8],0xa8c6e8f0
  407898:	mov    ds:0xd53cad69,eax
  40789d:	pop    ss
  40789e:	pop    ebx
  40789f:	mov    eax,DWORD PTR [ebp+0x6]
  4078a2:	(bad)  
  4078a3:	div    ebx
  4078a5:	pop    ebp
  4078a6:	sbb    BYTE PTR [ebp+0x42],ah
  4078a9:	push   ss
  4078aa:	xchg   BYTE PTR [ebp+0x64],dh
  4078ad:	cdq    
  4078ae:	and    esp,edx
  4078b0:	pop    eax
  4078b1:	icebp  
  4078b2:	lods   al,BYTE PTR ds:[esi]
  4078b3:	cmp    DWORD PTR [ebp-0x3f],edx
  4078b6:	xor    DWORD PTR [ebx+0x7a0d0bf3],esp
  4078bc:	xlat   BYTE PTR ds:[ebx]
  4078bd:	ret    
  4078be:	sub    edx,edi
  4078c0:	xchg   ebx,eax
  4078c1:	adc    BYTE PTR [edi-0x10],dh
  4078c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078c5:	nop
  4078c6:	pop    esp
  4078c7:	cld    
  4078c8:	dec    esi
  4078c9:	in     eax,0xc7
  4078cb:	cs scas eax,DWORD PTR es:[edi]
  4078cd:	pushf  
  4078ce:	xor    eax,0x5efbf75b
  4078d3:	cmp    edi,0xd95700b8
  4078d9:	pop    eax
  4078da:	mov    WORD PTR [ebp+ebp*1-0x55],fs
  4078de:	mov    dh,0x15
  4078e0:	loopne 0x407958
  4078e2:	mov    eax,ds:0x98cb0168
  4078e7:	cmp    dh,bh
  4078e9:	cmp    ah,al
  4078eb:	outs   dx,DWORD PTR ds:[esi]
  4078ec:	out    0x82,eax
  4078ee:	mov    eax,ds:0xc7ffd815
  4078f4:	inc    esi
  4078f5:	push   cs
  4078f6:	sbb    esi,DWORD PTR [esp+edi*4+0xd4cdfb0]
  4078fd:	cmp    al,0xd0
  4078ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407900:	dec    eax
  407901:	jns    0x407976
  407903:	push   esi
  407904:	les    esp,FWORD PTR [ecx+eiz*2]
  407907:	jmp    0xa8f3:0x6fb13ae3
  40790e:	sub    al,0x3b
  407910:	rcl    DWORD PTR [ebp+0x5292b966],0x99
  407917:	push   ecx
  407918:	sbb    al,cl
  40791a:	test   al,0x55
  40791c:	loopne 0x407994
  40791e:	ss xchg edx,eax
  407920:	sahf   
  407921:	push   ds
  407922:	pop    edx
  407923:	in     eax,0xc7
  407925:	dec    edx
  407926:	mov    esp,gs
  407928:	aad    0x57
  40792a:	int    0x84
  40792c:	mov    ds:0x16dfe1ca,eax
  407931:	cmc    
  407932:	and    BYTE PTR [esi-0x41],bl
  407935:	pop    esi
  407936:	ins    BYTE PTR es:[edi],dx
  407937:	xor    al,0xfb
  407939:	sub    ebx,ecx
  40793b:	mov    al,0x8f
  40793d:	mov    bl,0x12
  40793f:	dec    ebx
  407940:	jle    0x40791e
  407942:	mov    bh,0x3
  407944:	mov    BYTE PTR [ebp+0x4],bh
  407947:	ins    DWORD PTR es:[edi],dx
  407948:	les    esi,FWORD PTR [edx-0x61]
  40794b:	jle    0x407985
  40794d:	cs push ebx
  40794f:	or     ecx,esp
  407951:	jp     0x407966
  407953:	stos   BYTE PTR es:[edi],al
  407954:	(bad)  
  407955:	push   eax
  407956:	sub    bh,0xfa
  407959:	push   0xbee9fa83
  40795e:	jmp    0xcb342218
  407963:	push   esi
  407964:	(bad)  
  407965:	jl     0x407973
  407967:	jnp    0x407903
  407969:	xor    dl,ch
  40796b:	int    0xba
  40796d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40796e:	hlt    
  40796f:	push   es
  407970:	mov    esp,0xdfdc71ad
  407975:	out    dx,al
  407976:	xchg   DWORD PTR [esi-0x4a],ecx
  407979:	fidivr WORD PTR ds:0x5e22bde7
  40797f:	push   ecx
  407980:	iret   
  407981:	mov    ch,0xfe
  407983:	xchg   ecx,eax
  407984:	outs   dx,BYTE PTR ds:[esi]
  407985:	mov    esp,0x56b795ae
  40798a:	repnz popa 
  40798c:	mov    al,ds:0x5d3ecbbe
  407991:	into   
  407992:	call   0x162ba961
  407997:	cdq    
  407998:	xchg   edx,eax
  407999:	mov    eax,0xe2e8355a
  40799e:	xor    al,0x19
  4079a0:	mov    bh,0x67
  4079a2:	(bad)  
  4079a3:	pop    ecx
  4079a4:	sub    esp,DWORD PTR [edi]
  4079a6:	cwde   
  4079a7:	add    DWORD PTR [edx+ebx*8],ebx
  4079aa:	inc    esi
  4079ab:	stos   BYTE PTR es:[edi],al
  4079ac:	jg     0x407a04
  4079ae:	cmp    ebx,ecx
  4079b0:	lods   eax,DWORD PTR ds:[esi]
  4079b1:	inc    esi
  4079b2:	inc    esi
  4079b3:	in     eax,0x53
  4079b5:	scas   al,BYTE PTR es:[edi]
  4079b6:	mov    esi,0x260c5fa7
  4079bb:	cdq    
  4079bc:	pusha  
  4079bd:	lock imul esi,ecx,0x1d548821
  4079c4:	sbb    BYTE PTR [ebx-0x57ccf388],bh
  4079ca:	adc    esi,DWORD PTR [ebx+edi*1-0x68]
  4079ce:	retf   
  4079cf:	data16 sub dh,BYTE PTR [ebp+edi*1-0x32]
  4079d4:	xchg   esp,eax
  4079d5:	ins    BYTE PTR es:[edi],dx
  4079d6:	ret    
  4079d7:	cld    
  4079d8:	cld    
  4079d9:	pop    ebp
  4079da:	jl     0x407a4d
  4079dc:	jmp    0xfb74:0x23610523
  4079e3:	jmp    0x2898df31
  4079e8:	jno    0x40799f
  4079ea:	jbe    0x407a68
  4079ec:	out    dx,eax
  4079ed:	lds    edi,FWORD PTR [ebx]
  4079ef:	or     al,0x25
  4079f1:	cld    
  4079f2:	(bad)  
  4079f3:	jbe    0x4079d5
  4079f5:	in     al,dx
  4079f6:	fsub   st(3),st
  4079f8:	jmp    0x4079e0
  4079fa:	add    edx,edx
  4079fc:	sbb    DWORD PTR [eax+esi*8],ecx
  4079ff:	bound  eax,QWORD PTR [edx-0x69]
  407a02:	hlt    
  407a03:	dec    ebx
  407a04:	push   ebx
  407a05:	mov    cs,edi
  407a07:	gs and bl,ch
  407a0a:	add    ecx,DWORD PTR [esi-0x31]
  407a0d:	xchg   ecx,eax
  407a0e:	lds    eax,FWORD PTR [edx-0x13]
  407a11:	sbb    eax,DWORD PTR ds:0x9969e75b
  407a17:	ss xor al,0x9b
  407a1a:	data16 jae 0x407a86
  407a1d:	mov    dh,0x83
  407a1f:	fisttp QWORD PTR [ecx-0x4e]
  407a22:	inc    ebx
  407a23:	inc    edi
  407a24:	ss div bh
  407a27:	inc    eax
  407a28:	ror    ah,cl
  407a2a:	xor    eax,0xffffffbc
  407a2d:	(bad)  
  407a2e:	jmp    0x407a09
  407a30:	arpl   WORD PTR [esi],sp
  407a32:	fucom  st(6)
  407a34:	retf   0x52bf
  407a37:	xchg   edx,eax
  407a38:	cmp    esp,esi
  407a3a:	sub    DWORD PTR [ebx-0x6f5483e1],edx
  407a40:	adc    edi,DWORD PTR [esi+ebx*1]
  407a43:	cmc    
  407a44:	daa    
  407a45:	adc    edx,DWORD PTR [edi]
  407a47:	dec    eax
  407a48:	dec    edx
  407a49:	das    
  407a4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a4b:	(bad)  
  407a4c:	fstp   DWORD PTR [edi-0x70]
  407a4f:	pop    eax
  407a50:	and    al,0xa
  407a52:	test   al,ah
  407a54:	scas   eax,DWORD PTR es:[edi]
  407a55:	cmp    BYTE PTR [ebx-0x1184b5f3],0x4c
  407a5c:	and    dh,ch
  407a5e:	cld    
  407a5f:	pslld  mm1,QWORD PTR ds:0x436b7301
  407a66:	mov    esi,0xcedac7a2
  407a6b:	pop    ds
  407a6c:	push   ebx
  407a6d:	nop
  407a6e:	imul   ebx,DWORD PTR [ebp+0x6e],0x4a
  407a72:	stos   BYTE PTR es:[edi],al
  407a73:	adc    ebp,DWORD PTR [ebp+0x45]
  407a76:	jb     0x407a28
  407a78:	mov    eax,ds:0x3831efbf
  407a7d:	int    0xbe
  407a7f:	shr    ch,cl
  407a81:	fldln2 
  407a83:	or     eax,0xf2220091
  407a88:	popa   
  407a89:	adc    ch,dl
  407a8b:	arpl   WORD PTR [ecx],bp
  407a8d:	aaa    
  407a8e:	je     0x407a45
  407a90:	fbstp  TBYTE PTR [eax]
  407a92:	xchg   ecx,eax
  407a93:	fisubr DWORD PTR [esi+edi*2]
  407a96:	pop    ebp
  407a97:	mov    DWORD PTR [eax+0x679a4ed],ebx
  407a9d:	push   cs
  407a9e:	dec    esp
  407a9f:	add    BYTE PTR [ebx+0x6cceb11a],0xf3
  407aa6:	pop    ebp
  407aa7:	sbb    al,0x86
  407aa9:	pop    ecx
  407aaa:	nop
  407aab:	inc    edx
  407aac:	add    al,0xd0
  407aae:	xchg   esp,eax
  407aaf:	out    0xc2,eax
  407ab1:	cmp    DWORD PTR [ecx+0x6d],0x21b56b31
  407ab8:	enter  0x1b58,0xe5
  407abc:	imul   BYTE PTR [eax-0x4e]
  407abf:	addr16 retf 
  407ac1:	nop
  407ac2:	mov    ?,esp
  407ac4:	lahf   
  407ac5:	add    DWORD PTR [edi],0xffffffb3
  407ac8:	lea    esp,[ebx-0x4f45ceac]
  407ace:	fwait
  407acf:	imul   esp,DWORD PTR [ebp-0x70],0x29
  407ad3:	ja     0x407ad2
  407ad5:	jae    0x407af7
  407ad7:	add    dl,ah
  407ad9:	push   ecx
  407ada:	scas   al,BYTE PTR es:[edi]
  407adb:	jle    0x407ad0
  407add:	out    dx,al
  407ade:	out    0x31,al
  407ae0:	inc    ebx
  407ae1:	fcomi  st,st(6)
  407ae3:	shl    BYTE PTR [eax+0x7310d217],0x20
  407aea:	ror    DWORD PTR [ebx-0x2dd629a9],1
  407af0:	cdq    
  407af1:	cli    
  407af2:	popf   
  407af3:	retf   0x47e
  407af6:	push   edx
  407af7:	leave  
  407af8:	and    dl,cl
  407afa:	test   eax,0x77eba784
  407aff:	jmp    0xa9f23cd3
  407b04:	push   ebx
  407b05:	adc    ecx,DWORD PTR fs:[ebp+0x1d]
  407b09:	add    edi,DWORD PTR [edx+0x3f]
  407b0c:	iret   
  407b0d:	cdq    
  407b0e:	mov    ah,0xad
  407b10:	sti    
  407b11:	stc    
  407b12:	xor    BYTE PTR [ebx+0x17a0649a],0x87
  407b19:	out    dx,eax
  407b1a:	push   DWORD PTR [eax-0x31]
  407b1d:	pushf  
  407b1e:	outs   dx,DWORD PTR ds:[esi]
  407b1f:	rol    BYTE PTR cs:[eax],0xfd
  407b23:	mov    cl,0xef
  407b25:	data16 mov dh,0x85
  407b28:	ficomp DWORD PTR [eax+0x3a601531]
  407b2e:	mov    ch,0x8c
  407b30:	adc    BYTE PTR [esi-0x25],dh
  407b33:	inc    edx
  407b34:	test   ebp,edi
  407b36:	rcr    DWORD PTR [edi+0x50d128d0],cl
  407b3c:	dec    esp
  407b3d:	scas   eax,DWORD PTR es:[edi]
  407b3e:	shr    DWORD PTR [bx+si-0x7b],cl
  407b42:	mov    ecx,0x595435c1
  407b47:	les    eax,FWORD PTR [edx]
  407b49:	std    
  407b4a:	xor    DWORD PTR [eax-0x1c],ebx
  407b4d:	jg     0x407bbd
  407b4f:	push   ds
  407b50:	aad    0xc3
  407b52:	das    
  407b53:	ret    
  407b54:	retf   0xc304
  407b57:	lea    edx,[edi+0x248f4c57]
  407b5d:	xor    edi,DWORD PTR [ebp+eiz*2-0x68034bcc]
  407b64:	stos   DWORD PTR es:[edi],eax
  407b65:	sub    al,0x1
  407b67:	dec    edi
  407b68:	lds    eax,FWORD PTR [esi+0x68096993]
  407b6e:	mov    ecx,0xfcd44c58
  407b73:	arpl   sp,bp
  407b75:	add    edi,DWORD PTR [ebx+0x0]
  407b78:	cmp    cl,BYTE PTR [eax-0x1861984]
  407b7e:	ficom  WORD PTR [esi+0x70]
  407b81:	push   esi
  407b82:	dec    esp
  407b83:	push   edx
  407b84:	cdq    
  407b85:	ffreep st(3)
  407b87:	mov    ?,WORD PTR [ebp-0x69]
  407b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b8b:	shr    BYTE PTR ds:[esi],cl
  407b8e:	push   esi
  407b8f:	ds inc esp
  407b91:	iret   
  407b92:	in     eax,0xd2
  407b94:	sbb    dh,BYTE PTR [edi]
  407b96:	mov    dl,0xc8
  407b98:	push   eax
  407b99:	mov    edx,0xb6ce77a1
  407b9e:	push   ecx
  407b9f:	sub    ebp,DWORD PTR [edi+0x76]
  407ba2:	push   0xffffffb1
  407ba4:	xchg   ecx,eax
  407ba5:	adc    BYTE PTR [esi],al
  407ba7:	in     al,dx
  407ba8:	xchg   esi,eax
  407ba9:	shr    dh,0x85
  407bac:	push   0x49
  407bae:	xor    al,0x88
  407bb0:	scas   eax,DWORD PTR es:[edi]
  407bb1:	in     al,dx
  407bb2:	add    eax,0x82a10197
  407bb7:	mov    bh,0x5d
  407bb9:	xor    cl,ch
  407bbb:	aaa    
  407bbc:	dec    esp
  407bbd:	mov    edi,0x695830e
  407bc2:	push   cs
  407bc3:	aam    0x76
  407bc5:	retf   
  407bc6:	mov    dl,0x53
  407bc8:	inc    edi
  407bc9:	ret    
  407bca:	xor    eax,eax
  407bcc:	cmc    
  407bcd:	add    DWORD PTR [ecx],ecx
  407bcf:	or     DWORD PTR [ecx+0x24cf49d6],esp
  407bd5:	retf   
  407bd6:	test   al,0x78
  407bd8:	xchg   DWORD PTR [eax-0x1d],esi
  407bdb:	enter  0x4043,0x14
  407bdf:	lods   eax,DWORD PTR ds:[esi]
  407be0:	in     eax,0x9d
  407be2:	test   BYTE PTR [ebp-0xdb61e5c],bh
  407be8:	xor    edi,DWORD PTR [esp+edx*2]
  407beb:	jne    0x407ba5
  407bed:	hlt    
  407bee:	imul   edx,DWORD PTR [eax],0x7f
  407bf1:	aaa    
  407bf2:	or     DWORD PTR [edi],0xffffffe8
  407bf5:	push   esp
  407bf6:	cdq    
  407bf7:	inc    ebp
  407bf8:	cmp    BYTE PTR [esp+esi*1-0x763e40ac],0x96
  407c00:	(bad)  
  407c02:	dec    edi
  407c03:	retf   
  407c04:	mul    DWORD PTR [edi]
  407c06:	stos   DWORD PTR es:[edi],eax
  407c07:	mov    ebx,0xfe6631ea
  407c0c:	sar    BYTE PTR [eax-0x43],1
  407c0f:	xor    al,0x14
  407c11:	xchg   esi,eax
  407c12:	test   eax,0x91c188e8
  407c17:	push   0x7c02ba92
  407c1c:	arpl   bx,si
  407c1e:	bound  ebp,QWORD PTR [eax+0x66]
  407c21:	mov    fs,WORD PTR [eax-0x5b17d489]
  407c27:	in     al,dx
  407c28:	out    0xff,eax
  407c2a:	aas    
  407c2b:	out    0xf7,eax
  407c2d:	lds    eax,FWORD PTR [eax]
  407c2f:	ins    DWORD PTR es:[edi],dx
  407c30:	leave  
  407c31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c32:	adc    BYTE PTR ds:0x5abd3797,cl
  407c38:	dec    esi
  407c39:	dec    esp
  407c3a:	push   cs
  407c3b:	out    0xb,eax
  407c3d:	hlt    
  407c3e:	inc    BYTE PTR [ebx+0x3bb08880]
  407c44:	sub    al,0x50
  407c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c47:	pop    esi
  407c48:	push   edx
  407c49:	(bad)  
  407c4a:	ret    
  407c4b:	dec    edx
  407c4c:	push   ebx
  407c4d:	jb     0x407cb3
  407c4f:	sbb    BYTE PTR [ebp-0x50100381],ch
  407c55:	sub    bh,BYTE PTR [edi-0x6b]
  407c58:	iret   
  407c59:	in     eax,0x20
  407c5b:	xchg   ebx,eax
  407c5c:	pop    edi
  407c5d:	les    esi,FWORD PTR [edx-0x602bd2f0]
  407c63:	out    0x5,al
  407c65:	cmp    al,0x7f
  407c67:	mov    eax,0x7e072152
  407c6c:	or     ah,ah
  407c6e:	iret   
  407c6f:	adc    BYTE PTR [esi+0x7d],bl
  407c72:	std    
  407c73:	(bad)  
  407c74:	mov    al,0xf6
  407c76:	xchg   esi,eax
  407c77:	out    dx,al
  407c78:	pop    ebx
  407c79:	jnp    0x407cea
  407c7b:	jae    0x407c0c
  407c7d:	xchg   ebx,eax
  407c7e:	outs   dx,DWORD PTR ds:[esi]
  407c7f:	add    al,BYTE PTR [esp+edx*1-0x1c]
  407c83:	sub    DWORD PTR [ebp-0x36],esi
  407c86:	add    DWORD PTR [esi-0x27],eax
  407c89:	xchg   esp,eax
  407c8a:	inc    eax
  407c8b:	xchg   edi,eax
  407c8c:	sub    al,0x13
  407c8e:	out    dx,eax
  407c8f:	ss push ebp
  407c91:	cmp    BYTE PTR [ebx+0x7aad7b7d],dl
  407c97:	pop    ss
  407c98:	repnz int 0x6a
  407c9b:	pop    edx
  407c9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c9d:	mov    ch,0xa1
  407c9f:	ret    0x76bf
  407ca2:	repnz pusha 
  407ca4:	pop    esp
  407ca5:	push   cs
  407ca6:	lds    esp,FWORD PTR [edi+ebx*8]
  407ca9:	sbb    al,0x7
  407cab:	les    edx,FWORD PTR cs:[edx+0x74]
  407caf:	dec    eax
  407cb0:	mov    edi,0x82c60fb4
  407cb5:	cmp    al,0x2a
  407cb7:	ds sti 
  407cb9:	rcl    BYTE PTR ds:0xddebe125,cl
  407cbf:	sub    al,BYTE PTR [esi+0x48]
  407cc2:	and    bh,ah
  407cc4:	test   BYTE PTR ds:0x15d54891,0x61
  407ccb:	loopne 0x407c9f
  407ccd:	mov    ds:0x43117bf8,eax
  407cd2:	pop    ecx
  407cd3:	sub    DWORD PTR [ebp-0x4ba9ae2c],0x58abcc5a
  407cdd:	jmp    ecx
  407cdf:	cmp    dh,ch
  407ce1:	mov    ch,0x9b
  407ce3:	lock inc ebp
  407ce5:	outs   dx,BYTE PTR ds:[esi]
  407ce6:	mov    BYTE PTR [eax],bh
  407ce8:	and    DWORD PTR [esi-0x2a],0xb397ae5
  407cef:	add    al,ch
  407cf1:	pusha  
  407cf2:	out    0xdf,eax
  407cf4:	shl    BYTE PTR ds:0x3a99eb14,0xe9
  407cfb:	dec    esp
  407cfc:	dec    edi
  407cfd:	addr16 cs sahf 
  407d00:	sub    dl,BYTE PTR [ebp-0x4c2bbd1d]
  407d06:	or     dh,bl
  407d08:	cmp    esi,edi
  407d0a:	push   ebx
  407d0b:	retf   
  407d0c:	inc    edx
  407d0d:	std    
  407d0e:	scas   eax,DWORD PTR es:[edi]
  407d0f:	jnp    0x407d0f
  407d11:	sbb    DWORD PTR [ecx-0x42af9e43],ebx
  407d17:	and    ebx,esp
  407d19:	push   es
  407d1a:	iret   
  407d1b:	inc    ebp
  407d1c:	mov    edx,0x5ea60f7b
  407d21:	add    DWORD PTR [ebx-0x7b],ebp
  407d24:	xchg   ebp,eax
  407d25:	adc    DWORD PTR [eax-0x29],esp
  407d28:	jbe    0x407ceb
  407d2a:	int    0xb1
  407d2c:	pop    esp
  407d2d:	or     eax,0x1b5f68f8
  407d32:	nop
  407d33:	mov    ds:0x90818ec5,al
  407d38:	enter  0xa520,0xdf
  407d3c:	out    dx,eax
  407d3d:	inc    ecx
  407d3e:	push   0x7f4f0947
  407d43:	das    
  407d44:	mov    esi,0x3b69d734
  407d49:	add    DWORD PTR [ebx],eax
  407d4b:	mov    eax,ds:0xdb3bf8f4
  407d50:	mov    ebx,0x98b9203
  407d55:	and    al,0x7f
  407d57:	and    DWORD PTR [eax],eax
  407d59:	(bad)  
  407d5a:	js     0x407dcc
  407d5c:	(bad)  
  407d5e:	push   ss
  407d5f:	xchg   ecx,eax
  407d60:	int    0xbd
  407d62:	pushf  
  407d63:	sbb    DWORD PTR [ecx],0x3c
  407d66:	pop    esp
  407d67:	outs   dx,DWORD PTR ds:[esi]
  407d68:	je     0x407dd6
  407d6a:	xor    eax,0x8f0f8637
  407d6f:	lds    eax,FWORD PTR [eax-0x1e]
  407d72:	pop    ss
  407d73:	shr    dh,cl
  407d75:	sbb    esp,DWORD PTR [edi-0x80]
  407d78:	(bad)  [ecx]
  407d7a:	int3   
  407d7b:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d7d:	jmp    0x407d4f
  407d7f:	mov    ebx,0x6e044740
  407d84:	mov    al,0xb1
  407d86:	dec    esi
  407d87:	jmp    0x407d36
  407d89:	lods   eax,DWORD PTR ds:[esi]
  407d8a:	fs mov ch,0xb3
  407d8d:	int    0x1d
  407d8f:	arpl   WORD PTR [edi-0xd30ad81],dx
  407d95:	stos   DWORD PTR es:[edi],eax
  407d96:	inc    ebp
  407d97:	dec    edx
  407d98:	inc    ecx
  407d99:	mov    bh,0xf7
  407d9b:	shr    DWORD PTR [edx+0x38],cl
  407d9e:	in     eax,dx
  407d9f:	pop    ebx
  407da0:	mov    edx,0xac1dbb91
  407da5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407da6:	push   esi
  407da7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407da8:	pusha  
  407da9:	add    al,bl
  407dab:	xchg   edi,eax
  407dac:	xchg   ecx,eax
  407dad:	xor    DWORD PTR [esi],ecx
  407daf:	sti    
  407db0:	arpl   WORD PTR [edi+0x1808ff3d],bp
  407db6:	nop
  407db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407db8:	xchg   DWORD PTR [ebp+edx*4+0x34c14afd],ebp
  407dbf:	mov    edx,0xe13381b7
  407dc4:	mov    edx,DWORD PTR [edx-0x2]
  407dc7:	(bad)  
  407dc8:	aad    0xef
  407dca:	rcpps  xmm0,xmm1
  407dcd:	icebp  
  407dce:	adc    esp,DWORD PTR [esp+edi*1]
  407dd1:	shr    BYTE PTR [edx-0x63],1
  407dd4:	push   ecx
  407dd5:	mov    ch,BYTE PTR [edi+0x44]
  407dd8:	inc    esp
  407dd9:	pop    esi
  407dda:	cdq    
  407ddb:	inc    ebp
  407ddc:	jle    0x407e34
  407dde:	dec    eax
  407ddf:	xor    ebx,edx
  407de1:	test   eax,0x521a7604
  407de6:	repz push esp
  407de8:	xchg   esp,eax
  407de9:	sub    esi,DWORD PTR [esi]
  407deb:	mov    edi,0xfd20b140
  407df0:	mov    fs,WORD PTR [ecx]
  407df2:	sahf   
  407df3:	inc    esp
  407df4:	addr16 cwde 
  407df6:	fiadd  WORD PTR [ecx]
  407df8:	cli    
  407df9:	mov    bh,0x91
  407dfb:	xchg   esi,eax
  407dfc:	jb     0x407e58
  407dfe:	xchg   ah,dh
  407e00:	js     0x407e12
  407e02:	stos   DWORD PTR es:[edi],eax
  407e03:	jge    0x407e7c
  407e05:	adc    bl,bh
  407e07:	popa   
  407e08:	lahf   
  407e09:	sub    eax,DWORD PTR [ecx-0x2d988649]
  407e0f:	in     eax,dx
  407e10:	out    0x50,al
  407e12:	push   ebx
  407e13:	cmp    dh,BYTE PTR ds:0x3155ed85
  407e19:	dec    ecx
  407e1a:	and    eax,0xbb6f4ccd
  407e1f:	scas   al,BYTE PTR es:[edi]
  407e20:	push   ebx
  407e21:	rcl    BYTE PTR [esi-0x24241f51],cl
  407e27:	jmp    0x407e18
  407e29:	lahf   
  407e2a:	inc    ebx
  407e2b:	adc    eax,0xc565db6b
  407e30:	cmp    al,0x7f
  407e32:	fld    QWORD PTR ds:0x94cfadad
  407e38:	clc    
  407e39:	and    dh,dl
  407e3b:	adc    eax,0x53162e51
  407e40:	add    esp,ebp
  407e42:	adc    eax,0xc1303caa
  407e47:	arpl   bx,di
  407e49:	xor    dl,BYTE PTR [eax-0x7a]
  407e4c:	mov    cl,0x26
  407e4e:	clc    
  407e4f:	imul   ebp,DWORD PTR [ebp+0x1bf48b54],0x31
  407e56:	fnstcw WORD PTR [ebx+0x46]
  407e59:	mov    ah,0xed
  407e5b:	add    eax,0x70222f49
  407e60:	mov    cl,0xf0
  407e62:	mov    ch,0x5d
  407e64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e65:	push   edx
  407e66:	or     DWORD PTR [eax-0x7e5831b],ebp
  407e6c:	push   es
  407e6d:	dec    esi
  407e6e:	loopne 0x407e06
  407e70:	xchg   ecx,eax
  407e71:	je     0x407e9a
  407e73:	xor    al,0x7d
  407e75:	or     esp,ecx
  407e77:	lds    esi,FWORD PTR [ebx-0x7d]
  407e7a:	test   bh,ah
  407e7c:	cld    
  407e7d:	push   ss
  407e7e:	mov    ecx,0x6afe1e43
  407e83:	xor    BYTE PTR [esi],dl
  407e85:	je     0x407eba
  407e87:	(bad)  
  407e89:	sub    ecx,DWORD PTR [eax]
  407e8b:	jo     0x407e68
  407e8d:	call   0x4130d46a
  407e92:	jae    0x407eff
  407e94:	les    ecx,FWORD PTR [esi]
  407e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e97:	mov    al,es:0x35884009
  407e9d:	xchg   ecx,eax
  407e9e:	sbb    dl,dh
  407ea0:	in     al,dx
  407ea1:	or     al,al
  407ea3:	loopne 0x407e29
  407ea5:	call   0x2c39b960
  407eaa:	pop    eax
  407eab:	jns    0x407f00
  407ead:	inc    ebx
  407eae:	inc    eax
  407eaf:	dec    edx
  407eb0:	popf   
  407eb1:	add    ebp,DWORD PTR [ebp-0x12]
  407eb4:	aas    
  407eb5:	das    
  407eb6:	retf   0x8c53
  407eb9:	inc    ebp
  407eba:	por    mm5,QWORD PTR [esi+0x5d97e590]
  407ec1:	sbb    cl,BYTE PTR [ebx-0x60b6d400]
  407ec7:	inc    ebx
  407ec8:	or     BYTE PTR [ebx],cl
  407eca:	add    edi,DWORD PTR gs:[ebp-0x2c8e7d81]
  407ed1:	sbb    DWORD PTR [edi],0xfffffff8
  407ed4:	cdq    
  407ed5:	sub    al,0x3b
  407ed7:	cli    
  407ed8:	lahf   
  407ed9:	or     dh,BYTE PTR [edi]
  407edb:	mov    ds:0xfa8f8484,eax
  407ee0:	ret    
  407ee1:	adc    al,0xca
  407ee3:	sub    eax,0x4ba564be
  407ee8:	aam    0x7d
  407eea:	pop    es
  407eeb:	xchg   dl,al
  407eed:	test   BYTE PTR [edx+esi*8-0x4cf9174a],ah
  407ef4:	adc    ah,BYTE PTR [esi]
  407ef6:	cmp    BYTE PTR [ecx+0x52],ch
  407ef9:	in     al,0x76
  407efb:	inc    edx
  407efc:	mov    cl,0x86
  407efe:	lea    ebx,[eax]
  407f00:	(bad)  
  407f01:	leave  
  407f02:	mov    WORD PTR [ecx+eiz*4-0x945281f],?
  407f09:	mov    esp,0x87462d5c
  407f0e:	js     0x407ed1
  407f10:	and    BYTE PTR [ebx],bl
  407f12:	ret    
  407f13:	sti    
  407f14:	clc    
  407f15:	xor    esi,ebp
  407f17:	pop    ss
  407f18:	pop    ebx
  407f19:	stos   BYTE PTR es:[edi],al
  407f1a:	and    BYTE PTR [edx-0x59c380a5],dh
  407f20:	add    eax,DWORD PTR [ebx-0x124b44c4]
  407f26:	push   ebp
  407f27:	pop    ebp
  407f28:	out    0x66,eax
  407f2a:	xlat   BYTE PTR ds:[ebx]
  407f2b:	rol    DWORD PTR [ebx+0x70],1
  407f2e:	js     0x407eeb
  407f30:	ror    BYTE PTR [ecx+edx*2],0x57
  407f34:	mov    dh,BYTE PTR [edx+ebx*2]
  407f37:	mov    bl,0xf3
  407f39:	cmp    DWORD PTR [eax],edx
  407f3b:	popa   
  407f3c:	push   0xdfb2bbc5
  407f41:	cmp    DWORD PTR [ecx-0x58],eax
  407f44:	sub    BYTE PTR [edx-0x57],ah
  407f47:	or     esi,ebp
  407f49:	je     0x407f16
  407f4b:	outs   dx,BYTE PTR ds:[esi]
  407f4c:	pop    esp
  407f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f4e:	push   ds
  407f4f:	mov    BYTE PTR [edi+eax*1+0x204a0f6e],bh
  407f56:	rcr    ah,cl
  407f58:	push   edi
  407f59:	push   ebp
  407f5a:	jecxz  0x407f03
  407f5c:	mov    bh,0x81
  407f5e:	or     bl,cl
  407f60:	or     eax,0x7c185e60
  407f65:	out    0x3c,al
  407f67:	sub    dh,bh
  407f69:	popa   
  407f6a:	stos   BYTE PTR es:[edi],al
  407f6b:	sbb    bh,BYTE PTR [ebp-0x74]
  407f6e:	xlat   BYTE PTR ds:[ebx]
  407f6f:	and    eax,0x212b0110
  407f74:	push   esi
  407f75:	js     0x407fa9
  407f77:	mov    edx,0xf2220fb6
  407f7c:	and    DWORD PTR [ecx-0x7c19a958],ebx
  407f82:	cmp    al,BYTE PTR [edi+0x794d673b]
  407f88:	dec    esp
  407f89:	cs mov bh,0x9d
  407f8c:	push   edi
  407f8d:	mov    cl,dh
  407f8f:	cmp    DWORD PTR [ebp-0x1a],edi
  407f92:	sub    al,0xbb
  407f94:	push   cs
  407f95:	xor    DWORD PTR [ebx+0x6dd2d84e],ecx
  407f9b:	pop    edi
  407f9c:	inc    esi
  407f9d:	dec    edx
  407f9e:	enter  0x884a,0xf7
  407fa2:	mov    eax,ds:0xf057620c
  407fa7:	inc    ecx
  407fa8:	in     al,dx
  407fa9:	push   esp
  407faa:	xor    al,0x9d
  407fac:	ins    DWORD PTR es:[edi],dx
  407fad:	in     al,dx
  407fae:	mov    edx,0xd0264433
  407fb3:	mov    dh,0x3d
  407fb5:	cmp    BYTE PTR [edi-0x70],bh
  407fb8:	sti    
  407fb9:	sub    edi,DWORD PTR [edi]
  407fbb:	or     esi,DWORD PTR [edi+0x1e40dc4f]
  407fc1:	test   BYTE PTR [edx],bh
  407fc3:	xchg   esi,eax
  407fc4:	fdiv   QWORD PTR [ebp-0x22]
  407fc7:	xchg   esp,eax
  407fc8:	ret    0xf362
  407fcb:	sub    DWORD PTR [edx],0xfffffffc
  407fce:	sbb    DWORD PTR [edi-0x68],ebp
  407fd1:	retf   0xf23a
  407fd4:	xor    DWORD PTR [eax-0x46],edx
  407fd7:	inc    edx
  407fd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fd9:	retf   0x9925
  407fdc:	stos   BYTE PTR es:[edi],al
  407fdd:	imul   eax,eax,0x7cda04fc
  407fe3:	fimul  WORD PTR [ebp-0x5a]
  407fe6:	fisttp WORD PTR [ecx+0x3]
  407fe9:	add    BYTE PTR [ebx],ch
  407feb:	cmp    al,bl
  407fed:	sub    bl,cl
  407fef:	rol    BYTE PTR [eax+0x1],0x94
  407ff3:	sbb    dh,BYTE PTR [eax+eiz*2+0x56]
  407ff7:	mov    edi,0xbf52a116
  407ffc:	andnps xmm1,xmm4
  407fff:	(bad)  
  408000:	mov    al,0x23
  408002:	js     0x407fd3
  408004:	enter  0xedc8,0xa3
  408008:	fsub   st,st(5)
  40800a:	ficom  DWORD PTR ds:0x3376c259
  408010:	pop    eax
  408011:	aaa    
  408012:	cmp    eax,0x52f33ff3
  408017:	cmp    ebp,DWORD PTR [ecx]
  408019:	and    eax,0xbd560302
  40801e:	mov    bl,0x77
  408020:	push   eax
  408021:	pusha  
  408022:	aas    
  408023:	jmp    0x3c0b:0xa1b4a12c
  40802a:	pop    edi
  40802b:	cwde   
  40802c:	test   al,0x71
  40802e:	sbb    eax,0x1e7bdd0d
  408033:	xchg   edx,eax
  408034:	mov    bh,0x73
  408036:	inc    ecx
  408037:	std    
  408038:	in     eax,0x74
  40803a:	jbe    0x40803a
  40803c:	loope  0x407fd2
  40803e:	pop    eax
  40803f:	loopne 0x407ff0
  408041:	clc    
  408042:	mov    cs,WORD PTR [esi]
  408044:	sar    DWORD PTR [ebx-0x71d90675],1
  40804a:	mov    bl,0xa9
  40804c:	inc    edi
  40804d:	stc    
  40804e:	inc    ebp
  40804f:	cwde   
  408050:	cmp    al,0xf4
  408052:	rcl    DWORD PTR [eax],cl
  408054:	xchg   ecx,eax
  408055:	fcmove st,st(0)
  408057:	outs   dx,BYTE PTR ds:[esi]
  408058:	out    dx,al
  408059:	pop    ss
  40805a:	adc    DWORD PTR [edi+esi*1],esp
  40805d:	adc    ah,BYTE PTR [edi-0x1f]
  408060:	mov    ah,0xe6
  408062:	ja     0x40807f
  408064:	(bad)  
  408065:	ss in  al,dx
  408067:	inc    eax
  408068:	fwait
  408069:	xchg   edx,edx
  40806b:	push   esp
  40806c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40806d:	sub    eax,0xa491c7e5
  408072:	retf   0x88c3
  408075:	add    DWORD PTR [eax-0x38],ebx
  408078:	jae    0x408016
  40807a:	push   esi
  40807b:	cwde   
  40807c:	(bad)  
  40807d:	add    edi,DWORD PTR [ebx]
  40807f:	in     al,dx
  408080:	or     al,0x5b
  408082:	jo     0x40801d
  408084:	iret   
  408085:	int3   
  408086:	mov    fs,WORD PTR [eax+edx*8-0x50a1f7c0]
  40808d:	mov    ebp,0xd933c9d9
  408092:	push   esi
  408093:	pushf  
  408094:	cmp    BYTE PTR [ecx+eiz*4-0x23],0xd
  408099:	shl    BYTE PTR [esp+ebx*2+0x13c7f79e],0xbb
  4080a1:	push   ebx
  4080a2:	fdivr  st,st(5)
  4080a4:	push   0x53
  4080a6:	fwait
  4080a7:	lods   eax,DWORD PTR ds:[esi]
  4080a8:	mov    gs,ecx
  4080aa:	lods   al,BYTE PTR ds:[esi]
  4080ab:	xchg   esp,eax
  4080ac:	or     al,0x8
  4080ae:	in     al,0x56
  4080b0:	nop    DWORD PTR [ecx-0x6cd0788a]
  4080b7:	jl     0x4080a0
  4080b9:	mov    ebp,0xf13570f7
  4080be:	ret    
  4080bf:	dec    eax
  4080c0:	and    DWORD PTR [esi+0x3c],0x31
  4080c4:	push   ecx
  4080c5:	inc    ebp
  4080c6:	fwait
  4080c7:	arpl   WORD PTR [ecx+0x4f80fd64],si
  4080cd:	inc    edx
  4080ce:	adc    eax,0xcc4a2d7a
  4080d3:	push   esp
  4080d4:	mov    cs,edi
  4080d6:	fucomi st,st(3)
  4080d8:	mov    edx,0xa69df901
  4080dd:	adc    DWORD PTR [ebx+0x2639d76e],ecx
  4080e3:	lods   al,BYTE PTR ds:[esi]
  4080e4:	jmp    0x40810c
  4080e6:	adc    al,0x86
  4080e8:	retf   
  4080e9:	imul   eax,DWORD PTR ds:0x62daf18e,0xb3b3f066
  4080f3:	lahf   
  4080f4:	jecxz  0x408116
  4080f6:	cld    
  4080f7:	xor    bl,BYTE PTR [esi]
  4080f9:	lea    eax,[ecx]
  4080fb:	mov    dh,0x72
  4080fd:	outs   dx,DWORD PTR ds:[esi]
  4080fe:	pop    es
  4080ff:	pop    edx
  408100:	pushf  
  408101:	cmp    DWORD PTR [ebx],ebp
  408103:	jge    0x4080c9
  408105:	mov    cl,0x3b
  408107:	fidiv  WORD PTR [edi+0x57098d12]
  40810d:	mov    eax,0x418a748e
  408112:	sub    BYTE PTR [edi+0x5d],0xf4
  408116:	dec    ebp
  408117:	out    0xc1,eax
  408119:	add    esi,DWORD PTR fs:[ebp+0x3c]
  40811d:	loopne 0x4080f1
  40811f:	xchg   ebp,eax
  408120:	jne    0x40813a
  408122:	mov    esi,edi
  408124:	pushf  
  408125:	and    BYTE PTR [ecx+0x1b],dh
  408128:	ret    
  408129:	lahf   
  40812a:	ins    BYTE PTR es:[edi],dx
  40812b:	sub    edx,DWORD PTR ds:0x86a17f59
  408131:	add    bl,BYTE PTR [esi-0x5e67721f]
  408137:	lea    edi,[ebp-0x6d]
  40813a:	sbb    esi,DWORD PTR [ecx-0x3f6b19fb]
  408140:	inc    ebp
  408141:	add    bl,BYTE PTR [ebx-0x30b9c500]
  408147:	pop    esi
  408148:	stos   DWORD PTR es:[edi],eax
  408149:	shl    BYTE PTR [esi],cl
  40814b:	ror    DWORD PTR [ebp+0x4c],1
  40814e:	test   al,0x33
  408150:	push   esi
  408151:	pop    ds
  408152:	in     eax,dx
  408153:	mov    ah,0xce
  408155:	mov    bl,bh
  408157:	sub    al,0x64
  408159:	rcr    dh,0x9c
  40815c:	scas   al,BYTE PTR es:[edi]
  40815d:	sbb    al,0x24
  40815f:	mov    bl,BYTE PTR [ecx-0x6c]
  408162:	imul   eax
  408164:	stc    
  408165:	sbb    DWORD PTR [ecx+eiz*2+0xb],ebx
  408169:	mov    edi,0x6e2ffaaa
  40816e:	push   esi
  40816f:	xchg   DWORD PTR [ecx],edi
  408171:	xchg   edx,eax
  408172:	mov    ecx,0x1a9d723c
  408177:	mov    ebx,0xe37eaf89
  40817c:	sub    BYTE PTR [ecx-0x2453cd17],bh
  408182:	push   edx
  408183:	jo     0x408180
  408185:	xor    ebp,DWORD PTR [eax+0x2b1d49ae]
  40818b:	sbb    DWORD PTR [edx],0xc45a81d8
  408191:	xor    esp,DWORD PTR [esi]
  408193:	mov    esi,0xdcf6d493
  408198:	push   ss
  408199:	(bad)  
  40819a:	icebp  
  40819b:	int    0x1e
  40819d:	pop    edi
  40819e:	add    DWORD PTR [eax+0x5c],0x5f
  4081a2:	dec    ebx
  4081a3:	lahf   
  4081a4:	and    ebx,DWORD PTR [edx+0x1a547bb1]
  4081aa:	repz mov esi,0xcbc24f22
  4081b0:	sahf   
  4081b1:	ret    0xa785
  4081b4:	mov    ds:0x1d2e6a28,al
  4081b9:	add    eax,0x42f41f5a
  4081be:	gs pop es
  4081c0:	push   ss
  4081c1:	retf   0x78a1
  4081c4:	jno    0x40823d
  4081c6:	mov    ss,esi
  4081c8:	pop    edx
  4081c9:	ficom  WORD PTR [eax-0x6c]
  4081cc:	retf   0xbd1d
  4081cf:	outs   dx,BYTE PTR ds:[esi]
  4081d0:	jmp    0xcf8c:0xd1167654
  4081d7:	push   0x14
  4081d9:	call   0x79774612
  4081de:	pop    ss
  4081df:	mov    cl,0xd6
  4081e1:	inc    ecx
  4081e2:	inc    ebx
  4081e3:	and    al,0xc1
  4081e5:	push   0xffffffe2
  4081e7:	and    eax,0x149a72b8
  4081ec:	int3   
  4081ed:	cdq    
  4081ee:	push   eax
  4081ef:	call   0x6fe1:0xea5aa722
  4081f6:	xchg   edx,eax
  4081f7:	out    0xc4,eax
  4081f9:	jns    0x40818e
  4081fb:	bound  edx,QWORD PTR [esi-0x44]
  4081fe:	jns    0x408194
  408200:	mov    eax,0x2837dd64
  408205:	xchg   ebp,eax
  408206:	hlt    
  408207:	out    dx,eax
  408208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408209:	clc    
  40820a:	pop    eax
  40820b:	es cs push ds
  40820e:	lock xchg edi,eax
  408210:	fwait
  408211:	(bad)  
  408212:	idiv   DWORD PTR [ecx]
  408214:	(bad)  
  408215:	clc    
  408216:	push   0x3b
  408218:	cmp    bh,bh
  40821a:	or     esp,DWORD PTR ds:0xb828a1ac
  408220:	retf   
  408221:	pop    eax
  408222:	call   0x53056932
  408227:	pop    ecx
  408228:	push   es
  408229:	outs   dx,DWORD PTR ds:[esi]
  40822a:	xor    ecx,DWORD PTR [esi+0x1eda8e67]
  408230:	in     eax,0x9f
  408232:	adc    bl,dl
  408234:	sub    BYTE PTR ds:0x2d868fef,al
  40823a:	jne    0x408222
  40823c:	or     BYTE PTR [eax+0x368990be],cl
  408242:	sbb    edx,DWORD PTR [esi]
  408244:	cmp    ch,BYTE PTR [esi]
  408246:	imul   esi,DWORD PTR [edi+0x395b959b],0x30
  40824d:	mov    edi,0x9eb88d85
  408252:	jae    0x40828d
  408254:	mov    BYTE PTR ds:0xed6f6b34,al
  40825a:	pop    esi
  40825b:	std    
  40825c:	fs cwde 
  40825e:	ja     0x40828e
  408260:	or     esp,eax
  408262:	mov    dl,0xf4
  408264:	sbb    dl,BYTE PTR [ecx-0x7daa369]
  40826a:	sbb    ebp,edi
  40826c:	add    DWORD PTR [eax],ecx
  40826e:	test   DWORD PTR [edx],0x73e05286
  408274:	dec    esi
  408275:	ds in  eax,dx
  408277:	push   ebp
  408278:	pop    edi
  408279:	dec    ecx
  40827a:	pop    ds
  40827b:	fisub  WORD PTR [edx]
  40827d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40827e:	sub    BYTE PTR [edx+0x29574903],bh
  408284:	(bad)  
  408285:	jp     0x4082d8
  408287:	test   BYTE PTR [edi+0x44],0x6e
  40828b:	pusha  
  40828c:	pop    esp
  40828d:	or     ebp,edi
  40828f:	inc    ecx
  408290:	jns    0x408255
  408292:	dec    ecx
  408293:	mov    al,0xdb
  408295:	out    dx,eax
  408296:	add    ch,BYTE PTR [ebx]
  408298:	jns    0x408232
  40829a:	loop   0x4082c8
  40829c:	push   0xebd46a25
  4082a1:	adc    eax,ebp
  4082a3:	and    BYTE PTR [esi],dh
  4082a5:	adc    esi,DWORD PTR [eax+edi*8]
  4082a8:	ins    BYTE PTR es:[edi],dx
  4082a9:	pop    eax
  4082aa:	xchg   ebx,eax
  4082ab:	or     DWORD PTR [esi-0x4c],edx
  4082ae:	rcr    DWORD PTR [eax+0x6d],0x5d
  4082b2:	or     esp,DWORD PTR cs:[ebx]
  4082b5:	loope  0x4082d3
  4082b7:	repnz mov ebp,0xdd0a4690
  4082bd:	add    esi,esp
  4082bf:	mov    ch,0xb3
  4082c1:	lods   al,BYTE PTR ds:[esi]
  4082c2:	data16 stc 
  4082c4:	js     0xdbf2f575
  4082ca:	dec    ch
  4082cc:	(bad)  
  4082ce:	xchg   ebx,eax
  4082cf:	aaa    
  4082d0:	jmp    0x7bd73d82
  4082d5:	jns    0x408258
  4082d7:	push   ds
  4082d8:	jne    0x4082e2
  4082da:	es pop ecx
  4082dc:	ret    
  4082dd:	outs   dx,DWORD PTR ds:[esi]
  4082de:	retf   0x5500
  4082e1:	inc    eax
  4082e2:	(bad)  
  4082e3:	adc    edx,DWORD PTR [edi+ebx*2+0x5f]
  4082e7:	imul   BYTE PTR [ecx*1-0x3331dbb9]
  4082ee:	jge    0x4082a3
  4082f0:	push   0xffffffd5
  4082f2:	retf   
  4082f3:	jb     0x4082ed
  4082f5:	rcl    DWORD PTR [eax*8+0x1f1013f2],1
  4082fc:	adc    al,0xc3
  4082fe:	add    DWORD PTR [ebx+0x1459e733],0xe8c1c1a6
  408308:	in     al,0x50
  40830a:	pop    edi
  40830b:	lods   eax,DWORD PTR ds:[esi]
  40830c:	inc    eax
  40830d:	pop    es
  40830e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40830f:	jecxz  0x408380
  408311:	or     DWORD PTR [ebx],eax
  408313:	lods   al,BYTE PTR ds:[esi]
  408314:	mov    ds:0x6bc5144d,eax
  408319:	sahf   
  40831a:	push   esp
  40831b:	xchg   ecx,eax
  40831c:	leave  
  40831d:	data16 jmp 0x40830e
  408320:	xchg   ebp,eax
  408321:	adc    BYTE PTR [edx],0x1d
  408324:	loope  0x4082d7
  408326:	test   BYTE PTR [edx+0xa],0x1d
  40832a:	sbb    cl,BYTE PTR [ecx]
  40832c:	inc    ebp
  40832d:	test   al,0x8
  40832f:	fst    QWORD PTR [ebx-0x467d3c90]
  408335:	mov    bl,0x1
  408337:	fidiv  DWORD PTR ds:0x36cab1fb
  40833d:	scas   eax,DWORD PTR es:[edi]
  40833e:	pop    esi
  40833f:	jmp    0xd916:0x11e3d9d9
  408346:	cmp    al,0x5
  408348:	sbb    al,0xbf
  40834a:	pop    ebx
  40834b:	call   0xd61b6646
  408350:	mov    cl,0xb5
  408352:	mov    al,ds:0x388ea932
  408357:	arpl   bp,si
  408359:	dec    edi
  40835a:	adc    ecx,esi
  40835c:	pop    esp
  40835d:	fstp   QWORD PTR [esp+ecx*4-0x1db43b5e]
  408364:	bound  ebx,QWORD PTR [edi+0x38207f93]
  40836a:	xor    eax,0x81bf92ee
  40836f:	mov    esi,0x23977ed4
  408374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408375:	mov    esp,0xbe4c699
  40837a:	icebp  
  40837b:	hlt    
  40837c:	dec    edi
  40837d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40837e:	inc    edi
  40837f:	or     edx,ebx
  408381:	xchg   edi,eax
  408382:	mov    edi,0x5dbcbd0b
  408387:	lods   eax,DWORD PTR ds:[esi]
  408388:	xor    BYTE PTR [edi-0x30],bl
  40838b:	add    ah,0xb3
  40838e:	sbb    ebx,esp
  408390:	popa   
  408391:	or     ebp,eax
  408393:	test   DWORD PTR [edi+0x1c],edx
  408396:	pop    ss
  408397:	rol    DWORD PTR [edx],0xf0
  40839a:	or     BYTE PTR [eax+0x18e92394],dh
  4083a0:	(bad)  
  4083a1:	gs pop es
  4083a3:	add    BYTE PTR [esi-0x4ef8e63f],ch
  4083a9:	push   ebx
  4083aa:	repz sbb DWORD PTR [eax-0x41],edi
  4083ae:	aam    0xaa
  4083b0:	imul   eax,ebx,0xa64e0478
  4083b6:	scas   eax,DWORD PTR es:[edi]
  4083b7:	and    al,0x39
  4083b9:	push   ds
  4083ba:	cld    
  4083bb:	xor    al,0x36
  4083bd:	div    DWORD PTR [ebx]
  4083bf:	jl     0x40841d
  4083c1:	sti    
  4083c2:	pop    esi
  4083c3:	mov    ds:0xdcdab261,eax
  4083c8:	int    0x2d
  4083ca:	sub    dl,BYTE PTR [esi-0x5fbbc4d8]
  4083d0:	mov    BYTE PTR [edi],bl
  4083d2:	dec    ebx
  4083d3:	sbb    ebp,DWORD PTR [edi+0x66]
  4083d6:	fscale 
  4083d8:	fiadd  WORD PTR [edi+0x64]
  4083db:	cmp    ebx,ecx
  4083dd:	mov    ah,0x79
  4083df:	not    DWORD PTR [edi]
  4083e1:	int3   
  4083e2:	stos   DWORD PTR es:[edi],eax
  4083e3:	aas    
  4083e4:	or     eax,0xc142e412
  4083e9:	jmp    0xdbea:0x65aa4197
  4083f0:	hlt    
  4083f1:	jno    0x4083cb
  4083f3:	mov    edi,0x3830c577
  4083f8:	(bad)  
  4083f9:	pushf  
  4083fa:	jnp    0x408408
  4083fc:	pop    ecx
  4083fd:	fdivrp st(3),st
  4083ff:	cs cmp al,0x9c
  408402:	add    eax,0xedf174c4
  408407:	add    al,0x1f
  408409:	js     0x40838e
  40840b:	retf   
  40840c:	frstor [edi-0x5ed8fec1]
  408412:	and    eax,0x20
  408415:	aad    0x21
  408417:	sbb    eax,0xf5542155
  40841c:	cmp    eax,0x9e45e2df
  408421:	jns    0x408473
  408423:	xor    al,0x42
  408425:	jle    0x408437
  408427:	sub    DWORD PTR ds:0xdeb37388,esi
  40842d:	cmp    edx,eax
  40842f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408430:	ds jle 0x408455
  408433:	scas   al,BYTE PTR es:[edi]
  408434:	es add ebx,ebx
  408437:	nop
  408438:	stc    
  408439:	ins    BYTE PTR es:[edi],dx
  40843a:	rcr    BYTE PTR [ecx],1
  40843c:	lock mov ecx,0x76c85939
  408442:	xor    esi,edi
  408444:	out    dx,eax
  408445:	lds    esp,FWORD PTR [eax-0x2e]
  408448:	inc    ecx
  408449:	imul   ebp,DWORD PTR [ebx],0xffffff9a
  40844c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40844d:	inc    ebp
  40844e:	add    ebp,DWORD PTR [ebp+0x33]
  408451:	jno    0x4083ea
  408453:	mov    ebx,ecx
  408455:	push   ebp
  408456:	out    dx,al
  408457:	es or  esp,ebp
  40845a:	rcl    DWORD PTR ss:[ebp+0x1b502e95],cl
  408461:	pop    ebp
  408462:	xchg   esi,eax
  408463:	mov    eax,ds:0x5eb9ec72
  408468:	sbb    eax,DWORD PTR [ecx+0x23]
  40846b:	rcl    BYTE PTR [edx-0x593546e9],0x91
  408472:	sbb    eax,0xd4dcce4c
  408477:	inc    ebp
  408478:	push   0x71fe9f14
  40847d:	xor    eax,0xcf7e90e4
  408482:	ret    0xa777
  408485:	jbe    0x408506
  408487:	xchg   BYTE PTR [edi+ebp*4+0x146ab532],ch
  40848e:	fcomp  st(6)
  408490:	ret    
  408491:	out    dx,al
  408492:	test   al,0xc
  408494:	jge    0x40846b
  408496:	xor    al,0x48
  408498:	jg     0x408436
  40849a:	or     DWORD PTR [esi+0x539bf7a],esp
  4084a0:	add    BYTE PTR [ebx],al
  4084a2:	jb     0x408469
  4084a4:	xchg   ebp,eax
  4084a5:	pop    esi
  4084a6:	out    dx,al
  4084a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084a8:	xchg   ebp,eax
  4084a9:	test   al,0x99
  4084ab:	adc    eax,0x54fb6cb5
  4084b0:	xor    ch,BYTE PTR [esi+ebx*2-0x31]
  4084b4:	inc    ebp
  4084b5:	into   
  4084b6:	dec    esp
  4084b7:	jmp    0xe160:0xacb2d964
  4084be:	mov    al,BYTE PTR [ecx+edx*4]
  4084c1:	and    al,0x78
  4084c3:	push   ds
  4084c4:	xor    ebp,DWORD PTR ds:0x8c4805a
  4084ca:	and    dh,BYTE PTR [ebx+0x3e]
  4084cd:	inc    eax
  4084ce:	mov    bh,0xb7
  4084d0:	sub    edx,DWORD PTR [edi+0x2604068b]
  4084d6:	pop    eax
  4084d7:	mov    edi,DWORD PTR [ebx-0xf0616e0]
  4084dd:	enter  0x49aa,0x5d
  4084e1:	ja     0x4084fc
  4084e3:	push   0xffffff95
  4084e5:	lahf   
  4084e6:	int    0x6b
  4084e8:	out    0x2e,eax
  4084ea:	out    dx,al
  4084eb:	clc    
  4084ec:	or     DWORD PTR [eax],esi
  4084ee:	fsub   QWORD PTR [ebx+eiz*4]
  4084f1:	mov    al,ds:0x5dcbd78c
  4084f6:	pop    es
  4084f7:	mov    edi,0xef430486
  4084fc:	push   cs
  4084fd:	and    ch,BYTE PTR [ebp+0xd928877]
  408503:	and    DWORD PTR [edi+0x49597c17],esi
  408509:	lahf   
  40850a:	pop    esp
  40850b:	sub    DWORD PTR [edi],esp
  40850d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40850e:	out    0xb0,al
  408510:	neg    BYTE PTR [ecx-0x5]
  408513:	jae    0x40856b
  408515:	nop
  408516:	cmp    BYTE PTR [ecx+0x57],bh
  408519:	imul   ecx,DWORD PTR [ecx-0x1e],0xffffff84
  40851d:	cmp    al,0xc9
  40851f:	cmp    bl,ch
  408521:	outs   dx,BYTE PTR ds:[esi]
  408522:	fisub  DWORD PTR [ebp+0x3b]
  408525:	outs   dx,BYTE PTR ds:[esi]
  408526:	dec    edi
  408527:	xor    ah,dh
  408529:	pop    ebp
  40852a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40852b:	mov    eax,0x12c4a8ae
  408530:	push   0x55d27fb3
  408535:	cmp    al,0x31
  408537:	or     ebp,eax
  408539:	adc    edx,DWORD PTR [edx+0xe]
  40853c:	lea    esi,[esi+ecx*1+0x75a9b015]
  408543:	push   ss
  408544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408545:	and    edi,DWORD PTR [ecx+0x328eda0c]
  40854b:	dec    esi
  40854c:	xor    al,0x9c
  40854e:	xor    BYTE PTR [ecx-0x33],ah
  408551:	arpl   dx,sp
  408553:	outs   dx,DWORD PTR ds:[esi]
  408554:	mov    BYTE PTR [eax+edx*2],bh
  408557:	adc    DWORD PTR [esi],esi
  408559:	ins    BYTE PTR es:[edi],dx
  40855a:	jo     0x4085d2
  40855c:	aam    0xab
  40855e:	fnstsw WORD PTR [eax+0x3f]
  408561:	sbb    BYTE PTR [esi-0x20c8da0c],bl
  408567:	pop    ds
  408568:	jecxz  0x40856a
  40856a:	push   ebp
  40856b:	sbb    eax,0xa3c10a5d
  408570:	inc    esi
  408571:	data16 cli 
  408573:	add    edi,DWORD PTR [ebx]
  408575:	bound  ecx,QWORD PTR [ecx]
  408577:	push   ss
  408578:	jnp    0x4085a9
  40857a:	in     al,0xd7
  40857c:	mov    ch,0xbb
  40857e:	xchg   edx,eax
  40857f:	jg     0x4085a8
  408581:	xchg   edx,eax
  408582:	or     bl,BYTE PTR [ebx]
  408584:	xor    al,0x81
  408586:	cli    
  408587:	cmp    al,0x4f
  408589:	(bad)  
  40858a:	push   0xdcf98a6d
  40858f:	xchg   esi,eax
  408590:	out    0xe0,eax
  408592:	imul   BYTE PTR [edi-0x1397be8]
  408598:	jnp    0x40852f
  40859a:	cld    
  40859b:	mov    ebx,0x9d082ec
  4085a0:	int    0x71
  4085a2:	push   eax
  4085a3:	retf   0x8719
  4085a6:	adc    bh,BYTE PTR [esi]
  4085a8:	lahf   
  4085a9:	mov    edx,0x7e567de3
  4085ae:	ins    BYTE PTR es:[edi],dx
  4085af:	hlt    
  4085b0:	addr16 inc esp
  4085b2:	outs   dx,DWORD PTR ds:[esi]
  4085b3:	mov    WORD PTR [ecx],?
  4085b5:	repnz popa 
  4085b7:	xchg   esp,eax
  4085b8:	xor    al,0xde
  4085ba:	pushf  
  4085bb:	pop    edi
  4085bc:	cmc    
  4085bd:	popa   
  4085be:	loop   0x4085d1
  4085c0:	jnp    0x40859a
  4085c2:	and    DWORD PTR [ebx-0x1c],esp
  4085c5:	cmp    al,0x25
  4085c7:	inc    eax
  4085c8:	lods   al,BYTE PTR ds:[esi]
  4085c9:	lock aam 0xad
  4085cc:	xchg   edx,eax
  4085cd:	jae    0x4085fb
  4085cf:	jecxz  0x408578
  4085d1:	and    dl,BYTE PTR [esi+0x45]
  4085d4:	adc    ebp,0xffffff85
  4085d7:	stos   DWORD PTR es:[edi],eax
  4085d8:	push   ss
  4085d9:	push   ds
  4085da:	dec    esi
  4085db:	aaa    
  4085dc:	inc    esi
  4085dd:	pop    ebx
  4085de:	ss mov esi,0x4bfad6c1
  4085e4:	xor    eax,0xa5ff7a30
  4085e9:	sbb    ecx,ecx
  4085eb:	xchg   BYTE PTR [edx-0x10],dl
  4085ee:	push   esp
  4085ef:	in     eax,dx
  4085f0:	xlat   BYTE PTR ds:[ebx]
  4085f1:	adc    cl,BYTE PTR [edx]
  4085f3:	adc    eax,0x45c7324f
  4085f8:	dec    ebp
  4085f9:	out    dx,al
  4085fa:	shl    cl,1
  4085fc:	test   eax,0x73bb682c
  408601:	(bad)  
  408602:	popf   
  408603:	jne    0x4085ad
  408605:	push   ebx
  408606:	in     al,dx
  408607:	push   esi
  408608:	cmp    DWORD PTR [edi+edx*2+0x54d8a8ab],eax
  40860f:	mov    dl,0x70
  408611:	sbb    edi,esi
  408613:	ret    
  408614:	stos   DWORD PTR es:[edi],eax
  408615:	adc    DWORD PTR [ebx],ebx
  408617:	jmp    0x84a3:0x97e1e2b6
  40861e:	fs sti 
  408620:	xchg   edi,eax
  408621:	dec    esi
  408622:	call   0x78168005
  408627:	dec    eax
  408628:	ret    0x6b26
  40862b:	out    0x74,al
  40862d:	lock mov edi,0x6ecfed09
  408633:	in     eax,dx
  408634:	push   ss
  408635:	ret    0x18d
  408638:	jmp    0xbec68b01
  40863d:	nop
  40863e:	mov    cl,0x90
  408640:	pop    eax
  408641:	leave  
  408642:	sbb    BYTE PTR [esi+eiz*2],dh
  408645:	fadd   st,st(3)
  408647:	xchg   bl,ch
  408649:	daa    
  40864a:	jne    0x408621
  40864c:	pop    ebp
  40864d:	(bad)  
  40864e:	adc    al,0x3
  408650:	push   cs
  408651:	cs int3 
  408653:	fs jno 0x408675
  408656:	icebp  
  408657:	fisubr DWORD PTR [eax-0x7b]
  40865a:	in     eax,dx
  40865b:	push   esp
  40865c:	and    BYTE PTR [ecx],ah
  40865e:	loope  0x40863a
  408660:	push   esp
  408662:	icebp  
  408663:	call   0xc43:0x23ea75e
  40866a:	push   es
  40866b:	inc    edi
  40866c:	mov    eax,0xed08709f
  408671:	and    DWORD PTR [ecx-0x21],eax
  408674:	test   DWORD PTR [ecx+0x1a3e1410],0xe50f33d8
  40867e:	xchg   edi,eax
  40867f:	aas    
  408680:	and    ebp,DWORD PTR [eax-0x2eb3b193]
  408686:	in     al,0x1d
  408688:	pop    ebx
  408689:	fdivr  DWORD PTR [ebp+0x39086d9f]
  40868f:	sar    edx,1
  408691:	je     0x4086a0
  408693:	dec    edi
  408694:	fadd   DWORD PTR [edx]
  408696:	je     0x4086b4
  408698:	sub    dl,ch
  40869a:	shr    BYTE PTR ds:0x83f9cefb,1
  4086a0:	sub    DWORD PTR [edx-0x70596363],edx
  4086a6:	(bad)  
  4086a7:	cmp    DWORD PTR [eax-0x7ccd7867],ebp
  4086ad:	xor    edi,ebx
  4086af:	arpl   bp,bx
  4086b1:	stos   DWORD PTR es:[edi],eax
  4086b2:	lahf   
  4086b3:	inc    ebx
  4086b4:	jmp    0xef57:0x2ca88b9a
  4086bb:	shr    DWORD PTR [eax+0x30ccd8b],1
  4086c1:	popf   
  4086c2:	push   esp
  4086c3:	xchg   esp,eax
  4086c4:	int3   
  4086c5:	push   edx
  4086c7:	shl    DWORD PTR [ebx-0x74],1
  4086ca:	cli    
  4086cb:	mov    ds:0x68bd7964,eax
  4086d0:	call   0x765:0x17f2f2ff
  4086d7:	sbb    BYTE PTR [ecx],ah
  4086d9:	retf   
  4086da:	pusha  
  4086db:	call   0xbecc397a
  4086e0:	mov    edx,0xcf53512d
  4086e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086e6:	std    
  4086e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086e8:	out    0x13,eax
  4086ea:	sub    al,0x20
  4086ec:	push   ecx
  4086ed:	je     0x408731
  4086ef:	pusha  
  4086f0:	setg   BYTE PTR [eax-0x5b]
  4086f4:	imul   edx,DWORD PTR [ecx],0x7de72f1a
  4086fa:	retf   
  4086fb:	leave  
  4086fc:	mov    al,0x8a
  4086fe:	les    edx,FWORD PTR [ebx+0x1c]
  408701:	ficom  DWORD PTR [ecx-0x73793253]
  408707:	sar    al,1
  408709:	mov    dl,0xf
  40870b:	retf   0xf699
  40870e:	pop    esp
  40870f:	js     0x408742
  408711:	aam    0xf9
  408713:	dec    eax
  408714:	jg     0x40871d
  408716:	mov    BYTE PTR [ebx-0x71808e6],cl
  40871c:	push   ebp
  40871d:	push   ss
  40871e:	pop    ds
  40871f:	test   al,0xa1
  408721:	pusha  
  408722:	and    eax,0xfae0e579
  408727:	pop    esi
  408728:	scas   eax,DWORD PTR es:[edi]
  408729:	ins    BYTE PTR es:[edi],dx
  40872a:	xlat   BYTE PTR ds:[ebx]
  40872b:	in     al,0xc
  40872d:	inc    eax
  40872e:	loopne 0x40871a
  408730:	sub    al,0x1f
  408732:	lea    edi,[ecx+edx*8]
  408735:	gs lds ecx,FWORD PTR ss:[eax+0x17c9be7]
  40873d:	pop    ds
  40873e:	dec    ebx
  40873f:	mov    cl,0x67
  408741:	outs   dx,DWORD PTR ds:[esi]
  408742:	retf   
  408743:	push   ss
  408744:	sahf   
  408745:	jle    0x408704
  408747:	cmp    esi,DWORD PTR [edi-0x28]
  40874a:	inc    ebx
  40874b:	in     al,0xc9
  40874d:	cmps   DWORD PTR cs:[si],DWORD PTR es:[di]
  408750:	loop   0x4086ff
  408752:	mov    ebp,0x6c3dbf1b
  408757:	sub    BYTE PTR [esi],ah
  408759:	pop    esp
  40875a:	add    edx,DWORD PTR [eax-0x26]
  40875d:	imul   edi,edx,0x6201d49f
  408763:	rcr    BYTE PTR [edi-0x10f6116f],0xf6
  40876a:	pop    ebx
  40876b:	inc    ecx
  40876c:	dec    edx
  40876d:	inc    esp
  40876e:	je     0x4087ba
  408770:	fwait
  408771:	div    BYTE PTR [edx]
  408773:	mov    al,ds:0x432ef2f3
  408778:	sbb    DWORD PTR [edx],edx
  40877a:	repz mov esi,edx
  40877d:	bound  eax,QWORD PTR [ebp-0x69]
  408780:	div    BYTE PTR [ebp+edi*8+0x3c72c50e]
  408787:	and    cl,dl
  408789:	mov    edx,0x8e2f8214
  40878e:	loop   0x40879c
  408790:	mov    al,0x85
  408792:	enter  0xf800,0xb8
  408796:	lods   eax,DWORD PTR ds:[esi]
  408797:	stos   BYTE PTR es:[edi],al
  408798:	mov    cl,0x56
  40879a:	shl    BYTE PTR gs:[ecx+0x42046e1a],0xfa
  4087a2:	fwait
  4087a3:	pop    eax
  4087a4:	xor    al,0x11
  4087a6:	out    dx,eax
  4087a7:	cmp    BYTE PTR [ebx-0x56],0x92
  4087ab:	push   ss
  4087ac:	inc    ecx
  4087ad:	and    al,0xa3
  4087af:	jns    0x4087bd
  4087b1:	or     eax,0xea69caaf
  4087b6:	clc    
  4087b7:	jae    0x4087d6
  4087b9:	mov    ebp,0x9be2c618
  4087be:	push   edi
  4087bf:	ins    BYTE PTR es:[edi],dx
  4087c0:	jnp    0x40883c
  4087c2:	xlat   BYTE PTR ds:[ebx]
  4087c3:	dec    ebx
  4087c4:	mov    DWORD PTR ds:0x25f53b33,esp
  4087ca:	mov    eax,ds:0x6cd0e753
  4087cf:	sbb    eax,0xeb8e6834
  4087d4:	(bad)  
  4087d5:	loop   0x408855
  4087d7:	mov    WORD PTR [eax],fs
  4087d9:	sbb    esp,edi
  4087db:	xlat   BYTE PTR ds:[ebx]
  4087dc:	fsubr  st(5),st
  4087de:	not    DWORD PTR [ebp+0x5e]
  4087e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087e2:	dec    eax
  4087e3:	mov    dh,bh
  4087e5:	jo     0x408770
  4087e7:	xchg   esi,eax
  4087e8:	stc    
  4087e9:	xor    edx,DWORD PTR [ebx+0x35228232]
  4087ef:	test   DWORD PTR [ebp+edi*2+0x7f4e1fe3],esp
  4087f6:	xchg   edx,eax
  4087f7:	xor    BYTE PTR [ebx+0x64],ah
  4087fa:	fwait
  4087fb:	arpl   WORD PTR [esi],si
  4087fd:	add    ch,ah
  4087ff:	(bad)  
  408800:	enter  0x2c82,0x3a
  408804:	or     eax,0x90cec8ff
  408809:	stc    
  40880a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40880b:	mov    dl,0x7a
  40880d:	arpl   WORD PTR [eax-0x37],di
  408810:	sub    DWORD PTR [edi+0x5de4ae4f],esp
  408816:	fdiv   DWORD PTR [ebp+0x4d35404]
  40881c:	mov    edi,0x6cee989a
  408821:	jmp    DWORD PTR [esp+edi*1-0x593ecfd1]
  408828:	loop   0x408873
  40882a:	adc    eax,0x2278aae2
  40882f:	cmp    ch,cl
  408831:	mov    esp,0xc6b0e747
  408836:	je     0x408870
  408838:	fs (bad) 
  40883c:	fild   DWORD PTR [esi]
  40883e:	dec    ebp
  40883f:	jo     0x40880f
  408841:	ja     0x40882b
  408843:	pop    eax
  408844:	lahf   
  408845:	js     0x4087f1
  408847:	sub    DWORD PTR [edi+0x39],0x70ab6dbb
  40884e:	fist   DWORD PTR [ecx-0x297941e6]
  408854:	dec    DWORD PTR [edx-0x43]
  408857:	jge    0x408820
  408859:	repz mov edx,0x667f085a
  40885f:	ror    edi,0xab
  408862:	std    
  408863:	mov    edi,0x4f43c895
  408868:	jecxz  0x40886b
  40886a:	cwde   
  40886b:	sbb    BYTE PTR [edx+eiz*4+0x75],0x5d
  408870:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  408872:	sbb    BYTE PTR [edi+0x51c0293f],ch
  408878:	xchg   DWORD PTR [edx+ebp*2],esp
  40887b:	(bad)  [eax-0x5e12434e]
  408881:	mov    ds:0xc3f47bf0,eax
  408886:	mov    ebx,DWORD PTR [edi-0x54]
  408889:	jmp    FWORD PTR [esp+ebp*1]
  40888c:	add    dh,dl
  40888e:	sti    
  40888f:	cmp    esi,DWORD PTR [edi-0x1e]
  408892:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  408894:	mov    bl,0x6c
  408896:	mov    dl,0xf7
  408898:	shl    DWORD PTR [eax],1
  40889a:	sub    ebx,DWORD PTR [edx+0x697b6d6]
  4088a0:	mov    cl,0x28
  4088a2:	pop    eax
  4088a3:	add    BYTE PTR [eax+0x3],cl
  4088a6:	ins    BYTE PTR es:[edi],dx
  4088a7:	sbb    DWORD PTR [ebp+0x2b],edi
  4088aa:	add    ebp,DWORD PTR [edx-0x12cdd0b5]
  4088b0:	dec    ebx
  4088b1:	mov    bl,0x8
  4088b3:	ds and al,0xb4
  4088b6:	adc    BYTE PTR [edi-0x65],al
  4088b9:	rol    DWORD PTR [edx+0x58],cl
  4088bc:	repnz mov bh,0xb1
  4088bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088c0:	cwde   
  4088c1:	clc    
  4088c2:	call   0x6eef:0xd9554e0
  4088c9:	inc    esp
  4088ca:	xor    dh,BYTE PTR [edx+0x16]
  4088cd:	int3   
  4088ce:	lds    ebp,FWORD PTR ds:0x1083707f
  4088d4:	mov    ebx,0x586cc904
  4088d9:	shl    al,1
  4088db:	ds adc eax,0x5ded81b
  4088e1:	jb     0x408864
  4088e3:	stc    
  4088e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088e5:	dec    ebp
  4088e6:	push   ds
  4088e7:	scas   al,BYTE PTR es:[edi]
  4088e8:	ins    BYTE PTR es:[edi],dx
  4088e9:	xchg   esp,eax
  4088ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088eb:	lahf   
  4088ec:	daa    
  4088ed:	mov    ebp,0xdfc9dfd1
  4088f2:	iret   
  4088f3:	ret    
  4088f4:	xchg   esp,eax
  4088f5:	test   al,0x5d
  4088f7:	add    bl,bl
  4088f9:	fld    DWORD PTR [esi+0x2f]
  4088fc:	(bad)  
  4088fd:	(bad)  
  4088fe:	sti    
  4088ff:	dec    ecx
  408900:	lock ret 0x61ed
  408904:	push   eax
  408905:	pop    ebp
  408906:	adc    BYTE PTR [esi],dh
  408908:	(bad)  
  40890c:	add    bh,dh
  40890e:	cwde   
  40890f:	mov    eax,0x999a8090
  408914:	sub    al,0xae
  408916:	cmp    eax,DWORD PTR [ebx-0x753721d4]
  40891c:	jne    0x40889f
  40891e:	xor    eax,0x23a57879
  408923:	ret    0xa48c
  408926:	sub    bh,ch
  408928:	jmp    0x5745a3fb
  40892d:	(bad)  
  40892e:	shl    ebx,1
  408930:	fwait
  408931:	dec    ebx
  408932:	pop    ss
  408933:	call   0xd1ef46c6
  408938:	sbb    BYTE PTR [ebx-0x5f8f737b],0xbb
  40893f:	cmp    al,0x6
  408941:	fdivrp st(0),st
  408943:	rcl    DWORD PTR [eax],cl
  408945:	cwde   
  408946:	xchg   edx,eax
  408947:	sbb    dh,BYTE PTR [edi]
  408949:	xchg   ebx,eax
  40894a:	loop   0x4088e7
  40894c:	arpl   WORD PTR [ecx+0x3a],bx
  40894f:	popa   
  408950:	mov    ecx,0xd96a802a
  408955:	xor    eax,0x180a6f84
  40895a:	sbb    al,0xdf
  40895c:	or     dl,0xdc
  40895f:	dec    edx
  408960:	ja     0x40893b
  408962:	sbb    DWORD PTR [ebx+0x1c],ecx
  408965:	js     0x408944
  408967:	cmp    ah,BYTE PTR [esi+0x79]
  40896a:	into   
  40896b:	aaa    
  40896c:	sbb    eax,0x64ba9a8f
  408971:	pushf  
  408972:	mov    ds,WORD PTR [edx+0xc551f68]
  408978:	mov    DWORD PTR [eax-0x55626d02],ebx
  40897e:	fwait
  40897f:	or     ecx,eax
  408981:	arpl   WORD PTR [edx],ax
  408983:	outs   dx,BYTE PTR ds:[esi]
  408984:	jp     0x4089b3
  408986:	mov    fs,WORD PTR [ecx]
  408988:	sahf   
  408989:	punpckhwd mm6,QWORD PTR [edi+0x3f97d5b]
  408990:	sbb    esp,DWORD PTR [ecx+0x7f]
  408993:	push   ds
  408994:	aaa    
  408995:	dec    DWORD PTR [ecx+0x58a8ec2b]
  40899b:	sar    BYTE PTR [edi],1
  40899d:	cmp    esi,DWORD PTR [edi]
  40899f:	into   
  4089a0:	push   edi
  4089a1:	pop    edx
  4089a2:	stc    
  4089a3:	or     al,0xfc
  4089a5:	cmp    ebx,DWORD PTR [ebx-0x2c]
  4089a8:	inc    DWORD PTR [ebp+eiz*4-0x59adc030]
  4089af:	xor    DWORD PTR [edx+0x5648abb9],0x99a877a2
  4089b9:	call   0x7b50:0x6558af2e
  4089c0:	shl    BYTE PTR [ebx],0xa1
  4089c3:	xchg   DWORD PTR [edi-0x38],eax
  4089c6:	repnz test eax,0xad6f9c5f
  4089cc:	mov    ch,0xa5
  4089ce:	loopne 0x408993
  4089d0:	add    eax,0xe53746d7
  4089d5:	loope  0x408990
  4089d7:	sbb    eax,0x86a9dc0e
  4089dc:	add    DWORD PTR [ebx-0x64],eax
  4089df:	loope  0x40898d
  4089e1:	or     bh,BYTE PTR [ecx-0x76]
  4089e4:	jl     0x408a36
  4089e6:	loop   0x40899b
  4089e8:	adc    edx,ecx
  4089ea:	cmp    eax,0x9bb5d5e0
  4089ef:	add    ecx,DWORD PTR [ecx-0x35]
  4089f2:	xchg   edx,eax
  4089f3:	adc    eax,0x359e6b57
  4089f8:	je     0x40899a
  4089fa:	loope  0x4089c2
  4089fc:	jle    0x4089d2
  4089fe:	push   cs
  4089ff:	jl     0x4089bc
  408a01:	or     edx,esp
  408a03:	jmp    0x3ed0d57c
  408a08:	push   edi
  408a09:	dec    ebx
  408a0a:	sbb    BYTE PTR [edi-0x35],dl
  408a0d:	and    BYTE PTR [ebx+0x65d741c6],bh
  408a13:	call   0x1ed7:0x28f9e99c
  408a1a:	mov    cl,BYTE PTR [esp+edx*8-0x110d180f]
  408a21:	pop    edx
  408a22:	stos   DWORD PTR es:[edi],eax
  408a23:	iret   
  408a24:	ins    BYTE PTR es:[edi],dx
  408a25:	push   edx
  408a26:	popf   
  408a27:	mov    ebx,0xbf0e77c1
  408a2c:	mov    bl,BYTE PTR [ebx]
  408a2e:	outs   dx,BYTE PTR ds:[esi]
  408a2f:	pop    ds
  408a30:	push   ds
  408a31:	dec    edi
  408a32:	je     0x408a18
  408a34:	or     DWORD PTR ds:0x17512185,0x1020e908
  408a3e:	mov    dl,0x50
  408a40:	cmp    dh,dh
  408a42:	and    BYTE PTR [eax],ch
  408a44:	(bad)  
  408a45:	mov    ebp,ss
  408a47:	add    BYTE PTR [ecx-0x63],0x10
  408a4b:	int    0x8b
  408a4d:	pop    esp
  408a4e:	or     eax,0x57aa065b
  408a53:	pop    ds
  408a54:	nop
  408a55:	push   edx
  408a56:	and    esp,DWORD PTR [eax-0x3f]
  408a59:	dec    esi
  408a5a:	lods   al,BYTE PTR ds:[esi]
  408a5b:	add    DWORD PTR [eax+eax*1+0x3f530916],edi
  408a62:	call   0x1ea0:0x29e74034
  408a69:	sbb    eax,0xe839c41
  408a6e:	push   ss
  408a6f:	and    edi,DWORD PTR [esi-0x45222365]
  408a75:	bound  ebp,QWORD PTR [eax-0x7d46b479]
  408a7b:	mov    bh,0x89
  408a7d:	sub    esp,ebx
  408a7f:	sbb    esi,ebx
  408a81:	sbb    cl,BYTE PTR [esi]
  408a83:	hlt    
  408a84:	push   esi
  408a85:	add    DWORD PTR [esi],edi
  408a87:	cmc    
  408a88:	mov    eax,0x865ca3e9
  408a8d:	jg     0x408ad5
  408a8f:	imul   ebx,DWORD PTR [ebp+0x3b739022],0x79
  408a96:	imul   edx,DWORD PTR [ebp+0x31],0xffffffe6
  408a9a:	xchg   edx,eax
  408a9b:	mov    eax,0x4d0e9d28
  408aa0:	add    al,0x64
  408aa2:	inc    ecx
  408aa3:	dec    edi
  408aa4:	stos   DWORD PTR es:[edi],eax
  408aa5:	mov    cl,0x4a
  408aa7:	sbb    al,0x3b
  408aa9:	iret   
  408aaa:	mov    al,0xea
  408aac:	lahf   
  408aad:	repnz div cl
  408ab0:	inc    esi
  408ab1:	daa    
  408ab2:	and    eax,DWORD PTR ds:0x31ce0ce4
  408ab8:	jmp    0x408a45
  408aba:	cmc    
  408abb:	mov    DWORD PTR [edi+0xd],0xf367bfe1
  408ac2:	mov    al,ds:0x77d0c223
  408ac7:	adc    al,BYTE PTR [ebx-0x4b]
  408aca:	xchg   edi,eax
  408acb:	push   edi
  408acc:	daa    
  408acd:	pusha  
  408ace:	aas    
  408acf:	inc    edi
  408ad0:	cmp    ch,BYTE PTR [ebx-0x62]
  408ad3:	or     ebp,DWORD PTR [edi-0x344acc86]
  408ad9:	jo     0x408abd
  408adb:	ja     0x408b4f
  408add:	ret    0x9066
  408ae0:	push   edx
  408ae1:	scas   al,BYTE PTR es:[edi]
  408ae2:	dec    esp
  408ae3:	nop
  408ae4:	inc    ebp
  408ae5:	push   es
  408ae6:	ret    
  408ae7:	mov    dl,0xf
  408ae9:	push   ds
  408aea:	pop    ss
  408aeb:	pop    edi
  408aec:	xchg   edi,eax
  408aed:	mul    BYTE PTR [edx-0x2e885a96]
  408af3:	and    cl,cl
  408af5:	mov    ecx,0xc3d20f44
  408afa:	imul   eax,DWORD PTR ds:[esi-0x46],0x5e6a388b
  408b02:	nop
  408b03:	xor    ebx,DWORD PTR [ebp+0x6e96535d]
  408b09:	aaa    
  408b0a:	dec    ebp
  408b0b:	sti    
  408b0c:	xchg   ecx,eax
  408b0d:	das    
  408b0e:	jnp    0x408b76
  408b10:	dec    edx
  408b11:	aad    0x12
  408b13:	adc    DWORD PTR [ebp+0x6f],esi
  408b16:	in     eax,0x4f
  408b18:	retf   
  408b19:	jbe    0x408ae0
  408b1b:	push   ss
  408b1c:	jo     0x408a9e
  408b1e:	inc    ecx
  408b1f:	jg     0x408b73
  408b21:	arpl   ax,dx
  408b23:	push   edx
  408b24:	or     dl,BYTE PTR [ebp+0x60]
  408b27:	out    dx,al
  408b28:	jb     0x408b8e
  408b2a:	dec    esp
  408b2b:	jnp    0x408b54
  408b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b2e:	repnz sti 
  408b30:	jno    0x408b73
  408b32:	icebp  
  408b33:	dec    ebp
  408b34:	pop    edi
  408b35:	xor    ebp,eax
  408b37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b38:	adc    BYTE PTR [ebx+0x4c679e19],dh
  408b3e:	jb     0x408ad0
  408b40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b41:	sub    edi,esp
  408b43:	mov    dh,0x57
  408b45:	in     eax,0x6
  408b47:	xor    BYTE PTR [ebx],dl
  408b49:	push   esp
  408b4a:	mov    ebx,0xa36bd823
  408b4f:	out    dx,al
  408b50:	xchg   BYTE PTR [eax],bh
  408b52:	and    DWORD PTR [eax-0x1b9e876a],ecx
  408b58:	std    
  408b59:	mov    edi,0x972510ba
  408b5e:	sbb    eax,0xee4a91b1
  408b63:	jl     0x408bc4
  408b65:	dec    ecx
  408b66:	sub    al,0xbb
  408b68:	mov    al,0x6d
  408b6a:	ds jnp 0x408b09
  408b6d:	inc    esi
  408b6e:	iret   
  408b6f:	mov    ds:0xeceef5a0,al
  408b74:	fcmovu st,st(3)
  408b76:	aaa    
  408b77:	mov    WORD PTR [edi+esi*8],?
  408b7a:	or     eax,0xdd3db084
  408b7f:	jl     0x408b53
  408b81:	xor    ch,dh
  408b83:	cdq    
  408b84:	test   BYTE PTR [edx-0x4d7eb12],bl
  408b8a:	stc    
  408b8b:	inc    eax
  408b8c:	imul   ecx,DWORD PTR [ecx-0x1343358e],0x69
  408b93:	add    al,0x69
  408b95:	ret    
  408b96:	fcmovb st,st(7)
  408b98:	loope  0x408b75
  408b9a:	xchg   edx,eax
  408b9b:	mov    dl,0xe0
  408b9d:	scas   eax,DWORD PTR es:[edi]
  408b9e:	mov    edi,0xfd4f3d45
  408ba3:	dec    esp
  408ba4:	jno    0x408b80
  408ba6:	pushf  
  408ba7:	test   BYTE PTR ds:0xf4c5002a,0x86
  408bae:	retf   0x1ea7
  408bb1:	or     BYTE PTR [edi+0x5d54de97],0xba
  408bb8:	sub    esp,esi
  408bba:	aam    0x9a
  408bbc:	push   ebp
  408bbd:	not    BYTE PTR [ebx-0x7e33d4f7]
  408bc3:	pop    ecx
  408bc4:	jns    0x408b5a
  408bc6:	inc    ebx
  408bc7:	aas    
  408bc8:	fucom  st(4)
  408bca:	inc    ebp
  408bcb:	in     al,dx
  408bcc:	fucomp st(5)
  408bce:	push   eax
  408bcf:	shl    DWORD PTR [ebx+edx*8-0x4860bd18],1
  408bd6:	and    al,0xd2
  408bd8:	cdq    
  408bd9:	jae    0x408bd6
  408bdb:	adc    bh,BYTE PTR [esi]
  408bdd:	mov    al,0x81
  408bdf:	adc    DWORD PTR [ebx-0x4cf71455],ebp
  408be5:	ja     0x408bb1
  408be7:	fwait
  408be8:	and    cl,BYTE PTR [edi]
  408bea:	inc    esp
  408beb:	out    dx,eax
  408bec:	push   esi
  408bed:	aad    0xd3
  408bef:	aad    0xc2
  408bf1:	out    0x37,al
  408bf3:	sbb    eax,0xd1b87137
  408bf8:	cdq    
  408bf9:	push   0x93d15732
  408bfe:	mov    ds:0xc33b0b84,eax
  408c03:	xchg   bl,dl
  408c05:	add    DWORD PTR [ecx],0x3d
  408c08:	popa   
  408c09:	jmp    0x7f12:0xe65ae7ed
  408c10:	add    esi,DWORD PTR [ecx+ebp*4]
  408c13:	mov    ax,ds:0x62be8113
  408c19:	ret    
  408c1a:	pushw  cs
  408c1c:	xchg   ebp,eax
  408c1d:	add    al,0xfe
  408c1f:	fldcw  WORD PTR ds:0xc2ac7f9
  408c25:	sub    eax,0x6fad93ee
  408c2a:	jmp    0x45103cf
  408c2f:	ins    DWORD PTR es:[edi],dx
  408c30:	push   esi
  408c31:	sub    ecx,esp
  408c33:	popa   
  408c34:	fstp   QWORD PTR [ecx]
  408c36:	adc    bl,BYTE PTR [ecx+0x1949da8c]
  408c3c:	xchg   esp,eax
  408c3d:	pop    ds
  408c3e:	lahf   
  408c3f:	fidiv  WORD PTR [ebx]
  408c41:	dec    edx
  408c42:	out    dx,al
  408c43:	imul   eax,DWORD PTR [edx],0xffffffb5
  408c46:	in     al,0x94
  408c48:	int    0x69
  408c4a:	cdq    
  408c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c4c:	jle    0x408c64
  408c4e:	push   ebx
  408c4f:	mov    ebx,0xa29b8e5e
  408c54:	shl    ah,cl
  408c56:	mov    ebp,0xa10c6277
  408c5b:	add    esp,0x78d0c586
  408c61:	adc    cl,BYTE PTR [edx]
  408c63:	xlat   BYTE PTR ds:[ebx]
  408c64:	aaa    
  408c65:	mov    edi,0xfccc1db6
  408c6a:	dec    esp
  408c6b:	ret    0x2b50
  408c6e:	mov    al,ds:0x1d1e8fb6
  408c73:	mov    eax,ds:0xfaf63ab8
  408c78:	rol    DWORD PTR [ecx+0x179cd0b6],1
  408c7e:	jecxz  0x408cbc
  408c80:	mov    eax,0x6abd32fe
  408c85:	xchg   ebx,eax
  408c86:	scas   al,BYTE PTR es:[edi]
  408c87:	lods   al,BYTE PTR ds:[esi]
  408c88:	fcomp  QWORD PTR [ebx+esi*4]
  408c8b:	push   cs
  408c8c:	(bad)  
  408c8d:	pusha  
  408c8e:	addr16 add eax,0xc26517ad
  408c94:	(bad)  
  408c95:	call   0xa2b65b13
  408c9a:	sbb    ah,BYTE PTR [edx]
  408c9c:	push   ecx
  408c9d:	xlat   BYTE PTR ds:[ebx]
  408c9e:	clc    
  408c9f:	lods   al,BYTE PTR ds:[esi]
  408ca0:	hlt    
  408ca1:	(bad)  
  408ca2:	adc    eax,0xdb593ded
  408ca7:	add    DWORD PTR [esi],0x27e111d4
  408cad:	aaa    
  408cae:	sbb    DWORD PTR [edi-0x3cb2c3ca],edi
  408cb4:	inc    eax
  408cb5:	inc    edx
  408cb6:	iret   
  408cb7:	add    esp,DWORD PTR [eax+ebx*8]
  408cba:	jno    0x408cc9
  408cbc:	call   0xf294:0x5bcc6544
  408cc3:	inc    edx
  408cc4:	adc    esi,ebp
  408cc6:	cmp    al,0xfd
  408cc8:	or     dh,BYTE PTR ds:0xebbe452a
  408cce:	rcl    DWORD PTR [ebx],0xaa
  408cd1:	cmp    ah,BYTE PTR [ebp+0x48]
  408cd4:	mov    esp,0x8a2108f0
  408cd9:	gs pop esp
  408cdb:	arpl   di,sp
  408cdd:	sbb    BYTE PTR [ebx-0x56],bh
  408ce0:	imul   ebp,DWORD PTR [ebx-0xfba4848],0xffffff8a
  408ce7:	jbe    0x408cdf
  408ce9:	xchg   esi,eax
  408cea:	mov    al,ds:0xfe2d91da
  408cef:	sbb    al,0x9f
  408cf1:	jl     0x408d3d
  408cf3:	test   DWORD PTR [ebx+edi*8+0xe],ebp
  408cf7:	test   eax,0x2303530a
  408cfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cfd:	mov    si,0x8f03
  408d01:	je     0x408cb0
  408d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d04:	xchg   ecx,eax
  408d05:	in     eax,dx
  408d06:	fcomp  QWORD PTR [ebx-0x2c]
  408d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d0a:	and    al,0xf6
  408d0c:	pop    edx
  408d0d:	scas   eax,DWORD PTR es:[edi]
  408d0e:	pushf  
  408d0f:	mov    WORD PTR [ebx+edx*2],?
  408d12:	pop    ebx
  408d13:	stos   BYTE PTR es:[edi],al
  408d14:	nop
  408d15:	call   0xf630:0x61ef4342
  408d1c:	pop    ecx
  408d1d:	mov    al,0xaf
  408d1f:	inc    ecx
  408d20:	dec    eax
  408d21:	xor    eax,0xc66502dc
  408d26:	inc    ecx
  408d27:	arpl   WORD PTR [ecx-0x1128eb00],cx
  408d2d:	jmp    0x854c266f
  408d32:	fisttp QWORD PTR [edx-0x3d]
  408d35:	and    bh,0x28
  408d38:	pop    esi
  408d39:	xchg   BYTE PTR [eax+0x5c40af5],ch
  408d3f:	jbe    0x408db1
  408d41:	sub    esi,DWORD PTR [ecx+0x75736444]
  408d47:	cwde   
  408d48:	xchg   ebp,eax
  408d49:	add    eax,0x45bdb955
  408d4e:	xor    al,0xa0
  408d50:	mov    edi,?
  408d52:	jo     0x408db4
  408d54:	push   cs
  408d55:	xor    DWORD PTR [edx],edx
  408d57:	pusha  
  408d58:	pop    esp
  408d59:	xor    BYTE PTR [edi],bh
  408d5b:	inc    edi
  408d5c:	xchg   edx,eax
  408d5d:	fnstenv ds:0x74bf1c8c
  408d63:	sbb    ebp,DWORD PTR [edi]
  408d65:	ror    BYTE PTR [ebp+0x7d],1
  408d68:	ror    DWORD PTR [ebx-0x66bef350],cl
  408d6e:	shl    dh,cl
  408d70:	xchg   edx,eax
  408d71:	fiadd  DWORD PTR ds:0x44531875
  408d77:	add    BYTE PTR [eax-0x76],bl
  408d7a:	pop    ss
  408d7b:	gs pop esp
  408d7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d7e:	cmp    cl,BYTE PTR [edi+0x6d]
  408d81:	mov    edi,ss
  408d83:	out    0x9c,al
  408d85:	or     al,0x7e
  408d87:	out    0xab,eax
  408d89:	jno    0x408d84
  408d8b:	jecxz  0x408d15
  408d8d:	fst    DWORD PTR [edx*8+0x41d40e7b]
  408d94:	hlt    
  408d95:	scas   eax,DWORD PTR es:[edi]
  408d96:	es mov bl,0x4e
  408d99:	mov    dh,0xa
  408d9b:	sub    eax,0xd2040a1a
  408da0:	push   ebp
  408da1:	loop   0x408dd5
  408da3:	outs   dx,DWORD PTR ds:[esi]
  408da4:	jg     0x408d56
  408da6:	dec    edx
  408da7:	or     DWORD PTR [edi-0x7f],ecx
  408daa:	mov    edi,0x274e8178
  408daf:	sbb    al,0xbd
  408db1:	or     BYTE PTR [eax+ebp*8],bl
  408db4:	or     al,BYTE PTR [esi-0x64]
  408db7:	or     DWORD PTR [ebx],ecx
  408db9:	jno    0x408dc0
  408dbb:	mov    esi,0xd5fa05d6
  408dc0:	stc    
  408dc1:	add    ch,BYTE PTR [ebx+edi*4]
  408dc4:	jmp    0xc35d:0x4898f925
  408dcb:	cwde   
  408dcc:	gs lods eax,DWORD PTR ds:[esi]
  408dcf:	dec    ecx
  408dd0:	shl    DWORD PTR [esi+esi*4-0x7170d02e],0x3e
  408dd8:	je     0x408dd7
  408dda:	stos   BYTE PTR es:[edi],al
  408ddb:	cmp    eax,0xebf4ab56
  408de0:	leave  
  408de1:	mov    al,0xc2
  408de3:	retf   
  408de4:	adc    cl,BYTE PTR [edx+eax*1-0x7b3df32a]
  408deb:	sar    BYTE PTR [eax+0xb9d41a],0x1f
  408df2:	pushf  
  408df3:	cmc    
  408df4:	sbb    al,0xcc
  408df6:	jns    0x408dcd
  408df8:	jge    0x408d86
  408dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dfb:	add    BYTE PTR [ecx-0x108a40f5],al
  408e01:	daa    
  408e02:	pop    di
  408e04:	xor    eax,esp
  408e06:	and    BYTE PTR fs:[eax+0x3bbee085],al
  408e0d:	mov    bl,0x77
  408e0f:	mov    ebx,0x55d8b0
  408e14:	cmp    ebx,0x7e
  408e17:	fs stos DWORD PTR es:[edi],eax
  408e19:	or     eax,0xb08febc0
  408e1e:	jno    0x408e96
  408e20:	and    dl,BYTE PTR [ebp-0x3b]
  408e23:	pushf  
  408e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e25:	inc    ecx
  408e26:	lea    ebp,[ebp+0x28271b03]
  408e2c:	outs   dx,DWORD PTR gs:[esi]
  408e2e:	cdq    
  408e2f:	and    al,0xa0
  408e31:	sbb    bh,BYTE PTR [eax-0x5d5fe50f]
  408e37:	sahf   
  408e38:	adc    BYTE PTR [edx-0x5d063b30],cl
  408e3e:	iret   
  408e3f:	(bad)  
  408e40:	es retf 
  408e42:	adc    bh,al
  408e44:	lods   eax,DWORD PTR ds:[esi]
  408e45:	or     esp,ecx
  408e47:	iret   
  408e48:	inc    ecx
  408e49:	adc    BYTE PTR [edi],dh
  408e4b:	sub    ch,BYTE PTR [edx+0x59]
  408e4e:	test   BYTE PTR ds:[ebp+0x3c],cl
  408e52:	jb     0x408de7
  408e54:	shr    BYTE PTR [ebp+0x47],cl
  408e57:	loope  0x408eb4
  408e59:	adc    eax,0x7a5d4c79
  408e5e:	cld    
  408e5f:	fisubr DWORD PTR [ecx+0x27]
  408e62:	push   es
  408e63:	and    esi,ecx
  408e65:	dec    ebp
  408e66:	cmp    eax,0xa22806c7
  408e6b:	retfw  0x130a
  408e6f:	xchg   ecx,eax
  408e70:	cmp    ebp,ebp
  408e72:	xor    BYTE PTR [esi+ecx*8],dh
  408e75:	cmc    
  408e76:	mov    esp,0x79144fa7
  408e7b:	popf   
  408e7c:	and    al,0x9e
  408e7e:	inc    eax
  408e7f:	pop    ss
  408e80:	pop    edx
  408e81:	jmp    FWORD PTR [esi+0x19]
  408e84:	shr    BYTE PTR [ecx+0x5a],0x8c
  408e88:	mov    ebp,0x57440602
  408e8d:	js     0x408e92
  408e8f:	pop    es
  408e90:	ins    BYTE PTR es:[edi],dx
  408e91:	fidiv  WORD PTR [eax]
  408e93:	mov    esi,0x9398fe38
  408e98:	pop    esi
  408e99:	ffree  st(4)
  408e9b:	xor    BYTE PTR [ebx+eiz*8],bh
  408e9e:	xor    ebp,DWORD PTR [ebp+0x8]
  408ea1:	sbb    bh,dh
  408ea3:	iret   
  408ea4:	sub    BYTE PTR [esi],bl
  408ea6:	push   edx
  408ea7:	ins    BYTE PTR es:[edi],dx
  408ea8:	ret    0x1825
  408eab:	xor    BYTE PTR es:[esi+0x49],ah
  408eaf:	xor    edx,DWORD PTR [ebp-0x57]
  408eb2:	call   0x457d78eb
  408eb7:	ja     0x408ecc
  408eb9:	fs clc 
  408ebb:	sub    ebx,DWORD PTR [edi+0x2c]
  408ebe:	jb     0x408e6c
  408ec0:	fcmovne st,st(6)
  408ec2:	inc    ebx
  408ec3:	cld    
  408ec4:	ins    BYTE PTR es:[edi],dx
  408ec5:	pop    es
  408ec6:	in     eax,0x3d
  408ec8:	xchg   BYTE PTR [esi],dl
  408eca:	xchg   ebx,eax
  408ecb:	or     al,0x8a
  408ecd:	je     0x408e71
  408ecf:	dec    edi
  408ed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ed1:	adc    edx,DWORD PTR [edi-0x1c98469b]
  408ed7:	mov    ebp,0x141f6deb
  408edc:	ror    DWORD PTR [edx+0x1f92141],0x6e
  408ee3:	gs cmp bl,cl
  408ee6:	mov    esp,0xef1171fa
  408eeb:	or     BYTE PTR [esi],bl
  408eed:	mov    dh,0x95
  408eef:	mov    eax,0x7335c2f
  408ef4:	add    al,0x9a
  408ef6:	pop    esp
  408ef7:	cli    
  408ef8:	inc    eax
  408ef9:	mov    esi,0xd36a9ca7
  408efe:	inc    eax
  408eff:	bound  esp,QWORD PTR [ecx-0x7b851621]
  408f05:	ja     0x408e90
  408f07:	out    0x15,eax
  408f09:	and    ecx,DWORD PTR [edx+0x7a29bbab]
  408f0f:	mov    DWORD PTR ss:[edx+ebx*8-0x82e856],edi
  408f17:	xchg   ebp,eax
  408f18:	fwait
  408f19:	mov    bl,0xf5
  408f1b:	and    DWORD PTR [edi+edx*2-0x32],ebx
  408f1f:	push   edx
  408f20:	mov    eax,ds:0x9b1413d8
  408f25:	add    BYTE PTR [edi],dl
  408f27:	xor    BYTE PTR [edi+0x68053ed4],cl
  408f2d:	mov    ah,0x64
  408f2f:	xchg   BYTE PTR [eax],bh
  408f31:	and    BYTE PTR [esi],0x7d
  408f34:	sub    al,0xf3
  408f36:	in     al,dx
  408f37:	jge    0xb1ec5b82
  408f3d:	lea    eax,[edi]
  408f3f:	sbb    DWORD PTR [ebx+0x2a95048b],esi
  408f45:	mov    edi,0x1b5eeb1
  408f4a:	push   edx
  408f4b:	sti    
  408f4c:	mov    al,0x1b
  408f4e:	out    dx,eax
  408f4f:	sbb    al,0xcb
  408f51:	fisub  DWORD PTR [edx-0x6c88205b]
  408f57:	and    eax,0xb5c3254e
  408f5c:	jecxz  0x408f9f
  408f5e:	leave  
  408f5f:	pusha  
  408f60:	mov    dh,0xb1
  408f62:	pop    es
  408f63:	add    al,ch
  408f65:	lods   al,BYTE PTR ds:[esi]
  408f66:	mul    bh
  408f68:	cli    
  408f69:	test   ebp,edx
  408f6b:	enter  0xbc4e,0x80
  408f6f:	dec    esp
  408f70:	mov    cs,WORD PTR [edx+ebx*8+0x5d]
  408f74:	mov    eax,ds:0x927acd99
  408f79:	dec    ebp
  408f7a:	lds    eax,FWORD PTR [ecx+0x4f72ba03]
  408f80:	dec    edi
  408f81:	xor    BYTE PTR [esi-0x2305c14b],al
  408f87:	(bad)  
  408f88:	sahf   
  408f89:	cs test edi,edx
  408f8c:	(bad)  
  408f8d:	or     ebp,DWORD PTR [eax+0x73]
  408f90:	mov    dl,0x3f
  408f92:	leave  
  408f93:	cmc    
  408f94:	enter  0x97b3,0x9a
  408f98:	(bad)  
  408f99:	jmp    0x408fb1
  408f9b:	xor    al,0xf4
  408f9d:	lock jb 0x409017
  408fa0:	jnp    0x408f3a
  408fa2:	sub    ah,cl
  408fa4:	lahf   
  408fa5:	jne    0x408ff2
  408fa7:	imul   esp,DWORD PTR ds:[edx],0xbbd2e517
  408fae:	inc    edi
  408faf:	cmp    DWORD PTR [ebx+0x56584832],edi
  408fb5:	or     al,0x56
  408fb7:	out    0xb1,eax
  408fb9:	bound  ecx,QWORD PTR [edx-0x2e]
  408fbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fbd:	aaa    
  408fbe:	sub    al,BYTE PTR [eax-0x3924876e]
  408fc4:	retf   
  408fc5:	push   edx
  408fc6:	(bad)  
  408fc7:	cld    
  408fc8:	in     eax,dx
  408fc9:	mov    dh,0xcc
  408fcb:	and    al,0x96
  408fcd:	shl    ch,1
  408fcf:	inc    ebx
  408fd0:	call   0x8e6eeef
  408fd5:	mov    ch,0xf2
  408fd7:	out    dx,al
  408fd8:	pop    es
  408fd9:	(bad)  
  408fda:	fdiv   QWORD PTR [ecx-0x28d7a495]
  408fe0:	pushf  
  408fe1:	(bad)  
  408fe2:	test   al,0x6f
  408fe4:	int3   
  408fe5:	popf   
  408fe6:	adc    ch,BYTE PTR [edx+0x3]
  408fe9:	and    edx,DWORD PTR [ecx]
  408feb:	mov    WORD PTR [edi-0x1ea11f60],es
  408ff1:	inc    eax
  408ff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ff3:	add    eax,0x71fcdff1
  408ff8:	int3   
  408ff9:	inc    ebx
  408ffa:	(bad)  
  408ffb:	ss ret 
  408ffd:	push   0x2e71359d
  409002:	and    DWORD PTR [esp+esi*8+0x1a],edx
  409006:	sahf   
  409007:	lock jnp 0x408fde
  40900a:	dec    esi
  40900b:	lods   eax,DWORD PTR ds:[esi]
  40900c:	aaa    
  40900d:	aad    0xab
  40900f:	int    0x48
  409011:	fldenv [ebp-0x6e9be93f]
  409017:	lods   eax,DWORD PTR ds:[esi]
  409018:	mov    ebx,0x451c6957
  40901d:	xchg   BYTE PTR [ecx+0x38],ch
  409020:	repz hlt 
  409022:	jo     0x408fde
  409024:	mov    ebp,0x10031690
  409029:	lods   al,BYTE PTR ds:[esi]
  40902a:	xchg   esi,eax
  40902b:	data16 jns 0x408fbe
  40902e:	mov    esp,gs
  409030:	jbe    0x40903f
  409032:	cmp    eax,0xf9040a8e
  409037:	xchg   ebx,eax
  409038:	fst    DWORD PTR [esi+0x31dd3df0]
  40903e:	push   cs
  40903f:	or     eax,0xf350ad4f
  409044:	lds    esp,FWORD PTR [ebp+0x6f]
  409047:	mov    fs,WORD PTR [edx]
  409049:	sahf   
  40904a:	inc    DWORD PTR [ecx+0x23]
  40904d:	retf   
  40904e:	ret    0x8394
  409051:	mov    esp,0xc089fd0e
  409056:	mov    edx,0x2861ddd8
  40905b:	jl     0x409012
  40905d:	es sti 
  40905f:	fidivr DWORD PTR [eax]
  409061:	dec    edx
  409062:	push   esi
  409063:	mov    edx,0x1ba54cb8
  409068:	jbe    0x4090ad
  40906a:	sub    BYTE PTR [ecx],dh
  40906c:	mov    ss,WORD PTR [ebx+ebp*2]
  40906f:	adc    DWORD PTR [ebx],eax
  409071:	adc    ch,BYTE PTR [esi+edi*1+0x7ab72cb5]
  409078:	ret    0xfe05
  40907b:	dec    ecx
  40907c:	rcl    DWORD PTR [ebx+ecx*4-0x42f77f5f],cl
  409083:	aam    0xde
  409085:	sub    al,0xe1
  409087:	in     al,dx
  409088:	jb     0x409026
  40908a:	aaa    
  40908b:	sbb    BYTE PTR [ecx-0x2f379f24],dh
  409091:	stc    
  409092:	sub    ah,BYTE PTR [esi-0x29711fe4]
  409098:	push   0x47
  40909a:	adc    BYTE PTR [edx+ebp*1],ch
  40909d:	jmp    0xbb767b05
  4090a2:	jbe    0x4090dd
  4090a4:	pop    ebp
  4090a5:	or     DWORD PTR [ebx+0x1d],esp
  4090a8:	adc    DWORD PTR [edx],ebp
  4090aa:	xchg   edx,eax
  4090ab:	xor    al,0x1f
  4090ad:	push   bx
  4090af:	imul   ebp,DWORD PTR [edx+0x58],0x4851a5d0
  4090b6:	clc    
  4090b7:	mov    esi,0x67ab63fe
  4090bc:	adc    BYTE PTR [ecx-0x5af67422],al
  4090c2:	ficomp DWORD PTR [ecx]
  4090c4:	push   ecx
  4090c5:	dec    edi
  4090c6:	and    al,cl
  4090c8:	(bad)  
  4090c9:	dec    ecx
  4090ca:	ret    
  4090cb:	xchg   edi,eax
  4090cc:	fwait
  4090cd:	jmp    0xc9ea:0x19b2acdf
  4090d4:	cmp    bl,BYTE PTR [edi-0x4507857b]
  4090da:	imul   esi,DWORD PTR [esi-0x6c672f35],0xb45b831e
  4090e4:	in     al,dx
  4090e5:	mov    eax,ds:0x9b20daa9
  4090ea:	repz cmc 
  4090ec:	test   DWORD PTR [edx-0x4dc0202d],ecx
  4090f2:	push   0x46
  4090f4:	rcr    BYTE PTR [edx-0x7276c0b8],cl
  4090fa:	add    bh,dl
  4090fc:	push   cs
  4090fd:	sub    DWORD PTR [edx+0x4b273f00],edi
  409103:	mov    edx,0xaf425955
  409108:	arpl   WORD PTR [ecx],cx
  40910a:	mul    BYTE PTR [esi+0x229a2a9b]
  409110:	xor    al,0x2c
  409112:	in     al,0x7e
  409114:	mov    al,0x5f
  409116:	jbe    0x4090fa
  409118:	enter  0xd955,0x46
  40911c:	cli    
  40911d:	inc    ebx
  40911e:	pop    eax
  40911f:	dec    esp
  409120:	push   0x20
  409122:	add    ebx,edi
  409124:	ja     0x4090ef
  409126:	push   0x1e
  409128:	cmc    
  409129:	mov    WORD PTR [ebx],?
  40912b:	inc    ebx
  40912c:	xor    eax,DWORD PTR [edx-0x7c]
  40912f:	push   ebx
  409130:	adc    esp,DWORD PTR [si-0x6]
  409134:	mov    ds:0xe117080f,al
  409139:	xchg   edx,eax
  40913a:	jge    0x16fb6bc
  409140:	stc    
  409141:	int    0x4
  409143:	scas   al,BYTE PTR es:[edi]
  409144:	pop    ebp
  409145:	push   esp
  409146:	scas   eax,DWORD PTR es:[edi]
  409147:	scas   al,BYTE PTR es:[edi]
  409148:	or     eax,0x697368e3
  40914d:	mov    ch,ah
  40914f:	pop    edx
  409150:	pushf  
  409151:	add    BYTE PTR [ecx+eax*8+0x10],ah
  409155:	dec    eax
  409156:	sbb    DWORD PTR [ebx],esi
  409158:	adc    ecx,edi
  40915a:	xor    BYTE PTR [ebx-0x370aee5f],cl
  409160:	push   edx
  409161:	mov    ah,0x5b
  409163:	sbb    eax,0x94783e4f
  409168:	inc    esp
  409169:	je     0x4091c6
  40916b:	iret   
  40916c:	jg     0x4091ae
  40916e:	pushf  
  40916f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409170:	cld    
  409171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409172:	and    dl,BYTE PTR [ecx]
  409174:	pop    ecx
  409175:	xchg   DWORD PTR [edi],edi
  409177:	and    cl,BYTE PTR [ecx]
  409179:	dec    edx
  40917a:	retf   
  40917b:	or     cl,bh
  40917d:	aam    0x5e
  40917f:	(bad)  
  409181:	retf   0x7a6b
  409184:	lods   eax,DWORD PTR ds:[esi]
  409185:	inc    ebp
  409186:	ins    DWORD PTR es:[edi],dx
  409187:	shr    dl,cl
  409189:	pop    ebx
  40918a:	mov    ebx,0x36827d7d
  40918f:	fcomip st,st(0)
  409191:	mov    esp,0x621654d9
  409196:	imul   esi,DWORD PTR [ecx-0x575bdad2],0x3cd6cc70
  4091a0:	pop    edi
  4091a1:	cmp    eax,0x48b2bab5
  4091a6:	mov    ebp,0xee824ee
  4091ab:	and    eax,0x71350bf7
  4091b0:	lods   eax,DWORD PTR ds:[esi]
  4091b1:	xchg   esi,eax
  4091b2:	hlt    
  4091b3:	(bad)  
  4091b4:	xor    bh,ah
  4091b6:	mov    dl,0xba
  4091b8:	mov    cl,0x11
  4091ba:	push   edi
  4091bb:	pusha  
  4091bc:	pop    edi
  4091bd:	psubd  mm5,QWORD PTR [edx+0x2a]
  4091c1:	mov    esi,0x70aebcb6
  4091c6:	mov    edi,0x8435d6c0
  4091cb:	mov    DWORD PTR [ebx-0x3c23a0b8],eax
  4091d1:	(bad)  
  4091d2:	and    al,0x80
  4091d4:	stc    
  4091d5:	xchg   dl,cl
  4091d7:	adc    DWORD PTR [ebp+0x2ab4a246],0x5c
  4091de:	jae    0x4091c0
  4091e0:	fdivr  QWORD PTR [ecx+edx*8-0x4598c81d]
  4091e7:	je     0x4091eb
  4091e9:	mov    eax,0x8e7be54d
  4091ee:	and    eax,0xe6277ce7
  4091f3:	retf   
  4091f4:	retf   0xa29c
  4091f7:	and    edx,DWORD PTR [eax+0x65]
  4091fa:	pop    ebx
  4091fb:	dec    edi
  4091fc:	cdq    
  4091fd:	test   al,0xbd
  4091ff:	jmp    0x40922c
  409201:	test   BYTE PTR [ecx],ah
  409203:	pop    esp
  409204:	sti    
  409205:	push   edx
  409206:	jae    0x409222
  409208:	int3   
  409209:	cs into 
  40920b:	adc    ebp,DWORD PTR ss:[eax-0x5e]
  40920f:	inc    edi
  409210:	cwde   
  409211:	jecxz  0x409276
  409213:	sbb    edi,DWORD PTR gs:[ecx+0x7bd8fef4]
  40921a:	pop    ebp
  40921b:	xchg   esi,eax
  40921c:	push   0x96399b06
  409221:	adc    eax,0xc71afcaf
  409226:	push   ss
  409227:	int3   
  409228:	jle    0x409245
  40922a:	xchg   BYTE PTR [ecx+ebx*1-0x4e],ch
  40922e:	add    eax,0xff96d3c
  409233:	sub    al,0x75
  409235:	in     eax,0x17
  409237:	std    
  409238:	sar    dl,0x17
  40923b:	fucomip st,st(6)
  40923d:	cli    
  40923e:	into   
  40923f:	mov    esi,0x17a48266
  409244:	pop    edx
  409246:	pusha  
  409247:	in     al,dx
  409248:	pushf  
  409249:	xor    BYTE PTR [ecx+0x20371f8b],dh
  40924f:	xchg   edi,eax
  409250:	adc    ch,0xb6
  409253:	mov    edi,0x25016393
  409258:	clc    
  409259:	or     esp,DWORD PTR [edx+0x1e]
  40925c:	call   0x52cf4802
  409261:	jnp    0x40929e
  409263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409264:	mov    ds:0xd567142c,al
  409269:	jmp    0x409298
  40926b:	add    eax,0xd0af6754
  409270:	and    BYTE PTR [ecx+0x69841c8],cl
  409276:	in     eax,dx
  409277:	inc    edx
  409278:	in     eax,dx
  409279:	imul   ebx,DWORD PTR [edx-0x3b],0xbb549821
  409280:	and    BYTE PTR [edi+0x1f8db1b6],dl
  409286:	dec    eax
  409287:	lock push ebp
  409289:	mov    ah,0x4e
  40928b:	jae    0x4092f4
  40928d:	jp     0x409244
  40928f:	dec    ecx
  409290:	iret   
  409291:	bound  esp,QWORD PTR [edi+0x20]
  409294:	call   0x8a0e12ba
  409299:	ds inc edi
  40929b:	fisttp WORD PTR [eax-0x2cc42e9d]
  4092a1:	(bad)  
  4092a2:	enter  0x3fa6,0x96
  4092a6:	loope  0x4092f9
  4092a8:	push   ecx
  4092a9:	cs jp  0x4092e9
  4092ac:	imul   ebx,DWORD PTR [esi],0xfffffff2
  4092af:	mov    ecx,0x520a4aa8
  4092b4:	mov    dl,0xa9
  4092b6:	push   0xcb1fc69d
  4092bb:	jmp    0xaeec84ff
  4092c0:	pop    ds
  4092c1:	add    eax,0x415ddb29
  4092c6:	or     BYTE PTR [edi-0x387e395a],bh
  4092cc:	jecxz  0x40928a
  4092ce:	lds    edx,FWORD PTR [edx]
  4092d0:	int3   
  4092d1:	nop
  4092d2:	outs   dx,BYTE PTR ds:[esi]
  4092d3:	int    0x3a
  4092d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092d6:	push   edi
  4092d7:	mov    al,ds:0x7a449feb
  4092dc:	sbb    BYTE PTR [edx],bh
  4092de:	test   DWORD PTR [ebp-0x60506abd],ecx
  4092e4:	push   edi
  4092e5:	mov    esi,0x40769a88
  4092ea:	adc    al,0xee
  4092ec:	in     al,0x76
  4092ee:	imul   edi,DWORD PTR [bx+di],0x45
  4092f2:	jecxz  0x409339
  4092f4:	adc    eax,0x9095735
  4092f9:	dec    ebp
  4092fa:	outs   dx,DWORD PTR ds:[esi]
  4092fb:	call   0x8aaf:0xb6944fd1
  409302:	push   0xffffffff
  409304:	pusha  
  409305:	jns    0x409368
  409307:	out    dx,eax
  409308:	lea    edi,[edi+0x3c]
  40930b:	aam    0x52
  40930d:	inc    ecx
  40930e:	jmp    0x40933a
  409310:	push   cs
  409311:	xchg   DWORD PTR [edi+0x69],esi
  409314:	xor    DWORD PTR [eax],ebp
  409316:	sub    eax,0xe1f147b6
  40931b:	jns    0x2ec6e0ef
  409321:	pop    es
  409322:	or     bh,BYTE PTR [edi-0x57]
  409325:	add    al,0x6e
  409327:	mov    cl,0x6e
  409329:	sub    al,0x19
  40932b:	inc    eax
  40932c:	ss mov esi,0xd6337231
  409332:	sbb    ah,BYTE PTR [ebp+0x2b]
  409335:	jb     0x409318
  409337:	adc    eax,0x949bb5a7
  40933c:	sub    eax,0x2e6ffb43
  409341:	dec    esi
  409342:	jo     0x40938e
  409344:	out    0xd2,al
  409346:	mov    ah,cl
  409348:	mov    ebp,0x2fead31b
  40934d:	xor    DWORD PTR [ebx*8-0x24bb152f],ebx
  409354:	add    al,0xcc
  409356:	add    al,0xbb
  409358:	mov    al,0xd6
  40935a:	into   
  40935b:	xor    DWORD PTR ds:0xd87561ed,edx
  409361:	push   0xffffff91
  409363:	jmp    0x51dd6269
  409368:	dec    eax
  409369:	lock push es
  40936b:	or     ebp,0x7e5c027a
  409371:	mov    cl,0xb2
  409373:	cmp    eax,0x24e9f059
  409378:	cwde   
  409379:	pop    ds
  40937a:	inc    eax
  40937b:	loope  0x4093f4
  40937d:	mov    WORD PTR [ecx-0x648a6d5d],ds
  409383:	(bad)  
  409384:	lock repz pusha 
  409387:	sub    eax,0x1908766d
  40938c:	jmp    0xac11:0xf6dd98a2
  409393:	stos   BYTE PTR es:[edi],al
  409394:	dec    esp
  409395:	add    esp,eax
  409397:	jge    0x40932d
  409399:	(bad)  
  40939a:	stos   BYTE PTR es:[edi],al
  40939b:	fwait
  40939c:	mov    eax,ebx
  40939e:	inc    esp
  40939f:	pop    eax
  4093a0:	fisub  DWORD PTR [edx+0x4bcdcdf4]
  4093a6:	xor    BYTE PTR [si-0x7],al
  4093aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093ab:	js     0x409377
  4093ad:	outs   dx,BYTE PTR ds:[esi]
  4093ae:	mov    cl,0xcc
  4093b0:	sub    DWORD PTR [eax],esi
  4093b2:	push   esp
  4093b3:	pushf  
  4093b4:	mov    ah,0xa2
  4093b6:	psraw  mm5,QWORD PTR [ebp-0xec17b06]
  4093bd:	inc    DWORD PTR [ecx-0x37339f21]
  4093c3:	popf   
  4093c4:	jmp    0x4a2b57c0
  4093c9:	fisub  WORD PTR [edi+0x3bec85e1]
  4093cf:	push   es
  4093d0:	jp     0x4093d4
  4093d2:	xor    bl,cl
  4093d4:	jns    0x40943e
  4093d6:	stos   DWORD PTR es:[edi],eax
  4093d7:	popa   
  4093d8:	iret   
  4093d9:	pop    edx
  4093da:	dec    esi
  4093db:	jl     0x409416
  4093dd:	fldpi  
  4093df:	fwait
  4093e0:	imul   eax,DWORD PTR [esi+0x4f],0x1a1bc1c8
  4093e7:	fucom  st(2)
  4093e9:	mov    eax,ds:0xd91552ae
  4093ee:	scas   al,BYTE PTR es:[edi]
  4093ef:	push   eax
  4093f0:	ret    0xe9fc
  4093f3:	rcr    DWORD PTR [eax+0x6d],cl
  4093f6:	inc    esp
  4093f7:	sbb    edx,DWORD PTR [ecx+0x12329038]
  4093fd:	popa   
  4093fe:	xor    al,0x25
  409400:	in     eax,dx
  409401:	iret   
  409402:	int    0xa9
  409404:	dec    esp
  409405:	sbb    eax,DWORD PTR [eax+0x14]
  409408:	mov    ds:0x799befbf,al
  40940d:	aad    0xce
  40940f:	mov    ds:0x85fd4837,eax
  409414:	pslld  mm3,mm2
  409417:	js     0x409452
  409419:	jl     0x409425
  40941b:	and    al,ch
  40941d:	sti    
  40941e:	xor    edx,0xb9aa483c
  409424:	add    ebx,DWORD PTR [ebx-0x22]
  409427:	ss leave 
  409429:	xor    edx,DWORD PTR [edi-0x21]
  40942c:	(bad)  
  40942d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40942e:	stos   DWORD PTR es:[edi],eax
  40942f:	adc    al,al
  409431:	loopne 0x40946d
  409433:	and    BYTE PTR [esi+edi*1-0x41a5a444],ah
  40943a:	mov    esp,DWORD PTR [edx-0x23b856e9]
  409440:	inc    eax
  409441:	mov    dh,0x0
  409443:	mov    ds:0xd83726a1,al
  409448:	shl    DWORD PTR [edx+0x2a8aa824],cl
  40944e:	jp     0x40947f
  409450:	retf   0xab4f
  409453:	les    ecx,FWORD PTR [eax+0x6c]
  409456:	cs rcl bl,1
  409459:	sbb    edx,eax
  40945b:	and    al,0xb1
  40945d:	test   al,0x5d
  40945f:	(bad)  
  409460:	in     al,dx
  409461:	or     eax,0xc3bcd575
  409466:	into   
  409467:	adc    ch,BYTE PTR [ecx]
  409469:	adc    dh,BYTE PTR [edi-0x1f]
  40946c:	loopne 0x4094ac
  40946e:	clc    
  40946f:	sub    BYTE PTR [ebx+0x3de3619c],0x78
  409476:	or     DWORD PTR [esi+esi*2+0x2b4f436f],esp
  40947d:	ins    DWORD PTR es:[edi],dx
  40947e:	out    0x56,eax
  409480:	dec    ecx
  409481:	test   BYTE PTR [eax],dl
  409483:	(bad)  
  409485:	jb     0x40942d
  409487:	sub    DWORD PTR [ecx],0xffffffe8
  40948a:	add    eax,DWORD PTR [ebx+0x6e83a176]
  409490:	jo     0x409466
  409492:	add    DWORD PTR [eax+0x6c],edx
  409495:	add    edi,ecx
  409497:	mov    eax,0xc6c2edc9
  40949c:	dec    esp
  40949d:	xor    BYTE PTR [ebp-0x49],bl
  4094a0:	xor    DWORD PTR [ebx+0x5e9e8b35],ebp
  4094a6:	add    eax,0x105be1ac
  4094ab:	nop
  4094ac:	call   0x6b3ef41d
  4094b1:	in     eax,dx
  4094b2:	into   
  4094b3:	aam    0xba
  4094b5:	sbb    eax,0xb05f0a76
  4094ba:	lea    ecx,[ecx]
  4094bc:	push   ecx
  4094bd:	xchg   ebx,eax
  4094be:	out    0x8,eax
  4094c0:	or     DWORD PTR [esi-0x3f],0xc20bb79b
  4094c7:	aam    0xb7
  4094c9:	sub    BYTE PTR [esp+edx*2+0x23a75dd6],bl
  4094d0:	xor    bl,BYTE PTR [edx+0x2384f48e]
  4094d6:	jns    0x4094d9
  4094d8:	push   ecx
  4094d9:	aas    
  4094da:	pop    edi
  4094db:	push   esi
  4094dc:	cmp    al,0xef
  4094de:	int    0xeb
  4094e0:	add    BYTE PTR [edx],dh
  4094e2:	stc    
  4094e3:	inc    ecx
  4094e4:	rol    DWORD PTR [edx+0x66],cl
  4094e7:	loop   0x40946e
  4094e9:	push   0x6adbb18b
  4094ee:	enter  0x7605,0x25
  4094f2:	xchg   edi,eax
  4094f3:	wbinvd 
  4094f5:	int3   
  4094f6:	pop    ds
  4094f7:	psubsb mm3,QWORD PTR [edi]
  4094fa:	push   ebx
  4094fb:	and    al,0xe3
  4094fd:	jno    0x409527
  4094ff:	stos   DWORD PTR es:[edi],eax
  409500:	pop    DWORD PTR [edi+0x3bd96589]
  409506:	sub    ecx,edi
  409508:	mov    BYTE PTR ss:[edx],dh
  40950b:	cmp    BYTE PTR [edi-0x1b],cl
  40950e:	cwde   
  40950f:	aad    0x84
  409511:	xor    al,dl
  409513:	push   esp
  409514:	retf   0x7a0b
  409517:	or     DWORD PTR [eax+ebp*2+0x6f],0xe884aff3
  40951f:	mov    edx,0x107381ca
  409524:	fld    TBYTE PTR [esp+ebp*4]
  409527:	inc    esi
  409528:	xchg   ecx,eax
  409529:	imul   esi,DWORD PTR [ecx+0x1a4fa19c],0x9e73336e
  409533:	ret    0x6ee8
  409536:	sub    esi,DWORD PTR [eax]
  409538:	aas    
  409539:	or     BYTE PTR ds:0xbc7171b7,cl
  40953f:	repnz push edx
  409541:	add    ebp,edx
  409543:	icebp  
  409544:	jno    0x409503
  409546:	rcl    ebp,0x9e
  409549:	nop
  40954a:	dec    esi
  40954b:	cmp    eax,DWORD PTR [esi+0x48]
  40954e:	gs mov ecx,0x13919e2f
  409554:	xchg   esi,eax
  409555:	mov    dl,0x3c
  409557:	and    al,0xc1
  409559:	pop    eax
  40955a:	and    DWORD PTR [eax],edx
  40955c:	dec    ecx
  40955d:	call   0xc1d1d07a
  409562:	dec    ebx
  409563:	mov    ebx,0x167f8b1b
  409568:	test   BYTE PTR [esi+0x55],dl
  40956b:	mov    esp,ebp
  40956d:	(bad)  
  40956e:	pop    ecx
  40956f:	inc    ebx
  409570:	(bad)
  409573:	cdq    
  409574:	adc    eax,0xfc16f9d8
  409579:	ins    BYTE PTR es:[edi],dx
  40957a:	stos   DWORD PTR es:[edi],eax
  40957b:	jle    0x4095a1
  40957d:	inc    ebp
  40957e:	mov    dl,0x7e
  409580:	push   0xfffffff9
  409582:	or     dl,BYTE PTR [ebp+0x1]
  409585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409586:	xchg   edx,eax
  409587:	mul    DWORD PTR [esi]
  409589:	sbb    DWORD PTR [ebx],edi
  40958b:	ja     0x40959d
  40958d:	mov    dh,0x1f
  40958f:	jp     0x4095bb
  409591:	mov    cl,0x9a
  409593:	lock scas al,BYTE PTR es:[edi]
  409595:	test   al,0x82
  409597:	dec    ebp
  409598:	stos   BYTE PTR es:[edi],al
  409599:	fxch   st(3)
  40959b:	test   DWORD PTR [ebp-0x534e2cc0],edx
  4095a1:	inc    edi
  4095a2:	aad    0x73
  4095a4:	popf   
  4095a5:	cmp    BYTE PTR [edi+eax*1-0x2a],0x0
  4095aa:	les    ecx,FWORD PTR [edi+0x77]
  4095ad:	sbb    al,0xf8
  4095af:	enter  0x4811,0xd1
  4095b3:	xchg   ecx,eax
  4095b4:	mov    ah,0xdf
  4095b6:	cdq    
  4095b7:	popa   
  4095b8:	cwde   
  4095b9:	dec    esi
  4095ba:	shl    al,1
  4095bc:	adc    ebp,DWORD PTR [edi]
  4095be:	adc    bl,BYTE PTR [eax-0x20]
  4095c1:	out    dx,eax
  4095c2:	sbb    eax,0x1bee753
  4095c7:	not    edi
  4095c9:	mov    dl,0x8c
  4095cb:	arpl   WORD PTR [ebp+0x26aedb17],si
  4095d1:	stos   DWORD PTR es:[edi],eax
  4095d2:	pop    esi
  4095d3:	aaa    
  4095d4:	push   ebp
  4095d5:	idiv   BYTE PTR [eax-0x10]
  4095d8:	gs sub eax,edx
  4095db:	pop    ebp
  4095dc:	sub    cl,0x5b
  4095df:	pop    DWORD PTR [edi-0x6b051e83]
  4095e5:	nop
  4095e6:	out    0xd,al
  4095e8:	xor    eax,0x8e148a77
  4095ed:	ins    BYTE PTR es:[edi],dx
  4095ee:	cmp    ebp,edx
  4095f0:	jne    0x4095d2
  4095f2:	cwde   
  4095f3:	jl     0x40957c
  4095f5:	inc    edx
  4095f6:	mov    ch,0x60
  4095f8:	add    al,al
  4095fa:	ins    DWORD PTR es:[edi],dx
  4095fb:	mov    edi,0x330e7ab3
  409600:	stos   DWORD PTR es:[edi],eax
  409601:	retf   
  409602:	fdivr  DWORD PTR [edi+0x50d19dc3]
  409608:	add    ch,BYTE PTR [ecx]
  40960a:	push   esp
  40960b:	adc    ebp,esi
  40960d:	jbe    0x40962b
  40960f:	inc    eax
  409610:	or     al,0xf6
  409612:	add    al,0x80
  409614:	xchg   ecx,eax
  409615:	push   es
  409616:	push   ebx
  409617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409618:	js     0x40962b
  40961a:	adc    DWORD PTR [ecx+0x33],ecx
  40961d:	add    al,0xc7
  40961f:	xor    edx,DWORD PTR [ebx]
  409621:	imul   DWORD PTR gs:[edi+0xa]
  409625:	or     DWORD PTR [ebx-0x6e],edi
  409628:	test   eax,0xfa0caa1d
  40962d:	pop    ebp
  40962e:	sbb    BYTE PTR ds:0x64fe8777,0x1f
  409635:	call   0x7256a3be
  40963a:	push   0xf0cda056
  40963f:	mov    esi,0xa5c6d9d
  409644:	ss mov ebx,0x1309f047
  40964a:	retf   0xea1c
  40964d:	rcl    BYTE PTR ds:0x901fa066,1
  409653:	push   esi
  409654:	aaa    
  409655:	mov    BYTE PTR [edx-0x2f],ch
  409658:	pop    ecx
  409659:	es mov dh,0x57
  40965c:	cmp    DWORD PTR [edx-0x3acabfe8],ecx
  409662:	cmp    ebx,0x91e0426f
  409668:	pop    eax
  409669:	inc    esp
  40966a:	mov    bl,0x37
  40966c:	jp     0x40968a
  40966e:	pop    es
  40966f:	stos   DWORD PTR es:[edi],eax
  409670:	outs   dx,BYTE PTR ds:[esi]
  409671:	xor    DWORD PTR [eax-0x45],ecx
  409674:	or     BYTE PTR [edx-0x3a384aeb],0x7d
  40967b:	clc    
  40967c:	mov    ebx,esi
  40967e:	sub    eax,0x5177e67a
  409683:	pushf  
  409684:	pop    es
  409685:	in     eax,0xfa
  409687:	xchg   edi,edi
  409689:	(bad)
  40968c:	test   eax,0xfd8fe485
  409691:	inc    ebx
  409692:	jge    0x4096c8
  409694:	enter  0xbcd,0x63
  409698:	xlat   BYTE PTR ds:[ebx]
  409699:	sbb    eax,0x71c571e5
  40969e:	sbb    ch,cl
  4096a0:	add    BYTE PTR [edi+0x47],0x56
  4096a4:	out    dx,eax
  4096a5:	ss jb  0x4096b3
  4096a8:	lea    ebx,[ecx+0x1cd3f09b]
  4096ae:	test   DWORD PTR [esp+ecx*4+0x6a08d866],edi
  4096b5:	(bad)  
  4096b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096b7:	imul   DWORD PTR ss:[eax+eiz*8]
  4096bb:	mov    ah,0xe5
  4096bd:	sbb    ebx,DWORD PTR [edi-0x4b926de6]
  4096c3:	cmp    DWORD PTR [edi+0x3f],esp
  4096c6:	jb     0x4096c1
  4096c8:	aam    0x6e
  4096ca:	out    0x90,al
  4096cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096cd:	xor    al,0x74
  4096cf:	int    0x2c
  4096d1:	jmp    0x32d:0x9f33719f
  4096d8:	push   esi
  4096d9:	int3   
  4096da:	mov    bl,0x15
  4096dc:	mov    dl,0xaa
  4096de:	ja     0x409702
  4096e0:	push   ds
  4096e1:	pop    ecx
  4096e2:	jae    0x40975e
  4096e4:	xchg   BYTE PTR [edi],al
  4096e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096e7:	pop    ds
  4096e8:	push   eax
  4096e9:	imul   eax,DWORD PTR [esi-0x7eebb773],0x2b
  4096f0:	ins    DWORD PTR es:[edi],dx
  4096f1:	lahf   
  4096f2:	inc    eax
  4096f3:	sysexit 
  4096f5:	jmp    0xe13c:0xce3e4dfe
  4096fc:	or     DWORD PTR [edx],esp
  4096fe:	adc    DWORD PTR [eax+ecx*1-0x64],eax
  409702:	xchg   ebx,eax
  409703:	test   DWORD PTR [esi],0xaae7b8c1
  409709:	dec    edi
  40970a:	pop    ds
  40970b:	std    
  40970c:	(bad)  
  40970d:	pop    ebx
  40970e:	push   ebx
  40970f:	xchg   esp,eax
  409710:	add    DWORD PTR [ebx+0x12],esi
  409713:	mov    ebp,0x499a9793
  409718:	ret    
  409719:	movsx  esp,BYTE PTR [ebx-0x73717a67]
  409720:	jns    0x40978f
  409722:	xchg   BYTE PTR [ebx+0x46],ch
  409725:	(bad)  
  409726:	neg    DWORD PTR [esp+edi*1+0x5b]
  40972a:	cmp    BYTE PTR [ebp+esi*1+0x50],bl
  40972e:	sbb    eax,0xede79deb
  409733:	pop    ecx
  409734:	mov    ds:0x44857341,al
  409739:	es aas 
  40973b:	cld    
  40973c:	mov    al,ds:0x1521d791
  409741:	xchg   edi,eax
  409742:	pusha  
  409743:	xchg   esp,eax
  409744:	sub    eax,0x776d4f4e
  409749:	enter  0x49bd,0xaa
  40974d:	das    
  40974e:	popf   
  40974f:	aaa    
  409750:	jmp    0x9b1f97f8
  409755:	xchg   esi,eax
  409756:	jmp    0xb7c3045e
  40975b:	outs   dx,DWORD PTR ds:[esi]
  40975c:	mov    edi,0xfaf5aee9
  409761:	shl    DWORD PTR [ebx+0x720929cf],0x3c
  409768:	cmp    ebx,DWORD PTR [ebx]
  40976a:	fisttp DWORD PTR [edx]
  40976c:	add    ah,BYTE PTR [edi]
  40976e:	xor    DWORD PTR [edx+0x461e2e93],ebx
  409774:	jecxz  0x40971b
  409776:	adc    al,0x29
  409778:	ins    DWORD PTR es:[edi],dx
  409779:	dec    eax
  40977a:	cmp    ebp,eax
  40977c:	retf   
  40977d:	cwde   
  40977e:	push   cs
  40977f:	fdivr  DWORD PTR [ebx]
  409781:	xor    BYTE PTR [ebp+edx*8+0x6d76aa9e],ch
  409788:	adc    BYTE PTR [ecx],0x38
  40978b:	sbb    ecx,DWORD PTR [edi+eax*1+0x28]
  40978f:	pop    edx
  409790:	mov    BYTE PTR [ebp+0x7a06718],ah
  409796:	aaa    
  409797:	cmp    dh,BYTE PTR [ebx-0x1825af1a]
  40979d:	jae    0x409808
  40979f:	jmp    0x4097ce
  4097a1:	mov    eax,ds:0xcd6c3f1a
  4097a6:	out    dx,al
  4097a7:	inc    esi
  4097a8:	or     al,0xfa
  4097aa:	xchg   esi,eax
  4097ab:	std    
  4097ac:	jle    0x4097da
  4097ae:	dec    esi
  4097af:	jp     0x409819
  4097b1:	mov    bh,0x6d
  4097b3:	sbb    eax,0x89f960d6
  4097b8:	call   0xc06354ea
  4097bd:	xor    DWORD PTR [ebp-0x17],esp
  4097c0:	ret    0x338b
  4097c3:	sbb    edx,DWORD PTR [eax]
  4097c5:	out    0xb8,al
  4097c7:	sahf   
  4097c8:	es (bad) 
  4097ca:	mov    DWORD PTR gs:[ebx+0x48],esp
  4097ce:	ja     0x4097dd
  4097d0:	push   edi
  4097d1:	jmp    0x40982c
  4097d3:	bound  esp,QWORD PTR [ebp-0x51]
  4097d6:	arpl   sp,di
  4097d8:	jge    0x409771
  4097da:	cmp    ecx,edi
  4097dc:	outs   dx,BYTE PTR ds:[esi]
  4097dd:	in     eax,dx
  4097de:	sub    DWORD PTR [edx],ebx
  4097e0:	fsubr  st,st(3)
  4097e2:	addr16 add ch,ah
  4097e5:	or     edx,edx
  4097e7:	sbb    eax,DWORD PTR [ebx-0x39b26197]
  4097ed:	pop    edx
  4097ee:	xor    eax,0x6745dfd8
  4097f3:	sbb    DWORD PTR [ecx+0x1cbafa2d],eax
  4097f9:	cmp    ecx,esi
  4097fb:	mov    WORD PTR [esi],es
  4097fd:	in     eax,0xf0
  4097ff:	xor    eax,0x5608be3e
  409804:	aaa    
  409805:	test   BYTE PTR [ecx-0x66a6c04b],al
  40980b:	mov    dh,BYTE PTR [esi+edi*2-0x7e8144ad]
  409812:	nop
  409813:	mov    ds:0xa3cfcfc8,eax
  409818:	mov    ecx,0x5e32fc85
  40981d:	aad    0xfe
  40981f:	adc    edi,eax
  409821:	fidiv  DWORD PTR [ebx]
  409823:	js     0x409844
  409825:	jb     0x4097d8
  409827:	or     edi,ecx
  409829:	iret   
  40982a:	pop    DWORD PTR [eax-0x59]
  40982d:	xchg   esp,eax
  40982e:	jae    0x4097f3
  409830:	push   0x8ba71921
  409835:	pop    es
  409836:	inc    ebx
  409837:	push   ecx
  409838:	aad    0x11
  40983a:	out    dx,eax
  40983b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40983c:	stc    
  40983d:	dec    ebp
  40983e:	adc    eax,0x395da9cb
  409843:	cwde   
  409844:	add    al,0xfb
  409846:	lds    edx,FWORD PTR [ecx-0x7f]
  409849:	push   edx
  40984a:	sub    al,0x72
  40984c:	xchg   ecx,eax
  40984d:	cmp    BYTE PTR [esi],bl
  40984f:	push   DWORD PTR [ecx-0x187dc9ab]
  409855:	retf   
  409856:	test   eax,0x4cf75f9f
  40985b:	add    ah,0x29
  40985e:	pop    edx
  40985f:	mov    bh,0x7f
  409861:	push   esp
  409862:	mov    ch,0xdf
  409864:	out    0xbb,eax
  409866:	jne    0x409868
  409868:	jmp    0x4097fb
  40986a:	daa    
  40986b:	pop    ebp
  40986c:	mov    ecx,0x54cee095
  409871:	aas    
  409872:	sub    eax,0x4bbd3be
  409877:	fmul   QWORD PTR [esi]
  409879:	mov    edi,0x2ff472ce
  40987e:	mov    bl,0xa2
  409880:	sti    
  409881:	repz mov cl,BYTE PTR [ecx+0x7da77857]
  409888:	shl    BYTE PTR [ebx+0x19],cl
  40988b:	enter  0xd471,0x9b
  40988f:	add    cl,BYTE PTR [edi-0x9b947c8]
  409895:	lea    esi,ss:[edx+eiz*8]
  409899:	rol    DWORD PTR [edx+0xa],0x82
  40989d:	call   0x163effc2
  4098a2:	jp     0x409905
  4098a4:	fcmovne st,st(4)
  4098a6:	ja     0x40983d
  4098a8:	xchg   esi,eax
  4098a9:	jbe    0x409889
  4098ab:	pop    ebx
  4098ac:	mov    edi,0xacd11ab1
  4098b1:	mov    edx,0xb1ab9392
  4098b6:	sbb    eax,0xf14b84c3
  4098bb:	(bad)  
  4098bc:	scas   al,BYTE PTR es:[edi]
  4098bd:	stos   BYTE PTR es:[edi],al
  4098be:	or     al,0xcf
  4098c0:	cmp    edx,DWORD PTR [ebp-0x6c]
  4098c3:	(bad)  
  4098c4:	sbb    cl,bl
  4098c6:	stc    
  4098c7:	push   esp
  4098c8:	icebp  
  4098c9:	(bad)  
  4098ca:	clc    
  4098cb:	mov    ecx,0x9615d893
  4098d0:	in     eax,0x31
  4098d2:	jp     0x4098f3
  4098d4:	xchg   edi,eax
  4098d5:	mov    ebx,0x916cea75
  4098da:	call   0xafa6:0xe87049dd
  4098e1:	popa   
  4098e2:	push   ds
  4098e3:	pop    edi
  4098e4:	sub    dh,bl
  4098e6:	mov    ch,0x6d
  4098e8:	dec    ebp
  4098e9:	mov    ebx,0x1a5fc93
  4098ee:	mov    ecx,0xecbb71c9
  4098f3:	mov    eax,0xbcefe385
  4098f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098f9:	pop    ecx
  4098fa:	sub    ecx,esp
  4098fc:	dec    esp
  4098fd:	adc    al,0xf2
  4098ff:	loope  0x409916
  409901:	xchg   edi,eax
  409902:	aas    
  409903:	(bad)  
  409904:	ficom  DWORD PTR [edi+0x50]
  409907:	mov    dh,0xe
  409909:	loopne 0x40989f
  40990b:	or     BYTE PTR [esi],dl
  40990d:	inc    edx
  40990e:	(bad)  
  40990f:	clc    
  409910:	dec    eax
  409911:	shl    DWORD PTR [eax],0x28
  409914:	sbb    BYTE PTR [ebx-0x49276a77],dl
  40991a:	in     eax,dx
  40991b:	clc    
  40991c:	popf   
  40991d:	push   ss
  40991e:	sbb    DWORD PTR [ebx-0x6f],ebx
  409921:	xor    bl,al
  409923:	fneni(8087 only) 
  409925:	je     0x409992
  409927:	fwait
  409928:	int    0xa2
  40992a:	xor    eax,0xcadc87b6
  40992f:	inc    ebp
  409930:	xor    DWORD PTR [edi+0x2624543a],edi
  409936:	pop    ds
  409937:	sbb    al,0xe1
  409939:	mov    WORD PTR [ebx-0x30],fs
  40993c:	call   0x5ec5:0x52bc323e
  409943:	push   esp
  409944:	(bad)  
  409945:	push   ecx
  409946:	push   cs
  409947:	jmp    0x4099ab
  409949:	test   DWORD PTR [edx-0xf],ecx
  40994c:	jmp    edi
  40994e:	aam    0x16
  409950:	or     DWORD PTR [eax],ebp
  409952:	fld    st(0)
  409954:	ret    0x1b12
  409957:	inc    edx
  409958:	jne    0x40996a
  40995a:	inc    esp
  40995b:	aas    
  40995c:	retf   
  40995d:	inc    esi
  40995e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40995f:	cdq    
  409960:	lods   eax,DWORD PTR ds:[esi]
  409961:	jle    0x40997c
  409963:	add    eax,0x2d63becb
  409968:	leave  
  409969:	or     bh,bl
  40996b:	gs jp  0x40990e
  40996e:	sar    cl,cl
  409970:	sub    eax,0x3252ffa2
  409975:	outs   dx,BYTE PTR ds:[esi]
  409976:	scas   al,BYTE PTR es:[edi]
  409977:	xlat   BYTE PTR ds:[ebx]
  409978:	mov    dl,0x65
  40997a:	stos   BYTE PTR es:[edi],al
  40997b:	cwde   
  40997c:	pop    ss
  40997d:	push   ecx
  40997e:	mov    ecx,0xf54a9653
  409983:	mov    bl,0xf0
  409985:	jecxz  0x409997
  409987:	xchg   BYTE PTR [edx],dh
  409989:	jp     0x409919
  40998b:	hlt    
  40998c:	mov    ebx,0xe4c9f26d
  409991:	jo     0x409922
  409993:	adc    BYTE PTR [esi],dh
  409995:	xor    eax,0x359d276d
  40999a:	in     eax,dx
  40999b:	jmp    0x7e0918f4
  4099a0:	ins    BYTE PTR es:[edi],dx
  4099a1:	call   0x9162d4de
  4099a6:	cmp    dh,ch
  4099a8:	ret    0x55ff
  4099ab:	hlt    
  4099ac:	push   cs
  4099ad:	into   
  4099ae:	mov    ds:0xaf6ff91,al
  4099b3:	push   cs
  4099b4:	pusha  
  4099b5:	sbb    dl,bl
  4099b7:	jmp    0x2bf7:0xd2ce8281
  4099be:	xor    BYTE PTR [eax+0xd261ca],bl
  4099c4:	inc    edi
  4099c5:	xchg   ecx,eax
  4099c6:	cmp    esi,ebp
  4099c8:	arpl   cx,sp
  4099ca:	inc    ebx
  4099cb:	cmc    
  4099cc:	or     al,0x3b
  4099ce:	sbb    al,0xaa
  4099d0:	hlt    
  4099d1:	inc    esp
  4099d2:	pushf  
  4099d3:	in     eax,dx
  4099d4:	adc    eax,0xdd12a74b
  4099d9:	stos   DWORD PTR es:[edi],eax
  4099da:	jmp    0x409a27
  4099dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099dd:	leave  
  4099de:	shr    edx,0x56
  4099e1:	push   esi
  4099e3:	cmc    
  4099e4:	mov    cl,0x76
  4099e6:	fidiv  WORD PTR [edi+ebp*8+0x6]
  4099ea:	sbb    BYTE PTR [eax+0x46898eab],0xdc
  4099f1:	out    dx,eax
  4099f2:	xor    DWORD PTR [ecx],ebp
  4099f4:	(bad)
  4099f7:	es jns 0x409a0e
  4099fa:	xor    al,0xc
  4099fd:	imul   DWORD PTR [esi+0x34]
  409a00:	call   0x7bf5:0xfad43bab
  409a07:	and    al,0x59
  409a09:	jmp    0x2361:0xe9279cfa
  409a10:	jne    0x4099d4
  409a12:	push   0xfdb12f55
  409a17:	fs jmp 0xf29e71d5
  409a1d:	rcl    DWORD PTR [edx-0x3a65eb2f],cl
  409a23:	mov    ebp,0xcb5956a7
  409a28:	fld    DWORD PTR [ebp+esi*2-0x246a7861]
  409a2f:	imul   eax,eax,0x8f2e0546
  409a35:	lds    esi,FWORD PTR [esi-0x4a16e1cd]
  409a3b:	jp     0x4099f8
  409a3d:	adc    edi,ebp
  409a3f:	fisubr WORD PTR [ebp+edi*4-0x1c9268e3]
  409a46:	mov    al,0xbe
  409a48:	mov    ecx,DWORD PTR [eax+esi*1]
  409a4b:	iret   
  409a4c:	(bad)  
  409a4d:	outs   dx,BYTE PTR ds:[esi]
  409a4e:	mov    eax,0xa26454e9
  409a53:	lock xor ecx,DWORD PTR [ecx]
  409a56:	or     cl,BYTE PTR [esi+ecx*1]
  409a59:	or     eax,ecx
  409a5b:	retf   
  409a5c:	inc    esp
  409a5d:	mov    ecx,0xe506b470
  409a62:	xor    BYTE PTR [eax+0x51],ah
  409a65:	in     al,0xf
  409a67:	pop    esi
  409a68:	inc    ebp
  409a69:	xor    eax,0x600439d0
  409a6e:	mov    edi,0x72df53fa
  409a73:	mov    esp,0xc6cbe9ec
  409a78:	in     al,dx
  409a79:	xchg   edx,eax
  409a7a:	inc    edx
  409a7b:	cmp    BYTE PTR [esi+0x2832b592],ch
  409a81:	push   edi
  409a82:	scas   al,BYTE PTR es:[edi]
  409a83:	in     eax,0x47
  409a85:	in     eax,0x9d
  409a87:	out    0xe1,al
  409a89:	push   0xfffffff4
  409a8b:	sahf   
  409a8c:	and    eax,0x7d86e9ef
  409a91:	xchg   esp,eax
  409a92:	mov    al,bh
  409a94:	outs   dx,BYTE PTR ds:[esi]
  409a95:	call   0x2ec59abd
  409a9a:	clc    
  409a9b:	jo     0x409a70
  409a9d:	imul   edi,DWORD PTR [ebx-0x79],0xf
  409aa1:	push   edx
  409aa2:	mov    ah,0x64
  409aa4:	aas    
  409aa5:	test   BYTE PTR ds:0x9c97e021,dh
  409aab:	cmp    al,0xb7
  409aad:	mov    edx,0x89ced8f8
  409ab2:	lahf   
  409ab3:	lock mov bl,0x73
  409ab6:	pop    ecx
  409ab7:	fdivr  DWORD PTR [ecx-0x14930f49]
  409abd:	jno    0x409b1c
  409abf:	lea    ecx,[ebp+ebx*2+0x16]
  409ac3:	out    0x2c,eax
  409ac5:	mov    edx,0x2922ab12
  409aca:	cdq    
  409acb:	push   esi
  409acc:	xchg   edi,eax
  409acd:	mov    WORD PTR gs:[ebx-0x7c],?
  409ad1:	call   0x2dcf26de
  409ad6:	nop    DWORD PTR [edi+0x7f87e9c4]
  409add:	int3   
  409ade:	mov    al,ds:0xb32a26a8
  409ae3:	mov    bl,0xf5
  409ae6:	dec    ecx
  409ae7:	cmp    eax,esp
  409ae9:	and    eax,0xe3b3bee6
  409aee:	jge    0x409b2c
  409af0:	jmp    0x409ab9
  409af2:	mov    dl,BYTE PTR [edx-0x37]
  409af5:	loopne 0x409b46
  409af7:	(bad)  
  409af8:	mul    DWORD PTR ds:0x8ee707a5
  409afe:	mov    ds:0xdad2c98f,eax
  409b03:	mov    ch,0x7c
  409b05:	and    al,0x2a
  409b07:	mov    ebp,0xa545cb4b
  409b0c:	aaa    
  409b0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b0e:	bound  esi,QWORD PTR [edx]
  409b10:	stc    
  409b11:	xchg   BYTE PTR [edx+0xb],bh
  409b14:	xchg   edi,eax
  409b15:	cdq    
  409b16:	stos   BYTE PTR es:[edi],al
  409b17:	push   cs
  409b18:	fs int3 
  409b1a:	loope  0x409b09
  409b1c:	cmp    al,0xbf
  409b1e:	pusha  
  409b1f:	sub    DWORD PTR [edi-0x249c77b9],edi
  409b25:	or     BYTE PTR [edi],ch
  409b27:	test   BYTE PTR [esi],bh
  409b29:	sbb    bh,BYTE PTR [edx-0x20]
  409b2c:	or     al,0x16
  409b2e:	add    DWORD PTR [eax-0x73],esi
  409b31:	cdq    
  409b32:	jge    0x409b44
  409b34:	cld    
  409b35:	lods   al,BYTE PTR ds:[esi]
  409b36:	std    
  409b37:	push   esi
  409b38:	and    dl,BYTE PTR [eax-0x30]
  409b3b:	clc    
  409b3c:	xchg   ebx,eax
  409b3d:	mov    esi,0x9fc5bd02
  409b42:	mov    ah,0x2
  409b44:	jmp    0x2626:0x6d5ee7cb
  409b4b:	fbstp  TBYTE PTR [edx+ebp*2-0x403beff4]
  409b52:	ins    DWORD PTR es:[edi],dx
  409b53:	inc    edi
  409b54:	je     0x409bc6
  409b56:	int    0xf9
  409b58:	inc    esi
  409b59:	int    0x19
  409b5b:	aam    0x9a
  409b5d:	call   0xf8404850
  409b62:	fs in  eax,dx
  409b64:	xor    DWORD PTR [edi+0x27f7945e],edi
  409b6a:	rcl    DWORD PTR [ebp+0x1475bc01],0xbc
  409b71:	test   eax,0xb46b221d
  409b76:	mul    DWORD PTR [eax-0x6dda2cf8]
  409b7c:	int    0xd5
  409b7e:	jmp    0x695eee6e
  409b83:	mov    esi,es
  409b85:	push   ebx
  409b86:	pop    ebp
  409b87:	jb     0x409b73
  409b89:	shr    DWORD PTR [ecx+ebx*8],cl
  409b8c:	mov    ah,0x70
  409b8e:	and    esi,edx
  409b90:	inc    ebp
  409b91:	imul   eax,DWORD PTR [esi],0x42
  409b94:	test   BYTE PTR [eax],cl
  409b96:	mov    esp,0x223ecb3f
  409b9b:	pop    edi
  409b9c:	cmp    al,0xd
  409b9e:	iret   
  409b9f:	adc    DWORD PTR [eax+ebx*1],esi
  409ba2:	mov    al,0xa7
  409ba4:	data16 sbb dl,BYTE PTR [ebx]
  409ba7:	xchg   ebx,eax
  409ba8:	dec    esp
  409ba9:	mov    edi,0x56caf286
  409bae:	stc    
  409baf:	pop    ebp
  409bb0:	or     eax,0xe0fc2c8a
  409bb5:	std    
  409bb6:	add    ecx,0x5ea41857
  409bbc:	out    0x6d,al
  409bbe:	sbb    esp,DWORD PTR [ebx-0x35]
  409bc1:	add    al,0x8
  409bc3:	mov    ebp,0x6f607b0
  409bc8:	pop    esi
  409bc9:	sub    al,BYTE PTR [edx+0x5ad7d78a]
  409bcf:	ins    BYTE PTR es:[edi],dx
  409bd0:	fistp  WORD PTR [edx+0x22]
  409bd3:	add    BYTE PTR [ebx+0x25],bl
  409bd6:	aad    0x98
  409bd8:	jb     0x409bd5
  409bda:	fcos   
  409bdc:	int    0xd0
  409bde:	cmc    
  409bdf:	or     DWORD PTR [ebx],0x1e1c197a
  409be5:	and    al,0x1a
  409be7:	cwde   
  409be8:	fnstsw WORD PTR [edi+0x124d72b2]
  409bee:	mov    DWORD PTR [ebp+0x39fccec5],eax
  409bf4:	adc    al,ch
  409bf6:	test   al,0x47
  409bf8:	into   
  409bf9:	inc    eax
  409bfa:	or     al,0xbf
  409bfc:	jge    0x409c1a
  409bfe:	xor    eax,0x480eeddb
  409c03:	add    eax,0xf7521f83
  409c08:	dec    esi
  409c09:	xchg   edi,eax
  409c0a:	retf   
  409c0b:	jae    0x409c77
  409c0d:	neg    ch
  409c0f:	pop    esp
  409c10:	dec    edi
  409c11:	int3   
  409c12:	sub    BYTE PTR [edi+0x6d],0x77
  409c16:	dec    esi
  409c17:	cmp    eax,0x7dedc6bb
  409c1c:	mov    dl,0x6f
  409c1e:	adc    BYTE PTR [ebx],al
  409c20:	push   ebp
  409c21:	mov    ds:0x6475dd28,al
  409c26:	add    bh,dh
  409c28:	sbb    edx,DWORD PTR [ecx-0x2c]
  409c2b:	dec    ebx
  409c2c:	out    dx,al
  409c2d:	in     al,0x6a
  409c2f:	or     eax,0x5d57df0d
  409c34:	pop    ecx
  409c35:	xor    al,0x24
  409c37:	xchg   esi,eax
  409c38:	xchg   esp,eax
  409c39:	out    0xce,al
  409c3b:	jge    0x409c35
  409c3d:	mov    eax,ds:0xafd9cc1
  409c42:	fistp  WORD PTR [ebp-0x49610079]
  409c48:	xchg   esi,eax
  409c49:	xchg   ebp,eax
  409c4a:	jbe    0x409c56
  409c4c:	pop    eax
  409c4d:	xor    al,0xa5
  409c4f:	imul   ebp,DWORD PTR ds:0x480f79f,0xf10b8df5
  409c59:	js     0x409cac
  409c5b:	cs inc ebp
  409c5d:	fs mov dl,0x1c
  409c60:	adc    al,0x5d
  409c62:	sbb    esi,esi
  409c64:	test   DWORD PTR [edx],ecx
  409c66:	std    
  409c67:	pop    edi
  409c68:	(bad)  
  409c6a:	neg    BYTE PTR [edi]
  409c6c:	and    BYTE PTR [eax-0x69],0x90
  409c70:	fsubp  st(4),st
  409c72:	ss rol eax,1
  409c75:	xor    ch,BYTE PTR [edi-0x7c]
  409c78:	jns    0x409ccb
  409c7a:	xor    BYTE PTR [edx+0x377dd222],bl
  409c80:	adc    eax,0x4c055161
  409c85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c86:	dec    esp
  409c87:	out    dx,eax
  409c88:	inc    ebx
  409c89:	retf   
  409c8a:	cmp    al,0xca
  409c8c:	mov    bh,0x58
  409c8e:	jne    0x409c44
  409c90:	add    al,0xe5
  409c92:	loope  0x409cb2
  409c94:	aas    
  409c95:	jp     0x409c3f
  409c97:	mov    ebx,ebp
  409c99:	add    ebx,DWORD PTR [edx-0x4e1029f5]
  409c9f:	outs   dx,BYTE PTR ds:[esi]
  409ca0:	mov    WORD PTR [edi+ebx*8-0x66],ds
  409ca4:	sbb    ebx,ecx
  409ca6:	imul   edx,DWORD PTR [ecx-0x3f],0xffffffee
  409caa:	dec    eax
  409cab:	mov    esp,0x8eb9fc2a
  409cb0:	sbb    al,0xd4
  409cb2:	sbb    dx,WORD PTR [ebp+0x47]
  409cb6:	imul   ecx,DWORD PTR [ecx+eax*2],0xffffffee
  409cba:	xor    eax,0x556009ea
  409cbf:	mov    eax,edi
  409cc1:	loopne 0x409cd5
  409cc3:	jne    0x409c4a
  409cc5:	out    dx,al
  409cc6:	mov    edi,0xe4ca677f
  409ccb:	jge    0x409d33
  409ccd:	dec    edx
  409cce:	lahf   
  409ccf:	dec    edi
  409cd0:	mov    esi,DWORD PTR [edi+edi*1+0x7d]
  409cd4:	mov    eax,ds:0xf8005f9a
  409cd9:	aam    0x81
  409cdb:	mov    al,BYTE PTR [ecx]
  409cdd:	push   eax
  409cde:	scas   al,BYTE PTR es:[edi]
  409cdf:	lods   eax,DWORD PTR ds:[esi]
  409ce0:	jmp    0x7628:0xbfc4717
  409ce7:	fs (bad) 
  409ce9:	loope  0x409c8c
  409ceb:	and    al,0x12
  409ced:	xchg   edx,eax
  409cee:	sub    eax,0x534fffa9
  409cf3:	retf   0x68e1
  409cf6:	xor    al,0xb3
  409cf8:	mov    eax,ds:0x30d61abf
  409cfd:	fiadd  WORD PTR [edx+0x5e]
  409d00:	or     DWORD PTR [esp+edx*4+0xfc2819a],esp
  409d07:	test   eax,0x8e963e1
  409d0c:	dec    ebp
  409d0d:	aam    0x6d
  409d0f:	(bad)
  409d12:	fld    DWORD PTR ds:0x5c58c0e2
  409d18:	mov    eax,ds:0xdce937cf
  409d1d:	jle    0x409cd5
  409d1f:	xchg   BYTE PTR [esi-0x7b7c7ea1],bl
  409d25:	sahf   
  409d26:	mov    ds:0x5152bdc7,al
  409d2b:	xchg   esp,eax
  409d2c:	xor    DWORD PTR [eax+0x46],esp
  409d2f:	jle    0x409cf2
  409d31:	rcr    DWORD PTR [ebp+0x62],1
  409d34:	pop    edi
  409d35:	sub    al,0xda
  409d37:	sti    
  409d38:	add    eax,0x8a7181e6
  409d3d:	clc    
  409d3e:	mov    esp,0xe985bce3
  409d43:	rcl    DWORD PTR [edx],1
  409d45:	mov    bh,0x66
  409d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d48:	inc    esi
  409d49:	jl     0x409d08
  409d4b:	jp     0x409d76
  409d4d:	stos   DWORD PTR es:[edi],eax
  409d4e:	nop
  409d4f:	cld    
  409d50:	push   0x604f29b2
  409d55:	sbb    al,0x1
  409d57:	retf   0xfc11
  409d5a:	int3   
  409d5b:	xor    BYTE PTR ds:0x4a93ea60,cl
  409d61:	(bad)  
  409d62:	adc    DWORD PTR [edi-0x56b1215c],ebp
  409d68:	mov    ds:0x47158432,eax
  409d6d:	sar    BYTE PTR [eax+0x72af3834],cl
  409d73:	cmp    ebx,DWORD PTR [ebx+0x4c759481]
  409d79:	popa   
  409d7a:	mov    cl,0xfc
  409d7c:	daa    
  409d7d:	je     0x409da1
  409d7f:	and    DWORD PTR [ecx],ecx
  409d81:	jmp    0x409d4c
  409d83:	outs   dx,DWORD PTR ds:[esi]
  409d84:	adc    ebx,ecx
  409d86:	sub    eax,0x4f846b27
  409d8b:	pop    esi
  409d8c:	in     al,0xdc
  409d8e:	mov    ds:0xacba09a7,eax
  409d93:	shr    BYTE PTR [edx-0x58],1
  409d96:	and    BYTE PTR [esi],bh
  409d98:	mov    esi,0xd3d680d8
  409d9d:	mov    DWORD PTR [edi-0x3255df7d],0x831563e3
  409da7:	push   esi
  409da8:	inc    esi
  409da9:	inc    ecx
  409daa:	push   eax
  409dab:	bound  eax,QWORD PTR [ebx-0x3159503c]
  409db1:	int3   
  409db2:	lods   eax,DWORD PTR ds:[esi]
  409db3:	das    
  409db4:	cli    
  409db5:	mov    dh,0x5f
  409db7:	ja     0x409d6f
  409db9:	imul   ecx,DWORD PTR [ebx+esi*8-0x39],0x5d8db947
  409dc1:	and    eax,0x8c40e8fd
  409dc6:	push   edx
  409dc7:	adc    edi,eax
  409dc9:	ins    BYTE PTR es:[edi],dx
  409dca:	push   eax
  409dcb:	lods   al,BYTE PTR ds:[esi]
  409dcc:	dec    edi
  409dcd:	sbb    edx,DWORD PTR [ecx]
  409dcf:	out    dx,al
  409dd0:	mov    bh,0x7
  409dd2:	cmp    esp,esp
  409dd4:	fadd   QWORD PTR fs:[ebp+0x75]
  409dd8:	and    BYTE PTR [edi],bl
  409dda:	push   esp
  409ddb:	stos   BYTE PTR es:[edi],al
  409ddc:	cdq    
  409ddd:	sbb    esi,ecx
  409ddf:	pop    DWORD PTR [edx-0x419875d7]
  409de5:	mov    bl,BYTE PTR [ebx]
  409de7:	clc    
  409de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409de9:	sub    ebp,edi
  409deb:	shl    DWORD PTR [esi+eiz*2-0x1f],1
  409def:	jno    0x409d89
  409df1:	inc    esi
  409df2:	aaa    
  409df3:	xchg   ecx,eax
  409df4:	cmc    
  409df5:	arpl   di,ax
  409df7:	adc    al,BYTE PTR [eax-0x18]
  409dfa:	mov    edi,0xfdbd9e4c
  409dff:	cld    
  409e00:	jns    0x409e19
  409e02:	jp     0x409d9c
  409e04:	push   es
  409e05:	add    eax,0x8091414
  409e0a:	stos   DWORD PTR es:[edi],eax
  409e0b:	fist   WORD PTR [ebx+0x181f9cba]
  409e11:	data16 in al,dx
  409e13:	into   
  409e14:	pop    ebp
  409e15:	js     0x409e4c
  409e17:	mov    ds:0xe3dea145,al
  409e1c:	pop    esi
  409e1d:	pop    esp
  409e1e:	cli    
  409e1f:	mov    dl,0xb
  409e21:	jno    0x409de0
  409e23:	xor    al,0x95
  409e25:	jno    0x409ea5
  409e27:	and    edx,DWORD PTR [ebp+0x2b]
  409e2a:	mov    ecx,0x7158282d
  409e2f:	inc    esi
  409e30:	pop    edx
  409e31:	not    DWORD PTR [eax+esi*1+0x40]
  409e35:	sub    cl,BYTE PTR [edx]
  409e37:	adc    ebx,DWORD PTR [ebx-0x3f]
  409e3a:	push   ds
  409e3b:	cmc    
  409e3c:	call   0xda13:0x52ef7b2c
  409e43:	dec    ebp
  409e44:	sub    eax,DWORD PTR [edx]
  409e46:	inc    esi
  409e47:	jnp    0x409ea6
  409e49:	mov    ecx,0x6485375f
  409e4e:	adc    bh,BYTE PTR [ebp+0x6c78025a]
  409e54:	or     BYTE PTR [edx-0x5],al
  409e57:	clc    
  409e58:	in     al,0x38
  409e5a:	mov    bh,0xc4
  409e5c:	loopne 0x409e52
  409e5e:	push   eax
  409e5f:	xlat   BYTE PTR ds:[ebx]
  409e60:	not    DWORD PTR [esi+0xb]
  409e63:	cmp    al,0x74
  409e65:	dec    esi
  409e66:	or     esi,DWORD PTR fs:[eax+edx*2-0x381cfd89]
  409e6e:	shr    DWORD PTR [ebx],cl
  409e70:	mov    cl,0xf6
  409e72:	pop    ds
  409e73:	or     DWORD PTR [ecx+edx*4],esi
  409e76:	adc    eax,0xa0458d75
  409e7b:	lock retf 
  409e7d:	js     0x409e82
  409e7f:	ss (bad) 
  409e81:	and    eax,0x42f0f09
  409e86:	xor    BYTE PTR [edx],ah
  409e88:	aad    0xf8
  409e8a:	sbb    al,0x70
  409e8c:	popf   
  409e8d:	jge    0x409ed2
  409e8f:	test   eax,0x60760388
  409e94:	add    al,0x9
  409e96:	repz push ds
  409e98:	pop    edi
  409e99:	dec    ebx
  409e9a:	xchg   esi,eax
  409e9b:	or     eax,0x1caadcd7
  409ea0:	popf   
  409ea1:	push   ecx
  409ea2:	stos   DWORD PTR es:[edi],eax
  409ea3:	mov    ds:0xae0f2c48,al
  409ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ea9:	call   0x5f19:0x1fde4395
  409eb0:	or     BYTE PTR [edi-0x7c39e17d],0xc8
  409eb7:	mov    ?,WORD PTR [ebx-0x462ecc7c]
  409ebd:	mov    ebx,0xbfaab3e3
  409ec2:	lock xor BYTE PTR ds:0x6a7b7498,0xc4
  409eca:	cmp    DWORD PTR [edx],ecx
  409ecc:	sbb    DWORD PTR [eax-0x65185ad2],ecx
  409ed2:	imul   eax,DWORD PTR [ecx-0x7f],0xd
  409ed6:	jb     0x409f1a
  409ed8:	aad    0x1c
  409eda:	repnz cmp ebp,DWORD PTR [edi+0x11]
  409ede:	push   ss
  409edf:	sub    eax,0xac740ff1
  409ee4:	clc    
  409ee5:	pop    es
  409ee6:	xchg   ebx,eax
  409ee7:	xchg   ecx,eax
  409ee8:	dec    esi
  409ee9:	dec    edx
  409eea:	mov    al,0x90
  409eec:	popa   
  409eed:	mov    edi,0xa4320336
  409ef2:	pusha  
  409ef3:	jecxz  0x409e89
  409ef5:	stos   DWORD PTR es:[edi],eax
  409ef6:	jb     0x409ee1
  409ef8:	or     DWORD PTR [ebp+0x69],edi
  409efb:	retf   0x1926
  409efe:	xchg   ecx,eax
  409eff:	xor    BYTE PTR [edx-0x734ceab4],bh
  409f05:	or     al,0xf5
  409f07:	jae    0x409f83
  409f09:	out    dx,al
  409f0a:	lea    ebp,[esp+edi*8-0x52]
  409f0e:	lahf   
  409f0f:	mov    bh,0x53
  409f11:	push   ss
  409f12:	popa   
  409f13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f14:	aad    0x5b
  409f16:	das    
  409f17:	cmp    eax,0x88364b6
  409f1c:	xchg   ecx,eax
  409f1d:	cmp    BYTE PTR [edi-0x126c8418],dl
  409f23:	enter  0xab5a,0xdb
  409f27:	aad    0x60
  409f29:	and    al,0xcc
  409f2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f2c:	pop    ecx
  409f2d:	scas   al,BYTE PTR es:[edi]
  409f2e:	xchg   edx,eax
  409f2f:	jo     0x409f5b
  409f31:	adc    DWORD PTR [edx+edx*2],0x3f
  409f35:	int    0xe9
  409f37:	(bad)  
  409f38:	ds pop ebx
  409f3a:	sub    dh,BYTE PTR [edi-0x61]
  409f3d:	icebp  
  409f3e:	addr16 sbb al,0x35
  409f41:	ins    DWORD PTR es:[edi],dx
  409f42:	retf   
  409f43:	lods   al,BYTE PTR ds:[esi]
  409f44:	mov    ch,0x48
  409f46:	mov    ch,0x27
  409f48:	(bad)  
  409f49:	test   eax,0x3edec39d
  409f4e:	pushf  
  409f4f:	je     0x409f40
  409f51:	inc    ebx
  409f52:	lock std 
  409f54:	scas   eax,DWORD PTR es:[edi]
  409f55:	imul   edx,DWORD PTR [ebp+0x7148e9d5],0xf511ec0d
  409f5f:	out    dx,eax
  409f60:	outs   dx,BYTE PTR ds:[esi]
  409f61:	mov    edi,0x9d426ab5
  409f66:	jl     0x409f40
  409f68:	mov    edx,0xe8f756f3
  409f6d:	mov    dh,0xb1
  409f6f:	mov    eax,ds:0xa1188
  409f74:	(bad)  
  409f76:	loopne 0x409f0c
  409f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f79:	jno    0x409f35
  409f7b:	int3   
  409f7c:	pushf  
  409f7d:	pop    eax
  409f7e:	xchg   ecx,eax
  409f7f:	je     0x409f3c
  409f81:	das    
  409f82:	pop    edx
  409f83:	jmp    0x4d87f9a0
  409f88:	pop    eax
  409f89:	int    0xf7
  409f8b:	inc    ebx
  409f8c:	and    DWORD PTR [eax-0x3d2314d3],esp
  409f92:	fsub   st,st(2)
  409f94:	pop    ebp
  409f95:	lds    ecx,FWORD PTR [ecx-0x27b8ad4]
  409f9b:	adc    DWORD PTR [edi],ecx
  409f9d:	ja     0x409f68
  409f9f:	aad    0xeb
  409fa1:	xchg   ebx,eax
  409fa2:	lds    ebx,FWORD PTR [ebp+0x3110a744]
  409fa8:	imul   edi,ecx,0xc415ea5f
  409fae:	rcl    BYTE PTR [edi-0x1145fba3],1
  409fb4:	cmp    dh,bl
  409fb6:	in     eax,0xc8
  409fb8:	outs   dx,BYTE PTR ds:[esi]
  409fb9:	xor    BYTE PTR [eax],al
  409fbb:	mov    bh,ah
  409fbd:	mov    dl,0xee
  409fbf:	retf   
  409fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fc1:	or     dl,BYTE PTR [ebx+0x5b]
  409fc4:	dec    ecx
  409fc5:	dec    esi
  409fc6:	push   cs
  409fc7:	sub    al,0x57
  409fc9:	sbb    eax,0x6e4de928
  409fce:	mov    bl,0xf6
  409fd0:	add    dh,al
  409fd2:	adc    bl,BYTE PTR ds:0x3c1b84bd
  409fd8:	jno    0x40a031
  409fda:	cmp    al,ch
  409fdc:	sub    al,0xe5
  409fde:	push   esi
  409fdf:	push   ecx
  409fe0:	lahf   
  409fe1:	fcmovu st,st(5)
  409fe3:	call   0x82a6a44a
  409fe8:	rcl    DWORD PTR [eax+0x38],cl
  409feb:	retf   
  409fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fed:	and    bh,ch
  409fef:	adc    BYTE PTR [ebp+0x54],dl
  409ff2:	and    cl,dl
  409ff4:	or     esi,DWORD PTR [esi+0x77e1517f]
  409ffa:	loopne 0x409fd2
  409ffc:	test   BYTE PTR [ebp+esi*1-0x559be055],dh
  40a003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a004:	xor    DWORD PTR [esi+0x1b],esp
  40a007:	test   bh,cl
  40a009:	push   ds
  40a00a:	and    eax,0x338d39bb
  40a00f:	jmp    esp
  40a011:	aam    0x6a
  40a013:	sub    al,0xf3
  40a015:	mov    esi,0xcb3468ef
  40a01a:	(bad)  
  40a01b:	push   cs
  40a01c:	(bad)  
  40a01d:	mov    ds:0x1ec53839,al
  40a022:	mov    ch,0x2a
  40a024:	cmp    ecx,DWORD PTR [eax-0x60]
  40a027:	sbb    BYTE PTR [edi-0x133fc549],bh
  40a02d:	or     eax,DWORD PTR [ebp-0x48]
  40a030:	xor    ebx,0x8a22275b
  40a036:	lods   eax,DWORD PTR ds:[esi]
  40a037:	adc    eax,0xa1cc5c8d
  40a03c:	jle    0x40a064
  40a03e:	ins    DWORD PTR es:[edi],dx
  40a03f:	push   cs
  40a040:	les    eax,FWORD PTR [edx+0x39ce8c9f]
  40a046:	jno    0x40a0bb
  40a048:	outs   dx,BYTE PTR ds:[esi]
  40a049:	cli    
  40a04a:	call   0xb86837e1
  40a04f:	test   al,0xe4
  40a051:	out    0xa0,eax
  40a053:	shl    BYTE PTR [esi+edx*8-0x4d660de4],1
  40a05a:	pop    ss
  40a05b:	retf   0x5fa4
  40a05e:	push   esp
  40a05f:	loope  0x40a083
  40a061:	jecxz  0x40a088
  40a063:	adc    BYTE PTR [edx+0x7dfa6616],0x5a
  40a06a:	sar    BYTE PTR [eax-0x54879041],cl
  40a070:	jnp    0x40a082
  40a072:	into   
  40a073:	jl     0x40a04e
  40a075:	mov    esp,0x27d9ce5b
  40a07a:	lock stos DWORD PTR es:[edi],eax
  40a07c:	fld    st(4)
  40a07e:	leave  
  40a07f:	cdq    
  40a080:	or     BYTE PTR [ebp+0x33],dl
  40a083:	rcr    al,0x85
  40a086:	jge    0x40a052
  40a088:	icebp  
  40a089:	jne    0x40a0e8
  40a08b:	inc    esi
  40a08c:	jae    0x40a07d
  40a08e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a08f:	test   BYTE PTR [ecx],bl
  40a091:	lods   al,BYTE PTR ds:[esi]
  40a092:	pop    esp
  40a093:	loope  0x40a04c
  40a095:	ss out dx,al
  40a097:	cdq    
  40a098:	sbb    edx,DWORD PTR [edx+0x5f0cd123]
  40a09e:	or     bl,dl
  40a0a0:	or     BYTE PTR [edx+ebx*4],dh
  40a0a3:	mov    fs,WORD PTR [esi]
  40a0a5:	inc    esi
  40a0a6:	or     BYTE PTR [eax+0x3fcd4b7e],ch
  40a0ac:	scas   eax,DWORD PTR es:[edi]
  40a0ad:	adc    al,0xf9
  40a0af:	jno    0x40a117
  40a0b1:	jns    0x40a04d
  40a0b3:	pop    ss
  40a0b4:	(bad)  
  40a0b5:	stc    
  40a0b6:	mov    bl,0x68
  40a0b8:	mov    dh,ah
  40a0ba:	retf   0xd49b
  40a0bd:	xchg   esi,eax
  40a0be:	push   0xd86af1f3
  40a0c3:	cmp    ecx,DWORD PTR [edi]
  40a0c5:	ja     0x40a0b8
  40a0c7:	jl     0x40a11f
  40a0c9:	jns    0x40a105
  40a0cb:	xchg   DWORD PTR [eax],ecx
  40a0cd:	mov    edx,0xc50dffad
  40a0d2:	sbb    BYTE PTR [edx+0x53495941],al
  40a0d8:	mov    eax,0xf2da573c
  40a0dd:	popa   
  40a0de:	and    DWORD PTR [ebp+0x2f],0xfffffff5
  40a0e2:	mov    ecx,0xc6c976dd
  40a0e7:	or     DWORD PTR [ecx+0x4b7475aa],ebx
  40a0ed:	stc    
  40a0ee:	aaa    
  40a0ef:	je     0x40a131
  40a0f1:	scas   eax,DWORD PTR es:[edi]
  40a0f2:	jp     0x40a0a3
  40a0f4:	add    al,0xd6
  40a0f6:	popf   
  40a0f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0f8:	dec    esi
  40a0f9:	loop   0x40a141
  40a0fb:	out    dx,eax
  40a0fc:	add    BYTE PTR [edx],dl
  40a0fe:	fidivr DWORD PTR [esi-0x79]
  40a101:	adc    al,BYTE PTR [esi-0x37dd6240]
  40a107:	xchg   ebx,esi
  40a109:	inc    ebx
  40a10a:	pusha  
  40a10b:	mov    ds:0x5135d82f,al
  40a110:	push   ebp
  40a111:	inc    ebp
  40a112:	ror    BYTE PTR [ecx+ebp*8+0x72194281],cl
  40a119:	dec    ebp
  40a11a:	mov    WORD PTR [edi+0x68],?
  40a11d:	es jmp 0xbbac:0x11369dc5
  40a125:	dec    edi
  40a126:	push   eax
  40a127:	push   cs
  40a128:	loope  0x40a0f8
  40a12a:	movsx  ebp,WORD PTR [ebp-0x264dd090]
  40a131:	in     al,0xf1
  40a133:	mov    BYTE PTR [edi+0x5108b238],ah
  40a139:	cli    
  40a13a:	mov    BYTE PTR [edi-0x2bf355f],dl
  40a140:	jp     0x40a106
  40a142:	adc    bl,BYTE PTR [ecx]
  40a144:	cmc    
  40a145:	pushf  
  40a146:	loopne 0x40a13c
  40a148:	(bad)  
  40a149:	push   edi
  40a14a:	pushf  
  40a14b:	mov    esp,0x8f97bef2
  40a150:	inc    ecx
  40a151:	ja     0x40a151
  40a153:	push   ebx
  40a154:	sbb    eax,0xc2e12d54
  40a159:	inc    esi
  40a15a:	mov    ?,WORD PTR [edx-0x44]
  40a15d:	dec    ecx
  40a15e:	into   
  40a15f:	xor    DWORD PTR [edi-0x4a9f7f25],ebp
  40a165:	jbe    0x40a1da
  40a167:	lods   al,BYTE PTR ds:[esi]
  40a168:	mov    ebx,0x94bf3550
  40a16d:	mov    edi,0x763eb7c3
  40a172:	jecxz  0x40a141
  40a174:	inc    ecx
  40a175:	or     BYTE PTR [edx+ebp*1-0x2],0x58
  40a17a:	cmp    DWORD PTR [edi-0x50],ecx
  40a17d:	jb     0x40a1e6
  40a17f:	adc    bh,BYTE PTR [edx-0x35]
  40a182:	aad    0x12
  40a184:	inc    eax
  40a185:	lods   al,BYTE PTR ds:[esi]
  40a186:	daa    
  40a187:	xchg   esp,eax
  40a188:	mov    ebx,0xe5dfc8c1
  40a18d:	sahf   
  40a18e:	in     eax,0xb5
  40a190:	cwde   
  40a191:	pop    ebp
  40a192:	loopne 0x40a1fa
  40a194:	dec    ecx
  40a195:	or     cl,dl
  40a197:	jge    0x40a216
  40a199:	dec    ebx
  40a19a:	sbb    cl,bl
  40a19c:	sbb    DWORD PTR [ecx+edx*1+0x1918a429],edx
  40a1a3:	pushf  
  40a1a4:	mov    al,0xfd
  40a1a6:	ret    
  40a1a7:	jb     0x40a175
  40a1a9:	mov    ch,0xaa
  40a1ab:	sbb    ah,BYTE PTR [eax]
  40a1ad:	add    DWORD PTR [edx-0xa3a6e77],esi
  40a1b3:	dec    edi
  40a1b4:	out    dx,eax
  40a1b5:	lea    edx,ds:0x650d2e19
  40a1bb:	adc    al,0xfc
  40a1bd:	dec    esp
  40a1be:	jae    0x40a159
  40a1c0:	mov    dl,0xf3
  40a1c2:	sub    edi,edi
  40a1c4:	cmp    eax,0xe7959a73
  40a1c9:	pop    ecx
  40a1ca:	ss mov dh,0x23
  40a1cd:	and    eax,0x150bd9d2
  40a1d2:	jmp    0x40a18b
  40a1d4:	sub    esi,DWORD PTR [ecx+eax*2]
  40a1d7:	fdiv   st,st(3)
  40a1d9:	inc    ebp
  40a1da:	cdq    
  40a1db:	mov    al,BYTE PTR [eax-0x68e58607]
  40a1e1:	loop   0x40a1ec
  40a1e3:	lea    ecx,[esp+ebx*2+0xbad9c55]
  40a1ea:	push   edi
  40a1eb:	sub    edi,ebx
  40a1ed:	cmovne ebp,DWORD PTR [ebx]
  40a1f0:	jb     0x40a210
  40a1f2:	jge    0x40a1e4
  40a1f4:	ficom  DWORD PTR [ecx+0x497af6a0]
  40a1fa:	xor    eax,0xed6abae4
  40a1ff:	xchg   DWORD PTR [eax+ecx*8-0x2c],edi
  40a203:	aas    
  40a204:	dec    esi
  40a205:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a206:	xchg   edi,eax
  40a207:	call   0x5de5:0x3263c614
  40a20e:	cmp    BYTE PTR [esi+0x6c],0x2b
  40a212:	lock pop ss
  40a214:	das    
  40a215:	lahf   
  40a216:	rcl    BYTE PTR [ecx+0x74],1
  40a219:	xlat   BYTE PTR ds:[ebx]
  40a21a:	or     ebp,eax
  40a21c:	push   es
  40a21d:	cmp    eax,0xe9f65f61
  40a222:	dec    ecx
  40a223:	inc    edx
  40a224:	add    ecx,DWORD PTR [ecx+eiz*8]
  40a227:	jle    0x40a281
  40a229:	enter  0xde40,0x4f
  40a22d:	call   FWORD PTR [ebx]
  40a22f:	outs   dx,BYTE PTR ds:[esi]
  40a230:	mov    esp,0xc4244a3b
  40a235:	cli    
  40a236:	(bad)  
  40a237:	clc    
  40a238:	(bad)  
  40a239:	mov    edx,0xc8823c21
  40a23e:	div    BYTE PTR [ebp+edx*8+0x7ea5ac3d]
  40a245:	rcl    DWORD PTR [eax+0x53],cl
  40a248:	out    0xc1,al
  40a24a:	(bad)  
  40a24b:	push   ecx
  40a24c:	test   DWORD PTR [eax],0x6ed5011f
  40a252:	inc    ecx
  40a253:	mov    cl,0x44
  40a255:	pushf  
  40a256:	mov    esi,DWORD PTR [eax]
  40a258:	cmp    al,BYTE PTR [esi+0x4a]
  40a25b:	jmp    0x4149bbf3
  40a260:	mov    ecx,0xd89c19c0
  40a265:	adc    DWORD PTR [esi+0x64],eax
  40a268:	out    dx,eax
  40a269:	cmp    DWORD PTR [ebx-0x76c09014],edx
  40a26f:	mov    ebx,0xb26f0f53
  40a274:	dec    edi
  40a275:	sahf   
  40a276:	mov    ah,0x55
  40a278:	xchg   edx,eax
  40a279:	dec    esi
  40a27a:	xor    eax,0xe7f9f7af
  40a27f:	adc    cl,bl
  40a281:	loope  0x40a301
  40a283:	inc    ebx
  40a284:	in     al,0x9c
  40a286:	lea    edi,[ecx]
  40a288:	pop    eax
  40a289:	cli    
  40a28a:	shr    bh,cl
  40a28c:	cdq    
  40a28d:	adc    BYTE PTR [ecx],al
  40a28f:	jbe    0x40a307
  40a291:	sub    ebx,DWORD PTR [edx-0x9]
  40a294:	icebp  
  40a295:	mov    ebp,0xe33be62f
  40a29a:	jbe    0x40a27e
  40a29c:	xchg   BYTE PTR [eax+0x7e],ah
  40a29f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2a0:	sahf   
  40a2a1:	mov    ebp,0x6280647b
  40a2a6:	mov    ebx,0xcf78349d
  40a2ab:	loopne 0x40a2d8
  40a2ad:	jae    0x40a327
  40a2af:	test   BYTE PTR [edi],dh
  40a2b1:	mov    eax,0xe8da56ab
  40a2b6:	xchg   BYTE PTR [edx+0x6afa024c],ch
  40a2bc:	pop    ecx
  40a2bd:	std    
  40a2be:	and    ah,dl
  40a2c0:	enter  0x220,0x48
  40a2c4:	ins    BYTE PTR es:[edi],dx
  40a2c5:	lods   al,BYTE PTR ds:[esi]
  40a2c6:	aaa    
  40a2c7:	jb     0x40a26a
  40a2c9:	add    eax,0xfc9f67f6
  40a2ce:	jp     0x40a29c
  40a2d0:	out    dx,al
  40a2d1:	lahf   
  40a2d2:	push   ebp
  40a2d3:	mov    esp,0xca5ea642
  40a2d8:	or     eax,0x4d85053e
  40a2dd:	les    esi,FWORD PTR [edi-0x29840add]
  40a2e3:	fidiv  DWORD PTR [ebx]
  40a2e5:	mov    dh,0xe6
  40a2e7:	dec    esp
  40a2e8:	or     esi,DWORD PTR [edx+0x58]
  40a2eb:	outs   dx,BYTE PTR ds:[esi]
  40a2ec:	jno    0x40a369
  40a2ee:	rol    DWORD PTR [eax-0x5bdb5797],0xd9
  40a2f5:	add    eax,0xc546090c
  40a2fa:	and    al,0xf
  40a2fc:	retf   0x3893
  40a2ff:	sti    
  40a300:	jle    0x40a377
  40a302:	jno    0x40a2df
  40a304:	(bad)  
  40a305:	outs   dx,DWORD PTR ds:[esi]
  40a306:	test   BYTE PTR [esi+0x4f501aaf],cl
  40a30c:	popf   
  40a30d:	fisttp QWORD PTR [ebx+0x5aceb6a7]
  40a313:	(bad)  
  40a314:	sbb    eax,0xdb54c2e0
  40a319:	sub    DWORD PTR [eax+ecx*4+0x6d3a5773],0xf7be086c
  40a324:	arpl   WORD PTR [edi+0x5f93222b],cx
  40a32a:	jmp    0xd09a31f
  40a32f:	dec    ebx
  40a330:	pop    ecx
  40a331:	(bad)  
  40a332:	mov    eax,ds:0x3e3cddbc
  40a337:	push   cs
  40a338:	sub    dl,BYTE PTR [edi+0x364078c8]
  40a33e:	sbb    BYTE PTR [ebx+0x226b8777],cl
  40a344:	out    0x59,al
  40a346:	xor    DWORD PTR [ebp-0x5c66ae47],edi
  40a34c:	jno    0x40a3cb
  40a34e:	xor    edi,DWORD PTR [edx]
  40a350:	jae    0x40a32a
  40a352:	jmp    0x40a2f3
  40a354:	mov    eax,ds:0x46b42b3e
  40a359:	test   BYTE PTR [eax+0x31],bl
  40a35c:	sar    DWORD PTR [eax+ebp*4],1
  40a35f:	xor    al,0x8d
  40a361:	shl    BYTE PTR [ebx-0x42],0xb6
  40a365:	xor    bh,BYTE PTR fs:[edx+0x69]
  40a369:	xchg   ebx,eax
  40a36a:	mov    eax,ds:0x8409f9ff
  40a36f:	jnp    0x40a3b2
  40a371:	and    al,0xb9
  40a373:	data16 sbb ah,ch
  40a376:	or     ah,BYTE PTR [ecx-0x43d97cd3]
  40a37c:	cmp    bl,dh
  40a37e:	push   DWORD PTR [eax+0x3856ef87]
  40a384:	pusha  
  40a385:	pop    ds
  40a386:	ins    BYTE PTR es:[edi],dx
  40a387:	shl    DWORD PTR [esi-0x3],1
  40a38a:	inc    ebx
  40a38b:	test   BYTE PTR [ebx-0x205adcf7],al
  40a391:	cwde   
  40a392:	or     dl,BYTE PTR [eax]
  40a394:	sti    
  40a395:	pop    esi
  40a396:	jb     0x40a351
  40a398:	fdiv   DWORD PTR [ebp+0x7b]
  40a39b:	push   cs
  40a39c:	(bad)  
  40a39f:	adc    BYTE PTR [ecx+0x54d2c2b],cl
  40a3a5:	bound  edx,QWORD PTR [edx]
  40a3a7:	(bad)  
  40a3a9:	cmp    eax,0x4cdf4ab9
  40a3ae:	rcr    BYTE PTR [edi-0x19],1
  40a3b1:	jae    0x40a356
  40a3b3:	sti    
  40a3b4:	(bad)  
  40a3b5:	and    ch,dl
  40a3b7:	imul   esp,DWORD PTR [ebx],0x79
  40a3ba:	aaa    
  40a3bb:	pop    esi
  40a3bc:	into   
  40a3bd:	retf   
  40a3be:	add    edi,DWORD PTR [ebx]
  40a3c0:	ss add eax,0x8ef17e33
  40a3c6:	and    ch,BYTE PTR [edx+0x1ad3bb8e]
  40a3cc:	pusha  
  40a3cd:	int    0x46
  40a3cf:	(bad)  
  40a3d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3d1:	call   0xf7f9:0xcefc513e
  40a3d8:	inc    esi
  40a3d9:	lods   al,BYTE PTR ds:[esi]
  40a3da:	nop
  40a3db:	dec    ebp
  40a3dc:	ja     0x40a360
  40a3de:	xchg   ebx,eax
  40a3df:	shl    DWORD PTR [edx+0x18],0xe6
  40a3e3:	inc    edx
  40a3e4:	jnp    0x40a3a0
  40a3e6:	sub    al,0x4d
  40a3e8:	sbb    DWORD PTR [edx],ebp
  40a3ea:	iret   
  40a3eb:	mov    esi,0x624341e3
  40a3f0:	repz rol BYTE PTR [ebx+ecx*2],1
  40a3f4:	jnp    0x40a376
  40a3f6:	cmp    cl,bl
  40a3f8:	mov    ds:0x48908261,eax
  40a3fd:	stos   DWORD PTR es:[edi],eax
  40a3fe:	adc    bl,bl
  40a400:	cmc    
  40a401:	aaa    
  40a402:	std    
  40a403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a404:	sub    bl,BYTE PTR [esi]
  40a406:	dec    eax
  40a407:	sbb    DWORD PTR [ecx],0x2e
  40a40a:	inc    esi
  40a40b:	add    eax,DWORD PTR cs:[ebx]
  40a40e:	mov    edx,0x379811b
  40a413:	ror    BYTE PTR [edx-0x55],0x6e
  40a417:	and    BYTE PTR [ebx],dl
  40a419:	adc    eax,DWORD PTR [esi+0x48cface0]
  40a41f:	pusha  
  40a420:	jmp    0xca71c258
  40a425:	add    BYTE PTR [edx],0x4a
  40a428:	push   cs
  40a429:	fsubr  QWORD PTR [ebp+esi*1+0x16]
  40a42d:	jp     0x40a458
  40a42f:	xor    eax,esi
  40a431:	mov    ebp,ecx
  40a433:	out    dx,eax
  40a434:	(bad)  
  40a435:	stos   DWORD PTR es:[edi],eax
  40a436:	pushf  
  40a437:	mov    dh,0xd5
  40a439:	loope  0x40a3c6
  40a43b:	je     0x40a457
  40a43d:	fsub   QWORD PTR [ecx+0x47]
  40a440:	mov    al,ds:0x2159ac64
  40a445:	stos   BYTE PTR es:[edi],al
  40a446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a447:	lahf   
  40a448:	mov    ch,0x19
  40a44a:	xlat   BYTE PTR ds:[ebx]
  40a44b:	or     ebx,DWORD PTR [ecx+0xe]
  40a44e:	pusha  
  40a44f:	mov    al,ds:0x1aaa6d82
  40a454:	dec    eax
  40a455:	pop    esp
  40a456:	pushf  
  40a457:	add    al,BYTE PTR [eax]
  40a459:	xchg   DWORD PTR [edi],edi
  40a45b:	add    al,0x76
  40a45d:	dec    ebp
  40a45e:	scas   eax,DWORD PTR es:[edi]
  40a45f:	xor    ebx,DWORD PTR [ebp+edi*4-0x29]
  40a463:	sub    esp,eax
  40a465:	push   edi
  40a466:	stos   DWORD PTR es:[edi],eax
  40a467:	shl    DWORD PTR [edx-0x6f],0x86
  40a46b:	push   0xffffffbe
  40a46d:	cmp    eax,0x83ee6692
  40a472:	dec    edx
  40a473:	mov    ebp,0x3c8d17fe
  40a478:	(bad)  
  40a479:	jmp    0xb871:0x3954095c
  40a480:	sbb    al,0x45
  40a482:	push   0xa8b5451a
  40a487:	jle    0x40a4a7
  40a489:	cmp    esi,ebx
  40a48b:	repnz push 0xffffff9f
  40a48e:	jp     0x40a448
  40a490:	(bad)  
  40a492:	cmp    al,0xce
  40a494:	pop    edx
  40a495:	cmp    al,0xe7
  40a497:	cld    
  40a498:	push   edi
  40a499:	and    DWORD PTR [ecx+eiz*2+0x58],esp
  40a49d:	mov    BYTE PTR [edx],cl
  40a49f:	mov    ah,0x51
  40a4a1:	call   DWORD PTR [eax]
  40a4a3:	fdivr  DWORD PTR [edx]
  40a4a5:	lea    ebx,[edx+0x1b]
  40a4a8:	jmp    0x40a50f
  40a4aa:	ret    
  40a4ab:	mov    bl,0x6e
  40a4ad:	xchg   ecx,eax
  40a4ae:	or     al,0x4e
  40a4b0:	xchg   ebx,eax
  40a4b1:	jp     0x40a48f
  40a4b3:	jmp    0x88015a1c
  40a4b8:	sbb    DWORD PTR [ebx-0x43],eax
  40a4bb:	adc    eax,0x955b36e8
  40a4c0:	or     ch,BYTE PTR [ebp+0x4a]
  40a4c3:	in     al,dx
  40a4c4:	jmp    0x713d:0xf3b56e50
  40a4cb:	cmp    DWORD PTR [ebp+0x5e2e388c],eax
  40a4d1:	mov    ebp,0x92ff8a9c
  40a4d6:	xor    eax,0xffffffad
  40a4d9:	fadd   QWORD PTR [edi]
  40a4db:	scas   eax,DWORD PTR es:[edi]
  40a4dc:	int    0x22
  40a4de:	(bad)  
  40a4df:	jne    0x40a499
  40a4e1:	xchg   BYTE PTR [edx-0x17],bl
  40a4e4:	(bad)  
  40a4e5:	jle    0x40a527
  40a4e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4e8:	in     al,0x3c
  40a4ea:	push   0x6d
  40a4ec:	cmc    
  40a4ed:	(bad)  
  40a4ee:	pop    es
  40a4ef:	shl    ebx,cl
  40a4f1:	iret   
  40a4f2:	mov    bh,0x58
  40a4f4:	xchg   ebx,eax
  40a4f5:	mov    esp,0xdbded7d8
  40a4fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4fb:	push   ebx
  40a4fc:	imul   BYTE PTR [eax-0x30]
  40a4ff:	pop    ds
  40a500:	fsubrp st(5),st
  40a502:	mov    ch,0x8
  40a504:	jle    0x40a4f5
  40a506:	jecxz  0x40a4f9
  40a508:	out    0x49,eax
  40a50a:	cmc    
  40a50b:	out    dx,eax
  40a50c:	push   cs
  40a50d:	dec    ebp
  40a50e:	mov    dl,0x1a
  40a510:	fist   DWORD PTR [edx-0xe]
  40a513:	inc    edx
  40a514:	stos   BYTE PTR es:[edi],al
  40a515:	in     eax,0xf0
  40a517:	ds xor ebx,0x39
  40a51b:	outs   dx,DWORD PTR ds:[esi]
  40a51c:	sub    dl,BYTE PTR ds:0x3c3ada69
  40a522:	inc    edx
  40a523:	clc    
  40a524:	lods   eax,DWORD PTR ds:[esi]
  40a525:	out    0x5b,eax
  40a527:	inc    eax
  40a528:	dec    edx
  40a529:	jle    0x40a4b9
  40a52b:	jl     0x40a55f
  40a52d:	lods   al,BYTE PTR ds:[esi]
  40a52e:	(bad)  [ebp+0x74a5e6a9]
  40a534:	mov    ds:0x6527ecd8,al
  40a539:	loope  0x40a560
  40a53b:	mov    al,ds:0xb85be606
  40a540:	ret    
  40a541:	cmp    cl,BYTE PTR [esi-0x14e6b4f5]
  40a547:	aam    0x21
  40a549:	xlat   BYTE PTR ds:[bx]
  40a54b:	retf   0x4938
  40a54e:	sahf   
  40a54f:	clc    
  40a550:	xchg   BYTE PTR [ebp-0x7541cecb],al
  40a556:	sub    DWORD PTR [ebp+0x39],edx
  40a559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a55a:	outs   dx,DWORD PTR ds:[esi]
  40a55b:	sub    al,BYTE PTR [ecx]
  40a55d:	out    0x6e,al
  40a55f:	adc    al,0xca
  40a561:	add    eax,0x51f6f639
  40a566:	scas   eax,DWORD PTR es:[edi]
  40a567:	cwde   
  40a568:	and    eax,0x4f22e990
  40a56d:	mov    ebp,0x221b5f85
  40a572:	arpl   WORD PTR [ebx+0x42],bx
  40a575:	pop    edx
  40a576:	xor    eax,0xc2b012fe
  40a57b:	inc    ecx
  40a57c:	dec    edx
  40a57d:	mov    al,0xe
  40a57f:	fbld   TBYTE PTR [ecx+0x78dded49]
  40a585:	test   eax,0x76c579c5
  40a58a:	pusha  
  40a58b:	adc    BYTE PTR [edi+0x59fa62c0],ah
  40a591:	jecxz  0x40a5be
  40a593:	imul   ebx,eax,0x351ce65f
  40a599:	and    eax,DWORD PTR [edi]
  40a59b:	sbb    DWORD PTR [edi],esi
  40a59d:	xchg   BYTE PTR [edx+0x34],ah
  40a5a0:	push   0x50
  40a5a2:	pop    esp
  40a5a3:	xor    edx,DWORD PTR [esi]
  40a5a5:	repz retf 0x571c
  40a5a9:	inc    eax
  40a5aa:	imul   ebx,DWORD PTR [ebx],0xffffffd6
  40a5ad:	xor    eax,0x1e01c143
  40a5b2:	dec    esi
  40a5b3:	fiadd  WORD PTR [ecx-0x65]
  40a5b6:	mov    ch,0xd0
  40a5b8:	pop    ebx
  40a5b9:	mov    al,0xf2
  40a5bb:	out    0x53,al
  40a5bd:	loope  0x40a543
  40a5bf:	sbb    al,0xa8
  40a5c1:	out    dx,eax
  40a5c2:	in     al,0xe5
  40a5c4:	imul   edx,DWORD PTR [edx],0x26
  40a5c7:	pop    eax
  40a5c8:	mov    DWORD PTR [ebx],ecx
  40a5ca:	test   BYTE PTR [eax],0xa2
  40a5cd:	mov    esp,ebp
  40a5cf:	into   
  40a5d0:	aas    
  40a5d1:	xchg   ecx,eax
  40a5d2:	cmp    ah,ah
  40a5d4:	ret    0x4bac
  40a5d7:	mov    ebx,0xd3feb766
  40a5dc:	inc    edi
  40a5dd:	imul   esp,DWORD PTR [eax-0x7],0xb53fcdf1
  40a5e4:	inc    ebx
  40a5e5:	fstp   QWORD PTR [edi-0x5a]
  40a5e8:	xchg   edx,eax
  40a5e9:	int3   
  40a5ea:	inc    ebx
  40a5eb:	jns    0x40a5c0
  40a5ed:	fsubr  DWORD PTR [ebx]
  40a5ef:	(bad)  
  40a5f0:	mov    dh,0x2a
  40a5f2:	mov    al,0x2c
  40a5f4:	mov    ecx,0xc34cce0
  40a5f9:	sub    dl,BYTE PTR [ecx+0x49f3c5a2]
  40a5ff:	sbb    DWORD PTR [edx+eax*4-0xb36544c],eax
  40a606:	push   cs
  40a607:	pop    eax
  40a608:	dec    ecx
  40a609:	push   ds
  40a60a:	pusha  
  40a60b:	rcr    DWORD PTR gs:[edi-0x48f2bc08],1
  40a612:	xchg   ebp,eax
  40a613:	mov    DWORD PTR [ebp+0x35],ebx
  40a616:	push   eax
  40a617:	jae    0x40a5df
  40a619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a61a:	cmp    eax,0x84d25626
  40a61f:	push   esi
  40a620:	repz ja 0x40a5f2
  40a623:	sub    al,0x6
  40a625:	pop    ebp
  40a626:	xchg   DWORD PTR [ecx+ebx*2-0x59],esi
  40a62a:	imul   BYTE PTR [eax-0x53bff754]
  40a630:	inc    esp
  40a631:	ins    DWORD PTR es:[edi],dx
  40a632:	jle    0x40a5b4
  40a634:	shr    BYTE PTR [ebx+0x38],1
  40a637:	aam    0x2f
  40a639:	sahf   
  40a63a:	daa    
  40a63b:	fs in  eax,dx
  40a63d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a63e:	in     al,0xdc
  40a640:	in     al,dx
  40a641:	into   
  40a642:	repz dec esi
  40a644:	xchg   edx,eax
  40a645:	aad    0x88
  40a647:	and    BYTE PTR [eax],0x8f
  40a64a:	lods   eax,DWORD PTR ds:[esi]
  40a64b:	or     eax,0xaec8ae80
  40a650:	xchg   esi,eax
  40a651:	cmp    ebx,DWORD PTR [esi+0x39252d08]
  40a657:	xchg   edi,eax
  40a658:	xchg   DWORD PTR [esi-0x18660517],edi
  40a65e:	adc    BYTE PTR [edx-0x39bfaad2],bl
  40a664:	nop
  40a665:	add    eax,0x504a10f
  40a66a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a66b:	std    
  40a66c:	loop   0x40a64d
  40a66e:	(bad)  
  40a66f:	sbb    ecx,esi
  40a671:	in     al,0x15
  40a673:	mov    al,0x17
  40a675:	sbb    esi,DWORD PTR [eax-0x63]
  40a678:	adc    DWORD PTR [esi],0x27fe4486
  40a67e:	aaa    
  40a67f:	test   cl,dl
  40a681:	aaa    
  40a682:	jno    0xd28903ec
  40a688:	(bad)  
  40a689:	cmp    edi,DWORD PTR [edi+0x0]
  40a68c:	pop    ecx
  40a68d:	pop    es
  40a68e:	push   edx
  40a68f:	setae  BYTE PTR [edx]
  40a692:	add    al,0xf3
  40a694:	stos   DWORD PTR es:[edi],eax
  40a695:	push   esi
  40a696:	hlt    
  40a697:	out    dx,al
  40a698:	ins    DWORD PTR es:[edi],dx
  40a699:	fwait
  40a69a:	xor    al,0xf0
  40a69c:	jg     0x40a6a9
  40a69e:	jl     0x40a665
  40a6a0:	bound  ebp,QWORD PTR [esi-0x22e69fee]
  40a6a6:	and    ch,0x6d
  40a6a9:	mov    cl,0x7f
  40a6ac:	ja     0x40a63e
  40a6ae:	stos   BYTE PTR es:[edi],al
  40a6af:	(bad)  [edx+0x2e36142a]
  40a6b5:	hlt    
  40a6b6:	cmp    eax,0xace71c88
  40a6bb:	stc    
  40a6bc:	push   esi
  40a6bd:	(bad)  
  40a6be:	in     al,0xb7
  40a6c0:	arpl   WORD PTR [edi-0x74],sp
  40a6c3:	sub    cl,cl
  40a6c5:	out    dx,al
  40a6c6:	xchg   ecx,eax
  40a6c7:	repnz out dx,al
  40a6c9:	cdq    
  40a6ca:	push   esp
  40a6cb:	or     al,0xae
  40a6cd:	prefetcht1 BYTE PTR [ecx+0x468a5f7]
  40a6d4:	pop    ebx
  40a6d5:	in     eax,dx
  40a6d6:	std    
  40a6d7:	mov    eax,0xd4024709
  40a6dc:	clc    
  40a6dd:	sbb    al,0x5
  40a6df:	xchg   esi,eax
  40a6e0:	fiadd  DWORD PTR [ecx+0x3c]
  40a6e3:	xor    al,BYTE PTR ds:0x4659b741
  40a6e9:	aaa    
  40a6ea:	jne    0x40a753
  40a6ec:	xchg   edx,eax
  40a6ed:	and    cl,BYTE PTR [eax]
  40a6ef:	sub    eax,0x2e43f6d7
  40a6f4:	sub    DWORD PTR [ecx+0x5d],ecx
  40a6f7:	sub    BYTE PTR [ecx],ch
  40a6f9:	das    
  40a6fa:	mov    ebx,0xa04bdda2
  40a6ff:	push   ds
  40a700:	mov    esi,DWORD PTR [ebx]
  40a702:	add    eax,0x9e016639
  40a707:	inc    eax
  40a708:	sahf   
  40a709:	xor    BYTE PTR [ecx+0x2a],cl
  40a70c:	xchg   esi,eax
  40a70d:	test   DWORD PTR [ebx-0x49],eax
  40a710:	sbb    DWORD PTR ds:0x521486c9,0xffffff87
  40a717:	dec    eax
  40a718:	and    DWORD PTR [ecx],0xa4343325
  40a71e:	mov    ebx,0x19e0e00d
  40a723:	stos   DWORD PTR es:[edi],eax
  40a724:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a725:	dec    edx
  40a726:	dec    eax
  40a727:	in     al,dx
  40a728:	leave  
  40a729:	aaa    
  40a72a:	or     eax,DWORD PTR [ebp+0x52]
  40a72d:	add    eax,0xfa3e44f4
  40a732:	int3   
  40a733:	adc    esi,DWORD PTR [eax]
  40a735:	xchg   esp,eax
  40a736:	ja     0x40a79c
  40a738:	lahf   
  40a739:	xchg   DWORD PTR [esi-0x76],ebx
  40a73c:	test   DWORD PTR [edi+0x6b7d8d2b],ecx
  40a742:	in     al,dx
  40a743:	shl    BYTE PTR [esp+ebp*8+0x23172633],0x67
  40a74b:	add    DWORD PTR ds:0xb6f7646b,ecx
  40a751:	sub    DWORD PTR [edx-0x7d103e8b],esp
  40a757:	xor    ah,BYTE PTR [edx+0x66]
  40a75a:	adc    al,0xaa
  40a75c:	jg     0x40a771
  40a75e:	pop    ds
  40a75f:	in     eax,dx
  40a760:	push   0xef9f4a92
  40a765:	leave  
  40a766:	loop   0x40a73e
  40a768:	dec    edi
  40a769:	xchg   ebp,eax
  40a76a:	xor    al,0x50
  40a76c:	lock addr16 sub ebp,ebp
  40a770:	fisubr DWORD PTR [edi+0x1c]
  40a773:	pop    eax
  40a774:	aam    0x47
  40a776:	(bad)
  40a77a:	jo     0x40a7ee
  40a77c:	cs pop ss
  40a77e:	sub    eax,DWORD PTR [ecx-0x63]
  40a781:	in     eax,0xf7
  40a783:	inc    edx
  40a784:	cld    
  40a785:	stos   BYTE PTR es:[edi],al
  40a786:	xor    BYTE PTR [ecx+0x78],0x83
  40a78a:	mov    ds:0xcbd4508a,eax
  40a78f:	jb     0x40a80b
  40a791:	imul   esi,DWORD PTR [eax-0x10aebafc],0x17
  40a798:	sbb    eax,0xfb7c86cc
  40a79d:	call   0xf864:0x42979e73
  40a7a4:	jg     0x40a789
  40a7a6:	pop    ebp
  40a7a7:	push   ecx
  40a7a8:	inc    edi
  40a7a9:	inc    ebp
  40a7aa:	sub    eax,0xa5c2f469
  40a7af:	mov    ebx,0x5c6ab83a
  40a7b4:	cmp    esp,eax
  40a7b6:	sub    al,0x47
  40a7b8:	jno    0x40a7d9
  40a7ba:	add    bl,BYTE PTR [ebp+ecx*4+0x21]
  40a7be:	mov    ebp,0x1f265c2
  40a7c3:	rol    ecx,0x82
  40a7c6:	out    0x1d,eax
  40a7c8:	retf   
  40a7c9:	push   eax
  40a7ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7cb:	into   
  40a7cc:	stos   DWORD PTR es:[edi],eax
  40a7cd:	ror    DWORD PTR [eax],0x27
  40a7d0:	push   cs
  40a7d1:	inc    edi
  40a7d2:	mov    esp,0x468b7861
  40a7d7:	call   0xc06d1377
  40a7dc:	mov    ebp,DWORD PTR ds:0x93bcb45a
  40a7e2:	inc    edx
  40a7e3:	daa    
  40a7e4:	dec    ebx
  40a7e5:	in     eax,0x42
  40a7e7:	sbb    ecx,edx
  40a7e9:	(bad)  
  40a7ea:	adc    DWORD PTR ds:0x72005356,ebp
  40a7f0:	pushf  
  40a7f1:	ss mov ebx,0xd5a5415b
  40a7f7:	dec    ecx
  40a7f8:	(bad)  
  40a7fa:	shl    ch,1
  40a7fc:	addr16 mov bh,0x29
  40a7ff:	pop    esp
  40a800:	push   ss
  40a801:	call   0x1b55323f
  40a806:	pop    esp
  40a807:	or     edi,edi
  40a809:	dec    ebp
  40a80a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a80b:	(bad)  
  40a80c:	add    al,BYTE PTR [ebx+0x75]
  40a80f:	loope  0x40a811
  40a811:	fmul   QWORD PTR ds:0x28aede27
  40a817:	mov    bl,0x89
  40a819:	mov    ds:0x5bf4e86e,al
  40a81e:	aam    0x33
  40a820:	dec    edx
  40a821:	aad    0xec
  40a823:	mov    WORD PTR [ebx-0x1e],gs
  40a826:	or     cl,BYTE PTR [ecx+eiz*4-0x5497d6eb]
  40a82d:	shl    DWORD PTR [ecx+0x43],1
  40a830:	les    ebx,FWORD PTR [edx]
  40a832:	mov    dl,0xab
  40a834:	cmp    al,dh
  40a836:	add    esp,0x9bfaadc4
  40a83c:	data16 int 0x35
  40a83f:	jno    0x40a872
  40a841:	fldcw  WORD PTR [eax+0x59]
  40a844:	push   eax
  40a845:	sbb    DWORD PTR [eax],eax
  40a847:	jp     0x40a8a8
  40a849:	fcomp  QWORD PTR [esi-0x610a39d1]
  40a84f:	test   eax,0xf5e4e0db
  40a854:	mov    ss,WORD PTR [ebp-0x15]
  40a857:	sbb    edx,DWORD PTR [eax+0x250ff067]
  40a85d:	add    bh,BYTE PTR [ebx-0x77]
  40a860:	pop    ss
  40a861:	sub    dl,cl
  40a863:	pop    edx
  40a864:	sub    al,0xe7
  40a866:	addr16 jge 0x40a8bf
  40a869:	push   esi
  40a86a:	cmp    esp,DWORD PTR [edi+0x16569168]
  40a870:	icebp  
  40a871:	shufps xmm0,XMMWORD PTR [edx+eax*2-0x4b71ad6e],0xf9
  40a87a:	sub    edi,DWORD PTR [ebp-0x2ebb6287]
  40a880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a881:	outs   dx,DWORD PTR ds:[esi]
  40a882:	inc    esi
  40a883:	xchg   esi,eax
  40a884:	mul    BYTE PTR [eax]
  40a886:	xchg   al,ch
  40a888:	test   BYTE PTR [di-0x58],bh
  40a88c:	xor    DWORD PTR [edx+ebp*2],0x48
  40a890:	and    edi,ecx
  40a892:	mov    es,ebp
  40a894:	dec    esi
  40a895:	xchg   DWORD PTR [edx-0x75828d24],eax
  40a89b:	dec    ebp
  40a89c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a89d:	jmp    0x40a8f8
  40a89f:	dec    ebp
  40a8a0:	repz sub esp,DWORD PTR [esi]
  40a8a3:	xor    BYTE PTR [edx+0x2b4f782],cl
  40a8a9:	lahf   
  40a8aa:	adc    ch,BYTE PTR ds:0xbea39f37
  40a8b0:	add    dh,BYTE PTR [esi+esi*4-0x12a473db]
  40a8b7:	mov    al,ds:0x9b9abe57
  40a8bc:	outs   dx,DWORD PTR ds:[esi]
  40a8bd:	push   0x9299866f
  40a8c2:	in     eax,dx
  40a8c3:	xor    DWORD PTR [eax+0x7fdb058a],edi
  40a8c9:	pushf  
  40a8ca:	xor    DWORD PTR [edx],esi
  40a8cc:	fistp  WORD PTR [ebx+ecx*1+0x4]
  40a8d0:	jle    0x40a90b
  40a8d2:	and    DWORD PTR [eax+0x14fdebb7],ebp
  40a8d8:	push   es
  40a8d9:	pop    edx
  40a8da:	mov    ch,BYTE PTR [eax-0x9631e7f]
  40a8e0:	or     eax,0xfe96579a
  40a8e5:	lahf   
  40a8e6:	and    ah,BYTE PTR [esi+0x28]
  40a8e9:	pop    ss
  40a8ea:	scas   eax,DWORD PTR es:[edi]
  40a8eb:	push   eax
  40a8ec:	and    al,0xa
  40a8ee:	cmp    ebp,DWORD PTR [ebx]
  40a8f0:	xchg   ecx,eax
  40a8f1:	dec    edi
  40a8f2:	sub    eax,0x393d91fc
  40a8f7:	adc    al,0xae
  40a8f9:	add    BYTE PTR [ebx+ebp*2],ch
  40a8fc:	ins    DWORD PTR es:[edi],dx
  40a8fd:	dec    edx
  40a8fe:	mov    edx,0x7a5fecaa
  40a903:	repz cmc 
  40a905:	(bad)  [ecx-0x2d]
  40a908:	and    eax,0xe4bc50fd
  40a90d:	add    dl,bh
  40a90f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a910:	xlat   BYTE PTR ds:[ebx]
  40a911:	mov    ds:0x1617b915,eax
  40a916:	and    edx,DWORD PTR [edx-0x5f71471b]
  40a91c:	sbb    al,0x5d
  40a91e:	push   es
  40a91f:	adc    eax,0x3d6de114
  40a924:	mov    ds:0x605f596d,eax
  40a929:	test   eax,0x56779460
  40a92e:	inc    ebx
  40a92f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a930:	hlt    
  40a931:	daa    
  40a932:	and    ch,BYTE PTR [ebp+ecx*1+0x339deb1f]
  40a939:	mov    ah,0x8d
  40a93b:	mov    DWORD PTR [eax+eiz*2-0x3f],eax
  40a93f:	xor    edx,DWORD PTR [ecx+0x2db433b5]
  40a945:	leave  
  40a946:	xor    eax,0xe1c56829
  40a94b:	push   cs
  40a94c:	rol    dl,cl
  40a94e:	cmp    eax,0x31f6961a
  40a953:	sub    ah,BYTE PTR ds:0x1c85e609
  40a959:	add    eax,0x22ac1620
  40a95e:	mov    esi,0xece87318
  40a963:	xchg   edx,eax
  40a964:	sbb    DWORD PTR ss:0x79d8899e,ecx
  40a96b:	xor    DWORD PTR ds:0xd9d9a531,0x2f
  40a972:	pop    ds
  40a973:	aam    0x4f
  40a975:	xchg   edi,eax
  40a976:	(bad)  
  40a978:	xchg   edi,eax
  40a979:	sub    ebp,ecx
  40a97b:	lock jg 0x40a9ad
  40a97e:	mov    bh,0x4f
  40a980:	mov    DWORD PTR [ebp+0x2a],eax
  40a983:	nop
  40a984:	outs   dx,BYTE PTR ds:[esi]
  40a985:	or     ecx,DWORD PTR [edi]
  40a987:	mov    es,WORD PTR [eax]
  40a989:	jno    0x40a911
  40a98b:	arpl   WORD PTR ds:0xc227b8ec,dx
  40a991:	out    dx,eax
  40a992:	stc    
  40a993:	add    al,0x32
  40a995:	sbb    eax,ebp
  40a997:	imul   esi,DWORD PTR [eax-0x12],0xffffffb2
  40a99b:	pop    ebp
  40a99c:	lock shl BYTE PTR [ebx+0x367e1c16],0x72
  40a9a4:	test   DWORD PTR [ebx+ebx*4+0x37251da3],edx
  40a9ab:	pop    ss
  40a9ac:	out    dx,eax
  40a9ad:	retf   0xa89e
  40a9b0:	push   ds
  40a9b1:	jp     0x40a952
  40a9b3:	mov    ah,0xbd
  40a9b5:	aaa    
  40a9b6:	lahf   
  40a9b7:	daa    
  40a9b8:	or     DWORD PTR [edx-0x6ade2f63],edx
  40a9be:	cld    
  40a9bf:	mov    ecx,0x531b9987
  40a9c4:	push   edx
  40a9c5:	test   eax,0xae0c090d
  40a9ca:	loop   0x40aa27
  40a9cc:	mov    edi,DWORD PTR [edi-0x21084470]
  40a9d2:	mov    bh,0x7
  40a9d4:	loope  0x40aa29
  40a9d6:	(bad)  
  40a9d7:	test   al,0x14
  40a9d9:	pop    edx
  40a9da:	push   ebp
  40a9db:	pop    ebp
  40a9dc:	pusha  
  40a9dd:	mov    edx,0xe5a5bdd4
  40a9e2:	inc    ebx
  40a9e3:	cmp    dh,BYTE PTR [edx]
  40a9e5:	adc    esi,ecx
  40a9e7:	ins    DWORD PTR es:[edi],dx
  40a9e8:	jb     0x40aa38
  40a9ea:	fisttp DWORD PTR [ecx+0x47]
  40a9ed:	sub    DWORD PTR [edx-0x25574da6],0x3a4cdd20
  40a9f7:	and    bh,bl
  40a9f9:	fidivr WORD PTR [ecx]
  40a9fb:	mov    gs,eax
  40a9fd:	sbb    DWORD PTR [eax],edx
  40a9ff:	or     ebx,DWORD PTR [edi+0x971260d]
  40aa05:	out    dx,al
  40aa06:	sar    eax,1
  40aa08:	or     al,0x81
  40aa0a:	rcl    dl,cl
  40aa0c:	lods   eax,DWORD PTR ds:[esi]
  40aa0d:	mov    ebx,0xa34fee07
  40aa12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa13:	push   ecx
  40aa14:	out    0x27,al
  40aa16:	gs into 
  40aa18:	pusha  
  40aa19:	xor    ah,BYTE PTR [edi-0x5e]
  40aa1c:	dec    esi
  40aa1d:	jne    0x40a9c0
  40aa1f:	jmp    0xdd8d:0x8b529c4
  40aa26:	(bad)  
  40aa28:	xlat   BYTE PTR ds:[ebx]
  40aa29:	outs   dx,BYTE PTR ds:[esi]
  40aa2a:	gs js  0x40aaa2
  40aa2d:	adc    esp,DWORD PTR [ecx-0x70]
  40aa30:	xchg   edi,esp
  40aa32:	push   ss
  40aa33:	repz pop eax
  40aa35:	in     eax,0x2e
  40aa37:	outs   dx,DWORD PTR ds:[esi]
  40aa38:	lea    ecx,[edi+0x27dde978]
  40aa3e:	inc    esi
  40aa3f:	ror    BYTE PTR [edi+0x43b79845],1
  40aa45:	jne    0x40aaaa
  40aa47:	cdq    
  40aa48:	pop    esp
  40aa49:	ss push es
  40aa4b:	test   eax,0x36d9b9a4
  40aa50:	mov    ds:0xd3493ba9,al
  40aa55:	fbld   TBYTE PTR [esi]
  40aa57:	rol    BYTE PTR [esp+esi*1+0x6febf714],0xfe
  40aa5f:	or     eax,DWORD PTR [esp-0x68a3d3f3]
  40aa66:	sub    al,0xe7
  40aa68:	repz inc ebp
  40aa6a:	js     0x40aa5a
  40aa6c:	shl    DWORD PTR [esi+0x60dff5fc],cl
  40aa72:	dec    edi
  40aa73:	loop   0x40aab9
  40aa75:	rcl    bh,1
  40aa77:	jg     0x40aabb
  40aa79:	push   ebx
  40aa7a:	mov    ch,BYTE PTR [edi]
  40aa7c:	dec    esp
  40aa7d:	stc    
  40aa7e:	das    
  40aa7f:	sbb    eax,0x179248a5
  40aa84:	aas    
  40aa85:	xchg   ebx,eax
  40aa86:	leave  
  40aa87:	xchg   ecx,eax
  40aa88:	pusha  
  40aa89:	fiadd  WORD PTR ds:0xf96ab372
  40aa8f:	add    esi,ecx
  40aa91:	jecxz  0x40ab0e
  40aa93:	adc    al,0x7f
  40aa95:	sbb    BYTE PTR [eax+0x21],ah
  40aa98:	xor    esp,ebx
  40aa9a:	shl    BYTE PTR [esi+0x28],0xe3
  40aa9e:	jmp    0xcba1:0xbaa4b733
  40aaa5:	jg     0x40aa2d
  40aaa7:	dec    edi
  40aaa8:	sti    
  40aaa9:	cmp    al,0x5a
  40aaab:	pop    edi
  40aaac:	add    esp,0x62
  40aaaf:	adc    edi,eax
  40aab1:	or     DWORD PTR [ecx],ecx
  40aab3:	mov    esi,0x43c3df87
  40aab8:	cmp    ebp,eax
  40aaba:	pop    bp
  40aabc:	add    DWORD PTR [edx-0x36bd36db],esi
  40aac2:	mov    esp,0xee60017c
  40aac7:	aas    
  40aac8:	sbb    eax,0xf4795a24
  40aace:	push   ss
  40aacf:	xchg   esp,eax
  40aad0:	hlt    
  40aad1:	sbb    bh,cl
  40aad3:	call   0xdfa69ea4
  40aad8:	push   edx
  40aad9:	data16 mov bl,0x53
  40aadc:	gs add edx,edx
  40aadf:	enter  0x6b1,0xd0
  40aae3:	(bad)  
  40aae4:	iret   
  40aae5:	sub    DWORD PTR [eax+0x5fe008ce],edx
  40aaeb:	pop    edi
  40aaec:	pop    ecx
  40aaed:	fld    TBYTE PTR [eax+0x38]
  40aaf0:	xchg   ebp,eax
  40aaf1:	bound  edi,QWORD PTR [ebp-0x7238d5b1]
  40aaf7:	aas    
  40aaf8:	test   al,0x60
  40aafa:	stc    
  40aafb:	mov    cl,0x3d
  40aafd:	call   0x5a13a7bf
  40ab02:	mul    ebp
  40ab04:	mov    eax,0x76dfa841
  40ab09:	aaa    
  40ab0a:	neg    DWORD PTR [ebp+eax*4-0x4e]
  40ab0e:	add    ebx,DWORD PTR [edx+0xf]
  40ab11:	sbb    ecx,DWORD PTR [ebx+eiz*8-0xa]
  40ab15:	sub    eax,0x110cbac3
  40ab1a:	push   ds
  40ab1b:	push   ebp
  40ab1c:	shl    dl,0x92
  40ab1f:	test   eax,0xb097f952
  40ab24:	js     0x40ab99
  40ab26:	hlt    
  40ab27:	sbb    edi,edx
  40ab29:	arpl   WORD PTR [ebx+0x33],sp
  40ab2c:	in     eax,dx
  40ab2d:	scas   al,BYTE PTR es:[edi]
  40ab2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab30:	dec    esp
  40ab31:	hlt    
  40ab32:	outs   dx,DWORD PTR ds:[esi]
  40ab33:	cmp    DWORD PTR [eax-0x7],ecx
  40ab36:	sbb    dh,BYTE PTR [ebx]
  40ab38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab39:	outs   dx,BYTE PTR ds:[esi]
  40ab3a:	dec    edi
  40ab3b:	push   esp
  40ab3c:	add    eax,0xbf0fc512
  40ab41:	popfw  
  40ab43:	sub    eax,0x5689467e
  40ab48:	data16 xchg BYTE PTR [esi-0x531b6d43],dh
  40ab4f:	push   ebx
  40ab50:	add    eax,DWORD PTR [ebx-0x6a]
  40ab53:	sbb    DWORD PTR [esi+edx*4-0x61],0x649d9187
  40ab5b:	call   0x2a4f:0xee09af86
  40ab62:	xlat   BYTE PTR ds:[ebx]
  40ab63:	jbe    0x40ab3b
  40ab65:	cmp    al,0x75
  40ab67:	test   cl,bh
  40ab69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab6a:	and    eax,0x9e03d19e
  40ab6f:	lahf   
  40ab70:	inc    ebx
  40ab71:	sbb    BYTE PTR [ebx+0x52],cl
  40ab74:	adc    eax,DWORD PTR [ecx]
  40ab76:	mov    ebx,esp
  40ab78:	cli    
  40ab79:	sub    al,dh
  40ab7b:	xchg   edi,eax
  40ab7c:	iret   
  40ab7d:	ins    BYTE PTR es:[edi],dx
  40ab7e:	push   0x67
  40ab80:	stos   BYTE PTR es:[edi],al
  40ab81:	lds    ebp,FWORD PTR [ebp-0x62]
  40ab84:	ins    BYTE PTR es:[edi],dx
  40ab85:	fld    QWORD PTR [esi+0x209e952f]
  40ab8b:	in     al,0xb2
  40ab8d:	in     al,dx
  40ab8e:	dec    esi
  40ab8f:	mov    ds:0x5be6326f,al
  40ab94:	pop    es
  40ab95:	out    dx,al
  40ab96:	xchg   edx,eax
  40ab97:	(bad)  
  40ab98:	mov    eax,0xc466cd48
  40ab9d:	add    ch,BYTE PTR [edi+0x5f365bfe]
  40aba3:	sar    DWORD PTR [ebx+0x61],cl
  40aba6:	sub    BYTE PTR [ebx],al
  40aba8:	test   eax,0x90c1c9d8
  40abad:	pop    edx
  40abae:	loope  0x40ab49
  40abb0:	imul   ebx,DWORD PTR [eax-0x2c568704],0xffffffb8
  40abb7:	dec    edi
  40abb8:	mov    ah,0x18
  40abba:	lea    ebx,[ebp+0x7fbbd809]
  40abc0:	stos   BYTE PTR es:[edi],al
  40abc1:	cs mov dh,0x85
  40abc4:	fcmovnbe st,st(0)
  40abc6:	ins    DWORD PTR es:[edi],dx
  40abc7:	or     BYTE PTR [esi+0x34a1329a],bh
  40abcd:	test   DWORD PTR [ebp-0x32],esi
  40abd0:	or     eax,0x95cf4572
  40abd5:	mov    esp,0x59c423b3
  40abda:	xchg   ebx,eax
  40abdb:	sub    eax,0xe199d673
  40abe0:	imul   edi,DWORD PTR [ebx],0x7deccab
  40abe6:	pop    ds
  40abe7:	int3   
  40abe8:	sub    eax,0x6340ceab
  40abed:	add    DWORD PTR [esi+0x33],ecx
  40abf0:	add    eax,0xc3373b8b
  40abf5:	ss jle 0x40abe2
  40abf8:	cmp    DWORD PTR [edx+eiz*1],esp
  40abfb:	ds int3 
  40abfd:	inc    ecx
  40abfe:	test   DWORD PTR [esi],0xdf33da4
  40ac04:	(bad)  
  40ac05:	icebp  
  40ac06:	or     al,0x5c
  40ac08:	inc    edx
  40ac09:	ins    BYTE PTR es:[edi],dx
  40ac0a:	fimul  WORD PTR [edx-0x62]
  40ac0d:	mov    bh,0xfb
  40ac0f:	repz mov ecx,0x8899d140
  40ac15:	ja     0x40ac8c
  40ac17:	jecxz  0x40ac4f
  40ac19:	rcr    DWORD PTR ds:0x9d3454de,0xfa
  40ac20:	add    eax,0x25521a8a
  40ac25:	lds    eax,FWORD PTR [edi+edi*1+0x2a3507b6]
  40ac2c:	repz jo 0x40ac66
  40ac2f:	push   edi
  40ac30:	pop    esi
  40ac31:	pop    eax
  40ac32:	dec    esi
  40ac33:	sbb    BYTE PTR [eax],dl
  40ac35:	add    eax,0x953e7f9b
  40ac3a:	sar    DWORD PTR [ebx],cl
  40ac3c:	inc    esi
  40ac3d:	mov    ebx,0x7e599fd8
  40ac42:	popa   
  40ac43:	(bad)  
  40ac44:	icebp  
  40ac45:	sbb    eax,0xb957c1f7
  40ac4a:	cwde   
  40ac4b:	pusha  
  40ac4c:	test   ah,0xca
  40ac4f:	push   edx
  40ac50:	jg     0x40abee
  40ac52:	mov    ecx,?
  40ac54:	pop    edx
  40ac55:	add    BYTE PTR [eax],bl
  40ac57:	fldcw  WORD PTR [ecx]
  40ac59:	inc    edi
  40ac5a:	xchg   ebx,eax
  40ac5b:	inc    ebp
  40ac5c:	mov    ds:0x2b0e4044,eax
  40ac61:	hlt    
  40ac62:	aaa    
  40ac63:	js     0x40acba
  40ac65:	je     0x40ac75
  40ac67:	or     eax,0xd362cde7
  40ac6c:	pop    es
  40ac6d:	in     eax,dx
  40ac6e:	ja     0x40abf7
  40ac70:	(bad)  
  40ac71:	push   0x6a
  40ac73:	xor    al,0x4b
  40ac75:	fistp  QWORD PTR [esi+0x24]
  40ac78:	jp     0x40ac56
  40ac7a:	lahf   
  40ac7b:	dec    esp
  40ac7c:	fwait
  40ac7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac7e:	xchg   edi,eax
  40ac7f:	out    0x35,al
  40ac81:	dec    eax
  40ac82:	loope  0x40acc1
  40ac84:	nop
  40ac85:	retf   0x31c
  40ac88:	mov    ecx,0xbd16f524
  40ac8d:	add    eax,0x7c7ff379
  40ac92:	mov    bl,0x4e
  40ac94:	add    DWORD PTR [ebx+0xca35b6f],esp
  40ac9a:	ins    BYTE PTR es:[edi],dx
  40ac9b:	call   0x108ffca7
  40aca0:	jmp    0xda801628
  40aca5:	aam    0x82
  40aca7:	mov    eax,ds:0xa92b2a27
  40acac:	mov    edx,0x2a3eaeb5
  40acb1:	push   esp
  40acb2:	daa    
  40acb3:	sbb    edx,DWORD PTR [di+0x62]
  40acb7:	push   cs
  40acb8:	pop    ebp
  40acb9:	data16 add cl,BYTE PTR [ecx]
  40acbc:	pop    ds
  40acbd:	jge    0x40acb5
  40acbf:	or     bh,BYTE PTR [ebx-0x5]
  40acc2:	loop   0x40ac83
  40acc4:	out    dx,al
  40acc5:	sbb    BYTE PTR [ebx-0xf],ch
  40acc8:	inc    ebx
  40acc9:	lock lock sbb DWORD PTR [ebp+0xb],ebp
  40acce:	nop
  40accf:	dec    edi
  40acd1:	in     al,dx
  40acd2:	mov    cl,0x85
  40acd4:	jne    0x40ac97
  40acd6:	adc    eax,0x701e253a
  40acdb:	jle    0x40ad3f
  40acdd:	and    DWORD PTR [eax+ecx*4-0x8747fd9],esi
  40ace4:	jmp    0xa3e1:0xea202459
  40aceb:	or     DWORD PTR [ecx+0x52a41212],0x79d7e58e
  40acf5:	sub    cl,BYTE PTR [ecx]
  40acf7:	inc    ecx
  40acf8:	mov    esi,0x2c436fe5
  40acfd:	rcl    BYTE PTR gs:[ecx+0x183dca9c],cl
  40ad04:	jae    0x40acfe
  40ad06:	mov    ecx,0xd6f37cc7
  40ad0b:	repnz test DWORD PTR [eax+eax*2+0x428fbd8c],esi
  40ad13:	jnp    0x40acc5
  40ad15:	addr16 cli 
  40ad17:	pushf  
  40ad18:	adc    BYTE PTR [ebx+eax*1+0x35],0x60
  40ad1d:	sub    eax,0xb206c18
  40ad22:	cli    
  40ad23:	adc    ah,BYTE PTR [ebx-0x54]
  40ad26:	pop    es
  40ad27:	add    al,0x29
  40ad29:	ja     0x40ad2b
  40ad2b:	dec    edi
  40ad2c:	push   ss
  40ad2d:	inc    edx
  40ad2e:	fs xor al,0x15
  40ad31:	and    ebx,DWORD PTR [edx+0x4b]
  40ad34:	out    dx,al
  40ad35:	mov    al,0x69
  40ad37:	adc    eax,0x980c360c
  40ad3c:	jl     0x40ad9e
  40ad3e:	jae    0x40adbc
  40ad40:	(bad)  
  40ad42:	loopne 0x40ace1
  40ad44:	test   eax,0x73b2bbe7
  40ad49:	mov    eax,DWORD PTR [ebp-0x42]
  40ad4c:	xor    eax,DWORD PTR [eax-0x5a]
  40ad4f:	sub    eax,0x4eaa6455
  40ad54:	hlt    
  40ad55:	pop    ecx
  40ad56:	mov    al,BYTE PTR [edx]
  40ad58:	jnp    0x40ad82
  40ad5a:	fidivr WORD PTR [esi+esi*8]
  40ad5d:	enter  0xef23,0x7
  40ad61:	inc    eax
  40ad62:	xchg   esp,eax
  40ad63:	clc    
  40ad64:	mov    dl,0x3b
  40ad66:	xchg   BYTE PTR [ecx-0x4c572eb2],ah
  40ad6c:	push   ebx
  40ad6d:	rol    DWORD PTR [eax-0xd],cl
  40ad70:	inc    ebp
  40ad71:	repz test al,0xef
  40ad74:	jbe    0x40ad6f
  40ad76:	test   BYTE PTR [ebp+0x3c8bff43],ah
  40ad7c:	xchg   cl,dh
  40ad7e:	cmp    ah,BYTE PTR [ecx-0x140314b7]
  40ad84:	and    ebp,ebx
  40ad86:	pop    esp
  40ad87:	jle    0x40adc9
  40ad89:	mov    ebx,0xcf02a452
  40ad8e:	popf   
  40ad8f:	arpl   di,dx
  40ad91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad92:	cmp    DWORD PTR [ebx+0x6],ecx
  40ad95:	call   0x6e10:0xf6888bb1
  40ad9c:	cmp    al,dl
  40ad9e:	fwait
  40ad9f:	mov    cl,0x7d
  40ada1:	lds    eax,FWORD PTR [edx+0x33]
  40ada4:	das    
  40ada5:	xchg   esp,eax
  40ada6:	mov    ds:0xc762a717,al
  40adab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adac:	popf   
  40adad:	xor    DWORD PTR [eax-0x14],0x6
  40adb1:	dec    esp
  40adb2:	enter  0x6b72,0xa9
  40adb6:	sub    cl,dl
  40adb8:	(bad)  
  40adba:	into   
  40adbb:	test   eax,0x473eff86
  40adc0:	sub    al,0x11
  40adc2:	jg     0x40adf7
  40adc4:	pop    ecx
  40adc5:	inc    ecx
  40adc6:	mov    ebp,0xf1cc14e
  40adcb:	loop   0x40ad5f
  40adcd:	ret    
  40adce:	xchg   esi,eax
  40adcf:	fmul   DWORD PTR ds:0xaaf5aca7
  40add5:	pop    ebx
  40add6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40add7:	lahf   
  40add8:	add    al,0xb4
  40adda:	mov    bl,0x27
  40addc:	jp     0x40ade5
  40adde:	jecxz  0x40ad72
  40ade0:	fcomp  st(2)
  40ade2:	add    DWORD PTR [edi+0x272d908f],0x55571c26
  40adec:	mov    bh,0x16
  40adee:	adc    BYTE PTR ds:0xf285a84e,ch
  40adf4:	int    0x6c
  40adf6:	inc    esp
  40adf7:	dec    edx
  40adf8:	push   esp
  40adf9:	(bad)  
  40adfa:	es add eax,0x88358882
  40ae00:	add    bh,ah
  40ae02:	dec    edi
  40ae03:	aaa    
  40ae04:	or     DWORD PTR [edi],eax
  40ae06:	(bad)  
  40ae07:	repnz loopne 0x40adac
  40ae0a:	mov    esp,0xda51cb93
  40ae0f:	pop    ecx
  40ae10:	jg     0x40ada7
  40ae12:	cwde   
  40ae13:	lea    ebp,[esi]
  40ae15:	int    0x88
  40ae17:	lock xchg ebx,eax
  40ae19:	fwait
  40ae1a:	xor    eax,0x9df6ac16
  40ae1f:	enter  0x9c8,0x2b
  40ae23:	rol    BYTE PTR [eax+0x1741f8f2],0x6c
  40ae2a:	and    edx,0xffffffba
  40ae2d:	ficomp DWORD PTR [edi]
  40ae2f:	jecxz  0x40ae0c
  40ae31:	dec    ebp
  40ae32:	daa    
  40ae33:	test   eax,0xa74025ed
  40ae38:	or     ah,ah
  40ae3a:	mov    eax,0x5266f82e
  40ae3f:	push   es
  40ae40:	outs   dx,BYTE PTR ds:[esi]
  40ae41:	les    ebx,FWORD PTR [esi]
  40ae43:	jo     0x40ade1
  40ae45:	inc    DWORD PTR [ebx+0x551db822]
  40ae4b:	shl    DWORD PTR ds:0x9c4ed522,0x7e
  40ae52:	pop    ds
  40ae53:	addr16 mov al,0x2
  40ae56:	test   eax,0x93ca0d89
  40ae5b:	pop    ebp
  40ae5c:	retf   
  40ae5d:	rcl    BYTE PTR [eax+esi*8],0x7a
  40ae61:	mov    bl,0x3c
  40ae63:	call   0x86a4:0xf20825a
  40ae6a:	pop    ss
  40ae6b:	popa   
  40ae6c:	(bad)  
  40ae6d:	push   0xffffffb4
  40ae6f:	imul   BYTE PTR [edx+edx*1+0x29]
  40ae73:	mov    DWORD PTR [ecx+0x182b58da],ebx
  40ae79:	imul   DWORD PTR [edx-0x19]
  40ae7c:	scas   eax,DWORD PTR es:[edi]
  40ae7d:	add    DWORD PTR [eax+0x25],esi
  40ae80:	(bad)  
  40ae81:	jmp    0x40ae76
  40ae83:	pop    eax
  40ae84:	in     eax,0xcc
  40ae86:	mov    eax,0x534789c2
  40ae8b:	jnp    0x40aeb6
  40ae8d:	clc    
  40ae8e:	pop    edx
  40ae8f:	push   esi
  40ae90:	sahf   
  40ae91:	ret    0x9740
  40ae94:	mov    DWORD PTR [edi-0x4e],edi
  40ae97:	je     0x40aef1
  40ae99:	mov    dl,BYTE PTR [edx+0x59]
  40ae9c:	mov    fs,WORD PTR [ebx]
  40ae9e:	call   0x459d:0xd62f67d6
  40aea5:	nop
  40aea6:	mov    ?,esp
  40aea8:	jb     0x40ae3e
  40aeaa:	std    
  40aeab:	test   DWORD PTR [ebp+0x5b],ebx
  40aeae:	dec    eax
  40aeaf:	sub    eax,0xd2dfe731
  40aeb4:	les    ebp,FWORD PTR [esi]
  40aeb6:	icebp  
  40aeb7:	sub    edx,edi
  40aeb9:	adc    eax,0xab7de2d8
  40aebe:	arpl   bp,bx
  40aec0:	mov    dl,BYTE PTR [eax-0x22dd292d]
  40aec6:	ret    
  40aec7:	dec    edx
  40aec8:	pop    esi
  40aec9:	jle    0x40ae86
  40aecb:	xor    eax,0x89fc40f4
  40aed0:	fs (bad) 
  40aed2:	jge    0x40af0e
  40aed4:	push   es
  40aed5:	add    ah,BYTE PTR [ebx+0x5b]
  40aed8:	mov    ebx,0xbcfd02a
  40aedd:	sub    al,0x5d
  40aedf:	mov    dh,0x47
  40aee1:	retf   
  40aee2:	mov    ds:0xb4eb50d1,al
  40aee7:	stc    
  40aee8:	sbb    BYTE PTR [edi-0x74],dh
  40aeeb:	sub    DWORD PTR [edx],eax
  40aeed:	fwait
  40aeee:	jbe    0x40af69
  40aef0:	ror    BYTE PTR [esi-0x4e],0xf8
  40aef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aef5:	sbb    DWORD PTR fs:[edi],esp
  40aef8:	pop    ebx
  40aef9:	pop    ds
  40aefa:	adc    ebp,edx
  40aefc:	outs   dx,BYTE PTR ds:[esi]
  40aefd:	adc    BYTE PTR [edi],ah
  40aeff:	and    BYTE PTR [edx],0xb
  40af02:	test   DWORD PTR ds:0xd0103693,edx
  40af08:	stc    
  40af09:	gs cdq 
  40af0b:	jl     0x40aeae
  40af0d:	minps  xmm2,XMMWORD PTR [ebp+0x1cf26c78]
  40af14:	adc    DWORD PTR [edx+0x59],ebx
  40af17:	rcl    BYTE PTR [eax],0xe1
  40af1a:	mov    ebx,0x8005559a
  40af1f:	and    ch,dl
  40af21:	sub    bh,BYTE PTR [eax]
  40af23:	sub    ecx,DWORD PTR [ebx+0x1a0eead]
  40af29:	rcl    DWORD PTR [edi*2+0x72ae4ed2],1
  40af30:	and    eax,esi
  40af32:	inc    esi
  40af33:	retf   0x8255
  40af36:	and    DWORD PTR [ebx+0xb],ebp
  40af39:	or     BYTE PTR [ebx-0x70],cl
  40af3c:	ins    BYTE PTR es:[edi],dx
  40af3d:	fst    st(6)
  40af3f:	scas   eax,DWORD PTR es:[edi]
  40af40:	out    dx,eax
  40af41:	dec    ebx
  40af42:	lock ins BYTE PTR es:[edi],dx
  40af44:	mov    cl,0x81
  40af46:	sub    edx,DWORD PTR [ebx-0x44c80ac4]
  40af4c:	ins    DWORD PTR es:[edi],dx
  40af4d:	popa   
  40af4e:	pop    ss
  40af4f:	sub    ebx,DWORD PTR [eax+eax*1]
  40af52:	ja     0x40afbd
  40af54:	xchg   ecx,eax
  40af55:	inc    ebx
  40af56:	test   DWORD PTR [esi+0x5139cc17],0x8a7ba570
  40af60:	push   eax
  40af61:	into   
  40af62:	adc    BYTE PTR [ebx-0x422f6e96],cl
  40af68:	in     al,0xc9
  40af6a:	push   0x730928ef
  40af6f:	sbb    edx,esi
  40af71:	pop    ecx
  40af72:	imul   BYTE PTR [edi-0x29]
  40af75:	arpl   ax,sp
  40af77:	adc    al,0xb2
  40af79:	retf   
  40af7a:	mov    ebp,0xb6807141
  40af7f:	retf   0x8547
  40af82:	jle    0x40afce
  40af84:	sbb    eax,0xb7eb62a6
  40af89:	out    0x7,eax
  40af8b:	push   cs
  40af8c:	(bad)  
  40af8d:	imul   edx,DWORD PTR [esi-0x45],0x78
  40af91:	mov    dl,0xf2
  40af93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af94:	js     0x40af5b
  40af96:	push   esp
  40af97:	push   ecx
  40af98:	sbb    BYTE PTR [edx+0x38],0xb4
  40af9c:	bound  esp,QWORD PTR [eax-0x6390b11d]
  40afa2:	lahf   
  40afa3:	lods   eax,DWORD PTR ds:[esi]
  40afa4:	xor    ecx,DWORD PTR [edx+0x627c8040]
  40afaa:	add    edx,DWORD PTR [ebx+0xe65702d]
  40afb0:	aaa    
  40afb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afb2:	add    ebx,esi
  40afb4:	pop    ds
  40afb5:	add    eax,DWORD PTR [edi]
  40afb7:	jne    0x40af67
  40afb9:	mov    al,ds:0x4d5660d5
  40afbe:	dec    eax
  40afbf:	not    DWORD PTR [esi+esi*8-0x6f7dc5dc]
  40afc6:	pop    ebp
  40afc7:	pop    esp
  40afc8:	dec    ecx
  40afc9:	adc    BYTE PTR [edx-0x5be55a2],0x7d
  40afd0:	mov    eax,ds:0x7d82d876
  40afd5:	cwde   
  40afd6:	push   cs
  40afd7:	adc    edx,edi
  40afd9:	xchg   ebx,eax
  40afda:	frstor [edi-0x1a1f19a9]
  40afe1:	lock push 0x1408ed69
  40afe7:	sub    al,0x68
  40afe9:	adc    BYTE PTR [ebp+0xdc7465a],al
  40afef:	mov    ebx,0x3fef245d
  40aff4:	sub    edi,edi
  40aff6:	jmp    0x23b62a3e
  40affb:	imul   edx,DWORD PTR [esi],0xb45ca515
  40b001:	arpl   dx,dx
  40b003:	sub    al,ch
  40b005:	push   edx
  40b006:	out    dx,al
  40b007:	in     eax,dx
  40b008:	mov    BYTE PTR [eax+0x6c0f86cc],al
  40b00e:	pop    ebp
  40b00f:	jbe    0x40b053
  40b011:	add    DWORD PTR [ecx+eiz*4],esp
  40b014:	mov    WORD PTR [ebx+edi*4+0x5f],cs
  40b018:	mov    al,0x0
  40b01a:	cmp    BYTE PTR [ebp+0x69],dl
  40b01d:	stos   BYTE PTR es:[edi],al
  40b01e:	fsubr  QWORD PTR [ecx-0x391b0cc9]
  40b024:	cmc    
  40b025:	bound  esp,QWORD PTR [edi-0x60]
  40b028:	push   esp
  40b029:	xchg   ebp,eax
  40b02a:	jmp    0x376f20c9
  40b02f:	mov    esi,0x4e45ec52
  40b034:	add    esi,DWORD PTR [ebx+ecx*1+0x78cb8ba6]
  40b03b:	cmp    bl,BYTE PTR [edx+0x30]
  40b03e:	pop    es
  40b03f:	daa    
  40b040:	mov    al,0x1a
  40b042:	std    
  40b043:	test   bl,ch
  40b045:	shl    BYTE PTR [edx+0x5fad0095],0xc4
  40b04c:	imul   edx,DWORD PTR [eax+0x7bced2ae],0xffffffb1
  40b053:	(bad)  
  40b054:	mov    esp,0x25f7149f
  40b059:	stc    
  40b05a:	pop    eax
  40b05b:	cmc    
  40b05c:	mov    ah,0x97
  40b05e:	adc    al,0x81
  40b060:	pushf  
  40b061:	test   al,0x48
  40b063:	sbb    edx,ebp
  40b065:	add    DWORD PTR [ecx-0x4e],eax
  40b068:	xchg   esi,eax
  40b069:	cmp    edi,DWORD PTR [ecx-0x6]
  40b06c:	jbe    0x40b0b5
  40b06e:	push   ebx
  40b06f:	mov    dl,0x94
  40b071:	repnz push esp
  40b073:	and    DWORD PTR [esp+ebx*8-0x1109eaa4],esi
  40b07a:	jp     0x40b09d
  40b07c:	fdivr  DWORD PTR [edx+0x7dba49b]
  40b082:	popf   
  40b083:	dec    ecx
  40b084:	dec    ecx
  40b085:	nop
  40b086:	rcr    bh,1
  40b088:	popf   
  40b089:	adc    DWORD PTR [esi-0x49],esp
  40b08c:	xor    eax,0xb4f8f2ea
  40b091:	mov    ch,0x4b
  40b093:	mov    ch,0x2f
  40b095:	arpl   sp,ax
  40b097:	into   
  40b098:	mov    ah,ah
  40b09a:	xchg   esi,eax
  40b09b:	aaa    
  40b09c:	xchg   esp,eax
  40b09d:	xchg   esp,eax
  40b09e:	stos   BYTE PTR es:[edi],al
  40b09f:	std    
  40b0a0:	adc    ecx,DWORD PTR [edx]
  40b0a2:	scas   eax,DWORD PTR es:[edi]
  40b0a3:	sub    eax,0x51f6dc83
  40b0a8:	mov    eax,0xc3d3e9a1
  40b0ad:	sbb    ecx,DWORD PTR [esi+0x660996bc]
  40b0b3:	mov    esp,0xff370052
  40b0b8:	add    BYTE PTR [esi],al
  40b0ba:	pop    edx
  40b0bb:	add    eax,0xc130e4b1
  40b0c0:	xor    eax,ebp
  40b0c2:	(bad)  
  40b0c5:	add    edi,0xa
  40b0c8:	jmp    0x40b138
  40b0ca:	ror    DWORD PTR [esi-0x54],0xee
  40b0ce:	cmp    esi,DWORD PTR [ebp+0x460a6e46]
  40b0d4:	lahf   
  40b0d5:	mov    fs,WORD PTR [ecx]
  40b0d7:	mov    bl,0x72
  40b0d9:	add    DWORD PTR [ebx+0x1feeaf6a],0x69
  40b0e0:	retf   
  40b0e1:	in     eax,0xdb
  40b0e3:	repnz adc BYTE PTR [edx],dh
  40b0e6:	or     esp,edi
  40b0e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0e9:	cmp    bl,ah
  40b0eb:	sbb    eax,0x6e00471f
  40b0f0:	std    
  40b0f1:	cmp    eax,0x95b0c9bc
  40b0f6:	ins    BYTE PTR es:[edi],dx
  40b0f7:	loope  0x40b16c
  40b0f9:	add    eax,0x28e0eb56
  40b0fe:	retf   0x1751
  40b101:	adc    ch,BYTE PTR [eax+esi*2-0x21f208f8]
  40b108:	pop    ebx
  40b109:	mov    ds:0xd43b8d2d,al
  40b10e:	daa    
  40b10f:	repz imul edi,DWORD PTR ds:0x625c6f5b,0x3229d21c
  40b11a:	mov    esi,0xfb55fd5d
  40b11f:	ja     0x40b18c
  40b121:	in     al,0x67
  40b123:	cmc    
  40b124:	ins    BYTE PTR es:[edi],dx
  40b125:	out    dx,eax
  40b126:	test   al,0xeb
  40b128:	retf   
  40b129:	jae    0x40b167
  40b12b:	or     BYTE PTR [ebp-0x4b],al
  40b12e:	leave  
  40b12f:	adc    DWORD PTR [ecx+0x57],ebx
  40b132:	test   BYTE PTR [edi-0x77157482],0x6
  40b139:	test   eax,0xeb5b8210
  40b13e:	div    BYTE PTR [eax+0x6e763aa3]
  40b144:	into   
  40b145:	daa    
  40b146:	inc    esp
  40b147:	(bad)  
  40b148:	fild   DWORD PTR ds:0x8d2caf21
  40b14e:	in     eax,dx
  40b14f:	push   eax
  40b150:	sahf   
  40b151:	(bad)  
  40b152:	call   0x3454:0x843c9ad1
  40b159:	xchg   edx,eax
  40b15a:	test   DWORD PTR [esi],edi
  40b15c:	sub    edx,ebx
  40b15e:	loopne 0x40b0e8
  40b160:	xor    DWORD PTR ds:[edx+0x7fde442a],eax
  40b167:	inc    ebx
  40b168:	lods   eax,DWORD PTR ds:[esi]
  40b169:	mov    dl,0xbf
  40b16b:	dec    eax
  40b16c:	js     0x40b195
  40b16e:	aam    0x43
  40b170:	sub    eax,0xf9e1522e
  40b175:	xchg   DWORD PTR [ecx-0x6],edx
  40b178:	jp     0x40b162
  40b17a:	sbb    dl,dh
  40b17c:	(bad)  
  40b17d:	lahf   
  40b17e:	test   BYTE PTR [ecx],0x0
  40b181:	push   ebx
  40b182:	mov    dl,0xc5
  40b184:	dec    BYTE PTR [ebx+0x4a2d371f]
  40b18a:	xchg   ebx,eax
  40b18b:	popa   
  40b18c:	pop    edx
  40b18d:	stos   BYTE PTR es:[edi],al
  40b18e:	jg     0x40b188
  40b190:	adc    DWORD PTR fs:[eax-0x27343694],esp
  40b197:	mov    cl,0x42
  40b199:	mov    esp,0x9a806d7
  40b19e:	rol    DWORD PTR [edi+0x48],cl
  40b1a1:	mov    edi,0x420e3395
  40b1a6:	fdivp  st(2),st
  40b1a8:	iret   
  40b1a9:	mov    al,0x59
  40b1ab:	aaa    
  40b1ac:	arpl   WORD PTR [eax-0x5dc0c4ae],di
  40b1b2:	mov    eax,ds:0xcc74f861
  40b1b7:	and    BYTE PTR [ecx+ebp*1],ch
  40b1ba:	adc    ah,BYTE PTR [eax+0x1a9667dd]
  40b1c0:	jecxz  0x40b1a7
  40b1c2:	scas   eax,DWORD PTR es:[edi]
  40b1c3:	jmp    0x7baa:0x805087b1
  40b1ca:	sub    DWORD PTR [ebx-0x26],eax
  40b1cd:	inc    edi
  40b1ce:	jp     0x40b163
  40b1d0:	cmp    DWORD PTR [esi+ecx*4+0x78],esp
  40b1d4:	imul   esi,esp,0xffffff89
  40b1d7:	add    DWORD PTR [edx+0x357bd44f],ebx
  40b1dd:	mov    bl,BYTE PTR [ebp+eiz*8+0x6d1ca66f]
  40b1e4:	test   BYTE PTR [ebp+0x8123b4],bl
  40b1ea:	pop    esp
  40b1eb:	retf   0x35c6
  40b1ee:	push   esp
  40b1ef:	mov    ch,0xce
  40b1f1:	stos   DWORD PTR es:[edi],eax
  40b1f2:	sub    BYTE PTR [edi-0x6b2d66c9],ch
  40b1f8:	ret    
  40b1f9:	and    eax,0x829b40f7
  40b1fe:	lahf   
  40b1ff:	rcl    DWORD PTR [eax+0x23bfdf1],1
  40b205:	ins    DWORD PTR es:[edi],dx
  40b206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b207:	push   ds
  40b208:	sub    cl,0xa2
  40b20b:	add    dl,BYTE PTR [esi+0x5]
  40b20e:	ins    BYTE PTR es:[edi],dx
  40b20f:	or     BYTE PTR [ebx+0x48],dl
  40b212:	in     al,dx
  40b213:	push   ebp
  40b214:	out    0x79,al
  40b216:	add    ah,BYTE PTR ds:0x7535f448
  40b21c:	xchg   edi,eax
  40b21d:	jecxz  0x40b1cb
  40b21f:	fnstenv [ecx-0x79]
  40b222:	xor    ah,bl
  40b224:	mov    BYTE PTR [eax+0x7f],bh
  40b227:	enter  0x7a5,0xb5
  40b22b:	jmp    0x40b1d7
  40b22d:	pop    ebp
  40b22e:	push   es
  40b22f:	push   ds
  40b230:	mov    edx,0xb58231ef
  40b235:	(bad)  
  40b236:	xor    al,BYTE PTR [edi]
  40b238:	neg    BYTE PTR [edx-0x62]
  40b23b:	int3   
  40b23c:	jp     0x40b262
  40b23e:	sub    al,0xf8
  40b240:	mov    ah,0xd
  40b242:	pop    esi
  40b243:	ss jno 0x40b1c7
  40b246:	mov    ebp,0x3aedb8ea
  40b24b:	(bad)  
  40b24c:	mov    dl,0x48
  40b24e:	push   esp
  40b250:	adc    BYTE PTR [edi+0x37],0xa3
  40b254:	shr    BYTE PTR [esi],0xec
  40b257:	popf   
  40b258:	jp     0x40b22c
  40b25a:	out    0xf4,al
  40b25c:	mov    esp,0xb3658a2
  40b261:	mov    al,0x4e
  40b263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b264:	aam    0x29
  40b266:	in     al,0x88
  40b268:	push   cs
  40b269:	inc    eax
  40b26a:	jecxz  0x40b294
  40b26c:	hlt    
  40b26d:	push   ds
  40b26e:	adc    al,0x3d
  40b270:	stos   BYTE PTR es:[edi],al
  40b271:	cmp    al,0x94
  40b273:	push   0x70c5e3ca
  40b278:	push   ebx
  40b279:	gs jb  0x40b279
  40b27c:	push   ss
  40b27d:	or     DWORD PTR [ebx-0x56],edi
  40b280:	jge    0x40b2a8
  40b282:	dec    eax
  40b283:	frstor [ebx]
  40b285:	jbe    0x40b26a
  40b287:	or     al,0x9e
  40b289:	xchg   esi,eax
  40b28a:	ds scas al,BYTE PTR es:[edi]
  40b28c:	into   
  40b28d:	(bad)  
  40b28e:	cmp    al,0x9b
  40b290:	push   ds
  40b291:	adc    eax,0x272226a8
  40b296:	icebp  
  40b297:	dec    ebp
  40b298:	out    dx,eax
  40b299:	icebp  
  40b29a:	repz not DWORD PTR [edi+0x4b33845]
  40b2a1:	les    edi,FWORD PTR [ecx+0x4b6b4b2c]
  40b2a7:	sub    BYTE PTR [edx],0x11
  40b2aa:	ds mov ds:0x9e5ef4f7,al
  40b2b1:	xor    eax,0xb2961da7
  40b2b6:	cmc    
  40b2b7:	xor    DWORD PTR [ebx-0x612db0c4],ebx
  40b2bd:	add    eax,0xd66a1aab
  40b2c2:	or     edi,esi
  40b2c4:	or     ah,BYTE PTR [esi+0x54]
  40b2c7:	fnstenv [ecx-0x6a]
  40b2ca:	imul   eax,ebp,0x57caf381
  40b2d0:	adc    BYTE PTR [edi+0x15fc2e4c],0x74
  40b2d7:	and    DWORD PTR [eax],eax
  40b2d9:	in     al,0x5
  40b2db:	retf   0x7693
  40b2de:	lock lods eax,DWORD PTR ds:[esi]
  40b2e0:	ins    BYTE PTR es:[edi],dx
  40b2e1:	mov    eax,0x73dd35ee
  40b2e6:	add    ch,BYTE PTR [esi]
  40b2e8:	sub    DWORD PTR [ecx-0x69],ebp
  40b2eb:	(bad)
  40b2ef:	jbe    0x40b292
  40b2f1:	inc    edx
  40b2f2:	or     al,0x77
  40b2f4:	in     al,dx
  40b2f5:	or     DWORD PTR [ebx-0x65],esi
  40b2f8:	loope  0x40b36e
  40b2fa:	xor    eax,0x4475893a
  40b2ff:	mov    ecx,0xae37c11e
  40b304:	pop    ss
  40b305:	inc    edx
  40b306:	test   BYTE PTR [ebp+0xb],bh
  40b309:	mov    gs,WORD PTR [edi-0x23]
  40b30c:	add    ah,BYTE PTR [edx-0x4222ad83]
  40b312:	and    al,0x63
  40b314:	stos   BYTE PTR es:[edi],al
  40b315:	jecxz  0x40b372
  40b317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b318:	cmp    BYTE PTR [ebx-0x36],cl
  40b31b:	sub    al,0xb9
  40b31d:	popa   
  40b31e:	xor    al,0x96
  40b320:	aaa    
  40b321:	mov    dl,0x23
  40b323:	fsubrp st(0),st
  40b325:	xchg   ebp,eax
  40b326:	lods   eax,DWORD PTR ds:[esi]
  40b327:	sub    edi,edi
  40b329:	inc    eax
  40b32a:	fisttp QWORD PTR [edx+0x78]
  40b32d:	xchg   DWORD PTR [edi+0x37dd70c4],ebx
  40b333:	aas    
  40b334:	sti    
  40b335:	mov    ebp,0x3b3a21d5
  40b33a:	out    dx,al
  40b33b:	cmp    DWORD PTR [edi],edx
  40b33d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b33e:	xchg   esp,eax
  40b33f:	pushf  
  40b340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b342:	adc    eax,0x2b5b31d0
  40b347:	(bad)  
  40b348:	(bad)  
  40b34a:	lahf   
  40b34b:	dec    eax
  40b34c:	adc    dh,dh
  40b34e:	sub    BYTE PTR [ecx-0x38],ah
  40b351:	sub    DWORD PTR [ecx-0x30],edx
  40b354:	sbb    al,0xd0
  40b356:	(bad)  
  40b358:	sti    
  40b359:	lock enter 0xa5e0,0x3b
  40b35e:	in     eax,dx
  40b35f:	add    DWORD PTR [edi+0x505119f6],edx
  40b365:	test   bl,bh
  40b367:	psubusb mm1,QWORD PTR [ecx+0x5050ac21]
  40b36e:	xchg   edi,eax
  40b36f:	arpl   WORD PTR [eax-0x3a],bp
  40b372:	jne    0x40b3cf
  40b374:	mov    eax,ds:0xf212f7fd
  40b379:	test   eax,0xc2874da4
  40b37e:	add    al,0xdd
  40b380:	pop    ecx
  40b381:	test   DWORD PTR [bx-0x62],edx
  40b385:	sub    al,0xb1
  40b387:	fcomp  DWORD PTR [esi]
  40b389:	push   eax
  40b38a:	out    0x9f,eax
  40b38c:	jl     0x40b337
  40b38e:	aaa    
  40b38f:	inc    eax
  40b390:	gs jbe 0x40b32e
  40b393:	nop
  40b394:	rcl    DWORD PTR [edi],cl
  40b396:	cmp    DWORD PTR [edi-0xfe15745],eax
  40b39c:	or     edx,DWORD PTR [edi-0x6d]
  40b39f:	repnz ds test al,0xec
  40b3a3:	inc    ebx
  40b3a4:	stos   DWORD PTR es:[edi],eax
  40b3a5:	mov    WORD PTR [ecx+0x66c52b48],cs
  40b3ab:	sub    al,0x56
  40b3ad:	xor    BYTE PTR [edi+0x7a4e39fd],dh
  40b3b3:	push   ebp
  40b3b4:	fwait
  40b3b5:	clc    
  40b3b6:	inc    ebp
  40b3b7:	rcr    ecx,0x6e
  40b3ba:	mov    ebp,0x1db30bf6
  40b3bf:	retf   
  40b3c0:	adc    eax,0x1ba76ae0
  40b3c5:	jbe    0x40b389
  40b3c7:	cwde   
  40b3c8:	imul   esi,ebp,0x1a
  40b3cb:	or     esi,DWORD PTR [esi+0x25e76e90]
  40b3d1:	and    DWORD PTR [ecx+0x5b2e4211],0xffffffb5
  40b3d8:	jae    0x40b443
  40b3da:	call   0x5cc7569
  40b3df:	aad    0x7d
  40b3e1:	mov    esp,0x90a5221
  40b3e6:	inc    esi
  40b3e7:	dec    ebp
  40b3e8:	cmp    DWORD PTR [edx-0x12c2545b],eax
  40b3ee:	jb     0x40b441
  40b3f0:	mov    ebp,0x4422291d
  40b3f5:	or     BYTE PTR [eax],dl
  40b3f7:	jg     0x40b3d5
  40b3f9:	jns    0x40b454
  40b3fb:	jmp    0x524d:0x228a354
  40b402:	push   ss
  40b403:	mov    ah,0x11
  40b405:	push   ds
  40b406:	jp     0x40b43b
  40b408:	retf   
  40b409:	popf   
  40b40a:	jmp    0x84dba91b
  40b40f:	icebp  
  40b410:	ret    
  40b411:	xor    BYTE PTR [ecx+0x7c],dl
  40b414:	push   ecx
  40b415:	fstp   TBYTE PTR [eax]
  40b417:	xor    DWORD PTR [eax],edi
  40b419:	cdq    
  40b41a:	inc    edi
  40b41b:	xchg   ebx,eax
  40b41c:	test   al,0x46
  40b41e:	ja     0x40b3db
  40b420:	xor    BYTE PTR [esi+ebx*1+0x6fa31ea8],dl
  40b427:	adc    esi,DWORD PTR [ecx+0x5587f5fe]
  40b42d:	mov    dl,0xa9
  40b42f:	daa    
  40b430:	icebp  
  40b431:	push   ss
  40b432:	dec    edi
  40b433:	sbb    al,0x3c
  40b435:	sbb    cl,BYTE PTR [edx-0x12b88c6]
  40b43b:	pop    edi
  40b43c:	loop   0x40b469
  40b43e:	loopne 0x40b4bf
  40b440:	sbb    DWORD PTR [esi+0x1f],esp
  40b443:	mov    gs,esi
  40b445:	sbb    bh,BYTE PTR [ecx+0x6382c2a]
  40b44b:	out    0x2,al
  40b44d:	ficom  DWORD PTR [ecx-0x57]
  40b450:	sub    ah,0x6e
  40b453:	clc    
  40b454:	mov    ds:0x5fab0207,al
  40b459:	push   edx
  40b45a:	mov    dh,0x5c
  40b45c:	pop    ecx
  40b45d:	mov    bh,BYTE PTR [eax+0x6a88a587]
  40b463:	cmp    esi,edx
  40b465:	and    esi,DWORD PTR [eax-0x9]
  40b468:	mov    edx,0x15c9b38b
  40b46d:	and    dl,BYTE PTR [ebx+0x58]
  40b470:	jmp    esi
  40b472:	jne    0x40b4b1
  40b474:	pop    ebp
  40b475:	scas   eax,DWORD PTR es:[edi]
  40b476:	stc    
  40b477:	inc    eax
  40b478:	xchg   esp,eax
  40b479:	push   ds
  40b47a:	cmp    eax,0xe14a696b
  40b47f:	stos   BYTE PTR es:[edi],al
  40b480:	mov    edx,0xfadbca2c
  40b485:	(bad)  
  40b486:	out    dx,eax
  40b487:	not    BYTE PTR gs:0xd9cdec2d
  40b48e:	test   BYTE PTR [edi],cl
  40b490:	adc    eax,DWORD PTR [ebx-0x559567af]
  40b496:	pop    esp
  40b497:	xor    eax,0xfba47c5
  40b49c:	out    0x56,al
  40b49e:	(bad)
  40b4a2:	daa    
  40b4a3:	xchg   esi,eax
  40b4a4:	popa   
  40b4a5:	mov    edx,DWORD PTR ds:[ecx]
  40b4a8:	dec    esp
  40b4a9:	adc    eax,0xd47f3711
  40b4ae:	ins    BYTE PTR es:[edi],dx
  40b4af:	dec    edx
  40b4b0:	test   eax,0x29564fbf
  40b4b5:	(bad)  
  40b4b6:	jne    0x40b4a0
  40b4b8:	cmp    eax,0x5aa01780
  40b4bd:	inc    esi
  40b4be:	xor    DWORD PTR [esi],esp
  40b4c0:	push   ds
  40b4c1:	(bad)
  40b4c4:	sub    cl,BYTE PTR ds:0x40f10f35
  40b4ca:	and    al,0xd1
  40b4cc:	clc    
  40b4cd:	mov    esp,0x2f42c5d3
  40b4d2:	cmp    al,0x37
  40b4d4:	cmp    cl,bh
  40b4d6:	inc    esi
  40b4d7:	stos   DWORD PTR es:[edi],eax
  40b4d8:	xchg   ebx,eax
  40b4d9:	mov    ch,0xe4
  40b4db:	push   ss
  40b4dc:	fcomi  st,st(7)
  40b4de:	or     DWORD PTR [esi+0x1a],0x328abdf7
  40b4e5:	cdq    
  40b4e6:	sub    dl,cl
  40b4e8:	xchg   BYTE PTR [esi],dh
  40b4ea:	loope  0x40b4bb
  40b4ec:	mov    ecx,esp
  40b4ee:	daa    
  40b4ef:	push   esi
  40b4f0:	in     eax,dx
  40b4f1:	or     DWORD PTR [ebx+0x123dfd3],edi
  40b4f7:	inc    edx
  40b4f8:	and    eax,0xa5b89b71
  40b4fd:	cwde   
  40b4fe:	add    al,0xdc
  40b500:	jg     0x40b509
  40b502:	gs pop ds
  40b504:	xor    DWORD PTR [esi+eax*4-0x27],edi
  40b508:	daa    
  40b509:	jge    0x40b523
  40b50b:	or     dl,BYTE PTR [edi+edx*2]
  40b50e:	push   ss
  40b50f:	add    BYTE PTR [eax],ch
  40b511:	mov    al,0x48
  40b513:	push   ss
  40b514:	cmp    eax,0xcba91bc0
  40b519:	and    DWORD PTR [edx-0x3f],0xffffff8a
  40b51d:	pop    esp
  40b51e:	or     edx,DWORD PTR [ecx+0x16]
  40b521:	dec    eax
  40b522:	icebp  
  40b523:	mov    ebx,0x9c184fc3
  40b528:	int    0xa3
  40b52a:	pop    eax
  40b52b:	call   0xd1fc5cac
  40b530:	jae    0x40b55d
  40b532:	cli    
  40b533:	hlt    
  40b534:	outs   dx,BYTE PTR ds:[esi]
  40b535:	or     cl,BYTE PTR [eax]
  40b537:	test   al,0xe6
  40b539:	outs   dx,DWORD PTR ds:[esi]
  40b53a:	push   eax
  40b53b:	pop    ebp
  40b53c:	sub    BYTE PTR [esi],cl
  40b53e:	add    cl,BYTE PTR [edi]
  40b540:	shr    DWORD PTR [ebx+0x5e],1
  40b543:	dec    edi
  40b544:	in     al,0x52
  40b546:	std    
  40b547:	(bad)  
  40b548:	adc    al,BYTE PTR [edx]
  40b54a:	mov    bp,0x60df
  40b54e:	out    dx,eax
  40b54f:	pushw  ds
  40b551:	shr    BYTE PTR [edi+0x19],0x3e
  40b555:	add    BYTE PTR [edi-0x31],cl
  40b558:	repnz dec ecx
  40b55a:	xor    BYTE PTR [edx+ecx*4-0x68],dh
  40b55e:	cwde   
  40b55f:	js     0x40b58e
  40b561:	test   esp,edx
  40b563:	xor    DWORD PTR ds:0x143b850b,edi
  40b569:	ja     0x40b505
  40b56b:	pop    ecx
  40b56c:	inc    ebp
  40b56d:	mov    ebp,DWORD PTR [ebx+edi*1+0x37d4d459]
  40b574:	retf   
  40b575:	loop   0x40b5bc
  40b577:	jg     0x40b560
  40b579:	cs mov ebp,0xaa9a5552
  40b57f:	mov    BYTE PTR [ecx+0x6308c3c9],cl
  40b585:	push   ebp
  40b586:	mov    WORD PTR [esi],?
  40b588:	jmp    0x7d4fd3d1
  40b58d:	inc    edx
  40b58e:	sahf   
  40b58f:	int    0x24
  40b591:	mov    ?,ebx
  40b593:	imul   ebp,eax,0xfffffff3
  40b596:	add    ebx,ecx
  40b598:	xchg   DWORD PTR [ebp+0x3d2462c3],eax
  40b59e:	dec    ebp
  40b59f:	xor    edi,DWORD PTR [edx+ebx*4+0x50]
  40b5a3:	jecxz  0x40b5c7
  40b5a5:	dec    esp
  40b5a6:	outs   dx,DWORD PTR ds:[esi]
  40b5a7:	mov    ?,WORD PTR es:[esi]
  40b5aa:	and    esi,ecx
  40b5ac:	and    esp,ebx
  40b5ae:	fwait
  40b5af:	add    dl,BYTE PTR [ecx]
  40b5b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5b2:	scas   eax,DWORD PTR es:[edi]
  40b5b3:	fdivr  QWORD PTR [ecx]
  40b5b5:	jne    0x40b58b
  40b5b7:	cmp    eax,0x54ad822a
  40b5bc:	adc    DWORD PTR [ebx-0x17560e81],eax
  40b5c2:	push   edx
  40b5c3:	jl     0x40b5d1
  40b5c5:	xadd   DWORD PTR [esi-0x3e],esp
  40b5c9:	pop    ebp
  40b5ca:	ds call 0x4a54:0xe4ac8f8
  40b5d2:	aam    0xf
  40b5d4:	dec    eax
  40b5d5:	cmp    eax,0xa8ced477
  40b5da:	mov    edi,0x995039d7
  40b5df:	mov    ah,0x93
  40b5e1:	jl     0x40b624
  40b5e3:	jne    0x40b59d
  40b5e5:	enter  0x472e,0xe4
  40b5e9:	(bad)  
  40b5eb:	mov    ds,WORD PTR [ecx-0xb04e83b]
  40b5f1:	in     al,dx
  40b5f2:	ins    DWORD PTR es:[edi],dx
  40b5f3:	and    DWORD PTR gs:[esi],ebx
  40b5f6:	xchg   DWORD PTR [ebp+0x3ba3a7e8],esi
  40b5fc:	mov    edx,DWORD PTR [esi-0x53db2714]
  40b602:	scas   al,BYTE PTR es:[edi]
  40b603:	stos   BYTE PTR es:[edi],al
  40b604:	cwde   
  40b605:	mov    edx,DWORD PTR [edi]
  40b607:	fild   WORD PTR [ebp-0x11c3e898]
  40b60d:	ret    0xc125
  40b610:	stos   BYTE PTR es:[di],al
  40b612:	mov    dl,0xbb
  40b614:	fisub  WORD PTR [edx+ecx*1-0x31]
  40b618:	icebp  
  40b619:	bound  ecx,QWORD PTR [eax+0x3cf3df9a]
  40b61f:	mov    bh,0x29
  40b621:	xor    esp,DWORD PTR [ebp+0x55279038]
  40b627:	dec    eax
  40b628:	push   ebx
  40b629:	popf   
  40b62a:	inc    ecx
  40b62b:	(bad)  
  40b62c:	and    ebp,DWORD PTR [edi+0x7a]
  40b62f:	jo     0x40b67d
  40b631:	bound  edx,QWORD PTR [ebx]
  40b633:	std    
  40b634:	pop    ecx
  40b635:	and    dl,bl
  40b637:	into   
  40b638:	(bad)  
  40b639:	fsin   
  40b63b:	ja     0x40b6aa
  40b63d:	xchg   esp,eax
  40b63e:	mov    eax,ds:0xb755a8a0
  40b643:	in     al,0x1d
  40b645:	pop    edi
  40b646:	mov    edx,0xc78fadfe
  40b64b:	or     DWORD PTR [eax+ebx*4-0x3d422f29],0x23
  40b653:	push   cs
  40b654:	out    0xbe,al
  40b656:	rcl    BYTE PTR cs:[ebp+0x36f5fdbd],1
  40b65d:	pop    ebp
  40b65e:	mov    bl,0x72
  40b660:	sbb    BYTE PTR fs:[edx+0x4c8cbc70],ch
  40b667:	fdivr  st,st(3)
  40b669:	sbb    eax,0x570c34c4
  40b66e:	or     eax,esi
  40b670:	aam    0x50
  40b672:	hlt    
  40b673:	and    eax,0x394c9ac9
  40b678:	shl    BYTE PTR [edi+edx*1-0x57985e47],1
  40b67f:	push   0x47
  40b681:	push   es
  40b682:	dec    eax
  40b683:	xor    edi,DWORD PTR [edi]
  40b685:	outs   dx,BYTE PTR ds:[esi]
  40b686:	nop
  40b687:	je     0x40b63e
  40b689:	les    esp,FWORD PTR [ecx-0x7d]
  40b68c:	fcmovnbe st,st(1)
  40b68e:	icebp  
  40b68f:	enter  0x1fce,0xf4
  40b693:	daa    
  40b694:	loop   0x40b6cc
  40b696:	imul   esi,DWORD PTR [ecx-0x27],0xf9234b0a
  40b69d:	dec    esp
  40b69e:	adc    DWORD PTR [esi-0x1878b227],0x1f
  40b6a5:	sub    eax,0x3a281d17
  40b6aa:	sub    eax,0x1ece7755
  40b6af:	mov    ds:0x97e55361,al
  40b6b4:	das    
  40b6b5:	les    ecx,FWORD PTR [eax]
  40b6b7:	leave  
  40b6b8:	daa    
  40b6b9:	push   0x95ea4185
  40b6be:	push   ss
  40b6bf:	(bad)  
  40b6c0:	(bad)  
  40b6c1:	and    al,0x26
  40b6c3:	loope  0x40b70e
  40b6c5:	add    DWORD PTR [ebp+0x1674b6e3],ebx
  40b6cb:	cwde   
  40b6cc:	(bad)
  40b6cf:	outs   dx,DWORD PTR ds:[esi]
  40b6d0:	ret    0x4999
  40b6d3:	mov    dl,0xe8
  40b6d5:	out    dx,al
  40b6d6:	cmp    BYTE PTR [eax+eax*2+0x7d2d7bd],al
  40b6dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6de:	in     al,0xce
  40b6e0:	retf   
  40b6e1:	outs   dx,DWORD PTR ds:[esi]
  40b6e2:	jne    0x40b6cc
  40b6e4:	push   esp
  40b6e5:	repnz sbb BYTE PTR [edx+0x16665dcd],ah
  40b6ec:	jo     0x245df0a9
  40b6f2:	retf   0x3d22
  40b6f5:	call   0xe91d:0xc511d1cd
  40b6fc:	pop    ss
  40b6fd:	retf   
  40b6fe:	xor    al,0x77
  40b700:	pusha  
  40b701:	pop    edx
  40b702:	sub    bl,dh
  40b704:	jnp    0x40b69d
  40b706:	ins    BYTE PTR es:[edi],dx
  40b707:	mov    eax,ds:0xa0e273e2
  40b70c:	(bad)  
  40b70d:	mov    WORD PTR [edi+0x2f],cs
  40b710:	add    eax,0x7e0dc44b
  40b715:	(bad)  
  40b717:	push   ebx
  40b718:	pop    ds
  40b719:	sbb    DWORD PTR [edx+0x6bdd8c5],esi
  40b71f:	stc    
  40b720:	cli    
  40b721:	adc    al,0x14
  40b723:	aad    0x26
  40b725:	xchg   DWORD PTR fs:[eax+ebx*1-0x555c7a44],ecx
  40b72d:	call   0x71f7a544
  40b732:	jae    0x40b6f0
  40b734:	call   0xec5b:0xeffb2ac5
  40b73b:	mov    ah,0xa9
  40b73d:	or     al,0x1d
  40b73f:	sar    BYTE PTR [esi-0x24705764],1
  40b745:	sbb    BYTE PTR [ebp*1-0x65fcca],dh
  40b74c:	cmp    ch,BYTE PTR [ebp-0x4e02a68a]
  40b752:	xor    al,ah
  40b754:	mov    edi,0x16c08ba7
  40b759:	or     bh,BYTE PTR [edi]
  40b75b:	popa   
  40b75c:	mov    eax,0x954f5eec
  40b761:	cmc    
  40b762:	in     eax,dx
  40b763:	rcl    BYTE PTR [ecx-0x38],cl
  40b766:	addr16 jnp 0x40b7d0
  40b769:	inc    ecx
  40b76a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b76b:	aad    0x9c
  40b76d:	ja     0x40b712
  40b76f:	addr16 sbb eax,0x8419c06e
  40b775:	je     0x40b79f
  40b777:	repnz or dh,BYTE PTR [ebp+0x6a]
  40b77b:	dec    ecx
  40b77c:	test   al,0x5b
  40b77e:	lea    esp,[esp+ebp*2+0x8aad916]
  40b785:	cdq    
  40b786:	mov    ah,0x9b
  40b788:	jo     0x40b7f8
  40b78a:	shl    DWORD PTR [ebp-0x7757db6e],cl
  40b790:	mov    al,0xcc
  40b792:	pop    ebx
  40b793:	sti    
  40b794:	mov    esi,0x7d08829b
  40b799:	aad    0xaf
  40b79b:	imul   ebp,DWORD PTR [esi],0xb378c0ea
  40b7a1:	mov    eax,ds:0x60eeb2df
  40b7a6:	mov    ebx,0x8b815fc1
  40b7ab:	dec    esp
  40b7ac:	call   0x2b83:0x316e3df2
  40b7b3:	inc    edi
  40b7b4:	in     al,0xb9
  40b7b6:	sub    eax,0xece40000
  40b7bb:	popf   
  40b7bc:	ds and al,0xd3
  40b7bf:	sbb    dh,bh
  40b7c1:	popf   
  40b7c2:	out    0xea,al
  40b7c4:	inc    esp
  40b7c5:	mov    ecx,cs
  40b7c7:	cmp    DWORD PTR [ecx],ebp
  40b7c9:	push   ebx
  40b7ca:	mov    eax,0x180cb99d
  40b7cf:	and    edx,DWORD PTR [esi+ebx*4]
  40b7d2:	int    0xcf
  40b7d4:	or     dh,BYTE PTR [edi+ebx*8+0x267fd01d]
  40b7db:	xor    dh,ah
  40b7dd:	or     eax,0x76b1e44f
  40b7e2:	push   esi
  40b7e3:	ds ret 
  40b7e5:	adc    esi,ebp
  40b7e7:	dec    esi
  40b7e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7e9:	mov    ds:0x8385a9a2,eax
  40b7ee:	dec    esp
  40b7ef:	jno    0x40b83a
  40b7f1:	lea    esi,[ebx-0x6a]
  40b7f4:	pop    ebp
  40b7f5:	adc    al,0xfe
  40b7f7:	into   
  40b7f8:	dec    eax
  40b7f9:	cmp    ebx,ebp
  40b7fb:	fadd   QWORD PTR [esi]
  40b7fd:	xchg   edx,eax
  40b7fe:	sub    cl,dh
  40b800:	out    0xb1,al
  40b802:	push   ds
  40b803:	jne    0x40b82f
  40b805:	pop    ebx
  40b806:	jmp    0x7bc7:0xb435dfb3
  40b80d:	adc    dh,BYTE PTR [eax]
  40b80f:	fs es mov edi,0xce42299f
  40b816:	hlt    
  40b817:	mov    bl,0xf7
  40b819:	ins    DWORD PTR es:[edi],dx
  40b81a:	scas   al,BYTE PTR es:[edi]
  40b81b:	ds dec esp
  40b81d:	and    al,0xdd
  40b81f:	neg    DWORD PTR [esi-0x44]
  40b822:	mov    bh,bl
  40b824:	inc    edx
  40b825:	mov    ecx,0x6c06344b
  40b82a:	sbb    BYTE PTR [ebp+ebp*2-0xf8d910c],dh
  40b831:	xchg   ecx,eax
  40b832:	retf   0xf042
  40b835:	aam    0x6f
  40b837:	dec    ebp
  40b838:	dec    eax
  40b839:	jo     0x40b834
  40b83b:	icebp  
  40b83c:	and    al,0x73
  40b83e:	xor    DWORD PTR [edi+0x40],0x58
  40b842:	mov    cs,WORD PTR [ebx]
  40b844:	(bad)  
  40b845:	leave  
  40b846:	dec    esi
  40b847:	leave  
  40b848:	arpl   WORD PTR [esi-0x21b71119],di
  40b84e:	retf   
  40b84f:	xchg   DWORD PTR [esi],eax
  40b851:	loope  0x40b8cf
  40b853:	mov    ch,0xa1
  40b855:	(bad)  [esi+0x586b29a8]
  40b85b:	sahf   
  40b85c:	jns    0x40b8aa
  40b85e:	push   ecx
  40b85f:	mov    DWORD PTR [eax],ecx
  40b861:	lds    edx,FWORD PTR [eax+esi*1]
  40b864:	jne    0x40b829
  40b866:	lds    edi,FWORD PTR [esp+eax*4+0x3da8fc43]
  40b86d:	xor    esp,DWORD PTR [ecx]
  40b86f:	popa   
  40b870:	xchg   edi,eax
  40b871:	aaa    
  40b872:	sub    dl,BYTE PTR [edi]
  40b874:	mov    al,0x10
  40b876:	xchg   edi,eax
  40b877:	sub    DWORD PTR [edx-0x41],ecx
  40b87a:	mov    ecx,0xf3a762d0
  40b87f:	pop    ss
  40b880:	arpl   WORD PTR [bx+si],bx
  40b883:	push   esp
  40b884:	jno    0x40b83d
  40b886:	cwde   
  40b887:	adc    esp,DWORD PTR [edx]
  40b889:	cdq    
  40b88a:	dec    ecx
  40b88b:	adc    eax,0x8f487488
  40b890:	xor    ch,BYTE PTR [edi-0x3c]
  40b893:	pop    ss
  40b894:	and    ch,ch
  40b896:	xchg   ebx,eax
  40b897:	mov    esi,DWORD PTR [ecx-0x6cea5dc5]
  40b89d:	iret   
  40b89e:	sub    eax,0x1b9910b
  40b8a3:	xchg   ebx,eax
  40b8a4:	pop    ebp
  40b8a5:	aad    0x82
  40b8a7:	mov    ds:0x2a124ba3,eax
  40b8ac:	jbe    0x40b89f
  40b8ae:	dec    eax
  40b8b0:	jae    0x40b8ec
  40b8b2:	ret    0xabdd
  40b8b5:	add    edx,DWORD PTR [bx+0x14]
  40b8b9:	dec    edi
  40b8ba:	fwait
  40b8bb:	aaa    
  40b8bc:	rcl    BYTE PTR [edx+edx*4-0x34f62a3b],0xd4
  40b8c4:	mov    WORD PTR [esi],?
  40b8c6:	push   cs
  40b8c7:	jg     0x40b8db
  40b8c9:	sub    al,0x27
  40b8cb:	mov    ebx,0x699d670f
  40b8d0:	inc    ebx
  40b8d1:	mov    eax,0x3b725ba7
  40b8d6:	jne    0x40b8f8
  40b8d8:	xchg   esp,eax
  40b8d9:	adc    al,0x47
  40b8db:	popf   
  40b8dc:	mov    bl,0xd6
  40b8de:	mov    ebp,0x8f0eb2e4
  40b8e3:	push   es
  40b8e4:	xchg   esi,eax
  40b8e5:	std    
  40b8e6:	stc    
  40b8e7:	or     DWORD PTR [bp+di],esi
  40b8ea:	pop    ebp
  40b8eb:	aas    
  40b8ec:	mov    eax,ds:0x4e0d59c5
  40b8f1:	inc    esi
  40b8f2:	pop    ebx
  40b8f3:	cmp    eax,0x46f65890
  40b8f8:	and    ch,dh
  40b8fa:	mov    eax,?
  40b8fc:	sbb    DWORD PTR [eax],0xffffffa8
  40b8ff:	inc    edi
  40b900:	(bad)  
  40b902:	repnz inc ecx
  40b904:	int    0xa3
  40b906:	cmp    DWORD PTR [ecx],ecx
  40b908:	rcr    ecx,cl
  40b90a:	push   0xffffff97
  40b90c:	leave  
  40b90d:	(bad)  
  40b90e:	or     BYTE PTR [eax+edi*4],bl
  40b911:	xor    al,BYTE PTR [edx]
  40b913:	call   0xd125:0xd3086ad7
  40b91a:	lea    edi,[esi+0x27]
  40b91d:	inc    eax
  40b91e:	dec    esp
  40b91f:	shr    BYTE PTR [edx-0x7caade97],1
  40b925:	jmp    0xefe1:0xa336673a
  40b92c:	iret   
  40b92d:	pushf  
  40b92e:	fucom  st(3)
  40b930:	fisubr DWORD PTR [eax-0x46966f48]
  40b936:	stc    
  40b937:	in     al,0xd4
  40b939:	loope  0x40b8f2
  40b93b:	adc    ah,bl
  40b93d:	test   eax,0xa8dc3252
  40b942:	pop    ds
  40b943:	add    BYTE PTR [edi],dl
  40b945:	pusha  
  40b946:	cmp    al,BYTE PTR [eax+eiz*2]
  40b949:	and    ebx,eax
  40b94b:	in     eax,0x6b
  40b94d:	lods   al,BYTE PTR ds:[esi]
  40b94e:	sahf   
  40b94f:	outs   dx,BYTE PTR ds:[esi]
  40b950:	adc    ecx,esi
  40b952:	mov    eax,ds:0x9eaa7fea
  40b957:	jne    0x40b977
  40b959:	mov    DWORD PTR [edx],ecx
  40b95b:	push   ss
  40b95c:	test   ecx,0xa783acbf
  40b962:	scas   al,BYTE PTR es:[edi]
  40b963:	jge    0x40b8fe
  40b965:	mov    ebx,0xc84e0949
  40b96a:	pop    eax
  40b96b:	and    al,BYTE PTR [eax]
  40b96d:	or     al,BYTE PTR [edx-0x5d]
  40b970:	(bad)  
  40b971:	jg     0x40b936
  40b973:	dec    ebp
  40b974:	adc    DWORD PTR [edi+0x552384a],0x8143713e
  40b97e:	adc    ah,al
  40b980:	popf   
  40b981:	mov    dh,0x5f
  40b983:	mov    ds:0xd3f54191,eax
  40b988:	lds    ebx,FWORD PTR [esi+0x6366e9ca]
  40b98e:	nop
  40b98f:	pop    ebx
  40b990:	pop    eax
  40b991:	dec    edi
  40b992:	cli    
  40b993:	dec    esp
  40b994:	add    BYTE PTR [ebp+0x36],cl
  40b997:	xchg   ebp,eax
  40b998:	pop    esp
  40b999:	jmp    0x40b9fc
  40b99b:	and    BYTE PTR ds:[edx],ah
  40b99e:	push   ebp
  40b99f:	pop    ds
  40b9a0:	add    BYTE PTR [ebx],0xa1
  40b9a3:	jo     0x40b9db
  40b9a5:	test   eax,0xf627ffe5
  40b9aa:	push   ebx
  40b9ab:	push   ds
  40b9ac:	or     edi,edx
  40b9ae:	adc    eax,DWORD PTR [eax+eiz*4]
  40b9b1:	lock (bad) 
  40b9b3:	aas    
  40b9b4:	outs   dx,DWORD PTR ds:[esi]
  40b9b5:	mov    ah,0x7a
  40b9b7:	add    DWORD PTR [edi],eax
  40b9b9:	call   FWORD PTR [ebp+0x53]
  40b9bc:	addr16 mov gs,ebx
  40b9bf:	aam    0x4d
  40b9c1:	push   cs
  40b9c2:	pop    edx
  40b9c3:	bnd jne 0x40ba22
  40b9c6:	mov    ebx,0xadaf530c
  40b9cb:	pushf  
  40b9cc:	adc    al,0x8e
  40b9ce:	aad    0xc2
  40b9d0:	push   0xffffff93
  40b9d2:	add    BYTE PTR [ebx+0x29],al
  40b9d5:	jbe    0x40b97c
  40b9d7:	or     eax,0x19cc3c1f
  40b9dc:	ficomp DWORD PTR [edi]
  40b9de:	mov    ds:0xbc1d080f,al
  40b9e3:	sub    cl,BYTE PTR [ebx+eiz*8+0x710e9774]
  40b9ea:	icebp  
  40b9eb:	div    cl
  40b9ed:	cmp    ch,dl
  40b9ef:	data16 (bad) 
  40b9f1:	stc    
  40b9f2:	pop    edx
  40b9f3:	cmp    al,0xe5
  40b9f5:	mov    ah,0x2e
  40b9f7:	cmp    eax,0x34279622
  40b9fc:	aaa    
  40b9fd:	sub    DWORD PTR [edi+0x72],ebp
  40ba00:	xchg   esp,eax
  40ba01:	mov    ss,WORD PTR [ebx]
  40ba03:	xchg   ebx,eax
  40ba04:	inc    edi
  40ba05:	push   ecx
  40ba06:	pop    eax
  40ba07:	mov    ecx,0x15dbd386
  40ba0c:	mov    ds:0xce7d0e67,al
  40ba11:	inc    esp
  40ba12:	add    al,0x9f
  40ba14:	call   0x43676cb9
  40ba19:	or     ebx,DWORD PTR [eax+ebx*2-0x929c142]
  40ba20:	and    dh,BYTE PTR [esi+0x20]
  40ba23:	pop    ds
  40ba24:	fisub  WORD PTR [eax-0x13079aae]
  40ba2a:	push   esi
  40ba2b:	xchg   ebx,eax
  40ba2c:	js     0x40b9e3
  40ba2e:	mov    ah,0xbe
  40ba30:	fld    DWORD PTR [ebp+0x144ed65a]
  40ba36:	xor    eax,eax
  40ba38:	xor    esp,edi
  40ba3a:	(bad)  
  40ba3c:	push   edi
  40ba3d:	adc    BYTE PTR [ebx],bh
  40ba3f:	fbld   TBYTE PTR [ebx-0x2b]
  40ba42:	mov    dl,0x7
  40ba44:	xchg   esp,eax
  40ba45:	das    
  40ba46:	xor    bl,BYTE PTR [eax]
  40ba48:	jbe    0x40ba2a
  40ba4a:	cs jp  0x40ba69
  40ba4d:	sub    al,0xdb
  40ba4f:	ret    
  40ba50:	mov    dh,0x14
  40ba52:	push   cs
  40ba53:	cs out 0x6d,al
  40ba56:	scas   al,BYTE PTR es:[edi]
  40ba57:	ins    BYTE PTR es:[edi],dx
  40ba58:	lods   eax,DWORD PTR ds:[esi]
  40ba59:	dec    edi
  40ba5a:	std    
  40ba5b:	xor    ebp,edi
  40ba5d:	mov    bl,0x46
  40ba5f:	mov    dh,0x4a
  40ba61:	je     0x40ba7b
  40ba63:	ret    0x81ca
  40ba66:	js     0x40ba3a
  40ba68:	out    dx,al
  40ba69:	xlat   BYTE PTR ds:[ebx]
  40ba6a:	jnp    0x40b9f9
  40ba6c:	xchg   ecx,eax
  40ba6d:	mov    ah,0x78
  40ba6f:	mov    DWORD PTR [ecx],edx
  40ba71:	push   0xffffff9c
  40ba73:	mov    ss,WORD PTR ds:0xfa6b7916
  40ba79:	mov    esp,0xa8f89072
  40ba7e:	push   es
  40ba7f:	(bad)
  40ba83:	pop    ecx
  40ba84:	mov    ebx,0x15cfdf96
  40ba89:	lods   eax,DWORD PTR ds:[esi]
  40ba8a:	movnti DWORD PTR [esi-0x30],edx
  40ba8e:	mov    al,ds:0x3f51bf0
  40ba93:	jae    0x40ba5d
  40ba95:	cmp    al,0x8a
  40ba97:	ja     0x40ba3e
  40ba99:	sti    
  40ba9a:	inc    BYTE PTR [esp+ebx*8]
  40ba9d:	push   esi
  40ba9e:	imul   DWORD PTR [edi+0x1e6993c6]
  40baa4:	push   ss
  40baa5:	in     eax,0x78
  40baa7:	jne    0x40bad1
  40baa9:	adc    cl,ch
  40baab:	sbb    BYTE PTR [esi],ch
  40baad:	jl     0x40bad6
  40baaf:	xor    bl,BYTE PTR [ebx]
  40bab1:	leave  
  40bab2:	scas   eax,DWORD PTR es:[edi]
  40bab3:	add    eax,ebp
  40bab5:	or     eax,0xe0c874d2
  40baba:	sub    eax,0x3b56cc8c
  40babf:	fdivr  QWORD PTR [ebx]
  40bac1:	js     0x40bb23
  40bac3:	or     edi,DWORD PTR [esi]
  40bac5:	xor    al,0x54
  40bac7:	mov    eax,DWORD PTR [esi-0x2f]
  40baca:	push   es
  40bacb:	xchg   esi,eax
  40bacc:	dec    ebx
  40bacd:	sub    eax,0x40c82767
  40bad2:	sbb    DWORD PTR [esi+0x2b002a33],edi
  40bad8:	cli    
  40bad9:	push   cs
  40bada:	lods   eax,DWORD PTR ds:[esi]
  40badb:	sbb    cl,bh
  40badd:	xchg   ecx,eax
  40bade:	xor    eax,0x982fcd74
  40bae3:	fbld   TBYTE PTR ds:0x527c0a8c
  40bae9:	lahf   
  40baea:	and    al,0x66
  40baec:	pop    esp
  40baed:	pop    ebp
  40baee:	into   
  40baef:	or     BYTE PTR [ecx],ah
  40baf1:	es dec ebp
  40baf3:	or     edi,ebx
  40baf5:	add    BYTE PTR [ebp-0x6f510f0e],al
  40bafb:	clc    
  40bafc:	xor    eax,0xc66f7d35
  40bb01:	(bad)  
  40bb02:	loope  0x40baca
  40bb04:	hlt    
  40bb05:	jecxz  0x40bb01
  40bb07:	xchg   esi,eax
  40bb08:	push   edi
  40bb09:	pop    ebp
  40bb0a:	adc    al,dh
  40bb0c:	out    dx,eax
  40bb0d:	jmp    0x40bb49
  40bb0f:	sar    edi,0xa3
  40bb12:	sti    
  40bb13:	push   es
  40bb14:	mov    ecx,0x47817513
  40bb19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb1a:	mov    ecx,0xda6c6052
  40bb1f:	sub    BYTE PTR [ebx+0x2262c314],cl
  40bb25:	out    dx,eax
  40bb26:	mov    ch,0x9f
  40bb28:	in     al,dx
  40bb29:	sub    eax,0x179385ca
  40bb2e:	or     dl,ah
  40bb30:	sti    
  40bb31:	cmp    BYTE PTR [edx+0xc],cl
  40bb34:	xor    al,0x6e
  40bb36:	retf   
  40bb37:	or     ecx,esp
  40bb39:	pop    esp
  40bb3a:	std    
  40bb3b:	dec    edi
  40bb3c:	js     0x40bbaf
  40bb3e:	fsub   st,st(7)
  40bb40:	gs sub al,0x4d
  40bb43:	std    
  40bb44:	push   edx
  40bb45:	adc    eax,eax
  40bb47:	fwait
  40bb48:	sbb    eax,0x9228fd70
  40bb4d:	test   eax,0x936aba65
  40bb52:	mov    cs,WORD PTR [ebx]
  40bb54:	daa    
  40bb55:	ins    DWORD PTR es:[edi],dx
  40bb56:	dec    ebp
  40bb57:	aad    0xe2
  40bb59:	or     eax,0x5cee22ff
  40bb5e:	test   BYTE PTR [ecx+ebp*4],0x47
  40bb62:	adc    al,0xdd
  40bb64:	dec    esi
  40bb65:	sub    DWORD PTR [ebx-0x63],0x77bd5421
  40bb6c:	sbb    ebx,DWORD PTR [edx+0x13aa9448]
  40bb72:	rol    ebx,0x5
  40bb75:	mov    esi,0xfc82fab4
  40bb7a:	sub    DWORD PTR [eax+edx*2-0x179fd013],ecx
  40bb81:	cmp    DWORD PTR [ecx-0x74606244],0x7d2dda1d
  40bb8b:	fldenv [ebp-0x46ca36b8]
  40bb91:	(bad)  [eax+0x5f]
  40bb94:	inc    esi
  40bb95:	add    al,0xec
  40bb97:	retf   
  40bb98:	sbb    eax,0x4862a821
  40bb9d:	xlat   BYTE PTR ds:[ebx]
  40bb9e:	dec    edx
  40bb9f:	push   cs
  40bba0:	xchg   esi,eax
  40bba1:	dec    ecx
  40bba2:	retf   0x2d87
  40bba5:	lahf   
  40bba6:	mov    ecx,0xfaa885a7
  40bbab:	or     BYTE PTR [ebx-0x2c],dl
  40bbae:	fwait
  40bbaf:	loopne 0x40bb37
  40bbb1:	mov    ebx,DWORD PTR [ebx+0x6efbb146]
  40bbb7:	mov    edx,0x7b34c787
  40bbbc:	sub    edx,DWORD PTR [edx]
  40bbbe:	lods   al,BYTE PTR ds:[esi]
  40bbbf:	aaa    
  40bbc0:	iret   
  40bbc1:	shr    edi,1
  40bbc3:	add    edx,DWORD PTR [ecx+0x2]
  40bbc6:	gs aad 0xc6
  40bbc9:	inc    esi
  40bbca:	ror    BYTE PTR [esi-0x39],0x32
  40bbce:	(bad)  
  40bbcf:	or     al,cl
  40bbd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbd2:	dec    esp
  40bbd3:	xchg   ecx,eax
  40bbd4:	adc    cl,cl
  40bbd6:	sub    eax,0xee3b7aef
  40bbdb:	mov    al,0x72
  40bbdd:	push   es
  40bbde:	loope  0x40bc0d
  40bbe0:	push   ss
  40bbe1:	pop    ds
  40bbe2:	adc    BYTE PTR [esi-0x754d2d23],ah
  40bbe8:	pop    eax
  40bbe9:	jne    0x40bbe2
  40bbeb:	mov    bh,0xea
  40bbed:	mov    dl,0xdb
  40bbef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbf0:	mov    bl,0x39
  40bbf2:	or     BYTE PTR [eax-0x28],al
  40bbf5:	sbb    DWORD PTR [ebx+ebx*4+0x6d],ebp
  40bbf9:	xchg   esi,eax
  40bbfa:	mov    eax,ds:0x59746c36
  40bbff:	fiadd  DWORD PTR [ebx+edi*4]
  40bc02:	(bad)  
  40bc03:	and    bh,BYTE PTR [esi-0x625106cb]
  40bc09:	xor    bh,BYTE PTR [ecx-0x33]
  40bc0c:	adc    ecx,DWORD PTR [ebp+0x1e76cd23]
  40bc12:	dec    eax
  40bc13:	adc    eax,esp
  40bc15:	xlat   BYTE PTR ds:[ebx]
  40bc16:	pop    fs
  40bc18:	pop    ecx
  40bc19:	pop    eax
  40bc1a:	dec    edx
  40bc1b:	imul   eax,DWORD PTR [ebx],0xffffff82
  40bc1e:	add    al,0xab
  40bc20:	repnz std 
  40bc22:	mov    esi,edx
  40bc24:	in     al,dx
  40bc25:	lahf   
  40bc26:	call   0xac74:0xd7d710ec
  40bc2d:	nop
  40bc2e:	idiv   BYTE PTR [ebx-0x1311cb6b]
  40bc34:	(bad)  
  40bc35:	mov    esi,0x289173db
  40bc3a:	add    bh,BYTE PTR [edx]
  40bc3c:	inc    esp
  40bc3d:	int    0xec
  40bc3f:	push   ebx
  40bc40:	leave  
  40bc41:	in     al,0x6d
  40bc43:	or     edi,ebx
  40bc45:	and    DWORD PTR [edi],esp
  40bc47:	retf   0xa325
  40bc4a:	mov    bh,0x94
  40bc4c:	(bad)  
  40bc4d:	out    dx,eax
  40bc4e:	adc    dh,BYTE PTR [ecx]
  40bc50:	jmp    0x40bc29
  40bc52:	or     DWORD PTR [edx-0xeb0397e],0x1b
  40bc59:	popa   
  40bc5a:	adc    al,0xb5
  40bc5c:	and    al,0x7e
  40bc5e:	je     0x40bc83
  40bc60:	rol    BYTE PTR [eax-0x3c],1
  40bc63:	test   eax,0x545ba8e1
  40bc68:	push   ebp
  40bc69:	mov    es,WORD PTR [ebp+0x5cf95145]
  40bc6f:	call   0xbc6463d9
  40bc74:	sub    eax,ecx
  40bc76:	mov    al,ch
  40bc78:	push   eax
  40bc79:	push   ebx
  40bc7a:	lods   eax,DWORD PTR ds:[esi]
  40bc7b:	dec    ebx
  40bc7c:	dec    edi
  40bc7d:	mov    ah,0x6d
  40bc7f:	xor    dh,al
  40bc81:	ret    0x73e2
  40bc84:	xchg   esp,eax
  40bc85:	ss mov ebx,0xbeb5ec1b
  40bc8b:	pop    ebx
  40bc8c:	aas    
  40bc8d:	adc    ecx,ebx
  40bc8f:	xchg   esi,eax
  40bc90:	mov    eax,0x8c5cd5a
  40bc95:	cld    
  40bc96:	out    dx,eax
  40bc97:	push   edi
  40bc98:	mov    edi,0x8cfe3c97
  40bc9d:	sahf   
  40bc9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc9f:	adc    bl,dl
  40bca1:	popf   
  40bca2:	xlat   BYTE PTR ds:[ebx]
  40bca3:	ret    
  40bca4:	or     eax,0x3b465aee
  40bca9:	pusha  
  40bcaa:	dec    ecx
  40bcab:	dec    esp
  40bcac:	xor    eax,0xc7175f47
  40bcb1:	je     0x40bca4
  40bcb3:	pop    ds
  40bcb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcb5:	imul   eax,DWORD PTR [edx],0x14
  40bcb8:	xchg   ecx,eax
  40bcb9:	fsub   DWORD PTR [edx]
  40bcbb:	mov    al,BYTE PTR [esi-0x1cc78c9d]
  40bcc1:	iret   
  40bcc2:	dec    esp
  40bcc3:	xor    dl,BYTE PTR ds:0x498db115
  40bcc9:	mov    ebp,0x4b710c97
  40bcce:	enter  0x1430,0xda
  40bcd2:	cld    
  40bcd3:	test   eax,ebp
  40bcd5:	mov    edx,cr6
  40bcd8:	out    dx,al
  40bcd9:	ret    0x5506
  40bcdc:	dec    esi
  40bcdd:	mov    eax,0x4f7943aa
  40bce2:	mov    eax,ds:0x675a1523
  40bce7:	sti    
  40bce8:	push   ss
  40bce9:	mov    BYTE PTR [eax-0x5a],al
  40bcec:	push   esp
  40bced:	inc    esi
  40bcee:	jae    0x40bd6c
  40bcf0:	ret    0x2344
  40bcf3:	data16 loope 0x40bd36
  40bcf6:	or     BYTE PTR [ebx+eax*4-0x1d3e782e],ch
  40bcfd:	repz sub bl,BYTE PTR [ebp-0x50]
  40bd01:	aad    0xcf
  40bd03:	call   0x30ee5c0
  40bd08:	push   eax
  40bd09:	enter  0x8dd4,0x1d
  40bd0d:	jl     0x40bd15
  40bd0f:	or     dh,ch
  40bd11:	dec    eax
  40bd12:	sub    eax,0x88f5e6d
  40bd17:	fs (bad) 
  40bd19:	mov    ebx,0xa0b76005
  40bd1e:	icebp  
  40bd1f:	pop    ds
  40bd20:	push   0x1354b0f2
  40bd25:	mov    edx,0x6904ebc7
  40bd2a:	push   ss
  40bd2b:	cdq    
  40bd2c:	lds    ecx,FWORD PTR [eax-0x59efa212]
  40bd32:	aam    0x38
  40bd34:	ss into 
  40bd36:	cmp    BYTE PTR fs:[ecx+0x9],ch
  40bd3a:	mov    ebx,0x754b7b9f
  40bd3f:	sbb    ah,BYTE PTR [edx]
  40bd41:	and    al,0x48
  40bd43:	cmp    DWORD PTR [edx-0x52],eax
  40bd46:	xchg   edx,eax
  40bd47:	jmp    0xa7aa:0xbe2a14d1
  40bd4e:	(bad)  
  40bd4f:	std    
  40bd50:	and    DWORD PTR [edx-0x1b55f3b0],0x7caaea77
  40bd5a:	and    BYTE PTR [ecx],al
  40bd5c:	ja     0x40bd48
  40bd5e:	add    al,0x22
  40bd60:	mov    ebp,DWORD PTR [edx+0x11]
  40bd63:	test   al,0x65
  40bd65:	xchg   DWORD PTR es:[ebp+0x30a2ce51],eax
  40bd6c:	dec    BYTE PTR [ebx-0x2292d1fd]
  40bd72:	fstp   DWORD PTR [ecx+eax*4+0x71]
  40bd76:	fidivr WORD PTR ds:0x5af8d287
  40bd7c:	repz in al,dx
  40bd7e:	clc    
  40bd7f:	test   DWORD PTR ds:0xc32d1b22,eax
  40bd85:	xchg   esi,eax
  40bd86:	jbe    0x40bd2d
  40bd88:	pop    es
  40bd89:	(bad)  
  40bd8a:	jmp    0x43e2:0x42caaff8
  40bd91:	jnp    0x40bd49
  40bd93:	out    0xa2,eax
  40bd95:	sbb    eax,0x85404daa
  40bd9a:	mov    BYTE PTR [ebx-0x38],0x47
  40bd9e:	out    dx,al
  40bd9f:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bda1:	cmp    DWORD PTR [eax-0x7e1bbbc2],esi
  40bda7:	ss dec esi
  40bda9:	inc    ebx
  40bdaa:	pop    edi
  40bdab:	cmc    
  40bdac:	pop    edi
  40bdad:	stc    
  40bdae:	popf   
  40bdaf:	test   eax,0xedfeef50
  40bdb4:	pop    es
  40bdb5:	jp     0x40bdb1
  40bdb7:	pop    eax
  40bdb8:	pop    ecx
  40bdb9:	push   edi
  40bdba:	and    edi,eax
  40bdbc:	mov    esi,0x1c73534d
  40bdc1:	es test al,0x9f
  40bdc4:	push   edi
  40bdc5:	xor    DWORD PTR [eax],esp
  40bdc7:	and    DWORD PTR [edi-0x33],0x3bf4c5
  40bdce:	mov    dh,0x3c
  40bdd0:	test   eax,0x3a2523b4
  40bdd5:	mov    esp,0x1a319366
  40bdda:	xor    al,BYTE PTR [edi-0x783a71d0]
  40bde0:	xor    eax,0xe89cce2a
  40bde5:	or     al,0x70
  40bde7:	pop    eax
  40bde8:	sub    eax,0x27f2eb7b
  40bded:	fdivr  QWORD PTR [edx]
  40bdef:	stos   DWORD PTR es:[edi],eax
  40bdf0:	(bad)
  40bdf3:	ror    BYTE PTR [ebx+0x4af8f8e9],cl
  40bdf9:	mov    ah,0x19
  40bdfb:	sub    eax,0xac767d82
  40be00:	sbb    bl,al
  40be02:	xchg   ebx,eax
  40be03:	aam    0xf8
  40be05:	pop    ebp
  40be06:	cmp    edi,ecx
  40be08:	jmp    0x40be66
  40be0a:	cmc    
  40be0b:	dec    ebx
  40be0c:	leave  
  40be0d:	pop    ss
  40be0e:	out    0x9e,eax
  40be10:	xchg   esp,eax
  40be11:	clc    
  40be12:	cmp    eax,0x9042686f
  40be17:	int    0xc1
  40be19:	xchg   DWORD PTR [esi+0x4230e295],eax
  40be1f:	(bad)  
  40be20:	aad    0x48
  40be22:	push   cs
  40be23:	sbb    al,0x86
  40be25:	mov    bl,0x8a
  40be27:	out    dx,eax
  40be28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be29:	or     eax,0x48df710b
  40be2e:	sub    DWORD PTR [esi+ebx*2],0xffffffb3
  40be32:	xor    ah,BYTE PTR [ebx+0x9]
  40be35:	jae    0x40be54
  40be37:	inc    ecx
  40be38:	mov    ebp,0x57368b23
  40be3d:	mov    ah,BYTE PTR [ebp+0x8]
  40be40:	mov    esi,0x73f77078
  40be45:	(bad)  
  40be46:	cld    
  40be47:	retf   0x2c93
  40be4a:	pop    es
  40be4b:	outs   dx,BYTE PTR ds:[esi]
  40be4c:	and    eax,0x3450d0e9
  40be51:	js     0x40be18
  40be53:	dec    eax
  40be54:	(bad)  
  40be55:	adc    DWORD PTR ds:0x9e2c9820,ebp
  40be5b:	sub    al,0xbf
  40be5d:	ins    DWORD PTR es:[edi],dx
  40be5e:	adc    dl,BYTE PTR [edx-0x54]
  40be61:	xor    DWORD PTR [ebp-0x18d8bdd],ebx
  40be67:	popa   
  40be68:	das    
  40be69:	jge    0x40bec1
  40be6b:	or     bl,bl
  40be6d:	(bad)  
  40be6e:	cmc    
  40be6f:	in     al,0xf5
  40be71:	push   ds
  40be72:	xchg   edi,eax
  40be73:	imul   DWORD PTR ds:0x48b9ff67
  40be79:	inc    edx
  40be7a:	fdivr  DWORD PTR [edx]
  40be7c:	mov    ds,WORD PTR [edx+0x6a]
  40be7f:	sub    al,0x9
  40be81:	add    BYTE PTR [eax+ecx*4],bh
  40be84:	es jecxz 0x40bf05
  40be87:	add    DWORD PTR [edx],0xffffff99
  40be8a:	aad    0xdf
  40be8c:	aad    0xc2
  40be8e:	xor    DWORD PTR [esi+0x33],ebx
  40be91:	popf   
  40be92:	xchg   ebx,eax
  40be93:	mov    ds:0x31426068,eax
  40be98:	pop    eax
  40be99:	inc    eax
  40be9a:	es leave 
  40be9c:	ud1    edx,ebx
  40be9f:	inc    edx
  40bea0:	inc    ebp
  40bea1:	pop    esi
  40bea2:	xor    BYTE PTR [eax-0x17],cl
  40bea5:	pushf  
  40bea6:	lea    esi,[edx]
  40bea8:	mov    eax,ds:0x25ff3d49
  40bead:	pop    edx
  40beae:	shl    edx,0x5b
  40beb1:	or     eax,0x3eed05fb
  40beb6:	clc    
  40beb7:	mov    ah,0x40
  40beb9:	or     dh,BYTE PTR [eax-0x7ee9d891]
  40bebf:	sbb    al,0x7a
  40bec1:	jns    0x40bf22
  40bec3:	stc    
  40bec4:	mov    eax,0xcd22f0c0
  40bec9:	ins    BYTE PTR es:[edi],dx
  40beca:	or     al,0xac
  40becc:	lock inc ecx
  40bece:	jae    0x40bec1
  40bed0:	in     al,dx
  40bed1:	push   ebx
  40bed2:	shr    BYTE PTR [esi-0x74eb8489],1
  40bed8:	shl    BYTE PTR [ebp+0x62],1
  40bedb:	inc    ecx
  40bedc:	or     eax,0xda75b5a9
  40bee1:	jp     0x40beee
  40bee3:	call   FWORD PTR [esi]
  40bee5:	adc    DWORD PTR [ebx-0x69eddaf1],0xec7e2d8b
  40beef:	sbb    al,0xba
  40bef1:	lea    edi,[ebp+esi*8-0x51]
  40bef5:	push   ebp
  40bef6:	pop    ebx
  40bef7:	and    al,0x4c
  40bef9:	mov    eax,ds:0x67bd0ea8
  40befe:	inc    ebp
  40beff:	ja     0x40bf03
  40bf01:	push   ds
  40bf02:	sub    ebp,esp
  40bf04:	sti    
  40bf05:	ret    0x1a4b
  40bf08:	outs   dx,DWORD PTR ds:[esi]
  40bf09:	pop    eax
  40bf0a:	outs   dx,BYTE PTR ds:[esi]
  40bf0b:	stc    
  40bf0c:	stc    
  40bf0d:	mov    eax,edi
  40bf0f:	mov    esp,0x802733ed
  40bf14:	push   ds
  40bf15:	or     eax,0x8f268c23
  40bf1a:	mov    dl,0x90
  40bf1c:	cs stc 
  40bf1e:	cld    
  40bf1f:	lahf   
  40bf20:	dec    esp
  40bf21:	ret    
  40bf22:	xchg   ebx,eax
  40bf23:	icebp  
  40bf24:	mov    al,0x2b
  40bf26:	sar    BYTE PTR [ecx],1
  40bf28:	in     eax,0xff
  40bf2a:	mov    bh,0xfd
  40bf2c:	dec    eax
  40bf2d:	fwait
  40bf2e:	pop    ds
  40bf2f:	cmp    ah,bh
  40bf31:	cmp    eax,0x91e1a7db
  40bf36:	push   es
  40bf37:	stc    
  40bf38:	jae    0x40bf6f
  40bf3a:	or     DWORD PTR [ebp-0x7e1e3f59],edi
  40bf40:	popa   
  40bf41:	xor    al,0x1
  40bf43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf44:	std    
  40bf45:	div    BYTE PTR [edi-0x983cbf]
  40bf4b:	add    edx,DWORD PTR [eax]
  40bf4d:	sar    BYTE PTR [edi+0x40128b3c],1
  40bf53:	fsubr  QWORD PTR [ebx]
  40bf55:	jle    0x40bfd3
  40bf57:	pushf  
  40bf58:	test   al,0x85
  40bf5a:	ss out 0x89,al
  40bf5d:	and    edx,ecx
  40bf5f:	jmp    0x40bf48
  40bf61:	xchg   ecx,eax
  40bf62:	in     eax,dx
  40bf63:	fidivr DWORD PTR [ecx+0x50fc42d7]
  40bf69:	inc    eax
  40bf6a:	mov    ebx,0xa5c1ea94
  40bf6f:	repnz dec ebx
  40bf71:	ss mov edi,0xcf6fa6c3
  40bf77:	jmp    0x40bf44
  40bf79:	mov    eax,0xf20502bf
  40bf7e:	xchg   ebx,eax
  40bf7f:	stos   DWORD PTR es:[edi],eax
  40bf80:	mov    eax,ds:0xe192484f
  40bf85:	and    bl,BYTE PTR [edx+0x7d223574]
  40bf8b:	fstp   QWORD PTR ds:0xa77126be
  40bf91:	(bad)  
  40bf92:	(bad)  
  40bf94:	cmp    ebp,edi
  40bf96:	bound  ecx,QWORD PTR [edx]
  40bf98:	inc    ebp
  40bf99:	jl     0x40bf6e
  40bf9b:	ds dec ebp
  40bf9d:	mov    ah,0x57
  40bf9f:	lock sub edi,edi
  40bfa2:	stos   DWORD PTR es:[edi],eax
  40bfa3:	xor    BYTE PTR [ebp-0x5d67f80c],al
  40bfa9:	stos   BYTE PTR es:[edi],al
  40bfaa:	aam    0x2c
  40bfac:	(bad)  
  40bfad:	lock retf 
  40bfaf:	scas   al,BYTE PTR es:[edi]
  40bfb0:	sti    
  40bfb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfb2:	sbb    BYTE PTR [edx],cl
  40bfb4:	mov    edx,fs
  40bfb6:	cmp    edi,eax
  40bfb8:	stos   BYTE PTR es:[edi],al
  40bfb9:	xor    eax,0x9153e279
  40bfbe:	cld    
  40bfbf:	pop    edi
  40bfc0:	or     esp,DWORD PTR [edi-0x661336f0]
  40bfc6:	cli    
  40bfc7:	scas   al,BYTE PTR es:[edi]
  40bfc8:	sar    BYTE PTR [edx],0x8f
  40bfcb:	add    BYTE PTR [esi+eiz*8+0x28085135],0xd3
  40bfd3:	aaa    
  40bfd4:	mov    dh,0xa3
  40bfd6:	xor    BYTE PTR [edi+0x1f],bl
  40bfd9:	fimul  WORD PTR [ebp+0x15]
  40bfdc:	and    esp,DWORD PTR [ebx]
  40bfde:	push   0x98f7dd7c
  40bfe3:	ss mov al,0x16
  40bfe6:	test   bh,0x7b
  40bfe9:	call   0xefdab5f8
  40bfee:	mov    bh,0xac
  40bff0:	adc    BYTE PTR [ecx+0x6d],0x5e
  40bff4:	mov    gs,esi
  40bff6:	ins    DWORD PTR es:[edi],dx
  40bff7:	cmc    
  40bff8:	xchg   esi,eax
  40bff9:	adc    BYTE PTR [edx-0x42971f47],ah
  40bfff:	test   edx,0x4ebe40e1
  40c005:	mov    ebx,0x83595627
  40c00a:	leave  
  40c00b:	out    dx,eax
  40c00c:	mov    eax,0xacd413da
  40c011:	mov    dl,0xa6
  40c013:	aaa    
  40c014:	lea    esp,[esi+0x5a165b2]
  40c01a:	mov    dl,0xac
  40c01c:	leave  
  40c01d:	adc    al,dh
  40c01f:	dec    esi
  40c020:	fild   QWORD PTR [ebx-0x62]
  40c023:	int    0x7e
  40c025:	mov    bh,0xca
  40c027:	loop   0x40c064
  40c029:	xor    ecx,eax
  40c02b:	lds    eax,FWORD PTR [edx+esi*2]
  40c02e:	lgs    ebx,FWORD PTR [eax+0x41]
  40c032:	add    ch,BYTE PTR [edx+0x53dfe6f1]
  40c038:	jmp    0x3c10:0x80fc4526
  40c03f:	scas   eax,DWORD PTR es:[edi]
  40c040:	bound  eax,QWORD PTR [edx-0x3c230511]
  40c046:	inc    ebx
  40c047:	mov    eax,0xe229a611
  40c04c:	mov    esp,0xcc53e86b
  40c051:	xrelease xchg DWORD PTR [eax+0x45],eax
  40c055:	xchg   DWORD PTR [eax-0x6707a504],ebp
  40c05b:	mov    esp,0x98780809
  40c060:	inc    edi
  40c061:	or     esp,edx
  40c063:	mov    bl,0xc
  40c065:	add    edi,ebx
  40c067:	rol    BYTE PTR [esi+0x13],0x39
  40c06b:	xchg   ecx,eax
  40c06c:	push   ebx
  40c06d:	inc    ebp
  40c06e:	inc    esi
  40c06f:	xor    DWORD PTR [ecx+ecx*2-0x77a6ebbd],esi
  40c076:	rcr    edi,1
  40c078:	enter  0x8502,0xd3
  40c07c:	out    dx,al
  40c07d:	fisttp QWORD PTR cs:[ecx-0x2b27c8ba]
  40c084:	xchg   ebx,eax
  40c085:	outs   dx,BYTE PTR ds:[esi]
  40c086:	jle    0x40c072
  40c088:	adc    BYTE PTR [ebp+0x7114db85],bl
  40c08e:	fdiv   QWORD PTR [edi]
  40c090:	xor    al,0xaa
  40c092:	ins    BYTE PTR es:[edi],dx
  40c093:	mov    dl,0x1b
  40c095:	test   eax,0xb72c1b2c
  40c09a:	stos   DWORD PTR es:[edi],eax
  40c09b:	daa    
  40c09c:	cli    
  40c09d:	pop    ds
  40c09e:	fdivr  QWORD PTR [ebx+0x466fb766]
  40c0a4:	ja     0x40c06a
  40c0a6:	aas    
  40c0a7:	in     eax,0x4b
  40c0a9:	xor    DWORD PTR [esi-0x7f],ebp
  40c0ac:	aaa    
  40c0ad:	pop    edx
  40c0ae:	and    BYTE PTR ds:0xd4db6d16,cl
  40c0b4:	lea    esi,[ebp-0x33f90a34]
  40c0ba:	fidiv  WORD PTR [edi+0x41]
  40c0bd:	jo     0x40c080
  40c0bf:	jmp    FWORD PTR [esi+0x510e5a21]
  40c0c5:	out    0xe4,eax
  40c0c7:	mov    bl,0x9
  40c0c9:	mov    edi,0xc049cf60
  40c0ce:	cmp    esi,0x95c7b60c
  40c0d4:	into   
  40c0d5:	stos   DWORD PTR es:[edi],eax
  40c0d6:	xchg   ecx,eax
  40c0d7:	pop    es
  40c0d8:	ror    DWORD PTR [edx],cl
  40c0da:	lods   al,BYTE PTR ds:[esi]
  40c0db:	out    dx,eax
  40c0dc:	adc    ebp,DWORD PTR [esi-0x2]
  40c0df:	scas   al,BYTE PTR es:[edi]
  40c0e0:	aaa    
  40c0e1:	adc    eax,0x8212a701
  40c0e6:	sub    DWORD PTR [ebp+0x5f38e410],ebp
  40c0ec:	pop    ss
  40c0ed:	or     BYTE PTR [edx-0x10],bl
  40c0f0:	inc    edx
  40c0f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0f2:	push   0x40f93b77
  40c0f7:	nop
  40c0f8:	je     0x40c14c
  40c0fa:	mov    cl,0x23
  40c0fc:	rol    DWORD PTR [esi-0x30b59060],0x60
  40c103:	sbb    esp,ebp
  40c105:	jp     0x40c13a
  40c107:	mov    eax,ds:0x4488998f
  40c10c:	aas    
  40c10d:	outs   dx,BYTE PTR ds:[esi]
  40c10e:	ret    
  40c10f:	mov    eax,ds:0xf5613038
  40c114:	enter  0x19c3,0x35
  40c118:	push   edi
  40c119:	push   esp
  40c11a:	pop    ebx
  40c11b:	inc    edi
  40c11c:	cmp    al,0x48
  40c11e:	sahf   
  40c11f:	xchg   esp,eax
  40c120:	(bad)
  40c124:	lea    edi,[edi-0x2b]
  40c127:	fiadd  DWORD PTR [edi]
  40c129:	push   ss
  40c12a:	(bad)  
  40c12b:	ins    DWORD PTR es:[edi],dx
  40c12c:	das    
  40c12d:	push   esp
  40c12e:	or     bh,BYTE PTR [edx-0x24801149]
  40c134:	inc    ecx
  40c135:	push   ebx
  40c136:	movups xmm3,xmm3
  40c139:	inc    esi
  40c13a:	xchg   BYTE PTR [esi],dl
  40c13c:	or     esi,DWORD PTR [ecx-0x70]
  40c13f:	shr    DWORD PTR [edi-0x6b],1
  40c142:	pushf  
  40c143:	and    BYTE PTR [ecx+0x48b179],dl
  40c149:	xor    eax,0xcf427638
  40c14e:	leave  
  40c14f:	push   esi
  40c150:	xor    BYTE PTR [edx],bl
  40c152:	in     eax,dx
  40c153:	out    dx,al
  40c154:	dec    ecx
  40c155:	push   esi
  40c156:	mov    ss,WORD PTR [esi-0x67b9a915]
  40c15c:	ja     0x40c1b6
  40c15e:	retf   
  40c15f:	js     0x40c1ae
  40c161:	mov    bh,0xfe
  40c163:	leave  
  40c164:	mov    esp,0xc723bccc
  40c169:	pop    es
  40c16a:	dec    eax
  40c16b:	or     DWORD PTR [edx],ebx
  40c16d:	retf   0x8827
  40c170:	lea    esp,[edx-0x4898a7e5]
  40c176:	mov    ch,0x4d
  40c178:	mov    edx,ds
  40c17a:	adc    bl,ch
  40c17c:	cs inc ebp
  40c17e:	leave  
  40c17f:	inc    esi
  40c180:	xor    al,0xba
  40c182:	clc    
  40c183:	jp     0x40c12e
  40c185:	xor    eax,0x54d6d84f
  40c18a:	pop    edi
  40c18b:	sbb    al,0x14
  40c18d:	stc    
  40c18e:	sbb    DWORD PTR [ebp-0x75],edx
  40c191:	jae    0x40c199
  40c193:	add    al,0xbd
  40c195:	pop    ss
  40c196:	or     ch,BYTE PTR [ecx+0x48]
  40c199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c19a:	rol    DWORD PTR [edi-0x433f53d0],1
  40c1a0:	stos   DWORD PTR es:[edi],eax
  40c1a1:	mov    eax,ds:0xc7aad6ff
  40c1a6:	dec    edx
  40c1a7:	sub    DWORD PTR [ebp+0x2e],esp
  40c1aa:	or     bh,BYTE PTR [ecx+0x67f458b5]
  40c1b0:	dec    esp
  40c1b1:	and    al,0x51
  40c1b3:	xchg   DWORD PTR [edx+0x4f],ecx
  40c1b6:	pop    ss
  40c1b7:	nop
  40c1b8:	not    BYTE PTR [eax+eax*2+0x52]
  40c1bc:	pop    eax
  40c1bd:	into   
  40c1be:	imul   ebp,DWORD PTR [si],0x6d
  40c1c2:	lock mov ecx,0x39d46ee2
  40c1c8:	mov    al,0xec
  40c1ca:	pop    ebp
  40c1cb:	xchg   edi,eax
  40c1cc:	cmp    DWORD PTR [ecx+0x5d],0x84bcb61
  40c1d3:	mov    BYTE PTR [esi+0x5b],dl
  40c1d6:	sbb    DWORD PTR [ecx+0x37f92005],ebx
  40c1dc:	adc    ch,BYTE PTR [eax]
  40c1de:	shl    BYTE PTR [ebp-0x21],cl
  40c1e1:	jo     0x40c1a3
  40c1e3:	in     al,0xe8
  40c1e5:	sbb    al,0xcf
  40c1e7:	xchg   ecx,eax
  40c1e8:	je     0x40c194
  40c1ea:	mov    cl,0x8f
  40c1ec:	mov    ch,0x80
  40c1ee:	or     edi,DWORD PTR [eax-0x1e]
  40c1f1:	pop    edi
  40c1f2:	dec    esi
  40c1f3:	ud0    esp,DWORD PTR [edi+0x1b]
  40c1f7:	xchg   esp,eax
  40c1f8:	repnz pop edx
  40c1fa:	xor    dl,ah
  40c1fc:	jmp    0x40c238
  40c1fe:	data16 aas 
  40c200:	mov    al,0xa9
  40c202:	push   edi
  40c203:	jne    0x40c1de
  40c205:	cmp    eax,0x52f8fca3
  40c20a:	(bad)  
  40c20b:	push   cs
  40c20c:	je     0x40c28a
  40c20e:	push   0xffffffb3
  40c210:	jecxz  0x40c23e
  40c212:	scas   al,BYTE PTR es:[edi]
  40c213:	jmp    0x827:0x7eb935a9
  40c21a:	push   0x29cf097f
  40c21f:	cdq    
  40c220:	or     cl,BYTE PTR gs:[edx-0x60]
  40c224:	cmp    eax,0xe5fb2298
  40c229:	loope  0x40c281
  40c22b:	(bad)  
  40c22c:	mov    ebp,0xafe2b2f9
  40c231:	xchg   ebx,eax
  40c232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c233:	dec    DWORD PTR [ebp-0xb9431af]
  40c239:	xor    ebx,DWORD PTR [ebx+0x0]
  40c23c:	jae    0x40c201
  40c23e:	imul   DWORD PTR [edi+eiz*8-0x51]
  40c242:	sbb    bh,BYTE PTR [eax+0x6347f86]
  40c248:	sub    dh,BYTE PTR [esi-0x4b0766db]
  40c24e:	imul   esp,DWORD PTR [edi+0x213b376],0x3bdd4e4
  40c258:	sbb    BYTE PTR [esi-0x58b4bf13],bl
  40c25e:	inc    ecx
  40c25f:	(bad)  
  40c260:	in     al,dx
  40c261:	push   ecx
  40c262:	sub    BYTE PTR [edx+0x19769535],0x97
  40c269:	(bad)  
  40c26a:	dec    ebp
  40c26b:	call   0xe554:0x40edbd1a
  40c272:	das    
  40c273:	jmp    0x732b:0xfeb70821
  40c27a:	add    BYTE PTR [esi+edi*8+0x55],al
  40c27e:	push   ecx
  40c27f:	and    DWORD PTR [edx+0x4f8176c3],edi
  40c285:	das    
  40c286:	stc    
  40c287:	inc    edx
  40c288:	bound  esi,QWORD PTR [eax+0x442139c7]
  40c28e:	sub    al,0xd6
  40c290:	push   cs
  40c291:	inc    esp
  40c292:	test   bl,0xe1
  40c295:	xor    al,0xb3
  40c297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c298:	sbb    al,0x2b
  40c29a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c29b:	push   es
  40c29c:	jle    0x40c272
  40c29e:	icebp  
  40c29f:	dec    esp
  40c2a0:	ins    DWORD PTR es:[edi],dx
  40c2a1:	test   BYTE PTR ds:0xa25c8c7a,dl
  40c2a7:	xchg   ebp,eax
  40c2a8:	xchg   ebx,eax
  40c2a9:	pop    ebx
  40c2aa:	mov    eax,0xe6ffee2a
  40c2af:	adc    bh,BYTE PTR [eax]
  40c2b1:	lods   al,BYTE PTR ds:[esi]
  40c2b2:	cmp    dh,BYTE PTR [edi+eax*8]
  40c2b5:	(bad)  
  40c2b7:	mov    cl,0x81
  40c2b9:	les    esp,FWORD PTR [ebp+edx*1+0x7a8f3d1d]
  40c2c0:	(bad)  
  40c2c1:	repnz fadd st(4),st
  40c2c4:	mov    bl,BYTE PTR [esi+ecx*2-0x379bae4d]
  40c2cb:	jp     0x40c308
  40c2cd:	and    eax,0x4fbfc481
  40c2d2:	imul   esi,DWORD PTR [eax+0x3b9d1d4c],0xffffffd0
  40c2d9:	sub    DWORD PTR [ebx-0x1e8d2d10],ebp
  40c2df:	mov    cl,0x8e
  40c2e1:	(bad)  
  40c2e2:	in     al,dx
  40c2e3:	addr16 mov esp,0x5e0268d
  40c2e9:	inc    ebp
  40c2ea:	mov    ebp,0xebae04d0
  40c2ef:	add    al,0xec
  40c2f1:	or     eax,0x3ff1514b
  40c2f6:	sub    bh,BYTE PTR [ebx-0x42]
  40c2f9:	jno    0x40c308
  40c2fb:	pushf  
  40c2fc:	mov    BYTE PTR [edi+0xac2eec7],dl
  40c302:	adc    eax,esi
  40c304:	xchg   ecx,eax
  40c305:	cmp    al,0x79
  40c307:	sub    ah,ah
  40c309:	loopne 0x40c2ca
  40c30b:	xchg   esp,eax
  40c30c:	in     eax,dx
  40c30d:	hlt    
  40c30e:	fsub   DWORD PTR [eax+0x1c28a885]
  40c314:	in     al,0x9b
  40c316:	fwait
  40c317:	lgs    edi,FWORD PTR [ecx+0x7cffeee2]
  40c31e:	aad    0x45
  40c320:	dec    eax
  40c321:	add    DWORD PTR ss:[edi+0x3b8f05c6],ebx
  40c328:	pop    ebx
  40c329:	outs   dx,BYTE PTR ds:[esi]
  40c32a:	cmp    eax,0xa873222e
  40c32f:	aad    0x68
  40c331:	test   DWORD PTR [ebp-0x33],0xce5b1902
  40c338:	sbb    DWORD PTR [eax],eax
  40c33a:	push   esi
  40c33b:	out    dx,al
  40c33c:	mov    ch,0x6b
  40c33e:	xchg   edx,eax
  40c340:	jmp    DWORD PTR [ebx+0x60c4a131]
  40c346:	inc    ebx
  40c347:	call   0x80eb:0x5813044d
  40c34e:	clc    
  40c34f:	repz stc 
  40c351:	into   
  40c352:	adc    al,0xa9
  40c354:	mov    ch,dl
  40c356:	stos   BYTE PTR es:[edi],al
  40c357:	xchg   edi,eax
  40c358:	cmc    
  40c359:	xchg   ebx,eax
  40c35a:	or     bl,ah
  40c35c:	add    al,0xc0
  40c35e:	fs pop es
  40c360:	mov    esi,0x3fd76f76
  40c365:	cmp    bl,BYTE PTR [edx-0x53]
  40c368:	or     edi,DWORD PTR [edx]
  40c36a:	out    dx,al
  40c36b:	sbb    ch,ch
  40c36d:	push   ds
  40c36e:	scas   eax,DWORD PTR es:[edi]
  40c36f:	inc    esp
  40c370:	(bad)  
  40c371:	jge    0x40c3cb
  40c373:	iret   
  40c374:	mov    DWORD PTR [ecx+0x66],eax
  40c377:	sti    
  40c378:	lods   eax,DWORD PTR ds:[esi]
  40c379:	jns    0x40c3a2
  40c37b:	mov    ch,0x90
  40c37d:	cld    
  40c37e:	cmp    esi,DWORD PTR [ebp+0x6e]
  40c381:	stos   DWORD PTR es:[edi],eax
  40c382:	lods   eax,DWORD PTR ds:[esi]
  40c383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c384:	mov    bl,0xf8
  40c386:	mov    dh,0x1b
  40c388:	retf   
  40c389:	cmc    
  40c38a:	inc    ecx
  40c38b:	pop    ecx
  40c38c:	addr16 mov eax,0x714cbc0b
  40c392:	sysexit 
  40c394:	in     al,0x6f
  40c396:	sbb    eax,DWORD PTR ds:0xf4e75fbc
  40c39c:	and    al,0x62
  40c39e:	push   eax
  40c39f:	fsub   DWORD PTR [edi]
  40c3a1:	sbb    al,BYTE PTR [edi]
  40c3a3:	cli    
  40c3a4:	out    0xe2,eax
  40c3a6:	frstor [eax-0x77]
  40c3a9:	ds std 
  40c3ab:	ins    BYTE PTR es:[edi],dx
  40c3ac:	imul   esp,edx,0x398db95
  40c3b2:	mov    BYTE PTR [edx+edi*1],0xf9
  40c3b6:	inc    ebp
  40c3b7:	sbb    BYTE PTR ds:0x9f131ba7,0x19
  40c3be:	(bad)  
  40c3bf:	imul   ecx,DWORD PTR [ebx],0xffffffa3
  40c3c2:	xchg   ebp,eax
  40c3c3:	mov    ebx,0x169a13b7
  40c3c8:	cmp    ecx,edi
  40c3ca:	cmp    BYTE PTR [ebp+0x30b32c68],dh
  40c3d0:	pop    ebx
  40c3d1:	jecxz  0x40c3a6
  40c3d3:	xor    al,0x3c
  40c3d5:	aam    0x46
  40c3d7:	mov    ah,BYTE PTR [edx]
  40c3d9:	inc    esp
  40c3da:	mov    ebp,0x3103c30e
  40c3df:	ins    DWORD PTR es:[edi],dx
  40c3e0:	mov    dl,bl
  40c3e2:	pop    edi
  40c3e3:	(bad)  
  40c3e4:	pop    eax
  40c3e5:	sub    DWORD PTR [edi+0x58],eax
  40c3e8:	add    edx,ebp
  40c3ea:	(bad)  
  40c3eb:	out    0x11,al
  40c3ed:	pushf  
  40c3ee:	add    al,0x48
  40c3f0:	retf   
  40c3f1:	neg    BYTE PTR [edx-0x426876d5]
  40c3f7:	loope  0x40c425
  40c3f9:	jno    0x40c46e
  40c3fb:	aaa    
  40c3fc:	icebp  
  40c3fd:	mov    dh,0x8e
  40c3ff:	ja     0x40c407
  40c401:	sbb    eax,0x3ccd10ca
  40c406:	mov    esp,0xceeeda71
  40c40b:	loop   0x40c3de
  40c40d:	push   ds
  40c40e:	cwde   
  40c40f:	cs or  eax,0xfffffff7
  40c413:	mov    dh,0xc2
  40c415:	cs pop esp
  40c417:	ja     0x40c3cd
  40c419:	add    ebx,0xffffffbc
  40c41c:	loop   0x40c3d2
  40c41e:	pop    es
  40c41f:	je     0x40c489
  40c421:	cdq    
  40c422:	lock in al,0x25
  40c425:	jmp    0xe28b:0xcd9ab1bb
  40c42c:	or     esi,DWORD PTR [edx-0x2]
  40c42f:	sbb    cl,BYTE PTR [ebx-0x6c86343c]
  40c435:	sbb    DWORD PTR [ebx+0x3293c0cc],esi
  40c43b:	adc    ebx,ebp
  40c43d:	push   edi
  40c43e:	ror    DWORD PTR [edx+0x4fe3a386],1
  40c444:	in     eax,0x80
  40c446:	or     edi,ebx
  40c448:	ror    BYTE PTR [ecx+0x14],1
  40c44b:	sub    bl,BYTE PTR [edx]
  40c44d:	(bad)  
  40c44e:	cmp    al,0x4c
  40c450:	in     eax,0x9d
  40c452:	add    BYTE PTR [edi],ch
  40c454:	sbb    eax,0x5e0f3b1c
  40c459:	sub    eax,0x1a45d462
  40c45e:	je     0x40c4bd
  40c460:	push   ds
  40c461:	pop    ss
  40c462:	mov    edi,0x3593ab77
  40c467:	and    edx,DWORD PTR [esi+ebp*2]
  40c46a:	xchg   DWORD PTR ds:0x78157df7,ebp
  40c470:	ins    BYTE PTR es:[edi],dx
  40c471:	ds sub al,0xbb
  40c474:	sti    
  40c475:	mov    al,0x9e
  40c477:	jle    0x40c43e
  40c479:	dec    edi
  40c47a:	mov    DWORD PTR [esi+0x16b18cad],esi
  40c480:	ds jmp 0x207e:0x94fc2aa4
  40c488:	and    BYTE PTR ds:0x60e8f375,ch
  40c48e:	ret    
  40c48f:	jne    0x40c455
  40c491:	data16 int3 
  40c493:	nop
  40c494:	std    
  40c495:	mov    dl,0xd8
  40c497:	or     DWORD PTR [esi+0x5c77a70a],ecx
  40c49d:	ins    DWORD PTR es:[edi],dx
  40c49e:	pop    edi
  40c49f:	pop    edi
  40c4a0:	lea    ecx,[esp+eax*1+0x4971416d]
  40c4a7:	push   ds
  40c4a8:	fimul  DWORD PTR ds:0x97b6b155
  40c4ae:	(bad)
  40c4b1:	je     0x40c4a1
  40c4b3:	mov    edi,0xfc109a35
  40c4b8:	shr    ebx,cl
  40c4ba:	jl     0x40c459
  40c4bc:	sbb    ch,BYTE PTR [esi]
  40c4be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4bf:	pop    ecx
  40c4c0:	inc    ecx
  40c4c1:	adc    BYTE PTR [ecx],0xca
  40c4c4:	push   esi
  40c4c5:	or     dl,BYTE PTR cs:[ebx-0x31]
  40c4c9:	(bad)  [eax-0x12]
  40c4cc:	sub    eax,0x7389b75
  40c4d2:	jb     0x40c4b5
  40c4d4:	int    0x70
  40c4d6:	mov    bh,0xbd
  40c4d8:	aam    0x7d
  40c4da:	xchg   ebx,eax
  40c4db:	iret   
  40c4dc:	xchg   ebp,eax
  40c4dd:	leave  
  40c4de:	cs xor dl,dl
  40c4e1:	push   es
  40c4e2:	or     ch,BYTE PTR [ebp-0x48]
  40c4e5:	pushf  
  40c4e6:	(bad)
  40c4e9:	sbb    DWORD PTR ds:0xce362958,esi
  40c4ef:	mov    bl,0xd2
  40c4f1:	cmc    
  40c4f2:	lock xchg edi,eax
  40c4f4:	xchg   BYTE PTR [eax],ch
  40c4f6:	inc    ecx
  40c4f7:	ret    
  40c4f8:	popa   
  40c4f9:	sbb    DWORD PTR ds:0x107323ad,edx
  40c4ff:	and    ah,dh
  40c501:	push   edx
  40c502:	sbb    BYTE PTR [ecx-0x1d0b9aa4],ah
  40c508:	mov    al,ds:0x525ba87e
  40c50d:	ret    0x83fc
  40c510:	stos   BYTE PTR es:[edi],al
  40c511:	nop
  40c512:	push   edx
  40c513:	popf   
  40c514:	xchg   ecx,eax
  40c515:	loop   0x40c535
  40c517:	jo     0x40c544
  40c519:	push   esp
  40c51a:	inc    edx
  40c51b:	dec    BYTE PTR [edx-0x71a5ca23]
  40c521:	pusha  
  40c522:	les    esi,FWORD PTR [ecx+0x483395bc]
  40c528:	xor    DWORD PTR ds:0x9376752b,edx
  40c52e:	test   eax,0x25bf28a7
  40c533:	push   es
  40c534:	enter  0x3bc1,0xcc
  40c538:	nop
  40c539:	mul    esp
  40c53b:	dec    edi
  40c53c:	mov    bh,0x8c
  40c53e:	rcl    ebp,cl
  40c540:	dec    edi
  40c541:	mov    WORD PTR [ecx+0x1961c2ae],cs
  40c547:	sub    dh,BYTE PTR ds:0x40297270
  40c54d:	mov    al,ds:0x1fe1b17a
  40c552:	loopne 0x40c514
  40c554:	pushf  
  40c555:	pushf  
  40c556:	lds    eax,FWORD PTR [edx+0x7c6fc1d8]
  40c55c:	push   eax
  40c55d:	arpl   WORD PTR ds:0xd7906fc4,sp
  40c563:	mov    dh,0xdd
  40c565:	call   0xf3d6:0x1885e89d
  40c56c:	xor    DWORD PTR [eax-0x3c],0x59b14415
  40c573:	xchg   DWORD PTR [edx+0x7c76f745],edi
  40c579:	jl     0x40c58c
  40c57b:	in     eax,0x9
  40c57d:	ins    DWORD PTR es:[edi],dx
  40c57e:	stos   BYTE PTR es:[edi],al
  40c57f:	inc    eax
  40c580:	cdq    
  40c581:	sub    ch,BYTE PTR [eax+eiz*4-0x7c]
  40c585:	sbb    eax,0x873a88e1
  40c58a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c58b:	adc    eax,0xcc8e3152
  40c590:	out    dx,al
  40c591:	mov    ebx,edi
  40c593:	loop   0x40c53d
  40c595:	loop   0x40c5c9
  40c597:	in     al,0x83
  40c599:	repz cmp ax,0x5ad7
  40c59e:	push   esp
  40c59f:	ss jno 0x40c5dc
  40c5a2:	in     al,dx
  40c5a3:	stos   DWORD PTR es:[edi],eax
  40c5a4:	retf   0xefc1
  40c5a7:	xchg   edi,eax
  40c5a8:	mov    esp,0xc18a2b98
  40c5ad:	das    
  40c5ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5af:	stc    
  40c5b0:	pop    eax
  40c5b1:	lea    ebp,[ebx+0x76]
  40c5b4:	mov    gs,WORD PTR es:[edi-0x423e0df4]
  40c5bb:	and    esp,DWORD PTR [eax+esi*1-0x27]
  40c5bf:	cmp    esp,DWORD PTR [ecx+0x52efa926]
  40c5c5:	into   
  40c5c6:	fimul  DWORD PTR [ecx]
  40c5c8:	enter  0xa6ef,0x86
  40c5cc:	into   
  40c5cd:	(bad)  
  40c5ce:	pop    esi
  40c5cf:	adc    eax,0xb15019bf
  40c5d4:	(bad)  
  40c5d5:	fidivr DWORD PTR [eax]
  40c5d7:	jmp    0xcf40d6ed
  40c5dc:	mov    edx,0xb0c026da
  40c5e1:	push   ds
  40c5e2:	add    BYTE PTR [edx+0x648580d9],cl
  40c5e8:	adc    BYTE PTR [ebx],dl
  40c5ea:	push   eax
  40c5eb:	ds inc esi
  40c5ed:	in     eax,0xb3
  40c5ef:	add    DWORD PTR [edi+0x411b6ab1],0xc329c487
  40c5f9:	dec    esp
  40c5fa:	loop   0x40c63e
  40c5fc:	xchg   esp,eax
  40c5fd:	call   0xcab0:0x7c253795
  40c604:	inc    esi
  40c605:	add    ebx,DWORD PTR [eax+esi*4-0x1f]
  40c609:	out    dx,eax
  40c60a:	ja     0x40c5c9
  40c60c:	gs inc esi
  40c60e:	pop    ss
  40c60f:	mov    bh,0x7
  40c611:	pusha  
  40c612:	sbb    DWORD PTR [ebx],esp
  40c614:	mov    ds:0x13ed1dc9,eax
  40c619:	retf   
  40c61a:	rcl    BYTE PTR [esi-0x2a],0xb4
  40c61e:	lods   eax,DWORD PTR ds:[esi]
  40c61f:	add    BYTE PTR [ebp-0x35],dl
  40c622:	ja     0x40c64a
  40c624:	sub    ecx,DWORD PTR [edi+0x26]
  40c627:	inc    edx
  40c628:	cmp    al,0x45
  40c62a:	dec    edx
  40c62b:	sbb    eax,0x32e090ed
  40c630:	pop    es
  40c631:	les    edi,FWORD PTR [edx-0x7d]
  40c634:	jp     0x40c6ae
  40c636:	push   ebx
  40c637:	xlat   BYTE PTR ds:[ebx]
  40c638:	lea    edi,[edx-0x3319301b]
  40c63e:	sar    BYTE PTR [edx+0x14],0x76
  40c642:	pop    es
  40c643:	adc    BYTE PTR ds:0x17f63b3b,0x11
  40c64a:	and    eax,DWORD PTR [ebx-0x6e]
  40c64d:	rol    BYTE PTR [esi+0x3326742d],0x4c
  40c654:	test   eax,0xaa2e6cfa
  40c659:	inc    ebx
  40c65a:	stc    
  40c65b:	test   al,0x7
  40c65d:	shl    BYTE PTR [ebx+0x37],cl
  40c660:	daa    
  40c661:	ret    
  40c662:	sub    al,0xea
  40c664:	sbb    ebx,eax
  40c666:	xchg   edx,eax
  40c667:	jmp    0x40c65a
  40c669:	cmp    ecx,0xa4b2d3
  40c66f:	ror    DWORD PTR [edi-0x71],cl
  40c672:	mov    eax,ds:0xed20395f
  40c677:	xor    eax,0x998143ee
  40c67c:	out    dx,al
  40c67d:	lds    edi,FWORD PTR [edi+0x57ef186f]
  40c683:	mov    ch,0x58
  40c685:	stos   BYTE PTR es:[edi],al
  40c686:	fldl2t 
  40c688:	rcl    BYTE PTR [ebx-0x7a6464fe],1
  40c68e:	mov    dl,0xce
  40c690:	cld    
  40c691:	push   eax
  40c692:	(bad)  
  40c694:	mov    ah,0x66
  40c696:	or     al,bl
  40c698:	inc    ecx
  40c699:	push   edi
  40c69a:	cdq    
  40c69b:	stos   DWORD PTR es:[edi],eax
  40c69c:	sbb    bl,BYTE PTR [eax-0x3f9aedb9]
  40c6a2:	jae    0x40c6c9
  40c6a4:	arpl   dx,di
  40c6a6:	loop   0x40c709
  40c6a8:	jge    0x40c638
  40c6aa:	jle    0x40c6f1
  40c6ac:	test   BYTE PTR [eax+edx*8-0x51],al
  40c6b0:	std    
  40c6b1:	scas   eax,DWORD PTR es:[di]
  40c6b3:	pop    edx
  40c6b4:	sar    DWORD PTR [edx-0x131ab298],1
  40c6ba:	rcr    ecx,1
  40c6bc:	in     al,0x88
  40c6be:	mov    dh,0x18
  40c6c0:	enter  0x8b8b,0xcb
  40c6c4:	cld    
  40c6c5:	ss arpl cx,dx
  40c6c8:	aam    0xce
  40c6ca:	mov    ch,BYTE PTR [eax]
  40c6cc:	test   al,0x54
  40c6ce:	dec    esp
  40c6cf:	and    cl,bl
  40c6d1:	mul    DWORD PTR [edx+0x65]
  40c6d4:	mov    ds:0x4e9a9980,al
  40c6d9:	popf   
  40c6da:	push   ebp
  40c6db:	jge    0x40c737
  40c6dd:	add    DWORD PTR [edx-0x4c],edx
  40c6e0:	lods   al,BYTE PTR ds:[esi]
  40c6e1:	jno    0x40c705
  40c6e3:	mov    eax,ds:0xb31f0906
  40c6e8:	xchg   DWORD PTR [esi-0xef91bc0],ecx
  40c6ee:	jge    0x40c730
  40c6f0:	loope  0x40c715
  40c6f2:	push   ss
  40c6f3:	nop
  40c6f4:	pop    edx
  40c6f5:	sbb    DWORD PTR [edx-0x40],ecx
  40c6f8:	jg     0x40c736
  40c6fa:	and    ebx,DWORD PTR [eax-0x1fe2277d]
  40c700:	ret    0xc8c4
  40c703:	jbe    0x40c6ec
  40c705:	js     0x40c6ca
  40c707:	ror    BYTE PTR [ecx+0x5afae0b6],1
  40c70d:	sbb    ch,0xe
  40c710:	inc    esp
  40c711:	ds test al,0x3e
  40c714:	gs popf 
  40c716:	popa   
  40c717:	in     al,dx
  40c718:	icebp  
  40c719:	in     eax,0xa6
  40c71b:	adc    DWORD PTR [ebp+0x3f9e8a70],eax
  40c721:	jne    0x40c772
  40c723:	mov    bh,0xda
  40c725:	push   edi
  40c726:	out    0xbb,al
  40c728:	sbb    edx,ebp
  40c72a:	ficomp DWORD PTR [ebx-0x33ddbdc5]
  40c730:	dec    esi
  40c731:	cmc    
  40c732:	pop    eax
  40c733:	sbb    al,BYTE PTR [ebp-0x455b88f1]
  40c739:	sbb    ebp,edi
  40c73b:	cdq    
  40c73c:	jb     0x40c775
  40c73e:	rcr    BYTE PTR [edx+0x7d70ee1c],cl
  40c744:	fsub   QWORD PTR [edx-0x65b5fa9f]
  40c74a:	xor    eax,0xa06d39db
  40c74f:	jecxz  0x40c6e7
  40c751:	xor    BYTE PTR [ebx-0x16],dl
  40c754:	xchg   ebx,eax
  40c755:	inc    ecx
  40c756:	sar    BYTE PTR [edi-0x2f],0xc8
  40c75a:	xor    al,0xde
  40c75c:	xor    BYTE PTR [edi+0x50b38b2d],cl
  40c762:	add    DWORD PTR [ebx+edi*4-0x4],ebx
  40c766:	dec    esi
  40c767:	hlt    
  40c768:	neg    BYTE PTR [esi+0x3e]
  40c76b:	inc    ebp
  40c76c:	cmp    eax,0xcb4b147f
  40c771:	in     al,0x45
  40c773:	inc    ebx
  40c774:	jbe    0x40c7ab
  40c776:	sub    dl,bh
  40c778:	mov    ch,0xc0
  40c77a:	add    ebp,DWORD PTR [esi-0x21]
  40c77d:	fnstcw WORD PTR [edx+ebp*8+0x3a00b4d6]
  40c784:	in     eax,0x2b
  40c786:	test   eax,0x58825cf4
  40c78b:	xor    DWORD PTR [ecx+esi*8+0x2],edi
  40c78f:	ja     0x40c7ee
  40c791:	xchg   ecx,eax
  40c792:	(bad)  
  40c794:	sub    al,0x5f
  40c796:	out    0x80,eax
  40c798:	pushf  
  40c799:	out    dx,eax
  40c79a:	ret    
  40c79b:	gs jns 0x40c73c
  40c79e:	push   eax
  40c79f:	dec    ebp
  40c7a0:	xchg   ebp,eax
  40c7a1:	ins    BYTE PTR es:[edi],dx
  40c7a2:	push   cs
  40c7a3:	push   edi
  40c7a4:	aaa    
  40c7a5:	push   esp
  40c7a6:	enter  0xbb80,0x4e
  40c7aa:	and    ecx,ecx
  40c7ac:	test   BYTE PTR [edx+0x39b38d21],ah
  40c7b2:	and    BYTE PTR [edi],cl
  40c7b4:	adc    al,0xa5
  40c7b6:	lock push edi
  40c7b8:	jne    0x40c7a4
  40c7ba:	sbb    bl,bl
  40c7bc:	stos   BYTE PTR es:[edi],al
  40c7bd:	add    BYTE PTR fs:[edx+0x75dbd839],bh
  40c7c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7c5:	fisubr WORD PTR [ebp+0x52]
  40c7c8:	pop    esp
  40c7c9:	adc    al,al
  40c7cb:	pop    eax
  40c7cc:	xor    DWORD PTR [eax-0x3fd8a5e6],0xac176550
  40c7d6:	test   dl,dh
  40c7d8:	dec    eax
  40c7d9:	and    ebx,DWORD PTR [edi]
  40c7db:	aaa    
  40c7dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7dd:	out    0xb9,eax
  40c7df:	je     0x40c7bd
  40c7e1:	lea    esp,[ecx-0x2a80c657]
  40c7e7:	movhps QWORD PTR [eax],xmm1
  40c7ea:	and    bh,dh
  40c7ec:	sbb    al,0xd
  40c7ee:	push   edx
  40c7ef:	std    
  40c7f0:	out    dx,al
  40c7f1:	daa    
  40c7f2:	xor    ebp,DWORD PTR [eax]
  40c7f4:	(bad)  
  40c7f5:	ss mov esi,es
  40c7f8:	mov    ebp,0x4e2bb5aa
  40c7fd:	xor    BYTE PTR [edi-0x177dc402],0x66
  40c804:	fstp   st(3)
  40c806:	ror    DWORD PTR ds:0x6f4be2e5,0xb2
  40c80d:	mov    dl,0x5e
  40c80f:	fwait
  40c810:	mov    bl,0x9a
  40c812:	xor    cl,dl
  40c814:	inc    esp
  40c815:	pop    eax
  40c816:	mov    BYTE PTR [eax],ch
  40c818:	test   eax,0x518d3e57
  40c81d:	dec    esp
  40c81e:	inc    edi
  40c81f:	xor    BYTE PTR [edx-0x23],ch
  40c822:	mov    cl,0xca
  40c824:	add    al,0xb6
  40c826:	out    0x0,al
  40c828:	push   es
  40c829:	xchg   esp,eax
  40c82a:	xchg   edi,eax
  40c82b:	add    ch,BYTE PTR [eax+0x3295e66a]
  40c831:	mov    ch,0x10
  40c833:	adc    ecx,eax
  40c835:	cld    
  40c836:	dec    esi
  40c837:	pop    ebp
  40c838:	xchg   esp,eax
  40c839:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c83b:	jmp    0xdedca0f
  40c840:	shl    DWORD PTR [esi+0x15],1
  40c843:	mov    al,0x85
  40c845:	dec    esi
  40c846:	sub    BYTE PTR [edx-0x20],0x22
  40c84a:	les    bx,DWORD PTR [esi-0x7f3d1f5]
  40c851:	stos   DWORD PTR es:[edi],eax
  40c852:	xchg   esp,eax
  40c853:	jno    0x40c8cc
  40c855:	xor    edx,DWORD PTR [edx-0x7fd3541a]
  40c85b:	adc    BYTE PTR [eax-0x23],ah
  40c85e:	repz jle 0x40c8d4
  40c861:	dec    ebx
  40c862:	(bad)  
  40c863:	icebp  
  40c864:	shl    DWORD PTR [edi+0x7cb17ca8],0x41
  40c86b:	xchg   ecx,eax
  40c86c:	hlt    
  40c86d:	push   es
  40c86e:	adc    eax,0xce859d0c
  40c873:	pop    esi
  40c874:	pop    ds
  40c875:	call   0x5274:0x3292fc72
  40c87c:	add    dl,al
  40c87e:	jne    0x40c8f8
  40c880:	xor    al,0xfb
  40c882:	push   ds
  40c883:	hlt    
  40c884:	pop    ebx
  40c885:	das    
  40c886:	mov    bl,0xc
  40c888:	shl    DWORD PTR [ebx+0x47],cl
  40c88b:	cmp    eax,0x5d29bf9b
  40c890:	test   eax,0x6ed81cb6
  40c895:	cli    
  40c896:	push   ebx
  40c897:	ret    0xf52d
  40c89a:	or     BYTE PTR [esi],dh
  40c89c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c89d:	lods   eax,DWORD PTR ds:[esi]
  40c89e:	aas    
  40c89f:	mov    esp,0x9b6f4927
  40c8a4:	retf   
  40c8a5:	rol    BYTE PTR [ecx+0x33693f1e],0x82
  40c8ac:	push   0x5d
  40c8ae:	cmc    
  40c8af:	(bad)  
  40c8b0:	push   ebx
  40c8b1:	rcl    BYTE PTR [edi+0x58],cl
  40c8b4:	lahf   
  40c8b5:	cld    
  40c8b6:	fnstcw WORD PTR [edx+eiz*2+0x16]
  40c8ba:	mov    ecx,eax
  40c8bc:	adc    al,0x2d
  40c8be:	mov    bh,0xa6
  40c8c0:	out    0x4c,eax
  40c8c2:	int    0x51
  40c8c4:	xchg   BYTE PTR [edi],al
  40c8c6:	xor    ebp,ebx
  40c8c8:	xor    al,0xca
  40c8ca:	or     DWORD PTR [edi],0xd0f5f30d
  40c8d0:	xor    DWORD PTR [ecx-0x592036d9],ebp
  40c8d6:	add    al,0x11
  40c8d8:	xchg   bh,ah
  40c8da:	mov    bl,0x63
  40c8dc:	push   esp
  40c8dd:	inc    edx
  40c8de:	(bad)  
  40c8df:	or     al,0x14
  40c8e1:	lahf   
  40c8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8e3:	push   ds
  40c8e4:	xor    ebx,DWORD PTR [ecx-0x611f420]
  40c8ea:	inc    edi
  40c8eb:	outs   dx,DWORD PTR ds:[esi]
  40c8ec:	in     eax,dx
  40c8ed:	jb     0x40c90b
  40c8ef:	and    al,0x73
  40c8f1:	cmp    esi,DWORD PTR [ecx]
  40c8f3:	add    eax,0xd3c64899
  40c8f8:	lea    esp,[eax]
  40c8fa:	leave  
  40c8fb:	pop    es
  40c8fc:	or     DWORD PTR ds:0x61a60209,eax
  40c902:	das    
  40c903:	into   
  40c904:	push   esp
  40c905:	add    edx,ebp
  40c907:	pop    edx
  40c908:	adc    BYTE PTR [ecx-0x2208ccf9],ah
  40c90e:	cmp    ebp,DWORD PTR [ecx+0x7a]
  40c911:	test   al,0xfb
  40c913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c914:	retf   
  40c915:	rol    BYTE PTR [edx-0x78ba8cbc],0xd
  40c91c:	push   ebx
  40c91e:	lods   eax,DWORD PTR ds:[esi]
  40c91f:	mov    gs,WORD PTR [edx]
  40c921:	out    dx,eax
  40c922:	mov    DWORD PTR [eax-0x2093965],edi
  40c928:	jle    0x40c98c
  40c92a:	lods   eax,DWORD PTR ds:[esi]
  40c92b:	pop    edi
  40c92c:	mov    ebx,0x5484da7d
  40c931:	(bad)
  40c934:	mov    ebp,0xde7f05ae
  40c939:	pop    edx
  40c93a:	(bad)  
  40c93b:	dec    esp
  40c93c:	retf   
  40c93d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c93e:	add    al,0x68
  40c940:	fidivr DWORD PTR [ebp-0x2d7a847a]
  40c946:	les    ecx,FWORD PTR [eax+0x40]
  40c949:	scas   al,BYTE PTR es:[edi]
  40c94a:	sar    ebx,cl
  40c94c:	pop    ss
  40c94d:	inc    eax
  40c94e:	and    eax,DWORD PTR [esi]
  40c950:	scas   al,BYTE PTR es:[di]
  40c952:	or     BYTE PTR [ebp+0x4ee8d69a],bh
  40c958:	jp     0x40c96d
  40c95a:	mov    eax,ds:0x2f0a1a36
  40c95f:	adc    eax,0x80064406
  40c964:	shr    DWORD PTR [esp+eax*1-0x1498c95b],1
  40c96b:	or     BYTE PTR [ecx+0xc09647b],0x45
  40c972:	adc    al,0xda
  40c974:	(bad)  [ebx-0x48]
  40c977:	xchg   esi,eax
  40c978:	adc    bl,BYTE PTR [esi]
  40c97a:	retf   0x4aca
  40c97d:	test   esi,edx
  40c97f:	ret    
  40c980:	xchg   BYTE PTR [ecx+0x5e7b13de],bl
  40c986:	xchg   edi,eax
  40c987:	mov    bh,0x61
  40c989:	adc    esp,DWORD PTR [eax+ecx*2+0xb]
  40c98d:	out    0x38,al
  40c98f:	(bad)  
  40c990:	imul   eax,DWORD PTR [ecx+0x54],0x3b711572
  40c997:	out    0x35,eax
  40c999:	aaa    
  40c99a:	mov    cl,0x88
  40c99c:	iret   
  40c99d:	xor    eax,0x68b12fc4
  40c9a2:	inc    ebp
  40c9a3:	imul   edx,DWORD PTR ds:[eax],0xd00a5697
  40c9aa:	push   es
  40c9ab:	das    
  40c9ac:	xor    eax,0x26e63600
  40c9b1:	sahf   
  40c9b2:	test   dh,bl
  40c9b4:	xchg   DWORD PTR cs:[ebp-0x4ddac868],ebp
  40c9bb:	dec    ecx
  40c9bc:	mov    bl,0x42
  40c9be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9bf:	pusha  
  40c9c0:	aaa    
  40c9c1:	add    ecx,DWORD PTR [ecx+0x532372a5]
  40c9c7:	inc    esi
  40c9c8:	fnstsw WORD PTR [eax+0x5e50d7b0]
  40c9ce:	xchg   ebp,eax
  40c9cf:	dec    edi
  40c9d0:	out    dx,al
  40c9d1:	shl    DWORD PTR ds:0xf42be927,1
  40c9d7:	dec    ebp
  40c9d8:	pusha  
  40c9d9:	scas   al,BYTE PTR es:[edi]
  40c9da:	pop    eax
  40c9db:	mov    ebp,0xa319c363
  40c9e0:	pusha  
  40c9e1:	cmp    bh,BYTE PTR [ecx]
  40c9e3:	out    0xea,eax
  40c9e5:	stc    
  40c9e6:	sub    eax,0xbc58f6cb
  40c9eb:	int    0x76
  40c9ed:	int3   
  40c9ee:	imul   edx,ebx,0xcc0f32c9
  40c9f4:	loop   0x40ca03
  40c9f6:	into   
  40c9f7:	mov    al,ds:0xd5bd035b
  40c9fc:	lods   eax,DWORD PTR ds:[esi]
  40c9fd:	shl    edi,cl
  40c9ff:	xor    al,0xce
  40ca01:	mov    dl,0x6d
  40ca03:	mov    esi,0xb11c86c9
  40ca08:	pop    esp
  40ca09:	jb     0x40ca3f
  40ca0b:	jge    0x40ca1d
  40ca0d:	gs cmp al,0x91
  40ca10:	pop    esi
  40ca11:	push   es
  40ca12:	mov    ds:0xb1782e5b,al
  40ca17:	rcl    DWORD PTR [edx],1
  40ca19:	outs   dx,BYTE PTR ds:[esi]
  40ca1a:	cld    
  40ca1b:	jbe    0x40ca81
  40ca1d:	and    bl,0x1
  40ca20:	popa   
  40ca21:	js     0x40c9db
  40ca23:	aas    
  40ca24:	loop   0x40ca93
  40ca26:	pusha  
  40ca27:	fsincos 
  40ca29:	inc    ebp
  40ca2a:	and    al,0x2b
  40ca2c:	lods   eax,DWORD PTR ds:[esi]
  40ca2d:	xchg   DWORD PTR [ebx+0x2],edi
  40ca30:	test   al,0x30
  40ca32:	out    0xdb,al
  40ca34:	aas    
  40ca35:	outs   dx,DWORD PTR ds:[esi]
  40ca36:	daa    
  40ca37:	adc    al,0x50
  40ca39:	ja     0x40ca05
  40ca3b:	mov    esp,0xb67ced0a
  40ca40:	mov    esi,0xc318270f
  40ca45:	shl    BYTE PTR [eax-0x3e900387],cl
  40ca4b:	mov    ?,ebx
  40ca4d:	jmp    0x146:0x5116491e
  40ca54:	sub    al,0xc8
  40ca56:	and    ebp,DWORD PTR [eax+0x1b1b583e]
  40ca5c:	jle    0x40ca2d
  40ca5e:	pushf  
  40ca5f:	js     0x40ca55
  40ca61:	(bad)  
  40ca62:	mov    al,ds:0x2fd21e76
  40ca67:	jnp    0x40c9fa
  40ca69:	push   esp
  40ca6a:	mov    ebx,0x77cb540a
  40ca6f:	data16 cmp bh,0xc4
  40ca73:	fst    QWORD PTR [edi]
  40ca75:	std    
  40ca76:	sbb    al,0xb6
  40ca78:	jo     0x40cae9
  40ca7a:	pop    ecx
  40ca7b:	mov    ds:0xb91a6a8a,eax
  40ca80:	jne    0x40cabd
  40ca82:	mov    al,BYTE PTR [edx+0x5a2c445d]
  40ca88:	retf   
  40ca89:	jno    0x40ca47
  40ca8b:	cs repz aad 0x66
  40ca8f:	jecxz  0x40ca8e
  40ca91:	add    BYTE PTR [ecx-0xa],0x42
  40ca95:	or     eax,ecx
  40ca97:	dec    ebp
  40ca98:	aaa    
  40ca99:	inc    ebx
  40ca9a:	sub    ebx,DWORD PTR [esi-0x5c]
  40ca9d:	shl    DWORD PTR [ebx],cl
  40ca9f:	imul   eax,DWORD PTR [ebx+eax*4-0x40],0x54
  40caa4:	jg     0x40ca5b
  40caa6:	pop    ecx
  40caa7:	mov    edx,0xfa08b91c
  40caac:	int    0xbd
  40caae:	jne    0x40cb00
  40cab0:	ret    0xda02
  40cab3:	into   
  40cab4:	and    eax,0x878ac944
  40cab9:	test   al,0xf0
  40cabb:	pushf  
  40cabc:	std    
  40cabd:	imul   DWORD PTR [edi]
  40cabf:	push   esp
  40cac0:	or     DWORD PTR fs:[ebx],eax
  40cac3:	inc    esp
  40cac4:	add    cl,BYTE PTR [eax+0x16a09749]
  40caca:	xchg   edi,eax
  40cacb:	or     al,0xf6
  40cacd:	iret   
  40cace:	adc    DWORD PTR [edx+0x60],esi
  40cad1:	push   cs
  40cad2:	push   ebp
  40cad3:	xor    al,0x80
  40cad5:	je     0x40cafd
  40cad7:	(bad)  
  40cad8:	pop    ss
  40cad9:	hlt    
  40cada:	lds    ebx,FWORD PTR [ebx]
  40cadc:	dec    ecx
  40cadd:	stos   BYTE PTR es:[edi],al
  40cade:	pop    ebp
  40cadf:	xor    DWORD PTR [edi],esp
  40cae1:	pop    ds
  40cae2:	shr    bh,cl
  40cae4:	and    bh,BYTE PTR gs:[edi-0x3c]
  40cae8:	push   ds
  40cae9:	mov    ds:0x875b2e6d,al
  40caee:	out    dx,al
  40caef:	aas    
  40caf0:	dec    ebx
  40caf1:	pusha  
  40caf2:	inc    esi
  40caf3:	xor    DWORD PTR [eax],edx
  40caf5:	jmp    0x40caf7
  40caf7:	in     al,dx
  40caf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caf9:	rcr    ecx,0x80
  40cafc:	mov    edi,DWORD PTR [esi+0x41]
  40caff:	(bad)  
  40cb00:	lds    esp,FWORD PTR [ebx]
  40cb02:	dec    ebx
  40cb03:	mov    dh,BYTE PTR [ebx+0x28]
  40cb06:	sar    BYTE PTR [ebp+0x11],1
  40cb09:	(bad)  
  40cb0b:	inc    ebp
  40cb0c:	push   cs
  40cb0d:	dec    eax
  40cb0e:	sub    dh,BYTE PTR ds:0x4105693a
  40cb14:	cmp    eax,DWORD PTR [esi]
  40cb16:	jnp    0x40cab3
  40cb18:	inc    esp
  40cb19:	add    ecx,esi
  40cb1b:	jmp    0xaad6:0xfdbcdab0
  40cb22:	stos   BYTE PTR es:[edi],al
  40cb23:	mov    bh,0x3a
  40cb25:	je     0x40cb3b
  40cb27:	pop    eax
  40cb28:	lock mov esi,0xce87eef
  40cb2e:	movaps XMMWORD PTR [eax+esi*2-0x1e85938d],xmm0
  40cb36:	aaa    
  40cb37:	imul   ecx,ebp,0x8bb6773d
  40cb3d:	add    ebx,DWORD PTR [esi+0x6588d686]
  40cb43:	or     ebp,esp
  40cb45:	cld    
  40cb46:	shl    al,cl
  40cb48:	and    dh,cl
  40cb4a:	add    bh,BYTE PTR ds:0xcd8de7b5
  40cb50:	inc    ebx
  40cb51:	adc    cl,BYTE PTR [edi]
  40cb53:	jmp    0x40cb89
  40cb55:	gs and al,0xad
  40cb58:	add    DWORD PTR [esi-0x603a1c4e],0x4e4c14a8
  40cb62:	sahf   
  40cb63:	fs push cs
  40cb65:	in     eax,dx
  40cb66:	add    BYTE PTR [esi-0x538e67dd],0x30
  40cb6d:	mov    ebp,0x667825ad
  40cb72:	xchg   edi,eax
  40cb73:	push   ecx
  40cb74:	dec    ebp
  40cb75:	pop    es
  40cb76:	or     dl,BYTE PTR [edx+0x76e5b72f]
  40cb7c:	dec    esp
  40cb7d:	fldcw  WORD PTR [esi+0x25]
  40cb80:	cmp    BYTE PTR [esi+0x47],al
  40cb83:	push   0x5fd1e956
  40cb88:	ficom  WORD PTR [ebx-0x36]
  40cb8b:	adc    eax,edx
  40cb8d:	push   ecx
  40cb8e:	out    dx,eax
  40cb8f:	jecxz  0x40cbda
  40cb91:	clc    
  40cb92:	inc    edi
  40cb93:	mov    ch,0xb7
  40cb95:	jne    0x40cbe0
  40cb97:	push   0x25
  40cb99:	cwde   
  40cb9a:	mov    eax,?
  40cb9c:	xor    edx,DWORD PTR [ecx+0x59]
  40cb9f:	or     al,0xd0
  40cba1:	int3   
  40cba2:	test   al,0x84
  40cba4:	rcr    ebx,1
  40cba6:	inc    esp
  40cba7:	leave  
  40cba8:	clc    
  40cba9:	and    al,0x47
  40cbab:	adc    eax,0x4c03987e
  40cbb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbb1:	fld    st(4)
  40cbb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbb4:	gs data16 into 
  40cbb7:	cmp    DWORD PTR [esi-0x5e216683],edi
  40cbbd:	jge    0x40cc38
  40cbbf:	repnz adc DWORD PTR [ecx+0x7a],ecx
  40cbc3:	mov    edx,es
  40cbc5:	mov    ecx,0x3d72477e
  40cbca:	jge    0x40cc4b
  40cbcc:	cli    
  40cbcd:	adc    bl,BYTE PTR [eax+0x2f]
  40cbd0:	(bad)  
  40cbd1:	jmp    0x40cbc6
  40cbd3:	push   es
  40cbd4:	hlt    
  40cbd5:	and    DWORD PTR [ecx-0x18975d47],edi
  40cbdb:	sbb    al,0x42
  40cbdd:	and    al,0x1e
  40cbdf:	ret    
  40cbe0:	in     eax,dx
  40cbe1:	and    DWORD PTR [esi],edx
  40cbe3:	out    dx,al
  40cbe4:	push   ebp
  40cbe5:	jmp    0x6640fc81
  40cbea:	scas   al,BYTE PTR es:[edi]
  40cbeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbec:	cwde   
  40cbed:	xor    ecx,esi
  40cbef:	jmp    0x40cc00
  40cbf1:	push   esi
  40cbf2:	sbb    DWORD PTR [ecx],ecx
  40cbf4:	lahf   
  40cbf5:	sub    BYTE PTR [edx],bh
  40cbf7:	xchg   edi,eax
  40cbf8:	retf   
  40cbf9:	xchg   edx,eax
  40cbfa:	mov    ds:0xfeb52ac1,al
  40cbff:	cwde   
  40cc00:	jle    0x40cbef
  40cc02:	cld    
  40cc03:	out    dx,eax
  40cc04:	xchg   ebx,esp
  40cc06:	(bad)  
  40cc07:	inc    esp
  40cc08:	inc    edx
  40cc09:	dec    eax
  40cc0a:	xchg   ebp,eax
  40cc0b:	in     eax,0xa5
  40cc0d:	dec    ecx
  40cc0e:	(bad)
  40cc13:	test   BYTE PTR [eax],dh
  40cc15:	push   es
  40cc16:	dec    ecx
  40cc17:	xlat   BYTE PTR ds:[ebx]
  40cc18:	iret   
  40cc19:	push   ss
  40cc1a:	dec    esi
  40cc1b:	inc    ecx
  40cc1c:	jns    0x40cc3e
  40cc1e:	cmp    bl,cl
  40cc20:	mov    ds:0x1871b07c,al
  40cc25:	add    bh,dl
  40cc27:	das    
  40cc28:	sub    bl,BYTE PTR [edx+eiz*8+0x55001a16]
  40cc2f:	push   ds
  40cc30:	into   
  40cc31:	rol    DWORD PTR [esi-0x60c7bdc4],1
  40cc37:	(bad)  
  40cc38:	ror    BYTE PTR [edi+0x1f7ffe2b],1
  40cc3e:	scas   eax,DWORD PTR es:[edi]
  40cc3f:	and    ecx,edi
  40cc41:	add    ah,ch
  40cc43:	jg     0x40cc2e
  40cc45:	cmp    BYTE PTR [edi+0x3593889],dh
  40cc4b:	xchg   ecx,eax
  40cc4c:	test   eax,0x1b7ec77b
  40cc51:	dec    esp
  40cc52:	sbb    ebx,ebx
  40cc54:	jmp    0xc6fdb381
  40cc59:	and    esp,eax
  40cc5b:	add    eax,0x30a4392e
  40cc60:	dec    eax
  40cc61:	test   DWORD PTR [esp+eiz*4-0x2c],eax
  40cc65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc66:	pusha  
  40cc67:	jae    0x40cc82
  40cc69:	mov    al,ds:0x431422ad
  40cc6e:	sti    
  40cc6f:	push   edx
  40cc70:	stc    
  40cc71:	adc    DWORD PTR es:[ebp-0xe],edx
  40cc75:	(bad)  
  40cc76:	xchg   esi,eax
  40cc77:	xor    ebx,esp
  40cc79:	loope  0x40cc6c
  40cc7b:	xchg   edx,eax
  40cc7c:	ss xor eax,0xf6f5656e
  40cc82:	rol    esp,1
  40cc84:	jg     0x40cc34
  40cc86:	push   eax
  40cc87:	das    
  40cc88:	pop    ebp
  40cc89:	add    DWORD PTR [ebx],0xef7769ff
  40cc8f:	inc    ecx
  40cc90:	jg     0x40cc25
  40cc92:	je     0x40cd04
  40cc94:	xchg   esp,eax
  40cc95:	jbe    0x40ccfa
  40cc97:	test   ch,0xdf
  40cc9a:	pop    esi
  40cc9b:	inc    ecx
  40cc9c:	aad    0xfd
  40cc9e:	repnz pop es
  40cca0:	pushf  
  40cca1:	rol    DWORD PTR [ebp-0x49e9ead6],cl
  40cca7:	shl    BYTE PTR [edx-0x47],0xb
  40ccab:	jmp    0x9a8dbe4f
  40ccb0:	out    0x5f,al
  40ccb2:	in     al,0x8a
  40ccb4:	adc    BYTE PTR ds:0xf2f58000,bl
  40ccba:	push   esp
  40ccbb:	test   DWORD PTR [edi+0x3bf64aab],edi
  40ccc1:	mov    ebx,0xe947cf8d
  40ccc6:	inc    edx
  40ccc7:	inc    esi
  40ccc8:	push   edx
  40ccc9:	scas   ax,WORD PTR es:[edi]
  40cccb:	or     eax,0x8740cfd8
  40ccd0:	clc    
  40ccd1:	sbb    eax,0xf6e762c2
  40ccd6:	jecxz  0x40cd3d
  40ccd8:	jge    0x40cc6a
  40ccda:	mov    edi,DWORD PTR [esi-0x2a]
  40ccdd:	out    dx,eax
  40ccde:	jg     0x40cc98
  40cce0:	adc    al,0x1
  40cce2:	fdivr  st(7),st
  40cce4:	sub    BYTE PTR [ebx+eiz*4-0x2919b62f],bl
  40cceb:	fsub   st(6),st
  40cced:	(bad)  
  40ccee:	mov    al,ds:0x5930a500
  40ccf3:	fiadd  DWORD PTR [esi]
  40ccf5:	push   es
  40ccf6:	sub    BYTE PTR [edx],bh
  40ccf8:	xor    eax,0x748dd94b
  40ccfd:	xor    bh,BYTE PTR [esi-0x10]
  40cd00:	pop    edi
  40cd01:	pop    ds
  40cd02:	pop    ebp
  40cd03:	adc    al,0x78
  40cd05:	ror    BYTE PTR [ecx-0x17ed0220],0x92
  40cd0c:	ins    BYTE PTR es:[edi],dx
  40cd0d:	imul   esp,DWORD PTR [ebp-0x9],0xa
  40cd11:	int3   
  40cd12:	jne    0x40cd76
  40cd14:	je     0x40cd0b
  40cd16:	xor    ebp,esi
  40cd18:	xchg   BYTE PTR [edx+ecx*1],bl
  40cd1b:	pop    ebp
  40cd1c:	adc    ebp,eax
  40cd1e:	push   ebx
  40cd1f:	mov    al,0x9c
  40cd21:	mov    eax,0x77f16098
  40cd26:	pmaddwd mm1,QWORD PTR [eax+esi*4-0x16a60f97]
  40cd2e:	dec    ebx
  40cd2f:	call   0x5f596759
  40cd34:	hlt    
  40cd35:	fstp   TBYTE PTR [ebp-0x5ecfb182]
  40cd3b:	ret    0x6aab
  40cd3e:	imul   esi,DWORD PTR [esi+ebp*1-0xe374eb3],0x48d35ad4
  40cd49:	sbb    al,BYTE PTR [eax]
  40cd4b:	dec    edi
  40cd4c:	push   ebp
  40cd4d:	cmp    eax,edi
  40cd4f:	scas   al,BYTE PTR es:[edi]
  40cd50:	push   ds
  40cd51:	pushf  
  40cd52:	push   0x25
  40cd54:	fisttp QWORD PTR [ecx+0x6aff4501]
  40cd5a:	pop    edi
  40cd5b:	rcl    cl,cl
  40cd5d:	data16 jg 0x40cd51
  40cd60:	adc    al,0xc9
  40cd62:	jo     0x40cdcb
  40cd64:	jns    0x40cddb
  40cd66:	(bad)  
  40cd67:	xchg   esp,eax
  40cd68:	cwde   
  40cd69:	lock test ch,0x66
  40cd6d:	sti    
  40cd6e:	jno    0x40cd48
  40cd70:	jle    0x40cd3f
  40cd72:	mov    DWORD PTR [ebx+edi*2],edx
  40cd75:	or     ebp,DWORD PTR [edi+0x5b]
  40cd78:	inc    edx
  40cd79:	dec    esi
  40cd7a:	bound  ebp,QWORD PTR [ecx]
  40cd7c:	fwait
  40cd7d:	push   edi
  40cd7e:	cmc    
  40cd7f:	lea    eax,[ecx]
  40cd81:	adc    eax,0x9f1c87d3
  40cd86:	repz sar DWORD PTR [eax],0x69
  40cd8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd8b:	mov    ebx,0x693a559b
  40cd90:	fild   DWORD PTR [edx]
  40cd92:	inc    esi
  40cd93:	pop    edx
  40cd94:	add    esi,esp
  40cd96:	and    BYTE PTR [edi+esi*8+0xe8eeb12],ch
  40cd9d:	inc    ecx
  40cd9e:	or     esp,ebp
  40cda0:	call   0x2e3a:0x5ea18aba
  40cda7:	imul   edx,DWORD PTR [ebp+0x29fae483],0x69
  40cdae:	cmp    DWORD PTR [esi+0x70],esi
  40cdb1:	frstor [edi-0x1]
  40cdb4:	jnp    0x40cda1
  40cdb6:	test   al,0x99
  40cdb8:	jbe    0x40ce24
  40cdba:	sbb    esp,edi
  40cdbc:	xor    al,BYTE PTR [edi]
  40cdbe:	or     edx,DWORD PTR [eax+0x29]
  40cdc1:	imul   ebp,eax,0xffffff9f
  40cdc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdc5:	inc    esi
  40cdc6:	test   BYTE PTR [ebx],dl
  40cdc8:	xor    ah,BYTE PTR [ecx-0x4c05a914]
  40cdce:	jmp    0xf7d1a0b
  40cdd3:	pop    esp
  40cdd4:	cmp    esi,edx
  40cdd6:	cmp    DWORD PTR [ebx+0x1],0x89017f2a
  40cddd:	sar    ebp,1
  40cddf:	inc    esp
  40cde0:	arpl   WORD PTR [esi+0x1a],di
  40cde3:	mov    BYTE PTR [edx+0x35f9d284],al
  40cde9:	sub    al,0xe4
  40cdeb:	cmp    dh,ah
  40cded:	xor    ebx,edx
  40cdef:	mov    esi,0x743e01b4
  40cdf4:	cmp    BYTE PTR [edx+edx*4+0x56],0xe0
  40cdf9:	xchg   ecx,eax
  40cdfa:	cmc    
  40cdfb:	jmp    0x29f7c1d2
  40ce00:	lods   eax,DWORD PTR ds:[esi]
  40ce01:	aas    
  40ce02:	inc    edx
  40ce03:	add    dh,ah
  40ce05:	lods   eax,DWORD PTR ds:[esi]
  40ce06:	add    DWORD PTR [edi+0x3492e9b6],0xffffff90
  40ce0d:	jmp    0x3ea358f5
  40ce12:	cld    
  40ce13:	add    dl,BYTE PTR [esi]
  40ce15:	and    BYTE PTR [eax],0x82
  40ce18:	imul   ecx,DWORD PTR [edx+0x46],0x5d29b05c
  40ce1f:	adc    edx,esi
  40ce21:	push   0x15c6b76a
  40ce26:	outs   dx,DWORD PTR ds:[esi]
  40ce27:	imul   esi,DWORD PTR [edi-0x43],0xffffffa1
  40ce2b:	mov    ah,0x40
  40ce2d:	sub    edi,esp
  40ce2f:	jl     0x40ce05
  40ce31:	retf   0x6696
  40ce34:	mov    ah,0x87
  40ce36:	add    DWORD PTR [ebp-0x2322247f],esi
  40ce3c:	cmp    BYTE PTR [esi+0x77],0x1d
  40ce40:	dec    ebp
  40ce41:	out    0xb9,eax
  40ce43:	dec    BYTE PTR [ebx-0x24]
  40ce46:	pop    eax
  40ce47:	adc    BYTE PTR [edi],cl
  40ce49:	lods   eax,DWORD PTR es:[esi]
  40ce4b:	push   ebp
  40ce4c:	dec    ecx
  40ce4d:	push   edi
  40ce4e:	pop    es
  40ce4f:	(bad)  
  40ce50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce51:	inc    ecx
  40ce52:	adc    eax,0xe78145ac
  40ce57:	shr    DWORD PTR [ecx-0x4516bbe],cl
  40ce5d:	or     ch,ah
  40ce5f:	pop    sp
  40ce61:	pop    ss
  40ce62:	inc    edi
  40ce63:	mov    esi,esi
  40ce65:	retf   
  40ce66:	push   esi
  40ce67:	fidivr DWORD PTR [edi+edx*8-0x1b4143c5]
  40ce6e:	outs   dx,DWORD PTR ds:[esi]
  40ce6f:	fadd   DWORD PTR [eax-0x24]
  40ce72:	call   0x9fb48e67
  40ce77:	and    BYTE PTR ds:0xb204e44c,ah
  40ce7d:	in     eax,dx
  40ce7e:	stos   DWORD PTR es:[edi],eax
  40ce7f:	ror    eax,0x3a
  40ce82:	std    
  40ce83:	mov    esi,0x179df039
  40ce88:	(bad)  
  40ce8a:	(bad)  
  40ce8b:	adc    dl,BYTE PTR ds:0xa687552c
  40ce91:	push   cs
  40ce92:	sub    eax,0x494addb0
  40ce97:	xchg   edi,ebx
  40ce99:	mov    edi,0xf9efbec5
  40ce9e:	sbb    eax,0xc87166e1
  40cea3:	loop   0x40ceb3
  40cea5:	push   esp
  40cea6:	pop    eax
  40cea7:	aad    0x19
  40cea9:	push   esp
  40ceaa:	test   eax,0xf63a1d5b
  40ceaf:	jg     0x40ceb9
  40ceb1:	jno    0x40cee8
  40ceb3:	sbb    bh,bl
  40ceb5:	xor    BYTE PTR [ecx-0x5f],dl
  40ceb8:	into   
  40ceb9:	pop    ebp
  40ceba:	(bad)  
  40cebb:	xchg   DWORD PTR cs:[esi+0x3a2c079d],ebp
  40cec2:	jge    0x40ce5c
  40cec4:	pop    edx
  40cec5:	mov    ebp,0xb0753ea9
  40ceca:	xor    cl,bh
  40cecc:	imul   ebp,DWORD PTR [edi+0x620fb8a0],0xa2781d7f
  40ced6:	in     eax,0xc
  40ced8:	mov    ds:0xc61bbc53,eax
  40cedd:	xchg   ecx,eax
  40cede:	adc    DWORD PTR ds:0x9f9d0668,0x67
  40cee5:	jns    0x40ce68
  40cee7:	hlt    
  40cee8:	or     al,0xb3
  40ceea:	mov    bh,0x3a
  40ceec:	in     al,dx
  40ceed:	push   0x21
  40ceef:	cs inc eax
  40cef1:	fmul   st,st(6)
  40cef3:	inc    esi
  40cef4:	mov    ah,0x1c
  40cef6:	add    bl,al
  40cef8:	or     eax,0x4da3b696
  40cefd:	shr    BYTE PTR [edi-0x6d],cl
  40cf00:	(bad)  
  40cf01:	loopne 0x40ce88
  40cf03:	or     eax,0x1c72b113
  40cf08:	leave  
  40cf09:	shr    DWORD PTR [esi+0x4d72d8ca],1
  40cf0f:	jp     0x40cea3
  40cf11:	jg     0x40cede
  40cf13:	pop    ss
  40cf14:	mov    al,ds:0x26b76684
  40cf19:	inc    ebx
  40cf1a:	call   0x1464:0x4d18eaf1
  40cf21:	mov    ds:0xa7a22d8,eax
  40cf26:	cmp    eax,0xd6933b9c
  40cf2b:	shl    dh,cl
  40cf2d:	out    0x2d,al
  40cf2f:	jg     0x40cf77
  40cf31:	sbb    ah,dh
  40cf33:	in     al,0xdf
  40cf35:	or     al,0xa1
  40cf37:	bound  edx,QWORD PTR [eax+0x8]
  40cf3a:	add    DWORD PTR [ebp+0x13],edi
  40cf3d:	mov    esi,0xdd4134cf
  40cf42:	shl    DWORD PTR [ecx+edi*2-0x40],cl
  40cf46:	je     0x40cf5b
  40cf48:	mov    esp,0x5d50a68c
  40cf4d:	xchg   esi,eax
  40cf4e:	outs   dx,DWORD PTR ds:[esi]
  40cf4f:	xchg   esp,eax
  40cf50:	jge    0x40cf12
  40cf52:	push   edi
  40cf53:	aaa    
  40cf54:	cmp    ah,BYTE PTR [edx-0x5f5692e2]
  40cf5a:	dec    esi
  40cf5b:	lods   eax,DWORD PTR ds:[esi]
  40cf5c:	test   ebp,ebx
  40cf5e:	dec    esi
  40cf5f:	push   ecx
  40cf60:	pop    ecx
  40cf61:	mov    ds:0xb9a719a2,eax
  40cf66:	xor    al,0xea
  40cf68:	push   0xc89828a8
  40cf6d:	sbb    BYTE PTR [ecx],ah
  40cf6f:	dec    ch
  40cf71:	add    BYTE PTR [eax+edx*2+0x5924f05],dh
  40cf78:	jg     0x40cf67
  40cf7a:	ds sbb esi,ecx
  40cf7d:	neg    DWORD PTR [eax+0xe6b07be]
  40cf83:	lea    eax,[esi+0x96f7aee]
  40cf89:	push   ecx
  40cf8a:	aad    0xfc
  40cf8c:	and    eax,0xba1f5d0c
  40cf91:	push   ss
  40cf92:	test   BYTE PTR [ecx-0x7],dh
  40cf95:	adc    dl,BYTE PTR ds:0xab5bde3f
  40cf9b:	pop    ecx
  40cf9c:	inc    ebx
  40cf9d:	je     0x40cf46
  40cf9f:	mov    bl,BYTE PTR [esp+edi*1+0x51]
  40cfa3:	mov    bl,0x40
  40cfa5:	in     al,dx
  40cfa6:	push   bx
  40cfa8:	xor    BYTE PTR ds:0x8403f2a9,al
  40cfae:	mov    ds:0x2497c5d6,al
  40cfb3:	add    al,0x55
  40cfb5:	outs   dx,BYTE PTR ds:[esi]
  40cfb6:	ret    
  40cfb7:	jmp    0xd5bd:0xc5dbabe1
  40cfbe:	(bad)  
  40cfbf:	push   ecx
  40cfc0:	adc    esi,DWORD PTR [ebp+0x52b5d2b5]
  40cfc6:	sub    ebx,DWORD PTR [ecx+esi*2+0x65b75ad]
  40cfcd:	ret    0x9666
  40cfd0:	or     bl,BYTE PTR [eax]
  40cfd2:	out    dx,al
  40cfd3:	ds iret 
  40cfd5:	out    0xdd,eax
  40cfd7:	sbb    cl,BYTE PTR [ebx+0x59]
  40cfda:	inc    esi
  40cfdb:	ret    
  40cfdc:	jge    0x40d035
  40cfde:	mov    bh,0x81
  40cfe0:	fninit 
  40cfe2:	in     al,0xb1
  40cfe4:	sbb    esi,esp
  40cfe6:	(bad)  
  40cfe7:	into   
  40cfe8:	jle    0x40cf77
  40cfea:	mov    ?,WORD PTR [esi-0x4d]
  40cfed:	xlat   BYTE PTR ds:[ebx]
  40cfee:	jo     0x40d042
  40cff0:	jb     0x40d006
  40cff2:	and    BYTE PTR [ecx-0x43],bh
  40cff5:	dec    esp
  40cff6:	lahf   
  40cff7:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40cff9:	xor    edi,eax
  40cffb:	or     esp,edx
  40cffd:	or     al,0x27
  40cfff:	mov    bl,0x1
  40d001:	jmp    0xe9cd:0x3804fdc3
  40d008:	jo     0x40cfc4
  40d00a:	pop    es
  40d00b:	jl     0x40d018
  40d00d:	jmp    0x4c639414
  40d012:	cmp    ebp,DWORD PTR [ebp+0x10e94571]
  40d018:	and    edx,DWORD PTR [esi+eax*4]
  40d01b:	lds    edx,FWORD PTR [eax]
  40d01d:	sahf   
  40d01e:	xor    BYTE PTR [eax],al
  40d020:	cmc    
  40d021:	in     al,0x41
  40d023:	aaa    
  40d024:	cs jle 0x40d032
  40d027:	daa    
  40d028:	retf   0x3b2a
  40d02b:	stc    
  40d02c:	pushf  
  40d02d:	xor    bl,BYTE PTR [ebp-0x1b]
  40d030:	dec    esi
  40d031:	out    0x92,eax
  40d033:	dec    dl
  40d035:	push   edx
  40d036:	fidiv  WORD PTR [esi]
  40d038:	in     al,0x21
  40d03a:	leave  
  40d03b:	pusha  
  40d03c:	inc    edi
  40d03d:	in     eax,dx
  40d03e:	aas    
  40d03f:	fistp  WORD PTR [esp+ebp*8+0x454efa9]
  40d046:	cld    
  40d047:	push   edx
  40d048:	fdiv   DWORD PTR gs:[edx]
  40d04b:	test   esi,ebp
  40d04d:	rcr    DWORD PTR [edi],cl
  40d04f:	jnp    0x40d05c
  40d051:	jmp    0x673baf37
  40d056:	mov    ecx,DWORD PTR [ecx+0x13f6da1c]
  40d05c:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40d05e:	sti    
  40d05f:	add    BYTE PTR [edx+ecx*2+0x60c8154b],dh
  40d066:	sub    eax,0x690d9eb4
  40d06b:	mov    ah,dh
  40d06d:	or     ecx,DWORD PTR [ebx-0x5d50e77f]
  40d073:	mov    eax,ds:0x307f0ae7
  40d078:	popf   
  40d079:	push   ebx
  40d07a:	inc    ebx
  40d07b:	pop    es
  40d07c:	outs   dx,BYTE PTR ds:[esi]
  40d07d:	push   eax
  40d07e:	pop    esp
  40d07f:	jmp    0x40d0d0
  40d081:	(bad)  
  40d082:	xor    bh,BYTE PTR [esi]
  40d084:	retf   
  40d085:	mov    ah,0x9a
  40d087:	dec    ebp
  40d088:	and    BYTE PTR [edx],cl
  40d08a:	call   0x28dc:0x85f21faa
  40d091:	sub    esp,DWORD PTR [eax]
  40d093:	pop    edx
  40d094:	jge    0x40d0a1
  40d096:	or     al,0x31
  40d098:	ja     0x40d0fb
  40d09a:	retf   
  40d09b:	add    eax,0xeb004744
  40d0a0:	mov    cl,BYTE PTR [eax+0x6cf37914]
  40d0a6:	js     0x40d10d
  40d0a8:	jmp    0x40d083
  40d0aa:	cmp    eax,0x410af0c8
  40d0af:	(bad)  
  40d0b0:	adc    BYTE PTR [ebx],dl
  40d0b2:	or     eax,0x84a906b6
  40d0b7:	push   ds
  40d0b8:	popf   
  40d0b9:	int    0x2b
  40d0bb:	adc    bh,dl
  40d0bd:	sub    edi,esi
  40d0bf:	aam    0xa9
  40d0c1:	jl     0x40d089
  40d0c3:	loope  0x40d13b
  40d0c5:	cdq    
  40d0c6:	inc    eax
  40d0c7:	inc    ecx
  40d0c8:	js     0x40d0cf
  40d0ca:	push   esp
  40d0cb:	cmp    eax,DWORD PTR [edi-0x64c53395]
  40d0d1:	imul   edx,DWORD PTR [edx-0x67],0xfe3faa42
  40d0d8:	outs   dx,BYTE PTR ds:[esi]
  40d0d9:	xlat   BYTE PTR ds:[ebx]
  40d0da:	fld    QWORD PTR [edi-0x425b1b81]
  40d0e0:	push   ebp
  40d0e1:	or     ch,BYTE PTR [ebp-0x52cb556e]
  40d0e7:	or     al,0x47
  40d0e9:	pop    ss
  40d0ea:	fwait
  40d0eb:	test   ebx,edi
  40d0ed:	ins    BYTE PTR es:[edi],dx
  40d0ee:	repnz iret 
  40d0f0:	cmc    
  40d0f1:	jle    0x40d159
  40d0f3:	jle    0x40d107
  40d0f5:	adc    BYTE PTR [edx+edi*2-0x67],ah
  40d0f9:	daa    
  40d0fa:	stc    
  40d0fb:	sub    BYTE PTR [edi],bh
  40d0fd:	daa    
  40d0fe:	jmp    0x40d119
  40d100:	inc    esi
  40d101:	out    dx,al
  40d102:	mov    al,ds:0xaab1e983
  40d107:	add    BYTE PTR [ecx+ebp*1-0x53fa1013],dh
  40d10e:	dec    ebp
  40d10f:	adc    eax,0x571cbbaa
  40d114:	inc    eax
  40d115:	pop    esp
  40d116:	(bad)  
  40d117:	icebp  
  40d118:	inc    ebx
  40d119:	repnz imul bp,WORD PTR [esi+0x2a],0x18f1
  40d120:	pop    ebp
  40d121:	in     eax,0x7b
  40d123:	mov    WORD PTR ds:0x2c0dfa72,es
  40d129:	dec    eax
  40d12a:	div    DWORD PTR [ebp-0x3aef6128]
  40d130:	arpl   WORD PTR [ebp-0x29],bp
  40d133:	sub    al,0xd5
  40d135:	fstp   TBYTE PTR [ebx-0x74]
  40d138:	nop
  40d139:	jle    0x40d0f0
  40d13b:	(bad)  
  40d13c:	mov    bh,0xe8
  40d13e:	add    DWORD PTR [esi],esp
  40d140:	and    DWORD PTR [eax+0x40891883],ecx
  40d146:	int3   
  40d147:	outs   dx,BYTE PTR ds:[esi]
  40d149:	inc    ebp
  40d14a:	mov    ebx,0xa2469c8e
  40d14f:	pop    edi
  40d150:	inc    edi
  40d151:	(bad)  
  40d152:	sti    
  40d153:	xchg   esi,eax
  40d154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d155:	inc    esp
  40d156:	mov    edi,0x3e7ec3f8
  40d15b:	add    BYTE PTR [eax-0x19057600],al
  40d161:	lods   al,BYTE PTR ds:[esi]
  40d162:	int    0x6b
  40d164:	rcr    BYTE PTR [edx+0x47],1
  40d167:	sub    ebx,esp
  40d169:	push   edi
  40d16a:	and    al,0x72
  40d16c:	inc    edx
  40d16d:	sub    al,0xc2
  40d16f:	imul   ecx,DWORD PTR [ecx-0x25a20982],0x973b183d
  40d179:	loop   0x40d1dc
  40d17b:	pop    esp
  40d17c:	frstor [ebx+0x4b3661fc]
  40d182:	mov    ebp,0x6396ca41
  40d187:	sub    DWORD PTR [esi+0x11],esp
  40d18a:	outs   dx,BYTE PTR ds:[esi]
  40d18b:	dec    esp
  40d18c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d18d:	sub    esi,DWORD PTR [ebx]
  40d18f:	aam    0x68
  40d191:	pop    eax
  40d192:	mov    eax,0x721ccc89
  40d197:	xchg   edx,eax
  40d198:	out    dx,eax
  40d199:	sub    cl,bh
  40d19b:	cmp    eax,0x1f7d555c
  40d1a0:	dec    ebx
  40d1a1:	ret    0x675b
  40d1a4:	(bad)  
  40d1a5:	or     eax,0x7ca8263a
  40d1aa:	xchg   ebp,eax
  40d1ab:	jae    0x40d1b9
  40d1ad:	sbb    BYTE PTR [eax+0x1237ee23],al
  40d1b3:	je     0x40d185
  40d1b5:	jb     0x40d18a
  40d1b7:	pop    eax
  40d1b8:	pop    es
  40d1b9:	into   
  40d1ba:	data16 (bad) 
  40d1bc:	jbe    0x40d141
  40d1be:	stos   BYTE PTR es:[edi],al
  40d1bf:	mov    eax,ds:0xcd4ba8a4
  40d1c4:	dec    edx
  40d1c5:	add    eax,0x70cf7bc5
  40d1ca:	jbe    0x40d215
  40d1cc:	adc    DWORD PTR [esi+0x5b],ecx
  40d1cf:	jmp    0x29a5e7d5
  40d1d4:	jecxz  0x40d1c0
  40d1d6:	and    eax,0xd1bc68c0
  40d1db:	pop    esi
  40d1dc:	jo     0x40d1e5
  40d1de:	lock cmp al,0x8c
  40d1e1:	pusha  
  40d1e2:	inc    edx
  40d1e3:	lods   eax,DWORD PTR ds:[esi]
  40d1e4:	mov    ah,0xa3
  40d1e6:	ds push edx
  40d1e8:	(bad)  
  40d1e9:	lock push edx
  40d1eb:	sbb    BYTE PTR [edx+0x6cd5a2f],bh
  40d1f1:	add    eax,DWORD PTR [edx+0x54]
  40d1f4:	mov    eax,ebx
  40d1f6:	ins    DWORD PTR es:[edi],dx
  40d1f7:	push   edx
  40d1f8:	out    0x34,al
  40d1fa:	outs   dx,DWORD PTR ds:[esi]
  40d1fb:	jg     0x40d1ca
  40d1fd:	mov    esp,0xaded4f90
  40d202:	sbb    edi,DWORD PTR [esi+0x58b03d02]
  40d208:	jno    0x40d209
  40d20a:	pop    esp
  40d20b:	inc    ecx
  40d20c:	icebp  
  40d20d:	aam    0x85
  40d20f:	mov    al,ds:0xfaf043c4
  40d214:	(bad)  
  40d215:	leave  
  40d216:	fld    TBYTE PTR [edx-0x7b]
  40d219:	repnz rcr ch,1
  40d21c:	push   eax
  40d21d:	in     al,0x81
  40d21f:	mov    al,ds:0x11374532
  40d224:	mov    ah,0xfe
  40d226:	dec    ebx
  40d227:	pop    ss
  40d228:	jmp    0xd2185d5b
  40d22d:	addr16 hlt 
  40d22f:	dec    ecx
  40d230:	add    al,0xf9
  40d232:	xor    BYTE PTR [ecx+0x68],0x29
  40d236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d237:	repz daa 
  40d239:	dec    esp
  40d23a:	(bad)  
  40d23b:	xchg   esi,eax
  40d23c:	cwde   
  40d23d:	les    ebx,FWORD PTR [ecx+0x22]
  40d240:	xor    ch,BYTE PTR [ecx+0x4b]
  40d243:	rdtsc  
  40d245:	test   BYTE PTR [ebx],0xda
  40d248:	mov    edx,0xc41162e4
  40d24d:	outs   dx,DWORD PTR ds:[esi]
  40d24e:	jb     0x40d2c4
  40d250:	adc    cl,dh
  40d252:	or     BYTE PTR [ebx],0x45
  40d255:	or     al,0x68
  40d257:	neg    BYTE PTR [edx+0x45f01e59]
  40d25d:	retf   0xe7e8
  40d260:	in     eax,0x18
  40d262:	cld    
  40d263:	mov    dh,0x19
  40d265:	enter  0x5eaa,0xe1
  40d269:	outs   dx,BYTE PTR ds:[esi]
  40d26a:	clc    
  40d26b:	mov    ch,0xce
  40d26d:	in     eax,dx
  40d26e:	jne    0x40d2a1
  40d270:	pop    edx
  40d271:	call   0xfe54:0xdae46221
  40d278:	popa   
  40d279:	xor    al,0x19
  40d27b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d27c:	jae    0x40d262
  40d27e:	in     al,dx
  40d27f:	into   
  40d280:	call   0xd7494a99
  40d285:	and    BYTE PTR [esi-0x19359670],0x2a
  40d28c:	jmp    0xb7b9bcb9
  40d291:	popf   
  40d292:	adc    BYTE PTR [ecx],dl
  40d294:	icebp  
  40d295:	mov    esp,0x3e54c7cd
  40d29a:	inc    ebx
  40d29b:	and    eax,0x453d9cef
  40d2a0:	ss pushf 
  40d2a2:	das    
  40d2a3:	jno    0x40d271
  40d2a5:	pop    ss
  40d2a6:	fucomip st,st(6)
  40d2a8:	in     eax,dx
  40d2a9:	inc    eax
  40d2aa:	mov    DWORD PTR [ecx+ecx*4],ebp
  40d2ad:	cmp    ch,0x60
  40d2b0:	xor    al,BYTE PTR [edx]
  40d2b2:	stc    
  40d2b3:	lea    esi,[esi-0x13]
  40d2b6:	jns    0x40d2d0
  40d2b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2b9:	jmp    0x18a4:0x45b91a3e
  40d2c0:	mov    bl,0x73
  40d2c2:	imul   esi,ecx,0xffffffd6
  40d2c5:	and    ebx,DWORD PTR [edx-0xfe1199f]
  40d2cb:	loope  0x40d290
  40d2cd:	dec    eax
  40d2ce:	push   edx
  40d2cf:	sub    eax,0xfd4ca79c
  40d2d4:	mov    eax,ds:0x5ee6d378
  40d2d9:	fnsave [ebx]
  40d2db:	dec    ebx
  40d2dc:	xor    BYTE PTR [ecx+0x5d6fc0c4],0x62
  40d2e3:	std    
  40d2e4:	fdivr  QWORD PTR [eax-0x7a4fbb6c]
  40d2ea:	push   0x1b
  40d2ec:	push   esp
  40d2ed:	sar    BYTE PTR [eax+0x3],cl
  40d2f0:	add    DWORD PTR [esi],0xf064b6c9
  40d2f6:	adc    ch,ch
  40d2f8:	jge    0x40d2a4
  40d2fa:	jns    0x40d286
  40d2fc:	sbb    esp,DWORD PTR [esi]
  40d2fe:	cld    
  40d2ff:	pop    ecx
  40d300:	mov    ecx,0x1887244
  40d305:	bound  ebx,QWORD PTR [edi]
  40d307:	test   al,0x4b
  40d309:	mov    DWORD PTR [ebp+0x62],0xe7e830b0
  40d310:	adc    edx,DWORD PTR [edx]
  40d312:	cli    
  40d313:	pop    edx
  40d314:	mov    ds,ebp
  40d316:	mov    es,ecx
  40d318:	nop
  40d319:	(bad)  
  40d31a:	shl    cl,1
  40d31c:	into   
  40d31d:	xchg   BYTE PTR [eax-0x600f46d2],dh
  40d323:	add    edx,DWORD PTR [ecx+edi*4+0x16387cfb]
  40d32a:	mov    edi,0xbb8e74a8
  40d32f:	push   ebx
  40d330:	loopne 0x40d2b2
  40d332:	pop    es
  40d333:	cmp    BYTE PTR [edx+0x4d],cl
  40d336:	addr16 inc ebp
  40d338:	pop    ebx
  40d339:	push   es
  40d33a:	cmp    DWORD PTR ds:0xc268849a,ecx
  40d340:	lahf   
  40d341:	sbb    al,0x54
  40d343:	mov    ds:0xcd770ed5,al
  40d348:	mov    edx,DWORD PTR [esi]
  40d34a:	cwde   
  40d34b:	test   BYTE PTR [eax+0x6f],ch
  40d34e:	add    BYTE PTR [ebx],bh
  40d350:	repz sub ebp,DWORD PTR [ebx]
  40d353:	lea    eax,[ebx]
  40d355:	shl    DWORD PTR [eax],1
  40d357:	sub    eax,0x69b4ebf0
  40d35c:	cmc    
  40d35d:	shl    BYTE PTR [esi-0x18],1
  40d360:	outs   dx,DWORD PTR ds:[esi]
  40d361:	and    ebp,edi
  40d363:	pop    ebp
  40d364:	inc    esi
  40d365:	div    edi
  40d367:	cmc    
  40d368:	add    eax,0x28bc3704
  40d36d:	add    al,0x6d
  40d36f:	imul   esp,DWORD PTR [edi],0x4db333da
  40d375:	adc    esi,DWORD PTR [edi+0x58]
  40d378:	inc    ebx
  40d379:	xchg   BYTE PTR [eax+eax*4+0x27],dl
  40d37d:	xchg   esi,eax
  40d37e:	mov    ebp,0x2ef003b6
  40d383:	iret   
  40d384:	push   ebp
  40d385:	clc    
  40d386:	mov    al,ds:0x583aa421
  40d38b:	sub    DWORD PTR [edx],esp
  40d38d:	clc    
  40d38e:	jns    0x40d3b8
  40d390:	inc    ecx
  40d391:	imul   esp,DWORD PTR [edx-0x481eb56f],0x8256d75f
  40d39b:	frstor [ebx]
  40d39d:	pushf  
  40d39e:	adc    BYTE PTR [eax+ebp*8+0x49],dh
  40d3a2:	push   edi
  40d3a3:	mov    al,0x63
  40d3a5:	call   0xb7d7:0x73249255
  40d3ac:	iret   
  40d3ad:	jne    0x40d3fe
  40d3af:	cmp    BYTE PTR [ebx],ch
  40d3b1:	lahf   
  40d3b2:	stos   BYTE PTR es:[edi],al
  40d3b3:	xchg   ebx,esp
  40d3b5:	mov    ch,0xb7
  40d3b7:	cs inc ebx
  40d3b9:	js     0x40d430
  40d3bb:	pop    edx
  40d3bc:	sbb    eax,0xe985497b
  40d3c1:	jl     0x40d344
  40d3c3:	lods   eax,DWORD PTR ds:[esi]
  40d3c4:	mov    ebx,0xa76b544b
  40d3c9:	aad    0xd0
  40d3cb:	les    esi,FWORD PTR [esi-0x40a08e81]
  40d3d1:	ficom  DWORD PTR [edi+0x8]
  40d3d4:	and    esi,DWORD PTR [ebx+0x63db7dc6]
  40d3da:	les    ebp,FWORD PTR [edx-0x45c84548]
  40d3e0:	inc    ebp
  40d3e1:	pop    ebp
  40d3e2:	int3   
  40d3e3:	scas   al,BYTE PTR es:[edi]
  40d3e4:	loop   0x40d412
  40d3e6:	js     0x40d3e2
  40d3e8:	mov    ch,0x11
  40d3ea:	dec    ebx
  40d3eb:	dec    esi
  40d3ec:	xchg   ebx,eax
  40d3ed:	mov    ds:0x40cd942c,al
  40d3f2:	sub    eax,0xabfc0c31
  40d3f7:	(bad)  
  40d3f9:	jge    0x40d3b6
  40d3fb:	adc    ebx,DWORD PTR [esi+0x48]
  40d3fe:	call   0x35f7d2c1
  40d403:	dec    sp
  40d405:	cmp    edi,DWORD PTR [edi+0x4c]
  40d408:	pop    ebp
  40d409:	jge    0x40d3fb
  40d40b:	xor    al,0xb0
  40d40d:	ins    BYTE PTR es:[edi],dx
  40d40e:	jo     0x40d45c
  40d410:	fs and al,0xd4
  40d413:	pop    es
  40d414:	push   0xffffffa5
  40d416:	lods   al,BYTE PTR ds:[esi]
  40d417:	or     al,0xd9
  40d419:	cs addr16 cld 
  40d41c:	adc    ah,BYTE PTR [edi-0x47]
  40d41f:	mov    dl,0x8e
  40d421:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40d423:	add    ch,BYTE PTR [edx-0xb]
  40d426:	pop    ebx
  40d427:	sub    DWORD PTR [edi],edx
  40d429:	int3   
  40d42a:	ins    BYTE PTR es:[edi],dx
  40d42b:	cdq    
  40d42c:	arpl   WORD PTR [eax],di
  40d42e:	out    dx,eax
  40d42f:	or     eax,0xf0eec15e
  40d434:	jmp    0xfe72:0xf8881213
  40d43b:	(bad)  
  40d43c:	pop    ds
  40d43d:	rol    BYTE PTR [edx],0xf4
  40d440:	inc    esi
  40d441:	rcr    DWORD PTR gs:[edx-0x5571d08],cl
  40d448:	and    ebp,ebx
  40d44a:	in     al,dx
  40d44b:	bound  esi,QWORD PTR [ebx-0x9]
  40d44e:	inc    esi
  40d44f:	pop    ecx
  40d450:	jmp    DWORD PTR [eax+0x3f5627c]
  40d456:	ins    DWORD PTR es:[edi],dx
  40d457:	jns    0x40d43e
  40d459:	xor    DWORD PTR [esi+ebx*8-0x6e8e777a],0xf5e8a9c6
  40d464:	add    al,0x72
  40d466:	loop   0x40d494
  40d468:	or     BYTE PTR [ecx],0x76
  40d46b:	mov    ah,0x80
  40d46d:	pop    esp
  40d46e:	pop    ds
  40d46f:	pop    edx
  40d470:	inc    edi
  40d471:	pushf  
  40d472:	sub    eax,0x407f8a75
  40d477:	out    dx,eax
  40d478:	jecxz  0x40d445
  40d47a:	popa   
  40d47b:	mov    bh,0xdf
  40d47d:	mul    BYTE PTR [ebx]
  40d47f:	xchg   esi,eax
  40d480:	lahf   
  40d481:	test   eax,0x3601b614
  40d486:	imul   edx,edx,0x26
  40d489:	leave  
  40d48a:	in     al,0x5b
  40d48c:	ins    DWORD PTR es:[edi],dx
  40d48d:	adc    eax,0x9293b323
  40d492:	iret   
  40d493:	nop
  40d494:	jecxz  0x40d4d2
  40d496:	js     0x40d487
  40d498:	loope  0x40d489
  40d49a:	mov    al,0x46
  40d49c:	dec    esi
  40d49d:	sbb    DWORD PTR [edi+0x583d89d8],esp
  40d4a3:	inc    eax
  40d4a4:	aas    
  40d4a5:	cmp    BYTE PTR [edi],bh
  40d4a7:	jg     0x40d4e2
  40d4a9:	xor    eax,0x5fb208bc
  40d4ae:	dec    esp
  40d4af:	in     eax,0x24
  40d4b1:	push   cs
  40d4b2:	sahf   
  40d4b3:	mov    esp,0xfcf1afd3
  40d4b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4b9:	pop    esp
  40d4ba:	repz xchg ecx,eax
  40d4bc:	addr16 dec ecx
  40d4be:	mov    edi,0x2d45a367
  40d4c3:	push   cs
  40d4c4:	int3   
  40d4c5:	adc    al,0x24
  40d4c7:	dec    esi
  40d4c8:	iret   
  40d4c9:	push   cs
  40d4ca:	lds    edx,FWORD PTR [ecx+edx*1-0x5caea82d]
  40d4d1:	pop    edi
  40d4d2:	push   esi
  40d4d3:	dec    ebp
  40d4d4:	aaa    
  40d4d5:	and    dh,BYTE PTR [esi]
  40d4d7:	pop    ss
  40d4d8:	xor    bl,al
  40d4da:	mov    WORD PTR [esi+0x1492de7e],?
  40d4e0:	popf   
  40d4e1:	in     eax,dx
  40d4e2:	shl    BYTE PTR [ecx],0x51
  40d4e5:	je     0x40d4d6
  40d4e7:	jne    0x40d509
  40d4e9:	inc    edx
  40d4ea:	add    esi,DWORD PTR [ebp-0x3986b0b8]
  40d4f0:	(bad)  
  40d4f1:	add    BYTE PTR [ebx+esi*2+0x50c37324],bl
  40d4f8:	sti    
  40d4f9:	xlat   BYTE PTR ds:[ebx]
  40d4fa:	ins    DWORD PTR es:[edi],dx
  40d4fb:	xchg   edx,eax
  40d4fc:	pop    edi
  40d4fd:	sar    DWORD PTR [edi+0x166c91a3],1
  40d503:	adc    ebp,DWORD PTR [esp+eax*4+0x75]
  40d507:	xchg   edi,eax
  40d508:	xchg   ebx,eax
  40d509:	and    DWORD PTR [esi],ebp
  40d50b:	sub    ebx,DWORD PTR [edi+0x7e]
  40d50e:	hlt    
  40d50f:	jmp    0x40d527
  40d511:	jno    0x40d4b9
  40d513:	and    BYTE PTR [edx],dh
  40d515:	or     eax,0x9175e877
  40d51a:	retf   0xbff6
  40d51d:	xor    esi,DWORD PTR [ecx+edx*4]
  40d520:	gs mov ebp,0xf13788a1
  40d526:	aas    
  40d527:	fisttp WORD PTR [edx]
  40d529:	loop   0x40d53f
  40d52b:	in     eax,dx
  40d52c:	adc    al,0x43
  40d52e:	loopne 0x40d529
  40d530:	nop    DWORD PTR ds:0x84278146
  40d537:	pop    ecx
  40d538:	adc    esp,ecx
  40d53a:	push   ss
  40d53b:	lods   al,BYTE PTR ds:[esi]
  40d53c:	adc    DWORD PTR [edi-0x44514b5c],esi
  40d542:	es inc esp
  40d544:	mov    dh,0x3d
  40d546:	jb     0x40d5c7
  40d548:	pop    DWORD PTR [edx]
  40d54a:	push   edx
  40d54b:	push   eax
  40d54c:	jg     0x40d4fe
  40d54e:	add    ah,ah
  40d550:	retf   
  40d551:	xchg   DWORD PTR [edx-0x64],edi
  40d554:	cmp    BYTE PTR [ebp+0x3da87c7],ch
  40d55a:	lea    esp,[ebx+edx*1+0x37587344]
  40d561:	fld    TBYTE PTR ds:0x6f25eafc
  40d567:	fadd   DWORD PTR [eax+ecx*1]
  40d56a:	mov    dl,0xee
  40d56c:	pop    ebp
  40d56d:	and    dh,BYTE PTR [edx+0x44]
  40d570:	and    al,0x99
  40d572:	cmp    DWORD PTR [ebx],edi
  40d574:	lea    esi,[esi-0x4a]
  40d577:	in     eax,0x7e
  40d579:	lods   eax,DWORD PTR ds:[esi]
  40d57a:	inc    edi
  40d57b:	inc    eax
  40d57c:	and    ah,BYTE PTR [edi+0x7943c702]
  40d582:	dec    ebp
  40d583:	das    
  40d584:	pop    ebx
  40d585:	nop
  40d586:	push   ds
  40d587:	fld    QWORD PTR [edx]
  40d589:	or     BYTE PTR [ebp-0x5117b667],al
  40d58f:	lahf   
  40d590:	sbb    al,0xcd
  40d592:	test   al,0x5a
  40d594:	paddsb mm6,mm3
  40d597:	rol    BYTE PTR [edi+0x4df927ff],0x3d
  40d59e:	or     al,0x9b
  40d5a0:	out    dx,al
  40d5a1:	mov    ebx,DWORD PTR [eax-0x79162c86]
  40d5a7:	aas    
  40d5a8:	push   ss
  40d5a9:	dec    ecx
  40d5aa:	sub    edi,DWORD PTR [edi]
  40d5ac:	out    0x30,al
  40d5ae:	sub    ch,ah
  40d5b0:	inc    ecx
  40d5b1:	cmp    eax,0x4e3cc583
  40d5b6:	ss jae 0x40d576
  40d5b9:	inc    esp
  40d5ba:	outs   dx,BYTE PTR ds:[esi]
  40d5bb:	adc    eax,0xe61e87cf
  40d5c0:	stc    
  40d5c1:	pop    ds
  40d5c2:	stos   DWORD PTR es:[edi],eax
  40d5c3:	push   edi
  40d5c4:	inc    ebx
  40d5c5:	in     eax,0xda
  40d5c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5c8:	sahf   
  40d5c9:	ja     0x40d57e
  40d5cb:	push   ebx
  40d5cc:	mov    ah,0xe8
  40d5ce:	icebp  
  40d5cf:	inc    esp
  40d5d0:	cs jle 0x40d578
  40d5d3:	adc    al,0x62
  40d5d5:	retf   
  40d5d6:	outs   dx,BYTE PTR ds:[esi]
  40d5d7:	cmp    al,0xf0
  40d5d9:	hlt    
  40d5da:	inc    ah
  40d5dc:	add    al,0x50
  40d5de:	push   eax
  40d5df:	xchg   edx,eax
  40d5e0:	adc    DWORD PTR [ecx],ebx
  40d5e2:	mov    cl,0xd6
  40d5e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5e5:	inc    ebp
  40d5e6:	push   eax
  40d5e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5e8:	retf   
  40d5e9:	pop    eax
  40d5ea:	pop    eax
  40d5eb:	popa   
  40d5ec:	jne    0x40d60b
  40d5ee:	push   esp
  40d5ef:	ret    
  40d5f0:	retf   0x11dd
  40d5f3:	sub    BYTE PTR [ebx+edx*4+0x78ba009d],dh
  40d5fa:	in     eax,dx
  40d5fb:	or     dl,BYTE PTR [ebp-0x5a117d9d]
  40d601:	mov    edi,0x4477c08
  40d606:	iret   
  40d607:	lock adc dh,0x34
  40d60b:	imul   ebx,DWORD PTR [ebx+0x2ce17fee],0xffffffd9
  40d612:	cmp    BYTE PTR [ebx+0x68682df1],bh
  40d618:	(bad)  
  40d619:	in     eax,dx
  40d61a:	retf   
  40d61b:	shl    bl,cl
  40d61d:	mov    ch,0x6c
  40d61f:	jl     0x40d5f0
  40d621:	mov    ebx,0xf4e038f0
  40d626:	not    BYTE PTR [edi]
  40d628:	ds das 
  40d62a:	adc    eax,0x40bde2
  40d62f:	aad    0x32
  40d631:	mov    ds:0x11adce3a,al
  40d636:	(bad)  
  40d637:	xor    ch,BYTE PTR [esp+eax*4]
  40d63a:	aaa    
  40d63b:	adc    eax,0xf9b43940
  40d640:	cld    
  40d641:	pop    ecx
  40d642:	pop    ss
  40d643:	cmp    esp,edi
  40d645:	cmp    DWORD PTR ds:0xa4378f4d,0xffffffa6
  40d64c:	aaa    
  40d64d:	adc    al,cl
  40d64f:	xlat   BYTE PTR ds:[ebx]
  40d650:	add    al,0x68
  40d652:	jnp    0x40d5f1
  40d654:	stos   DWORD PTR es:[edi],eax
  40d655:	sub    al,0x3d
  40d657:	inc    ecx
  40d658:	retf   
  40d659:	xchg   edi,eax
  40d65a:	fst    DWORD PTR [ebp+0x3d]
  40d65d:	cmp    bl,BYTE PTR [ecx-0x4a]
  40d660:	pop    ss
  40d661:	push   ebx
  40d662:	sbb    al,0xa
  40d664:	jne    0x40d686
  40d666:	xchg   ebx,eax
  40d667:	test   eax,0xc7a3669b
  40d66c:	js     0x40d617
  40d66e:	mov    dl,0xa5
  40d670:	lahf   
  40d671:	out    0x78,al
  40d673:	or     bh,ch
  40d675:	mov    dl,0xac
  40d677:	xchg   ebp,eax
  40d678:	sar    DWORD PTR [esi+0x31c74a26],cl
  40d67e:	inc    edi
  40d67f:	aam    0x1b
  40d681:	adc    eax,ebx
  40d683:	mov    esi,0x55daf046
  40d688:	test   DWORD PTR cs:[esi-0x18],edx
  40d68c:	cmp    ebp,edx
  40d68e:	xlat   BYTE PTR ds:[ebx]
  40d68f:	sub    eax,0xed06b0a4
  40d694:	fldenv [edi-0x74]
  40d698:	gs pushf 
  40d69a:	sbb    eax,0xba3a0d2d
  40d69f:	adc    al,0xef
  40d6a1:	sbb    ah,al
  40d6a3:	stos   BYTE PTR es:[edi],al
  40d6a4:	lds    esi,FWORD PTR ds:0xa90b92f9
  40d6aa:	js     0x40d67f
  40d6ac:	pop    ecx
  40d6ad:	outs   dx,DWORD PTR ds:[esi]
  40d6ae:	mov    DWORD PTR [esi-0x11794d6],eax
  40d6b4:	scas   al,BYTE PTR es:[edi]
  40d6b5:	sub    dx,WORD PTR [edx+eiz*2+0x66a29887]
  40d6bd:	pop    edi
  40d6be:	stos   BYTE PTR es:[edi],al
  40d6bf:	daa    
  40d6c0:	adc    al,0x19
  40d6c2:	mov    bl,0xd9
  40d6c4:	jae    0x40d6da
  40d6c6:	push   ebx
  40d6c7:	nop
  40d6c8:	int3   
  40d6c9:	mov    esi,0xd310e41c
  40d6ce:	cmp    eax,0xf04fe266
  40d6d3:	ins    BYTE PTR es:[edi],dx
  40d6d4:	int3   
  40d6d5:	xchg   DWORD PTR [ebp-0x18],ebp
  40d6d8:	inc    edx
  40d6d9:	jno    0x40d708
  40d6db:	xchg   esp,eax
  40d6dc:	mov    eax,ds:0x46fdeded
  40d6e1:	jo     0x40d6ed
  40d6e3:	sub    DWORD PTR [edx-0x7d9c3f99],esi
  40d6e9:	mov    eax,DWORD PTR cs:[esi+edi*2]
  40d6ed:	popf   
  40d6ee:	out    0x0,al
  40d6f0:	xor    dl,BYTE PTR [ebp-0xb]
  40d6f3:	je     0x40d6ec
  40d6f5:	ja     0x40d75a
  40d6f7:	xlat   BYTE PTR cs:[ebx]
  40d6f9:	push   es
  40d6fa:	or     al,0xfc
  40d6fc:	shl    ah,cl
  40d6fe:	es xchg ebx,eax
  40d700:	jbe    0x40d6cc
  40d702:	inc    ecx
  40d703:	les    esi,FWORD PTR [esi]
  40d705:	div    dl
  40d707:	outs   dx,DWORD PTR ds:[esi]
  40d708:	and    bh,BYTE PTR [edi+ebx*8]
  40d70b:	sub    ebp,edx
  40d70d:	xor    DWORD PTR [ebx+0x50],edx
  40d710:	xor    al,0x7c
  40d712:	sbb    al,0x83
  40d714:	int3   
  40d715:	add    bh,BYTE PTR [eax+0x10]
  40d718:	int3   
  40d719:	icebp  
  40d71a:	idiv   edx
  40d71c:	mov    eax,ds:0x2e41e676
  40d721:	mov    dl,bl
  40d723:	outs   dx,DWORD PTR ds:[esi]
  40d724:	lea    eax,[ebp+0x8]
  40d727:	dec    eax
  40d728:	mov    ebx,0xb654daa6
  40d72d:	pushf  
  40d72e:	jbe    0x40d761
  40d730:	push   esi
  40d731:	fsub   DWORD PTR [edx+ebx*1+0x55d867a0]
  40d738:	inc    esp
  40d739:	mov    DWORD PTR [ebx+0x69772967],esp
  40d73f:	and    ch,ch
  40d741:	mov    ch,0xdc
  40d743:	(bad)  
  40d744:	or     eax,0xe2573012
  40d749:	dec    ebp
  40d74a:	push   edx
  40d74b:	adc    eax,0x88ccb43d
  40d750:	jg     0x40d7ca
  40d752:	cmp    al,0x20
  40d754:	add    ebp,DWORD PTR [esi]
  40d756:	adc    ecx,DWORD PTR [ebp-0x57]
  40d759:	out    dx,al
  40d75a:	xchg   ecx,eax
  40d75b:	stos   BYTE PTR es:[edi],al
  40d75c:	das    
  40d75d:	or     edx,DWORD PTR [ecx]
  40d75f:	jbe    0x40d7c4
  40d761:	sbb    dl,ah
  40d763:	adc    al,0x7c
  40d765:	mov    dh,0xc4
  40d767:	in     eax,dx
  40d768:	push   eax
  40d769:	cmp    DWORD PTR [ebx+eiz*4+0x52],eax
  40d76d:	in     eax,0x4e
  40d76f:	in     al,0x69
  40d771:	jge    0x40d777
  40d773:	pop    eax
  40d774:	xor    BYTE PTR [ecx+0x76286411],ah
  40d77a:	loop   0x40d77c
  40d77c:	iret   
  40d77d:	in     al,dx
  40d77e:	test   DWORD PTR [edi-0x5cdbb1fb],edi
  40d784:	or     DWORD PTR [esi+edx*1],esp
  40d787:	add    edx,DWORD PTR [ecx-0x12]
  40d78a:	cs jmp 0x356:0x5ec5fa1f
  40d792:	in     al,dx
  40d793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d794:	or     bh,BYTE PTR [eax]
  40d796:	jecxz  0x40d7a7
  40d798:	dec    esi
  40d799:	ja     0x40d7e9
  40d79b:	push   0x135de1e3
  40d7a0:	mov    ds:0x9c46ecf8,eax
  40d7a5:	jmp    0x8363:0xe916474f
  40d7ac:	test   eax,0xdce33e54
  40d7b1:	sahf   
  40d7b2:	lods   eax,DWORD PTR ds:[esi]
  40d7b3:	scas   al,BYTE PTR es:[edi]
  40d7b4:	test   dl,0x20
  40d7b7:	xor    BYTE PTR [edi],ch
  40d7b9:	sbb    BYTE PTR [edx],bh
  40d7bb:	mov    al,ds:0x617a7ef9
  40d7c0:	adc    BYTE PTR [ecx+0x47],cl
  40d7c3:	fnstsw WORD PTR [eax+ebp*4-0x37]
  40d7c7:	pop    edx
  40d7c8:	aam    0xd2
  40d7ca:	pop    eax
  40d7cb:	dec    esi
  40d7cc:	mov    bh,dh
  40d7ce:	out    0x91,eax
  40d7d0:	jb     0x40d7f0
  40d7d2:	fimul  DWORD PTR [eax+0x62936ef5]
  40d7d8:	arpl   WORD PTR [ebp-0x5e],sp
  40d7db:	int3   
  40d7dc:	(bad)  [ebp+0x31]
  40d7df:	inc    eax
  40d7e0:	test   eax,ebp
  40d7e2:	ret    
  40d7e3:	call   0x2a5f:0xe409a9cc
  40d7ea:	push   ebp
  40d7eb:	das    
  40d7ec:	cmpxchg cl,al
  40d7ef:	add    esi,DWORD PTR [ecx]
  40d7f1:	dec    ecx
  40d7f2:	inc    ebx
  40d7f3:	ins    DWORD PTR es:[edi],dx
  40d7f4:	xchg   DWORD PTR [ebp-0x34],ecx
  40d7f7:	sub    BYTE PTR ds:0x27f7c75c,bl
  40d7fd:	add    DWORD PTR [edx+0x20846804],edx
  40d803:	mov    esp,0x69cc16e7
  40d808:	stos   DWORD PTR es:[edi],eax
  40d809:	sbb    DWORD PTR [eax-0xe06f492],esp
  40d80f:	or     eax,0x3218e392
  40d814:	imul   ebx,DWORD PTR [esi+ecx*4+0x4c6ba905],0xffffffb3
  40d81c:	and    BYTE PTR [ebx],dl
  40d81e:	fld    st(1)
  40d820:	in     al,0x9b
  40d822:	test   DWORD PTR [ebx-0x4627f29b],edx
  40d828:	test   eax,0xfd0fe1c0
  40d82d:	push   edx
  40d82e:	sub    ecx,DWORD PTR [eax]
  40d830:	inc    edi
  40d831:	inc    eax
  40d832:	push   eax
  40d833:	lds    ebx,FWORD PTR [edi]
  40d835:	push   ss
  40d836:	pop    ds
  40d837:	fwait
  40d838:	dec    eax
  40d839:	jns    0x40d88f
  40d83b:	aaa    
  40d83c:	repz in eax,dx
  40d83e:	xor    BYTE PTR [ecx-0x2a660284],dh
  40d844:	mov    esi,0xa1a4e9e
  40d849:	in     eax,dx
  40d84a:	in     eax,0x44
  40d84c:	out    0xf1,al
  40d84e:	xchg   DWORD PTR [ebx],ebx
  40d850:	jmp    0x40d886
  40d852:	sub    edi,DWORD PTR [ebx-0x6f05ccda]
  40d858:	loop   0x40d85c
  40d85a:	ins    BYTE PTR es:[edi],dx
  40d85b:	inc    ecx
  40d85c:	icebp  
  40d85d:	adc    cl,BYTE PTR [esp+edi*4-0x1f8f8103]
  40d864:	pushf  
  40d865:	stos   BYTE PTR es:[edi],al
  40d866:	rcr    BYTE PTR [eax+0x6d],1
  40d869:	iret   
  40d86a:	cmp    bh,bl
  40d86c:	clc    
  40d86d:	adc    ch,BYTE PTR [ecx-0x60]
  40d870:	add    ebx,DWORD PTR [ecx]
  40d872:	gs aaa 
  40d874:	jns    0x40d87a
  40d876:	adc    eax,0x17fb78cb
  40d87b:	cwde   
  40d87c:	pop    edx
  40d87d:	dec    ebx
  40d87e:	les    esi,FWORD PTR ds:0xe7cbb3bc
  40d884:	mov    ah,0x12
  40d886:	fild   WORD PTR [ecx+0x53]
  40d889:	in     al,0xca
  40d88b:	and    bl,BYTE PTR [edi-0x1f]
  40d88e:	inc    ebx
  40d88f:	push   esi
  40d890:	and    ch,ah
  40d892:	pop    edx
  40d893:	pop    ecx
  40d894:	add    eax,0x55ee255c
  40d899:	int    0x9f
  40d89b:	inc    ecx
  40d89c:	inc    esi
  40d89d:	leave  
  40d89e:	mov    esp,0x96cf1233
  40d8a3:	sti    
  40d8a4:	lods   eax,DWORD PTR ds:[esi]
  40d8a5:	retf   
  40d8a6:	xor    esi,DWORD PTR [eax]
  40d8a8:	out    dx,al
  40d8a9:	das    
  40d8aa:	imul   esp,edx,0x3a
  40d8ad:	dec    esi
  40d8ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8af:	adc    edi,DWORD PTR [esi-0x60cf4451]
  40d8b5:	sahf   
  40d8b6:	xor    eax,0x28b6e97f
  40d8bb:	cmp    DWORD PTR ds:0x6620c0f3,edi
  40d8c1:	jge    0x40d91c
  40d8c3:	dec    ecx
  40d8c4:	mov    edi,0x2389aaae
  40d8c9:	dec    ebp
  40d8ca:	popa   
  40d8cb:	mov    ecx,esp
  40d8cd:	test   BYTE PTR [esi-0x26272dd7],0x3d
  40d8d4:	loop   0x40d8a8
  40d8d6:	mov    al,ds:0xec9ffde9
  40d8db:	sub    cl,dl
  40d8dd:	stc    
  40d8de:	or     DWORD PTR ds:0xbaa69dbc,eax
  40d8e4:	adc    esp,DWORD PTR [ecx-0x1d012234]
  40d8ea:	mov    ebp,0xc1bb614f
  40d8ef:	mov    DWORD PTR [esi+0xe],0x9ffb0b69
  40d8f6:	fdiv   DWORD PTR [esi+0x46]
  40d8f9:	ret    
  40d8fa:	ror    BYTE PTR [ecx],1
  40d8fc:	add    DWORD PTR [ecx-0x23],ecx
  40d8ff:	ret    
  40d900:	mov    edi,0xa1e92d19
  40d905:	push   ss
  40d906:	out    dx,al
  40d907:	loop   0x40d8d9
  40d909:	pop    ebx
  40d90a:	xor    BYTE PTR [edi+ebp*8-0x1b238571],dl
  40d911:	or     al,ah
  40d913:	int3   
  40d914:	lods   eax,DWORD PTR ds:[esi]
  40d915:	push   ecx
  40d916:	lods   al,BYTE PTR ds:[esi]
  40d917:	adc    dh,BYTE PTR [ebp+0xc]
  40d91a:	popa   
  40d91b:	test   DWORD PTR [eax-0x1e],esi
  40d91e:	mov    bl,BYTE PTR [esi+0x1a]
  40d921:	mov    cl,0xcb
  40d923:	repz cmp al,0xff
  40d926:	cmp    DWORD PTR [edi],edi
  40d928:	iret   
  40d929:	inc    esi
  40d92a:	mov    edx,0x4e1655d7
  40d92f:	sti    
  40d930:	neg    BYTE PTR [edx-0x5a4ff024]
  40d936:	pop    ebp
  40d937:	or     DWORD PTR [ebx-0x4b],edi
  40d93a:	and    dh,BYTE PTR [ebx+edi*8-0x16]
  40d93e:	mov    WORD PTR [ebp-0x3e941d01],fs
  40d944:	jmp    0xc3b60e7e
  40d949:	xchg   edx,eax
  40d94a:	cs aam 0x74
  40d94d:	clc    
  40d94e:	and    BYTE PTR [ecx],0x3a
  40d951:	rol    BYTE PTR [eax],0x62
  40d954:	js     0x40d956
  40d956:	or     BYTE PTR [ecx+0x267a88a7],bl
  40d95c:	iret   
  40d95d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d95e:	jns    0x40d933
  40d960:	je     0x40d935
  40d962:	mov    ecx,0x9603d142
  40d967:	ds push eax
  40d969:	inc    ebp
  40d96a:	and    DWORD PTR [edx+ecx*4-0x3d345e98],ecx
  40d971:	aam    0xf
  40d973:	sti    
  40d974:	jl     0x40d9c3
  40d976:	lods   eax,DWORD PTR ds:[esi]
  40d977:	call   DWORD PTR [eax-0x69]
  40d97a:	int3   
  40d97b:	out    dx,al
  40d97c:	cmp    eax,0xbc280323
  40d981:	loopne 0x40d9b8
  40d983:	mov    bh,0x46
  40d985:	(bad)  
  40d986:	pop    eax
  40d987:	ret    
  40d988:	stos   DWORD PTR es:[edi],eax
  40d989:	aad    0xe7
  40d98b:	scas   al,BYTE PTR es:[edi]
  40d98c:	mov    ecx,DWORD PTR [esi-0x4b]
  40d98f:	lods   eax,DWORD PTR ds:[esi]
  40d990:	mov    BYTE PTR [esi],dh
  40d992:	mov    dh,0xea
  40d994:	mov    al,0x66
  40d996:	mov    ds:0x68675ef9,al
  40d99b:	push   ebp
  40d99c:	xchg   ebx,eax
  40d99d:	cmp    BYTE PTR [ecx-0x2],cl
  40d9a0:	adc    ah,BYTE PTR [edi+edx*4-0xa64eeb6]
  40d9a7:	addr16 inc esi
  40d9a9:	sub    ecx,ecx
  40d9ab:	fmul   DWORD PTR [ebp-0x1b]
  40d9ae:	dec    ebp
  40d9af:	fidivr WORD PTR [edx]
  40d9b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9b2:	cld    
  40d9b3:	dec    esp
  40d9b4:	add    al,0xad
  40d9b6:	bound  edx,QWORD PTR [ebp+0x2e19c882]
  40d9bc:	mov    edi,DWORD PTR [eax+esi*8+0x1e02a2ff]
  40d9c3:	xor    dl,BYTE PTR [ebp-0x6d]
  40d9c6:	sbb    eax,0x419dd74d
  40d9cb:	jb     0x40da18
  40d9cd:	push   ss
  40d9ce:	add    eax,0xb7d3ddab
  40d9d3:	mov    ecx,0x6b295dd8
  40d9d8:	add    eax,0x9e7c24f6
  40d9dd:	cmp    al,0x6c
  40d9df:	mov    edx,es
  40d9e1:	fldenv es:[ebx+0x419c4aac]
  40d9e8:	mov    BYTE PTR [ebx+0x6e],0x57
  40d9ec:	adc    ebx,DWORD PTR [edi+0x58]
  40d9ef:	mov    ebx,DWORD PTR ds:0x95e471d5
  40d9f5:	jnp    0x40da71
  40d9f7:	pop    ebx
  40d9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9f9:	or     eax,0xb21f62c
  40d9fe:	jge    0x40d99c
  40da00:	push   ebx
  40da01:	dec    eax
  40da03:	bnd jne 0x40d9f3
  40da06:	fmul   st(1),st
  40da08:	test   al,0x8e
  40da0a:	push   ss
  40da0b:	dec    edi
  40da0c:	dec    esp
  40da0d:	cs pusha 
  40da0f:	sahf   
  40da10:	adc    bl,BYTE PTR gs:[eax+0x13dc7154]
  40da17:	sub    BYTE PTR [edi+esi*1],ch
  40da1a:	dec    esi
  40da1b:	push   esp
  40da1c:	mov    ecx,0x427c3d1a
  40da21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da22:	adc    eax,0x5f00fcfb
  40da27:	add    al,0x5e
  40da29:	(bad)  
  40da2b:	adc    DWORD PTR [ebx],esi
  40da2d:	(bad)  
  40da2e:	cmp    al,0xcb
  40da30:	sub    eax,DWORD PTR [edi+0x4f23649e]
  40da36:	sbb    al,0xf6
  40da38:	cmp    eax,0x108a4d11
  40da3d:	cmp    dl,BYTE PTR [edi-0x40]
  40da40:	or     eax,DWORD PTR [esi+ecx*8+0x7e]
  40da44:	mov    eax,ds:0xa5edf7e4
  40da49:	jae    0x40da11
  40da4b:	cmp    eax,0xcbb4fe00
  40da50:	aam    0x12
  40da52:	ins    BYTE PTR es:[edi],dx
  40da53:	outs   dx,DWORD PTR ds:[esi]
  40da54:	loopne 0x40d9dc
  40da56:	out    0x23,eax
  40da58:	add    eax,0x1b063fbe
  40da5d:	imul   esp,DWORD PTR [esi+0x213aa590],0xffffff9c
  40da64:	xchg   edi,eax
  40da65:	int    0x4
  40da67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da68:	cmp    eax,ecx
  40da6a:	mov    dh,0x34
  40da6c:	jo     0x40d9fa
  40da6e:	mov    ebp,0xbc719e5e
  40da73:	jo     0x40d9f9
  40da75:	sti    
  40da76:	sbb    al,0x6e
  40da78:	jne    0x40daec
  40da7a:	in     al,0xbd
  40da7c:	xchg   edi,eax
  40da7d:	popf   
  40da7e:	repz mov bl,0xba
  40da81:	test   al,0x65
  40da83:	mov    fs,eax
  40da85:	(bad)  
  40da86:	push   cs
  40da87:	cwde   
  40da88:	xchg   edx,esp
  40da8a:	inc    ebp
  40da8b:	sahf   
  40da8c:	pop    ebp
  40da8d:	adc    ah,BYTE PTR [edx+0x69f77dd8]
  40da93:	jmp    0x40da6a
  40da95:	mov    ecx,edi
  40da97:	sti    
  40da98:	sub    al,0xde
  40da9a:	xchg   BYTE PTR [edx-0x76b78a24],dh
  40daa0:	leave  
  40daa1:	push   eax
  40daa2:	out    dx,al
  40daa3:	cmovs  eax,DWORD PTR [edx]
  40daa6:	cmp    esi,esp
  40daa8:	sub    DWORD PTR [esi],esp
  40daaa:	std    
  40daab:	sbb    esp,DWORD PTR [esi]
  40daad:	mov    eax,ds:0x76d411f1
  40dab2:	or     ebp,DWORD PTR [esi-0x5ac84624]
  40dab8:	push   ecx
  40dab9:	add    DWORD PTR [ebp-0x61af7c0c],ebx
  40dabf:	xchg   esi,eax
  40dac0:	push   edi
  40dac1:	scas   al,BYTE PTR es:[edi]
  40dac2:	stos   DWORD PTR es:[edi],eax
  40dac3:	mov    esp,0x9efb5b5d
  40dac8:	sbb    BYTE PTR [ebp-0x5c84917],dh
  40dace:	mov    eax,ds:0x273ec40f
  40dad3:	mov    ds:0x7400d175,eax
  40dad8:	and    DWORD PTR ds:0xf46cb69,0x7e32cb81
  40dae2:	(bad)  
  40dae3:	jge    0x40db5e
  40dae5:	ss hlt 
  40dae7:	mov    BYTE PTR [edi],ah
  40dae9:	pop    ecx
  40daea:	mov    ebp,0x90465d86
  40daef:	in     eax,0xe5
  40daf1:	scas   al,BYTE PTR es:[edi]
  40daf2:	mov    ch,0xde
  40daf4:	xchg   DWORD PTR [esi+eiz*8+0x2dabed28],ecx
  40dafb:	push   ds
  40dafc:	sti    
  40dafd:	retf   0xe17e
  40db00:	cmp    ecx,eax
  40db02:	out    dx,al
  40db03:	xchg   edi,eax
  40db04:	pushf  
  40db05:	sbb    BYTE PTR [ebx+0x1a],dl
  40db08:	push   ebp
  40db09:	cld    
  40db0a:	dec    edx
  40db0b:	aam    0x0
  40db0d:	mov    cl,BYTE PTR [edx]
  40db0f:	out    dx,eax
  40db10:	lods   al,BYTE PTR ds:[esi]
  40db11:	sbb    BYTE PTR [esi+eiz*1+0x2a62dcb0],0x8c
  40db19:	push   ebx
  40db1a:	jecxz  0x40db7f
  40db1c:	pop    es
  40db1d:	cmp    dh,dl
  40db1f:	hlt    
  40db20:	adc    BYTE PTR [edi],dl
  40db22:	aad    0x47
  40db24:	(bad)  
  40db25:	sub    BYTE PTR [esi],bl
  40db27:	jmp    0x5ca4ef99
  40db2c:	mov    esi,ebx
  40db2e:	xchg   esp,eax
  40db2f:	xchg   ecx,eax
  40db30:	cmp    edi,DWORD PTR [edi]
  40db32:	fcmovb st,st(4)
  40db34:	out    0x82,al
  40db36:	ins    DWORD PTR es:[edi],dx
  40db37:	or     bl,0x90
  40db3a:	fmul   DWORD PTR [ebx+eiz*8]
  40db3d:	out    dx,eax
  40db3e:	cmp    BYTE PTR [eax],cl
  40db40:	int    0x74
  40db42:	ds mov ebx,0x6545629f
  40db48:	add    DWORD PTR [eax],eax
  40db4a:	lds    edx,FWORD PTR [eax-0x8]
  40db4d:	dec    edi
  40db4e:	loop   0x40dbac
  40db50:	inc    edi
  40db51:	add    esp,DWORD PTR ds:0xfa8e90ec
  40db57:	pop    ebp
  40db58:	xchg   ebp,eax
  40db59:	push   ss
  40db5a:	sti    
  40db5b:	ret    
  40db5c:	xchg   sp,ax
  40db5e:	fimul  DWORD PTR [ebx+0x78]
  40db61:	enter  0x73fa,0x88
  40db65:	pop    es
  40db66:	xlat   BYTE PTR ds:[ebx]
  40db67:	(bad)  
  40db69:	and    BYTE PTR [ecx],0xe9
  40db6c:	retf   0xccb4
  40db6f:	mov    ecx,0x76bb2483
  40db74:	dec    edi
  40db75:	inc    eax
  40db76:	inc    ecx
  40db77:	jns    0x40db14
  40db79:	fcompp 
  40db7b:	enter  0xb44a,0xf6
  40db7f:	xchg   BYTE PTR cs:[ecx+eax*1-0xb],dh
  40db84:	ss fdivrp st(5),st
  40db87:	sub    al,0x7
  40db89:	scas   al,BYTE PTR es:[edi]
  40db8a:	pop    edx
  40db8b:	gs addr16 loop 0x40dbfa
  40db8f:	cmp    DWORD PTR [ebp+esi*1-0x4d],ebx
  40db93:	jbe    0x40dbbd
  40db95:	in     eax,dx
  40db96:	xlat   BYTE PTR ds:[ebx]
  40db97:	(bad)  
  40db98:	scas   al,BYTE PTR es:[edi]
  40db99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db9a:	dec    esp
  40db9b:	fild   WORD PTR [edx]
  40db9d:	je     0x40dbbf
  40db9f:	dec    edx
  40dba0:	jmp    0x6ae5d1b4
  40dba5:	mov    dh,0x50
  40dba7:	sub    esp,ebp
  40dba9:	loopne 0x40db60
  40dbab:	xchg   DWORD PTR [ecx-0x59],esp
  40dbae:	push   ss
  40dbaf:	xchg   edx,eax
  40dbb0:	clc    
  40dbb1:	ss mov esp,0x3e46c19d
  40dbb7:	mov    BYTE PTR [esi-0x50b4a19a],bh
  40dbbd:	sbb    ecx,DWORD PTR [esi+0x64]
  40dbc0:	test   BYTE PTR [esi],cl
  40dbc2:	popa   
  40dbc3:	loope  0x40dc10
  40dbc5:	arpl   WORD PTR ds:0x4ed4a356,si
  40dbcb:	ins    BYTE PTR es:[edi],dx
  40dbcc:	ja     0x40dbdb
  40dbce:	pop    eax
  40dbcf:	push   0x63
  40dbd1:	adc    al,0x9b
  40dbd3:	dec    eax
  40dbd4:	cld    
  40dbd5:	fs xchg ebx,eax
  40dbd7:	xchg   ebp,eax
  40dbd8:	popa   
  40dbd9:	add    BYTE PTR [ecx+0x58],dl
  40dbdc:	rol    DWORD PTR [edx+0x54],1
  40dbdf:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbe1:	sub    edi,DWORD PTR [ebx+0x4d407676]
  40dbe7:	jle    0x40dbe8
  40dbe9:	adc    DWORD PTR [ebp-0x2e0c0242],0xe41b44f0
  40dbf3:	jge    0x40dc19
  40dbf5:	jae    0x40dbf2
  40dbf7:	into   
  40dbf8:	sbb    al,0xd1
  40dbfa:	sbb    DWORD PTR [ebx],0x77
  40dbfd:	adc    eax,0xebe2d702
  40dc02:	call   0x913f:0x7ec3c9e0
  40dc09:	pop    ds
  40dc0a:	imul   esi,esi,0x8e7f83e6
  40dc10:	shld   ebp,esp,cl
  40dc13:	pop    edi
  40dc14:	scas   eax,DWORD PTR es:[edi]
  40dc15:	and    ah,BYTE PTR [eax-0x75]
  40dc18:	push   ebx
  40dc19:	test   al,0x2d
  40dc1b:	mov    bh,0x6c
  40dc1d:	pop    ebp
  40dc1e:	mov    al,0x1a
  40dc20:	and    DWORD PTR [ecx+0x4ab9c182],ebx
  40dc26:	test   al,0xf8
  40dc28:	mov    esi,ebx
  40dc2a:	inc    ebp
  40dc2b:	fcomp  QWORD PTR [ebx+0x434ed10b]
  40dc31:	pop    esi
  40dc32:	sbb    DWORD PTR [edi+esi*4],ecx
  40dc35:	pop    edx
  40dc36:	out    dx,eax
  40dc37:	bound  esi,QWORD PTR [edx-0x62]
  40dc3a:	int3   
  40dc3b:	repz gs push 0x1ec14abc
  40dc42:	add    ebx,DWORD PTR [esp+esi*2-0x6e]
  40dc46:	aad    0x70
  40dc48:	outs   dx,BYTE PTR ds:[esi]
  40dc49:	sbb    DWORD PTR [ebx-0x43],edx
  40dc4c:	lahf   
  40dc4d:	jbe    0x40dc5a
  40dc4f:	xchg   ebx,eax
  40dc50:	int    0xa
  40dc52:	aas    
  40dc53:	jae    0x40dbe6
  40dc55:	inc    ebp
  40dc56:	push   0x4894c616
  40dc5b:	add    bl,BYTE PTR [edx]
  40dc5d:	outs   dx,BYTE PTR ds:[esi]
  40dc5e:	lods   al,BYTE PTR ds:[esi]
  40dc5f:	loop   0x40dc40
  40dc61:	xchg   edx,eax
  40dc62:	and    DWORD PTR [eax+0x7a263a85],edx
  40dc68:	sub    al,ch
  40dc6a:	add    bh,dl
  40dc6c:	push   edx
  40dc6d:	aaa    
  40dc6e:	repnz fwait
  40dc70:	push   ebx
  40dc71:	xchg   ecx,eax
  40dc72:	sbb    al,0xcf
  40dc74:	daa    
  40dc75:	mov    ah,BYTE PTR [esi-0x8]
  40dc78:	push   0xffffffbc
  40dc7a:	push   ss
  40dc7b:	popf   
  40dc7c:	jnp    0x40dc75
  40dc7e:	jb     0x40dc93
  40dc80:	std    
  40dc81:	mov    edx,0x693b17ae
  40dc86:	ret    
  40dc87:	and    BYTE PTR [eax+ecx*8],0x4c
  40dc8b:	jns    0x40dcb4
  40dc8d:	dec    ecx
  40dc8e:	sti    
  40dc8f:	stos   BYTE PTR es:[edi],al
  40dc90:	add    eax,0xd599d15e
  40dc95:	leave  
  40dc96:	xchg   BYTE PTR [edi+0x5d914424],ch
  40dc9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc9d:	cdq    
  40dc9e:	sub    dl,BYTE PTR [ebx+0x52c95f57]
  40dca4:	xlat   BYTE PTR ds:[ebx]
  40dca5:	sub    al,0x83
  40dca7:	ficomp DWORD PTR [ebx]
  40dca9:	pushf  
  40dcaa:	cmp    eax,0x85aaf0a3
  40dcaf:	mov    esi,0x2b2e07f8
  40dcb4:	jp     0x40dc4e
  40dcb6:	mov    bl,0xd9
  40dcb8:	jg     0x40dc44
  40dcba:	push   esi
  40dcbb:	(bad)
  40dcbe:	aas    
  40dcbf:	xor    edx,edi
  40dcc1:	sub    DWORD PTR [edi+eiz*2+0x70dc91c4],ecx
  40dcc8:	ret    
  40dcc9:	icebp  
  40dcca:	fwait
  40dccb:	sbb    dl,BYTE PTR [esi+0x59]
  40dcce:	cmp    edi,edi
  40dcd0:	sbb    al,0xde
  40dcd2:	pop    edx
  40dcd3:	imul   ecx,ebx,0x25
  40dcd6:	es pushf 
  40dcd8:	and    eax,0x6573df53
  40dcdd:	popf   
  40dcde:	loopne 0x40dc71
  40dce0:	mov    esi,0x23ddf327
  40dce5:	cmc    
  40dce6:	cmp    eax,0xe13f55d5
  40dceb:	cli    
  40dcec:	mov    eax,ds:0xf6a8c202
  40dcf1:	mov    ebp,DWORD PTR [edx-0x402bd251]
  40dcf7:	loope  0x40dc93
  40dcf9:	jg     0x40dc7f
  40dcfb:	sub    DWORD PTR [edi+0x55939ae],edx
  40dd01:	dec    esi
  40dd02:	(bad)  
  40dd03:	cli    
  40dd04:	xchg   edx,eax
  40dd05:	sub    BYTE PTR [ebx+0x2100d1b5],dh
  40dd0b:	sbb    ebx,DWORD PTR [edx+0x28]
  40dd0e:	mov    edi,0x7e59d386
  40dd13:	daa    
  40dd14:	push   cs
  40dd15:	mov    dl,0x96
  40dd17:	and    ebp,esi
  40dd19:	and    eax,0x27ea7a8e
  40dd1e:	(bad)  
  40dd1f:	jmp    0x2d0c:0xc5ac666e
  40dd26:	jge    0x40dd67
  40dd28:	pushf  
  40dd29:	stos   DWORD PTR es:[edi],eax
  40dd2a:	mov    cl,0xcd
  40dd2c:	rol    DWORD PTR [ebp-0x6d],cl
  40dd2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd30:	pop    ebx
  40dd31:	and    ebp,DWORD PTR [ecx]
  40dd33:	xor    ah,BYTE PTR fs:[eax]
  40dd36:	push   edx
  40dd37:	mov    DWORD PTR [edi],ebp
  40dd39:	push   ebp
  40dd3a:	jl     0x40dcdf
  40dd3c:	jnp    0x40dcf5
  40dd3e:	(bad)  
  40dd3f:	call   FWORD PTR es:[edx]
  40dd42:	push   ds
  40dd43:	mov    dl,0xf3
  40dd45:	xor    BYTE PTR [eax],bh
  40dd47:	aad    0x7b
  40dd49:	cmp    DWORD PTR [ebp-0x49e2bb34],ebp
  40dd4f:	lds    eax,FWORD PTR [eax+0x70]
  40dd52:	push   edx
  40dd53:	jmp    0x29e0:0x8740c682
  40dd5a:	ror    ah,0xc7
  40dd5d:	xchg   DWORD PTR [ecx-0x35],edi
  40dd60:	fcom   DWORD PTR [esp+esi*4-0x57]
  40dd64:	(bad)  
  40dd65:	fisub  DWORD PTR [eax+ebx*1]
  40dd68:	cmp    DWORD PTR [esi+0xe752bc4],ecx
  40dd6e:	popf   
  40dd6f:	mov    esi,0x8d4a935d
  40dd74:	bnd cs jns 0x40dd75
  40dd78:	dec    edi
  40dd79:	in     al,dx
  40dd7a:	dec    esi
  40dd7b:	daa    
  40dd7c:	xor    eax,0x27cc7f04
  40dd81:	adc    DWORD PTR [ecx+0x6484b600],esp
  40dd87:	ficom  DWORD PTR [esi+0x5e9eec02]
  40dd8d:	je     0x40ddde
  40dd8f:	fld    TBYTE PTR [eax+0x15a8d7c2]
  40dd95:	sub    DWORD PTR [eax],ebp
  40dd97:	ja     0x40dd83
  40dd99:	std    
  40dd9a:	add    al,0x71
  40dd9c:	ret    
  40dd9d:	cmp    BYTE PTR [ebp+ebp*2+0x326abd29],cl
  40dda4:	push   edx
  40dda5:	shl    BYTE PTR ds:0xc311745b,1
  40ddab:	in     al,0xbf
  40ddad:	mov    WORD PTR [ecx-0x3d],es
  40ddb0:	mov    ebx,0xe71b056b
  40ddb5:	xchg   ecx,eax
  40ddb6:	or     BYTE PTR [edi],0x1d
  40ddb9:	ror    DWORD PTR [edi+esi*8-0x276bb851],0x95
  40ddc1:	pop    ss
  40ddc2:	in     eax,0x53
  40ddc4:	xor    BYTE PTR ds:[ecx-0x2b12b54b],bl
  40ddcb:	add    bl,BYTE PTR [ebx+0x4bc458c]
  40ddd1:	imul   ecx,DWORD PTR [edx-0x49],0x6baf306f
  40ddd8:	pop    edi
  40ddd9:	sub    cl,BYTE PTR [ecx+ebp*1+0x33ddf6e5]
  40dde0:	sub    al,0x76
  40dde2:	clc    
  40dde3:	ja     0x40de4b
  40dde5:	pushf  
  40dde6:	fdivr  QWORD PTR ds:0xc2978fcc
  40ddec:	push   esi
  40dded:	mov    fs,WORD PTR ds:0x6eb03748
  40ddf3:	shr    BYTE PTR [esi],cl
  40ddf5:	xchg   ebx,eax
  40ddf6:	iret   
  40ddf7:	add    bh,BYTE PTR es:[esi+0x1ab6612a]
  40ddfe:	jecxz  0x40dda4
  40de00:	xchg   BYTE PTR [edi],dl
  40de02:	cmp    dh,bl
  40de04:	mov    edi,0x6daa9594
  40de0a:	push   ebp
  40de0b:	and    eax,0x901b93fe
  40de10:	xchg   esi,eax
  40de11:	inc    ecx
  40de12:	stos   DWORD PTR es:[edi],eax
  40de13:	mov    edi,0xe4d45979
  40de18:	pop    edx
  40de19:	mov    eax,ds:0xb80b2138
  40de1e:	xor    al,0x89
  40de20:	cmp    dl,BYTE PTR [eax+0x217bf3c1]
  40de26:	jl     0x40de98
  40de28:	jge    0x40de43
  40de2a:	xlat   BYTE PTR ds:[ebx]
  40de2b:	sbb    BYTE PTR [edi+0x15],cl
  40de2e:	mov    bl,BYTE PTR [eax+0x73]
  40de31:	and    esi,edi
  40de33:	loope  0x40de6d
  40de35:	add    esp,esp
  40de37:	int3   
  40de38:	dec    ebp
  40de39:	retf   0x8597
  40de3c:	mov    ecx,0xa4498235
  40de41:	out    0xf6,al
  40de43:	pop    esi
  40de44:	jne    0x40de58
  40de46:	inc    esp
  40de47:	in     al,0x5f
  40de49:	mov    ebx,0xe5f35331
  40de4e:	jl     0x40de4c
  40de50:	retf   
  40de51:	stos   DWORD PTR es:[edi],eax
  40de52:	inc    eax
  40de53:	push   es
  40de54:	fwait
  40de55:	jg     0x40de50
  40de57:	ss push 0x2bbdae67
  40de5d:	sbb    bl,ah
  40de5f:	add    DWORD PTR [edi],edx
  40de61:	mov    eax,ds:0xa3da3367
  40de66:	loop   0x40de4d
  40de68:	test   BYTE PTR [edi],0x88
  40de6b:	ret    
  40de6c:	leave  
  40de6d:	adc    DWORD PTR [ebx-0x6d0ae8f0],esp
  40de73:	and    dh,BYTE PTR [ebx-0x3f4cbc81]
  40de79:	pop    edx
  40de7a:	sbb    ebp,esi
  40de7c:	lods   eax,DWORD PTR ds:[esi]
  40de7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de7e:	adc    BYTE PTR [ecx+0x2e0b2391],dl
  40de84:	lods   eax,DWORD PTR ds:[esi]
  40de85:	ret    
  40de86:	and    al,0xa9
  40de88:	sahf   
  40de89:	adc    BYTE PTR [esi],dh
  40de8b:	push   0xffffffb2
  40de8d:	jp     0x40de1f
  40de8f:	cmp    al,0xb6
  40de91:	test   BYTE PTR [ebx-0x1497f699],dh
  40de97:	retf   
  40de98:	lods   al,BYTE PTR ds:[esi]
  40de9a:	push   eax
  40de9b:	outs   dx,BYTE PTR ds:[esi]
  40de9c:	cmp    eax,0xfec47d02
  40dea1:	test   al,0xe7
  40dea3:	fs dec ecx
  40dea5:	inc    esp
  40dea6:	inc    ecx
  40dea7:	fs ss test al,0xe1
  40deab:	xchg   ebx,eax
  40deac:	ins    BYTE PTR es:[edi],dx
  40dead:	ja     0x40de7c
  40deaf:	test   DWORD PTR [eax+0x713347de],esi
  40deb5:	into   
  40deb6:	mov    dl,0x2f
  40deb8:	dec    ecx
  40deb9:	fnstsw WORD PTR [eax+0x51ad20e]
  40debf:	mov    ds:0x428822af,al
  40dec4:	adc    esp,0xffffffaa
  40dec7:	mov    ebx,0xe01b39ea
  40decc:	and    bl,dl
  40dece:	mov    dl,0xc4
  40ded0:	cmp    eax,esi
  40ded2:	out    dx,eax
  40ded3:	cmp    BYTE PTR [eax+0xe],0x70
  40ded7:	and    BYTE PTR [edi-0x2306e596],0x77
  40dede:	mov    esp,0xb14a5b69
  40dee3:	jmp    0x40df32
  40dee5:	xchg   ecx,esi
  40dee7:	ret    
  40dee8:	scas   al,BYTE PTR es:[edi]
  40dee9:	leave  
  40deea:	cs mov bl,0xde
  40deed:	push   ebp
  40deee:	iret   
  40deef:	scas   eax,DWORD PTR es:[edi]
  40def0:	push   edi
  40def1:	mov    ch,0xec
  40def3:	inc    esi
  40def4:	add    eax,0x87296465
  40def9:	inc    edx
  40defa:	pop    edi
  40defb:	imul   edx,DWORD PTR [ecx],0x22
  40defe:	mov    ss,eax
  40df00:	and    DWORD PTR [edi],esp
  40df02:	fadd   DWORD PTR [eax+0x787f0ef4]
  40df08:	add    al,0x46
  40df0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df0b:	dec    ecx
  40df0c:	popf   
  40df0d:	add    DWORD PTR [ecx],0x74dc91e6
  40df13:	jmp    0x205d:0x4981dec1
  40df1a:	ficom  DWORD PTR [ecx]
  40df1c:	sub    al,0x2f
  40df1e:	jmp    0x86ffe025
  40df23:	data16 sti 
  40df25:	push   ss
  40df26:	and    BYTE PTR [esi+eiz*2+0x50],cl
  40df2a:	(bad)  
  40df2b:	cmp    eax,0xe6f533ec
  40df30:	(bad)  
  40df31:	imul   esp,DWORD PTR [ebp+0x4339babb],0xe42a0550
  40df3b:	pushf  
  40df3c:	retf   0xeb72
  40df3f:	push   ebx
  40df40:	mov    es,WORD PTR [eax]
  40df42:	dec    edi
  40df43:	stos   DWORD PTR es:[edi],eax
  40df44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df45:	inc    edi
  40df46:	pop    ecx
  40df47:	dec    ebp
  40df48:	gs pop ds
  40df4a:	lahf   
  40df4b:	inc    esi
  40df4c:	fsubr  QWORD PTR [esi]
  40df4e:	xchg   BYTE PTR [ebx],ah
  40df50:	adc    ecx,DWORD PTR [ebx+0x272ae4d6]
  40df56:	push   ebp
  40df57:	dec    ebx
  40df58:	jno    0x40df24
  40df5a:	fs fprem 
  40df5d:	or     BYTE PTR [ecx+0x48025ce7],0x95
  40df64:	mov    ecx,0xc704d9a9
  40df69:	pop    edx
  40df6a:	jg     0x40dfa3
  40df6c:	mov    dh,dl
  40df6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df6f:	int3   
  40df70:	adc    eax,DWORD PTR [ecx-0x52662106]
  40df76:	ds inc ecx
  40df78:	(bad)  
  40df7b:	and    ecx,edi
  40df7d:	mov    esi,0xeeb35054
  40df82:	adc    eax,0xbf2dd9fb
  40df87:	and    DWORD PTR [ebp+0x215a8bf8],eax
  40df8d:	add    eax,0x99f1b412
  40df92:	xchg   DWORD PTR [esi+0x49eb0708],esp
  40df98:	mov    al,ds:0xc2ad7f2
  40df9d:	pusha  
  40df9e:	sahf   
  40df9f:	loope  0x40df34
  40dfa1:	mov    ecx,0x576e482e
  40dfa6:	stos   BYTE PTR es:[edi],al
  40dfa7:	sbb    bh,ch
  40dfa9:	add    al,0xa8
  40dfab:	xlat   BYTE PTR ds:[ebx]
  40dfac:	add    al,0x84
  40dfae:	ins    DWORD PTR es:[edi],dx
  40dfaf:	out    dx,eax
  40dfb0:	jae    0x40dfb9
  40dfb2:	arpl   WORD PTR [esi-0x621fd09],dx
  40dfb8:	adc    al,0xaf
  40dfba:	mov    edi,0xbf6331f4
  40dfbf:	sbb    edx,0x2201ae4d
  40dfc5:	mov    ebx,0x5422b344
  40dfca:	mov    esi,0xb9d1f21a
  40dfcf:	or     eax,0xbd8a2f0f
  40dfd4:	je     0x40e03d
  40dfd6:	adc    dh,BYTE PTR [ebx+0x25]
  40dfd9:	pusha  
  40dfda:	out    dx,eax
  40dfdb:	ins    DWORD PTR es:[edi],dx
  40dfdc:	add    eax,DWORD PTR [esi]
  40dfde:	hlt    
  40dfdf:	xor    dh,bl
  40dfe1:	inc    ecx
  40dfe2:	cmp    bh,al
  40dfe4:	cld    
  40dfe5:	inc    DWORD PTR [ebp+0x79]
  40dfe8:	jle    0x40df6d
  40dfea:	(bad)  
  40dfeb:	shl    BYTE PTR [esi],cl
  40dfed:	std    
  40dfee:	or     DWORD PTR ds:[esi],esp
  40dff1:	pop    ebp
  40dff2:	call   0x5671:0xe9fb33ed
  40dff9:	ror    BYTE PTR [ebx],1
  40dffb:	loop   0x40dfc2
  40dffd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dffe:	jae    0x40dfd3
  40e000:	into   
  40e001:	(bad)  
  40e002:	(bad)  
  40e003:	mov    ds:0x8536036b,al
  40e008:	loopne 0x40df8b
  40e00a:	cmp    DWORD PTR [ebx-0x59278713],edx
  40e010:	imul   edx,eax,0xffffffc9
  40e013:	cmp    bh,BYTE PTR [ebx+0x349b2112]
  40e019:	mov    ebx,ecx
  40e01b:	sub    dh,BYTE PTR [eax]
  40e01d:	dec    edi
  40e01e:	(bad)  
  40e01f:	arpl   ax,bx
  40e021:	scas   ax,WORD PTR es:[edi]
  40e023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e024:	sbb    bl,BYTE PTR [edx+0x3cdbca3e]
  40e02a:	mov    al,0x1e
  40e02c:	mov    BYTE PTR [ebp-0x56],dl
  40e02f:	in     eax,0xa6
  40e031:	xor    esp,DWORD PTR [esi-0x59575ac7]
  40e037:	mov    edx,0xa6f54e54
  40e03c:	xchg   ebp,eax
  40e03d:	cmp    dh,BYTE PTR [ebx]
  40e03f:	cli    
  40e040:	ss push cs
  40e042:	mov    ds:0xe2735b92,eax
  40e047:	pusha  
  40e048:	sub    al,0x6c
  40e04a:	ficomp WORD PTR [edi-0x47]
  40e04d:	aaa    
  40e04e:	cmp    eax,0x77df5c00
  40e053:	sub    BYTE PTR [edx+0x1e94f22b],bh
  40e059:	inc    esp
  40e05a:	scas   eax,DWORD PTR es:[edi]
  40e05b:	pop    ss
  40e05c:	xchg   ecx,eax
  40e05d:	sti    
  40e05e:	sub    DWORD PTR [edi+0x772962c9],esi
  40e064:	(bad)  
  40e065:	loopne 0x40e045
  40e067:	out    dx,al
  40e068:	jmp    0x40e04c
  40e06a:	add    DWORD PTR ds:0x37763654,0xf9b228cb
  40e074:	rol    ch,1
  40e076:	mov    dh,0x0
  40e078:	pop    edi
  40e079:	sbb    al,0xa
  40e07b:	repnz (bad) 
  40e07d:	rcr    DWORD PTR [esi+edx*4+0x574e3d6f],1
  40e084:	imul   esp,DWORD PTR [ecx+0xa],0xc5371d2a
  40e08b:	jne    0x40e079
  40e08d:	pusha  
  40e08e:	stos   DWORD PTR es:[edi],eax
  40e08f:	ret    0x5604
  40e092:	mov    eax,ds:0xfb5d5bab
  40e097:	xor    ch,al
  40e099:	ja     0x40e05e
  40e09b:	(bad)  
  40e09c:	xlat   BYTE PTR ds:[ebx]
  40e09d:	and    edx,DWORD PTR [eiz*8-0x51ee26a5]
  40e0a4:	cmp    esp,0xf169d46f
  40e0aa:	jns    0x40e123
  40e0ac:	push   esi
  40e0ad:	inc    ecx
  40e0ae:	xor    ebp,ebx
  40e0b0:	scas   eax,DWORD PTR es:[edi]
  40e0b1:	sbb    cl,BYTE PTR [esi-0x1a7ef9ae]
  40e0b7:	or     DWORD PTR [edi-0x7c97586b],ebx
  40e0bd:	in     eax,0x64
  40e0bf:	test   eax,0x841174cd
  40e0c4:	out    0xef,al
  40e0c6:	(bad)  
  40e0c7:	mov    ecx,0x5ea89fd3
  40e0cc:	fadd   DWORD PTR [ebx]
  40e0ce:	pop    es
  40e0cf:	fs lahf 
  40e0d1:	hlt    
  40e0d2:	dec    edx
  40e0d3:	sbb    esp,ecx
  40e0d5:	or     BYTE PTR [edi-0x32c37dd6],al
  40e0db:	push   cs
  40e0dc:	xor    eax,0x41d880c4
  40e0e1:	rol    BYTE PTR [ebx+0x30],0x96
  40e0e5:	sbb    al,0x72
  40e0e7:	stos   BYTE PTR es:[edi],al
  40e0e8:	js     0x40e10f
  40e0ea:	add    al,0xe2
  40e0ec:	pop    ebx
  40e0ed:	pop    esp
  40e0ee:	(bad)  
  40e0ef:	push   ecx
  40e0f0:	jl     0x40e111
  40e0f2:	or     al,0x4d
  40e0f4:	add    eax,0xed497951
  40e0f9:	add    BYTE PTR [edx-0x14],bh
  40e0fc:	push   ss
  40e0fd:	dec    ebx
  40e0fe:	cmp    eax,0xf8e2543
  40e103:	mov    bh,0x84
  40e105:	adc    BYTE PTR [edi-0x63ff2ce0],bh
  40e10b:	imul   eax,DWORD PTR [ebp-0x7ca8041e],0xffffff9b
  40e112:	and    al,0xc4
  40e115:	clc    
  40e116:	or     BYTE PTR [esi-0x34a8a864],bh
  40e11c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e11d:	(bad)  
  40e11e:	js     0x40e15b
  40e120:	push   0xffffffbf
  40e122:	add    ah,cl
  40e124:	fistp  DWORD PTR [edx+0x5b366fa0]
  40e12a:	and    al,ch
  40e12c:	sub    al,0xa4
  40e12e:	push   0xffffffc0
  40e130:	and    al,BYTE PTR [ebp-0x2cf2ab69]
  40e136:	sbb    DWORD PTR [ecx],0xde2ce921
  40e13c:	or     bl,BYTE PTR [edi+0x522c11c6]
  40e142:	mov    dh,0xe7
  40e144:	popf   
  40e145:	inc    edx
  40e146:	shl    esp,1
  40e148:	jle    0x40e1c7
  40e14a:	cmc    
  40e14b:	mov    edi,0xeae1bdff
  40e150:	dec    esi
  40e151:	lock inc edi
  40e154:	inc    edi
  40e155:	xchg   ebp,eax
  40e156:	sub    al,0x6a
  40e158:	pop    ebx
  40e159:	push   eax
  40e15a:	inc    ebp
  40e15b:	dec    eax
  40e15c:	retf   0x5afe
  40e15f:	sbb    ah,BYTE PTR [ecx+0x5c]
  40e162:	and    bl,0x85
  40e165:	add    dl,BYTE PTR [edi]
  40e167:	and    al,0xf3
  40e169:	jecxz  0x40e13e
  40e16b:	inc    ebp
  40e16c:	cmp    al,0x23
  40e16e:	xor    edi,0xffffff81
  40e171:	mov    ds:0x434a537,eax
  40e176:	call   0xdeea7489
  40e17b:	cwde   
  40e17c:	sbb    cl,al
  40e17e:	jbe    0x40e1dc
  40e180:	mov    esp,0xe2bb8d62
  40e185:	leave  
  40e186:	or     eax,0x68ef83dd
  40e18b:	push   edi
  40e18c:	lock mov ds:0xace0c300,al
  40e192:	loope  0x40e14b
  40e194:	xor    DWORD PTR [esi-0x52],eax
  40e197:	loopne 0x40e1fd
  40e199:	in     al,dx
  40e19a:	dec    eax
  40e19b:	pop    ebp
  40e19c:	pop    ss
  40e19d:	les    edi,FWORD PTR [edx]
  40e19f:	repz xchg edi,eax
  40e1a1:	call   0xe85c:0x8ebb2e12
  40e1a8:	mov    ecx,ebx
  40e1aa:	aaa    
  40e1ab:	shl    BYTE PTR [edi+esi*4+0x27704298],0xcf
  40e1b3:	inc    edi
  40e1b4:	or     ebp,ebx
  40e1b6:	push   0xa5b2e1a0
  40e1bb:	and    ebx,DWORD PTR [esi]
  40e1bd:	cmp    eax,eax
  40e1bf:	add    al,0x8d
  40e1c1:	lods   al,BYTE PTR ds:[esi]
  40e1c2:	stc    
  40e1c3:	push   0xffffff98
  40e1c5:	add    DWORD PTR [ebx-0x49],0x55064e1d
  40e1cc:	icebp  
  40e1cd:	stos   BYTE PTR es:[edi],al
  40e1ce:	repz out dx,eax
  40e1d0:	add    edi,DWORD PTR [esi+0x0]
  40e1d3:	mov    BYTE PTR [eax-0x2f2dca12],ch
  40e1d9:	daa    
  40e1da:	lea    edx,[ebx]
  40e1dc:	test   DWORD PTR [ebx+ebx*1+0x10],ebp
  40e1e0:	inc    edi
  40e1e1:	(bad)  
  40e1e2:	into   
  40e1e3:	mov    esi,eax
  40e1e5:	cmp    BYTE PTR [eax+0x10],bh
  40e1e8:	lods   eax,DWORD PTR ds:[esi]
  40e1e9:	int    0x87
  40e1eb:	mov    ebp,0xdc53ad41
  40e1f0:	enter  0xb9b3,0x1
  40e1f4:	daa    
  40e1f5:	lock out dx,al
  40e1f7:	cdq    
  40e1f8:	pop    ss
  40e1f9:	sub    eax,0x1fd95334
  40e1fe:	push   cs
  40e1ff:	out    dx,eax
  40e200:	dec    esp
  40e201:	sbb    DWORD PTR [eax],edx
  40e203:	stc    
  40e204:	int3   
  40e205:	push   es
  40e206:	stos   BYTE PTR es:[edi],al
  40e207:	mov    es,WORD PTR [ecx+0x73]
  40e20a:	jg     0x40e1f7
  40e20c:	xor    al,0x1d
  40e20e:	jg     0x40e1a2
  40e210:	inc    ecx
  40e211:	pop    eax
  40e212:	gs xchg bh,dh
  40e215:	or     eax,0x347c65bc
  40e21a:	push   0x3e63c438
  40e21f:	push   ebp
  40e220:	inc    edx
  40e221:	dec    esi
  40e222:	bt     DWORD PTR [eax],edi
  40e225:	add    esi,eax
  40e227:	adc    ebx,DWORD PTR [ebx+0x2b56cf33]
  40e22d:	in     eax,0x83
  40e22f:	adc    eax,0x73740c4e
  40e234:	push   0x5375bcda
  40e239:	push   ebx
  40e23a:	cmp    BYTE PTR [esi],dl
  40e23c:	jg     0x40e21b
  40e23e:	pop    ds
  40e23f:	mov    eax,0xaeca1b50
  40e244:	pushf  
  40e245:	xor    eax,0x9dae0c66
  40e24a:	out    0x66,eax
  40e24c:	imul   edi,eax,0xb4aaa1b0
  40e252:	ins    BYTE PTR es:[edi],dx
  40e253:	(bad)  
  40e254:	shl    BYTE PTR [eax],1
  40e256:	shl    BYTE PTR [esi],0xc4
  40e259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e25a:	cmp    DWORD PTR [edi-0x7a3c0f01],esi
  40e260:	aaa    
  40e261:	inc    esp
  40e262:	add    eax,0xd0b31648
  40e267:	pop    ecx
  40e268:	lahf   
  40e269:	stos   DWORD PTR es:[edi],eax
  40e26a:	retf   
  40e26b:	add    al,0x2b
  40e26d:	data16 in al,dx
  40e26f:	into   
  40e270:	adc    eax,0xffee541d
  40e275:	js     0x40e274
  40e277:	lock jp 0x40e26e
  40e27a:	int    0xc6
  40e27c:	in     al,dx
  40e27d:	mov    gs,WORD PTR [esp+eiz*2-0x1d]
  40e281:	pushf  
  40e282:	test   al,0x8b
  40e284:	pop    edi
  40e285:	inc    ecx
  40e286:	mov    ebx,ds
  40e288:	adc    eax,0xd69b306d
  40e28d:	mov    edi,0xb5d7929b
  40e292:	and    eax,0xb8275b56
  40e297:	in     al,0x70
  40e299:	push   ebp
  40e29a:	or     ebx,DWORD PTR [ecx+0x37ca984d]
  40e2a0:	dec    ecx
  40e2a1:	mov    WORD PTR [ebp+0x736a06],cs
  40e2a7:	jmp    0x40e27a
  40e2a9:	xchg   ebp,eax
  40e2aa:	xchg   esp,eax
  40e2ab:	gs pop edi
  40e2ad:	shl    BYTE PTR [ebp-0x3964952d],0xfc
  40e2b4:	rcl    BYTE PTR [ebp+edi*1-0x1a],1
  40e2b8:	or     eax,0xde641bdf
  40e2bd:	mov    edx,0x95edbaa6
  40e2c2:	ja     0x40e2a4
  40e2c4:	cs jl  0x40e2b9
  40e2c7:	call   0x8e6d:0x5615caad
  40e2ce:	adc    esi,edx
  40e2d0:	xor    ch,ch
  40e2d2:	ja     0x40e2e3
  40e2d4:	addr16 and al,0x63
  40e2d7:	enter  0xbfc8,0x28
  40e2db:	lods   eax,DWORD PTR ds:[esi]
  40e2dc:	mov    edx,0xac62e436
  40e2e1:	cmp    BYTE PTR [ebp+0x36],cl
  40e2e4:	icebp  
  40e2e5:	(bad)  
  40e2e6:	cmp    bl,BYTE PTR [ebx+0xf]
  40e2e9:	call   0x9a95:0x62c03c08
  40e2f0:	in     eax,dx
  40e2f1:	xchg   ebx,eax
  40e2f2:	aam    0x8
  40e2f4:	pop    ecx
  40e2f5:	dec    edx
  40e2f6:	in     eax,dx
  40e2f7:	pop    esi
  40e2f8:	bound  esi,QWORD PTR [ebx-0x40925e81]
  40e2fe:	addr16 sub ecx,ebx
  40e301:	or     BYTE PTR [eax],ah
  40e303:	sti    
  40e304:	mov    WORD PTR ss:[ecx+0xd],es
  40e308:	rcl    DWORD PTR [edx-0x4e],cl
  40e30b:	pop    ss
  40e30c:	mov    bh,0x4b
  40e30e:	cmp    cl,al
  40e310:	cmp    BYTE PTR [edx-0x1c],dh
  40e313:	jmp    DWORD PTR [edx]
  40e315:	std    
  40e316:	mov    ch,0x1b
  40e318:	cmp    BYTE PTR [esi+0xb],al
  40e31b:	xchg   DWORD PTR [ebp+0xe],ebx
  40e31e:	(bad)  
  40e31f:	out    0xd0,eax
  40e321:	(bad)  
  40e322:	mov    al,0xf8
  40e324:	push   edx
  40e325:	xor    BYTE PTR [ebp+ebx*1-0x6ad3f2cb],cl
  40e32c:	sti    
  40e32d:	js     0x40e36a
  40e32f:	enter  0xee64,0xe9
  40e333:	push   esp
  40e334:	sub    esp,DWORD PTR [esp+esi*8]
  40e337:	ds add eax,ecx
  40e33a:	adc    DWORD PTR [edi],ecx
  40e33c:	nop
  40e33d:	into   
  40e33e:	pop    edi
  40e33f:	xchg   edx,eax
  40e340:	stos   DWORD PTR es:[edi],eax
  40e341:	ret    0xb0c1
  40e344:	ficom  DWORD PTR [edi-0x1b]
  40e347:	cdq    
  40e348:	or     al,0xd5
  40e34a:	and    esi,ecx
  40e34c:	imul   edx,DWORD PTR [edx],0x16bd40b
  40e352:	cs aad 0x82
  40e355:	xor    al,0x7b
  40e357:	dec    esp
  40e358:	cmp    BYTE PTR [ecx],ch
  40e35a:	inc    ebp
  40e35b:	or     dh,BYTE PTR ds:0xefc4da4f
  40e361:	in     eax,dx
  40e362:	inc    ecx
  40e363:	ja     0x40e334
  40e365:	sbb    DWORD PTR [edx+0x69d9180f],eax
  40e36b:	pop    edi
  40e36c:	add    esi,DWORD PTR [eax+0x5c]
  40e36f:	ins    DWORD PTR es:[edi],dx
  40e370:	or     eax,0x4e7cf3d4
  40e375:	aas    
  40e376:	sub    DWORD PTR [esi-0x5d],ecx
  40e379:	in     eax,0x4f
  40e37b:	pop    edi
  40e37c:	mov    ah,al
  40e37e:	mov    esp,0x88539026
  40e383:	jecxz  0x40e359
  40e385:	ficom  DWORD PTR [ebx+0x4e]
  40e388:	jne    0x40e33b
  40e38a:	rcr    DWORD PTR [edi],cl
  40e38c:	add    al,0x9d
  40e38e:	cli    
  40e38f:	cwde   
  40e390:	stc    
  40e391:	push   esi
  40e392:	xor    eax,0xef8d862a
  40e397:	sahf   
  40e398:	(bad)  
  40e399:	div    esp
  40e39b:	gs daa 
  40e39d:	push   0x79
  40e39f:	dec    eax
  40e3a0:	shr    DWORD PTR [edx],0x9f
  40e3a3:	pop    ebp
  40e3a4:	jecxz  0x40e3fc
  40e3a6:	jo     0x40e394
  40e3a8:	pop    esi
  40e3a9:	add    eax,0x2621a43c
  40e3ae:	retf   
  40e3af:	pop    ecx
  40e3b0:	imul   edi,DWORD PTR [eax],0x35
  40e3b3:	jae    0x40e3b6
  40e3b5:	push   ds
  40e3b6:	aam    0xdc
  40e3b8:	gs mov bh,0x30
  40e3bb:	jmp    0x3365:0x35224803
  40e3c2:	imul   ebx
  40e3c4:	test   eax,0x93d3be8d
  40e3c9:	sbb    eax,0xe9fb88de
  40e3ce:	cmp    BYTE PTR [eax-0x599cb2b5],cl
  40e3d4:	ret    
  40e3d5:	jl     0x40e443
  40e3d7:	mov    dl,0x2c
  40e3d9:	jbe    0x40e3d8
  40e3db:	pop    esi
  40e3dc:	xchg   edx,eax
  40e3dd:	cmp    bl,BYTE PTR [edi]
  40e3df:	cmp    BYTE PTR [edx-0x10],bl
  40e3e2:	mov    bl,0x20
  40e3e4:	pusha  
  40e3e5:	ins    DWORD PTR es:[edi],dx
  40e3e6:	cmp    eax,DWORD PTR [ebp+0x5effcd45]
  40e3ec:	xchg   ebp,eax
  40e3ed:	cld    
  40e3ee:	add    al,0xf5
  40e3f0:	jno    0x40e389
  40e3f2:	arpl   WORD PTR [ebx-0x3c],si
  40e3f5:	push   0x42
  40e3f7:	addr16 dec esp
  40e3f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3fa:	fst    DWORD PTR [esp+edi*2-0x4287404c]
  40e401:	push   edx
  40e402:	je     0x40e45e
  40e404:	ins    BYTE PTR es:[edi],dx
  40e405:	push   ss
  40e406:	pop    ebx
  40e407:	jg     0x40e3e5
  40e409:	scas   al,BYTE PTR es:[edi]
  40e40a:	pop    ds
  40e40b:	shl    DWORD PTR [edx],cl
  40e40d:	sbb    edi,DWORD PTR [edx]
  40e40f:	add    edx,edi
  40e411:	mov    gs,WORD PTR [edi-0x552559c7]
  40e417:	stc    
  40e418:	sbb    esi,DWORD PTR ds:0xd03c32ed
  40e41e:	outs   dx,BYTE PTR ds:[esi]
  40e41f:	add    al,0xbe
  40e421:	inc    ebp
  40e422:	xchg   edi,eax
  40e423:	call   0x4b0f7fbf
  40e428:	dec    edi
  40e429:	or     DWORD PTR [ecx],0xffffffcd
  40e42c:	icebp  
  40e42d:	pop    edi
  40e42e:	xlat   BYTE PTR ds:[ebx]
  40e42f:	enter  0x22e1,0x92
  40e433:	mov    ecx,0x60058e59
  40e438:	mov    ebp,eax
  40e43a:	into   
  40e43b:	dec    eax
  40e43c:	call   0xbebe:0x92f2959
  40e443:	and    ebp,DWORD PTR [ebx+0x68]
  40e446:	pop    eax
  40e447:	enter  0xff9e,0xea
  40e44b:	cmp    al,0x21
  40e44d:	scas   eax,DWORD PTR es:[edi]
  40e44e:	adc    BYTE PTR ds:0xda184933,0x5f
  40e455:	jne    0x40e403
  40e457:	ja     0x40e4bb
  40e459:	iret   
  40e45a:	sub    BYTE PTR [eax],0xff
  40e45d:	stos   BYTE PTR es:[edi],al
  40e45e:	mov    cl,0xb0
  40e460:	mov    dh,0x3d
  40e462:	rcl    DWORD PTR [edx+0x20bf3359],1
  40e468:	pop    esi
  40e469:	pop    es
  40e46a:	fnstenv ds:0x507eae49
  40e470:	mov    eax,0xad5876fd
  40e475:	mov    al,0x7
  40e477:	mov    ah,0x48
  40e479:	mov    cl,0x43
  40e47b:	test   DWORD PTR [ecx+0x4c],edx
  40e47e:	aam    0xba
  40e480:	fxch   st(1)
  40e482:	xchg   esi,eax
  40e483:	aas    
  40e484:	jne    0x40e434
  40e486:	lock or al,0xe0
  40e489:	mov    al,ds:0x67831ec4
  40e48e:	push   ebp
  40e48f:	jl     0x40e4c6
  40e491:	scas   eax,DWORD PTR es:[edi]
  40e492:	xchg   BYTE PTR [edi],dh
  40e494:	cmp    DWORD PTR [ebp+0x1eb40814],ebp
  40e49a:	in     eax,dx
  40e49b:	cli    
  40e49c:	stos   BYTE PTR es:[edi],al
  40e49d:	shl    BYTE PTR [esi+0x4af54d81],cl
  40e4a3:	enter  0xc7a1,0x1
  40e4a7:	retf   0x50aa
  40e4aa:	lea    edi,[ecx-0xa]
  40e4ad:	scas   al,BYTE PTR es:[edi]
  40e4ae:	inc    edi
  40e4af:	cld    
  40e4b0:	xlat   BYTE PTR ds:[ebx]
  40e4b1:	fs adc al,0xea
  40e4b4:	retf   0xceef
  40e4b7:	inc    esi
  40e4b8:	push   ebx
  40e4b9:	jo     0x40e48e
  40e4bb:	in     al,0x69
  40e4bd:	les    ecx,FWORD PTR [esi]
  40e4bf:	add    edx,DWORD PTR [edx+0x600fca3f]
  40e4c5:	shr    BYTE PTR [edi],0x81
  40e4c8:	mov    ecx,0x5671fa14
  40e4cd:	pop    ecx
  40e4ce:	cmp    eax,0xdaa7a784
  40e4d3:	outs   dx,DWORD PTR ds:[esi]
  40e4d4:	in     al,0x16
  40e4d6:	js     0x40e508
  40e4d8:	pop    ecx
  40e4d9:	out    dx,eax
  40e4da:	sub    cl,BYTE PTR [eax+edx*4]
  40e4dd:	sub    eax,0x417edebf
  40e4e2:	mov    al,ds:0xdf6ca69a
  40e4e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4e8:	jg     0x40e4f9
  40e4ea:	pop    ebp
  40e4eb:	sub    al,BYTE PTR [edi-0x638f7087]
  40e4f1:	out    dx,al
  40e4f2:	cld    
  40e4f3:	push   ds
  40e4f4:	shl    DWORD PTR [ecx-0x5f40db7d],1
  40e4fa:	and    al,0x75
  40e4fc:	addr16 xor eax,0x80e250ab
  40e502:	fistp  QWORD PTR [ebx-0x10]
  40e505:	pop    ss
  40e506:	sbb    DWORD PTR [edi],ebx
  40e508:	adc    DWORD PTR [ebx+ebx*8-0x6f],ecx
  40e50c:	out    0xbb,al
  40e50e:	call   DWORD PTR [edx+0x31e64e83]
  40e514:	repnz push ds
  40e516:	out    0xca,eax
  40e518:	ret    
  40e519:	rcl    BYTE PTR [eax-0x773e82d9],1
  40e51f:	inc    esi
  40e520:	xor    BYTE PTR [eax-0x47],cl
  40e523:	jecxz  0x40e581
  40e525:	pop    edx
  40e526:	or     al,0xd8
  40e528:	je     0x40e561
  40e52a:	push   ebp
  40e52b:	xor    esp,DWORD PTR [ebp+0x61a8cd]
  40e531:	inc    ecx
  40e532:	gs das 
  40e534:	ficom  WORD PTR [ebp+0x7d]
  40e537:	add    eax,0xf146766d
  40e53c:	ret    
  40e53d:	fistp  QWORD PTR [edi]
  40e53f:	xchg   DWORD PTR [edi-0x2485078f],ecx
  40e545:	(bad)  
  40e546:	mov    bh,0x74
  40e548:	shl    eax,1
  40e54a:	int3   
  40e54b:	test   eax,0x2a8461b7
  40e550:	clc    
  40e551:	xor    DWORD PTR [ebp+0x4f],ebx
  40e554:	imul   BYTE PTR [esi-0x1acc6ec4]
  40e55a:	sbb    al,0x1b
  40e55c:	popf   
  40e55d:	(bad)  
  40e55e:	or     ah,ah
  40e560:	lahf   
  40e561:	in     al,dx
  40e562:	mov    bl,0x7e
  40e564:	xchg   edi,eax
  40e565:	inc    esi
  40e566:	ret    
  40e567:	lds    ecx,FWORD PTR [ebp-0x29]
  40e56a:	mov    ecx,0xfa80f12a
  40e56f:	and    DWORD PTR [ebx+ebx*8+0x4f],ebx
  40e573:	jmp    0x62675dda
  40e578:	cmp    al,0xcc
  40e57a:	mov    ah,0x25
  40e57c:	xchg   esp,eax
  40e57d:	fdiv   DWORD PTR [eax]
  40e57f:	(bad)  [edi]
  40e581:	sbb    ebp,DWORD PTR ds:0x452b294b
  40e587:	mov    al,0x4e
  40e589:	es fs sbb al,0xfe
  40e58d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e58e:	jecxz  0x40e609
  40e590:	in     al,dx
  40e591:	aaa    
  40e592:	or     dh,dh
  40e594:	add    BYTE PTR [eax],0xaf
  40e597:	outs   dx,BYTE PTR ds:[esi]
  40e598:	or     dh,ch
  40e59a:	mov    bh,0xa1
  40e59c:	ss add eax,0xeae0c917
  40e5a2:	enter  0xfc2b,0x31
  40e5a6:	cmp    eax,0x6c170de0
  40e5ab:	jp     0x40e546
  40e5ad:	ret    
  40e5ae:	mov    eax,ds:0x7799909c
  40e5b3:	popf   
  40e5b4:	and    DWORD PTR [ebx+0x27ce2c0a],0xe08d062c
  40e5be:	ret    0x3d5e
  40e5c1:	loope  0x40e5c4
  40e5c3:	xchg   edi,eax
  40e5c4:	add    DWORD PTR [esi],esp
  40e5c6:	adc    BYTE PTR [edx],dh
  40e5c8:	or     al,0xa0
  40e5ca:	(bad)  [ecx+0x60bfc82c]
  40e5d0:	fist   DWORD PTR [edx]
  40e5d2:	dec    esi
  40e5d3:	sbb    bl,0x4d
  40e5d6:	cmp    cl,BYTE PTR [eax+0x76]
  40e5d9:	fadd   DWORD PTR [edi+0x60]
  40e5dc:	(bad)  
  40e5dd:	mov    ecx,0x2d48923d
  40e5e2:	mov    ah,0x12
  40e5e4:	mov    edx,0x238f699
  40e5e9:	mov    ecx,0x4c0b5ec8
  40e5ee:	mov    ecx,0xa8750432
  40e5f3:	inc    edx
  40e5f4:	jecxz  0x40e675
  40e5f6:	adc    ch,BYTE PTR [edi+0x40421a29]
  40e5fc:	jnp    0x40e64b
  40e5fe:	test   ch,bh
  40e600:	jae    0x40e584
  40e602:	inc    esp
  40e603:	pop    ss
  40e604:	jnp    0x40e59c
  40e606:	test   eax,0x3203ca0c
  40e60b:	pusha  
  40e60c:	shl    DWORD PTR [ebx+0x57],1
  40e60f:	ja     0x40e61f
  40e611:	cli    
  40e612:	mov    bh,0x2b
  40e614:	fldenv [ebx+0x5d32f871]
  40e61a:	in     eax,dx
  40e61b:	cmp    al,0x1d
  40e61d:	lahf   
  40e61e:	cs pop esp
  40e620:	(bad)  
  40e621:	rcr    bl,1
  40e623:	add    esi,DWORD PTR [ebx]
  40e625:	cmp    edx,DWORD PTR [ecx-0x5906731a]
  40e62b:	xchg   eax,ebx
  40e62d:	prefetch BYTE PTR [eax+0x6c42b3d3]
  40e634:	xor    ecx,DWORD PTR [ebp+0x66]
  40e637:	push   eax
  40e638:	jmp    0x270d:0x5ed8e6f0
  40e63f:	outs   dx,DWORD PTR ds:[si]
  40e641:	cwde   
  40e642:	pop    ss
  40e643:	out    dx,al
  40e644:	push   esp
  40e645:	sub    DWORD PTR [edi+0x2b],edi
  40e648:	dec    esp
  40e649:	jne    0x40e651
  40e64b:	data16 cmp al,dl
  40e64e:	pop    edi
  40e64f:	shr    BYTE PTR [esi+0x63],0xc4
  40e653:	ret    
  40e654:	mov    edx,0xe1e293be
  40e659:	into   
  40e65a:	jae    0x40e621
  40e65c:	outs   dx,BYTE PTR ds:[esi]
  40e65d:	lock out dx,eax
  40e65f:	ja     0x40e65c
  40e661:	rcl    al,0xf1
  40e664:	stos   DWORD PTR es:[edi],eax
  40e665:	div    DWORD PTR [edx]
  40e667:	mov    esp,0x2ce15e96
  40e66c:	pop    edi
  40e66d:	xchg   esi,eax
  40e66e:	sbb    ah,BYTE PTR [eax-0x24f0b231]
  40e674:	aaa    
  40e675:	popa   
  40e676:	cwde   
  40e677:	sar    bl,1
  40e679:	js     0x40e699
  40e67b:	test   al,0xc1
  40e67d:	xor    al,0x6e
  40e67f:	cmp    BYTE PTR [edx-0x4080e829],dl
  40e685:	hlt    
  40e686:	or     BYTE PTR [ebx-0x5d],dl
  40e689:	pushf  
  40e68a:	popa   
  40e68b:	arpl   WORD PTR [ecx-0x69e13cdb],di
  40e691:	jg     0x40e6b2
  40e693:	cmp    eax,0x76dfe32f
  40e698:	push   ss
  40e699:	cld    
  40e69a:	test   BYTE PTR [ecx],0x26
  40e69d:	test   eax,0x53a9215c
  40e6a2:	call   0xfdee:0x61b3e379
  40e6a9:	mov    ds:0x71f56585,eax
  40e6ae:	add    cl,bh
  40e6b0:	ss sbb bl,al
  40e6b3:	mov    DWORD PTR [ebx+0x1c],edx
  40e6b6:	add    eax,0x57c8d855
  40e6bb:	bound  eax,QWORD PTR [ebx-0x2c]
  40e6be:	add    BYTE PTR [ebx+0x3eeac88a],dl
  40e6c4:	imul   bl
  40e6c6:	cmp    ebp,DWORD PTR [ecx]
  40e6c8:	pop    esi
  40e6c9:	(bad)  
  40e6ca:	jp     0x40e6fb
  40e6cc:	addr16 fcmovnu st,st(4)
  40e6cf:	popf   
  40e6d0:	ficom  DWORD PTR [esi+0x587608fb]
  40e6d6:	int3   
  40e6d7:	inc    esi
  40e6d8:	mov    edi,DWORD PTR es:[ecx-0x213518fa]
  40e6df:	cmp    eax,DWORD PTR [edi+0x5d]
  40e6e2:	xchg   BYTE PTR [edx],bh
  40e6e4:	sub    BYTE PTR [esi+0x70f507f6],0x74
  40e6eb:	mov    ds:0x17034a5,eax
  40e6f0:	mov    WORD PTR [ebx],es
  40e6f2:	sub    BYTE PTR [eax+0x493b8f8f],al
  40e6f8:	loope  0x40e750
  40e6fa:	mov    BYTE PTR ds:0x4f75cc0,0xd
  40e701:	loop   0x40e6c2
  40e703:	leave  
  40e704:	das    
  40e705:	call   0x521e:0x10d7f58
  40e70c:	push   ebx
  40e70d:	cwde   
  40e70e:	fs push ds
  40e710:	sbb    cl,dh
  40e712:	bound  eax,QWORD PTR [ecx-0x27]
  40e715:	es pop ebp
  40e717:	add    DWORD PTR [ebx],esp
  40e719:	sub    BYTE PTR [ebx+0x54],dl
  40e71c:	ret    
  40e71d:	repz dec esp
  40e71f:	loop   0x40e6eb
  40e721:	test   al,0x1c
  40e723:	into   
  40e724:	pop    ebx
  40e725:	dec    ecx
  40e726:	inc    ecx
  40e727:	mov    ecx,0x441217c1
  40e72c:	mov    ch,BYTE PTR ds:0x96c074bd
  40e732:	xor    al,0x63
  40e734:	push   esp
  40e735:	adc    cl,BYTE PTR [ebp+ecx*1+0x42]
  40e739:	popf   
  40e73a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e73b:	in     al,dx
  40e73c:	iret   
  40e73d:	jg     0x40e6ce
  40e73f:	xchg   edi,eax
  40e740:	test   al,0xb1
  40e742:	iret   
  40e743:	or     al,0xa7
  40e745:	pop    edi
  40e746:	(bad)
  40e749:	mov    al,0x7a
  40e74b:	das    
  40e74c:	adc    eax,0x9f8983e
  40e751:	mov    dh,0xa6
  40e753:	(bad)  
  40e754:	mov    ecx,0x6bfca07c
  40e759:	je     0x40e714
  40e75b:	pop    ebp
  40e75c:	cmc    
  40e75d:	xchg   dl,ch
  40e75f:	rol    DWORD PTR [ecx],0xe8
  40e762:	leave  
  40e763:	fwait
  40e764:	int    0x51
  40e766:	mov    ebx,0xabdef8cb
  40e76b:	push   0x2f
  40e76d:	push   es
  40e76e:	and    eax,0x8d0a6644
  40e773:	dec    DWORD PTR [ecx+0x355f749e]
  40e779:	cmp    DWORD PTR [ebp+0x52],eax
  40e77c:	or     DWORD PTR ds:0x92c3969a,0x5d
  40e783:	mov    BYTE PTR [eax+0x5e],bl
  40e786:	out    0x5b,al
  40e788:	int3   
  40e789:	pop    ebp
  40e78a:	call   0x992344ae
  40e78f:	mov    ecx,0x55793d01
  40e794:	test   DWORD PTR [ebp+0x24],edx
  40e797:	push   edx
  40e798:	lock (bad) 
  40e79a:	sub    dh,BYTE PTR [ebp-0x2a212df5]
  40e7a0:	aas    
  40e7a1:	hlt    
  40e7a2:	imul   esi,DWORD PTR ds:0x48f42f72,0x8b63e9f7
  40e7ac:	imul   ebx,DWORD PTR [eax-0xd],0x59
  40e7b0:	sub    DWORD PTR [ebx-0x31fb3230],esi
  40e7b6:	ret    0xa094
  40e7b9:	mov    esi,0xb9bf2337
  40e7be:	xor    BYTE PTR [ebx+eiz*2+0xccc3136],al
  40e7c5:	lods   eax,DWORD PTR ds:[esi]
  40e7c6:	adc    eax,0x55437eac
  40e7cb:	int    0x58
  40e7cd:	cmp    bh,BYTE PTR [ecx-0x5f1a1269]
  40e7d3:	fiadd  DWORD PTR [ecx+0x7b]
  40e7d6:	add    esp,DWORD PTR [edx]
  40e7d8:	jg     0x40e7f6
  40e7da:	jne    0x40e78c
  40e7dc:	arpl   WORD PTR [ebp+0x1b],dx
  40e7df:	xlat   BYTE PTR cs:[ebx]
  40e7e1:	jnp    0x40e7e4
  40e7e3:	fstp   st(7)
  40e7e5:	mov    ds:0x12847c4f,eax
  40e7ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7eb:	pop    edx
  40e7ec:	dec    edx
  40e7ed:	in     eax,0xf6
  40e7ef:	pop    eax
  40e7f0:	cmp    DWORD PTR [edi],edx
  40e7f2:	push   cs
  40e7f3:	push   esp
  40e7f4:	fild   QWORD PTR [edi]
  40e7f6:	inc    ebx
  40e7f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7f8:	and    bh,BYTE PTR [ebp-0x7b]
  40e7fb:	mov    esp,0xfe1d187b
  40e800:	sbb    al,0xc0
  40e802:	and    ch,BYTE PTR [edi]
  40e804:	loope  0x40e7d1
  40e806:	mov    edi,0x31927b6
  40e80b:	xor    DWORD PTR [ebx+0x1d49e148],esi
  40e811:	push   ecx
  40e812:	jae    0x40e841
  40e814:	out    0x68,eax
  40e816:	imul   esp,DWORD PTR ss:[ebp-0x47],0x2fff57b2
  40e81e:	imul   ebx,ebx,0x7
  40e821:	jge    0x40e88b
  40e823:	mov    bh,0xe6
  40e825:	inc    esp
  40e826:	clc    
  40e827:	(bad)  
  40e828:	and    eax,0xe873fda6
  40e82d:	dec    DWORD PTR [edx]
  40e82f:	dec    ebx
  40e830:	aaa    
  40e831:	sahf   
  40e832:	and    al,0x8c
  40e834:	adc    ch,ah
  40e836:	push   eax
  40e837:	and    al,0xa9
  40e839:	in     al,dx
  40e83a:	ins    BYTE PTR es:[edi],dx
  40e83b:	push   ecx
  40e83c:	mov    esp,0x312950a9
  40e841:	mov    WORD PTR [edi+0x6],ds
  40e844:	jecxz  0x40e815
  40e846:	and    ecx,esp
  40e848:	jmp    0x5d97:0x1855be25
  40e84f:	clc    
  40e850:	pop    ds
  40e851:	mov    esp,0xeb67d632
  40e856:	inc    ecx
  40e857:	int    0xd9
  40e859:	cli    
  40e85a:	push   ebx
  40e85b:	(bad)  
  40e85c:	fist   DWORD PTR [eax+0x58e424e6]
  40e862:	fs icebp 
  40e864:	inc    ebp
  40e865:	jle    0x40e842
  40e867:	in     eax,0xae
  40e869:	pop    ebp
  40e86a:	pop    ebp
  40e86b:	(bad)  
  40e86c:	das    
  40e86d:	scas   al,BYTE PTR es:[edi]
  40e86e:	stos   DWORD PTR es:[edi],eax
  40e86f:	cmp    eax,0x93162c44
  40e874:	stos   DWORD PTR es:[edi],eax
  40e875:	inc    ebx
  40e876:	imul   edi,DWORD PTR [edx+0x4faccf70],0xd2fe813e
  40e880:	jbe    0x40e80f
  40e882:	stos   BYTE PTR es:[edi],al
  40e883:	sbb    eax,0x300569a6
  40e888:	inc    ebp
  40e889:	xchg   esi,eax
  40e88a:	hlt    
  40e88b:	add    ecx,DWORD PTR [ebp-0x6e]
  40e88e:	scas   al,BYTE PTR es:[edi]
  40e88f:	scas   eax,DWORD PTR es:[di]
  40e891:	js     0x40e83e
  40e893:	fbld   TBYTE PTR [ecx]
  40e895:	stos   BYTE PTR es:[edi],al
  40e896:	stos   BYTE PTR es:[edi],al
  40e897:	push   0x62033483
  40e89c:	sbb    esi,DWORD PTR [eax+edi*2-0x4d55c914]
  40e8a3:	xchg   ecx,eax
  40e8a4:	ret    
  40e8a5:	stos   DWORD PTR es:[edi],eax
  40e8a6:	mov    eax,0xa29622c4
  40e8ab:	jp     0x40e830
  40e8ad:	or     esp,DWORD PTR [edx]
  40e8af:	jns    0x40e853
  40e8b1:	dec    ebx
  40e8b2:	mov    DWORD PTR [ecx-0x64272922],ebp
  40e8b8:	push   0xffffffb0
  40e8ba:	out    0x4b,eax
  40e8bc:	pop    ebx
  40e8bd:	rcr    edi,1
  40e8bf:	cdq    
  40e8c0:	rcl    DWORD PTR [edi-0x73374ba7],1
  40e8c6:	add    BYTE PTR [eax],0x2d
  40e8c9:	and    DWORD PTR [ebp-0x48516e85],eax
  40e8cf:	xor    esi,ecx
  40e8d1:	mov    esp,0x4ecd519b
  40e8d6:	jp     0x40e923
  40e8d8:	cmp    eax,0x90326424
  40e8dd:	(bad)  
  40e8de:	loope  0x40e885
  40e8e0:	mov    BYTE PTR [ecx+eax*1+0x15],cl
  40e8e4:	das    
  40e8e5:	icebp  
  40e8e6:	add    DWORD PTR [edi+0x13],0xbea6250c
  40e8ed:	pushf  
  40e8ee:	sahf   
  40e8ef:	call   FWORD PTR [ebx+0x6e]
  40e8f2:	sbb    ebp,DWORD PTR [ebp-0x4]
  40e8f5:	mov    eax,ds:0xcfd76a8
  40e8fa:	push   0x10
  40e8fc:	mov    dh,0xa0
  40e8fe:	pop    esp
  40e8ff:	fsubrp st(0),st
  40e901:	jl     0x40e97e
  40e903:	out    0x4d,al
  40e905:	add    cl,BYTE PTR [ecx+0x4b75a1ca]
  40e90b:	cwde   
  40e90c:	pop    ecx
  40e90d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e90e:	xchg   BYTE PTR [edx+0x3c11786],al
  40e914:	xchg   ecx,eax
  40e915:	test   DWORD PTR [edi],ebp
  40e917:	inc    edx
  40e918:	cdq    
  40e919:	aad    0xb0
  40e91b:	dec    edx
  40e91c:	jmp    0x86d2e69a
  40e921:	xor    edx,DWORD PTR [esi-0x43497b2b]
  40e927:	pop    ds
  40e928:	scas   eax,DWORD PTR es:[edi]
  40e929:	rcl    BYTE PTR [esi],1
  40e92b:	add    BYTE PTR [esi],cl
  40e92d:	pop    edx
  40e92e:	adc    DWORD PTR [edx],0x2b
  40e931:	pop    ss
  40e932:	push   ebp
  40e933:	loopne 0x40e939
  40e935:	ret    
  40e936:	inc    edx
  40e937:	jg     0x40e922
  40e939:	xor    esi,edi
  40e93b:	fistp  DWORD PTR [ecx-0x6]
  40e93e:	aas    
  40e93f:	(bad)  [ebp+0x5]
  40e942:	(bad)  
  40e943:	pop    ss
  40e944:	into   
  40e945:	popa   
  40e946:	lock sbb DWORD PTR [edi+0x60145bbb],ecx
  40e94d:	(bad)  
  40e94e:	mov    DWORD PTR [eax-0x778cab6e],ebp
  40e954:	xchg   DWORD PTR [ecx-0xc0b7ac6],esp
  40e95a:	stc    
  40e95b:	dec    edi
  40e95c:	shl    edx,cl
  40e95e:	retf   0xf648
  40e961:	mov    WORD PTR [esi],es
  40e963:	fs sub ax,0x26fc
  40e968:	jo     0x40e9e8
  40e96a:	sar    DWORD PTR [esi-0x110c95f4],0xff
  40e971:	cmp    al,0x44
  40e973:	sar    DWORD PTR [eax],cl
  40e975:	add    DWORD PTR [ebx+ecx*8+0x7c],ecx
  40e979:	jl     0x40e991
  40e97b:	fs inc eax
  40e97d:	xchg   ebx,eax
  40e97e:	mov    bh,0xa2
  40e980:	nop
  40e981:	cmp    cl,BYTE PTR [edx]
  40e983:	icebp  
  40e984:	cdq    
  40e985:	imul   esi,DWORD PTR [edi+edi*1+0x6a],0x6ae4c9e3
  40e98d:	xchg   ebx,eax
  40e98e:	jae    0x40e9bb
  40e990:	lods   al,BYTE PTR ds:[esi]
  40e991:	out    0x9e,al
  40e993:	jno    0x40e9aa
  40e995:	pop    eax
  40e996:	mov    esp,0x194586ce
  40e99b:	adc    al,cl
  40e99d:	xor    esi,DWORD PTR [ecx+ecx*1-0x71]
  40e9a1:	xchg   BYTE PTR [ecx+eiz*4-0x165f68c9],ch
  40e9a8:	inc    ecx
  40e9a9:	js     0x40e93c
  40e9ab:	outs   dx,DWORD PTR ds:[esi]
  40e9ac:	cld    
  40e9ad:	loop   0x40e95d
  40e9af:	xor    edx,DWORD PTR [esi]
  40e9b1:	sbb    BYTE PTR [edi],ch
  40e9b3:	stc    
  40e9b4:	mov    BYTE PTR [edx+0x45ef8002],bh
  40e9ba:	xchg   DWORD PTR [ebp+eiz*2+0x796649f],edi
  40e9c1:	push   ebp
  40e9c2:	inc    esi
  40e9c3:	push   0x12457764
  40e9c8:	in     eax,0xf0
  40e9ca:	mov    ebp,0x92f7104b
  40e9cf:	xor    eax,0xb7e60468
  40e9d4:	push   esp
  40e9d5:	add    eax,0x3464a2dc
  40e9da:	inc    ecx
  40e9db:	out    dx,eax
  40e9dc:	sub    DWORD PTR [ebp-0x74d8d4fc],ecx
  40e9e2:	xor    ecx,DWORD PTR [edi+0x5d]
  40e9e5:	mov    dl,al
  40e9e7:	fs sbb eax,0x87d839fd
  40e9ed:	mov    BYTE PTR [edx],0xc9
  40e9f0:	cmc    
  40e9f1:	icebp  
  40e9f2:	in     eax,dx
  40e9f3:	mov    edx,cs
  40e9f5:	hlt    
  40e9f6:	enter  0x9e1e,0x7e
  40e9fa:	jb     0x40ea6a
  40e9fc:	scas   al,BYTE PTR es:[edi]
  40e9fd:	and    eax,0x17e6d681
  40ea02:	sub    al,0x5
  40ea04:	xor    DWORD PTR [esp+ebx*4],eax
  40ea07:	pop    esp
  40ea08:	enter  0xe13a,0x1e
  40ea0c:	lahf   
  40ea0d:	in     al,0x33
  40ea0f:	sahf   
  40ea10:	stos   DWORD PTR es:[edi],eax
  40ea11:	out    0xad,al
  40ea13:	dec    esi
  40ea14:	(bad)  
  40ea15:	aad    0xb
  40ea17:	sbb    esp,DWORD PTR [edi]
  40ea19:	xor    ecx,esp
  40ea1b:	mov    dl,0x23
  40ea1d:	inc    esi
  40ea1e:	inc    eax
  40ea1f:	or     ebp,ebx
  40ea21:	in     eax,0xf5
  40ea23:	inc    ebx
  40ea24:	xor    edi,edx
  40ea26:	pusha  
  40ea27:	inc    edi
  40ea28:	sub    eax,0xac54b247
  40ea2d:	retf   0x5752
  40ea30:	enter  0x420a,0x99
  40ea34:	pop    esp
  40ea35:	mov    ah,0xe4
  40ea37:	fsubp  st(5),st
  40ea39:	lods   eax,DWORD PTR ds:[esi]
  40ea3a:	pop    ebx
  40ea3b:	sahf   
  40ea3c:	mov    ds:0xcca7959a,eax
  40ea41:	push   0xc577d
  40ea46:	sbb    esp,edi
  40ea48:	pop    edi
  40ea49:	popf   
  40ea4a:	or     BYTE PTR [esi+0x6b8bb8c8],ch
  40ea50:	mov    ebp,0xc5752870
  40ea55:	popa   
  40ea56:	ss pop eax
  40ea58:	(bad)
  40ea5b:	mov    dl,0x9b
  40ea5d:	aas    
  40ea5e:	ret    0x309a
  40ea61:	inc    esi
  40ea62:	lahf   
  40ea63:	leave  
  40ea64:	mov    ebx,0x671bdfb2
  40ea69:	ret    0x938d
  40ea6c:	pop    ss
  40ea6d:	mov    eax,ds:0xf6f115d3
  40ea72:	or     al,0x3a
  40ea74:	repnz or al,0xfb
  40ea77:	push   ebp
  40ea78:	fld    QWORD PTR [edx+ecx*4-0x6210a46f]
  40ea7f:	cli    
  40ea80:	aad    0x65
  40ea82:	jl     0x40ea3a
  40ea84:	pop    eax
  40ea85:	sbb    eax,0xdb4f3aa1
  40ea8a:	and    cl,bh
  40ea8c:	pop    ebx
  40ea8d:	and    eax,DWORD PTR [eax]
  40ea8f:	test   ebp,eax
  40ea91:	mov    dh,0x38
  40ea93:	fst    st(5)
  40ea95:	dec    esi
  40ea96:	movd   mm1,DWORD PTR [edx-0x21a54d45]
  40ea9d:	leave  
  40ea9e:	push   eax
  40ea9f:	pop    eax
  40eaa0:	jb     0x40eab7
  40eaa2:	js     0x40ea68
  40eaa4:	cmp    edx,DWORD PTR ds:[di-0x4a37]
  40eaaa:	mov    edx,DWORD PTR [ebx]
  40eaac:	jnp    0x40ea69
  40eaae:	mov    edx,DWORD PTR [edi+0x1b]
  40eab1:	xchg   esi,eax
  40eab2:	(bad)  
  40eab3:	sbb    DWORD PTR [ebx],esi
  40eab5:	push   ebx
  40eab6:	test   eax,0x126e3ac9
  40eabb:	push   ds
  40eabc:	(bad)
  40eabf:	mov    ah,0xfc
  40eac1:	mov    dh,0xcf
  40eac3:	dec    ebp
  40eac4:	pop    esp
  40eac5:	ins    BYTE PTR es:[edi],dx
  40eac6:	out    dx,eax
  40eac7:	ins    DWORD PTR es:[edi],dx
  40eac8:	loope  0x40eb30
  40eaca:	add    BYTE PTR [ebx],0xbd
  40eacd:	push   eax
  40eace:	dec    esi
  40eacf:	mov    DWORD PTR [ebx],esp
  40ead1:	jmp    0x40ea5e
  40ead3:	xchg   al,ch
  40ead5:	xchg   DWORD PTR [ebp+ecx*8+0x3f],ebp
  40ead9:	clc    
  40eada:	mov    al,ds:0xd76c6093
  40eadf:	xchg   ecx,eax
  40eae0:	arpl   WORD PTR [esi-0xf00227f],cx
  40eae6:	mov    ecx,0x50d606a7
  40eaeb:	out    0x52,eax
  40eaed:	aas    
  40eaee:	stos   BYTE PTR es:[edi],al
  40eaef:	js     0x40eb3f
  40eaf1:	fisubr DWORD PTR es:[eax]
  40eaf4:	jne    0x40ea84
  40eaf6:	xchg   esp,eax
  40eaf7:	cmc    
  40eaf8:	or     DWORD PTR [ebx+edx*2+0x30],eax
  40eafc:	dec    ebp
  40eafd:	xacquire xchg DWORD PTR [edi-0x62],esi
  40eb01:	(bad)  
  40eb02:	faddp  st(1),st
  40eb04:	mov    cl,BYTE PTR [ecx+ecx*4]
  40eb07:	and    ah,dl
  40eb09:	imul   bx,WORD PTR [edx+edx*1+0x742bc5c0],0xd74e
  40eb13:	xor    al,0xa7
  40eb15:	aam    0xd7
  40eb17:	clc    
  40eb18:	inc    edx
  40eb19:	mov    esp,0x6fcc482
  40eb1e:	les    ebx,FWORD PTR [ecx-0x2d]
  40eb21:	mov    bl,0x2d
  40eb23:	nop
  40eb24:	and    eax,0xf520d21c
  40eb29:	cmp    DWORD PTR [eax],ebx
  40eb2b:	call   0x53a:0x20a14f2f
  40eb32:	mov    bl,0x46
  40eb34:	jp     0x40ead7
  40eb36:	sub    BYTE PTR [esp+edi*4+0x6a],bl
  40eb3a:	lods   eax,DWORD PTR ds:[esi]
  40eb3b:	push   esi
  40eb3c:	push   ss
  40eb3d:	adc    eax,0xb1bc0d06
  40eb42:	xchg   ebx,eax
  40eb43:	fwait
  40eb44:	clc    
  40eb45:	xchg   ebx,eax
  40eb46:	and    al,0xb2
  40eb48:	push   es
  40eb49:	inc    ebx
  40eb4a:	cdq    
  40eb4b:	mov    bh,0xa9
  40eb4d:	nop
  40eb4e:	pop    edi
  40eb4f:	push   0xcf873a54
  40eb54:	adc    ecx,DWORD PTR [ebp+0x4c]
  40eb57:	mov    eax,0xfa1305a9
  40eb5c:	aam    0xa1
  40eb5e:	dec    esp
  40eb5f:	data16 in al,dx
  40eb61:	fs enter 0x4cc6,0xa2
  40eb66:	test   eax,ebx
  40eb68:	adc    BYTE PTR [ecx],ch
  40eb6a:	jno    0x40eb81
  40eb6c:	push   es
  40eb6d:	out    dx,eax
  40eb6e:	add    eax,0x1298d8f9
  40eb73:	add    bh,bl
  40eb75:	call   0xfab8:0x7aa32cf9
  40eb7c:	lea    eax,[ebx-0x34fd3c25]
  40eb82:	repz pop gs
  40eb85:	outs   dx,DWORD PTR ds:[esi]
  40eb86:	mov    ah,0x2d
  40eb88:	in     al,0x17
  40eb8a:	jmp    0x9f65:0x4d3f036d
  40eb91:	les    esi,FWORD PTR [ebp-0x6b]
  40eb94:	pop    ebp
  40eb95:	and    eax,0xa9a471ec
  40eb9a:	loope  0x40ebff
  40eb9c:	int3   
  40eb9d:	inc    ebx
  40eb9e:	popfw  
  40eba0:	ins    DWORD PTR es:[edi],dx
  40eba1:	sar    DWORD PTR [esi+0x35635b37],1
  40eba7:	mov    ch,0xec
  40eba9:	xchg   ebx,eax
  40ebaa:	mov    bl,0xae
  40ebac:	xor    BYTE PTR [esi+ebp*1],ah
  40ebaf:	emms   
  40ebb1:	outs   dx,DWORD PTR ds:[esi]
  40ebb2:	(bad)  
  40ebb3:	aam    0xfc
  40ebb5:	call   0xb3e098c8
  40ebba:	xor    BYTE PTR [eax-0x30],0xfe
  40ebbe:	icebp  
  40ebbf:	aam    0x2b
  40ebc1:	call   0x911792c9
  40ebc6:	add    bh,BYTE PTR [ebx+0xf506a]
  40ebcc:	cmp    edx,DWORD PTR ds:0xc79ce56d
  40ebd2:	repnz fmul DWORD PTR [edi+0x25]
  40ebd6:	push   esi
  40ebd7:	inc    esi
  40ebd8:	mov    esp,0x77ed7120
  40ebdd:	lods   eax,DWORD PTR ds:[esi]
  40ebde:	pop    ss
  40ebdf:	pop    eax
  40ebe0:	test   DWORD PTR [edi],eax
  40ebe2:	enter  0x619e,0x2
  40ebe6:	dec    esp
  40ebe7:	scas   eax,DWORD PTR es:[edi]
  40ebe8:	repz (bad) 
  40ebea:	(bad)  [esi-0x7a11012]
  40ebf0:	sub    eax,0x1d970347
  40ebf5:	mov    dl,0xe7
  40ebf7:	lock call 0x2e0f3578
  40ebfd:	dec    ebx
  40ebfe:	(bad)  
  40ebff:	ficom  DWORD PTR [edi+0x6c2905a3]
  40ec05:	nop
  40ec06:	sub    al,0xf3
  40ec09:	ret    
  40ec0a:	xor    esi,DWORD PTR [ebp+0x4d]
  40ec0d:	sar    DWORD PTR [edi-0x52],cl
  40ec10:	ins    BYTE PTR es:[edi],dx
  40ec11:	pushf  
  40ec12:	mov    cl,BYTE PTR [edx]
  40ec14:	dec    ecx
  40ec15:	iret   
  40ec16:	pop    ebp
  40ec17:	mov    al,ds:0x751cbbd4
  40ec1c:	icebp  
  40ec1d:	jecxz  0x40ec3a
  40ec1f:	jo     0x40ebb0
  40ec21:	mov    edx,0x646c9b56
  40ec26:	mov    BYTE PTR [edx+0x242a1b5b],cl
  40ec2c:	arpl   WORD PTR [ebp+ebx*4+0x41],di
  40ec30:	sahf   
  40ec31:	or     BYTE PTR fs:[ebp+0x55],cl
  40ec35:	bnd jbe 0x40ec41
  40ec38:	sbb    eax,0x4c3fc2ed
  40ec3d:	xor    ax,0x2d85
  40ec41:	loopne 0x40ec8d
  40ec43:	push   esi
  40ec44:	and    DWORD PTR [esi],ebp
  40ec46:	les    esi,FWORD PTR [ebx]
  40ec48:	push   0x7f
  40ec4a:	and    ecx,DWORD PTR ds:0x9c1e87dd
  40ec50:	xchg   ecx,eax
  40ec51:	test   eax,0xa485002f
  40ec56:	out    dx,al
  40ec57:	bnd ret 
  40ec59:	push   ebx
  40ec5a:	ds jge 0x40eca0
  40ec5d:	cmc    
  40ec5e:	mov    ebp,0x6f319e03
  40ec63:	dec    edi
  40ec64:	xchg   ecx,eax
  40ec65:	or     esp,DWORD PTR [edx+eax*1-0x544cd6b2]
  40ec6c:	inc    edi
  40ec6d:	mov    ebx,0x26091890
  40ec73:	mov    bl,0xda
  40ec75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec76:	push   cs
  40ec77:	mov    ch,0x83
  40ec79:	shl    BYTE PTR [eax],0xe3
  40ec7c:	or     al,BYTE PTR [edi+ebp*4]
  40ec7f:	aam    0x24
  40ec81:	push   edx
  40ec82:	in     eax,0xfe
  40ec84:	jl     0x40ecd1
  40ec86:	ss inc ebx
  40ec88:	add    dh,dl
  40ec8a:	call   0xdcac7886
  40ec8f:	shr    DWORD PTR fs:[eax-0x5d44aa95],cl
  40ec96:	add    BYTE PTR [eax],bl
  40ec98:	pusha  
  40ec99:	fwait
  40ec9a:	test   al,0x5e
  40ec9c:	sti    
  40ec9d:	push   ebx
  40ec9e:	pop    es
  40ec9f:	dec    edi
  40eca0:	or     BYTE PTR [edi],0xd0
  40eca3:	push   es
  40eca4:	aaa    
  40eca5:	cmp    al,0x4c
  40eca7:	mov    bh,0xaa
  40eca9:	add    BYTE PTR [edi-0x4d3eff15],ch
  40ecaf:	retf   0x301c
  40ecb2:	mov    dh,0x17
  40ecb4:	add    BYTE PTR [eax+0xd3c6267],dh
  40ecba:	sbb    edi,DWORD PTR [edx+0x27]
  40ecbd:	loop   0x40ed13
  40ecbf:	mov    al,ds:0x2c67afd
  40ecc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecc5:	retf   
  40ecc6:	adc    bh,dl
  40ecc8:	mov    ebx,0x7ea262b3
  40eccd:	dec    ecx
  40ecce:	sti    
  40eccf:	inc    eax
  40ecd0:	out    dx,eax
  40ecd1:	mov    dh,0x7
  40ecd3:	xchg   ebx,eax
  40ecd4:	mov    WORD PTR [eax],cs
  40ecd6:	inc    edx
  40ecd7:	imul   esi,DWORD PTR [eax+0x34d325e8],0x9bec2c0d
  40ece1:	js     0x40ec90
  40ece3:	push   edx
  40ece4:	outs   dx,BYTE PTR ds:[esi]
  40ece5:	pop    ebx
  40ece6:	das    
  40ece7:	stos   DWORD PTR es:[edi],eax
  40ece8:	ins    DWORD PTR es:[edi],dx
  40ece9:	sbb    BYTE PTR [edx+0x4aad1290],0x35
  40ecf0:	bswap  esp
  40ecf2:	add    BYTE PTR [edi-0x7e825f90],cl
  40ecf8:	je     0x40ec8d
  40ecfa:	cwde   
  40ecfb:	loope  0x40ed75
  40ecfd:	sbb    ah,dh
  40ecff:	ins    DWORD PTR es:[edi],dx
  40ed00:	sbb    BYTE PTR ds:[ecx+0x29],bh
  40ed04:	int    0xb2
  40ed06:	imul   esi,DWORD PTR [ebx-0x195df2c5],0x296a72dd
  40ed10:	sbb    al,0x16
  40ed12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed13:	stos   DWORD PTR es:[edi],eax
  40ed14:	in     eax,dx
  40ed15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed16:	jno    0x40ecd9
  40ed18:	sahf   
  40ed19:	pop    esp
  40ed1a:	adc    DWORD PTR [edx-0x7],ecx
  40ed1d:	push   edi
  40ed1e:	jne    0x40ecbc
  40ed20:	jge    0x40ecbd
  40ed22:	or     cl,BYTE PTR [esi-0x6c]
  40ed25:	mov    bh,0xfa
  40ed27:	mov    ebp,0xd153ae11
  40ed2c:	clc    
  40ed2d:	mov    ds:0x6af4758,al
  40ed32:	sbb    eax,0xa5b960d0
  40ed37:	ss sub ebp,ebx
  40ed3a:	xchg   esp,eax
  40ed3b:	lock add eax,0x97f22cac
  40ed41:	stos   DWORD PTR es:[edi],eax
  40ed42:	push   es
  40ed43:	push   0x31
  40ed45:	daa    
  40ed46:	gs das 
  40ed48:	aas    
  40ed49:	or     cl,BYTE PTR ss:[eax+0x4a0cc312]
  40ed50:	rol    DWORD PTR [eax],1
  40ed52:	loop   0x40ed60
  40ed54:	xor    DWORD PTR [esi-0x1f],ebp
  40ed57:	xchg   DWORD PTR [edi+0xd],ecx
  40ed5a:	ret    
  40ed5b:	pop    ebx
  40ed5c:	mov    dh,0xc6
  40ed5e:	and    ah,BYTE PTR [edx+edx*4+0x64f0e1b9]
  40ed65:	out    dx,al
  40ed66:	shl    DWORD PTR [ebp-0x45],0x8e
  40ed6a:	adc    bl,bh
  40ed6c:	xor    eax,0xa8fbac8
  40ed71:	nop
  40ed72:	mov    ah,0xa4
  40ed74:	les    esp,FWORD PTR [eax-0x560b96f4]
  40ed7a:	dec    edx
  40ed7b:	mov    ebx,0xc594fd7f
  40ed80:	inc    edi
  40ed81:	jnp    0x40ed32
  40ed83:	into   
  40ed84:	sbb    al,0x38
  40ed86:	pop    esp
  40ed87:	cs sub eax,0x6144bfb3
  40ed8d:	xchg   edx,eax
  40ed8e:	or     dl,BYTE PTR [ebp-0x7e]
  40ed91:	xchg   esp,eax
  40ed92:	es mov edx,0xd051cd6b
  40ed98:	and    eax,0xdea54d87
  40ed9d:	popf   
  40ed9e:	mov    eax,ds:0xd08abc60
  40eda3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eda4:	and    DWORD PTR [ecx],ebx
  40eda6:	pushf  
  40eda7:	dec    esp
  40eda8:	and    dh,BYTE PTR [edx+0x396dc1a5]
  40edae:	and    cl,0x84
  40edb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edb2:	aaa    
  40edb3:	sbb    BYTE PTR [eax-0x2c],0x9e
  40edb7:	cmp    eax,ecx
  40edb9:	fisttp QWORD PTR [ecx-0x7d]
  40edbc:	mov    WORD PTR [ecx],?
  40edbe:	popa   
  40edbf:	cli    
  40edc0:	stos   DWORD PTR es:[edi],eax
  40edc1:	fcomp  DWORD PTR [edx-0x48d6dade]
  40edc7:	sub    ch,BYTE PTR [ecx]
  40edc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edca:	dec    esp
  40edcb:	lods   eax,DWORD PTR ds:[esi]
  40edcc:	fs (bad) 
  40edce:	(bad)  
  40edcf:	jo     0x40ee46
  40edd1:	pop    edi
  40edd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edd3:	icebp  
  40edd4:	leave  
  40edd5:	cli    
  40edd6:	dec    edx
  40edd7:	or     eax,0x7634b097
  40eddc:	imul   ebx,DWORD PTR [edi],0x79918350
  40ede2:	push   es
  40ede3:	pop    ecx
  40ede4:	xchg   ebx,eax
  40ede5:	lock in eax,0x27
  40ede8:	cs cld 
  40edea:	push   0x16
  40edec:	mov    ecx,0x634bb8f9
  40edf1:	fmul   DWORD PTR [ecx]
  40edf3:	mov    bh,0x94
  40edf5:	mov    ah,0x56
  40edf7:	or     ebx,DWORD PTR [eax+0x15]
  40edfa:	sbb    edx,ebp
  40edfc:	sti    
  40edfd:	(bad)  
  40edfe:	push   ecx
  40edff:	int3   
  40ee00:	pop    ebp
  40ee01:	jbe    0x40ee62
  40ee03:	call   0xc7aa674
  40ee08:	jp     0x40ee84
  40ee0a:	mov    ch,0xf4
  40ee0c:	rol    BYTE PTR [esi+0x43d7ec30],0x1f
  40ee13:	stos   BYTE PTR es:[edi],al
  40ee14:	mov    al,ds:0xc4ace849
  40ee19:	ret    0xc057
  40ee1c:	cmp    al,0x50
  40ee1e:	call   0x5c8f:0x5bfc6832
  40ee25:	push   edi
  40ee26:	fwait
  40ee27:	push   cs
  40ee28:	mov    eax,ds:0xf591b608
  40ee2d:	xchg   ebx,eax
  40ee2e:	imul   edx,DWORD PTR [ebp-0x2],0xffffffcf
  40ee32:	shl    edx,1
  40ee34:	inc    ebx
  40ee35:	jg     0x40ee4a
  40ee37:	mov    eax,ds:0xcfa368b5
  40ee3c:	mov    eax,0xc017c099
  40ee41:	das    
  40ee42:	imul   ebx,DWORD PTR [edi-0x1f],0x2ee84e90
  40ee49:	fwait
  40ee4a:	pop    edx
  40ee4b:	ficomp WORD PTR [ebx-0x772e5223]
  40ee51:	call   0x9604a91b
  40ee56:	pusha  
  40ee57:	sti    
  40ee58:	(bad)  
  40ee59:	pop    ebp
  40ee5a:	and    BYTE PTR [edx],0x9c
  40ee5d:	(bad)  
  40ee5e:	mov    dh,0xf7
  40ee60:	loope  0x40eeaa
  40ee62:	scas   eax,DWORD PTR es:[edi]
  40ee63:	pop    esp
  40ee64:	jl     0x40ee78
  40ee66:	or     al,0x39
  40ee68:	imul   eax,esi,0x4e
  40ee6b:	sbb    al,0x9a
  40ee6d:	cmp    eax,0x8b95143
  40ee72:	inc    ebx
  40ee73:	and    BYTE PTR [edx-0x1e5a018d],al
  40ee79:	shl    cl,cl
  40ee7b:	inc    esi
  40ee7c:	fwait
  40ee7d:	pop    ebx
  40ee7e:	lods   al,BYTE PTR ds:[esi]
  40ee7f:	xor    ch,BYTE PTR [eax-0x4fd3b43a]
  40ee85:	mov    ebp,0xffb3c574
  40ee8a:	sub    al,BYTE PTR [ebx-0x1b1a176b]
  40ee90:	xor    DWORD PTR [edi-0x25f2a589],ecx
  40ee96:	jb     0x40eeb1
  40ee98:	cmp    esi,esi
  40ee9a:	les    esp,FWORD PTR [edx]
  40ee9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee9d:	xor    DWORD PTR [ecx-0x4a26b9e8],eax
  40eea3:	cmp    ch,BYTE PTR [edx]
  40eea5:	jp     0x40ee98
  40eea7:	test   DWORD PTR [edi],ebp
  40eea9:	clc    
  40eeaa:	jb     0x40ef17
  40eeac:	push   ebp
  40eead:	clc    
  40eeae:	outs   dx,DWORD PTR ds:[esi]
  40eeaf:	mov    dh,BYTE PTR [esi+0x19]
  40eeb2:	mov    dh,0xe0
  40eeb4:	jmp    0x40ef18
  40eeb6:	add    DWORD PTR [edi+0x7ebb1299],edx
  40eebc:	das    
  40eebd:	(bad)  
  40eebe:	mov    fs,WORD PTR [edi]
  40eec0:	out    dx,eax
  40eec1:	dec    esp
  40eec2:	cs pop edx
  40eec4:	dec    ecx
  40eec5:	sbb    BYTE PTR [ecx+0x241dde6b],dl
  40eecb:	push   ds
  40eecc:	sbb    bl,bl
  40eece:	shl    BYTE PTR [edi+edx*4+0xe56a7eb],0xe0
  40eed6:	inc    ebp
  40eed7:	jno    0x40ee60
  40eed9:	inc    esi
  40eeda:	inc    ebp
  40eedb:	sub    edi,ecx
  40eedd:	or     eax,0x2614ffbe
  40eee2:	(bad)  
  40eee3:	or     DWORD PTR [esi-0x53],eax
  40eee6:	pop    ecx
  40eee7:	jmp    0x40eec6
  40eee9:	adc    eax,0xdd9c0d6c
  40eeee:	cmp    dl,BYTE PTR [esi]
  40eef0:	push   eax
  40eef1:	xchg   edx,eax
  40eef2:	xor    DWORD PTR [esi+ebp*1-0x59fb16c3],eax
  40eef9:	ja     0x40ef34
  40eefb:	mov    ah,bl
  40eefd:	js     0x40ef69
  40eeff:	(bad)  
  40ef00:	ror    al,1
  40ef02:	(bad)  
  40ef03:	lods   eax,DWORD PTR ds:[esi]
  40ef04:	mov    dh,0x7a
  40ef06:	jb     0x40eeea
  40ef08:	into   
  40ef09:	(bad)  [ebx-0x14]
  40ef0c:	lock adc DWORD PTR [edi+edx*1],0x4d
  40ef11:	and    al,0x95
  40ef13:	pop    edi
  40ef14:	jmp    0xb80753ca
  40ef19:	outs   dx,BYTE PTR ds:[esi]
  40ef1a:	daa    
  40ef1b:	mov    eax,0xc34f0ca9
  40ef20:	jae    0x40eea5
  40ef22:	fnsave [eax]
  40ef24:	ins    BYTE PTR es:[edi],dx
  40ef25:	mov    bh,0xa
  40ef27:	bound  edx,QWORD PTR [ebx-0x39]
  40ef2a:	sub    DWORD PTR [esi-0x51],eax
  40ef2d:	lock loop 0x40ef8f
  40ef30:	sti    
  40ef31:	rcl    DWORD PTR [ebx+esi*8],1
  40ef34:	add    DWORD PTR [ecx],edi
  40ef36:	out    dx,ax
  40ef38:	mov    ecx,0x59248098
  40ef3d:	outs   dx,BYTE PTR ds:[esi]
  40ef3e:	and    ebp,DWORD PTR [eax]
  40ef40:	repnz aaa 
  40ef42:	in     al,dx
  40ef43:	(bad)
  40ef46:	sahf   
  40ef47:	inc    DWORD PTR [edi-0x32012ba2]
  40ef4d:	stc    
  40ef4e:	or     bl,BYTE PTR [ecx-0x1b]
  40ef51:	(bad)  
  40ef52:	xchg   edx,eax
  40ef53:	clc    
  40ef54:	mov    dh,0x44
  40ef56:	sub    BYTE PTR [ecx+0x2013cc71],bh
  40ef5c:	xlat   BYTE PTR ds:[ebx]
  40ef5d:	push   ss
  40ef5e:	fistp  DWORD PTR [ebx-0x71]
  40ef61:	sub    eax,ecx
  40ef63:	gs scas eax,DWORD PTR es:[edi]
  40ef65:	out    0xd0,eax
  40ef67:	fistp  WORD PTR [edx+0x3f]
  40ef6a:	xor    cl,bh
  40ef6c:	lds    ebx,FWORD PTR [ebx]
  40ef6e:	in     al,0xfb
  40ef70:	push   ds
  40ef71:	bound  ebx,QWORD PTR [edi]
  40ef73:	loopne 0x40ef8a
  40ef75:	jle    0x40ef28
  40ef77:	(bad)  
  40ef78:	shr    DWORD PTR [ecx+0x2c],1
  40ef7b:	test   eax,0xee9988bc
  40ef80:	or     ebp,DWORD PTR [esi+0x33]
  40ef83:	pop    ss
  40ef84:	jmp    0x3000:0xa4088d36
  40ef8b:	repnz sub al,bh
  40ef8e:	(bad)  
  40ef8f:	pop    ebp
  40ef90:	mov    bl,0x88
  40ef92:	arpl   sp,di
  40ef94:	cmp    eax,0xcc363532
  40ef99:	or     al,0x1e
  40ef9b:	sub    ebp,DWORD PTR [ebx+0x676dc17c]
  40efa1:	in     eax,dx
  40efa2:	sbb    eax,DWORD PTR [ecx+0x35]
  40efa5:	push   ecx
  40efa6:	mov    WORD PTR [edx+0x2d],?
  40efa9:	jmp    0x1b82:0x29569080
  40efb0:	mov    ch,0x7d
  40efb2:	aam    0x69
  40efb4:	sub    BYTE PTR [ebx+0x54a2316e],ch
  40efba:	mov    ds,WORD PTR [eax+0x65]
  40efbd:	ret    0xb63c
  40efc0:	iret   
  40efc1:	out    dx,al
  40efc2:	inc    ecx
  40efc3:	pop    ebx
  40efc4:	jo     0x40f038
  40efc6:	push   0xdd0b8413
  40efcb:	add    ch,BYTE PTR cs:[eax-0x6cfeac00]
  40efd2:	loop   0x40f018
  40efd4:	inc    ebp
  40efd5:	pushf  
  40efd6:	sti    
  40efd7:	jl     0x40efb1
  40efd9:	inc    esp
  40efda:	repnz ins BYTE PTR es:[edi],dx
  40efdc:	cs stos BYTE PTR es:[edi],al
  40efde:	mov    DWORD PTR [edx],0x2921b699
  40efe4:	enter  0x8ad0,0x80
  40efe8:	pushf  
  40efe9:	add    dh,ah
  40efeb:	cmp    eax,0xd17e1eb9
  40eff0:	leave  
  40eff1:	jge    0x40ef95
  40eff3:	xchg   si,ax
  40eff5:	test   BYTE PTR [ecx+0x68559ad4],dl
  40effb:	clc    
  40effc:	xchg   edx,eax
  40effd:	jnp    0x40f01e
  40efff:	mov    esi,0x2788fe18
  40f004:	xor    eax,0xf2fe54ce
  40f009:	out    dx,al
  40f00a:	imul   edi,DWORD PTR [ecx-0x197bc940],0xffffff92
  40f011:	xor    edi,DWORD PTR [ebp+0x34438641]
  40f017:	dec    ebx
  40f018:	lods   eax,DWORD PTR ds:[esi]
  40f019:	cmp    DWORD PTR gs:[edx+0x5b],ebp
  40f01d:	into   
  40f01e:	mov    ds,ebp
  40f020:	lock xrelease mov BYTE PTR [ecx+0x7f],bh
  40f025:	inc    edx
  40f026:	adc    al,0x46
  40f028:	sub    DWORD PTR [esi+0x469134ad],edi
  40f02e:	push   eax
  40f02f:	cs mov esi,0x29f8928d
  40f035:	outs   dx,BYTE PTR ds:[esi]
  40f036:	pop    eax
  40f037:	fist   DWORD PTR [ebx+0x5147ce55]
  40f03d:	add    eax,0x67f80298
  40f042:	mov    ds:0x501fb14a,eax
  40f047:	mov    ds:0x1202a85f,eax
  40f04c:	xchg   BYTE PTR ds:0xaabcf06d,bl
  40f052:	lds    edx,FWORD PTR [edx-0x49ec8f04]
  40f058:	xchg   BYTE PTR ds:0x880af5fd,cl
  40f05e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f05f:	scas   eax,DWORD PTR es:[edi]
  40f060:	cmp    al,0x7d
  40f062:	cmp    al,0x5f
  40f064:	lock jns 0x40f01f
  40f067:	addr16 inc edx
  40f069:	xchg   esp,eax
  40f06a:	jecxz  0x40f050
  40f06c:	enter  0xd072,0x0
  40f070:	xchg   esi,eax
  40f071:	icebp  
  40f072:	push   ss
  40f073:	mov    ch,0x11
  40f075:	xchg   esp,eax
  40f076:	mov    DWORD PTR [eax-0x20f6127f],edx
  40f07c:	xchg   BYTE PTR ds:0x1d841558,dl
  40f082:	scas   al,BYTE PTR es:[edi]
  40f083:	enter  0xec70,0x48
  40f087:	jmp    0x88bf159d
  40f08c:	fnstsw WORD PTR [edx+0x1e9a809e]
  40f092:	dec    edi
  40f093:	add    bh,BYTE PTR [edx-0x5b]
  40f096:	cs xchg dh,ah
  40f099:	mov    esp,0xd717d023
  40f09e:	call   0x5739:0x5e040ff9
  40f0a5:	mov    ebx,0x5cb6c931
  40f0aa:	add    al,0x13
  40f0ac:	mov    gs,WORD PTR [ecx-0xc]
  40f0af:	jo     0x40f0d6
  40f0b1:	jo     0x40f105
  40f0b3:	mov    bh,0xfb
  40f0b5:	cmp    al,0xa6
  40f0b7:	inc    esp
  40f0b8:	out    0xde,eax
  40f0ba:	test   eax,0xd356d932
  40f0bf:	xor    ecx,DWORD PTR [eax+0x4c]
  40f0c2:	or     eax,0x42af1b9
  40f0c7:	pop    esi
  40f0c8:	add    eax,0xe2dcf98e
  40f0cd:	f2xm1  
  40f0cf:	dec    ebp
  40f0d0:	mov    edx,0xc2055f33
  40f0d5:	pop    ss
  40f0d6:	loopne 0x40f076
  40f0d8:	push   ecx
  40f0d9:	inc    esi
  40f0da:	js     0x40f09f
  40f0dc:	imul   edx,ecx,0x8bf61d40
  40f0e2:	aad    0x80
  40f0e4:	ins    DWORD PTR es:[edi],dx
  40f0e5:	call   DWORD PTR [ebp+ecx*1+0x3e163f]
  40f0ec:	xchg   ebx,eax
  40f0ed:	cmp    cl,bh
  40f0ef:	sub    al,BYTE PTR [esi]
  40f0f1:	xchg   edx,eax
  40f0f2:	mov    eax,esi
  40f0f4:	ror    BYTE PTR [esi],cl
  40f0f6:	arpl   WORD PTR [edx],cx
  40f0f8:	repnz imul ebx,DWORD PTR [ecx],0x449a6cb9
  40f0ff:	loop   0x40f100
  40f101:	xchg   edi,eax
  40f102:	jg     0x40f09f
  40f104:	leave  
  40f105:	bswap  esp
  40f107:	call   0xb65f:0xd5884447
  40f10e:	bound  ecx,QWORD PTR [edi-0x45]
  40f111:	dec    edi
  40f112:	dec    edi
  40f113:	and    BYTE PTR cs:[esi+0x1a],dh
  40f117:	xchg   ebx,eax
  40f118:	and    eax,0xa4b271cf
  40f11d:	push   ecx
  40f11e:	arpl   WORD PTR [edx-0x3ba2e5ff],cx
  40f124:	jmp    0xf33f:0xa0a010db
  40f12b:	call   0x15857183
  40f130:	dec    eax
  40f131:	(bad)  
  40f132:	ja     0x40f111
  40f134:	push   0x3a392ad2
  40f139:	pop    ebp
  40f13a:	dec    ebx
  40f13b:	jae    0x40f0e5
  40f13d:	pushf  
  40f13e:	inc    ebx
  40f13f:	sbb    DWORD PTR [ecx+edi*1-0x3e],ebp
  40f143:	out    dx,al
  40f144:	rcl    BYTE PTR [ebp-0x72],0x16
  40f148:	retf   
  40f149:	jb     0x40f1b2
  40f14b:	sbb    eax,0x55aab9b2
  40f150:	and    DWORD PTR [edi-0x6],ebx
  40f153:	sbb    DWORD PTR [edx-0x3f16f647],edi
  40f159:	add    BYTE PTR [esi],dl
  40f15b:	jae    0x40f1b2
  40f15d:	test   al,0x58
  40f15f:	sbb    esi,edi
  40f161:	mul    BYTE PTR [eax]
  40f163:	pop    ebp
  40f164:	pop    es
  40f165:	dec    ecx
  40f166:	rcr    edi,cl
  40f168:	or     al,0xa9
  40f16a:	pop    esi
  40f16b:	add    ch,cl
  40f16d:	bound  esi,QWORD PTR [ebx]
  40f16f:	scas   eax,DWORD PTR es:[edi]
  40f170:	ret    0xa925
  40f173:	imul   ebp,DWORD PTR [edi],0x7ddc9e34
  40f179:	pop    es
  40f17a:	sub    dh,BYTE PTR [esi-0x64]
  40f17d:	out    0xac,al
  40f17f:	or     DWORD PTR [edx],ebp
  40f181:	cmp    al,0x68
  40f183:	add    dl,BYTE PTR [esi*4-0x7f781342]
  40f18a:	dec    edx
  40f18b:	and    DWORD PTR [edx+0x704af973],esi
  40f191:	mov    BYTE PTR [ebp-0x72d943e9],bh
  40f197:	or     eax,0xdb820d1
  40f19c:	mov    DWORD PTR [ebp+0x27c46be1],eax
  40f1a2:	sub    ebx,ebp
  40f1a4:	aad    0x5f
  40f1a6:	cs pop esp
  40f1a8:	push   edi
  40f1a9:	jo     0x40f169
  40f1ab:	nop
  40f1ac:	(bad)  
  40f1ad:	push   ecx
  40f1ae:	and    al,0xaa
  40f1b0:	xor    BYTE PTR [ebx+0x45],bh
  40f1b3:	cmp    DWORD PTR [ecx],eax
  40f1b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1b6:	jge    0x40f199
  40f1b8:	push   ecx
  40f1b9:	dec    ebp
  40f1ba:	push   ebp
  40f1bb:	repnz sub ebp,edx
  40f1be:	sub    DWORD PTR [ebp+0x692b0ed3],ebp
  40f1c4:	xor    bl,bh
  40f1c6:	mov    WORD PTR [ecx+0x7d],?
  40f1c9:	out    0xb3,eax
  40f1cb:	jmp    0xfadbd87b
  40f1d0:	out    0xd8,al
  40f1d2:	add    DWORD PTR [ebp-0x2f81290b],0x9bfef1a9
  40f1dc:	or     ebp,DWORD PTR [edx]
  40f1de:	cmp    al,0xc6
  40f1e0:	jecxz  0x40f182
  40f1e2:	ds and esp,edx
  40f1e5:	fmul   st,st(2)
  40f1e7:	arpl   WORD PTR [esi],cx
  40f1e9:	arpl   WORD PTR [esi+0xc926e4b],di
  40f1ef:	sbb    eax,esp
  40f1f1:	xor    ecx,0xffffffaa
  40f1f4:	pop    ebp
  40f1f5:	mov    al,ds:0x547498a7
  40f1fa:	fidivr WORD PTR [esi-0x5c]
  40f1fd:	aas    
  40f1fe:	jge    0x40f187
  40f200:	adc    al,0xfb
  40f202:	push   eax
  40f203:	and    eax,0x699b1a18
  40f208:	push   ebx
  40f209:	add    ecx,DWORD PTR [ebx+0x5d37a82c]
  40f20f:	leave  
  40f210:	lods   eax,DWORD PTR ds:[esi]
  40f211:	sub    eax,DWORD PTR [ecx-0x8]
  40f214:	add    BYTE PTR [ebx-0x7830fdb8],al
  40f21a:	fsub   st,st(3)
  40f21c:	lods   al,BYTE PTR ds:[esi]
  40f21d:	add    eax,0x881ceb8e
  40f222:	stc    
  40f223:	lods   al,BYTE PTR ds:[esi]
  40f224:	sbb    esi,DWORD PTR [ebp+ebp*8+0x1]
  40f228:	pop    edx
  40f229:	dec    edi
  40f22a:	push   edx
  40f22b:	jne    0x40f203
  40f22d:	inc    ecx
  40f22e:	ins    DWORD PTR es:[edi],dx
  40f22f:	imul   esi,edi,0xf79a8a4
  40f235:	je     0x40f24d
  40f237:	(bad)  
  40f238:	out    0xa1,eax
  40f23a:	aad    0xc8
  40f23c:	and    ebx,edx
  40f23e:	cmp    BYTE PTR ds:[edi-0x162e0dcd],al
  40f245:	and    ah,cl
  40f247:	in     eax,dx
  40f248:	sbb    al,0x46
  40f24a:	arpl   WORD PTR [bx+di],cx
  40f24d:	xchg   ecx,eax
  40f24e:	in     al,0x29
  40f250:	in     eax,0x1e
  40f252:	mov    ebx,0xbf0412c7
  40f257:	mov    edx,0xdcb317fe
  40f25c:	int    0x6b
  40f25e:	cmp    al,0x6a
  40f260:	add    bl,BYTE PTR [ebx+0x12]
  40f263:	pop    ecx
  40f264:	mov    edi,0x54062b1b
  40f269:	aas    
  40f26a:	mov    eax,0x852746d3
  40f26f:	loope  0x40f2d4
  40f271:	(bad)  
  40f272:	adc    al,0x6b
  40f274:	and    ecx,DWORD PTR [edx]
  40f276:	in     al,0xe4
  40f278:	inc    ecx
  40f279:	(bad)  
  40f27a:	jo     0x40f2f1
  40f27c:	or     eax,0xd9083b40
  40f281:	cmp    al,0x66
  40f283:	adc    edi,DWORD PTR [eax]
  40f285:	inc    esi
  40f286:	dec    eax
  40f287:	out    0xc7,al
  40f289:	mov    ds:0x42ecc903,al
  40f28e:	dec    ecx
  40f28f:	(bad)  
  40f291:	xor    dl,BYTE PTR [edi+ebx*2]
  40f294:	fcmovu st,st(1)
  40f296:	mov    edi,0xc1f17198
  40f29b:	imul   ebx,DWORD PTR [edx+0x72],0x5
  40f29f:	iret   
  40f2a0:	or     esp,eax
  40f2a2:	push   0x892c47ce
  40f2a7:	scas   al,BYTE PTR es:[edi]
  40f2a8:	jg     0x40f296
  40f2aa:	cwde   
  40f2ab:	adc    esi,esi
  40f2ad:	imul   ecx,esi,0x636f673e
  40f2b3:	bound  ebx,QWORD PTR ds:[ebx]
  40f2b6:	icebp  
  40f2b7:	jle    0x40f26f
  40f2b9:	(bad)  
  40f2ba:	cmp    dl,dl
  40f2bc:	xor    BYTE PTR [edx-0x36],0x62
  40f2c0:	adc    eax,0xc36de12b
  40f2c5:	xlat   BYTE PTR ds:[ebx]
  40f2c6:	adc    al,bl
  40f2c8:	push   ebp
  40f2c9:	xor    BYTE PTR [ebx-0x760bd432],dh
  40f2cf:	push   edi
  40f2d0:	pop    ds
  40f2d1:	arpl   WORD PTR [esi-0x63d87a6b],di
  40f2d7:	stc    
  40f2d8:	gs push ds
  40f2da:	push   es
  40f2db:	repz push cs
  40f2dd:	xchg   DWORD PTR [ecx],esi
  40f2df:	push   ds
  40f2e0:	mov    edx,0xf01cc468
  40f2e5:	sbb    al,0x5e
  40f2e7:	imul   esi,DWORD PTR [eax-0x5b],0x3f
  40f2eb:	out    dx,al
  40f2ec:	std    
  40f2ed:	jo     0x40f308
  40f2ef:	psubb  mm2,QWORD PTR [ecx+0x104e18d6]
  40f2f6:	or     BYTE PTR [ebp+0x23],bl
  40f2f9:	cmp    BYTE PTR [ecx],dl
  40f2fb:	outs   dx,BYTE PTR ds:[esi]
  40f2fc:	aas    
  40f2fd:	add    al,0xb6
  40f2ff:	adc    ch,0x79
  40f302:	jne    0x40f37d
  40f304:	mov    al,ds:0x253fce9a
  40f309:	sbb    bh,BYTE PTR ds:0xaa262e91
  40f30f:	add    eax,0x9a4ffb5b
  40f314:	mov    eax,ds:0x3b0bacdd
  40f319:	and    eax,eax
  40f31b:	fnstcw WORD PTR [eax]
  40f31d:	dec    ecx
  40f31e:	xor    ah,BYTE PTR [ebx-0x25d0c6bd]
  40f324:	das    
  40f325:	xor    cl,BYTE PTR [ebp+0x7b999209]
  40f32b:	addr16 cs jl 0x40f38f
  40f32f:	push   ebx
  40f330:	fistp  WORD PTR [eax]
  40f332:	xchg   ebx,eax
  40f333:	inc    esi
  40f334:	sti    
  40f335:	test   eax,0x309eff52
  40f33a:	sahf   
  40f33b:	sbb    bl,ah
  40f33d:	adc    esp,DWORD PTR [ebx+0x23]
  40f340:	mov    dl,0x6f
  40f342:	cmp    al,0xf0
  40f344:	mov    bl,0x1a
  40f346:	pop    edx
  40f347:	xchg   ebx,eax
  40f348:	inc    esp
  40f349:	sbb    al,0xf1
  40f34b:	ss push ss
  40f34d:	int3   
  40f34e:	je     0x40f3b6
  40f350:	sub    al,0x76
  40f352:	jp     0x40f3d0
  40f354:	dec    eax
  40f355:	xchg   edi,eax
  40f356:	mov    WORD PTR [esi-0x1c4988a8],es
  40f35c:	lahf   
  40f35d:	sub    BYTE PTR ds:0x5f4f5877,ah
  40f363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f364:	or     BYTE PTR [ebp+0x59],cl
  40f367:	dec    ebp
  40f368:	pushf  
  40f369:	xchg   DWORD PTR [edx+eiz*4-0x31a86f65],esi
  40f370:	inc    edi
  40f371:	jmp    0x4499171d
  40f376:	and    cl,bl
  40f378:	adc    al,dl
  40f37a:	ins    BYTE PTR es:[edi],dx
  40f37b:	cdq    
  40f37c:	retf   
  40f37d:	xor    cl,cl
  40f37f:	pop    esi
  40f380:	stos   BYTE PTR es:[edi],al
  40f381:	and    al,BYTE PTR [ebp-0x107ee674]
  40f387:	mov    esp,0x679fc08d
  40f38c:	adc    eax,0x910c70c5
  40f391:	rcl    DWORD PTR [ebx+eiz*8],1
  40f394:	fld    QWORD PTR [eax]
  40f396:	push   ecx
  40f398:	lods   al,BYTE PTR ds:[esi]
  40f399:	xchg   edx,eax
  40f39a:	js     0x40f381
  40f39c:	call   0xbe9f:0xa41e3858
  40f3a3:	call   0xa3ebb4fe
  40f3a8:	jno    0x40f40d
  40f3aa:	clc    
  40f3ab:	adc    al,0x1b
  40f3ad:	arpl   WORD PTR [ebx],di
  40f3af:	push   es
  40f3b0:	cld    
  40f3b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3b2:	popa   
  40f3b3:	int3   
  40f3b4:	(bad)  
  40f3b6:	popa   
  40f3b7:	dec    esi
  40f3b8:	pop    esi
  40f3b9:	test   eax,0x3083f080
  40f3be:	and    eax,0x7d21e01f
  40f3c3:	xchg   edx,eax
  40f3c4:	fisttp WORD PTR [edx+eiz*8-0xa98ae1]
  40f3cb:	stc    
  40f3cc:	iret   
  40f3cd:	cmp    ebp,DWORD PTR [edx]
  40f3cf:	push   ebp
  40f3d0:	rol    BYTE PTR [eax],1
  40f3d2:	push   edi
  40f3d3:	jecxz  0x40f44e
  40f3d5:	cmp    eax,0xd142bcba
  40f3da:	or     BYTE PTR [ecx],dh
  40f3dc:	dec    ecx
  40f3dd:	ja     0x40f415
  40f3df:	mov    esp,0x9ab0690a
  40f3e4:	in     al,dx
  40f3e5:	ret    0xac89
  40f3e8:	sbb    dl,BYTE PTR [ecx+edx*2-0x5]
  40f3ec:	das    
  40f3ed:	pop    es
  40f3ee:	mov    bl,0x11
  40f3f0:	sbb    eax,0xcdba0626
  40f3f5:	xchg   esi,eax
  40f3f6:	jns    0x40f407
  40f3f8:	in     eax,dx
  40f3f9:	jge    0x40f391
  40f3fb:	outs   dx,DWORD PTR ds:[esi]
  40f3fc:	xor    eax,0xeb72409e
  40f401:	sub    DWORD PTR [edi],esp
  40f403:	ret    0x7f11
  40f406:	jns    0x40f3f5
  40f408:	jne    0x40f412
  40f40a:	and    al,al
  40f40c:	sar    ah,1
  40f40e:	jge    0x40f41a
  40f410:	mov    ebp,0x715d04e3
  40f415:	cli    
  40f416:	cmp    BYTE PTR [edi-0x259ae5ce],0xf0
  40f41d:	out    0x27,eax
  40f41f:	fs push es
  40f421:	(bad)  [eax]
  40f423:	jno    0x40f463
  40f425:	test   DWORD PTR [eax+0x7766e74a],esi
  40f42b:	sub    edi,DWORD PTR [edx]
  40f42d:	or     cl,BYTE PTR [esi+ebx*4+0x661b9bbf]
  40f434:	test   ebx,edi
  40f436:	sti    
  40f437:	inc    edx
  40f438:	adc    eax,0xf090bf5e
  40f43d:	dec    eax
  40f43e:	cmp    DWORD PTR [ecx],0xffffffe8
  40f441:	int3   
  40f442:	adc    al,0x1e
  40f444:	fistp  QWORD PTR [edx-0x3f]
  40f447:	int3   
  40f448:	mov    al,0x94
  40f44a:	add    DWORD PTR [edx],edi
  40f44c:	jmp    0x48b6:0x91a78dc4
  40f453:	vmread esi,ebp
  40f456:	scas   al,BYTE PTR es:[edi]
  40f457:	push   ebp
  40f458:	cmp    esp,DWORD PTR [edx+edi*8-0x634dec8c]
  40f45f:	xchg   ecx,eax
  40f460:	outs   dx,BYTE PTR ds:[esi]
  40f461:	addr16 pop esi
  40f463:	mov    edi,0x800198fc
  40f468:	pop    ss
  40f469:	dec    eax
  40f46a:	pop    ss
  40f46b:	shl    DWORD PTR [esi],1
  40f46d:	lods   al,BYTE PTR ds:[esi]
  40f46e:	pop    ebp
  40f46f:	cmp    BYTE PTR [ebx],bh
  40f471:	jns    0x40f40a
  40f473:	das    
  40f474:	mov    ecx,0xf23978b6
  40f479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f47a:	imul   ecx,ebp,0x148811a
  40f480:	jecxz  0x40f4fd
  40f482:	mov    esi,0xa36d44ab
  40f487:	jb     0x40f45b
  40f489:	cmp    edi,DWORD PTR ds:0xfccaf2f8
  40f48f:	push   ebp
  40f490:	lahf   
  40f491:	xor    edi,DWORD PTR [edi+0xf]
  40f494:	jmp    0x5380:0x867a4fde
  40f49b:	sahf   
  40f49c:	repnz push ss
  40f49e:	or     al,0x6e
  40f4a0:	mov    bl,0xe0
  40f4a2:	out    0x41,al
  40f4a4:	ret    0x4e7b
  40f4a7:	fcomip st,st(2)
  40f4a9:	pop    ss
  40f4aa:	push   edx
  40f4ab:	sbb    esp,DWORD PTR [edx-0x3a]
  40f4ae:	cli    
  40f4af:	sub    bh,BYTE PTR [esi]
  40f4b1:	jmp    DWORD PTR [ebx+0x3f]
  40f4b4:	mov    edx,edi
  40f4b6:	pop    esi
  40f4b7:	mov    bl,0x5
  40f4b9:	inc    ebp
  40f4ba:	popa   
  40f4bb:	mov    edx,0x57769184
  40f4c0:	ja     0x40f487
  40f4c2:	add    BYTE PTR [esi-0x371060d7],al
  40f4c8:	mov    esp,ebp
  40f4ca:	test   BYTE PTR [edi-0x80],0x35
  40f4ce:	mov    esi,DWORD PTR [edi]
  40f4d0:	pop    ebx
  40f4d1:	add    DWORD PTR [ecx],edi
  40f4d3:	jno    0x40f527
  40f4d5:	xchg   BYTE PTR [edi+0x3fc0377d],dl
  40f4db:	pop    ebx
  40f4dc:	mov    edi,0xfa4bca53
  40f4e1:	jge    0x40f560
  40f4e3:	add    dh,0xd3
  40f4e6:	rcl    BYTE PTR [esi+esi*8+0x7e4be7b4],cl
  40f4ed:	fucomi st,st(5)
  40f4ef:	mov    ds:0x1f6a5f9f,eax
  40f4f4:	and    ecx,DWORD PTR [esi-0x65]
  40f4f7:	sahf   
  40f4f8:	cmc    
  40f4f9:	sar    BYTE PTR [esi+0x4e],0x9
  40f4fd:	retf   0xd8cb
  40f500:	idiv   dh
  40f502:	shl    BYTE PTR [eax-0x31],0xa9
  40f506:	mov    eax,ds:0xdb353f2f
  40f50b:	push   ds
  40f50c:	push   ebx
  40f50d:	pop    edi
  40f50e:	call   0x332ace63
  40f513:	in     al,0xbe
  40f515:	or     dl,BYTE PTR ds:0x5390c543
  40f51b:	sub    BYTE PTR [ebx+eiz*4],ah
  40f51e:	pop    edx
  40f51f:	int3   
  40f520:	push   es
  40f521:	adc    BYTE PTR [edx+0x23],bh
  40f524:	dec    ebp
  40f525:	or     dl,BYTE PTR [eax-0x6628ed21]
  40f52b:	pop    ss
  40f52c:	dec    ecx
  40f52d:	stos   BYTE PTR es:[edi],al
  40f52e:	repnz rcl DWORD PTR [eax],1
  40f531:	rcl    DWORD PTR [esi-0x4a],1
  40f534:	jl     0x40f4d0
  40f536:	repz mov ebx,0x82cc8482
  40f53c:	sbb    ebx,esp
  40f53e:	mov    eax,ds:0x2e5e622d
  40f543:	cmc    
  40f544:	push   eax
  40f545:	js     0x40f52a
  40f547:	pop    edx
  40f548:	and    al,0x93
  40f54a:	cmp    eax,0x6449266
  40f54f:	pop    edi
  40f550:	retf   0xb3d
  40f553:	shl    DWORD PTR [eax+0x48],1
  40f556:	ins    DWORD PTR es:[edi],dx
  40f557:	jnp    0x40f5c6
  40f559:	inc    BYTE PTR [ecx]
  40f55b:	add    dl,dh
  40f55d:	xor    ecx,DWORD PTR ds:0xa2b2972c
  40f563:	xor    eax,0x2aabb5e3
  40f568:	xchg   ah,ah
  40f56a:	add    ch,BYTE PTR [eax+0x66]
  40f56d:	xor    ch,ch
  40f56f:	push   edx
  40f570:	inc    DWORD PTR [eax+0x353e4ed6]
  40f576:	mov    ecx,0xd65aca0f
  40f57b:	xor    dh,BYTE PTR [edi]
  40f57d:	std    
  40f57e:	cwde   
  40f57f:	or     cl,BYTE PTR [eax-0x239fd65e]
  40f585:	pop    ebp
  40f586:	adc    DWORD PTR [ecx],esi
  40f588:	stc    
  40f589:	mov    cl,0x84
  40f58b:	cs inc ebx
  40f58d:	mov    WORD PTR [ebx-0x66],cs
  40f590:	push   0xffffff9a
  40f592:	cmc    
  40f593:	out    dx,eax
  40f594:	daa    
  40f595:	stos   BYTE PTR es:[edi],al
  40f596:	loope  0x40f5cf
  40f598:	inc    eax
  40f599:	lods   eax,DWORD PTR ds:[esi]
  40f59a:	test   BYTE PTR [edi],ch
  40f59c:	fidivr DWORD PTR [edi-0x635546f8]
  40f5a2:	gs jae 0x40f5b4
  40f5a5:	out    dx,eax
  40f5a6:	push   cs
  40f5a7:	cdq    
  40f5a8:	repnz clc 
  40f5aa:	test   BYTE PTR [esi-0x5b883051],al
  40f5b0:	inc    ecx
  40f5b1:	fsub   QWORD PTR [ebx-0x1526b021]
  40f5b7:	and    ebp,DWORD PTR [ebx+0x75]
  40f5ba:	clc    
  40f5bb:	jo     0x40f5ec
  40f5bd:	inc    ebx
  40f5be:	pusha  
  40f5bf:	jne    0x40f5b4
  40f5c1:	push   eax
  40f5c2:	arpl   WORD PTR fs:[edx+0x10b9e176],bx
  40f5c9:	out    0xbb,al
  40f5cb:	in     eax,0x3a
  40f5cd:	cmp    eax,DWORD PTR [ecx]
  40f5cf:	mov    edi,0xc8c48558
  40f5d4:	ja     0x40f63e
  40f5d6:	mov    al,ds:0x26efe100
  40f5db:	retf   0x419a
  40f5de:	lahf   
  40f5df:	xchg   esi,eax
  40f5e0:	adc    eax,0x621b074c
  40f5e5:	cwde   
  40f5e6:	push   es
  40f5e7:	aas    
  40f5e8:	lods   eax,DWORD PTR ds:[esi]
  40f5e9:	push   esp
  40f5ea:	fcom   st(7)
  40f5ec:	in     eax,0x54
  40f5ee:	sti    
  40f5ef:	inc    edi
  40f5f0:	(bad)  
  40f5f1:	aaa    
  40f5f2:	dec    eax
  40f5f3:	push   es
  40f5f4:	cmp    dh,BYTE PTR [esi+0x60]
  40f5f7:	cmp    eax,0x3bc30613
  40f5fc:	ret    0x92a6
  40f5ff:	dec    ecx
  40f600:	push   edi
  40f601:	and    al,dh
  40f603:	and    BYTE PTR [edx+0x66c14663],dl
  40f609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f60a:	add    BYTE PTR [ecx],ch
  40f60c:	pusha  
  40f60d:	xchg   ecx,eax
  40f60e:	mov    eax,0x6f1d1bd
  40f613:	dec    ecx
  40f614:	mov    ecx,0x58de0076
  40f619:	mov    DWORD PTR [ebp+eax*2+0x589ecc03],edx
  40f620:	stc    
  40f621:	jl     0x40f5b4
  40f623:	xor    esp,DWORD PTR [eax+ebx*4-0x43992dc7]
  40f62a:	sbb    dl,BYTE PTR [edi]
  40f62c:	pusha  
  40f62d:	mov    ss,ebx
  40f62f:	inc    eax
  40f630:	rol    DWORD PTR [edx+0x65d9f16f],0xe9
  40f637:	in     eax,dx
  40f638:	imul   esp,DWORD PTR [eax-0x56],0x9af0d368
  40f63f:	jno    0x40f635
  40f641:	xor    DWORD PTR [ecx+0x7d],esi
  40f644:	xor    al,0xef
  40f646:	push   si
  40f648:	sub    ebx,DWORD PTR [ecx]
  40f64a:	nop
  40f64b:	ins    DWORD PTR es:[edi],dx
  40f64c:	or     al,0xf0
  40f64e:	inc    edx
  40f64f:	nop
  40f650:	xchg   BYTE PTR [ebp+ecx*4-0x4948cc0f],bh
  40f657:	push   edi
  40f658:	popf   
  40f659:	xchg   DWORD PTR [eax],ebx
  40f65b:	out    dx,eax
  40f65c:	scas   eax,DWORD PTR es:[edi]
  40f65d:	add    eax,0x53e0d4f8
  40f662:	xchg   DWORD PTR [eax+0x21],ebx
  40f665:	lods   eax,DWORD PTR ds:[esi]
  40f666:	cmp    eax,0xa149277
  40f66b:	mov    bl,0xa0
  40f66d:	pushf  
  40f66e:	mov    ah,0x87
  40f670:	xchg   BYTE PTR [esi+0x38a492e3],ch
  40f676:	add    cl,cl
  40f678:	inc    edi
  40f679:	dec    eax
  40f67a:	outs   dx,DWORD PTR ds:[esi]
  40f67b:	enter  0xdb6d,0x1b
  40f67f:	jg     0x40f605
  40f681:	enter  0x8278,0xd8
  40f685:	call   0xaaf0:0x444d2e44
  40f68c:	mov    al,0xc1
  40f68e:	add    esi,DWORD PTR [eax+0x2fac2a11]
  40f694:	clc    
  40f695:	sbb    ch,bl
  40f697:	fidiv  DWORD PTR [ebp-0x60]
  40f69a:	psubsw mm4,QWORD PTR es:[edi+0x1a]
  40f69f:	cs ret 0x702b
  40f6a3:	cs pop edi
  40f6a5:	cmp    ebx,DWORD PTR [edx+0x6e]
  40f6a8:	out    0xc8,al
  40f6aa:	fist   WORD PTR [esi-0x107d4503]
  40f6b0:	mov    bl,0xbd
  40f6b2:	jae    0x40f67c
  40f6b4:	scas   eax,DWORD PTR es:[edi]
  40f6b5:	dec    ecx
  40f6b6:	das    
  40f6b7:	mov    al,0x27
  40f6b9:	popf   
  40f6ba:	pusha  
  40f6bb:	sub    BYTE PTR [ebp+edi*4+0x5b],al
  40f6bf:	fnsave [esp+ecx*2]
  40f6c2:	xchg   BYTE PTR [esp+edi*1],cl
  40f6c5:	sub    esi,0x62cba5a3
  40f6cb:	dec    ebp
  40f6cc:	xor    edx,DWORD PTR [ebx+ebx*1]
  40f6cf:	in     al,0x61
  40f6d1:	sub    eax,0xc59d4b30
  40f6d6:	inc    edx
  40f6d7:	and    edi,DWORD PTR [ecx]
  40f6d9:	dec    eax
  40f6da:	adc    cl,BYTE PTR [esi-0x6f242866]
  40f6e0:	add    ah,bh
  40f6e2:	call   0xb17d:0xe237b5d1
  40f6e9:	xchg   edx,eax
  40f6ea:	jmp    0x39a4c389
  40f6ef:	sub    al,0x42
  40f6f1:	ds mov bl,0xc
  40f6f4:	or     esp,edx
  40f6f6:	mov    eax,DWORD PTR [ebx-0x22]
  40f6f9:	mov    dl,0x1
  40f6fb:	clc    
  40f6fc:	inc    esp
  40f6fd:	inc    edi
  40f6fe:	inc    eax
  40f6ff:	test   eax,0xb0de8ed3
  40f704:	es in  al,0x1a
  40f707:	into   
  40f708:	call   0x10c4:0x8b5f4494
  40f70f:	(bad)  
  40f710:	fisttp WORD PTR [eax-0x53]
  40f713:	dec    edx
  40f714:	aad    0xec
  40f716:	out    dx,al
  40f717:	pop    ebp
  40f718:	push   0xd5aab273
  40f71d:	shr    ch,0x5e
  40f720:	mov    ds:0x46205a7e,al
  40f725:	sahf   
  40f726:	sbb    esp,edx
  40f728:	(bad)  
  40f729:	add    al,0x4b
  40f72b:	adc    ah,dh
  40f72d:	hlt    
  40f72e:	jbe    0x40f78f
  40f730:	into   
  40f731:	sbb    ah,dl
  40f733:	xor    al,0x9a
  40f735:	imul   edx,DWORD PTR [ebx],0xffffff8f
  40f738:	jmp    0xfa2664dc
  40f73d:	mov    dl,0x69
  40f73f:	call   FWORD PTR [eax+0x773b99e5]
  40f745:	jle    0x40f77b
  40f747:	lea    edi,[edx-0x24283923]
  40f74d:	(bad)  
  40f74e:	inc    DWORD PTR [ebx]
  40f750:	test   BYTE PTR [ebx],al
  40f752:	inc    esp
  40f753:	push   esp
  40f754:	iret   
  40f755:	shl    DWORD PTR [esi+0x63def4e],0x7b
  40f75c:	push   0x6b
  40f75e:	ins    BYTE PTR es:[edi],dx
  40f75f:	push   edx
  40f760:	test   eax,0xb5a5b64c
  40f765:	lods   al,BYTE PTR ds:[esi]
  40f766:	pop    ecx
  40f767:	lea    ebp,[esi+ebx*2]
  40f76a:	imul   ecx,DWORD PTR [ebx-0x7fca98d],0xffffffac
  40f771:	pop    esi
  40f772:	or     BYTE PTR [edx-0x53],0xaf
  40f776:	inc    ebx
  40f777:	adc    eax,0xe4a103ef
  40f77c:	cmp    BYTE PTR [edi],al
  40f77e:	aas    
  40f77f:	(bad)  
  40f780:	retf   
  40f781:	loop   0x40f801
  40f783:	sbb    eax,0x4da6836b
  40f788:	or     DWORD PTR [esp+edi*2],edi
  40f78b:	mov    DWORD PTR [ecx-0x2453b53f],esp
  40f791:	adc    BYTE PTR [edx],ch
  40f793:	mov    eax,ds:0x92930124
  40f798:	aas    
  40f799:	imul   esp,DWORD PTR [edi+edi*1],0x3bef23ae
  40f7a0:	jmp    0x60f093f7
  40f7a5:	imul   ebx,DWORD PTR [ebx+0x6b6b64a5],0x995eb189
  40f7af:	pop    ebp
  40f7b0:	cmp    esp,DWORD PTR [ecx+0x62ac3049]
  40f7b6:	je     0x40f7cf
  40f7b8:	mov    ds:0x7b502aa4,al
  40f7bd:	and    ch,BYTE PTR [ecx-0x2f]
  40f7c0:	ins    DWORD PTR es:[edi],dx
  40f7c1:	clc    
  40f7c2:	call   0x912d:0x7a88eb28
  40f7c9:	cs push edi
  40f7cb:	push   ebp
  40f7cc:	js     0x40f80f
  40f7ce:	call   0xaf91:0x9c591e22
  40f7d5:	inc    eax
  40f7d6:	adc    eax,0x16432c38
  40f7db:	mov    bh,0xfc
  40f7dd:	repz test BYTE PTR [edi+0x78],dh
  40f7e1:	sub    DWORD PTR [ecx-0x68b37c1],esp
  40f7e7:	ss sub eax,0x5797dba1
  40f7ed:	push   DWORD PTR [ecx]
  40f7ef:	dec    esi
  40f7f0:	inc    ebp
  40f7f1:	push   ss
  40f7f2:	cmp    eax,0x994cc528
  40f7f7:	mov    al,ds:0x673e5ca5
  40f7fc:	pop    ebp
  40f7fd:	sti    
  40f7fe:	mov    cl,0xf2
  40f800:	cdq    
  40f801:	out    dx,al
  40f802:	popf   
  40f803:	dec    esi
  40f804:	fbstp  TBYTE PTR ds:[esi-0x41e51d6e]
  40f80b:	in     al,0xe2
  40f80d:	add    eax,0x6e6712af
  40f812:	jg     0x40f7f5
  40f814:	mov    WORD PTR [eax-0x7d],fs
  40f817:	jmp    0x40f7d2
  40f819:	(bad)  [eax+ecx*2+0x4fca261b]
  40f820:	inc    ebp
  40f821:	mov    dl,0xa8
  40f823:	xor    DWORD PTR [edi+0x61206af1],0x2425d2a
  40f82d:	jne    0x40f819
  40f82f:	fs fucom st(4)
  40f832:	dec    ebx
  40f833:	mov    cl,cl
  40f835:	cmp    eax,0xd61b8424
  40f83a:	cli    
  40f83b:	sub    esp,DWORD PTR [ecx]
  40f83d:	xor    BYTE PTR [eax],cl
  40f83f:	push   0xa77cfe9d
  40f844:	or     al,0x86
  40f846:	popf   
  40f847:	adc    bh,BYTE PTR [edx-0x4b3856cd]
  40f84d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f84e:	or     DWORD PTR [esi+0x47c94455],ecx
  40f854:	mov    ah,0x74
  40f856:	std    
  40f857:	clc    
  40f858:	std    
  40f859:	clc    
  40f85a:	rol    BYTE PTR [ebp-0x4a58b5ff],cl
  40f860:	ffree  st(4)
  40f862:	sub    bh,BYTE PTR [ebp-0x1b]
  40f865:	aam    0x55
  40f867:	daa    
  40f868:	fwait
  40f869:	daa    
  40f86a:	mov    edx,DWORD PTR ds:0x5c121f7a
  40f870:	mov    fs,ebx
  40f872:	jnp    0x40f8c3
  40f874:	mov    ch,0x8c
  40f876:	repz repz pop edx
  40f879:	and    BYTE PTR [esp+edi*8],ah
  40f87c:	jns    0x40f880
  40f87e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f880:	dec    ecx
  40f881:	fidivr WORD PTR [edx+0x76afe7ab]
  40f887:	xchg   ecx,eax
  40f888:	jae    0x40f8e2
  40f88a:	nop
  40f88b:	and    BYTE PTR [edi],bh
  40f88d:	xchg   ebx,eax
  40f88e:	sti    
  40f88f:	ins    BYTE PTR es:[edi],dx
  40f890:	out    0x1c,eax
  40f892:	out    dx,eax
  40f893:	sub    al,0x99
  40f895:	stos   DWORD PTR es:[edi],eax
  40f896:	ja     0x40f82f
  40f898:	sub    eax,DWORD PTR [esi-0x3a]
  40f89b:	mov    esi,0x20c25f57
  40f8a0:	call   DWORD PTR [ebp+ecx*4+0x50]
  40f8a4:	xor    bh,BYTE PTR [edx+0x5f]
  40f8a7:	rol    DWORD PTR [ebx],cl
  40f8a9:	dec    ecx
  40f8aa:	sbb    BYTE PTR [ecx],al
  40f8ac:	leave  
  40f8ad:	add    al,dh
  40f8af:	ss jecxz 0x40f88b
  40f8b2:	mov    cl,0xb1
  40f8b4:	cmpxchg BYTE PTR [ebx],dl
  40f8b7:	jmp    0x75b01290
  40f8bc:	mov    edi,0xc7878a79
  40f8c1:	fld    DWORD PTR [ecx-0x4d]
  40f8c4:	cld    
  40f8c5:	push   es
  40f8c6:	addr16 cli 
  40f8c8:	xchg   ecx,eax
  40f8c9:	hlt    
  40f8ca:	loop   0x40f8ff
  40f8cc:	mov    al,dh
  40f8ce:	mov    edx,0x1c3b5d6d
  40f8d3:	nop
  40f8d4:	mov    ss,ebp
  40f8d6:	cmp    dl,0xed
  40f8d9:	aam    0x1c
  40f8db:	xor    al,0x98
  40f8dd:	sbb    bh,dl
  40f8df:	test   DWORD PTR [edx-0x114af6b2],eax
  40f8e5:	enter  0x710f,0x9e
  40f8e9:	sub    BYTE PTR [ebx],0x1e
  40f8ec:	fsubr  DWORD PTR ds:0x6c13c283
  40f8f2:	loopne 0x40f930
  40f8f4:	(bad)  
  40f8f5:	sbb    DWORD PTR [ebx],esp
  40f8f7:	sbb    al,dh
  40f8f9:	cmp    dl,BYTE PTR [edi-0x6a]
  40f8fc:	cmp    al,0x80
  40f8fe:	or     esi,DWORD PTR [ecx+ebp*1-0x3f]
  40f902:	push   edi
  40f903:	aad    0xd1
  40f905:	repz lds ebx,FWORD PTR [ebx-0x5f569779]
  40f90c:	jge    0x40f95c
  40f90e:	push   edx
  40f90f:	xchg   edx,eax
  40f910:	xchg   ebx,eax
  40f911:	pusha  
  40f912:	mov    ecx,DWORD PTR [esi]
  40f914:	test   al,0xbe
  40f916:	cdq    
  40f917:	in     eax,0x86
  40f919:	mov    al,ds:0x6deb5c97
  40f91e:	jno    0x40f936
  40f920:	xchg   ebp,eax
  40f921:	ret    
  40f922:	mov    ah,0xd7
  40f924:	adc    al,0x34
  40f926:	les    edi,FWORD PTR [edi]
  40f928:	jnp    0x40f900
  40f92a:	dec    eax
  40f92b:	neg    BYTE PTR [ecx+eax*2+0x51]
  40f92f:	push   es
  40f930:	popa   
  40f931:	lods   eax,DWORD PTR ds:[esi]
  40f932:	xor    eax,ebp
  40f934:	in     eax,dx
  40f935:	adc    eax,0xaf3f6050
  40f93a:	cmp    BYTE PTR [ecx-0x8ebbf9b],al
  40f940:	sub    esp,ebx
  40f942:	sub    DWORD PTR ds:0xfe5ad9f,eax
  40f948:	shl    dh,cl
  40f94a:	loope  0x40f96c
  40f94c:	xor    al,0x6f
  40f94e:	jns    0x40f960
  40f950:	xchg   esi,eax
  40f951:	fdiv   st(4),st
  40f953:	inc    esi
  40f954:	fs test al,0xe1
  40f957:	lods   eax,DWORD PTR ds:[esi]
  40f958:	or     DWORD PTR [esi+0x5f1de972],edi
  40f95e:	(bad)  
  40f95f:	ds ins BYTE PTR es:[edi],dx
  40f961:	fild   WORD PTR [ebx]
  40f963:	jb     0x40f966
  40f965:	(bad)  
  40f966:	mov    esi,0x511cc55e
  40f96b:	mov    WORD PTR [ebp-0x3dbc2b8f],cs
  40f971:	rol    BYTE PTR [ebp+ebx*4-0x42cf644c],1
  40f978:	(bad)
  40f97b:	rcl    BYTE PTR [ecx],1
  40f97d:	xchg   ah,al
  40f97f:	fld    DWORD PTR [ebp+0x760febaf]
  40f985:	mov    ds:0x77f475b,al
  40f98a:	retf   0xcc29
  40f98d:	pop    ecx
  40f98e:	sahf   
  40f98f:	scas   al,BYTE PTR es:[edi]
  40f990:	imul   DWORD PTR [ebp-0x5a]
  40f993:	fldenv [edx+edi*1-0x66]
  40f997:	sub    edi,DWORD PTR [edi-0x5d]
  40f99a:	jo     0x40f948
  40f99c:	sub    DWORD PTR [ebx],eax
  40f99e:	fnstsw WORD PTR [ebx+0x0]
  40f9a1:	push   0xc
  40f9a3:	pop    ss
  40f9a4:	and    edx,DWORD PTR [esi]
  40f9a6:	cmp    edx,esp
  40f9a8:	xchg   esp,eax
  40f9a9:	and    al,cl
  40f9ab:	and    BYTE PTR [eax],dh
  40f9ad:	outs   dx,DWORD PTR ds:[esi]
  40f9ae:	mov    esp,0x318fb1a8
  40f9b3:	mov    esp,0x57c2c936
  40f9b8:	je     0x40f990
  40f9ba:	cmp    eax,0x578c7109
  40f9bf:	leave  
  40f9c0:	xlat   BYTE PTR ds:[ebx]
  40f9c1:	xchg   esi,eax
  40f9c2:	ins    BYTE PTR es:[edi],dx
  40f9c3:	cmp    dh,BYTE PTR ds:0xd3ad3c00
  40f9c9:	cmp    eax,ebx
  40f9cb:	sbb    al,bh
  40f9cd:	adc    eax,0xf64c3f58
  40f9d2:	sub    esi,DWORD PTR [eax-0x23b98212]
  40f9d8:	or     bl,BYTE PTR [ebx-0x3b49bc25]
  40f9de:	retf   0x2d1b
  40f9e1:	addr16 hlt 
  40f9e3:	xchg   esp,eax
  40f9e4:	shl    al,cl
  40f9e6:	cs push esi
  40f9e8:	mov    ah,0x33
  40f9ea:	mov    eax,ds:0x9936ee2d
  40f9ef:	mov    ch,0x60
  40f9f1:	mov    eax,ecx
  40f9f3:	ret    
  40f9f4:	pop    edi
  40f9f5:	pop    edx
  40f9f6:	popa   
  40f9f7:	mov    bh,dl
  40f9f9:	sbb    eax,0x163e00c
  40f9fe:	xchg   edi,eax
  40f9ff:	lods   al,BYTE PTR ds:[esi]
  40fa00:	lds    esp,FWORD PTR gs:[ebp+ebx*2+0x6101e1c3]
  40fa08:	stc    
  40fa09:	imul   edx,DWORD PTR [eax+0x6e254c85],0xfffffff3
  40fa10:	je     0x40fa6d
  40fa12:	clc    
  40fa13:	sbb    BYTE PTR [edi-0x1554fbf],bh
  40fa19:	dec    eax
  40fa1a:	push   ss
  40fa1b:	jns    0x40fa5a
  40fa1d:	fbstp  TBYTE PTR ds:[edi-0x685a66fc]
  40fa24:	fadd   DWORD PTR [eax+edx*8]
  40fa27:	mov    cl,BYTE PTR [ecx+0x7d212dad]
  40fa2d:	clc    
  40fa2e:	sub    DWORD PTR [eax-0x4154a8ae],eax
  40fa34:	xchg   ebp,eax
  40fa35:	push   ebx
  40fa36:	sbb    esp,DWORD PTR [ecx]
  40fa38:	nop
  40fa39:	sbb    bl,ah
  40fa3b:	(bad)  
  40fa3c:	mov    ds:0xf28deadb,al
  40fa41:	mov    BYTE PTR [edi-0x5c],bh
  40fa44:	and    bl,BYTE PTR [eax]
  40fa46:	mov    esi,0x5031e2a3
  40fa4b:	icebp  
  40fa4c:	push   esi
  40fa4d:	dec    ebx
  40fa4e:	js     0x40fa31
  40fa50:	ja     0x40f9ef
  40fa52:	pop    edi
  40fa53:	jge    0x40fa14
  40fa55:	sbb    BYTE PTR [ecx+0x26],bh
  40fa58:	lods   eax,DWORD PTR ds:[esi]
  40fa59:	loope  0x40fa8e
  40fa5b:	sub    BYTE PTR [esi],ch
  40fa5d:	pop    esi
  40fa5e:	gs lahf 
  40fa60:	jb     0x40fad1
  40fa62:	jmp    0x4e40:0x29b4badc
  40fa69:	jecxz  0x40fa3e
  40fa6b:	adc    al,0xac
  40fa6d:	shl    edx,cl
  40fa6f:	inc    edx
  40fa70:	cld    
  40fa71:	or     eax,0x1565bb54
  40fa76:	pop    edi
  40fa77:	mov    esi,0xc81e8fe
  40fa7c:	out    0x8f,al
  40fa7e:	call   0x59a530e2
  40fa83:	mov    BYTE PTR [eax],0x47
  40fa86:	inc    esi
  40fa87:	dec    edi
  40fa88:	sub    al,0x68
  40fa8a:	pop    esp
  40fa8b:	lock scas al,BYTE PTR es:[edi]
  40fa8d:	repz dec edx
  40fa8f:	add    BYTE PTR [edx*4-0x1a4d0bbb],cl
  40fa96:	je     0x40faf4
  40fa98:	mov    edi,0xac6af3e8
  40fa9d:	mov    ch,0x43
  40fa9f:	pop    ebx
  40faa0:	add    eax,0xc1b75cc0
  40faa5:	mov    ds:0x95c14159,al
  40faaa:	jmp    0xf881:0xbb05bee
  40fab1:	pop    ebx
  40fab2:	sub    edx,ebp
  40fab4:	mov    ebp,0x93f24d69
  40fab9:	adc    ecx,DWORD PTR [edx]
  40fabb:	stos   BYTE PTR es:[edi],al
  40fabc:	loope  0x40fa6a
  40fabe:	xor    al,0xb5
  40fac0:	test   DWORD PTR [ebx-0x53],edi
  40fac3:	outs   dx,BYTE PTR ds:[esi]
  40fac4:	ins    BYTE PTR es:[edi],dx
  40fac5:	ficom  WORD PTR gs:[edi]
  40fac8:	mov    edi,0x29cac45
  40facd:	data16 fcom DWORD PTR [esi+edi*8+0x682c8763]
  40fad5:	in     al,0xc1
  40fad7:	mov    ds:0x86f2a7cf,eax
  40fadc:	or     DWORD PTR [ebx],ecx
  40fade:	fabs   
  40fae0:	jmp    0x387d11f9
  40fae5:	or     ah,BYTE PTR [ecx+0x6be600bd]
  40faeb:	inc    edx
  40faec:	aas    
  40faed:	mov    ebp,0xf76fd536
  40faf2:	xchg   edx,eax
  40faf3:	fcomp  QWORD PTR [esi+0x23463e77]
  40faf9:	push   edx
  40fafa:	stos   DWORD PTR es:[edi],eax
  40fafb:	mov    BYTE PTR [edx+0x5c5fdb9e],bh
  40fb01:	push   ecx
  40fb02:	nop
  40fb03:	lea    edi,[edi+0x39018a2e]
  40fb09:	xor    dh,bl
  40fb0b:	jle    0x40faf0
  40fb0d:	fndisi(8087 only) 
  40fb0f:	push   0xffffffa1
  40fb11:	and    edx,0x43
  40fb14:	mov    ds:0x27b6835f,al
  40fb19:	dec    esp
  40fb1a:	sub    eax,0x62cc288d
  40fb1f:	xor    BYTE PTR [ebp+0x19e47d94],bh
  40fb25:	scas   al,BYTE PTR es:[edi]
  40fb26:	mov    ds:0x597ab13f,al
  40fb2b:	das    
  40fb2c:	in     eax,dx
  40fb2d:	(bad)  
  40fb2e:	jle    0x40fac7
  40fb30:	out    0x78,al
  40fb32:	mov    edi,0x4d73297d
  40fb37:	loop   0x40fb8e
  40fb39:	xor    ch,BYTE PTR [esi-0x7d350198]
  40fb3f:	inc    esp
  40fb40:	dec    edx
  40fb41:	mov    esp,0x9edecfcb
  40fb46:	and    eax,eax
  40fb48:	mov    al,0x70
  40fb4a:	xor    DWORD PTR [edi],0xfffffff6
  40fb4d:	shl    DWORD PTR [eax],cl
  40fb4f:	test   al,0x70
  40fb51:	xchg   BYTE PTR [esi],al
  40fb53:	icebp  
  40fb54:	mov    bh,BYTE PTR [ebx]
  40fb56:	pop    esp
  40fb57:	xor    ebp,DWORD PTR [edi]
  40fb59:	popf   
  40fb5a:	jnp    0x40fb66
  40fb5c:	push   ebx
  40fb5d:	pop    ss
  40fb5e:	mov    edi,0xe31ffb61
  40fb63:	xor    BYTE PTR [edx+edx*8-0x4e17234e],cl
  40fb6a:	or     al,0x7d
  40fb6c:	and    ch,BYTE PTR [ebx-0x4c]
  40fb6f:	mov    bl,0xd1
  40fb71:	jae    0x40fb58
  40fb73:	cld    
  40fb74:	and    al,0x5
  40fb76:	mov    gs,WORD PTR [ebx]
  40fb78:	pop    esi
  40fb79:	mov    ds:0xe5b50b95,al
  40fb7e:	pop    ds
  40fb7f:	pop    ebx
  40fb80:	mov    eax,DWORD PTR [eax]
  40fb82:	mov    DWORD PTR [ecx-0x77],edi
  40fb85:	ret    0xde8
  40fb88:	cmp    DWORD PTR [ecx],eax
  40fb8a:	cli    
  40fb8b:	std    
  40fb8c:	pop    edi
  40fb8d:	mov    esp,0x8c4b1f73
  40fb92:	scas   al,BYTE PTR es:[edi]
  40fb93:	repz inc ecx
  40fb95:	cmp    BYTE PTR [edi],ah
  40fb97:	add    al,0x39
  40fb99:	lds    ecx,FWORD PTR [ebx]
  40fb9b:	mov    cs,edx
  40fb9d:	cmp    eax,0x3412ae88
  40fba2:	arpl   cx,si
  40fba4:	(bad)  
  40fba5:	cdq    
  40fba6:	rcr    edi,0x1a
  40fba9:	or     al,0x92
  40fbab:	ins    BYTE PTR es:[edi],dx
  40fbac:	xor    ch,BYTE PTR [edi]
  40fbae:	adc    edx,DWORD PTR [esi+0x49]
  40fbb1:	pop    ebp
  40fbb2:	fimul  WORD PTR [ebx+0x1206db5c]
  40fbb8:	sti    
  40fbb9:	pop    ebx
  40fbba:	push   0x15
  40fbbc:	jnp    0x40fbd1
  40fbbe:	push   edx
  40fbbf:	cmp    eax,ebx
  40fbc1:	imul   esi,DWORD PTR [eax-0x43e27f1c],0xffffffa9
  40fbc8:	dec    edi
  40fbc9:	mov    al,0x85
  40fbcb:	retf   
  40fbcc:	push   ss
  40fbcd:	in     eax,dx
  40fbce:	mov    esi,0x5e7c3c3d
  40fbd3:	iret   
  40fbd4:	jns    0x40fc4c
  40fbd6:	outs   dx,DWORD PTR ds:[esi]
  40fbd7:	stc    
  40fbd8:	xor    al,0x61
  40fbda:	mov    ebx,DWORD PTR [ebx+0x3bdf8495]
  40fbe0:	fwait
  40fbe1:	mov    ds:0x3c860f4c,eax
  40fbe6:	sub    al,0xe3
  40fbe8:	dec    edx
  40fbe9:	push   esp
  40fbea:	add    BYTE PTR [ebx-0x33b8354],dh
  40fbf0:	and    DWORD PTR es:[edx],eax
  40fbf3:	cld    
  40fbf4:	ret    0x4b4e
  40fbf7:	lea    esp,[ebx+ebx*4]
  40fbfa:	dec    ebx
  40fbfb:	in     eax,0xb9
  40fbfd:	aas    
  40fbfe:	(bad)  
  40fc00:	or     eax,0x87d02626
  40fc05:	lea    edx,[ebp+0x766dd7d6]
  40fc0b:	mov    dl,0x4
  40fc0d:	or     bl,bh
  40fc0f:	scas   eax,DWORD PTR es:[edi]
  40fc10:	mov    ?,WORD PTR [ebx-0x3a]
  40fc13:	popa   
  40fc14:	sub    eax,0x9a291eea
  40fc19:	inc    ebx
  40fc1a:	and    bh,ah
  40fc1c:	(bad)  
  40fc1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc1e:	push   ebx
  40fc1f:	leave  
  40fc20:	les    ebx,FWORD PTR gs:[ebx+edx*4-0x64231eee]
  40fc28:	dec    esi
  40fc29:	dec    BYTE PTR [edx+eiz*2+0x1a860b08]
  40fc30:	cs loop 0x40fbb7
  40fc33:	fimul  WORD PTR fs:[esi+0x26cad37c]
  40fc3a:	dec    ebp
  40fc3b:	pop    ss
  40fc3c:	nop
  40fc3d:	rcl    BYTE PTR [ebp+0xe874796],0xc6
  40fc44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc45:	jecxz  0x40fc45
  40fc47:	test   al,0x85
  40fc49:	cs inc edx
  40fc4b:	dec    ebx
  40fc4c:	and    eax,0xb61a32ca
  40fc51:	push   ds
  40fc52:	or     al,0xa6
  40fc54:	pushf  
  40fc55:	sbb    edi,DWORD PTR [edi-0x1d]
  40fc58:	mov    esi,0x60fd12a
  40fc5d:	ret    
  40fc5e:	cs loop 0x40fc8e
  40fc61:	clc    
  40fc62:	pop    edx
  40fc63:	daa    
  40fc64:	iret   
  40fc65:	les    eax,FWORD PTR [esp+esi*2-0x40457537]
  40fc6c:	fmul   DWORD PTR [ebx+0x3b]
  40fc6f:	pop    ds
  40fc70:	push   0x14
  40fc72:	push   ecx
  40fc73:	imul   DWORD PTR [ebx]
  40fc75:	sub    DWORD PTR [ebp-0x31],0x24
  40fc79:	xchg   esp,eax
  40fc7a:	jmp    0xb645:0x6c02df94
  40fc81:	sbb    eax,0x6b1f8b22
  40fc86:	into   
  40fc87:	jmp    0x9052:0x9940e534
  40fc8e:	retf   0x3ab4
  40fc91:	push   ss
  40fc92:	inc    esi
  40fc93:	out    0x35,al
  40fc95:	ds sti 
  40fc97:	lods   al,BYTE PTR gs:[esi]
  40fc99:	sbb    al,0x95
  40fc9b:	(bad)
  40fc9e:	inc    ebx
  40fc9f:	leave  
  40fca0:	stos   BYTE PTR es:[edi],al
  40fca1:	outs   dx,BYTE PTR ds:[esi]
  40fca2:	inc    ecx
  40fca3:	loop   0x40fd0f
  40fca5:	adc    eax,0xbe4e4a2e
  40fcaa:	sub    dh,BYTE PTR [edi-0x30]
  40fcad:	jb     0x40fcf2
  40fcaf:	push   esp
  40fcb0:	pop    ecx
  40fcb1:	push   ecx
  40fcb2:	rcr    ebx,cl
  40fcb4:	imul   edi,DWORD PTR [esi+0x6a],0xdcaa2baf
  40fcbb:	inc    esi
  40fcbc:	cmp    al,0x72
  40fcbe:	pop    ebx
  40fcbf:	inc    esi
  40fcc0:	pop    edx
  40fcc1:	push   es
  40fcc2:	xor    al,0x8a
  40fcc4:	push   0x2d2dcc65
  40fcc9:	div    bh
  40fccb:	loopne 0x40fd43
  40fccd:	cmp    DWORD PTR [ebp-0x57],ecx
  40fcd0:	lahf   
  40fcd1:	loop   0x40fc75
  40fcd3:	mov    dh,0xc6
  40fcd5:	test   BYTE PTR [edi],dh
  40fcd7:	pop    eax
  40fcd8:	add    cl,BYTE PTR [eax+0x3f]
  40fcdb:	mov    dl,0x4d
  40fcdd:	add    ebp,DWORD PTR [ebx]
  40fcdf:	sub    esi,DWORD PTR [esi]
  40fce1:	jnp    0x40fce0
  40fce3:	daa    
  40fce4:	(bad)  
  40fce5:	jl     0x40fcc2
  40fce7:	(bad)  
  40fce8:	test   al,0xc9
  40fcea:	mov    al,0x60
  40fcec:	pop    ds
  40fced:	or     al,BYTE PTR [edx]
  40fcef:	dec    esi
  40fcf0:	sbb    eax,0x7308b9e0
  40fcf5:	xchg   ecx,eax
  40fcf6:	jmp    0x11d6d1dc
  40fcfb:	enter  0x8587,0x54
  40fcff:	pop    esp
  40fd00:	fxch   st(0)
  40fd02:	xor    al,0xcf
  40fd04:	ret    
  40fd05:	jb     0x40fc8d
  40fd07:	test   al,0x2
  40fd09:	js     0x40fd2d
  40fd0b:	xchg   ecx,eax
  40fd0c:	shl    edx,1
  40fd0e:	call   0xaef4:0xd7cf5028
  40fd15:	xchg   esi,eax
  40fd16:	and    eax,0xe0da5888
  40fd1b:	mov    esi,0xa7488a00
  40fd20:	hlt    
  40fd21:	jo     0x40fcd4
  40fd23:	scas   al,BYTE PTR es:[edi]
  40fd24:	into   
  40fd25:	sar    ecx,0x7b
  40fd28:	(bad)  
  40fd29:	aad    0xc5
  40fd2b:	daa    
  40fd2c:	sbb    ch,BYTE PTR [esi-0x1]
  40fd2f:	(bad)  
  40fd30:	push   esp
  40fd31:	and    DWORD PTR [edi-0x1c],esi
  40fd34:	dec    eax
  40fd35:	push   0xffffff92
  40fd37:	inc    eax
  40fd38:	repz add al,0xfc
  40fd3b:	jnp    0x40fdbc
  40fd3d:	inc    esi
  40fd3e:	fucomp st(1)
  40fd40:	call   0xec21485f
  40fd45:	fst    QWORD PTR [eax+0x46]
  40fd48:	cmp    al,0x9a
  40fd4a:	push   cs
  40fd4b:	cmp    eax,0xaeb90401
  40fd50:	mov    cl,0xa
  40fd52:	frstor [ebx-0x311b5f36]
  40fd58:	sti    
  40fd59:	mov    ebx,0xb2a7fb3a
  40fd5e:	dec    ebx
  40fd5f:	add    eax,DWORD PTR fs:[edx+ecx*2]
  40fd63:	pop    ebx
  40fd64:	cld    
  40fd65:	adc    ebp,ebx
  40fd67:	dec    ecx
  40fd68:	sub    DWORD PTR [ebx+eiz*4+0xb5a8381],esp
  40fd6f:	sub    cl,BYTE PTR [edi]
  40fd71:	sub    BYTE PTR [esi-0x54],bh
  40fd74:	dec    eax
  40fd75:	mov    ecx,0xca99aa78
  40fd7a:	and    dl,BYTE PTR [eax]
  40fd7c:	mov    ebx,0x149600c6
  40fd81:	cmp    eax,0x99101c2
  40fd86:	xchg   esp,eax
  40fd87:	icebp  
  40fd88:	inc    esp
  40fd89:	jmp    0x3cc4:0x7b44c0c8
  40fd90:	pop    ebp
  40fd91:	aas    
  40fd92:	fisttp DWORD PTR [edx]
  40fd94:	test   al,0xec
  40fd96:	cmp    DWORD PTR [edi],edx
  40fd98:	push   esi
  40fd99:	imul   ebx,DWORD PTR [edi-0x5ec43615],0xfffffffe
  40fda0:	and    BYTE PTR [edi-0x29f43d28],al
  40fda6:	pop    edx
  40fda7:	nop
  40fda8:	pop    ebp
  40fda9:	test   BYTE PTR [esi+0x3a745acc],dl
  40fdaf:	lods   eax,DWORD PTR ds:[esi]
  40fdb0:	mov    eax,ds:0xa70ace5c
  40fdb5:	jl     0x40fd82
  40fdb7:	fld    QWORD PTR ds:0xc1c49366
  40fdbd:	(bad)  
  40fdbe:	mov    fs,WORD PTR [edx+0x40cda23b]
  40fdc4:	(bad)  
  40fdc6:	jge    0x40fe17
  40fdc8:	leave  
  40fdc9:	xor    al,0x76
  40fdcb:	add    al,0xc0
  40fdcd:	and    cl,al
  40fdcf:	pop    esi
  40fdd0:	mov    WORD PTR [esi],?
  40fdd2:	jne    0x40fde9
  40fdd4:	iret   
  40fdd5:	dec    edi
  40fdd6:	adc    eax,0x48f126c2
  40fddb:	popf   
  40fddc:	or     DWORD PTR [edx+0x250133a9],edx
  40fde2:	or     edi,DWORD PTR [ebx]
  40fde4:	sbb    eax,0x36a4a2e
  40fde9:	xor    esp,ebp
  40fdeb:	js     0x40fe6a
  40fded:	and    al,0x8a
  40fdef:	dec    edi
  40fdf0:	in     eax,0xc1
  40fdf2:	call   0xfbe6:0x4426b963
  40fdf9:	push   ds
  40fdfa:	xchg   BYTE PTR [eax],ah
  40fdfc:	xor    eax,0x245bc35f
  40fe01:	rcl    BYTE PTR [eax],0xda
  40fe04:	ins    DWORD PTR es:[edi],dx
  40fe05:	add    DWORD PTR [ebx+0x4cfcc962],edx
  40fe0b:	retf   
  40fe0c:	jge    0x40fda7
  40fe0e:	adc    bl,BYTE PTR [edx+0x210559c0]
  40fe14:	std    
  40fe15:	dec    ecx
  40fe16:	add    eax,0x8db4d557
  40fe1b:	stos   DWORD PTR es:[edi],eax
  40fe1c:	push   ebp
  40fe1d:	cmp    ebx,DWORD PTR [eax+0x29c77803]
  40fe23:	out    dx,eax
  40fe24:	sub    al,0x8c
  40fe26:	fdivr  st,st(5)
  40fe28:	data16 aaa 
  40fe2a:	cld    
  40fe2b:	xor    DWORD PTR [ecx+0x145a82a1],ecx
  40fe31:	repnz repnz hlt 
  40fe34:	jne    0x40fe60
  40fe36:	mov    edi,0x456f089d
  40fe3b:	inc    ecx
  40fe3c:	add    BYTE PTR [edx-0x30855e89],dh
  40fe42:	pop    esp
  40fe43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe44:	retf   
  40fe45:	mov    edx,ebp
  40fe47:	lock add eax,0x2246e475
  40fe4d:	loopne 0x40fecd
  40fe4f:	pop    ecx
  40fe50:	fidiv  WORD PTR [ecx+0x70]
  40fe53:	in     al,0xcf
  40fe55:	dec    eax
  40fe56:	(bad)  
  40fe57:	mov    ebp,0xe74ca7a
  40fe5c:	lods   eax,DWORD PTR ds:[esi]
  40fe5d:	sbb    edi,DWORD PTR [eax-0x3c]
  40fe60:	cdq    
  40fe61:	jp     0x40fe37
  40fe63:	add    esi,DWORD PTR [esi+ebx*2-0x7ecd1353]
  40fe6a:	xor    esi,edx
  40fe6c:	pop    ebp
  40fe6d:	ret    0xf988
  40fe70:	enter  0x66e5,0x73
  40fe74:	adc    eax,0xf0a54192
  40fe79:	add    DWORD PTR [edx-0x76],0xffffffbe
  40fe7d:	jne    0x40fe9b
  40fe7f:	cmp    ah,BYTE PTR [eax-0x36]
  40fe82:	pop    ds
  40fe83:	fcmovne st,st(7)
  40fe85:	xchg   esp,eax
  40fe86:	mov    ecx,0xa107ccdf
  40fe8b:	js     0x40fee1
  40fe8d:	pop    ebx
  40fe8e:	mov    bh,0xc2
  40fe90:	test   DWORD PTR [edx],ecx
  40fe92:	sub    eax,0x747dd2a6
  40fe97:	jmp    0x40febd
  40fe99:	jecxz  0x40fe24
  40fe9b:	pop    edi
  40fe9c:	cmp    BYTE PTR [edi-0x5c469fb7],cl
  40fea2:	ins    DWORD PTR es:[edi],dx
  40fea3:	pop    ecx
  40fea4:	and    eax,ebp
  40fea6:	sahf   
  40fea7:	rcr    DWORD PTR [esi-0x33],cl
  40feaa:	dec    ebp
  40feab:	inc    ecx
  40feac:	add    DWORD PTR [eax],0x67
  40feaf:	pop    eax
  40feb0:	push   ds
  40feb1:	scas   eax,DWORD PTR es:[edi]
  40feb2:	lahf   
  40feb3:	push   ss
  40feb4:	inc    edx
  40feb5:	mov    ds:0xe101bde0,al
  40feba:	stos   DWORD PTR es:[edi],eax
  40febb:	xchg   ebx,eax
  40febc:	(bad)  
  40febd:	mov    dl,0xe3
  40febf:	xor    al,0x7
  40fec1:	pop    ecx
  40fec2:	push   ds
  40fec3:	rcr    BYTE PTR [ebx+ebp*1-0x75d82b69],0x45
  40fecb:	sbb    eax,eax
  40fecd:	push   ss
  40fece:	ins    DWORD PTR es:[edi],dx
  40fecf:	jge    0x40fed7
  40fed1:	push   ds
  40fed2:	lods   eax,DWORD PTR ds:[esi]
  40fed3:	inc    eax
  40fed4:	mov    ch,ch
  40fed6:	shr    DWORD PTR [eax-0x5b2f6c53],cl
  40fedc:	test   DWORD PTR ds:[ebp+ecx*2-0x31],ebp
  40fee1:	mov    ch,0xa9
  40fee3:	and    DWORD PTR [esi+0x74],ebp
  40fee6:	mov    DWORD PTR [edi],ebp
  40fee8:	fistp  WORD PTR [esi+0x7c]
  40feeb:	in     eax,0x3
  40feed:	outs   dx,DWORD PTR ds:[esi]
  40feee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feef:	push   cs
  40fef0:	sub    BYTE PTR [eax+0x155b447d],ah
  40fef6:	jns    0x40ff30
  40fef8:	adc    ch,0x26
  40fefb:	pop    es
  40fefc:	dec    ecx
  40fefd:	mov    al,cl
  40feff:	pop    ebp
  40ff00:	add    al,0x14
  40ff02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff03:	adc    DWORD PTR [esi+0x9],esp
  40ff06:	jmp    0x3be4e7fa
  40ff0b:	imul   esp,DWORD PTR [edi],0x35fabb51
  40ff11:	call   0xc78:0x689e9d26
  40ff18:	or     eax,0x23e82810
  40ff1d:	arpl   WORD PTR [edi+0x2012c022],si
  40ff23:	cmp    ebp,DWORD PTR [edi-0x31]
  40ff26:	sub    al,0x19
  40ff28:	jecxz  0x40ff9c
  40ff2a:	mov    esi,0xe94fe685
  40ff2f:	jg     0x40ff22
  40ff31:	popa   
  40ff32:	ins    BYTE PTR es:[edi],dx
  40ff33:	mov    dl,0x7d
  40ff35:	pop    esp
  40ff36:	repnz pop ebx
  40ff38:	xor    eax,0xcd1841e8
  40ff3d:	addr16 call 0xbbc60abf
  40ff43:	mov    ch,0x27
  40ff45:	or     BYTE PTR [ebp-0x5c366a61],0x2d
  40ff4c:	push   edx
  40ff4d:	fsubr  QWORD PTR [edi+0x76]
  40ff50:	pop    ss
  40ff51:	push   ebx
  40ff52:	sti    
  40ff53:	push   eax
  40ff54:	xor    edi,eax
  40ff56:	ja     0x40ff79
  40ff58:	lock (bad) [ecx+0x4614e709]
  40ff5f:	mov    bh,0x33
  40ff61:	pop    ebx
  40ff62:	inc    ebx
  40ff63:	mov    dl,0xd7
  40ff65:	out    0x78,eax
  40ff67:	daa    
  40ff68:	sbb    BYTE PTR [esi+0x8],0xee
  40ff6c:	ret    0x232
  40ff6f:	outs   dx,DWORD PTR ds:[esi]
  40ff70:	pop    esp
  40ff71:	and    ecx,ebx
  40ff73:	push   es
  40ff74:	sub    BYTE PTR [esi],ch
  40ff76:	ret    0x7cf2
  40ff79:	inc    ebx
  40ff7a:	aam    0x74
  40ff7c:	sbb    al,0xe
  40ff7e:	test   DWORD PTR [edx],ebx
  40ff80:	mov    dh,0xdc
  40ff82:	in     eax,dx
  40ff83:	(bad)  
  40ff84:	loope  0x40ff3d
  40ff86:	xchg   esi,eax
  40ff87:	retf   
  40ff88:	pop    ebp
  40ff89:	mov    al,0x9a
  40ff8b:	iret   
  40ff8c:	and    edi,DWORD PTR ds:0x4d5419c4
  40ff92:	cmp    BYTE PTR [ebp+0x22613900],dl
  40ff98:	clc    
  40ff99:	arpl   WORD PTR [esi-0x2e],di
  40ff9c:	mov    ebx,0xdf1a6383
  40ffa1:	jmp    0x40ff31
  40ffa3:	into   
  40ffa4:	or     bh,bh
  40ffa6:	adc    BYTE PTR [ebx],bl
  40ffa8:	or     dl,BYTE PTR [edx-0x5b]
  40ffab:	mov    ?,WORD PTR ds:0x65a6cbb3
  40ffb1:	aas    
  40ffb2:	jns    0x40ff64
  40ffb4:	aas    
  40ffb5:	sti    
  40ffb6:	or     eax,0x75a082ae
  40ffbb:	fidivr DWORD PTR [edx-0x3f]
  40ffbe:	repz pop eax
  40ffc0:	dec    ebp
  40ffc1:	dec    ebx
  40ffc2:	mov    DWORD PTR [ebx+esi*8-0x6e16c5a9],0xf905f595
  40ffcd:	ss xor eax,0xc98f1139
  40ffd3:	or     DWORD PTR [ebp+0x2d74b02],edi
  40ffd9:	push   ss
  40ffda:	sti    
  40ffdb:	call   0x525865ad
  40ffe0:	add    ch,BYTE PTR [edx+0x63]
  40ffe3:	sbb    dh,BYTE PTR [edi+0x6b]
  40ffe6:	cmp    al,0x56
  40ffe8:	ins    DWORD PTR es:[edi],dx
  40ffe9:	test   al,0xf8
  40ffeb:	add    esi,0x6d1bb087
  40fff1:	inc    esi
  40fff2:	loopne 0x40ff7e
  40fff4:	addr16 (bad) 
  40fff6:	imul   edi,DWORD PTR [eax-0x44],0xe999b1e2
  40fffd:	jle    0x40ffd4
  40ffff:	mov    eax,ds:0xb123a0ca
  410004:	jp     0x40ffe0
  410006:	jmp    0x40ff93
  410008:	mov    ecx,0xd82864d0
  41000d:	dec    ebx
  41000e:	stos   BYTE PTR es:[edi],al
  41000f:	cdq    
  410010:	inc    esp
  410011:	scas   al,BYTE PTR es:[edi]
  410012:	pop    eax
  410013:	ret    0xc207
  410016:	mov    cl,0x6b
  410018:	retf   0x2cfe
  41001b:	xchg   edi,eax
  41001c:	fsub   QWORD PTR [ebx-0x38]
  41001f:	push   0x38ffd9d6
  410024:	(bad)  [edx+eax*1-0x80]
  410028:	ss dec edx
  41002a:	popf   
  41002b:	jns    0x410009
  41002d:	pop    edi
  41002e:	enter  0x7007,0xca
  410032:	mov    ah,0x51
  410034:	mov    al,ds:0xe1565d71
  410039:	das    
  41003a:	jno    0x40ffeb
  41003c:	enter  0xab99,0xe8
  410040:	jne    0x4100a9
  410042:	pop    ebx
  410043:	xor    al,0xa8
  410045:	adc    al,0x39
  410047:	push   edx
  410048:	pop    esp
  410049:	jnp    0x41003c
  41004b:	sbb    eax,0xa804d30e
  410050:	adc    ah,BYTE PTR [eax+0x51]
  410053:	or     DWORD PTR [eax-0x7ebe061b],ebx
  410059:	mov    cl,0x1c
  41005b:	cmp    al,0x79
  41005d:	push   edx
  41005e:	lods   eax,DWORD PTR ds:[esi]
  41005f:	cmp    DWORD PTR [eax+0x16],ebp
  410062:	arpl   WORD PTR [eax+esi*8],si
  410065:	sub    al,0xa6
  410067:	stos   BYTE PTR es:[edi],al
  410068:	int    0xb8
  41006a:	or     eax,0x3e4f9e47
  41006f:	xor    dl,BYTE PTR [ebx+0x2fc30224]
  410075:	mov    bl,0x6b
  410077:	(bad)  
  410078:	cs adc al,0xb9
  41007b:	loope  0x410016
  41007d:	and    al,0xc2
  41007f:	mov    edi,0x196b2b14
  410084:	xchg   ecx,eax
  410085:	or     al,0x56
  410087:	mov    al,ds:0x4e1b8a88
  41008c:	jbe    0x4100ce
  41008e:	daa    
  41008f:	aam    0xef
  410091:	leave  
  410092:	mov    ah,0x18
  410094:	cmp    BYTE PTR [ebx+edx*2-0x5a1e7667],bl
  41009b:	cld    
  41009c:	fdivr  QWORD PTR [edx+0x70]
  41009f:	push   ebp
  4100a0:	push   edx
  4100a1:	in     eax,0x2a
  4100a3:	mov    ebx,0xb85dbe72
  4100a8:	add    DWORD PTR [edx+0x8],0x7daf78ab
  4100af:	mov    cl,0x45
  4100b1:	dec    edi
  4100b2:	mov    bl,0x1f
  4100b4:	test   al,0x7e
  4100b6:	mov    eax,ds:0xf4c3c451
  4100bb:	or     dl,BYTE PTR [edi+0x1]
  4100be:	xor    esi,DWORD PTR ds:0x1a5017bd
  4100c4:	pop    edi
  4100c5:	jns    0x410082
  4100c7:	mov    edi,0x6516c381
  4100cc:	xchg   ebx,eax
  4100cd:	push   ebp
  4100ce:	or     DWORD PTR [esi+0x9],esi
  4100d1:	rcl    BYTE PTR [esi+edi*4-0x8],0xdb
  4100d6:	es (bad) 
  4100d8:	scas   al,BYTE PTR es:[edi]
  4100d9:	ja     0x410094
  4100db:	xchg   edx,eax
  4100dc:	adc    al,0x12
  4100de:	fst    QWORD PTR [ebx+0x55957763]
  4100e4:	mov    ds:0x15267ca6,eax
  4100e9:	shl    al,0x87
  4100ec:	aaa    
  4100ed:	cld    
  4100ee:	stos   DWORD PTR es:[edi],eax
  4100ef:	dec    ecx
  4100f0:	popa   
  4100f1:	in     al,dx
  4100f2:	dec    esp
  4100f3:	sbb    eax,0x99790af2
  4100f8:	pop    esi
  4100f9:	enter  0xb8a2,0x49
  4100fd:	les    eax,FWORD PTR [edi]
  4100ff:	pop    edx
  410100:	push   cs
  410101:	xchg   ebp,eax
  410102:	ja     0x410145
  410104:	fadd   DWORD PTR [edx+edx*4]
  410107:	out    0x21,eax
  410109:	into   
  41010a:	cwde   
  41010b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41010c:	xlat   BYTE PTR ds:[ebx]
  41010d:	and    ecx,edi
  41010f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410110:	xchg   edi,eax
  410111:	adc    DWORD PTR [edi],ecx
  410113:	sub    eax,0xc10de403
  410118:	jge    0x410100
  41011a:	sub    DWORD PTR [esi-0x4],0x8972598b
  410121:	ds cwde 
  410123:	pop    edi
  410124:	les    esi,FWORD PTR [edx+0x36]
  410127:	mov    fs,WORD PTR [eax+edx*4+0x2f]
  41012b:	sbb    edi,DWORD PTR [edx-0x7]
  41012e:	sbb    dl,0x48
  410131:	jg     0x4100c5
  410133:	pop    ds
  410134:	paddw  mm6,mm1
  410137:	sbb    eax,0x129fe38
  41013c:	dec    ecx
  41013d:	rol    eax,1
  41013f:	ss mov esi,0xa1ffe1b6
  410145:	inc    esp
  410146:	pop    ss
  410147:	jecxz  0x410105
  410149:	push   cs
  41014a:	xchg   DWORD PTR [ecx],ebp
  41014c:	ror    DWORD PTR [esi+edi*4],1
  41014f:	xchg   esi,eax
  410150:	mov    bl,0xa2
  410152:	lds    ebx,FWORD PTR [esi+0x41d7cca4]
  410158:	(bad)  
  410159:	mov    edx,0x55fa0efe
  41015e:	xchg   ebp,eax
  41015f:	sub    bh,ah
  410161:	ret    
  410162:	and    al,0xc5
  410164:	lahf   
  410165:	jle    0x41016f
  410167:	xor    al,0xdf
  410169:	adc    DWORD PTR [eax],edi
  41016b:	das    
  41016c:	xor    edx,DWORD PTR [edi+ecx*1-0x56d76d49]
  410173:	(bad)  
  410174:	fstp   st(5)
  410176:	xchg   DWORD PTR [edi],ebx
  410178:	xchg   ebp,eax
  410179:	dec    ebp
  41017a:	xchg   esp,eax
  41017b:	sbb    al,ch
  41017d:	aam    0x6e
  41017f:	push   0xffffffd2
  410181:	or     eax,0xa933cb47
  410186:	call   0xf6ce:0x3e317ffc
  41018d:	or     bl,ch
  41018f:	aad    0x1
  410191:	fisttp QWORD PTR [edx+0x60de7195]
  410197:	or     eax,0xcf2b538b
  41019c:	inc    esi
  41019d:	xor    BYTE PTR [eax+edx*8],cl
  4101a0:	xchg   ebx,eax
  4101a1:	test   al,0x82
  4101a3:	es inc esp
  4101a5:	cdq    
  4101a6:	mov    DWORD PTR [ecx+0x2baa6bde],edi
  4101ac:	repz ss xchg ebx,esi
  4101b0:	mov    ds:0x40c8cc52,al
  4101b5:	ins    BYTE PTR es:[edi],dx
  4101b6:	jmp    0x410183
  4101b8:	rol    BYTE PTR [edx-0x56],cl
  4101bb:	and    DWORD PTR [edi],0xcdf744b7
  4101c1:	xchg   ebx,eax
  4101c2:	ret    
  4101c3:	aaa    
  4101c4:	retf   
  4101c5:	jl     0x41015e
  4101c7:	pusha  
  4101c8:	rcl    BYTE PTR [ebp-0x78c2b04f],0x72
  4101cf:	mov    bh,0xbb
  4101d1:	and    edi,ebp
  4101d3:	clc    
  4101d4:	or     DWORD PTR [esi-0x3f],esi
  4101d7:	mov    bl,0x5f
  4101d9:	mov    edi,0x7012e93e
  4101de:	sahf   
  4101df:	loop   0x41020b
  4101e1:	inc    eax
  4101e2:	add    al,0x15
  4101e4:	pop    ebx
  4101e5:	dec    eax
  4101e6:	or     ch,BYTE PTR [edi-0x66]
  4101e9:	icebp  
  4101ea:	xchg   DWORD PTR [edx+0x3ed4317f],ebx
  4101f0:	repz test eax,0x98f28ec1
  4101f6:	mov    fs,eax
  4101f8:	sbb    DWORD PTR [ecx*4-0x311bb5e9],ebp
  4101ff:	out    0xad,al
  410201:	jmp    0x5b66:0x26a780c5
  410208:	in     al,0xfd
  41020a:	fdivr  QWORD PTR [ebp+0x30]
  41020d:	sbb    al,0xa
  41020f:	jg     0x41023f
  410211:	push   edi
  410212:	sub    al,0xeb
  410214:	imul   ebp,DWORD PTR [edi+0x6e82fd60],0xffffffb6
  41021b:	xlat   BYTE PTR ds:[ebx]
  41021c:	imul   eax,DWORD PTR [ecx],0x9129cea2
  410222:	mov    ecx,0xefa44ea1
  410227:	mov    DWORD PTR [ebp-0x3b7d2efe],edi
  41022d:	mov    ebp,0xf671caed
  410232:	adc    eax,DWORD PTR [ebp+0x1a61e068]
  410238:	xor    eax,0x9baee469
  41023d:	jmp    0x5c75:0x83861b32
  410244:	rcr    bl,cl
  410246:	std    
  410247:	sub    BYTE PTR [ebp-0x52608e81],al
  41024d:	ss sub al,0x75
  410250:	xchg   edi,eax
  410251:	adc    eax,0x5a0956ac
  410256:	nop
  410257:	nop
  410258:	into   
  410259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41025a:	cli    
  41025b:	je     0x41022b
  41025d:	(bad)
  410260:	mov    edi,0xf07d99a5
  410265:	rol    BYTE PTR [ebx-0x62b85fc5],0xcd
  41026c:	fsubr  DWORD PTR [eax]
  41026e:	test   DWORD PTR [eax+eiz*4],esp
  410271:	xor    esp,ebp
  410273:	jo     0x4102d9
  410275:	cmp    ebp,ecx
  410277:	xchg   ecx,eax
  410278:	push   ds
  410279:	ret    
  41027a:	scas   eax,DWORD PTR es:[edi]
  41027b:	inc    edi
  41027c:	cmp    eax,DWORD PTR [ebx]
  41027e:	push   DWORD PTR [ebp+0x51d264ce]
  410284:	mov    ebp,0xc3da56
  410289:	cmp    DWORD PTR ds:0x5290ee5e,ecx
  41028f:	fsub   st(6),st
  410291:	(bad)  
  410292:	xor    BYTE PTR [eax+0xd491a82],ch
  410298:	push   0x43
  41029a:	pop    ds
  41029b:	ret    0x45fc
  41029e:	push   es
  41029f:	stc    
  4102a0:	lods   eax,DWORD PTR ds:[esi]
  4102a1:	cmp    al,0xe1
  4102a3:	(bad)  
  4102a5:	nop
  4102a6:	mov    esi,0xd69ae9db
  4102ab:	lea    ebp,[ecx-0x62]
  4102ae:	mov    ecx,0x6eb94745
  4102b3:	xchg   cl,dl
  4102b5:	rcl    DWORD PTR [edi],0xa5
  4102b8:	test   DWORD PTR [ecx+edi*4],esp
  4102bb:	lods   eax,DWORD PTR ds:[esi]
  4102bc:	pop    edx
  4102bd:	es popa 
  4102bf:	fild   QWORD PTR [ebx]
  4102c1:	push   ss
  4102c2:	bound  edi,QWORD PTR [esi]
  4102c4:	xchg   ebx,eax
  4102c5:	mov    al,0xae
  4102c7:	fisttp DWORD PTR [esi]
  4102c9:	add    BYTE PTR [esp+ebx*4+0x13460b11],dh
  4102d0:	mov    al,ds:0xae4cb8b0
  4102d5:	xchg   DWORD PTR ds:0xa6fa1a12,ebx
  4102dc:	fwait
  4102dd:	push   esp
  4102de:	js     0x4102a2
  4102e0:	and    DWORD PTR [edx-0x68],ecx
  4102e3:	iret   
  4102e4:	adc    eax,0x660a2ea3
  4102e9:	mov    ebp,0x45577cf5
  4102ee:	dec    esi
  4102ef:	test   eax,0x8e841aac
  4102f4:	gs aam 0x6f
  4102f7:	inc    edi
  4102f8:	ret    
  4102f9:	hlt    
  4102fa:	pop    DWORD PTR [edi+0x40fe2fdd]
  410300:	daa    
  410301:	push   ecx
  410302:	jne    0x410288
  410304:	dec    esi
  410305:	(bad)  
  410307:	shl    cl,1
  410309:	lock jle 0x41036a
  41030c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41030d:	xor    eax,ecx
  41030f:	dec    eax
  410310:	add    DWORD PTR [ecx+0x2c],esp
  410313:	sti    
  410314:	or     DWORD PTR [ebp-0x546d221f],eax
  41031a:	std    
  41031b:	adc    bh,al
  41031d:	jp     0x41034f
  41031f:	pop    edi
  410320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410321:	lahf   
  410322:	dec    esi
  410323:	(bad)  
  410324:	aaa    
  410325:	dec    ecx
  410326:	xchg   BYTE PTR [ebp+0x8],cl
  410329:	rol    ebx,cl
  41032b:	add    DWORD PTR [edi-0x6b],edx
  41032e:	mov    esi,0xec0f22ec
  410333:	dec    edx
  410334:	mov    eax,0xe45a10cf
  410339:	data16 int 0x6a
  41033c:	adc    al,0x1
  41033e:	xchg   esp,eax
  41033f:	jo     0x41039d
  410341:	stos   DWORD PTR es:[edi],eax
  410342:	in     al,0xf9
  410344:	sub    DWORD PTR [edi-0x2008efe6],eax
  41034a:	imul   ebx,DWORD PTR [ecx-0xa],0x5f98934c
  410351:	mov    ds,ecx
  410353:	call   0x9f8e:0x517d4df5
  41035a:	sub    DWORD PTR [ebx+0x59f9d103],esi
  410360:	sahf   
  410361:	out    dx,al
  410362:	jne    0x410305
  410364:	enter  0x7d88,0xd3
  410368:	xchg   ebx,eax
  410369:	inc    esp
  41036a:	ficom  WORD PTR [ebx+0x33]
  41036d:	lahf   
  41036e:	xor    al,0x61
  410370:	sub    eax,0xf90d2a8a
  410375:	lahf   
  410376:	push   edi
  410377:	and    esp,DWORD PTR [eax+eax*8-0x71323b0d]
  41037e:	pop    edx
  41037f:	sub    al,0x74
  410381:	add    al,0x88
  410383:	mov    ds:0xbe18f80f,al
  410388:	jmp    0x410315
  41038a:	fidiv  WORD PTR [esi-0x70]
  41038d:	and    eax,0x669b077b
  410392:	ds in  eax,0xba
  410395:	bound  esp,QWORD PTR [edx]
  410397:	cmc    
  410398:	ss imul esi,eax,0xf8e77205
  41039f:	mov    ch,0x8f
  4103a1:	push   cs
  4103a2:	pop    ebp
  4103a3:	push   eax
  4103a4:	jmp    0x29fbe271
  4103a9:	and    ebx,DWORD PTR [ecx]
  4103ab:	pop    esp
  4103ac:	cmp    eax,0x5dd9b09b
  4103b1:	imul   ebx,DWORD PTR [edx-0x2b904b67],0xffffffd7
  4103b8:	or     ah,BYTE PTR [eax]
  4103ba:	and    BYTE PTR [eax],0x15
  4103bd:	dec    ecx
  4103be:	fimul  WORD PTR [ebp-0x55]
  4103c1:	dec    ebp
  4103c2:	mov    ebx,0x5b49695d
  4103c7:	call   0x37712dc8
  4103cc:	inc    eax
  4103cd:	pusha  
  4103ce:	aaa    
  4103cf:	imul   ebx,ecx,0xffffff94
  4103d2:	ins    DWORD PTR es:[edi],dx
  4103d3:	adc    BYTE PTR [ebx+ecx*8+0x4],al
  4103d7:	fs retf 0xdead
  4103db:	out    0xf1,al
  4103dd:	stos   DWORD PTR es:[edi],eax
  4103de:	sub    eax,0xf0a261ec
  4103e3:	out    dx,al
  4103e4:	inc    ebp
  4103e5:	and    al,0x8e
  4103e7:	ficom  DWORD PTR [edx+edi*2-0x41c2e3a9]
  4103ee:	ret    0x3717
  4103f1:	test   BYTE PTR [eax-0x7cf538f3],0x2c
  4103f8:	sbb    eax,ebx
  4103fa:	(bad)  
  4103fb:	adc    eax,0x602256a9
  410400:	imul   eax,DWORD PTR [ebx],0xb07f87c1
  410406:	cmp    cl,ah
  410408:	in     al,0x8f
  41040a:	inc    ebx
  41040b:	hlt    
  41040c:	mov    ds:0xbfe55381,al
  410411:	mov    esi,0x820eb75c
  410416:	int3   
  410417:	lds    edi,FWORD PTR [ebx]
  410419:	stos   BYTE PTR es:[edi],al
  41041a:	mov    al,0xb
  41041c:	repz aaa 
  41041e:	xchg   esp,eax
  41041f:	xchg   BYTE PTR [ebp+0x36ddaf2e],ah
  410425:	rcr    DWORD PTR [edx-0x12e8fa15],0x49
  41042c:	xchg   esi,eax
  41042d:	lock sub dl,dh
  410430:	aas    
  410431:	imul   ebx,DWORD PTR [ebx+0x740a594c],0x219e1e2e
  41043b:	cld    
  41043c:	add    al,0xb
  41043e:	retf   0xc882
  410441:	sbb    eax,0x4506f2c9
  410446:	mov    edi,0x3b98652b
  41044b:	pop    ecx
  41044c:	xchg   ebx,eax
  41044d:	mov    ds:0xde6042d1,al
  410452:	inc    edx
  410453:	nop
  410454:	jnp    0x410433
  410456:	inc    esi
  410457:	jae    0x41049d
  410459:	jb     0x410411
  41045b:	add    BYTE PTR [edx],0x0
  41045e:	jle    0x4104b2
  410460:	mov    dh,0x0
  410462:	neg    DWORD PTR [ebp-0x60]
  410465:	jecxz  0x410406
  410467:	xor    al,0x99
  410469:	ficomp WORD PTR ds:0x556ae546
  41046f:	xchg   bl,al
  410471:	dec    ecx
  410472:	and    esp,0x1
  410475:	pop    edx
  410476:	test   eax,0xf6cd06fc
  41047b:	imul   ebx,DWORD PTR [esi-0x153ec7aa],0x7b
  410482:	pop    ds
  410483:	scas   al,BYTE PTR es:[edi]
  410484:	retf   0xbd2c
  410487:	add    eax,0xa28ce370
  41048c:	mov    cl,BYTE PTR [ebx]
  41048e:	adc    BYTE PTR [eax+esi*8],ch
  410491:	dec    ebp
  410492:	dec    edi
  410493:	sbb    ecx,DWORD PTR [ecx-0x12]
  410496:	inc    ebp
  410497:	adc    al,0xc1
  410499:	addr16 dec edx
  41049b:	adc    BYTE PTR [edi-0x7b071265],ah
  4104a1:	(bad)  
  4104a2:	test   eax,0xd3fffe35
  4104a7:	cwde   
  4104a8:	mov    esi,DWORD PTR [ecx-0x80]
  4104ab:	mov    ecx,0x809dce66
  4104b0:	test   al,cl
  4104b2:	scas   eax,DWORD PTR es:[edi]
  4104b3:	mov    ds:0xbb013040,eax
  4104b8:	cmp    al,0x44
  4104ba:	jns    0x4104a2
  4104bc:	pop    edx
  4104bd:	xor    BYTE PTR [ebx+esi*8],al
  4104c0:	rol    DWORD PTR ds:0xbc7e09fa,0xc8
  4104c7:	shl    DWORD PTR [ebp-0x65],1
  4104ca:	push   eax
  4104cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104cc:	jns    0x410499
  4104ce:	in     al,0x76
  4104d0:	clc    
  4104d1:	push   edi
  4104d2:	sub    eax,0x685260f3
  4104d7:	push   0x3e
  4104d9:	inc    esp
  4104da:	push   ss
  4104db:	and    BYTE PTR [eax],ah
  4104dd:	int3   
  4104de:	cmp    esi,edi
  4104e0:	push   ecx
  4104e1:	jmp    0xb7b8:0xc1d83085
  4104e8:	jg     0x4104c3
  4104ea:	dec    edx
  4104eb:	or     BYTE PTR [eax],ah
  4104ed:	(bad)  
  4104ee:	idiv   bh
  4104f0:	dec    ebx
  4104f1:	addr16 mov ecx,0xc654af43
  4104f7:	test   DWORD PTR ds:0x1da440db,esp
  4104fd:	repz aaa 
  4104ff:	jae    0x4104b6
  410501:	ds push ebp
  410503:	or     BYTE PTR [ebx],ch
  410505:	sahf   
  410506:	ja     0x410501
  410508:	lock xchg DWORD PTR [edx-0x277cf08d],edx
  41050f:	shl    BYTE PTR [eax+edx*2-0x26],0xf7
  410514:	ret    0x32c2
  410517:	pop    eax
  410518:	(bad)  [edi+ebx*8-0x12]
  41051c:	dec    esi
  41051d:	pop    edi
  41051e:	lods   al,BYTE PTR ds:[esi]
  41051f:	je     0x41055c
  410521:	adc    edx,DWORD PTR [eax+eax*1-0x4e]
  410525:	pop    edi
  410526:	mov    dh,BYTE PTR [esi+0xb]
  410529:	fsubr  QWORD PTR [ecx]
  41052b:	retf   0xd5c1
  41052e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410530:	mov    dl,0xd6
  410532:	sub    al,0xcc
  410534:	dec    esi
  410535:	div    BYTE PTR [edi]
  410537:	adc    DWORD PTR ds:0xb4cc759d,eax
  41053d:	cli    
  41053e:	jp     0x4104ee
  410540:	mov    eax,0x1127e53f
  410545:	inc    ebp
  410546:	sti    
  410547:	jl     0x410570
  410549:	mov    bl,0xe8
  41054b:	xchg   edi,eax
  41054c:	(bad)  
  41054d:	and    eax,0xb35f8e4b
  410552:	ret    0xbb05
  410555:	adc    DWORD PTR [edi-0x52],ecx
  410558:	(bad)  
  410559:	jae    0x4105c4
  41055b:	sbb    al,0xe8
  41055d:	stc    
  41055e:	lods   al,BYTE PTR ds:[esi]
  41055f:	jmp    0x3d76a80e
  410564:	mov    dl,0x14
  410566:	xchg   ebp,eax
  410567:	(bad)  
  410569:	icebp  
  41056a:	cmp    al,0x58
  41056c:	mov    ?,WORD PTR [eax+0x2c0f786b]
  410572:	(bad)  
  410573:	dec    esi
  410574:	dec    ecx
  410575:	push   0xffffff8d
  410577:	pop    ss
  410578:	icebp  
  410579:	pop    ds
  41057a:	fwait
  41057b:	adc    eax,DWORD PTR [ecx+0x43]
  41057e:	push   DWORD PTR ds:0x3bdf766c
  410584:	loop   0x4105c5
  410586:	dec    ebx
  410587:	scas   eax,DWORD PTR es:[edi]
  410588:	add    eax,0x9b34e4f5
  41058d:	fisub  DWORD PTR [ebp-0x26da7e1d]
  410593:	loop   0x41052b
  410595:	xor    ch,BYTE PTR [edx-0x710e7138]
  41059b:	test   BYTE PTR [ecx+0xb],ah
  41059e:	and    DWORD PTR [eax],0x46
  4105a1:	int3   
  4105a2:	lea    ebx,[esi+0xe]
  4105a5:	call   0xb471:0x88122713
  4105ac:	rcr    DWORD PTR [eax-0x18ee2419],0x26
  4105b3:	xor    esi,DWORD PTR [edi+0x6f]
  4105b6:	pop    edx
  4105b7:	retf   
  4105b8:	or     al,0x72
  4105ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105bb:	ret    0x31d1
  4105be:	test   al,0x25
  4105c0:	call   0x9805:0x1be566bb
  4105c7:	mov    esi,0x3ffc007e
  4105cc:	pop    ecx
  4105cd:	or     edi,ecx
  4105cf:	xchg   edx,eax
  4105d0:	inc    ecx
  4105d1:	cs std 
  4105d3:	fcom   st(6)
  4105d5:	and    BYTE PTR [ecx],ah
  4105d7:	out    dx,al
  4105d8:	sbb    dl,al
  4105da:	fisubr WORD PTR ss:[edi]
  4105dd:	aam    0xf7
  4105df:	xlat   BYTE PTR ds:[ebx]
  4105e0:	(bad)  
  4105e1:	int    0x96
  4105e3:	enter  0xec8,0xe1
  4105e7:	push   cs
  4105e8:	loopne 0x41057c
  4105ea:	jns    0x4105a3
  4105ec:	mov    eax,0x17d5c412
  4105f1:	xor    BYTE PTR [eax+0x4515a13d],ch
  4105f7:	ins    BYTE PTR es:[edi],dx
  4105f8:	ds cs (bad) 
  4105fb:	cmc    
  4105fc:	fstp   DWORD PTR [eax+edi*4-0x62]
  410600:	repnz mov eax,ds:0x140cdc1c
  410606:	adc    ecx,esp
  410608:	pop    ebp
  410609:	imul   edx,DWORD PTR [esi+eax*4+0x15ce0025],0xaeb4eab0
  410614:	(bad)
  410618:	adc    al,0x4f
  41061a:	jno    0x410614
  41061c:	(bad)  
  41061d:	pop    ebp
  41061e:	lods   al,BYTE PTR ds:[esi]
  41061f:	jnp    0x410695
  410621:	mov    esp,0x4c7f10f4
  410626:	pushf  
  410627:	sbb    ah,al
  410629:	imul   ecx,edx,0x17a14cc0
  41062f:	xchg   ebp,eax
  410630:	shl    BYTE PTR [eax],cl
  410632:	pop    ecx
  410633:	shr    BYTE PTR [ecx+0x38482e01],0x7e
  41063a:	mov    eax,ds:0x99d5d02a
  41063f:	sar    DWORD PTR [ebx-0xd02861],1
  410645:	ds pop es
  410647:	es (bad) 
  410649:	push   cs
  41064a:	fs in  al,dx
  41064c:	daa    
  41064d:	scas   eax,DWORD PTR es:[edi]
  41064e:	mov    ch,BYTE PTR [ebp-0x6d51f2b3]
  410654:	test   al,0xd4
  410656:	xor    eax,0xabf70cd6
  41065b:	xchg   esp,eax
  41065c:	mov    bl,0x99
  41065e:	(bad)  
  41065f:	jmp    0xab0779e4
  410664:	in     al,0xf
  410666:	sbb    BYTE PTR [edx],ch
  410668:	adc    BYTE PTR ds:0x501eb851,ch
  41066e:	arpl   WORD PTR [esp-0x56687b07],bx
  410675:	xor    DWORD PTR [eax+0x77],0x53f5ecf0
  41067c:	dec    edx
  41067d:	hlt    
  41067e:	jg     0x4106c2
  410680:	stc    
  410681:	dec    ebp
  410682:	pop    ecx
  410683:	cs mov ebp,0x5326b271
  410689:	inc    esp
  41068a:	jg     0x4106c3
  41068c:	ja     0x41066d
  41068e:	fcom   QWORD PTR ds:0xb9377f45
  410694:	xchg   edi,eax
  410695:	and    DWORD PTR [ecx],edx
  410697:	push   cs
  410698:	xchg   esp,eax
  410699:	add    ebp,ebx
  41069b:	and    al,0xf3
  41069d:	mov    ds:0xf0ca0d2a,eax
  4106a2:	clc    
  4106a3:	cs mov esi,0x86d232f0
  4106a9:	or     ebx,0xf3523252
  4106af:	pop    ebx
  4106b0:	jmp    0x1560:0xc18529b7
  4106b7:	mov    dh,0xd4
  4106b9:	test   DWORD PTR [ecx],edx
  4106bb:	pop    esp
  4106bc:	adc    ebp,DWORD PTR [ebx]
  4106be:	pop    ecx
  4106bf:	daa    
  4106c0:	adc    edx,edx
  4106c2:	fwait
  4106c3:	push   eax
  4106c4:	xchg   ecx,eax
  4106c5:	call   0x7a581139
  4106ca:	daa    
  4106cb:	jne    0x41066a
  4106cd:	xlat   BYTE PTR ds:[bx]
  4106cf:	jg     0x410679
  4106d1:	jge    0x410723
  4106d3:	and    BYTE PTR [eax+0x7dcd55c2],ch
  4106d9:	mov    al,ds:0x73974aca
  4106de:	sbb    BYTE PTR [ebx-0x67],0xaa
  4106e2:	fidiv  DWORD PTR [ebx+0x8955a2]
  4106e8:	fwait
  4106e9:	push   cs
  4106ea:	add    ah,dl
  4106ec:	test   BYTE PTR [edx+0x4d],bl
  4106ef:	imul   ebp,DWORD PTR [di-0xa0b],0x2dc6af4c
  4106f8:	iret   
  4106f9:	stos   DWORD PTR es:[edi],eax
  4106fa:	fiadd  DWORD PTR [ebx+0x51]
  4106fd:	fwait
  4106fe:	stc    
  4106ff:	aas    
  410700:	inc    ebx
  410701:	jmp    DWORD PTR ds:0xf1d8a7e2
  410707:	jno    0x410698
  410709:	inc    ecx
  41070a:	cmp    al,0x69
  41070c:	outs   dx,BYTE PTR ds:[esi]
  41070d:	xor    ecx,DWORD PTR [edx+edi*1-0x4641389b]
  410714:	or     esi,DWORD PTR [ebp+ecx*4-0x6e5dc80d]
  41071b:	(bad)  
  41071c:	sub    ah,BYTE PTR ds:0xdf576748
  410722:	data16 mov bh,0x72
  410725:	aam    0xb2
  410727:	push   0x839db5e7
  41072c:	add    al,0x1
  41072e:	cmc    
  41072f:	or     edi,esi
  410731:	icebp  
  410732:	pushf  
  410733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410734:	push   ecx
  410735:	push   es
  410736:	pop    edx
  410737:	xchg   ebp,eax
  410738:	adc    al,0x94
  41073a:	dec    esi
  41073b:	mov    dh,0xa9
  41073d:	jno    0x4106d3
  41073f:	add    eax,0xf7d72e33
  410744:	sbb    al,0x87
  410746:	pop    es
  410747:	dec    ecx
  410748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410749:	adc    al,0xb3
  41074b:	daa    
  41074c:	push   0xef446071
  410751:	ins    BYTE PTR es:[edi],dx
  410752:	sbb    eax,0x23d34293
  410757:	sbb    DWORD PTR [ecx-0x4e],0x30
  41075b:	inc    edx
  41075c:	push   ds
  41075d:	mov    cl,dh
  41075f:	rcl    BYTE PTR [edi+0x77cfe66],cl
  410765:	aad    0x4c
  410767:	push   ds
  410768:	mov    al,0x71
  41076a:	xor    eax,0xf61bfc4f
  41076f:	lock div esi
  410772:	pop    edx
  410773:	shl    BYTE PTR [ebx+0x26],0xbe
  410777:	xor    DWORD PTR [ecx-0x2c],ecx
  41077a:	cmp    dh,ch
  41077c:	dec    ebp
  41077d:	mov    edi,0x6113d1f
  410782:	cs cmc 
  410784:	sbb    eax,0xe7f8eadc
  410789:	ja     0x4107e3
  41078b:	xchg   ebx,eax
  41078c:	push   ecx
  41078d:	dec    ebp
  41078e:	test   BYTE PTR [edx],ch
  410790:	outs   dx,BYTE PTR ds:[esi]
  410791:	mov    dl,0xfa
  410793:	ins    BYTE PTR es:[edi],dx
  410794:	movnti DWORD PTR ds:0x801a4fdc,ecx
  41079b:	outs   dx,BYTE PTR gs:[esi]
  41079d:	sub    eax,DWORD PTR [ebx]
  41079f:	loop   0x410753
  4107a1:	mov    ch,0x67
  4107a3:	add    al,BYTE PTR [ebx+0x52d495d5]
  4107a9:	rcr    cl,0x28
  4107ac:	pop    edi
  4107ad:	jge    0x410750
  4107af:	jns    0x41075d
  4107b1:	es xchg edi,eax
  4107b3:	aas    
  4107b4:	ins    BYTE PTR es:[edi],dx
  4107b5:	out    dx,al
  4107b6:	mov    ?,ecx
  4107b8:	push   ecx
  4107b9:	fidivr DWORD PTR [esi]
  4107bb:	pop    edx
  4107bc:	or     bh,BYTE PTR [eax+0x17280c1]
  4107c2:	das    
  4107c3:	sub    eax,0x4382f50e
  4107c8:	test   BYTE PTR [edx],dl
  4107ca:	and    al,0xfc
  4107cc:	test   al,0xf5
  4107ce:	lods   al,BYTE PTR ds:[esi]
  4107cf:	leave  
  4107d0:	sbb    DWORD PTR [eax-0x4b],ebp
  4107d3:	ds clc 
  4107d5:	rcr    DWORD PTR fs:0x2deb8a7e,1
  4107dc:	test   ecx,0x46e97d77
  4107e2:	inc    ecx
  4107e3:	mov    bl,0xc9
  4107e5:	or     al,0x44
  4107e7:	lea    ebx,[ebx+edx*8-0x5294b738]
  4107ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107ef:	daa    
  4107f0:	dec    edx
  4107f1:	inc    eax
  4107f2:	mov    dh,dh
  4107f4:	outs   dx,DWORD PTR ds:[esi]
  4107f5:	mov    bl,0x7a
  4107f7:	mov    dl,0x6b
  4107f9:	arpl   WORD PTR [esp+ebx*1],bx
  4107fc:	mov    DWORD PTR [ecx+ebx*8],esi
  4107ff:	pop    ss
  410800:	adc    al,0xbf
  410802:	xor    BYTE PTR [edx-0xb],bh
  410805:	mov    al,ds:0x96782d14
  41080a:	test   eax,0xbbc44cbb
  41080f:	rcl    ch,0xfb
  410812:	mov    ebp,0x95b2a875
  410817:	clc    
  410818:	or     eax,0xfc7f8882
  41081d:	repnz pop edi
  41081f:	pop    edx
  410820:	shl    BYTE PTR [eax],0x3a
  410823:	mov    dh,0x1a
  410825:	lods   eax,DWORD PTR ds:[esi]
  410826:	mov    eax,ds:0x473b17e9
  41082b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41082c:	mov    al,ds:0x556e6119
  410831:	popf   
  410832:	sahf   
  410833:	sahf   
  410834:	mov    ebx,0x54bb9e19
  410839:	(bad)  
  41083a:	stc    
  41083b:	in     eax,dx
  41083c:	pushf  
  41083d:	jmp    0x410841
  41083f:	test   al,0x27
  410841:	fnsave [eax-0x4a]
  410844:	int3   
  410845:	mov    ah,0x28
  410847:	mov    ah,0x5
  410849:	and    eax,esp
  41084b:	add    esi,DWORD PTR [ebx+edx*4+0x8]
  41084f:	sbb    edx,DWORD PTR [esi-0x2f684202]
  410855:	pop    ebx
  410856:	adc    edi,DWORD PTR [edi]
  410858:	sbb    eax,0x5fda3fdd
  41085d:	jns    0x410893
  41085f:	xchg   BYTE PTR [edx+0x380e57ed],ch
  410865:	xchg   ebp,eax
  410866:	int3   
  410867:	leave  
  410868:	int    0x8a
  41086a:	sub    ebx,DWORD PTR [edi-0x28c8ce05]
  410870:	(bad)  
  410871:	lock jb 0x410848
  410874:	sub    al,bl
  410876:	mov    dl,0xfb
  410878:	push   ecx
  410879:	dec    ebx
  41087a:	mov    bh,0x5a
  41087c:	shl    WORD PTR [eax+0x7d6b88b],0xc
  410884:	fwait
  410885:	lahf   
  410886:	jg     0x4108f3
  410888:	ror    BYTE PTR [edx],1
  41088a:	or     ecx,DWORD PTR [ecx+0x5a934ca0]
  410890:	inc    edi
  410891:	pop    ds
  410892:	cmc    
  410893:	xor    DWORD PTR [ecx-0x28165d2],edi
  410899:	or     DWORD PTR [eax-0x2d43ac7b],ecx
  41089f:	cmp    bh,cl
  4108a1:	jl     0x4108aa
  4108a3:	div    DWORD PTR es:[eax-0x9bb3519]
  4108aa:	arpl   di,bp
  4108ac:	scas   eax,DWORD PTR es:[edi]
  4108ad:	jge    0x41087c
  4108af:	fcom   QWORD PTR [ecx]
  4108b1:	(bad)  
  4108b2:	clc    
  4108b3:	jle    0x41092e
  4108b5:	inc    eax
  4108b6:	fdivr  st(6),st
  4108b8:	adc    DWORD PTR [edx-0x27775d25],eax
  4108be:	sub    esi,esi
  4108c0:	cld    
  4108c1:	sbb    dl,BYTE PTR ds:0x29696290
  4108c7:	jbe    0x41089f
  4108c9:	jmp    0x4108e3
  4108cb:	inc    esp
  4108cc:	cli    
  4108cd:	inc    ebp
  4108ce:	fwait
  4108cf:	pop    edx
  4108d0:	test   DWORD PTR [ecx],edi
  4108d2:	xchg   cl,dh
  4108d4:	or     al,0x47
  4108d6:	jae    0x4108d1
  4108d8:	jmp    0x410941
  4108da:	sub    edx,DWORD PTR [ebx+0x578e8f88]
  4108e0:	int    0x79
  4108e2:	push   0x75
  4108e4:	stos   DWORD PTR es:[edi],eax
  4108e5:	fs retf 
  4108e7:	pop    edi
  4108e8:	scas   eax,DWORD PTR es:[edi]
  4108e9:	jp     0x410906
  4108eb:	jmp    0xb040:0x1e0f6159
  4108f2:	jo     0x410953
  4108f4:	jbe    0x4108b5
  4108f6:	lods   al,BYTE PTR ds:[esi]
  4108f7:	mov    ss,WORD PTR [esi]
  4108f9:	std    
  4108fa:	loopne 0x4108a6
  4108fc:	mov    ah,0x55
  4108fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108ff:	sbb    esi,DWORD PTR [esi+0x2e]
  410902:	mov    al,ds:0x97ecd1a0
  410908:	fnsave [edx+0x1b]
  41090b:	aam    0xf0
  41090d:	xchg   esp,eax
  41090e:	jg     0x41098f
  410910:	and    eax,0xb0b84d28
  410915:	daa    
  410916:	inc    ecx
  410917:	inc    edi
  410918:	loopne 0x410932
  41091a:	add    esp,DWORD PTR [ecx+0x2bcbb793]
  410920:	ins    DWORD PTR es:[edi],dx
  410921:	sbb    DWORD PTR [ebp+0x26],esp
  410924:	add    DWORD PTR [edi-0x618c20ff],0x49878e9b
  41092e:	adc    ebx,ebp
  410930:	fmul   QWORD PTR [ecx+0x69c2b707]
  410936:	xchg   esp,eax
  410937:	dec    eax
  410938:	cmc    
  410939:	mov    ds:0x57a6b4af,eax
  41093e:	call   0x4d546b69
  410943:	out    0xa7,eax
  410945:	pop    ds
  410946:	xchg   edi,eax
  410947:	pushf  
  410948:	mov    DWORD PTR [ebp-0x19],ecx
  41094b:	fwait
  41094c:	jnp    0x4109c5
  41094e:	jmp    0xeb2f:0x5ec6808
  410955:	sub    al,0x54
  410957:	cmc    
  410958:	push   0x33975ff0
  41095d:	out    0x83,eax
  41095f:	retf   0xbcb9
  410962:	(bad)
  410967:	xor    ebx,eax
  410969:	mov    bh,cl
  41096b:	repnz pushf 
  41096d:	stos   BYTE PTR es:[edi],al
  41096e:	leave  
  41096f:	xchg   esp,eax
  410970:	leave  
  410971:	mov    ds:0xbb9775e6,al
  410976:	xchg   esp,eax
  410977:	pop    eax
  410978:	(bad)  
  41097a:	and    eax,0xa47c9ea0
  41097f:	xor    eax,ecx
  410981:	pop    ebx
  410982:	mov    fs,WORD PTR [edi+0x7dd84a74]
  410988:	jnp    0x410933
  41098a:	into   
  41098b:	xor    DWORD PTR [ebx-0x15b30d0],esi
  410991:	or     DWORD PTR [esi],ebp
  410993:	test   DWORD PTR [esi-0x2e6c3598],edi
  410999:	dec    esp
  41099a:	lock ret 
  41099c:	inc    esp
  41099d:	ja     0x4109f2
  41099f:	nop
  4109a0:	and    ecx,DWORD PTR [ecx+0x41ef5743]
  4109a6:	sub    edi,DWORD PTR [ebp-0x5cf38bd5]
  4109ac:	addr16 dec esi
  4109ae:	push   eax
  4109af:	mov    ebp,0x80fe2440
  4109b4:	into   
  4109b5:	or     edi,DWORD PTR [ebx]
  4109b7:	fucom  st(7)
  4109b9:	loop   0x4109a5
  4109bb:	pop    ebp
  4109bc:	xor    esp,0x8f54ff51
  4109c2:	ds test al,0xff
  4109c5:	out    0xb0,eax
  4109c7:	sub    eax,0xe9d65e58
  4109cc:	cmp    ebx,DWORD PTR [eax+esi*2+0x46]
  4109d0:	fcom   QWORD PTR [eax-0x391ed565]
  4109d6:	inc    ebp
  4109d7:	stos   DWORD PTR es:[edi],eax
  4109d8:	mov    eax,DWORD PTR [edx+0x19]
  4109db:	inc    edi
  4109dc:	jns    0x4109c7
  4109de:	jl     0x410a4d
  4109e0:	sub    BYTE PTR [eax-0x9972375],0x44
  4109e7:	aaa    
  4109e8:	sub    DWORD PTR [edx+edx*1-0xe5ef2f6],ecx
  4109ef:	scas   al,BYTE PTR es:[edi]
  4109f0:	jb     0x41098a
  4109f2:	mov    bl,0x47
  4109f4:	inc    edx
  4109f5:	mov    al,0xe4
  4109f7:	xchg   edi,eax
  4109f8:	imul   edx,edi,0x1f611498
  4109fe:	aad    0xe9
  410a00:	mov    al,ds:0xf1303e33
  410a05:	clc    
  410a06:	pop    ss
  410a07:	pop    ss
  410a08:	test   esi,esi
  410a0a:	cvtps2pi mm4,QWORD PTR [ecx+0x3b]
  410a0e:	or     eax,DWORD PTR [edx+0x102908]
  410a14:	pop    ss
  410a15:	sub    eax,0xa7158054
  410a1a:	imul   ebp,DWORD PTR [ebx],0x78
  410a1d:	mov    esi,0x76f50cc1
  410a22:	mov    esp,0x783962a7
  410a27:	call   0x153d:0x47fb672d
  410a2e:	pop    es
  410a2f:	out    0x8,eax
  410a31:	push   cs
  410a32:	rcr    edx,cl
  410a34:	mov    ds:0xb5bff34,eax
  410a39:	sub    ah,BYTE PTR [ecx+0x3b3ac68f]
  410a3f:	inc    ebp
  410a40:	mov    bl,0xba
  410a42:	sub    BYTE PTR [esi-0x66],ah
  410a45:	push   esp
  410a46:	daa    
  410a47:	clc    
  410a48:	int3   
  410a49:	mov    esi,0x3b74a968
  410a4e:	mov    ebp,0xddb929e1
  410a53:	shl    DWORD PTR [ebx-0x68],cl
  410a56:	ds clc 
  410a58:	jle    0x410a5a
  410a5a:	or     ebp,DWORD PTR [edx+0x55]
  410a5d:	jne    0x410ab7
  410a5f:	mov    bh,ah
  410a61:	loopne 0x410a79
  410a63:	push   es
  410a64:	cmp    al,0x1c
  410a66:	sub    BYTE PTR [ebp+0x1c296968],dh
  410a6c:	cmp    DWORD PTR [edi-0x7483e70],ecx
  410a72:	xchg   ecx,eax
  410a73:	pop    edi
  410a74:	push   0x4c
  410a76:	addr16 inc esp
  410a78:	retf   0xed3d
  410a7b:	mov    al,0xe9
  410a7d:	mov    ecx,0x771fa6c8
  410a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a83:	mov    al,ds:0xc8d774ba
  410a88:	in     eax,0x88
  410a8a:	add    eax,DWORD PTR [edx+0x7ac5a140]
  410a90:	cmp    ebp,DWORD PTR [ebx+esi*4+0xd]
  410a94:	retf   
  410a95:	fdiv   st(3),st
  410a97:	mov    edx,0xdef4881
  410a9c:	add    ebp,DWORD PTR [edx+edi*2-0x13543859]
  410aa3:	into   
  410aa4:	sti    
  410aa5:	arpl   WORD PTR [edx],ax
  410aa7:	sub    DWORD PTR [edx+0x65],edx
  410aaa:	aaa    
  410aab:	nop
  410aac:	bound  esp,QWORD PTR [ebp-0x100f017d]
  410ab2:	sbb    DWORD PTR [eax+0x76eed8ef],edi
  410ab8:	push   edx
  410ab9:	add    al,al
  410abb:	sub    eax,0xf43a229d
  410ac0:	mov    eax,ds:0xdadf46fe
  410ac5:	add    al,0x74
  410ac7:	fwait
  410ac8:	outs   dx,BYTE PTR ds:[esi]
  410ac9:	or     DWORD PTR [edi],eax
  410acb:	push   0x179fc94d
  410ad0:	mov    dl,0x9e
  410ad2:	nop
  410ad3:	lds    edx,FWORD PTR [esi-0x5]
  410ad6:	in     eax,dx
  410ad7:	ins    BYTE PTR es:[edi],dx
  410ad8:	test   BYTE PTR ss:[edx-0x1b],ah
  410adc:	scas   al,BYTE PTR es:[edi]
  410add:	mov    ds:0x84cb745b,eax
  410ae2:	dec    edi
  410ae3:	mov    ch,0x5b
  410ae5:	dec    ecx
  410ae6:	nop
  410ae7:	dec    edi
  410ae8:	jl     0x410a76
  410aea:	adc    ebx,DWORD PTR [esp+eiz*2+0x229ec572]
  410af1:	outs   dx,DWORD PTR ds:[esi]
  410af2:	js     0x410b6b
  410af4:	les    edi,FWORD PTR [ebx+0x154f9108]
  410afa:	push   edx
  410afb:	mov    DWORD PTR [eax*8+0x78fb7ec5],ebp
  410b02:	sub    al,0x1
  410b04:	fidiv  WORD PTR [esi+0x34]
  410b07:	inc    edi
  410b08:	aaa    
  410b09:	mov    bl,0x98
  410b0b:	mov    bh,0xfc
  410b0d:	fwait
  410b0e:	cli    
  410b0f:	stos   BYTE PTR es:[edi],al
  410b10:	fild   QWORD PTR [esi-0x425d8a5a]
  410b16:	xchg   ebp,eax
  410b17:	or     al,0x70
  410b19:	cmp    dh,bh
  410b1b:	aam    0x8d
  410b1d:	push   ds
  410b1e:	inc    eax
  410b1f:	xchg   edi,eax
  410b20:	jae    0x410aba
  410b22:	repnz push esp
  410b24:	cmp    al,BYTE PTR [edx-0x6970b5f8]
  410b2a:	aaa    
  410b2b:	pop    es
  410b2c:	mov    ebx,ecx
  410b2e:	or     bl,BYTE PTR [eax+0x5c29a71a]
  410b34:	or     eax,0x972de6a0
  410b39:	adc    BYTE PTR [esi+esi*4+0x40],dh
  410b3d:	aaa    
  410b3e:	hlt    
  410b3f:	repz or al,0x92
  410b42:	jbe    0x410b35
  410b44:	sub    esp,DWORD PTR [edx-0x6254c74]
  410b4a:	in     al,0xc1
  410b4c:	jno    0x410b44
  410b4e:	add    eax,0x902e7f9e
  410b53:	sti    
  410b54:	push   edi
  410b55:	fst    DWORD PTR [ecx]
  410b57:	test   al,0x81
  410b59:	cmp    DWORD PTR [eax],esi
  410b5b:	mov    ebx,0xb637f2a7
  410b60:	adc    DWORD PTR [edi],0xeb1043e7
  410b66:	or     dl,bh
  410b68:	pop    edi
  410b69:	push   ebp
  410b6a:	xchg   edx,eax
  410b6b:	int    0x62
  410b6d:	fwait
  410b6e:	cs jecxz 0x410b2b
  410b71:	arpl   si,dx
  410b73:	fcmovu st,st(4)
  410b75:	sar    DWORD PTR [ebx],0xf6
  410b78:	gs popa 
  410b7a:	cli    
  410b7b:	test   al,0x7d
  410b7d:	aam    0x4c
  410b7f:	mov    ch,0xb5
  410b81:	int    0xc6
  410b83:	les    ecx,FWORD PTR ds:0x3d598d3c
  410b89:	push   esi
  410b8a:	xlat   BYTE PTR ds:[ebx]
  410b8b:	inc    ecx
  410b8c:	push   0xffffffac
  410b8e:	adc    eax,ebp
  410b90:	xchg   ebp,eax
  410b91:	pop    edx
  410b92:	jl     0x410bbb
  410b94:	in     eax,dx
  410b95:	push   esi
  410b96:	int3   
  410b97:	xchg   ebp,eax
  410b98:	ss jge 0x410bd3
  410b9b:	mov    ah,0x42
  410b9d:	jecxz  0x410b5d
  410b9f:	aaa    
  410ba0:	mov    ch,0x7b
  410ba2:	xchg   edi,eax
  410ba3:	push   esp
  410ba4:	pop    es
  410ba5:	lds    esi,FWORD PTR [esi+0x16ad4a7d]
  410bab:	fdivr  QWORD PTR [eax]
  410bad:	xchg   BYTE PTR ds:0xc94bf201,dh
  410bb3:	push   ebp
  410bb4:	pop    ds
  410bb5:	popf   
  410bb6:	popf   
  410bb7:	dec    ecx
  410bb8:	arpl   WORD PTR [eax+0x18a68345],ax
  410bbe:	outs   dx,DWORD PTR ds:[esi]
  410bbf:	and    bh,0x92
  410bc2:	push   esp
  410bc3:	dec    ebx
  410bc4:	daa    
  410bc5:	nop
  410bc6:	hlt    
  410bc7:	enter  0xd561,0xe4
  410bcb:	mov    esp,0x2f1a1e40
  410bd0:	sbb    DWORD PTR [ebx],ebx
  410bd2:	or     bh,0xa6
  410bd5:	sub    eax,0xecc7796e
  410bda:	leave  
  410bdb:	addr16 mov eax,0xfb0bf05f
  410be1:	fst    DWORD PTR [ebx]
  410be3:	gs int 0x61
  410be6:	ret    
  410be7:	push   edx
  410be8:	das    
  410be9:	lahf   
  410bea:	mov    DWORD PTR [edi-0x1ffaf0c7],ebx
  410bf0:	inc    edx
  410bf1:	mov    gs,WORD PTR [ebx+eiz*1]
  410bf4:	push   es
  410bf5:	mov    edi,0x4dc60b29
  410bfa:	xor    DWORD PTR [ebp+0x3b1bdd27],0x34
  410c01:	mov    esp,0x25bc7518
  410c06:	scas   al,BYTE PTR es:[edi]
  410c07:	xlat   BYTE PTR ds:[ebx]
  410c08:	nop
  410c09:	pop    edi
  410c0a:	xor    cl,bl
  410c0c:	pop    ss
  410c0d:	inc    ebp
  410c0e:	aas    
  410c0f:	sbb    esi,edx
  410c11:	or     dh,BYTE PTR [esi-0x740c821f]
  410c17:	or     ecx,ebp
  410c19:	ss push ecx
  410c1b:	pop    edi
  410c1c:	xlat   BYTE PTR ds:[ebx]
  410c1d:	mov    ebx,0x3542d9fc
  410c22:	mov    dl,0x43
  410c24:	neg    DWORD PTR [edi]
  410c26:	inc    edx
  410c27:	ror    esi,0x9d
  410c2a:	cmp    eax,DWORD PTR [ebx]
  410c2c:	repnz and DWORD PTR [esp+ebp*2],eax
  410c30:	jmp    0x538ef1d3
  410c35:	(bad)  
  410c36:	jno    0x410c22
  410c38:	sbb    DWORD PTR [ebx+0x359f98a4],0xadfebc0d
  410c42:	sub    DWORD PTR [ecx],edx
  410c44:	sub    BYTE PTR [edi-0xeffa9f2],cl
  410c4a:	lods   eax,DWORD PTR ds:[esi]
  410c4b:	inc    ebp
  410c4c:	inc    esp
  410c4d:	dec    ebx
  410c4e:	push   0x2f
  410c50:	repz rcr ecx,1
  410c53:	(bad)  
  410c54:	push   ss
  410c55:	cld    
  410c56:	dec    ebx
  410c57:	sub    eax,0x7ea91fb3
  410c5c:	mov    ss,WORD PTR [ebx+0x1585c0fb]
  410c62:	(bad)  
  410c63:	jns    0x410c84
  410c65:	xchg   ecx,eax
  410c66:	cli    
  410c67:	fidiv  DWORD PTR [edi-0x18]
  410c6a:	xchg   BYTE PTR [eax],dh
  410c6c:	inc    ebx
  410c6d:	or     esp,DWORD PTR [edi-0x37a8b52f]
  410c73:	in     al,dx
  410c74:	add    BYTE PTR [edx+esi*8+0x88ac6f4],ch
  410c7b:	enter  0x50c3,0xe4
  410c7f:	lds    edx,FWORD PTR [ecx]
  410c81:	mov    ah,0x15
  410c83:	aaa    
  410c84:	cmp    eax,0xefc953ae
  410c89:	bnd jns 0x410cd5
  410c8c:	loope  0x410c1b
  410c8e:	jmp    0x410c6e
  410c90:	add    bh,0x14
  410c93:	add    al,0x94
  410c95:	dec    esi
  410c96:	or     ecx,edi
  410c98:	sahf   
  410c99:	lods   al,BYTE PTR ds:[esi]
  410c9a:	add    ecx,DWORD PTR [ecx*2-0x73f99db8]
  410ca1:	in     al,0xbb
  410ca3:	call   0xfe69bb7
  410ca8:	sub    ecx,DWORD PTR [edi]
  410caa:	in     al,0xc9
  410cac:	add    ebx,edx
  410cae:	push   edx
  410caf:	in     eax,dx
  410cb0:	int    0xb7
  410cb2:	sahf   
  410cb3:	pop    edx
  410cb4:	hlt    
  410cb5:	inc    esi
  410cb6:	pop    es
  410cb7:	push   cs
  410cb8:	outs   dx,DWORD PTR ds:[esi]
  410cb9:	push   0x1f310331
  410cbe:	xchg   esi,edx
  410cc0:	loop   0x410cda
  410cc2:	mov    WORD PTR [ebx-0x530ba4a1],?
  410cc8:	out    0xcf,eax
  410cca:	(bad)  
  410ccb:	sti    
  410ccc:	jecxz  0x410cc6
  410cce:	inc    esi
  410ccf:	push   0x77
  410cd1:	out    dx,eax
  410cd2:	outs   dx,DWORD PTR ds:[esi]
  410cd3:	mov    ds:0xcb8c4d0d,eax
  410cd8:	ret    0xc422
  410cdb:	fcomp  st(1)
  410cde:	push   edi
  410cdf:	push   edi
  410ce0:	arpl   WORD PTR [eax],di
  410ce2:	aas    
  410ce3:	loop   0x410d1f
  410ce5:	bts    DWORD PTR ss:[edx+0x4be6e378],eax
  410ced:	add    ebp,DWORD PTR [ebp-0x55]
  410cf0:	sbb    eax,DWORD PTR [ebp+eiz*2-0x26fa3389]
  410cf7:	or     ch,BYTE PTR [edi+edi*8]
  410cfa:	je     0x410d03
  410cfc:	jo     0x410cf0
  410cfe:	or     ax,WORD PTR ds:0x4b79122c
  410d05:	mov    dl,0x62
  410d07:	std    
  410d08:	ret    0x4e6d
  410d0b:	push   ss
  410d0c:	fild   DWORD PTR ds:0x3d9d3c2a
  410d12:	push   ss
  410d13:	inc    ebx
  410d14:	push   ss
  410d15:	and    bl,BYTE PTR [esi-0x62]
  410d18:	int3   
  410d19:	dec    esp
  410d1a:	(bad)  
  410d1b:	sahf   
  410d1c:	aad    0xe8
  410d1e:	dec    esp
  410d1f:	adc    ecx,DWORD PTR [esp+ebp*2+0x1c]
  410d23:	adc    al,0x95
  410d25:	sbb    DWORD PTR [ebp+0x2a64bb0d],ebp
  410d2b:	enter  0xea58,0xa5
  410d2f:	pop    esi
  410d30:	jne    0x410cbf
  410d32:	stos   DWORD PTR es:[edi],eax
  410d33:	push   cs
  410d34:	pushf  
  410d35:	addr16 in al,dx
  410d37:	imul   edx,DWORD PTR [ecx-0x12],0x9ab379fa
  410d3e:	jge    0x410d7d
  410d40:	push   esp
  410d41:	shl    ecx,1
  410d43:	sbb    DWORD PTR [edx+0x41a2dbf],ecx
  410d49:	xor    BYTE PTR [ebx+0x67698],cl
  410d4f:	sbb    eax,0x4c130662
  410d54:	in     al,0xda
  410d56:	test   al,0xdc
  410d58:	push   ebp
  410d59:	pop    edi
  410d5a:	mov    al,0x6
  410d5c:	test   eax,0x5ac6df8
  410d61:	imul   edx,DWORD PTR [ecx],0xffffff99
  410d64:	imul   esp,DWORD PTR ds:0xf2092474,0xffffffa4
  410d6b:	lods   eax,DWORD PTR ds:[esi]
  410d6c:	add    ax,0xd97a
  410d70:	jecxz  0x410d1f
  410d72:	(bad)  
  410d73:	lea    edi,[ebp-0x5e353a5]
  410d79:	arpl   WORD PTR [ebx+0x7506bd5e],sp
  410d7f:	int3   
  410d80:	dec    ebp
  410d81:	sbb    eax,0x5c41fe7e
  410d86:	xchg   esi,eax
  410d87:	add    eax,0xee09bd41
  410d8c:	mov    dh,0xeb
  410d8e:	sbb    BYTE PTR [esi-0x2bc1d8c3],dl
  410d94:	mov    ebx,DWORD PTR [ebx]
  410d96:	and    eax,0x1eaa4d2b
  410d9b:	push   ebx
  410d9c:	push   edx
  410d9d:	mov    esp,0x9743d986
  410da2:	add    al,0xfc
  410da4:	cdq    
  410da5:	mov    edx,0x2199bf9
  410daa:	in     al,dx
  410dab:	les    ebx,FWORD PTR [eax+0x6125f1e2]
  410db1:	in     eax,0x3b
  410db3:	int3   
  410db4:	inc    edx
  410db5:	retf   0xfd4b
  410db8:	or     BYTE PTR [ebp-0x20],cl
  410dbb:	aam    0x3d
  410dbd:	cmc    
  410dbe:	sub    edx,eax
  410dc0:	cmp    DWORD PTR [edx+0x50],0x9d2b9c94
  410dc7:	jecxz  0x410de9
  410dc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dca:	aam    0x1e
  410dcc:	add    BYTE PTR [edi+0x5f],ah
  410dcf:	loopne 0x410d61
  410dd1:	les    esi,FWORD PTR [ecx+0x78]
  410dd4:	push   ecx
  410dd5:	ret    
  410dd6:	in     eax,0xa2
  410dd8:	pop    ebx
  410dd9:	stc    
  410dda:	pop    ecx
  410ddb:	add    al,0x9d
  410ddd:	mov    edi,0x49911acd
  410de2:	inc    ecx
  410de3:	mov    al,al
  410de5:	shl    BYTE PTR [ebx-0x20],1
  410de8:	xor    ah,al
  410dea:	push   esi
  410deb:	lahf   
  410dec:	cli    
  410ded:	sbb    BYTE PTR [ecx+0x77f8160b],dl
  410df3:	call   0xc36c:0x99d5bd0b
  410dfa:	mov    ds:0x87986218,al
  410dff:	push   ecx
  410e00:	or     BYTE PTR [eax-0x80],0x4
  410e04:	ret    0x82f0
  410e07:	ins    BYTE PTR es:[edi],dx
  410e08:	inc    ebp
  410e09:	hlt    
  410e0a:	fcmovnbe st,st(5)
  410e0c:	loope  0x410dcc
  410e0e:	scas   al,BYTE PTR es:[edi]
  410e0f:	(bad)  
  410e10:	loop   0x410e1d
  410e12:	jno    0x410da7
  410e14:	jns    0x410e4c
  410e16:	adc    eax,0x94d7c0a4
  410e1b:	fsubp  st(1),st
  410e1d:	sub    eax,0x33f60aa0
  410e22:	dec    eax
  410e23:	cmc    
  410e24:	mov    ebx,0x5dbe34da
  410e29:	mov    bh,0x61
  410e2b:	aaa    
  410e2c:	mov    ebx,0xdad5b0c3
  410e31:	das    
  410e32:	cmp    BYTE PTR [eax+ebx*2-0x6e],dh
  410e36:	test   al,0x9e
  410e38:	xor    esp,eax
  410e3a:	popa   
  410e3b:	scas   eax,DWORD PTR es:[edi]
  410e3c:	mov    al,ds:0x4f424001
  410e41:	xor    eax,0xb8bdfbf8
  410e46:	fwait
  410e47:	jno    0x410ddb
  410e49:	mov    cl,dh
  410e4b:	push   0x78
  410e4d:	into   
  410e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e4f:	xor    ch,BYTE PTR [ecx-0xb]
  410e52:	jns    0x410e94
  410e54:	inc    edi
  410e55:	or     DWORD PTR [eax-0x7a4b7c2],ebp
  410e5b:	pop    esi
  410e5c:	retf   0x7ecd
  410e5f:	scas   al,BYTE PTR es:[edi]
  410e60:	push   esp
  410e62:	push   edi
  410e63:	jb     0x410ea5
  410e65:	xchg   ebx,eax
  410e66:	mov    ah,0x38
  410e68:	test   BYTE PTR [eax],cl
  410e6a:	(bad)  
  410e6b:	inc    eax
  410e6c:	and    ebx,DWORD PTR [ebx-0x7598402f]
  410e72:	pavgw  mm3,QWORD PTR [eax-0x73]
  410e76:	sbb    DWORD PTR [edi],eax
  410e78:	sub    esp,ecx
  410e7a:	fmulp  st(6),st
  410e7c:	aad    0xa3
  410e7e:	(bad)  
  410e7f:	scas   al,BYTE PTR es:[edi]
  410e80:	mov    edx,0xa6d7506c
  410e85:	inc    bl
  410e87:	lock push ebx
  410e89:	into   
  410e8a:	sbb    eax,0xc0c6cb4b
  410e8f:	and    eax,0x79a2055f
  410e94:	xor    DWORD PTR [ebx+0x129223a4],0xa8e49756
  410e9e:	or     ah,BYTE PTR [esi]
  410ea0:	xchg   ebx,eax
  410ea1:	stc    
  410ea2:	adc    DWORD PTR [edx*2-0x25cab4ff],esi
  410ea9:	xchg   edi,eax
  410eaa:	sbb    ebx,DWORD PTR [esi]
  410eac:	jb     0x410e9b
  410eae:	cmp    BYTE PTR [ebp+0x35],ah
  410eb1:	rol    esp,0x39
  410eb4:	mov    WORD PTR [eax],?
  410eb6:	inc    ebp
  410eb7:	push   edx
  410eb8:	sti    
  410eb9:	mov    ds:0x1cc91513,eax
  410ebe:	fs repnz cmp al,0x2f
  410ec2:	mov    ebx,0xfbad62e6
  410ec7:	out    0xb2,eax
  410ec9:	fadd   QWORD PTR [ebx+0x10]
  410ecc:	push   esp
  410ecd:	rcl    DWORD PTR ds:0xda88050e,0x8c
  410ed4:	jl     0x410f38
  410ed6:	std    
  410ed7:	arpl   WORD PTR [ecx-0x77b9b171],bx
  410edd:	xor    bh,BYTE PTR [edx]
  410edf:	sti    
  410ee0:	jp     0x410f32
  410ee2:	mov    fs:0x312d2f5,eax
  410ee8:	shl    BYTE PTR [ecx+0x3ea47acc],cl
  410eee:	mov    edx,0x5cdf1e84
  410ef3:	js     0x410f17
  410ef5:	hlt    
  410ef6:	out    dx,al
  410ef7:	leave  
  410ef8:	add    DWORD PTR [edx],0xbeb7b28a
  410efe:	sub    eax,0xe5f5c38
  410f03:	ja     0x410f07
  410f05:	cwde   
  410f06:	out    dx,al
  410f07:	push   0x5508b754
  410f0c:	jo     0x410f80
  410f0e:	test   al,0xa4
  410f10:	mov    ch,0x34
  410f12:	loope  0x410f1b
  410f14:	daa    
  410f15:	inc    esp
  410f16:	loop   0x410f67
  410f18:	stos   DWORD PTR es:[edi],eax
  410f19:	adc    edi,eax
  410f1b:	lea    ecx,[ebp-0xf]
  410f1e:	aaa    
  410f1f:	lahf   
  410f20:	pop    ds
  410f21:	inc    edx
  410f22:	nop    DWORD PTR ds:0xf36b28ba
  410f29:	dec    eax
  410f2a:	push   esp
  410f2b:	arpl   si,cx
  410f2d:	xor    DWORD PTR [edi+0x2bf03dd3],0x6827d5fd
  410f37:	push   ebp
  410f38:	fxtract 
  410f3a:	xchg   DWORD PTR [esi-0x58],ebp
  410f3d:	fs fcmovbe st,st(3)
  410f40:	test   eax,0x5a8a4368
  410f45:	pop    esi
  410f46:	jne    0x410f91
  410f48:	mov    ecx,fs
  410f4a:	or     al,0x8e
  410f4c:	out    0xc2,al
  410f4e:	pop    ds
  410f4f:	adc    BYTE PTR ss:[ecx+eax*4],ah
  410f53:	or     DWORD PTR [esi],ebx
  410f55:	push   ebp
  410f56:	sahf   
  410f57:	xchg   edi,eax
  410f58:	aad    0x2
  410f5a:	cmp    ebp,DWORD PTR [edi]
  410f5c:	pop    ebx
  410f5d:	dec    BYTE PTR [ebx+edi*8-0x36b4af2f]
  410f64:	push   0x568f4d9c
  410f69:	in     eax,0x3
  410f6b:	adc    eax,0x56978b4f
  410f70:	pop    ss
  410f71:	sub    ecx,DWORD PTR [edi]
  410f73:	scas   al,BYTE PTR es:[edi]
  410f74:	mov    esi,DWORD PTR [esi]
  410f76:	mov    esp,0xaac74e37
  410f7b:	inc    esp
  410f7c:	leave  
  410f7d:	enter  0xcf0c,0xbf
  410f81:	pushf  
  410f82:	retf   
  410f83:	dec    edx
  410f84:	rol    ch,0x95
  410f87:	cmp    DWORD PTR [ebx-0x301edd59],0xffffffb3
  410f8e:	sub    eax,0x88a6d041
  410f93:	fild   DWORD PTR [ecx-0x70]
  410f96:	or     esi,DWORD PTR [edx+ecx*8-0x7c]
  410f9a:	jp     0x410f79
  410f9c:	ins    BYTE PTR es:[edi],dx
  410f9d:	mov    ebx,0xc7cf8c45
  410fa2:	jns    0x410f9e
  410fa4:	sbb    al,0xcc
  410fa6:	or     BYTE PTR [edx],ah
  410fa8:	ja     0x410fed
  410faa:	push   eax
  410fab:	aam    0x14
  410fad:	jle    0x410ff3
  410faf:	jae    0x410f37
  410fb1:	xor    DWORD PTR [edi-0x7a461ff5],ecx
  410fb7:	sbb    ecx,DWORD PTR [eax+0x45c4c441]
  410fbd:	ja     0x411017
  410fbf:	aam    0x62
  410fc1:	lea    esp,[eax]
  410fc3:	imul   ebx,DWORD PTR [eax-0x4244f70b],0x802a8f7b
  410fcd:	lods   al,BYTE PTR ds:[esi]
  410fce:	pop    esi
  410fcf:	(bad)  
  410fd0:	sub    eax,ebx
  410fd2:	test   eax,0xaf3c1f47
  410fd7:	test   eax,0x733d39a6
  410fdc:	fld    DWORD PTR [ebx+eiz*1]
  410fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fe0:	fist   WORD PTR [ebp-0x7d9d009d]
  410fe6:	call   0x1228:0x71c4ec8f
  410fed:	and    al,0x4c
  410fef:	cmp    ch,cl
  410ff1:	mov    dl,0xbb
  410ff3:	retf   
  410ff4:	dec    ebp
  410ff5:	add    DWORD PTR [eax+ecx*1-0x752f1f2],esp
  410ffc:	mov    eax,ds:0x82ba3fa1
  411001:	sar    dh,0xec
  411004:	cmp    bl,BYTE PTR [esi-0x38]
  411007:	mov    ebp,0xf5f4620
  41100c:	or     BYTE PTR [esi],0xbb
  41100f:	scas   al,BYTE PTR es:[edi]
  411010:	ror    BYTE PTR [ecx+0x25],1
  411013:	mov    BYTE PTR [esi-0x68f62b07],bl
  411019:	push   edx
  41101a:	cmp    al,0x16
  41101c:	lds    ebx,FWORD PTR [eax-0x1]
  41101f:	call   0xde53:0xbcf630d
  411026:	int    0xa9
  411028:	inc    edi
  411029:	cmp    eax,0x4175749e
  41102e:	xor    eax,esi
  411030:	stc    
  411031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411033:	aas    
  411034:	repz jge 0x411090
  411037:	scas   al,BYTE PTR es:[edi]
  411038:	setb   BYTE PTR [esi-0x42]
  41103c:	dec    esi
  41103d:	scas   al,BYTE PTR es:[edi]
  41103e:	xor    eax,0x1b2521a6
  411043:	sahf   
  411044:	je     0x410fef
  411046:	js     0x411052
  411048:	fs cwde 
  41104a:	out    0xa5,al
  41104c:	(bad)  [ebx-0x6d43846e]
  411052:	not    BYTE PTR [edi+0x5e]
  411055:	mov    al,0xeb
  411057:	mov    eax,ds:0xeca71d74
  41105c:	sbb    al,BYTE PTR [ebx]
  41105e:	inc    ebp
  41105f:	inc    esi
  411060:	outs   dx,DWORD PTR ds:[esi]
  411061:	mov    edx,es
  411063:	jo     0x41107c
  411065:	sbb    BYTE PTR [ebx-0x5e8f5257],dl
  41106b:	cmp    BYTE PTR [ecx-0x36],bl
  41106e:	add    al,0x16
  411070:	pop    ebp
  411071:	mov    ds:0x2ce108d4,eax
  411076:	add    eax,0xcc2eab33
  41107b:	cmp    eax,0x7e6a913f
  411080:	pop    eax
  411081:	enter  0xa3cd,0x24
  411085:	pop    ebp
  411086:	jle    0x4110b7
  411088:	dec    esi
  411089:	shl    BYTE PTR [ebx+0x702a7f29],0x37
  411090:	mov    cl,0xa5
  411092:	xchg   esi,eax
  411093:	(bad)  [ecx-0x522b591b]
  411099:	xchg   esi,eax
  41109a:	fwait
  41109b:	xchg   ecx,eax
  41109c:	mov    edi,0xa815c4ec
  4110a1:	sbb    bl,BYTE PTR [ecx+0x2042a932]
  4110a7:	mov    ds:0x4512b5e6,eax
  4110ac:	(bad)  
  4110ad:	rcr    BYTE PTR [ebp+0x2bc962d6],cl
  4110b3:	addr16 shl ebx,cl
  4110b6:	dec    eax
  4110b7:	pop    ds
  4110b8:	sub    BYTE PTR [esi-0x26],0x11
  4110bc:	stos   BYTE PTR es:[edi],al
  4110bd:	popa   
  4110be:	ss push ebp
  4110c0:	test   eax,0x9a97f114
  4110c5:	test   DWORD PTR [ebx-0x12c8f8bd],ebx
  4110cb:	cmp    bh,BYTE PTR [esi]
  4110cd:	in     eax,dx
  4110ce:	jl     0x411119
  4110d0:	add    al,0xa3
  4110d2:	xor    ch,BYTE PTR [edi]
  4110d4:	jmp    0x301fa481
  4110d9:	stc    
  4110da:	in     al,dx
  4110db:	dec    esp
  4110dc:	dec    edi
  4110dd:	loope  0x4110a6
  4110df:	outs   dx,DWORD PTR ds:[esi]
  4110e0:	imul   ecx,DWORD PTR [ebp+0x7c],0x561949ea
  4110e7:	fisub  DWORD PTR ds:0x33523395
  4110ed:	aad    0xd2
  4110ef:	add    ecx,ebx
  4110f1:	xlat   BYTE PTR ds:[ebx]
  4110f2:	sbb    edi,DWORD PTR ds:0x3652ff57
  4110f8:	sub    esp,DWORD PTR gs:[edx-0x43]
  4110fc:	dec    ecx
  4110fd:	mov    ds:0x78afb4e7,al
  411102:	shl    DWORD PTR [ebp-0x26e7dd21],1
  411108:	pop    ds
  411109:	mov    ebx,0x7d9ddcad
  41110e:	xchg   ebp,eax
  41110f:	mov    dh,0x6a
  411111:	add    eax,0xf39634
  411116:	mov    ebx,DWORD PTR [ecx]
  411118:	push   es
  411119:	push   cs
  41111a:	mov    bl,0xff
  41111c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41111d:	fs mov al,0x1a
  411120:	jno    0x4110f6
  411122:	cld    
  411123:	and    al,0x8e
  411125:	or     BYTE PTR [ebx+0x6a],0x82
  411129:	mov    BYTE PTR [ecx-0x1072de60],dh
  41112f:	pop    es
  411130:	sbb    al,BYTE PTR [eax+0x3fc43ad2]
  411136:	fwait
  411137:	call   DWORD PTR ds:0xe5cb0c4d
  41113d:	fist   WORD PTR [edi-0x4f15ef24]
  411143:	ja     0x41116c
  411145:	jmp    0x684a:0xcb7eb7c
  41114c:	imul   ebp,ecx,0x2b
  41114f:	neg    DWORD PTR [ebx]
  411151:	xchg   DWORD PTR [ebp+0x11],edi
  411154:	inc    edi
  411155:	inc    esi
  411156:	jno    0x41111a
  411158:	mov    ds:0x6c66d3c3,eax
  41115d:	jmp    0x41118f
  41115f:	fptan  
  411161:	sbb    DWORD PTR [eax-0x9ba73fc],esp
  411167:	mov    ss,WORD PTR [edx+0x1f563416]
  41116d:	mov    ch,0xfb
  41116f:	jg     0x4111b2
  411171:	add    BYTE PTR [edx-0x390a85dc],bl
  411177:	dec    esp
  411178:	inc    edi
  411179:	imul   edi,edx,0xfa02efb2
  41117f:	mov    edx,0x37524592
  411184:	ja     0x41117b
  411186:	lea    esi,[ecx+0x2e]
  411189:	sti    
  41118a:	int    0xf0
  41118c:	xchg   ebx,eax
  41118d:	les    ebx,FWORD PTR [edi+0x1f3935bf]
  411193:	jl     0x4111a8
  411195:	enter  0x32e4,0xff
  411199:	adc    al,0x95
  41119b:	push   es
  41119c:	push   eax
  41119d:	in     al,dx
  41119e:	xchg   esi,eax
  41119f:	outs   dx,DWORD PTR ds:[esi]
  4111a0:	push   0x21
  4111a2:	dec    edi
  4111a3:	adc    ebp,DWORD PTR [ebp-0x18]
  4111a6:	out    0x28,al
  4111a8:	xchg   BYTE PTR [edi],bh
  4111aa:	enter  0x1445,0x24
  4111ae:	sub    ah,bh
  4111b0:	sub    DWORD PTR [ebx+eiz*2],ebx
  4111b3:	or     eax,0x2cbde34
  4111b8:	pop    ss
  4111b9:	xchg   ebp,eax
  4111ba:	sar    DWORD PTR [edi],cl
  4111bc:	call   0x4c41bc16
  4111c1:	pop    edx
  4111c2:	dec    ecx
  4111c3:	into   
  4111c4:	jmp    0x57a9:0x6f04d4e3
  4111cb:	out    0x83,al
  4111cd:	pop    ds
  4111ce:	xchg   ebp,eax
  4111cf:	xchg   ecx,eax
  4111d0:	pop    edx
  4111d1:	mov    ch,ch
  4111d3:	dec    ebx
  4111d4:	pop    ebp
  4111d5:	mov    ecx,DWORD PTR [ebp+0x89e8ec8]
  4111db:	dec    esi
  4111dc:	lods   al,BYTE PTR ds:[esi]
  4111dd:	fbld   TBYTE PTR [ebx-0x9a76cb2]
  4111e3:	xchg   edi,eax
  4111e4:	lds    esp,FWORD PTR [edi-0x78]
  4111e7:	or     eax,DWORD PTR [ebp-0x1ad06b48]
  4111ed:	je     0x41124f
  4111ef:	jmp    0x411197
  4111f1:	call   0x9c9cf5b3
  4111f6:	xchg   BYTE PTR [ecx+esi*1-0x45],al
  4111fa:	les    eax,FWORD PTR [eax-0x70d2e73f]
  411200:	cmp    eax,0x5d7b4977
  411205:	push   0xffffff8a
  411207:	sub    ecx,DWORD PTR fs:[ebx+0x410f7eac]
  41120e:	sub    al,0x69
  411210:	aad    0x4d
  411212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411213:	shl    BYTE PTR [ebp-0x52],0x96
  411217:	test   BYTE PTR [edi+0x4d],bh
  41121a:	addr16 sub dl,ah
  41121d:	jmp    0x55401a0a
  411222:	enter  0xb6c7,0x12
  411226:	stos   BYTE PTR es:[edi],al
  411227:	xor    al,BYTE PTR [edi+0x67c0210d]
  41122d:	jns    0x41120d
  41122f:	shl    DWORD PTR [eax-0x677c6e08],1
  411235:	jbe    0x4112a2
  411237:	xor    al,BYTE PTR [edx-0x4b]
  41123a:	mov    cl,0x5
  41123c:	hlt    
  41123d:	mov    ds:0x654125fa,al
  411242:	cld    
  411243:	pushf  
  411244:	enter  0x11f6,0xbf
  411248:	adc    eax,0x922f6ac5
  41124d:	cs inc edi
  41124f:	sub    eax,ebx
  411251:	cmc    
  411252:	and    eax,0x3ab9fac1
  411257:	iret   
  411258:	add    DWORD PTR ds:0x83eebb1a,ecx
  41125e:	lahf   
  41125f:	js     0x4111f6
  411261:	in     al,0x1a
  411263:	outs   dx,BYTE PTR ds:[esi]
  411264:	push   esi
  411265:	inc    edi
  411266:	jp     0x411261
  411268:	adc    dh,BYTE PTR [ebx]
  41126a:	scas   eax,DWORD PTR es:[edi]
  41126b:	mov    ebp,0xede6d721
  411270:	sub    eax,0x71fca29f
  411275:	icebp  
  411276:	jno    0x4112e6
  411278:	adc    DWORD PTR [eax],edi
  41127a:	adc    eax,DWORD PTR [edi]
  41127c:	push   edi
  41127d:	sub    eax,0x37bdb28d
  411282:	in     eax,0x3
  411284:	ja     0x41122b
  411286:	mov    ds:0x4692f389,al
  41128b:	jbe    0x411257
  41128d:	mov    edi,0xe16374e1
  411292:	int3   
  411293:	in     eax,dx
  411294:	ja     0x4112f6
  411296:	mov    ds:0xe4fc1167,eax
  41129b:	test   al,0x3f
  41129d:	mov    al,0x7c
  41129f:	sbb    al,0x7d
  4112a1:	mov    ah,0x7d
  4112a3:	shr    BYTE PTR [esi],1
  4112a5:	push   es
  4112a6:	inc    edx
  4112a7:	pop    ebp
  4112a8:	xlat   BYTE PTR ds:[ebx]
  4112a9:	jae    0x411280
  4112ab:	bound  esp,QWORD PTR [ebx+0x577dfabe]
  4112b1:	sub    edx,eax
  4112b3:	jecxz  0x41123f
  4112b5:	jle    0x411289
  4112b7:	aaa    
  4112b8:	cdq    
  4112b9:	sbb    edi,DWORD PTR [edi-0x39]
  4112bc:	vpacksswb ymm6,ymm0,YMMWORD PTR [ecx+ebp*4]
  4112c1:	mov    ah,0x8d
  4112c3:	xchg   DWORD PTR [esi],ebp
  4112c5:	out    0x87,eax
  4112c7:	cmp    DWORD PTR ds:0xe6a1b54e,ebx
  4112cd:	push   ecx
  4112ce:	and    DWORD PTR [eax],0x5bc6eed5
  4112d4:	adc    al,0x9a
  4112d6:	xchg   ebx,eax
  4112d7:	fs mov ch,0xbb
  4112da:	(bad)  
  4112db:	and    edx,esi
  4112dd:	and    eax,0x3e01c09c
  4112e2:	call   0xf9a1:0xb630a3a9
  4112e9:	dec    ebx
  4112ea:	adc    al,0x73
  4112ec:	xchg   esp,eax
  4112ed:	xchg   BYTE PTR [eax+ecx*2-0x55],ch
  4112f1:	aad    0x13
  4112f3:	mov    al,0x5c
  4112f5:	fsubr  st,st(3)
  4112f7:	out    dx,al
  4112f8:	add    DWORD PTR [esi],eax
  4112fa:	mov    bh,0x7d
  4112fc:	lds    ebp,FWORD PTR [ebx+0x34]
  4112ff:	pusha  
  411300:	ret    
  411301:	lods   eax,DWORD PTR ds:[esi]
  411302:	ds (bad) 
  411304:	or     edi,esi
  411306:	add    ebx,edx
  411308:	imul   DWORD PTR [edi+0xa]
  41130b:	gs (bad) 
  41130d:	push   edi
  41130e:	fist   DWORD PTR [edi]
  411310:	test   eax,0x58854c0c
  411315:	sbb    ebx,esp
  411317:	sub    al,BYTE PTR [edx-0x7d]
  41131a:	push   edi
  41131b:	or     al,0x93
  41131d:	xchg   ch,dh
  41131f:	mov    WORD PTR [ebx+ebp*4],cs
  411322:	jge    0x411327
  411324:	fs jmp 0x3f8a:0x34d4273e
  41132c:	rcl    ecx,0x50
  41132f:	adc    ah,BYTE PTR [ecx+0x46]
  411332:	sahf   
  411333:	dec    ebp
  411334:	or     al,0x1d
  411336:	xor    DWORD PTR [ecx+0x7],edi
  411339:	daa    
  41133a:	xor    ch,ah
  41133c:	stc    
  41133d:	cmp    cl,0x46
  411340:	ror    ebp,cl
  411342:	ds cmp eax,0x6f98e16f
  411348:	in     eax,0x73
  41134a:	add    al,0x8a
  41134c:	retf   0x8a1e
  41134f:	ins    DWORD PTR es:[edi],dx
  411350:	inc    ebp
  411351:	push   ebx
  411352:	jo     0x4112fa
  411354:	mov    eax,ds:0xe88c1bb8
  411359:	js     0x4112e7
  41135b:	mov    ch,0x9c
  41135d:	icebp  
  41135e:	repnz loope 0x411349
  411361:	call   0x86cf:0x97e2be43
  411368:	xlat   BYTE PTR ds:[ebx]
  411369:	es in  eax,0xd3
  41136c:	int3   
  41136d:	mov    al,0x1
  41136f:	inc    edx
  411370:	cmp    eax,0x9445230d
  411375:	dec    esi
  411376:	mov    eax,0xb81dd965
  41137b:	adc    eax,0x993ad78a
  411380:	aad    0x1d
  411382:	rsm    
  411384:	jmp    0x411b:0x9c272daa
  41138b:	jae    0x411409
  41138d:	enter  0x3e40,0x8
  411391:	fidiv  WORD PTR [ebx+0x796b4250]
  411397:	add    al,0xa7
  411399:	stc    
  41139a:	aam    0x72
  41139c:	mov    cs,ebp
  41139e:	sbb    ecx,DWORD PTR [esi+0x3c]
  4113a1:	sub    DWORD PTR [ecx+0x40f918ea],eax
  4113a7:	dec    edi
  4113a8:	xor    al,0xf7
  4113aa:	stc    
  4113ab:	push   esi
  4113ac:	retf   0x2a39
  4113af:	repz mov al,0x25
  4113b2:	stos   DWORD PTR es:[edi],eax
  4113b3:	cwde   
  4113b4:	mov    eax,ds:0xee6c0f75
  4113b9:	jle    0x411417
  4113bb:	mov    dh,0x73
  4113bd:	mov    BYTE PTR [ebp+0x7796802d],ah
  4113c3:	loope  0x4113d6
  4113c5:	jne    0x4113e8
  4113c7:	lahf   
  4113c8:	ret    0xbf24
  4113cb:	imul   ebp,DWORD PTR [eax-0xede43d6],0x11
  4113d2:	xchg   edi,eax
  4113d3:	jmp    0xc367:0xdf4a3fb5
  4113da:	pop    esi
  4113db:	les    edi,FWORD PTR [eax*1+0x699909d9]
  4113e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113e3:	xchg   ebx,eax
  4113e4:	push   ds
  4113e5:	cmp    eax,ebp
  4113e7:	shl    DWORD PTR [ecx+edi*1+0x359e60d6],1
  4113ee:	into   
  4113ef:	inc    edi
  4113f0:	xchg   edi,eax
  4113f1:	pop    edi
  4113f2:	scas   eax,DWORD PTR es:[edi]
  4113f3:	dec    ecx
  4113f4:	jg     0x41137d
  4113f6:	add    DWORD PTR [ebp+0x1a],ebx
  4113f9:	pop    ds
  4113fa:	pop    es
  4113fb:	aad    0xf8
  4113fd:	sub    esi,DWORD PTR ds:0x9f20ef6
  411403:	neg    BYTE PTR [esi-0x67956af4]
  411409:	inc    ecx
  41140a:	jno    0x4113d6
  41140c:	call   0x9ca130f0
  411411:	(bad)  
  411412:	not    BYTE PTR [ebp+0x2c89b60e]
  411418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411419:	cmp    eax,0x15a872b
  41141e:	addr16 jge 0x411448
  411421:	inc    edx
  411422:	or     bh,BYTE PTR [eax]
  411424:	sub    eax,0x36ea9045
  411429:	jmp    0xbf6ab932
  41142e:	test   BYTE PTR [edi-0x3f],cl
  411431:	cmp    esp,ebp
  411433:	iret   
  411434:	jge    0x133f52fc
  41143a:	push   ecx
  41143b:	mov    eax,0x560506e3
  411440:	ror    BYTE PTR [ecx-0x4f],1
  411443:	ss pop edi
  411445:	mov    dl,0x18
  411447:	mov    dh,0x88
  411449:	outs   dx,DWORD PTR ds:[esi]
  41144a:	rcr    BYTE PTR [edx+ebp*4],0xdb
  41144e:	mov    WORD PTR [edx+ecx*4-0x37a8ed7c],ds
  411455:	ja     0x4113ec
  411457:	shr    DWORD PTR [edx-0x61dca363],cl
  41145d:	jne    0x411470
  41145f:	mov    al,ds:0x21629f10
  411464:	hlt    
  411465:	xlat   BYTE PTR ds:[ebx]
  411466:	jecxz  0x4114cd
  411468:	pop    esp
  411469:	ds mov cl,0x36
  41146c:	jmp    0x22c8:0xbee09fa4
  411473:	hlt    
  411474:	sub    al,0x4
  411476:	sti    
  411477:	push   ds
  411478:	add    eax,0x29f75758
  41147d:	pop    edi
  41147e:	ja     0x4114fb
  411480:	daa    
  411481:	cli    
  411482:	into   
  411483:	mov    ebx,0x61adbe21
  411488:	dec    eax
  411489:	rcr    BYTE PTR [esi+0x6c3747a4],0xa7
  411490:	sbb    dl,BYTE PTR [ecx]
  411492:	pushf  
  411493:	ja     0x411431
  411495:	call   0x32f:0xd0e00d62
  41149c:	dec    esi
  41149d:	dec    ecx
  41149e:	sub    eax,0xe44d3083
  4114a3:	push   ds
  4114a4:	sbb    edx,eax
  4114a6:	dec    esi
  4114a7:	push   edi
  4114a8:	push   ebx
  4114a9:	hlt    
  4114aa:	retf   
  4114ab:	sti    
  4114ac:	loope  0x41152b
  4114ae:	mov    dl,ch
  4114b0:	inc    eax
  4114b1:	and    al,0xf1
  4114b3:	push   ds
  4114b4:	fnstenv [esi-0x6c0d0181]
  4114ba:	scas   eax,DWORD PTR es:[edi]
  4114bb:	mov    cl,BYTE PTR [ebp-0x66652ad3]
  4114c1:	dec    edx
  4114c2:	mov    al,0xdf
  4114c4:	fisubr DWORD PTR [ebx-0x17e8592a]
  4114ca:	mov    edx,0xed83dfa3
  4114cf:	xor    ch,BYTE PTR [eax+0x65]
  4114d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114d3:	adc    al,0xd0
  4114d5:	lods   al,BYTE PTR ds:[esi]
  4114d6:	mov    ch,0xe2
  4114d8:	jnp    0x4114cd
  4114da:	pusha  
  4114db:	mov    dh,0xfc
  4114dd:	adc    al,0x70
  4114df:	daa    
  4114e0:	nop
  4114e1:	xchg   esp,eax
  4114e2:	dec    eax
  4114e3:	fwait
  4114e4:	pop    ecx
  4114e5:	mov    eax,ds:0x276afbce
  4114ea:	dec    eax
  4114eb:	and    ah,ah
  4114ed:	iret   
  4114ee:	les    ebp,FWORD PTR [esi]
  4114f0:	repz mov esp,0x3a336f56
  4114f6:	jbe    0x411570
  4114f8:	mov    esp,0xf98ea02b
  4114fd:	ja     0x411553
  4114ff:	int    0x8c
  411501:	fcom   DWORD PTR [eax]
  411503:	and    al,0x75
  411505:	mov    BYTE PTR [ecx+ecx*2+0x23a176ea],ah
  41150c:	fwait
  41150d:	jl     0x41150e
  41150f:	js     0x4114f8
  411511:	jne    0x41156c
  411513:	mov    cl,0x7e
  411515:	xlat   BYTE PTR ds:[ebx]
  411516:	add    ch,ch
  411518:	and    dh,dh
  41151a:	ds push eax
  41151c:	ret    0xc685
  41151f:	mov    cs,WORD PTR [esi-0x4c23c62]
  411525:	and    DWORD PTR [eax-0x7107dcb7],edx
  41152b:	pop    ebx
  41152c:	popf   
  41152d:	lds    edx,FWORD PTR [edi-0x467efac8]
  411533:	cs push 0xffffffcd
  411536:	int3   
  411537:	popf   
  411538:	cmp    DWORD PTR [edi-0x6c5f2b9a],ecx
  41153e:	dec    esi
  41153f:	scas   eax,DWORD PTR es:[edi]
  411540:	xchg   esi,eax
  411541:	(bad)  
  411542:	push   ecx
  411543:	fisttp DWORD PTR [ebp+ebx*1-0x6861a89d]
  41154b:	sahf   
  41154c:	loop   0x4115b7
  41154e:	adc    eax,0xb524783d
  411553:	out    0x77,al
  411555:	cld    
  411556:	xor    eax,0x59d6dfe1
  41155b:	popf   
  41155c:	pop    ecx
  41155d:	pop    esi
  41155e:	sub    eax,0x7f3b4585
  411563:	ficomp DWORD PTR [eax-0x65]
  411566:	dec    eax
  411567:	jmp    0x411505
  411569:	(bad)  
  41156b:	outs   dx,BYTE PTR ds:[esi]
  41156c:	xor    DWORD PTR [ecx-0x449b92ff],edi
  411572:	cmp    ch,dh
  411574:	xchg   esp,eax
  411575:	push   ebx
  411576:	fsubp  st(0),st
  411578:	int    0x44
  41157a:	cld    
  41157b:	dec    esi
  41157c:	lock loopne 0x411504
  41157f:	rcr    edx,0xa6
  411582:	sbb    BYTE PTR [ecx-0x7e3d853],dh
  411588:	inc    ebx
  411589:	inc    ebp
  41158a:	xchg   esp,eax
  41158b:	push   0x3c54476a
  411590:	(bad)  
  411591:	mov    bh,0x67
  411593:	xchg   BYTE PTR [eax],ch
  411595:	sbb    al,0x88
  411597:	imul   ebx,DWORD PTR [esi+0x6b9492a4],0x22
  41159e:	daa    
  41159f:	fist   DWORD PTR ds:0x6d719c7d
  4115a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115a6:	loopne 0x41154d
  4115a8:	jmp    0x9eec17f
  4115ad:	and    eax,0xa14a183f
  4115b2:	jo     0x4115c7
  4115b4:	call   0x61881a2c
  4115b9:	cdq    
  4115ba:	lock fldenv es:[ebp-0xd]
  4115bf:	pop    ebx
  4115c0:	pop    ebp
  4115c1:	lods   al,BYTE PTR ds:[esi]
  4115c2:	or     al,0x44
  4115c4:	repz aam 0x57
  4115c7:	stc    
  4115c8:	outs   dx,DWORD PTR ds:[esi]
  4115c9:	out    dx,al
  4115ca:	cli    
  4115cb:	jne    0x411622
  4115cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115ce:	mov    ch,0x44
  4115d0:	leave  
  4115d1:	inc    ebx
  4115d2:	push   ss
  4115d3:	sahf   
  4115d4:	xchg   ebx,eax
  4115d5:	pop    eax
  4115d6:	sahf   
  4115d7:	cmp    ebx,DWORD PTR [ecx-0x62]
  4115da:	aaa    
  4115db:	mov    eax,ds:0xd24d8c51
  4115e0:	xor    ch,BYTE PTR [ebx-0x2bbcc46d]
  4115e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115e7:	fisttp QWORD PTR [esi]
  4115e9:	fdivp  st(7),st
  4115eb:	test   al,0x79
  4115ed:	icebp  
  4115ee:	add    cl,BYTE PTR [ecx-0x339e067]
  4115f4:	mov    ebp,0x34ed80d6
  4115f9:	pop    esp
  4115fa:	inc    esi
  4115fb:	(bad)  
  4115fc:	ss xchg ebp,ebx
  4115ff:	iret   
  411600:	std    
  411601:	outs   dx,DWORD PTR ds:[esi]
  411602:	sbb    al,0xe5
  411604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411605:	imul   eax,ecx,0x70e27f62
  41160b:	jae    0x411610
  41160d:	inc    ecx
  41160e:	test   eax,0x5b87220f
  411613:	mov    bh,0xa2
  411615:	pop    eax
  411616:	push   ds
  411617:	gs scas al,BYTE PTR es:[edi]
  411619:	push   ecx
  41161a:	call   0xda0b52c7
  41161f:	or     ah,BYTE PTR [ecx-0x39738a5b]
  411625:	imul   edx,DWORD PTR [ebx],0x27
  411628:	sub    al,BYTE PTR [eax+edx*4-0x30]
  41162c:	sbb    cl,BYTE PTR [ebx+0x0]
  41162f:	ins    BYTE PTR es:[edi],dx
  411630:	cmp    ecx,DWORD PTR [ebx]
  411632:	inc    ebx
  411633:	aam    0xae
  411635:	mov    WORD PTR [ebx+0x182b5dc7],?
  41163b:	dec    esi
  41163c:	dec    esp
  41163d:	fsubr  st,st(6)
  41163f:	xchg   edx,eax
  411640:	and    esp,ebx
  411642:	repnz cmp BYTE PTR [ebx+0x66a87d59],ch
  411649:	aas    
  41164a:	es adc eax,0x505ce9f8
  411650:	cmp    al,0x35
  411652:	add    DWORD PTR [ebx+0x13],esp
  411655:	sub    DWORD PTR [edi],eax
  411657:	mov    edx,DWORD PTR [edi+0x41]
  41165a:	pop    esp
  41165b:	add    bl,BYTE PTR [ecx-0x61]
  41165e:	mov    gs,eax
  411660:	ss jp  0x4116b2
  411663:	std    
  411664:	cmp    eax,edi
  411666:	add    eax,0x9436449e
  41166b:	inc    edi
  41166c:	add    eax,0x12be0d8f
  411671:	pop    esp
  411672:	mov    bl,0x83
  411674:	gs fs cmp ecx,ebp
  411678:	cli    
  411679:	test   DWORD PTR [ebp+edx*1+0x41a6017a],ebx
  411680:	sub    eax,0x2697b0f2
  411685:	out    0x2e,al
  411687:	hlt    
  411688:	stos   BYTE PTR es:[edi],al
  411689:	into   
  41168a:	loope  0x4116b5
  41168c:	push   0xffffff80
  41168e:	sahf   
  41168f:	push   edi
  411690:	sub    BYTE PTR [ebp+0x70],0x52
  411694:	xchg   BYTE PTR [ecx],bh
  411696:	rcl    BYTE PTR [edi-0x77ac53ef],cl
  41169c:	dec    ebp
  41169d:	sub    ch,BYTE PTR [edi+0x2c]
  4116a0:	mov    esi,0xfd2e8ca8
  4116a5:	sbb    eax,0x1587b74d
  4116aa:	cs pop es
  4116ac:	jnp    0x411681
  4116ae:	push   ebx
  4116af:	sahf   
  4116b0:	hlt    
  4116b1:	jno    0x41171c
  4116b3:	aaa    
  4116b4:	mov    edi,0xbbb851a
  4116b9:	sub    BYTE PTR [esi],bl
  4116bb:	and    BYTE PTR [eax+0x6a],0x70
  4116bf:	and    eax,0x71ef3bb2
  4116c4:	daa    
  4116c5:	mov    bh,BYTE PTR [ebx-0x71]
  4116c8:	sbb    cl,0xd
  4116cb:	add    bl,cl
  4116cd:	dec    edi
  4116ce:	clc    
  4116cf:	dec    BYTE PTR [eax-0x55600a95]
  4116d5:	fwait
  4116d6:	push   esp
  4116d7:	add    al,0x2a
  4116d9:	outs   dx,BYTE PTR ds:[esi]
  4116da:	pop    edi
  4116db:	inc    ebp
  4116dc:	add    eax,edx
  4116de:	jp     0x411676
  4116e0:	or     ecx,DWORD PTR [edi+edx*1+0x7bd76bd]
  4116e7:	into   
  4116e8:	add    al,0x11
  4116ea:	cwde   
  4116eb:	sbb    edi,DWORD PTR [esi+esi*8+0x66]
  4116ef:	adc    eax,0xfb4904b9
  4116f4:	(bad)  
  4116f5:	sbb    al,0xe1
  4116f7:	xchg   edi,eax
  4116f8:	in     eax,dx
  4116f9:	sti    
  4116fa:	(bad)  
  4116fc:	inc    eax
  4116fd:	ror    BYTE PTR [edx],0xfa
  411700:	jbe    0x41171b
  411702:	mov    eax,ds:0x250315b4
  411707:	ficomp DWORD PTR [eax+0x5e]
  41170a:	sahf   
  41170b:	fiadd  DWORD PTR [ebx]
  41170d:	xor    esp,ebp
  41170f:	mov    gs,WORD PTR [esi+ecx*1-0x39]
  411713:	xchg   ecx,eax
  411714:	retf   
  411715:	es (bad) 
  411717:	imul   edx,DWORD PTR [esi],0xffffff9e
  41171a:	ja     0x4116bd
  41171c:	sub    al,0xb6
  41171e:	add    eax,edi
  411720:	int    0x1d
  411722:	mov    eax,ds:0x64efc3c0
  411727:	cs pop ss
  411729:	fmul   st(6),st
  41172b:	pop    edi
  41172c:	enter  0xf0a3,0xa0
  411730:	cmp    DWORD PTR [edi+0x73],eax
  411733:	ret    0x58e6
  411736:	ss mov dl,0xa6
  411739:	pop    eax
  41173a:	jb     0x4117ae
  41173c:	ret    0xc9df
  41173f:	inc    ecx
  411740:	(bad)  
  411741:	les    edi,FWORD PTR ss:[ebx+0x30ec5606]
  411748:	(bad)  
  411749:	push   ss
  41174a:	dec    eax
  41174b:	pop    ecx
  41174c:	sub    eax,0x5f2bfe0e
  411751:	mov    ebp,0xce38b314
  411756:	jmp    0xbe3a703d
  41175b:	dec    ebx
  41175c:	xchg   esi,eax
  41175d:	fimul  DWORD PTR [esp+ebp*2-0x43]
  411761:	dec    edi
  411762:	mov    dl,0xb
  411764:	cmp    eax,0x92f92caa
  411769:	mov    ds:0xdea9c81e,eax
  41176e:	xchg   ebx,eax
  41176f:	popf   
  411770:	lods   eax,DWORD PTR ds:[esi]
  411771:	mov    ch,0x3
  411773:	nop
  411774:	imul   esi,DWORD PTR [ecx+ebx*1-0x52],0x320813d1
  41177c:	dec    edi
  41177d:	sar    BYTE PTR ds:0xa446f5a1,cl
  411783:	mov    WORD PTR [edx+0x4b882c1],es
  411789:	js     0x4117d4
  41178b:	add    al,0xb7
  41178d:	test   BYTE PTR [esi-0x1242117b],al
  411793:	mov    ecx,0xb09a993
  411798:	call   0xfc05:0xa3fd4528
  41179f:	and    ebx,DWORD PTR ds:0x80615638
  4117a5:	or     edx,DWORD PTR [esi+0x7a]
  4117a8:	repz ret 
  4117aa:	clc    
  4117ab:	and    ch,al
  4117ad:	fcmovne st,st(1)
  4117af:	pushf  
  4117b0:	xchg   esp,eax
  4117b1:	dec    esp
  4117b2:	mov    cl,0x30
  4117b4:	mov    eax,ds:0xb08581af
  4117b9:	les    eax,FWORD PTR [eax+0x71]
  4117bc:	and    BYTE PTR [ebp-0x2b8525f0],0x41
  4117c3:	in     eax,dx
  4117c4:	dec    edi
  4117c5:	push   edi
  4117c6:	jl     0x4117fd
  4117c8:	lods   eax,DWORD PTR ds:[esi]
  4117c9:	aam    0x18
  4117cb:	(bad)  
  4117cd:	jbe    0x4117c9
  4117cf:	pushf  
  4117d0:	pop    esp
  4117d1:	cmp    esp,ebp
  4117d3:	cmp    DWORD PTR [eax+ebx*8+0x2e],0x3e325616
  4117db:	jnp    0x411826
  4117dd:	cdq    
  4117de:	fimul  DWORD PTR [esi-0x52c74522]
  4117e4:	sti    
  4117e5:	xchg   ecx,eax
  4117e6:	mov    ecx,0xa9c882d3
  4117eb:	test   eax,0xeaa7e353
  4117f0:	jae    0x41178c
  4117f2:	outs   dx,DWORD PTR ds:[esi]
  4117f3:	popf   
  4117f4:	(bad)  
  4117f5:	outs   dx,DWORD PTR ds:[esi]
  4117f6:	lahf   
  4117f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117f8:	push   ss
  4117f9:	lods   al,BYTE PTR ds:[esi]
  4117fa:	inc    ebx
  4117fb:	(bad)  
  4117fc:	(bad)  
  4117fd:	push   ebp
  4117fe:	or     DWORD PTR [eax+ebp*8],esi
  411801:	pop    edx
  411802:	jmp    0x76c26ba3
  411807:	and    BYTE PTR [esp+edx*8+0x26],al
  41180b:	cmp    BYTE PTR [ebx+eiz*1-0x2def2d8b],bl
  411812:	adc    esp,DWORD PTR [edi]
  411814:	push   0x9b962eea
  411819:	mov    edx,0xb1513da4
  41181e:	mov    ss,WORD PTR [ebp+ebp*4+0x5f875202]
  411825:	pop    ecx
  411826:	sub    ch,BYTE PTR ds:[esp+edi*2-0x4a]
  41182b:	push   ecx
  41182c:	(bad)  
  41182d:	mov    bl,0x71
  41182f:	in     al,0x4d
  411831:	addr16 test eax,0x26f892d9
  411837:	push   ss
  411838:	mov    ah,0x4
  41183a:	inc    edi
  41183b:	push   esp
  41183c:	dec    bp
  41183e:	imul   edx,DWORD PTR [edx+0x61f5efea],0xffffffd9
  411845:	xchg   edx,eax
  411846:	dec    ecx
  411847:	dec    esp
  411848:	outs   dx,BYTE PTR ds:[esi]
  411849:	dec    edi
  41184a:	clc    
  41184b:	jmp    0x4dcdb093
  411850:	pop    ebx
  411851:	jmp    0x4118aa
  411853:	lods   eax,DWORD PTR ds:[esi]
  411854:	sar    ah,1
  411856:	xchg   ebp,eax
  411857:	in     eax,0xc7
  411859:	jg     0x4118b2
  41185b:	pop    eax
  41185c:	out    0xba,eax
  41185e:	inc    esp
  41185f:	jmp    0x3af4:0xa3a59275
  411866:	inc    edi
  411867:	or     DWORD PTR [esi+eiz*2],esi
  41186a:	jnp    0x411829
  41186c:	push   0x4b
  41186e:	pop    esp
  41186f:	inc    ebx
  411870:	mov    ch,ah
  411872:	cwde   
  411873:	bound  ecx,QWORD PTR [eax+0x6e]
  411876:	rcl    DWORD PTR [edx+0x533fe8df],1
  41187c:	sbb    eax,0xfd29698a
  411881:	out    0xf1,eax
  411883:	inc    ecx
  411884:	mov    al,0x27
  411886:	and    ebp,DWORD PTR [esi-0x5e64a5b9]
  41188c:	pop    ebx
  41188d:	rcl    esp,0x93
  411890:	dec    ebx
  411891:	std    
  411892:	mov    ebp,0x2c212e06
  411897:	loope  0x411903
  411899:	push   edx
  41189a:	push   edi
  41189b:	pop    edi
  41189c:	into   
  41189d:	push   esp
  41189e:	sbb    BYTE PTR [esi],0x5b
  4118a1:	popa   
  4118a2:	jge    0x411853
  4118a4:	sbb    al,0x26
  4118a6:	dec    eax
  4118a7:	mov    ebx,0xb4898658
  4118ac:	rol    DWORD PTR [ebx-0x5166c006],1
  4118b2:	cmp    edx,esi
  4118b4:	pop    esp
  4118b5:	pop    edx
  4118b6:	ja     0x411921
  4118b8:	dec    esp
  4118b9:	push   edi
  4118ba:	push   edi
  4118bb:	xchg   ebx,eax
  4118bc:	(bad)  
  4118bd:	dec    eax
  4118be:	inc    ebx
  4118bf:	xor    BYTE PTR [edi-0x31d46e78],cl
  4118c5:	xchg   edx,eax
  4118c6:	mov    al,ds:0xfaa6e0c9
  4118cb:	mov    ecx,0x18580b85
  4118d0:	bound  ebp,QWORD PTR [eax+0x7b]
  4118d3:	hlt    
  4118d4:	xchg   esp,eax
  4118d5:	sbb    DWORD PTR ds:0xc1371022,eax
  4118db:	cmp    bx,si
  4118de:	mul    ah
  4118e0:	loopne 0x4118cb
  4118e2:	xchg   edi,eax
  4118e3:	std    
  4118e4:	or     DWORD PTR [eax-0x1c],0x3e9c511d
  4118eb:	mov    esp,0xfac683ba
  4118f0:	xchg   esi,eax
  4118f1:	add    DWORD PTR [ebx],ebx
  4118f3:	idiv   DWORD PTR [eax]
  4118f5:	mov    edi,0x2d9ff24e
  4118fa:	(bad)  
  4118fb:	sbb    eax,0x8e833e47
  411900:	cli    
  411901:	cwde   
  411902:	and    BYTE PTR [eax+0x38],bl
  411905:	push   eax
  411906:	xor    cl,BYTE PTR [ebp-0x33606d22]
  41190c:	mov    ebp,0x1a03ed3d
  411911:	dec    ecx
  411912:	jp     0x4118c1
  411914:	scas   eax,DWORD PTR es:[edi]
  411915:	push   es
  411916:	pusha  
  411917:	xor    edi,DWORD PTR [eax-0x7d]
  41191a:	fistp  QWORD PTR [esi]
  41191c:	jbe    0x411901
  41191e:	cmp    BYTE PTR [esi+0x8d690a1],dh
  411924:	fdiv   QWORD PTR [ecx]
  411926:	js     0x411952
  411928:	sahf   
  411929:	out    dx,eax
  41192a:	stos   BYTE PTR es:[edi],al
  41192b:	mov    ds:0xe26e01f2,al
  411930:	dec    ebp
  411931:	pop    esp
  411932:	xchg   ebx,eax
  411933:	fisub  WORD PTR [eax]
  411935:	pushf  
  411936:	mov    edx,0x47bbaa41
  41193b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41193c:	enter  0x726c,0xb1
  411940:	jmp    FWORD PTR [edx]
  411942:	push   edi
  411943:	jns    0x4118d6
  411945:	adc    eax,0x239d2431
  41194a:	inc    ebx
  41194b:	out    dx,eax
  41194c:	xor    dh,BYTE PTR [ebx]
  41194e:	(bad)  
  41194f:	arpl   ax,si
  411951:	addr16 test al,0x33
  411954:	pushf  
  411955:	adc    BYTE PTR ds:0xd6d93c08,0x31
  41195c:	or     BYTE PTR [eax],0x1b
  41195f:	in     eax,dx
  411960:	mov    dl,BYTE PTR [edx+0xa]
  411963:	mov    edx,0x1a60ebd0
  411968:	ja     0x411960
  41196a:	sahf   
  41196b:	push   ss
  41196c:	or     DWORD PTR [esi-0x5639eb02],ebx
  411972:	mov    al,0xb5
  411974:	stos   DWORD PTR es:[edi],eax
  411975:	fisubr WORD PTR [edi]
  411977:	mov    edx,0x9b1ea274
  41197c:	stc    
  41197d:	sub    ah,cl
  41197f:	xor    bl,ah
  411981:	shl    BYTE PTR [edx+0x1cd8009],0xcb
  411988:	add    eax,0x6b66db4d
  41198d:	xchg   edi,eax
  41198e:	(bad)
  411992:	sbb    bh,BYTE PTR [esi+0x568f90d0]
  411998:	and    BYTE PTR [esi],bl
  41199a:	cmp    BYTE PTR [esp+eax*4],0x27
  41199e:	pop    edi
  41199f:	mov    edx,0x63f84de9
  4119a4:	sbb    ebx,DWORD PTR [edi]
  4119a6:	or     eax,0x495c8676
  4119ab:	and    bl,BYTE PTR [edx-0xd329bba]
  4119b1:	pop    es
  4119b2:	cmp    esi,0x5b
  4119b5:	frstor [eax-0x65]
  4119b8:	sbb    al,0xe
  4119ba:	dec    ebx
  4119bb:	and    eax,0x31e97457
  4119c0:	push   0xffffffc6
  4119c2:	jae    0x411a05
  4119c4:	fcomp  QWORD PTR [ecx+0x64]
  4119c7:	dec    esp
  4119c8:	retf   
  4119c9:	test   DWORD PTR [esi],ebx
  4119cb:	push   edx
  4119cc:	mov    dh,BYTE PTR [ebx+0x4d09a36b]
  4119d2:	sbb    eax,0xe6404faf
  4119d7:	dec    ebp
  4119d8:	es pop esp
  4119da:	cmc    
  4119db:	push   es
  4119dc:	fsub   st(1),st
  4119de:	mov    ch,0x64
  4119e0:	pop    ebp
  4119e1:	mov    al,0xf
  4119e3:	push   edi
  4119e4:	fstp   DWORD PTR [ebp-0x73]
  4119e7:	xchg   edi,eax
  4119e8:	mov    WORD PTR [esi+ecx*1-0x4c],fs
  4119ec:	add    esi,DWORD PTR [esi+0x3644891a]
  4119f2:	clc    
  4119f3:	sub    edi,eax
  4119f5:	stos   BYTE PTR es:[edi],al
  4119f6:	aas    
  4119f7:	xchg   esi,eax
  4119f8:	pop    ebx
  4119f9:	dec    edx
  4119fa:	addr16 xchg edx,eax
  4119fc:	fiadd  WORD PTR [eax+0x57]
  4119ff:	adc    al,0xda
  411a01:	pop    ebp
  411a02:	loope  0x411a71
  411a04:	and    ah,ch
  411a06:	and    BYTE PTR [edi+0x77f1a321],al
  411a0c:	xor    al,0x8b
  411a0e:	mov    edi,0x41025862
  411a13:	and    al,0xfd
  411a15:	push   ebp
  411a16:	outs   dx,BYTE PTR ds:[esi]
  411a17:	mov    WORD PTR [ecx],cs
  411a19:	xchg   esi,eax
  411a1a:	ret    0xd1ff
  411a1d:	pop    esp
  411a1e:	push   ss
  411a1f:	(bad)  [ebx]
  411a21:	or     eax,0xf5b3eb99
  411a26:	mov    ebp,0x7bdbc19a
  411a2b:	test   DWORD PTR [edx-0x4b],ebp
  411a2e:	(bad)
  411a31:	mov    ecx,esp
  411a33:	ins    BYTE PTR es:[edi],dx
  411a34:	sbb    eax,0xcaa01af7
  411a39:	sub    BYTE PTR [eax],dl
  411a3b:	clc    
  411a3c:	jo     0x411ab6
  411a3e:	cmp    eax,0xe5a65d69
  411a43:	push   ss
  411a44:	std    
  411a45:	outs   dx,DWORD PTR ds:[esi]
  411a46:	jecxz  0x411a43
  411a48:	or     dl,al
  411a4a:	icebp  
  411a4b:	jne    0x411a1a
  411a4d:	inc    edx
  411a4e:	inc    edx
  411a4f:	mov    ebp,0xd9228ddc
  411a54:	mov    cl,0xcd
  411a56:	lock and BYTE PTR [edi],bl
  411a59:	jnp    0x411a82
  411a5b:	sub    eax,0xa785d337
  411a60:	mov    ebx,0x3f53526
  411a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a66:	adc    esi,edx
  411a68:	xor    al,0xf6
  411a6a:	rcr    DWORD PTR [eax-0x1f8b6a0e],cl
  411a70:	hlt    
  411a71:	int    0xf8
  411a73:	and    DWORD PTR [esi],ebx
  411a75:	test   DWORD PTR [ebp-0x55],esp
  411a78:	outs   dx,DWORD PTR ds:[esi]
  411a79:	push   0x2b
  411a7b:	pusha  
  411a7c:	xchg   ebx,eax
  411a7d:	jl     0x411a8c
  411a7f:	data16 jbe 0x411a22
  411a82:	ins    BYTE PTR es:[edi],dx
  411a83:	inc    eax
  411a84:	pop    si
  411a86:	push   es
  411a87:	test   eax,0xd4e56fc5
  411a8c:	add    ah,ah
  411a8e:	std    
  411a8f:	xchg   esp,eax
  411a90:	into   
  411a91:	adc    eax,0x3a142ca6
  411a96:	xchg   esp,eax
  411a97:	nop
  411a98:	jo     0x411a61
  411a9a:	jge    0x411ab5
  411a9c:	or     BYTE PTR [ebp+0x2507c5e4],ah
  411aa2:	add    eax,0x85657c65
  411aa7:	(bad)  
  411aa8:	cdq    
  411aa9:	mov    al,0x4d
  411aab:	sub    al,0xf4
  411aad:	inc    ecx
  411aae:	and    al,0xbf
  411ab0:	enter  0x904d,0x3
  411ab4:	sub    edx,DWORD PTR [edi-0x16]
  411ab7:	aad    0x90
  411ab9:	mov    WORD PTR [ebx+0xabdbd20],ds
  411abf:	(bad)  
  411ac0:	push   ebp
  411ac1:	push   cs
  411ac2:	adc    BYTE PTR [eax+ecx*2+0x3f],al
  411ac6:	add    dh,BYTE PTR [ecx+0x3f]
  411ac9:	icebp  
  411aca:	mov    ch,0x7e
  411acc:	xlat   BYTE PTR ds:[ebx]
  411acd:	pop    ebx
  411ace:	bound  edi,QWORD PTR [ecx-0x7e2f5219]
  411ad4:	out    dx,al
  411ad5:	xchg   edx,eax
  411ad6:	mov    bh,BYTE PTR [eax+0x6e]
  411ad9:	(bad)  
  411ada:	jp     0x411a8e
  411adc:	sub    eax,0xcdac902f
  411ae1:	pop    ss
  411ae2:	inc    esi
  411ae3:	and    ebp,eax
  411ae5:	outs   dx,DWORD PTR ds:[esi]
  411ae6:	adc    ebx,ebp
  411ae8:	sbb    ebp,eax
  411aea:	out    0xd8,al
  411aec:	rcr    ah,0x94
  411aef:	push   0x14
  411af1:	repz js 0x411b65
  411af4:	int3   
  411af5:	mov    ebp,DWORD PTR [ecx+0x14207a0f]
  411afb:	popf   
  411afc:	push   esi
  411afd:	mov    ebx,0x6f65e4d5
  411b02:	xchg   ebx,eax
  411b03:	and    BYTE PTR [esi],ch
  411b05:	sbb    ecx,ebp
  411b07:	sbb    dh,ah
  411b09:	jo     0x411b67
  411b0b:	jmp    0x2ccfb9be
  411b10:	inc    esi
  411b11:	(bad)  
  411b13:	jno    0x411b4a
  411b15:	ins    BYTE PTR es:[edi],dx
  411b16:	mov    ebp,0x6e1dfe6e
  411b1b:	dec    esi
  411b1c:	sub    eax,DWORD PTR [ebx+0x4f]
  411b1f:	or     eax,DWORD PTR [edx]
  411b21:	add    DWORD PTR [eax+eax*4],ebp
  411b24:	sub    DWORD PTR [edx],0x4a2e8d0e
  411b2a:	and    dh,BYTE PTR [ebp-0x79]
  411b2d:	int    0xf8
  411b2f:	xor    ah,bl
  411b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b32:	popa   
  411b33:	ins    BYTE PTR es:[edi],dx
  411b34:	xchg   ecx,eax
  411b35:	fadd   QWORD PTR [edx+ecx*2+0x1922fe0b]
  411b3c:	mov    ?,WORD PTR [eax+esi*1]
  411b3f:	xchg   DWORD PTR [edx],ebx
  411b41:	mov    cl,0x42
  411b43:	stos   BYTE PTR es:[edi],al
  411b44:	pop    edx
  411b45:	popf   
  411b46:	outs   dx,DWORD PTR ds:[esi]
  411b47:	fnstenv [edi+0x4b293d51]
  411b4d:	icebp  
  411b4e:	cmp    ecx,esp
  411b50:	dec    ebp
  411b51:	adc    DWORD PTR [edi-0x3418b7c8],esp
  411b57:	jecxz  0x411b67
  411b59:	mov    esp,0x8d57626c
  411b5e:	repnz pop ebp
  411b60:	xchg   ebx,eax
  411b61:	cmp    bl,BYTE PTR [ecx-0x46e93928]
  411b67:	(bad)  
  411b68:	xor    eax,0xe96ea895
  411b6d:	xchg   ebx,eax
  411b6e:	mov    ah,0xfe
  411b70:	xor    WORD PTR [edx-0x12e19ba9],ax
  411b77:	pop    es
  411b78:	and    ah,BYTE PTR [edx]
  411b7a:	test   BYTE PTR [edi],0x93
  411b7d:	sub    cl,bl
  411b7f:	adc    dh,BYTE PTR [eax-0x659bb89a]
  411b85:	mov    dh,BYTE PTR [edi-0x453d88e8]
  411b8b:	pop    ebx
  411b8c:	push   esi
  411b8d:	fs (bad) 
  411b8f:	or     esi,DWORD PTR [edx]
  411b91:	js     0x411be2
  411b93:	push   eax
  411b94:	pop    esp
  411b95:	cmp    DWORD PTR [ecx-0x11cf1fa0],0xa634ff6a
  411b9f:	add    BYTE PTR [ebx-0x269462fc],bh
  411ba5:	loop   0x411b9b
  411ba7:	(bad)  
  411ba8:	fwait
  411ba9:	outs   dx,BYTE PTR ds:[esi]
  411baa:	add    BYTE PTR [ebp+0x54],0x29
  411bae:	div    DWORD PTR [edi-0x2]
  411bb1:	xchg   ebp,eax
  411bb2:	popa   
  411bb3:	xchg   ebp,eax
  411bb4:	pushf  
  411bb5:	stos   DWORD PTR es:[edi],eax
  411bb6:	dec    ecx
  411bb7:	ror    ch,0x1d
  411bba:	sub    DWORD PTR [ecx+0x42ef4240],esp
  411bc0:	add    al,BYTE PTR [ebx+0x64b84b7f]
  411bc6:	xor    bh,BYTE PTR [esi-0x3f]
  411bc9:	or     edx,eax
  411bcb:	aas    
  411bcc:	stos   BYTE PTR es:[edi],al
  411bcd:	stc    
  411bce:	and    al,0x36
  411bd0:	mov    bh,0x13
  411bd2:	mov    dl,0x29
  411bd4:	mov    ebp,0x14cca030
  411bd9:	das    
  411bda:	xchg   esi,eax
  411bdb:	mov    WORD PTR [edi-0x727410f4],gs
  411be1:	mov    DWORD PTR [esi+eax*2],ebp
  411be4:	mov    eax,ds:0x6a78605c
  411be9:	mov    esi,0x5a112740
  411bee:	jmp    edx
  411bf0:	inc    ebp
  411bf1:	in     al,dx
  411bf2:	push   edx
  411bf3:	push   eax
  411bf4:	idiv   BYTE PTR [edi+0x34]
  411bf7:	xchg   ebx,eax
  411bf8:	sbb    bh,BYTE PTR [edi-0x23ed9869]
  411bfe:	imul   ebp,DWORD PTR [ebp-0x53],0x3be76a63
  411c05:	pop    es
  411c06:	jge    0x411c6d
  411c08:	retf   0x95e1
  411c0b:	cmp    BYTE PTR [ecx+0x25],0xc9
  411c0f:	out    dx,eax
  411c10:	scas   eax,DWORD PTR es:[edi]
  411c11:	xor    eax,0xd42c1e3e
  411c16:	and    BYTE PTR [ebp-0x19],dh
  411c19:	add    al,0x5e
  411c1b:	cmp    ah,BYTE PTR [ebx]
  411c1d:	or     ebp,ebp
  411c1f:	sbb    cl,bl
  411c21:	fcmovbe st,st(1)
  411c23:	add    DWORD PTR [ecx],esp
  411c25:	icebp  
  411c26:	jnp    0x411bde
  411c28:	je     0x411bee
  411c2a:	inc    eax
  411c2b:	dec    ebx
  411c2c:	push   edi
  411c2d:	xchg   al,ah
  411c2f:	call   0xb4272108
  411c34:	in     al,dx
  411c35:	repnz inc edx
  411c37:	fisub  DWORD PTR [ebx+0x74]
  411c3a:	aas    
  411c3b:	jmp    0x62e29645
  411c40:	mov    al,ds:0x36841569
  411c45:	mov    ebp,0x2d827eb8
  411c4a:	push   edx
  411c4b:	test   DWORD PTR [esi+0xa],edx
  411c4e:	sub    BYTE PTR [edx+0x20],dh
  411c51:	ret    
  411c52:	test   al,0x3e
  411c54:	and    eax,0x821e506
  411c59:	mov    ds:0x75877e4a,al
  411c5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c5f:	mov    ecx,0x74314699
  411c64:	cmc    
  411c65:	call   0x1c70:0x14f3d315
  411c6c:	or     BYTE PTR [edx-0x723bfd62],bh
  411c72:	sbb    eax,0x236ebb90
  411c77:	inc    DWORD PTR [ebx]
  411c79:	jecxz  0x411c7d
  411c7b:	pop    edi
  411c7c:	ror    BYTE PTR [eax],cl
  411c7e:	mov    ss,WORD PTR [ebx-0xb84e370]
  411c84:	mov    ebp,0xb0a28770
  411c89:	sbb    DWORD PTR [ecx+0x1],ecx
  411c8c:	pop    esp
  411c8d:	sahf   
  411c8e:	push   esp
  411c8f:	jb     0x411c27
  411c91:	es jo  0x411ca4
  411c94:	sub    DWORD PTR [edx],0xfffffff7
  411c97:	cdq    
  411c98:	pop    edi
  411c99:	sbb    al,0xd6
  411c9b:	adc    BYTE PTR [esi-0x7567bb55],dh
  411ca1:	and    eax,esi
  411ca3:	jmp    0xc4b5:0xec4df4d6
  411caa:	mov    esi,edi
  411cac:	sub    eax,0xe97d9004
  411cb1:	ret    
  411cb2:	iret   
  411cb3:	ins    DWORD PTR es:[edi],dx
  411cb4:	cmp    DWORD PTR [ebp+0x6],edx
  411cb7:	add    bh,BYTE PTR [ebx+0x5]
  411cba:	mov    ebp,0x8518c366
  411cbf:	adc    al,BYTE PTR [esp+esi*1-0x506259c7]
  411cc6:	in     eax,dx
  411cc7:	inc    DWORD PTR [ecx-0x1dfbaba8]
  411ccd:	sar    BYTE PTR [ebx+0x57],0x30
  411cd1:	sbb    BYTE PTR [ecx],ch
  411cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cd4:	div    DWORD PTR [ebp+0x63]
  411cd7:	inc    esp
  411cd8:	pop    ebp
  411cd9:	rcl    DWORD PTR [edx+0x17],0x2e
  411cdd:	dec    esp
  411cde:	xchg   esp,eax
  411cdf:	in     eax,0xf0
  411ce1:	xor    dh,BYTE PTR [ecx-0x15]
  411ce4:	or     BYTE PTR [edx],cl
  411ce6:	inc    ebp
  411ce7:	ret    0x4d82
  411cea:	pop    edx
  411ceb:	into   
  411cec:	(bad)  
  411ced:	cli    
  411cee:	mov    dh,cl
  411cf0:	push   eax
  411cf1:	cld    
  411cf2:	push   edi
  411cf3:	add    al,0xb8
  411cf5:	xlat   BYTE PTR ds:[ebx]
  411cf6:	inc    ebp
  411cf7:	or     eax,0xec914623
  411cfc:	push   edi
  411cfd:	pop    ebx
  411cfe:	(bad)  [ecx-0x601f96f0]
  411d04:	push   cs
  411d05:	add    esp,DWORD PTR [ebp-0x16e10c02]
  411d0b:	dec    esp
  411d0c:	lods   eax,DWORD PTR fs:[esi]
  411d0e:	adc    dl,dl
  411d10:	popa   
  411d11:	push   0x43
  411d13:	ins    DWORD PTR es:[edi],dx
  411d14:	pushf  
  411d15:	ret    
  411d16:	sbb    ecx,DWORD PTR [edx]
  411d18:	push   esi
  411d19:	dec    ebx
  411d1a:	mov    dh,ah
  411d1c:	sub    al,0xb7
  411d1e:	mov    DWORD PTR [eax+0x783a4ea9],ebp
  411d24:	int3   
  411d25:	fisub  WORD PTR [ecx+0x59553d59]
  411d2b:	sbb    ebx,esi
  411d2d:	add    BYTE PTR [ebx+0x29b998da],al
  411d33:	sbb    eax,0x909ebdb9
  411d38:	mov    BYTE PTR [ebx],0x7a
  411d3b:	mov    bl,0xe9
  411d3d:	icebp  
  411d3e:	inc    ebx
  411d3f:	mov    eax,0xa3d80ef7
  411d44:	js     0x411cdd
  411d46:	scas   al,BYTE PTR es:[edi]
  411d47:	sbb    ecx,DWORD PTR [eax]
  411d49:	int3   
  411d4a:	fnstsw WORD PTR [ecx]
  411d4c:	cld    
  411d4d:	or     eax,0x93310727
  411d52:	inc    eax
  411d53:	rcr    ch,1
  411d55:	jmp    FWORD PTR [eax+0x2b]
  411d58:	in     al,0x99
  411d5a:	bswap  edi
  411d5c:	push   ebx
  411d5d:	dec    edx
  411d5e:	ins    DWORD PTR es:[edi],dx
  411d5f:	std    
  411d60:	mov    ebx,esp
  411d62:	push   0xffffff96
  411d64:	int    0x76
  411d66:	retf   0xea43
  411d69:	or     edx,DWORD PTR [ebp-0x2e]
  411d6c:	or     al,0x37
  411d6e:	loopne 0x411dd2
  411d70:	xor    eax,0x182bda18
  411d75:	mov    esi,0xaf4b3dc2
  411d7a:	cmp    cl,BYTE PTR [ebp-0x24]
  411d7d:	mov    ss,WORD PTR [esi+0x7a]
  411d80:	dec    esi
  411d81:	pop    ebp
  411d82:	and    eax,0xa0e0eff0
  411d87:	xor    esp,ebx
  411d89:	std    
  411d8a:	test   DWORD PTR ds:[esi],0xf21dacf0
  411d91:	repz sbb dl,ch
  411d94:	push   ecx
  411d95:	(bad)  
  411d96:	std    
  411d97:	iret   
  411d98:	pop    esp
  411d99:	and    al,0xb3
  411d9b:	repz push 0x37
  411d9e:	mov    bh,0x46
  411da0:	inc    BYTE PTR [edx]
  411da2:	adc    DWORD PTR fs:[ebx+0x25],eax
  411da6:	addr16 jmp 0x411d6d
  411da9:	mov    ds:0x5872a614,eax
  411dae:	mov    dh,0xe8
  411db0:	stc    
  411db1:	adc    dl,bl
  411db3:	jecxz  0x411db5
  411db5:	call   0x2c5dbbc3
  411dba:	sbb    eax,0x19993fcc
  411dbf:	in     al,dx
  411dc0:	xor    dh,BYTE PTR [edx]
  411dc2:	jns    0x411de3
  411dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dc5:	sbb    cl,BYTE PTR [ebx-0xedd80d]
  411dcb:	fldenv [eax]
  411dcd:	scas   eax,DWORD PTR es:[edi]
  411dce:	loope  0x411d54
  411dd0:	clc    
  411dd1:	out    dx,eax
  411dd2:	jp     0x411dab
  411dd4:	xchg   edi,eax
  411dd5:	or     BYTE PTR ds:0xc2d624cb,ah
  411ddb:	mov    ebp,DWORD PTR [edx+0x504a3ad1]
  411de1:	sub    eax,0x80222dd9
  411de6:	test   BYTE PTR ds:0x17c89dce,bh
  411dec:	cwde   
  411ded:	in     al,0x44
  411def:	pop    ecx
  411df0:	arpl   WORD PTR [eax],cx
  411df2:	int    0xf3
  411df4:	or     esp,DWORD PTR [ebx+0x6e583e08]
  411dfa:	sub    ebp,DWORD PTR [esi-0x10301b28]
  411e00:	stos   DWORD PTR es:[edi],eax
  411e01:	pushf  
  411e02:	sub    DWORD PTR [edx+0x24],0xffffffe1
  411e06:	fwait
  411e07:	sub    ch,BYTE PTR [edx]
  411e09:	mov    ah,0x9
  411e0b:	xor    DWORD PTR [ecx],ebx
  411e0d:	and    eax,ebx
  411e0f:	xlat   BYTE PTR ds:[ebx]
  411e10:	adc    cl,ah
  411e12:	push   cs
  411e13:	repz (bad) 
  411e15:	adc    bl,al
  411e17:	sbb    al,0xb1
  411e19:	loop   0x411e42
  411e1b:	push   ebp
  411e1c:	jae    0x411dbd
  411e1e:	popf   
  411e1f:	and    BYTE PTR [ebp+0x6c],ch
  411e22:	add    dh,cl
  411e24:	cli    
  411e25:	inc    ebp
  411e26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e27:	sub    edi,DWORD PTR [esi-0x39ffc58e]
  411e2d:	sar    BYTE PTR [ebx+0x76],cl
  411e30:	ins    DWORD PTR es:[edi],dx
  411e31:	data16 lods al,BYTE PTR ds:[esi]
  411e33:	jl     0x411e1f
  411e35:	retf   
  411e36:	out    0x93,eax
  411e38:	enter  0xa4ba,0x10
  411e3c:	or     eax,0x2043e3ca
  411e41:	dec    edx
  411e42:	sub    al,0x2b
  411e44:	jp     0x411e3f
  411e46:	or     bl,BYTE PTR [ebp+0x33]
  411e49:	(bad)  
  411e4a:	pop    edx
  411e4b:	in     eax,0x79
  411e4d:	inc    esp
  411e4e:	into   
  411e4f:	mov    bh,0x16
  411e51:	jne    0x411e83
  411e53:	and    edx,DWORD PTR [ebp+ebp*4-0x4eda4375]
  411e5a:	adc    bl,dl
  411e5c:	cmp    eax,0x1ec159b3
  411e61:	xchg   ebx,eax
  411e62:	aas    
  411e63:	sub    al,0x79
  411e65:	lock dec edx
  411e67:	pop    ebp
  411e68:	add    al,0xf4
  411e6a:	lahf   
  411e6b:	cwde   
  411e6c:	jae    0x411e34
  411e6e:	loop   0x411e91
  411e70:	dec    eax
  411e71:	dec    edi
  411e72:	ja     0x411e95
  411e74:	daa    
  411e75:	inc    ebx
  411e76:	sub    dl,0xed
  411e79:	push   esp
  411e7a:	pusha  
  411e7b:	pop    edx
  411e7c:	lods   al,BYTE PTR ds:[esi]
  411e7d:	or     BYTE PTR [edx-0x6],bh
  411e80:	ins    DWORD PTR es:[edi],dx
  411e81:	test   BYTE PTR [esi+0x3f],cl
  411e84:	test   eax,0x76137f10
  411e89:	fwait
  411e8a:	and    eax,0xe9f06bd8
  411e8f:	stos   BYTE PTR es:[edi],al
  411e90:	aas    
  411e91:	mov    ecx,0x78c8ad34
  411e96:	sbb    al,0xa7
  411e98:	paddusb mm4,QWORD PTR [esi-0x43]
  411e9c:	imul   esi,DWORD PTR [edx+0x64],0xffffff84
  411ea0:	adc    ebx,DWORD PTR [edi+0x692666b6]
  411ea6:	xchg   ch,cl
  411ea8:	jbe    0x411ea7
  411eaa:	sbb    al,0xa
  411eac:	inc    eax
  411ead:	cmp    eax,0x8b33ce37
  411eb2:	ret    0xfaff
  411eb5:	xchg   ebp,edi
  411eb7:	and    eax,0xee23f02d
  411ebc:	out    dx,eax
  411ebd:	jno    0x411f26
  411ebf:	lds    eax,FWORD PTR [eax]
  411ec1:	push   edx
  411ec2:	sbb    BYTE PTR [edi],0xbd
  411ec5:	in     eax,dx
  411ec6:	xchg   edx,eax
  411ec7:	ret    
  411ec8:	adc    esi,DWORD PTR [edx+0x41]
  411ecb:	stc    
  411ecc:	sub    DWORD PTR [edi-0x14],edi
  411ecf:	out    0xa,al
  411ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ed2:	out    0x17,al
  411ed4:	xchg   esi,eax
  411ed5:	call   0xa22bd3d8
  411eda:	jp     0x411f02
  411edc:	cmp    BYTE PTR [esi-0xd],dh
  411edf:	adc    dl,0x45
  411ee2:	mov    bh,0x6f
  411ee4:	shl    ecx,cl
  411ee6:	dec    esi
  411ee7:	jp     0x411f44
  411ee9:	jb     0x411f25
  411eeb:	daa    
  411eec:	cmp    bl,BYTE PTR [ecx-0x2528e849]
  411ef2:	inc    ebx
  411ef3:	js     0x411ea3
  411ef5:	sub    cl,0x3a
  411ef8:	sbb    ebx,0xdbad906d
  411efe:	mov    WORD PTR [edi-0x7],fs
  411f01:	mov    edi,0x84b494a1
  411f06:	idiv   DWORD PTR [edx+eiz*2]
  411f09:	dec    ebx
  411f0a:	sub    dl,BYTE PTR [edx-0x53a40cb6]
  411f10:	iret   
  411f11:	push   0x2d48a86e
  411f16:	sbb    edi,DWORD PTR [edi]
  411f18:	push   esp
  411f19:	repz mov ebx,0xad092acd
  411f1f:	jnp    0x411f86
  411f21:	add    esp,DWORD PTR [ecx-0x78ad211e]
  411f27:	fadd   QWORD PTR [ecx+0x24]
  411f2a:	iret   
  411f2b:	pop    esp
  411f2c:	out    0x7c,al
  411f2e:	(bad)  
  411f2f:	into   
  411f30:	scas   al,BYTE PTR es:[edi]
  411f31:	xor    eax,0xf942ba71
  411f36:	arpl   WORD PTR [esi+0x5fdf9f58],di
  411f3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f3d:	pop    esi
  411f3e:	ss push edx
  411f40:	mov    ebp,0x77058e77
  411f45:	push   cs
  411f46:	call   0x5024ee5b
  411f4b:	and    eax,0xd5b8c2c8
  411f50:	retf   
  411f51:	cli    
  411f52:	clc    
  411f53:	jge    0x411fcc
  411f55:	dec    eax
  411f56:	and    al,0xa7
  411f58:	jle    0x411f1f
  411f5a:	fstp   QWORD PTR [edi+0x6bc74bea]
  411f60:	in     al,0x92
  411f62:	sbb    ch,BYTE PTR [edx]
  411f64:	pop    ebx
  411f65:	and    al,0x17
  411f67:	adc    al,0xf9
  411f69:	push   ecx
  411f6a:	sub    dl,ch
  411f6c:	outs   dx,DWORD PTR ds:[esi]
  411f6d:	and    bh,BYTE PTR [edx-0x37]
  411f70:	pop    esp
  411f71:	sub    ah,bl
  411f73:	or     al,0xf2
  411f75:	add    BYTE PTR ds:0xd8f08385,ch
  411f7b:	sti    
  411f7c:	es pushf 
  411f7e:	adc    bl,BYTE PTR [edi+ebp*8-0x75]
  411f82:	mov    ebp,0xd2d7ac7b
  411f87:	retf   0x85dc
  411f8a:	adc    bl,BYTE PTR [edi-0xe]
  411f8d:	neg    DWORD PTR [ebp+0x307cb34]
  411f93:	aas    
  411f94:	sahf   
  411f95:	clc    
  411f96:	inc    edx
  411f97:	cwde   
  411f98:	and    DWORD PTR [edx+0x52],edi
  411f9b:	sub    eax,0xd630caea
  411fa0:	inc    esp
  411fa1:	pop    edi
  411fa2:	arpl   WORD PTR [ecx+0x60a6a4a4],di
  411fa8:	ret    0xc424
  411fab:	stc    
  411fac:	ins    BYTE PTR es:[edi],dx
  411fad:	out    0x4f,eax
  411faf:	nop
  411fb0:	xlat   BYTE PTR ds:[ebx]
  411fb1:	out    dx,eax
  411fb2:	fs mov ch,0x67
  411fb5:	add    esp,DWORD PTR [eax+ebp*1]
  411fb8:	push   esp
  411fb9:	clc    
  411fba:	fmul   QWORD PTR [eax+eax*4+0x72afa608]
  411fc1:	xchg   bh,al
  411fc3:	cs addr16 pop es
  411fc6:	imul   ebp,DWORD PTR [eax+0x79b01df5],0x4bf1ff11
  411fd0:	mov    ch,0x35
  411fd2:	jp     0x411fab
  411fd4:	loope  0x412008
  411fd6:	in     eax,dx
  411fd7:	or     edx,DWORD PTR ds:0x7331000e
  411fdd:	arpl   WORD PTR [bp+0x6e41],sp
  411fe2:	cdq    
  411fe3:	rcr    BYTE PTR cs:[ecx],0x3b
  411fe7:	pop    es
  411fe8:	lods   al,BYTE PTR ds:[esi]
  411fe9:	(bad)  
  411fea:	mov    al,0xc4
  411fec:	mov    ebx,0x76599b9
  411ff1:	pop    ebp
  411ff2:	jp     0x411fc3
  411ff4:	or     al,0x9b
  411ff6:	repnz mov bh,0x9b
  411ff9:	cmp    ecx,DWORD PTR [edx-0x71]
  411ffc:	cld    
  411ffd:	push   edi
  411ffe:	cmp    ecx,DWORD PTR [ecx-0x2ffa29d8]
  412004:	(bad)  
  412005:	in     al,dx
  412006:	and    DWORD PTR ds:0x22c97552,ecx
  41200c:	mov    esi,0x60feb518
  412011:	jns    0x412046
  412013:	mov    ds:0x4b305cbc,al
  412018:	cmp    eax,0x18210f74
  41201d:	xor    DWORD PTR [eax-0x1],esi
  412020:	jmp    0x803a:0x1c15d683
  412027:	pop    ebx
  412028:	cmp    al,0xdc
  41202a:	xor    dh,ah
  41202c:	or     eax,0x6bd3de5d
  412031:	xchg   ebx,eax
  412032:	aam    0x92
  412034:	push   ecx
  412035:	(bad)  
  412036:	mov    eax,ds:0xa2922bf5
  41203b:	push   0xcc4a83b8
  412040:	xor    dh,BYTE PTR [edx]
  412042:	xor    al,0xdd
  412044:	pop    ecx
  412045:	nop
  412046:	jp     0x411ffa
  412048:	jmp    0x637c4838
  41204d:	fwait
  41204e:	and    al,0x0
  412050:	cmp    ch,BYTE PTR [esi+0x3a]
  412053:	push   ebx
  412054:	fs out 0x19,al
  412057:	hlt    
  412058:	arpl   bp,sp
  41205a:	pop    ecx
  41205b:	popa   
  41205c:	jne    0x412006
  41205e:	lods   al,BYTE PTR ds:[esi]
  41205f:	cmp    eax,0x6ff2a1bb
  412064:	lods   al,BYTE PTR ds:[esi]
  412065:	and    DWORD PTR [esi-0x250a1767],esi
  41206b:	(bad)  [ebx-0x13]
  41206e:	scas   al,BYTE PTR es:[edi]
  41206f:	jmp    ebx
  412071:	mov    eax,0xb77b268c
  412076:	inc    edx
  412077:	aas    
  412078:	and    ebx,edx
  41207a:	sti    
  41207b:	mov    edi,0xe8690798
  412080:	add    ah,BYTE PTR [ebp-0x78]
  412083:	jno    0x412066
  412085:	ss xchg esi,eax
  412087:	sti    
  412088:	mov    bh,BYTE PTR [eax]
  41208a:	fcmovne st,st(5)
  41208c:	loope  0x4120e8
  41208e:	int3   
  41208f:	mov    ds:0x65d85f2c,eax
  412094:	mov    ds:0x542cd2dc,al
  412099:	stc    
  41209a:	or     BYTE PTR [eax],bh
  41209c:	addr16 sub eax,0xe168162d
  4120a2:	mul    DWORD PTR [ebp-0x2aa4fd52]
  4120a8:	mov    WORD PTR [eax+0x109c738a],ds
  4120ae:	test   BYTE PTR [esi],ch
  4120b0:	in     eax,0xc4
  4120b2:	outs   dx,BYTE PTR ds:[esi]
  4120b3:	push   0x31
  4120b5:	(bad)  
  4120b6:	push   eax
  4120b7:	(bad)  
  4120b8:	sub    al,0xb4
  4120ba:	mov    dh,0xd9
  4120bc:	mov    dl,0xb0
  4120be:	sub    DWORD PTR [eax-0x59],esp
  4120c1:	sub    al,0x7b
  4120c3:	ficom  WORD PTR [edi+ebp*8-0x4c1a948d]
  4120ca:	js     0x4120ed
  4120cc:	push   edx
  4120cd:	test   DWORD PTR [eax-0x16657a2a],esi
  4120d3:	sbb    edx,0x195c735c
  4120d9:	outs   dx,DWORD PTR ds:[esi]
  4120da:	je     0x412092
  4120dc:	jne    0x41208a
  4120de:	rcl    DWORD PTR ds:0xb2607f9f,cl
  4120e4:	int3   
  4120e5:	pop    eax
  4120e6:	sbb    eax,0xf2a3bd1e
  4120eb:	sbb    al,0xc7
  4120ed:	rol    DWORD PTR [edi],cl
  4120ef:	or     edi,DWORD PTR [esi+0x28]
  4120f2:	mov    bl,0x58
  4120f4:	pop    ebx
  4120f5:	in     al,dx
  4120f6:	add    esi,DWORD PTR [esi+0x62cd6846]
  4120fc:	push   eax
  4120fd:	lds    ebx,FWORD PTR [eax-0x6f64524a]
  412103:	test   bl,ch
  412105:	inc    esp
  412106:	adc    al,0x6
  412108:	lds    ebx,FWORD PTR [edi-0x169be4e6]
  41210e:	pop    esp
  41210f:	sbb    BYTE PTR [esi],al
  412111:	les    edi,FWORD PTR [eax+0x47a70c3e]
  412117:	outs   dx,BYTE PTR ds:[esi]
  412118:	cmp    bh,BYTE PTR [ecx+0x28cc4d56]
  41211e:	(bad)  
  412120:	or     esi,DWORD PTR [edi+0x357ae162]
  412126:	cwde   
  412127:	dec    ebx
  412128:	push   ebp
  412129:	jge    0x4120ac
  41212b:	aaa    
  41212c:	sub    bh,ch
  41212e:	cmc    
  41212f:	out    dx,eax
  412130:	push   eax
  412131:	int3   
  412132:	inc    esp
  412133:	call   0x993d8d3
  412138:	lods   al,BYTE PTR ds:[esi]
  412139:	std    
  41213a:	or     DWORD PTR [ecx],esi
  41213c:	pop    edi
  41213d:	jns    0x41212f
  41213f:	repz ret 
  412141:	dec    al
  412143:	or     esp,DWORD PTR [edx+eax*1]
  412146:	adc    eax,0x6b570cb0
  41214b:	xor    ebx,DWORD PTR [edx-0x5b]
  41214e:	mov    ds:0xfb47c547,al
  412153:	dec    edi
  412154:	mov    ds:0xd3d8519d,eax
  412159:	jmp    0x4e238085
  41215e:	jg     0x4121bf
  412160:	push   cs
  412161:	ret    
  412162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412163:	adc    al,0x2b
  412165:	outs   dx,DWORD PTR ss:[esi]
  412167:	cdq    
  412168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412169:	mov    DWORD PTR ds:[edx+0x370c06e0],esp
  412170:	dec    ecx
  412171:	xchg   ebp,eax
  412172:	retf   0x1c15
  412175:	xor    DWORD PTR [ebx-0x11],0x55af7967
  41217c:	mov    bl,0x98
  41217e:	inc    ecx
  41217f:	cmp    ebx,ecx
  412181:	xchg   esp,eax
  412182:	js     0x4121ba
  412184:	std    
  412185:	cmp    edi,edx
  412187:	dec    edi
  412188:	sub    DWORD PTR [esi-0x48],0x68c6be29
  41218f:	xor    DWORD PTR [ebx+0x2e8d92fa],edx
  412195:	in     al,dx
  412196:	out    dx,al
  412197:	lea    esi,[ecx]
  412199:	sub    cl,BYTE PTR [ecx+0x22]
  41219c:	mov    ebx,0xda74bdaf
  4121a1:	jnp    0x412180
  4121a3:	inc    ecx
  4121a4:	inc    edx
  4121a5:	fadd   st(2),st
  4121a7:	mov    bh,0xe
  4121a9:	mov    ch,0xa9
  4121ab:	or     al,0x8f
  4121ad:	cs fincstp 
  4121b0:	or     al,0x3a
  4121b2:	inc    eax
  4121b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121b4:	arpl   WORD PTR [ebp+0x26],bp
  4121b7:	loopne 0x41214e
  4121b9:	sub    cl,BYTE PTR [edx-0x5835c27]
  4121bf:	test   DWORD PTR [ecx],ebp
  4121c1:	sbb    al,0x91
  4121c3:	(bad)  
  4121c4:	int    0x8f
  4121c6:	and    eax,0x45e77292
  4121cb:	stos   DWORD PTR es:[edi],eax
  4121cc:	enter  0x903d,0x94
  4121d0:	jl     0x41221e
  4121d2:	xchg   ecx,eax
  4121d3:	cdq    
  4121d4:	mov    al,0xa
  4121d6:	jp     0x412175
  4121d8:	outs   dx,WORD PTR ds:[esi]
  4121da:	or     edi,esi
  4121dc:	lods   al,BYTE PTR ds:[esi]
  4121dd:	int3   
  4121de:	sbb    bh,al
  4121e0:	dec    esi
  4121e1:	mov    ah,0x63
  4121e3:	sub    ah,BYTE PTR [esi+0x6b]
  4121e6:	fisub  DWORD PTR ds:0x99e493e7
  4121ec:	push   0xffffff81
  4121ee:	sbb    DWORD PTR [esi],0x4f
  4121f1:	and    al,0xa5
  4121f3:	mov    ebx,0x2839a5e6
  4121f8:	and    ebx,edi
  4121fa:	mov    ah,0xbd
  4121fc:	xor    ch,dl
  4121fe:	and    bl,BYTE PTR [eax-0x7b]
  412201:	mov    ebp,0x13684ff8
  412206:	mov    bl,0x2c
  412208:	shl    BYTE PTR [edx],cl
  41220a:	fwait
  41220b:	mov    dl,0xd5
  41220d:	mov    ds:0x25c2e76a,al
  412212:	addr16 pop edi
  412214:	ja     0x4121b3
  412216:	ror    DWORD PTR [ebx-0x31],0x3d
  41221a:	loope  0x412285
  41221c:	stc    
  41221d:	loopne 0x4121a1
  41221f:	jmp    0xdc96:0xa07d8a26
  412226:	or     edi,edi
  412228:	adc    eax,0x40a54804
  41222d:	sub    esi,esi
  41222f:	sahf   
  412230:	nop
  412231:	mov    edi,0xd17d1e05
  412236:	popa   
  412237:	jnp    0x4121de
  412239:	jae    0x4122b4
  41223b:	pop    ds
  41223c:	jl     0x4121cf
  41223e:	jno    0x412287
  412240:	arpl   WORD PTR [esi+0x5f25f5b9],si
  412246:	ror    BYTE PTR [edx+0x6a86a474],1
  41224c:	retf   0x20d5
  41224f:	(bad)  
  412250:	ds push edx
  412252:	pop    ecx
  412253:	sub    eax,0xc4780b5f
  412258:	mov    bl,0x5d
  41225a:	out    dx,eax
  41225b:	adc    DWORD PTR [eax],eax
  41225d:	sar    ebp,1
  41225f:	or     eax,edi
  412261:	and    al,0xbf
  412263:	pop    ebx
  412264:	nop
  412265:	int    0x26
  412267:	adc    DWORD PTR [ecx-0x5a3be285],eax
  41226d:	fdivr  DWORD PTR [eax+0x70]
  412270:	out    0xfc,eax
  412272:	inc    ebp
  412273:	mov    ch,0x24
  412275:	sbb    edi,edi
  412277:	jmp    0x412232
  412279:	and    al,0x37
  41227b:	mov    BYTE PTR [eax+0x33b231c5],ah
  412281:	inc    ebx
  412282:	sub    dl,bl
  412284:	mov    eax,ds:0xb5ca557f
  412289:	cdq    
  41228a:	lods   al,BYTE PTR ds:[esi]
  41228b:	inc    esi
  41228c:	and    eax,ebp
  41228e:	push   ebx
  41228f:	xor    DWORD PTR [ecx+0x46],ecx
  412292:	into   
  412293:	pop    es
  412294:	scas   eax,DWORD PTR es:[edi]
  412295:	out    0xc8,al
  412297:	in     eax,0x25
  412299:	lea    edi,[esi]
  41229b:	enter  0x510c,0x53
  41229f:	popa   
  4122a0:	jge    0x412295
  4122a2:	repz out 0xac,al
  4122a5:	fsubr  st,st(6)
  4122a7:	inc    esi
  4122a8:	jbe    0x4122a6
  4122aa:	jmp    0x59ae2f49
  4122af:	pop    ebx
  4122b0:	les    ebp,FWORD PTR [ebx+edx*2+0x2e]
  4122b4:	repz push esp
  4122b6:	ins    BYTE PTR es:[edi],dx
  4122b7:	and    dh,BYTE PTR [ebp-0x4bc05416]
  4122bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122be:	pop    ebx
  4122bf:	sbb    ecx,DWORD PTR [esi+edx*4-0x7d]
  4122c3:	outs   dx,BYTE PTR ds:[esi]
  4122c4:	push   ds
  4122c5:	loop   0x412303
  4122c7:	lds    edx,FWORD PTR [ebx+0x72d49cce]
  4122cd:	neg    DWORD PTR [ecx-0x5f]
  4122d0:	std    
  4122d1:	jns    0x412351
  4122d3:	sti    
  4122d4:	mov    ds:0x9f3c6f9f,eax
  4122d9:	fbstp  TBYTE PTR [ebx]
  4122db:	or     DWORD PTR ds:0x6fa66be7,0x74
  4122e2:	(bad)  
  4122e3:	push   edi
  4122e4:	daa    
  4122e5:	mov    dl,0x26
  4122e7:	and    eax,0x78e63e3f
  4122ec:	inc    esi
  4122ed:	mov    fs,WORD PTR [ecx*1+0x65e232c0]
  4122f4:	sub    DWORD PTR ss:[esi],edx
  4122f7:	retf   0xf584
  4122fa:	loope  0x4122bd
  4122fc:	aam    0xcc
  4122fe:	test   al,dh
  412300:	mov    gs,esp
  412302:	xor    DWORD PTR [ebp-0x3d3c5ca8],esp
  412308:	ret    
  412309:	or     al,0x6
  41230b:	add    ch,BYTE PTR [ebx+0x3a]
  41230e:	jmp    0xedd9ca9b
  412313:	lahf   
  412314:	add    eax,0xed10c3a3
  412319:	and    DWORD PTR [ebx],0xffffffbc
  41231c:	je     0x412350
  41231e:	mov    edx,0xc78cfd79
  412323:	shr    DWORD PTR [ebx-0x4],0x16
  412327:	pop    ebx
  412328:	mov    bh,0xc8
  41232a:	push   ecx
  41232b:	sbb    al,0x48
  41232d:	or     dl,BYTE PTR [eax-0x37b9770]
  412333:	and    eax,0x7d29a933
  412338:	lock and DWORD PTR ss:[ecx],edi
  41233c:	mov    ebx,0x75c7c641
  412341:	dec    ebp
  412342:	popf   
  412343:	test   eax,0x7b070396
  412348:	adc    DWORD PTR [ebx-0x47],edi
  41234b:	pop    eax
  41234c:	ins    DWORD PTR es:[edi],dx
  41234d:	xor    al,0xd0
  41234f:	mov    ah,0xcc
  412351:	xor    esi,DWORD PTR [edx]
  412353:	cmp    DWORD PTR [esi-0x4f],esp
  412356:	sub    DWORD PTR [ebx-0x5703384e],eax
  41235c:	sub    ah,BYTE PTR [edx-0x5e]
  41235f:	mov    cs,WORD PTR [eax+0x5dec29c1]
  412365:	bound  edx,QWORD PTR [eax]
  412367:	sbb    bl,ah
  412369:	jnp    0x412375
  41236b:	inc    ebp
  41236c:	inc    ebx
  41236d:	mov    gs,esp
  41236f:	enter  0x7911,0xe7
  412373:	popa   
  412374:	adc    eax,0x493f9673
  412379:	mov    al,BYTE PTR [edx]
  41237b:	dec    esp
  41237c:	mov    gs:0x7c827e1c,eax
  412382:	inc    ebp
  412383:	push   ebp
  412384:	rol    DWORD PTR [eax],cl
  412386:	jmp    FWORD PTR [ebp+0x45]
  412389:	push   ecx
  41238a:	mov    eax,0x33ba9fce
  41238f:	pushf  
  412390:	fmul   st,st(5)
  412392:	sub    DWORD PTR [esi+0x1ddd4d46],esi
  412398:	xchg   ebp,eax
  412399:	stos   BYTE PTR es:[edi],al
  41239a:	mov    BYTE PTR [eax],0xc5
  41239d:	adc    ch,ah
  41239f:	popa   
  4123a0:	fiadd  WORD PTR [eax+edi*8+0x22]
  4123a4:	stc    
  4123a5:	mov    esp,0xfa94a620
  4123aa:	jecxz  0x4123bb
  4123ac:	and    eax,0x74933e5f
  4123b1:	push   ebp
  4123b2:	and    DWORD PTR [esi-0x58c2cc5e],ebp
  4123b8:	into   
  4123b9:	mov    ebx,0xa0bf8c9f
  4123be:	mov    edx,0x6b52eec4
  4123c3:	popf   
  4123c4:	aas    
  4123c5:	mov    dl,0xcb
  4123c7:	xchg   dl,dl
  4123c9:	sbb    DWORD PTR [ecx-0x3d058408],edi
  4123cf:	xchg   ebp,eax
  4123d0:	aaa    
  4123d1:	in     al,dx
  4123d2:	retf   
  4123d3:	js     0x4123aa
  4123d5:	and    al,0x83
  4123d7:	mov    esi,0x6ae15c82
  4123dc:	test   eax,0x886bc01d
  4123e1:	jmp    0xbcdf8372
  4123e6:	mov    eax,ds:0x3917c06d
  4123eb:	test   eax,0x71e3a77f
  4123f0:	mov    ds:0xba89c56a,eax
  4123f5:	es mov bh,0x51
  4123f8:	int3   
  4123f9:	cmc    
  4123fa:	out    dx,al
  4123fb:	sbb    al,0xeb
  4123fd:	stos   BYTE PTR es:[edi],al
  4123fe:	mov    ah,ch
  412400:	sbb    esp,DWORD PTR [eax]
  412402:	int    0x8c
  412404:	(bad)  
  412405:	mov    dh,0xcf
  412407:	push   edi
  412408:	mov    cl,0x29
  41240a:	in     eax,0xc
  41240c:	sbb    eax,0xc6aba313
  412411:	mul    DWORD PTR [edi+0x7f4bafa1]
  412417:	inc    esp
  412418:	sub    eax,edi
  41241a:	aaa    
  41241b:	push   ebx
  41241c:	scas   al,BYTE PTR es:[edi]
  41241d:	mov    eax,0x60f12e8c
  412422:	daa    
  412423:	push   0xffffffcb
  412425:	imul   eax,edx,0xbbbaf967
  41242b:	cs out 0xa4,al
  41242e:	pop    esi
  41242f:	jae    0x4123b8
  412431:	aaa    
  412432:	inc    esi
  412433:	push   eax
  412434:	xor    edx,0xffffffa8
  412437:	jg     0x4123c2
  412439:	mov    esi,DWORD PTR ds:0x2305c4c8
  41243f:	jge    0x412413
  412441:	(bad)
  412444:	leave  
  412445:	adc    eax,0x7a3fb26
  41244a:	mov    BYTE PTR [ecx-0x5db1f23b],dl
  412450:	sub    ebp,DWORD PTR [edi]
  412452:	sub    edx,DWORD PTR [eax+ebp*8]
  412455:	jg     0x4124d1
  412457:	icebp  
  412458:	cli    
  412459:	mov    ch,0x86
  41245b:	lods   eax,DWORD PTR ds:[esi]
  41245c:	loop   0x4124dc
  41245e:	mov    DWORD PTR [ecx],0x57a42d69
  412464:	mov    edx,0xebfe4d0e
  412469:	mov    esi,0xccee8e81
  41246e:	sub    cl,BYTE PTR [ebx-0x30d36f89]
  412474:	inc    esp
  412475:	in     eax,dx
  412476:	daa    
  412477:	ret    
  412478:	std    
  412479:	div    DWORD PTR [esi-0x2b08fbe]
  41247f:	sbb    bl,ah
  412481:	fiadd  WORD PTR [eax-0x64]
  412484:	xor    DWORD PTR [ecx+0x1b],edx
  412487:	int    0x7
  412489:	(bad)  
  41248a:	jbe    0x41244c
  41248c:	fnsave [ebp-0x112e845e]
  412492:	ret    
  412493:	xor    BYTE PTR [ebx-0x1e],0x71
  412497:	call   0x2d9698f8
  41249c:	fidiv  WORD PTR [eax-0x13]
  41249f:	push   ebx
  4124a0:	cmp    esi,DWORD PTR [edx+0x4a]
  4124a3:	sti    
  4124a4:	push   0x5a4436d3
  4124a9:	sub    BYTE PTR [eax],0x76
  4124ac:	cmp    BYTE PTR [edx+0x69],ch
  4124af:	mov    eax,0xf60f2765
  4124b4:	aad    0xd6
  4124b6:	sub    eax,0x7cb95b2a
  4124bb:	in     al,0x8b
  4124bd:	sti    
  4124be:	jg     0x412444
  4124c0:	xor    DWORD PTR [ecx+0x69],ebx
  4124c3:	(bad)  
  4124c4:	(bad)  
  4124c5:	push   es
  4124c6:	mov    ch,0x93
  4124c8:	aaa    
  4124c9:	add    DWORD PTR [ebx+0x28],ebx
  4124cc:	or     BYTE PTR [ebp-0xa275e1d],bl
  4124d2:	into   
  4124d3:	dec    edx
  4124d4:	jl     0x412486
  4124d6:	xchg   DWORD PTR ds:0x98f6a11d,esp
  4124dc:	stc    
  4124dd:	fdiv   QWORD PTR [ecx-0x5]
  4124e0:	lea    esi,[ecx]
  4124e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124e3:	mov    cl,0xe1
  4124e5:	and    cl,BYTE PTR [ecx-0x29]
  4124e8:	xchg   ecx,eax
  4124e9:	pop    ebx
  4124ea:	je     0x4124db
  4124ec:	cld    
  4124ed:	aaa    
  4124ee:	outs   dx,BYTE PTR ds:[esi]
  4124ef:	mov    ecx,0xa6fa3031
  4124f4:	xchg   esi,eax
  4124f5:	pop    ds
  4124f6:	out    0xb2,al
  4124f8:	mov    ds:0xc43e9dae,eax
  4124fd:	or     edx,ebx
  4124ff:	outs   dx,DWORD PTR ds:[esi]
  412500:	push   eax
  412501:	imul   esi,ecx,0x3d
  412504:	cmp    ebp,DWORD PTR [edx+0x1b72cb44]
  41250a:	and    ebp,ecx
  41250c:	shl    ch,1
  41250e:	xor    DWORD PTR [edi],edx
  412510:	outs   dx,BYTE PTR ds:[esi]
  412511:	and    DWORD PTR [ebp+0x42310baf],0x2f
  412518:	dec    edx
  412519:	test   eax,0xd4e35be5
  41251e:	jg     0x412544
  412520:	(bad)  [edx]
  412522:	mov    dh,BYTE PTR [esi+edi*4+0x6dd1c0f8]
  412529:	mov    edx,0x23f51d7c
  41252e:	xchg   esi,eax
  41252f:	shl    dh,1
  412531:	shr    DWORD PTR [ecx],cl
  412533:	shl    BYTE PTR [ebp-0x10],1
  412536:	and    al,BYTE PTR [esi+eax*1+0x2d9bb7dd]
  41253d:	dec    ebx
  41253e:	scas   eax,DWORD PTR es:[edi]
  41253f:	call   0x3fa6:0x6ad051e1
  412546:	mov    edi,0x6edff2d2
  41254b:	add    ebx,DWORD PTR [eax+0x6b]
  41254e:	out    dx,al
  41254f:	sbb    DWORD PTR [ebx],0xffffffa2
  412552:	sbb    ecx,DWORD PTR [edx+0x91b7141]
  412558:	or     eax,0x9771e2e8
  41255d:	and    DWORD PTR [esi-0x764e5d07],ebp
  412563:	mul    BYTE PTR [edi+0x4384fa77]
  412569:	mov    ds:0x941d560d,eax
  41256e:	push   edx
  41256f:	pop    edx
  412570:	xchg   edx,edx
  412572:	rol    cl,cl
  412574:	cmp    al,0x9
  412576:	fstp   QWORD PTR [ebx]
  412578:	pop    eax
  412579:	andps  xmm3,xmm0
  41257c:	add    eax,0xbebdb838
  412581:	cwde   
  412582:	mov    ah,BYTE PTR [esi]
  412584:	retf   
  412585:	jle    0x41250b
  412587:	push   es
  412588:	dec    ebx
  412589:	cld    
  41258a:	not    BYTE PTR [ebx-0x1d4ac751]
  412590:	mov    al,ds:0x9d608a2f
  412595:	arpl   WORD PTR [ebx],cx
  412597:	mov    esp,0xfb97611f
  41259c:	or     eax,0xf114970f
  4125a1:	jne    0x412587
  4125a3:	out    dx,al
  4125a4:	andnps xmm0,xmm4
  4125a7:	jg     0x412531
  4125a9:	and    dl,cl
  4125ab:	outs   dx,DWORD PTR ds:[esi]
  4125ac:	les    edx,FWORD PTR ds:0x6eb950c3
  4125b2:	int3   
  4125b3:	mov    al,0x26
  4125b5:	push   ss
  4125b6:	mov    al,0x75
  4125b8:	ins    DWORD PTR es:[edi],dx
  4125b9:	rcl    BYTE PTR [esi-0x1c8b7c7e],cl
  4125bf:	jl     0x412576
  4125c1:	or     DWORD PTR [eax+0x59],0x6515eaf
  4125c8:	stos   DWORD PTR es:[edi],eax
  4125c9:	inc    esi
  4125ca:	test   bh,al
  4125cc:	gs mov eax,0x837e957b
  4125d2:	xor    al,0x55
  4125d4:	add    eax,0x32901b58
  4125d9:	(bad)  
  4125da:	sti    
  4125db:	retf   
  4125dc:	mov    dl,ah
  4125de:	jp     0x41261d
  4125e0:	je     0x41260b
  4125e2:	pop    eax
  4125e3:	lods   eax,DWORD PTR ds:[esi]
  4125e4:	pop    es
  4125e5:	das    
  4125e6:	xor    DWORD PTR [edx-0x6176dd6c],ebp
  4125ec:	push   edi
  4125ed:	jns    0x412643
  4125ef:	add    DWORD PTR [edi+0x4c385d2c],0xb095e72b
  4125f9:	in     al,0xf1
  4125fb:	(bad)  
  4125fc:	lahf   
  4125fd:	dec    eax
  4125fe:	push   0x4a
  412600:	in     eax,dx
  412601:	and    BYTE PTR [ebx+ebx*4-0x5],0x41
  412606:	fs xor ah,cl
  412609:	mov    edx,0x9fbf496c
  41260e:	xor    eax,0x5185787
  412613:	fidivr WORD PTR [ecx+0x7c]
  412616:	gs xchg ecx,eax
  412618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412619:	mov    bh,0xec
  41261b:	sub    edx,esi
  41261d:	js     0x412608
  41261f:	jbe    0x4125c0
  412621:	sbb    al,0xdb
  412623:	clc    
  412624:	icebp  
  412625:	in     al,0xfe
  412627:	sbb    BYTE PTR [esi-0x56],bl
  41262a:	inc    edx
  41262b:	mov    cl,0x63
  41262d:	aaa    
  41262e:	push   cs
  41262f:	adc    dh,BYTE PTR ds:0x26c878e5
  412635:	(bad)  
  412636:	fidivr DWORD PTR [edi-0x6]
  412639:	add    dl,0xe
  41263c:	sub    eax,0x3fad697d
  412641:	aad    0x58
  412643:	std    
  412644:	xchg   BYTE PTR [esi],cl
  412646:	push   cs
  412647:	mov    bl,0xaa
  412649:	inc    eax
  41264a:	jne    0x4125cd
  41264c:	stos   BYTE PTR es:[edi],al
  41264d:	push   edx
  41264e:	xchg   ebp,eax
  41264f:	outs   dx,DWORD PTR ds:[esi]
  412650:	xchg   ebp,eax
  412651:	icebp  
  412652:	sub    ah,cl
  412654:	mov    ah,0xc
  412656:	pop    esp
  412657:	shl    DWORD PTR [ecx+0x29],0x7b
  41265b:	je     0x412661
  41265d:	xchg   esp,eax
  41265e:	in     al,dx
  41265f:	stos   BYTE PTR es:[edi],al
  412660:	push   eax
  412661:	retf   
  412662:	sbb    eax,0xb1c8d177
  412667:	sahf   
  412668:	out    0x5,al
  41266a:	(bad)  
  41266b:	mov    ebx,0x461c904f
  412670:	pop    ebx
  412671:	in     eax,0x31
  412673:	push   cs
  412674:	pop    esi
  412675:	inc    ebx
  412676:	nop
  412677:	bound  esi,QWORD PTR [ecx+0x4178b4aa]
  41267d:	xchg   ebp,eax
  41267e:	cwde   
  41267f:	mov    bl,0xb6
  412681:	cmp    eax,0xb917cca5
  412686:	push   eax
  412687:	hlt    
  412688:	cmp    DWORD PTR [esi],ecx
  41268a:	push   edx
  41268b:	fld    QWORD PTR [eax+0x24ce1071]
  412691:	(bad)  
  412692:	ficomp DWORD PTR [esi]
  412694:	push   edi
  412695:	pop    ebx
  412696:	and    al,0xd6
  412698:	add    BYTE PTR [esi],ch
  41269a:	or     al,0x9a
  41269c:	jmp    DWORD PTR [esi-0x6da0619b]
  4126a2:	cmp    DWORD PTR [esi+0x57f3c644],edx
  4126a8:	div    DWORD PTR [edx+0x3f]
  4126ab:	jbe    0x412693
  4126ad:	jmp    0x412695
  4126af:	add    eax,0xfd010fb1
  4126b4:	stc    
  4126b5:	imul   ebx,edi,0xffffffb0
  4126b8:	jno    0x412674
  4126ba:	std    
  4126bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126bc:	jmp    0x412701
  4126be:	pop    eax
  4126bf:	jge    0x41273f
  4126c1:	in     al,0x28
  4126c3:	adc    bh,ah
  4126c5:	fwait
  4126c6:	xor    edi,eax
  4126c8:	mov    ch,0xd6
  4126ca:	xor    al,0xae
  4126cc:	push   esi
  4126cd:	mov    dh,0x29
  4126cf:	sub    ebp,DWORD PTR [ebx-0x19]
  4126d2:	add    ah,al
  4126d4:	sbb    bl,0xe3
  4126d7:	mov    ah,0x52
  4126d9:	cmp    bl,BYTE PTR [ebp+0x4c]
  4126dc:	push   ss
  4126dd:	sub    eax,0xc17d9535
  4126e2:	ins    BYTE PTR es:[edi],dx
  4126e3:	call   0x7df8d46c
  4126e8:	loope  0x412759
  4126ea:	mov    ah,0xa5
  4126ec:	mov    ah,0x66
  4126ee:	and    edx,DWORD PTR [edi-0x42]
  4126f1:	add    BYTE PTR [eax-0x3a],dh
  4126f4:	js     0x4126a0
  4126f6:	nop
  4126f7:	mov    esp,ecx
  4126f9:	pop    esi
  4126fa:	jb     0x4126bc
  4126fc:	xor    BYTE PTR [edx-0x787879e9],bh
  412702:	clc    
  412703:	jb     0x41269a
  412705:	mov    dh,0xe6
  412707:	int    0x3e
  412709:	sbb    edi,DWORD PTR [edi-0x1c13c347]
  41270f:	mov    al,ds:0xaf5ce2d
  412714:	jg     0x412784
  412716:	push   0xff1ed626
  41271b:	jge    0x4126eb
  41271d:	pop    edx
  41271e:	xor    DWORD PTR [eax],ebx
  412720:	test   BYTE PTR [edx+0x4d36248e],ah
  412726:	mov    BYTE PTR [eax+0x63],0x7d
  41272a:	pop    esi
  41272b:	sbb    cl,BYTE PTR [eax+eax*2-0x247bd2b5]
  412732:	jnp    0x41277d
  412734:	mov    eax,0xb7f10a36
  412739:	out    0x8d,eax
  41273b:	shr    BYTE PTR [edx],0x54
  41273e:	sub    ebp,DWORD PTR ds:0xbab17476
  412744:	xchg   edi,eax
  412745:	rcr    esp,0xa9
  412748:	lock (bad) 
  41274b:	aaa    
  41274c:	add    BYTE PTR [edi-0x3],ah
  41274f:	mov    eax,ds:0xc340868d
  412754:	out    0xf,al
  412756:	xor    ecx,DWORD PTR [edx]
  412758:	mov    ecx,ds
  41275a:	xchg   ecx,eax
  41275b:	ja     0x412700
  41275d:	sbb    BYTE PTR [edi-0x28],dl
  412760:	jmp    0x412748
  412762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412763:	shr    DWORD PTR [ebx],cl
  412765:	fwait
  412766:	xchg   ebp,eax
  412767:	jo     0x4127c4
  412769:	mov    ah,0x8
  41276b:	test   DWORD PTR [ecx+0x6d],esp
  41276e:	mov    bh,0x4f
  412770:	imul   edi,DWORD PTR [esi+0x29],0x4725de3d
  412777:	fst    DWORD PTR cs:[edx]
  41277a:	cmp    bh,al
  41277c:	nop
  41277d:	push   eax
  41277e:	mov    ds:0x34a34db4,eax
  412783:	jmp    0x41270c
  412785:	dec    ebp
  412786:	and    eax,0xbec8f372
  41278b:	mov    ebp,0xe04765b7
  412790:	dec    ecx
  412791:	push   eax
  412792:	pop    ebx
  412793:	push   ebp
  412794:	xor    dl,bh
  412796:	into   
  412797:	push   cs
  412798:	out    dx,eax
  412799:	sub    DWORD PTR [esi+edx*2],esp
  41279c:	in     eax,0xec
  41279e:	adc    al,0x0
  4127a0:	ins    DWORD PTR es:[edi],dx
  4127a1:	and    ah,ch
  4127a3:	popf   
  4127a4:	ss jno 0x41278a
  4127a7:	adc    DWORD PTR [eax],ebx
  4127a9:	or     DWORD PTR [eax],edi
  4127ab:	mov    edx,0x447481e4
  4127b0:	mov    dh,dh
  4127b2:	pop    eax
  4127b3:	and    eax,ecx
  4127b5:	mov    ebx,0x3c98a6a9
  4127ba:	jl     0x4127f7
  4127bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127bd:	sti    
  4127be:	pusha  
  4127bf:	dec    ebx
  4127c0:	ror    DWORD PTR [ebx],0x6c
  4127c3:	ja     0x4127ba
  4127c5:	int3   
  4127c6:	outs   dx,DWORD PTR ds:[esi]
  4127c7:	pop    ds
  4127c8:	or     DWORD PTR [ebp+0x758cd25c],ebp
  4127ce:	(bad)  
  4127cf:	and    BYTE PTR [esi-0x4182ece0],bl
  4127d5:	xor    eax,0xf5e5b23e
  4127da:	add    eax,0xc9470910
  4127df:	int3   
  4127e0:	(bad)  
  4127e1:	push   0x57f40248
  4127e6:	jp     0x412781
  4127e8:	js     0x4127f0
  4127ea:	cwde   
  4127eb:	ror    DWORD PTR [ecx],cl
  4127ed:	lahf   
  4127ee:	pop    ebp
  4127ef:	rcr    BYTE PTR [edi],cl
  4127f1:	cmp    BYTE PTR [edx-0x71eb17ed],0xd4
  4127f8:	test   al,0x78
  4127fa:	dec    eax
  4127fb:	mov    dl,0x61
  4127fd:	and    BYTE PTR [edi+0x59],al
  412800:	push   eax
  412801:	push   es
  412802:	dec    esp
  412803:	pop    ecx
  412804:	repz dec esi
  412806:	cdq    
  412807:	mov    ds:0x2ca3bacf,al
  41280c:	sbb    eax,0x32763fe0
  412811:	in     eax,0xbf
  412813:	xor    DWORD PTR [ebx],eax
  412815:	dec    edi
  412816:	cli    
  412817:	in     al,dx
  412818:	cld    
  412819:	inc    eax
  41281a:	pop    ds
  41281b:	or     al,0xed
  41281d:	jmp    0x254b:0xc74c9672
  412824:	scas   eax,DWORD PTR es:[edi]
  412825:	retf   
  412826:	push   0x63d81c31
  41282b:	pop    esp
  41282c:	dec    ebx
  41282d:	mov    DWORD PTR [edi],edx
  41282f:	mov    bh,BYTE PTR [eax]
  412831:	loop   0x412875
  412833:	xchg   ecx,eax
  412834:	add    BYTE PTR [esi-0x4a],ah
  412837:	inc    esp
  412838:	shl    BYTE PTR [edi+0x5126f156],1
  41283e:	jle    0x412811
  412840:	sbb    bl,BYTE PTR [edx-0x1f]
  412843:	dec    ebx
  412844:	pop    edi
  412845:	mov    cl,dh
  412847:	retf   
  412848:	mov    ds:0x154e344c,eax
  41284d:	xlat   BYTE PTR ds:[ebx]
  41284e:	jns    0x4128cf
  412850:	pop    eax
  412851:	push   esi
  412852:	repz js 0x412845
  412855:	push   esp
  412856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412857:	stc    
  412858:	mov    edx,0xfe6b2b31
  41285d:	lahf   
  41285e:	fcmovnu st,st(3)
  412860:	inc    ebx
  412861:	mov    al,0xe
  412863:	mov    edx,0xf1e5be59
  412868:	dec    esp
  412869:	jmp    0x1651:0xb8ff88f3
  412870:	inc    edi
  412871:	outs   dx,DWORD PTR ds:[esi]
  412872:	rol    DWORD PTR [edx],cl
  412874:	adc    al,0xa9
  412876:	shl    DWORD PTR ds:0xf41731ee,cl
  41287c:	push   edi
  41287d:	lock jp 0x4128ca
  412880:	cmp    DWORD PTR [ebx],0xcb8e9e95
  412886:	int3   
  412887:	inc    ebx
  412888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412889:	xor    eax,0x7d09ef50
  41288e:	icebp  
  41288f:	ror    DWORD PTR [ecx],1
  412891:	xchg   edx,eax
  412892:	mov    ebp,DWORD PTR ds:[edx]
  412895:	idiv   BYTE PTR [ecx]
  412897:	fwait
  412898:	in     eax,dx
  412899:	dec    edi
  41289a:	mov    esp,0x9a509ce6
  41289f:	or     al,0xda
  4128a1:	in     eax,dx
  4128a2:	ins    DWORD PTR es:[edi],dx
  4128a3:	leave  
  4128a4:	dec    edi
  4128a5:	daa    
  4128a6:	(bad)  
  4128a7:	mov    ebp,0x45dd286
  4128ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128ad:	push   ebx
  4128ae:	test   BYTE PTR [ebp+0x2e],bl
  4128b1:	ins    BYTE PTR es:[edi],dx
  4128b2:	and    esp,ebx
  4128b4:	mov    ebp,0xfaa13bf5
  4128b9:	es or  ecx,esp
  4128bc:	arpl   WORD PTR ds:0x82cba81,di
  4128c2:	sahf   
  4128c3:	adc    ebx,esi
  4128c5:	xchg   BYTE PTR [esi-0x617d0efa],bl
  4128cb:	iret   
  4128cc:	arpl   WORD PTR ds:0x60a4d933,cx
  4128d2:	mov    esp,0x783327d6
  4128d7:	fstcw  WORD PTR [ecx+0x22]
  4128db:	adc    edi,DWORD PTR [ecx-0x59]
  4128de:	fistp  WORD PTR [edi+0xeee9672]
  4128e4:	and    ebx,edi
  4128e6:	mov    ecx,eax
  4128e8:	pop    es
  4128e9:	and    dh,bl
  4128eb:	xor    BYTE PTR [ecx+eiz*8+0x108a34fe],0x6
  4128f3:	inc    eax
  4128f4:	iret   
  4128f5:	imul   DWORD PTR [ebx+eax*8-0x68013933]
  4128fc:	bound  ecx,QWORD PTR [eax+edi*1-0x63]
  412900:	popf   
  412901:	sbb    eax,0xc0d84207
  412906:	push   0xe2310fec
  41290b:	dec    esi
  41290c:	mov    eax,ds:0x6d58faae
  412911:	xor    eax,0x6c7ebbb4
  412916:	sub    esi,DWORD PTR [ebx+0x50935aee]
  41291c:	(bad)  
  41291d:	aaa    
  41291e:	cmp    BYTE PTR [eax+0x6f7c5b14],dh
  412924:	push   0x23aa02aa
  412929:	push   ecx
  41292a:	fs or  al,0xac
  41292e:	adc    DWORD PTR [ebp+0x42],0xdf103dcc
  412935:	dec    ebx
  412936:	pusha  
  412937:	inc    ebx
  412938:	xor    eax,0x1210a84b
  41293d:	cmp    BYTE PTR [edx+0x4f],al
  412940:	jae    0x4128ca
  412942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412943:	das    
  412944:	mov    bl,0x3f
  412946:	mov    WORD PTR [esi-0x3be15b2d],ds
  41294c:	pop    ebp
  41294d:	scas   eax,DWORD PTR es:[edi]
  41294e:	adc    esi,esp
  412950:	fsubr  st,st(3)
  412952:	sbb    dl,BYTE PTR [ebx+ecx*4]
  412955:	sub    DWORD PTR [ebx+eiz*8-0x14f6f426],ecx
  41295c:	scas   eax,DWORD PTR es:[edi]
  41295d:	call   FWORD PTR [ecx-0x32]
  412960:	sub    DWORD PTR [ebx],ebx
  412962:	mov    al,0x87
  412964:	jnp    0x4128ee
  412966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412968:	outs   dx,BYTE PTR ds:[esi]
  412969:	mov    ah,0xa0
  41296b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41296c:	mov    ah,0xba
  41296e:	aad    0xe5
  412970:	ror    BYTE PTR [eax],cl
  412972:	imul   esi,edi,0x6f4bd91
  412978:	cmp    DWORD PTR [ebp+0x12c74654],ebx
  41297e:	mov    bh,0x31
  412980:	jl     0x412925
  412982:	inc    esp
  412983:	cmp    edx,esi
  412985:	jb     0x4129aa
  412987:	ins    DWORD PTR es:[edi],dx
  412988:	nop
  412989:	jnp    0x412927
  41298b:	call   0xd3854d5
  412990:	sar    DWORD PTR [eax-0x7081ee9b],0xce
  412997:	mov    dh,0xeb
  412999:	xlat   BYTE PTR ds:[ebx]
  41299a:	adc    edx,DWORD PTR [eax]
  41299c:	xchg   edx,eax
  41299d:	and    ah,ah
  41299f:	pop    edi
  4129a0:	out    0x37,eax
  4129a2:	push   ebx
  4129a3:	inc    esi
  4129a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129a6:	jne    0x4129d2
  4129a8:	in     eax,0xfd
  4129aa:	mov    ecx,0x6572056b
  4129af:	jbe    0x41295d
  4129b1:	sbb    eax,0xcd51a89a
  4129b6:	mov    al,ds:0x1f1726a3
  4129bb:	adc    al,0xa
  4129bd:	inc    ebp
  4129be:	sbb    al,0x2
  4129c0:	inc    ebx
  4129c1:	enter  0xc616,0xcc
  4129c5:	(bad)  
  4129c6:	div    DWORD PTR [ebx-0x12]
  4129c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129ca:	(bad)  
  4129cb:	cmp    DWORD PTR [edi],ebx
  4129cd:	test   DWORD PTR [ebp+0x3e265c63],ecx
  4129d3:	iret   
  4129d4:	dec    ecx
  4129d5:	jnp    0x412981
  4129d7:	mul    BYTE PTR [ebp+0x62a702c5]
  4129dd:	(bad)  
  4129de:	ins    DWORD PTR es:[edi],dx
  4129df:	and    DWORD PTR [eax],edx
  4129e1:	loop   0x4129bd
  4129e3:	cmc    
  4129e4:	xor    dl,BYTE PTR [eax+0x4d1ec230]
  4129ea:	loop   0x412989
  4129ec:	arpl   WORD PTR [esi+0x46],bp
  4129ef:	xchg   edx,eax
  4129f0:	mov    ebx,0xa22d726c
  4129f5:	pop    esp
  4129f6:	sub    eax,0x6c8e4e90
  4129fb:	lods   al,BYTE PTR ds:[esi]
  4129fc:	dec    ecx
  4129fd:	daa    
  4129fe:	scas   eax,DWORD PTR es:[edi]
  4129ff:	data16 adc cl,BYTE PTR [ebx-0x4acd7852]
  412a06:	mov    cl,0x3c
  412a08:	pop    es
  412a09:	mov    ebp,0x64f68b7c
  412a0e:	ja     0x412a09
  412a10:	clc    
  412a11:	jmp    0x2ac4aa92
  412a16:	xor    cl,BYTE PTR gs:[ebx+0x1e4893d9]
  412a1d:	sub    DWORD PTR [esi],0x2644acc3
  412a23:	ins    DWORD PTR es:[edi],dx
  412a24:	sub    eax,0x8893669c
  412a29:	xchg   esp,eax
  412a2a:	adc    DWORD PTR [edx-0x45],0x4b5db7d8
  412a31:	cmp    al,0x4a
  412a33:	pop    ecx
  412a34:	mov    esi,0x965ff4ac
  412a39:	shl    DWORD PTR [edx+0x6581bcfe],0xd5
  412a40:	out    0xd8,al
  412a42:	call   0x648:0x639e419d
  412a49:	(bad)  
  412a4a:	mov    esp,0x8c575494
  412a4f:	stos   BYTE PTR es:[edi],al
  412a50:	gs sahf 
  412a52:	sub    ecx,DWORD PTR [edx+0x1b]
  412a55:	mov    esi,0x1cef0ee9
  412a5a:	clc    
  412a5b:	adc    eax,edi
  412a5d:	adc    eax,0xfc1e9d1f
  412a63:	jp     0x4129f5
  412a65:	xor    eax,0x9aa0f3d6
  412a6a:	dec    ebx
  412a6b:	add    BYTE PTR [eax-0x1575e1ce],0xcf
  412a72:	call   0x4f32:0x3d057f59
  412a79:	xchg   esp,eax
  412a7a:	lods   eax,DWORD PTR ds:[esi]
  412a7b:	fdivr  DWORD PTR [ebp+0x4e]
  412a7e:	dec    ecx
  412a7f:	stc    
  412a80:	cwde   
  412a81:	(bad)  
  412a82:	neg    dh
  412a84:	in     eax,dx
  412a85:	lock sub dl,BYTE PTR [edi+edx*4]
  412a89:	mov    ds:0x418f7753,al
  412a8e:	xchg   esp,eax
  412a8f:	aaa    
  412a90:	jae    0x412a1c
  412a92:	out    dx,eax
  412a93:	xor    ebx,eax
  412a95:	pop    ss
  412a96:	and    esp,esp
  412a98:	or     BYTE PTR [esi+0x7a2cc58a],cl
  412a9e:	daa    
  412a9f:	xchg   ebp,eax
  412aa0:	mov    dh,0x60
  412aa2:	add    eax,0xa076e4a9
  412aa7:	push   edi
  412aa8:	mov    bl,0x93
  412aaa:	cmp    al,0x16
  412aac:	outs   dx,BYTE PTR ds:[esi]
  412aad:	sar    DWORD PTR [ebp+eiz*1-0x7f],0xcc
  412ab2:	mov    ah,BYTE PTR [ecx-0x13b3c74b]
  412ab8:	mov    eax,ds:0xf497aeda
  412abd:	xor    eax,0x37b6c6d3
  412ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ac3:	mov    ds:0x97a3c238,eax
  412ac8:	pop    ds
  412ac9:	xor    al,0x61
  412acb:	retf   0xb58c
  412ace:	mov    ds:0xb47d68e3,al
  412ad3:	add    cl,ah
  412ad5:	pop    eax
  412ad6:	ss jl  0x412b20
  412ad9:	push   eax
  412ada:	jg     0x412ad9
  412adc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412add:	fstp   DWORD PTR [eax-0x10ed30a5]
  412ae3:	nop
  412ae4:	push   es
  412ae5:	xor    ch,BYTE PTR [esi]
  412ae7:	xchg   esp,eax
  412ae8:	fs xor bh,ch
  412aeb:	fadd   st,st(6)
  412aed:	xchg   DWORD PTR [ecx],edx
  412aef:	shr    dh,1
  412af1:	(bad)  
  412af2:	sti    
  412af3:	stos   BYTE PTR es:[edi],al
  412af4:	ja     0x412b06
  412af6:	cli    
  412af7:	call   0x9a612d4d
  412afc:	sub    al,0x0
  412afe:	jle    0x412b15
  412b00:	mov    cl,0x11
  412b02:	in     al,dx
  412b03:	scas   eax,DWORD PTR es:[edi]
  412b04:	shr    DWORD PTR [eax-0x77],0xd4
  412b08:	push   edx
  412b09:	in     eax,0x82
  412b0b:	xor    dh,BYTE PTR fs:[edx+ecx*2-0x6e049502]
  412b13:	mov    WORD PTR [ecx],cs
  412b15:	jmp    0xbd07:0x10a3fa4e
  412b1c:	sar    DWORD PTR [eax-0x207028f4],0x53
  412b23:	mov    esp,0x739c6857
  412b28:	dec    edi
  412b29:	or     BYTE PTR [ebx+0x1c15f696],dh
  412b2f:	jmp    0x2c4b:0x539b929c
  412b36:	xchg   edx,eax
  412b37:	mov    al,ds:0xb6f04367
  412b3c:	in     al,0xe
  412b3e:	jno    0x412ade
  412b40:	ins    DWORD PTR es:[edi],dx
  412b41:	nop
  412b42:	mov    bh,0x3c
  412b44:	xchg   edi,eax
  412b45:	mov    ebp,0x9a8ed2e
  412b4a:	idiv   BYTE PTR [ecx+ebp*8]
  412b4d:	push   cs
  412b4e:	in     eax,0x66
  412b50:	pusha  
  412b51:	(bad)  
  412b52:	fisttp DWORD PTR [ebx+0x4c74d7ee]
  412b58:	call   0x93abd3bb
  412b5d:	ss cmp eax,0x19d55740
  412b63:	sub    edx,esi
  412b65:	imul   esp,ecx,0x76
  412b68:	jno    0x412b86
  412b6a:	xor    ah,BYTE PTR [edx+0x541935fd]
  412b70:	stos   DWORD PTR es:[edi],eax
  412b71:	jl     0x412bdc
  412b73:	(bad)  
  412b74:	int3   
  412b75:	mov    bl,0xba
  412b77:	mov    edi,0xf6bb2082
  412b7c:	sub    eax,0xcdfca537
  412b81:	aaa    
  412b82:	push   esp
  412b83:	inc    edx
  412b84:	(bad)  
  412b87:	mov    edx,0x68366ae9
  412b8c:	cmc    
  412b8d:	das    
  412b8e:	out    dx,al
  412b8f:	retf   0xa70a
  412b92:	scas   eax,DWORD PTR es:[edi]
  412b93:	cmc    
  412b94:	ja     0x412bee
  412b96:	pop    esp
  412b97:	push   ebp
  412b98:	cmp    edx,edx
  412b9a:	and    eax,0xe1d5f7f4
  412b9f:	dec    ebp
  412ba0:	jmp    0x412b74
  412ba2:	add    DWORD PTR [esi-0x556dd2b9],esi
  412ba8:	gs mov ebp,gs
  412bab:	jno    0x412b85
  412bad:	or     edi,0x41af37c6
  412bb3:	fwait
  412bb4:	adc    edi,DWORD PTR [ebx-0x2a]
  412bb7:	xlat   BYTE PTR ds:[ebx]
  412bb8:	jle    0x412bf6
  412bba:	mov    ch,0x1c
  412bbc:	out    0x61,eax
  412bbe:	fst    QWORD PTR [ecx+0x46]
  412bc1:	aad    0x87
  412bc3:	mov    esi,0x924a3d86
  412bc8:	clc    
  412bc9:	or     BYTE PTR [edx+0x52bc89ca],ch
  412bcf:	mov    eax,ds:0xec2af174
  412bd4:	jge    0x412c09
  412bd6:	das    
  412bd7:	xchg   esi,eax
  412bd8:	and    al,0x3b
  412bda:	or     edx,DWORD PTR [ebx-0x20239147]
  412be0:	(bad)  
  412be1:	(bad)  
  412be2:	mov    ebx,0x3fed51d1
  412be7:	call   0x86bebe38
  412bec:	icebp  
  412bed:	jmp    0xab1c:0x50161aa8
  412bf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bf5:	sub    esp,edi
  412bf7:	pop    ebx
  412bf8:	xchg   esi,eax
  412bf9:	push   eax
  412bfa:	xchg   DWORD PTR [edx-0x48d418ad],esp
  412c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c01:	das    
  412c02:	int3   
  412c03:	xchg   ecx,eax
  412c04:	cmp    eax,0x4057d966
  412c09:	xor    esp,esi
  412c0b:	add    al,0xbb
  412c0d:	and    DWORD PTR [eax+esi*4+0x71],eax
  412c11:	adc    BYTE PTR [ecx+edx*8],bh
  412c14:	and    ah,dl
  412c16:	mov    eax,ds:0xe37d8e2a
  412c1b:	or     eax,0xa9ffc850
  412c20:	test   al,0xb4
  412c22:	xchg   esi,eax
  412c23:	pop    ss
  412c24:	sahf   
  412c25:	mov    ds:0xf6e90996,eax
  412c2a:	(bad)  
  412c2b:	cld    
  412c2c:	xchg   ebp,eax
  412c2d:	fmul   QWORD PTR [esi+0x7c]
  412c30:	inc    esp
  412c31:	cmp    al,0x43
  412c33:	sahf   
  412c34:	iret   
  412c35:	inc    edx
  412c36:	xchg   esp,eax
  412c37:	lock jmp 0x412c3e
  412c3a:	sbb    eax,0x265c991f
  412c3f:	sti    
  412c40:	in     eax,dx
  412c41:	mov    bl,0xfd
  412c43:	dec    ecx
  412c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c45:	cmp    eax,DWORD PTR [ebx]
  412c47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c48:	inc    ecx
  412c49:	xchg   esp,eax
  412c4a:	aam    0xfe
  412c4c:	sbb    eax,0xb6d0c3f9
  412c51:	dec    edx
  412c52:	(bad)  
  412c53:	in     eax,dx
  412c54:	dec    ebp
  412c55:	add    eax,0x4a6bdfcd
  412c5a:	pop    ebp
  412c5b:	mov    BYTE PTR [edi-0x30],dl
  412c5e:	retw   
  412c60:	outs   dx,DWORD PTR ds:[esi]
  412c61:	dec    ecx
  412c62:	push   es
  412c63:	mov    bh,0x2b
  412c65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c66:	ret    0x2280
  412c69:	inc    DWORD PTR [ebp+0x5b63db41]
  412c6f:	dec    edx
  412c70:	xor    eax,0xd1beae3c
  412c75:	dec    eax
  412c76:	dec    edi
  412c77:	adc    dl,bl
  412c79:	popa   
  412c7a:	js     0x412cce
  412c7c:	xor    al,ch
  412c7e:	loope  0x412c43
  412c80:	push   ds
  412c81:	jmp    0x412c1f
  412c83:	jne    0x412c2e
  412c85:	push   ebp
  412c86:	push   0x52
  412c88:	mov    ebp,0x256c02b4
  412c8d:	xchg   ecx,eax
  412c8e:	mov    eax,0x75e63855
  412c93:	and    edi,esi
  412c95:	out    0x7a,al
  412c97:	or     al,0xc2
  412c99:	or     al,0x5c
  412c9b:	or     BYTE PTR [esi],al
  412c9d:	pop    edi
  412c9e:	in     al,dx
  412c9f:	out    0xa5,al
  412ca1:	mov    bl,0x69
  412ca3:	leave  
  412ca4:	mov    dl,0x51
  412ca6:	aas    
  412ca7:	stos   DWORD PTR es:[edi],eax
  412ca8:	ds adc al,0x4
  412cab:	sub    BYTE PTR [edi],bl
  412cad:	call   0xd99e:0xe5ae16d1
  412cb4:	jns    0x412d20
  412cb6:	jge    0x412d29
  412cb8:	ins    DWORD PTR es:[edi],dx
  412cb9:	inc    eax
  412cba:	cmp    esi,DWORD PTR [eax+0x54]
  412cbd:	xchg   ebx,eax
  412cbe:	sbb    BYTE PTR [esi+0x157d9c06],ah
  412cc4:	call   DWORD PTR [ebx+ecx*4+0x1e]
  412cc8:	popf   
  412cc9:	ret    0xff3b
  412ccc:	xchg   ebp,eax
  412ccd:	imul   ecx,DWORD PTR ds:0xe6f8c5c0,0x7b4f1d06
  412cd7:	stos   DWORD PTR es:[edi],eax
  412cd8:	test   al,0x3e
  412cda:	cmc    
  412cdb:	ja     0x412d57
  412cdd:	ins    DWORD PTR es:[edi],dx
  412cde:	call   0xc8ab:0xe8ae9657
  412ce5:	xchg   BYTE PTR [esi],bl
  412ce7:	arpl   WORD PTR [eax],dx
  412ce9:	add    al,0x4b
  412ceb:	fwait
  412cec:	xlat   BYTE PTR ds:[ebx]
  412ced:	fistp  DWORD PTR [ebx+0x2]
  412cf0:	and    BYTE PTR [eax-0x18b77797],bl
  412cf6:	and    esp,DWORD PTR [ebp+0x31]
  412cf9:	(bad)  
  412cfa:	dec    esi
  412cfb:	imul   esi,DWORD PTR [eax-0x53],0x6a
  412cff:	out    0x6d,al
  412d01:	ficom  DWORD PTR [ebx+0x496d6ee7]
  412d07:	shr    DWORD PTR [ebx+0x0],0x70
  412d0b:	js     0x412d80
  412d0d:	outs   dx,BYTE PTR ds:[esi]
  412d0e:	mov    dl,0xa5
  412d10:	out    0x7c,eax
  412d12:	ds addr16 (bad) 
  412d15:	imul   eax,DWORD PTR [ecx],0x2b
  412d18:	test   eax,0x2073a957
  412d1d:	call   0x5cfb:0x69196ffc
  412d24:	mov    ecx,0x55fc8f30
  412d29:	mov    esi,0x53b5693b
  412d2e:	mov    bh,0xbc
  412d30:	jne    0x412d4b
  412d32:	es out 0xf,eax
  412d35:	sub    BYTE PTR [esi],al
  412d37:	ins    BYTE PTR es:[edi],dx
  412d38:	es fwait
  412d3a:	pop    ebp
  412d3b:	ret    
  412d3c:	jnp    0x412cd4
  412d3e:	(bad)  
  412d3f:	repnz push 0x8aefe154
  412d45:	push   eax
  412d46:	ins    DWORD PTR es:[edi],dx
  412d47:	stc    
  412d48:	jg     0x412d13
  412d4a:	not    DWORD PTR [ebp-0x78]
  412d4d:	xlat   BYTE PTR ds:[ebx]
  412d4e:	mov    esp,0xf078fe43
  412d53:	dec    edi
  412d54:	pop    esp
  412d55:	repz or eax,0xeb5b4fc1
  412d5b:	push   es
  412d5c:	push   edi
  412d5d:	xchg   BYTE PTR [edx],cl
  412d5f:	adc    DWORD PTR [ecx+0x54],edi
  412d62:	and    eax,0xb5896cdf
  412d67:	jb     0x412d7a
  412d69:	popa   
  412d6a:	sbb    eax,0x470189ec
  412d6f:	fidivr DWORD PTR [edi]
  412d71:	aas    
  412d72:	(bad)  
  412d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d74:	mov    DWORD PTR [edx],0xffb0d3db
  412d7a:	mov    ebp,0x987d905b
  412d7f:	xchg   esp,eax
  412d80:	cmp    dh,BYTE PTR [edx]
  412d82:	and    al,0x18
  412d84:	(bad)  
  412d85:	stc    
  412d86:	imul   edi,DWORD PTR [edi+0x36],0xb
  412d8a:	inc    esi
  412d8b:	pop    esp
  412d8c:	sti    
  412d8d:	gs popf 
  412d8f:	sub    edi,eax
  412d91:	lock test eax,0x54350b5
  412d97:	retf   0x1aff
  412d9a:	or     al,0xf7
  412d9c:	jg     0x412df0
  412d9e:	data16 sar BYTE PTR [ebp+0x6d],0x77
  412da3:	imul   esi,DWORD PTR [ecx+0x2922d1c8],0xd
  412daa:	imul   esi,DWORD PTR [ebp-0x59476ab7],0x1065cb6c
  412db4:	popf   
  412db5:	stos   BYTE PTR es:[edi],al
  412db6:	mov    al,0xeb
  412db8:	mov    dl,0xe8
  412dba:	sbb    DWORD PTR [eax],0xe953d4a3
  412dc0:	mov    ds:0xe333ebf7,eax
  412dc5:	mov    dh,0x4b
  412dc7:	xchg   ecx,eax
  412dc8:	or     bl,BYTE PTR [edi]
  412dca:	adc    al,0x87
  412dcc:	jmp    0x9a08:0x31c61d72
  412dd3:	jge    0x412df8
  412dd5:	lods   al,BYTE PTR ds:[esi]
  412dd6:	sub    ecx,DWORD PTR [edi]
  412dd8:	popf   
  412dd9:	lods   eax,DWORD PTR ds:[esi]
  412dda:	adc    eax,0x219ff679
  412ddf:	add    ebp,DWORD PTR [edx+0x11]
  412de2:	mov    bl,0x41
  412de4:	enter  0x3961,0xd4
  412de8:	jae    0x412d6f
  412dea:	pop    esp
  412deb:	clc    
  412dec:	or     al,0xbe
  412dee:	cs xchg esi,eax
  412df0:	xchg   edi,eax
  412df1:	pop    esi
  412df2:	in     eax,0x69
  412df4:	out    0xe1,al
  412df6:	aam    0xc6
  412df8:	adc    dl,ah
  412dfa:	fwait
  412dfb:	xchg   ecx,eax
  412dfc:	sub    bh,BYTE PTR [ebx]
  412dfe:	pusha  
  412dff:	nop
  412e00:	dec    ebp
  412e01:	leave  
  412e02:	or     al,0x99
  412e04:	out    dx,eax
  412e05:	or     DWORD PTR [esi],esp
  412e07:	and    DWORD PTR [eax-0x2],edi
  412e0a:	mov    DWORD PTR [edi],eax
  412e0c:	xor    al,BYTE PTR [ecx+ebp*8]
  412e0f:	aas    
  412e10:	mov    es,WORD PTR [ecx]
  412e12:	adc    al,0x1e
  412e14:	sahf   
  412e15:	xchg   esp,eax
  412e16:	push   ebx
  412e17:	push   ebp
  412e18:	push   eax
  412e19:	(bad)  
  412e1a:	in     al,dx
  412e1b:	inc    esi
  412e1c:	aaa    
  412e1d:	mov    edi,0xdb4c97ba
  412e22:	jecxz  0x412da4
  412e24:	ds icebp 
  412e26:	aas    
  412e27:	inc    ebx
  412e28:	inc    edx
  412e29:	mov    esp,ebp
  412e2b:	push   ds
  412e2c:	in     al,dx
  412e2d:	(bad)  
  412e2e:	imul   eax,DWORD PTR [esi-0x578a334],0xdba9a741
  412e38:	cmp    esi,DWORD PTR [edx+ebp*8-0x4c9f74f9]
  412e3f:	push   cs
  412e40:	add    BYTE PTR [edi+0x1e8a945d],al
  412e46:	mov    al,ds:0xdd59dd69
  412e4b:	inc    esi
  412e4c:	pop    eax
  412e4d:	dec    esp
  412e4e:	lods   eax,DWORD PTR ds:[esi]
  412e4f:	sub    BYTE PTR [edi+0x54a17e92],ch
  412e55:	and    BYTE PTR [edx+eax*1],bh
  412e58:	jecxz  0x412e6d
  412e5a:	out    0xdd,eax
  412e5c:	mov    ebx,0xab607467
  412e61:	jecxz  0x412e08
  412e63:	xchg   esp,eax
  412e64:	jno    0x412e92
  412e66:	add    al,0xc8
  412e68:	pop    ebx
  412e69:	xor    eax,0x5b556140
  412e6e:	mov    eax,ds:0xf29f6846
  412e73:	xchg   edx,eax
  412e74:	test   DWORD PTR [ebx-0x47],0xb4a69c98
  412e7b:	push   0xffffff89
  412e7d:	adc    ebp,DWORD PTR [eax-0x2]
  412e80:	sub    edx,DWORD PTR [eax-0x5f]
  412e83:	out    dx,al
  412e84:	std    
  412e85:	dec    ecx
  412e86:	sti    
  412e87:	push   edi
  412e88:	pop    ds
  412e89:	ja     0x412e18
  412e8b:	out    0xa,eax
  412e8d:	ss jle 0x412edd
  412e90:	dec    esp
  412e91:	ds test al,0xc7
  412e94:	dec    ebp
  412e95:	into   
  412e96:	add    al,0x8d
  412e98:	das    
  412e99:	imul   DWORD PTR [eax+eiz*2-0x7395466d]
  412ea0:	jbe    0x412e38
  412ea2:	pop    eax
  412ea3:	mov    ecx,DWORD PTR [eax+0x73]
  412ea6:	jg     0x412ef7
  412ea8:	mov    edx,0x7de3feba
  412ead:	mov    al,ds:0xfd7b06e9
  412eb2:	jmp    0x384581a2
  412eb7:	push   cs
  412eb8:	add    bl,0xdd
  412ebb:	jle    0x412ebd
  412ebd:	push   0xffffffb7
  412ebf:	lods   eax,DWORD PTR ds:[esi]
  412ec0:	mov    edi,0x2a924593
  412ec5:	out    dx,eax
  412ec6:	imul   edx,DWORD PTR ds:[ecx+0x73b65c0c],0x7aead15
  412ed1:	and    BYTE PTR [edx+0x76],cl
  412ed4:	popa   
  412ed5:	imul   edi,ecx,0x0
  412ed8:	inc    ebp
  412ed9:	scas   eax,DWORD PTR es:[edi]
  412eda:	or     DWORD PTR [esp+ebp*8],esi
  412edd:	sbb    bh,0x5e
  412ee0:	mov    dh,0x16
  412ee2:	enter  0x9661,0x44
  412ee6:	pop    esp
  412ee7:	or     al,0x34
  412ee9:	ucomiss xmm4,xmm5
  412eec:	push   ds
  412eed:	sub    al,0xd0
  412eef:	(bad)  
  412ef0:	gs int3 
  412ef2:	cwde   
  412ef3:	dec    ebx
  412ef4:	mov    eax,esp
  412ef6:	pop    ebx
  412ef7:	inc    esi
  412ef8:	sbb    BYTE PTR [ecx+0x25c38fd],al
  412efe:	push   esi
  412eff:	xchg   esi,eax
  412f00:	pop    ss
  412f01:	add    DWORD PTR [eax-0x59],0x914b3c0b
  412f08:	pop    ebp
  412f09:	(bad)  
  412f0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f0b:	jmp    FWORD PTR [edx-0x1ff091f4]
  412f11:	mov    ah,0x97
  412f13:	rol    DWORD PTR [eax+0x18],cl
  412f16:	sbb    ebx,eax
  412f18:	push   es
  412f19:	mov    ds:0x93ff37b2,al
  412f1e:	xor    ch,BYTE PTR [ebp+0x58]
  412f21:	or     al,ah
  412f23:	clc    
  412f24:	jg     0x412f8d
  412f26:	(bad)  
  412f28:	cwde   
  412f29:	xor    al,0xbc
  412f2b:	pop    ds
  412f2c:	jg     0x412f82
  412f2e:	cli    
  412f2f:	or     DWORD PTR [ebp-0x9],edx
  412f32:	outs   dx,BYTE PTR ds:[esi]
  412f33:	push   es
  412f34:	out    0x37,eax
  412f36:	or     DWORD PTR [edi+0x1b9d4034],0xffffff8b
  412f3d:	add    al,0xe
  412f3f:	leave  
  412f40:	retf   
  412f41:	dec    edx
  412f42:	and    BYTE PTR [esi+0x79],0x88
  412f46:	aam    0xc
  412f48:	push   ds
  412f49:	scas   eax,DWORD PTR es:[edi]
  412f4a:	in     eax,dx
  412f4b:	add    BYTE PTR [ebp+0x3bbae56b],0xef
  412f52:	push   cs
  412f53:	sbb    eax,0x9516aca0
  412f58:	sub    eax,0x58c21df6
  412f5d:	shl    BYTE PTR [ebx],0x26
  412f60:	ja     0x412f0e
  412f62:	mov    ecx,0xb3a9c44b
  412f67:	aaa    
  412f68:	mov    eax,0x260849a6
  412f6d:	xor    eax,0xf443a4fb
  412f72:	(bad)  
  412f73:	idiv   DWORD PTR [eax+0x27]
  412f76:	mov    esi,0x85bb3911
  412f7b:	pop    ds
  412f7c:	xlat   BYTE PTR ds:[ebx]
  412f7d:	push   ebx
  412f7e:	inc    edx
  412f7f:	inc    esp
  412f80:	repz adc eax,0xeea87711
  412f86:	adc    edx,esi
  412f88:	mov    esp,0xb1d34dd8
  412f8d:	pop    ecx
  412f8e:	test   al,0x6a
  412f90:	iret   
  412f91:	aam    0x3c
  412f93:	test   al,0x11
  412f95:	inc    ebx
  412f96:	mov    bl,0xb9
  412f98:	rcl    DWORD PTR [ecx-0x6],1
  412f9b:	pop    ecx
  412f9c:	test   bl,0xe6
  412f9f:	dec    esi
  412fa0:	in     eax,dx
  412fa1:	adc    edi,DWORD PTR [eax]
  412fa3:	push   esp
  412fa4:	lahf   
  412fa5:	shl    BYTE PTR [edi-0xf],0xa1
  412fa9:	xchg   DWORD PTR [eax-0x2f83673d],ebx
  412faf:	imul   eax,ecx,0x25a3a815
  412fb5:	jae    0x412fbe
  412fb7:	fsubr  DWORD PTR [esi+0x2]
  412fba:	int3   
  412fbb:	or     edi,DWORD PTR [ebx+0x54]
  412fbe:	ins    BYTE PTR es:[edi],dx
  412fbf:	(bad)  
  412fc0:	in     eax,0xa2
  412fc2:	pop    ebp
  412fc3:	adc    esi,DWORD PTR [edi+0x53644480]
  412fc9:	inc    edi
  412fca:	sub    DWORD PTR [eax+0x7e],esp
  412fcd:	test   eax,0x94778638
  412fd2:	add    esp,edx
  412fd4:	adc    esi,0xffffffc5
  412fd7:	ins    BYTE PTR es:[edi],dx
  412fd8:	pop    ss
  412fd9:	inc    ebx
  412fda:	cmp    al,BYTE PTR [eax]
  412fdc:	aas    
  412fdd:	outs   dx,DWORD PTR ds:[esi]
  412fde:	inc    ecx
  412fdf:	push   es
  412fe0:	push   cs
  412fe1:	mov    al,ds:0xfb0092cf
  412fe6:	xchg   edx,eax
  412fe7:	pop    edi
  412fe8:	test   al,0xa3
  412fea:	xchg   edi,eax
  412feb:	mov    ebx,0x51abd816
  412ff0:	xlat   BYTE PTR ds:[ebx]
  412ff1:	xor    DWORD PTR [ecx-0x61],edi
  412ff4:	test   eax,0xec20413e
  412ff9:	cmc    
  412ffa:	arpl   WORD PTR [ecx+0x7],di
  412ffd:	mov    ds:0x7f299078,al
  413002:	out    0x90,al
  413004:	in     eax,0x5d
  413006:	stc    
  413007:	jle    0x413043
  413009:	je     0x412fa7
  41300b:	add    DWORD PTR [esi+ecx*1-0x53],ebp
  41300f:	stos   DWORD PTR es:[edi],eax
  413010:	adc    eax,0xc2ac1755
  413015:	add    BYTE PTR [ecx+0x412af967],dl
  41301b:	shl    BYTE PTR [eax-0x48],cl
  41301e:	cdq    
  41301f:	loope  0x412fa3
  413021:	js     0x413059
  413023:	std    
  413024:	test   BYTE PTR [eax+ebx*2-0xef3e62e],cl
  41302b:	ret    
  41302c:	adc    BYTE PTR [edx],dl
  41302e:	cdq    
  41302f:	sti    
  413030:	jno    0x413039
  413032:	push   edx
  413033:	inc    edx
  413034:	mov    esp,0x8ebed37e
  413039:	sbb    eax,0xef540e88
  41303e:	xchg   edi,eax
  41303f:	add    DWORD PTR [edi+0x4e],ecx
  413042:	mov    ch,0xe4
  413044:	pop    esi
  413045:	stos   BYTE PTR es:[edi],al
  413046:	fcom   DWORD PTR [ebx+0x49]
  413049:	cdq    
  41304a:	rcr    DWORD PTR [ebx+0x7a47624],1
  413050:	adc    al,0x4d
  413052:	xchg   esi,eax
  413053:	jae    0x413089
  413055:	mov    dl,0x8c
  413057:	mov    ch,0x9b
  413059:	je     0x413034
  41305b:	xchg   ebx,eax
  41305c:	ja     0x4130dd
  41305e:	dec    esi
  41305f:	fisttp DWORD PTR [eax-0x3e]
  413062:	aas    
  413063:	push   edi
  413064:	test   eax,0x217acfb6
  413069:	call   DWORD PTR [edx+0x3e]
  41306c:	rcl    BYTE PTR [ecx+0xe],cl
  41306f:	mov    bh,0x48
  413071:	jnp    0x413044
  413073:	mov    eax,0x5b933699
  413078:	mov    bl,0xbe
  41307a:	jnp    0x41306a
  41307c:	or     DWORD PTR [edx+edi*2],ebx
  41307f:	pusha  
  413080:	or     al,BYTE PTR [edx]
  413082:	pop    DWORD PTR [ebp-0x7f]
  413085:	sar    DWORD PTR [edi+0x56],1
  413088:	(bad)  
  413089:	aas    
  41308a:	push   ds
  41308b:	aad    0xbe
  41308d:	loope  0x413047
  41308f:	ss pusha 
  413091:	retf   0x8906
  413094:	cs jo  0x413097
  413097:	xor    bh,bl
  413099:	cs pop ds
  41309b:	fs pop ecx
  41309d:	dec    eax
  41309e:	js     0x413103
  4130a0:	nop
  4130a1:	fs dec edi
  4130a3:	mov    cl,0x60
  4130a5:	push   ebp
  4130a6:	pop    ecx
  4130a7:	mov    al,0xa7
  4130a9:	sbb    al,0xa8
  4130ab:	sbb    ah,ch
  4130ad:	xchg   edx,eax
  4130ae:	xchg   ebx,eax
  4130af:	jge    0x4130c8
  4130b1:	inc    eax
  4130b2:	jb     0x4130dc
  4130b4:	dec    ecx
  4130b5:	add    BYTE PTR [esi+ebp*1-0x558c2787],bh
  4130bc:	mov    ch,0xdd
  4130be:	push   ebx
  4130bf:	mov    al,ds:0xa131f3e8
  4130c4:	cmp    edx,ebx
  4130c6:	pop    ecx
  4130c7:	pop    eax
  4130c8:	adc    ah,ch
  4130ca:	mov    edi,0x640375c3
  4130cf:	sub    DWORD PTR [esi+0x2c1b4efd],eax
  4130d5:	in     eax,0x5d
  4130d7:	enter  0x2641,0x89
  4130db:	sbb    bh,ah
  4130dd:	mov    ds:0x2225e77f,al
  4130e2:	xchg   esi,eax
  4130e3:	or     ebp,edx
  4130e5:	sbb    DWORD PTR [eax+0x670271fc],esp
  4130eb:	add    al,0xf6
  4130ed:	dec    edi
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	adc    esp,DWORD PTR [edi+ebp*4-0x1c]
  4130f3:	jno    0x413161
  4130f5:	jo     0x4130e5
  4130f7:	add    ebp,DWORD PTR [eax]
  4130f9:	out    dx,eax
  4130fa:	mov    al,0x56
  4130fc:	pop    ebx
  4130fd:	retf   0x7635
  413100:	scas   al,BYTE PTR es:[edi]
  413101:	cli    
  413102:	cwde   
  413103:	mov    edi,0x7d406f8
  413108:	inc    ebx
  413109:	mov    ebp,0x86bbcc12
  41310e:	pop    ss
  41310f:	bound  edi,QWORD PTR [ecx+0x27]
  413112:	cdq    
  413113:	mov    ds:0x2ccbac90,al
  413118:	pop    esi
  413119:	jl     0x4130d3
  41311b:	jmp    0x4130bf
  41311d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41311e:	hlt    
  41311f:	or     BYTE PTR [edx],al
  413121:	ret    
  413122:	(bad)  
  413123:	stos   BYTE PTR es:[edi],al
  413124:	mov    dh,BYTE PTR [esi+0x5]
  413127:	mov    bl,0x60
  413129:	inc    edx
  41312a:	dec    ecx
  41312b:	jmp    0x413193
  41312d:	cmp    eax,0xa3b606c3
  413132:	test   eax,0x7131445c
  413137:	mov    ch,0x8c
  413139:	aam    0xae
  41313b:	jno    0x413190
  41313d:	jg     0x41315f
  41313f:	jl     0x4131b5
  413141:	mov    ebp,fs
  413143:	adc    BYTE PTR [edx+0x12695a2b],al
  413149:	lods   eax,DWORD PTR ds:[esi]
  41314a:	cmp    BYTE PTR [ebx-0x32],0x2d
  41314e:	pop    edi
  41314f:	cmc    
  413150:	fisub  DWORD PTR [ecx]
  413152:	xchg   edi,eax
  413153:	mov    WORD PTR [esi],?
  413155:	mov    ah,0x3a
  413157:	dec    ebp
  413158:	dec    esp
  413159:	or     eax,0xae6dd684
  41315e:	inc    ecx
  41315f:	push   esi
  413160:	ins    DWORD PTR es:[edi],dx
  413161:	pop    ebx
  413162:	mov    edx,ebx
  413164:	mov    WORD PTR [esi-0x42262a00],gs
  41316a:	mov    eax,ds:0xf7f8d417
  41316f:	mov    ?,WORD PTR [ecx]
  413171:	adc    BYTE PTR [esi-0x2c],ch
  413174:	inc    edi
  413175:	test   BYTE PTR [esi+0x2e],bl
  413178:	sbb    eax,0x60
  41317b:	mov    eax,0xd62243bf
  413180:	pop    ecx
  413181:	push   es
  413182:	dec    eax
  413183:	icebp  
  413184:	pop    esi
  413185:	int3   
  413186:	add    dl,ch
  413188:	xchg   esp,eax
  413189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41318a:	adc    al,0xe9
  41318c:	out    dx,eax
  41318d:	mov    dh,0xb
  41318f:	sub    DWORD PTR [eax+0x5ba516fe],ebx
  413195:	(bad)  
  413196:	outs   dx,BYTE PTR ds:[esi]
  413197:	jmp    0x413152
  413199:	stos   DWORD PTR es:[edi],eax
  41319a:	pop    ecx
  41319b:	pop    ebx
  41319c:	mov    esi,DWORD PTR [ebx-0x688597a7]
  4131a2:	jnp    0x41312c
  4131a4:	fsubrp st(5),st
  4131a6:	or     eax,0x1a1d0b9d
  4131ab:	aaa    
  4131ac:	adc    eax,ecx
  4131ae:	dec    ebx
  4131af:	mov    bl,0xc7
  4131b1:	push   es
  4131b2:	rol    ecx,0x3d
  4131b5:	out    0x60,eax
  4131b7:	popf   
  4131b8:	je     0x413238
  4131ba:	retf   0xd690
  4131bd:	iret   
  4131be:	mov    edi,0x70d995e4
  4131c3:	pop    ebx
  4131c4:	sbb    BYTE PTR [ebx-0x5a],dh
  4131c7:	mov    bl,0x30
  4131c9:	mov    esi,0xbf2635e2
  4131ce:	popa   
  4131cf:	outs   dx,BYTE PTR ds:[esi]
  4131d0:	xor    ch,BYTE PTR [edi+edx*1-0x25771d6]
  4131d7:	dec    ebp
  4131d8:	dec    ebp
  4131d9:	add    eax,DWORD PTR [edx+0x30]
  4131dc:	fnstsw WORD PTR [ecx-0xa]
  4131df:	add    al,dl
  4131e1:	je     0x41322d
  4131e3:	daa    
  4131e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131e5:	mov    WORD PTR [eax+0x6d6346d8],ss
  4131eb:	mov    dh,dl
  4131ed:	sbb    ch,dh
  4131ef:	ins    BYTE PTR es:[edi],dx
  4131f0:	gs mov ah,bl
  4131f3:	jns    0x413213
  4131f5:	jae    0x4131f7
  4131f7:	push   ebp
  4131f8:	mov    esp,0xb0abb6bd
  4131fd:	imul   ebx,DWORD PTR [edx+eiz*2],0xffffffff
  413201:	rcr    DWORD PTR [ebx],1
  413203:	je     0x413250
  413205:	mov    ds:0xc8d9467a,al
  41320a:	les    eax,FWORD PTR [ebx]
  41320c:	shl    dl,1
  41320e:	adc    eax,0x5411de6c
  413213:	ins    BYTE PTR es:[edi],dx
  413214:	aad    0x93
  413216:	jmp    0x6a4ed67d
  41321b:	and    ebp,DWORD PTR [ecx+0x51]
  41321e:	shr    BYTE PTR [ebp+0x3ea1ddc],1
  413224:	daa    
  413225:	adc    DWORD PTR [eax-0x57],eax
  413228:	cmp    dh,dh
  41322a:	sbb    al,bl
  41322c:	mov    ecx,0xd9f21a8b
  413231:	mov    edx,0x52dadbbd
  413236:	lods   eax,DWORD PTR ds:[esi]
  413237:	test   eax,0x65c0cd76
  41323c:	fadd   DWORD PTR [ebx-0x547cfb74]
  413242:	lods   eax,DWORD PTR ds:[esi]
  413243:	or     esi,0x45
  413246:	(bad)  
  413247:	hlt    
  413248:	mov    edi,0x1e8fab5c
  41324d:	pop    ecx
  41324e:	sub    eax,0x196f05be
  413253:	adc    al,0x27
  413255:	or     al,BYTE PTR [eax]
  413257:	push   eax
  413258:	add    eax,0x49fba79e
  41325d:	fdivr  st,st(6)
  41325f:	dec    esi
  413260:	or     DWORD PTR [esi-0x9],esi
  413263:	imul   eax,DWORD PTR [ebx+0x50],0x70
  413267:	(bad)  
  413268:	xchg   esi,eax
  413269:	mov    ch,0x39
  41326b:	inc    esi
  41326c:	call   0xdf488734
  413271:	xor    BYTE PTR [esi],dh
  413273:	xor    eax,DWORD PTR [ecx]
  413275:	(bad)  
  413276:	xlat   BYTE PTR ds:[ebx]
  413277:	test   DWORD PTR [esi],ebp
  413279:	cld    
  41327a:	cs aas 
  41327c:	int    0xb3
  41327e:	add    eax,DWORD PTR [eax]
  413280:	cmp    DWORD PTR [esi],ecx
  413282:	je     0x413290
  413284:	data16 mov ch,0xb3
  413287:	neg    ch
  413289:	xchg   cl,ch
  41328b:	mov    dl,0x12
  41328d:	xor    esi,0xa3355ff
  413293:	scas   al,BYTE PTR es:[edi]
  413294:	sub    esi,esi
  413296:	push   eax
  413297:	push   esp
  413298:	outs   dx,DWORD PTR ds:[esi]
  413299:	retf   
  41329a:	jmp    0x57f8e1cc
  41329f:	push   ss
  4132a0:	or     edx,eax
  4132a2:	cmp    eax,ecx
  4132a4:	xchg   bh,bl
  4132a6:	mov    esi,0x7d931fd6
  4132ab:	js     0x41330b
  4132ad:	pop    edx
  4132ae:	add    eax,0x5e358546
  4132b3:	sub    dh,bh
  4132b5:	ficom  WORD PTR [edi+0x2e]
  4132b8:	mov    ebx,DWORD PTR [ebp+0x67]
  4132bb:	lea    eax,[esi-0x18]
  4132be:	mov    dl,0x3c
  4132c0:	xor    al,0x98
  4132c2:	jmp    0x8946f3b5
  4132c7:	pusha  
  4132c8:	add    al,0xbe
  4132ca:	jb     0x4132b3
  4132cc:	sbb    bh,dh
  4132ce:	pop    ss
  4132cf:	jo     0x4132dd
  4132d1:	lods   al,BYTE PTR ss:[esi]
  4132d3:	xchg   ebx,eax
  4132d4:	pop    edx
  4132d5:	mov    al,0x3a
  4132d7:	mov    bh,0x59
  4132d9:	or     al,0xef
  4132db:	jns    0x4132cf
  4132dd:	jnp    0x4132e6
  4132df:	jmp    0x413316
  4132e1:	mov    ds:0xea1d70e9,eax
  4132e6:	fld    TBYTE PTR [edx+0xef61155]
  4132ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132ed:	lahf   
  4132ee:	adc    BYTE PTR [esi-0x61396f1],dh
  4132f4:	xor    edi,edi
  4132f6:	outs   dx,DWORD PTR ds:[esi]
  4132f7:	loopne 0x4132b2
  4132f9:	jno    0x4132af
  4132fb:	add    al,0x8d
  4132fd:	jp     0x413346
  4132ff:	jnp    0x4132a6
  413301:	jp     0x413298
  413303:	jnp    0x4132dc
  413305:	xor    edx,esi
  413307:	gs mov edx,0x95ec1e14
  41330d:	or     al,0x66
  41330f:	in     eax,dx
  413310:	xchg   ebx,eax
  413311:	out    dx,al
  413312:	dec    edx
  413313:	idiv   ebp
  413315:	lods   al,BYTE PTR ds:[esi]
  413316:	in     eax,0x29
  413318:	inc    ebx
  413319:	cmp    cl,al
  41331b:	int    0xf6
  41331d:	jns    0x41332e
  41331f:	and    DWORD PTR [eax+ebp*8+0x6a],esi
  413323:	xchg   DWORD PTR [edx-0xc3fc525],ecx
  413329:	fcom   QWORD PTR [esi+0x6a]
  41332c:	mov    ah,0x5
  41332e:	mov    al,0x79
  413330:	add    ecx,ebx
  413332:	add    esi,ebx
  413334:	inc    edx
  413335:	retf   
  413336:	fcom   QWORD PTR [ebp-0x80]
  413339:	pop    ds
  41333a:	shl    DWORD PTR [edx-0x65644a33],cl
  413340:	push   esi
  413341:	bound  ecx,QWORD PTR [esi+0x11]
  413344:	sbb    eax,0x7b61bf5a
  413349:	add    dl,BYTE PTR [edi]
  41334b:	mov    bl,0x1f
  41334d:	xchg   ebp,eax
  41334e:	loop   0x413354
  413350:	sbb    eax,0x4ca7923d
  413355:	fidiv  DWORD PTR [edi+0x24917dcd]
  41335b:	and    al,0xed
  41335d:	aad    0x71
  41335f:	sub    DWORD PTR [eax-0x48],edx
  413362:	adc    ch,BYTE PTR [ecx+0x67f61d6c]
  413368:	inc    ebp
  413369:	sbb    bh,BYTE PTR [ebx]
  41336b:	or     DWORD PTR [edi],ecx
  41336d:	xchg   edi,eax
  41336e:	out    0x6,al
  413370:	mov    al,0xe8
  413372:	sbb    edx,esp
  413374:	cld    
  413375:	frstor [edx+edx*1]
  413378:	pop    ebp
  413379:	daa    
  41337a:	xor    eax,DWORD PTR [edi-0xa716cd4]
  413380:	leave  
  413381:	in     al,0x3
  413383:	pop    edx
  413384:	lahf   
  413385:	sti    
  413386:	sub    eax,0xbcfee3f7
  41338b:	sub    cl,BYTE PTR [ecx]
  41338d:	mov    ebp,0xc1ce4914
  413392:	adc    ch,BYTE PTR [esi-0x7]
  413395:	inc    eax
  413396:	retf   0xb528
  413399:	popf   
  41339a:	and    BYTE PTR [eax+0x5],bh
  41339d:	cmc    
  41339e:	mov    BYTE PTR [esi-0x6dab968b],dl
  4133a4:	sahf   
  4133a5:	jae    0x413398
  4133a7:	push   esi
  4133a8:	out    dx,al
  4133a9:	lahf   
  4133aa:	stos   BYTE PTR es:[edi],al
  4133ab:	jne    0x41340d
  4133ad:	add    DWORD PTR [ecx-0x5862b212],esp
  4133b3:	not    BYTE PTR [ebp-0x77860d0a]
  4133b9:	and    bh,ah
  4133bb:	jg     0x413384
  4133bd:	dec    eax
  4133be:	push   ecx
  4133bf:	int    0xf5
  4133c1:	jno    0x41340b
  4133c3:	pop    ds
  4133c4:	sub    BYTE PTR [ecx-0x5],bl
  4133c7:	jae    0x4133f0
  4133c9:	or     DWORD PTR [esi],ecx
  4133cb:	jg     0x41341c
  4133cd:	aas    
  4133ce:	mov    ecx,0xbca8b8aa
  4133d3:	sbb    ecx,DWORD PTR [ebx+0x35d13824]
  4133d9:	mov    al,ds:0x83c7affe
  4133de:	repz sbb DWORD PTR ds:0x38967205,ebx
  4133e5:	cmp    BYTE PTR [edi-0x5c],dl
  4133e8:	popf   
  4133e9:	sbb    al,0x45
  4133eb:	ins    BYTE PTR es:[edi],dx
  4133ec:	mov    eax,ds:0x56c6cb27
  4133f1:	mov    DWORD PTR [edi+edi*8],0x7990ffbf
  4133f8:	push   ebx
  4133f9:	xor    eax,0x54cef8fa
  4133fe:	cmp    BYTE PTR [ecx],0x55
  413401:	cwde   
  413402:	pusha  
  413403:	(bad)  
  413404:	jecxz  0x4133aa
  413406:	pop    esi
  413407:	sar    DWORD PTR [edi+eiz*1+0x567b2b23],1
  41340e:	adc    al,0xa3
  413410:	out    dx,eax
  413411:	pop    esi
  413412:	out    dx,al
  413413:	and    eax,0x7a15b1e6
  413418:	(bad)  
  413419:	(bad)  
  41341a:	imul   BYTE PTR [ebx]
  41341c:	sub    esp,DWORD PTR [ecx+0x75]
  41341f:	pop    DWORD PTR [ecx]
  413421:	test   eax,0x1858de5b
  413426:	push   ecx
  413427:	retf   0x1179
  41342a:	mov    edx,0xbeda5253
  41342f:	ins    DWORD PTR es:[edi],dx
  413430:	ins    BYTE PTR es:[edi],dx
  413431:	fdivr  QWORD PTR [edi]
  413433:	ins    DWORD PTR es:[edi],dx
  413434:	sub    BYTE PTR [ecx-0x1460b4b0],dh
  41343a:	sbb    bh,BYTE PTR [edi-0xfdca6fc]
  413440:	jne    0x41344c
  413442:	xchg   ebp,eax
  413443:	pushf  
  413444:	cmp    DWORD PTR [esi],0x5f890fe4
  41344a:	fisub  WORD PTR [eax]
  41344c:	jnp    0x41341b
  41344e:	dec    esi
  41344f:	push   0x4521693a
  413454:	jle    0x413417
  413456:	mov    esp,0x21a569
  41345b:	dec    esi
  41345c:	into   
  41345d:	pop    edi
  41345e:	not    DWORD PTR [ecx+0x0]
  413461:	inc    eax
  413462:	jmp    0x2d:0xa6a9b0e0
  413469:	inc    ebx
  41346a:	mov    ebx,0x4f812e98
  41346f:	jmp    0x415a538
  413474:	mov    edi,0x2288a5b0
  413479:	(bad)  
  41347a:	(bad)  
  41347c:	jns    0x4134c8
  41347e:	daa    
  41347f:	xchg   ebp,eax
  413480:	and    eax,0xcc004fc1
  413485:	cmp    BYTE PTR [esp+ebx*4+0x33],bh
  413489:	mov    ds:0x3e57b23a,al
  41348e:	sub    eax,0x4caf9762
  413493:	push   ecx
  413494:	lds    edx,FWORD PTR [eax-0x3b]
  413497:	(bad)  
  413498:	mov    edx,0x8649825b
  41349d:	pop    esi
  41349e:	test   DWORD PTR [edx-0x6032e630],esp
  4134a4:	mov    bl,0xd5
  4134a6:	pop    es
  4134a7:	jmp    DWORD PTR [esi]
  4134a9:	out    0xbd,al
  4134ab:	cmp    al,0x86
  4134ad:	mov    eax,0x9880191d
  4134b2:	inc    ecx
  4134b3:	scas   al,BYTE PTR es:[edi]
  4134b4:	pop    ss
  4134b5:	call   0xa123678d
  4134ba:	mov    ds:0x821db035,eax
  4134bf:	cld    
  4134c0:	dec    ebx
  4134c1:	xchg   ebp,eax
  4134c2:	clc    
  4134c3:	cmp    edi,0xffffffc3
  4134c6:	mov    ebx,0x39f7abcc
  4134cb:	clc    
  4134cc:	test   DWORD PTR [edi+0xf],0x950e10f8
  4134d3:	ficomp WORD PTR [ebx+0x15]
  4134d6:	xor    DWORD PTR [edi],0xd3140bca
  4134dc:	test   eax,0x54d6220c
  4134e1:	mov    esp,0x3caaa64e
  4134e6:	outs   dx,DWORD PTR ds:[esi]
  4134e7:	daa    
  4134e8:	push   es
  4134e9:	loope  0x413510
  4134eb:	mov    ecx,0x4d51fc61
  4134f0:	enter  0xbcc1,0x95
  4134f4:	jmp    0x8b69:0xd84c3bed
  4134fb:	ret    0x4c7b
  4134fe:	shr    BYTE PTR [ebx],0xe1
  413501:	sbb    al,0x7f
  413503:	scas   eax,DWORD PTR es:[edi]
  413504:	test   BYTE PTR [edx],0xa6
  413507:	cld    
  413508:	xchg   ebp,eax
  413509:	outs   dx,BYTE PTR ds:[esi]
  41350a:	mov    bh,dh
  41350c:	ins    BYTE PTR es:[edi],dx
  41350d:	test   DWORD PTR [eax+ebx*2-0x37],esp
  413511:	dec    ecx
  413512:	and    eax,0x7571f91d
  413517:	std    
  413518:	jnp    0x41352d
  41351a:	mov    ds:0x5da1621d,al
  41351f:	out    0x49,eax
  413521:	enter  0xd7ee,0x42
  413525:	fiadd  DWORD PTR [eax]
  413527:	into   
  413528:	mov    eax,ds:0x46030dee
  41352d:	(bad)  
  41352f:	push   ebp
  413530:	add    eax,0x35bdb8cf
  413535:	pop    edi
  413536:	lods   ax,WORD PTR ds:[esi]
  413538:	jbe    0x41357f
  41353a:	add    DWORD PTR [esi+ecx*2+0x70],ebp
  41353e:	inc    edx
  41353f:	daa    
  413540:	xor    al,0x30
  413542:	sbb    bl,dh
  413544:	xlat   BYTE PTR ds:[ebx]
  413545:	repz jbe 0x413540
  413548:	js     0x4135b0
  41354a:	sub    ebp,DWORD PTR [ecx+0x2f]
  41354d:	mov    ah,0xeb
  41354f:	jp     0x4135c6
  413551:	pop    esi
  413552:	mov    ecx,DWORD PTR [edi+0x2d]
  413555:	add    DWORD PTR [eax+0x479fe66b],esi
  41355b:	xchg   esp,eax
  41355c:	mov    esp,0xc37eaa6
  413561:	sbb    eax,0xc2c2068c
  413566:	push   0x657da50c
  41356b:	cmp    dh,BYTE PTR [eax]
  41356d:	mov    edi,0xd6ca057c
  413572:	sti    
  413573:	add    bl,BYTE PTR [esi]
  413575:	add    al,0xfb
  413577:	ret    0x8b44
  41357a:	fsubr  QWORD PTR [esp+ebx*1-0x5f0fba00]
  413581:	scas   eax,DWORD PTR es:[edi]
  413582:	outs   dx,BYTE PTR ds:[esi]
  413583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413584:	mov    bl,0x1e
  413586:	jg     0x413595
  413588:	(bad)  
  413589:	stos   BYTE PTR es:[edi],al
  41358a:	pop    ecx
  41358b:	scas   eax,DWORD PTR es:[edi]
  41358c:	inc    edx
  41358d:	xchg   ebx,eax
  41358e:	leave  
  41358f:	push   esp
  413590:	cmc    
  413591:	fstp   QWORD PTR [eax+0x45]
  413594:	adc    bl,ch
  413596:	(bad)  
  413597:	stos   BYTE PTR es:[edi],al
  413598:	ja     0x413605
  41359a:	scas   al,BYTE PTR es:[edi]
  41359b:	mov    ebp,0xbedfd95c
  4135a0:	aam    0xa7
  4135a2:	jg     0x41352d
  4135a4:	mov    edx,ebx
  4135a6:	int    0xa7
  4135a8:	or     edx,DWORD PTR ss:[ebp+0x515a412f]
  4135af:	mov    edi,edx
  4135b1:	fistp  DWORD PTR [ebx-0x25]
  4135b4:	add    BYTE PTR [ecx+0x5],bl
  4135b7:	fwait
  4135b8:	js     0x4135c5
  4135ba:	test   eax,0x2100b2ca
  4135bf:	push   ss
  4135c0:	ror    BYTE PTR [esi-0x4b],1
  4135c3:	dec    ecx
  4135c4:	sub    BYTE PTR ds:0xb151a1f9,bh
  4135ca:	hlt    
  4135cb:	push   edi
  4135cc:	in     al,0x35
  4135ce:	jne    0x413623
  4135d0:	nop
  4135d1:	ret    0x927d
  4135d4:	or     DWORD PTR [ecx+edi*2-0x77],ebx
  4135d8:	js     0x4135fe
  4135da:	lods   al,BYTE PTR ds:[esi]
  4135db:	lods   eax,DWORD PTR ds:[esi]
  4135dc:	xor    esi,DWORD PTR [ecx-0x49]
  4135df:	dec    ecx
  4135e0:	lea    esp,[edi-0x7c05637a]
  4135e6:	add    eax,0xf55bffec
  4135eb:	mov    ch,0x47
  4135ed:	xor    BYTE PTR [eax-0x77c080e3],ah
  4135f3:	repnz in eax,dx
  4135f5:	xor    BYTE PTR [esi+esi*2],ch
  4135f8:	push   ebp
  4135f9:	dec    ecx
  4135fa:	push   0x5d97b675
  4135ff:	cdq    
  413600:	mov    cl,0xda
  413602:	mov    esp,0x3f5d1d20
  413607:	dec    eax
  413608:	out    0x60,eax
  41360a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41360b:	jne    0x4135d7
  41360d:	bound  esi,QWORD PTR [ebp-0x4a]
  413610:	mov    edx,0x26c2b59d
  413615:	push   ss
  413616:	jge    0x4135c9
  413618:	pop    edx
  413619:	sbb    eax,0xbb60e199
  41361e:	lds    ebx,FWORD PTR [ebx+0x3fa85936]
  413624:	xor    al,0x2a
  413626:	leave  
  413627:	xchg   edi,eax
  413628:	inc    ebp
  413629:	cli    
  41362a:	imul   esp,DWORD PTR [ebx],0x3f
  41362d:	dec    ebx
  41362e:	sub    DWORD PTR [esi-0x5e],ecx
  413631:	(bad)  
  413632:	aad    0xdf
  413634:	ss push edx
  413636:	ret    
  413637:	lock and ebx,0x1b
  41363b:	jmp    0x41369a
  41363d:	lahf   
  41363e:	sub    ecx,ecx
  413640:	das    
  413641:	mov    cl,0x96
  413643:	sti    
  413644:	hlt    
  413645:	clc    
  413646:	mov    es,edi
  413648:	xchg   eax,edx
  41364a:	daa    
  41364b:	je     0x4135d4
  41364d:	fmul   st,st(1)
  41364f:	mov    ss,WORD PTR [edi]
  413651:	push   edi
  413652:	lahf   
  413653:	xchg   ecx,eax
  413654:	scas   eax,DWORD PTR es:[edi]
  413655:	push   ss
  413656:	(bad)  
  413657:	sbb    BYTE PTR [esi+0x26870ae],al
  41365d:	(bad)  
  41365e:	mov    bl,0xcb
  413660:	(bad)  
  413662:	imul   DWORD PTR [ebx-0x40]
  413665:	and    BYTE PTR [ebx+0x62],ah
  413668:	ror    DWORD PTR [eax-0x25fe3816],1
  41366e:	and    DWORD PTR [edi-0x61],ebx
  413671:	sbb    DWORD PTR [edx],edi
  413673:	xchg   edi,eax
  413674:	test   DWORD PTR gs:[ecx+ebx*2],0x9edd3363
  41367c:	jbe    0x4136be
  41367e:	mov    esi,0x2c8925e1
  413683:	adc    al,ah
  413685:	out    dx,eax
  413686:	xchg   edx,eax
  413687:	in     eax,dx
  413688:	xchg   esi,eax
  413689:	fwait
  41368a:	push   DWORD PTR es:0x32cd81fd
  413691:	cdq    
  413692:	bound  edi,QWORD PTR [esi+eax*1-0x10]
  413696:	(bad)  
  413697:	pop    ss
  413698:	rcr    BYTE PTR [esi+0x65],1
  41369b:	mov    esp,0x5e14beeb
  4136a0:	sti    
  4136a1:	fstp   QWORD PTR [eax+0xa]
  4136a4:	aas    
  4136a5:	add    ecx,0xa745e769
  4136ab:	ja     0x4136cf
  4136ad:	adc    eax,DWORD PTR [ebp-0x3283faa4]
  4136b3:	enter  0x739d,0x4c
  4136b7:	and    DWORD PTR [edx+0x314e4408],esp
  4136bd:	es js  0x413653
  4136c0:	arpl   di,si
  4136c2:	cdq    
  4136c3:	in     al,dx
  4136c4:	cmp    BYTE PTR [ebx],dh
  4136c6:	cmp    DWORD PTR ds:0x351f8bd7,ebp
  4136cc:	cdq    
  4136cd:	jns    0x4136fe
  4136cf:	mov    edi,0xc95a10dd
  4136d4:	or     edx,DWORD PTR [ebp+0x43b0b4a3]
  4136da:	jl     0x41374b
  4136dc:	std    
  4136dd:	arpl   cx,cx
  4136df:	out    dx,eax
  4136e0:	push   esi
  4136e1:	fwait
  4136e2:	mov    al,0xfc
  4136e4:	or     al,0xaa
  4136e6:	popf   
  4136e7:	aas    
  4136e8:	test   DWORD PTR [esi],esi
  4136ea:	out    0xde,eax
  4136ec:	repnz ins BYTE PTR es:[edi],dx
  4136ee:	and    eax,0x6dd91d92
  4136f3:	mov    ds:0xc3e2fef9,al
  4136f8:	push   cs
  4136f9:	cmp    BYTE PTR [edi-0x1c],ah
  4136fc:	dec    ebx
  4136fd:	mov    ds:0x6d3f7f0d,eax
  413702:	ins    BYTE PTR es:[edi],dx
  413703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413704:	xor    al,0x66
  413706:	ins    DWORD PTR es:[edi],dx
  413707:	mov    al,fs:0xc9729d61
  41370d:	dec    esi
  41370e:	adc    DWORD PTR [esi-0x58512c2a],esp
  413714:	test   al,0x78
  413716:	stc    
  413717:	sub    BYTE PTR [eax-0x528ead6],0x6f
  41371e:	dec    ebp
  41371f:	adc    cl,dl
  413721:	xor    BYTE PTR [ecx+0x2bfb22e6],cl
  413727:	rcr    ecx,1
  413729:	call   0xed8d:0xc446ed76
  413730:	jp     0x413770
  413732:	xlat   BYTE PTR ds:[ebx]
  413733:	jecxz  0x41376f
  413735:	sub    ah,BYTE PTR [ecx-0x668e1ad5]
  41373b:	add    DWORD PTR [eax],ebx
  41373d:	add    DWORD PTR [ebp-0x52],edx
  413740:	stos   BYTE PTR es:[edi],al
  413741:	loopne 0x413740
  413743:	out    dx,al
  413744:	dec    esp
  413745:	repz jo 0x41372e
  413748:	fmul   QWORD PTR [esp+ebx*1+0x40]
  41374c:	test   DWORD PTR [eax],edi
  41374e:	jle    0x4137c3
  413750:	jl     0x413798
  413752:	sar    BYTE PTR [ebp+0x16],cl
  413755:	mov    ?,WORD PTR [ebp+0x25]
  413758:	cmc    
  413759:	mov    ch,0x8f
  41375b:	xchg   edx,eax
  41375c:	fcomi  st,st(0)
  41375e:	fld    QWORD PTR [edi-0x2c]
  413761:	cmp    al,0xbf
  413763:	call   FWORD PTR [edx-0xcffb170]
  413769:	add    DWORD PTR [ebx-0x1ac46c4b],eax
  41376f:	or     ah,ah
  413771:	push   edi
  413772:	jb     0x4137a2
  413774:	neg    ebp
  413776:	fwait
  413777:	ret    0xfe67
  41377a:	pop    ecx
  41377b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41377c:	add    al,0xeb
  41377e:	dec    esi
  41377f:	adc    BYTE PTR [esi-0x48ef2005],ch
  413785:	fistp  DWORD PTR [ecx+0x2c]
  413788:	xor    esi,edx
  41378a:	dec    edx
  41378b:	pop    ebx
  41378c:	adc    ah,BYTE PTR [edi+0x2c]
  41378f:	gs pushf 
  413791:	jo     0x41375f
  413793:	jne    0x41379c
  413795:	cs cmp al,0xa4
  413798:	xchg   edx,eax
  413799:	out    0xb4,al
  41379b:	or     eax,0x597576b9
  4137a0:	shl    BYTE PTR [eax+edi*1+0x65],1
  4137a4:	leave  
  4137a5:	mov    esp,0xa7081ef6
  4137aa:	out    0xaa,eax
  4137ac:	rol    BYTE PTR [ecx+0x66],cl
  4137af:	push   esi
  4137b0:	and    DWORD PTR [ecx+0x76],ebp
  4137b3:	shl    DWORD PTR [edx+0x43742e89],0xeb
  4137ba:	push   esi
  4137bb:	sbb    dh,BYTE PTR [edx+0x479a6fbe]
  4137c1:	test   al,0x7f
  4137c3:	xlat   BYTE PTR ds:[ebx]
  4137c4:	(bad)  
  4137c6:	bound  eax,QWORD PTR [edi+edx*4]
  4137c9:	xor    dh,BYTE PTR [eax]
  4137cb:	stc    
  4137cc:	sbb    BYTE PTR [eax],0x9f
  4137cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137d0:	pusha  
  4137d1:	rcr    ebp,cl
  4137d3:	inc    eax
  4137d4:	mov    eax,ds:0x29633dcf
  4137d9:	(bad)  
  4137da:	cmp    BYTE PTR [esi],al
  4137dc:	pop    ebx
  4137dd:	fdivr  QWORD PTR [ecx]
  4137df:	push   es
  4137e0:	ja     0x4137e0
  4137e2:	push   ebx
  4137e3:	hlt    
  4137e4:	stc    
  4137e5:	cmp    bl,0x22
  4137e8:	cli    
  4137e9:	xchg   ebp,eax
  4137ea:	retf   0x7adb
  4137ed:	or     esp,DWORD PTR [edx]
  4137ef:	ja     0x413845
  4137f1:	sub    eax,0x4
  4137f4:	div    BYTE PTR [edx]
  4137f6:	mov    eax,ds:0xcaf53c60
  4137fb:	dec    ebx
  4137fc:	mov    bh,0xa3
  4137fe:	imul   BYTE PTR [edx-0x41]
  413801:	adc    eax,eax
  413803:	xchg   ecx,eax
  413804:	adc    eax,0xa93463b0
  413809:	pop    ebp
  41380a:	or     DWORD PTR [esi-0x22385d1c],ecx
  413810:	and    ch,BYTE PTR [esi-0x7d]
  413813:	outs   dx,BYTE PTR ds:[esi]
  413814:	jg     0x4137a2
  413816:	cmp    DWORD PTR [eax-0x69],esp
  413819:	or     bh,BYTE PTR [edi-0x6c]
  41381c:	cmp    DWORD PTR ds:0x3b73b38a,edi
  413822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413823:	sahf   
  413824:	mov    edx,0x54bae78a
  413829:	push   esp
  41382a:	cmp    bl,BYTE PTR [edi]
  41382c:	or     BYTE PTR [eax+0x35],ah
  41382f:	inc    esi
  413830:	push   esi
  413831:	dec    ebx
  413832:	mov    edi,0x8d4fbb81
  413837:	pop    eax
  413838:	je     0x413889
  41383a:	arpl   WORD PTR [edi],si
  41383c:	stos   DWORD PTR es:[edi],eax
  41383d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41383e:	loopne 0x41385b
  413840:	fisubr DWORD PTR [ebp-0x66b3039b]
  413846:	aad    0x52
  413848:	bound  esp,QWORD PTR [esi]
  41384a:	jne    0x4138c4
  41384c:	int    0x6e
  41384e:	test   al,0x0
  413850:	jmp    0xc54d:0x641ef437
  413857:	sahf   
  413858:	and    eax,DWORD PTR [esi]
  41385a:	cmp    BYTE PTR [ebx+0x24],al
  41385d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41385e:	jecxz  0x4137f2
  413860:	push   ecx
  413861:	in     eax,dx
  413862:	pop    edi
  413863:	pop    ss
  413864:	call   0x7156:0x3a9c5957
  41386b:	xchg   edx,eax
  41386c:	cmp    BYTE PTR [edx-0x15013efd],0xb8
  413873:	jmp    0xcd4ba31e
  413878:	(bad)  
  41387a:	fstp   DWORD PTR [eax]
  41387c:	jle    0x41382c
  41387e:	ja     0x413829
  413880:	mov    bh,0x59
  413882:	aad    0x2c
  413884:	aaa    
  413885:	out    dx,eax
  413886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413888:	icebp  
  413889:	cmc    
  41388a:	cmp    ebx,DWORD PTR [esp+esi*8-0x4c]
  41388e:	dec    edi
  41388f:	jo     0x4138fb
  413891:	int3   
  413892:	mov    bl,0xfe
  413894:	stos   BYTE PTR es:[edi],al
  413895:	adc    dl,cl
  413897:	aas    
  413898:	jae    0x413867
  41389a:	arpl   WORD PTR [edi+edx*1],ax
  41389d:	sbb    bh,BYTE PTR [edx+0x7812e25e]
  4138a3:	stos   DWORD PTR es:[edi],eax
  4138a4:	das    
  4138a5:	sub    BYTE PTR [eax],al
  4138a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138a8:	mov    bl,0x78
  4138aa:	push   ds
  4138ab:	mov    bh,0x90
  4138ad:	out    dx,eax
  4138ae:	mov    dl,0x9b
  4138b0:	cmp    al,0x7
  4138b2:	adc    DWORD PTR [ebx+ebx*8-0x74],ecx
  4138b6:	imul   ch
  4138b8:	mov    DWORD PTR [ebx+0x35],edi
  4138bb:	test   edi,0x4d009d2c
  4138c1:	and    DWORD PTR [esp+ebx*2-0x72],esp
  4138c5:	push   0x2585e901
  4138ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138cb:	pop    ebp
  4138cc:	adc    BYTE PTR [edx-0x280c0e29],dh
  4138d2:	clc    
  4138d3:	mov    ebp,0xa6e68b67
  4138d8:	ins    BYTE PTR es:[edi],dx
  4138d9:	dec    eax
  4138da:	adc    ebx,DWORD PTR [esi+ebx*8+0x26]
  4138de:	ret    0x4b1f
  4138e1:	pop    esp
  4138e2:	or     eax,0x58d4a473
  4138e7:	in     al,dx
  4138e8:	mov    ds:0x4de86c95,eax
  4138ed:	push   es
  4138ee:	fs loope 0x41390e
  4138f1:	add    al,0x5b
  4138f3:	dec    edx
  4138f4:	imul   esi,edx,0x13f3025f
  4138fa:	push   eax
  4138fb:	lds    ebx,FWORD PTR [eax+0x8]
  4138fe:	std    
  4138ff:	mov    esi,0xad300753
  413904:	dec    esp
  413905:	inc    ecx
  413906:	sti    
  413907:	js     0x413969
  413909:	sbb    DWORD PTR [eax],esp
  41390b:	or     ebx,DWORD PTR [edi+0x69]
  41390e:	or     DWORD PTR [ecx],ebp
  413910:	dec    edi
  413911:	or     edi,DWORD PTR [eax-0xd]
  413914:	sbb    ch,bh
  413916:	(bad)  
  413917:	sbb    al,ch
  413919:	jo     0x41397e
  41391b:	cmp    al,0x29
  41391d:	inc    ebx
  41391e:	and    eax,0xd002c0f6
  413923:	inc    esp
  413924:	jle    0x413980
  413926:	add    esi,edi
  413928:	std    
  413929:	repnz mov ecx,DWORD PTR ss:0x595e0d80
  413931:	mov    BYTE PTR [ebp+0x5],bl
  413934:	mov    DWORD PTR [ecx+0x672abd03],ebx
  41393a:	jmp    DWORD PTR [edx-0x433fcf35]
  413940:	out    dx,al
  413941:	and    dl,BYTE PTR [edx+0x4e9e3c5e]
  413947:	dec    ebx
  413948:	and    edx,DWORD PTR [eax+0x5584597a]
  41394e:	loope  0x4139b8
  413950:	or     bh,BYTE PTR [esi+0x1f29dd27]
  413956:	mov    ds:0x472cfc66,eax
  41395b:	sub    eax,0x76890b0b
  413960:	in     eax,dx
  413961:	ja     0x4139c0
  413963:	scas   eax,DWORD PTR es:[edi]
  413964:	std    
  413965:	fs inc ecx
  413967:	xlat   BYTE PTR ds:[ebx]
  413968:	mov    ecx,0x525e28b2
  41396d:	fcom   DWORD PTR [eax+0x73]
  413970:	jg     0x413956
  413972:	int    0x66
  413974:	dec    ecx
  413975:	and    dl,BYTE PTR [edx-0x100bfd2a]
  41397b:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41397d:	dec    ecx
  41397e:	mov    ebp,0xc5411587
  413983:	gs inc edx
  413985:	mov    eax,0xc97c01cd
  41398a:	inc    DWORD PTR [ebp-0x10]
  41398d:	mov    dh,0xa2
  41398f:	rcl    DWORD PTR [edi+0x1f1895d],0x6e
  413996:	mov    bh,0x6e
  413998:	out    dx,eax
  413999:	sub    dh,0x50
  41399c:	clc    
  41399d:	sub    esi,DWORD PTR [eax-0x42]
  4139a0:	jbe    0x4139f3
  4139a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139a3:	and    al,0x2b
  4139a5:	and    ebx,DWORD PTR [edi+eiz*2]
  4139a8:	lds    esp,FWORD PTR [esp+esi*4]
  4139ab:	pop    ecx
  4139ac:	and    BYTE PTR [ebx],ch
  4139ae:	add    ah,BYTE PTR [esi-0x29e4a1c3]
  4139b4:	retf   
  4139b5:	inc    esp
  4139b6:	sbb    bl,bl
  4139b8:	cmp    BYTE PTR [eax-0x6958a8d],dh
  4139be:	in     al,dx
  4139bf:	(bad)  
  4139c0:	dec    edx
  4139c1:	(bad)  
  4139c2:	sub    ebx,edx
  4139c4:	gs push es
  4139c6:	sbb    BYTE PTR [esi+0x17],ch
  4139c9:	sub    BYTE PTR [eax],ah
  4139cb:	push   ss
  4139cc:	int3   
  4139cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139ce:	lahf   
  4139cf:	das    
  4139d0:	mov    ebx,0x8ef9413c
  4139d5:	jecxz  0x413a3f
  4139d7:	inc    edx
  4139d8:	push   ebx
  4139d9:	loopne 0x413a1d
  4139db:	cmp    dh,dh
  4139dd:	inc    ecx
  4139de:	sub    bh,bh
  4139e0:	xchg   esp,eax
  4139e1:	ret    0x16b
  4139e4:	and    DWORD PTR [ecx-0x2e1c93c5],ebx
  4139ea:	adc    edi,eax
  4139ec:	out    dx,al
  4139ed:	mov    eax,DWORD PTR [esi-0x80]
  4139f0:	pop    ss
  4139f1:	dec    esi
  4139f2:	fst    DWORD PTR [edx+ebx*1+0x43d9f60c]
  4139f9:	dec    ebx
  4139fa:	retf   0xb750
  4139fd:	cli    
  4139fe:	xlat   BYTE PTR ds:[ebx]
  4139ff:	lock and ebx,DWORD PTR [edx-0x2d5b87a3]
  413a06:	sbb    bh,BYTE PTR [edx-0x190aba8d]
  413a0c:	xchg   ecx,eax
  413a0d:	mov    dh,0x7
  413a0f:	sbb    esp,DWORD PTR [edx]
  413a11:	fbld   TBYTE PTR ds:0xeb68a4ca
  413a17:	es push ds
  413a19:	test   al,0xd0
  413a1b:	pop    ss
  413a1c:	ficomp DWORD PTR [edx-0x5af1cca7]
  413a22:	das    
  413a23:	je     0x4139e5
  413a25:	les    edx,FWORD PTR [esi]
  413a27:	or     ah,cl
  413a29:	mov    DWORD PTR [ebx],ecx
  413a2b:	lods   al,BYTE PTR ds:[esi]
  413a2c:	adc    eax,0x699b71b9
  413a31:	not    ah
  413a33:	clc    
  413a34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a35:	(bad)  
  413a36:	sub    al,0xdb
  413a38:	iret   
  413a39:	pop    esp
  413a3a:	sub    cl,BYTE PTR [edi-0x7b36b4e0]
  413a40:	sbb    edx,DWORD PTR [esi]
  413a42:	std    
  413a43:	je     0x413a43
  413a45:	pop    esp
  413a46:	outs   dx,BYTE PTR ds:[esi]
  413a47:	std    
  413a48:	fprem  
  413a4a:	sbb    BYTE PTR [ecx],0xd9
  413a4d:	scas   eax,DWORD PTR es:[edi]
  413a4e:	mov    edx,0x38a3218d
  413a53:	fisttp QWORD PTR [edx]
  413a55:	mov    dl,0x4b
  413a57:	call   0x4333:0xd9f0e3ad
  413a5e:	outs   dx,BYTE PTR ds:[esi]
  413a5f:	and    eax,0xece7ca77
  413a64:	mov    dh,bh
  413a66:	adc    eax,0x6e7687c8
  413a6b:	repnz sbb ebx,ecx
  413a6e:	pop    ds
  413a6f:	sbb    dl,BYTE PTR [ecx+0x6da21b63]
  413a75:	div    DWORD PTR [ebx+ecx*1]
  413a78:	call   0x1e22:0x92b23ed
  413a7f:	retf   0xc807
  413a82:	pushf  
  413a83:	es stc 
  413a85:	jo     0x413a3d
  413a87:	ret    0xddb4
  413a8a:	fstp   TBYTE PTR [edi+0x25]
  413a8d:	jbe    0x413ab8
  413a8f:	jle    0x413aaf
  413a91:	inc    edx
  413a92:	es fcomp st(6)
  413a95:	xor    BYTE PTR [esi-0x55],dh
  413a98:	cwde   
  413a99:	cmp    al,0x7
  413a9b:	repnz imul ebx,ecx,0x15136076
  413aa2:	stos   DWORD PTR es:[edi],eax
  413aa3:	add    dl,BYTE PTR [esi-0x68083749]
  413aa9:	adc    al,0x5a
  413aac:	fs push ss
  413aae:	inc    DWORD PTR ds:0xd7fe94e6
  413ab4:	push   ebp
  413ab5:	lea    eax,[edx+0x23]
  413ab8:	(bad)  
  413aba:	jns    0x413b21
  413abc:	imul   esi,esi,0xffffff9a
  413abf:	mov    dh,0xb8
  413ac1:	std    
  413ac2:	adc    ecx,DWORD PTR [edx]
  413ac4:	jecxz  0x413a50
  413ac6:	lahf   
  413ac7:	xor    eax,0x8a0003b2
  413acc:	dec    edi
  413acd:	cdq    
  413ace:	and    BYTE PTR [ebp+esi*4-0x56c28d13],bh
  413ad5:	inc    eax
  413ad6:	jb     0x815e621e
  413adc:	cli    
  413add:	fdiv   DWORD PTR [edi+0x30]
  413ae0:	push   0x7e
  413ae2:	ins    DWORD PTR es:[edi],dx
  413ae3:	out    0x80,al
  413ae5:	jp     0x413b1a
  413ae7:	jl     0x413ab2
  413ae9:	jmp    0x413af4
  413aeb:	lods   eax,DWORD PTR ds:[esi]
  413aec:	aad    0xa1
  413aee:	mov    bh,0x9b
  413af0:	pop    edx
  413af1:	adc    eax,0x32100d43
  413af6:	ins    BYTE PTR es:[edi],dx
  413af7:	mov    WORD PTR [ecx-0x4d],fs
  413afa:	mov    WORD PTR [eax+0x355f7dd0],cs
  413b00:	mov    ch,0x4a
  413b02:	ins    BYTE PTR es:[edi],dx
  413b03:	loop   0x413b57
  413b05:	lea    ebx,[edx-0x7ab772d1]
  413b0b:	mov    ah,0x26
  413b0d:	dec    esi
  413b0e:	ds push 0x14c1770d
  413b14:	pop    ebx
  413b15:	mov    esi,0x49f0d5f7
  413b1a:	lea    ebp,[esi-0x46]
  413b1d:	(bad)  
  413b1e:	xor    edx,DWORD PTR [eax]
  413b20:	xor    ch,bh
  413b22:	popa   
  413b23:	sti    
  413b24:	add    eax,0x38f1331a
  413b29:	aaa    
  413b2a:	popa   
  413b2b:	in     eax,dx
  413b2c:	aam    0xc3
  413b2e:	and    ah,BYTE PTR [edx]
  413b30:	or     BYTE PTR [ecx],0x82
  413b33:	xchg   ebx,eax
  413b34:	or     BYTE PTR [ebx-0x4a27871],ch
  413b3a:	sti    
  413b3b:	mov    ecx,0xaf53dfbd
  413b40:	jp     0x413b52
  413b42:	jae    0x413b5f
  413b44:	repz cdq 
  413b46:	mov    WORD PTR [edx],cs
  413b48:	mov    bl,0x78
  413b4a:	add    al,0xb
  413b4c:	inc    esi
  413b4d:	sbb    eax,0xc135fa8b
  413b52:	add    BYTE PTR [edx+0x45c2ea3e],al
  413b58:	fwait
  413b59:	sub    BYTE PTR [esi],ch
  413b5b:	jmp    0x7c6e:0x5ec8d735
  413b62:	xlat   BYTE PTR ds:[ebx]
  413b63:	aaa    
  413b64:	push   esp
  413b65:	mov    WORD PTR [edi-0xe],gs
  413b68:	in     eax,0x6d
  413b6a:	sbb    ebx,eax
  413b6c:	jp     0x413b88
  413b6e:	mov    cs,WORD PTR [ebp-0x1ef54fe]
  413b74:	out    0x3,eax
  413b76:	out    0xe2,eax
  413b78:	and    ch,bl
  413b7a:	pop    es
  413b7b:	pop    ebx
  413b7c:	pop    eax
  413b7d:	sbb    DWORD PTR [edx],eax
  413b7f:	cld    
  413b80:	mov    ecx,DWORD PTR [edi]
  413b82:	je     0x413bad
  413b84:	shl    DWORD PTR [ecx-0x24],cl
  413b87:	clc    
  413b88:	jecxz  0x413bd6
  413b8a:	(bad)  
  413b8b:	es push ds
  413b8d:	cdq    
  413b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b8f:	mov    al,0x98
  413b91:	cmp    DWORD PTR [ebx+0x5e],esp
  413b94:	sti    
  413b95:	inc    ebx
  413b96:	repnz lahf 
  413b98:	lds    eax,FWORD PTR [ecx]
  413b9a:	jl     0x413b9f
  413b9c:	je     0x413b2b
  413b9e:	mov    cs,WORD PTR [ecx-0x35da38aa]
  413ba4:	pop    ecx
  413ba5:	sti    
  413ba6:	mov    ah,0x9e
  413ba8:	and    al,0xde
  413baa:	(bad)  
  413bab:	pop    esp
  413bac:	push   cs
  413bad:	mov    cl,0x67
  413baf:	mov    WORD PTR [ebp+0x59cf60fe],fs
  413bb5:	adc    al,0x6
  413bb7:	jmp    0x413ba5
  413bb9:	pusha  
  413bba:	outs   dx,DWORD PTR ds:[esi]
  413bbb:	in     eax,0x54
  413bbd:	mov    edx,0x98644232
  413bc2:	and    eax,0x5b628a3e
  413bc7:	js     0x413b63
  413bc9:	aaa    
  413bca:	cs xchg ebp,eax
  413bcc:	inc    esi
  413bcd:	jne    0x413bfa
  413bcf:	sar    BYTE PTR [ebx-0x436914b1],0xb2
  413bd6:	sub    esp,DWORD PTR [ebx]
  413bd8:	xor    bh,ah
  413bda:	inc    ecx
  413bdb:	daa    
  413bdc:	sbb    bh,BYTE PTR [ecx]
  413bde:	rcr    dl,cl
  413be0:	xor    dh,al
  413be2:	das    
  413be3:	dec    eax
  413be4:	push   0x3
  413be6:	(bad)  
  413be7:	std    
  413be8:	add    al,0xc4
  413bea:	add    bl,BYTE PTR [esi-0xa]
  413bed:	lahf   
  413bee:	mov    bl,0x52
  413bf0:	in     al,0xc7
  413bf2:	shr    edx,cl
  413bf4:	jne    0x413be9
  413bf6:	fldcw  WORD PTR [eiz*1+0x305a97be]
  413bfd:	arpl   WORD PTR [eax-0x38],si
  413c00:	div    DWORD PTR [eax-0x121ac305]
  413c06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c07:	lods   al,BYTE PTR ds:[esi]
  413c08:	je     0x413ba0
  413c0a:	mov    esi,0x6663f96a
  413c0f:	stc    
  413c10:	inc    ebx
  413c11:	nop
  413c12:	(bad)  
  413c13:	push   ecx
  413c14:	sub    cl,dh
  413c16:	rol    DWORD PTR [ecx+0x1e1c7b89],0x8e
  413c1d:	adc    DWORD PTR [ebx],eax
  413c1f:	(bad)  
  413c20:	jg     0x413baf
  413c22:	mov    bp,0xf5ef
  413c26:	test   eax,0x5401aa65
  413c2b:	(bad)  
  413c2c:	jno    0x413c26
  413c2e:	dec    edi
  413c2f:	lods   al,BYTE PTR ds:[esi]
  413c30:	sbb    ebp,DWORD PTR [ebx+0x7a]
  413c33:	push   esi
  413c34:	and    bl,bh
  413c36:	jl     0x413c85
  413c38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c39:	jmp    0x413c6b
  413c3b:	std    
  413c3c:	call   0xbd9956b
  413c41:	inc    edx
  413c42:	xlat   BYTE PTR ds:[ebx]
  413c43:	xor    dl,bh
  413c45:	pop    ds
  413c46:	ins    BYTE PTR es:[edi],dx
  413c47:	retf   
  413c48:	ror    BYTE PTR [eax+0x79],1
  413c4b:	clc    
  413c4c:	adc    bh,ch
  413c4e:	nop
  413c4f:	mov    bh,0x21
  413c51:	and    eax,0x68021f7d
  413c56:	jl     0x413c05
  413c58:	dec    ecx
  413c59:	test   DWORD PTR [ebx+edi*2+0x1925eab9],edi
  413c60:	outs   dx,BYTE PTR ds:[esi]
  413c61:	xor    ah,dh
  413c63:	loopne 0x413c82
  413c65:	mov    esp,0x53c1fb0a
  413c6a:	push   edx
  413c6b:	adc    bl,al
  413c6d:	dec    ecx
  413c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c6f:	mov    DWORD PTR [edx],0xdace13b7
  413c75:	xchg   esi,eax
  413c76:	mov    BYTE PTR [esi+0x41c0dbfa],cl
  413c7c:	xor    eax,0x476d392
  413c81:	aas    
  413c82:	xchg   DWORD PTR [ecx-0x9],eax
  413c85:	jns    0x413d03
  413c87:	outs   dx,BYTE PTR ds:[esi]
  413c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c89:	pop    ds
  413c8a:	push   es
  413c8b:	test   BYTE PTR [eax+edx*8+0x1c],bl
  413c8f:	cmc    
  413c90:	mov    cl,0x7f
  413c92:	scas   eax,DWORD PTR es:[edi]
  413c93:	popa   
  413c94:	out    0x4,al
  413c96:	std    
  413c97:	xchg   BYTE PTR [ecx+0x16],bh
  413c9a:	pusha  
  413c9b:	stos   BYTE PTR es:[edi],al
  413c9c:	sti    
  413c9d:	inc    BYTE PTR [edx]
  413c9f:	mov    al,0x48
  413ca1:	push   ecx
  413ca2:	lods   al,BYTE PTR ds:[esi]
  413ca3:	repz jns 0x413c8d
  413ca6:	adc    DWORD PTR [esi+0x6],0xffffffb6
  413caa:	and    BYTE PTR [ebp+ebp*2+0x7b886ffd],0x51
  413cb2:	pusha  
  413cb3:	dec    esp
  413cb4:	xor    esi,DWORD PTR [eax+eiz*4]
  413cb7:	inc    ebp
  413cb8:	data16 jns 0x413c69
  413cbb:	aas    
  413cbc:	cmp    al,0xc3
  413cbe:	mov    eax,fs:0x4793db9b
  413cc4:	outs   dx,BYTE PTR ds:[esi]
  413cc5:	pop    ebx
  413cc6:	xor    eax,0xf465b25b
  413ccb:	jecxz  0x413cb6
  413ccd:	paddw  mm0,QWORD PTR [edx]
  413cd0:	lods   al,BYTE PTR ds:[esi]
  413cd1:	int3   
  413cd2:	call   0xb3ae:0xb7b9311a
  413cd9:	and    eax,0x8ef91bac
  413cde:	cli    
  413cdf:	xlat   BYTE PTR ds:[ebx]
  413ce0:	and    ch,BYTE PTR [edi+0x14]
  413ce3:	push   es
  413ce4:	push   eax
  413ce5:	scas   eax,DWORD PTR es:[edi]
  413ce6:	test   DWORD PTR [edx],edx
  413ce8:	add    ebp,DWORD PTR [edi+0x1a]
  413ceb:	inc    eax
  413cec:	dec    ebp
  413ced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cee:	hlt    
  413cef:	cmp    DWORD PTR [esi+edi*8],edi
  413cf2:	dec    edi
  413cf3:	adc    ah,0x86
  413cf6:	xchg   esi,eax
  413cf7:	dec    edx
  413cf8:	fwait
  413cf9:	push   es
  413cfa:	outs   dx,BYTE PTR ds:[esi]
  413cfb:	sti    
  413cfc:	outs   dx,BYTE PTR ds:[esi]
  413cfd:	popa   
  413cfe:	push   eax
  413cff:	mov    ah,0x6f
  413d01:	test   DWORD PTR [eax],esi
  413d03:	or     DWORD PTR [ecx+0x7b],esp
  413d06:	lock adc BYTE PTR [edi],cl
  413d09:	pop    edx
  413d0a:	inc    ebx
  413d0b:	push   edi
  413d0c:	in     eax,0xa9
  413d0e:	or     al,0x12
  413d10:	cmp    al,0xc7
  413d12:	aam    0x30
  413d14:	outs   dx,BYTE PTR ds:[esi]
  413d15:	xchg   esi,eax
  413d16:	or     al,BYTE PTR [esi]
  413d18:	pop    es
  413d19:	cmp    eax,0x9dbded0d
  413d1e:	inc    ebx
  413d1f:	ret    0x4722
  413d22:	xchg   ebp,eax
  413d23:	push   cs
  413d24:	jbe    0x413cae
  413d26:	sete   BYTE PTR [eax+edx*4]
  413d2a:	jae    0x413d52
  413d2c:	cli    
  413d2d:	sub    DWORD PTR [ebx],edx
  413d2f:	mov    ebp,0x65cfbe4d
  413d34:	and    BYTE PTR fs:[edi],cl
  413d37:	fsubr  DWORD PTR [ebx+0x5a7a8462]
  413d3d:	mul    DWORD PTR [ebx]
  413d3f:	and    edi,ebx
  413d41:	hlt    
  413d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d43:	xor    BYTE PTR [esi],0xa5
  413d46:	push   edi
  413d47:	(bad)  
  413d48:	cs mov ecx,ss
  413d4b:	pop    eax
  413d4c:	mov    dl,BYTE PTR [esi-0x46]
  413d4f:	fs lahf 
  413d51:	loop   0x413dbe
  413d53:	push   ebp
  413d54:	xor    edx,DWORD PTR [edi+0x3]
  413d57:	test   DWORD PTR [ebp-0x71],edx
  413d5a:	push   edx
  413d5b:	sub    esp,DWORD PTR [ebx+0x45ae60d]
  413d61:	in     eax,0xa7
  413d63:	repnz adc al,0x1a
  413d66:	pop    esi
  413d67:	into   
  413d68:	jmp    0xdfd4d8f4
  413d6d:	mov    eax,0x84136490
  413d72:	mov    esi,0xfcc8850b
  413d77:	repz js 0x413d61
  413d7a:	add    cl,BYTE PTR [esi-0x7d]
  413d7d:	test   BYTE PTR [esi],cl
  413d7f:	inc    ecx
  413d80:	inc    esi
  413d81:	or     DWORD PTR [ebp*2-0x6e033642],edi
  413d88:	stos   DWORD PTR es:[edi],eax
  413d89:	xor    al,0xc7
  413d8b:	stos   BYTE PTR es:[edi],al
  413d8c:	scas   al,BYTE PTR es:[edi]
  413d8d:	fdiv   QWORD PTR [ebp-0x41]
  413d90:	mov    bl,0xff
  413d92:	mov    esi,0x3679337
  413d97:	mov    al,ds:0x6bf7cb5b
  413d9c:	adc    al,0xc6
  413d9e:	out    dx,eax
  413d9f:	lods   al,BYTE PTR ds:[esi]
  413da0:	arpl   WORD PTR [edx],bp
  413da2:	and    eax,0x56533b6e
  413da7:	pop    ecx
  413da8:	jmp    0x979d95f4
  413dad:	out    0x7d,eax
  413daf:	clc    
  413db0:	mov    ch,0x2a
  413db2:	hlt    
  413db3:	(bad)  
  413db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413db6:	inc    edx
  413db7:	mov    dl,0x39
  413db9:	xlat   BYTE PTR ds:[ebx]
  413dba:	adc    dl,ch
  413dbc:	push   ebp
  413dbd:	dec    ebx
  413dbe:	(bad)  
  413dbf:	mov    esp,0x9b08d63a
  413dc4:	test   al,0x58
  413dc6:	xor    edi,DWORD PTR [ebp+edx*4-0xa42808b]
  413dcd:	push   esi
  413dce:	jnp    0x413d6b
  413dd0:	bound  eax,QWORD PTR [edi+ecx*4]
  413dd3:	icebp  
  413dd4:	mov    eax,0xbe1079a5
  413dd9:	xchg   DWORD PTR [eax-0x12a3ca6c],eax
  413ddf:	imul   ebp,esp,0xbfb20196
  413de5:	mov    edi,0x7f547d5b
  413dea:	call   0x46785db0
  413def:	jp     0x413dd3
  413df1:	mov    ah,0xb2
  413df3:	stc    
  413df4:	push   esp
  413df5:	aam    0x51
  413df7:	test   BYTE PTR [ebx-0x57],dl
  413dfa:	ss mov edi,0xc8cb9c89
  413e00:	push   es
  413e01:	adc    dl,al
  413e03:	sbb    dh,al
  413e05:	adc    DWORD PTR [ecx+0x3f45f3f5],edx
  413e0b:	sub    eax,DWORD PTR [edx+esi*1+0x208bc6a3]
  413e12:	jns    0x413da2
  413e14:	loope  0x413e0b
  413e16:	mov    edx,0x87859848
  413e1b:	ss inc ecx
  413e1d:	popa   
  413e1e:	xor    eax,0x9c7995d4
  413e23:	mov    ebx,0x37e19895
  413e28:	jl     0x413dd2
  413e2a:	stc    
  413e2b:	mov    BYTE PTR [esp+ebx*8-0x6ec05631],cl
  413e32:	pop    ecx
  413e33:	cmp    BYTE PTR [ebx+0x4d],ah
  413e36:	lea    eax,[edx+0x5a1390a5]
  413e3c:	(bad)  
  413e3d:	dec    esi
  413e3e:	cmp    al,0x33
  413e40:	mov    esp,0xd091b9be
  413e45:	les    ecx,FWORD PTR [ecx-0x5973ee71]
  413e4b:	sub    edi,DWORD PTR [ebx]
  413e4d:	adc    eax,0x889e7dd6
  413e52:	lea    esp,ds:0xbf7aa51a
  413e58:	hlt    
  413e59:	data16 fdiv st(3),st
  413e5c:	mov    esp,0x4acf128e
  413e61:	xchg   esp,eax
  413e62:	jae    0x413df5
  413e64:	call   0xa2e:0x2ad80283
  413e6b:	mov    ds:0x7999c844,al
  413e70:	sar    BYTE PTR [edx+0x9],cl
  413e73:	and    ebp,DWORD PTR [edi]
  413e75:	out    dx,al
  413e76:	jl     0x413eb2
  413e78:	add    dh,0x59
  413e7b:	(bad)  
  413e7c:	add    dh,BYTE PTR [eax-0x37]
  413e7f:	inc    ebp
  413e80:	push   ebx
  413e81:	dec    edx
  413e82:	jae    0x413e69
  413e84:	iret   
  413e85:	adc    al,0x1f
  413e87:	mov    dl,0x65
  413e89:	sub    al,0xb4
  413e8b:	xchg   ebx,eax
  413e8c:	imul   BYTE PTR [ebx]
  413e8e:	cli    
  413e8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e90:	mov    cl,BYTE PTR [ecx+0x6d]
  413e93:	mov    ebx,0xf9e75dd2
  413e98:	retf   
  413e99:	sbb    DWORD PTR ds:[edx-0x365c2f1d],eax
  413ea0:	pop    ebp
  413ea1:	add    al,0x43
  413ea3:	add    DWORD PTR [edx],esp
  413ea5:	sahf   
  413ea6:	sub    eax,0xd1646c88
  413eab:	inc    esi
  413eac:	fidiv  WORD PTR [ebp-0x79bdce0f]
  413eb2:	xlat   BYTE PTR ds:[ebx]
  413eb3:	sub    ebp,DWORD PTR [ebx+0x5f]
  413eb6:	std    
  413eb7:	ror    eax,1
  413eb9:	push   eax
  413eba:	mov    bl,0x17
  413ebc:	mov    bh,0xb7
  413ebe:	into   
  413ebf:	repnz xchg ecx,eax
  413ec1:	scas   eax,DWORD PTR es:[edi]
  413ec2:	pop    ecx
  413ec3:	mov    dl,0xf4
  413ec5:	stos   BYTE PTR es:[edi],al
  413ec6:	add    eax,0x59a289bb
  413ecb:	je     0x413e9b
  413ecd:	call   0xa480:0xbcecdcf9
  413ed4:	pop    edx
  413ed5:	jbe    0x413ee6
  413ed7:	jno    0x413eb5
  413ed9:	xor    eax,0xe347df3
  413ede:	or     edx,DWORD PTR ds:0x7fde93d7
  413ee4:	je     0x413e83
  413ee6:	mov    ch,0xd6
  413ee8:	push   ebx
  413ee9:	into   
  413eea:	rcr    DWORD PTR [edx+0x1],0x11
  413eee:	ss jbe 0x413ee2
  413ef1:	push   cs
  413ef2:	faddp  st(4),st
  413ef4:	pop    edx
  413ef5:	(bad)  
  413ef6:	sti    
  413ef7:	push   ebx
  413ef8:	ror    BYTE PTR [esp+edx*1],1
  413efb:	xor    eax,DWORD PTR [edi+eax*1]
  413efe:	push   edx
  413eff:	or     DWORD PTR [esp+ebx*8],ecx
  413f02:	pop    esp
  413f03:	das    
  413f04:	mov    edi,0xeb2d08a4
  413f09:	xor    bl,BYTE PTR [ebx+0x5f0bb0b1]
  413f0f:	rol    BYTE PTR [ecx+0x88e83eb],0x90
  413f16:	dec    ecx
  413f17:	xchg   edi,eax
  413f18:	pop    esi
  413f19:	popf   
  413f1a:	frstor [ebx+ecx*8+0x148036a7]
  413f21:	jo     0x413f63
  413f23:	xchg   ebx,eax
  413f24:	cmp    esi,esi
  413f26:	jns    0x413ee8
  413f28:	fstp   DWORD PTR ds:0x43b67fdd
  413f2e:	adc    eax,0x1a1defda
  413f33:	cwde   
  413f34:	inc    eax
  413f35:	lds    edi,FWORD PTR [esi+0xf48a6a4]
  413f3b:	fisubr WORD PTR [esi]
  413f3d:	jmp    0x104d:0x629428fd
  413f44:	inc    edi
  413f45:	or     BYTE PTR [edi],cl
  413f47:	push   ds
  413f48:	in     eax,0x7d
  413f4a:	ror    BYTE PTR [edx],0x58
  413f4d:	fidivr DWORD PTR [ebp+0x6ba9255e]
  413f53:	cld    
  413f54:	jb     0x413f79
  413f56:	mov    DWORD PTR [edi],eax
  413f58:	mov    ds:0xcf4cc218,eax
  413f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f5e:	lahf   
  413f5f:	xchg   esi,eax
  413f60:	mov    bl,0x2a
  413f62:	xor    edx,DWORD PTR [ecx]
  413f64:	cdq    
  413f65:	xchg   esi,eax
  413f66:	inc    eax
  413f67:	pop    ecx
  413f68:	into   
  413f69:	fiadd  DWORD PTR [esi+ecx*8+0x29ff4ac2]
  413f70:	test   eax,0xd741929
  413f75:	int3   
  413f76:	pushf  
  413f77:	pop    eax
  413f78:	cmp    eax,DWORD PTR [ebx]
  413f7a:	pop    ds
  413f7b:	jmp    0xd4d4:0x568f5cf
  413f82:	mov    bl,0x19
  413f84:	arpl   WORD PTR [eax+esi*1-0x3562c2e8],ax
  413f8b:	jp     0x413f5e
  413f8d:	add    DWORD PTR ds:0x7eb53a24,esp
  413f93:	fsubr  QWORD PTR ds:0x4fe45e43
  413f99:	xlat   BYTE PTR ds:[ebx]
  413f9a:	xchg   edi,ebx
  413f9c:	xor    edx,esi
  413f9e:	push   ebp
  413f9f:	xchg   edx,eax
  413fa0:	sbb    al,0x36
  413fa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fa3:	fcom   DWORD PTR [esi]
  413fa5:	sbb    al,BYTE PTR [ecx]
  413fa7:	fwait
  413fa8:	sub    ebp,DWORD PTR [eax+0x36b9b234]
  413fae:	jmp    0x413f44
  413fb0:	call   0xabd1:0x69919a88
  413fb7:	xlat   BYTE PTR ds:[ebx]
  413fb8:	mov    edi,0x70dd11d7
  413fbd:	icebp  
  413fbe:	repnz mov al,BYTE PTR [esi]
  413fc1:	mov    ebx,0xdcedcb13
  413fc6:	loope  0x413f91
  413fc8:	jmp    0x413f8c
  413fca:	aam    0x72
  413fcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fcd:	jecxz  0x41400c
  413fcf:	inc    edx
  413fd0:	rcr    DWORD PTR [eax-0x87a1ea9],1
  413fd6:	push   eax
  413fd7:	mov    dh,0xa
  413fd9:	mov    ch,0xa3
  413fdb:	xchg   ebp,eax
  413fdc:	repz arpl di,ax
  413fdf:	cld    
  413fe0:	inc    DWORD PTR [eax-0x2cd166eb]
  413fe6:	cwde   
  413fe7:	lahf   
  413fe8:	rcr    BYTE PTR [ecx-0xefe2a44],cl
  413fee:	inc    edi
  413fef:	mov    ebx,0x93ecca75
  413ff4:	jmp    0x41401c
  413ff6:	ins    DWORD PTR es:[edi],dx
  413ff7:	xor    BYTE PTR [edi+0x12],dh
  413ffa:	add    esi,DWORD PTR [ebp-0x63]
  413ffd:	fstp   DWORD PTR [ebx+edx*8-0x5c]
  414001:	xor    BYTE PTR [edx],ah
  414003:	mov    al,0x8e
  414005:	mov    ebx,0xaed8990
  41400a:	sbb    dl,BYTE PTR [ecx+0x39]
  41400d:	popf   
  41400e:	mov    cl,0xa2
  414010:	call   0x7c26:0xebcb8373
  414017:	pop    esi
  414018:	lods   al,BYTE PTR ds:[esi]
  414019:	push   eax
  41401a:	add    cl,bh
  41401c:	test   BYTE PTR [ebp+0x69],ch
  41401f:	daa    
  414020:	lock cmp al,0xcf
  414023:	arpl   WORD PTR [edi],di
  414025:	fnsave [esi+0x31]
  414028:	mul    BYTE PTR [edi]
  41402a:	lea    ecx,[esi+0x6b]
  41402d:	lods   al,BYTE PTR ds:[esi]
  41402e:	dec    eax
  41402f:	out    0x22,eax
  414031:	and    esp,ebx
  414033:	outs   dx,DWORD PTR ds:[esi]
  414034:	push   ebx
  414035:	not    DWORD PTR [ebp-0x4e5b6dd1]
  41403b:	jno    0x41409e
  41403d:	jns    0x41406d
  41403f:	repnz sub eax,0x4174226d
  414045:	retf   0xcfa2
  414048:	addr16 sub ebp,esp
  41404b:	mov    dh,0xff
  41404d:	xchg   ecx,eax
  41404e:	xor    eax,0xea5f69fc
  414053:	(bad)  
  414054:	sub    ecx,DWORD PTR ds:0x5b15d63
  41405a:	(bad)  
  41405b:	data16 jg 0x413fe5
  41405e:	mov    BYTE PTR [edi],bl
  414060:	inc    edx
  414061:	lea    esp,[edi-0x202c866e]
  414067:	(bad)  
  414068:	imul   BYTE PTR [edi+0x202a153c]
  41406e:	repnz cli 
  414070:	gs popf 
  414072:	scas   al,BYTE PTR es:[edi]
  414073:	adc    DWORD PTR [eax],esp
  414075:	scas   eax,DWORD PTR es:[edi]
  414076:	mov    ds:0x6b8de32f,al
  41407b:	sub    dh,BYTE PTR ds:0xcd815c2b
  414081:	inc    ebx
  414082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414083:	test   DWORD PTR [esi],ebx
  414085:	shr    esi,cl
  414087:	or     eax,0x80766864
  41408c:	call   0xebd34609
  414091:	inc    edx
  414092:	iret   
  414093:	inc    edx
  414094:	test   eax,0x4d434f3c
  41409a:	push   ebx
  41409b:	data16 add al,0x19
  41409e:	mov    dl,0x2f
  4140a0:	jmp    0x4140b0
  4140a2:	cwde   
  4140a3:	dec    ecx
  4140a4:	jbe    0x414069
  4140a6:	aad    0x40
  4140a8:	in     eax,dx
  4140a9:	outs   dx,BYTE PTR ds:[esi]
  4140aa:	push   edi
  4140ab:	lods   eax,DWORD PTR ds:[esi]
  4140ac:	popf   
  4140ad:	shl    DWORD PTR [edi-0x1b],1
  4140b0:	cmp    DWORD PTR [ebp+0x4c],eax
  4140b3:	xor    al,0x76
  4140b5:	scas   eax,DWORD PTR es:[edi]
  4140b6:	xor    edx,ebp
  4140b8:	jg     0x41405d
  4140ba:	mov    ebx,0xc8134f0f
  4140bf:	xchg   ebp,eax
  4140c0:	hlt    
  4140c1:	lock cmp al,0x79
  4140c4:	stc    
  4140c5:	mov    DWORD PTR [ebx],esp
  4140c7:	xlat   BYTE PTR ds:[ebx]
  4140c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140c9:	jmp    0x31eb:0x1d0b8c9c
  4140d0:	gs mov ecx,0x78fc1cc4
  4140d6:	imul   ecx,ebx,0xd0411f30
  4140dc:	push   edx
  4140dd:	jle    0x4140f6
  4140df:	loop   0x414118
  4140e1:	lds    ecx,FWORD PTR [ebp-0x13]
  4140e4:	or     DWORD PTR [ebx+0x10],edx
  4140e7:	push   es
  4140e8:	add    DWORD PTR [ebx-0x6a],esp
  4140eb:	pop    ss
  4140ec:	mov    eax,ds:0xd8b5f1ff
  4140f1:	push   esp
  4140f2:	pop    ebp
  4140f3:	and    eax,0x51e2b5f6
  4140f8:	js     0x4140bf
  4140fa:	mov    esi,0x2c29ebde
  4140ff:	dec    esi
  414100:	pop    ecx
  414101:	push   edi
  414102:	retf   0x7825
  414105:	dec    edi
  414106:	pop    esp
  414107:	(bad)  
  414108:	mov    dl,0x5e
  41410a:	loop   0x414123
  41410c:	mov    ebx,0xcdfdb777
  414111:	xlat   BYTE PTR ds:[ebx]
  414112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414113:	jns    0x41413d
  414115:	outs   dx,DWORD PTR ds:[esi]
  414116:	pop    esp
  414117:	add    al,BYTE PTR [ebp-0x512969d6]
  41411d:	jns    0x414136
  41411f:	test   BYTE PTR [esi],dl
  414121:	loope  0x41410e
  414123:	cmp    BYTE PTR [edx-0x49],ah
  414126:	inc    esi
  414127:	add    DWORD PTR [ebp-0x36d3995f],0x46
  41412e:	pushf  
  41412f:	stc    
  414130:	mov    ds:0x2d084417,al
  414135:	repz push ds
  414137:	sub    BYTE PTR [ecx+0xef82ea9],bh
  41413d:	pop    eax
  41413e:	mov    ds:0xb5be28ce,eax
  414143:	aad    0xb8
  414145:	rcl    DWORD PTR [edi+0x10],0x68
  414149:	add    BYTE PTR [edi*8+0x35974c17],ah
  414150:	out    0xaa,eax
  414152:	xor    al,0x98
  414154:	xchg   ebx,eax
  414155:	pop    ds
  414156:	pop    DWORD PTR [ebx-0xa]
  414159:	retf   0x9ed9
  41415c:	push   ds
  41415d:	popf   
  41415e:	push   eax
  41415f:	xor    ch,BYTE PTR [esi+esi*8+0x1075811c]
  414166:	push   cs
  414167:	in     eax,0x4a
  414169:	shr    DWORD PTR [ebx-0x6c],1
  41416c:	adc    BYTE PTR [ebp+0x26b5f5cb],ah
  414172:	popf   
  414173:	xchg   edi,eax
  414174:	dec    ebp
  414175:	retf   0x896f
  414178:	cs repz dec eax
  41417b:	aaa    
  41417c:	sub    eax,0x654ade85
  414181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414182:	adc    eax,0x23b2ba03
  414187:	ret    0xc832
  41418a:	sbb    DWORD PTR [edx-0x65],0x2fb01bc2
  414191:	push   cs
  414192:	int    0x60
  414194:	mov    al,0x81
  414196:	test   DWORD PTR [edx+0x7eea7075],eax
  41419c:	mov    dl,0xcd
  41419e:	inc    ecx
  41419f:	push   ebx
  4141a0:	add    esp,DWORD PTR [ebx+0x13]
  4141a3:	sbb    al,0x3a
  4141a5:	sbb    BYTE PTR [esi-0x8e7ab38],dl
  4141ab:	aad    0xaf
  4141ad:	fsubr  st,st(2)
  4141af:	lods   al,BYTE PTR ds:[esi]
  4141b0:	and    ecx,DWORD PTR [eax-0x705b8209]
  4141b6:	(bad)  
  4141b8:	push   ecx
  4141b9:	icebp  
  4141ba:	(bad)  
  4141bb:	adc    al,0xb5
  4141bd:	test   DWORD PTR [edi-0x57e191f3],edi
  4141c3:	and    BYTE PTR [esi-0x7],bl
  4141c6:	xlat   BYTE PTR ds:[ebx]
  4141c7:	int    0x36
  4141c9:	pushf  
  4141ca:	in     eax,0xde
  4141cc:	pop    esp
  4141cd:	mov    bl,0x36
  4141cf:	mov    al,ds:0xf7f122ab
  4141d4:	jno    0x4141e5
  4141d6:	dec    ebp
  4141d7:	jnp    0x41421d
  4141d9:	jge    0x414161
  4141db:	lock sub al,0xd3
  4141de:	sub    BYTE PTR [ecx+0x3ca937ab],0x51
  4141e5:	aaa    
  4141e6:	push   cs
  4141e7:	jp     0x414197
  4141e9:	in     eax,dx
  4141ea:	mov    ebx,0x9e60f775
  4141ef:	ret    0xc7a9
  4141f2:	addr16 (bad) 
  4141f4:	call   esi
  4141f6:	and    DWORD PTR [eax],esi
  4141f8:	fcmovu st,st(6)
  4141fa:	pop    eax
  4141fb:	mov    eax,0x64d4f201
  414200:	shr    BYTE PTR [esi+0x37],cl
  414203:	mov    dl,0x45
  414205:	sub    eax,eax
  414207:	push   esi
  414208:	pop    ds
  414209:	mov    DWORD PTR [edi+0x61],0x76a4d2de
  414210:	push   esi
  414211:	retf   
  414212:	lods   eax,DWORD PTR ds:[esi]
  414213:	inc    edx
  414214:	test   DWORD PTR [eax-0x2],ebp
  414217:	pusha  
  414218:	xchg   BYTE PTR [eax-0x1d0879f2],cl
  41421e:	retf   0xd6e8
  414221:	repnz push 0x47977958
  414227:	iret   
  414228:	and    ecx,edx
  41422a:	stos   BYTE PTR es:[edi],al
  41422b:	inc    ecx
  41422c:	nop
  41422d:	dec    esp
  41422e:	mov    eax,ds:0x2bb6c31c
  414233:	mov    ds:0x6cc694,al
  414238:	(bad)  
  414239:	push   0x1ddb790d
  41423e:	scas   al,BYTE PTR es:[edi]
  41423f:	mov    ecx,0x836ccc23
  414244:	add    al,0xe
  414246:	ss mov bx,0xbf0f
  41424b:	cmc    
  41424c:	jo     0x414253
  41424e:	xchg   edx,eax
  41424f:	lock jae 0x4142b5
  414252:	stos   BYTE PTR es:[edi],al
  414253:	jmp    0xcecf:0x9cefe74f
  41425a:	ins    DWORD PTR es:[edi],dx
  41425b:	in     al,dx
  41425c:	popa   
  41425d:	leave  
  41425e:	mov    edx,0x457398f5
  414263:	mov    ebp,0x3f7a2ccb
  414268:	pop    ds
  414269:	lds    ebx,FWORD PTR [edx-0xc]
  41426c:	jns    0x41427d
  41426e:	mov    esi,0xe261d104
  414273:	aaa    
  414274:	and    eax,0xcebba55e
  414279:	pop    ds
  41427a:	pop    esp
  41427b:	jmp    0x5c59:0x1fd733c
  414282:	lock fdiv st,st(2)
  414285:	inc    eax
  414286:	inc    ebp
  414287:	repnz add ecx,esp
  41428a:	jle    0x4142fb
  41428c:	and    eax,0xa5c22333
  414291:	(bad)  
  414292:	into   
  414293:	pop    eax
  414294:	hlt    
  414295:	sar    edi,1
  414297:	mov    eax,0xf3857c5
  41429c:	pop    edi
  41429d:	adc    dh,BYTE PTR [edx+0x91e99e8]
  4142a3:	or     ah,0x9b
  4142a6:	sub    eax,DWORD PTR [eax]
  4142a8:	dec    ebx
  4142a9:	and    eax,0xe685647b
  4142ae:	mov    cl,0xf8
  4142b0:	arpl   WORD PTR [ebp-0x7d907409],bp
  4142b6:	mov    ecx,0x34deb753
  4142bb:	add    al,0xe4
  4142bd:	dec    eax
  4142be:	cdq    
  4142bf:	sbb    al,0xc4
  4142c1:	push   ds
  4142c2:	fisubr WORD PTR [esp+ecx*8]
  4142c5:	in     eax,0xec
  4142c7:	dec    edx
  4142c8:	jmp    0xb1a861af
  4142cd:	cdq    
  4142ce:	repnz adc al,0xbe
  4142d1:	popa   
  4142d2:	xchg   DWORD PTR [ebx-0x49],esi
  4142d5:	push   esi
  4142d6:	xor    al,0x6e
  4142d8:	jp     0x414328
  4142da:	jno    0x4142ea
  4142dc:	fistp  WORD PTR [ebx+0x6cf16a8a]
  4142e2:	push   ebp
  4142e3:	lock imul edx,DWORD PTR [ebp-0x2f60ea46],0x6f233ae1
  4142ee:	mov    ds:0x6548e0b8,al
  4142f3:	sar    DWORD PTR [edx-0x12],0x2f
  4142f7:	pop    esp
  4142f8:	in     eax,0x7b
  4142fa:	call   0x62b8:0xfc02ad5e
  414301:	out    dx,al
  414302:	int3   
  414303:	xor    DWORD PTR ds:0x7b92e13d,0x49
  41430a:	jae    0x41438a
  41430c:	in     eax,0x62
  41430e:	ss dec edx
  414310:	xlat   BYTE PTR cs:[ebx]
  414312:	pop    edi
  414313:	aaa    
  414314:	aad    0x48
  414316:	mov    cl,0xb7
  414318:	mov    bl,0x18
  41431a:	sbb    al,0x8b
  41431c:	cld    
  41431d:	cdq    
  41431e:	mov    esp,0x3a50f6b7
  414323:	stc    
  414324:	adc    eax,0xa816094f
  414329:	pop    eax
  41432a:	jb     0x4142c9
  41432c:	or     BYTE PTR [ecx-0x6],bh
  41432f:	mov    ecx,0x8ba83cf
  414334:	push   eax
  414335:	cld    
  414336:	pop    ss
  414337:	sub    BYTE PTR [edi],al
  414339:	and    eax,0x78483187
  41433e:	retf   0x4699
  414341:	sbb    bl,0xe7
  414344:	mov    WORD PTR [ebx+0x42bc330e],ss
  41434a:	xchg   esp,eax
  41434b:	rol    ebx,1
  41434d:	in     al,0x54
  41434f:	xchg   ecx,eax
  414350:	(bad)  
  414351:	xchg   edx,eax
  414352:	dec    ebx
  414353:	mov    esi,0xcef5abb4
  414358:	lock pop eax
  41435a:	sub    bl,BYTE PTR [eax-0x6bb7e2a2]
  414360:	sti    
  414361:	push   ds
  414362:	ins    DWORD PTR es:[edi],dx
  414363:	pop    ecx
  414364:	popf   
  414365:	dec    eax
  414366:	int    0xe5
  414368:	add    al,0xf0
  41436a:	sub    dh,BYTE PTR [ebx+0x21]
  41436d:	sti    
  41436e:	push   ecx
  41436f:	nop
  414370:	add    ebp,DWORD PTR [esi-0x6d]
  414373:	mov    esp,0x7b9323e4
  414378:	mov    esi,0xf1efca99
  41437d:	repnz fidiv WORD PTR [edx]
  414380:	push   ebp
  414381:	iret   
  414382:	(bad)  
  414383:	sub    edi,DWORD PTR [ebx-0x16]
  414386:	cwde   
  414387:	scas   al,BYTE PTR es:[edi]
  414388:	sbb    edi,DWORD PTR [eax-0x57a98888]
  41438e:	scas   al,BYTE PTR es:[edi]
  41438f:	outs   dx,DWORD PTR ds:[esi]
  414390:	cmp    BYTE PTR [eax+0x7a76ad5b],bh
  414396:	ins    DWORD PTR es:[edi],dx
  414397:	call   0x2a839bb1
  41439c:	mov    eax,ds:0xc0b6f51e
  4143a1:	jb     0x41435e
  4143a3:	pushaw 
  4143a5:	xor    ecx,DWORD PTR [ebx+0xb]
  4143a8:	jbe    0x41435f
  4143aa:	mov    esp,ecx
  4143ac:	push   ebx
  4143ad:	test   edi,0xad149521
  4143b3:	xchg   edi,eax
  4143b4:	dec    ebx
  4143b5:	xchg   DWORD PTR [edi+eiz*1+0x4d0ddc8c],esp
  4143bc:	retf   
  4143bd:	test   BYTE PTR [ecx-0x71],dh
  4143c0:	out    dx,al
  4143c1:	and    ch,al
  4143c3:	pop    ebx
  4143c4:	cmp    dl,0x8c
  4143c7:	fcom   QWORD PTR [ebp-0x15]
  4143ca:	jb     0x414372
  4143cc:	div    bh
  4143ce:	cmp    al,0xe3
  4143d0:	add    ebx,0x63707d5f
  4143d6:	jecxz  0x41436c
  4143d8:	sbb    eax,0x9ceb57c9
  4143dd:	das    
  4143de:	or     ch,BYTE PTR [ebp-0x6b]
  4143e1:	mov    al,0x2e
  4143e3:	into   
  4143e4:	sbb    dh,cl
  4143e6:	lahf   
  4143e7:	hlt    
  4143e8:	fcomi  st,st(4)
  4143ea:	jecxz  0x414450
  4143ec:	adc    al,0x27
  4143ee:	scas   eax,DWORD PTR es:[edi]
  4143ef:	test   al,0x58
  4143f1:	xchg   ebp,eax
  4143f2:	int    0x38
  4143f4:	jnp    0x4143ff
  4143f6:	lahf   
  4143f7:	mov    WORD PTR [esi+0x2],ds
  4143fa:	push   0xdd7af2e5
  4143ff:	arpl   dx,cx
  414401:	sahf   
  414402:	jmp    0x4143dc
  414404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414405:	arpl   WORD PTR [ecx+0x7f7932e8],si
  41440b:	add    dl,BYTE PTR [edx+eiz*1+0xb5ab199]
  414412:	int    0x26
  414414:	mov    edi,0xdf8ea74c
  414419:	and    esi,DWORD PTR [edi+0x2171068f]
  41441f:	mov    bh,ch
  414421:	add    esi,0x9f8b008c
  414427:	and    BYTE PTR [eax+0x475f67c3],bl
  41442d:	xchg   esp,eax
  41442e:	mov    ?,WORD PTR [edx-0x3a]
  414431:	pop    ebp
  414432:	jecxz  0x41444d
  414434:	iret   
  414435:	sahf   
  414436:	sub    ebx,edi
  414438:	in     al,dx
  414439:	push   ss
  41443a:	pushf  
  41443b:	xchg   esi,eax
  41443c:	xchg   esi,eax
  41443d:	(bad)  
  41443f:	pushf  
  414440:	test   eax,0xb05be52d
  414445:	ins    BYTE PTR es:[edi],dx
  414446:	fldcw  WORD PTR [eax]
  414448:	xor    al,0xed
  41444a:	aad    0x8c
  41444c:	dec    esi
  41444d:	es push ecx
  41444f:	iret   
  414450:	inc    ebx
  414451:	hlt    
  414452:	ror    ah,cl
  414454:	mov    ah,0x3f
  414456:	xor    al,0xb
  414458:	popa   
  414459:	shr    DWORD PTR [edi],cl
  41445b:	sbb    BYTE PTR [esi],bl
  41445d:	loope  0x4144b8
  41445f:	sbb    eax,0x812433fc
  414464:	or     al,0x8c
  414466:	shr    BYTE PTR [edi+0x1c],cl
  414469:	sar    bl,cl
  41446b:	sbb    BYTE PTR [esp+ebx*2+0x61],ah
  41446f:	aam    0xa5
  414471:	fcmovne st,st(4)
  414473:	jns    0x41442e
  414475:	cs ds push edx
  414478:	adc    BYTE PTR [ecx],bl
  41447a:	inc    esi
  41447b:	stc    
  41447c:	fimul  DWORD PTR [ebp+0x1d]
  41447f:	adc    DWORD PTR [edx],0xa457238b
  414485:	or     dl,BYTE PTR [edi-0x57]
  414488:	sbb    BYTE PTR [esi+eax*8],0x24
  41448c:	xor    al,0xe6
  41448e:	std    
  41448f:	popa   
  414490:	cld    
  414491:	mov    ebp,0x88883c12
  414496:	(bad)  
  414498:	test   DWORD PTR [esi],edi
  41449a:	jl     0x41448c
  41449c:	mov    edi,0xef0d7951
  4144a1:	pop    ds
  4144a2:	test   bh,dl
  4144a4:	aaa    
  4144a5:	add    eax,0x282a728
  4144aa:	and    al,0x71
  4144ac:	pop    ss
  4144ad:	adc    ah,BYTE PTR [eax+0x33]
  4144b0:	shl    DWORD PTR [esi+edi*8-0x3e6499b2],cl
  4144b7:	xchg   edx,eax
  4144b8:	fnstcw WORD PTR [esi-0xa4090e5]
  4144be:	xchg   DWORD PTR ds:0xf2448ca,ebx
  4144c4:	(bad)  
  4144c5:	(bad)  
  4144c6:	mov    dh,0xd2
  4144c8:	and    DWORD PTR [ebp-0x24],edx
  4144cb:	or     esi,DWORD PTR [eax-0x6a]
  4144ce:	xchg   edi,eax
  4144cf:	pusha  
  4144d0:	inc    edi
  4144d1:	aam    0x4e
  4144d3:	xchg   esi,eax
  4144d4:	jne    0x414491
  4144d6:	dec    edi
  4144d7:	mov    edi,0xd2dafd99
  4144dc:	ror    al,1
  4144de:	hlt    
  4144df:	int3   
  4144e0:	sbb    BYTE PTR [eax],bh
  4144e2:	mov    ah,BYTE PTR [eax]
  4144e4:	push   0x19461845
  4144e9:	ret    0x8225
  4144ec:	dec    ebx
  4144ed:	jmp    0x712b10b3
  4144f2:	xchg   esp,eax
  4144f3:	mov    esi,0x279a562f
  4144f8:	jmp    0xd071cd1b
  4144fd:	idiv   BYTE PTR [esp+eiz*2-0x4d]
  414501:	lahf   
  414502:	jecxz  0x4144fa
  414504:	hlt    
  414505:	sar    BYTE PTR [edi-0x6d],cl
  414508:	sbb    dl,BYTE PTR [esp+eax*1+0x66097f3b]
  41450f:	jb     0x414515
  414511:	mov    WORD PTR [ecx],cs
  414513:	adc    BYTE PTR [eax],ch
  414515:	inc    ecx
  414516:	jae    0x414520
  414518:	jmp    0x4144f0
  41451a:	mov    DWORD PTR [edi-0x78bc760c],ecx
  414520:	cmp    eax,0xea5853b3
  414525:	add    ebp,esp
  414527:	jne    0x414502
  414529:	dec    edi
  41452a:	xor    esp,ebx
  41452c:	xchg   esi,eax
  41452d:	sbb    DWORD PTR [edi+ecx*8+0x4e],esi
  414531:	fs pushf 
  414533:	ins    DWORD PTR es:[edi],dx
  414534:	push   cs
  414535:	jge    0x414557
  414537:	call   0x50b9:0x1d57591e
  41453e:	mov    bl,0x20
  414540:	add    DWORD PTR [ecx+0x2c7056],eax
  414546:	adc    dh,BYTE PTR [ebx-0x73]
  414549:	ins    BYTE PTR es:[edi],dx
  41454a:	cmp    ecx,DWORD PTR [ebp-0x5d]
  41454d:	mov    al,0x63
  41454f:	shr    ch,1
  414551:	icebp  
  414552:	push   ebx
  414553:	cmp    DWORD PTR [ebx],0x1326efa9
  414559:	and    eax,0x22c5b6e4
  41455e:	xchg   edi,eax
  41455f:	lods   al,BYTE PTR ds:[esi]
  414560:	pop    ebp
  414561:	and    eax,0xef2b8866
  414566:	pop    ecx
  414567:	fnstcw WORD PTR [edi]
  414569:	adc    ah,BYTE PTR [edx+0x76]
  41456c:	push   ecx
  41456d:	add    al,0x74
  41456f:	mov    BYTE PTR [edx],al
  414571:	pushw  es
  414573:	sub    esp,DWORD PTR [esi+0x1e29f7da]
  414579:	imul   DWORD PTR [ebp+0x33]
  41457c:	sbb    BYTE PTR [eax-0x88bae53],dh
  414582:	dec    esp
  414583:	push   ss
  414584:	jbe    0x90dad26b
  41458a:	pusha  
  41458b:	xchg   edx,eax
  41458c:	repz push ss
  41458e:	or     edx,DWORD PTR [eax]
  414590:	ss das 
  414592:	fild   WORD PTR [ebp+0x4a]
  414595:	imul   ebp,ecx,0xffffff9c
  414598:	mov    ah,0xeb
  41459a:	cmp    edi,DWORD PTR [eax-0xb]
  41459d:	loopne 0x4145c1
  41459f:	mov    eax,ds:0xb8f9a955
  4145a4:	lock and eax,DWORD PTR [edx-0x48]
  4145a8:	aad    0x0
  4145aa:	mov    al,0x4e
  4145ac:	add    DWORD PTR [eax-0x7c],edi
  4145af:	sti    
  4145b0:	bnd jg 0x414632
  4145b3:	pop    edi
  4145b4:	push   esi
  4145b5:	mov    cl,0x4e
  4145b7:	mov    edi,0x5d84a2a7
  4145bc:	hlt    
  4145bd:	pusha  
  4145be:	sub    al,0xa4
  4145c0:	js     0x414604
  4145c2:	dec    esi
  4145c3:	mov    eax,0x5b4b003c
  4145c8:	pop    edx
  4145c9:	or     bh,al
  4145cb:	sub    ebp,esp
  4145cd:	mov    al,ds:0xfaf8067e
  4145d2:	add    al,0x53
  4145d4:	stc    
  4145d5:	int3   
  4145d6:	sub    cl,bl
  4145d8:	pop    ecx
  4145d9:	mov    ds:0x8260f5ce,al
  4145de:	jns    0x41463f
  4145e0:	dec    ebp
  4145e1:	iret   
  4145e2:	cdq    
  4145e3:	inc    BYTE PTR [edx]
  4145e5:	or     al,0xe1
  4145e7:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4145e9:	leave  
  4145ea:	adc    BYTE PTR [ecx+0x48],ah
  4145ed:	or     BYTE PTR [ebp-0x43],cl
  4145f0:	test   DWORD PTR [ebp+0x6b],ebp
  4145f3:	pop    ebx
  4145f4:	pop    ecx
  4145f5:	mov    al,ds:0x9063b7de
  4145fa:	xor    eax,0x752894ef
  414600:	fidiv  DWORD PTR [esi+esi*4]
  414603:	loopne 0x414664
  414605:	inc    ebx
  414606:	mov    cl,BYTE PTR [esi-0x2a]
  414609:	xor    al,0x56
  41460b:	and    eax,0xb80f2f92
  414610:	sbb    al,0xd5
  414612:	mov    ds:0xa683154e,eax
  414617:	adc    BYTE PTR [esi-0x6e],bh
  41461a:	dec    ebx
  41461b:	and    esi,DWORD PTR ds:0x7b78388f
  414621:	add    edi,ecx
  414623:	ins    DWORD PTR es:[edi],dx
  414624:	push   ss
  414625:	in     al,dx
  414626:	nop
  414627:	pusha  
  414628:	cli    
  414629:	xor    bh,BYTE PTR [ebp-0x28]
  41462c:	sti    
  41462d:	inc    eax
  41462e:	and    DWORD PTR [ebx-0x98ea5dd],0xfffffff3
  414635:	arpl   di,bx
  414637:	dec    eax
  414638:	push   0xab63e4ad
  41463d:	int    0x3b
  41463f:	outs   dx,DWORD PTR ds:[esi]
  414640:	paddusw mm5,QWORD PTR [ebx]
  414643:	sahf   
  414644:	(bad)  
  414645:	or     al,0xa4
  414647:	dec    edx
  414648:	inc    ecx
  414649:	push   ebp
  41464a:	adc    bh,BYTE PTR [esi]
  41464c:	add    ch,dh
  41464e:	mov    dl,0x8c
  414650:	es aaa 
  414652:	or     edx,DWORD PTR [esi]
  414654:	outs   dx,DWORD PTR ds:[esi]
  414655:	mov    ?,WORD PTR ds:0x1a2de7f5
  41465b:	ja     0x414694
  41465d:	xlat   BYTE PTR ds:[ebx]
  41465e:	inc    ebp
  41465f:	ret    
  414660:	sub    al,0x8c
  414662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414663:	stos   DWORD PTR es:[edi],eax
  414664:	fwait
  414665:	fs repnz cmp eax,0xa7cc17f2
  41466c:	pushf  
  41466d:	push   0xdffc8935
  414672:	sub    al,0x3f
  414674:	sbb    bl,bl
  414676:	dec    edx
  414677:	inc    edx
  414678:	outs   dx,DWORD PTR ds:[esi]
  414679:	adc    eax,0xcd915fbd
  41467e:	sar    DWORD PTR ds:0xdde0f06,cl
  414684:	mov    dh,0xf
  414686:	retf   
  414687:	or     BYTE PTR [eax+0x29],ah
  41468a:	push   es
  41468b:	xor    BYTE PTR [edx+0x2aa3a983],dl
  414691:	lods   al,BYTE PTR ds:[esi]
  414692:	out    0x86,eax
  414694:	and    ch,ch
  414696:	lds    ebp,FWORD PTR [edx-0x2c636bf0]
  41469c:	mov    ebx,0x728ea7c2
  4146a1:	add    esp,ebp
  4146a3:	in     eax,dx
  4146a4:	pop    ss
  4146a5:	push   ebp
  4146a6:	ret    0xc937
  4146a9:	cmp    BYTE PTR [edx-0x244e22ce],cl
  4146af:	push   ds
  4146b0:	test   esi,edx
  4146b2:	dec    ebx
  4146b3:	dec    eax
  4146b4:	mov    bl,BYTE PTR [esi-0x10]
  4146b7:	cwde   
  4146b8:	retf   0x649e
  4146bb:	mov    ebx,0x40448206
  4146c0:	ret    0xef7
  4146c3:	aaa    
  4146c4:	in     al,0xa5
  4146c6:	mov    WORD PTR [ecx+0x447aa45b],?
  4146cc:	cs int3 
  4146ce:	mov    al,0x5a
  4146d0:	mov    esi,0xab3a1ba2
  4146d5:	sub    BYTE PTR [edi+0x3],0x87
  4146d9:	jnp    0xe19e235
  4146df:	mov    bh,0x17
  4146e1:	sub    DWORD PTR [eax-0x79],ecx
  4146e4:	fstp   st(7)
  4146e6:	cmp    bl,dh
  4146e8:	inc    esp
  4146e9:	int    0x51
  4146eb:	jl     0x4146e1
  4146ed:	adc    DWORD PTR [ecx],edi
  4146ef:	popa   
  4146f0:	mov    al,0x78
  4146f2:	hlt    
  4146f3:	dec    esp
  4146f4:	and    dl,BYTE PTR [ebx+0x3a395638]
  4146fa:	mov    DWORD PTR [eax],ebp
  4146fc:	push   ecx
  4146fd:	shl    al,0xd7
  414700:	repz pop ecx
  414702:	das    
  414703:	xor    DWORD PTR [eax],0x497cd3ee
  414709:	dec    esi
  41470a:	sub    ecx,DWORD PTR [esi+edi*4-0x66]
  41470e:	sub    edi,ecx
  414710:	shr    BYTE PTR [edx+0x4e968196],0x8e
  414717:	rol    BYTE PTR [edx+0x56],1
  41471a:	xchg   esp,ebx
  41471c:	xlat   BYTE PTR ds:[ebx]
  41471d:	(bad)  [ecx-0x71b5b128]
  414723:	jmp    0x414769
  414725:	push   ebp
  414726:	dec    esp
  414727:	mov    edx,0x3462c39c
  41472c:	jmp    0x4146be
  41472e:	xchg   DWORD PTR [ebp+0x48c6fa18],edx
  414734:	mov    ds:0x1c731800,eax
  414739:	call   0xfa75:0x6370afb7
  414740:	adc    eax,0xe6513054
  414745:	cmp    BYTE PTR ds:0x295d1f9e,cl
  41474b:	xchg   ebx,eax
  41474c:	retf   0x5cc4
  41474f:	inc    ecx
  414750:	stos   DWORD PTR es:[edi],eax
  414751:	sbb    eax,0xa095ea26
  414756:	cmp    DWORD PTR [edx-0xba3c18c],edx
  41475c:	push   ecx
  41475d:	lods   al,BYTE PTR ds:[esi]
  41475e:	or     eax,0x480c519a
  414763:	push   ebp
  414764:	pop    esi
  414765:	repnz loope 0x4146f3
  414768:	add    eax,0x680b0abd
  41476d:	lahf   
  41476e:	pop    esi
  41476f:	shr    BYTE PTR [ebx-0x5c],1
  414772:	and    dl,dh
  414774:	ins    DWORD PTR es:[edi],dx
  414775:	pop    ebx
  414776:	loopne 0x414713
  414778:	dec    esi
  414779:	(bad)  
  41477a:	or     DWORD PTR [eax+0x1a32d2aa],ebx
  414780:	aas    
  414781:	xchg   edx,eax
  414782:	xor    BYTE PTR [ecx+0x1660d09],0x70
  414789:	dec    eax
  41478a:	and    DWORD PTR [esi],ebp
  41478c:	aad    0x96
  41478e:	popf   
  41478f:	mov    al,ds:0xac3d3868
  414794:	shl    DWORD PTR [edi-0x5e064483],cl
  41479a:	add    BYTE PTR [ebx+esi*1+0x1a],dh
  41479e:	cmp    BYTE PTR [ecx-0x51e04586],0xc5
  4147a5:	dec    ebx
  4147a6:	jmp    0x858f:0xa28475b9
  4147ad:	mov    al,0x1c
  4147af:	outs   dx,DWORD PTR ds:[esi]
  4147b0:	pop    es
  4147b1:	outs   dx,DWORD PTR ds:[esi]
  4147b2:	push   esp
  4147b3:	sbb    DWORD PTR [ebx-0x13],edi
  4147b6:	cwde   
  4147b7:	rcl    DWORD PTR [edi-0x7e54ad38],1
  4147bd:	push   esi
  4147be:	mov    al,cs:0x39e2c4de
  4147c4:	inc    ecx
  4147c5:	rol    edi,0xb9
  4147c8:	xor    al,0x6a
  4147ca:	loope  0x4147ad
  4147cc:	data16 aam 0x4f
  4147cf:	inc    edx
  4147d0:	and    cl,BYTE PTR [ecx+0x61]
  4147d3:	stos   DWORD PTR es:[edi],eax
  4147d4:	sub    eax,0xd1a6ff72
  4147d9:	loopne 0x414858
  4147db:	add    BYTE PTR [esp+ecx*1+0x71d5991c],bh
  4147e2:	out    0xce,eax
  4147e4:	inc    ecx
  4147e5:	mov    ds:0x449eecc8,al
  4147ea:	mov    cl,0xc7
  4147ec:	gs iret 
  4147ee:	in     eax,dx
  4147ef:	lds    ebx,FWORD PTR [ecx+0x2f1367f8]
  4147f5:	push   ds
  4147f6:	imul   ecx,ebx,0xffffff85
  4147f9:	(bad)
  4147fd:	mov    ah,0x56
  4147ff:	in     eax,0x2
  414801:	popa   
  414802:	add    BYTE PTR [edi+0x6218019],dl
  414808:	jmp    0x36d9:0xceb98374
  41480f:	jno    0x414799
  414811:	adc    dl,BYTE PTR [ebx-0x7d]
  414814:	adc    BYTE PTR [ecx+0x3fa92a60],0x5b
  41481b:	ficom  WORD PTR [edx+0x3f]
  41481e:	mov    ds,WORD PTR [ecx-0x2c]
  414821:	jp     0x414856
  414823:	shl    DWORD PTR [eax-0x43047980],1
  414829:	sub    DWORD PTR [eax+0xd287884],eax
  41482f:	inc    esi
  414830:	pop    ds
  414831:	popf   
  414832:	nop
  414833:	repnz xchg esp,eax
  414835:	mov    WORD PTR ds:0xc4599155,ds
  41483b:	retf   0xfe54
  41483e:	mov    bh,BYTE PTR ds:0x18e33aeb
  414844:	call   DWORD PTR [edi-0x2d20929c]
  41484a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41484b:	push   0x61
  41484d:	mov    ecx,0x959bc9c8
  414852:	mov    eax,0xdf8e34a
  414857:	push   0x56abd205
  41485c:	iret   
  41485d:	cmp    ecx,ebp
  41485f:	ins    DWORD PTR es:[edi],dx
  414860:	pop    edx
  414861:	into   
  414862:	pushf  
  414863:	push   eax
  414864:	add    bh,bh
  414866:	frstor [esi]
  414868:	inc    ebx
  414869:	adc    eax,0xc6c870c9
  41486e:	popa   
  41486f:	mov    bh,0x6e
  414871:	pop    ebx
  414872:	adc    al,0x37
  414874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414875:	inc    BYTE PTR [esi-0x583ba2f4]
  41487b:	ret    
  41487c:	loope  0x4148c6
  41487e:	cdq    
  41487f:	mov    edi,0xc74c5493
  414884:	inc    eax
  414885:	fsub   QWORD PTR [ebx]
  414887:	shl    DWORD PTR [edx],1
  414889:	(bad)  
  41488a:	pop    ebx
  41488b:	xchg   ecx,eax
  41488c:	fsub   QWORD PTR [esi-0x40]
  41488f:	ret    0x4b83
  414892:	ins    BYTE PTR es:[edi],dx
  414893:	dec    ecx
  414894:	pop    edi
  414895:	sbb    BYTE PTR [edx+ebp*4+0x24],al
  414899:	out    dx,al
  41489a:	sbb    BYTE PTR [edi-0x61],0x11
  41489e:	scas   eax,DWORD PTR es:[edi]
  41489f:	push   es
  4148a0:	adc    bl,dl
  4148a2:	hlt    
  4148a3:	and    ah,BYTE PTR [edi+0x41]
  4148a6:	push   edx
  4148a8:	inc    eax
  4148a9:	and    edx,DWORD PTR [ecx]
  4148ab:	sub    cl,BYTE PTR [edx+ecx*8+0x4d]
  4148af:	or     DWORD PTR [ebx+0x65],esp
  4148b2:	(bad)  
  4148b3:	push   esp
  4148b4:	add    eax,0xcbc90346
  4148b9:	push   0x3a38bc2e
  4148be:	push   edi
  4148bf:	jp     0x414929
  4148c1:	sub    eax,0xaf6f04cf
  4148c6:	out    0x59,eax
  4148c8:	sbb    bl,BYTE PTR [esp+eax*1-0x4725f185]
  4148cf:	and    al,BYTE PTR [ecx+0x33c4bda1]
  4148d5:	outs   dx,BYTE PTR ds:[esi]
  4148d6:	arpl   WORD PTR ds:0x4706ecae,bx
  4148dc:	pop    edi
  4148dd:	and    BYTE PTR ds:0xa11e14c5,bl
  4148e3:	cmp    DWORD PTR [edi+0x704fe3ad],ecx
  4148e9:	test   eax,0x6874912c
  4148ee:	call   0x4797:0x7328ec88
  4148f5:	test   DWORD PTR [ebx+edx*1+0x3d06e2ad],esi
  4148fc:	sbb    esp,DWORD PTR [ebp-0x74]
  4148ff:	lock out 0xff,al
  414902:	sbb    bl,ch
  414904:	shl    BYTE PTR [esi],0x86
  414907:	mov    DWORD PTR [esi-0xc],esp
  41490a:	pop    es
  41490b:	sar    ah,0x18
  41490e:	shl    DWORD PTR [ebp+0x37e96f6f],cl
  414914:	neg    DWORD PTR [eax-0xe]
  414917:	push   esp
  414918:	test   dl,al
  41491a:	push   ebp
  41491b:	hlt    
  41491c:	jecxz  0x4148d1
  41491e:	or     DWORD PTR [edi+eax*8],edi
  414921:	push   0xffffffb8
  414923:	aad    0x83
  414925:	lods   al,BYTE PTR ds:[esi]
  414926:	push   0xbe512a3b
  41492b:	jbe    0x414949
  41492d:	stos   BYTE PTR es:[edi],al
  41492e:	dec    ecx
  41492f:	nop
  414930:	mov    eax,ds:0x7c1178c4
  414935:	xchg   ebx,eax
  414936:	daa    
  414937:	daa    
  414938:	leave  
  414939:	rcl    DWORD PTR [edi+0x36],cl
  41493c:	(bad)  
  41493d:	in     eax,0x9c
  41493f:	arpl   cx,bx
  414941:	fs adc eax,0xcff45ce4
  414947:	adc    eax,0xe7343038
  41494c:	mov    BYTE PTR [edi+0x2c],0xe8
  414950:	add    BYTE PTR [ecx],bh
  414952:	sbb    al,BYTE PTR [eax+0x5]
  414955:	mov    ebp,0xf99221e7
  41495a:	push   0xffffffca
  41495c:	stos   BYTE PTR es:[edi],al
  41495d:	mov    eax,ds:0xe8ca8ea6
  414962:	iret   
  414963:	stos   DWORD PTR es:[edi],eax
  414964:	arpl   WORD PTR ds:0x27556629,cx
  41496a:	fmul   DWORD PTR [esi+0x20c6b872]
  414970:	mov    ds:0xc27a69ee,al
  414975:	lock pop ebx
  414977:	mov    esi,0x209892ae
  41497c:	data16 jae 0x4149a8
  41497f:	lods   al,BYTE PTR ds:[esi]
  414980:	scas   al,BYTE PTR es:[edi]
  414981:	stos   DWORD PTR es:[edi],eax
  414982:	sbb    eax,0xa5544be3
  414987:	fidiv  WORD PTR [ebx]
  414989:	add    cl,ch
  41498b:	nop
  41498c:	pop    edx
  41498d:	xor    dh,BYTE PTR [edi+0x328cba6]
  414993:	gs aam 0xf1
  414996:	xor    BYTE PTR [ebx],ch
  414998:	mov    BYTE PTR [ecx],al
  41499a:	lock jge 0x414924
  41499d:	cdq    
  41499e:	aad    0xd9
  4149a0:	ret    0x8f07
  4149a3:	adc    eax,0x41cbe4c0
  4149a8:	ficomp WORD PTR [ebp+0x6e4c252c]
  4149ae:	mov    cl,0xdf
  4149b0:	imul   esi,DWORD PTR [edi-0x3c9b0669],0x4a
  4149b7:	add    ecx,DWORD PTR [eax]
  4149b9:	aas    
  4149ba:	jle    0x41493c
  4149bc:	or     al,0x6b
  4149be:	jl     0x414a01
  4149c0:	(bad)
  4149c3:	aad    0x6c
  4149c5:	and    al,BYTE PTR [ecx-0x651e5227]
  4149cb:	shl    DWORD PTR [esp+ecx*1-0x1a5b3fbe],1
  4149d2:	jp     0x414a0c
  4149d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149d5:	sti    
  4149d6:	xchg   ecx,eax
  4149d7:	imul   edi,DWORD PTR [edx],0xf98ba3c8
  4149dd:	ror    edi,1
  4149df:	xor    BYTE PTR [esi-0x6ca34a81],0x79
  4149e6:	mov    ds:0x91c075a6,eax
  4149eb:	fwait
  4149ec:	repz pop es
  4149ee:	xor    esi,DWORD PTR [edi]
  4149f0:	mov    DWORD PTR [ebp+0x47],edx
  4149f3:	loope  0x414989
  4149f5:	fwait
  4149f6:	push   ss
  4149f7:	mov    al,ds:0x339e6e09
  4149fc:	mov    al,0xde
  4149fe:	cmp    dh,ah
  414a00:	inc    ebx
  414a01:	ss (bad) 
  414a04:	test   BYTE PTR [edi+0x45],ah
  414a07:	add    ecx,ebx
  414a09:	xlat   BYTE PTR ds:[ebx]
  414a0a:	inc    ecx
  414a0b:	cmp    al,0xff
  414a0d:	sbb    ebp,ebp
  414a0f:	inc    ebx
  414a10:	adc    DWORD PTR [ecx],edx
  414a12:	stos   BYTE PTR es:[edi],al
  414a13:	add    al,0x3a
  414a15:	fsub   QWORD PTR [ebp-0x68]
  414a18:	mov    ch,0xb2
  414a1a:	outs   dx,DWORD PTR ds:[esi]
  414a1b:	pop    eax
  414a1c:	mov    esp,0x90661d5e
  414a21:	stos   BYTE PTR es:[edi],al
  414a22:	stos   BYTE PTR es:[edi],al
  414a23:	sub    eax,0x91f687cf
  414a28:	sub    ebp,DWORD PTR [edi+ebx*8-0x49bafae3]
  414a2f:	sar    BYTE PTR [edx-0x49],0x8f
  414a33:	ret    
  414a34:	mov    edi,0x5910ae65
  414a39:	dec    esi
  414a3a:	out    0x53,al
  414a3c:	mov    ah,0x5c
  414a3e:	loope  0x414a91
  414a40:	lods   al,BYTE PTR ds:[esi]
  414a41:	inc    ebp
  414a42:	rol    ebx,1
  414a44:	fisubr WORD PTR [ebp-0x3a81a866]
  414a4a:	cmc    
  414a4b:	pop    ebx
  414a4c:	push   0xffffffe5
  414a4e:	vmread DWORD PTR [eax+0x2ac5768],ebx
  414a55:	sub    edx,DWORD PTR [ebx-0xf]
  414a58:	pop    edi
  414a59:	nop
  414a5a:	ja     0x414a6d
  414a5c:	jno    0x414aa8
  414a5e:	sbb    eax,DWORD PTR [ebx-0x63b0f717]
  414a64:	push   esi
  414a65:	bound  ecx,QWORD PTR [ecx*4+0x6b6db547]
  414a6c:	xchg   BYTE PTR [edi+ebp*2-0x317cb5cb],bl
  414a73:	pop    ds
  414a74:	push   0x55
  414a76:	mov    bh,0xb6
  414a78:	dec    esp
  414a79:	inc    esi
  414a7a:	fiadd  WORD PTR [eax+0x71]
  414a7d:	xchg   esi,eax
  414a7e:	inc    ecx
  414a7f:	push   edi
  414a80:	fld    TBYTE PTR [ebp+0x14]
  414a83:	or     DWORD PTR [edx-0x63],0x37
  414a87:	dec    esp
  414a88:	cmp    cl,0xcf
  414a8b:	fadd   st,st(7)
  414a8d:	in     al,dx
  414a8e:	or     ecx,DWORD PTR [ebp+0x25]
  414a91:	clts   
  414a93:	mov    bh,0x14
  414a95:	mov    eax,DWORD PTR [edi]
  414a97:	inc    ebx
  414a98:	add    ebx,0xea0b6d27
  414a9e:	xor    ebx,DWORD PTR [edx-0x5854b250]
  414aa4:	dec    edx
  414aa5:	sub    al,0xfc
  414aa7:	test   eax,0x6d99e4
  414aac:	stos   DWORD PTR es:[edi],eax
  414aad:	into   
  414aae:	jne    0x414aae
  414ab0:	xor    eax,0x6f707a3
  414ab5:	dec    ebp
  414ab6:	cmp    BYTE PTR [edi+0x27],dh
  414ab9:	addr16 out dx,eax
  414abb:	xchg   edx,eax
  414abc:	scas   eax,DWORD PTR es:[edi]
  414abd:	xchg   esp,eax
  414abe:	js     0x414ac3
  414ac0:	mov    bl,BYTE PTR [ebx+0x6]
  414ac3:	outs   dx,BYTE PTR ds:[esi]
  414ac4:	and    DWORD PTR [edx],ebp
  414ac6:	in     al,0x8e
  414ac8:	xchg   ecx,eax
  414ac9:	cmp    eax,0x3b29b6d4
  414ace:	sahf   
  414acf:	mov    eax,ds:0x70b53f5e
  414ad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ad5:	xchg   BYTE PTR [esi+0x42d66dca],bl
  414adb:	inc    esi
  414adc:	sbb    al,0x65
  414ade:	js     0x414abb
  414ae0:	loopne 0x414a9d
  414ae2:	iret   
  414ae3:	aad    0x49
  414ae5:	push   cs
  414ae6:	retfw  
  414ae8:	and    ah,BYTE PTR [esi-0x2ca33d83]
  414aee:	xchg   ebx,eax
  414aef:	jmp    0xcae470be
  414af4:	dec    ebp
  414af5:	mov    ds,WORD PTR [ebp+0x2c]
  414af8:	bound  eax,QWORD PTR [eax+0x22]
  414afb:	and    ebx,DWORD PTR [ebp+ecx*1+0x69]
  414aff:	cmp    eax,0x7f85c28c
  414b04:	(bad)  
  414b05:	xchg   ebx,eax
  414b06:	jmp    eax
  414b08:	das    
  414b09:	dec    ebx
  414b0a:	outs   dx,BYTE PTR ds:[esi]
  414b0b:	xchg   edi,eax
  414b0c:	xchg   edx,eax
  414b0d:	cmp    BYTE PTR [ecx],dh
  414b0f:	rcl    dl,1
  414b11:	push   ds
  414b12:	fild   WORD PTR [esi-0x50a16d7b]
  414b18:	or     dl,dl
  414b1a:	sub    al,0xd9
  414b1c:	xor    dh,BYTE PTR [ecx-0x579d4cb2]
  414b22:	dec    esi
  414b23:	fwait
  414b24:	jno    0x414b13
  414b26:	mov    ds:0x6ff189a1,eax
  414b2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b2c:	jb     0x414b90
  414b2e:	mov    dl,0xe8
  414b30:	sub    bl,bl
  414b32:	aas    
  414b33:	test   esi,0xd81ac350
  414b39:	mov    dl,0x1f
  414b3b:	mov    ecx,0x85b1ba5d
  414b40:	dec    ebp
  414b41:	pop    ebp
  414b42:	sti    
  414b43:	cmp    eax,0x90348fa
  414b48:	xor    eax,0x54b2a6d
  414b4d:	adc    ebx,DWORD PTR [ebx-0x72]
  414b50:	fistp  DWORD PTR [edi+0x69]
  414b53:	xor    DWORD PTR [ebx+0x74],edx
  414b56:	jge    0x414b07
  414b58:	hlt    
  414b59:	je     0x414bc5
  414b5b:	inc    ebx
  414b5c:	add    WORD PTR [ebp-0x47],0x19
  414b61:	jne    0x414bbb
  414b63:	mov    esi,0x902ec3cf
  414b68:	and    cl,BYTE PTR [ecx+ebp*2]
  414b6b:	sahf   
  414b6c:	pushf  
  414b6d:	hlt    
  414b6e:	in     al,0x75
  414b70:	rcr    DWORD PTR [edi-0x2a65867a],cl
  414b76:	clc    
  414b77:	arpl   WORD PTR [ebp+0x39],sp
  414b7a:	lahf   
  414b7b:	add    ch,BYTE PTR [esi]
  414b7d:	gs xchg edx,eax
  414b7f:	jmp    0x246ee77e
  414b84:	xchg   ebx,eax
  414b85:	adc    al,0x72
  414b87:	pop    ebp
  414b88:	shr    DWORD PTR [ebp+0x36],0x35
  414b8c:	rcl    BYTE PTR [edi*4-0x51d63d13],0xd0
  414b94:	fimul  DWORD PTR [ebp-0x72]
  414b97:	push   ss
  414b98:	xor    bh,ah
  414b9a:	aad    0xec
  414b9c:	mov    esp,0xa0130117
  414ba1:	int3   
  414ba2:	div    DWORD PTR [ecx-0x5d1aa3b0]
  414ba8:	jmp    0xb6c2:0x3e891162
  414baf:	jecxz  0x414be8
  414bb1:	adc    DWORD PTR [ebp-0x1],edi
  414bb4:	clc    
  414bb5:	pusha  
  414bb6:	int3   
  414bb7:	adc    al,0x0
  414bb9:	(bad)  
  414bba:	out    dx,eax
  414bbb:	or     edi,DWORD PTR [edi-0x4eee6c71]
  414bc1:	fs ja  0x414ba9
  414bc4:	xchg   ebx,eax
  414bc5:	pop    esi
  414bc6:	(bad)  
  414bc7:	scas   al,BYTE PTR es:[edi]
  414bc8:	clc    
  414bc9:	cwde   
  414bca:	sub    bl,BYTE PTR [edi]
  414bcc:	mov    cl,0x11
  414bce:	add    eax,0xa371a555
  414bd3:	lahf   
  414bd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bd5:	mov    eax,ds:0x7fe47fc5
  414bda:	jnp    0x414bb3
  414bdc:	outs   dx,BYTE PTR ds:[esi]
  414bdd:	dec    esi
  414bde:	in     eax,dx
  414bdf:	hlt    
  414be0:	fcom   DWORD PTR [eax]
  414be2:	ret    
  414be3:	mov    eax,ds:0xc632a030
  414be8:	stos   WORD PTR es:[edi],ax
  414bea:	in     eax,0x2a
  414bec:	mov    ecx,esi
  414bee:	fs jge 0x414be1
  414bf1:	(bad)  
  414bf2:	leave  
  414bf3:	(bad)  
  414bf4:	gs mov ah,0x80
  414bf7:	push   cs
  414bf8:	mov    ?,WORD PTR [ecx-0x25baa385]
  414bfe:	setle  ah
  414c01:	push   edx
  414c02:	mov    cl,0xb6
  414c04:	push   es
  414c05:	nop
  414c06:	loopne 0x414c28
  414c08:	jae    0x414c58
  414c0a:	push   ss
  414c0b:	ret    0x19dc
  414c0e:	out    dx,al
  414c0f:	retf   
  414c10:	xchg   ebx,eax
  414c11:	loopne 0x414c53
  414c13:	shl    BYTE PTR [eax],1
  414c15:	dec    edi
  414c16:	jbe    0x414c62
  414c18:	ret    0x9d9c
  414c1b:	std    
  414c1c:	dec    ebp
  414c1d:	stos   DWORD PTR es:[edi],eax
  414c1e:	push   0xfffffff6
  414c20:	call   FWORD PTR [edi+0x62eeae70]
  414c26:	pushf  
  414c27:	fcomp  DWORD PTR [eax-0x3d]
  414c2a:	sbb    eax,0x570ae991
  414c2f:	or     al,0x3a
  414c31:	js     0x414c1b
  414c33:	dec    ebx
  414c34:	jno    0x414c6f
  414c36:	add    BYTE PTR [edx-0x27c5d3b8],bh
  414c3c:	aam    0xca
  414c3e:	int    0x4c
  414c40:	repz jp 0x414cac
  414c43:	mov    edx,0x7cdaae69
  414c48:	retf   
  414c49:	leave  
  414c4a:	inc    eax
  414c4b:	shl    dh,0x73
  414c4e:	lods   al,BYTE PTR ds:[esi]
  414c4f:	ins    BYTE PTR es:[edi],dx
  414c50:	jne    0x414c55
  414c52:	push   edi
  414c53:	loopne 0x414c91
  414c55:	sub    edi,DWORD PTR [edi+0x316a36e6]
  414c5b:	xchg   edi,eax
  414c5c:	pop    es
  414c5d:	pop    esi
  414c5e:	js     0x414be3
  414c60:	std    
  414c61:	popa   
  414c62:	adc    eax,DWORD PTR [ebx]
  414c64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c65:	jmp    0x4af681e3
  414c6a:	mov    bl,0xf6
  414c6c:	int    0xe2
  414c6e:	pop    ecx
  414c6f:	sub    BYTE PTR [edx+edi*1-0xf9c9b99],dh
  414c76:	push   ebx
  414c77:	lods   eax,DWORD PTR ds:[esi]
  414c78:	push   edx
  414c79:	xchg   ebx,eax
  414c7a:	adc    ah,cl
  414c7c:	mov    bh,0x8a
  414c7e:	aas    
  414c7f:	in     al,0xaf
  414c81:	cmp    ebp,DWORD PTR [edi-0x6f326bff]
  414c87:	nop
  414c88:	cmp    BYTE PTR [eax],bh
  414c8a:	sbb    ecx,esi
  414c8c:	rol    ebx,1
  414c8e:	popa   
  414c8f:	mov    WORD PTR [edx+0x38e3abbb],fs
  414c95:	jae    0x414cba
  414c97:	xchg   DWORD PTR [edx],esi
  414c99:	test   eax,0x37c3422b
  414c9e:	mov    ds:0x5a30870b,al
  414ca3:	sbb    edi,DWORD PTR [ebx-0x3f]
  414ca6:	fst    DWORD PTR [ebx-0x5c]
  414ca9:	dec    BYTE PTR [ebx]
  414cab:	(bad)  
  414cae:	and    eax,0xea95c6be
  414cb3:	lea    edx,[esi-0x39ccb932]
  414cb9:	xchg   ebx,eax
  414cba:	stc    
  414cbb:	ins    DWORD PTR es:[edi],dx
  414cbc:	add    cl,BYTE PTR [ecx+0x1f61335f]
  414cc2:	inc    edx
  414cc3:	sbb    DWORD PTR [edi],eax
  414cc5:	add    al,0xcc
  414cc7:	or     ebx,esp
  414cc9:	xchg   ecx,eax
  414cca:	imul   ebx,DWORD PTR [esi+0x4],0x72
  414cce:	jno    0x414ccd
  414cd0:	mov    ebx,0x7de8b77d
  414cd5:	jb     0x414cd5
  414cd7:	add    ch,BYTE PTR [ecx+0x70]
  414cda:	inc    ebx
  414cdb:	punpckldq mm6,DWORD PTR [edi+0x423453e6]
  414ce2:	int    0xc2
  414ce4:	mov    bl,0x7f
  414ce6:	(bad)
  414ce9:	sub    dl,al
  414ceb:	sbb    bh,BYTE PTR [ebx+edx*2-0x1a]
  414cef:	ins    DWORD PTR es:[edi],dx
  414cf0:	adc    BYTE PTR [esi+0x67f9708e],al
  414cf6:	hlt    
  414cf7:	dec    eax
  414cf8:	push   0x1f
  414cfa:	add    ecx,ebx
  414cfc:	dec    ecx
  414cfd:	xchg   DWORD PTR [ecx],edi
  414cff:	push   esp
  414d00:	and    edx,DWORD PTR [eax-0x2a]
  414d03:	push   0xbfbfface
  414d08:	push   esp
  414d09:	js     0x414d4d
  414d0b:	mov    esi,0x9aa5921
  414d10:	sbb    al,0xf
  414d12:	ds mov bl,0x63
  414d15:	jb     0x414cb6
  414d17:	loop   0x414d56
  414d19:	dec    edx
  414d1a:	jnp    0x414d4e
  414d1c:	adc    dh,bl
  414d1e:	cdq    
  414d1f:	mov    DWORD PTR [ecx+0xb],0xd2b14585
  414d26:	jecxz  0x414da4
  414d28:	outs   dx,BYTE PTR ds:[esi]
  414d29:	jmp    0x64276c40
  414d2e:	or     al,0xe1
  414d30:	add    bh,BYTE PTR [esi-0x31]
  414d33:	nop
  414d34:	outs   dx,DWORD PTR ds:[esi]
  414d35:	nop
  414d36:	retf   
  414d37:	shl    DWORD PTR [esi+eiz*1+0x7c],1
  414d3b:	cmc    
  414d3c:	dec    ecx
  414d3d:	retf   
  414d3e:	or     eax,0xffe4d246
  414d43:	push   ss
  414d44:	retf   0xbc
  414d47:	out    dx,al
  414d48:	mov    cl,BYTE PTR [edi-0x675450a]
  414d4e:	mov    al,ds:0xbe2c1c26
  414d53:	or     DWORD PTR [ebp-0x35b0f27],esp
  414d59:	rcr    DWORD PTR [esi+0x1c],0x36
  414d5d:	out    dx,al
  414d5e:	jae    0x414d91
  414d60:	call   0xa7ce:0x71241d10
  414d67:	clc    
  414d68:	pop    ecx
  414d69:	out    0xf,eax
  414d6b:	fcomp  st(2)
  414d6d:	dec    ecx
  414d6e:	push   0x38
  414d70:	icebp  
  414d71:	retf   0xacc8
  414d74:	push   ss
  414d75:	jmp    0x414da5
  414d77:	outs   dx,DWORD PTR ds:[esi]
  414d78:	inc    ebx
  414d79:	dec    esp
  414d7a:	push   ds
  414d7b:	push   es
  414d7c:	jae    0x414d43
  414d7e:	(bad)  
  414d7f:	cmp    DWORD PTR [ebx],eax
  414d81:	sub    ebp,esi
  414d83:	push   eax
  414d84:	adc    bl,BYTE PTR [ebp-0x54e55141]
  414d8a:	push   cs
  414d8b:	jbe    0x414d36
  414d8d:	mov    esp,0x302d8c41
  414d92:	cwde   
  414d93:	dec    ebp
  414d94:	add    ecx,ebx
  414d96:	pusha  
  414d97:	sbb    al,BYTE PTR [edx]
  414d99:	inc    ebx
  414d9a:	fsub   st,st(0)
  414d9c:	ds add esi,edi
  414d9f:	ja     0x414e0f
  414da1:	outs   dx,DWORD PTR ds:[esi]
  414da2:	jp     0x414d8b
  414da4:	cmp    edi,DWORD PTR [eax+0x9b9d054]
  414daa:	ss out dx,eax
  414dac:	in     eax,dx
  414dad:	minps  xmm3,XMMWORD PTR [ebp-0x12]
  414db1:	pop    edi
  414db2:	inc    edx
  414db3:	mov    cl,0xb0
  414db5:	cmp    BYTE PTR [ebx+0x38],ah
  414db8:	mov    ecx,0x8249d76d
  414dbd:	and    edi,DWORD PTR [eax+0x2a]
  414dc0:	jg     0x414e2f
  414dc2:	in     eax,dx
  414dc3:	or     edx,ebx
  414dc5:	sbb    eax,DWORD PTR [ebx+0xa]
  414dc8:	jecxz  0x414e1b
  414dca:	lahf   
  414dcb:	xor    esi,DWORD PTR [ebp+0x54da8812]
  414dd1:	sbb    al,0x99
  414dd3:	jge    0x414d5d
  414dd5:	fimul  DWORD PTR [edx+0xdc0a450]
  414ddb:	retf   0xf834
  414dde:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  414de0:	(bad)  
  414de1:	shl    BYTE PTR [esi],cl
  414de3:	and    eax,0xeebf14d9
  414de8:	sbb    ah,BYTE PTR [edx]
  414dea:	sar    ebp,1
  414dec:	out    0x2a,eax
  414dee:	mov    ds:0x7567c50f,al
  414df3:	popf   
  414df4:	adc    al,0x63
  414df6:	arpl   WORD PTR [eax],di
  414df8:	add    ebp,ebx
  414dfa:	mov    ebp,0x1d448d17
  414dff:	loop   0x414e5e
  414e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e02:	mov    bh,0x26
  414e04:	push   0x27bf8f5f
  414e09:	add    eax,0x483035e5
  414e0e:	inc    esp
  414e0f:	push   esp
  414e10:	jae    0x414e1e
  414e12:	nop
  414e13:	in     al,0xca
  414e15:	jno    0x414e04
  414e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e19:	inc    edi
  414e1a:	adc    BYTE PTR [esi],bl
  414e1c:	mov    eax,0x4668cfb7
  414e21:	hlt    
  414e22:	mov    ah,0x9a
  414e24:	pop    ss
  414e25:	adc    eax,0xdb862bed
  414e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e2b:	rcl    DWORD PTR [ecx-0x7e],1
  414e2e:	jecxz  0x414de0
  414e30:	aas    
  414e31:	xchg   ebx,eax
  414e32:	call   0x5af4:0xc6bb48a6
  414e39:	cwde   
  414e3a:	mov    DWORD PTR [esi],esp
  414e3c:	lds    edi,FWORD PTR [edi-0x21]
  414e3f:	clc    
  414e40:	sbb    al,0xba
  414e42:	out    0x74,eax
  414e44:	mov    ds,WORD PTR [edi]
  414e46:	pop    es
  414e47:	dec    ecx
  414e48:	xchg   DWORD PTR [ebx+0x31],eax
  414e4b:	retf   0x6f3c
  414e4e:	mov    ds:0x24aebad6,al
  414e53:	shl    DWORD PTR [ebx-0x7df42a58],0xf9
  414e5a:	sub    edi,DWORD PTR [esi]
  414e5c:	pop    ecx
  414e5d:	jmp    0x414deb
  414e5f:	dec    esp
  414e60:	(bad)  [esi+0x12daa843]
  414e66:	mov    cs,WORD PTR [ebp-0xbf96c7d]
  414e6c:	jnp    0x414e8e
  414e6e:	xor    al,0x74
  414e70:	test   DWORD PTR [ebx-0x742d999a],edi
  414e76:	int3   
  414e77:	imul   ecx,edi,0x6e9a0bfc
  414e7d:	dec    esp
  414e7e:	dec    edi
  414e7f:	or     dl,BYTE PTR [ebx]
  414e81:	(bad)  
  414e82:	dec    esi
  414e83:	test   eax,0x15cf2d99
  414e88:	outs   dx,BYTE PTR ds:[esi]
  414e89:	and    edi,esp
  414e8b:	xchg   DWORD PTR [esi+0x1e74cedb],esi
  414e91:	pop    esp
  414e92:	push   esp
  414e93:	fcmovu st,st(5)
  414e95:	cwde   
  414e96:	jmp    0x2e5a709c
  414e9b:	jne    0x414e74
  414e9d:	or     dh,BYTE PTR [ebx-0x52]
  414ea0:	xor    cl,bh
  414ea2:	aas    
  414ea3:	(bad)  [eax]
  414ea5:	int3   
  414ea6:	or     bh,BYTE PTR [edx+0xb8ec905]
  414eac:	shr    BYTE PTR [esi+0x22766861],0xe8
  414eb3:	cmp    ah,BYTE PTR [ecx+0xb]
  414eb6:	cld    
  414eb7:	in     eax,0x67
  414eb9:	add    bh,BYTE PTR [esi+0x46d0b46d]
  414ebf:	aam    0x72
  414ec1:	push   eax
  414ec2:	or     eax,DWORD PTR [edx]
  414ec4:	test   DWORD PTR [ebp-0x37ac7403],edx
  414eca:	cmp    BYTE PTR [edx-0x5f],al
  414ecd:	pop    ss
  414ece:	into   
  414ecf:	xchg   dh,bl
  414ed1:	xchg   esi,eax
  414ed2:	test   al,0xee
  414ed4:	pusha  
  414ed5:	test   BYTE PTR [edi],al
  414ed7:	cdq    
  414ed8:	pop    edx
  414ed9:	mov    dl,0xeb
  414edb:	cmp    al,0x19
  414edd:	pop    ebp
  414ede:	mov    eax,0xb27faef
  414ee3:	or     BYTE PTR [ebx-0x25],ah
  414ee6:	cmp    eax,0xf31b8d65
  414eeb:	and    bh,BYTE PTR [eax-0xa]
  414eee:	mov    BYTE PTR [ecx],0x9f
  414ef1:	mov    eax,ds:0xaef782b0
  414ef6:	fld    QWORD PTR [ecx]
  414ef8:	int    0x16
  414efa:	cmp    al,0xf1
  414efc:	mul    DWORD PTR [ebx*1-0x5c650dd2]
  414f03:	lock out 0xcf,eax
  414f06:	int    0xda
  414f08:	sahf   
  414f09:	or     ebx,DWORD PTR [esi+0x7e8adb3a]
  414f0f:	sbb    BYTE PTR [ecx+0xcc35569],cl
  414f15:	imul   di,sp,0x7970
  414f1a:	outs   dx,BYTE PTR ds:[esi]
  414f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f1c:	fmul   st,st(2)
  414f1e:	outs   dx,BYTE PTR ds:[esi]
  414f1f:	mov    ah,0x1b
  414f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f22:	or     al,0x67
  414f24:	push   edx
  414f25:	jno    0x414f65
  414f27:	mov    cl,BYTE PTR [si-0x1112]
  414f2c:	aaa    
  414f2d:	pop    eax
  414f2e:	xor    BYTE PTR [ebx-0x1d1523c6],bh
  414f34:	or     al,0xbf
  414f36:	pop    edx
  414f37:	push   ecx
  414f38:	fs ret 
  414f3a:	sub    DWORD PTR [ebx+0x7b],0x83f2a194
  414f41:	enter  0xd033,0xa5
  414f45:	inc    ebx
  414f46:	arpl   si,bx
  414f48:	lea    esp,[eax-0x73]
  414f4b:	sub    eax,0xd1d1bb75
  414f50:	(bad)  
  414f51:	and    eax,0x19979259
  414f56:	pop    edi
  414f57:	(bad)  
  414f58:	ror    DWORD PTR [esi+esi*1+0x76],1
  414f5c:	gs mov bl,bh
  414f5f:	and    DWORD PTR [esi],edi
  414f61:	jecxz  0x414fe2
  414f63:	mov    DWORD PTR [eax-0x15],edx
  414f66:	push   edi
  414f67:	push   ecx
  414f68:	js     0x414f90
  414f6a:	mov    edx,DWORD PTR [ecx+edx*4]
  414f6d:	pop    esi
  414f6e:	fs daa 
  414f70:	push   cs
  414f71:	jmp    0xf1787dd6
  414f76:	or     bl,BYTE PTR [ebp-0x33528896]
  414f7c:	repz and dl,BYTE PTR [edi+eiz*2]
  414f80:	pop    es
  414f81:	adc    DWORD PTR [eax-0x1],edi
  414f84:	stos   DWORD PTR es:[edi],eax
  414f85:	sbb    al,0xbc
  414f87:	les    esi,FWORD PTR [edi]
  414f89:	xor    eax,0xbb1438fd
  414f8e:	ss mov ebx,0x684be6f3
  414f94:	mov    eax,0xf47c24
  414f99:	je     0x414f96
  414f9b:	in     al,dx
  414f9c:	and    al,0xef
  414f9e:	and    dh,BYTE PTR [ebx+0x14]
  414fa1:	ror    BYTE PTR [ebx-0x2e295d74],0x74
  414fa8:	jns    0x414f87
  414faa:	dec    ebx
  414fab:	retf   0xe76f
  414fae:	and    esi,DWORD PTR [edx]
  414fb0:	out    dx,al
  414fb1:	or     esp,esi
  414fb3:	out    0x0,al
  414fb5:	scas   al,BYTE PTR es:[edi]
  414fb6:	clc    
  414fb7:	xor    eax,0x3e304b91
  414fbc:	xchg   ecx,eax
  414fbd:	repz loopne 0x414f84
  414fc0:	jecxz  0x414fb0
  414fc2:	xchg   edx,eax
  414fc3:	jmp    DWORD PTR [edi]
  414fc5:	int    0xec
  414fc7:	xor    BYTE PTR [esi+0x29],ch
  414fca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fcb:	dec    esp
  414fcc:	inc    ecx
  414fcd:	scas   eax,DWORD PTR es:[edi]
  414fce:	and    DWORD PTR [esi],esi
  414fd0:	and    dl,BYTE PTR [ecx-0x6f51f6bf]
  414fd6:	fwait
  414fd7:	xchg   DWORD PTR [ebp+0x70786672],esp
  414fdd:	mov    esp,0x13a63e89
  414fe2:	adc    al,0x7
  414fe4:	push   esp
  414fe5:	ss cmc 
  414fe7:	xor    eax,0x229b44c2
  414fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fed:	mov    ah,bl
  414fef:	pop    ss
  414ff0:	mov    eax,ds:0xca0b7538
  414ff5:	dec    edi
  414ff6:	int    0xa1
  414ff8:	popa   
  414ff9:	jp     0x414fa6
  414ffb:	mov    esi,0x7614be4b
  415000:	retf   
  415001:	mov    ds:0xb8d4875f,al
  415006:	out    0xb1,eax
  415008:	js     0x414fcc
  41500a:	mov    bl,0xfc
  41500c:	loopne 0x414fa5
  41500e:	push   edi
  41500f:	jnp    0x415045
  415011:	cld    
  415012:	adc    ebp,DWORD PTR [eax+0x79]
  415015:	retf   
  415016:	dec    ebp
  415017:	and    eax,0x6900f027
  41501c:	(bad)  
  41501d:	and    al,0xe7
  41501f:	mov    fs,WORD PTR [edx-0x3dd92cc5]
  415025:	fdivp  st(7),st
  415027:	sbb    DWORD PTR [ebp-0x29d07154],ecx
  41502d:	mov    ebx,ds
  41502f:	in     al,0xf1
  415031:	mov    dl,0x81
  415033:	add    DWORD PTR [esi+0x6c],eax
  415036:	in     al,dx
  415037:	ja     0x414fc3
  415039:	das    
  41503a:	nop
  41503b:	or     BYTE PTR [esi],dh
  41503d:	into   
  41503e:	rcr    DWORD PTR [ecx-0xc9aa991],cl
  415044:	push   0xffffff89
  415046:	ret    
  415047:	adc    eax,0x2a0b6761
  41504c:	jae    0x415093
  41504e:	ror    BYTE PTR [esi+ebp*2],1
  415051:	stos   DWORD PTR es:[edi],eax
  415052:	xor    ebx,esi
  415054:	push   edx
  415055:	cld    
  415056:	je     0x4150ad
  415058:	stc    
  415059:	xchg   BYTE PTR [edi+0x1d],cl
  41505c:	and    DWORD PTR ds:0x6a755022,ebx
  415062:	nop
  415063:	dec    ebp
  415064:	imul   eax,DWORD PTR [eax-0x54033bf6],0x8260cf27
  41506e:	xchg   esp,eax
  41506f:	cwde   
  415070:	jno    0x415081
  415072:	fnstcw WORD PTR [esi-0x34]
  415075:	xchg   DWORD PTR [ebp-0x7],esi
  415078:	mov    ah,0x51
  41507a:	xor    dh,BYTE PTR [edi-0x3c]
  41507d:	jae    0x4150a1
  41507f:	push   ds
  415080:	mov    eax,0x22f01b85
  415085:	push   esp
  415086:	nop
  415087:	aam    0xcd
  415089:	not    BYTE PTR [ebp-0x4bb4abfd]
  41508f:	test   ebp,esp
  415091:	xor    BYTE PTR [edi+ebx*8],bl
  415094:	stos   BYTE PTR es:[edi],al
  415095:	mov    ebx,0xafad9337
  41509a:	push   edi
  41509b:	lea    ecx,[eax]
  41509d:	add    BYTE PTR [edi+0x2d],bl
  4150a0:	neg    DWORD PTR ds:0x1c76e19b
  4150a6:	test   edx,eax
  4150a8:	stos   BYTE PTR es:[edi],al
  4150a9:	jecxz  0x415122
  4150ab:	add    BYTE PTR [ebx+0x6f],dh
  4150ae:	mov    dh,0x55
  4150b0:	imul   edi,DWORD PTR [edi-0x629ca893],0xffffffc9
  4150b7:	test   al,0x5d
  4150b9:	test   BYTE PTR [edi],al
  4150bb:	mov    ecx,DWORD PTR [edx+0x2e]
  4150be:	fisub  WORD PTR [ebx+0x36687b19]
  4150c4:	div    dl
  4150c6:	and    eax,0x2ba0e221
  4150cb:	fcomi  st,st(7)
  4150cd:	je     0x415076
  4150cf:	ins    BYTE PTR es:[edi],dx
  4150d0:	lock sbb BYTE PTR [ecx+0xe],0x7e
  4150d5:	inc    esp
  4150d6:	leave  
  4150d7:	test   al,0xa3
  4150d9:	shr    DWORD PTR [eax-0x73],1
  4150dc:	pop    edi
  4150dd:	push   ecx
  4150de:	mov    dh,0x3f
  4150e0:	aam    0xcd
  4150e2:	fcomip st,st(7)
  4150e4:	mov    esp,edx
  4150e6:	and    eax,0xa8b88be4
  4150eb:	push   esi
  4150ec:	pushf  
  4150ed:	dec    ebp
  4150ee:	gs sub eax,0xe74cc1d8
  4150f4:	or     BYTE PTR [ecx+0x19],al
  4150f7:	mov    eax,es
  4150f9:	das    
  4150fa:	data16 xor dl,bh
  4150fd:	je     0x41509f
  4150ff:	adc    dh,BYTE PTR [edx+esi*2]
  415102:	mov    ah,0x7f
  415104:	pop    esi
  415105:	push   ebx
  415106:	push   esp
  415107:	xchg   ebx,eax
  415108:	lods   eax,DWORD PTR ds:[esi]
  415109:	xchg   esp,eax
  41510a:	hlt    
  41510b:	mov    ecx,DWORD PTR [eax-0x3]
  41510e:	cmp    al,0x16
  415110:	pop    esp
  415111:	sub    DWORD PTR [esi+0x74],edx
  415114:	fs mov edx,0xd0a6b1b4
  41511a:	cmc    
  41511b:	mov    ebp,0xc2de6aca
  415120:	hlt    
  415121:	xchg   esi,eax
  415122:	fisubr DWORD PTR [eax+0x63]
  415125:	out    0xdf,al
  415127:	pop    ds
  415128:	lods   eax,DWORD PTR ds:[esi]
  415129:	addr16 sbb eax,0x84ee0a8a
  41512f:	sbb    ah,dh
  415131:	daa    
  415132:	jge    0x4151a3
  415134:	xor    BYTE PTR ds:0xc501410,0x80
  41513b:	cmp    al,dh
  41513d:	int    0xa2
  41513f:	cdq    
  415140:	dec    edi
  415141:	mov    ecx,0xd0665c6c
  415146:	daa    
  415147:	fldcw  WORD PTR [ebx-0x28325345]
  41514d:	(bad)  
  41514e:	xlat   BYTE PTR ds:[ebx]
  41514f:	or     ah,BYTE PTR [ebx-0x74b56c13]
  415155:	(bad)  
  415156:	enter  0xda9a,0x78
  41515a:	mov    bl,0xab
  41515c:	sti    
  41515d:	mov    bl,0xca
  41515f:	mov    eax,0x63acbea7
  415164:	(bad)  
  415165:	dec    eax
  415166:	xchg   edi,eax
  415167:	pop    esp
  415168:	rol    DWORD PTR [ebx],cl
  41516a:	data16 and dl,ch
  41516d:	and    eax,0xec3472db
  415172:	and    edx,DWORD PTR es:[eax+0x3a]
  415176:	xchg   ebx,esp
  415178:	mov    esi,0xcdaa7a28
  41517d:	jae    0x4151f0
  41517f:	enter  0xdbb,0xb4
  415183:	mov    BYTE PTR gs:[ecx],bh
  415186:	ds push ds
  415188:	(bad)  
  415189:	mov    bl,0x1
  41518b:	mov    ebx,0x16a8f907
  415190:	rcr    DWORD PTR [edx],1
  415192:	fst    DWORD PTR [eax]
  415194:	dec    eax
  415195:	pop    esi
  415196:	mov    ch,0x10
  415198:	xchg   ecx,eax
  415199:	aaa    
  41519a:	fdivr  st,st(4)
  41519c:	inc    ebx
  41519d:	cli    
  41519e:	jmp    0x40b7:0xc14d44da
  4151a5:	gs cli 
  4151a7:	loopne 0x415143
  4151a9:	sbb    eax,0x10c76e89
  4151ae:	pop    edi
  4151af:	mov    al,0x21
  4151b1:	push   edi
  4151b2:	fsubr  QWORD PTR [ecx]
  4151b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151b5:	mov    ah,0x3e
  4151b7:	shl    BYTE PTR [edi+0x19],1
  4151ba:	gs es js 0x4151f5
  4151be:	add    al,0x64
  4151c0:	in     al,0xef
  4151c2:	fild   WORD PTR [ebx+0x2b5a846c]
  4151c8:	imul   ebx,DWORD PTR [edi],0x4b75135
  4151ce:	cmp    BYTE PTR [edx],bh
  4151d0:	cmp    BYTE PTR [ebx+0x13239b96],bh
  4151d6:	xlat   BYTE PTR ds:[ebx]
  4151d7:	daa    
  4151d8:	lock lea esp,ss:[ecx-0x127b8308]
  4151e0:	out    0x30,al
  4151e2:	mov    ds:0xb949493f,al
  4151e7:	add    eax,eax
  4151e9:	push   ds
  4151ea:	pop    ss
  4151eb:	pop    ecx
  4151ec:	add    BYTE PTR [esi-0x6e9cfb86],dh
  4151f2:	iret   
  4151f3:	jo     0x41518c
  4151f5:	retf   
  4151f6:	sbb    BYTE PTR [esi+ebp*8],cl
  4151f9:	xor    al,0xe5
  4151fb:	jle    0x415195
  4151fd:	fstp   DWORD PTR [ebx-0x5946207a]
  415203:	ret    0x75c2
  415206:	dec    ebp
  415207:	xchg   ebx,eax
  415208:	in     al,0x0
  41520a:	add    eax,edx
  41520c:	jg     0x41528d
  41520e:	ret    0x9039
  415211:	mov    al,0x20
  415213:	repz iret 
  415215:	sbb    ch,ch
  415217:	ins    BYTE PTR es:[edi],dx
  415218:	mov    eax,?
  41521a:	test   eax,0x4ee7003c
  415220:	ins    BYTE PTR es:[edi],dx
  415221:	popf   
  415222:	push   0x1f
  415224:	or     BYTE PTR ds:[edi+0x69],dh
  415228:	outs   dx,BYTE PTR ds:[esi]
  415229:	xchg   ebp,eax
  41522a:	push   esi
  41522b:	js     0x41526e
  41522d:	fcmove st,st(4)
  41522f:	ja     0x41520b
  415231:	mov    al,ds:0x44afd79c
  415236:	test   al,0xd1
  415238:	mov    ah,0xaf
  41523a:	mov    esp,0x976fb023
  41523f:	inc    ecx
  415240:	inc    ecx
  415241:	mov    dl,0x92
  415243:	add    esi,DWORD PTR [ebp*1-0x3f9104ff]
  41524a:	mov    eax,0xcced216e
  41524f:	xor    al,0x7e
  415251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415252:	xchg   BYTE PTR [eax],dl
  415254:	rcr    BYTE PTR [ecx],1
  415256:	add    edx,edx
  415258:	add    DWORD PTR [ebx-0xf606d6a],esp
  41525e:	jno    0x415245
  415260:	(bad)  
  415261:	xchg   ebx,eax
  415262:	or     edi,DWORD PTR [ebp+0x3b3ccaca]
  415268:	xchg   edi,eax
  415269:	inc    BYTE PTR [esi+0x5a1d6d04]
  41526f:	sub    ah,BYTE PTR [eax]
  415271:	mov    cl,0xf
  415273:	rcl    BYTE PTR [esp+edi*4],0xe4
  415277:	push   0x29
  415279:	retf   
  41527a:	dec    eax
  41527b:	pushf  
  41527c:	neg    al
  41527e:	pop    ds
  41527f:	enter  0x5461,0xb9
  415283:	ret    
  415284:	xchg   edx,eax
  415285:	adc    DWORD PTR [ebp-0x28d312da],ebx
  41528b:	jp     0x4152f3
  41528d:	(bad)  
  41528e:	cmp    eax,0x8005bd9
  415293:	push   es
  415294:	cmp    BYTE PTR [eax-0x1e450237],0xf1
  41529b:	adc    al,0xea
  41529d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41529e:	pop    esp
  41529f:	add    ecx,DWORD PTR [esp+ebx*2]
  4152a2:	lea    ebp,[ecx+0x30]
  4152a5:	sar    BYTE PTR [edx+0x691a2d58],1
  4152ab:	dec    eax
  4152ac:	pop    ecx
  4152ad:	imul   esi,DWORD PTR [ebx+0x7228a6f2],0x1b
  4152b4:	jne    0x415248
  4152b6:	test   BYTE PTR [ebp+0x1a],dl
  4152b9:	inc    edi
  4152ba:	nop
  4152bb:	fnstenv [esi]
  4152bd:	pop    es
  4152be:	out    0x63,eax
  4152c0:	cmp    bl,BYTE PTR [ecx-0x430e5ece]
  4152c6:	xchg   esp,eax
  4152c7:	adc    BYTE PTR [edi-0x4b],dh
  4152ca:	ror    DWORD PTR [esi+0x272521a],cl
  4152d0:	ds loop 0x4152b6
  4152d3:	int    0xef
  4152d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152d6:	sbb    DWORD PTR [ebp+0x787cfef1],esp
  4152dc:	inc    ebx
  4152dd:	dec    bp
  4152df:	xchg   esp,eax
  4152e0:	enter  0xf076,0xcf
  4152e4:	mov    al,ds:0xafdc6099
  4152e9:	pusha  
  4152ea:	jecxz  0x41535c
  4152ec:	das    
  4152ed:	jecxz  0x415340
  4152ef:	fs cmp ecx,edi
  4152f2:	sbb    DWORD PTR [ecx-0x7b1de0bb],edi
  4152f8:	lock pop ebp
  4152fa:	mov    ch,0x80
  4152fc:	sbb    al,0xf5
  4152fe:	mov    eax,0x71fee2df
  415303:	call   0x9c7f:0xd23db19
  41530a:	loope  0x41530c
  41530c:	jbe    0x41536a
  41530e:	push   0x92c834f6
  415313:	xor    DWORD PTR [esi+0x14],0x79
  415317:	mov    ebp,0xec5f80fb
  41531c:	sub    eax,0xe1fcf423
  415321:	aaa    
  415322:	retf   0x7916
  415325:	mov    ecx,0x5fc9bdbe
  41532a:	and    esp,edx
  41532c:	xor    ecx,edi
  41532e:	jmp    0xbcb44ffb
  415333:	imul   esp,DWORD PTR [ecx-0x7829ed06],0xffffffab
  41533a:	jae    0x41533e
  41533c:	imul   ebp,DWORD PTR [edx],0x1f75378f
  415342:	adc    DWORD PTR [edi+esi*8+0x15],ebp
  415346:	lods   eax,DWORD PTR ds:[esi]
  415347:	pop    edi
  415348:	(bad)  
  415349:	retf   0x68c9
  41534c:	(bad)  
  41534d:	pop    ebx
  41534e:	or     al,0x5c
  415350:	test   eax,0x1c2e377e
  415355:	push   0x59188afb
  41535a:	or     al,0x68
  41535c:	mov    esp,fs
  41535e:	push   ds
  41535f:	mov    cl,0x19
  415361:	lock inc edx
  415363:	add    ebx,DWORD PTR [edx]
  415365:	pop    ss
  415366:	cld    
  415367:	(bad)  
  415368:	mov    edi,0xe9de783c
  41536d:	adc    esi,DWORD PTR [edx]
  41536f:	in     eax,dx
  415370:	and    edi,edx
  415372:	add    BYTE PTR [edx],ah
  415374:	loopne 0x41537a
  415376:	rcl    BYTE PTR [ebx],cl
  415378:	adc    eax,0x507c4336
  41537d:	inc    esi
  41537e:	das    
  41537f:	mov    WORD PTR [eax-0x2625e3f0],ss
  415385:	sbb    ecx,0xb18966f5
  41538b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41538c:	mov    ebx,0x7fe8e711
  415391:	cmc    
  415392:	(bad)  
  415393:	sahf   
  415394:	aam    0xa7
  415396:	popf   
  415397:	mov    dh,0xd6
  415399:	iret   
  41539a:	add    BYTE PTR [ecx+esi*1+0x12],ah
  41539e:	lods   eax,DWORD PTR ds:[esi]
  41539f:	aaa    
  4153a0:	or     DWORD PTR [ebp+0x69],esp
  4153a3:	clc    
  4153a4:	sbb    ecx,DWORD PTR [edi]
  4153a6:	outs   dx,BYTE PTR ds:[esi]
  4153a7:	or     eax,0x5fb3dde5
  4153ac:	mov    ds:0x1256c17,al
  4153b1:	lods   al,BYTE PTR ds:[esi]
  4153b2:	mov    ebx,0xb42a11af
  4153b7:	(bad)  
  4153b8:	fidivr DWORD PTR [ecx+ebx*2]
  4153bb:	das    
  4153bc:	sub    BYTE PTR [ecx-0x104fbdb0],0x5c
  4153c3:	mov    ecx,DWORD PTR [edi-0x21]
  4153c6:	dec    edx
  4153c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153c8:	xchg   ebp,eax
  4153c9:	jge    0x415419
  4153cb:	sub    al,BYTE PTR [edx]
  4153cd:	ret    0xc3a0
  4153d0:	in     al,dx
  4153d1:	or     al,0x77
  4153d3:	sbb    DWORD PTR [ebx-0x1e4b3027],edx
  4153d9:	mov    ch,0xa1
  4153db:	dec    ebp
  4153dc:	(bad)
  4153df:	dec    ebp
  4153e0:	retf   0x9952
  4153e3:	add    al,0xec
  4153e5:	jb     0x415429
  4153e7:	aam    0xd5
  4153e9:	sub    edi,DWORD PTR [edx]
  4153eb:	push   ebx
  4153ec:	sub    bl,dh
  4153ee:	pusha  
  4153ef:	sbb    al,0xb1
  4153f1:	cmp    eax,0xeefbb750
  4153f6:	int    0xeb
  4153f8:	adc    esp,DWORD PTR [eax+0x67]
  4153fb:	jmp    0xc72f:0xf0353896
  415402:	(bad)  
  415403:	dec    ebp
  415404:	jg     0x41546c
  415406:	cmp    al,0xd1
  415408:	mov    ds:0x5465b250,al
  41540d:	mov    cl,0x90
  41540f:	vmread DWORD PTR [ebx],ebp
  415412:	rcl    BYTE PTR [edx],0xf
  415415:	in     al,dx
  415416:	inc    ecx
  415417:	mov    esi,0xbbe3754e
  41541c:	es nop
  41541e:	mov    ds,edx
  415420:	mov    eax,0xb0ad6fef
  415425:	and    DWORD PTR [edx-0x254a328d],ecx
  41542b:	inc    edi
  41542c:	mov    dl,0xa
  41542e:	sbb    ecx,0x76
  415431:	out    0x54,eax
  415433:	repz add eax,0xb3665eb9
  415439:	(bad)  
  41543a:	sbb    DWORD PTR [ecx],esp
  41543c:	ins    BYTE PTR es:[edi],dx
  41543d:	mov    dh,0xf4
  41543f:	lea    esp,[edx+0x42]
  415442:	mov    WORD PTR [edi-0x1d4da4a9],ds
  415448:	retf   
  415449:	retf   0xd881
  41544c:	xor    DWORD PTR [ebp-0x763c3e5e],ebx
  415452:	push   edx
  415453:	jnp    0x4154aa
  415455:	push   ebp
  415456:	rcr    BYTE PTR [ebp+0x527a0d5],cl
  41545c:	mov    ds:0x1d9f20ec,al
  415461:	and    ch,BYTE PTR [edx]
  415463:	push   edi
  415464:	xor    BYTE PTR [eax+0x6d],bh
  415467:	inc    ebx
  415468:	or     bh,BYTE PTR [esi-0x79]
  41546b:	mov    ebx,0x1f415169
  415470:	shl    DWORD PTR [edi-0x6ee8c1eb],1
  415476:	fsubr  QWORD PTR [ebx-0x26]
  415479:	data16 mov WORD PTR [eax],ds
  41547c:	dec    ebp
  41547d:	mov    al,ds:0xed5fb9f6
  415482:	adc    eax,0x8333e087
  415487:	inc    ecx
  415488:	jl     0x415420
  41548a:	sti    
  41548b:	sub    DWORD PTR [esi-0x7a3a357c],esi
  415491:	mov    cl,0xeb
  415493:	sbb    BYTE PTR [edx],0x2e
  415496:	dec    ebp
  415497:	mov    gs,WORD PTR [esi-0x18]
  41549a:	cmp    eax,0x3be33cc1
  41549f:	xchg   BYTE PTR [ecx+ecx*1+0x6e],al
  4154a3:	jb     0x415499
  4154a5:	sbb    edx,edi
  4154a7:	xchg   esi,eax
  4154a8:	out    0xc5,eax
  4154aa:	aad    0xab
  4154ac:	call   0xa0a:0x9e0954b
  4154b3:	(bad)  [ebp+0x593c2a2a]
  4154b9:	xchg   ebx,eax
  4154ba:	sub    al,0x99
  4154bc:	mov    ?,WORD PTR [edx]
  4154be:	or     BYTE PTR [ebp-0x6a9a2f26],al
  4154c4:	sub    BYTE PTR [ecx-0x4c1b3410],0xcd
  4154cb:	sub    BYTE PTR [edi],ch
  4154cd:	push   ss
  4154ce:	gs dec edi
  4154d0:	cli    
  4154d1:	pop    edi
  4154d2:	cmp    al,0xe0
  4154d4:	push   ebx
  4154d5:	mov    es:0xec0e0429,al
  4154db:	popa   
  4154dc:	push   esi
  4154dd:	push   cs
  4154de:	dec    esp
  4154df:	ret    0x8c59
  4154e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154e3:	sub    esi,DWORD PTR [edi+ebx*8]
  4154e6:	ins    DWORD PTR es:[edi],dx
  4154e7:	add    al,0x44
  4154e9:	cmp    eax,0xb8892aa2
  4154ee:	scas   eax,DWORD PTR es:[edi]
  4154ef:	dec    edi
  4154f0:	ret    0x337e
  4154f3:	(bad)  
  4154f4:	sub    eax,eax
  4154f6:	xor    edx,edx
  4154f8:	daa    
  4154f9:	fsub   st(4),st
  4154fb:	iret   
  4154fc:	add    BYTE PTR [edx+edx*2-0x7d0ddc10],0x0
  415504:	jae    0x415552
  415506:	inc    eax
  415507:	sbb    bh,BYTE PTR [eax]
  415509:	cli    
  41550a:	lock xor edx,esi
  41550d:	xchg   edi,eax
  41550e:	sbb    BYTE PTR [edx+0x60fcfc2e],bl
  415514:	mov    bl,0x48
  415516:	(bad)  
  415517:	mov    ah,0x2e
  415519:	push   esi
  41551a:	cmc    
  41551b:	xchg   esi,eax
  41551c:	je     0x415598
  41551e:	js     0x4154f9
  415520:	lods   eax,DWORD PTR ds:[esi]
  415521:	push   ebx
  415522:	xchg   ebx,eax
  415523:	or     al,BYTE PTR [esi-0x6a]
  415526:	cmp    DWORD PTR [edi],0x71
  415529:	or     eax,0xae5a9076
  41552e:	(bad)  
  41552f:	dec    ecx
  415530:	nop
  415531:	mov    esi,0x7751fab3
  415536:	mov    al,ds:0xb7a30750
  41553b:	pop    esp
  41553c:	loopne 0x4154da
  41553e:	sub    ch,BYTE PTR [esi-0x1690ea7a]
  415544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415545:	loopne 0x415512
  415547:	nop
  415548:	add    ecx,edx
  41554a:	arpl   cx,dx
  41554c:	retf   0x5356
  41554f:	clc    
  415550:	adc    BYTE PTR [edx+0x1f5b8fe0],dl
  415556:	aaa    
  415557:	mov    ecx,0x8b3e2087
  41555c:	(bad)  
  41555d:	fistp  DWORD PTR [ecx+0x77fe68bb]
  415563:	hlt    
  415564:	add    bl,BYTE PTR [esi+0x2c]
  415567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415568:	add    bl,BYTE PTR [ebx+0x14187b42]
  41556e:	data16 loopne 0x415501
  415571:	retf   0x1b70
  415574:	sbb    ebx,ebp
  415576:	imul   ecx,edi,0x864af028
  41557c:	outs   dx,BYTE PTR ds:[esi]
  41557d:	test   BYTE PTR [eax-0x34],ch
  415580:	mov    eax,0xe8917553
  415585:	xchg   edx,eax
  415586:	cli    
  415587:	inc    edx
  415588:	js     0x4155b1
  41558a:	and    eax,edi
  41558c:	mov    al,0x5a
  41558e:	inc    ebp
  41558f:	cmp    cl,0x55
  415592:	in     eax,dx
  415593:	dec    ecx
  415594:	adc    DWORD PTR [eax],edx
  415596:	mov    esp,DWORD PTR [ebx]
  415598:	pop    esi
  415599:	mov    al,bl
  41559b:	push   0x419518d6
  4155a0:	(bad)  
  4155a1:	mov    ebp,0x189a2877
  4155a6:	outs   dx,DWORD PTR ds:[esi]
  4155a7:	mov    ?,WORD PTR [esi-0x20b48e68]
  4155ad:	inc    edi
  4155ae:	ja     0x41558b
  4155b0:	mov    edx,0x2b94ef4
  4155b5:	add    DWORD PTR [eax+0xb273bf1],edx
  4155bb:	cwde   
  4155bc:	sub    DWORD PTR [ecx-0x50633ddc],eax
  4155c2:	add    eax,0x8a5bdf3e
  4155c7:	add    ah,BYTE PTR [esi]
  4155c9:	idiv   DWORD PTR [ecx+0x7b215652]
  4155cf:	ins    BYTE PTR es:[edi],dx
  4155d0:	push   cs
  4155d1:	ds pop edx
  4155d3:	cmp    esp,DWORD PTR [ecx*4-0x129cd1f3]
  4155da:	xchg   ebx,eax
  4155db:	cmp    DWORD PTR [esi+0x701404dc],0xebe99c0f
  4155e5:	or     esp,ecx
  4155e7:	imul   eax,DWORD PTR [edi],0x48
  4155ea:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155ec:	sar    BYTE PTR [ecx],1
  4155ee:	ret    0x48b9
  4155f1:	push   cs
  4155f2:	adc    edx,DWORD PTR [ebx+eax*1-0x7b]
  4155f6:	inc    ebp
  4155f7:	adc    bh,BYTE PTR [ebx+0x5d3ec766]
  4155fd:	test   eax,0xc57f68da
  415602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415603:	sub    bh,dh
  415605:	push   ebx
  415606:	ja     0x4155e8
  415608:	mov    fs,WORD PTR [edx+0x34cb2818]
  41560e:	stc    
  41560f:	inc    ebx
  415610:	data16 std 
  415612:	ret    0x5baf
  415615:	inc    edx
  415616:	imul   ecx,DWORD PTR [ebx+eax*1],0xffc93d7e
  41561d:	imul   edx,DWORD PTR ds:0xa6357969,0x74
  415624:	jnp    0x41568c
  415626:	mov    ebx,DWORD PTR ss:[ecx]
  415629:	sub    bl,BYTE PTR [edx]
  41562b:	adc    al,0x96
  41562d:	xchg   edx,eax
  41562e:	ins    BYTE PTR es:[edi],dx
  41562f:	(bad)  
  415630:	in     eax,0x49
  415632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415633:	mov    edi,0xdd4ae886
  415638:	xchg   DWORD PTR [edx+ebx*8+0x16],edx
  41563c:	(bad)  
  41563d:	mov    dl,0x51
  41563f:	es stos BYTE PTR es:[edi],al
  415641:	inc    ecx
  415642:	sub    DWORD PTR [edi],ebx
  415644:	cli    
  415645:	jbe    0x4155da
  415647:	jno    0x415660
  415649:	dec    esi
  41564a:	sbb    BYTE PTR [esi-0x771ba2e5],bl
  415650:	jnp    0x415685
  415652:	jnp    0x415624
  415654:	aam    0x24
  415656:	bound  esp,QWORD PTR [esi+0x3741588]
  41565c:	and    DWORD PTR [ecx-0x3],esp
  41565f:	jmp    0x41568d
  415661:	cmpxchg8b QWORD PTR [edi]
  415664:	push   edx
  415665:	mov    al,ds:0x2c500f4e
  41566a:	(bad)  
  41566b:	inc    eax
  41566c:	sbb    eax,0x771bbbe7
  415671:	adc    dh,BYTE PTR [edi]
  415673:	lods   al,BYTE PTR ds:[esi]
  415674:	xchg   ebp,eax
  415675:	loope  0x4156b0
  415677:	xlat   BYTE PTR ds:[ebx]
  415678:	outs   dx,DWORD PTR ds:[esi]
  415679:	push   esp
  41567a:	sub    al,0xd5
  41567c:	lea    edx,[eax+eax*2]
  41567f:	sub    eax,eax
  415681:	(bad)  
  415682:	daa    
  415683:	loopne 0x4156a5
  415685:	pop    ss
  415686:	push   eax
  415687:	js     0x415622
  415689:	adc    bl,ah
  41568b:	aas    
  41568c:	push   0xffffff94
  41568e:	pop    esi
  41568f:	sbb    bh,BYTE PTR [ebx+0x12]
  415692:	ins    BYTE PTR es:[edi],dx
  415693:	sbb    ah,BYTE PTR [edx-0x69]
  415696:	std    
  415697:	add    DWORD PTR [ebp+0x2a],edx
  41569a:	enter  0x19db,0xf7
  41569e:	mov    eax,0xab9acace
  4156a3:	dec    edx
  4156a4:	push   0x6add9449
  4156a9:	push   edi
  4156aa:	cmp    DWORD PTR [edi+0x13],edx
  4156ad:	add    al,0x2d
  4156af:	mov    ds:0x68a8531f,al
  4156b4:	out    dx,al
  4156b5:	daa    
  4156b6:	dec    edi
  4156b7:	and    BYTE PTR ds:0xcb0e9e1e,bl
  4156bd:	call   0x296b:0xab9b6f4c
  4156c4:	test   eax,0x4314b1cc
  4156c9:	xchg   esp,eax
  4156ca:	imul   DWORD PTR [esi+0x3243580c]
  4156d0:	push   edi
  4156d1:	cli    
  4156d2:	stos   BYTE PTR es:[edi],al
  4156d3:	sbb    eax,0x9a3a83f4
  4156d8:	cmp    ebx,DWORD PTR [ecx]
  4156da:	cs ja  0x4156fe
  4156dd:	mov    eax,0x3afbccbc
  4156e2:	cld    
  4156e3:	fstp   QWORD PTR [ebp+edi*2+0x51]
  4156e7:	shl    DWORD PTR [ebx+0x7d],0xdb
  4156eb:	fiadd  WORD PTR [ecx+0x1a]
  4156ee:	ins    BYTE PTR es:[edi],dx
  4156ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156f0:	sahf   
  4156f1:	aaa    
  4156f2:	ffreep st(0)
  4156f4:	mov    dh,0x19
  4156f6:	lods   eax,DWORD PTR ds:[esi]
  4156f7:	(bad)  
  4156f9:	or     bl,BYTE PTR [edx-0x22010781]
  4156ff:	repz icebp 
  415701:	mov    edx,0xd5aa2bf8
  415706:	fs enter 0x4164,0x90
  41570b:	jle    0x415706
  41570d:	hlt    
  41570e:	dec    esi
  41570f:	imul   eax,edx,0x1f9b70f4
  415715:	mov    DWORD PTR [ecx+0x43],ebx
  415718:	mov    esp,DWORD PTR [ebx]
  41571a:	pop    es
  41571b:	push   esi
  41571c:	and    al,0x1
  41571e:	pop    edi
  41571f:	xor    eax,DWORD PTR [ecx+0xc]
  415722:	mov    ebx,0xdcd56740
  415727:	cmp    eax,0x7e08131
  41572c:	inc    ecx
  41572d:	push   esp
  41572e:	and    BYTE PTR [eax+0x3d0b283a],dh
  415734:	xor    BYTE PTR [edi-0x17],0xa7
  415738:	aam    0xd9
  41573a:	dec    ebp
  41573b:	adc    BYTE PTR [edi+0x320daab8],dh
  415741:	in     al,dx
  415742:	xor    DWORD PTR [edi],ecx
  415744:	fiadd  WORD PTR [ecx+0x11]
  415747:	xor    bl,bh
  415749:	adc    eax,0x2819da01
  41574e:	sbb    DWORD PTR [edi-0x2e],eax
  415751:	fisttp WORD PTR [edx+edx*2+0x4a]
  415755:	sub    esi,DWORD PTR [edi]
  415757:	adc    al,0xd7
  415759:	adc    dh,BYTE PTR [eax]
  41575b:	cdq    
  41575c:	leave  
  41575d:	or     BYTE PTR [edx],0xc7
  415760:	pop    edx
  415761:	test   eax,0xde146378
  415766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415767:	xchg   edi,eax
  415768:	xor    ecx,esi
  41576a:	mov    ebp,fs
  41576c:	addr16 xchg edi,eax
  41576e:	mov    ebx,0x6f734236
  415773:	stos   BYTE PTR es:[edi],al
  415774:	adc    ecx,DWORD PTR [esp+ebp*1+0x54]
  415778:	nop
  415779:	push   ds
  41577a:	shl    BYTE PTR [edi-0x1c5536ce],1
  415780:	(bad)  
  415781:	dec    edi
  415782:	jl     0x41577e
  415784:	jge    0x4157b2
  415786:	xor    dl,BYTE PTR [ebp+0x25]
  415789:	clc    
  41578a:	jle    0x41572a
  41578c:	jp     0x4157eb
  41578e:	dec    eax
  41578f:	(bad)  
  415790:	fwait
  415791:	pop    ebp
  415792:	mov    ecx,0x9f5db99b
  415797:	mov    edi,DWORD PTR [ecx]
  415799:	sub    edi,DWORD PTR [ebp+0x13bb5ecf]
  41579f:	push   ebx
  4157a0:	jecxz  0x415764
  4157a2:	or     edx,DWORD PTR [ebp+0x770712ea]
  4157a8:	ret    
  4157a9:	(bad)  
  4157aa:	jecxz  0x4157d9
  4157ac:	add    esi,DWORD PTR [ebp+0x4fcbedb2]
  4157b2:	mov    eax,0x2991ebe5
  4157b7:	xchg   ebx,eax
  4157b8:	ins    DWORD PTR es:[edi],dx
  4157b9:	pop    es
  4157ba:	xor    eax,0x2267a557
  4157bf:	aam    0x7b
  4157c1:	sub    BYTE PTR [ecx-0x6b58fc9],ah
  4157c7:	ss ins DWORD PTR es:[edi],dx
  4157c9:	xchg   ebp,eax
  4157ca:	pop    esp
  4157cb:	xchg   BYTE PTR [edx+0x2c],dl
  4157ce:	lods   eax,DWORD PTR ds:[esi]
  4157cf:	retf   
  4157d0:	mov    edx,0x1b4406a7
  4157d5:	or     ax,0x394b
  4157d9:	inc    edi
  4157da:	mov    ecx,0xf62259d9
  4157df:	jno    0x415767
  4157e1:	inc    esi
  4157e2:	popa   
  4157e3:	fstp   QWORD PTR [eax*4-0x6d2c958d]
  4157ea:	add    ecx,ebp
  4157ec:	pop    edx
  4157ed:	dec    esi
  4157ee:	jb     0x415808
  4157f0:	mov    eax,0xb8c9c49b
  4157f5:	retf   
  4157f6:	and    ebp,DWORD PTR [eax+edi*4-0x430183bb]
  4157fd:	jecxz  0x415793
  4157ff:	pop    ecx
  415800:	mov    edx,0x6a6a9850
  415805:	outs   dx,DWORD PTR ds:[esi]
  415806:	jns    0x41582e
  415808:	pushf  
  415809:	jge    0x41581e
  41580b:	inc    esp
  41580c:	sbb    eax,ebp
  41580e:	xchg   ebx,eax
  41580f:	(bad)  
  415810:	les    edx,FWORD PTR [ebx-0x60]
  415813:	mov    ds:0xb27f9771,eax
  415818:	mov    ds:0xf16c844,eax
  41581d:	addr16 mov edi,0xd15efe7f
  415823:	push   ss
  415824:	pop    eax
  415825:	dec    esi
  415826:	pop    ebx
  415827:	and    cl,BYTE PTR [edi]
  415829:	sub    esi,DWORD PTR [esi+0x2b]
  41582c:	mov    edx,0xa913c069
  415831:	mov    edx,esp
  415833:	sar    DWORD PTR [ebx+0x71],1
  415836:	loope  0x415801
  415838:	lock sar DWORD PTR [eax+0x1f],cl
  41583c:	jbe    0x4158ad
  41583e:	mov    ebp,ebx
  415840:	xor    DWORD PTR [edx-0x16],ebp
  415843:	jmp    0xda061c3a
  415848:	dec    ecx
  415849:	add    bh,dl
  41584b:	inc    esp
  41584c:	pop    edx
  41584d:	repnz loop 0x415825
  415850:	pop    es
  415851:	and    BYTE PTR [esp+edi*1+0x6b],bh
  415855:	(bad)  
  415857:	mov    ebx,0xf1cbcbd
  41585c:	aam    0xdb
  41585e:	sahf   
  41585f:	mov    ds:0x598b459b,al
  415864:	fisub  DWORD PTR [eax+0x35018bd1]
  41586a:	dec    edi
  41586b:	iret   
  41586c:	mov    dh,0x19
  41586e:	fdivr  QWORD PTR [edx-0x4a4e2b99]
  415874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415875:	push   ecx
  415876:	addr16 sbb al,0x9b
  415879:	push   ds
  41587a:	cld    
  41587b:	cmp    ebx,ebp
  41587d:	xchg   esp,eax
  41587e:	push   ds
  41587f:	test   DWORD PTR [ecx-0x16],edi
  415882:	test   BYTE PTR [ebx],0x9d
  415885:	ret    
  415886:	jns    0x4158ad
  415888:	dec    edx
  415889:	add    eax,0xe9fbebfe
  41588e:	dec    BYTE PTR [ebx+ebp*8]
  415891:	dec    edx
  415892:	mov    ch,0x54
  415894:	out    dx,al
  415895:	movnti DWORD PTR [ecx],edx
  415898:	push   edi
  415899:	fmul   st(1),st
  41589b:	mov    dl,0xc1
  41589d:	xor    eax,0x5f9ba734
  4158a2:	in     eax,0x36
  4158a4:	test   eax,0x9aa0e428
  4158a9:	(bad)  
  4158ab:	fst    DWORD PTR [ecx+0x5f]
  4158ae:	(bad)  
  4158af:	call   0xc217e558
  4158b4:	shr    dl,cl
  4158b6:	imul   esi,DWORD PTR [eax+eiz*8+0x7ea4252d],0xfffffffd
  4158be:	fisubr WORD PTR [ecx]
  4158c0:	adc    bh,BYTE PTR [esi+0x35eedcec]
  4158c6:	sbb    DWORD PTR [edi],ecx
  4158c8:	mov    al,ds:0xb10f7d93
  4158cd:	fisubr DWORD PTR [ecx]
  4158cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158d0:	push   ds
  4158d1:	and    ecx,ecx
  4158d3:	xlat   BYTE PTR ds:[ebx]
  4158d4:	popf   
  4158d5:	ds pop edx
  4158d7:	or     dh,BYTE PTR [ebp+0x3f]
  4158da:	jmp    0xd508a1fb
  4158df:	inc    eax
  4158e0:	test   DWORD PTR [edi-0x32f6c551],edx
  4158e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158e7:	cdq    
  4158e8:	imul   ebx,DWORD PTR [edx+0x1013625d],0x63
  4158ef:	pop    es
  4158f0:	jb     0x4158e3
  4158f2:	cmp    dh,0xa8
  4158f5:	inc    ebp
  4158f6:	loop   0x415973
  4158f8:	adc    bl,BYTE PTR [ebx+edi*8]
  4158fb:	jae    0x4158f4
  4158fd:	(bad)  
  4158fe:	iret   
  4158ff:	enter  0x15a0,0x7
  415903:	daa    
  415904:	push   ecx
  415905:	inc    edi
  415906:	ror    dh,cl
  415908:	mov    edx,0xa539e676
  41590d:	rcr    DWORD PTR [esi-0x16],0x44
  415911:	(bad)  
  415912:	fistp  DWORD PTR [edx]
  415914:	jae    0x4158de
  415916:	xchg   edi,eax
  415917:	push   ecx
  415918:	add    eax,0x5913a7d6
  41591d:	mov    ah,0x98
  41591f:	mov    ebx,DWORD PTR [edi+0xe87c4b8]
  415925:	push   0xe6ec35f4
  41592a:	imul   BYTE PTR [eax-0x696229d8]
  415930:	and    eax,0x2c5d9239
  415935:	push   edx
  415936:	ret    
  415937:	mov    edx,0x4216d8dc
  41593c:	aaa    
  41593d:	sbb    DWORD PTR [ebx-0x43],esi
  415940:	xor    ebx,edi
  415942:	inc    eax
  415943:	mov    ds:0x77df2a9d,al
  415948:	sub    ecx,DWORD PTR [edi+0x86e415b]
  41594e:	(bad)  [ebx+edx*4]
  415951:	pop    ebx
  415952:	sbb    cl,BYTE PTR [edx]
  415954:	(bad)  
  415955:	xchg   esp,eax
  415956:	mov    ecx,0xcd8d501f
  41595b:	nop
  41595c:	in     eax,dx
  41595d:	in     eax,0x20
  41595f:	mov    al,ds:0x2d397852
  415964:	push   es
  415965:	push   es
  415966:	xor    DWORD PTR [eax+0x62],0xd02f199e
  41596d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41596e:	sahf   
  41596f:	and    BYTE PTR [ebp+0x4c7f0cf2],0xc3
  415976:	lock add ch,al
  415979:	repz into 
  41597b:	sub    al,0x10
  41597d:	(bad)  
  41597e:	dec    edx
  41597f:	ror    esp,1
  415981:	test   DWORD PTR [edi],0xd7b19bed
  415987:	sbb    al,0x42
  415989:	(bad)  
  41598a:	in     eax,dx
  41598b:	pop    ebp
  41598c:	inc    edx
  41598d:	mov    WORD PTR ds:0x3da982b0,fs
  415993:	retf   
  415994:	push   ss
  415995:	aam    0xde
  415997:	sub    al,0x8a
  415999:	fmul   QWORD PTR [eax-0x1d7adefe]
  41599f:	daa    
  4159a0:	or     al,0x24
  4159a2:	aaa    
  4159a3:	push   ss
  4159a4:	icebp  
  4159a5:	out    dx,al
  4159a6:	sbb    eax,DWORD PTR [eax-0x18]
  4159a9:	int    0x69
  4159ab:	fmul   st(6),st
  4159ad:	jg     0x415a12
  4159af:	pop    es
  4159b0:	shr    DWORD PTR [edx-0x15],1
  4159b3:	fwait
  4159b4:	jl     0x415984
  4159b6:	xlat   BYTE PTR ds:[ebx]
  4159b7:	mov    bh,0x77
  4159b9:	add    BYTE PTR [ebx],ah
  4159bb:	jecxz  0x415987
  4159bd:	aas    
  4159be:	retf   0x778f
  4159c1:	hlt    
  4159c2:	mov    ah,0xec
  4159c4:	jmp    0x4159d5
  4159c6:	cmc    
  4159c7:	adc    ebp,DWORD PTR [esi-0x2a520f34]
  4159cd:	jecxz  0x4159cb
  4159cf:	push   edx
  4159d0:	pop    es
  4159d1:	sti    
  4159d2:	jo     0x415988
  4159d4:	mov    BYTE PTR ds:0xa231d1c4,bl
  4159da:	in     eax,dx
  4159db:	popa   
  4159dc:	xchg   ebx,eax
  4159dd:	xor    eax,edi
  4159df:	(bad)  
  4159e0:	inc    esp
  4159e1:	test   DWORD PTR [ecx+0x3b5efb2b],0xeedaddc9
  4159eb:	push   cs
  4159ec:	sbb    al,0x44
  4159ee:	xor    al,0xb6
  4159f0:	mov    ebp,DWORD PTR [eax]
  4159f2:	mov    ecx,0x1c233ad7
  4159f7:	and    ecx,DWORD PTR ds:0xc594c7b1
  4159fd:	push   0xfffffff8
  4159ff:	sbb    DWORD PTR [esi-0x19],edi
  415a02:	and    eax,0x94d20c2e
  415a07:	cmp    eax,0x997b3727
  415a0c:	mov    DWORD PTR [edx],ebx
  415a0e:	mov    ah,0xd2
  415a10:	mov    eax,DWORD PTR ds:0x71e84966
  415a16:	iret   
  415a17:	xchg   edx,eax
  415a18:	sar    BYTE PTR es:[eax],cl
  415a1b:	stos   DWORD PTR es:[edi],eax
  415a1c:	pushf  
  415a1d:	pop    es
  415a1e:	or     DWORD PTR [edi],edi
  415a20:	push   ss
  415a21:	jne    0x4159a3
  415a23:	retf   
  415a24:	lods   al,BYTE PTR ds:[esi]
  415a25:	lock mov bl,bh
  415a28:	dec    esp
  415a29:	mov    al,0x7a
  415a2b:	xor    DWORD PTR [edi-0xfb92558],esp
  415a31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a32:	aam    0x58
  415a34:	and    al,0xed
  415a36:	mov    ah,0x2
  415a38:	outs   dx,BYTE PTR ds:[esi]
  415a39:	adc    eax,0x75d7551f
  415a3e:	(bad)  
  415a3f:	or     eax,0xaeba1860
  415a44:	mul    DWORD PTR [ebp+0x574c3e3]
  415a4a:	out    dx,al
  415a4b:	xchg   ecx,eax
  415a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a4d:	mov    edx,0x23af8144
  415a52:	cmp    DWORD PTR ds:0xe8478691,ebp
  415a58:	or     eax,0xe34977b1
  415a5d:	pop    esi
  415a5e:	adc    eax,0x33e7635e
  415a63:	shl    DWORD PTR ds:0xcc4650b2,cl
  415a69:	inc    eax
  415a6a:	mov    cl,0x73
  415a6c:	pop    edi
  415a6d:	loope  0x415a99
  415a6f:	xchg   edi,eax
  415a70:	xchg   esi,eax
  415a71:	mov    ebp,0x5d22914
  415a76:	dec    edx
  415a77:	shl    DWORD PTR [ebx-0x442c3861],1
  415a7d:	jg     0x415a84
  415a7f:	js     0xe805331e
  415a85:	into   
  415a86:	mov    esp,0xa8880e2a
  415a8b:	add    ch,ch
  415a8d:	cs aas 
  415a8f:	mov    al,0x79
  415a91:	jnp    0x415a6c
  415a93:	dec    eax
  415a94:	xlat   BYTE PTR ds:[ebx]
  415a95:	je     0x415ac6
  415a97:	cmp    esp,DWORD PTR [esi]
  415a99:	call   0xa325f11b
  415a9e:	(bad)  
  415a9f:	jbe    0x415a33
  415aa1:	sbb    DWORD PTR [eax+0x2734d5c6],0x53
  415aa8:	or     edx,esi
  415aaa:	je     0x415a7d
  415aac:	leave  
  415aad:	dec    esp
  415aae:	sbb    al,0x9a
  415ab0:	xor    DWORD PTR [esi+0x4301c0d],0x5
  415ab7:	jmp    0x3caeed82
  415abc:	mov    eax,0xc26992e
  415ac1:	add    eax,0x93351848
  415ac6:	in     eax,dx
  415ac7:	mov    eax,ds:0xf9b412ff
  415acc:	adc    ecx,DWORD PTR [eax-0x13e63f7b]
  415ad2:	inc    esi
  415ad3:	xchg   BYTE PTR [edi+0x2c8b3b46],ch
  415ad9:	(bad)  
  415ada:	sbb    dl,cl
  415adc:	dec    eax
  415add:	cmp    dh,ah
  415adf:	pop    edi
  415ae0:	jp     0x415b1e
  415ae2:	push   es
  415ae3:	push   0x292bd280
  415ae8:	call   0xaf3a4745
  415aed:	(bad)  
  415aee:	jecxz  0x415ae8
  415af0:	sbb    eax,0x6d7adf44
  415af5:	out    0x3c,al
  415af7:	sub    al,0x16
  415af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415afa:	dec    edx
  415afb:	push   ecx
  415afc:	test   DWORD PTR [eax+edx*2-0x61],ecx
  415b00:	pusha  
  415b01:	or     eax,0x35601562
  415b06:	shl    DWORD PTR [ebx],1
  415b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b09:	bound  eax,QWORD PTR [ebx+0x5]
  415b0c:	sub    dh,BYTE PTR [edx+0x41]
  415b0f:	sti    
  415b10:	xor    eax,0x4eff5d0
  415b15:	out    dx,eax
  415b16:	xchg   ebx,eax
  415b17:	mov    esi,0x6c00f14c
  415b1c:	imul   esi,DWORD PTR [edi],0x4
  415b1f:	popa   
  415b20:	jmp    0x12d19883
  415b25:	out    dx,al
  415b26:	out    dx,eax
  415b27:	int    0x8e
  415b29:	and    DWORD PTR [ebx*8+0xbd9a6c8],0xffffffa8
  415b31:	loop   0x415b0c
  415b33:	aas    
  415b34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b35:	sub    DWORD PTR [ebx+0x18],esp
  415b38:	mov    WORD PTR [ebp-0x64b92e08],?
  415b3e:	popa   
  415b3f:	outs   dx,BYTE PTR ds:[esi]
  415b40:	ins    DWORD PTR es:[edi],dx
  415b41:	mov    DWORD PTR [ebp+0x63bffa86],edx
  415b47:	sbb    DWORD PTR [edi],ebp
  415b49:	lods   eax,DWORD PTR ds:[esi]
  415b4a:	scas   al,BYTE PTR es:[edi]
  415b4b:	out    dx,al
  415b4c:	jge    0x415ad4
  415b4e:	loope  0x415b79
  415b50:	xchg   ecx,eax
  415b51:	mov    al,ds:0xcd6493c0
  415b56:	gs retf 
  415b58:	lahf   
  415b59:	mov    eax,ds:0x86242890
  415b5e:	fdivr  DWORD PTR [esi-0xc80e9e]
  415b64:	adc    ecx,DWORD PTR [ebp-0x3b]
  415b67:	sbb    DWORD PTR [ebp+0x6b],0xc3cd4df
  415b6e:	pop    esi
  415b6f:	fsub   QWORD PTR [ebx+0x7e]
  415b72:	or     BYTE PTR ss:[edx-0x3a660d24],bl
  415b79:	or     dl,0xfe
  415b7c:	mov    cs,WORD PTR [eax]
  415b7e:	push   ss
  415b7f:	test   eax,0xb285d646
  415b84:	xchg   edi,eax
  415b85:	loopne 0x415ba3
  415b87:	aad    0x3b
  415b89:	test   DWORD PTR [eax+0x17c1448d],esp
  415b8f:	add    al,0x5d
  415b91:	lahf   
  415b92:	adc    BYTE PTR [ebp+0xa8c9180],0x5e
  415b99:	sbb    edi,esp
  415b9b:	mov    al,0x8b
  415b9d:	pop    DWORD PTR [ebp+0x32c76aac]
  415ba3:	mov    eax,0xcb51c2f5
  415ba8:	dec    esi
  415ba9:	push   ebx
  415baa:	jp     0x415c1d
  415bac:	inc    esi
  415bad:	out    dx,eax
  415bae:	cdq    
  415baf:	fwait
  415bb0:	or     BYTE PTR [ecx+0x1af1792],ch
  415bb6:	jb     0x415b83
  415bb8:	fidivr DWORD PTR [eax+0xb13f18e]
  415bbe:	push   eax
  415bbf:	jae    0x415b7a
  415bc1:	pop    esp
  415bc2:	lods   eax,DWORD PTR ds:[esi]
  415bc3:	stos   DWORD PTR es:[edi],eax
  415bc4:	xor    DWORD PTR [ecx],edx
  415bc6:	push   esi
  415bc7:	mov    ds:0x53372f78,eax
  415bcc:	popa   
  415bcd:	sbb    ebp,DWORD PTR [eax]
  415bcf:	sbb    eax,DWORD PTR [ebp-0x674001bf]
  415bd5:	jecxz  0x415bea
  415bd7:	cwde   
  415bd8:	fcmove st,st(4)
  415bda:	lods   eax,DWORD PTR ds:[esi]
  415bdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bdc:	xlat   BYTE PTR ds:[ebx]
  415bdd:	push   ebx
  415bde:	leave  
  415bdf:	dec    ebx
  415be0:	addr16 push ss
  415be2:	jmp    DWORD PTR [eax+0x67]
  415be5:	and    eax,DWORD PTR [edx]
  415be7:	pop    esp
  415be8:	push   eax
  415be9:	stos   BYTE PTR es:[edi],al
  415bea:	sub    DWORD PTR [edx-0x4f670637],eax
  415bf0:	xchg   DWORD PTR [eax],ecx
  415bf2:	dec    esi
  415bf3:	outs   dx,BYTE PTR ds:[esi]
  415bf4:	xchg   BYTE PTR [eax],ch
  415bf6:	fst    DWORD PTR [ebx]
  415bf8:	xchg   ebx,eax
  415bf9:	jb     0x415b7c
  415bfb:	dec    eax
  415bfc:	stc    
  415bfd:	mov    esi,0x86d8c5e9
  415c02:	daa    
  415c03:	das    
  415c04:	pop    ecx
  415c05:	int    0x36
  415c07:	dec    esi
  415c08:	aad    0x20
  415c0a:	pop    ebp
  415c0b:	and    al,0x7f
  415c0d:	mov    ebp,0xa476045f
  415c12:	push   esp
  415c13:	pushf  
  415c14:	cmp    DWORD PTR [eax+0x7c40a196],ebp
  415c1a:	mov    al,0xf9
  415c1c:	xchg   ebp,eax
  415c1d:	aam    0xb9
  415c1f:	in     al,dx
  415c20:	cs mov cs,ebx
  415c23:	xor    al,BYTE PTR [ebx-0x547edb30]
  415c29:	daa    
  415c2a:	(bad)  
  415c2c:	daa    
  415c2d:	or     bl,BYTE PTR [esi]
  415c2f:	adc    eax,0x45022281
  415c34:	mov    ch,0x19
  415c36:	and    dh,BYTE PTR [edi]
  415c38:	out    0xae,al
  415c3a:	and    eax,0xe5263818
  415c3f:	(bad)  
  415c40:	jmp    0xae516e51
  415c45:	mov    BYTE PTR [edi+0x6f],ah
  415c48:	sbb    eax,0x3e854204
  415c4d:	mov    ah,0xd2
  415c4f:	in     al,0x81
  415c51:	mov    ah,0x4f
  415c53:	lods   al,BYTE PTR ds:[esi]
  415c54:	jmp    0xbc8e:0x9c3e7b21
  415c5b:	aaa    
  415c5c:	cld    
  415c5d:	push   edx
  415c5e:	mov    esi,0xcb7f43a1
  415c63:	sar    DWORD PTR [ebp+0x47],1
  415c66:	mov    dl,0x5
  415c68:	push   esi
  415c69:	in     eax,0x66
  415c6b:	or     dl,BYTE PTR [ebx+eiz*8]
  415c6e:	pop    ebx
  415c6f:	loopne 0x415c84
  415c71:	push   ebx
  415c72:	mov    DWORD PTR [ebp+0x10],ebp
  415c75:	add    eax,0xaa97e7cb
  415c7a:	adc    eax,0xf805b9fc
  415c7f:	cwde   
  415c80:	popf   
  415c81:	in     al,0xea
  415c83:	jmp    0x363db770
  415c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c89:	test   eax,edx
  415c8b:	dec    edi
  415c8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c8d:	and    DWORD PTR [eax+esi*2],esp
  415c90:	push   edi
  415c91:	mov    bl,0x6a
  415c93:	inc    eax
  415c94:	mov    ds:0xfc869c82,eax
  415c99:	outs   dx,DWORD PTR ds:[esi]
  415c9a:	xor    esi,0xffffff90
  415c9d:	jge    0x415c7a
  415c9f:	or     eax,edi
  415ca1:	in     al,dx
  415ca2:	test   eax,0xa6e8ed1c
  415ca7:	in     al,0x97
  415ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415caa:	mov    dl,0xa4
  415cac:	sbb    al,0xf9
  415cae:	and    eax,0xdf6cf74f
  415cb3:	cmc    
  415cb4:	mov    edx,0xde1304
  415cb9:	jp     0x415d30
  415cbb:	mov    cl,0xba
  415cbd:	push   0x722aadce
  415cc2:	into   
  415cc3:	addr16 dec edi
  415cc5:	push   ss
  415cc6:	out    0x8a,al
  415cc8:	push   ebp
  415cc9:	push   ds
  415cca:	push   ss
  415ccb:	int    0x4e
  415ccd:	cmp    DWORD PTR [edx],eax
  415ccf:	in     eax,0xd7
  415cd1:	mov    eax,ss:0xc7a44258
  415cd7:	xchg   ebp,eax
  415cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cd9:	scas   al,BYTE PTR es:[edi]
  415cda:	ss das 
  415cdc:	(bad)  
  415cdd:	or     DWORD PTR [edi-0x5d03b434],0xb4e6c8f4
  415ce7:	inc    edx
  415ce8:	dec    edi
  415ce9:	push   es
  415cea:	pusha  
  415ceb:	sbb    dl,BYTE PTR [edx]
  415ced:	lods   eax,DWORD PTR ds:[esi]
  415cee:	in     eax,dx
  415cef:	cwde   
  415cf0:	mov    fs,WORD PTR [edx+0x43]
  415cf3:	in     eax,dx
  415cf4:	and    BYTE PTR [esi+0x14],al
  415cf7:	test   bl,bl
  415cf9:	ss repnz mov dl,0xf5
  415cfd:	add    bh,BYTE PTR [ebp+0x3e462953]
  415d03:	aaa    
  415d04:	sti    
  415d05:	repz addr16 inc edi
  415d08:	mov    edx,0x5fde2b0b
  415d0d:	fisttp DWORD PTR [ebx-0x1270ea93]
  415d13:	cmp    edx,DWORD PTR [edi+0x79]
  415d16:	add    edx,esp
  415d18:	(bad)  
  415d19:	test   eax,0xa5a209b4
  415d1e:	in     al,0x61
  415d20:	push   0x25
  415d22:	push   esi
  415d23:	hlt    
  415d24:	pusha  
  415d25:	imul   eax,DWORD PTR [ecx+0x3153ad3b],0xa88dd580
  415d2f:	xchg   DWORD PTR [eax],edx
  415d31:	outs   dx,DWORD PTR ds:[esi]
  415d32:	(bad)  
  415d34:	jb     0x415da5
  415d36:	mov    al,0xf8
  415d38:	sahf   
  415d39:	jae    0x415d9b
  415d3b:	cli    
  415d3c:	xchg   edi,eax
  415d3d:	and    BYTE PTR [edi-0x6dd21737],bh
  415d43:	loop   0x415d83
  415d45:	jle    0x415db3
  415d47:	inc    ecx
  415d48:	sbb    DWORD PTR [ebx],ebx
  415d4a:	adc    esp,DWORD PTR [ecx+0x5c]
  415d4d:	sbb    dh,BYTE PTR [eax+0x3]
  415d50:	pushf  
  415d51:	shl    BYTE PTR [ecx+0x5cd68744],1
  415d57:	stos   BYTE PTR es:[edi],al
  415d58:	into   
  415d59:	push   cs
  415d5a:	sbb    eax,DWORD PTR [ebx+0x41278a2]
  415d60:	sbb    esi,DWORD PTR [edx]
  415d62:	out    0x8b,al
  415d64:	cli    
  415d65:	push   eax
  415d66:	ret    
  415d67:	adc    DWORD PTR [eax+0x2d],ebp
  415d6a:	int3   
  415d6b:	ret    0x326f
  415d6e:	(bad)  
  415d6f:	out    dx,eax
  415d70:	inc    edx
  415d71:	pop    edi
  415d72:	xchg   esp,eax
  415d73:	retf   
  415d74:	leave  
  415d75:	xor    cl,BYTE PTR ds:0xb3e12ee8
  415d7b:	fscale 
  415d7d:	jnp    0x415d03
  415d7f:	test   al,0x23
  415d81:	repnz (bad) 
  415d83:	xchg   esi,eax
  415d84:	sub    BYTE PTR ds:0x77b08b76,ah
  415d8a:	mov    esi,0x80e9bf1d
  415d8f:	xchg   esp,eax
  415d90:	in     eax,dx
  415d91:	aad    0x28
  415d93:	pushf  
  415d94:	inc    edi
  415d95:	or     edi,DWORD PTR [eax+eiz*8+0x13cc8d35]
  415d9c:	push   eax
  415d9d:	add    DWORD PTR [eax-0x73],0xffffff8b
  415da1:	sub    eax,esi
  415da3:	xchg   ebx,eax
  415da4:	cmp    BYTE PTR [edx+0x17758c34],0x6d
  415dab:	in     eax,dx
  415dac:	gs ins DWORD PTR es:[edi],dx
  415dae:	cmp    ch,BYTE PTR [eax+edi*4+0x684a3baa]
  415db5:	jnp    0x415d6a
  415db7:	cld    
  415db8:	je     0x415daa
  415dba:	and    al,0x4d
  415dbc:	mov    esp,edi
  415dbe:	dec    edi
  415dbf:	mov    ch,0x15
  415dc1:	lea    edi,[ebx+0x56]
  415dc4:	pop    eax
  415dc5:	daa    
  415dc6:	mov    edi,edx
  415dc8:	jno    0x415e41
  415dca:	nop
  415dcb:	out    dx,al
  415dcc:	add    eax,0x2d6b1733
  415dd1:	mov    ah,0xb1
  415dd3:	sbb    ebp,DWORD PTR [edx-0xb]
  415dd6:	adc    eax,0x17d09289
  415ddb:	inc    ebx
  415ddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ddd:	jge    0x415d95
  415ddf:	pushf  
  415de0:	aas    
  415de1:	shl    DWORD PTR [ebx+0x1697f703],cl
  415de7:	fisttp QWORD PTR [ecx-0x138d0947]
  415ded:	jle    0x415dcb
  415def:	inc    ecx
  415df0:	add    bh,dh
  415df2:	adc    esp,esp
  415df4:	ds data16 and bl,dl
  415df8:	(bad)  
  415df9:	(bad)  
  415dfa:	or     al,0x6b
  415dfc:	push   eax
  415dfd:	inc    edx
  415dfe:	fwait
  415dff:	or     ch,BYTE PTR [edx]
  415e01:	xor    ecx,DWORD PTR [edi-0x15]
  415e04:	dec    ecx
  415e05:	stos   BYTE PTR es:[edi],al
  415e06:	aam    0x56
  415e08:	lods   al,BYTE PTR ds:[esi]
  415e09:	jge    0x415e5d
  415e0b:	push   0x11
  415e0d:	jmp    0xc3cf9ccb
  415e12:	xchg   DWORD PTR [ebx+0x439984df],edi
  415e18:	shl    BYTE PTR [esi-0x2485c37e],cl
  415e1e:	mov    ecx,0xf3416d5c
  415e23:	adc    DWORD PTR [ecx-0x30eddd1],ebp
  415e29:	sbb    bl,BYTE PTR [eax+ebx*2]
  415e2c:	xchg   ebp,eax
  415e2d:	shl    BYTE PTR [ebx+eax*4-0x710f9108],cl
  415e34:	push   0x70ee690e
  415e39:	aas    
  415e3a:	mov    eax,ds:0xc035631c
  415e3f:	loope  0x415e75
  415e41:	clc    
  415e42:	(bad)  
  415e43:	fild   WORD PTR [edx+0x5ffd61db]
  415e49:	fisttp WORD PTR gs:[ebx+0x5166bb82]
  415e50:	daa    
  415e51:	repnz fisttp WORD PTR [esi-0x3ee1a8ac]
  415e58:	popa   
  415e59:	pop    es
  415e5a:	loope  0x415dfc
  415e5c:	rol    edi,cl
  415e5e:	xchg   edx,eax
  415e60:	pop    esp
  415e61:	mov    dl,0x2f
  415e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e64:	sahf   
  415e65:	ret    0x6dac
  415e68:	sub    eax,0x10f84253
  415e6d:	dec    ecx
  415e6e:	sahf   
  415e6f:	dec    ebx
  415e70:	test   DWORD PTR [edi+0x1187530d],edi
  415e76:	push   esi
  415e77:	xor    BYTE PTR [edi+edi*2-0xc81b13a],dh
  415e7e:	in     al,0xe2
  415e80:	cli    
  415e81:	or     al,cl
  415e83:	add    ebx,eax
  415e85:	dec    ebp
  415e86:	inc    esp
  415e87:	xor    BYTE PTR [esi-0x48356f04],0x2c
  415e8e:	ret    
  415e8f:	fsubr  st(2),st
  415e91:	wrmsr  
  415e93:	push   ss
  415e94:	fild   QWORD PTR [ebx]
  415e96:	add    eax,0x9a9dddcd
  415e9b:	jle    0x415e8b
  415e9d:	mov    edi,0xf5f12534
  415ea2:	xor    esi,DWORD PTR [eax+0x1b740cec]
  415ea8:	xor    ch,bl
  415eaa:	lods   al,BYTE PTR ds:[esi]
  415eab:	sbb    BYTE PTR [ecx+ebx*2-0x3a120ef9],ch
  415eb2:	mov    edi,0x919e86f8
  415eb7:	push   0xffffffb3
  415eb9:	inc    eax
  415eba:	jns    0x415f1a
  415ebc:	addr16 es (bad) 
  415ebf:	int    0x8b
  415ec1:	mov    eax,0x6f78b3f4
  415ec6:	jne    0x415f37
  415ec8:	sbb    bl,BYTE PTR [eax+0x2d44f4cc]
  415ece:	aaa    
  415ecf:	iret   
  415ed0:	call   0x639e862e
  415ed5:	shl    ebx,0x87
  415ed8:	ffree  st(7)
  415eda:	add    DWORD PTR [ebp-0x77da885a],0x3
  415ee1:	fisubr DWORD PTR [ebp+edi*2+0x40b0940]
  415ee8:	sbb    BYTE PTR [eax+ebx*1+0x269dc045],cl
  415eef:	outs   dx,DWORD PTR ds:[esi]
  415ef0:	push   es
  415ef1:	inc    edx
  415ef2:	cdq    
  415ef3:	in     al,0xe5
  415ef5:	inc    ebx
  415ef6:	jmp    0xcfd:0x48132911
  415efd:	cs stc 
  415eff:	adc    DWORD PTR [ecx-0x56f187be],esp
  415f05:	jno    0x415f43
  415f07:	es ins BYTE PTR es:[edi],dx
  415f09:	pop    esp
  415f0a:	sbb    al,0x60
  415f0c:	dec    edx
  415f0d:	call   0xc7c06cf3
  415f12:	dec    eax
  415f13:	out    dx,al
  415f14:	or     eax,0x1dfe9d7e
  415f19:	add    al,0xac
  415f1b:	lods   eax,DWORD PTR ds:[esi]
  415f1c:	inc    eax
  415f1d:	jl     0x415f66
  415f1f:	pop    ebp
  415f20:	pop    edi
  415f21:	out    dx,al
  415f22:	mov    esi,0xd9c43be7
  415f27:	jle    0x415fa6
  415f29:	cmp    eax,0x117dd9e2
  415f2e:	ss xor edi,eax
  415f31:	into   
  415f32:	mov    cl,0xb0
  415f34:	(bad)  [ebp+0x37]
  415f37:	add    ebp,esp
  415f39:	mov    ds:0xe77e51f3,al
  415f3e:	or     BYTE PTR [edx+0x1c990f57],dl
  415f44:	mov    ebp,0xdba41f15
  415f49:	scas   al,BYTE PTR es:[edi]
  415f4a:	scas   al,BYTE PTR es:[edi]
  415f4b:	mov    ecx,0x45d9e9b
  415f50:	pop    ebx
  415f51:	add    BYTE PTR [eax-0x485b398a],ah
  415f57:	call   0xba5:0xde916923
  415f5e:	out    0x37,eax
  415f60:	data16 aam 0xca
  415f63:	jnp    0x415f5d
  415f65:	mov    esi,0x3c12b6d2
  415f6a:	dec    esi
  415f6b:	rcr    BYTE PTR [esi-0x3d5c8245],cl
  415f71:	push   es
  415f72:	add    DWORD PTR [edx+0x420ab39f],0x20316b5a
  415f7c:	cmp    ch,BYTE PTR [esi+0x24]
  415f7f:	gs dec edi
  415f81:	adc    eax,0xa4a758ee
  415f86:	into   
  415f87:	push   0xa300a544
  415f8c:	cmp    cl,ah
  415f8e:	inc    eax
  415f8f:	aas    
  415f90:	add    edx,DWORD PTR [esi-0x47]
  415f93:	hlt    
  415f94:	lock js 0x415fce
  415f97:	(bad)  
  415f98:	and    DWORD PTR [esi-0x3e6d052f],ecx
  415f9e:	push   ebx
  415f9f:	sahf   
  415fa0:	and    al,0x9f
  415fa2:	and    eax,0x34f56886
  415fa7:	mov    bl,0x8d
  415fa9:	jb     0x415fbd
  415fab:	jmp    0x415fb5
  415fad:	add    DWORD PTR [esi+edi*2+0x20e7a0b6],edi
  415fb4:	mov    ecx,0xd019c6c2
  415fb9:	test   al,0xb7
  415fbb:	(bad)  
  415fbc:	mov    al,0xf6
  415fbe:	add    al,0xff
  415fc0:	push   ss
  415fc1:	mov    bl,0x49
  415fc3:	jne    0x415fab
  415fc5:	hlt    
  415fc6:	jmp    0x415f4a
  415fc8:	jmp    0x538c397d
  415fcd:	cmp    esi,DWORD PTR [ecx+0x61aaa89a]
  415fd3:	ds sub eax,0x104febc0
  415fd9:	push   edx
  415fda:	sar    BYTE PTR gs:[ecx+0x3b],1
  415fde:	loop   0x416047
  415fe0:	xchg   edx,eax
  415fe1:	aad    0x10
  415fe3:	mov    bl,0x4c
  415fe5:	mov    ds:0xaa172da6,eax
  415fea:	add    BYTE PTR [esi],dl
  415fec:	jecxz  0x415fee
  415fee:	push   ebx
  415fef:	outs   dx,DWORD PTR ds:[esi]
  415ff0:	push   0x421db32b
  415ff5:	sbb    BYTE PTR [edx],al
  415ff7:	push   ecx
  415ff8:	and    al,0xa9
  415ffa:	push   ss
  415ffb:	sti    
  415ffc:	fs inc edi
  415ffe:	inc    ecx
  415fff:	pop    esi
  416000:	mov    al,ds:0x66192265
  416005:	sub    al,0x7
  416007:	sub    edi,DWORD PTR [ecx-0xa]
  41600a:	inc    ebp
  41600b:	out    dx,eax
  41600c:	jg     0x41606b
  41600e:	jmp    0x3807:0xb3ab13d6
  416015:	or     edx,DWORD PTR [eax-0x7d]
  416018:	div    esi
  41601a:	xchg   edx,eax
  41601b:	jo     0x41607e
  41601d:	adc    ebp,edi
  41601f:	sub    DWORD PTR [edi-0x2],ecx
  416022:	xor    eax,0x6e93c3fb
  416027:	out    0x9d,eax
  416029:	loop   0x415ff1
  41602b:	push   ebx
  41602c:	jb     0x415fb3
  41602e:	adc    eax,0x776d630d
  416033:	shr    BYTE PTR [edi+esi*4],0x9d
  416037:	(bad)
  41603a:	ja     0x416013
  41603c:	xchg   edi,eax
  41603d:	dec    esp
  41603e:	dec    eax
  41603f:	mov    esp,0x2ff7d636
  416044:	sub    ch,ah
  416046:	aam    0xd6
  416048:	pop    ebx
  416049:	dec    esi
  41604a:	mov    ecx,0x98018362
  41604f:	sub    eax,0x6b4ba73b
  416054:	xor    BYTE PTR fs:[edx+ebx*8+0x1a33ad60],bl
  41605c:	icebp  
  41605d:	pop    ebx
  41605e:	fidivr DWORD PTR [edi+0x110d6b58]
  416064:	dec    edx
  416065:	add    BYTE PTR [esi],0x4e
  416068:	mov    ecx,0x9c049dcd
  41606d:	add    ah,dl
  41606f:	dec    ebx
  416070:	and    ebp,edi
  416072:	push   eax
  416073:	stc    
  416074:	push   es
  416075:	mov    eax,ds:0x73e5be7b
  41607a:	xchg   ebp,eax
  41607b:	dec    eax
  41607c:	sub    BYTE PTR [eax-0x1d],dl
  41607f:	arpl   WORD PTR [eax],bp
  416081:	dec    esi
  416082:	cmp    al,0xa5
  416084:	jl     0x4160d6
  416086:	add    eax,0xbdb93a41
  41608b:	pop    ecx
  41608c:	sti    
  41608d:	in     al,dx
  41608e:	mov    ss,WORD PTR [edx-0x3435b640]
  416094:	xchg   esp,eax
  416095:	mov    dl,dl
  416097:	mov    bl,0x97
  416099:	xchg   edi,eax
  41609a:	and    al,0xa9
  41609c:	int    0xd0
  41609e:	imul   eax,DWORD PTR [edi+0x45],0xe596160e
  4160a5:	mov    bl,0x52
  4160a7:	add    ch,dl
  4160a9:	cmp    al,0xce
  4160ab:	sbb    al,0xf9
  4160ad:	sub    BYTE PTR ds:0x3f4888b1,0x5d
  4160b4:	xchg   esi,eax
  4160b5:	mov    bh,0x2d
  4160b7:	fisttp WORD PTR [ecx-0x49150673]
  4160bd:	into   
  4160be:	and    cl,BYTE PTR [eax+eax*4-0x22]
  4160c2:	retf   0x6f64
  4160c5:	mov    ch,0x4c
  4160c7:	or     al,0x34
  4160c9:	sub    BYTE PTR [eax+0x6f],0x5d
  4160cd:	xchg   esi,eax
  4160ce:	or     DWORD PTR [ecx],ecx
  4160d0:	cmp    edi,DWORD PTR [esi]
  4160d2:	mov    eax,ds:0x8a68cfe2
  4160d7:	retf   
  4160d8:	ins    BYTE PTR es:[edi],dx
  4160d9:	fwait
  4160da:	cmp    ecx,DWORD PTR [eax-0x3d]
  4160dd:	clc    
  4160de:	mov    al,0xb8
  4160e0:	xchg   edi,eax
  4160e1:	ins    BYTE PTR es:[edi],dx
  4160e2:	push   cs
  4160e3:	ins    BYTE PTR es:[edi],dx
  4160e4:	xor    al,0x99
  4160e6:	cdq    
  4160e7:	fild   DWORD PTR [esi-0x1d]
  4160ea:	dec    esi
  4160eb:	out    dx,al
  4160ec:	out    0xc0,eax
  4160ee:	xor    DWORD PTR [esi],0x469fd765
  4160f4:	out    dx,eax
  4160f5:	out    0xa3,eax
  4160f7:	(bad)  
  4160f9:	dec    esp
  4160fa:	ss aas 
  4160fc:	or     al,ah
  4160fe:	inc    ebp
  4160ff:	sti    
  416100:	addr16 retf 0xe07
  416104:	aam    0xd8
  416106:	outs   dx,DWORD PTR ds:[esi]
  416107:	lea    edi,ds:0xa1e84a1d
  41610d:	test   eax,0x4ec34ddb
  416112:	je     0x416178
  416114:	push   esp
  416115:	mov    ch,dl
  416117:	jb     0x41614e
  416119:	jecxz  0x4160c1
  41611b:	stc    
  41611c:	aas    
  41611d:	pop    esi
  41611e:	sub    esp,DWORD PTR [ebx-0x6d]
  416121:	imul   ebx,DWORD PTR [esi-0x62],0x8221a641
  416128:	mov    fs,edx
  41612a:	hlt    
  41612b:	and    DWORD PTR [edi+0x7c],0x5ca134db
  416132:	mov    ds:0xc66a7728,al
  416137:	push   ds
  416138:	mov    edi,0xeeba130f
  41613d:	lock (bad) 
  41613f:	jecxz  0x4160cf
  416141:	shr    DWORD PTR ds:[bp+di],0x1e
  416146:	sub    al,0x3c
  416148:	pop    ebp
  416149:	or     bl,BYTE PTR [eax-0x2b]
  41614c:	add    eax,0xbf2ff5bc
  416151:	fmul   st(2),st
  416153:	cld    
  416154:	nop
  416155:	sub    DWORD PTR [edi+0x89685f2],ecx
  41615b:	cmp    BYTE PTR es:[ebx-0x498d2dee],0x48
  416163:	push   es
  416164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416165:	adc    BYTE PTR [eax],dl
  416167:	pushf  
  416168:	add    eax,0x59f60b55
  41616d:	adc    eax,0xc6e8b455
  416172:	jmp    FWORD PTR [ebp-0x5dc2da37]
  416178:	repz sub dh,BYTE PTR [esi+0x5d]
  41617c:	ret    0xa08b
  41617f:	test   BYTE PTR [ebx+0xe3bc1a2],ah
  416185:	mov    ebx,?
  416187:	xor    BYTE PTR [ecx],dh
  416189:	mov    cl,0x64
  41618b:	fisub  DWORD PTR [esi]
  41618d:	stos   BYTE PTR es:[edi],al
  41618e:	mov    ch,dl
  416190:	sub    ecx,DWORD PTR [ebp+0x5747c92b]
  416196:	jecxz  0x416161
  416198:	adc    ah,al
  41619a:	inc    edi
  41619b:	dec    ecx
  41619c:	cmp    ebp,DWORD PTR [ebp+0x2e]
  41619f:	mov    ds:0xe22371,al
  4161a4:	cld    
  4161a5:	sbb    DWORD PTR [edx-0x31f8becb],edx
  4161ab:	pop    ecx
  4161ac:	push   0xfcc131e2
  4161b1:	mov    ah,0x8d
  4161b3:	pop    ss
  4161b4:	push   0xffffffb3
  4161b6:	cmp    BYTE PTR [esi],bh
  4161b8:	add    al,0xc
  4161ba:	and    cl,BYTE PTR [esi]
  4161bc:	repz and DWORD PTR [edi+0x3b],ecx
  4161c0:	cld    
  4161c1:	xchg   esi,eax
  4161c2:	mov    DWORD PTR [edx],ebx
  4161c4:	ret    
  4161c5:	xor    DWORD PTR [esi-0x1c9d0a85],ecx
  4161cb:	cmp    al,0xb5
  4161cd:	gs push es
  4161cf:	int3   
  4161d0:	fisttp QWORD PTR [esi]
  4161d2:	cli    
  4161d3:	add    al,0x9b
  4161d5:	sbb    DWORD PTR [esi-0x1f5ed62c],ebx
  4161db:	outs   dx,BYTE PTR ds:[esi]
  4161dc:	stc    
  4161dd:	mov    cl,0x64
  4161df:	add    ah,dl
  4161e1:	inc    edx
  4161e2:	xor    al,0x39
  4161e4:	(bad)  
  4161e5:	pop    edx
  4161e6:	in     al,dx
  4161e7:	mov    eax,0x9c44ef8c
  4161ec:	pop    ss
  4161ed:	jp     0x4161e2
  4161ef:	fs jo  0x4161c9
  4161f2:	imul   esp,DWORD PTR [edi+0x6],0x2758a827
  4161f9:	or     esp,ebp
  4161fb:	es xchg ebp,eax
  4161fd:	push   ebp
  4161fe:	sbb    ah,bl
  416200:	sub    esp,esp
  416202:	fcomip st,st(6)
  416204:	je     0x41626c
  416206:	outs   dx,BYTE PTR ds:[esi]
  416207:	mov    ebp,0xd2e1dc13
  41620c:	fwait
  41620d:	icebp  
  41620e:	aas    
  41620f:	out    0x7d,al
  416211:	sub    DWORD PTR gs:[ecx],esp
  416214:	mov    ds:0x5af528e0,eax
  416219:	or     eax,0x163a6e1d
  41621f:	push   eax
  416220:	push   eax
  416221:	clc    
  416222:	mov    ds:0xeddc2984,eax
  416227:	jge    0x4161f6
  416229:	das    
  41622a:	inc    eax
  41622b:	xchg   BYTE PTR [ebp-0x6e],dl
  41622e:	mov    DWORD PTR ds:0xdb8220ac,ebx
  416234:	aad    0x99
  416236:	cmp    al,0x8b
  416238:	pusha  
  416239:	idiv   BYTE PTR [eax-0x74c2c290]
  41623f:	stos   BYTE PTR es:[edi],al
  416240:	xor    BYTE PTR [edi-0x12],bl
  416243:	mov    al,ds:0x62c6f0f3
  416248:	cld    
  416249:	or     eax,0xa891fbd7
  41624e:	xor    DWORD PTR [ebp+0x7a2adb71],eax
  416254:	repnz adc ah,BYTE PTR [edx+0x32]
  416258:	cmp    ah,0x34
  41625b:	mov    al,BYTE PTR [edx-0x53f4292f]
  416261:	mov    ds:0x41f34d5c,al
  416266:	sub    al,0x95
  416268:	nop
  416269:	adc    edi,DWORD PTR [ebx+ebx*4]
  41626c:	pusha  
  41626d:	bound  ecx,QWORD PTR [edi]
  41626f:	inc    esp
  416270:	jmp    0x41629c
  416272:	mov    edi,0x8b72465c
  416277:	cmc    
  416278:	or     edx,DWORD PTR [ebx-0x7d]
  41627b:	mov    eax,0xb2b2883c
  416280:	or     DWORD PTR [ebp*8+0x746b20bd],eax
  416287:	pop    esi
  416288:	sahf   
  416289:	test   eax,0x40d899fe
  41628e:	cmp    ch,BYTE PTR [ecx-0x27]
  416291:	jp     0x416216
  416293:	pop    edx
  416294:	rol    BYTE PTR [ecx-0x6a5f7d63],cl
  41629a:	add    al,0x3e
  41629c:	ins    DWORD PTR es:[edi],dx
  41629d:	and    ah,al
  41629f:	dec    edi
  4162a0:	dec    ebp
  4162a1:	(bad)  
  4162a2:	fbld   TBYTE PTR [eax+eax*8+0x43]
  4162a6:	adc    esi,DWORD PTR [ebx+0x10]
  4162a9:	jle    0x416258
  4162ab:	push   esi
  4162ac:	push   esi
  4162ad:	push   esp
  4162ae:	dec    esi
  4162af:	mov    cl,BYTE PTR [edi-0x285c7ce1]
  4162b5:	mov    eax,0xed6729a2
  4162ba:	pop    edx
  4162bb:	lods   al,BYTE PTR ds:[esi]
  4162bc:	jb     0x416282
  4162be:	push   ebp
  4162bf:	das    
  4162c0:	mov    DWORD PTR [edx-0x2a],ebx
  4162c3:	stos   DWORD PTR es:[edi],eax
  4162c4:	iret   
  4162c5:	dec    ebx
  4162c6:	stos   DWORD PTR es:[edi],eax
  4162c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162c8:	xchg   edx,eax
  4162c9:	lds    edi,FWORD PTR [edi-0x65d6dd72]
  4162cf:	lods   al,BYTE PTR ds:[esi]
  4162d0:	ds pusha 
  4162d2:	(bad)  
  4162d3:	out    0x5a,eax
  4162d5:	dec    esi
  4162d6:	and    edx,DWORD PTR [esi-0x6d]
  4162d9:	sbb    DWORD PTR [esi],esp
  4162db:	xor    al,0x54
  4162dd:	xchg   ecx,eax
  4162de:	xor    DWORD PTR [ebx+0x2bd9e2b9],0x74
  4162e5:	push   eax
  4162e6:	adc    eax,0xb4cfb42
  4162eb:	sbb    BYTE PTR [ebx+eiz*2+0x22],al
  4162ef:	push   edi
  4162f0:	pop    esi
  4162f1:	sub    esp,edx
  4162f3:	clc    
  4162f4:	retf   0xdc9b
  4162f7:	jnp    0x416330
  4162f9:	dec    esp
  4162fa:	jge    0x4162b8
  4162fc:	mov    eax,0x5d7f82f
  416301:	out    dx,eax
  416302:	nop
  416303:	shl    DWORD PTR [ebx+0x74636228],1
  416309:	mov    edi,0x66fcb32
  41630e:	xchg   esi,eax
  41630f:	lock not edx
  416312:	push   cs
  416313:	or     DWORD PTR [ecx+0x3a35778f],0xfc7e59c3
  41631d:	adc    ebp,DWORD PTR [edx-0x56]
  416320:	mov    dh,0xfb
  416322:	stc    
  416323:	aam    0x36
  416325:	cmp    DWORD PTR [eax],esi
  416327:	jg     0x4163a2
  416329:	ret    0x8742
  41632c:	arpl   WORD PTR [edi+0x1903b7bb],bp
  416332:	outs   dx,DWORD PTR ds:[esi]
  416333:	dec    edx
  416334:	call   0x1c0a:0xe42a9a35
  41633b:	leave  
  41633c:	xchg   esp,eax
  41633d:	cwde   
  41633e:	jnp    0x416301
  416340:	mov    eax,0x1cb47158
  416345:	sahf   
  416346:	loope  0x4163b5
  416348:	cmp    eax,0x3a374a1e
  41634d:	inc    ecx
  41634e:	pop    ebp
  41634f:	loop   0x416379
  416351:	mov    esi,0x380ac291
  416356:	test   DWORD PTR [edx],edx
  416358:	push   ss
  416359:	dec    ebx
  41635a:	outs   dx,BYTE PTR fs:[esi]
  41635c:	fld    QWORD PTR [edi+0x4dafb315]
  416362:	stc    
  416363:	mov    ch,0xed
  416365:	lods   al,BYTE PTR ds:[esi]
  416366:	test   al,0x24
  416368:	es xchg edx,eax
  41636a:	sahf   
  41636b:	and    bh,ch
  41636d:	icebp  
  41636e:	xor    bl,bh
  416370:	xchg   edx,ebx
  416372:	xor    cl,BYTE PTR [ecx+ebp*8]
  416375:	xor    ecx,DWORD PTR [ecx-0x62]
  416378:	xchg   ecx,eax
  416379:	std    
  41637a:	add    al,0x5e
  41637c:	data16 jecxz 0x416303
  41637f:	sub    ch,BYTE PTR [eax-0x6f]
  416382:	mov    edi,0x2895f934
  416387:	pop    ebp
  416388:	mov    al,0xee
  41638a:	cmp    esi,DWORD PTR ds:[esi]
  41638d:	ds fucomp st(5)
  416390:	pop    esp
  416391:	push   ecx
  416392:	std    
  416393:	jnp    0x4163c1
  416395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416396:	repnz mov ecx,0x409c6c1b
  41639c:	ds test al,0x17
  41639f:	cmp    esp,DWORD PTR [esi+eiz*8]
  4163a2:	ret    0xab86
  4163a5:	pop    esi
  4163a6:	neg    al
  4163a8:	mov    ebp,0xd0c2acf8
  4163ad:	add    ebx,esp
  4163af:	mov    ds:0x6fb2dea0,al
  4163b4:	cmp    ch,bh
  4163b6:	fld    TBYTE PTR [ecx+0x45df54ca]
  4163bc:	xchg   ecx,eax
  4163bd:	lds    edx,FWORD PTR [ecx+0x50]
  4163c0:	inc    esi
  4163c1:	cs mov edx,0x2a5c13c6
  4163c7:	dec    ebp
  4163c8:	loope  0x4163e7
  4163ca:	shl    BYTE PTR [esi],0xe1
  4163cd:	xchg   edi,eax
  4163ce:	aaa    
  4163cf:	xlat   BYTE PTR ds:[ebx]
  4163d0:	stc    
  4163d1:	adc    eax,0x6a633ac8
  4163d6:	xchg   esp,eax
  4163d7:	fnsave [ebp+0x31]
  4163da:	jle    0x4163db
  4163dc:	jns    0x416458
  4163de:	scas   al,BYTE PTR es:[edi]
  4163df:	xor    DWORD PTR [ecx+0x2b],edx
  4163e2:	ss sahf 
  4163e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163e5:	stc    
  4163e6:	arpl   WORD PTR ds:0xf274cc07,sp
  4163ec:	xchg   esi,eax
  4163ed:	mov    esi,0x44b494db
  4163f2:	cmp    al,0x1e
  4163f4:	pop    es
  4163f5:	add    ebp,DWORD PTR [eax+0x56d80925]
  4163fb:	not    DWORD PTR [eax-0x5d]
  4163fe:	in     al,0xf4
  416400:	stos   DWORD PTR es:[edi],eax
  416401:	les    ecx,FWORD PTR [ecx+0x42]
  416404:	aas    
  416405:	sub    BYTE PTR [eax-0x7e16add4],al
  41640b:	mov    ebp,0xbe5d2876
  416410:	cld    
  416411:	mov    DWORD PTR [edx-0x17511d72],esp
  416417:	aad    0xa3
  416419:	test   DWORD PTR [esp+edx*2-0x1cdc854a],0x42e1a96e
  416424:	mov    dl,BYTE PTR [edx+0x262e0e81]
  41642a:	inc    ebx
  41642b:	sar    DWORD PTR ds:0xf896aebf,0x22
  416432:	inc    edi
  416433:	adc    BYTE PTR [edx+0x2c342a84],al
  416439:	xchg   ecx,eax
  41643a:	pop    ecx
  41643b:	stos   BYTE PTR es:[edi],al
  41643c:	xchg   edx,eax
  41643d:	sti    
  41643e:	push   esi
  41643f:	xchg   esi,eax
  416440:	fisubr DWORD PTR [ebp+0x5dad1a84]
  416446:	add    dl,BYTE PTR [edi-0x72]
  416449:	lods   al,BYTE PTR ds:[esi]
  41644a:	sahf   
  41644b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41644c:	mov    esi,0x72b39db3
  416451:	mov    al,ds:0x20abadb5
  416456:	mov    cl,0xbf
  416458:	mov    edx,DWORD PTR [esi+eiz*4+0xab758c6]
  41645f:	fwait
  416460:	lock xor BYTE PTR [eax+0x3dc6fdb],0xe
  416468:	xor    cl,BYTE PTR [edi+0x48]
  41646b:	mov    bh,0x77
  41646d:	call   0x8c2e64e3
  416472:	pop    edx
  416473:	push   ebp
  416474:	or     al,0xac
  416476:	pop    es
  416477:	(bad)  
  416478:	outs   dx,BYTE PTR ds:[esi]
  416479:	push   esp
  41647a:	test   BYTE PTR [ebx+0x6e85a5e0],bh
  416480:	and    al,0xd6
  416482:	cmp    eax,0xca707010
  416487:	pop    edx
  416488:	rol    BYTE PTR [edi-0x6e],0xe5
  41648c:	lea    esp,[ebx+0x69d09e9c]
  416492:	xchg   ecx,eax
  416493:	mov    dl,0x21
  416495:	and    eax,DWORD PTR [ecx+0x28]
  416498:	das    
  416499:	sti    
  41649a:	call   0xbdc54832
  41649f:	sbb    al,0xe2
  4164a1:	jle    0x416522
  4164a3:	(bad)  
  4164a4:	sahf   
  4164a5:	and    al,0x4b
  4164a7:	sbb    al,0x61
  4164a9:	icebp  
  4164aa:	mov    ah,0xf8
  4164ac:	shr    ebp,0x81
  4164af:	push   ss
  4164b0:	dec    ebx
  4164b1:	pop    es
  4164b2:	(bad)  
  4164b3:	jmp    0x416486
  4164b5:	fldcw  WORD PTR [edx-0x25]
  4164b8:	sub    BYTE PTR [esi],dh
  4164ba:	mov    eax,ds:0x87e12e5e
  4164bf:	icebp  
  4164c0:	adc    DWORD PTR [ecx-0x17],ebp
  4164c3:	or     ebx,DWORD PTR [esp+esi*4]
  4164c6:	cmp    bh,BYTE PTR [esi]
  4164c8:	dec    ebp
  4164c9:	jg     0x416476
  4164cb:	pop    esp
  4164cc:	sahf   
  4164cd:	or     al,0xb1
  4164cf:	into   
  4164d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164d1:	or     bl,cl
  4164d3:	or     DWORD PTR [ecx],edi
  4164d5:	mov    ds:0x75312eb1,al
  4164da:	hlt    
  4164db:	xor    al,0xf0
  4164dd:	push   es
  4164de:	push   ecx
  4164df:	and    ch,bl
  4164e1:	adc    eax,ebp
  4164e3:	in     al,dx
  4164e4:	cmp    bl,dl
  4164e6:	cli    
  4164e7:	enter  0xeb72,0x72
  4164eb:	hlt    
  4164ec:	cmp    dl,BYTE PTR [edx-0xce3415d]
  4164f2:	or     ebp,DWORD PTR [esi+0x1a480bb5]
  4164f8:	adc    al,BYTE PTR [esi+0x5]
  4164fb:	ret    
  4164fc:	ret    
  4164fd:	sbb    DWORD PTR [ebx],edi
  4164ff:	icebp  
  416500:	lods   al,BYTE PTR ds:[esi]
  416501:	movq   QWORD PTR [ecx+eiz*4],mm6
  416505:	out    dx,al
  416506:	and    eax,0x345a0757
  41650b:	sbb    DWORD PTR [edx+edi*8-0x63],esi
  41650f:	xchg   esp,eax
  416510:	ss clc 
  416512:	sti    
  416513:	pusha  
  416514:	shl    BYTE PTR [esi+0x7facb020],cl
  41651a:	pop    ecx
  41651b:	dec    edi
  41651c:	rol    DWORD PTR [edi+0x2],cl
  41651f:	leave  
  416520:	cmc    
  416521:	mov    al,BYTE PTR [edx+0xf7771ff]
  416527:	pop    esp
  416528:	std    
  416529:	popf   
  41652a:	xchg   ecx,eax
  41652b:	pop    edx
  41652c:	test   DWORD PTR fs:[esi+0x4addfbca],0x79954850
  416537:	shl    ecx,1
  416539:	pushf  
  41653a:	gs in  eax,dx
  41653c:	push   ds
  41653d:	out    dx,al
  41653e:	inc    ecx
  41653f:	loop   0x4164d3
  416541:	jecxz  0x4164c3
  416543:	jp     0x4165b3
  416545:	mov    bl,0x88
  416547:	in     al,0x30
  416549:	sahf   
  41654a:	pop    edi
  41654b:	imul   esp,DWORD PTR ds:0xbeb6bba5,0xffffff8b
  416552:	loope  0x41652f
  416554:	dec    ebp
  416555:	pop    ds
  416556:	lods   al,BYTE PTR ds:[esi]
  416557:	inc    ebp
  416558:	sub    ch,BYTE PTR [esp+eax*4]
  41655b:	mov    bl,0x42
  41655d:	sbb    esp,esp
  41655f:	and    bl,BYTE PTR [ebp-0x5d]
  416562:	hlt    
  416563:	lods   al,BYTE PTR ds:[esi]
  416564:	push   esp
  416565:	mov    esi,0x27547b65
  41656a:	daa    
  41656b:	jg     0x4164f1
  41656d:	imul   eax,DWORD PTR [edx+0x1e28ea2b],0x1d
  416574:	imul   ecx,DWORD PTR [edx],0x7e
  416577:	dec    ebp
  416578:	out    dx,eax
  416579:	and    al,BYTE PTR [ebp+0x5a51b159]
  41657f:	push   eax
  416580:	mov    bl,0x6e
  416582:	push   0x6d
  416584:	and    ch,BYTE PTR [edi-0x36]
  416587:	pop    esp
  416588:	mul    BYTE PTR ds:0x50775a0e
  41658e:	sbb    BYTE PTR [ecx+0x8cd0d2f],0x8e
  416595:	(bad)  
  416596:	adc    BYTE PTR [edx],dh
  416598:	pusha  
  416599:	dec    ebx
  41659a:	push   eax
  41659b:	ret    0x35b0
  41659e:	test   BYTE PTR [ebx],0xb
  4165a1:	(bad)  
  4165a2:	mov    ds,WORD PTR [edi-0x67de82cc]
  4165a8:	cmove  ecx,DWORD PTR [ecx+0x1661b22f]
  4165af:	or     al,bh
  4165b1:	icebp  
  4165b2:	aad    0xba
  4165b4:	inc    esi
  4165b5:	push   ecx
  4165b6:	or     DWORD PTR [eax+0x3f7ad482],esi
  4165bc:	fnstcw WORD PTR [esi-0x4c6ba439]
  4165c2:	retf   
  4165c3:	ficom  DWORD PTR [eax+0x22]
  4165c6:	dec    eax
  4165c7:	mov    ebx,0x9f9955bf
  4165cc:	jns    0x416587
  4165ce:	mov    bh,0xf9
  4165d0:	mov    bh,0x87
  4165d2:	sub    ah,ch
  4165d4:	ret    0x23fe
  4165d7:	retf   
  4165d8:	test   eax,0x8b798f52
  4165dd:	jne    0x41664e
  4165df:	add    edi,DWORD PTR [eax]
  4165e1:	inc    ebp
  4165e2:	mov    edx,0x312cab16
  4165e7:	sub    BYTE PTR [edx+0x8],cl
  4165ea:	loope  0x4165d2
  4165ec:	aaa    
  4165ed:	or     BYTE PTR [ebp-0x47],bl
  4165f0:	aad    0xd
  4165f2:	cwde   
  4165f3:	scas   al,BYTE PTR es:[edi]
  4165f4:	push   cs
  4165f5:	lock sub BYTE PTR es:[eax+0x642bf31c],0xd5
  4165fe:	inc    edi
  4165ff:	dec    esi
  416600:	pop    DWORD PTR [eax-0x5]
  416603:	adc    BYTE PTR [esi-0x26dc5e36],ch
  416609:	js     0x41665b
  41660b:	bound  ebp,QWORD PTR [ebx+edx*2+0x585f4c65]
  416612:	push   ss
  416613:	daa    
  416614:	add    DWORD PTR ds:0x147ccb2a,edx
  41661a:	jg     0x4165b6
  41661c:	pop    ebx
  41661d:	or     ch,BYTE PTR [edx]
  41661f:	(bad)  
  416620:	jmp    0x416629
  416622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416623:	std    
  416624:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416625:	mov    cl,0xdc
  416627:	jmp    0xefce:0xc5502174
  41662e:	or     esi,DWORD PTR [edi]
  416630:	in     al,0x18
  416632:	sbb    ebp,DWORD PTR [esi]
  416634:	mov    bh,0x99
  416636:	sahf   
  416637:	push   edi
  416638:	xchg   BYTE PTR [eax+ebx*2-0x1e],dh
  41663c:	ja     0x4166a4
  41663e:	out    0xed,eax
  416640:	xchg   edi,eax
  416641:	cmp    DWORD PTR [edx],ecx
  416643:	(bad)  
  416645:	xchg   edx,eax
  416646:	mov    ds:0x749ba2b2,eax
  41664b:	retf   0xf61a
  41664e:	das    
  41664f:	jle    0x416693
  416651:	sub    eax,0xbc337ed
  416656:	jg     0x41666a
  416658:	dec    edi
  416659:	jl     0x4165fb
  41665b:	repnz mov bl,0x6c
  41665e:	lahf   
  41665f:	call   0x1f1b1e61
  416664:	test   dh,bh
  416666:	jae    0x416683
  416668:	inc    ecx
  416669:	push   eax
  41666a:	pop    ebx
  41666b:	or     BYTE PTR [ecx+0x2dcf33dd],al
  416671:	mov    ch,0xb3
  416673:	and    eax,0xca952f84
  416678:	mov    edx,0x1c94578d
  41667d:	sub    eax,0xeacd1ef1
  416682:	push   edi
  416683:	dec    esp
  416684:	sub    DWORD PTR gs:[edi],edi
  416687:	into   
  416688:	popf   
  416689:	pop    eax
  41668a:	or     dh,cl
  41668c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41668d:	sbb    BYTE PTR [esi-0x69136f3e],dh
  416693:	sub    al,0x21
  416695:	sar    DWORD PTR [esi-0x676a55ca],0xfa
  41669c:	pop    es
  41669d:	dec    edx
  41669e:	add    dh,BYTE PTR [eax]
  4166a0:	test   al,0xee
  4166a2:	inc    ebp
  4166a3:	jle    0x4166ca
  4166a5:	dec    esi
  4166a6:	sahf   
  4166a7:	outs   dx,DWORD PTR ds:[esi]
  4166a8:	mov    es,edx
  4166aa:	dec    DWORD PTR [esi-0x3a]
  4166ad:	push   ecx
  4166ae:	test   DWORD PTR [eax-0x88e2f53],eax
  4166b4:	sar    BYTE PTR [ebp+0x5cb337d5],cl
  4166ba:	popf   
  4166bb:	test   ah,cl
  4166bd:	cmp    al,0xb7
  4166bf:	or     BYTE PTR [edx],0xa7
  4166c2:	ror    DWORD PTR [ebx+0x28e4fb3c],0x42
  4166c9:	out    dx,al
  4166ca:	fcmovu st,st(6)
  4166cc:	in     al,dx
  4166cd:	mov    al,ds:0x144bda84
  4166d2:	lea    esi,[edx]
  4166d4:	mov    ch,0x87
  4166d6:	mov    ebp,0xef8c0fe1
  4166db:	(bad)  
  4166dc:	into   
  4166dd:	pop    esp
  4166de:	and    ch,BYTE PTR [esi+0x73]
  4166e1:	ror    bh,0xed
  4166e4:	test   al,0x57
  4166e6:	mov    cl,0xeb
  4166e8:	mov    ebx,0xa87395b2
  4166ed:	or     eax,0xdccde53d
  4166f2:	addr16 (bad) 
  4166f4:	mov    dl,0xfc
  4166f6:	aas    
  4166f7:	sti    
  4166f8:	mov    bh,0x5e
  4166fa:	mov    eax,ds:0xf967142a
  4166ff:	ret    
  416700:	pop    eax
  416701:	mov    ss,ebx
  416703:	inc    ebp
  416704:	or     ah,BYTE PTR [ebx]
  416706:	sub    eax,0xa7e12d8f
  41670b:	bound  edx,QWORD PTR [edx-0x59]
  41670e:	mov    dl,0xf
  416710:	leave  
  416711:	stc    
  416712:	sahf   
  416713:	push   DWORD PTR [ecx-0x41e290a2]
  416719:	pop    ebp
  41671a:	daa    
  41671b:	daa    
  41671c:	jae    0x4166df
  41671e:	mov    ds:0x3d0b7d31,eax
  416723:	sbb    BYTE PTR [ebx-0x56eca52c],dl
  416729:	dec    ebx
  41672a:	jg     0x41672d
  41672c:	sub    bh,cl
  41672e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41672f:	sar    DWORD PTR [ecx-0x7a],1
  416732:	(bad)  
  416733:	push   ecx
  416734:	cmovg  eax,DWORD PTR [edx-0x438007d6]
  41673b:	mov    bh,0x5c
  41673d:	cmp    esp,ecx
  41673f:	dec    ebx
  416740:	mov    esp,0x32febae0
  416745:	int    0xdd
  416747:	xchg   edi,eax
  416748:	ins    DWORD PTR es:[edi],dx
  416749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41674a:	dec    ecx
  41674b:	mov    bl,BYTE PTR [eax-0x10330b5b]
  416751:	and    dl,BYTE PTR [ecx-0x59]
  416754:	sahf   
  416755:	scas   al,BYTE PTR es:[edi]
  416756:	and    BYTE PTR [ebx+esi*8],al
  416759:	add    esi,DWORD PTR [edi+ebx*8]
  41675c:	jmp    0x4166fd
  41675e:	ror    BYTE PTR [ecx],1
  416760:	cmp    ebx,DWORD PTR [edx+ecx*4]
  416763:	iret   
  416764:	mov    ah,0xf6
  416766:	enter  0xe780,0x97
  41676a:	and    edi,DWORD PTR [eax-0x26cf156]
  416770:	pop    ecx
  416771:	adc    DWORD PTR [ebx-0x5d82254e],esp
  416777:	ja     0x416751
  416779:	push   esp
  41677a:	pop    ds
  41677b:	into   
  41677c:	lock sub ebp,DWORD PTR [eax]
  41677f:	sub    eax,0x35b2feff
  416784:	and    edx,DWORD PTR [esi-0x60]
  416787:	xor    al,0x67
  416789:	and    eax,0x65ca2ec3
  41678e:	dec    ebp
  41678f:	cmp    BYTE PTR [bp-0x1de8],ah
  416794:	and    cl,dh
  416796:	push   ds
  416797:	add    BYTE PTR [ebx],0xa2
  41679a:	popf   
  41679b:	pop    esp
  41679c:	add    al,0xc8
  41679e:	pop    ss
  41679f:	sbb    eax,0xbb9b9440
  4167a4:	cmp    eax,0xfc9e504e
  4167a9:	mov    esp,0xe7b1805
  4167ae:	and    eax,0x7787f36e
  4167b3:	mov    ecx,0x1415ffe7
  4167b8:	add    BYTE PTR [ecx+0x0],0x89
  4167bc:	inc    ebp
  4167bd:	aam    0xf
  4167bf:	mov    bh,0x45
  4167c1:	aam    0x3d
  4167c3:	cmp    DWORD PTR ds:0x2f750000,eax
  4167c9:	mov    DWORD PTR [ebp-0x14],0xe0d
  4167d0:	lea    ecx,[ebp-0x28]
  4167d3:	push   ecx
  4167d4:	call   DWORD PTR ds:0x418018
  4167da:	mov    DWORD PTR [ebp-0x60],eax
  4167dd:	mov    DWORD PTR [ebp-0x54],0x3a
  4167e4:	mov    BYTE PTR [ebp-0x34],0x0
  4167e8:	mov    DWORD PTR [ebp-0x8],0xfa735ee
  4167ef:	mov    DWORD PTR [ebp-0x68],0x10b527
  4167f6:	jmp    0x416806
  4167f8:	mov    BYTE PTR ds:0x430700,0x0
  4167ff:	mov    BYTE PTR ds:0x41a770,0x0
  416806:	push   0x0
  416808:	call   DWORD PTR ds:0x418018
  41680e:	mov    DWORD PTR [ebp-0x2c],eax
  416811:	push   DWORD PTR ds:0x418018
  416817:	pop    edx
  416818:	mov    DWORD PTR [ebp-0x6c],edx
  41681b:	lea    edx,[ebp-0x40]
  41681e:	push   edx
  41681f:	mov    eax,DWORD PTR [ebp-0x60]
  416822:	push   eax
  416823:	call   DWORD PTR ds:0x418024
  416829:	mov    DWORD PTR [ebp-0x44],eax
  41682c:	push   DWORD PTR [ebp-0x30]
  41682f:	push   0x1000
  416834:	mov    eax,DWORD PTR [ebp-0x14]
  416837:	add    eax,0x46
  41683a:	push   eax
  41683b:	push   0x0
  41683d:	mov    ebx,DWORD PTR [ebp-0x44]
  416840:	call   ebx
  416842:	push   eax
  416843:	pop    ebx
  416844:	mov    DWORD PTR [ebp-0x4],ebx
  416847:	mov    ecx,DWORD PTR [ebp-0x68]
  41684a:	sub    ecx,0xdae0b
  416850:	mov    DWORD PTR [ebp-0x68],ecx
  416853:	cmp    DWORD PTR [ebp-0x4],0x0
  416857:	jne    0x416862
  416859:	push   0x0
  41685b:	push   0x0
  41685d:	call   0x417f22
  416862:	mov    edx,DWORD PTR [ebp-0x4]
  416865:	add    edx,DWORD PTR [ebp-0x14]
  416868:	mov    eax,DWORD PTR [ebp-0x8]
  41686b:	mov    DWORD PTR [edx],eax
  41686d:	mov    ecx,DWORD PTR [ebp-0x4]
  416870:	add    ecx,DWORD PTR [ebp-0x54]
  416873:	mov    DWORD PTR [ebp-0x5c],ecx
  416876:	mov    edx,DWORD PTR ds:0x418024
  41687c:	mov    DWORD PTR [ebp-0x4c],edx
  41687f:	mov    eax,DWORD PTR [ebp-0x4]
  416882:	add    eax,DWORD PTR [ebp-0x14]
  416885:	mov    ecx,DWORD PTR [ebp+0x8]
  416888:	mov    DWORD PTR [eax+0x4],ecx
  41688b:	mov    edx,DWORD PTR [ebp-0x4]
  41688e:	add    edx,DWORD PTR [ebp-0x14]
  416891:	mov    DWORD PTR [ebp-0xc],edx
  416894:	cmp    DWORD PTR [ebp-0x68],0x0
  416898:	jbe    0x4168b5
  41689a:	mov    eax,DWORD PTR [ebp-0xc]
  41689d:	push   eax
  41689e:	mov    ecx,DWORD PTR [ebp-0x14]
  4168a1:	push   ecx
  4168a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4168a5:	add    edx,DWORD PTR [ebp-0x68]
  4168a8:	push   edx
  4168a9:	mov    eax,DWORD PTR [ebp-0x4]
  4168ac:	push   eax
  4168ad:	call   0x417e34
  4168b2:	add    esp,0x10
  4168b5:	cmp    DWORD PTR [ebp-0x5c],0x0
  4168b9:	je     0x4168c9
  4168bb:	push   DWORD PTR [ebp-0x4c]
  4168be:	push   DWORD PTR [ebp-0x6c]
  4168c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4168c4:	push   ecx
  4168c5:	jmp    ecx
  4168c7:	jmp    0x4168cf
  4168c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4168cc:	mov    DWORD PTR [ebp-0x18],ecx
  4168cf:	mov    eax,0x1
  4168d4:	pop    ebx
  4168d5:	mov    esp,ebp
  4168d7:	pop    ebp
  4168d8:	ret    
  4168d9:	push   ebp
  4168da:	mov    ebp,esp
  4168dc:	pop    ebp
  4168dd:	ret    
  4168de:	push   ebp
  4168df:	mov    ebp,esp
  4168e1:	sub    esp,0x54
  4168e4:	mov    DWORD PTR [ebp-0x34],0x0
  4168eb:	mov    DWORD PTR [ebp-0x4],0x0
  4168f2:	mov    DWORD PTR [ebp-0x50],0x0
  4168f9:	mov    DWORD PTR [ebp-0x4c],0x0
  416900:	mov    DWORD PTR [ebp-0x30],0x0
  416907:	lea    eax,[ebp-0x38]
  41690a:	push   eax
  41690b:	push   0x8
  41690d:	call   DWORD PTR ds:0x418020
  416913:	call   DWORD PTR ds:0x418014
  416919:	mov    DWORD PTR [ebp-0x30],eax
  41691c:	lea    ecx,[ebp-0x48]
  41691f:	push   ecx
  416920:	call   DWORD PTR ds:0x418010
  416926:	mov    edx,DWORD PTR [ebp-0x34]
  416929:	push   edx
  41692a:	call   0x416959
  41692f:	add    esp,0x4
  416932:	call   0x417e25
  416937:	mov    DWORD PTR [ebp-0x54],0x0
  41693e:	jmp    0x416949
  416940:	mov    eax,DWORD PTR [ebp-0x54]
  416943:	add    eax,0x1
  416946:	mov    DWORD PTR [ebp-0x54],eax
  416949:	cmp    DWORD PTR [ebp-0x54],0x64
  41694d:	jae    0x416951
  41694f:	jmp    0x416940
  416951:	xor    eax,eax
  416953:	mov    esp,ebp
  416955:	pop    ebp
  416956:	ret    0x10
  416959:	push   ebp
  41695a:	mov    ebp,esp
  41695c:	sub    esp,0x40
  41695f:	push   esi
  416960:	mov    DWORD PTR [ebp-0x40],0x0
  416967:	mov    DWORD PTR [ebp-0x3c],0x0
  41696e:	mov    DWORD PTR [ebp-0x34],0x0
  416975:	mov    DWORD PTR [ebp-0x28],0x0
  41697c:	mov    DWORD PTR [ebp-0x20],0x0
  416983:	mov    DWORD PTR [ebp-0x2c],0x0
  41698a:	mov    DWORD PTR [ebp-0x30],0x449e28
  416991:	mov    DWORD PTR [ebp-0x28],0x59a4b690
  416998:	mov    DWORD PTR [ebp-0x38],0x0
  41699f:	mov    eax,DWORD PTR [ebp-0x28]
  4169a2:	mov    DWORD PTR [ebp-0x24],eax
  4169a5:	mov    DWORD PTR [ebp-0x4],0x0
  4169ac:	mov    ecx,DWORD PTR ds:0x418014
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	push   0x0
  4169b7:	push   0x4e
  4169b9:	push   0x1e
  4169bb:	push   0x0
  4169bd:	push   0xffffffff
  4169bf:	call   DWORD PTR ds:0x41801c
  4169c5:	test   eax,eax
  4169c7:	je     0x417e04
  4169cd:	faddp  st(1),st
  4169cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169d0:	and    eax,0x98957f6f
  4169d5:	mov    DWORD PTR [edx+0x44],ecx
  4169d8:	lods   eax,DWORD PTR ds:[esi]
  4169d9:	(bad)  
  4169db:	fwait
  4169dc:	xor    eax,0x957f6c9d
  4169e1:	cwde   
  4169e2:	lea    ecx,[edx+0x44]
  4169e5:	in     eax,dx
  4169e6:	lock xchg ebx,eax
  4169e8:	fwait
  4169e9:	xor    eax,0x957f6c25
  4169ee:	cwde   
  4169ef:	lea    ecx,[edx+0x44]
  4169f2:	lods   eax,DWORD PTR ds:[esi]
  4169f3:	lock xchg ebx,eax
  4169f5:	fwait
  4169f6:	xor    eax,0x957f6c25
  4169fb:	cwde   
  4169fc:	lea    ecx,[edx+0x44]
  4169ff:	lods   eax,DWORD PTR ds:[esi]
  416a00:	lock xchg ebx,eax
  416a02:	fwait
  416a03:	xor    eax,0x957f6c25
  416a08:	cwde   
  416a09:	test   DWORD PTR [ebx+0x44],ecx
  416a0c:	lods   eax,DWORD PTR ds:[esi]
  416a0d:	dec    BYTE PTR [ecx+eiz*1+0x76d8253b]
  416a14:	pop    eax
  416a15:	mov    ecx,0x60084b35
  416a1a:	rol    edi,1
  416a1c:	repz pop esp
  416a1e:	push   esi
  416a1f:	dec    esp
  416a20:	movntq (bad),mm6
  416a21:	out    0xf7,eax
  416a23:	jmp    0xfaf0:0xd0c02538
  416a2a:	pop    ebx
  416a2b:	dec    ebx
  416a2c:	add    ecx,DWORD PTR [ebx]
  416a2e:	mov    ch,0xfa
  416a30:	call   0x9f19a09f
  416a35:	mov    bl,0xf2
  416a37:	pop    ebx
  416a38:	add    eax,0xb8c63028
  416a3d:	loopne 0x416a64
  416a3f:	and    al,cl
  416a41:	ficomp WORD PTR [esi+0x6c013f96]
  416a47:	jg     0x4169de
  416a49:	cwde   
  416a4a:	lea    ecx,[edx+0x44]
  416a4d:	xlat   BYTE PTR ds:[ebx]
  416a4e:	aas    
  416a4f:	test   DWORD PTR ds:0xa2148b0b,edx
  416a55:	stos   DWORD PTR es:[edi],eax
  416a56:	ss cmc 
  416a58:	xchg   edi,eax
  416a59:	jp     0x416a5e
  416a5b:	mov    BYTE PTR [esi-0x42],cl
  416a5e:	push   es
  416a5f:	ret    
  416a60:	mov    cl,0x5d
  416a62:	cmp    esp,eax
  416a64:	push   eax
  416a65:	outs   dx,DWORD PTR ds:[esi]
  416a66:	ja     0x416ae7
  416a68:	sub    eax,0xf84d352c
  416a6d:	dec    ecx
  416a6e:	dec    esp
  416a6f:	inc    esi
  416a70:	inc    ebp
  416a71:	cwde   
  416a72:	in     al,0x3c
  416a74:	jo     0x416a17
  416a76:	dec    ebx
  416a77:	dec    eax
  416a78:	call   0x48492c9b
  416a7d:	scas   eax,DWORD PTR es:[edi]
  416a7e:	pop    ebx
  416a7f:	mov    cl,0x99
  416a81:	call   0x87f3:0x246eb5e
  416a88:	mov    ds:0x97f536b0,al
  416a8d:	jp     0x416a92
  416a8f:	mov    DWORD PTR [esi-0x2e],ecx
  416a92:	call   0x50f2:0x1bbdb15d
  416a99:	jp     0x416a85
  416a9b:	aad    0x2d
  416a9d:	mov    dh,0xa8
  416a9f:	loop   0x416a99
  416aa1:	adc    eax,0xa845edd1
  416aa6:	jns    0x416a4e
  416aa8:	jo     0x416a79
  416aaa:	cmp    eax,0x5f00e8e3
  416aaf:	call   0xff99:0x3223a748
  416ab6:	cdq    
  416ab7:	lock repz or ecx,DWORD PTR [ebx-0x676a5dec]
  416abf:	lea    ecx,[edx+0x44]
  416ac2:	lods   eax,DWORD PTR ds:[esi]
  416ac3:	lock xchg ebx,eax
  416ac5:	fwait
  416ac6:	xor    eax,0x957f6c25
  416acb:	cwde   
  416acc:	lea    ecx,[edx+0x44]
  416acf:	lods   eax,DWORD PTR ds:[esi]
  416ad0:	lock xchg ebx,eax
  416ad2:	fwait
  416ad3:	xor    eax,0x953a3c25
  416ad8:	cwde   
  416ad9:	ror    DWORD PTR [ebx+0x47],0xad
  416add:	xchg   esi,eax
  416ade:	fst    st(6)
  416ae0:	jp     0x416b07
  416ae2:	ins    BYTE PTR es:[edi],dx
  416ae3:	jg     0x416a7a
  416ae5:	cwde   
  416ae6:	lea    ecx,[edx+0x44]
  416ae9:	dec    ebp
  416aea:	lock xchg ecx,eax
  416aec:	call   0x7a95:0x7f66243e
  416af3:	mov    DWORD PTR [edx+0x44],ecx
  416af6:	sub    esi,esi
  416af8:	xchg   ebx,eax
  416af9:	fwait
  416afa:	xor    eax,0x283c6c25
  416aff:	cwde   
  416b00:	lea    ecx,[edx+0x54]
  416b03:	lods   eax,DWORD PTR ds:[esi]
  416b04:	lock xchg ebx,eax
  416b06:	fwait
  416b07:	xor    BYTE PTR ds:0x98d57f6c,ah
  416b0d:	lea    ebx,[edx+0x44]
  416b10:	lods   eax,DWORD PTR ds:[esi]
  416b11:	lock xchg ecx,eax
  416b13:	fwait
  416b14:	xor    eax,0x957e6c20
  416b19:	cwde   
  416b1a:	lea    ecx,[edx+0x44]
  416b1d:	test   al,0xf0
  416b1f:	xchg   edx,eax
  416b20:	fwait
  416b21:	xor    eax,0x957f6c25
  416b26:	test   al,0x81
  416b28:	dec    edx
  416b29:	inc    esp
  416b2a:	test   eax,0xcb9193f0
  416b2f:	and    DWORD PTR [ebp+edi*2-0x6b],ebp
  416b33:	fmul   DWORD PTR [edx+ecx*2]
  416b36:	inc    esp
  416b37:	mov    ebp,0x358b93f0
  416b3c:	and    eax,0x98857f6c
  416b41:	lea    ebx,[edx+0x44]
  416b44:	lods   eax,DWORD PTR ds:[esi]
  416b45:	lock xchg ebx,eax
  416b47:	fwait
  416b48:	xor    eax,0x957f6c35
  416b4d:	cwde   
  416b4e:	lea    ecx,[edx+0x44]
  416b51:	lods   eax,DWORD PTR ds:[esi]
  416b52:	lock xchg ebx,eax
  416b54:	fwait
  416b55:	xor    DWORD PTR ds:0x9bcc7f60,esp
  416b5b:	lea    ecx,[edx+0x44]
  416b5e:	ins    DWORD PTR es:[edi],dx
  416b5f:	sti    
  416b60:	xchg   ebx,eax
  416b61:	into   
  416b62:	or     ah,BYTE PTR ds:0x98957f6c
  416b68:	lea    ecx,[edx+0x44]
  416b6b:	lods   eax,DWORD PTR ds:[esi]
  416b6c:	lock xchg ebx,eax
  416b6e:	fwait
  416b6f:	xor    eax,0x957f6c25
  416b74:	cwde   
  416b75:	lea    ebp,[edx+0x48]
  416b78:	lods   eax,DWORD PTR ds:[esi]
  416b79:	call   0x25770711
  416b7e:	ins    BYTE PTR es:[edi],dx
  416b7f:	jg     0x416b16
  416b81:	cwde   
  416b82:	lea    ecx,[edx+0x44]
  416b85:	lods   eax,DWORD PTR ds:[esi]
  416b86:	lock xchg ebx,eax
  416b88:	fwait
  416b89:	xor    eax,0x957f6c25
  416b8e:	cwde   
  416b8f:	lea    ecx,[edx+0x44]
  416b92:	lods   eax,DWORD PTR ds:[esi]
  416b93:	lock xchg ebx,eax
  416b95:	fwait
  416b96:	xor    eax,0x957f6c25
  416b9b:	cwde   
  416b9c:	lea    ecx,[edx+0x44]
  416b9f:	lods   eax,DWORD PTR ds:[esi]
  416ba0:	lock xchg ebx,eax
  416ba2:	fwait
  416ba3:	xor    eax,0x957f6c25
  416ba8:	cwde   
  416ba9:	lea    ecx,[edx+0x44]
  416bac:	lods   eax,DWORD PTR ds:[esi]
  416bad:	lock xchg ebx,eax
  416baf:	fwait
  416bb0:	xor    eax,0x957f6c25
  416bb5:	cwde   
  416bb6:	lea    ecx,[edx+0x44]
  416bb9:	lods   eax,DWORD PTR ds:[esi]
  416bba:	lock xchg ebx,eax
  416bbc:	fwait
  416bbd:	xor    eax,0x957f6c25
  416bc2:	cwde   
  416bc3:	lea    ecx,[edx+0x44]
  416bc6:	lods   eax,DWORD PTR ds:[esi]
  416bc7:	lock xchg ebx,eax
  416bc9:	fwait
  416bca:	xor    eax,0xe1516c25
  416bcf:	std    
  416bd0:	cmc    
  416bd1:	ds inc esp
  416bd3:	lods   eax,DWORD PTR ds:[esi]
  416bd4:	lock xchg ebx,eax
  416bd6:	sub    edi,DWORD PTR [esi]
  416bd8:	and    eax,0x98956f6c
  416bdd:	lea    ebp,[eax+eax*2]
  416be0:	lods   eax,DWORD PTR ds:[esi]
  416be1:	lock xchg edi,eax
  416be3:	fwait
  416be4:	xor    eax,0xa73c2975
  416be9:	int3   
  416bea:	ret    0x444a
  416bed:	lods   eax,DWORD PTR ds:[esi]
  416bee:	lock xchg ebx,eax
  416bf0:	fwait
  416bf1:	adc    eax,0xbb9f6c25
  416bf6:	jmp    0x93f0:0xad2738fe
  416bfd:	fwait
  416bfe:	push   ebp
  416bff:	and    eax,0x93557f6c
  416c04:	lea    ecx,[edx+0x16]
  416c07:	lods   eax,DWORD PTR ds:[esi]
  416c08:	lock xchg ebx,eax
  416c0a:	icebp  
  416c0b:	xor    DWORD PTR ds:0x98957f6c,esp
  416c11:	lea    ecx,[edx+0x44]
  416c14:	lods   eax,DWORD PTR ds:[esi]
  416c15:	lock xchg ebx,eax
  416c17:	fwait
  416c18:	xor    eax,0x757f6c05
  416c1d:	mov    dh,0xff
  416c1f:	das    
  416c20:	sub    dl,al
  416c22:	xchg   ebx,eax
  416c23:	xchg   ebx,eax
  416c24:	fwait
  416c25:	xor    eax,0x957f6c27
  416c2a:	mov    eax,0xaf444a81
  416c2f:	lock xchg ebx,eax
  416c31:	fwait
  416c32:	mov    DWORD PTR [ecx],esp
  416c34:	ins    BYTE PTR es:[edi],dx
  416c35:	jg     0x416bcc
  416c37:	cwde   
  416c38:	lea    ecx,[edx+0x44]
  416c3b:	lods   eax,DWORD PTR ds:[esi]
  416c3c:	lock xchg ebx,eax
  416c3e:	fwait
  416c3f:	xor    eax,0x957f2c25
  416c44:	pop    eax
  416c45:	lea    ecx,[edx+0x44]
  416c48:	lods   eax,DWORD PTR ds:[esi]
  416c49:	lock xchg ebx,eax
  416c4b:	fwait
  416c4c:	xor    eax,0x957f6c25
  416c51:	cwde   
  416c52:	lea    ecx,[edx+0x44]
  416c55:	lods   eax,DWORD PTR ds:[esi]
  416c56:	lock xchg ebx,eax
  416c58:	fwait
  416c59:	xor    eax,0x957f6c25
  416c5e:	cwde   
  416c5f:	lea    ecx,[edx+0x44]
  416c62:	lods   eax,DWORD PTR ds:[esi]
  416c63:	lock xchg ebx,eax
  416c65:	fwait
  416c66:	xor    eax,0x957f6c25
  416c6b:	cwde   
  416c6c:	lea    ecx,[edx+0x44]
  416c6f:	lods   eax,DWORD PTR ds:[esi]
  416c70:	lock xchg ebx,eax
  416c72:	fwait
  416c73:	xor    eax,0x957f6c25
  416c78:	cwde   
  416c79:	lea    ecx,[edx+0x44]
  416c7c:	lods   eax,DWORD PTR ds:[esi]
  416c7d:	lock xchg ebx,eax
  416c7f:	fwait
  416c80:	xor    eax,0x957f6c25
  416c85:	cwde   
  416c86:	lea    ecx,[edx+0x44]
  416c89:	lods   eax,DWORD PTR ds:[esi]
  416c8a:	lock xchg ebx,eax
  416c8c:	fwait
  416c8d:	xor    eax,0x957f6c25
  416c92:	cwde   
  416c93:	lea    ecx,[edx+0x44]
  416c96:	lods   eax,DWORD PTR ds:[esi]
  416c97:	lock xchg ebx,eax
  416c99:	fwait
  416c9a:	xor    eax,0x957f6c25
  416c9f:	cwde   
  416ca0:	lea    ecx,[edx+0x44]
  416ca3:	lods   eax,DWORD PTR ds:[esi]
  416ca4:	lock xchg ebx,eax
  416ca6:	fwait
  416ca7:	xor    eax,0x957f6c25
  416cac:	cwde   
  416cad:	lea    ecx,[edx+0x44]
  416cb0:	lods   eax,DWORD PTR ds:[esi]
  416cb1:	lock xchg ebx,eax
  416cb3:	fwait
  416cb4:	xor    eax,0x957f6c25
  416cb9:	cwde   
  416cba:	lea    ecx,[edx+0x44]
  416cbd:	lods   eax,DWORD PTR ds:[esi]
  416cbe:	lock xchg ebx,eax
  416cc0:	fwait
  416cc1:	xor    eax,0x957f6c25
  416cc6:	cwde   
  416cc7:	lea    ecx,[edx+0x44]
  416cca:	lods   eax,DWORD PTR ds:[esi]
  416ccb:	lock xchg ebx,eax
  416ccd:	fwait
  416cce:	xor    eax,0x957f6c25
  416cd3:	cwde   
  416cd4:	lea    ecx,[edx+0x44]
  416cd7:	lods   eax,DWORD PTR ds:[esi]
  416cd8:	lock xchg ebx,eax
  416cda:	fwait
  416cdb:	xor    eax,0x957f6c25
  416ce0:	cwde   
  416ce1:	lea    ecx,[edx+0x44]
  416ce4:	lods   eax,DWORD PTR ds:[esi]
  416ce5:	lock xchg ebx,eax
  416ce7:	fwait
  416ce8:	xor    eax,0x957f6c25
  416ced:	cwde   
  416cee:	lea    ecx,[edx+0x44]
  416cf1:	lods   eax,DWORD PTR ds:[esi]
  416cf2:	lock xchg ebx,eax
  416cf4:	fwait
  416cf5:	xor    eax,0x957f6c25
  416cfa:	cwde   
  416cfb:	lea    ecx,[edx+0x44]
  416cfe:	lods   eax,DWORD PTR ds:[esi]
  416cff:	lock xchg ebx,eax
  416d01:	fwait
  416d02:	xor    eax,0x957f6c25
  416d07:	cwde   
  416d08:	lea    ecx,[edx+0x44]
  416d0b:	lods   eax,DWORD PTR ds:[esi]
  416d0c:	lock xchg ebx,eax
  416d0e:	fwait
  416d0f:	xor    eax,0x957f6c25
  416d14:	cwde   
  416d15:	lea    ecx,[edx+0x44]
  416d18:	lods   eax,DWORD PTR ds:[esi]
  416d19:	lock xchg ebx,eax
  416d1b:	fwait
  416d1c:	xor    eax,0x957f6c25
  416d21:	cwde   
  416d22:	lea    ecx,[edx+0x44]
  416d25:	lods   eax,DWORD PTR ds:[esi]
  416d26:	lock xchg ebx,eax
  416d28:	fwait
  416d29:	xor    eax,0x957f6c25
  416d2e:	cwde   
  416d2f:	lea    ecx,[edx+0x44]
  416d32:	lods   eax,DWORD PTR ds:[esi]
  416d33:	lock xchg ebx,eax
  416d35:	fwait
  416d36:	xor    eax,0x957f6c25
  416d3b:	cwde   
  416d3c:	lea    ecx,[edx+0x44]
  416d3f:	lods   eax,DWORD PTR ds:[esi]
  416d40:	lock xchg ebx,eax
  416d42:	fwait
  416d43:	xor    eax,0x957f6c25
  416d48:	cwde   
  416d49:	lea    ecx,[edx+0x44]
  416d4c:	lods   eax,DWORD PTR ds:[esi]
  416d4d:	lock xchg ebx,eax
  416d4f:	fwait
  416d50:	xor    eax,0x957f6c25
  416d55:	cwde   
  416d56:	lea    ecx,[edx+0x44]
  416d59:	lods   eax,DWORD PTR ds:[esi]
  416d5a:	lock xchg ebx,eax
  416d5c:	fwait
  416d5d:	xor    eax,0x957f6c25
  416d62:	cwde   
  416d63:	lea    ecx,[edx+0x44]
  416d66:	lods   eax,DWORD PTR ds:[esi]
  416d67:	lock xchg ebx,eax
  416d69:	fwait
  416d6a:	xor    eax,0x957f6c25
  416d6f:	cwde   
  416d70:	lea    ecx,[edx+0x44]
  416d73:	lods   eax,DWORD PTR ds:[esi]
  416d74:	lock xchg ebx,eax
  416d76:	fwait
  416d77:	xor    eax,0x957f6c25
  416d7c:	cwde   
  416d7d:	lea    ecx,[edx+0x44]
  416d80:	lods   eax,DWORD PTR ds:[esi]
  416d81:	lock xchg ebx,eax
  416d83:	fwait
  416d84:	xor    eax,0x957f6c25
  416d89:	cwde   
  416d8a:	lea    ecx,[edx+0x44]
  416d8d:	lods   eax,DWORD PTR ds:[esi]
  416d8e:	lock xchg ebx,eax
  416d90:	fwait
  416d91:	xor    eax,0x957f6c25
  416d96:	cwde   
  416d97:	lea    ecx,[edx+0x44]
  416d9a:	lods   eax,DWORD PTR ds:[esi]
  416d9b:	lock xchg ebx,eax
  416d9d:	fwait
  416d9e:	xor    eax,0x957f6c25
  416da3:	cwde   
  416da4:	lea    ecx,[edx+0x44]
  416da7:	lods   eax,DWORD PTR ds:[esi]
  416da8:	lock xchg ebx,eax
  416daa:	fwait
  416dab:	xor    eax,0x957f6c25
  416db0:	cwde   
  416db1:	lea    ecx,[edx+0x44]
  416db4:	lods   eax,DWORD PTR ds:[esi]
  416db5:	lock xchg ebx,eax
  416db7:	fwait
  416db8:	xor    eax,0x957f6c25
  416dbd:	cwde   
  416dbe:	lea    ecx,[edx+0x44]
  416dc1:	lods   eax,DWORD PTR ds:[esi]
  416dc2:	lock xchg ebx,eax
  416dc4:	fwait
  416dc5:	xor    eax,0x957f6c25
  416dca:	cwde   
  416dcb:	lea    ecx,[edx-0x11]
  416dce:	jecxz  0x416dcb
  416dd0:	xchg   ebx,eax
  416dd1:	mov    ah,0x35
  416dd3:	and    eax,0xb2957f7c
  416dd8:	das    
  416dd9:	nop
  416dda:	xor    BYTE PTR [eax],dl
  416ddc:	mov    edi,0x1e1e89a0
  416de1:	push   ecx
  416de2:	nop
  416de3:	and    BYTE PTR [edx],cl
  416de5:	mov    eax,DWORD PTR [ebx]
  416de7:	sbb    eax,0x88202c5c
  416dec:	jb     0x416e0c
  416dee:	test   DWORD PTR [edi-0x770325e2],esp
  416df4:	mov    esi,0x44cd67e2
  416df9:	loope  0x416e60
  416dfb:	movlps xmm6,QWORD PTR [esi+0x23]
  416dff:	pop    esp
  416e00:	outs   dx,DWORD PTR ds:[esi]
  416e01:	pop    es
  416e02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e03:	js     0x416e18
  416e05:	mov    eax,cs
  416e07:	add    eax,0x9ad64755
  416e0c:	ror    DWORD PTR ds:0xdc27319c,0xa5
  416e13:	xchg   bl,dl
  416e15:	cwde   
  416e16:	data16 adc dh,0x7c
  416e1a:	sbb    BYTE PTR [ebx],ch
  416e1c:	xor    DWORD PTR [edi],edx
  416e1e:	add    DWORD PTR [eax*8+0x10d2568f],0xffffffd3
  416e26:	jno    0x416e08
  416e28:	stos   DWORD PTR es:[edi],eax
  416e29:	dec    ebx
  416e2a:	rol    DWORD PTR [edi+eax*2],1
  416e2d:	aam    0xbe
  416e2f:	dec    ebx
  416e30:	sub    eax,0xbfcd9ca0
  416e35:	(bad)  
  416e36:	leave  
  416e37:	dec    ebp
  416e38:	jl     0x416e20
  416e3a:	or     eax,0xe98bdb70
  416e3f:	leave  
  416e40:	xchg   ebp,eax
  416e41:	push   edx
  416e42:	push   ecx
  416e43:	enter  0x1952,0xbf
  416e47:	push   ss
  416e48:	mov    bh,0x88
  416e4a:	in     al,0xf7
  416e4c:	jecxz  0x416de2
  416e4e:	test   eax,0x3a589d3
  416e53:	xor    bh,al
  416e55:	mov    eax,0xceb3191e
  416e5a:	adc    ecx,esi
  416e5c:	shr    edx,1
  416e5e:	jns    0x416eca
  416e60:	scas   eax,DWORD PTR es:[edi]
  416e61:	or     al,BYTE PTR ds:0x8bb909f6
  416e67:	jle    0x416e06
  416e69:	jno    0x416dee
  416e6b:	jmp    0xb6a6:0x7dceb9d5
  416e72:	pop    edx
  416e73:	imul   esp,DWORD PTR [edi],0xffffff84
  416e76:	test   al,0x78
  416e78:	(bad)  
  416e79:	iret   
  416e7a:	out    dx,eax
  416e7b:	hlt    
  416e7c:	cmp    BYTE PTR [ecx-0x45],dl
  416e7f:	mov    esi,0xacfee531
  416e84:	and    BYTE PTR [eax+0x56],bh
  416e87:	dec    esp
  416e88:	push   ss
  416e89:	dec    ecx
  416e8a:	pop    esp
  416e8b:	fdivr  DWORD PTR ds:0xd7ad2ec1
  416e91:	inc    eax
  416e92:	inc    eax
  416e93:	int3   
  416e94:	mov    BYTE PTR [esi+0x4cd7b10e],bh
  416e9a:	out    dx,eax
  416e9b:	inc    esp
  416e9c:	sbb    bh,dh
  416e9e:	cmp    al,0xf1
  416ea0:	pop    ebx
  416ea1:	clc    
  416ea2:	xchg   ebp,eax
  416ea3:	mov    eax,ds:0x9d671461
  416ea8:	scas   eax,DWORD PTR es:[edi]
  416ea9:	and    eax,0xa41b37b0
  416eae:	clc    
  416eaf:	in     al,dx
  416eb0:	fs test edi,esi
  416eb3:	jge    0x416f09
  416eb5:	and    DWORD PTR [ebp-0x3c],edx
  416eb8:	and    ebp,DWORD PTR [eax+0x75]
  416ebb:	mov    bl,0xb3
  416ebd:	stc    
  416ebe:	push   ecx
  416ebf:	cmp    esp,esp
  416ec1:	push   esi
  416ec2:	aaa    
  416ec3:	in     eax,dx
  416ec4:	das    
  416ec5:	add    DWORD PTR [edx],edi
  416ec7:	jne    0x416e7f
  416ec9:	jmp    0x6334:0x515ab815
  416ed0:	sar    BYTE PTR [edx-0x77c33abe],1
  416ed6:	xor    al,0xcf
  416ed8:	outs   dx,BYTE PTR ds:[esi]
  416ed9:	mov    edi,0xaf4f2630
  416ede:	in     al,0xad
  416ee0:	cmp    bh,BYTE PTR [ecx+0x1b1b2657]
  416ee6:	ss dec edi
  416ee8:	xor    eax,eax
  416eea:	jge    0x416f15
  416eec:	adc    cl,BYTE PTR [esi+0x40]
  416eef:	inc    ebp
  416ef0:	mov    al,ds:0x6c7e0cf0
  416ef5:	adc    DWORD PTR [edx+ecx*4-0xc],ecx
  416ef9:	les    edx,FWORD PTR [ebp-0x21]
  416efc:	(bad)  
  416efd:	out    dx,eax
  416efe:	bound  esi,QWORD PTR [ecx-0x10913c89]
  416f04:	dec    esp
  416f05:	aaa    
  416f06:	jno    0x416f68
  416f08:	xlat   BYTE PTR ds:[ebx]
  416f09:	js     0x416ed2
  416f0b:	aam    0x80
  416f0d:	sub    esp,ebx
  416f0f:	push   ebp
  416f10:	xor    ebx,edi
  416f12:	xchg   esp,eax
  416f13:	(bad)  
  416f15:	test   DWORD PTR [esi],edx
  416f17:	out    0x9d,al
  416f19:	mov    WORD PTR [ebx+0x8],cs
  416f1c:	ror    ecx,cl
  416f1e:	mov    BYTE PTR [edi+0x79e68703],ch
  416f24:	(bad)  
  416f25:	jge    0x416ed1
  416f27:	mov    eax,ds:0xc400b7cd
  416f2c:	jp     0x416f06
  416f2e:	pop    ebp
  416f2f:	dec    ebx
  416f30:	add    ebp,DWORD PTR [edi+0x79992871]
  416f36:	in     al,dx
  416f37:	add    al,ah
  416f39:	arpl   bp,ax
  416f3b:	mov    ecx,0x6abe4b08
  416f40:	xchg   esp,eax
  416f41:	leave  
  416f42:	in     eax,dx
  416f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f44:	mov    dl,0x10
  416f46:	xchg   esp,eax
  416f47:	or     eax,0x67757b97
  416f4c:	pop    eax
  416f4d:	push   0xffffff91
  416f4f:	(bad)  
  416f50:	in     al,dx
  416f51:	outs   dx,DWORD PTR ds:[esi]
  416f52:	call   0xc776:0xee470df
  416f59:	mov    esp,DWORD PTR [ebx]
  416f5b:	and    bl,0x55
  416f5e:	jle    0x416f7a
  416f60:	je     0x416fd6
  416f62:	adc    al,0x58
  416f64:	mov    ah,0xd9
  416f66:	mov    esp,0x4cee9993
  416f6b:	xor    eax,0x8e670649
  416f70:	inc    edx
  416f71:	shl    dh,cl
  416f73:	mov    eax,ds:0x1f58edab
  416f78:	or     DWORD PTR [ebx+0x18],edx
  416f7b:	leave  
  416f7c:	pop    edx
  416f7d:	imul   DWORD PTR [edx-0x63]
  416f80:	xchg   edi,eax
  416f81:	scas   eax,DWORD PTR es:[edi]
  416f82:	add    DWORD PTR [esi],edx
  416f84:	addr16 enterw 0x5319,0x56
  416f8a:	xchg   ecx,eax
  416f8b:	aas    
  416f8c:	ins    DWORD PTR es:[edi],dx
  416f8d:	push   eax
  416f8e:	dec    esp
  416f8f:	jg     0x416fd1
  416f91:	jb     0x416f6d
  416f93:	sub    eax,0x2786b35f
  416f98:	les    ecx,FWORD PTR [edi+0x78]
  416f9b:	shl    BYTE PTR [ecx+0x4b5a24bc],0x7d
  416fa2:	jnp    0x416fc2
  416fa4:	rol    DWORD PTR [eax-0x7e47cea6],cl
  416faa:	mov    ecx,0x4a7d73ce
  416faf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fb0:	outs   dx,BYTE PTR ds:[esi]
  416fb1:	or     ebx,esp
  416fb3:	adc    DWORD PTR [ebp+0x4e5b616e],esp
  416fb9:	or     DWORD PTR [edi-0x6f],ebx
  416fbc:	neg    BYTE PTR [edx-0x5c]
  416fbf:	mov    edx,edi
  416fc1:	and    dl,BYTE PTR [esi]
  416fc3:	xchg   ebp,eax
  416fc4:	xchg   ebp,eax
  416fc5:	pop    ebp
  416fc6:	mov    eax,ds:0xd7b3e717
  416fcb:	ror    BYTE PTR [ecx+ecx*2],0xf5
  416fcf:	push   esi
  416fd0:	add    BYTE PTR [eax+0x6a],dl
  416fd3:	outs   dx,BYTE PTR ds:[esi]
  416fd4:	stc    
  416fd5:	shr    DWORD PTR [eax-0x2f],1
  416fd8:	shr    BYTE PTR [ebx-0x11],0xae
  416fdc:	sbb    DWORD PTR [esi-0x6aa4980b],0x2ba31141
  416fe6:	out    0xbe,al
  416fe8:	inc    edi
  416fe9:	push   esi
  416fea:	dec    ebx
  416feb:	pushf  
  416fec:	and    bl,BYTE PTR [eax]
  416fee:	call   DWORD PTR [edi+0x4c4af527]
  416ff4:	pop    eax
  416ff5:	ds aaa 
  416ff7:	xchg   ebp,eax
  416ff8:	call   0x1071:0x61f5ce7c
  416fff:	add    bl,BYTE PTR [eax-0x3]
  417002:	gs sub eax,0xd1eb55ac
  417008:	stc    
  417009:	push   edi
  41700a:	add    al,0x4a
  41700c:	cmp    DWORD PTR [edi-0x32],esp
  41700f:	add    al,0xfa
  417011:	mov    eax,ds:0x6e0eef95
  417016:	dec    ebp
  417017:	inc    esp
  417018:	mov    ch,0xb8
  41701a:	cmp    eax,0xe2d7bd86
  41701f:	mov    dl,0xf
  417021:	inc    eax
  417022:	and    eax,0x76835efc
  417027:	jb     0x41709c
  417029:	push   ebp
  41702a:	ds mov ecx,esi
  41702d:	inc    ecx
  41702e:	stc    
  41702f:	js     0x416fb8
  417031:	adc    BYTE PTR [eax-0x27594923],0x90
  417038:	(bad)  
  417039:	sub    DWORD PTR [ebp+0x74da8939],ecx
  41703f:	xchg   BYTE PTR [edi],ah
  417041:	rcr    DWORD PTR [edi+0x15],1
  417044:	push   ds
  417045:	xor    ebx,ebp
  417047:	sub    DWORD PTR [eax],edi
  417049:	iret   
  41704a:	daa    
  41704b:	ins    BYTE PTR es:[edi],dx
  41704c:	fcom   QWORD PTR [ecx+0xa]
  41704f:	pop    esi
  417050:	sub    cl,BYTE PTR [ecx]
  417052:	fdivrp st(0),st
  417054:	(bad)  
  417056:	data16 add al,0xda
  417059:	xchg   ebx,eax
  41705a:	test   al,0x1c
  41705c:	adc    eax,0x3bbdd4fb
  417061:	sub    BYTE PTR ds:0x8b439026,0x51
  417068:	mov    ah,0x40
  41706a:	icebp  
  41706b:	call   0xb479:0x866dcf77
  417072:	inc    ebx
  417073:	jecxz  0x4170ce
  417075:	ss ds and al,0xc
  417079:	aad    0xad
  41707b:	xchg   edx,eax
  41707c:	stos   BYTE PTR es:[edi],al
  41707d:	lods   eax,DWORD PTR ds:[esi]
  41707e:	inc    eax
  41707f:	mov    esp,0x63c1307b
  417084:	call   0xd244:0x2db3ef2a
  41708b:	mov    esp,0xc70e9d45
  417090:	adc    esp,DWORD PTR [esi+0x13]
  417093:	lods   eax,DWORD PTR ds:[esi]
  417094:	dec    DWORD PTR [edx-0x66]
  417097:	out    0x86,eax
  417099:	aam    0x0
  41709b:	inc    ebx
  41709c:	xor    BYTE PTR [edx],bl
  41709e:	das    
  41709f:	sbb    eax,0xbd1efa8b
  4170a4:	push   ecx
  4170a5:	xor    esp,ebp
  4170a7:	sbb    esi,edi
  4170a9:	mov    ds:0x969addc5,eax
  4170ae:	shl    DWORD PTR [ebp+eiz*8-0x4b],0x24
  4170b3:	dec    esp
  4170b4:	pop    ecx
  4170b5:	mov    ebx,0xd0ed8a7a
  4170ba:	scas   al,BYTE PTR es:[edi]
  4170bb:	call   0x23565b2f
  4170c0:	shl    BYTE PTR [edx+0x62],cl
  4170c3:	xchg   esp,eax
  4170c4:	mov    al,0x68
  4170c6:	shr    esp,1
  4170c8:	and    dh,BYTE PTR [ebp+0x18fdb344]
  4170ce:	daa    
  4170cf:	mov    ebx,0x4b2a821a
  4170d4:	sbb    ecx,0x5656e11
  4170da:	lods   al,BYTE PTR ds:[esi]
  4170db:	mov    BYTE PTR [edx-0x2a],bh
  4170de:	repnz daa 
  4170e0:	clc    
  4170e1:	push   esi
  4170e2:	xlat   BYTE PTR ds:[ebx]
  4170e3:	inc    ebp
  4170e4:	mov    eax,ds:0x3fc56fc1
  4170e9:	add    esp,DWORD PTR [edx+0x1438cb98]
  4170ef:	cld    
  4170f0:	scas   al,BYTE PTR es:[edi]
  4170f1:	jge    0x417146
  4170f3:	sbb    al,0xe7
  4170f5:	cmp    ah,0x3e
  4170f8:	cmp    bl,BYTE PTR [esi-0x4e]
  4170fb:	xchg   BYTE PTR [edx+ebp*2-0x7d],bh
  4170ff:	inc    ecx
  417100:	rcl    BYTE PTR [esi-0x1a11e733],0x4d
  417107:	dec    edx
  417108:	sub    ch,ah
  41710a:	dec    edi
  41710b:	fnsave [edx+0x68]
  41710e:	sbb    al,BYTE PTR [ecx-0x23]
  417111:	push   eax
  417112:	jmp    0x4170d3
  417114:	fdiv   QWORD PTR [ecx]
  417116:	outs   dx,DWORD PTR ds:[esi]
  417117:	(bad)  
  417118:	sbb    BYTE PTR [ebp+0x41],dl
  41711b:	enter  0xcff,0x5a
  41711f:	scas   al,BYTE PTR es:[edi]
  417120:	fisttp WORD PTR [ebx-0x37ff6048]
  417126:	stc    
  417127:	fiadd  DWORD PTR [esi-0x64]
  41712a:	jle    0x41714b
  41712c:	ret    
  41712d:	jb     0x417182
  41712f:	or     ebp,esi
  417131:	adc    DWORD PTR [edx-0xc],ebx
  417134:	icebp  
  417135:	addr16 and eax,0xb1d5f8b3
  41713b:	cli    
  41713c:	jnp    0x417135
  41713e:	in     eax,dx
  41713f:	inc    edi
  417140:	pop    es
  417141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417142:	packssdw mm2,QWORD PTR [ebp-0x5d]
  417146:	stos   DWORD PTR es:[edi],eax
  417147:	xchg   ebx,eax
  417148:	pop    ebx
  417149:	arpl   dx,bx
  41714b:	outs   dx,DWORD PTR ds:[esi]
  41714c:	ret    
  41714d:	movups xmm6,xmm0
  417150:	mov    bl,0xc1
  417152:	inc    edx
  417153:	out    0xd0,al
  417155:	enter  0x8f54,0x28
  417159:	sbb    BYTE PTR [esi-0x32],bh
  41715c:	inc    ebp
  41715d:	shr    BYTE PTR [eax+0x3d],cl
  417160:	cmp    esi,edx
  417162:	mov    edx,0x612d8537
  417167:	lea    esi,[eax]
  417169:	stc    
  41716a:	pop    edx
  41716b:	push   es
  41716c:	jmpw   0x3736
  417170:	pusha  
  417171:	mov    ebp,0x56b49ceb
  417176:	mov    BYTE PTR ds:[edi-0x717c5522],bl
  41717d:	fcmovnb st,st(6)
  41717f:	test   DWORD PTR [esi-0x5c],ecx
  417182:	push   ss
  417183:	cld    
  417184:	mov    ds:0x2b646e7,al
  417189:	sbb    dl,bh
  41718b:	scas   al,BYTE PTR es:[edi]
  41718c:	or     DWORD PTR [ecx],0xffffff90
  41718f:	mov    es,WORD PTR [ebx+eax*1-0x1a]
  417193:	cs enter 0x81d8,0xc2
  417198:	xchg   BYTE PTR [edx],cl
  41719a:	inc    BYTE PTR [edx-0x18818619]
  4171a0:	or     eax,0x177207de
  4171a5:	das    
  4171a6:	ret    
  4171a7:	jns    0x41712c
  4171a9:	pop    ss
  4171aa:	arpl   WORD PTR [edi-0x4],bx
  4171ad:	ficomp DWORD PTR [ebx+0x6a74cb9a]
  4171b3:	aaa    
  4171b4:	pop    esi
  4171b5:	outs   dx,BYTE PTR ds:[esi]
  4171b6:	int3   
  4171b7:	push   ss
  4171b8:	jae    0x417239
  4171ba:	mov    dl,0x91
  4171bc:	in     eax,dx
  4171bd:	xor    DWORD PTR [ebp+0x76],edx
  4171c0:	jno    0x41718e
  4171c2:	mov    bl,0x91
  4171c4:	push   esp
  4171c5:	mov    bl,BYTE PTR [ebp-0x64]
  4171c8:	adc    cl,cl
  4171ca:	and    DWORD PTR [edi+0x67dd7c54],ecx
  4171d0:	dec    esi
  4171d1:	inc    ebp
  4171d2:	cli    
  4171d3:	jns    0x417219
  4171d5:	nop
  4171d6:	pusha  
  4171d7:	sub    eax,0x708a9af6
  4171dc:	jmp    0x2fab:0x5aebb993
  4171e3:	fcom   QWORD PTR [edx]
  4171e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171e6:	leave  
  4171e7:	das    
  4171e8:	inc    eax
  4171e9:	ds dec edx
  4171eb:	jae    0x4171ad
  4171ed:	int    0xdc
  4171ef:	test   BYTE PTR ds:0xf30bb621,0x40
  4171f6:	fs fsqrt 
  4171f9:	(bad)  
  4171fa:	rcl    BYTE PTR [eax+ecx*4+0x3093ef71],1
  417201:	ror    DWORD PTR [edx],cl
  417203:	call   0x9cf30b9
  417208:	ins    BYTE PTR es:[edi],dx
  417209:	jne    0x417223
  41720b:	dec    ebx
  41720c:	mov    DWORD PTR [edi+0x39dc9acf],esi
  417212:	mov    ss,ebx
  417214:	scas   eax,DWORD PTR es:[edi]
  417215:	inc    esp
  417216:	mov    bh,0x66
  417218:	sbb    esi,DWORD PTR [edx+0x6628cf53]
  41721e:	sbb    ecx,DWORD PTR [ebx+0x6d937d12]
  417224:	pushf  
  417225:	fcomp  DWORD PTR [esi-0x41935fe6]
  41722b:	sub    bh,BYTE PTR [eax-0x4cdda137]
  417231:	out    0x89,al
  417233:	popf   
  417234:	push   esp
  417235:	inc    ebx
  417236:	out    dx,al
  417237:	faddp  st(6),st
  417239:	cmc    
  41723a:	mov    bl,0xac
  41723c:	shl    BYTE PTR [esi],1
  41723e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41723f:	fwait
  417240:	fs enter 0x8d80,0xb8
  417245:	push   eax
  417246:	ins    DWORD PTR es:[edi],dx
  417247:	aaa    
  417248:	test   al,0xe6
  41724a:	sub    DWORD PTR [esi+edx*2],0xe5c87db4
  417251:	loop   0x4171ff
  417253:	dec    esi
  417254:	outs   dx,DWORD PTR ds:[esi]
  417255:	push   ebx
  417256:	sbb    ebp,edi
  417258:	push   0x16
  41725a:	push   DWORD PTR [edi-0x58ef68ef]
  417260:	push   esi
  417261:	and    ecx,DWORD PTR ss:[edi-0xbabc0af]
  417268:	cmp    eax,0xd0e7880e
  41726d:	repnz sub ebp,ebx
  417270:	add    dl,BYTE PTR [edi]
  417272:	cli    
  417273:	mov    dl,0xef
  417275:	pop    edi
  417276:	add    eax,DWORD PTR [ecx+0x104ff693]
  41727c:	loope  0x417268
  41727e:	xlat   BYTE PTR ds:[ebx]
  41727f:	loop   0x41727f
  417281:	or     ah,BYTE PTR [edi+0x13]
  417284:	popa   
  417285:	fdivr  QWORD PTR [ebx+0x5977f321]
  41728b:	mov    edi,0xf57baa9
  417290:	je     0x41727b
  417292:	adc    eax,0x846be79a
  417297:	and    dl,BYTE PTR [ebp-0x47]
  41729a:	cmp    dl,BYTE PTR ds:0x44272f64
  4172a0:	pop    esp
  4172a1:	jo     0x41726d
  4172a3:	ror    BYTE PTR [eax-0x3],0xbb
  4172a7:	sub    eax,0x17875c91
  4172ac:	clc    
  4172ad:	mov    edi,0xd5ad2d
  4172b2:	out    0x34,al
  4172b4:	enter  0x538c,0x7a
  4172b8:	mov    ecx,0x7c0ccd1c
  4172be:	ret    
  4172bf:	sub    BYTE PTR [esi-0x49],bh
  4172c2:	push   ebp
  4172c3:	or     BYTE PTR [eax-0x2fc56270],al
  4172c9:	cmp    eax,0x5db03a93
  4172ce:	mov    ds,edi
  4172d0:	lock pushf 
  4172d2:	iret   
  4172d3:	mov    al,ds:0xe2759ecb
  4172d8:	pop    eax
  4172d9:	aam    0x18
  4172db:	int    0x23
  4172dd:	lahf   
  4172de:	sub    dl,al
  4172e0:	push   esp
  4172e1:	fisubr DWORD PTR [edx+0x2f31837a]
  4172e7:	out    dx,al
  4172e8:	imul   esi,DWORD PTR [eax+ebx*4-0x5],0x19da5762
  4172f0:	das    
  4172f1:	mov    ds:0xcfc491c9,eax
  4172f6:	outs   dx,DWORD PTR ds:[esi]
  4172f7:	nop
  4172f8:	pop    edi
  4172f9:	adc    eax,0x78e75f03
  4172fe:	out    0x6e,al
  417300:	xor    eax,0x1ba43e6c
  417305:	sub    DWORD PTR [edi-0x7e],edi
  417308:	movntq QWORD PTR [esi-0x752b9503],mm2
  41730f:	imul   ecx,ebx,0x72493496
  417315:	adc    eax,0x530fcdae
  41731a:	and    ebp,DWORD PTR [eax-0x6c]
  41731d:	mov    ecx,0x1a19e474
  417322:	cmp    ebp,DWORD PTR ds:0xf8e1e9d9
  417328:	mov    ch,0x35
  41732a:	shl    DWORD PTR [edi],1
  41732c:	call   0x5f9c3eee
  417331:	mov    al,0x8c
  417333:	xchg   ebx,eax
  417334:	dec    edi
  417335:	psrlq  mm3,QWORD PTR [ecx]
  417338:	loop   0x417340
  41733a:	adc    BYTE PTR [esi+edi*4+0x7710590e],ah
  417341:	adc    eax,0x301c1c5b
  417346:	shr    esi,1
  417348:	scas   eax,DWORD PTR es:[edi]
  417349:	retf   
  41734a:	mul    bl
  41734c:	retf   
  41734d:	sti    
  41734e:	lea    esi,[ecx]
  417350:	shr    DWORD PTR [edi-0x78],1
  417353:	sahf   
  417354:	rcr    BYTE PTR [edi-0x76],0xdb
  417358:	jl     0x417399
  41735a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41735b:	hlt    
  41735c:	and    BYTE PTR [ecx],bl
  41735e:	cs push esi
  417360:	call   0x5e0e:0xf8eb38c2
  417367:	sub    DWORD PTR [edx-0x10],ecx
  41736a:	adc    ah,BYTE PTR [esi+0x5b]
  41736d:	retf   0x6ebd
  417370:	adc    BYTE PTR [edi],0x7c
  417373:	cmp    ah,BYTE PTR [ecx+0x28]
  417376:	cld    
  417377:	cli    
  417378:	mov    ecx,0x1fc9b3fe
  41737d:	adc    ah,dh
  41737f:	leave  
  417380:	clc    
  417381:	jno    0x417313
  417383:	pop    ds
  417384:	mov    BYTE PTR [ecx-0x2],ch
  417387:	(bad)  
  417388:	jo     0x41739a
  41738a:	test   ah,ch
  41738c:	and    DWORD PTR [esi+ebx*4-0x117db78e],esp
  417393:	aaa    
  417394:	popf   
  417395:	ins    DWORD PTR es:[edi],dx
  417396:	or     al,0x2c
  417398:	mov    dh,0x2a
  41739a:	(bad)  
  41739b:	sub    al,0x37
  41739d:	xor    dl,BYTE PTR [edx+esi*8+0x280c0ca2]
  4173a4:	push   ss
  4173a5:	outs   dx,BYTE PTR ds:[esi]
  4173a6:	fwait
  4173a7:	pop    esp
  4173a8:	jl     0x41736b
  4173aa:	in     eax,0x93
  4173ac:	sub    al,BYTE PTR [ecx+0x7e]
  4173af:	in     eax,0xbf
  4173b1:	xor    eax,0x5eb9528d
  4173b6:	jg     0x41734d
  4173b8:	or     al,0x47
  4173ba:	aam    0xda
  4173bc:	pop    ebx
  4173bd:	retf   
  4173be:	pop    esp
  4173bf:	cmp    edi,DWORD PTR [esi+0x67ff0ce6]
  4173c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173c6:	outs   dx,BYTE PTR ds:[esi]
  4173c7:	push   ss
  4173c8:	mov    bh,0x6b
  4173ca:	fadd   DWORD PTR [ecx]
  4173cc:	lds    eax,FWORD PTR [esi+0x5afa1a5e]
  4173d2:	fcomp  QWORD PTR [edi-0x768940b5]
  4173d8:	fist   WORD PTR [ebx+edx*2-0x5f]
  4173dc:	sbb    BYTE PTR [ebp+0x5768ec3],bl
  4173e2:	popf   
  4173e3:	mov    edi,0xc08879a0
  4173e8:	(bad)  
  4173e9:	jmp    0x417452
  4173eb:	fistp  DWORD PTR ds:0x6673f91
  4173f1:	cs stos DWORD PTR es:[edi],eax
  4173f3:	sub    al,0xf5
  4173f5:	cmp    al,0xe1
  4173f7:	into   
  4173f8:	mov    WORD PTR [ebp-0x1b],cs
  4173fb:	ror    DWORD PTR [esi+0x2],1
  4173fe:	fdiv   DWORD PTR [eax]
  417400:	push   ebx
  417402:	jmp    FWORD PTR [eax]
  417404:	aas    
  417405:	xor    al,0xc8
  417407:	int3   
  417408:	fsubr  QWORD PTR [esp+eax*4-0x5]
  41740c:	push   ss
  41740d:	loope  0x4173d9
  41740f:	aam    0x41
  417411:	test   al,0xe7
  417413:	dec    esi
  417414:	retf   
  417415:	aaa    
  417416:	xchg   ebx,eax
  417417:	out    dx,al
  417418:	jl     0x41744e
  41741a:	add    al,0x2c
  41741c:	pop    ss
  41741d:	out    0x6b,al
  41741f:	into   
  417420:	fist   WORD PTR [edx+0x4b]
  417423:	fmul   QWORD PTR [ecx]
  417425:	jno    0x417415
  417427:	loopne 0x417495
  417429:	dec    sp
  41742b:	aad    0x31
  41742d:	cld    
  41742e:	lods   eax,DWORD PTR ds:[esi]
  41742f:	enter  0x9c71,0x98
  417433:	lods   eax,DWORD PTR ds:[esi]
  417434:	out    dx,al
  417435:	out    0xa,eax
  417437:	sub    DWORD PTR [ebp-0x3a712373],0x6717d5d2
  417441:	push   edx
  417442:	jbe    0x4173e3
  417444:	push   cs
  417445:	add    DWORD PTR [edi-0x28cc47c7],0xc261dce9
  41744f:	dec    ebx
  417450:	adc    edi,ebx
  417452:	or     DWORD PTR [edi],esp
  417454:	sbb    DWORD PTR [ecx-0x23b304a4],eax
  41745a:	(bad)  
  41745c:	ja     0x417458
  41745e:	dec    edx
  41745f:	and    BYTE PTR [ebx-0x42],dl
  417462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417463:	hlt    
  417464:	ror    ah,0x9d
  417467:	icebp  
  417468:	clc    
  417469:	hlt    
  41746a:	(bad)  
  41746b:	mov    ecx,0x1d660092
  417470:	dec    esi
  417471:	or     BYTE PTR [ebp+0x3636deb4],0xc3
  417478:	or     BYTE PTR [edi+0x21e3bb52],dh
  41747e:	mov    BYTE PTR [edi+0x1e],al
  417481:	dec    edx
  417482:	push   es
  417483:	mov    ecx,0x740e5dca
  417488:	xor    DWORD PTR [edi],edx
  41748a:	mov    ebx,0xed6f1a12
  41748f:	mov    dl,0xf
  417491:	scas   al,BYTE PTR es:[edi]
  417492:	call   0x671f:0x2d54dc98
  417499:	adc    al,bl
  41749b:	out    0x2,al
  41749d:	ret    
  41749e:	xlat   BYTE PTR ds:[ebx]
  41749f:	into   
  4174a0:	inc    ebx
  4174a1:	adc    ecx,DWORD PTR [edi-0x50]
  4174a4:	cld    
  4174a5:	xor    DWORD PTR [ebp-0x485131ea],0x7a
  4174ac:	jl     0x4174e5
  4174ae:	inc    eax
  4174af:	mov    WORD PTR [ebx],ds
  4174b1:	push   ss
  4174b2:	pop    ebx
  4174b3:	mov    dh,0x47
  4174b5:	mov    ds:0xed8a0fe4,al
  4174ba:	(bad)  
  4174bb:	mov    ecx,0x71d60d3a
  4174c0:	addr16 icebp 
  4174c2:	cmp    bh,BYTE PTR [esi+eiz*1+0x7c4e787f]
  4174c9:	mov    ds:0xf2d467fb,eax
  4174ce:	ins    BYTE PTR es:[edi],dx
  4174cf:	(bad)  
  4174d0:	icebp  
  4174d1:	and    al,0x66
  4174d3:	jne    0x41751a
  4174d5:	inc    ebx
  4174d6:	push   esi
  4174d7:	adc    eax,0xb392df45
  4174dc:	pushf  
  4174dd:	ja     0x417479
  4174df:	sub    esi,edx
  4174e1:	(bad)  
  4174e2:	outs   dx,DWORD PTR ds:[esi]
  4174e3:	sbb    bh,BYTE PTR [edi]
  4174e5:	mov    gs,WORD PTR [esi+0x5c]
  4174e8:	dec    ebp
  4174e9:	cs jge 0x417561
  4174ec:	(bad)  
  4174ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174ee:	ja     0x417499
  4174f0:	es inc esp
  4174f2:	nop
  4174f3:	scas   al,BYTE PTR es:[edi]
  4174f4:	bound  ebx,QWORD PTR [edx]
  4174f6:	(bad)  
  4174f7:	mov    dh,0x3d
  4174f9:	and    al,0x25
  4174fb:	loope  0x417578
  4174fd:	hlt    
  4174fe:	js     0x4174d5
  417500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417501:	(bad)
  417504:	aas    
  417505:	in     eax,dx
  417506:	mov    BYTE PTR [edi-0x80],bh
  417509:	push   ecx
  41750a:	xchg   esi,eax
  41750b:	fistp  DWORD PTR [ecx-0x665ae5e2]
  417511:	xor    al,0xb9
  417513:	or     al,0x47
  417515:	pop    ss
  417516:	and    al,0xbe
  417518:	sub    dl,al
  41751a:	addr16 pop ds
  41751c:	xchg   BYTE PTR [edx-0x7b],ah
  41751f:	stc    
  417520:	div    BYTE PTR [eax+eiz*2+0x5d]
  417524:	and    cl,BYTE PTR [ebx]
  417526:	mov    ah,0x59
  417528:	ud0    esi,edi
  41752b:	jle    0x417564
  41752d:	outs   dx,BYTE PTR ds:[esi]
  41752e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41752f:	fs or  eax,0x8d5e1a7c
  417535:	call   0xe835fcf3
  41753a:	in     eax,0x62
  41753c:	mov    BYTE PTR [ebx+0x67],al
  41753f:	cmp    al,0x6c
  417541:	push   ecx
  417542:	popf   
  417543:	add    BYTE PTR [esi-0x68be9e93],dh
  417549:	jle    0x417552
  41754b:	inc    edi
  41754c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41754d:	mov    esp,0x3b12febe
  417552:	in     eax,0x9b
  417554:	sub    eax,0xf2ea09ef
  417559:	sub    cl,cl
  41755b:	and    dh,0xf1
  41755e:	mov    es,WORD PTR [ecx+0x57]
  417561:	xchg   BYTE PTR [edx],bh
  417563:	cld    
  417564:	dec    ebp
  417565:	ja     0x41751a
  417567:	mov    ch,BYTE PTR [edx]
  417569:	out    dx,al
  41756a:	idiv   BYTE PTR [ebx]
  41756c:	lea    eax,[edx+0x3afb44a5]
  417572:	xor    DWORD PTR [edx-0x4f8ae6b6],esp
  417578:	push   edx
  417579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41757a:	bound  ebx,QWORD PTR [edx+0x671fa3]
  417580:	in     eax,dx
  417581:	add    eax,0xda52a6a3
  417586:	ins    BYTE PTR es:[edi],dx
  417587:	adc    DWORD PTR [edi-0x57d92690],edx
  41758d:	add    DWORD PTR [edx],esp
  41758f:	and    al,0x8b
  417591:	sub    al,0x1
  417593:	and    edi,ebx
  417595:	sub    al,0xb7
  417597:	xor    al,0xe3
  417599:	lods   al,BYTE PTR ds:[esi]
  41759a:	mov    ch,0xa1
  41759c:	push   edi
  41759d:	cmc    
  41759e:	sbb    al,0x7
  4175a0:	out    dx,eax
  4175a1:	adc    eax,0x90f828d7
  4175a6:	pushf  
  4175a7:	sub    esp,DWORD PTR [eax+0x7a]
  4175aa:	xchg   edi,eax
  4175ab:	sti    
  4175ac:	xlat   BYTE PTR ds:[ebx]
  4175ad:	mov    edi,0x2f59fc1a
  4175b2:	es hlt 
  4175b4:	mov    ebp,0xfde04bfb
  4175b9:	pop    ebx
  4175ba:	or     esp,DWORD PTR [ecx+edi*8-0x50aabf12]
  4175c1:	and    DWORD PTR [eax+0x532994ba],esi
  4175c7:	jmp    0x41763d
  4175c9:	jp     0x417595
  4175cb:	push   ecx
  4175cc:	adc    BYTE PTR [ebx-0x1293840],0xcf
  4175d3:	call   0x2317:0x79eabf6c
  4175da:	add    DWORD PTR [ebx+0x56],ebx
  4175dd:	and    ebp,esi
  4175df:	es sbb al,0xf0
  4175e2:	je     0x417643
  4175e4:	xor    eax,0x930fc235
  4175e9:	inc    eax
  4175ea:	cmp    DWORD PTR [esi],ebp
  4175ec:	cs dec esi
  4175ee:	or     edi,ebx
  4175f0:	in     eax,dx
  4175f1:	fcmovb st,st(2)
  4175f3:	popa   
  4175f4:	shl    BYTE PTR [eax-0x70b50abc],0x4
  4175fb:	add    edi,DWORD PTR [ebx-0x75]
  4175fe:	pop    edi
  4175ff:	sbb    eax,0x509bf56e
  417604:	cmp    BYTE PTR [edx],bh
  417606:	leave  
  417607:	sub    bh,BYTE PTR [edi+0x1fd917ad]
  41760d:	loopne 0x4175d7
  41760f:	inc    eax
  417610:	stos   DWORD PTR es:[edi],eax
  417611:	mov    al,ah
  417613:	sub    eax,0xe9781296
  417618:	fwait
  417619:	call   0x9c5a:0x6ef78fe9
  417620:	scas   eax,DWORD PTR es:[edi]
  417621:	xor    eax,0xe1174af5
  417626:	xor    esp,edx
  417628:	mov    edi,0xa8126274
  41762d:	inc    esp
  41762e:	ds aas 
  417630:	sti    
  417631:	dec    ecx
  417632:	es push ecx
  417634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417635:	jb     0x417604
  417637:	out    dx,eax
  417638:	(bad)  
  417639:	mov    bl,0xb1
  41763b:	mov    cl,0xc8
  41763d:	sub    BYTE PTR [edx+0x5748b537],0xb9
  417644:	mov    bh,0xf5
  417646:	push   ebx
  417647:	sub    al,0x14
  417649:	out    dx,eax
  41764a:	jno    0x4175f5
  41764c:	mov    al,0xf5
  41764e:	data16 out dx,al
  417650:	sti    
  417651:	pop    ss
  417652:	cwde   
  417653:	adc    DWORD PTR [esi-0x750d7d62],edx
  417659:	out    0xe6,eax
  41765b:	pushf  
  41765c:	out    0x42,al
  41765e:	or     al,0x11
  417660:	idiv   cl
  417662:	mov    esi,0x9c17fdd9
  417667:	std    
  417668:	dec    edx
  417669:	cs shl ch,1
  41766c:	adc    cl,BYTE PTR [eax]
  41766e:	in     eax,0x1e
  417670:	and    dh,BYTE PTR [esp+eiz*4+0x43]
  417674:	xor    eax,0xa665366
  417679:	mov    ds:0xce552458,al
  41767e:	outs   dx,BYTE PTR ds:[esi]
  41767f:	pop    esp
  417680:	mov    WORD PTR [ecx+0x57],es
  417683:	ds push edx
  417685:	cdq    
  417686:	aas    
  417687:	dec    eax
  417688:	sub    DWORD PTR [ecx*2+0x59e3f5b6],0xfffffffe
  417690:	mov    DWORD PTR [esi+0x196cdb38],eax
  417696:	sub    ebx,edx
  417698:	xor    WORD PTR [ebp+0x23],cx
  41769c:	in     al,0x34
  41769e:	push   es
  41769f:	fnsave [edx+ebx*4-0x38512d2c]
  4176a6:	fs test al,0x1f
  4176a9:	xor    BYTE PTR [ebx],0x2
  4176ac:	mov    ds:0x907ce23e,eax
  4176b1:	psubq  mm0,QWORD PTR [esi]
  4176b4:	sbb    cl,BYTE PTR [esi-0x6]
  4176b7:	aad    0xaf
  4176b9:	or     al,0xa2
  4176bb:	or     DWORD PTR [ebx+ecx*1-0x56],ebp
  4176bf:	jle    0x4176b1
  4176c1:	sbb    dl,BYTE PTR [ebx+esi*8]
  4176c4:	push   ebx
  4176c5:	sbb    esi,DWORD PTR [esi]
  4176c7:	sbb    DWORD PTR [ecx+ebp*4+0x25],edi
  4176cb:	mov    dh,0x93
  4176cd:	sub    DWORD PTR [ecx+0x6b042946],0xfabd2dd
  4176d7:	sbb    ah,BYTE PTR [ebp-0x791bb829]
  4176dd:	out    dx,eax
  4176de:	ret    
  4176df:	mov    edi,0xf13809e5
  4176e4:	cmp    DWORD PTR [eax+0x1b9e2733],esp
  4176ea:	push   edi
  4176eb:	in     al,0x94
  4176ed:	(bad)  
  4176ee:	stos   BYTE PTR es:[edi],al
  4176ef:	lea    edx,[eax]
  4176f1:	fiadd  DWORD PTR [eax-0x60]
  4176f4:	cmp    DWORD PTR [eax+0x59307573],0x50
  4176fb:	and    eax,0x9e839d69
  417700:	dec    ecx
  417701:	pop    es
  417702:	add    esi,ebx
  417704:	adc    ecx,DWORD PTR es:[eax+edi*4]
  417708:	in     al,dx
  417709:	mov    ebp,0x3a837aa7
  41770e:	sbb    ch,dl
  417710:	sub    ecx,DWORD PTR [ebx+0x43d31b9b]
  417716:	rcr    DWORD PTR [esi-0x57],cl
  417719:	ds add bl,0xf
  41771d:	xor    DWORD PTR [edx+0x2c],edi
  417720:	inc    ecx
  417721:	or     eax,0xdea0832e
  417726:	mov    al,0x12
  417728:	retf   
  417729:	xchg   esi,eax
  41772a:	aad    0x77
  41772c:	jp     0x417735
  41772e:	dec    edi
  41772f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417730:	xor    BYTE PTR ds:0xd6f2678a,bh
  417736:	std    
  417737:	mov    bh,0x1e
  417739:	cld    
  41773a:	pop    esi
  41773b:	mov    dl,0x92
  41773d:	xchg   ebx,eax
  41773e:	push   eax
  41773f:	imul   BYTE PTR [esp+eiz*4+0x55]
  417743:	aaa    
  417744:	sub    dl,bh
  417746:	inc    edi
  417747:	scas   al,BYTE PTR es:[edi]
  417748:	gs sub dh,bl
  41774b:	das    
  41774c:	loopne 0x417780
  41774e:	xor    bh,BYTE PTR [ebx+ebp*2+0x29]
  417752:	push   esi
  417753:	rcr    BYTE PTR [edx],1
  417755:	pop    ecx
  417756:	xor    al,0x80
  417758:	and    bl,BYTE PTR [edi-0x434173b3]
  41775e:	loope  0x41775a
  417760:	lods   eax,DWORD PTR ds:[esi]
  417761:	scas   eax,DWORD PTR es:[edi]
  417762:	fwait
  417763:	sbb    BYTE PTR [esp+eax*2-0x39dfc390],ah
  41776a:	retf   
  41776b:	xor    DWORD PTR [esi+0x48],edi
  41776e:	xchg   BYTE PTR [edx-0x330516d0],dl
  417774:	and    DWORD PTR [esi+0x7d3cc021],ebp
  41777a:	enter  0xa16,0xec
  41777e:	xlat   BYTE PTR ds:[ebx]
  41777f:	int    0x42
  417781:	test   ebx,ecx
  417783:	jmp    0x3002848d
  417788:	jae    0x4177e7
  41778a:	sbb    ebp,0xffffffb0
  41778d:	push   cs
  41778e:	idiv   BYTE PTR [eax+0xc]
  417791:	arpl   WORD PTR [ecx+0x42],si
  417794:	shl    dl,1
  417796:	in     eax,0x73
  417798:	stos   DWORD PTR es:[edi],eax
  417799:	pushf  
  41779a:	pop    edi
  41779b:	and    DWORD PTR [esi+eax*8],ebx
  41779e:	scas   al,BYTE PTR es:[di]
  4177a0:	adc    eax,DWORD PTR [edi+0x35]
  4177a3:	test   eax,0xa60e69c7
  4177a8:	sbb    eax,0xb5f2f386
  4177ad:	dec    edi
  4177ae:	retf   
  4177af:	outs   dx,BYTE PTR ds:[esi]
  4177b0:	jno    0x4177fb
  4177b2:	(bad)  
  4177b3:	xor    eax,0xa3950d78
  4177b8:	pop    edx
  4177b9:	or     edx,DWORD PTR [ebx-0x4d]
  4177bc:	fadd   DWORD PTR [ecx+ebp*8+0x7d]
  4177c0:	push   cs
  4177c1:	and    DWORD PTR [esi-0x60],0x40
  4177c5:	jno    0x41774e
  4177c7:	call   0x1a99a7c3
  4177cc:	loop   0x417771
  4177ce:	inc    edx
  4177cf:	bound  ebx,QWORD PTR [ecx+edi*1+0x4d8fc79c]
  4177d6:	adc    edi,edi
  4177d8:	in     eax,0xce
  4177da:	lock dec edx
  4177dc:	fiadd  WORD PTR [ecx+edx*8+0x3d]
  4177e0:	sar    DWORD PTR [ebp+0x5c654b98],1
  4177e6:	xchg   DWORD PTR [ecx],edi
  4177e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177e9:	fidivr DWORD PTR [edi]
  4177eb:	(bad)  
  4177ec:	jl     0x4177d2
  4177ee:	shl    ebp,1
  4177f0:	retf   
  4177f1:	pop    edx
  4177f2:	mov    edx,0x52e50598
  4177f7:	icebp  
  4177f8:	push   0xffffffe2
  4177fa:	push   cs
  4177fb:	jns    0x4177c9
  4177fd:	dec    edx
  4177fe:	sti    
  4177ff:	aas    
  417800:	dec    esi
  417801:	into   
  417802:	in     eax,dx
  417803:	jmp    0x92ec:0xb05e728c
  41780a:	sub    eax,0x2865e982
  41780f:	jno    0x4177db
  417811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417812:	and    DWORD PTR [ebx],eax
  417814:	ret    
  417815:	outs   dx,DWORD PTR ds:[esi]
  417816:	push   0xf1e021fd
  41781b:	enter  0x816c,0xff
  41781f:	add    al,0xa6
  417821:	ss push 0x1d
  417824:	test   eax,0x47fb7e5a
  417829:	sub    al,0x1f
  41782b:	jae    0x4177b4
  41782d:	pop    es
  41782e:	(bad)  
  41782f:	sahf   
  417830:	and    DWORD PTR [ecx+ebx*1-0x42],0x3d65544d
  417838:	loope  0x417848
  41783a:	rcl    BYTE PTR [ebx+0x7f],0x4b
  41783e:	xchg   edx,eax
  41783f:	pop    ebx
  417840:	stos   DWORD PTR es:[edi],eax
  417841:	xchg   esi,eax
  417842:	test   eax,0xde53921e
  417847:	sbb    eax,0x82e8cf6a
  41784c:	cdq    
  41784d:	lea    ebx,[edx]
  41784f:	cld    
  417850:	push   edx
  417851:	inc    edx
  417852:	ds aaa 
  417854:	cmp    BYTE PTR [ebp-0x6f],0x14
  417858:	aad    0x61
  41785a:	mov    ebp,0x41768d5
  41785f:	push   edx
  417860:	jno    0x4178be
  417862:	jmp    0x4178b0
  417864:	or     bh,ch
  417866:	push   0x42
  417868:	sbb    ebp,edx
  41786a:	push   ebx
  41786b:	mov    ch,BYTE PTR [eax+0xb14f645]
  417871:	xor    edi,DWORD PTR [eax-0x6a5f5b8e]
  417877:	xchg   dh,ah
  417879:	adc    eax,0x88943c8b
  41787e:	(bad)  [eax+0x2f]
  417881:	and    esi,DWORD PTR [ebp+ecx*1-0x22]
  417885:	lahf   
  417886:	cdq    
  417887:	enter  0xab1e,0x9f
  41788b:	push   cs
  41788c:	xor    ah,BYTE PTR [edx-0x7f61ce24]
  417892:	add    bh,dl
  417894:	int    0xf9
  417896:	dec    ebx
  417897:	inc    esi
  417898:	push   ebp
  417899:	dec    eax
  41789a:	mov    al,0xca
  41789c:	hlt    
  41789d:	jnp    0x4178e5
  41789f:	xchg   esi,eax
  4178a0:	out    0xba,eax
  4178a2:	dec    edx
  4178a3:	std    
  4178a4:	pop    es
  4178a5:	int3   
  4178a6:	xor    dh,BYTE PTR [edi-0x16]
  4178a9:	out    0xe0,eax
  4178ab:	mov    cs,esp
  4178ad:	push   ss
  4178ae:	push   edi
  4178af:	sub    BYTE PTR [ebp+0x47],cl
  4178b2:	pop    esp
  4178b3:	push   ds
  4178b4:	mov    ?,esp
  4178b6:	popf   
  4178b7:	cmp    DWORD PTR [ebp+0x155a27c4],0x4f45519
  4178c1:	aas    
  4178c2:	cmp    eax,0x4cd5f91a
  4178c7:	mov    WORD PTR [ecx-0x55a0d1bd],ss
  4178cd:	pop    edx
  4178ce:	pop    ecx
  4178cf:	leave  
  4178d0:	pop    ebx
  4178d1:	jo     0x417896
  4178d3:	pop    edx
  4178d4:	pop    ebx
  4178d5:	jb     0x41785a
  4178d7:	xlat   BYTE PTR ds:[ebx]
  4178d8:	jo     0x41790e
  4178da:	or     al,0xbd
  4178dc:	push   edx
  4178dd:	lods   al,BYTE PTR ds:[esi]
  4178de:	push   eax
  4178df:	ss ins DWORD PTR es:[edi],dx
  4178e1:	ins    BYTE PTR es:[edi],dx
  4178e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178e3:	ror    DWORD PTR [edi],1
  4178e5:	(bad)  
  4178e6:	test   ebx,0x2ac9eb6
  4178ec:	push   es
  4178ed:	jae    0x417879
  4178ef:	ffree  st(1)
  4178f1:	test   BYTE PTR [edx+0x65853669],ch
  4178f7:	xlat   BYTE PTR ds:[ebx]
  4178f8:	jb     0x4178af
  4178fa:	aaa    
  4178fb:	gs mov ah,0x5
  4178fe:	push   es
  4178ff:	(bad)  
  417900:	cmc    
  417901:	ja     0x417917
  417903:	sbb    al,0x2e
  417905:	xchg   edx,eax
  417906:	scas   eax,DWORD PTR es:[edi]
  417907:	bound  esi,QWORD PTR [esi+0x2683424a]
  41790d:	shr    BYTE PTR [ecx-0x2c69bff9],cl
  417913:	cmp    al,0x82
  417915:	sub    dl,0xeb
  417918:	sbb    dl,dh
  41791a:	xor    edi,esi
  41791c:	adc    BYTE PTR [edi+0x66],ch
  41791f:	shl    ebx,1
  417921:	shl    DWORD PTR [ecx+0x510497da],1
  417927:	jmp    0x27db:0x6a99443c
  41792e:	jb     0x417908
  417930:	cmc    
  417931:	mov    bh,0x73
  417933:	inc    edi
  417934:	lods   al,BYTE PTR ds:[esi]
  417935:	in     al,dx
  417936:	popa   
  417937:	imul   eax,ebp,0xffffff86
  41793a:	loop   0x4178eb
  41793c:	sbb    BYTE PTR [edx],ah
  41793e:	mov    al,0x73
  417940:	adc    ebx,ebp
  417942:	repz popf 
  417944:	mov    edi,DWORD PTR [ecx]
  417946:	(bad)  
  417947:	dec    ebx
  417948:	lods   al,BYTE PTR ds:[esi]
  417949:	mov    eax,0xf2444258
  41794e:	push   0x32
  417950:	dec    esi
  417951:	stos   DWORD PTR es:[edi],eax
  417952:	leave  
  417953:	adc    eax,0xb711024f
  417958:	push   0xffffff8e
  41795a:	mov    ds:0x9013ab51,eax
  41795f:	popf   
  417960:	fnstenv ds:0x14106bb3
  417966:	xchg   edx,eax
  417967:	std    
  417968:	sub    DWORD PTR [edi+0x3d79a858],esi
  41796e:	repnz adc ch,cl
  417971:	xchg   ecx,eax
  417972:	jge    0x4179b6
  417974:	sbb    dh,BYTE PTR [ebp+ebx*2+0x42]
  417978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41797a:	cwde   
  41797b:	out    0xfc,al
  41797d:	ins    BYTE PTR es:[edi],dx
  41797e:	pusha  
  41797f:	outs   dx,BYTE PTR ds:[esi]
  417980:	shr    DWORD PTR [ebx-0x44eb33c6],1
  417986:	imul   ebp,DWORD PTR ds:0x553c827c,0xb8a89d4f
  417990:	sbb    cl,cl
  417992:	popf   
  417993:	aad    0xa8
  417995:	fistp  QWORD PTR [edi]
  417997:	or     dl,dh
  417999:	(bad)  
  41799a:	test   DWORD PTR [esi+ebp*1+0x12],0xda00135b
  4179a2:	mov    ch,0x92
  4179a4:	add    DWORD PTR [esi+0x502577ad],edx
  4179aa:	dec    ebp
  4179ab:	lods   eax,DWORD PTR ss:[esi]
  4179ad:	ret    
  4179ae:	fist   WORD PTR [edi]
  4179b0:	loop   0x417983
  4179b2:	call   0xfc13:0x7cd75015
  4179b9:	es ins BYTE PTR es:[edi],dx
  4179bb:	test   DWORD PTR [eax],esi
  4179bd:	shl    DWORD PTR [edx],cl
  4179bf:	pop    eax
  4179c0:	adc    esi,DWORD PTR [eax-0x545afb]
  4179c6:	mov    ebp,0x719f212c
  4179cb:	cmp    DWORD PTR [ebx+0x45],esp
  4179ce:	ret    
  4179cf:	adc    al,0xc8
  4179d1:	(bad)  
  4179d2:	cld    
  4179d3:	out    0x55,al
  4179d5:	fadd   QWORD PTR [esi-0x72]
  4179d8:	push   0x57
  4179da:	cmp    dl,BYTE PTR [ecx+eiz*4]
  4179dd:	xchg   esi,eax
  4179de:	hlt    
  4179df:	dec    esp
  4179e0:	rcr    BYTE PTR ds:0xc72bfd48,1
  4179e6:	xchg   edx,ecx
  4179e8:	cmp    ch,BYTE PTR [ecx-0x35f4c612]
  4179ee:	sub    BYTE PTR [ebx+edi*2],cl
  4179f1:	pop    esp
  4179f2:	mov    ecx,0x94e3d8d7
  4179f7:	cwde   
  4179f8:	xchg   ebp,eax
  4179f9:	loop   0x4179a1
  4179fb:	cmp    DWORD PTR [ebx+0x57c7ede9],esi
  417a01:	adc    al,0xf3
  417a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a04:	xor    esp,DWORD PTR [ecx+edi*4+0x67]
  417a08:	push   edi
  417a09:	pop    ebx
  417a0a:	mov    edi,0xafda17b2
  417a0f:	(bad)  
  417a10:	out    0x14,eax
  417a12:	mov    bl,0x83
  417a14:	arpl   WORD PTR [ebp+0x284a0689],bx
  417a1a:	fdiv   DWORD PTR [edi]
  417a1c:	out    dx,al
  417a1d:	jne    0x417a37
  417a1f:	pusha  
  417a20:	jmp    0x4179af
  417a22:	push   ebx
  417a23:	cwde   
  417a24:	inc    edi
  417a25:	idiv   DWORD PTR [ecx]
  417a27:	dec    edx
  417a28:	aaa    
  417a29:	out    0x36,eax
  417a2b:	jno    0x417a73
  417a2d:	dec    edx
  417a2e:	jge    0x417a88
  417a30:	sbb    BYTE PTR [edi+0x4a],bl
  417a33:	call   0xd7dabdfc
  417a38:	mov    esi,0x42d07c1b
  417a3d:	mov    esi,0xcd40a737
  417a42:	sar    BYTE PTR [edi],0xce
  417a45:	add    dl,dh
  417a47:	pop    ecx
  417a48:	das    
  417a49:	push   ebx
  417a4a:	push   ebp
  417a4b:	adc    BYTE PTR [esi],0x39
  417a4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a4f:	add    edx,DWORD PTR [ecx-0x56bea1ed]
  417a55:	add    eax,0x25d54a91
  417a5a:	adc    edx,DWORD PTR [edx+0x610fedd0]
  417a60:	pop    esi
  417a61:	adc    BYTE PTR [esi-0x70ff5639],ah
  417a67:	inc    edx
  417a68:	mov    ebx,0x3bbe733c
  417a6d:	pop    es
  417a6e:	leave  
  417a6f:	loop   0x417ad0
  417a71:	stos   DWORD PTR es:[edi],eax
  417a72:	je     0x417a51
  417a74:	cmp    DWORD PTR [ebp+0x41dbe62c],ebx
  417a7a:	rol    DWORD PTR [edx+0x1],0x98
  417a7e:	out    dx,eax
  417a7f:	xchg   DWORD PTR [edx],esp
  417a81:	mov    ds:0xcf9fad57,al
  417a86:	sti    
  417a87:	pusha  
  417a88:	mov    bl,0x60
  417a8a:	sbb    BYTE PTR [edx],dl
  417a8c:	push   ds
  417a8d:	popf   
  417a8e:	imul   edx,DWORD PTR [esi-0xad5ab7b],0x1
  417a95:	cmp    eax,0x8c062026
  417a9a:	xor    eax,0xeaafbbbd
  417a9f:	inc    BYTE PTR [esi+esi*8+0x34aa0b44]
  417aa6:	mov    ds:0xc3f0a298,al
  417aac:	mov    ch,0xd1
  417aae:	dec    esi
  417aaf:	ror    BYTE PTR [edi-0x2],cl
  417ab2:	and    esp,DWORD PTR [eax-0x7d]
  417ab5:	sti    
  417ab6:	xchg   ebp,eax
  417ab7:	adc    ebx,eax
  417ab9:	mov    ds:0x73fa1874,eax
  417abe:	and    DWORD PTR [esi+0x18384eef],eax
  417ac4:	sbb    ebp,DWORD PTR [edi-0x4c1de485]
  417aca:	mov    al,0xef
  417acc:	mov    al,0xa5
  417ace:	or     al,0x14
  417ad0:	mov    dh,0xeb
  417ad2:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  417ad4:	mov    DWORD PTR [edi+0x385db7c0],esp
  417ada:	push   ds
  417adb:	mov    ebx,0xd0b73727
  417ae0:	and    al,0x1
  417ae2:	and    ecx,ecx
  417ae4:	sub    al,0xc1
  417ae6:	mov    dh,0xc4
  417ae8:	call   0x7953810e
  417aed:	rcr    DWORD PTR [edx+0x3f],1
  417af0:	add    edi,ebx
  417af2:	cmp    al,0x9d
  417af4:	dec    ecx
  417af5:	aam    0x43
  417af7:	sub    eax,0x6024ca3c
  417afc:	push   0x5d58da49
  417b01:	jmp    0x417ab4
  417b03:	sub    al,0x99
  417b05:	mov    al,ds:0x54ee973
  417b0a:	ins    DWORD PTR es:[edi],dx
  417b0b:	lahf   
  417b0c:	js     0x417ab7
  417b0e:	(bad)  
  417b0f:	cs mov DWORD PTR gs:[esi+ebx*1-0x7c27e41d],ebp
  417b18:	popa   
  417b19:	out    dx,eax
  417b1a:	push   ds
  417b1b:	cld    
  417b1c:	retf   
  417b1d:	mov    WORD PTR [edx-0x57601343],gs
  417b23:	test   BYTE PTR [edx+0x19],ch
  417b26:	push   edx
  417b27:	mov    BYTE PTR [edx+0x35],bh
  417b2a:	call   0x4ba2:0x766a07e7
  417b31:	cdq    
  417b32:	mov    ebp,0xc6ea4bd0
  417b37:	mov    esp,0xfeed7c15
  417b3c:	adc    bl,al
  417b3e:	pusha  
  417b3f:	shr    DWORD PTR [esi-0x74],cl
  417b42:	in     al,0x5a
  417b44:	test   DWORD PTR [ebp-0x2088f2e1],esi
  417b4a:	bound  ebp,QWORD PTR [edx-0x68b17c8]
  417b50:	jmp    0xcbfc9be4
  417b55:	sub    eax,0x450ce883
  417b5a:	(bad)  
  417b5c:	dec    edi
  417b5d:	mov    ds:0x30280667,eax
  417b62:	mov    al,0xac
  417b64:	rcl    DWORD PTR [edx+ebp*4],cl
  417b67:	push   cs
  417b68:	fcmovnb st,st(7)
  417b6a:	pop    ds
  417b6b:	iret   
  417b6c:	xlat   BYTE PTR ds:[ebx]
  417b6d:	sub    ecx,DWORD PTR [edi]
  417b6f:	out    dx,eax
  417b70:	push   ss
  417b71:	repnz test BYTE PTR [edx+0x5e356930],dl
  417b78:	mov    bh,0xb5
  417b7a:	and    al,0xc6
  417b7c:	adc    BYTE PTR [eax+0x74aba430],al
  417b82:	ret    
  417b83:	ins    DWORD PTR es:[edi],dx
  417b84:	push   ecx
  417b85:	and    eax,0x7ed2e3e0
  417b8a:	imul   ecx,DWORD PTR [edx],0xffffff97
  417b8d:	sbb    ch,0x18
  417b90:	dec    ebp
  417b91:	dec    eax
  417b92:	push   ebx
  417b93:	push   ebx
  417b94:	lea    eax,cs:[edi+0x63dac1eb]
  417b9b:	in     eax,dx
  417b9c:	(bad)  
  417b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b9f:	push   cs
  417ba0:	cli    
  417ba1:	clc    
  417ba2:	pop    ecx
  417ba3:	(bad)  
  417ba5:	push   ss
  417ba6:	mov    bl,0x83
  417ba8:	sbb    DWORD PTR ds:0x28ceadf,esi
  417bae:	enter  0x2f93,0x65
  417bb2:	add    ah,BYTE PTR [ecx+0x7f]
  417bb5:	mov    ebx,0xe7ce630b
  417bba:	dec    eax
  417bbb:	stos   BYTE PTR es:[edi],al
  417bbc:	push   cs
  417bbd:	out    0xc4,al
  417bbf:	mov    al,0x91
  417bc1:	lea    eax,[edx+0x6d3a16f6]
  417bc7:	out    dx,al
  417bc8:	mov    eax,ds:0x4bcbd546
  417bcd:	mov    DWORD PTR [edi],0xdd80bf1b
  417bd3:	fs leave 
  417bd5:	xchg   esp,eax
  417bd6:	fsub   QWORD PTR [edi+0x339c89b5]
  417bdc:	pop    edi
  417bdd:	add    al,0xc
  417bdf:	pusha  
  417be0:	call   0xecb9:0x3a98339f
  417be7:	push   edx
  417be8:	nop
  417be9:	fidivr DWORD PTR [ebx+edi*2-0x37009b5f]
  417bf0:	xchg   BYTE PTR ds:0xa309bd4b,bl
  417bf6:	in     eax,0xff
  417bf8:	push   edi
  417bf9:	cmp    eax,0xeede723c
  417bfe:	push   ds
  417bff:	icebp  
  417c00:	sub    eax,ecx
  417c02:	and    eax,0xd4af45de
  417c07:	and    eax,0xa0314f99
  417c0c:	ror    DWORD PTR [eax+0xcad81c9],cl
  417c12:	xchg   esi,eax
  417c13:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  417c15:	addr16 jbe 0x417bab
  417c18:	mov    eax,ds:0xbe5785ce
  417c1d:	mov    ebp,0x6472a6b4
  417c22:	je     0x417c00
  417c24:	iret   
  417c25:	popa   
  417c26:	push   0x75
  417c28:	retf   
  417c29:	add    BYTE PTR [eax+0x36],ch
  417c2c:	loope  0x417c41
  417c2e:	loop   0x417c5d
  417c30:	mov    cl,0x18
  417c32:	xchg   edi,eax
  417c33:	xchg   BYTE PTR [edx+eax*8],bh
  417c36:	js     0x417c5a
  417c38:	jnp    0x417c37
  417c3a:	mov    dh,0x53
  417c3c:	dec    esp
  417c3d:	push   esp
  417c3e:	add    al,0x39
  417c40:	stc    
  417c41:	add    BYTE PTR [edx+0x8fb1957],0xa4
  417c48:	xor    DWORD PTR ds:[ecx+0x3f2399dc],edi
  417c4f:	xor    DWORD PTR [edx-0x19],ecx
  417c52:	push   ebx
  417c53:	out    dx,al
  417c54:	xchg   edx,eax
  417c55:	mov    al,ds:0x3480e033
  417c5a:	mov    esp,0xc43357de
  417c5f:	daa    
  417c60:	js     0x417c87
  417c62:	mov    ebx,0xd1a4e81a
  417c67:	mov    ah,0xe5
  417c69:	jo     0x417bf9
  417c6b:	iret   
  417c6c:	sub    eax,0x34206782
  417c71:	sbb    al,0x23
  417c73:	imul   edx,DWORD PTR [edx],0xffffffe5
  417c76:	push   edx
  417c77:	xchg   edi,esp
  417c79:	or     ecx,edi
  417c7b:	adc    eax,0xe9e3018a
  417c80:	push   ecx
  417c81:	mov    dl,0xf9
  417c83:	xor    eax,0x4c629ee
  417c88:	dec    esp
  417c89:	shl    BYTE PTR [esi],0x4
  417c8c:	cld    
  417c8d:	jmp    0x89c5b989
  417c92:	mov    al,0x56
  417c94:	stos   DWORD PTR es:[edi],eax
  417c95:	inc    ebp
  417c96:	pop    ebp
  417c97:	imul   esi,esi,0xf666435d
  417c9d:	aaa    
  417c9e:	inc    edi
  417c9f:	std    
  417ca0:	stos   DWORD PTR es:[edi],eax
  417ca1:	inc    esi
  417ca2:	mov    DWORD PTR [ebx],ebx
  417ca4:	mov    ch,0x61
  417ca6:	pop    edi
  417ca7:	sbb    ebp,DWORD PTR [eax-0x9]
  417caa:	xor    DWORD PTR [ebp-0x59764597],esi
  417cb0:	jnp    0x417c66
  417cb2:	stos   DWORD PTR es:[edi],eax
  417cb3:	dec    edi
  417cb4:	adc    dh,BYTE PTR [ecx]
  417cb6:	push   ss
  417cb7:	inc    eax
  417cb8:	stos   BYTE PTR es:[edi],al
  417cb9:	pusha  
  417cba:	pop    ebx
  417cbb:	mov    esp,esi
  417cbd:	(bad)  
  417cbe:	pop    ebp
  417cbf:	mov    ah,0xdb
  417cc1:	sub    BYTE PTR [edi],0xe3
  417cc4:	add    edi,edx
  417cc6:	push   esp
  417cc7:	loope  0x417c56
  417cc9:	mov    cl,0xd1
  417ccb:	jb     0x417c84
  417ccd:	nop
  417cce:	fmul   QWORD PTR [ebp-0x4b]
  417cd1:	pop    ebx
  417cd2:	lds    edi,FWORD PTR [ebx+edx*4]
  417cd5:	push   0x16bdb612
  417cda:	mov    ds:0x11eef634,eax
  417cdf:	sub    al,0x1c
  417ce1:	sbb    ebp,DWORD PTR [esi]
  417ce3:	xor    eax,0x9cab1e6c
  417ce8:	mov    bl,0xa8
  417cea:	push   0x51
  417cec:	mov    bh,0x26
  417cee:	and    ah,dh
  417cf0:	inc    esi
  417cf1:	and    dl,BYTE PTR [esi]
  417cf3:	je     0x417cb9
  417cf5:	and    ah,BYTE PTR [esi+esi*8+0x305a38ed]
  417cfc:	mov    ebx,ecx
  417cfe:	and    al,0xd2
  417d00:	mov    al,0xd4
  417d02:	mov    ebx,0xdc18ab1c
  417d07:	pusha  
  417d08:	pop    ebp
  417d09:	or     ah,0x84
  417d0c:	mov    al,0x9f
  417d0e:	adc    al,0xde
  417d10:	fisub  WORD PTR [ecx]
  417d12:	jp     0x417d62
  417d14:	dec    ebp
  417d15:	xchg   edi,eax
  417d16:	jae    0x417d87
  417d18:	aaa    
  417d19:	dec    ecx
  417d1a:	dec    ecx
  417d1b:	jb     0x58409217
  417d21:	mov    ch,0x3d
  417d23:	test   DWORD PTR [esi+0x6],esi
  417d26:	pop    esp
  417d27:	mov    ds:0xc20859d1,eax
  417d2c:	loop   0x417da7
  417d2e:	mov    al,ds:0xc2983baf
  417d33:	call   0x18d8c6f7
  417d38:	xchg   ecx,eax
  417d39:	out    0xcb,al
  417d3b:	sub    ebp,ebp
  417d3d:	les    ebx,FWORD PTR [ebx-0x3073cf80]
  417d43:	outs   dx,BYTE PTR ds:[esi]
  417d44:	mov    eax,ds:0x32996548
  417d49:	sar    BYTE PTR [edi],1
  417d4b:	test   esi,ebp
  417d4d:	inc    edi
  417d4e:	jbe    0x417d9c
  417d50:	dec    edi
  417d51:	jle    0x417d5c
  417d53:	mov    edx,es
  417d55:	jo     0x417d94
  417d57:	adc    cl,BYTE PTR [edi+0x59]
  417d5a:	stos   BYTE PTR es:[edi],al
  417d5b:	jns    0x417dcb
  417d5d:	popf   
  417d5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d5f:	inc    edi
  417d60:	test   eax,0xced38ce2
  417d65:	pusha  
  417d66:	shl    DWORD PTR [ebp-0x39f8146a],1
  417d6c:	pusha  
  417d6d:	pop    edx
  417d6e:	ror    DWORD PTR [ebx-0x66],1
  417d71:	call   0x6da:0xd8cb001c
  417d78:	and    al,0x7b
  417d7a:	loop   0x417da6
  417d7c:	mov    WORD PTR [edi+0x2c],es
  417d7f:	mov    eax,0x3358fcc1
  417d84:	outs   dx,BYTE PTR ds:[esi]
  417d85:	push   0x58
  417d87:	add    edi,DWORD PTR [edi+0x44]
  417d8a:	das    
  417d8b:	or     al,0xe5
  417d8d:	mov    eax,ds:0x30dc5d9f
  417d92:	dec    eax
  417d93:	ficomp WORD PTR [esi-0x8]
  417d96:	(bad)  [eax-0x57]
  417d99:	push   cs
  417d9a:	aad    0xdb
  417d9c:	repnz adc eax,0x15b3e6bb
  417da2:	test   eax,0x6fe41f3f
  417da7:	mov    eax,0xa57df602
  417dac:	fcomi  st,st(6)
  417dae:	ins    BYTE PTR es:[edi],dx
  417daf:	cmp    esp,esp
  417db1:	xchg   esp,eax
  417db2:	lock inc ebx
  417db4:	adc    ch,BYTE PTR [esi-0x18]
  417db7:	ret    
  417db8:	cli    
  417db9:	test   al,0x90
  417dbb:	add    DWORD PTR [eax],ebx
  417dbd:	sbb    DWORD PTR [edx+edi*4-0x36],0xffffffbe
  417dc2:	fisttp DWORD PTR [ebx*2+0x46bf6f6b]
  417dc9:	sub    eax,0xb5e2d3fd
  417dce:	sbb    al,0xd4
  417dd0:	mov    ah,0x8f
  417dd2:	inc    ebp
  417dd3:	sbb    al,0xbf
  417dd5:	xchg   edx,eax
  417dd6:	dec    ecx
  417dd7:	repnz fwait
  417dd9:	sbb    al,0x3b
  417ddb:	vminss xmm7,xmm2,DWORD PTR [esi-0xab6e7a5]
  417de3:	shl    BYTE PTR [edx+0x27],0x8
  417de7:	fs bnd jmp 0x417e1b
  417deb:	aaa    
  417dec:	inc    edx
  417ded:	mov    ds,WORD PTR [ebx]
  417def:	xor    eax,0x1be74f87
  417df4:	sbb    esp,DWORD PTR [edi]
  417df6:	xchg   esi,eax
  417df7:	(bad)  
  417df8:	mov    ds:0xeb91a10a,al
  417dfd:	bound  ebp,QWORD PTR [eax+0x2189eec]
  417e03:	dec    ebp
  417e04:	mov    esi,DWORD PTR [ebp-0x4]
  417e07:	call   esi
  417e09:	mov    DWORD PTR [ebp-0x3c],eax
  417e0c:	cmp    DWORD PTR [ebp-0x3c],0x57
  417e10:	jne    0x417e1e
  417e12:	mov    edx,DWORD PTR [ebp-0x24]
  417e15:	push   edx
  417e16:	call   0x401000
  417e1b:	add    esp,0x4
  417e1e:	xor    eax,eax
  417e20:	pop    esi
  417e21:	mov    esp,ebp
  417e23:	pop    ebp
  417e24:	ret    
  417e25:	push   ebp
  417e26:	mov    ebp,esp
  417e28:	sub    esp,0x124
  417e2e:	xor    eax,eax
  417e30:	mov    esp,ebp
  417e32:	pop    ebp
  417e33:	ret    
  417e34:	push   ebp
  417e35:	mov    ebp,esp
  417e37:	sub    esp,0x2c
  417e3a:	push   ebx
  417e3b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  417e42:	mov    DWORD PTR [ebp-0xc],0x0
  417e49:	mov    DWORD PTR [ebp-0x20],0x1
  417e50:	mov    DWORD PTR [ebp-0x10],0x0
  417e57:	mov    eax,DWORD PTR [ebp+0xc]
  417e5a:	mov    DWORD PTR [ebp-0x1c],eax
  417e5d:	mov    DWORD PTR [ebp-0x18],0x0
  417e64:	mov    DWORD PTR [ebp-0x8],0x0
  417e6b:	mov    DWORD PTR [ebp-0x24],0x0
  417e72:	mov    ecx,DWORD PTR [ebp-0x4]
  417e75:	sub    ecx,0x1
  417e78:	mov    DWORD PTR [ebp-0x4],ecx
  417e7b:	mov    edx,DWORD PTR [ebp+0x8]
  417e7e:	mov    DWORD PTR [ebp-0x10],edx
  417e81:	mov    DWORD PTR [ebp-0x28],0x1
  417e88:	mov    eax,DWORD PTR [ebp-0x4]
  417e8b:	add    eax,0x2
  417e8e:	mov    DWORD PTR [ebp-0x4],eax
  417e91:	mov    ecx,DWORD PTR [ebp-0x1c]
  417e94:	add    ecx,DWORD PTR [ebp-0x4]
  417e97:	mov    dl,BYTE PTR [ecx+0x1]
  417e9a:	mov    BYTE PTR [ebp-0x11],dl
  417e9d:	mov    eax,DWORD PTR [ebp-0x4]
  417ea0:	add    eax,0x1
  417ea3:	mov    DWORD PTR [ebp-0x4],eax
  417ea6:	mov    cl,BYTE PTR [ebp-0x11]
  417ea9:	mov    BYTE PTR [ebp-0x29],cl
  417eac:	push   edx
  417ead:	pop    ebx
  417eae:	mov    ecx,ebx
  417eb0:	mov    edx,DWORD PTR [ebp-0x10]
  417eb3:	add    edx,DWORD PTR [ebp-0x4]
  417eb6:	mov    al,BYTE PTR [ebp-0x29]
  417eb9:	mov    BYTE PTR [edx],al
  417ebb:	mov    ebx,esi
  417ebd:	mov    ecx,DWORD PTR [ebp+0x14]
  417ec0:	add    ecx,DWORD PTR [ebp-0x8]
  417ec3:	movzx  edx,BYTE PTR [ecx]
  417ec6:	mov    DWORD PTR [ebp-0xc],edx
  417ec9:	mov    eax,DWORD PTR [ebp-0x8]
  417ecc:	mov    ecx,DWORD PTR [ebp-0x28]
  417ecf:	add    eax,ecx
  417ed1:	mov    DWORD PTR [ebp-0x8],eax
  417ed4:	mov    eax,DWORD PTR [ebp-0x8]
  417ed7:	shr    eax,0x3
  417eda:	mov    ecx,0x1
  417edf:	sub    ecx,eax
  417ee1:	mov    DWORD PTR [ebp-0x20],ecx
  417ee4:	shr    eax,cl
  417ee6:	mov    edx,DWORD PTR [ebp-0x8]
  417ee9:	imul   edx,DWORD PTR [ebp-0x20]
  417eed:	mov    DWORD PTR [ebp-0x8],edx
  417ef0:	shl    ebx,0x3
  417ef3:	mov    eax,DWORD PTR [ebp-0x10]
  417ef6:	add    eax,DWORD PTR [ebp-0x4]
  417ef9:	movzx  ecx,BYTE PTR [eax]
  417efc:	add    ecx,DWORD PTR [ebp-0xc]
  417eff:	mov    edx,DWORD PTR [ebp-0x10]
  417f02:	add    edx,DWORD PTR [ebp-0x4]
  417f05:	mov    BYTE PTR [edx],cl
  417f07:	mov    eax,DWORD PTR [ebp-0x4]
  417f0a:	sub    eax,0x2
  417f0d:	mov    DWORD PTR [ebp-0x4],eax
  417f10:	mov    ecx,DWORD PTR [ebp-0x4]
  417f13:	cmp    ecx,DWORD PTR [ebp+0x10]
  417f16:	jl     0x417e88
  417f1c:	pop    ebx
  417f1d:	mov    esp,ebp
  417f1f:	pop    ebp
  417f20:	ret    
  417f21:	int3   
  417f22:	jmp    DWORD PTR ds:0x418008
